jnp
iret
out
lods
or
push
xchg
push
add
rcll
jge
xchg
adc
sbb
add
and
shrl
sbb
pop
cmpsl
outsb
cmp
ja
enter
outsl
mov
xor
pushf
ss
mov
ud1
imul
cmp
xor
ds
fisttps
inc
addb
nop
in
nop
cwtl
repnz
testl
adc
jae
add
sbb
lea
rolb
xchg
int
inc
pusha
pop
add
and
push
jne
sub
in
mov
jge
repz
rcrb
ret
pop
cld
mov
ret
dec
add
imul
bound
inc
ret
jmp
pop
mov
hlt
mov
pop
mov
xchg
or
out
hlt
gs
xlat
out
into
push
sbb
mov
outsl
and
loopne
sub
fs
jae
call
mov
mov
sub
imul
push
mov
test
inc
cld
pop
int3
push
sti
cmp
pop
hlt
dec
out
orl
ficoml
and
push
mov
add
mov
or
or
std
jl
add
push
and
mov
mov
jmp
jnp
sti
xchg
aam
push
inc
inc
fidivrl
aad
jne
into
xor
push
mov
adc
and
sub
push
not
ret
mov
and
in
jl
jo
inc
inc
add
or
adc
xchg
fs
imul
xchg
mov
dec
sub
xchg
xchg
jmp
mov
ret
shlb
insb
popa
sub
mov
adc
add
add
add
pusha
lea
jmp
pushl
movb
ror
pushf
pusha
jmp
imul
repz
mov
and
jbe
jp
fwait
sahf
sbb
fnsave
jmp
jle
inc
shll
fnstenv
sahf
lock
pop
inc
dec
adc
das
mov
or
mov
jl
adc
jbe
sub
fs
pop
push
dec
sub
nop
sbb
and
cmp
lock
mov
jmp
jl
cwtl
pusha
inc
jns
dec
mov
loop
into
ret
inc
rorl
sbb
mov
shlb
push
jge
push
enter
add
shll
mov
and
or
sbb
jge
mov
loop
out
cmpb
xor
mov
adc
sbb
sub
sbb
enter
jno
loop
mov
pusha
sub
out
xor
mov
mov
and
into
loopne
fsubrs
dec
mov
and
rep
movzbw
movsbw
jmp
cmc
call
cmp
sahf
sbb
enter
xchg
call
js
xchg
xor
sub
hlt
bound
insb
pop
mov
scas
call
jnp
pop
push
fildl
and
lret
es
add
scas
mov
sbb
xor
out
lea
or
dec
dec
mov
jecxz
sub
jge
xor
push
mov
stos
mov
or
xchg
nop
dec
push
push
movsb
lret
adc
ljmp
push
mov
ss
psadbw
or
inc
aas
loopne
cltd
lea
dec
mov
fs
sub
test
mov
or
cmp
imul
fistpll
and
pusha
push
lea
jae
jmp
movb
lea
je
sub
pusha
bts
mov
bsf
jmp
stc
pusha
cmp
call
lea
lea
movl
mov
call
pop
popa
les
jno
jg
stos
push
imul
mulb
ror
lock
int3
mov
pop
jns
or
inc
sub
aaa
ret
push
test
pop
loope
filds
lcall
xchg
mov
mov
pop
gs
adc
dec
push
jo
rcl
mov
pop
rcrb
ds
and
pop
push
in
orb
lcall
jo
add
xor
cltd
push
pop
sar
xor
sub
into
xchg
inc
rcrb
sub
mov
sub
iret
jnp
mov
lcall
push
pop
mov
fstpt
nop
imul
pop
jno
push
or
pop
mov
pusha
sbb
fisttps
mov
dec
sub
shrl
test
insl
jo
enter
jo
xchg
sbb
mov
push
dec
imul
sbb
and
adc
pop
sbb
mov
rclb
xor
inc
add
jb
mov
ret
div
daa
adc
popf
leave
fstpt
push
stos
xor
jmp
jecxz
inc
dec
and
mov
lcall
mov
cmp
lahf
andl
lret
mov
mov
sbb
clc
sub
pop
cld
jno
xor
push
mov
stos
or
cmp
add
aas
stos
cmc
mov
inc
adcl
sbb
cld
jnp
push
or
out
cs
push
icebp
mov
dec
mov
and
inc
xor
arpl
test
xchg
into
xor
je
pop
insl
mov
push
popf
and
add
push
stc
ss
push
push
ret
in
pop
inc
sub
fsubs
mov
inc
aas
aas
cmp
add
and
ljmp
incb
dec
loopne
xor
movsl
jo
xor
incl
mov
leave
ret
mov
mov
mov
leave
lds
push
mov
not
jmp
add
add
push
pushf
pushfw
popw
inc
call
pushf
mov
bt
bt
cmc
mov
cmc
call
jecxz
pop
mov
loop
push
loope
and
cmc
jge
pop
push
in
jp
cmp
pop
es
mov
adcl
adc
js
arpl
xlat
xor
cmp
and
stc
pop
jb
mov
test
dec
push
dec
lods
loopne
lea
inc
and
or
lock
movl
mov
lcall
loope
add
push
test
mov
cwtl
xor
xchg
add
push
cmp
push
lcall
mov
xorb
push
shlb
push
mov
mov
add
cmp
lret
inc
jmp
xchg
sbb
jmp
jle
int3
cmp
test
shlb
cmp
scas
push
jmp
xor
cmp
mov
inc
push
ficomps
sarb
mov
jmp
jecxz
mov
add
jmp
sub
out
add
fsubr
sub
inc
stc
mov
mov
inc
inc
inc
imul
cmp
mov
inc
add
les
jmp
mov
add
ret
jmp
insb
inc
mov
jmp
bound
aam
inc
pop
in
mov
lret
inc
xchg
sub
fidivrl
scas
sbb
dec
xor
loopne
push
add
add
sbb
add
jp
jmp
arpl
dec
cmp
data16
jns
inc
imul
push
jmp
lcall
jmp
scas
test
cmp
mov
inc
mov
arpl
cmp
dec
mov
dec
cmp
mov
jmp
ljmp
jmp
fadd
cmp
loopne
jmp
jnp
sbb
mov
inc
rorb
xchg
jmp
inc
add
mov
sub
loopne
add
jne
sub
push
scas
push
add
add
mov
jns
inc
dec
mov
push
fucompp
cmp
inc
shr
mov
add
jmp
or
jmp
pushf
add
movsb
jmp
push
dec
xchg
jmp
fadds
fsubrp
mov
inc
add
add
cmp
mov
jmp
cmpl
jmp
cld
mov
mov
dec
xor
popa
data16
push
shr
or
inc
jmp
adc
inc
call
lea
ja
pusha
jmp
inc
int
xor
int3
sub
mov
imul
popl
xor
cli
loope
pop
imull
outsl
int
mov
jmp
aad
add
mov
cmc
ret
insl
push
pop
push
xchg
nop
ljmp
adc
stc
pushf
scas
xchg
jne
mov
and
add
pusha
in
mul
jge
outsl
enter
fst
lahf
scas
gs
cmp
fwait
pushf
repz
je
sbb
pushl
mov
sbb
push
xchg
pop
or
mov
mov
mov
or
test
add
jmp
mov
in
inc
cwtl
inc
aam
ret
jl
sti
addr16
or
das
cmpsl
inc
subb
or
aaa
and
dec
mov
mov
push
das
add
mov
inc
lods
xchg
mov
jnp
inc
aad
cltd
jb
pop
in
jge
sbb
lods
nop
test
inc
and
rcl
or
pusha
pop
sbb
jnp
push
xlat
aam
xor
xchg
cs
mov
dec
inc
pop
jmp
lea
jae
jbe
pusha
push
movb
lea
jne
jmp
test
mov
jmp
test
cmpb
pushf
lea
jne
neg
movsbw
sub
shld
neg
cmp
shl
mov
neg
rcl
adc
add
stc
mov
test
jmp
mov
movb
ror
bt
bt
jmp
pushf
pushf
lea
jne
push
jmp
call
repz
movsb
mov
ja
in
aaa
out
arpl
in
pop
testb
pop
fbstp
jg
dec
shrb
push
fisttps
addr16
cld
mov
pop
xchg
addr16
pop
pop
inc
out
nop
adc
rorl
jg
je
and
dec
push
dec
and
xlat
jbe
inc
mov
loop
pop
mov
sbb
stos
dec
fwait
adc
sub
sbb
imul
clc
clc
mov
bsr
cmp
mov
clc
cmp
push
pushf
push
lea
jbe
or
mov
bswap
shld
add
xor
adc
jmp
pusha
lea
je
bswap
lea
call
pusha
xor
fistpll
push
jp
dec
jge
xchg
std
pusha
ficomps
sbb
loop
push
icebp
pop
push
out
pop
gs
pop
daa
adc
call
sahf
add
dec
shr
cs
roll
inc
cmpsb
out
repz
mov
add
mov
ret
bound
cmpsb
mov
cmp
ret
daa
lds
push
mov
mov
les
and
stos
insl
mov
dec
mov
push
mov
rorl
mov
leave
aaa
jg
fsubl
int
iret
in
jne
cwtl
push
or
cmp
jmp
cmpsl
adc
in
fwait
mov
outsb
sbb
rorl
sub
add
dec
pop
stc
xchg
mov
stc
inc
out
lret
xchg
ret
mov
out
loopne
insl
xor
jmp
mov
sbb
mov
pushl
jmp
push
pusha
push
lea
call
call
pusha
push
mov
not
lea
call
push
push
push
lea
call
push
pushf
pushf
pushf
lea
jne
movzbw
pushf
lea
mov
mov
mov
lea
jmp
pusha
lea
call
pushf
jmp
btc
bt
bts
mov
stc
add
shr
movl
sub
mov
jmp
movl
call
inc
cmp
xchg
and
mov
dec
mov
clc
mov
and
shl
mov
stc
sub
pushf
pushf
movb
rep
lea
mov
movw
mov
mov
pushf
pushf
lea
jmp
pop
ret
cltd
loopne
cmp
and
and
sbb
mov
lcall
bsf
imul
pop
xor
mov
or
mov
add
daa
mov
lods
into
lods
push
push
xor
sbb
sub
bound
mov
or
fsub
cmpsl
stos
scas
mov
inc
shrb
jns
xor
adc
std
push
ret
lea
test
push
cmp
inc
lret
sub
popa
cs
pop
and
lock
pusha
test
xchg
mov
sti
dec
mov
jle
jns
xor
inc
rol
adc
xchg
xor
mov
dec
movb
inc
inc
mov
pushf
stc
clc
cmp
xchg
pop
bsr
sub
mov
pusha
pushf
sub
jmp
setae
mov
jmp
movw
pushf
pusha
movl
movw
push
lea
jmp
jecxz
dec
fsub
or
xchg
push
sbb
in
fldenv
xchg
lock
sbb
or
das
mov
xor
push
jno
mov
les
in
pop
xor
mov
sbb
mov
repnz
pop
jmp
out
mov
test
inc
xor
and
dec
cmpl
dec
cmpsb
xor
push
pop
nop
sbb
in
jno
mov
into
in
insl
movsb
xchg
incb
add
mov
in
mov
or
add
sub
push
mov
adc
es
mov
movsl
mov
sar
push
inc
fiadds
mov
xchg
mov
xchg
push
movl
aad
adc
lods
jp
mov
pop
mov
dec
mov
dec
cs
xchg
xchg
outsb
lods
jo
ret
and
mov
push
cmp
test
xorb
ret
je
dec
or
and
xchg
arpl
test
lods
clc
lea
xor
add
push
jbe
loope
ret
mov
hlt
notb
adc
fwait
sbb
lahf
mov
aaa
imul
lahf
xchg
jecxz
lods
xorb
lods
pop
sub
cmp
inc
inc
dec
or
dec
mov
mov
cld
lret
cwtl
ja
jo
shll
test
cwtl
pop
lods
addl
lods
push
iret
bound
mov
out
xchg
arpl
imul
lret
adc
cwtl
orb
sbb
fsts
cmp
or
add
inc
and
jg
stc
fimuls
cli
push
add
aaa
adc
fisttps
push
arpl
inc
cmp
mov
push
out
loope
lock
add
imul
adc
lock
mov
lods
jmp
dec
cmp
pshufw
pop
sub
rcr
fildll
dec
mov
and
or
outsl
aad
mov
adc
pop
cld
movsl
mov
pop
mov
mov
pop
mov
pop
cld
xor
lock
loop
push
fnstcw
fdivrs
cmp
sbb
ret
push
sti
ret
daa
sub
enter
push
add
out
into
repz
ljmp
mov
sbb
push
xchg
aaa
adc
rcr
mov
lcall
iret
or
sbb
pop
or
xchg
xchg
clc
and
imul
adcb
mov
sub
sahf
es
and
fwait
clc
jae
and
add
sub
nop
or
es
xchg
cltd
or
ja
addb
mov
and
sbb
movsb
jne
addb
mov
hlt
push
leave
cmp
icebp
xchg
inc
in
mov
idivb
sar
xor
imul
cltd
dec
xchg
repnz
insl
pop
sbb
mov
dec
xorb
ret
icebp
clc
inc
mov
imull
stc
inc
dec
scas
push
cltd
dec
cwtl
sbb
cmp
cs
popa
stos
add
jp
mov
push
fbstp
xor
divb
pop
cmp
add
test
rorb
push
pop
dec
test
sub
pop
jmp
mov
test
add
mov
push
aas
jb
or
mov
and
or
out
dec
cmp
mov
add
or
inc
cmp
xchg
add
outsb
dec
repz
fildl
into
and
dec
jno
lcall
jecxz
leave
pop
sbb
fisubrl
dec
out
mull
push
call
inc
fstpl
gs
and
cs
loopne
lods
xlat
inc
cmovno
arpl
shl
lahf
xchg
xchg
adc
mov
xchg
nop
dec
mov
jmp
xor
sub
clc
or
jmp
rep
bswap
movw
not
mov
push
mov
mov
lea
jmp
cmpb
jmp
lea
ja
pusha
call
test
icebp
sbb
popa
sub
shll
mov
imulb
mov
and
xchg
and
cltd
pusha
and
lea
jle
xlat
xor
pop
xchg
inc
popf
lret
xchg
xor
push
cmp
mov
imul
push
fwait
or
dec
or
out
and
iret
push
dec
sbb
jmp
es
cmpb
pop
rep
rol
cmp
les
cwtl
mov
pop
dec
mov
adc
pushf
pushf
lea
jae
call
add
mov
sbb
setnp
mov
pushf
call
lea
jb
cmc
bt
cmpb
push
lea
jne
bt
add
bsf
pushf
mov
push
add
push
push
pushf
movzwl
neg
stc
adc
mov
pusha
add
test
test
mov
call
add
mov
pushf
cmp
push
call
pusha
inc
inc
setbe
not
push
call
lea
jne
rol
bsr
adc
mov
pusha
cmp
jmp
sbb
cmpsb
int
xlat
popf
call
xchg
ds
or
dec
push
jl
and
cli
bound
addr16
mov
es
cwtl
mov
test
jl
insb
sbb
mov
mov
jne
cmp
es
dec
pop
hlt
jg
sub
in
fistpll
mov
imul
pop
outsl
cmp
cmpb
imulb
imul
lea
ja
test
bt
sub
movsbw
bts
xor
add
call
lea
je
clc
push
call
pushl
lea
call
pushf
lea
jae
pushf
cmp
pushf
pushl
sub
pusha
pushf
movb
call
or
add
inc
adc
jne
or
add
out
add
in
or
add
sub
movsl
aam
xor
aas
call
mov
mov
scas
fwait
inc
mov
imul
fiadds
push
popw
cmpsb
mov
adc
pop
cmp
push
lahf
xchg
lds
mov
lods
pushl
xor
jb
fs
stos
xor
insb
subl
das
aaa
insb
insl
arpl
lahf
dec
adc
mov
rorl
push
pop
dec
int3
xchg
and
push
add
repnz
dec
sub
jae
bound
xlat
mov
fcmovnu
xorl
in
xchg
pop
mov
dec
mov
xchg
lods
lds
cmp
push
mov
ja
pop
xorl
daa
int
hlt
nop
js
daa
add
scas
ret
scas
or
ja
test
sbb
mov
iret
ss
rclb
mov
aad
jp
sub
dec
mov
ja
in
int3
cmp
decb
leave
sbb
xchg
ljmp
je
lret
inc
les
pop
in
les
fwait
adc
pop
cld
subb
xchg
iret
mov
adc
dec
icebp
xchg
mov
xchg
ror
nop
sub
leave
push
dec
in
sbb
mov
add
xor
cmp
sub
hlt
mov
xchg
or
das
mov
add
cs
aad
setne
subl
gs
xchg
xchg
lods
addl
jno
mov
mov
dec
lods
and
pop
shlb
sub
adc
dec
pop
data16
std
mov
push
or
stos
xor
test
fisubl
iret
and
repz
mov
movsb
rol
jmp
mov
pop
lahf
call
jmp
ds
test
out
or
call
sub
loopne
in
cmpsb
mov
xchg
sbbl
out
xor
clc
repnz
push
add
mov
xor
mov
out
dec
dec
aad
arpl
repnz
pop
scas
iret
int
mov
shrb
push
dec
push
add
fists
insl
out
stos
mov
and
ret
jle
cmp
mov
testb
test
add
lea
jg
not
jne
pusha
pusha
lea
call
pusha
pushf
cmp
call
adc
pushf
lea
jmp
stc
test
pushl
popl
jmp
mov
rolb
rcll
mov
aam
mov
popf
subb
leave
clc
filds
mov
sub
jne
ret
outsb
dec
sbb
xor
loope
mov
out
or
pop
adc
xchg
dec
cmpsl
mov
mov
sarl
sti
stos
pop
and
jge
rcl
pop
das
ss
sub
adc
dec
shl
testb
arpl
sbb
mov
and
fisttpl
pop
jmp
xor
in
call
rep
pop
mov
pushf
mov
pushf
movl
lea
jmp
sub
push
movzbw
pushf
add
add
rol
clc
push
pusha
mov
sub
stc
mov
pushf
movw
repnz
jmp
out
add
mov
stc
jbe
leave
adc
cmp
jns
in
mov
xchg
xchg
outsb
xor
sbb
xchg
popa
pop
push
cs
outsb
mov
mov
mov
dec
cmp
pop
loope
mov
lock
aad
and
mov
rcrl
fsubrl
fisttpl
lods
clc
into
ret
push
dec
adc
insb
and
test
xor
aam
add
movsb
insl
dec
popa
insl
dec
dec
mov
cs
cwtl
inc
inc
jmp
jb
push
mov
loope
xlat
xchg
xor
sbb
mov
push
dec
in
lret
subl
and
jg
cli
icebp
xchg
daa
int3
clc
lcall
aad
xchg
fs
pushf
cld
out
arpl
sahf
mov
inc
mov
push
scas
cwtl
xchg
mov
ds
into
mov
stos
dec
lcall
das
insl
mov
dec
mov
movsb
in
jl
dec
pushl
fiaddl
push
adc
jge
xor
jb
mov
sub
cmc
mov
fstpl
mov
mov
insb
sbb
mov
in
daa
dec
sub
sub
sub
mov
adc
inc
movsb
sar
js
sub
lret
dec
aas
pop
dec
mov
cmp
lea
jne
lea
mov
call
sub
int3
sub
cmp
in
pusha
cmp
cmp
enter
xchg
pop
hlt
inc
push
cmp
imul
cmp
pop
mov
dec
mov
or
test
insl
outsl
shrb
add
sbb
sub
sbb
aam
push
clc
dec
mov
lahf
repnz
mov
js
clc
sub
pushf
pusha
rep
not
mov
movb
lea
jmp
lea
jne
pusha
call
and
xchg
icebp
xor
xor
jno
bound
sbb
mov
cmp
inc
in
push
aad
pop
push
inc
mov
lret
lret
dec
cmp
sbb
fwait
mov
xchg
jo
popa
movsl
push
push
in
cli
dec
shlb
shrl
push
dec
adc
jns
lret
sub
movsb
jbe
setno
inc
mov
lahf
mov
decl
mov
mov
inc
xor
clc
push
add
push
lea
jmp
cmp
push
pushf
jmp
je
dec
cltd
cwtl
fadds
and
jbe
sbbl
and
push
sbb
std
shr
jmp
cmpsb
ss
fistps
lock
scas
orl
mov
sub
cmp
sub
fidivs
cmp
jp
out
pop
cmp
out
shrb
push
dec
adc
push
xlat
je
fwait
test
adc
in
mov
xor
clc
xchg
add
sub
and
or
push
dec
mov
pop
ss
and
push
not
pusha
test
mov
das
sub
not
lea
movb
mov
push
pushf
mov
setl
mov
jmp
shr
pusha
pushl
test
bt
cmp
pushf
lea
je
pushf
stc
pusha
cmp
push
movb
mov
lea
je
stc
push
cmp
call
add
pusha
pusha
call
pushl
jmp
bt
pushf
pushf
mov
cmp
call
pushl
pusha
jmp
loopne
xor
div
sbb
shrl
cmpsb
imul
aas
mov
pop
mov
pop
or
jle
fsts
iret
mov
imul
fistps
aad
sbb
dec
xchg
fadd
push
or
mov
testb
and
pop
xor
enter
ret
jle
testl
mov
jb
outsl
mov
lds
or
add
iret
sbb
aaa
or
out
test
mov
jns
addr16
xchg
mov
call
adc
mov
xchg
jae
movsb
xor
movsl
and
jnp
ljmp
mov
mov
mov
sbb
lods
je
cmp
cmpsb
mov
push
movsb
mov
mov
cltd
mov
dec
adc
mov
cmc
cs
jl
outsb
cwtl
cmpsl
cmp
sbb
std
incl
outsb
mov
dec
sub
cmc
mov
dec
push
sahf
sahf
std
pop
inc
sub
jbe
sbb
push
jnp
and
pop
push
inc
adc
xchg
xchg
xchg
xor
out
mov
jae
cmp
jnp
arpl
jg
les
sub
mov
jge
add
test
jmp
fs
jae
bt
bt
push
bt
cmp
movb
call
jl
mov
clc
int3
sub
dec
in
mov
into
jecxz
gs
imulb
out
sbb
inc
pop
clc
push
mov
dec
aad
into
adc
cmp
mov
mov
pop
ds
mov
jmp
add
jae
in
mov
jnp
jne
cmp
mov
or
je
mov
and
rorl
int
icebp
adc
mov
pop
mov
dec
mov
out
push
mov
xchg
pop
test
cmc
call
push
xor
xchg
pop
scas
dec
jecxz
xchg
jbe
ljmp
push
push
icebp
lret
rorb
push
mov
test
hlt
dec
mov
test
lea
jbe
clc
sub
push
jmp
fbld
add
outsl
add
adc
loop
or
fiaddl
pop
mov
sbb
and
and
int3
subl
lds
shlb
xchg
lret
ja
jp
dec
movsb
jb
mov
xchg
mov
adc
in
mov
test
dec
jle
mov
add
insl
scas
pop
or
jne
add
fldenv
aam
cli
stc
shrb
out
repz
addl
jge
pop
adc
or
and
inc
add
pusha
push
jne
xor
imul
mov
xchg
jo
mov
mov
inc
adc
inc
arpl
pop
andb
cmpsl
cld
jno
std
jb
cltd
ret
pop
push
mov
inc
popf
push
push
xchg
es
or
inc
jns
push
sub
cld
mov
dec
or
mov
shlb
add
test
call
mov
pushl
push
lea
jmp
sbb
sub
jb
add
cmp
xchg
mov
and
cs
mov
xor
rorb
inc
inc
fisubrl
fwait
xchg
cmp
and
cli
jecxz
jecxz
sahf
leave
xor
popf
push
mov
cwtl
lods
and
cld
addr16
imul
in
scas
pop
cmpsb
js
or
pop
jmp
mov
cmp
pushf
dec
aad
imul
push
mov
inc
add
sub
les
arpl
imul
push
addr16
ja
sub
cmp
mov
rcl
call
enter
in
sbb
pop
mov
sub
inc
adc
scas
dec
and
pop
imull
mov
es
int
insb
adc
push
fistps
push
scas
mov
xor
movsb
jl
aaa
add
fimull
out
int3
insl
xor
or
arpl
sub
and
jae
inc
inc
not
mov
setno
call
jmp
lahf
cwtl
in
mov
jle
out
cmp
sub
dec
sbb
xchg
cmp
push
dec
jbe
xchg
lods
cmpsb
dec
int3
sbbb
push
sbb
flds
cld
pop
movsl
xchg
sbb
testb
mov
sub
pop
push
dec
or
dec
and
dec
and
outsl
ret
mov
xchg
jno
and
shlb
orb
stc
jle
aam
cwtl
sar
bswap
mov
pushf
push
shl
mov
jmp
pusha
lea
jbe
not
xchg
bsf
btr
sub
bsr
btr
add
sar
mov
mov
mov
stc
add
bt
call
bt
clc
sub
push
pushl
popl
pusha
cmp
call
call
cmc
cmc
and
clc
test
push
movb
add
movb
lea
jmp
mov
pusha
lea
jmp
rorb
jo
aaa
sbb
push
lds
mov
xchg
xchg
sub
inc
add
adc
das
xor
loopne
imul
sub
pop
inc
test
mov
mov
in
bound
and
repz
mov
xchg
roll
imul
aad
push
pop
jnp
lret
dec
inc
and
fldcw
xor
enter
fwait
mov
adc
je
bt
clc
add
bt
test
cmp
pushf
lea
jb
call
lea
pop
call
pushf
pushl
call
call
cltd
jl
out
pop
ds
sub
std
jno
sbb
std
cmp
push
push
mov
dec
pop
fs
push
arpl
sahf
sahf
movsl
sub
test
mov
pop
xchg
fisubl
inc
and
into
cmp
icebp
pop
aad
fidivrs
sub
dec
mov
pop
push
iret
push
inc
xchg
shll
xchg
mov
mov
out
sub
gs
cmp
sbb
out
jecxz
lea
fistl
mov
lcall
add
mov
mov
and
call
lea
jbe
pusha
and
ror
mov
adc
xor
sub
neg
add
adc
cmp
or
cmp
mov
and
not
add
lea
btc
bsr
movl
pop
mov
movb
cmp
pushf
call
pusha
movl
jmp
push
xchg
call
cmp
clc
add
stc
cmp
pusha
cmp
pushl
mov
lea
jmp
fs
cs
pop
jb
lods
adc
js
into
pop
insl
sub
ss
orb
out
xchg
push
js
and
mov
push
push
dec
sbb
mov
insl
mov
aam
stos
adc
imul
lods
jmp
xchg
and
and
mov
push
adc
pop
sub
aam
cwtl
mov
inc
stos
mov
shll
dec
xchg
adc
test
leave
mov
dec
loop
ret
add
mov
cmpsl
mul
push
mov
and
pop
or
xchg
lds
aad
jae
pop
bound
or
jmp
pop
pop
bswap
cwtl
lea
jmp
mov
int
mov
and
xchg
pop
pop
fidivl
out
dec
push
or
mov
xor
ret
pop
stc
popa
dec
mov
xor
or
push
adc
outsl
imul
push
fdivp
pop
aam
clc
in
dec
aad
jbe
sbb
mov
fldenv
mov
fadd
and
push
ficomps
push
dec
inc
dec
pop
rorl
push
js
ret
lcall
cltd
jb
jo
mov
or
inc
ja
xchg
push
adc
dec
ret
fwait
daa
dec
add
pusha
xor
inc
popf
dec
clc
icebp
call
lea
loopne
aaa
jo
jecxz
movsl
dec
pop
subb
lea
sub
shr
ljmp
sub
hlt
arpl
out
pop
inc
push
inc
or
xchg
pop
cmpsl
inc
insl
jns
icebp
mov
lds
jl
cwtl
or
incl
add
sbb
sahf
hlt
adc
cwtl
sub
jnp
add
stos
sub
adc
mov
jbe
xchg
dec
jge
cmp
pop
loope
mov
outsb
scas
aaa
cmp
and
mov
adc
push
sbb
andl
add
push
test
push
cld
imul
lods
je
push
or
inc
or
arpl
scas
mov
cltd
dec
mov
dec
adc
jbe
movsl
ds
inc
xchg
mov
mov
int3
popf
pushf
movl
pushf
pusha
movl
pusha
push
mov
call
jne
call
pusha
call
adc
shr
mov
call
pushf
lea
je
cmp
sub
shl
shl
mov
shld
rcr
pusha
or
add
cmc
mov
test
test
movw
test
push
push
lea
je
shrd
shl
test
bswap
add
not
ror
mov
bt
call
lea
call
push
pushf
pusha
push
lea
jmp
lea
ja
pusha
pusha
pushf
lea
jb
call
call
call
mov
testb
dec
push
adc
stos
xchg
pushf
cld
lods
test
add
adc
cmpsb
and
cmpsb
bound
push
movsb
dec
hlt
outsl
jnp
pushf
sub
jl
shll
call
jne
add
and
ja
or
negl
mov
shrb
lret
fldl
aam
lock
add
mov
and
je
outsb
cli
test
mov
in
out
dec
add
mov
lret
mov
dec
fldcw
and
mov
cld
cmp
dec
mov
js
into
repnz
decl
test
mov
add
test
sub
cmp
cmp
jmp
pushf
movw
lea
jne
sub
stc
movsbw
pusha
mov
clc
cmp
mov
pushl
jmp
bt
cmp
jmp
movw
push
inc
pushl
pusha
pushl
pushl
lea
jmp
call
push
rcl
jbe
adc
add
mov
xchg
insl
sbb
pop
aas
push
adc
outsl
pop
jne
lods
fmuls
sub
dec
lods
xlat
sub
bound
repz
call
jg
mov
data16
cmpl
push
adc
dec
sub
pop
xchg
and
xchg
jmp
out
sti
lds
aam
cli
lea
xor
mov
jae
sar
dec
xchg
icebp
fs
ds
fucomp
cmp
mov
nop
rcrb
pop
dec
mov
bound
negb
adc
adc
add
xorb
mov
pop
push
push
mov
shll
aas
xchg
add
push
popa
mov
adcl
cmp
outsl
hlt
mov
test
shrb
push
dec
add
xchg
xchg
inc
jl
cmp
inc
shrl
cwtl
in
subps
aam
push
and
push
dec
mov
and
pop
pushf
pusha
movb
movl
movb
push
pusha
jmp
pushf
push
movb
lea
jb
pusha
pushf
mov
pushl
ret
lea
jne
pusha
ror
sar
mov
cmc
add
cmc
pushf
pushf
movzwl
add
pushl
rcl
mov
bt
stc
stc
pushf
add
cmc
pushf
push
mov
test
stc
test
call
outsb
sbb
sbb
js
fs
jle
orb
inc
pop
add
shrb
inc
ffree
add
cmp
int3
sahf
popa
dec
test
jg
jnp
sti
jg
jle
popa
ds
add
leave
out
mov
jns
into
pop
insb
icebp
mov
iret
push
nop
ficomps
sub
lods
jl,pn
cmp
push
push
inc
push
es
push
in
jmp
mov
jg
adc
xchg
xchg
push
ret
mov
dec
mov
in
jae
test
rcr
mov
cmc
stc
stc
pusha
and
sub
jle
cmp
add
pushf
pusha
movl
lea
jmp
mov
pushf
lea
jmp
clc
pusha
call
out
in
and
push
sub
enter
popa
cmp
in
aam
rorl
xchg
xor
and
lret
xor
in
scas
xlat
test
mov
and
jge
cmp
int
adc
inc
js
mov
aaa
movsb
repz
dec
push
jp
cmc
fstpl
jle
xchg
mov
fisubl
add
lcall
xchg
sbb
cs
push
or
sub
mov
push
sbb
das
pop
sahf
pop
incb
dec
mov
xor
ud2
xchg
xor
mov
and
popf
das
jbe
or
std
sub
aas
lahf
and
or
mov
inc
shl
mov
mov
je
test
stc
push
mov
sbb
jmp
testb
add
add
push
jns
aam
lret
adc
fists
cwtl
jae
js
sbb
sbb
test
mov
mov
ret
add
dec
outsl
arpl
inc
jb
gs
xchg
mov
icebp
ja
in
push
push
repz
test
xchg
lods
scas
sub
and
es
add
or
insl
mov
push
mov
and
inc
dec
aam
jecxz
and
pop
jecxz
jg
addb
iret
pop
sbb
int
or
add
cld
xchg
pop
push
lds
jp
lods
loopne
lock
push
dec
call
mov
in
sbb
xchg
pop
int3
mov
movl
fstpl
xor
cmp
mov
sbb
cmpsl
rol
mov
push
jae
dec
inc
jmp
pop
test
mov
gs
mov
add
call
sub
ja
xchg
pop
sbb
ja
or
xchg
push
inc
dec
push
js
pop
sbb
repz
int
xor
ret
addr16
push
pop
push
mov
movsl
in
pop
sbb
pop
and
cwtl
push
aam
dec
das
mov
cli
int3
es
mov
mov
adc
ds
stos
clc
push
loopne
jns
fisttps
movsb
mov
rcr
rclb
jge
int
dec
mov
sub
xor
cmp
add
test
not
test
test
shr
pushl
call
pusha
cmp
add
pushf
call
pusha
stc
clc
add
pushf
movw
lea
jne
jmp
movzbl
movzbl
lea
shrd
cmp
shl
inc
mov
not
push
test
rol
pushf
bsr
mov
shl
bsf
push
bsr
mov
xchg
shld
bts
shld
push
cmc
mov
xadd
mov
shrd
cmc
mov
clc
btr
add
mov
pushf
or
push
jmp
ror
push
push
pushf
cmp
pushf
pop
movsbw
movsbw
lea
cwtl
not
mov
jmp
mov
or
arpl
adc
xchg
test
mov
out
dec
mov
ret
sbb
pop
out
mov
iret
aaa
xor
mov
mov
jecxz
call
stos
sub
cmp
pop
sbb
out
scas
adc
stos
cmp
shl
xlat
ficomps
leave
lods
cmc
sub
outsb
jb
cmp
stos
push
psubw
test
fistl
pop
test
sub
mov
mov
notl
xor
mov
stc
stc
lea
jno
pushf
cmp
call
loop
dec
or
incb
fimull
mov
cmp
ret
addl
xor
and
and
jmp
push
pop
outsb
mov
cmpsl
jecxz
mov
xchg
inc
bsr
mov
bswap
btr
add
btc
shl
bt
bts
movl
rcl
bsr
movsbl
mov
cmc
push
cmc
cmp
pusha
pushl
push
call
dec
movzbw
push
shr
call
stc
jecxz
stos
sbbb
aam
adc
or
cmp
lret
out
in
mov
add
push
adc
xor
push
xor
mov
jmp
negl
mov
jle
out
dec
lea
scas
dec
mov
jmp
push
movzbw
test
sub
mov
pushf
pushf
cmc
and
clc
stc
stc
add
add
bt
stc
cmp
jmp
pushf
pushl
test
push
jmp
mov
xchg
in
je
sahf
or
jb
push
daa
sub
nop
fadds
lahf
inc
add
int
lcall
sbb
loope
out
and
xchg
in
dec
adc
sbbb
mov
lods
push
push
xchg
rcll
xchg
cmpsl
out
out
sti
aas
dec
ret
xor
push
jmp
jmp
dec
pop
push
pop
sbb
pop
and
lock
std
std
andb
gs
mov
ret
js
fcoml
jg
sub
pushf
mov
pop
mov
loopne
scas
in
dec
jge
jmp
dec
popa
and
aam
pop
rolb
fsubrs
adc
test
xor
push
add
pop
xchg
inc
out
mov
xchg
push
xchg
mov
mov
add
lahf
xchg
xchg
roll
stc
incl
add
add
jmp
ror
call
jmp
jno
push
leave
cli
mov
jecxz
push
pop
cwtl
roll
xor
inc
add
xchg
mov
movsb
lret
cmp
or
pop
and
and
mov
jecxz
jo
outsl
push
add
add
mov
arpl
xchg
in
das
test
sbb
lods
push
dec
cld
dec
inc
mov
stos
cmpsl
jp
hlt
test
xchg
push
sbb
xchg
add
cltd
pop
mov
mov
pop
sbb
add
add
cltd
sub
adc
jne
or
add
out
add
in
or
add
add
repnz
lea
jo
jne
shld
mov
inc
sub
bsf
shrd
mov
jno
sub
bt
pushl
cmp
pusha
cmp
push
movl
push
jmp
xor
enter
sbb
xor
xor
stc
cwtl
mov
lahf
mov
push
jmp
mov
into
rol
out
xchg
push
loop
test
mov
mov
jbe
add
push
pop
int3
mov
mov
push
dec
cli
cs
xchg
outsb
int
adcb
xrelease
fwait
lods
into
stos
mov
mov
lcall
mov
adc
pop
add
dec
dec
jl
push
jp
mov
hlt
es
loop
mov
pop
dec
cmp
test
mov
or
bound
push
fidivs
lock
mov
loopne,pn
adc
jne
pop
mov
mov
lods
out
push
mov
lock
cmpsl
or
dec
push
xchg
cmp
dec
into
lret
mov
xchg
les
sub
int3
jge
push
xor
dec
xorl
xchg
loop
imul
sub
fldcw
pop
or
faddl
in
icebp
sbb
test
sbb
notb
mov
dec
lret
mov
pop
rcrb
jne
les
sub
mov
adc
fdivrs
les
pop
sbb
test
xor
xchg
stc
or
dec
mov
mov
pop
jo
sahf
stos
mov
stc
push
insb
jmp
push
jl
out
pop
test
push
loopne
push
shll
data16
lock
mov
jmp
dec
imul
jb
int3
adc
ljmp
jne
out
add
rorb
iret
ret
test
pop
xchg
dec
mov
add
lea
call
lea
pusha
mov
mov
pushl
push
pushf
lea
call
jmp
daa
cld
test
or
push
xchg
inc
hlt
divl
cld
imul
fcoml
pop
jge
sbb
fwait
or
inc
sub
mov
mov
imul
xor
clc
mov
inc
lds
lcall
xchg
mov
sti
in
adc
mov
push
xchg
cmp
stc
incb
rcrb
in
icebp
xor
adc
push
cmp
jle
fnstenv
dec
mov
cmp
sbb
add
fwait
rorb
repz
add
pushl
sub
clc
call
bsf
not
inc
mov
jmp
outsl
xchg
or
cmp
xchg
daa
lahf
fdivrs
ss
xchg
cli
dec
lds
pushl
bound
adcb
jbe
push
jecxz
scas
cmp
aad
lahf
lret
rcrl
dec
aad
sti
leave
mov
jo
out
cld
jle
xchg
mov
js
fcomi
lret
sub
call
lods
xchg
jmp
decl
stos
daa
sahf
add
cmp
push
psubsb
add
cmc
or
push
pushf
mov
lea
jne
shl
shr
mov
push
jmp
push
pushl
mov
call
mov
mov
seta
not
setnp
lods
call
cmp
pusha
lea
ja
setnp
rol
rcr
sub
jmp
ja
into
aas
jp
scas
lods
pop
pop
pop
cwtl
inc
push
mov
push
je
jge
ss
and
cmp
xor
ret
aad
add
jb
cltd
dec
sub
dec
js
xchg
sbb
arpl
shlb
fistps
inc
sahf
call
outsb
jge
shl
shrb
push
dec
testb
cli
xor
sub
aas
mov
xor
lahf
cld
sbb
and
mov
pushf
movsbw
mov
pushf
mov
pusha
pushl
ret
lea
ja
clc
call
pushf
movl
call
pushf
lea
ja
call
push
push
push
movl
pushf
lea
jmp
lea
ret
jmp
not
mov
setg
push
lods
cmc
clc
test
sub
pushl
call
int3
cwtl
cmp
cmc
push
iret
fisubrs
jnp
es
or
add
lock
in
insb
pop
icebp
sbb
outsl
arpl
or
inc
or
xor
mov
aas
pop
les
stos
jne
sbb
adc
insb
dec
enter
or
pop
cmpsb
imulb
jns
dec
js
jae
xor
jle
and
mov
lret
leave
push
stos
pop
dec
mov
mov
pop
movzbw
call
and
testl
out
rol
dec
adcb
add
loopne
push
sbb
mov
xor
mov
sub
stos
mov
es
jle
lods
xchg
in
pop
push
insl
loopne
loope
and
jmp
xor
mov
xor
push
dec
in
out
dec
and
xor
and
enter
jne
xlat
pop
mov
cs
repz
ficoms
not
aas
ljmp
scas
fldt
shr
test
test
dec
mov
out
push
stc
push
movb
lea
jmp
inc
inc
call
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
call
xlat
aam
add
add
add
add
add
add
add
enter
enter
add
add
add
aaa
push
jle
adc
inc
ljmp
mov
inc
insl
mov
xchg
jne
mov
sahf
lret
mov
jl
cmc
mov
js
lods
jmp
add
popa
flds
aad
sti
xchg
in
roll
pushf
in
push
mov
data16
mov
enter
aad
test
js
pop
out
rcll
rcl
jl
repnz
jb
jbe
jle
jge
add
jge
mov
jb
mov
nop
or
insl
jmp
das
stc
inc
adc
push
dec
movsl
fidivl
pop
out
lahf
nop
push
int3
mov
sub
fnstenv
cmp
scas
xor
jp
ds
sbb
push
ja
pop
cmp
cmp
stos
xchg
jle
fnstsw
inc
repz
sbbl
xor
mov
mov
mov
in
pop
sti
in
das
xchg
and
adc
add
or
subb
shll
sub
mov
cmp
in
add
adc
or
fwait
insb
cmp
dec
cmc
jns
pop
sub
cmp
xor
xchg
pop
ss
cmc
stc
iret
and
jns
insb
stos
dec
outsl
lea
inc
das
push
je
xor
sub
cmpl
mov
sub
hlt
sub
xor
xor
cmp
aaa
cmp
xchg
push
cmc
js
dec
imul
hlt
push
shr
dec
mov
ficomps
movsl
negb
and
pop
in
inc
jp
jbe
out
mov
pusha
cmpsb
popa
lds
aaa
mov
rorl
pushf
pop
and
hlt
dec
rcrl
sahf
xchg
xor
jp
in
test
pushf
push
jg
iret
cwtl
sub
rorl
cmp
sbbl
sub
call
jnp
insl
loope
fwait
dec
sar
mov
sbb
mov
jl
hlt
popf
dec
mov
hlt
push
push
in
sub
mov
jmp
shll
icebp
pop
sti
mov
push
adcb
mov
pop
shrb
pop
fwait
lret
lahf
sbb
adc
mov
lock
mov
sbb
mov
out
inc
sub
pop
or
mov
cmc
xor
arpl
mov
or
dec
inc
aad
pop
mov
scas
andb
out
push
cwtl
dec
mov
inc
jge
test
sub
jo
mov
add
or
loope
sbb
iret
push
sub
and
dec
sbbb
stos
push
add
sbb
fsubp
sub
fcomi
aas
sbb
inc
pushf
dec
mov
call
rorl
dec
mov
out
bound
fs
mov
jge
mov
cmp
sbb
and
rclb
es
ret
or
lcall
xor
gs
sub
adcb
sub
xor
dec
in
add
ds
mov
push
pop
add
loope
out
inc
cltd
xchg
jmp
insl
fs
sub
xor
hlt
lods
lock
jmp
mov
mov
pop
fistpll
lret
clc
sub
call
jb
inc
mov
push
das
lods
push
and
icebp
pop
shlb
cld
pushf
pop
notl
rorl
shll
sbb
ficoml
add
cltd
call
xor
mov
pusha
inc
adc
test
int
jecxz
jmp
pop
insl
orl
movsb
sbb
mov
lret
or
mov
jns
and
inc
cmpsl
int3
sub
outsl
jne
add
mov
inc
mov
add
and
enter
lock
xorl
out
xchg
push
push
fsubrl
les
xor
pop
jb
idivb
or
insl
push
out
cs
fucomp
and
sub
mov
jle
es
xlat
fnstcw
stos
pop
xchg
arpl
clc
jne
loope
scas
movb
inc
test
stos
mov
fxch
aam
jo
roll
dec
fisubrl
sub
ret
inc
pop
sbb
push
stc
jg
divl
sbb
pop
addr16
xchg
adc
sbb
loope
ret
loope
mov
imul
nop
cld
loop
pop
loopne
jbe
loope
pop
in
gs
out
push
mov
ss
or
xlat
or
xchg
xchg
ret
mov
xchg
lock
lret
into
pop
pop
cmpsb
gs
and
lods
enter
jecxz
sub
pop
jne
pop
push
jle
xchg
or
pop
cmp
and
cmp
filds
dec
sbb
adc
js
cmp
xchg
inc
out
sbb
add
pop
popf
jge
icebp
add
enter
daa
mov
jle
cmp
pop
rclb
jle
push
adc
daa
fwait
push
cmp
inc
sbb
fisttpll
pop
dec
mov
xchg
xor
dec
jne
ret
sub
xchg
stc
inc
sub
inc
fldenv
lds
ficoml
push
add
sub
lcall
int
jno
call
cmp
mov
js
lods
xchg
daa
cmc
add
add
xchg
or
test
dec
fcom
push
cmpb
cld
in
jle
mov
js
rcrl
loop
aad
inc
dec
in
and
jecxz
mov
loop
and
sub
jo
mov
ds
push
mov
aaa
and
sub
lretw
jecxz
cmp
jno
adc
cmovae
scas
jp
mov
das
test
pushf
xchg
sbb
pop
push
jg
sub
push
mov
inc
negl
leave
adc
dec
xchg
imul
inc
dec
mov
movsl
lret
loop
or
jbe
xor
or
repz
sbb
mov
mov
cmpsb
xchg
mov
arpl
lods
into
cmp
pop
shlb
jg
stc
bound
dec
push
cwtl
icebp
dec
push
popa
fisttps
mov
xor
cmp
pop
cmp
jg
repnz
sbb
add
rorl
inc
pop
and
aas
in
sbb
dec
icebp
fs
lret
lods
jmp
dec
inc
mov
ja
lret
aad
push
xchg
mov
bound
sbb
jae
dec
shll
sbb
popf
in
sbb
outsb
mov
fistl
pop
inc
lcall
lret
jg
mov
push
test
daa
pop
data16
bound
push
dec
into
mov
loopne
jae
mov
mov
test
jl
dec
xchg
fistpll
adc
adc
es
mov
jp
les
jno
sbb
push
xor
add
mov
pop
arpl
fdivrl
dec
pushf
sub
ljmp
adc
addr16
and
and
cs
mov
jle
into
push
mov
jns
dec
or
xor
and
cs
mov
jle
xor
cmp
stos
jg
mov
dec
out
aam
in
lret
lahf
dec
sbb
inc
push
loop
popf
and
data16
ja
push
lock
adc
loopne
scas
xor
xor
sub
hlt
aam
les
testl
out
adc
rorb
imul
int3
mov
pop
mov
jno
mov
dec
inc
iret
aas
lret
or
xchg
test
inc
jo
popa
mov
popl
scas
pop
add
mov
sbb
jnp
mov
push
sub
sbb
in
sbb
lret
push
inc
inc
pop
xchg
cmp
orl
dec
jl
gs
nop
ret
scas
shr
pushf
or
dec
movsl
and
orl
fs
jg
xor
test
cltd
and
mul
dec
sbb
add
and
ror
outsl
inc
xchg
jl
sbb
outsb
in
in
adc
sti
jge
inc
in
out
pop
sbb
daa
mov
fsincos
and
jns
jnp
stos
enter
xchg
mov
lods
and
cmc
adc
addb
adc
imul
and
fstpl
push
sub
mov
sub
scas
fistpll
pop
lds
push
aas
ljmp
jmp
jge
fisubrl
rcll
push
notb
pop
mov
adc
into
rcll
lds
adc
xorb
outsb
push
push
lds
xor
mov
jbe
adc
loope
mov
aad
jns
pop
mov
outsl
fsubs
icebp
mov
lea
cmp
lock
pop
sbb
pop
mov
fstpl
jbe
sub
out
add
cmpl
imul
fisubrs
test
jne
and
cmpsl
bound
scas
jmp
test
dec
gs
clc
outsl
aaa
and
jp
clc
lock
rcr
jmp
xor
xor
lret
aam
mov
hlt
cmp
pop
or
daa
shrl
pop
push
and
sbb
push
add
scas
sahf
pop
pop
or
fdivl
ret
adc
cwtl
jl
dec
cmp
add
cld
dec
cld
lret
fsubr
mov
lcall
hlt
out
sahf
xlat
fwait
leave
mov
into
in
jp
xchg
cmovbe
mov
das
sahf
pushf
push
add
call
push
out
imul
mov
ljmp
cmp
and
dec
ret
fimull
sub
lret
movsl
or
sbb
jle
lret
dec
xor
mov
enter
popf
mov
and
fwait
stos
jmp
loope
adc
sbb
sub
ljmp
mov
add
stos
cmp
xor
push
idivw
cs
out
mov
in
fcos
out
dec
aad
sbb
xor
jp
stos
pop
fdivs
flds
pushf
lods
mov
jle
inc
add
test
pop
sbb
mov
mov
mov
arpl
xchg
push
insl
inc
adc
cmp
inc
imul
xchg
pshufw
dec
adc
push
pop
cwtl
push
cmp
es
dec
dec
int
push
adc
xchg
mov
ret
dec
cmp
sub
adc
xlat
lahf
movsb
mov
fucomi
mov
movsb
jb
or
ficomps
pop
cwtl
lods
sbb
mov
pop
jl
sbb
push
iret
mov
cmpsl
fadd
mov
and
outsb
inc
mov
cli
jg
stc
icebp
dec
mov
mov
mov
sbb
mov
gs
inc
pushf
ret
jp
mov
fsubl
lret
cmp
xor
lds
pushf
es
jmp
dec
sti
push
pop
jbe
incb
imul
and
leave
dec
lods
lret
sub
ret
push
mov
pop
push
ret
loopne
mov
rcrb
insb
in
outsb
hlt
fisttps
dec
insb
push
lea
imul
lds
sub
jecxz
mov
mov
add
add
add
hlt
jl
decl
jecxz
sbb
fisubs
fnstsw
push
mov
push
xchg
jg
std
clc
fwait
cmc
and
mov
out
adcb
mov
pushf
jg
movsl
cli
jp
add
out
divb
inc
jl
int
rol
xor
shrl
test
shl
or
cmp
addl
pop
mov
rolb
gs
xor
xchg
mov
lahf
push
dec
ljmp
test
stos
or
jns
add
add
test
outsb
outsl
outsb
dec
or
ljmp
adc
repz
or
dec
pop
fwait
jl
xor
testb
iret
mov
shlb
push
js
adc
out
mov
idivl
xchg
push
leave
push
mov
sub
add
sarl
scas
fildll
push
dec
call
aas
mov
aam
push
adc
push
mov
mov
int3
jno
cs
imul
pusha
call
call
or
xor
loop
leave
andl
add
lcall
mov
jae
inc
push
iret
jbe
imul
aaa
xchg
cli
dec
push
adc
outsl
adc
push
or
inc
cli
pop
or
lcall
dec
call
push
aam
and
dec
cwtl
cmp
pop
add
icebp
inc
adc
test
mov
dec
pusha
pushf
jmp
sub
stc
clc
ror
pushf
cmp
push
movzbw
mov
lea
bswap
push
movsbw
pop
mov
jmp
xor
mov
inc
cmp
xor
mov
add
sub
frstor
pop
cmpsl
pusha
xor
push
mov
ror
movb
push
cmp
cmp
jmp
jnp
das
in
imul
scas
mov
inc
push
ret
divb
cs
in
and
in
stos
gs
xchg
xor
inc
out
xor
rcr
add
or
add
cmp
push
add
repz
sub
dec
and
inc
clc
fisubs
sub
jp
stos
inc
popf
repz
push
dec
in
and
lods
lea
popf
mov
jmp
call
push
cmp
in
fisttps
ja
mov
bsr
mov
cmp
cmp
cmp
cmp
shl
pushf
pushf
lea
je
pusha
pusha
mov
pushf
push
call
mov
icebp
loope
movsl
pop
out
ss
rorb
xorb
dec
mov
aam
stos
repz
push
ja
pop
fimull
cwtl
mov
ljmp
push
mov
stos
pop
mov
sbbl
hlt
ret
pop
outsl
mov
add
lcall
push
aad
mov
shrl
mov
aam
inc
cmpl
inc
and
dec
mov
add
push
scas
mov
push
cmp
push
mov
mov
push
adc
es
push
mov
hlt
xchg
inc
inc
mov
pop
shl
cwtl
lahf
inc
mov
lret
pop
add
ret
stos
cmc
adc
jecxz
mov
inc
data16
jge
fdivl
jp,pt
push
jmp
cs
pop
into
cmpsb
les
test
gs
pop
pop
je
loop
mov
cmp
fiaddl
aaa
sub
out
jge
ss
add
add
out
lret
mov
ss
mov
popa
push
mov
mov
das
das
or
sub
fadds
mov
clc
jg
repnz
imul
ficoms
fisttpll
jae
fsubr
movzwl
cmpsb
daa
mov
pushf
movsb
insl
mov
pop
and
mov
jmp
cmp
adc
dec
mov
es
shr
fcoms
call
xor
bound
push
push
and
xchg
mov
dec
insl
in
push
and
ret
scas
and
lock
aas
xor
cld
or
in
inc
ja
cmpsl
movsl
fldcw
cltd
movsl
mov
dec
mov
pop
xchg
mull
sbb
movsb
mov
dec
jg
adc
pop
outsb
into
in
sbb
pop
insb
adc
call
gs
dec
sub
lods
jmp
mov
mov
out
mov
test
popf
in
stos
sbb
lds
push
sahf
xor
es
mov
mov
pop
int3
lock
test
into
arpl
adc
movsl
adc
inc
aas
inc
out
adc
loop
xchg
sbbb
loop
xchg
jmp
cld
push
clc
rolb
das
xchg
outsl
in
xchg
shll
out
mov
call
jecxz
wbinvd
pop
js
imul
bound
lahf
lret
mov
cmp
fidivs
mov
mov
sub
push
inc
pushf
inc
pushf
pusha
pushf
lea
jmp
push
pushl
ret
bsf
shld
mov
cmc
push
cmp
bt
cmpb
jmp
js
cmp
test
push
or
movb
push
lea
jne
sub
xor
bts
mov
jmp
push
lea
jne
xor
bsr
shld
sub
sub
mov
sar
rol
adc
pusha
add
mov
rol
mov
call
mov
setl
lods
clc
pushf
mov
add
clc
clc
pusha
stc
ror
call
add
int3
and
hlt
pop
pop
fcmovu
pop
lahf
in
negl
ficomps
sbb
pop
repnz
idivl
mov
shll
add
mov
dec
mov
sub
sub
out
xor
testl
push
jg
ja
stos
dec
mov
rcl
lea
call
jmp
xor
test
mov
xor
mov
btc
shld
rcl
test
add
bswap
btc
btr
shr
bswap
mov
shld
add
bswap
lea
push
mov
call
pusha
bt
repnz
movl
call
cmp
je
jbe
shl
dec
call
push
shld
clc
sub
xor
shl
btr
pushl
lea
bt
pusha
sub
mov
cmc
clc
pushl
popl
cmp
cmp
pushf
push
movb
mov
lea
ja
clc
and
cmp
sub
btc
lea
jmp
fwait
and
and
mov
jmp
dec
outsl
call
daa
xlat
imul
lods
xor
and
adc
clc
xchg
pop
adc
lds
scas
aad
shrb
test
stos
sub
pmaddwd
stc
orl
subl
test
pop
sub
ret
fs
stos
out
scas
int
mov
mov
je
dec
fs
rorl
dec
mov
push
adc
or
add
clc
jmp
lea
jne
lea
jmp
daa
call
enter
scas
or
push
sub
test
out
jne
mov
and
adc
outsb
imul
aad
icebp
jae
pop
cli
dec
cmpsb
jle
ja,pn
push
ret
subl
dec
dec
or
pop
mov
xor
es
rep
and
xor
add
jmp
pop
shl
cmp
sbb
insb
pop
fildl
enter
adcl
sub
pop
ss
test
into
imul
pusha
add
jno
clc
repnz
popl
movb
pushl
ret
pusha
jmp
stc
sub
jmp
jmp
setb
pushl
popl
lahf
setb
lahf
movzbw
mov
bswap
movl
cwtl
movb
pusha
pushf
lea
pushf
movb
pushf
call
mov
dec
and
mov
test
ss
mov
cmp
ds
rolb
out
xchg
rclb
pop
repnz
mov
mov
dec
shlb
int
repnz
mov
push
mov
shll
inc
mov
movsl
fstl
mov
sub
xchg
mov
sub
or
dec
mov
test
or
jl
in
adc
aas
aam
push
lret
and
sub
fsubrl
adc
xor
add
sbb
sub
jo
decl
ror
stc
jmp
lea
jne
je
bt
cmp
pusha
lea
jne
pushf
push
lea
js
pushf
inc
call
push
pusha
lea
jae
cmp
pusha
pusha
cmp
xor
call
test
cmp
push
call
mov
jmp
call
cmp
in
mov
das
clc
pop
daa
push
daa
cmp
jle
xchg
mov
push
sub
mulb
sub
xchg
cmpsb
ss
jle
stos
jne
inc
sub
push
shll
push
mov
pop
mov
int
incb
mov
inc
sbb
pop
add
mov
dec
dec
mov
scas
fisubl
daa
movsl
sub
div
fisubrl
or
into
adc
sub
jns
leave
std
mov
inc
jo
movsl
inc
adc
lock
push
cmp
movb
jmp
jmp
je
stc
cmc
cmc
cmp
call
pushl
add
call
xchg
iret
mov
or
mov
int3
cmp
xor
pop
xchg
pusha
sub
stos
mov
insb
jne
jl
fldcw
push
loopne
sub
and
dec
int3
adc
jbe
into
mov
lods
pop
pop
subl
test
sahf
insl
push
sahf
frstor
adc
jmp
and
lods
rcrb
and
inc
adc
data16
jg
cltd
adc
and
and
xor
movsb
mov
shl
daa
mov
mov
es
add
repz
mov
ljmp
es
inc
push
ss
mov
cmp
push
dec
popa
andl
aam
insb
loop
adc
imul
jge
pop
enter
icebp
xchg
xor
pop
mov
lds
ja
enter
mov
xchg
hlt
mov
mov
adc
idiv
ffree
lock
dec
lds
inc
mov
xchg
pop
xchg
test
movsl
and
inc
jmp
popl
cmpsb
add
pop
or
pop
sub
sbb
loope
movl
add
inc
push
xor
imul
jle
mov
sti
xchg
xchg
jg
loop
lcall
sahf
dec
in
ret
inc
std
rorb
xor
fcomip
sar
mov
hlt
pop
pop
js
std
add
or
mov
leave
dec
icebp
mov
aaa
and
popa
pop
es
imul
cltd
aas
lods
mov
fwait
push
or
mov
dec
mov
lods
loope
lea
ja
pusha
bt
add
add
jmp
pusha
mov
cwtl
lea
lea
pop
mov
mov
lea
lea
call
stos
mov
push
inc
call
test
cmp
pop
jns
stc
fprem1
imul
xchg
and
xchg
inc
and
insl
dec
scas
aad
les
lret
outsb
mov
jp
sbb
xor
test
lret
stc
jg
das
add
data16
arpl
ds
push
hlt
adc
push
mov
movq
or
add
mov
setb
lods
pushf
sub
stc
mov
jmp
shll
add
into
xchg
push
test
cmc
mov
int
lods
ffree
add
jbe
cmp
out
fdivrs
cmp
lea
lahf
xor
adc
orl
jno
repnz
jg
je
sub
mov
push
dec
faddl
jge
aad
mov
cmpsb
movsl
cmp
and
inc
shrb
ds
mov
insb
pop
cmp
xlat
dec
dec
or
push
pop
rcll
test
stos
fldt
adc
sub
push
outsl
in
adc
mov
sub
fabs
ds
jle
mov
sti
xchg
pop
rorl
rolb
cmpl
dec
fsts
and
inc
sub
push
pop
mov
fistl
int
dec
repnz
sbb
or
movsl
sbb
mov
lods
je
xor
insl
mov
sahf
sbb
fldenv
loope
rol
cli
pop
inc
mov
add
out
mov
jnp
xlat
imul
and
push
or
xor
stc
out
aaa
fldt
xorl
dec
adc
push
ljmp
sub
stos
in
subb
in
add
jl
test
mov
les
lea
scas
pop
testl
arpl
bound
rorb
aad
loopne
insb
shll
adc
test
or
pusha
mov
mov
cmpsl
in
cltd
cwtl
mov
xor
push
dec
push
mov
pop
dec
mov
push
or
fistpll
jl
add
daa
pop
lcall
push
mov
mov
shll
jmp
push
cmp
xor
mov
jns
sahf
mov
mov
jecxz
push
subb
out
dec
mov
jle
sbb
movsb
in
cmpsl
mov
hlt
lcall
jge
or
jbe
sbb
test
in
xor
and
sbb
popf
ret
ret
pop
fcoml
jge
sub
dec
daa
xor
daa
int3
movsl
je
push
jb
call
jmp
add
push
pusha
dec
pushf
call
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
outsb
int
lcall
decl
lea
call
test
adc
inc
arpl
inc
test
and
popf
jmp
test
out
insb
sub
jg
mov
jl
shl
mov
aaa
sbb
and
ret
inc
cmp
xor
scas
and
mov
sbb
dec
nop
adc
test
lret
fildll
fs
mov
jl
fstpt
and
xor
inc
push
cmp
add
cmp
aas
inc
repnz
jmp
mov
mov
push
nop
sbb
xor
pop
add
scas
shl
icebp
mov
sti
jo
movsl
cmp
stos
popf
mov
push
pop
xor
xor
mov
push
sub
inc
xchg
xor
or
push
enter
jb
add
mov
mov
lret
xor
jne
push
cmp
cmpsl
xchg
lcall
pop
mov
push
dec
lahf
leave
cmpsl
or
lret
iret
fldcw
aad
flds
lahf
cmp
aad
std
add
test
and
inc
lds
lret
jl
flds
jmp
dec
sub
shrl
xor
xlat
aas
int3
xchg
mov
dec
pop
sub
jb
or
sbb
mov
ds
roll
inc
gs
outsl
fs
gs
imul
add
adcl
bt
cmp
jl
pushf
lea
ja
push
not
jmp
movl
call
sub
clc
clc
jmp
pop
add
xor
sbbl
xchg
xchg
iret
sbb
inc
leave
scas
mov
test
and
jge
push
cmp
mov
adc
stos
push
ljmp
cld
mov
lods
cmpsb
xorl
fimuls
cmp
jecxz
dec
aad
imul
mov
filds
cmpb
lret
or
rcll
lret
jmp
mov
lods
lret
cmp
int3
jae
pusha
sub
pop
test
mov
or
cli
push
mov
pop
fidivrl
mov
or
std
cmpsb
sub
cs
xchg
mov
sbb
cltd
xor
int
fidivl
pop
push
sbb
adc
cmp
xlat
cmp
lret
xchg
xor
xor
and
add
sbb
iret
push
add
cld
mov
xchg
int3
lods
jge
push
fstps
push
and
xchg
shr
imul
inc
aaa
add
jnp
aas
lret
imul
jne
add
fisubrs
lret
xchg
xchg
dec
mov
call
adc
lea
pushf
call
lea
jbe
btc
bt
xadd
shld
mov
btc
btc
adc
add
jmp
pusha
or
push
call
pusha
setge
mov
pushf
pushl
push
pushf
lea
jmp
shr
rol
ror
not
shld
mov
sbb
bswap
pusha
rol
add
lea
not
mov
lea
push
mov
pushf
call
call
testb
out
cmp
pushf
mov
rclb
cwtl
push
mov
mov
daa
shl
xor
pop
lret
and
out
jo
xor
adc
add
pushf
cld
pusha
ds
rcr
cmc
sbb
add
mov
lea
pop
sbb
rorl
jecxz
push
dec
shll
aas
int3
pop
adc
pop
inc
mov
scas
inc
rclb
es
add
divb
sub
dec
mov
shlb
je
cmp
pushf
add
jmp
dec
sub
setno
movsbl
pop
lea
pushf
mov
xchg
mov
not
jmp
lea
jb
call
call
pusha
ljmp
xor
xor
stos
arpl
or
dec
mov
bound
sbb
in
dec
cmp
enter
stos
icebp
jno
add
adc
sti
mov
inc
lds
bswap
push
cmpsl
sbb
mov
xchg
scas
pop
inc
das
scas
fbld
dec
daa
fadd
hlt
pusha
sti
push
add
cmpb
ficoml
xor
mov
mov
cmp
imul
pop
movsb
mov
std
dec
jb
push
out
dec
mov
test
fwait
aaa
mov
stos
imul
lret
adc
int3
repz
mov
xchg
popf
mov
shlb
mov
lock
mov
lret
sbb
mov
sub
mov
cmp
fisubrs
stos
mov
push
dec
aam
testb
std
fsubl
mov
and
cld
pop
mov
xor
and
fs
cmp
call
push
mov
not
push
movb
lea
call
push
cmc
pushf
cmp
push
jmp
imul
gs
xor
cs
insb
add
ret
lcall
xor
add
pushf
orb
inc
cli
dec
add
pushf
push
pushl
lea
jmp
inc
push
movl
pushf
lea
jmp
mov
pushf
lea
lea
jno
push
pushf
push
pushl
popl
pushl
pushl
ret
lea
sete
lea
mov
movzwl
bswap
lea
pusha
movzbl
jmp
push
movl
pushf
call
not
jmp
not
mov
pushf
bswap
pushf
lea
pushf
pusha
movl
pushf
call
mov
xchg
fcoml
cmp
sub
sub
xor
inc
das
mov
jo
add
pop
mov
mov
movsl
pop
lods
les
inc
rcrl
shr
cmp
cld
cmp
jl
dec
fcom
js
mov
pop
pop
pop
push
pushf
clc
add
bt
push
stc
cmp
pushl
movw
lea
jmp
shl
dec
mov
leave
add
xchg
mov
icebp
dec
addr16
mov
jb
insl
cmpsl
leave
movsb
out
push
jl
mov
test
arpl
jb
or
cmc
sbbl
aas
mov
scas
dec
mov
lret
lods
or
jne
mov
mov
into
adc
outsl
idivb
repnz
ja
icebp
arpl
mov
xor
xor
sahf
mov
test
ljmp
add
nop
inc
jl
jno
jbe
and
test
lds
jnp
lret
repnz
pop
xchg
push
xor
addr16
shrl
mov
mov
sub
pop
sti
sti
dec
fimull
xor
dec
movb
mov
and
add
sbb
sbb
aaa
sahf
mov
mov
pop
xor
push
xor
cmp
clc
mov
push
cltd
ja
int3
nop
pop
add
popa
cltd
pusha
push
push
push
xor
cmp
nop
je
sbb
jmp
data16
dec
add
and
fdivr
lret
pop
cmp
insb
pmaddwd
jmp
loope
in
xchg
inc
lods
ret
cmp
int3
ds
les
or
push
stc
inc
outsl
cmp
xchg
inc
aam
fwait
in
cmpsl
icebp
xchg
jp
int3
push
inc
mov
dec
mov
aaa
pop
faddl
add
imul
jae
mov
add
movw
pushf
push
lea
jmp
push
pusha
movl
pushl
call
fstps
int3
sub
lcall
mov
inc
int
loopne
push
pop
imull
inc
xor
outsl
int
cli
insl
pop
sub
lea
push
je
mov
and
dec
mov
push
mov
aam
stc
gs
stos
mov
mov
fistps
jne
jge
in
jp
and
popf
sbb
xchg
lcall
mov
ds
enter
adc
add
xchg
fldcw
lret
and
cld
cs
inc
aas
mov
jno
outsb
sub
dec
test
daa
push
mov
cwtl
jecxz
mov
inc
cmpsb
mov
or
nop
push
and
fwait
add
adc
loop
jge
xchg
inc
dec
sub
mov
dec
sub
xchg
ret
setle
inc
inc
inc
rol
xchg
mov
shrd
mov
neg
mov
test
cmp
cmp
mov
bswap
shr
bt
jmp
jnp
push
xlat
xchg
mov
out
sbb
jge
sbb
in
xor
je
push
dec
sti
ret
pop
xlat
mov
jge
neg
inc
cmp
or
mov
out
stc
add
outsb
jbe
mov
push
xchg
xchg
popf
into
ret
mov
aam
es
inc
dec
push
inc
mov
mov
and
pushl
dec
in
orb
and
popa
stos
xor
dec
mov
xchg
cmp
inc
and
and
dec
add
add
xchg
dec
pushl
popl
movb
pushf
pushl
ret
sub
push
je
xor
popa
push
pop
loop
xor
mov
ret
nop
lcall
jl
jge
dec
or
ret
stc
cmpsb
mov
xlat
xchg
scas
mov
cmp
divl
cmp
movsl
stos
fnsave
int
mov
xor
jl
and
and
lods
mov
jmp
dec
lret
pop
int
xor
loopne
push
int3
sub
mov
cmp
aaa
cmp
mov
adc
or
add
testl
sbb
mov
fs
arpl
lea
xchg
cli
int
loop
mov
sbb
xchg
aaa
mov
call
jns
test
in
in
cld
cwtl
dec
mov
aam
insb
push
test
mov
jmp
jmp
setg
inc
pushf
pushf
not
mov
lea
jmp
add
notl
iret
in
add
movsb
sub
xchg
hlt
jo
jne
xlat
jo
adc
testb
cmc
mov
inc
pop
fsubrl
addb
daa
cmp
mov
int
movsl
repz
ds
bound
iret
mov
ja
pop
in
rcrb
outsb
mov
aaa
push
lods
scas
addr16
ja
mov
and
mov
inc
mov
cmp
shl
adc
add
bsf
push
or
shr
bt
sub
rcl
mov
cmp
add
bswap
lea
bswap
mov
call
add
pusha
pushf
lea
jmp
movw
jmp
pusha
inc
lea
pushf
call
shlb
hlt
repnz
pop
pop
in
in
loopne
sbb
flds
pop
inc
int3
clc
cmc
or
mov
cld
rdpmc
fildl
es
jecxz
cld
cli
ja
jmp
adc
int3
out
ljmp
cld
ret
jmp
lds
xor
imul
sarb
cmpl
repnz
pop
xlat
sub
mov
gs
repz
fs
inc
add
dec
mov
pop
xor
and
jg
ret
stos
fcmovnb
aad
ljmp
and
inc
clc
cli
fsubrl
inc
sub
stos
mov
inc
ret
pop
pop
adc
mov
ret
in
xlat
aas
mov
arpl
arpl
nop
dec
iret
mov
sbb
pushf
mov
mov
inc
add
mov
fs
jb
jmp
push
pushf
lea
je
push
pushf
or
mov
pushl
lea
je
inc
sub
bt
mov
movsbw
aam
rol
rol
mov
call
call
mov
push
movl
pushl
push
pushl
mov
lea
jmp
pusha
movl
movb
pushl
movb
lea
jmp
jmp
pushf
add
mov
push
sete
pushf
not
seto
jmp
add
pusha
ror
cmc
sub
stc
call
lea
je
pushf
pushl
pushf
mov
call
pushf
pusha
lea
jae
pushf
cmc
add
pusha
pusha
movw
push
mov
mov
pushl
push
mov
lea
jmp
ljmp
cmpsl
outsb
daa
aaa
js
lods
movsb
xchg
js
mov
aas
sbb
in
movsl
dec
shl
cli
cltd
sbb
pop
mov
insl
adc
xchg
mov
mov
push
dec
mov
arpl
movzwl
shl
neg
xor
btr
mov
call
movl
bswap
mov
movzbw
movzbw
lea
movb
movl
call
pop
sbb
add
xor
pop
xorb
cmovnp
push
mov
or
xor
mov
aam
and
add
insl
and
cwtl
mov
add
subl
fnstcw
dec
faddl
mov
addl
in
xchg
jns
out
pop
add
in
mov
mov
pop
in
push
mov
mov
mov
dec
mov
arpl
js
clc
fdivs
xor
sub
sub
adc
dec
or
pop
pop
mov
lock
xchg
mov
cmp
mov
inc
push
stc
sub
sar
aad
fcoml
sbb
mov
push
mov
adcb
sbb
jecxz
lods
inc
mov
jne,pn
adc
mov
adc
sub
out
push
dec
enter
std
pop
push
sbb
and
mov
rclb
push
imulb
cmpsl
jno
dec
mov
nop
shr
push
add
cmc
pushf
jmp
pushl
test
sub
stc
pushf
xor
pushf
jmp
rol
outsb
in
jle
mov
mov
jnp
movsb
or
mov
aaa
loop
mov
aad
sbb
inc
call
pop
and
out
ret
iret
mov
addr16
adc
sahf
adc
inc
lds
fdivr
and
outsb
xorl
sub
push
cmc
jg
cmpsl
mov
dec
mov
ja
xor
push
fs
sbb
push
sub
std
stc
xchg
dec
push
aaa
push
inc
xlat
aas
mov
sub
cltd
jns
into
je
dec
rcrl
movsl
push
push
dec
mov
and
hlt
mov
jp
test
sbb
push
lret
xor
sub
aas
mov
xchg
sub
dec
cmp
cmp
xlat
test
push
pop
mov
mov
mov
cwtl
not
setns
lea
pushf
mov
pushf
jmp
pop
clc
mov
adc
jo
je
mov
mov
pop
lods
mov
inc
mov
clc
fisubl
sahf
fcomi
aam
pop
mov
cmp
pusha
shrb
and
add
std
std
and
mov
mov
xor
mov
cmpb
aad
mov
out
mov
fisttps
pop
dec
mov
js
fcomps
ror
cmp
mov
clc
test
cmp
pushf
not
lea
cwtl
mov
jmp
out
repnz
loope
int3
daa
stos
adc
mov
hlt
js
call
insb
dec
xchg
jp
test
push
xchg
outsl
leave
mov
popf
push
incb
mov
fwait
xor
sbb
lahf
mov
jne
mov
rclb
jns
mov
repz
mov
push
lahf
mov
bts
sub
aas
pusha
mov
add
jl
aam
shrd
push
shl
push
aam
movsbw
shrd
xor
mov
lahf
lahf
lea
jmp
pushf
inc
pusha
outsl
dec
test
lret
jl
and
jno
hlt
test
cwtl
and
sahf
pop
adc
sbb
xor
outsb
test
and
sub
or
jecxz
sbb
adc
inc
scas
fdivl
lock
in
pop
and
push
sbb
or
mull
shrb
push
dec
iret
mov
test
scas
in
mov
xchg
test
fwait
and
xchg
dec
mov
and
cld
data16
in
loop
cmp
sub
adc
insl
mov
std
jno
or
dec
outsb
or
inc
lock
loop
jb
and
cli
and
popa
adc
jge
out
addl
ficoml
pop
mov
mov
mov
pop
lret
add
add
jge
add
iret
scas
hlt
sti
jl
adc
pusha
or
sbb
mov
cmp
dec
mov
in
enter
push
in
dec
mov
mov
imul
jg
adc
pop
mov
mov
and
addr16
push
jg
cmc
loop
xchg
mov
xchg
and
mov
inc
jmp
scas
lcall
sti
push
lock
movsl
dec
or
dec
xchg
je
dec
leave
ss
push
test
inc
leave
aam
dec
xchg
in
mov
cs
dec
ret
insb
and
jae
dec
and
popf
pop
mov
icebp
icebp
xchg
dec
shrl
repnz
dec
mov
cmc
pushf
ja
xorb
in
lret
and
sarl
fstpl
aad
mov
mov
sti
fwait
idivb
lods
mov
add
es
ja
and
push
add
test
push
xor
outsl
pop
out
out
int
sub
imul
xchg
loopne
fs
movsl
test
mov
cs
mov
mov
js
icebp
add
ds
dec
mov
fstpl
push
enter
add
daa
mov
cli
cwtl
aam
sbb
push
and
mov
dec
inc
popf
push
icebp
jle
push
jns
addr16
out
dec
mov
pop
pop
xchg
xchg
inc
sub
mov
stos
es
imul
jbe
mov
pop
mov
mov
sbb
leave
push
mov
sub
lods
das
out
xor
sub
outsb
lret
jge
stos
gs
xor
push
push
inc
push
adc
jle
gs
xlat
addr16
imul
div
sahf
and
movsb
jo
pop
and
aas
int3
and
in
daa
test
incl
rcrl
fmul
aam
mov
dec
sub
add
mov
je
test
lahf
inc
inc
pushl
mov
mov
or
test
ret
stos
hlt
cmp
pop
jns
push
mov
xchg
subl
push
or
lret
in
sub
repnz
mov
mov
rorl
cmp
mov
xor
es
pop
xor
add
scas
lds
mov
mov
sbb
insl
int3
outsl
push
push
xor
lods
divb
inc
dec
jle
icebp
lods
iret
lahf
movsb
push
icebp
add
std
ss
dec
movsl
mov
fcoms
sbb
mov
add
add
loopne
test
adc
mov
fbstp
sbb
jmp
lret
inc
pop
mov
sahf
mov
aad
jge
fs
xchg
rcrl
mov
cld
mulb
fnstcw
adc
aad
add
outsb
sahf
test
adc
mov
push
lcall
stos
sarb
lret
dec
mov
mov
popl
movb
movl
pushf
mov
pushl
ret
lea
ja
push
lea
jb
bt
cmpb
push
jmp
add
push
mov
pushf
call
pushf
lea
call
jmp
mov
inc
mov
or
lcall
ss
test
das
daa
mov
fwait
repz
test
ds
mov
mov
les
sbb
scas
imul
movsb
movsl
mov
test
rorl
xchg
jae
xchg
adc
dec
xor
jmp
pop
xchg
dec
mov
aad
dec
mov
test
test
xchg
outsb
add
out
mov
rcrb
add
pop
mov
pop
lods
into
jne
or
adc
xchg
cmp
sbb
xchg
add
xlat
mov
scas
mov
inc
idivb
mov
mov
pop
lahf
bswap
mov
movsbw
pop
movsbw
movsbl
pop
push
mov
jmp
and
subb
push
loope
test
xor
sbb
sarb
dec
xchg
inc
out
jle
popf
mov
sub
roll
movsl
sub
ficompl
and
xlat
sti
aaa
mov
pop
push
fdivs
scas
fbstp
push
cmp
stos
mov
push
dec
rorl
mov
fld
cmp
dec
rcrl
cmp
cld
adc
lahf
dec
mov
clc
xchg
jl
and
shlb
push
lea
jmp
pop
cmp
adc
loopne
pop
cmc
adc
fs
rorb
cmp
rcr
dec
add
mov
mov
lods
test
mov
cs
pop
adc
sub
clc
mov
jb
xor
xchg
mov
test
lds
es
and
or
scas
cwtl
push
movsl
adc
insb
rcrl
iret
mov
dec
dec
loopne
sbb
push
pop
sbb
pop
pop
jbe
popa
inc
imul
and
outsl
fidivrs
daa
mov
fidivs
xor
in
rorl
movsb
pop
lcall
aaa
stc
cmpsl
icebp
cmc
xchg
aaa
cwtl
insl
sbb
out
es
nop
xchg
mov
stos
scas
aad
mov
fldt
scas
int3
add
addb
in
cltd
ret
mov
test
outsb
cmp
or
lods
mov
add
lods
aas
mov
ss
xlat
jo
frstor
bndstx
jmp
fnstenv
adc
cmp
pop
cmpsb
dec
hlt
nop
shll
jl
sarb
pop
jbe
loop
movl
inc
jge
or
add
cltd
pop
dec
mov
aas
push
xor
pop
add
cmpsl
arpl
aas
mov
dec
dec
cmp
gs
pop
jbe
xor
aas
call
aas
lds
dec
mov
lods
inc
dec
sub
shlb
push
lods
or
adc
mov
pop
jbe
xor
mov
pop
xor
aam
push
fwait
xor
xchg
pop
cmp
cwtl
dec
mov
loope
push
add
add
jmp
lea
jne
rcl
mov
ror
cmp
not
rcl
sub
rcr
not
mov
pushf
sub
jmp
lea
jb
pusha
lea
je
pusha
bt
cmp
add
mov
jmp
stc
call
mov
in
cmpsl
bound
pop
jecxz
sti
ljmp
and
add
xlat
aas
mov
jb
cmp
sub
dec
inc
scas
mov
sub
aad
mov
inc
gs
inc
pop
adc
inc
dec
pop
mov
inc
ret
stos
xchg
aas
jle
cmp
push
dec
cli
shll
pop
movsb
dec
mov
sbb
xor
mov
xor
sbb
insb
mov
sub
add
xchg
fwait
or
xor
and
sbb
jl
sbbl
push
add
add
movsb
jl
mov
out
push
pop
lret
fistps
mov
aam
pop
int
mov
stc
rcr
sarl
mov
fistpll
fadds
fbld
das
dec
outsl
push
repnz
or
out
push
jecxz
inc
mov
dec
jno
mov
dec
mov
inc
rcl
xchg
mov
in
stc
bnd
push
repz
mov
out
mov
sahf
xchg
and
inc
repnz
mov
jno
jmp
loope
aas
mov
test
arpl
imul
dec
add
sbb
pop
testb
jbe
pop
lea
jne
or
sbb
bt
xor
daa
aam
setp
bts
mov
dec
add
not
xor
mov
cmc
jmp
bswap
movl
mov
lea
mov
jmp
mov
pushf
movw
pushl
ret
not
xor
mov
pusha
jmp
pusha
mov
cwtl
pop
movsbw
movl
mov
lea
movsbw
lea
jmp
mov
call
mov
sub
adc
inc
mov
pop
xchg
adc
inc
ficoml
mov
push
pop
icebp
test
pop
sub
sbb
pushf
lret
fbld
test
adc
xlat
bound
addl
mov
xchg
or
cltd
cltd
jecxz
pop
shrb
push
dec
mov
movsb
shll
movl
xor
sar
outsb
lds
dec
xor
xorl
push
push
inc
test
push
outsb
jge
add
xor
add
push
lods
leave
int
xor
aam
xor
push
push
jmp
pushf
clc
push
dec
lahf
pop
paddq
fisubrl
or
stos
sbb
dec
mov
adc
xor
enter
fs
ret
jle
or
dec
mov
fstps
xor
add
sbb
incl
call
gs
movsl
js
leave
je
mov
jae
mov
stos
sbb
or
rolb
pop
dec
sahf
pop
mov
orb
jle
push
jnp
dec
dec
in
or
in
into
insl
loop
add
xchg
sbb
rcrb
nop
xchg
ret
jae
xchg
add
mov
inc
mov
dec
sbbl
es
icebp
cmp
shrb
test
and
push
mov
dec
mov
inc
xor
jmp
inc
cmp
lods
inc
adc
mov
lahf
mov
sbb
xchg
mov
add
or
push
out
xchg
pop
and
xchg
sub
mov
add
xor
rorl
jge
sub
cmpsl
les
iret
addr16
cmp
rcll
stos
dec
mov
movsl
in
jnp
fs
ja
jmp
cmp
call
pushf
lea
ja
pusha
mov
pushf
pushf
imul
stc
add
pushl
lea
jmp
inc
push
dec
inc
cmc
clc
xchg
rcl
shrd
shl
mov
neg
stc
mov
stc
cmp
cmc
xchg
call
pushf
jmp
inc
stos
popf
mov
imulb
mov
cs
mov
cmpsb
aad
mov
and
cwtl
mov
in
dec
cmp
repnz
insl
push
test
lret
push
push
push
in
into
and
cwtl
pop
jo
inc
lds
inc
sar
test
sub
lret
mov
cltd
mov
xorl
sbb
hlt
and
mov
sub
sarb
jne
sub
and
or
adc
das
sbb
out
sbb
push
dec
mov
jae
movb
call
into
rcr
movsb
and
out
jae
fstpl
dec
lods
mov
adc
sbb
ret
out
push
lahf
cmc
pop
jo
jmp
dec
mov
or
sbb
push
loop
push
dec
movsb
out
cmp
mov
dec
ja
insb
mov
aam
icebp
sbb
movsl
test
bound
lret
inc
loope,pn
scas
push
aaa
or
in
not
push
push
mov
xor
dec
cmp
ja
or
mov
lock
jno
mov
clc
loope
inc
stc
aam
cwtl
imul
lds
in
sahf
jnp
mov
fisttpll
arpl
movsb
xchg
ss
mov
adc
cmc
and
dec
fstp
inc
xor
movsl
test
out
xchg
pusha
mov
subl
jg
fs
jbe
lea
sub
xadd
shl
add
mov
btc
neg
mov
shrd
rcl
bswap
bts
add
sub
shr
xchg
neg
mov
sbb
stc
neg
shrd
add
js
push
not
mov
call
xchg
jle
push
pushf
movw
pushf
movl
push
movb
lea
jmp
call
xor
daa
mov
jno
data16
ss
mov
cld
inc
pop
repz
subb
mov
gs
mov
je
mov
add
xorb
nop
lret
sbb
add
bound
inc
push
mov
sahf
mov
rcll
sub
mov
movl
pusha
adc
pushf
movb
call
movl
pushf
pushf
mov
mov
lea
jmp
imul
mov
leave
popf
adc
int
ret
insl
daa
ljmp
adcb
mov
fs
sbb
les
not
in
cmpsl
or
pop
test
sbb
cmp
and
sbb
stos
adc
push
dec
mov
jne
fdivs
add
cltd
int
mov
push
les
pop
ror
cmpsl
test
arpl
sbb
orl
jmp
push
fmull
and
ja
bt
push
add
lea
cmc
cmc
push
or
movb
pushf
jmp
push
xchg
cmp
jmp
mov
stos
popa
cmp
aam
std
sub
lret
xchg
loopne
cmpsb
sub
cmc
add
xchg
xor
cmp
adc
cmp
mov
dec
scas
mov
or
inc
sarb
add
xchg
es
dec
fcmovnb
mov
mov
cmp
sub
imul
pop
ret
icebp
inc
loope
adc
push
xchg
jo
push
or
lea
jge
dec
sbb
call
aas
stos
rcll
sub
mov
mov
das
lahf
sbb
or
dec
add
hlt
pusha
lea
jmp
pushf
movl
pushl
jmp
pusha
movl
jmp
sub
pop
sahf
push
jns
bound
pusha
imul
adc
in
pop
insl
aam
movsb
stos
push
inc
jle
xchg
daa
sub
jmp
jo
ljmp
sub
daa
push
jmp
out
push
mov
adc
xchg
push
in
adc
jle
std
dec
outsl
mov
sub
add
jg
and
lcallw
das
jb
mov
xchg
int3
dec
iret
jb
dec
mov
addr16
aaa
lods
mov
int3
dec
and
iret
xchg
pop
xchg
and
jne
jge
or
pop
fwait
daa
in
lods
push
incb
xchg
jbe
stc
shrb
rcr
push
lods
repz
loop
lret
add
pop
jl
push
or
mov
xor
mov
scas
pop
popa
movsl
mov
imull
jge
inc
sub
sub
pop
mov
push
cmp
xchg
fcomip
sbb
jnp
xor
xchg
fsubs
jg
cmp
or
jnp
mov
imul
xchg
and
repz
mov
ja
mov
mov
in
lds
lods
push
add
mov
dec
in
movsl
clc
cmp
imul
fwait
sbb
arpl
xchg
movsl
std
popf
inc
sub
adc
xchg
subb
mull
push
sub
outsb
lea
cmp
xor
mov
and
jle
aad
inc
test
push
cld
jmp
call
ja
adc
mov
es
movsl
sbb
jae
mov
sbb
bnd
or
cmp
xor
mov
lds
paddusb
aaa
lret
adc
jge
sbb
and
sbb
mov
add
decl
xchg
xchg
lds
mov
push
mov
call
push
mov
pushl
popl
push
pushl
pushf
mov
pushl
ret
or
pop
lcall
clc
stos
icebp
sarl
pop
lds
xor
mov
xchg
pop
push
in
rcrl
fsubp
xor
or
test
cltd
push
push
insb
jbe
ret
push
push
jnp
rcl
inc
scas
push
jmp
popf
cwtl
jns
cltd
xchg
mov
rorb
mov
inc
sbb
and
add
adc
fistps
inc
in
scas
fsubs
sahf
cs
sbb
mov
je
addr16
push
in
push
mov
aad
cmpsb
sbb
std
jge
and
sub
and
cmp
xchg
inc
mov
push
lcall
jp
inc
rorl
jecxz
sbb
jmp
and
insb
jl
add
pop
push
jl
insb
cltd
pushl
lret
pop
lcall
xchg
sub
xchg
push
fcompl
lcall
loopne
push
idivb
push
lcall
add
mov
mov
cwtl
fbstp
push
and
roll
lcall
imul
imul
sti
pushl
jne
push
pop
cmp
movsl
mov
and
rcrl
movl
push
jae
sti
loop
mov
lcall
loopne
idivb
push
andl
sbb
mov
push
outsl
cmpsl
and
lods
stos
xchg
pop
cmpsl
outsb
lock
sub
mov
js
fnstsw
xor
mov
sbb
or
push
fs
push
shl
ljmp
pop
aad
pusha
cmp
xor
sub
add
mov
dec
test
stos
adc
dec
mov
xchg
aaa
sbb
cmp
pop
sarb
jle
lods
pop
into
icebp
jno
stc
mov
test
mov
rol
dec
push
ror
jmp
push
mov
lea
ja
pusha
call
pushf
pusha
jmp
stos
stc
cmp
sub
iret
jno
fildl
jecxz
adc
addr16
not
pop
push
cmp
outsl
int3
adc
int3
aad
add
mov
fsubrp
mov
loope
jle
test
addr16
lahf
ljmp
xchg
pop
jp
loop
or
dec
mov
push
outsl
pushf
inc
jecxz
dec
sub
lret
jl
push
mov
push
cmp
or
mov
push
insl
aam
jns
dec
ficompl
jno
ffreep
shlb
mov
repnz
iret
cmpl
mov
mov
stos
add
xchg
fwait
push
test
imul
sbb
dec
mov
mov
fimull
jl
cwtl
rcrl
cmp
shrl
insl
and
jno
lret
dec
mov
stc
jle
and
mov
pushf
call
pop
sbb
cmp
mov
pop
inc
clc
imul
mov
fdivrs
push
mov
insl
arpl
aaa
lret
adc
xor
jnp
bound
test
mov
into
xchg
and
insb
call
jns
stos
jmp
xchg
lcall
insl
mov
sbb
push
push
dec
mov
test
sbb
mov
adc
leave
call
jg
xchg
jo
push
orl
adc
aaa
scas
and
mov
pusha
pop
add
mov
icebp
push
rcll
xor
push
dec
out
test
jnp
jb
or
pop
xor
into
push
dec
hlt
mov
sub
or
and
sub
scas
mov
dec
and
fistps
imul
xchg
jl
cmp
shl
cmp
jbe
rcr
lret
fcmovbe
cltd
aas
cmp
std
xchg
lock
pop
xor
jnp
xchg
sub
adc
stc
ds
cmp
xchg
mov
sub
adc
sub
movsl
mov
fsubrs
test
cmp
scas
push
push
inc
xchg
jo
push
lods
loopne
sbb
or
push
xor
xchg
std
dec
mov
mov
cmpsl
xchg
arpl
ret
fwait
sub
mov
sbb
int3
or
xchg
std
mull
not
repz
mov
pop
pop
fstl
xchg
shrb
sbbb
es
pop
scas
addr16
shrb
js
lret
inc
pop
lret
push
sub
xor
xchg
jle
jl
pop
adc
loopne
sub
and
data16
pop
push
inc
or
sub
push
mov
inc
pop
sub
xor
stos
push
or
push
iret
xlat
aad
mov
sbb
push
mov
cmpsl
mov
xrelease
shlb
sbb
mov
stc
sti
cmp
dec
jl
sub
clc
dec
mov
lahf
repnz
movsb
pop
mov
push
mov
pushf
pushf
lea
jmp
ss
or
sub
aad
loopne
sbb
push
push
mov
mov
dec
push
push
sub
in
pop
fwait
mov
xchg
push
movsb
xchg
inc
mov
jge
cli
mov
stos
mov
dec
lods
ja
sub
jecxz,pn
mov
aam
outsb
fsubp
ret
lahf
xchg
mov
xchg
lret
dec
mov
xor
lea
je
pusha
pusha
pushl
add
clc
bt
call
push
cmp
sub
cmp
cmp
push
lea
jae
push
pushf
mov
push
lea
jmp
jne
bswap
pushf
movb
lahf
lea
movzbw
mov
call
mov
rcll
das
lahf
dec
ret
ljmp
in
add
clc
mov
ds
out
xchg
and
inc
dec
dec
add
stc
mov
sub
add
out
adc
or
ds
cld
out
sub
test
lods
sbb
inc
mov
gs
inc
add
rcll
imul
sub
in
ss
out
fisubs
push
and
ds
push
ss
lea
je
push
lea
jmp
pushl
mov
bt
bt
test
pushf
pusha
mov
lea
je
jmp
call
arpl
shrb
scas
mov
and
inc
shrl
aad
add
mov
jg
mov
sbb
in
push
into
or
orb
mov
pop
call
jl
pop
in
movsl
and
dec
xor
in
bound
inc
dec
test
sbb
out
faddl
adc
cmp
push
imul
adc
cmp
call
mov
cld
sbb
int
imul
or
xor
mov
jno
hlt
repz
inc
push
aaa
movsb
sub
dec
and
dec
mov
pop
loop
mov
xchg
mov
mov
cmp
femms
jo
push
or
sbb
pop
mov
and
add
repz
mov
ss
nop
addb
and
ret
mov
pushf
loop
les
fmuls
ret
in
cltd
dec
jg
dec
adc
pop
les
adc
lock
lods
push
test
sarb
jno
mov
stc
lret
jbe
mov
push
fnstsw
fisubrs
xchg
mov
add
pusha
data16
pushf
sub
mov
lahf
or
fldenv
ja
push
ja
pop
xor
cwtl
divps
xor
aad
sahf
or
ret
mov
mov
or
xchg
shl
testb
lahf
fimull
push
sub
adc
mov
sahf
lcall
aas
fsubrp
sti
mov
dec
mov
arpl
sbb
pop
cmp
loop
in
dec
mov
mov
fs
inc
xor
xor
mov
cmc
ret
cmp
ret
js
push
adc
rcrb
or
sub
mov
or
and
mov
cmp
enter
stos
or
sarl
jne
fsubs
sub
inc
xchg
testl
push
fwait
out
dec
mov
mov
psubw
stos
xor
add
test
pushl
push
add
sbb
bound
or
xor
inc
and
negb
aas
lahf
test
or
dec
sub
loopne
jo
mov
push
and
xor
cmp
cmp
and
test
jmp
adc
dec
inc
push
das
sbb
das
das
fcompl
movsl
cmc
pop
mov
les
inc
aam
adc
pusha
mov
inc
mov
out
mov
mov
aam
fstps
dec
cmpsb
mov
or
pop
cmp
mov
and
sub
adc
into
stos
pop
flds
repz
out
aaa
jo
fstpt
cmp
mov
adc
call
xchg
push
dec
cmc
push
bt
stc
shl
push
call
rcl
push
movsbw
mov
add
push
sub
bsr
bswap
movsbw
neg
push
setae
and
push
rcl
push
cmp
pusha
mov
daa
mov
dec
lahf
mov
pushl
test
stc
bt
test
lea
jge
push
call
mov
aaa
mov
clc
dec
stos
movsb
jo
dec
pushf
jecxz
mov
inc
repz
jae
inc
mov
outsl
ja
sbb
pushf
popa
xchg
cmpsb
testb
inc
enter
stos
ret
das
dec
cmp
jb
inc
ss
push
or
ret
div
push
iret
xchg
dec
jne
roll
add
in
out
add
pop
sbb
push
ss
inc
je
adc
mov
cmp
leave
jo
dec
sbb
insl
popf
shrb
in
loop
fdivrl
fistl
inc
shl
sbb
cld
push
cmp
sbb
sub
cmp
sub
stc
or
aam
movl
cmp
lds
adc
mov
lea
jne
jmp
jmp
notb
iret
pop
es
and
jbe
pusha
jmp
push
sub
repz
mov
sbb
cli
ret
js
shll
outsb
test
pop
push
pushf
inc
ja
or
cltd
mov
cs
sub
jns
add
cmp
outsb
imul
push
iret
stc
add
adc
and
ljmp
xchg
loop
icebp
lds
jmp
cmc
pop
test
in
mov
add
repz
push
shll
or
sub
call
psrld
mov
dec
lods
jp
mov
lock
dec
and
sub
fs
cmp
dec
ret
push
xlat
push
mov
mov
int3
mov
mov
push
into
push
push
loope
jl
loope
jmp
loop
into
mov
cmp
int3
dec
mov
mov
sub
in
mov
aam
mov
mov
dec
lock
cmpl
outsl
jl
rcl
cmp
ficoms
imul
and
or
rcrb
ret
mov
aad
cmp
mov
fldl
mov
daa
dec
inc
dec
mov
cwtl
sub
mov
repnz
push
jp
leave
pop
cltd
xorl
mov
add
and
sub
fnstenv
mov
orl
push
pusha
lea
add
lods
repz
push
pop
mov
imul
movsb
int3
lods
mov
mov
js
inc
push
sub
sbb
enter
sub
push
mov
push
call
lcall
loopne
xchg
xor
imul
mov
in
into
mov
popa
lret
stos
cmpsb
xchg
out
in
sbb
xor
out
movsb
jo
push
add
lea
fwait
mov
pop
push
xchg
out
in
mov
adc
sar
push
mov
insb
dec
pop
xor
jae
sar
mov
nop
pop
jecxz
popa
scas
ljmp
fwait
dec
add
orl
lcall
iret
jp
ds
mov
pop
pop
jmp
jnp
sbbb
sub
int
negb
movsb
jb
idivb
or
arpl
in
movsl
out
or
and
jecxz
mov
mov
aas
cmp
xor
cmp
pushl
movw
movw
pushf
lea
jmp
add
pushl
cmc
ror
mov
stc
push
sub
pusha
call
test
adcb
push
adc
addb
adc
loopne
ret
sbb
into
push
xor
outsb
dec
jnp
cmp
pop
dec
cli
fndisi(8087
xchg
cwtl
int3
pop
dec
nop
mov
or
xchg
adcl
xchg
or
repz
mov
and
dec
loopne
push
loope
mov
dec
fistl
mov
dec
jnp
in
lods
push
dec
dec
add
cltd
mov
inc
mov
push
mov
stos
or
pop
jmp
cmpsb
push
xchg
ror
mov
xor
movb
lea
jbe
push
pop
lea
sub
jmp
cmp
jmp
pusha
pusha
movb
jmp
pusha
shll
test
stc
pop
xor
mov
cwtl
and
out
outsb
cmp
popf
in
push
cmp
mov
cmp
into
jecxz
jmp
loope
add
cmpsb
loopne
jge
pop
mov
and
push
xlat
sbb
outsl
jecxz
or
out
movb
jbe
fldcw
pcmpgtw
test
or
rol
push
dec
mov
test
inc
sbb
sti
sqrtps
adc
leave
jns
sbb
xor
push
clc
mov
loope
push
adc
iret
lds
xchg
fcmove
xchg
daa
push
mov
lock
nop
fdivrs
lfs
aaa
jg
iret
cmpsb
xchg
jle
jb
dec
push
aad
into
xchg
std
cs
inc
aas
jl
imul
ljmp
mov
pop
idivb
lock
fnstsw
mov
icebp
shll
jg
dec
xchg
aas
cmp
mov
fdivrs
scas
imul
xor
lds
mov
mov
cmp
push
jbe
push
adc
sbb
dec
cld
sbb
inc
out
test
mov
inc
fcmovu
push
rol
outsl
cmp
pop
jecxz
jb
in
imul
dec
repz
push
pop
mov
cmp
cs
mov
dec
mov
pop
xor
or
inc
sub
or
and
pop
flds
fisubrl
aas
sbb
push
lcall
fcom
dec
pop
test
cmp
in
inc
fwait
pop
jbe
add
fs
in
cmp
push
out
icebp
mov
mov
in
das
mulb
je
mov
gs
repnz
rcrl
movsl
mov
jle
scas
lret
mov
xor
push
inc
rcrl
dec
clc
js
rorl
xchg
inc
insl
or
je
xchg
int3
insl
cli
sbb
inc
data16
test
xor
popf
jl
fsubr
mov
lods
push
les
addb
nop
mov
pop
push
fstpl
int3
or
aaa
testl
lods
or
add
loopne
sub
fsubs
mov
lds
gs
add
imul
and
pop
sbb
outsb
or
ss
fwait
dec
pop
lds
clc
lcall
push
xchg
or
add
xchg
leave
mov
es
stos
mov
xchg
adc
fldcw
arpl
sbbb
sub
mov
aaa
mov
inc
dec
mov
xor
movl
pushf
mov
push
pushf
movb
pushl
ret
cmp
test
cmp
movsbl
lea
pushf
not
pop
mov
pushl
mov
mov
lea
ja
pushf
lea
jb
stc
call
mov
repnz
pushf
pushf
jmp
sub
pusha
cmp
bt
cmc
cmp
push
jmp
push
lock
std
std
mov
xchg
gs
mov
ret
jo
jb
lret
int
push
pushf
mov
pop
dec
ss
xor
pushf
sub
inc
dec
dec
dec
inc
and
aam
pop
ret
add
in
sub
test
aaa
pop
xchg
jno
cs
cmovns
inc
insw
add
xchg
push
inc
mov
pop
fiaddl
insb
ror
jmp
adc
dec
fsubr
enter
lahf
nop
in
sti
pop
mov
adc
loop
push
cmc
mov
inc
pushf
xlat
popa
fsubrl
mov
jg
out
jo
push
sbb
mov
pushf
shlb
mov
stos
insb
test
inc
ljmp
ja
into
shll
dec
adc
jno
mov
mov
mov
pop
clc
sarl
adc
and
incl
data16
pop
fimull
add
or
cld
mov
fdivrs
or
seto
sbb
cmp
push
sub
pop
bound
or
sbb
and
add
dec
lahf
mov
cmp
dec
or
jecxz
daa
fisubs
mov
outsl
mov
dec
mov
inc
dec
fstpt
movb
lea
ja
pushf
pushf
inc
lea
jmp
cmc
stc
test
pusha
pushf
jmp
stc
add
jmp
mov
mov
add
pop
adc
lock
dec
mulb
xchg
dec
sarl
test
fidivrl
outsw
dec
adc
es
cmp
jnp
stos
dec
aam
or
sbb
push
mov
cmc
jo
mov
rcrl
inc
push
push
pop
insb
mov
or
add
into
arpl
or
sbb
in
in
or
sbb
mov
cmp
jge
imul
dec
daa
data16
push
jo
inc
pop
push
in
dec
js
xor
pusha
pop
mov
test
or
imul
scas
adc
fldl
adc
add
pop
je
or
mov
loope
adc
jno
shrb
movsb
sub
xor
fisubs
cmovle
in
ret
in
pushf
pusha
clc
sub
push
jmp
mov
cmp
cmp
cmpb
pushf
call
pushf
add
call
pushf
pushf
lea
je
jmp
mov
stc
cmp
push
lea
jb
clc
pushf
cmp
call
std
leave
movsb
or
loopne
pushf
outsb
fldenv
jne
mov
or
and
inc
mov
iret
pushf
inc
pop
jmp
push
jg
cmp
mov
test
aad
call
jl
arpl
dec
cmp
mov
arpl
or
jae
shll
mov
mov
stos
clc
jle
cmc
push
dec
popf
test
jecxz
jbe
fwait
cltd
sbb
in
fcmove
es
ss
fxch
mov
dec
push
sub
test
mov
push
inc
aam
pop
in
in
xchg
pop
adc
xchg
out
xchg
sti
rcll
arpl
hlt
jecxz
jl
jl
dec
fidivrl
sbb
dec
je
jbe
mov
mov
jl
or
sahf
loope
jle
aam
jle
stos
jge
scas
add
dec
sahf
out
fwait
pusha
adc
lea
and
dec
and
pop
fdivrl
in
clc
movsl
and
ficompl
jmp
fistpll
mov
mov
and
setb
mov
clc
repnz
jmp
jmp
bt
bt
test
pushf
pusha
pushf
pushf
lea
je
pusha
cmc
pusha
cmc
sub
stc
cmp
pushf
mov
cmp
movl
lea
ja
clc
imul
cmp
pusha
add
movw
lea
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
cmpsb
sbb
and
jmp
pushl
popl
pushf
pushl
push
pushl
ret
lea
je
xor
movzbl
sub
sbb
add
adc
sub
xadd
stc
shr
xor
shrd
shr
cmc
mov
shl
movsbw
movsbw
setg
add
bsr
bt
inc
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
cwtl
push
lea
jne
lahf
jmp
not
not
mov
mov
mov
call
lea
je
test
cmp
pusha
add
pushf
cmp
pushf
lea
jb
bt
test
cmp
call
mov
inc
pushf
shr
xchg
cmp
mov
clc
clc
mov
mov
pusha
pushf
stc
xchg
pushl
ror
add
mov
cmp
push
sub
jmp
mov
sbb
cli
rcll
mov
pop
stc
in
and
xor
cli
mov
push
ss
fimull
pop
cmpsl
pop
ficoms
lcall
lahf
and
jecxz
mov
hlt
cmpl
push
loope
and
in
cltd
pusha
test
adc
ret
mov
arpl
jbe
or
mov
adc
data16
sub
mov
test
pusha
add
pop
sbb
jmp
arpl
sbb
test
lds
mov
jnp
inc
push
rorl
and
push
dec
fwait
data16
loope
push
popf
cmp
insb
sbb
js
cld
sbb
roll
sub
jne
cli
pop
stos
push
sub
xchg
loope
push
cli
loop
jecxz
sub
mov
ja
pop
mov
xor
lcall
outsb
jmp
hlt
push
dec
loopne
sti
aaa
push
and
xor
loope
loopne
pop
sbb
or
test
jmp
stos
jp
pusha
in
lcall
sub
mov
or
int
cltd
pop
pop
popa
cmc
fs
std
adc
jmp
dec
inc
jp
inc
and
movl
pushf
pushl
movw
pushf
movl
pushl
pushf
pushf
lea
jmp
aad
cwtl
imul
push
test
cmp
mov
test
mov
daa
pop
sahf
mov
jg
in
mov
int
in
ds
sbb
mov
or
ja
add
loop
aam
popaw
faddl
cmp
push
dec
das
adc
arpl
test
mov
mov
nop
push
stos
repz
jns
add
xlat
fisttps
inc
jb
pop
popf
sbb
xor
dec
mov
imul
jo
cmp
xor
mov
fs
push
jp
repz
xchg
mov
pop
int3
stos
xor
jb
cli
sahf
push
mov
mov
jge
sahf
push
sub
mov
mov
in
js
push
lret
and
fisttps
outsl
incl
sbb
xchg
in
or
sub
inc
call
cmp
js
and
movsl
push
mov
int
add
out
mov
xchg
mov
sbb
mov
aad
in
jns
ret
andb
in
pop
push
popf
ja
test
pop
mov
or
xchg
jb
push
mov
ret
and
shrb
push
dec
cwtl
mov
jecxz
cmp
cld
pop
ljmp
test
jae
test
mov
sub
int3
call
and
nop
dec
pop
testl
sbb
mov
les
or
sub
pushf
popa
sti
movsb
or
xor
ficoms
dec
shrb
inc
jp
add
pop
or
pop
insl
adc
xor
lods
fadd
nop
outsl
mov
loop
mov
sub
mov
gs
xlat
aas
mov
arpl
mov
sub
xor
lods
dec
imul
sbb
cmp
lds
ds
call
sub
pusha
push
push
jmp
cmc
bt
or
pusha
lea
jne
push
bswap
mov
cmp
or
pushf
lea
je
xchg
push
movsbl
lea
bswap
movw
movw
pusha
movzwl
bswap
call
push
pusha
lea
jne
jmp
rep
mov
pop
not
mov
mov
push
pushf
push
lea
jmp
add
inc
sahf
popl
repnz
mov
sbb
or
pop
in
push
xchg
stos
das
sahf
es
cmpsl
into
outsb
mov
stc
jbe
pop
out
pop
jge
js
xlat
imul
imul
mov
inc
sub
inc
enter
ja
xchg
push
dec
mov
and
sbb
add
lods
iret
add
add
test
test
mov
rcl
sbb
mov
not
test
lea
add
xadd
shr
movzbw
clc
btc
inc
mov
jmp
jmp
movzbw
mov
pushf
bswap
pop
pushf
mov
pushf
pushf
pushl
ret
mov
add
dec
mov
and
in
fs
pop
xchg
addb
push
lds
aad
mov
fbld
pusha
push
test
hlt
add
rcrb
sub
shrl
mov
or
lods
mov
xchg
sub
je
adc
cmp
push
test
loope
fisttpll
mov
jb
xchg
je
xor
or
sub
mov
lahf
cmovl
sbb
stos
push
mov
pop
hlt
int
movaps
rcrl
inc
xor
pop
jnp
sub
pop
cwtl
dec
mov
aam
sub
into
mov
call
pushf
pushf
mov
movzbw
bswap
jmp
pushf
jmp
mov
pusha
mov
pushf
push
lea
jmp
pushf
mov
pushf
pushf
call
inc
not
mov
jmp
je
inc
mov
cmp
ret
cli
xlat
out
xchg
push
mov
es
gs
lods
adc
loope
xor
xchg
jp
and
dec
pusha
clc
inc
sub
ret
cs
mov
inc
clc
and
adc
aas
fstl
mov
das
mov
push
out
subb
addr16
and
fldenv
push
cmp
gs
mov
rolb
repz
sbb
outsl
lea
fcoms
dec
mov
and
mov
call
jmp
xor
cmpsl
add
jnp
sub
dec
dec
out
loope
clc
and
lahf
out
pusha
xor
repnz
ljmp
xor
or
pop
mov
jbe
outsl
rorb
xchg
nop
dec
int3
push
mov
push
pop
mov
add
cld
jbe
aas
dec
push
dec
xchg
outsl
push
cmpxchg
push
adc
popf
cmp
sub
xchg
fmull
xchg
insb
mov
cli
dec
mov
jg
mov
adc
mov
sti
outsl
adc
imul
mov
mov
incl
addr16
or
data16
or
cmp
mov
inc
fisubrl
out
in
pop
jb
movsb
sbb
or
sub
fcmovb
adc
aam
sahf
pop
shlb
nop
aaa
and
out
sahf
adc
pop
loop
inc
mov
mov
cmp
mov
pusha
fcompl
xor
sub
cmpsl
dec
mov
lock
sub
dec
popa
add
mov
sbb
aaa
stos
jno
sub
test
sub
shll
fiadds
xchg
lods
popf
add
or
inc
insb
mov
xor
test
rorb
in
into
into
mov
cs
test
gs
cmp
lret
sbb
icebp
mov
lea
inc
fidivrl
adc
dec
outsl
xlat
aas
mov
aaa
jp
arpl
arpl
fstl
leave
cmpsl
adc
fdivrs
xor
inc
lcall
push
jmp
nop
jns
leave
repnz
jbe
or
ja
scas
mov
je
stc
jnp
cmpsl
sbb
ss
adc
nop
cmp
inc
dec
mov
add
sbb
mov
xor
jbe
cmp
add
mov
inc
fcoms
out
push
mov
fcmovnu
cmp
sahf
adc
mov
pusha
add
lcall
fimull
loopne
fmull
and
sub
mov
and
cli
sbb
mov
rorb
movsb
jbe
sub
dec
lods
sti
fsubrs
fisubl
fstl
xlat
adc
loop
repz
ja
in
fs
pop
or
pop
and
pop
out
mov
jg
mov
rolb
nop
sub
xchg
adc
enter
out
fwait
inc
adc
aad
jne
mov
test
jg
test
fwait
leave
and
inc
sub
mov
flds
xor
jmp
lahf
fst
inc
in
mov
mov
pop
mov
movsb
mov
stc
dec
lret
jle
or
movsb
cld
adc
incb
sti
call
inc
iret
sub
push
rep
mov
mov
pop
fidivrs
or
add
push
pop
sbb
xchg
jnp
setp
and
in
insb
cli
mov
pop
insb
imul
pop
inc
pop
push
push
fsubrl
std
fwait
or
add
add
test
nop
inc
push
test
fnstsw
scas
dec
out
lret
sti
jnp
incl
mov
add
jecxz
imul
call
or
or
lods
sbb
fwait
or
mov
aaa
cmpsl
add
call
push
movhps
or
lods
jecxz
lahf
call
pop
arpl
int3
pop
fs
stos
lods
in
int3
and
out
std
in
fsubl
mov
lcall
mov
cmc
or
dec
dec
dec
mov
or
fcoml
jg
push
push
in
pop
aaa
mov
jecxz
stos
jecxz
lods
push
out
xor
lods
mov
mov
mov
sbb
pop
fs
dec
sti
ficomps
lods
fwait
push
dec
or
test
cmpsl
popa
nop
mov
mov
mov
pop
sub
enter
std
xchg
cmpsl
sbb
xlat
pop
sti
add
andl
lahf
sets
sub
out
std
jb
out
insl
addb
mov
or
movsb
std
in
cmpsl
pop
cmp
ret
sti
js
ja
sti
or
inc
push
xor
pop
mull
mov
xor
pushf
adc
fs
in
scas
mov
push
inc
lods
movsb
dec
in
cmpsb
fldl
pop
lahf
mov
inc
mov
imul
fs
in
popa
or
shl
in
or
aam
ja
bound
mov
and
cmpsl
adc
dec
pushf
clc
in
fwait
into
mov
iret
or
inc
std
bswap
out
iret
or
or
mov
addr16
arpl
dec
push
int3
mov
out
mov
orl
fwait
lret
lahf
sar
or
push
inc
int
sub
dec
mov
in
mov
jbe
mov
pop
dec
fs
je
add
lret
inc
fcomps
stos
jecxz
push
fs
adc
xlat
jecxz
inc
jo
mov
mov
mov
test
rcrl
push
rolb
or
mov
jne
ret
jle
pop
mov
mov
mov
js
addr16
push
aad
adc
or
xchg
je
in
iret
cmpsl
or
sub
ret
jg
jecxz
adc
sub
arpl
cs
mov
lds
or
out
mov
dec
cmpsl
out
test
leave
movsl
xchg
ret
fdivrl
jns
imul
adc
enter
in
pop
fbld
les
mov
in
out
mov
ljmp
push
mov
out
or
lods
das
sub
xchg
out
push
inc
dec
mov
pop
xor
fmull
lret
insb
or
sarb
cmp
xchg
in
movsl
adc
ljmp
addr16
jle
push
sbb
mov
stc
iret
jecxz
movsl
adc
std
in
cmpsl
sub
pushf
cltd
in
fs
or
lret
jne
pop
imul
dec
pusha
xor
push
cmp
stc
and
cmpsl
xor
int3
inc
mov
lods
dec
adc
push
sbb
adc
jg
ss
sbb
add
movb
jns
adc
out
dec
xor
fidivs
cmp
adc
xchg
jecxz
int3
cmovo
xorl
push
dec
in
mov
adc
push
xor
subl
call
sub
push
fimull
ret
daa
or
addr16
cmp
jbe
mov
xchg
mov
sub
daa
push
sbb
mov
std
das
daa
lahf
pop
sahf
or
out
mov
loopne
mov
sbbl
sub
mov
jno
mov
sub
xchg
adc
jmp
mov
xchg
and
jle
xchg
fildll
jge
enter
jmp
add
mov
xchg
shll
lahf
mov
fisubrs
lods
stc
add
inc
aad
xor
sbb
addr16
mov
push
fwait
jl
stc
cmp
jne
stc
test
sti
clc
mov
mov
call
insl
pop
xor
int3
adcl
setb
enter
jecxz
pop
cli
pushf
adc
imul
xlat
or
popl
mov
pusha
xor
adc
mov
out
std
jno
mov
cmp
psrlw
mov
movsl
lods
sti
sub
and
push
frstor
pandn
xchg
mov
lret
jmp
mov
rcrb
push
ret
pop
mov
mov
or
cld
mov
add
es
pop
cmovge
jcxz
adc
negb
enter
mov
fldenv
or
rcrb
outsl
into
dec
bndstx
jle
mov
lods
mov
in
in
push
xchg
or
lret
add
dec
or
mov
fwait
mov
inc
bts
dec
int3
mov
add
sub
cmp
jg
push
fwait
push
adc
sub
inc
and
jmp
lea
sbb
stos
stos
push
in
mov
in
xchg
cmpsb
shll
or
out
mov
mov
movsl
push
les
ja
mov
and
addr16
mov
or
pop
xchg
push
lahf
mov
fnstsw
jnp
in
int
in
lahf
mov
push
jb
outsl
fnstsw
test
mov
ds
jnp
scas
pushf
imul
in
inc
into
das
push
push
jg
jne
sub
stos
and
adc
mov
push
push
add
jecxz
ljmp
mov
jmp
add
leave
inc
add
jecxz
out
pop
adc
ret
lahf
imul
adc
or
xlat
subl
fisttpll
or
or
fsubl
adc
mov
sbb
clc
push
xlat
sbb
dec
or
jg
mov
lods
shrb
mov
mov
in
imul
cmpsb
sbb
fstps
cli
add
adc
push
std
jnp
jmp
sbb
jecxz
dec
fucomp
inc
and
inc
xchg
pop
or
push
mov
cld
pop
std
in
imul
sbb
rcrb
jle
lret
rcr
sub
sub
bound
mov
jmp
fsubrs
cmp
ss
inc
pop
fcmovne
adc
jbe
rolb
inc
test
cmpsb
in
mov
pop
into
jnp
mov
jecxz
cmpsl
jmp
pop
iret
mov
pop
mov
xchg
push
inc
lahf
or
and
ljmp
or
and
inc
or
adc
mov
arpl
mov
mov
push
imul
fs
inc
sbb
imul
ret
cmp
push
adc
sbb
mov
adc
out
mov
mov
in
cmp
out
cld
jmp
aaa
aas
push
mov
xlat
sub
in
scas
xchg
push
lods
dec
adc
pop
iret
dec
push
les
cmp
or
jg
ret
or
mov
cmpsl
shlb
in
leave
outsl
in
sub
cmpsl
cmp
gs
adc
sub
pop
int
cmpsl
out
or
add
out
lcall
pop
jge
in
stos
lcall
arpl
shll
or
lret
lods
push
and
xchg
sarb
or
fcompl
jae
sti
or
sbb
ja
cmp
rorl
adc
xor
loop
loop
loop
out
bound
jbe
cltd
mov
std
add
leave
cld
ret
mov
inc
sbb
push
ret
mov
cmp
sbb
fnstcw
test
jecxz
call
jns
mov
shrb
cli
xchg
adc
add
dec
lahf
mov
adc
dec
in
lods
pop
mov
mov
mov
lea
pop
xchg
dec
or
xchg
dec
or
clc
or
ds
test
punpcklwd
loope
jmp
lret
pop
enter
aaa
inc
rcrb
sub
dec
ss
fwait
inc
xlat
les
js
cmp
mov
mov
mov
shl
js
data16
sub
addr16
push
sar
lret
add
out
adc
aas
in
movsb
inc
test
rcrl
or
lods
mov
mov
in
call
pop
lret
imul
pushf
es
movsl
jecxz
jmp
rcl
movsb
shl
test
mov
cmpsb
shll
jno
ja
mov
jmp
vshufpd
mov
or
sbb
lret
daa
mov
data16
mov
mov
pop
mov
mov
dec
or
outsb
cli
jnp
orb
mov
das
sarb
push
sti
mov
jno
inc
arpl
cmp
fwait
popf
xor
sahf
movsb
fistl
fisubrs
loop
iret
fstps
pop
test
push
cmp
mov
fimull
sbb
and
fbstp
mov
xor
jecxz
pop
loopne
ljmp
jnp
rcr
ret
push
inc
pushf
stos
leave
adc
lret
fs
lahf
xlat
pop
or
or
in
cmpsl
insb
or
fimuls
pop
loope
ficompl
fucom
fs
mov
loop
movups
or
cmp
cmp
cld
or
in
fucom
mul
sub
fwait
nop
addr16
fmull
fmul
enter
ja
xchg
xchg
loop
ret
jnp
jns
jns
lret
outsl
sub
mov
cmpsl
adc
inc
xchg
sub
ror
mov
jbe
mov
out
lahf
int3
dec
sbb
stos
out
mov
imul
mov
lahf
iret
or
adc
pop
xor
iret
add
scas
pop
pop
popf
rcr
out
fcmovu
mov
mov
in
mov
adc
divl
imul
sbb
ret
add
and
je
call
ret
mov
add
or
lods
mov
sti
jecxz
cmpsl
dec
outsl
mov
push
movlps
pop
fldl
sub
adc
cmp
mov
neg
scas
pop
jmp
int3
adc
dec
jnp
movl
jae
in
or
cld
call
mov
fwait
nop
out
mov
addr16
outsl
popa
bound
mov
repz
cmpsb
out
in
leave
jae
int
add
repz
jl
mov
std
jnp
mov
or
mov
pop
int3
in
jnp
jae
loop
addr16
arpl
lods
pop
lods
xchg
dec
jg
add
xchg
dec
jmp
out
out
mov
xchg
cld
lods
in
or
enter
pop
rorb
xor
les
adc
add
iret
aam
in
xchg
adc
jo
push
pop
sbb
popf
fdivl
inc
xorb
or
sbb
cmp
add
shl
or
cmp
lret
jg
das
mov
inc
mov
fistpll
or
add
xchg
sub
addr16
push
call
movsl
ds
pop
and
adc
lods
push
ss
sub
daa
pop
cld
in
add
mov
dec
scas
xor
iret
xchg
pop
stos
inc
cld
inc
push
and
jns
xor
and
scas
xor
cmc
in
jecxz
fldl
xlat
in
lods
fwait
dec
ret
mov
mov
mov
in
add
inc
pop
sbb
imul
mov
vcvtdq2ps
fwait
enter
mull
or
in
iret
decl
call
mov
lods
cmp
and
jae
mov
inc
sbb
xchg
xor
xchg
std
negl
mov
mov
in
outsl
sti
adc
jecxz
pop
inc
and
jnp
je
sbb
daa
push
pop
or
jg
xor
push
sbb
aam
jae
call
mov
aam
out
jmp
fildll
in
js
sarb
pushf
je
test
lret
addl
push
jmp
insl
jo
lods
mov
dec
outsb
fisttpll
shlb
mov
mov
loopne
mov
pushf
and
cmpsb
mov
addr16
mov
sbb
into
mov
sti
shl
shrl
imul
int3
into
int
pop
xlat
mov
shlb
aam
aad
jae
loope
pushf
ror
jae
mov
call
xchg
imull
insb
pop
insl
mov
movl
out
fbld
push
mov
push
and
jg
ljmp
sbb
idiv
movntq
xchg
call
ret
or
lahf
jg
adc
add
subl
pop
cmp
leave
in
or
bswap
cmp
mov
pop
movsb
lock
mov
adc
cld
mov
mov
and
xor
jb
mov
fadd
dec
out
jae
adc
aad
lods
mov
sbb
ja
mov
test
lahf
pop
les
insl
dec
enter
jge
fistpl
lcall
xor
dec
push
cmp
sub
les
icebp
push
add
fldt
in
cmp
std
pushf
xchg
in
or
sbb
jno
into
or
cmc
jnp
or
mov
fstpt
test
mov
dec
mov
les
jbe
shrb
leave
ja
fnstcw
push
xor
mov
mov
pushw
mov
mov
xchg
push
cmp
mov
in
jmp
add
movl
mov
int
dec
test
jb
lea
mov
fucomi
mov
lcall
inc
cmpsb
mov
movsb
rcr
lret
sbb
je
jbe
add
lods
enter
in
int3
in
jae
mov
ficompl
cld
jnp
out
sub
movsb
jo
ret
pop
push
add
dec
outsl
fcoml
shrl
cmpsb
jmp
xlat
int3
repz
or
cmpsl
sub
aad
mov
xor
cmpsl
and
mov
lods
pusha
xorl
mov
cmc
mov
mov
leave
add
mov
xchg
test
movsb
add
jo
xchg
dec
jge
pushf
lods
js
mov
or
mov
test
dec
push
ret
mov
jno
sbb
mov
pop
divl
jl
pop
decb
sbb
fidivrl
aad
xchg
xchg
xor
aaa
pushl
sub
push
jno
add
push
lds
mov
or
das
mov
int
imul
scas
mov
cmpsl
arpl
mov
cmovl
adc
imul
mov
mov
aam
mov
pop
dec
in
pushf
data16
pushf
jns
mov
js
in
pop
scas
icebp
add
ror
jb
jno
insl
cmpsb
push
je
xchg
xchg
mov
bnd
maskmovq
divl
ret
jle
xlat
pushf
into
bound
lods
sbb
mov
push
or
es
loop
and
out
adc
mov
subps
std
in
cmpsl
adc
gs
xlat
mov
fcoms
adc
in
dec
xchg
out
xlat
push
outsl
movsb
in
imul
jno
aaa
ja
sti
mov
iret
adc
mov
mov
aad
xchg
fstl
ja
mov
cld
scas
sbb
adc
mov
mov
stos
dec
mov
add
mov
xor
mov
mov
dec
cmpsl
adc
xchg
inc
adc
dec
mov
insb
aas
cli
std
nopl
mov
arpl
xlat
arpl
add
test
sbb
rol
pop
ret
into
sub
jg
movsb
idivb
mov
jae
or
les
jo
movsl
je
dec
sub
ja
daa
hlt
push
or
insl
les
iret
mov
pop
mov
mov
mov
cmpsl
cmpsl
mov
cmpsl
mov
mov
int3
mov
push
push
shlb
arpl
push
int
outsl
out
jns
jle
add
mov
jmp
sbb
js
and
jno
add
jecxz
ljmp
sub
in
cmp
jns
scas
les
or
stos
iret
inc
mov
adc
adc
insb
jae
mov
insb
cli
std
sbb
fs
jns
dec
ret
mov
xchg
lret
daa
lcall
nop
or
cmp
mov
xchg
mov
jbe
lret
pop
test
push
mov
movsb
lahf
push
pop
shlb
iret
mov
inc
rcrl
popf
movsb
xor
mov
repz
in
sub
insl
leavew
jns
in
add
push
jecxz
outsl
das
mov
inc
arpl
insb
inc
cli
std
or
test
mov
or
mov
repz
mov
push
push
ja
aad
cld
cltd
sti
mov
mov
xchg
push
js
mov
clc
cmp
mov
or
add
mov
lahf
pushf
fs
js
push
rcll
lods
scas
notl
sbb
and
lahf
mov
add
into
sbb
andl
cmpxchg
pusha
cmp
or
dec
and
mov
imul
test
mov
or
pop
push
cld
cmpsl
mov
iret
jbe
pop
les
insl
xchg
sub
adc
popf
imul
sarl
clc
fwait
dec
test
jno
adc
add
jb
les
popf
and
or
xor
fwait
sub
pop
je
add
xchg
arpl
ja
iret
cld
insl
call
les
in
adc
mov
mov
add
add
mov
int
sti
rcll
fadds
pop
jo
adc
adc
mov
test
movsl
jbe
imul
mov
scas
ret
std
test
mov
xchg
outsb
or
lret
not
pushf
cld
add
push
pop
xchg
fsubrs
mov
scas
ds
and
lcall
lret
cld
sbb
fdiv
lods
xchg
in
mov
pop
cld
iret
push
lret
cmpsl
int
pop
sahf
xchg
getsec
adc
into
add
daa
or
push
addr16
jb
ds
shrl
test
mov
in
mov
cmp
push
test
cmp
addr16
pushf
adc
xchg
dec
mov
in
inc
mov
mov
push
add
int
xor
in
insb
test
leave
sub
fstpt
mov
ljmp
enter
mov
push
sub
aaa
add
jb
loop
enter
data16
and
or
outsl
pop
lods
sub
ret
cmp
jae
jbe
notb
xor
xchg
cmp
movswl
pop
mov
xchg
lcall
mov
shll
xor
cwtl
push
lret
xchg
push
xchg
ss
leave
or
pop
mov
push
jne
mov
mov
push
xchg
dec
mov
xchg
lahf
fisttpl
js
ret
call
cld
mov
xor
ss
leave
test
cmpl
xlat
add
pusha
jae
imull
jl
outsl
in
fs
xchg
fwait
pop
cmp
xor
roll
pusha
mov
daa
add
mov
jbe
lret
mov
out
leave
sub
add
enter
call
leave
push
dec
add
xlat
sub
mov
insb
sti
mov
pushf
movl
mov
aas
dec
mov
mov
and
push
enter
iret
or
cmc
mov
xchg
das
cmpsl
insb
shr
cmpb
push
popf
dec
pop
pop
sarb
dec
mov
shrl
lods
inc
and
ror
adc
outsl
cmc
lock
pop
mov
mov
inc
iret
roll
es
jmp
cltd
lret
dec
test
call
imul
clc
push
andl
daa
add
lods
jb
pop
sbb
addr16
adc
stos
lea
sub
fwait
push
jae
sub
ret
pushf
imul
inc
lahf
ret
cmpsl
bound
imul
pop
pop
cmp
push
pop
cmp
aaa
dec
test
mov
in
mov
out
pop
lods
pop
add
xor
scas
mov
sub
popf
sti
mov
js
mov
stos
aad
xor
cmpsl
push
movsb
aaa
mov
pop
adc
imul
push
lods
push
mov
std
je
xor
daa
xchg
decb
push
movsl
jae
mov
add
iret
enter
js
mov
imul
sbb
ret
arpl
int
adc
sbb
lods
or
rcll
xor
mov
dec
adc
lret
push
enter
ja
adc
insl
rorb
mov
sub
cmpsl
cltd
mov
int3
lret
into
fistpl
cwtl
loopne
js
jp
lahf
xor
repz
fadds
pop
filds
popf
dec
ret
xor
inc
push
enter
notl
aaa
push
fisttps
xchg
push
testb
mov
dec
or
lods
and
adc
push
lret
enter
push
xor
pop
adc
or
loop
dec
jecxz
dec
jbe
inc
pop
jnp
pushf
sub
jno
outsl
ja
call
push
int3
sti
xchg
sbb
jecxz
outsl
mov
sub
jecxz
mov
dec
dec
cmpsb
sti
dec
lahf
mov
lods
std
in
xlat
or
pop
jb
shll
xchg
test
insl
mov
xor
stos
arpl
jo
mov
add
add
mov
jno
movups
adc
push
jo
mov
pop
ja
das
leave
cwtl
mov
push
cmp
xchg
mov
mov
shl
ja
sub
lods
stos
shlb
movsb
jo
add
lea
inc
mov
lods
fmull
jmp
mov
mov
mov
jmp
fstps
xor
test
sbb
mov
int3
js
stos
ss
les
call
and
test
lock
dec
les
push
jmp
adc
test
rorl
sbb
fcmove
out
mov
ljmp
arpl
in
jae
data16
arpl
fcompl
and
aad
sub
mov
std
inc
push
sbb
push
inc
adc
xchg
in
loop
nop
inc
ficoml
jmp
push
add
add
orl
or
sti
cld
or
icebp
shr
cmp
cltd
mov
adc
loope
sar
jecxz
call
add
lock
aaa
outsl
fsub
int3
in
dec
adc
movhps
loop
incl
call
add
scas
pushf
arpl
mov
sbb
mov
xor
mov
test
ret
or
aam
jmp
icebp
pusha
xchg
xor
sub
jmp
popf
iret
int3
test
sarb
pop
mov
lock
fs
mov
ret
test
imul
leave
rol
data16
les
rorb
insl
xchg
loopne
jne
mov
fstp
mov
xchg
dec
ret
sahf
ja
lcall
pop
loop
lds
ret
inc
add
pop
imul
cli
insb
imul
mov
sbb
cs
repz
repz
mov
mov
or
adc
ja
movsl
xor
dec
cmp
cmpb
arpl
adc
divb
aad
push
fcoms
sbbb
test
in
xchg
mov
nop
xor
adc
and
pcmpeqw
lret
insb
pop
pop
jle
jno
lods
pushf
test
xchg
lret
jecxz
subl
jnp
sbb
cmpl
inc
out
inc
and
imul
jp
dec
jnp
xadd
pop
aad
mov
xchg
sti
cmp
enter
jl
repz
jne
and
jecxz
aaa
push
pop
adc
mov
lds
pop
xor
lods
sub
es
lahf
and
or
push
pop
ret
cmp
sub
decl
push
inc
adc
jecxz
es
or
rorl
inc
dec
lock
cmp
pusha
cmp
imul
leave
ljmp
mov
negb
inc
hlt
imul
leave
adc
arpl
inc
fwait
outsl
test
out
dec
clc
or
fucom
data16
sbb
jno
add
jl
imul
or
inc
test
adc
sbb
fistpll
es
or
sub
outsl
aas
aaa
jae
pop
and
or
dec
pop
pop
and
dec
imul
sbbl
orl
or
sub
subl
lea
and
adc
xchg
ret
xchg
mov
lods
push
popl
subb
gs
push
and
inc
mov
mov
jmp
jb
ficomps
adcb
pushl
rcll
dec
pop
sti
dec
mov
jmp
and
push
fstpl
xor
dec
ret
push
pop
mov
and
add
jno
or
ljmp
inc
sub
adc
inc
out
jl
cmp
shrb
sub
jmp
icebp
push
imul
push
xchg
push
jae
int3
push
fisubl
xor
idiv
jecxz
inc
jmp
in
cmp
inc
sbb
pop
and
jg
dec
push
sbb
inc
aaa
or
push
repz
mov
pop
push
add
jno
out
dec
lock
daa
jecxz
inc
pop
adcl
ds
mov
cmp
or
inc
mov
orps
pop
mov
test
pavgw
cmc
or
es
jmp
mov
in
pushf
cmp
les
inc
dec
push
inc
inc
and
je
jecxz
sbb
negb
shl
ja
fcmovu
dec
pop
decl
fldl
lock
das
xchg
mov
and
pop
or
add
out
fimull
std
rcll
sti
xchg
jle
jecxz
push
aas
sbb
jg
stos
pop
jg
std
mov
loop
mov
jb
push
jmp
out
and
push
push
add
fwait
cwtl
add
je
arpl
fisttps
mov
adc
or
xor
add
push
or
xchg
or
or
sbb
fistpll
jle
mov
push
dec
fcompl
push
dec
cmpsb
in
sbb
pop
sti
and
stos
fdivrl
psubd
mov
pop
bound
sbb
mov
xor
or
lret
sbb
cmc
sbb
push
cmp
test
inc
sub
mov
stos
xchg
fcmovbe
inc
clc
mov
mov
dec
mov
aad
push
or
inc
pushf
dec
repz
dec
mov
cmp
aad
cmpsb
inc
sar
hlt
cmc
pop
loopne
cmp
out
pushf
in
cmpsb
mov
fwait
mov
filds
cli
ret
sbb
pop
cmp
mov
negl
push
fwait
cmp
pop
sub
cmp
cmp
cmc
pop
push
ljmp
daa
jb
pushf
cmp
inc
xor
mov
iret
icebp
jnp
dec
xor
gs
arpl
fistpl
dec
es
xor
cmp
push
mov
popf
movsl
mov
mov
pushf
lret
and
imul
push
ret
sbb
dec
pushf
fwait
xchg
jl
movsl
into
rcrl
cli
ret
inc
gs
and
bound
repnz
int3
aam
out
push
insl
xlat
mov
test
adc
cmp
lahf
lock
add
xchg
outsb
enter
insl
popa
stos
jmp
fwait
xchg
xor
ja
lock
lods
cmpsl
inc
loop
in
and
sub
mull
and
mov
in
mov
mov
jb
imul
loopne
pushf
fwait
mov
or
insb
jge
rcrl
dec
mov
cmpsb
sub
sbb
frstor
inc
push
jnp
jnp
dec
js
mov
arpl
rolb
sub
repnz
push
pop
pop
mov
out
test
iret
pushf
aas
out
pop
mov
mov
clc
andb
shlb
insl
mov
sti
loope
add
push
aas
imul
mov
shll
testb
mov
lahf
int3
addr16
fwait
push
push
paddusw
pop
pop
bound
aam
pop
out
popa
xor
neg
aas
adc
aas
pop
jns
fucomp
inc
pop
imul
and
inc
xor
or
out
outsl
insb
pop
lcall
push
je
sub
push
addr16
jns
sbb
outsl
inc
ret
or
xchg
cld
cmp
push
push
inc
and
mov
fsubrl
fdivrl
pop
add
cmp
adc
jno
xchg
in
inc
jmp
fdivrs
movsb
loop
mov
add
daa
push
insb
push
fists
lahf
in
mov
popa
push
adc
sub
mul
hlt
loope
sub
or
fdivrp
xchg
arpl
xchg
mov
jmp
daa
fisttpll
out
movsb
out
fcoms
lea
sub
xchg
div
adc
jmp
in
xchg
push
jmp
mov
mov
in
mov
lcall
in
jmp
icebp
repnz
cmpsb
adc
lret
repz
in
pusha
push
xor
jnp
adc
adc
or
fwait
sbb
pushf
add
mov
in
fucomp
lock
movsb
repz
out
push
or
jmp
out
test
call
data16
ja
jecxz
data16
out
dec
xchg
push
xchg
pop
jmp
jnp
ja
adc
lcall
sbb
push
stos
test
iret
sarb
pusha
mov
adcb
adc
loop
fstl
add
cmp
in
xor
scas
pop
or
sti
push
mov
in
push
mov
popl
aam
repz
add
fnstcw
inc
ljmp
iret
or
in
mov
push
fcmove
jmp
mov
pop
xchg
fbstp
in
pop
mov
and
int
andb
jnp
popf
out
dec
je
push
jecxz
lahf
in
leave
mov
pushf
push
jmp
and
popa
xchg
in
sbb
mov
fstl
scas
call
mov
dec
inc
divl
mov
repz
cli
fwait
pop
in
or
fmull
lods
fisubl
ja
cltd
pop
je
and
xor
jb
sub
jns
cltd
or
sbb
jbe
and
insl
mov
xor
push
xor
jo
popf
aaa
push
cld
add
out
lret
push
and
mov
retw
cmp
popa
orb
test
arpl
xor
nop
sub
bound
jp
sbb
sub
pop
inc
negl
inc
cli
sbb
nopl
sub
in
and
ds
sub
pop
sub
mov
add
cmp
inc
dec
shlb
xor
dec
cmp
or
push
inc
cmp
mov
call
jecxz
add
mov
sbb
push
pop
add
jecxz
and
push
fbld
notl
jecxz
push
aas
sbb
es
jmp
xchg
cli
jne
jl
pop
xchg
das
sbb
jbe
xor
jae
out
jmp
jg
iret
out
push
add
mov
int
pop
mov
push
out
xor
add
xchg
pop
jb
pop
dec
cli
das
sub
add
xchg
adc
and
pop
xor
mov
inc
cmp
sti
out
in
mov
lea
out
ret
xchg
sti
ja
test
jnp
data16
iret
repz
mov
setbe
pop
adc
mov
inc
adc
das
out
mov
orl
movsb
fnstsw
into
insb
push
idivl
or
loop
fcmove
mov
and
imul
cwtl
out
push
jns
sub
cmpsl
xchg
sbb
mov
iret
gs
push
ret
imul
sub
data16
mov
rcrl
or
pop
jge
mov
test
adc
xor
add
out
sti
test
jns
jmp
insl
pop
xchg
adc
imul
pop
push
movhps
mov
pop
call
jmp
ja
lret
sub
or
dec
cmp
sbb
mov
adc
dec
pop
or
sub
sbb
jg
mov
sbb
sbb
das
test
ss
cmp
cmpsb
sbb
xchg
dec
xor
popa
mov
packssdw
and
or
push
sbb
out
cld
sti
aas
pop
sub
xor
jge
lahf
dec
sbb
pop
or
ja
ds
sub
or
sbb
imul
dec
mov
fwait
out
hlt
stc
pop
add
lret
push
repz
std
push
pop
repz
sub
mov
sub
or
cs
adc
mov
or
sbbl
inc
repnz
mov
xchg
mov
and
xor
shlb
cwtl
out
adc
jnp
arpl
ret
jo
sti
mov
mov
sub
push
sbb
pop
xor
adc
sub
xchg
or
out
push
xchg
add
subl
lahf
mov
out
roll
or
pop
aaa
mov
stos
cmpsl
push
jl
inc
lret
xchg
add
fistps
jecxz
jl
pop
insb
repz
int
aad
xchg
fisttps
rorl
mulb
sbb
or
add
adc
stos
fbld
xchg
fstpt
add
fcomps
ja
mov
imul
cwtl
sbb
inc
xor
mov
int
pop
fs
lret
call
dec
mov
int
int3
inc
or
xlat
outsl
repz
ja
out
mov
adc
ret
bound
bound
test
aad
jns
ja
mov
jae
shll
cwtl
sbb
pop
stos
outsl
push
push
pusha
xchg
jg
gs
jp
xlat
xchg
xchg
cmpsl
cwtl
jl
and
jge
xchg
jnp
add
fwait
xchg
gs
xchg
and
jle
fwait
or
lcall
cs
bound
sub
xor
adc
lcall
sub
call
mov
mov
xchg
dec
out
gs
xchg
push
mov
je
xor
mov
cs
es
lret
or
mov
mov
pop
insb
push
jecxz,pn
sti
aaa
or
jg
adc
fucom
xchg
jp
testl
xchg
addb
jp
inc
pusha
stc
fwait
ret
jbe
pop
movl
ret
sti
les
lds
sub
rol
pop
mov
pop
pop
das
pop
cs
js
pop
out
dec
or
lret
add
xchg
mov
jle
adc
rol
mov
or
stos
aad
cmp
jb
repz
push
arpl
mov
imul
lea
inc
jmp
xchg
movsb
xchg
or
jg
sbbl
sub
push
in
xor
cmp
iret
push
xchg
pop
jge
mov
xchg
mov
out
rorl
fadds
out
sbb
je
add
xchg
mov
xor
cmpsl
divl
or
out
data16
insb
int3
repz
out
xor
pusha
inc
out
in
cwtl
pop
xchg
out
ss
cmp
stos
repnz
add
repz
fistps
daa
adc
add
fisubrl
xor
and
out
jg
in
or
jmp
xchg
sub
insl
pop
out
outsb
jmp
sbb
popa
mov
daa
xchg
or
gs
inc
pop
stos
cmpsl
shll
lcall
mov
sub
pop
stos
mov
cmpsb
shr
mov
pop
mov
call
stos
out
mov
stos
outsb
data16
movsl
mov
pop
fwait
aam
pop
scas
sahf
pop
sar
scas
mov
adc
jmp
mov
popf
int3
sahf
xchg
movsb
pop
sarb
push
jno
sti
ret
mov
ja
in
jnp
insl
lcall
outsb
outsl
out
mov
mov
jmp
mov
pop
out
jb
data16
jecxz
xchg
cmp
in
lods
pusha
or
lcall
adc
mov
add
xchg
sbb
insl
mov
mov
cld
lds
mov
aam
mov
je
ja
mov
mov
cmp
jg
sub
mov
mov
addb
xchg
cmp
cwtl
fcompl
jecxz
pop
mov
bound
push
xchg
inc
or
in
gs
inc
sti
jecxz
repz
xchg
pop
mov
lret
mov
mov
jmp
into
and
mov
pop
fs
jg
fcomp
out
int
das
or
int
out
lods
inc
pop
mov
xchg
sbb
sti
mov
xlat
mov
lahf
mov
fwait
dec
lret
repz
fadd
jecxz
pop
jge
pop
cmp
mov
mov
jae
jbe
push
imul
ljmp
lea
xlat
mov
mov
out
xchg
test
mov
pop
test
aad
aaa
or
jmp
addr16
outsb
mov
jnp
jnp
dec
dec
fcomip
lock
cmp
xchg
stos
lods
orl
out
sbb
add
scas
jmp
inc
or
push
insb
jecxz
or
and
or
fwait
xor
or
mov
push
sub
push
testl
mov
pop
andl
addr16
sub
xchg
daa
adc
test
out
iret
addr16
mov
add
pop
stc
fstps
jbe
xchg
pop
or
cmp
inc
movsb
sar
ret
mov
into
mov
pop
in
mov
ret
cwtl
addb
push
add
cltd
jg
xchg
mov
jmp
mov
cmp
mov
inc
insl
fcompl
cmpsl
into
sti
jnp
xor
das
sti
enter
or
rcrb
cmp
movsl
dec
inc
jb
xchg
jnp
xchg
adc
ret
jns
packuswb
cmpb
push
jne
fcomp
and
mov
cmpsl
int3
cmp
rol
jnp
jp
mov
das
inc
fs
jle
xchg
pop
cmpsb
seto
xor
in
xchg
dec
pop
sbb
int3
int
push
fwait
shrd
scas
xorl
pop
cmpsb
mov
jmp
nop
daa
aaa
insb
mov
stos
test
nop
test
into
mov
aas
jge
cli
fs
pop
xchg
cmpsb
scas
xor
jge
xchg
insb
sub
add
outsl
or
les
mov
scas
jb
push
dec
cli
jg
sub
xchg
imul
add
arpl
mov
push
addr16
lcall
add
adc
fisttpll
movsb
iret
pushf
pop
mov
fs
mov
jg
lods
test
pusha
mov
pop
cmpsb
lea
mov
xchg
xchg
out
adc
sbb
pop
stos
jmp
lcall
jae
pop
sub
mov
mov
xor
add
pop
pop
movsl
popf
lahf
mov
fs
aas
sahf
pushf
into
fdivr
add
les
fs
repnz
js
outsl
imul
xor
cli
mov
pushf
adc
divl
fcomps
cwtl
repz
or
jae
and
push
pusha
mov
xchg
in
pop
add
inc
rclb
cmpsl
into
or
push
aaa
jbe
nop
adc
lcall
movsb
lcall
ja
insl
mov
fs
mov
mov
mov
les
push
insb
repz
insb
pop
push
arpl
mov
out
mov
leave
ja
mov
mov
push
jmp
arpl
jl
mov
arpl
outsl
xchg
dec
das
pop
push
dec
and
cmp
jmp
in
mov
fs
pop
iret
mov
fwait
scas
rdmsr
xor
fsts
aad
cwtl
addr16
call
or
push
jb
and
out
mov
and
fildl
or
or
lret
ja
popw
push
in
div
call
add
cmp
pop
push
xchg
fldl
incl
fwait
mov
dec
sub
stos
pop
test
mov
mov
rcrb
test
add
test
repz
mov
pop
ds
xor
cmp
push
xchg
mov
and
xchg
cwtl
test
fwait
sub
or
push
gs
pop
lea
jmp
pop
leave
ret
push
push
xchg
std
or
cmp
add
xchg
dec
mov
pusha
lea
mov
fcmovbe
or
bound
adc
xchg
cmp
inc
jnp
mov
mov
jg
mov
dec
adc
mov
in
xlat
jnp
jle
pop
adc
mov
test
cmp
and
cmp
sarl
in
sbb
inc
push
es
mov
xor
xchg
inc
and
jo
mov
push
fxch
push
xchg
mov
das
lds
movsl
xchg
sbb
repnz
sub
push
dec
aaa
push
lret
push
push
dec
xchg
jmp
aas
inc
inc
orl
in
fisttpll
fwait
cmpsl
test
imul
pop
or
int3
fstpl
xor
enter
cmp
aas
fwait
add
cs
sti
xor
imul
sub
cli
push
adc
scas
mov
pop
rcrl
push
pop
mov
arpl
pop
or
pop
push
in
sbb
aaa
cmp
adcl
popf
cmp
mov
sbb
xor
inc
pop
out
movsb
xchg
mov
cmp
push
nop
mov
add
lcall
jns
lock
sti
mov
dec
jecxz
ret
jecxz
ds
aas
push
repz
dec
pop
pop
jnp
xor
or
jb
jg
push
lea
fistpll
pop
addr16
jo
xlat
stc
insb
repnz
sub
jae
lret
xchg
sub
pop
sub
jl
pop
aam
cmpsl
loopne
pop
je
xor
cmp
adc
and
cmp
sbb
and
mov
xchg
push
out
lock
fldt
int
stos
in
outsl
shrl
dec
mov
push
repz
in
repz
or
call
mov
and
jae
inc
or
out
in
addr16
jg
popf
dec
test
testl
adc
jbe
mov
and
or
icebp
jmp
fwait
test
adc
jg
int3
ljmp
jmp
cmp
and
fs
lret
repz
out
mov
into
lret
fdivrl
mov
iret
je
or
or
mov
sub
movsb
into
rcrl
std
pop
sbb
jl
xor
push
inc
cmp
adc
jb
jne
aas
out
mov
scas
xor
cwtl
mov
testl
add
fadds
and
cmpb
sahf
mov
jg
xchg
mov
mov
dec
and
and
mov
cwtl
out
mov
aaa
mov
pushf
cmp
or
adc
js
mov
mov
adc
ja
pop
lahf
lcall
popa
or
inc
int3
imul
sub
outsl
data16
mov
jae
jp
mov
aas
mov
sti
cltd
not
ud0
popa
pushl
fistpll
sub
aaa
and
mov
popf
and
movsb
push
pushf
cmp
cmp
sub
dec
dec
stos
repnz
mov
pop
data16
xchg
or
data16
add
cmp
cmpb
test
lods
add
fwait
mov
jmp
sbb
dec
in
pop
inc
cltd
sahf
call
iret
sbb
mov
pop
dec
fnstsw
movsb
movsl
iret
movsb
rcrl
or
push
inc
mov
jnp
or
cmpsl
xorl
out
sbb
xlat
iret
and
sub
clc
mov
push
mov
scas
pop
mov
mov
xor
mov
rcl
lahf
dec
mov
enter
push
lret
pushl
jecxz
cmpsb
inc
js
sub
fwait
sbb
sub
pop
or
and
or
cltd
and
bound
adc
xchg
inc
shlb
fnstsw
in
cmp
sbb
mov
pusha
daa
pushf
mov
cltd
push
and
and
aam
dec
fwait
es
mull
shrb
addr16
push
ds
pushf
stos
inc
insb
sbb
out
sbb
je
or
ja
jg
in
fcoms
fldl
pop
out
in
out
push
sub
je
inc
dec
lahf
scas
ror
repz
cmp
sub
or
pop
in
fnstenv
loopne
jb
and
repz
das
jmp
imul
into
ror
push
sbb
pop
in
sub
addr16
iret
push
mov
inc
bound
into
mov
lret
dec
in
fs
xlat
ljmp
push
into
lret
adc
decl
mull
mov
out
test
cmp
insb
xor
mov
pop
add
jae
xchg
mov
lret
stc
das
out
sub
mov
pop
incb
dec
sarl
cmc
fsubrp
cwtl
cltd
xchg
sub
inc
push
cmp
mov
pop
movups
and
dec
mov
inc
sbbl
sub
dec
cld
scas
mov
sub
xlat
dec
ja
xchg
sti
data16
mov
mov
insb
mov
ja
ret
fwait
pushf
inc
ja
pop
pop
jno
movb
es
xchg
mov
sbb
or
xchg
sub
mov
and
out
inc
mov
mov
cmpsb
jno
push
out
add
call
rol
arpl
stos
cmpsb
mov
sub
sub
sarb
dec
inc
lds
jnp
inc
int3
lahf
xchg
xchg
sub
ret
push
sti
cmpsb
addr16
push
repz
push
push
ja
out
mov
sub
lcall
rcl
les
hlt
fsubp
jl
fwait
inc
mov
jl
mov
es
xchg
pop
lds
jno
lods
in
mov
pop
clc
add
adc
adcb
test
sbb
ss
cmp
dec
sub
mov
pop
sti
enter
rorl
lock
lahf
popw
cmpsl
mull
lret
cli
int3
mov
aam
dec
add
stos
xlat
out
pop
pop
nop
jge
iret
andl
xchg
inc
nop
push
repz
xor
pop
sub
aas
xchg
pop
add
inc
add
insb
xchg
iret
addl
lahf
enter
andl
jl
and
jnp
xlat
add
lret
test
and
add
pushf
jle
xchg
pop
mov
pop
fs
das
dec
ret
sub
cmp
aaa
sub
xchg
ds
push
pop
xchg
cmp
dec
sbb
je
add
repz
add
or
add
scas
iret
mov
ror
fbstp
outsl
xchg
jbe
pop
adc
pop
adcl
push
xor
pop
mov
mov
and
aaa
and
and
imul
xor
cmp
cli
clc
mov
xchg
sbb
in
mov
sub
xchg
or
sbb
adc
lcall
fs
and
shr
mov
xor
adc
jmp
dec
mov
daa
cmp
fmuls
jmp
jl
xchg
jno
push
or
sub
sbb
rcrb
adc
lea
les
imul
mov
daa
dec
in
mov
sub
repz
ror
jnp
or
in
or
and
jno
mov
stos
addb
or
or
bound
xchg
lahf
xor
inc
daa
rorl
iret
fbld
rclb
push
xchg
mov
cmp
stos
adc
pop
stos
xchg
call
dec
mov
xchg
or
ja
aaa
lcall
jmp
outsb
inc
xlat
out
adc
mov
out
mov
repz
les
and
mov
daa
mov
lods
hlt
pop
daa
fbld
mov
arpl
gs
xlat
sbb
or
xlat
das
xor
cwtl
or
mov
pushf
cmpsb
or
ret
pop
add
pop
idiv
add
outsl
push
test
xlat
lret
xorl
into
iret
sti
fmuls
lahf
pop
mov
xor
in
cmp
or
cmpsl
sbb
sbb
push
mov
and
rcr
sbb
pop
pop
or
adc
and
in
lahf
jae
ret
mov
test
movsb
adc
jno
mov
jp
mov
mov
mov
cvtps2pi
aam
test
mov
mov
out
inc
pop
sti
xchg
xor
adc
adc
add
lods
stos
dec
push
sub
mov
and
push
fwait
inc
cmp
fildll
aad
jecxz
out
pop
jecxz
clc
out
jecxz
or
daa
fstpt
xor
imul
stos
lock
insl
clc
out
daa
push
lahf
rol
dec
out
into
mov
mov
scas
imul
cwtl
fcmovnu
mov
nop
xor
or
mov
scas
mov
cwtl
adc
push
jecxz
or
call
adc
adc
fmuls
out
sti
ret
in
bound
adc
sbb
std
scas
jmp
add
mov
push
mov
sahf
xor
sub
pop
cmpsl
ds
insb
push
sbb
les
leave
sarl
dec
imul
add
int
jecxz
idiv
out
xchg
or
cmpb
adc
push
and
mov
into
mov
lret
scas
stos
adc
arpl
idivl
ret
xor
jns
out
jmp
pop
mov
inc
jmp
add
xor
inc
getsec
or
pinsrw
jecxz
push
adc
fwait
in
pop
mov
cmpsb
out
add
mov
shll
cli
sarl
push
out
insb
mov
lods
xor
in
arpl
jb
xor
iret
int
xlat
fnstcw
imul
push
add
stos
mov
and
pop
xchg
push
adc
loop
mov
lret
adc
sbb
sti
mov
addr16
cld
push
mov
cvtps2pi
xchg
xchg
aad
je
lret
xchg
shlb
mov
hlt
jg
push
arpl
xor
imul
ret
pushf
jecxz
jne
xor
cmp
shrb
lahf
repz
cmpsb
movsb
fucomip
gs
and
pop
in
cmp
flds
mov
pop
aaa
mov
daa
scas
xlat
mov
xchg
mov
jae
in
jg
iret
cltd
jnp
imul
mov
ja
or
or
jecxz
lods
mov
inc
imul
out
mov
dec
xchg
out
mov
insl
or
fistps
xchg
jecxz
aas
sarl
xlat
mov
aaa
inc
outsb
or
sbb
mov
xchg
mov
push
fstpt
ja
into
push
xor
mov
shl
pop
adc
push
out
out
and
sbb
mov
dec
dec
mov
mov
sbb
mov
push
adc
cwtl
in
cmp
ficoml
inc
xchg
jae
out
push
mov
arpl
xchg
mov
xlat
aad
push
std
push
cmp
jb
xchg
cmpsb
push
add
ret
je
out
popa
gs
xchg
sti
jg
loop
pop
pop
es
clc
lret
out
mov
imul
pop
pop
cli
mov
test
pop
adc
into
xchg
pop
das
iret
sub
int
xchg
into
adc
or
xchg
arpl
aad
mov
scas
shrl
push
jns
sbb
daa
pop
dec
jecxz
dec
cmp
mov
ret
repz
fildll
adc
scas
mov
inc
or
mov
stos
fnsave
cs
pop
jb
sbb
add
cwtl
out
in
stos
jp
mov
stos
in
mov
pop
sub
and
push
shr
fistps
mov
andb
jb
and
sbb
fildll
jb
lds
in
mov
xlat
jno
mov
outsl
setns
out
xor
in
adc
frstor
mov
outsb
sub
add
pop
xor
xor
out
xor
jge
or
cmp
sub
push
adc
adc
lahf
push
outsl
jb
mov
mov
cmp
shrl
mov
push
lcall
cmpsb
arpl
sub
jl
sub
xchg
mov
lahf
addl
push
aas
mov
or
jmp
iret
aam
push
or
add
xor
enter
mov
xchg
inc
enter
in
mov
xchg
jle
adc
add
rol
jb
push
mov
xorl
sbb
add
aas
sbb
out
pop
lea
cmp
mov
cmp
das
add
fsubrs
or
pop
mov
nop
fstpt
xchg
div
sar
pop
out
or
arpl
push
mov
sub
jecxz
or
in
inc
pop
call
sbb
jle
lods
jmp
cmpsl
pop
cmp
jne
push
cmp
fisttpl
fistpl
push
les
lret
shrb
lahf
rcrb
sbb
popf
fdivl
shrl
mov
push
mov
adc
test
mov
out
mov
xor
in
add
or
mov
sub
je
addr16
pop
pop
inc
jecxz
fwait
cmpsb
push
and
in
icebp
popf
mov
stos
stos
ret
mov
leave
aas
fistl
cmp
and
cmp
push
push
in
pop
pop
test
daa
lock
movsb
out
stos
pop
push
rorl
dec
xor
xchg
xor
push
pop
adc
popf
inc
sbb
push
jge
xchg
popf
inc
mov
or
fs
cwtl
sub
cmp
sbb
inc
xlat
out
push
fisttpl
xor
jne
add
mov
jae
fsubl
stos
inc
cmp
lret
jmp
jno
rcll
test
mov
call
enter
lods
cmc
jno
sidtl
lods
in
loop
ja
sti
dec
int
mov
pop
fistps
cmpsb
aas
pop
jge
inc
jecxz
and
lods
cmp
sub
mov
pusha
inc
jecxz
sbb
idivl
fs
xchg
and
sbb
mov
ljmp
sub
mov
fdivs
sbb
push
dec
shrb
mov
mov
mov
ja
fcoms
adc
or
fbld
mov
dec
or
inc
pop
aas
aaa
fistps
rorl
mov
cmp
in
lret
pop
inc
arpl
mov
sub
mov
pop
xchg
jg
rcr
fisttpl
pop
rorb
es
cmp
test
in
pop
scas
inc
mov
std
jae
sbb
jecxz
push
push
adc
adc
xchg
movsl
and
mov
fistps
in
inc
push
imul
jg
inc
pop
out
pusha
insb
and
pop
push
mov
or
lods
pop
in
adc
shlb
jecxz
pop
fcmovnu
cmp
mov
call
fldt
fldl
hlt
jmp
fcomi
mov
mov
fldt
testl
iret
scas
fmull
dec
or
pandn
jecxz
sbb
ud2
sbb
stos
mov
shrb
fcmovnu
pop
xchg
jg
mov
rorl
punpckhwd
addr16
mov
ljmp
scas
push
jmp
cli
sub
aaa
adc
or
out
icebp
in
xchg
hlt
push
pop
out
fmull
xchg
mov
xchg
xchg
cmp
or
sub
push
fsubp
xchg
xor
sub
xchg
mov
out
sahf
dec
jnp
xchg
mov
jae
or
pop
cmp
push
movsb
mov
sbb
sti
cld
xor
cmp
mov
xchg
or
sub
lahf
in
cmp
pop
mov
mov
fisttpl
decl
cmp
jecxz
pop
adc
mov
pop
push
sbb
setl
mov
mov
fcomip
stos
jle
lret
jecxz
and
jae
xor
or
daa
push
jecxz
and
mov
push
jecxz
jae
pop
out
pusha
ja
mov
out
insb
mov
andb
aam
rcrl
or
or
fsubrl
xchg
xor
aad
xlat
pop
mov
mov
pop
fldt
pop
or
cmpsl
xchg
ret
cmp
popf
movsb
into
loope
mov
imul
jmp
mov
js
lret
lret
push
jecxz
pushl
or
mov
out
dec
addr16
lods
out
cltd
paddsb
pop
rcrl
and
js
pushf
lods
popa
fisttpll
push
cmp
testb
inc
lret
rclb
add
mov
ss
inc
and
out
out
push
and
in
sbb
clc
mull
adc
fsubrs
daa
mov
sti
cmp
push
fcomip
fiadds
lock
addr16
repz
mov
nop
xchg
jle
ret
das
addr16
mov
sub
lock
jmp
mov
or
test
mov
fldt
push
dec
imul
aas
adc
aaa
jno
in
xor
lcall
dec
out
sbb
and
dec
out
lret
std
and
popa
dec
scas
pusha
xchg
mov
lea
in
jae
imul
jae
add
decl
dec
add
jg
push
dec
dec
push
jmp
pop
push
push
incb
mov
mov
push
mov
mov
mov
cs
out
pop
into
sti
jecxz
mov
ja
jmp
mov
lods
lods
inc
mov
xor
mov
dec
dec
pop
xor
dec
inc
and
movsl
into
jo
inc
outsb
cmpsl
or
das
push
pop
or
out
jmp
push
adc
pop
fs
sahf
int
addr16
out
outsl
mov
call
movl
fnstcw
mov
mov
xchg
fidivl
setae
daa
cwtl
sbb
dec
cmp
aas
rclb
aas
ljmp
and
mov
and
pop
and
adc
mov
mov
adc
add
push
cmp
mov
out
mov
arpl
xchg
lea
mov
ss
adc
ficoml
repnz
sbb
jecxz
cmp
pop
pop
jnp
xchg
mov
call
out
aad
jecxz
jecxz
out
pop
sbb
add
popf
addb
aaa
int3
lods
out
pop
jne
fldt
js
cli
mov
sbb
enter
stc
repz
icebp
lret
and
jne
arpl
mov
pop
or
pop
call
ret
div
or
add
pop
fstl
mov
fnsetpm(287
outsl
fdiv
stos
mov
mov
jg
addr16
ret
div
pop
call
cld
or
add
sub
into
push
out
out
out
and
pop
aas
xchg
sub
scas
sti
mov
fstpt
call
pop
inc
xor
rdpmc
scas
xchg
and
nop
mov
out
xchg
insl
sbbl
xor
jmp
pop
pop
out
add
fistpll
ljmp
add
js
cmp
mov
hlt
aas
outsl
add
fildll
or
ljmp
adc
mov
cmp
in
and
repz
mov
push
jmp
repz
add
push
mov
cmp
sub
adc
daa
push
std
dec
sub
mov
ficoms
and
adc
xor
xor
scas
cmp
sbb
sbb
add
test
pop
filds
pushl
mov
cmpsl
add
out
hlt
ret
adc
scas
push
lods
mov
hlt
cmp
addr16
mov
aam
add
adc
ja
jmp
test
addb
jp
imul
xchg
sti
rol
mov
movsl
xchg
push
decl
stos
mov
gs
jmp
xchg
mov
cld
inc
out
lock
movsl
out
push
and
or
lock
mov
cmc
xchg
jnp
or
inc
negl
out
mov
sbb
clc
push
outsb
loop
jle
adc
movzwl
loop
fcomp
sub
push
cmpb
xor
mov
pop
pop
push
inc
inc
fisttpl
out
insb
jecxz
jle
jp
mov
iret
jmp
xchg
imul
daa
mov
out
pop
push
push
cmc
mov
inc
out
and
sub
push
repz
dec
out
inc
shr
push
xchg
or
pop
or
jae
and
out
and
push
xor
dec
out
aas
jecxz
daa
inc
fsts
mov
mov
jo
or
push
lret
negl
sti
stos
punpcklwd
repz
rol
dec
sti
ja
jae
inc
cld
rolb
or
insb
stc
orl
rorl
push
imul
cwtl
cltd
mov
mov
lret
sub
adc
xchg
icebp
scas
mov
fiaddl
mov
insb
mov
sub
and
pop
aaa
ljmp
aaa
cmp
xor
nop
push
aaa
outsl
inc
shl
dec
jnp
dec
das
pusha
push
lea
repz
dec
sti
mov
xor
jae
and
outsb
ret
fistps
inc
shll
fldt
mov
iret
fucomi
jecxz
daa
mov
jae
adc
out
ret
ljmp
mov
dec
dec
loop
cmp
inc
adc
out
mov
push
cmp
push
repz
fwait
jp
xchg
popf
jne
jp
and
dec
mov
xchg
int3
push
out
daa
inc
das
inc
cltd
jo
adc
out
xor
repz
jg
popf
jg
mov
in
pop
cwtl
cwtl
jg
stc
inc
pop
mov
mul
xor
jl
shrb
or
and
mov
in
fnstcw
xor
add
cli
or
push
push
pop
push
iret
aas
jecxz
aas
pop
pop
xchg
outsb
int
and
add
and
arpl
and
sbb
pop
xchg
cmp
dec
movsl
mov
nop
aaa
mov
shr
pop
pop
nop
hlt
push
stos
add
push
repz
add
in
setge
xor
inc
inc
push
dec
add
mov
mov
mov
cli
adc
and
dec
call
dec
out
ret
lock
pop
mov
repz
lahf
mov
hlt
pushw
pop
ljmp
cmp
test
jp
pop
pop
and
jecxz
push
out
adc
jno
divps
rcr
iret
inc
sbb
dec
movsb
pop
push
stos
push
dec
in
ret
add
mov
das
jecxz
jbe
das
mov
mov
xor
sbb
lods
lcall
ds
push
inc
out
icebp
pop
stos
adc
mov
fnsetpm(287
mov
sbb
or
out
dec
or
fildll
mov
outsl
push
or
push
pop
pop
mov
rcrl
subl
xor
cmp
ja
mov
pushf
sbb
or
roll
mov
mov
mov
sti
inc
stos
mov
pop
xchg
into
push
xchg
xor
sti
cld
dec
js
das
xor
xchg
xchg
sbb
das
adc
adc
lret
jnp
mov
fsub
ja
mov
mov
push
inc
jbe
mov
cmp
fistps
pop
fildll
sub
dec
jmp
stos
xor
or
pop
jge
dec
pop
inc
jecxz
jmp
jecxz
je
add
add
adc
xor
mov
xchg
sbb
dec
cltd
sub
mov
in
fldcw
push
rolb
jecxz
shrb
stos
and
in
out
add
test
xor
les
test
into
in
jecxz
addr16
outsl
cltd
outsl
jge
popf
fsubl
push
test
mov
mov
insb
fistl
repz
mov
call
xbegin
lahf
addl
fimuls
jl
mov
pop
das
lods
pop
mov
lods
pop
jl
movsl
pop
addr16
ljmp
popa
repz
out
xlat
sbb
inc
lahf
xlat
xchg
dec
xlat
stos
push
push
out
lock
sub
hlt
jnp
lret
lret
fistpl
xor
and
cli
dec
push
push
sbb
push
cmp
mov
repz
out
dec
inc
fisubrs
imul
mov
sub
mov
cmp
popa
jp
mull
sub
jecxz
sti
dec
sub
dec
dec
popa
test
imul
push
inc
or
mov
mov
lret
outsb
cli
pushf
into
shl
scas
mov
push
pop
iret
adc
ror
sti
pop
mov
vmovaps
lea
addr16
das
xchg
cs
cmpsl
push
gs
xchg
xchg
xlat
or
and
mov
ret
dec
ret
movsl
cmpl
pop
pop
pop
xchg
fmul
enter
push
add
je
call
ret
imull
addr16
sub
xchg
xchg
dec
jae
out
in
scas
mov
addr16
push
negl
cli
pop
add
or
inc
lds
mov
out
les
dec
rol
rorb
ret
adc
xchg
fists
int
incl
inc
xor
jns
jl
push
push
cmp
pop
dec
and
and
sub
cmp
mov
icebp
mov
in
pushf
stos
push
cmp
pop
or
fimuls
aas
ljmp
xchg
xor
and
pop
pusha
jp
mov
popa
cmp
inc
push
jecxz
fcmovnb
dec
pop
ja
jg
jg
xchg
pop
and
jo
movsl
daa
inc
das
daa
fs
clc
out
xor
adc
loop
jns
xchg
push
rcl
mov
in
popl
ds
int
das
repz
rdpmc
scas
mov
jecxz
inc
aaa
mov
out
aaa
rorl
cmp
leave
jb
jecxz
and
sbb
jl
or
dec
fnsave
mov
aam
lds
mov
adc
lret
pusha
xchg
aam
cld
or
movsb
pusha
push
aaa
mov
gs
and
pushf
jg
lds
lret
rorl
push
rol
pop
mov
fs
push
mov
mov
out
daa
test
mov
push
push
dec
xor
rcl
repz
aad
pop
aad
repz
xchg
xor
xor
ljmp
inc
lahf
ds
pop
push
lret
push
jecxz
push
call
mov
cli
sub
cmp
cmp
xchg
jmp
stc
test
add
loop
inc
repnz
inc
pop
and
push
out
adc
jmp
scas
push
popf
jecxz
andl
hlt
lahf
setae
pusha
jg
dec
out
cmp
shll
and
mov
sbb
jae
test
fsub
and
lret
das
rcrl
or
adc
sti
decl
stos
mov
cs
mull
or
out
pcmpeqb
cmpsl
sti
push
pop
test
mov
adc
cli
mov
shl
pushf
int3
ret
cmc
es
cmp
adc
dec
or
stos
out
sbb
add
sbb
pop
cmc
es
rolb
ret
cmp
sti
movsl
or
add
ret
std
push
sub
mov
sub
xor
rcrb
dec
mov
out
add
xor
popf
pop
sbb
je
popa
sub
mov
mov
xchg
pop
aad
xchg
pop
cmp
pop
lds
aaa
inc
call
out
or
mov
jg
jnp
and
scas
fcmovnu
inc
adc
or
pop
adc
fwait
dec
and
out
das
adc
jmp
cmpsl
ljmp
or
or
andb
rorb
pop
sahf
push
mov
mov
popa
cmp
pusha
push
or
or
push
jmp
cltd
daa
movsb
sbb
mov
xorl
sbb
mov
out
stos
sub
dec
mov
adc
push
adc
addr16
jbe
leave
push
into
and
or
cwtl
mov
mov
adc
imull
mov
inc
sahf
cmc
rcr
test
xlat
cld
or
lret
xchg
cmpsl
dec
push
or
pushf
dec
mov
scas
shll
aaa
mov
das
xor
sub
cmpb
out
shlb
iret
xchg
mov
loope
jo
iret
insl
jmp
mov
cwtl
push
stos
xlat
je
repz
mov
pop
mov
adc
std
jae
mov
rcr
and
push
addr16
scas
into
in
shll
negl
jmp
insl
imul
and
lahf
mov
lahf
dec
pop
outsb
push
cmp
add
mov
mov
inc
sbb
mov
cmp
hlt
or
loopne
pop
fwait
orl
out
sbb
jp
lahf
push
mov
pop
jge
ja
and
jle
daa
mov
pop
and
out
lds
mov
leave
ret
lds
jg
pop
mov
jle
mov
add
and
push
jecxz
dec
xchg
mov
ret
or
cmp
sbb
pushl
insb
sub
les
loope
xchg
sbb
jns
je
mov
mov
out
int
icebp
or
pop
in
fs
fadds
pushf
pop
pushw
jg
or
mov
shl
add
orb
xchg
jle
lods
out
roll
rcr
cmp
mov
jecxz
insb
fwait
jp
adc
cwtl
mov
fsub
dec
adc
arpl
lods
lods
cmpsl
lahf
filds
lahf
sub
shlb
stos
mov
sub
mov
std
mov
xchg
je
movsb
loopne
movhlps
pop
xor
mov
fcoms
sti
mov
dec
add
dec
pop
mov
mov
mov
fucom
cmp
cmp
jae
cmp
inc
es
push
pop
cmc
rorl
push
popa
pop
inc
repz
inc
out
fists
popa
mov
fsubp
sub
dec
inc
mov
sbb
mov
push
add
pop
fstpt
fbstp
std
jnp
xchg
jmp
comiss
outsb
aas
lret
jmp
xchg
aad
repz
lea
jae
xchg
cld
dec
add
lods
mov
js
aaa
adc
js
aas
push
xor
ljmp
fs
mov
arpl
jg
stos
lret
bswap
push
or
hlt
cmc
loope
stos
repnz
fucomip
sti
icebp
push
xor
adc
fistps
addr16
push
adc
imul
and
sbb
xor
mov
mov
int
sbb
aam
scas
lret
into
out
dec
iret
xchg
enter
ret
sbb
insl
pop
mov
fmuls
pop
xlat
xor
pop
or
insb
pop
adc
sbb
mov
jmp
int
fcom
lahf
adc
in
add
jnp
enter
jb
jle
aad
add
es
cmp
stos
cmpsb
mov
repnz
dec
out
mov
das
subb
out
insl
out
sbb
subb
jno
out
inc
stos
cmp
xchg
jnp
jmp
js
push
jo
fnstsw
cmp
je
dec
mov
inc
sbb
inc
fcoml
inc
cmp
inc
jns
sti
cmp
out
sub
hlt
mov
lock
stos
and
xor
xor
arpl
jecxz
adc
or
cwtl
jmp
xor
and
imul
inc
scas
and
xor
jmp
jg
mov
and
mov
or
or
mov
fistpll
repz
addr16
decb
movsl
sub
pop
add
xchg
outsb
outsl
pusha
sub
shrl
pop
stos
lea
subb
adc
adc
lods
sub
mov
fcoml
sti
out
cmp
dec
dec
dec
pop
fwait
adc
outsl
test
pop
dec
or
or
dec
std
inc
pop
mov
mov
movl
lahf
out
xchg
loope
rcll
add
mov
jecxz
in
push
or
rcrb
xchg
mov
xchg
pop
cli
mov
pop
repz
je
xor
mov
fdivs
in
mov
daa
push
test
xor
ficomps
lret
xchg
fidivrl
inc
adc
dec
mov
mov
inc
ret
stos
lea
pop
sub
sbb
mov
dec
out
fcmove
fcmovne
or
fildl
cld
jmp
sub
xchg
push
inc
push
aaa
sub
fnstsw
mov
out
jmp
out
inc
repz
adc
mov
add
mov
push
dec
lods
xchg
or
inc
out
pop
push
cmpsb
out
neg
mov
jmp
push
mov
and
jp
jnp
and
pop
mov
rolb
pop
sub
iret
push
daa
jmp
xchg
fwait
jae
push
lret
aaa
push
int3
ret
bound
pop
scas
adc
sub
jb
stos
push
adc
daa
movsb
push
cli
stos
lods
ret
xor
pop
cmp
je
sti
add
std
out
nopl
pop
les
push
mov
jg
scas
pop
movl
sub
int3
mov
add
mov
out
enter
rcrb
lret
movsl
and
jecxz
into
inc
jecxz
or
ljmp
jbe
mov
sbb
push
shl
push
push
pop
mov
cmp
sbb
push
cmp
int
xchg
sbb
pusha
popf
out
sub
jmp
sbb
push
scas
jg
into
or
lock
popf
imul
testl
iret
mov
mov
cmpsl
pusha
jp
je
and
mov
xor
sarl
inc
repz
xor
xchg
xor
sub
dec
shll
jmp
mov
das
add
inc
lods
jmp
jecxz
loopne
pop
mov
or
and
jg
repz
dec
lock
push
idiv
push
idivl
repnz
add
mov
ljmp
push
frstor
jno
sarl
and
jecxz
or
scas
jp
sbb
clc
pop
or
cmp
jmp
jmp
adc
addr16
jecxz
push
mov
push
sbb
add
arpl
test
or
pop
cmp
popa
cmp
or
iret
sbb
dec
loop
adc
mov
mov
sub
xchg
in
pop
jnp
dec
call
dec
jno
out
sub
mov
dec
push
data16
push
imul
add
inc
sbb
xlat
cwtl
jmp
rcrb
stos
cmp
out
cltd
mov
mov
lret
lcall
xchg
xchg
sub
pop
pop
jbe
xchg
or
adc
jnp
inc
mov
mov
call
fnstcw
add
mov
or
xchg
in
loope
imul
pop
or
mov
in
add
push
hlt
mov
aaa
fisubrl
jle
rcl
loope
xlat
mov
lret
iret
or
or
popf
daa
fimull
aas
pop
movsb
sub
cmp
cli
mov
lahf
daa
adc
pop
push
cmp
iret
pushf
insb
lret
cmp
cwtl
mov
mov
mov
sub
js
rol
fisubs
lahf
in
in
fs
push
iret
cltd
repz
in
ret
inc
aad
pop
mov
les
lcall
sub
and
repz
idiv
jae
fldt
or
enter
cs
imulb
and
fstpl
xor
cmp
out
fucomp
cmp
cmp
stc
xor
cld
sbb
xor
stos
and
jmp
mov
lock
pushf
hlt
inc
cmc
xlat
arpl
lret
push
sub
mov
andl
pcmpgtd
movsl
repz
sub
inc
scas
push
lahf
push
mov
cmp
js
pop
es
xor
mov
movsl
mov
cmc
sbb
sbb
sub
lods
pop
push
pop
sbb
cmpsb
daa
pop
imul
pop
popf
idivb
mov
pusha
mov
adc
dec
jne
sub
jecxz
int3
mov
jl
stc
jns
cli
mov
lods
and
mov
loop
stos
dec
out
xor
clc
cld
pop
add
mov
xchg
rcl
lret
mov
push
insb
insl
jbe
loope
jmp
xchg
imul
mov
rcll
or
arpl
repz
and
mov
or
push
cmp
inc
or
add
lar
cwtl
scas
repz
or
mov
pop
sahf
mov
mov
pop
fadds
jmp
insl
or
int
or
pop
sbb
sub
pop
loope
mov
add
lods
mov
pop
in
iret
adc
ret
mov
push
mov
add
cmc
aad
daa
xchg
mov
lcall
das
pop
pop
nop
icebp
push
pop
ljmp
repnz
sbb
jmp
pop
fcomps
pop
lds
fcmovne
pause
inc
in
daa
inc
mov
out
fwait
adc
cmp
dec
jl,pn
add
pop
das
out
ds
out
icebp
inc
pop
inc
push
aas
jge
mov
adc
or
and
xchg
pop
shl
popa
andb
repz
cmpsl
adc
packssdw
pop
jp
outsl
movsb
push
pop
sub
mov
dec
mov
adc
dec
push
push
xor
push
decl
faddl
mov
daa
cmp
sub
pop
fistpl
or
add
dec
add
imul
es
jecxz
mov
jmp
sub
aad
sti
imul
or
repnz
popf
adc
stos
xor
lods
lods
mov
pop
mov
mov
sbb
adc
mul
jmp
shll
mov
xlat
or
in
inc
ja
inc
scas
sbb
push
sarl
test
xor
movsl
repz
das
fistps
pop
scas
sub
mov
and
or
cs
push
lea
mov
std
ficoml
scas
jno
fistpl
lcall
xlat
add
pop
adc
sbb
pop
pop
lahf
addr16
notl
push
add
rol
jbe
pop
lea
xchg
push
xchg
add
push
out
pushf
or
add
adc
xchg
outsl
mov
lds
stc
scas
mov
decl
cmp
pop
inc
into
inc
cmp
fildl
cmp
lahf
or
dec
ds
cltd
push
inc
jmp
push
fnsave
jg
jecxz
or
pop
add
inc
mov
inc
out
push
pushf
dec
pop
scas
stos
dec
xchg
lahf
mov
dec
inc
fstps
out
cmp
pop
dec
repnz
icebp
sbb
dec
out
xchg
or
pop
je
jnp
xorb
mov
ret
mov
xchg
movsb
insb
pop
aaa
jecxz
shll
es
ja
es
push
stos
mov
pop
pop
repz
test
leave
fisttps
add
daa
xchg
in
popf
cmpsl
pop
popf
ja
out
ficomps
inc
icebp
pop
cmp
or
sbb
push
inc
push
addr16
push
mov
es
mov
fwait
xor
lods
pop
and
int3
neg
pushf
idivb
add
pop
adc
add
fbld
stos
mov
fsts
dec
pop
cld
out
add
scas
lahf
out
jmp
adc
cvtpi2ps
out
push
cmp
mov
movl
addr16
cmp
imul
mov
mov
adc
dec
mov
cmp
dec
dec
popw
add
pop
and
dec
loop
fsubrs
mov
mov
jno
mov
mov
jb
cli
mov
fwait
pop
test
mov
or
movhps
push
push
xchg
das
and
jg
dec
sbb
cmp
pop
sub
xchg
rep
mov
movsb
ja
jae
jg
rol
inc
repz
iret
ror
push
mov
lret
ljmp
popa
add
loope
adc
pop
mov
jg
ds
ja
dec
sub
sti
dec
push
adc
and
fisttpl
dec
pop
fstpl
or
scas
pop
das
or
out
aas
add
xchg
adc
cmp
mov
dec
aad
in
sub
jmp
mov
lock
lcall
xchg
fdivr
and
mov
mov
cmp
bound
adc
mov
fs
jmp
adc
cmp
or
mov
push
mov
mov
aad
jnp
push
aam
bsf
pop
dec
xor
push
lret
int
cmp
roll
clc
daa
fists
sbb
out
pop
jle
or
icebp
clc
cmp
fistl
mov
pop
orb
aad
out
adc
and
mov
in
lret
jb
ror
int3
mov
cmpsb
out
mov
jge
mov
rcrl
aam
call
lea
push
sarb
or
xor
out
scas
test
out
pop
inc
shr
andl
push
lret
jg
sbb
insb
addr16
sbb
mov
bound
or
ret
pop
mov
fcomip
xchg
cld
outsl
sahf
lahf
mov
dec
popf
int
mov
xchg
mov
and
push
xorl
sbb
mov
ljmp
xor
pushf
lahf
sbb
jmp
cwtl
sbb
push
and
dec
repz
popf
addr16
pop
pop
mov
xor
fldt
les
pop
out
cmp
or
aas
xchg
inc
pop
outsl
push
cmp
dec
and
adc
dec
push
es
cmp
ret
repz
in
inc
out
pop
sbb
daa
imul
mov
nop
xor
add
pop
maxps
jne
cmp
je
dec
jbe
add
loopw
mov
sbb
mov
scas
mov
stos
add
mov
stos
ss
mov
fstpt
push
mov
incl
inc
push
lock
add
pop
xchg
xchg
daa
lret
sbb
push
pop
lahf
lea
jmp
or
dec
aaa
mov
rcll
movsl
lahf
push
sbb
sbb
shll
sub
sub
das
lods
arpl
out
stos
lods
loopne
cmp
iret
inc
stos
mov
stos
adc
enter
stc
sub
ret
xchg
sub
fadd
jno
mov
or
jecxz
daa
movsl
and
in
xor
jl
scas
jge
mov
adc
fsincos
movsb
mov
inc
xchg
popf
inc
sbb
adc
mov
mov
pushf
shrb
test
stc
repz
pop
lret
mov
shrl
add
fistps
jnp
rorl
mov
ror
lahf
jl
lahf
push
pop
mov
add
sub
in
xor
pop
xlat
movsl
arpl
cwtl
pop
aas
rol
cmp
sbbb
mov
xchg
xor
dec
and
adc
pop
fcmovne
aas
xchg
inc
test
jecxz
sbb
mov
lock
inc
xchg
out
dec
adc
cmp
pop
pop
push
dec
jecxz
cmp
dec
dec
inc
out
or
lock
clc
in
aas
or
hlt
sti
mul
mov
cmp
mov
repz
jae
in
and
out
in
pop
andb
ja
mov
push
ret
add
lahf
lret
in
mov
jnp
fcmovb
pop
cld
fucomip
mov
icebp
sub
cli
mov
xor
or
jmp
inc
repz
jmp
xor
mov
fists
lcall
pop
mov
xor
cmpsb
out
add
fcmovnb
movsb
enter
out
cld
stc
repz
or
cmc
cs
push
dec
xor
mov
jae
push
out
sbb
dec
aaa
sub
insb
add
mov
mov
stos
lret
fnstenv
add
stos
xchg
xchg
test
pop
or
cld
ret
lods
lcall
outsl
imul
jp
call
wrmsr
sbb
repz
cs
insl
popa
addr16
mov
push
js
addl
lods
iret
lahf
xor
mov
xchg
out
pusha
jp
cmp
mov
dec
xor
lahf
mov
add
fcmovne
jl
inc
or
push
in
jb
shr
inc
andb
xchg
cmp
or
jmp
stos
push
inc
imul
repz
push
adc
inc
out
pop
out
cmp
cmovo
xorb
dec
inc
stc
cli
sbb
shrl
push
xchg
ljmp
pop
xchg
xchg
adc
adc
push
xor
insb
push
pop
aas
iret
pop
out
cld
cmp
mov
jae
cmp
fstpt
in
test
dec
ljmp
notl
and
popa
imul
adc
out
clc
pop
int
xor
jnp
outsl
pop
rorl
mov
fdivr
in
sub
call
pop
fs
xchg
xchg
inc
lea
or
aad
mov
xor
xor
xor
pop
add
shrb
fcmovnb
pusha
sbb
adc
or
push
adc
jb
jmp
or
sbb
outsl
lcall
imul
cmp
mov
arpl
loopne
jmp
pop
xor
jae
pop
and
leave
insb
je
lret
mov
and
aas
in
out
ficoms
mov
int3
xlat
filds
jmp
arpl
push
subb
sub
sbb
fisttpl
push
or
cmp
cmp
add
dec
cmp
cmp
inc
inc
adc
hlt
xchg
mov
aas
or
addr16
dec
push
pop
adc
bound
jae
push
cmp
pop
or
inc
in
add
mov
sar
push
out
jecxz
pusha
cmp
repz
sbb
mov
fistpl
out
out
jb
and
xchg
movsb
mov
mov
cmpsl
daa
cli
cmp
sbb
jbe
pop
jl
fcomi
adc
mov
leave
ret
insb
jmp
dec
push
add
das
fs
aad
push
js
addr16
mov
jns
movsb
sbb
rolb
and
arpl
sub
lret
mov
xlat
outsl
add
jecxz
push
dec
mov
push
xchg
xchg
fistps
lods
das
fwait
or
mov
mov
enter
popa
sbb
add
pop
movsl
iret
rcll
insl
mov
shrl
shlb
aaa
mov
frstor
fwait
test
mov
sbbl
popa
mov
aam
jo
sti
pop
or
cmpsl
and
xor
add
jmp
adc
pusha
data16
mov
test
mov
fnstsw
stos
dec
fistl
jecxz
out
push
lahf
xchg
idiv
mov
xor
subb
outsl
adc
cmp
cmp
xor
dec
pop
shll
in
aas
pop
mov
pop
pop
cmp
out
div
jecxz
cwtl
add
jecxz
and
icebp
mov
bound
sti
push
je
fsubr
outsl
addr16
ret
xor
lret
loop
je
dec
jecxz
mov
sbb
arpl
mov
pusha
cvtps2pi
xor
adc
test
out
sbb
shlb
icebp
in
leave
pop
cmp
mov
add
jecxz
shrb
mov
fistps
rcrb
insb
mov
mov
xchg
sub
daa
xchg
test
or
sub
imul
add
js
fmuls
push
pop
mov
cli
cltd
xchg
xchg
and
cli
movsb
shrb
mov
call
ja
cmpsb
jmp
push
int
ret
sbb
xchg
adc
dec
pop
mov
sbb
dec
sti
xchg
xor
jp
pop
jl
jge
add
lahf
stos
push
sub
ror
mov
or
incl
out
mov
stc
repz
mov
mov
enter
jns
enter
addr16
lea
jbe
ja
sub
dec
ffree
push
out
mov
fneni(8087
outsl
jmp
add
lahf
out
dec
fucom
ret
adc
je
shl
cmp
pushf
inc
mov
push
mov
rorl
sbb
dec
pop
enter
in
adc
inc
out
push
ljmp
fwait
in
inc
fwait
in
aas
xchg
push
stos
dec
cmp
and
pop
inc
mov
mov
dec
in
jp
xchg
jbe
pushf
fwait
aad
pop
dec
mov
fdivl
sbb
mov
inc
sbb
lods
cmpl
cmpsl
jnp
clc
inc
adcl
rcrb
mov
add
xchg
aam
in
scas
mov
jmp
hlt
cmc
fbld
xor
inc
aas
push
fwait
lds
aaa
add
cmp
cmc
stc
adc
hlt
mov
popf
repz
bound
repnz
mov
bound
jg
mov
dec
mov
jl
repz
and
or
pop
mov
data16
sbbl
call
and
rorl
dec
xor
cltd
test
das
aaa
rorl
cmovs
scas
jl
jae
xchg
inc
scas
mov
and
pop
xchg
lahf
movsl
fwait
dec
rcll
mov
call
xchg
rcrb
jnp
ret
xchg
in
inc
out
or
cmpsl
mov
clc
addr16
pop
out
out
ljmp
scas
fcomip
sbb
je
cmp
nop
aaa
xor
mov
sub
pop
roll
pop
jnp
shll
cmpb
js
mov
push
out
shrl
fwait
iret
fnstenv
aas
mov
gs
out
and
pop
bnd
pop
pop
mov
pop
ror
insb
xchg
rcrl
or
push
clc
imul
jb
iret
sbb
movsb
jmp
cmp
mov
out
dec
dec
dec
pop
adc
cmp
push
jecxz,pt
add
add
mov
adc
cmp
push
repz
mov
push
push
adc
inc
cmp
negl
movsb
fstpt
adc
sti
or
pop
lock
adc
push
xor
lret
and
mov
ss
lahf
jns
xchg
lret
pushf
ret
cmp
push
pop
in
cmp
shrl
sub
xchg
jp
sbb
in
pop
mov
pand
je
dec
lods
stos
push
pop
lcall
xchg
int
in
arpl
add
std
xlat
jo
out
sbb
stos
int3
cmp
jno
dec
jno
xlat
or
push
mov
aam
stc
lahf
popf
rol
or
push
insb
aam
out
scas
and
and
sbb
jl
adc
add
add
xchg
cltd
push
xchg
loop
and
testl
mov
sub
or
adc
add
push
daa
iret
adc
add
scas
js
fwait
pop
fiaddl
mov
in
mov
fildll
jbe
sbbb
imul
adc
sbbl
movsb
fsubs
adc
mov
sub
andl
movsl
sub
jbe
sub
and
jb
jae
adc
jne
and
out
arpl
shrl
jg
pop
xchg
out
leave
pop
pop
movsl
mov
mov
fsubr
adc
mov
roll
mov
xchg
pushf
out
mov
insb
jae
sti
pop
pop
sbb
mov
jb
adc
sahf
enter
push
or
imul
jo
mov
mov
dec
fwait
sub
xchg
jecxz
out
push
add
pop
adc
out
sub
aas
mov
out
outsb
mov
imul
aas
inc
sbb
mov
dec
dec
mov
adc
stos
ds
jmp
mov
mul
pop
sbb
out
mov
sahf
push
lahf
into
out
inc
adc
sbb
stos
test
xor
pop
ret
push
pushf
int
fstpt
outsl
scas
cmp
and
out
push
je
and
fists
dec
test
arpl
cltd
out
out
dec
adc
pop
jecxz
jp
cmp
scas
jb
daa
ret
lea
andb
imul
xor
add
jne
cs
scas
mov
rorb
popf
aaa
adc
xchg
or
dec
clc
dec
mov
push
insb
out
adc
adc
sbb
adc
mov
pop
in
sub
sbb
out
lods
adc
out
jge
lods
or
arpl
jne
pop
shlb
or
stos
adcl
mov
sti
iret
add
stos
aaa
out
cmpsb
iret
sbb
insb
pop
pop
mov
mov
sbb
xchg
mov
nop
xchg
stc
xlat
int
rcll
push
mov
ja
push
pop
or
add
imul
or
imul
js
stc
inc
or
pop
jecxz
mov
out
xchg
and
jl
scas
lods
lods
add
mov
bound
mov
popa
xchg
js
repz
repz
ror
jg
mov
ret
lahf
push
ja
or
or
pop
popf
out
mov
mov
mov
cld
mov
lahf
loop
fwait
and
adc
lret
pop
movb
nop
xor
aas
rcll
and
out
pop
pop
mov
mov
push
push
pop
and
mov
jbe
popf
jg
cmp
mov
loopne
sbb
pop
xchg
sbb
or
imul
push
out
or
popl
fwait
push
add
mov
sarb
pop
sub
into
jae
xor
out
push
imul
pop
insb
addr16
movsb
js
iret
dec
push
cmp
mov
out
sub
xor
cmpl
and
mov
cmp
out
jp
dec
cmp
inc
inc
sub
filds
jp
jecxz
cld
cmp
push
push
popl
and
dec
jmp
aas
inc
jmp
icebp
in
sub
add
push
ficomps
push
jmp
out
pop
push
jae
jp
mov
popf
lret
sarb
enter
aas
pop
pop
sbb
push
sarl
sub
pop
lret
shld
add
out
cmpsb
cmpsl
test
call
jbe
fistps
mov
mov
xchg
fcmovnb
shrl
mov
sub
push
bswap
lods
out
jl
pop
mov
mull
out
cmp
add
pop
bound
jnp
decb
sub
add
outsl
shlb
sti
mov
jo
dec
or
xchg
inc
push
mov
notb
movb
stos
mov
cmpl
std
and
stos
push
cmpsb
popa
int3
xchg
outsl
lret
movsl
mov
test
mov
pushf
mov
xlat
out
in
stos
push
imull
in
popf
sti
jno
add
fwait
jnp
mov
mov
sub
rcll
into
rcrb
imul
js
pop
orl
das
daa
pop
inc
sbb
daa
push
jno
adc
out
clc
lea
jp
out
cmp
xchg
push
inc
pop
test
sti
jle
dec
pop
test
dec
jg
aam
or
add
out
and
xor
xchg
outsb
jns
dec
cli
pop
pop
loop
mov
aas
xchg
xor
mov
pop
ret
scas
adc
jecxz
mov
jae
mov
clc
test
jmp
lods
mov
pop
add
mov
lret
rcrl
push
cmpsb
aam
lahf
std
sti
rcrl
or
sbb
or
sar
mov
les
pop
fwait
mov
sub
imul
push
xchg
adc
imul
lret
pop
aam
gs
or
rorb
xor
lods
fs
pop
mov
jae
outsl
arpl
pop
jnp
loope
jecxz
leave
add
jmp
cmpsl
sti
push
add
cmpsb
fadds
orl
add
shlb
mov
in
lods
or
loopne
jecxz
lret
mov
jne
lahf
lods
addr16
xchg
xchg
xchg
xchg
orl
jmp
mov
lods
bound
stos
ficoms
sub
sub
pop
loopne
fnstsw
in
cvttps2pi
int
jecxz
cmp
adc
popa
scas
mov
sub
das
jecxz
ret
mov
inc
sub
pop
push
xchg
mov
push
cmp
mov
sbb
fldl
out
in
je
scas
fldt
push
in
fisubs
out
sbb
sub
mov
and
jne
xchg
pop
pushf
movsb
int
aaa
sar
loopne
cmc
popf
jmp
and
js
sbbl
mov
aad
and
cmp
sub
movsb
pop
stos
addr16
das
pop
scas
sub
pop
lahf
xchg
xchg
sub
xchg
sub
cwtl
xchg
lcall
jo
fldt
nop
cmp
adc
rorl
add
popf
jecxz
out
mov
push
scas
cwtl
jae
cwtl
stos
xchg
jecxz
xchg
mov
addr16
sahf
out
andb
and
jp
popa
mov
jnp
adc
jns
sub
insb
jecxz
sbb
fdivs
jecxz
outsl
out
int3
lds
repz
push
movsb
mov
pusha
in
lds
xlat
enter
mov
cmpsl
stos
lods
shlb
mov
je
pop
mov
fdiv
pop
cwtl
cmp
sbb
sub
push
icebp
lds
pop
mov
fistpll
mov
out
jecxz
xchg
cli
in
mov
inc
out
cmp
fmuls
pop
adc
xor
daa
mov
daa
fildll
out
ja
cmp
aad
aaa
stos
out
mov
sbb
jmp
stc
and
and
iret
dec
rcrl
fmull
xlat
gs
iret
push
mov
jecxz
repz
adc
mov
push
mov
mov
in
jecxz
cmpsb
gs
mov
mov
nop
mov
out
lcall
mov
lret
sti
int3
mov
outsl
adc
push
mov
repz
stos
seto
jecxz
push
arpl
lret
imul
popf
insl
mov
lret
imul
mov
mov
outsl
fs
pop
add
arpl
outsb
adc
out
iret
jg
movsb
addr16
into
xchg
leave
test
jge
add
sbbl
aaa
and
push
cmp
cmp
mov
mov
aas
roll
sbb
enter
ret
ljmp
iret
inc
push
frstor
into
xchg
dec
fcomi
push
inc
sbbb
fnsave
cld
in
push
mov
or
mov
repz
dec
pop
or
stos
movsb
out
pusha
cmp
cmc
lods
out
inc
gs
sub
in
xor
mov
mov
shl
push
push
inc
or
adc
xor
repz
pop
cmp
pop
test
sbb
mov
scas
mov
xchg
scas
mov
sbb
dec
bswap
nop
in
popa
out
int3
xchg
push
ds
adc
test
jo
in
mov
sub
add
sbb
pop
pop
mov
jl
mov
iret
repz
scas
cmp
sub
adc
in
es
adc
das
xor
push
lods
xor
xchg
jp
fwait
jg
jge
and
lea
jo
jecxz
iret
mov
ret
out
fiadds
shrl
pop
or
ret
jne
dec
stos
bound
or
xor
insb
mov
mov
xchg
xchg
test
sub
mov
fisttpl
fwait
stos
ds
cmp
bnd
push
scas
cmp
xor
adc
xchg
add
adc
stos
mov
adcl
push
cmp
cmp
je
xor
out
es
sub
push
jmp
fdivrs
pop
frstor
shll
or
pop
shl
xchg
xor
dec
outsb
xchg
sbb
mov
jnp
movsl
gs
mov
xor
jecxz
das
movsl
xor
push
out
test
hlt
xor
add
inc
movsl
lea
and
shrl
cwtl
sbb
es
dec
jecxz
xchg
sti
xlat
es
or
jecxz
xlat
lea
and
sub
xlat
mov
iret
dec
jecxz
orb
cmp
leave
or
and
mov
imul
mov
and
fistpll
xchg
mull
add
out
or
repz
cltd
xchg
xchg
adc
xchg
pop
pop
lret
fs
fwait
sbb
push
adc
out
mov
in
ret
jns
cmp
loop
sbb
inc
gs
push
aas
pop
sbb
adc
pop
mov
dec
inc
inc
pop
inc
into
lock
mov
mov
push
adc
stos
xchg
mov
imul
sub
orb
inc
out
sub
incl
dec
xor
pop
push
and
xor
lods
and
adc
sbb
mov
pop
xor
lahf
adc
addr16
mov
mov
arpl
sbb
lret
leave
ret
popa
pop
test
and
stos
xlat
push
mov
aas
adc
mov
or
jecxz
jp
jnp
fists
push
out
or
out
push
addr16
out
pop
arpl
enter
sbb
and
inc
xorl
jnp
cwtl
sub
sbb
pop
xchg
stos
outsl
jb
cltd
jns
xchg
in
imul
mov
shlb
fs
push
or
out
les
scas
fildll
mov
mov
xchg
mov
xchg
and
xor
inc
mov
inc
pop
ja
call
and
cmp
fnstcw
jge
sub
dec
pop
or
push
repnz
in
push
push
icebp
shl
push
push
jmp
dec
add
jnp
dec
sbb
pop
xor
mov
xor
aaa
enter
movsl
jae
jg
add
adc
out
lods
jl
out
sti
in
imul
add
lret
lret
xchg
sub
cmp
jg
pushf
out
sub
cltd
sbb
out
in
cwtl
ret
shlb
xchg
or
pop
lret
xor
int3
mov
int
xor
or
leave
in
rcrb
ror
xchg
xor
sbb
aad
pop
aas
into
ret
les
cmp
sbb
or
cmp
pop
je
shr
stos
mov
in
xorb
xchg
jg
add
aaa
arpl
in
fnstsw
sub
xor
out
jb
jecxz
in
adc
pop
aam
gs
out
fistpll
cmp
enter
and
outsb
std
imul
cmp
dec
out
je
cmpb
push
dec
imul
test
mov
jae
dec
into
repnz
fucomip
jmp
movl
loop
push
imul
dec
pop
pop
dec
jmp
jnp
add
mov
pop
cld
push
fwait
out
add
ljmp
xor
daa
jnp
rorl
xor
cmp
sub
push
stos
jle
ret
adc
jl
mov
add
xchg
in
roll
subl
sbb
and
daa
js
or
push
sbbl
inc
lret
or
mov
enter
movsl
xchg
pop
add
jecxz
dec
jnp
out
or
or
add
call
lahf
dec
lock
fwait
pop
xor
sub
aas
cmp
push
pop
andb
pop
mov
jae
pop
jg
push
out
sub
push
sarl
std
jmp
inc
or
xchg
and
je
es
int3
xorb
mov
xchg
rcrl
sbb
jmp
fists
jmp
inc
stc
fisubs
push
and
xchg
sarl
testb
lods
jecxz
icebp
out
inc
out
xor
stc
mov
dec
stc
repz
sbb
pushf
xchg
stos
mov
mov
fisttps
sbb
lret
ror
aaa
cmp
adc
out
or
out
daa
mov
lret
cld
mov
out
lret
inc
mov
sbb
add
iret
fsub
fldpi
sbb
dec
out
mov
fs
mov
aam
aaa
jecxz
cmpsl
out
jnp
int3
lods
and
jle
or
pop
stos
outsb
inc
pushf
inc
outsl
dec
mov
inc
out
or
cmp
push
pusha
and
or
bound
mov
test
and
mov
cwtl
fldt
out
in
add
pop
push
xchg
mov
pop
insb
cmp
cmp
mov
xchg
std
std
out
cmp
push
dec
out
pop
push
pop
jb
mov
fisttpl
jb
add
sub
out
xor
xor
ret
in
mov
and
fimuls
sarl
orl
mov
or
push
rorl
jle
and
dec
dec
out
jae
les
in
sti
sub
lcall
dec
inc
cmp
pop
jecxz
inc
lahf
inc
or
pop
sbb
je
sub
outsl
xor
push
pop
cmp
cmpsb
lea
mov
addl
gs
pop
pop
jle
btc
inc
pop
aas
jp
cmpsl
adc
aaa
mov
out
sbb
add
stos
aas
movsb
maskmovq
divl
jnp
xchg
ficoms
or
jmp
xor
out
adc
xor
aad
subl
andl
roll
arpl
ja
sbb
xchg
xor
sub
mov
outsl
adc
jne
daa
sarl
sbb
and
push
sub
jne
jecxz
sbb
inc
dec
jbe
add
fs
sar
xor
addr16
repnz
cmp
jecxz
repnz
pop
call
push
inc
pushf
xchg
sub
cmp
stos
sub
aam
out
int3
xchg
fwait
xchg
sub
or
dec
adc
xchg
xor
out
roll
jl
out
mov
xchg
aaa
shll
sbb
ret
out
fs
repz
popf
xchg
rorl
mov
outsb
xor
sbb
mov
int
push
repz
pushf
out
lds
pop
lods
dec
testb
call
inc
xchg
adc
sbb
popa
sbb
mov
xchg
das
sub
lcall
sub
movsb
mov
fistpll
in
sti
pop
out
inc
fs
pusha
pushl
repz
dec
loopne
pop
adc
xchg
shll
fsubp
mov
push
push
inc
mov
sub
mov
adc
pop
sbb
xchg
sub
xor
daa
xor
mov
lcall
les
jecxz
push
icebp
shl
sbb
mov
or
orl
ja
push
pop
cwtl
daa
adc
cmpsl
pusha
mov
mov
das
movl
sbb
and
push
mov
xor
sbb
push
pop
adcl
in
scas
imul
in
pop
in
insb
fldt
jg
push
inc
add
dec
jg
out
rcl
sbb
adc
sti
push
push
pop
xchg
ds
adc
dec
jns
jecxz
pusha
test
xor
or
push
mov
xchg
repz
mov
divl
imul
pop
pop
pop
xchg
inc
mov
or
pop
and
adc
mov
jnp
sbb
hlt
xor
out
push
lcall
aam
imull
out
cmp
cmpl
xor
shr
sbb
xor
inc
fnstsw
mov
jne
pop
jmp
xchg
and
jae
mov
lret
push
fists
rcr
cmp
out
fnstcw
test
cmp
test
out
test
mov
call
pop
pop
test
mov
fcmovnbe
shl
pop
push
or
xor
and
popf
cmp
inc
fcmovnb
inc
data16
std
dec
out
mov
bound
sbb
jg
xchg
mov
daa
push
pop
mulb
pop
sbb
jl
int3
or
fldl
fcmovnbe
cwtl
ret
push
inc
insb
jecxz
inc
sub
insb
inc
push
into
or
inc
ficoml
sti
inc
push
pop
dec
rcll
sub
call
pop
push
and
ja
in
gs
mov
push
in
mov
add
and
inc
arpl
sub
ja
fisubl
test
sbb
rol
inc
lcall
std
xchg
out
or
push
and
mov
insb
or
int3
dec
mov
test
mov
idiv
fs
mov
das
pop
adc
jae
pop
sbb
jp
sub
or
ret
call
add
fistpl
fisubrs
negl
test
sbb
aas
cmp
dec
inc
adc
dec
and
sbb
mov
dec
mov
addr16
and
repz
jecxz
sbb
or
out
enter
insb
mov
pop
lods
jg
ret
jp
imulb
mov
mov
sbb
es
and
loope
outsl
inc
in
fnstsw
sbbb
cmp
jb
jecxz
popa
aaa
and
xchg
mul
notb
sub
jecxz
sbb
aas
icebp
mov
pop
lahf
or
mov
pop
cltd
mov
movsl
out
sarb
popf
rorl
sub
enter
shlb
jmp
sbb
push
add
addr16
cltd
mov
xchg
sbb
mov
mov
fstpt
dec
pop
out
push
jo
hlt
pop
dec
fstpt
lods
jecxz
cmp
pop
stos
or
xchg
push
jmp
dec
lcall
fstpt
in
lret
xchg
inc
fcomi
push
push
stos
out
inc
lahf
jl
insb
inc
imul
in
mov
or
xchg
fisttpl
out
subl
cmp
and
push
and
pop
out
sbb
lahf
test
jae
or
imul
cmpsb
ja
push
mov
lods
mov
popf
sti
pop
cmp
cli
lret
cmpl
bound
and
add
mov
es
dec
pushf
int3
scas
push
lret
shl
xchg
sbb
aad
mov
shlb
adc
fwait
mov
pop
adc
gs
pop
mov
out
mov
xchg
dec
fcmovnb
in
jg
add
add
test
negl
inc
dec
add
xchg
mov
fimuls
out
push
ljmp
popa
adc
iret
repnz
testl
sbbb
aaa
jmp
arpl
sub
dec
in
arpl
jnp
scas
mov
mov
push
pop
sub
in
xchg
test
jmp
inc
js
and
dec
mov
shl
stc
repz
scas
jmp
cmp
push
dec
out
inc
in
cwtl
dec
imul
sbb
sub
mov
cltd
daa
jecxz
arpl
daa
cwtl
ss
cmp
and
xchg
es
out
sbb
sub
fcomi
and
test
repz
movsb
sbb
into
pop
fldl
cmpsl
arpl
mov
pop
or
lret
addr16
stc
lahf
mov
aam
fcmovnu
xchg
fistl
push
pop
outsl
cmp
fistps
out
jno
jae
mov
sub
daa
push
xor
and
fcmovnb
and
fildl
cmc
pop
xadd
lret
ja
inc
dec
adc
test
lcall
loope
out
inc
inc
pop
rep
dec
cmp
and
aas
dec
pop
daa
mov
cmp
es
cmp
cmp
das
pop
pop
adc
jge
bound
loope
scas
pop
adc
sub
adc
mov
jmp
sarb
lds
shrl
lret
pop
pop
mov
loope
xchg
bsf
mov
arpl
mov
andb
test
mov
jle
pop
imul
mov
dec
aas
cmp
lret
adc
xor
lea
rep
sub
sub
mov
mov
jecxz
nop
imulb
jg
dec
inc
out
mov
pop
addr16
push
pop
jnp
mov
arpl
jne
into
jne
mov
jno
outsl
imul
mov
sti
sub
jp
incb
pop
mov
adc
dec
mov
push
pop
loopne
inc
in
stos
jecxz
stc
repnz
stos
xchg
mov
add
ja
testl
pushf
adc
mov
jg
sub
pop
jb
jmp
mov
fwait
and
dec
stos
or
push
outsl
enter
dec
inc
jecxz
cmp
outsb
filds
out
add
lret
sub
lret
aas
fldt
rclb
lret
fwait
sub
and
sub
inc
loop
inc
adc
arpl
shll
sub
fs
jbe
es
daa
arpl
adc
pop
shl
repz
mov
mov
sahf
fbstp
ficomps
inc
dec
add
loope
xchg
inc
int3
dec
in
aaa
pop
add
aad
andps
push
dec
out
out
dec
push
jb
cwtl
mov
pop
mov
imul
and
pusha
das
jnp
mov
imul
jnp
out
jle
sbb
xchg
xor
nop
repz
scas
pop
inc
jmp
rcrl
sbb
fnsave
jo
test
ja
imul
mov
sbb
cmpsl
xor
and
ss
out
jmp
sbb
cmp
mov
or
inc
xor
repz
filds
inc
aas
fistpl
cmp
mov
das
xchg
jmp
dec
inc
jg
sbb
in
inc
hlt
pop
xchg
xchg
mov
cmp
stos
cmpl
popa
in
xchg
stos
pop
cltd
push
push
jbe
out
sbb
scas
mov
repz
rcrb
movl
inc
push
das
adc
adc
xor
or
xlat
dec
out
and
cmp
repz
xchg
sub
xchg
js
imul
cmp
xchg
hlt
mov
inc
xchg
stos
push
push
sbb
push
lock
aaa
cmp
repz
iret
xor
out
rcrb
lods
xchg
sbb
sbb
rcll
jb
dec
push
cmp
mov
push
fbstp
mov
cwtl
adc
sbb
scas
mov
sbb
fldt
and
fildl
xchg
je
cmp
and
adc
add
repnz
pop
adc
xor
and
fcomps
cmp
jmp
out
pop
out
inc
shr
mov
addr16
inc
ret
mov
sub
add
in
jecxz
orl
fbstp
dec
push
sti
push
cmp
mov
cmp
ds
sub
stos
lods
daa
push
or
pop
xchg
fwait
pop
movsb
outsb
cmp
test
mov
jg
mov
pop
pop
xchg
fisttps
je
out
pop
das
movlps
cmp
sub
jne
pop
dec
sub
mov
ds
push
cmp
or
inc
lahf
inc
inc
jecxz
push
aas
push
dec
inc
into
xor
mov
mull
stos
aas
mov
rcr
xor
xchg
outsb
roll
push
ljmp
add
sbb
call
and
in
shl
jb
inc
jno
push
out
repz
or
repz
lcall
ret
push
mov
push
inc
or
jecxz
aas
test
and
mov
pop
xchg
outsl
jle
repnz
jg
jl
sbb
jnp
inc
out
int
and
mov
adcb
addr16
in
cmpb
mov
mov
sarb
pop
int3
push
fisttpl
inc
sbbb
gs
mov
adc
leave
out
mov
mov
fisttpl
cmp
push
fisttpl
stos
mov
mov
inc
add
fstp
dec
inc
out
or
inc
jecxz
movsl
inc
sbb
or
pop
push
roll
sbb
xor
sahf
mov
mov
and
fstpt
xorb
cmp
cld
out
lds
out
fs
clc
inc
shl
jl
adc
in
push
inc
mov
ficoml
in
or
dec
adc
scas
push
scas
pop
inc
out
xchg
xchg
push
addb
add
scas
add
and
daa
in
and
icebp
or
inc
ljmp
push
dec
mov
out
call
sti
or
imul
push
je
fcomi
lcall
jns
fucom
nop
test
lahf
cmp
cmp
rcrl
xor
aad
fwait
push
es
or
out
ds
les
and
neg
sub
ljmp
inc
sub
xchg
inc
loopne
jns
iret
xchg
shll
sbb
pushf
popl
popa
pop
arpl
daa
fistpll
fs
fidivl
movl
ja
pop
push
jno
sbb
lahf
mov
jae
les
pop
out
scas
sbb
or
dec
cld
arpl
inc
xchg
dec
push
sub
push
shr
stc
stos
shll
dec
xor
sub
or
jecxz
insb
testb
ljmp
sub
fwait
out
sbb
movsl
add
mov
jno
jae
sub
lret
aas
mov
in
mov
div
pop
icebp
test
rorl
add
fisttpl
iret
jge
call
xlat
cmp
and
outsl
cmp
dec
xor
lret
je
sbb
into
mov
and
dec
notb
push
pop
add
fcmovnbe
loopne
filds
push
or
adc
add
int
out
inc
lods
inc
dec
ja
inc
push
in
out
leave
mov
cmc
add
cmp
mov
push
out
push
ljmp
fildll
jmp
or
lret
jmp
xor
ja
ljmp
in
dec
mov
push
xchg
jb
scas
sbbb
fcmovne
ja
xor
or
xchg
pop
scas
push
out
aas
ss
in
or
inc
mov
in
xchg
inc
scas
popa
aas
jge
xchg
out
push
ficomps
xchg
or
or
repz
clc
mov
sub
arpl
xchg
fisttpl
cmpsl
or
ja
xor
repz
xchg
and
cmp
ja
jns
sbb
scas
fwait
add
and
hlt
xor
xchg
jns
addr16
out
loopne
jecxz
mov
cmp
mov
enter
inc
cmp
or
add
mov
movsb
call
out
out
dec
jecxz
pop
iret
in
xor
call
jl
stos
aad
iret
or
xchg
adc
int
fcmovne
sub
pop
mov
stos
xchg
pop
and
rclb
iret
xchg
jecxz
orl
jle
lret
sub
stos
int
push
adc
xlat
shld
cmp
pop
fndisi(8087
push
mov
sbb
cltd
jnp
int
test
dec
pop
stos
outsb
pushf
jg
inc
in
jns
daa
jne
fstpl
cmp
es
imull
sub
xor
cld
and
mov
push
sbb
sub
inc
jns
rcrl
shll
shrl
dec
or
out
inc
cmpsb
dec
sahf
inc
and
stc
xor
mov
lods
jecxz
les
cmp
push
push
inc
sbb
add
sub
loopne
out
repnz
dec
out
fildl
inc
out
jecxz
aas
jmp
lods
and
out
xchg
aaa
or
mov
imul
pop
add
sub
sub
data16
ds
mov
ljmp
and
das
filds
sub
pop
negb
xchg
dec
sbb
icebp
inc
or
rorb
and
mov
fldl
jecxz
dec
out
inc
sti
pop
in
pop
mov
dec
pop
mov
inc
arpl
insl
cmp
sti
je
and
je
arpl
mov
out
popa
sbbb
test
sti
inc
out
inc
pop
and
ljmp
pop
into
lcall
jp
fcomi
das
popf
jg
push
jg
movsl
pop
push
aaa
test
push
lahf
or
movl
sarl
daa
xchg
jg
and
ja
addl
fldt
std
jecxz
jecxz
and
movsb
pop
mov
daa
je
cltd
ret
mov
xchg
xor
fildl
mov
mov
lret
andl
mov
push
js
fstpt
imul
fistpl
pop
dec
out
fs
es
jge
sbb
or
ljmp
in
adc
xor
fcmovnbe
movsl
in
je
inc
out
and
dec
mov
imul
adc
out
paddw
adc
shrb
lret
add
popa
outsl
mov
xchg
jmp
inc
push
fstpt
add
push
mov
incl
jecxz
inc
cmc
dec
fistl
push
inc
loope
stos
pop
xchg
divl
ja
insb
or
pop
popf
or
pushf
and
lea
push
cmp
in
out
mov
xorb
imull
out
cmc
in
jecxz
cmp
in
pop
and
jp
rcrb
jae
call
out
fnstsw
loope
pop
outsl
mov
dec
mov
and
pusha
jp
roll
bound
mov
xor
out
inc
loopne
aaa
adc
jmp
pop
ja
mov
cwtl
leave
xchg
out
movl
adc
lcall
or
dec
mov
aas
and
sub
call
aas
test
stos
sub
sti
mov
sbb
jge
in
xchg
adc
jp
int
mov
add
push
and
jp
icebp
mov
fcmovnbe
dec
lahf
out
nop
das
mov
scas
dec
rcll
repz
movsb
push
arpl
lret
jg
add
scas
stos
and
rolb
cmp
sub
mov
push
jg
fwait
cmp
es
in
andb
mov
or
cmp
dec
sub
xor
cmp
out
pop
pop
inc
dec
fucom
in
inc
cli
sbb
out
dec
fucom
jp
adc
add
mov
inc
popa
gs
lock
loope
mov
cmp
cmp
icebp
clc
mov
xor
pop
dec
popa
jecxz
push
inc
adc
jecxz
stc
pop
mov
jnp
sub
pop
out
jnp
repz
fists
jns
punpcklbw
addr16
pop
jecxz
cmp
mov
loopne
out
dec
xchg
cld
iret
push
out
mov
cmp
dec
testb
nop
out
jg
test
daa
dec
pop
and
es
aas
lea
or
push
aad
test
jle
xor
imul
jbe
out
xchg
leave
and
movsb
pop
and
xor
push
les
je
mov
push
sbb
add
repz
push
inc
rorb
ja
inc
pushf
in
dec
add
pop
addb
out
sub
pusha
sbb
into
mov
cmp
pop
pusha
in
xor
orl
lock
jp
fwait
pop
xchg
xor
dec
or
add
fincstp
or
xchg
and
rclb
mulb
aam
into
lcall
add
aas
out
jnp
inc
cltd
xor
inc
cmp
test
arpl
pop
sarb
xchg
xchg
dec
jl
cltd
jb
cmpsl
mov
aam
cmp
cltd
push
filds
lds
fistl
dec
aaa
jmp
sub
test
sti
mov
dec
popl
and
mov
xor
push
dec
or
stos
out
add
out
dec
fucom
das
lock
movsb
in
xchg
adc
out
adc
inc
mov
cmp
cmp
stos
rcll
mov
add
sbb
popa
jecxz
sbb
or
sbb
das
push
dec
inc
xchg
sbb
jle
sti
xlat
mov
jl
jmp
sbb
cmp
pop
mov
sbb
fisttps
lahf
mov
adc
xor
mov
dec
in
cltd
fistpl
sbb
lret
out
cmpl
data16
aas
mov
or
cwtl
adc
sub
mov
adc
pop
scas
jnp
dec
or
pop
xchg
nop
sub
sbb
arpl
push
out
xchg
fiadds
xchg
add
fucomip
insb
fistl
fists
addr16
outsl
inc
jge
fcos
shl
mov
xchg
dec
inc
or
inc
push
xchg
sbb
pop
int
fildl
fcmovnbe
or
xchg
sti
out
testl
lret
pop
mov
adc
jecxz
aaa
sbb
xchg
arpl
fistpl
cltd
movsl
pop
andl
outsb
lret
push
xchg
divl
fisttpl
add
mov
fdivrl
and
dec
add
dec
dec
jo
stos
xlat
adc
loopne
adc
dec
inc
adc
movsb
pop
cmpsl
pusha
scas
arpl
fidivl
ljmp
inc
in
pusha
inc
mov
mov
dec
jecxz
xor
lcall
and
fistpl
imul
sub
push
sbb
sbb
sbbb
push
daa
jecxz
out
and
popa
cmpl
or
stos
jnp
fwait
and
jnp
repnz
mov
cmp
mov
pop
pop
movsb
cmpl
jg
push
mov
inc
out
div
pop
out
dec
mov
push
jae
xchg
out
jp
pop
jnp
divps
or
imul
pop
inc
pop
mov
addb
pop
push
add
jecxz
xchg
xchg
mov
mov
push
out
inc
outsl
popa
scas
sub
scas
out
mov
sub
xor
xor
push
add
outsl
test
ljmp
mov
mov
jmp
sbb
int3
test
shrl
sub
dec
daa
lret
push
lods
dec
mov
xchg
pop
sub
andl
test
sbb
into
mov
hlt
hlt
jecxz
fistl
mov
scas
push
ds
push
ljmp
jae
cmp
popa
pop
fistl
bound
mov
cmc
pop
imul
loope
inc
pop
fildl
mov
aam
mov
in
bswap
add
movsb
insb
mov
pushf
inc
inc
je
jecxz
inc
cli
clc
cld
fildl
out
aas
call
fbstp
frstor
xor
mov
adc
dec
fwait
dec
pop
mov
notl
stc
mov
and
loope
adc
pop
xor
out
mov
sbb
arpl
and
stos
sub
loopne
stos
dec
inc
scas
rcll
xchg
out
push
int3
jmp
cmc
fs
mov
stos
push
sbb
dec
mov
mov
cs
int
and
aas
movsb
pop
inc
aaa
andb
xchg
xchg
sti
ja
mov
push
xor
movsb
arpl
jae
notl
loope
into
pop
cmpb
data16
mov
mov
call
subl
ja
xor
xor
push
out
mov
jne
lcall
loopne
jb
and
ficoml
xor
mov
jp
sti
or
xchg
jg
in
mov
dec
xchg
dec
xor
pop
dec
in
pop
hlt
out
popf
repz
aad
in
jecxz
rclb
fcmovnbe
or
xor
pop
ret
push
lock
mov
fisttpl
sti
cmp
rorl
stos
imul
jae
je
pop
inc
xchg
dec
jp
push
ljmp
fneni(8087
scas
ja
ss
mov
sbb
out
fwait
out
inc
inc
sbbl
dec
ds
in
mov
mov
sub
push
mov
pop
push
imul
push
out
xor
pop
fistps
sti
or
push
jp
adc
cmc
push
cmp
sub
xor
mov
sti
sub
jae
jle
fisttps
xchg
xor
mov
mov
cmp
and
push
stos
xchg
push
xchg
cmp
pop
xchg
cmc
cmp
pop
sti
sub
sbb
inc
clc
xor
ja
xchg
sub
pop
push
inc
jecxz
and
jb
xchg
xlat
pop
into
sar
insb
mov
sbb
shrl
ja
cmp
lods
lret
bound
fnsave
xor
jge
fistpll
xor
sbb
xchg
inc
shl
fists
aaa
rcll
jecxz
fildl
dec
dec
jae
pop
mov
and
repz
push
neg
pop
out
fwait
sub
mov
in
jle
jae
into
and
lret
rorl
mov
xor
aam
cmc
aad
lahf
push
lret
arpl
repz
scas
jecxz
rorb
jno
stos
jns
rcl
into
jmp
pop
int3
aaa
imul
dec
inc
out
cmp
sub
in
fstpt
sbb
nop
sub
add
push
imul
cmp
sub
shl
iret
repz
dec
ret
or
out
inc
push
fistl
in
pop
inc
or
out
mov
pop
dec
cmpsb
jmp
pop
sbb
xor
fwait
pop
out
fstpt
pushf
jmp
popf
out
pop
push
in
cmp
dec
aas
pop
dec
inc
pop
sti
sti
inc
jnp
cmp
jae
mov
es
mov
pop
out
sbb
jnp
mov
mov
js
xchg
lret
out
and
pop
mov
add
adc
sub
mov
xchg
dec
flds
out
mov
not
test
adcl
dec
out
sbb
or
ljmp
sbb
cs
xor
jnp
xchg
testl
pop
push
repz
dec
push
pushf
lock
clc
jmp
sub
add
in
adc
out
mov
mov
add
sbb
pop
mov
jmp
test
ret
fistl
aad
sbb
pop
mov
test
mov
fnstenv
into
adc
jne
outsl
cltd
out
movsb
shl
jp
fldt
outsb
subl
repz
push
fistl
out
enter
cmp
mov
dec
fcmovne
mov
pop
push
fcoml
sbb
imul
cmp
fneni(8087
or
out
das
adc
scas
fcmovnbe
mov
scas
fcmovnu
push
insb
in
out
lock
pop
ds
stc
jecxz
fwait
daa
inc
pop
pop
scas
dec
push
pop
daa
aaa
xor
push
sub
fwait
insb
push
xchg
mov
in
lahf
jecxz
repnz
insl
out
in
jecxz
mul
cmp
sti
push
dec
cmp
adc
or
popa
and
dec
and
and
or
and
stos
sub
cmp
mov
in
jecxz
out
sub
push
out
mov
cmp
sti
or
je
sbb
xor
inc
ja
sbb
nop
xor
push
jns
and
stc
out
xchg
stos
stos
and
pop
mov
test
add
xchg
sahf
mov
xchg
mov
in
loope
cmp
sub
fstpt
cmp
fistl
imull
cli
sbb
pop
push
fucomip
push
repz
aam
pop
std
sbb
es
inc
out
fwait
cltd
jg
lret
fcmovnbe
jne
repnz
iret
mov
pop
dec
xchg
sub
adc
sub
push
inc
pop
jg
inc
fisttpl
data16
push
das
into
jne
and
lahf
fisttpl
sub
jbe
repz
loop
and
adc
adc
repz
fisttps
ljmp
in
inc
add
pop
into
mov
jbe
cmpsl
mov
mov
push
pushf
daa
sub
sti
stos
sub
add
dec
mov
add
mov
inc
jecxz
pop
fninit
pop
pop
jecxz
testb
mov
cmp
popf
out
loopne
inc
jae
push
in
icebp
iret
adc
in
mov
xor
cmp
jp
xchg
out
clc
lods
fldt
dec
out
inc
and
fildll
movsb
out
jae
into
pop
push
and
pcmpeqb
pop
insb
jp
jg
xchg
sub
adc
sbb
xchg
xchg
jecxz
mov
rcrl
mov
fistps
mov
inc
cmpsl
mov
dec
mov
ljmp
cmp
fcomi
push
pop
sbb
pop
in
popa
lret
dec
mov
mov
inc
ret
jg
cmp
xchg
push
or
imul
sbb
xchg
jae
push
rcrb
int
fldt
outsb
mov
movsb
mov
push
fcmovne
mov
mov
dec
inc
out
arpl
jo
in
sbb
ret
dec
rcr
repnz
fistpl
in
sbb
xchg
jp
lret
cmp
daa
fisttpl
and
fildl
inc
lcall
gs
in
out
aad
sbb
aaa
cld
xor
scas
mov
xor
jmp
dec
inc
xor
jmp
and
add
jbe
pushf
lcall
rcll
out
xor
daa
or
out
pop
dec
push
push
add
pushf
jmp
mov
scas
add
out
stc
inc
fistl
pop
cmp
or
inc
mov
and
mov
xor
jp
pop
hlt
mov
lds
fdivp
sbb
inc
fs
or
cmp
or
pop
jnp
and
lret
fs
pop
imul
out
stos
jg
mov
inc
or
push
scas
mov
or
pop
lret
lret
mov
roll
in
out
loope
jae
ds
fisubs
ja
mov
fildl
fmuls
outsb
out
lahf
sub
in
mov
rorb
call
and
decl
cs
fstpt
rclb
sbb
jle
xchg
pop
mov
sbb
cld
out
xchg
push
stos
sbb
rclb
jecxz
int
sub
jp
fistpll
inc
dec
push
fstpt
pop
pop
mov
das
xchg
mov
inc
jmp
fildl
lret
pop
dec
add
pop
sub
pop
pop
andb
imul
ret
sbb
or
in
ret
sbb
sub
js
jbe
inc
test
mov
and
out
out
add
out
lock
fldl
icebp
pop
cmp
xor
push
nop
icebp
pushf
stos
xchg
adc
lods
cmp
mov
mov
xchg
sub
fstl
dec
clc
xlat
jecxz
hlt
sub
inc
out
ds
out
push
adc
fninit
aas
notb
cmp
jecxz
aaa
and
daa
xchg
xor
push
aas
dec
clc
sahf
out
mov
inc
pusha
xchg
cmp
pop
shlb
jnp
fbld
mov
and
pop
or
dec
pop
cld
sbb
and
xor
fistpl
sbb
js
push
or
or
stos
pop
pop
jg
fidivrl
hlt
incl
xchg
outsb
dec
test
nop
dec
xor
jecxz
inc
mov
pop
scas
out
pop
scas
rolb
jno
rcr
test
testb
inc
les
les
inc
pop
xor
sbb
popf
jmp
sbb
roll
fdivrs
xchg
mov
lret
loope
rcr
shll
sahf
cmp
lret
out
test
mov
fisubrs
sbb
mov
mov
fimull
aaa
outsl
mov
jno
in
mov
dec
cmp
and
jp
mov
mov
dec
sub
xchg
fisttpl
into
pop
das
lret
clc
jp
xchg
xchg
mov
repz
out
insb
in
in
lret
ret
rolb
fucomi
sbb
sub
pop
xchg
lahf
or
xchg
push
dec
adc
and
add
decw
jecxz
into
pop
out
repz
out
pop
or
push
idiv
aas
xchg
sbb
push
rorb
movsl
adc
sbb
add
jecxz
or
fcmovnb
out
imul
dec
out
adc
repnz
shl
or
mov
sub
mov
xlat
mov
cmp
into
out
inc
or
jae
or
test
daa
jecxz
popa
jnp
push
mov
test
xchg
aaa
data16
sub
inc
fimull
fucomp
mov
cmp
xchg
gs
jg
jle
scas
lret
stos
mov
loope
mov
dec
mov
call
push
cmp
cmp
sub
or
js
jg
fbld
xor
sbb
lods
cmp
inc
bndstx
fisttpl
out
movsl
cmp
pop
rcrl
hlt
xchg
addr16
movsl
pusha
fdivrl
push
push
imul
cmpsl
lock
jno
adc
fistpl
sub
sub
jp
fldt
cmp
mov
or
jne
incl
lcall
pop
inc
pop
inc
push
clc
ror
inc
jecxz
pop
or
fldt
mov
and
notl
cltd
xor
xchg
xchg
out
xor
xchg
sbb
out
dec
dec
sbb
dec
push
mov
push
inc
in
out
pop
in
repnz
jecxz
inc
push
or
inc
scas
dec
lret
xchg
pop
mov
add
out
clc
or
push
dec
fnstsw
hlt
pop
dec
dec
or
jecxz
ljmp
xor
inc
and
push
or
jae
mov
push
xchg
fadds
ror
jg
or
rcr
hlt
mov
ret
std
jp
jmp
jle
xchg
inc
and
loope
mov
subb
call
fstpt
add
loopne
xchg
cmp
rcr
sbb
paddsb
test
lsl
or
std
scas
fdivr
jg
fistpll
fildl
pop
pop
pop
hlt
push
ror
out
arpl
movsl
mov
bt
jns
and
fnstenv
pop
call
fisttpl
stc
xchg
mov
jb
mov
xor
lods
xchg
push
imul
xchg
lret
daa
and
in
fistpl
and
enter
fisttps
mov
loope
out
repnz
aam
jecxz
stos
push
pop
dec
imul
sub
push
mov
nop
xchg
mov
aas
adc
mov
sbb
dec
push
mov
push
hlt
scas
imul
push
out
dec
sub
or
xorl
pop
push
out
pop
mov
pop
das
add
mov
sub
loope
cli
ds
or
pop
push
test
inc
pop
out
push
shl
cmp
aaa
and
cmc
mov
out
jecxz
mov
cltd
adc
push
sti
xor
lret
stos
push
or
jecxz
lahf
ss
sbb
inc
mov
iret
jae
sub
ret
xchg
scas
xchg
insl
push
fcmovnu
fisubrs
sbb
sub
jle
xchg
stc
imull
aam
inc
pop
or
rcrl
or
sub
fcmovnbe
xchg
pop
lret
lcall
repz
imulb
push
fstpt
sub
fildll
pop
aad
jae
dec
add
stos
movsl
xorl
mov
outsb
cmp
jno
repz
imul
arpl
and
xchg
sbb
or
into
neg
inc
mov
fstpt
out
divl
out
popf
stos
popa
sbb
shlb
fistpl
pop
inc
dec
es
and
addb
cmp
fdivl
push
jg
stos
xchg
sbb
dec
push
sub
pop
push
cmc
fcoml
jle
push
add
inc
repz
sbb
stc
out
add
cmp
insb
movsb
lea
inc
jbe
inc
push
cltd
repz
cmp
imul
ds
pop
adc
sbb
or
mov
rorl
stos
andb
pop
sbb
psubq
insb
mov
and
xchg
stos
add
mov
jp
xor
fcmovnbe
dec
push
sti
pusha
rcll
xchg
cs
mov
push
icebp
pop
inc
and
sbb
fcomip
or
add
scas
mov
push
jecxz
add
mov
loope
insb
hlt
lcall
inc
dec
sub
inc
or
sub
or
aaa
shrl
jp
adc
daa
jecxz
aas
dec
xchg
xchg
sbb
nop
out
out
fcomi
mov
sub
mov
mov
lcall
and
sbb
stc
out
int3
dec
pop
scas
push
jg
outsb
cmp
jo
jb
sbb
pop
and
sbb
and
sub
push
adc
fcomi
cltd
arpl
push
inc
xor
movsb
orb
inc
jne
out
out
pop
out
fucomp
mov
imul
sub
in
or
xorl
xor
in
jle
cmpsl
pop
inc
iret
or
pop
lea
push
mov
jecxz
out
mov
push
sbb
pop
mov
cmc
pusha
out
adc
out
scas
pop
cwtl
adc
inc
addr16
test
xchg
ljmp
push
push
cmp
pop
pop
cmp
inc
mov
stos
dec
pusha
jle
mov
dec
out
es
sti
fstl
lea
push
pop
push
add
jne
or
push
jecxz
xchg
and
or
pop
orb
jg
in
xor
inc
into
sarb
push
push
cmp
mov
arpl
ds
lcall
in
or
into
dec
mov
xchg
aam
aad
dec
pop
sbb
test
popa
push
aas
outsb
mov
push
fistps
dec
cld
aas
in
test
pop
push
cmpsl
pop
lea
dec
aas
mov
pop
or
xchg
mov
cwtl
mov
scas
rclb
mov
fists
addr16
cltd
daa
push
push
or
es
push
inc
and
fwait
rcr
cmp
jecxz
icebp
movsb
out
jae
mov
dec
push
xchg
and
mov
les
shrl
sub
adc
cmp
jns
jmp
pop
push
inc
mov
xchg
sbb
mov
jbe
push
and
inc
fildl
dec
and
inc
mov
fldt
lock
inc
or
push
call
jecxz
ss
ret
lret
mov
cmp
mov
repz
in
nop
out
mov
push
popf
or
push
faddp
repz
xchg
in
imul
push
stc
jecxz
in
out
cmpsb
lret
xor
jbe
fimuls
sysexit
lret
lea
adc
jnp
push
inc
adc
clc
cmp
sub
add
loope
and
sarb
pshufw
or
mov
fistps
push
pop
sahf
push
rcl
xor
cltd
ss
jae
mov
shll
stos
dec
sti
inc
fdivrp
ljmp
in
cmpsl
testb
xor
repnz
fbld
xchg
sbb
dec
pop
xlat
xor
xor
hlt
fwait
push
in
lods
out
js
mov
mov
mov
add
mov
add
int
loope
subl
xchg
out
shll
jns
jecxz
and
and
mov
jecxz
cmpsl
sbb
or
inc
xchg
xlat
or
mov
mov
cmp
repnz
test
sbb
inc
sbb
ja
cltd
and
and
add
mov
flds
mov
pop
subb
adc
call
cmp
pop
cmp
in
inc
jmp
push
lret
cmp
rorl
xor
adc
mov
fwait
sub
nop
stos
cmpsl
xchg
pop
shll
sti
xchg
mov
push
pop
mov
imul
fwait
or
ljmp
clc
in
subb
rorb
inc
dec
push
ljmp
pop
in
xchg
add
divl
out
insl
push
outsl
xchg
push
repz
and
and
fwait
push
cvtps2pi
xchg
jbe
add
arpl
repz
pop
mov
fistpll
cmp
pop
int3
mov
add
cmp
std
inc
roll
dec
in
fwait
push
jecxz
das
out
push
inc
mov
fs
pop
mov
jnp
not
xchg
push
dec
out
fadds
or
xchg
loope
dec
sub
out
push
jg
sub
testb
pop
out
movsb
mov
mov
int
mov
sbb
jmp
aad
push
aas
jecxz
push
in
in
repnz
ja
pusha
sbb
imul
cmpsl
add
lods
and
daa
sbb
xor
cwtl
fcmovnb
shlb
dec
scas
psubb
and
adc
jo
mov
mov
imul
ljmp
sub
in
add
lea
push
fists
cwtl
jmp
mov
dec
or
xchg
arpl
xchg
cli
dec
lcall
stos
pop
aad
sub
pop
or
fincstp
and
cmp
fistpll
in
mov
imul
dec
ljmp
push
inc
inc
fbld
jecxz
jmp
pop
stos
inc
pushf
scas
xor
sbb
imul
das
insb
xchg
insl
roll
pop
push
punpcklwd
cmp
or
push
cmpsl
out
jp
mov
pushf
aaa
dec
push
inc
cmp
sub
mov
sarl
dec
fcmovnbe
dec
pop
pop
mov
loopne
fsub
inc
fisttpl
sbb
inc
mov
sbb
mov
inc
fstl
das
sub
pop
mov
xor
stos
jmp
push
pop
pusha
and
xlat
out
xchg
xchg
jp
loope
mov
lret
xchg
and
pop
into
imul
fcmovnb
int3
and
rcr
xchg
cmp
pop
lret
fldenv
dec
ljmp
js
pop
cli
jne
imul
cmc
sbb
sub
nop
sub
mov
filds
out
fadds
ja
lock
rcll
dec
sbb
pop
sub
pop
cmpsl
xchg
jg
repz
das
jg
pop
jnp
mov
test
jecxz
xor
daa
test
dec
xor
pop
aaa
xor
stos
ja
rcll
mov
repz
pop
repnz
in
sub
add
fistpll
xchg
dec
jecxz
stos
inc
clc
adc
ja
cmp
mov
cld
imull
shll
fistpll
icebp
jecxz
dec
adc
xchg
cmp
setns
out
mov
sbb
mov
lea
loope
into
fimull
rcrl
out
andb
subps
fs
cmpb
pop
xchg
sbbl
xchg
mov
test
and
jp
inc
pop
pop
mov
hlt
in
xchg
and
push
sbb
jle
test
and
in
adc
push
in
pop
dec
add
xor
imul
fucomip
rclb
repnz
fldt
ds
iret
pop
out
into
mov
fisttps
push
dec
lret
mov
and
repz
xchg
outsl
cmp
dec
in
or
lcall
push
cmp
dec
dec
repz
push
push
and
mov
lahf
xchg
fldenv
cmp
idivl
cmpsl
out
daa
or
icebp
and
inc
mov
sub
pop
xchg
jp
jecxz
test
xor
daa
or
dec
pushl
push
and
shll
and
aas
push
dec
push
jmp
ret
dec
iret
adc
dec
sub
idiv
inc
lods
push
cmp
jmp
fwait
repnz
xchg
sub
clc
ds
xor
push
xor
pop
push
in
fimuls
shrl
sbb
jae
sub
popa
cwtl
push
insb
cwtl
mov
ja
sbbl
rcll
sub
das
fldt
outsb
adc
out
lods
xorb
dec
sti
sbb
dec
sbb
loopne
call
push
scas
fistpl
ja
sub
push
pop
xchg
push
jg
mov
pop
pop
movsl
testb
ja
jp
lahf
test
pop
or
mov
and
sbb
int3
shrl
and
stos
scas
fldt
fistps
fcmovnb
daa
pop
pop
add
sbb
jecxz
xchg
push
pop
or
xchg
shl
mov
arpl
adcb
je
jnp
xor
fildl
fstpt
pop
sbb
sbb
mov
andl
add
dec
push
ret
dec
and
fldcw
push
mov
andb
pop
inc
jmp
inc
in
dec
call
push
sbb
pop
pushl
ss
hlt
push
sub
dec
loop
and
xchg
lret
ljmp
pop
fmulp
idiv
stos
fists
and
in
mov
pop
ds
push
aas
jecxz
push
add
and
inc
repnz
fistps
addr16
and
arpl
nop
xchg
scas
inc
repz
ljmp
jno
jbe
jge
daa
out
hlt
fistps
mov
mov
dec
imul
and
push
xchg
sub
mov
inc
out
sbb
cmpsl
jb
push
mov
call
cmp
mov
gs
pop
xchg
push
or
and
jecxz
push
push
dec
inc
mov
outsl
cmp
mov
add
cmp
into
pop
fcmovnbe
cmp
maxps
iret
pop
dec
mov
sub
cs
mov
dec
add
fnstenv
jecxz
fsts
add
test
pop
mov
mov
mov
inc
dec
stos
adc
andl
cmp
les
or
adc
iret
ja
mov
bound
lds
and
out
js
out
pusha
fpatan
out
push
pop
pop
jnp
data16
and
sbb
lret
repnz
scas
hlt
fildl
dec
repz
xor
cs
int
cmp
sti
push
inc
sub
dec
pop
mov
repz
add
cmp
jb
jl
dec
mov
pop
jnp,pt
dec
push
in
ss
pop
nop
push
not
and
inc
xchg
adc
add
xchg
push
xchg
rep
inc
inc
mov
cmp
in
jmp
cld
mulb
fistps
pop
fildl
test
or
xor
cld
ds
fimuls
dec
jp
add
imul
gs
dec
mov
jg
loope
cmpsl
jno
mov
mov
stos
push
pop
cwtl
js
test
pop
pop
mov
xor
cmpl
sub
in
mov
mov
xchg
dec
pop
jecxz
inc
sbb
inc
add
out
xor
push
push
lcall
fwait
icebp
daa
fwait
cmp
add
and
mov
clc
cmpsl
mov
int
cwtl
xchg
sbb
fcmovnbe
out
add
mov
rorb
adc
shr
adc
cwtl
and
shll
lods
sbb
jmp
movsb
fwait
jle
cwtl
frstor
sbb
les
sbb
pop
pop
lods
dec
jmp
dec
pop
push
lods
nop
and
mov
gs
arpl
sbb
fcmovne
lds
mov
popa
cwtl
dec
pop
out
fincstp
mov
mov
fisubrl
pop
sbb
push
jp
push
jecxz
iret
aas
cmpsl
push
inc
dec
cmc
add
fdivrl
cmp
sub
inc
notb
mov
sbb
push
jae
or
inc
sbb
filds
inc
out
lret
cmp
mov
xchg
jecxz
testl
push
popa
jb
and
sub
and
dec
push
inc
pop
sub
into
aaa
idiv
add
dec
jns
xchg
add
das
adc
cmp
stos
or
jae
pop
sbb
and
imulb
arpl
dec
hlt
cmp
out
xchg
jecxz
sub
mov
xchg
mov
icebp
ljmp
jg
arpl
sbb
fildl
cmp
outsb
dec
lahf
push
and
rcr
in
cmp
xor
imul
jecxz
xchg
xor
sti
out
jne
repz
repz
mov
pop
setns
cmp
jo
ret
sbb
test
cmpsl
in
cltd
and
cltd
lret
shrb
lret
cmpsl
movsl
rcr
or
jo
out
jbe
xchg
jne
jmp
pop
push
push
mov
test
dec
pop
fbld
jne
and
jno
mull
fucomip
shlb
mov
out
pop
loop
cwtl
ljmp
in
and
inc
push
and
inc
arpl
cmp
lret
inc
sbb
push
inc
fwait
pop
push
inc
data16
jecxz
jmp
cmp
or
inc
cmc
les
hlt
ja
mov
pop
testl
push
popa
fucomi
cmp
fldt
inc
and
push
lret
jge
out
in
arpl
sbb
or
ffreep
mov
arpl
ja
dec
jb
adc
daa
out
dec
or
xchg
cltd
ljmp
pop
xchg
lea
pop
and
adc
in
loopne
cmpsl
push
inc
mov
neg
jbe
xchg
mov
xor
push
mov
and
cmp
pop
roll
sti
and
roll
and
xchg
xor
aam
not
pop
push
and
fisttps
inc
hlt
insl
lds
or
inc
out
fldt
aas
adc
repnz
xchg
pop
xchg
lods
sbb
fistpl
in
out
xor
or
add
jg
insl
inc
sub
sbb
popf
xlat
loopne
or
and
into
push
and
dec
js
push
fcmovnbe
ret
out
fistl
inc
dec
xor
pop
push
pop
push
es
dec
popa
push
xor
xor
inc
jmp
in
aaa
or
cmp
cmp
mov
ret
inc
mov
aam
xor
out
rep
filds
cmp
stc
lret
outsb
mov
aam
daa
ds
push
lahf
sub
xor
push
pop
pusha
subb
inc
add
ja
test
addr16
sub
lea
cs
pusha
cmp
jns
pop
inc
scas
out
mov
pop
xor
mov
aaa
lcall
fs
in
rclb
mov
inc
ret
mov
mov
inc
mov
and
pop
sti
jg
lock
repz
inc
xor
xchg
repz
aad
or
std
pop
lret
mov
mov
negl
call
out
adcl
in
out
sub
mov
out
lea
mov
dec
fnsetpm(287
xchg
sub
movl
test
xor
pop
out
mov
shrb
add
cmp
mul
mov
and
out
cmp
and
testl
out
das
in
addb
sub
mov
sub
or
mov
in
out
cmp
testl
mov
lret
cmp
push
adc
pop
stos
pop
mov
fs
test
bound
mov
movsb
call
scas
outsb
imull
push
das
or
fldenv
or
jb
jno
pushf
dec
stos
inc
mov
and
jne
shrb
jge
mov
ja
loope
outsl
fiadds
xchg
mov
loope
pop
popa
sub
scas
cmp
or
mov
out
mov
dec
fistl
inc
push
pop
cmp
jle
or
dec
pop
ja
pop
sbb
fs
pop
and
mov
fst
push
inc
lahf
stc
inc
xlat
mov
mov
pop
in
xchg
out
jp
jae
fildll
ss
addr16
ficompl
imul
shrb
or
dec
adc
dec
repz
insl
fistl
call
mov
jecxz
xor
dec
ljmp
fcmovnbe
jns
or
out
in
dec
inc
enter
repz
jno
mov
out
dec
adc
in
out
sahf
and
push
std
push
push
xchg
push
cmp
add
add
or
cltd
dec
pop
negl
sub
xor
pop
testl
mov
mov
cmp
hlt
or
outsl
ljmp
fistl
call
sti
sub
nop
xor
cmp
or
add
xor
aad
imul
cmp
lret
push
ja
sub
pop
aam
dec
sub
lret
and
pushf
out
mov
xlat
push
es
scas
shr
pop
push
push
in
fcomip
push
jnp
mov
mov
out
inc
dec
xchg
fildl
repnz
or
mov
repz
arpl
lret
rcll
xchg
loope
repz
inc
fwait
and
pop
andl
xorb
cmp
xlat
sub
sub
and
rcr
out
adc
xchg
or
bt
shrb
mov
into
and
out
loope
les
lea
mov
push
sbb
push
das
jne
pop
out
dec
aas
jbe
adc
sbb
cmp
and
add
div
inc
and
ljmp
out
ljmp
inc
sbb
in
addr16
or
sbb
pop
ds
xor
push
daa
dec
pushf
fidivl
test
dec
scas
jecxz
cmp
out
jbe
inc
dec
xchg
repz
gs
cmpsl
shl
mov
mov
and
jbe
mov
xchg
fistpl
cmp
xor
mov
pop
jp
xor
mov
addr16
ret
out
in
shlb
mov
test
adc
and
hlt
jmp
xor
lods
je
jb
in
hlt
or
imul
stos
sbb
push
ljmp
mov
push
das
fstpt
popf
inc
push
stos
pop
lret
xchg
inc
insl
fstpt
pop
sti
dec
adc
ficoml
cmp
clc
pop
xchg
shrl
xlat
dec
jmp
cmp
roll
xchg
sbb
lahf
into
mov
xchg
out
mov
pop
cmp
inc
cmp
jmp
out
aam
add
xor
sub
push
xchg
jae
sti
movsl
lcall
or
lods
mov
sbb
jmp
push
pop
in
lret
out
inc
mov
pause
xchg
fisttpl
push
push
pop
xor
rcrl
pop
fstpt
add
fistpl
jo
mov
cld
cmp
inc
in
sti
push
inc
fwait
xor
push
pop
repz
pushf
ds
lock
xchg
push
aas
push
cmp
loop
dec
aas
mov
div
movsb
jo
das
fcmovnbe
pop
jecxz
aas
sub
fildl
inc
add
lret
daa
mov
push
xchg
adc
push
scas
push
xchg
and
add
jns
cmp
xchg
pop
sub
xor
out
loope
iret
mov
test
push
jno
sbb
lods
cmpsl
jle
out
divb
xlat
or
push
pop
jp
inc
lret
or
jmp
lea
imul
test
pop
jne
jmp
jecxz
xchg
fadds
jecxz
gs
movsl
and
mov
test
stc
mov
stos
push
icebp
xchg
outsl
mov
sbb
inc
cmpl
dec
mov
fwait
mov
jmp
fsubrs
repnz
xchg
shrb
into
jae
hlt
popa
out
flds
mov
inc
jae
repz
cltd
negl
pop
adc
inc
xchg
aas
mov
pop
sub
mov
mov
dec
xor
xchg
out
and
push
in
js
insl
push
out
andb
into
add
aam
idivl
push
sbb
sub
mov
out
add
cltd
pusha
scas
leave
out
mov
loope
fiadds
fstpt
clc
daa
testl
jmp
add
mov
loope
std
repnz
ret
pop
adc
add
sub
or
sbb
out
mov
scas
aam
mov
and
sub
push
mov
out
jecxz
push
mov
and
sbb
nop
xor
andl
push
repnz
fbld
pop
nop
out
pop
push
xorl
cmp
sub
into
pop
cmp
xchg
test
je
or
add
out
imul
push
and
pushf
adc
pop
call
cli
das
dec
and
popa
mov
pop
cwtl
aaa
pushf
out
rcr
iret
adc
add
jmp
sub
inc
rcrb
divb
xor
push
in
add
sub
pushf
adc
cmp
movsl
and
iret
xor
xor
jecxz
jnp
pop
fdivrs
push
daa
and
imul
pop
cmpsl
and
jp
pop
out
and
add
lret
xchg
inc
fildl
inc
ljmp
inc
and
fs
mov
aam
adc
imul
sti
mov
push
jecxz
dec
add
aaa
xchg
aaa
xorb
sbb
fidivl
lahf
add
cmp
sub
and
dec
mov
fildl
repz
cmpsl
mov
sarb
jecxz
aad
xor
ret
lahf
jbe
fdivr
jae
and
jecxz
pop
adcl
push
iret
push
aaa
push
roll
dec
dec
repz
repz
clc
icebp
out
fistpl
or
dec
sar
lret
ljmp
aas
xchg
out
jecxz
lds
pop
lret
sub
lds
pop
pop
push
fcomps
ficoml
dec
sub
and
ds
js
stos
mov
add
dec
pop
ror
pop
adc
cmp
xor
fisubl
xor
pop
into
jp
jnp
cltd
xor
xchg
pop
or
fistpl
jp
pop
scas
mov
imul
jae
cmp
sbb
out
addr16
orl
es
fldt
shl
into
xor
inc
mov
lock
out
out
lea
inc
icebp
loopne
jecxz
jmp
inc
ficompl
dec
push
inc
aas
jecxz
imul
cmp
in
filds
sub
clc
stc
out
mov
cmp
fcomp
fldt
enter
and
jb
cmpsl
popf
inc
neg
scas
fistpl
dec
inc
fdivl
dec
fnstsw
xchg
inc
rcl
out
rorb
jae
int
call
mov
sti
lret
pop
jb
fisttps
pusha
xorl
in
pop
adcb
push
fwait
repz
inc
cmp
xchg
subb
sub
rcr
xchg
xor
aam
and
leave
jnp
andb
add
fnstcw
loop
mov
fsubs
xchg
andb
xchg
mov
push
inc
mov
mov
shll
mov
arpl
mov
xchg
cmpl
sub
out
sub
imul
and
pop
fwait
push
push
xchg
sbb
cmp
jg
and
fninit
and
fsubrs
fldpi
cmc
mov
dec
cmc
stos
fwait
ljmp
das
inc
and
xor
in
repz
bswap
mov
inc
imul
fistps
inc
fstpt
sahf
addr16
aaa
cmp
pop
push
cmc
push
xor
lods
inc
movsl
dec
loopne
pop
xor
lea
ljmp
push
and
movsl
stc
scas
add
popa
mov
xchg
mov
shll
lea
push
fcmovu
lahf
mov
cwtl
test
stos
fcmovnu
rorb
int
lret
or
xor
xchg
sbb
fwait
cmpb
je
add
push
fisubs
adc
sub
sub
add
adcl
jg
rcll
add
popa
fwait
dec
xchg
andb
gs
xlat
dec
out
loop
xor
push
lea
fistpl
mov
xchg
inc
daa
repz
sbbb
add
mov
in
jecxz
adcl
push
lds
out
ret
and
fnstenv
mov
push
mov
adc
jmp
lods
shrl
add
adcl
lahf
arpl
arpl
dec
xchg
jns
lret
pop
push
cmp
push
dec
jns
jns
xor
pop
jp
jo
cmc
fldenv
cmc
fnstcw
shrl
in
push
and
fidivrl
lock
loope
sub
addl
mov
pop
dec
push
cmp
cmc
lahf
out
ljmp
push
jae
pop
iret
call
cmc
mov
out
push
out
cmpl
shl
dec
fisttpl
inc
jecxz
push
mov
pop
pop
jl
xchg
sbb
rorl
divl
push
push
xlat
or
roll
aam
out
cmp
mov
mov
out
imul
in
popa
pop
daa
jne
jecxz
and
mov
xchg
xor
repz
hlt
loope
in
cmc
stc
mov
fisttpl
div
dec
bnd
repz
or
adc
aaa
das
pop
cwtl
cmp
push
jmp
negb
xchg
sbb
outsb
pop
inc
inc
pop
inc
outsb
fstpt
ret
insl
sub
mov
into
adcb
xor
jmp
les
imul
cmp
sbb
jecxz
xor
mov
lret
mov
ljmp
je
scas
pop
rcll
or
push
imul
out
dec
lcall
fistpll
add
stos
add
out
insb
add
jg
cmc
fnstcw
ds
mov
out
out
out
jbe
out
jmp
push
pop
pop
adc
dec
push
pop
filds
icebp
in
test
hlt
xor
not
in
cmp
sub
js
cmp
repnz
inc
fwait
in
push
xchg
mov
adc
or
pop
inc
lods
dec
inc
stos
cmp
cmp
dec
jecxz
dec
sbb
or
stos
int
aas
fwait
push
xchg
push
fsts
in
xor
dec
adc
cld
out
jle
stos
and
mov
mov
cs
pusha
lds
sbb
pop
jbe
push
mov
inc
cmc
cmp
in
ficoms
out
inc
fucomi
std
cmp
inc
stc
lcall
jecxz
jmp
or
aaa
loop
and
sbb
add
xchg
xor
xchg
xor
mov
xchg
and
aas
mov
lods
fcmovnb
shlb
xchg
jg
add
lret
scas
ret
out
dec
icebp
mov
mov
mov
movsl
fcmovne
sbbb
pop
addr16
inc
sti
or
movhps
out
rcll
or
cwtl
popa
fnsetpm(287
sub
loop
es
or
and
inc
fcmovne
pop
dec
fldt
out
stc
jnp
add
inc
neg
into
mov
sbb
inc
cld
out
stc
in
adc
mov
pop
mov
dec
inc
add
push
pop
jae
push
orl
and
jecxz
into
push
and
imull
jnp
cmc
inc
test
jge
xchg
out
push
cltd
mov
push
mov
ja
jmp
rolb
out
mov
rcrl
jecxz
or
repnz
inc
cmp
dec
out
fwait
pop
jge
sbb
pop
inc
sub
daa
or
cltd
xor
inc
aad
xchg
or
aad
repz
adc
mov
scas
mov
or
push
cmp
stos
test
xchg
inc
shrl
ficompl
sub
mov
inc
ds
loope
ret
ficoml
into
in
or
pop
mov
pop
inc
hlt
push
xchg
cmp
pop
lahf
push
inc
ffreep
xor
aaa
mov
pop
pop
push
rcrl
ror
push
or
aas
and
inc
mov
mov
movsb
jg
int3
cs
pop
in
cmp
dec
sti
xchg
stos
cs
inc
jle
xchg
dec
and
out
jae
mov
pop
sub
adc
and
sbb
negl
mov
xchg
les
cmp
loopne
dec
dec
clc
sub
scas
leave
inc
jecxz
out
loopne
jmp
in
hlt
fidivrs
adc
in
push
out
iret
xrelease
pop
ds
push
pop
sbb
sbb
dec
push
cmp
sbb
mul
in
xchg
cmp
out
cmp
xchg
cltd
stos
fildl
stos
inc
fwait
in
push
cwtl
fmul
sbb
aas
jmp
push
mov
add
repz
jecxz
stc
xor
dec
push
or
cltd
ss
inc
jle
les
sti
xlat
xchg
mov
xchg
aam
mov
aad
cltd
dec
jb
xchg
fstps
addr16
push
sbb
psllw
adc
lea
push
xor
sti
mov
ljmp
inc
or
jge
js
scas
inc
repnz
pop
push
lock
aaa
or
inc
xchg
sub
pop
cs
out
cltd
xor
fbstp
movhps
jmp
sbb
fstpt
ja
add
fildll
or
dec
addb
mov
insl
push
out
or
fwait
pop
sarb
sbb
and
and
mov
pop
add
out
push
or
ds
daa
sti
cmpsl
sub
and
dec
add
push
fnstcw
lock
xor
out
mov
fistpl
in
sub
inc
push
aas
stos
xor
xchg
test
out
test
xor
cli
cmp
push
icebp
ds
in
pop
pop
enter
push
loope
scas
and
out
ja
mov
aad
dec
pusha
cltd
jmp
sub
js
push
fildl
push
inc
mov
sbb
ja
cmpsl
pop
loope
ja
dec
int3
cmc
and
mov
and
push
xchg
ss
pop
jge
push
jns
fcmovnu
std
int
jns
jno
hlt
jle
lea
xor
or
aam
pop
adc
lea
xor
stos
adcb
dec
push
or
fistps
out
subl
out
jmp
cmp
in
inc
loope
jp
or
lret
mov
fneni(8087
movsb
pop
pop
cmpsl
imul
fcmovnbe
fstpt
push
inc
ljmp
setge
pop
push
xchg
cmp
jecxz
jmp
int3
fwait
xchg
lret
std
xchg
sbb
lret
pop
inc
fldt
jecxz
movsl
xchg
repz
and
into
pop
fldt
in
xchg
adc
xchg
mov
add
cmp
fcomps
out
fwait
ds
pop
push
push
cmp
and
out
dec
inc
dec
push
sbb
into
ret
mov
jo
mov
dec
inc
idiv
popa
int
out
out
mov
repz
jge
inc
dec
pop
addr16
push
inc
ja
pop
jnp
dec
push
inc
cmp
push
inc
icebp
rcrl
inc
jmp
xor
aas
sar
das
fwait
dec
inc
push
addl
push
jecxz
lods
ds
xchg
pop
aas
jp
xchg
and
cmpsl
xchg
sub
js
pop
inc
out
in
sbb
jae
lds
aas
sahf
pop
cmp
mov
xor
mov
xor
sti
aaa
xchg
xor
push
jecxz
and
dec
push
fmuls
mov
sti
cmp
out
push
jmp
sub
sarb
hlt
out
stos
jg
cmovg
cmpsb
push
shll
fldenv
or
scas
repz
add
xor
movsb
cmp
xchg
sbb
xlat
xchg
inc
jne
int
pushf
in
outsb
fildll
cli
sub
fsubl
leave
xchg
imul
cwtl
cmp
mov
sti
and
xchg
adc
rclb
push
mov
fcmovnbe
repz
dec
mov
cmp
fldt
jl
pop
mov
inc
mov
cmp
cmp
inc
out
test
fwait
dec
or
fstl
out
aam
movsl
push
push
xchg
sahf
inc
pop
and
loope
push
out
aam
adc
mov
jmp
inc
mov
dec
push
pop
daa
sbb
ljmp
cltd
xchg
push
cmp
xlat
jnp
hlt
or
into
jge
mov
aas
sub
push
jmp
cmp
adc
dec
inc
ret
inc
iret
cld
clc
xor
xchg
inc
notl
popa
sbb
fisttpl
cwtl
lret
lret
or
sub
or
out
inc
pop
sti
cs
das
xor
sub
push
mov
aaa
loopne
jge
or
jmp
mov
xor
popl
pop
adc
jp
rol
out
repz
dec
or
pop
adc
push
add
faddl
xchg
fcomps
into
aam
jecxz
in
pop
pop
icebp
rolb
loope
mov
push
int3
push
xchg
scas
arpl
repnz
in
pop
inc
sti
push
pop
lock
cmp
mov
push
dec
cmp
push
push
or
cltd
fldl
xchg
xor
pop
out
push
aaa
lret
inc
mov
push
mov
inc
push
jae
sub
and
subl
sarl
and
rcl
aaa
push
jo
jmp
cli
jne
inc
in
sbb
jecxz
jnp
sbb
hlt
fildl
out
and
movsb
cs
cwtl
test
and
jp
ljmp
push
push
into
pop
cmp
lret
push
inc
sub
sbb
fs
icebp
dec
mov
loope
fcmovnbe
clc
ss
add
jmp
push
sti
adc
xchg
mov
mov
jecxz
dec
int
pop
pop
ret
cmp
lret
dec
and
out
fxtract
pop
mov
fcmovnbe
loope
mov
xchg
call
sub
fwait
iret
dec
cmp
ds
push
add
pop
xor
cmp
push
stc
mov
inc
sarl
sbb
test
arpl
clc
pop
xchg
xor
sarl
jmp
test
aad
mov
sbb
mov
dec
mov
xchg
es
inc
mov
sub
dec
in
ljmp
xchg
mov
cmpsb
push
jg
push
fldt
lcall
and
mov
pop
xchg
push
cmp
sbb
roll
aaa
xchg
fwait
hlt
jbe
fbld
loope
jae
push
sti
imul
sbb
cmp
mul
jnp
sbb
and
out
ljmp
or
aas
ljmp
adc
sbbb
xor
cmp
mull
lock
push
in
lock
stc
jecxz
jecxz
sti
pop
lods
inc
inc
imul
pop
dec
add
es
jbe
enter
xchg
fbstp
hlt
jp
cmp
mov
cmp
arpl
and
daa
ss
incl
pop
stos
xchg
sub
inc
pop
pop
push
dec
push
push
out
test
xchg
sub
out
and
movsl
ljmp
es
xchg
push
fwait
addr16
out
outsl
imulb
inc
in
daa
jecxz
out
inc
out
or
cmp
mov
xchg
sbb
ss
sti
ret
xlat
mov
test
iret
mov
push
aam
or
fsubr
int3
mov
in
cwtl
and
sbb
sbb
cmpsl
push
dec
fs
pop
jecxz
addr16
mov
daa
mov
pop
push
rolb
shll
arpl
lret
aaa
dec
cmp
das
or
inc
pop
jnp
pop
sbb
bound
loopne
xor
shlb
dec
jg
hlt
push
cmp
into
bound
test
jge
fcomp
pop
jmp
dec
mov
mov
sub
outsb
inc
out
roll
out
sbb
mov
xchg
add
fwait
bound
out
mov
or
push
xor
fldcw
in
popa
push
push
xchg
nop
out
repz
ljmp
pop
rcrb
cmp
out
ss
movsl
inc
mov
dec
repz
jmp
orl
mov
pop
xor
pushf
imul
sub
cli
lea
add
jmp
cmp
sbb
rcr
and
xor
jmp
inc
ljmp
pop
out
cmp
dec
inc
jmp
repz
call
jnp
xchg
mov
pop
ret
repz
sbb
sub
aad
movd
adc
lret
inc
movsb
shrl
inc
mov
pop
inc
sbb
pop
out
int
rcl
bts
insb
insl
rcrb
out
adc
fisttpl
out
lret
sub
mov
and
repz
daa
sbbl
aas
adcb
inc
out
jno
jae
leave
xchg
cwtl
imulb
lods
fistpl
and
mov
pop
sbb
imul
stos
andb
fstpt
fisttpl
pusha
xor
or
jl
adc
cmp
xor
inc
jo
inc
cmp
inc
fsubrl
nop
mov
je
xlat
iret
cwtl
lret
lahf
lods
fcomps
push
enter
jbe
or
aaa
imul
mov
push
or
dec
mov
stc
xchg
and
ljmp
in
sbb
sbb
inc
push
xor
stos
dec
sbb
lcall
arpl
jb
sti
sbb
imulb
jg
mov
mov
pop
inc
adc
fstp
xchg
sub
jge
xchg
mov
pop
pop
mov
sub
enter
fcomi
pop
xchg
fistl
test
imul
inc
fwait
sub
and
imul
mov
cmp
cmpsl
xchg
push
repz
xchg
cmpb
pop
stos
pop
out
negb
aad
fcmovnbe
pop
or
dec
lret
outsl
pop
addr16
and
push
and
mov
jo
into
jmp
lret
mov
gs
sbb
fs
sub
add
add
mov
pop
in
loop
lret
and
xor
lock
hlt
sub
inc
and
popl
repnz
enter
fisttpl
push
cltd
push
es
push
pop
mov
pop
sub
xchg
outsb
xor
dec
fistpll
pop
fbld
xor
lret
xchg
jecxz
xchg
hlt
adc
pop
int3
xchg
cmp
fistpll
sbb
cmp
enter
sub
jmp
lret
pop
stos
mov
sbb
hlt
lahf
adc
out
mov
pop
imul
push
sub
pop
out
outsl
xor
cmp
and
adc
fildl
sub
mov
jmp
mov
subb
adcb
inc
sub
push
inc
repz
push
adc
jae
sub
sahf
sub
mov
sub
push
cmc
clc
inc
sti
icebp
mov
cmp
sub
add
jae
mov
enter
das
pop
adc
mov
ljmp
xor
out
push
mul
sbb
push
inc
pop
mov
jmp
mov
dec
out
negb
pop
cltd
push
jae
mov
push
jecxz
sbb
xor
jns
rcrl
je
sub
mov
rorl
xchg
mov
jnp
daa
and
sub
das
outsl
aas
dec
sub
mov
shrl
xchg
in
jp
mov
mov
mov
mov
nop
cmp
insl
push
sti
daa
fisttps
pop
popa
adc
mov
mov
out
fisttpl
out
push
inc
pop
lock
pop
ficomps
aas
pop
dec
imul
push
cmp
sub
and
push
sbb
jecxz
test
int
sbb
dec
out
out
dec
xchg
in
or
pop
int3
jp
addr16
jle
movsb
scas
pop
mov
and
and
lret
lods
mov
xlat
mov
lret
shrb
push
mov
sub
pop
and
lea
popl
push
sbb
loopne
mov
clc
inc
pop
in
imul
testl
fists
inc
cmp
mov
push
cmp
inc
ljmp
scas
mov
mov
les
rorb
icebp
jecxz
push
lock
fwait
ds
stos
aaa
repz
inc
add
lock
or
sub
xchg
lods
sbb
sbb
xor
rcll
jmp
jmp
insl
sti
repz
outsb
fistps
jge
pop
cmp
xchg
ret
rorb
rolb
into
ret
outsl
add
leave
push
arpl
test
lods
pop
xlat
cwtl
scas
sbb
xchg
fcoml
fimuls
jecxz
jle
dec
out
inc
divb
xor
adc
call
fwait
xor
xchg
dec
aad
mov
cwtl
jecxz
fucomi
push
inc
xchg
push
lret
cmp
mov
pop
sub
dec
mov
cmp
sbb
jl
pop
push
and
xor
ja
pop
mov
mov
pop
dec
mov
or
mov
mov
inc
repz
shrl
and
xchg
mov
jecxz
xor
cmp
push
notb
cli
call
xchg
mov
and
sub
jns
cmc
jo
mov
inc
inc
xchg
enter
insb
jmp
fucom
pop
negb
cld
in
fmulp
fildll
fists
out
in
ficoml
clc
mov
sahf
dec
outsl
repnz
stos
sbb
sbb
cmc
mov
ss
into
or
xchg
fldt
jecxz
fisttpl
push
frstor
mov
pop
dec
scas
and
orl
dec
lock
inc
jne
addr16
ret
xchg
push
xor
aad
push
pop
or
sub
into
push
push
stos
cwtl
or
sbbl
fistps
fisubrs
ret
aam
mov
pop
aad
sbb
psubusb
pop
mov
jns
packsswb
ret
mov
shlb
inc
test
les
dec
mov
push
in
fimuls
jb
in
add
pop
sbb
imul
sub
pop
xor
cmpsl
xlat
mov
daa
cmp
adc
pop
movsl
orl
es
jecxz
test
rcr
stos
rcrl
outsl
inc
repnz
cmp
add
dec
daa
mov
adc
bswap
cs
mov
pop
jecxz
imul
imul
in
and
sbb
inc
pop
stos
not
out
das
daa
test
mov
push
int3
hlt
in
enter
out
cmp
jnp
push
pop
inc
mov
mov
arpl
lds
push
dec
ret
xchg
out
into
incl
ss
dec
hlt
mov
test
outsl
and
adc
loop
movsl
mov
in
fcmovnu
jne
fldt
push
icebp
hlt
pop
pusha
fsubl
lea
xchg
fwait
or
daa
mov
or
fisttpl
inc
xor
jns
enter
xlat
test
jp
aas
ss
pop
dec
out
push
enter
jmp
mov
xchg
ret
iret
in
pop
mov
es
or
and
cwtl
loopne
stos
push
dec
jecxz
pop
scas
mov
sub
out
mov
xor
jmp
aas
in
add
jne
fwait
rcr
and
or
or
push
pop
push
xchg
dec
aas
data16
cmp
ds
adc
loop
aad
mov
and
sbb
scas
insb
out
sarl
pop
xchg
push
sbb
lods
ret
outsb
and
jno
jnp
jo
sub
arpl
lahf
iret
jle
test
cmp
jne
inc
out
fisttpl
fcomip
in
push
insl
jno
jmp
icebp
mov
stc
add
scas
aam
test
divl
xor
push
dec
push
pop
or
testb
xchg
aas
stos
js
out
cmc
add
sub
daa
add
aas
xor
adc
jae
xor
aas
fldt
out
inc
xchg
movsl
pop
repz
cmp
cmpsl
xchg
es
inc
bound
fistl
or
pop
lock
ja
inc
aam
cmp
sarl
mov
cmp
xlat
jae
adc
cltd
sub
fisttpl
mov
push
out
andl
aaa
into
jl
mov
not
and
sbb
or
fs
mov
cmc
xlat
orb
dec
pop
out
push
fwait
xor
iret
dec
xchg
dec
repz
dec
mov
cmp
xchg
sub
popf
imulb
into
jp
pop
arpl
pop
addr16
rorb
xchg
repz
lret
jp
or
pop
dec
fistpll
out
es
xchg
add
pop
pop
inc
lods
leave
pop
mov
cmp
jo
push
push
dec
adc
es
addr16
jle
rolb
into
outsl
jnp
pop
sti
inc
in
mov
fwait
stos
sbbl
aas
and
fmuls
or
jp
push
repz
enter
test
in
pop
fistpll
cld
fmulp
out
cmc
sbb
dec
inc
jp
jmp
dec
out
sbb
cmp
cmc
mov
jecxz
mov
mov
push
aas
popf
out
inc
stc
hlt
jmp
test
add
add
fistpl
adc
ja
xor
sbb
cmp
sbb
cmp
pop
stos
jp
adc
mov
jmp
fildl
jbe
pop
aas
mov
repz
or
shr
adc
outsb
sti
inc
stc
fwait
cmp
and
or
daa
out
xor
push
or
xor
lcall
mov
or
pop
outsb
pop
pop
push
jae
push
jle
mov
mov
add
cmp
arpl
repnz
aad
and
inc
dec
fisttpl
idivl
fstpt
pop
inc
sti
bound
ds
pushf
stos
sbb
fistpll
dec
or
and
sbb
xchg
sbb
out
shll
fisttps
out
aad
out
pop
xor
stos
jmp
mov
fldt
inc
adc
into
sbb
mov
jge
aad
mov
outsb
dec
xchg
or
mov
sub
arpl
insb
sbb
fcmovnu
xchg
sub
cmc
lds
inc
and
mov
xchg
jle
sbb
mov
out
inc
out
lret
js
ret
adc
call
inc
dec
jnp
dec
pop
test
xor
jae
cmp
add
movsb
push
jo
or
adc
mov
sti
push
cmpsl
aad
fistl
testl
sbb
sub
cmp
or
out
xchg
sub
hlt
inc
icebp
mov
sti
pop
xor
into
push
xor
fwait
jg
jp
fistl
fsts
rcr
or
adc
repnz
sub
sub
movsb
cwtl
jmp
adc
xor
stos
int3
cs
fcmovnbe
lea
jo
jnp
jae
fstpt
test
xlat
enter
cwtl
addl
aas
sahf
daa
inc
outsl
cli
and
push
dec
test
pop
arpl
and
inc
mov
add
xor
lret
and
daa
cmp
daa
int3
sar
int
mov
dec
xorl
push
outsl
or
jmp
or
pushf
iret
cmp
or
dec
lret
xlat
movsl
ss
out
movsb
jl
cmpsl
fildll
les
andl
mov
fnstsw
dec
push
popa
fcmovnbe
xchg
aas
jp
out
jbe
add
icebp
test
inc
dec
and
idivl
fs
popa
fisttpl
push
cmp
aas
cmp
cmp
adc
mov
inc
mov
jecxz
jle
outsb
aam
fstpt
or
jecxz
cmp
or
pop
mov
bound
fs
bound
sbb
dec
out
stos
pop
pop
mov
fistpl
out
jp
mov
cmpsl
lret
sbb
fcmovne
jnp
push
scas
push
das
pusha
addr16
xor
adc
xor
dec
mov
mov
shll
fisubrl
psubusw
cmp
lcall
pop
cmpsl
dec
xor
jl
mov
call
add
xor
inc
shrb
sarl
lret
or
out
insl
cmp
ret
out
xor
arpl
iret
scas
cltd
pop
fisttps
in
mov
xchg
into
stc
out
jecxz
and
mov
jecxz
or
sbb
sub
outsl
add
or
mov
xlat
add
rcrl
pop
fistps
out
pop
adc
mov
ds
pop
push
adc
arpl
ret
jnp
out
jmp
and
and
clc
test
jnp
hlt
out
ret
pushf
in
btcl
jecxz
cmp
ds
cmpsl
push
pop
pop
in
ljmp
clc
sub
rcrb
add
ds
pop
push
clc
sbb
mov
cmp
sbb
cwtl
and
and
xor
inc
xchg
mov
into
fistpl
cmp
xchg
cmp
fsubrl
sub
cld
pop
das
fisttpl
xor
dec
sub
out
pop
imul
daa
pop
movsl
test
filds
sub
or
fildll
rcl
mov
in
xchg
xor
mov
jne
push
dec
out
pop
and
xchg
dec
pop
adc
xchg
mov
mov
pop
popa
fildl
mov
negb
dec
jnp
xor
mov
jl
push
xchg
or
pop
sub
stos
arpl
rcrb
mov
fldt
in
jmp
xchg
sub
hlt
out
icebp
lods
out
into
pop
xchg
cmp
ljmp
jecxz
sbb
fidivrl
pop
mov
mov
adc
addr16
and
jecxz
fcmovne
fpatan
mov
cli
fildl
mov
push
jecxz
sub
jecxz
out
add
or
cmp
push
inc
dec
out
push
vmread
mov
icebp
movsl
sub
pop
cmpsl
sbb
fwait
sbb
test
pusha
rcrl
cli
jnp
inc
stos
enter
dec
fistpl
shlb
xchg
icebp
push
cmp
inc
adc
fistl
nop
fs
pop
push
xchg
cmpl
movsb
push
fcompl
dec
ljmp
mov
roll
daa
repnz
inc
add
fists
rcll
xchg
daa
out
and
fisttpl
adc
mov
xchg
xor
js
imul
cmpsl
aas
xchg
sbb
jp
xchg
sub
out
notl
push
sub
call
fildl
cmp
jg
jmp
xlat
jp
or
xchg
and
pop
xchg
sbb
mov
cmp
xchg
push
stos
or
xchg
push
sti
movsb
mov
push
jns
push
out
jmp
or
cmp
out
and
mov
add
pop
sti
shufps
insl
enter
dec
fildl
mov
sub
fildl
mov
shrb
xor
pop
addb
filds
sbbb
cmp
repz
cmp
push
and
rsm
cmp
jge
mov
enter
xor
repnz
sbb
fistl
mov
push
cli
push
dec
mov
or
and
jb
inc
sbb
jbe
pop
sub
xor
int
fwait
xor
test
mov
sub
push
fs
and
jmp
sub
sahf
fs
dec
mov
mov
mov
mov
cmp
lret
out
jbe
cmc
in
mov
out
popa
subl
pop
lahf
test
inc
iret
fistps
repz
and
call
repz
je
aaa
les
imul
sub
ror
hlt
and
xchg
and
push
dec
jecxz
out
fldt
sub
iret
movsb
daa
xchg
inc
jecxz
xchg
leave
pop
icebp
je
adc
jle
mov
movsb
and
mov
imul
and
pop
dec
out
mov
push
jnp
sbb
ds
aaa
cmp
push
cmc
push
cmp
out
out
pop
jmp
in
xchg
mul
sbb
xor
or
jl
inc
cmp
dec
dec
jae
push
inc
out
mov
hlt
dec
jecxz
js
push
sub
in
ja
mov
addr16
cmp
push
mov
or
pop
in
in
cmp
jb
fists
ja
pop
mov
fs
jae
jae
mov
inc
subl
xor
das
test
jmp
movsb
aas
fsubrs
repz
fninit
mov
adc
in
pusha
pusha
dec
repz
pop
movsb
mov
arpl
aas
call
ret
ja
arpl
repz
cmp
mov
cmp
inc
mov
addr16
aas
jmp
inc
pop
jns
xor
and
mov
mov
aaa
inc
cs
fists
das
fcmovnu
jge
pop
pop
adc
and
movsb
jae
hlt
lcall
enter
push
pop
outsl
inc
sbb
outsb
cmp
xlat
fdivrs
dec
sti
xchg
jnp
lret
rcrb
mov
pop
pop
pop
repnz
lds
sub
dec
xor
fstps
fcomi
sbb
into
sbb
gs
out
fcmovnbe
pusha
mov
or
sub
xor
push
pop
cmpxchg
inc
cmpsl
cmp
nop
out
out
mov
xor
sbb
sahf
call
fbld
dec
xchg
pop
mov
xor
and
xchg
cmp
or
pop
fstpt
stos
jnp
push
lea
int3
orl
pop
lret
lds
inc
aad
mov
sbb
jge
and
scas
fpatan
xor
lcall
aam
sbb
mov
mov
fbstp
icebp
push
sub
dec
inc
fldl
fdivp
jnp
loopne
push
das
add
out
arpl
xor
inc
in
cld
inc
xor
ret
sub
mov
sbb
adc
ds
rol
daa
and
jecxz
and
push
xor
int3
cltd
es
add
mov
int3
sub
and
push
jg
push
inc
pop
fcmovnb
ret
push
and
xlat
xchg
outsb
jge
jb
add
dec
adc
jb
stos
jne
mov
jnp
es
dec
fcmovnbe
fpatan
add
push
cwtl
jns
cmp
or
lock
in
dec
fstpt
sti
hlt
js
clc
in
andb
dec
push
push
aas
cmp
or
cmp
in
sti
inc
clc
aam
hlt
testl
cmp
lcall
pop
or
and
jnp
sbb
jbe
or
mov
shrl
push
inc
repz
xchg
mov
dec
cltd
cmp
inc
fldt
test
sbb
fcmovnu
xchg
jnp
fildl
sbb
in
sub
sub
fildll
dec
into
cwtl
stc
cmp
push
testl
pop
fmuls
fimull
stos
xchg
imul
sub
inc
mov
rcll
popl
xchg
repnz
std
xor
lea
fcoms
jp
pop
xchg
lcall
add
lea
scas
and
mov
xor
ja
sub
dec
sti
fsubrs
sbb
rclb
lret
int3
cltd
mov
or
dec
cs
addr16
cmp
cmp
sbb
fcomip
fcomip
in
fldt
repz
xadd
mov
adc
dec
pop
scas
sbb
cmp
sbb
lahf
enter
fistpl
in
sub
out
repz
shrl
outsl
or
out
fsubr
inc
das
sti
addb
out
out
popw
cmp
inc
dec
into
cs
add
adc
cmp
cltd
inc
mov
js
dec
clc
or
repz
aas
testl
pop
addr16
pop
or
pop
dec
test
mov
xor
xor
mov
into
cwtl
fistpl
hlt
in
pop
mov
fisttpl
cli
les
or
inc
mov
test
imul
cmp
out
xchg
inc
inc
jns
call
aam
xor
sbb
sub
and
leave
and
and
dec
or
fmuls
mov
cltd
test
push
out
shlb
pop
emms
jmp
push
out
jl
sub
arpl
repz
xchg
inc
ret
jg
and
mov
loopne
hlt
test
enter
fildl
mov
mov
push
sub
xorb
jl
lret
pop
or
lret
insl
dec
mov
xor
aaa
js
mov
xchg
sub
xchg
fdivr
xchg
sub
not
hlt
out
out
xchg
sub
push
mov
inc
mov
dec
xchg
inc
mov
jo
mul
enter
or
push
icebp
sti
rorl
add
stos
jns
stos
and
pushf
mov
insl
sahf
push
into
das
sbb
fistpl
in
inc
out
sub
ljmp
pop
or
shl
push
lock
inc
in
fisttpll
jg
aas
xor
pop
in
inc
dec
pop
mov
xchg
pop
rorb
push
push
neg
xlat
ja
jecxz
clc
lods
pop
fimull
jge
inc
arpl
repz
fcomi
std
xchg
aaa
out
testb
cs
in
orb
lods
or
rcrl
insb
daa
out
pop
push
sbb
imul
pop
push
xchg
fisttpl
rorl
and
mov
xchg
incl
push
inc
jecxz
cmp
into
jle
dec
nop
sbb
repz
aad
cmp
je
fildll
jb
ljmp
pop
jnp
mov
dec
arpl
repnz
mov
xchg
aad
fcmovbe
pop
push
sbb
mov
negb
xchg
mov
divb
pop
test
gs
cmpsl
pop
sub
inc
aaa
mov
dec
test
cmp
loope
pop
ret
lods
leave
ds
cmp
lret
xchg
inc
and
scas
dec
pop
adc
into
sahf
loopne
mov
fildl
mov
test
in
testl
ret
shl
jno
lret
repz
psrld
imul
imul
mov
in
jns
pop
addr16
sti
sub
shlb
and
in
fbld
dec
fildl
in
js
fs
mov
inc
cmp
jecxz
lcall
cmp
jl
cmp
sub
in
add
stc
repnz
inc
insl
out
testl
add
stos
clc
notb
dec
sbb
add
repnz
add
fistl
divb
pop
add
shll
and
push
sbb
fisttpl
pop
xchg
cmp
dec
nop
cmp
pop
mov
rcll
cmp
sub
or
sbb
out
xchg
and
and
mov
mov
jns
sub
sub
lods
mov
das
push
pop
sbb
in
inc
cmc
jb
cmp
jmp
cmp
add
lret
inc
xor
insb
jmp
les
movl
xchg
mov
xchg
push
iret
jp
sub
out
sbb
cmp
sub
ret
fcmovne
dec
push
lret
jo
cmp
mov
cmpsb
sub
mov
adc
sbb
jae
or
ljmp
fcmovnbe
pop
aam
in
fisubl
lock
mov
inc
clc
or
add
div
ret
popa
pop
test
or
fldl
call
push
jl
push
inc
repnz
ficoml
and
loope
pop
mov
mov
fcmovnbe
in
push
repz
ds
fcmovne
in
adc
inc
daa
movsb
aas
fcmovnu
in
divl
outsb
sbb
das
fisttpl
jmp
hlt
cmp
xchg
sub
jae
pop
or
xor
sbb
je
jae
mov
xchg
sbb
jne
fstpt
cld
and
lret
xor
mov
out
cli
push
call
fbstp
xchg
sbb
int
push
pop
fs
xor
scas
stos
arpl
repz
imul
ret
xchg
scas
pop
mov
pop
loopne
inc
fidivrl
inc
inc
cltd
mov
hlt
cmpsl
out
stos
lret
test
lcall
imul
repnz
fwait
stos
outsb
jmp
or
aaa
dec
stos
sbb
jmp
sub
dec
ljmp
or
out
push
in
mov
pop
imul
das
rorb
rcl
shr
jno
push
sbb
sub
adc
xchg
xor
repz
mov
fisttpl
or
leave
pop
test
or
cmp
out
sbb
inc
inc
jnp
push
inc
and
repz
cmp
pushf
icebp
je
lret
out
push
mov
sub
jg
cmp
addr16
in
hlt
movsb
fbld
aaa
loopne
jmp
jae
ss
ror
inc
or
lahf
repz
in
cmc
or
out
sbb
daa
cmpsl
test
roll
enter
jg
sti
jmp
fwait
pop
imul
pop
rcrl
xor
jmp
lea
sub
xor
xchg
fbld
mov
daa
mov
dec
fbld
cmp
xlat
or
pop
lahf
or
xchg
lods
popa
jl
pop
mull
sti
inc
mov
jmp
lea
stc
into
xor
fistpl
xchg
pop
cmpsl
push
ljmp
daa
fcmovne
aas
and
insl
sbb
outsl
xchg
in
mov
sbb
pop
mov
cltd
xchg
nop
incl
fbstp
jge
shll
rcr
lret
pinsrw
cmp
daa
xor
mov
or
push
arpl
jb
pusha
sbb
repz
cld
sub
int
push
cmp
cwtl
in
pushl
adc
movsb
mov
add
in
ficoml
cmpsb
adc
pop
loopne
jecxz
cmp
cmp
inc
xchg
push
jmp
cmp
sti
dec
inc
icebp
in
xor
cmp
pushl
jl
ds
loopne
and
dec
jae
lret
mov
ljmp
repnz
sub
icebp
lahf
cwtl
pop
notl
sub
imul
or
popa
sbb
aas
sub
push
push
xchg
pop
jg
sbb
cmp
and
fistpl
imul
jae
push
fldt
pop
sbb
add
roll
push
jecxz
cmp
rcl
xchg
xor
sahf
into
pop
mov
fldcw
es
xchg
in
jb
and
jmp
clc
dec
add
or
and
and
inc
push
icebp
loope
cmpsl
inc
gs
loopne
ja
aaa
das
fcmovnbe
in
loope
push
inc
sbb
movsl
sub
add
dec
or
fildll
out
jecxz
xor
xor
sbb
or
andl
xchg
out
inc
aas
sbb
cmp
cmpsb
sub
into
inc
mov
ds
mov
jmp
aam
pop
cs
leave
je
jp
fbld
outsl
pop
inc
xor
mov
sub
fmuls
dec
fdivrs
out
into
jo
lret
inc
pop
fsubr
out
ljmp
imul
stos
inc
jge
out
adc
xlat
inc
xchg
dec
cwtl
cmp
push
pop
jmp
sbb
pop
inc
ljmp
inc
inc
dec
mov
fists
stos
clc
push
add
or
push
mov
stc
mov
jl
mov
mov
ljmp
cmp
cwtl
stc
push
movl
sub
add
addr16
ljmp
push
in
imul
push
jae
out
js
dec
rolb
das
mov
cmpsl
enter
fsubs
cmp
test
int3
cmpb
out
scas
dec
cmc
or
lods
into
xlat
pop
rcrb
shrb
sub
lods
mov
sbbb
cmc
add
mov
xor
mov
hlt
sti
push
popf
and
lcall
xchg
mov
repz
ss
adc
xchg
js
repz
insb
inc
jae
les
add
xor
sbb
push
adc
jle
iret
jnp
sarb
ja
dec
enter
and
mov
cmp
ret
mov
inc
xchg
ljmp
fdivs
dec
mov
sti
jns
inc
jne
daa
push
push
cmp
xchg
fcmovnbe
enter
add
push
cmc
jmp
xchg
push
icebp
je
sbb
repz
in
adc
push
mov
adc
lock
std
scas
das
xor
fsubl
push
cmp
pop
sahf
and
lret
mov
pop
push
scas
jmp
test
scas
pop
lock
cmp
and
inc
xor
ljmp
push
adc
cmp
add
mov
push
out
imul
inc
xchg
into
ffreep
push
xorl
out
das
jmp
imul
lahf
sub
repz
sbb
xor
pop
mov
mov
jmp
pop
enter
out
in
push
ret
jmp
xchg
cmp
sbb
fisttpl
fcmovnb
iret
cmp
or
pop
cmpsl
jnp
fs
xor
xchg
fstp
jno
mov
dec
xor
std
fistpl
rol
inc
aas
adc
repnz
cmp
inc
jp
and
xor
cmp
jnp
pop
add
xchg
cmp
fwait
xchg
jmp
pop
sbb
xchg
shll
fldt
dec
sub
fists
mov
xor
adc
or
jecxz
or
cmp
fdivs
lret
inc
mov
xor
arpl
lret
push
or
fnstenv
dec
imul
icebp
mov
and
xlat
xchg
pop
scas
fcmovnu
xor
sbbb
dec
scas
out
orps
mov
das
in
jne
pop
mov
out
xchg
pushl
dec
mulb
xor
push
out
adc
out
or
jl
xor
cwtl
mov
repz
lret
dec
cmpl
mov
or
or
fisubrs
pop
sbb
out
sbb
jmp
aas
in
cwtl
subb
out
sbb
ja
xlat
dec
test
xor
or
push
cmp
xchg
lods
fisubrs
stos
sub
fcmovnbe
xchg
iret
pop
out
mov
push
fnsetpm(287
jnp
imul
push
mov
jae
popw
les
push
inc
insl
sbb
jp
fcmovne
jg
fistpl
jno
cmp
inc
movsl
pop
pop
sub
fcmovne
push
fldt
pop
fcmovnb
sbb
mov
cmp
pop
jg
insb
out
das
fstpt
or
les
inc
outsl
push
in
into
fisubrs
mov
cmpsl
jg
sbb
das
cltd
loope
mov
inc
and
lods
insl
dec
mov
inc
lea
clc
jecxz
mov
mov
mov
icebp
or
rcr
jge
adc
stos
pop
adc
cmp
and
into
mov
cmp
xchg
in
lahf
jo
scas
pop
xlat
aad
dec
mov
dec
jmp
aas
sub
pop
dec
sbb
pop
push
jp
fildl
fistl
jne
sbb
shll
mov
fildl
jp
and
lahf
sti
or
lcall
inc
inc
or
dec
pop
xchg
subb
jg
cmp
aaa
and
es
aaa
movl
cs
push
daa
fistpll
mov
out
dec
inc
fists
mov
cmc
cmpsb
out
cmp
add
lahf
jp
ja
xchg
pop
dec
pusha
xchg
aas
ds
sti
push
mov
out
inc
jmp
mov
jns
and
dec
lods
fstpt
jmp
push
fisttpl
mov
aas
leave
and
orb
jne
fistpll
rorb
rol
sub
push
jle
fcmovne
insl
or
mov
inc
in
xchg
push
mov
out
mov
subl
mov
push
hlt
lahf
or
jl
sub
cmp
or
dec
scas
fcmovnbe
pop
inc
insb
inc
idiv
adc
and
xchg
xchg
push
jl
data16
pop
jne
adc
mov
inc
testb
or
pop
mov
xor
orb
xchg
sbb
sub
push
or
mov
or
jg
int3
xor
scas
fcmovne
dec
in
fcmovnb
rol
iret
adc
sub
fisttpl
sub
mov
and
fstpt
mov
lret
sub
out
mov
out
into
xchg
add
jg
mov
negb
sub
roll
int3
mov
add
imull
dec
or
push
imul
fwait
mov
jp
push
dec
push
mov
ljmp
ja
es
xchg
cmp
sbb
jecxz
test
pop
lahf
dec
out
add
cmpl
stc
jecxz
dec
fwait
dec
push
scas
or
dec
mov
dec
cmp
stos
xchg
lcall
inc
aas
dec
sub
addl
inc
ret
cmc
sbb
lahf
shrl
aaa
jae
fistl
ja
jmp
sarb
jb
fldt
jnp
dec
fcmovnu
nop
aaa
and
push
sti
adcl
roll
movsb
test
cltd
daa
lds
add
jnp
dec
repnz
outsl
int
sub
add
push
jae
mov
jg
pop
dec
pop
xchg
cmp
js
push
fwait
imul
enter
xlat
xor
movsb
jp
mov
out
in
arpl
and
jecxz
sbb
sub
fcmovnb
mov
mov
inc
inc
cmovnp
out
mov
and
js
out
jne
push
or
and
sarb
add
inc
xchg
sub
jne
mov
cmp
icebp
mov
cmp
out
dec
cli
and
negl
xchg
push
push
pop
fnsave
aas
inc
shlb
shr
lahf
cmp
pop
loop
sub
jecxz
and
stos
sbb
pop
mov
mov
aas
icebp
cmc
outsl
out
mov
and
sbb
jecxz
xchg
sahf
fisttpl
pop
xchg
inc
xlat
dec
inc
fneni(8087
sub
loope
aas
add
mov
mov
lds
adc
shll
mov
and
clc
fcomp
sti
pop
add
das
js
out
dec
inc
loop
sub
push
xchg
sarl
rol
sbb
retw
js
popf
add
ds
jg
js
and
std
xor
mov
xchg
pop
push
enter
roll
mov
sub
lds
mov
pop
push
fcmovnb
and
xor
dec
dec
push
repz
repnz
pusha
pop
ja
das
fcmovnu
add
das
in
out
aaa
daa
out
daa
mov
push
inc
xor
jns
inc
fisttpl
stos
outsl
repz
ret
pop
lret
aad
fadd
rolb
mov
pushf
dec
lock
lahf
iret
lahf
fninit
int
dec
lcall
dec
mov
cmp
leave
dec
inc
fwait
mov
push
rcrl
sbb
ja
jnp
pop
mov
dec
insl
scas
repz
fisubrs
aaa
dec
or
les
in
ret
cwtl
fsubs
jmp
ss
sahf
in
inc
and
dec
negl
push
out
or
incl
pop
sbb
call
dec
cmp
pop
mov
sbb
mov
repz
repz
cmp
sub
jmp
pop
pop
sahf
dec
ljmp
sbb
inc
daa
sbb
sub
into
aam
xor
push
movl
aas
std
dec
inc
mov
pop
push
adc
das
xchg
iret
dec
or
rclb
fildl
lahf
cmp
outsb
cltd
and
aad
pop
mov
out
mov
jno
sti
ret
outsl
pop
repz
sub
repz
jns
in
lret
xchg
or
stos
xchg
insl
fldt
jecxz
jne
sub
testl
fcmovnbe
inc
faddl
fsubr
loope
outsb
xor
cmp
fisubl
fiadds
push
sbb
jp
fisttpl
pusha
jl
jb
clc
loop
testb
pushf
in
adc
xor
pop
sbb
xor
jecxz
xchg
xor
out
test
xchg
loope
pop
pop
mov
int3
ljmp
das
dec
fcmovnb
ret
lods
enter
lret
mov
pushf
xor
dec
repz
cmp
pop
es
fcmovnb
jmp
xor
shrl
push
setp
push
sbb
arpl
ficompl
mov
or
cmp
inc
inc
jle
and
cmp
sbb
push
inc
ljmp
dec
pop
xor
push
pop
mov
or
and
cld
inc
dec
or
push
wrmsr
sub
jecxz
mov
fcmovbe
out
cwtl
dec
pop
push
test
mov
inc
and
inc
out
aas
cmp
ret
cwtl
enter
xchg
sti
and
bnd
jecxz
jecxz
cmpsl
dec
das
mov
fsts
or
dec
sbb
rcl
popa
ss
push
aas
in
test
xchg
sbb
mov
outsl
xchg
sbb
mov
fcmovne
jno
fstpt
cmp
insl
push
inc
mov
andl
arpl
mov
fdivrs
cmp
aaa
jno
in
sahf
dec
cltd
jae
mov
outsl
shrl
out
fildl
sbb
out
out
inc
out
sbb
sub
mov
inc
arpl
and
in
xchg
jecxz
pop
jecxz
inc
push
jns
repz
outsb
inc
dec
or
xchg
mov
xor
aad
push
iret
xchg
push
sub
sub
into
pop
dec
mov
jecxz
fildl
dec
stc
jecxz
add
mov
and
jmp
pop
and
aam
rcrb
sbb
jbe
sbb
and
fistpl
fneni(8087
cmovae
sub
pushf
out
and
inc
pop
out
cld
pop
dec
dec
xchg
and
sub
xchg
sbb
and
sbb
push
jl
pop
insb
in
xor
scas
icebp
fistpll
insb
or
pop
and
stos
ds
jmp
lret
sbb
das
adc
xor
pop
cmp
pop
sbb
in
push
pop
pop
imul
and
inc
jnp
rcrl
mov
dec
faddl
lcall
push
hlt
aad
aaa
shrl
cwtl
out
ss
pop
loope
pop
push
inc
out
dec
inc
stos
and
outsl
jl
imul
popf
xchg
pop
out
repz
sarl
mov
jne
xchg
inc
testl
mulb
shll
cmp
rorl
cli
sub
inc
or
int
fwait
dec
call
inc
pop
jg
push
sub
scas
es
outsb
in
pop
mov
insb
fisttpl
imul
out
xor
imul
pop
jae
adc
jbe
sub
mov
imul
sti
cmp
rcll
punpckhwd
cwtl
mov
xchg
xor
jl
outsl
mov
sahf
arpl
jne
pop
repz
pop
inc
fistl
cli
out
xor
loope
cmp
insb
ja
aas
fcmovnu
lret
mov
in
cmpsl
aas
dec
lea
mov
fcmovnbe
inc
scas
add
fildll
fildll
jmp
inc
jecxz
jmp
shlb
pop
iret
xor
int3
mov
mov
jae
hlt
mov
xchg
iret
lds
ret
das
out
arpl
les
iret
add
xor
dec
push
fildl
sub
push
add
aad
sbb
loope
insb
arpl
jmp
in
cmpb
jecxz
paddsw
in
inc
lcall
sbb
cmp
jg
dec
mov
out
jns,pt
aam
jecxz
xchg
pop
testb
sbb
shlb
xor
sbb
out
jnp
pop
adc
out
inc
in
incl
sbb
xchg
sub
in
cmp
sti
dec
aas
addr16
push
push
cmp
aas
das
sbb
sbb
cltd
adc
repz
jmp
hlt
fildl
cmp
or
lar
push
jb
rsqrtps
ret
dec
dec
call
sub
cmp
in
sbb
inc
mov
rclb
inc
ja
jmp
mov
jae
mov
shll
movsb
fadds
rcrl
gs
cwtl
int3
imul
push
cmp
jmp
push
mov
test
test
and
dec
pop
or
and
pop
shrl
comiss
push
lret
out
das
sub
in
sbb
andl
inc
pop
fistl
xchg
xchg
pop
lods
je
mov
ret
mov
jnp
ja
sbb
lea
shr
and
cltd
xor
into
gs
out
rclb
lret
cltd
sti
xlat
xchg
xchg
mov
mov
sahf
pop
fbld
ficompl
lea
divb
mov
dec
or
in
loopne
pop
repnz
sbb
or
outsb
in
jo
add
mov
and
sarl
mov
mov
bswap
or
fdivrp
mov
cwtl
jae
into
pop
pop
jecxz
jbe
sbb
fincstp
rcr
or
inc
lgs
and
movsl
roll
out
sbb
out
les
or
rcrb
mov
rcl
xchg
ret
into
xor
fs
nop
or
inc
in
sub
shrb
push
cmpl
sub
das
push
inc
pop
mov
dec
fcmovnu
les
out
flds
push
in
add
dec
mov
lods
negb
out
inc
call
xor
dec
xchg
test
out
iret
and
sbb
jmp
pop
ljmp
or
push
cmp
punpcklwd
pop
pop
adc
and
push
mov
in
xor
aaa
xorb
pop
test
lock
sbb
dec
iret
push
pop
lods
cmp
test
sub
and
push
sub
jge
mov
and
inc
repz
push
push
inc
adc
icebp
jnp
dec
dec
push
adc
or
xchg
test
xchg
dec
cmc
dec
fbstp
jmp
xchg
push
sub
iret
xlat
roll
ja
cmp
pop
cmp
pop
xchg
int3
jg
in
fisttpl
and
fildl
pop
lea
mov
lcall
cmp
inc
test
daa
push
imul
pop
sbbb
push
mov
out
jmp
or
pop
adc
pop
adc
aas
fwait
les
and
jl
imul
rol
and
fdivs
movl
mov
push
push
int3
icebp
std
out
sbb
mov
jo
cmpsb
and
jecxz
fistpl
fisttps
sbb
mov
sub
gs
dec
fistpl
cmp
loope
mov
test
sti
dec
ljmp
sti
inc
cmpsl
ja
xchg
fs
fcmovnb
lahf
shrd
inc
ffree
mov
mov
sbb
cwtl
or
pop
mov
mov
xchg
jnp
aam
cmp
fcmovnb
lds
mov
mov
addr16
bound
insl
push
jecxz
daa
cmpsl
jmp
clc
out
xor
push
in
push
pop
sbb
loopne
icebp
or
repz
test
ljmp
inc
add
into
push
pop
jg
xor
dec
pop
sub
aas
in
cmp
inc
mov
mov
out
jno
stc
fistpl
push
es
fwait
lahf
mov
mov
xlat
inc
mov
sub
aad
mov
in
xor
lcall
push
cmp
movb
push
lea
cs
inc
ja
and
hlt
fldenv
ds
adc
das
push
cmp
stos
push
cmp
ret
xchg
cmp
dec
jl
sub
and
sub
sbb
mov
mov
jecxz
jnp
xchg
mov
out
xor
sub
inc
and
lahf
xchg
in
loopne
insl
ret
in
in
xchg
daa
into
cmp
scas
loope
fcmovnbe
lods
fistl
stos
and
out
cmp
pop
daa
push
sbb
pop
dec
jno
addl
scas
or
clc
daa
fistpll
xlat
add
cmpl
sarl
fisttpl
dec
mov
cmp
cmpl
adc
frstor
inc
imul
push
pop
lods
ss
ret
inc
fldt
dec
mov
xchg
aam
mov
fcompl
repz
mov
cmp
mov
repz
jno
sbb
repnz
add
cmc
jnp
fbstp
aam
or
jmp
hlt
out
mov
fcmovnb
dec
int
ffreep
and
outsl
xchg
imul
lds
pop
inc
daa
pop
or
mov
out
hlt
jnp
xchg
scas
mov
cmpsl
push
jle
or
cmp
enter
mov
pop
pop
insl
inc
jns
or
xor
icebp
stos
fistl
jecxz
inc
out
out
jp
fisubs
out
repnz
pop
aas
mov
fwait
lret
push
push
sub
loop
addb
hlt
and
inc
lock
icebp
xor
out
mov
fstpt
jmp
imul
xchg
pop
or
mov
xor
inc
call
pop
daa
push
jnp
xchg
cmp
es
cmp
xchg
jnp
repnz
outsl
dec
inc
out
push
leave
cmp
aaa
fwait
mov
das
aad
push
inc
push
fistl
ljmp
pop
or
and
sub
dec
es
push
mov
push
pop
jg
sbb
popa
xchg
sub
xchg
pop
xchg
stos
push
pusha
mov
pop
aaa
popl
pop
jb
xchg
in
pop
lock
movsl
icebp
sbb
test
lods
pop
mov
mov
ficoms
add
push
cmp
insl
inc
loop
aam
xlat
bound
sbb
jno
push
sbb
dec
add
cmc
mov
iret
filds
clc
mov
inc
pop
sbb
shl
flds
sbb
ret
fwait
jle
and
ret
jns
cld
mov
jp
sbb
mov
pop
outsb
dec
movsb
mov
imul
shrb
jae
and
push
jge
fldt
popf
dec
aad
and
and
int
adc
mov
movsl
aas
xor
pop
cmp
inc
in
fcmovnu
dec
js
jb
ja
pop
negb
jno
mov
rcrl
sti
or
xchg
dec
adc
in
shrl
xor
xor
adc
xor
mov
out
sbb
jnp
jbe
sbbl
pop
out
pop
and
fistl
jno
push
gs
and
scas
das
dec
mov
mul
lea
mov
aas
push
xchg
fistpl
adc
jnp
dec
inc
jnp
daa
dec
rcll
or
pop
push
pop
xchg
pop
fistl
out
inc
inc
neg
in
sub
add
and
scas
pop
shrl
xchg
ss
inc
jge
enter
push
cmp
and
sbb
aaa
and
stos
call
out
pusha
jge
cs
rcll
jae
inc
jmp
push
push
out
xchg
xor
das
andl
push
jmp
aas
js
dec
xorl
lahf
dec
aas
out
xor
fisttpll
aaa
and
daa
inc
jmp
test
sbb
adc
xchg
outsl
pop
negl
andl
mov
xchg
imul
iret
jle
pop
jp
xchg
adc
sbb
sub
cmp
push
push
icebp
mov
repnz
out
cmp
nop
sub
mov
jp
imul
mov
sbb
cmp
pop
mov
fcomps
pop
in
fmul
add
ds
and
popf
mov
cltd
imul
das
sarl
int
in
mov
push
pop
fistpll
movsb
imul
out
outsl
mov
pop
leave
xor
rol
adc
mov
int3
push
repz
inc
negl
xor
mov
daa
pop
jl
nop
lret
iret
jb
lret
pop
jmp
fstpt
or
mov
mov
cld
ds
inc
arpl
mov
les
pusha
xchg
int3
test
or
fwait
mov
mov
fcmovnu
repz
xchg
or
dec
stc
mov
lods
inc
ja
and
insl
cmp
jmp
aas
fnstsw
pop
and
dec
fcmovnbe
mov
cmp
out
icebp
mov
or
outsl
imul
ficompl
dec
cmp
and
pop
aaa
pop
xchg
test
xchg
iret
mov
insl
lret
and
mov
inc
cmpsl
in
xchg
int3
jmp
out
mov
adc
das
pop
orl
cwtl
ret
pop
push
pop
pop
test
dec
jmp
inc
xchg
push
sbb
jae
fwait
jno
cmp
js
dec
jecxz
inc
pop
orl
lcall
xchg
sub
dec
rcll
ds
inc
in
dec
fistl
fistl
dec
cmp
imul
mov
and
dec
lahf
add
jnp
sub
xchg
sti
pop
jns
mov
or
leave
pusha
sub
addr16
add
cmp
cmp
xchg
lahf
xchg
out
xchg
sbbl
xchg
or
pop
xchg
dec
dec
negb
ljmp
mov
test
mov
and
fwait
mov
out
push
sbb
cmp
jp
daa
sbb
pop
sub
mov
and
aas
xchg
dec
push
lea
flds
sti
jmp
out
fisttpl
pop
xor
ss
shll
inc
insb
jg
jg
stos
pop
push
jp
call
push
sub
ja
fcmovne
js
out
jae
cli
ret
adc
push
mov
inc
fisttpll
or
das
cld
fistpl
and
fistps
scas
fisubrl
aam
pop
mov
push
mov
jp
fcomi
loopne
in
cmc
repnz
js
inc
mov
inc
or
testl
xor
cmp
outsb
inc
inc
dec
pop
negb
std
or
in
dec
inc
invd
faddl
into
jg
jno
out
in
xchg
daa
je
lea
in
sbb
in
inc
dec
dec
fistpl
cmp
lock
je
in
out
fildll
jno
inc
addb
das
shrb
sbb
adcb
shl
sbb
aaa
sub
mov
push
jbe
test
sarl
push
pop
cmp
sbb
sbb
sub
das
rorl
lea
sub
jecxz
xor
pop
stos
cmp
pop
cmp
nop
sub
adc
sbb
lds
sti
xchg
mov
cmp
fninit
xor
mov
dec
push
or
ret
mov
das
mov
inc
in
hlt
cmp
sbb
cs
jmp
data16
lds
jg
pop
cli
pushf
lret
lcall
ja
subl
rolb
bound
addr16
pop
mov
sahf
imul
or
push
push
in
add
push
xchg
and
stc
pop
sbb
das
out
movsl
out
rcrb
in
repz
lock
xchg
cmpl
loope
paddq
addr16
jnp
es
aaa
adc
pop
xor
pushf
decl
out
push
mov
in
repz
xchg
push
cltd
testb
jns
or
jge
aas
cmpl
mov
aam
pop
pop
push
stos
adc
inc
sbb
imul
enter
mov
push
or
xchg
fildl
xchg
sbb
shl
fs
rorl
ljmp
test
andb
mov
fmuls
add
in
pop
sub
fcmovnu
outsl
inc
inc
inc
insl
fisttpl
xchg
fs
jae
or
aam
xor
jecxz
hlt
fcoml
mov
sbb
movsb
cwtl
and
fistpl
adc
fnsetpm(287
mov
dec
cmp
je
inc
leave
dec
pop
jecxz
fistl
sbb
jp
insb
cli
ljmp
in
test
out
pushf
out
outsb
test
mov
cmp
or
out
inc
add
push
sub
inc
jbe
scas
ljmp
lret
pop
add
aaa
xor
xchg
jp
sub
fstl
popa
pop
or
lock
inc
lock
and
pop
jl
sti
lds
push
mov
xor
sub
or
mov
aas
fldt
add
or
andl
dec
inc
out
fistpl
jg
dec
insb
mov
aas
xor
cmp
adc
out
sti
pop
and
cwtl
inc
jg
mov
iret
rcrb
popf
shr
sahf
test
xlat
inc
sub
ds
fwait
daa
js
mov
cbtw
stos
push
xchg
pop
add
and
cmp
xchg
push
sub
aaa
adc
inc
mov
xlat
mov
in
cmp
add
popf
iret
popf
jmp
daa
sub
cmp
inc
dec
repnz
push
into
lahf
das
jle
dec
jb
daa
movsl
cmp
insl
fistps
push
sub
adc
cmp
je
sbb
sub
jg
fwait
sbb
cmp
add
dec
rcrl
sbb
lea
mov
jg
pop
mov
test
lret
push
mov
add
lret
cmp
scas
jg
aas
add
mov
xchg
je
xchg
add
test
cmpsl
mov
mov
and
sti
fistpll
xchg
stos
jae
jg
fimull
add
fimull
sbb
arpl
push
lock
divb
fcomi
cmc
and
neg
push
pop
ja
repnz
pop
mov
sbb
mov
lods
jmp
mov
jecxz
dec
and
inc
or
ror
cli
movsb
sbbb
mov
scas
inc
or
dec
jp
iret
add
sub
les
testl
fs
addb
out
test
inc
jnp
pop
pop
fistpl
dec
insl
mov
fildl
push
adc
aaa
jecxz
inc
jnp
pop
push
xor
dec
push
mov
dec
insb
xchg
inc
dec
out
cmp
test
sbb
pop
mov
xor
xchg
sub
stos
jecxz
das
and
pop
xchg
pop
out
inc
lock
inc
sbbl
or
ror
cwtl
cmp
xchg
mov
lret
jecxz
test
cmp
push
pop
aas
shrl
jmp
xchg
stos
movsl
mov
jg
jb
ret
or
addr16
lret
cmp
dec
movl
xor
add
movsl
dec
call
ja
sub
push
xor
out
jecxz
adc
xor
sub
sbb
pusha
bound
or
mov
data16
shl
lret
mov
aad
cli
fdivrs
call
push
xchg
xchg
jmp
test
aaa
jg
xchg
inc
shrl
xor
mov
jecxz
ja
cmp
repz
jge
fisubrl
fsubrs
neg
into
jb
daa
scas
dec
scas
adc
cmp
sub
js
sub
imul
dec
movsl
xor
jg
pusha
lea
rorb
or
aad
mov
out
pop
jl
ret
add
push
sbb
into
cmp
rcrb
push
fwait
jnp
aas
sub
lcall
jnp
jmp
pushf
int
fcmovnbe
xchg
stos
lods
fcmovne
adc
mov
dec
jmp
out
fildl
xchg
in
loope
fldt
and
and
and
ficoms
rclb
xor
dec
mov
inc
std
inc
push
push
in
add
gs
push
fistpl
fildl
jl
sbb
shl
jecxz
call
cmpsl
imul
ss
cmp
test
dec
pop
leave
pop
mov
dec
add
or
insl
sub
jb
stc
mov
jns
ds
icebp
out
cmc
inc
dec
and
pop
mov
mov
pop
mov
xor
jns
repz
aam
xchg
or
xchg
aaa
jle
jl
xchg
jecxz
mov
sub
ljmp
arpl
sbbb
jns
fwait
mov
mov
push
lea
sti
mov
and
imul
ja
cltd
sbb
fwait
xlat
imul
xchg
lret
xchg
inc
stos
sub
lret
ds
and
jmp
jg
sub
dec
inc
stc
popa
ss
or
repnz
movsl
icebp
or
add
aaa
adc
lock
dec
pop
push
jecxz
sbb
in
cmpb
pop
cmp
insl
pushf
outsb
push
sarl
pop
sar
rcr
push
cmpsb
movsb
pop
fistpl
in
fldpi
mov
cli
aam
sahf
or
jbe
sbb
mov
xchg
jnp
mov
xor
loope
das
and
sbb
push
lock
push
mov
ret
cs
jg
inc
test
cli
jecxz
fadds
aam
jne
fistpl
sbb
mov
cltd
xchg
js
add
dec
pop
ljmp
sub
sbb
fistl
popl
xor
das
repz
aam
add
jae
ja
int3
aad
cmp
orb
jge
jno
fnstcw
in
sti
pop
adc
adc
mov
fwait
xchg
lret
in
iret
or
int
sbb
mov
ret
xorl
sub
push
jb
addr16
andl
push
cmp
and
and
cmp
in
aas
mov
jmp
inc
out
popa
out
xchg
mov
fisttpl
in
lds
dec
fwait
inc
insl
fwait
cmp
je
repz
xchg
call
mov
fstpt
dec
cmpxchg
idivl
push
lcall
jo
dec
jbe
jae
xor
mov
xor
mov
stc
icebp
mov
dec
inc
sub
xor
and
hlt
inc
push
push
fildl
stos
dec
pop
xchg
sti
pop
cmpsl
fildl
xor
mov
jecxz
and
xor
repz
cmp
arpl
jl
cmp
mov
xchg
mov
xor
repz
xchg
adc
or
pop
scas
nop
sub
sbb
mov
mov
dec
inc
clc
aam
into
stc
mov
pop
stos
iret
jmp
out
movsw
fs
add
mov
arpl
cltd
sbb
xchg
xchg
cli
cwtl
jnp
out
mov
sti
xorl
jnp
iret
outsl
jmp
mov
xchg
sbb
fstl
mov
fmuls
mov
lret
pop
nop
xchg
in
iret
mov
push
dec
loop
dec
pop
push
leave
cmp
xchg
inc
mov
in
out
jmp
test
cmp
dec
insb
aas
jnp
xor
sub
sbb
add
push
imul
daa
inc
mov
movsb
jge
shrl
xor
sbb
adc
dec
sti
cs
mov
cmp
mov
mov
pop
jns
call
sub
repz
rcr
mov
fistpll
dec
insl
or
sbb
subb
mov
xchg
cs
pop
mov
sbb
insl
fistl
xor
xor
dec
push
push
fildl
jle
fwait
jnp
pop
icebp
push
fistpl
add
xor
xchg
pop
inc
fdivl
pusha
fcmovnbe
fstpt
les
negb
imul
in
sub
pop
jae
mov
xchg
rcr
movsb
xchg
in
push
push
mov
fcmovnbe
lods
push
mov
mov
pop
adc
cmpl
add
jae
and
fisttpl
lock
std
pminsw
daa
iret
sub
push
xchg
out
inc
pop
fwait
sbb
icebp
ficoml
jg
ret
aas
push
cmp
sbb
xchg
adc
out
lret
mov
out
mov
push
or
cmp
inc
subb
xchg
push
arpl
jp
mov
fstps
dec
mov
sti
adc
les
stos
test
out
imul
fcmovnbe
xchg
outsl
es
enter
or
xor
imul
cmpl
or
cmp
inc
pop
imul
outsb
cmp
ret
mov
add
rolb
mov
sbb
jnp
in
cwtl
das
andl
dec
pop
sbb
sub
cmp
pop
scas
test
pop
adc
jb
mov
ret
sti
dec
rcl
mov
adc
sbb
in
mov
jmp
pop
mov
roll
dec
mov
mov
cmp
or
addb
lret
xchg
mov
fisttpl
dec
dec
repnz
cmp
cmp
mul
jne
push
andl
push
xchg
lds
fcomi
lcall
pop
fcmovb
inc
cwtl
inc
ret
pop
mov
fistpl
enter
aaa
sarb
and
fistl
sub
into
mov
xchg
pop
cwtl
repz
mov
mov
cltd
and
pop
fldt
mov
xchg
and
pop
or
fimull
cmpb
ja
leave
out
jnp
push
pop
xor
mov
dec
dec
fstpt
inc
scas
sbb
jg
xchg
mov
xchg
adc
je
dec
push
jo
mov
jno
out
aam
in
movsb
dec
lret
adc
scas
int3
xchg
scas
push
out
or
jle
sbb
add
dec
or
push
xor
pop
push
testb
fistpl
in
pop
mov
repz
ficoml
stc
xchg
cmovp
fs
dec
fnstcw
scas
call
iret
dec
into
inc
adc
sahf
push
shlb
mov
dec
inc
pop
jge
sbb
dec
jg
jecxz
xchg
and
scas
aaa
adc
orl
mov
sti
roll
call
cld
daa
xchg
cmp
sti
add
jmp
cli
js
sub
adcb
rol
stos
sarb
mov
xor
sbb
and
and
sub
cmp
xor
adc
pop
fcmovnu
xchg
mov
jb
pop
inc
test
arpl
push
xlat
sub
jns
xor
jp
push
and
into
sbb
push
dec
pop
cmp
or
mov
or
jl
data16
xchg
in
je
mov
xor
jmp
mov
or
cmp
mov
in
les
sbbl
xchg
jp
xlat
ljmp
dec
lock
fistpll
push
daa
pop
pop
fistpl
inc
or
cmp
leave
fwait
xchg
mov
orl
pushf
push
icebp
cmc
jne
ja
sbb
inc
insb
aaa
stos
xor
in
jg
jecxz
aas
xchg
aas
test
sub
fcomi
cmp
scas
jo
scas
push
mov
mov
es
jecxz
cmp
xchg
sbb
shll
and
js
fistl
dec
mov
fstpt
push
fmuls
in
cmpsl
sbb
mov
mov
testl
fcmovnb
inc
lcall
xor
shr
into
mov
sbb
jmp
rcrl
mov
dec
jmp
rolb
mov
enter
jae
cld
outsb
sbb
and
push
jns
divps
push
fistl
fisttpl
push
push
stc
fcmovnbe
cvtps2pd
sub
lret
push
sub
jp
in
and
adc
mov
adc
je
icebp
inc
mov
jl
scas
adc
das
mov
and
pcmpeqw
ljmp
clc
addr16
out
in
fisttps
mov
adc
int3
aam
rcrl
daa
mov
cld
mov
mov
daa
call
mov
mov
rcll
nop
insb
jl
rorl
lods
sub
xchg
rcrb
dec
inc
mov
movsl
aaa
fidivs
jno
jge
xor
test
stos
into
fucomip
dec
jb
adc
mulps
fwait
cmp
lret
dec
cmpl
xchg
adc
xchg
js
jg
imul
in
sbb
fldt
dec
sub
aaa
daa
daa
adc
and
lret
stc
dec
xor
stc
push
pushf
inc
int3
mov
lret
sbb
mov
repz
imul
mov
xor
xadd
adc
add
cwtl
lahf
adc
dec
sti
jae
dec
inc
shr
xchg
cs
inc
dec
repz
sub
in
stc
icebp
fildl
pop
push
xchg
test
ja
fcmovne
sahf
pop
aaa
jns
push
sti
xchg
jae
movsl
xor
scas
dec
lock
mov
sbb
aas
jl
mov
data16
cmp
popa
in
xlat
in
aas
mov
sub
leave
outsl
movsb
mov
jmp
hlt
popa
sbb
pop
test
fcmovne
sbb
fcmovnbe
xchg
lret
fcmovne
add
mov
in
mov
push
pop
xor
fs
inc
fildl
jecxz
mov
into
inc
loope
out
mov
jp
stos
dec
sti
ss
pop
push
test
xchg
aaa
ss
fcmovnb
pusha
pop
daa
jo
cmp
push
fwait
mov
xorl
xchg
sbb
into
add
sub
mov
sarl
xchg
xchg
cmpsl
mov
fucomi
dec
loope
outsb
pop
loopne
jmp
cli
fisttpl
dec
call
ds
or
cwtl
addl
fucomip
enter
loopne
mov
sub
jp
push
adc
shr
cwtl
pop
push
push
sti
lea
ret
sbb
dec
incl
sub
xor
xchg
or
rcl
or
pop
inc
punpckhwd
in
das
sub
mov
add
and
leave
xchg
mov
pop
pop
push
xchg
sub
pop
xorl
sub
fisttpll
mov
and
ljmp
sub
out
mov
movsl
sub
dec
test
cmc
decb
inc
sbb
out
sub
fisttps
andl
dec
pop
repz
push
xchg
push
xor
pop
call
inc
repz
cvtps2pi
dec
mov
sub
sarl
lahf
pop
dec
pop
dec
imul
imul
jg
es
cmp
mov
test
xor
pop
pop
lcall
je
cli
pop
addr16
sbb
out
daa
add
xor
dec
das
inc
or
out
cmp
pop
sbb
push
in
sbb
fwait
jns
imul
repz
adc
cmp
dec
sub
or
push
std
aas
dec
inc
fcompl
push
divb
sbb
pop
jnp
dec
fcmovnbe
frstor
cmp
jnp
addr16
sbb
fistl
pop
lea
fists
popf
out
mov
das
insl
xchg
jae
aad
sbb
inc
cmp
xchg
jmp
repz
mov
stos
ja
cmp
jae
add
iret
lods
pop
in
jge
xchg
aaa
imul
fwait
push
dec
arpl
fisubs
or
inc
out
aas
fcomi
sub
inc
movsb
push
pop
pop
popf
inc
in
out
fistl
jns
jmp
jo
add
sbbl
mov
mov
rorl
int3
loopne
jae
xchg
and
fstpt
push
fwait
mov
and
inc
popa
fcmovnb
ret
cmp
push
jae
add
stc
out
inc
and
mov
das
inc
sbb
xor
cmp
fisttps
pop
and
sub
mov
cmp
mov
sbb
jbe
leave
jecxz
movsb
pop
ljmp
xor
out
push
movd
xlat
sub
enter
pop
ret
mov
daa
enter
sub
imul
into
and
leave
and
adc
push
fistl
mov
out
ret
rcll
into
pop
and
pop
out
xchg
fst
push
mov
jle
pop
jp
sbb
fisttpl
ss
in
inc
rep
aaa
mov
out
cmpsl
ja
aad
gs
dec
xchg
jecxz
andnps
xchg
lret
outsl
push
aam
mov
push
daa
push
push
add
sbb
lea
xchg
sub
arpl
lock
cltd
jmp
mov
push
inc
mov
cltd
mov
mov
and
outsl
negl
push
loop
xor
mov
xor
stos
ss
lret
adc
pop
fstl
out
lods
mov
daa
and
xchg
test
in
xchg
test
orb
out
imul
sti
out
out
imulb
and
add
add
scas
xchg
or
pop
sti
xor
shll
dec
xchg
incl
test
fisttpl
sbb
pop
lcall
clc
arpl
inc
loope
xor
in
xor
push
cmc
ljmp
and
cltd
sub
xor
sub
leave
sbb
subl
fisttpl
push
lock
cwtl
ss
sub
repz
aam
scas
jecxz
and
out
dec
fcmovnu
sub
rol
xor
pop
outsb
sub
jp
fstpt
sbb
outsl
out
cltd
pmulhuw
daa
push
repz
dec
mov
movsb
xchg
ds
dec
sarl
cs
and
int3
dec
into
jle
jge
out
ljmp
out
pop
jae
into
jns
daa
jecxz
pop
and
in
addr16
mov
sbb
or
sub
out
jp
fdivrs
sbb
dec
inc
andb
sbb
test
ret
cmpsl
sbb
out
leave
cmpsl
jbe
inc
icebp
cltd
iret
out
sbb
xor
cmovp
push
mov
add
cmp
cmp
sti
aaa
test
aas
cmp
adc
mov
adc
sbb
push
out
in
mov
scas
aam
fs
dec
jg
mov
pop
ret
dec
enter
addr16
rdpmc
add
mov
filds
iret
sarl
loop
mov
cmp
iret
fcmovne
insb
rclb
int3
nop
sbb
mov
mov
cmp
and
cmp
icebp
fiadds
xchg
aas
iret
out
cmp
mov
iret
push
xchg
cs
out
pop
sbb
dec
inc
mov
mov
iret
imul
ret
andl
aaa
sub
jnp
stos
mov
push
dec
inc
data16
lock
ljmp
shl
cmp
dec
jecxz
and
out
and
out
sbb
pop
out
push
dec
push
and
aas
inc
notb
push
dec
cmp
lret
sub
xor
popa
pop
insl
jmp
cmp
mov
pop
pop
jge
out
or
dec
mov
in
into
ret
cmp
xor
movsb
fbstp
in
mov
clc
repnz
mov
sbb
push
mov
xchg
pusha
lea
rcll
push
jp
push
xor
cmp
mov
xchg
in
xchg
jb
and
lahf
jg
and
mov
push
pop
push
rcrb
cmp
xchg
sub
jmp
sub
sub
dec
loopne
push
insb
fistl
fldcw
roll
add
sub
sbb
imul
arpl
push
cmp
cltd
pop
js
mov
xchg
sbb
jecxz
push
fstl
push
cmp
dec
in
mov
outsl
jae
inc
pop
and
and
negl
pop
dec
sti
sbb
into
mov
mov
pop
outsb
cmp
inc
jbe
arpl
cmp
add
jb
fstpt
sub
push
gs
into
and
push
cmc
inc
adc
jecxz
out
cmp
stos
fistl
mov
pop
aaa
sub
repz
lock
inc
adc
dec
aas
cmpl
xchg
mov
aam
mov
fnstenv
shl
scas
jo
arpl
push
sub
mov
sbb
fs
fisttps
mov
xchg
add
and
sbb
push
data16
sub
fcmovnu
ja
xor
xchg
shlb
fst
mov
xchg
sub
mov
arpl
dec
inc
clc
xor
fists
and
xor
divb
mov
movsb
or
add
movl
mov
add
in
nop
cs
pop
xchg
sbb
adc
dec
je
addr16
push
lock
mov
fdivrp
pop
lods
xchg
ja
jmp
jl
jo
in
mov
iret
neg
andl
or
pop
inc
ljmp
repz
ds
imul
lahf
dec
cmp
es
sbb
outsb
in
test
jne
clc
fildl
or
push
cmp
lcall
fs
push
insb
daa
mov
scas
sbb
in
movsb
fdiv
xor
sub
and
outsb
jae
lret
aas
sbb
pop
imul
push
jge
fistpl
pop
mov
iret
mov
lods
mov
mov
daa
dec
into
or
xchg
sti
int3
xchg
cmpsl
fcom
lea
jno
sbb
jns
mov
mulb
jl
addr16
xor
xlat
dec
inc
loopne
fisttpl
push
adc
hlt
lcall
rcll
popf
repz
xchg
scas
mov
jecxz
mov
pop
shlb
fisttpl
xor
dec
rcrb
sbb
aam
push
xchg
in
inc
adc
insb
xor
fistpll
cwtl
inc
pop
movsl
jnp
ret
add
sti
cmpsl
mov
jae
into
out
fcomi
mov
fistl
out
cs
dec
inc
call
aas
xor
xchg
jl
sbb
dec
cmc
out
adc
pop
lock
movsb
sub
and
mov
sbb
repz
dec
add
repz
dec
add
adc
in
sub
sub
xchg
sbb
js
arpl
mov
mov
mov
and
jae
lret
inc
adc
andb
xchg
sti
int
fnstcw
mov
cmp
mov
sub
std
inc
and
xchg
xchg
shl
push
pop
test
rorb
or
cmp
popf
arpl
push
das
out
xor
call
enter
jae
js
mov
or
pop
shrl
lcall
dec
sub
nop
push
icebp
jae
adc
cmpsl
out
sahf
dec
mov
or
pop
int
out
ds
lret
out
idivb
into
add
pop
jbe
cmpb
inc
push
inc
xchg
pop
mov
xor
scas
or
push
mulb
aad
pop
pop
cwtl
pop
xor
pop
mov
xchg
fisttpl
jg
das
sbb
iret
or
sbb
jl
mov
jmp
mov
dec
pop
call
inc
into
jae
fldt
aaa
das
xor
addr16
daa
jo
add
xchg
test
movsb
int3
or
mov
dec
fimuls
mov
sbb
out
fildl
fisttpl
xchg
fcmovne
pop
in
dec
fistl
out
mov
jbe
das
fstpt
dec
add
dec
xlat
dec
or
in
js
aad
pop
ret
outsl
inc
insl
fstpt
inc
in
lods
cmp
push
out
out
push
pop
mov
push
int3
add
neg
push
rcll
imul
fucomi
dec
push
insb
je
fldt
pop
in
outsl
iret
or
pop
and
sub
xlat
jp
jmp
xor
das
popl
add
cmp
xchg
repz
scas
sbbb
or
jp
sbb
inc
out
xor
xor
out
sbb
dec
fists
mov
imul
mov
sbb
arpl
imul
or
cwtl
daa
jbe
or
rcll
outsb
test
in
pop
jmp
andl
xlat
mov
mov
mov
or
sbb
inc
add
lcall
sub
xchg
in
repz
ds
mov
movl
testb
inc
movsl
inc
pop
inc
pop
clc
fmull
mov
arpl
xor
pop
repz
sub
adc
jae
aaa
push
daa
push
out
arpl
ret
mov
pop
push
xchg
mov
in
mov
or
sub
cmp
jne
and
dec
inc
push
jecxz
fcmove
iret
movsb
and
testl
adc
inc
ret
and
dec
popa
or
inc
jns
ja
xchg
arpl
sarb
pop
ja
fbstp
or
aaa
add
mov
mov
dec
mov
adc
sub
jge
xchg
sti
jl
jb
daa
rclb
xor
jmp
fistl
mov
mov
test
out
lret
push
fistpl
mov
pop
xor
mov
dec
fistpll
mov
jae
insb
out
xchg
pop
mov
sub
cmp
cmp
push
fbstp
rcll
mov
jecxz
fldt
inc
loopne
xchg
cmp
lcall
inc
fildl
dec
pop
push
jae
inc
scas
in
fcmovnbe
fildl
enter
xor
fcmovne
fwait
jle
ja
and
fistpll
rcrl
lret
test
xor
jns
xchg
jg
fldt
and
ja
pop
pop
sub
cs
movsl
cmp
sub
or
cmp
cmp
dec
addr16
lahf
nop
xorl
sub
pop
inc
dec
xlat
out
icebp
jmp
push
xor
mov
idivl
mov
int
xchg
lret
cmp
out
cltd
xchg
push
xchg
xor
cmp
into
lds
aad
fcmovnu
mov
mov
add
leave
xchg
xor
xchg
daa
lret
fistl
dec
and
xor
cmp
shll
pop
lods
xor
sub
dec
cltd
ljmp
mov
jmp
in
in
pushf
imull
cmp
jnp
push
jp
xchg
addr16
pop
ja
pop
fdivrs
mov
arpl
jge
lods
imul
dec
jmp
fldt
pop
arpl
das
and
inc
or
insb
jg
or
mov
pop
or
push
sub
jp
or
out
sbb
and
cmc
repnz
add
xor
clc
in
dec
sub
shl
lret
cltd
sub
sbb
enter
jecxz
jbe
lret
cmp
mov
adc
arpl
pop
test
daa
fcmovnu
sbb
in
jns
out
pop
xor
mov
fldl
jg
pushf
fildll
in
mov
or
pushl
and
cwtl
push
sub
lds
ret
fbld
mul
adc
dec
ret
roll
cwtl
xor
das
xchg
shrl
idivl
adc
int3
cwtl
fwait
sbb
mov
xchg
lret
push
insl
xchg
es
xor
pop
or
jp
push
dec
fisttpl
inc
fimuls
pop
mov
xor
mov
dec
jae
sub
dec
cmp
shlb
mov
mov
fcmovne
dec
in
adc
dec
and
fldenv
lret
movsl
jg
sahf
ljmp
int3
adc
and
dec
mov
rolb
fisttpl
imul
lods
shrl
jbe
xchg
rcrl
lea
cltd
arpl
and
inc
fucomi
inc
xchg
out
shll
sbb
lock
das
xchg
pop
ret
xchg
mov
xor
addr16
and
sub
inc
inc
fcmovnb
sub
out
je
pop
repz
pop
pop
sub
aas
and
shrb
les
or
mov
mov
test
fwait
int3
fdiv
mov
insb
andb
xor
aam
outsl
mov
fwait
int
fbld
mov
xchg
mov
sub
fisttpl
push
sbb
fcmovnu
js
das
or
ja
lret
out
test
mov
daa
jg
sbb
test
pop
jnp
cmp
jg
jbe
pop
enter
pop
mov
cs
xor
fcmovnb
xor
pop
xlat
pusha
xor
fisttpl
push
ljmp
mov
pop
mov
mov
and
inc
dec
mov
and
out
xchg
push
sbb
or
cmp
sbb
fndisi(8087
add
ret
add
push
or
test
pop
mov
jnp
ja
int3
out
sbb
add
jae
add
out
es
cmp
test
outsb
call
fninit
rorl
mov
push
xor
add
xchg
jae
ror
stos
test
xchg
xor
sbb
mov
cmpsl
and
das
inc
push
cmp
cwtl
mov
aad
mov
xchg
daa
and
das
fisttpl
adc
popa
jnp
pop
or
ss
cmp
jmp
test
push
and
cmp
pop
ja
dec
ljmp
jmp
jne
ja,pt
dec
stos
repz
fcmovnb
les
dec
frstor
lcall
and
sub
and
push
stc
pop
jae
imul
jnp
stos
cmp
mov
sub
neg
cmp
fistl
adc
dec
cmp
push
out
inc
cwtl
and
arpl
sti
das
add
and
decl
fstpt
stos
outsl
mov
pop
and
inc
scas
pop
testl
cmp
xor
jg
push
inc
fstps
es
mov
fmuls
ja
daa
stos
les
rol
fldcw
int3
mov
std
fcmovne
mov
xlat
nop
fnstsw
sub
inc
fistl
fldt
cmpsl
inc
repz
sbb
adc
filds
arpl
lcall
jnp
pusha
imul
aaa
cwtl
sti
mov
pop
mov
xchg
pop
addr16
sub
sbb
stos
fildl
or
fists
add
pop
xchg
stc
das
rorb
push
dec
ja
dec
pop
das
cmc
outsb
adc
mov
jg
dec
ds
inc
pop
loope
sqrtps
aaa
mov
loope,pn
push
cmp
iret
add
pop
daa
inc
pop
sbb
in
xchg
jae
cli
xchg
and
pop
adcl
xorb
jo
add
ficoml
mov
pop
xchg
adc
fcomi
or
fbld
movsb
cs
sbb
xchg
int
shlb
and
test
mov
sti
jmp
mov
sub
aaa
fists
dec
xor
clc
xchg
out
pop
jl
and
pop
push
rorl
dec
pop
xor
sbb
jecxz
fldt
push
fs
scas
mov
mov
cmp
jae
out
imul
jg
dec
fildl
sar
jo
andb
adc
sbb
pop
mov
movsl
sbbl
lods
outsb
cmp
pop
mov
fildl
inc
and
inc
iret
ret
out
jbe
in
imul
out
sub
fisttpl
out
pop
in
lods
lock
inc
in
inc
clc
jae
imul
xorl
cmp
ds
adc
aas
inc
sub
mov
fistpl
mov
pop
and
fldlg2
jb
add
or
fldcw
mov
xchg
cmp
or
mov
push
and
aad
pop
sbbl
xchg
pop
sti
mov
fistl
scas
fildl
imul
mov
sub
jae
lret
adc
repz
mov
pop
pop
clc
jg
xlat
pop
mov
loope
jmp
testb
inc
repz
dec
ret
jge
das
sbb
jb
xchg
jae
xchg
addl
jno
xlat
shrl
iret
sbb
cs
aaa
jbe
pop
js
insl
xchg
add
popa
pop
das
mov
out
dec
inc
jns
stos
ljmp
jecxz
push
fisttpl
rcrl
fidivrl
sub
int
out
jns
testb
and
mov
pop
xchg
dec
into
cmp
imul
mov
nop
jae
mov
pop
dec
mov
jecxz
mov
jae
xchg
outsb
fistpll
dec
jno
or
shlb
mov
push
lock
adc
lds
fwait
mov
pushf
mov
add
dec
mov
fistpll
leave
fisttpl
xor
and
or
dec
jecxz
push
pop
subb
out
sbb
in
inc
lods
xlat
cmp
fisubs
cmp
stc
inc
fisttpl
pop
cmpsb
repnz
or
aas
std
fs
out
in
push
fucomi
ret
inc
call
shrl
and
negl
pop
fistps
cs
add
mov
loopne
fistps
outsl
inc
repnz
outsb
jae
fcmovnb
jecxz
data16
mov
stos
push
jae
add
fninit
xor
fcmovnbe
das
fcomi
sbbb
sub
sbb
xchg
sbb
pop
dec
xor
push
xchg
sub
pop
adc
jns
adc
cmp
popf
daa
dec
cmp
mov
inc
lret
xor
test
mov
xchg
fcmovne
dec
inc
leave
ljmp
sbb
rorb
ss
mov
outsl
lahf
mov
xor
sub
mov
xchg
xor
mov
scas
outsl
pop
dec
int3
fcomps
sbb
xchg
xchg
mov
xchg
cmpsl
ljmp
in
mov
sbb
push
scas
in
xor
xlat
jle
clc
adc
aas
into
jb
ret
push
sbbl
and
dec
mov
in
addr16
in
mov
enter
pop
mov
adc
pop
and
dec
inc
outsb
cmc
dec
movsl
das
pusha
cltd
mov
pusha
jl
ljmp
inc
cmp
lcall
in
aas
daa
ret
out
movsb
dec
fstpt
bound
and
cltd
out
aad
sti
jno
fldt
push
fsubs
xchg
pusha
test
push
aas
fisttps
pop
mov
arpl
and
orb
xchg
mov
cmp
xchg
lea
mov
xchg
outsb
cmp
imul
sbb
pop
or
sub
js
jnp
xchg
outsb
xor
xchg
jae
test
sbb
fwait
nop
aad
jle
pop
jg
nop
fbld
bound
xchg
fildll
gs
aaa
cltd
aas
test
ljmp
aaa
out
ret
xchg
outsb
cmp
icebp
lea
test
push
xchg
arpl
pop
fs
leave
fildl
push
jo
jnp
rorb
repz
inc
jg
fwait
mov
arpl
aam
inc
inc
inc
inc
les
or
ljmp
xchg
stos
testb
arpl
cltd
sbb
call
fstpt
sub
mov
stos
fistl
out
inc
out
lock
call
int
sub
mov
mov
sub
fwait
lret
sti
push
push
jmp
cs
iret
in
xor
aas
push
and
les
mov
out
movsl
sti
shlb
xor
outsl
xchg
icebp
bound
mov
ficoml
shl
pause
leave
sub
mov
mov
mov
push
stos
push
lret
dec
pop
mov
pop
addr16
test
push
mov
sbb
push
in
or
repz
inc
mov
pop
out
lods
mov
dec
dec
sti
popa
jp
insl
sub
ret
mov
cmp
jb
rep
cwtl
pop
aaa
aam
cs
jecxz
fstl
pop
pop
sbb
or
mov
repz
inc
lret
sub
push
ljmp
lea
inc
addr16
scas
aam
xor
clc
in
std
jmp
ficompl
inc
inc
push
arpl
fsubr
scas
sub
adc
cmpsl
dec
outsb
out
jecxz
fistpl
mov
sbbb
call
stos
jae
scas
adc
push
jecxz
dec
sub
xchg
cmpsl
push
sarb
aas
addr16
es
mov
aas
xor
imul
arpl
les
outsl
inc
mov
dec
sbb
pop
aad
sub
je
addr16
int3
xchg
and
idiv
mov
cltd
sbb
fistps
testl
push
jae
clc
stos
sbb
pop
icebp
stos
andl
hlt
jmp
dec
jmp
push
mov
std
scas
dec
out
pop
xchg
fisttpl
cmp
push
clc
or
jo
das
or
test
mov
jmp
mov
lret
in
sbb
fistpll
push
pop
leave
movl
dec
fcmovne
ret
aam
mov
cmp
jns
out
popa
push
push
cmp
rcr
xor
lcall
int
mov
jo
adc
mov
mov
inc
push
aaa
and
aas
or
daa
cmp
repz
xor
aas
out
mov
push
cltd
sub
cmp
outsb
jecxz
stos
adc
out
push
cmpsl
shrb
imul
sub
xlat
and
addr16
dec
fistps
sub
add
imul
mov
push
xchg
mov
inc
mov
push
out
negl
inc
add
xor
out
xor
das
inc
mov
fildll
sbb
les
les
test
add
aaa
inc
mov
shrl
pop
repz
push
out
push
ljmp
stc
xor
das
sahf
loope
mov
insb
fistpl
hlt
xor
pop
push
dec
lock
ljmp
movl
inc
pop
xor
outsl
mov
aam
fs
dec
call
js
jcxz
push
inc
pop
or
lahf
adc
or
jno
rol
test
int
jmp
shll
dec
frstor
push
dec
dec
fistpl
cmpsl
jo
cmpsl
or
repz
xor
push
xorl
xchg
sub
xor
cltd
or
sub
jnp
fbstp
sbb
outsl
dec
pop
jg
adc
push
lock
bound
rcll
cs
sti
shr
add
sub
fldt
out
adc
cmpb
xor
ljmp
out
jecxz
sbb
add
mov
dec
out
cmp
mov
into
mov
jecxz
out
orb
sub
leave
cmp
das
xor
pop
inc
imul
mov
inc
jbe
stc
cmp
stos
imul
mov
sbb
sbb
fcomi
dec
mov
fmuls
inc
pusha
movsb
pop
icebp
repnz
daa
out
cmpsl
push
cmp
das
daa
pop
iret
pusha
pop
addr16
pop
jl
inc
jge
cmp
push
iret
inc
shl
out
pop
sbb
in
out
rcrb
pusha
mov
cwtl
jecxz
iret
cltd
ja
fwait
sbb
mov
in
fcmovne
xchg
into
and
xchg
out
pop
and
movsl
mov
add
fcmovnbe
gs
sub
xchg
sbb
sbb
jecxz
cmpsl
aaa
rclb
jp
iret
call
out
roll
and
xchg
sbb
int
xor
out
push
sub
popa
xor
jecxz
repz
adc
lea
ja
jmp
and
out
xor
lock
in
bound
out
xchg
aaa
lret
mov
jmp
and
sbb
and
iret
inc
add
clc
int3
jmp
add
sarb
int3
aas
fdivp
outsl
out
sbb
cmc
dec
fisttpl
lret
ret
movsl
sbb
sbb
mulps
fwait
dec
into
out
pop
fcomi
aas
roll
mov
mov
pop
aad
mov
cmp
imul
or
insl
sbb
js
in
jg
pop
xchg
fcmovnu
xor
dec
pushf
insb
pop
cwtl
push
xchg
push
in
adc
add
cmp
mov
xchg
adc
repz
xchg
rcr
out
sub
sbb
addr16
addr16
ljmp
add
sub
mov
mov
inc
roll
icebp
fcmovnbe
outsl
or
mov
and
out
push
in
mov
adc
mov
jb
fldt
sarb
inc
ret
data16
shll
in
push
xor
push
mov
fistpl
jl
adc
sbb
in
fcmovnbe
cmpsb
lock
out
lock
or
pop
ja
dec
aas
mov
iret
sbbl
xchg
push
mov
jb
jg
pop
adc
iret
pop
mov
push
jnp
lea
pop
dec
rol
push
mov
xchg
sbb
into
xchg
pop
cmp
sub
inc
dec
shl
fwait
les
decl
jnp
movsb
xchg
fwait
sub
aad
push
fcmovne
mov
sbb
sub
cld
aaa
lea
sbb
lods
cmpsl
push
ljmp
cmp
lods
mov
xor
pcmpgtd
pop
inc
mov
pop
adc
or
xchg
pusha
mov
inc
imul
mov
mov
and
pop
mov
jae
mov
inc
jecxz
sbb
jnp
xchg
and
xchg
and
push
add
daa
fwait
and
outsl
cwtl
mov
pop
arpl
pop
sub
push
loopne
aas
enter
adc
push
cmp
dec
push
or
lcall
in
loope
xchg
push
enter
cmc
in
imul
sub
xchg
aaa
dec
js
daa
or
out
adc
emms
ja
lods
jg
jg
jno
dec
mov
lea
mov
addr16
lods
imul
jno
in
dec
fstpt
out
movsb
jle
xchg
aaa
ficoml
pop
out
std
or
enter
xchg
daa
sbb
test
repz
push
fistpl
adc
imul
xor
scas
in
cmp
arpl
test
inc
pop
sbb
pop
imul
sahf
loope
mov
xchg
fisttpl
repnz
sbb
push
pop
push
jge
cmp
lods
inc
loop
xchg
lds
fwait
jecxz
and
imul
jecxz
es
jbe
mov
cmp
iret
add
rorl
repz
lret
bound
into
jbe
mov
pmaxsw
rcrl
sar
repz
jg
pop
sub
mov
adc
scas
fisttpl
inc
push
inc
loop
inc
aad
js
daa
pusha
movl
add
dec
or
xor
int3
push
inc
in
inc
in
inc
dec
add
into
sbb
xor
lds
push
insl
jecxz
sbb
dec
cmp
sbb
jecxz
mov
push
cmp
cmp
rolb
push
mov
in
cmp
cltd
add
into
int3
das
pop
adc
sbb
mov
inc
pop
adc
aam
inc
in
mov
pop
pop
shl
arpl
mov
out
sbb
cmpxchg8b
push
mov
fnstsw
or
int
add
sbb
mov
pop
pop
jnp
pusha
orb
cmp
pop
mov
jo
jmp
and
push
fsubs
outsl
out
ja
cwtl
pushf
xchg
mov
jnp
jae
inc
stos
fwait
xor
stc
cmp
fistpl
outsl
out
ljmp
stc
into
in
jg
push
ret
jecxz
cmp
les
mov
cltd
rclb
push
lahf
inc
clc
and
xor
div
shl
jmp
ficompl
dec
pop
pop
push
cmp
pop
cmp
not
ljmp
das
pop
mov
jl
and
sti
jbe
xchg
cmpsl
xlat
pop
icebp
out
aas
sbb
outsl
sbbl
mov
fistpl
lret
fcmovne
test
push
fisttpl
notl
cmp
sbb
push
addr16
and
call
sub
sub
shll
ljmp
movsb
aaa
shll
mov
fbld
fistps
cwtl
out
ret
stos
sbb
nop
fistps
sub
push
add
repnz
jnp
jp
mov
cmp
int
mov
stos
lock
in
jge
xchg
imul
cmc
mov
mov
inc
pop
inc
out
inc
pop
int
aas
push
dec
pop
sbb
pop
xchg
pop
pop
push
pop
push
inc
pop
filds
fisttpl
mov
dec
adc
inc
movsb
xchg
shlb
test
andb
daa
jecxz
repnz
mov
or
fisubl
or
mov
cmp
nop
xor
arpl
and
fistpl
mov
cmp
dec
xorl
jl
cmp
push
int3
sbb
incb
test
push
scas
movsb
popa
jecxz
aas
sbb
dec
int3
cmp
and
jecxz
cltd
aaa
repz
enter
ja
and
sbbl
sbb
inc
sti
cmp
jnp
jae
xor
or
push
out
sarb
cltd
adc
int3
fsts
push
mov
lods
xor
xchg
sbb
pop
test
rcl
mov
mov
arpl
out
shlb
xchg
adc
and
lret
mov
cwtl
sbb
jnp
push
jnp
push
out
mov
pop
addps
push
pop
test
in
xchg
mov
pop
sbbl
xchg
or
jno
jmp
rcrl
mov
or
xlat
cmp
fmul
aaa
mov
sbb
cmp
cmp
arpl
jle
sar
aaa
pop
movsb
sar
xchg
cmp
sub
out
out
jnp
push
mov
int
int
out
inc
test
pusha
sub
mov
sub
mov
dec
sti
jge
ljmp
test
ret
and
ret
ss
mov
in
sbb
repnz
and
xchg
test
in
xchg
push
sbb
xor
in
es
xchg
push
lock
adc
push
or
aaa
mov
daa
js
insl
xchg
mov
sbb
fnstcw
jecxz
dec
sti
dec
sbbb
push
or
ljmp
adcb
cmp
cmp
or
dec
xchg
pop
shlb
call
lret
mov
mov
and
pop
jp
jnp
pop
mov
out
repz
mov
arpl
fcmovnbe
pusha
pop
mov
shlb
mov
push
out
inc
orl
repz
mulb
cmp
into
sbb
mov
rclb
adc
popa
lds
jnp
xorb
shrb
call
addr16
ds
leave
inc
repz
inc
aaa
fildll
inc
neg
push
outsb
dec
pop
ja
pop
pusha
jno
and
xchg
and
jecxz
daa
cwtl
fstpt
fistl
repz
inc
clc
and
sbb
push
push
mov
and
lcall
insl
movsb
dec
mov
xchg
fildl
out
push
jl
ret
push
mov
fstpt
jb
aaa
fldcw
xchg
icebp
dec
xor
sar
pop
jge
fcmovnb
iret
shrb
lret
jb
jecxz
cwtl
sbb
fbld
xchg
or
xor
test
or
leave
sub
and
int3
mov
das
imul
repz
push
rcll
dec
jmp
dec
ja
cmp
and
sbb
pop
xchg
xor
sub
pop
outsb
fnstsw
pop
xchg
mov
lahf
enter
mov
imul
rolb
xchg
mov
inc
fistpl
lret
jmp
ficompl
arpl
je
push
andb
sbb
scas
adcl
inc
fwait
jmp
fwait
in
cmp
cmp
push
inc
lea
stos
cs
inc
sub
sbb
cli
andl
sahf
pop
inc
icebp
pop
push
or
and
roll
mov
pop
rcll
fimull
daa
insl
aas
jmp
pushf
shrl
push
imul
sbb
in
jo
or
jp
sbb
test
and
push
mov
cmp
outsb
dec
mov
sub
jnp
shl
scas
movsb
fists
or
imul
sarl
aad
call
mov
fs
xor
xchg
dec
out
hlt
jg
cmpsl
inc
test
mov
clc
mov
popa
mov
adcb
sub
outsb
js
fwait
add
add
fcomi
lcall
js
xchg
fcmovnu
sbbl
fwait
ja
pop
sub
movsl
pop
repz
inc
repnz
or
stc
gs
stos
sarb
push
mov
mov
test
imul
int
xor
fisttpl
outsl
jecxz
jo
adc
jns
adc
out
data16
xchg
sbb
sbb
cwtl
push
pop
mov
mov
aas
mov
scas
xor
pop
insb
inc
dec
fwait
inc
pop
mov
ds
pop
mov
je
inc
cmpb
repz
dec
movsb
inc
out
add
stos
pop
dec
lret
fdiv
out
pop
pop
push
push
xor
adc
mov
cmp
outsb
dec
jecxz
inc
int3
mov
shrb
ss
fisttpl
mov
addr16
sub
fcmovnbe
cmpsl
imul
jmp
andb
dec
movsl
jmp
cs
fadds
jecxz
out
or
dec
cmp
jnp
mov
pop
fucomi
jae
dec
jecxz
fwait
jae
jp
movl
pop
jecxz
pop
or
test
sbb
int
sub
sub
cmp
cmp
outsl
adc
out
imul
je
sbb
scas
pop
jge
repz
pop
test
add
addr16
jmp
lock
mov
cmp
inc
xchg
scas
adc
fistl
dec
insb
stc
insl
cmp
pop
and
outsb
sub
cltd
inc
arpl
sbb
clc
inc
mov
inc
movsb
and
inc
mov
cmp
push
and
inc
arpl
cwtl
aas
push
pushf
jo
dec
cld
pop
or
fstpt
xor
outsl
xchg
fcmove
fstl
xor
orl
enter
insb
push
imul
push
fists
xlat
jnp
into
cwtl
xchg
subl
nop
repz
or
test
cmp
mov
addr16
and
mov
and
mov
pop
jl
dec
xor
push
and
je
or
sbb
arpl
cmp
fisttpl
fcomi
adc
cmc
xor
aam
clc
fisubl
fidivl
testl
hlt
fldl
out
std
dec
fldl
sahf
iret
mov
mov
fisttpl
fninit
insl
xor
cmp
sbb
icebp
xchg
ret
cmp
dec
dec
jecxz
xchg
fildl
repz
aam
and
jae
cmp
lret
dec
push
arpl
dec
or
cmpsb
dec
and
fsubs
fcoms
inc
mov
jne
xchg
mov
cmp
sti
scas
dec
loopne
sbb
dec
push
mov
inc
mov
xor
stos
out
hlt
pop
lea
adc
sbb
call
out
in
les
sbb
xor
fisttpll
loopne
pop
dec
imul
fstps
stos
fisttpl
test
sub
pop
cs
xchg
sbb
negl
fwait
cltd
lret
push
or
xchg
cltd
pop
into
sbb
bswap
mov
mov
sbb
ret
es
mov
jle
jg
push
sti
out
lret
and
lods
or
out
icebp
or
in
cmp
mov
es
enter
jae
pop
addl
out
pusha
jg
das
data16
fs
jmp
xlat
xchg
xchg
xor
pushl
sbb
push
mov
xchg
outsl
andl
pop
or
cltd
and
mov
xor
out
ja
and
test
xchg
das
notl
jo
mov
xchg
repz
jnp
mov
jnp
ds
daa
inc
aad
sbb
xchg
xor
addr16
push
pop
arpl
or
and
mov
sbbb
sahf
repz
shr
mov
sbb
push
dec
mov
insl
cmp
or
lahf
pinsrw
add
daa
xchg
pop
outsl
pop
mov
rorb
leave
sub
stos
push
clc
sub
sti
and
fisttps
movsb
andb
shlb
std
push
fcomps
cmp
ja
or
or
idiv
andb
adc
inc
adc
insl
loop
push
in
into
fucomip
int3
cmp
inc
stos
testb
jbe,pt
push
push
xor
cmp
pop
inc
outsb
mov
push
ffreep
fstpt
mov
popa
jnp
cltd
xor
inc
fs
outsb
push
aas
insb
cmp
ret
fistpl
pop
andl
sbb
pop
in
out
cmc
mov
sub
sbb
pop
xlat
cmpsl
push
dec
stos
loope
out
cmp
sub
in
and
ja
push
cwtl
rolb
inc
lods
insb
out
inc
add
dec
stos
rcll
inc
or
sbb
addr16
inc
mov
jmp
sbb
inc
and
aam
rorl
push
adc
call
ja
jle
mov
fnstcw
jl
sbb
push
lahf
jle
out
outsb
mov
and
dec
sbb
daa
cmp
fwait
pop
test
xchg
lret
jmp
iret
sbb
xchg
mov
out
sub
sub
int
in
pop
adc
sbb
mov
mov
pop
xchg
lret
mov
enter
fnstsw
aas
jmp
icebp
hlt
fsubrs
pop
mov
scas
ds
dec
adc
jecxz
cmp
gs
sub
popa
repz
mov
ja
push
xchg
sbb
imul
mov
sub
push
mov
sbb
cmp
test
lahf
out
insl
addr16
fsts
fs
pop
sbb
inc
push
pop
imul
into
dec
pop
jae
shl
shr
jecxz
mov
fldt
mov
aam
out
push
jmp
xor
mov
pop
nop
sub
sahf
cmp
inc
push
out
divb
je
adc
mov
cmp
mov
pushf
pushl
adc
imul
dec
pop
push
outsb
pop
mov
xor
push
je
daa
sub
movsb
jnp
dec
out
stos
or
dec
sbb
int3
sub
mov
add
out
lret
or
xchg
xlat
mov
aam
xor
jmp
pop
sbb
sub
mov
bound
pop
jnp
stos
cmp
mov
fidivs
xlat
repnz
push
into
cmp
jnp
lret
fcmovne
cmc
push
pop
lcall
fldt
mov
fistl
xchg
and
or
pop
fisttpl
shrl
leave
and
out
iret
out
sbb
shll
les
fisttpl
repz
cmp
fisttps
lcall
push
cmp
lret
pop
popa
jmp
and
fsubs
js
fstpt
push
mov
pop
pop
push
shl
sbb
xor
dec
push
add
inc
mov
inc
and
inc
imul
jmp
lods
test
fwait
pop
popa
pop
adc
pop
inc
mov
out
gs
fists
jnp
jecxz
outsl
mov
sbb
lea
mov
lcall
or
pop
out
fisttps
and
inc
stos
pusha
xchg
in
into
cmp
movsb
lea
adc
mov
jnp
les
cmp
pop
xlat
dec
lock
out
mov
sbb
inc
add
pushf
repz
mov
xor
mov
pop
pop
jb
jae
imul
xchg
adc
mov
jbe
sub
dec
sbb
xchg
jmp
jnp
imul
pop
iret
out
adc
mov
push
notb
dec
lret
lret
jne
sub
sar
xor
mov
daa
xor
shll
jmp
fcmovne
add
push
dec
aam
xchg
dec
in
lahf
push
cmp
xchg
mov
xlat
mov
aas
push
inc
in
cmp
fistps
push
mov
jge
jge
imul
sbb
xlat
jnp
mov
push
lock
lock
or
pop
push
out
in
shrl
jmp
mov
andl
jo
cmc
imul
cmp
lret
and
outsl
shlb
fsubs
enter
jmp
mov
push
inc
jle
in
outsl
xchg
es
mull
shrl
fwait
xchg
das
push
mov
or
scas
dec
inc
stc
fisubrl
push
jno
rcrl
pop
aas
loope
cmp
lock
sub
out
lcall
inc
iret
jge
pusha
push
fwait
out
or
and
push
xchg
cld
inc
clc
mov
fldt
fs
and
fwait
sti
lret
push
loope
test
jmp
pop
and
enter
pop
in
movsb
jmp
repz
adc
and
inc
and
inc
jbe
das
sbb
fildl
inc
repz
jg
stos
jns
addb
out
lret
inc
cmp
in
push
cmp
in
and
xor
xor
jecxz
sub
push
inc
leave
cmp
out
jecxz
aam
add
out
cli
cmp
pop
push
and
movsb
fwait
es
outsb
jmp
mov
andb
fisubl
out
loopne
cmpsl
vmaxps
pop
out
mov
sub
test
fwait
pop
out
cmpsl
xor
jno
sub
mov
xchg
daa
or
shrd
shrb
hlt
inc
mov
test
pop
movsb
cwtl
push
scas
jecxz
xchg
adc
ret
pop
pusha
orb
push
jg
dec
popf
jae
jecxz
jecxz
aad
jg
inc
fnstenv
cmpsl
out
inc
pop
imul
cmp
mov
outsb
addr16
pop
pop
scas
fldt
bound
or
data16
dec
pop
insb
and
lods
ja
ret
jnp
jge
adc
jb
sub
cmp
jnp
bound
pop
lret
sbb
pop
out
inc
stc
sbb
jae
push
test
decl
notb
repnz
pop
xor
fstpt
outsl
imul
push
cmp
inc
aaa
pop
xor
aad
jnp
pop
mov
cwtl
shll
pop
repz
pop
xor
adcb
iret
imul
pop
or
mov
xor
outsb
xor
fisttpl
movq
xor
mov
cmpb
hlt
fninit
rcll
cmp
mov
inc
je
xchg
and
mov
cltd
iret
xor
fwait
cltd
int3
lods
nop
pop
or
mov
out
jle
xchg
pop
jl
int3
pop
or
xchg
fadds
in
faddl
add
cmc
inc
fwait
xchg
hlt
aas
fcos
jae
in
cwtl
fcomip
outsb
push
xchg
out
fidivrs
push
jge
test
aas
jp
andb
sub
into
inc
and
pslld
inc
dec
inc
mov
push
in
push
and
push
push
lret
orb
and
fistpl
inc
push
std
lds
ds
jecxz
dec
mov
call
out
ss
inc
dec
sbb
fwait
adc
dec
repz
inc
xor
cmpsl
jns
int3
leave
lds
mov
sub
jno
mov
dec
xchg
inc
pop
push
xor
and
add
jmp
out
scas
inc
out
cltd
out
hlt
inc
fistl
mov
pop
pop
aas
and
jecxz
out
push
dec
sbb
cmp
mov
out
cmp
shr
pop
es
push
or
push
pop
pop
mov
aas
jo
imul
out
xchg
xor
repz
mov
fcomps
mov
push
cmp
sub
cmp
pushl
movsb
dec
sbb
shld
fmuls
shr
shll
mov
iret
movsb
pop
xlat
arpl
mov
pop
lods
jns
jae
pusha
pushf
xlat
sub
or
sub
mov
out
jecxz
xor
jo
jl
ja
rolb
scas
shrl
mov
pop
mov
rorl
aam
and
jbe
push
pop
or
mov
and
pop
mov
std
inc
adc
dec
daa
jmp
lock
push
ret
icebp
push
pop
stos
insl
pop
movsl
in
daa
pop
cmc
inc
inc
jp
repnz
and
addr16
push
sti
mov
dec
lock
loope
fildl
push
icebp
pop
adc
xchg
clc
fsubl
xor
les
xlat
jb
mov
xor
push
imul
in
sti
js
xor
sub
leave
out
push
pop
insl
pop
cmpl
push
cltd
daa
fldt
sbb
cmp
lret
sub
lret
jmp
movsl
xchg
and
dec
sbb
and
test
fldenv
fstpt
xlat
sub
sub
xor
jg
stos
dec
cmp
mov
inc
shl
jae
ficompl
xchg
aas
adc
popa
loopne
mov
xchg
inc
repnz
lods
inc
in
pop
push
sub
lret
xchg
inc
lea
pop
enter
loopne
repnz
mov
and
je
push
rcl
arpl
aas
pop
sub
ja
ja
or
daa
adc
mov
outsl
adc
dec
cmpsl
fistl
out
dec
fdivp
inc
enter
into
cmp
pop
sub
outsl
inc
daa
ret
mov
xor
add
dec
ret
xchg
pop
jnp
inc
in
mov
les
dec
in
mov
fstpl
jne
push
push
xchg
sub
pop
pop
dec
fistpll
and
mov
fcmovnb
inc
roll
out
cltd
inc
inc
das
in
imul
push
aas
fwait
xchg
and
cmp
outsl
movsb
sub
filds
sarl
fwait
out
inc
mov
imul
sti
sbb
and
or
into
ffreep
or
jmp
pop
iret
mov
sbb
xchg
fstps
and
ret
push
mov
popf
addr16
das
mov
imul
or
shlb
outsl
mov
sub
mov
mov
dec
mov
or
hlt
sbb
inc
xchg
add
push
xor
cmp
adc
adcb
dec
inc
add
dec
aas
lods
arpl
fldcw
into
iret
pop
fistps
test
jmp
pop
outsb
and
push
ja
pop
rcll
aad
cmpsl
jmp
xchg
add
adcl
out
in
aas
lods
mov
xchg
xor
addr16
mov
aas
repz
cli
out
faddl
mov
push
lret
push
icebp
add
mov
ljmp
mov
arpl
cmpsl
in
out
lock
push
adc
arpl
cwtl
sbb
fwait
xchg
cwtl
cmp
sub
rcll
xor
fistl
xor
sbb
dec
fistl
shr
cmp
pop
mov
fildl
call
fadds
ja
rcll
or
xchg
inc
cltd
pushf
sbb
aad
add
adc
in
mov
outsb
mov
fbld
push
add
cmp
shll
dec
inc
cmp
xchg
pop
jp
inc
pop
cltd
cmc
incl
cmp
xchg
mov
imull
sub
xchg
shlb
repz
or
xchg
test
jne
fisttpl
out
mov
pop
mov
hlt
cwtl
lock
mov
repz
mov
mov
dec
lret
ja
cmpsb
imul
push
pop
push
push
cwtl
clc
xchg
das
repz
sub
pop
cmp
or
inc
pop
std
fldt
scas
xorl
jno
pop
lds
in
sub
mov
fwait
cmp
sbb
ret
inc
inc
mov
int3
add
repnz
ret
xor
jp
lods
mov
fcomps
xchg
outsb
sub
mov
cmp
fildl
ljmp
sub
inc
popa
fisttpl
rorl
out
xchg
adc
cmp
adc
push
fwait
mov
mov
and
data16
push
jbe
mov
inc
int3
add
inc
ja
xor
jecxz
cmp
sbb
push
fs
js
outsl
xchg
sarl
push
push
jns
sbb
fst
fiaddl
movsl
sub
sbb
arpl
cmp
iret
lea
filds
xchg
inc
fwait
test
in
cmp
stos
add
iret
movsb
test
adc
scas
fisttpll
sbb
pop
add
add
or
aaa
insb
jmp
addr16
fwait
lret
xor
jl
dec
jno
repz
fistl
push
lret
inc
jmp
movsl
in
pop
das
ljmp
lea
imul
shlb
pop
int
out
cmpsl
sbb
jecxz
bound
push
int
into
int
xchg
cmp
jbe
jno
xlat
cli
das
insl
repz
dec
jp
cmp
out
pop
test
jl
push
and
rolb
call
out
arpl
testl
sub
mov
pushf
idiv
outsl
fucomi
pop
sub
pop
fs
rorl
pushf
outsl
aaa
push
or
cmp
dec
fistl
xor
iret
imulb
mov
nop
out
les
fisttpl
push
mov
dec
push
sub
inc
mov
adc
shr
shll
test
into
out
iret
jmp
sti
movsl
xchg
jmp
shll
arpl
inc
cmp
cltd
sub
into
fistpll
mov
js
and
punpckhbw
push
orl
push
push
out
lret
nop
testl
aad
mov
dec
jno
shlb
jmp
mov
lret
daa
jb
jns
negl
lods
stos
aas
jmp
rcr
pop
les
mov
xorb
je
lock
into
cmc
outsb
mov
add
push
jmp
xor
push
push
or
jb
mov
lds
jg
cmp
pop
lea
jnp
lahf
out
je
xor
ret
inc
vphaddbq
mov
mov
outsb
inc
stos
daa
mov
pop
or
add
pop
push
mov
js
add
mov
mov
mov
and
sub
daa
and
jecxz
sub
aad
inc
jmp
cmpsl
inc
dec
pushf
inc
loop
dec
scas
dec
jle
fidivl
mov
push
jecxz
dec
pop
cmpsl
adc
out
sub
negl
sub
pop
inc
cmp
adc
inc
xor
mov
sbb
cmp
jecxz
call
or
adc
cwtl
cmp
test
iret
inc
fst
rorb
inc
xchg
or
mov
cmpsl
data16
cmpsb
dec
fisttpl
clc
shll
sub
lods
aam
ret
mov
push
mov
fsubs
pushf
mov
xlat
xchg
into
test
rol
ret
out
pop
xor
pop
popf
xchg
push
cmp
jnp
jmp
push
dec
addr16
push
jmp
inc
mov
dec
leave
inc
add
in
sub
mov
call
push
cmpsl
sbb
fmull
xlat
lret
ffreep
and
pop
jbe
in
into
jecxz
xlat
leave
sub
jo
mov
pop
shll
push
pop
into
and
lahf
push
lahf
xor
lahf
popa
lret
dec
lret
addr16
mov
or
add
pop
imul
aas
not
add
push
fisubs
into
out
cmp
pop
jmp
push
inc
inc
dec
cmp
xchg
repz
call
out
out
inc
mov
cmp
fildl
xchg
popf
mov
pop
sbb
icebp
fistpl
js
and
ja
pop
pop
cmp
mov
cwtl
les
jbe
dec
outsl
jnp
rorb
xor
and
push
sbb
push
mov
push
fistps
in
xchg
or
and
es
ljmp
cmp
xchg
lret
mov
jle
filds
push
cli
xchg
fimuls
ljmp
jb
inc
xchg
sub
pop
inc
or
inc
stc
and
sub
sub
sub
ljmp
fildl
xchg
xchg
fwait
test
jl
jbe
lret
out
repz
jge
leave
pop
add
add
rcrl
lret
ljmp
sbb
and
ret
lods
push
inc
arpl
inc
fldt
arpl
xchg
fisttps
aam
das
or
repz
test
mov
xor
pusha
pop
jnp
dec
push
mov
aas
inc
insb
out
adc
mov
stos
mov
xchg
pop
mov
push
jno
adc
je
dec
pop
jne
cltd
dec
push
mov
or
sbb
mov
movl
insl
jmp
mov
sbb
out
sbb
inc
jecxz
mov
inc
and
jecxz
popf
inc
in
push
fwait
lods
inc
in
jecxz
or
stos
fnsave
mov
je
cmp
sub
jp
repz
sarl
aas
daa
test
sub
outsb
in
out
lds
out
fistpl
pop
test
push
lret
inc
mov
into
jnp
dec
test
add
pop
aaa
outsb
sub
movsl
mov
mov
xchg
mov
aam
aad
inc
inc
pop
and
adc
cmp
or
idivb
sbb
jl
mov
cltd
push
mov
and
sub
fs
mov
arpl
das
out
and
iret
ja
outsl
enter
scas
cwtl
sub
lahf
adc
sub
mov
or
mov
pop
xchg
in
test
imul
addr16
push
cmp
xor
push
push
dec
js
iret
clc
scas
ja
inc
push
inc
rcr
xor
fadd
repz
enter
inc
sub
daa
imul
push
fwait
mov
sti
sbb
and
cmp
add
mov
daa
fcomps
enter
pusha
daa
dec
xor
syscall
ret
dec
shll
xchg
or
out
and
push
insb
inc
mov
inc
imul
aaa
call
pop
inc
and
pop
sti
orl
subl
popf
jnp
push
nop
outsl
sub
mov
repz
cmp
xchg
mov
fisttpl
fs
cmp
ficoms
jnp
push
add
lret
sbb
lds
out
jg,pt
stc
jmp
fistpll
ss
mov
mov
inc
jno
sti
mov
sbb
lret
sahf
in
repz
shr
mov
arpl
inc
mov
xchg
xor
inc
cwtl
fld
cltd
cmpb
mov
inc
lea
in
adc
sbb
xchg
add
das
jbe
pop
sub
rolb
jo
cmpsl
enter
mov
push
outsl
jge
dec
inc
clc
jae
mov
je
filds
mov
pop
lahf
inc
outsl
adc
jae
inc
lret
pop
inc
sbb
shrl
and
or
pop
mov
repz
inc
fistpl
mov
fildl
or
push
sti
icebp
sbb
xchg
mov
cltd
pop
fstl
push
push
fwait
add
pop
pushf
and
lret
ret
push
aad
in
and
call
sub
mov
in
mov
ror
pop
xor
mov
and
mov
ja
sub
mov
mov
imul
xorb
scas
sarb
movsl
in
imul
ja
loop
aaa
pop
sub
xchg
int3
and
rol
inc
jb
arpl
push
jmp
sbb
adc
mov
outsb
and
addb
comiss
js
mov
mov
aam
xchg
int3
iret
dec
into
in
xor
lret
lahf
fisttpl
ja
adc
mov
rorl
andb
xchg
fisubrl
jns
jmp
jle
hlt
mov
lret
pop
mov
subb
xor
xchg
cmp
into
inc
and
lock
xchg
lcall
cmp
cmp
jmp
fisttpl
inc
sub
xor
pop
pop
ja
jnp
dec
inc
jne
push
jae
sub
aaa
push
cltd
or
xor
cwtl
inc
inc
mov
push
jecxz
cmp
fistpl
add
les
jecxz
xchg
ret
insb
xchg
ret
rcr
shll
mov
mov
xchg
jecxz
xchg
jp
dec
xchg
and
mov
lea
pop
jb
inc
pop
and
xchg
and
jnp
and
mov
sub
aam
pop
add
fcoms
sbb
fistpl
push
inc
xlat
pop
mov
daa
mov
and
xchg
xor
mov
mov
mov
shrl
dec
inc
repz
test
xchg
sbb
push
int
and
dec
pop
jecxz
mov
cmp
push
push
sbb
popl
ret
lahf
cwtl
das
fists
cmpsl
rcll
pop
xor
fwait
aaa
dec
inc
push
and
out
jnp
dec
mov
jae
pop
adcl
jb
rorl
lods
inc
jmp
inc
out
call
or
dec
mov
mov
divb
cmp
stc
ljmp
dec
stos
jns
inc
mov
pop
in
push
push
push
dec
scas
mul
dec
pop
fnstsw
ljmp
fildll
fiadds
out
dec
or
inc
pop
out
inc
inc
ljmp
sbb
xchg
sub
jmp
mov
pushf
xchg
push
mov
out
inc
jne
xor
inc
xchg
sbb
popf
ret
xchg
inc
fistl
aam
in
mov
gs
int3
xchg
pop
cmp
push
xchg
mov
lea
insb
out
subl
out
xchg
aam
xchg
movsb
jl
adc
mov
mov
test
stos
popf
lahf
ret
iret
sub
mov
ret
or
ds
lea
dec
fstpt
sub
and
dec
cmp
cmp
xchg
aaa
aam
sti
mov
sub
div
xchg
lret
movsl
stos
adc
pop
or
pop
inc
mov
lds
call
push
xor
iret
popa
cltd
pop
dec
jns
popf
jnp
mov
pop
pop
xchg
jmp
push
stos
lds
mov
lods
pop
cmpl
aaa
xchg
test
push
fs
in
push
xchg
not
sub
shr
jnp
lcall
push
xor
mov
pop
mov
cmp
mov
out
jns
mov
sub
pop
cmp
pushf
repz
cmp
imul
inc
or
cmp
mov
and
and
ja
rcrl
xchg
lahf
sub
sbb
cld
push
ds
adc
and
lahf
imul
out
lahf
fstpt
mov
xor
xor
mov
cmp
fwait
outsl
or
pop
in
jl
xchg
jnp
sub
jg
and
sbb
inc
loope
mov
cmc
in
xchg
mov
outsb
cmc
fistpl
push
in
out
xchg
fcomps
cmp
ds
dec
push
mov
dec
call
xlat
push
xchg
sub
mov
mov
out
repnz
push
adc
mov
mov
xchg
lret
into
pop
subl
and
pop
stos
xchg
fwait
stos
lea
scas
mov
sbb
daa
lea
inc
nop
pop
mov
testl
sub
aad
fstl
test
mov
dec
mov
je
aas
and
aam
icebp
sbb
aas
jl
mov
add
outsl
aam
pop
scas
jno
add
push
in
fistpl
lar
sbb
pusha
sub
sti
enter
psrlq
subl
jbe
stos
pop
push
mov
or
icebp
dec
xor
loope
sub
clc
and
dec
js
pop
mov
out
ljmp
into
mov
cmp
dec
fstl
xor
ss
sbb
mov
arpl
cmpsl
lahf
shr
and
push
mov
adc
in
out
aam
xchg
clc
xchg
mov
cwtl
sbb
int
push
scas
lock
jae
sbb
dec
or
xchg
fldt
test
daa
inc
mov
adc
fildll
push
fstpt
push
xchg
stos
outsl
jns
in
inc
mov
dec
repz
sub
sbb
iret
sub
sub
imul
push
inc
push
fildl
imul
ds
push
andb
lret
sbb
daa
and
aad
out
fstps
movsb
add
js
xchg
repnz
insb
sbb
xorl
adc
sub
leave
xchg
mov
xchg
out
popa
xchg
pop
xchg
mov
xchg
jmp
aam
cwtl
jmp
mov
jle
sti
add
push
sbbl
xchg
jmp
jnp
xor
mov
dec
mov
pop
push
mov
addr16
pop
mov
icebp
pop
mov
inc
xchg
rorl
xchg
xor
xor
mov
daa
icebp
rcr
and
push
jae
jge
insb
xchg
scas
cmp
sbb
or
cs
jo
pop
xlat
rorb
mov
sbb
jo
into
stc
fiadds
fwait
xlat
mov
outsl
push
in
jae
rol
xlat
imul
stos
ret
xor
pop
dec
xchg
scas
popl
mov
sbb
inc
gs
fbstp
int3
call
fbstp
xchg
dec
stos
inc
add
push
inc
fidivs
sti
mov
dec
cmp
in
in
cmpsl
jecxz
aas
insb
testl
jecxz
cltd
cmp
xor
jg
sub
pop
xchg
xor
adc
pop
jg
cltd
sub
push
fisubrl
scas
in
fists
dec
pusha
out
pop
cwtl
dec
in
jne
xlat
add
push
scas
aad
sub
bound
push
mov
fisttps
jnp
cmp
dec
inc
loopne
xchg
sbb
test
repz
iret
sub
jmp
mov
repnz
sti
and
pop
mov
push
mov
dec
mov
mov
out
cmp
pop
lret
fcmovne
xchg
adc
jno
cltd
pop
jp
adc
loope
out
lds
lods
fldt
jecxz
xchg
mov
jns
mov
rcrl
pop
es
pop
sti
xchg
or
and
mull
fsubp
inc
ljmp
lret
sbb
daa
fucomip
repz
cmp
cmp
iret
es
mov
fcomip
add
xor
jle
jmp
and
xor
xchg
dec
xchg
mov
pop
dec
lret
sub
call
repz
mov
mov
movsb
mov
aad
fistl
in
mov
mov
cs
mov
jns
movsb
xchg
fists
daa
mov
pop
xor
stos
xlat
aaa
in
inc
lret
or
ds
push
out
jge
arpl
mov
test
inc
in
std
das
jle
cmp
sub
inc
push
mov
test
sbb
or
jecxz
xchg
aaa
in
push
sti
mov
mov
and
cmpsl
cmp
and
rorl
cmp
push
imul
je
mov
jne
fcompl
xor
in
out
pushf
outsl
xchg
imul
jnp
data16
aas
outsb
nop
roll
imul
pop
ret
cmp
loop
jae
dec
enter
nop
das
sti
aaa
xchg
sub
pop
xchg
sbb
sbbl
and
inc
or
addr16
adc
notb
and
xor
scas
adc
pop
rorb
repz
and
repz
cs
dec
sub
push
pop
xchg
mov
cwtl
sub
xor
add
mov
mov
fldt
jno
jp
dec
sar
mov
shll
das
dec
cmp
out
insb
add
or
fwait
rorb
test
xlat
mov
out
pop
jecxz
or
lahf
jecxz
insb
push
in
repz
pop
jge
xchg
nop
push
idivl
addl
and
ffreep
push
movsl
daa
dec
inc
cmp
fs
mov
js
pop
and
addps
jecxz
xor
pop
or
scas
and
inc
jecxz
repz
lods
pop
jp
mov
pop
jmp
inc
mov
fcmovne
inc
xor
adc
xor
xchg
inc
jne
scas
pop
sti
out
repnz
cmpsl
push
push
addr16
mov
add
fadds
fildl
in
notl
pop
adc
ret
push
ret
and
adc
sbb
fdiv
mov
add
lods
push
jnp
loopne
repz
fildl
xchg
pop
xor
fwait
aas
pop
pop
mov
adc
insl
fisttpl
jecxz
insb
ret
mov
pop
jg
aaa
adc
mov
ficoml
xor
filds
push
jnp
sub
and
push
jg
arpl
sub
cmp
or
int
mull
in
fisttpl
icebp
sahf
repz
inc
lods
push
inc
lret
xor
push
inc
addr16
hlt
mov
repz
inc
dec
test
fisubrl
sbb
xchg
aas
mov
xchg
xchg
mov
sbb
push
mov
jge
xchg
sbb
stos
xor
xlat
sbb
jg
push
cmpsb
loope
ja
arpl
lret
xchg
hlt
sti
pop
adc
add
cld
ret
mov
ds
insb
inc
add
out
lret
cmp
dec
xor
jl
push
fs
fs
push
mov
aaa
pop
cltd
fninit
aas
in
or
or
cmp
sbb
sbb
dec
ja
je
lods
ret
int3
inc
into
mov
shrl
mov
xchg
rol
ror
pop
pop
xchg
push
iret
jb
iret
movl
dec
mov
mov
add
xor
sbb
pop
testl
xchg
test
pop
pop
cwtl
jmp
add
addr16
fists
mov
decl
decb
jg
push
cmpsl
mov
xchg
mov
jge
fwait
sub
repz
frstor
push
dec
icebp
fsts
testl
cmp
pop
scas
outsb
or
hlt
mov
inc
test
sub
jl
jmp
xchg
arpl
in
jle
or
cwtl
pop
aam
scas
scas
imul
fwait
push
jo
ret
or
jno
out
ror
lods
sub
sbbl
mov
mov
popf
das
sbb
sbb
adc
nop
xor
add
mov
jae
div
adc
jp
mov
xor
popa
rorb
sub
mov
mov
cs
rcrl
psrlw
jae
repnz
dec
shl
rolb
test
dec
add
pushf
xlat
xchg
sti
arpl
imul
jge
pop
andb
dec
pop
push
stos
icebp
cmc
push
push
xchg
xchg
fildl
aas
lret
sti
jae
in
sbb
sub
pop
sub
jnp
imul
push
jmp
stc
and
lret
xchg
inc
pusha
xchg
or
clc
dec
dec
sarl
mov
pop
jg
jecxz
sbb
jae
mov
stos
dec
inc
je
xchg
test
pop
insb
and
pop
xchg
pop
push
js
scas
pop
out
inc
imull
daa
inc
js
fstpt
fsubr
cmp
les
test
pop
stos
call
fildl
xor
xchg
repz
push
mulb
call
cli
fstpt
inc
out
inc
mov
popf
pop
xchg
ret
arpl
cmpsl
pop
adcl
out
and
stos
inc
or
pop
adc
fnstsw
mov
imul
scas
mov
int3
mov
out
xor
sbb
iret
xchg
mov
rorb
and
iret
mov
popa
pop
movsb
test
sub
hlt
arpl
movsl
jle
movsb
cs
add
sbb
jno
sbb
outsl
push
cltd
adc
pop
dec
test
cltd
cmp
mov
adc
das
dec
xlat
mov
jmp
xor
jp
iret
aad
sub
data16
cmp
ja
mov
into
pop
int3
andl
inc
xchg
pop
repnz
addr16
aam
scas
ja
jb
or
aas
adc
clc
das
cwtl
push
inc
and
adc
mov
lret
pop
stos
dec
lret
gs
pop
jle
mov
cmp
add
sub
sbb
outsl
inc
rorl
and
inc
jae
dec
xchg
in
aaa
mov
mov
xor
loope
sub
push
and
pop
in
out
dec
or
popa
and
stos
ret
ja
adc
fldt
data16
pop
sbb
jl
and
addr16
call
fwait
xchg
cmp
stos
push
adc
jo
das
mov
outsb
cmp
shrl
push
ss
sti
jp
xchg
or
fcmovne
inc
fst
into
xchg
mov
mov
jne
and
and
xor
inc
sbb
cmpsl
push
ds
roll
inc
fisubrs
aas
shr
xchg
xchg
ds
dec
stc
pop
jg
mov
and
popf
out
mov
jg
daa
jge
or
and
cmc
popa
cmp
push
dec
cmc
cmp
cwtl
sub
and
aam
je
and
jge
arpl
arpl
mov
pusha
dec
sbbl
xor
pop
mov
lar
cmpsl
in
jmp
xlat
lcall
sub
popa
cltd
xchg
pop
push
pop
shll
lea
push
jp
cmp
push
cmp
lea
cmp
outsb
repz
das
dec
stos
je
mov
inc
aas
daa
les
cmp
fldenv
push
insb
out
stc
fisubl
lahf
dec
daa
xor
out
inc
push
addr16
add
pop
xchg
sub
sbb
dec
cmp
and
fbld
fcmovne
add
cmp
repz
and
cmp
dec
loope
add
mov
popa
test
pop
xchg
xchg
stos
dec
dec
xchg
cmp
inc
mov
xor
sub
cmp
pop
inc
add
test
xchg
adc
stos
lea
jbe
adc
xchg
cmp
cmpsb
into
mov
fwait
out
mull
cmpsl
sub
jnp
dec
ljmp
out
mov
shrl
sub
xor
mov
adc
or
scas
mov
cmp
pop
add
inc
outsl
int3
jnp
nop
popf
das
shl
pop
adc
arpl
ja
jl
mov
pop
jae
insb
sbb
xchg
mov
dec
cmp
dec
cmp
or
mov
add
and
mov
or
movsl
sbb
or
fisubrl
aam
pop
mov
decl
int
in
mov
mov
das
inc
dec
dec
lea
jae
fildl
aam
outsl
lods
addb
fwait
enter
jnp
mov
sti
mov
idivl
inc
sbb
pop
sub
leave
les
xchg
mov
ret
int
xchg
lods
jecxz
lret
rsm
ret
xor
cwtl
sbb
xchg
xchg
lret
sbb
flds
aaa
adc
xchg
sbb
inc
push
add
push
cmp
inc
and
jle
mov
arpl
xchg
jg
push
fbstp
bound
js
ljmp
aas
test
shlb
dec
out
aas
aam
push
das
stos
xchg
pop
xchg
cmp
dec
fwait
out
and
sub
cmp
and
pop
add
pushf
jg
jne
xchg
enter
ret
xchg
jb
cmp
pushf
sahf
gs
clc
mov
xchg
mov
and
xchg
cs
arpl
cmp
ss
xchg
imul
jmp
xchg
or
in
movsl
push
scas
and
pop
xor
mov
addr16
xor
fwait
std
fistl
sub
mov
push
neg
jge
xchg
std
jecxz
out
loop
push
push
je
inc
lock
pop
daa
not
outsl
negl
out
sti
cmp
mov
fcomi
lahf
jl
inc
fcompl
stos
ja
pop
dec
push
aas
mov
inc
xchg
sub
es
and
lcall
jecxz
and
pop
xchg
push
cld
adc
jmp
fldl
out
pop
adc
and
inc
jp
pop
gs
out
dec
sbb
and
jmp
jp
cmp
sub
fldt
dec
repz
mov
lret
inc
jnp
mov
push
xchg
jl
sub
cwtl
dec
jecxz
pop
iret
fsubrs
mov
mov
ret
adc
xchg
sbb
loopne
fistpll
adc
mov
xor
or
sub
int3
out
enter
jae
mov
dec
icebp
xchg
shlb
cmp
movsl
outsb
test
sbb
movsl
xchg
sub
sti
pop
shrl
and
jmp
jbe
rcr
xchg
or
mov
imull
xchg
pop
mov
fildl
addr16
jae
fcmovne
ret
insb
fdivrp
mov
dec
arpl
jne
out
pop
dec
inc
mov
and
push
cld
out
cld
jecxz
repz
adcl
ficompl
fwait
shll
pop
xchg
sub
sub
sbb
dec
inc
xchg
outsb
pop
or
inc
rcll
adc
mull
sarl
jp
pusha
xor
enter
sub
fwait
mov
push
pop
xchg
sub
aad
xor
fistpl
maxps
push
fcmovnb
jb
pop
mov
pop
ljmp
or
adc
pop
mov
adc
nop
aaa
jecxz
stos
sub
sbb
fstps
psrld
push
fwait
xor
xchg
cmp
inc
das
jle
lret
out
ss
inc
scas
inc
fbld
setle
mov
outsl
ja
aam
mov
xchg
hlt
jnp
rorl
push
add
pop
popa
adc
lds
adc
cwtl
jecxz
xchg
pop
inc
loope
pop
mov
sbb
jecxz
xchg
fistps
pushf
outsl
jmp
jge
rcr
dec
cmp
mov
mov
repz
icebp
mov
push
pop
test
pop
pop
jae
movsl
mov
cmp
lcall
out
or
sar
aad
ja
loop
sub
pop
mov
ret
jg
sarl
pop
xchg
hlt
dec
arpl
mov
mov
cmp
lahf
mov
iret
repz
sbb
test
fs
dec
xor
out
jbe
fisttpl
scas
les
sub
inc
sti
jne
fcmovne
pop
add
jbe
jnp
popa
push
mov
adc
fwait
cmp
ljmp
jmp
dec
or
fbld
sbb
sbb
aaa
pop
push
xor
test
repnz
push
lods
gs
aaa
fisttps
push
adc
xor
jne
cmp
pop
xor
jb
mov
dec
mov
xor
add
cmp
mov
or
add
sbb
rorb
pushf
sbb
sti
jecxz
xchg
cmp
out
lret
sub
arpl
iret
shrl
dec
adcl
fistl
outsb
cmp
daa
sub
mov
in
mov
int
movsb
repz
cs
mov
out
lock
fsubl
fsubrl
call
mov
fbld
lret
cmp
mov
dec
rol
cmp
cmp
inc
js
inc
ss
in
lahf
mov
adc
cmp
leave
mov
dec
ret
cmp
or
mov
sbb
mov
aaa
add
stos
scas
jmp
aas
aad
pop
mov
cmp
jg
or
cmp
sbb
int
aam
fwait
mov
bound
mov
xchg
cmc
fstpl
xchg
push
sti
out
jp
pop
mov
dec
add
aas
jae
jl
enter
int
leave
jbe
daa
lea
mov
mov
inc
sbb
xchg
in
xchg
mov
sbb
or
jae
movsb
adc
iret
sub
push
and
pop
sbb
loopne
out
sti
clc
fidivrs
xchg
jmp
dec
in
int
fs
cmp
pop
pop
mov
push
mov
dec
or
orl
mov
pop
mov
arpl
and
mov
push
sub
or
mov
in
divl
cmc
icebp
enter
repnz
mov
scas
push
cmc
cmp
out
daa
dec
es
sbb
xorl
arpl
adc
xlat
call
mov
aas
xlat
sbb
ljmp
sbb
jbe
popa
mov
lret
xchg
jmp
jg
or
inc
mov
insl
sub
mov
out
test
out
xor
inc
rclb
ja
push
out
inc
lcall
out
stc
inc
out
and
vmwrite
mov
push
sbb
jmp
push
push
push
dec
sbb
cmp
cli
sub
inc
out
xchg
scas
fcmovnu
add
movsb
mov
inc
sub
xlat
cmpsl
inc
out
mov
cmpsl
cmp
inc
jae
xchg
push
gs
fbstp
es
insb
out
sbb
lea
mov
adc
sbb
cmp
popf
repz
jns
out
xor
fiadds
cmp
dec
add
int3
xchg
sbb
movsb
mov
sbb
sub
int3
sbb
cmp
cmp
pop
arpl
fnstcw
out
andl
notl
mov
inc
repnz
into
in
jo
daa
into
outsl
sub
mov
and
xchg
cmp
jmp
lahf
out
imul
xchg
sbb
rcrl
loope
pop
out
cmc
outsb
sti
jnp
ds
xchg
pop
repz
pop
icebp
in
ja
divl
int
scas
bound
scas
scas
fldt
gs
dec
lret
out
adc
mov
pop
movsl
outsl
jge
add
loopne
aas
fs
cmp
outsl
or
ljmp
sub
imul
aad
mov
and
pop
push
daa
inc
lcall
jmp
fidivs
aas
clc
repz
aas
pop
cmp
dec
daa
movsl
hlt
incl
or
repz
cmpsb
and
fildll
add
dec
fisttpl
mov
aas
pop
jp
push
pop
popa
pop
in
push
jae
or
sbbb
fyl2xp1
mov
loope
lret
test
xchg
jg
enter
sbb
xchg
sarb
addr16
stc
fisttpl
xor
jecxz
shll
rcl
xchg
shll
dec
popa
dec
pop
rcll
adc
fiadds
xchg
push
cwtl
mov
xor
xor
std
out
hlt
insb
ret
push
dec
pop
scas
and
not
das
pop
mov
and
jmp
sub
xchg
mov
fsubrs
pop
add
push
inc
mov
cltd
pop
jae
into
and
fldt
popa
frstor
inc
divb
and
push
lahf
xchg
mov
in
sti
lea
enter
fcomip
xchg
aam
or
push
invd
mov
cmpsl
testb
loop
and
mov
mov
in
adc
or
xchg
pop
or
fcmovnb
js
mov
jno
and
ja
push
lret
fwait
mov
mov
xchg
dec
test
in
sub
or
cmp
xor
mov
inc
inc
dec
out
pop
jecxz
repz
inc
stc
fisttps
lds
out
fstpt
movb
jae
lret
inc
pop
addr16
sbb
jnp
or
and
push
xor
jmp
mov
dec
inc
out
ljmp
test
out
sbb
in
stc
fbstp
ja
mov
add
cmp
dec
push
sti
pop
es
je
fildl
jo
pop
in
test
sub
or
pusha
inc
pop
cwtl
inc
out
push
xchg
jecxz
es
or
adc
inc
inc
lahf
add
ror
sbb
cmpsl
int3
lret
xor
cwtl
fistps
out
jne
lods
fdivrs
rolb
out
insl
fcmovnbe
pop
pop
shrl
inc
or
mov
cmp
fdivrs
pshufw
pop
dec
xchg
adc
xor
movsb
xchg
and
int3
xchg
mov
mov
mov
push
inc
sub
pop
out
lods
push
or
dec
pop
aad
inc
jae
push
sbb
mov
out
iret
push
jecxz
fildl
roll
jmp
fstps
mov
dec
pop
les
into
jae
aas
addr16
out
push
dec
pop
popl
xchg
xchg
cmp
inc
adc
repz
pop
jmp
inc
xchg
mov
pop
in
sub
adc
jmp
xchg
pop
fildl
push
mov
sbb
ljmp
cs
pand
xchg
jo
xor
or
xchg
mov
repz
lahf
fildl
jb
out
cmp
scas
call
push
fmuls
mov
mov
les
mov
leave
sub
adc
aas
in
or
xchg
aad
or
arpl
sub
mov
cmp
jae
ja
outsb
sub
andl
and
shll
stos
dec
inc
dec
rcll
mov
cmp
test
pop
dec
ja
outsb
jmp
clc
xchg
sbb
dec
test
xchg
sub
sub
jnp
rclb
stos
ret
sbb
dec
push
mov
setno
mov
call
mov
xchg
jnp
ss
cmp
jno
cmp
fwait
scas
idiv
loope
movsl
fbstp
pop
fstpt
mov
xchg
and
xor
jmp
dec
xchg
jecxz
inc
aaa
fs
fistpll
mov
jl
xor
aaa
pop
fs
xchg
jae
aam
adc
jecxz
push
mov
jp
add
pop
add
mov
xchg
dec
out
inc
fldt
fnstsw
push
ljmp
pop
dec
jae
or
xchg
imul
ret
jae,pn
inc
imul
xchg
lret
aas
fisttps
and
sbb
cmp
dec
fildl
and
mull
dec
or
add
xor
fld
inc
fnstsw
or
in
dec
pop
dec
in
mov
out
out
shl
movlps
cmp
daa
push
mov
sarl
sbb
add
push
sub
and
pop
jl
and
stos
pop
data16
dec
push
mov
mov
xor
sbb
movsb
into
inc
lahf
movsl
ja
jge
adc
ficompl
test
adc
roll
fwait
inc
movsl
xchg
sub
test
jb
jnp
outsl
push
lea
repnz
pop
imul
or
add
call
stos
pop
or
sarl
or
jbe
cmp
arpl
fwait
jecxz
notl
add
in
jb
push
outsb
xchg
xor
fistl
sub
xchg
sbb
push
out
sti
dec
cmp
xchg
andl
mov
sti
and
imul
imul
mov
enter
outsb
inc
fldt
cmp
lock
add
repnz
cmp
add
dec
loope
and
repz
pop
mov
jg
push
pushf
jp
push
mov
inc
dec
lcall
daa
jmp
mov
mov
xchg
adc
xor
sub
daa
inc
out
inc
out
push
ljmp
pop
pop
fsubs
fildll
mov
arpl
ja
arpl
ret
jae
jle
movl
xor
push
testb
mov
or
mov
sbb
ljmp
push
dec
icebp
or
jp
aas
xchg
adc
pop
add
dec
and
xchg
repz
mov
or
sub
and
bound
push
xor
dec
inc
stc
pop
jne
fistl
repnz
repnz
repnz
and
dec
inc
movsl
das
xor
adc
addl
pushf
stos
and
loope
or
insb
jg
in
mov
dec
repz
in
jb
pop
ja
mov
mov
fs
stos
xchg
sub
scas
into
shr
imul
xor
cmp
mov
xor
sub
jb
out
mov
lea
call
out
pop
aas
jae
sbb
pop
or
dec
aas
jg
es
adc
xor
mov
cmc
repz
mov
jnp
or
fstp
cmp
mov
sub
mov
inc
or
dec
dec
xchg
sarl
mov
sub
pusha
sbb
out
sub
jp
das
sbb
cmovle
loope
and
dec
adc
pop
out
mov
push
arpl
test
pusha
mov
mov
mov
rcrb
or
cltd
lret
test
ja
inc
bswap
ret
fisttps
aam
push
ret
test
ret
or
out
out
idiv
and
lahf
fisttpl
les
and
push
test
fwait
adc
testb
lods
xlat
sub
test
xchg
cwtl
aas
outsl
adc
pop
dec
inc
loopne
fld
xchg
mov
fs
test
repz
aaa
fisttpll
call
sub
addr16
jmp
lds
pop
xorb
cmp
imul
stos
xchg
mov
mov
daa
cmp
adc
adc
sbb
inc
negb
mov
push
daa
in
in
js
addr16
push
out
fcomi
push
mov
sarb
xor
fists
jb
fcmovnb
and
enter
popa
nop
in
dec
mov
jno
mov
jg
fcmovnu
addr16
xchg
sbb
ds
push
in
push
cmp
jnp
or
dec
push
stos
jns
jle
sub
shl
aad
mov
mov
cmp
data16
pop
fistpl
pop
adc
inc
xchg
fwait
xor
push
repz
fistpll
rol
jne
and
mov
movsb
inc
dec
sbb
push
mov
cmpl
mov
iret
dec
mov
ret
and
dec
push
rclb
cltd
pushf
pop
pop
rorl
xchg
push
inc
cmpsl
daa
sub
xchg
xchg
repz
xchg
fstpl
dec
out
dec
cmpsl
push
push
in
sbb
pop
push
js
ja
ds
xchg
pop
pop
aas
or
aas
lcall
andl
bnd
in
loopne
ret
stos
pop
pop
repnz
ljmp
lock
and
aas
xchg
mov
pop
mov
or
mov
out
les
cmpsl
out
adc
or
cmpb
loope
xchg
mov
arpl
lock
or
xchg
scas
sbbw
jecxz
shlb
mov
fildl
pop
shll
and
xchg
inc
lods
jnp
add
inc
xchg
and
repz
repz
inc
or
mov
fildll
jg
mov
jp
fcmovnbe
or
sub
and
sbbb
xchg
aas
fistl
inc
sti
inc
adc
out
arpl
pop
mov
iret
push
add
scas
jae
mov
mov
in
out
and
jmp
xor
push
or
xor
fisubs
scas
jnp
sub
mov
pop
add
mov
cmp
neg
dec
fstpt
stos
xchg
decl
rcrl
push
in
xchg
and
lret
shl
push
icebp
cmp
ds
sbb
pop
xlat
xchg
push
cwtl
popa
addr16
popa
test
and
pop
inc
fbstp
out
xor
jno
xchg
mov
out
int
xorl
mov
sarl
leave
inc
scas
ret
sub
pop
push
inc
mov
xlat
das
jl
and
into
pop
fcmovnb
xchg
mov
mov
xor
enter
mov
fcmovu
ja
push
jmp
sbb
addr16
lea
dec
mov
divl
inc
fwait
repz
fucomip
pop
xor
pop
enter
repz
xor
fildl
int3
mov
fcmovnb
xor
rol
xchg
push
push
in
or
or
mov
jb
dec
popa
mov
mov
test
xchg
pop
push
test
jb
mov
sub
pop
lods
je
sbb
daa
pop
sbb
aaa
div
sub
cmpb
mov
roll
jmp
sbb
pop
lea
scas
imul
inc
mov
cmp
jne
enter
xor
andl
rcrl
aas
int
loop
xchg
mov
inc
stos
aam
shll
ljmp
imul
and
and
gs
and
pop
outsb
je
xor
push
xchg
xor
adc
dec
sub
or
inc
iret
inc
into
ljmp
jg
negl
leave
adc
fwait
xchg
arpl
mov
shl
xor
sti
rol
cmpsl
jbe
imul
sbb
out
cld
fistpl
jns
pushf
xlat
stos
test
mov
xor
pop
cmp
mov
pop
out
xor
push
jg
pop
jecxz
ret
pop
js
jnp
adc
rorb
inc
sbb
push
loop
dec
movsl
pop
decb
inc
xor
adc
fistps
rcr
fmulp
adc
sub
cltd
adc
fistpll
cmp
scas
jg
mov
imul
lret
or
mov
ja
push
sbb
mov
pop
or
xchg
cmc
jecxz
pop
ljmp
repz
mov
jmp
fistl
sbb
mov
shrl
int3
cmpb
sub
ret
lods
aam
arpl
jl
or
xchg
ss
add
pusha
in
int
cs
pop
out
cmp
jno
fcmovne
jp
rcrl
shll
imul
lret
out
push
push
aaa
xor
nop
cld
sub
mov
mov
shlb
fcmovnbe
jnp
fadds
aad
in
enter
fucomi
imul
fildll
pusha
and
dec
jge
fwait
mov
imul
cltd
fldt
xor
ss
mov
jno
inc
bound
push
dec
sub
clc
lds
sbb
lret
out
or
dec
clc
and
negl
dec
and
adc
aam
out
xor
inc
in
sti
push
jb
sbb
inc
or
push
xchg
shrb
jae
xchg
outsl
cmp
arpl
outsb
xchg
jmp
mov
adc
mov
addr16
push
repz
xchg
pop
jmp
mov
loope
jmp
pusha
popa
repz
daa
mov
xchg
pop
fs
xchg
repz
add
push
negl
loope
sahf
ds
dec
or
repnz
push
sub
sti
xchg
fs
pusha
pop
and
rcrb
push
lret
mov
sarb
test
jg
jle
fistps
aad
out
ret
ja
cmpsl
pop
xor
imul
push
dec
repz
cs
fildll
rorl
pop
inc
or
dec
jmp
sub
pop
or
out
and
inc
into
sub
lcall
adc
outsl
aaa
iret
sub
in
imul
xchg
pop
leave
sbb
nop
call
pop
jp
filds
dec
and
inc
mov
cmc
inc
mov
jecxz
jbe
std
dec
cmpsb
ljmp
mov
inc
das
or
in
cwtl
pop
outsl
pusha
dec
fwait
pop
lea
cmp
fistl
into
and
inc
jns
push
aas
scas
dec
repz
cmp
jge
push
fbstp
out
mov
and
fstps
clc
fiaddl
mov
push
inc
mov
or
mov
mov
adc
movsl
inc
imul
push
filds
mov
jnp
popa
sbb
daa
inc
ja
movb
jle
cmp
sub
push
nop
das
pop
mov
xorb
or
aaa
movsl
cmp
mov
or
int3
clc
adc
out
adc
fldt
outsl
stos
aam
scas
into
push
into
lret
pop
ror
sub
inc
movsb
xchg
enter
inc
rdpmc
scas
movsl
in
push
jecxz
das
aad
pop
inc
lret
iret
ja
sarl
sti
ret
movw
mov
pop
sub
mov
xchg
pusha
popa
in
jbe
outsl
ret
pop
push
xor
inc
ja
push
fwait
or
push
jmp
inc
dec
fldt
rcrb
pop
jne
jmp
pop
repz
into
xchg
jmp
xchg
and
pop
mov
rcrb
sbb
inc
enter
mov
and
sub
jg
pop
sub
repnz
enter
faddp
inc
lock
sub
inc
add
push
inc
sarl
sbb
dec
sbb
xchg
enter
xorl
shrl
in
jnp
imull
mov
jae
adc
andl
or
lds
inc
loope
into
enter
aaa
pop
push
pushf
mov
pop
mov
mov
lea
jae
jge
sbb
popf
out
dec
lret
fistpl
push
icebp
fsubrp
negl
aas
in
leave
gs
xchg
fistps
mov
arpl
push
cmp
cmp
ljmp
fs
fnstsw
adc
mov
pop
dec
aam
push
repz
jb
cld
pop
scas
add
cmp
fildll
cmp
test
repz
shlb
out
movsl
dec
pop
xchg
daa
sti
jg
js
sbb
push
dec
mov
lock
outsb
or
fnstenv
cli
push
movntq
sbb
push
mov
or
jecxz
lcall
lret
mov
dec
xor
arpl
mov
inc
das
imul
push
fstpt
arpl
arpl
shrl
inc
in
jbe
scas
mov
inc
mov
xchg
sbb
stos
in
push
aas
jmp
push
jno
sbb
dec
and
jae
dec
movaps
mov
mov
repz
adc
jecxz
cmp
adc
or
xorps
adc
sub
bound
xchg
cmpl
ret
cmp
jg
xchg
jne
in
loope
cmpb
jecxz
mov
rcl
adc
inc
jecxz
xchg
out
fsts
fistpl
cmpsb
pop
arpl
lcall
xor
xlat
mov
sub
into
mov
cmp
jo
stc
lea
stc
out
inc
or
daa
fwait
sub
add
cltd
mov
rcll
imul
cwtl
jmp
fists
idivl
push
test
lret
adc
dec
aas
outsb
popa
out
fs
cmpb
adc
inc
or
pop
jmp
movsb
jno
stos
jae
outsl
jb
fstpt
pop
pop
mov
aas
pop
push
popa
sbb
shrb
xchg
sbb
jmp
mov
fadds
repz
mov
push
lahf
mov
push
mov
lock
fucomi
fnstenv
movsb
or
push
dec
xchg
cmp
sub
pop
ja
fstpt
xchg
dec
repnz
lea
xor
fnstsw
sbb
push
sbb
std
fists
in
add
xor
lretw
adc
push
jmp
jne
mov
sub
mov
cmpsl
pop
jmp
cs
jmp
insl
lahf
pushf
mull
aaa
js
add
dec
in
rcrb
aas
mov
sbb
jecxz
popa
push
add
je
scas
out
lahf
inc
repz
test
mov
cs
mov
mov
or
pop
fs
dec
fwait
rclb
jns
mov
sbbb
hlt
fistps
mov
hlt
sti
mov
daa
fbld
ret
jmp
roll
xchg
mov
mov
orl
adc
clc
mov
jae
ds
and
sub
pop
mov
js
xchg
add
mov
cli
movsl
mov
jo
pop
jae
adc
and
lcall
jmp
repz
imul
enter
fstl
aas
inc
jecxz
jb
pcmpeqd
dec
repz
nop
jecxz
aaa
and
sub
ret
inc
icebp
mov
inc
or
in
inc
pop
mov
dec
dec
stos
js
dec
shll
fwait
push
sbb
or
cmp
or
and
sub
sbb
in
jmp
fistps
loopne
adc
popa
sahf
push
inc
jecxz
sub
and
push
jcxz
inc
orps
testl
or
inc
push
out
adc
dec
out
arpl
jecxz
pcmpgtw
dec
orl
push
out
xor
adc
adc
leave
call
xchg
jae
arpl
pop
jb
pop
fnsetpm(287
mov
and
out
mov
out
xchg
popf
daa
iret
cmp
cmp
out
int
bswap
out
test
add
sbb
xlat
mov
jmp
iret
push
inc
roll
int3
xor
aad
dec
iret
ret
insb
mov
orl
inc
jnp
daa
in
inc
in
out
in
shr
cmp
movsl
sbb
push
subps
dec
and
cmp
sbb
out
and
add
pop
mov
inc
fsts
repz
jae
ror
add
scas
les
pop
jo
cmpsb
idivl
int3
jnp
ja
pop
insb
mov
cmp
mov
popa
test
lret
aas
mov
fninit
mov
and
in
dec
daa
push
push
daa
pop
test
adc
dec
addr16
out
mov
jno
aas
pop
or
sbb
fisttpl
sti
dec
or
mov
jmp
jbe
call
adc
idivl
dec
cmpsl
mov
cmpb
adc
pushf
xlat
rcrl
adc
jo
sti
jno
lret
scas
aad
ret
rcll
xor
jp
jne
ret
pop
test
aaa
mov
push
xchg
pop
cmpsl
div
iret
aas
inc
out
movsb
jg
jb
jg
cmp
cmc
icebp
xchg
imul
fistl
dec
push
roll
jbe
clc
fimuls
pop
cmc
push
and
fwait
lds
jae
push
das
lret
cmp
mov
adc
fcmovnbe
mov
mov
out
jb
fimuls
mov
push
mov
aas
inc
and
stos
push
push
push
inc
div
sub
hlt
movsl
mov
mov
sti
push
mov
jae
mov
stos
xchg
in
out
out
push
inc
aaa
stos
xor
shll
cltd
repz
or
fbld
xlat
xor
loope
lret
nop
and
sbbb
scas
sbb
aaa
push
xor
dec
fldt
push
ljmp
xchg
or
into
fisttpl
fnsave
scas
add
cltd
outsb
loope
and
dec
fildll
sbb
sti
cs
inc
add
mov
sub
pop
push
jp
fldl
and
jmp
les
js
inc
sti
push
inc
dec
inc
icebp
xor
push
lahf
out
lret
and
sub
push
inc
sbb
clc
add
fbld
repz
out
ljmp
cli
inc
push
out
pushf
ljmp
mov
aas
dec
mov
repz
xor
fstpt
fsubrl
xor
and
mov
cmp
mov
es
xchg
cmp
or
scas
out
inc
dec
pusha
fs
cmpsl
mov
cmp
sbb
fwait
lcall
mov
rcr
mov
bound
dec
or
sub
xchg
dec
lea
rcr
cmp
dec
push
ret
adc
jmp
and
int
les
inc
fiaddl
xchg
sbb
out
in
ss
ja
and
xor
sub
ret
jbe
jecxz
lret
shrl
repz
inc
lods
aam
xlat
popl
dec
jno
and
lahf
adc
cltd
and
xchg
and
cltd
inc
mov
push
push
pop
add
mov
pusha
and
mov
pop
mov
jl
aad
sbb
sub
sti
call
and
testl
fistpl
idivl
add
sub
push
xchg
fcmovnb
cltd
cmpsb
push
lcall
lahf
pushl
xchg
add
adc
add
push
fsubrl
testl
mov
cmp
lret
jg
pop
mov
imul
cmp
xchg
sbb
xchg
cs
lods
jae
cmp
push
xchg
mov
xchg
push
insl
fcomi
in
jae
mov
sub
add
mov
fistpl
lock
and
jo
xchg
dec
inc
stc
pop
cmp
jae
inc
call
subb
jecxz
sub
inc
lahf
fcoms
mov
arpl
inc
cmp
insb
dec
push
movsl
jae
and
inc
mov
fildl
mov
xchg
jnp
and
pop
cmp
xor
or
mov
ja
and
adc
xchg
add
jmp
addr16
fadd
repz
lods
lret
sarb
ret
add
jb
fistpl
mov
testl
xchg
mov
fisttps
insl
fildl
inc
imul
mov
jbe
or
stos
dec
aas
inc
dec
in
mov
jne
rcrl
roll
stos
and
ret
jecxz
rorl
push
push
push
adc
dec
xchg
or
sti
into
dec
cmp
and
dec
repz
dec
dec
jae
push
repz
fildl
push
aaa
outsb
aam
jl
inc
sbb
in
mov
inc
icebp
sub
iret
dec
cmp
mov
push
repz
insb
rcr
mov
xorl
jmp
push
sbb
stos
mov
and
repz
lock
addr16
xchg
in
push
aam
shrb
fldt
out
sub
push
icebp
cld
repz
es
aaa
shrb
pop
lret
in
push
addr16
cmp
leave
in
in
lret
mov
mov
dec
aas
out
xor
out
inc
adc
jg
mov
push
dec
lret
sub
mov
aas
addr16
xor
push
adc
jecxz
mov
push
sbb
test
mov
mov
aad
sbb
ret
shrl
push
pop
js
and
addr16
xor
ja
jae
fcmovnb
xchg
sbb
jnp
mov
lcall
sub
sbb
xchg
jnp
imul
jne
fbld
dec
aas
jp
and
sub
jp
ret
cli
loopne
and
testl
mov
ds
push
mov
fmul
pop
mov
push
fcomps
jl
enter
in
and
jno
std
adc
out
jnp
mov
rcll
stos
mov
daa
inc
std
test
cmp
push
lock
inc
xlat
arpl
or
add
popa
std
cmp
pop
xchg
sub
push
movsl
arpl
pop
pop
movsl
mull
fbstp
ffree
pop
daa
adc
pop
and
out
sub
fildll
push
lret
movsb
jb
negl
in
lahf
push
mov
inc
scas
lds
popa
aam
outsl
aam
mov
jmp
aam
shl
rcr
rcr
mov
int
lret
dec
push
jge
sbb
out
repz
jae
inc
cwtl
int3
jmp
ret
fidivrs
arpl
lret
stos
clc
mov
ljmp
xchg
mov
cli
shrb
cmpsb
lret
mov
pushf
shrl
mov
jne
push
cmp
mov
inc
lret
mov
loopew
fisttpl
jae
cmc
adc
and
out
sub
pop
pop
out
inc
out
fldt
fistl
ret
pop
cmpsb
sbb
or
sarl
pop
repz
mov
push
imul
daa
daa
jae
repz
sub
jb
push
sti
sbb
out
jecxz
aas
dec
fstpl
out
push
dec
daa
sarb
fcmovnbe
xchg
in
pop
out
cld
out
inc
repnz
jecxz
sub
cmp
adc
inc
push
pushf
inc
add
jecxz
cmp
sbb
dec
aas
out
pop
arpl
pushf
pop
inc
daa
pushf
xor
xor
bound
push
jns
mov
scas
psubq
mov
fcmovnu
dec
fninit
out
xchg
stos
mov
fs
loope
mov
sub
xchg
ja
xchg
orl
sbb
rorl
fwait
movl
fimull
inc
hlt
scas
outsl
cltd
std
out
inc
jg
fxtract
ret
push
imul
stos
jnp
aaa
in
test
and
js
sbb
dec
int
movsl
aad
outsl
mov
dec
lret
push
out
and
push
jecxz
idivb
insl
or
jns
mov
sti
mov
fldt
fcmovne
xor
rcrl
imul
xchg
cmp
je
push
dec
repz
stos
or
inc
scas
pop
out
ret
cmp
das
dec
dec
inc
pop
scas
sub
lea
imul
jbe
sbbl
outsl
mov
inc
dec
mov
aas
shrl
xor
sbb
aad
enter
psubusw
and
mov
mov
push
add
rcrl
adc
xchg
xor
pop
test
xchg
adc
test
jle
pushl
out
fbstp
mov
sarl
negb
jmp
dec
adc
xor
inc
fnstsw
inc
jns
cmpsl
jae
xchg
sub
jmp
into
push
outsb
pop
add
jae
mov
sub
movsl
lret
jae
fistl
popf
fcmovne
cmp
pusha
jge
nop
inc
in
ss
and
and
cmc
mov
xor
repnz
fidivs
mov
mov
dec
mov
js
and
popa
pop
push
inc
icebp
cmp
aad
filds
xor
dec
push
shrl
mov
mov
int
pushf
xchg
mov
push
jge
mov
mov
xchg
adc
orl
dec
fldl
pusha
inc
xlat
mov
test
ds
pop
nopl
out
inc
icebp
outsb
repz
enter
fldt
inc
lds
add
out
ds
insl
dec
in
cmp
daa
push
or
jnp
stos
cmp
or
dec
push
inc
jecxz
fisttps
daa
and
inc
sub
cmpsb
mov
mov
cmp
sbb
shl
cwtl
fldt
lret
out
cmove
out
adc
jp
cmp
fistl
out
loope
jmp
pop
loope
xlat
xor
sbb
mov
pop
out
shll
in
push
jmp
jl
mov
fistpll
jo
iret
mov
push
outsb
aam
inc
mov
lret
pop
int3
xchg
sbb
cmp
cmp
add
cli
mov
mov
enter
outsb
es
daa
sub
mov
scas
sti
fildl
push
loope
ja
into
dec
out
std
sub
jmp
jl
aad
scas
inc
insl
or
xor
in
fcmovnu
andl
jp
and
jb
xchg
jae
add
in
fwait
mov
push
jnp
sbb
ret
push
ljmp
mov
scas
add
inc
repz
lahf
ja
inc
imul
roll
ret
mov
dec
mov
push
cmpsl
fdivrs
jae
add
fwait
sub
imul
cmp
xor
jnp
push
xchg
movsl
xor
cmp
fistpll
pop
repz
es
add
pop
xchg
imul
and
jo
dec
pop
fstpt
jae
mov
mov
mov
cltd
ljmp
jmp
mov
rclb
jne
pop
sub
jl
pusha
ja
xchg
dec
je
cmp
mov
mov
pop
xorl
xor
xor
sub
push
repz
rolb
fadds
xchg
add
pop
mov
enter
int
pop
sbb
rorb
mov
sbb
aaa
dec
inc
sbb
sbb
cmp
sub
or
pop
mov
push
and
inc
fcmovb
add
ret
or
test
loope
lock
push
arpl
in
sub
mov
iret
jns
repz
cmpl
in
je
xor
fistps
push
sbb
test
fcomi
adc
and
cmp
add
add
mov
or
fistl
jbe
inc
repz
out
lods
in
push
je
xchg
in
jmp
stos
sbb
in
fimull
push
sbb
mov
es
and
daa
out
xchg
aas
out
roll
sbb
add
sbb
jb
jecxz
daa
sbb
jmp
and
and
addr16
pop
into
std
inc
inc
shl
roll
dec
mov
jle
es
jo
mov
fisubs
push
cmp
xor
out
and
stos
pop
pop
mov
push
out
adc
pop
pop
mov
int3
addl
lret
addr16
lret
in
xchg
sbb
cmpsl
inc
cmp
sbb
test
inc
pop
sub
test
outsl
dec
pop
fbstp
inc
mov
inc
into
nop
ffreep
adc
enter
lahf
inc
testb
and
outsb
movsl
rcl
add
loope
push
mov
mov
fdivrs
test
pusha
test
xchg
ss
sbb
jnp
fistpll
addr16
xlat
lret
sbb
push
nop
cmp
jecxz
in
les
mov
xlat
push
dec
repz
push
pop
jecxz
repz
leave
inc
mov
arpl
enter
aas
ret
nop
mov
dec
fwait
cwtl
sbb
mov
push
inc
rorl
mov
es
jmp
out
hlt
push
in
cmc
js
mov
test
ret
cmp
adc
repz
add
cmp
sbbb
pop
jae
lret
push
aad
cmp
shrl
outsl
dec
jp
imul
xchg
adc
ret
mov
imul
sub
mov
cmp
mov
push
shlb
dec
adc
xlat
xchg
in
lea
xor
mov
or
mov
jae
decb
fidivrs
xor
jmp
mov
cmp
adc
out
and
xchg
fldcw
sub
std
imull
xlat
out
xchg
orb
lds
stc
dec
out
inc
and
cmp
fcmovnbe
aam
in
rorb
xadd
sbb
dec
popa
mov
jnp
lds
ret
mov
add
add
rcrl
inc
add
dec
cmp
movsl
ffreep
into
xor
push
fwait
lock
push
and
push
in
mov
pop
out
mov
rcpps
xor
mov
jmp
arpl
or
mov
movsl
jg
sbb
std
fistl
test
andl
and
shlw
pop
pop
xchg
and
mov
cltd
fstpt
fisttps
fisttpl
repz
cmp
dec
cmp
mov
and
test
test
push
jecxz
mov
dec
cwtl
push
repz
fisubrl
adc
push
push
lret
dec
pop
fldt
cmpsb
jnp
sbb
fcomi
sub
mov
dec
add
lcall
mov
pop
pop
pop
data16
imul
lret
cmp
andl
cltd
sti
xchg
push
data16
lret
pop
inc
in
cs
pop
cmpsl
or
ja
out
in
fldenv
iret
iret
push
push
retw
test
push
pop
int3
cwtl
in
lret
cltd
sbb
pop
sub
mov
sbb
pushf
and
iret
cmpsb
xchg
lret
xor
xchg
aad
out
push
lock
movsb
arpl
in
fists
enter
daa
inc
mov
dec
fsubrs
outsl
das
and
sarl
mov
daa
aam
aas
mov
mov
fisttpl
and
cld
xor
xchg
push
jae
int
mov
sti
movsb
push
push
outsl
fildll
movl
dec
stc
in
jecxz
ja
in
imul
dec
ror
sbb
ljmp
fwait
arpl
sbb
jmp
mov
ja
sbb
adc
xorl
adc
push
jb
lahf
jne
dec
or
fstpt
out
fists
aam
aaa
cmpsl
pop
xchg
pop
fwait
xchg
xor
jnp
add
jmp
mov
inc
mov
call
mov
mov
add
or
dec
lock
mov
pop
xchg
pop
cmp
into
ret
pop
push
lret
nop
cmp
sti
jno
in
pop
pop
pop
sbbl
push
or
push
xor
pop
sbb
mov
test
movsl
xchg
in
je
mov
ja
out
sub
or
mov
outsb
dec
pop
adc
out
in
adc
cmp
enter
xlat
sub
mov
and
jne
mov
fistl
sbb
jne
mov
lea
pop
rorb
outsb
jl
lcall
repz
jp
and
cmp
test
shlb
jae
jmp
and
scas
pop
and
pop
jp
arpl
pop
mov
pop
aas
cs
xchg
cmp
adc
pop
rcll
insl
xchg
loope
xor
pusha
in
sbb
mov
aam
adc
push
add
mov
mov
insl
cwtl
jge
mov
adc
pop
ret
testl
fbstp
and
inc
push
sbbb
jge
outsb
inc
xchg
rolb
pop
mov
stos
adcb
popa
fistpl
pop
adc
jne
cltd
cmp
dec
inc
div
mov
and
out
inc
inc
jmp
inc
ficompl
les
cmp
inc
lock
lods
push
push
jecxz
xor
lods
push
push
rcrb
inc
repnz
mov
loopne
jmp
scas
push
jg
pop
pop
imul
movsb
daa
aaa
xchg
jecxz
and
xchg
fbld
xor
shl
lcall
push
rcrl
push
jmp
xlat
push
outsb
push
push
jae
fstps
push
outsl
pop
out
sti
cmp
sti
push
inc
loopne
scas
imul
into
repnz
sti
dec
hlt
enter
in
mov
mov
xchg
mov
aam
xchg
pop
cmpsl
in
cmp
mov
jge
mov
out
jo
int
push
sub
mov
push
es
cmp
jp
daa
jae
inc
mov
pop
out
dec
and
sub
jge
iret
mov
cs
and
mov
icebp
fcmovnbe
xchg
xor
jge
add
push
mov
xor
icebp
or
mov
fistl
shrl
rcr
and
or
lods
push
rolb
movsl
xchg
cmpsl
fldt
dec
sqrtps
xor
cmpsl
int
popf
das
iret
push
out
int3
cmpl
subl
xchg
jp
sub
cmp
push
out
imul
jb
and
ss
sbb
push
jp
jl
scas
push
das
pop
mov
divb
adcl
repz
repz
fwait
in
add
or
inc
call
lcall
mov
fildll
sub
fcmovne
addl
jb
movsb
in
fisttps
inc
lahf
orl
into
dec
sbb
and
fcoml
pushf
xchg
push
out
fldl
int3
xchg
sti
xchg
nop
aas
jmp
mov
daa
pop
xchg
lret
sbbl
inc
sbb
repz
pop
rorl
into
jne
pop
js
xchg
es
mov
jg
popa
and
adc
pop
lret
xchg
nop
xor
inc
pop
sub
dec
sbb
cmp
push
dec
adcl
cmp
xchg
fistpl
inc
out
inc
ffreep
filds
or
std
add
rclb
scas
arpl
sbb
test
cli
dec
sbb
popa
add
cmp
lahf
sti
push
cmc
dec
jecxz
cmp
mov
in
in
popa
out
pop
add
inc
sti
cmc
loope
mov
and
fnstsw
jecxz
pusha
out
or
pop
sti
jecxz
fisubl
inc
cmp
cld
dec
mov
inc
jae
ficomps
dec
aas
popa
sti
cmovle
cmp
pop
movd
sti
add
sub
fwait
outsl
fisubrl
mov
push
cmpsb
mov
xor
das
cmp
test
mov
push
repz
shr
xchg
cltd
sti
rol
mov
xor
in
scas
xchg
dec
pop
daa
lods
arpl
jne
xchg
push
jg
mov
pop
out
out
or
add
popf
xchg
pushf
jae
outsb
arpl
ret
lahf
mov
das
movsl
rorl
cmp
jae
imul
fstp
imul
les
leave
jmp
imul
xchg
jmp
ja
in
and
imul
outsb
dec
inc
lret
out
jle
jmp
sarb
jo
sbb
insl
pop
inc
jbe
out
lds
push
lods
repz
xchg
jg
push
call
jecxz
aas
js
imull
fimull
mov
insb
fildll
lret
repz
cmp
scas
das
iret
xchg
fadds
pop
ret
cmp
ja
adc
mov
xor
add
and
imul
sbb
add
mov
les
pop
subb
cltd
sbb
sub
cltd
mov
test
rcll
iret
dec
in
outsl
cltd
cmp
mov
sub
mov
out
xchg
xor
dec
mov
andl
les
pop
or
movsl
cmc
push
bswap
stos
ret
sti
sub
jle
mov
mov
mov
es
mov
fistl
and
mov
mov
jnp
jnp
jg
pop
mov
sub
pop
pushf
in
sahf
inc
cmpsl
pop
aaa
adc
das
mov
xchg
xor
imul
popa
adc
sub
push
out
cwtl
sub
mov
pop
aaa
sbb
push
sub
cmp
adc
xor
sbb
repz
adc
inc
add
push
imul
push
addr16
fistl
out
xchg
mov
or
iret
or
mov
cmp
pop
rcll
or
aas
or
pushf
daa
inc
sub
cmp
jno
jecxz
mov
sbb
dec
shll
jmp
fimuls
repnz
sti
ljmp
add
dec
fcmovnbe
vmulsd
push
pop
pop
rol
in
shlb
mov
fisttps
ss
cmp
mov
mov
dec
add
into
filds
jecxz
les
lret
jns
adc
cmp
in
pop
mull
jbe
mov
cwtl
jecxz
dec
pop
mov
jg
sbb
mov
sub
cmp
xchg
sbb
je
adc
in
pop
pop
push
cmpsl
decl
pop
into
jnp
or
jmp
aad
sbb
xchg
sbb
lahf
inc
lret
cmp
inc
inc
lods
jno
imul
lahf
outsl
pop
xchg
in
arpl
or
and
sub
xchg
rcrb
bound
inc
and
shrl
dec
pop
imul
lds
cmp
cwtl
add
and
shrb
push
out
or
cmpsl
in
jp
fistl
ret
aad
shrb
das
jge
insb
fisttpl
js
lret
imul
adc
cmp
mov
shl
sbb
clc
scas
dec
add
shl
movnti
mov
cmp
rcll
sub
mov
lods
jnp
push
mov
sbb
fcomps
stos
rorb
mov
ja
jmp
add
fwait
mov
pop
clc
in
push
push
int3
and
lret
mov
cmp
popf
inc
insb
xchg
and
or
xchg
daa
mov
push
jmp
mov
not
fisttps
aad
lods
mov
push
popa
out
cmp
sub
inc
out
add
popa
mov
mov
out
dec
in
scas
sub
or
mov
les
loopne
lahf
jo
fildl
cmp
adc
sub
stos
add
or
jmp
fcmovnbe
nop
aad
sub
stos
cltd
js
jmp
xchg
xor
fistpl
fwait
cmp
sub
inc
lea
aam
into
xchg
add
jmp
dec
cmp
dec
pusha
mov
inc
in
inc
jg
fadds
divb
ret
xchg
stos
ror
dec
pop
call
fistps
fcmove
jnp
add
jne
or
cmp
test
sub
das
adc
and
xchg
xor
add
dec
repz
add
inc
mov
or
addr16
inc
inc
pop
mov
jns
jno
mov
ret
jno
call
insl
sub
inc
stos
pop
dec
in
sti
mov
gs
pop
setbe
and
or
and
testl
popa
in
mov
xor
jno
jecxz
push
dec
fsubp
outsb
fucom
imul
dec
or
daa
and
inc
shl
mov
xchg
insb
adc
out
inc
ds
out
ficompl
jecxz
add
inc
mov
mov
sti
inc
dec
add
data16
stos
jo
sti
push
sub
xchg
fsubs
scas
jb
dec
add
jnp
cmp
rcl
and
mov
and
addr16
hlt
inc
enter
pop
stos
sub
mov
cltd
inc
ljmp
out
ja
test
out
pop
sarl
fldt
popl
imul
jae
push
dec
mov
ret
in
lods
pop
xchg
jae
das
sub
ret
lret
rcrl
xor
mov
pop
aam
cmp
arpl
lea
inc
addr16
and
rcrb
leave
mov
pop
dec
dec
dec
orb
in
hlt
add
arpl
sbb
mov
xchg
mov
sbb
mov
or
imul
ret
xor
dec
shll
je
out
sub
in
pop
fs
cmpsl
lahf
into
cmp
and
in
out
icebp
add
xchg
or
and
je
fcmovnb
cwtl
add
cmpsl
rcl
dec
lods
lods
jbe
insl
inc
sbb
mov
xchg
ja
jle
imul
push
repnz
cmp
icebp
pop
lahf
cmp
mov
adc
and
cmp
into
fwait
pop
lea
dec
shrl
xchg
mov
stos
or
cmp
inc
or
inc
popa
cmp
insl
fidivl
out
out
add
pop
adc
mov
stc
out
or
pop
xchg
push
imul
pop
push
into
inc
fcmovne
xchg
inc
adc
nop
xor
mov
xchg
mov
fcmovnb
push
sti
sbb
push
jge
jns
fcmovnb
fsubrs
inc
mov
icebp
cltd
adc
iret
dec
jae
adc
jmp
leave
stos
jecxz
cmp
jecxz
add
aas
adc
sbbb
mov
sub
lea
cmp
xchg
cmp
jmp
jp
mov
in
call
adc
jge
imul
fbld
jmp
insb
out
dec
sbb
shll
repz
cltd
jnp
popa
xor
jmp
fbstp
dec
aas
movsl
cmp
jg
sbb
out
arpl
stos
orl
fwait
and
sbb
ret
jbe
xchg
add
inc
pop
notb
jns
mov
out
push
fiaddl
dec
xor
dec
mov
pop
sbb
dec
dec
inc
scas
data16
and
adcb
out
inc
adc
mov
out
imulb
sar
mov
pop
stc
out
mov
lods
out
filds
pop
fwait
les
clts
jecxz
out
mov
jmp
sub
popa
movl
mov
jno
xorl
or
sbb
xlat
cmpl
pop
stos
mov
mov
shl
adc
xchg
sbb
adc
daa
and
lcall
test
daa
rcl
imul
push
sbb
or
jo
xchg
lds
xchg
cltd
inc
pop
fildll
cmp
xchg
addr16
addr16
std
xor
imul
in
fstps
shrl
repz
jmp
mov
dec
andl
std
pop
mov
push
jbe
pop
ret
aas
imul
repz
xor
in
mov
pop
mov
cltd
stos
xchg
shr
fwait
mov
jo
lock
arpl
lods
xor
sbb
pop
sbb
push
out
jbe
add
cld
inc
popf
xchg
mov
idivb
in
in
loope
imul
sbb
mov
push
repnz
das
rol
jecxz
lea
test
jno
fstpt
or
sub
arpl
adcl
push
fistpl
jecxz
jnp
push
jecxz
or
mov
jge
xchg
xor
xor
je
or
loopne
mov
sti
test
lock
mov
cmp
ficomps
pop
jecxz
xor
subl
inc
push
jae
popf
out
pop
pop
aas
ja
xchg
sub
hlt
dec
mov
jnp
adc
and
test
movsb
popa
fisttps
push
ret
pop
sbb
jae
and
xchg
xorb
dec
mov
je
outsb
pusha
xchg
out
push
out
dec
inc
push
ss
mov
filds
xchg
mov
sbb
cmp
cmpsl
adc
xor
stc
arpl
or
inc
lods
out
lods
idivl
hlt
aaa
push
pusha
andl
call
sti
pop
jp
push
sub
push
inc
push
out
mov
sub
call
sub
push
lea
mov
movsl
cmp
popa
push
inc
lods
or
pop
loope
in
push
gs
inc
push
inc
dec
adc
outsb
fistps
pop
inc
out
pop
fildll
push
out
aam
dec
mov
stc
fistl
fisttpl
out
inc
cmp
fisttpl
jecxz
out
cmp
mov
in
stc
or
cmp
aas
dec
jecxz
inc
shll
and
or
popa
scas
sbb
inc
jae
mov
jo
jp
inc
jecxz
pop
adc
daa
push
sarl
stos
popf
out
pushf
and
jae
xor
jecxz
mov
or
cmp
sbb
push
in
and
stos
pop
lock
lahf
test
fcoms
xlat
mov
leave
pusha
shrl
popl
data16
movsb
arpl
shll
sub
xlat
xchg
pop
mov
movsb
inc
jns
pop
jb
jecxz
jp
fistpll
xchg
sub
mov
mov
ret
mov
sbb
mul
int
pop
mov
das
add
jle
dec
das
and
mov
dec
lock
jnp
adc
outsl
icebp
in
andl
addr16
xor
inc
cmp
push
addr16
jmp
sub
inc
repz
ret
into
sbb
fcmovnb
push
push
adc
cmp
jbe
inc
pop
sub
aaa
test
pushf
pop
movsl
jl
push
xchg
sub
mov
hlt
in
fcmovnb
arpl
push
cwtl
shrb
inc
jae
push
iret
push
sub
aam
mov
inc
roll
icebp
dec
sbb
xor
push
xchg
inc
pop
cmp
icebp
push
dec
aas
std
inc
inc
mov
push
sub
adcl
jnp
daa
lret
mov
iret
xchg
sub
shl
xlat
sub
or
inc
jne
mov
inc
sbb
sbb
fldt
push
sbb
sub
mov
cmp
hlt
andl
sbb
push
js
jno
outsl
into
ficoms
jb
std
cmp
and
dec
mov
xor
sub
xchg
sbb
inc
es
sbb
fisttpl
repz
add
scas
fs
sbb
popf
lahf
test
cld
add
and
out
and
aas
xor
lods
or
pop
fistps
xchg
cmp
ds
xchg
inc
jno
jmp
push
fildl
adc
fidivrl
push
jnp
pop
sub
and
adc
dec
dec
dec
aaa
in
out
push
jbe
or
sub
jecxz
add
jecxz
mul
enter
out
lock
sub
test
push
fstpl
int
in
jecxz
fs
imul
cmp
mov
ret
scas
pop
addb
fiaddl
jecxz
nop
adc
sbb
xor
lock
outsl
fwait
add
jp
pop
cmp
sub
es
xchg
int
das
outsl
mov
adc
inc
hlt
filds
jbe
hlt
jecxz
loop
push
cwtl
jnp
lret
add
mov
das
cmpsl
sarl
mov
xor
ljmp
filds
cltd
lods
pop
xchg
imul
xor
and
loope
xchg
xchg
les
iret
push
adc
hlt
scas
addr16
jb
cmpsl
enter
and
lea
sbb
andl
push
ja
jb
xchg
insl
dec
xchg
rol
add
sbb
xchg
sar
add
mov
movsb
pop
jo
sub
imul
rcl
es
add
fsts
into
cs
and
dec
out
mov
inc
cmp
push
insl
aas
cs
out
ret
jae
scas
fildll
outsb
sbb
arpl
stos
cmp
fcmovne
in
pop
xor
nop
sbb
mull
xchg
imul
ret
lea
xlat
pop
and
aad
subl
subl
insl
xchg
imul
xchg
cmp
inc
jns
push
arpl
imull
sbb
fisttps
mov
dec
popa
lret
shll
aaa
popf
or
jb
xchg
in
inc
jae
jle
or
inc
stos
cmpb
jno
or
inc
not
pop
lock
outsb
out
arpl
in
xor
out
sahf
fisttpl
mov
daa
inc
sbb
pop
mov
repz
xor
or
repz
sti
lea
out
mull
mov
and
push
shll
ds
pop
mov
push
insb
fcomip
jecxz
aaa
aaa
pop
and
dec
aas
call
arpl
cmp
clc
cmc
insb
jg
inc
shl
jmp
push
inc
in
dec
dec
push
icebp
or
pop
dec
test
imul
sbb
xchg
fisttpl
xor
in
mov
push
lret
popa
sbb
subl
sub
push
arpl
daa
inc
pop
or
loope
mov
das
jmp
jp
test
or
lret
jae
cmp
push
lea
roll
push
jecxz
push
and
emms
dec
imul
cmp
xchg
ficompl
sbb
jecxz
daa
adc
sbb
sbb
inc
ficompl
sbb
cld
leave
sbb
pop
and
add
adc
mov
into
xchg
fisttpl
out
out
jmp
rorb
inc
cmovae
sti
mov
inc
inc
enter
adc
in
pop
adc
add
inc
push
out
test
dec
sbb
adc
sbb
jbe
in
xchg
pop
mov
inc
hlt
cmp
icebp
pop
out
cmp
mov
push
xchg
shld
sbb
mov
scas
arpl
mov
cmpsb
loope
das
cmpsb
sbb
adc
push
out
adc
or
outsb
out
jecxz
addr16
ret
addb
cmp
mov
out
mov
add
insl
stos
push
pop
jb
xchg
mov
call
or
cmc
push
and
leave
dec
rclb
dec
push
jo
test
in
mov
pop
lret
xlat
ror
mov
mov
call
dec
test
push
jno
movq
lds
mov
lods
dec
stos
test
mov
pop
out
out
fs
jne
xchg
dec
loop
adc
push
fildl
test
sbb
cmp
jg
loope
cmpb
pop
mov
imul
mov
push
xchg
imul
test
xchg
and
sbb
imul
fwait
dec
jo
inc
jp
insl
ja
mov
movsb
jle
lret
jb
pop
lret
mov
or
push
insl
pop
pushf
repnz
mov
roll
int
pop
aas
push
ljmp
out
aas
lahf
pop
cmp
arpl
aas
or
testl
add
je
lods
fwait
ret
jb
mov
mov
hlt
hlt
pop
mov
inc
pushf
lret
push
mov
fwait
push
rcll
ja
cltd
xor
testl
dec
fsubrl
dec
push
push
sub
push
mov
push
testl
push
in
adc
adc
pop
dec
xor
inc
fcoms
andb
xor
decl
push
cmp
xchg
aas
ljmp
jle
pop
in
jnp
xchg
adc
or
jecxz
test
in
imul
push
mov
les
dec
push
dec
dec
add
inc
pop
lea
push
or
dec
call
aas
lret
xchg
dec
mov
mov
mov
out
cmpsl
repnz
inc
cld
add
mov
ficomps
dec
fcoml
pop
daa
es
lods
and
dec
push
sbb
pushf
jmp
imulb
jmp
out
dec
dec
jl
inc
fucomp
add
sub
mov
inc
cmp
rcr
mov
jecxz
mov
xchg
sahf
fwait
loope
pop
inc
dec
jae
mov
push
pop
jg
cwtl
test
or
jmp
pusha
dec
out
jp
scas
into
jno
jecxz
pop
scas
aas
jnp
jns
in
sbb
fadds
fisttpl
std
stos
rcll
out
and
test
mov
jae
sbb
dec
arpl
xchg
and
jo
and
mov
stc
jbe
mov
int3
pushl
push
dec
mov
pop
xlat
shll
sub
mov
lret
jbe
insl
sbb
mov
inc
mov
stos
add
dec
repz
dec
or
clc
das
inc
pop
or
xor
movsb
scas
or
cmpsl
xchg
mov
push
sarb
out
outsl
sub
sub
jecxz
lds
es
push
inc
movsl
jmp
incl
pop
call
ret
dec
arpl
sub
repz
fcomip
pop
push
shl
push
inc
fbld
or
test
push
pop
cmp
les
sbb
icebp
jno
sti
jo
sti
outsb
push
stos
sarb
xor
ret
sub
notb
divl
and
rcrl
pop
xchg
or
dec
addr16
dec
and
add
in
arpl
jmp
sub
roll
push
push
aas
imul
les
sbb
testl
lret
repnz
jg
imul
rcrl
aaa
into
mov
lcall
or
jae
or
dec
jae
cltd
sub
scas
xor
pop
ja
mov
add
imul
ljmp
filds
cltd
pop
xchg
cmpsl
dec
push
inc
pop
sti
push
pop
fisttps
push
inc
xor
mov
pop
test
cmp
daa
negl
jmp
xor
sbb
xchg
jnp
addl
jecxz
and
mov
pop
imul
dec
inc
push
lahf
rcrb
out
xlat
dec
arpl
hlt
xchg
cmp
add
cmp
inc
jae
sub
mov
dec
or
jb
inc
rolb
fisubl
inc
in
sub
mov
mov
insb
dec
out
jnp
pop
mov
aas
push
adc
cmp
testl
inc
cli
cmp
fldt
jecxz
rcll
nop
push
fstpl
out
fildl
xor
cmp
xor
dec
mov
pop
mov
and
cmp
nop
out
mov
repz
test
mov
cmp
movl
push
cmp
push
xchg
mov
subl
xor
push
movsl
jge
xchg
jecxz
jle
fcoml
movsb
xchg
pop
je
cli
lcall
mov
mov
xchg
aaa
rcll
dec
mov
daa
xor
inc
hlt
xchg
jno
inc
repnz
cmp
int3
fbstp
ret
sbb
or
mov
sahf
addr16
enter
dec
sahf
push
xor
test
je
add
arpl
fcoml
jp
in
mov
orl
imul
hlt
ja
js
pop
push
push
fwait
dec
jbe
xchg
out
rcll
lock
fbstp
dec
push
insl
fidivrs
outsl
js
sub
std
push
jmp
push
mov
push
fs
add
ret
or
ret
push
dec
xorl
inc
movsb
stos
push
ja
xor
push
pop
sbb
shrb
jns
cmpsl
pop
pop
in
inc
std
fcmovnbe
and
cwtl
pop
arpl
pop
and
test
pop
jmp
dec
dec
ds
push
imul
or
in
mov
cmp
fmul
push
mov
mov
mov
ja
xchg
in
repnz
fistpll
and
jmp
into
repz
jmp
xchg
xor
les
shlb
jecxz
lods
pop
xor
popl
mov
pop
dec
jg
fisttpl
xchg
repz
dec
dec
out
inc
push
cmc
inc
xor
filds
xchg
mov
mov
pop
ret
mov
jnp
dec
out
cmp
xchg
or
xor
inc
xor
inc
addr16
and
cmc
cmc
dec
add
and
pop
sbb
sti
push
sti
sbb
movsb
test
or
inc
xchg
push
pop
xchg
push
dec
pop
imul
mov
or
std
imul
mov
xchg
enter
pop
pop
push
subl
and
sbb
push
cmc
dec
loop
pop
push
cmp
cmp
mov
inc
push
in
out
jnp
lds
sbb
fnsave
jecxz
inc
or
lock
out
cmp
fisubrs
cmpsl
dec
out
cmp
inc
dec
or
push
in
sub
pop
mov
add
cmp
orb
mov
shrd
push
popa
jae
add
insl
lret
mov
push
lea
in
mov
aaa
or
inc
xchg
into
popf
or
mov
iret
jg
cmpsb
movsb
lahf
lahf
jae
lods
pushf
jge
int
mov
inc
stc
fsubrs
flds
mov
lods
sub
jecxz
pop
xchg
outsb
movsb
insb
xor
movsb
xchg
rcll
out
mov
xchg
and
outsl
mov
xchg
jecxz
cs
fisubs
pop
jl
inc
orb
inc
in
push
fists
jl
int
ja
mov
xchg
sub
adc
sbb
cmp
rolb
xchg
stos
cmp
xor
inc
add
sbbb
clc
xchg
lcall
sti
in
sub
sub
outsl
mov
pause
add
push
in
fucomip
js
sub
and
aam
xor
std
jo
outsb
push
mov
sbb
iret
mov
pop
jae
imul
fldt
jecxz
and
mov
popf
cmovbe
push
out
in
add
loopne
push
imull
jne
lods
xor
xchg
fucomip
out
push
inc
test
push
adc
lock
push
int
inc
fucomip
lods
leave
add
mov
xchg
lahf
jo
pushf
sahf
pop
xor
sbb
push
ja
popf
rcll
movsl
ss
fbld
ja
loope
ret
mov
andl
dec
scas
jnp
push
testl
fcomi
adc
es
inc
dec
and
repz
cltd
mov
push
lahf
dec
in
add
pop
iret
pop
dec
rcrl
bound
cmp
das
dec
push
mov
ret
out
dec
out
js
cmc
jno
out
xchg
lahf
scas
xor
arpl
jecxz
inc
stos
mov
cmp
inc
pop
or
pusha
ja
pop
lea
sbb
xchg
insb
loope
out
add
adc
lds
ja
add
mov
push
sbb
lret
sbb
cmp
aam
sbb
jb
and
stc
sar
aas
mov
sub
pop
out
ds
pop
es
jecxz
test
sbb
fnsave
mull
cmp
popf
negl
xor
inc
repz
aaa
in
fistps
inc
cs
aad
pop
and
in
imul
jecxz
sub
jnp
jae
mov
pop
jmp
movsb
je
mov
into
inc
push
or
arpl
decl
ret
push
add
shrl
imul
or
movsb
jge
jecxz
jmp
test
jmp
shlb
out
out
daa
cmp
cmpsl
outsl
ja
orb
mov
add
leave
dec
sub
mov
add
xchg
sub
fwait
cwtl
jo
xchg
sbb
dec
mov
mov
lock
jae
stos
jmp
pop
or
add
push
jo
sbb
das
mov
mov
xchg
push
out
lea
inc
test
sbb
cmp
push
pop
pop
jecxz
cmp
pop
dec
ljmp
jnp
inc
aam
pop
cmpsl
pop
repz
test
pop
das
push
repnz
pop
sub
sub
mov
sar
dec
cld
push
inc
sub
push
outsl
inc
xchg
shll
call
pop
imul
jg
iret
jno
out
mov
aaa
and
inc
push
xchg
daa
call
in
outsb
arpl
push
js
cwtl
aas
fcmovne
add
cmp
pop
das
inc
pop
imul
push
pop
or
addr16
test
daa
lret
pusha
jg
movsl
clc
jge
mov
daa
cwtl
addr16
add
dec
mov
movsl
jnp
mov
lret
add
mov
xchg
push
pop
lret
lret
inc
sbb
mov
dec
fwait
mov
and
inc
jmp
pop
pop
jnp
adc
cmp
jb
dec
xlat
xchg
mov
push
daa
xchg
repz
pushf
in
lds
ds
jae
sarl
adc
jmp
or
cmp
movsl
scas
cld
dec
and
add
cmp
ds
ret
inc
pushf
sub
lea
push
jmp
and
sbb
shll
push
dec
jnp
fisttpll
pop
push
push
fisttpl
pop
ds
pop
cmp
jne
add
jmp
mov
arpl
dec
in
mov
jo
bswap
xor
mov
jmp
add
sub
xor
jecxz
aas
dec
mov
dec
fimull
ret
fucom
out
scas
jecxz
comiss
xlat
outsb
sbb
sbb
mov
add
and
into
push
fucomi
mov
inc
mov
cmp
inc
and
out
popa
scas
cli
inc
mov
in
fwait
std
dec
xor
cmpsl
add
add
cwtl
repz
and
xchg
push
or
ret
imul
pop
jg
dec
mov
mov
lret
mov
mov
dec
js
stos
mov
xor
stos
fstps
dec
leave
and
push
imul
or
imul
mov
pop
ret
movl
shl
mov
cmp
cmp
mov
ja
add
jecxz
xor
sarl
imul
fisttpl
mov
add
out
leave
dec
adc
ret
cmp
fisttpl
push
jmp
lds
out
mov
into
orb
xchg
das
mov
les
cmpsl
and
mov
into
jb
push
add
in
aaa
or
mov
and
jns
lea
out
push
pop
mov
stos
adcl
xor
pop
cltd
mov
shlb
test
mov
jg
mov
mov
fstpt
push
out
loope
aas
inc
or
aam
dec
pop
xor
push
mov
inc
loope
arpl
jmp
enter
jmp
popa
jp
sti
xor
inc
sbb
mov
xorb
mov
jns
lods
aam
jmp
adcl
pop
and
insl
dec
xchg
pop
dec
les
jg
inc
enter
stc
cmpsl
addr16
int
int
mov
insb
mov
dec
push
mov
cmp
cmp
shrb
cltd
fnstsw
pop
and
repz
push
bound
jge
sub
rorw
mov
mov
adc
out
andl
ds
repnz
inc
icebp
push
xor
movl
out
loop
and
aad
cmovs
inc
sub
jb
mov
shll
outsl
sub
pop
fwait
sub
and
insb
dec
punpckhwd
pop
sbb
aas
and
pop
imul
jnp
ja
in
pop
and
shll
inc
push
filds
mov
pop
xor
mov
sti
push
insb
pop
es
in
mov
popf
jae
inc
sbb
jbe
into
dec
dec
cmp
dec
inc
stos
mov
mov
mov
out
or
les
mov
fcmovnbe
fildl
das
adc
push
pop
lock
out
inc
in
negb
sti
loope
lahf
cltd
unpcklps
xor
push
jecxz
gs
pop
push
inc
sub
add
mov
jecxz
or
or
dec
add
push
and
mov
ror
xchg
int3
pop
adc
sub
call
push
jmp
xor
jecxz
jecxz
push
ds
arpl
mov
aad
dec
dec
jo
inc
push
lahf
in
scas
cmp
outsb
push
adc
sarl
mov
cmpl
cmp
and
js
xchg
les
cmp
and
ret
insl
fcmovnbe
push
adc
inc
imul
jmp
mov
mov
jecxz
stos
aaa
shrl
xchg
fiaddl
pop
push
inc
mov
sbb
sbb
pushf
xor
mov
out
or
mov
and
sbb
adc
push
sbb
aaa
pop
jecxz
jp
ja
mov
xor
inc
hlt
in
mov
cmp
fldenv
sub
inc
dec
cmp
fldt
pop
ss
xrelease
xor
lock
xchg
mov
adcl
add
sbb
mov
dec
adc
inc
cmp
pop
mov
in
dec
rolb
cmp
lods
sub
fcmovu
and
mov
into
lret
cld
arpl
mov
ja
ja
fildll
mov
fcoms
xchg
dec
repz
cmc
loope
sub
pop
stc
rcl
fcomi
fiadds
dec
ljmp
repz
push
inc
jmp
stc
call
mov
icebp
in
arpl
enter
fbstp
sti
dec
es
dec
dec
inc
data16
sub
cli
cmp
call
pop
fs
call
negl
cmp
push
rep
jbe
aad
rep
sub
enter
into
inc
aas
xchg
leave
lret
out
jne
shl
add
or
push
lods
and
jne
xlat
push
pop
push
in
bound
jl
push
mov
dec
dec
xchg
jmp
xchg
daa
push
repz
jne
in
cmpsl
dec
dec
xor
testl
out
xchg
aaa
cld
repz
mov
in
int
out
pop
pop
rcll
ficoms
inc
mov
sarb
setbe
cmp
jmp
fwait
dec
aas
adc
xor
out
dec
push
adc
jne
inc
mov
mov
lahf
movsb
sbb
out
cmp
inc
aaa
pop
and
repz
cmpsl
mov
add
inc
pop
jl
sub
jecxz
loope
sbb
cmp
stos
push
in
inc
lea
pop
cmpsl
divl
jnp
lods
out
or
pop
inc
out
das
nop
push
cmp
daa
les
scas
in
mov
fdivrs
jecxz
and
mov
xchg
push
or
mov
ret
mov
lods
push
loopne
push
lea
in
repz
test
and
mov
mov
nop
adc
rorl
dec
inc
sti
cmp
sub
pop
cmp
push
dec
icebp
hlt
sub
jecxz
inc
pop
xor
xor
data16
mov
sub
fisttpl
jecxz
sub
outsb
out
mov
or
dec
inc
cmp
mov
test
ja
stos
sbb
arpl
jmp
push
scas
fs
ljmp
repz
jmp
sar
stos
cltd
and
bound
call
testl
shll
scas
stc
out
inc
into
cmp
movsl
in
sti
das
into
andb
icebp
daa
jecxz
fildll
jmp
fmuls
arpl
xor
push
jne
and
pop
addr16
aas
add
filds
and
mov
addr16
addr16
jae
pop
js
lahf
xor
movsb
xchg
push
lock
and
pushl
loope
arpl
hlt
outsb
adc
in
mov
push
inc
ret
icebp
popf
arpl
jmp
sbb
pop
jg
cmpb
mull
pop
push
jle
in
frstor
jns
xchg
ret
movsb
jbe
mov
mov
mov
push
and
arpl
fs
das
xchg
push
out
push
daa
xchg
mov
cmpsl
jecxz
cld
dec
clc
and
repz
or
scas
inc
ljmp
xor
test
dec
inc
repz
dec
pop
shl
push
push
in
dec
stos
mov
add
and
decl
popf
push
push
sub
mov
fucomp
jecxz
fnsave
aam
mov
sahf
mov
xor
sbb
pop
inc
cmp
adc
ds
push
xor
fisubs
inc
cld
push
loope
loopne
out
push
cmp
xor
dec
cmp
ljmp
orl
add
jne
pop
js
loop
mov
leave
pop
cmp
dec
mov
aad
xor
repnz
xor
jb
jp
adc
pop
stos
push
xchg
jne
movd
add
movsb
dec
jmp
jg
enter
lea
jb
stos
fpatan
ret
or
mov
lods
or
ret
stc
scas
adc
into
ret
stc
out
dec
setnp
dec
jae
loope
addr16
or
out
insl
dec
faddp
or
lds
push
mov
xchg
push
cmp
jo
push
sti
add
mov
arpl
cmpb
stos
dec
mov
xor
cmpsl
cltd
aaa
aam
pop
into
sarb
mov
mov
pop
xor
pop
jecxz
inc
adc
dec
xchg
lods
fcmovne
push
inc
cmp
sbb
or
mov
stos
shlb
xchg
sbb
inc
in
sarl
push
fwait
inc
inc
testb
mov
sub
xchg
dec
shr
movsb
divl
pop
sbb
test
ret
ret
inc
data16
xor
aaa
add
and
andl
jne
xor
gs
fwait
xlat
arpl
xor
mov
and
or
pop
jp
subps
arpl
mov
xchg
mov
pop
stos
pop
icebp
rol
adc
mov
xor
cmp
in
pop
xchg
xchg
sbb
dec
sbb
sub
fildll
fbld
sti
out
or
sti
in
sbb
sbb
sub
lret
mov
rcll
add
arpl
repz
mov
mov
and
inc
fisubrl
and
aas
cltd
fists
cld
lsl
hlt
or
ret
pop
xchg
imull
pop
sti
pop
push
push
mov
push
sbb
jnp
inc
mov
push
sub
daa
enter
in
es
loopne
loop
or
xchg
testb
push
xchg
and
out
jle
fnstsw
stos
fnstsw
pop
sub
repz
mov
mov
push
dec
mov
lcall
sub
dec
repz
ds
sbb
cmpsl
push
int3
inc
pop
or
cmp
inc
shrl
xor
pushl
dec
jecxz
dec
mov
pop
push
out
dec
in
xor
ja
iret
repnz
push
dec
pop
scas
mov
aam
addr16
lret
ja
loopne
jnp
xor
inc
mov
out
push
pop
pop
cmp
adc
mov
ret
jecxz
fildll
aad
inc
arpl
push
fists
shll
test
lea
pop
or
xor
mov
fwait
dec
xchg
jl
in
jae
xchg
addr16
jecxz
and
pushf
cmp
aam
in
jecxz
cmp
sarb
xlat
insl
test
outsl
mov
jae
in
adc
xchg
data16
dec
push
jae
sub
adc
jnp
push
push
sub
cmp
loopne
enter
hlt
add
and
fistl
xchg
xchg
repz
std
outsb
dec
repz
mov
jp
arpl
aam
push
or
or
cmp
cmp
in
sbbb
push
jbe
rorl
out
fistl
inc
cwtl
pop
mov
and
in
sbb
test
out
push
sbb
clc
aam
test
pop
add
leave
in
mov
dec
pop
clc
daa
ret
and
mov
sarl
fmull
fildll
xor
or
cs
and
out
nop
loope
fwait
jle
imul
fidivl
dec
inc
mov
pop
pushf
jnp
dec
fisubl
test
inc
mov
push
cmp
pop
loopne
jecxz
aas
ljmp
dec
in
repz
aas
imul
test
pusha
out
adc
cmp
mov
cmp
jmp
jp
jbe
jb
out
mov
push
push
jnp
cmp
pop
repz
jne
pop
mov
push
lret
arpl
out
rorl
ss
adc
outsb
jecxz
imul
sti
mov
jp
cmp
in
and
repz
aas
dec
int
out
push
imul
in
dec
out
xchg
out
dec
scas
cmpl
cld
pop
out
jno
outsb
dec
fucomp
jecxz
insb
push
jmp
jns
mov
bound
inc
xor
movsb
or
adc
outsb
lods
pop
iret
pop
shr
leave
ja
mov
adc
mov
jecxz
pop
add
mov
xor
or
adcl
sbb
jnp
pusha
sbb
js
jns
ret
stc
and
inc
pop
fcmovb
xchg
mov
xchg
mov
cmp
xlat
jp
aas
into
into
cmp
pop
rcll
adc
push
imul
mulb
cmp
xchg
xor
inc
inc
push
nop
les
shll
xor
out
mov
fnsave
cmp
das
lcall
push
aad
push
xchg
or
pop
jno
mov
into
mov
xor
out
ret
xor
mov
fistpl
mov
testb
jbe
jne
pop
inc
sbb
sub
xor
push
sbb
sub
sub
mov
push
xor
dec
xor
inc
popa
jge
fistl
xchg
and
pop
sbb
mov
inc
hlt
in
mov
fisttpl
sub
adc
outsb
stos
in
cmp
sub
imul
jg
mov
dec
ret
out
stos
jle
jae
add
dec
cmp
mov
pusha
and
jb
mov
xchg
push
test
sub
outsb
clc
pushl
pop
or
and
adc
adc
imul
jl
js
mul
xchg
xor
data16
fs
test
mov
jae
rcll
inc
cmp
addr16
mov
in
shll
pop
pop
cs
inc
arpl
xor
mov
cmp
jae
and
daa
fists
lods
inc
mov
push
inc
stos
add
push
out
xor
out
mov
jo
pop
xor
dec
jae
pop
fstpt
xor
fwait
pop
ret
add
popa
bound
xor
jno
cmp
jne
xlat
mov
hlt
and
lds
cmp
mov
inc
cmp
jae
aad
cmp
cmpb
out
xchg
and
or
push
loopne
sbb
inc
aad
out
pushf
push
add
mov
push
repz
mov
loope
jb
mov
fimuls
add
in
push
mov
inc
dec
out
fsubrp
mov
icebp
jecxz
and
add
inc
mov
mov
loop
dec
push
daa
pop
jnp
pop
lea
jae
inc
jns
dec
xor
mov
out
movsb
push
outsl
cmp
aaa
mov
sub
jno
ret
mov
push
jmp
jae
pop
add
jecxz
stc
les
mov
movsl
add
inc
adc
jae
sarb
push
cmpsl
mov
xchg
test
dec
inc
pushf
arpl
pop
into
ret
loopne
lea
mov
or
mov
cmp
lret
pop
mov
push
sub
out
lret
js
jg
insl
push
jmp
cmp
sarl
je
and
cs
sbb
mov
or
cmp
mov
sbb
pop
pusha
sbb
imul
fabs
out
pop
stos
lds
mov
imul
and
subl
jg,pn
and
fstpt
xchg
les
dec
dec
jmp
push
inc
sbb
jecxz
xchg
cmp
inc
adc
pop
pusha
pop
fnsetpm(287
js
jmp
adc
aam
sub
insl
fildl
addb
aas
dec
add
cmp
pop
dec
cmpb
add
fsubs
imul
cld
filds
ds
lock
out
dec
hlt
push
push
in
loopne
mov
sub
jne
mov
cmp
or
inc
pop
push
cmp
in
ds
out
pop
cmp
aas
xor
jmp
cmp
push
inc
dec
jnp
push
ja
cs
sbb
addr16
jecxz
ret
lret
outsl
cmp
dec
aas
mov
push
or
xor
cmp
aad
xchg
push
jg
xchg
xorl
xorb
and
faddp
fwait
jo
or
mov
mov
inc
mov
jmp
pop
out
ja
in
je
lret
jne
out
lds
scas
sbb
and
mov
mov
orb
in
dec
or
add
adc
aas
divl
out
out
cltd
filds
adc
into
pop
sub
inc
pop
xorps
sti
push
pusha
sbb
loope
jb
cmpsb
inc
push
mov
jecxz
adc
xchg
out
stos
xchg
push
fwait
leave
cmp
adc
aas
call
xor
jnp
arpl
sub
popa
pusha
and
pusha
stc
push
aas
or
fwait
and
dec
adc
jecxz
inc
or
out
ja
cmc
sub
mov
mov
jmp
fstpt
xchg
adc
add
testl
leave
outsl
sub
imul
jo
in
mov
sub
lahf
popl
das
xadd
pop
stos
push
sub
jno
fbld
hlt
repz
jecxz
aad
insl
cld
jmp
inc
push
lret
mov
pop
push
popw
roll
addr16
push
sbb
and
sub
outsb
cmp
inc
mov
inc
addr16
das
mov
and
sbb
testb
fstpl
outsl
push
div
add
sub
leave
dec
insl
shll
stos
enter
inc
pop
sub
lahf
sti
push
pop
mov
mov
mov
pop
sbb
out
dec
inc
and
iret
pop
fs
pusha
dec
cmpsl
aam
repz
xchg
and
mov
xlat
dec
in
ds
dec
mov
fucomi
inc
lods
leave
in
mov
mov
test
pushf
int3
addr16
mov
insb
and
pop
mov
inc
ffree
jl
and
push
stos
push
imul
pop
sub
fildl
out
inc
mov
mov
or
sub
pop
out
pop
shrl
out
insb
jmp
push
cmp
sti
fs
aas
xlat
sbb
push
adc
in
aaa
imul
addl
gs
js
inc
push
shlb
rcll
and
mov
outsb
aas
out
mov
mov
pushl
iret
sub
jb
pop
fmuls
mov
repz
and
out
mov
mov
hlt
jcxz
inc
in
pop
out
pusha
push
pop
mov
pusha
sbb
jg
xor
shlb
das
mov
sbb
sub
sti
lock
popa
dec
or
jb
aaa
loopne
xor
int
mov
ljmp
dec
inc
daa
mov
daa
push
fucom
or
sub
fisttpl
fstpt
ss
in
orps
fcomip
repz
mov
xchg
adc
in
jmp
cmp
hlt
cmp
and
dec
jecxz
xor
inc
push
adc
push
xchg
in
int
adc
stos
xor
pop
orl
cwtl
push
adc
bound
in
dec
pop
sbb
aaa
popa
pop
xchg
in
jae
pop
js
in
insl
rcr
cmc
cmp
xor
out
or
cmc
stc
xchg
ret
or
cwtl
out
pushf
xchg
mov
aaa
outsb
scas
out
cmpsl
and
pop
mov
jno
ror
xchg
popf
jb
cmp
jmp
mov
inc
mov
enter
sar
mov
cmp
and
stos
push
lock
dec
rclb
insb
das
outsl
stos
jb
iret
jo
push
faddl
call
negl
aas
mov
ss
pop
mov
cmp
or
scas
stos
jns
das
adc
sbb
cmp
cmp
mull
inc
mov
jo
negb
dec
dec
pop
fistl
repnz
lahf
jbe
pop
andl
jecxz
cmp
dec
inc
mov
cmp
sahf
cld
outsl
dec
inc
orb
fs
addr16
fcoml
cmp
jae
fs
fsubrs
jg
ret
hlt
add
push
or
pop
out
aad
push
mov
into
mov
mov
cltd
sbb
sbbl
cs
sbb
dec
xor
dec
lret
push
inc
add
push
fimull
pop
push
inc
mov
jb
xchg
cli
in
mov
lock
xor
adc
inc
jecxz
fistl
dec
inc
pop
pop
push
aaa
lea
sbb
dec
push
inc
imul
iret
dec
or
popa
arpl
repz
aas
mov
and
dec
and
pop
xchg
aas
sbb
inc
dec
push
imul
jb
adc
jecxz
test
xchg
mov
inc
les
cmp
insl
les
lret
test
sahf
xor
jecxz
or
pushf
imul
out
sub
cmp
pushaw
dec
bound
call
inc
push
sub
and
and
fimull
ljmp
sub
enter
stc
inc
xor
or
ds
pop
mov
xor
push
es
mov
jecxz
inc
scas
das
sarl
out
inc
xor
out
inc
arpl
inc
inc
inc
mov
pop
lret
mov
inc
jecxz
jecxz
sbb
out
test
in
repz
aad
ja
jg
cmp
adc
lahf
pop
adc
jecxz
push
jnp
sub
jmp
dec
adcl
es
and
aas
fs
mov
lcall
jne
jecxz
dec
bnd
ret
js
cmpl
fisubs
pop
outsb
out
lds
or
adc
adc
aas
inc
or
adc
cmp
mov
mov
mov
pop
pushf
jnp
das
int
lcall
and
jae
mov
fstps
xlat
cmp
je
repz
cmp
jecxz
lods
xchg
sar
adc
neg
dec
pop
test
sbb
arpl
daa
mov
lods
xchg
pop
sbb
jb
fistpll
daa
ljmp
xchg
sub
and
inc
jne
pop
stc
xor
mov
add
dec
imul
mov
dec
mov
xchg
daa
inc
movsl
sbb
psrlw
outsl
pop
sub
daa
inc
jae
jg
xor
pop
and
outsl
dec
cmp
stc
ret
lea
sbb
ljmp
push
loopne
xchg
xor
ret
ffreep
repz
dec
mov
jg
xchg
jb
lret
mov
fistpl
push
pop
pop
fstp
jge
pushf
sbb
mov
fcomip
in
xchg
inc
dec
jecxz
cmp
loope
cmp
mov
cmp
push
push
xchg
inc
add
sub
adc
icebp
test
pop
inc
jmp
int
scas
cmp
call
sub
inc
mov
xlat
rcrl
lods
or
mov
arpl
fs
dec
sbb
enter
mov
ret
push
sub
fwait
mov
jecxz
jbe
ljmp
inc
pop
les
repz
ret
mov
mov
mov
xchg
pop
ja
mov
push
pop
mov
imul
sub
cmp
jg
mov
inc
or
sti
dec
enter
cmp
push
inc
jecxz
pop
inc
in
fbld
stc
add
pushf
or
or
out
mov
fcmovne
mov
fmuls
dec
cmovns
mov
stos
orb
dec
mov
adc
orb
push
cmovge
pop
xor
cmp
sti
outsl
adc
cmp
lret
popa
inc
out
pop
or
imul
sbb
outsl
loopne
mov
add
adc
rorb
lret
jnp
jg
enter
jg
inc
daa
arpl
fcmovbe
xchg
imul
sub
into
mov
push
fbstp
inc
ret
inc
decb
inc
and
sbb
les
sub
mov
jae
mov
dec
pushl
mov
cmp
cld
cmpsl
jbe
jmp
xor
jg
xor
scas
arpl
fisttpl
daa
push
xor
sub
or
mov
fisubl
aas
sbb
cltd
idivl
das
xchg
movl
jnp
mov
jno
lea
push
pop
repz
xchg
push
jmp
sub
cmp
std
or
inc
es
mov
push
or
sbb
in
pop
ja
xor
dec
outsb
add
fwait
ret
fistpll
test
les
gs
push
gs
xchg
dec
jae
xor
ja
jmp
sbbb
sbb
loopne
in
sbb
push
movsl
fimull
dec
out
pop
sub
cmpb
and
sub
sub
loopne
mov
push
dec
daa
add
jnp
and
shll
xor
stos
sub
imul
and
in
das
pop
xchg
sbb
mov
xor
shrl
and
inc
mov
iret
pop
adc
nop
jnp
arpl
aaa
mov
imul
jne
data16
sarb
jno
sbb
pop
pop
mov
fnstenv
in
inc
mov
ret
pushf
dec
stos
cmp
mov
mov
inc
repz
aas
aaa
daa
enter
inc
fbstp
inc
addr16
xchg
or
clc
inc
jae
lahf
and
jecxz
ds
enter
out
dec
stos
aam
mov
push
loope
ljmp
outsb
out
stc
mov
stos
xchg
fists
cmp
mov
out
cmp
les
fsubrs
sub
sbbb
dec
cmp
ja
jecxz
adc
inc
in
aas
or
inc
jecxz
cmp
sub
inc
cmp
jl
sbbb
xchg
dec
jecxz
push
adc
pushf
imul
sub
icebp
dec
xchg
pop
andb
movsb
scas
aaa
pushf
inc
jb
cmp
dec
xchg
iret
lahf
mov
adc
lahf
sub
stc
xchg
repz
inc
fwait
std
lds
shl
lret
sub
xchg
mov
push
pushf
std
dec
hlt
je
or
pop
daa
arpl
mov
in
jbe
std
jo
push
xchg
ror
pop
mov
stos
inc
leave
iret
and
add
push
fnstsw
test
adc
aad
inc
adc
jnp
xchg
fcmovnb
xchg
iret
sbb
adc
cmp
dec
inc
out
sub
addl
pop
jnp
dec
cmp
lcall
push
jbe
unpcklps
sbb
xorb
xchg
and
jae
xor
inc
sub
jne
dec
push
pop
aas
mov
dec
mov
out
icebp
xchg
sbb
push
mov
xor
xor
js
lahf
aad
sub
daa
popa
cmp
jle
push
jp
pop
xchg
push
int3
push
lcall
fiaddl
fstpt
inc
lcall
stos
rcrl
dec
cmp
mov
dec
das
xchg
call
ja
stos
or
sub
adc
lret
mov
mov
pop
js
pop
mov
repz
jo
or
push
pop
xor
stos
mov
mov
lret
xchg
xor
fdiv
movsl
mov
mov
sub
and
jb
sti
jb
and
outsb
dec
fs
jmp
push
fwait
stc
inc
shl
test
clc
push
sub
xchg
daa
cmp
and
pop
sub
and
push
dec
cmp
push
pusha
ss
aaa
and
xor
xchg
outsb
or
sub
adc
pop
fldl
out
push
fldl
out
cli
out
aas
lahf
xchg
mov
xchg
popa
rolb
xchg
je
inc
out
ret
ds
push
test
mov
jae
movsl
and
daa
sbb
push
mov
pop
stos
repz
std
xchg
mov
dec
scas
pop
lret
ret
inc
icebp
pushf
out
addr16
push
popa
cmp
xchg
xlat
xchg
movl
dec
orb
cmp
mov
aad
pop
lds
sti
push
rcrl
lret
ret
cmp
insb
aas
add
aaa
mov
jle
sbb
movsb
jae
adc
push
lock
sub
outsl
dec
les
sbb
add
adc
inc
ljmp
call
bsr
sbb
lret
in
cmpsb
insl
subb
ficomps
mov
arpl
jno
hlt
and
or
sbb
adc
push
inc
mov
cmpxchg
xchg
sub
or
mov
das
push
push
movsl
loope,pt
pmaxsw
cmovge
ljmp
jmp
cltd
fwait
pop
push
sbb
ret
addr16
leave
inc
in
outsl
xchg
stos
stos
repnz
int3
push
subb
xlat
and
lret
fmuls
insl
xchg
out
das
sbb
dec
cmp
inc
sub
ret
mov
jmp
lods
cmp
aas
loopne
ret
push
add
enter
arpl
mov
inc
mov
testl
out
xor
xchg
sub
mov
mov
shlb
jmp
loopne
mov
leave
xor
pusha
push
xchg
dec
bound
inc
add
cmp
subl
lret
cmp
movsb
in
imul
add
xchg
fucomp
insl
inc
inc
pop
cs
sub
cmp
mov
fistpl
arpl
sbb
lret
stos
pop
or
and
addr16
sbb
push
ss
rcrb
or
repnz
mul
mov
test
mov
mov
pop
into
neg
inc
das
div
and
push
flds
mov
shrl
idivl
add
notl
cmpsl
cmp
pop
gs
inc
out
inc
sete
push
mov
in
aas
outsb
in
mov
dec
cmp
or
push
cmp
sub
xchg
push
adc
mov
pop
pop
mov
shlb
jno
ljmp
ljmp
lea
push
xchg
repz
sub
hlt
lahf
cmpxchg
imul
out
leave
push
in
in
imul
arpl
mov
pmuludq
jmp
rcl
jo
lret
mov
stc
inc
xchg
add
mov
negb
adc
aam
xor
dec
cmp
mov
jl
pop
cmp
inc
jbe
out
js
sub
rcrb
fisttpl
xor
dec
inc
sub
cmp
rclb
jnp
inc
mov
inc
jae
mov
or
inc
stos
and
dec
mov
fwait
inc
repnz
imull
sti
stos
pop
lret
xorl
push
ret
and
scas
testl
fistpl
jns
int
fistl
xchg
or
jnp
push
shr
std
ret
xor
lea
pusha
jae
movsb
push
jecxz
push
inc
dec
fwait
cltd
inc
sub
jnp
ds
push
mov
push
lret
outsl
lods
and
lret
sbb
cmp
and
sbb
repnz
xchg
mov
out
mov
push
iret
mov
mov
filds
int
and
lret
jg
pusha
adc
sub
add
mov
scas
dec
imul
bound
pop
mov
mov
xchg
xchg
in
push
fcompl
sub
cmpsl
lods
testl
lock
int
mov
mov
imul
mull
mov
fs
push
fsubl
mov
aaa
stos
es
jecxz
sbb
imul
mov
das
dec
inc
and
out
ret
ds
pop
fisttpl
fstl
into
add
and
repz
xchg
arpl
cmp
mov
scas
andb
lock
push
in
or
inc
out
stos
movsb
push
cmp
push
push
mov
push
pop
mov
xchg
cwtl
fwait
out
pop
mov
jbe
cmp
jae
add
stc
dec
jo
add
aas
inc
inc
xchg
pop
lahf
xor
sbb
lea
shr
inc
cmpsl
jecxz
leave
pop
inc
xor
cmove
cmc
add
daa
cmc
cmova
cmp
out
dec
jl
mov
xchg
scas
sti
push
div
enter
shrd
outsb
hlt
ja
push
or
insb
push
icebp
fstpl
out
cs
xchg
push
in
xlat
popa
sub
jne
stos
cli
push
sub
mov
aaa
push
repnz
fildl
jno
pop
or
xlat
inc
mov
cmc
ja
xor
add
dec
cmp
pop
bound
fbstp
pop
sti
mov
fildl
xchg
adc
cmp
add
stos
jb
jmp
leave
in
jns
inc
cld
icebp
mov
and
les
pop
test
out
mov
and
imul
icebp
or
hlt
scas
fs
mov
test
push
mov
pop
sbb
push
sbb
jnp
pop
xor
jmp
or
out
pop
mov
fwait
inc
push
xchg
xchg
repz
repz
shrl
push
fnstcw
int3
inc
push
jbe
adc
iret
pop
or
push
nop
add
cli
dec
cli
popa
jmp
mov
cmp
mov
test
test
fisttps
xor
stc
nop
mul
inc
sahf
sbb
mov
jl
push
insb
movsb
out
fwait
negl
fsubrp
arpl
xchg
pop
jmp
sbb
in
dec
mov
xor
mov
je
hlt
mov
and
fnstcw
popa
push
in
testl
adc
mov
lret
dec
dec
push
dec
xor
scas
push
aam
rcll
sbb
push
pop
inc
pop
inc
and
cmp
stc
daa
sti
dec
lret
xchg
mov
cmp
pop
aad
cmpsl
in
das
cmc
scas
mov
es
ret
sbb
popa
push
sbb
and
jmp
jecxz
les
ret
or
inc
mov
popa
ss
mov
add
inc
mov
les
js
ficoml
test
out
mov
dec
jnp
push
xchg
xor
ljmp
mov
enter
mov
xchg
into
push
xor
ja
push
inc
shll
lahf
or
mov
or
lahf
shld
mov
shlb
outsl
pop
cmp
inc
or
out
xchg
jbe
rorl
pushf
imul
jbe
sbb
and
push
xchg
adc
adc
inc
jae
shr
add
enter
ret
xchg
icebp
andb
je
fstpt
mov
xchg
xor
and
js
mov
outsl
or
xchg
cmp
fsts
ds
cs
fwait
dec
icebp
and
fwait
ljmp
jg
push
cmp
lret
das
xor
mov
mov
and
jbe
stos
sbb
fwait
mov
fstp
int
mov
jp
fdivrl
outsl
jno
jmp
mov
mov
xor
jmp
addr16
push
jecxz
and
push
push
je
imul
mov
pop
pop
rcll
xchg
adc
rcrl
iret
jmp
outsb
pop
jno
outsl
ja
or
addr16
in
inc
jg
cmp
mov
push
pop
adc
aas
and
stos
lahf
ss
push
daa
cmp
dec
dec
push
sub
lds
fnstcw
ficomps
xorb
call
leave
iret
add
mov
push
fldt
dec
sar
jecxz
pop
mov
xchg
insb
cmp
inc
imul
stos
fisttps
pop
data16
add
loop
sub
out
sarl
mov
or
pop
data16
inc
pushf
stos
lea
and
movsl
xchg
sub
nop
cmp
pop
mov
out
js
push
dec
insb
js
pop
cmpsl
leave
mov
inc
in
jne
mov
jge
rclb
fisttpl
and
sti
out
dec
imul
push
sti
pop
mov
or
mov
inc
icebp
mov
stos
nop
scas
inc
xchg
inc
pop
leave
mov
dec
push
insl
insl
pop
cmp
shrl
lret
repnz
or
sub
inc
fwait
push
iret
xchg
out
rcll
lret
sahf
sub
jno
dec
push
sub
sub
mov
mov
sub
orb
or
cmp
mov
je
pop
lcall
jmp
rorl
xor
je
inc
mov
repz
cwtl
int
jle
mov
scas
into
scas
jmp
push
dec
pop
testl
dec
inc
aas
fildl
enter
outsb
sub
xlat
lods
xchg
cmp
cwtl
cmp
mov
xor
pop
inc
xor
aas
in
stos
cmp
inc
fistpll
pop
imul
inc
adc
push
jecxz
add
dec
adcb
test
cltd
in
repz
cmp
xor
jno
movsb
mov
mov
shrb
sarb
leave
ret
bound
or
sub
sub
js
iret
imul
and
ja
mov
lret
mov
lds
arpl
xchg
sarl
push
xor
arpl
popf
jno
mov
xchg
jge
in
inc
clc
push
or
inc
movl
inc
inc
scas
and
xor
mov
iret
sarl
or
inc
out
popa
inc
jne
cmp
ss
xchg
out
and
mov
dec
inc
mov
inc
pop
pop
insl
fildl
fcmovnbe
sub
push
jecxz
or
aad
pop
pop
andb
jne
out
aam
cmpsl
jge
add
rcrl
inc
mov
repnz
cmp
cmp
in
jecxz
ret
add
inc
or
movsb
xor
pop
and
ljmp
pop
sub
sbb
test
into
sub
xchg
lret
dec
pop
jg
lods
mov
sti
add
dec
testl
xchg
jecxz
pop
mov
insl
out
lods
add
stos
xchg
in
ret
cmpsl
ret
mov
or
les
ret
leave
pop
lds
enter
stos
insb
mov
ret
lea
jae
ret
add
inc
addr16
push
cmp
lret
jmp
sbb
inc
and
cmp
ret
xor
mov
dec
xor
out
or
repz
int3
jns
in
jb
mov
mov
or
lock
addr16
fwait
jae
rorb
push
sub
jmp
jo
out
sub
aas
fldt
or
jmp
aam
cmp
stos
sub
sarl
xchg
fwait
jle
stos
xchg
dec
cmpsl
dec
pop
sbb
pop
in
mov
inc
stc
ficomps
shl
dec
xchg
push
dec
or
and
jnp
daa
mov
dec
test
pop
int
xchg
imul
lods
push
aam
nop
sbb
outsb
ja
mov
mov
dec
fistps
fistpll
mov
imul
dec
pop
addr16
sub
je
shll
cli
sbb
add
insb
stos
mov
pusha
fs
dec
andl
inc
dec
ja
movsl
cmp
xor
pop
daa
icebp
into
inc
mov
outsl
fcomp
push
add
insl
dec
lahf
scas
fs
popf
les
pop
add
or
xor
or
sub
sbb
shll
inc
in
xor
sbb
out
jmp
out
in
int3
aaa
out
push
daa
lock
xchg
out
mov
rcr
and
sahf
jbe
xor
sbb
xchg
push
fbstp
fistpll
mul
movsb
ds
inc
cmp
stos
mov
mov
jecxz
add
jno
adcl
mov
inc
pop
push
iret
in
repnz
push
and
dec
out
inc
std
cmp
inc
inc
fwait
sbb
jg
lea
in
out
mov
cld
cmp
inc
dec
movsb
pop
mov
dec
aas
daa
add
push
pop
out
dec
push
cmp
nop
push
fwait
sti
fs
and
push
ficoml
roll
inc
roll
imul
pop
inc
inc
test
cltd
jae
insl
fstpt
fisubrs
dec
stc
in
stos
mov
stos
sbb
insl
jmp
sub
lock
push
mov
shlb
mov
sub
pushf
or
cmpsb
cmp
int3
sbb
and
sub
dec
jbe
mov
lea
cmp
aam
cmp
div
push
and
jg
push
into
outsl
insl
cmp
insb
rolb
mov
jns
test
jg
ret
sub
ljmp
mov
pop
mov
in
lods
mov
add
and
mov
pusha
fisttpll
mov
sbb
popf
testl
push
add
fistps
adc
out
pop
sub
stos
sub
cmp
sbb
aam
filds
xchg
dec
popa
or
icebp
push
xlat
pop
popa
mov
jno
pop
lret
xchg
mov
test
mov
repz
cmp
notb
pop
dec
ja
jecxz
subb
es
lock
nop
cmp
and
and
lds
pop
mov
cmp
jg
pushf
jmp
push
js
cltd
and
test
inc
icebp
into
dec
lock
in
jne
aas
sub
xchg
imul
hlt
cltd
add
mov
xchg
and
inc
loope
mov
push
scas
nop
cmp
mov
push
sbb
pop
pop
cmp
loopne
xchg
aaa
add
dec
lea
addr16
and
ja
cmp
mov
movsl
loop
jle
das
filds
xor
cmc
mov
xlat
inc
dec
movsb
inc
imul
inc
xor
cmc
leave
sbb
hlt
push
inc
cmp
les
jmp
cmc
inc
push
jl
dec
dec
xchg
int3
cmp
out
setl
cltd
mov
mov
ds
aaa
sub
ret
jecxz
and
mov
out
imul
mov
cmp
jo
sbb
push
out
mov
dec
ret
sub
sub
out
or
jo
and
test
idiv
ret
dec
xchg
pinsrw
jge
mov
jle
sub
lcall
test
xchg
cmp
out
pop
ffreep
and
lahf
fildl
mov
lea
xchg
push
and
xor
fldenv
xchg
jo
push
dec
repnz
sub
daa
ror
shrl
fisttpl
jo
lds
mov
xchg
xchg
push
jae
jbe
cmp
scas
data16
jecxz
stos
push
call
and
fucomip
push
dec
pop
xor
sbb
or
or
xlat
lods
jg
add
ficompl
ret
cmp
int
fstp
lahf
insb
sbb
rcrb
movsl
aam
aaa
cmp
mov
jo
xchg
rcrl
fwait
dec
push
aam
fistpll
jecxz
test
lods
jne
lret
lret
outsb
mov
cmp
push
test
outsl
repz
sbb
ret
out
out
mov
inc
out
pop
je
mov
cltd
jecxz
mov
addr16
and
add
insb
lahf
fists
sub
cmp
mov
rdmsr
jecxz
push
sti
enter
loope
daa
xchg
mov
mov
in
push
adc
cpuid
add
pop
mov
testl
push
dec
pop
mull
sahf
mov
je
cwtl
or
push
and
dec
dec
inc
ret
out
hlt
and
test
imul
cmpsl
inc
or
movsl
and
pop
popa
ret
push
mov
stc
adc
or
pop
jecxz
repz
push
cmp
pop
mov
inc
test
repz
dec
mov
mov
sbb
addr16
lock
daa
pop
sbb
push
dec
fwait
lret
out
cmp
out
repz
addr16
jo
mov
sbb
in
adc
gs
nop
lret
push
stos
cmp
sbb
pop
sbb
sbb
pop
iret
fcomps
outsb
jmp
mov
daa
aas
xor
mov
dec
pop
sub
daa
hlt
jne
mov
inc
ss
jae
scas
sub
sbb
xor
fildl
mov
inc
inc
or
dec
or
ja
cmp
lcall
sbb
aad
repz
pop
push
jmp
jmp
inc
icebp
sbb
cmp
sbb
shr
dec
test
sbb
fwait
cltd
mov
mov
mov
ja
sub
pop
sarb
out
jb
cmp
movsl
sarl
xchg
in
rcl
xor
xchg
mov
sbb
push
dec
repz
stos
push
jecxz
and
dec
xorl
jmp
mov
imul
pop
movsb
jbe
insl
ret
mov
je
out
push
js
jmp
add
or
sub
or
fwait
lods
in
jae
mov
dec
in
into
sti
dec
scas
fistps
adc
and
dec
add
imul
push
jecxz
icebp
mov
lcall
push
movsb
xor
in
jmp
int
cs
testb
stc
xchg
insb
inc
sbb
out
push
or
mov
or
or
test
lods
mov
fisttps
and
mov
rcrb
in
inc
pop
cmp
xor
jbe
mov
dec
mul
inc
fisubrl
xchg
mov
loope
out
sbb
cmp
out
adc
shrb
mov
shl
and
mov
mov
xlat
push
insb
dec
testb
pop
push
mov
sti
shl
movsl
arpl
jmp
in
jmp
jecxz
testl
or
out
je
dec
mov
movsb
xor
leave
add
xchg
jb
into
roll
fs
lock
sbb
lds
rcl
cltd
leave
inc
or
cltd
sub
and
repnz
mov
cmp
fisttps
adcb
std
or
inc
dec
fldt
sub
inc
leave
mov
cmp
enter
jo
pop
in
xorb
add
fistpll
pop
xchg
add
dec
mov
sub
pop
aaa
test
mov
cltd
rcrl
adc
and
push
mov
sbb
mov
mov
aas
fwait
fwait
aad
aam
xlat
lret
rorb
lea
sbb
or
mov
pop
push
or
xor
addr16
mov
into
imul
cltd
jnp
cmp
jae
push
mov
jb
test
pop
scas
int3
xor
loope
xchg
insb
arpl
pop
divl
stos
into
pop
sub
mov
or
es
ljmp
daa
stc
pop
mov
and
in
and
and
or
jns
rolb
fisttps
xchg
inc
scas
fisttpl
adc
data16
fstpl
mov
xor
push
divl
in
jecxz
jp
ret
out
xchg
sub
add
insb
fwait
in
leave
pushf
cmp
out
cmp
pop
imul
in
loope
out
mov
scas
cli
inc
stc
test
test
in
mov
in
xchg
les
sahf
scas
ret
cmp
ljmp
pop
xor
stos
push
xchg
push
dec
int3
dec
xchg
and
sti
xor
jecxz
push
stos
push
push
data16
or
xchg
rorl
je
das
jecxz
insl
enter
mov
daa
inc
mov
jp
jecxz
cmpsb
fwait
ja
pop
push
pop
lahf
inc
in
loope
call
push
shll
aam
push
out
inc
out
lret
aad
dec
pop
aam
inc
out
add
dec
pop
xchg
repz
xchg
inc
xor
icebp
lahf
imul
ja
imul
stos
pop
xor
pop
pop
daa
push
cmpsl
dec
mov
push
xchg
imul
jae
cmc
out
xor
iret
xchg
mov
roll
dec
lret
push
xor
xchg
and
pop
divb
fwait
cmp
pusha
xchg
imul
jnp
sbb
je
jmp
mov
aad
adc
xlat
fisubrs
xor
scas
pop
cmp
sub
insb
and
mov
dec
pop
jmp
sub
jb
gs
fistpll
push
push
jnp
faddl
jbe
inc
push
push
icebp
in
lock
por
pop
iret
adc
inc
jecxz
jno
jmp
cmp
inc
sbbl
push
arpl
push
pop
sub
xor
cld
cmp
and
pusha
add
jecxz
in
out
or
or
dec
negb
dec
adc
scas
stos
int
pop
cmp
sub
sti
jecxz
jg
or
out
stos
jmp
sti
lcall
adc
mov
pop
dec
adc
loopne
aaa
add
in
adc
mov
sbbb
out
popa
clc
pop
adc
scas
xor
ret
testl
jne
xlat
loope
loope
gs
cmp
je
mov
stos
lds
mov
and
pop
incl
pop
hlt
jge
push
inc
out
sub
sti
lea
pop
dec
pop
adc
fcomps
in
mov
sahf
pop
inc
add
adc
pop
cmp
xor
ja
aad
sbb
int
stos
jp
jmp
ret
or
fcmovbe
cmp
xlat
add
ret
xchg
mov
shll
mov
movsb
fsubp
dec
cld
out
aas
rol
pop
cs
aaa
inc
xor
movsl
jl
sub
push
sbb
add
repz
xchg
dec
icebp
and
fbstp
xlat
pop
movsl
xor
push
mov
lret
movsb
shrb
mov
xchg
jmp
jne
xor
add
xor
es
inc
insb
cmp
xor
shrl
fucomp
and
inc
out
stos
mov
out
push
imul
dec
fstp
mov
arpl
jno
test
fnstenv
inc
mov
mov
lods
ja
or
mov
popa
aaa
mov
out
cmp
sub
sar
xchg
gs
pop
lret
jo
shll
and
push
ds
aas
insl
inc
cmc
call
jmp
push
sub
fnstenv
pushf
iret
pop
stos
push
pop
push
cmp
dec
aad
cmp
dec
add
fisttps
stos
fisubl
mov
jmp
push
jp
ficoml
loopne
or
aad
pop
imull
pop
fisttps
push
inc
fistpl
daa
fnsave
out
or
stos
cld
jo
mov
jno
jp
out
jns
shrb
out
jp
pmaddwd
fistpll
loopne
out
mov
sti
mov
stos
and
mov
xrelease
in
jecxz
and
inc
mov
dec
outsl
xor
jnp
ja
xchg
insb
dec
dec
hlt
out
inc
jae
and
aas
ja
push
jp
sti
and
pop
cmp
setb
mov
cmp
addr16
inc
pop
movsl
xchg
daa
addr16
outsb
pop
rorl
inc
xchg
or
xchg
idivl
jmp
lret
in
mov
fisttps
mov
jp
jae
or
mov
inc
fs
ret
xorb
hlt
pop
and
add
imull
fisttpl
out
lods
adcb
scas
aas
cmc
jge
mov
cvtpi2ps
daa
gs
aas
xchg
cmp
repnz
cmp
iret
xor
mov
inc
aas
push
cs
sbb
adc
push
cmp
push
stos
add
cmp
cmp
xor
adc
push
rcrl
in
fistps
or
enter
into
pop
cmp
pop
outsb
lcall
movb
sti
mov
sbb
jns
mov
xchg
leave
aas
movhps
pop
push
pop
pop
aas
push
push
imul
ret
pusha
pop
jnp
test
repz
pop
dec
push
xchg
stos
sbb
insl
sahf
mov
lea
pusha
or
jae
sbb
popa
testl
cwtl
and
dec
test
popa
mov
cmp
push
xor
and
in
and
in
jb
push
dec
sub
stc
pop
out
mov
pop
sbb
cmp
fidivs
rep
inc
cmpsl
push
enter
stos
sub
out
jo
fldt
fisttpll
push
pop
add
xor
or
jecxz
in
jecxz
xchg
push
pushl
out
xor
pop
rorl
fwait
in
cmp
pop
jecxz
cmp
ja
leave
pop
inc
in
cmp
pop
adc
or
adc
out
xchg
inc
jle
mov
fisttps
negl
in
and
test
fcmovbe
mov
aas
and
iret
cltd
lret
icebp
mov
and
sahf
jb
sub
mov
dec
arpl
cmp
pop
lds
mov
ja
out
push
insl
in
outsl
out
jb
cmp
and
inc
out
in
pop
in
cli
pop
and
xchg
mov
sub
mov
cmp
cmp
mov
pop
add
pop
iret
in
push
or
jne
sti
push
jmp
je
fsubrp
xchg
cmp
arpl
lods
sti
data16
shl
enter
movsl
pop
repnz
rcrb
rcl
pop
mov
fcomp
repnz
in
mov
jp
cwtl
enter
imul
push
mov
pop
fs
xor
out
push
sarl
mov
pop
pop
imul
push
push
ljmp
aad
ljmp
ja
addr16
push
or
test
jnp
dec
rcr
push
in
mov
push
inc
daa
pop
gs
insb
dec
loopne
popa
bound
shrb
popf
out
dec
sti
divl
cmpsl
clc
cmp
push
adc
stos
xor
out
mov
scas
or
movsb
or
or
into
sbb
lds
hlt
or
mov
insb
push
and
mov
aaa
jno
aam
test
cmp
push
movsb
out
std
fs
cmp
mov
push
in
mov
push
and
sub
cmp
test
scas
xchg
and
incl
push
pop
pop
outsl
pusha
inc
in
and
pop
out
inc
clc
add
testb
inc
push
xlat
cwtl
sub
ja
dec
out
ljmp
notl
roll
push
xchg
lahf
test
or
xchg
movl
inc
aaa
or
push
mov
and
enter
or
mov
dec
movsb
mov
xchg
repz
fwait
stos
push
inc
hlt
dec
dec
mulb
jecxz
test
out
xchg
and
and
push
sarl
pusha
push
push
mov
lcall
cmp
cmp
shrb
fstps
push
lea
popa
sti
mov
mov
and
adcb
shlb
pusha
sti
mov
aad
sbb
js
out
push
dec
in
loopne
mov
repz
adc
repz
popa
pop
xchg
lret
cmp
cmp
mov
lret
xchg
sbb
mov
dec
and
mov
push
adc
shrb
mov
push
insb
sub
push
mov
loope
sbb
aam
cmc
rolb
mul
jne
push
fistpl
dec
xor
fstl
fstl
lea
into
imull
out
fcompl
adc
mov
out
adc
js
fcmovne
rorl
and
jmp
ds
f2xm1
scas
dec
imul
push
sar
insb
cmp
adc
fs
scas
gs
loopne
out
fidivs
inc
movsb
push
stos
sbb
orl
cmp
push
mov
push
outsl
xchg
jae
mov
fs
lods
pop
push
shll
push
js
mov
mov
addr16
push
xchg
pop
into
loope
pop
ret
sbb
in
mov
hlt
lret
fs
mov
flds
inc
ret
push
ret
out
jecxz
inc
xchg
cltd
out
test
jae
cmp
add
lret
insl
sbbl
jae
sbb
in
data16
mov
push
imul
mov
cli
leave
xchg
loop
jae
sbb
insl
in
popf
jae
or
mov
sar
outsb
jo
adc
sub
adc
sbb
ja
mov
push
fsubrs
imul
mov
push
add
rep
jbe
jecxz
jnp
pop
cmp
pop
jg
xchg
dec
push
bound
das
or
out
cmpsl
adc
dec
or
mov
inc
jecxz
xor
daa
mov
jmp
notl
out
sub
les
loope
testl
jmp
aad
repz
fisttpl
movl
test
pop
sti
adc
leave
add
adc
xchg
jecxz
in
arpl
pop
cmp
mov
repz
mov
xchg
pop
xlat
xor
fnstcw
mov
out
or
sbb
inc
pop
aas
lcall
cmp
dec
xchg
in
sbb
pop
push
push
scas
push
push
push
jnp
mov
mov
push
ja
dec
out
repz
mov
ljmp
dec
test
outsl
add
inc
out
push
iret
into
or
mov
movntq
out
enter
push
pop
lds
adc
repnz
out
ret
inc
add
notl
inc
in
or
cmpl
cmpl
add
ds
jmp
dec
aas
in
jecxz
mov
lret
or
lret
mov
cmp
dec
addr16
daa
dec
mov
pushf
lods
arpl
pusha
sub
orl
imul
pop
lds
sarb
cmp
mov
sub
sti
cmp
cmp
push
and
dec
fbstp
sbb
sub
shlb
faddl
roll
ja
dec
mov
das
dec
repz
pop
inc
daa
scas
addr16
cmpsl
sbb
mov
sub
repz
das
aaa
mov
test
xor
mov
dec
repnz
lahf
in
mov
testb
mov
pop
xchg
dec
mov
hlt
mov
jmp
mov
into
negl
out
dec
fnsave
fisttps
filds
mull
out
mov
fucom
push
or
ud2
pushf
jecxz
popa
int3
dec
pop
xor
aaa
imul
or
rolb
push
shlb
mov
mov
in
cmp
je
aaa
or
jae
sbb
xor
jp
fidivrl
xchg
sbb
sub
sub
cmp
push
cmpsl
pop
and
scas
xor
clc
pushf
inc
xchg
mov
mov
jecxz
push
inc
fstl
cmp
in
jnp
inc
push
jg
push
mov
mov
inc
mov
jmp
jecxz
clc
mov
in
add
pop
movsl
inc
mov
xorl
out
ret
inc
out
out
outsl
fs
in
imul
push
scas
std
mov
je
outsb
sbb
insl
js
lds
add
sarl
movl
into
or
lahf
rcrl
sbb
add
mov
popa
pop
repz
iret
mov
sub
cmp
dec
aad
jg
adc
xor
cmp
shrl
loop
cmp
out
and
cmp
xorb
jno
jmp
insb
jbe
mov
in
mov
fucomip
mov
jmp
fbstp
push
push
dec
sub
xchg
and
jl
lea
rcll
pop
scas
testl
push
arpl
dec
push
xor
sti
pop
pop
push
push
ret
dec
jns
addl
fnstcw
jp
out
mov
pop
inc
insb
mov
js
jmp
or
imul
fisttps
pushf
pop
out
and
mov
out
pop
adc
shrl
int3
jp
divl
xchg
in
xchg
das
cmp
fildl
out
jbe
rorl
mov
test
jl
xchg
push
jg
sti
ljmp
in
xchg
add
in
xor
ret
and
sti
jp
cmp
dec
in
and
sbb
ucomiss
fistpll
sti
dec
push
sti
dec
aas
fwait
push
pop
cwtl
rcll
jae
les
mov
lret
inc
in
pusha
jno
xchg
iret
or
fmul
out
pop
movsl
loope
dec
dec
or
push
lret
mov
push
iret
out
roll
mov
in
inc
imull
in
inc
shrl
sbb
insl
dec
imul
lret
and
stos
popaw
push
cmp
inc
lods
jne
adc
stos
pop
mov
into
jae
pop
test
leave
imul
divl
int
cli
fcom
ret
stos
insb
imul
mov
xor
aas
jb
and
pop
sbbb
dec
push
lock
xor
out
xlat
je
js
jle
jb
lret
packuswb
lods
ds
or
push
jmp
mov
mov
mov
inc
outsl
and
dec
fs
and
adc
jns
mov
jp
mov
cld
jecxz
mov
inc
inc
jbe
or
pop
nop
inc
cs
loopne
das
mov
loope
dec
mov
xor
dec
out
xor
dec
inc
jecxz
xchg
in
or
imul
fdivrl
paddusb
fucom
dec
out
or
sbb
sti
adc
je
pop
jno
aam
add
aas
xchg
fistl
jmp
inc
mov
adc
jecxz
or
add
out
mov
fsubs
jne
rorb
xor
scas
fcmovne
mul
jle
pop
stos
int
out
popa
out
jmp
xchg
notl
sarb
dec
push
or
dec
mov
push
jmp
xchg
daa
pop
mov
pop
jecxz
sub
shrl
xchg
shrd
minps
pusha
and
jmp
stos
cmp
add
lea
inc
scas
mov
shll
ret
and
dec
dec
test
loop
daa
imul
lods
and
int
lds
les
add
dec
xor
in
xor
cmpsb
in
push
lret
cmp
dec
clc
enter
mov
fidivrl
clc
shll
ljmp
mov
imull
and
fsubs
out
jno
cmp
mov
mov
fsub
js
bound
shlb
lods
outsl
jecxz
fcomps
and
cmp
scas
inc
dec
fisttps
or
imul
mov
lret
shll
cmpsb
addr16
in
popa
and
push
dec
or
imul
xchg
repz
sbb
jmp
jb
and
and
div
in
push
dec
mov
out
push
push
arpl
in
daa
cmp
and
dec
sub
sub
jo
shl
stos
cmp
hlt
pop
div
fistl
notl
mov
dec
or
fistpll
xchg
jno
repz
inc
xchg
pop
out
and
and
iret
or
fwait
push
test
les
add
mov
js
xor
mov
adc
cmp
inc
push
sub
ds
dec
mov
popa
cmpsw
pop
stos
inc
inc
cmpsb
jne
sti
inc
stc
inc
sbb
aas
fwait
sub
sub
pop
mov
sub
mov
xchg
push
jg
mov
lret
fs
cmp
bound
stos
push
ds
pop
xor
or
int
test
add
mov
les
and
stos
cmp
jae
in
jmp
inc
in
push
aam
ss
lods
lods
enter
jno
or
jno
nop
out
js
or
outsb
cmc
mov
loope
push
push
repz
dec
in
inc
pop
out
icebp
shll
xchg
mov
jae
lock
scas
ret
loop
cltd
das
sbb
pusha
lea
rol
out
fmul
loop
sbb
in
lret
in
rcl
repz
jle
adc
dec
aas
aas
push
jmp
pop
jmp
pop
sub
scas
nop
mov
mov
xchg
in
pop
cmp
jae
sbb
nop
repz
jg
push
push
test
adc
jmp
sbb
pop
mov
xchg
fdivrs
in
mov
mov
jp
xchg
xor
push
movsl
push
aas
divl
and
ret
divb
mov
rcr
add
lods
fildll
push
shrl
xor
imul
jmp
out
add
out
pop
and
sub
fisttpll
xchg
inc
lea
out
aam
xor
inc
popa
xor
movsb
mov
out
mov
pop
mov
sub
shlb
cld
in
rolb
das
in
lock
mov
xchg
adc
push
aas
jl
and
sub
and
inc
cmp
lcall
xchg
cmp
xchg
orb
push
inc
sarl
pop
lret
push
cmp
push
inc
inc
cmp
mov
addr16
sbb
dec
in
xchg
ret
dec
inc
jg
div
out
ja
and
enter
xchg
add
out
ret
sbb
stos
push
dec
adc
pop
outsl
jno
or
lods
outsb
ja
les
in
adc
fwait
inc
outsl
sub
imul
ja
out
jb
pop
inc
sub
es
shrb
fs
imull
cmp
rcr
jmp
into
xlat
cmp
mov
imul
testl
fistpll
cmp
sbb
dec
pop
bound
pop
pop
stos
sbb
sti
xchg
js
fwait
outsb
jmp
jae
mov
scas
xor
jmp
and
fs
pop
call
subb
cmp
das
sbb
mov
out
addr16
sbb
inc
jecxz
jns
loopne
addr16
hlt
shl
jne
mov
les
testl
loopne
jae
xchg
fstp
jge
pop
pop
into
into
or
inc
or
insl
mov
call
dec
in
mov
ret
jo
mov
mov
insl
mul
cmc
cmp
sarl
or
aas
adc
add
out
push
xchg
mov
jle
lods
popa
jecxz
sti
push
push
inc
adc
int3
inc
inc
mov
or
push
sti
mov
push
jecxz
mul
mov
xor
mov
adc
xchg
push
mov
das
into
pop
sbb
pop
dec
fnsave
loop
js
dec
xor
cmp
add
imull
nop
sti
leave
inc
inc
adc
cld
in
not
pop
jecxz
ret
push
in
cmpsl
outsb
sub
inc
shl
repnz
pop
aam
ret
or
insb
testl
out
ret
adc
test
pop
jno
out
push
ja
inc
data16
dec
push
cli
add
sbb
sbb
sahf
pop
ja
lcall
jmp
cmp
int
jmp
xlat
outsl
dec
adc
cmp
jne
cli
jge
ret
sbb
inc
or
cli
push
sub
pop
femms
popa
je
scas
jne
xchg
adc
xor
and
jmp
lret
aas
ss
inc
add
cmp
dec
sub
mov
jecxz
imulb
dec
fs
xchg
cmp
cmp
mov
stos
jae
dec
mov
jp
fsubrp
in
and
adc
and
std
cwtl
and
or
push
cmc
imulb
fwait
in
inc
xlat
push
frstor
mov
out
aaa
sbb
fbld
lods
push
mov
mov
mov
cmpsl
les
xchg
cmp
and
cmpsl
adc
lret
fstp
test
cmp
stos
out
jg
je
aaa
and
add
ret
pushf
out
dec
mov
arpl
arpl
out
decl
lahf
push
int
out
push
mov
repnz
imul
dec
add
ret
scas
arpl
scas
test
or
aas
in
ds
mov
xchg
mov
mov
and
and
test
andl
movl
sub
popa
out
or
call
push
inc
cmp
push
out
pop
cmp
lahf
aas
ljmp
fisttpl
outsb
inc
adc
push
dec
mov
arpl
xchg
mov
pop
inc
sbb
xor
dec
sbb
es
dec
ljmp
jo
sbb
push
inc
sti
pop
dec
addr16
cmp
push
les
sbb
enter
cli
sarl
loop
pop
nop
sbb
outsl
jne
test
aam
repz
push
jae
outsl
aam
in
pusha
fldcw
filds
cmp
ret
pop
fdivrl
xchg
mov
shll
stos
pop
sbb
es
adc
xchg
sbb
pop
pop
fs
cmp
xchg
xchg
xrelease
xor
pop
sub
mov
lret
aas
and
cmc
and
sbb
sbb
mov
or
push
stos
dec
push
mov
test
lods
in
mov
sbb
sbb
and
or
sti
sbb
loopne
dec
sub
stos
sbb
mov
push
mov
xchg
das
push
divb
test
inc
cmc
mull
scas
cmp
les
or
movsb
lea
jmp
push
pcmpeqb
setg
in
xor
xlat
mov
cmp
ficompl
mov
fucomp
jge
jbe
sub
in
mov
movsb
push
stos
cmc
jb
sarl
cltd
jmp
cmpsl
ljmp
jecxz
lret
mov
mov
jecxz
mov
push
add
iret
mov
sahf
pop
jmp
inc
sti
add
aas
jne
popf
inc
pop
push
mov
cld
jl
xor
daa
pop
fs
push
push
iret
test
les
pop
adc
dec
repnz
dec
imul
arpl
and
mov
pop
inc
mov
nop
dec
sarl
push
inc
daa
jecxz
cmp
push
cmp
mov
inc
pop
lahf
pop
in
cld
aas
inc
xchg
popa
xor
mov
ja
cmp
mov
out
pusha
cmp
popa
inc
pop
inc
inc
dec
int3
dec
adc
inc
cmp
or
les
mov
popf
push
in
pushf
sahf
pop
dec
mov
xlat
mov
sbb
shll
fstps
or
mov
cmpb
sbb
fwait
cmovp
pop
jle
cmp
or
jb
arpl
mov
sbb
and
fwait
lret
das
push
dec
fisttpll
insb
iret
adcb
push
popa
jnp
push
or
jecxz
dec
jle
in
mov
mov
repz
dec
adc
out
pop
insl
cmp
cmp
test
in
pop
cltd
inc
push
out
pusha
sbb
mov
cltd
frstor
std
out
pusha
fstp
dec
test
pop
push
inc
cmpsl
inc
sbb
cmp
mov
sti
push
shl
xor
adc
sub
in
sbb
imul
and
out
in
mov
fcmovbe
popf
int3
out
in
out
inc
out
jmp
jp
jb
ret
fdivp
ret
out
addr16
adc
out
lods
xor
push
fisttpll
popa
pushf
out
sbb
cmpsb
dec
push
int
test
repz
iret
mov
lods
out
int3
cmp
outsl
aam
pop
push
pop
and
jg
lahf
das
xchg
or
push
cmp
cmp
xchg
dec
scas
je
shl
xchg
invd
add
into
data16
lret
lods
in
inc
push
or
pop
arpl
xchg
mov
scas
and
jnp
cmc
push
call
out
fbld
jo
stc
cwtl
out
call
fucom
pop
bound
jmp
fbstp
lahf
movsb
xor
xchg
push
nop
lods
add
in
or
ja
adc
mov
test
fs
repz
pop
aaa
mov
les
mov
fwait
in
lret
inc
out
sbb
push
or
lods
adc
mov
lods
lcall
enter
lods
out
adc
or
jmp
cmpsb
xlat
pop
in
out
add
jmp
js
in
push
iret
mov
push
daa
frstor
out
in
mov
mov
iret
pop
mov
push
jb
and
xchg
push
xor
fdiv
mov
dec
lret
call
aad
lret
cli
and
aas
shr
mov
repnz
sub
in
cmpsl
or
sarl
fsubp
cmc
adc
or
nop
push
loope
mov
add
cmovae
adc
cmpsb
out
add
adc
xchg
outsl
or
inc
lea
xchg
xchg
movsb
cmp
popf
ficompl
add
in
testl
cmp
sbb
push
out
in
fsub
and
repnz
cwtl
lret
fcomps
cmc
fcomps
fistpl
mov
cli
fs
mov
adc
pop
sti
iret
mov
or
adc
fisttpll
adc
std
out
sbb
xchg
push
ja
loope
sub
sbb
jmp
sti
push
out
int3
mov
fsub
pop
ljmp
mov
xchg
fisttpll
jno
xchg
je
adcb
jmp
cwtl
pop
sbb
pop
xchg
ror
pop
sbb
les
xchg
bound
jmp
addr16
stos
mov
je
lret
enter
js
mov
xor
mov
mov
mov
xchg
mov
jp
out
stos
sub
sub
and
repz
cmp
mov
and
mov
push
pop
sub
xchg
pop
popf
les
sbb
jns
mov
mov
shl
lret
leave
push
repz
mov
test
xchg
addl
int
daa
lret
cmpsb
or
dec
sbb
nop
loopne
aas
pop
int3
sbb
push
bound
push
out
pusha
cwtl
sub
cmp
inc
daa
sub
int3
mov
or
ja
addr16
jle
rol
jl
test
aaa
dec
fsubp
inc
gs
sti
das
data16
xchg
mulb
rolb
cmpsb
pop
and
mov
xchg
inc
jmp
addr16
pop
pop
inc
scas
inc
mov
jne
mull
mov
repz
icebp
ljmp
insb
repz
mov
sbb
cs
xor
mov
pop
fbstp
cmp
pop
adc
mov
pop
inc
repz
cmpb
xchg
ret
shll
adc
addr16
or
sarl
out
addb
xor
push
xor
jbe
adc
sub
jl
notb
pop
mov
movsb
mov
and
mov
in
jnp
dec
and
mov
fadd
or
mov
rclb
outsl
dec
ljmp
cmp
push
jmp
insl
pop
jae
fsub
mov
shlb
fsubr
mov
jecxz
adcb
mull
mov
in
jbe
pop
int3
out
lods
sub
cmpsl
pop
xor
push
or
scas
lcall
imul
clc
jmp
lcall
xor
popf
jae
aad
lds
scas
incl
call
and
sub
sbb
aad
sub
jns
adcb
cmp
xor
repz
fdivrl
jecxz
in
dec
iret
cld
fcompl
scas
mov
or
in
push
pop
cli
mov
lea
mov
jecxz
cmp
repz
jle
in
and
pop
jns
sti
pop
shrb
mov
arpl
fs
sbb
daa
lahf
fmull
sub
rcr
sbb
scas
scas
jmp
ret
lds
xor
cmp
movsl
mov
loope
add
xor
jnp
sbb
mov
mov
cwtl
xchg
int
pop
pop
sbb
repz
hlt
insb
pop
popf
cmpsb
sbb
arpl
sub
ss
outsl
popf
push
xchg
sbbl
cmp
leave
insb
insl
pop
sbb
movups
mov
mov
clc
cmpsb
push
repz
mov
fisubl
xor
lret
cmp
or
inc
lods
push
stos
mov
cmp
inc
jecxz
lcall
das
jns
ljmp
mov
mov
addl
pop
jae
ret
mov
outsl
daa
loop
test
pop
xchg
cmpsl
rorb
in
mov
sbb
call
pushf
mul
negl
pop
into
pop
or
in
jg
lret
jbe
out
outsb
pop
sbb
pop
add
xlat
pop
cmp
loop
int
dec
sub
push
adc
mov
fidivrs
cli
fmuls
sub
push
fwait
push
sti
daa
int
sbb
add
out
add
lret
in
aaa
sub
jg
fwait
mov
sbb
dec
xchg
and
mov
pop
pop
in
js
out
mov
jne
bound
and
dec
sbb
jne
sti
not
into
outsb
bt
fstps
jb
cmpsw
or
or
lea
jns
stos
ja
pop
pop
mov
addb
fwait
imull
ret
mov
xor
mov
out
scas
lret
or
lods
aam
bound
mov
lret
cmpsb
xchg
push
in
pushf
out
imul
xchg
xchg
jnp
test
mov
and
test
push
pop
and
cmp
stc
and
cmp
sub
pushf
inc
clc
fistps
addr16
push
orl
jnp
xchg
pop
mov
imul
adc
cmp
mov
mov
test
jmp
push
mov
imul
mov
ja
es
pop
sbb
mov
pop
into
ficoml
into
test
jnp
jbe
pop
mov
xchg
jp
fistl
xchg
jg
xor
xchg
cmpl
sbb
and
addl
sub
jb
jl
pop
lret
daa
pop
jge
repz
mov
loopne
adc
cmp
stc
clc
testb
jecxz
sbb
add
in
icebp
aam
xor
subl
enter
xchg
pop
lcall
and
inc
shrb
test
adc
out
mov
in
push
push
and
and
mov
push
andb
push
mul
addr16
and
dec
insb
xchg
pop
push
jb
cs
push
cmp
xchg
rorb
daa
popf
mulb
adc
repnz
daa
xor
insb
jae
sbb
repz
sbbl
sbb
daa
ja
frstor
mov
shll
repnz
movsl
aaa
aaa
mov
inc
ljmp
insb
xchg
pop
jecxz
mov
mov
dec
out
mov
cmpsl
testl
push
ljmp
dec
sbbb
mov
int
pop
out
out
lock
popl
inc
mov
push
pop
inc
daa
xchg
cmp
pop
pop
xor
adc
dec
das
or
jle
in
xchg
pop
daa
pop
jnp
stos
cmpl
sbb
pop
sbb
rcll
out
sub
fimull
fwait
or
fldt
adc
push
push
add
icebp
mov
cmc
imul
dec
jecxz
in
sbb
jl
jmp
dec
mov
or
fs
jge
xlat
xchg
aam
arpl
sub
pop
jl
seto
jecxz
xor
and
sbb
addr16
or
sbb
fucomi
inc
pop
jae
movsl
lock
arpl
dec
div
cmp
pop
sti
inc
push
scas
in
cmc
sbb
popl
aas
ljmp
xor
cltd
out
sub
test
pop
arpl
pop
push
in
shl
sbb
cld
cmp
enter
jb
out
xchg
sbb
jg
les
lahf
adc
dec
jecxz
mov
nop
inc
andl
pop
fwait
out
sub
cli
pop
push
jo
cmpb
mov
sbb
sarb
outsl
adc
sti
pusha
jecxz
add
loopne
mov
adc
adc
movsb
lock
lods
and
cwtl
jg
les
cltd
fcmovnb
inc
jae
dec
push
push
call
out
pop
mov
or
pop
push
pop
sbb
outsl
mov
into
mov
xchg
fisttpll
xchg
fwait
or
in
hlt
sbb
pop
aas
in
add
sti
jne
jnp
iret
mov
xor
xchg
sbb
xor
xor
cs
out
into
repz
cmp
clc
shlb
adc
lock
push
sbb
push
in
jecxz
sub
arpl
imul
lret
jg
jnp
xchg
xor
cmpb
inc
div
aad
push
mov
mov
outsl
rorl
sar
sbb
dec
add
sub
lock
sbb
jae
add
jge
mov
int
and
jmp
mov
sbb
flds
sub
pop
mov
xchg
cmp
insb
mov
ds
pop
arpl
cmp
pop
out
fdivrs
fcmovnb
sbb
icebp
pop
or
fs
arpl
sbb
push
inc
repnz
xchg
and
aaa
test
out
inc
out
ljmp
cwtl
xor
and
sbb
fwait
lret
addr16
inc
js
or
mov
cmpb
repz
sbb
addr16
mov
pop
push
or
into
xchg
sbb
inc
push
xor
fwait
cltd
dec
test
pop
inc
out
pop
xchg
test
jb
inc
and
jb
cmovae
int
ja
xchg
icebp
xchg
xchg
inc
testl
addr16
pop
ret
cwtl
pop
in
push
call
out
jb
or
sub
xor
in
negl
or
outsb
inc
or
jl
test
adc
lea
inc
cmp
sub
data16
movsl
jmp
into
xor
insb
xchg
ss
xor
daa
push
inc
in
xchg
adc
testl
and
xchg
pop
or
lret
or
sub
je
movsl
inc
or
pop
divl
popf
and
inc
fwait
xchg
fsubs
daa
jecxz
jg
imul
repnz
or
pop
xchg
cmpsl
mov
les
mov
and
into
sbb
loopne
mov
xor
jl
lds
pop
sbb
test
lods
xchg
inc
push
inc
cmp
insl
xor
jp
arpl
fwait
movsb
lret
loop
fld
sbb
cmp
sahf
loopne
or
dec
sbb
lcall
jbe
pop
ja
aas
bound
int
sbb
mov
stos
and
xchg
aas
lret
test
xchg
inc
sbb
sar
xor
pop
das
inc
inc
cmp
xchg
pop
xor
sti
pop
insl
mov
xchg
add
push
dec
daa
add
out
mov
out
sub
pop
xchg
addr16
xchg
in
sbb
outsb
imul
jmp
repnz
push
cmp
lods
pop
and
pop
je
andb
mov
jg
push
xlat
fcompl
cwtl
sbb
sbb
sbb
push
sbb
clc
or
addl
mov
nop
dec
jg
adc
daa
cmpsl
xchg
sbb
mov
add
hlt
jb
adc
cmc
and
cmp
mov
mov
fs
pop
inc
push
movsb
inc
inc
mov
and
inc
and
or
and
sbb
push
fwait
int
fwait
imul
pop
sub
rcll
pop
or
xchg
lea
fwait
xor
xchg
xor
sbb
or
dec
mov
fnsave
xchg
pop
pop
rcll
repz
stos
int
dec
rorb
mov
sub
cmp
mov
xor
fs
clc
shll
fidivs
push
xor
pop
push
pop
pop
je
imul
addl
inc
rorb
push
lahf
push
sbb
cmp
jmp
enter
pop
ret
andb
mov
cltd
pushf
call
scas
out
lret
cli
or
sbb
and
lret
popa
mov
mov
pop
data16
sbb
or
shll
imul
mov
inc
cli
or
sbb
or
jae
fs
dec
addr16
insb
cmp
mov
xchg
xor
rcrl
add
std
xchg
sbb
sbb
fistl
iret
in
inc
sbb
out
push
push
pop
fadds
sti
sub
xchg
cs
cmpsl
mov
cltd
daa
dec
push
nop
cmp
ret
out
dec
sub
les
out
pop
mov
dec
sti
lret
jnp
xor
in
out
cmp
sahf
sti
out
sbbl
and
xlat
or
fdiv
insl
sbb
add
sub
sbb
mov
scas
mov
lods
add
pop
pop
in
push
fs
aaa
pop
stc
jl
clc
mov
or
in
pusha
jecxz
jae
jne
adcb
inc
mov
sub
jnp
xchg
pop
idivl
push
popa
and
in
pop
sbb
dec
add
sbbb
into
or
popa
out
and
ret
xor
gs
cmpl
jp
lret
xor
imulb
aas
pop
in
sub
xchg
jecxz
test
lods
es
mov
mov
movsl
jae
ja
cmp
mov
jle
rorl
pop
in
push
clc
cmpsl
repz
in
mov
push
mov
xchg
mov
pop
jmp
sti
adc
nop
dec
cmp
push
xorl
jnp
xor
pusha
and
mov
jae
iret
jnp
movsb
dec
in
pushf
mov
lahf
cmpsl
movsl
sbb
push
aad
sbb
xlat
xor
pop
inc
stos
lret
popa
in
fs
cmc
xchg
iret
aas
mov
fsubs
subb
aaa
and
in
xor
jb
and
fsts
push
ss
addr16
ja
cmp
fistpll
mov
sbb
inc
xor
mov
daa
icebp
aaa
pop
mov
jmp
int3
outsb
pop
or
cltd
ss
or
dec
cmp
sub
shll
enter
mov
out
pushf
jnp
inc
mov
lret
xchg
xchg
cmp
imul
test
imul
dec
outsb
mov
mov
mov
xlat
ja
xchg
sti
aam
outsl
jae
mov
mov
leave
mov
fcoms
and
dec
out
pop
dec
mov
andl
jmp
jae
adc
add
fidivrs
rcr
mov
pop
xchg
xor
push
mov
mov
andl
inc
inc
movsb
les
loopne
in
mov
pop
cmc
xorl
xchg
pop
and
shll
sbb
inc
jmp
insb
testb
enter
data16
ret
mov
xlat
jnp
lret
sub
xchg
fdiv
aas
aaa
push
and
imul
addr16
icebp
and
mov
pop
mov
xchg
test
push
dec
in
xor
mov
fwait
iret
pusha
jp
xchg
dec
dec
mov
sub
imul
cmp
sbb
cmp
leave
cmp
inc
pop
push
aam
sbb
adc
cmp
jp
fstps
imul
mov
add
mov
data16
mov
repz
lods
sbb
push
icebp
fwait
mov
subl
cmpb
daa
cmp
mov
dec
pop
scas
test
add
daa
cli
movsb
jle
jecxz
mov
xchg
xor
outsl
stc
fs
mov
and
mov
jecxz
adc
fadd
push
sbb
sbb
movsb
out
pop
int
gs
outsl
int
inc
push
cmp
mov
push
inc
and
jle
mov
mov
add
pop
sbb
aas
pop
lds
int3
mov
fwait
pop
jne
daa
or
xor
cmp
push
je
cmp
aaa
sti
ret
enter
jnp
aas
push
addr16
inc
sbb
mov
sti
fcmovnb
mov
xor
xlat
and
xlat
push
daa
pop
pop
inc
out
ljmp
add
nop
sbb
imul
and
xor
ja
xor
int
sbb
inc
lock
add
lahf
daa
sbb
cmpsl
out
push
scas
cmp
test
jecxz
pusha
jne
and
xlat
sbb
jp
and
fstpt
mov
pop
push
mov
sub
dec
cwtl
aas
stos
aad
les
pop
and
sub
aas
rcll
lret
inc
notb
insb
dec
cmp
and
inc
dec
ror
pop
outsb
xchg
jecxz
ss
inc
pop
clc
cmpsl
stos
push
inc
scas
cmp
decl
push
inc
pop
xchg
add
pop
cmp
sbb
or
pop
mov
cmpsl
jp
sbb
sqrtps
jecxz
fimuls
lret
jg
sti
and
dec
sahf
das
aas
orb
sbb
xchg
in
mov
mov
rorb
sub
arpl
dec
and
adc
push
out
sub
pop
jbe
pop
pop
imul
mov
cmc
arpl
cmpb
or
mov
or
lret
notl
push
jmp
int3
lahf
xor
lea
shll
sub
bound
movsl
mov
sbb
out
cs
out
outsl
jnp
les
jnp
and
add
sub
push
pop
ret
mov
xor
add
out
outsl
dec
sbb
ja
iret
push
shll
rorb
iret
aad
lds
mov
addl
dec
pop
lds
inc
fwait
xchg
fs
loop
js
inc
lahf
out
scas
push
sti
mov
jge
cmp
test
or
fnstcw
add
xchg
sub
pop
adc
xchg
in
pop
testl
push
pushf
pop
xor
dec
push
lds
jno
sbb
cli
arpl
push
dec
or
ja
and
addr16
push
sub
iret
add
xlat
das
jae
mov
nop
cmp
cmp
shlb
and
test
push
sbb
xchg
imul
mov
das
fnsetpm(287
cmp
adc
int3
xchg
cmp
pop
sbb
cmpsl
sbb
sbb
dec
out
cltd
lret
cmpsb
pop
and
fwait
or
dec
pop
push
out
push
es
incl
test
hlt
insb
cmp
addl
dec
pop
push
sub
frstor
pop
or
cmp
xchg
dec
push
pop
and
les
and
les
fiaddl
jmp
sti
pop
add
xor
push
sbb
into
mov
daa
fdivr
cmpsl
outsb
es
jae
push
mov
pop
pop
pop
push
aas
rorl
popa
fdivrs
pop
pop
mov
pushf
aas
pop
enter
cwtl
stos
fnstcw
pop
arpl
jg
aas
jnp
push
xor
pop
rol
xlat
sbb
mov
dec
in
stos
mov
add
movsb
pop
or
or
cmp
push
jecxz
mov
push
in
pop
mov
sar
clc
cmpsl
inc
sbb
jge
mov
add
pop
ja
andl
lret
enter
cmp
dec
lock
pop
jge
mov
fcmovnb
and
insl
push
cmp
push
inc
out
jnp
arpl
out
dec
inc
frstor
cwtl
fwait
cmp
rclb
adc
pop
xchg
pop
out
sub
xor
clc
out
jnp
sbb
aad
fbstp
mov
jp
dec
jno
and
cmpsl
lea
sub
sbb
mov
test
iret
mov
inc
pusha
mov
adc
xor
aas
adc
add
cmp
bound
dec
pop
cmc
test
aam
loop
das
and
xor
fwait
dec
mov
add
aam
scas
push
imul
ja
insb
cltd
arpl
lea
dec
cld
adc
or
insb
sbb
daa
test
and
sub
jl
dec
mov
mov
inc
add
iret
outsb
xlat
xchg
or
jecxz
leave
cli
inc
xorps
jmp
inc
pop
jle
mov
lret
cmpsl
sarl
out
dec
out
sbb
sbb
inc
xchg
push
mov
das
fmul
rcr
mov
popa
push
mov
push
les
jbe
sub
aaa
mov
mov
popa
jmp
sti
pop
test
jmp
and
in
and
inc
mov
inc
loopne
mov
push
rcll
in
aaa
xlat
cmpsl
leave
xor
lahf
ret
movsl
nop
inc
in
cmp
jle
dec
movsb
add
fisttpl
les
and
pop
pop
mov
inc
sbb
xor
dec
rcl
iret
sti
cli
cltd
enter
pop
loop
cmp
sub
pop
pusha
and
push
lods
ja
pop
ret
aam
mov
movsl
sbb
addr16
mov
fnstsw
xchg
inc
and
popf
mov
xchg
and
mov
in
loope
dec
or
mov
and
inc
ret
shll
ret
and
lods
out
cmp
les
adc
mov
ja
mov
mov
pop
jae
fdivrs
pop
xor
scas
fisubrl
cmp
dec
test
dec
xor
lcall
fdivr
pop
mov
fwait
in
out
fnstsw
xlat
sbb
inc
stos
gs
popf
out
out
adc
pop
inc
sahf
jge
inc
adc
into
cmp
add
out
call
or
imul
cmpsl
sti
fwait
andb
and
lods
push
daa
mov
jae
pop
jb
cmpsl
or
sub
jl
mov
mov
stc
mov
fdiv
test
mov
jnp
xor
dec
outsl
push
pop
xchg
pop
subl
daa
xchg
repz
shrl
cli
rol
popa
mov
jle
arpl
pop
psubusb
stos
xlat
inc
hlt
lock
roll
sub
mov
mov
arpl
andl
pop
xchg
pop
aaa
vmread
cltd
push
sahf
mov
popa
js
xor
cs
cmp
mull
iret
fstl
xchg
jecxz
insb
shll
std
lods
aaa
clc
lds
pop
inc
sub
jg
mov
lcall
movsb
int
data16
lcall
dec
fsubs
subl
cmp
jae
js
iret
pusha
repnz
dec
lahf
lods
imul
sbb
push
mov
pushf
sbbl
mov
xchg
push
test
xor
xor
adc
loop
or
scas
loopne
inc
dec
repz
fcomp
cli
stos
mov
sub
sbb
insl
pop
push
mull
enter
mov
ffreep
xchg
fldl
lock
jae
or
fmull
out
fsubr
cmp
lahf
jne
and
or
pushl
frstor
jle
fnstsw
ret
rcr
pushl
lahf
ret
sbb
sub
fmull
sbb
js
movsb
inc
lea
push
mov
and
daa
loopne
pop
mov
fstpl
or
ja
inc
sti
aaa
add
xor
sbb
dec
in
lret
ret
popa
or
sbb
cmp
sbb
movsl
cmpsl
movsl
into
sub
js
xchg
hlt
xchg
and
test
iret
data16
push
mov
loope
aaa
mov
aad
mov
push
push
cld
call
xlat
stos
out
mov
or
and
jge
arpl
fnstsw
dec
mov
xchg
cmp
mov
mov
enter
pop
jg
jbe
jecxz
rcrb
pop
jmp
push
xchg
sbb
mov
cltd
fnsave
sti
lret
mov
aam
ret
fwait
dec
mov
btr
pop
shrl
sub
jnp
sub
cwtl
out
mov
push
and
pop
xor
jno
push
arpl
pop
je
cwtl
pop
outsl
jl
mov
sbb
pop
fdivrl
and
mov
dec
mov
or
push
push
pop
jmp
inc
fwait
jnp
cmp
fcompp
pop
lret
dec
jecxz
jae
sahf
int
pop
mov
mov
lods
sub
and
push
push
lods
inc
inc
or
cld
sti
lcall
add
push
sub
out
out
or
mov
cmp
out
inc
out
cmp
mov
inc
cli
inc
dec
divl
sbb
ljmp
aam
dec
call
fcmovne
jae
mov
test
and
push
xchg
push
pop
mov
dec
cmpb
or
xchg
cli
dec
push
lock
sbbb
cmp
jne
aaa
jg
push
push
add
cmpsl
xchg
fcmovne
orl
pushf
mov
pop
aas
sbbl
mov
roll
jnp
inc
jmp
mov
dec
outsl
mov
clc
pop
and
xchg
sub
iret
psubusw
sbb
dec
cwtl
lea
rcr
pusha
sub
gs
adc
jae
in
mul
cmpb
or
es
repz
aaa
shl
sarl
dec
fistpll
imul
lahf
fwait
jne
push
inc
outsb
testb
adc
push
xchg
into
cmp
push
loopne
mov
lea
xchg
xorl
arpl
pop
pop
adc
cmp
stc
jns
add
psubd
mov
jecxz
pop
adc
and
ja
les
sti
ljmp
cmp
pop
add
jb
xchg
jnp
and
xchg
xor
jmp
xor
sbb
loope
or
fsubrs
dec
mov
xor
cld
xchg
dec
cmp
or
inc
cli
je
cmp
pop
out
and
addr16
dec
rcr
lods
push
lock
jne
aaa
hlt
cltd
sub
stc
cmpsl
aas
in
sbbl
fnsetpm(287
jl
data16
mov
xchg
sub
std
daa
push
mov
pop
arpl
cs
inc
sub
sbb
inc
inc
sbb
call
jg
pop
dec
and
in
mov
jbe
sahf
cmp
andl
in
jp
sub
movsb
sarl
movsb
jnp
dec
xlat
add
mov
sbb
mov
mov
fsts
jae
mov
push
dec
xchg
pop
in
cmp
push
call
sbb
dec
inc
roll
pop
cmc
jmp
ss
mov
xor
aas
pop
dec
xchg
inc
mov
int3
fistl
pop
inc
arpl
mulb
pushf
shll
aaa
popa
stos
pop
icebp
inc
outsl
mov
pop
fistl
shlb
out
jl
pop
addl
xlat
arpl
dec
popf
cmp
inc
cmp
sarb
xchg
ror
sbb
lea
xor
inc
and
sub
rep
mov
mov
fnstenv
aas
pusha
test
push
dec
mov
aaa
les
and
jl
and
push
pop
xchg
inc
push
pop
scas
dec
cmp
imul
sar
out
mov
out
sbb
adc
imul
push
js
mov
fiaddl
xchg
cmp
jns
and
lret
mov
xor
push
jbe
enter
pop
xor
add
or
add
pop
pop
pop
call
lahf
cmpsb
test
pop
jg
mov
or
sar
mov
sbb
pop
mov
xlat
popf
addr16
jmp
rcrl
inc
arpl
rolb
jnp
push
arpl
ret
xchg
lods
stc
in
sbb
addps
andl
push
pop
mov
pop
arpl
cltd
into
jnp
cmpsb
cmp
dec
lret
xchg
daa
jnp
pop
sti
pop
adcl
iret
nop
repz
ret
mov
sub
aas
dec
fists
jnp,pn
das
xchg
negl
leave
sub
ret
int3
sub
sub
lret
and
jae
mov
and
pop
cmp
sub
inc
add
push
das
sbb
inc
dec
stos
fwait
pop
daa
cmp
xchg
adc
shl
pop
xchg
push
jecxz
jle
int3
sbb
sarl
dec
cmp
jmp
fs
xor
les
xor
iret
cltd
dec
sbb
repz
cmp
push
fwait
and
mov
add
mov
push
imul
inc
pop
mov
adc
stos
ret
ja
addr16
movsb
das
or
popf
pop
addr16
inc
pop
xor
addr16
pop
lret
adc
xchg
dec
mov
xor
push
out
gs
lea
mov
sbb
jmp
test
mov
sbb
jg
sub
xor
outsl
gs
dec
loopne
loope
and
cmp
push
mov
cmpsb
movsb
shr
push
fwait
cmp
jmp
dec
fistpll
add
outsl
and
or
mov
ja
dec
xor
les
aad
scas
call
mov
enter
loop
dec
out
dec
insb
adcl
adc
inc
dec
or
fisttpll
xchg
pop
leave
sub
xor
mov
mov
repnz
notl
xchg
repz
into
and
jg
arpl
imulb
adc
push
stos
in
inc
imul
adcb
push
stos
mov
xchg
jecxz
dec
inc
inc
xchg
xor
and
jge
lds
fwait
scas
imul
add
call
pop
filds
ljmp
lahf
sub
mov
push
out
shrb
icebp
mov
sub
jae
adc
sub
out
pop
sbb
inc
inc
in
jnp
cmp
inc
lret
mov
push
ret
push
out
ret
fistpll
arpl
in
inc
ljmp
es
scas
adc
rorl
dec
xor
enter
cltd
mov
pop
cmp
pop
jno
mov
pop
and
mov
aas
cmp
das
pop
cmp
out
push
push
fiaddl
arpl
xor
out
sbb
inc
xchg
mov
jnp
outsb
or
sbb
pusha
dec
pop
add
cmp
mov
xchg
jmp
ret
les
push
pop
lock
or
push
imul
lock
jecxz
mov
pop
mov
pop
and
popa
push
xchg
aam
popf
ds
ja
mov
addr16
hlt
sub
in
cmp
ja
cwtl
push
adc
out
push
lcall
enter
cmp
stos
fs
repz
mov
cmp
daa
mov
dec
pop
xchg
push
cmp
jno
pop
in
mov
addr16
jecxz
sbb
and
repz
pop
int3
cmp
addr16
pop
int
out
push
pop
push
push
repz
aas
fwait
into
js
das
subb
scas
and
mov
fcomi
pop
mov
outsb
cmp
les
ret
enter
jecxz
lods
lds
pop
inc
sbb
pop
ret
mov
sbb
sbb
insl
js
imul
push
subl
jae
jo
mov
xlat
mov
pop
mov
adc
fldcw
stc
and
xor
scas
xchg
in
pop
fistps
into
call
test
or
das
and
andl
scas
shll
sub
push
fstl
inc
lock
cwtl
sbb
mulps
inc
mov
sub
js
mov
jmp
out
aaa
inc
jmp
mov
cmp
cmpsb
and
imul
enter
mov
pop
pop
popa
sbbb
cwtl
idiv
adc
dec
test
fwait
mov
decl
mov
cmp
dec
dec
lock
out
fadd
jno
xchg
cmp
push
push
adc
xchg
xor
fwait
and
dec
xchg
adc
xchg
cld
stos
rcll
dec
inc
rorl
stos
mov
xchg
adc
ffreep
pop
ljmp
push
fstpl
subl
xchg
movsl
mov
jl
xchg
nop
xchg
sti
decl
xor
inc
rorb
fwait
fwait
in
mov
inc
insb
in
repz
ja
dec
mov
sub
insb
pop
rcrl
fwait
dec
out
inc
dec
bswap
sub
xor
arpl
xlat
mov
add
jecxz
fsubl
dec
sbb
int3
int
push
cmpsb
fwait
dec
lock
cmp
xchg
adc
inc
push
jecxz
add
add
aam
repnz
ja
pop
arpl
cmpsb
repz
xorl
sub
and
sbb
mov
adc
dec
stos
cmp
pop
repz
je
cmc
fistpll
hlt
jg
mov
jbe
cwtl
pushf
div
insl
das
sbb
dec
inc
adc
cmp
xor
pop
or
cltd
repz
xlat
ret
lea
arpl
cmp
pop
xlat
mov
adc
divl
fwait
das
fs
sub
mov
adcl
jl
pop
outsl
pop
inc
sti
pop
or
adc
jae
sub
mov
adc
cmp
lahf
mov
frstor
test
jae
inc
mov
insb
xor
dec
pushf
rcll
shr
pop
movl
mov
cmpsl
inc
popa
sti
scas
ja
aas
cmp
and
sahf
cli
inc
decl
jg
push
aam
jl
mov
into
lea
xchg
xchg
orb
out
daa
dec
mov
xchg
xor
daa
mov
test
rcll
mov
fnsave
daa
cltd
das
iret
lea
fildll
dec
in
pop
sbb
push
in
pop
outsl
cmp
repz
mov
lahf
aas
jl
fimuls
adcb
repnz
dec
scas
ret
mov
scas
xor
imul
push
ja
shll
rorl
adc
cli
lahf
stos
shrl
push
jg
pop
jae
adc
add
fdivl
mov
sahf
sbb
lcall
out
mov
mov
mov
ret
sub
lahf
cld
movsb
sbb
or
xlat
xor
jmp
ljmp
mov
insl
fdivl
test
test
jmp
xchg
repz
imul
push
mov
aas
fnsave
jae
mov
popf
int
into
xlat
out
data16
outsl
stos
mov
out
jae
cmp
stos
sbb
js
mov
int3
push
cmp
cmp
mov
pop
sbb
xor
mov
out
jne
lret
std
cmp
daa
lret
loop
lds
lods
cmp
addr16
dec
push
cmpl
shlb
jb
add
cmp
lods
pop
lea
pusha
xchg
adc
out
pop
pushw
lcall
imul
cmp
rorl
xor
leave
addb
lahf
cmp
and
jmp
cltd
xor
xchg
xor
jbe
xchg
ret
xor
xchg
es
nop
sbb
fwait
jle
mov
and
ss
jnp
xor
lods
cmp
subb
jne
imul
jmp
rcll
xchg
pop
cmp
rclb
add
push
sbb
in
cmp
out
push
pop
sti
sbb
push
stos
mov
inc
sub
dec
cmp
and
sqrtps
push
lret
out
addr16
or
inc
push
lret
push
movb
out
pop
pop
ds
cmp
daa
xchg
aas
idiv
mov
in
cmp
inc
in
inc
stos
outsl
sub
add
je
stc
in
loop
in
arpl
fstl
lahf
lcall
and
jae
repz
jle
jg
imul
andl
adc
mov
ret
test
add
xor
arpl
push
pop
idivl
es
cs
adc
cmp
aaa
jecxz
mov
push
pop
mov
xchg
pop
or
xchg
mov
and
xchg
das
sub
pmulhuw
dec
cmpl
inc
cmp
loopne
ret
adc
jmp
ror
xchg
inc
or
sub
pop
mov
imul
aas
sbb
inc
jae
push
and
lods
push
mov
ds
and
and
dec
stos
lea
jae
sub
cmp
add
and
mov
push
lret
and
pop
mov
jecxz
sub
and
jecxz
incl
push
sti
sub
push
inc
jecxz
fwait
mov
sti
xor
mov
pop
and
das
add
mov
ret
sub
push
aaa
push
jecxz
sti
aas
pop
out
push
aas
xorps
sub
push
pop
and
dec
xor
cmp
jl
loop
add
dec
imul
cmp
repz
sbb
dec
aas
inc
fisubs
cmc
inc
pop
nop
xor
inc
and
push
lret
xor
dec
inc
pop
push
inc
jge
inc
sti
mulb
jecxz
dec
stc
pop
adc
adcb
mov
notl
in
mov
loope
out
out
js
adc
repz
mov
out
mov
pushf
pop
mov
mov
jl
loop
cmp
jge
jo
sti
fldt
pushf
mov
std
fcmovnu
cli
ljmp
lock
mov
dec
inc
mov
lea
xchg
imul
cmp
inc
lods
fneni(8087
mov
out
out
inc
stc
push
cmpsl
adcl
nop
scas
pop
jnp
fdivrl
dec
xor
out
adc
decb
pop
or
xchg
and
dec
inc
lock
mov
scas
jae
std
std
pop
repz
test
mov
prefetchwt1
or
add
jle
pop
rcll
mov
add
or
xchg
in
jnp
lods
fdivrl
fiadds
push
mov
or
xchg
push
inc
stos
pop
das
push
dec
cld
in
push
lods
std
shlb
mov
mov
fisttps
sti
adc
add
add
repz
clc
pop
fnstsw
loopne
jmp
scas
movsl
cwtl
mov
mov
or
fcompl
inc
adc
fmul
inc
cmpsb
dec
push
mov
into
int3
add
adc
nop
ss
fsub
stos
into
bound
mov
fistl
scas
pop
test
std
xchg
sub
pop
dec
mov
add
jnp
cmpl
jnp
sub
repnz
inc
mov
rorl
sub
cmp
test
jp
stc
test
ret
test
stos
sbb
nop
cmp
add
jmp
ljmp
stos
ret
jmp
stos
insb
adc
mov
mov
push
stos
mov
das
mul
push
adc
adc
adc
inc
xlat
jnp
mov
icebp
and
add
mov
add
int
test
sub
push
add
jae
ret
popl
stc
int
sbb
adc
mov
sbb
mov
ret
movsl
in
jae
pop
mov
mov
out
mov
xchg
mov
stos
insb
int
xchg
cmp
mov
int3
test
push
stos
or
xor
jmp
lret
mov
stos
je
sbb
cltd
cmc
inc
xchg
int3
mov
mov
test
in
mull
mov
dec
imul
inc
clc
stos
stc
add
fmull
popa
aad
jae
dec
arpl
ljmp
sub
aaa
jne
icebp
pop
hlt
mov
rorl
jae
sbb
shr
test
add
clc
sbb
adc
push
pop
add
aam
mov
and
mov
push
and
sbb
mov
adc
aam
pusha
or
add
cmp
shl
mov
popa
cli
add
cmp
arpl
imul
sub
xchg
dec
lea
inc
int3
stos
mov
arpl
mov
mov
fcom
xchg
add
daa
jbe
mov
sti
dec
shll
dec
dec
stc
adc
or
and
mov
xlat
sub
pop
sbb
sbb
mov
lret
shll
das
out
je
push
out
lock
lods
daa
gs
xor
ret
mov
int3
out
adcl
push
or
popa
push
mov
sti
inc
pop
cs
es
int
adc
pop
and
push
jno
mov
push
aam
int
sub
stos
lock
inc
aam
ret
mov
gs
sarb
pop
hlt
stc
ret
roll
int3
sub
sub
push
jg
clc
icebp
mov
ret
scas
adc
mov
pop
mov
shrb
fs
out
push
push
lret
clc
pop
outsb
shll
jmp
imulb
sti
and
fcmovnbe
ror
pop
fs
dec
ffree
enter
ret
sbb
leave
xlat
clc
pop
pop
pop
gs
iret
es
add
lock
pop
pop
inc
add
mov
arpl
or
jbe
jbe
push
jae
jb,pn
fs
mov
aam
push
sbb
imul
add
sbb
pop
int3
shlb
jge
orb
dec
adc
push
push
inc
add
push
pop
and
jae
ja
mov
pushw
xchg
mov
mov
sub
idivl
push
clc
pop
jns
jnp
jg
cmp
stos
arpl
insw
mov
sbb
das
mov
pop
rorl
inc
out
movsl
aad
xchg
pop
imul
lock
es
insl
arpl
jbe
cmpsl
bound
in
mov
adc
sbb
cld
mov
mov
fldt
push
loope
dec
mov
adc
sub
xchg
lds
ret
push
xchg
sub
jge
adc
loop
add
sarl
push
add
repz
xor
pop
lods
jo
insl
pop
fwait
shlb
addb
adc
out
pop
jecxz
xchg
cld
cltd
mov
mov
call
jecxz
ret
dec
mov
ja
pop
mov
add
mov
mov
fnstsw
sarb
outsl
add
mov
mov
in
mov
andl
push
mov
addr16
push
stos
push
fildl
mov
mov
push
mov
sub
adc
adcl
mov
xchg
push
jecxz
mov
jae
jns
push
jecxz
aad
lea
sbb
in
push
mov
mov
dec
sub
mov
scas
and
int3
stc
add
frstor
xchg
aam
cmp
adc
pushf
xlat
sbb
int
aas
jl
aam
jns
mov
sub
mov
leave
xchg
push
pop
ret
jns
in
jnp
or
add
aaa
pop
das
out
mov
shrl
adc
pop
adcb
jns
mov
mov
shl
jae
fs
addr16
ja
xchg
xchg
xlat
or
pop
mov
and
stos
lcall
inc
pop
addr16
aas
ret
in
adc
fbstp
xor
adcb
pop
dec
addr16
pop
imul
xor
adc
cmp
incl
add
das
jmp
jae
sub
in
push
push
cmp
jmp
sbb
and
into
or
addr16
cld
jno
adc
adc
addr16
aaa
imul
pushl
fucom
push
lret
xor
adcb
push
cmp
sbb
jmp
ss
into
xor
in
cmpsl
cmp
adc
imul
mov
push
jae
dec
and
cmp
repz
push
in
push
sub
sbb
bound
sahf
ljmp
inc
daa
imul
sbb
cmp
cmp
cmpsb
mull
fldt
nop
orl
adc
imul
push
sub
sbb
dec
inc
sbb
and
movsb
sti
jns
mov
imul
cmpsb
mov
adc
jmp
nop
jnp
adcb
mov
in
dec
aas
adc
inc
in
cli
mov
add
cmp
pop
pop
jecxz
mov
in
lahf
jmp
sti
div
push
in
negl
sbb
sbbb
shl
and
in
cmpsl
push
in
inc
push
out
shrl
or
inc
inc
out
out
imul
int3
ret
or
sbb
bound
stos
nop
sahf
sbb
add
ss
cmp
fs
lret
nop
movsb
into
mov
cmpsl
mov
jle
rcrb
mov
iret
int3
test
movsl
test
ss
test
mov
mov
jbe
fsubl
adc
lea
xlat
in
cmp
fmull
aad
or
mov
insl
mov
out
sahf
sti
mov
pop
nop
or
sub
cmp
sbb
loope
jae
sti
cmp
fstps
xor
sub
rcrl
lods
fildl
sub
cld
fildl
add
adc
or
scas
mov
mov
jns
js
or
popf
pushf
lcall
mov
fcmovnu
out
fwait
mov
scas
add
pusha
mov
mov
je
jg
xchg
xchg
fistl
push
imul
jp
in
pop
call
insl
jo
decl
incl
mov
movsl
xchg
leave
jecxz
sbb
xor
push
test
add
jmp
enter
or
inc
lret
adc
sub
or
pop
fstl
movsb
cmpsl
or
fstpt
add
std
push
orb
add
or
insl
xchg
cmpsl
jbe
sbb
movsb
jno
ja
push
test
in
cmpsb
loop
jbe
mov
inc
mov
mov
mov
popf
in
mov
in
cmpsb
mov
shl
out
fwait
mov
jmp
push
out
lahf
sub
mov
adc
add
lret
ror
xchg
je
adc
std
xchg
in
jp
cli
cwtl
out
and
jae
inc
leave
push
push
arpl
jb
push
adc
mov
in
jnp
mov
enter
insl
fidivs
outsl
push
pop
orl
loop
or
dec
sbb
sbb
cmp
fldl
shrb
iret
mov
dec
sarb
jbe
mov
loope
scas
mov
mov
pop
sbb
or
dec
cmp
pop
jmp
iret
popf
notb
sbb
mov
mov
movsl
stos
lret
fstp
mov
bswap
adc
mov
shrl
enter
mov
mov
mov
mov
ret
mov
jnp
dec
or
aam
dec
or
mov
sti
inc
mov
jmp
insl
or
pop
mov
dec
adc
jae
jnp
pop
adc
aam
jmp
jp
cmp
jmp
in
jne
adc
lods
or
or
pop
sbb
out
and
shl
add
sti
frstor
rorl
jl
outsb
mov
icebp
mov
ret
push
xor
mov
dec
cmpsl
add
or
pop
adcb
repz
mov
xchg
pop
cli
pop
test
cli
or
stos
inc
or
mov
ja
or
lods
testl
out
repnz
cmp
adc
or
mov
cmp
mov
jb
outsb
push
int
cmp
cwtl
out
jmp
insl
jmp
pop
fdivl
lods
out
or
fdiv
mov
inc
pushf
add
or
dec
hlt
cmovle
mov
jbe
ja
cmpsl
js
mov
mov
fnsave
push
loop
in
out
imul
mov
fcmovbe
cli
xor
mov
mov
mov
fsub
jmp
mov
or
ficompl
or
push
jae
or
movsl
test
xchg
loop
adc
fstpt
insl
test
leave
push
pop
rcrb
loop
out
sbb
mov
jg
adc
and
lds
push
lods
insl
add
xchg
mov
les
stos
xchg
xchg
dec
mov
scas
add
jecxz
pushf
push
enter
ret
lahf
ja
jbe
imul
mov
shlb
loop
scas
jb
loop
stos
lods
add
mov
pop
mov
mov
mov
fdivrl
repz
mov
xor
movsb
pop
nop
dec
jmp
fsubs
xor
mov
or
mov
mov
lret
scas
mov
iret
xor
push
imul
test
lods
ds
fucom
sarl
cmc
je
or
in
add
or
jbe
adc
push
jmp
popa
in
pop
fdivl
adc
inc
push
pop
inc
adc
rcll
xor
inc
mov
sbb
cmp
repz
in
daa
in
lcall
push
sbb
inc
aad
xlat
loop
aaa
or
fadds
dec
movsl
mov
add
or
stc
xchg
roll
loope
ja
in
bswap
mov
or
cli
cld
or
mov
pop
lods
jmp
popf
fildl
pop
sbb
sbb
mov
fldt
dec
cmpsb
loop
fucomi
cmp
jbe
sbb
sub
xlat
test
sbb
dec
fdivrs
addr16
js
fcomi
test
aaa
cwtl
push
inc
testl
jns
cltd
mov
cmp
pop
dec
stc
mov
rcr
ret
xchg
xorb
push
incb
or
nop
mov
imul
lods
or
std
push
call
pop
fistpl
add
insl
stos
sbb
mov
or
jmp
mov
xchg
pop
fdivrs
dec
pop
xor
andb
push
call
gs
movsl
in
fildl
pop
xchg
sub
xor
pop
ffree
cmp
fistpl
push
rclb
inc
mov
in
pop
add
mov
mov
sub
jg
fstl
cmp
clc
lcall
test
mov
out
ljmp
add
mov
jns
adc
rcl
jp
stc
pop
push
aaa
lods
pusha
mov
sub
fcmovnb
in
jne
lcall
clc
bound
dec
cmpsb
lods
add
jno
fcmovnb
sbb
orb
cmp
inc
shrl
mov
fdiv
sbb
fs
repz
les
movsb
add
fdivl
icebp
dec
hlt
push
xchg
dec
xor
pop
sbb
fildl
jecxz
or
jae
cmp
pop
xchg
fcmovne
fsubs
pusha
aam
jo
pop
xor
xchg
out
outsb
jg
lock
fdivrl
clc
lret
gs
xchg
mov
out
mov
dec
into
mov
xchg
dec
and
push
sbb
sub
pop
test
fcomi
xor
xchg
pop
push
jae
sbb
cmp
jb
pop
fcmovnu
jbe
mov
ret
es
div
ljmp
dec
popf
rcrb
jp
test
sbb
inc
add
lds
out
inc
mov
fisttpl
test
aaa
pop
inc
sbb
mov
add
fistl
mov
repz
xchg
jmp
fildl
sahf
das
mov
and
sti
jecxz
push
inc
xlat
fcmovne
jl
pop
mov
fndisi(8087
lds
sub
bound
fdivr
out
stos
inc
xor
daa
push
fldt
push
jno
pop
push
inc
jbe
mov
inc
rcrb
pop
andb
adc
push
mov
inc
imul
leave
rolb
fldt
call
lock
ljmp
out
das
test
outsb
jne
jo
sub
sbb
leave
sahf
push
dec
pusha
shr
call
adc
cmc
dec
ret
scas
int
daa
xchg
cli
xor
add
xchg
das
xchg
clc
fstpt
sahf
jmp
stc
cmp
fstl
xor
mov
sbb
fisttps
sub
fldt
fiadds
stc
stos
fldenv
or
jnp
adc
repnz
sub
xchg
mov
movsl
sbb
outsl
cmpsl
fcmovnb
inc
loopne
cli
mov
fldt
jo
leave
add
nop
and
jmp
inc
pusha
mov
inc
push
pop
aad
pop
out
cltd
jne,pn
lret
sbb
mov
scas
sub
lods
dec
loop
popf
add
xor
jl
inc
cmp
clc
and
pop
movsb
add
xlat
push
leave
lcall
jo
sbbb
and
inc
data16
xchg
jle
shl
out
mov
scas
sub
mov
sub
mull
inc
cmc
mov
imul
ss
xchg
jae
aam
mov
mov
out
push
test
xor
test
xchg
js
push
jne
mov
pop
mov
dec
xor
jge
sbb
stos
lds
sub
pop
movsl
lar
fcmovnb
hlt
repnz
xor
mov
cmp
es
fcomps
in
pop
pop
scas
out
lods
test
cli
into
sub
fsub
lret
xor
dec
fwait
testl
sub
push
inc
pop
xchg
clc
loop
loopne
call
xor
mov
fldt
and
sbb
lock
loope
cmc
fsubs
lcall
sub
cmpb
fisttpl
cltd
push
push
fidivs
lods
fistps
test
fstps
ljmp
subl
out
mov
popa
dec
ljmp
insb
test
jmp
loopne
lods
pop
and
shr
cmp
iret
sbb
stc
aam
push
inc
mov
or
cmp
xor
ss
jno
add
mov
fisttpl
test
and
loop
and
push
mov
enter
fidivrs
fistps
sahf
popa
cltd
xchg
nop
pop
pop
and
lock
pusha
fildl
cli
clc
mov
inc
jmp
subl
fcmovnb
dec
aad
into
scas
ss
cmc
lcall
sbb
cmp
sbb
mov
pop
sub
push
dec
aad
aaa
fldcw
pusha
divl
mov
jns
lock
repz
popf
sbb
stos
fistl
outsl
add
fcmovnu
add
push
imul
test
pop
cmp
xchg
push
xlat
jge
xor
nop
ret
sub
cli
jo,pn
loope
out
mov
lret
std
pushf
cmp
test
pop
jb
daa
ds
mov
loopne
xchg
adc
stos
repz
data16
pop
adc
xchg
adc
addb
xchg
pop
inc
push
pusha
jne
inc
mov
and
rolb
dec
sub
fcoml
pop
cmp
clc
out
mov
and
jl
les
sbb
adc
sub
xor
xor
push
lods
mov
outsb
cmpsb
fwait
enter
push
loop
mov
loop
aas
fldt
mov
js
cmp
fxch
adcb
repz
pop
mov
inc
fwait
adc
mov
je
mov
fildl
fdivs
push
xor
sar
mov
push
xor
outsb
mov
shlb
rolb
fistl
mov
pop
out
cmp
mov
test
cmpsl
mov
stc
pop
xchg
scas
sub
ret
ret
in
aas
add
lods
dec
jns
pop
testb
jb
notl
fstl
out
and
fbld
add
jnp
test
and
inc
mov
loopne
pop
sub
in
jecxz
jae
and
push
push
dec
adc
jmp
nop
cld
aaa
daa
cmc
bndstx
pop
int
pop
pop
cmpb
jnp
mov
dec
imul
inc
or
call
mov
jb
loopne
sahf
rorl
sbb
popa
pop
xor
sub
jp
pushf
stos
dec
test
sarl
popf
cmpsl
stos
outsl
xlat
fistpl
push
out
fsts
scas
gs
pop
xchg
mov
mov
mov
or
jecxz
mov
jg
and
sbb
push
mov
mov
cmpsl
xor
jp
dec
in
fildll
ret
loop
std
or
loope
fs
mov
cmp
push
mov
lahf
sbb
pusha
test
fistps
mov
fcompl
not
lock
dec
fildl
in
mov
jmp
outsl
mov
and
outsb
popa
pop
xchg
mov
mov
xor
mov
xchg
inc
jge
mov
or
jecxz
add
loop
jb
pusha
cmp
jmp
adc
clc
call
lahf
enter
in
add
fs
or
loop
fistl
fcmovnb
hlt
fcompl
das
sarl
jae
nop
mov
push
int3
loopne
pop
aad
xchg
in
add
iret
mov
jmp
fmull
cmp
pop
mov
movsb
scas
mov
dec
lahf
fistpl
mov
fisubs
add
in
pop
lods
lods
push
push
call
sbb
iret
std
fistl
jns
mov
in
jecxz
jnp
adc
bnd
scas
insl
sub
cli
fsts
fstpl
xor
dec
jb
jo
inc
inc
lea
fcmovnu
push
inc
jge
jbe
jb
mov
mov
dec
lock
insb
and
jecxz
sarl
cmpb
and
fsub
xchg
sti
repz
lods
cmp
mov
cmpsl
loop
push
ljmp
in
rcr
lahf
xchg
push
bound
or
std
and
inc
push
jecxz
add
fnclex
data16
decl
sbb
mov
xor
or
cmp
jle
jmp
in
test
in
outsb
mov
inc
ja
fldt
sbb
lret
ss
out
sbb
push
mov
and
and
fistl
or
and
fimuls
idivb
mov
push
dec
fsubr
add
repz
push
xchg
shrb
mov
xor
xchg
cmpsl
pop
pop
cmp
mov
mov
lret
push
out
add
std
pop
push
and
ja
cld
shr
lods
push
fcmovnb
and
shl
xor
int
lret
bound
cld
lock
inc
or
fildl
pop
dec
and
jmp
add
outsb
sub
lahf
fnstenv
sub
rolb
sub
mov
mov
and
outsb
cmp
insl
into
lahf
inc
mov
out
inc
cli
push
mov
ficoml
lahf
scas
lock
add
sbb
fcmovnbe
xor
push
inc
push
hlt
mov
fldl
cmp
push
inc
lahf
out
inc
and
jnp
rcr
loop
mov
fs
imul
das
call
sbb
scas
or
pop
out
pop
adc
cmp
scas
jb
out
lahf
out
sti
or
push
lret
sub
lods
pop
mov
fildl
ja
icebp
xor
lcall
cmp
mov
nop
rol
mov
aad
xor
test
lea
pop
daa
les
fisttpl
and
sbb
fstps
mov
data16
dec
iret
addr16
movsb
jg
stos
filds
pop
loop
fdivl
and
fstpt
and
loop
ret
loop
stos
push
fwait
fisttpl
pop
in
mul
mov
imul
in
xchg
jle
clc
or
sbb
jno
xlat
je
dec
push
sahf
jle
pop
adc
loop
mov
mov
push
fs
imul
aaa
loope
mov
mov
push
push
fnstsw
xchg
xorl
rolb
jmp
add
push
movsb
dec
mov
fadd
jle
sub
xchg
imul
jb
dec
and
mov
add
imul
pop
call
imulb
divl
mov
iret
pushf
dec
jp
xchg
push
inc
shr
mov
stc
pusha
sbb
jmp
jnp
enter
icebp
push
fsubl
xchg
lods
lret
and
sbb
ret
hlt
pop
sbb
adc
fiadds
mov
add
pop
pop
xorb
pop
out
dec
cli
mov
adc
xor
lods
popa
aad
rcll
fwait
mov
fisttpl
daa
fwait
fistpl
sub
mov
outsb
js
adc
mov
jns
cld
jge
push
pop
fucom
out
aad
fwait
sti
fwait
mov
out
push
insb
pop
mov
cltd
loop
inc
mov
gs
fbld
xchg
in
dec
and
sti
inc
jmp
fisttpl
jnp
ja
cmp
lea
mov
pop
xor
lret
or
jmp
loop
pop
fsubrl
out
jo
jae
fcmovnbe
or
push
fcmovnbe
push
inc
or
sub
sbb
bound
mov
pop
and
xor
add
and
ret
fsubrl
cmc
std
fmul
aas
pop
ljmp
push
fucomi
in
xchg
inc
fdivrs
ds
fcmovnbe
cmpsb
aam
adc
imul
jno
loope
pop
loop
nop
aas
add
pusha
cmpsb
xor
mov
out
fs
gs
sbb
inc
shrd
jnp
and
popa
test
dec
das
in
fistl
fistl
bound
js
push
jle
call
adc
daa
iret
mov
xchg
xor
jo
mov
xlat
sub
cwtl
mov
mov
inc
or
mov
cmp
loopne
sbb
das
pop
inc
xchg
outsl
insl
or
dec
pop
lea
jp
sbb
stos
daa
push
in
out
pop
fildl
mov
dec
out
in
push
jae
or
add
jne
fisttpl
hlt
sbb
movaps
fucomi
fistps
in
loopne
mov
addl
ffree
cmp
outsl
mov
lcall
fnstcw
into
add
push
daa
movsl
stos
mov
cmc
xchg
les
pop
ljmp
bnd
daa
and
adc
mov
loope
adc
fistpl
ret
sub
sti
orl
shr
inc
inc
shrl
jbe
add
notb
and
pusha
inc
xchg
mov
iret
fldt
test
fistpl
fucomp
cmp
cld
inc
fildl
jno
jbe
scas
pop
fstpt
sub
mov
cmp
ja
mov
xchg
xchg
cmp
dec
mov
jb
xchg
gs
fistl
mov
popa
or
fwait
sarl
ljmp
je
cwtl
ret
adc
lcall
cmc
and
mov
lahf
mov
insb
inc
idivl
cmpsl
add
jne
or
aad
fs
pop
mov
pop
fstl
inc
pop
sub
out
xchg
inc
movsl
popa
sbb
cmc
push
call
lea
sahf
fdiv
push
mov
inc
inc
inc
loope
out
dec
mov
mov
fnsetpm(287
sbb
outsl
outsb
pusha
je
pusha
add
ja
push
mov
sbb
sbb
out
jbe
pushf
cmp
sbb
rcr
pop
sbb
popf
call
je
subl
insb
mov
jmp
inc
fcmovnb
push
fcomps
out
inc
push
vdivsd
mov
mov
xchg
lcall
aam
xchg
jb
jb
pop
and
mov
pop
fiadds
out
ja
je
lret
and
insl
loop
cmp
or
xchg
mov
pcmpeqd
in
cs
sahf
xor
in
cmc
adc
cwtl
out
fildl
pop
mov
adc
loop
negl
pop
inc
movsb
mov
les
dec
mov
aaa
loopne
jnp
cli
xchg
or
mov
in
sub
or
mov
adc
mov
shr
jmp
getsec
push
push
jnp
aaa
lret
stos
or
jmp
jne
clc
repnz
xor
idivb
ss
jo
enter
mov
fistpl
jle
mov
outsb
mov
mov
mov
test
shll
imul
int3
orl
and
cs
rcrb
ss
dec
dec
daa
repz
mov
inc
xchg
sub
xchg
cmp
xor
insb
mov
add
mov
add
add
pop
mov
sbb
sub
push
adc
xchg
mov
cmp
cld
adc
imul
sbb
mull
fistpl
mov
fldl
insl
mov
mov
fstpt
adc
test
dec
pop
sbb
push
inc
loop
xor
lret
inc
insb
adc
dec
sub
in
lea
data16
adc
mov
sub
fnstcw
dec
mov
sahf
xchg
inc
push
repnz
lea
mov
pop
leave
fildl
mov
jge
jl
shlb
icebp
leave
cmp
add
negl
repz
das
or
fcmovne
sub
fcmovnb
in
fwait
mov
sarl
mov
jo
lcall
fildl
lods
clc
mov
aaa
jo
jno
data16
push
ret
adc
popa
movsb
fisttpl
cmp
cmc
roll
fistpll
adc
mov
mov
push
add
sti
pop
imul
int
and
clc
addr16
leave
push
or
aaa
mov
sub
ret
push
lcall
std
sub
lods
mov
jno
mov
jp
xor
pop
adc
add
lock
repnz
and
loop
mov
vmsave
push
dec
lcall
mov
push
pusha
xor
and
dec
mov
push
testl
pop
daa
sbb
ret
pop
pop
push
inc
push
inc
lock
mov
stos
fnsave
push
ja
orl
jmp
lock
jecxz
mov
lods
adc
add
pop
mov
hlt
in
int
adc
xlat
add
divb
jo
xchg
fdivrl
jnp
cld
add
xchg
in
js
ja
out
dec
imul
outsl
add
jmp
jl
xchg
scas
lods
test
aad
mov
adc
imul
ret
inc
mov
js
test
adc
cmpsb
movsl
jl
rorl
in
aam
jecxz
mov
mov
or
gs
fwait
out
cmpsl
movl
cld
adc
or
in
push
mov
push
ret
shll
lahf
inc
mov
xor
mov
outsb
insb
add
adc
fsubl
mov
scas
lea
xchg
sti
pop
int
ja
sub
xlat
push
cmp
jno
shll
ja
inc
popf
repnz
jo
int
ret
xchg
sti
adc
jbe
add
ret
mov
fdivr
pop
and
cmpsl
mov
popf
subb
pop
jmp
loope
jl
jo
add
test
in
lret
cld
adc
mov
insl
repz
mov
lcall
sti
or
pop
ret
pop
cmp
js
repz
test
rcll
shlb
ret
jmp
add
pop
dec
adc
push
insb
xchg
insl
ror
xchg
xor
adc
outsb
insl
jne
popf
ljmp
mov
int3
and
stos
jns
lods
cmp
stos
sbb
cmpsb
shlb
shlb
roll
push
or
jbe
ret
mov
hlt
or
fimull
int3
cli
adc
push
inc
cwtl
ret
stos
inc
dec
iret
add
lcall
and
paddb
roll
push
mov
in
lods
adc
jmp
stc
adc
mov
cld
in
fsub
and
mov
mov
outsb
es
retw
lods
adc
in
mov
imul
cmpsb
imul
mov
xor
or
repz
jno
mov
insl
test
cli
pushf
and
inc
jge
scas
dec
test
pop
mov
cwtl
mov
cmpsl
popa
in
cmc
adc
sub
mov
dec
jbe
aaa
iret
hlt
insl
test
adc
adc
cli
iret
cmpsb
add
inc
push
mov
orb
or
jl
decl
jo
insl
les
cld
div
or
add
cmpsb
jmp
mov
fidivrl
push
ret
ja
imul
mov
loopne
jns
popa
jo
jae
imul
stos
cmp
outsb
adc
pop
lret
fsubl
push
inc
cltd
or
stos
pushf
imul
jns
ja
add
xlat
ljmp
mov
std
lcall
xchg
jo
aam
mov
aaa
decl
je
adc
mov
arpl
push
xchg
outsb
lods
pushf
in
rcl
ja
je
inc
lea
stos
mov
mov
mov
shlb
lcall
mov
add
mov
in
and
cmp
pop
inc
insl
leave
mov
cmpsl
test
call
push
fnsave
ret
mov
fstpl
mov
inc
jbe
je
add
popf
cmpsl
enter
cmpsb
xchg
orl
push
jb
adc
push
and
and
insl
xchg
cltd
jbe
xor
das
scas
cmpsl
rcl
rolb
scas
andl
ja
enter
jbe
outsl
lock
push
mov
push
in
sbbb
enter
lock
and
cli
adc
pushfw
loope
pop
rol
xor
xor
xchg
pop
and
mov
xlat
push
and
push
xor
cld
mov
jo
in
aad
mov
mov
out
add
pop
scas
pop
popf
push
sarb
int
cwtl
mov
xor
lods
out
js
loopne
cmp
aad
sub
adc
push
mov
lods
jbe
inc
push
cmpsb
mov
sbb
mov
mov
mov
outsl
jbe
xchg
add
mov
adc
cmp
daa
shll
outsl
int
sbb
mov
out
sti
jmp
testl
movsb
xchg
lods
iret
adc
and
jns
jo
fistpl
mov
mov
mov
mov
cmc
or
aaa
add
xor
lods
aaa
adc
adc
jecxz
cmp
jns
mov
inc
push
add
mov
or
mov
lahf
sahf
mov
cmpsb
and
jp
cmpsl
cli
test
out
mov
mov
popf
imul
lahf
frstor
adc
mov
mov
rcrl
jae
jle
pusha
jbe
jno
xlat
cmp
mov
push
xlat
aas
lods
mov
mov
xchg
aad
dec
arpl
mov
jmp
lods
jmp
jmp
xchg
pop
cmp
jo
jmp
xor
or
pushf
and
out
mov
jno
out
jmp
pop
cmpsb
stos
cld
lods
mov
and
mov
lods
lea
and
and
test
repz
mov
stos
and
sub
mov
cmp
stos
sbb
cld
lods
mov
push
je
or
cmovp
pop
jo
pop
cmp
xorl
pop
lods
jmp
mov
lahf
aaa
aam
std
xchg
cld
cltd
lahf
stos
fisubrl
jecxz
sahf
stc
ret
jae
js
inc
sub
psrad
or
ss
lret
dec
lds
dec
mov
adc
mov
fmul
mov
cmpsb
cld
and
test
add
mov
je
push
fidivrl
dec
enter
adc
test
outsb
mov
mov
adc
scas
xchg
gs
pop
adc
je
adc
add
pushf
push
scas
aad
adc
cwtl
cltd
jg
jno
out
jb
jne
fidivrl
mov
test
jbe
bt
xchg
bound
jo
ja
dec
or
rcl
aad
loop
jae
shl
jmp
lods
frstors
imul
test
scas
sti
les
stc
pop
je
push
mov
lret
imul
fmull
adc
ja
fmul
daa
adc
in
push
mov
loop
jb
imul
jmp
pop
mov
or
fnstcw
adc
ret
pop
popf
paddb
and
mov
cmpsl
daa
arpl
js
or
iret
mov
jb
push
pop
cli
outsl
js
jge
repz
test
out
mov
ret
std
stos
out
insl
xlat
int
mov
ret
add
jae
pop
pop
cmpsb
push
je
and
or
xchg
sub
outsl
call
cwtl
insl
pop
dec
pop
jo
adc
rcll
or
int
add
add
rolb
int3
aaa
jno
sbb
pop
add
mov
fucom
mov
sti
xor
adc
pop
jnp
or
cmp
dec
iret
sbb
insl
mov
insl
int
ret
dec
cld
loopne
fdivl
scas
imul
cmpsl
je
pop
mov
adc
aas
cmc
mov
sub
mov
inc
arpl
scas
cli
cmp
insl
adc
enter
dec
and
lea
out
mov
cmp
push
mov
nop
faddl
or
mov
or
fstpl
lock
mov
or
xor
iret
in
cmp
jne
sar
inc
sub
arpl
mov
mov
cmpsb
int
pop
adc
mov
lret
push
call
push
push
adc
add
push
adc
push
mov
push
pushl
scas
jmp
call
inc
sbb
jnp
jo
insl
cmp
jge
pop
pop
data16
cbtw
xchg
data16
xchg
xor
aam
pop
data16
sub
dec
pop
data16
data16
push
sbb
add
adcl
cli
or
cmp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
cmc
fucom
add
mov
or
pushf
dec
into
and
inc
insb
inc
jne
addr16
xchg
inc
xchg
inc
jge
das
inc
cmp
inc
dec
inc
pop
inc
cmp
cmp
mov
mov
mov
cmpsb
inc
lret
inc
leave
inc
insl
inc
popa
inc
gs
cltd
inc
jge
xor
inc
and
inc
cmp
cmp
out
cld
outsb
dec
sti
push
mov
sahf
inc
mov
hlt
insb
hlt
popa
hlt
hlt
xchg
hlt
xor
hlt
daa
hlt
push
hlt
cmp
jmp
loope
insl
adc
jns
jae
jne
pop
shll
popa
jb
imul
popa
sub
popa
dec
mov
jmp
ss
mov
negb
testb
dec
testb
loop
adc
scas
mov
inc
ja
imul
sbb
dec
testb
jecxz
inc
cli
inc
lods
out
test
repz
fistps
fisttps
inc
mov
or
lret
mov
xchg
dec
adc
in
roll
xchg
mov
lret
xchg
dec
xor
dec
aas
daa
testb
std
xchg
mov
int3
or
lret
xchg
dec
sub
and
es
prefetchwt1
mov
inc
xor
notb
adc
or
ja
xchg
inc
test
fiadds
repz
inc
mov
movsb
out
jmp
idivl
cmp
dec
fcomip
mov
in
or
jne
cltd
lcall
inc
or
out
mov
repz
push
mov
push
mov
sahf
lret
mov
and
inc
or
test
or
xchg
out
push
xchg
cmp
jmp
pop
jmp
out
divl
repz
fucomip
mov
or
lahf
jae
jle
and
cmp
mov
sahf
lahf
outsl
mov
pop
adc
adc
rcrl
xor
dec
repnz
xchg
fwait
xor
or
lret
cmc
adc
xchg
test
outsb
mov
xor
adc
int3
out
jb
xor
pop
mov
sahf
lahf
mov
fst
add
or
add
xchg
mov
es
out
ds
faddp
ss
and
cli
push
inc
mov
sbb
sti
sbb
inc
outsl
out
xchg
jmp
imul
mov
pushl
jl
push
adc
std
add
fcoms
inc
push
in
mov
leave
ss
es
inc
rolb
out
cs
mov
xchg
jmp
div
mov
add
xor
movsb
sbb
adc
add
rcrl
out
add
xchg
mov
outsb
sbbb
add
ret
out
jle
dec
jne
inc
mov
jmp
add
push
jge
push
mov
emms
pushf
jns
jae
cmp
sbb
xor
icebp
stos
pop
add
mov
loope
mov
push
lods
insl
or
jae
in
lods
add
bound
adc
test
pop
in
mov
and
dec
adcl
sarb
jae
jmp
mov
xor
mov
mov
add
mov
call
push
pop
cmp
mov
mov
ljmp
bound
add
enter
inc
mov
jl
cmp
jns
jmp
insl
cld
ja
jns
cwtl
es
xchg
movl
das
out
icebp
mov
stos
mov
sahf
cmp
repnz
mov
pusha
sbb
gs
fadds
std
inc
ret
out
jmp
mov
sbb
mov
push
movsb
add
jmp
mov
pusha
inc
daa
mov
sahf
xchg
adc
xor
xchg
movsl
xchg
inc
jno
xor
xchg
inc
movsb
inc
fisubrs
inc
lret
add
inc
push
mov
jmp
dec
mov
lods
mov
adc
push
sarl
xlat
popf
xchg
mov
fadds
inc
js
sbb
mov
shlb
shrl
aam
inc
les
mov
loop
fstps
test
cwtl
dec
mov
pop
rolb
jae
and
rcll
or
mov
xchg
rolb
lret
repz
mov
jmp
cmpsb
mov
add
clc
inc
xchg
inc
inc
mov
mov
leave
xor
inc
inc
pop
ret
inc
inc
mov
lcall
rcll
xchg
jp
repnz
lret
inc
fidivl
jecxz
mov
xchg
loope
daa
push
xchg
jae
dec
imul
insb
mov
cwtl
adc
insl
into
cmpsb
mov
xchg
sarb
pop
aaa
shl
dec
js
add
cmp
mov
jb
fcos
ss
xorb
je
add
jne
and
lcall
loop
pusha
pushf
cld
jl
fsubl
push
ja
decl
mov
subb
pop
stos
add
and
pop
incl
mov
add
push
bound
out
call
mov
xchg
loop
gs
cld
and
dec
fisttps
insl
lods
ja
ficoml
mov
and
dec
pop
mov
incl
or
cmp
negl
insl
mov
jp
in
js
cmp
pop
and
dec
fists
jle
bound
jg
add
add
dec
subl
orb
push
jl
and
jge
or
cltd
xchg
cmpb
xchg
cld
and
insl
adc
xorb
or
daa
repnz
ret
cld
mov
frstor
dec
inc
das
insl
mov
bound
xor
and
dec
inc
sub
mov
bound
aaa
or
jg
insl
push
jmp
faddl
ret
std
cmp
fwait
inc
dec
xor
movsl
lcall
push
mov
sbbb
and
insb
les
mov
insl
in
addr16
ficompl
jne
clc
sbb
out
sbb
and
insl
mov
bound
int3
cld
push
sub
and
sub
loope
insl
pushf
je
pop
mov
bound
mov
mov
inc
push
hlt
dec
cmp
mov
xor
mov
xor
dec
lcall
push
insl
movsb
decl
shll
pop
fdivr
push
push
mov
aas
inc
push
insl
outsl
in
push
jns
fidivrs
pop
aas
call
or
cltd
inc
jmp
cmp
sub
mov
cmpsl
decl
bound
inc
cld
out
inc
jbe
fisttps
addr16
adc
inc
cli
cld
test
and
inc
insl
test
bound
imul
out
imul
icebp
add
ljmp
dec
in
insl
insl
loop
in
notb
xor
and
inc
stc
jo
fdivp
gs
xor
mov
and
sarb
and
loop
xchg
loopne
and
aas
fidivl
push
testb
jmp
jns
push
dec
in
in
push
jecxz
inc
push
pmulhw
jns
jae
fcompl
repz
sti
fsub
pop
adc
insb
or
inc
dec
cmp
pop
and
loop
dec
mov
jge
push
loop
and
stos
call
cmp
repnz
jno
pop
cltd
xor
jno
fimuls
lock
call
pop
pushf
push
mov
lods
mov
sbb
cmp
sbb
pop
insl
pop
fucomi
or
sub
mov
mov
es
jecxz
data16
adc
adc
xchg
test
xchg
fnstcw
in
inc
imulb
into
ret
enter
sub
arpl
fcoml
repz
movsb
insb
bound
xor
push
inc
hlt
add
lds
xchg
test
cmc
ja
outsb
pop
arpl
daa
xor
jecxz
mov
pushf
call
mov
pop
sbb
out
popf
sbb
mov
mov
cmpsb
pop
sbb
sub
fsub
jbe
mov
sub
jecxz
cs
mov
call
sub
add
cmpsl
sub
and
mov
sti
insl
mov
push
pop
movsb
fisttpl
cs
fstpt
push
sbb
or
mov
and
dec
sbb
and
cmp
lea
jo
sbb
inc
push
movsb
jmp
add
cmp
in
sbb
and
ds
xrelease
lods
sub
adc
ds
fstpt
dec
xchg
mov
jmp
fstpt
mov
pop
fdivl
cmp
cwtl
push
int
int3
test
fistl
mov
dec
sub
mov
cmp
and
add
cld
js
or
mov
stos
xchg
lock
fstpt
jae
hlt
notl
in
mov
cmp
fdivrp
fs
stc
jns
loop
insb
mov
mov
mov
fsubrl
sbb
in
les
nop
dec
enter
or
xchg
insl
or
addl
hlt
imul
fldt
pop
mov
adc
outsb
int3
xchg
jne
rcr
push
imul
in
sub
es
stos
movsb
insb
ds
jle
push
add
stos
fcmovnu
push
testb
mov
adcb
test
cwtl
inc
pop
add
jecxz
sbb
mov
push
dec
xchg
inc
push
out
ja
loope
mov
jae
rcrl
adc
cmpsb
sbb
fisttpl
test
xor
frstor
fcmovnu
xchg
cli
push
mov
inc
fcomi
jne
aaa
ja
pop
xor
in
dec
sbb
inc
lock
orl
pop
dec
adc
mov
xchg
jne
sub
inc
push
insb
roll
pmullw
filds
daa
jp
dec
add
jle
rorl
push
dec
fstpt
mov
jo
cmp
fwait
pusha
sahf
mov
jnp
pop
push
add
sbb
aam
sbb
je
loope
xor
dec
dec
insb
adc
cli
ljmp
cmp
hlt
mov
cmp
dec
lods
loope
inc
fstpt
scas
fcompl
fcmovnb
lret
pop
stos
mov
scas
dec
and
test
fwait
xchg
push
std
aam
je
mov
dec
outsl
iret
fistpl
pop
and
cltd
gs
fs
fisttpl
lock
push
iret
loop
insl
sub
xlat
popf
mov
pop
out
inc
lcall
sub
cmp
push
xchg
shlb
rclb
stos
dec
or
lret
cmp
mov
xchg
filds
jae
inc
inc
rcrb
ds
dec
dec
inc
out
xchg
lcall
add
pop
nop
inc
pop
loop
sbb
rorl
pop
inc
xchg
sbb
loope
jle
mov
fcomi
mov
or
cli
arpl
loop
into
push
or
fadd
hlt
mov
sub
je
lret
xor
dec
fstps
and
mov
lds
test
loopne
dec
xchg
jmp
pop
mull
jmp
cmpsb
cwtl
repz
fstpt
hlt
bound
in
mov
lahf
imul
adc
popf
mov
sub
sbb
pop
test
pop
jmp
dec
rcr
imulb
rcll
lcall
les
in
xchg
cli
imul
inc
cs
cmpl
dec
test
fldenv
aad
fcomi
cmp
xor
sbb
neg
jp
mov
lahf
cwtl
adc
loop
repz
fdivrs
add
lea
mov
orl
icebp
xor
xchg
adc
cltd
popf
mov
std
or
lock
pop
out
adc
ja
notb
pop
out
daa
push
sub
sbb
inc
mov
jle
or
test
push
sub
jl
cwtl
loope
adc
mov
mov
fildl
nop
xchg
cwtl
mov
mov
in
stos
xlat
and
rcr
lock
cmp
jp
leave
cli
mov
pop
sti
cli
xchg
outsb
fstpt
pop
jp
dec
push
mov
mov
mov
add
jnp
mov
jo
mov
fldl
cmpsl
adc
fisubl
mov
jmp
dec
cmc
mov
mov
add
cmp
mov
jle
cmc
xor
push
fisttpl
clc
mov
fisttpl
test
pop
adc
xor
jmp
testb
jle
in
lcall
add
cli
dec
ljmp
jp
scas
pop
adc
dec
mov
lds
dec
mov
push
mov
mov
and
lods
fmulp
stos
loop
add
ret
ljmp
pushf
sahf
jns
dec
lcall
mov
sbb
mov
jbe
loop
int
xchg
cmp
imul
fucomip
mov
lcall
push
sbb
mov
lods
push
lea
dec
sahf
arpl
dec
xchg
sbb
mov
fwait
test
stc
fstpt
lods
rol
imul
sub
stos
sbb
add
repz
xchg
xchg
out
jnp
cli
dec
loop
stos
push
je
mov
mov
js,pt
fcmovnbe
pop
cmc
xor
cli
adc
std
push
fldt
bound
xor
adc
fistps
fistl
je,pt
sahf
out
fistl
add
jbe
int3
cmp
scas
in
push
shll
imul
cld
fisttpl
cmp
jae
and
mov
aas
mov
mov
fistpl
stos
aam
adc
inc
neg
icebp
aas
sbb
mov
dec
loop
cs
and
and
cmc
pushf
and
sbbl
sbb
out
sub
adc
push
jnp
das
loope
outsb
jmp
es
fisttpl
sbb
pop
popf
cmp
mov
daa
cmp
xor
hlt
and
mov
dec
dec
movsl
jmp
lcall
bound
sub
jbe
loop
aas
movsb
and
arpl
sbb
jno
lea
dec
mov
gs
decb
add
sbb
add
mov
mov
pop
inc
aam
pop
loope
sub
xlat
or
and
dec
sbb
popa
jae
pushf
sarb
cmpsb
ret
aas
in
and
pop
push
icebp
dec
test
mov
iret
push
popa
adc
xchg
leave
push
cwtl
fstpt
xchg
inc
cmp
in
xor
mov
add
popa
filds
cs
mov
arpl
orb
mov
test
push
sbb
jne
sbb
sbb
fimuls
in
neg
jmp
lea
shll
mov
xchg
pop
insb
enter
ficoml
jmp
lods
jle
mov
xor
fistpl
mov
mov
sbb
fwait
repz
sbb
mov
lock
push
dec
fistps
in
or
xchg
test
cmpsl
sbb
mov
lret
inc
push
nop
mov
ss
inc
pop
in
push
lock
loopne
fisttpl
adc
and
lahf
adc
mov
sbb
repz
fwait
xor
cli
mov
ds
shrb
xchg
gs
pop
and
sub
jns
sub
repz
pop
lret
aaa
out
out
mov
arpl
inc
fcoml
dec
and
orb
dec
adc
sbb
mov
lock
mov
or
mov
orb
mov
pop
xor
mov
fstpt
mov
sub
sub
xchg
push
in
xchg
inc
adc
lahf
inc
add
out
xor
test
xchg
test
cmc
cwtl
inc
xor
push
loope
dec
mov
lahf
inc
or
dec
dec
and
js
sbb
lret
jb
aam
icebp
pop
lods
pop
sbb
sahf
das
fcmovnbe
sbb
pop
mov
fistpl
testb
push
lock
xor
jne
add
rcr
psubusb
dec
inc
add
pop
push
popa
in
out
shlb
xchg
push
mov
pushf
cmp
es
add
call
and
fstpt
testb
push
mov
mov
pop
inc
mov
inc
aaa
ds
fisttpll
fs
and
cmp
sbb
cmp
sub
sbb
jge
mov
sbb
or
popa
lcall
loope
je
sahf
mov
pop
xor
and
push
jns
les
xchg
out
das
push
push
mov
mov
fsubrs
aam
testb
dec
cmc
clc
loopne
xchg
push
inc
fcomi
mov
and
das
sbb
add
addl
push
push
pop
mov
fisttpl
inc
and
push
aaa
cmp
jmp
nop
insb
fxch
sbb
mov
jnp
xor
pop
inc
pop
sub
sti
orb
out
rcrb
shrl
daa
decl
and
push
loope
lods
mov
cli
sbb
addb
mov
cltd
xor
pop
test
push
fwait
lods
fsts
fildl
push
in
mov
shl
fucomi
xchg
out
divl
fistl
sbb
daa
add
push
lcall
mov
push
js
aad
jb
push
mov
flds
les
faddl
loop
or
push
into
ret
push
xor
jne
xor
das
shlb
inc
fcmovnb
mov
mov
mov
jns
fwait
ja
fwait
cwtl
rep
xlat
aad
stos
cmpsb
adc
pop
mov
sbb
add
mov
mov
fildl
int3
push
repnz
movsb
sub
pop
lret
mov
jae
jmp
in
add
dec
mov
popa
ret
add
test
mov
out
cmp
scas
fsubr
cmp
sarl
cmpb
in
jle
rclb
ss
xchg
loopne
into
pop
dec
bound
je
adc
dec
add
popa
fcmovnbe
inc
inc
nop
sub
cmp
push
cmp
xchg
sbb
mov
notl
jno
bound
lret
inc
mov
mov
pop
push
imul
call
and
cmp
ret
hlt
mov
dec
mov
xchg
pop
sub
inc
mov
out
jmp
aaa
fcomi
xchg
and
sbb
lods
fsubr
scas
pop
xor
and
fwait
ljmp
cltd
inc
shll
jbe
pop
xchg
cmp
enter
in
jb
rcll
imul
lock
dec
fwait
je
loope
aad
add
mov
dec
sbb
xchg
sarl
pop
sbb
les
mov
add
and
aas
sbb
mov
test
or
lret
adc
notb
aam
sbb
jne
mov
push
fstpt
fistpl
inc
xlat
pop
inc
or
lds
les
mov
lret
sbb
mov
pop
cmp
or
and
sahf
fnstsw
mov
cmp
mov
sub
cmp
and
orl
inc
dec
add
cltd
aaa
push
loop
dec
andb
es
ljmp
pop
nop
fwait
mov
fbstp
push
mov
add
jae
ljmp
repnz
cmp
fistl
outsb
lret
shll
push
fcoml
xor
dec
fcompl
testb
jae
pop
fcmove
pop
add
mov
inc
xor
cltd
cs
mov
push
adc
xor
and
xor
cmc
fwait
mov
fstpt
xchg
mov
cwtl
dec
jns
push
mov
or
std
adc
push
sbbb
pop
push
jge
mov
mov
xchg
aaa
ror
and
fisttpl
int
mov
shrl
sbb
jg
stos
pop
and
mov
jbe
bound
sub
fstpt
cmp
mov
and
lock
jmp
repnz
cmp
insb
push
cmpsb
inc
inc
loope
rorl
cli
dec
push
aad
mov
add
xchg
fsub
setb
out
jbe
push
dec
jmp
jle
push
shl
adc
inc
jmp
jne
fildl
aam
cli
fadds
lods
fwait
mov
es
sub
push
mulb
fistl
pop
fistps
aaa
mov
lcall
sahf
inc
jge
and
inc
lods
faddl
mov
push
fmuls
fcomi
mov
nop
pop
in
push
fistl
cmp
or
mov
in
loop
cmp
insl
sbb
sbb
sbb
insb
jo
jbe
cmp
fucomi
in
add
repnz
out
jmp
push
mov
fnstenv
into
hlt
sub
fstpt
and
lods
or
or
cmpsb
imul
mov
pop
fwait
adc
sbb
lret
mov
pop
lret
cmc
sahf
gs
sub
mov
and
adc
scas
or
cmp
jle
adc
arpl
movsl
jne
fistpl
cmpsl
ja
nop
pop
pop
addr16
xor
data16
inc
dec
jmp
push
insb
dec
ds
lcall
pop
test
leave
adc
fistpl
sub
and
and
dec
cmpb
gs
ret
addr16
fdivs
out
out
pop
and
mov
sub
scas
js
std
jbe
out
mov
fstps
pop
insb
adc
iret
sub
mov
mov
orl
inc
pop
repz
rcr
testl
xchg
out
jp
jae
fistpl
fsubs
inc
jae
dec
repz
jo
stos
pop
fnstenv
loop
jmp
pop
cli
fldt
repz
movsb
sub
cltd
jmp
jnp
popa
mov
mov
ljmp
xor
pop
and
flds
jl
int
outsl
mov
sahf
pop
xor
sbb
mov
push
dec
mov
pusha
mov
lods
cli
fmul
jp
in
mov
loope
insl
push
xor
imul
fcmovnbe
enter
sti
pop
das
fnclex
push
xchg
xchg
fchs
ja
or
jmp
xorl
lods
ret
adc
das
xor
scas
cmpsl
mov
lahf
mov
jle
stc
fstp
dec
and
xchg
cmp
xchg
push
jge
inc
arpl
jb
sarl
push
fildl
mov
sub
pop
mov
aad
out
push
adc
xchg
fwait
xchg
fnstenv
mov
movsb
jae
sbb
sbb
push
loope
out
sub
and
fsubrl
test
pop
lds
lods
mov
daa
cli
aam
cmp
mov
pop
sbb
ljmp
out
das
fisttpl
add
mov
out
data16
and
ja
push
scas
movsb
mov
or
pop
ficoml
push
dec
mov
es
ja
xchg
mov
stos
cmpsb
jo
fstpt
push
sbb
fninit
push
jnp
dec
and
mov
lcall
sub
gs
fildl
aas
test
out
pop
aad
xchg
lcall
daa
in
cmp
cmp
loope
jae
xchg
xchg
jp
mov
mov
fcoml
jns
movsb
cmp
lcall
pop
clc
stos
xlat
fdivs
inc
fisttpl
movsl
xor
ljmp
adc
lock
push
ret
xor
fildl
jle
aaa
jmp
fcmovnbe
xchg
test
inc
fs
add
push
jns
or
enter
hlt
insb
xlat
scas
sub
nop
movsl
and
jp
and
and
xchg
outsb
js
mov
or
cmp
in
xchg
xchg
sub
mov
inc
lock
xchg
mov
jp
mov
xchg
fildl
lahf
dec
or
cmp
iret
andl
mul
sub
pop
pop
jo
xchg
rcll
fists
pop
and
in
jbe
fildl
ljmp
orb
mov
mov
sub
fldt
pop
cmc
js
ret
xchg
jne
inc
push
pop
or
fwait
je
mov
outsb
cmpsb
arpl
stos
divl
js
loop
push
and
add
fs
das
adc
add
add
or
roll
test
push
adc
cltd
dec
cmpsl
jnp
dec
cwtl
cmc
fldt
daa
inc
xor
ss
test
pusha
dec
pop
fistpl
mov
jge
es
jecxz
and
mov
mov
out
sbb
daa
cltd
clc
fsts
mov
mov
loop
lcall
ret
cltd
jns
iret
imul
mov
and
xor
test
sbb
jl
cmpsl
insb
jmp
mov
adc
test
roll
leave
xchg
fsubrl
jmp
inc
adc
les
mov
dec
fildl
aam
jle
xchg
movsb
push
je
jmp
mov
test
pushf
hlt
dec
ds
lods
fistl
stc
popf
pusha
mov
xchg
fisttpl
jns
push
imul
setns
in
call
negb
push
dec
out
lds
add
fistpl
xchg
mov
and
ret
loope
insl
mov
addr16
repnz
test
cltd
pushw
nop
push
dec
jl
arpl
xor
mov
lret
lea
mov
loopne
mov
test
inc
sarl
into
cmp
and
lods
push
xlat
fwait
dec
adc
repz
imul
subl
mov
arpl
leave
xchg
inc
aas
ret
mov
fisttpl
push
je
mov
das
mov
mov
or
aas
pusha
mov
fs
jp
test
sbb
dec
xor
push
scas
js
jns
stos
inc
push
loop
ret
mov
cltd
lret
xlat
mov
xor
xchg
sbb
inc
je
pop
cmp
mov
dec
xchg
xor
jno
mov
mov
fldt
cld
xorl
adc
dec
mov
jp
dec
scas
push
enter
sub
xchg
je
addr16
daa
cmc
shlb
or
mov
outsl
cltd
jl
xchg
mov
test
shl
inc
clc
mov
fcomp
push
fdivl
mov
fbstp
or
mov
loop
sub
push
in
dec
and
rcr
pop
ds
lea
mov
sti
cmc
sbb
jp
jle
lock
lret
jns
push
ds
test
fsubrl
fldcw
out
lock
inc
test
pop
jns
fistl
or
lret
push
aad
fucomi
out
mov
inc
std
jmp
arpl
fisttpl
cli
mov
or
js
sahf
sarl
fistl
xor
adc
lods
repnz
push
leave
fsubrl
fisttps
aas
sbb
in
cmp
jne
mov
dec
fwait
xor
push
dec
or
add
dec
jo
sub
dec
xchg
ss
sbb
mov
cpuid
or
xorb
sbbl
sbb
xchg
jg
adc
je,pn
jecxz
es
cmp
mov
pop
jmp
cmp
xlat
fucomi
shlb
dec
sbb
adc
imul
jae
mov
mov
mov
test
imull
cmc
jp
lcall
ljmp
xchg
cli
clc
lret
loope
jno
mov
lcall
rclb
data16
cmp
sahf
push
cmp
inc
add
gs
xchg
insl
orb
out
cmpsl
or
jae
sarb
ficomps
jecxz
add
stc
imul
clc
mov
xor
loop
dec
pop
pop
jp
adc
inc
inc
add
add
lods
inc
lahf
pop
in
push
cmp
fadd
dec
imulb
lret
xor
stos
sti
and
mov
pop
and
sub
aam
lods
fbstp
ret
sbb
cmp
and
jbe
and
ror
cli
dec
cli
sbb
pop
es
push
dec
imul
mov
pop
jge
jp
inc
push
jnp
sub
jecxz
mov
test
repnz
cltd
mov
fstpt
xor
pusha
inc
xor
fwait
loope
frstor
lret
jmp
and
cli
mov
and
stc
arpl
sbb
and
mov
push
les
repz
dec
cli
pop
mov
repnz
mov
push
jns
fcoms
lret
add
sbbl
repz
add
add
sub
test
stc
scas
fyl2x
lods
sahf
xchg
pusha
jne
add
sbb
repnz
pop
in
xor
and
stos
scas
imul
dec
call
addl
xlat
stos
lcall
mov
jbe
fidivs
fcomi
cmp
mov
cs
pop
test
inc
rcll
sar
inc
mov
out
jae
scas
fmul
and
cmpsb
push
inc
nop
pop
xchg
dec
mov
lods
sbb
pop
imull
xor
xor
clc
repnz
jb
pop
out
xor
lods
inc
in
arpl
pop
dec
push
rorb
sub
fsub
cmp
shrl
popa
pop
push
fldenv
pop
nop
mov
mov
rclb
test
daa
in
fldt
and
mov
fdivrs
js
xchg
fcmovnbe
mov
ljmp
aaa
neg
scas
movl
icebp
fmuls
sub
call
inc
push
in
into
pop
fs
xor
ffreep
mov
or
ja
aaa
adc
gs
dec
lcall
sub
cmp
jne
orb
aaa
ljmp
fucomi
addl
jg
pushf
sti
enter
movsl
jp
add
sbb
std
gs
pop
pop
imul
in
add
cmp
or
cmp
push
in
xchg
adc
aas
xchg
fwait
xor
repz
pop
ret
faddl
xor
jmp
sti
pop
xchg
or
jecxz
mov
cld
mov
sbb
adc
test
sub
insb
and
test
adc
sbb
out
push
sub
sbb
loopne,pt
cld
movsb
adc
fisubs
cli
das
movsl
call
adc
jno
cli
test
lock
out
int
dec
adc
mov
js
test
xchg
adc
cwtl
pop
jae
mov
lods
jbe
cwtl
xchg
dec
mov
sbb
out
int3
dec
sbb
arpl
xor
in
in
add
loop
out
jmp
fcoml
lahf
jge
popa
mov
adc
add
sub
lret
je
fisttpl
clc
cmpsb
lret
xor
iret
ja
ret
sbb
aas
loope
jnp
mov
js
frstor
cmp
repnz
loop
mov
mov
jae
pushf
pop
out
jp
adc
fisttpl
nop
ja
mov
mov
or
aas
xor
int
lods
sub
fildl
xor
mov
lret
cs
cmp
lret
orb
jl
out
push
jmp
inc
adc
dec
loopne
mov
jl
fmull
sub
test
cmp
push
pusha
sub
push
enter
cmp
adc
rcr
mov
int
popa
fdivl
jo
push
lock
xrelease
push
xchg
xor
aad
add
sbb
mov
out
dec
push
repz
mov
test
cmp
fisttpll
mov
ss
mov
daa
jnp
mov
sub
frstor
mov
sub
push
mov
fwait
das
roll
lods
mov
jns
loop
fs
sbb
mov
mov
sbb
cmp
and
mov
repnz
pushf
mov
fildl
inc
cmpsb
mov
mov
scas
ds
jne
pop
fadd
dec
test
push
in
mov
test
or
cmp
rcrb
cmpsl
fisttpll
pusha
xor
stos
mov
cmp
or
mov
xor
fistpl
ds
xchg
sub
roll
fwait
lret
mov
and
or
adc
outsl
shl
cmp
icebp
inc
sbb
cmpsb
cmp
pop
dec
inc
sub
inc
lds
scas
ror
adc
xchg
es
out
dec
mov
push
lods
into
mov
int3
mov
movsb
pop
xchg
push
clc
push
shl
cs
imul
test
lcall
aaa
fidivs
outsb
push
fst
push
arpl
push
cmpsb
or
pop
add
and
jmp
sbb
fdivrl
fwait
daa
out
insl
scas
out
add
fsubrs
jo
ffree
std
lretw
call
mov
mov
jne
fistl
add
stc
rcll
sti
loop
mov
xor
sahf
fmull
ds
cs
mov
ficomps
adc
sahf
test
pop
sbb
scas
data16
fwait
inc
mov
out
test
test
adc
enter
std
ss
pop
imul
nop
das
in
mov
faddl
pop
mov
xchg
testl
or
sbb
fcoms
je
out
nop
pop
sarl
jae
movsl
mov
add
mov
call
out
push
insl
jmp
mov
fistl
test
add
and
test
loopne
push
pusha
enterw
pop
ss
aad
sahf
lcall
in
xlat
or
mov
sub
or
aas
fildl
xlat
pop
pop
int3
dec
cmp
and
and
mov
fs
mov
icebp
cld
xor
arpl
xchg
loopne
andb
in
xchg
aaa
fistl
mov
mov
scas
out
bound
ds
xchg
inc
insb
mov
ljmp
jnp
faddp
jbe
inc
fcomp
lret
scas
pop
mov
xchg
jp
frstor
xchg
test
loop
fucomp
jmp
jbe
dec
push
je
gs
mov
push
sub
xor
in
stc
xchg
inc
mov
jg
cwtl
or
xor
lea
inc
sbbb
sub
sub
xchg
pushl
bound
mov
sub
in
loop
sbb
jae
sub
pop
and
scas
jp
lea
inc
imul
sub
pop
dec
jae
lods
ds
add
mov
aam
sub
push
dec
lret
arpl
std
frstor
sbb
dec
cs
dec
sahf
into
inc
jo
out
scas
xor
adc
and
test
and
sub
mov
adc
dec
pop
adc
sub
adc
xchg
xorl
xchg
add
push
inc
shll
js
out
and
inc
je,pn
inc
jmp
xchg
lcall
cmp
mov
mov
in
loopne
pop
lret
add
sub
insb
test
cmc
mov
and
cwtl
jmp
jb
js
mov
dec
das
adc
mov
xor
insb
rorl
int3
rcrb
sti
imul
nop
sbb
arpl
shl
push
leave
and
jnp
nop
rcll
arpl
in
es
aas
cmpsl
mov
and
mov
pop
lods
sub
sbb
xor
dec
repz
fisttpll
je
jbe
xchg
daa
inc
jg
ret
stos
int
dec
jne
jnp
int3
imull
int3
pop
xchg
dec
sbb
fldt
notb
sub
add
and
out
loope
pop
unpcklps
fs
jae
lods
cmp
loop
mov
adcb
jecxz
cmp
cltd
add
adc
movsb
mov
pusha
inc
pop
fsub
mov
fldcw
int3
mov
call
push
cmpsb
data16
sbb
stos
inc
test
adc
popf
xchg
add
mov
loope
lock
sbb
mov
cs
fistl
pop
rorl
lcall
test
xor
out
sub
pop
jl
fmul
imul
scas
movsl
push
fldt
stos
std
mov
or
xchg
fnstsw
mov
add
mov
out
dec
ja
and
sbb
mov
add
sbbb
sti
mov
xchg
outsl
pushf
sub
sbb
mov
jl
adc
xlat
jnp
mov
fldt
xchg
aas
insl
lcall
sub
xchg
jp
movsb
inc
inc
pop
push
or
int3
fldt
mov
sbb
stos
aaa
jle
test
xchg
mov
sarb
pop
push
and
inc
sbb
lcall
and
outsl
shlb
fwait
lcall
mov
xor
inc
loope
fisttpl
mov
mov
ficompl
cmp
leave
adcb
cld
xchg
in
pushf
stc
push
xchg
push
loope
mov
dec
or
push
and
fistl
jl
mov
mov
fsub
mov
jb
dec
mov
push
insl
pop
nop
arpl
sub
aam
jmp
mov
sbb
out
jo
adc
inc
sbb
sbb
or
mov
lahf
sub
fildl
or
cs
push
mov
adc
hlt
fcoml
sbb
push
insb
sbb
xchg
std
aas
lcall
les
in
jnp
jno
iret
stc
adc
mov
inc
or
cltd
sbb
xlat
lret
lea
fcmovnu
mov
mov
push
fnstcw
mov
jecxz
out
or
mov
stos
bound
out
cmp
outsl
sbb
out
adc
push
lret
inc
sub
jne
out
int
adc
dec
jge
sbb
dec
js
inc
add
fs
adc
jnp
ja
mov
mov
mov
mov
sbb
cmp
faddl
dec
js
arpl
mov
pop
aas
mov
xor
dec
js
mov
mov
push
aas
push
cmpsb
insb
fildl
cltd
xchg
pop
jae
bound
dec
out
clc
push
popa
pop
cmp
dec
fdiv
rorb
insl
mov
lods
xor
cmp
mov
int3
std
fistl
cmpl
cmp
adc
sub
lods
inc
sub
xorl
loopne
mov
add
pop
and
cmp
and
sbb
ds
dec
out
fimuls
test
je
stos
fwait
cli
popa
jl
inc
mov
daa
push
scas
mov
push
hlt
fildl
ret
test
mov
out
push
xor
xchg
test
aad
push
fwait
in
cmp
mov
cmp
sub
lods
movsl
gs
jo
xchg
outsl
fldt
cmp
rorl
inc
jg
xchg
pusha
fildl
sub
add
xchg
fsubl
jl
mov
jl
fcmovnbe
lret
inc
test
data16
cmp
out
sti
pop
das
fldt
inc
xor
cli
and
lret
fnsave
movsl
dec
daa
sahf
jae
dec
sbb
inc
xchg
test
inc
mov
adc
jns
push
jnp
pop
push
fldl
sbb
jne
inc
fs
les
dec
push
inc
out
xchg
pop
jmp
mov
mov
jnp
clc
mov
cmc
fwait
mov
fldt
add
add
rorl
dec
out
xlat
lcall
xchg
push
fsubl
cmpsl
mov
adc
jb
sbb
andl
outsb
add
xlat
aaa
loopne
sub
insl
xchg
stos
jl
pop
cmp
test
inc
cmp
cmc
jbe
adc
in
cmpsb
xor
push
jns
mov
sti
ja
inc
stc
fldt
mov
jne
iret
loopne
mov
cmp
pushf
cwtl
jge
xchg
scas
ljmp
inc
inc
cld
xlat
inc
insb
inc
pushf
sub
pop
daa
add
sbb
push
pop
adc
rcll
pop
push
in
mov
fstpl
dec
push
lcall
mov
lcall
add
xlat
outsl
lahf
lods
cmp
dec
jb
sbb
icebp
jns
adc
shlb
xor
cltd
sub
lahf
test
sbb
ja
inc
pusha
fcmovne
mov
pop
cli
cltd
add
mov
imul
and
mov
jbe
mov
pop
int
dec
pop
cld
mov
xchg
lods
loop
or
test
dec
mov
xor
frstor
insw
pop
fcomi
pop
sub
add
inc
dec
fcompl
popa
mov
inc
cmp
ja
loop
into
aaa
adc
cmp
pusha
fdivr
lea
dec
cmp
add
push
out
shl
pop
sbbb
cmp
and
cmp
out
push
pop
mov
or
out
sbb
movsb
int
sbb
dec
inc
in
cmp
pop
add
scas
loop
xchg
xchg
cmc
das
push
mov
push
loope
pop
mov
imul
fldt
in
test
adcb
int
out
sbb
lret
jne
sub
fcoml
and
xchg
lea
fs
push
mov
in
sub
ds
add
push
push
mov
push
sbb
sbb
nop
mov
dec
xor
pop
mov
daa
loopne
jne,pn
fucomp
stos
lret
jns
or
fcompl
js
sbb
mov
mov
mov
sarb
and
lret
out
loopne
xor
in
jae
gs
jo
inc
cmp
stos
mov
dec
fcmovne
lahf
shrb
loopne
sti
mov
push
shl
jo
jno
inc
pop
cmc
xchg
cmpsb
dec
sbb
jecxz
loope
negb
mov
incl
lret
fcomps
xchg
push
xor
mov
fistpl
movl
mov
test
inc
ja
jbe
xchg
pop
push
loope
aam
mov
pop
mov
fisttpl
and
mov
sbbb
pushf
fldt
imul
je
mov
iret
test
and
inc
pop
dec
jns
pop
daa
popa
sub
xchg
outsb
jne
mov
mov
sbb
lcall
and
mov
push
insb
sbb
and
rorl
mov
ja
push
sti
cmp
lods
out
pop
sub
fisttps
dec
inc
aad
mov
xor
fstl
sbb
insl
addl
aam
cmp
ss
mov
fwait
and
fs
fildl
jno
mov
add
cmp
out
test
xchg
sub
outsb
adc
ret
dec
outsl
xor
pop
jae
cmp
xlat
lea
inc
push
out
and
push
data16
dec
int3
mov
push
xor
mov
push
fcmovnbe
fsubr
gs
add
sub
popf
es
pop
sbb
test
out
or
xchg
add
es
jb
sub
ret
mov
cmp
jl
xor
add
lds
xor
mov
mov
lock
stc
shlb
sti
mov
ds
add
inc
fildl
xor
arpl
pop
mov
adc
lret
mov
or
fsub
orl
xchg
roll
mov
push
movl
add
loop
adc
push
aad
fs
icebp
pop
adc
sub
inc
xchg
add
mov
push
fwait
arpl
loopne
imul
mov
sub
das
pop
jg
fcoml
gs
stos
mov
jmp
neg
es
in
cmpb
ds
scas
cli
fcmovnu
leave
outsb
hlt
into
or
loope
sbb
les
jb
xchg
aad
push
pop
sti
popa
scas
out
fsin
mov
sbb
xchg
loopne
adc
loop
xor
in
aas
cmpsl
pop
lret
push
aaa
cmpsb
fstpl
mov
xlat
sbb
xchg
dec
fistl
in
jle
jbe
fisttpl
fdivs
cs
push
adc
adc
popa
dec
loope
jae
popf
push
cmpl
mov
js
cmp
adc
fisttpl
sbbb
inc
fistl
sbb
sbb
pop
addr16
ja
jl
loopne
fldt
dec
sarb
or
rcrl
stos
popa
aaa
xor
shl
jecxz
mov
mov
mov
mov
jae
fcmovne
loope
add
ret
mov
add
loop
mov
sbb
mov
js
fldt
loopne
in
lods
or
mov
xor
pop
fcmovne
pop
arpl
push
adcl
insl
int3
fisubs
pop
inc
icebp
mov
adc
and
mov
mov
cs
mov
pop
pop
mov
stos
mov
jno
xchg
lds
adc
and
mov
xor
test
int
pop
pop
pop
cld
lods
out
cmp
iret
jg
fdivrl
xchg
xchg
movb
ret
and
inc
push
scas
fildl
pop
add
jnp
fbld
sub
testb
repz
jae
out
ret
mov
dec
ffree
mov
or
push
jo
cbtw
jl
jmp
test
sbb
out
xchg
sarl
jp
mov
out
cwtl
jno
push
xchg
cmp
jmp
adcl
pop
cmp
pop
add
sub
lret
xchg
lahf
out
mov
fmuls
jg
call
daa
mov
sarb
xchg
xchg
or
cmpb
lahf
jnp
mov
push
movsb
loop
mov
fldcw
test
stc
mov
or
and
xchg
lea
enter
iret
pop
adc
lds
mov
adc
xor
fistps
jns
fstpt
adc
sarb
repz
out
fistl
shlb
fcmovnb
xchg
gs
arpl
sarl
cmp
scas
fabs
leave
repz
ret
loop
lods
jl
sar
mov
adcl
cwtl
inc
icebp
jno
nop
lods
std
jnp
mov
daa
fcoml
sbb
test
mov
loope
lea
std
push
orb
or
xchg
lds
rcr
lock
add
outsb
stos
push
or
mov
and
popf
popa
adc
lea
or
xchg
push
out
notb
lock
mov
inc
inc
sbb
subl
mov
mov
in
and
inc
push
call
daa
pop
in
dec
jno
testl
in
mov
push
sub
fbld
cmp
sub
and
fdivl
mov
sti
and
mov
pop
out
in
test
xchg
bt
les
test
aaa
dec
fcmovnbe
rcrb
inc
mov
fistpl
test
mov
jp
mov
mov
imul
test
fldt
dec
mov
test
mov
pop
adc
out
sbb
ror
fldt
sub
lcall
leave
xchg
negl
mov
add
xchg
mov
shl
imul
in
ss
repnz
aad
push
jp
loop
cmp
push
adc
and
outsl
js
jb
push
mov
out
xor
imul
fdivs
ret
mov
stc
mov
sahf
sub
cmpsl
sbb
xor
imul
sub
mov
pop
push
inc
xchg
lret
ja
mov
fstl
lahf
xor
inc
inc
jnp
sbb
mov
ficoms
outsl
fstl
das
jo
inc
cld
call
lcall
leave
fisttpl
sbb
stos
loope
sub
mov
push
push
bnd
loop
imul
jno
repz
fsubl
enter
jae
sti
adc
lcall
mov
je
dec
cli
femms
pusha
jl
lahf
in
mov
cld
cmpsb
in
xor
sahf
test
fistpll
pop
mul
adc
cmp
fcmovnu
and
sbb
imul
das
sbb
adc
cli
rclb
lcall
cli
push
pop
mov
jb
xor
mov
xchg
or
xchg
cmpsb
dec
test
xor
insl
sbb
xor
push
cmp
add
fildl
mov
xor
push
jle
rorl
sti
sbb
popa
fisttpll
ret
fdiv
movsl
or
sti
stos
daa
cmp
stc
push
jns
bound
cmp
mov
inc
out
fcomi
ja
ljmp
andb
push
cwtl
aaa
fwait
shl
lods
out
cli
les
sub
sbb
std
sbb
loopne
jg
fldt
movsb
mov
jne
fcmovnbe
xchg
xchg
dec
pop
inc
cs
adc
dec
lcall
dec
push
sbb
jmp
xor
mov
xor
and
scas
lret
fwait
pcmpeqb
mov
or
gs
jecxz
mov
data16
imul
xchg
xchg
jno
adc
shrl
mov
pusha
ret
aad
outsl
inc
sbb
arpl
sub
pushf
inc
xchg
inc
fistl
std
cli
pop
add
dec
lock
iret
xor
push
sbb
pop
sar
inc
jge
cs
xorl
jae
cltd
xlat
loop
and
dec
mov
imul
imul
inc
xchg
jge
imul
les
xchg
sbbl
mov
or
sbb
ljmp
inc
jne
aad
pushf
scas
lods
sbb
int
sub
test
sti
or
pop
call
sbb
xchg
xor
or
inc
out
das
push
fcomi
idiv
push
iret
mov
sbb
push
mov
sub
lds
push
outsl
sbb
mov
into
cli
jp
out
pop
leave
mov
rcrl
jge
pop
aas
insl
sbb
popf
mov
lcall
jns
jecxz
mov
icebp
xchg
fwait
sahf
lods
shlb
cli
xorl
add
cld
icebp
push
cmpsb
xor
lock
fldt
xlat
mov
pop
xor
pop
test
dec
jae
fildl
insl
lahf
outsl
adc
adc
jb
mov
mov
sbb
int3
fisttpl
leave
aaa
cmpsl
add
mov
add
push
and
dec
jae
test
xor
add
pop
xor
mov
xor
int3
pushf
insl
xchg
fildl
pop
in
xchg
push
pop
or
fldenv
out
dec
adc
pop
jb
cmp
js
scas
sarb
shrb
add
mov
mov
cltd
sub
jge
and
inc
sbb
icebp
imul
out
or
sub
call
xlat
and
les
push
mov
sbb
stc
dec
pop
popa
xchg
call
jno
or
jno
sbb
out
lcall
inc
or
inc
out
jns
mov
dec
pop
loop
cmp
sbbl
dec
fcmovnbe
adc
add
mov
mov
push
sti
pop
cmpsb
out
sbb
cmc
sbb
addb
sbb
insl
adc
sbb
lret
xor
add
rcrl
inc
pop
out
cmp
loope
sbb
mov
sbb
jo
sti
call
inc
mov
adc
and
or
cmp
repz
dec
roll
arpl
pop
cmp
std
add
mov
mov
mov
mov
ljmp
sbb
fbld
or
psubusb
cmp
lret
dec
data16
add
pop
jge
adc
push
lods
lret
clc
xor
out
enter
out
inc
decb
sub
xor
jmp
sbb
ret
in
scas
out
mov
insb
mov
adc
xor
addb
arpl
test
push
repz
lods
push
ret
dec
and
subb
out
adcl
test
mov
outsb
mov
popa
shll
mov
test
push
dec
lahf
cmpsb
fwait
add
inc
ds
lret
imul
or
arpl
orl
test
and
sbb
aas
push
es
lods
in
adc
dec
lcall
aaa
pop
fsubr
mov
mov
adc
jb
push
out
xchg
test
add
xchg
xchg
push
xchg
sub
xchg
fildl
out
lret
rcrb
out
add
out
sub
xor
dec
push
fstp
cwtl
xchg
adc
push
pop
gs
fsubrs
int
xchg
gs
outsl
mov
xchg
fs
pop
arpl
ja
test
or
sbb
sbb
pop
add
hlt
fildl
or
sti
nop
cs
pop
or
ljmp
repnz
lret
sbb
cmpsl
fstps
scas
lret
and
ficoms
ss
std
cmpl
jo
mov
mov
push
out
inc
jg
repz
out
mov
cld
or
xchg
call
pop
or
mov
mov
pop
add
ljmp
clc
insl
gs
xchg
fcmovnbe
imul
movsb
add
outsb
fcmovnbe
xorb
dec
push
add
jb
ja
fstpt
lods
insl
sahf
add
scas
sarl
negl
pop
xlat
mov
and
add
out
push
mov
dec
in
sbb
das
in
sub
fmull
lret
jge
jnp
cmp
dec
pop
pop
ljmp
jns
lcall
add
popa
sub
fwait
or
xor
ljmp
pop
xlat
push
rcrb
sbb
enter
lods
loopne
faddl
cld
adc
movsb
push
fistpl
cwtl
lret
or
pop
test
pop
fcoms
pushf
mov
into
and
mov
enter
fcmovnbe
and
bound
dec
out
jnp
pop
jb
jns
inc
ljmpw
or
mov
out
inc
fistl
push
cmp
add
xor
adc
fs
lret
jns
fcmovnb
inc
cli
aad
jmp
sub
jg
popf
add
adc
leave
lds
nop
push
add
cwtl
dec
adc
aas
idivl
mov
cmp
nop
jne
sbb
call
push
aad
repnz
mov
rcr
push
xchg
sbb
pop
pop
rorl
insl
imul
sub
xor
mov
or
sbb
mov
push
pusha
xchg
jnp
jne
fldl
and
and
sub
inc
popf
arpl
jnp
and
mov
or
adc
mov
inc
in
mov
sbb
xor
mov
lods
sbb
and
mov
xor
mov
fstpt
fisubs
fdivrl
or
inc
ja
and
fistl
lods
dec
or
push
setge
std
xor
stos
xchg
jnp
mov
xor
inc
and
test
fwait
ret
add
fisttps
add
cmp
fstpt
ror
loop
jae
adc
pop
xorb
inc
fldt
les
in
movsl
mov
add
adc
pop
push
mov
cmp
mov
fildl
adc
repnz
mov
leave
mov
out
das
dec
pop
call
into
and
movsb
and
lock
in
cld
xchg
xchg
dec
pop
fsubrl
sar
scas
loope
mov
pop
push
mov
mov
imul
gs
mov
push
call
or
pop
jae
ja
or
cmp
in
jg
dec
out
in
pop
mov
leave
push
sbb
mov
xchg
fdivrl
add
adc
in
fistl
jno
sub
imull
sub
pop
fistl
push
sbb
pop
fdivrp
xor
call
je
pushf
cmp
mov
xchg
jle
jne
mov
out
fisttpl
fdivrs
call
xchg
push
movsl
fistpl
jle
popf
dec
cli
jmp
repz
and
fcmovnu
sbb
mov
outsb
inc
push
fildl
aam
loope
iret
pusha
repnz
xchg
sti
pop
add
rcrb
xchg
dec
sbb
mov
xchg
les
fildl
pop
test
xchg
sbb
xor
out
je
cmp
xchg
lahf
adc
add
jbe
push
xchg
push
pop
mov
and
loop
push
mov
pop
or
fistpl
xchg
lock
pop
stos
arpl
insb
or
pusha
outsb
clc
arpl
test
jnp
insl
ret
bnd
repz
mov
les
lea
ficoms
loope
daa
sbb
sbb
scas
mov
rcr
sbb
sbb
shr
jge
or
pop
inc
mov
sub
pushf
out
or
or
or
jno
mov
sub
cmp
fcmovne
xor
scas
adc
and
cmp
inc
xor
mov
add
in
shll
pop
pop
orl
in
loopne
push
ja
pop
mov
xlat
xchg
repz
imul
leave
out
mov
popf
mov
hlt
adc
aad
in
xchg
inc
adc
fdivs
mov
add
and
and
test
push
subps
fildl
sbb
xchg
inc
sbb
nop
adc
mov
and
loopne
sbb
insb
sbb
jmp
adc
fstpt
leave
sahf
ja
mov
xchg
mov
and
lock
push
pusha
lcall
sbb
pop
push
push
in
add
nop
and
xor
adc
adc
fstpt
call
hlt
out
cmp
push
filds
lcall
dec
inc
jae
mov
imul
sub
xor
and
pusha
pop
rclb
jmp
jne
push
sub
loop
sub
mov
hlt
icebp
pushf
cmp
ret
sahf
pop
loop
dec
sbb
jbe
fwait
dec
rol
jne
lods
repz
xchg
sbb
jbe,pn
xor
fistl
or
test
push
jle
fisubs
mov
inc
pop
inc
sub
xor
mov
cli
sbb
popa
shlb
fwait
jb
dec
cmp
mov
loopne
fstps
outsb
push
mov
lea
les
fwait
into
rorb
rcll
fcmove
dec
xor
cmp
mov
fmuls
test
fstpt
aaa
mov
js
sbb
cmp
loop
mov
add
clc
pop
cld
iret
fmuls
sbb
fnsetpm(287
arpl
and
mov
fldt
mov
sbbl
add
pop
mov
aaa
out
sbb
add
inc
xchg
inc
and
lret
stos
insl
fcmovne
cld
not
loope
and
nop
pusha
or
and
lea
or
gs
ret
mov
push
mov
iret
mov
pusha
and
ficoml
pop
rcr
xchg
je
xor
out
push
mov
cmp
dec
stos
fdivrl
rcl
push
scas
repz
xor
xor
lea
mov
sub
aas
inc
das
fistpl
adc
pop
insb
cmc
sub
sbb
nop
in
lret
lea
loop
fstpt
fs
mov
insl
jns
lret
fwait
imul
imul
jmp
xor
fcmovnu
push
xor
out
mov
std
adc
aas
jno
mov
inc
jp
hlt
or
dec
jb
sbb
xor
push
sbbb
fs
sbb
jae
lahf
add
lcall
stc
mov
test
insb
sbb
and
pop
fldt
mov
adc
jmp
into
xor
stos
push
mov
cli
push
cltd
mov
int
push
out
xchg
or
pop
lcall
ljmp
mov
pop
aaa
cmp
lods
sbb
rcl
jnp
roll
inc
call
scas
pop
adc
pop
push
out
aas
fcmovne
pop
or
jno
mov
xchg
call
std
push
pop
fidivrs
repz
pop
xchg
cmp
jle
fisttpl
filds
inc
xor
push
fstpt
sahf
mov
adc
pop
movsb
push
outsl
pop
ja
fsub
xor
fwait
xorb
fistl
cmp
sbb
and
lea
xchg
pop
cmp
in
call
cmp
jle
fisttpl
pop
test
fistpl
dec
mov
andb
cs
stc
in
inc
pop
sbb
cmp
dec
negl
les
fistpl
cmp
fcmovne
sar
lods
jbe
loope
out
sub
adc
mov
ss
cmp
icebp
xchg
fstl
and
stos
aad
aas
add
pusha
adc
in
xchg
fstpt
and
clc
hlt
mov
fwait
push
add
imul
mov
lret
xchg
inc
rcl
fwait
or
xchg
and
int3
fildl
push
add
addb
roll
add
loop
test
out
mov
aaa
add
ja
or
mov
or
add
mov
ja
je
push
ds
jl
imul
test
cmp
insb
arpl
adcb
stos
js
out
nop
adc
dec
xlat
and
jmp
iret
call
insl
call
mov
mov
adc
mov
cmp
stc
lret
clc
xorb
and
fwait
mov
mov
mov
sub
addb
fisubs
pop
and
or
jmp
sbb
ds
shll
sub
fldt
adc
or
push
inc
clc
cmp
push
fistpl
dec
add
jle
les
push
mov
test
inc
insb
mov
jne
jg
jge
adc
xchg
inc
leave
mov
cmp
mov
cmp
push
jno
sub
test
movsb
test
lcall
fwait
lcall
xor
cltd
int3
loop
popf
sub
orl
fmull
sbb
or
mov
popf
cwtl
lods
push
pop
xchg
mov
jbe
mov
into
fildl
sub
or
ret
cmp
std
fdivl
xor
ret
xchg
fisttpl
mov
movsb
fstpt
in
test
mov
mov
fstpt
and
push
jnp
pop
dec
fucomi
cltd
loope
dec
dec
sub
call
xor
lret
out
out
or
nop
sbb
xchg
pop
xchg
mov
xlat
push
dec
popa
mov
and
fisttpl
popf
in
mov
rorb
movsb
cltd
xor
loope
repz
call
inc
repz
stos
xchg
pusha
mov
add
fists
fistl
lods
mov
xchg
ljmp
cwtl
push
mov
fistl
mov
rcrb
aad
loopne
dec
je
push
cmp
pop
in
sbb
lret
ljmp
gs
adc
fistpl
mov
push
adcl
lock
push
mov
sub
inc
xchg
gs
add
dec
testb
scas
add
pop
es
inc
sub
fldt
add
xchg
aas
and
loop
push
pop
leave
add
dec
mov
in
pop
xchg
push
iret
aaa
add
fmull
nop
dec
mov
inc
dec
jp
pop
outsl
pushf
scas
repnz
negb
out
cmp
add
pop
insb
daa
fldt
lock
mov
xchg
test
mov
add
push
icebp
mov
ret
sbb
js
lret
mov
push
jo
cli
fisttps
sub
mulw
push
mov
jb
imulb
jle
mov
add
incb
xor
repz
rcrb
aas
testb
arpl
into
fwait
cmpl
stos
dec
and
sbb
test
ja
adc
lret
cs
jecxz
push
xlat
mov
not
stc
cli
test
dec
test
in
or
inc
fcmovu
add
faddl
mov
mov
mov
jne
lea
fcmovnu
fdivrs
xor
out
fldt
mov
cmpsb
push
xchg
icebp
out
mov
lahf
aas
cmpsl
push
mov
pop
push
shl
insb
in
in
cmc
cld
mov
jns
push
fnstcw
mov
fistpl
sub
nop
fsubl
add
movsl
lahf
dec
cli
mov
mov
in
mov
insb
inc
lcall
xorb
pop
clc
mov
out
jmp
cmp
push
sbb
faddl
lret
ja
insb
jecxz
mov
out
lods
popa
dec
stc
mull
push
loope
adc
jp
add
push
push
sbb
pop
pop
mov
and
pop
sbb
aam
xor
dec
fstpt
sbb
sbb
mov
push
xor
mov
bound
addr16
in
pusha
leave
sti
cmpsl
lods
push
test
jl
jb
xor
neg
mov
add
popf
mov
add
outsb
aaa
fwait
push
cmp
shrl
int
pop
pop
sahf
mov
jge
fistpl
insb
mov
cli
push
cmp
out
jae
sahf
test
cltd
sub
popa
loop
repnz
sub
pop
jecxz
sub
mov
add
lock
add
fwait
mov
mov
xor
ljmp
js
add
ret
sub
mov
mov
cmpsl
dec
inc
mov
pop
orl
imul
or
xchg
cmp
fdivrs
clc
cli
icebp
lods
sbb
insl
sub
fldt
pop
inc
xor
call
lcall
out
sbb
insb
fildl
call
movsl
popf
test
pop
jae
fisttpl
xlat
cmpsb
aam
jmp
add
mov
jne
aaa
cmp
xchg
movsb
cmp
mov
xchg
inc
add
or
jns
sub
jmp
cmc
sbb
jmp
add
cli
push
add
xchg
sbb
notl
or
lret
aas
lock
dec
inc
push
push
sti
fcmovne
and
loop
cmc
add
pop
pop
decl
or
mov
xchg
shll
inc
mov
pop
loopne
jb
add
negb
inc
fnsave
sbb
pop
mov
cmp
fildl
cli
shlb
inc
movb
movl
mov
outsb
pop
mov
inc
repnz
jmp
dec
lcall
loope
movsb
dec
fstpt
pop
insb
and
ljmp
pop
jp
sar
lcall
popa
pusha
neg
xchg
in
out
fdiv
mov
sarl
fldt
mov
jp
into
negb
aas
cmp
cmc
ficoms
fstpt
cs
mov
and
adc
mov
ret
sarb
jmp
shlb
mov
xlat
inc
sbb
aas
cltd
mov
cmp
lret
pop
lods
xor
fistl
addl
in
repz
jnp
sbb
clc
leave
inc
repnz
lds
fistpl
cmp
push
mov
pop
inc
fistpl
push
icebp
fsubp
mov
loopne
push
fucomi
mov
jno
test
cmpsb
shr
in
inc
mov
pop
cs
jno
dec
call
jl
das
mov
sbb
push
cli
inc
push
jo
adc
cltd
jbe
lock
lea
inc
inc
fcompl
in
and
cmpsl
jne
insl
cmc
fwait
addr16
lret
cmpsb
in
shll
jl
and
daa
repnz
pop
mov
push
das
rcrl
in
jnp
out
inc
mov
adc
enter
inc
pop
iret
shr
mov
rolb
and
xchg
in
lods
mov
pop
inc
sub
xchg
add
insl
cmp
push
sub
mov
cltd
xchg
fistl
sahf
xchg
cmp
pop
push
mov
sub
sahf
cmp
jnp
loop
in
and
fucomi
mov
leave
arpl
push
fisubs
cmp
stos
fistpl
jbe
insl
movsl
jns
fcomi
xchg
push
fs
mov
mov
sbb
adc
pop
jns
lahf
mov
mov
mov
lds
mov
fstpt
cwtl
mov
pop
and
popa
mov
xor
mov
fcmovnb
pop
pop
adc
push
not
sbb
cli
fisttpl
add
jbe
or
rcrb
dec
aaa
fucomi
adc
pop
imul
xchg
je
fcmovnb
stos
add
cmp
mov
mov
pusha
fmul
mov
push
test
dec
cmp
rcll
pop
pusha
js
fisttpl
popa
mov
pop
pop
cwtl
out
mov
sti
dec
cli
loope
insb
push
sarb
cmp
iret
or
cltd
enter
aam
sbb
shll
fdivl
shr
xchg
and
jo
adc
js
fstpt
cmp
pop
add
loop
sahf
jns
jp
imul
xchg
loop
or
dec
fistl
cwtl
and
xor
lret
fildl
dec
je
ret
pop
pop
movsl
jne
nop
pop
lret
pop
dec
sub
mov
xor
dec
inc
lock
sbb
out
xchg
pop
push
rcl
push
cmp
adc
nop
mov
push
call
in
pop
dec
out
mov
je
insl
hlt
fistl
mov
and
jb
stos
bound
test
or
inc
test
xor
nop
fistpl
push
xor
mov
mov
sbb
pusha
ret
iret
shr
fdivr
or
jae
adc
mov
pusha
xchg
sbb
movsb
inc
add
mov
pop
jns
fstpt
xor
pop
movsb
stos
pushl
mov
pop
out
mov
outsb
fcmovne
imul
push
sahf
xor
out
jmp
shrl
mov
mov
stc
ret
jge
fwait
jnp
fucomi
enter
insb
jp
iret
fcomip
sbb
fildl
adc
mov
cs
jno
fucomi
mov
lretw
xchg
fsubl
imul
mov
push
fcomi
repz
pop
xchg
mov
jg
mov
jno
negl
sbb
adc
imul
push
int3
jl
loop
rorl
outsb
adc
bound
lcall
fcomps
fistpl
iret
fisttpl
xchg
data16
or
xchg
pop
fldt
popa
test
sbb
xchg
aas
push
jle
mov
rclb
cmp
pop
jb
jne
xor
lock
push
push
stc
mov
ret
fsubl
and
mov
add
sarb
hlt
pop
xchg
dec
sti
rorl
jbe
leave
inc
cmp
cli
cmc
xorb
test
mov
aaa
sahf
cld
jle
aas
dec
fldt
stc
loopne
negl
jmp
jnp
in
fistpl
mov
mov
xchg
mov
fs
iret
sub
cmc
dec
push
push
fucomi
and
inc
aaa
fistl
insb
loop
push
jge
ljmp
outsb
subb
mov
or
iret
jb
sub
fucom
push
rcll
xchg
dec
repnz
fcomi
xor
in
and
jns
fucomi
js
adc
fidivs
pop
cmc
scas
pusha
cmpsb
add
lcall
loopne
mov
into
test
mov
nop
mov
repnz
out
in
cmp
add
cmp
jmp
mov
dec
aam
incl
gs
inc
push
js
fdivrl
ret
fnstenv
inc
jb
pop
jg
daa
sbb
call
xchg
push
pop
lock
arpl
out
or
repnz
and
cld
and
clc
fimull
or
pushf
mov
xor
mov
test
clc
mov
mov
mov
add
mov
repnz
or
lcall
orl
jne
into
icebp
jne
inc
mov
mov
mov
div
pushf
mov
inc
xor
pop
inc
adc
aam
lods
mov
sbb
int
insb
add
mov
test
jl
push
push
push
add
cmpsl
cmp
cwtl
and
js
sub
cmpl
pop
sbb
cmp
into
into
fucomi
sub
fistpll
push
mov
cwtl
fildl
sbb
cmpl
std
sti
sub
fdivrs
rolb
fwait
loop
into
js
popa
ficomps
out
add
xor
and
jecxz
jnp
mov
repz
or
and
adc
aaa
icebp
int
sbb
pop
sysret
cmp
dec
nop
insb
shlb
repnz
sbb
adc
jne
int
xchg
lock
hlt
adc
or
push
mov
imul
pusha
fwait
scas
jbe
stos
dec
aaa
pop
inc
mov
fsubrs
lods
mov
imul
sti
push
into
fisttpl
mov
mov
fstpl
cltd
xor
or
xchg
or
stos
fstpt
xchg
cmc
sti
sahf
call
lock
sbb
stos
xor
pop
fldt
in
xor
push
pop
or
jb
stc
imul
mov
insb
test
jmp
stos
jl
shlb
dec
push
mov
fildll
nop
call
pop
in
ljmp
inc
in
push
fcmovnbe
lea
pushf
movsl
sub
xlat
fildl
jl
pop
mov
sbb
inc
and
pop
pusha
sbb
cmp
xor
inc
roll
xchg
or
mov
add
pop
jo
adc
pop
sahf
lea
test
in
fstpl
jmp
xchg
jbe
test
popf
sbb
sub
cmp
push
adc
cmp
pusha
lock
shr
cltd
sbb
dec
adc
jle
leave
lods
mov
pop
sub
js
aas
and
sbb
rorb
mov
insb
xchg
push
rcr
cmp
int3
mov
xchg
dec
mov
loopne
mov
inc
or
jnp
shrb
xor
out
push
xchg
jno
mov
inc
stos
push
repnz
popa
sub
movsb
or
xchg
cmc
jae
sub
mov
adc
fistl
lock
loop
rorb
stos
jo
sbbb
leave
ficomps
pop
addl
das
cli
cmc
sbb
pop
mov
mov
mov
outsl
mov
cmp
pop
into
stos
xor
xor
jbe
out
movsl
das
fistl
int
shl
mov
imull
roll
gs
mov
mov
sbb
or
jns
scas
inc
roll
push
or
repz
les
cli
mov
xor
imul
pop
aam
ja
pop
jb
or
daa
fdivl
push
lea
dec
cmpsb
movsl
sarl
fistl
outsb
fistpl
rclb
sub
iret
pop
or
or
inc
icebp
jae
bt
or
nop
adc
sub
iret
cmpb
mov
roll
ret
dec
xlat
push
pop
fsubrp
inc
in
pop
mov
xor
dec
mov
fsts
call
or
xchg
sbb
xchg
lahf
cmp
pop
inc
popf
and
mov
add
mov
std
mov
fcmovnu
adc
jp
push
cmpsb
daa
mov
mov
call
pusha
in
rcr
xchg
loope
cld
jo
gs
repz
and
jns
stos
push
dec
ljmp
xchg
adc
sub
mov
fwait
mov
out
dec
jmp
in
aas
lods
rcrb
les
or
add
mov
out
mov
iret
xor
mov
sub
push
push
daa
jns
fistl
movsb
jne
cs
scas
test
test
je
mov
sub
xchg
cld
sub
fcoml
mov
clc
add
sub
sub
lods
mov
adc
push
mov
andb
pop
mov
repnz
fistl
xchg
lret
jp
aas
hlt
sti
lret
cmp
pop
fstpt
aaa
xchg
cmp
fwait
sub
test
pop
insl
fmuls
fistpl
ljmp
dec
xor
jno
pop
inc
mov
aam
mov
ret
test
xchg
dec
fcomi
pop
mov
dec
rcrl
push
sub
jnp
stos
call
les
xchg
pushf
xor
mov
insl
scas
aad
cld
cli
stos
fcmovne
push
clc
notl
push
xor
cmc
je
fdivrl
jg
sbb
movsb
fwait
lcall
mov
aas
sub
add
inc
popa
std
jns
repnz
fsubrl
jecxz
faddl
xchg
jl
nop
jae
add
gs
jg
inc
aaa
scas
insl
dec
in
jo
xchg
dec
int3
fisttpll
jge
pushf
fwait
cwtl
ss
mov
cli
enter
jne
sub
cltd
add
xor
fsubl
sbb
mov
fstpt
adc
push
outsl
sbb
icebp
aad
mov
xchg
and
jmp
inc
pop
cmc
fstl
push
push
add
push
outsb
mov
adc
je
jp
xor
mov
scas
popa
add
mov
adc
lock
cmp
add
movsl
loope
fldt
shl
pop
add
pop
addr16
fisttpl
shl
fldt
aam
rcrl
fisttpll
dec
inc
movsl
cmp
mov
ficoms
sbb
imul
sub
fildl
add
clc
popa
loopne
fisubrs
push
gs
xchg
repnz
cmp
outsb
lods
loopne
sbb
mov
divb
xor
sub
inc
cli
or
dec
lcall
and
adc
mov
inc
push
or
in
jle
dec
sub
loop
loope
out
mov
adc
jmp
sbb
xchg
pop
notb
dec
andb
jns
hlt
sub
sbb
out
inc
lcall
jb
icebp
push
cmp
push
sub
lds
jmp
mov
mov
jecxz
and
push
cwtl
icebp
mov
xchg
and
pop
cmp
mov
ja
mov
mov
mov
lods
mov
divb
xchg
dec
mov
inc
xchg
cmp
je
add
lahf
icebp
jecxz
inc
test
cltd
mov
mov
jne
cmpsb
in
lcall
xor
loope
stos
mov
dec
repnz
jnp
repz
xor
fimull
adc
bndldx
stos
fiadds
mov
push
adc
out
idivb
xor
fwait
jnp
clc
stos
fbld
push
xchg
ds
fstpt
push
xor
dec
rorl
pushf
mov
testb
fbstp
popa
cmp
mov
push
pop
inc
aad
inc
inc
dec
flds
loope
jbe
lods
loop
jb
inc
cs
cmp
sbb
stos
pop
clc
dec
mov
lds
popa
xchg
std
xchg
mov
xchg
in
pusha
add
repz
sub
repz
arpl
fldt
aad
mov
in
adc
cmpsb
in
xor
aad
sti
fldpi
inc
mov
out
jp
mov
jnp
mov
stos
in
and
push
test
push
xchg
aam
hlt
jb
mov
push
lret
cmpsl
pop
and
mov
xor
int
xchg
lcall
pop
popf
in
insl
pop
pop
test
mov
pop
jle
xor
pop
or
mov
pop
ret
loop
lret
xor
pop
cwtl
push
xchg
fdivrl
adcl
pop
xor
and
adc
iret
pop
xchg
push
lods
mov
adc
scas
cmp
jno
fistpl
mov
xchg
and
gs
add
lret
repnz
adcl
cwtl
aad
mov
fstpt
stos
dec
mov
inc
int
cwtl
fcmovnb
pop
into
cmp
sub
cltd
cmp
mov
scas
xlat
in
sbb
loop
and
fdivl
fwait
lds
adc
and
popa
movswl
sub
jns
data16
fwait
aaa
das
pop
popa
mov
mov
adc
aam
fistpl
fs
loopne
sahf
lcall
fdiv
sub
scas
clc
lret
lock
jo
popf
xor
add
in
cmp
fcmovnu
int3
movsl
add
enter
push
and
hlt
test
add
iret
jnp
add
xchg
repnz
xchg
lea
in
fistl
nop
fnstsw
loop
mov
inc
mov
rclb
mov
test
inc
add
rol
out
fidivs
sub
mov
lods
fcmovnb
mov
push
pusha
int
fwait
clc
cmp
daa
sbb
mov
and
sub
mov
mov
fistpl
push
cmc
lds
sar
dec
stos
insl
mov
dec
push
sbb
jge
mov
sub
cltd
jp
fmull
int
jnp
movsl
in
out
negl
sub
fistpl
mov
mov
out
test
dec
jle
cmp
loop
xchg
mov
ret
call
add
sbb
repz
test
inc
aad
mov
cmpsl
jmp
mov
call
add
mov
insb
test
andl
jg
stc
lcall
xor
xchg
push
inc
das
mov
xchg
int
push
seto
and
or
cmp
daa
pusha
adc
test
inc
call
cmp
mov
es
test
scas
aas
mov
jnp
push
rcrb
repz
adc
dec
insb
sti
out
lret
xlat
imul
out
jnp
inc
jno
push
mov
adc
mov
faddl
adc
test
fcmovne
stos
dec
adc
or
pop
out
adc
add
dec
rolb
in
jl,pn
repz
fstpt
out
gs
xor
sbb
es
in
sub
xchg
int
xor
lock
or
iret
stc
aam
in
pop
xchg
mov
out
push
ds
stos
fsubrl
pop
sub
xor
mov
mov
sbb
leave
lods
mov
mov
add
mov
and
outsl
jns
gs
cmc
mov
fistl
xor
cwtl
mov
jae
dec
scas
fistpll
inc
xchg
ss
loope
mov
sub
loopne
xchg
sahf
orb
push
faddl
push
stos
test
fcoml
addr16
test
dec
fildl
pop
pop
add
sbb
mov
fistps
fs
sbb
fildl
jae
xor
sub
lahf
cmp
mov
cmc
adc
nop
fildl
mov
fs
loop
cmc
jno
xor
inc
cmp
mov
nop
and
xchg
daa
sbb
loop
enter
jmp
pop
dec
gs
in
cltd
inc
mov
jp
xchg
cmp
xor
js
inc
pop
outsb
fstpt
pop
sub
cmpsb
sub
push
mov
mov
stc
inc
leave
pop
adc
dec
icebp
mov
inc
fcmovnu
test
test
in
xlat
mov
mov
inc
mov
adc
hlt
add
imul
icebp
int
mov
xor
sbb
add
mov
push
fcomp
sti
xchg
js
jl
mov
test
xlat
arpl
jnp
add
pop
cmp
stc
ds
dec
scas
and
fucomi
jl
pop
jb
jecxz
xor
xor
dec
int3
cmp
add
add
gs
mov
jns
push
xchg
insb
shll
push
addr16
sub
loop
push
jne
out
pop
outsl
ror
imul
fldt
jl
cli
aam
and
sbb
data16
popf
inc
dec
stos
icebp
fcoms
aad
andb
or
xchg
adc
fistl
shll
mov
push
test
sahf
insl
jmp
sbb
aaa
dec
loop
ss
rcrb
cmp
fistl
test
pop
daa
sub
jbe
loopne
insb
jb
jmp
fbstp
sub
stc
xchg
loop
shr
ror
lret
inc
adcb
cmp
into
ficomps
sbb
add
add
fcompl
or
andb
mov
mov
cltd
mov
hlt
bound
fdivl
push
fbld
orb
push
out
lcall
clc
out
icebp
fwait
mov
sti
mov
pop
cmp
xor
jo
fldt
mov
jl
inc
lcall
loope
xor
add
pop
movsb
sbb
lock
rcr
out
and
ret
xchg
jnp
dec
and
or
inc
stos
lods
sarl
fisttpll
dec
out
sub
mov
out
test
js
xchg
repz
test
cmp
daa
pop
mov
cli
mov
lds
test
sarl
dec
nop
xlat
add
in
push
es
mov
sarb
xor
cmp
mov
lahf
loopne
popf
sbb
dec
fstpt
mov
loopne
mov
addl
push
cmc
out
fisttpl
call
jg
mov
mov
adc
cmp
lea
gs
jb
mov
insl
icebp
ret
mov
add
fmul
icebp
mov
mov
jp
movsb
cmp
mov
push
sbb
or
mov
ret
orl
clc
fcomi
movl
shll
inc
mov
test
push
fisttpl
cmp
jbe
out
rclb
adc
lcall
fidivl
out
adc
xchg
mov
lahf
cmp
insb
xorb
mov
fcompl
mov
les
sub
cltd
cmpsl
fdivl
fdivs
das
pop
sbb
cli
sub
pop
sbb
jmp
pop
repnz
in
cmp
sarb
xorb
mov
adc
lea
adc
out
fisubrs
out
inc
dec
jecxz
bnd
fdivl
pop
dec
cmpsb
popa
popf
outsw
push
xor
or
fisttps
and
push
mov
cmp
inc
fimull
mov
inc
fildl
aaa
hlt
mov
sub
fneni(8087
lock
stos
push
push
sti
fstpt
mov
inc
and
mov
enter
fldt
int
fsubp
test
fdivrs
mov
loopne
les
cmpsb
dec
movsb
fildl
shlb
fstpt
scas
insb
and
inc
adc
lret
jmp
icebp
fsub
lahf
fadd
es
mov
inc
jne
mov
test
dec
pushf
jbe
inc
mov
cmp
and
out
sub
sahf
cmp
mov
popa
stos
lahf
movsl
inc
fistl
sub
call
mov
hlt
popa
test
int3
sub
int
pop
mov
pop
lods
adc
xor
mov
push
cmc
or
dec
xchg
xor
cmp
cmp
lahf
iret
mov
cld
mov
xor
fistpll
hlt
fisttpl
aaa
stos
mov
and
mov
ret
xor
xchg
fldt
xorb
or
fistl
jecxz
jmp
xor
hlt
lds
repnz
lret
mov
sub
gs
sti
sbb
mov
add
sahf
rcrb
divl
fistl
rcrl
fstpt
lods
pop
jp
push
call
inc
sub
pop
mov
cmp
popa
xchg
jmp
mov
add
mov
pop
fs
sub
fstpt
inc
xchg
jne
gs
sub
imul
adc
jne
inc
push
in
dec
into
mov
cmp
movsb
mov
fcmovnb
mov
add
les
mov
into
iret
fisttpl
jg
fstp
cmp
das
jne
fstpt
or
mov
rol
fcompl
std
flds
stc
clc
fcoml
rcrb
in
mov
mov
lret
inc
add
scas
mov
cmp
push
std
xor
ljmp
jmp
sbbb
mov
xor
fcmovnb
movsl
hlt
ds
test
in
insl
loope
rcrl
and
add
push
add
lahf
aad
xor
cltd
mov
aaa
out
lea
push
sub
fstpt
cmp
cmpsb
dec
clc
repz
mov
or
movsb
or
loope
pop
jbe
les
rcrb
call
xor
sbb
push
stos
inc
sahf
inc
xchg
or
lds
insl
mov
add
mov
out
enter
jnp
mov
mull
cmpsb
scas
push
mov
nop
fstpt
cli
xchg
inc
lds
fcomi
mov
movsb
sub
cmpsb
xor
push
mov
fdivrs
xor
lahf
dec
cmp
jo
out
sbb
out
mov
adc
cwtl
adc
es
lahf
hlt
dec
repz
jmp
lret
xor
inc
adc
sbb
les
pop
and
fistpl
dec
lahf
mov
xchg
dec
comiss
fcomps
fldt
mov
mov
or
shrb
subb
mov
cld
xor
loop
sub
add
mov
int3
cmp
test
std
test
fidivs
or
ja
and
sbb
imul
pop
shrd
in
mov
inc
mov
repz
jecxz
int
lahf
test
jnp
jmp
out
or
ret
dec
mov
cmp
movnti
or
pop
xor
pushf
imul
test
das
daa
int
mov
addl
stos
outsl
and
mov
subl
push
out
add
pop
xchg
add
test
push
mov
mov
mov
in
add
add
jg
out
dec
and
mov
jnp
add
sti
fwait
test
lods
sbb
xchg
stos
sti
xchg
or
fwait
das
lret
addr16
inc
pop
int
out
aaa
jmp
lods
and
xchg
das
mov
mov
adc
fwait
lods
lret
mov
enter
mov
aas
mov
rcll
mov
xchg
adc
dec
mov
int
fcmovnbe
mov
jl
cmp
aas
int
mov
test
cmpsb
js
popf
je
enter
mov
shll
jbe
lahf
jb
repnz
adc
out
or
out
or
adc
xchg
inc
push
mov
jl
cli
push
ret
in
std
imul
sub
mov
mov
std
hlt
xor
push
rolb
add
pop
mov
mov
add
repnz
push
add
sbb
jecxz
cmpsl
pop
fwait
adc
lret
mov
pushf
out
int3
or
xchg
sub
pusha
or
arpl
imul
sarb
sub
sub
vmptrst
sbb
cmp
bound
xor
popf
gs
or
inc
and
sbb
fcmovbe
cmp
test
adc
xchg
mov
nop
and
repnz
cs
fmull
add
clc
out
adc
icebp
fcmovnu
sti
cmp
lret
lods
jg
maxps
outsl
cld
mov
insb
mov
mov
call
push
sahf
loope
and
in
or
rcll
push
outsb
lret
int3
ret
add
push
pop
xchg
jb
int
mov
out
lret
rcrb
jb
push
add
mov
xlat
lret
mov
pop
mov
mov
adc
in
mov
jo
lret
sbb
adc
pop
add
mov
cmpsb
xchg
add
sbb
pop
fs
and
jecxz
enter
adc
jbe
rolb
ja
popa
arpl
iret
int
popl
mov
sti
js
js
and
rcrl
int3
int
orl
and
or
pop
push
jge
mov
inc
adc
dec
and
xchg
iret
pop
out
flds
orl
pop
leave
punpckhbw
js
iret
and
mov
sub
in
xchg
popf
in
mov
fwait
mov
aad
scas
in
pushf
lret
mov
ret
mov
sub
les
pop
or
sub
or
pop
cmpsl
mov
xchg
mov
mov
stc
test
out
les
orl
cltd
pop
aas
leave
es
mov
pop
adc
pop
movsl
adc
and
adc
repz
cld
sbb
gs
hlt
cwtl
mov
and
fs
adc
out
xor
cwtl
lcall
out
jecxz
adc
popf
dec
rcrb
pop
inc
dec
mov
and
iret
jle
pop
out
add
idiv
jmp
pop
daa
fnsave
out
addr16
push
jne
push
jp
addr16
ret
mov
fmul
insl
icebp
mov
mov
inc
pusha
or
or
test
daa
pop
xchg
lret
lock
sahf
dec
ja
leave
data16
pop
repnz
arpl
es
adc
movsb
repnz
cmp
nop
fsubs
sti
cltd
add
xchg
das
movsb
xchg
das
sub
iret
pop
int3
inc
fmuls
bswap
out
jecxz
mov
cmp
lods
mov
adc
push
adc
push
addr16
rcl
sbb
xor
bswap
ret
fsubs
xchg
xchg
cmp
pop
jmp
push
cmpsb
arpl
pop
rcll
sub
fmuls
int
jmp
out
xor
scas
dec
arpl
sub
fsubl
fistpll
or
cltd
sbb
jmp
dec
fstpl
out
jecxz
or
fimull
inc
jmp
cmpsl
add
rcl
or
jbe
je
cmp
imul
sbb
xor
add
fstps
mov
inc
int
adc
ret
ljmp
sti
lcall
push
in
jo
lret
addr16
push
popa
dec
cmpsl
sub
call
adc
dec
jecxz
lock
sub
scas
mov
sti
fsub
inc
rcrl
sbb
out
pop
imull
mov
dec
sbb
loopne
enter
mov
mov
out
jp
cmpsl
sub
dec
adc
or
add
xchg
xor
lds
fxch
mov
jae
mov
sti
es
insb
sti
inc
mov
xchg
or
fwait
lods
rorb
sti
int3
test
push
out
ljmp
pop
or
mov
dec
stos
jmp
inc
in
inc
stc
sub
and
inc
pop
out
sub
dec
in
or
jle
bound
jno
les
rolb
lds
sub
sbb
xchg
mov
popf
push
and
nop
mov
mov
sub
and
jnp
mov
cmpsl
add
fs
cltd
sbb
cmp
movsl
test
mov
into
das
jge
dec
mov
jge
pop
ljmp
mov
cmp
cmpsl
inc
mov
pop
lea
and
movsl
mov
and
lret
jns
mov
add
dec
roll
push
pop
mov
mov
ret
or
iret
fbld
jle
aam
cmpsl
lea
clc
jp
pushf
push
adc
inc
fs
sub
jnp
mov
fistps
mov
test
loop
outsl
or
addr16
xchg
mov
mov
sbb
sub
fwait
pop
mov
aas
or
or
jecxz
or
pusha
cmp
mov
call
in
outsb
shlb
out
mov
in
mov
js
aam
fnstsw
ret
add
xor
jle
insb
adc
dec
rcrl
popf
sub
and
aas
push
nop
mov
jb
sbb
imul
push
lcall
sbb
push
repnz
mov
or
pop
mov
sbb
pop
xchg
fld
and
int3
sti
nop
mov
xchg
shlb
sbb
xchg
jmp
push
push
fwait
cmpsb
pop
and
loop
fsts
pop
cmpsb
jg
cmp
stos
popf
pop
popa
sub
test
inc
push
pop
leave
data16
icebp
pushf
imul
push
pushf
mov
inc
lea
inc
scas
xchg
lods
adc
xchg
dec
fdivr
mov
test
jno
mov
int
mov
cmpsl
push
popf
loop
repz
repnz
cmp
lea
mov
repnz
sbb
fstpt
adc
pop
jb
sub
cmpl
jne
adc
push
test
jnp
sub
sbb
arpl
and
movsb
pusha
xor
mov
scas
lret
pop
or
adc
xchg
jge
ja
xor
and
shr
dec
das
lods
loop
xchg
call
pop
and
mov
inc
sbb
loopne
lods
cmp
fs
loop
mov
test
in
jg
nop
mov
inc
jnp
mov
pop
sbb
into
ljmp
aas
imul
aam
insl
xchg
iret
ja
iret
sub
scas
mov
push
jecxz
xlat
sti
xor
push
fsubr
inc
xchg
inc
subl
rcrb
lds
xor
xlat
lods
mov
inc
cld
and
jbe
or
addl
xor
aas
int3
cmpsb
pop
out
inc
scas
daa
xchg
push
adc
add
and
cli
and
inc
movsl
enter
adc
jecxz
cld
daa
cmpsl
repz
jae
mov
sti
mov
leave
in
jmp
dec
call
sbb
pop
jmp
sub
das
out
jecxz
or
jg
xchg
arpl
andb
adc
bswap
imul
inc
aad
aas
sbb
cld
sahf
es
fwait
inc
inc
sbb
mov
mov
xchg
and
cmc
jecxz
jnp
mov
scas
adc
add
jbe
mov
pop
adc
sti
or
dec
jge
pop
aam
imul
in
pop
jmp
pusha
jnp
and
mov
dec
mov
or
dec
mov
cwtl
arpl
int
loope
fs
nop
daa
negb
mov
ja
lcall
add
lea
mov
flds
push
lahf
pop
js
fisttps
push
pop
mov
mov
aaa
pop
lret
sub
lahf
pop
fcmovnb
push
adc
cmp
push
sbb
xchg
scas
inc
pusha
leave
mov
divl
xor
imul
lret
or
fwait
loop
mov
adc
int3
insb
roll
aas
or
fs
push
jmp
stos
jge
adc
mov
adc
inc
xchg
ret
scas
add
mov
daa
jns
jnp
popa
push
fs
arpl
adc
leave
sub
jl
sbb
adc
aad
sti
sbbl
iret
mov
lods
cltd
sub
jnp
inc
push
mov
mov
add
jnp
mov
lea
insb
test
mov
std
aaa
cmpsl
xor
mov
aam
sub
mov
pop
data16
gs
or
cmpsl
adc
loope
das
inc
or
loop
iret
shll
int3
shr
or
sbb
xchg
mov
mov
cmpsb
inc
nopl
or
dec
dec
lds
jae
or
add
jmp
mov
movsl
cmp
aad
mov
into
in
mov
add
mov
sbb
scas
sub
test
or
sbb
pop
inc
sub
pop
ret
daa
pop
dec
xlat
dec
mov
lea
and
fcompl
adc
mov
sahf
or
xor
test
pushf
syscall
push
pop
sbb
or
mov
das
test
or
cmpsl
jne
push
push
movsb
mov
pop
incb
push
popf
jecxz
in
pop
nop
mov
or
in
adc
movsl
out
imul
std
imul
out
sub
sbb
rorb
dec
mov
inc
add
jp
add
ret
imul
mov
fsts
fnstenv
dec
enter
push
hlt
xchg
imul
adc
imul
cmpsl
mov
hlt
imul
int
jnp
daa
insl
shr
es
int
mov
mov
jecxz
aas
lods
rcrl
loopne
pop
xchg
lret
push
jmp
mov
shr
mov
iret
push
push
mov
popf
push
cld
dec
in
int3
mov
lret
daa
call
sub
mov
ds
fldl
cmc
pop
mov
pusha
test
into
mov
push
icebp
or
stos
cmc
sbb
stos
fmuls
leave
inc
lcall
cmp
cmp
ficomps
pusha
pop
and
sub
int3
aas
fldl
data16
ret
mov
bound
and
mov
inc
jb
inc
cmp
push
in
jmp
mov
cmp
jge
mov
es
mov
push
cmp
xor
pusha
cmc
fimuls
mov
arpl
or
es
loope
and
rorb
push
mov
pusha
bswap
mov
std
lcall
das
jae
xchg
xor
xchg
jnp
test
leave
mov
movswl
mov
cmpsb
add
adc
std
notl
imul
mov
or
push
push
aam
adc
ja
push
shll
dec
xor
jp
in
sahf
push
jge
adc
adc
xchg
jbe
push
mov
inc
mov
push
xchg
sarl
sti
aad
push
add
or
adc
mov
iret
pop
mov
int
sbb
or
das
adc
add
jae
xchg
jb
adc
lds
push
pop
movsl
out
rorw
clc
dec
and
int3
adc
jecxz
dec
mov
adc
outsl
scas
add
cmpsb
add
mov
test
or
fisttpll
insl
pop
xchg
pop
push
mov
bound
mov
ja
fists
mov
subb
or
inc
add
push
nop
out
lcall
push
pop
fsub
int
inc
lods
push
fs
je
inc
pop
mov
inc
cmpb
pushf
jmp
pop
pop
pop
and
add
jmp
lcall
add
incb
test
sub
cmpsb
inc
cld
add
push
lret
int3
mov
or
in
mov
je
cmp
fdivrl
icebp
dec
in
js
mov
mov
lds
mov
adc
sti
movsl
aas
mov
adcl
cmp
adc
subl
pop
add
shl
dec
aaa
mov
lret
sub
xchg
sbb
addr16
sahf
repz
fisttpll
out
push
xchg
jecxz
pop
idiv
sbb
mov
cld
or
jl
repz
push
stos
mov
in
pop
es
fdivrl
add
repz
shll
int
adc
iret
xchg
pop
and
jne
iret
out
dec
test
outsb
hlt
call
push
mov
pop
push
out
dec
jae
nop
aad
lods
mov
stos
daa
push
add
insl
pop
push
pop
lea
sub
test
mov
inc
jno
add
xor
and
mov
les
dec
into
mov
lret
mov
jo
aam
in
das
push
cmp
iret
mov
sub
adc
int3
jnp
jno
dec
mov
pop
add
sub
add
and
adc
pop
aas
mov
outsb
inc
mov
and
jae
fldcw
adc
pop
mov
sbb
cmp
add
jmp
movsl
cmp
mov
lret
outsb
bsr
adc
add
and
into
fs
add
or
sti
xrelease
mov
mov
add
cmc
int3
inc
or
mov
mov
pop
or
jnp
cld
inc
jl
pusha
mov
adcb
repz
inc
mov
mov
ja
scas
movsl
or
std
inc
xchg
pop
jae
xor
xchg
bound
jnp
js
stc
mov
mov
in
insl
jmp
mov
inc
push
pop
pop
sbb
or
stos
pop
push
int
mov
jl
ja
popf
ja
mov
sbb
and
popf
jae
sbb
out
lcall
xchg
mov
sbb
test
in
inc
xlat
aaa
adc
orb
dec
mov
rolb
sbb
fs
lods
or
aaa
mov
sub
loop
cmp
movsb
jb
fldenv
int3
sbb
sbb
ret
hlt
push
sub
mov
adc
inc
xor
sbb
cmp
adc
xor
mov
loopne
push
stos
cmpsb
push
out
or
cmpsl
test
mov
lds
jne
das
mov
scas
jecxz
inc
or
inc
popf
testl
cmp
push
mov
sarl
cld
gs
jmp
mov
mov
adc
cmp
int
cmpsb
loopne
pop
ret
popf
mov
daa
outsl
stos
rolb
add
pop
xchg
sbb
cld
and
int
fwait
xor
int
fs
xchg
aaa
add
daa
push
and
inc
lods
sbb
xchg
push
pop
cld
sub
lahf
daa
scas
imul
inc
clc
cmp
sarl
sub
in
shlb
gs
leave
pop
shl
push
arpl
sbb
aad
push
pushf
or
inc
leave
pop
add
and
cwtl
or
sbb
outsb
sti
xor
cmpsb
xchg
or
xchg
aas
dec
mov
inc
cmp
sbb
inc
repnz
ret
push
dec
movl
jge
dec
addb
repz
xchg
notl
int
mov
pop
xlat
mov
or
movsl
rorl
cmpsb
mov
call
call
lods
out
leave
mov
arpl
lods
xchg
in
out
fldenv
jmp
cwtl
xchg
aaa
mov
mov
jb
out
movsb
sub
cwtl
sbb
lods
and
rorl
lret
leave
clc
imul
orb
movsl
loope
mov
out
scas
imul
mov
and
stos
es
shrb
adc
je
or
xchg
data16
dec
imul
push
shlb
enter
jge
mov
push
inc
and
pop
pop
jns
jae
cltd
ja,pt
pop
pshufw
cmp
ja
pop
jmp
rcrb
xor
mov
ret
dec
jecxz
int
pop
xor
in
sub
push
mov
push
xchg
jno
fwait
jecxz
call
sbb
repz
push
dec
mov
cmp
cmc
outsb
sub
mov
outsl
addr16
jecxz
mov
scas
inc
test
cmpsl
out
cld
adc
pop
xchg
push
out
and
daa
testl
xor
dec
adc
cmp
loope
or
xor
xor
popf
xchg
arpl
popf
in
call
pushf
mov
cmp
cltd
dec
mov
adc
add
sahf
movsb
test
fwait
cmp
pop
and
jns
les
in
inc
into
dec
not
out
or
dec
fwait
in
sbb
das
dec
sbb
and
call
in
sarb
mov
mov
roll
stos
mov
into
lods
and
adc
adc
add
outsb
mov
fnstsw
in
lea
faddp
pop
inc
mov
jl
lds
jnp
rcrl
sbb
sti
int3
mov
popf
sbbl
jnp
iret
mov
fwait
add
cmpsb
add
mov
sbb
cltd
jbe
les
xchg
add
cmpsb
arpl
idivl
mov
mov
push
arpl
test
jge
pop
fstl
xchg
xor
rcr
or
mov
cmp
out
inc
cmpsb
scas
push
or
pop
cwtl
jns
repnz
inc
cmc
fs
mov
jns
lods
cmp
outsb
fincstp
dec
sbb
inc
jp
adcl
fnsave
xor
lds
nop
cmp
mov
lods
or
out
sbb
insb
subl
in
inc
je
jne
stos
jns
lcall
orl
lret
and
imul
sbb
cmp
push
and
lret
inc
into
mov
dec
data16
icebp
pop
andb
popf
rorl
mov
int3
fsubrl
fisubrs
mov
jecxz
jmp
mov
int3
push
inc
dec
jmp
loopne
imul
xchg
stc
call
mull
fnstcw
or
lea
mov
add
mov
or
incl
mov
aad
rol
adc
mov
js
icebp
shll
jl
mov
mov
sub
repz
js
rorb
aas
cmpsb
fsubs
int
inc
fs
jmp
or
dec
repz
dec
in
ja
cmc
mov
ja
or
cmp
or
std
jnp
xchg
scas
lock
sbb
aaa
inc
pop
inc
pop
les
scas
push
sbb
sar
call
sbb
popf
inc
dec
jns
adc
xlat
ret
scas
arpl
mov
lods
sub
test
inc
push
add
stos
lahf
dec
sbb
pop
rcll
pop
mov
arpl
inc
mov
in
jecxz
push
add
and
dec
inc
xor
clc
call
or
pop
jne
inc
aam
aad
adc
pop
sbb
inc
hlt
fcmovu
orl
rcr
add
and
sbb
cmp
push
std
jmp
sub
and
notl
scas
sbb
out
xchg
cmp
sbb
or
or
out
xor
sti
orl
push
sarl
adc
out
data16
or
fstpl
aaa
movsl
or
cltd
and
add
or
adc
stos
jg
cli
mov
xlat
loop
xchg
adc
roll
push
add
mov
dec
in
popf
ja
or
jmp
movsl
vpunpcklwd
pop
dec
pop
mov
movsl
add
jle
in
mov
scas
pushf
lock
out
pop
nop
sub
popf
or
stos
or
push
ret
or
sbb
out
mov
dec
mov
nop
arpl
push
in
jno
mov
dec
dec
add
rcrl
and
mov
adc
cmp
lret
cmovae
jns
and
in
xchg
popf
mov
mov
arpl
stos
nop
sbb
repz
xlat
jecxz
int
sub
sbb
pop
divb
jle
push
dec
stos
daa
ss
call
data16
test
xchg
or
xchg
add
xor
loop
push
sbb
inc
add
mov
jmp
cld
aad
jmp
push
or
addr16
mov
les
inc
jo
dec
pop
es
mov
lret
add
loop
or
dec
stc
cmp
or
fldenv
lret
mov
sbb
mov
push
imul
add
push
jbe
shrl
mov
push
xlat
or
sahf
es
pusha
mov
mov
and
xor
rorl
xchg
andl
mov
test
xchg
shr
or
test
inc
pop
lea
cmp
inc
sub
arpl
and
add
xchg
inc
mov
sbb
call
fsts
inc
add
nop
add
cltd
cmpsl
fistpll
cltd
push
outsb
cmp
fstp
ret
sbb
movsb
pop
or
jns
or
testb
cmp
pop
sarb
or
fcompl
mov
js
je
stos
cmpsb
lahf
out
mov
fdivp
jg
je
out
aas
push
inc
test
xchg
repnz
in
lret
mov
in
sahf
shr
mov
les
aam
popf
lahf
mov
cmp
fcoml
fsubs
add
hlt
fs
sbb
cmp
and
fsubs
mov
cmp
out
jecxz
adc
jmp
pop
test
pushf
aam
pop
lods
mov
jmp
frstor
mov
xchg
inc
in
pop
loope
sbb
mov
pushf
mov
ss
push
mov
push
stos
je
sahf
cmp
addr16
inc
xlat
sbb
pop
cmpsb
out
dec
sti
jno
movsl
adc
mov
fimull
fmuls
dec
aad
cmp
add
aad
lods
push
inc
movsl
mov
int
aas
fwait
rcrl
jns
pop
psrad
and
or
mov
push
in
mov
gs
dec
loopne
fwait
bswap
ret
xchg
cwtl
inc
push
push
or
and
nop
add
pop
mov
jp
mov
aaa
lret
sti
mov
add
jl
imul
or
and
mov
imul
loope
ret
mov
in
add
push
enter
sti
sub
xor
nop
jg
stos
loope
jge
or
pushf
adc
mull
xchg
out
add
mov
sbb
andb
scas
rorb
inc
pusha
mov
jo
mov
enter
mov
push
divb
leave
cmc
mov
jno
cmp
fdivrs
test
lcall
sbb
pop
cmpsl
out
pushf
jp
add
pushl
test
faddl
mov
int3
shlb
icebp
pop
mov
mov
lea
sahf
or
or
pop
xchg
sub
out
xor
mov
loope
ljmp
dec
leave
sti
mov
adc
xchg
inc
das
jne
negl
inc
ljmp
pop
push
fwait
cmpsl
sbb
inc
or
xchg
sarl
movsl
push
sbb
addr16
out
sbb
imul
rcll
les
orb
movsl
jae
mov
cmp
sbb
jl
or
inc
out
lret
rcll
mov
sub
clc
daa
sahf
and
in
inc
mov
push
stc
jae
push
mov
jns
xchg
sub
bswap
icebp
mov
jbe
mov
fistps
mov
roll
lods
hlt
xlat
push
int
lea
lret
pop
mov
stos
jbe
lahf
pop
ljmp
jmp
and
in
ljmp
ret
inc
mov
cmpsl
rcrl
mov
popf
xor
or
call
xchg
mov
add
pop
lock
and
dec
xchg
or
pop
ss
inc
incl
out
sti
cmp
dec
out
imul
cmp
cli
aaa
sub
xor
cltd
mov
hlt
dec
testb
in
scas
dec
mov
jmp
pop
push
mov
mov
inc
vcvtsd2ss
lret
jg
into
insb
test
call
mov
fwait
pushf
movsl
int
cltd
mov
cmpsb
mov
dec
into
in
pop
ljmp
add
repz
add
push
inc
sti
mov
add
scas
shll
adc
in
or
shrl
or
dec
cmp
lock
out
leave
push
and
cltd
test
stos
call
cwtl
jecxz
in
scas
xchg
mov
xor
mov
cmpsb
in
pop
and
inc
sub
loopne
es
sub
fsubrl
dec
arpl
or
shl
add
push
pop
jl
loop
and
sbb
mov
mov
adc
scas
mov
adc
mov
rorl
movsb
lea
xchg
gs
mov
popf
push
mov
popf
ja
ja
das
inc
nop
imul
push
testl
bound
gs
out
mov
mov
daa
or
dec
cmp
sub
out
adc
cmpsl
adc
mov
data16
and
dec
hlt
in
dec
outsb
sbb
and
pop
arpl
repz
or
sbb
sub
in
push
mov
inc
incl
aam
into
or
les
sti
jmp
sbb
scas
lahf
sarb
cmp
push
pop
les
scas
or
push
mov
js
rorb
pop
push
add
rorb
adc
imul
call
into
lret
and
lds
lret
xor
cld
mov
sbb
xor
xlat
cwtl
add
shlb
xor
int3
cli
out
pop
inc
mov
push
mov
xor
rclb
call
push
sbb
jbe
or
cld
das
pop
jb
je
or
lock
mov
daa
pop
paddw
adc
pusha
sti
pop
aam
mov
cld
sti
aas
lret
push
mov
mov
das
mov
insl
mov
mov
sbb
aam
out
and
data16
arpl
iret
mov
inc
repnz
lahf
rcrb
xchg
xor
xchg
xchg
jb
or
jecxz
daa
adc
js
mov
jge
and
add
xor
jg
sub
scas
sahf
ror
xchg
and
popf
jae
iret
sub
aas
das
push
mov
mov
aam
lahf
and
lds
push
mov
sbb
incb
lods
push
shl
cmp
and
inc
pushf
dec
inc
into
jl,pn
into
xor
adc
mov
mov
fstl
adc
xor
cltd
or
rclb
cld
movsl
sti
icebp
loop
push
adc
push
inc
mov
push
repz
push
lret
rcrb
movsl
lret
pop
icebp
daa
or
mov
jg
inc
mov
dec
push
rol
mov
sar
stc
add
test
cmp
cmc
mov
xor
xchg
pop
push
int
or
arpl
in
pop
pushf
sbb
adc
add
xchg
out
jno
jnp
add
fcomps
cltd
lods
jge
lea
sub
mov
xchg
icebp
and
push
push
or
arpl
sub
sbb
popf
les
or
fcoml
pop
lods
jnp
push
dec
mov
cltd
aaa
adc
push
inc
rorl
xor
jp
mov
aaa
out
fildll
imul
jl
xchg
mov
dec
sar
daa
mov
jecxz
orb
loope
sbb
mov
dec
xchg
int
out
mov
cltd
int3
mov
aam
pop
hlt
adc
rorb
frstor
repnz
push
jl
mov
les
lods
mov
jecxz
mov
add
iret
movsb
mov
pop
pop
adc
jne
popf
shld
adc
js
cmpsb
subl
sbb
adc
loopne
pop
popf
cltd
jne
aas
jecxz
mov
es
push
sbbb
jp
jmp
or
lock
bound
push
cmp
fstpl
shll
stos
xor
xchg
jmp
jle
mov
push
sbb
sbb
mov
mov
dec
sbb
sbb
add
jo
mov
dec
popf
fsubrl
cld
ret
ljmp
popa
sub
inc
xorb
push
sub
bound
or
jecxz
or
push
jmp
pop
call
push
stos
insb
das
adc
fdivrs
flds
shlb
scas
lret
jmp
push
mov
add
lea
cli
fs
xlat
dec
and
pop
rcrl
pop
stos
adc
jo
add
or
adc
add
stos
ja
hlt
xor
pop
lahf
cmpsl
and
mov
xor
addr16
fbld
pop
ljmp
out
or
popa
xchg
stos
pop
dec
jmp
or
cltd
mov
adc
jmp
add
ret
test
xchg
add
scas
ret
aaa
adc
imul
test
mov
pop
or
std
sahf
arpl
jle
lock
nop
sbb
pop
or
icebp
xchg
je
push
dec
inc
xor
lods
cmp
inc
jae
lret
clc
adc
pop
outsb
divb
cmp
test
aaa
addr16
pop
lds
frstor
out
cwtl
sub
mov
cmovae
loope
or
fcoml
dec
out
xor
or
mov
inc
dec
aam
stos
add
data16
push
in
inc
fdiv
and
push
leave
xchg
pop
out
add
psrad
iret
xchg
je
call
pop
adc
cmp
loope
pop
lods
jno
sub
jo
mov
inc
inc
or
scas
pop
cltd
inc
popf
and
popa
lods
sbb
xchg
mov
icebp
jne
scas
jmp
int3
int
sub
push
push
test
repz
or
fsubrl
clc
jno
cmp
xlat
movsb
notl
cmp
pop
or
mov
imul
int3
loop
mov
push
ret
push
inc
or
mov
mov
stos
inc
or
fisttpl
push
xor
test
insb
mov
pop
or
cmp
sarl
xlat
bound
adc
xor
push
testb
xchg
inc
mov
mov
int3
inc
adc
loop
imul
lods
or
mov
iret
or
or
dec
or
mov
rolb
das
fsubrs
dec
sbb
popf
xchg
insl
or
in
aaa
inc
adc
and
sbb
or
mov
dec
movsl
aas
arpl
test
jnp
push
cs
in
cmp
fcoms
imul
jl
sub
sub
mov
icebp
les
pop
andl
add
daa
push
jo
add
push
xlat
and
addr16
cmp
cmp
xchg
jg
fsts
cmpsb
or
sub
ja
lret
lock
xchg
mov
mov
dec
scas
int3
sub
lcall
fimull
fwait
xchg
test
push
lret
xchg
fmuls
pop
shlb
inc
or
icebp
pop
push
or
insb
imul
ret
push
sbb
and
or
subl
stos
ret
jno
xchg
inc
andl
imul
mull
stos
pop
add
mov
mov
es
pop
mov
lods
roll
test
xchg
and
inc
fistpll
cmp
inc
push
stc
in
xchg
xor
cmc
mov
lret
call
or
push
jnp
push
pop
jecxz
cmp
icebp
push
xchg
xor
cmp
int
add
pop
push
aas
mov
sahf
or
or
nop
cmp
imul
cmovp
ljmp
mov
xchg
daa
call
xchg
mov
jl
in
push
aaa
add
call
sahf
mov
test
xchg
pop
cmp
pop
push
shll
cmp
cmpsl
mov
cmc
mov
mov
xor
add
mov
dec
fwait
sbb
cmp
push
jo
jnp
test
int3
lcall
lods
out
xchg
adc
lret
and
or
mov
push
inc
cmp
xchg
push
imul
lods
push
fmuls
jmp
dec
pop
sbb
ret
repz
ret
test
and
jmp
iret
ja
stc
xchg
test
pop
xchg
xor
lcall
lahf
dec
or
jnp
or
scas
je
cmpsl
jno
pop
and
in
int3
sbb
inc
mov
sbbl
sub
das
rcl
test
sub
fwait
dec
outsb
sbb
push
add
aas
push
xor
dec
add
fstl
sub
aas
adc
cmp
push
or
pushf
addr16
mull
mov
and
xchg
push
xchg
sbb
xchg
sub
push
out
mov
pop
sub
lods
icebp
cltd
mov
fs
test
cs
sub
notb
imul
mov
shrb
lahf
jmp
int3
pop
scas
test
int
sbb
add
cltd
stos
mov
insl
fwait
push
inc
ror
xchg
sti
mov
rclb
lds
jge
mov
aas
dec
insl
mov
push
int
cltd
xchg
movsb
mov
mov
push
pop
push
sbb
ss
in
iret
sub
test
aam
aaa
add
pop
sahf
popf
dec
push
jle
movsb
test
das
js
bound
in
iret
sub
xchg
lds
add
mov
dec
pop
push
fwait
mov
jle
pushf
push
mov
jmp
cmpsl
lcall
pop
dec
out
and
add
arpl
sub
pop
jecxz
lea
outsl
xchg
push
mov
cmp
out
ret
in
fists
lds
repnz
push
test
lods
test
ret
lea
inc
and
insb
and
dec
xchg
sub
cli
pop
jle
cmp
pusha
sbb
cmp
lret
leave
leave
cli
sbb
jbe
dec
arpl
daa
scas
jecxz
cmp
cmp
push
jmp
jp
lret
sub
mov
dec
lcall
xor
pop
movsb
xor
shrl
and
sbb
add
cli
xchg
mov
mov
sti
mov
into
jp
scas
mov
outsl
push
mov
or
and
pop
sahf
sub
jo
xchg
pusha
movsb
das
sbb
rcrb
sbb
pop
push
in
or
sti
add
sahf
dec
xchg
scas
ljmp
mov
outsb
mov
pop
adc
pop
pop
sbb
fst
ret
out
xor
inc
out
add
loopne
pop
cmc
stos
xchg
cmpsl
jnp
fwait
arpl
pop
bound
inc
repz
push
test
or
cmc
addr16
call
icebp
repz
xchg
shll
sti
dec
add
push
in
ret
push
rorl
jl
mov
stos
sub
dec
lret
and
es
mov
add
sti
aas
fcmovbe
xchg
sub
repz
nop
sbb
push
jnp
in
pushf
dec
fidivs
out
xchg
xlat
and
add
fstl
jmp
dec
nop
mov
mov
pop
mov
push
mov
out
lods
sub
and
stc
adc
jmp
dec
out
pop
inc
fcmovu
shrb
les
ret
iret
push
ljmp
sar
and
and
ljmp
ljmp
inc
gs
andb
ljmp
in
and
fldl
and
in
mov
in
mov
mov
roll
pushf
inc
jno
push
fwait
dec
ljmp
inc
sbb
mov
and
mov
or
sarb
dec
std
cmpsl
imul
or
sbb
lds
faddl
addr16
fists
push
mov
lret
sub
lods
fldl
xchg
sti
std
loope
arpl
fucomp
repz
fs
loop
cmpsb
add
jbe
popf
insl
mov
test
out
shll
jmp
xorl
test
lds
add
test
mov
pop
iret
into
fwait
dec
or
gs
jmp
icebp
jecxz
jge
in
out
mov
cmp
je
jmp
sub
xchg
in
fcmove
pop
pusha
pop
mov
sub
mov
lea
fs
arpl
rcl
lret
dec
cmpsl
xchg
sarb
test
sbb
lahf
pop
int
dec
mov
popf
cmpsl
add
js
enter
lahf
ss
jo
lahf
test
pop
int
sub
add
or
int
push
cmpsl
adc
push
jae
mov
or
fs
repz
aaa
pop
inc
mov
call
lds
add
outsb
cs
fsubp
jge
aas
jecxz
mov
push
clc
mov
and
int3
xor
mov
xlat
mov
addl
loop
decl
adc
std
push
clc
aam
and
mov
stos
pop
nop
pop
mov
shl
adc
fldt
and
sub
out
or
or
movsb
movaps
lahf
fsubl
push
pop
xlat
shlb
jns
jecxz
call
imul
insl
pushf
loop
or
sbb
stos
push
sahf
push
push
insl
push
std
ljmp
mov
out
popa
jmp
sbbl
sbb
arpl
lods
mov
dec
cmp
in
fidivrl
xor
scas
fwait
pop
and
out
iret
test
std
mov
pop
xlat
dec
roll
lods
movsb
lods
push
lds
aas
xlat
insl
mov
or
sub
out
or
out
mov
stos
or
sbb
jp
jg
push
enter
add
arpl
in
xor
imul
loop
js
sbb
inc
mov
int
cmc
fsubl
sbb
pop
sti
sbb
scas
out
fildl
inc
setne
inc
mov
popa
and
add
mov
addr16
cmp
and
fmull
pop
inc
fimull
js
dec
or
or
pop
in
xchg
notl
mov
jno
aas
movsl
xchg
out
adc
jg
jl
shll
popl
ja
jle
dec
test
jb
arpl
roll
out
mov
dec
repnz
gs
loop
gs
in
inc
pop
xor
mov
mov
fwait
and
popf
shlb
add
mov
or
jmp
minps
mov
adc
mov
pop
cmp
pop
movsb
aaa
lahf
cmp
or
inc
push
sub
xor
popf
pushf
imul
xor
mov
sbb
pop
int
arpl
xchg
xor
repz
inc
popf
cmp
fdivl
out
movsl
xor
mov
cli
push
pop
pop
add
out
dec
push
push
push
movsl
and
mov
jne
jl
cmpsl
jb
inc
inc
les
push
arpl
sub
mov
cli
jecxz
nop
ja
mov
push
jnp
xchg
inc
pop
popf
insl
imul
insl
pop
lods
add
jmp
push
and
xlat
cmp
sub
movsb
pop
push
into
in
popf
stos
xchg
jne
stos
xor
cmpsb
inc
lcall
inc
cmc
mov
pop
sub
sbb
sbb
paddw
pushl
sub
aaa
ret
daa
xchg
std
jg
jnp
xchg
imul
mov
mov
pop
bound
inc
cli
lcall
lahf
jae
and
xchg
inc
adc
mov
dec
jmp
lods
out
test
int3
sahf
pop
lea
ret
push
cli
out
testb
push
aas
cmpsl
add
stc
add
sti
scas
mov
fldcw
lds
jo
jo
pop
fs
mov
sub
inc
and
jmp
or
mov
scas
cmpsb
aas
nop
cld
mov
scas
jae
mov
hlt
jmp
adc
aas
push
add
cmp
pop
jbe
xchg
dec
or
pop
ljmp
and
add
out
sti
xchg
in
adc
inc
xchg
dec
jmp
push
adc
pop
nop
mov
sub
lods
aas
add
nop
adc
pop
jae
cld
and
ret
sbb
roll
dec
cmp
dec
in
push
lea
jle
lret
push
addr16
lea
fidivl
movsl
sub
add
movsl
mov
mov
pop
or
inc
add
mov
pop
mov
pusha
xor
jno
and
jmp
call
and
int3
dec
out
movsl
leave
lods
xchg
cwtl
push
arpl
fwait
or
mov
out
push
stc
popf
dec
or
in
imul
dec
and
inc
mov
ds
push
sahf
sbb
arpl
inc
cmpsl
mov
arpl
push
adc
adc
pushf
inc
jmp
out
in
xchg
sub
pop
xchg
pop
loopne
mov
daa
cmp
adc
in
xchg
stos
dec
outsb
add
or
and
loopne
mov
pop
mov
jp
push
mov
aas
cmp
mov
and
mov
les
repz
int3
jmp
je
xchg
pop
mov
pop
push
out
sahf
into
pusha
mov
jns
fwait
push
fldl
jae
sarb
movsl
and
and
adc
or
insl
pop
push
cmpsl
arpl
dec
push
cmpsl
in
lret
ret
sti
into
loopne
pop
negl
mov
pop
add
lret
imul
xchg
push
pop
ret
pop
fwait
cmp
cmp
add
fwait
daa
sti
dec
jl
lret
shrl
or
call
daa
imulb
jb
hlt
or
adc
cld
mov
int
dec
subl
cmpsb
insb
mov
dec
cltd
mov
aam
in
mov
daa
jns
sub
jbe
pop
cmp
inc
mov
mov
adc
sub
insb
andl
das
sub
adc
pop
jbe
in
das
push
cmpsl
xchg
std
jg
jnp
xchg
test
mov
call
add
pop
fwait
push
inc
jle
sub
test
out
cwtl
lcall
xlat
sarl
pop
movsl
or
xor
rcrl
sbb
jge
adc
or
lahf
movsl
xor
cltd
xor
pop
pop
sub
movsb
in
mov
jl
mov
idiv
out
or
push
rcl
push
test
mov
es
lock
adc
pop
out
cmpsb
add
push
jmp
shll
rcrl
push
stc
insb
xchg
mov
jg
sbb
scas
repnz
cmc
call
cld
jb
sub
aas
pmaxsw
inc
xchg
mov
scas
pop
jo
cmp
push
push
gs
lret
lods
or
or
jecxz
je
sbb
mov
popf
ret
mov
aas
or
into
repnz
and
stos
jns
daa
add
xor
loop
adc
mov
jp
movsl
push
and
mov
inc
jmp
jnp
ret
and
fwait
dec
inc
and
ja
sub
in
sub
cwtl
xor
jg
dec
and
cmp
or
adcb
mov
xchg
dec
lods
pushf
sbb
adc
test
xchg
inc
shlb
les
or
lret
mov
sbb
inc
push
dec
test
sbb
adc
sbb
sbb
sbb
and
lret
imul
push
lret
sub
sti
fldl
call
mov
lods
stos
add
movsl
sbb
stos
testl
outsb
fisttpll
enter
lcall
mov
cmp
adc
fsubs
mov
das
lds
je
xchg
ret
pop
repnz
sub
insl
adcl
mov
xchg
cmp
inc
inc
testl
sub
inc
pusha
rolb
test
mov
inc
mov
mov
pop
add
push
mov
xor
fwait
mov
orl
testb
dec
jl
fildll
jae
push
lret
mov
push
sti
jne
jmp
pop
cmpsb
push
iret
sbb
jmp
daa
push
jecxz
push
dec
cmc
insl
stc
aaa
out
jecxz
sbb
test
bswap
jp
pop
into
aas
dec
push
ljmp
scas
repnz
sbb
int3
nop
sbb
outsl
cmp
popa
pop
mov
mov
enter
push
movsb
cmp
out
cmpsb
cmp
jmp
jne
into
fcoml
jne
rclb
popa
mov
ja
les
stos
and
movl
mov
in
addr16
mov
ret
pop
push
cwtl
mov
dec
mov
sub
scas
arpl
vpaddsb
sti
iret
cld
jno
cltd
daa
sbb
jle
out
into
js
xor
das
dec
std
mov
mov
and
outsl
or
outsb
xorb
ds
stos
test
mov
daa
mov
mov
sti
or
roll
jg
stos
orl
adcb
xchg
mov
sbb
push
mov
push
xor
jg
insb
cli
cmp
adc
inc
subl
shll
pop
jno
mov
add
sbb
mov
push
arpl
aam
pop
ljmp
rcrb
addr16
xchg
lret
push
clc
int3
lds
aas
pop
xchg
mov
cmpb
dec
and
sub
push
inc
jmp
sti
sarb
mov
jg
pop
test
test
out
bound
jg
out
movsl
iret
ja
add
js
mov
sub
lahf
adc
jecxz
enter
jne
lods
sub
inc
and
jmp
sub
dec
stos
in
dec
push
mov
jb
rolb
jmp
pop
aaa
pop
xchg
xchg
call
dec
push
int3
jb
stos
lcall
push
mov
add
and
lods
inc
cli
mov
scas
movsb
push
ficoml
add
cltd
jecxz
scas
fwait
paddsb
or
movsl
pop
push
nop
xchg
into
test
mov
pop
push
cltd
jg
fstps
pop
cmp
lret
lret
or
loope
and
add
pop
cmp
outsl
sti
pop
fldl
cltd
cltd
sbb
mov
cltd
mov
pop
dec
mov
scas
in
fstps
movsb
xor
aas
mov
ja
add
je
aad
cmp
sub
sahf
in
test
iret
mov
pop
lahf
out
outsl
pop
into
jb
subb
pop
mov
inc
lods
adc
cmpsb
cli
or
push
std
pop
loop
scas
mov
cmc
cmpsb
bound
xchg
sahf
jecxz
adc
cmp
push
push
adc
pop
or
shl
dec
sbb
fsubl
sti
cmpsl
xchg
inc
hlt
arpl
es
loop
and
jb
jb
cmp
call
push
in
lret
in
push
inc
cli
adc
lret
push
cmp
jnp
stos
shll
in
ret
push
aam
repz
lods
sub
out
js
stos
cmovae
lret
xchg
push
sub
add
lret
mov
pop
cmp
sub
inc
mov
or
in
xchg
in
dec
jnp
inc
adc
adc
dec
inc
mov
sbb
mov
xor
jmp
xor
dec
int3
or
js
rorb
mov
inc
test
sub
popf
sbb
neg
out
mov
or
add
or
cmp
pusha
xorb
and
cmpsl
and
dec
scas
or
push
out
mov
pop
int
sbb
or
stos
inc
cmc
in
push
ret
inc
cmp
pop
icebp
sbb
int3
icebp
int
mov
wbinvd
or
xor
fwait
repnz
or
mov
jecxz
iret
mov
fcompl
xchg
in
filds
negl
repz
xsaveopt
lret
inc
lock
xor
movsl
into
stc
lret
mov
or
pop
movzbl
fnstcw
jnp
dec
ror
dec
pcmpgtb
jmp
sbb
stos
inc
mov
mov
inc
cltd
lret
sbb
mov
jns
popf
xor
or
mov
mov
adc
pop
bswap
push
mov
shl
xor
outsb
hlt
cmp
loope
setp
cmpsl
pop
iret
lahf
test
or
xchg
orl
icebp
lds
outsb
cld
xchg
pop
or
ret
scas
xor
and
push
jp
leave
cmpsb
pop
add
outsl
jne
test
daa
push
mov
xchg
add
test
rcr
ret
es
add
xchg
jne
in
jmp
jne
shrb
je
frstor
adc
leave
es
ss
out
test
out
inc
sub
adc
inc
leave
mov
mov
xor
sbb
cmpsl
sub
rclb
mov
add
mov
in
popf
sub
push
pop
or
ret
bound
jne
push
in
or
push
es
xchg
imul
xchg
scas
jge
pop
fs
mov
insb
das
xor
mov
sahf
roll
jmp
mov
std
fs
push
call
out
pop
filds
lea
scas
pop
lds
sbb
in
adc
into
jmp
or
popf
pop
int
ret
mov
arpl
or
out
mov
or
stos
jmp
push
in
adc
or
cmpsl
mov
xchg
mov
std
sbb
mov
mov
sti
iret
stos
in
imul
mov
dec
sti
frstor
or
std
mov
xlat
cmpsl
leave
ja
gs
mov
insb
xchg
or
std
in
cmpsl
push
shll
add
mov
std
adc
add
mov
pushf
and
in
lods
mov
or
jge
and
daa
mov
inc
push
lods
hlt
in
xchg
adc
in
imul
or
sahf
adc
mov
imul
xchg
std
in
cmpsl
aaa
daa
xor
jmp
in
mov
or
std
scas
cmpsl
mov
dec
int3
mov
mov
cmpsl
jg
mov
push
mov
jmp
xchg
out
inc
and
sub
inc
rcrl
or
jg
popa
loope
enter
and
jno
or
lock
das
fidivrs
jnp
inc
mov
dec
stos
stc
xorb
pop
incl
mov
sti
inc
addr16
pop
cmp
fwait
mov
stc
sub
pop
fs
pop
mov
mov
inc
xchg
sub
fidivl
inc
popf
sbb
cld
mov
cs
adc
push
mov
por
sarb
sysret
mov
sti
or
fists
add
sub
dec
jnp
fldl
out
loop
jbe
in
enter
loopne
push
or
fs
movq
xchg
mov
xor
mov
fiadds
sbb
int3
pop
loope
add
stc
dec
inc
aam
add
pop
enter
jge
adc
andl
ja
mov
mov
lahf
int3
mov
mov
das
and
pop
test
push
in
xchg
or
stos
pop
addr16
mov
aam
out
ffree
mov
xlat
adc
bound
jo
es
sti
jbe
ret
pop
mov
xchg
cmpsl
hlt
data16
cmc
pop
xchg
pop
mov
jne
xchg
xlat
and
ret
in
in
lret
add
scas
fstpl
and
xchg
data16
or
rclb
cmp
push
repz
gs
filds
shl
lods
sbb
inc
mov
xstore-rng
cmpsl
add
arpl
in
adc
fldenv
mov
scas
xchg
sahf
or
mov
call
push
mov
loope
and
hlt
adc
xchg
call
inc
repz
dec
sub
fmuls
cmpsl
movq
cld
out
inc
xor
adc
dec
add
cmp
jno
mov
xor
xchg
decl
shll
or
push
or
lret
inc
std
ja
daa
movl
cmp
repz
loopne
push
lods
gs
lret
mov
je
xor
imul
clc
mov
jmp
lods
jmp
xchg
inc
jb
mov
sub
mov
das
inc
lea
sub
clc
cmp
inc
sub
in
in
and
xchg
add
xchg
xchg
jbe
jmp
adc
xchg
shrl
out
xor
xor
xchg
sbb
stos
or
jp
das
mov
and
mov
clc
daa
out
add
ret
ret
xchg
jbe
cmp
pop
orb
sbb
sti
pop
push
inc
jle
shl
and
mov
bound
pop
push
popf
inc
or
xor
sti
mov
hlt
inc
sub
sbb
jmp
pop
cmp
ret
faddl
lds
add
cwtl
jg
pusha
out
push
gs
pop
je
outsl
and
or
or
pushf
push
cld
nop
xchg
fwait
sahf
mov
push
jne
push
cmp
ja
rolb
sbb
stc
aas
xchg
mov
cli
dec
dec
leave
pop
and
mov
clc
push
xchg
jae
mov
leave
pop
mov
inc
mov
inc
in
mov
insb
mov
adc
adc
inc
aas
and
pop
mov
movnti
pop
cmp
ja
pop
xchg
jle
add
call
loop
js
lret
incl
mov
inc
xchg
fisttpll
repnz
jg
outsl
decl
es
icebp
hlt
dec
sub
sbb
pop
fstl
repnz
rcrl
pop
xor
out
cmp
and
mul
and
std
sub
inc
aam
and
sub
inc
add
xchg
sbb
jmp
add
dec
ret
lea
rorl
jge
push
stos
push
bound
ret
push
and
mov
sub
stos
pop
inc
mov
xchg
mov
dec
cmp
add
ja
les
and
mov
push
cld
mov
inc
dec
fwait
sub
leave
shrb
mov
push
lahf
int3
fstpt
lret
leave
mov
ret
jmp
pop
imul
test
lods
cmc
test
dec
cmp
xchg
fidivs
inc
xchg
dec
ds
pop
fsub
es
arpl
faddl
aad
xchg
adc
push
inc
jge
cmp
icebp
std
faddp
addb
sub
xlat
into
xor
call
dec
test
add
popa
lea
iret
mov
push
inc
or
scas
iret
lea
fisttps
adc
mov
ret
adc
push
adc
mov
dec
int3
dec
sahf
mov
push
data16
push
rolb
push
inc
ds
push
mov
adc
outsl
iret
ficompl
fildll
in
cmp
xchg
iret
insb
inc
xor
popf
arpl
or
sti
cmp
mov
mov
jno
xchg
cli
dec
testb
dec
out
xor
mov
ret
shll
xchg
imul
into
mov
enter
jle
dec
adc
cmp
and
xchg
inc
mov
inc
jo
xor
lods
lret
in
loope
cmp
sub
loopne
sbb
call
repnz
sub
push
jb
dec
adc
sub
clc
pop
lods
and
add
decl
or
jno
inc
xchg
sbb
cmpsb
andb
sub
outsb
sub
sub
cmp
fmull
push
or
mov
inc
ret
push
add
sub
clc
repnz
dec
and
push
mov
movzwl
cmp
xlat
xchg
hlt
sub
cmp
leave
mov
xchg
cmp
push
aad
push
cmp
dec
mov
in
mov
inc
add
cli
addr16
mov
inc
xchg
or
mov
sbb
fcmove
subl
mov
push
lret
or
les
and
bound
push
adc
or
mov
push
div
cmp
add
lahf
hlt
push
dec
mov
orl
fsubp
loopne
dec
sub
and
mov
pop
cmp
dec
mov
xor
sbb
xchg
mov
shl
btc
mov
sbb
add
mov
stc
clc
cmp
push
xchg
neg
mov
call
movl
call
jp
adc
jbe
dec
jno
ljmp
cmc
cmpsb
int3
sbb
dec
xchg
gs
lret
andl
aaa
pop
in
ret
ret
mov
mov
fnstenv
mov
pop
movsb
cld
mov
or
mov
push
je
gs
shlb
mov
dec
mov
add
loopne,pn
cs
stos
push
push
imul
fimuls
xor
sub
add
mov
lea
call
jmp
lea
pushl
jmp
jg
decb
push
xor
dec
pushf
int
jns
add
or
out
insb
test
xor
push
mul
inc
popf
and
pop
movsb
lea
jecxz
or
test
jbe
lahf
sbb
nop
xchg
aaa
xor
xor
jp,pt
lea
and
mov
mov
pushl
ret
cmc
mov
shl
bt
mov
push
cmp
movb
repnz
pushl
lea
jno
pushf
lea
jne
call
pushf
call
add
orb
orb
orb
sbb
add
add
add
je
dec
add
add
add
add
mov
cld
jmp
movl
and
call
clc
cmc
bt
sub
push
jmp
cmp
push
test
or
pushl
mov
call
push
inc
cs
xchg
call
movsl
aad
rcrb
test
jns
mov
jno
push
cmp
sub
icebp
js
xchg
stc
lcall
flds
fs
fs
es
in
fstl
ror
add
cltd
jg
je
call
sub
dec
mov
dec
xchg
popf
in
icebp
dec
add
pushf
add
xor
cmp
out
dec
cmp
insb
arpl
mov
sub
dec
mov
inc
ret
add
fwait
rolb
lea
imul
inc
jb
mov
mov
inc
cmc
mov
pop
jne
imul
inc
push
jae
mov
icebp
sub
pop
stos
stos
dec
in
popf
sbb
sbb
in
repz
cwtl
ds
mov
mov
imul
rolb
loop
jo
aas
sbb
lret
cs
push
mull
mov
cmc
xchg
jo
push
pushf
mov
xchg
movups
fstl
sbb
inc
jo
jmp
cmpsb
jg
ja
sub
cli
test
xor
lcall
inc
adc
pop
repz
aad
cmp
jmp
dec
xchg
or
push
jae
mov
stos
lret
movsb
shll
notb
cmp
mov
popf
inc
ret
xchg
leave
adc
jl
repz
mov
adc
cltd
lret
iret
jo
imul
rcrb
test
cmp
pop
daa
push
pop
jmp
push
js
in
push
or
pop
xlat
mov
inc
ljmp
sub
or
pusha
pop
mov
push
sbb
cmp
and
dec
mov
scas
popf
dec
std
movsl
and
dec
sbb
stos
imul
xchg
push
inc
arpl
dec
dec
or
sbb
jae
mov
mov
xor
or
inc
cwtl
lcall
xchg
insb
sbb
roll
xor
pop
insb
mov
push
jmp
add
leave
enter
pop
popa
cmp
jge
mov
pop
lahf
aaa
mov
leave
fnsave
mov
outsl
dec
push
fwait
push
pop
fimull
adc
add
add
mov
dec
testl
jle
inc
out
nop
pushf
in
int3
in
mov
sbb
lea
int3
cmp
fdivs
sub
test
movsl
inc
mov
cmp
jmp
and
lahf
fwait
mov
sbb
stc
jae
int
dec
inc
fiaddl
add
xor
pushf
ja
into
jbe
adc
push
jb
jo
popa
mov
push
mov
cmp
add
pop
sub
cmc
lods
inc
pop
aaa
jmp
les
add
and
sahf
cmp
out
push
dec
jecxz
fists
fs
popf
or
lods
jmp
adc
xchg
sub
lcall
and
mov
pushf
inc
inc
or
clc
sar
push
daa
out
mov
popa
cmp
mov
ret
imul
call
push
icebp
mov
mov
adc
or
cmpl
xchg
sub
sbb
adc
lret
fstps
in
ret
insb
inc
add
mov
aas
jecxz
aaa
ds
les
push
xchg
mov
out
inc
jl
lret
dec
push
or
fsts
or
fisubl
fdivrp
addb
cwtl
stc
ja
arpl
jl
pop
xor
test
mov
in
sub
jo
psubd
sub
repz
pop
jge
pop
andb
mov
adc
add
sub
imul
out
xchg
xchg
iret
mov
sbb
andl
xor
icebp
inc
dec
and
iret
cmp
ret
mov
in
fcoml
push
push
pushf
jne
mov
cmp
loopne
push
mov
aam
test
pop
and
lcall
icebp
xchg
dec
xor
xchg
movsb
int
or
das
or
arpl
js
mov
fdivr
xchg
mov
filds
scas
push
scas
addr16
dec
jmp
stos
cmpsl
arpl
lret
lret
add
into
aam
testb
mov
jbe
jle
gs
gs
shrb
and
stos
dec
adc
pop
es
shl
add
and
sbb
lcall
sub
cli
das
mov
icebp
scas
pop
cmpsl
out
sbb
enter
jecxz
sub
pop
sahf
ror
add
loope
dec
out
add
fwait
ss
sbb
inc
dec
dec
sub
jmp
inc
cmp
sbb
sbb
push
or
gs
push
and
fimull
mov
arpl
pop
in
imul
into
ljmp
inc
inc
pop
cmc
sti
test
cmp
jae
dec
icebp
aas
xchg
inc
les
mov
add
adc
push
push
das
dec
inc
sbb
lret
in
lds
in
cmpl
sub
jno
xchg
cli
lea
mov
jne
out
das
push
xor
pushf
xor
test
mov
push
shl
lds
dec
pop
jl
std
shll
int
adc
fwait
sub
pop
sbb
add
out
add
xchg
mov
mov
jmp
int3
pop
aam
fistpll
xor
movsl
cltd
push
das
out
inc
or
mov
or
pop
loop
mov
fcoms
and
cmp
xchg
cmp
js
jb
sub
and
jmp
sbb
pushf
sbb
enter
int3
out
xchg
or
dec
and
insl
int
jl
mov
lock
and
stos
repnz
inc
fmuls
mov
jbe
mov
cmpsl
subb
or
and
vmaxps
sbb
jnp
mov
jecxz
lea
cld
push
xchg
add
jmp
mov
sarb
dec
pop
jns
and
addr16
fsubl
fdivl
aas
mov
adc
fnstcw
repz
pop
sbb
inc
add
in
jle
int3
fs
add
jge
xchg
mov
int
stc
sbb
or
jg
repz
fwait
cli
push
pusha
and
clc
sbb
rcl
adc
push
out
shlb
dec
xchg
js
and
rclb
push
lock
push
dec
push
aas
fincstp
jnp
lret
push
lret
push
aam
cmpb
push
aas
fwait
jecxz
enter
ljmp
outsb
cmp
xlat
cmp
js
xchg
lea
outsb
movb
push
cmpsb
mov
hlt
int
cmp
jmp
cmp
hlt
rcrb
sub
pop
ds
mov
insl
mov
inc
fcompp
inc
gs
push
hlt
push
notb
icebp
rcr
or
pop
and
and
ljmp
orb
arpl
inc
push
incl
repnz
add
adc
cmpsl
jp
test
addl
orl
xchg
dec
aaa
fstpt
fidivrl
loop
inc
arpl
sbb
inc
and
clc
dec
pop
dec
clc
rolb
cltd
mov
test
xchg
lcall
mov
js
jae
test
jmp
movb
lds
jae
fcompl
pusha
xchg
mov
mov
nop
and
xor
push
or
aam
cmp
leave
mov
inc
lods
fstpt
add
mov
mov
pop
and
cmp
out
inc
mov
inc
test
inc
out
ret
and
adc
sti
sbb
push
xor
jae
adc
shlb
mov
outsb
push
push
scas
stos
pop
js
out
xchg
cmc
xchg
pop
loope
mov
sbb
insb
xchg
test
fdivr
enter
xor
jmp
lret
popf
sub
stos
in
aas
sbb
stos
jb
pushf
incb
xchg
inc
add
push
push
adc
mov
pushf
adc
rorl
xor
stos
ficoml
lods
sub
sbb
dec
pop
jl
setbe
add
xchg
sahf
and
jmp
andl
xlat
pushf
and
push
dec
gs
faddl
mov
dec
imulb
stos
loopne
pop
aam
sbb
cmc
or
cmp
shrl
dec
inc
inc
es
or
lcall
push
xchg
ret
cmpsb
xchg
shlb
inc
repz
ror
mov
divl
fidivrl
jno
sahf
popf
mov
test
ds
lds
out
pop
push
test
rol
dec
xchg
and
frstor
lds
int3
pusha
jnp
ret
insb
mov
add
cmp
jle
out
data16
cwtl
pop
dec
inc
push
jno
fsubl
fsub
fadd
jnp
cltd
mov
ret
shrl
stos
enter
cmp
sub
push
clc
xchg
nop
inc
jno
xchg
sti
sbb
adc
inc
xor
mov
out
call
loopne
je
cmp
rsqrtps
sub
mov
push
adc
ss
out
pushf
mov
stc
jns
shl
iret
out
nop
dec
iret
dec
in
fldt
insb
push
mov
mov
aaa
xor
push
xor
xor
dec
xchg
adc
push
aad
shrb
movsl
or
mov
js
inc
lret
out
push
shlb
mov
cltd
adc
sarb
je
sub
jecxz
les
jle
scas
pop
arpl
in
addr16
xchg
dec
xchg
ja
mov
cli
jns
popf
sbb
mov
cmp
fstpt
pusha
adc
dec
cmp
idivb
jnp
xchg
lret
enter
dec
pushf
mov
iret
jae
out
sub
aad
outsb
or
mov
cmc
lods
xor
xchg
mov
sbb
push
cmp
inc
xor
mov
lret
ror
bound
movsl
jp
mov
clc
rcrl
push
push
adc
repnz
je
inc
bound
push
and
sbb
ja
cmp
cwtl
pop
jnp
or
pop
ret
rorb
add
inc
add
loop
adc
mov
adc
sbb
jbe
jno
int3
test
mov
jge
inc
test
das
out
aaa
mov
pop
mov
shll
ja
xchg
jmp
jo
adc
adc
stos
add
mov
mov
xchg
jno
notb
inc
xchg
push
xorl
out
lret
fsub
shrl
test
xchg
andl
int
dec
pop
and
mov
sbb
cli
stos
es
jp
sti
popa
pop
push
sub
xchg
sub
daa
and
sahf
sbb
shrl
sub
pop
cmp
sbb
shr
sbbl
ret
or
mov
pop
movsl
out
and
adc
std
sbb
fdivrp
js
scas
in
inc
sbb
cmp
push
jnp
sub
into
dec
adc
mov
insl
js
outsl
call
out
mov
jecxz
loopne
mov
daa
repz
mov
xchg
cmp
fs
cltd
cwtl
movsl
push
imul
push
mov
stos
mov
push
or
fldl
add
and
inc
sbb
scas
int3
and
filds
pop
mov
lods
lret
add
shlb
enter
mov
scas
in
roll
ds
jle
dec
pop
jp
dec
push
fsubrl
mov
mov
test
jmp
sti
cmp
mov
pop
sahf
jnp
in
or
dec
xchg
loopw
and
push
repz
stos
mov
xchg
sbb
sbb
test
imul
mov
mov
ret
rorb
ret
xchg
cmp
mov
sub
sbb
adc
jno
and
les
fdiv
test
lds
mov
nop
pop
mov
pop
sti
adc
sahf
push
push
mov
mov
jae
mov
sbbb
add
insb
push
sbb
test
lcall
xchg
rorb
in
lcall
ss
mov
icebp
js
cli
pop
or
add
movsl
cltd
mov
adc
icebp
adc
pushf
pushf
jge
xchg
inc
jae
loop
cltd
pop
xor
ret
mov
xchg
ficompl
and
and
loop
push
and
adc
mov
push
aam
dec
cmp
jbe
das
leave
mov
sti
ficoms
sbb
push
in
jp
stc
push
bound
sti
and
test
xchg
jne
imul
mov
xchg
loopne
jl
sbb
adc
mov
fdivrl
stos
add
push
xchg
xchg
into
lahf
xlat
sahf
ja
pop
push
push
sti
mov
out
movl
xchg
adc
outsl
jg
lret
push
loop
loope
push
mov
mov
insb
sub
mov
je
jg
rolb
loopne
lea
scas
clc
cmp
loope
lock
orb
adc
xchg
aam
hlt
scas
xchg
xchg
dec
mov
jecxz
lods
pushl
mov
call
cmp
lret
repnz
pushf
das
mov
and
xchg
jmp
scas
push
cli
xchg
daa
shlb
mov
cli
and
cmp
push
inc
mov
fisttpl
mov
cld
fwait
daa
mov
inc
add
arpl
loop
dec
fimull
cmp
jbe
inc
xchg
test
nop
cmpb
repz
lock
enter
arpl
sub
dec
mov
inc
dec
into
movl
pushf
push
movl
push
pushl
lea
jmp
pusha
jmp
pushl
popl
pushl
pushl
pushl
pushl
ret
dec
inc
jmp
jbe
mov
std
push
popa
add
mov
sub
cwtl
inc
mov
push
in
mov
adc
gs
inc
xchg
lcall
fdivs
jg
cmp
ret
sbbl
cs
xchg
xlat
aad
or
adc
pusha
mov
adc
mov
pop
xorb
mov
push
xor
jmp
xor
pop
ficoml
jns
imul
test
adc
jg
xchg
xchg
sbb
repnz
mov
movsl
rorb
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
lret
push
lahf
jg
pop
adc
mov
test
nop
xchg
jb
adc
stos
movsb
imul
scas
int3
in
or
or
out
lahf
dec
xchg
mov
int3
ret
imul
ss
jmp
adc
sub
push
mov
icebp
push
mov
or
test
mov
outsb
repz
mov
or
andb
pop
jmp
jecxz
lods
mov
mov
jge
push
aad
fdivs
dec
push
lea
or
push
xchg
rcrl
aad
pop
movsbw
bsf
add
and
clc
mov
stc
clc
stc
add
jmp
call
jmp
call
call
mov
pushf
lea
call
jmp
inc
loop
dec
lret
repnz
dec
test
jl
mov
lret
jmp
in
xor
add
ret
add
or
or
int3
mov
inc
out
dec
push
cmpsb
and
into
xchg
push
sbb
mov
imul
outsl
in
ds
add
sbb
sub
lret
add
aad
dec
addr16
sti
push
test
xchg
mov
dec
scas
xor
idivl
add
adc
push
lret
sub
pop
dec
sub
mov
push
and
scas
cli
loop
data16
pop
push
dec
in
ret
leave
adc
mov
jmp
stos
push
sahf
jmp
mov
pop
fwait
icebp
arpl
mov
or
sarb
aam
push
dec
mov
pop
mov
int3
fistps
add
stos
mov
repz
mov
pop
dec
mov
js
arpl
fs
jne
jmp
jge
and
jno
aad
out
and
xlat
push
clc
popl
sbb
xchg
push
sbb
and
mov
out
mov
cmpsl
pop
jne
repnz
les
lahf
std
xchg
testl
orl
add
stc
out
push
aas
sbb
pop
adc
mov
lea
push
dec
mov
mov
cmpsl
add
repnz
test
push
cwtl
sbb
test
xor
loope
fdivrl
mov
sbb
fs
jae
bsf
mov
sar
rcr
shr
btr
mov
btr
neg
test
mov
pushf
cmc
xor
call
jmp
push
lds
lds
jp
jb
ret
cmp
mov
jle
dec
adc
pop
inc
mov
test
testl
push
fsubs
mov
and
jb
fisttpl
loope
lcall
mov
mov
setnp
add
push
fdivrs
add
and
and
movsl
inc
dec
mov
xor
jle
cmp
movl
pushl
push
lea
jmp
sarb
and
stos
mov
mov
mov
test
pop
lahf
pop
roll
sub
pop
test
outsl
push
cmpsb
fadds
pop
call
int3
jmp
mov
pop
repz
and
pop
notb
jns
nop
iret
adc
pop
xlat
or
lods
mov
dec
mov
xlat
mov
cld
decl
test
adc
add
clc
pusha
pushf
sub
pushf
call
pusha
mov
lea
jae
clc
mov
ror
bsf
movsbw
cmp
mov
lea
shrd
seta
mov
pusha
xor
bt
clc
push
repnz
pushf
lea
jne
jmp
lea
ja
pushf
jmp
lea
jne
shl
mov
cmc
bt
add
push
test
cmc
cmc
movzwl
test
mov
clc
test
add
call
lea
jne
pusha
jmp
stos
mov
mov
mov
lea
pusha
jmp
incl
divl
mov
cmpl
sub
test
movl
mov
mov
sub
pop
push
lahf
out
sti
mov
or
adc
or
nop
int3
cwtl
popf
fnstcw
inc
mov
jp
ficomps
and
push
jne
icebp
addr16
fwait
sub
mov
adc
fdiv
dec
mov
mov
or
fists
sub
inc
pop
ds
mov
xchg
mov
pop
fadds
sbb
xchg
sbb
cmp
cmp
dec
or
aad
jle
movsl
jae
pushf
jne
mov
sub
jg
mov
ja
xchg
push
lea
cld
and
jae
adc
cmp
lret
mov
mov
push
icebp
fnstcw
stc
xor
loope
lods
clc
mov
mov
hlt
mov
dec
mov
push
mov
mov
add
sbb
adc
xor
and
mov
or
cmp
add
aad
pop
inc
imul
pop
sub
cmp
sbb
xor
mov
scas
call
mov
mov
pop
repz
sbb
mov
dec
loope
pop
jecxz
mov
pop
data16
sub
ja
and
mov
jne
sahf
out
dec
mov
xchg
cli
je,pn
inc
and
cltd
lds
ficoms
jle
mov
jbe
push
add
inc
mov
mov
mov
jne
dec
popf
and
pusha
sbbb
int
mull
aas
and
testl
clc
and
sub
adc
sub
pop
mov
pop
pop
dec
mov
and
imul
dec
mov
jno
rcrb
out
mov
add
lcall
inc
add
add
mov
jns
rorl
das
lahf
es
cwtl
cltd
fs
insb
paddusb
add
xor
divl
mulb
inc
mov
jo
jecxz
cli
mov
cmp
sbb
add
push
dec
mov
es
fbld
or
cwtl
scas
hlt
jg
xchg
adc
ror
push
xlat
mov
bound
sbb
iret
push
xchg
mov
ja
xor
std
cmpsb
pop
sbb
dec
or
push
out
loop
cmp
insb
es
pop
cmp
je
xchg
pop
jg
sbb
and
nop
sbb
push
dec
mov
data16
inc
pop
dec
add
dec
mov
enter
shl
rorb
pcmpgtw
sbb
add
jb
js
xchg
xlat
push
jno
push
xor
adc
outsl
push
jg
icebp
jne
pop
hlt
or
cmp
pop
stos
mov
dec
jbe
mov
gs
aas
add
ss
xchg
pop
fists
add
int3
adc
jo
and
hlt
call
mov
test
mov
lods
ja
push
inc
mov
xchg
iret
pop
xchg
mov
or
andl
in
xchg
in
mov
dec
mov
adc
lea
ja
push
mov
call
iret
shll
daa
scas
shll
into
lea
jb
push
lcall
pushf
add
iret
loope
outsl
leave
mov
xchg
scas
sbb
stos
pop
pop
mov
mov
imull
mov
and
fwait
or
dec
imul
cmp
mov
pop
fnstcw
xchg
or
repz
cltd
cmc
fadd
je
test
lock
in
and
mov
mov
and
jnp
jp
pop
and
jg
mov
xor
mov
xchg
int3
insl
jmp
int3
sub
stos
add
lock
ret
es
xchg
mov
xchg
mov
into
mov
cld
movswl
fcomip
mov
pop
mov
ficoms
insl
dec
mov
or
fistpl
imul
into
out
lods
sub
or
mov
daa
ret
mov
icebp
aam
jl
insl
xchg
xlat
sbb
arpl
mov
and
xchg
ret
jnp
adc
outsl
push
insb
cli
stos
cmc
push
cli
cli
cld
xchg
xchg
and
mov
aad
sbb
mov
lods
lret
xor
mov
lea
stc
jmp
movb
call
mov
call
test
and
clc
or
or
mov
cli
cmp
divb
jo
push
aad
ja
pop
aam
push
push
xor
out
testl
stos
lods
shl
mov
push
mov
aad
inc
das
dec
mov
fnstsw
xchg
mov
lahf
mov
outsb
cmp
cld
and
fs
out
mov
xchg
sbb
jnp
jbe
sbb
push
cld
clc
or
mov
repnz
adc
lea
sbb
stos
xchg
bound
les
mov
stos
loope
and
rorl
adc
mov
sbb
popa
xchg
jno
dec
mov
ficomps
and
mov
out
out
inc
push
pushf
pushl
ret
movw
mov
setp
pushf
lods
push
jmp
repz
call
push
mov
lea
ja
bt
call
jns
sub
push
push
push
movsl
in
test
mov
cmp
cs
loop
or
fstpt
or
adc
jg
mov
dec
out
or
mov
test
ret
cmp
mov
fcomip
jecxz
mov
cmp
xor
out
hlt
in
jae
popf
mov
cmc
decl
paddw
mov
cmp
xlat
cmp
pop
hlt
sub
punpcklbw
mov
clc
mov
jmp
mov
fimull
push
lahf
repnz
mov
pusha
lods
clc
mov
add
cmc
stc
ror
jmp
sbb
mov
xor
imul
int3
push
out
leave
adc
inc
cltd
sbb
stc
push
xlat
cmp
loope
sub
mov
jmp
or
pop
xchg
push
jle
add
mov
ss
push
mov
jae
jb
mov
push
cli
fs
mov
pop
orl
mov
jecxz
mov
add
mov
mov
lret
ret
push
adc
mov
insb
pop
jge
pop
sub
sub
adcl
es
jge
pop
xchg
shll
inc
test
add
dec
xchg
push
stos
inc
movsl
mov
adc
adc
rol
and
movsb
fsub
dec
shlb
jmp
ret
add
push
sbb
stos
divb
push
jge
sub
jmp
lds
fisubrs
push
popa
jno
into
push
shrb
movsbw
pushf
movw
mov
xchg
call
add
movw
stc
cmc
cmp
mov
jmp
jmp
sub
daa
lods
xchg
int
add
sub
ficomps
pop
shll
push
sbb
mov
mov
negl
cmp
fistps
call
adc
cmc
mov
fs
ret
orl
negb
dec
gs
pop
cmpsl
mov
popl
or
test
adc
sub
dec
sarb
bound
fistps
test
sbb
pop
lock
dec
inc
incl
test
adc
cwtl
mov
jb
cld
divl
push
jp
stos
fchs
dec
adcl
lea
fbstp
mov
pushf
jmp
jmp
xlat
les
mov
lods
fcompl
emms
mov
in
in
into
inc
jecxz
js
or
sbb
aam
fisttps
adc
ljmp
daa
cwtl
in
mov
sbb
mov
mov
lods
out
push
gs
push
or
ret
add
jne
or
aas
jmp
inc
nop
pop
push
sbb
sub
fistpll
push
test
aad
xchg
sub
cmpsb
test
add
xchg
push
in
scas
xor
es
add
mov
cmc
in
xchg
and
ljmp
mov
add
dec
pushf
call
movb
jmp
cmp
mov
dec
sub
push
ds
cs
pop
push
fstpt
mov
sbb
or
les
enter
dec
and
sti
fldt
ror
movsb
add
adc
pushf
mov
hlt
push
jo
and
push
std
mov
and
sub
test
dec
outsl
fucomp
dec
mov
jecxz
lahf
add
jg
test
repnz
cmpsl
cmpsb
push
mov
mov
shlb
or
xor
xchg
das
lods
ds
xorb
xor
pop
in
mov
divb
in
xchg
fs
sub
jo
enter
adc
in
lea
jne
jmp
pushf
pushl
movl
pusha
movb
mov
pushf
push
push
pushf
pushl
ret
xchg
sub
aas
mov
mov
pop
js
inc
adc
sbb
or
or
add
inc
cmpsl
pop
and
jb
add
add
jmp
testb
adc
call
aad
aam
xchg
xchg
rcrb
push
dec
xorl
push
out
pop
xlat
scas
add
push
mov
pop
aaa
mov
out
dec
mov
test
shll
mov
pushf
lea
jmp
bound
push
xor
jg
or
cmp
enter
outsl
jae
rorb
repnz
daa
adc
stos
dec
xor
inc
out
fiadds
mov
jmp
xor
adc
out
add
inc
stos
lods
sar
dec
sub
loop
jle
fbstp
sahf
fisubs
stos
mov
add
jg
mov
sbb
cmc
pop
fisubrs
or
aam
or
dec
stos
daa
jnp
cmpsl
adc
jae
jo
mov
call
add
inc
lret
xor
movsb
add
xchg
mov
sbb
shll
out
adc
mov
lods
sahf
push
dec
sub
bnd
loope
js
sbbb
stos
xor
or
cmp
xor
iret
mov
ds
jb
fmul
test
pop
xor
mov
mov
or
lret
int
push
jnp
dec
mov
xchg
loope
mov
bts
xchg
sar
bswap
mov
rcl
xchg
movw
mov
test
mov
not
xadd
shr
shl
mov
jmp
cmpsl
dec
out
mov
jmp
mov
push
dec
and
cmc
mov
sub
cmp
ffreep
and
push
dec
cmp
fisttps
addr16
jnp
add
negb
mov
cmpsl
inc
scas
cmp
lcall
inc
mov
in
scas
pxor
jg
loop
jg
jo
test
cmp
add
or
jbe
test
sub
rorb
adc
rol
add
lea
jne
not
not
not
movb
bswap
cwtl
call
bswap
lea
jmp
push
pusha
movl
lea
jb
push
pusha
lea
jmp
jmp
pushl
call
fstpl
inc
cli
and
mov
aaa
pusha
sbb
cld
mov
fbld
repnz
mov
pop
pop
cmp
vpshufhw
mov
fidivs
jecxz
or
hlt
inc
cmpsb
add
or
jg
mov
fists
dec
jle
test
outsb
xor
mov
into
lahf
shrl
jae
mov
dec
mov
xchg
sti
in
xor
dec
insb
lret
lods
sbb
and
lods
or
call
cmp
add
das
addb
sub
test
dec
subb
aad
add
mov
lcall
out
fcomps
test
mov
jb
push
lock
add
hlt
sub
mov
cmp
stc
fiaddl
js
fidivl
icebp
les
xchg
std
insl
pop
dec
mov
adc
mov
or
adc
out
or
jne
push
cld
fistpl
std
push
insl
jno
dec
add
gs
pop
int3
out
cmpb
adcl
pushf
test
loop
inc
cmp
cs
sbb
mov
cwtl
jns
sbb
xchg
int3
mov
adc
movsl
repz
mov
mov
orb
xor
jno
jbe
inc
mov
mov
jae
aaa
adc
pop
mov
insb
das
std
repz
imulb
cmp
push
mov
popa
cmp
cltd
jbe,pn
cwtd
mov
lods
xchg
jecxz
adc
and
or
fidivrs
clc
movsb
je
fsts
jmp
out
lret
jb
mov
hlt
adc
jl
fwait
pop
dec
mov
cmp
xlat
sbb
data16
faddl
fwait
sbb
or
repz
shrb
outsb
mov
dec
iret
jecxz
repz
gs
and
or
je
mov
fistl
mov
mov
dec
xchg
adc
push
and
push
scas
lret
adc
mov
xchg
inc
sti
pop
icebp
movsb
pop
and
hlt
jo
in
cmpsl
dec
gs
dec
mov
mov
xchg
stos
pushf
lea
jmp
lea
call
bt
clc
push
cmc
cmp
mov
mov
pushf
lea
jae
push
cmp
jmp
not
rcr
mov
call
movb
pushf
mov
setl
pushf
pushl
push
lods
cmc
test
jmp
cmp
lea
pushf
pusha
pushf
movw
lea
jb
cmp
cmc
push
cmp
movb
lea
jae
dec
mov
adc
or
setae
xadd
mov
bts
mov
stc
cmp
xor
call
add
imull
xor
dec
or
dec
clc
int3
leave
xor
fwait
jecxz
fnstenv
icebp
pop
iretw
leave
xor
lret
jnp
insl
aaa
out
mov
adc
push
dec
out
jnp
fidivrl
fs
pop
decb
fnsave
pop
lret
gs
dec
jl
sbb
mov
add
aad
sarb
shrl
push
xchg
icebp
icebp
dec
mov
cmpsb
call
sub
push
mov
lods
pushl
add
clc
clc
ror
test
clc
pushl
sub
stc
call
mov
mov
call
add
dec
outsl
popa
fs
imul
add
inc
and
into
sbb
fs
jmp
jnp
sub
adc
dec
inc
test
xlat
mov
ret
xchg
and
gs
adc
mov
in
jnp
inc
push
enter
std
gs
cmp
mov
mov
mov
sub
insl
les
sbb
sbb
repz
ja
pop
enter
jnp
rcrb
push
loop
and
stc
lret
cmpsl
icebp
mov
shlb
lock
mov
lahf
cmc
cltd
add
test
xchg
add
or
add
hlt
icebp
xor
mov
ret
arpl
pusha
mov
sbb
jnp
scas
rorl
outsl
aaa
faddp
test
mov
xchg
rcrb
dec
rcl
pop
push
inc
shlb
jae
ficoml
push
mov
aas
jg
and
addr16
and
sbb
cmpsl
pop
jp
test
dec
jp
adc
ret
movsb
fcoms
imul
or
outsl
ss
test
sbb
dec
pop
jecxz
dec
mov
cmp
push
lea
ja
pushf
lea
jb
pusha
cmp
cmpb
jmp
inc
scas
xchg
xlat
pop
test
loopne
ss
outsl
sbb
shll
stos
aaa
inc
int
adc
push
rcll
jne
jne
loop
negl
ss
clc
mov
enter
fsubr
cs
cmp
sub
sbb
sbb
aas
pop
in
clc
outsl
lds
mov
sarl
jg
insb
and
sbb
jb
sub
mov
add
repz
or
int
mov
daa
mov
add
das
rorb
cmp
jne
mov
pop
repz
xchg
fisttpl
xchg
inc
lods
mov
ret
mov
xlat
idivb
imul
in
jo
xchg
lods
jg
cwtl
das
pop
cwtl
imul
mov
mov
dec
mov
inc
dec
test
fwait
nop
iret
push
xor
fisttpll
movsl
push
ror
mov
pop
loope
int3
fwait
mov
jp
push
fstpt
loope
cmp
mov
mov
mov
shll
mov
xor
jno
stos
lret
mov
sbb
or
jns
inc
insl
test
add
fsubl
and
mov
cli
jge
cs
int3
dec
in
cld
pushf
iret
xchg
or
fs
cmp
test
rcrb
inc
mov
push
jno
and
scas
shll
jl
xchg
ds
daa
js
in
test
loopne
cmpsb
xchg
mov
jnp
push
and
pop
pop
fwait
inc
leave
mov
lods
scas
xchg
sbb
decl
dec
or
int
fcompl
lods
xor
out
pop
pop
add
mov
neg
sbb
push
repz
xchg
inc
mov
fwait
xor
push
outsl
out
and
cmp
dec
add
xlat
sub
pop
xor
ret
cld
mov
pop
inc
jmp
shrl
mov
xchg
dec
setb
mov
pushf
lea
jmp
je
push
mov
movzbw
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
movl
sar
and
pusha
lea
je
sete
lea
jmp
movl
push
movl
pushf
push
movl
lea
jmp
movsl
sbb
sarb
and
adc
add
xor
out
scas
mov
movsl
push
dec
or
mov
mov
sub
jo
add
mov
mov
push
inc
adc
fnstenv
cmp
jl
pop
fbld
sbbl
data16
jne
xor
cmp
or
sbb
push
inc
addr16
ror
test
or
rorb
add
add
clc
jmp
mov
mov
lea
jne
push
mov
pushf
mov
mov
pushf
pushf
push
lea
call
call
movaps
jbe
xchg
xchg
test
mov
dec
mov
mov
ss
mov
sarl
cmp
add
insl
adc
add
mov
and
inc
ret
test
hlt
sbb
into
pop
das
push
push
or
pop
test
lock
out
scas
jo
sbb
hlt
cmp
jns
xor
push
in
xor
stos
cmp
and
in
xor
xlat
cmp
cmpsl
mov
pop
call
mov
dec
cli
icebp
stc
mov
jge
inc
dec
mov
xor
popl
movb
pushf
pushl
ret
pushl
lea
jne
not
mov
cmc
add
test
bt
bt
movzwl
add
pusha
mov
pushf
push
add
test
mov
pushf
test
test
test
test
call
hlt
add
sub
add
mov
out
pushf
mov
cmp
sbb
into
aad
or
aas
lock
sub
test
add
and
xchg
cmp
nop
sub
xor
cli
xchg
ret
dec
and
cmpsl
push
pop
mov
enter
inc
jecxz
dec
aam
int3
jmp
pop
dec
mov
sbb
jmp
not
mov
pushl
pusha
pushf
mov
pushl
ret
pop
cli
xchg
aam
dec
push
dec
mov
xor
les
add
xchg
imul
cmp
inc
fistps
bound
cmp
xchg
xchg
fisttps
or
push
es
sub
loop
cmpsl
cli
iret
sub
cli
or
in
jp
jmp
testb
mov
inc
push
leave
test
cmp
xchg
ds
es
scas
ret
mov
aad
outsb
cmc
shl
dec
and
mov
pushf
jmp
lea
jb
clc
pushf
stc
test
cmpb
pusha
push
movb
jmp
pusha
add
cmc
lea
movsbw
pushf
mov
cmc
test
lea
jae
push
lea
je
bt
push
or
add
neg
rol
mov
call
movsbw
mov
push
call
jp
push
inc
and
push
jg
push
sbb
inc
pop
rcrb
popa
sub
mov
sbb
sub
ja
imul
ljmp
fld
mov
add
test
jl
add
ljmp
push
test
and
mov
shrl
outsl
fidivl
mov
pop
xor
mov
jno
dec
and
ficomps
xor
adc
push
pop
xor
test
ror
dec
mov
sahf
repz
mov
add
adc
adcl
jle
sub
iret
fisubs
xchg
test
repnz
dec
scas
push
clc
rcrb
pop
mov
jle
push
or
add
cmp
rorl
xchg
lea
inc
push
cmpsl
call
inc
jge
arpl
sbb
in
lret
inc
mov
mov
xchg
das
and
jecxz
cli
divl
dec
xchg
scas
imul
xlat
cmp
fisttpl
pop
in
lods
addr16
cld
cwtl
mov
mov
andb
mov
or
aad
movb
mov
mov
pushf
mov
mov
not
movsbw
lea
call
call
lea
jae
bt
bt
push
cmc
cmp
push
pushf
lea
jae
push
cmc
call
cmp
bt
cmp
pushl
pusha
lea
jae
pushf
pushf
pushf
cmp
pusha
lea
ja
push
call
cli
mov
les
ret
mov
inc
mov
pop
xchg
pop
repz
push
imul
jl
xchg
and
cmp
in
fidivrs
cmp
jnp
mov
je
adc
pusha
hlt
fwait
pop
mov
aaa
test
repz
dec
mov
aaa
inc
inc
orb
pop
cltd
lds
mov
pop
sahf
jmp
mov
mov
shrb
imul
or
sbb
add
inc
nop
sbb
sub
inc
jmp
pop
mov
fwait
add
mov
cltd
mov
cld
dec
mov
sbb
push
in
dec
mov
adc
xorl
or
cmp
jno
sub
loop
call
inc
or
adc
sub
fmuls
cmpsl
dec
xchg
int
subb
and
jb
xor
hlt
push
scas
add
sub
xchg
pop
pop
loop
sub
sub
scas
mov
pop
sbb
push
repnz
mov
add
rcl
lahf
movsl
xchg
fwait
test
je
or
ja
push
ret
jne
mov
cmpsb
repz
in
pop
lahf
lea
push
pop
cmp
cmp
lcall
fistps
or
test
fcmovbe
ret
dec
sub
inc
orl
adc
xorb
mov
mov
je
dec
sub
jae
or
test
adc
xorb
xor
shlb
addr16
sub
inc
and
loopne
dec
mov
mov
ljmp
add
lods
pop
ljmp
dec
mov
jl
pop
movl
mov
mov
movl
pusha
push
pushl
lea
jmp
movzwl
not
lea
movzbw
pusha
mov
mov
call
push
pushf
movb
movl
pushf
push
push
jmp
pusha
pusha
stos
pushf
lea
jmp
ljmp
lret
fiadds
xchg
imul
popf
add
enter
pop
xor
leave
pop
lret
xor
add
ret
push
pop
fistpll
mov
orl
lcall
pop
rcrb
movsb
sub
xchg
sbb
imul
in
imul
aas
in
add
jne
sub
cmpsb
cmpl
iret
stos
outsl
negb
xor
cmc
mov
stc
push
or
ja
xchg
repz
outsl
sbb
jne
pop
and
pop
inc
xlat
mov
or
pop
test
jecxz
mov
mov
stos
movsb
lea
in
jne
popf
out
out
aad
xor
das
shlb
je
add
movl
pushf
push
movl
movb
pushf
pushf
lea
jmp
push
notb
cmp
mov
movsb
pop
push
inc
enter
and
add
stos
mov
gs
xorb
and
mov
cmp
pusha
mov
lcall
xchg
mov
sub
or
xchg
xchg
mov
daa
movsl
mov
or
xchg
loop
lods
frstor
loop
jp
mov
lret
xor
mov
adc
and
insb
imul
call
mov
mov
inc
negl
mov
dec
push
xchg
out
or
xor
fs
sub
mov
push
xlat
fs
sbb
int3
outsl
sarl
dec
cltd
shlb
out
divl
push
mov
mov
subb
push
inc
jb
cmp
dec
imul
test
adc
mov
push
adc
dec
mov
dec
inc
into
cmp
jmp
add
cmp
stc
jmp
jae
lods
cltd
xchg
pop
and
and
jno
leave
lods
push
xor
ljmp
cmp
cmp
add
shll
mov
push
scas
leave
adc
ret
push
jnp
aad
pop
push
hlt
in
rorl
mov
push
pop
insb
stc
jl
xor
cmp
loopne
popa
imul
out
lahf
inc
mov
lods
imul
movl
inc
sbb
gs
dec
mov
movsl
in
mov
mov
daa
lods
dec
clc
push
hlt
leave
faddl
jne
push
sub
mov
gs
repz
outsl
leave
mov
idiv
imul
dec
pop
cmp
pop
mov
pop
adc
adc
push
cmpsl
adc
pop
scas
daa
push
cmp
mov
cmpsb
ficomps
mov
sbb
movw
pop
pop
movb
lea
jmp
dec
mov
movsl
inc
jne
daa
in
lods
mov
jge
repnz
jecxz
ljmp
pop
hlt
pop
xchg
fildll
outsl
leave
leave
outsb
adc
or
pop
mov
sub
add
xchg
repz
jbe
cli
xor
out
ss
push
ret
loop
mov
mov
xchg
add
add
add
add
add
add
and
add
rorl
add
or
add
mov
test
add
jmp
call
pushl
lea
jne
lahf
shr
and
rol
xor
rol
das
shld
mov
sbb
cmc
sar
add
setbe
clc
sbb
mov
bt
cmp
test
pusha
pushf
mov
lea
je
bt
sub
cmp
call
lods
sti
aaa
push
adc
and
lods
and
inc
test
ljmp
fwait
loopne
scas
ljmp
jp
fldl
loopne
icebp
insl
das
mov
cld
aas
pop
sub
push
das
fdivrl
ljmp
mov
push
in
pop
inc
pop
mull
repnz
movsl
mov
lahf
dec
loopne
lods
fisubl
mov
sbb
jge
mov
std
push
sub
dec
push
fstpl
push
lea
mov
jle
sub
test
pop
cmc
jo
add
aam
mov
cwtl
aaa
push
fwait
cmpsl
aaa
xchg
loopne
mov
and
sbb
and
outsl
xchg
imul
pop
int3
xor
dec
jmp
clc
push
test
gs
mov
xchg
add
mov
test
imul
stc
push
dec
push
dec
out
ret
ds
dec
cli
imul
and
fwait
jmp
jbe
dec
scas
sahf
popf
lcall
cld
add
lods
or
push
push
cmp
negb
xorb
cmp
mov
popa
and
insl
push
aad
divb
or
jle
leave
dec
inc
aad
call
mov
jecxz
iret
or
test
inc
and
mov
bswap
lea
cwtl
mov
not
lea
cwtl
mov
push
movzbw
movzbw
pushf
movsbw
lea
movb
jmp
dec
push
cmpsb
aas
ds
jae
inc
and
lret
jnp
mov
int
sti
mov
and
cmp
test
mov
in
jg
ds
orl
pop
sub
or
or
adc
shrb
push
dec
push
mov
movsw
sbb
imul
addr16
fists
inc
int3
pusha
push
mov
stos
fs
cmp
cmc
test
xor
lea
jmp
pop
data16
icebp
mov
imul
push
xor
pop
and
pop
rcrb
cmpsb
mov
icebp
mov
mov
pop
sub
sub
jno
sbb
gs
push
sbb
movsl
sbb
adc
cmp
mov
les
icebp
add
cmpsb
loope
test
aam
mov
add
dec
repnz
xchg
push
icebp
sahf
out
and
lods
sub
xor
dec
fisubrl
mov
mov
stc
xor
ret
cmp
test
inc
push
ret
ds
add
les
ljmp
scas
pusha
sub
loope
cmp
std
push
cmp
lahf
scas
inc
pop
jecxz
inc
out
andl
fidivs
and
loope
imul
mov
pop
mov
xchg
cmp
lret
xchg
test
shlb
movsb
push
dec
xchg
ret
stos
add
xor
popa
lret
cmp
sbb
mov
push
gs
push
sbb
out
les
or
fldenv
adc
sub
pop
in
mov
adc
mov
mov
cmp
mov
addb
insb
loope
imul
out
lea
xchg
jno
push
or
sbb
pop
rcll
xchg
xchg
sub
mov
mov
and
mov
push
ror
or
mov
sbb
xor
add
xchg
loop
push
pusha
cmpb
pusha
pushf
pushf
lea
jne
clc
xor
bts
lahf
mov
not
test
add
rol
or
mov
bt
jmp
pushl
lea
je
call
insl
mov
mov
mov
pop
mov
pop
sub
or
into
sub
sbb
lock
mov
xchg
test
push
adc
cli
push
cmpsl
or
dec
sti
pop
repz
sbb
dec
lea
cld
std
push
pop
dec
testb
es
addb
pop
cltd
mov
mov
pop
push
pop
loop
cli
cmc
fcmovnbe
push
shrl
bound
pop
cmpb
push
daa
and
into
js
xchg
ret
hlt
lods
addl
cmc
dec
lods
ficoml
and
outsl
sub
jnp
and
insl
outsl
stc
xlat
mov
xor
sub
lds
aad
out
in
cmpsl
push
iret
pop
mov
mov
push
cwtl
clc
add
test
cmp
fists
xor
int
pop
in
sub
sti
pop
mov
bswap
xor
adc
iret
pop
and
es
push
xchg
lret
jbe
xor
or
or
pop
push
and
popf
pop
loop
das
fstpt
ja
xchg
mov
out
sbb
stos
push
and
loopne
test
sbb
xchg
or
leave
mov
sbb
xorb
mov
daa
mov
add
out
flds
sub
loopne
pop
add
loop
sub
mov
std
dec
mov
jl
sbbl
out
jle
int3
les
mov
mov
cmpsl
push
fnstsw
out
pop
add
inc
cmp
test
iret
cmp
dec
jo
jecxz
inc
push
or
imul
sub
popf
xchg
dec
insb
or
xor
test
dec
push
xor
mov
mov
lret
mov
mov
shrl
outsb
mov
lahf
pushf
pop
fildl
aas
mov
loope
lea
test
jecxz
stos
scas
shlb
in
push
fcomi
mov
rorb
push
mov
gs
add
loope
repz
ja
lods
inc
test
into
sbb
mov
test
ljmp
cli
pop
mov
sub
mov
and
push
mov
add
sahf
in
sub
cmpl
sbbb
pop
push
loop
out
mov
xor
sbb
pop
hlt
xor
or
arpl
mov
xchg
leave
mov
or
sti
leave
inc
mov
sub
pop
inc
push
ja
jnp
shl
pop
mov
dec
cmp
cmpsb
mov
add
inc
pop
aas
shll
sahf
loope
pop
mov
jmp
in
xor
movsl
popa
movsb
icebp
nop
adc
cli
add
fcmovnb
lea
add
or
dec
mov
or
cmp
jmp
sets
sbb
sub
lea
not
pusha
lods
mov
sub
pushf
push
rol
xor
or
add
call
fldt
loopne
fldt
adc
cld
lcall
call
lea
jp
jl
xchg
int3
jmp
sbb
test
mov
sub
pop
mov
rclb
and
xlat
fsubs
dec
xchg
mov
gs
pop
inc
pushf
cmp
adc
fsubp
shr
out
arpl
xlat
mov
lds
mov
xchg
add
lret
mov
xchg
pusha
lret
sbb
or
fwait
shrb
lods
stc
pop
push
mov
ret
push
movsb
out
pop
jle
pop
lods
stos
push
and
push
push
xor
sti
mov
js
pop
xchg
jg
bound
cmc
pop
jp
test
sub
pusha
push
jmp
pushf
test
add
bt
pushl
cmc
movzwl
inc
sub
mov
clc
cmp
cmp
clc
add
bt
jmp
lea
pusha
movb
pop
push
lahf
mov
lea
mov
lea
pushf
push
movl
pushf
pushl
mov
pushf
pushl
ret
push
mov
jmp
or
xchg
xchg
icebp
imul
sub
cmpsb
and
cmpsl
rolb
stc
insb
mov
or
fs
cmp
sbb
int
mov
jne
mov
aad
pop
pop
mov
and
data16
cmpsl
pop
std
clc
fldcw
call
jge
cmpl
mov
shlb
sub
xor
xlat
cmp
and
push
cli
sub
xor
imul
push
outsb
push
add
adc
pop
adc
test
mov
mov
pop
movb
pop
outsb
adc
push
and
mov
mov
gs
fadd
call
xor
sbb
dec
cmpsb
xor
cmp
inc
xchg
inc
rcrb
pop
sbb
test
mov
cmp
dec
and
sbb
mov
mov
dec
mov
push
cmp
sub
adc
cmp
cmpsl
das
and
pop
out
jl
pop
or
clc
sub
out
ljmp
pop
mov
movsb
stc
inc
scas
push
cmp
adcl
jle
add
lret
add
ffree
test
bound
mov
push
dec
pusha
pushf
out
pop
pop
push
adc
cwtl
cwtl
push
push
and
daa
inc
enter
cs
push
pop
lret
xchg
dec
mov
xlat
mov
movzbl
mov
bt
jmp
call
ret
cmpsb
fwait
sbb
int3
daa
call
and
bound
pop
or
pop
hlt
sbb
xor
data16
jmp
lea
jno
mov
rcrl
jnp
dec
mov
and
and
mov
idiv
jle
test
xor
ljmp
cld
adc
xchg
int
pusha
sbb
fiadds
xchg
loopne
add
dec
out
and
or
stos
fstl
pop
into
scas
sbb
dec
pop
push
arpl
test
mov
lock
insb
les
stc
mov
dec
jecxz
and
mov
dec
popa
loop
loope
xor
mov
and
adc
xchg
mov
popa
push
fildll
scas
out
push
pop
mov
or
dec
rorb
cmc
gs
aad
loopne
repz
lods
jmp
xor
orb
fwait
adc
ja
add
ljmp
inc
fwait
sbb
jne
dec
andb
jnp
inc
mov
js
sub
or
sbb
pop
cmp
xchg
push
dec
popa
leave
les
adc
and
fsubs
mov
andb
out
mov
mov
fwait
repz
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
in
imul
sub
test
add
add
ret
xchg
mov
cs
pushf
call
fbstp
and
test
aas
or
mov
les
test
icebp
mov
push
inc
push
movl
jp
push
rol
aam
fldl
and
in
adc
pop
jle
xor
aam
mov
clc
cmpsl
xchg
inc
cmp
cmp
cmpsb
clc
mov
movsb
stos
test
fidivrl
aaa
cld
pop
mov
push
enter
dec
cmpsb
into
movsb
roll
das
icebp
xlat
sub
les
adc
fs
aas
dec
mov
pop
xlat
pop
mov
jo
add
adc
out
int3
adc
movsb
aam
std
sahf
or
jnp
ljmp
sub
es
sub
xchg
out
js
js
in
cld
and
sbb
mov
push
xchg
adc
or
negl
xor
ja
mov
loop
push
pushf
movl
mov
jmp
cmc
jg
push
repnz
mov
lods
aas
stos
inc
sub
incb
jecxz
push
fildll
fwait
xchg
pop
test
cmpsb
int
je
dec
xor
fldln2
test
outsl
mov
and
ja
fucomp
pop
divb
mov
xorl
cmc
and
cmpsb
cmpsb
dec
xor
xchg
jo
fdivrp
xor
inc
in
adcb
inc
pop
lret
out
into
stos
or
out
outsl
pop
rclb
mov
leave
add
push
push
add
pop
mov
dec
cld
data16
das
inc
xchg
pop
ffreep
xor
cmp
mov
adc
hlt
test
mov
cwtl
out
nop
mov
adc
pop
cmp
cs
mov
jo
mov
js
pop
pop
stos
fisttpll
mov
jle
xor
cmp
lret
sub
les
dec
in
lods
xchg
inc
and
xlat
mov
dec
mov
cmpsl
ljmp
mov
pop
stos
outsb
aaa
sub
push
fisubs
mov
push
movntq
mov
into
sub
pop
movsb
das
inc
dec
popf
dec
push
mov
and
sahf
out
into
in
sbb
dec
lcall
add
pushf
pusha
mov
out
mov
adc
in
mov
push
dec
mov
fildl
das
rcrl
xor
dec
repz
repz
dec
mov
popf
mov
into
mov
add
mov
movsl
loope
mov
daa
adc
mov
pop
dec
in
mov
adc
loop
into
nop
mov
outsb
xchg
xchg
add
dec
in
xor
mov
bound
pop
pop
je
mov
mov
mov
clc
rorl
repnz
movsl
add
mov
dec
dec
adc
rcrb
das
and
push
push
xlat
mov
js
in
stc
clc
mov
mov
ja
mov
push
lods
sub
sahf
stos
test
cmp
mov
lods
mov
xchg
fcmovbe
mov
shlb
lret
call
scas
mov
dec
jmp
mov
xchg
sbb
test
sbbb
sbb
stos
push
mov
ja
mov
push
add
ret
xor
out
xlat
cmp
adc
sub
push
jnp
xchg
add
xorl
sbbl
in
cmp
rol
push
mov
stc
mov
pusha
rol
pushf
add
cmc
rol
bt
sub
cmp
bt
bt
mov
call
int3
aas
jl
jle
cmpsb
cwtl
fwait
call
rcll
outsl
mov
rclb
ja
cmp
adc
pop
and
inc
repnz
push
push
sbb
outsl
fcmovne
mov
push
mov
and
adc
pop
cwtl
cmc
rcl
push
push
data16
push
jp
incb
jmp
repnz
xchg
mov
mov
icebp
xchg
or
movw
mov
pushl
pushf
lea
je
push
pusha
lea
je
lea
xchg
pusha
movzwl
lea
lea
call
stc
add
stc
pusha
stc
not
test
std
clc
pushw
popfw
call
es
sub
mov
jecxz
cmp
stc
test
xchg
sbb
hlt
push
aam
and
in
xor
pop
mov
inc
cld
shrl
push
push
orb
xchg
push
sub
and
je
jmp
add
fisttps
jo
movsb
add
insb
int3
jnp
cmp
pop
fistl
pop
sahf
out
test
cmp
sub
icebp
insb
in
fs
sbb
dec
mov
mov
mov
pop
leave
or
in
inc
add
push
int3
iret
fs
adc
jnp
fidivrl
adc
pop
or
sub
sahf
fldenv
out
es
jmp
repnz
and
mov
ljmp
cmp
inc
jbe
xchg
mov
sti
out
arpl
adc
lret
mov
mov
inc
xchg
or
out
push
sub
or
fimull
out
xchg
es
out
sub
mov
fs
push
xor
pop
loopne
xchg
cli
pop
jecxz
sbb
inc
stc
inc
cmp
ficompl
inc
sbb
out
inc
sub
nop
inc
pop
pop
cmpsb
cltd
fstpt
jmp
xchg
add
dec
loope
loop
push
sbb
push
dec
jg
push
mov
pop
push
clc
mov
mov
push
lahf
popf
xchg
inc
sbb
mov
call
xchg
jg
cmpsl
pop
pop
in
ficompl
scas
std
pop
or
fsubl
repz
or
cmp
adc
sub
jg
incl
xchg
pop
mov
in
add
inc
mov
shlb
adc
mull
sbb
inc
xor
popa
cld
add
mov
inc
adc
or
out
mov
fadds
adc
add
cmpsl
jns
lret
add
bound
cmpsl
cmp
fldcw
xchg
lahf
inc
sti
sub
arpl
mov
iret
imul
push
mov
faddl
cmp
add
aaa
loope
sbb
pop
dec
lea
mov
mov
pop
aas
outsl
iret
cmpsl
ljmp
fstpt
clc
jg
cltd
pop
stc
out
ret
mov
fmuls
push
inc
and
mov
xor
repz
cmp
rorl
adc
bound
shll
mov
inc
xchg
sti
adc
pop
xchg
cli
push
and
xlat
and
sbb
push
inc
jnp
fsub
clc
addr16
daa
sbb
jmp
hlt
xchg
or
xchg
pop
adc
mov
or
mov
andnps
scas
in
pop
push
add
fildll
dec
mov
and
mov
fs
sbb
pop
jno
xorb
cltd
push
in
jg
daa
inc
fcoms
and
jp
adc
mov
push
and
scas
arpl
cmpsb
xchg
fdivrs
xchg
mov
addl
jl
add
lret
jp
mov
push
mov
or
or
mov
cs
addl
out
push
scas
lret
jg
fimuls
fldz
and
xor
fs
mov
fsubrl
push
rolb
inc
pop
mov
push
fs
ret
stc
jl
in
filds
lea
or
cltd
out
xchg
stos
fwait
popa
int3
ret
push
jo
stos
xor
fwait
inc
jno
add
int3
xchg
ror
lods
mov
mov
and
sbb
stc
fmull
mov
xchg
mov
test
fstl
sbb
push
stos
je
out
or
inc
xchg
jecxz
fistps
adc
mov
inc
sbb
push
hlt
inc
mov
xor
lods
sbb
xor
addr16
aaa
jnp
popa
mov
aam
mov
cwtl
xchg
arpl
dec
add
in
insl
or
data16
or
pop
sub
stos
inc
stos
mov
and
add
in
xchg
test
std
mov
mov
adc
mov
rcr
mov
cmp
out
fst
pop
cmc
int
cmpsb
add
addr16
inc
in
push
mov
out
dec
dec
das
mov
psubw
cmpsl
int3
fsub
mov
sub
cmc
shll
dec
or
pop
xchg
fs
push
cltd
mov
stos
fildl
divb
pop
insb
orb
xor
push
fcompl
mov
out
out
stos
addr16
sbb
mov
xor
lahf
movq
test
les
pop
adcl
fldenv
fstpl
daa
mov
mov
adc
ret
fcmovb
mov
mov
iret
sub
sbb
lock
mov
xlat
and
leave
hlt
adc
push
sbb
orl
clc
mov
push
xchg
inc
sub
mov
mov
les
popf
inc
inc
cmpsl
lea
mov
test
jg
pop
sarb
inc
xlat
dec
mov
mov
xchg
cmp
fs
adc
mov
and
imul
mov
out
in
inc
cmp
movsl
rcr
loope
mov
fs
leave
cld
insb
scas
aam
cltd
mov
jg
les
pop
pushf
adc
ret
iret
sbb
sub
int
xor
pushf
push
or
and
arpl
clc
jg
mov
pusha
dec
lcall
mov
js
in
xor
rol
or
mov
jp
or
mov
in
imul
xchg
push
lcall
ret
das
dec
pushf
inc
add
jnp
fidivrl
or
dec
insb
push
out
add
and
in
out
lods
dec
call
or
mov
imul
mov
sbb
scas
add
mov
mov
daa
push
push
push
daa
or
mov
xor
cwtl
movsb
push
mov
imul
dec
in
movsl
pop
in
outsl
push
inc
shll
push
and
add
iret
lret
or
lods
fisubl
mov
sti
adc
xchg
mov
or
pop
or
or
ret
xchg
push
shl
jecxz
sbb
sbb
loop
daa
or
push
or
cmp
cmpsl
pop
loopne
clc
hlt
int
lahf
inc
push
mov
fcomp
push
nop
out
push
or
clc
add
add
es
jecxz
jno
add
push
xor
or
rcll
push
mov
callw
mov
mov
popf
sti
inc
mov
push
jnp
shl
stc
loop
or
pop
mov
cmp
rorb
mov
mov
lea
decl
aad
aas
or
jp
out
push
arpl
jp
sbb
jecxz
xchg
out
mov
sbb
fcmovbe
sbbl
mov
sub
inc
fcomip
xchg
pop
enter
stos
icebp
movsb
loope
or
gs
test
mov
cmp
loopne
subb
push
inc
rolb
aas
xor
inc
and
adc
ret
push
lds
mov
andb
repnz
fsubr
bound
fcmovnb
jno
adc
mov
xlat
pop
or
pop
inc
mov
adc
push
adc
xchg
pop
shll
fnstsw
std
or
dec
into
cmpsl
jecxz
adc
push
out
hlt
data16
fdivl
addr16
jl
or
add
pop
idivl
push
pop
stos
or
clc
out
xchg
add
sbb
fwait
clc
pop
js
sti
stc
out
nop
ljmp
xchg
mov
push
mov
sub
imul
addr16
cs
push
into
inc
or
nop
sarl
mov
js
shll
test
in
mov
in
adc
roll
orb
add
adc
out
jb
adc
inc
cmpsl
pushf
mov
insb
lret
lret
int
in
inc
pop
loop
mov
cmp
in
inc
cmc
push
cmovg
data16
aam
je
rcrb
addr16
inc
in
setae
xor
sti
movsl
mov
inc
and
xor
movsb
pop
lahf
add
movsl
mov
xchg
movsl
into
stc
or
dec
mov
data16
or
mov
xor
fnstsw
sbbl
mov
push
in
inc
or
pop
call
hlt
test
dec
in
rcr
add
loope
or
shll
dec
add
repz
cmpsl
xchg
lret
insl
and
bound
inc
mul
xchg
outsl
adc
or
addr16
gs
add
mov
mov
dec
jg
push
sbb
mov
or
mov
sub
sub
and
popf
scas
scas
inc
adc
call
mov
push
int
or
pop
fstpt
pop
sbb
movsl
add
pop
cmp
sbb
add
imul
mov
leave
ror
jecxz
adc
inc
push
stos
mov
fsub
or
xchg
add
xchg
pop
xchg
add
add
cltd
rcl
adc
jle
inc
out
push
in
inc
dec
pop
lea
inc
gs
imul
and
bound
iret
lret
push
push
xchg
lret
push
imul
movsb
into
aam
mov
inc
ret
cmp
push
ss
sbb
and
and
in
mov
jg
test
or
mov
cmpsl
lock
shll
push
mov
mov
push
jp
jnp
mov
mov
jmp
cmp
inc
lea
mov
push
dec
cmp
je
nop
hlt
negb
inc
jg
fistpl
mov
addr16
pop
fs
push
sbb
mov
mov
xor
fs
mov
mov
adc
sbb
loope
cwtl
lock
sub
jmp
mov
nop
mov
cwtl
dec
in
lods
out
inc
shlb
pop
xor
dec
ucomiss
pushf
stc
bound
movsb
pop
xor
in
dec
jecxz
or
ret
push
cmp
mov
jb
inc
rcl
loop
push
inc
jmp
or
xor
cmpb
outsb
ret
inc
or
adc
or
pushf
mov
nop
jbe
bound
xchg
mov
loopne
decl
dec
dec
xchg
push
sub
mov
cmp
lods
sbb
mov
add
hlt
add
sbb
stos
mov
insl
repz
arpl
outsl
and
jle
sbb
adcl
or
mov
sub
add
mov
ret
data16
lret
adc
pop
insl
push
mov
in
testb
std
mov
mov
push
sub
stc
adc
cmc
imul
andl
push
into
xor
out
push
inc
aas
sub
pop
pop
out
and
xchg
cmp
mov
add
mov
mov
push
hlt
loopne
dec
mov
mov
ljmp
inc
and
xchg
mov
push
xchg
clc
pop
mov
popf
test
scas
es
pop
push
in
xchg
cmp
outsl
fcos
and
push
push
push
pop
mov
cs
gs
xor
cs
dec
stos
pop
or
enter
movsl
push
dec
sbb
add
stos
hlt
pop
inc
jmp
mov
lret
xor
shrl
mov
outsl
xchg
sbb
pop
sti
dec
loopew
mov
xchg
inc
sbb
mov
addr16
mov
sub
jnp
inc
jg
es
scas
or
jmp
test
inc
mov
push
adc
jecxz
fnsetpm(287
inc
leave
cld
stc
mov
popf
sbb
add
loope
in
mov
sub
cmp
jns
incb
xlat
push
es
aas
aaa
sub
fidivl
addb
add
jmp
rcrb
mov
mov
in
icebp
pop
mov
mov
mov
push
fcompl
push
lcall
clc
ret
cmovnp
or
sbbb
lret
js
arpl
jnp
sbb
jb
or
sbb
sub
sbb
ret
mov
mov
pushf
adc
mov
cmp
sbb
dec
fstpl
inc
and
scas
addl
cmp
pop
jnp
jge
stc
sbb
xlat
lods
add
int3
sub
cs
cltd
pop
aas
std
cltd
push
or
addr16
dec
pop
pushf
ficomps
pop
jo
sub
iret
stc
push
movsl
adc
adc
mov
xchg
ss
mov
adc
mov
cmp
xor
mov
cmc
fwait
popf
and
cmp
sbb
dec
and
dec
mov
int3
xchg
pop
lcall
fcoml
cmpl
mov
xchg
ficompl
int
mov
rcll
enter
jb
into
dec
inc
or
iret
cmp
lock
dec
sub
sub
fwait
iret
ret
cmp
clc
scas
test
jmp
addr16
in
mov
fidivs
adc
adc
push
or
aad
push
cwtl
hlt
nop
cmpsl
ret
js
int
or
xchg
loope
fs
push
cmp
dec
sti
lds
nop
mov
sbb
cld
scas
inc
clc
ja
or
xor
fbstp
pusha
xlat
outsl
xchg
out
xor
test
mov
sbb
pop
adc
insl
testl
sar
aad
or
jmp
jbe
mov
inc
movsb
sbb
push
inc
aaa
aaa
outsl
mov
pop
insb
sbb
push
jge
jb
push
sti
out
xor
fwait
testb
push
call
and
pop
jnp
bound
xchg
shl
fdivs
sbb
stc
test
add
adc
hlt
repz
mov
xor
mul
mov
mov
inc
jne
imul
inc
push
fnsave
clc
data16
push
inc
mov
ret
xchg
mov
lret
or
adc
jge
stos
sti
aam
cmp
in
mov
jecxz
dec
add
jo
shll
mov
sbb
inc
mov
jecxz
loop
mov
sub
or
adc
out
in
mov
int3
jp
cmp
hlt
in
inc
ret
in
int3
aam
fsubrl
cmp
shr
add
jge
dec
mov
sub
aas
ret
enter
rorb
js
mov
mov
inc
jle
mov
ret
inc
adc
ja
pop
in
test
add
push
jecxz
lea
repz
jns
and
inc
lods
dec
cmpsb
push
dec
xor
lret
in
and
xchg
rcll
fisubrs
sub
inc
jns
mov
jg
test
cmp
dec
pushf
daa
xor
dec
ret
in
fnstsw
sbb
aaa
pop
mov
movsb
adc
pop
mov
les
dec
iret
push
rcr
xor
mov
sahf
and
pop
out
les
inc
pop
jmp
movsl
out
ljmp
xchg
imul
shl
daa
sbb
dec
and
jne
ret
in
rcll
jnp
jo
outsl
fs
mov
popf
xorl
jg
loopne
mov
sbb
stos
cwtl
int
out
and
sbb
jmp
xorl
daa
and
in
sbb
jg
jns
out
mov
pusha
leave
loop
not
mov
jge
sarb
adc
push
pop
mov
mov
or
shrb
test
hlt
lds
lahf
inc
mov
and
push
lret
cmp
mov
lea
stc
sub
stc
pop
lret
cli
ret
sbb
jecxz
lcall
push
dec
mul
pop
cltd
and
das
pop
cmpsb
pop
and
out
xor
pop
out
aas
sub
stc
dec
clc
pop
repnz
push
jnp
fcoml
repz
mov
mov
or
xchg
jecxz
sub
loop
flds
xor
int
test
mov
mov
inc
aaa
sahf
push
inc
sbb
push
imul
xor
lds
mov
mov
cmpsb
pop
sub
sbb
sbb
dec
dec
or
xor
sub
imul
in
jae
cmp
ja
dec
bound
clc
xchg
push
pop
jg
jecxz
inc
mov
hlt
mov
jge
popf
lea
in
inc
cli
std
arpl
movsb
sbb
cld
in
xchg
dec
add
cmp
sbb
pop
push
sbb
int
cli
xchg
fdivl
std
inc
mov
mov
mov
lods
repz
arpl
sti
mov
fs
fdivrl
cmp
fwait
mov
sbb
loop
dec
mov
or
int3
xchg
add
mov
ffreep
xor
mov
xchg
sub
cld
imul
mov
out
mov
ds
lock
sub
fstpl
or
adc
repz
int3
jp
icebp
popl
fldenv
cmpl
mov
sbb
ror
adc
aad
mov
aad
cld
inc
xor
fs
cld
in
mov
xchg
cmpsl
repz
andb
pop
mov
imul
ret
push
lcall
inc
leave
jmp
stos
sbb
dec
dec
lock
icebp
cmpsl
inc
lret
sbb
in
lods
shrl
mov
jge
aas
sti
das
notb
or
stc
pop
cmp
lret
pop
sub
and
enter
and
cmpl
adc
cmp
jne
cmp
fldl
mov
jne
mov
out
popf
mov
bound
mov
jecxz
in
or
inc
btc
fwait
jge
pop
sbb
add
lock
jmp
daa
push
out
nop
test
cld
and
out
filds
inc
adc
out
xor
or
pop
xchg
fucom
xchg
jl
stc
and
clc
sbb
xor
loop
sahf
cmpsb
xchg
lret
mov
stos
jle
rorb
inc
cwtl
rcrb
jecxz
inc
orb
lods
sbb
cmpsl
mov
mov
mov
cmc
jp
pop
jecxz
fistl
jg
inc
out
cld
mov
pop
int3
add
or
inc
rclb
jne
sbb
mov
imull
hlt
xor
add
movsb
movsb
fimuls
cmpsl
daa
and
mov
push
ljmp
iret
push
pop
ret
sbb
addb
sbb
inc
es
and
inc
outsb
hlt
adc
movsb
dec
inc
sbb
out
xor
into
imul
hlt
scas
loopne
fs
outsl
push
or
out
leave
xchg
cs
scas
repz
test
cmp
and
insl
fcomps
lret
sbb
clc
cmc
stos
lea
xor
sbb
inc
cmc
mov
push
dec
mov
int3
divb
sbb
adc
mov
xor
push
push
lret
push
imul
jecxz
out
jae
xorl
bound
ret
push
fnstenv
fs
in
jmp
test
dec
stos
inc
call
xchg
movsb
test
or
sbb
loope
mov
popa
mov
push
inc
xchg
mov
adc
and
fiaddl
sub
icebp
or
es
adc
shll
push
inc
call
push
inc
xchg
push
cltd
pop
cli
inc
push
mov
xor
mov
scas
movsb
inc
inc
int
or
cmpsb
pop
loop
fwait
test
flds
lcall
enter
and
out
mov
xlat
fs
sbb
or
shl
jp
cld
dec
inc
ror
sub
lea
stos
inc
or
flds
mov
hlt
clc
hlt
in
inc
int
loope
jge
jg
push
ret
jne
sbb
add
daa
jp
addr16
mov
fistpl
fs
repz
ss
jp
sub
inc
adc
cmp
outsb
cmpsl
sbb
loop
cmp
iret
fs
mov
mov
fcoml
mov
mov
or
jp
cs
dec
fwait
sahf
mov
repz
lods
scas
inc
in
popa
fs
add
je
mov
xchg
outsb
call
iret
out
push
movd
into
and
int
jae
insb
rcr
dec
stos
and
cltd
iret
cmpsl
mov
xchg
sbb
xlat
cmp
pop
jne
sbbl
and
mov
pop
mov
sbb
add
add
jns
xchg
mov
int3
arpl
adc
fnstcw
cltd
mov
ss
pop
int
movsl
lods
arpl
movsl
test
adc
jle
std
rcr
inc
push
xchg
add
es
dec
icebp
push
pusha
mov
test
adcb
in
std
dec
pop
xlat
add
mov
inc
hlt
mov
jmp
ret
sub
mov
xchg
adc
mov
fadds
iret
adc
fwait
sahf
ret
popa
jge
xor
push
xchg
icebp
addr16
mov
repz
icebp
pushf
cmp
popl
inc
aam
xor
into
test
out
pop
fwait
xchg
pop
fcomp
or
jcxz
or
ret
lahf
jl
fwait
mov
mov
cmpsl
iret
and
popf
add
mov
int
mov
imul
mov
jnp
push
pushf
jnp
adc
mov
movsl
stos
pop
fwait
adc
lods
jae
call
lods
sub
call
inc
insb
xchg
xchg
lods
mov
movsl
stos
adc
pop
aam
xlat
jecxz
or
add
add
aaa
cmp
jge
mov
and
and
fdivrl
mov
negl
mov
aaa
mov
iret
pop
or
inc
dec
or
in
add
mov
shrb
scas
in
pushf
sbb
pushf
das
mov
dec
lods
mov
fs
xchg
push
add
arpl
jo
adc
arpl
test
pop
jge
stos
imul
xor
push
in
jecxz
mov
enter
popf
pop
and
mov
or
rorl
mov
jmp
aas
dec
fwait
sub
stos
push
bound
pop
push
ja
fwait
cltd
or
imul
in
shll
add
xor
pop
pop
test
jnp
cmpsb
mov
aas
ja
movsb
or
lret
or
pusha
jnp
or
jnp
aas
cld
fwait
add
repz
jg
push
in
pop
jae
mov
jo
shll
fisttpl
lods
pcmpgtb
sbb
mov
mov
mov
dec
xor
fdivrs
xchg
mov
aaa
pop
adcl
jae
mov
cs
pop
jecxz
cmp
pop
cld
pushl
xor
inc
rorb
jl
or
sub
xchg
and
inc
push
mov
fdiv
dec
idivl
fildll
sti
fs
push
inc
int
push
ret
mov
sbb
sbb
cvtdq2ps
adc
inc
int
dec
jg
push
mov
mov
popa
into
mov
inc
lea
inc
sub
mov
push
dec
adc
out
or
sbb
jnp
pop
mov
icebp
cmp
bound
adc
and
and
mov
xchg
sbb
inc
mov
rcll
inc
ret
in
xor
adc
pop
loope
negb
and
dec
cmp
cli
sahf
fwait
and
cmpps
int
cli
xchg
mov
inc
loop
cmp
push
fstpt
xor
add
and
cmp
test
fucomp
xor
xor
jmp
ljmp
xor
test
dec
cmpsl
sbb
push
adc
out
gs
out
mov
stos
xchg
int3
add
cmc
adc
pop
fcomps
popa
jge
xor
cmc
mov
imul
in
inc
jno
dec
sub
inc
xchg
int3
jmp
jg
cmp
cmpsb
fdivl
adc
inc
dec
mov
out
and
mov
dec
cs
jg
cli
test
fcoml
inc
out
lcall
jno
stos
rcrl
pop
sbb
xor
fistps
pop
mov
inc
mov
movsl
pop
mov
pop
lods
call
test
push
mov
dec
xchg
pushf
mov
orb
mov
inc
adc
adc
data16
and
fwait
pop
dec
pop
in
sbb
add
test
jge
mov
inc
pop
xlat
adc
mov
addr16
cld
push
xlat
in
sub
dec
loop
ret
mov
cltd
xlat
xchg
repnz
and
and
xor
lock
fisttpll
sbbl
orl
jb
inc
inc
enter
and
cmp
repz
vpsllw
jecxz
mov
arpl
mov
xor
mov
sbb
ljmp
inc
iret
xchg
mov
nop
fwait
sbb
test
mov
gs
mov
add
orl
push
pop
lahf
sbb
bound
stos
sbb
sub
out
xor
fldenv
pop
sbb
call
adcb
xor
push
aaa
mov
mov
cmpsb
mov
push
add
lods
cs
lret
sub
pop
cltd
mov
in
sbb
fdivr
sbb
and
xor
in
lahf
fisttpl
cmp
sti
stos
cmove
dec
inc
or
pavgw
mov
nop
jle
cmp
mov
pop
imul
fs
add
shll
sbb
mov
mov
cwtl
pushf
fmul
enter
ja
sbb
addr16
aam
or
mov
repz
cmpsl
mov
xchg
ret
cmovo
cmpsb
mov
addr16
std
mov
xchg
cmp
mov
scas
loopne
sub
call
shll
dec
icebp
push
push
test
sarb
mov
mov
cmp
jge,pt
je
lcall
je
pop
fwait
add
ja
mov
mov
clc
repz
or
sarl
in
push
cli
pushf
dec
cld
jnp
or
imul
and
push
fdivr
das
add
sahf
sub
aas
fbld
lret
loop
mov
out
jmp
inc
cld
sbb
mov
inc
lcall
xor
out
sbb
mov
inc
outsl
pushf
inc
sbb
xor
lea
mov
andb
lahf
imul
ret
mov
add
jge
pushf
lcall
pushf
dec
cmpsb
dec
rcrl
cltd
repz
fcmove
jmp
or
movsl
pop
push
pop
adc
push
mov
stc
aas
xchg
push
lcall
mov
test
lock
outsb
cmpsl
pop
xchg
leave
ja
lret
xchg
mov
xor
out
ffree
pusha
dec
xchg
xlat
aad
fistpll
call
sbb
add
push
dec
scas
call
xchg
pop
pop
pop
xchg
xor
xchg
or
push
mov
lahf
mov
jne
fisttpll
push
sbbb
cli
xor
xchg
mov
out
inc
sbb
loopne
mov
bound
and
dec
xchg
mov
add
out
call
xlat
test
add
mov
subl
fnstsw
xchg
inc
sbb
ret
test
lds
inc
fs
test
push
lret
xor
push
inc
aad
or
mov
movsb
cmpsb
xchg
or
jp
lret
mov
incl
sbb
lcall
clc
mov
adc
fsubrl
and
iret
xlat
sti
fldl
std
loop
outsb
sbb
cmp
fwait
cltd
ret
addr16
mov
mov
test
dec
sub
or
mov
add
mov
lcall
push
mov
and
mov
sbb
adc
bswap
pop
lahf
fcomps
sbb
fs
outsl
out
inc
das
cmp
icebp
stos
sub
sub
shl
outsl
daa
movsb
mov
loope
pop
inc
or
shlb
xchg
or
in
mov
stos
lds
mov
sbb
std
xlat
xor
xchg
lods
popf
in
loopne
loop
jp
insb
adc
test
cmp
push
xor
idivl
jecxz
popa
test
lret
jp
jmp
int
nop
fwait
aad
xlat
adc
outsl
sbb
pop
sbb
or
lea
pop
mov
insl
push
lea
xchg
fucomp
imul
mov
add
addr16
lea
test
xor
jle
mov
fsts
fwait
inc
lods
inc
mov
mov
iret
rcr
sti
xadd
adc
int
add
mov
scas
pop
ffree
xchg
sbb
add
xchg
jns
inc
mov
mov
jo
cs
push
inc
add
or
inc
mov
test
sahf
pop
xchg
jmp
test
fisttps
and
shll
insl
sti
mov
ja
mov
in
dec
mov
scas
add
cld
cmp
mov
ret
xchg
push
cwtl
xlat
lods
mov
lea
mov
fdivrs
cli
scas
rcrb
add
std
inc
shll
fisubs
stos
sbb
into
fmull
data16
out
js
sub
aam
or
loop
pop
cmp
adc
xchg
adc
or
and
jg
sbb
or
dec
std
scas
in
inc
push
mov
mov
scas
mov
xor
imul
jg
das
mov
and
loope
insl
inc
cmpsl
lea
push
push
mov
cmpsl
sti
and
and
rorl
xor
inc
jae
dec
xchg
mov
lock
or
loope
test
and
push
in
sbb
mov
fstl
xor
popf
and
cltd
fmuls
or
fwait
jle
fstpl
in
or
jnp
and
out
add
cmpsl
mov
fcomps
int
test
sbb
int
mov
mov
ret
minps
ja
xor
mov
and
out
mov
jmp
in
fadd
sub
test
rorb
sarl
pop
sbb
mov
fdivl
inc
out
jle
stos
iret
mov
adc
pushf
inc
jecxz
fidivs
add
mov
lret
aaa
xor
call
mov
repnz
addr16
xchg
fimuls
inc
jne
test
aam
mov
lea
insb
jae
xchg
arpl
push
pop
aam
sub
or
iret
sahf
add
stc
stos
mov
cli
cmp
or
nop
into
in
add
push
sbb
sbb
ret
adc
mov
scas
addr16
arpl
aas
mov
inc
xchg
sub
lods
aad
add
mov
pop
sbb
scas
daa
lret
inc
add
sahf
hlt
xor
push
mov
adc
fsubs
xchg
rcr
loope
mov
and
sets
test
sar
pop
cmp
or
xor
int3
ja
xchg
and
fisubl
xchg
fstpl
inc
sti
jg
cmpsl
scas
and
notl
push
inc
add
cmc
sub
or
mov
cmp
inc
int3
test
sarl
cmp
inc
loop
arpl
test
xchg
jg
dec
jmp
xor
shlb
dec
add
pop
call
adc
inc
repz
pop
jp,pn
xchg
inc
inc
ss
mov
repz
lds
xchg
ret
clc
movsb
cmp
out
push
arpl
pop
pop
rcrl
movsl
or
addr16
lock
or
push
and
fcoml
pop
movsb
test
out
jnp
jns
dec
push
inc
iret
ret
movsl
mov
repnz
cmp
push
fucomi
nop
mov
rcrb
ret
mov
jno
jg
sbb
xor
xchg
nopl
in
movsb
sbb
or
jmp
and
insl
push
mov
call
cwtl
daa
cmpsl
push
mov
stos
pop
sub
testb
lcall
mov
pusha
xchg
sbb
nop
or
cwtl
call
pop
mov
or
sti
xor
and
movsb
jmp
stos
icebp
adc
mov
xor
lods
ja
inc
cmp
cltd
out
xchg
es
les
hlt
std
rcl
mov
sub
and
and
push
aad
adc
lea
fwait
and
jg
test
inc
dec
mov
jbe
pushf
xchg
aaa
cmc
jp
jnp,pt
cmpsl
xchg
test
jno
add
mov
lret
daa
das
pushf
xchg
xchg
out
push
or
faddl
sbb
dec
lods
jecxz
scas
push
orl
addl
lret
or
aas
js
mov
ljmp
sbb
aam
or
lahf
mov
sub
frstor
pop
ss
and
cs
arpl
mov
popa
add
mov
mov
insl
addr16
sarb
push
cltd
pop
and
fnstsw
pop
mov
arpl
inc
sti
push
shl
sbb
cmp
fildll
fistpll
test
sbb
jle
cld
pop
inc
push
imul
data16
sbb
push
jne
test
orl
push
fdivrl
mov
int
movsl
lret
mov
cmpsl
push
movsb
fcoml
ret
popf
and
mov
mov
dec
or
push
lods
jge
sbb
ficoml
jae
dec
dec
jecxz
or
sub
loope
jp
adc
std
outsb
dec
popf
daa
or
mov
pop
xchg
pop
popf
mov
xor
in
cmp
pop
iret
in
scas
jmp
aad
cmpsb
xor
or
sbb
xor
sub
outsl
outsl
pop
dec
or
mov
pop
ljmp
imul
andl
sub
imul
scas
sub
mov
movsb
pusha
pop
call
jnp
ret
in
xorl
cmc
cli
push
or
jecxz
loope
xlat
fdivrs
push
jbe
mov
shll
imul
test
sub
cmpsl
dec
fs
out
mov
push
dec
fnstsw
in
aad
cmp
pop
inc
jnp
into
or
xor
rclb
mov
mov
ret
dec
imul
mov
sbb
shrb
fnstenv
adc
jno
cmpsl
loope
rcrb
adc
add
stos
sbb
aaa
aad
imul
add
inc
cmp
mov
push
sub
mov
jne
movsl
mov
call
in
jne
sub
sti
repnz
lock
daa
lret
or
lret
or
divb
cmp
aam
fwait
sti
lods
ljmp
outsb
aam
pop
jg
add
aas
int
pop
sti
jg
xchg
inc
arpl
out
aam
or
mov
in
sbb
out
mov
xchg
ret
mov
cltd
or
cmp
inc
inc
mov
jbe
cwtl
jg
sbb
add
addl
mov
xor
daa
dec
popf
pop
inc
or
or
pusha
cmpsb
inc
ja
push
pop
shll
ss
inc
push
in
into
jmp
movsb
outsl
dec
scas
xchg
and
and
lret
out
int
aam
mov
ret
rorb
sub
inc
jp
incl
aam
sbb
and
mov
jecxz
inc
lods
xor
rolb
nop
gs
in
jmp
xchg
popf
sbb
push
pop
ret
stc
and
fstpl
int
loop
mov
mov
cmp
shrl
or
jp
jecxz
add
inc
xchg
or
add
and
andl
out
mov
idivb
lock
inc
add
stos
mov
xor
mov
lods
add
inc
dec
sub
xchg
ret
push
pop
repnz
ret
xchg
inc
insl
mov
xchg
in
xlat
out
jne
jnp
dec
insb
sub
adc
pop
and
mov
cs
xlat
jg
shlb
out
inc
movsl
es
out
sbb
int3
dec
std
mov
xchg
mov
test
inc
or
fistl
loop
in
xchg
or
imul
shlb
leave
cs
lahf
xchg
fsincos
push
arpl
fucomip
sahf
or
js
sbb
cs
or
cmove
int3
push
aas
jp
mov
stc
xchg
in
mov
int
inc
les
lahf
pop
scas
dec
mov
fdivrp
xor
fdivl
jg
testl
or
xor
inc
mov
retw
xor
xor
mov
xchg
imul
xchg
enter
adcb
rcl
mov
push
popf
adc
loopne
inc
pusha
cmpsl
jp
cli
sarl
out
cwtl
or
inc
test
arpl
insb
leave
in
inc
pop
inc
ficomps
rorl
in
jp
mov
ljmp
push
pop
rorl
mov
sub
out
arpl
dec
out
rcr
xchg
jecxz
lods
inc
mov
xlat
mov
inc
mov
in
cmpsl
sahf
fs
lds
fcmovnb
fidivrl
fwait
xor
call
cs
fs
dec
out
push
add
loop
ret
test
pop
fadds
out
add
movsb
pop
xchg
push
les
cmp
pop
mov
aam
xor
fs
mov
popf
xchg
xlat
out
adc
inc
lds
and
add
jg
mov
cld
mov
inc
ljmp
xchg
mov
sub
aaa
xchg
leave
xchg
pop
addr16
push
jecxz
movsl
mov
xchg
and
andb
repnz
sub
rcrl
jb
sti
adc
pop
in
movsl
sbb
jecxz
insl
sub
xchg
cmp
lods
scas
mov
inc
xlat
stos
mov
stos
push
inc
pop
leave
testl
sbb
iret
frstor
loopne
mov
cli
out
fisttps
movsl
pushf
sti
stc
inc
imul
push
jmp
and
add
nop
xor
cmp
xchg
xchg
lds
adc
movsb
pop
xor
sub
test
iret
lret
ret
sbb
xor
stc
push
pop
lcall
xor
movsb
jmp
arpl
nop
xchg
movsb
rcll
mov
jbe
push
pop
mov
mov
sbb
and
popf
mov
daa
cld
fistps
cmc
inc
or
aam
push
int3
or
and
add
fs
mov
sbb
adc
mov
xor
and
jge
leave
xchg
xor
inc
cmp
int3
lahf
into
mov
fildl
add
inc
jns
and
lret
jmp
aam
xchg
or
fwait
test
pop
mov
lahf
imul
mov
hlt
and
or
sti
jl
ja,pt
imul
lahf
inc
jmp
pop
pop
pop
sub
lods
mov
push
inc
ss
push
in
xchg
cltd
in
test
and
fildl
nop
bswap
out
dec
xor
in
loopne
popf
aam
nop
fwait
mov
aad
std
jnp
mov
fcmovu
or
shll
mov
insb
add
pop
mov
es
jecxz
cmp
or
sub
out
out
stos
add
mov
mov
push
mov
call
add
push
inc
outsb
lahf
imul
push
push
or
int
ret
add
inc
xchg
mov
push
outsl
mov
insl
and
outsb
rorl
add
out
mov
jl
mov
sbb
lods
iret
mov
sbb
stos
xchg
je
jae
daa
or
push
lods
jmp
add
ficompl
pusha
xchg
sti
jg
out
unpcklps
dec
sub
mov
inc
rorl
lret
pop
sbb
sub
cmc
fbstp
lods
or
jbe,pt
add
int
movsl
dec
hlt
and
push
repnz
push
dec
mov
or
and
mov
inc
into
stos
aam
popf
mov
xor
lods
fcoml
mov
inc
push
lods
mov
scas
cmpsb
imul
icebp
out
stc
aaa
lahf
inc
xchg
lods
inc
js
add
pop
aad
pop
adc
gs
mov
jg
outsb
stos
testb
adc
sbb
or
fwait
jmp
xchg
ror
shl
movsb
outsb
bound
idivl
mov
mov
sub
dec
dec
out
and
pop
call
pop
in
jecxz
dec
and
gs
inc
xorb
mov
mov
sub
mov
mov
popf
pop
outsl
clc
sbb
out
inc
sbb
loop
adc
lds
loope
inc
test
popf
int
lret
cmp
and
xchg
cwtl
and
test
xor
scas
dec
pusha
lods
and
ret
lods
aam
scas
fsubs
stos
sbb
nop
mov
popf
mov
pop
lret
mov
dec
xlat
xchg
xchg
adc
aaa
or
inc
in
push
pop
sbb
sub
lcall
pop
dec
test
aad
outsl
push
shrl
mov
cltd
push
test
lock
sbb
and
lea
add
adc
outsl
push
jle
fstp
mov
inc
pop
cld
inc
dec
lea
scas
mov
daa
push
xor
fistpl
xchg
xor
xchg
xchg
and
movsl
in
shl
rolb
nop
sti
daa
inc
ljmp
pusha
inc
or
jp
mov
mov
pop
sub
aad
xor
rorl
jmp
iret
shlb
cmp
jne
mov
pop
pushf
loopne
mov
ret
or
scas
and
mov
pop
aas
xchg
fs
fcoms
push
sbb
mov
out
in
inc
dec
mov
loop
xor
in
addr16
mov
in
dec
mov
test
iret
or
xchg
lret
pusha
push
sub
mov
or
sar
dec
lock
daa
fisttpll
jns
or
and
jecxz
in
mov
bswap
inc
push
das
fdivs
pop
xchg
xchg
aas
mov
stos
sbb
add
sbb
out
sbb
sbb
cmc
sti
movsl
xchg
pop
and
push
inc
xchg
decl
cmpsl
and
arpl
mov
adc
sti
jge
push
and
adc
dec
pushf
in
push
jmp
into
insb
out
xor
mov
pop
jecxz
mov
xchg
insl
mov
scas
and
jl
jecxz,pn
scas
in
sbb
mov
ss
mov
adc
mov
loop
nop
imul
pop
iret
aam
sbb
sahf
das
mov
stos
inc
ljmp
enter
pop
cmpsl
pop
shrb
inc
int
sbb
mov
test
or
sbb
jg
inc
mov
jp
subl
jge
inc
es
jne
icebp
rol
ret
push
adc
andl
mov
mov
push
xlat
jg
sbb
insb
lods
mov
sahf
jp
sbb
data16
sbb
adc
xchg
cwtl
iret
inc
daa
ja
jmp
or
ret
arpl
add
gs
pop
xlat
aad
xor
scas
push
lds
pusha
sub
addr16
dec
aaa
shr
adc
das
movsb
fdivr
sbb
dec
out
in
sub
sbb
adc
fs
sahf
int
ja,pn
and
clc
insb
int
stc
sti
ret
push
xchg
jg
les
in
int
xor
pop
inc
cmp
xchg
or
fisttpll
pop
pop
mov
adc
push
or
sub
mov
adc
pusha
dec
lods
imul
xor
in
jne
sub
mov
lods
or
in
adc
and
jnp
mov
sti
arpl
sbb
inc
shr
nop
fldt
xor
mov
lret
in
jecxz
sub
mov
sar
iret
out
or
and
pop
daa
cmp
enter
cmp
inc
sti
xchg
cli
loop
inc
dec
xchg
insb
and
nop
pop
and
xchg
xor
pop
jb
imul
mov
popa
pop
inc
xor
int
test
out
stos
out
cmp
or
test
fmull
rol
out
sub
movsl
cmpsl
arpl
rcr
or
mov
dec
ret
in
sbb
jmp
imul
sbb
out
outsb
lods
dec
inc
jl
mov
adc
jle
push
movsl
testl
mov
jl
rcl
jmp
ret
mov
cld
loope
cmpsl
push
sbb
std
dec
lahf
fadd
ds
movsb
mov
xor
inc
sahf
popa
pop
ret
mov
jmp
jb
mov
mov
inc
rcl
or
mov
iret
xchg
sub
fsubrl
fwait
mov
call
jae
push
adc
mov
frstor
inc
or
jbe
mov
mov
add
dec
ja
push
mov
in
in
fstps
dec
mov
fsub
pusha
sbbl
cmovle
sub
mov
repnz
add
mov
and
aaa
xlat
add
cld
cwtl
inc
cmp
xor
fwait
jecxz
dec
xchg
cmpb
pop
test
or
xchg
jmp
cmp
cmp
fs
mov
leave
stc
mov
ss
and
cmp
in
mov
xor
pop
xchg
inc
pop
xchg
dec
cmp
cmovle
cmp
pop
out
jb
mov
dec
or
pop
in
and
xchg
scas
inc
popf
cwtl
cmp
and
fimuls
lds
jmp
sbb
pop
cmpsl
popf
cli
std
stc
arpl
and
add
pop
mov
mov
insl
movsl
in
push
mov
ret
arpl
aaa
jno
nop
gs
out
addl
pushf
xor
std
cli
aas
sub
add
xchg
in
pop
or
lea
or
mov
xor
fstpt
push
into
icebp
jns
jp
xor
push
imul
jne
rolb
sbb
push
push
test
jo
addr16
mov
divl
cmc
das
pop
in
adc
std
enter
sbb
popf
xor
adc
sbb
imul
mov
or
fldt
repz
fisttpl
into
add
pop
dec
and
jae
aad
sub
mov
fstpt
orb
ret
fstpt
popw
sbb
or
pop
clc
sbb
std
push
dec
sbb
inc
rol
into
fwait
test
aaa
ret
xchg
leave
push
lods
mov
push
repnz
or
add
sti
xchg
sarb
fiadds
mov
sahf
jmp
pop
les
stc
jmp
aaa
nop
clc
sub
pusha
mov
in
ljmp
aad
fildl
cwtl
sahf
fldt
in
sub
mov
bound
push
je
mov
ljmp
sub
stos
in
lahf
rorl
arpl
stos
cmp
mov
ret
fildl
sub
ret
adc
ja
cmp
add
cwtl
sbb
cmp
sbb
rolb
mov
mov
cmp
iret
int
or
ja
inc
and
fcoml
inc
cld
lds
pusha
lret
iret
sbb
xchg
or
int3
xor
scas
cmp
pusha
popf
adc
sbb
pop
push
daa
into
dec
cmp
or
adc
xchg
sub
add
mov
movsb
ss
ffree
inc
arpl
mov
jecxz
push
pop
stos
arpl
add
or
fmulp
or
xor
or
dec
mov
iret
xchg
fcom
stc
cmc
mov
jg
dec
lea
and
lods
mov
jbe
mov
inc
icebp
ljmp
xor
push
xor
push
call
test
push
or
lahf
jnp
sti
or
mov
and
stos
mov
shld
mov
push
add
inc
mov
leave
pop
mov
jns
adc
ja
and
in
xor
or
sbb
clc
in
jns
aad
dec
cwtl
test
ret
in
outsl
or
lahf
jno
cwtl
neg
insl
mov
inc
lock
stos
lcall
jecxz
loop
imul
jnp
inc
aas
fsubl
inc
cld
data16
push
inc
shlb
ss
repnz
adc
or
std
movsl
into
pop
push
add
fmull
ret
repz
pop
pop
mov
jg
mov
inc
pusha
pusha
mov
pop
idiv
shl
repnz
fstp
and
push
mov
mov
mov
sti
add
js
enter
push
adc
mov
lds
inc
clc
xor
mov
movsl
scas
loop
inc
pop
frstor
xor
inc
fwait
xchg
pop
int
fisubl
data16
cmp
shll
pop
jp
das
cmpsl
and
sub
inc
sbb
out
xchg
push
cmp
sbb
subl
mov
or
mov
inc
pop
addr16
lea
cli
inc
add
stos
xor
test
mull
xchg
mov
inc
mov
mov
xchg
sub
sub
int3
xor
mov
push
cmp
insb
in
jmp
movsl
pop
addr16
xor
fildl
xor
xchg
xor
dec
cmp
push
mov
sub
jne
insl
hlt
pop
sub
cmc
rcll
mov
mov
mov
aam
frstor
enter
dec
add
idiv
xor
sbb
ret
cwtl
push
cmp
popa
xor
hlt
fsubp
lock
sbb
into
mov
mov
push
inc
push
or
sti
inc
mov
mov
jns
sbb
loope
orl
in
adc
mov
sti
jno
pop
dec
sbb
push
aam
sub
ja
mov
fwait
xor
cwtl
mov
shl
rclb
adc
mov
mov
in
xorb
sbb
dec
sbb
cld
mov
arpl
jecxz
js
test
int
cmp
aam
dec
sub
in
jne
adc
es
sub
dec
add
cmp
loopne
jnp
mull
test
pop
mov
xchg
in
xlat
lods
pop
xchg
xor
test
adc
sahf
add
cmpsb
arpl
insb
pop
hlt
push
sub
inc
inc
pop
mov
rcl
cmpsb
xlat
iret
push
add
xor
or
mov
addr16
inc
add
xor
out
clc
idiv
lahf
je
pop
xchg
cmpsl
out
inc
bound
xchg
sub
int
and
ret
and
and
xchg
fs
iret
push
sbb
xchg
and
out
inc
xor
fsubl
mov
in
cld
jecxz
js
cltd
in
test
mov
stos
cmp
not
pop
mov
push
xchg
adc
push
daa
fcomip
xor
dec
addr16
jb
cs
ss
imul
cs
xchg
lahf
outsb
int3
bound
daa
adc
nop
data16
mov
push
add
into
add
jl
push
es
mov
and
out
loope
nop
push
int
adc
incl
adc
js
pop
nop
out
pop
push
xchg
jg
cmpsl
mov
xor
ja
and
out
sarb
loope
das
jge
push
out
inc
aas
cli
dec
add
xor
mov
mov
push
or
xor
mov
iret
out
cmpsb
movsl
and
sub
inc
std
mov
sub
pop
jnp
lret
out
or
leave
rorl
dec
mov
push
ret
jmp
mov
adc
je
mov
or
out
xchg
in
mov
cmp
add
jle
mov
pop
cmp
mov
xchg
xchg
out
dec
and
jne
popf
pop
les
sahf
xchg
imul
sti
or
into
fs
sub
popa
mov
pushf
mov
mov
sub
pushf
out
jg
ficomps
sbb
nop
movmskps
cld
test
mov
call
xor
mov
inc
test
cmp
cmp
mov
jge
ja
movsb
jl
inc
dec
dec
das
mov
jecxz
push
pop
movsl
pop
ret
sbb
inc
mov
fisttps
hlt
adcb
push
dec
dec
jmp
push
sub
jmp
arpl
sbbb
hlt
sbb
mov
inc
or
mov
rorb
insb
in
icebp
stos
js
cmp
cs
sub
jg
out
xor
push
test
push
sbb
filds
dec
dec
cmp
mov
jo
and
into
pop
ds
cmp
jns
test
mov
cmp
jnp
rorl
fs
fldl
dec
popl
xchg
push
sub
stos
mov
sbb
bound
inc
cltd
sbb
rcrl
mov
dec
xor
ret
adc
jbe
inc
dec
test
test
adc
mov
xor
add
inc
jae
cltd
cmc
gs
push
add
adc
imul
jecxz
mov
rclb
inc
iret
or
sub
xchg
lea
shll
fsubl
lcall
lea
pop
mov
add
inc
pop
cwtl
xchg
je
jnp
xchg
iret
fst
inc
pop
jne
pusha
adc
sbb
idivb
adc
fs
icebp
setp
popf
mov
mov
xor
mov
or
adc
cwtl
jge
out
push
or
pop
mov
adc
mov
es
mov
stos
pushf
inc
stos
inc
jbe
sub
push
loopne
sub
jg
add
les
or
jb
out
pop
push
or
out
push
jge
push
add
sub
outsl
or
cmpb
nop
notl
xchg
mov
mov
mov
inc
cmp
daa
xchg
hlt
je
fldt
sbb
push
in
mov
mov
mov
push
dec
hlt
xchg
sub
scas
insl
xor
adc
movsl
jmp
fdivrs
test
jl
lcall
push
sahf
fs
pop
ret
pop
jb
or
xchg
jbe
in
mov
push
aaa
adcl
inc
rorl
iret
adc
or
enter
arpl
xlat
sbb
call
cltd
mov
sbb
fbld
mov
inc
sub
mov
or
das
lret
cwtl
inc
push
dec
adc
adc
sub
inc
cmp
cmpsb
je
out
push
xor
pop
xlat
xrelease
dec
sub
inc
sti
mov
jp
push
in
sbb
out
or
cwtl
mov
in
test
dec
ret
call
add
stos
cwtl
inc
push
xchg
cmp
push
jecxz
js
daa
pop
dec
jecxz
inc
scas
jecxz
sub
or
and
subl
sarl
xor
dec
popa
pop
cli
lahf
pop
jecxz
arpl
adc
repnz
mov
js
into
jmp
jg
popf
cmpsl
inc
sub
add
push
mov
pop
jno
gs
pop
sub
scas
add
cmpsb
test
lea
mov
push
fsubp
or
sbb
aam
push
int3
inc
dec
sti
dec
arpl
mov
scas
xor
cmp
xor
inc
in
in
addr16
sahf
push
fs
rcrl
pop
and
stos
mov
inc
push
enter
push
jae
rorb
add
imul
in
lea
aam
aaa
adc
or
enter
dec
jno
stos
imulb
rorl
das
movsb
call
mov
xor
xor
push
or
sub
imul
movsb
pop
enter
loope
mov
add
mov
jg
test
inc
pushf
dec
lds
pop
add
dec
xor
mov
or
sbb
cmp
mov
jmp
int
cmp
lcallw
adc
push
flds
mov
sbb
mov
ret
xlat
push
mov
mov
xchg
lret
jmp
push
pop
or
in
jg
and
lahf
stos
call
dec
adc
dec
add
xchg
lds
jg
sti
testl
pop
or
cmp
cmp
aad
jecxz
fs
jmp
cmp
mov
ret
inc
hlt
xchg
insb
xlat
adc
lods
add
scas
out
int
mov
xchg
jbe
lret
test
dec
xor
dec
mov
insb
and
fmuls
in
imul
mov
mov
mov
inc
test
popf
sub
sub
test
adc
adc
in
inc
mov
jo
in
xor
call
cmpsb
in
or
test
leave
repz
scas
mov
stc
xorb
inc
ret
adc
sti
pop
inc
ljmp
lret
mov
mov
or
loopne
fucomip
xor
cmp
sbb
and
mov
mov
fwait
mov
jp
ret
popa
pop
xchg
or
sbb
nop
cltd
cmp
adc
push
pop
sub
lret
sbb
sti
jmp
mov
xchg
or
dec
xchg
fdivs
repz
fs
in
or
cld
fwait
or
xchg
inc
enter
mov
adc
rorl
xor
push
xchg
mov
in
aad
arpl
sub
in
inc
dec
push
mov
xor
int3
jg
xchg
jo
in
and
lea
dec
pop
popa
sbbb
mov
mov
iret
fcomps
or
jae
outsb
jp
or
flds
xchg
xor
movsl
sti
nop
jae
jp
shrl
mov
rorb
mov
sbb
pop
mov
jmp
xor
lea
adc
lahf
ret
dec
ret
inc
cltd
je
or
addr16
mov
lock
cmp
notb
sub
shrb
rcll
add
sub
mov
and
jl
mov
mov
in
and
jmp
xchg
and
cmp
lods
xor
stos
xchg
ljmp
adc
mov
cmpsl
xor
jae
or
mov
xchg
xchg
sub
std
sub
testb
push
inc
xchg
mov
fsubp
and
xor
mov
in
repnz
dec
enter
pop
stos
lret
mov
dec
dec
lock
cmpsl
inc
mov
pop
testb
ds
in
imul
movsb
mov
frstor
xchg
add
imul
adc
fnstcw
xchg
add
int3
jo
sbb
sar
pop
and
jecxz
out
inc
add
dec
push
arpl
insb
lcall
fisubl
mov
nop
or
test
dec
test
stos
sub
pop
pop
jl
pop
pmaxub
shll
mov
sbb
cmpsb
sub
inc
push
out
jmp
or
daa
push
pop
out
in
das
add
in
sub
mov
mov
fadds
ret
dec
jle
into
clc
xchg
jecxz
or
inc
xor
jl
data16
inc
fiaddl
add
aaa
or
cwtl
and
and
inc
inc
into
mov
mov
data16
pusha
fucomi
mov
inc
dec
sub
mov
in
cmp
addr16
stc
fstp
js
sbb
imul
or
movsl
or
push
mov
fmull
pop
andb
movsb
cmp
js
xchg
cmp
jecxz
sub
sbb
repnz
sarl
xchg
mov
sbb
xor
mov
outsl
jmp
xlat
xchg
sub
cld
adcb
and
cmpsb
xchg
inc
cmp
out
pop
in
fnstcw
in
cli
push
mov
push
cmp
xchg
or
dec
push
mov
scas
fsubr
imul
cmp
cld
dec
jmp
inc
out
pop
scas
jnp
jmp
mov
pushl
cs
mov
jg
ffree
in
clc
sarl
jno
and
cld
lret
vdivps
mov
cmpsl
push
mov
jg
addr16
dec
sub
push
inc
test
xor
addl
in
adc
arpl
ret
mov
dec
mov
gs
fdivrl
and
mov
ffree
ljmp
inc
imul
insb
in
inc
rorl
pop
jmp
pop
mov
pushf
dec
mov
mov
inc
pop
pusha
clc
pop
clc
xor
inc
loope
sbb
fs
les
int3
jle
mov
daa
enter
jns
and
nop
push
jl
xor
and
scas
mov
lahf
mov
iret
in
xor
xor
push
xchg
pop
aaa
out
jg
mov
fcmovb
xchg
lods
jg
cmpsl
iret
pop
popa
aad
stos
push
arpl
mov
pusha
ror
adc
sub
mov
and
lret
stos
movsb
mov
jge
pop
mov
call
es
repz
jle
ss
iret
sbb
add
or
push
int3
sub
andb
push
inc
aad
daa
das
push
mov
rcrb
dec
fdivr
fbstp
mov
loopne
and
pop
ret
into
es
pop
pop
inc
imul
lahf
xchg
adc
sub
iret
push
dec
fsubrs
or
sahf
out
lcall
xchg
pushf
or
in
push
xchg
stos
dec
mov
cmp
inc
mov
jecxz
and
mov
out
mov
mov
mov
or
in
lret
xchg
mov
repnz
sub
pop
adc
imulb
inc
jno
inc
cwtl
inc
cmpl
jg
jne
fsubr
lret
movsl
lret
cwtl
in
repz
pusha
aam
lea
imul
jo
dec
push
pop
in
jp
push
outsl
addr16
mov
movsb
stc
int3
shlb
adc
int
nop
fdivs
scas
dec
mov
les
int3
negb
sub
and
int3
inc
in
cwtl
test
pop
sti
cmpsl
out
push
cmpsb
popf
xchg
in
aad
cmpsl
mov
fisttpl
nop
cmp
into
subl
mov
inc
rol
movsb
jmp
jnp
cmpb
stos
jnp
mov
addr16
push
inc
pushf
jmp
cmpsl
inc
or
daa
iret
mov
in
jp
and
sti
ds
add
shrl
pushf
sub
aad
cltd
insb
add
orb
xchg
dec
sbb
adc
je
xor
sbb
dec
sbb
dec
xor
inc
stos
es
jnp
fadd
addr16
lret
arpl
dec
xor
xor
push
movsb
push
scas
int
loope
sub
arpl
pop
mov
inc
and
or
dec
jbe
aad
es
sub
add
xchg
test
mov
push
pusha
scas
fdiv
xchg
lds
or
add
add
sbb
pop
inc
xchg
fldt
xlat
mov
outsb
decb
jmp
lods
aam
into
lret
mov
sbb
pop
pop
sbb
mov
adc
or
js
jecxz
mov
inc
and
fadd
dec
in
in
cmpsl
dec
scas
data16
int
scas
inc
loop
jnp
jb
push
das
into
or
jae
xchg
ficomps
mov
adc
cld
shll
in
inc
sub
stc
adc
pop
or
adc
stc
push
out
sub
and
mov
mov
or
fisttpll
cmc
out
in
inc
aas
lods
loope
pop
xor
sbb
rcrl
outsl
jns
rcrl
mov
loopne
cmc
js
or
ja
lret
jae
arpl
out
call
push
mov
lret
popf
shlb
or
or
pop
enter
sbb
inc
repnz
enter
xchg
pop
int
mov
adc
rcrb
sti
mov
mov
imulb
jmp
int
ret
jp
shrb
lret
dec
sub
sbb
in
rcrl
fistpll
xor
jp
stos
into
pushf
mov
jae
or
std
pop
and
enter
jle
jno
push
aam
add
xor
es
popa
lret
lahf
mov
xchg
dec
rcl
les
jno
xchg
xchg
jle
xor
dec
call
mov
dec
xorb
and
cltd
jmp
cmp
fimull
inc
xchg
sti
push
cs
push
and
push
sbb
cltd
sub
ljmp
orps
mov
mov
sbb
rol
cmpsl
cmp
xor
xchg
or
mov
lret
adc
dec
iret
sbb
fadd
cmc
inc
into
xlat
adc
sub
cwtl
movsl
divb
leave
jle
xchg
inc
sub
inc
mov
mov
lods
fcompl
mov
cmp
add
jg
inc
shlb
test
jbe
push
sti
ret
icebp
pop
int3
push
mov
and
mov
mov
sbb
push
mov
lea
lea
jns
stos
aam
addl
push
fidivl
mov
sbb
jmp
inc
in
in
cwtl
cli
add
xchg
sbb
cltd
inc
push
iret
mov
dec
pop
add
jp
mov
lds
rorl
adc
adc
add
push
adc
mov
pushf
in
sbb
inc
pop
movsl
add
dec
mov
xchg
mov
mov
sub
pop
add
xchg
pop
mov
sub
inc
mov
dec
ret
clc
mov
test
je
adc
in
mov
push
std
and
sub
xchg
lods
cmp
add
sub
arpl
fiadds
cmovp
jb
and
cmp
in
jg
pop
mov
das
cltd
sbb
cmp
add
xchg
jle
andb
inc
aaa
fildl
loop
ss
sub
rorb
add
mov
pop
out
fstps
pop
and
jecxz
push
push
and
xchg
or
sbb
stos
jmp
insb
jecxz
and
icebp
test
sbb
faddl
pop
inc
jmp
lea
repz
aaa
sbb
inc
push
shll
sub
or
xchg
adc
sub
push
movnti
enter
movsb
push
or
sar
popa
pop
mov
add
adc
repnz
mov
fldt
inc
push
dec
sbbb
out
je
mov
lret
and
mov
lret
mov
clc
inc
xchg
mov
psraw
or
jae
pop
mov
dec
or
fmul
fsubs
hlt
push
mov
shll
mov
lea
jns
mov
test
add
out
shlb
mov
scas
lahf
jge
in
xor
add
mov
addr16
rcl
add
mov
pop
sub
push
lods
loop
jbe
cmpsl
subb
shl
pop
and
inc
pop
xor
andb
and
jp
fisubrl
mov
icebp
std
xchg
shlb
inc
adc
flds
or
and
mov
mov
push
mov
xchg
mov
shr
loope
xorl
mov
fnstsw
ret
dec
and
mov
xchg
sub
subl
jg
lods
int3
arpl
lea
push
pop
sub
test
adc
mov
jg
cmp
cmp
inc
lock
repnz
and
dec
mov
xor
cmp
mov
enter
sti
lea
inc
addr16
mov
jne
sub
test
loop
xor
sahf
xchg
pop
inc
xchg
jmp
mov
loope
jle
daa
stos
popf
sbb
mov
add
iret
int3
lret
rcrb
imul
xor
adc
inc
repnz
inc
fs
xchg
mov
jp
loope
lea
or
repnz
inc
sbb
cmp
jmp
imul
aad
and
adc
lods
and
int
dec
pop
data16
fcmove
data16
fwait
inc
lret
sahf
lret
out
stos
jmp
bnd
mov
movl
jge
jecxz
inc
test
out
mov
cmc
add
mov
gs
xor
fxch
out
jns
mov
jmp
add
test
sub
mov
pop
jbe
fsub
repz
outsl
loop
push
mov
pop
in
pusha
sub
xor
mov
enter
push
mov
pop
pop
inc
jle
cmc
mov
dec
icebp
mov
scas
imul
dec
or
inc
or
cmpsb
xor
add
pop
lea
pop
in
fldcw
inc
cmp
not
arpl
and
popa
cli
inc
xlat
push
stos
push
insl
add
lock
mov
outsb
mov
outsl
ffree
or
push
call
mov
jecxz
cld
fwait
cli
add
lock
jo
loop
pushf
rclb
pop
pop
test
adc
inc
hlt
imul
rolb
lea
push
cwtl
push
cmpsb
xchg
sti
mov
pop
pushf
mov
inc
out
aam
adc
pop
movsb
orb
and
dec
int3
pop
movsb
jnp
push
nop
xor
pop
push
xchg
jns
sbbl
push
mov
sahf
popa
sbb
jp
push
jbe
or
stos
daa
inc
xor
sub
adc
xchg
out
std
sbb
cmpsl
xchg
mov
jbe
sbb
es
mov
in
jae
xchg
shll
hlt
stc
aam
pop
mov
fsubl
movsl
lret
jne
das
orb
insb
stos
test
lret
jle
inc
mov
ja
cmp
sbb
xor
cwtl
shlb
test
push
and
fwait
shll
dec
push
cmp
ret
xchg
mov
sub
aaa
xor
call
sub
sbb
pop
sbb
in
stos
shr
jg
inc
inc
mov
fwait
arpl
addr16
in
ret
sub
in
and
xchg
xor
mov
loop
mov
push
ret
imul
movsb
hlt
mov
mov
cmp
aas
popa
fwait
and
mov
fs
cmp
and
inc
inc
sti
inc
mov
mov
mov
push
or
xor
aam
cld
add
or
pop
inc
icebp
ficoml
mov
dec
stos
lret
xor
xchg
mov
cmpb
inc
fistpll
pop
xlat
and
test
mov
pop
and
xchg
inc
mov
sub
mov
iret
addr16
xor
out
push
insb
ret
xorl
clc
pop
cmp
mov
scas
xchg
insl
lret
loope
inc
push
mov
or
call
add
or
orb
rcrb
or
lahf
fisubrs
lret
xchg
ret
lea
add
aas
mov
add
mov
push
lea
insb
lods
pop
cmp
mov
mov
mov
pop
test
pop
outsl
int3
out
rolb
scas
rcr
pop
out
pushf
pop
stos
mov
fld
lcall
iret
mov
maskmovq
mull
cmpsl
cmpsl
imul
es
add
mov
dec
or
mov
sub
shr
out
pop
inc
test
in
das
imul
movsl
mov
int3
push
inc
lcall
mov
push
sahf
into
jbe
push
jmp
out
push
xchg
lret
mov
ret
vmread
loop
xchg
inc
or
les
js
mov
movsl
xlat
pop
jle
js
jb
cwtl
test
dec
push
fs
push
fnstenv
mov
scas
daa
pushf
mov
fdivs
fnstcw
adc
sbb
pop
and
nop
xchg
repnz
or
xor
aaa
mov
pop
push
xchg
in
sub
andb
in
cmp
or
jg
out
fcoml
dec
xor
xchg
jns
inc
out
aam
and
std
pop
pop
pop
xchg
sbb
push
or
fcmovnu
mov
add
xor
jecxz
xlat
mov
in
adcb
roll
sbb
ret
jns
sbb
rclb
cmpsb
shll
adc
js
imul
xor
sub
lret
sbb
add
mov
mov
repnz
or
mov
divl
ja
sbb
ss
mov
mov
or
ror
or
pop
scas
cmpsl
jecxz
sub
loope
test
loopne
addr16
mov
inc
mov
jns
sahf
je
and
lods
jg
jmp
jb
rcr
or
andb
dec
pop
fcomi
shll
mov
xor
push
scas
sbb
and
loope
fistpl
out
and
aaa
test
xchg
add
dec
xchg
sub
jecxz
lea
push
adc
movsb
add
mov
xchg
rol
dec
push
dec
jp
pop
je
adcl
stos
cld
add
out
outsb
adc
rolb
cwtl
inc
iret
adc
lock
ds
pop
and
add
fdivs
jge
push
rolb
leave
sub
fs
insl
fstps
push
sbb
in
add
addr16
insl
fcoml
mov
out
dec
lret
call
lds
nop
imul
icebp
pusha
or
aam
mov
les
jne
call
rcl
call
and
adc
stos
cmpsl
xor
loopne
jno
sbb
inc
mov
push
add
pop
dec
in
es
inc
cwtl
sub
test
in
inc
in
out
dec
fists
out
in
sub
sbb
pop
sbb
jecxz
in
push
add
mov
addr16
adc
lret
jg
data16
icebp
pop
jg
aas
xor
and
mov
push
movswl
pop
pop
or
dec
loopne
sub
xchg
js
fs
mov
ret
arpl
iret
lds
inc
mov
stos
rcl
or
ret
in
push
sub
jo
mov
sahf
in
xor
negl
and
call
pushf
pushl
dec
call
xor
test
stos
out
inc
push
and
pmuludq
jnp
imul
lret
popl
mov
mov
inc
push
push
ljmp
xchg
xchg
mov
mov
mov
fwait
jecxz
popa
jmp
push
fldcw
aas
mov
push
cmp
in
popw
dec
xlat
int3
call
mov
push
in
add
scas
inc
roll
jno
imul
xor
das
jbe
test
enter
fisttpll
ror
jae
int3
inc
xchg
lock
xchg
or
or
jno
jle
mov
fcom
out
ret
loope
push
inc
into
inc
mov
add
stc
dec
xchg
push
xor
cmp
cwtl
enter
xchg
sbbb
dec
ret
add
movsl
push
inc
pop
nop
test
push
push
pop
test
pushf
sbb
lods
pushf
mov
adc
xchg
stos
fldt
rorl
fs
je
das
mov
in
push
pop
mov
mov
shrb
push
jnp
ret
dec
or
pop
lods
call
xchg
push
test
orb
test
cmp
push
or
leave
outsb
mov
mov
in
push
xchg
xchg
cld
jl
fucomip
push
lahf
add
inc
out
pushf
pop
sbb
stos
lea
pop
xchg
push
out
outsl
xchg
adc
push
dec
outsb
and
rol
xchg
sbb
decl
push
das
push
xchg
in
fucom
inc
xlat
cmpsb
sub
jge
xorl
mov
xchg
sbb
int
mov
mov
arpl
mov
adc
xor
daa
pop
aam
and
sub
int3
mov
mov
push
and
or
lock
jne
int3
ja
ja
insl
mov
add
mov
xchg
movsl
idivl
mov
outsb
out
cs
stos
mov
aaa
jecxz
jne
xchg
iret
sub
or
repz
ret
in
inc
inc
add
das
xor
test
arpl
mov
dec
cmp
movsl
inc
mov
add
or
rol
adc
iret
bound
pop
sarb
cmp
and
outsb
stos
xor
sub
xor
ret
in
fsubr
loopne
insl
inc
jg
hlt
xor
inc
into
scas
es
jnp
ret
jg
mov
pop
rcrb
mov
adc
shl
bound
sahf
int
xor
adc
stos
sbb
and
sti
imul
scas
lcall
nop
add
inc
out
jmp
ljmp
dec
lods
inc
test
jne
in
addr16
jo
pop
mov
pop
idiv
inc
xlat
mov
icebp
fcomp
adc
add
or
jle
jecxz
shlb
fstl
xor
sub
in
adc
lds
inc
inc
fidivs
inc
mov
int3
and
jae
iret
mov
frstor
jp
clc
and
hlt
mov
adc
fisttps
call
nop
pop
jbe
jae
add
and
aam
js
test
inc
mov
loopne
add
sbbl
mov
dec
cld
jge
sahf
mov
sbb
movsb
or
pusha
push
aad
mov
inc
sbb
out
lcall
jp
rolb
add
inc
jmp
hlt
or
mov
repz
cmp
test
mov
ja
sbb
lock
jg
mov
xor
pop
sbb
mov
cmp
jbe
mov
jle
inc
sbb
out
push
cwtl
das
inc
hlt
les
je
sbb
xor
push
stos
lret
in
mov
jns
cs
jno
inc
js
call
in
xchg
xchg
inc
lret
sti
cmp
fistpll
sub
or
adc
sub
jg
fists
xor
inc
mov
xor
push
in
sub
lret
inc
and
and
rcll
xor
std
xlat
repnz
mov
arpl
or
inc
ret
adc
pop
jo
xchg
ss
inc
adc
outsl
mov
inc
sahf
fstps
inc
jb
test
xor
insl
jbe
in
mov
sbb
outsl
ret
nop
fucomi
outsb
imul
stc
sbb
or
fwait
out
or
pop
sub
cmc
add
lods
mov
inc
int3
fildl
dec
out
pop
cld
dec
arpl
int3
insb
pop
inc
push
xor
popa
push
lret
sbb
bound
pop
push
mov
sahf
fwait
das
pop
pmaddwd
or
inc
mov
sbb
or
fwait
dec
dec
adc
and
fstpt
outsb
xor
or
jmp
insl
fs
rolb
mov
push
inc
ss
outsb
inc
out
out
and
mov
dec
ret
das
sbb
push
mov
push
cmpb
jb
xor
in
mov
shll
inc
leave
ds
scas
sahf
pushf
jbe
add
cmpb
mov
push
lods
push
lret
fwait
mov
pusha
push
and
mov
hlt
pop
lods
mov
add
data16
inc
rcll
repz
and
fstl
xchg
mov
cwtl
xchg
in
adc
out
ret
lret
cmc
add
popa
xchg
cld
movsb
ja
pop
push
mov
cs
std
lret
sbb
xchg
rclb
nop
push
out
xor
jnp
pop
push
sbb
ret
mov
push
dec
sbb
xor
sbb
xor
or
sti
xor
or
dec
add
xor
jae
cmp
stos
dec
lcall
mov
aas
flds
sbb
and
mov
jecxz
mov
inc
inc
pop
jb
daa
jp
out
xchg
cltd
adc
xor
inc
pop
mov
and
pop
addr16
loop
sub
cmp
fwait
jne
add
in
mov
adc
pop
inc
test
push
pop
mov
popa
inc
fadd
push
dec
inc
scas
push
sbb
inc
and
fs
mov
std
mov
sbb
mov
test
push
or
ds
das
mov
add
mov
sbb
mov
xchg
or
es
lret
mov
add
push
xchg
cmp
dec
sub
daa
jnp
cmp
aam
int
dec
out
ja
dec
aad
cmp
fdivr
push
nop
rolb
push
xor
sbb
xor
int3
sub
fdivrs
and
outsb
mov
or
loope
add
ljmp
movsb
movsl
fldenv
popf
out
add
xlat
pop
mov
pop
std
xor
cs
mov
cmp
mov
je
jbe
stc
insl
push
push
or
or
mov
mov
popa
sub
cmp
sti
sbb
bts
mov
or
pop
sahf
and
xor
mov
mov
cld
outsb
inc
cmp
inc
cmp
fdivl
mov
call
in
int
mov
sbb
in
outsl
jne
sub
push
mov
dec
fwait
inc
popf
gs
mov
sbb
add
mov
push
pusha
test
imul
add
popf
negl
aaa
in
add
mov
push
lods
test
int
hlt
adc
jp
rclb
adc
inc
and
and
push
push
or
scas
fsubrs
sub
out
ret
xor
or
dec
mov
pop
lret
dec
mov
insb
dec
mov
pusha
inc
rclb
inc
popl
cwtl
sub
mov
jmp
or
cli
add
xchg
jae
mov
in
mov
inc
data16
imul
inc
movsl
mov
fcoms
sbbb
push
stc
dec
stos
outsb
dec
jae
mov
sub
or
add
jno
lahf
or
inc
mov
lock
or
sbb
hlt
les
pop
int3
movzwl
inc
and
cltd
and
fs
pop
fwait
ja
fldl
dec
fwait
test
push
pop
pop
xchg
cs
add
ret
jno
mov
fstl
lds
sbb
xor
sarl
iret
fists
mov
movsl
fs
fisttpll
push
cmpsb
je
fs
outsl
push
in
mov
mov
jb
or
and
aad
adc
pop
mov
fwait
rolb
test
in
ljmp
and
rcll
mov
out
dec
cli
jo
aas
icebp
mov
pop
xchg
pop
pop
ss
sti
inc
push
roll
mov
adc
shrb
dec
adc
arpl
mov
mov
mov
jle
pop
push
aas
les
xchg
or
lods
dec
loopne
add
mov
pop
mov
sub
xchg
xor
cmpb
push
xchg
inc
cmp
lods
adc
sbb
or
mov
repz
mov
in
mov
sbb
push
lret
in
test
jecxz
in
subb
jno
mov
jge
or
inc
xchg
loope
sbb
dec
pop
hlt
pop
add
shrl
das
dec
push
repnz
es
cmc
loope
mov
lods
xchg
xor
lea
xorl
fs
xchg
sub
test
mov
inc
mov
add
dec
hlt
clc
lock
mov
inc
popa
jno
and
mov
inc
sub
andb
adc
cmp
cmp
ljmp
aas
repz
add
adc
mov
mov
imul
aas
add
jp
es
scas
jp
mov
mov
push
xor
sahf
push
movsb
test
xlat
arpl
mov
lea
inc
pop
popf
stos
lods
xsha256
cmpsb
push
jg
pushf
orb
push
popf
imul
xchg
push
in
xchg
cwtl
or
out
enter
in
inc
loope
sub
subl
mov
or
rol
adc
sub
add
decl
xchg
cmc
push
inc
and
inc
pop
sbb
mov
dec
inc
popa
adc
test
push
ss
cmp
adc
adc
popa
addr16
aaa
cwtl
loop
sbb
or
lods
into
scas
sbb
mov
or
cmp
jg
lret
jecxz
pop
add
cmova
add
cmp
mov
repnz
enter
es
in
rep
sarl
mov
mov
inc
dec
jb
xchg
or
jae
mov
jg
mov
int
jmp
fsubrl
je
inc
jbe
out
sub
lods
aad
sub
sbb
and
scas
cmpsl
shrb
test
mov
adcl
xor
insl
ja
test
movsl
cltd
jb
addb
cmp
mov
mov
inc
mov
std
ficomps
ss
mov
psrlw
adcl
lret
cltd
nop
xchg
adc
sahf
dec
xchg
and
int
test
mov
cmp
cld
pop
or
mov
xchg
cwtl
mov
xchg
mov
test
or
jnp
add
xor
mov
mov
cmp
nop
in
repz
inc
jne
sarb
mov
or
mov
lock
push
dec
outsl
push
push
pop
mov
jp
push
xor
ret
ds
mov
cmpsl
test
jecxz
push
fldt
negb
inc
repnz
sbb
fldl2t
cltd
jg
fwait
inc
pushf
cli
fsubrl
inc
cltd
movsb
xor
addr16
mov
test
inc
rcrl
adc
and
jg
hlt
push
mov
int3
and
test
xor
out
inc
inc
daa
sbb
inc
fdivrs
mov
mov
or
dec
jo
cld
sarl
mov
mov
out
pop
aaa
adc
or
jp
jno
insb
rcl
lock
testb
sbb
push
adc
test
jecxz
aam
int3
xor
pop
xchg
sub
lret
dec
out
jg
lea
push
mov
adcl
addr16
sub
mov
add
jbe
test
repz
or
sar
inc
frstor
in
lds
fwait
jge
fistpl
pop
mov
les
lret
add
mov
mov
loop
imul
lea
pop
and
enter
sub
push
mov
std
ret
push
shlb
daa
ret
fs
sbb
mov
loop
push
sbb
sub
pop
mov
pop
aad
fistpl
add
lods
mov
push
push
fistpl
and
cmp
adc
ffree
cmp
jmp
loopne
pop
adc
pop
call
inc
jmp
pop
out
mov
scas
fcoml
dec
and
outsb
cs
inc
add
hlt
pop
movsl
xchg
mov
jne
mov
rcl
scas
cmp
and
popf
fsts
sahf
fs
xor
add
pop
jp
inc
mov
jbe
adc
and
xchg
dec
mov
imul
ja
call
iret
jecxz
or
mov
lods
jne
xchg
pushf
fcomp
rolb
sub
adc
int
xchg
daa
ja
fldl
rorl
lret
outsb
adcl
mov
cmp
dec
aaa
fisubrl
iret
pop
icebp
scas
or
ret
out
stc
or
addr16
xor
nop
movsl
or
sbb
loope
sbb
pop
adc
mov
ret
xchg
mov
xor
sbb
dec
sbb
mov
int
push
xlat
jle
fdivrs
cmp
iret
mov
movsb
push
popa
bound
lret
test
or
sarl
xlat
pop
push
dec
loopne
mov
and
cmp
pop
xor
mov
stos
stos
sub
scas
ret
sub
call
push
inc
icebp
stc
cwtl
and
cmp
lret
sbb
test
inc
push
sub
lahf
leave
xor
inc
push
pop
jne
mov
dec
pop
jecxz
inc
jb
daa
and
enter
lods
cmp
in
int3
mov
push
rep
scas
xchg
arpl
inc
or
fsubrp
jmp
sbb
lods
clc
imul
std
les
into
inc
andl
adc
dec
add
int
inc
fldcw
add
imul
or
pop
pop
sub
inc
lods
add
sbb
hlt
shll
push
fdivp
call
in
xchg
add
or
jecxz
out
gs
stos
sbb
inc
movl
inc
mov
fcoml
ret
ret
je
pop
mov
push
aad
in
xchg
mov
xchg
mov
int
fisttps
mov
fmulp
mov
sysret
inc
mov
adc
xchg
mov
mov
hlt
sub
mov
xor
fstpt
xor
sbb
push
mov
pop
pop
lods
mov
in
cmc
fwait
negb
movsl
das
aaa
dec
lods
fmuls
add
dec
test
arpl
out
jge
jg
mov
faddl
xchg
sub
cmc
mov
add
arpl
sahf
test
cmp
stc
pop
pop
stos
cmc
mov
inc
out
int3
push
xor
test
test
xor
jp
mov
nop
push
xchg
out
xlat
inc
daa
je
faddl
mov
test
inc
adc
filds
add
dec
push
push
jno
dec
sarl
cmp
sbb
cmc
mov
and
repnz
stc
sahf
jp
testb
cmp
inc
movsl
jg
push
pop
cltd
mov
fiaddl
inc
dec
sarl
dec
and
pusha
pushf
jg
pop
sti
fstl
leave
in
fbstp
sbb
dec
pop
pop
inc
jne
pop
mov
xchg
rcrl
loop
xchg
sbb
pop
adc
cwtl
dec
dec
fs
outsl
sti
nop
lahf
sub
dec
inc
fmull
add
sbb
in
sub
mov
mov
jmp
push
addr16
stos
adc
sub
stos
stc
out
mov
orb
int
fs
or
cmc
push
in
xlat
push
inc
inc
mov
xor
pop
in
and
push
fmulp
mov
cmp
gs
cmovne
lods
arpl
cmp
xorl
out
lds
aaa
and
jnp
int
cli
out
sbb
push
add
pushf
xchg
xor
pushf
ds
jae
mov
sbbb
movsl
movsb
ret
imul
gs
pushf
ret
sbb
add
mov
pop
and
jnp
lret
cwtl
cmp
outsb
pop
je
mov
aad
cwtl
sub
fiadds
xor
push
sti
test
xchg
mov
popa
rol
out
popa
mov
mov
cmp
shl
dec
mov
mov
inc
imul
or
push
mulb
leave
into
out
or
jecxz
test
mov
xor
inc
movl
pop
inc
stc
out
pop
iret
mov
stos
jmp
fisttpll
inc
in
enter
movsl
mov
mov
push
sub
cmp
mov
sbb
sub
cli
adc
cli
mov
jecxz
jecxz
mov
inc
cwtl
push
xor
aad
rorl
add
add
push
add
xchg
push
fs
scas
xchg
adc
ret
scas
inc
push
rcrl
cmp
mov
cmpsb
cmp
aas
setns
lret
popa
mov
dec
in
in
jecxz
inc
scas
popa
jns
cwtl
pop
push
sahf
mov
pop
xor
sar
dec
mulb
and
ret
aas
jg
inc
lods
stos
nop
cmp
push
sbb
lret
xor
lahf
mov
hlt
test
loope
xchg
push
gs
mov
jb
sti
jg
hlt
std
iret
xchg
inc
jle
nop
pop
sub
jnp
cmp
adc
jg
inc
jmp
dec
mov
mov
out
xchg
inc
mov
enter
cwtl
cs
rcr
into
test
shrb
stos
mov
aad
inc
scas
or
int
add
push
xor
push
or
stc
pop
inc
push
mov
jae
push
mov
sub
mov
mov
mov
clc
adc
jae
xor
js
popf
ret
sbb
jbe
je
ss
mov
add
dec
or
mov
mov
push
ret
push
cmp
sub
enter
jo
cli
cltd
mov
sbb
pop
loopne
out
ret
repnz
cmp
and
mov
out
pop
in
test
rolb
call
les
test
rcr
int3
ret
loope
or
dec
pop
inc
add
mov
lret
cmp
push
out
pop
inc
movsb
sbb
push
in
push
cli
xchg
es
test
arpl
insl
xor
jmp
ljmp
nop
cmp
add
fldenv
flds
aad
jns
push
inc
adc
popl
ja
cmp
push
mov
inc
rcl
insl
aad
in
push
mov
ljmp
adc
sti
bound
in
sbb
movsb
inc
cmp
ds
sbb
ja
add
pop
mov
mov
ds
mov
es
lea
sahf
nop
xor
cltd
inc
xor
in
shrl
popf
pop
push
test
jecxz
nop
clc
jno
sub
repnz
lcall
jne
scas
lods
pop
jb
test
xor
xchg
push
fmuls
cwtl
push
or
cmpsb
adc
sbb
cmp
pop
ja
push
or
cmp
mov
mov
scas
xchg
fwait
cmp
adc
mov
dec
scas
nop
add
mov
inc
inc
push
lret
add
enter
scas
call
sbb
es
out
pop
pop
stos
into
add
pop
into
int3
push
fdiv
add
cmp
mov
sub
mov
aas
push
fists
les
fidivrl
mov
xor
mov
ret
and
cmc
shrb
adc
mov
leave
lods
les
test
adc
xchg
mov
mov
lock
das
push
data16
mov
or
xchg
xor
inc
pushf
inc
sbb
std
xchg
mov
push
adc
rcll
xor
dec
fwait
out
pop
pop
xchg
packsswb
and
int3
ffree
pusha
leave
xchg
xchg
mov
and
ljmp
cwtl
inc
jmp
mov
xchg
out
ds
adc
adc
popa
cmpsl
into
cmp
mov
sub
ror
jp
mov
loopne
xchg
subl
dec
xor
lret
sbb
loop
cmpsl
xchg
pusha
adc
dec
cwtl
lret
xchg
out
ret
sbb
or
icebp
daa
pop
in
push
loope
aaa
push
pop
xchg
fidivrs
cwtl
push
inc
or
and
into
sahf
and
add
dec
cmp
out
mov
xchg
push
fistpll
jecxz
dec
mov
iret
xchg
xorb
push
lods
int3
xlat
jb
xor
xchg
xor
adcb
sub
in
fldcw
push
or
out
xchg
mov
test
mov
lea
mov
daa
in
sbb
mov
fdivl
pusha
and
dec
or
mov
cmc
jl
imul
sbb
or
in
into
add
jns
pop
adc
cmp
rolb
ljmp
or
cld
add
loopne
ljmp
mov
adc
push
fwait
sti
orb
mov
repnz
or
xchg
dec
mov
shl
sub
adc
mov
push
stc
or
jmp
mov
out
mov
inc
fstpt
out
cmpsl
les
in
dec
outsb
inc
mov
out
jae
lods
imul
cmc
mov
cld
mov
xchg
or
inc
and
and
je
data16
sti
xchg
cmp
sub
jg
xlat
sbb
mov
call
mov
jge
push
inc
repnz
mov
xor
inc
adc
test
addr16
loopne
xchg
push
call
push
std
fcmovnbe
stc
push
xor
bound
mov
cmpsb
xchg
out
xor
in
mov
daa
shl
jp
lods
add
mov
push
int
iret
leave
movsl
fs
and
pop
ret
int
sub
cmp
iret
mov
push
sbb
sbbl
or
mov
pop
movsb
roll
add
dec
push
adc
sub
mov
out
scas
adc
mov
mov
test
pop
shlb
mov
mov
enter
orl
cmpsb
push
xor
and
lret
stos
jnp
ss
add
jg
mov
popa
add
lods
xchg
fmuls
addr16
ret
fmull
cli
decl
lret
jg
lods
jp
jb
aad
cld
iret
aaa
xor
in
stc
jne
mov
jge
mov
push
sub
add
pop
lods
loop
je
or
inc
scas
add
in
call
xor
mov
mov
mov
ret
ffreep
dec
pop
ss
add
sbb
mov
mov
xor
push
inc
std
xor
arpl
mov
loope
lea
inc
xor
ret
dec
rcll
sbb
sarb
test
mov
cmp
jmp
cmc
pusha
lods
mov
inc
jo
popf
jb
out
insl
lock
cmp
sub
sbb
jecxz
dec
inc
rol
in
out
clc
sub
jge
mov
cmp
xor
rclb
cmpl
mov
mov
or
dec
in
popa
pop
push
mov
es
sbb
aaa
sub
sub
adc
insb
ffree
cmp
jmp
pop
mov
inc
or
pop
les
pop
xor
mov
rolb
cmp
rorb
jno
ljmp
xchg
int
adc
sbb
je
out
add
js
xor
test
std
sub
mov
or
xor
enter
push
in
adc
push
pop
test
sbb
cmp
xlat
sub
mov
inc
out
movsb
aaa
jecxz
loope
mov
int3
es
dec
mov
decb
sti
pop
mov
lret
mov
cmp
insw
adc
inc
xchg
add
inc
lods
cmp
nop
vmread
lcall
xchg
fisttps
ret
mov
or
sub
arpl
cwtl
in
rclb
cwtl
mov
mov
cli
cmp
cmc
outsb
push
repnz
cmpsb
stos
sbb
fcompl
outsb
rcrl
lret
mov
fwait
movsl
jp
testb
andl
jnp
cwtl
aam
xor
addr16
imul
mov
pop
adc
jae
call
pop
daa
loop
dec
mov
jecxz
adcl
pop
cmp
or
out
push
cmp
outsb
rcrl
in
scas
fcmovne
dec
mov
xchg
in
aad
pushf
add
inc
xchg
enter
pop
mov
cltd
cmpsl
push
iret
mov
push
stos
es
push
xor
dec
bound
aad
xchg
or
gs
dec
in
mov
addr16
push
jne
xchg
mov
dec
daa
imul
nop
fsub
loopne
shrl
jg
cli
leave
pop
mov
cltd
mov
idiv
fstpt
jp
cmpb
or
jnp
mov
push
movsl
jp
adc
shll
rcrb
dec
cld
xchg
push
pop
xchg
sub
or
xchg
test
stos
or
inc
shlb
and
xor
mov
sbb
outsl
jecxz
aad
mov
cmp
mov
imul
push
je
in
aam
mov
dec
inc
jae
jp
xchg
out
or
push
dec
roll
push
push
xchg
imulb
mov
xchg
jp
pusha
aaa
xor
push
jb
stc
jne
faddl
xchg
pop
add
jp
xchg
pop
loopne
fs
pop
adc
pop
sbb
xor
arpl
push
ror
push
mov
sahf
data16
and
mov
lea
and
adc
jbe
sbb
addr16
mov
pusha
lods
mov
mov
iret
push
xchg
in
inc
daa
les
pop
mov
nop
divb
popa
lods
inc
das
sbb
mov
stos
mov
insb
fdivrl
outsb
or
cmp
lea
jl
jae
pop
cmp
cmpsl
dec
dec
sahf
pop
int
aaa
orb
or
jle
jmp
fistpll
lret
xchg
insb
pop
pop
mov
fnstcw
mov
cwtl
or
push
cld
push
cs
sub
movsb
in
xlat
sti
ret
test
stos
in
inc
push
jp
sbb
dec
xchg
ljmp
jg
je
dec
xchg
into
jmp
sti
push
lcall
or
stos
add
cmovae
push
fwait
or
cmp
adc
aad
enter
out
push
shlb
mov
call
cmp
dec
inc
test
sbb
sbb
or
or
jecxz
dec
xor
or
or
and
in
sub
paddw
pusha
mov
push
call
lea
ljmp
stos
cmp
shlb
mov
xor
mov
in
testb
sbb
in
std
pop
sti
mov
mov
push
test
inc
inc
dec
sub
fcomps
dec
shll
xchg
push
sub
pusha
push
push
sti
pop
lcall
mov
push
ret
in
fs
pop
sub
test
and
mov
mov
pop
xor
fnstsw
xchg
es
mov
xchg
xchg
xchg
mov
push
cmpsl
in
pop
inc
mov
sub
and
ljmp
bound
rolb
fs
cmovae
cmpsl
sbb
lea
inc
fisubs
dec
stc
fwait
rcr
push
pop
fistps
xchg
mov
sub
int
arpl
loope
std
xor
test
fdivl
out
and
fildll
repnz
fwait
ret
scas
das
xor
push
in
int3
add
imull
mov
lea
adc
push
sub
xchg
arpl
roll
or
das
xor
or
and
sbb
mov
pop
mov
popa
push
mov
in
mov
inc
xor
sahf
or
inc
mov
sarl
ret
pop
jle
cmc
popa
inc
dec
mov
inc
pop
dec
shl
ljmp
xchg
xchg
cmp
imul
imul
fsts
mov
jnp
or
mov
mov
mov
push
ljmp
and
jle
or
cmp
dec
fs
mov
popa
ret
and
inc
cmp
mov
out
std
shlb
cmpsl
cmp
cmc
fs
dec
pop
xchg
ret
je
pop
fs
into
lcall
dec
jno
ffree
cwtl
sub
jns
aaa
or
popa
stos
lock
outsb
xchg
and
mov
aam
scas
int
sub
dec
hlt
arpl
inc
nop
pushf
xlat
mov
mov
nop
negb
push
inc
mov
inc
mov
stc
repnz
ss
das
cld
and
movsl
push
fs
aas
lods
das
iret
or
cld
xor
xchg
push
inc
stos
imul
loopne
shl
imulb
add
pop
or
leave
and
fdivrl
sahf
ret
inc
cmp
pop
xchg
stos
xlat
jp
shll
cmp
out
sub
jp
iret
cmp
ss
lds
jns
add
push
test
cmpsb
xchg
mov
push
int
in
jecxz
addl
pop
je
ret
push
lock
xchg
xor
or
push
add
inc
xchg
jle
into
add
fldt
ret
addr16
pop
cmp
mov
xor
jno
popf
mov
mov
das
inc
xchg
cli
lods
mov
xchg
scas
mull
mov
dec
lock
push
imul
add
cmpsb
inc
mov
xor
sbb
stos
and
mov
scas
es
and
insb
into
or
or
nop
jae
xchg
testb
jg
hlt
pop
dec
pop
xchg
fcoml
int
mov
outsb
aam
sbbl
fisubs
lods
stos
pop
inc
lds
lods
mov
mov
inc
push
lcall
movsb
or
xor
jmp
sbb
bound
jmp
mov
sti
or
jnp
and
ret
into
scas
and
adc
dec
push
movsb
pushf
mov
jge
arpl
mov
xlat
dec
shl
iret
cld
cwtl
in
mull
loop
ret
aam
out
cld
lea
jg
mov
xlat
nop
or
out
cmp
and
js
int
scas
rclb
std
xor
in
inc
in
cmc
icebp
fisttpll
or
fs
push
adc
popf
inc
jno
mov
adc
repz
fs
cmp
pop
inc
push
add
stos
out
int3
mov
push
pop
push
or
jg
inc
add
lods
cmpsb
inc
cli
sub
sbb
and
mov
repz
inc
pushf
cmp
cld
cmp
sub
arpl
mov
out
popa
in
sbb
pop
lret
mov
adc
or
stos
jg
fcomps
jns
cmpsb
or
lcall
cltd
in
xchg
mov
lret
fcmovnbe
rcrb
daa
lods
xchg
cltd
or
outsb
fs
sbb
pop
dec
xor
jmp
xor
fdivr
sbb
add
repz
adc
inc
mov
divl
or
jnp
shll
int
repnz
push
hlt
data16
inc
popa
out
ret
xchg
pushf
dec
pop
cmp
in
and
xor
sbb
xchg
mov
push
mov
insl
daa
cmp
adc
sub
lahf
pop
es
mov
ffree
add
jl
push
popf
pop
jg
xor
out
fsub
in
jmp
jge
dec
stos
cli
jecxz
inc
or
mov
fistpll
lea
push
test
or
pop
lret
push
jecxz
push
data16
mov
icebp
xor
fmul
lret
cmpsl
cmp
inc
push
adc
in
xchg
rcl
sub
push
xor
pop
xchg
mov
mov
out
sub
imull
aaa
cmp
bound
xchg
aam
mov
sbb
add
push
jne
push
ret
sbbl
lods
movsl
and
sub
andb
dec
and
push
outsl
scas
mov
sbb
push
xor
inc
andl
mov
push
loope
popf
mov
sub
dec
cmpsb
inc
lret
xchg
mov
cli
pop
push
loop
push
in
ljmp
sub
inc
loope
add
pop
inc
loope
mov
inc
push
vphaddbq
dec
icebp
and
daa
and
cmc
insb
jmp
jecxz
lods
or
in
adc
inc
nop
in
out
arpl
sbb
test
push
outsb
adc
lahf
dec
lds
pop
lea
insb
aam
fisttps
in
mov
les
stos
lock
mov
or
fistpl
xor
inc
jne
or
in
sbb
inc
shl
iret
ret
sar
push
das
mov
std
out
inc
pop
push
sub
movsl
adc
pop
or
add
int
mov
les
xor
je
stos
or
sbb
lea
scas
xor
pop
or
fbstp
insb
dec
test
lea
pop
ret
pop
insb
cmp
add
in
js
jle
mov
inc
jb
fmull
imul
jecxz
adc
cmpsb
jae
jo
cld
sbb
mov
or
adc
push
popa
outsl
xchg
cmp
in
mov
xor
aas
icebp
std
iret
scas
jb
sbb
sub
ljmp
stos
adc
xor
adc
lods
popa
fnstcw
lahf
and
leave
and
loopne
mov
jnp
jl
sub
adc
cmp
pop
mov
sbb
xor
push
cmp
dec
or
inc
jno
es
inc
pop
je
and
adcl
cmp
cmp
pop
xchg
cld
jo
rcl
fwait
jge
aad
dec
mov
aam
pop
inc
shrb
sahf
inc
jmp
shlb
cmp
shrl
sarl
mov
and
aad
mov
xchg
pop
std
xor
pushf
mov
enter
and
jmp
xchg
jp
out
leave
imul
fsubs
orl
jg
arpl
cli
sub
cmp
mov
or
ljmp
push
and
sbb
jb
ss
stc
or
cmp
in
sub
repz
and
ret
push
por
xor
neg
pop
adc
cmp
pop
xchg
aad
sbb
cmp
pop
lods
lcall
loop
sbb
lret
out
xchg
aas
outsl
movsb
inc
lahf
cmpsl
leave
arpl
rolb
inc
std
mov
loope
sbb
xorb
int
popa
or
out
push
aas
out
cmp
lret
ret
ljmp
mov
mov
sub
xor
sbb
push
stc
dec
lret
idivb
negl
pop
add
adc
popf
out
iret
cmp
push
pusha
jge
cs
xor
test
in
mov
adc
pusha
rcrb
js
fstps
dec
jle
lahf
pop
cld
push
inc
stos
movsb
sbb
add
cmpsl
cwtl
pop
ret
imull
lea
shlb
jp
xchg
fistl
jo
lods
sub
sub
aad
cmpb
lea
cmp
lcall
push
pop
testl
or
sub
int3
mov
push
leave
pop
shll
jg
notl
popf
sbb
push
sbb
dec
popa
sysenter
sbb
rcr
cmc
lea
mov
and
mov
pop
add
xor
shr
mov
fisubrs
fwait
push
mov
pusha
filds
jle
bound
fsubrp
ret
push
cmp
in
fsubl
xchg
lret
in
fnstcw
inc
and
xchg
jbe
mov
mov
call
insb
dec
imul
sbb
int3
pop
pop
push
push
pop
jecxz
push
stos
cmpsb
test
inc
add
or
add
push
ret
cltd
into
imulb
mov
sbb
cmp
mov
aaa
test
and
jecxz
cmpsl
push
xor
roll
subb
jge
push
ret
rorl
fdivs
movsl
in
xchg
cmpsb
pop
add
pop
outsl
hlt
je
aaa
loopne
repz
jbe
gs
les
mov
mov
stos
xchg
test
xchg
push
stc
addl
inc
inc
cmpsl
repnz
xor
sahf
negl
cmc
sbb
inc
mov
sbb
ret
outsb
pop
std
push
mov
mov
lods
adc
popf
pop
mov
lea
out
js
clc
jo
push
mov
push
adc
adc
cmpsl
mov
filds
jg
fildl
pop
jp
add
sub
cmpsl
insb
into
cmp
repz
aas
or
rorb
loop
xchg
popf
stos
inc
test
enter
mov
ret
or
push
sti
call
or
outsb
fnstenv
cmpsl
js
jnp
rcrb
push
jecxz
pop
sub
clc
dec
xor
gs
shrb
sti
outsb
xor
in
roll
inc
mov
neg
enter
rorl
xor
dec
cmp
cmp
push
popa
jp
or
push
push
push
aad
enter
mov
jp
in
divl
or
js
adc
xchg
mov
in
mov
dec
xlat
int3
mov
adc
lret
in
fcomi
fsts
xchg
test
inc
mov
sahf
xchg
dec
and
fcoms
cmpsb
cmp
stos
xchg
nop
sbb
sub
hlt
shll
and
cwtl
cld
stos
cmp
jle
jo
pop
push
daa
pusha
inc
dec
fs
jp
bound
xor
pop
sub
xadd
mov
sbbb
inc
xor
lahf
push
ret
mov
cs
sbb
sbb
mov
dec
fsincos
push
push
sub
call
push
inc
clc
sub
insb
lea
call
or
adc
mov
pop
push
jne
stos
mov
ja
and
adc
ss
out
ret
mov
inc
dec
xor
push
fdivr
xor
cmp
sti
dec
pusha
lea
addl
cmp
rcr
pop
adc
jecxz
xor
pop
cmpb
mov
sbb
aaa
mov
arpl
stos
dec
or
fwait
or
inc
mov
mov
pusha
addb
push
nop
push
sbb
add
pop
add
movsb
cmpsl
xrstor
pop
ret
jl
repnz
insb
inc
adc
lcall
dec
call
jmp
daa
pop
xchg
inc
lods
es
jno
xor
and
sbb
insl
push
mov
cs
insb
push
add
imul
cld
inc
add
or
bound
add
subb
iret
mov
into
loop
adc
cmp
fwait
add
arpl
cmp
sti
shrb
sub
lret
shrb
jge
jb
ret
cmp
test
lret
jno
rdmsr
subb
jge
mov
shlb
repz
nop
mov
movsb
or
add
aaa
loope
inc
xor
les
xchg
sarl
add
pushf
gs
sub
lret
movsb
jg
push
shlb
fstpt
cld
mov
cmp
adc
movsl
xlat
movsl
popf
push
pop
jge
mov
jl
mov
lods
loope
push
sbb
repz
add
pop
lds
fwait
mov
std
cmc
bound
jmp
int
xor
ja
mov
shll
push
mov
add
pop
cmpsl
shr
aad
mov
icebp
push
fisubl
push
mov
sub
in
cmc
cmp
sar
sbb
mov
stc
lods
push
add
jno
aad
mov
ljmp
dec
aad
dec
inc
rolb
lods
cmpsl
icebp
push
mov
fisubrl
rclb
fs
ljmp
and
inc
mov
jle
pushf
mov
sub
jp
fwait
jo
dec
pop
dec
shll
rcrl
jp
je
xchg
lahf
pop
pop
inc
xor
or
movsb
inc
or
ror
test
insb
mov
pop
ja
cmpsl
movsl
jmp
shr
dec
mov
pop
lret
mov
and
test
int
dec
push
and
mov
movsb
outsb
hlt
outsl
xchg
adc
shrb
int3
rclb
xchg
mov
push
push
sbb
mov
or
or
and
scas
mov
arpl
hlt
cld
adc
sarl
xchg
xchg
fsubs
push
inc
dec
mov
add
or
or
mov
movsl
pop
lods
push
inc
mov
mov
push
mov
sub
push
adc
sbb
xchg
xchg
mov
sti
or
adc
ja
enter
push
or
movsl
mov
sbb
mov
cwtl
push
out
xor
scas
and
sub
xchg
jo
inc
daa
faddl
stos
xor
fs
push
leave
mov
inc
add
adc
rorb
loope
inc
ret
sbb
call
inc
iret
test
aad
fstpt
inc
stc
mov
push
sti
pop
lcall
or
out
mov
into
push
pop
addr16
push
jmp
mov
roll
mov
mov
pop
jmp
push
insb
cmp
mov
aad
sbb
std
fisttpl
jnp
push
outsb
or
adc
jns
rcr
cmc
sbb
out
stc
cmp
iret
aaa
aad
cld
jno
xchg
push
int3
fcomps
testl
rcrb
clc
jg
mov
cmp
pop
mov
pop
xchg
or
xor
push
jae
into
fwait
xchg
sub
daa
shlb
xlat
fisttpl
mov
xchg
push
push
sub
jmp
std
mov
sbb
sti
mov
jnp
cmp
xchg
dec
outsb
inc
call
jmp
mov
add
push
xchg
push
jp
bound
aad
jns
outsb
int3
pop
or
mov
icebp
sub
dec
mov
fistpl
sti
cmp
into
push
shl
pop
adc
sti
sub
inc
mov
ret
adcb
aam
int
and
push
lcall
aas
mov
jl
arpl
rcll
bound
cmp
pop
pushf
fst
and
sub
test
jg
fwait
outsl
mov
fistl
xchg
lds
loopne
into
test
pushf
cld
inc
cwtl
jb
sti
icebp
bswap
mov
fistl
scas
mov
cmp
in
mov
popa
dec
dec
and
add
lea
ja
icebp
jno
or
loopne
dec
cmp
and
add
stc
insb
das
loop
push
stos
pop
inc
out
mov
push
enter
pop
ret
and
inc
cmc
dec
in
mov
jb
inc
jp
in
xchg
lret
pop
dec
inc
cmp
mov
cwtl
mov
fmull
push
xchg
in
adc
jb
mov
pusha
lret
xor
in
pushf
pop
add
sbbl
xchg
jecxz
inc
popf
jbe
in
lret
cwtl
xchg
adc
pop
jo
test
int
dec
pusha
enter
mov
inc
sub
loope
data16
das
lahf
ret
out
cmp
into
and
push
pop
les
and
int3
in
push
das
subb
icebp
mov
add
mov
or
sbb
je
pop
jbe
ljmp
cs
and
mov
pop
or
js
ds
hlt
enter
cmp
xor
ret
cmp
inc
xlat
mov
mov
pop
pop
xor
cwtl
aas
inc
pushf
xchg
xchg
sbb
pop
enter
fucomip
cmp
mul
cmp
pusha
sbb
sub
adc
xor
jbe
inc
in
imul
add
inc
mov
and
mov
pop
inc
or
mov
in
push
add
pop
add
mov
sbb
push
mov
nop
out
mov
mov
repnz
andl
pop
vpxor
xor
mov
popf
dec
stos
xchg
cltd
mov
insl
int3
xchg
ret
xchg
mov
or
xor
inc
jmp
mov
sti
jns
movsl
adc
mov
add
jecxz
add
lds
lret
xchg
jnp
and
mov
and
cmp
inc
jno
fs
jo
push
mov
push
mov
push
je
jge
add
sar
cmp
jnp
rcrb
sarl
push
rcl
lods
in
stos
mov
pmulhuw
inc
sub
push
insl
subb
pop
fcmovne
cmc
ds
sbb
mov
aad
mov
fwait
cmpsl
rcrb
push
add
cmp
in
dec
and
imul
cmc
in
ljmp
add
in
arpl
in
or
or
out
jle
test
add
ror
or
push
loope
imul
dec
jl
jne
xchg
xor
sti
lret
jbe
xchg
andb
jmp
nop
xor
shlb
xchg
les
addr16
fidivl
jge
jle
pop
outsl
in
stc
dec
cmp
js
mov
pop
pop
scas
fs
scas
mov
testl
in
or
mov
inc
or
sub
sbb
lahf
push
imul
mov
cmpb
into
push
fnstenv
jne
sbb
stos
in
std
int
mov
out
cmp
push
out
push
sub
xor
pop
testl
outsl
aad
stos
lret
dec
mov
fmuls
arpl
xor
iret
mov
aad
mov
mov
cmp
sahf
nop
mov
add
popf
loope
divl
pop
jno
sub
mov
js
mov
and
scas
sub
ss
shrl
aaa
in
mov
int
jecxz
pushf
loopne
mov
addps
mov
jge
imul
shrl
addl
adc
add
int
dec
inc
ret
dec
test
jge
in
pop
pop
insb
mov
fcmovne
stc
xchg
sbb
mov
cli
cmp
cmp
imul
xchg
bnd
xchg
sub
inc
rcrl
scas
shrb
pusha
xor
flds
scas
hlt
xlat
pop
inc
int3
std
faddl
frstor
aam
push
mov
sbb
inc
xor
pop
fsubr
insl
rcr
jecxz
std
cmp
push
add
push
push
popa
pop
arpl
dec
push
mov
cli
xor
xor
outsl
or
subl
sub
test
xchg
lret
imul
stc
sub
in
cld
sub
or
add
xor
jg
push
mov
fs
add
outsb
testb
fs
or
cmc
inc
jne
xlat
mov
les
and
push
pop
rcrb
push
xor
lahf
shrl
dec
jne
push
loopne
add
fnstcw
pop
add
push
mov
mov
adc
int3
stos
inc
xor
push
rcrl
mov
mov
cmp
xchg
xor
cwtl
addb
sbb
push
inc
es
mov
cmpsb
loopne
or
mov
sbb
xlat
addr16
dec
loope
mov
push
mov
fcmovu
pushf
inc
sub
dec
test
stos
aas
inc
sub
mov
dec
aas
punpckhbw
fidivrs
cmc
mov
inc
sahf
ljmp
aad
and
fdivs
inc
in
nop
out
ljmp
cmp
aam
xchg
pop
scas
cmpsb
icebp
icebp
jno
sub
jns
add
mov
add
test
mov
jg
fisubrs
mov
cmp
or
dec
das
insl
jp
out
jg
fidivl
cld
and
sbb
aad
dec
sbb
mov
int
cmp
or
mov
in
test
and
shrb
adc
cmpb
ret
and
in
mov
push
testl
mov
insb
xchg
jmp
int
add
rcll
or
jo
pusha
mov
in
test
ret
add
adc
imul
fst
fisubl
jg
dec
add
je
xchg
push
nop
in
enter
loope
nop
in
out
fs
clc
xchg
sub
sbb
fisttps
cwtl
mov
out
dec
movsl
int
dec
jne
ror
insl
cmpsl
cmpsl
call
mov
cmp
and
mov
imull
jl
jbe
inc
mov
hlt
xchg
cmp
scas
add
mov
test
rorb
sub
in
andb
sbb
jae
jmp
sahf
inc
movsl
xlat
pop
mov
mov
mov
inc
pusha
scas
sbb
xor
mov
or
fldenv
add
lds
push
inc
mov
cmp
mov
ret
out
inc
xor
inc
jnp
loopne
or
ret
imul
push
dec
aad
mov
cmc
jmp
scas
negl
test
aaa
inc
clc
pop
dec
mov
xor
and
sbb
stos
ret
mov
call
cmc
fsub
js
out
mov
mov
cwtl
fucom
dec
ret
pushf
jae
pop
inc
into
pop
add
xor
jle
adc
mov
inc
lea
mov
cmp
inc
or
and
bound
xor
push
jecxz
lods
mov
push
fwait
xor
sbb
xchg
pop
stc
daa
pop
test
push
push
into
sub
fisubs
add
add
scas
jg
jnp,pt
movsl
sub
add
std
adc
jne
sub
scas
inc
push
mov
adc
enter
movsl
or
sub
pop
fstps
jecxz
mov
or
mov
xchg
in
push
out
int3
or
mov
cmpsl
cmpsl
inc
lock
inc
push
cmp
adc
es
sti
outsb
inc
dec
cwtl
adc
orb
in
dec
cmpsl
jle
mov
or
test
push
ja
add
sbb
pop
mov
sti
fwait
rcrb
je
mov
and
and
and
pop
loopne
adc
adc
enter
in
outsb
pop
fcmovnbe
into
int
enter
into
and
push
push
movsb
icebp
arpl
out
push
cmpsb
call
test
mov
int
push
or
or
cmc
lahf
scas
xchg
mov
mov
fstl
pop
pop
cltd
js
call
cmp
ja
fcoms
aam
lds
xor
inc
add
mov
cmp
in
push
sti
pushf
loopne
pop
or
cmpsl
cwtl
mov
sbb
cmp
inc
push
or
in
cmc
aas
out
xchg
mov
cli
out
out
cmp
jecxz
and
scas
jge
mov
cmp
in
std
mov
lret
jecxz
pop
pushf
arpl
pop
and
inc
inc
pop
or
push
call
cmpl
inc
jmp
cmpsl
jl,pt
rol
jbe
xor
or
add
movsl
sub
xchg
xor
iret
mov
xchg
fsubr
ret
mulb
or
push
adc
cmp
inc
or
inc
xlat
insl
loop
add
xor
cmp
movsb
cmp
fmull
dec
adc
lahf
push
mov
cli
ja
mov
loope
mov
fs
cmc
cmp
adc
inc
cmpsl
mov
mov
adc
sti
mov
push
nop
add
jmp
adc
enter
add
push
xor
inc
orb
sub
xor
aaa
xchg
sub
xor
shl
lret
lret
das
jle
stos
lcall
into
xor
aad
pop
nop
in
dec
fsts
mov
fsubrl
inc
mov
xchg
sti
xchg
push
pushf
xchg
fldt
inc
jmp
push
cwtl
jl
daa
out
fiadds
scas
xchg
stos
xchg
hlt
or
and
jg
mov
pushf
pop
push
es
mov
je
fwait
mov
incb
inc
shll
ficomps
ret
hlt
adc
xor
and
push
or
inc
xor
sub
sub
jl
outsl
inc
repnz
stc
mov
lock
stc
mov
mov
ja
scas
cld
sbb
shll
jnp
ljmp
mov
sarb
call
outsb
out
mov
sub
or
jno
mov
cmc
or
cli
jne
fildl
inc
and
jge
stos
add
out
hlt
or
les
inc
bts
push
lret
gs
imul
add
xchg
pop
lds
ret
pop
cmp
mov
icebp
add
sti
inc
test
jmp
imul
add
in
push
adc
sahf
cwtl
dec
aas
push
addb
lret
adc
in
inc
sbb
jnp
or
or
pop
clc
ss
stos
inc
lret
shrb
mov
xor
adc
add
cwtl
mov
mov
sti
je
mov
xlat
lds
push
pop
fucom
inc
pop
sbbl
and
ror
loop
aam
fisttpll
mov
sub
xor
cmp
popf
mov
das
lods
loop
push
sbb
mov
imul
mov
sbb
push
mov
insl
das
jle
data16
mov
push
jae
mov
lret
rclb
test
mov
pop
mov
jno
fdivrs
lods
rclb
mov
lds
call
inc
popf
mov
loopne
mov
pushf
jbe
jne
inc
mov
mov
mov
mov
sbb
dec
cmpsb
xchg
shr
ret
mov
push
int
clc
and
repnz
sub
cmp
or
roll
mov
imull
xor
add
cltd
pmulhuw
mov
movsl
push
mov
mov
fisttpll
jge
pop
push
sub
xchg
outsl
cmc
jno
mov
xchg
imul
pop
loope
cmp
adc
fcoml
xchg
xchg
and
ret
inc
lods
test
fnsave
pusha
mov
sbb
test
inc
pop
out
imul
xchg
les
mov
stc
imul
cs
test
ret
pop
push
push
fsubrl
and
repz
jl
or
fstpl
ret
data16
and
fucomi
push
lcall
inc
mov
push
jnp
xor
push
inc
jns
dec
outsb
and
push
jnp
inc
dec
out
outsb
into
xchg
lea
cmpsl
or
sub
shrb
push
cmp
test
int3
stos
out
dec
mov
inc
add
rorb
jae
imul
lods
rcrb
cmp
lock
and
addr16
fisttps
jmp
mov
ret
xor
pop
pushw
pop
repnz
out
add
or
xor
cmp
sub
ret
jbe
int3
push
push
xor
pop
test
mull
xlat
subb
into
test
addr16
out
out
loop
dec
cmp
sbb
xchg
jp
add
ds
daa
adc
pop
push
mov
push
inc
rorb
pop
mov
push
or
test
or
or
daa
js
mov
adc
or
mov
sarb
fmuls
int
sarb
inc
fsubs
scas
aad
mov
pushf
push
jno
xor
pop
sahf
pop
adc
fldl
adc
push
in
adc
loopne
pushf
mov
lods
pop
mov
enter
divl
pop
enter
sarb
icebp
das
popa
mov
into
add
mov
mov
and
mov
sub
inc
mov
frstor
movsl
mov
cmpsb
call
ds
repnz
movsl
hlt
div
fcmovnb
xorl
pop
in
dec
push
xor
lods
inc
lods
mov
sbb
repz
inc
enter
cmp
sti
xchg
mov
movsl
mov
test
jp
or
xchg
ljmp
pop
inc
mov
jge
push
xchg
jmp
pop
shll
fcmovnbe
ret
ss
xor
jb
shl
sti
dec
sbb
std
sahf
mov
fldt
mov
cmpsl
add
aad
in
xchg
stos
jecxz
jb
psrlw
cmc
movsb
lea
jb
jmp
bound
push
jecxz
and
mov
adc
ja
lret
add
mov
mov
xlat
mov
cmp
mov
cwtl
adc
pop
dec
dec
mov
jno
adc
arpl
pop
pop
nop
xchg
cmp
jns
jle
fwait
add
mov
cld
inc
add
outsl
cmc
stos
fistpll
mov
neg
lods
push
cmpsl
push
fs
aam
popf
arpl
rcrl
subl
ljmp
cmp
xlat
or
test
dec
pop
arpl
push
jecxz
int
aaa
stos
lods
das
add
scas
into
jp
fcoms
or
inc
in
mov
jge
ficompl
ret
scas
push
jge
inc
pop
in
data16
in
push
repz
xlat
cmp
ljmp
jbe
push
hlt
mov
je
pop
outsl
push
mov
dec
pop
fcomip
mov
jg
mov
test
in
stos
xchg
cs
mull
push
and
or
cmp
cltd
and
shrb
ja
mov
add
xor
and
inc
filds
sub
xchg
or
fsts
pop
ffree
dec
mov
inc
dec
or
data16
ret
lahf
lahf
cltd
inc
xchg
cmpsl
fdecstp
cmp
sub
and
popf
inc
fildll
fcmovnb
ficoms
xor
sbb
jp
adc
jbe
fnsave
cltd
fcoml
mov
pusha
sbb
arpl
fwait
push
sub
call
ret
or
nop
scas
jo
sbb
push
into
lods
std
scas
pop
pop
cmp
jb
mov
or
inc
cltd
mov
in
mov
imul
aam
pop
and
sub
clc
daa
and
push
fldenv
test
and
pop
iret
or
push
sti
daa
dec
cwtl
pop
jmp
xor
fs
scas
pop
sahf
lret
orl
push
inc
mov
pop
enter
inc
arpl
xor
sub
popf
ss
and
fwait
push
mov
ret
push
mov
fdivr
pop
xchg
inc
push
sub
andb
mov
dec
scas
fsub
cmp
mov
mov
clc
xchg
adc
cmp
nop
xor
aas
mov
sahf
das
mov
lahf
nop
inc
mov
sub
mov
inc
fistpl
inc
nop
xchg
xor
cmpsl
pop
xor
cltd
in
stc
rcrl
inc
mov
inc
dec
in
arpl
call
stos
jne
scas
xor
add
popa
add
mov
inc
sbb
stos
out
aad
push
mov
mov
add
sbb
mov
adc
push
cmpl
push
scas
ss
push
rcrl
xlat
arpl
xor
shll
mov
inc
ja
push
cmp
ret
push
inc
jo
cs
inc
and
xor
add
mov
inc
pop
dec
das
cmp
cmp
add
or
repnz
rolb
movsl
testl
xchg
adc
iret
ret
and
jbe
sahf
jge
mov
push
push
or
mov
scas
icebp
dec
xchg
mov
lahf
inc
movsl
lea
ficomps
insl
mov
push
and
rcrb
in
popa
icebp
std
mov
pushf
pop
dec
inc
jp
addb
mov
xor
xor
sarb
fisttpl
ret
jo
add
jae
or
lahf
stc
jne
jno
in
shlb
in
aam
repnz
stos
xchg
jecxz
xlat
xor
push
aam
jp
ljmp
in
mov
adc
rorb
adc
fsubrs
rorb
rcrl
xchg
les
in
xchg
shll
shlb
dec
dec
rorl
cmp
insb
nop
mov
in
mov
inc
add
xchg
cmc
mov
inc
sti
fmuls
mov
sbb
jp
adc
mov
orb
push
cs
pop
pop
inc
ljmp
lds
rorl
ret
push
mov
nop
ja
lods
push
and
cli
pop
or
loope
or
pop
cmp
adc
mov
mov
inc
sbb
movsb
add
ret
aas
adc
pusha
mov
jae
stos
xlat
ret
mov
cmp
in
jne
nop
icebp
pop
cli
xchg
push
stos
aam
mov
inc
sbb
add
int
inc
jg
loop
pop
fisubs
ret
jp
or
daa
popa
in
sbb
cmp
lret
pop
sbb
jp
in
mov
shrl
xlat
push
xchg
out
sub
ret
mov
addr16
xchg
add
push
adc
jne
mov
xlat
dec
xorl
cmp
inc
sub
daa
fcmovnb
subl
mov
push
cmp
xor
sti
std
in
in
out
iret
push
and
inc
test
mov
sub
cmp
iret
pop
rorl
push
pop
jae
repnz
clc
inc
int
call
jae
or
or
fldt
fs
push
xor
rclb
call
int3
pushf
insl
pop
call
xor
push
sub
pop
lods
jg
sbb
es
push
out
pop
addr16
sub
jbe
rcrl
inc
push
pop
adc
pop
mov
movsl
lahf
xor
cmc
outsl
mov
repnz
inc
dec
adc
adc
popa
jecxz
in
mov
fwait
add
mov
or
stos
sbb
insl
ret
sbb
mov
sahf
xchg
test
mov
cmpsb
mov
mov
rcrl
cmp
repnz
iret
jp
call
xchg
or
xchg
cmpsl
imul
rcrl
push
jecxz
mov
ret
pushf
loope
sub
lods
sbbb
sub
pop
std
sub
mov
daa
lcall
fldenv
stos
fbstp
ss
push
daa
or
movsl
xchg
jmp
arpl
clc
sti
cmpsb
rol
xchg
pusha
add
cmc
mov
outsb
insl
push
mov
les
sbb
mov
dec
cmpsl
sbb
mov
xchg
add
pop
fnstenv
pushf
mov
daa
popf
push
stos
out
andl
mov
xor
andb
lea
aam
mov
lret
xor
mov
sub
outsb
xchg
xchg
pop
fldl
xlat
loop
mov
inc
dec
jbe
rcrl
cmp
stos
pop
cmp
ret
or
addr16
mov
mov
ret
scas
xchg
xchg
fcompl
test
jecxz
xlat
push
movsl
mov
loopne
mov
addb
mov
incl
outsl
aad
aaa
in
pop
xchg
dec
sub
int
push
inc
push
cwtl
lea
mov
jo
inc
mov
dec
shll
pushf
xor
inc
add
outsl
mov
cmp
stc
lret
lret
enter
sbb
popf
fs
cmp
mov
loopne
xchg
mov
or
lea
mov
sbb
dec
mov
clc
or
std
mov
cli
inc
mov
pop
inc
fisttps
cmp
cmp
xor
or
fcomp
adc
pop
sti
lea
add
mov
jno
in
into
mov
cmpsb
pop
pop
sbb
int3
cmp
out
mov
shl
xchg
ljmp
call
dec
subps
jp
push
mov
sub
inc
out
je
aam
xor
sbb
dec
push
xchg
into
pop
inc
xchg
stos
ret
in
ss
mov
sbb
xchg
xlat
sub
fwait
bound
test
push
out
lods
sub
push
loop
in
jg
das
call
and
ret
fmull
push
mov
sbbb
ret
rcrl
fld
std
loopne
in
push
xchg
or
lea
cmp
ds
mov
fdivs
xor
inc
jecxz
pop
test
subl
push
jge
cmp
or
jbe
out
inc
out
push
scas
xchg
pop
jne
lret
repnz
dec
in
lcall
or
aad
into
sbb
arpl
aaa
int3
pop
lock
sub
scas
push
repz
imull
inc
test
push
or
xchg
ret
mov
xor
or
mov
ror
mov
mov
or
in
xchg
dec
pop
dec
xlat
sbb
scas
and
bound
in
iret
xchg
or
mul
lea
ror
mov
aas
loop
pop
xor
push
mov
push
addr16
inc
add
shlb
daa
jo
xor
push
jno
or
or
jg
in
ret
xor
add
rcll
inc
lcall
mov
fmull
jne
inc
into
inc
push
xchg
push
inc
jbe
mov
repnz
xchg
cmp
shl
test
cmp
sub
xlat
and
lcall
cmpsl
icebp
mov
addr16
imul
pop
call
inc
jp
mov
aad
rcll
cmp
adc
mov
bound
inc
ret
cmpsb
sub
std
jae
push
jg
sbb
jnp
add
int
addr16
push
test
mov
push
pop
sbb
lret
add
stos
and
add
scas
ret
insb
dec
or
inc
insl
mov
xchg
setae
xchg
sarl
mov
pushf
lods
test
jb
jp
pop
pop
inc
and
jg
and
divb
call
xor
push
in
or
cltd
dec
in
pop
stc
cmp
push
in
pop
pop
test
cmp
xor
rcrl
nop
xor
jb
fnstenv
mov
cmp
pop
sbb
orb
inc
dec
jns
fldt
lcall
xchg
pop
mov
adc
imul
add
in
in
or
add
dec
ljmp
xchg
jp
clc
push
bound
hlt
fwait
push
dec
loopne
stos
iret
call
and
leave
sub
dec
inc
inc
mov
popf
and
fcmovnb
pop
jecxz
in
inc
dec
into
add
xor
xchg
pop
loopne
loope
fwait
push
cltd
sub
and
test
ficoms
outsl
mov
push
ret
push
cmp
mov
jg
lds
sbb
jne
gs
adc
push
or
inc
sub
xor
add
or
inc
jnp
scas
mov
jns
and
cmpsl
mov
sahf
cmp
out
jle
add
dec
cmp
int
decl
shll
repz
in
xchg
fnstenv
inc
add
sbbb
push
push
mov
add
mov
ret
fisttpl
xchg
mov
ja
cmp
cmpsl
rcr
cld
dec
jge
je
leave
test
pop
adc
pop
mov
inc
insl
fcomp
dec
xchg
shl
pop
mov
test
jne
fld
lods
rol
add
and
dec
xchg
outsl
jecxz
inc
ror
loopne
jo
dec
xchg
add
mov
not
push
jnp
jg
fwait
sti
inc
popa
iret
lret
push
clc
sub
imul
sub
add
rcrl
cmc
sahf
test
pop
inc
and
xlat
dec
addr16
mov
inc
jns
pusha
hlt
sbb
pop
dec
test
andl
ret
push
or
hlt
push
stos
pop
and
sbb
je
pushf
rcrb
push
mov
sbb
and
mov
or
ffree
push
add
xlat
sbb
add
or
arpl
cmp
sub
outsb
xor
sti
adc
movsb
sbb
fstl
js
pop
lret
mov
fucom
incl
sub
cwtl
popa
xor
xchg
imulb
cmp
lods
mov
lret
sub
mov
dec
xchg
inc
les
xlat
fsub
fstl
inc
inc
cmp
add
arpl
jbe
in
sub
dec
out
rorb
mov
dec
mov
jg
xchg
cmp
je
loop
xchg
in
loope
pop
adc
stos
dec
lods
inc
test
push
xlat
push
xchg
and
leave
and
push
inc
aas
stos
test
sub
scas
xor
inc
jl
sbb
pop
xchg
out
inc
push
shrl
frndint
stc
cmp
mov
stos
gs
fdivr
nop
inc
sbb
inc
sbb
pop
fldt
inc
xor
ljmp
cmp
out
inc
out
ficoms
mov
scas
adc
jo
jle
mov
sub
je
jo
or
or
xor
aaa
mov
mov
inc
mov
mov
and
test
cmp
mov
jg
frstor
xchg
call
push
xchg
sub
inc
aad
pushf
repnz
fisubl
push
jo
push
xor
jns
jl
subps
mov
insb
lods
push
pop
pushf
out
in
inc
mov
inc
lahf
mov
or
rclb
femms
mov
std
sahf
inc
cwtl
mov
xchg
xchg
flds
lret
data16
insb
ret
push
jg
inc
enter
inc
shr
outsb
mov
lret
aas
inc
aaa
testl
xor
sti
int3
sahf
and
andl
lret
adc
xlat
mov
inc
push
scas
daa
fadd
jle
xchg
outsl
fistps
pop
negl
add
mov
jge
aaa
push
mov
outsb
inc
scas
movsl
test
fwait
ret
dec
jl
or
loopne
cmp
int3
xchg
xor
lods
hlt
sub
sub
ljmp
add
outsb
jo
dec
lcall
fcmove
dec
xor
cmp
clc
sbb
pop
jge
push
test
arpl
push
xlat
mov
adc
fimuls
test
cmp
out
mov
sbb
jbe
xchg
push
int
je
adc
dec
shlb
pusha
inc
add
ret
mov
cmc
stos
xchg
lock
scas
xor
cmpsl
inc
dec
test
sub
inc
mov
dec
xor
out
repz
ret
setge
gs
inc
pop
cmpl
dec
or
stc
repz
sub
arpl
imul
addr16
cs
mov
pop
sti
insb
pop
movsl
js
xor
movsb
sub
sar
mov
dec
jne
jge
pop
mov
fadd
mov
insb
stos
or
inc
pop
or
dec
dec
mov
fidivrs
mov
sbb
inc
arpl
mov
inc
and
inc
lret
lods
addr16
pop
xchg
addb
cmp
mov
je
test
mov
into
push
roll
loop
add
and
ret
movsb
lods
jmp
cltd
inc
mov
dec
call
mov
sub
mov
adc
fdivs
cltd
dec
mov
xor
in
testl
in
rclb
xorl
mov
ret
mov
mov
cs
mov
popf
js
sbb
jge
mov
sub
xchg
mov
jnp
jno
ret
in
cld
lret
cmpsl
test
mov
push
inc
mov
int3
adcb
cltd
insl
inc
xor
cmp
xor
adc
call
pop
call
into
pop
test
insl
subb
stos
fcmovne
push
mov
test
test
lods
mov
in
lahf
cs
aaa
out
cltd
ret
mov
sarb
in
mov
mov
or
push
loope
or
sbb
arpl
cld
jno
in
sbb
scas
clc
test
sbb
push
inc
test
repnz
inc
lcall
sub
aad
and
or
idivb
stc
push
sarb
pop
jg
scas
pushf
lods
jg
xchg
movsl
pop
push
sbb
inc
adc
aaa
aas
push
and
shr
or
jge
inc
pop
vphaddudq
add
jno
out
pop
pop
es
xchg
sbb
insl
loop,pn
sub
pop
icebp
jp
add
test
sub
dec
sub
popf
xor
sub
lret
xlat
ficompl
pop
dec
dec
repz
push
add
nop
stc
cmp
jecxz
lcall
or
shrl
out
aam
or
inc
pop
add
mov
mov
ja
pop
ret
loop
and
cmp
call
mov
mov
jecxz
or
push
inc
out
push
xor
sahf
mov
pushf
jecxz
ret
mov
mov
or
pop
cmp
mov
add
repnz
lods
adc
repz
add
dec
mov
stc
xor
fidivrl
lods
and
lea
inc
or
je
ffreep
add
sub
pop
sarl
ljmp
and
sbb
push
push
inc
lcall
jle
jno
push
and
jns
mov
into
js
add
stos
mov
pop
mov
mov
mov
into
mov
add
mov
pop
sub
jmp
add
mov
fsts
mov
push
xchg
test
adc
iret
dec
mov
xchg
inc
mov
push
mov
inc
cmp
add
and
ficoml
xor
icebp
fs
aas
xchg
test
enter
dec
stc
cs
orl
mov
repnz
in
and
insw
xor
sbb
lock
push
sbb
stos
xchg
jecxz
and
add
jb
adc
fwait
test
movsl
roll
scas
fdivrp
push
pop
mov
cwtl
shll
stc
les
cmp
sbb
lar
push
pop
sub
pop
pop
subl
mov
or
cmp
or
add
adc
hlt
loop
repnz
aad
xor
addr16
mov
loop
jp
cmp
pop
push
in
popa
jns
cwtl
adc
jb
adc
inc
int
add
inc
loopne
lret
rcrb
out
mov
icebp
dec
shl
xor
pop
push
adc
into
jg
cmp
sbb
or
fwait
xor
arpl
xchg
outsl
pop
cmp
cltd
std
mov
popf
ret
xchg
mov
mov
int
ljmp
je
push
add
aas
xor
aas
nop
les
fadd
mov
pop
or
dec
imul
loop
filds
les
call
mov
mov
ret
push
inc
dec
nop
aad
fcmovu
addl
fisttpl
inc
mov
sbb
fadds
rclb
popa
imul
or
add
mov
inc
or
pop
jg
sahf
outsb
and
jle
stos
mov
pop
push
mov
out
loope
lods
shrb
jbe
push
bound
add
arpl
mov
ror
push
inc
inc
inc
leave
test
push
mov
jg
aad
push
mov
push
inc
adc
push
mov
inc
add
fstp
dec
inc
in
pop
lcall
je
or
flds
mov
cwtl
and
jl
rorl
mov
push
push
std
sbb
mov
or
sbb
mov
fadds
mov
sbb
popf
push
dec
fldl
ja
or
testl
dec
sahf
dec
and
imul
push
cltd
imul
xchg
sub
inc
out
out
iret
or
in
xor
rcrb
fmulp
out
cmp
fistl
int3
aas
fwait
mov
or
mov
inc
and
test
shrb
outsl
daa
out
pushf
jl
lock
aam
cmp
subb
daa
test
mov
dec
testb
xor
mov
inc
push
jae
stos
push
enter
or
fdivrp
hlt
jne
add
cmc
addr16
xchg
inc
movsl
inc
mov
lods
insl
mov
negl
mov
xchg
jecxz
dec
pop
iret
lahf
cmp
mov
dec
xchg
pop
mov
ret
out
enter
int
push
pusha
mov
mov
inc
or
sbb
dec
bswap
mov
bound
or
sbb
sahf
and
in
sbb
adc
fwait
movsl
push
decl
outsb
add
push
xor
out
adc
std
or
inc
lret
or
inc
ljmp
push
nop
cmp
inc
or
ret
adc
cmp
es
sahf
jns
push
xchg
or
gs
cmp
pop
stos
push
ja
je
out
or
pop
call
and
mov
mov
movsl
cld
cli
leave
aad
lret
or
aas
mov
mov
adc
aas
push
sub
inc
pop
mov
cmp
xchg
movsb
add
cmpb
stos
add
insb
mov
and
loopne
jp
mov
fsubrl
or
and
push
cwtl
js
cmp
xorb
mov
outsl
lods
daa
inc
inc
sub
je
sbb
cmp
mov
sub
mov
pop
inc
int3
mov
shl
iret
fnstcw
xchg
dec
add
fsubl
pop
cmp
inc
mov
mov
xlat
out
mov
sub
add
outsl
pop
loopne
int
mov
loop
mov
xchg
lahf
lea
loopne
mov
pop
sub
jmp
or
or
sub
scas
jmp
adc
fisttpll
ret
pop
inc
pop
addr16
popa
movsl
fwait
push
int3
fdivrl
ffreep
jnp
dec
loopne
push
mov
mov
and
inc
mov
xor
pushf
mov
cwtl
hlt
aam
inc
xor
adc
sbb
fcoml
arpl
incb
and
fsubs
xlat
and
dec
pusha
add
sub
gs
cs
test
negl
cmp
sti
add
adc
push
lahf
stos
hlt
pusha
movsl
arpl
imul
in
call
dec
aad
imul
mov
xchg
xor
mov
cmpsb
or
xchg
adc
mov
push
subb
dec
push
aam
mov
stos
adc
xor
loop
ud0
imul
xchg
fsubrl
jg
xor
mov
pop
add
out
xor
arpl
and
xchg
dec
cmpsl
out
leave
sub
out
jp
and
fdivp
leave
lahf
fs
rcl
call
sub
icebp
lods
sbb
sahf
clc
sub
outsb
outsb
push
int
inc
clc
loopne
jle
sbb
sbb
mov
cmpsl
or
mov
in
xchg
sbbb
xor
movsl
cld
xchg
mov
int
push
fwait
lret
ljmp
je
roll
int
scas
pop
and
sbb
add
das
add
rorb
sub
cld
and
ds
jmp
adcl
flds
xchg
into
fidivs
movsl
popa
pusha
add
pop
les
lea
shrl
xor
movsl
cld
cmp
jp
adc
or
xor
sahf
repnz
loope
lcall
push
iret
rclb
inc
lret
xlat
lea
lea
mov
adc
xlat
xchg
frstor
cs
xchg
lods
loope
or
in
inc
fstpt
inc
mov
leave
mov
lret
shrb
cli
mov
idivl
js
fxch
test
mov
outsl
imul
imulb
ret
out
jbe
std
or
push
test
stos
xlat
shll
das
adc
inc
dec
lea
movsl
mov
addr16
stos
push
adc
fsubs
or
int
test
test
adc
out
adc
dec
mov
pop
sub
xchg
stc
inc
or
jno
pop
cmpsb
xor
cmc
mov
lret
nop
and
mov
ror
test
xchg
stos
and
insb
mov
loop
cld
testb
shlb
mov
push
add
or
stos
inc
mov
fiadds
pushf
inc
enter
lcall
int
insb
imul
int
stos
je
adcl
cmp
lret
sbb
ret
adc
dec
inc
and
ret
jae
add
dec
insb
loop
add
push
aad
cmp
cmp
mov
arpl
push
jae
std
or
insb
sbb
loope
in
daa
add
jne
and
iret
aaa
inc
xchg
mov
sub
mov
pop
or
xor
shlb
sbb
jnp
movsb
std
push
out
test
sub
fdivs
iret
fisttpl
sbb
cmpsb
mov
pop
dec
mov
jg
sbb
xchg
or
and
cli
dec
les
xor
in
in
add
mov
mov
xor
push
sti
sbb
fisttpl
sbbl
cmp
fisubs
stc
jge
mov
dec
inc
mov
pop
dec
fimuls
adc
fwait
and
sbb
inc
jae
sub
nop
push
cs
or
cli
mov
sub
fucomip
cmp
cmp
inc
mov
push
loope
popf
and
test
inc
daa
into
xor
loop
pusha
adc
and
call
ds
pop
dec
cmc
mov
sub
lea
dec
rcll
ja
sti
xlat
sub
push
outsb
sbb
cmp
test
or
ret
add
roll
insb
mov
pushf
jae
inc
aas
inc
test
idiv
ffree
lods
pop
stos
jns
xchg
cltd
jg
inc
mov
fstl
pop
stos
pop
pop
mov
xchg
sbb
bound
add
test
dec
pushf
mov
pop
sahf
mov
arpl
cmp
xor
ror
sub
mov
inc
push
pop
rcrl
ror
or
std
scas
jecxz
ret
mov
inc
nop
fldl
and
mov
inc
lret
mov
scas
shrl
mov
in
jno
xchg
sti
stos
cltd
lcall
xchg
pop
ret
xchg
jo
pop
movsl
cmp
imul
cmp
push
pop
inc
loop
rorb
adc
jle
mov
mov
mov
sarb
jmp
hlt
cmp
cmp
loope
mov
fwait
push
xchg
jns
sti
mov
sub
jp
mov
pop
fnstcw
inc
push
jg
xchg
in
cld
dec
sti
fwait
jne
out
fmull
adc
lret
arpl
sub
pop
data16
or
arpl
fs
popa
push
jbe
call
std
and
inc
and
xor
shrl
push
dec
or
or
mov
xchg
ret
rclb
repnz
movsb
xchg
movsl
sub
add
cwtl
rcrl
sbb
cmc
sbb
jge
mov
sbb
push
and
mov
add
into
les
fwait
cmpsb
pslld
adc
inc
into
mov
mov
mov
fs
xor
daa
xchg
clc
lcall
push
cmp
das
cmp
fisubs
or
nop
dec
fdiv
cmp
shll
dec
add
dec
ljmp
cmp
lret
andb
int
mov
mov
jecxz
arpl
sqrtps
lret
fildll
aaa
loope
rcl
fists
pop
cmp
inc
fisubrs
pop
inc
rcrb
inc
dec
call
dec
xchg
pop
ret
lds
cmc
pushf
dec
ret
adc
test
adc
lods
rolb
inc
repnz
aam
sub
ss
sti
mov
stc
push
jg
mov
aas
cmp
fstpl
pop
mov
xchg
jecxz
cmpsb
mov
pop
inc
xchg
lea
scas
int
pop
imul
sbb
addb
xor
pop
mov
inc
testb
stos
movsb
ja
and
rcl
sbb
adc
aam
xor
jb
ss
enter
pop
inc
fs
sti
shrb
xchg
dec
dec
cli
movsl
xchg
in
dec
adc
cmp
cmp
add
sub
mov
lahf
inc
add
mov
sar
ds
nop
mov
add
call
or
adc
lods
aad
addr16
notl
loope
sbb
pop
aas
popa
or
and
lret
push
inc
mov
xchg
fwait
mov
int
in
into
orl
add
filds
ret
stos
mov
mov
loop
fwait
mov
inc
push
sbb
cmp
test
and
xlat
in
xor
mov
sub
ret
jae
fisttps
test
sub
sbb
loop
int3
xor
cmp
inc
inc
insb
cmpsl
cmp
fstpl
test
pop
mov
sahf
mov
lret
cwtl
fstl
fmuls
xor
xchg
sbb
sbb
js
xlat
sub
shlb
ja
mov
loopne
sar
je
sti
imul
add
pop
mov
sub
loope
outsb
js
popf
mov
lret
pop
in
popf
fs
stos
xor
cmp
mov
xchg
cmp
bound
mov
js
lcall
pop
mov
sbb
daa
rorb
insb
sti
call
and
stc
pop
xchg
test
push
cmp
inc
cld
xlat
jg
lret
bndldx
in
mov
js
inc
clc
dec
outsb
loop
or
inc
icebp
adc
pusha
jno
pop
ja
rclb
in
pusha
pop
movsb
es
add
jmp
adc
mov
mov
cmp
repz
sub
push
dec
arpl
mov
sti
sahf
push
inc
inc
aad
sbb
clc
sub
mov
nop
and
mov
imul
xchg
icebp
inc
cs
into
mov
mov
loope
inc
and
mov
flds
push
sub
sbb
cmpsl
cwtl
in
adc
out
xor
in
jg
xchg
dec
pop
mov
pop
inc
xchg
xlat
frstor
lods
int3
and
lret
in
sbb
dec
dec
lret
fisttpll
out
adc
sub
sub
jp
push
insl
addr16
sub
mov
dec
add
out
mov
push
jl
rorb
fcoms
fsubr
ret
nop
in
test
mov
push
mov
lods
shrl
pop
rcrl
xor
subb
and
pop
movsb
xchg
xchg
cld
movsb
aam
lret
mov
xlat
push
adc
mov
pop
scas
ret
dec
jecxz
push
jne
imul
sub
adc
dec
or
and
mov
push
xchg
aas
lea
dec
imul
icebp
sbb
iret
and
adc
je
add
sub
fimull
or
and
inc
lret
insl
adc
and
ret
stos
fs
push
mov
fmuls
and
push
push
xchg
std
push
cmpsl
fsub
scas
push
jecxz
sbb
jecxz
popf
adc
dec
fisubrs
cli
ret
mov
arpl
js
in
pop
shr
sbb
dec
cltd
add
sub
lods
aad
inc
aas
sbb
arpl
dec
out
mov
nop
pop
mov
out
ljmpw
shl
arpl
and
mov
cltd
ljmp
inc
cwtl
or
and
jecxz
sub
es
scas
pop
addr16
mov
fwait
loop
push
pop
adc
pop
movsb
loop
jne
scas
and
ret
in
add
pop
xchg
sub
out
mov
inc
lret
sbb
adc
adcl
je
or
pop
ret
in
aas
or
inc
mov
repz
or
sti
je
in
aam
in
xchg
negl
outsl
fs
inc
mov
iret
cmpb
xchg
int
mov
or
push
or
andb
sbb
cwtl
or
cli
jl
cmp
scas
cmc
xchg
mov
ret
push
xor
mov
inc
ja
xor
enter
add
into
inc
push
push
adc
jno
xor
jbe
dec
pusha
daa
or
sub
fidivrl
mov
aad
test
mov
dec
push
xchg
cmp
jl
xchg
lea
loope
and
xchg
fwait
lea
push
jle
jmp
pop
repnz
inc
iret
test
sbbb
cmpsb
cmp
xor
unpckhps
pop
mov
ds
pop
mov
js
mov
mov
outsb
xchg
in
sti
mov
inc
mov
sub
adc
inc
lods
or
packuswb
mov
xchg
adc
jp
cld
fstpt
roll
add
shlb
sahf
mov
inc
dec
or
mov
mov
mov
sbb
and
pop
sbb
test
jns
int3
cltd
icebp
in
push
imull
mov
cmp
test
sti
add
out
inc
mov
jecxz
andl
jo
cmpsl
xchg
std
cmpsl
push
adc
push
sahf
testb
int
mov
aad
test
dec
std
ffree
and
pop
ljmp
test
xor
pop
nopl
xlat
enter
xchg
call
sub
push
pop
pushw
sub
mov
pop
or
xchg
xor
mov
jae
or
rorl
arpl
sbb
sub
subb
sbb
mov
dec
and
jecxz
or
or
scas
popf
in
aaa
pop
sbb
or
mov
cwtl
movl
push
repnz
mov
lret
sub
cmp
nop
mov
mov
jp
mov
mov
sbb
xchg
cmp
push
div
mov
xorl
fsubrl
ja
push
scas
sub
xchg
clc
cmp
andl
lcall
std
adc
movsb
xchg
pop
dec
cmpsl
mov
xchg
ret
jge
xchg
jge
push
outsb
dec
or
fmull
int3
cmp
sub
sarl
xchg
lock
cmpl
jge
xchg
fcompl
das
lret
pushf
pop
inc
popf
jecxz
fnstenv
jg
jg
pop
push
or
mov
mov
scas
pusha
shll
aaa
inc
xor
imul
mov
in
scas
sbb
inc
call
add
stos
jecxz
aaa
movsb
mov
mov
fnstenv
add
lret
data16
icebp
out
inc
shl
jge
orb
mov
inc
lret
jne
mov
aam
icebp
fadds
ss
repz
out
push
repnz
fimuls
movsb
cmp
mov
pop
out
fistpll
jg
rclb
popa
pop
std
fadds
shlb
mov
dec
add
das
enter
mov
and
cmp
mov
ret
sarl
pop
push
fisttpl
iret
cmpsl
inc
pop
movsl
imul
mov
push
sbb
cmp
imull
in
push
sub
out
sbbl
lret
xor
xchg
push
test
pushf
pop
and
sbb
repz
push
xor
pop
fsubs
cmp
dec
xchg
xor
sub
add
movl
pop
ret
mov
sbbl
arpl
js
test
sub
jecxz
add
mov
pushf
clc
mov
fs
or
movsb
push
or
cmpsb
inc
out
pop
mov
push
and
in
xchg
mov
fs
ror
fisttps
mov
mov
adc
mov
popa
gs
loop
inc
fisttps
sbb
sbb
xchg
popa
inc
cltd
xor
dec
xchg
push
push
add
mov
xor
rclb
pop
dec
mov
xchg
scas
fstl
fs
inc
pushf
adc
fisttpl
scas
fstl
stc
dec
or
mov
xchg
sbb
cmp
fcomps
mov
inc
les
mov
add
lret
mov
cli
aad
cs
cmp
push
mov
and
push
xor
mov
adc
xchg
mov
mov
or
sbb
sti
push
xor
ror
inc
imul
jne
add
int
xchg
repnz
stos
fadds
in
popa
pop
pop
pop
sub
jg
xchg
test
or
call
popf
inc
adc
repnz
and
jo
adc
das
add
push
mov
stos
loop
xor
pop
stc
dec
fdivs
mov
and
jo
sub
pop
sahf
fwait
insb
push
sub
push
paddsw
xchg
aad
xchg
out
das
jae
popa
mov
bswap
mov
inc
ss
cli
or
adc
dec
sub
fwait
mov
in
loopne
mov
push
aad
insb
lock
push
sbb
sbb
sbb
cmpsl
in
jp
jns
rol
inc
popf
adc
jae
imul
mov
bswap
xchg
fwait
cmp
popf
mov
arpl
cmpsb
pushf
icebp
loope
leave
jge
in
jb
mov
gs
loop
in
mov
cld
xchg
lret
aas
aam
ret
int3
mov
sbb
sbb
xchg
scas
fwait
je
arpl
or
pop
push
xchg
or
mov
mov
sub
dec
or
inc
iret
in
cli
pop
rcll
dec
out
inc
dec
add
fistl
jmp
inc
fildl
out
clc
adc
test
int3
jmp
xchg
fsubl
and
adc
and
xchg
adc
lcall
adc
or
fs
in
imul
jle
jge
xchg
and
and
and
testb
lea
and
mov
in
xor
xchg
mov
add
in
in
cmp
repz
shl
rorb
inc
stos
dec
dec
pop
aas
fs
mov
jl
mov
pop
cmpsl
inc
push
mov
cwtl
cmp
cs
fwait
in
and
cmp
incl
jge
dec
lcall
fsubs
fsubrl
mov
mov
dec
int
jecxz
dec
icebp
pop
push
push
lods
cmpsb
popf
pop
call
inc
cmp
push
pop
sbbl
lea
in
adc
dec
paddusb
mov
fisubrl
lahf
or
test
shrl
js
cmove
int3
movl
aaa
sahf
inc
or
jmp
jne
cld
mov
adc
mov
out
push
mov
pop
ja
cld
insl
inc
stc
outsl
movsl
and
stc
xchg
mov
jge
pop
xor
lock
icebp
dec
cltd
pop
inc
dec
les
jae
or
adc
pop
mov
inc
out
imul
sbb
xor
repz
push
mov
cltd
jge
add
inc
imul
mov
pop
call
mov
pop
mov
cmp
xchg
sub
popf
mov
test
fidivrl
sti
pop
andb
rclb
dec
mov
add
mov
jmp
mov
out
push
rclb
pop
aad
and
add
lea
push
adc
jecxz
inc
ljmp
sub
ret
push
push
mov
mov
decl
movsl
jbe
ret
lret
in
arpl
sahf
in
hlt
add
or
aad
sti
push
dec
or
in
sub
xor
push
iret
sbb
mov
out
push
lea
xor
les
loope
xchg
pop
and
push
sbb
in
popa
mov
stos
insb
ret
shrl
xchg
js
dec
or
pop
pop
sbb
pop
or
fsubs
jmp
into
rolb
adc
aad
out
fnstenv
mov
pushf
mov
and
mov
call
stos
xor
add
xchg
mov
test
and
loope
ja
sbb
mov
cs
fcoms
sbb
fcom
sub
and
sub
fwait
push
mov
push
test
add
lret
cld
fisubs
rcl
ljmp
jmp
xor
dec
push
iret
fnstsw
cmp
jnp
rolb
jne
pusha
outsb
dec
outsl
mov
jecxz
cmp
sti
insb
cvtdq2ps
xchg
jge
add
fdivl
sbb
iret
lret
inc
loop
outsb
cmp
roll
lcall
dec
push
sub
ja
out
lea
pop
dec
sbb
imul
mov
shlb
in
pop
insb
push
mov
popf
test
mov
fwait
in
mov
pushf
cwtl
ljmp
ret
sbb
test
sbb
sub
xor
test
faddl
and
popf
lcall
xor
jne
lds
out
andl
inc
mov
xchg
popf
mov
iret
jmp
js
jg
in
in
cmpsb
in
nop
add
insl
mov
popf
cmp
sub
es
loope
and
jp
jmp
in
mov
ret
ret
inc
inc
daa
sbb
repz
aad
dec
xlat
pop
add
add
jle
inc
mov
stos
add
scas
jns
std
ja
pop
fs
movsb
cmp
add
lock
popf
call
sub
push
pop
mov
pop
jne
loop
int
int
pop
fwait
push
outsl
mov
dec
lret
push
jg
xor
dec
sub
sub
rcrb
xor
test
dec
jg
lret
je
lods
sub
pusha
push
xor
test
loop
ljmp
xor
add
push
in
jno
lods
mov
or
cmp
dec
daa
cs
loop
ret
scas
mov
or
sbb
sbb
int3
in
inc
dec
xlat
loopne
imul
mov
xor
mov
jg
push
icebp
shrl
add
out
xchg
loop
mov
pop
or
fs
stos
jb
pop
ljmp
inc
xor
mov
roll
inc
loopne
ljmp
mov
mov
mov
or
ds
mov
xor
inc
sub
clc
test
and
cmp
push
dec
in
jne
mov
out
aaa
mov
add
jle
aas
pop
jbe
push
sub
pushf
cwtl
adc
mov
nop
or
xor
add
test
ret
adc
jae
scas
scas
clc
fcmovu
out
out
and
pop
rolb
pushf
inc
stos
lock
push
adc
lea
or
fiadds
lahf
jnp
push
inc
push
cmc
stos
jge
xchg
xor
std
or
sti
sub
and
xchg
mov
sti
sbbb
mov
mov
cli
sahf
xor
or
push
xchg
jmp
fdivp
in
shl
push
insb
jo
in
mov
rolb
out
add
icebp
lods
and
jbe
ja
inc
cltd
push
fisttpll
aas
cmp
test
adc
int3
xchg
fcmovnb
lea
inc
pop
ds
xchg
lahf
jg
ud0
inc
mov
cli
ret
inc
jnp
test
cwtl
cmpsl
cs
movsl
inc
push
xchg
int3
dec
mov
ret
or
in
dec
xchg
imul
or
fistl
push
jnp
jle
push
jecxz
in
pop
sub
adc
sub
push
cmc
add
lea
dec
xchg
fisubrl
ljmp
adc
inc
sbb
aad
mov
push
dec
adc
insl
hlt
push
js
cmp
jg
push
inc
jo
test
out
dec
lock
stos
push
adc
repnz
lea
test
adc
enter
pop
cwtl
jmp
les
aas
outsb
les
loop
push
mov
stos
and
xor
lock
mov
aas
lea
insl
loope
lea
stc
movsl
and
push
shrb
rolb
test
mov
ret
xchg
in
in
rcll
cmp
fwait
push
ss
repz
enter
ss
and
lea
repnz
add
out
aaa
add
sbb
mov
adcb
xchg
pop
mov
inc
mov
mov
mov
cmp
adc
test
enter
clc
mov
rcrb
iret
mov
inc
shl
dec
sarb
rcrl
jae
mov
cmp
aad
push
stos
xchg
test
push
std
sbb
ret
orb
sub
nop
jp
shrb
pop
xor
pop
push
js
jbe
lods
mov
in
and
ret
adc
pop
aas
cltd
arpl
je
pop
lahf
xor
popf
fcoms
insb
insl
pushf
fwait
in
cmp
sahf
ss
inc
movsb
test
jno
cmpsl
int3
xchg
sub
lret
outsb
loop
frstor
xchg
rcr
enter
outsb
push
sbb
sbb
pop
adc
xchg
inc
xchg
std
fcoms
aad
lret
and
and
pop
mov
aas
inc
or
scas
or
test
in
push
mov
lahf
arpl
push
test
scas
hlt
cmp
insl
in
mov
repnz
movsl
inc
sub
add
inc
stos
cmp
pop
or
jmp
out
sbb
cmp
bound
insl
dec
lods
add
fcoms
scas
bound
push
pusha
mov
inc
cmp
lret
pop
inc
mov
inc
notl
adc
and
push
divl
push
out
inc
push
xlat
aaa
sub
cltd
popf
inc
fstps
and
das
mov
xor
test
addr16
movlps
mov
mov
or
add
rorl
adc
mov
mov
shr
adc
in
fisttpll
int
mov
scas
add
or
int3
call
xorb
mov
lea
jge
push
add
dec
stos
ficoms
inc
mov
aad
pop
mov
es
cvtpi2ps
mov
jg
cmp
or
invd
loope
loope
mov
xor
pusha
pushf
vmread
insl
sub
inc
sub
push
out
mov
pop
add
add
push
ret
in
mov
jns
jns
movsb
inc
mov
in
test
mov
decb
repnz
xchg
sbb
jne
hlt
pop
jb
hlt
adc
mov
xchg
inc
fisubs
int
dec
in
mov
inc
mov
ret
mov
les
push
adc
cmc
add
repz
rol
psubd
mov
adc
mov
loopne
aaa
push
xchg
add
dec
cmp
fs
lods
push
bound
cmp
adcb
jb
mov
push
add
mov
aas
pop
leave
xchg
rorl
lahf
aam
xchg
mov
lcall
lods
jg
cmpsb
outsb
ss
inc
jmp
adc
pushl
out
adc
push
loope
subl
fsubs
mov
negl
mov
iret
inc
adc
js
pop
dec
mov
cmpsl
push
iret
mov
mov
insb
jp
sub
dec
mov
ret
cpuid
test
mov
loopne
sub
xchg
lods
dec
lods
add
mov
mov
icebp
mov
into
jae
int3
inc
push
lock
mov
sbb
sub
je
leave
popa
dec
xchg
stos
mov
dec
in
push
iret
jmp
pop
ret
out
out
mov
jae
dec
int3
lret
dec
int3
sub
adc
push
or
cmp
out
sahf
loopne
fsts
cmp
xchg
dec
xor
jo
push
pop
js
and
inc
fstps
jp
sub
xor
imul
rorb
cmpsl
arpl
scas
repz
aam
dec
add
addr16
pop
cmc
das
aam
incl
mov
outsl
aaa
mov
test
sbb
inc
stc
xor
hlt
dec
inc
push
mov
cmpsl
lret
inc
inc
aam
jecxz
xlat
mov
jno
pop
mov
aam
mov
scas
adc
adc
fidivrs
lods
pusha
mov
jmp
ds
cmpsb
pop
sbb
mov
add
pop
and
arpl
loopne
loopne
inc
jg
andl
cli
lock
int
or
xchg
mov
and
and
loopne
mov
jno
cwtl
cmpsb
mov
jmp
adc
je
jl
cltd
in
xor
addr16
mul
and
xor
jo
cwtl
sbb
xchg
push
fildll
scas
jecxz
and
mov
adc
jno
sbb
mov
push
ret
rcrl
ss
xor
rolb
mov
hlt
mov
ret
lcall
aas
push
mov
test
and
imul
sbb
ret
mov
out
or
aad
repnz
fildl
das
pushf
stos
jg
push
out
loopne
sbb
jno
into
ljmp
mov
test
movsl
mov
inc
push
in
lea
outsb
xor
pop
inc
fldcw
jecxz
and
inc
sub
inc
mov
stos
pop
push
fldl2e
and
leave
jecxz
cs
sbb
cmp
fwait
mull
or
aam
sbb
clc
lds
add
ja
stos
movsl
popf
xchg
test
call
lea
scas
mov
jl
mov
lret
lret
sahf
sbb
hlt
xor
xchg
fdivr
add
xor
push
jp
jle
ficoml
pop
push
push
adc
inc
inc
pop
push
cld
arpl
push
inc
in
nop
in
or
xchg
mov
mov
iret
icebp
or
push
rorl
movsb
jnp
pop
rcll
out
cmp
and
loope
inc
lods
or
iret
sarl
sub
incb
and
aad
mov
fadds
lahf
xor
mov
mov
bound
add
out
ljmp
cmp
mov
aaa
mov
inc
mov
or
sti
and
mov
repnz
add
ret
add
mov
test
fwait
loopne
insb
ljmp
or
das
sbb
cwtl
mov
xchg
inc
push
jbe
ret
ffree
loopne
mov
sub
sub
rclb
ret
push
adc
idiv
add
mov
sub
sub
in
adc
lea
cmpsl
divb
inc
outsb
xchg
xlat
and
pop
aad
movsb
scas
nop
xchg
mov
ret
push
mov
adc
xor
sub
bswap
cmp
cld
add
rorb
mov
in
cmp
into
loopne
mov
inc
jo
adc
push
cmc
sahf
loopne
movsb
xchg
dec
outsb
or
or
ss
xlat
test
add
or
add
scas
test
add
stos
pop
inc
lret
or
cmp
jecxz
outsl
clc
mov
int
aas
inc
ret
inc
or
xchg
fdivrs
adc
shlb
js
lods
inc
stc
mov
ret
cmp
mov
clc
test
sbb
jmp
xchg
seta
mov
test
fildll
cmp
test
aas
ret
adc
inc
adc
pop
sbb
adc
xchg
pop
icebp
inc
int3
outsb
cmp
lcall
cmc
sbb
and
in
xchg
popa
es
pusha
jns
scas
adc
fs
pop
xchg
out
test
jae
fs
cmp
mov
pop
icebp
lret
pop
pop
sub
ret
test
lahf
mov
inc
push
jge
push
fs
aaa
hlt
cmpsb
outsl
adc
push
out
in
pop
int
hlt
mov
out
loopne
add
sti
bound
mov
push
fnsave
pop
mov
pop
mov
or
push
in
scas
inc
xor
in
lret
push
dec
push
jg
stos
pop
push
push
pop
lods
jl
mov
xlat
outsb
inc
sub
cmc
xchg
fisttpll
mov
add
lret
fiadds
sahf
inc
or
inc
pop
out
sbb
dec
pop
int
mov
jg
ds
aad
shr
fisubrl
in
sar
xor
jns
out
adc
sub
lcall
and
mov
shll
roll
add
ret
pop
das
mov
data16
xor
into
rcrl
into
loop
pop
push
insb
rorb
cmp
leave
negl
pop
pop
repnz
and
cltd
push
in
xor
sbb
dec
mov
inc
xor
and
adc
and
jecxz
shrb
lods
divps
xor
shrb
or
lcall
bnd
xor
ret
jo
fdivrs
daa
adc
lcall
mov
lahf
lds
aad
dec
fidivs
push
mov
mov
insb
dec
mov
sub
popa
sub
inc
stos
xlat
std
scas
and
sarl
inc
mov
xor
leave
lods
mov
jbe
dec
sbb
or
dec
outsl
cmpsl
pop
iret
sub
dec
dec
push
xlat
mov
repz
cmp
fistpl
rorl
inc
mov
fistpl
push
loope
out
adc
shlb
pushf
sahf
in
lahf
jae
push
fidivl
sub
xchg
xor
ret
fs
shlb
lcall
xor
jl
inc
leave
ret
pop
call
rorb
faddl
test
lock
enter
xlat
sbb
cmp
movl
icebp
cs
push
int
add
inc
inc
add
rclb
and
adc
inc
movsl
stos
jl
mov
adc
and
bound
rclb
inc
sbb
imul
adc
int3
cltd
int
nop
arpl
cmc
dec
jo
push
lcall
xor
sbb
pusha
pop
inc
insb
jl
into
push
inc
adc
pop
or
inc
rorb
adc
or
mov
inc
mov
pop
lret
mull
adc
call
sbb
add
push
call
adc
inc
inc
iret
dec
dec
daa
in
aam
adc
or
pop
xchg
loope
fbld
jge
fisttpll
das
ret
inc
in
sub
jg
xchg
gs
mov
xchg
movsb
sar
dec
repz
cmp
sti
pop
inc
stos
ret
adc
into
jns
in
mov
test
push
jmp
mov
test
adcb
mov
lcall
dec
arpl
enter
nop
push
jmp
mov
xor
mov
js
daa
push
inc
jg
inc
inc
or
mov
in
jmp
shll
xchg
je
test
adc
pop
dec
mov
mov
mov
push
fadd
and
mov
jge
push
das
sbb
push
xor
inc
sar
dec
pop
ret
adc
pop
mov
dec
movsl
call
push
mov
inc
inc
mov
sbb
fs
xchg
in
and
xor
dec
out
inc
sbb
test
outsl
lret
sub
stos
dec
inc
enter
xor
inc
add
push
pop
sbb
test
jae
loop
fst
lret
mov
icebp
xchg
adc
ja
int3
xor
mov
mov
ljmp
ljmp
out
inc
fcomip
push
js
add
mov
dec
inc
stc
mov
sahf
ret
or
test
xchg
or
dec
cmpsl
or
sbb
mov
imul
mov
sbb
hlt
cltd
arpl
data16
dec
xlat
clc
mov
lret
xor
stos
test
mov
push
arpl
shrl
or
jo
mov
push
jle
adc
pop
rorb
stos
cmp
mov
xor
cmp
loop
cmp
repz
ret
int
adc
shll
inc
popf
test
inc
inc
sar
or
inc
lret
insb
pop
shll
dec
test
jg
fcoml
inc
cs
nop
jge
outsl
or
lds
jle
inc
and
mov
inc
xchg
inc
insb
bound
xchg
arpl
pop
jge
inc
dec
repz
inc
ds
jecxz
lahf
mov
xchg
mov
push
js
jecxz
call
push
loopne
jecxz
pop
push
or
enter
scas
popa
mov
outsl
arpl
or
xchg
push
xlat
fdivs
jae
xlat
push
nop
out
sbbl
scas
inc
sahf
daa
sub
xchg
cmp
jno
inc
mov
push
ret
jl
xchg
stos
lret
cmc
pop
std
pop
mov
jle
mov
cwtl
in
lcall
nop
punpckhbw
clc
mov
push
jns
mov
jp
fwait
mov
cmpsb
or
in
inc
repnz
rcrl
aam
pop
inc
add
push
lahf
sbb
rolb
or
cmpsl
xor
jg
push
lods
jmp
andb
cmp
call
loop
dec
movsb
pushf
push
lea
sbbb
mov
aam
push
paddb
cltd
push
add
mov
mov
cwtl
or
dec
mov
push
xor
fnstenv
push
in
movsl
jg
dec
daa
push
adc
xchg
pop
mov
jge
ja
adc
or
jb
icebp
imul
icebp
xor
sahf
xor
push
enter
push
cld
or
push
pop
cmp
mov
lock
fcmove
xor
leave
pop
sbbl
stos
mov
in
mov
rcr
dec
dec
add
and
mov
cwtl
fstpt
ret
in
or
xor
push
inc
dec
fwait
mov
popf
test
cltd
lret
sbb
dec
es
in
out
mov
mov
mov
mov
jne
pop
pop
sbb
cmc
xchg
leave
in
jns
scas
cld
cmc
sub
call
imul
jnp
pop
cmp
pop
movl
or
sbb
jae
aas
inc
xchg
roll
sbb
cwtl
neg
cmp
andb
sti
mov
xor
je
jno
adc
dec
mov
xlat
lods
lret
jne
dec
sbb
in
dec
je
pop
out
pushf
adc
mov
dec
cwtl
add
int3
dec
lcall
dec
jecxz
add
out
insb
testb
cwtl
xchg
daa
xor
add
mov
ja
mov
scas
ror
add
bound
cmp
sar
jg
mov
test
orl
or
cmp
pop
stos
lcall
jnp
incb
fstpl
addr16
add
mov
adc
jae
fistl
mov
loopne
and
xchg
cwtl
sbb
jae
and
pop
add
loop
mov
or
or
je
push
in
shlb
dec
stos
psrld
negl
and
fcoml
outsb
pop
jg
ret
mov
shll
and
ffreep
cmc
stos
dec
and
add
jg
in
out
push
cltd
mov
inc
mov
daa
cld
bound
xchg
ficoms
ret
pop
mov
inc
mov
cmp
cli
mov
adc
mov
pop
out
sti
inc
jmp
fwait
sarl
bound
stos
pushf
insl
jb
adc
inc
mov
ret
or
push
aad
out
arpl
icebp
sarb
dec
loope
sub
mov
add
int3
jo
push
jno
pop
cmpxchg
orb
int
cwtl
lahf
push
leave
and
mov
lock
jbe
mov
adc
in
sub
or
sbb
push
ljmp
sub
cmp
cli
pop
pop
daa
lret
out
out
push
sbb
andb
xor
popf
insl
inc
and
push
push
xor
push
movsl
outsb
insl
and
fsubrs
mov
add
daa
sbb
push
dec
push
stos
or
xchg
jnp
or
jp
mov
cmp
mov
js
push
inc
sti
adc
xor
mov
pop
outsl
loope
push
addb
pop
pop
ficoms
cvtpi2ps
pop
jge
cmpsl
push
cmpsb
in
fs
mov
adc
push
lds
pushf
fwait
in
pop
xor
sbb
arpl
out
stos
xor
pop
sub
xor
sub
pushf
jecxz
push
and
jae
imul
ret
cmpsb
int3
in
aad
sub
adc
ret
mov
cmp
push
xchg
sub
orb
xchg
dec
ljmp
lods
jo
lock
mov
pop
add
jecxz
push
jbe
sbb
sarl
sarl
or
mov
sub
faddp
mov
xlat
fsubs
push
fcomps
mov
inc
adc
pusha
fsubp
cmp
fimull
jo
dec
inc
dec
inc
or
outsl
hlt
xor
shrl
movsl
idiv
mov
mov
jb
mov
icebp
arpl
dec
lock
sti
push
inc
in
cmp
dec
shrd
sti
stos
ret
outsb
jae
pop
push
jp
repnz
shr
mov
addr16
test
popa
ss
sarb
lret
push
call
mov
imul
hlt
mov
mov
in
jb
mov
mov
popf
shll
jmp
lods
push
gs
cmp
rcrb
xchg
and
inc
stos
jae
inc
adc
xchg
fwait
lcall
icebp
dec
jp
add
scas
inc
add
cmp
es
and
mov
pop
inc
add
mov
out
push
aas
pop
ret
aas
mov
jnp
or
xlat
push
and
adc
stos
xchg
or
adcb
inc
push
xchg
mov
jo
repnz
fadds
ret
ja
sti
rorl
pop
stc
mov
pop
outsb
sti
xchg
stos
out
call
push
call
inc
js
out
lods
add
push
fs
scas
lret
aad
lock
mov
pop
or
sbb
pop
mov
xchg
push
inc
mov
addr16
leave
shll
push
rorl
pop
jb
je
cmc
jb
xchg
or
mov
inc
pop
sti
inc
mov
movb
add
mov
call
shlb
inc
lea
mov
outsl
fisubrs
cmc
cltd
icebp
push
mov
xor
inc
stc
and
rcll
adc
outsl
sub
popf
jecxz
fbstp
cmp
mov
and
outsl
nop
inc
xor
xchg
lret
jno
mov
clc
insl
jp
push
push
mov
mov
iret
scas
fidivs
jne
ja
imul
inc
mov
sub
jnp
ss
xchg
push
sbb
mov
lret
data16
aam
or
rcr
stos
mov
repz
das
or
lar
xchg
cmp
mov
mov
push
orl
cmp
idivl
cltd
mov
stc
dec
ret
imull
test
dec
outsb
or
loope
push
scas
popa
push
pop
pop
push
in
push
inc
shrb
in
mov
mov
mov
sbb
ficoms
popa
test
inc
mov
hlt
test
out
mov
in
xorb
and
and
loope
inc
cs
out
lahf
mov
or
inc
sub
sub
aad
idivb
mov
cmpsl
ret
fcoml
push
cmp
sbb
sbb
in
inc
xor
inc
addr16
rorl
inc
pop
ret
push
mov
loope
jmp
loop
popa
mov
adc
lods
and
push
push
inc
push
sti
rcrl
orb
and
xorb
movsb
jmp
out
adc
clc
jno
mov
xchg
movsl
or
sub
out
sti
jl
cs
push
insl
mov
and
push
xor
aaa
mov
xchg
loopne
pop
outsb
or
sub
sub
jecxz
push
mov
stos
idiv
prefetchwt1
push
std
outsl
ficoms
ret
in
in
popf
call
dec
sbb
push
aad
jg
cmp
fsts
ret
std
imul
movsb
sub
lret
pop
fsts
hlt
and
dec
fisubs
cmp
push
gs
addr16
pop
adc
pop
pushf
sbb
fucom
movsl
addb
add
ds
pop
outsl
inc
pop
int3
lret
sbb
pusha
xor
jae
add
mov
xchg
xchg
add
or
sub
loope
in
push
dec
mov
fwait
ret
cmp
push
mov
fisubs
push
incb
fldenv
jb
js
xor
jb
add
int
fucomip
imul
movsb
daa
cmp
orb
cmp
mov
leave
push
dec
add
aad
inc
jmp
ret
in
fs
pop
mov
xchg
in
sbb
xchg
cmpb
mov
cld
xchg
xlat
xor
popa
rorl
shrl
jo
dec
lock
mov
daa
insl
fucomp
movntq
out
jno
adc
movsl
xor
bnd
in
fisttpll
ror
das
or
and
push
loop
ret
das
cmc
enter
mov
dec
orl
cmc
pop
adc
nop
sub
es
divb
and
and
adc
repz
rorl
aam
testl
mov
pop
sub
shl
lock
stc
and
mov
lods
push
inc
negl
iret
inc
xchg
push
inc
bound
and
pusha
stos
or
ja
xchg
and
push
stos
sbb
xor
into
add
psubusb
push
aaa
jne
vpavgw
push
je
jecxz
inc
std
loope
cld
cmpsb
jne
sub
cs
loopne
push
mov
or
sbb
or
xor
insb
fs
int3
ja
mov
nop
gs
aas
jmp
or
mov
stos
scas
lock
icebp
mov
shlb
nop
xor
fwait
push
sets
sub
push
lock
and
ja
ror
inc
or
xlat
sbb
fwait
dec
pop
popa
sbbl
inc
add
pushf
pusha
cmpsl
mov
push
inc
mov
xchg
jl
mov
add
out
or
and
adc
inc
or
push
mov
sbb
iret
arpl
lcall
je
aas
lret
push
cmp
int
mov
scas
and
jp
push
inc
outsl
mov
jae
retw
mov
daa
iret
into
iret
inc
mov
push
ljmp
inc
aas
clc
ficoml
stos
arpl
mov
inc
sti
pop
nop
and
imul
push
repz
pop
xor
or
bound
testl
sti
push
push
arpl
cli
mov
addr16
adc
sbb
jl
fsubrs
cmpsl
gs
adc
lret
mov
test
mull
cwtl
xor
sbb
fcmovnb
enter
fdivs
movsb
and
inc
popf
jmp
dec
fsubs
mov
out
mov
ficomps
mov
rcl
cld
arpl
jne
xor
fcmovu
add
push
in
push
out
sahf
and
stos
dec
fiaddl
cmp
fldenv
xlat
cmp
inc
pop
dec
add
xchg
jo
jp
mov
sbb
push
stos
and
xchg
add
stos
movsb
or
push
out
sub
pop
xlat
ret
push
fistps
mov
sub
addr16
fistl
punpcklbw
mov
outsl
popf
cmp
pushf
cld
mov
push
inc
jge
mov
in
xor
rol
ret
jae
mov
fldt
rorl
adc
ret
dec
sbb
imul
inc
sti
cltd
mov
jno
jmp
dec
das
inc
pop
insl
loop
fimull
addr16
xchg
pop
cmp
shl
cmpsl
sbb
repz
ljmp
pop
or
inc
pop
sbb
ret
aad
xor
jecxz
sar
test
outsl
mov
cli
add
mov
sbb
fstps
jo
repz
inc
dec
xlat
pop
sbb
mov
xchg
popf
popf
divl
jns
cmpsl
or
sub
sub
movsl
fwait
and
movsl
adcb
mov
data16
xchg
incl
inc
xchg
fldl
stos
jecxz
fmul
xchg
push
adc
cwtl
xlat
jge
inc
or
jmp
cmp
dec
in
xchg
jnp
push
mov
sub
jae
mov
fmuls
xchg
inc
mov
test
fnsave
scas
imul
dec
aaa
out
lods
or
fmuls
lret
adc
aam
movsl
adc
xlat
out
adc
mov
ficoms
pusha
in
fcoms
loop
inc
lock
orb
addb
mov
push
sbb
cmp
aad
aad
fxch
ljmp
pop
mov
adc
dec
loopne
into
jne
xchg
pop
xchg
jne
push
rolb
out
mov
ficoml
out
daa
sbb
test
data16
test
inc
sarl
sti
push
add
pop
xchg
jecxz
push
sub
les
and
bound
icebp
ja
pop
mov
sub
pop
xchg
jb
std
jmp
mov
jns
sub
enter
inc
aaa
inc
cmp
arpl
mov
movsb
fcmovb
push
sub
cwtl
inc
std
sti
push
xchg
push
nop
popa
xor
arpl
test
jns
sbb
call
dec
std
aad
sub
lahf
fcoms
cmp
movsl
andb
sbb
inc
xor
xor
mov
fdivrp
enter
cmpsl
aam
out
gs
inc
adc
push
ds
adc
ja
scas
sub
aaa
mov
test
bound
jecxz
aaa
arpl
inc
or
mov
bound
decl
mov
mov
stos
dec
jno
in
in
lea
sub
inc
repz
push
inc
pop
loope
pop
sub
dec
in
sub
inc
lds
add
ret
and
ret
push
sbb
and
scas
add
inc
mov
iret
push
scas
test
shlb
lds
xlat
push
add
ja
mov
sub
xor
and
loopne
mov
cwtl
xchg
in
pop
out
add
js
cmpsl
ret
pop
repz
outsl
cltd
cmp
aam
add
addr16
and
pop
xchg
ficompl
dec
fs
jae
dec
test
fldl
int3
repz
sub
jg
push
enter
push
xlat
sub
call
xor
imul
rclb
lods
in
sub
cld
jne
bnd
into
jmp
iret
or
and
inc
mov
xchg
jne
pop
ret
jge
stc
xor
shlb
inc
out
pop
jp
cmp
shll
outsl
repz
sbb
mov
aas
jbe
inc
imul
add
pop
fisubs
scas
sbb
push
movl
int
pop
mov
inc
push
mov
in
cs
cmp
xlat
stc
push
test
sbb
mov
jno
mov
jg
inc
aas
xchg
loope
hlt
lcall
sbb
xchg
xchg
arpl
sbb
sahf
xchg
addr16
test
roll
arpl
pop
push
mov
les
test
dec
and
mov
xchg
mov
movsl
aam
jbe
xchg
out
add
xor
sub
ret
test
sahf
in
pop
and
shrb
mov
push
movsb
jne
in
sub
cmp
jno
test
fwait
out
push
push
inc
popf
cmp
xor
aad
mov
or
xor
mov
out
sub
inc
lret
int
xchg
scas
jg
xchg
push
push
inc
xchg
incb
inc
gs
xor
pcmpgtd
fldl
ja
fcoml
or
sbb
and
das
sti
xor
sub
push
fists
xor
adc
stos
pop
ja
xchg
pusha
push
lret
pushf
imul
movsb
pop
xchg
js
orb
gs
nop
push
sahf
xor
stc
add
xchg
loopne
ret
cld
into
xchg
xor
movsl
fsubr
and
les
inc
sti
enter
mov
repz
popa
pop
ret
enter
lret
arpl
xor
cmpsl
xchg
fidivrs
loope
push
sbb
jge
sbb
sub
lock
jp
mov
inc
ret
fwait
in
push
faddl
mov
movsl
ss
cmpsl
push
addr16
mov
scas
push
dec
mov
add
pop
out
in
repnz
pop
push
lods
dec
inc
imul
and
fwait
bound
or
fadds
hlt
shl
cmp
leave
jae
aam
xchg
mov
ficoms
pop
jmp
sub
lahf
js
inc
insl
xchg
into
cmp
xchg
mov
fimull
es
pop
cmp
je
inc
test
pop
jo
sbb
in
outsb
lret
jmp
mov
out
jle
xchg
stos
mov
popa
sbb
or
push
pop
or
inc
call
aaa
and
ret
add
mov
popf
test
dec
cmc
test
pop
rorb
test
dec
hlt
rcl
scas
movsl
add
aad
or
push
in
lahf
out
cli
ss
arpl
add
in
mov
pop
ret
outsb
jecxz
xor
mov
test
inc
sbb
adc
push
mov
dec
adc
mov
pop
nop
adc
xor
cwtl
je
sub
dec
hlt
stos
add
mov
sbb
or
xor
pop
loopne
pop
cmpsb
in
mov
popa
aam
dec
or
lret
jno
scas
into
and
jno
stos
mov
cmp
push
inc
jecxz
jo
adc
icebp
nop
and
rol
and
in
xchg
daa
xchg
out
and
cld
int
push
jbe
xorl
pop
inc
aad
mov
lret
shrb
adc
es
ret
lahf
out
ss
pop
inc
fcmovne
xor
cwtl
sahf
sub
insl
xor
adc
stc
mov
mov
into
add
clc
sub
arpl
add
cld
imul
sub
jno
push
and
int
shll
inc
push
loopne
cld
and
or
push
rorb
push
mov
or
hlt
je
hlt
cli
mov
inc
aaa
jecxz
std
add
jb
inc
inc
push
push
cltd
sarb
and
ljmp
roll
arpl
jg
inc
push
fcom
add
mov
mov
clc
rcrb
ja
sub
loop
cmpsb
pop
adc
rorb
int
cmc
insb
pop
sub
sti
stos
sbb
mov
cwtl
inc
repz
or
cmp
push
pop
or
cmp
mov
xchg
int3
scas
jl
fs
and
mov
int3
push
cs
inc
adc
aad
in
arpl
shll
mov
in
push
in
cmove
sub
inc
or
mov
and
push
sbb
cmp
scas
fcom
push
cld
punpcklbw
js
sbb
mov
stc
mov
lret
mov
or
xor
pop
movsb
pop
popf
ret
scas
inc
or
es
nop
jg
subb
ret
pop
or
imul
hlt
adc
mov
ja
dec
jns
sub
addr16
push
push
mov
pop
mov
loopne
shrb
aad
push
movsl
out
sub
adc
lds
cmpsl
adc
lret
popa
xlat
or
sbb
pop
stos
sub
cmp
or
popa
stos
repnz
push
mov
inc
cmc
shlb
ret
push
mov
mov
adc
popf
fucom
or
push
imulb
data16
inc
les
jp
imul
and
or
testb
sub
bnd
jmp
xor
popf
sub
cmp
daa
adc
sub
ret
mov
out
push
push
jae
mov
bswap
xor
or
je
pop
adc
std
mov
dec
xchg
scas
sub
roll
cs
cmpsb
cmp
ret
cmc
sti
cmc
inc
sub
sub
mov
xor
jnp
icebp
and
mov
and
inc
push
mov
jnp
fwait
nop
arpl
push
stos
and
or
fwait
pop
inc
cmp
jb
int
rorl
lods
mov
sub
and
mov
jmp
pop
sahf
mov
test
fs
jecxz
lret
mov
mov
xor
jb
mov
lcall
inc
into
out
cld
jecxz,pt
mov
rcrb
adc
pop
mov
push
pusha
mov
aas
sub
mov
adc
loope
movsb
pop
arpl
ljmp
mov
and
adc
mov
outsl
push
jnp
pop
mov
bound
adc
in
ret
iret
loopne
call
aaa
push
lret
testl
movsl
fisubs
sti
iret
pushf
movsb
mov
adc
hlt
in
shl
lods
dec
mov
push
mov
shr
pushf
in
int3
insl
dec
rol
mov
addb
sbb
fmuls
stos
arpl
aad
and
inc
scas
pop
scas
daa
sub
push
mov
stc
fisubrl
mov
call
cmpsb
lret
add
or
jne
out
ja
ret
xchg
rcl
daa
cmc
fidivl
adc
test
push
sbb
xor
jno
cmpb
jle
scas
dec
adc
stos
adc
adc
xchg
inc
out
loope
popa
std
mov
lea
dec
addr16
sarb
aaa
in
jg
pushf
addr16
xorl
loope
aad
jge
mov
aad
sub
lcall
into
shlb
jnp
mov
mov
inc
dec
pushf
out
pop
pop
sbbl
jmp
xor
jb
mov
push
jecxz
stos
pusha
or
filds
sbb
add
adc
loope
scas
mov
lahf
lahf
js
push
aad
sbb
in
jl
jno
sahf
and
adc
add
inc
mov
mov
push
xor
roll
xchg
test
add
jecxz
sub
cmpb
xchg
sbb
shr
out
fmul
and
pushf
sbb
shll
inc
and
scas
jmp
clc
fwait
adc
lods
imul
into
mov
dec
fscale
sbb
outsb
cld
cli
inc
mov
outsb
push
sbb
mov
rclb
xor
test
bound
and
inc
fcomps
xor
daa
mov
gs
dec
lret
cmp
dec
cmpsl
rcll
sbb
orb
leave
xor
xor
xchg
adc
fidivs
or
dec
push
ljmp
pop
dec
in
mov
mov
outsl
lahf
mov
bound
stc
in
or
fstl
faddp
push
outsb
ror
sbb
xchg
push
xchg
sub
pusha
dec
sub
lea
repnz
dec
add
xchg
in
arpl
sbb
fdivrl
inc
ljmp
sti
stos
mov
dec
or
fists
sbb
xchg
or
mov
leave
std
mov
mov
fldenv
imul
roll
js
loope
push
sbb
jbe
mov
je
lods
mov
movsb
in
out
cmp
stc
rorb
sub
fxam
push
shlb
repz
jmp
loop
addb
jge
inc
fs
pop
dec
iret
inc
sbb
mov
sub
xor
dec
xchg
cmpsl
cmp
loopne
in
inc
or
outsb
lahf
ljmp
xchg
cmpsb
test
in
pop
mov
pop
mov
mulb
insb
xor
xor
xchg
faddl
inc
adc
sqrtps
lcall
mov
dec
xlat
sub
fcomps
hlt
push
cmp
lods
fdivs
dec
sub
jle
xchg
scas
and
mov
adc
lahf
sbb
lods
inc
jge
repnz
es
aam
inc
movsb
stc
int3
or
pop
and
xor
dec
movsl
addb
xor
push
mov
xor
ret
gs
rclb
inc
mov
xlat
sub
push
out
inc
insl
popa
filds
xlat
mov
xchg
ds
hlt
sbb
arpl
inc
getsec
aas
mov
pop
stc
int3
xlat
adc
sbb
add
nop
outsb
inc
pop
pop
jp
rol
movsb
or
mov
jno
repz
popf
loop
push
fwait
mov
je
fmull
or
mov
xor
sbb
cmc
out
mov
sub
inc
insb
loope
pushf
cmc
lods
push
mov
adc
mov
inc
insl
cwtl
lds
imulb
sbb
cltd
nopl
in
cmp
scas
repnz
mov
lret
lock
dec
ret
dec
xchg
inc
shrl
ret
mov
outsl
incb
cmc
xchg
xchg
sbb
pop
ret
aaa
imul
scas
and
jg
xor
adc
add
int3
fmulp
outsb
cmp
daa
orb
call
fidivrl
sbb
lret
add
das
push
inc
stc
sub
xchg
imul
in
lahf
pop
in
mov
cltd
pushf
scas
and
fs
shll
dec
sbb
in
and
mov
ljmp
test
inc
mov
push
cli
cmp
dec
adcb
pop
mov
insb
rclb
jg
inc
mov
dec
mov
sub
mov
jl
adc
sbb
aas
add
std
sti
push
jmp
call
ror
arpl
sbb
loope
mov
inc
into
cmp
jl
pop
or
inc
in
or
sub
or
mov
xchg
fcomps
mov
push
sub
adc
inc
lret
les
fsubs
add
roll
popa
out
lret
cs
mov
in
ret
dec
inc
hlt
loopne
fisttpl
cmp
dec
jmp
or
ret
je
aaa
das
dec
xchg
xor
nop
pop
push
mov
jmp
mov
aad
sub
jne
scas
dec
and
fadd
mov
jge
jns
dec
adc
in
icebp
xor
push
pusha
movsl
fstp
sub
inc
inc
lcall
mov
mov
stc
inc
outsl
ss
fcomps
cmp
dec
test
scas
psubq
jmp
cli
xchg
or
fwait
fs
lods
lret
pop
jne
mov
lods
out
fsubrs
xchg
push
mov
mov
clc
insb
pop
mov
and
dec
mov
lahf
jmp
inc
or
sub
jmp
mov
insl
jp
fsubl
mov
push
sub
out
leave
inc
xchg
mov
push
pop
cmp
pop
aam
and
mov
add
mov
xchg
dec
scas
jbe
out
in
jnp
or
jns
xchg
out
inc
jb
aaa
xchg
lcall
sbb
cwtl
rclb
je
push
adc
mov
dec
push
mov
cmp
into
dec
shll
jne
es
and
pop
jge
fldl
inc
imul
mov
push
es
inc
cmp
sub
cmp
call
aaa
or
mov
aas
fldenv
xor
push
pop
stos
sarl
push
jno
push
mov
movsb
pop
or
and
sub
mov
adc
fs
inc
add
mov
cmp
mov
int3
inc
ljmp
cmp
fstps
sub
out
imul
jmp
jmp
gs
xchg
scas
or
push
xlat
gs
arpl
dec
fsubrl
xchg
inc
pop
adc
mov
or
ficoms
mov
lret
xchg
or
shlb
jmp
shl
jbe
or
mov
sti
dec
adc
inc
pop
lock
dec
filds
xor
aaa
lret
test
sbb
jno
pop
test
jns
xor
adc
xchg
xchg
outsb
xchg
inc
lahf
pop
test
fcomps
inc
in
icebp
popa
jle
push
mov
cmc
or
insl
lock
mov
movsl
stos
data16
divl
popf
pop
sub
mov
push
add
mov
cmp
test
jae
adcl
mov
adc
xor
push
xlat
ret
into
pop
dec
mov
pop
stos
or
sti
ficomps
or
inc
mov
inc
or
filds
ret
mov
dec
adc
scas
lahf
es
inc
xchg
jnp
add
fsubrl
stos
ret
lret
sbbl
and
out
push
adc
fwait
add
or
cmp
test
add
pop
sub
xor
cltd
pushf
adc
sbb
inc
es
cmc
inc
xor
cwtl
jo
test
mov
stos
inc
cltd
cmp
xor
int
pop
test
ljmp
sub
or
xor
rcrb
push
lds
dec
cmp
hlt
dec
lds
popf
orb
dec
add
inc
sbb
sub
enter
in
inc
jno
or
add
icebp
cltd
out
add
inc
add
mov
mov
mov
imul
movsb
scas
cmpsl
push
shrb
jbe
fisttpl
fimuls
outsl
pop
mov
pop
stos
mov
xchg
xchg
adcb
movsb
or
rcr
jmp
in
ret
jl
hlt
sub
imulb
je
lea
cs
pop
cmovg
sub
cltd
mov
xlat
add
jle
push
push
pop
add
push
and
jne
fldenv
adc
pop
fucom
insb
pushf
into
push
int3
jb
mov
data16
sub
repnz
hlt
push
mov
fisubrl
mov
jmp
add
bound
jg
hlt
and
mov
mul
inc
fisubs
sub
pop
mov
push
mov
mov
pop
fwait
sarb
push
in
sub
mov
pop
xchg
bound
dec
test
bound
adc
inc
mov
cmpsl
stos
arpl
adc
add
lods
mov
jg
dec
fsubs
xor
pop
test
pop
aas
mov
push
sub
dec
sbb
or
xor
mov
int
cwtl
lods
xchg
xchg
int3
xor
xchg
mov
lods
mov
mov
sahf
inc
mov
test
pop
je
add
sti
loopne
outsb
sbb
cld
pushf
andl
dec
sbb
jl
mov
test
cwtl
lea
cmc
push
mov
add
cmp
jle
movsb
nop
pcmpgtw
xor
inc
sub
std
jbe
dec
push
sbb
imul
inc
push
mov
jp
pushf
scas
pop
stos
sbb
and
push
rcr
xor
cwtl
inc
addr16
daa
addb
xchg
push
inc
test
mov
push
xchg
mov
stos
stc
pop
sub
fwait
jp
rcll
ljmp
sahf
fmuls
dec
inc
rcl
jns
lret
pop
imul
in
mov
iret
jge
sub
lods
mov
loop
dec
xchg
dec
sub
cmp
dec
pop
pusha
sahf
mov
xlat
push
popa
movsl
lods
push
scas
shlb
lds
jno
nop
mov
add
fldcw
mov
out
push
les
sbb
add
adc
cld
dec
add
call
mov
call
sub
test
dec
rolb
cs
stos
daa
stc
mov
and
pop
adc
push
push
shr
imul
xor
call
fcoml
int
lds
jbe
or
dec
adc
jecxz
xor
jge
sarl
push
sub
pop
jnp
lock
xchg
xor
xchg
push
data16
ret
sarl
fs
mov
adc
pop
shll
dec
adcb
test
arpl
and
or
jle
insl
xor
lahf
scas
inc
inc
lret
pop
iret
sbb
push
ss
cmc
nop
jbe
push
and
push
loope
fldl
cmp
fcmovnb
lods
sub
subl
lret
aas
hlt
mov
pop
push
sar
jns
mov
in
rcrb
loope
push
sarb
or
xor
mov
jl
fimull
inc
or
maskmovq
divl
ret
and
cmp
aam
adc
pushl
xchg
daa
or
push
dec
ret
in
pusha
mov
imul
clc
cltd
hlt
aaa
aas
pushf
in
popa
add
push
xchg
arpl
out
pushf
ss
mov
aam
push
or
xchg
and
sbb
rcl
inc
fs
cmpsb
xchg
xor
into
test
lea
lret
push
cs
adc
leave
xor
pop
andb
or
icebp
cmp
jns
outsb
xlat
mov
sarb
popa
jb
cmp
je
lea
mov
gs
pushf
add
adc
test
mov
sub
cmpsb
xor
inc
mov
arpl
testb
add
inc
pop
into
mov
jne
dec
loopne
mov
mov
loopne
inc
jp
inc
cmp
inc
pop
xchg
pop
sub
xor
and
and
call
sub
insb
push
jno
adc
jne
adc
les
popf
add
stos
xor
idiv
push
shlb
mov
mov
rol
out
lods
aam
push
ss
ljmp
mov
cmp
inc
push
or
dec
add
or
sahf
scas
xor
cmpb
mov
xorl
fs
push
adc
aam
fucomip
mov
das
fsubs
jl
dec
mov
jb
inc
add
das
std
sbb
push
adc
out
or
mov
aad
xor
cs
mov
out
push
pop
popa
push
cmpsb
out
popa
xchg
mov
addr16
pusha
xor
mov
in
in
push
sbb
or
int3
stos
into
or
pop
mov
roll
inc
loope
sbb
inc
outsb
fs
outsl
and
in
test
sub
push
mov
mov
es
sbb
inc
fisubrl
mov
cmp
xchg
jne
rcr
inc
dec
lea
xchg
sub
or
in
inc
stos
stc
push
imul
or
cmpsl
movsb
inc
lcall
cmpsl
inc
pop
seto
sti
ljmp
inc
cld
in
adc
in
repz
pop
sti
ret
outsb
cwtl
dec
dec
cmp
add
addr16
xchg
push
push
adc
mov
aad
in
add
fst
jge
lret
sysexit
mulb
and
pushf
fs
sub
pushf
js
jnp
xchg
sub
fwait
sub
movsb
fdivr
outsb
mov
push
movsl
and
push
sub
aaa
adc
movsl
cmp
flds
int3
mov
xchg
lret
repnz
lea
shrb
out
std
xlat
lods
add
andl
inc
imul
ret
push
mov
out
data16
sti
mov
xchg
push
in
jg
xchg
popa
inc
push
mov
mov
fs
inc
dec
push
inc
bound
jnp
ret
dec
push
mov
add
dec
mov
nop
xchg
insl
aas
and
sub
stos
push
sub
and
lea
ljmp
int
movl
mov
mov
fildl
sbb
mov
add
dec
leave
les
shlb
push
mov
mov
dec
push
stos
fbld
mov
stos
and
add
ror
shr
fildll
shl
xchg
aad
insl
lods
psubsb
aaa
lods
cwtl
popa
lret
rcrl
sub
sbb
ret
out
push
cmp
insb
cltd
xor
cmpsb
addl
mov
lret
int3
adc
fidivrs
add
hlt
jno
inc
adc
aaa
hlt
inc
or
andl
std
or
fidivrl
pop
pop
jo
dec
fsts
cld
dec
inc
push
iret
popa
cld
jns
aaa
mov
pop
test
sti
rcll
test
jp
cmc
movsl
push
cmp
lahf
mov
mov
cmp
in
adc
inc
mov
fwait
loope
add
and
jnp
inc
pop
cmp
cmc
pop
mov
xor
push
push
lcall
mov
inc
xlat
int3
mov
stos
xchg
cld
das
push
sbb
jns
push
mov
shr
sbb
lahf
adc
out
shlb
pop
rcrl
daa
fmull
jecxz
pop
mov
cmp
xchg
std
mov
out
scas
push
push
test
add
lods
testl
inc
pop
mov
jns
nop
fisttpl
ja
ret
shlb
add
mov
fistpl
lret
test
lret
push
sub
out
cmp
mov
fildl
lret
enter
lds
mov
orb
cmp
xchg
mov
shlb
mov
and
pop
xchg
or
cmc
loop
dec
leave
shll
mov
pop
xlat
lret
cmpsl
jns
stc
mov
sbb
popa
sub
repz
inc
mov
out
mov
push
dec
dec
imul
push
imul
test
flds
push
mov
xchg
lods
sbb
adc
cwtl
arpl
scas
in
adc
dec
xor
jns
call
cld
inc
mov
push
pop
or
rcl
adc
stos
int
int
inc
into
pop
and
xchg
jnp
lods
fcoml
xlat
push
test
push
adc
mov
push
jno
pop
out
outsl
dec
adc
outsl
add
dec
call
loopne
clc
lret
sub
pop
iret
xchg
repz
lahf
stos
insb
dec
mov
std
jge
fdivrs
xor
bound
pushf
test
mov
aas
pop
movsl
inc
sbb
inc
aam
fcoms
pusha
xchg
and
xor
outsb
push
xchg
jg
call
sti
mov
sbb
cmc
or
and
inc
push
fadds
xor
cmpsb
into
in
lds
xchg
and
push
cltd
sbb
aas
rol
jle
dec
sub
ret
sub
movsl
add
mull
cmpsb
mov
cltd
adc
into
popa
jbe
sbb
ret
jge,pt
cmc
pop
and
adc
inc
popa
stos
dec
xor
jg
inc
xor
mul
or
lock
mov
into
push
aad
das
xor
push
xchg
push
out
mov
adc
xor
add
outsb
dec
push
ror
arpl
pop
sub
adc
add
sar
lds
aas
mov
inc
ja
cltd
hlt
fs
adc
inc
jp
inc
mov
popf
sub
dec
lret
pop
sbb
int
movsl
mov
stc
inc
sbb
inc
cld
sub
jb
mov
xor
adc
pusha
or
cmp
jmp
ljmp
xchg
xchg
push
jmp
xlat
sub
pop
dec
out
jg
test
cmp
jne
daa
lahf
int3
fs
in
and
or
scas
scas
scas
sarl
arpl
aaa
xor
xchg
rcrl
cmpl
sub
mov
push
mov
fsubrl
pop
inc
dec
out
nop
cmp
and
in
ret
ja
mov
xchg
subb
sub
and
mov
xchg
out
jmp
insl
mov
outsl
or
dec
lret
mov
mov
and
jg
sbb
mov
in
in
adc
push
or
push
push
xchg
pop
dec
popa
ret
or
out
loopne
and
inc
and
or
fs
test
xor
rolb
mov
insb
pop
lea
jmp
adc
das
fs
pop
mov
xchg
mov
scas
xchg
out
or
iret
pop
or
cmpsb
and
test
fstpl
loop
sahf
std
xchg
cmp
inc
arpl
sub
das
loope
xchg
jns
fwait
mov
std
pop
loop
lret
ja
roll
daa
jmp
xor
pushf
inc
pop
xchg
cmp
cmc
mov
mov
xchg
icebp
jge
imul
into
jae
lods
int
enter
mov
mov
mov
lahf
or
xchg
pop
push
pushf
fsts
inc
xchg
adc
mov
pop
or
add
in
into
mov
pop
movb
js
pop
subb
mov
xor
lahf
mov
mov
dec
subl
lea
cmpsl
mov
add
dec
ret
adcl
mov
cmp
cmovae
xor
idivl
lcall
nop
int3
je
sbb
dec
frstor
je
xor
pusha
ret
popf
daa
roll
insl
enter
call
inc
mov
mov
ret
mov
inc
mov
jns
mov
xchg
pop
mov
sbb
mov
call
and
leave
fisubl
lahf
inc
sbb
dec
mov
lret
mov
and
fildll
int3
jle
mov
bound
push
int
jg
ret
in
scas
add
lahf
fildll
ss
push
pusha
mov
sbb
cmc
xor
es
iret
jle
sbb
push
insl
aad
shr
push
jbe
pop
mov
imul
fs
inc
sub
cwtl
out
lods
pop
mov
test
pop
addr16
inc
push
and
scas
cmpsb
cmc
push
mov
dec
in
inc
mov
and
add
xchg
mov
gs
std
clc
pop
idivb
in
addb
cs
push
enter
das
movsb
rcrb
sub
aad
out
mov
xchg
and
faddl
sub
loope
imul
xor
shl
inc
rorl
push
pop
aad
mov
cmc
mov
pop
aad
add
push
jmp
popf
jns
push
adc
js
or
roll
aam
mov
mov
and
sbb
xor
insl
push
icebp
sbb
xchg
or
fisubl
sahf
stos
ljmp
fdivrs
mov
mov
mov
mov
repz
js
fists
mov
loop
mov
sub
sbb
jecxz
scas
inc
call
inc
or
and
lods
js
push
or
xor
icebp
xor
or
cmp
shlb
mov
mov
or
inc
mov
sti
cmp
or
cmpsb
fucomi
rol
cs
jo
je
jg
jge
mov
bound
sbb
sub
addl
and
add
int3
ret
add
jl
inc
xor
mov
sti
fldl
push
jnp
ret
mov
fidivl
push
fwait
lret
xlat
int
sbb
inc
pop
inc
js
xor
movsl
mov
roll
push
fs
andb
mov
or
mov
sub
fnstenv
push
jne
adcl
push
or
lret
mov
insb
jp
pop
add
cs
cs
out
inc
test
xorl
inc
xchg
repz
pop
std
frstor
mul
mov
jg
movsl
fwait
xchg
je
inc
xor
and
mov
xchg
popa
add
xor
sub
xor
or
ffree
mov
jbe
int
in
cmp
push
sbb
mov
sbb
ljmp
mov
ficoml
push
inc
scas
add
sub
cmp
lcall
pop
mov
fcmovnu
cmp
jecxz
mov
dec
fcoms
das
fdivrs
mov
xor
adc
jnp
and
mov
lods
out
out
fnsave
lret
sbb
addl
dec
int3
ja
mov
add
mov
clc
sub
in
push
add
adc
jp
cmpsl
out
mov
xor
dec
xlat
mov
add
adc
push
sub
in
test
fldt
into
ss
iret
lods
insl
cmp
push
push
mov
xor
into
sub
mov
mov
rolb
subl
outsl
out
mov
out
clc
dec
sbb
cmp
sbb
ds
xchg
or
mov
ja
arpl
jmp
pop
lods
xor
xchg
jg
imul
jge
pop
xor
fsts
out
xor
jg
jecxz
cmpsl
cmp
inc
sub
pop
pop
and
mov
xchg
add
mov
stos
mov
cmpl
paddusw
add
roll
xchg
fistps
sub
inc
jge
inc
ret
fstl
sbb
or
fmull
pop
sbb
js
fcmovnb
popa
inc
or
xchg
xor
std
jne
in
push
mov
mov
mov
add
push
xchg
cltd
ja
sbb
push
cmc
mov
ss
mov
mov
mov
lods
stc
push
mov
ret
out
test
mov
mov
inc
fwait
mov
mov
inc
cmp
cmpsl
in
cmc
pop
nop
jg
sarl
or
ja
pop
pop
sbb
out
xor
repz
out
xchg
dec
rol
mov
sub
ljmp
mov
mov
int3
test
pop
and
pop
inc
jb
in
mov
push
xor
inc
ljmp
movsl
adc
and
faddp
add
pop
mov
lcall
rorl
sub
mov
sbb
sti
fidivrs
ffree
pop
adc
jg
mov
cmp
out
lods
dec
fwait
pop
mov
rorb
mov
leave
rcrb
shlb
push
lods
sbb
add
out
lcall
clc
out
sti
cmpsl
sbb
ret
hlt
xor
jg
notb
mov
cs
push
mov
setae
clc
out
mov
out
repnz
inc
dec
aad
aaa
inc
outsb
sub
scas
lods
sub
push
cld
dec
stos
jne
jle
mov
inc
repnz
push
mov
ffree
dec
fsubrs
lea
xchg
fistpll
das
jnp
sbb
ror
inc
fs
fists
or
enter
sbb
pusha
les
adc
fmull
cwtl
mov
fnstsw
ret
stc
out
fwait
pop
xchg
aad
in
jns
inc
mov
jo
mov
popa
push
sub
sub
sub
lods
shlb
icebp
in
xchg
hlt
push
push
dec
loope
mov
cmpb
dec
mov
stos
mov
nop
lret
scas
inc
shrb
xchg
mov
sbb
inc
inc
inc
aad
pop
or
aam
in
pop
jl
or
cld
cmpsl
inc
jge
cwtl
sub
std
insb
and
jns
jmp
lock
sti
iret
loop
test
fcomip
mov
pop
cli
movb
in
lret
ret
stc
cltd
push
sti
sbb
inc
sbb
fwait
add
fidivs
sub
dec
inc
and
int3
bound
out
mov
arpl
inc
jno
or
popa
nop
inc
inc
and
fcomp
stos
add
cmpb
jno
mov
inc
rcl
pop
or
mov
lahf
cli
or
mov
sub
dec
mov
fadd
sbbb
push
pop
pop
mov
stos
push
mov
dec
rclb
adc
sti
pop
xchg
insb
daa
scas
movsl
or
aas
push
stc
dec
int3
in
xor
push
sti
test
mov
inc
push
mov
mov
jecxz
push
movsl
and
adc
mov
bound
mov
clc
lock
xchg
rcr
mov
mov
cmp
fucompp
sub
fildll
inc
dec
fildll
and
out
mov
lcall
cmp
loope
push
rep
xor
into
in
jp
mov
daa
sbb
or
scas
sti
or
js
pushf
mov
dec
adc
int
fdivrs
adc
fimull
xlat
push
cmc
fstl
lahf
js
xchg
fwait
sahf
loope
inc
or
mov
jecxz
mov
out
xchg
dec
into
sbb
in
std
xor
or
sbb
fdivp
popf
cmp
push
std
ljmp
int3
fdivrs
adc
iret
inc
nop
xchg
push
adc
or
sbb
mov
popa
ja
or
loopne
inc
sub
and
rorb
or
mov
mov
jle
add
test
adc
rolb
icebp
sarb
daa
adc
cmpsl
negb
ret
mov
shl
mov
ror
adc
pop
push
pop
ljmp
sbb
pop
daa
pop
mov
mov
sbb
rcrl
jmp
fucom
or
inc
xchg
ret
mov
sub
rcll
sti
jp
stos
ret
enter
or
xor
lret
repz
mov
or
leave
jo
jnp
xchg
lahf
in
aaa
sub
add
inc
lock
add
push
pop
mov
lds
mov
adc
sbb
ficompl
push
adc
mov
subl
mov
bound
es
int3
loopne
mov
xor
sar
mov
int3
xchg
mov
mov
lahf
sbb
into
dec
xchg
imul
insl
pop
fisttpl
mov
mov
out
cmp
insb
pop
jns
adc
lahf
add
mov
mov
inc
push
subb
xorb
js,pt
stos
ret
push
push
inc
stos
lret
test
add
sub
pop
cld
lods
add
mov
and
pushf
xchg
gs
mov
sbb
hlt
lret
icebp
lods
repz
dec
mov
pop
jnp
aas
lret
xlat
sbb
jg
loop
rcrl
sti
mov
sbb
orl
sbb
pop
add
xor
or
lret
add
pop
mov
ret
fsts
rcl
or
data16
xor
pop
cmp
pop
jecxz
pop
rcl
loop
rorl
pushf
pop
fs
sub
fidivrs
int
xchg
adc
scas
mov
pop
ret
std
adc
sbb
lret
sti
jb
inc
neg
insb
jae
adc
or
push
xchg
lea
rcrl
nop
pop
mov
call
daa
mov
in
cwtl
sahf
ss
xlat
jb
sub
daa
lret
cmc
lods
pusha
and
mov
fcmovnb
outsl
push
movsl
iret
scas
gs
push
cld
cmp
push
dec
das
xor
into
call
xchg
cwtl
jle
scas
into
jecxz
repnz
imul
mov
sarb
inc
leave
mov
lret
addr16
out
rcll
push
dec
call
jne
inc
mov
iret
xor
popa
mov
fwait
nop
ret
add
das
out
mov
mov
fucomp
loope
ret
gs
into
sbb
movsl
cmp
mov
push
test
out
bndstx
xor
cmc
mov
lock
mov
lea
xor
mov
and
pop
loope
add
sbb
stos
jmp
lret
ret
in
push
cmpsl
hlt
fcoms
pop
or
jb
dec
jb
fildl
aas
inc
dec
daa
icebp
cmp
pusha
repnz
notb
fists
lret
pop
aad
add
sub
shrb
xlat
push
inc
fisubs
andl
push
into
jb
repnz
lds
mov
mov
cmp
mov
pop
insl
fs
inc
int
aad
mov
mov
mov
adc
call
mov
dec
lret
sub
jle
fidivl
push
popa
xchg
lcall
inc
jns
pop
orl
xchg
es
dec
lcall
or
pop
cli
sbb
xor
cmp
loope
pop
mov
addl
pop
fs
xchg
or
aad
lret
jnp
mov
mov
and
mov
inc
ds
mov
scas
or
out
clc
in
rorl
push
mov
xlat
andl
sub
stos
push
mov
or
shlb
mov
cltd
inc
sub
fs
scas
leave
loopne
fisubrl
movsl
test
sbb
stos
xor
mov
out
imul
aaa
jns
mov
in
inc
inc
pop
cwtl
in
std
cmp
pslld
fsubs
fxch
js
imul
mov
and
in
sub
add
add
icebp
loope
xor
inc
xor
enter
sbb
pop
jmp
inc
pop
and
outsl
mov
mov
sahf
hlt
jecxz
hlt
push
xor
push
adc
xlat
mov
fidivrs
fwait
loope
cwtl
daa
mov
int
inc
sti
or
lods
mov
lods
imul
lret
jns
std
or
mov
mov
cmp
push
repz
ja
mov
mov
in
sub
cmp
into
int
call
stc
adc
mov
ret
inc
fsubrl
inc
repz
or
jne
xchg
nop
hlt
ret
or
adc
rcr
adcb
cmpsb
lds
inc
mov
sbb
jg
sub
inc
adc
pop
popf
lahf
int3
repnz
rcl
ret
push
dec
mov
mov
fadd
mov
and
sbb
pop
cli
fs
fmull
popf
jge
dec
aad
insb
xchg
sub
je
adc
fs
xor
movsl
dec
arpl
or
cmovae
aam
mov
add
std
test
popa
pop
arpl
test
inc
jo
fnstenv
and
pop
fs
int3
inc
sbb
dec
push
cld
pop
add
js
movsb
cmp
add
jmp
mov
jge
std
mov
mov
adc
pop
mov
adc
fs
push
inc
cmpsl
in
daa
sub
inc
in
xchg
adc
xlat
push
popf
pop
fmull
icebp
mov
test
jge
dec
xorl
fmull
nop
push
cwtl
jb
sahf
shrb
divb
xchg
pop
mov
pop
aaa
into
les
jbe
out
stos
sub
sbb
add
fdivrl
popa
shll
pushf
or
inc
mov
dec
inc
pop
mov
repz
shrl
dec
sub
add
cld
imul
and
or
mov
lods
or
lret
cld
fcmovnu
adc
daa
cmp
nop
or
mov
inc
inc
xchg
cmpsl
pop
sub
xchg
and
xchg
mov
movsl
vmovq
push
cld
rolb
int3
lret
mov
push
push
dec
push
sahf
out
out
out
ret
popf
xchg
dec
out
pusha
out
dec
int3
data16
ret
pop
data16
pop
mov
or
iret
sbb
insb
mov
sbb
ret
lret
inc
mov
insb
cmpl
xor
inc
outsb
sbb
pushf
push
ret
jg
ret
ficoml
dec
rorb
rorb
add
mov
sub
inc
mov
fs
pushf
or
add
shll
sbb
adc
or
mov
dec
mov
push
inc
inc
or
or
loop
and
pop
inc
ljmp
cmp
pop
inc
mov
jg
pop
jg
adc
rorl
jns
pop
jg
inc
and
outsb
aam
jecxz
push
pop
or
mov
or
sbb
push
xchg
cmp
ja
into
jg
lods
lret
scas
dec
mov
js
call
pop
and
cli
enter
faddp
bnd
lcall
insl
mov
add
inc
imul
movsl
jo
and
xor
into
sbb
push
shlb
and
fsubs
test
mov
sbb
cld
aas
fcmovbe
lds
popf
jmp
sub
mov
mov
sub
dec
mov
lock
pusha
xchg
xchg
add
sub
inc
pop
jb
dec
je
addr16
ret
cmp
add
js
ret
fistpl
push
icebp
mov
mov
xchg
insb
lods
loop
int3
test
fbld
daa
pop
and
push
sahf
test
sbb
icebp
cmp
dec
xor
je
int
scas
cmpsl
fistl
and
mov
in
mov
lock
hlt
pop
pop
lea
jl
push
into
pop
pop
add
arpl
dec
sbb
push
mov
stos
scas
xor
fcmovne
adc
aas
jmp
bound
pop
cmp
lahf
sbb
es
pop
and
mov
inc
pop
sarb
ds
sub
add
sub
cmp
sub
es
arpl
cmp
jmp
adc
mov
std
fcmovnb
push
and
push
lahf
push
sbb
fstl
lods
out
mov
into
int3
sbb
dec
mov
and
inc
mov
pop
lds
fiaddl
or
fs
cmp
and
out
cmp
mov
in
xor
jle
jnp
mov
inc
arpl
mov
imul
stc
cmp
or
movsl
fcoms
mov
out
push
add
jae
adc
mov
add
mov
fildl
pop
mov
in
adc
inc
cli
decb
or
push
dec
mov
adc
loopne
cmp
xchg
lods
jmp
xor
fdivrl
pop
pop
sbb
pop
arpl
out
in
cmp
adc
dec
push
add
stos
out
xchg
adc
ret
adc
rcrb
xchg
out
shl
prefetch
or
cld
sbb
outsl
out
movsl
xlat
testl
fistps
inc
pop
sub
cltd
gs
push
and
adc
movsb
es
cmp
scas
inc
xchg
bound
xor
enter
mov
jne
out
inc
js
popa
sub
orb
fildl
shll
and
and
sub
dec
xchg
addr16
mov
mul
loopne
push
sbb
adc
nop
insb
test
sub
or
bound
outsb
mov
outsl
cmp
scas
inc
push
icebp
movsb
jbe
stos
jae
push
and
in
push
push
movl
xchg
and
sbbb
pop
faddl
and
pop
pop
leave
push
sub
cmpb
mov
out
lret
or
mov
mov
lret
arpl
push
fistpl
mov
xor
push
or
push
into
dec
das
xor
add
sub
cmp
decb
aad
movsl
out
lods
push
inc
mov
inc
sbb
dec
fiadds
mov
shlb
movsl
jge
cltd
dec
outsl
fwait
inc
ss
cmp
or
push
cmp
mov
cmp
rorb
mov
mov
push
faddl
cltd
js
rcrb
dec
ret
push
sub
jnp
stos
fdivrs
jmp
push
out
xor
or
pushl
fldenv
cmp
lods
aaa
fldenv
pop
jns
xor
scas
scas
or
mov
push
adc
jb
sbb
cmp
jb
pop
add
shl
mov
inc
dec
popf
mov
cltd
mov
dec
inc
outsb
mov
inc
js
fstps
loopne
cli
cmp
push
nop
xchg
fwait
mov
call
cmpsl
aaa
js
xchg
jnp
mov
jmp
out
pandn
push
inc
les
daa
mull
dec
shll
xchg
lds
mov
repnz
xchg
xlat
xor
sub
jl
jno
ret
js
lcall
clc
std
push
jecxz
inc
xor
arpl
loopne
cltd
movsl
push
cmpsl
inc
sbb
and
pop
add
sahf
sbb
xor
lock
neg
mov
mov
sub
mov
cmpb
mov
enter
jge
pop
inc
push
inc
sub
mov
movsb
mov
sub
inc
aam
mov
pop
cmp
fadd
cmp
xlat
inc
addr16
mov
jb
xchg
data16
sub
fstl
add
pop
idivb
loopne
js
pop
inc
lcall
mov
xor
add
pop
mov
mov
pop
test
je
xchg
mov
adc
incl
ret
add
jne
test
ja
mov
cmc
popa
xchg
jmp
pop
cmpsl
mov
ja
shl
jle
and
addl
mov
in
xlat
xchg
add
ljmp
and
das
cmpsl
cmp
inc
std
cmpsl
fcmovnb
sar
jp
inc
sub
lods
xor
rolb
jmp
or
add
inc
or
pop
test
pop
or
mov
test
lea
cmp
xchg
repz
jmp
call
and
mov
sub
into
test
scas
xor
push
xor
pop
xor
or
daa
mov
mov
lock
sub
sbb
gs
lods
mov
pop
jl
cli
icebp
xchg
add
xor
lret
dec
shll
dec
setbe
xchg
int3
mov
stc
ljmp
bound
lods
mov
add
inc
and
pop
in
push
xor
in
lods
mov
mov
jecxz
add
fadd
mov
add
int3
fadd
cmp
fsubrs
xchg
ficomps
mov
xlat
popa
pop
mov
push
orl
mov
les
or
orl
in
jp
rcrl
or
das
test
ficoml
xchg
idivb
cmpsl
sbb
xchg
movsb
pop
sub
inc
pop
adc
mov
cmp
pop
lahf
popf
dec
push
dec
bound
jno
test
fwait
out
icebp
pop
int3
mov
mov
loop
sub
in
sti
aas
add
repz
add
and
mov
out
and
in
and
in
inc
cmc
clc
xor
mov
pop
inc
repz
pop
push
mov
mul
fwait
xchg
cmp
or
scas
push
pmaxsw
aad
sarb
sub
mov
insl
in
js
push
and
fcmovnb
ret
fdivs
das
sbb
cmpsl
adc
and
ljmp
or
imul
mov
je
lods
movsb
rolb
push
sarb
fldt
loop
add
pop
mov
pop
out
shl
test
cs
cwtl
loop
jecxz
insl
imul
fnstsw
fwait
dec
jg
adc
cmpsl
fs
jnp
push
lea
cmpsl
cmp
sbb
into
loope
mov
mov
push
call
dec
mov
mov
insb
roll
and
shrb
sub
addr16
xor
and
popa
mov
addr16
dec
cmp
add
pop
xchg
mov
add
dec
inc
orb
popa
stos
pop
cmp
sahf
mov
insl
ss
int3
push
leave
mov
or
pop
fdivrs
dec
push
popa
jp
push
aaa
out
bound
inc
data16
dec
sarl
xchg
cmpsb
addl
test
cmc
setle
dec
jp
inc
inc
insl
pop
stos
mov
rcll
call
pushf
out
pop
imul
or
fnsave
sbb
mov
ret
jecxz
mov
push
in
in
pushf
xchg
push
mov
add
js
sbb
cli
add
fidivrl
jg
sbb
jp
rclb
movsl
into
sbb
push
pop
or
rcl
imul
cwtl
int3
imul
out
and
cltd
cmp
inc
adc
fnstenv
fldcw
sbb
in
xchg
jo
testb
or
adcb
jo
or
dec
mov
sub
add
aad
lods
mov
xchg
inc
stos
loop
xchg
in
in
xchg
cmp
ficoms
cs
shr
push
push
out
or
push
cli
xchg
int
mov
push
sub
add
push
mov
cli
inc
lock
mov
sbb
pop
mulb
call
cmp
add
mov
jnp
lahf
sbb
insl
jae
inc
cltd
mov
add
dec
fsubl
repnz
add
push
fcompl
fldt
adc
jp
mov
fwait
xchg
icebp
aad
cmp
hlt
pop
nop
xor
or
pop
mov
in
mov
out
clc
aad
out
mov
xchg
mov
mov
sub
sub
out
scas
sub
repz
addr16
int
xor
pop
jl
or
jmp
cmp
mov
dec
push
pop
mov
test
sar
adc
popa
pop
ror
inc
sub
ret
arpl
frstor
jl
mov
popf
jns
adc
inc
xchg
sub
jnp
addr16
dec
push
pop
push
js
lret
sbb
rol
sub
inc
and
daa
xor
scas
popa
das
pop
xchg
or
push
xchg
pop
int3
loop
mov
xchg
xchg
xor
dec
inc
jg
shl
popa
stc
xor
popf
scas
mull
pushf
xor
add
cmp
jmp
ds
cmpsb
cli
mov
and
lods
mov
popf
inc
or
in
dec
pop
daa
insl
or
push
sub
xor
fwait
in
scas
mov
sbbb
add
loope
xor
into
sbb
push
arpl
mov
mov
xor
sub
mov
ret
sbb
mov
lods
xchg
fdivrl
stos
mov
imul
in
inc
add
cmp
vmovddup
jg
jne
lret
cmpsl
pusha
clc
xor
jb
fidivs
cmp
das
pop
ljmp
stos
mov
fisubrl
mov
mov
outsl
or
pop
jo
inc
push
xlat
cmp
jo
pushf
pop
or
xchg
imul
push
dec
stc
mov
add
xchg
and
jne
in
into
mov
jae
mov
jg
sbb
cmc
insb
jecxz
inc
dec
xchg
xchg
mov
rclb
inc
mov
mov
adc
fisttpll
aam
cmp
cmpsl
xor
jmp
clc
xchg
daa
sahf
mov
dec
out
push
in
sub
int3
adc
xor
pop
out
notl
dec
or
out
into
ret
xchg
das
rcrl
leave
mov
inc
pop
add
dec
cmp
cmp
or
sbbl
inc
mov
mov
mov
in
add
scas
test
sbb
add
mulb
xchg
mov
xor
and
inc
lods
popa
popf
and
dec
sbb
add
fisttpl
jno
inc
mov
rcrb
cmp
mov
cmpsl
and
jmp
stos
in
shlb
ret
lret
fisubrs
cmp
sbb
dec
pop
or
jnp
xchg
jmp
push
jp
xor
movsb
cmp
addr16
or
out
call
test
lret
sbb
mov
mov
out
pop
and
scas
js
jo
aad
pop
push
and
bound
rclb
or
std
xor
inc
pop
adc
add
repnz
bound
pop
ret
rclb
jne
cli
negl
sub
push
es
ror
mov
mov
mov
sub
ljmp
cmp
mov
out
pop
sbb
pop
inc
in
out
jge
repz
adc
iret
push
or
addr16
fildl
xor
cltd
mov
loopne
lahf
in
insl
mov
adc
mov
call
bound
mov
icebp
and
test
out
or
aas
ja
ret
in
dec
pop
sbb
or
pop
scas
mov
xchg
rcl
or
bound
push
test
fidivrl
jecxz
in
ret
mov
xor
cmp
mov
dec
outsb
loope
movsl
sbb
mov
add
stos
enter
sbb
jecxz
fs
bound
sbb
cmp
sbb
xor
sbb
popf
inc
cmpsb
in
das
xor
add
jns
sub
cmp
mov
sub
cmpsl
ret
xor
addr16
bound
es
pop
dec
fsubl
inc
adc
xchg
and
inc
movsl
pop
ret
mov
sbb
and
sti
add
jb
cmc
lret
cltd
repz
pop
dec
cmpl
in
loopne
into
movsb
push
xor
flds
test
add
loope
xchg
dec
fs
mov
inc
add
lret
push
or
bound
movsb
sub
mov
sbb
cmc
and
sahf
xchg
je
sbb
cwtl
in
loop
sbb
xor
cmp
out
insl
push
or
dec
xchg
jns
int
or
mov
into
pop
and
in
je
or
pop
loope
inc
movsb
cmp
dec
orb
inc
push
testl
and
sbb
pushf
cmpsb
stos
xchg
inc
push
add
daa
les
mov
popf
out
mov
repnz
dec
xchg
mov
pusha
ret
into
lods
or
sbb
lret
xlat
inc
sti
cmp
sbb
mov
lret
xchg
cld
jb
push
mov
fildl
std
pop
mov
in
fidivrs
inc
pop
rolb
jp
push
movsl
ss
mov
mov
testb
aas
mov
ljmp
lahf
fidivrl
in
ret
xchg
subb
add
bnd
cmp
out
aaa
in
adc
mov
xchg
sahf
push
or
arpl
je
push
jle
jb
sub
loop
mov
xchg
es
orb
mov
out
out
bound
ret
xorl
adc
push
or
mov
enter
mov
push
xchg
xchg
and
or
rclb
pusha
mov
inc
cli
pop
push
test
sbb
je
sbb
sahf
or
sbb
push
dec
push
push
negb
cmove
cs
mov
mov
inc
push
cmc
hlt
cmp
gs
pushf
pop
les
outsb
xchg
sub
or
shlb
cwtl
pop
fimull
sti
idivb
ss
mov
and
jecxz
fmull
push
cld
pop
pop
mov
mov
sbb
cmovae
pop
add
cmp
sbb
push
jnp
popa
inc
cltd
daa
jb
mov
sub
mov
leave
ljmp
fstpl
push
mov
ret
xchg
outsl
adc
dec
ja
das
xchg
push
jo
fpatan
add
jae
push
mov
rolb
sbb
jno
sahf
mov
arpl
mov
pop
sbb
pop
ja
sub
inc
jg
pushf
imull
jb
ficoml
jp
fistl
jg
jecxz
cltd
jnp
push
cwtl
andl
xchg
movsb
jecxz
cmp
pop
inc
cmp
arpl
sub
fs
mov
and
stc
test
jle
inc
push
fisttpl
xor
in
fwait
mov
movsb
mov
nop
sub
xlat
loop
test
fwait
lahf
enter
sbb
dec
cld
aas
inc
cmc
pop
jl
sub
add
out
xor
sahf
test
sub
sub
xor
push
dec
add
in
cmpsl
inc
cmp
push
xchg
sbb
leave
add
mov
imul
mov
and
leave
add
insl
adc
jnp
and
aad
dec
or
out
int
pushf
xchg
loopne
pusha
cmpl
popa
inc
cltd
inc
stos
rclb
fs
das
push
subl
push
inc
cmp
lock
lahf
pop
push
xchg
out
xchg
lock
xchg
int3
jg
filds
scas
pop
mov
mov
call
loope
lds
daa
pop
push
pop
repz
mov
rcll
repz
xchg
mov
push
shrb
xchg
aad
pusha
stos
pop
cmp
fdivp
mov
or
mov
cmp
or
mov
outsb
rcrb
xchg
pusha
hlt
das
add
xchg
push
mov
test
out
mov
ret
push
stos
inc
mov
and
std
ret
sbb
push
mov
shll
cmp
scas
fs
jp
es
or
cli
loopne,pn
push
or
push
stos
aad
adc
xor
xlat
cwtl
cmp
aam
ret
push
or
orb
pop
fdivs
icebp
inc
outsb
cli
lret
push
sbbb
sbb
bndstx
mov
inc
mov
ret
xchg
fidivrl
xchg
jl
or
sbb
pop
pop
lds
outsb
aam
dec
imul
adc
inc
mov
mov
movsb
aam
lods
or
fisubrs
hlt
mov
add
push
add
outsb
adc
clc
outsb
pop
in
inc
aad
dec
enter
mov
clc
mov
adc
lcall
or
xchg
test
ljmp
mov
mov
aaa
out
and
fldcw
aam
icebp
and
and
lods
aad
add
lret
aam
sbb
insb
jns
dec
sarb
shl
stos
jmp
pop
push
je
out
sub
adc
mov
add
add
xchg
gs
data16
jns
dec
add
fisubrl
pop
not
mov
mov
jge
shll
jnp
or
aad
js
outsb
inc
gs
mov
sbb
outsb
push
sub
add
mov
scas
push
fstl
ret
cld
sarl
cwtl
mov
xchg
jb
mov
shl
dec
scas
push
inc
aaa
mov
jbe
push
adc
dec
push
sbb
in
or
scas
xchg
fcoml
daa
movsb
dec
in
mov
popf
fucomi
dec
push
mov
xor
dec
sti
sbb
sbbl
pop
xor
mov
mov
test
inc
out
aaa
dec
js
pop
jmp
dec
out
stos
dec
lret
fdivrl
dec
fwait
add
in
daa
loope
xchg
setae
int
lret
rorl
push
pop
fstp
inc
sub
pop
daa
stos
cmpl
mov
add
jnp
mov
sbb
aad
mov
push
add
xchg
sbb
into
and
gs
xchg
sbb
or
jnp
ffreep
inc
jo
jmp
cs
inc
add
shl
mov
xchg
pushf
in
fldt
jg
push
mov
lcall
mov
xchg
fwait
xor
fdivs
out
andb
icebp
pop
sbb
fcomps
push
enter
or
jg
xchg
movsb
push
pavgb
fnstcw
rcr
add
ret
loopne
cli
or
addl
cmove
lods
cmc
xchg
movsl
and
imul
call
xor
mov
in
xchg
aas
lret
out
pop
add
jmp
lods
nop
fdivrl
cmp
imul
fidivs
or
clc
adc
pop
data16
add
nop
pop
cmp
sbb
mov
dec
add
mov
in
pop
daa
je
movsl
pop
aad
ljmp
movsl
jl
mov
jge
xchg
fmuls
ret
out
outsl
in
sub
movsl
mov
mov
xor
shlb
xchg
insb
mov
mov
sub
fldpi
insb
add
fwait
nop
inc
adc
movsb
cmp
dec
stos
aaa
push
loop
mulb
rcrl
inc
stc
cmp
lahf
repz
loope
loop
inc
sbb
mov
mov
int3
andl
inc
xchg
cltd
jl
mov
mov
mov
imul
push
xchg
popa
cli
pop
iret
sub
adc
nop
imul
stc
pop
cmp
mov
inc
jnp
cwtl
into
js
xchg
repz
jmp
inc
and
dec
cmp
js
iret
icebp
jecxz
push
mov
or
jg
cmpsl
push
adc
loope
aam
jno
dec
fs
inc
imul
sbb
mov
xchg
sbb
sbb
pop
ret
ficomps
or
push
push
insb
scas
dec
jle
cmp
cmp
push
push
adc
pop
div
dec
mov
std
lret
dec
push
int
or
push
cmp
movsb
or
pusha
pusha
jge
xchg
popa
push
mov
sbb
icebp
mov
sub
push
xor
movsl
nop
in
sti
xor
sbb
add
pop
aam
push
aas
fwait
stos
inc
hlt
adc
mov
mov
fistl
fs
jge
js
addb
xchg
mov
inc
jl
mov
or
out
push
arpl
or
rorl
xlat
ror
push
mov
or
inc
jecxz
push
popf
inc
cmp
sub
lret
xor
mov
sbb
fadds
xchg
jmp
icebp
adc
cmp
insb
cmpsl
or
xchg
sub
flds
mov
call
pop
js
adc
shrb
xlat
ret
jl
dec
cmp
aad
inc
into
inc
sahf
adc
mov
hlt
out
inc
insl
or
push
adc
out
std
sub
repz
fbld
dec
ja
hlt
sub
test
dec
sbb
int3
pop
push
fidivrs
stos
push
cmpsl
fwait
into
pop
ss
jnp
repnz
in
jp
ror
int3
sbb
shrb
inc
stos
in
dec
mov
enter
fisttps
rcr
inc
inc
dec
cmp
mov
jnp
popa
inc
lret
inc
mov
or
mov
mov
movsl
cld
jo
adc
inc
adc
jmp
aas
les
imul
xchg
call
sbb
mov
dec
movsb
cli
dec
out
test
jge
out
sarb
stos
cli
stos
rorb
xor
sub
add
ret
movsb
sbb
push
add
loope
inc
add
aam
mov
push
mov
sbb
popa
jge
addr16
or
xor
jp
xlat
xor
arpl
or
inc
jecxz
rcrl
xor
mov
dec
push
xchg
sbb
rolb
jp
mov
adc
cmp
jno
mov
sub
lea
inc
test
aad
bound
stc
lea
cmp
lcall
push
adc
seto
mov
push
shlb
loope
mov
push
and
add
adc
int3
push
jnp
cli
repz
jl
xchg
icebp
push
rcrl
jecxz
jae
sbb
js
repnz
xor
stc
loop
nop
call
mov
mov
or
stos
or
outsb
lock
or
sbb
pop
icebp
jge
jecxz
shrl
cmp
inc
add
in
iret
push
mov
cmp
stos
ljmp
sbb
xor
js
stos
loope
inc
mov
fdivrs
sub
fiadds
pushf
pusha
add
iret
xor
rorl
mov
popa
fnstcw
xor
clc
ret
lret
aad
addl
aam
push
mov
or
shrb
sub
pop
into
sbb
lcall
xor
sar
in
jb
push
inc
xchg
push
dec
pop
mov
or
je
js
subl
addr16
dec
cmp
sub
push
push
inc
dec
pop
cmpsb
push
imul
daa
fimull
xor
ror
dec
jns
loopne
sbbb
lock
lods
das
or
mov
inc
sub
shl
inc
push
fwait
push
lahf
mov
addb
cmpsl
dec
dec
cmpsl
add
jbe
repz
aam
pop
lcall
rolb
cmc
lods
in
and
popa
je
adc
aam
pop
outsb
push
and
cmp
and
roll
xchg
fistpll
add
or
or
fldcw
test
sub
ret
cmp
jp
scas
aaa
push
movsb
pop
sub
loope
stos
test
and
fisubl
mov
lret
fisubs
lods
lahf
add
jb
out
push
mov
in
adc
popa
push
test
sahf
inc
insl
btc
mov
push
out
ja
enter
fs
push
mov
fimuls
mov
stc
pop
push
xor
xchg
cmpsb
inc
cmp
clc
cli
lods
imul
jb
jle
int3
int
mov
je
cltd
push
pushf
out
inc
or
push
mov
in
and
jmp
shll
pushf
mov
push
loop
push
cli
fsubrl
clc
xor
jne
arpl
enter
or
adc
pushf
lds
outsb
push
out
lahf
and
jmp
fidivl
sub
cli
push
or
cmp
xchg
xlat
fsts
sbb
aam
xlat
dec
sbbl
push
and
jmp
xor
pop
jbe
in
jbe
shl
mov
decb
push
cmp
pop
pop
nop
js
out
pop
scas
pop
adc
andl
popf
ja
pop
pop
rcrl
pop
xor
dec
fidivrs
cmp
xchg
lahf
add
fwait
sub
xchg
js
test
movsl
sti
lea
inc
pop
jae
xchg
pop
fcmovb
addr16
mov
cmp
pop
xchg
add
or
and
pop
pusha
stos
or
movsb
add
jmp
mov
and
stos
or
mov
jecxz
inc
in
rclb
inc
dec
mov
or
sahf
inc
je
mov
jg
push
add
pushf
mov
cmp
sbb
sbb
mov
in
push
out
cmp
bnd
inc
lcall
cwtl
xchg
mov
fucomp
popa
sbb
in
push
xchg
iret
sti
repnz
stos
inc
in
lret
cmc
cmp
lods
fisttpll
mov
pop
ret
xchg
mov
mov
xchg
pop
pop
dec
mov
nop
jle
fimuls
imul
sub
push
ljmp
mov
decl
mov
pop
rcr
lds
jg
xchg
sbb
out
daa
xor
js
mov
inc
stc
fists
mov
inc
jecxz
dec
xchg
sbb
arpl
orl
lods
gs
shll
xor
jns
bound
and
outsb
cld
lea
mov
mov
xor
ret
dec
dec
leave
sbb
movl
in
mov
fs
inc
and
pop
out
fs
adc
and
inc
jmp
adc
push
jne
mov
aad
mov
add
cmp
jl
push
mov
aaa
dec
test
in
mov
sub
inc
and
in
mov
sub
xor
enter
cmp
scas
xorl
pop
sub
dec
and
xor
xchg
mov
stc
movsl
test
add
inc
dec
xlat
jg
mov
lods
cmpb
add
xchg
loope
cmpsl
int
and
inc
fdivrl
sub
ficompl
fs
mov
add
or
pushf
inc
jmp
inc
in
vorpd
push
insw
aad
test
jge
mov
push
xchg
jb
in
and
xchg
push
sti
rorb
insl
jns
js
add
xlat
pop
dec
mov
dec
in
pop
ret
and
dec
pop
mov
js
arpl
mov
stc
pop
pop
xor
fdivrs
push
loop
add
addr16
adc
adc
push
frstor
cwtl
push
test
pop
out
arpl
push
inc
xchg
aaa
loopne
jecxz
push
loop
lcall
inc
adc
push
sbb
out
xchg
insb
inc
jbe
cli
jg
ja
jmp
push
in
xchg
xor
jecxz
and
fisttpll
jg
xor
lret
ret
inc
ror
mov
add
mov
fstpl
jge
dec
pushf
shld
mov
add
mov
pop
inc
nop
inc
test
jp
ljmp
adc
pop
movsl
outsb
in
mov
jns
sbb
mov
push
mov
mov
cmp
sub
out
dec
test
insb
jl
shll
xchg
dec
pop
addr16
add
mov
or
and
dec
and
xchg
clc
pop
or
aaa
pop
scas
stc
movsb
test
xlat
out
push
subl
and
pop
mov
daa
xor
cwtl
stos
jmp
mov
or
sti
lahf
ret
dec
repz
xchg
inc
dec
push
fists
mov
js
xchg
push
xor
mov
nop
aaa
push
xchg
xchg
bndldx
popf
lret
xlat
adc
fcos
cmp
repz
lahf
and
mov
lods
shl
loope
popf
mov
pop
ljmp
test
loope
mov
loope
mov
add
shll
cli
inc
xchg
fisubrl
xor
xchg
sarl
and
sbb
push
arpl
movsl
insb
shrl
cmp
mov
mov
adc
imul
imul
stos
addl
mov
sub
inc
mov
in
cwtl
mov
and
shlb
pushf
sahf
movsl
roll
sbb
scas
arpl
rorl
std
stos
sti
int
sbb
xchg
lods
sahf
arpl
lea
movsl
mov
inc
movsl
scas
dec
leave
xchg
setb
int3
inc
push
mov
fistpll
out
rclb
xor
sbb
cwtl
add
inc
mov
push
out
add
das
lret
dec
jg
int3
mov
sbb
jecxz
push
int3
std
push
adc
jge
xor
push
pushf
arpl
shrl
fildl
push
inc
jb
popa
lock
xchg
adc
xchg
enter
adc
fs
outsb
and
lea
push
pushf
sbb
push
push
push
push
out
out
ss
jg
jecxz
or
jbe
mov
fcmovb
scas
inc
outsl
and
and
shl
sbb
mov
int3
cs
sub
xchg
inc
or
fdivrs
and
jb
push
cld
addb
dec
sbb
hlt
mov
int
cmpsl
jmp
mov
dec
out
mov
push
fnstsw
int
cli
mov
insl
fisubl
inc
imul
sbb
bound
out
push
ljmp
loope
xchg
mov
jecxz
pop
ret
or
pop
xor
jns
test
pop
inc
and
jae
or
push
or
push
ja
mov
cmp
es
inc
xor
adc
push
inc
cmp
pusha
add
cmpsb
sti
scas
test
insl
cmpsl
fistpll
jg
leave
mov
out
push
xchg
xchg
jnp
xor
test
andb
cmp
xor
fidivs
les
inc
pop
inc
jne
lea
xlat
mov
ret
sbb
pop
in
in
sbb
std
in
lea
pusha
sub
imul
xchg
out
loope
ss
pusha
mov
mov
lock
push
out
lret
dec
arpl
lahf
sbb
and
pop
out
lea
or
mov
mov
enter
push
pop
fisttpll
call
inc
pop
popa
sbb
call
xor
cmp
adc
fcmovnu
in
fcoms
push
cld
les
xor
sub
sbb
xchg
ret
aad
jmp
dec
stos
xchg
sub
mov
shll
push
outsb
sub
or
xor
mov
loop
ret
sar
push
lods
or
pop
xchg
fisttpl
xchg
sarb
mov
sti
and
xchg
jmp
xor
clc
lods
jns
add
imul
mov
cmp
mov
lea
pop
sub
adc
mov
xlat
pop
xchg
int
sub
movsb
rorb
in
jg
jg
stos
inc
aas
mov
dec
sahf
inc
das
or
insl
lret
push
mov
jle
cmp
movsl
and
test
and
sbb
gs
inc
arpl
jno
push
dec
inc
fcoml
mov
push
stos
mov
jb
inc
sti
ret
adc
or
mov
inc
pop
sbb
lcall
test
mov
movl
shrb
cmpb
cmp
aas
out
xor
jecxz
xlat
mov
andb
leave
out
dec
sbb
in
test
add
mov
sub
add
enter
cld
shrl
or
fwait
sti
repnz
cmpsb
xchg
xor
xchg
inc
arpl
int3
enter
jnp
rcll
xlat
fs
sbb
and
daa
xor
mov
push
aad
cltd
mov
sbb
lret
sti
sbb
sahf
ljmp
xor
rcrl
out
mov
xchg
sbb
inc
cld
push
mov
sbb
add
ds
into
add
rclb
cmp
adc
leave
or
push
inc
ss
jge
lret
test
mov
je
dec
jmp
jmp
lret
mov
int3
mov
loope
sbb
ljmp
outsl
and
mov
fstpl
xchg
mov
inc
dec
mov
gs
or
sbbb
int
lcall
pushf
push
pop
jmp
in
cmp
inc
ret
daa
xchg
mov
pop
in
cli
int
adc
sahf
lods
adcb
imul
lods
and
cmp
add
dec
daa
bound
mov
lret
mov
int3
daa
mov
std
mov
mov
push
dec
xchg
lock
clc
stos
imul
xor
in
push
sbb
inc
sbb
sub
cmc
and
loope,pt
test
add
fs
test
das
flds
mov
inc
loope
pop
xor
push
fxch
add
push
xchg
loop
fld
test
rclb
cs
cmpsl
lcall
icebp
cltd
inc
das
aam
jl
xor
jnp
jb
push
mov
test
cmp
dec
lret
stos
dec
cli
loope
shrb
fidivrl
or
push
rorl
mov
mov
sti
xor
pop
push
sbb
cwtl
inc
push
pop
push
iret
aad
push
lods
mov
xor
stos
mov
fldt
sub
sarb
lods
push
xchg
lds
test
mov
pop
aam
arpl
inc
out
push
sbb
mov
loope
lock
sbb
and
not
mov
into
ret
xor
cmp
jo
in
mov
addr16
inc
jo
aam
cmp
lea
pusha
lret
jae
lahf
xor
xor
les
mov
sahf
cmp
mov
test
jae
mov
mull
add
and
enter
popa
xor
dec
shrl
push
mov
jno
lret
or
je
addr16
mov
push
fisubrl
pop
mov
pop
scas
das
mov
sub
xorb
mov
in
push
cmp
shll
xor
add
dec
aad
jae
aam
add
and
repnz
ffree
ret
push
dec
sub
mov
cmpsl
fcmovu
mov
mov
cmp
loop
cmp
push
pop
push
xchg
bound
arpl
dec
add
not
sub
cmp
stos
cmpsl
js
or
psllw
mov
lret
out
lahf
lret
inc
insl
lock
popf
insl
notl
insl
inc
into
add
mov
mov
and
mov
daa
lcall
jmp
mov
daa
jo
push
jecxz
adc
mov
ret
int
xchg
out
jns
fs
inc
aam
or
jmp
call
and
fidivrs
push
adc
inc
shrl
imul
cwtl
pop
or
filds
cmp
inc
fldenv
popa
cwtl
xlat
or
fidivrs
ffree
push
sbb
cli
pusha
dec
adc
pop
test
stos
cmpsl
notl
cmp
arpl
roll
jmp
test
test
mov
loopne
imulb
dec
cs
repnz
push
dec
xchg
adc
fld
lret
js
adc
pop
mov
dec
jg
nop
xor
mov
add
sub
jns
icebp
cs
jge
fdivl
cmpsl
pushl
jge
mov
rdtsc
cmpsl
push
scas
lds
push
mov
icebp
mov
adc
mov
movd
sahf
xchg
xchg
cld
cs
and
or
inc
adc
add
ficompl
push
push
repz
outsb
shll
push
rclb
mov
push
filds
fisubl
push
ret
insb
js
mov
lret
push
cmp
cld
pop
stos
loopne
inc
xor
cmc
dec
sub
pop
mov
adc
push
jecxz
inc
and
add
add
stos
cmp
out
js
es
sbb
and
in
xchg
inc
sub
aad
arpl
sbb
mov
in
repz
sbb
xchg
repnz
inc
inc
sub
mov
sti
mov
cltd
mov
dec
fsubrs
push
or
into
sbb
mov
ss
push
or
lret
hlt
hlt
xlat
push
fneni(8087
and
xchg
fwait
lea
imul
inc
dec
add
mov
es
xor
mov
inc
jge
push
cmpsl
sub
cmp
inc
or
inc
popf
test
inc
in
dec
xor
rcrl
push
push
pop
mov
pop
enter
xchg
cmp
or
dec
lahf
fsubrs
or
les
push
test
push
repnz
fdivrp
ljmp
cmc
ss
mov
call
popa
addr16
sarl
cld
mov
mov
repnz
cmp
cmp
pop
imul
sub
jg
rcll
sub
or
inc
sbb
lahf
shl
xor
push
inc
add
std
mov
aad
mov
int
mov
mov
sub
and
sub
inc
or
addps
xor
sub
mov
insb
cmp
push
cmp
insb
adc
sub
in
inc
dec
orl
cmp
xchg
jp
movsb
inc
sbb
jecxz
mov
mov
inc
icebp
daa
push
cmpsl
repz
fadd
cltd
roll
xchg
hlt
add
fbstp
fs
lods
or
mov
and
testb
sbb
mov
sti
in
out
movl
dec
scas
mov
aam
mov
ja
daa
lods
lea
int3
lods
shr
ror
repnz
xchg
sbb
in
pop
fldenv
lgs
popa
and
push
in
pop
call
cmp
adc
push
adc
lret
and
stos
das
inc
jle
loope
insb
lahf
fbstp
xchg
pop
add
jnp
xchg
sbb
rcrl
pop
sarb
dec
stos
rcrl
or
test
jb
daa
in
nop
out
clc
ret
add
push
mov
js
push
enter
dec
movsb
bound
fmuls
inc
mov
loope
hlt
xchg
fimull
fs
lds
xor
daa
jp
pop
mov
sub
jg
sbb
test
jb
je
cmpsl
cmp
ret
push
dec
out
dec
in
mov
nop
inc
rcrb
loop
xchg
pusha
jne
cwtl
and
push
imul
xchg
movsl
test
int
push
outsb
lret
cli
pop
pop
add
leave
outsl
adc
out
pop
mov
rolb
aas
dec
setb
adc
or
cmpsl
nop
mov
sbb
pop
lods
cltd
in
mov
sahf
jg
inc
or
mov
dec
or
sti
negl
pop
rcrl
xchg
cmc
xor
jg
int3
sub
jae
dec
lahf
pop
or
movsb
test
les
idivl
repnz
sarl
lock
mov
cmp
inc
loope
and
sbb
icebp
in
cs
js
repz
push
jae
cwtl
div
fwait
aad
iret
sbbl
mov
dec
sub
xlat
add
je
call
jg
ret
mov
arpl
insb
shlb
mov
aaa
inc
xor
cli
pop
push
inc
and
fisubrs
mov
cmc
jmp
cmp
push
inc
mov
in
movsb
mov
mov
sbb
xor
mov
aam
add
arpl
scas
xor
sub
xor
loop
push
xchg
sub
push
sbb
scas
sbb
sbb
pop
inc
movsl
xchg
lock
dec
fwait
jp
test
or
pop
xor
ret
ljmp
fsubl
arpl
inc
dec
repnz
shlb
mov
or
push
test
add
pop
sub
mov
adc
mov
xchg
jp
cltd
add
stos
inc
popf
pushf
xlat
scas
fcmove
into
not
lahf
fwait
xor
nop
pop
or
leave
and
sub
outsb
subb
into
je
in
mov
mov
sbb
push
adc
test
cltd
cmp
loope
mov
sbb
xor
sub
jae
inc
fidivl
jbe
xor
sbb
dec
cmp
jecxz
sti
pusha
cmpsl
or
sub
fwait
mov
jp
sub
out
imul
push
cmc
cmp
jo
push
mov
loop
push
jp
nop
hlt
mov
stos
imull
adc
add
lods
pop
lds
fs
daa
ret
insl
push
imul
rcrl
jg
sub
sahf
jmp
xchg
fmull
sub
lret
mov
mov
pop
loop
fs
insl
pop
dec
ret
xor
dec
sbb
mov
ret
pop
adc
push
test
push
pop
cs
in
arpl
outsl
pop
pop
pop
inc
loope
pop
adc
pop
xor
repz
cmpsl
push
cmp
adc
pusha
js
add
mov
in
mov
out
inc
clc
mov
cli
add
jg
les
leave
in
pop
mov
xchg
sbb
dec
and
jg
xor
inc
sarl
push
int
jne
bound
shll
xor
mov
stos
cmp
sti
add
pushf
fldl2e
inc
adc
mov
push
push
shl
scas
loope
adc
sbb
jg
inc
push
mov
pop
mov
aas
int
flds
mov
cmpsl
hlt
jg
add
fmul
outsb
mov
loope
rcr
xchg
cmp
pushf
xor
ja
fistl
loop
nop
imul
daa
roll
movsb
push
mov
test
out
arpl
cmp
mov
push
or
cmc
xchg
and
xchg
loope
sbb
jne
adc
mov
loope
leave
fdivrl
test
mov
pop
mov
scas
test
lds
movsl
inc
test
or
push
fistpll
fistps
sub
shll
jnp
jb
aas
add
pusha
stos
add
push
mov
add
push
daa
cmp
and
outsl
adc
pop
scas
add
scas
daa
ss
test
adc
inc
adc
int
push
mov
loope
xchg
push
jp
imul
outsb
push
cs
mov
les
mov
sbb
mov
es
loope
jae
loop
mov
xor
out
or
scas
in
in
insb
sub
loopne
inc
sub
push
rorl
shl
pop
jae
pop
scas
xor
pop
lret
js
mov
jecxz
fwait
arpl
lods
sub
or
add
push
push
and
inc
mov
inc
out
dec
jg
mov
fistpl
xchg
popa
orb
mov
iret
mov
mov
mov
add
pop
sub
fwait
jae
insb
inc
push
popf
and
jge
pop
out
fistps
mov
jge
aad
mov
xchg
sbb
push
push
mov
sub
loope
out
xchg
inc
dec
pop
inc
sbb
xlat
int3
pop
cmp
repz
sub
push
inc
dec
stos
cmpsl
mov
cltd
bound
sub
xchg
fisttpll
push
scas
fwait
dec
fldenv
fs
js
or
push
loope
lods
xchg
data16
int3
xor
movsb
mov
aam
xchg
shll
sub
outsb
and
pop
sbb
stos
std
inc
mull
cld
mov
dec
fxam
stos
add
sbb
and
adc
mov
xor
nop
das
fsubl
cmpsl
in
stos
mov
out
mov
jno
nop
xchg
inc
iret
in
fs
hlt
add
cmp
out
jno
add
sub
sti
cwtl
shrb
pop
jge
imul
xor
lock
scas
mov
push
insb
and
mov
das
push
imul
jae
cmpb
or
inc
pop
jmp
mov
inc
outsl
xchg
rcr
mov
ficoml
cmpsl
repnz
imull
push
fs
enter
inc
jp
fldcw
dec
inc
idivb
scas
mov
push
or
sub
faddl
and
and
lock
fstps
inc
adc
sbb
pop
push
inc
jb
cmpsl
lods
dec
add
into
stos
idivl
push
outsb
mov
xchg
inc
cmpl
pushf
cli
xchg
addr16
fsubrs
jae
push
cmp
jp
stos
or
stos
push
into
xor
mov
sbb
call
fnstsw
insl
inc
sbb
ret
shr
cwtl
or
adc
stos
mov
fcmovnbe
nop
pop
enter
mov
pop
aam
mov
xor
mov
sarb
mov
sub
push
fnstsw
aad
decl
xor
ror
jge
add
out
mov
cli
pop
push
fstpt
cmc
mov
nop
pop
push
cmp
je
mov
push
imul
fs
cs
or
sti
cli
enter
in
jo
xchg
scas
js
sahf
cmp
fs
stos
pop
in
push
into
inc
xchg
out
in
inc
sti
icebp
inc
adc
pop
and
sub
mov
xor
inc
mov
lahf
jae
or
fcmovb
test
add
pop
sub
or
push
inc
cmp
and
in
cmpsl
insl
hlt
inc
test
cmc
fwait
mov
xchg
incl
cmp
inc
mov
pop
pop
ret
fsubrs
push
cmp
repz
push
jae
aas
jno
cmp
in
outsb
sti
iret
rolb
xor
into
xor
push
lods
fists
or
or
inc
xchg
es
mov
ja
mov
and
mov
das
stc
popf
pusha
add
inc
aad
cmpl
jg
inc
or
lea
add
fisttps
fisubrl
dec
loopne
mov
sbb
lock
sti
mov
mov
xlat
xchg
pop
xor
xchg
or
subl
shrb
or
andl
jne
fldcw
fsubs
fwait
jmp
out
test
gs
icebp
pop
xor
lock
sti
rol
aad
aad
cmp
cmp
rcrl
psubusw
fisttpll
inc
aas
sbb
leave
call
mov
and
dec
mov
je
outsl
in
rcpps
push
rorl
dec
loope
fucomp
dec
in
test
sti
fwait
ret
cmp
scas
adc
cmp
and
xchg
pop
movsb
sbb
into
popf
dec
push
adc
add
mov
cmp
scas
jp
outsb
arpl
addl
lret
and
ljmp
cwtl
je
es
loope
add
push
aad
pop
jbe
enter
je
pop
ficoms
mov
test
shlb
repnz
frstor
jbe
add
aam
xor
or
fsubrs
aam
adc
clc
mov
addl
pop
aam
lods
sub
clc
movsl
adc
mov
mov
hlt
loop
das
xchg
xchg
xor
loopne
insb
out
arpl
daa
fs
mov
or
out
fcmovbe
movsb
fisubl
jae
or
inc
loop
xchg
ss
jle
repnz
test
sub
ret
in
mov
mov
stos
arpl
inc
or
or
ja
inc
lods
sub
movsl
push
cmpsl
mov
cmp
push
jns
aaa
int3
mov
cmpsb
inc
rcr
into
push
dec
mov
push
sar
shrb
rolb
imul
dec
pop
je
push
dec
xor
mov
jnp
mov
mov
mov
mov
jmp
cmp
mov
mov
add
inc
push
movsl
sbb
or
xor
insl
mov
sbb
mov
cmpsl
cltd
call
jecxz
push
fld
inc
jmp
cs
adc
xchg
add
xor
out
lret
gs
dec
push
sbb
gs
xor
mov
mov
mov
dec
movsb
mov
jo
mov
pop
xchg
aam
bound
push
int
aad
jmp
mov
xchg
pop
sub
xor
mov
sub
inc
jmp
cmp
int
sbb
pop
jnp
into
jg
xchg
fs
out
out
ficomps
push
stos
mov
sub
fs
push
movsl
xchg
enter
scas
out
add
cmp
dec
push
imul
adc
adc
in
ffree
test
sub
mov
push
inc
jmp
cmc
pop
adcb
clc
es
jno
sbb
je
out
out
xor
enter
repz
out
sarb
push
sahf
hlt
mov
cmc
add
imull
pop
fidivs
jno
dec
ss
imul
add
sahf
outsb
pop
mov
inc
ss
popa
pop
or
pushf
ja
test
mov
xchg
xchg
dec
or
repnz
lea
cmp
xor
inc
xorl
dec
mov
int3
outsb
xor
pop
ret
sbbb
inc
cmp
jnp
movsl
lds
es
or
pop
push
stc
fldpi
shrl
jecxz
sbb
fcomps
and
inc
js
xor
das
clc
pop
lret
inc
mov
in
vpunpcklbw
pop
or
ds
sub
jb
imul
or
mov
sti
pop
std
push
sbbl
adc
repz
jo
cmp
int3
inc
pop
pop
xor
outsb
sub
iret
xor
push
mov
in
inc
fs
cltd
push
mov
and
movsb
outsb
repz
pop
stos
mov
mov
popa
ret
dec
icebp
es
fadd
jo
cmp
fs
cltd
imul
inc
pop
fadds
cltd
dec
pop
sbb
stos
cld
mov
and
out
pusha
dec
ja
inc
sbb
and
pop
push
dec
stos
sbb
pop
xor
shll
iret
sbb
jnp
inc
or
mov
add
scas
and
cmpsl
jp
lods
xchg
sbb
cwtl
jp
lds
jge
dec
popa
mov
movsl
inc
push
dec
pop
fistpll
lret
out
enter
movsb
inc
xchg
jns
scas
icebp
call
sahf
lods
and
mov
mov
add
and
push
mov
std
push
mov
xchg
push
xchg
xor
push
jecxz
dec
js
daa
movsb
pop
hlt
shl
xchg
inc
sub
xor
mov
mov
cmp
pop
inc
enter
fimuls
or
int3
add
shlb
hlt
ret
dec
xchg
test
or
adc
das
push
out
add
dec
push
andb
movsl
lahf
nop
xorb
add
mov
and
scas
pusha
lret
xor
imul
sub
dec
addr16
and
mov
sbb
dec
lds
cs
adc
inc
stos
insb
xor
inc
iret
adc
out
or
cld
pop
inc
lods
add
nop
push
mov
cld
mov
mov
fdivr
lods
pop
loope
mov
jge
insl
ret
sub
daa
in
repnz
dec
fidivrs
push
sbb
sbb
mov
cs
ficoml
out
push
sub
mov
cmpl
dec
je
dec
out
sbb
js
jb
xor
sub
sbb
mov
xchg
mov
inc
dec
mov
inc
sti
insl
ret
cmp
jns
cwtl
daa
insb
xchg
cwtl
mov
xchg
repnz
mov
ljmp
jg
inc
inc
arpl
insb
dec
fs
cmpsl
mov
test
pop
in
push
cmc
sbb
popa
inc
xchg
push
fwait
movsl
ljmp
sahf
lret
sub
repz
cld
inc
inc
stos
jmp
xchg
flds
aad
push
test
aam
pop
aad
mov
popf
sbb
pushf
loope
fs
pop
xchg
jb
cmpsb
aas
mov
or
rorb
in
orl
aad
mov
lcall
ret
inc
jecxz
into
mov
push
out
inc
inc
data16
or
pop
inc
dec
jle
or
rcr
out
stos
ret
mov
cmpsb
shll
inc
int
cmp
jb
leave
pop
sbb
mov
push
aad
pop
jae
mov
mov
xchg
and
dec
xor
mov
sahf
lods
test
arpl
add
test
lods
dec
inc
stos
sahf
or
mov
pushf
inc
cmpsb
out
mov
or
int3
loop
lahf
loopne
fnstsw
repnz
leave
mov
inc
push
adc
popa
fisttpl
fs
xor
in
cs
mov
inc
xchg
andb
mov
xchg
out
fwait
outsl
inc
mov
dec
aas
push
cmp
pusha
pop
jmp
fadd
jb
insb
mov
and
mov
xchg
add
dec
scas
and
pop
iret
push
cmc
psrlw
test
jp
scas
jne
fwait
mov
push
xor
xchg
stos
sub
mov
cmp
sbb
int
lea
movsb
fsubr
lret
sub
in
cmpsb
push
push
mov
shrl
and
mov
into
or
dec
in
pop
adc
mov
jp
shlb
iret
fwait
adc
inc
loope
outsb
or
mov
pop
cmp
loopne
mov
inc
adc
shl
xor
push
insl
ret
imul
imul
mov
mov
adc
inc
mov
push
dec
mov
fs
imul
shl
dec
push
jg
pop
es
inc
gs
pop
xlat
lahf
iret
subb
xor
cmpsb
mov
es
mov
lock
mov
shrl
in
cmc
push
mov
and
sahf
out
fnstcw
jae
fs
jns
arpl
push
mov
sarl
hlt
fwait
sbb
aam
and
psrad
inc
cwtl
in
in
mov
jl
jbe
stos
movb
into
mov
inc
insb
dec
push
jge
movsl
cwtl
insb
cs
pop
cmc
inc
testl
inc
popf
or
add
or
sbb
cmp
cwtl
iret
jl
stos
pop
xlat
add
dec
xchg
repz
jns
jmp
mov
nop
dec
pop
add
sbb
inc
dec
xchg
ret
shll
sub
shlb
loop
cs
ja
pop
cmp
jmp
xchg
clc
fimuls
jne
shll
xchg
mov
push
push
ljmp
xchg
xor
adc
jns
push
xchg
lds
push
push
inc
movsl
ss
or
fildl
adc
inc
cmp
mov
sub
ret
push
jp
fbstp
or
and
mov
pop
mov
arpl
shll
leave
xor
cmp
and
out
push
and
insb
xchg
loop
not
add
xchg
shrb
inc
xor
fs
and
out
sbb
pop
xor
mov
shlb
icebp
mov
repnz
mov
xchg
insb
xor
hlt
mov
xlat
mov
xchg
xchg
and
adc
sbb
pop
push
inc
pushf
sbb
lods
std
gs
lods
sub
sar
and
movsb
cwtl
cli
push
push
cs
imul
pop
cmp
fiaddl
mov
or
shlb
pop
push
lret
clc
daa
jmp
cmpsl
pusha
mov
sbb
test
sti
pmulhuw
dec
sti
dec
add
outsl
mov
out
pushf
arpl
fdivr
dec
sti
in
pop
pop
inc
adc
jecxz
ds
or
addr16
in
xchg
push
pop
adc
xchg
mov
mov
mov
loopne
pop
lds
xorb
punpckhbw
scas
aam
nop
pop
inc
ja
inc
movsb
mov
enter
outsl
add
daa
in
xor
cmpsb
mov
popf
test
insb
data16
mov
and
fnstsw
loopne
push
mov
incb
rolb
mov
dec
popf
repz
rclb
sbb
cwtl
icebp
jno
mov
inc
push
dec
inc
push
lcall
sub
mov
cmpsb
jmp
push
cmp
cwtl
xchg
sub
fisttps
icebp
push
push
cmc
das
xor
adc
aas
insb
stos
inc
xchg
sti
sbb
xchg
subl
cmpl
data16
loopne
fisttpl
dec
dec
aas
sti
das
jo
inc
xchg
or
jmp
testb
dec
loope
pop
aad
adcl
jb
inc
pop
addr16
and
dec
cltd
in
daa
add
js
add
push
paddw
hlt
pop
mov
mov
nop
xor
dec
pop
test
ljmp
in
xchg
and
add
sub
mov
mov
jb
xchg
icebp
pushf
loope
dec
jg
rcl
cwtl
fisubl
sti
icebp
add
scas
in
and
fisubrs
adc
repz
sbb
into
inc
loope
outsl
jns
mov
fimull
scas
fs
ljmp
xor
in
mov
imul
sub
xor
stos
and
repnz
mov
ss
stos
stc
dec
sti
sbb
pop
ret
int
inc
dec
popa
adc
jne
loopnew
inc
xor
cltd
xchg
ljmp
push
push
jge
jg
mov
cltd
popf
push
imul
sub
dec
subb
mov
out
sub
sti
and
inc
lcall
inc
insb
ja
mov
outsb
int3
jg
lret
inc
out
and
in
mov
jno
daa
ret
sbb
or
cmp
repz
in
cmp
in
fisttpll
add
pop
push
jne
jmp
shlb
in
jg
mov
addr16
pop
mov
inc
scas
mov
inc
mov
shll
sub
lret
pop
push
js
idivb
or
cmp
and
pop
lods
jb
jmp
sti
sub
adc
push
push
int
int
cmp
lret
sbb
adc
sbb
and
ret
push
stos
imul
in
mov
ss
sub
jb
popf
fistl
cmpsb
arpl
inc
cmp
adc
cwtl
jnp
pop
push
rcr
push
mov
or
loope
xor
stos
push
sub
int3
push
pop
mov
pop
push
pop
xor
lcall
xchg
daa
xchg
idivl
jecxz
jnp
mov
and
idiv
inc
aad
xor
or
sbbb
jl
push
out
nop
lea
pop
jnp
or
flds
lea
in
xor
pushf
js
mov
mov
fildll
inc
push
addr16
dec
push
pop
sub
insb
gs
xchg
jno
scas
pop
lea
push
cli
pop
orl
ret
dec
stc
lret
int
pop
enter
jecxz
fs
shlb
xchg
sub
xlat
and
xor
sub
and
mull
push
outsb
in
dec
iret
xor
jp
cmc
lods
sub
ja
stos
movsl
jb
mov
movsl
pushf
divl
mov
cmc
das
sbb
icebp
fbstp
and
mov
in
sbb
sbb
fs
push
and
mov
sbb
xor
cmp
inc
mov
pop
or
add
mov
rcr
push
jecxz
testb
mov
shll
sub
or
mov
cmp
cli
mov
push
push
xlat
loop
ret
mov
sub
dec
fiadds
mov
fdivs
sbb
stc
pop
inc
ror
in
xchg
dec
lea
sti
inc
and
inc
lret
cwtl
aas
loopne
cmp
and
jge
mov
lock
out
and
stos
inc
subl
and
inc
add
xor
pop
push
stc
in
push
cltd
add
dec
jae
sbb
push
pop
movsl
shll
sbb
mov
xchg
inc
iret
mov
pop
fidivl
sub
fs
pop
fidivrl
dec
or
fnstsw
xchg
daa
push
mov
cmp
das
addr16
js
pop
mov
movsb
ljmp
inc
adc
push
dec
fldl2e
aaa
cli
lret
and
int
rorb
mov
movsl
cwtl
stc
pop
das
jns
rcrl
adc
pop
xor
adc
lret
hlt
sbb
inc
aam
mov
fcom
imul
sti
fs
dec
sub
insl
daa
adc
cld
mov
xor
inc
mov
aam
pop
pusha
call
movsl
je
xchg
mov
in
xchg
stos
mov
int
mov
sub
stos
test
movsl
xor
pop
sbb
fildll
cmpb
fidivl
ja
test
mov
or
jecxz
inc
xchg
pushf
and
pop
jno
jp
leave
sahf
dec
mov
mov
test
fsts
outsb
and
out
push
push
jns
dec
popa
mov
pop
pop
xchg
dec
push
enter
test
pusha
fs
incl
loopne
and
jmp
or
dec
mov
leave
dec
call
pop
and
setg
movsl
fiadds
sarl
cwtl
fdivl
mov
repnz
mov
cs
lea
inc
fwait
lret
xor
sbb
pslld
sti
mov
pop
xor
sbb
jle
jns
and
sub
mov
pop
jmp
push
cmpsl
not
sti
ds
sbb
jecxz
fs
add
add
rclw
stos
xchg
fidivs
cmp
imull
ret
ret
inc
ljmp
xor
sub
and
adc
movsb
cmp
int
cvtps2pd
clc
cmp
push
mov
cmp
das
or
cmc
pop
scas
push
scas
xor
push
sub
xor
sbb
loope
xor
mov
nop
xor
inc
inc
popa
es
stc
test
bound
mov
inc
xchg
mov
xor
xor
cmp
jae
loope
sub
xchg
not
or
mov
test
arpl
dec
jb
out
clc
ja
inc
out
loopne
push
inc
shrl
cmpb
or
test
push
cmc
sbb
pop
or
jg
popf
btc
xor
sahf
movsb
aad
dec
push
stc
lret
test
fcomp
test
mov
push
push
cs
test
pusha
xchg
fsubrs
xor
and
dec
inc
pop
testl
cmp
iret
fldcw
std
popa
fcomip
insl
mov
or
cltd
sub
dec
mov
adc
xchg
in
mov
call
addr16
test
ret
push
insb
lret
ds
sub
pop
pop
adc
inc
xchg
jae
clc
fsubl
adc
repz
inc
das
int3
andl
sub
mov
mov
inc
sahf
pop
fisttpll
mov
xor
sar
in
fdivrl
cmpsb
inc
pop
fsubp
lea
loopne
dec
jnp
jb
mov
test
loope
ds
xor
inc
test
sbb
int3
xor
dec
and
repnz
or
push
inc
movsl
push
ljmp
cmpsb
es
ljmp
push
inc
inc
outsb
leave
xor
sub
fisubl
jg
iret
iret
mov
inc
inc
jbe
mov
loopne
jecxz
xchg
fistpll
cmp
add
pop
or
mov
fidivl
loope
int
in
sub
cmp
inc
add
inc
and
fnstcw
jno
imul
adcl
shr
or
inc
push
daa
scas
test
out
push
fdivs
aas
pop
mov
xchg
and
fists
daa
jo
push
outsb
sti
popf
push
and
pop
xorl
sbb
out
nop
xchg
jmp
out
pop
sbb
sub
stos
inc
adc
mov
mov
inc
mov
lea
adc
pop
lds
leave
mov
dec
iret
push
sub
call
out
ret
in
ret
jmp
pusha
dec
xchg
mov
inc
cmp
and
inc
loopne
mov
int3
in
xor
xchg
pop
xchg
mov
or
out
stos
filds
lea
movsl
dec
dec
shll
outsl
mov
ja
int3
push
rorl
dec
xor
pop
lret
out
or
mov
fadds
emms
xchg
sub
mov
mov
mov
add
mov
inc
mov
aam
sub
clc
pop
dec
out
adc
icebp
jge
mov
lods
js
test
shll
jbe
aam
loope
je
scas
sbb
sub
sub
mov
inc
shr
aad
xor
adc
out
add
shll
xor
or
sub
mov
add
repz
add
push
leave
shl
in
cmp
test
pop
arpl
lret
in
mov
mov
mov
lret
negb
xor
xchg
add
mov
cmp
testb
aas
out
int
push
sub
xchg
fstl
push
mov
imul
cmp
in
adc
adc
lret
ret
jmp
mov
sub
scas
in
xchg
mov
inc
in
mov
fidivl
movsl
jae
aas
dec
xor
scas
jp
aas
jbe
push
dec
out
jae
mov
out
xchg
lret
jne
fdivr
testl
or
fisttpl
ret
into
inc
movsl
orl
mov
xlat
and
sub
sahf
inc
leave
push
push
stos
mov
cmp
inc
testb
lds
xchg
or
cmp
sbb
int3
cmpsw
pop
movups
inc
mov
sbb
jmp
shll
mov
mov
xor
stc
sbbl
fcmovnbe
shrb
ret
fwait
xor
mov
inc
clc
pop
popf
push
inc
dec
pop
mov
les
inc
mov
fisubrs
push
std
mov
cli
bound
mov
pop
inc
jmp
lods
pop
push
mov
cmpsl
mov
sti
jne
add
xor
inc
sub
pop
lock
fsubl
mov
sbb
xchg
int3
inc
icebp
sub
pop
mov
push
jno
jmp
add
pop
mov
mov
push
or
inc
mov
std
push
mov
mov
cltd
xlat
lea
mov
mov
add
sbb
sbb
inc
int3
push
push
call
adc
sbb
mov
or
inc
mov
xor
inc
lds
mov
jmp
inc
inc
loope
in
cli
das
insl
xchg
div
mov
inc
inc
lret
scas
sbb
call
ret
hlt
lret
pop
stos
inc
adcb
and
mov
add
or
jno
mov
and
call
cmp
xlat
inc
and
int
or
jg
push
inc
lret
pushf
ss
lahf
mov
shrl
dec
movsl
or
add
cmp
push
movsl
cmp
pop
sbb
jg
xchg
sbb
int3
push
out
dec
xor
xchg
mov
jmp
mov
or
xchg
add
push
xchg
inc
ss
inc
inc
loope
cltd
pop
flds
inc
or
pop
mov
mov
push
or
das
lds
rclb
inc
mov
call
xor
adc
sahf
fwait
test
mov
or
aaa
std
push
inc
std
add
into
push
xchg
fdivl
roll
hlt
push
mov
push
fmuls
jnp
lcall
jecxz
in
cmc
push
mulb
xchg
push
xlat
xchg
mov
cmp
mov
and
decl
sti
sbb
mov
popa
arpl
hlt
std
cmc
arpl
sbb
lcall
mov
dec
jecxz
addl
and
sub
mov
mov
cmp
jecxz
aaa
inc
pusha
jb
rcl
inc
movsl
arpl
js
dec
mov
push
jae
lea
bound
add
iret
sarl
xchg
xchg
mov
in
sub
sbb
insl
ret
jl
add
add
fld
rcrl
adc
sub
or
cmpsl
gs
out
pop
nop
xchg
jb
jb
stos
inc
jns
lock
mov
gs
mov
rcll
push
ljmp
or
jp
pushf
pop
ficoms
pop
pop
add
inc
push
mov
lods
das
lret
cmpsl
ret
push
hlt
sbb
arpl
xchg
push
jp
sub
xchg
push
adc
inc
and
cmpb
jge
sarb
adcl
adc
or
dec
out
xor
test
push
int
fsubs
and
inc
sbb
rcl
mov
insb
mov
mov
sarb
push
xchg
outsl
push
and
cmp
sbbb
inc
shlb
test
movsb
mov
lcall
sub
sarl
popf
mov
mov
sti
dec
pop
std
rcrb
push
in
inc
mov
cwtl
pop
push
andb
push
stos
cld
lcall
jb
stos
add
mov
pop
inc
xor
push
pop
insl
adc
jecxz
nop
add
push
inc
xor
loop
xchg
sub
xor
cld
inc
fistpll
cs
and
ss
std
fucomip
or
enter
mov
fs
push
push
addb
dec
push
mov
cwtl
ljmp
adc
xor
fwait
mov
or
push
aam
sarl
sub
stos
xor
cmp
out
jle
sti
xor
mov
loopne
or
popa
push
dec
dec
sbb
cmpsl
jge
mov
adc
jle
out
lahf
ljmp
push
sbb
aam
add
lods
cltd
mov
push
xchg
fcom
movsb
and
test
mov
mov
ljmp
jg
mov
inc
push
jl
lods
sti
add
mov
jecxz
xchg
repnz
std
sbb
cmp
cmp
inc
dec
shll
pop
sbb
or
adc
sti
mov
pop
stc
cmp
adc
movsl
arpl
movsl
and
lea
dec
fldenv
addr16
mov
xor
aaa
jns
xchg
jecxz
clc
inc
dec
movsb
sub
cli
push
and
jle
sub
sub
cwtl
mov
xchg
popa
or
ret
aad
xor
inc
push
pusha
adc
push
movsl
inc
jge
or
and
shr
mov
mov
push
cmp
pop
and
ret
ret
loopne
adc
lret
nop
ds
inc
or
in
test
mov
popa
out
sbb
or
cld
pop
imul
xchg
pop
mov
ret
fidivrs
or
das
cmc
sbb
fld
lcall
adc
sysenter
arpl
shrl
mov
insb
xor
mov
sbb
add
pop
fs
jb
adc
stos
and
jno
cmpsl
and
cmpsl
orb
jno
movsl
cmc
pop
scas
arpl
inc
imul
outsl
pop
pop
out
js
mov
out
xchg
movsb
cmp
je
clc
pop
and
mov
push
fisttps
ret
add
rolb
push
arpl
fcmovbe
les
movsl
cmpsl
mov
jp
les
fs
fsubl
imul
xor
and
push
push
pop
and
push
setb
xchg
cmp
sbb
pop
jno
add
dec
pop
lock
push
insl
outsb
mov
mov
rorl
sub
sub
inc
cmp
int
xor
adc
pushf
div
adc
mov
aas
aad
mov
jnp
xlat
sbb
pushf
inc
inc
fld1
in
sub
sbb
push
sarl
push
and
inc
mov
cmp
jg
xchg
cld
subl
sahf
lea
xor
fs
mov
stc
jle
jno
ljmp
inc
sub
mov
aam
jecxz
sbb
lods
inc
xchg
mov
cs
mov
jecxz
repz
out
lcall
cld
push
repnz
add
xchg
lret
ljmp
mov
sbb
add
and
xor
and
sub
xor
rcll
mov
sub
popf
jg
jb
mov
int3
add
inc
stos
xchg
push
hlt
cmp
pop
mov
push
pop
add
xchg
pop
jp
push
and
mov
xlat
mov
mov
xor
add
inc
inc
pop
inc
and
xorl
and
out
push
mov
popf
cltd
int3
fucom
in
jp
leave
and
jp
mov
fstps
add
xchg
in
ret
movnti
adc
pushl
or
dec
pop
inc
cmpb
mov
jle
and
push
or
xor
xchg
repz
das
jnp
test
xor
cmc
out
cmp
xchg
push
test
mov
cli
mov
mov
addb
loop
dec
mov
adc
cwtl
hlt
push
mov
or
mov
out
jae
into
jmp
mov
arpl
inc
pop
xor
adc
jmp
xchg
dec
adc
dec
or
inc
push
push
dec
in
scas
or
sbb
xchg
jmp
add
sbb
mov
daa
jo
add
leave
add
orl
jmp
cmp
loop
in
maskmovq
testl
lahf
mov
mov
cmp
or
in
cmp
loopne
scas
cmp
mov
call
mov
sarl
inc
mov
pop
push
xchg
cmp
xor
inc
enter
iret
fwait
inc
stos
and
dec
fwait
sbb
addr16
xor
fldl
imul
sti
js
push
sbb
mov
loopne
jns
scas
fs
ret
xchg
push
xor
pop
lret
dec
js
and
adc
sti
cmp
xchg
inc
xchg
lea
cmp
or
mov
mov
test
inc
sbbb
pusha
popl
outsl
loopne
loopne
loopne
push
xor
push
loop
mov
call
hlt
mov
cmp
sbb
sub
pop
dec
int3
push
test
out
push
in
mov
fwait
sbb
mov
aad
mov
jecxz
xor
scas
test
daa
add
cld
inc
repz
or
mov
mov
inc
cs
sub
sub
jne
inc
cmp
sbb
pop
rcrb
into
mov
mov
outsb
call
xchg
jge
call
cs
mov
pop
pushf
xor
cmp
insb
inc
ret
mov
dec
iret
faddl
pop
out
jge
jb
in
and
fistps
or
sub
ret
or
cmc
mov
push
je
psrlq
push
and
sub
dec
add
ret
pop
movsl
xchg
push
mov
les
scas
ja
sbb
test
stos
cmpsb
fs
mov
dec
pop
test
in
fsubr
movsb
ja
mov
jp
lods
adcb
add
pop
fcomp
mov
fs
dec
mov
mov
cmp
or
in
sub
pop
iret
jp
mov
fmull
push
lret
das
int
lret
dec
and
addr16
xchg
pop
daa
jg
cmove
mov
inc
fwait
lahf
repnz
push
mov
cli
sbb
or
test
adc
ret
lock
dec
stc
mov
mov
adc
dec
iret
cmpsl
stos
sbb
inc
mov
cvttps2pi
movb
int
fstps
pop
icebp
dec
xchg
xchg
std
add
jp
mov
jg
rorb
push
out
fldenv
jno
jl
in
mov
xorl
fadds
and
sahf
dec
ss
movsl
cwtl
test
test
les
or
pop
shll
push
push
or
std
mov
mov
cs
in
fwait
mov
cmpsb
iret
ret
inc
inc
mov
mov
clc
add
ret
scas
sbb
rolb
shlb
fldcw
mov
xor
jo
sbb
mov
fwait
xchg
hlt
pusha
sbb
lcall
sub
pop
dec
sahf
cmpsl
adc
aaa
pop
in
and
xchg
jns
sub
ret
add
xor
loope
cld
cwtl
jg
test
mov
inc
dec
filds
das
in
mov
fwait
xlat
xor
lock
rorb
mov
ret
and
add
xlat
loope
lcall
mov
jg
jl
xchg
pop
jae
cltd
icebp
fs
sub
mov
mov
push
push
cltd
out
mov
add
stc
in
xchg
rorl
xchg
inc
leave
aad
imul
fs
mov
je
lea
mov
dec
and
sub
pusha
iret
int
mov
cmp
fs
bound
outsb
and
adc
cs
xchg
pop
int
jb,pn
hlt
roll
dec
and
pop
test
mov
push
mov
push
mov
into
loopne
loopne
aaa
adc
inc
pop
pop
jbe
dec
dec
push
dec
add
push
dec
fcomps
push
sub
push
dec
fwait
js
jnp
iret
or
sub
cld
adc
cmp
mov
jecxz
fs
loopne
inc
test
cmp
cmpsl
sti
es
mov
aad
or
loope
rclb
pop
dec
hlt
into
mov
lods
or
pop
test
jbe
lock
jecxz
aas
jecxz
pop
pop
sbb
je
add
sbb
orb
adc
dec
out
jmp
cmp
sub
cltd
pop
ret
stc
xor
js
mov
pop
sub
push
push
fs
jnp
mov
mov
or
loope
cld
push
pop
ret
ret
popf
clc
fwait
cmp
mov
in
inc
xchg
xchg
sub
insb
jp
add
jg
mov
or
xchg
fadd
jae
mov
push
mov
jecxz
or
clc
stos
push
cwtl
sub
jge
daa
add
xchg
mov
or
fnsave
cmp
in
or
or
and
or
xchg
or
fadds
testb
clc
adc
add
loope
xchg
mov
out
jge
sahf
ret
in
pop
sbb
sbb
scas
lods
fisubl
lcall
gs
stos
lods
dec
fnsave
movsb
js
das
cmpsl
ret
into
loope
mov
push
pop
cmp
stc
fwait
call
test
rolb
inc
lods
jno
shll
aas
ret
or
sbb
fisttpl
lret
in
and
push
mov
leave
lock
push
push
fs
repz
and
xlat
mov
out
mov
repz
aad
xchg
jecxz
sbb
cmp
fstp
nop
fwait
stos
jle
scas
sbb
mov
sarb
out
push
inc
ss
mov
shrb
js
das
mov
dec
cmp
sti
push
mov
mov
inc
xchg
js
loope
mov
xor
xor
add
imul
in
insl
xchg
mov
xchg
dec
dec
fwait
pop
mov
mov
xchg
lods
xchg
arpl
icebp
call
test
push
inc
xor
push
xor
add
jecxz
pop
push
xchg
and
repnz
adc
leave
les
xor
mov
xor
ficoms
push
scas
loopw
cmp
pop
lea
jle
testb
mov
adc
rorb
lock
xchg
popf
movsb
sahf
inc
outsb
into
xchg
nop
pop
nop
push
nop
mov
sub
fwait
hlt
int3
jns
data16
cwtl
inc
pushf
cmpsb
scas
lret
or
mov
cmpsl
push
and
lods
inc
push
dec
mov
push
lahf
arpl
add
jle
in
cld
pop
mov
imul
int3
mov
movsb
ja
pop
or
push
into
sub
push
push
jecxz
mov
xor
adc
call
inc
call
pushf
and
pop
mov
or
xor
or
lods
mov
jmp
fdivl
mov
outsl
pop
push
dec
pusha
pop
les
jb
adc
adc
subl
push
test
xorl
rcr
xchg
hlt
or
xchg
test
add
inc
or
cmp
cmp
pop
loope
jmp
nop
dec
cmp
les
jb
rcr
xorb
inc
jl
scas
in
xor
push
jno
inc
cld
pop
adc
imul
lea
mov
push
pop
fs
push
insb
dec
xchg
sub
push
cwtl
rcll
push
dec
sbb
lods
fadd
mov
sbb
or
fisubrs
test
das
push
in
push
inc
cmpsl
jmp
xchg
sbb
pop
pop
clc
sub
sub
jge
jae
cld
and
sub
sub
unpckhps
call
push
sbb
sti
mov
es
inc
sbb
fadd
mov
dec
pop
push
lea
pmaddwd
call
xchg
jns
out
xor
and
xchg
fs
xchg
fdivs
clc
jne
in
inc
push
and
inc
std
sub
push
xlat
mov
repnz
dec
stos
add
pop
xchg
inc
dec
popa
mov
mov
xchg
sbb
retw
mov
addr16
test
mov
out
and
or
inc
xchg
hlt
dec
js
repnz
sti
dec
sub
inc
inc
cmpsl
adc
addr16
push
jg
out
sahf
out
lret
aas
loope
hlt
addr16
inc
gs
adc
mov
mov
pushf
pop
add
shl
and
clc
daa
adc
cld
add
push
push
fs
sub
adc
sarl
mov
test
pop
xchg
push
and
pop
loopne
adc
shrl
repz
loope
aaa
gs
xchg
inc
pop
ret
in
xchg
pop
and
xchg
push
out
test
cs
xchg
mov
sbb
jns
xcrypt-cbc
cmpsl
push
pusha
inc
mov
ret
inc
ret
or
loope
jl
jge
mov
stos
sub
sbb
inc
cmp
stc
adc
lret
cwtl
pusha
add
inc
cmp
sbb
push
int
call
jle
adc
lret
sahf
push
scas
call
daa
or
or
fs
pop
sti
scas
mov
testb
mov
out
lods
inc
push
insb
pop
enter
lods
fsubrs
xchg
jecxz
lds
into
sti
sbb
inc
jg
pop
out
mov
mov
jg
inc
sbb
xlat
adc
push
out
sbb
jge
push
scas
arpl
jle
cmc
jno
push
mov
inc
mov
inc
test
mov
loopne
cmpsl
ret
mov
xor
xchg
aam
pop
sarl
and
subl
cld
and
xor
inc
adc
cmpsl
addr16
loope
cmp
jae
out
sbb
mov
in
int3
xchg
jle
orb
andl
cmpsl
inc
mov
push
scas
inc
jg
mov
repnz
lods
mov
pushw
test
mov
aas
int3
daa
fiaddl
pop
out
or
fdivrp
movb
pop
push
inc
ret
push
pop
movsb
xchg
mov
ss
fisttps
push
pop
mov
iret
mov
inc
sub
jns
movsl
in
sahf
in
xor
mov
sbb
fdivrs
imul
jno
fcmovne
cmp
mov
pmaxub
or
hlt
lcall
and
sarb
out
sub
call
pop
stos
sub
fs
aad
cmp
xor
out
inc
and
in
scas
jmp
or
mov
inc
dec
mov
jne
bound
daa
push
arpl
icebp
xchg
dec
scas
mov
bound
push
jl
or
xchg
jmp
lods
push
jo
clc
lret
pop
outsb
sbb
push
cmpsl
js
and
clc
add
pop
stos
lea
or
mov
pop
idivb
pushf
mov
in
std
call
push
lcall
cmp
leave
xchg
pop
gs
mov
push
mov
movsb
mov
cmp
xchg
icebp
mov
or
sbb
test
stos
cmpsl
mov
imul
jl
inc
lods
jle
je
mov
jb
arpl
movsl
inc
pushf
jnp
addr16
std
mov
mov
xor
jecxz
out
mov
rol
mov
push
or
repnz
xor
ret
adc
inc
adc
sbb
je
mov
push
sub
fisttps
jg
mov
into
inc
pop
stos
mov
xchg
in
outsl
sbb
pop
fs
pop
mov
dec
ljmp
mov
ret
or
or
lcall
lcall
xlat
fwait
push
inc
fisttpl
sbb
xchg
test
addl
or
std
cmp
mov
inc
sbb
xlat
cmp
xchg
and
out
pop
push
iret
inc
lods
sbb
out
or
fcoms
or
jne
fildl
notl
or
push
adc
aas
and
fidivrs
adc
ljmp
xor
inc
aaa
pop
jmp
mov
ret
in
cmpsl
pop
mov
leave
or
testb
ror
lock
push
inc
dec
rorl
xlat
and
pop
ljmp
cmc
and
jne
aas
and
inc
in
push
fninit
xor
cmp
pop
cmp
mov
jl
cmp
xor
add
mov
repnz
and
clc
in
or
clc
rcll
jge
inc
xchg
ret
fnstsw
clc
xchg
sbb
js
adc
mov
push
xchg
in
fldcw
addr16
ret
imul
stos
add
icebp
jo
stc
fs
inc
add
lds
into
xlat
mov
mov
fnstsw
pusha
or
insl
sbb
insl
dec
shrl
addr16
inc
pop
mov
lds
cwtl
loope
lock
dec
pop
addl
pop
cmp
insb
loope
fs
int
adc
add
sbb
daa
in
out
sarb
aam
and
jne
les
adc
mov
int3
int
dec
cmp
out
les
cmp
addr16
in
cld
test
movsb
out
inc
in
add
jge
mov
rclb
ljmp
jp
sbb
fcmove
fcomps
add
xchg
push
jbe
pop
mov
fnstcw
pop
dec
ljmp
stc
dec
stos
ljmp
ljmp
in
leave
sub
mov
sub
mov
jnp
cli
dec
loop
int
pop
imul
jecxz
and
hlt
lea
pop
push
daa
adc
pop
sbb
sub
jae
cmp
repz
mov
push
pop
fidivrs
rorl
lods
xchg
es
icebp
enter
mov
add
in
in
mov
lret
aaa
mov
xchg
xchg
jecxz
popa
pusha
jmp
dec
cmpl
fidivl
fistl
ret
adc
adc
fcomi
jg
inc
xchg
mov
enter
mov
aad
sub
cs
xchg
sub
pop
or
and
ret
inc
fsubs
pop
rclb
inc
bound
adc
inc
sub
push
shll
lea
sbb
add
int3
mov
out
arpl
jg
in
xor
call
push
loope
into
xlat
mov
adc
aad
fmuls
lahf
loopne
dec
xor
shl
jecxz
decb
mov
cli
inc
int3
inc
ret
jno
movsb
subb
fldenv
stc
xchg
insb
sbb
fisubs
xchg
pop
cmp
xchg
iret
pop
xchg
sti
mov
in
rcrl
pop
les
iret
arpl
add
add
mov
dec
xchg
int
cmpsl
ret
cwtl
test
cmp
mov
stos
repnz
add
leave
sbb
jecxz
add
or
xor
sahf
sbb
shr
aaa
sbb
loopne
fwait
xor
mov
mov
fcompl
jp
ds
fsubrp
inc
into
sahf
ss
lds
hlt
jmp
pop
dec
mov
mov
movsl
icebp
roll
mov
xor
in
mov
out
icebp
xor
cltd
jge
or
push
stos
inc
mov
pop
push
xchg
or
jecxz
stc
ficoml
push
adc
xchg
xor
fcomp
fs
nop
lock
dec
loopne
bound
rorb
inc
sbb
xor
daa
cmpsl
and
pop
adc
jp
fs
or
pushf
push
inc
outsl
paddb
outsl
adc
fs
mov
lock
inc
adc
insb
xchg
mov
fdivrl
iret
ret
inc
mov
push
mov
movsb
mov
ret
stos
push
mov
outsb
cmp
sahf
inc
jns
insb
imul
jp
aam
aaa
int
adc
push
or
cmp
xorps
pop
mov
sbb
in
pop
inc
fs
push
and
or
dec
add
leave
adc
dec
daa
mov
imul
popf
push
mov
icebp
stos
mov
dec
sarb
nop
and
xchg
dec
jecxz
cwtl
repnz
push
or
out
or
rcll
mov
push
js
pop
pop
loope
xor
add
xchg
and
rcr
xlat
pushf
mov
mov
inc
push
out
and
mov
pop
mov
sti
inc
inc
push
movl
mov
test
sub
inc
pop
insb
dec
mov
jg
cmc
stos
into
inc
inc
outsl
push
test
push
push
stos
sbb
dec
or
fmuls
imul
sub
rolb
pop
sbb
cld
xchg
jge
shrb
jp
inc
mov
repnz
fst
or
push
les
and
inc
and
out
jl
jg
shrl
test
push
inc
scas
sub
addr16
rolb
iret
sbb
or
mov
mov
arpl
sbb
jge
add
les
mov
fwait
stos
mov
lret
nop
cwtl
ret
fsubrl
int
xor
fstl
mov
call
mul
or
out
add
das
lcall
ret
xor
and
mov
dec
xor
lret
sub
arpl
inc
inc
xchg
fs
daa
mov
sarb
lock
std
xchg
les
nop
xor
or
iret
dec
aaa
subl
jnp
xor
hlt
repz
inc
andl
mov
mov
and
xchg
xor
lock
sbb
mov
and
cmp
push
stos
cmp
aam
sbb
enter
jl
daa
mov
and
les
push
push
push
or
inc
out
ljmp
sub
in
mov
lea
in
js
jl
scas
mov
sub
clc
push
lea
nop
fstl
pop
rolb
pop
sub
jecxz
mov
ror
mov
leave
sbb
imul
gs
stc
xor
or
fcomps
lret
ret
fisttps
aaa
rcrb
rcrl
mov
addb
or
jecxz
adc
fwait
add
push
iret
inc
pusha
pop
in
cmp
fcmovnbe
popf
les
movsb
push
sarl
inc
and
cltd
mov
aas
pop
cwtl
mov
fdivrp
test
jns
out
roll
mov
push
inc
cmpsb
std
inc
lret
fucomi
push
push
mov
int3
inc
lds
mov
sbb
inc
pop
out
and
pop
add
rcrb
in
xor
cmp
int
test
test
pop
mov
pushf
add
jp
iret
sbb
pop
push
sbb
out
dec
mov
pop
xchg
fldt
inc
test
jne
das
or
fxam
addr16
xchg
xchg
inc
dec
sub
loope
out
mov
pop
ret
dec
ja
shll
add
outsb
pop
push
sbb
mov
inc
andb
test
pop
mov
push
cvtdq2ps
lret
insl
inc
mov
imul
push
sbb
push
or
clc
or
or
inc
xchg
stos
and
insl
jb
in
jecxz
leave
and
sub
shlb
arpl
lahf
push
mov
out
fmuls
cmp
mov
rcl
mov
cltd
sub
test
dec
in
sahf
aad
add
jne
test
pusha
dec
pop
pushf
cltd
scas
mov
mov
push
xlat
and
xor
sub
xor
out
in
fs
call
rcrl
or
mov
dec
or
mov
lods
fists
push
inc
pop
stc
inc
pop
shl
pop
cmp
push
xor
sub
stos
ret
aas
adc
das
xor
or
mov
jnp
jecxz
or
lret
popf
dec
mov
int
xor
in
mov
add
inc
movsl
sub
xlat
adc
hlt
out
loope
mov
jl
inc
test
xchg
shll
sbb
aad
fs
fucomip
outsb
or
xor
adc
iret
cmp
pop
jp
mov
cmp
adc
pop
jecxz
dec
clc
inc
or
pop
cmpl
test
int3
cs
in
iret
mov
gs
aad
xorb
cs
scas
push
lcall
cld
pop
sbb
mov
or
pushf
xor
and
ret
into
push
or
loope
in
jno
mov
in
ljmpw
lret
cmpsl
into
pushf
jne
sbb
in
minps
xor
xchg
jae
adc
mov
popf
insb
ficomps
dec
jns
adc
rcrl
mov
xchg
jo
xchg
loope
stos
xchg
sbb
femms
and
roll
jno
in
or
addr16
js
push
xchg
je
pop
cwtl
pop
pop
lcall
lret
pop
fisubrl
cltd
dec
jmp
aad
lea
rcrb
movsb
xor
xchg
das
call
loop
push
stos
divb
push
imul
inc
stos
stos
test
push
sbb
sahf
int
dec
call
cmp
and
cmpsb
gs
pop
jae
mov
into
jnp
inc
mov
mov
pop
cwtl
push
inc
bound
int
sbb
adc
mov
lahf
rcrl
mov
fstps
movsl
pop
xchg
test
or
mov
loope
push
ret
push
and
mov
test
jp
nop
lahf
adc
out
and
imul
sbb
iret
jmp
xchg
add
cwtl
dec
sub
and
xchg
mov
or
mov
adc
cmp
cmp
scas
push
addr16
inc
ss
inc
xchg
or
cmp
push
enter
mov
push
adc
sbb
pop
stos
jg
jns
sti
ret
mov
or
mov
fcomip
mov
xor
sbb
mov
sub
rorb
or
popa
adc
mov
cmp
inc
cmc
push
sub
or
jb
and
sbb
or
aam
and
xlat
movsb
std
mov
xchg
sbb
je
imul
mov
inc
mov
enter
pop
sbb
pop
into
mov
pop
loope
fimuls
sub
cmp
testl
dec
lods
xchg
inc
push
stc
test
sbb
sbb
addr16
hlt
sti
jnp
or
stos
lods
cmp
mov
mov
test
xchg
dec
ljmp
scas
or
mov
or
jb
lea
jp
jo
mov
pushf
in
popf
cmp
stc
rorl
test
fs
lods
sarl
or
popl
fsubs
enter
cmp
aas
or
jno
push
push
sub
mov
cmp
jno
jae
inc
pop
lods
mov
je
outsl
cmpsl
fdiv
nop
mov
jo
aad
cmp
mov
lret
or
adc
add
nop
jbe
xlat
stos
jmp
xchg
mov
and
pop
shrb
ljmp
divl
stos
cmp
and
dec
es
jp
lret
shr
cwtl
inc
out
sub
and
sbb
loopne
mov
imul
jp
out
outsl
add
push
sbb
jns
shll
mov
movsb
pop
xor
mov
fwait
sub
out
xchg
popa
sub
nop
lcall
adc
and
xor
cwtl
daa
mov
push
fisubrs
fisubrs
mov
outsb
pop
in
repz
jno
or
fs
mov
movsl
loope
insl
arpl
loopne
push
jle
sub
leave
cs
mov
mov
or
in
flds
fwait
mov
or
push
fs
loopne
and
std
mov
xchg
dec
sub
test
add
add
and
rclb
cmp
enter
sbb
cmc
jp
adc
mov
push
mov
cld
lahf
decl
xchg
inc
loopne
and
lret
pop
mov
push
jne
sub
jg
lds
push
ficoms
xchg
lds
in
mov
hlt
add
ret
cld
and
pushf
roll
jns
out
mov
movsb
xchg
out
daa
cmp
mov
aas
cmp
xchg
inc
jp
dec
je
push
xchg
add
xchg
mov
in
inc
adc
cmp
push
pusha
mov
xor
and
mov
pop
clc
lcall
and
jns
fadd
dec
xlat
push
push
pushf
xchg
fsubl
pop
mov
mov
sbbl
or
gs
pop
into
out
jno
inc
mov
sub
xchg
jo
push
push
icebp
inc
loopne
cmp
xlat
arpl
cmc
fcomps
inc
mov
iret
xchg
xchg
or
xchg
in
insb
jb
push
xchg
cmpsb
inc
jg
sub
inc
imul
fnstenv
jmp
xor
mov
sbb
enter
int
or
decl
add
inc
pop
jno
gs
xchg
hlt
jae
push
mov
cmpl
loopne
push
addb
cs
lods
int
cwtl
fdivr
push
mov
xchg
mov
or
or
shll
adc
lea
lea
xor
pop
inc
add
cld
cmc
or
fs
fmul
movsl
lods
rcr
xchg
mov
or
xor
adc
lret
lods
push
dec
sbb
or
jge
inc
rcl
dec
or
inc
inc
cltd
mov
pop
into
test
movsb
fcmove
ficompl
and
mov
cmp
mov
in
sub
sub
push
test
cmp
inc
jae
inc
scas
mov
push
movsb
out
fdivr
adc
and
sti
push
cmp
cli
adc
push
adc
fisubs
ja
movsb
es
xor
add
xchg
imul
cli
mov
mov
insb
lcall
jmp
xor
jb
jae
dec
sti
stc
pcmpeqd
fwait
mov
out
lret
mov
lds
push
mov
pop
stos
or
xchg
insl
adc
stos
fldt
push
cmp
bound
adc
aas
bound
lcall
fcmovne
pop
jbe
daa
push
rol
adc
fmull
pop
arpl
test
mov
sti
je
cli
xchg
fnsave
shl
jge
fcmovnb
out
mov
add
adc
movsb
hlt
pushf
and
jae
mov
jmp
jmp
or
arpl
js
or
sbbl
mov
jecxz
push
call
jno
int
xorb
ljmp
jmp
mov
dec
call
fstl
insl
test
or
ret
pop
mov
jo
jecxz
jbe
adc
ret
outsl
in
or
inc
aad
mov
mov
ficomps
movl
in
jns
arpl
icebp
xchg
add
push
sti
jne
out
fisttpll
addb
push
inc
cli
fcoml
unpcklps
movsb
pop
fsubr
daa
fildl
cs
sbb
and
sub
push
in
mov
andl
jnp
aaa
psrad
in
stos
lds
imul
arpl
mov
stos
xchg
out
jmp
dec
mov
addb
aaa
mov
xor
sahf
sub
stos
hlt
pop
call
cs
jg
into
and
push
pop
xchg
dec
mov
out
dec
push
sbb
fsts
jle
movsb
scas
pop
sti
int
mov
push
mov
out
leave
sti
cmp
repz
sub
loop
aad
scas
scas
pushf
leave
or
movsl
push
fsubr
call
loop
and
mov
dec
dec
cmpsb
es
inc
adc
xchg
mov
movsl
push
mov
pop
dec
pop
out
out
ret
leave
or
push
jno
jae
jae
std
shlb
out
pop
fistpl
ret
imul
sti
fs
sub
pop
fisubrl
fstl
ret
mov
rcr
stos
test
mov
stc
sti
scas
fwait
int3
adc
lret
fs
push
sbb
shr
and
icebp
mov
adc
xchg
ffreep
insl
xor
and
jge
sti
dec
jmp
dec
stos
xchg
and
pop
xchg
out
mov
cmc
inc
lret
fs
or
pop
mov
mov
inc
sti
stos
mov
out
sbb
push
jge
pop
sub
and
jnp
add
mov
stos
or
mov
adc
mov
movsb
adc
ret
push
lods
in
fistl
push
adc
hlt
adc
mov
int
loop
fwait
repnz
mov
mov
xor
add
int3
addr16
inc
mov
or
call
sbb
loop
icebp
popl
aad
mov
outsl
jge
jno
fstl
scas
add
iret
cmp
mov
faddl
ds
fsubl
out
sub
adc
sti
xchg
outsb
xchg
add
outsl
dec
addl
mov
mov
adc
push
or
cmp
sbb
dec
fsubrl
mov
mov
push
cmp
or
mov
xor
cmp
adc
push
cmpsl
idivl
out
pop
iret
or
in
sbb
cmp
mov
jecxz
loopne
inc
in
mov
and
insb
and
mov
lods
fsub
adc
jge
fcompl
jmp
cmpsl
xchg
out
jae
repnz
jne
fildl
sti
sub
bound
jmp
fwait
inc
inc
jmp
repz
mov
lret
or
sub
mov
movsb
pop
push
and
les
pop
out
xchg
gs
cmp
adc
sub
daa
test
jmp
ret
fwait
pushl
fsub
fcomps
jp
jmp
mov
cmp
int
mov
fisubrs
jne
and
in
mov
pop
imul
jno
les
or
cmp
pop
push
outsb
aas
jbe
stos
shll
out
ljmp
xchg
jmp
pop
mov
loop
sbb
rcr
daa
push
adc
xchg
adc
hlt
push
movsl
fcoms
dec
lea
pop
sti
dec
loopne
mov
adc
xchg
fstl
cmp
xchg
jae
sti
or
jecxz
and
repz
loope
pop
cmc
add
jae
jecxz
movsl
inc
mov
mov
sti
fwait
jge
out
xchg
jl
jb
mov
fstl
ss
jecxz
push
imul
addl
jne
fst
out
iret
mov
out
add
push
push
out
fwait
and
loopne
scas
mov
iret
ret
lods
sub
jae
sbb
adc
adc
mov
stos
loope
mov
cltd
sub
fwait
ret
xor
test
into
mov
or
mov
dec
aad
pop
dec
es
mov
ret
mov
sbb
fs
mov
or
fwait
ret
sbb
lret
mov
into
sar
test
pop
mov
xchg
cltd
inc
dec
jmp
cmp
xor
test
adc
into
mov
mov
inc
in
test
arpl
lods
push
movsb
ret
pop
pop
rcrb
mov
add
mov
push
fptan
xchg
ss
jne
aaa
mov
in
pushf
jp
cltd
cwtl
push
imul
int
push
fwait
movsl
or
pop
inc
jmp
dec
add
push
dec
and
cmp
imull
push
les
fldcw
ret
mov
int
inc
loop
fisubrs
inc
stos
outsl
cld
xor
rol
inc
jne
and
fsubs
mov
in
imul
fs
jmp
shlb
push
inc
and
xchg
sbb
lcall
aas
ret
loopne
push
popf
in
push
hlt
testb
push
bound
or
xchg
add
jge
sub
inc
adc
mov
cmpsb
ss
pop
std
xor
inc
jge
xor
inc
mov
or
fld
jg
xor
daa
inc
dec
pop
call
insl
lret
shll
out
cmpsb
push
sahf
adc
dec
adc
mov
stos
out
std
shll
xor
in
pop
ja
pop
leave
dec
into
cmc
xchg
xchg
xor
xor
cwtl
xchg
add
pusha
sbb
jle
cld
in
int3
jg
lods
mov
push
scas
sub
mov
push
jl
je
or
dec
xlat
fwait
xchg
lds
sbb
push
mov
push
push
jmp
out
mov
mov
movsb
mov
loop
loope
imul
inc
pop
inc
xor
neg
in
rclb
jle
push
ss
dec
aam
outsb
in
cmp
out
fwait
dec
testb
stc
fwait
mov
sub
pushf
jecxz
mov
arpl
push
mov
popf
jns
pop
push
imul
dec
movsl
mov
stos
js
xor
aad
and
xlat
pop
mov
and
mov
shrl
pop
inc
int
je
arpl
fimuls
adc
shr
inc
jg
mov
adc
daa
ljmp
and
add
iret
and
es
fwait
inc
leave
inc
xchg
jnp
xchg
mov
or
pop
ss
jb
lahf
and
xchg
sub
sbb
cld
inc
stos
pop
jnp
xchg
or
xlat
and
in
push
fistl
push
roll
popf
ja
adc
testl
aas
cmc
and
inc
inc
pop
xchg
loope
pushf
mov
mov
fadd
xchg
cltd
cs
stos
mov
movsl
dec
cltd
mov
xlat
sbb
les
ffree
cmp
xor
pop
int3
rcll
sti
pop
jne
fadds
pop
sub
pop
out
dec
sub
fs
inc
std
lret
add
or
dec
xor
inc
or
mov
scas
sbb
lock
sub
pushf
xor
enter
xor
pop
inc
cmp
jb
shr
arpl
mov
add
add
sub
mulb
std
test
nop
sbb
shlb
jne
or
test
notb
in
and
xor
jle
mov
pop
sub
je
negb
sub
iret
out
jecxz
ret
jbe
and
pop
xor
mov
push
sbb
clc
xbegin
mov
cs
out
pusha
test
orb
jg
sbb
mov
pop
scas
dec
test
xor
inc
sub
dec
mov
jne
xchg
pushf
xor
mov
sbb
jg
cmpsl
mov
rcr
ret
outsb
insl
stos
mov
pop
xchg
add
shr
pop
push
add
enter
add
lret
mov
mov
push
mov
jecxz
orl
and
or
xchg
add
pushf
sbb
movsl
cmc
or
andb
cmp
inc
or
mov
mov
mov
into
push
push
dec
daa
jno
loopne
or
arpl
in
or
fs
mov
js
cmc
mov
inc
movsl
mov
in
arpl
pop
mov
mov
test
jge
popa
out
xor
outsb
mov
xchg
daa
rcrb
mov
push
dec
fisttpll
pop
and
pop
inc
enter
and
and
push
lock
sub
imul
mov
xor
ret
jp
mov
inc
add
pop
loopne
cmpb
aam
inc
sbb
push
fnstsw
fwait
adc
add
daa
xor
ljmp
fmulp
mov
pop
dec
rcll
adc
xchg
lods
pop
xorl
mov
mov
dec
movsl
fbstp
sti
inc
nop
loope
shr
inc
shl
xor
stos
dec
mov
aam
push
adc
jb
sub
and
sbbb
aad
movsl
xor
and
mov
sbbl
out
add
inc
pusha
sarl
inc
mov
or
pop
repz
sub
jae
in
js
es
data16
rcl
aam
xor
add
cmovae
jne
jne
jp
push
sub
sub
inc
inc
jl
or
fadd
loop
stos
loope
int
push
mov
in
rcrl
sbb
mov
clc
lahf
mov
scas
in
inc
push
outsb
test
sbb
xchg
jne
stc
jp
test
inc
das
xchg
or
cld
dec
sub
sub
jb
rolb
fcomps
or
xor
icebp
mov
inc
into
fcoml
pop
push
xchg
sbb
adc
sub
and
or
mull
or
mov
xrelease
fwait
ja
sarl
and
inc
ret
rep
pop
push
adc
jno
inc
jp
mov
xor
mov
xchg
lret
xchg
in
xchg
repnz
sti
add
sti
mov
lcall
dec
hlt
adc
int
sbbb
xor
scas
push
mov
xor
loopne
adc
adc
mov
push
add
js
scas
std
inc
sbb
fisttps
add
sbb
in
movl
push
fcmovnb
insb
pop
pop
jno
add
xchg
je
or
sub
and
adc
gs
push
repz
mov
pop
ljmp
jg
or
cmpsl
jne
in
loop
xchg
out
sbb
fwait
sub
in
data16
jne
les
xrelease
std
inc
xchg
ss
stos
mov
jb
jle
push
mov
mov
cmp
or
lea
test
and
outsl
or
mov
cmp
xchg
push
test
inc
inc
outsb
jne
popf
aam
jge
sub
jnp
out
pop
lret
pushf
dec
mov
mov
mov
lret
inc
pop
aas
fs
sahf
out
ja
idivl
xor
jnp
out
outsb
aam
adc
jle
push
or
cmp
jl
lcall
push
stos
inc
std
or
test
pusha
dec
or
jbe
dec
jge
add
jl
and
push
ljmp
test
sbb
lods
out
repnz
mov
inc
ss
fs
jnp
iret
xchg
adc
fmuls
push
jae
into
in
mov
shrb
scas
or
push
mov
ror
xor
lods
lods
hlt
test
in
jecxz
adc
inc
xor
mov
js
out
imul
icebp
mov
mov
test
cltd
icebp
add
stos
ljmp
cs
call
mov
push
sbb
push
fstp
fsub
adc
jecxz
fisttpl
pusha
popa
and
dec
sbb
adc
pop
out
push
aam
dec
fstpt
add
xchg
fistl
jge
and
int3
jno
out
sub
test
fstpt
lcall
pop
lods
lret
out
das
push
adc
mov
sbb
cmp
mov
xchg
movsb
push
or
ror
faddl
iret
inc
outsl
pop
into
push
psubusb
dec
sarl
outsl
test
shlb
roll
push
and
push
lcall
jmp
and
fld
mov
inc
pop
insl
bound
and
inc
push
movsl
out
inc
push
clc
sub
insl
aam
sbb
and
mov
or
jmp
lahf
js
daa
out
out
and
mov
push
js
xor
pop
cmp
mov
add
leave
les
push
mov
dec
sti
mov
push
mov
fwait
cltd
sbb
jp
lods
adc
push
pop
push
xchg
sahf
je
and
iret
pop
dec
jo
inc
out
push
std
int3
or
lahf
repnz
or
and
dec
inc
mov
jns
lret
cmp
adc
enter
aaa
sub
stos
insl
jg
scas
inc
test
sbb
inc
rol
cltd
sub
mov
jne
inc
test
or
hlt
jns
mov
and
inc
jmp
mov
inc
loope
fs
jo
mov
mov
insb
aas
mov
sub
in
hlt
js
adc
sub
sub
pop
cmpsl
sub
cmp
xor
add
pusha
cmc
pop
sti
or
jg
xor
inc
jp
sbb
jbe
sbb
inc
sub
xor
in
in
dec
mov
gs
imul
mov
or
int
popa
push
ret
pushw
nop
xchg
rcrl
and
push
mov
insl
ret
mov
mov
adc
add
notb
push
das
fcmovb
pop
hlt
push
loopne
fs
sub
jg
mov
stos
lret
rcll
sub
bound
inc
dec
sub
aaa
push
loopne
adc
and
mov
test
xlat
and
stos
mov
in
mov
jg
fwait
jle
mov
xlat
stc
pop
inc
sbb
inc
pop
subl
out
xchg
xchg
lret
mov
xchg
ret
loop
pop
xchg
inc
nop
movsl
repz
add
push
shr
imul
xorb
lock
fs
mov
cmp
or
push
ret
roll
mov
int3
push
in
iret
pop
rol
repnz
mov
aas
mov
mov
stc
rol
jg
clc
add
or
enter
xlat
fstps
pop
cmp
jmp
mov
stos
mov
pop
clc
jno
fs
or
xchg
notl
rolb
pop
sbb
ret
shrl
cmp
xchg
inc
insb
push
sub
popa
sub
dec
or
icebp
ret
lea
rcrb
repz
xor
fwait
ret
sbb
push
push
xor
mov
and
inc
ljmp
loope
xor
push
jae
or
inc
mov
push
cmp
push
push
push
das
jl
fwait
mov
mov
and
jne
pop
in
cmp
ret
fdivs
out
repz
ficomps
pop
nop
ja
dec
addr16
sbb
push
into
enter
fsubs
xor
cltd
sbb
push
mov
inc
or
xchg
push
xchg
fwait
hlt
fdivs
stc
aad
fsubs
fnstenv
mov
fsubl
xchg
pop
lcall
push
mov
cs
jnp
ret
fildll
sub
sub
and
xor
sbb
bound
xchg
jecxz
jle
cmp
fbstp
scas
or
jecxz
aas
das
inc
xchg
mov
jp
incl
mov
jecxz
mov
xchg
and
pusha
insl
cs
xor
mov
fldenv
and
cmpsl
lock
fisubl
sbb
cmp
fldl
jp
fstl
sbb
pusha
or
or
lahf
inc
movsb
xchg
pop
push
cmpl
cli
inc
test
mov
idivb
fadds
mov
sub
sub
inc
pop
push
push
lods
mov
xchg
cs
test
mov
fcmovbe
push
js
cld
repz
xchg
aam
cmp
shll
movsl
nop
lret
cmp
daa
ret
jl
inc
adc
bound
inc
sbb
adcb
push
xor
das
aaa
jg
xor
rolb
jg
or
xlat
add
xchg
add
fdivs
add
mov
dec
pop
in
mov
sub
cmpsl
mov
mov
jo
mov
xor
fucomip
xchg
nop
pop
mov
fwait
ret
sub
jg
or
inc
iret
jmp
adc
xchg
ljmp
xor
mov
cmp
call
icebp
or
dec
mov
inc
jo
mov
sarl
shl
adc
arpl
fs
xchg
and
pushf
xor
and
xlat
xchg
or
jbe
sbb
jmp
mov
fstpl
inc
push
pusha
js
sbb
dec
addr16
push
cmp
mov
into
sub
mov
jnp
mov
mov
repz
mov
mov
adc
pop
repz
xor
jge
outsl
xor
fistpll
repz
xchg
mov
scas
jg
mov
pop
repnz
in
sbbl
push
push
test
fstl
ds
jb
inc
dec
pop
in
lea
dec
gs
cmpsl
hlt
lret
mov
cmp
inc
loopne
or
stos
mov
ds
xchg
push
fsubrs
sti
fsts
enter
adc
mov
or
inc
clc
xlat
ljmpw
arpl
imul
das
mov
add
stos
mov
adc
int
in
xchg
inc
stc
cmc
movsb
fstpl
pop
popa
insb
or
sti
jno
mov
sub
mov
into
dec
inc
js
mov
lods
fisubs
js
rorl
fsubr
pop
into
or
in
jecxz
cmp
lret
cmp
push
or
add
mov
ficoms
mov
movsb
mov
pop
out
mov
cmp
cmp
adc
repz
lods
test
cmpsb
push
mov
enter
mov
mov
mov
xchg
jge
mov
inc
xchg
out
xor
adc
jg
xchg
cmp
lcall
lods
xor
push
inc
mov
mov
int
mov
and
mov
cmpsb
subb
lret
mov
push
mov
sub
mov
imul
xor
mov
jbe
lods
mov
inc
jmp
ljmp
and
iret
fwait
pop
mov
and
mov
xchg
lods
mov
test
adc
call
mov
sbbb
fdivrl
mov
jp
adc
in
popf
sahf
cmpsl
lahf
push
and
imul
push
mov
lods
add
mov
adc
mov
mov
and
call
mov
bound
mov
cld
scas
mov
and
dec
cmp
lahf
and
sub
mov
pushf
pop
push
push
je
mov
out
mov
in
dec
mov
bound
mov
jge
sarb
hlt
movsl
jle
bound
mov
sahf
pop
lahf
insl
clc
decl
mov
push
mov
mov
adc
stos
mov
lds
lods
adc
lcall
inc
xchg
mov
test
mov
mov
mov
pop
mov
xchg
clc
jge
adcb
mov
and
lahf
jnp
push
mov
lods
jmp
mov
iret
or
insl
lcall
lods
sub
insl
jno
dec
mov
mov
add
and
out
pop
std
and
dec
outsl
push
divl
orb
lahf
mov
mov
insl
sbb
mov
arpl
or
out
lods
jmp
mov
sbb
jnp
xchg
out
and
mov
push
jnp
mov
inc
jge
sub
fbstp
out
mov
mov
sahf
xor
popl
inc
mov
cltd
sti
lcall
out
imul
rcr
cmp
mov
sbb
mov
pop
xor
mov
in
and
mov
mov
roll
or
test
ja
int
mov
dec
cmpsl
mov
mov
pop
into
pop
in
add
cmp
insl
xchg
ja
lcall
mov
idiv
add
idivl
incl
jmp
sbb
mov
rcrl
js
dec
mov
lahf
add
std
mov
xchg
lcall
xor
and
dec
movsb
mov
or
inc
pop
mov
dec
adc
mov
pop
mov
mov
xorl
mov
mov
pop
andl
cld
fwait
lcall
loopne
mov
and
or
cmp
mov
xor
mov
xchg
push
jnp
mov
inc
mov
mov
push
adc
sahf
inc
cmpsb
mov
xchg
lcall
bswap
lret
out
stos
insl
aad
and
aas
mov
mov
xor
xor
add
rcr
cmpsb
pop
bound
mov
add
fwait
dec
mov
mov
mov
loop
sahf
in
rolb
cmpsl
cs
imul
fwait
fwait
ds
cld
lods
xchg
inc
push
cli
lods
call
cli
jmp
adc
mov
nop
mov
das
mov
adc
sahf
push
cmpsb
xlat
lahf
jge
out
mov
or
mov
add
cmp
shlb
js
and
ud1
ja
sbb
xor
int
fwait
pop
mov
sahf
gs
jecxz
lahf
inc
addb
mov
bound
mov
test
stos
cmpsb
setg
out
lods
iret
lods
lds
sti
mov
dec
adc
mov
nop
mov
ret
dec
pop
mov
lret
aam
pop
rorl
xor
or
or
cmp
mov
mov
stos
jb
pushl
pop
bnd
pop
ds
loop
mov
mov
xchg
sahf
inc
aaa
inc
mov
mov
xchg
xchg
insl
and
add
mov
stos
lcall
cld
in
jbe
fisttps
dec
subl
xchg
dec
inc
test
mov
mov
jno
pop
xor
mov
mov
sahf
mov
push
sbb
sub
mov
aas
sbb
stos
movsl
and
dec
sub
lods
insl
enter
inc
popf
lods
cli
push
mov
mov
and
pop
mov
mov
dec
sub
mov
stos
and
aaa
and
mov
adc
mov
jb
xchg
imul
cld
push
lods
shlb
add
jge
xlat
mov
cld
aas
mov
xchg
mov
and
jns
cli
mov
bound
sahf
mov
mov
jb
je
pop
push
incl
iret
pop
pop
add
stos
andb
lods
mov
mov
dec
mov
pop
fildl
pop
mov
inc
inc
out
mov
or
stc
pop
dec
mov
mov
jg
cltd
mov
push
xchg
pop
mov
jmp
mov
lods
lock
popl
sub
mov
mov
cmpsb
test
sbb
mov
out
mov
mov
lea
cmp
mov
xchg
xchg
inc
cli
adc
xor
jmp
lret
mov
jl
jmp
lcall
adc
mov
sti
shlb
adc
add
bound
mov
sti
cmp
xchg
pop
insl
dec
loop
mov
into
mov
inc
xchg
shrb
aas
pop
cmpsb
stos
sbb
mov
es
mov
mov
mov
xchg
xchg
ja
shr
mov
mov
mov
adc
adc
loope
pop
sbb
sbb
shrl
sahf
mov
outsl
shl
pop
lea
sbb
scas
mov
addb
ss
orb
stos
lahf
rorw
inc
sbb
test
lcall
push
subl
mov
ja
inc
cltd
adc
ljmp
add
into
cmp
adc
shrl
pushw
sahf
mov
cmp
mov
jns
jmp
mov
push
out
stos
mov
add
testl
icebp
push
out
sarl
pop
xchg
sub
mov
inc
or
mov
adc
outsl
fwait
adc
pop
sub
pop
and
jg
xchg
sbbb
icebp
je
and
dec
push
push
ret
mov
or
dec
or
fcompl
mov
mov
adc
es
data16
jnp
mov
mov
push
xchg
arpl
paddq
mov
lods
ret
mov
xchg
decl
mov
bound
mov
xchg
add
inc
push
mov
adc
inc
icebp
sub
lahf
test
cmp
mov
fbld
inc
jnp
lods
sbb
mov
mov
ja
pushf
or
add
jns
mov
sahf
insl
mov
mov
insl
enter
xchg
aam
loop
xchg
lods
aam
imul
inc
imul
das
adc
mov
mov
iret
or
mov
into
lock
inc
ds
lahf
or
mov
inc
in
mov
mov
adc
sub
lds
adc
mov
dec
pop
rcrl
mov
andb
mov
or
lods
pop
inc
xor
lods
aaa
mov
mov
sahf
adc
aaa
ljmp
in
mov
lret
adc
test
stos
xor
pop
lods
mov
lods
adc
mov
jns
jmp
lret
pop
mov
sbb
in
adc
mov
mov
mov
test
adc
setge
pusha
neg
mov
stc
jmp
cmp
push
cmp
mov
pusha
jmp
cmp
push
lea
jbe
add
bsr
shl
movzbw
mov
or
cmp
add
or
mov
bswap
add
bts
movsbw
adc
cmp
movl
sar
mov
clc
jmp
jmp
frstor
outsl
jne
stos
stos
mov
jne
testb
xchg
out
cltd
mov
inc
cld
aam
push
std
cs
mov
mov
mov
or
cmp
rorl
fcmovnu
mov
mov
mov
mov
mov
xor
fcom
ss
mov
adc
mov
rcrl
jne
add
pop
pop
cmp
pop
addr16
mov
mov
insb
adc
pop
sub
mov
mov
jge
xchg
mov
mov
mov
cmpsb
lds
repnz
or
scas
cltd
xchg
mov
inc
out
mov
dec
movsl
in
dec
jns
scas
clc
jl
add
mov
cltd
push
pop
xchg
adc
push
mov
lds
cmpsl
dec
sbb
or
movsb
mov
ja
sub
lgs
pop
shlb
test
mov
push
shrb
dec
mov
dec
inc
bound
lods
or
mov
pop
into
pop
sub
lds
xchg
or
xor
daa
jne
testb
mov
ret
mov
stos
dec
sub
scas
ficoml
push
inc
dec
imul
jp
pop
shll
mov
cmpsl
cmp
and
mov
addr16
sahf
rcrl
mov
or
fs
call
call
lea
jg
mov
pusha
lea
mov
pushf
mov
mov
movw
pushl
ret
test
push
cmp
jmp
sub
rcl
pushf
shr
add
movzbw
add
rol
pushf
mov
mov
or
jmp
lea
jae
push
pusha
stc
cmc
cmp
call
push
lea
je
pusha
call
xor
cs
and
in
cmp
push
jp,pt
out
lret
mov
mov
or
dec
jg
pop
xor
mov
outsb
or
fmuls
jns
push
hlt
in
and
cmp
xor
out
push
push
dec
mov
push
mov
fists
lcall
cmp
je
pop
mov
mov
int
ret
into
popf
cli
cmp
call
xlat
jp
xchg
xchg
ficoml
mov
add
aam
xchg
jmp
clc
pushf
add
mov
pop
fwait
pop
xchg
jb
shll
dec
addr16
sbb
outsb
rorb
and
clc
dec
mov
lahf
fcomp
movl
setae
lahf
lea
pushf
jmp
sarb
imul
fisubrs
loop
mov
mov
movsb
mov
pop
and
lods
fldenv
lret
xchg
cmp
push
cli
push
adc
and
ds
sub
pop
in
or
and
jg
lcall
test
les
xchg
shr
int3
scas
mov
pop
repz
inc
out
xlat
aas
or
dec
mov
int3
lds
call
bswap
mov
pop
movb
mov
lea
call
pushf
jmp
sub
test
not
mov
pusha
call
mov
pushl
mov
movw
pushf
pushf
pushf
lea
jmp
mov
mov
pushf
movb
pushf
xchg
movzbl
not
movzbw
pushf
popl
pushf
movzbw
mov
pop
push
pushl
popl
pushl
movl
not
lea
jbe
lea
mov
push
mov
mov
lea
jmp
stc
call
bt
movw
mov
stc
sub
mov
lea
jmp
shl
call
dec
call
mov
pushf
pusha
pushf
movb
lea
jmp
push
sub
push
mov
push
pushf
lea
jmp
pushl
clc
sub
mov
call
pushf
jmp
pusha
call
rcr
lea
cmc
ror
mov
clc
add
push
pusha
pushf
mov
mov
mov
pushf
mov
mov
lea
jmp
dec
test
cmp
clc
pushf
sub
pushf
pushf
mov
push
pushf
pushf
lea
jmp
pushl
shl
pushl
mov
jmp
jmp
call
mov
mov
pushf
mov
lea
jmp
movzbw
bswap
pushl
popl
bswap
movl
pushf
mov
mov
push
mov
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
jmp
call
pushf
xchg
movzbw
pushf
bswap
push
mov
movzbw
movzbw
pushl
lea
lea
push
movl
movzbw
not
movsbl
mov
push
pusha
pusha
lea
jmp
jmp
jmp
jmp
dec
inc
stc
neg
ror
test
neg
add
bt
test
mov
pushf
add
call
stc
call
call
call
call
mov
lea
js
push
pusha
pushf
mov
jmp
add
pushf
pusha
push
lea
jmp
mov
jmp
xor
movsbw
movzbl
stc
pusha
jmp
pushl
mov
push
not
movzbw
bswap
mov
pushf
pushl
pushf
lea
jmp
call
stc
clc
pushf
sub
pushf
mov
pushl
pushf
push
lea
jmp
push
pusha
pusha
mov
call
pushf
popl
jmp
push
pusha
lea
pusha
call
pusha
mov
mov
call
pushf
mov
pushl
jmp
clc
cmp
call
jmp
clc
sub
pushl
movb
cwtl
stc
stc
jmp
jmp
mov
call
pusha
mov
jmp
sar
mov
bts
setnp
mov
call
pushf
call
dec
cmc
test
sub
mov
push
test
sub
call
mov
lea
ja
bsr
btc
mov
shrd
shr
aas
bsf
lea
setae
sbb
sub
rcr
neg
inc
aam
lea
and
movzbl
stc
rol
and
call
shr
lea
and
rcl
seta
sub
rol
bsf
mov
bswap
mov
bsf
stc
bsf
btc
add
mov
neg
add
mov
inc
cmc
clc
sub
cmc
ror
test
cmc
adc
xor
rol
inc
sub
bt
rcl
sub
sar
bswap
movzbl
sbb
ror
mov
cmc
test
cmp
bswap
bt
jmp
jmp
pushf
and
jmp
mov
mov
pusha
movb
pushf
lea
jmp
pushf
lea
jne
test
bswap
movsbw
bswap
mov
push
and
jmp
bt
bswap
rdtsc
stc
clc
cmp
push
sub
call
pusha
mov
pushf
lea
jmp
mov
mov
mov
movw
jmp
movb
pushf
lea
call
sub
push
movw
push
pushf
lea
movb
pushl
jmp
movsbw
call
lea
jne
pusha
movb
mov
pusha
mov
lea
jmp
pushf
call
jmp
call
or
test
mov
bt
clc
add
jmp
pop
pushl
movl
pop
pop
pusha
mov
mov
mov
pushf
pushl
lea
jmp
pushf
pusha
jmp
pushf
mov
pushf
push
lea
jnp
pushf
pushf
popl
pusha
mov
jmp
shr
movb
call
xor
bt
cmc
neg
jmp
pushf
mov
call
push
mov
pusha
jmp
pusha
movl
pushl
pop
pusha
movzbw
mov
pushf
lea
jmp
cmc
cmc
sub
bt
sub
call
movl
movb
lea
jne
stc
jg
cmp
xor
push
jmp
xor
movzbl
bswap
push
test
sub
sub
neg
cmc
shl
not
bswap
rol
xor
xor
shr
btc
movsbw
sub
sbb
btr
sub
clc
and
bswap
mov
test
call
xor
lea
jns
push
dec
cmc
neg
bt
cmp
clc
add
pusha
pushf
mov
pushf
push
call
test
sub
test
pushl
test
cmc
sub
jmp
lea
js
push
jl
push
mov
pushf
lea
push
push
not
movzbl
jmp
push
call
push
call
pusha
lea
jo
test
sub
jmp
add
shl
pushf
cwtl
mov
rcl
mov
lea
jg
add
push
mov
pusha
push
movb
lea
jmp
lea
jae
popl
pusha
movb
lea
jmp
pushl
popl
mov
movb
lea
jmp
shl
sub
shld
sub
mov
jmp
mov
push
mov
pushl
pushf
popl
pushf
movsbw
movzbw
mov
movzbw
mov
pushl
popl
call
pushl
pushl
popl
pushf
pushl
movb
lea
jmp
pushl
popl
mov
push
mov
jmp
not
pushf
movl
jmp
jmp
call
push
mov
pusha
jmp
mov
movb
pushf
mov
jmp
pusha
mov
pushf
dec
clc
clc
push
cmc
sub
pushf
push
mov
pushf
pushl
mov
lea
jmp
mov
mov
jmp
push
mov
call
mov
pushl
popl
pushf
movb
lea
jmp
push
mov
pusha
lea
jmp
inc
mov
pushf
sub
push
test
neg
mov
call
jmp
or
and
mov
ror
sar
mov
test
test
pushl
popf
pushf
lea
jmp
mov
and
test
mov
test
bt
jmp
push
pushf
popl
pusha
call
movzbw
not
mov
mov
lea
jmp
neg
shr
and
rol
mov
push
add
mov
pusha
lea
jmp
push
pushf
mov
jmp
jmp
add
mov
pusha
mov
mov
lea
jmp
jmp
btc
bswap
mov
shl
or
not
push
mov
pusha
clc
test
pushf
add
mov
pushf
pushl
mov
push
pushf
lea
jmp
pushf
popl
pop
not
mov
mov
not
lea
jnp
pushl
movzbw
jmp
movb
mov
pushf
mov
pushf
pushf
push
jmp
pusha
mov
push
pushf
mov
pushf
mov
pushf
push
jmp
jmp
movl
movb
lea
jg
push
pusha
pushf
popl
not
call
mov
jmp
xchg
neg
jmp
mov
mov
movb
push
mov
mov
pushl
ret
sub
cmc
pushf
cmp
shr
movb
call
xor
ror
mov
clc
bt
cmp
add
mov
push
cmp
sub
bt
test
jmp
pushf
popl
jmp
jmp
bt
cmp
add
call
mov
push
mov
jmp
pushf
mov
pushf
push
pushl
lea
jmp
call
mov
btr
mov
inc
adc
neg
inc
mov
bt
pushf
add
test
cmc
sub
je
shld
jmp
pushf
pusha
mov
pusha
push
lea
jmp
mov
push
pushf
lea
jmp
mov
jmp
bsr
rol
dec
cmp
mov
cmp
sub
call
jmp
shr
neg
popf
rdtsc
lea
pushf
movsbw
mov
xchg
xchg
lahf
mov
lea
pushf
push
mov
jmp
pushf
popl
lea
mov
mov
bswap
jmp
pushf
pusha
mov
mov
pushf
lea
not
pushl
popl
movsbw
movl
jmp
lea
jl
push
mov
pusha
pushf
lea
jmp
pusha
mov
pushf
mov
movb
mov
push
call
sub
stc
not
cmp
pusha
cmp
sub
pusha
sub
clc
cmp
cwtl
cmc
cmc
clc
call
sar
sub
sar
rcl
mov
cmp
push
test
call
mov
mov
movw
pusha
mov
mov
mov
call
movsbw
lahf
pushl
mov
setge
lea
mov
pushf
pushl
ret
aas
dec
daa
btc
mov
jno
pushf
sub
call
xchg
lea
movzbw
call
cmc
movzbl
jb
bt
sub
pushf
mov
pushf
push
neg
clc
cmp
test
movb
xor
call
mov
pushf
movl
lea
jmp
pusha
lea
pushf
pushl
mov
pushl
push
movl
lea
jmp
rcl
mov
sub
shl
add
call
stc
shld
push
movb
mov
push
pushf
popl
push
jmp
call
not
jmp
mov
jmp
sub
cmp
and
push
pushf
pushf
popl
lea
jb
pushf
push
pusha
pushl
popl
mov
mov
pushf
lea
jmp
push
sub
pushf
mov
push
mov
pusha
movw
push
lea
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
mov
movb
pushl
popl
push
push
pushf
lea
jmp
pushl
popl
pushl
lea
jmp
test
pushl
cmp
cmc
pushf
add
cld
clc
pushl
popf
pusha
lea
jmp
pushf
pushl
popl
pusha
push
lea
jmp
mov
add
jmp
pushl
mov
pushl
popl
mov
lea
jmp
mov
mov
pusha
pushf
pushf
lea
jmp
jmp
mov
jmp
cmc
lea
test
call
not
pop
movw
mov
movsbw
pushl
popl
movsbw
movl
not
jmp
mov
movl
push
pusha
lea
jmp
lea
push
stc
call
call
mov
pusha
call
mov
pushf
add
pushf
jmp
pushl
lea
je
pusha
sub
jmp
rol
sub
jmp
movsbl
xor
mov
rcr
shrd
mov
push
pushf
add
mov
mov
pusha
mov
mov
lea
jmp
shrd
push
call
pushf
mov
jmp
pushf
cmp
cmp
pushf
pusha
call
cmc
sub
pushf
sub
cmp
pusha
not
cmp
pushf
stc
sub
stc
call
mov
lea
jmp
push
stc
sub
test
neg
movw
jmp
pushf
popl
call
mov
pushl
popl
movb
movb
pushf
push
lea
jmp
pushf
mov
mov
mov
call
sbb
lea
mov
pusha
add
pushf
jmp
pushf
jmp
mov
mov
ror
seta
pushl
popl
bt
rcl
movl
setns
pop
ror
mov
lea
call
pushl
mov
movb
jmp
pusha
pusha
jmp
mov
pusha
movb
push
movl
lea
jmp
jmp
push
push
pusha
mov
pushl
mov
pushl
mov
lea
jmp
not
jmp
pushf
xchg
mov
pushf
popl
pop
mov
push
pushl
popl
mov
pop
bswap
movl
lea
jmp
mov
mov
pushl
lea
jbe
pushf
mov
pushf
movw
mov
push
mov
push
jmp
pushl
popl
mov
pushf
pusha
push
lea
jmp
push
mov
pushl
pushf
call
mov
movzbw
pushl
popl
movsbw
movl
bswap
mov
pushf
push
lea
jmp
sub
clc
cmpl
jmp
mov
mov
jmp
mov
pushf
jmp
call
and
test
test
mov
jp
sub
not
mov
pusha
jmp
clc
pusha
neg
call
jmp
jmp
movb
mov
push
pushf
lea
jmp
mov
seto
push
push
pushf
mov
call
lea
jne
push
movb
mov
pusha
lea
jmp
pusha
pusha
pushf
mov
push
jmp
movl
pushf
mov
push
mov
pushf
mov
push
pushl
ret
pushf
popl
call
push
mov
push
jmp
jmp
pushf
decl
mov
call
not
neg
neg
setp
pushf
bswap
lea
not
movsbw
inc
movzbl
btc
bsf
shl
and
cmp
mov
call
mov
call
mov
call
add
bsf
btr
pushf
mov
pusha
mov
mov
clc
push
clc
sub
pushf
movl
bt
push
shl
call
add
add
mov
mov
lea
jmp
setle
pushf
popl
btr
btr
jmp
bt
adc
clc
or
mov
cmp
mov
jmp
mov
pusha
pushf
mov
call
pushf
add
movb
call
stc
push
jmp
sub
jbe
push
add
pushf
mov
mov
pusha
lea
jmp
pusha
clc
xor
stc
cmc
pushf
movb
neg
push
movb
call
push
push
jmp
cwtl
mov
call
pushf
mov
pushf
movl
call
push
call
pusha
push
mov
pushl
call
movsbw
movzbw
mov
pusha
lea
jmp
jmp
pusha
push
clc
xor
jmp
pushf
push
pushf
pushf
mov
lea
jne
pusha
pusha
push
mov
pushf
mov
push
pushl
call
call
cmp
ror
cmc
mov
stc
add
setl
pusha
call
movl
pushf
mov
pushl
push
movb
lea
jmp
jmp
call
not
bswap
xchg
adc
pushl
xor
rol
call
shrd
aas
mov
pusha
shrd
movsbw
rcl
mov
pushf
sub
jp
clc
not
cmc
test
not
stc
cmp
sub
cmp
jmp
mov
mov
jmp
test
add
push
mov
call
jmp
jmp
movb
movw
mov
pusha
mov
movl
mov
push
movb
pusha
pushf
xchg
jmp
mov
movb
jmp
mov
jmp
mov
bswap
pushf
popl
pushl
not
mov
call
add
shr
sbb
pop
shld
xor
bswap
btc
mov
jmp
jmp
pusha
pushf
xchg
pusha
movzbw
mov
xchg
xchg
pushf
xchg
movzbw
pop
mov
movsbw
not
call
test
test
neg
movl
cmp
pushf
add
push
jmp
add
roll
and
push
add
cltd
add
roll
pop
xchg
add
push
add
mov
push
sub
xor
push
adc
add
icebp
add
roll
adc
popa
add
mov
push
sub
test
push
sub
push
and
add
roll
sbb
add
xor
push
andnps
push
sub
lock
pop
add
sbb
push
sub
lock
xor
push
adc
add
roll
sub
add
push
add
roll
prefetchnta
push
or
add
in
push
sub
fwait
add
ljmp
sub
add
push
adc
in
add
roll
or
jg
push
sub
add
roll
adc
add
xor
push
sub
lldt
insb
add
lldt
roll
daa
jmp
add
and
push
daa
fwait
add
faddl
push
sbb
add
in
push
adc
popa
add
lock
push
add
sub
push
adc
add
movl
push
adc
add
xchg
add
add
std
add
push
add
sbb
push
and
add
hlt
add
aam
push
sub
add
filds
push
or
add
ljmp
pop
xchg
add
sbb
push
pop
xchg
add
push
add
jmp
add
ljmp
adc
add
addb
adc
add
jmp
push
sub
xor
push
and
add
sub
add
jmp
add
add
push
paddusb
push
sbb
add
insb
add
in
add
icebp
add
and
push
or
add
clc
add
xor
add
lock
sbb
push
andnps
push
push
xor
push
sbb
add
addb
adc
add
ljmp
adc
add
jmp
push
and
push
add
and
push
and
add
hlt
add
push
add
hlt
add
jmp
add
push
add
incb
push
adc
add
popa
add
push
add
jg
push
adc
add
insb
add
push
add
aam
push
sub
add
push
add
xor
add
fwait
add
push
add
lock
push
add
xchg
add
push
add
push
add
clc
add
lock
push
add
incb
push
or
addb
sbb
push
pop
inc
add
jmp
push
or
push
sbb
push
sub
add
lldt
xchg
add
push
add
cltd
add
in
add
sbb
push
sbb
push
pop
xchg
add
jp
push
adc
push
add
jmp
add
hlt
add
das
add
pop
add
aam
push
sub
add
std
add
aam
push
sub
das
add
push
add
in
add
jmp
add
addl
push
and
jmp
add
std
add
das
add
insb
add
sbb
push
pop
inc
add
aam
push
and
and
jmp
push
sbb
add
pop
add
xchg
add
sbb
push
sub
insb
add
xchg
add
movl
push
adc
add
add
add
push
sbb
add
ljmp
adc
add
add
and
push
adc
add
std
add
filds
push
and
xchg
add
incb
push
adc
add
fwait
add
add
test
push
sub
add
add
jmp
add
sub
push
sbb
add
hlt
sub
call
xor
shl
sub
pushf
lea
bswap
mov
movzbw
pushf
not
push
movsbw
push
std
mov
pusha
pushf
not
lea
mov
pushf
xchg
lea
mov
push
cld
call
mov
call
jmp
add
pusha
mov
pusha
push
pushl
pushf
lea
jmp
pushf
popl
call
movzbw
movl
mov
mov
pusha
push
push
mov
lea
jmp
pushl
popl
push
pushf
mov
push
lea
jmp
sub
call
movzbl
sbb
mov
push
mov
call
jmp
add
pusha
bswap
mov
pushf
movb
dec
cmc
bswap
call
jmp
mov
mov
jmp
bswap
call
not
mov
call
lea
jne
sets
shl
cmc
xorb
not
lea
movsbw
pop
pushf
pushf
pusha
lea
jmp
pusha
pushl
pushf
mov
jmp
call
mov
lea
jge
pushf
movw
mov
jmp
bswap
bswap
mov
pushf
movb
pusha
movb
lea
jmp
pushf
popl
lea
jae
popl
pushf
pusha
pushf
lea
jmp
mov
push
jmp
sub
clc
test
add
pusha
pusha
pushf
popl
jmp
jmp
xor
mov
clc
add
jmp
mov
jmp
mov
pushf
pushl
popl
mov
lea
jmp
add
pusha
jmp
pusha
jmp
mov
shr
call
pushl
movsbl
not
pushf
popl
movsbw
call
cmc
pusha
not
pusha
not
jmp
mov
movl
pushf
lea
jmp
stc
mov
jmp
ror
stc
lea
stc
mov
pushf
jmp
mov
mov
mov
pushf
lea
jmp
mov
mov
mov
mov
mov
lea
jmp
mov
jmp
mov
movl
pop
movsbw
mov
mov
movl
mov
lea
jmp
pushl
popl
bswap
mov
movsbw
movl
movsbw
mov
pushl
lea
jmp
pop
pushf
pushl
popl
jmp
dec
push
cmc
cmp
sub
pushf
neg
jmp
movb
call
call
btc
bswap
mov
cmp
rcl
clc
inc
mov
call
jmp
mov
pushf
pusha
lea
jmp
mov
mov
pushf
lea
jmp
movsbw
pusha
call
sar
daa
mov
clc
cmp
adc
mov
bt
cmc
stc
cmc
sub
pushf
call
push
movb
mov
push
jmp
jmp
mov
pushl
mov
mov
pushf
mov
pushf
lea
jmp
pushf
jmp
mov
pushf
push
push
jmp
jmp
jmp
test
cmc
call
push
mov
movb
pushf
popl
movb
pushl
pusha
pushf
pushl
popl
mov
lea
jmp
lea
jae
sub
jge
add
pusha
mov
pusha
pushf
lea
jmp
pushl
jmp
push
jmp
push
mov
call
pushf
mov
pushf
mov
push
push
pushl
mov
mov
call
add
ror
xor
call
mov
mov
push
call
call
setns
rcl
stc
mov
shl
movsbw
shr
mov
inc
adc
sub
mov
cmp
add
clc
jmp
shld
mov
bt
sub
pushf
pushf
mov
pushl
lea
jmp
push
pusha
mov
movb
pushf
mov
mov
mov
call
pushl
popl
mov
pusha
movzbw
pushl
movl
pushf
movzbw
mov
pushf
lea
jmp
aas
aad
mov
pusha
clc
test
add
jmp
pusha
pushf
popl
mov
push
pushf
pushf
pushl
popl
push
push
pushf
lea
jmp
mov
push
pushf
movw
push
lea
jmp
call
mov
jmp
call
mov
pushl
call
mov
jmp
movsbw
pushf
pusha
movw
mov
mov
movzbl
pushl
popl
pusha
bswap
movl
bswap
movzbl
movsbw
mov
pushf
pushf
push
lea
jmp
pushf
mov
pushf
push
mov
lea
pushf
popl
movzbl
call
pushl
popl
mov
pushf
movw
lea
jmp
push
call
seto
lahf
mov
jmp
pushf
mov
pushl
mov
call
mov
pushl
jmp
pusha
pusha
jmp
clc
movsbw
mov
bswap
sub
xor
sub
rcr
bsf
inc
neg
bsf
jmp
pushl
movzbw
movzbw
jmp
mov
jmp
call
push
mov
movb
mov
pusha
pushf
mov
call
push
jmp
pusha
mov
pushf
mov
pushl
push
call
call
bt
cmp
mov
pushf
rcl
bts
or
mov
bt
test
add
push
mov
push
pusha
mov
lea
jmp
bts
sar
cmp
mov
rcl
jmp
jmp
sub
cbtw
or
and
mov
cmp
xchg
call
mov
movb
lea
jmp
pushl
popl
pushf
call
pushf
pushf
pushf
mov
mov
lea
jmp
push
pushl
popl
push
mov
pusha
lea
jmp
sar
xor
shld
bswap
sub
or
neg
mov
sub
bt
lea
cmc
movzbl
test
bt
jmp
jmp
xadd
mov
shrd
setae
mov
not
mov
stc
bt
add
jmp
jmp
call
push
pusha
pushf
mov
jmp
xchg
pop
pushf
popl
movzbw
mov
pop
lea
jnp
not
movzbw
pushl
not
push
lea
jmp
pushf
movzbw
mov
not
movl
pushf
pushl
popl
movzbl
mov
lea
movl
pop
pushf
movw
push
mov
pushf
movl
pusha
mov
lea
jmp
mov
pushl
call
call
movsbw
bswap
mov
pushf
pushf
pushf
lea
jmp
mov
pushf
mov
push
jmp
pusha
bswap
jmp
pushf
mov
movb
lea
jmp
call
jmp
jmp
call
movw
cmp
push
not
pushf
push
add
jno
not
bt
and
jmp
bsf
cltd
ror
push
mov
seta
btc
bts
mov
cmc
test
cmc
bt
add
jmp
jmp
not
push
movsbw
jmp
pushl
popl
mov
mov
movw
movl
not
lea
jns
not
mov
mov
pushf
mov
mov
push
lea
jmp
stc
mov
cmc
call
jmp
test
pusha
xchg
cmc
push
mov
cmc
sub
mov
jmp
cltd
lea
mov
mov
cwtl
mov
mov
pusha
push
divl
pushl
jmp
not
stc
clc
cmc
pusha
and
pusha
mov
movb
movb
pushf
popl
call
not
mov
mov
pusha
lea
jmp
pushf
call
call
pushf
popl
jmp
call
pusha
call
pusha
pushl
popl
movl
push
push
pushf
lea
jmp
shl
test
shr
jmp
jmp
pusha
mov
call
xchg
pushf
push
jmp
push
call
mov
pushl
jmp
pushf
popl
call
pushf
push
dec
call
mov
pushf
mov
lea
jmp
xchg
push
movw
movw
movw
movl
mov
pushl
pusha
pushf
mov
push
pushl
ret
or
rcl
ror
mov
cmc
bswap
bt
jmp
call
pusha
bt
cmc
pushf
sub
stc
pusha
movb
test
add
jmp
clc
and
pusha
push
notl
cmc
call
pushf
popl
jmp
pushf
movb
mov
pushf
call
jmp
or
call
call
jmp
or
pushf
mov
xor
pushf
movb
inc
call
sub
cmc
pusha
call
pushf
pushl
popl
pusha
pushf
pushf
lea
jmp
not
mov
dec
mov
stc
xor
clc
cmp
sub
test
stc
pusha
mov
clc
cmc
sub
jmp
push
pushf
mov
mov
lea
pushl
pushf
popl
movzbw
movsbw
not
mov
pusha
bswap
pushl
popl
lea
jmp
mov
push
pusha
pushf
lea
jmp
pushf
popl
pushf
call
jmp
pushf
jmp
jmp
mov
pusha
movl
pushf
pushl
lea
jmp
pusha
xchg
call
pushf
pushl
pushl
popl
pusha
push
push
pushl
lea
jmp
pushf
mov
push
pushf
popl
movzbl
movsbw
movsbw
mov
mov
pusha
pushl
pushl
popl
movzbw
pushf
bswap
jmp
sub
push
call
call
mov
mov
jmp
pusha
pusha
mov
pushf
mov
push
mov
pushf
mov
pushf
call
mov
pushf
popl
push
pushf
call
mov
rcr
and
neg
dec
pusha
not
mov
pushl
pop
inc
cmc
rol
shrd
and
shld
cmp
call
pushl
pushl
call
mov
pusha
jmp
mov
cbtw
push
cwtl
stc
push
sub
jmp
std
xadd
das
mov
clc
aas
pop
bswap
rcl
bsr
lahf
pop
sbb
pop
jmp
movsbl
mov
call
mov
movb
lea
cpuid
stc
bt
bt
call
movb
mov
call
mov
lea
jbe
push
movb
pushf
popl
push
call
lea
ja
push
mov
push
pushl
push
pushf
lea
jmp
call
call
bswap
mov
pushf
popl
jmp
pushf
mov
pushl
mov
pushf
lea
jge
push
pusha
mov
mov
mov
lea
pushf
pushf
push
pushf
popl
mov
mov
movsbw
push
jmp
jmp
test
push
bt
sub
clc
shl
pusha
push
pushf
pushf
mov
lea
ja
pushf
pusha
pushf
popl
call
cmp
add
pusha
jmp
mov
pushf
pushl
call
stc
xchg
cmc
cmp
push
jmp
pushf
popl
pushl
pushl
popl
pushl
pusha
push
movb
lea
jmp
pushf
xchg
pushf
not
pop
mov
movzbw
jmp
mov
push
mov
mov
xchg
bswap
call
mov
pusha
push
lea
jmp
jmp
pushf
pushf
popl
lea
jns
pusha
pushl
popl
pushf
push
lea
jmp
add
cmc
mov
jmp
pushl
clc
bt
sub
test
cmp
test
bt
and
push
push
mov
call
mov
pushf
pushf
push
pushl
mov
call
jmp
pushf
jmp
pusha
mov
mov
pusha
push
push
xchg
mov
push
pop
pop
pushf
popl
jmp
pushf
pushl
popl
pushf
movb
mov
lea
jmp
call
call
movb
rep
call
xchg
not
pushf
jmp
movb
mov
call
