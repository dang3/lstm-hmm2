dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
sub
cmp
mov
ss
js
js
dec
frstor
xor
punpcklwd
xor
pusha
fistl
andb
xor
bound
jle
add
lods
xchg
inc
jb
sub
faddl
lcall
in
nop
sbb
xor
aam
testb
cmp
sub
sbb
out
inc
fucomp
add
xlat
fldl
mov
add
cmp
sahf
dec
add
sub
jnp
or
jnp
ret
dec
push
ja
scas
pop
jp
inc
cmp
mov
mov
adc
scas
and
arpl
movsb
sbb
mov
lahf
add
xchg
fcoml
fildll
movsl
inc
sahf
stos
fisttpll
mov
dec
and
out
movsb
pop
sub
imul
cmp
dec
pop
scas
cmp
gs
mov
cmpsb
dec
fcoms
mov
scas
cmp
cmp
lock
nop
js
sbb
out
ja
lcall
lahf
cmp
xchg
jg
movsb
out
lods
divl
jp
xor
sub
sub
pusha
data16
mov
in
jbe
pop
stc
test
dec
jb
es
dec
in
test
or
int
push
push
inc
sahf
out
sub
cmpsb
movsb
inc
into
pop
xchg
push
lods
dec
mov
gs
push
adcb
sahf
pushf
out
adc
pushf
adc
inc
pop
in
fiaddl
push
inc
arpl
mov
fldt
adc
add
jno
cmp
sub
cmp
inc
ret
push
lcall
pop
stos
bts
cmc
mov
mov
daa
sarl
hlt
xchg
sbb
mov
roll
daa
jbe
iret
neg
sbb
mov
ds
hlt
leave
fisubrs
mov
gs
mov
sbbb
mov
dec
in
and
cltd
adc
data16
scas
sbb
out
clc
sbb
test
shrl
daa
les
iret
adc
mov
and
dec
push
jle
flds
call
inc
sub
imul
cmc
push
sub
add
jecxz
push
mov
ja
jl
push
and
pushf
adc
jnp
sub
dec
mov
aad
jecxz
shlb
ja
lock
addl
fimuls
mov
jne
push
fcoml
push
xor
enter
dec
pop
push
loopne
push
inc
cs
jbe
in
lds
rol
fdiv
call
push
jge
and
popf
je
cwtl
add
adc
or
out
inc
cmpl
push
testb
aaa
jae
rcrb
shrl
dec
shl
mov
push
push
xchg
and
cmp
pop
pop
and
lcall
aas
xchg
nop
xor
stos
pop
lahf
or
and
jne
dec
dec
test
adc
xchg
mov
call
and
enter
cmpb
sub
mov
xor
or
dec
mov
sti
mov
outsb
mov
add
repnz
cmp
jb
cmp
mov
add
dec
dec
push
dec
call
and
out
xchg
shl
add
jb
sbb
adc
daa
or
sbb
sbb
jecxz
dec
test
inc
add
out
mov
sbb
aaa
mov
call
mov
dec
movsb
cmpl
call
adc
insl
xchg
pop
ds
addr16
or
pop
fwait
adc
test
sbb
or
dec
pushf
mov
mov
mov
push
out
pop
adc
mov
push
into
jg
sub
or
dec
or
neg
and
jg
xor
das
and
cld
rdpmc
addl
push
or
push
push
int
rclb
mov
cmp
mov
ret
lods
cltd
dec
mov
add
movsl
cltd
add
dec
mov
jnp
push
aad
jb
shrb
std
mov
push
or
shll
mov
push
into
cmpsl
mov
divb
mov
xchg
outsb
pavgw
and
sbb
nop
xor
adc
cld
mov
xlat
call
out
pop
jp
mov
cmp
sahf
mov
clc
cmp
repz
das
xorl
inc
mov
pop
jbe
mov
out
gs
xor
xor
fld
jl
mov
lods
jae
ja
or
and
inc
dec
add
push
std
adc
or
fdivr
cmp
out
loop,pn
cmp
in
inc
nop
clc
nop
stc
cmp
xlat
cltd
sbb
fs
loop
inc
shrl
add
xor
pop
lea
fwait
and
movd
xchg
shl
mov
fdivl
and
pop
mov
dec
sbb
add
xlat
push
pop
popa
lcall
addl
sahf
adc
call
add
cmp
sbb
aam
daa
mov
or
jle
xchg
push
std
push
push
in
ljmp
pop
jb
rolb
push
aas
cwtl
cltd
sbbb
inc
int3
pop
cli
pop
data16
xchg
data16
jno
sub
jmp
inc
stos
insl
out
loope
fs
insl
push
inc
in
push
daa
subb
leave
jae
shrl
inc
jnp
lea
pop
scas
pop
enter
mov
lock
imull
mov
and
add
mov
xor
jle
into
int
lock
jge
nop
out
pop
cmp
push
xchg
jl
sbb
or
dec
push
repz
jg
dec
adcb
lret
lret
pop
ss
mov
sub
test
in
shlb
xor
cmp
scas
ss
or
hlt
imul
repnz
daa
out
lahf
cmpsl
negb
popf
xchg
mov
insl
xor
out
jns
sub
loope
pop
xchg
pop
fdivrs
cs
and
push
ret
mov
xlat
adc
int3
jno
mov
dec
stos
jle
jns
ljmp
outsl
jle
jl
ror
add
xchg
xchg
jge
std
mov
inc
cmpl
hlt
int3
adc
call
add
push
push
out
cmp
inc
mov
mov
scas
rorb
in
decl
inc
mov
pop
add
push
mov
jo
mov
push
stc
lea
sub
test
inc
aad
add
pop
push
mov
sub
mov
or
inc
fidivrl
pop
mov
mov
dec
mov
push
pop
jle
mov
mov
pop
fidivs
in
lcall
enter
jl
in
jnp
lcall
in
sbb
sub
rolb
ret
call
nop
hlt
shll
fbstp
xor
int3
popa
dec
test
adc
pop
out
sbb
pop
mov
jge
fsts
mov
iret
popf
sub
inc
xchg
sub
and
or
sub
lret
push
mov
std
iret
xor
or
fimull
mov
inc
or
pop
imul
shll
mov
dec
xchg
test
and
test
enter
fimuls
call
lds
mov
repz
pop
pushf
aam
inc
mov
mov
push
sbb
out
lds
repnz
push
adc
mov
xor
sub
cmp
adc
fsubl
and
iret
call
in
xor
out
inc
stos
and
cmp
cltd
and
add
xchg
stos
outsb
pop
out
push
jge
scas
mov
mov
loope
dec
cmp
pop
fistps
add
pushf
movsb
arpl
push
arpl
aam
ret
dec
jmp
jg
sub
sub
into
mov
sarl
lahf
mov
sbb
xor
popf
xor
jmp
jae
mov
test
in
xor
add
test
or
sbb
in
imul
inc
repz
add
inc
and
pop
xchg
mov
push
mov
aas
ret
jne
pop
mov
and
adc
lods
rcll
das
shll
mov
adc
dec
jp
mov
mov
cmp
divb
fdivp
repnz
inc
mov
pusha
mov
xchg
fsubl
ret
repz
mov
jp
lock
inc
mov
call
push
and
xor
pop
dec
movsl
out
lea
jae
adc
push
xchg
dec
cli
test
enter
or
cmp
ds
jo
lahf
add
add
movl
mov
and
sub
lret
cmp
dec
xchg
mov
fldenv
stc
sub
adc
mov
daa
push
rclb
add
mov
fstps
notl
xchg
xor
int3
shll
sbb
xchg
in
cltd
not
cmc
add
adc
fcmove
subb
lods
cmc
sbb
xchg
xchg
lds
ret
jmp
mov
mov
and
adc
adc
cld
test
das
fnstenv
int
inc
push
or
orl
add
mov
int3
std
push
jb
inc
push
jle
inc
loope
repz
mov
test
and
mov
xchg
cli
pop
or
stos
movsb
out
sbb
dec
das
add
push
mov
popa
adc
andb
mov
hlt
sbb
or
pop
lods
std
in
mov
mov
dec
std
mov
mov
imul
popa
aad
arpl
push
dec
ret
mov
cmp
xchg
dec
mov
inc
mov
movsl
sbb
cld
mov
fcomps
mov
push
ss
mov
pop
ficomps
jns
lods
inc
dec
push
test
add
mov
inc
in
xor
add
inc
xchg
cmp
and
jl
out
pusha
mov
loopne
sbb
xlat
add
push
pop
add
add
insl
in
lods
lahf
jmp
push
loop
add
lea
inc
roll
mov
adc
sbb
xchg
or
repz
jns
daa
sti
cmp
je
loopne
xchg
mov
mov
repz
fnstsw
mov
push
dec
dec
sub
aad
sbb
ja
xchg
sub
clc
sub
fisubrl
mov
fnstenv
imul
ja
sub
sahf
mov
push
data16
leave
jge
fwait
cmp
cltd
std
dec
push
flds
fwait
sbb
je
testb
test
jge
outsb
mov
jae
mov
mov
movsl
xchg
xor
rorl
nop
cmp
sub
sti
mov
jl
push
mov
mov
outsl
fisttpll
stos
enter
sbbl
jb
adc
cmc
sub
sbb
test
rcr
xchg
shrl
jns
cmp
scas
aad
dec
push
xchg
xchg
movsb
dec
cmpsb
cmpl
les
mov
rcrb
push
and
xchg
ficoms
arpl
shlb
push
test
movsl
cltd
pop
mov
xor
mov
sbb
jg
dec
adc
sbb
mulb
enter
xor
es
imul
mov
dec
shl
aas
pop
iret
or
cmp
push
cmpsb
rcrl
test
pop
mov
push
cmpsl
xchg
jbe
push
pop
mov
add
sbb
ret
mov
nop
mov
add
cmpsl
out
movsb
call
and
sub
movb
sbb
fcmovnb
jbe
negl
outsb
loopne
loope
outsl
mov
and
jb
lret
adc
popf
movsb
loope
mov
adc
fs
adc
ds
stc
in
xchg
dec
sbb
fcompl
ja
sub
insb
and
mov
or
fwait
mov
pop
faddl
mov
loope
push
mov
ja
inc
push
call
add
lods
cmc
jmp
ljmp
mov
loop
aam
movsl
fidivrs
mov
aam
or
mov
shr
dec
cwtl
outsl
test
icebp
pop
mov
mov
int3
xor
mov
or
jnp
push
dec
push
hlt
mov
sub
sbb
sub
adc
dec
push
aas
push
out
sub
in
rorb
lahf
add
jle
jge
addb
int3
push
adc
mov
fwait
pop
add
pushf
mov
mov
push
in
xchg
push
mov
repnz
sbb
data16
or
pop
scas
lds
sbb
push
rcr
loop
sahf
adc
inc
mov
jecxz
push
push
pushf
cmpsl
mov
xchg
xchg
pop
jno
mov
xchg
insl
lods
rcll
xor
movsl
gs
pop
fdivl
int
sub
cli
popf
sbb
mov
or
or
nop
jne
mov
jnp
scas
jb
arpl
cmpsl
data16
jbe
cmp
mov
cli
mov
jne
pop
mov
cltd
sub
xor
je
mov
scas
xchg
cmc
stos
or
mov
out
cmp
cli
jbe
nop
popf
cmp
cmp
mov
mov
adc
arpl
out
cmp
fcmovnu
add
mov
test
lock
cmp
sub
add
add
dec
dec
push
xor
sub
cmc
push
lret
ljmp
inc
dec
adc
fdivp
fstps
ljmp
pusha
ss
push
cmpsb
hlt
xchg
pop
jo
and
std
add
popa
jmp
adc
sahf
add
aam
mov
sahf
or
pop
div
add
scas
div
fbld
das
pop
out
lds
mov
mov
add
cmp
pop
pop
das
xor
xor
mov
dec
inc
mov
cmp
ljmp
dec
iret
pop
inc
or
or
xchg
fs
sbb
loop
mov
xchg
mov
dec
xchg
mov
jbe
and
mov
sub
inc
out
int3
adc
sub
inc
frstor
inc
pop
mov
sbb
sarb
lret
imul
cli
sbb
negb
imul
pop
mov
pop
ja
jb
add
lea
jmp
cs
add
movl
outsb
movb
popf
and
mov
call
loop
clc
arpl
inc
adc
lret
add
xchg
xchg
xchg
shrl
pop
push
xor
push
ret
das
cmp
mov
mov
es
and
daa
sbb
cmp
mov
outsl
and
ss
pop
cmc
and
inc
or
negb
mov
mov
popa
cmpsl
cmp
stos
cmp
pop
jg
inc
mov
cltd
mov
mov
xor
shll
or
int3
negb
test
sbb
pushf
xor
push
sahf
fidivrs
push
adc
jg
and
int3
mov
inc
daa
lahf
loopne
add
dec
mov
imul
inc
stos
sub
das
es
cmp
mov
add
ljmp
fisubs
jno
pusha
jge
pop
fisubrl
or
cmp
in
xor
or
scas
sub
push
or
jnp
pop
xor
in
pop
in
xchg
mov
mov
and
pop
das
clc
xor
sub
es
xchg
add
imul
cmpsb
and
cmpsl
movsb
fdivr
lret
movsb
repnz
imul
sub
clc
test
repz
jg
cmp
popl
push
dec
outsb
gs
mov
xchg
bound
iret
imul
adc
fwait
leave
pop
addl
movsl
call
clc
stos
das
add
dec
or
sub
add
daa
loopne
mov
mov
push
xor
xor
lods
mov
orl
push
inc
out
jle
cli
mov
jnp
enter
outsb
xor
add
pop
ret
ja
cwtl
test
jle
hlt
xor
out
push
xor
das
jmp
out
fmuls
adc
jge
test
dec
ret
jmp
mov
mov
pop
mov
or
pop
jg
jmp
mov
sti
adc
jns
aam
xchg
mov
mov
mov
sub
leave
cld
push
adc
sub
xor
je
xor
jno
dec
imul
cld
push
jl
mov
out
mov
pop
dec
mov
jle
cmp
cs
xchg
dec
mov
mov
pusha
xchg
push
ljmp
hlt
cmpsb
enter
mov
push
jmp
filds
xor
test
mov
daa
cmp
sub
sarw
dec
repz
add
in
dec
int
xchg
daa
push
mov
cmp
xchg
fs
ss
xlat
xor
movsb
jno
jp
dec
dec
repz
test
shl
mov
loop
jae
dec
into
push
loopne
stos
sub
stos
ja
xor
jne
sbbl
add
arpl
pushf
inc
adc
das
popa
mov
js
lds
loop
mov
movsl
inc
push
push
jge
xchg
dec
or
shr
scas
leave
add
aas
adcb
xor
jecxz
fidivl
and
and
fistpll
out
cld
fsubl
mul
sti
inc
lea
dec
pop
sub
arpl
daa
clc
xchg
or
jmp
pop
scas
lods
ret
pushw
pop
imul
sbb
mov
xor
mov
dec
cmpl
bsf
mov
ds
imul
and
xchg
jecxz
xlat
xor
mov
std
jb
dec
movsb
mov
cmp
fstl
imul
push
fldcw
adc
add
scas
mov
sub
insl
in
xor
addr16
clc
add
stc
in
jmp
xor
mov
pop
scas
or
jl
and
mov
arpl
sub
cmp
jecxz
sub
arpl
sahf
xor
imul
add
scas
out
mov
pop
iret
push
fadds
cmp
dec
add
pop
loope
adc
int3
daa
mov
mov
xor
js
xchg
lods
sbb
mov
into
mov
fidivrl
popf
dec
cmp
inc
xor
fnsetpm(287
mov
mov
jmp
push
fcomps
femms
mov
jno
add
pusha
sar
jp
xchg
cmp
mov
or
shrl
arpl
sub
inc
ja
pop
xor
lock
repz
jl
and
mov
iret
stos
push
adc
jno
mov
cwtl
xor
les
dec
lret
push
dec
shll
stos
push
mov
stos
jge
sti
adc
cmp
inc
nop
cli
jne
outsl
daa
cmp
dec
jo
daa
inc
pop
mov
lahf
cmp
mov
nop
stos
sub
pusha
out
clc
add
cmp
nop
adc
sbb
rol
mov
xchg
mov
test
shrb
sub
ds
dec
pop
lods
cmpsb
xor
mov
adc
lret
es
outsb
jbe
inc
gs
gs
add
push
sbb
sbb
dec
test
mov
imul
lods
jmp
insl
jns
ret
jmp
outsl
or
inc
das
adc
das
repz
jecxz
xchg
mov
xchg
and
push
out
pop
cmp
popf
push
pop
ds
cltd
popf
jno
mov
add
jle
mov
iret
inc
into
adc
stos
shrl
pop
push
inc
and
dec
mov
sbb
dec
pop
arpl
jmp
cmp
and
mov
imul
cli
and
enter
cmp
xor
push
in
xchg
or
push
cmpsl
xchg
int
mov
icebp
mov
inc
cwtl
lahf
call
aas
xor
mov
sbb
imull
jl
xor
push
outsb
pop
or
cld
mov
addr16
call
lcall
das
push
fstpt
popf
sub
iret
gs
push
fistl
mov
popa
or
or
test
scas
pop
icebp
pusha
mov
cmp
into
jg
adcb
test
dec
lcall
add
mov
pop
add
loope
movb
push
cli
jb
addr16
pushl
stos
in
jg
mov
popf
push
je
jl
pushl
ljmp
out
insl
call
mov
mov
xchg
mov
dec
mov
mov
adc
ds
lret
cmp
test
ficoml
xchg
scas
int3
or
outsb
nop
fsub
mov
sbb
leave
imul
push
inc
inc
pushf
call
mov
inc
jo
fucomp
out
xchg
sti
fisubrl
fistpll
and
lcall
ja
sub
test
xlat
pusha
dec
rclb
ds
mov
fcmove
xchg
or
sti
mov
insl
mov
hlt
cmp
insb
mov
scas
ficoms
dec
faddl
add
fidivrl
insl
push
nop
dec
sub
scas
ret
sbb
dec
sbb
jnp
int
push
adc
daa
test
xchg
push
fcmovb
jmp
jo
pop
aaa
push
ret
pushf
xor
jge
cltd
out
mov
fmull
xor
mov
fiaddl
inc
xor
xor
mov
adc
mov
in
std
insl
mov
popf
pusha
cwtl
std
dec
lahf
add
aad
pop
ss
inc
inc
in
pop
aaa
and
pop
mov
adc
or
sub
test
cld
cs
push
pop
dec
and
or
pop
out
pop
mov
lcall
es
push
pop
int3
scas
pop
push
inc
xchg
pop
add
dec
xchg
mov
in
xchg
mov
loop
mov
push
push
or
push
sub
jl
adc
js
mov
icebp
leave
mov
dec
fcmovne
pop
xchg
jo
push
enter
lods
jge
nop
fwait
dec
cs
scas
add
add
lods
dec
xor
into
arpl
sub
jle,pt
mov
stc
movsb
jae
ja
sar
fcos
cld
in
ljmp
fs
and
cmp
fmuls
stos
bnd
sbb
push
je
frstor
rcll
in
pop
lret
stc
sbb
inc
jl
jl
xor
pop
push
and
shl
dec
or
mov
sub
push
je
subl
lock
ret
pusha
sahf
scas
lock
push
and
aad
sub
popa
rclb
fsubs
xor
shl
roll
pushf
ss
in
jo
mov
pop
or
or
and
in
pusha
je
sbb
mov
push
push
das
test
in
inc
rcll
and
sub
hlt
sub
xor
xor
je
lea
mov
mov
ret
shrl
xor
movsb
call
pop
bswap
adc
mov
fmull
dec
in
iret
mov
cmp
dec
mov
ja
mov
cmp
out
cmpsb
mov
cmpsb
jle
sub
adc
mov
adc
jae
imul
xor
icebp
inc
lret
fdivrl
inc
or
in
sub
pop
data16
inc
xor
test
push
sbb
xchg
in
mov
loopne
rclb
pop
jae
inc
jnp
push
jecxz
in
test
xchg
mov
movsb
push
mov
fsubrl
int3
scas
icebp
cmp
test
add
sti
lock
lcall
sbb
andb
pavgw
pop
jno
mov
aam
push
inc
xlat
sbb
sbb
and
fisttps
dec
jno
sarb
cli
popf
loope
mov
cmpsb
outsb
xchg
add
scas
movsl
imul
cmp
rcrb
mov
daa
dec
xchg
lods
sub
push
or
or
mov
mov
xor
jmp
cmp
cltd
dec
push
pop
mov
mov
adc
lret
insb
dec
test
mov
adc
in
cmp
adc
jg
xchg
fwait
push
pop
stos
mov
arpl
adc
mov
pushf
into
insb
rorb
mov
outsb
cmpsl
ffreep
pop
fwait
cmc
push
in
mulb
mov
int3
xchg
rol
and
test
aas
mov
push
addl
nop
jg
cli
add
mov
cmpsl
pusha
repz
pusha
mov
scas
cmp
sbb
mov
sbb
push
sub
int
sti
test
dec
pop
mov
les
popf
mov
clc
mov
pushf
cmp
test
ljmp
or
xchg
movsl
push
in
test
sbb
push
xchg
rcrb
call
inc
repz
pop
test
popf
mov
lods
outsb
lcall
in
dec
jb
pushf
movsl
lock
inc
fidivrl
jno
out
inc
mov
aas
in
add
fisubl
sarl
mov
fisttps
imul
jg
inc
out
mov
push
lock
std
xor
jmp
cmpsb
xchg
pop
cwtl
sub
jbe
lahf
ss
cmp
dec
loope
inc
mov
mov
xchg
push
cld
or
xlat
cmc
push
sbb
ret
dec
icebp
ljmp
test
out
insb
mov
lea
sub
push
pop
pop
stc
fidivs
xchg
shlb
repnz
repnz
jge
or
mov
mov
in
jp
mov
int3
dec
cmpsl
push
push
sub
pop
add
fcmovnu
nop
or
cmp
fwait
daa
mov
xchg
cld
popa
jbe
stos
cmp
ret
ljmp
push
ljmp
bound
dec
addr16
mov
inc
mov
or
movsl
push
ds
mov
sub
loop
les
or
mov
cmp
fs
adc
fwait
js
insb
lret
push
jnp
imul
in
push
fistpl
iret
sub
out
jns
repz
stc
repz
insb
fwait
mov
shl
je
fs
fistps
pop
sbb
add
roll
inc
jb
jne
pop
sahf
push
push
popa
cltd
inc
xchg
sarb
mov
mov
inc
js
sbb
sbb
cmpsl
int
push
push
adc
fwait
cmp
xchg
iret
mov
daa
or
dec
arpl
push
loopne
scas
iret
xchg
lcall
mov
sbb
sbb
push
aas
cmpsb
jo
mov
inc
xchg
test
sar
push
jmp
fwait
jne
sbb
divl
sahf
mov
adc
xor
movsl
push
mov
out
dec
out
sti
ja
xchg
in
mov
inc
or
and
xor
add
cmp
mov
je
adc
push
test
mov
cwtl
fsub
mov
arpl
cltd
aam
inc
jns
mov
xlat
fdivrl
adc
inc
xchg
mov
xorb
pop
sbbl
inc
mov
mov
add
xchg
shlb
cmpb
mov
mov
fldcw
cs
adc
adc
xchg
push
mov
orl
sbb
stos
dec
mov
sbb
mov
mov
movsb
rcrl
lds
push
imul
lret
dec
sti
sti
push
testl
sbb
repnz
pop
inc
loopne
mov
push
push
lcall
xlat
xchg
cld
push
xchg
test
and
xchg
mov
ret
pop
sub
fst
dec
gs
sarl
cltd
push
or
mov
jb
mov
call
jbe
push
cmp
mov
cmpsb
cmpsl
jno
dec
mov
push
sbb
jp,pt
or
cmp
stos
stos
or
or
dec
je
pop
popf
shl
pop
sub
shll
lahf
mov
scas
mov
addr16
test
enter
subl
je
lods
cmpsb
push
push
int3
push
push
roll
mov
cld
stos
lods
ret
inc
dec
daa
data16
xchg
inc
addr16
cmpl
aaa
cmp
add
popa
pop
aam
push
push
adc
rcll
popf
cmp
aad
les
dec
jno
sub
inc
fisttps
aam
stc
lcall
int
fmuls
jae
xchg
xlat
cs
mov
stc
andb
fs
movsb
cs
bts
or
push
aad
insl
out
cltd
xor
push
in
mov
cmpsl
repz
mov
popl
rcll
cltd
shlb
nop
mov
and
xchg
mov
xchg
adc
out
test
mov
adc
xchg
dec
xor
test
dec
shlb
mov
outsb
fwait
stc
add
cmp
add
xchg
div
test
pop
popf
test
jae
pop
dec
adc
rcl
cmc
sbb
mov
jle
fldcw
xor
xor
pop
mov
pop
cmc
push
pop
out
int3
imul
and
adc
test
sub
into
mov
adc
pop
jb
adc
loopne
push
jbe
push
lahf
fsts
mov
xor
pop
mov
inc
hlt
mov
clc
lahf
call
or
outsl
sub
pop
cwtl
ja
addr16
pusha
dec
inc
xor
mov
push
js
out
mov
clc
adc
jne
cmp
icebp
shl
push
mov
push
mov
ret
sti
mov
pop
repz
mov
in
or
imul
inc
outsb
js
loopne
into
push
out
jbe
adc
push
push
sub
loopne
out
nop
add
in
stos
mov
out
int3
jo
sarb
and
push
std
jae
and
jnp
mov
sbb
adc
sub
fdivl
hlt
xlat
fwait
and
add
lret
sbbb
fmulp
mov
repnz
lods
sbb
fidivrs
insl
sbb
mov
pop
or
sbb
mov
push
iret
aam
jne
mov
pop
dec
mov
sbb
and
lret
xor
call
xor
sbb
rclb
or
rol
cwtl
inc
cld
add
stc
adc
xchg
lods
inc
inc
cmp
add
mov
mov
jecxz
ljmp
xchg
inc
cmp
jb
xor
jle
subl
sbb
call
addr16
xor
sahf
sahf
mov
adc
cmp
push
mov
mov
and
xchg
xchg
xchg
pop
fmuls
xchg
dec
filds
fdivrl
push
push
cmpb
jge
mov
data16
call
loop
in
bound
pop
aad
lods
pop
les
ficomps
jmp
dec
sub
xor
cmp
hlt
jmp
jno
mov
cmp
mov
mov
add
fbld
mov
flds
xor
mov
push
push
mov
and
mov
push
mov
mov
andl
dec
jp
xchg
ret
and
xor
adc
dec
call
mov
jle
xor
inc
jecxz
jge
mov
add
mov
adc
cs
xor
repnz
cli
sti
jge
pop
cmp
ret
mov
sub
push
les
lret
test
jae
and
push
outsl
mov
aas
scas
pop
icebp
stc
cmp
outsl
fwait
push
arpl
in
xchg
push
mov
xor
mov
rol
in
les
mov
into
lea
aad
cmc
cmp
mov
push
popa
pop
les
lcall
mov
iret
and
stc
stos
xor
sbb
mov
pop
or
out
sub
cmpsl
and
dec
dec
test
iret
jb
jo
add
mov
sub
fstps
lods
addr16
sub
icebp
jp
popf
push
test
jno
scas
hlt
ret
mov
in
je
sbb
ljmp
cs
push
mov
enter
adc
sbb
iret
ss
and
lret
pushf
pop
xor
xchg
lds
incb
add
out
je
aaa
push
jle
loop
inc
jno
pop
or
and
push
jecxz
push
mov
scas
dec
or
fimull
or
adc
cmpsl
pop
adcb
clc
mov
mov
lret
sub
xor
and
pop
xchg
out
cmp
or
inc
ret
pop
mov
or
add
sub
pop
enter
sbb
test
in
xchg
filds
imul
ror
in
xor
rcrl
sbb
fwait
jb
push
pop
jb
imul
dec
mov
cmp
mov
mov
sbbl
mov
xchg
in
repnz
test
mov
cmpsb
lret
jo
rcl
or
loopne
gs
xchg
jbe
inc
jo
jae
mov
maxps
loope
xchg
loopne
pop
inc
std
inc
das
je
test
es
les
enter
hlt
jbe
lds
adcl
xor
mov
cmc
mov
stos
shl
out
loope
fchs
jecxz
mov
loope
sbb
push
push
fwait
popa
iret
ficomps
xor
jns
fwait
mov
jno
xchg
mov
test
mov
jmp
xchg
or
xbegin
sub
mov
sbb
sahf
mov
jae
addr16
cmpl
fst
add
ljmp
mov
xchg
dec
call
inc
or
pop
jno
mov
out
sbb
bnd
mov
cs
cmpsb
rcr
inc
in
ds
adc
adc
fsincos
jp
push
cld
sbb
lret
repz
jle
repz
mov
lahf
cmpsl
mov
xchg
xchg
shlb
jge
jg
sub
mov
mov
push
xor
insb
fdivrs
test
inc
mov
ret
lea
iret
out
and
fcoml
pop
sub
xor
jmp
lahf
lods
xchg
data16
or
cwtl
lcall
jae
int3
lret
out
pop
pop
mov
fwait
push
outsl
pop
mov
mov
pop
inc
mov
jmp
stos
cmc
in
out
sub
push
or
lds
into
bound
mov
into
push
std
pusha
es
shll
popa
mov
mov
das
test
add
mov
inc
pause
adc
ret
xchg
daa
std
popa
test
or
xchg
cld
mov
mov
test
data16
in
les
xchg
pop
lret
rcr
cwtl
push
or
lods
and
jg
dec
xor
fmul
pop
mov
push
stos
cmp
roll
xor
out
iret
ret
push
inc
das
sub
jns
outsl
xor
lcall
addr16
test
dec
fcmovnu
adc
int
leave
xchg
pop
sti
mov
xchg
mov
lcall
lret
sbb
add
push
push
popf
cld
add
in
xor
jmp
in
dec
dec
loopne
pushf
out
xlat
insb
test
cmp
lea
into
xor
jno
xor
arpl
cmp
push
les
imul
inc
notb
cltd
mov
cltd
arpl
ss
pop
inc
pop
dec
xchg
jnp
sbb
shrl
repnz
fs
test
lock
pop
mov
mov
push
insb
dec
fildll
sbb
ret
sbb
repnz
and
testb
cltd
cs
sbb
mull
lret
adc
fisubrl
mov
adc
cmpsb
mov
xor
adc
sbb
xchg
lods
inc
sbb
fisttpl
xor
nop
mov
roll
mov
jo
dec
nop
push
cmp
setnp
in
cwtl
sub
cmp
xchg
negl
add
and
ret
sub
jmp
pop
jo
xor
cs
pusha
lea
ss
jge
mov
sub
xchg
push
and
and
push
ds
mov
mov
stos
mov
sbb
enter
inc
in
xor
dec
push
test
iret
imul
jae
ret
adc
mov
lock
xor
hlt
cmp
jg
jp
jmp
imul
dec
or
dec
adcb
fs
jg
hlt
jb
ja
and
imulb
mov
loop
dec
jbe
xchg
pop
xchg
in
sbb
mov
mov
add
pop
sbb
cmp
ljmp
lock
and
addl
out
pop
imul
and
mov
fs
xorl
cmpsb
inc
cwtl
cmpsl
adc
xlat
jp
jne
js
stos
call
pop
stos
je
in
jno
fsubl
push
adc
and
jo
icebp
mov
add
add
loop
test
fdivrs
mov
fldenv
mov
ret
and
stc
pop
push
inc
pop
scas
jbe
mov
daa
mov
rclb
mov
jmp
jmp
test
push
ljmp
sub
mov
rcll
pop
adc
inc
inc
fnstsw
icebp
addb
lods
lock
sub
pop
rorb
outsb
clc
inc
out
and
mov
xor
in
fnstsw
into
mov
xchg
sbb
xor
aad
nopl
xor
stos
ss
sarb
sub
push
stos
outsb
add
mov
pop
mov
and
pop
je
or
aad
jge
mov
mov
mov
pop
shll
out
push
mov
sahf
jmp
int
test
aaa
bound
pop
pushf
add
int
add
sbb
pop
leave
jecxz
add
rolb
mov
shll
xlat
sub
insl
adc
nop
test
cs
mov
cmc
mov
push
jo
sahf
cmpsl
rcll
lds
dec
jns
cli
insl
add
mov
test
jb
notl
mov
mov
push
jp
push
push
jl
hlt
mov
jl
pop
add
int3
cmpsb
xchg
cmc
mov
cmpsl
and
push
dec
push
imul
frstor
xchg
push
imul
mov
cmpsb
xchg
cmc
call
lret
loope
push
ret
jmp
fisubrl
das
int
xor
movsl
das
hlt
aaa
sub
pop
push
rcrl
sub
jbe
ja
lods
and
imul
jae
insb
popl
lods
cwtl
sbb
shrl
add
add
movsl
ja
pop
or
insl
ja
jae
push
jmp
xchg
fldcw
das
jge
rcrb
cld
loop
lea
mov
xlat
mov
mov
pop
mov
sbb
mov
xor
jns
fidivrl
test
movsb
xchg
cs
lods
jae
rcrl
insb
movntq
push
pop
inc
mov
jbe,pn
lret
and
std
add
inc
ss
shll
addr16
les
pop
movaps
sub
sub
xor
mov
ret
jge
fcomip
pop
nop
sarb
rep
popf
pop
leave
sbb
cmpb
mov
test
sbb
mov
out
je
xchg
scas
push
outsb
testl
shll
jle
mov
cmp
add
lcall
cmp
cld
cmc
in
jl
out
pop
lock
mov
iret
xchg
cmpl
mov
enter
iret
xor
fdivl
lret
scas
sub
xchg
jge
mov
or
mov
fcmovnb
lds
shl
insl
xchg
jg
das
lods
sbb
xchg
call
dec
test
push
add
aam
inc
enter
pop
and
popf
add
mov
dec
mov
pushf
daa
mov
add
and
cli
sbb
inc
idiv
xchg
movsb
outsl
lret
dec
cmp
mov
inc
push
insl
pusha
aaa
push
lods
int
outsl
imul
mov
mov
jb
daa
xchg
pop
push
vprotq
sti
test
xor
ret
ror
sbb
mov
jle
cmp
mov
inc
xor
aad
mov
imul
dec
push
daa
fists
sbb
shrl
daa
nop
cmp
enter
adc
test
iret
es
mov
dec
outsb
adc
cld
push
add
cld
xchg
sbb
sub
jns
push
sahf
shl
movsb
pop
lret
pop
shl
sbb
out
jae
mov
push
jae
or
test
repnz
loope
xchg
loop
push
test
and
sbb
and
shl
pop
shl
jo
repz
pop
shrb
ret
mov
push
test
sbb
cmpsb
push
xor
lret
hlt
clc
inc
lods
adc
xor
daa
cmp
mov
sbb
or
add
ja
loope
pop
pop
mov
lea
addb
mov
mov
lret
addr16
or
lds
stc
mov
insl
dec
dec
and
jp
int
lcall
add
aas
es
mov
cli
inc
das
mov
mov
xchg
mov
mov
scas
push
xor
push
sti
cmpsb
iret
inc
std
mov
xor
scas
jle
test
popa
mov
pop
fsubp
sub
dec
fdiv
leave
inc
cld
jnp
cmp
out
inc
mov
dec
xchg
ljmp
loop
mov
and
out
sub
pop
sbbb
jae
jb
rorb
inc
sub
fidivrl
ror
push
into
dec
sub
sbb
mov
cmp
dec
jl
into
in
sbb
push
std
inc
ret
int3
int3
sbb
mov
ret
mov
int3
cli
mov
in
xchg
inc
dec
pop
push
mov
sbb
pop
inc
or
cmpsb
sub
cmc
out
cmp
push
sbb
pop
test
and
jg
mov
or
xor
das
sbb
inc
pop
push
imul
and
fs
inc
xchg
jl
fisubl
cwtl
fcompl
xor
and
cmp
push
ret
mov
mov
out
js
icebp
mov
dec
out
aas
mov
nop
dec
jne
xchg
push
inc
out
inc
xor
lds
push
adc
mov
subb
mov
push
test
pop
push
push
cli
adc
inc
xchg
jne
cltd
imul
jle
dec
xor
and
dec
xlat
dec
mov
inc
push
notb
pop
data16
inc
mov
fbstp
lods
or
jl
rorb
jl
iret
pop
or
pop
out
mov
insl
pop
sub
sub
fwait
test
sub
pop
push
leave
or
or
pop
push
int
sbb
and
sti
nop
or
and
popa
repz
es
paddusw
cltd
iret
xor
add
shll
outsb
cmp
or
inc
cmpsb
pop
jecxz
cmpsl
add
pushl
fildl
push
jmp
rcrb
cmp
popa
cmp
and
pushf
lods
cmc
inc
inc
mov
or
loopne
dec
jmp
inc
nop
sbb
jmp
insb
scas
test
xlat
mov
outsl
cli
lea
xor
pop
aam
or
inc
cmpsb
mov
rcll
aam
mov
mov
adc
fcoms
orb
ljmp
stos
pop
sar
addr16
sub
push
fildll
dec
rcl
inc
jmp
adc
int3
rcl
xor
jne
or
add
faddp
out
jb
xchg
fiaddl
cmp
xchg
pop
es
jmp
mov
arpl
das
sub
dec
out
loop
jle
lahf
sarl
lods
out
cmp
fldenv
pop
sbb
std
addr16
and
cmp
add
pop
test
cmp
push
in
outsb
ret
hlt
lea
or
or
dec
enter
lds
mov
cmp
xor
and
lret
pop
cwtl
imul
xchg
sub
lret
ds
movsl
arpl
adc
int3
add
xor
pop
pop
jns
fmuls
lock
enter
push
pop
enter
test
in
rol
imul
or
push
push
stos
dec
in
add
push
inc
test
lret
dec
rcl
jle
mov
addb
dec
and
and
stos
adc
cli
lods
pop
repz
jbe
dec
cmp
jo
adc
test
insl
prefetch
or
repnz
sub
scas
jae
mov
sbb
push
fstl
fidivs
outsl
mov
lret
loop
jns
mov
outsb
and
mov
push
imul
std
cmp
out
ret
sbb
leave
mov
mov
leave
aam
pop
hlt
je
add
ret
in
movsl
mov
aam
sub
cmp
cld
jle
scas
adc
cmp
mov
out
outsl
inc
mov
pushf
out
leave
adc
lcall
aad
dec
mov
rorb
mov
cmp
and
xchg
cwtl
pop
jge
mov
int3
dec
inc
gs
shll
les
movsl
jp
and
inc
sub
nop
outsl
punpckhdq
mov
adc
ret
lcall
sbb
repz
shrl
add
les
add
das
sbb
adc
jae
push
in
popf
into
fdivrl
loopne
pop
pop
and
jge
jg
addr16
inc
fiadds
pop
adc
pop
jne
cli
push
fistpll
jb
fmul
sbb
push
cmpl
jg
mov
cwtl
push
xor
vaddpd
out
mov
clc
fwait
mov
shr
mov
fisubrs
push
cmp
add
imul
push
inc
xor
mov
in
cld
cmp
jns
xor
mov
repz
inc
in
xor
movsl
sub
roll
stos
jnp
out
loopne
ds
bound
cld
popa
test
popa
test
mov
pop
xchg
and
insl
dec
daa
sbb
cli
adc
pop
icebp
in
push
dec
sti
sub
call
loopne
in
or
popa
cmpsb
ret
sbb
mov
pop
xchg
sbbb
dec
jns
outsb
push
insl
je
cltd
jmp
add
push
add
out
das
movsl
stos
mov
aaa
and
shrl
mov
lret
movb
mov
mov
dec
pop
jl
fisttps
pop
mov
sbb
cmpsb
jle
and
xchg
push
or
push
ret
cwtl
cmp
xor
pop
fisttpl
into
xorl
scas
movb
pop
push
and
jbe
pop
cld
mov
mov
out
inc
fidivl
mov
stc
lods
sub
fwait
mov
mov
add
and
and
and
lcall
ret
or
xchg
movsb
fst
hlt
mov
sbb
jge
sarb
push
in
icebp
cmp
sarl
adc
aaa
ret
cld
mov
dec
mov
data16
jo
xchg
ja
shll
js
add
addr16
jo
pop
test
jp
adc
inc
pop
mov
iret
mov
js
stos
pop
jecxz
es
jge
jmp
iret
inc
xchg
mov
dec
push
dec
in
jne
loope
rep
loopne
dec
les
xchg
push
in
in
xor
pop
loop
xchg
ss
iret
outsl
rolb
dec
mov
popa
lock
js
loope
jl
or
pop
sbb
movsb
and
loopne
rcll
xchg
mov
adc
scas
test
or
jb
fnstenv
xchg
cmc
sbb
inc
jbe
ud1
sbb
pmuludq
out
fsub
fiadds
xchg
popf
scas
leave
or
push
or
push
jb
repz
pop
shr
out
repz
mov
inc
jge
das
mov
xor
jecxz
lock
test
inc
xchg
adcb
rorb
insl
dec
aad
rolb
jl
adc
fs
stos
arpl
adc
jp
and
enter
insb
pop
sahf
popa
mov
jne
push
test
dec
xchg
pop
ds
sbb
fidivs
add
out
push
cmpb
sbb
jno
into
fstpt
fsubrp
push
scas
adc
xchg
int3
outsb
xchg
mov
cmp
fcompl
or
fst
xor
rcll
mov
jle
and
cld
xor
insb
and
or
mov
mov
mov
mov
push
cmc
inc
sbb
out
jne
push
adc
decb
insb
pop
xchg
jo
push
and
lods
jo
clc
cli
outsb
sarb
cltd
xor
inc
test
or
or
mov
push
mov
jnp
pop
pop
das
push
pop
jmp
cmc
xchg
jecxz
js
jecxz
bound
repnz
in
jnp
aad
ljmp
add
ja
jmp
push
test
aam
mov
imulb
inc
rolb
int
sbb
sbb
mov
jbe
pushf
jecxz
mov
mov
cmpsl
inc
pop
sbb
push
add
mov
pushf
jmp
sub
jno
xor
push
push
sbb
or
ret
sub
aad
lods
lock
cmpl
pop
ja
push
cmp
push
cmp
dec
imul
xchg
sub
bound
lea
cmc
push
ficoms
jb
mov
xor
insl
push
stos
or
sbb
cmp
lock
aaa
test
cmc
cld
mov
rorl
push
leave
cmp
push
adc
and
xchg
negb
test
sbb
add
cmc
push
fmulp
in
lods
and
jmp
std
xchg
lods
push
add
sahf
in
sbb
or
xor
mov
jmp
sub
orb
in
les
lahf
xchg
dec
arpl
pushf
addr16
cmp
pop
ret
adc
push
cs
jge
ja
cmp
ret
mov
and
or
jge
jl
cmp
xchg
cwtl
cmp
add
lret
sub
cmpsl
pusha
mov
idiv
and
xor
mov
cmpsl
push
sub
sarl
dec
jo
sub
xlat
adc
and
lret
iret
filds
dec
or
dec
pop
pop
scas
push
mov
or
lret
arpl
loopne
lods
iret
jecxz
in
push
xor
adc
shr
inc
out
aaa
xor
inc
clc
pop
pop
test
adc
xor
pop
js
std
inc
daa
shl
cs
lods
addr16
jge
push
xchg
adc
arpl
mov
mov
popa
or
ret
fwait
xchg
sbb
in
jae
sub
in
ss
mov
pop
mov
or
int
xlat
inc
jp
mov
cltd
mov
fcompl
add
pop
inc
mov
jle
arpl
iret
clc
js
cwtl
lea
dec
dec
aad
mov
pop
inc
mov
cmp
call
outsb
js
pop
adc
pop
js
ja
ja
or
xor
notl
and
xchg
jmp
aaa
lds
addr16
inc
xor
pushf
and
xchg
dec
daa
adc
adc
and
rcll
dec
dec
repnz
imul
xor
mov
pcmpgtb
arpl
testb
adcb
adc
rol
aaa
cmp
or
adc
sub
test
lods
mov
mov
enter
arpl
cmp
insl
cmp
xchg
outsl
inc
dec
data16
jmp
in
pop
lahf
xlat
xchg
shll
test
jae
pop
dec
mov
mov
jge
mov
pop
lods
and
inc
pop
mov
shlb
arpl
pop
mov
je
and
jge
cmp
xchg
dec
inc
mov
jbe
pop
fwait
aas
cli
xchg
mov
lds
aas
fcmovne
adc
jae
cwtl
out
movsb
pop
mov
mov
or
mov
pop
pop
sarl
mov
pop
xor
cmp
push
dec
pop
jle
cmpsl
or
sub
jp
int3
int
scas
jbe
outsb
inc
push
aad
sahf
loope
and
cs
mov
jge
inc
ljmp
scas
out
sbb
push
jo
xchg
fxch
pop
sahf
js
shlb
fs
fimuls
sbb
shll
jecxz
ds
and
push
cmp
lods
inc
xor
movsl
jno
inc
pop
arpl
repnz
scas
rorl
pop
sbb
adc
cmp
aam
cmp
push
lds
lret
sbb
leave
jl
fmull
testb
push
test
sub
dec
aas
jbe
or
sub
cs
icebp
or
in
fwait
hlt
lret
mul
sub
les
fildll
push
jmp
imul
mov
xchg
repz
or
lea
daa
ja
mov
test
imul
clc
dec
xor
pop
jmp
dec
add
mov
out
and
mov
std
movb
adc
adc
in
jns
int3
inc
das
xchg
cwtl
xor
icebp
arpl
sbb
subl
push
popf
jns
ss
fistpl
setae
cmp
sbb
movsl
popf
subl
sbb
sti
and
push
call
push
aaa
and
adc
les
mov
test
fmuls
pop
sub
mov
mov
and
lea
fwait
xchg
mov
cs
pop
lahf
iret
out
out
cmp
jl
mov
xrelease
test
mov
ja
mov
aam
fdivrl
push
fldl
add
daa
gs
sbb
enter
pushf
in
cmp
popa
daa
shrl
cld
arpl
daa
inc
push
rcll
sbb
repnz
inc
and
xor
cmp
popa
repz
jnp
mov
int
scas
and
jge
lcall
int3
out
in
stc
pop
popa
push
in
inc
fxch
inc
leave
gs
inc
imul
mov
add
xchg
icebp
dec
xchg
mov
aam
gs
push
dec
je
movsl
jne
das
jae
jnp
outsl
xor
shr
enter
cli
outsb
cltd
ds
mov
adc
cmpsl
jne
push
clc
and
mov
push
loopne
sub
dec
push
ds
push
lock
push
adc
scas
and
xchg
fstpl
loope
mov
or
mov
mov
cli
jno
lahf
sbb
popf
lea
mov
mov
add
dec
mov
repz
gs
cmp
lret
dec
mov
add
loop
stos
je
dec
je
pushf
inc
in
add
pop
pop
frstor
push
inc
fwait
shl
add
mov
push
lahf
bnd
pop
sub
cs
lds
scas
mov
lret
lock
pusha
out
loope
std
into
cmp
jbe
aaa
pusha
out
lods
cmp
cmp
push
cmc
jp
call
fsubs
xor
in
jmp
ds
imul
sbb
pop
or
cmpps
pop
fcmovnbe
incb
addb
movsl
jecxz
mull
enter
jge
mov
mov
lea
and
mov
movsl
movsb
and
mov
rol
jo
push
push
outsb
cltd
loope
push
pop
cmp
sub
mov
sti
push
xchg
ja
and
les
lret
sub
ss
jmp
jb
sbb
or
xor
mov
arpl
or
pop
push
popa
push
push
xchg
or
int3
push
push
stos
inc
fisubrs
cmp
xchg
leave
inc
in
push
mov
daa
out
xor
sbb
pusha
mull
pop
fildl
sqrtps
pop
cmc
jno
jae
rcrb
and
and
fsts
pop
inc
mov
rcrb
xor
xlat
out
mov
das
sub
test
lods
or
fs
inc
mov
pop
mov
and
sub
pop
adc
dec
and
jno
sub
orb
cs
sbb
pushf
mov
outsl
inc
xchg
sbb
inc
xchg
cmp
test
sbb
call
mov
jno
adcb
cwtl
mov
iret
lcall
insl
pop
rcll
loope
out
xchg
add
in
and
add
fs
fs
mov
xchg
jae
jne
xchg
or
int
insl
out
jg
push
mov
dec
add
jge
ja
xor
push
aad
mov
add
adc
jecxz
jg
gs
jp
cmp
jmp
push
call
push
icebp
sbb
test
or
cs
add
xchg
push
fildl
mov
loopne
cmc
sub
lds
gs
lods
ljmp
sub
jg
mov
sbb
jle
xlat
ja
xor
pop
icebp
xor
fndisi(8087
enter
inc
ficompl
and
lds
fdiv
inc
or
jmp
or
cmp
cwtl
test
das
push
test
xor
and
mov
stc
int3
fstpl
cwtl
adc
xor
jb
adcl
popa
xor
dec
mov
adcb
adc
mov
nop
adc
mov
jns
cmp
or
mov
popa
jns
inc
pop
and
fcoms
test
rclb
sub
sbb
pop
gs
push
jl
out
push
ja
jl
in
rolb
arpl
jnp
jle
outsb
in
fcoml
and
dec
sub
das
inc
dec
das
lcall
sbb
jnp
ja
mov
jl
jp
mov
xchg
testb
add
mov
data16
pop
pop
scas
jo
addr16
push
add
xchg
xchg
nop
ret
xor
and
inc
jbe
and
mov
dec
pop
pop
xor
mov
test
fucomip
fsts
adc
pop
ret
adc
je
mov
cmc
test
mov
mov
test
daa
push
rolb
sub
dec
cmp
mov
outsb
push
mov
clc
cmc
inc
int3
cmp
sub
xchg
jne
aas
sub
pop
pusha
into
and
scas
cmp
adc
sbb
adc
gs
clc
xchg
mov
std
sub
test
push
loop
dec
outsl
pop
xchg
mov
call
into
pop
sub
shll
es
mov
cmc
aaa
in
dec
jmp
push
je
push
mov
sti
ljmp
idivl
pop
mov
or
fs
movsl
shll
xchg
div
ja
mov
adc
outsb
insb
mov
subl
mov
fimuls
push
ljmp
and
movsb
push
ret
jl
test
sbb
into
push
pinsrw
cmp
andb
mov
in
push
test
bound
hlt
fildll
les
insb
add
inc
add
rcl
aam
out
mov
mov
movsl
mov
scas
cmpsb
scas
xchg
sbb
rcll
mov
add
add
add
add
and
jmp
jmp
jmp
jmp
