push
call
ret
ret
jge
pop
enter
pop
in
mov
notl
bound
mov
out
push
pushf
cmp
daa
ret
pop
rorb
xor
pop
push
jg
mov
xchg
adc
cltd
push
mov
jl
and
xchg
pop
cmc
add
sub
scas
inc
out
dec
aam
repnz
cmp
push
je
cs
pop
pop
jbe
inc
lret
cmp
cmpsb
dec
das
les
jnp
fldenv
es
fwait
jge
and
pop
push
scas
push
push
das
cmpsb
and
xchg
aas
lods
push
les
pushf
xor
jne
lock
xor
cmp
rolb
sbb
sub
mov
popa
aas
adc
dec
les
cmpb
push
dec
jnp
nop
daa
lock
stos
push
push
add
cmpsl
xlat
sti
xchg
mov
sarl
int3
outsl
pop
fdivr
jmp
mov
sbb
push
imul
aas
sbb
pop
adc
icebp
mov
jp
mov
shr
cwtl
add
jmp
movntps
mov
test
aad
stc
sub
or
push
mov
push
cmp
xor
pop
inc
cwtl
jge
pop
mov
lods
subl
jp
sub
jne
xor
dec
and
mov
shrl
mov
ds
aad
push
sbb
neg
sub
out
fsubl
add
adc
xlat
lds
dec
orl
pop
je
out
div
cli
test
jae
pop
inc
shlb
shlb
push
shlb
imul
addr16
lods
imul
sbb
fdivrl
pop
mov
addl
xchg
inc
jno
jae
shll
std
add
sbb
popa
sub
pop
xchg
mov
xchg
inc
push
mov
inc
bound
fstps
in
pop
jnp
adc
xchg
addb
mov
in
xchg
cltd
pushl
adc
pop
lret
mov
pop
and
jbe
ljmp
movsb
es
mov
cli
sub
popa
adc
fldcw
push
and
stc
dec
pop
and
das
xchg
jg
mov
jo
test
add
nop
mov
lret
arpl
or
lret
arpl
cltd
and
aas
ret
add
out
clc
sub
stc
ret
mov
mov
cmpsl
mov
clc
cmp
add
or
dec
in
js
jmp
cs
inc
adc
jecxz
cmp
std
push
and
loop
pop
mov
addr16
lcall
notb
std
aam
sahf
outsb
loope
iret
push
cs
test
jle
pop
int3
into
je
add
test
cmp
iret
lret
lcall
pop
lret
iret
add
inc
adc
mov
cmp
xchg
pshufw
xor
insb
in
cmp
sub
iret
xchg
mov
iret
sbb
xchg
and
adc
push
jae
mov
sub
jmp
pop
das
mov
pop
mov
xor
dec
icebp
pop
ror
sub
pop
push
xchg
outsl
and
inc
sbb
pop
jl
jle
xor
xchg
fisubrl
movb
bt
add
add
lods
imul
xchg
adc
js
lahf
mov
cmp
jmp
and
hlt
push
mov
jmp
das
leave
std
inc
dec
jae
stos
imul
and
call
push
mov
push
fld
push
sub
ds
subb
add
lods
or
lods
sub
and
inc
data16
add
xlat
add
sub
xchg
xor
rcll
xchg
add
fs
jns
mov
in
push
sub
or
scas
mov
fisttpl
or
popl
into
or
imul
loope
cmp
cmp
sti
sbb
mov
pop
cmp
test
cmovge
pop
daa
leave
lods
in
test
dec
test
pop
aad
and
mov
fcmove
jg
and
daa
or
jmp
xor
in
inc
lods
or
loop
and
inc
xchg
std
mov
fwait
mov
fnstsw
cmp
inc
cmp
movl
sbbb
ret
adc
loope
jp
jp
pop
aas
adc
xor
lret
push
mov
push
ss
jmp
sbb
lods
insb
test
popf
and
out
lahf
bound
insl
xchg
mov
push
or
jl
or
jo
xchg
fwait
stos
xchg
fadd
inc
shr
gs
cmpl
stos
enter
loope
fwait
popa
sbb
mov
push
adc
jp
dec
call
xchg
nop
faddp
int3
inc
mov
js
pop
sub
movsl
scas
lret
aam
loope
loopne
jne
andl
jl
sbb
sbb
outsl
xchg
ret
push
xchg
push
lret
add
sbb
ss
iret
dec
stos
sub
pop
cli
imul
inc
sub
daa
xlat
cmp
xchg
out
in
test
bound
fsubp
mov
dec
cmp
jge
jmp
mov
sub
fdiv
push
or
pusha
out
xchg
mov
mov
xor
mov
inc
js
shr
jmp
inc
ret
mov
fnstcw
pminub
mov
jle
enter
sti
aaa
xchg
insl
out
xor
loopne
mov
out
ja
xchg
out
inc
cld
imul
xchg
push
fsubrl
imul
or
inc
aam
das
rolb
hlt
cmpsl
xchg
push
das
sarb
mov
js
mov
sahf
and
mov
adc
mov
clc
mov
das
in
adc
fistpll
out
jmp
andb
push
pushf
xor
icebp
mov
mov
repz
pop
cmc
pop
xor
ss
adc
into
stos
aad
jecxz
dec
ja
xchg
imul
mov
in
loopne
mov
lods
pop
xchg
loopne
test
jl
push
in
inc
aaa
mov
cmpsb
xor
nop
inc
add
sub
cmp
push
jo
sub
aas
xlat
loopne
mov
mov
cs
sbb
test
inc
and
leave
fidivs
mov
mov
xor
mov
mov
add
push
jge
cs
scas
mov
sbb
mov
nop
call
add
inc
mov
out
sbb
cmp
ds
push
fwait
gs
int3
cmpsb
and
push
jo
andb
mov
leave
inc
and
sub
negl
inc
mov
sar
loop
mov
xchg
and
jge
in
int
sahf
xchg
push
out
jmp
push
lahf
xchg
lds
mov
fstpt
loop
xor
mov
nop
imul
ja
cmp
into
cld
sti
gs
outsb
mov
jno
cmpsb
rol
xor
cli
or
and
clc
dec
pop
aaa
sbb
add
lock
lea
dec
iret
cwtl
je
test
test
data16
flds
cmc
in
sahf
or
or
push
std
pop
push
insb
mov
dec
xchg
jle
and
das
cwtl
hlt
pop
jle
add
lahf
stos
in
mov
cwtl
jl
jmp
rcll
and
or
ja
ss
lods
imul
inc
pusha
inc
jmp
mov
jnp
sub
test
push
movq
or
je
push
add
mov
insb
cmp
sbb
mov
fs
fidivrl
inc
push
test
xchg
fwait
pop
mov
xor
jecxz
inc
repnz
cmp
sarb
cltd
stos
mov
push
or
int3
jmp
lret
add
jnp
pusha
es
add
xchg
push
adc
outsb
in
adc
or
je
mov
int3
mov
test
xchg
inc
xorl
clc
fistl
add
or
int3
push
out
jmp
cmp
add
and
and
adc
loopne
xchg
adc
fdivrl
cmp
scas
testb
and
adc
aam
fiadds
lds
repnz
jb
aas
subl
rolb
sub
xchg
inc
xchg
icebp
dec
loopne
push
dec
mov
in
mov
aam
cli
jp
mov
ret
into
pop
sbb
stc
lret
jmp
out
push
or
cmpb
sub
sbb
mov
pop
mov
adc
loop
testl
pop
sbb
sbb
int
ds
mov
or
push
rorl
popa
ja
push
wbinvd
inc
lods
jne
adc
cmp
adc
add
mov
pop
xchg
fsubrp
mov
test
iret
lods
loopne
mov
data16
adc
pop
ds
push
and
lods
adc
js
fstpt
mov
jl
push
sub
mov
or
jns
or
jbe
push
decl
shll
xor
repz
insl
jle
sub
out
inc
mov
mov
xchg
jae
ror
sbb
inc
mov
pop
ljmp
jbe
jmp
dec
dec
mov
into
cmovns
and
sub
subb
pop
sub
push
out
in
lcall
sarl
lcall
jp
popf
icebp
in
in
xchg
mov
xchg
mov
xchg
out
dec
cld
out
dec
mov
inc
add
outsl
fmull
pushf
inc
pop
inc
jle
fdivs
call
adc
xor
ffreep
daa
nop
js
scas
and
jo
ja
call
das
cmp
or
out
fnstcw
mov
mov
int
sbb
cltd
mov
xor
jecxz
push
xchg
bound
movsl
js
imul
int
xchg
mov
test
pop
idivl
test
ds
ds
sar
es
and
test
lock
lods
push
pop
add
mov
or
cs
xchg
sub
fisubl
cmc
and
dec
cmp
push
sub
sbb
pop
ja
mov
sbb
sub
xlat
outsl
aad
sbb
imul
daa
decl
lock
rolb
mov
and
mov
cmp
in
leave
and
sub
into
cld
dec
jp
cmp
testb
xchg
pop
dec
testl
jno
dec
enter
push
xchg
int3
jo
loopne
jo
in
std
pop
mov
sbb
imull
fists
imul
push
loop
lea
test
repz
add
push
in
xchg
loop
and
push
in
dec
or
iret
repz
arpl
fwait
out
inc
arpl
xchg
stos
xor
incb
xor
cmpl
aaa
imul
cmc
shll
addr16
rclb
push
sbb
pop
enter
mov
setle
enter
loop
mov
cmp
dec
push
sar
mov
aam
lcall
fsubrs
or
cmp
outsl
or
jle
mov
pushf
sbb
cs
fwait
andnps
mov
xchg
sub
fbstp
mov
ds
pop
push
lea
into
sbb
das
sub
or
and
mov
push
mov
stos
in
pop
pop
mov
cmp
js
jle
mov
in
mov
bound
sbb
rcrl
xlat
xchg
jb
ja
pusha
in
aas
pop
std
lahf
fidivs
std
pop
inc
insl
mov
aad
in
sbb
add
test
in
sub
sbb
ror
cmp
pop
scas
push
jno
outsb
mov
fisttpll
je
bswap
cwtl
mov
jl
xchg
std
out
sub
xor
mov
aad
inc
dec
sbb
lods
cmc
stos
jne
icebp
ds
mov
sti
je
xor
inc
mov
dec
int3
add
test
jb
jp
mov
fucom
sbb
add
sub
cmp
inc
xchg
notl
or
fisubl
mov
pop
cs
iret
dec
mov
or
pop
sbb
mov
dec
jo
lcall
or
dec
xchg
popl
lods
bnd
mov
cmpsb
test
dec
int
and
pop
pop
adc
fsubs
add
inc
lds
cmpb
sub
enter
mov
xor
sbb
lcall
sub
jmp
shrb
mov
push
fsubs
or
adc
leave
pop
sbb
and
mov
in
loope
ljmp
xchg
sub
lret
push
sub
fildl
int
jb
sub
jo
adc
xchg
std
xchg
testl
xchg
arpl
add
loope
sbb
adc
cmp
adc
jl
mov
orl
mov
cmp
loopne
jge
sahf
xor
xchg
add
mov
bound
push
push
xor
iret
adc
mov
fst
jno
aaa
push
mov
inc
dec
jb
fadds
jae
sbb
sbb
out
and
mov
test
pop
sub
loope
pop
ss
xchg
push
das
std
clc
or
mov
cmp
push
rorb
xchg
int
fdivl
int3
dec
jb
jmp
sbb
outsb
jge
andb
jne
in
and
fldt
mov
ficompl
cmp
jge
int
aaa
sbb
jno
popf
cmp
inc
ficoms
out
popf
sub
lods
inc
scas
fdivs
dec
aas
pop
fmuls
shrl
jo
push
push
nop
mov
xchg
mov
inc
cmp
inc
stc
bound
loop
orl
cmpsb
stos
add
adc
int
sub
mov
divb
sub
jecxz
push
pop
mov
lock
rcr
jle
in
out
mov
fldl
or
les
or
push
sub
cmpsl
ret
loopne
lret
jnp
push
scas
xchg
add
aad
mov
xor
scas
mov
mov
aad
mov
int
lods
sub
xlat
pop
sti
and
sbb
cmp
pop
fbstp
pop
popl
inc
add
movsl
hlt
push
in
dec
addr16
cmp
test
xchg
dec
je
test
movsb
sbb
mov
fisttps
and
jbe
out
xchg
cmc
aad
or
adc
mov
pop
inc
enter
cmp
cmc
pop
add
out
xchg
lret
outsl
test
sbb
jecxz
jl
out
sti
sub
pop
mov
fs
mov
shlb
jno
inc
lea
add
lahf
fs
pop
mov
cmpsl
dec
loop
pop
arpl
push
into
lods
sbb
inc
ret
add
nop
mov
adc
jmp
ja
js
vucomiss
fdivr
or
lret
aad
dec
out
dec
test
ja
bound
rclb
sub
xchg
xchg
or
pushf
jg
nop
pop
jae
pushf
mov
int
add
push
in
fdivrl
sahf
mov
jmp
aad
dec
sub
xchg
jns
cmp
dec
out
movsl
bound
pop
pop
jmp
arpl
jl
adc
push
cld
lret
jne
into
push
adc
add
dec
xchg
or
sahf
pop
xor
inc
and
add
and
fldt
push
pop
adc
lret
jae
cmp
push
int3
mov
popl
bound
std
lret
loopnew
pop
or
movsl
and
jb
call
inc
or
cmp
mov
cmp
fsubrs
imul
xchg
jns
ja
adc
pop
mov
insl
in
mov
in
sbb
jnp
push
arpl
add
jae
or
movsl
sub
scas
cmc
mov
insb
ss
cwtl
xor
adcl
mov
xor
and
in
mov
insb
and
push
mov
sbb
adc
rcl
inc
arpl
ss
sub
or
mov
stc
inc
push
mov
jae
or
loope
dec
fst
jns
fcoml
iret
jo
addr16
cmp
iret
lods
lret
jne
test
mov
jp
out
lret
xor
fisubs
add
jb
sub
test
cmp
and
enter
and
pop
iret
pop
call
jg
jp
xchg
int3
std
hlt
xor
mov
mov
pop
fldl
xorl
ds
jmp
mov
sbb
rorb
xor
jb
mov
push
popf
xchg
xor
int3
stos
out
mov
adc
xchg
leave
aaa
sbb
push
imul
dec
push
mov
rclb
jg
aas
stos
aad
xchg
adcl
xor
outsb
lcall
cld
mov
ja
mov
jmp
pop
shrl
push
aam
cwtl
push
dec
push
mov
out
shrb
mov
sbb
pop
lds
or
mov
dec
or
xor
mov
inc
imul
xchg
inc
cmp
cli
adc
dec
or
pusha
cmp
je
lcall
repz
bound
rclb
mov
clc
sbb
fisubs
and
or
adc
sarb
lea
or
stc
and
jl,pt
sbb
shll
scas
call
mov
andl
insl
cmc
out
mov
mov
adc
call
pusha
test
mov
in
pop
stos
in
mov
jnp
decb
sbb
adc
int
arpl
test
call
pop
xor
push
dec
outsb
cmc
loope
xchg
and
cmc
mov
sbb
xor
mov
cmp
lds
nop
xchg
mov
mov
mov
pop
test
pop
test
pushf
stos
or
daa
xor
xor
rorb
push
out
cmp
push
repz
in
jnp
icebp
stos
ljmp
pop
std
shrb
and
out
push
sar
xor
mov
ss
jecxz
arpl
pop
xor
lock
xor
jge
cs
out
fnstcw
and
cmpsb
jl
iret
mov
mov
jo
mov
imul
mov
add
jns
int3
fiaddl
or
adc
pop
clc
mov
mov
mov
aam
mov
arpl
les
movsl
sub
lret
cmp
inc
mov
into
popa
cmpl
ljmp
test
popf
sub
mov
je
lea
das
out
mov
dec
test
popf
leave
scas
adc
sti
fbld
lret
lea
call
orb
jnp
arpl
in
pop
dec
sub
stos
loopne
add
inc
push
xor
call
inc
js
xor
sarl
xor
data16
add
jle
cmp
jo
dec
inc
pop
mov
lods
cmp
jo
dec
push
sbb
pop
push
andl
pop
mov
push
and
addr16
pop
jns
cwtl
popa
dec
adc
jb
jnp
xor
mov
out
mov
or
or
out
cmp
pop
push
imul
shl
out
xchg
les
lcall
xchg
mov
outsl
out
jge
bound
mov
xchg
jmp
pop
lret
fsubrs
push
add
daa
adc
dec
mov
inc
lea
or
pop
rep
mov
xchg
cmc
test
sbb
test
lret
sub
sbb
fwait
mov
push
cltd
aas
mov
fsubrp
in
into
lods
loope
rcl
nop
lods
fcmovb
leave
insl
jne
pop
lods
dec
jbe
mov
insl
fldt
enter
and
mov
inc
into
jmp
scas
inc
fwait
add
cwtl
jecxz
jne
test
lds
xchg
pop
in
loope
test
nop
jp
jno
imull
xor
mov
or
out
test
push
xlat
leave
xor
and
inc
decb
mov
movsl
in
fldt
xchg
sub
xchg
jne
push
test
sbb
push
xchg
decl
sub
jo
pusha
mov
jns
sub
dec
rolb
scas
mov
jle
test
insl
mov
lock
mov
arpl
into
jne
into
int
sub
jbe
fisttps
and
pop
jnp
aas
notb
and
cmp
fs
js
mov
xchg
hlt
lds
lret
sbb
adc
inc
jp
pop
fs
xchg
and
mov
jmp
fs
incb
pusha
push
cmp
adc
jecxz
push
push
sarb
add
pop
jo
sbb
out
mov
pushf
gs
js
mov
fstl
xchg
popf
fldl
mov
push
mov
cmp
daa
inc
jg
dec
dec
sub
in
test
pop
or
push
mov
imul
jae
fisttpll
sahf
or
incl
cmp
push
lea
xchg
out
addr16
xchg
hlt
push
in
fistpl
cmp
call
cld
push
xchg
push
inc
ret
fmull
add
dec
xor
test
in
and
call
xor
cli
test
aaa
cwtl
jbe
movsl
loop
mov
pop
inc
inc
and
lock
xor
mov
xor
xor
add
xchg
ret
rcrb
insb
dec
xchg
imul
sub
orl
jns
out
cli
pop
xor
hlt
xchg
lods
or
aad
int
add
adc
ja
enter
lods
adc
int3
leave
xor
pop
bswap
leave
outsl
xor
push
loop
shl
and
outsl
or
aam
push
jb
push
xor
sub
nop
rcrl
inc
pop
sub
out
bound
enter
stos
ss
pop
jae
push
out
lods
xchg
and
repnz
push
int
cli
push
xor
sub
imul
rorl
sbb
inc
inc
lret
test
jle
push
test
xor
dec
xchg
lea
push
ljmp
cmc
inc
rcrl
push
lods
mov
insl
subl
cmp
jb
push
dec
xchg
dec
xor
jmp
jl
adc
mov
pop
rcrb
mov
cmp
ja
pusha
test
cs
cwtl
and
cmp
repz
jbe
outsb
mov
and
xor
jge
xchg
test
cmp
pop
cmpsl
mov
jo
int3
cs
sbb
push
xchg
shl
cwtl
pop
sub
aaa
push
sub
xor
and
jg
imul
sbb
call
fs
pop
cld
mov
in
mov
aam
push
out
fidivrs
jae
out
jl
pxor
fiadds
in
leave
xor
sbb
in
dec
and
cmc
cltd
adc
push
inc
mov
inc
mov
inc
and
push
inc
inc
loopne
rorb
shll
inc
sti
clc
sub
mov
clc
push
and
mulb
jae
movsl
popa
and
xchg
sbbl
xchg
xchg
dec
xlat
sbb
call
dec
or
sub
popf
gs
movsb
push
push
mov
jns
push
jp
sbb
rclb
in
add
and
dec
sbb
movsl
and
cmp
out
insl
pop
jle
sti
lret
push
inc
xor
pop
xchg
sbb
outsl
ljmp
mov
pop
push
icebp
push
lods
mov
dec
dec
rcrb
out
sub
insb
jg
push
mov
jecxz
vmptrld
jo
popa
out
addr16
jne
inc
ljmpw
repz
mov
pop
out
push
xor
cmp
inc
xchg
jae
shlb
xchg
xlat
xor
xchg
rcll
rcr
test
push
add
pop
push
xchg
mov
or
inc
jne
pop
push
xacquire
test
and
or
xchg
rolb
cld
lcall
ret
add
test
pop
repnz
dec
fisttpll
pop
imul
sub
dec
or
popf
dec
mov
mov
cmpsl
icebp
aad
mov
bound
cmpsb
rolb
sub
xchg
mov
dec
push
subb
sbb
fisubrl
pop
inc
pop
xchg
out
out
cli
int
es
cmc
jb
push
je
pusha
cs
and
pop
aam
push
js
or
sub
negb
mov
pop
popf
std
fistpl
in
out
sbb
push
les
cmp
sub
xchg
xchg
insb
mov
cmp
movsl
daa
in
scas
dec
sub
mov
cmp
lcall
imul
push
push
fstp
cmp
xor
sbb
shlb
lret
loopne
fdivrl
pop
sbb
stos
jp
ja
arpl
cmp
loop
and
sub
mov
sahf
scas
ss
out
push
sahf
mov
outsb
push
and
clc
jg
dec
icebp
les
jno
push
test
pop
lahf
adcb
jno
imulb
daa
iret
push
inc
mov
mov
mov
jns
mov
sbb
pop
and
xchg
mov
push
mov
mov
test
setp
mov
enter
js
xor
lret
sub
hlt
lods
fimull
push
out
mov
jp
jno
lcall
into
push
icebp
cmpsb
sahf
mov
add
cmp
mov
push
cmc
sti
ret
insb
and
cmp
iret
dec
loop
dec
sahf
dec
jns
add
daa
cmpsb
fistl
xor
fwait
mov
cmpsl
out
xchg
mov
and
std
adc
lret
adc
filds
fdivrl
cli
outsl
jb
ret
enter
mov
mov
cmpsb
mov
push
push
lcall
call
fsub
dec
dec
inc
mov
gs
mov
adcb
add
and
push
adc
jb
xchg
dec
mov
in
xlat
sub
test
popa
jl
push
lret
ret
adc
iret
fxch
xchg
loop
mov
test
loopne
test
mov
shrb
or
xor
pop
mov
mull
je
push
out
loop
inc
mov
cmpsl
.byte
add
add
add
add
mov
add
adcb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
test
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
dec
add
and
mov
sbb
stos
sbbb
inc
in
loope
sub
xchg
mov
movsl
push
push
loop
or
sub
and
bound
subl
or
and
cmp
ss
lcall
aas
aas
ljmp
arpl
and
outsl
gs
fisttpll
mov
sub
dec
lods
je
push
mov
ret
or
addr16
jae
mov
lods
pusha
pop
jle
subb
pop
loopne
or
push
pushf
inc
std
nop
mov
cmpsb
or
data16
cld
xor
popa
cmp
xor
gs
mov
pop
sbb
sbb
fldt
sarb
arpl
adc
xor
cmpsb
mov
adc
cmpsb
jnp
push
inc
mov
movsb
mov
jmp
inc
dec
dec
xchg
iret
jge
psubb
into
out
adc
mov
gs
les
hlt
and
and
repz
into
call
pusha
push
fistpll
lock
dec
xor
iret
pop
xor
cmc
pop
fs
sbb
adc
stc
jne
inc
jg
dec
movsb
movsb
mov
sub
mov
test
mov
mov
xchg
add
push
add
ret
in
loope
pop
in
cmc
adc
push
mov
xor
movsl
or
fidivs
dec
in
scas
and
push
pop
pop
lahf
pop
inc
dec
cmpsb
testl
sub
xchg
cmp
push
icebp
and
xor
out
cwtl
add
pop
iret
mov
push
sbb
pop
jns
inc
je
inc
pop
pop
repnz
push
std
jg
sub
xchg
mov
or
loopne
or
xchg
cmpsl
aaa
cld
cmp
push
sub
pop
rol
or
cmp
pusha
out
repnz
ljmp
mov
adc
imul
push
mov
mov
xor
rcr
cmp
imul
repnz
out
add
cwtl
lea
decb
sahf
aas
sti
dec
add
es
mov
shrb
lock
inc
sbb
pop
or
filds
push
jle
aas
daa
jg
add
jbe
xor
movsb
jp
and
sarb
push
stos
fmuls
fists
loope
outsb
fisttps
mov
loope
dec
fwait
sbbl
out
or
repz
cld
rcrl
test
daa
xchg
mov
call
mov
sub
pop
jle
mov
ja
repnz
push
xchg
push
adc
pop
call
jg
inc
enter
sub
adc
sub
out
inc
loop
rcrb
add
add
imul
push
xor
and
shll
cmp
int3
xor
and
mov
jno
imul
push
add
incb
shrl
fwait
jnp
mov
jp
arpl
ret
dec
aaa
dec
daa
std
int
es
movl
inc
orl
loopne
addr16
sbb
push
xor
movsl
cwtl
pop
loop
sbb
mov
repz
or
add
pop
sub
adc
out
adc
test
rolb
sarl
pop
cmc
xor
aaa
cmp
mov
mov
dec
push
adc
daa
sbb
push
push
outsl
lods
push
test
je
inc
xor
imul
lods
mov
enter
call
fwait
pop
xor
mov
sub
dec
pop
adc
push
imul
dec
in
adc
daa
mov
sti
stos
addr16
es
mov
add
cmp
std
sbb
or
mov
pop
int
cmp
mov
lcall
shll
inc
mov
and
cmp
xchg
jb
daa
push
and
in
outsl
add
aam
mov
sub
mov
arpl
gs
pushf
or
sub
imul
scas
sbbb
push
xchg
push
fiaddl
clc
xchg
mov
sbb
js
insb
das
mov
out
pusha
xlat
sbb
cwtl
sbbl
pushf
cmpsb
loop
sub
in
bound
loope
cmp
mov
inc
inc
cmp
aas
shlb
idivb
lds
pop
add
movsb
std
add
sub
pop
shrb
insb
negl
and
inc
adc
xor
mov
and
push
outsb
sub
gs
push
pop
mull
adc
add
push
mov
add
lret
popa
jmp
push
sub
clc
loop
or
dec
mov
jle
inc
mov
xchg
scas
jle
test
cmp
cmp
and
push
aaa
dec
xor
or
std
or
test
out
xchg
lret
mov
pop
arpl
gs
or
movsl
imulb
mov
out
sbb
jp
ret
jb
iret
push
push
or
fisttpll
xchg
mov
dec
shrl
jne
xchg
mov
loopne
sub
addr16
bound
pop
mov
pushl
cli
inc
mov
popa
push
lret
adc
lea
jge
inc
sub
dec
fisubrs
push
inc
push
test
mov
cmpsb
xchg
xchg
add
test
test
mov
das
call
inc
xchg
test
add
sub
add
les
out
push
xchg
outsl
pop
mov
popf
sub
fisubrl
cltd
lods
scas
pop
add
insb
cld
jge
inc
in
xchg
rclb
scas
dec
mov
mov
rcl
enter
add
ret
sbb
adc
mov
pusha
fildll
ss
hlt
rcrl
jge
cmp
dec
mov
mov
dec
andb
mov
ss
faddl
jp
sub
aam
xor
and
decl
popf
sbb
or
imul
mov
ror
rorl
add
adc
lret
sbb
adc
dec
and
fs
std
cmpb
inc
push
inc
inc
jo
fadd
lods
cmp
mov
ljmp
push
jnp
ljmp
popf
repnz
mov
xchg
jbe
aaa
push
rorl
and
sbbl
sub
add
ja,pn
out
outsb
mov
dec
cs
insl
data16
scas
mov
rol
or
imul
xlat
icebp
or
or
iret
jbe
lods
cs
scas
xchg
fistpl
into
xor
jnp
sbb
xor
push
dec
ja
xchg
xchg
cmp
or
add
scas
dec
cmp
and
subb
and
int3
cmpsb
flds
jecxz
jp
hlt
xlat
cli
or
mov
sbb
cmp
cli
ljmp
aas
xchg
push
outsb
aas
or
int3
and
pop
cmp
xor
icebp
aaa
pop
jl
xchg
mov
out
pop
cmp
mov
clc
mov
or
out
lcall
sbb
daa
test
adc
cwtl
mov
xorb
pop
in
or
out
out
sbb
adc
cmp
mov
push
movsb
add
jp
mov
mov
xchg
pop
fs
sbb
or
mov
cmpxchg
fs
in
xor
das
in
push
mov
clc
or
outsb
mov
ret
imul
sarb
bound
xchg
mov
pop
or
movsl
inc
leave
dec
in
mov
jns
data16
adc
int3
leave
inc
cmpsb
jae
inc
outsb
and
arpl
jo
aad
icebp
inc
dec
stos
mov
int
xchg
loope
fdivrl
in
jmp
mov
dec
dec
pop
dec
cmp
loopne
xchg
fsubl
or
cld
cltd
aas
add
negb
and
xchg
stos
jb
and
js
xorb
popa
xchg
rorb
inc
in
out
pop
mov
dec
push
mov
pusha
ljmp
imul
fistps
push
jns
cmp
sub
jno
dec
inc
dec
sub
pop
xchg
dec
das
cvttps2pi
mov
jne
in
mov
cmp
jno
dec
jmp
push
sti
sbb
cmp
jmp
cmp
sti
imul
xchg
leave
inc
lahf
dec
and
mov
and
jle
inc
aad
jl
inc
nop
cmp
movsl
fbld
arpl
push
fiadds
test
mov
jno
inc
dec
pop
adc
ret
pop
jge
pop
pop
ret
mov
push
sub
cmp
aad
hlt
call
mov
mov
mov
xchg
ret
mov
sub
inc
dec
and
mov
lds
popf
add
xchg
push
idivl
mov
and
or
inc
push
scas
mov
xchg
mov
lahf
aad
inc
int3
sub
push
gs
repz
adc
cmp
sub
das
sbb
or
divl
pushf
dec
icebp
cmp
xchg
mov
dec
gs
push
jl
adc
sub
clc
mov
js
mov
sti
jp
mov
ret
fcmovbe
push
dec
movsb
mov
xor
sbb
mov
inc
mov
ds
pop
loop
lret
sub
call
add
xchg
int3
dec
shrb
xlat
xchg
pop
insl
cmpsb
inc
aam
and
and
jp
mov
pop
mov
sbb
lahf
sbb
fs
jbe
sar
testb
adc
stos
add
out
in
pushf
push
daa
aaa
and
xchg
add
lds
push
out
xor
push
ljmp
mov
pushf
add
or
xlat
test
aas
sbb
add
scas
sbb
pop
flds
sbb
xor
scas
mov
jnp
neg
lock
lock
subl
pop
sbb
push
ret
dec
mov
pop
fisttps
push
inc
outsb
rcrl
adc
inc
mov
cmp
and
iret
jp
ficompl
mov
xchg
clc
sbbl
push
sbbb
andb
inc
jl
mov
je
lret
jno
lahf
cmp
push
pop
mov
out
pop
mov
mov
cltd
hlt
xchg
jo
fsubl
sbb
mov
inc
int
stc
inc
insl
dec
push
ds
pop
jl
cwtl
aam
lds
jo
cmp
je
lea
leave
cld
mov
daa
sbb
dec
pop
lret
lea
xchg
adcb
movsl
inc
push
pop
dec
sbb
js
add
inc
aad
cmp
insl
loop
scas
mov
hlt
addl
and
popf
inc
mov
pop
ret
sub
push
push
movsb
aad
push
call
adc
mov
mov
lods
jl
repnz
adc
test
mov
sbb
fwait
pop
or
ja
add
add
js
add
xchg
sti
mov
push
or
sbb
fimuls
inc
fsubs
std
pusha
mov
into
push
jno
cmpsl
addr16
xchg
xor
inc
into
jbe
cmp
test
cs
sub
inc
imul
out
jle
sbb
sbb
jnp
jno
pop
pop
cld
jl
add
mov
call
pop
dec
cmpl
insb
scas
aas
jno
and
pop
mov
aad
es
cwtl
mov
mov
pop
mov
jl
mov
push
outsl
ja
lods
nop
and
rcrl
jecxz
aas
xchg
lcall
cmp
push
ret
sbb
add
mov
insb
std
outsl
fisubrs
orl
or
and
mov
fisttpll
or
loope
ljmp
hlt
inc
push
jmp
fisubs
lds
imul
xorb
out
pop
push
mov
out
push
adc
scas
mov
iret
push
inc
jg
out
mov
dec
imul
mov
mov
std
jae
xchg
or
out
add
jne
je
xor
arpl
mov
sub
jne
lret
jmp
xor
jbe
in
das
fimuls
jns
cld
leave
xchg
pop
jl
fs
sub
push
out
imul
in
idiv
and
cmpsb
mov
xchg
sbb
adcl
repz
nop
cmp
rolb
pusha
pusha
xchg
ja
out
add
sahf
mov
mov
insl
imul
les
push
or
push
jle
call
push
or
test
mov
add
rorl
sahf
shll
xchg
jns
add
mov
push
mov
push
adc
roll
push
shl
dec
fisttps
mov
adc
outsw
adc
xor
mov
pushf
push
aaa
scas
xor
cli
lock
into
daa
mov
mov
in
mov
sti
fidivrl
xchg
sahf
xor
jnp
ljmp
pop
jg
push
in
outsb
push
xor
xor
incl
pusha
lds
into
sub
pop
in
xor
pop
mov
cs
in
sub
xorb
enter
push
xor
pop
mov
add
mov
cltd
push
or
dec
jmp
xor
adcl
cmp
inc
or
arpl
mov
lahf
les
popa
aad
sti
int
xchg
loopne
fmull
call
pushl
cwtl
mov
fsubrs
sbb
dec
cmp
sbb
inc
bnd
dec
cli
sbb
rol
jl
cld
hlt
int
cli
xchg
mov
imul
xchg
repz
xchg
dec
lods
shrb
bound
faddl
mov
sub
jl
dec
mov
mov
pop
and
mov
out
fcoml
sbb
clc
or
jge
fsub
scas
push
jge
subb
and
mov
mov
push
dec
xchg
add
and
popf
jmp
push
jge
adc
push
repnz
fnstsw
leave
jae
xchg
shlb
jb
lret
dec
test
sub
xchg
inc
aaa
cmp
mov
xor
jl
cmp
sbb
mov
push
stc
xor
push
xor
xchg
xchg
insl
push
inc
daa
adc
js
into
sbb
cmpb
jb
mov
clc
jle
inc
jnp
inc
or
scas
adc
fwait
jl
cmpsb
test
mov
dec
popa
iret
jb
les
jns
inc
fcmovnu
add
lret
dec
pop
sub
sbb
mov
pop
xor
xrelease
in
adc
adcl
push
push
aam
jmp
cmc
loope
pop
xchg
mov
inc
xchg
adc
or
fisubs
shlb
bound
jmp
shl
xchg
push
adc
pushf
inc
pop
dec
jnp
push
fidivrs
icebp
mov
sbb
fistps
xchg
push
iret
jae
xchg
add
mov
xor
push
out
jae
jae
repnz
cmp
mov
int3
inc
lea
aaa
sbbb
lods
cmovnp
dec
lret
or
fnsave
push
adc
or
and
or
push
cld
pop
ds
popa
cwtl
outsl
xchg
adc
enter
fcmove
xchg
test
sbb
or
out
or
mov
movsb
fidivs
mov
jg
js
pop
sbb
jp
fdiv
mov
push
sub
rolb
adc
ret
das
adc
adc
leave
dec
decb
lods
inc
xchg
shrl
and
lret
push
cmp
je
pop
mov
mov
pop
bound
aad
push
xchg
dec
sbb
xchg
fs
lock
gs
mov
lds
xor
cmp
pop
aad
xorb
pusha
lahf
pop
or
pop
ja
mov
and
scas
outsl
outsb
mov
add
push
and
ljmp
lret
scas
loope
mov
imul
mov
inc
mov
jne
xchg
xor
pop
lds
push
mov
in
in
pusha
pop
decb
mov
shlb
jbe
dec
mov
lret
negb
je
cli
in
add
mov
lret
test
jecxz
sbb
push
fcmovu
xchg
adc
push
outsb
outsb
cli
xchg
xchg
pop
or
mov
and
xchg
outsl
andb
flds
cmp
jecxz
decl
sub
lcall
jbe
xor
pop
xlat
lods
inc
pop
xchg
mov
shlb
fcompl
mov
js
pop
daa
aad
fldenv
bound
je
shrb
in
dec
mov
push
rcll
sub
shr
adc
dec
cmp
pop
aam
outsl
into
mov
in
jbe
jg
outsb
jmp
mov
cmpsb
outsb
add
lock
xchg
or
les
int
jne
test
adc
pop
xlat
xchg
sahf
add
dec
xchg
adc
jb
cmp
out
lock
dec
adc
mov
xchg
leave
stos
cwtl
lret
and
and
push
inc
pop
in
sub
dec
ret
jno
mov
xor
sbb
and
enter
gs
in
inc
mov
pop
cmpsl
push
inc
mov
xor
push
xlat
movsb
fdivrl
stos
sub
add
adc
push
stos
movsb
mov
xchg
xchg
sbb
movsb
repz
xchg
xchg
pop
popf
jnp
pusha
out
push
and
sub
xor
es
mov
xchg
addr16
jo
dec
mov
inc
decl
jae
cli
es
jge
iret
or
sub
inc
lock
xchg
imul
outsl
loop
jge
data16
daa
inc
jl
pop
cmc
pop
cli
fistpl
mov
xchg
pop
push
arpl
addr16
sub
sbb
pop
lret
and
adc
fimuls
inc
or
push
mov
mov
jle
movsl
sbb
addr16
push
cmpsl
lock
pop
cmpsl
mov
mov
jmp
lock
pop
add
mov
add
scas
and
mov
dec
jb
mov
jle
pop
jg
jge
inc
popf
aas
sbb
and
cmp
aad
push
xor
or
dec
dec
inc
outsb
xor
das
add
adc
xlat
iret
and
arpl
stos
sub
dec
jno
arpl
imul
cmpsb
jno
dec
idivb
pushf
sub
xchg
mov
loopne
push
fcoms
inc
cmp
jg
xchg
pop
clc
pop
das
pop
outsb
clc
jp
jle
jno
mov
xchg
dec
addr16
jp
iret
dec
xor
jge
arpl
cmc
add
inc
cwtl
xchg
mov
and
or
xor
jb
out
out
test
mov
jle
fcoml
repz
pop
ret
je
out
mulb
enter
and
les
jge
pop
pop
cmp
lcall
mov
adc
daa
scas
rclb
mov
addr16
push
push
jno
sbb
jp
hlt
leave
aaa
out
xor
pop
cmp
idivb
scas
cmp
cli
xchg
push
push
cmp
or
dec
dec
in
lcall
in
xor
lea
rclb
repnz
xlat
lock
rcr
dec
mov
and
xchg
pop
mov
call
adc
rorb
cmp
mov
ja
test
rol
adcb
sbb
jmp
mov
push
pop
in
test
test
jns
mov
fimuls
shr
lahf
pushw
inc
ret
sub
inc
shr
ljmp
jg
jno
scas
push
mov
fistpl
adc
push
jge
std
leave
sbb
xchg
jne
fildll
rcrb
dec
aad
inc
jmp
out
mov
call
ss
cmp
push
cwtl
and
dec
jecxz
fdiv
in
stos
add
push
lahf
in
fcoms
mov
adc
js
shll
add
xor
pop
sbb
daa
fdivr
sbb
in
and
and
clc
cmc
pop
clc
dec
xchg
sub
cs
aad
xorb
rcll
inc
fnstenv
and
dec
or
xchg
mov
ret
cwtl
fcomps
push
in
repnz
xcrypt-ctr
cmpsl
lahf
addr16
daa
ficompl
push
push
sbb
fucompp
iret
mov
pop
cs
aam
xor
mov
int3
jge
imul
addl
mov
lcall
cltd
jno
sub
cld
orb
sub
nop
aad
scas
cmpsl
test
push
adc
mov
jbe
xor
int3
xchg
pop
cli
cmp
and
fisttpl
fisubs
push
int3
in
or
shlb
ds
shlb
pushf
gs
mov
cli
jmp
xchg
test
pusha
mov
nop
int3
xchg
shrb
xchg
pop
jb
dec
mov
gs
das
out
push
lds
data16
dec
jne
fisubl
out
add
sti
add
ljmp
rorb
lea
ljmp
mov
in
jecxz
dec
test
inc
test
mov
int
repnz
sbb
imul
adc
mov
cmp
sbb
inc
adc
cmp
fidivl
scas
loopne
add
fdivrp
fmull
sti
xorb
sub
pop
clc
jo
jbe
mov
iret
mov
adc
inc
mov
xchg
stos
adc
push
ret
test
dec
mov
xchg
mov
into
cmp
imul
insl
push
inc
lods
dec
int3
mov
dec
ds
xor
jg
xchg
arpl
add
inc
in
imul
int3
sub
fmull
mov
mov
cmpsl
sahf
jle
fidivs
stos
leave
cld
and
xchg
xlat
sbb
xor
push
sti
push
cld
out
mov
mov
xchg
clc
jp
fidivrs
out
test
shlb
clc
addr16
stos
pusha
add
cmp
mov
test
pop
jbe
xchg
pop
int
testl
mov
add
pop
lahf
rcrl
xchg
repz
push
jmp
jge
jge
or
adc
mov
in
xor
mov
sbb
dec
sbb
cltd
cmp
scas
stos
mov
sub
sbb
sub
push
xor
add
xor
lret
adc
jecxz
mov
ret
pop
xor
lods
jne
mov
sti
lods
jl
mov
fstl
push
andl
call
pushf
stos
pop
sbb
ds
ficoml
hlt
fcomps
das
int
mov
movb
adc
sub
daa
cltd
pop
sub
movsl
pop
mov
movb
aaa
scas
out
add
test
add
mov
cli
pushf
jno
bound
add
aaa
lret
pop
aam
xor
lret
mov
jle
adc
xchg
rcll
mov
das
pop
xchg
out
andb
mov
sbbb
push
pop
cltd
sub
in
xchg
addl
popf
in
daa
or
cmpsb
lahf
or
cmpsl
into
aad
lods
scas
movsb
cli
push
jp
or
stos
push
push
clc
or
mov
pop
push
gs
fs
stos
cli
out
loope
dec
inc
addr16
sbb
scas
in
or
ja
mov
lods
adc
cmp
inc
fiadds
add
mov
mov
fcompl
testl
xchg
mov
nop
sbb
adc
cmc
aad
repz
sbb
sbb
fsubl
mov
mov
push
jg
scas
inc
jl
mov
or
mov
fcoml
stos
inc
or
inc
push
in
fisubrs
adc
dec
mov
jecxz
lea
in
sbb
lods
cmp
scas
add
aam
push
or
icebp
mov
mov
popf
js
mov
dec
adc
jmp
inc
sub
mov
sub
sahf
divl
inc
sub
adc
out
xlat
in
sub
pushf
ja
test
mov
enter
pop
les
push
push
mov
mov
or
or
test
ljmp
clc
jae
ljmp
push
inc
ljmp
loope
xchg
and
mov
adc
push
mov
mov
aaa
in
pop
and
rcrl
push
xchg
mov
pop
subb
and
test
dec
loopne
jl
enter
jle
into
arpl
daa
movsl
xchg
mov
push
jbe
and
cs
outsb
inc
push
mov
mov
leave
adc
and
rcrb
enter
ret
push
inc
mov
adc
jle
push
xchg
xchg
add
in
shrl
cmp
cltd
js
std
fidivrs
ljmp
nop
out
push
fwait
shl
fisubrl
addr16
sub
clc
or
fs
cmp
sbb
dec
rorb
add
sub
in
and
inc
push
inc
lahf
push
sbb
cmp
mov
mov
mov
movsb
cmp
dec
pop
filds
mov
jno
int3
mov
jne
movsl
test
pop
test
xor
jo
gs
cltd
mov
sbb
sub
add
xchg
addr16
pop
cli
adcl
loopne
and
repnz
cmpsb
pop
pop
pop
push
lods
outsl
or
adc
gs
cmpsl
outsb
frstor
sbb
lret
add
cli
cmp
push
insl
test
push
sti
outsb
or
out
jle
in
cmp
aaa
inc
les
add
leave
divb
mov
lcall
loope
sbb
xor
fnstcw
in
arpl
xor
dec
mov
push
adc
jmp
test
imul
ljmp
mov
insl
mov
enter
lret
mov
and
mov
les
cltd
outsl
mov
inc
xorb
arpl
pop
fsubl
pop
cli
imul
sarb
dec
sti
xor
pop
fcoms
dec
cmp
pop
stos
xchg
cld
sbb
xor
add
xlat
xor
outsb
dec
jns
stc
sub
bound
push
pop
adc
adc
mov
mov
mov
push
hlt
mov
pop
fwait
xor
mov
out
cmp
faddl
je
adc
fidivrs
clc
rolb
int
outsl
pop
mov
or
stos
stc
addl
and
pop
dec
add
shlb
imul
or
and
jae
ja
scas
sarl
jnp
imulb
mov
in
icebp
adc
mov
sahf
sub
ror
nop
mov
xor
shll
mov
cwtl
sub
or
xchg
jne
test
or
jg
adc
mov
or
inc
dec
jne
call
sbb
into
adcb
jp
dec
fsts
and
and
lds
mov
inc
xor
faddl
scas
jno
stc
inc
scas
shll
jno
lock
or
fdiv
mov
inc
int
fstl
fprem
ljmp
jge
lods
push
add
sbb
dec
fcomps
movsl
dec
inc
insl
cld
add
and
lock
mov
into
xor
cmp
mov
aad
orb
sarl
pop
or
divb
xchg
push
ret
add
xor
bound
inc
inc
pop
xchg
leave
cmp
add
ret
orb
xchg
xchg
out
in
mov
lods
imul
std
xchg
cmp
mov
hlt
cli
or
hlt
sub
push
test
aaa
or
push
das
sahf
mov
dec
pop
outsb
ja
mov
mov
div
movsb
loopne
jae
mov
fsin
mov
or
and
shlb
adc
inc
int
jno
or
lahf
arpl
iret
lods
xor
mov
mov
push
fldl
movsl
lods
push
adc
inc
dec
sbb
xchg
jg
mov
jb
mov
xchg
jbe
imul
lods
and
stos
mov
sbb
sti
pop
jnp
inc
and
sub
mov
mov
or
call
xlat
fistl
lret
inc
sbb
mov
fisubl
shrd
fcompl
scas
and
pop
sbb
sbb
pop
stos
fnsave
mov
cwtl
push
sbb
std
cmp
in
pop
aaa
sub
out
mov
jg
testb
aam
ljmp
imul
incb
cmp
mov
sbb
clc
dec
pop
jmp
in
sbb
loop
xchg
and
sub
arpl
mov
push
or
ss
pop
shll
and
notl
lea
jmp
push
int3
pop
mov
loope
andl
xchg
arpl
xchg
or
in
daa
mov
pop
pop
out
icebp
gs
sbb
push
add
dec
hlt
xchg
icebp
sbb
mov
mov
ret
fisubrs
cmp
xchg
xchg
fnstsw
pop
outsl
sub
inc
pop
das
sbb
lret
inc
int
stos
sub
in
mov
push
out
inc
cltd
dec
sbb
cwtl
sub
in
dec
cltd
inc
mov
push
icebp
int3
sub
fcmovne
frstor
fucomip
xchg
cmp
hlt
int
seta
add
repnz
mov
pop
sub
out
mov
sbb
xchg
pop
xor
pop
idivb
jnp
cmp
les
and
daa
popa
mov
pop
les
pop
xor
sbb
jecxz
cmp
jmp
gs
dec
or
mov
out
dec
and
imul
ja
and
adc
jp
lods
cmp
dec
xchg
shl
and
push
stos
push
or
fnstsw
test
inc
ljmp
sbb
push
mov
cld
inc
mov
push
shl
fidivrs
lock
icebp
mov
dec
mov
jne
aas
mov
cmp
sub
loop
rcrb
loopne
pop
inc
pop
and
int
jno
jnp
hlt
mov
cmp
fildll
ret
xchg
sbb
xor
jae
cld
das
sbb
fistps
or
pop
pop
stc
divb
fs
out
add
push
sub
inc
adc
outsb
fcoms
mov
pop
sahf
add
sbb
and
je
aam
rcll
mov
and
sbb
loope
fidivs
int
and
inc
gs
std
add
or
jns
jnp
jge
pop
into
in
loope
pop
fisubs
data16
inc
add
sbb
or
mov
push
in
pop
in
popf
add
push
dec
inc
mov
rcrb
push
add
daa
or
addr16
mov
pop
push
sbb
lods
in
mov
mov
jns
scas
sub
outsb
cmpsl
push
fistpll
xor
in
nop
insb
or
sub
insb
js
repnz
cmc
cmp
je
es
ja
sti
jmp
pop
outsl
xchg
adc
hlt
mov
pop
add
addr16
inc
cmp
dec
cli
jbe
xchg
out
in
leave
loopne
add
mov
arpl
cmp
xor
aad
stos
sbb
into
add
adc
jg
xor
xor
lea
imul
rcll
mov
xor
call
mov
jg
xlat
xchg
fsubrl
repz
xchg
jmp
sbb
ljmp
sbb
test
and
mov
dec
not
push
jno
pop
lods
jns
ds
ficomps
jmp
ja
dec
add
leave
repz
mov
ds
jmp
dec
or
sbb
aas
rorl
lcall
jns
andl
es
sbbl
jns
lcall
dec
movsb
les
call
push
outsb
fcom
idiv
cmp
add
in
mov
leave
sbb
aam
icebp
inc
js
jnp
pushf
xor
movsl
inc
outsb
xchg
cmc
arpl
lds
aam
aam
fsubs
mov
movsl
cmp
mulb
nop
cld
aaa
scas
xor
and
xor
push
jne
push
cmp
mov
inc
lcall
js
xlat
inc
jl
xor
loope
pop
xorb
addr16
push
imul
sub
les
stc
jge
pop
adc
lds
cmp
dec
es
and
xchg
outsb
pop
mov
pop
mov
mov
adc
mov
mov
es
push
push
mov
xchg
pusha
ja
call
call
mov
pop
stc
shrb
mov
xor
inc
xor
test
xor
xor
addr16
scas
loopne
inc
les
pop
dec
mov
insl
fidivl
in
shrl
or
mov
mov
mov
in
ljmp
stos
mov
sub
dec
mov
inc
mov
jb
imul
fisubrs
das
pop
outsl
inc
in
nop
icebp
mov
mov
negb
movsb
add
outsb
adc
add
xchg
aaa
fwait
or
mov
or
jle
jae
mov
push
scas
enter
push
fsub
pop
cld
int
mov
and
and
les
sub
mov
xor
fmul
push
icebp
jl
jecxz
add
push
dec
jl
mov
sub
jmp
push
xchg
cmp
mov
aam
sub
jg
inc
mov
jg
inc
and
push
push
add
sub
mov
sub
and
test
rcrl
jbe
and
cmp
sub
jge
xor
or
lock
sub
xor
sbb
mov
mov
push
mov
push
push
mov
push
sahf
fmull
lds
mov
sub
imul
xor
decb
xorb
imul
xor
or
pop
inc
negl
push
imul
mov
cmp
lcall
movsl
lahf
clc
repnz
leave
inc
or
bound
notb
push
and
in
nop
test
les
sub
test
clc
imul
nop
imulb
xchg
dec
mov
adc
sbb
cmpb
rcr
sub
aaa
stc
adc
aaa
aas
repnz
sub
push
cmp
into
or
xchg
cld
jae
add
dec
cmp
in
adc
adc
inc
sbb
fldcw
mov
sbb
push
mov
and
cwtl
rcrl
mov
jg
out
sbb
pop
loop
in
pop
fiadds
aas
adc
inc
sbb
or
adc
scas
pop
cmpsl
nop
fidivrs
sarb
lcall
and
push
fisubrs
cmp
sbb
in
mov
and
outsl
jne
aad
and
ja
fs
adc
out
stos
dec
mov
clc
jo
or
and
out
xchg
popa
test
cmp
cmpsl
dec
mov
int3
cmpsb
mov
mov
mov
jge
sub
in
inc
mov
or
push
xor
inc
das
push
leave
movsl
fadd
add
pop
cmpsb
xchg
dec
into
adc
jp
push
jns,pn
clc
shl
lcall
inc
mulps
jg
test
out
icebp
repnz
dec
pop
rcll
jge
clc
push
mov
das
cmp
imul
sub
xor
hlt
pushf
test
sahf
jmp
iret
clc
mov
jmp
xchg
dec
lret
rclb
adc
aam
xor
cmp
mov
dec
lret
repnz
sub
sbb
lds
cld
out
and
jb
std
cmp
inc
pop
mov
pop
in
mov
jne
xchg
fs
int3
or
fdivrl
sub
ret
fsts
mov
insl
push
insl
mov
rorl
addr16
inc
inc
enter
xchg
in
js
inc
add
cs
sbb
and
or
aad
add
shrb
jo
imul
xchg
add
lahf
pop
mov
push
leave
imul
mov
test
repz
or
arpl
pop
push
and
mov
adc
and
push
bound
es
dec
mov
stc
inc
data16
repz
adcl
daa
jae
fldenv
lret
add
jne
pusha
aas
mov
cmpsb
std
decl
call
shl
or
and
cmp
into
insl
test
cmp
sbb
inc
jge
lea
lds
js
lods
idiv
cmc
push
bound
mov
js
dec
mov
jmp
xor
adc
repz
sti
movsb
add
test
sbb
lea
mov
jp
testl
mov
sti
repnz
jnp
sarb
ja
pop
call
addl
push
dec
imull
aaa
aam
cmpl
push
aas
and
leave
inc
fmull
iret
fld
js
xchg
gs
bound
lods
loopne
testb
and
ret
pusha
dec
fisubrs
lahf
inc
mov
cmp
fs
mov
xlat
and
das
adc
lods
roll
add
scas
dec
sbb
aam
pushf
loopne
inc
mov
inc
test
loope
lock
jns
aad
sub
inc
or
scas
inc
xchg
mov
daa
dec
pop
sbb
adc
cwtl
std
sub
pop
loop
loopne
jmp
jmp
lods
push
xchg
in
andb
dec
jne
pop
in
cmp
sub
iret
xor
inc
in
das
out
push
fsubs
andb
in
popa
mov
jbe
jbe
mov
cmpsl
jb
aas
movsb
dec
into
mov
bound
lds
xchg
dec
es
pop
dec
mov
nop
roll
cmpsl
loop
mov
mov
js
push
mov
mov
jmp
divb
das
pop
mul
or
dec
add
push
mov
fildl
les
xchg
movsb
mov
or
es
popw
jbe
mov
xchg
cmp
xchg
lahf
jp
lods
push
push
jns
rcll
dec
xor
bound
mov
xor
popf
sub
push
jne
dec
pushf
sbb
insl
mov
mov
fcompl
mov
in
mov
mov
xor
jno
mov
imul
and
iret
lods
push
filds
jp
pop
es
rcr
cli
mov
icebp
push
or
enter
adc
mov
mov
jle
daa
xor
xchg
cmp
dec
dec
inc
mov
adc
sbb
push
pop
cmc
and
andl
mov
and
cmp
aas
and
in
scas
dec
adc
dec
and
xchg
out
outsb
aam
ss
loope
push
pop
inc
out
fidivrl
cltd
jl
mov
push
hlt
jne
cltd
dec
leave
xchg
mov
add
jne
sbbb
jge
mov
shll
loop
push
fcoml
popf
negb
sub
rolb
jns
sbb
in
push
int
repz
stos
cmpsb
push
mov
jnp
jb
add
scas
js
jmp
int3
mov
jno
scas
fsubrs
or
and
repz
test
insl
cmp
in
xor
aad
adc
jge
imul
cwtl
loopne
cld
xchg
scas
xchg
jle
push
js
pop
dec
loop
inc
or
add
jae
stos
in
push
mov
nop
mov
push
sbb
and
adc
pop
xchg
xchg
cmpsl
dec
or
jle
cld
ret
nop
out
dec
mov
jno
sbb
xor
inc
adc
cmp
mov
mov
xor
mov
mov
es
mov
cwtl
mov
insl
jno
ficoms
sbb
in
rcll
mov
subl
xchg
pop
hlt
jg
sahf
inc
xor
inc
ret
add
cwtl
popa
dec
loop
bound
lret
xchg
xor
bound
cmp
xchg
orb
mov
mov
es
mov
cmp
sbb
pop
mov
cmpsl
adc
jp
icebp
push
adc
sub
push
dec
testb
fs
in
lahf
aas
inc
add
ja
sbb
push
in
jp
pop
cs
loope
jmp
add
rclb
or
stos
mov
pop
lock
shlb
je
ljmp
sbb
xchg
pushf
imul
fnclex
data16
in
mov
pushf
pop
adc
push
stos
je
out
adc
mov
insb
add
scas
push
je
je
or
leave
mov
dec
push
mov
dec
push
jl
and
push
test
inc
in
inc
out
sti
jge
outsl
cltd
hlt
imul
mov
cld
mov
or
popa
mov
lock
jg
cli
outsl
ljmp
add
fdivl
sti
clc
mov
lcall
js
lea
stos
test
mov
pop
cmpsl
add
pop
pop
xor
push
into
out
es
test
daa
lret
push
xor
and
out
je
pop
dec
int3
aas
and
push
xchg
pop
clc
sbb
mov
daa
xchg
and
cmp
gs
add
aaa
rcrl
push
fnstsw
pop
push
stc
je
ret
lret
rolb
mov
test
cmpsb
in
clc
aaa
bound
sub
lods
repnz
xor
dec
inc
mov
std
fstcw
xchg
adc
mov
pop
std
in
stc
cmp
and
jbe
cwtl
or
daa
notb
hlt
mov
mov
mov
lcall
shlb
push
or
adc
pop
cwtl
and
inc
cli
push
push
mov
mov
cli
mov
mov
sbb
ficoml
mov
inc
aam
mov
dec
mov
sbb
dec
mov
insb
subb
lahf
aaa
cmp
shrl
push
sbb
out
push
or
dec
js
xchg
and
jbe
xor
adc
cs
int
jnp
in
fdivl
mov
cmp
loopne
sahf
push
push
stc
lods
inc
mov
cmpsb
ret
arpl
or
or
ss
mov
xor
xchg
xchg
mov
mov
or
aas
dec
jle
js
mov
add
sti
jbe
ret
sub
inc
pop
fisttps
jbe
cli
xchg
pop
cmp
ds
push
sysret
inc
ds
pusha
lds
sub
in
mov
push
mov
adc
test
jmp
add
negb
mov
and
push
cmpsl
sbbb
or
cltd
lcall
lea
call
mov
push
ljmp
cmp
xor
in
jae
gs
sub
xchg
stos
lea
jae
ljmp
jbe
xor
add
cmp
int
push
or
jo
dec
fistpll
add
cmpsb
mov
jb
pop
rolb
lgs
push
dec
repz
inc
out
or
inc
dec
xchg
mov
in
mov
xor
xor
add
push
jmp
inc
and
int3
push
cld
aam
jmp
sub
ret
jne
dec
or
ret
inc
or
stc
out
imul
pop
or
xchg
sub
not
mov
sub
fbld
cmp
ret
addr16
push
mov
gs
in
std
push
lods
bound
and
sub
bound
out
movb
adc
daa
xchg
push
adc
leave
stc
gs
xorb
aam
fwait
ja
and
fdivrs
pop
sub
in
popf
or
icebp
adc
xchg
loopne
test
jo
bound
xchg
into
iret
inc
jo
inc
cwtl
fwait
jbe
xor
mov
iret
xchg
add
sbb
pop
cmpsl
adc
inc
roll
xor
lea
sahf
cld
xchg
arpl
cmp
cmpsb
fsubrl
dec
add
lahf
xor
mov
push
hlt
insl
sub
iret
icebp
hlt
pushf
shll
cmp
inc
mov
pop
fwait
mov
sbb
stos
xor
push
call
enter
inc
jg
xchg
mov
cmp
adc
dec
vpaddd
jmp
or
int3
cmp
mov
negb
mov
pusha
cmp
sbb
add
mov
bound
pop
ljmp
lea
lret
hlt
mov
add
sub
int3
arpl
mov
add
and
cltd
mov
mov
pushf
mov
fsubrp
xor
adc
je
fdivr
adc
rolb
in
pop
dec
push
inc
xorl
mov
push
aam
push
mov
adc
movsb
jl
dec
and
sbb
dec
jno
jne
xchg
lods
jbe
mov
jl
adc
jae
cmp
icebp
cmp
dec
scas
push
adcb
dec
sbb
fs
shrb
xchg
test
lahf
xor
pusha
repnz
cs
in
repz
xchg
xchg
xchg
pop
jb
shrb
icebp
jecxz
ror
mov
mov
fwait
jnp
mov
in
shll
mov
lcall
inc
pop
inc
test
add
frstor
pop
jecxz
mov
dec
out
les
mov
xchg
addr16
cwtl
xor
mov
inc
out
push
lcall
and
cmpsb
bound
add
imulb
cmp
fidivl
sbb
stc
jge
cmpsl
and
cmpsl
xor
gs
aaa
mov
add
scas
pop
jno
insb
out
cltd
stc
in
jne
dec
xchg
lods
pop
test
and
dec
mov
dec
fs
pop
jo
push
mov
lea
mov
int
pushf
fadds
mov
leave
push
mov
xor
arpl
adc
jo
popf
movsb
popa
lea
mov
push
ret
call
data16
jle
xor
pop
mov
push
nop
lcall
insb
dec
int3
cmp
and
sahf
cmp
push
jmp
add
jmp
std
je
jne
mov
dec
std
outsl
je
lcall
push
push
pop
test
loopne
movlps
jno
and
call
mov
ret
stc
rcll
mov
lret
jl
addr16
addr16
jb
xor
and
hlt
or
push
xlat
sub
jbe
jbe
into
call
sbb
push
movsb
mov
insb
sub
int3
arpl
fs
and
push
call
movsb
bnd
test
test
push
fadds
xor
add
cld
push
fdivl
inc
cwtl
push
pusha
xchg
xchg
push
repz
test
mov
outsb
inc
cmpsb
mov
dec
arpl
xor
dec
jno
popf
mov
pushf
push
cwtl
testb
cmpl
ja
jae
hlt
mov
lods
testl
push
add
mov
cmpsl
ficompl
int3
mov
xchg
stos
test
test
out
aad
sub
sahf
sub
data16
or
in
js
mov
cmpsl
pop
adc
shlb
pop
stos
aam
xchg
jp
lods
fistps
shrl
arpl
iret
ret
sub
inc
ds
das
in
into
jg
shrl
or
leave
loope
stos
or
scas
out
movsl
push
fcoms
inc
add
xor
lret
jp
sub
fiadds
rcrb
faddl
jl
test
call
push
xor
ret
xlat
daa
mov
add
daa
aad
xor
inc
fcomps
xor
popa
mov
inc
sbb
pop
sbb
jmp
jmp
cltd
mov
pop
push
push
pop
out
mov
out
sub
ss
orl
fidivrl
cli
rcr
popf
sub
popf
push
lcall
jmp
imul
jecxz
mov
aas
or
clc
fwait
sub
jecxz
cmpsl
and
mov
ret
jbe
inc
js
mov
les
add
or
jbe
lahf
jo
leave
outsb
pop
sbb
insb
std
das
ljmp
inc
cmpsl
ret
xchg
mov
inc
mov
push
popa
std
out
divl
out
hlt
fwait
out
mov
mov
sbb
popa
daa
insb
add
int3
mov
push
test
mov
std
ljmp
adc
jb
in
shll
cmp
or
adc
mov
fstpl
stc
xchg
fisubs
data16
add
rcr
out
mov
mov
jle
fdivs
add
jnp
add
lock
add
bound
lock
cli
xlat
jno
lods
sbb
dec
rcl
jl
add
cmp
mov
or
mov
pop
sbb
adc
mov
pop
pop
test
ds
shl
push
cmp
mov
push
mov
push
in
enter
mov
outsb
aad
repnz
inc
pop
out
xchg
dec
or
jl
push
sahf
xchg
pop
mov
ret
pop
into
pop
fldl
cmp
mov
dec
sahf
ljmp
xchg
int3
loopne
mov
jmp
inc
jnp
push
or
das
lods
mov
ljmp
in
mov
mov
fldcw
test
push
fidivs
cmp
ja
pop
adc
xlat
clc
je
inc
xchg
stos
in
lods
adc
outsb
sub
mov
iret
sbb
push
shr
rolb
fsubrp
sbb
mov
xchg
ret
mov
out
aam
iret
cmp
adc
jns
stos
pop
nop
sti
lahf
stos
xchg
xchg
jle
dec
jecxz
iret
mov
inc
mov
sub
rcll
data16
dec
sbb
loopne
out
jecxz
sub
mulb
mov
mov
stos
and
pop
jb
mov
mov
mov
sar
inc
push
xlat
xor
outsb
mov
pop
pop
pop
xlat
nop
mov
pop
xor
fs
sbb
nop
into
mov
jl
pop
inc
add
adc
lock
mov
push
fstpl
mov
sbb
dec
mov
ficomps
fldt
mov
push
cmp
shrb
push
fisubl
insb
shll
jge
mov
fbstp
jmp
sub
ret
ljmp
or
lret
or
scas
hlt
mov
dec
and
insl
push
mov
xchg
in
movsl
fists
insl
lds
addr16
mov
ret
out
xor
sub
mov
and
add
enter
fsubr
insb
repz
cmpsb
cmpsl
addl
sub
fstl
adc
jne
fs
mov
flds
out
mov
add
dec
leave
dec
fnstcw
jle
mov
scas
dec
es
fcoms
dec
xchg
sahf
mov
daa
pop
inc
scas
shlb
and
pop
insb
jo
xchg
push
xchg
push
mov
add
push
or
stos
jno
outsl
dec
cmp
ret
add
in
xor
inc
jns
popf
mov
mov
and
mov
faddl
pushf
pop
push
cmpb
insl
leave
cmpb
dec
sub
in
mov
pushf
test
mov
jmp
pusha
outsl
ret
and
das
stos
jo
pop
sbb
sbb
push
jp
iret
jne
insl
jns
sub
dec
and
or
pop
add
fisubrs
mov
add
mov
scas
jb
sub
outsb
sub
dec
testl
call
cli
jae
loopne
mov
push
xor
jmp
jecxz
dec
cwtl
sub
xor
fisttpll
rorb
adc
movsb
inc
imul
testb
or
fimull
mov
or
popf
inc
icebp
cmp
mov
negl
bound
shlb
scas
xor
rcl
cmp
cmc
inc
inc
orb
xchg
test
in
out
push
mov
in
in
leave
xchg
xchg
mov
pop
mov
scas
cmp
inc
rcrl
scas
xchg
shrl
jae
mov
fwait
mov
jo
cmpb
insb
mov
mov
mov
pop
sub
mov
repnz
and
jl
pop
int3
loope
data16
insl
jecxz
sbb
ljmp
inc
sub
cli
pop
jecxz
ljmp
mov
and
adc
insl
pop
push
sti
cmpl
dec
aas
imul
mov
lret
lods
inc
lods
add
mov
mov
mov
addr16
vpextrw
lds
jo
outsb
pop
es
inc
js
cmp
mov
cmp
out
mov
xchg
cmp
aaa
outsb
lcall
jecxz
xor
int
nop
cld
sbb
inc
mov
aas
and
rcr
cwtl
popf
es
loope
sbb
jno
mov
pop
jo
mov
pop
outsb
fsubl
mov
add
or
adcl
or
ja
ja
add
jmp
leave
lahf
es
dec
xor
cli
mov
iret
dec
es
dec
fsub
fstl
mov
xlat
xchg
jp
rcrb
out
pop
je,pn
outsb
aas
inc
xchg
sbb
or
std
xor
jns
notl
enter
mov
lods
cwtl
ret
jmp
push
pop
xor
lea
mov
mov
push
mov
xchg
mov
jge
jmp
hlt
cmpsl
jne
int3
sub
test
pop
jge
testl
cmp
movl
sub
mov
mov
out
inc
pop
ret
cmp
and
pusha
lea
push
xchg
lahf
cld
test
aaa
test
call
mov
cltd
jb
xchg
push
xor
mov
xchg
add
mov
sub
iret
push
xor
mov
lahf
movsb
push
sub
ds
outsb
jb
mov
pop
xorl
int3
cli
hlt
push
xor
and
xor
jno
mov
int
loope
mov
jo
out
enter
add
jg
xchg
repnz
cmp
repz
xchg
clc
bound
adc
bound
and
addl
dec
sub
int
aaa
cwtl
adc
pop
xchg
mull
or
mov
xchg
mov
sub
push
mov
adc
pop
leave
imul
xor
add
sbb
cmpsl
cmpsb
sub
xor
mov
nop
aad
adc
pushf
xchg
push
in
inc
test
int
or
in
imul
sbb
inc
jmp
cmp
insl
mov
sub
push
iret
adc
xor
jno
cmp
das
mov
add
jle
adc
xor
jmp
jno
inc
adc
mul
mov
adc
js
cmpsl
bound
jl
sbb
push
mov
push
daa
out
mov
popf
pop
rcll
rcrb
mov
mov
xor
divb
pop
test
sbb
xchg
rcll
ret
lods
jecxz
or
pop
cwtl
outsl
pop
jg
mov
push
and
popa
std
ficoms
xchg
or
cld
mov
jo
mov
lret
pop
xlat
and
inc
ds
xchg
outsl
push
mov
repz
add
inc
mov
or
dec
cld
pop
jbe
pusha
mov
add
sbb
pop
adc
push
cltd
xchg
fs
imul
pop
mov
clc
lea
test
les
xor
lahf
cpuid
inc
push
and
sbb
imul
inc
stos
hlt
es
mov
mov
call
loopne
dec
popf
repnz
mov
mov
or
es
pushf
gs
jg
jp
add
sbb
push
hlt
icebp
inc
adc
jle
pusha
fstpl
lds
cmp
cmc
sub
xchg
imul
das
jb
lret
scas
out
lods
sbb
test
popa
add
push
sarb
aaa
push
sbb
cmp
aaa
mov
bound
sbb
aad
mov
xor
cmp
cmp
sbb
adc
imul
and
sbb
shrb
fcmovnbe
outsb
into
cmp
add
popf
aaa
fdivrl
gs
xchg
mov
lods
out
xor
mov
push
or
scas
sub
fisttps
clc
xor
xor
cmp
adc
movsb
dec
inc
mov
out
xor
sbb
dec
adc
pop
incl
jp
sbb
xchg
dec
add
addr16
testl
push
clc
das
dec
lods
outsl
lcall
dec
sub
ret
loope
nopl
add
pusha
sub
popa
xchg
pop
in
push
fwait
daa
mov
add
and
push
sub
mov
add
fadd
xchg
pushf
mov
fisttpl
push
cmp
es
mov
test
cmp
repz
jb
add
repz
call
mov
inc
int
xchg
popa
dec
push
stos
and
xor
dec
mov
jmp
insb
mov
gs
xor
inc
jg
subb
add
fnstcw
clc
lock
je
mov
adcb
test
cwtl
sbb
jmp
lret
push
cmp
ficomps
imulb
xor
pop
int3
push
push
cmp
adc
inc
sbb
stc
out
mov
out
xor
and
fisttpll
push
outsb
push
mov
imul
xor
loop
or
mov
mov
mov
lods
add
lret
mov
mov
xchg
movsb
enter
stos
inc
pop
dec
loopne
lea
cmp
lods
in
aaa
pusha
mov
lret
and
inc
mov
jns
popa
stos
add
sahf
lea
push
add
cli
and
cs
xchg
cmp
pushf
repnz
and
pushf
pop
and
mov
push
frstor
dec
xchg
push
js
ja
int3
mov
idiv
add
out
dec
mov
mov
sbb
inc
incl
loope
push
ret
sbb
gs
jp
inc
inc
pushf
jecxz
jge
cmp
fldt
shlb
pusha
out
inc
sbb
add
add
mov
mov
sub
xchg
adc
cmp
push
jae
inc
push
aaa
jnp
nop
dec
fsubrl
xor
mov
sub
and
jo
or
pop
or
lea
jbe
pop
push
je
les
mov
mov
incl
test
cmp
mov
push
adc
xchg
mov
xlat
jbe
loopne
mov
adc
sti
pop
movsl
ljmp
loopne
ret
in
rcrb
fists
mov
int3
fldl
cmpb
pop
adc
mov
push
shrl
push
je
xchg
jne
lret
inc
xchg
mov
adc
pop
test
cmp
cmp
add
daa
push
sbbl
add
test
movsl
test
inc
add
and
add
call
add
and
pop
in
jb
dec
dec
scas
mov
or
pop
add
push
out
pushf
icebp
inc
and
sbb
mov
jp,pn
adc
rclb
shl
xchg
push
jne
mov
cld
daa
enter
adc
mov
sub
sbb
mov
jbe
out
sbb
shl
jge
inc
lock
xor
into
aaa
or
rcr
push
push
add
and
popa
xchg
xchg
adc
inc
mov
sub
loopne
mov
jae
cmp
sub
mov
test
inc
jg
inc
mov
xchg
cmp
outsl
or
into
mov
ret
xor
jne
xchg
push
xchg
or
mov
jns
add
or
push
fistl
xor
inc
ds
jnp
mov
pop
push
sbb
sbb
ret
jae
sbb
xchg
ds
popa
popf
add
ficoml
xchg
push
imul
push
dec
neg
ss
xchg
fcoms
ret
outsb
out
sahf
cli
sahf
nop
mov
fnstsw
mov
dec
in
in
add
enter
fcomps
adc
xchg
dec
sbb
pop
arpl
aas
adc
or
stos
pop
jne
test
sub
mov
das
pop
adc
rcrl
adc
out
xor
aas
inc
add
push
imul
stos
mov
icebp
dec
data16
push
push
into
fs
sbb
loopne
cwtl
sti
mov
dec
movsb
and
iret
shrl
fildl
adc
adc
in
daa
cmp
aad
enter
mov
xor
cli
imul
jle
cmp
leave
ret
mov
into
cmp
gs
mov
insl
mov
lods
js
addr16
popf
cmc
pop
outsl
fs
repnz
movsl
enter
push
cld
sarl
or
sbbb
cld
and
addr16
mov
add
jae
cmp
dec
or
xchg
test
in
inc
xorl
xchg
mov
and
out
aad
out
fcmovbe
lret
xchg
ja
push
shrl
fwait
xchg
push
inc
mov
push
push
leave
push
mov
add
cmc
ret
xchg
mov
fcoms
test
and
mov
pop
pushf
clc
sahf
rclb
loop
xchg
xor
call
lds
ja
jbe
cmp
or
pop
mov
call
mov
ret
pop
push
test
leave
dec
or
push
je
xor
xor
lcall
push
pop
inc
repnz
xor
mov
scas
rolb
fdivs
add
clc
sbb
cmp
or
sbb
imul
dec
mov
pop
inc
push
sub
enter
mov
aas
dec
jmp
sbb
popa
out
cmpsb
mov
ret
and
adc
addb
arpl
faddl
push
sub
es
sub
mov
jbe
repz
out
push
sbb
pop
outsl
mov
inc
test
nop
mov
arpl
sub
aaa
and
or
mov
xor
call
enter
cmp
xor
xchg
xor
outsl
jg
xor
out
mov
and
enter
stc
fwait
jecxz
cmp
mov
sbb
aas
shl
shrl
push
rol
fldenv
and
dec
outsb
inc
ret
insl
nop
scas
push
cmpsl
and
imul
mov
clc
repnz
leave
adc
orl
mov
jp
mov
test
sub
insb
xchg
cmp
jo
mov
inc
test
ret
stc
mov
pop
jb
enter
pop
aas
ss
jmp
repnz
and
stos
cmp
or
or
popa
pop
mov
jmp
lret
jb
outsb
nop
call
or
or
mov
mov
pop
lahf
les
cltd
mov
and
mov
add
mov
xor
icebp
cmc
push
sar
cld
loop
adcb
negl
in
mov
out
ljmp
inc
mov
sub
in
push
dec
mov
ljmp
jmp
lods
movsb
ss
jns
xchg
cmp
movb
fbld
jo
push
jg
addr16
xchg
pop
dec
iret
stc
push
sub
jl
cmpsb
dec
jge
pop
mov
cmp
mov
int
mov
cs
pop
in
dec
pusha
lahf
push
cmc
js
push
addr16
pop
enter
jmp
pop
out
sub
xor
pushf
sub
xor
pop
scas
cmp
into
dec
das
fdivrs
and
rolb
outsb
fistps
mov
push
in
cmp
xor
mov
xchg
xchg
icebp
dec
add
sbb
arpl
cmp
jmp
dec
push
outsl
jne
arpl
stos
xchg
mov
shll
dec
movsl
xlat
repz
ja
lods
es
push
add
mov
mov
outsb
xchg
cmp
lea
pop
dec
bound
adc
sub
out
sub
sbb
xlat
sarl
sub
sbb
jae
cltd
stos
xchg
push
stos
pop
aas
push
fiaddl
and
lss
fs
jmp
sbb
push
insl
inc
mov
pop
mov
imul
in
push
lods
add
clc
mov
lds
pop
jo
push
lock
loop
cmp
cmpsb
or
and
push
insl
adc
lea
xor
mov
lcall
and
cmp
push
ror
mov
jecxz
iret
mov
loopew
shrb
dec
dec
data16
xchg
mov
or
mov
xchg
jne
in
xor
xor
stos
rcrl
pusha
repnz
push
sarb
adc
xor
iret
or
sub
stc
push
mov
popa
or
cmpsb
lock
stos
mov
inc
xor
std
and
shrl
sub
inc
lahf
fadd
cmpsb
jnp
push
mov
lods
lahf
or
cmp
sbb
rcll
std
xchg
pop
xchg
jae
aas
jne
sahf
popa
jmp
cmp
mov
stc
add
adc
add
push
iret
xchg
inc
notl
subl
hlt
iret
adc
movsb
sub
xchg
dec
jecxz
push
lret
leave
mov
dec
pop
testb
jae
lea
es
and
add
mov
aad
or
sbb
mov
push
push
clc
fcmovnu
lds
and
cmp
add
mov
and
cmpsl
call
push
and
sub
dec
in
cmp
xlat
jl
stos
jb
daa
jb
push
out
and
cmpsl
rorl
aam
mov
roll
or
shlb
dec
lret
mov
stc
push
popa
cmp
adc
sti
push
dec
jl
adc
insl
hlt
or
insl
xchg
cmp
int
mov
fwait
out
xchg
loopne
mov
push
mov
cmp
mov
pop
dec
insl
lea
rcrl
rorl
xchg
adc
add
inc
jmp
and
movb
jl
pop
inc
jo
mov
push
xor
fsubrp
and
jno
in
or
addl
cli
jo
mov
insb
rolb
dec
add
out
movsl
sub
fisttpl
in
arpl
insb
sub
mov
xor
stos
pop
pop
inc
in
mov
sbb
nop
jmp
xorb
or
cmp
xchg
xor
pop
jae
data16
fildll
je
sbb
add
ss
push
imul
loope
jge
sub
and
test
aas
and
xor
fiaddl
les
pushf
addr16
sahf
cmp
incb
idivl
cs
out
and
mov
mov
inc
lahf
push
mov
pop
lods
cmp
cli
and
sbb
lret
adc
aad
lods
push
scas
cmpsl
cltd
arpl
sbb
mov
loopne
movsb
push
pop
test
push
inc
push
popf
pop
loope
adc
movsl
stos
aas
pop
push
jle
and
push
adc
inc
xchg
dec
ret
mov
mov
push
mov
lds
fs
mov
dec
fnstsw
adc
xor
xchg
imulb
adc
adc
sub
fistpl
cld
lods
mov
idivb
adc
mov
and
pop
iret
jl
inc
push
nop
xchg
push
bound
push
fcoms
ja
jnp
add
lock
adc
fistps
inc
sub
or
testb
and
cmp
push
test
outsb
jp
push
adc
fildl
xor
mov
mov
repnz
or
adc
aad
sub
loope
xchg
pusha
ja
mov
push
test
jae
mov
cli
lea
and
dec
inc
gs
out
cmpsb
leave
je
adc
lods
aad
je
test
jmp
in
fdivr
mov
subl
test
mov
out
xor
fwait
cmpsb
pop
pop
fwait
add
out
nop
sbbl
mov
lret
mov
repz
cmp
lgs
aam
lods
cltd
jnp
jns
inc
sub
fcmovu
jae
mov
pop
sbb
and
adc
leave
loope
dec
test
push
mulb
shll
stos
mov
in
jge
jnp
pop
incl
push
xchg
sti
dec
mov
and
inc
out
mov
pop
fdivs
leave
or
fcompl
adc
ss
roll
xorb
push
in
add
inc
enter
cwtl
cmp
out
sarl
dec
fmull
imul
jle
inc
xchg
aad
in
mov
stos
ljmp
lahf
pop
mov
stos
std
jecxz
xchg
jo
push
or
mov
aas
mov
and
pop
fisttps
bound
ljmp
call
sbb
mov
add
xlat
int
int3
ret
and
add
out
andb
std
add
push
cld
xchg
or
outsl
push
test
cwtl
sub
or
adc
stos
dec
lahf
js
pop
test
movb
pop
mov
jb
pusha
cmp
push
add
mov
xchg
lret
int3
sti
fwait
ret
jecxz
pushf
testl
sahf
inc
mov
iret
aas
mov
arpl
insb
out
data16
out
iret
pop
pop
stc
sub
nop
sbb
or
push
test
test
test
mov
in
ss
mov
insl
lea
sbb
adc
leave
icebp
push
dec
cmp
and
push
std
xchg
adc
ret
inc
sub
fildl
push
into
add
mov
or
pop
loopne
push
call
fistl
int
leave
bound
mov
stos
in
and
dec
popf
scas
push
out
xlat
sub
jb
loopne
cli
stos
dec
sub
cmp
lahf
ss
dec
dec
nop
push
mov
aam
mov
ficompl
lds
jge
mov
xchg
push
pop
jl
or
xchg
pop
loope
xchg
ljmp
mov
cmp
out
in
push
push
push
test
xlat
sbb
lahf
xchg
das
cmp
cmc
push
fisubrl
repnz
insl
push
inc
cmp
push
cmp
push
fstpl
jge
je
jb
sbb
je
xchg
add
mov
mov
call
cmp
pop
ljmp
ss
clc
sub
xchg
aam
adc
jle
xchg
in
or
xchg
jbe
push
in
lods
leave
push
hlt
insl
mov
arpl
shl
daa
sbb
push
mov
fadd
lods
fisttps
sbb
xor
xchg
adc
sub
jmp
cmp
jb
shr
imul
pop
popf
mov
mov
jg
jno
jl
xchg
dec
in
or
jae
push
in
sub
sbb
aad
ss
sbb
add
jmp
outsb
cld
sbb
outsb
cmp
inc
das
dec
shrb
rcrl
mov
mov
fistpll
fs
aad
dec
cmpsl
sub
mov
or
stos
sti
aaa
xchg
dec
mov
mov
es
or
sarl
fbld
insb
ss
sbb
pop
dec
add
push
bound
cmpsb
cs
dec
mov
pop
mov
cmpsb
imul
mov
mov
mov
mov
and
xchg
cmp
xchg
mov
mov
inc
mov
inc
out
push
test
push
lahf
or
ljmp
movsl
fisttpll
sbb
mov
lahf
pop
std
xchg
ficompl
adcl
adc
sbb
push
sbb
or
das
adc
pop
subb
es
imul
mov
icebp
mov
cmpb
sub
test
pop
scas
punpcklbw
ret
stos
or
aaa
cltd
into
xor
aam
dec
js
or
das
cmp
sub
jo
xor
out
xchg
pop
and
mov
dec
fnstenv
mov
ret
add
jbe
xor
fstps
imul
loop
dec
sbb
ret
mov
pop
mov
sbb
fwait
jae
rclb
test
or
das
sar
pop
jae
cmp
xor
jnp
and
mov
test
subb
lcall
push
test
jae
mov
sub
scas
push
shrl
ret
loop
xchg
jnp
into
test
mov
push
or
cmp
mov
xchg
sti
out
sahf
jecxz
shl
xchg
xchg
lds
push
sub
mov
frstor
sub
addl
xor
dec
stos
sbb
inc
mov
xchg
gs
mov
adc
adc
mov
pop
data16
fldcw
lods
das
cmpsb
add
jl
mov
xchg
push
jae
add
inc
or
je
fmul
pusha
push
imul
inc
adcl
jmp
jle
inc
adc
sti
in
nop
cmpsb
push
and
das
nop
movsl
dec
mov
js
jmp
jmp
scas
fstpt
in
test
sub
popl
jb
js
out
repz
cmp
rcrb
inc
mov
cmp
inc
leave
mov
mov
nop
notl
fidivrs
xor
mov
aaa
mov
mov
dec
and
outsb
mov
cmp
mov
xor
jle
cmpsb
leave
pop
cmp
jae
cmpsb
nop
xchg
sbb
pop
pop
pop
xchg
faddp
mov
xor
nop
sbb
leave
clc
or
xor
jecxz
push
sti
repz
cltd
notl
cwtl
outsl
mov
push
cmp
clc
fldenv
call
loopne
xor
mov
je
fcompl
xchg
insl
jo
cmp
repz
sbb
cltd
outsl
add
push
push
lret
pop
lcall
mov
pop
push
xchg
dec
stos
jbe
outsb
das
ljmp
cli
test
shlb
hlt
xlat
and
add
test
sub
adc
push
daa
add
pop
pushf
fs
test
addl
test
ret
push
mov
insb
rcrl
mov
mov
fs
hlt
pushf
jbe
fistpll
add
fildll
cs
fidivl
xchg
or
dec
ret
int
push
cmc
stc
xchg
or
mov
sti
add
adc
inc
sub
xchg
pop
lea
shll
inc
rolb
lock
mov
fimuls
pop
push
jbe
jb
ds
sbb
jbe
mov
test
test
enter
jne
jecxz
movsb
stos
mov
pop
dec
lods
decb
lret
setae
mov
mov
jg
pop
lret
sub
pop
mov
in
dec
mov
xchg
call
push
int
inc
cmp
aam
xchg
jnp
jmp
mov
xchg
sub
push
ss
cmp
sbbb
into
pop
mov
stc
xchg
bound
xor
add
jo
mov
cmp
out
out
lods
add
cltd
inc
enter
out
int
lods
cli
mov
and
cmp
in
repz
mov
cmc
lret
ret
xchg
mov
inc
add
sbb
int
pop
movsb
jns
cmp
lds
cmp
cmp
hlt
and
push
stos
xchg
push
outsb
pop
fsubrs
inc
scas
mov
fld
mov
pop
loop
xchg
fmuls
and
sub
fwait
sbb
stos
mov
arpl
lcall
mov
into
mov
or
cmp
loope
call
fstpt
lds
inc
nop
lcall
push
jp
dec
mov
lret
out
xor
addr16
fildll
dec
push
hlt
inc
mov
sub
push
repnz
mov
mov
fldt
add
lock
push
div
sbb
adc
pop
ret
dec
sub
adc
xor
xlat
fadds
mov
hlt
mov
repnz
push
in
mov
add
in
dec
lock
sub
jecxz
orb
nop
into
outsl
insb
arpl
jp
dec
add
inc
into
test
push
rcr
add
push
xchg
fucomip
addb
xor
je
sbb
inc
jmp
jae
xor
lcall
movsl
sbb
and
dec
sub
dec
insl
xchg
and
shrb
lret
sub
cmp
cld
xchg
and
aas
pop
lds
push
pop
test
mov
xchg
rcll
or
repz
cmp
push
insl
lea
mov
xchg
arpl
sub
sub
jnp
push
lret
mov
jmp
aas
push
rclb
pop
mov
ret
jae
mov
daa
jmp
xchg
or
mov
loop
push
sub
cmp
je
mov
call
mov
ret
in
adc
lcall
mov
xchg
pop
dec
out
scas
in
xchg
mov
fisttps
jnp
ret
jnp
pusha
loope
leave
data16
decb
popa
mov
inc
mov
push
fs
cli
insb
lret
mov
cmp
std
cmp
jns
mov
test
fwait
stc
add
movsb
movw
sub
jns
xorl
shl
cmp
or
mov
fildl
in
fxch
jg
pop
mov
inc
mov
sbb
lock
mov
into
jnp
or
inc
lods
lgdtl
lock
ret
dec
outsb
daa
jae
movsl
test
lret
jg
push
dec
push
add
ret
add
jecxz
notb
cmp
testl
addr16
adc
in
movsb
pop
adc
dec
lods
fidivrl
jl
pop
push
call
aad
xchg
repz
sub
mov
push
jecxz
mov
inc
mov
dec
adc
in
adc
mov
xchg
inc
inc
and
mov
les
lock
fcmovu
stos
xor
adc
sub
adc
fdivrs
dec
dec
addr16
push
enter
pop
push
jne
lds
lods
aad
jl
insl
nop
adc
js
mov
das
cwtl
divb
xorl
scas
xor
je
and
mov
push
and
xchg
dec
pop
push
sub
inc
out
popf
ret
adc
push
xchg
fists
jne
fists
inc
cltd
das
ficoml
into
lds
mov
inc
jle
push
xchg
loop
fists
pop
rcl
fistl
pushf
lcall
mov
xor
add
test
dec
mov
loopne
jp
sar
pop
testb
inc
cs
cmp
mov
scas
scas
and
xlat
fs
and
pop
dec
nop
in
mov
ja
mov
sbb
push
dec
in
cli
xchg
or
push
enter
inc
and
mov
jo
mov
sbb
xlat
xor
jnp
test
insb
mov
sub
adc
push
sbb
scas
or
jg
cmp
pop
xor
pop
rcr
hlt
js
bound
cld
push
inc
dec
rcrb
stc
mov
xchg
je
sti
xor
mov
mov
inc
add
adc
hlt
xlat
push
in
and
pop
sbb
stos
cmp
stos
lret
pop
dec
cmp
mov
push
es
repz
or
and
movsb
rcrl
stos
push
and
loop
sahf
jl
dec
fcmovb
rcll
stos
inc
xor
jno
sub
ficompl
push
push
xor
sub
stos
popf
movsb
stos
xchg
test
dec
lret
out
or
adc
popa
out
jns
mov
scas
xchg
sarb
lods
add
cmpsb
inc
xorb
lcall
loop
xlat
pop
mov
fsubr
xor
mov
lods
imul
ljmp
xchg
lcall
sbb
sub
mov
sbb
or
add
fldenv
and
sbb
or
jp
jmp
adc
push
push
or
gs
and
and
movsl
xor
imul
sub
sub
adc
cmpsb
adc
mov
lock
or
xlat
and
loope
adc
mov
sub
fwait
popa
lahf
fiaddl
sti
sub
mov
scas
and
bound
mov
dec
mov
add
pop
cmp
jmp
imul
lahf
inc
rcrb
push
sbb
fisubrs
int3
sbb
popf
adc
jecxz
enter
sbb
jmp
ds
pop
bound
stc
mov
sarb
imul
inc
sub
aam
jecxz
sub
dec
outsl
adc
mov
lea
and
inc
xor
ret
and
mov
mov
addr16
js
fs
sti
push
xchg
and
sbb
pop
push
repnz
sar
sub
inc
add
movsl
xor
pop
sbb
push
cld
or
notb
lods
dec
jecxz
stos
cmp
pushw
dec
xor
clc
sub
sub
dec
int
stc
lahf
pop
lods
ret
jbe
and
xor
jno
mov
ss
adc
sbb
dec
push
push
fidivl
jo
mov
xchg
sbb
sahf
push
adc
xor
out
push
xchg
dec
into
leave
jbe
xchg
mov
xor
mov
sbb
dec
and
add
or
push
loop
dec
mov
aas
jnp
mull
shr
push
shlb
add
adc
lret
enter
dec
ficomps
adc
cmp
in
push
sub
fistpl
ficomps
incl
xlat
stc
imull
loope
push
adc
test
xor
mov
pushf
push
sub
out
xchg
in
mov
pop
out
lea
mov
ret
sbb
into
sbb
adc
mov
jle
inc
fimull
insb
scas
pop
mov
rcrb
lock
pop
imul
mov
xchg
cwtl
scas
cmp
rorl
hlt
stos
jae
mov
mov
nop
fimull
or
stos
sub
sbb
sbb
lahf
mov
xchg
inc
xor
popa
loop
pop
lods
and
sahf
rcll
aas
xor
sbb
jne
rcr
sub
xchg
xchg
das
cmc
mov
dec
push
dec
jb
pop
iret
testl
jb
inc
aad
ljmp
lret
fsubl
das
mov
pop
mov
icebp
scas
dec
popa
and
pop
sub
jg
inc
mov
jb
lods
adc
dec
push
nop
fldl
fs
daa
mov
xchg
inc
mov
mov
cmp
push
push
popl
inc
fbld
inc
jns
xor
mov
push
cmc
inc
pop
jo
orl
xlat
cmp
adc
jno
paddw
xchg
xchg
aam
popa
mov
test
jecxz
and
pop
enter
scas
mov
scas
outsl
fnstenv
mov
mov
xchg
insb
punpckhdq
mov
movsb
movsl
pop
dec
es
xchg
mov
push
loopne
mov
or
lcall
pop
jno
outsb
pop
arpl
inc
mov
jbe
xchg
rcrb
xor
pop
out
adc
mov
pushf
xchg
stc
cmp
cltd
fcomip
add
int3
sbb
ljmp
cwtl
sbb
lods
xchg
aas
leave
stos
jno
cmc
push
loope
jmp
lahf
push
push
scas
test
cs
or
mov
jge
hlt
xchg
rcll
inc
jge
popa
jge
add
lds
out
ret
shll
xchg
and
xchg
lods
lds
mov
push
pop
mov
das
fucomi
sbb
movsl
mov
push
or
adc
leave
xor
cli
and
sub
xchg
fcompl
inc
data16
adc
pop
adc
pop
jp
cmp
out
arpl
nop
int3
ror
push
mov
dec
mov
ror
push
push
adc
xor
mov
fsubr
subl
addr16
mov
ja
shlb
loopne
popf
mov
enter
lcall
stos
cmp
xor
setbe
movsb
pop
mov
aam
xchg
adc
mov
shlb
mov
fcomps
clts
les
sbb
ljmp
xor
xchg
jg
and
add
loopne
aaa
test
adc
mov
loop
arpl
pusha
cmp
shrl
mov
hlt
cmp
xchg
enter
jmp
fs
xchg
shll
das
fwait
inc
add
inc
rorl
sbbl
test
xchg
xchg
in
subl
push
adc
cmp
mov
movsl
jns
aam
test
jnp
es
aam
push
jno
insl
imul
push
xchg
mov
sub
fistpl
fistps
testb
mov
fiaddl
sbb
imul
mov
mov
jnp
xchg
pop
push
pop
jmp
cld
ds
or
or
xchg
test
sub
mov
sbb
mov
shrb
lods
sub
rol
cs
adc
cmp
and
mov
inc
or
adc
jmp
icebp
mov
add
add
scas
addl
outsb
xchg
rcll
imul
mov
out
mov
add
insl
adc
xor
pop
adc
or
das
xor
hlt
pusha
testb
ljmp
add
pop
pop
cmc
enter
jge
fcomps
sbb
push
jno
pushf
jmp
fsubl
cld
mov
lea
in
xchg
push
and
leave
iret
outsb
sub
mov
call
pop
jae
jmp
mov
mov
js
xlat
cmp
cli
xor
dec
cwtl
and
js
mov
inc
dec
mov
dec
add
popa
dec
mov
sbb
bound
inc
and
and
pop
loop
cmp
mov
or
scas
xchg
js
nop
jo
loope
stos
jae
into
mov
cmp
and
popa
in
clc
scas
in
xchg
test
push
inc
mov
mov
and
ret
cwtl
xor
xchg
bt
lds
adc
je
jbe
js
adc
ss
fcoms
pop
test
std
fsubrl
cmp
and
xchg
push
jge
gs
adc
xorl
ret
fmull
push
in
clc
adc
rorb
pop
stos
das
nop
nop
jnp
pushf
dec
dec
outsb
jbe
cltd
popf
dec
jae
fidivs
mov
xchg
xor
pop
push
mov
dec
dec
sub
dec
ss
dec
sbb
xchg
shrl
push
stos
pop
loope
xor
lahf
sub
into
cs
jge
mov
lret
lds
call
xlat
and
pop
leave
clc
inc
insl
out
fs
movsl
add
sbbl
lock
jp
fldpi
push
clc
push
in
pop
mov
xchg
jnp
outsb
call
pop
fidivl
mov
adc
jge
pop
aas
into
pop
pop
cmpsb
and
cmp
pop
mov
mov
cmp
pop
add
mov
rcl
push
dec
iret
out
test
es
pop
xor
test
dec
jbe
push
adc
imul
adc
and
popf
ret
rcl
ss
xor
icebp
aas
mov
xchg
rcpps
mov
xchg
insl
add
xchg
mov
push
out
lahf
repnz
or
jbe
adc
add
ja
fdivs
push
push
mov
das
sub
int3
sbb
inc
sbb
dec
and
sub
mov
lock
jl
xor
sbb
jae
add
mov
mov
sub
xchg
pop
pop
jbe
push
fnsave
fisttpll
fcmovbe
repz
cmp
mov
jns
push
dec
xor
mov
loop
rcll
loope
bound
xchg
jmp
sbbb
sbb
push
das
rcrb
xor
lahf
adc
aad
aaa
dec
je
movsb
mov
adc
mov
repnz
mov
fmuls
cld
adc
xchg
aad
sub
cmp
inc
jno
imul
jnp
std
mov
push
inc
fwait
dec
test
jecxz
adc
inc
push
push
in
dec
aaa
mov
xor
mov
xor
fcomi
push
mov
imulb
add
and
cmp
int
into
out
dec
mov
fxch
pusha
mov
push
or
jo
jle
or
or
and
cs
pop
subb
shlb
mov
fnstenv
fsubrp
push
inc
mov
sub
gs
data16
push
imul
mov
or
imul
inc
and
dec
sbb
lret
dec
ss
cmp
outsl
cmp
inc
ret
and
je
and
hlt
sbb
adc
test
xchg
adc
add
lods
pop
ror
into
inc
rcl
aas
jo
jae
inc
inc
xchg
fimull
jae
out
mov
mov
xchg
push
and
pop
sbb
hlt
dec
pop
imul
imul
add
je
jg
inc
cmp
xchg
or
cld
ljmp
sbb
lock
or
iret
push
xchg
dec
pushf
lahf
inc
lods
ret
dec
push
test
add
cmc
mov
xor
mov
adc
mov
outsb
add
pushw
sti
pop
push
add
xchg
inc
cli
pushf
add
es
nop
mov
xchg
imul
stos
sar
mov
lret
dec
xor
mov
outsl
push
lods
xchg
data16
sub
inc
cmpsl
aam
jb
gs
fsubl
mov
mov
mov
fistps
test
leave
cmp
cmpsl
lcall
mov
popa
sbb
lcall
ja
aas
cmp
and
fs
repz
inc
test
xchg
loope
or
mov
sub
jns
icebp
xchg
insl
xor
dec
mov
push
pop
mov
mov
sbb
cmpsb
xlat
das
addr16
adc
xchg
aad
arpl
mov
jp
jle
push
sub
nop
mov
aaa
and
shll
dec
push
add
fnsetpm(287
clc
ss
add
je
push
test
iret
and
add
sub
pop
hlt
cmp
pop
dec
dec
or
cltd
outsb
xchg
inc
push
les
sbb
pop
xchg
push
cmp
cmp
jae
jne
and
rol
ret
jge
xor
loope
pop
pop
pop
test
xchg
xchg
into
out
rep
popa
mov
mov
jnp
es
ret
lods
mov
inc
adc
and
jnp
mov
xchg
sub
pop
sahf
add
push
fcoml
dec
jmp
fisubs
jl
inc
sub
lahf
cmp
jp
xchg
sbb
jge
mov
cmp
or
scas
xchg
fmulp
xor
js
dec
push
inc
test
in
xor
xchg
add
scas
cld
xchg
push
push
mov
pushf
bnd
loope
pusha
pop
call
mov
stos
sub
imul
add
xor
imul
push
sahf
filds
mov
fwait
push
push
ret
ss
in
ds
daa
pusha
cmpsb
bound
sub
rcrb
xchg
sbb
testl
push
cld
mul
xchg
sub
sbb
fidivrl
iret
or
or
fdivp
jl
in
mov
dec
inc
xor
jecxz
mov
adc
inc
or
pop
addr16
cmp
inc
popa
sbb
test
shll
xchg
test
dec
or
mov
out
jae
dec
push
jns
sbb
and
andl
mov
sub
xchg
aas
xor
das
xor
ja
inc
sarb
jecxz
movsb
xor
repnz
sahf
lret
pop
pop
xchg
ficoml
pop
push
mov
sbb
push
adc
cmp
int3
adc
lods
adc
jp
jb
sub
bound
push
out
xor
or
push
pop
mov
push
pop
jecxz
inc
outsb
pop
aad
notl
int3
xchg
push
adc
mov
test
popa
cmp
ret
jp
jne
add
shrl
and
add
addr16
lret
jo
push
icebp
pand
int3
pop
pop
loopne
push
or
idiv
xor
in
xlat
aam
leave
rol
mov
adc
xor
rcl
xchg
movl
sbb
jmp
xchg
fsubrs
in
sbb
or
mov
xor
pop
jp
push
xor
add
je
out
inc
lds
and
ds
ds
push
jecxz
mov
pop
hlt
roll
mov
arpl
xor
mov
fwait
dec
add
data16
pushf
outsl
adc
jno
mov
mov
in
pop
mov
sbb
mov
hlt
imul
xchg
fstpl
dec
mov
ret
int3
pop
inc
mov
dec
shlb
xchg
fsubl
or
shll
push
push
pusha
subb
scas
cltd
mov
sbb
insl
fwait
out
mov
mov
mov
xor
adc
cltd
jecxz
xchg
aad
sahf
mov
stos
xchg
lret
xchg
je
xchg
push
cmp
addr16
out
xor
sbb
ds
inc
sbb
lret
adc
xlat
dec
push
xor
lds
sbb
mov
loopne
mov
aam
je
fidivl
add
xor
dec
addr16
cmpsl
mov
lds
xchg
or
or
pop
jmp
push
cmpsl
out
js
pop
xor
mov
dec
fdivl
test
cli
push
push
idiv
pop
xchg
pop
in
lea
jp
adc
add
mov
inc
and
xor
push
cmpb
xchg
and
rclb
dec
inc
cltd
inc
clc
mov
jp
mov
mov
mov
pop
push
sub
sbbl
add
js
jbe
mov
stc
lock
loopne
xchg
ja
xchg
adc
bnd
mov
jae
pop
dec
push
popf
je
cmp
push
push
cmp
sti
sub
sbb
outsb
mov
push
mov
sub
out
xor
mov
jecxz
jo
out
or
xchg
leave
out
push
dec
outsb
ret
imul
pop
sahf
mov
popf
mov
adc
adc
arpl
xor
pop
push
push
jmp
xor
push
sub
ljmp
cs
xchg
test
push
daa
inc
stos
xor
mov
loop
pusha
in
aam
test
aas
pop
adc
push
xchg
mov
mov
xor
cmp
xor
lahf
xor
lock
xor
insb
mov
mov
xchg
lock
mov
sub
mov
daa
daa
in
push
mov
mov
and
mull
adc
sub
lret
jns
fwait
and
jl
repz
push
xchg
pop
lock
cmpsl
testl
jnp
adc
push
ss
push
adc
adc
les
fidivs
test
fists
mov
test
subb
mov
movsb
jbe
mov
mov
pusha
or
xlat
loopne
push
imulb
out
movsb
clc
push
cmp
cmpsl
leave
push
cmp
pop
push
or
jecxz
lods
push
loop
loope
jno
push
add
and
xchg
sub
mov
iret
mov
jg
adc
push
pop
push
cmp
mov
inc
or
cmc
stos
loope
lods
pop
xchg
imul
stc
cmp
add
pop
mov
lret
push
cmp
lret
inc
pushf
pop
repnz
sahf
in
scas
in
leave
gs
ja
loop
pop
mov
test
ljmp
mov
mov
mov
addr16
mov
leave
pop
jl
jne
mov
loopne
sti
insb
shll
sub
push
push
mov
mov
loopne
pop
jmp
mov
xchg
xchg
sub
loope
call
mov
movsl
xor
icebp
out
lcall
push
adc
rcr
pop
es
out
gs
mov
xor
push
jnp
mov
icebp
xchg
push
lret
add
lock
in
mov
cld
pop
xor
popf
addr16
repnz
fldl
lea
js
or
lret
imul
imulb
xchg
cmp
mov
push
pop
cld
popa
and
sub
loop
jle
loope
mov
add
sub
adcb
jp
cmovns
pushf
cmp
jle
sub
jle
and
mov
int
xchg
or
or
test
call
das
dec
fiadds
stos
paddb
jle
sar
and
xor
arpl
std
je
push
mov
jge
lods
icebp
stos
sub
xlat
in
stc
jl
sahf
jmp
sbb
adc
xlat
pushf
fwait
xchg
xchg
jbe
xchg
sub
and
mov
stos
add
cmp
subl
loope
push
mov
fs
movsl
jl
push
inc
xchg
mov
inc
jae
jecxz
std
rcll
cmp
dec
in
js
inc
scas
cmp
out
xchg
gs
cld
fucomp
mov
pop
jae
xchg
adc
push
mov
push
ds
lahf
mov
sbb
dec
iret
fdivr
pushf
and
ffreep
or
shlb
iret
push
mov
aam
pop
jbe
xor
stc
popa
cmp
insb
mov
dec
add
ret
out
adc
pop
jo
inc
sarl
xchg
xlat
jle
push
shld
in
inc
lea
cmp
shrb
lock
in
mov
fidivrs
jnp
sti
cld
sub
sbb
pop
fcmovne
sub
rcrb
aam
sub
sbb
popa
fs
inc
mov
into
cmpl
lods
cmpxchg
sbb
cwtl
push
call
stos
sahf
decb
incl
or
dec
mov
xchg
inc
xor
mov
inc
adc
test
jo
iret
insb
outsb
pushl
push
fdivs
imul
mov
add
loop
in
inc
outsb
aas
jb
push
adc
dec
fwait
inc
push
mov
filds
ja
lret
or
repnz
xchg
fs
into
jns
inc
adc
xchg
xchg
sub
push
bnd
and
stos
xchg
in
imul
sbb
mov
mov
mov
dec
add
pop
into
cld
adc
pop
sub
lea
add
inc
mov
sub
push
mov
xchg
dec
adc
pop
pop
enter
loopne
aad
adc
xor
adc
pop
movsl
push
daa
xor
out
sbb
adc
lea
and
fimull
call
inc
insl
movaps
hlt
fcompl
sbb
lret
and
sub
xor
and
add
bound
lret
sbb
xor
fldcw
outsl
lahf
cltd
psraw
lret
cmp
dec
icebp
mov
inc
push
cmp
imul
enter
dec
fldcw
pop
minps
aam
pop
call
jmp
and
add
lea
xchg
dec
loopne
std
shrl
mov
sub
int
leave
dec
xchg
add
pushf
lret
mov
pop
repz
inc
cld
and
inc
into
sbb
stos
mov
repz
cmp
popa
sbb
enter
or
push
or
subb
cmc
pop
pop
cwtl
mov
mull
lret
shl
cmp
cli
shr
dec
repz
jl
aam
fprem1
insl
jl
xor
lock
repz
mov
xchg
ljmp
bound
mov
add
sahf
jo
cmpsb
push
scas
lret
xor
jbe
std
add
mov
pop
push
out
jge
outsb
push
shlb
xchg
pop
and
hlt
rcll
cmp
adc
mov
pop
lahf
inc
xchg
imul
das
dec
fildll
rcr
dec
lahf
cmp
push
sub
adc
xor
cmpsb
fistpl
aam
int
mov
es
cwtl
fdivl
pushf
je
daa
push
xor
lock
scas
jp
rorb
xor
sbb
sbb
sub
xor
xor
cmp
popf
add
mov
cltd
push
loopne
inc
and
jp
or
push
mov
sar
es
inc
shl
and
cs
aam
fiadds
and
pop
inc
pop
pop
jb
pop
mov
inc
ljmp
mov
mov
jno
movsb
cmp
pop
fildl
dec
in
out
dec
xor
icebp
sbb
mov
mov
loopne
popa
mov
cmp
push
pop
notb
fwait
xchg
notl
ret
cs
fdivrl
xchg
pop
leave
loop
out
sbb
dec
lods
bound
push
sub
popa
add
shlb
add
cmp
popa
pop
mov
insl
lret
sbb
loope
jbe
clc
jnp
push
adc
xor
das
fsubrl
inc
push
inc
dec
xchg
ret
fs
xor
adc
adc
inc
cli
imul
mov
sbb
mov
xor
jle
dec
cli
fdivp
mov
ljmp
jbe,pt
std
xchg
test
clc
dec
flds
pop
sbb
lret
out
negb
imul
das
mov
jns
in
inc
mov
movsb
enter
es
lock
inc
cmp
push
jae
add
sub
aad
cld
xchg
jae
divl
cli
pop
sbb
test
add
cmp
cld
or
fmulp
sarb
dec
hlt
sbbl
dec
adc
ljmp
push
sbb
push
and
out
adc
mov
ljmp
pop
mov
enter
push
dec
test
sbb
fbstp
cld
xchg
mov
fimull
scas
xchg
jl
popf
mov
sbb
orb
xchg
add
icebp
cltd
fbld
mov
jne
sbb
mov
cld
jecxz
adc
xor
mov
push
sbb
test
pop
setae
xlat
or
aas
xchg
jae
jg
hlt
leave
or
test
lcall
sbb
or
js
jb
sub
lcall
push
dec
stc
aaa
dec
mov
pop
cwtl
xchg
adc
les
rcl
imul
sbb
popa
push
push
adc
dec
adc
xchg
sti
arpl
arpl
xor
nop
sbb
push
xchg
inc
call
mov
sar
retw
inc
repnz
loope
jmp
pop
aas
or
js
out
fsubrs
jmp
pop
outsl
and
dec
mov
and
and
sbb
mov
out
jp,pn
int3
sub
xor
jno
fcomps
add
xchg
mov
sub
lcall
sti
cwtl
dec
loope
fldenv
push
sahf
bound
fadd
mov
xor
or
inc
fwait
loop
inc
xorl
jno
sub
adc
mov
jle
mov
inc
sbb
and
jne
rcrl
out
jne
jno
pop
cltd
add
mov
mull
cmp
loopne
movsb
sbb
aad
or
jecxz
test
pop
mov
mov
scas
int3
inc
pop
push
xlat
pop
pop
pop
imul
sbbb
imul
pop
in
mov
xchg
dec
and
popf
adc
lret
push
clc
sahf
xor
xor
shll
dec
push
sar
cli
dec
int3
dec
pop
loope
rcrl
vaddps
push
div
xchg
aam
inc
adc
and
dec
inc
inc
xchg
gs
stc
xchg
or
jns
btc
inc
outsl
sti
lret
clc
pusha
in
or
cmp
cmp
mov
pop
sub
mov
ljmp
jb
mov
pusha
cmp
inc
xchg
aad
mov
add
mov
jae
int
adc
and
adc
sahf
jmp
mov
cmp
lret
hlt
xchg
sub
and
mov
mov
push
icebp
aas
cmpsl
out
loope
mov
push
gs
lods
adc
test
pop
fidivrs
fdivrl
mov
push
shrb
add
aam
sarl
ret
insb
fsubs
mov
add
mov
das
js
jae
cmp
and
xchg
fisttpll
xor
xor
dec
xor
adc
addb
adc
out
ss
movb
jns
mov
pop
adc
js
fsin
shl
cmp
mov
in
bound
mov
pop
lahf
cmp
imul
adc
es
les
lea
or
inc
cmp
add
push
mov
pop
repz
push
call
out
add
mov
mov
mov
lret
push
mov
and
jb
inc
xchg
cmp
dec
lock
mov
lcall
imul
sub
fdivrs
ficompl
testl
movsb
insl
dec
jb
shll
rolb
imul
cmpsb
repnz
in
data16
sahf
iret
rclb
mov
mov
movsl
fimull
jns
push
mov
xchg
jbe
bound
mov
xchg
std
sti
out
xor
imul
outsl
je
mov
lar
dec
ja
pusha
fldl
lret
xor
pop
adc
xor
xor
dec
mov
pop
outsl
mov
mov
inc
popf
pop
aas
xor
test
pcmpeqb
mov
mov
popf
stc
dec
sbb
adc
mov
push
popa
jmp
sbb
cmp
inc
mov
sub
sub
cmp
dec
and
aas
mov
lret
insl
cld
fwait
test
ret
aaa
loop
mov
push
xchg
push
dec
popa
cmc
jno
aaa
arpl
imul
popa
jo
push
clc
mov
je,pn
fcmove
aaa
imull
loop
loop
psrld
push
inc
sub
pop
lahf
outsb
xchg
ret
sbb
xor
xor
or
xor
or
std
mov
jl
das
inc
xchg
or
insb
scas
mov
test
mov
shll
je
sbb
add
cwtl
push
in
inc
jle
sbbb
fwait
or
add
sub
xchg
aam
inc
lret
icebp
jo
mov
out
and
dec
popa
dec
jmp
dec
sbb
orl
in
fwait
xchg
stc
into
mov
cmp
pop
iret
jnp
cmp
mov
sbb
cmp
out
add
test
ret
cmp
fsts
fmul
add
incl
jl
adc
mul
lods
movsw
or
cmpsl
sbb
lret
lret
cld
js
fwait
cmp
jl
and
xor
dec
int3
sti
adc
stos
aaa
xchg
es
les
add
loop
mov
shll
int
fistpl
ficompl
push
out
mov
out
orb
sbb
stos
fs
mov
cli
lock
stc
test
jnp
pop
repz
cltd
divl
or
xorb
and
pop
and
sahf
out
leave
rorl
sub
inc
pop
pop
inc
fdivl
in
imul
push
pop
and
ja
xchg
or
cwtl
loop
scas
mov
sbb
movsb
jnp
inc
bound
dec
add
pop
es
outsb
mov
sbb
lods
movsl
jo
inc
in
add
scas
sub
dec
loop
dec
cmp
mov
inc
sbb
dec
popf
cmp
loopne
jno
adc
lds
xor
cmp
insb
in
push
or
jp
mov
int3
inc
mov
add
cmp
mov
add
outsb
sub
lds
dec
ds
jge
stc
lcall
dec
sti
lahf
and
hlt
xlat
or
orb
out
mov
inc
lret
iret
adc
test
pop
scas
sub
sahf
push
and
gs
fwait
and
xor
adc
mov
mov
lret
adc
fs
hlt
dec
sbb
jae
push
rcr
mov
aam
push
int
jle
push
fsubl
adc
scas
jns
incb
pop
jmp
push
pop
pop
inc
or
call
push
push
movsl
xor
and
orb
xchg
loopne
insl
les
or
stos
scas
rcrl
xor
cld
scas
jmp
push
pop
test
sub
jle
add
mov
or
xor
jge
scas
or
xchg
jg
in
push
add
ljmp
xor
xor
mov
mov
mov
adcl
mov
sub
and
clc
add
fs
jge
and
add
sub
or
js
sti
pop
add
jnp
js
lcall
loop
scas
add
stos
dec
sub
sub
hlt
cmp
data16
push
in
mov
xchg
lock
aas
jns
inc
mov
jno
inc
pop
pushl
imul
push
icebp
mov
pop
arpl
insl
push
addb
repnz
cli
mov
mov
imul
sub
adc
mov
dec
int
fcomip
call
stc
or
paddq
xor
mov
inc
std
hlt
jmp
jne
sbb
add
jae
stos
sbb
aaa
lea
mov
lcall
arpl
outsb
les
cmp
stos
call
daa
addl
mov
inc
pop
arpl
stos
loope
mov
push
pop
lret
iret
sbb
std
dec
or
xchg
loopne
mov
fildl
sar
jecxz
mov
shrl
pusha
stc
aad
xor
or
ss
adc
and
dec
out
dec
idivl
in
pop
ret
jbe
rclb
loope
fisubrl
fadds
sub
sub
inc
jae
psadbw
adc
out
mov
xor
pop
cmp
add
pop
push
outsl
fisttpl
sub
cmc
fildl
xchg
lcall
rcr
lock
mov
movsb
mov
xchg
dec
mov
ljmp
push
sbb
cld
mov
mov
push
lods
sbb
cmp
je
es
jo
loopne
xchg
jns
or
int3
inc
hlt
inc
cmp
cmp
adc
pop
push
std
icebp
popa
fbstp
mov
in
test
fisttps
ret
mov
or
fmull
adc
mov
das
xor
cmp
aas
mov
in
mov
lret
mov
aam
cmp
daa
in
pop
movb
dec
fwait
inc
aaa
mov
test
lods
xor
mov
xor
add
rol
push
cwtl
cmp
adc
pop
arpl
cwtl
pop
mov
xchg
xchg
test
arpl
dec
daa
adc
xchg
xchg
fnstcw
cld
icebp
je
dec
imul
sbb
mov
cwtl
mov
andl
mov
leave
inc
adc
cmp
and
add
dec
mov
inc
or
icebp
inc
fldl
or
and
xchg
rol
mov
imul
add
popf
jmp
test
and
pop
mov
jle
cmp
jmp
cmp
sub
and
push
popf
test
fildl
shrl
popf
xchg
imul
xchg
ljmp
and
mov
pop
jp
jp
lods
jecxz
cmp
or
ljmp
push
add
js
lahf
sbb
test
addl
js
lds
add
mov
mov
sub
jg
dec
mov
insb
test
sub
setle
and
inc
nop
jae
push
xchg
cli
mov
repnz
lcall
shrb
push
aaa
xchg
jno
or
push
test
cltd
push
adc
xchg
and
in
mov
lahf
aaa
lods
in
sar
dec
or
mov
xor
sub
mov
adc
lock
movsl
test
in
push
mov
push
mov
scas
pop
inc
leave
bnd
pop
js
sub
popa
sti
inc
es
lcall
or
les
cmp
jmp
filds
cmp
dec
rcrl
pop
imul
mov
iret
add
popa
sub
pop
es
pop
mov
ja
ret
sub
es
xor
scas
sbb
cmpsl
lret
iret
outsl
pusha
mov
sub
and
dec
jb
xor
sub
out
sbb
cs
test
lods
icebp
loop
lret
aad
ret
lods
outsl
inc
out
in
mov
cld
fdivs
psubw
iret
sub
testb
pusha
scas
sbb
or
mov
outsl
sahf
pop
inc
test
jl
cld
jmp
daa
and
std
sbb
mov
sbb
stos
inc
in
add
add
int3
insl
cmp
pop
icebp
add
loop
adc
xchg
mov
popa
out
xchg
fs
cmp
mov
test
out
into
sti
out
aaa
push
push
cmp
pop
mov
daa
dec
insb
arpl
bound
mov
mov
rcrl
push
bound
cwtl
inc
or
pop
sbb
icebp
incl
popf
stos
sbb
xor
pop
adc
cmp
mov
dec
lahf
or
jns
cmp
inc
sub
test
cmp
int3
pop
lods
inc
xor
nop
ret
xchg
xchg
adcl
loop
inc
sbb
mov
lods
insb
fidivs
sub
mov
sahf
in
call
dec
adc
mov
test
jbe
mov
dec
insb
adc
loopne
into
jbe
out
aad
sbb
mov
insl
rclb
adc
and
mov
stos
cmpsl
fmul
pop
cmpsl
adc
js
rorb
pop
outsl
jmp
dec
loope,pn
out
adc
andb
push
fsubs
jne
sar
and
jbe
mov
inc
jne
jecxz
dec
add
dec
dec
popa
out
inc
iret
aad
jno
mov
sbb
lret
lods
rolb
das
mov
adc
jo
inc
loopne
mov
fisubs
jmp
rcrl
test
out
fistps
out
push
in
test
icebp
add
inc
mov
pusha
icebp
mov
mov
cs
lret
fdivs
pop
dec
out
in
jl
and
test
imul
lea
gs
fsts
fwait
push
xchg
imul
sbb
pop
xlat
imul
aad
sbb
or
addb
insb
aas
ljmp
call
push
jns
push
sbb
and
sti
push
aaa
js
fdivs
inc
jns
jnp
leave
mov
movsl
and
mov
and
mov
mov
dec
xchg
aad
rolb
shl
cmpsb
and
outsl
pop
push
pop
add
mov
ljmp
popa
cltd
cltd
jl
in
jle
ds
push
adc
mov
mov
add
movsl
push
dec
pusha
xchg
fisubl
push
jl
mov
stos
jmp
jbe
addr16
int3
xchg
jnp
mov
mov
sub
insb
sub
js
adcb
adc
mov
mov
and
imull
insb
je
mov
xchg
loopne
add
test
out
jno
lds
fwait
cltd
pop
or
sub
xlat
outsb
in
imul
gs
divb
popl
clc
in
je
ds
imul
push
ja
push
xor
int
aam
jo
pop
dec
sub
cmpsb
mov
lahf
inc
sahf
inc
ja
dec
scas
adc
out
cmp
xchg
jmp
in
sbb
xchg
push
rclb
jb
lock
add
je
fcomip
mov
je
add
inc
cltd
cli
xchg
push
repz
cmc
mov
adc
mov
push
das
stos
out
sti
push
jp
lock
rcrb
divb
lret
lods
dec
cmp
push
xchg
mov
push
inc
jg
scas
mov
sub
xchg
xor
aaa
je
stos
ss
mov
jns
stos
leave
xchg
mov
or
cmp
int3
jle
xchg
xchg
scas
aas
xchg
sbb
pop
ljmp
lods
xchg
outsb
pop
lea
jmp
out
nop
mov
aam
push
stos
into
je
fwait
mulps
or
bound
and
mov
out
fimuls
fcmovnu
mov
mov
pushf
mov
dec
xorb
mov
cmp
push
sahf
inc
xor
insl
fldl
fadd
sbb
adc
inc
fcompp
jbe
in
mov
fsubrl
mov
pop
lret
or
inc
bound
and
enter
mov
popf
push
bound
repnz
add
bndstx
mov
xor
lret
pushf
cmp
pop
xor
pop
mov
movsb
push
mov
xlat
test
int
loop
dec
cmpsb
repz
cmp
add
fldl
ljmp
sbb
xchg
cwtl
pop
push
adc
push
mov
inc
sub
sub
ficomps
out
sahf
sub
xlat
les
xlat
add
outsb
adc
jno
stos
pop
xchg
pop
xchg
int3
dec
aam
xor
push
mov
loop
inc
inc
lahf
movsb
sub
lea
lret
into
push
mov
imul
fildl
add
clc
fstpl
mov
inc
fimuls
popf
out
insl
mov
pop
jbe
jl
movsl
sub
imul
bound
loope
dec
sub
insl
jne
stos
jne
fwait
jge
imul
jecxz
repz
dec
inc
mov
dec
int
mov
fistl
arpl
test
dec
aaa
sbb
std
int
loope
leave
and
adc
xchg
in
fnstsw
xchg
pop
testb
es
daa
mov
mov
mov
jecxz
mov
fucom
ja
xchg
cmpsl
mov
sbb
inc
jmp
and
mull
lret
lock
inc
xchg
sub
mov
stc
std
xchg
clc
add
test
loopne
iret
fdivrs
mov
aas
inc
leave
arpl
fwait
sub
outsb
add
or
mov
sub
jbe
dec
jae
push
ja
mov
gs
or
sbb
out
jb
push
rorl
mov
out
orl
or
sbb
test
cmpsl
ss
pushl
sbb
adc
ret
ljmp
mov
mov
xor
mov
xor
inc
push
sub
sub
adc
pushf
pop
mov
adc
push
clc
jmp
call
push
sbb
stos
mov
outsb
in
mov
clc
add
sbb
fstpl
leave
pop
ja
dec
push
insb
push
mov
pop
add
cmpsb
dec
adc
outsb
rcll
push
cli
sbb
int3
into
ds
js
mov
cmpsl
mov
mov
repz
add
cmc
mov
comiss
adc
je
and
sbb
jle
lcall
call
add
push
mov
mov
fwait
ja
loope
dec
or
imul
dec
in
mov
pop
jecxz
or
add
stc
inc
dec
icebp
adc
jns
inc
adc
mov
pop
inc
repz
adc
subl
fldcw
test
les
jp
pop
adc
pop
jnp
add
pop
inc
inc
outsb
cmpsl
xchg
jne
pop
out
ficoml
daa
cmp
dec
or
sbb
or
jecxz
cld
mov
jle
mov
out
addr16
mov
push
ljmp
jle
icebp
sti
push
sub
mov
aas
incb
sbb
and
pcmpgtw
stos
pusha
fidivrl
add
lods
xchg
ja
sub
mov
sub
mov
and
test
sarb
push
pop
cmp
into
mov
mov
push
mov
sahf
imul
jg
xor
in
je
push
in
scas
pop
dec
and
testb
inc
mov
mov
pop
lahf
add
mov
mov
xchg
push
test
add
pop
imul
xor
mov
pop
mov
xchg
xchg
test
push
inc
pop
stos
into
addr16
sub
xchg
mov
cmp
in
lahf
aas
push
andl
and
dec
ja
test
fiaddl
int
ret
scas
fiaddl
mov
mov
xchg
in
in
popa
xor
adc
sti
sahf
mov
xchg
jmp
inc
lds
addl
call
repnz
in
ds
imul
sbb
inc
add
push
mov
pop
arpl
in
and
loope
in
outsb
push
push
pusha
aaa
jno
pop
mov
mov
in
jge
xchg
dec
inc
in
push
add
scas
jno
jno
mov
mov
jo
or
lret
jns
jl
mov
sbb
mov
cli
arpl
sbb
push
mov
add
bound
int3
enter
xchg
out
int
jno
mov
add
and
stos
mov
cli
leave
adc
ret
or
arpl
ret
push
jnp
sub
gs
inc
cli
xor
movsl
xor
push
mov
addr16
testl
jns
test
scas
icebp
out
shlb
xor
test
add
pusha
sbb
loope
dec
mov
push
loopne
adc
clc
aad
testl
test
repz
cmpsl
push
xor
fs
jae
mov
push
cli
out
adc
movsb
cmp
loopne
jnp
or
fwait
rclb
es
dec
mov
scas
aas
jnp
sbb
pop
sbb
dec
mov
cmp
xor
notl
cmp
mov
and
or
pop
movsb
aam
sbb
sub
sbb
mov
daa
les
out
push
jmp
adc
inc
push
orl
dec
pop
imul
popf
daa
jecxz
loope
inc
in
lea
mov
sub
stc
sbbl
xlat
sub
xorl
int3
aas
sbb
mov
cmp
sub
ja
push
sub
icebp
push
adc
jge
lret
cld
nop
cs
popf
daa
push
fstpl
cmc
mov
fbld
mov
loopne
jns
push
xor
cmc
cltd
mov
lahf
sub
cmp
lret
shl
push
fistpl
lret
add
pop
jg
cmp
mov
inc
sbb
jge
cltd
or
std
mov
jne
dec
je
adc
daa
out
int
jmp
test
sub
adc
add
icebp
mov
cmp
test
imul
sarl
mov
lods
dec
jge
mov
aas
stos
int
jmp
nop
push
cltd
cmp
mov
ja
icebp
cmp
or
jnp
fcmovnu
jo
outsb
adc
xchg
adc
inc
inc
mov
cmp
scas
lcall
jg
sbb
jb
xchg
jmp
insb
pop
jae
jae
cmp
bound
sub
test
and
add
imul
rcrb
inc
loope
inc
das
daa
scas
dec
int3
push
and
sub
call
lahf
iret
sub
adc
sub
aaa
or
adc
out
mov
xchg
add
add
xchg
push
test
sub
push
hlt
pop
mov
mov
pop
int
jp
call
adc
scas
cs
mov
push
adc
gs
add
jne
dec
int
popf
imul
xor
mov
xor
sub
and
adc
mov
cmp
cmp
lret
xor
jne
rcrb
sub
lds
loopne
sti
cmpsb
push
dec
insl
push
add
inc
mov
cmp
pop
adc
loopne
inc
mov
aaa
enter
imul
sbbb
cmc
insl
adc
and
lret
les
iret
mov
xorb
shl
inc
ret
scas
inc
jb
cmp
mov
stos
cmp
jge
adc
fsubrs
dec
jns
push
mov
adc
je
dec
in
or
dec
shl
dec
add
loop
sbb
mov
fcmovnb
scas
insl
push
or
adc
adc
pop
sub
lret
xchg
mov
dec
and
adc
je
pop
or
in
mov
nop
sysexit
loope
jae
push
test
and
sub
inc
mov
or
bound
sub
sub
and
jns
stc
jge
dec
push
aam
pop
dec
into
sub
lahf
xor
push
fimuls
dec
dec
mov
std
lahf
aam
repz
out
jmp
loopne
icebp
mov
sbb
or
mov
adc
sbb
mov
cli
pop
or
das
mov
daa
orb
ljmp
adc
std
and
andb
push
loop
sub
jns
fsubs
mov
sahf
xor
dec
movsl
xchg
adc
fdivr
cmp
lcall
loop
cmpsl
xchg
and
lahf
xchg
mov
inc
nop
jl
xor
xchg
push
and
jnp
and
jp
jle
clc
and
xor
rolb
and
cwtl
sbb
je
jbe
std
insb
push
and
ret
pop
inc
mov
mov
cmp
jmp
ret
in
fsubs
push
xchg
lods
loopne
xchg
cmpsl
sar
fistpl
xor
mov
aam
stos
mov
leave
adc
inc
add
inc
mov
jbe
push
test
adc
aad
pop
adc
cmp
xchg
mov
and
pop
out
aad
mov
dec
inc
js
cmp
pop
push
mov
sub
sbb
pop
sbb
ds
dec
aaa
mov
sbb
lods
inc
cmpsb
arpl
sub
mov
jmp
in
sbb
movsl
insl
cmpsl
xchg
add
mov
lock
sti
frstor
mov
xchg
gs
mov
dec
shr
fdivl
pusha
cmp
pop
test
pop
pop
jae
aas
lds
shll
hlt
mov
imul
pop
jne
mov
mov
push
or
cmp
push
push
loopne
pop
daa
mov
dec
inc
and
sbb
das
mov
mov
scas
popa
repz
out
jl
or
fwait
push
ds
and
mov
roll
jnp
mov
lcall
movsb
mov
fidivrl
dec
mov
cmpl
pop
inc
mov
sub
cmpsb
imull
mov
push
push
push
inc
ss
mov
outsl
push
ficompl
push
mov
divl
scas
out
push
cmpsl
mov
and
mov
cmp
out
nop
cwtl
pop
fs
int3
aam
sbb
pop
push
xchg
xor
cmpsl
into
mov
xchg
ret
mov
repz
jno
add
bound
jp
insb
icebp
xchg
or
out
stos
dec
shll
or
into
div
xchg
cmp
push
cld
mov
stos
inc
enter
xchg
pop
cltd
push
sub
mov
xchg
aas
mov
mov
pop
cwtl
fiaddl
sub
test
dec
lcall
or
inc
pop
dec
roll
test
stos
add
shlb
aas
push
call
cmc
sub
fiadds
setno
idivb
icebp
adc
mov
repnz
xor
in
xchg
ds
sub
add
sbb
pop
cltd
push
cmp
xchg
xor
mov
xchg
push
push
lods
inc
push
lods
out
lea
adc
loope
mov
jge
and
std
imul
dec
pop
incl
int
insb
inc
out
fcmove
pop
stos
scas
scas
mov
loop
daa
or
enter
daa
inc
movsl
lcall
pusha
das
xlat
adc
fmull
inc
jb
or
iret
icebp
scas
push
movsb
push
neg
xorl
enter
jp
xchg
dec
lods
call
das
adc
adc
inc
or
jo
pop
test
mov
push
mov
jno
xor
mov
data16
jbe
push
pop
or
test
leave
lret
mov
sbb
mov
push
outsl
adcl
mov
sbb
loopne
aaa
xor
inc
loop
xchg
jg
inc
push
jl
adc
mov
fiaddl
cs
mov
imul
xchg
xchg
push
fisubs
rol
jg
loope
jbe
and
test
jne
mull
mov
mov
notb
pop
cmp
push
or
mov
and
mov
xchg
pop
inc
inc
lret
cs
fistl
lods
xorb
xchg
sahf
pop
add
xchg
je
jo
inc
leave
jae
mov
jle
add
out
gs
pop
or
js
push
mov
aam
sub
jg
outsl
lcall
test
jmp
std
fs
lret
nop
pop
xchg
call
add
dec
fists
sahf
jno
sbbb
or
imul
int
cmp
pop
es
sub
dec
pushf
xchg
push
out
shrl
jae
pop
nop
ret
pushf
outsb
jo
inc
stos
jne
sub
lds
popa
push
mov
outsl
jmp
jge
sbb
mov
aaa
mov
sbb
bsf
stos
adc
loop
xor
sub
outsb
loope
cmp
pop
scas
mov
mov
sbb
popa
lret
sbb
cmp
mov
push
mov
adc
in
push
fadds
cltd
adc
ja
inc
out
lock
pusha
dec
dec
add
out
mov
pop
subb
dec
popa
dec
cltd
sbb
cwtl
sbb
ret
mov
nop
sub
test
iret
adc
mov
movsb
or
orb
jne
div
sahf
mov
loope
mov
push
push
gs
inc
fcomps
rcrb
xor
outsl
cmpsl
xchg
mov
mov
push
gs
pop
rsm
in
sub
popf
lea
fisubl
inc
inc
sbb
test
cmc
pop
and
sub
cmp
aam
adc
fucom
test
pop
repz
push
bound
in
push
testl
call
rcll
jecxz
call
sbb
jno
xor
pop
test
add
int3
dec
test
aaa
scas
jae
jbe
and
shll
jp
cltd
and
mov
loope
adc
imul
jo
adc
push
je
cmpb
push
dec
push
lret
sub
or
xchg
scas
xchg
gs
mov
push
xchg
or
sbb
or
xchg
stos
decb
xor
pushf
or
iret
adc
cmpl
xchg
adc
push
sbb
mov
sbb
mov
add
arpl
outsb
arpl
xchg
xchg
sbb
push
rcll
cmp
movsl
lahf
sbb
test
inc
mov
insl
outsl
cmpsb
xchg
dec
shr
mov
pop
popf
adc
push
xlat
dec
enter
or
jb
add
mov
push
mov
call
adc
fdivrl
fwait
mov
fcompl
pop
mov
jmp
pop
xor
loopne
add
les
mov
jns
fldl
arpl
movsb
in
stc
push
lock
cmp
sahf
inc
and
jae
gs
sbb
inc
pop
xor
stos
xchg
das
dec
xor
push
std
mov
xchg
sbb
pop
rcr
adc
add
stos
lock
lcall
mov
ret
and
xor
lret
or
imul
add
gs
std
test
test
dec
pushl
bound
xor
add
adc
cmpsb
cmpsb
int
fnstcw
mov
jg
ljmp
pop
sub
add
cwtl
inc
push
imul
lahf
xchg
aad
sub
and
sbb
mov
daa
jae
or
pushf
ret
push
fcmovbe
scas
and
sbb
cmpb
add
mov
mov
jmp
mov
mov
push
pop
int
jo
mov
mov
mov
adc
fldcw
cmp
scas
call
xchg
iret
fisttpl
int3
fucom
out
pusha
imul
cli
fsubl
ret
int
mov
lods
inc
xchg
ds
cwtl
enter
pop
add
out
loopne
in
sub
icebp
clc
ss
and
cmp
or
std
sub
rorb
mov
mov
or
push
adc
adc
sub
fadds
xor
and
in
inc
and
ss
das
mov
test
jb
xor
xchg
push
stos
dec
xchg
pop
lock
mov
push
in
fsts
sub
and
enter
mov
dec
xchg
push
subl
xor
aam
push
mov
movl
cmc
mov
dec
outsb
or
jmp
jb
mov
lock
and
es
lods
push
fs
mul
and
sbb
in
stc
fcoms
fwait
iret
adc
lods
inc
push
adc
insb
psllw
sub
lret
not
mov
jne
mov
popa
dec
std
jb
mov
data16
adc
lods
pop
fcmove
xchg
push
dec
and
dec
pop
shlb
rcrb
out
lret
or
movsb
or
mov
pop
scas
pop
cmc
in
mov
jecxz
mov
fnstsw
sbb
cmp
push
and
das
jmp
mov
in
jnp
xrelease
fcoml
jbe
stc
push
push
out
sub
lds
fwait
ds
pop
insl
push
enter
bound
aad
inc
sbb
adc
cmp
xlat
and
sahf
mov
mov
jns
or
in
add
fidivrs
push
lahf
adcl
sbb
jp
arpl
jmp
mov
lret
lahf
jb
dec
aaa
insl
jecxz
sbb
cltd
ss
push
pop
repnz
pop
arpl
cli
push
push
lea
add
push
mov
inc
adc
ret
pop
stos
jnp
ret
jp
movsl
pop
adc
pushf
xchg
pop
push
push
mov
xor
int
cmc
push
stos
dec
mov
int
fstpl
mov
popf
jbe
arpl
dec
mov
das
inc
add
decl
mov
int
fidivrl
jbe
jmp
mov
out
mov
and
dec
test
cmp
into
dec
push
rorl
push
adc
jns
bound
out
scas
inc
les
jo
lods
dec
dec
imul
push
dec
js
push
shr
mov
aas
cmp
out
pop
call
mov
es
inc
ja
push
xor
cmp
pushf
imul
xchg
or
cli
cmpsl
jo
out
sub
inc
or
adc
sub
xlat
int
push
out
cmpsl
gs
inc
sub
jnp
rorl
jp
lcall
rcll
pop
jmp
lret
repz
loop
loope
repz
icebp
mov
shl
das
mov
jb
cs
repnz
mov
mov
inc
dec
pop
xor
pop
jbe
adc
inc
clc
pop
pop
fwait
sbb
pop
xor
mov
adc
dec
sbb
push
xchg
mov
or
gs
or
loope
lret
adc
or
mov
push
mov
aaa
jl
pop
in
cmpsl
test
or
sbb
pop
aad
in
movsb
clc
xchg
sbb
js
in
mov
popa
movsb
hlt
test
cmp
imul
movsl
sbb
mov
outsl
jo
lret
lret
loope
icebp
mov
push
movsl
testb
in
mov
outsb
int
mov
or
cmp
pop
mov
sbb
and
dec
xlat
mov
pop
mov
mov
jae
outsb
sub
cltd
push
call
cmp
int3
mov
and
out
lods
mov
pop
sub
dec
fnsave
push
mov
jb
xchg
or
pop
fs
call
loope
sub
in
fcmovnbe
mov
cs
and
xor
or
lock
sbb
les
outsb
mov
push
xchg
pusha
std
lea
dec
add
push
adc
push
in
mov
inc
xchg
sbb
mov
clc
idivl
pop
jae
aad
or
insb
pop
les
stc
or
js
aaa
xorb
xorb
loopne
inc
xor
lret
pop
fsubl
mov
push
lea
push
shl
mov
and
lahf
mov
dec
or
pop
dec
dec
rorb
pop
imul
xchg
gs
mov
cmp
mov
inc
arpl
sahf
or
sub
inc
cltd
add
outsl
jmp
mov
repz
xchg
dec
rclb
cmp
iret
push
push
adc
pop
and
xor
test
xchg
addr16
int
mov
xchg
rclb
jnp
popf
test
ret
imul
xor
lods
or
addr16
cmp
and
out
mov
sub
xchg
sbb
jecxz
in
daa
xchg
mov
aaa
jbe
push
push
sbb
mov
movsl
inc
aaa
fwait
dec
pop
mov
aaa
jno
push
mov
loope
xchg
adc
js
push
fisubl
aaa
xchg
mov
clc
push
rcrb
aam
or
out
dec
adcb
flds
cli
adc
es
xor
mov
mov
adc
fwait
push
cld
out
push
loope
fs
inc
jne
mov
sbb
lock
cmp
lods
fidivrs
shll
les
dec
or
sti
addr16
cmp
pop
cmc
pop
and
add
in
pop
add
in
xor
mov
xchg
mov
pop
push
fildll
test
inc
sbb
inc
jl
jp
mov
negl
mov
cmp
js
mov
fistpl
or
fildl
adcl
loop
sbb
cmpsb
cmp
adc
out
adc
xchg
and
test
pop
add
sub
pop
or
sub
fnsave
loop
in
jl
sbb
jae
test
adcl
add
ljmp
sbbl
shll
out
aad
lods
dec
mov
inc
mov
or
inc
add
stc
rcrb
daa
mov
test
fldt
imul
xchg
pop
push
push
sub
pop
dec
psrlq
dec
aam
mov
and
lcall
movsl
jo
pop
fucomi
addr16
lahf
xor
enter
adc
mov
mov
sub
jb
shl
sahf
clc
inc
hlt
dec
cmp
subl
int3
js
xor
jecxz
inc
sub
jae
jb
adc
jecxz
and
cmp
xor
movsl
jl
pop
fmul
push
xchg
scas
sbb
mov
and
mov
in
clc
dec
or
data16
jecxz
cli
pushf
mov
or
mov
sbb
mov
fsubl
cmpsb
jmp
imul
aam
jle
xor
push
scas
movb
sub
mov
or
sub
lds
faddp
call
jmp
stos
mov
adc
mov
std
inc
mov
adc
xlat
data16
sub
cmp
lret
sti
add
mov
call
std
data16
add
pop
inc
sarb
add
xorb
lds
jb
fcompl
jecxz
mov
incl
ret
push
hlt
push
mov
daa
mov
std
rcll
into
outsl
ret
dec
and
lock
dec
pop
stc
mov
ds
sbb
or
ficomps
lcall
insl
push
push
mulb
stos
in
sahf
ljmp
cmp
fsubl
sub
sbb
xor
fcmovnb
mov
lret
xor
ja
cmpsl
inc
sub
leave
mov
sbb
inc
call
push
test
mov
adc
ja
adc
adc
or
aas
sbb
inc
dec
mov
fxch
movsl
lret
js
imul
pushf
sub
movsb
adc
aas
mov
jle
aam
sub
or
repnz
scas
sbbl
rolb
jne
xor
xor
insb
loope
sub
jb
in
pusha
je
push
lret
rcrl
lods
sbb
mov
mov
in
adc
mov
cmp
scas
shl
shlb
sbb
addr16
outsb
call
mov
pop
mov
fdivl
shrl
jns
inc
adc
inc
push
add
inc
mov
fisubrl
jmp
mov
scas
pushf
sub
mov
arpl
lods
xchg
das
mov
dec
test
outsb
jnp
orb
fs
jecxz
inc
call
stos
pop
jns
pop
sub
cmp
xlat
faddp
into
lds
test
movsb
jl
sub
loopne
shl
arpl
in
clc
out
xchg
leave
outsl
push
cmp
cmp
jp
pop
cld
mov
jmp
mov
cmp
pop
xor
test
out
sbb
dec
pushf
push
push
mov
clc
pop
fwait
jmp
inc
dec
ss
mov
aam
insl
xor
add
ret
add
shr
mov
movsl
add
call
xchg
out
mov
fiadds
pop
inc
in
or
cmp
out
jge
dec
mov
xchg
repz
js
push
data16
stos
add
mov
ror
dec
adc
je
sti
xchg
js
enter
rol
push
mov
jb
xchg
mov
jle
mov
dec
cld
es
mov
push
mov
push
mov
mov
pop
pop
and
sbb
add
cmp
push
add
xor
jl
sub
leave
call
add
pop
testb
fadd
dec
lret
bound
adc
inc
cmp
dec
mov
in
inc
pop
cmpb
in
or
ja
nop
adc
mov
test
push
fnsave
push
dec
mov
mov
dec
test
mov
aas
cmp
stc
mov
pop
dec
dec
sbb
xchg
or
call
inc
call
fs
xchg
xchg
cltd
vpmaxub
and
add
shll
inc
mov
lret
pusha
and
mov
in
test
js
in
mov
notb
cmp
and
adc
cmp
hlt
inc
cmp
es
orb
jmp
xchg
scas
jnp
inc
test
fsubp
loope
and
les
popf
jae
fisttps
or
and
jnp
faddl
add
test
jmp
loop
pop
pop
adc
push
jo
and
mov
inc
scas
gs
je
jno
dec
sbb
push
fidivrs
sbb
int3
jle
gs
cmc
les
sbbl
adc
and
fmull
ljmp
aad
fdivrl
add
mov
xchg
sub
daa
pop
or
xchg
cmc
sbb
repz
inc
es
cmpsb
xchg
in
test
sbb
ljmp
test
and
pop
aaa
inc
adc
mov
mov
and
jecxz
and
mov
js
adc
mov
in
jge
inc
gs
mov
cld
pop
sbb
xor
rclb
movb
pushf
ror
inc
lahf
sbb
cmp
fcmovnu
std
push
mov
mov
pop
mov
aad
mov
lret
jmp
push
leave
les
out
or
lds
lods
ljmp
inc
test
and
fldt
xor
cmp
addr16
movsb
pop
jl
decb
das
push
test
mov
test
push
sbb
pop
sub
shr
into
or
loop
jnp
pop
or
xchg
pop
pop
push
int3
jbe
mull
aam
cmpb
and
in
sub
arpl
jecxz
mov
stc
xchg
cmp
stc
bound
in
out
or
adc
cmp
push
jmp
in
shll
jno
in
jp
outsl
fstpt
or
xor
cmp
sbb
mov
xchg
arpl
adc
dec
fcmovb
jg
and
dec
pushf
pop
mov
idivl
out
lods
icebp
daa
jmp
pop
mov
icebp
mov
and
or
movsb
iret
push
aam
pop
and
mov
fisttpll
mov
cmp
arpl
lods
ss
outsb
lea
xchg
pushf
cwtl
push
lds
rol
lret
inc
leave
ret
push
bound
mov
lock
pushf
loope
mov
lcall
addr16
mov
push
fildll
inc
or
arpl
idivb
andb
test
in
or
pop
add
xchg
or
fiadds
stc
xor
enter
add
popl
cwtl
mov
jecxz
or
int
jo
push
push
adc
jmp
jo
push
cmp
and
pushf
fwait
jns
js
sbb
jae
cmpl
stc
das
push
jne
enter
mov
sub
and
jp
jne
adc
adc
pusha
sbb
sbb
jge
ja
push
in
and
cmp
test
sbb
fxch
and
imul
and
dec
cmp
or
push
jb
enter
inc
sub
adc
dec
lods
sti
mov
inc
loopne
dec
mov
jge
add
popf
loop
ret
sahf
aad
xchg
in
push
data16
add
adc
or
je
retw
loop
ret
pop
pop
data16
out
mov
arpl
add
sub
mov
jo
shll
push
data16
and
test
dec
inc
out
xchg
push
out
lret
pusha
stos
inc
sbb
fbld
scas
mov
mov
pop
imul
sub
jnp
pop
sbb
mov
idivb
repnz
dec
test
mov
ja
pop
cld
sub
dec
jmp
cmp
fs
rcrl
jl
movb
rorl
std
mov
fldl
push
clc
jbe
mov
cmp
mov
and
rcr
mov
idivl
add
mov
adc
pop
popf
fcmovnb
scas
movsl
sub
or
xor
decl
iret
mov
pop
sbb
mov
pushf
sub
repnz
mov
xchg
loop
jl
stc
mov
jge
popa
add
lret
jne
lock
imul
jo
cmp
inc
daa
and
lock
jle
sti
repz
flds
cmp
ljmp
pop
aad
jge
sbb
push
pop
clc
movsl
mov
jp
rcrb
pop
dec
icebp
xor
shlb
lret
sbb
rcrl
jno
jo
mov
dec
mov
or
cltd
sbb
jp
push
and
lahf
mov
outsb
xchg
add
mov
lcall
cmp
mov
adc
jne
ljmp
cmp
fmul
pushf
cmp
fistps
js
cmpsl
or
cmp
mov
jnp
xchg
xlat
xchg
jmp
mov
mov
dec
sub
and
fdivr
das
xlat
or
push
loope
mov
fprem1
pop
cmp
push
mov
xor
out
fsub
std
sbb
bound
imul
sub
push
stos
into
aam
mov
lea
ja
add
xchg
incl
ja
fisubrs
in
lds
mov
inc
adc
dec
mov
add
mov
arpl
cld
mov
ror
inc
pop
cmp
in
les
jbe
cmp
add
aam
and
cmp
bound
dec
movsb
rorl
aam
mov
mov
popf
bound
in
fs
mov
in
js
pushf
add
andb
xor
xchg
fs
sbb
adc
add
mov
jnp
inc
xchg
pop
xchg
lods
cmpsb
cmc
jecxz
insl
jge
xchg
lret
mov
mov
andl
add
push
xchg
sub
jne
lods
scas
ret
insl
or
xlat
add
lcall
scas
pop
pushl
or
mov
xor
push
sbb
xor
lahf
outsl
or
loope
repz
gs
lods
cmpsb
cld
out
test
jle
or
aaa
sub
roll
in
clc
cld
icebp
ret
push
inc
xor
push
fcmovb
ret
out
imul
dec
pop
gs
cmp
xchg
jb
lret
jmp
movsl
into
cmpsb
lret
leave
inc
adc
and
imul
in
out
pop
mov
push
jns
inc
lahf
sti
xchg
mov
mov
xlat
adc
dec
xchg
arpl
xchg
pop
out
out
scas
add
je
jnp
or
pop
mov
ja
adc
in
mov
mov
inc
mov
cvtpi2ps
fwait
mov
cmp
and
testb
mov
movsb
frstor
aas
iret
loope
xor
add
dec
into
std
pop
mov
out
sub
push
xor
push
mov
pop
mov
jge
icebp
scas
add
ss
daa
add
sbb
in
xchg
jg
es
ljmp
mov
adc
cmc
xor
jecxz
out
addr16
cmpsl
or
fsubp
or
mov
rcll
xlat
sti
mov
stc
gs
mov
repz
cmp
out
and
loop
add
imul
mov
mov
cmp
dec
sub
sbb
or
cmpsl
mov
ljmp
adc
xchg
xor
mov
mov
popf
mov
push
xor
ja
and
jns
xchg
pop
cmp
data16
cmp
fisttpll
xchg
pop
mov
and
dec
loop
ret
sarb
xchg
jl
loop
call
add
in
js
lret
loop
mov
loopne
daa
popl
mov
push
cli
rclb
arpl
mov
mov
ljmp
mov
repz
daa
dec
in
xchg
call
clc
aad
xlat
jb
repz
in
cmp
lret
dec
and
fs
push
push
dec
sarb
cli
sub
adc
lahf
fisubs
ror
mov
xor
pop
scas
arpl
xor
movsb
pusha
push
ja
dec
rclb
fidivrl
test
stos
sti
push
pop
fadd
xchg
lahf
ds
aas
push
ficomps
cld
jnp
push
dec
inc
stos
gs
dec
das
clc
mov
lock
in
leave
push
mov
xchg
daa
or
jbe
add
sbb
xchg
dec
or
cmc
in
add
in
cmpsb
dec
mov
lea
inc
push
dec
cmpb
popa
sub
inc
into
and
negb
jne
in
fmul
jge
pop
mov
clc
xor
fs
adcb
cmp
arpl
pop
mov
inc
adc
lahf
mov
scas
or
sub
cs
fists
add
loope
icebp
push
mov
dec
inc
pop
shll
scas
lock
cli
call
pop
inc
xchg
repnz
cwtl
fstpl
cwtl
pop
sbb
das
jno
aas
cmc
andl
pop
cld
xor
imulb
mov
insl
mov
mov
mov
cmp
mov
loop
lock
mov
sti
pop
lea
push
mov
into
xor
aad
xlat
mov
mov
andl
out
out
les
fidivl
add
fwait
jmp
mov
sbb
dec
mov
mov
pusha
bound
xchg
and
jo
repnz
inc
cmp
mov
arpl
outsb
js
inc
adc
ss
enter
and
idivl
lds
adc
sbb
ds
movsl
pop
sahf
sbb
xchg
loop
mov
xchg
jne
adc
or
mov
dec
sarl
lods
or
stc
ret
js
pop
add
out
stos
popa
dec
cmc
lret
cmp
sbb
dec
mov
mov
ror
cmpsl
xchg
shll
test
mov
mov
push
pop
add
xlat
ret
xor
lods
lock
sahf
pop
cmp
repnz
or
or
nop
sbb
lret
add
ficomps
pop
imul
lock
stc
mov
mov
cld
mov
push
cld
in
dec
repnz
sbb
popa
cmc
xor
fdivl
push
or
mov
or
push
mov
push
adc
subb
push
adcl
pop
mov
or
pop
cmpsb
xor
inc
movsb
sub
sbbl
push
aaa
push
adc
rol
hlt
mov
lret
stos
int3
dec
mov
notl
stos
inc
lods
mov
push
sbb
or
es
mov
or
leave
dec
jns
test
push
pop
sub
stc
push
and
test
sbb
push
jge
scas
mov
mov
test
mov
xor
repnz
orl
xchg
jg
jg
sub
push
cli
lret
adc
stos
sbb
xchg
leave
xchg
test
fs
xchg
rol
xor
xchg
push
mov
ljmp
mov
sbb
in
movsb
mov
outsl
mov
xchg
in
sahf
mov
mov
cwtl
sub
mov
bound
mov
push
push
xor
and
mov
adc
out
pop
lods
rol
testb
gs
inc
clc
mov
in
xor
adcl
jbe
sub
out
call
mov
loop
int
leave
jnp
lods
jne
lock
imul
xlat
out
leave
pop
push
xchg
std
sub
or
xor
inc
pop
into
stc
sbb
jmp
cli
xor
mov
cmp
push
push
inc
hlt
xchg
subl
pushf
push
xor
or
lea
test
xor
and
out
rcll
push
jae
mov
out
mov
xchg
hlt
int
ss
je
xchg
leave
sub
pop
add
lcall
scas
cmp
cli
xor
add
stc
pop
sbb
push
inc
xchg
and
repnz
sub
pop
sub
enter
fisttpl
sub
fdivl
mov
test
decl
lcall
adc
cmp
ja
xlat
jne
mov
pop
and
enter
repz
mov
es
call
dec
mov
or
and
mov
sub
or
fbstp
in
sub
roll
outsl
push
xchg
mov
stos
stos
scas
fwait
and
sbb
pop
xor
stos
jp
add
jg
lds
lahf
aam
inc
shlb
icebp
mov
mov
fcmovne
mov
bound
pushf
push
mov
push
enter
xchg
push
cmp
icebp
mov
les
pop
fucomp
ficoml
xchg
xchg
jns
jnp
xor
jno
vmulps
mov
or
pop
ja
iret
mov
push
adc
lret
mov
push
adc
jne
insl
pusha
aam
and
mov
hlt
mov
fs
ror
mov
pushf
das
mov
push
xorb
test
sahf
js
xor
mov
in
mov
push
cmp
imul
mov
or
ret
inc
ss
daa
sbb
inc
lds
iret
adc
idivl
add
cmp
in
bound
daa
mov
out
or
das
inc
mov
adc
rcll
mov
pop
and
icebp
adc
push
stos
mov
cmp
sub
ret
lock
icebp
inc
lret
aaa
pop
push
loopne
cli
or
xchg
mov
xor
jae
jle
fcmovnbe
in
sbb
add
leave
sbb
ja
std
mov
fsubs
push
shll
add
mov
popf
pop
and
push
or
enter
movsb
or
jl
dec
pop
xchg
imulb
push
ret
test
pop
inc
cltd
inc
rep
xchg
cmp
cmc
mov
mov
insb
xor
xchg
push
xor
sarb
shlb
push
lcall
jmp
sbb
sbb
out
std
loop
push
mov
add
and
test
mov
inc
or
orl
in
ljmp
pop
les
sub
xlat
mov
jmp
insl
loope
sbb
stos
mov
sbb
inc
test
adc
cmpsl
cmp
mov
lret
lock
loop
das
inc
fisttpll
xor
mov
ljmp
xchg
adc
popf
inc
sbbl
sar
inc
shrl
cmpsl
addr16
test
rep
jge
add
jnp
cmpsb
mov
cmp
outsl
test
sub
ficompl
imul
xchg
fistpll
cmc
inc
aam
call
mov
dec
jnp
dec
mov
or
js
mov
jecxz
sub
mov
ret
stos
xor
push
push
dec
or
clc
test
dec
pushf
inc
mov
sub
test
aas
bound
dec
push
add
sub
shrl
cmp
scas
xor
or
and
leave
in
cmpsl
xchg
jge
pop
xor
loope
add
inc
sub
loopne
fistps
and
repnz
in
push
push
or
xor
fwait
mov
jl
int
ds
jae
aad
inc
ja
and
inc
and
mov
xor
in
dec
add
sbb
into
xchg
stos
fcomp
or
xor
mov
test
jecxz
repz
ja
scas
es
xor
stos
pushf
inc
and
jns
loop
mov
cmp
es
jmp
ficoml
mov
pop
cs
lcall
je
loopne
je
in
mov
cmp
sub
pop
idivl
xchg
and
pop
cmpsb
cld
stos
js
call
cmp
icebp
leave
pop
xchg
in
sub
pop
mov
sub
sbb
int3
std
cwtl
and
ret
mov
sbb
xchg
cmc
iret
mov
stos
dec
inc
sbb
aaa
adc
cmp
nop
sbb
nop
loope
mov
je
imul
repnz
gs
sub
dec
aas
xchg
mov
pop
test
loopne
fisubs
mov
imul
mov
mov
sub
or
mov
push
jnp
arpl
push
dec
fidivrs
dec
sahf
lcall
ljmp
aam
mov
outsb
sahf
jo
pop
inc
out
push
hlt
outsb
xor
shll
sub
enter
std
sub
push
lds
cwtl
pop
rcl
jmp
mov
es
ss
nop
pop
mov
mov
testb
enter
iret
or
xchg
clc
dec
adc
inc
insb
mov
jns
outsb
inc
out
add
xor
inc
jne
dec
or
mov
fs
push
mov
add
sahf
inc
and
inc
aad
rcll
jns
aas
mov
and
push
pop
ds
sub
rcll
cmovno
clc
add
cld
cwtl
in
and
out
pop
insb
data16
dec
js
jbe
loop
dec
clc
jle
cmp
dec
fnstsw
mov
js
or
pop
dec
lahf
roll
mov
jae
arpl
out
cs
and
cli
sahf
push
cmp
lret
out
adc
cltd
into
in
sub
mov
push
test
mov
icebp
cmp
xchg
adc
xchg
sbb
push
cmc
jmp
dec
pop
stc
add
cld
call
lret
xor
arpl
pop
int
adcb
mov
cltd
pop
jmp
data16
pushw
push
mov
imul
pushf
notl
in
inc
mov
add
and
mov
push
mov
cwtl
lret
xor
xchg
rorb
cld
xlat
or
popl
or
or
sbb
mov
in
jl
cmp
idivb
sub
inc
lcall
fisttps
lea
and
sub
fcomps
push
fisttpl
inc
mov
test
xchg
and
test
nop
xchg
enter
dec
mov
scas
and
pop
add
mov
sbb
int
cmp
mov
add
mov
aaa
sub
xchg
dec
outsb
pop
cmp
dec
push
push
mov
shlb
dec
push
lret
popf
cltd
dec
into
lea
mov
xchg
rcrb
out
ror
sub
out
mov
call
lret
adc
xor
js
dec
cmc
mov
dec
orl
mov
push
pushf
push
adc
adc
arpl
push
sub
jecxz
cmp
hlt
adc
sub
loop
popf
jle
out
movsb
xorl
inc
or
pop
push
inc
cmc
mov
add
pop
rolb
push
rcrl
xchg
mov
aaa
es
mov
sub
mov
int3
sbb
in
stos
push
dec
mov
out
cli
fcomp
insb
fbstp
hlt
inc
cmc
fldl
stos
xchg
mov
dec
mov
or
test
in
out
jmp
sbb
notb
pop
mov
mov
test
cmp
call
ret
and
loopne
in
test
sbb
push
pop
test
pop
sbb
xchg
jmp
insl
test
cmp
mov
mov
or
xchg
mov
and
mov
roll
pop
stos
test
imul
push
pop
lcall
mov
xchg
out
or
xchg
mov
or
xchg
sbb
mov
or
inc
nop
std
imul
ret
cwtl
jg
in
cmp
stos
adc
arpl
or
leave
xchg
cmpsl
add
outsl
js
loop
pop
mov
dec
lods
movsl
lds
pop
jnp
xorb
int3
xchg
iret
jge
fildl
cmpsb
pop
inc
and
aaa
xor
mov
sub
fwait
add
or
outsb
add
pop
pop
mov
and
movsl
mov
je
inc
xchg
cmpsl
inc
imul
mov
jbe
call
clc
js
mov
mov
test
cwtl
add
jg
into
cmp
mov
adc
or
or
push
adc
xchg
xchg
lods
and
lret
sarl
push
mov
fwait
or
test
jl
lock
cmpsl
cli
mov
movb
push
popf
mov
js
push
pop
loop
inc
cltd
ret
add
in
lods
inc
pop
mov
std
inc
dec
repz
inc
jb
sbb
jns
in
sub
add
sbbl
int
mov
je
stos
push
fs
sub
cmpsb
cmc
and
rcll
sub
fistps
aaa
mov
rorb
jle
add
sti
push
jbe
mov
scas
jno
scas
je
shlb
fnstsw
jg
and
repz
imul
ljmp
in
gs
arpl
fidivs
das
pusha
mov
paddsb
pop
dec
popf
sub
push
int3
ud2
ds
lcall
or
and
dec
cmp
push
mov
rorb
mov
cwtl
outsb
pop
push
test
test
mov
and
xchg
test
fnstenv
cmpxchg
lds
mov
daa
adc
rcll
push
fadds
ret
and
repz
les
lods
fdivr
jae
add
push
inc
mov
pushf
sub
inc
mov
adc
jecxz
fcmovu
push
mov
lds
fsubp
outsb
maskmovq
testl
mov
push
add
pop
sub
or
lds
dec
sbb
mov
sub
adc
add
lea
dec
mov
shll
mov
aaa
lock
push
inc
movups
stc
in
xor
jnp
pop
enter
scas
testl
xchg
outsl
addl
aas
push
rolb
xor
xor
orb
std
lret
out
pop
mov
jno
orl
aam
shll
and
mov
lret
popa
jmp
mov
jg
adc
in
jne
pop
stos
stos
inc
out
fisubs
adc
jmp
jne
call
jne
mov
lcall
xchg
push
push
jecxz
xor
out
xchg
stos
jmp
jae
in
gs
aam
add
outsb
jl
lcall
mov
sbb
loop
or
add
or
xchg
inc
pop
sub
lods
mov
sbb
push
inc
int3
xchg
mov
xchg
dec
xor
cld
pop
aas
xchg
push
xchg
sarb
push
mov
mov
xchg
inc
xchg
lock
push
sub
stos
cmp
and
push
mov
roll
in
int
mov
mov
or
testb
sub
mov
xchg
movsl
or
mov
das
lahf
or
stos
test
arpl
or
mov
jbe
cmpsb
mov
inc
xchg
add
fiaddl
lahf
sbb
pop
out
cmpsb
xlat
mov
or
dec
in
mov
pop
idiv
push
sahf
jecxz
adc
je
mov
jge
ja
pushl
jg
int3
jl
loopne
add
mov
inc
insl
lret
or
xchg
fsubrp
in
or
ss
mov
xlat
arpl
jne
add
je
mov
outsl
fsub
adc
cmpsl
sbb
frstor
in
mov
je
pop
xchg
stc
ljmp
movsl
sbb
and
push
dec
mov
test
and
insl
dec
movsl
loop
adc
sbb
dec
dec
dec
mov
js
daa
pop
fiadds
and
call
fs
in
cmp
mov
xor
popf
push
and
or
jecxz
fists
add
movsb
fs
enter
push
and
mov
stc
shll
out
inc
xor
pop
mov
dec
mov
pushf
addr16
fnsave
ljmp
addr16
add
pop
ljmp
shrl
cmp
push
ljmp
ljmp
arpl
adc
mov
out
outsl
adc
mov
enter
and
inc
pop
aas
notb
test
sub
lods
pushl
mov
fimuls
xchg
mov
not
pop
ret
mov
push
jnp
mov
stos
outsl
ficoms
sbb
rol
push
push
inc
cmpb
mov
mulb
es
cwtl
cmc
lcall
das
fmull
ror
shll
cld
and
outsl
push
outsl
je
jmp
enter
cmpsl
cltd
or
mov
hlt
in
or
pop
lahf
sbb
bound
mov
sub
mov
or
fsubl
scas
test
lds
int3
popa
sbb
mov
sub
or
in
lea
in
outsb
fucomip
adc
cmc
mov
into
rorl
or
lahf
mov
xchg
mov
stc
ds
mov
xchg
pop
cmpsb
fdivs
mov
adc
dec
mov
xchg
ret
inc
pushl
je
clc
push
cmp
dec
mov
cmp
cmpsl
imul
shrb
fldenv
mov
int3
jge
or
lods
xchg
adc
aad
xlat
ret
mov
int
sub
and
jmp
sbb
xchg
scas
in
test
xlat
rclb
push
test
xlat
je
adc
lret
dec
mov
pop
jne
and
lcall
cmpsb
out
fwait
or
fmull
dec
dec
jne
add
fidivs
xchg
test
in
sahf
add
sbb
inc
lea
push
iret
cmp
fmull
icebp
add
push
mov
cmc
stc
push
mov
or
sub
pop
xchg
push
test
sub
pop
xchg
push
xchg
jbe
bound
popa
mov
in
ljmp
rcrl
sti
fldl
test
mov
jg
cmp
cmpsl
inc
mov
loopne
and
bound
stos
in
adc
lahf
dec
mov
popl
ss
push
jne
aam
dec
nop
jp
outsl
pop
xor
nop
push
add
dec
iret
inc
inc
adc
rclb
mov
cwtl
stos
cltd
or
push
xlat
bound
cmpsb
addb
cmp
lret
lret
repz
scas
add
and
rorl
mov
inc
mov
push
jb
mov
sub
jbe
xor
out
mov
jb
cs
mov
loope
popa
ficoms
jp
cmc
sbb
jp
notb
push
cmpsl
pop
jg
dec
andl
mov
inc
pop
xchg
cmpsb
adc
jne
leave
out
pushf
mov
in
jmp
adc
sub
mov
in
and
sub
fcoml
loope
ficomps
and
insl
sub
gs
mov
xchg
push
je
sub
sbbb
mov
in
shrl
mov
mov
xchg
mov
imul
push
pop
sub
mov
call
sbb
adc
into
fstpl
stc
mov
push
pop
and
out
cwtl
cltd
out
xchg
out
mov
es
repnz
push
mov
testb
sub
mov
mov
cld
or
sti
ja
mov
mov
mov
pop
pop
pop
pop
and
movsl
in
pop
mov
sub
lods
ret
sub
insl
std
pushf
mov
out
shll
push
lds
fwait
daa
pop
cmp
lods
and
adc
pop
movsb
sbb
in
dec
dec
adc
xchg
sub
in
dec
fnstenv
lret
dec
int
cmpsl
mov
clc
std
test
pop
iret
adc
repz
cmp
out
sbb
adc
pop
rolb
in
mov
gs
mov
pop
cwtl
mov
rorb
or
bound
or
dec
and
jp
ss
jns
insl
inc
lds
icebp
mov
rolb
dec
sbb
sub
aaa
or
mov
icebp
xor
push
mov
pop
sahf
pop
sarb
test
pop
loopne
lret
cmc
div
cs
fldcw
push
add
sarl
fistpl
shll
insb
dec
jbe
sub
adc
jae
xchg
jns
add
insb
je
cmp
mov
test
inc
out
push
jns
jnp
xchg
outsb
sahf
mov
inc
jg
inc
jle
jne
xorb
xchg
clc
scas
inc
lea
and
adc
xor
popf
daa
ja
cmp
in
shrl
dec
push
mov
mov
mov
outsb
lea
mov
jmp
jg
or
outsb
outsb
loop
ds
ret
xor
flds
mov
out
stos
sbbl
dec
hlt
lret
or
or
push
stc
push
xchg
inc
popf
mov
push
add
scas
or
cmp
mov
fsubrs
cmp
mov
add
out
xchg
dec
test
cmc
xchg
xchg
test
imul
lock
orb
testl
sahf
sbb
mov
out
jbe
in
adc
mov
adc
addr16
lcall
ljmp
into
or
addr16
rcrl
repz
sbb
pop
mov
test
insb
popf
loope
cmc
mov
aad
inc
js
jne
lods
outsl
enter
mov
stos
xorb
js
es
dec
push
pop
mov
sbb
pop
je
add
imul
jo
int
mov
add
out
or
xor
shl
push
int3
in
fs
push
fcmove
jno
loope
data16
sbb
or
popa
xchg
xchg
mov
outsb
adc
and
pop
scas
fmull
loope
push
popf
fimull
and
jne
daa
mov
sbb
pop
mov
adc
adcb
xchg
insb
mov
pop
inc
fs
push
jne
xchg
cmp
or
cli
adc
mov
mov
hlt
xchg
test
jae
mov
mov
fwait
ja
pop
mov
movsb
cmc
aas
dec
fstpt
nop
loope
scas
js
add
sbb
or
mov
dec
sti
jmp
xchg
cmpsl
cmp
sbb
xchg
dec
push
sbb
mov
or
enter
test
mov
push
sahf
xor
xchg
cmp
push
popa
mov
sub
mov
lods
call
repnz
adc
xor
pop
imul
push
test
in
cmc
std
stc
adc
xchg
leave
fcmovnu
movsl
jns
movsb
cs
andl
ret
mov
popf
cs
push
dec
cmp
add
and
pop
mov
sub
or
fs
movsl
push
add
mov
ds
in
mov
nop
pop
faddl
jg
movsl
adc
or
or
xchg
std
movsl
push
or
push
sub
lret
inc
and
xor
mov
cmp
cmp
call
inc
pop
push
mov
push
adcb
cmp
lret
aad
push
clc
fldl2e
inc
push
xor
js
lahf
ja
pop
or
ljmp
dec
jl
dec
mov
mov
cmp
push
adc
pop
out
adc
or
mov
in
bound
mov
into
cmp
sub
pop
pop
dec
ss
cmp
cwtl
fimull
push
add
xchg
push
insl
mov
bound
jmp
sahf
mov
adc
add
push
mov
hlt
aas
cld
mov
and
iret
std
aas
je,pt
cvtdq2ps
mov
and
and
cmp
fucomp
fnstsw
and
jae,pt
adc
ljmp
outsb
inc
cmpb
sub
add
hlt
and
shll
aad
stc
std
shlb
sbb
fidivrl
test
mov
mov
fsubs
scas
repnz
stos
xor
dec
nop
fwait
xorb
mov
or
xor
notl
cmp
mov
jle
dec
in
jnp
cmp
push
pop
imul
data16
lds
inc
and
decl
add
jns
cmp
sbb
cmp
ss
xlat
out
push
scas
lret
pop
lea
cld
push
lahf
ret
xor
cmp
jb
ficomps
sbb
push
xchg
incl
ja
dec
loop
inc
pop
stos
adc
ss
fistps
push
add
and
cli
xchg
test
fwait
add
push
or
lret
test
add
fiaddl
jle
and
jb
or
adc
test
outsl
dec
push
adc
sbb
push
cmp
cmc
arpl
pop
test
js
mov
popa
and
sbb
xchg
push
pop
repz
dec
dec
js
loop
xchg
pop
in
mov
jg
je
jg
add
es
mov
mov
cmp
xchg
aaa
andl
sbb
xchg
lret
mov
lods
jmp
mov
cmp
popf
loop
pop
rorb
cwtl
push
sub
in
add
pop
sbb
rolb
dec
mov
jp
xchg
mov
sub
pop
in
cmpsb
aad
cpuid
arpl
addr16
pop
cmp
sub
outsl
ffreep
mov
out
mov
out
data16
ret
movb
push
sarl
fbld
shrb
test
xchg
int3
push
sbb
jg
popf
pop
mov
push
lock
mov
and
cmpl
std
aaa
cmpsl
pop
cmpsb
push
ret
sbb
pop
cmp
pop
pushf
in
mov
dec
movsb
xlat
adc
pop
call
sbb
xor
fidivl
xchg
pusha
popf
push
sub
cs
cmpl
add
mov
pop
adc
jne
sub
shll
push
sbbl
dec
stc
jo
icebp
cmp
dec
mov
fimull
inc
adc
mov
jnp
hlt
dec
arpl
lods
ret
in
and
mov
cltd
xor
and
cmp
ficoml
sub
add
nop
or
mov
mov
sti
pop
std
aas
xchg
xchg
xchg
pop
sbb
mov
movsl
mov
leave
xchg
adc
jb
sub
cmpsl
test
sarl
xchg
repz
push
and
pushf
sub
jb
lret
sahf
push
pop
sub
mov
out
push
int
dec
push
sbb
mov
mov
and
imul
pop
push
push
test
dec
adc
cmp
ret
sbb
inc
loopne
bound
push
xor
sbb
sbb
mov
mov
add
jae
add
out
ret
jnp
test
pop
pop
add
mov
cli
and
bound
inc
push
or
pusha
sbb
jmp
dec
pop
pop
int
mov
mov
mov
movsb
mov
pusha
js
xor
cwtl
out
mov
mov
out
inc
dec
push
sbb
cld
jmp
shrb
sbb
and
dec
jmp
jg
and
int3
sbb
xchg
mov
xorl
mov
push
std
pop
lret
in
std
loope
push
push
xchg
fcmovnbe
and
loopne
std
mov
fidivl
stos
scas
pop
pushf
sbb
mov
addr16
push
xchg
in
lcall
mov
scas
sub
cmpsl
mov
push
in
or
xor
jns
xchg
push
sub
orb
xor
mov
dec
std
inc
ret
lods
jl
dec
dec
fwait
and
pop
mov
jge
fnsave
jb
subl
lret
in
add
daa
jmp
je
imul
rep
mov
fs
jge
xor
and
mov
mov
fbld
mov
inc
sarb
xor
cmp
rolb
in
ret
inc
lcall
stc
xchg
mov
push
scas
test
fcomip
imul
sbb
pop
jmp
adc
pushf
ljmp
mov
fucomi
sbb
xchg
cmp
faddl
pop
and
cli
insl
and
sub
sub
das
ffreep
mov
repnz
dec
push
xchg
stos
add
fwait
dec
notrack
adc
inc
cmp
xchg
cltd
mov
test
shll
loopne
andb
stc
testb
hlt
call
push
and
fisubl
pop
inc
pusha
xchg
insb
mov
add
xor
inc
adc
sub
outsl
adc
data16
scas
inc
stos
fstps
push
xchg
int3
add
test
pop
subl
or
je
dec
push
or
scas
adc
or
pop
fmuls
push
fdivrl
std
iret
sub
jp
cs
aaa
fwait
mov
sbb
pop
adc
addr16
sub
mov
cmp
or
adc
jg
jnp
pop
inc
mov
lds
ljmp
xchg
pop
push
sub
scas
or
arpl
and
scas
dec
mov
mov
inc
mov
es
and
movsl
push
cld
inc
adc
inc
dec
das
cs
stos
or
pop
out
scas
idiv
out
fstp
adc
out
cmp
mov
mov
aaa
mov
jmp
xchg
add
fwait
loope
loop
hlt
stos
mov
lcall
jl
shll
push
outsb
sbb
mov
jmp
xchg
lods
push
repz
push
jbe
cmc
aaa
mov
inc
cmp
dec
mov
loope
mov
cmp
mov
adcb
add
sub
mov
xor
and
cli
add
mov
or
es
addr16
pop
enter
mov
cltd
scas
xor
in
jne
pushf
cmpsb
in
mov
cmpsw
mov
out
push
data16
addl
push
push
xchg
dec
mov
add
aad
or
sbb
jns
insb
out
or
cld
imul
xchg
pop
ret
outsb
pusha
lret
xor
test
adc
sbb
fmull
mov
sub
inc
out
repz
ret
fimull
bound
insb
dec
mov
xor
pop
fsts
push
icebp
fmuls
dec
rcrb
jnp
sbb
and
adc
sar
inc
add
adc
pop
xchg
push
loopne
push
dec
or
ret
dec
hlt
dec
mov
das
sti
imul
adc
lret
icebp
sbb
push
jns
sub
fbld
dec
pop
mov
mov
iret
repz
or
push
std
aaa
mov
out
movsb
leave
dec
ret
out
out
dec
jo
mov
aas
adc
inc
fistps
jno
jns
popf
xor
adc
ds
sbb
jmp
cmpsb
sbb
mov
ret
es
data16
xor
lret
add
dec
pop
and
jp
mov
sub
pop
sub
xchg
cmp
add
fwait
sbb
insb
push
lea
ds
les
dec
movsb
fdivs
push
mov
bound
jnp
std
lret
xchg
in
sbb
inc
loop
mov
repz
push
adc
shlb
addr16
adcb
push
je
inc
outsl
stos
shrl
push
xlat
lahf
pop
inc
sub
jecxz
lea
dec
movsb
pusha
and
cmp
push
hlt
adc
pushf
dec
jg
dec
adc
pushf
cmp
push
dec
push
je
push
sbb
sub
lds
nop
pop
dec
lcall
scas
pushf
push
pop
cmp
lcall
add
mov
sub
inc
addr16
dec
insb
push
jge
mov
std
hlt
cmp
loope
xor
jno
jmp
jbe
push
.byte
.byte
sti
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
aaa
movsb
or
push
das
cmp
mov
pop
jmp
jge
ret
inc
jns
pop
insb
xor
add
sub
movzwl
pushl
sbb
pop
jmp
and
xor
shlb
int3
adc
mov
add
add
fistps
call
ja
movzwl
push
jmp
addl
jle
sub
popl
mov
jmp
lods
loop
xor
sub
call
hlt
sbb
fidivrs
pop
add
cmp
jne
jns
sub
jmp
cmpsw
push
std
repnz
jmp
dec
mov
test
xor
or
enter
mov
call
addr16
icebp
adc
dec
ret
cld
imul
lret
cmp
out
adc
icebp
in
push
enter
idivl
inc
out
je
repnz
or
icebp
adc
mov
call
mov
jno
jge
ja
adc
mov
enter
push
mov
jl
in
insl
mov
mov
push
push
stos
leave
jbe
es
pop
enter
dec
aad
dec
jle
mov
es
test
xchg
xchg
hlt
pop
xor
or
lahf
loopne
mov
mov
outsb
out
dec
inc
sbb
je
pop
enter
std
shl
ljmp
or
popf
lds
xchg
mov
dec
inc
and
xchg
inc
inc
aam
push
cmpsl
lea
xchg
or
popf
in
ret
lds
in
test
mov
mov
into
lea
aam
out
in
mov
divb
cmc
jmp
push
inc
add
daa
sub
outsb
dec
lds
xchg
cmc
inc
test
xchg
sbb
aaa
add
fisubl
frstor
cwtl
popf
lds
scas
out
repz
mov
std
sbb
rcrb
lds
xchg
push
fcmove
push
mov
jae
jae
pop
icebp
out
inc
mov
mov
pop
xor
js
jae
sbb
jl
or
les
fbld
pop
adc
fcmovu
sti
loop
fisubl
pop
addr16
stc
pop
pop
xchg
jnp
sti
xchg
inc
out
push
pop
add
cs
hlt
fstpl
adc
mov
mov
out
mov
jae
xorb
xchg
jp
rolb
insl
out
push
xchg
inc
sub
fldl
inc
popf
ret
inc
movsb
cwtl
jmp
sub
call
lock
and
and
pop
lods
or
mov
pop
xor
ss
xor
popf
push
xchg
push
jno
lods
std
dec
sub
adc
inc
jae
sub
popf
push
cmc
pusha
mov
pop
cmp
push
sub
cmp
sub
mov
xchg
jo
imul
popf
push
sub
lret
mov
jl
ss
mov
iret
add
test
cmpsl
popf
call
aam
mov
lods
mov
std
and
js
fldl
negb
xchg
lcall
cmp
cmp
loopne
pusha
jmp
mov
arpl
fsubrl
mov
push
xchg
sub
sbb
mov
xchg
add
inc
xchg
add
mov
lahf
and
mov
adc
lahf
out
ljmp
jmp
out
pop
or
add
rorl
ret
add
pusha
hlt
dec
out
andl
rorl
ret
add
xchg
mov
add
mov
jl
std
out
add
pushf
add
mov
adc
sub
add
mov
daa
out
mov
xor
movsl
jle
cmp
fistpll
mov
sub
fucomp
dec
add
out
mov
shll
out
mov
add
out
mov
add
sub
add
out
mov
add
cmp
add
out
mov
add
out
inc
fcoml
sub
stos
sbb
add
in
add
lods
fisubrl
adc
arpl
sub
out
inc
and
leave
and
mov
int3
push
hlt
mov
adc
fidivrs
pop
and
cmpb
insl
repnz
mov
cs
and
out
ds
stos
and
int3
fs
add
arpl
and
leave
and
mov
fmull
sub
sahf
stc
pop
add
insl
loope
add
addr16
push
jae
mov
dec
push
mov
ds
sti
sbb
adc
pop
movsl
sub
out
mov
add
gs
sub
lods
aas
and
cmpsb
ret
adc
scas
shl
push
ss
mov
icebp
in
inc
pop
rcrl
and
scas
shl
push
fbstp
adc
out
mov
scas
icebp
in
inc
pop
icebp
das
mov
shll
inc
push
loop
pop
pop
push
or
pop
push
arpl
adc
and
shl
push
fstpt
sub
pop
stc
test
loop
loop
loope
add
pop
push
arpl
adc
and
shl
push
ss
stos
pop
es
add
pop
push
arpl
adc
and
and
scas
shl
push
ss
mov
in
push
dec
fwait
clc
imull
mov
sub
imul
push
loop
pop
pop
or
pop
push
arpl
adc
iret
sub
adc
sub
xchg
je
pop
rcll
fwait
clc
aaa
icebp
mov
jp
cmpsb
js
mov
mov
test
mov
adc
ret
arpl
jns
es
aas
leave
std
pop
mov
test
mov
adc
pop
je
fs
push
push
ja
adc
pop
cmc
or
mov
add
out
mov
arpl
mov
mov
adc
aam
inc
fldcw
mov
aam
sub
sub
out
ds
sub
push
adc
mov
stos
in
and
push
cwtd
ret
in
add
sbb
inc
and
and
adc
xchg
in
fldcw
pop
mov
add
pusha
leave
sbb
mulb
sahf
push
outsl
fbstp
pop
inc
mov
out
test
mov
scas
mov
xchg
dec
fidivrs
repnz
or
sub
cmpsl
fists
js
addr16
out
pushf
xchg
push
mov
clc
loope
mov
icebp
sbb
mov
mov
add
out
mov
add
out
mov
add
add
out
mov
inc
adc
out
mov
add
out
mov
add
out
mov
fdivrl
lock
out
mov
gs
cmp
dec
inc
pusha
sub
call
xchg
or
in
cld
push
ret
rclb
jl
jecxz,pt
jne
in
dec
test
and
sahf
xchg
mul
addr16
xlat
add
jb
and
mov
jo
sarb
fsubrs
jns
je
mov
push
ss
aam
popa
pop
inc
scas
aad
scas
imul
aas
cli
jo
lock
inc
mov
fistps
cmpsb
shl
scas
xchg
sub
cli
je
jecxz
cmpsb
jle
push
test
and
pop
nop
aam
ret
leave
and
fmuls
ja
gs
xor
jmp
mov
out
mov
mov
sub
dec
arpl
and
xchg
dec
bound
je
sub
fsubr
push
gs
cli
in
rcll
loope
sbb
xor
jns
jl
cmp
in
xor
fcomi
stos
push
mov
subl
test
int3
sub
les
mov
jecxz
clc
popf
js
js
clc
sub
int3
hlt
stos
sub
push
dec
les
dec
xchg
repz
pop
xor
ja
movl
mov
addr16
inc
nop
jl
popl
mov
cld
dec
jmp
xchg
jns
outsl
lret
ljmp
cli
add
mov
jp
stc
add
jbe
pop
loope
push
and
outsl
xchg
movsb
jle
sbb
and
in
rorl
jecxz
cmc
xchg
or
adc
in
movd
mov
aas
jecxz
out
push
movsl
jnp
push
xorb
rcll
aam
jecxz
mov
aaa
jmp
loope
xchg
xchg
subb
fistl
gs
or
cmpsl
cli
ret
inc
imul
movb
dec
add
outsb
xor
mov
in
in
sub
sub
xchg
sub
sub
mov
jl
scas
add
pushl
and
call
jo
addl
xchg
lahf
loopne
inc
call
xchg
sub
insb
je
jb
or
push
enter
addb
imul
out
adcb
insl
and
nop
pop
mov
loopne
lahf
out
or
mov
lods
cmp
std
sti
mov
test
jge
popa
and
loop
imul
mov
in
div
addr16
jno
jnp
xor
jecxz
outsb
add
mov
cmp
outsb
repz
out
inc
lahf
push
imul
mov
cmpsb
mov
loopne
cmp
ficompl
jl
mov
popa
push
dec
mov
imul
add
enter
add
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
add
pop
or
add
adc
add
pusha
or
add
pop
or
add
sub
add
ss
add
inc
or
add
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jb
cs
insb
add
fs
insb
cs
insb
add
je
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
lret
or
add
fimuls
add
hlt
or
add
add
inc
gs
gs
popa
addr16
add
add
outsb
push
jb
arpl
jae
outsl
imul
add
pop
jae
jb
insl
jo
add
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
add
je
jo
inc
jne
data16
jb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
jg
ficomps
pop
test
pusha
andb
or
xchg
insb
push
clc
push
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
push
sbb
movsl
bound
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
add
add
outsl
add
add
add
pop
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
jg
ficomps
pop
test
pusha
andb
or
xchg
insb
push
clc
push
and
dec
jb
addr16
bound
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
add
outsl
add
add
js
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
push
sbb
movsl
bound
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
pop
mov
add
add
add
int
jb
ret
insb
cmp
cmp
stc
xchg
ret
sbb
test
ret
scas
pcmpgtd
add
rcrb
daa
cld
imul
pop
sbb
pop
mov
rorb
sbb
scas
or
pop
sbb
mov
dec
jl
daa
add
push
mov
jecxz
mov
or
add
xor
cmc
andl
push
push
ja
mulb
jmp
fwait
add
bound
and
pop
fisubs
negb
out
pusha
and
std
push
movsl
xchg
pop
sub
xchg
inc
or
pop
jmp
dec
hlt
arpl
push
mov
mov
lods
lea
je
ljmp
rolb
sbb
adc
mov
movsl
mov
xchg
dec
imul
cwtl
sti
dec
xchg
jns
sbb
jecxz
jp
xchg
in
aas
push
mov
ss
dec
and
sbb
cmpsb
sub
push
adc
stos
inc
aas
pop
mov
xor
and
loop
xchg
xchg
fistpl
push
jne
mov
mov
xor
mov
xlat
imul
inc
mov
cmc
mov
lcall
dec
rcl
cmp
push
mull
jb
insb
dec
jbe
subl
push
xchg
nop
mov
sbb
movsb
sbb
fwait
aam
or
mov
mov
inc
es
shrl
and
inc
xor
in
dec
jnp
loope
adc
je
das
fcomip
mov
pop
sarl
sub
insb
filds
inc
inc
dec
xor
popa
or
in
orl
push
xor
adc
iret
daa
cli
jp
mov
cmp
mov
filds
insb
cwtl
or
xchg
and
icebp
dec
mov
inc
mov
hlt
std
flds
mov
add
mov
decb
push
das
iret
dec
inc
mov
icebp
xor
incb
mov
pop
adc
cmc
shlb
inc
aad
mov
jo
sbb
mov
sbb
mov
iret
test
or
jl
cmp
rcrb
mov
loop
aas
or
sarl
sub
and
jne
rcll
cs
fsub
ret
pusha
or
adc
sub
push
call
push
sarl
loope
jns
adc
pop
mov
out
or
shl
inc
xor
inc
pop
xor
jp
inc
ret
xor
cwtl
mov
addr16
fsubrs
pushf
shrb
lahf
in
mov
pop
sbb
cmp
cmp
fcomps
mov
leave
mov
ss
xor
stos
mov
jbe
adc
cmc
mov
call
dec
loopne
aad
jg
filds
cmp
mov
in
push
sub
test
adc
xchg
inc
pusha
lds
hlt
push
xor
adc
ss
notl
or
push
mov
inc
repz
jo
movsb
rorl
push
andl
xor
cmp
das
pushf
cwtl
cmp
int3
jp
ficoml
and
pop
mov
pop
bound
in
imul
repz
fcompl
sub
cmp
or
sub
adcb
mov
push
push
in
icebp
sahf
aaa
std
in
mov
aaa
and
push
sbb
rol
pop
xchg
jecxz
outsl
mov
fisubl
gs
fistps
dec
negb
mov
ja
fildl
and
lea
jl
mov
insl
stos
adc
repnz
lcall
xchg
cmp
cs
movsb
imull
nop
ss
mov
insl
xor
cmc
and
jmp
nop
inc
stos
push
add
clc
push
jo
dec
in
sbb
mov
pusha
sub
rcrb
mov
adc
pop
push
repz
aam
push
mov
icebp
mov
pop
fcmovnb
xor
gs
xchg
mov
gs
sub
cld
lret
dec
xchg
and
mov
inc
jmp
mov
outsb
adc
cmp
xor
mov
ja
ret
test
pushf
pusha
fwait
outsl
cmc
insl
pop
fs
or
insb
nop
addr16
je
int3
ret
insb
xor
dec
sub
xchg
and
stc
aam
ret
bound
jns
repnz
push
test
dec
pushf
les
mov
mov
xchg
imull
fldt
cwtl
jbe
std
aam
xor
dec
imul
fadds
imul
and
xlat
cmpl
pop
fnstsw
cmp
out
add
push
push
das
mov
arpl
mov
fwait
nop
dec
popa
in
lods
shrb
repnz
dec
dec
lahf
jl,pn
stos
repz
jns
jmp
push
loop
sbbl
mov
mov
sub
imul
pop
repnz
hlt
fistl
icebp
cmpsb
add
adc
inc
inc
ja
push
inc
stc
cmpsl
and
xor
pop
sti
incl
leave
jb
dec
je
inc
or
pop
arpl
repz
lahf
adc
and
jo
sbb
mov
cld
mov
repz
fwait
into
test
sub
mov
pop
es
jnp
sub
test
test
insl
aam
je
inc
pop
into
xchg
out
cli
andl
pop
int3
jl
std
sbb
jl
pop
fistps
ds
stos
push
fdivrs
jb
pop
pop
imul
and
scas
int3
or
pushl
out
mov
cmc
inc
push
out
cwtl
sub
not
add
push
mov
lret
xchg
xchg
sbb
jmp
imul
fnsave
rorl
pop
test
gs
stos
dec
xor
inc
imul
cltd
fadd
or
aad
data16
cmp
jno
jae
in
xchg
sarl
in
inc
aad
sbb
add
fildl
mov
lret
add
test
repz
mov
push
out
imul
mov
mov
jl
or
pop
rorl
mov
or
adc
call
lret
hlt
adc
inc
scas
push
mov
mov
lahf
mov
in
jb
adc
add
mov
lods
sti
insl
push
mov
aas
mov
xor
and
mov
addl
adc
mov
loop
movsl
mov
fldt
dec
out
mov
shlb
or
lcall
iret
mov
addr16
test
mov
int
sub
push
mov
stos
fwait
clc
sbb
or
std
adc
arpl
out
in
stos
cwtl
out
and
packssdw
repnz
fbld
bound
adc
xchg
jle
jbe
mov
mov
pop
cld
push
test
je
and
cs
lahf
sahf
pop
pop
push
stc
dec
fldt
icebp
mov
sbb
or
repz
push
out
imul
push
out
sti
out
outsl
dec
into
sbb
xor
push
pop
mov
das
fnstcw
movsl
inc
push
or
xor
add
ja
test
mov
xor
mov
jge
mov
and
out
xchg
sbb
sbb
sub
pop
sbb
cmp
push
push
fsts
nop
xor
orb
mov
jnp
dec
rolb
mull
mov
dec
jae
push
mov
jnp
cmp
jns
xchg
icebp
push
cli
dec
test
mov
xor
mov
cmp
mov
cmp
imul
out
fcoms
int
stos
scas
fs
mov
lea
clc
insl
jne
or
inc
xchg
jno
fbld
jmp
cli
mov
sbb
icebp
daa
inc
push
pop
cmp
pop
adc
movsl
jge
lret
sub
bound
xchg
fucomp
shll
dec
jmp
mov
jecxz
aam
jbe
lods
xchg
out
aad
fisubrs
mov
dec
dec
sub
add
dec
je
ja
pop
or
ljmp
aas
and
lret
pop
inc
cs
hlt
mov
leave
sub
push
push
jmp
jo
lret
xchg
lock
and
xor
jae
add
inc
aaa
out
sbb
movsl
scas
or
outsl
add
xor
dec
xchg
inc
mov
inc
enter
les
mov
pop
scas
testl
and
inc
mov
push
lods
bound
xchg
insl
inc
lock
sbb
adc
adc
subl
addb
js
xchg
pop
ds
push
imul
xor
sbb
pop
js
xor
orb
jg
cmp
aam
or
loop
aas
inc
cld
fsub
lret
and
xchg
mov
mov
xor
loope
fisubl
fs
lods
fs
imul
mov
inc
push
loop
sbb
add
in
lcall
mov
jnp
fwait
xor
push
ficompl
mov
addr16
pop
sbbl
jbe
cmpsb
push
inc
cmp
rcll
add
icebp
clc
call
sbb
aam
sti
xor
sbb
and
shrb
ret
push
lds
fdivp
xor
insl
js
into
ret
into
xor
inc
mov
push
loopne
xchg
dec
push
xor
cmc
scas
ret
hlt
mov
xor
pop
or
xchg
scas
pop
pop
or
adc
pushf
push
adc
mov
mov
les
daa
decb
loope
in
test
or
push
push
inc
adc
jg
es
loop
int3
inc
pop
mov
xor
lds
inc
lods
test
repnz
in
jl
lret
lahf
mov
mov
in
loopne
mov
fdivr
cmp
lret
gs
das
in
or
movsl
pop
mov
cmp
test
leave
push
fs
jg
push
enter
dec
test
mov
popa
or
movsb
cmp
sub
and
or
or
mov
adc
pop
add
jb
or
adcb
mov
push
xchg
mov
movsl
xor
push
lods
jmp
js
push
movsl
dec
sahf
rol
add
push
pop
jg
xchg
xchg
mov
adc
pop
hlt
das
add
adc
push
sbbl
jae
lods
loope
push
sbb
push
fnstcw
and
cmp
or
xchg
lods
pop
pop
sbb
mov
add
lret
idivb
xchg
jbe
jne
out
fcomi
lahf
and
inc
mov
push
stc
add
lcall
lcall
push
adc
ja
lcall
out
add
mov
sbb
lret
sbb
and
addr16
or
push
push
fadd
jmp
push
pop
lret
cli
and
ret
ds
aas
insl
iret
xchg
testb
orl
outsb
ja
push
add
push
jge
out
lods
cmp
sahf
dec
stos
std
jmp
ljmp
push
push
movsl
push
push
aad
mov
in
pop
sub
lcall
sub
loopne
leave
mov
adc
ja
push
pop
loop
mov
rcll
pushf
xsha256
cmpsb
adc
jg
mov
ficoms
cmp
enter
shll
in
sub
test
fstpt
jne
adc
jmp
lock
cmpsb
dec
movsb
cmp
pop
sbb
sarb
sub
leave
and
scas
cmp
adc
into
scas
std
xchg
cli
dec
lea
pop
pop
call
loope
jle
sbb
xchg
hlt
mov
cltd
out
jl
mov
jns
insl
jg
test
add
sbb
mov
test
sbb
mov
ret
push
inc
pop
mov
mov
test
je
sbb
lahf
rorb
sbb
xor
dec
xor
iret
xchg
into
inc
xor
lcall
lods
shrb
ja
jle
or
push
xor
mov
div
or
roll
push
fs
mov
cmpsb
or
xor
lcall
add
divb
std
sbb
xchg
xlat
imul
pop
inc
in
mov
stc
ficomps
call
inc
addl
pop
dec
sbb
popf
stc
pop
int3
add
notb
and
aaa
xlat
jmp
cli
and
pusha
mov
dec
aas
push
lods
test
aas
xchg
and
decl
fmull
ss
int3
adc
push
insb
jp
shlb
sbb
cld
xchg
rcr
cmpsb
cmovs
ja
pop
lret
cli
scas
dec
xchg
sarb
mov
dec
fdivs
cmpsl
out
dec
add
outsl
pop
pop
test
aas
test
ja
in
std
mov
cltd
inc
sub
cmp
out
mov
jmp
sbb
cltd
lret
mov
test
or
mov
pop
push
dec
lds
aaa
xor
mov
xchg
aaa
xchg
jmp
mov
fmuls
jecxz
push
jbe
mov
xchg
pushf
xor
inc
cwtl
pop
adc
pop
xchg
dec
cmp
inc
or
test
xor
or
sbb
dec
mov
insl
pop
xchg
aaa
outsl
inc
pop
xchg
jp
movsl
push
scas
in
pop
and
push
stos
repz
adc
pop
mov
inc
popa
xchg
arpl
hlt
arpl
inc
jno
mov
scas
xchg
pop
jp
xlat
cmc
jb
cwtl
ret
loop
pop
mov
test
js
fdiv
sub
jb
pushf
sets
push
ja
movl
cmp
jg
mov
fwait
inc
jnp
shlb
dec
test
pop
or
mov
imul
and
pushf
leave
dec
inc
dec
in
mov
xchg
les
push
out
sub
jg
push
fnstenv
dec
xchg
aas
sbb
out
ret
movsl
and
mov
das
and
add
stos
mov
in
adc
cmp
jle
mov
jmp
xchg
add
jle
adc
xchg
add
mov
jmp
adc
cmp
push
mov
out
cmp
jecxz
dec
lea
push
adc
mov
add
mov
enter
dec
fwait
cmc
or
lcall
das
mov
addr16
sbb
dec
std
lods
mov
lret
int3
mov
pushl
dec
pop
pop
jbe
sahf
push
pop
mov
sbb
shll
mov
inc
and
add
les
mov
mov
xor
adc
lods
push
repz
das
adc
js
inc
ret
xchg
scas
pop
dec
movsl
xor
adc
sub
add
out
mov
sbb
push
cmpsl
inc
mov
test
cwtl
lahf
inc
push
push
psignb
pop
notl
lods
sbbl
pop
leave
int3
sub
mov
cmp
xchg
fs
mov
lcall
mov
xchg
imul
in
add
xor
push
out
and
ret
or
scas
xchg
jnp
push
xchg
loop
inc
je
add
pushw
inc
into
aad
mov
adc
mov
mov
and
cmp
xor
movsl
into
dec
inc
data16
mov
pop
fcoml
sub
sbb
lcall
and
leave
pop
xor
push
nop
xor
add
sub
inc
sbb
push
test
or
pushf
adc
sub
cs
bound
pop
sti
xor
mov
ret
insl
jne
clc
pop
dec
mov
pop
lret
xor
mov
int
jo
dec
loope
jg
cmp
inc
cli
xor
testl
mov
orb
cwtl
sbb
andb
push
or
bndldx
mov
inc
pushl
aad
nop
les
std
ud0
addl
test
adc
pop
out
and
out
into
sti
out
cmpsb
js
test
adc
fcomip
loop
enter
in
inc
push
mov
in
or
lret
pop
push
mov
sbb
push
and
pop
mov
xchg
or
fwait
mull
sbb
cmp
cmpsb
adc
std
jns
aaa
xchg
subb
inc
push
sbb
stos
xchg
in
lods
mov
push
jne
scas
push
cmp
popa
es
jno
sub
lret
lods
popf
aaa
lcall
movsb
lret
mov
mov
lea
xchg
jecxz
pop
hlt
sahf
mov
sbb
push
or
hlt
dec
pop
xchg
cmp
movsl
xchg
pop
mov
dec
mov
lock
subb
xor
lds
daa
lret
cmc
das
adc
arpl
addr16
sbb
lods
mov
je
addr16
xor
mov
xlat
fs
insl
or
inc
cmc
out
lret
sub
inc
mulb
adc
push
imul
movsl
pop
sub
int3
ja
in
pushf
sub
test
out
pop
push
fisubs
in
push
ret
inc
out
clc
lods
shlb
testb
xor
lock
test
or
sub
pop
cmpsb
inc
jbe
or
mov
mov
push
dec
scas
outsl
adc
gs
in
and
jo
sub
jle
push
push
mov
sbb
xor
mov
cmp
jns
loopne
std
push
pop
pop
add
xchg
mov
andl
mov
mov
and
outsl
fcomps
loope
cli
cli
inc
jb
inc
dec
sbb
xor
and
xor
sbb
dec
jmp
bnd
jb
les
jnp
pop
les
mov
mov
lcall
mov
mov
lods
mov
mov
xlat
sub
adc
lahf
push
testb
fmull
mov
dec
xchg
inc
repnz
into
aam
jecxz
paddsb
pop
hlt
jl
out
jmp
fcoms
sub
lret
sub
imul
rorb
or
loope
sub
add
jecxz
std
mov
stos
jl
inc
cs
jg
xor
xor
add
es
std
insl
sub
xor
into
movsl
insl
sub
inc
dec
mov
cmp
test
xchg
out
es
jbe
dec
pusha
test
push
pop
mov
xchg
sub
in
loop
mov
or
cli
inc
jge
pop
lods
inc
insb
ret
test
cmc
arpl
jmp
and
cld
in
fcmovnb
loope
es
jle
mov
pushf
sub
sbb
mov
jb
sahf
and
mov
add
fbstp
out
mov
pop
rorl
mov
imul
dec
xor
imul
push
adc
insl
call
lds
jmp
lods
cmp
ret
fs
mov
jbe
pop
testb
shrl
sub
adc
jge
imul
or
mov
jne
inc
pop
sbb
jae
into
xchg
cmc
fidivrl
in
insb
jo
ss
ss
aad
aad
inc
mov
pop
sbb
lock
out
gs
push
sub
sub
ja
out
mov
jmp
outsb
movlps
push
rcrb
fsubs
mov
dec
push
or
mov
add
xchg
mov
xchg
lods
outsl
add
in
loop
mov
pop
adc
fchs
hlt
jns
jmp
sub
mov
mov
push
jle
sub
dec
dec
dec
or
popa
in
sbb
mov
into
test
adc
and
mov
cwtl
jecxz
shll
shrb
lods
loop
sbb
fidivs
out
and
daa
jae
pop
xchg
es
inc
or
les
leave
ret
xor
fs
pop
cmp
loopne
push
mov
mov
sbbl
ret
cs
clc
push
inc
ret
inc
scas
push
lret
or
xor
test
loopne
push
inc
fisubl
les
jns
sbb
aam
jnp
test
inc
jge
cld
cmpsb
cmp
inc
jno
lahf
push
in
imul
fidivs
mov
aad
hlt
lds
jbe
cmp
inc
xlat
into
pop
in
xlat
enter
xchg
fdivs
daa
sbb
stos
lock
xchg
out
pushf
pusha
test
jmp
or
pop
mov
cli
fistps
push
mov
dec
pop
jb
clc
sbb
sub
push
rclb
orl
inc
lcall
movsl
jo
mov
push
or
scas
mov
inc
fwait
cmp
jle
fnstenv
dec
mov
xor
sub
xchg
rolb
and
mov
inc
mov
mov
ret
fsubr
mov
scas
dec
mov
jp
mov
enter
or
popa
in
lahf
dec
ljmp
jns
repz
jmp
mov
xchg
jbe
jns
mov
xchg
mov
inc
lret
icebp
nop
jbe
or
adc
pop
dec
fisttpll
cmp
popa
sub
aas
adc
sub
dec
or
int
jg
mov
insb
sahf
push
jns
stc
test
xchg
loope
lret
add
sub
jne
jae
xchg
pop
mov
mov
in
xchg
mov
inc
outsl
xor
cmp
repz
loopne
in
rorb
mov
mov
pushf
push
ljmp
xchg
jmp
loope
or
xor
movsl
sbb
mov
dec
rep
mov
in
inc
mov
jbe
aam
inc
icebp
lods
out
das
and
ja
andl
daa
mov
ficoms
mov
popa
xor
mov
or
popa
out
mov
inc
addr16
jge
movb
push
jmp
inc
pop
js
scas
xchg
inc
sbb
aam
xchg
cmc
mov
push
jg
xor
and
faddl
dec
xor
icebp
imul
cmp
in
addr16
fmull
inc
andl
and
nop
cld
icebp
xor
xor
xorb
inc
fistl
xchg
push
gs
sub
push
mov
cwtl
outsl
inc
test
scas
imul
mov
pop
iret
pop
rorl
or
cmpsb
xchg
gs
add
adc
lock
imul
pop
sub
stc
jecxz
pushf
in
mov
jmp
out
loopne
jmp
add
sbb
cmp
aas
cs
fcmovnbe
push
jbe
aad
jg
jns
loop
cld
test
scas
sbb
inc
jg
notb
pop
or
cs
push
dec
mov
sbb
or
enter
es
lahf
je
in
xchg
out
jb
add
jo
dec
in
inc
mov
lret
pop
adcb
sarb
lock
jle
mov
repz
inc
adc
movsl
jne
or
adc
mov
pushf
inc
call
mov
aaa
add
lods
mov
stc
std
cmp
cmp
push
xor
inc
aad
stc
in
xor
mov
sbb
dec
mov
push
jae
cmc
out
push
pop
nop
cmpsl
iret
outsb
pop
ss
lret
lret
mov
or
xor
or
ds
nop
xchg
xchg
jp
fwait
js
jns
aam
roll
std
add
fadds
sub
add
push
jl
adc
lcall
or
mov
inc
push
outsb
test
sub
jae
rolb
xor
pop
shrb
push
adc
mov
pop
decb
lods
adc
push
mov
lds
add
gs
out
dec
jle
stc
jp
movsb
jp
jns
and
push
scas
mov
div
jmp
jae
push
add
popf
ret
daa
lahf
sbb
xchg
or
mov
imul
jmp
add
mov
fistpll
adc
cld
lea
inc
iret
js
inc
xor
mov
ds
ja
mov
fcmovu
mov
or
dec
lahf
into
xor
lea
inc
adc
push
icebp
sbb
mov
ror
test
inc
fucomi
icebp
call
and
inc
jmp
jp
std
test
cmp
jg
ljmp
test
mov
mov
push
imul
xchg
jbe
dec
out
mov
insb
inc
gs
mov
popa
cmc
jp
sub
or
pop
xor
jecxz
cli
stc
fldt
sub
adc
cmp
or
xchg
mov
into
or
test
mov
push
out
cwtl
cmc
push
popf
sbb
push
push
sahf
aas
add
adc
gs
popf
fisttpll
dec
les
andl
jle
int
out
insl
and
js
lcall
cld
mov
icebp
pop
ror
in
pusha
daa
adcl
sbb
fcomps
pop
cmp
add
or
mov
fidivl
sbb
and
mov
cmp
or
lods
add
fsubl
mov
jg
pop
scas
cmp
xchg
pop
fwait
cltd
das
and
jae
movsb
and
jns
push
incl
and
in
scas
loopne
dec
iret
sbb
lahf
dec
repz
in
call
jmp
clc
lcall
adc
testb
rol
cltd
xchg
fldl
call
sarb
in
and
mov
xchg
or
push
std
loop
xchg
fnstsw
pop
inc
out
mov
push
in
xor
or
int
ja
in
sbb
mov
outsl
sbb
fcmovbe
pop
sbb
push
cwtl
fiaddl
mov
in
cwtl
fisubl
xchg
push
push
jno
fildll
xchg
filds
addr16
and
aam
pop
or
xchg
cltd
aad
mov
popf
mov
or
sbb
jae
push
aaa
add
lret
sbb
or
les
push
lcall
add
fiadds
sahf
rolb
mov
cwtl
jg
cmp
aam
dec
adc
jne
dec
test
lret
mov
jnp
pop
lcall
leave
es
lock
fadd
sbb
cmp
xor
sar
ja
test
and
scas
jmp
push
insl
jns
jno
sub
dec
xchg
orps
push
lret
and
xor
pop
xchg
inc
push
cmp
out
out
jecxz
mov
fistpl
testb
lods
add
sub
push
mov
mov
inc
jb
pusha
and
mov
fmul
daa
push
les
pop
ljmp
pop
and
dec
rep
frstor
notb
xchg
mov
adc
cld
push
cvttps2pi
dec
push
pop
mov
jp
sub
add
adc
outsl
data16
xor
fs
xor
test
jns
cmp
movsl
ja
notl
ret
sub
ret
xchg
push
fwait
sbb
iret
insb
or
pop
jle
push
ficoms
hlt
mov
out
jmp
pop
out
lret
push
imul
loopne
inc
mov
pop
push
aam
into
insl
push
daa
mov
out
int
and
scas
mov
shlb
mov
pop
push
dec
ds
pop
dec
pop
pop
js
cwtl
jl
mov
push
fbstp
and
test
pmaxsw
jg
mov
add
push
or
jge
push
lcall
jns
xchg
rcr
orl
push
mov
fcompl
shl
add
adc
test
push
movsb
sub
shll
adc
or
mov
mov
mov
cmp
cmp
xor
imul
ret
add
mov
lock
gs
add
leave
ficoml
loope
adc
sub
loope
sti
inc
out
fisubrl
out
jo
push
adc
inc
inc
push
daa
jl
dec
popl
movsl
inc
xchg
mov
dec
pop
pushl
jg
fadds
jmp
lahf
and
fcomi
inc
bound
insb
xchg
dec
fidivrs
shlb
cmpl
aaa
adc
call
mov
or
adc
xchg
cld
adc
fcompp
xor
pop
sti
lcall
pop
add
lds
dec
xchg
les
out
lret
inc
insb
mov
ret
lret
stc
jl
pop
add
ret
xchg
cwtl
mov
bound
add
or
rol
xor
jno
push
test
shll
bswap
lods
cmp
xchg
int3
pop
add
cwtl
pop
xchg
push
add
sub
mov
mov
loopne
dec
push
sub
fnstsw
adc
xlat
ret
addr16
mov
jg
aad
jns
add
or
hlt
outsb
or
lcall
out
dec
push
out
cmp
sahf
repnz
addl
dec
dec
insl
ds
lods
sahf
out
inc
leave
cmp
in
mov
dec
jbe
ss
xchg
roll
xor
adc
test
inc
mov
lret
gs
lds
dec
fdivs
pop
jp
inc
xchg
xor
jecxz
mov
jg
imul
mov
adc
jecxz
add
cltd
das
mov
push
sbb
jmp
out
mov
mov
push
cltd
in
aas
cmpsl
jecxz
scas
jnp
and
jmp
sub
xchg
adc
iret
ffreep
orb
stos
jno
stos
iret
inc
cs
test
test
dec
inc
mov
add
fs
jl
add
aad
pusha
ss
insl
mov
push
bound
mov
lahf
xchg
sbb
jns
ja
adc
sub
push
in
rcrb
push
bound
push
jge
cmc
push
xor
clc
or
cmp
icebp
dec
adc
xchg
mov
jg
mov
jp
in
fwait
cli
in
fists
clc
pop
xor
or
sub
call
push
out
inc
push
ljmp
push
notl
xorl
daa
pop
lods
cmpsl
jecxz
sbb
add
fs
cmp
fucomp
scas
mov
mov
mov
xchg
jmp
xchg
and
xchg
and
fstl
fs
data16
cmp
stc
enter
add
mov
mov
push
add
fsub
dec
or
test
mov
pop
mov
and
pop
sub
fistpl
call
rolb
jg
xchg
movsl
mov
test
cmc
outsl
push
inc
xchg
xchg
repnz
xlat
xor
fcoms
test
dec
pusha
loop
and
ss
cmpsb
popl
int
sub
xchg
insb
test
or
aad
dec
pop
fstps
lret
in
js
cmp
push
stos
test
out
push
push
cmp
or
les
pcmpgtw
pop
and
lods
cs
jg
js
cltd
dec
adc
xor
pushf
scas
nop
pop
addl
arpl
stos
and
push
std
insl
sub
sub
out
sub
bound
mov
int
mov
daa
in
fincstp
and
mov
movsb
lcall
lret
xchg
mov
xchg
test
mov
sub
mov
fimull
ljmp
dec
inc
stos
sbb
cmp
xor
cmp
xor
fcmovu
lds
int3
insb
push
sub
insb
mov
sub
ljmp
pop
mov
imul
sub
sbb
sti
daa
dec
xor
push
dec
mov
dec
mov
arpl
push
scas
test
into
jne
enter
add
cwtl
addr16
mov
pop
movsb
insl
repz
pop
dec
cmc
push
pop
test
xchg
call
sbb
xchg
pop
dec
dec
cmp
loop
enter
insb
es
into
mov
mov
jle
lcall
mov
cmp
xor
das
outsb
xchg
xchg
das
gs
int3
jp
fdivrs
fwait
push
lret
xor
je
cli
add
xor
sub
addr16
xlat
ret
dec
adc
push
or
test
fneni(8087
add
sahf
pop
leave
cli
arpl
adc
bound
xchg
xchg
pop
add
pop
cmp
cli
pop
cmp
sahf
rol
mov
mov
inc
fsts
dec
or
mov
stos
pop
add
cmp
mov
xor
mov
mov
dec
pop
xchg
or
adc
outsb
popf
mov
out
xor
jne
fwait
test
sub
dec
mov
mov
mov
ds
sbb
lds
movlps
fisubl
cs
outsl
out
rcl
pop
ret
ret
pop
add
gs
mov
inc
jnp
xor
ret
aam
jg
xchg
push
jecxz
fidivl
mov
xor
mov
mov
aam
sbb
test
test
jp
push
fildl
sub
out
sbb
mulb
dec
scas
cwtl
mov
push
repnz
pop
jnp
push
loope
pop
push
sbb
testb
dec
xchg
or
push
dec
sub
mov
sbb
jnp
pop
xchg
out
in
push
xchg
daa
ficompl
iret
ds
dec
and
mov
jle
out
lods
sub
ja
mul
sbb
ljmp
mov
ret
popf
shlb
pop
and
xor
into
push
adc
push
pop
push
pop
clc
dec
inc
xlat
jmp
maxps
movsb
lds
fisttpl
push
int
pop
add
orl
mov
movsl
xchg
lcall
repnz
outsb
xor
sub
cmp
add
xchg
dec
mov
xchg
repnz
jns
cltd
sbb
add
adc
push
lcall
iret
pop
mov
jae
sub
cmpsl
sbb
sti
dec
pop
scas
test
sbb
pop
int3
dec
das
pop
jecxz
and
lock
inc
mov
aam
jb
push
cmp
push
js
jle
lret
pop
pop
pushf
mov
and
comiss
rclb
test
out
or
pushf
cwtl
and
jmp
fsts
mov
xchg
or
iret
int3
mov
jmp
test
bound
add
cmpsb
repnz
cmp
and
outsb
sarl
jbe
adc
nop
pop
jns
xchg
jge
push
mov
inc
aas
sbb
jbe
push
packssdw
or
notl
mov
gs
dec
js
rcll
add
sbb
mov
xor
ror
xor
daa
popa
xchg
jmp
jp
test
shrl
and
sub
mov
mull
aas
outsb
mov
mov
loop
sbb
je
je
dec
fstpt
ret
psubq
adc
lods
cmp
lret
sbb
mov
hlt
add
add
push
mov
push
insb
xor
mov
aas
test
push
push
lret
or
or
jmp
aad
or
mov
testl
adc
imulb
cmpsb
aaa
popa
ss
pop
ja
push
icebp
mov
and
xor
sbb
push
ss
lea
mov
insb
das
cmp
daa
and
cmp
shll
outsl
cli
or
xor
sarb
push
in
scas
stos
fnstenv
mov
pop
pusha
cmp
pop
hlt
add
rcrl
xor
scas
jge
mov
out
jge
rcrl
mov
push
stc
jecxz
test
mov
div
and
rorb
xor
out
pop
mov
jb
sub
hlt
push
incl
mov
adc
xchg
lret
int
out
in
std
or
std
push
add
pusha
mov
rorl
fdivl
inc
test
arpl
pop
jge
outsb
sbb
and
icebp
jle
inc
jmp
std
sbb
jle
xor
mov
repnz
push
mov
push
movsl
ja
xchg
mov
inc
rcl
xchg
leave
add
test
mov
out
pcmpeqb
jb
imul
loope
out
jbe
adc
sbb
ss
imul
lods
mov
mov
or
xchg
mov
or
dec
dec
dec
sub
sub
jp
sbb
sub
mov
andb
rorb
out
lods
lret
dec
sub
scas
cmp
dec
mov
mov
cmp
js
pusha
pop
test
pop
jge
add
or
xor
das
pop
js
gs
mov
mull
subb
pop
insb
xchg
sub
scas
mov
stc
cmp
loop
in
xchg
shl
into
lahf
sbb
inc
lahf
lret
dec
xor
mov
addb
add
fdivrl
faddp
add
nop
shrb
cmp
repz
push
xor
pushf
into
scas
mov
sbb
inc
sub
adcl
xlat
and
xchg
mov
ja
push
pop
jns
jae
jmp
enter
addr16
cltd
in
xchg
sahf
cs
sub
mov
sahf
ret
dec
test
dec
stos
jg
add
cmpsb
or
inc
jne
jno
inc
shlb
push
push
push
call
and
xor
lret
cli
or
mov
test
mov
loope
push
arpl
mov
inc
mov
bound
mov
or
mov
loope
and
inc
notl
jle
pop
adc
push
les
push
popl
cmc
pop
cmpsb
pop
dec
andb
sub
dec
xchg
es
jecxz
testl
daa
cmp
in
sub
dec
push
subb
inc
arpl
add
push
sbb
pop
popa
sbb
cs
mov
mov
inc
pop
fisubs
mov
andb
test
jae
or
incl
mov
xor
sbb
pop
mov
or
dec
push
add
adc
sub
jae
out
or
repz
add
lds
test
mov
mov
pop
outsl
mov
iret
mov
negl
sti
push
ss
inc
dec
mov
cmp
aam
cwtl
out
lea
and
push
out
cmc
and
push
xchg
mov
inc
add
pop
scas
lret
add
lret
dec
cs
stos
lea
sbb
dec
cmp
pop
movsb
js
dec
inc
jno
dec
sbb
or
lcall
mov
mov
inc
dec
and
or
dec
sbb
addl
cmp
stos
push
loopne
movsl
inc
scas
fs
imul
cmpsb
flds
or
dec
xchg
out
fistpll
movsl
ret
xchg
mov
shlb
dec
pusha
jp
ljmp
ss
pop
lret
inc
fucomi
cmp
mov
inc
xor
cmovne
pop
dec
and
mov
add
pop
xchg
lret
and
xchg
dec
sub
in
out
loopne
jb
xlat
std
xchg
add
mov
movsb
sub
ss
cmpsl
lcall
test
xchg
lock
cmp
sbb
pop
cwtl
out
adc
test
dec
jns
pop
xor
arpl
lds
popa
std
pop
movsb
test
push
push
push
xchg
push
test
arpl
loope
fs
cmpsl
outsb
add
sti
aas
add
cli
pop
jg
add
out
push
lret
js
jle
ret
jge
fistpll
adc
pop
sub
mov
aaa
call
and
shr
sbb
push
xchg
outsb
xchg
addr16
jmp
jl
or
add
ss
push
fisubrs
popa
nop
push
mov
pop
lret
mov
jg
rorl
mov
xor
push
push
sub
mov
ds
insb
push
cmp
pusha
and
adc
sub
push
mov
jl
iret
sbb
arpl
cmpsl
fmulp
inc
aad
inc
adc
rclb
insl
push
sbb
test
daa
test
scas
lahf
or
fsubrl
test
xor
test
je
iret
sbb
in
xlat
into
shll
fnsave
sub
imul
in
scas
jmp
sub
mov
mov
sbb
push
or
arpl
lock
cmp
or
pushf
mov
bound
and
push
daa
add
sar
sarl
pop
pop
cmp
cmp
mov
aam
nop
dec
idivl
dec
jnp
rorb
adc
or
lret
in
fcompl
imul
mov
sbb
jae
jae
xchg
mov
shlb
orl
jmp
or
jns
sahf
mov
lea
sbb
sub
mov
out
repz
xchg
sbb
shrl
popf
cltd
bound
repnz
mov
stos
add
add
in
test
xor
cmp
in
test
in
or
int
shll
ja
cmpb
loopne
xchg
or
mov
loop
and
cmc
inc
mov
and
leave
stos
push
jbe
xchg
mov
mov
js
pop
mov
sub
add
inc
sahf
sbb
call
jmp
xor
mov
sbb
incb
adc
loope
xor
or
scas
add
lods
lds
jb
adc
sub
imul
and
or
pop
pop
push
add
lds
lret
pushf
inc
sub
mov
xchg
jl
push
jb
pop
in
imul
fsubrs
xor
mov
xchg
ret
and
mov
or
icebp
sbb
xchg
lahf
xchg
mov
dec
rcr
insb
inc
sub
jns
push
inc
fiaddl
lods
clts
jecxz
lret
in
xchg
out
mov
ss
stos
cmp
sbb
out
test
inc
ficompl
push
int
sub
outsl
orl
popa
dec
mov
dec
cltd
dec
xchg
ffree
iret
jo
out
xor
fdivr
mov
cmp
addr16
mov
xchg
mov
sbb
sub
inc
or
and
andb
out
lret
test
or
test
shl
addr16
lds
inc
imulb
rol
mov
rcll
imul
xchg
sarb
test
inc
loope
lea
inc
mov
push
jp
xor
adc
lods
lods
pop
insb
cwtl
mov
mov
mov
adc
mov
mov
lahf
sub
push
adc
dec
test
mov
fdivrl
cmp
inc
gs
adc
xor
dec
xchg
cwtl
ficomps
cmpl
inc
mov
lret
aad
mov
push
lcall
xchg
cmp
xor
xchg
adc
call
xor
or
cld
add
sti
ss
aam
pop
aaa
and
adc
mov
cmp
cmp
mov
sbb
lcall
inc
xlat
cld
or
pop
pop
loopnew
add
out
sbb
imulb
push
lret
inc
lods
scas
mov
jb
fldz
cmp
popf
mov
cmp
jne
repnz
dec
xchg
and
addb
imul
dec
and
ret
push
jbe
inc
cs
pop
imul
jne
imul
es
sbb
or
loope
and
adc
push
es
add
and
call
jns
xor
test
xor
lea
dec
fs
pusha
add
enter
cmc
inc
push
js
mov
mov
fcomps
pop
adc
pop
lret
or
push
sbb
pop
pushf
or
jmp
push
dec
xlat
mov
or
shlb
shrb
sub
adcb
xchg
pop
push
xchg
cmp
push
and
push
dec
pop
mov
xlat
lds
jp
mov
sbb
dec
cltd
insb
es
mov
mov
pop
add
outsb
outsb
inc
fwait
or
je
cmp
xchg
je
push
push
int3
xchg
out
sti
push
push
mov
cmp
sti
in
push
mov
or
inc
imulb
push
inc
inc
pop
arpl
sub
in
mov
clc
ret
in
adc
fiaddl
arpl
mov
mov
push
push
movsw
sub
dec
sbb
jecxz
mov
inc
mov
fcoms
push
test
and
lcall
aas
fisubs
out
addl
xor
shll
lds
data16
jb
lea
ret
adc
mov
lods
add
imul
aaa
ja
cwtl
dec
xlat
adc
add
in
pop
insl
out
mov
jne
aad
ljmp
sar
adc
mov
mov
cmpsb
push
dec
pop
fists
adc
in
sub
inc
fbstp
inc
jmp
mov
and
jp
adc
pushf
jbe
scas
fyl2x
pop
ret
insb
cmp
jb
cmc
sub
lds
push
inc
cmp
pop
sbbl
dec
cli
add
pop
pop
push
pusha
lods
or
mov
mov
ljmp
jmp
mov
fs
lock
rclb
call
rcl
testl
lods
add
aaa
and
jb
mov
lea
mov
xchg
fldt
cmp
fs
mov
xor
loopne
std
or
loop
cld
iret
inc
lcall
jmp
pop
push
push
out
add
inc
push
or
push
pop
push
fmuls
dec
scas
cmp
pop
xchg
push
sti
int3
cltd
sbb
and
xlat
lahf
or
mov
mov
leave
out
test
cmpsb
rcl
dec
sbb
subb
insl
adc
adc
jmp
in
scas
cs
jle
sbb
inc
daa
pop
ficoms
mov
pop
aad
test
loop
inc
int
iret
mov
pop
insl
add
cmpsb
xchg
aas
xlat
ja
xchg
setg
add
jmp
mov
push
cmpsb
jl
inc
sbb
cmp
inc
pop
insb
rorl
arpl
or
sub
fstl
iret
dec
sbb
inc
fwait
cmp
sub
mov
fwait
je,pn
pop
call
js
cmp
push
fwait
push
fs
sti
adc
push
lock
sub
rorb
mov
shrb
into
nop
test
ds
sbb
cmpsl
mov
shlb
fstpt
out
insb
movsl
iret
test
repz
inc
and
mov
mov
imul
fs
xchg
xchg
sub
in
mov
mov
cmp
cmpsl
imul
es
inc
jle
pop
cltd
and
cmp
xchg
mov
fcoml
outsb
pushf
lahf
lods
call
stos
les
loop
jne
adc
std
dec
mov
dec
mov
adc
out
mov
lea
xchg
rcll
push
stos
fs
jle
scas
test
jmp
hlt
push
mov
cmp
cmp
mov
aam
je
aaa
mov
or
nop
pop
push
bnd
adc
popf
inc
inc
dec
mov
push
and
adc
stos
jp
sbb
cs
ja
ja
cmpsl
jo
mov
lods
push
push
xor
pop
aam
inc
les
lret
leave
cmp
mov
mov
data16
pusha
movsb
in
ljmp
and
adc
mov
rcr
and
mov
es
icebp
or
sub
movsb
xchg
in
jno
jg
hlt
and
stos
loopne
jge
test
adc
in
cmp
mov
or
cmp
lea
test
add
call
xchg
jmp
pop
push
pop
sub
ret
push
jo
rorl
shrb
fdivrp
push
inc
xchg
cltd
int3
pop
jne
in
add
mov
mov
push
fmulp
push
pop
lcall
xchg
clc
dec
insl
push
jg
hlt
inc
sub
mov
imul
push
sub
nop
pop
int3
rorb
add
jbe
data16
xor
andps
mov
cmp
mov
ffreep
stos
pop
pop
mov
dec
fidivs
stc
in
cltd
cmpsb
push
sbb
pop
das
repnz
add
in
xchg
adc
hlt
add
mov
mov
insl
int3
out
lock
cmp
or
pop
mov
fdivl
or
sub
lea
fildll
and
cld
sub
inc
and
mov
adc
loopne
scas
or
mov
mov
sarl
out
xchg
out
jmp
mov
cmpsl
or
dec
stc
pop
test
and
jge
fdivl
test
repnz
test
xchg
xchg
add
mov
mov
xor
das
or
aad
sbb
out
pop
faddp
ficoml
in
rol
add
adcb
mov
push
cmpsl
dec
test
push
enter
pop
fs
test
fadds
pop
adcb
stc
adc
sub
mov
xlat
cli
jmp
sbb
popf
and
cmp
or
xor
xchg
xchg
push
loope
test
and
and
inc
xorb
xchg
cmp
lds
imul
bound
xchg
mov
test
fildl
inc
mov
jb
mov
inc
jmp
jg
xchg
aad
loop
push
pusha
pop
xchg
or
xor
shll
pop
xor
push
in
or
sub
mov
rsqrtps
push
push
xchg
fnstsw
mov
xor
leave
pop
cmp
shrl
stos
pushw
inc
mov
sti
das
push
adc
xor
dec
subb
cli
ss
sbbl
sbb
stos
cltd
mov
jo
lret
pop
shll
daa
add
mov
imul
mov
out
lea
mov
xor
add
fwait
lock
sub
lcall
xor
mov
mov
repz
dec
pop
add
cld
popa
xor
lods
push
pushf
fdivr
pop
shld
popf
inc
adc
mov
cmp
leave
nop
mov
sbb
adc
dec
outsl
cmc
sahf
push
clc
test
lea
inc
xchg
mov
out
cmp
fnsave
xor
pop
fisubl
dec
jecxz
ret
adcl
movsb
loope
shlb
aas
xor
out
push
adc
xchg
call
lods
or
push
repnz
xor
jne
jg
movsb
xchg
je
rorb
aaa
xor
cmc
xchg
lahf
lock
jns
aam
lods
mov
xchg
pop
addb
movsl
add
mov
xchg
insb
icebp
into
cmc
jb
jmp
scas
imul
sbb
rclb
adc
pop
mov
loope
hlt
pop
inc
rorb
add
push
or
gs
lods
dec
mov
ljmp
imul
lcall
push
enter
lcall
add
addb
stc
in
cmp
mov
mov
into
incb
adc
inc
cmpsl
mov
pop
ficoms
mov
in
out
and
in
mov
arpl
and
lock
jo
mov
fldpi
push
push
in
ss
jecxz
movsl
sbb
mov
push
in
jbe
rcll
cmp
daa
adc
xor
xchg
xor
aaa
shrl
int3
loope
push
jmp
pop
xchg
out
js
mov
jne
ds
stos
loopne
shlb
inc
in
xor
xlat
adc
jne
mov
subl
cmpsb
inc
pop
and
fimuls
push
mov
ret
push
repz
les
sbb
cli
gs
push
fs
xchg
lret
aam
adc
pop
dec
add
mov
in
aad
mov
jno
jbe
and
lcall
or
repz
and
lea
dec
fnstcw
mov
push
xor
les
sub
lret
sub
push
push
fwait
popa
test
inc
sub
stos
pop
cld
and
jnp
sub
dec
mov
loope
mov
int
mov
dec
xor
test
xlat
push
fidivrs
enter
cmpsb
lcall
lods
testb
xor
push
call
insb
pop
lods
add
or
xchg
dec
pop
data16
jge
inc
mov
imul
hlt
das
push
into
insb
cmp
sub
or
lock
xchg
and
push
in
cmp
testl
test
add
adc
je
in
in
shll
push
mov
data16
addr16
xlat
decb
ds
push
push
aas
js
cmp
cmp
jae
cltd
icebp
mov
mov
fcomip
mov
sarl
pushf
outsb
pop
lods
scas
icebp
test
mov
pop
pop
aaa
divl
cmp
mov
cmp
imul
and
and
imul
cld
jmp
xchg
fsubl
dec
jo
fisttpll
or
into
out
inc
fdivrs
int3
jle
insl
dec
jnp
movsl
pop
int3
pop
dec
or
lods
xor
and
jg
pop
dec
push
mov
clc
sbb
stos
mov
call
push
movsl
adc
sti
and
lods
in
mov
sbb
orl
movsb
sub
dec
ljmp
cmp
sahf
sbb
add
fidivs
pop
test
pop
or
subl
mov
sbb
sarl
subb
or
test
adc
loop
xchg
mov
sub
outsl
mov
stos
push
xchg
mov
mov
mov
jae
scas
bound
lds
repz
inc
pop
inc
int
pop
aas
std
cld
lods
xor
lock
xor
jg
inc
cwtl
daa
imul
add
cmp
mov
mov
xor
xor
divb
dec
jmp
mov
sbb
dec
mov
xor
daa
outsl
adc
or
lea
xchg
dec
mov
repnz
jae
cmp
mov
mov
pop
lea
jmp
scas
test
pop
sbb
cmp
inc
inc
add
mov
jle
pushf
stos
push
mov
mov
rorl
xchg
and
adc
daa
outsl
pop
shll
xor
pop
adc
pop
test
les
inc
sti
pop
pop
int3
das
pop
stc
adc
lcall
fbld
pop
sbb
push
cwtl
cwtl
xor
push
add
dec
jge
or
and
movsb
dec
cmp
int
jmp
daa
push
adc
ret
inc
push
mov
pop
and
test
int
push
inc
push
test
shlb
pushf
or
das
jge
and
sub
lods
int
scas
and
jbe
jno
mov
or
jg
mov
incb
popa
push
push
cwtl
lahf
jns
fnstenv
lcall
adc
pop
mov
subl
mov
and
testb
dec
cmpsb
int
push
rol
inc
movsl
imul
daa
fcomip
sbb
pop
mov
xor
test
data16
jge
outsb
sahf
aad
mov
mov
rcrl
ret
cmp
ds
dec
xor
call
aas
add
mov
mov
imul
and
dec
jg
es
or
clc
lods
cs
daa
std
popf
jl
je
mov
js
movsl
mov
sti
pushf
into
mov
movsl
push
sub
fidivrl
mov
cmp
arpl
inc
xchg
rcrb
int3
test
sbb
popl
jl
sub
leave
mov
std
inc
xor
fwait
ret
mov
inc
mov
mov
pop
cmp
iret
lea
hlt
jno
mov
adc
test
xchg
adc
inc
xchg
andl
mov
push
or
js
insb
sbb
sahf
test
insl
pop
clc
mov
add
inc
and
cli
cmpsl
mov
out
and
sarl
xor
dec
xchg
fbld
leave
mov
rorl
xchg
xor
jge
xchg
addb
and
adc
and
inc
loopne
push
das
inc
jb
dec
inc
repnz
or
add
jmp
mov
inc
sbb
mov
pop
jne
mov
cmpsl
add
popa
data16
aad
adc
insl
push
fsubl
les
push
push
mov
iret
jp
and
mov
shl
rcrb
and
xchg
lcall
imul
pop
mov
push
add
sbb
cmp
daa
cwtl
and
pushf
lea
cmp
pop
sub
sahf
inc
dec
xor
mov
mov
jae
ret
mov
shlb
push
jnp
outsl
je
jbe
hlt
and
push
pop
jne
movsb
mov
lret
sti
pop
xchg
push
add
popa
mov
jge
dec
jo
xor
insl
popf
xor
jne
jne
lock
xchg
rcrl
das
sub
test
stos
sbb
aad
mov
or
mov
in
add
nop
cwtl
aam
mov
cmpl
cmpsl
cwtl
lock
push
es
xchg
inc
aad
mov
out
fldl
xlat
mov
mov
jno
pushf
sti
lret
sbb
cmpsb
mov
lret
hlt
xchg
insl
jns
cmp
cwtl
sarb
add
ret
sub
mov
outsl
fimuls
aas
stos
sahf
into
mul
fcmove
cmp
sbb
call
ret
sbb
outsl
sub
ficoms
pop
rorb
in
in
add
mov
mov
das
ret
mov
outsb
sti
js
sub
dec
xor
cmp
push
dec
push
les
adc
xchg
bound
icebp
pop
int3
das
push
cmp
fs
mov
pusha
pop
adc
adc
and
popf
jge
mov
sbb
fmul
outsb
movsb
clc
jmp
icebp
ja
fld
mov
jnp
popf
pusha
sub
lea
inc
mov
jb
jno
jl
das
xor
adc
fwait
inc
xor
jbe
sbb
push
inc
imul
insl
push
ljmp
lods
fidivs
cmp
push
out
mov
dec
and
mov
icebp
sarb
or
gs
cmp
add
add
sarl
pop
mov
pop
xchg
loope
mov
cmpl
jl
jbe
mov
loop
mov
add
cmp
and
fiaddl
stc
sub
inc
faddl
sbb
aam
dec
sub
inc
out
xor
pop
rorl
jl
fimull
sbb
ja
outsb
fs
lret
jne
ljmp
leave
dec
outsb
xor
mov
testb
and
sbb
mov
pushf
push
sbb
push
fisttps
dec
mov
xchg
loop
fstpl
movsb
jecxz
mov
fwait
adc
mov
xchg
mov
movsb
pusha
sub
push
lea
scas
mov
xor
jbe
mov
mov
dec
push
inc
je
cltd
push
pop
inc
nop
jmp
imul
push
push
outsl
xchg
fldcw
inc
add
stc
es
aam
cmp
sbb
pop
std
add
inc
out
fcoms
data16
pop
aam
inc
ret
shll
and
popf
dec
fisubrl
cmp
das
mov
in
cltd
push
rcrb
cwtl
jecxz
pushf
cmp
mov
xchg
jb
mov
xchg
mov
jns
pop
repnz
aas
in
inc
add
ljmp
int
mov
filds
cltd
xor
sub
jbe
and
cmc
sub
icebp
adc
jb
in
mov
test
stos
jne
scas
mov
mov
cmpsl
popa
rcll
in
xorl
pop
js
fbld
sahf
mov
dec
dec
sbb
sbb
cmp
icebp
sbb
stos
out
mov
or
mov
mov
mov
rclb
sub
call
mov
xchg
ret
iret
sub
pop
sbbb
inc
out
ret
aaa
push
lret
lods
mov
lcall
and
add
sbb
lcall
jne
sbb
mov
cmpsb
inc
mov
rcll
inc
xor
or
xchg
jo
xor
adc
dec
outsl
sub
das
mov
fistpl
shlb
lcall
aas
mov
sub
cmp
cltd
push
push
mov
outsl
jns
in
xor
adc
add
cli
in
js
inc
push
in
jb
pop
test
pop
pushf
and
cmpsl
xchg
pop
jl
inc
cmp
in
mov
dec
out
sbb
sbb
mov
imul
and
mov
mov
cmc
inc
loope
cmc
sbb
inc
in
dec
add
xchg
hlt
pop
int
inc
sbb
push
cwtl
cli
pop
shlb
adc
mov
jns
fidivrs
lods
or
xor
pop
les
dec
mov
mov
dec
push
lahf
aaa
xor
into
test
cld
loop
bound
xor
sbb
sbb
stos
stc
jns
decb
in
xor
sarl
mov
cld
xchg
jp
test
ljmp
pop
inc
and
test
mov
sbb
jge
pop
int
push
pushf
cmp
add
pop
mov
aad
rcl
aas
cs
pop
jae
les
xchg
movsl
notb
xor
mov
lods
xor
and
inc
mov
ret
sbb
in
xchg
pop
or
lcall
jns
sbb
cmp
jmp
mov
stos
push
test
push
cmp
pop
ss
jb
sub
cmpsb
imul
icebp
mov
pop
jns
jle
cld
out
cmp
mov
mov
stc
scas
js
xor
clc
mov
mov
jl
adc
out
add
mov
mov
adc
stc
iret
cs
scas
adc
ljmp
ss
nop
outsl
es
push
je
adc
shll
out
cld
call
sahf
ljmp
inc
mov
mov
cmpsb
and
adcl
scas
sub
push
sbb
xor
out
dec
xor
or
out
pusha
or
outsl
outsl
mov
shlb
cmp
sub
dec
xchg
pop
cmp
and
pop
enter
push
jmp
test
and
pop
cmp
mov
push
and
pop
das
arpl
sub
inc
or
imul
pop
ljmp
or
xchg
add
aad
pop
or
data16
dec
and
ss
aad
adc
clc
loop
add
insb
cmp
dec
dec
push
arpl
movsl
iret
ja
inc
out
sbb
jb
stos
jns
push
xchg
stos
jl
dec
dec
fucom
inc
pop
notb
notb
ret
add
or
rcll
stc
mov
fwait
mov
push
cmc
jno
mov
jns
rolb
mov
mov
cmpsb
xor
out
add
push
xchg
and
xor
pop
cmp
jae
ja
pushf
sbb
xorl
out
lcall
sarl
mov
lods
addb
scas
cmpsl
dec
pop
jbe
sub
call
popa
cmp
pop
pop
xchg
sub
jle
shlb
and
insb
mov
les
lret
sub
pushf
push
and
aaa
push
int3
dec
xor
scas
enter
aam
jecxz
jno
and
outsl
pop
xchg
push
ficoml
xor
adc
xchg
outsl
mov
repz
cmp
xorb
pop
int
cmp
sbb
pop
outsb
out
test
mov
dec
ljmp
sub
add
cmp
push
int
repnz
bound
mov
mov
popl
pop
lahf
or
xchg
sub
pop
sub
movsb
or
nop
notl
xchg
out
loopne
cmp
cmp
movb
dec
jl
into
inc
loopne
or
and
mov
and
xor
shrl
repz
mov
cmp
or
nop
mov
pop
js
inc
imul
lock
gs
pushf
repz
ret
adc
cmp
scas
cmpsl
mov
jle
xor
out
jl
nop
adc
xchg
popf
pop
pop
cmc
lock
rcrb
sub
add
and
mov
sub
pop
scas
lock
pop
shll
lahf
or
xchg
adc
sahf
int3
xor
jp
cmp
push
loopne
push
xor
aad
add
cwtl
and
icebp
sub
cli
mov
lea
push
shl
add
add
cld
adc
call
rcrl
xchg
into
xchg
jno
ja
inc
icebp
cli
adc
fists
and
pop
rolb
shlb
repnz
mov
mov
das
lods
outsb
addr16
mov
mov
push
and
nop
scas
stc
pop
pushf
inc
push
jne
push
sbbl
push
call
iret
xor
pop
lds
repz
sbb
push
arpl
lcall
cmp
mov
mov
notl
and
mov
sub
imul
mov
insl
fsubs
xchg
jns
cmpsb
imul
xchg
xchg
xchg
dec
mov
push
in
imul
dec
mov
dec
loope
or
xchg
inc
adc
jae
scas
xor
sbb
enter
dec
jno
bound
addl
sbb
adc
pop
add
iret
repnz
mov
or
movsb
cli
pop
push
mov
sub
outsb
sarl
sub
xor
imul
jmp
and
and
cmp
setp
jp
adc
stos
sub
imul
push
rol
icebp
pop
shlb
xchg
and
aad
sub
cmp
in
xchg
cmpsl
sarb
push
scas
mov
aas
stos
sahf
push
rolb
inc
push
fstpl
adc
mov
xchg
mov
xor
sahf
cld
cli
ret
mov
leave
inc
and
and
push
and
into
mov
or
test
lret
cltd
adcb
sub
push
sbb
push
and
jno
and
mov
jo
arpl
sub
mov
mov
lea
sub
sahf
or
mov
inc
fistpll
movsb
sub
dec
cmp
cli
and
adc
jl
sarl
or
pop
add
outsb
movd
test
popf
mov
out
jmp
fsubl
test
or
test
cmp
je
jne
shl
sbb
test
aas
sbb
imul
adc
mov
adc
dec
das
outsl
jae
dec
dec
mov
sbb
out
pop
cmc
sbb
mov
xchg
mov
dec
mov
lcall
add
lea
fimull
lock
scas
stos
xor
lea
xor
pop
sbb
dec
adc
and
cli
dec
dec
pop
mov
cmpsl
mov
sbb
xchg
in
dec
xor
sub
push
lahf
popa
mov
aaa
cmc
mov
icebp
sub
mov
stos
sub
add
pop
jae
add
movsb
inc
sub
mov
sub
int
imul
aad
xor
dec
sti
or
inc
or
adc
sub
das
and
mov
cmp
lods
cld
pop
mov
lcall
mov
pop
inc
xlat
jno
fisttpll
xchg
dec
inc
js
mov
jb
xchg
adcb
add
je
lea
mov
rolb
push
or
push
lods
cmp
fisubl
jle
dec
push
and
into
sar
test
loop
sbb
or
add
xor
popf
xor
push
stos
mov
in
addr16
mov
stc
addb
pop
pop
pop
movsl
in
lods
cmpsb
add
std
rcrb
pusha
enter
call
int3
test
or
and
mov
dec
cmp
ret
lahf
aas
in
mov
imul
pop
jmp
movsb
dec
dec
fimull
aad
sbb
jo
fwait
cmp
cmc
add
popa
data16
aas
outsl
hlt
xchg
pop
incb
loope
push
xor
das
xchg
pop
cwtl
sub
in
loope
ds
and
rclb
cmc
pop
fisttpl
or
stos
add
test
popa
xchg
imul
jecxz
mov
daa
iret
out
lea
addr16
rorb
push
inc
enter
mov
imul
aad
scas
fisubrs
mov
hlt
add
sub
mov
push
or
push
mov
or
pop
cmpsb
aas
movsb
divb
inc
andl
push
in
repnz
inc
xchg
add
imul
mov
push
in
jbe
push
xchg
out
cmp
sahf
pop
dec
or
pusha
jnp
pushf
jecxz
jnp
inc
xchg
pop
add
inc
cmp
push
loopne
ret
dec
sub
and
adc
pop
ljmp
push
add
pop
cmp
or
lea
dec
cmc
pop
enter
insb
daa
inc
lods
je
lock
repz
enter
mov
ret
ret
insl
enter
sbb
scas
adc
adc
sub
nop
cli
outsl
test
fwait
outsb
dec
mov
inc
pop
mov
lods
pop
dec
pop
fcmovnbe
es
hlt
fcmovb
call
push
jmp
sbb
dec
sub
cmp
mov
adc
rcrb
dec
int3
pop
enter
jae
jg
or
in
cmp
fwait
push
cli
orl
stos
cmp
popf
add
mov
fidivrs
jne
sahf
or
jl
dec
js
pop
test
xlat
or
js
cmpsb
fadds
loope
sub
leave
add
push
ss
mov
cmc
ret
xchg
adc
movsl
jno
xchg
sub
std
or
mulb
mov
or
sub
inc
icebp
iret
xor
sub
mov
adcb
push
cltd
fmuls
push
out
movsl
addl
sbb
fdivrl
jne
mov
enter
adc
push
jo
repz
push
mov
jae
cmc
popf
mov
mov
nop
dec
jge
lahf
sbb
jns
push
movsl
jae
push
iret
sub
or
fsubrl
bound
orl
jecxz
sbb
test
adc
cwtl
psubw
lret
jbe
in
dec
ss
mov
xchg
loope
out
and
test
mov
out
aam
loope
push
test
shl
cmpb
pop
sbb
ror
nop
jecxz
jl
dec
push
sbb
cmp
mov
and
inc
rcl
iret
hlt
aaa
sbb
xor
push
imul
xor
pop
inc
loope
hlt
fistps
lahf
divb
push
add
or
jg
stc
in
outsb
xchg
stos
sbb
push
jecxz
pop
addr16
xchg
lret
hlt
jle
push
pop
cli
pop
add
mov
ss
stos
es
mov
jl
lcall
cld
je
pop
fcoms
jg
clc
das
clc
les
out
mov
popa
mov
outsb
dec
leave
mov
sbb
xor
xchg
insb
and
xorps
push
dec
roll
xlat
pop
test
nop
mov
loopne
jno
std
mov
aas
mov
data16
xor
push
dec
jg
push
je
mov
lods
iret
pop
shrl
or
pop
fdivrl
adc
je
cltd
decl
xchg
mov
icebp
dec
cwtl
xchg
outsb
xchg
dec
sbb
fists
jae
clc
imul
xchg
jns
or
arpl
inc
icebp
sbb
xor
mov
sbb
jge
mov
jo
fidivs
xchg
push
sub
sbb
adc
cmpsl
adc
stos
cmp
adc
xor
mul
push
sti
push
xor
enter
mov
dec
testl
mov
addr16
push
dec
jno
cmp
cs
adc
in
cmpsb
push
and
and
pop
ret
jo
push
push
push
es
mov
js
aas
ljmp
dec
jns
push
xchg
jns
sub
adc
mov
jg
pop
push
orl
test
fucomi
pop
lahf
push
fstpl
pop
int
cmpsb
and
out
dec
pop
adc
imul
sarl
push
mov
mov
rclb
clc
lods
fistl
shlb
adc
mov
clc
imul
and
les
ds
sbb
ret
sub
lret
sub
sub
lds
ljmp
scas
es
xor
inc
nop
jbe
fisubrl
inc
fistps
scas
fs
jle
mov
popf
mov
fsts
stos
mov
sub
inc
dec
jns
ljmp
mov
push
dec
push
add
sbb
jbe
das
xlat
je
in
das
in
mov
fyl2x
fwait
out
sub
cmp
in
ret
leave
xchg
mov
sarl
cmpl
iret
je
pop
push
or
or
inc
mov
push
xchg
pop
pop
mov
xchg
adc
bnd
mov
and
sub
push
sbb
adc
inc
mov
mov
cmp
mov
pop
subl
adc
add
stc
lcall
int
or
mov
push
or
push
and
push
jl
test
into
fwait
pusha
mov
mov
ret
and
pop
ret
sub
or
mov
mov
lcall
sbb
cld
popf
xorl
stos
scas
cli
add
xor
cld
loope
add
popa
loope
scas
push
decb
fdivl
mov
and
lahf
repz
or
insl
mov
sub
test
inc
loope
or
xor
dec
shl
mov
pop
and
lret
out
sbb
fildl
push
inc
jle
fsubr
das
lods
ds
xor
mov
test
je
adc
sbbl
je
fs
jmp
sbb
inc
xor
sub
mov
mov
stos
xor
xor
pop
sub
cwtl
dec
inc
in
int3
sbb
push
popa
ss
shrb
in
outsb
iret
pop
inc
pop
mov
adc
dec
mov
popa
lods
addr16
mov
stos
mov
dec
or
push
add
int
stos
and
pop
sbb
dec
adc
push
push
fdiv
xor
and
out
sub
push
sub
loopne
mov
iret
mov
test
pop
xor
dec
cmp
int3
adc
dec
sbb
cmp
mov
inc
mov
nop
sub
add
add
sbb
mov
or
hlt
movsl
lods
rorl
cmp
sbb
xchg
mov
imul
mov
rorl
push
leave
int3
xor
inc
inc
insl
lods
mov
lcall
or
adcl
xor
sub
jge
dec
insl
mov
out
dec
sbb
cmpsl
test
sbb
idiv
xor
inc
mov
ds
mov
inc
cmp
out
leave
fcmovnb
or
or
sbb
sbb
jmp
in
pusha
jae
push
es
addr16
aaa
cltd
push
push
push
mov
pop
aam
and
add
mov
pushf
dec
loop
cmc
lcall
mov
sub
or
mov
rcl
and
mov
and
insl
pop
pop
push
jmp
int
out
push
push
sub
adc
fldt
jnp
mov
mov
inc
shll
xor
aad
mov
cltd
cmp
push
leave
and
inc
cmpsl
aas
dec
mov
cmpsb
std
sub
pop
je
cmpsl
and
std
aam
insl
into
in
mov
js
mov
xlat
sbb
scas
xchg
xorl
and
push
notl
inc
lret
push
lods
aas
xchg
mov
and
fs
test
insl
or
fs
lret
xchg
cmp
fcmovbe
lret
inc
fcmovu
mov
mov
jno
push
inc
cld
inc
call
fwait
mov
push
cmp
movsb
pushf
imul
mov
cwtl
fisttpll
push
mov
push
stc
or
push
mov
add
stc
jl
cs
cs
ficoms
aas
mov
mov
xchg
daa
aas
pusha
aam
jne
cld
ret
hlt
mov
jnp
test
adc
sbb
loop
pop
cmp
sti
lcall
xlat
paddb
dec
shlb
xchg
jne
andl
je
or
stc
sbb
sti
subl
rol
cltd
lods
ds
and
jmp
sub
imul
cmp
jp
faddl
imul
stos
je
add
mov
les
leave
sbb
cld
adc
addr16
push
ss
push
scas
mov
cmpsl
add
sbb
stc
es
lahf
or
push
add
mov
mov
sbb
daa
xchg
ljmp
stc
sti
add
sub
adc
add
lods
mov
aad
stc
cltd
mov
mov
mov
cmp
push
mov
cli
dec
xorl
add
xchg
xchg
cmp
incb
popf
mov
add
repnz
inc
cld
in
int3
cmp
icebp
bound
mov
dec
imul
mov
xchg
push
jbe
jo
adc
test
jg
pop
add
insl
mov
andb
in
sub
jns
fsts
inc
pushf
pop
mov
sbb
inc
orl
xor
add
cld
mov
into
outsl
sti
xor
xchg
and
jns
jle
lahf
sarl
lds
movsb
ja
das
sahf
mov
cmp
push
mov
add
adc
xchg
jmp
sbb
xor
sti
sub
fucomp
arpl
jo
cmc
loop
xchg
ss
bound
mov
les
inc
xchg
imul
loopne
js
add
int
daa
sub
mov
insb
mov
lods
mov
in
xor
incl
mov
or
ss
jp
mov
jge
xor
jecxz
fdivrp
mov
sbb
enter
stc
shl
mov
xchg
lods
xchg
fdivrs
mov
sbb
pop
les
test
outsl
sbbl
cmp
pop
sti
repnz
sub
popa
adc
mov
je
sti
inc
add
sub
test
dec
cmpsb
push
sub
sbb
inc
lods
mov
dec
ret
in
int
stos
xchg
bound
or
mov
jmp
movsl
mov
shlb
fbld
insb
outsb
aam
jle
and
insb
xchg
and
mov
xchg
xchg
cli
mov
loop
xchg
lret
stos
ss
hlt
mov
xor
fwait
jnp
fists
int
pop
mov
pop
popa
ljmp
pop
sbb
int3
mov
notl
pop
add
jg
sbb
cld
bound
leave
push
add
pop
adc
mov
push
push
lea
mov
push
addb
dec
cmp
mov
pop
add
jbe
sbb
pop
mov
dec
lds
pushf
add
fisubl
mov
notl
test
nop
xchg
sub
inc
push
push
inc
jle
add
sbb
sub
inc
ja
mov
movsl
xchg
dec
mov
mov
out
lahf
xchg
pop
xchg
std
sub
in
out
dec
bnd
sbb
lds
in
loop
sub
cld
xchg
mov
sub
and
dec
cmp
sti
into
sub
jp
rclb
xchg
pusha
push
jb
insl
xchg
and
jecxz
push
jo
jno
out
imul
aam
xlat
push
fsts
gs
cld
jl
mov
hlt
scas
outsb
xchg
sbb
enter
fcoml
mov
sub
dec
roll
xlat
xchg
gs
pop
sahf
add
ja
popf
cmpsl
pop
jb
jb
push
fs
stc
cmc
pop
das
lret
sbb
sbb
arpl
mov
loop
sbb
push
jge
lcall
jmp
outsb
mov
xlat
sub
xchg
mov
lods
out
ret
push
in
push
inc
aam
sbb
lret
sbb
insb
inc
test
push
xchg
int3
enter
imul
inc
loope
mov
test
xor
pop
in
pop
mov
push
sub
xor
sbb
clc
inc
cmpb
cmp
inc
xlat
pop
and
cmp
mov
int3
jge
repnz
test
sub
inc
jo
jle
lcall
iret
push
loope
nop
iret
add
pop
shll
sti
xor
mov
jmp
pop
movsl
adcl
imul
rol
mov
or
sti
adc
push
mov
adc
stc
xor
push
and
sbbl
jo
pop
adc
ljmp
jg
fwait
push
ja
imul
inc
ret
mov
ud2
out
xor
sbb
push
and
in
dec
mov
loop
jg
loope
ds
test
loop
jne
jg
lret
xchg
or
xchg
sbb
cmp
mov
cld
push
xor
xorl
xchg
mov
mov
lcall
cmp
sti
scas
aas
test
jle
in
pop
pusha
stos
lods
adc
insl
outsb
and
sub
inc
adc
add
sbb
push
out
cmpsl
in
add
lret
mov
adc
mov
lds
aam
in
sarl
das
pop
lods
pusha
popf
pop
ror
jbe
mov
and
adc
repnz
xor
cmp
and
xor
in
pop
push
sahf
clc
mov
pop
sub
leave
into
fs
or
js
sti
mov
addr16
decb
subl
in
lret
outsb
test
push
adc
and
xor
and
push
rcrb
incb
push
movsl
sbb
cli
cmpsb
sbbb
cmpsl
push
shrb
push
cmp
scas
rol
push
loope
add
pcmpeqd
int
movsl
dec
ljmp
repz
out
idivb
fcoms
outsb
cmp
jmp
pop
pushf
sub
jbe
inc
stos
jle
cltd
jp
jbe
stos
push
pop
jno
add
inc
cmp
bound
in
movsl
lods
jmp
sbb
int
mov
scas
lret
pop
negb
nop
push
nop
xchg
inc
pop
or
rcrl
mov
jb
dec
cmp
fmuls
repnz
popf
xor
es
jge
sub
ret
pop
mov
cmp
cmp
in
pop
inc
mov
lahf
adc
popa
or
lods
cmc
mov
add
fsub
add
xchg
cmp
jge
jp
cmpl
jg
shl
out
add
mov
cmp
outsl
pushf
dec
testb
popa
jns
and
out
mov
jmp
int3
dec
dec
mov
xchg
ret
pushf
filds
mov
test
cmc
adc
pop
jne
out
push
xor
sub
push
jb
jp
jnp
jecxz,pt
sbb
jg
std
ror
or
ja
sub
add
scas
imul
and
outsl
mov
mov
sti
lret
pop
lahf
pop
clc
bound
data16
push
lock
and
push
loope
lea
popa
subl
mov
addb
inc
fcompl
fildll
scas
jmp
sbb
xchg
adc
mov
mov
xlat
cltd
pop
mov
mov
aas
adc
test
clc
loopne
cmp
mov
xchg
push
xor
mov
push
lcall
xchg
push
hlt
push
lds
sbb
mov
lret
mov
repz
dec
push
adc
pop
xlat
je
icebp
inc
sti
inc
aad
std
jo
les
icebp
push
dec
push
or
mov
push
int3
imul
outsb
lock
out
inc
leave
mov
sbb
push
sti
dec
and
and
fwait
sbb
fldln2
push
leave
lock
repnz
movsl
or
mov
xor
mov
and
mov
add
push
inc
bound
shr
movsb
shl
xchg
jae
xor
iret
stc
shll
mov
mov
aas
pop
in
cmp
out
imul
mov
inc
out
std
push
inc
mov
mul
lahf
movsl
xor
addr16
dec
stos
sbb
in
pop
popf
imul
add
or
hlt
out
cmp
daa
or
std
add
iret
adcl
push
in
daa
jge
lret
and
insl
xchg
ficoml
mov
dec
andl
and
loop
iret
inc
dec
and
stc
jb
jns
push
adc
mov
add
xor
lret
sub
fdiv
inc
dec
adc
or
testl
stc
std
xchg
mov
mulb
test
mov
mov
xor
jnp
in
aaa
lahf
stos
lahf
rclb
add
out
xchg
daa
in
test
mov
fistl
dec
addr16
mov
mov
mov
imul
push
out
or
xchg
idivb
sti
cmp
imul
repz
push
or
xor
sarb
js
lods
mov
aam
cmpsl
daa
test
adc
xor
adc
jo
sub
mov
or
cmp
daa
es
lods
pop
push
push
pop
mov
cmp
pop
adcb
cmp
lods
sub
cltd
out
stos
dec
bound
loopne
xchg
shrb
and
pop
pushl
jb
lea
xchg
test
push
push
or
ljmp
lock
insb
fidivl
mov
xor
es
adc
mov
ret
adc
mov
mov
cmp
daa
ja
xor
jno
mov
stos
jnp
cmpsl
outsl
in
movsb
mov
loope
and
jecxz
add
rcr
mov
jecxz,pt
das
testl
imul
fmuls
enter
arpl
filds
push
add
mov
fldln2
nop
xor
sbb
shr
cmc
push
insl
or
xor
mov
or
add
inc
ret
cmpsb
jmp
fiadds
mov
mov
ss
fs
ret
scas
js
cs
imul
repnz
jecxz
add
jl
ss
add
jle
mov
jg
pop
mov
pop
mov
jge
pop
sbb
ret
jne
mov
jg
lods
sbb
jg
inc
and
mov
push
push
mov
xor
lea
lea
pop
into
mov
or
dec
call
jae
sti
sbbl
fisubrs
aam
loop
test
js
sub
cmpsl
and
imul
stos
or
mov
out
sub
daa
fcomp
cmp
xchg
out
mov
jmp
add
mov
into
imul
ss
xchg
mov
mov
pop
arpl
fdivrs
int
mov
xchg
stc
sub
fistpll
adc
jne
inc
in
push
inc
mov
icebp
pop
cmpsb
mov
btr
enter
das
pop
xor
rcll
ds
enter
sbb
fldcw
jle
xchg
sub
adc
or
pusha
popa
ds
daa
mov
jecxz
jae
add
movsl
mov
push
or
mov
push
jp
sti
dec
lret
and
or
aas
adc
lods
enter
outsb
xchg
dec
xchg
mov
xchg
jno
repnz
in
jecxz
imul
lock
mov
popa
cmc
jnp
jno
cld
movsb
fcomps
mov
jle
out
in
push
mov
pop
out
gs
lret
and
je
pop
pop
jg
pop
into
mov
dec
xor
sub
mulps
sub
test
xchg
xor
lahf
cmc
sub
xor
rorb
stos
sahf
mov
paddb
sub
add
cmpsb
dec
cmpsl
add
js
xchg
lods
loope
cwtl
outsb
adc
pushf
inc
hlt
movsb
mov
xor
test
leave
jle
add
lahf
xchg
shr
jbe
fs
dec
pop
in
cmpsb
push
lds
movsl
mov
movsb
sti
cmpsb
or
lods
in
or
jae
jg
add
mov
inc
mov
mov
aad
jbe
rolb
flds
fmull
adc
loop
xlat
in
jnp
xor
shll
pop
clc
cmp
jmp
adc
dec
dec
adc
sub
lods
jnp
out
jp
add
and
imul
push
inc
test
mov
into
or
test
mov
pop
xchg
int
mov
sub
test
jl
and
mov
lock
xchg
jnp
btc
adc
adc
adc
lahf
adc
jae
pop
inc
ret
dec
jns
aaa
jmp
notb
call
sub
movsb
xor
mul
dec
ret
jne
pop
aad
xchg
jmp
test
movsb
loopne
push
icebp
adc
mov
test
cmp
pop
cmp
xchg
bound
cmp
sub
sahf
mov
rep
adc
loopne
cmpsb
sub
jle
inc
clc
int
arpl
push
ss
mov
insb
loope
push
mov
sahf
jl
mov
inc
lods
ja
jg
out
sbb
push
stc
faddl
sub
push
mov
jno
fisttps
jae
cli
stos
test
mov
cmpsl
out
cmpb
dec
push
dec
test
and
cli
loop
shll
adc
sub
xchg
mov
cs
fs
adc
ja
jp
iret
pop
fildl
mov
js
mov
icebp
add
adcb
xor
shl
jecxz
imul
int3
or
mov
ret
pop
sbb
aam
xor
mov
dec
cmpsl
push
addr16
mov
pusha
xor
popa
daa
lods
dec
mov
push
leave
dec
adc
cld
mov
pop
es
and
fidivrs
cmp
dec
mov
dec
ret
pop
inc
mov
cmc
lods
fcmovnu
roll
dec
mov
and
mov
sub
xor
mov
jno
popa
mov
sub
mov
call
push
leave
and
pop
adc
cmp
mov
jno
lods
push
scas
pop
pop
icebp
jb
daa
dec
sub
jecxz
xchg
or
negb
sub
movsb
fs
fnstcw
imul
sbb
flds
sbb
xchg
xor
and
lods
xchg
test
sahf
test
test
inc
aam
es
ret
lods
gs
lcall
mov
adc
movsb
sbb
xor
xchg
in
iret
inc
jge
testb
ds
xor
xor
sti
pop
pextrw
mov
xchg
and
inc
fistpl
out
into
in
push
test
and
or
scas
ds
xor
arpl
outsb
insl
mov
mov
inc
xlat
pop
adc
mov
mov
dec
and
add
mov
subl
out
cmpsb
loopne
subb
ret
mov
sbb
or
xor
xchg
mov
lret
xchg
stos
jo
fldcw
clc
and
dec
out
ljmp
sarb
add
cmp
push
jmp
mov
or
xchg
popa
scas
testl
test
xorl
int3
sub
lcall
sbb
mov
inc
dec
push
add
ficomps
add
in
xor
cmp
popaw
or
out
mov
nop
cmp
lret
mov
or
pop
aad
and
in
pop
mov
sbb
idiv
sbb
shlb
jl
cld
jne
xchg
xchg
js
add
test
or
aam
arpl
xchg
pusha
ds
add
shlb
xlat
movsl
or
pop
xchg
push
add
lock
rcr
xchg
mov
push
adc
cmpsb
mov
cmpsb
jge
lods
out
rcll
pop
enter
sub
ja
stc
jb
adc
in
fdivp
pop
out
jnp,pt
jmp
fistpl
and
arpl
test
mov
rcll
sbb
xor
mov
pop
jns
xchg
or
mov
aad
inc
loopne
mov
leave
in
imul
das
sahf
pop
and
es
mov
lods
xor
int
mov
and
outsb
out
cli
cli
jb
cltd
mov
adc
mov
in
inc
xchg
into
movsb
jmp
in
mov
add
sbb
pop
cmp
push
dec
es
fs
adc
aad
out
xor
fcmovb
xchg
dec
and
xchg
add
mov
mov
push
cmp
push
das
mov
nop
inc
aaa
gs
jge
insl
xor
cmp
and
add
das
imul
cmp
cmp
pop
add
stc
and
dec
idiv
dec
jb
not
lret
int3
es
test
sub
and
cmp
fiadds
movsl
loop
in
pop
dec
xor
sub
inc
jmp
and
push
jg
push
lods
pop
or
mov
sbb
std
js
dec
jp
shll
sbb
xchg
mov
cltd
loop
jecxz
sarb
cli
and
mov
in
and
dec
aas
xorl
shlb
sub
shll
jmp
test
ljmp
fidivrs
sub
shrl
push
xchg
pop
add
dec
pop
add
js
in
enter
push
xor
test
imul
jbe
pop
into
ds
inc
jg
xor
and
call
or
movsb
push
push
and
fidivs
and
dec
cmp
imul
push
jecxz
mov
ret
adcl
adc
xchg
test
mov
mov
push
jne
and
mov
cs
rorb
out
test
pop
loopne
dec
mov
and
shrb
dec
or
inc
aas
or
push
out
test
xchg
cltd
cwtl
adc
push
aam
stc
ds
test
addr16
pop
push
scas
pop
repz
rcl
sti
sub
inc
pop
lahf
xchg
jns
push
stos
add
adc
sub
jne
push
add
mov
cmp
xchg
fld
imul
loope
pop
adc
xchg
inc
mov
nop
es
cmc
idiv
and
jle
ret
divb
mov
pop
inc
out
in
mov
outsl
xchg
pushf
cmp
xchg
pusha
ret
dec
mov
push
in
iret
rorl
jmp
mov
cmpsb
lds
or
push
push
mov
sbb
xchg
xchg
jle
fimuls
jnp
imul
repnz
inc
andl
adc
dec
int3
mov
jmp
popf
insb
xchg
and
outsb
xchg
sahf
add
mov
mov
cld
rolb
ljmp
dec
dec
xor
mov
pop
lret
dec
sub
jle
mov
pop
pop
mov
xor
mov
cmc
out
sbb
inc
cmc
xor
fucom
testb
cmpsl
inc
jne
jae
pop
jle
fsubs
lock
dec
pop
cmp
xchg
arpl
add
xlat
imul
adc
pop
mov
xchg
push
cmc
das
mov
cmp
out
test
dec
xor
fs
cld
inc
rclb
scas
cmpsl
outsb
adc
cmp
insb
push
mov
ljmp
dec
xchg
mov
dec
jns
cmp
lret
mov
imul
mov
xchg
movsl
loop
lea
rcrb
xor
lds
shr
ja
enter
cwtl
lods
dec
adc
ret
pop
mov
jae
adc
shr
out
jbe
cli
pop
fnstcw
iret
sarl
mov
je
pop
add
mov
les
fwait
adc
popa
cmp
or
stc
fisubl
mov
jle
in
and
cs
or
mov
out
adc
fwait
lods
cmp
mov
mov
jne
movsb
mov
xchg
ljmp
pop
test
int3
mov
gs
scas
lds
mov
pop
push
mov
pop
xlat
push
sub
movsb
das
je
xor
fimull
int
enter
mov
mov
ja
mov
or
pusha
adcl
outsb
pop
adc
inc
xchg
mov
mov
sub
pop
jnp
xor
and
mov
push
or
mov
mov
xchg
push
inc
cmp
pop
pop
stos
adc
jle
sti
arpl
fdivs
addr16
test
aad
bswap
lcall
inc
sbb
ljmp
cmc
mov
je
sbb
imul
cs
xor
loop
push
push
jnp
xor
cmp
scas
jp
pop
and
fwait
arpl
in
pop
out
test
sti
inc
add
loop
pushf
add
adc
stos
mov
pushf
sub
or
cmp
das
ficomps
adc
adc
out
in
jnp
rclb
xchg
or
pop
jns
sbb
cwtl
push
cli
cmpsl
popf
popf
or
mov
stc
mov
push
adc
lea
fstpl
dec
dec
ds
mov
shrb
in
pop
iret
fs
je
ret
push
icebp
mov
jo
add
fwait
aam
adc
ljmp
push
cmpsb
je
fdiv
loopne
cltd
mov
jae
xchg
out
pop
sub
popa
inc
mov
ljmp
fstl
popf
and
mov
and
mov
adc
jp
daa
inc
cmp
ret
sbb
stc
xchg
cmp
ljmp
xor
enter
rcll
jle
cmpsb
sub
xor
push
mov
data16
lcall
dec
fildl
lods
and
jge
inc
popa
or
bound
imull
scas
mov
je
aaa
addr16
fwait
mov
add
xlat
inc
jmp
fimuls
iret
aam
mov
aam
outsl
cmp
dec
fldenv
jg
jbe
xchg
xchg
lds
lods
adc
stos
jo
stos
pop
mov
les
rcrl
inc
incb
enter
das
lahf
enter
add
clc
adc
xchg
insl
xor
sub
sbb
mov
js
xchg
iret
rcll
int3
cmp
and
cwtl
add
aas
cs
inc
sbb
mov
mov
mov
out
inc
xchg
mov
out
inc
fwait
cmpsb
in
fldt
leave
push
mov
sbb
out
dec
mov
push
mov
pop
dec
nop
out
inc
fisubrs
pop
adc
xchg
test
mov
push
sub
arpl
dec
repz
dec
jno
sahf
cld
dec
adc
lods
cmc
repz
push
mov
dec
adc
jmp
in
xchg
pop
jmp
sbbl
stos
icebp
pop
movsl
imul
inc
fucomp
push
mov
lock
dec
push
aad
or
push
cmp
jg
mov
push
adc
and
out
or
lock
or
out
test
lcall
nop
push
insb
lea
xor
das
xchg
imul
and
int3
mov
inc
sbb
addr16
add
rcrl
aas
mov
adcl
or
gs
adc
push
stos
jno
push
test
sub
mov
outsl
mov
mov
cmp
sbb
popa
adc
xchg
adc
jne
rep
jp
or
movsb
nop
mov
xchg
loopne
in
scas
xchg
in
mov
sbb
ret
mov
mov
mulb
mov
cmc
dec
cmpsl
xchg
fidivrs
mov
sahf
push
adc
rol
sbb
xchg
mov
enter
mov
push
es
push
mov
xorl
loope
mov
mov
adc
cmc
or
in
push
fsubrp
adc
das
jg
xchg
test
xchg
add
mov
sbb
stos
sub
pusha
stc
movb
add
xchg
pop
repz
je
and
sti
ja
xchg
and
xchg
sub
pop
mov
jmp
les
jo
push
cmp
cltd
inc
nop
push
ficoms
test
pop
dec
lret
test
aas
push
das
xchg
mov
pop
xor
lret
mov
pop
enter
sub
in
stos
les
mov
sbb
leave
popf
push
das
push
ds
add
sub
lret
jp,pn
mov
pop
sbb
repz
hlt
fldcw
inc
mov
in
mov
lds
jp
xchg
push
shrb
test
out
adc
sahf
xor
xlat
add
out
xor
xchg
cli
fdivl
and
jg
iret
or
push
jge
push
scas
popa
loope
push
dec
gs
jb
in
inc
xor
in
fildl
push
outsl
out
popf
ret
xchg
cmp
call
xlat
adc
mov
and
aas
dec
xchg
pop
addps
cmp
xor
xchg
outsb
in
aam
rolb
cmp
mov
adc
xor
iret
adcb
push
push
mov
mov
decb
rclb
scas
dec
out
ret
inc
mov
mov
or
lods
push
fwait
sahf
cmovge
stc
jo
data16
jle
lods
es
ds
cmp
push
sbb
outsb
and
lret
sbb
bound
in
repnz
inc
mov
sti
repnz
hlt
jp
dec
in
stos
mov
mov
and
or
outsl
mov
inc
xor
push
mov
jecxz
jnp
mov
das
jecxz
scas
lcall
testl
jns
mul
into
jns
leave
add
sub
fsubrp
addr16
cmpsb
pushf
sub
pop
int3
mov
mov
jecxz
jmp
std
xchg
mov
in
repnz
stc
aad
clc
addr16
xchg
aas
mov
xorb
or
inc
cmp
or
fisttpl
mov
xlat
stos
dec
mov
jl
adc
push
or
popf
xchg
jmp
ss
int
xlat
andl
pop
push
xchg
cli
out
push
testb
std
fisttps
fimull
inc
push
cmp
jnp
in
lea
rcr
sbb
xacquire
xor
cmpsl
push
push
push
cmpsl
fbld
outsb
inc
ret
jo
pusha
jge
int3
insl
inc
rorl
fdivrl
xchg
cmp
ss
bound
mov
mov
inc
mov
push
fildl
pop
shr
mov
jge
and
lret
fwait
ss
add
and
push
push
or
test
xchg
mov
pop
sub
or
push
cmp
or
outsl
fcmovne
push
adc
js
mov
int3
lcall
jnp
mov
lds
dec
inc
aad
test
mov
ja
aaa
test
inc
add
loopne
sarl
jl
mov
mov
add
nop
bound
test
inc
test
cmp
push
add
adc
pop
jnp
into
dec
sahf
dec
loopne
mov
fidivrl
jecxz
jl
push
insb
into
add
push
call
aaa
and
push
int3
les
repz
and
test
cmpsb
pop
dec
rorl
pop
gs
outsl
dec
and
or
sbb
out
das
insb
nop
sbb
pop
and
inc
cli
jp
sbb
out
add
sbb
mov
lods
push
sub
and
daa
rcrb
test
and
sbb
and
in
push
mov
aas
ftst
stos
fcmovu
dec
in
sbb
mov
inc
sbb
out
pop
inc
fs
mov
push
outsb
pop
in
shl
das
sahf
call
outsb
imul
cmpsb
pop
fldenv
es
cmp
push
scas
lods
in
jecxz
fsubs
cld
movsb
push
push
push
sbb
push
test
rep
and
stos
add
mov
cmp
int
sub
inc
inc
or
cld
sub
xorb
loope
mov
jnp
in
or
gs
xchg
out
addr16
pop
repnz
fwait
or
in
pusha
cwtl
push
js
jl
push
out
jb
notl
pop
dec
fistpl
es
mov
loope
rolb
andl
sub
repnz
push
sahf
xchg
lds
mov
fnsave
mov
into
loopne
sbb
hlt
daa
pop
xchg
adc
arpl
mov
lods
cwtl
dec
rolb
lret
addr16
cmp
and
or
test
push
insb
mov
mov
xor
sahf
jmp
outsb
jmp
leave
and
push
outsb
jmp
or
or
pop
and
ret
mov
incl
mov
insl
inc
mov
mov
add
cmc
sti
mov
repnz
pop
adc
xchg
mov
leave
push
js
inc
sti
inc
fwait
js
je
add
push
movsl
xor
out
popa
add
mov
push
daa
fildl
mov
fdivs
or
xchg
sbb
and
inc
aam
dec
jae
aam
sahf
shrl
push
sbb
mov
push
ja
cmpps
push
dec
mov
mov
push
in
hlt
in
daa
repnz
setbe
imul
movsl
adc
cmpsl
add
or
add
push
out
push
pop
test
or
inc
adc
push
std
shlb
jp
sti
push
xchg
ret
fdivl
and
pusha
jns
cmp
jp
daa
fstpt
mov
mov
mulps
add
and
sbb
aas
in
pop
adc
push
loope
out
in
jecxz
sbb
fildll
lret
inc
and
jg
pop
les
jp
dec
call
and
jo
fs
nop
fs
pusha
jle
sbb
mov
loop,pt
pop
sbb
adc
popl
mov
and
mov
xor
sbb
xchg
mov
mov
lock
adc
call
xor
fildl
lret
xor
fs
jns
jmp
enter
bsf
movsb
cmp
orb
pop
gs
cmp
push
cmp
jg
dec
out
fildll
out
mov
psubd
lea
mov
jge
pop
cmc
sub
and
inc
and
popa
or
andl
out
inc
and
dec
int
or
cld
jns
xor
xchg
std
dec
movsb
mov
jge
or
mov
ds
lods
in
adc
repnz
dec
in
negl
sub
mov
jb
scas
dec
pusha
fdivrl
mov
in
xchg
add
iret
inc
mov
xchg
xlat
pop
outsl
scas
dec
and
and
orb
cmp
movsl
mov
mov
sub
jmp
lcall
mov
xor
jo
rcll
mov
mov
dec
test
stos
int3
push
or
int
push
fwait
sbb
in
ficomps
movsl
jnp
mov
fmul
mov
orl
nop
dec
je
push
imulb
mov
inc
popf
cld
pop
int3
push
push
movsl
xchg
mov
add
inc
subb
mov
xchg
push
sbb
daa
stos
pop
xor
pop
pop
repnz
xchg
movsb
jle
xchg
mov
push
inc
dec
add
xor
cli
inc
loop
push
out
cmp
in
inc
inc
add
insb
xchg
lret
ja
imul
mov
pop
cld
jecxz
cmp
ja
xchg
pop
jnp
imul
inc
je
push
in
pop
aas
jmp
jne
jge
mov
xor
add
mov
inc
lret
inc
dec
cmp
sti
xor
pop
push
enter
jno
and
dec
sbb
std
bound
mov
out
xor
inc
push
cmp
dec
dec
dec
add
jg
pop
jne
jo
cmp
jg
adc
add
movsb
dec
inc
xlat
mov
add
mov
adcb
xlat
nop
push
mov
add
lock
iret
add
fwait
lods
adc
out
sub
mov
icebp
in
mov
add
aam
xchg
adc
or
jo
loopne
inc
push
push
push
add
or
cmp
nop
loopne
movsb
mov
loop
lcall
cmc
and
outsb
xchg
test
stos
call
lret
cmpsl
jb
scas
jne
cmp
popf
lock
es
cmp
xor
sub
add
in
mov
aas
adc
test
add
xchg
xchg
inc
inc
xchg
lock
inc
ret
xchg
fidivrl
jbe
fiadds
mov
test
mov
mov
xor
cmpsb
inc
mov
pop
movsl
fcmovnb
popf
push
dec
into
dec
nop
loope
push
mov
mov
jmp
pop
insb
out
int
fnstcw
pop
hlt
insl
into
fabs
inc
jle
lods
xor
cmp
cmp
mov
mov
xchg
or
imul
mov
rcll
jle
mov
cld
pushf
sbb
push
jne
sbb
mov
rolb
movsb
lds
adc
sbb
gs
mov
jg
into
cmp
dec
ret
insb
pop
jb
scas
push
push
jnp
mov
mov
inc
add
pop
or
imul
xor
mov
mov
outsl
mov
sbb
cmpl
jb
lods
fs
jns
jbe
out
push
xchg
cld
adc
push
lret
push
sub
inc
bound
push
shlb
ds
imul
add
xchg
clc
jp
movb
fsubrp
in
out
jae
mov
lds
ja
mov
xchg
cmp
nop
loope
adcb
jbe
fnsave
sbb
lods
xor
and
lret
stos
lods
imul
cli
mov
das
xor
inc
mul
in
andl
scas
push
and
push
sarl
ja
pop
add
xchg
mov
shll
leave
enter
sahf
aam
add
into
jecxz
stos
mov
sbb
aam
xchg
les
inc
jecxz
xor
pop
in
stos
pushf
dec
mov
inc
cmc
stos
loopne
add
aas
mov
sbb
mov
xlat
fwait
sti
xor
inc
inc
pop
or
sti
mov
lret
mov
adc
andb
fnstcw
lret
stos
mov
jg
lods
dec
inc
adc
sar
sub
fcmovu
cmp
jnp
ret
nop
inc
clc
sub
es
xor
add
es
sbb
fiadds
es
aad
xchg
dec
xchg
sbb
pop
inc
je
sbb
ss
mov
lea
fdivl
push
pop
call
insl
fdivl
int
push
das
icebp
jne
pop
cld
dec
cmp
into
mov
enter
and
and
sbb
mov
iret
out
out
sub
rcll
addr16
pop
mov
insb
loop
rcr
pop
or
jecxz
mov
dec
stos
insl
cmp
push
sarl
mov
ficoml
sbb
mov
inc
xor
mov
pop
repz
ret
lret
inc
dec
or
sub
bound
mov
inc
pop
cmc
adc
mov
mov
dec
data16
test
jl
pop
sub
or
mov
mov
mov
jns
dec
pop
inc
jge
lds
jle
movsb
outsl
mov
and
sub
push
mov
push
lret
adc
push
repnz
stc
pushf
scas
jb
jne
xchg
fs
pop
inc
int3
notl
add
xchg
pop
cmp
adc
mov
in
push
push
scas
or
enter
jo
fldcw
inc
into
inc
push
adc
scas
fdivp
test
and
dec
pop
test
jmp
xchg
js
ds
cmp
ret
pop
mov
sbb
adc
les
hlt
out
mul
int
sbb
push
add
inc
mov
rcrl
pop
or
test
dec
jmp
add
dec
push
dec
movsl
mov
adc
mov
xor
sub
or
add
fucomi
test
insb
jp
adc
add
outsb
out
fsubr
jo
lods
push
popf
cmpsb
fwait
test
dec
cmpsb
mov
daa
lcall
jo
fistpl
ret
sbb
fisubs
add
or
fcoml
aas
inc
jp
ja
rcr
aas
push
mov
jge
push
cs
push
mov
in
sub
sbb
or
arpl
jmp
mov
and
mov
shlb
mov
sub
jbe
adc
jp
mov
cmp
lock
inc
stc
hlt
mov
mov
jb
imul
mov
mov
pop
jbe
xor
mov
fcom
mov
ret
in
lret
iret
dec
sbb
sbb
or
aaa
cmpsb
imul
idivl
loope
bnd
jnp
outsl
jp
mov
dec
insb
aam
push
js
mov
cmpsb
xor
and
test
das
mov
roll
push
mov
push
jge
push
and
repnz
add
dec
fdivl
sub
ret
cwtl
bound
idivb
sub
add
jmp
divl
push
fucomip
stos
fstps
sub
pop
arpl
mov
add
sub
clc
int
sub
shll
jge
lods
dec
fucomp
pop
ret
mov
std
inc
mov
dec
jge
push
in
mov
cs
fwait
and
jmp
outsl
data16
mov
fstpt
out
xchg
xchg
sahf
adc
aaa
push
mov
push
imul
sbb
out
into
jb
lret
lret
pusha
in
adc
cs
pop
mov
jb
push
mov
cmp
mov
rolb
inc
sbb
sub
ret
mov
xchg
xor
jle
cmpb
les
aad
jb
lock
xor
jecxz
fwait
sahf
pop
push
test
mov
xchg
js
add
ss
out
push
xor
pop
adcl
cli
insl
cld
sub
push
clc
xchg
inc
negb
shll
xor
cmp
in
jne
nop
mov
pushf
fidivl
dec
push
xchg
cld
lds
push
cmp
inc
js
push
imul
pop
ss
xor
mov
aam
adc
lods
xor
outsl
add
cmp
fsubr
stc
xchg
push
adc
xchg
mov
in
push
fisubrl
std
or
outsl
push
push
leave
in
cmc
fsubr
inc
mov
and
aaa
jns
dec
fiaddl
sub
and
lret
lea
adc
pusha
rclb
mov
cmpsb
aaa
ds
adc
sub
jnp
popf
add
or
test
or
add
scas
cmpsb
int3
call
jnp
shll
mov
mov
jmp
int3
jne
in
add
mov
and
lods
jne
repz
push
pop
pop
xor
daa
nop
subb
test
in
or
jle
lds
and
clc
add
jmp
add
je
addb
push
inc
add
testl
jno
inc
icebp
or
hlt
push
dec
inc
cmp
pop
xchg
pop
je
lods
aas
in
cmc
xor
xor
lds
and
cmpsb
shl
sub
iret
in
dec
lods
dec
inc
in
cli
mov
pop
jno
das
add
add
sbb
scas
jb
dec
in
lds
pop
and
adc
adc
in
pop
xchg
das
cld
and
or
lods
adc
cmp
outsb
sti
jne
mov
insb
shlb
push
pop
dec
fsubrl
add
jbe
fdivr
hlt
es
sbb
std
jns
dec
rcll
mov
bound
stos
add
clc
inc
out
cmpsl
insb
jg
xor
mov
xor
rcll
cli
sub
jne
fcomps
outsl
out
mov
icebp
mov
aas
dec
mov
or
add
sub
sbb
lcall
or
and
and
out
jle
mov
pop
dec
icebp
out
push
leave
ret
lods
je
iret
js
fsts
mov
dec
pop
je
inc
and
pop
adc
out
fisubrs
cmp
cmpsb
inc
mov
lret
mov
jae
jnp
cmpsb
popa
dec
or
pop
jo
insb
sbb
dec
or
adc
pop
insb
int
mov
imul
lahf
xchg
cmc
out
fwait
inc
mov
es
push
lret
dec
xchg
mov
mov
mov
xchg
push
leave
movsb
mov
pop
idivl
in
mov
fsubs
repnz
test
sarb
add
shll
leave
aas
orl
jno
push
xchg
push
lcall
cmpsl
cmp
mov
das
inc
rcll
movsl
lock
fsubr
or
sub
xor
mov
shlb
popa
jae
push
jae
cli
mov
fistps
push
scas
movsl
cld
adc
iret
fs
test
inc
xor
sub
sub
loope
cli
pusha
clc
jg
mov
dec
sub
ss
push
je
jle
cmp
or
mov
sahf
mov
mov
movnti
int
and
cltd
es
dec
cmc
nop
xchg
test
xchg
adc
xchg
cmp
adc
jle
jns
pop
mov
js
imul
mov
dec
mov
xor
iret
pop
sbb
mov
pop
ja
mov
push
in
or
out
loopne
and
ja
mov
subb
push
lock
push
shrb
jp
stc
and
popa
fmuls
test
push
mov
repnz
add
ds
out
mov
ret
in
roll
cmpsb
push
xor
sbb
xor
and
cmc
scas
sbb
dec
push
mov
lret
sub
daa
or
mov
fs
mov
std
das
mov
and
aad
mov
popf
popa
push
out
lret
push
push
test
sbb
ficompl
push
pop
dec
inc
mov
popf
lea
popf
mov
xchg
ja
rol
xor
cltd
movsl
cld
xchg
xor
loopne
inc
insb
inc
insl
push
jmp
ret
rcl
sbb
andb
or
xchg
and
pop
push
je
decb
ljmp
mov
mov
rorb
fbld
jl
mov
pop
dec
cmp
adc
mov
jmp
enter
xor
aad
pop
mov
or
stos
mov
xor
and
dec
cld
stos
outsl
xor
pushf
mov
or
hlt
sub
xchg
mul
sar
rcr
lea
xor
js
aad
mov
ja
xor
mov
mov
cld
xor
stos
xchg
int
xor
aam
fsub
pop
aaa
and
scas
push
dec
mov
fadds
and
push
lock
out
fstpl
gs
out
fsub
inc
mov
mov
mov
dec
shl
xor
lods
cs
mov
iret
jnp
icebp
jne
enter
movsb
jle
notl
inc
fcoms
pop
in
outsl
scas
fs
lds
add
mov
nop
pusha
sub
or
mov
xchg
jle
and
pop
xor
pop
jnp
outsl
mov
clc
insl
sub
inc
cmp
negl
cltd
ja
pop
fwait
sbbb
or
fstpl
sbb
push
js
fisubl
push
arpl
or
in
sti
pop
sarb
sub
es
outsb
ja
and
icebp
cmpsl
sub
addr16
inc
aad
inc
xchg
dec
in
pushf
sbb
xchg
decb
stc
adc
cmp
hlt
pop
andb
popaw
enter
arpl
aas
xor
lcall
enter
jbe
lahf
inc
jo
es
pop
aaa
lret
push
fmull
or
dec
and
cli
or
xchg
push
pop
cmpsb
push
add
dec
add
add
mov
jp
enter
push
or
xor
mov
lcall
jae
les
test
jle
add
pop
or
mov
aaa
cmp
sbb
lods
pop
in
lret
jmp
push
imul
decb
or
mov
mov
push
inc
out
stos
pop
test
insl
jecxz
add
adc
lock
jb
fcoml
jae
mov
std
loope
or
jg
xchg
mov
movsb
dec
adc
sub
ret
mov
and
dec
cmp
and
ja
sub
lds
js
in
subb
inc
lock
xchg
jne
sub
xorl
insl
inc
jg
divb
jge
xor
mov
sbb
adc
data16
sub
add
sbb
add
push
mov
pop
xchg
sbb
mov
dec
shll
icebp
mov
mov
stos
add
jae
push
or
loopne
adc
mov
push
js
sbb
jae
jno
scas
mov
push
out
sbb
xchg
hlt
aaa
or
mov
inc
inc
test
sub
sti
mov
outsl
mov
out
popa
pushf
xchg
xor
decb
xchg
inc
aad
mov
mov
movsb
inc
fidivrl
gs
roll
mov
cmc
pop
ljmp
inc
inc
pusha
adc
xor
jp
dec
ss
cwtl
push
jo
add
sbb
push
add
ljmp
icebp
xor
leave
out
xchg
mov
cli
sub
xlat
les
pop
iret
dec
jne
jb
or
outsl
out
jg
adc
loopne
dec
clc
jl
pushf
gs
mov
mov
addr16
jo
pop
rclb
push
test
sahf
inc
jno,pn
inc
or
lods
fs
or
leave
es
aad
lret
mov
repnz
mov
clc
out
mov
cmc
adc
mov
jns
inc
push
xlat
jmp
adc
stos
pop
stos
mov
jo
sarl
mov
xor
mov
sbb
mov
dec
imul
xchg
cmp
and
mov
pop
iret
or
and
adc
mov
psubsw
mov
fiadds
xchg
xchg
dec
jo
cmp
inc
mov
data16
aad
icebp
lea
dec
pop
adc
xor
mov
fsubl
sbb
out
xor
cli
xchg
mov
add
adc
lret
push
push
push
fsub
jns
mov
lds
sbb
jb
arpl
inc
orl
out
cmp
adc
xor
pop
aaa
push
out
out
in
push
fmuls
outsl
xor
jmp
adc
jo
xchg
add
xor
adcl
mov
jecxz
dec
cmp
jp
jbe
or
lcall
lea
int
add
jecxz
pop
mov
test
pushf
idivl
mov
sub
adc
arpl
push
daa
mov
popf
pop
inc
sbb
testb
jp
push
in
ret
sbb
mov
addr16
imul
jne
push
cmp
loope
loopne
push
dec
mov
xlat
jp
int3
fs
cwtl
xor
mov
lea
cmc
scas
lcall
sti
sbb
mov
and
inc
ret
lods
jmp
sarb
xor
cmp
lds
data16
pop
adc
mov
xor
lock
scas
cmp
rep
addr16
repz
call
call
dec
in
loopne
addl
arpl
call
iret
dec
jge
or
outsl
mov
fnstenv
dec
ja
adc
jle
lcall
je
mov
cli
out
int3
mov
insb
lret
std
cmp
jo
pop
adc
sbb
cmpxchg
cwtl
inc
out
push
cmp
leave
push
cmp
jne
or
push
scas
add
pusha
pushf
mov
pop
int
pop
jns
in
push
mov
sub
add
and
insb
fdivrp
and
pop
test
decl
inc
fisubrl
cs
orl
inc
inc
cmp
sub
loope
vmptrld
stc
inc
jo
mov
minps
push
adcl
leave
es
mov
dec
nop
inc
sbb
loop
and
jo
xchg
jle
sti
xchg
cs
push
mov
push
test
cmp
jp
fisubl
xchg
push
loopne
xorl
bound
add
mov
imul
fidivl
mov
arpl
fidivrl
add
mov
mov
jno
pop
aad
mov
inc
daa
push
stos
maxps
je
arpl
es
mov
pop
inc
dec
sub
out
arpl
cmp
pop
and
js
fucom
jmp
popf
in
fdivrl
ljmp
cmp
mov
mov
lds
out
fnstcw
stos
jne
pop
ljmp
arpl
add
imul
lods
xchg
mov
xchg
mov
cmc
pop
mov
jle
jns
out
sbb
lcall
add
push
shrb
mov
jb
mov
xchg
cltd
pop
mov
dec
aaa
xchg
mov
mov
mov
cmp
loopne
xor
lods
test
pop
jge
pop
inc
mov
xchg
push
sub
popa
ret
cli
lds
add
ss
repz
out
inc
imul
sub
jmp
inc
mov
jno
xor
inc
push
shr
jecxz
insb
add
push
mov
adc
fstps
les
mov
gs
fdiv
jecxz
jne
leave
xor
jns
test
dec
mov
pop
mov
and
aaa
jmp
lock
hlt
xorb
shlb
jb
cmc
add
xchg
into
cmp
rorl
inc
ljmp
aas
dec
jb
and
lock
sub
sub
xchg
loopne
js
push
push
inc
mov
dec
fwait
cmc
cmc
cmp
mov
push
mov
ficoml
xchg
gs
fldl
rcrb
dec
push
push
push
jge
adcb
popa
in
dec
pusha
mov
loope
sbb
rorb
fisubrl
and
ret
inc
dec
pop
cmp
pop
xor
mov
add
xor
xor
stc
fsubs
sub
jl
mov
push
ret
pop
rclb
shl
stc
int3
nop
std
mov
fildl
inc
inc
mov
xchg
cmpsl
stos
inc
neg
cmp
jb
rcll
xor
xchg
xchg
push
outsl
scas
add
pop
xchg
lret
mov
mov
inc
mov
push
ljmp
mov
jnp
fwait
pcmpeqb
lods
pop
or
mov
add
adc
lock
fnstcw
int3
pop
call
xchg
xchg
pusha
sbb
hlt
sub
fdivl
jp
jae
mov
sub
sbb
inc
push
mov
push
mov
mov
mov
into
xor
pop
out
inc
jmp
cmp
cmp
mov
lahf
out
imul
inc
bound
popf
push
insb
push
rcrb
leave
inc
mov
js
or
mov
inc
dec
repnz
into
ljmp
lret
cld
js
lea
pushf
mov
scas
xchg
lock
shll
mov
pop
and
dec
adc
add
inc
or
sbb
out
cmp
data16
cwtl
mov
push
pushf
xor
mov
mov
pop
ss
dec
enter
loop
cli
popf
add
gs
sbb
je
ss
lret
xor
mov
outsb
out
and
mov
cld
test
xor
mov
jo
cmpsl
jg
and
pushf
js
dec
push
fwait
mov
jne
mov
jae
jne
ljmp
aas
sub
ja
push
sub
push
pop
lea
push
mov
xchg
push
xor
loopne
pop
jmp
mov
push
loope
mov
nop
sbb
cmp
js
or
lahf
ljmp
dec
xor
lea
add
enter
pop
std
xchg
mov
je
xor
scas
push
jbe
sbb
sub
inc
cmp
test
inc
mov
mov
mov
inc
mov
adcl
xchg
ja
push
mov
int
sbbl
inc
fs
std
mov
loop
sub
ret
push
jl
pop
cmpl
pop
pusha
jg
adc
mov
nop
je
pop
test
cmp
pop
push
push
cs
mov
dec
sbb
pop
dec
aam
and
test
inc
mov
jne,pn
mov
pop
daa
push
sub
jnp
fistps
mov
cmp
mov
jmp
mov
xchg
cmc
imul
inc
popf
mov
or
add
test
pushf
aaa
pop
jecxz
cs
popa
xlat
push
jnp
mov
jb
sbb
lret
or
mov
mov
sub
and
ljmp
push
test
data16
cltd
push
arpl
nop
js
es
pushf
inc
aaa
adc
ffreep
jns
pop
sbb
dec
add
sbb
mov
jge
jns
sub
sbb
inc
clc
mov
push
loopne
and
les
xor
cmc
adc
pusha
dec
cli
push
insb
and
aas
pop
and
je
jno
inc
out
and
push
sbb
mov
lret
jae
mov
ja
inc
mov
out
fwait
jbe
dec
adc
fdivrl
sub
and
adc
add
xchg
push
xor
sub
xor
pop
add
aad
jno
jnp
mul
mov
xor
jp
mov
lret
xchg
sub
std
or
mov
stc
jae
fdivrs
inc
mov
xchg
out
xor
push
decl
dec
lret
cmp
loop
fldt
loope
ja
jle
mov
jbe
or
iret
mov
into
ss
mov
push
mov
sub
loope
cmp
pusha
jg
std
sbb
shrl
push
es
shl
je
sub
cltd
pop
jl
mov
mov
inc
lods
outsl
pop
fwait
add
mov
push
sbb
divl
jecxz
movl
jns
cld
xor
hlt
xchg
mov
xchg
mov
or
mov
ja
xor
adcb
lods
aaa
inc
in
and
cmp
dec
mov
jmp
sbb
fldt
popf
neg
push
dec
leave
stos
fidivs
repz
bound
mov
cltd
data16
jg
push
int
inc
sub
ljmp
popa
sub
mov
repnz
cltd
dec
jge
hlt
mov
add
shll
in
pop
movsb
xlat
xor
mov
push
fildl
xor
sbb
pop
popf
lahf
roll
mov
mov
sbb
int
fdivl
das
call
inc
jge
sbb
addr16
shlb
mov
jl
imul
mov
mov
sbb
ret
push
mov
jmp
or
mov
adc
rol
cld
jmp
stos
fwait
mov
inc
pop
mov
int
cld
push
mulb
pop
dec
mov
into
fldl
adc
lods
inc
cmp
iret
je
popf
mov
iret
cwtl
rorb
out
clc
mov
aaa
mov
test
mov
add
iret
mov
pusha
or
adc
mov
test
mov
test
dec
jmp
pop
shlb
mov
xchg
int3
lret
rol
scas
lret
imul
add
jmp
inc
aas
jo
loopne
mov
push
pshufw
inc
adc
pushf
loop
jnp
test
and
and
stc
aaa
sub
pusha
stc
or
pop
xor
inc
inc
cmp
pop
sahf
outsb
cltd
cmc
arpl
mov
cmp
lds
les
test
lock
out
test
shrb
insb
pop
lock
mulb
mov
xlat
dec
imul
xor
sbb
push
popa
mov
mov
dec
pop
or
pop
ds
fidivrs
push
pop
enterw
sar
pop
and
in
xlat
and
and
orl
inc
lret
inc
mov
xchg
enter
in
mov
xor
add
sub
cmpsb
mov
xchg
pop
test
cli
dec
test
pusha
xchg
std
icebp
cmp
adc
pusha
mov
add
shr
lea
adc
call
ljmp
mov
mov
mov
push
jle
scas
lret
ljmp
mov
xor
loop
pop
loop
faddl
xchg
pop
cmpsl
sbb
pop
stos
mov
jge
ret
enter
stos
add
lret
movsb
popa
xor
faddp
and
icebp
scas
subl
fstps
mov
je
loopne
lret
lea
cmpsb
cmp
push
dec
repz
ljmp
mov
lds
cmc
je
add
pusha
fadds
dec
lods
shll
js
test
xchg
daa
jns
mov
loope
mov
adc
mov
jge
popf
xor
rcrb
pop
push
std
mov
movsb
mov
stos
sbb
ret
mov
jecxz
sahf
pop
ffreep
mov
and
outsl
scas
or
repz
daa
jecxz
insl
fiaddl
push
sarl
adc
pop
shl
lret
outsb
das
sub
fdivr
inc
movsb
mov
lahf
adc
int3
or
dec
mov
test
mov
jae
jo
and
mov
mov
test
loopne
cmc
inc
cmc
inc
and
push
fs
and
mov
sarb
pusha
and
sub
sub
mov
sbb
div
push
jbe
and
add
shl
sub
pop
mov
arpl
daa
stos
xor
mov
arpl
lret
jl
sub
inc
jns
int3
insb
out
imul
xchg
adc
popf
xor
inc
stc
ja
pushf
pop
ja
mov
jnp
movsb
movsl
sbb
push
add
mov
cli
das
xchg
jle
add
mov
xor
mov
or
rolb
fistpl
int
pop
jle
pop
pop
jg
jno
cmp
push
jmp
loop
incb
sub
mov
shll
cs
cli
out
sbb
js,pn
rcr
mov
stos
loop
outsb
aad
nop
add
js
gs
cmp
pop
mov
in
lea
push
add
pop
add
lods
popa
or
pop
lahf
sbbb
jmp
push
mov
pop
int
mov
xor
in
imul
loopne
idiv
ja
push
add
insb
out
add
mov
out
lcall
roll
cli
addl
icebp
push
and
out
and
inc
mov
jmp
mov
insb
outsb
mov
lcall
repnz
xchg
lret
adc
pop
hlt
ret
call
push
dec
pop
mov
arpl
sbb
mov
xor
aam
xchg
jno
outsb
shr
mov
dec
mov
cmc
xchg
pop
daa
leave
andl
mov
xchg
dec
xchg
js
xchg
jns
fwait
pop
inc
push
jmp
movsl
icebp
repnz
in
call
fxch
inc
or
mov
cmp
push
mov
in
dec
out
jmp
mov
addb
sub
out
fdivrl
loop
mov
mov
push
xor
inc
sahf
or
test
inc
adc
movsb
jg
pop
mov
subb
cmp
xlat
or
mov
xor
mov
mov
adc
xlat
repnz
int3
fsubl
aas
dec
push
push
sub
mov
scas
add
or
lret
nop
fidivrl
inc
mov
jnp
jge
ja
stc
xor
in
insb
dec
xor
andl
out
adc
xchg
jb
inc
jg
inc
lock
cmp
imul
sahf
hlt
push
xor
cwtl
or
mov
je
ds
gs
sbb
outsl
icebp
jl
sub
cmp
push
mov
lcall
xlat
mov
popf
jp
loopne
movsb
xchg
pop
mov
and
mov
jmp
push
notl
dec
aam
pop
sub
add
fnsave
pop
filds
jb
push
and
ljmp
lcall
ror
inc
movsl
push
aas
xor
sub
mov
mov
pop
xchg
adc
mov
mov
mov
in
jle
in
outsb
cmpsb
and
push
xchg
xor
cmpsl
sbb
or
mov
out
dec
dec
inc
out
xor
imul
mov
dec
mov
cs
repnz
add
sbbb
sbb
pop
xchg
loopne
add
sbbb
fsubrl
xor
out
adc
push
sub
repz
jge
inc
je
inc
xor
mov
xchg
push
mov
out
mov
cmp
fcmovu
lds
jo
adc
movsb
push
test
mov
hlt
ret
xchg
call
gs
xor
fwait
ss
pop
jns
lock
popa
ja
stos
pop
stos
jg
mov
cwtl
xchg
bound
pop
sub
enter
and
sbbb
push
push
jle
iret
xor
pop
daa
jle
loope
adc
jmp
xchg
mov
inc
notl
insb
in
in
subb
pminub
mov
xlat
int
mov
mov
mov
dec
push
sub
jae
gs
out
test
rolb
sbb
pop
cmpsb
cmp
mov
mov
cmp
pop
outsb
scas
jge
mov
jle
stos
sahf
mov
xchg
or
flds
sti
andl
test
mov
shll
stc
sub
mov
inc
push
aaa
roll
in
pop
xor
mov
ja
add
call
xor
aad
mov
xor
jae
repz
dec
pop
mov
ret
fsubl
mov
xchg
push
loopne
movsb
sarl
in
aad
xor
mov
imul
xorb
or
popa
mov
inc
pop
int3
fwait
testl
addb
insl
push
loop
popa
rcl
dec
push
std
xchg
cs
xor
jae
adc
mov
mov
dec
jnp
test
das
add
or
xor
mov
adcl
fwait
and
hlt
rcll
xlat
js
xchg
push
push
les
inc
jecxz
rolb
cmpsl
nop
xchg
into
int3
sbb
cmp
hlt
or
cmp
pop
or
cwtl
mov
jmp
sub
adc
jmp
xchg
leave
pusha
jnp
lret
jmp
sbb
push
sub
mov
ljmp
mov
outsl
xchg
xchg
popa
sub
xor
push
inc
and
outsb
es
jg
dec
xor
popf
fimuls
mov
repz
push
xor
mov
mov
mov
arpl
outsb
jg
mov
pushf
imul
push
xchg
push
mov
fwait
mov
sbb
mov
js
nop
imul
adcb
jnp
mov
testb
jmp
add
ss
sub
xchg
cmp
les
sub
adc
push
test
cmp
dec
in
and
negl
dec
fidivl
pop
jecxz
pop
or
inc
stc
xchg
dec
sub
movsb
out
lret
repz
pop
sub
inc
xchg
pusha
pop
add
and
out
clc
loopne
push
inc
and
lods
push
push
adc
push
stc
in
pop
adc
mov
icebp
or
dec
pop
lahf
rorl
repz
lahf
dec
and
xchg
ret
adc
pop
and
mov
push
test
test
lahf
and
mov
popa
test
stos
pop
cwtl
repnz
pop
push
mov
ss
movsb
push
js
ds
jnp
mov
gs
rcr
pop
in
mov
scas
std
sub
push
add
jecxz
inc
addb
dec
dec
imul
cmpsb
mov
mov
ss
inc
and
adc
cmp
pop
and
adc
xchg
push
cld
add
adc
repz
out
and
xor
jbe
push
add
push
mov
popa
mov
jb
or
addb
in
roll
and
and
sbb
mov
mov
sti
add
testb
inc
sahf
sbb
push
test
test
push
pop
nop
das
xchg
adc
mov
imul
cmc
ja
cli
adc
sbb
scas
push
cltd
sub
or
and
imul
xlat
inc
add
xchg
repnz
stc
fnstcw
test
mov
loopne
in
push
or
dec
daa
push
outsb
cltd
divb
jb
rcll
mov
and
push
ds
mov
clc
dec
test
clc
movb
pop
loopne
fs
movsl
lret
mov
stos
xchg
inc
cmp
xchg
loopne
sbb
fsubp
sahf
jp
outsb
pop
cmp
xchg
cmc
lods
mov
notb
xlat
inc
mov
inc
ds
decb
pop
hlt
nop
cltd
add
mov
dec
add
add
pop
movsb
mov
jbe
fs
jae
mov
shlb
fldl
mov
ret
mov
repnz
push
call
scas
aad
inc
into
sub
shrl
sbb
sahf
pop
arpl
sahf
xchg
jae
fstpt
out
and
push
inc
ss
mov
movsl
movsb
sahf
pop
jmp
loopne
sub
insb
jle
adc
stos
and
push
insl
ret
cli
inc
mov
sahf
pop
sti
inc
mov
sbb
icebp
fwait
es
adc
push
movsl
jnp
lret
aas
mov
imul
jae
in
cmpsl
sbb
lock
jnp
ljmp
daa
mov
les
out
and
mov
das
jmp
adc
or
and
aad
dec
mov
cmp
in
cmp
pop
push
insb
sbb
in
or
jecxz
mov
mov
out
cmp
xchg
sub
iret
mov
mov
mov
lcall
and
repz
out
pushf
jne,pt
xchg
cmp
xchg
fs
lods
and
lahf
or
jle
mov
arpl
lds
inc
scas
in
int
adc
ret
fs
cwtl
mov
pop
adc
cmp
mov
xchg
sub
inc
or
outsl
leave
sbb
jns
sub
mov
mov
inc
insl
fadds
mov
shlb
ss
xor
jne
hlt
jo
dec
jge
jmp
xor
leave
xchg
ja
jne
sti
dec
xchg
mov
jno
or
gs
inc
shrb
jns
scas
sub
fdivs
arpl
xchg
test
mov
sub
sbb
call
mov
popf
cmp
test
xchg
cmc
out
mov
inc
mov
cmp
dec
push
mov
inc
mov
inc
pop
or
mov
adc
test
je
jbe
test
sub
xor
xor
dec
dec
pop
pop
pop
xor
fs
pop
mov
lahf
jnp
inc
std
fcomi
dec
addr16
or
daa
js
in
dec
daa
push
mov
cmpsb
test
test
add
outsb
pop
data16
loope
std
and
cmp
fwait
jno
lret
mov
es
jp
adc
test
sarb
push
xor
add
addl
lea
xchg
cs
ja
lock
jb
fcomi
pushf
in
xchg
call
es
pop
andl
jmp
aad
push
iret
mov
mov
mov
out
xchg
std
push
js
inc
sbb
jns
out
mov
ss
add
inc
jbe
jmp
ret
xchg
xchg
push
dec
or
dec
enter
aam
xchg
rep
daa
idiv
xchg
bound
xor
ret
pushf
mov
test
add
ss
in
jnp
daa
lret
pop
push
cmpsb
hlt
ds
stos
push
lret
mov
inc
stos
push
test
mov
ja
cmp
push
add
inc
test
ljmp
mov
inc
add
pop
mov
ja
cmp
jg
jmp
or
stos
rcrb
daa
faddl
out
xchg
dec
and
xor
mov
aad
in
fwait
add
mov
dec
adcl
mov
in
fwait
xchg
cmp
mov
mov
test
std
or
sahf
shr
jne
xchg
lea
jae
or
stc
lahf
into
xor
fwait
aaa
or
jo
insb
and
adc
pusha
xor
loop
mov
jo
mov
and
lds
lds
dec
pop
sarl
pushf
add
adc
pop
test
mov
ja
mov
and
das
xor
or
insl
add
subl
pop
push
jge
daa
cmpb
ss
adcb
mov
das
sbb
jp
int
jmp
scas
mov
mov
cwtl
inc
ror
in
jmp
lock
inc
fwait
lds
cmc
js
out
push
cld
xchg
call
add
cmpsb
sbb
sub
and
sbb
lods
xacquire
fldl
lock
iret
fsave
dec
lods
push
inc
sarl
pop
pop
mov
xor
mov
xorl
enter
fisubrs
idivb
jmp
add
sub
aam
rorb
push
rol
mov
outsb
pushf
sub
in
xor
sub
and
lock
ds
stos
call
div
pushf
das
jp
out
or
jne
mov
cli
addr16
lods
xor
fwait
xor
test
std
pop
aas
insb
fsubl
add
mov
sub
lea
xchg
int
aas
lea
sub
pop
push
jns
data16
sub
out
into
pop
jge
and
xacquire
lods
nop
popa
jne
test
mov
fisubrs
mov
leave
inc
adc
mov
call
mov
cmpsb
repnz
cmp
mov
fldcw
mov
cwtl
popa
out
pop
or
push
roll
xchg
test
and
or
push
outsb
jg
mov
lock
mov
mov
stos
ret
sti
bnd
sub
mov
sbbb
push
fisubrl
test
ss
push
jle
sbb
xor
mov
into
sbb
xor
insl
mov
fs
inc
clc
scas
jns
fwait
cmp
jne
jo
dec
inc
xor
mov
shrb
dec
xchg
mov
idiv
in
pop
loop
add
enter
sbb
into
dec
int
loopne
push
mov
pushf
dec
push
popf
cmp
cltd
xlat
cmp
faddp
test
xor
gs
outsl
sarl
push
cmp
sbb
cld
ficoms
xlat
ja
in
test
xor
popa
inc
xchg
ret
sbb
dec
lods
jns
xor
add
hlt
in
inc
sbb
xchg
pop
push
imul
out
mov
pop
lret
repz
out
aam
lret
or
inc
mov
loop
clc
in
or
lret
lret
mov
mov
dec
inc
daa
mov
push
lret
movsl
push
cmpsb
dec
lret
mov
cli
and
je
leave
scas
xchg
into
jl
sub
loop
push
fsubl
cmc
push
or
addr16
jae
mov
aad
clc
rcrb
es
shrl
bound
fs
mul
test
jg
xlat
cmp
add
add
cli
pop
mov
jmp
cmp
xchg
push
cmp
add
daa
xchg
imul
clc
and
das
pop
loopne
lea
in
lret
shrb
mov
jns
lret
cld
sbb
ds
mov
jle
pop
inc
and
mov
in
xor
jp
arpl
popf
in
add
or
pop
fwait
adcb
push
into
jecxz
cmp
popa
xchg
pop
push
sub
fwait
mov
clc
or
push
cmpl
ffree
or
into
test
aam
xor
ja
out
subl
test
xlat
pop
sahf
sbb
cld
sti
iret
xor
aad
xchg
or
popf
lret
sbb
push
and
mov
inc
loope
jmp
mov
cwtl
mov
mov
jno
push
xchg
stos
pop
enter
jmp
lock
sub
stos
outsl
out
cmp
inc
adc
dec
mov
nop
adc
mov
xor
pop
cmp
lret
or
imul
insb
ljmp
fisttps
cmp
add
fisttpl
imul
es
or
xchg
xchg
in
sub
mov
leave
mov
filds
xchg
sbb
mov
test
ret
in
cmpsl
mov
out
xchg
ficomps
or
jnp
rclb
xchg
lret
fcomi
lret
lahf
stos
int3
test
push
cmpsl
es
mov
add
inc
sub
enter
and
gs
inc
fdiv
pop
orl
sub
arpl
aas
mov
xchg
fdivrs
pop
divl
inc
mov
int
xchg
mov
inc
sbb
cmpsb
adc
into
mov
rorl
dec
lret
dec
inc
ljmp
outsb
incl
in
and
ret
ss
and
dec
lcall
adc
and
jbe
out
xorb
dec
pop
insb
push
aam
iret
data16
xchg
pop
imul
push
cmp
mov
xchg
dec
scas
jbe
xchg
pop
jecxz
xor
or
out
xor
push
outsb
jnp
xchg
je
push
xchg
mov
dec
pop
pop
dec
loopne
and
lret
adc
test
sbb
lods
pop
mov
lret
mov
pop
jns
jo
or
testb
pop
push
push
add
into
ljmp
out
test
out
mov
pop
fwait
mov
aaa
pop
in
xchg
stos
mov
pop
cmp
sbb
or
fsts
je
out
not
les
ja
adc
and
jmp
mov
pop
fistl
sbb
and
lock
sub
cmp
pop
ss
mov
mov
mov
xor
popf
stc
xlat
hlt
jg
jp
cmpsl
jmp
pushf
sbb
inc
out
nop
cmc
insl
mov
shll
pop
pop
xor
sbb
lea
inc
outsb
add
icebp
jae
enter
in
out
pop
negb
adc
dec
cwtl
pop
lods
pusha
mov
repnz
jg
pop
shrb
in
jns
pop
push
and
shr
mov
xor
inc
sbb
hlt
daa
mull
jp
addr16
arpl
xchg
clc
stos
popa
mov
inc
loop
mov
and
or
or
lret
sbbb
or
jl
sbb
mov
inc
sbb
mov
loop
movsb
rolb
fs
inc
sbb
addl
ret
inc
mov
jnp
mov
jbe
test
insb
xchg
jge
std
jle
aas
mov
mov
and
aam
mov
jae
mov
mov
das
clc
das
in
movsb
push
mov
stc
lret
mov
imul
or
mov
fsubrp
dec
pusha
arpl
lret
mov
adc
or
add
flds
scas
mov
je
lods
ss
sub
lods
push
ret
xor
push
divb
xor
aad
xchg
add
fstpl
and
stc
sbb
inc
inc
and
pop
dec
outsb
outsb
fs
es
push
mulb
inc
cmp
jns
nop
or
icebp
dec
sbb
add
popf
shll
push
inc
or
xor
cltd
pop
dec
cs
cli
jno
ret
loopne
dec
andl
aam
cltd
adc
jg
and
arpl
inc
fldl
jmp
push
cwtl
inc
add
sahf
aad
test
lea
or
scas
xchg
xor
test
dec
das
clc
bound
popa
stos
nop
cmp
jmp
insl
into
dec
ljmp
xor
adc
ss
jg
es
or
cltd
out
pop
in
adc
jo
sbb
add
outsl
inc
push
aam
push
xor
ss
fildll
mov
add
inc
ds
call
mov
or
cmpsl
jae
aam
les
shll
enter
xchg
xchg
repnz
loope
or
cmp
sbb
inc
jnp
sarb
pop
mov
pop
lahf
fmull
sahf
scas
ret
and
mov
lods
gs
cltd
xchg
add
add
sbb
adc
mov
mov
mov
xchg
fdiv
dec
jl
into
in
in
push
jmp
ret
inc
xchg
or
bswap
enter
pop
jmp
xor
jno
sub
add
lea
les
aaa
mov
and
mov
outsl
iret
jg
sbb
pop
inc
jns
dec
leave
inc
sub
shlb
xor
sub
pop
cmpsb
ret
inc
jns
loope
xchg
out
aas
loop
inc
mov
jle
dec
cs
das
ja
jge
imulb
fwait
xchg
dec
or
jp
cmp
sub
push
adc
sbb
dec
mov
lret
mov
ss
mov
push
mov
mov
ret
mov
jbe
loopne
and
xor
lea
mov
or
add
mov
push
xchg
jp
movsl
sbb
sub
and
test
pop
dec
aaa
and
je
mov
jb
xchg
cmp
mov
aad
pop
sahf
enter
fs
lock
xor
pop
shrb
sbb
hlt
ss
push
or
scas
divb
lods
out
xor
adc
ret
and
mov
xchg
pusha
mov
fwait
or
dec
ficomps
pop
push
sbb
fsts
jno
hlt
movl
stc
push
push
leave
outsl
popa
sub
xchg
lret
mov
pop
xor
adc
mov
lcall
lods
adcb
jmp
jge
mov
rcll
incl
icebp
in
sbb
ja
imul
fdiv
jae
mov
imul
inc
pop
fisubrl
dec
xchg
hlt
icebp
aam
push
add
and
pop
pop
mov
lea
lcall
sub
cwtl
icebp
cltd
cmp
test
subb
fadds
jl
das
clc
jnp
lock
iret
mov
in
mov
cmp
shll
mov
xlat
sarb
cmp
int
dec
jno
pop
mov
pop
inc
dec
leave
insl
mov
gs
ret
cli
mov
testl
adc
idiv
cmp
push
shll
and
or
cmp
dec
add
aad
shlb
fwait
mov
stos
rcl
or
add
mov
jbe
mov
mov
jecxz
out
in
push
pop
sub
mov
mov
xlat
cwtl
adc
addr16
hlt
xchg
inc
jg
xor
fildl
insb
lods
pop
cltd
push
loop
pop
or
sbb
or
dec
aaa
and
paddq
mov
cmp
mov
fwait
das
enter
insl
in
fdivrs
ljmp
imul
ljmp
mov
xlat
xor
sbb
movsb
aas
adc
inc
or
sbb
jmp
mov
xor
enter
std
int3
negb
cmp
andl
iret
lea
mov
and
es
xor
jb
jae
adc
pop
frstor
mov
jne
add
imul
add
mov
pop
push
mov
leave
jae
inc
adc
scas
push
jp
and
ja
pcmpeqd
jno
mulb
jo
fistpl
sti
mov
arpl
imul
mov
rcl
or
inc
add
xchg
test
in
add
pushf
int
mov
dec
mov
call
pusha
or
jp
mov
xchg
cld
repz
sub
jne
mov
les
cs
loope
sbb
adc
lods
mov
stos
call
popf
enter
sbb
dec
jbe
inc
and
jmp
sub
loope
bnd
pushf
mov
sub
out
xor
mov
ja
cmc
mov
xchg
jo
mov
inc
hlt
into
cltd
sahf
sbb
into
or
inc
out
dec
sahf
orl
movsb
lcall
pop
popf
mov
aaa
pusha
inc
xchg
repz
ret
iret
test
rol
xor
mov
xchg
cmc
iret
in
bound
fisubs
leave
or
pop
adc
xlat
movsb
xor
mov
dec
pop
adc
add
ds
shrl
popa
mov
push
and
adc
outsl
repnz
ss
mov
inc
rcrl
imul
xor
jecxz
out
mov
xor
iret
cld
fadd
xlat
mov
sbb
inc
lods
loop
lcall
or
fiadds
movsl
je
scas
fs
push
mov
fildl
push
lds
insl
faddl
jne
jns
jo
lods
dec
jmp
pop
push
ss
js
sbb
mov
push
inc
sub
mov
and
cmp
mov
ret
cs
pop
stos
shll
and
pop
cmp
imul
insl
lods
test
sub
sub
dec
mov
in
sbbb
and
ret
loopne
xor
scas
add
push
cmpsl
sub
inc
ret
popf
call
insl
lods
sbb
mov
adc
adc
lods
mov
fmull
mov
xor
inc
xchg
or
inc
mov
add
push
faddl
jnp
xchg
adc
ljmp
out
or
stc
scas
sub
push
xchg
test
es
dec
fwait
xor
inc
ret
hlt
ja
mov
insl
fldz
nop/reserved
out
test
push
lds
test
in
outsb
neg
dec
inc
repnz
fnstenv
in
dec
jl
xchg
and
mov
mov
enter
neg
jmp
insl
pop
icebp
stos
xchg
lods
mov
ret
gs
stos
repz
test
xchg
sahf
mov
mov
mov
dec
mov
adc
pop
loopne
or
imul
push
xchg
mov
int3
andb
loop
mov
pop
or
dec
cli
inc
inc
insb
xchg
inc
sbb
daa
das
push
and
sbbl
scas
divb
je
mov
dec
inc
add
and
aas
cs
jecxz
adc
in
stc
mov
push
jns
inc
scas
test
push
imul
dec
pop
movsb
sbb
adc
xor
inc
out
xchg
shll
jae
in
jge
cwtl
test
test
and
bnd
int3
dec
jecxz
icebp
mov
xlat
xchg
jnp
jne
mov
jecxz
xchg
mov
orl
test
icebp
dec
divb
cmc
lods
scas
aas
sub
call
push
hlt
popa
xchg
and
mov
stos
dec
mov
pop
cmp
mov
mov
xor
push
fcmove
repnz
test
push
fisubs
out
mov
push
xor
xchg
aam
or
pop
pop
daa
insl
cld
outsl
das
in
pushl
enter
das
cmp
and
cmp
mov
leave
jae
fs
jb
repnz
adc
dec
sub
push
push
imul
data16
gs
addl
stc
bound
cmp
add
or
pop
mov
jnp
orb
xor
mov
jnp
test
pusha
enter
aaa
sti
push
rolb
jp
js
rol
jb
push
pop
lea
jge
andb
int
ss
pushf
and
adc
mov
dec
stos
jecxz
jg
dec
out
imul
xor
pop
fmuls
xor
jecxz
iret
pusha
pop
cmc
movsb
ss
addr16
or
xchg
cmc
sub
jl
ja
xchg
push
push
in
lret
push
push
inc
add
pop
icebp
jae
sub
enter
mov
icebp
xlat
data16
orb
fdiv
sarb
mov
push
push
inc
shrl
and
shrl
nop
or
sub
out
loope
lcall
lahf
aas
sbb
cld
mul
loop
push
jbe
js
lods
in
rorb
into
in
xor
movsl
xchg
pop
dec
aaa
movsl
das
jae
nop
cmp
xor
mov
stc
mov
scas
xlat
gs
mov
xchg
push
push
out
mov
scas
cmp
sbb
sub
fs
cmp
out
scas
orb
xchg
cwtl
sahf
xlat
mov
mov
mov
std
shlb
adc
push
jp
pop
ficoms
icebp
jnp
mov
cs
orb
jne
leave
test
fldl2e
lret
iret
loop
mov
pushf
pop
fcoml
push
into
iret
dec
loopne
adc
inc
sahf
mov
fs
or
sub
jl
negl
add
xor
scas
or
scas
les
ja
hlt
adc
and
or
ret
aam
popf
xchg
popa
aad
nop
dec
dec
pop
out
imul
outsl
sbb
test
out
mov
xchg
ret
push
gs
sub
pusha
into
cmc
add
lcall
mov
xchg
lods
imul
dec
add
dec
imul
or
shrb
lret
movsl
lods
add
cmpsb
cmp
xchg
inc
lock
insb
mov
cmp
inc
cmp
sahf
and
inc
in
in
shl
inc
lahf
mov
push
push
leave
cmpb
jo
pop
popf
repnz
arpl
pop
mov
rcrl
lret
jge
adc
in
jecxz
inc
push
shlb
lock
inc
outsb
jmp
cmp
mov
jp
push
daa
testb
stc
jo
adc
push
dec
adc
sbb
push
ljmp
cmp
aaa
add
sbb
push
nop
dec
fwait
sbb
push
inc
stos
aam
jp
ret
mov
push
inc
cmp
sahf
xchg
add
fisttpll
xor
je
es
jg
rclb
sarb
fwait
aas
cs
stos
xchg
bound
shlb
inc
adc
push
jns
adc
cmc
lods
sbb
sahf
push
dec
insb
das
add
xchg
mov
dec
mul
in
mov
imul
das
mov
or
inc
insb
or
enter
mov
movsl
adc
js
jecxz
push
iret
arpl
imul
pop
test
xchg
mov
lods
in
jecxz
pushf
movsb
inc
pushf
fwait
sbb
xchg
inc
enter
or
fmuls
sub
mov
sbb
adc
lret
sub
xchg
popf
aas
divl
dec
mov
lods
rorl
mov
push
xchg
insl
bound
pop
or
push
enter
push
sbb
insl
mov
cmp
xchg
div
push
pop
xchg
mull
pop
mov
mov
idivb
popf
idiv
decl
shll
mov
sahf
mov
xchg
cmpl
jae
js
repz
unpcklps
jne
mulb
inc
and
mov
sub
in
out
cmpsb
repz
mov
imul
adc
pop
or
xor
mov
and
bnd
xlat
cmp
dec
pop
xor
push
out
in
pop
xchg
aam
mov
xor
xor
mov
jp
jnp
inc
nop
add
dec
fmulp
inc
loop
sbb
xchg
rorb
cltd
add
push
es
cli
dec
mov
push
jo
mov
lret
push
filds
out
enter
pusha
push
lea
es
nop
add
push
ds
iret
lret
or
imul
stos
ret
mov
push
pop
jne
test
inc
call
scas
inc
cmp
inc
mov
pushf
pusha
cmp
sub
jb
sub
loope
pop
xchg
adc
cmp
repnz
mov
insb
out
jmp
mov
fcmovb
js
pop
mov
push
push
sbb
adc
mov
ljmp
out
push
add
lret
xor
sub
jo
ret
mov
add
add
xor
xchg
xlat
scas
notl
push
shlb
inc
push
int
insl
mov
scas
push
mov
push
movsl
adc
mov
clc
push
pop
daa
dec
cwtl
mov
push
and
mov
mov
insl
cmp
xchg
testl
dec
lret
mov
out
sbb
repnz
cs
out
cmpsl
in
xchg
scas
imul
jo
push
lret
pop
rolb
popf
jle
xor
adc
xor
mov
xor
sbb
add
in
xor
mov
jmp
inc
or
cmpsb
pop
dec
inc
mov
scas
fs
mov
rcll
inc
ror
shrb
js
ss
bound
cmp
out
and
cmpsl
jns
mov
sub
dec
shrb
jbe
xorl
gs
xor
and
pushf
pop
fildl
and
xorb
negb
rclb
adc
inc
lret
aam
inc
mov
sti
cli
mov
add
ss
xlat
mov
in
sub
imul
mov
mov
add
mov
mov
and
cmp
outsb
dec
fiaddl
fisubl
sbb
fiaddl
or
clc
popf
rcll
cmp
fsincos
push
or
xchg
push
stos
shlb
xchg
and
fisubl
stc
repnz
imul
mov
xlat
push
pusha
pop
repnz
addr16
inc
push
jmp
mov
adc
outsb
fsubrl
ret
push
mov
into
daa
les
or
aas
in
or
xchg
xchg
mov
xor
mov
mov
dec
push
add
sub
xor
shlb
out
mov
pop
mov
cmp
xchg
rcrb
rcrb
xor
sub
cli
xchg
jo
inc
lret
mov
clc
pop
into
call
mov
sti
xchg
and
scas
call
adc
push
pop
jno
or
jnp
fsincos
jno
jg
daa
in
out
adc
sub
xchg
xor
push
push
or
test
pop
sub
dec
mov
add
and
mov
scas
mov
xor
cmp
push
repnz
inc
jge
lods
aaa
pop
pop
sbb
pop
mov
xchg
or
pop
dec
and
xor
push
mov
call
std
jnp
push
pop
cltd
pop
inc
jbe
or
cltd
xor
adc
test
pop
aaa
cmp
shr
pusha
pop
pop
lahf
dec
jae
xchg
add
scas
scas
loop
outsb
jnp
adc
push
add
es
daa
pop
dec
das
cmp
icebp
in
pushl
xchg
mov
mov
push
sub
cmp
cli
mov
lods
mov
lock
push
imul
iret
mov
stc
movsl
sti
pushf
test
ret
aaa
fisubrl
or
mov
lods
cmpsl
iret
rcrl
jecxz
mov
xchg
cmpsl
xchg
rorb
shrl
xchg
daa
jnp
popa
int
add
ret
lcall
aam
add
repnz
mov
inc
jno
or
mov
dec
jp
out
jle
xchg
pop
mov
mov
and
xor
lret
dec
stc
lcall
lds
xabort
negl
aaa
out
loopne
cmpsl
pop
add
dec
sbbl
jle
xor
inc
leave
cmp
pop
cli
sbb
ficoml
sub
jae
or
iret
rcl
orl
inc
aaa
and
jbe
cmc
nop
call
adc
inc
adc
rorl
rorl
fists
dec
insl
out
movsb
repz
mov
enter
addl
sub
mov
cli
mov
hlt
push
jg
es
pop
cmp
push
jecxz
xlat
dec
cmpsb
mov
pop
arpl
push
mov
js
out
sbb
and
into
lods
xor
dec
jge
mov
mov
ret
jecxz
out
sbb
pop
push
test
fwait
xor
out
test
rcrl
ja
add
lret
jle
insl
sbb
sbb
inc
ljmp
and
insb
mov
test
repz
mull
xchg
push
icebp
mov
add
pop
sti
dec
mov
xchg
and
inc
jp
outsb
dec
sbbl
push
push
jns
out
push
xchg
dec
mov
mov
cmp
repz
and
sbb
repnz
jmp
lods
cmp
and
push
pop
add
mov
lcall
push
cmpsl
popl
mov
sbb
cmc
jae
test
repnz
ljmp
test
jo
imul
mov
mov
in
and
ja
jg
pop
dec
fwait
push
pusha
fldl
lock
in
sub
jo
ret
lret
arpl
adc
mov
loope
shlb
mov
lcall
fistl
dec
xchg
lods
adcl
les
shl
xchg
mov
xchg
lock
testb
fmul
cltd
dec
add
fiadds
cmpsl
jnp
js
jns
dec
adc
leave
in
cmp
daa
icebp
jl
xor
in
fstl
icebp
and
aas
roll
cmp
pusha
adc
lret
mov
jge
test
or
mov
dec
sub
lock
test
lahf
push
cmp
cmp
push
inc
cmp
add
loopne
mov
add
push
rorb
fcmovnbe
jl
pusha
in
cwtl
sub
into
mov
addr16
lea
xchg
adc
mov
or
sub
insl
outsl
scas
ja
fnstcw
push
sarb
int3
insb
sub
out
cmp
pop
pop
in
and
xor
add
mov
and
sarl
inc
xchg
push
icebp
or
cltd
cwtl
loopne
clc
mov
mov
shll
jno
xor
out
outsb
pushf
mov
sub
das
mov
xor
push
and
xor
repnz
jge
imul
sbbl
adc
repz
inc
sti
inc
ss
cld
jne
popa
pop
and
fimull
bswap
xorl
lret
mov
adc
aad
xchg
dec
dec
rclb
dec
scas
sbb
in
adc
push
stos
fimull
dec
int3
ret
xchg
lds
adc
cmp
lods
insb
je
outsb
data16
stos
adc
or
mov
repnz
xchg
jnp
inc
in
imul
clc
dec
imul
ficompl
push
xchg
mov
sti
add
cs
stos
pusha
jnp
fcoms
fcoml
imull
lret
sub
fbstp
mov
adc
mov
pusha
jnp
and
push
insb
xchg
xor
xchg
idivb
inc
dec
xchg
lcall
fwait
pusha
andl
stos
or
jl
cmp
frstor
aaa
mov
push
je
js
jns
mov
cmpsl
xchg
gs
pop
adc
push
hlt
adc
or
push
mov
fiadds
add
jge
adc
cld
js
lods
mov
and
pop
inc
out
in
cmpl
inc
nop
add
sub
inc
sub
movsb
sbb
pop
cld
or
jle
int3
repnz
rol
rcrb
add
cmp
orl
dec
clc
stc
and
mov
adc
punpcklbw
xchg
jno
mov
insl
dec
ficoms
ja
imul
sub
and
inc
sti
add
push
sbb
inc
lods
popf
nop
fidivl
stos
push
push
repz
inc
ja
imul
call
add
test
add
aam
test
xor
mov
ja
pop
test
outsb
jnp
rclb
pop
shl
lods
mov
idivl
push
lret
stos
insl
mov
dec
pushf
imul
lods
test
in
ret
xchg
push
xchg
mov
sub
lcall
mov
int
sbb
mov
xor
or
xor
xchg
dec
push
aam
es
cmpsb
sub
cs
es
dec
test
or
add
inc
cmpsb
dec
in
int3
pop
adcl
xchg
jae
lods
xor
lods
outsl
ret
dec
and
mov
lods
mov
jmp
sub
mov
lret
dec
insl
scas
mov
mov
ljmp
repnz
adc
test
pusha
cmp
lcall
outsl
xor
mov
int3
jbe
inc
outsl
lods
jbe
loop
int
xor
pusha
mul
dec
and
pop
fldt
test
lock
push
out
inc
dec
and
popf
push
dec
mov
adc
xor
test
pop
mov
pop
das
scas
sbb
lcall
jecxz
rcll
test
dec
mov
sub
xchg
and
psllq
rol
jge
sub
shrl
out
inc
test
sbb
call
fistps
subb
int3
mov
mov
inc
adc
test
xlat
rclb
imul
inc
pop
or
mov
jae
in
push
sbb
push
pop
pop
pop
inc
clc
dec
inc
sbb
jb
push
out
dec
rorl
or
jne
push
inc
iret
cmp
adc
das
dec
jnp
xchg
adc
repz
sub
sbb
mov
out
add
lock
inc
mov
sub
adc
gs
pop
pop
jb
andl
push
sub
or
jl
push
std
int3
xorl
mov
arpl
repnz
mov
gs
pop
and
es
outsb
cmp
fwait
push
sub
daa
sarl
test
mov
out
ja
into
int
mov
in
add
jl
std
cmc
movb
and
cmpl
xchg
lods
sub
inc
aas
loope
push
sub
aad
pusha
push
jecxz
mov
mov
daa
lods
inc
outsl
in
sbb
mov
xchg
cmp
lea
cs
xor
out
scas
mov
data16
xchg
or
xlat
cmpsb
movsb
inc
mov
pop
dec
insb
inc
dec
mov
xchg
mov
fwait
call
xor
cwtl
xchg
mov
je
mov
iret
dec
leave
mov
jg
push
jl
add
mov
andl
mov
outsb
lea
movsb
outsb
mov
push
loopne
aaa
inc
sub
shlb
in
movsl
mov
push
jb
add
inc
addl
int3
insl
into
or
cmp
mov
jbe
les
push
mov
pop
in
mov
pop
insl
or
adc
push
xor
push
movsb
loop
stos
add
idivb
mov
daa
mov
inc
pop
mov
dec
iret
lret
daa
insb
insl
mov
int
iret
bound
imulb
in
sbb
push
out
push
xchg
push
pop
push
div
cmpsl
lds
fldenv
es
hlt
push
adc
outsb
push
dec
inc
test
push
mov
pop
push
jmp
popf
lods
push
mov
jno
dec
cmp
les
cmpsl
repz
dec
rclb
sbb
cli
mov
cmpsl
inc
and
xor
ficoml
push
out
and
out
rcrb
jl
xor
cmp
sbb
cmp
decb
jle
lea
cmpsb
xchg
push
mov
pop
add
cmp
lret
mov
xchg
xor
cmp
inc
in
orl
mov
enter
lahf
in
xor
imul
xlat
xor
xchg
add
arpl
cmp
dec
dec
aas
and
test
dec
rclb
lods
xchg
jnp
rorb
xchg
add
mov
bound
mov
jle
nop
sbb
mov
fwait
aam
mov
sbb
insl
notb
and
jmp
sbbb
mov
sbb
cmpl
or
wbinvd
outsb
sahf
mov
jne
subl
loop
jae
or
das
mov
ljmp
lods
jp
mov
xchg
sbb
ss
push
cmp
jecxz
mov
jmp
test
mov
push
hlt
repz
outsb
imul
rolb
jnp
shl
xor
data16
jb
mov
xchg
mov
cld
mov
std
ss
int3
xchg
push
sbb
mov
sbb
pop
addb
fcomip
mov
ret
mov
clc
mov
xchg
inc
shrb
test
sub
cltd
cmc
cmpsl
add
fistpl
rorb
dec
xchg
rorb
push
rolb
mov
stc
adc
mov
adc
ficoms
xchg
popf
sbb
lods
mov
xor
ret
addr16
out
xchg
rolb
ret
andb
pushf
push
xor
adcl
das
in
mov
push
fs
clc
js
or
test
jp
mov
pop
push
scas
cs
or
hlt
push
or
xor
push
sahf
lods
leave
mov
add
sahf
mov
mov
call
leave
jbe
xor
cmp
iret
cmp
mov
repnz
fprem1
imulb
dec
mov
rcll
mov
ret
inc
stos
mov
subl
jecxz
fisubl
aaa
iret
add
shrb
outsl
xchg
cli
add
clc
xchg
push
mov
adc
mov
mov
pop
pop
shll
out
ds
cli
and
popa
sub
sbb
add
insl
mov
sbb
add
dec
fdivl
adc
cmp
incb
icebp
or
jno
or
push
test
push
pusha
add
push
adc
jmp
cmpsl
cmp
dec
inc
lret
lahf
stos
imul
push
cmp
dec
int3
pop
repnz
aad
pushf
inc
jae
cmp
and
sub
push
addr16
xchg
inc
mov
nop
adc
clc
sub
mov
mov
mov
jne
cmc
add
in
enter
das
add
nop
in
cltd
in
pop
jae
jmp
lcall
mov
inc
loop
or
js
cld
je
add
jmp
jmp
filds
jmp
mov
inc
aas
and
cmpsb
jg
add
ficomps
inc
cwtl
mov
rol
mov
push
dec
int3
mov
std
mov
sub
sar
fcmovb
cmp
inc
es
adc
orl
jecxz
lods
hlt
mov
jne
in
push
stos
ss
mov
loope
les
lret
mov
xchg
fistpll
call
push
lock
sub
mov
fimull
xlat
mov
imul
loop
mov
je
loope
or
add
mov
loopne
mov
adc
sub
pop
pop
adc
jecxz
faddl
pusha
jbe
lock
or
jge
scas
test
push
cwtl
pusha
pop
fs
mov
aam
popa
jbe
jno
inc
lahf
jecxz
lods
lcall
jg
sbb
inc
or
push
pop
daa
adcl
inc
xor
scas
mov
push
pop
js
add
in
add
rorb
pop
mov
sbb
rol
int3
inc
cwtl
test
mov
imul
cmpl
jns,pt
push
jae
test
push
in
xor
jl
push
movsb
mov
cmp
push
cltd
fwait
add
and
dec
and
stos
into
inc
inc
xlat
inc
fnsave
mov
in
mov
sub
pop
aad
and
pop
jmp
fadd
sub
jb
xchg
mov
dec
xchg
repz
mov
xor
ret
bound
mov
jmp
sbb
aaa
fwait
mov
aaa
popf
es
push
call
cmp
inc
mov
or
mov
push
xor
cmp
notb
mov
sbb
das
sbb
stc
xchg
sub
add
in
add
add
incl
push
push
adc
xchg
xor
ret
xchg
add
in
and
jecxz
repnz
ror
nop
xor
fadds
sbb
or
leave
stos
sahf
cmp
sbbl
cmpsl
pop
add
outsb
movsbl
mov
jae
push
lret
scas
cmp
adc
and
fidivl
sub
xchg
in
pop
ds
cmc
andl
cltd
loop
loopne
or
arpl
jecxz
and
pop
andl
jns
into
pop
pop
test
std
xchg
inc
icebp
or
pusha
mov
insl
subl
in
push
xor
mov
or
jb
mov
jge
loop
clc
ja
sahf
fdivrs
outsl
xor
popf
jl
shl
pop
mov
cmp
mov
sub
xchg
dec
jno
movsb
sbb
push
xlat
mov
adc
bnd
aaa
and
mov
addr16
jp
sbb
imul
scas
jge
loopne
cmp
jno
mov
jbe
jbe
lret
adc
sub
dec
fisubrs
sbb
mov
cmp
movsl
dec
mov
jb
mov
lcall
scas
lods
lret
adc
scas
addl
lcall
adcl
cmc
xchg
jo
mulb
dec
inc
cltd
jbe
in
push
sub
jge
cmpsb
movsl
stc
pop
add
jle
jecxz
daa
mov
mov
inc
and
pop
cmp
adc
repz
cmp
lock
add
scas
mov
loopne
or
cmpsb
mov
or
dec
or
cmpsb
pop
fsubrl
ret
pushf
xor
mov
mov
je
scas
fidivrs
cmp
pop
out
sub
mov
mov
pop
in
pop
sbb
cmp
pop
adc
xor
mov
jmp
push
adc
fimull
pop
call
ret
fidivs
lcall
outsl
dec
sub
fisubs
lods
mov
loopne
xchg
adc
cwtl
repz
xchg
inc
and
or
shll
ret
in
mov
dec
inc
test
ret
scas
les
shrl
out
js
push
mov
pop
insb
xor
and
daa
lcall
in
mov
mov
inc
mov
push
mov
lods
mov
test
sarl
jno
leave
mov
stc
sbbb
jle
insl
decb
pusha
outsl
out
add
stos
fwait
dec
push
mov
fwait
loope
rolb
lret
adc
adc
in
xchg
stos
cld
xorl
push
ds
mulb
mov
or
or
xor
cmp
jne
es
std
es
mov
scas
add
mov
addr16
push
mov
bound
sbb
push
sbb
int
sahf
mov
test
ficompl
push
loopne
xchg
imul
add
sub
loopne
xchg
filds
mov
enter
xchg
jno
fisubl
cmp
push
sbb
ds
sti
mov
cmp
push
insl
push
cwtl
add
mov
pop
iret
mov
stc
inc
sub
adc
inc
sarl
jbe
jle
xorb
les
mov
cli
sub
pop
push
xor
pop
mov
sbb
out
testl
dec
add
xchg
test
ss
fdivs
hlt
je
aaa
mov
jne
cld
into
pushf
cld
outsb
repz
push
dec
sub
mov
jbe
push
pop
and
jge
push
bound
cld
imul
idivl
mov
mov
out
js
scas
cmp
in
mov
push
mov
test
shl
jnp
push
mov
je
cwtl
mov
daa
lods
mov
push
lods
loopne
icebp
fwait
rorb
xchg
enter
mov
ljmp
cld
or
fstpt
sbb
lret
out
js
popf
inc
int3
mov
add
push
or
in
outsb
dec
movsl
sub
mov
outsb
adc
xchg
jecxz
xor
mov
ficomps
ljmp
in
cmp
lods
movsl
or
aaa
push
shl
push
inc
clc
inc
inc
jne
imul
xor
cmpsb
pop
scas
dec
mov
lods
jmp
lret
jns
pop
lahf
sbb
pop
pusha
jne
sbb
rcrb
out
dec
jecxz
lock
enter
adc
testb
cld
in
pop
icebp
int
dec
imul
mov
in
imul
push
add
mov
xor
adc
out
cmp
shrl
xchg
push
inc
mov
test
sub
fsubrl
jo
fprem1
test
addl
loopne
enter
in
mov
hlt
sbb
sub
or
push
cmpsb
push
ljmp
int
xchg
in
sti
test
push
ljmp
mov
out
jmp
and
inc
fcmovnb
pop
fists
icebp
icebp
dec
mov
enter
cli
adc
mov
push
mov
dec
lahf
outsl
inc
out
push
stos
bound
loop
add
jns
les
cwtl
movsl
cwtl
imul
xor
inc
and
adc
sbb
subl
mov
or
popa
mov
leave
ss
enter
jl
mov
mov
push
sarb
cmpsb
insl
jne
repnz
cmp
mov
fsubs
and
movsl
jmp
add
sbb
mov
arpl
flds
push
scas
adc
fildll
lock
mov
neg
inc
and
adc
cmp
aas
into
mov
inc
fsubrl
ficoms
mov
xlat
and
ficoml
and
icebp
sub
fmuls
xorl
mov
push
or
mov
ds
jae
mov
gs
lahf
fwait
repnz
lahf
mov
out
sub
xor
xor
jae
scas
into
sbb
fistl
in
jg
cmp
data16
faddl
test
adcb
push
shl
cli
std
aas
add
in
or
mov
sub
mov
sub
cmp
in
dec
test
into
jb
dec
push
mov
inc
mov
in
mov
push
pop
xor
lock
xchg
enter
or
call
icebp
iret
cmp
cmp
jae
pop
mov
daa
dec
cmc
sbb
ret
cltd
pop
bswap
das
mov
js
movsb
dec
sbb
psubusw
xor
gs
jnp
ror
xchg
cmpsl
jbe
adc
or
dec
or
aaa
xchg
fisubs
xchg
xor
inc
or
add
pop
ja
out
pop
loop
mov
inc
sbb
inc
nop
mov
jmp
loope
adc
mov
cwtl
and
jge
sub
je
loopne
and
inc
stos
movsb
add
das
mov
sbb
mov
andl
hlt
pushf
adc
repnz
mov
sub
jg
rcl
adc
gs
xor
and
fcoms
add
inc
xor
ss
cmp
insb
sbb
bound
sub
ss
movsl
add
in
or
dec
mov
repz
aad
hlt
rsqrtps
mov
addr16
inc
fimuls
adc
dec
push
into
jb
call
xchg
andl
ljmp
mov
fcmovnb
in
stos
cmp
jge
sub
addr16
stos
fisubrs
shl
add
lret
jle
xor
xchg
inc
imul
and
add
xlat
js
mov
sahf
pop
adc
cmp
dec
dec
loope
mov
fwait
and
sbb
int3
jno
push
cld
popf
cmp
fcom
jmp
xor
es
mov
pushf
ficoml
cmp
mov
jo
mov
push
mov
sub
add
out
decl
jp
mov
xchg
daa
inc
adc
fs
mov
mov
xor
nop
or
sti
aaa
inc
xchg
lcall
xor
cmp
nop
xstore-rng
cmpsl
inc
push
mov
sub
andb
psubq
jb
inc
ficompl
cmp
clc
push
and
and
inc
add
dec
dec
dec
cmc
ss
adc
fadds
add
fnstenv
aaa
fnstenv
xchg
sbb
cmp
in
adc
out
mov
jmp
add
mov
xchg
cwtl
mov
test
shrl
add
incb
fnstcw
push
dec
daa
xor
in
mov
mov
and
inc
jnp,pn
push
hlt
aad
in
bound
mov
sbbb
loope
xor
nop
xchg
cmp
cmovo
lods
and
das
dec
unpckhps
nop
xchg
repnz
add
sub
imul
popf
in
shr
lahf
out
mov
jmp
faddl
mov
push
mov
in
xchg
jb
aam
add
cmp
sub
call
movb
sub
jmp
jmp
inc
or
sbb
mov
cmc
or
fs
sbb
leave
pop
sbb
bound
mov
sub
pop
inc
mov
mov
add
outsl
jne
data16
dec
aad
mov
negl
cmp
jge
sbb
xlat
jne
idivl
stc
jbe
cmp
orl
pop
ret
gs
xor
push
add
inc
and
jbe
es
insl
es
subl
push
xlat
mov
out
pop
sarl
outsl
lahf
ljmp
pushf
push
loop
xchg
inc
movsl
mov
xor
pop
enter
inc
cmpsl
xchg
insb
and
imull
dec
mov
loope
outsb
xchg
xor
in
adc
pop
lahf
sbb
or
xor
inc
loop
adc
cmp
lods
stc
cld
pop
in
push
fisttps
lahf
cltd
push
frstor
hlt
xor
or
nop
push
or
dec
add
fisttpll
inc
mov
dec
arpl
pop
xchg
adc
mov
das
jnp
pop
fdivrs
jbe
aam
pop
lahf
jmp
pop
push
add
nop
call
imul
out
int
ljmp
pusha
sub
in
mov
push
and
daa
aam
mov
and
out
cmp
popa
loopne
mov
scas
popa
loop
push
mov
lods
mov
rcrb
adc
inc
add
pusha
pushf
daa
push
mov
mov
or
mov
insb
xor
mov
xor
cmpsl
sbb
clc
fcmovnb
inc
jle
ret
sbb
pop
pop
and
push
aam
push
cld
popf
cmp
pop
push
cmp
rep
lret
xor
divl
dec
mov
adc
ss
mov
push
mov
icebp
jns
push
ret
fsubs
mov
add
xlat
lcall
add
in
dec
inc
aad
dec
jle
sbb
jnp
addr16
cmp
and
sbb
sub
ficoms
dec
sbb
push
out
test
pop
adc
adc
xchg
mov
add
xchg
xor
mov
andb
push
jb
dec
pop
stos
dec
in
pop
data16
dec
sti
cmpsl
scas
mov
cmp
cltd
sbb
push
push
xchg
fiaddl
icebp
call
daa
movsl
push
xchg
inc
push
movsl
jg
mov
cmp
loopne
loop
mov
and
dec
mov
adc
sub
push
ss
push
aaa
inc
inc
push
dec
mov
les
pop
inc
fists
out
in
add
addr16
adc
loop
cmc
das
sti
ljmp
call
jne
ficoml
imul
dec
xchg
sub
xchg
popf
jnp
das
js
mov
cmpb
arpl
xor
or
adc
sub
push
cwtl
bound
mov
ja
push
jae
lret
inc
rorl
addl
inc
sub
movb
es
in
cpuid
loope
iret
int
jb
fdivrl
sub
imul
xor
mov
add
jo
jmp
aaa
push
jnp
fucomp
sub
sub
int
cmc
ret
inc
xchg
in
or
mov
addl
dec
push
aam
cwtl
mov
data16
pop
mov
xchg
jns
cmp
mov
dec
xchg
shlb
or
sub
out
lret
call
sub
jl
cmp
push
dec
and
sub
xchg
aad
mov
sti
cmp
loopne
add
jb
into
sbb
in
ljmp
movsb
int
lods
aaa
insb
fnstcw
fisttpll
mov
les
and
add
loope
nop
pop
ficomps
mov
dec
in
gs
push
sub
subb
aaa
or
mov
out
or
popf
adc
aas
out
mov
mov
inc
test
mov
je
mov
shlb
les
ret
popa
imul
and
mov
mov
dec
lahf
cmc
shrl
lcall
fisubl
and
cmp
mov
mov
mov
std
cmp
or
mov
sub
push
sub
push
loope
adc
lock
and
mov
shll
out
jg
sbb
jb
jne
dec
jo
movsl
fldl
int
les
pushf
outsl
jbe
imul
adc
shrb
xchg
inc
sub
and
repnz
mov
pop
or
mov
loopne
ret
lret
and
out
and
fnsave
xor
and
cmp
lods
fwait
cmp
sub
sub
mov
adc
inc
idivl
dec
pushf
mov
dec
sub
pusha
loop
or
push
mov
mov
jo
addl
mov
jp
je
dec
cld
xor
decl
movsl
pop
leave
xchg
inc
insl
push
scas
or
adc
jp
stc
add
imul
push
loop
out
rcrl
call
repnz
push
jp
cli
adc
sbb
mov
jo
pushf
xchg
fimull
xchg
insb
dec
notl
xor
sbb
rorb
out
arpl
mov
cmp
mov
pop
jge
sbbl
cld
in
pushf
xor
push
lods
push
dec
xor
xor
or
mov
scas
ja
movsb
mov
mov
sbb
lret
aad
jae
mov
mov
out
loopne
sbb
push
fs
stos
idivb
xchg
pop
xlat
sbb
enter
add
mov
test
and
jecxz
jge
mov
mov
jnp
decb
mov
cli
fisubrl
repnz
fsubl
or
mov
mov
sbb
push
cmp
mov
push
cmp
mov
or
bound
lods
lods
inc
fwait
xor
inc
jb
dec
jb
stc
cmp
rol
test
jmp
outsl
and
imul
add
lods
push
leave
jno
xlat
imul
cmp
xor
xor
data16
xor
pop
std
mov
repnz
cmc
pop
lods
mov
fmuls
ljmp
jns
out
push
cmp
jnp
nop
ss
mov
ljmp
and
dec
pop
fdivl
into
pop
imul
mov
lea
and
ljmp
jb
sbb
sbb
fmulp
mov
inc
dec
fdivrs
shlb
lret
sub
and
cmpsb
pop
and
mov
test
lret
cmp
std
sub
mov
mov
jo
inc
shl
jae
aaa
lea
fisttps
sub
xchg
or
sbb
out
out
xchg
xor
scas
push
pop
jmp
pop
aas
mov
mov
sub
les
or
and
adc
mov
cmp
ja
jae
xor
shrl
push
and
or
sbb
push
jbe
frndint
ja
cmp
ds
sbb
bound
andb
xor
push
sti
ljmp
fistl
lret
push
xchg
arpl
in
or
inc
sbb
mov
xor
xor
aas
adc
fs
add
xor
ret
xor
pop
sub
int
ficoml
ds
dec
jb
andl
popf
shrl
xchg
inc
mov
add
in
insl
leave
mov
dec
lahf
jae
scas
enter
mov
cmpsl
pop
or
fistps
inc
cmp
or
out
pusha
add
shrb
or
push
dec
dec
mov
in
jg
hlt
ss
nop
or
lea
cmp
shlb
mov
sbb
mov
cmp
inc
mov
into
push
mov
frstor
mov
movsl
mov
mov
nop
inc
sahf
add
pop
jb
xor
jg
lock
out
negl
insb
movsl
mov
dec
sub
pop
cmpsb
inc
ja
push
fisttps
movsl
mov
mov
js
scas
cld
or
dec
mov
mov
clc
and
fiadds
push
pop
sbb
inc
gs
sub
mov
outsl
test
lret
mov
mov
dec
jno
push
mov
dec
popa
movsb
scas
inc
jmp
repz
scas
imul
sub
into
and
andb
sbb
dec
rolb
lea
cld
mov
dec
adc
mov
push
inc
rorb
aaa
mov
ret
outsb
dec
push
add
push
gs
xchg
push
mov
sub
xlat
imul
imul
xor
or
sahf
inc
jnp
jns
jns,pn
jo
stc
inc
cmc
gs
out
fiaddl
sbb
xchg
stos
int3
fdivl
lret
add
cmp
sbb
bnd
adcb
ljmp
out
cmp
sti
or
ficoms
pop
out
arpl
cmp
fisubs
mov
jae
dec
add
mov
jl
popf
gs
jo
imul
scas
mov
cmp
mov
push
inc
sarl
enter
pop
cmp
sbb
dec
movsl
mov
ret
fistpl
pop
fdivrl
push
out
adc
fs
cs
cmp
das
movsl
loop
mov
popl
xchg
hlt
add
sbb
stos
das
lea
pushf
loop
iret
push
dec
imul
push
fs
pop
mov
add
dec
xchg
jae
sub
or
and
jne
xchg
stos
movsb
imul
jp
mov
in
jecxz
mov
xor
stc
inc
cmpsb
je
xlat
inc
inc
ret
xchg
cmpsb
push
xchg
jnp
xchg
cld
sub
mov
push
xchg
xor
cmp
nop
push
xchg
jne
jmp
lcall
xchg
xchg
xor
cmc
sub
mov
int3
xor
loope
inc
push
mov
imul
xor
adc
pop
out
sbb
loope
push
pmaxub
add
adc
je
stc
push
stos
in
adc
mov
cmp
sub
js
cmp
jl
xchg
or
adc
pop
inc
pop
in
mov
xchg
jle
leave
std
push
jge
in
pop
mov
inc
es
and
insl
sbb
or
jl
shl
mov
rorb
or
lahf
nop
hlt
rorb
xchg
es
mov
mov
popf
les
mov
jb
sbb
pop
lods
popa
inc
fimull
cmp
xchg
xor
pop
push
nop
mov
push
xchg
add
lods
call
dec
xchg
mov
cmpsb
cmpl
xchg
sahf
repz
cmp
test
xorb
xor
sub
rcr
test
mov
sbb
cmp
sub
mov
ficoml
or
push
jb
sub
sub
fwait
pop
jns
inc
adcb
mov
repz
jp
mov
out
cmc
jns
and
xor
adc
sbb
ljmp
push
dec
pop
loopne
lcall
pop
enter
ret
mov
pop
jbe
xor
mov
popf
pop
dec
jg
pushf
xor
mov
or
push
addr16
dec
imul
inc
sbb
mov
dec
and
xchg
gs
sub
or
push
cs
push
sbb
pop
repz
and
cli
testl
mov
push
mov
mov
stos
mov
rorl
popf
xor
shl
jg
out
fwait
out
rolb
mov
mov
cmp
jo
push
lds
fsubl
fnstcw
sub
adc
jmpw
jb
push
out
push
xchg
cltd
or
js
lret
mov
das
cmp
test
jb
stos
adc
std
dec
scas
jg
insb
sub
cli
popf
sbb
iret
pop
push
popf
xchg
mov
mov
stc
fistl
xor
pop
mov
rcll
jge
ljmp
xchg
pop
out
mov
or
mov
push
push
outsl
dec
call
das
mov
pop
mov
es
push
test
iret
xchg
leave
jbe
xor
outsl
shlb
enter
jb
add
out
outsl
push
xchg
enter
push
fistl
pop
ret
mov
pushf
or
push
das
or
cld
out
lds
xor
sbb
movsb
jmp
adc
pop
scas
mov
push
fstpl
cli
popf
enter
cmp
sbb
fnsave
xor
xor
pop
dec
loopne
and
dec
add
fldt
xchg
aam
mov
or
mov
inc
add
pop
jge
sbb
xchg
mov
lret
cwtl
mov
in
jmp
outsl
pop
inc
shrd
insb
pop
xchg
sarl
notl
aam
inc
fbld
ret
mov
dec
jle
cmp
outsl
imul
mov
sarb
movsl
jo
and
mov
inc
int
mov
test
dec
dec
popf
cmp
in
lock
inc
add
scas
pusha
jne
psraw
push
cmp
or
movsl
xor
jge
xchg
xor
sahf
pop
mov
data16
jle
loope
pop
cmp
dec
and
out
mov
pop
and
push
jbe
bound
out
xchg
sub
mov
ja
cltd
or
insl
lea
mov
ja
or
add
push
addl
cwtl
int
aaa
cld
cmpsb
mov
aaa
imul
cmp
shrl
cwtl
jmp
cli
and
and
popf
loope
enter
cmp
jno
sbb
fisttpll
clc
or
sahf
push
addr16
cmp
inc
jmp
pop
insl
adc
push
jno
cwtl
cli
and
ss
loope
loopne
insb
shrb
stc
jle
xor
mov
dec
popa
sub
mov
movsb
adc
pop
push
pop
mov
cmp
rclb
test
std
lcall
xor
int3
push
inc
into
movsb
sbb
push
lcall
or
pusha
icebp
repz
jle
inc
ret
movsl
in
dec
fmull
aaa
arpl
je
lret
cmp
inc
nop
mov
xchg
cwtl
mov
push
cs
mov
cmp
data16
scas
mov
out
aam
mov
cmp
pop
or
gs
loope
xor
sbb
out
outsl
add
pop
fsts
push
lds
std
insl
mov
addb
mov
mov
rcll
mov
sbb
movb
stc
fistpll
and
dec
and
pop
stos
scas
out
push
pop
xor
mov
out
loopne
aaa
xor
lret
add
xchg
gs
xchg
movsb
pushw
imul
and
fisubs
mov
ret
hlt
test
or
out
cmp
fsts
pop
cmp
add
insl
push
or
sbb
sbb
mov
ja
arpl
fnstsw
test
gs
xchg
iret
jle
sbb
adc
arpl
mov
psubusb
inc
xchg
fcomi
mov
es
ljmp
add
add
mov
mov
lock
xlat
jne
roll
cmpsb
gs
mov
sub
push
hlt
jne
jmp
mov
stos
or
roll
mov
mov
adc
sbb
push
and
aad
add
inc
insb
movd
push
ds
or
fs
scas
sbb
cmp
scas
orl
and
idiv
andb
inc
cwtl
mov
mov
add
pop
mov
push
fidivrs
aas
repz
loop
dec
push
jno
dec
pop
scas
stc
enter
pusha
xchg
pop
enter
gs
xor
into
push
cmp
pushf
arpl
popf
dec
inc
xor
idivb
call
inc
cwtl
insl
call
fstps
pop
orb
fadd
jbe
inc
jno
out
in
sub
mov
add
cmp
dec
movsb
jne
inc
fcompl
pushf
sti
mov
js
mov
ficoms
inc
push
loopne
pop
mov
aas
pop
in
out
sub
lahf
cwtl
and
xchg
mov
imul
xchg
mov
lds
mov
in
clc
add
insb
or
inc
adc
ja
mov
sbb
xor
xchg
cmp
imul
lock
fstps
cmpsb
jl
mov
or
or
push
mov
xchg
jns
lods
cld
cltd
int3
dec
ror
or
idivl
xchg
movl
or
stos
sbb
cmpsb
imul
outsb
adc
adc
in
pusha
push
mov
sbb
push
fmul
mov
cli
lods
cmp
jmp
mov
push
ljmp
jns
pop
mov
jmp
pop
add
dec
jle
les
insb
pop
mov
push
rclb
fdiv
insl
movsl
push
push
out
cli
mov
das
xor
shll
sbb
in
and
mov
inc
jmp
sar
mov
loope
stc
lret
push
outsl
adc
sbbl
pusha
roll
mov
rcl
les
xor
pop
pop
movsl
pop
lea
inc
imul
push
aam
jb
mov
lcall
fs
and
pop
rcrl
scas
pusha
inc
xchg
int
push
pop
pusha
jecxz
aaa
xor
fstpl
arpl
jmp
xchg
xchg
and
jle
call
inc
inc
add
adc
sub
ret
pushf
les
aaa
in
or
push
mov
push
test
push
mov
in
out
xchg
push
mov
mov
cli
sub
inc
push
out
sub
push
or
push
in
data16
in
out
scas
sti
cwtl
fisubrs
mov
scas
mov
or
push
adc
out
arpl
add
sbb
dec
cwtl
in
xchg
dec
dec
sub
cmp
pop
sub
jp
pushf
jns
mov
sub
int3
push
cwtl
jecxz
push
sbb
xchg
sub
xchg
incb
cmpsb
sub
jl
pop
ja
nop
loope
xlat
xchg
js
rcrl
fucomp
push
cli
cmpsl
mov
fs
or
lea
pop
insl
cmp
mov
in
std
cmc
ror
shll
cwtl
inc
nop
fsubp
jle
out
push
mov
xchg
push
fildl
mov
or
mov
shlb
popa
push
rclb
and
or
aad
adc
call
xor
out
sbb
imul
das
rcrl
orl
push
pop
xchg
gs
iret
and
scas
sti
int3
jl
cld
in
pop
rcrl
push
ficompl
dec
inc
lea
fs
scas
xchg
inc
mov
fisttpl
jno
fnstenv
aas
mov
fcoms
fdivrs
notb
aam
mov
test
sub
cmpsb
das
vsqrtpd
stos
rorl
mul
mov
sub
or
sbb
xchg
arpl
mov
shlb
loope
xor
add
xchg
mov
cltd
jo
pop
rol
repz
xchg
xor
jmp
mov
aaa
out
inc
stos
lret
jno
nop
and
fstps
mov
pop
xor
xor
or
mov
dec
adc
jns,pn
and
lret
aaa
test
mov
jns
xor
ret
pop
cmp
xchg
jnp
push
enter
mov
ret
push
xor
add
aam
dec
outsl
or
and
xor
cmc
sub
mov
jns
stc
iret
and
movsb
mov
aas
jg
pop
sub
scas
cs
mov
ret
and
pop
inc
or
inc
lods
lods
mov
insl
xor
sub
or
out
mov
sbb
dec
sbbl
nop
mov
jb
and
sub
enter
rep
std
aaa
mov
lock
pop
pop
insb
outsb
loope
mov
mov
cmpsb
mov
and
lds
xor
ja
mov
mov
mov
mov
adc
test
sbb
jnp
and
jns
cmp
cwtl
xchg
outsb
mov
pop
imul
fadds
rcl
sbb
pop
fwait
aam
inc
adc
icebp
fldenv
pop
in
dec
andb
lahf
jae
xor
rolb
fwait
mov
mov
jo
sub
pusha
mov
and
das
pusha
xor
clc
push
push
fmuls
jne
mov
adc
and
sbb
sbb
cwtl
pusha
cmp
popa
mov
into
mov
ds
pop
mov
xchg
mov
push
test
je
add
outsl
mov
cmc
mov
mov
add
jno
or
stc
sbb
pusha
cs
adc
cmpsb
fidivl
das
lea
sub
ljmp
aaa
and
call
imul
xor
xchg
shr
add
sbb
sub
jb
dec
pop
loop
dec
mov
dec
pop
push
ror
jns
jno
fisubl
inc
das
mov
jle
bound
imulb
sbb
sbb
mov
inc
movsb
jnp
fidivrs
call
je
in
jle
and
adc
popa
sub
sub
dec
shlb
add
cli
push
imul
pop
inc
jo
xor
into
adc
push
daa
pop
lret
add
shll
hlt
int3
and
mov
dec
dec
imulb
push
and
mov
dec
add
xchg
xor
sbb
cmp
add
push
pop
test
pop
mov
mov
rolb
lods
xchg
out
push
mov
mov
jg
push
xchg
jle
mov
fwait
mov
das
rcrl
ret
jne
leave
lods
incb
add
dec
inc
bound
mov
lcall
orb
push
and
mov
les
sahf
xor
into
or
ljmp
data16
movsl
ret
xor
mov
in
jmp
imulb
icebp
ds
inc
xchg
iret
ret
lahf
pop
sub
test
xchg
daa
movsb
call
aaa
jecxz
mov
mov
dec
jno
daa
push
fdivp
pop
mov
into
nop
pop
push
enter
or
pop
sbb
xlat
lret
out
xor
out
adc
out
sub
push
into
daa
addb
imul
mov
mov
lcall
jl
pop
jmp
cmc
lea
lea
das
fxch
jns
mov
adc
cmp
or
inc
mov
cmpsb
push
lcall
pop
outsb
shlb
lahf
xchg
jae
pop
insl
rclb
imul
inc
cmpsb
inc
push
lcall
cltd
iret
sbb
adc
push
ret
jne
pop
cmp
into
jle
xor
lcall
pop
xor
push
pop
dec
jae
loopne
dec
jb
in
inc
mov
imul
jle
mov
daa
out
call
mov
jno
mov
sbb
cmp
in
sub
mov
arpl
movsb
and
pop
or
mov
or
jae
sbb
roll
lahf
rorb
je
loope
xchg
test
fisttpll
mov
jge
xor
sbb
ret
pop
cmpsb
adc
cmp
cwtl
outsl
xchg
mov
push
loopne
jbe
push
pop
ret
push
jecxz
mov
dec
and
popf
xchg
sbb
and
push
out
addr16
loopne
ret
popf
dec
loop
sub
sub
add
imul
mov
xchg
mul
jo
popf
adc
xor
sub
cs
jb
cmpsb
les
add
call
mov
lods
mov
mov
ss
aaa
push
adc
test
inc
sbb
xor
inc
cmp
popa
nop
and
dec
rorl
sub
sahf
fbld
xchg
push
xchg
lock
fwait
jecxz
mov
fstpl
pop
xor
lahf
and
add
imul
ret
stc
mov
stos
sbb
out
outsb
imul
add
cmp
cmp
inc
bound
lods
or
cli
shlb
std
addb
daa
or
loopne
cmpsl
stos
ret
dec
clc
out
je
mov
or
pop
les
pop
repz
adc
out
jne
aaa
mov
jl
ret
xchg
inc
jo
fnstsw
movsb
pop
lock
push
in
frstor
mov
inc
into
inc
lods
or
xor
xchg
insb
sub
test
roll
movsl
push
push
inc
fldcw
pop
sbb
std
bound
das
jbe
mov
rorl
clc
push
push
in
mov
jmp
fldl
js
insb
jne
push
test
jge
xor
test
pop
sahf
adc
inc
insl
cmp
repnz
sbb
into
lods
inc
or
daa
push
push
and
test
outsb
cmp
scas
in
enter
add
pop
das
jmp
daa
sub
fmuls
enter
leave
test
jnp
sahf
pop
add
adc
sbb
insl
sbb
cli
inc
stc
cld
in
jnp
ss
mov
out
aad
imul
mov
sub
xchg
adc
pop
testb
aam
dec
inc
and
es
sahf
xlat
or
cmp
in
inc
or
sbb
iret
sti
sbb
repz
iret
test
xchg
scas
into
cli
pop
push
add
in
int3
cmpsb
pusha
push
inc
mov
cmp
popa
jnp
hlt
xor
jl
js
push
xchg
push
sbb
sub
dec
js
mov
ljmp
popf
inc
rcrb
and
cwtl
ret
iret
inc
frstor
sbb
aam
jnp
add
sub
lcall
xor
mov
jo
int
fldln2
cwtl
pop
jne
xor
pop
inc
stc
rcr
call
leave
pop
jmp
imul
jecxz
les
fidivs
call
mov
mov
add
adc
scas
cmc
pop
jns
sbb
jp
arpl
sub
or
clc
sub
mov
fiadds
jge
shll
je
jle
sbb
inc
sub
pop
push
idiv
mov
cmpsb
popa
test
xor
and
push
mov
cmp
xor
sahf
mov
loop
pop
lods
xchg
jl
jb
or
push
or
add
test
les
mov
fildll
xchg
ds
mov
rolb
push
sbb
scas
in
aad
xchg
pop
and
movsb
imul
mov
add
push
scas
stos
push
scas
ds
mov
xchg
into
mov
sbb
cmp
pop
push
push
push
cmp
sub
push
adc
mov
cmpsl
out
and
aad
pop
outsb
jae
mov
ficomps
sbb
xchg
and
jp
lea
cli
push
outsb
and
leave
fistl
xchg
out
in
rorb
in
xor
scas
das
xor
mov
aas
fisubl
scas
je
adc
iret
ds
divb
sbb
mov
adc
cmpb
std
and
sbb
nop
stos
mov
scas
or
push
addr16
pop
mov
aad
mov
dec
push
fs
xchg
sub
filds
je
add
sbb
enter
mov
cli
test
scas
hlt
push
pop
imul
subb
cmpsl
in
arpl
and
dec
pop
out
cmpsb
popf
push
inc
icebp
push
xchg
adc
mov
loop
test
pop
in
dec
or
mov
testl
enter
mov
cmp
cmpsb
loop
xchg
xchg
insb
popa
idivb
jnp
dec
jne
push
test
andb
inc
push
jl
dec
xlat
orl
fadd
fisttpll
and
push
lds
int3
pop
sub
insb
rcr
test
cld
dec
stos
sub
and
pop
inc
popa
imull
dec
movsb
arpl
jle,pt
jl
repnz
hlt
add
fwait
lea
jg
clc
adc
jbe
xchg
jle
sub
xchg
mov
push
and
mov
mov
js
nop
gs
clc
inc
fdivrl
cwtl
ficompl
jns
cld
mov
pop
cmp
pop
test
int3
cwtl
fisubl
mull
or
or
shlb
push
push
setge
jecxz
repz
in
jne
outsb
xor
aaa
mov
in
dec
imul
out
or
scas
mov
jecxz
fstps
out
js
or
mov
xchg
xchg
hlt
jl
stos
out
out
test
cmc
mov
xor
mov
test
mov
in
in
lret
pop
mov
out
fmulp
mov
lods
scas
push
popl
subl
dec
popf
leave
push
fisubrs
cmpsb
rolb
test
adc
mov
loopne
add
sub
insb
pusha
stc
repnz
and
cmc
xchg
call
jae
push
daa
adc
xor
inc
fwait
pop
dec
loopne
daa
dec
aam
cmc
jmp
jle
imul
in
mov
xor
xchg
mov
insl
mov
or
outsl
jecxz
cmp
enter
mov
sarl
divl
rcrb
mov
lock
stos
fnstenv
insb
inc
popf
fisttpl
add
and
aaa
push
sbb
sub
pop
lock
aad
ss
cmp
push
fisttpl
mov
pop
lret
xchg
sbb
or
push
push
add
scas
fadd
adc
pusha
fst
shl
insl
mov
adc
cmc
in
mov
fsubl
sub
dec
pop
mov
fdiv
jle
or
insb
pop
cwtl
es
and
push
mov
adc
int3
cmc
push
outsb
or
aam
pop
adc
cwtl
push
inc
adc
inc
push
cmp
pop
cmc
aas
or
cld
ficoml
sbb
enter
scas
cmc
or
loop
jbe
call
test
fldcw
pop
sbb
lock
repz
cmp
sahf
ljmp
js
imulb
inc
gs
out
ds
sbb
and
stos
pop
outsl
cli
push
and
xor
mov
jne
jno
or
or
jmp
iret
int
popa
int
and
pop
lods
or
cmp
test
mov
adc
lret
add
pop
dec
pusha
sbbl
inc
rclb
sub
out
sahf
in
aas
orb
aas
or
cmpsl
sub
and
mov
repz
addb
cs
in
inc
pop
cmp
cmp
jge
imul
fbstp
and
xchg
mov
xorl
clc
ljmp
dec
pop
push
or
lcall
cmpsb
or
adc
mov
pop
cmp
cwtl
xchg
fs
movsb
xchg
popa
push
cwtl
cmc
cs
vpmaxub
repz
fildll
outsl
das
fcmovnu
push
pshufw
cmp
rcrl
mov
or
pop
ja
jns
repnz
cmc
dec
or
aaa
data16
inc
lret
cmp
push
movsl
xor
mul
in
jge
jg
mov
fsub
out
loopne
push
jnp
lds
imul
push
stc
ret
push
xchg
jae
add
pop
dec
mov
jb
mov
loopne
fcmovnu
fwait
dec
xor
std
jae
ret
insb
aaa
xchg
seto
jl
adc
mov
addb
cltd
pop
lret
sub
cmp
xchg
cs
jmp
idiv
aam
lds
and
sbb
pop
xor
mov
stc
push
dec
adc
dec
or
mov
stc
pop
test
cmpl
out
mov
in
rorb
and
rcll
imul
rcl
add
adc
mov
test
jecxz
pop
mov
inc
mov
decl
push
leave
addr16
mov
sub
mov
aad
in
enter
clc
stos
push
sbb
idivb
test
add
test
rcrl
jge
and
or
in
ljmp
daa
mov
mov
addb
cmp
or
into
cltd
and
je
jmp
subb
lea
add
xor
xchg
arpl
shll
mov
cs
rcrb
aaa
jg
in
dec
lea
sbb
and
jecxz
xchg
inc
mov
dec
mov
add
xor
pop
in
lret
cld
lcall
add
push
inc
xchg
jp
or
adc
xor
mov
mov
cmp
scas
or
push
fucomip
mov
daa
pop
mov
jp
arpl
test
sbb
aas
sub
add
pop
push
or
outsb
jp
bound
mov
shl
roll
or
xchg
xchg
or
aaa
mov
out
je
xchg
lods
xchg
pop
sub
aam
insb
out
sbb
pop
adc
cmp
pusha
arpl
xchg
insb
cmp
das
cld
mov
dec
add
inc
push
or
mov
sbb
movsl
insb
mov
ljmp
cs
cltd
pop
movsl
pop
sbb
mov
cld
cmc
xchg
and
xor
aad
xchg
pusha
pop
cmp
testb
and
mov
fisubrs
das
pop
mov
int3
jp
imul
dec
gs
sub
scas
gs
inc
sub
xchg
das
fdivs
sbb
jnp
xchg
adc
mov
out
sbb
test
jb
lds
cmpsl
shll
lahf
jno
jmp
mov
into
fwait
jle
in
lret
bswap
pop
in
push
dec
xorl
mov
lods
es
test
push
mov
popfw
xchg
mov
xchg
insb
ficomps
fcmovb
pop
bound
dec
ficoms
gs
cmpsb
mov
adc
lods
addl
scas
jae
jl
shrb
xchg
call
jo
subl
int
clc
xor
aaa
stc
mov
dec
fiadds
popf
and
imul
cmpsl
adc
ficompl
xlat
out
ficompl
shll
loopne
jecxz
lret
idivl
pop
xchg
je
icebp
scas
xor
out
sub
push
icebp
and
mov
push
pop
jecxz
out
xchg
sbb
aaa
packsswb
xlat
inc
lahf
aad
and
test
add
xchg
jb
adc
bnd
add
in
pop
pop
or
push
repz
imul
dec
mov
add
jo
addb
std
loope
loopne
jecxz
and
stc
jg
pop
jnp
sub
xchg
xlat
fsub
push
hlt
or
cmp
xchg
xchg
jae
int
cmp
add
push
jo
add
aas
mov
lcall
lods
out
cwtl
clc
or
repz
fldt
addr16
cld
mov
nop
jo
pop
mov
ljmp
adc
sbb
roll
clc
jle
loop
sbb
push
test
jl
pause
mov
xor
loope
ljmp
pop
push
mov
cld
pushf
rcrb
test
std
outsl
sub
in
incl
js
int
cmp
mov
movsb
stos
ss
aas
scas
cmp
in
add
xchg
sarl
data16
add
bound
rcrb
sbb
nop
adcb
push
xchg
dec
jp
xor
mov
je
iret
es
outsb
sbb
and
pop
jb
mov
sbb
mov
cmp
xor
sbb
in
mov
jge
mov
sub
ds
dec
dec
pushf
add
mov
dec
loope
or
add
mov
arpl
push
pop
roll
cwtl
mov
sbb
loop
and
not
and
test
mov
jne
gs
pop
leave
dec
lds
lock
addr16
xor
daa
push
inc
ss
xchg
insb
stc
sahf
hlt
sarb
add
dec
adc
dec
lahf
ljmp
inc
dec
xorb
sahf
lahf
push
mov
sbb
incl
mov
or
sti
testl
loop
dec
adcl
rep
outsl
xchg
imul
idivb
repz
xlat
inc
shrl
nop
mov
fstps
rcrl
hlt
lcall
lret
inc
sub
mov
mov
sub
orb
mov
les
adc
jp
outsb
std
shl
jns
mov
stos
push
inc
loope
jo
jle
insb
mov
outsl
and
mov
negb
jns
je
jmp
dec
fsubp
mov
lahf
gs
push
das
and
cmp
mov
jb
inc
push
ret
fistl
ljmp
and
subb
and
outsb
js
scas
js
sub
aaa
inc
fildl
arpl
cmc
inc
cwtl
repz
mov
inc
shrb
push
mov
ret
sub
loopne
ss
adc
pop
ror
fisttps
pop
fmulp
cli
sbb
jecxz
adc
ret
lds
rclb
inc
mov
gs
filds
in
call
add
pop
sub
jae
pop
jno
jnp
jae
sbb
mov
enter
es
inc
outsb
xchg
lock
xchg
mov
pusha
stos
loop
inc
mov
aad
movsl
mov
mov
push
mov
jp
pop
aas
or
add
inc
push
sbb
pop
lods
cmp
add
inc
xchg
insl
push
adc
sub
test
fisubs
and
call
inc
loop
insl
lods
sbb
popf
dec
jbe
xchg
dec
push
test
lods
add
clc
dec
sbb
pop
fs
mov
and
adc
dec
js
or
outsb
inc
xor
scas
popa
ret
nop
je
xchg
inc
outsb
outsb
adc
push
cmp
hlt
pusha
sub
push
aad
mov
or
cmpsl
xor
cltd
and
adc
out
scas
push
outsl
adc
jae
xchg
push
stos
pop
adc
add
mov
jno
cmp
mov
fdivrs
and
xor
adc
test
repnz
xchg
pushf
ror
mov
je
adc
in
jle
push
dec
mov
jecxz
test
push
mov
mov
mov
or
das
push
movsl
mov
sub
mov
test
jno
in
push
mov
pop
mov
push
lret
lret
xor
js
cmp
push
shlb
call
jecxz
stc
sarb
sub
add
dec
inc
push
push
out
lods
jp
rolb
pop
mov
sub
imul
popf
dec
int3
cmp
outsb
pop
sbb
daa
jno
fdivs
dec
jl
dec
sub
mov
sub
cmp
jno
pop
into
popf
mov
and
xor
and
adc
xchg
jg
out
dec
cltd
jnp
lods
imul
xchg
es
adc
pop
push
xchg
mov
test
insb
xor
insl
enter
inc
and
jecxz
mov
out
jg
mov
lods
sub
scas
or
sub
push
mov
stc
push
mov
outsb
jmp
adc
std
test
lea
shlb
into
mov
add
dec
scas
mov
cmp
shr
push
aad
adc
sub
fucomp
cmpsb
test
enter
popf
movb
insb
inc
bound
sub
push
inc
sbb
add
pushf
aaa
pusha
mov
or
push
in
test
xlat
pushf
xor
mov
inc
jns
jo
dec
shl
mov
push
scas
clc
cmp
loop
push
pop
es
sahf
xor
ret
in
test
repz
scas
and
xor
pop
js
mov
stc
mov
aad
sarl
fbld
add
dec
je
pop
imul
loope
jbe
movsb
sbb
lds
clc
test
pop
mov
lds
pop
pop
sar
nop
push
adc
jmp
or
adc
enter
inc
out
popa
das
jno
inc
push
and
xchg
dec
inc
push
shll
insl
push
add
cmp
xchg
xchg
jg
lods
mov
out
or
shll
idivb
push
sbb
movsl
icebp
mov
sbbb
data16
mov
aaa
imul
sbb
outsb
jg
cmpsl
xchg
pop
xchg
out
mov
and
sahf
xchg
pusha
nop
mov
es
xor
mov
scas
cli
das
movsl
loope
cmp
repnz
xor
mov
sbb
stos
adc
dec
cld
xor
fisubl
jae
cmpsl
sub
pusha
xchg
xchg
mov
sub
pop
mov
and
arpl
repnz
or
loopne
sbb
pop
fildll
jge
or
pop
and
pop
ret
mov
cmp
push
sub
test
dec
or
sub
dec
nop
loope
jb
jecxz
inc
sahf
les
outsl
inc
cmp
xor
mov
idivb
pop
ret
mov
mov
mov
mov
aam
push
pushf
xor
dec
out
push
pop
push
imul
leave
outsb
pushf
and
inc
and
hlt
in
into
sbb
inc
dec
out
pop
xor
dec
ret
xchg
mov
decl
int
xor
dec
adc
mov
out
stc
cmp
movsl
mov
push
aam
out
adc
popf
dec
or
stos
jp
out
ffreep
push
push
mov
xchg
dec
iret
cmpsb
fildl
lods
rol
lahf
movsl
fstpt
mov
dec
rclb
push
movsb
vcvtdq2pd
pop
pushf
fcmovne
adc
in
add
je
hlt
sub
loopne
rolb
mov
js
mov
push
mov
xor
cli
movsb
pop
xlat
test
aas
mov
xor
cmp
inc
pusha
pop
cmp
stos
pop
mov
daa
add
jbe
bound
pop
adc
and
fmulp
stos
xor
and
imul
pop
pop
pop
scas
mov
pop
mov
insb
push
cwtl
lods
fcompl
adc
push
cs
and
inc
pop
fistpll
test
push
inc
dec
sub
movsl
mov
cmovbe
inc
mov
lods
sbb
nop
mov
dec
or
movsb
sbb
mov
fchs
mov
cmp
in
inc
adc
ror
lcall
jae
lods
movsb
repz
clc
xchg
add
je
and
je
dec
jl
std
dec
cmpb
sbb
jle
cld
roll
daa
mov
ds
hlt
mov
sbb
into
jl
sbbb
or
out
inc
cmpsl
cld
or
xchg
or
movsl
jae
sub
shll
sbb
es
adc
loop
or
lcall
inc
testl
roll
cli
and
mov
cmc
mov
mov
sub
mov
iret
xchg
cmp
fs
dec
xor
push
mov
sub
mov
xchg
leave
jae
shl
pop
jo
imul
leave
sub
shr
pop
pop
popf
aaa
sbb
xor
pop
rep
xchg
lcall
bnd
mov
dec
imul
test
int
mov
push
cmpsl
mov
daa
inc
hlt
jp
mov
sbb
mov
jg
sahf
push
sarb
outsl
and
arpl
hlt
push
jbe
sub
cmp
fidivrs
adc
push
pop
pop
lods
js
xchg
nop
jno
addr16
inc
mov
push
mov
jp
inc
xor
adc
pop
push
jns
push
or
inc
test
scas
lret
add
nop
addr16
pop
xor
push
in
xchg
jge
cmpsl
pop
or
lods
imul
push
sub
dec
xchg
loop
pop
lret
cld
shrl
lock
mov
shlb
ljmp
cmp
dec
mov
jae
ss
fdivrl
lods
push
icebp
into
xor
das
push
in
out
or
je
loopne
dec
adc
jno
xor
pop
popf
pop
lret
dec
sbb
cld
pop
xchg
mov
cli
mov
mov
lods
jecxz
arpl
jo
mov
inc
mov
lahf
addr16
sub
mov
es
testl
lret
aas
and
fsts
push
push
rcll
mov
in
fwait
rcll
xor
mov
out
stc
clc
inc
out
das
mov
xor
aad
xchg
sti
nop
fldcw
add
xor
adc
mov
lahf
jecxz
fdivrl
imul
push
add
lcall
dec
loopne
push
push
pop
pop
hlt
sbb
aam
jo
push
loopne
icebp
push
mov
fistl
xor
jl
lret
loopne
cli
inc
outsl
cs
mov
add
and
int3
xchg
stos
incl
xchg
fistpll
adc
ss
jmp
out
cwtl
leavew
xchg
mov
out
popa
and
push
cs
popa
sti
xchg
sahf
imulb
sbb
sub
jecxz
dec
pusha
fst
fisubs
mov
and
jl
xchg
cmpsb
mov
sbb
add
push
cmp
cld
dec
xor
push
mov
push
jae
adc
in
mov
popa
stos
idivb
stos
push
mov
ja
xchg
pop
xor
inc
cwtl
push
push
nop
and
xor
adc
ss
sbb
call
add
into
lahf
add
pop
lea
sub
add
adc
cmpsb
mov
mov
push
ficoms
addb
lea
test
dec
es
sbb
push
push
mov
pop
push
xchg
add
call
mov
into
and
dec
lcall
adc
mov
pushf
test
and
mov
popf
mov
mov
mov
cmpsb
jo
push
pop
mov
lds
lods
ficoml
cmc
cmp
jp
add
push
fstpt
stos
movsl
roll
lock
pcmpeqw
aam
lcall
sbb
mov
xchg
insl
mov
pop
cwtl
jecxz
dec
dec
add
pop
mov
leave
in
lret
mov
cmp
int3
aam
mov
pop
enter
hlt
out
sub
shr
or
cmp
into
xchg
xchg
mov
insb
mov
aaa
pop
xchg
inc
cmp
icebp
hlt
push
cli
je
lods
push
ffree
cs
mov
out
pusha
pusha
aaa
cld
xchg
hlt
fcmovnu
mov
sti
add
aad
aaa
add
icebp
push
js
repnz
inc
and
inc
out
jg
dec
xor
fs
clc
lret
inc
xor
stos
dec
fdivl
inc
inc
nop
aad
adc
leave
test
imulb
pushl
mov
pop
inc
jl
sub
push
ficompl
shl
mull
xor
xchg
sbb
cwtl
jno
subb
lods
jle
bound
sub
mov
aad
leave
lcall
addr16
xor
in
pop
int3
imul
ret
inc
aad
xor
jnp
add
adc
push
and
push
adcl
jbe
pop
in
sub
addr16
in
leave
sbb
stos
out
mov
cli
aad
push
dec
inc
mov
cltd
dec
adc
or
lds
mov
sub
ret
push
call
dec
sub
pop
push
mov
cltd
loope
aas
insb
dec
push
pop
pop
jo
test
pop
mov
loope
and
fcomps
clc
inc
jge
sti
lods
ss
hlt
xchg
adcb
xchg
mov
mov
ljmp
and
inc
xchg
test
inc
jl
or
pushl
push
lds
icebp
bound
adc
lods
repz
outsb
jo
out
xlat
shrl
jmp
mov
dec
sub
cmp
std
jg
add
pop
nop
xor
push
and
clc
xchg
jg
inc
mov
int
outsl
xchg
push
outsb
js
push
loop
xor
fst
push
in
mov
pop
fs
mov
xchg
aam
mov
shlb
orb
jno
addr16
jb
sbb
std
jge
fiadds
lret
pop
sub
adc
aaa
stc
push
aaa
shll
mov
pop
test
cmp
cwtl
mov
cltd
je
jge
pop
inc
fbstp
test
xchg
insl
aad
sbb
mov
mov
fwait
mov
in
int3
xchg
repz
fimull
dec
jb
push
add
imul
pop
out
cmp
addl
jecxz
and
sbb
inc
pop
rorb
negl
mov
lret
or
cmp
sbbb
in
fucomi
fidivrl
mov
inc
mov
jge
enter
xchg
call
cs
fdivs
jmp
cmp
iret
and
mov
pop
pop
and
in
add
decl
pop
pusha
or
stos
adcl
and
dec
cmp
shl
arpl
imul
in
push
and
popa
cs
mov
pop
lock
fnstenv
mov
dec
inc
inc
cmp
insl
mov
or
push
out
or
and
jb
int
jnp
cli
arpl
sahf
imul
sub
lret
jno
imul
pop
fdivrs
pusha
loop
out
sahf
pop
cmp
push
add
les
jno
neg
rcr
jle
push
es
and
push
or
and
xchg
sub
sbb
jnp
and
or
mov
cs
pop
iret
dec
shl
mov
nop
mov
pop
shr
imul
je
xor
jb
dec
mov
xchg
jle
loop
push
dec
add
popa
inc
xor
pop
fnstenv
ljmp
push
mov
insb
adc
sbb
sub
loope
out
dec
cmpsb
les
mov
sub
lahf
and
jo
cs
cmp
xchg
mulps
dec
rcl
lahf
push
and
add
lock
push
push
lods
sbb
adc
adc
icebp
int3
push
jmp
cmp
mov
dec
lock
jnp
lcall
pop
lahf
ficoml
xor
dec
je
mov
hlt
jmp
jb
push
sbb
in
cs
jp
push
fs
sahf
sti
xlat
jecxz
stos
in
xchg
xchg
sbb
das
movsl
dec
xor
lahf
test
out
stos
mov
adc
inc
jmp
nop
and
dec
and
and
xchg
clc
andb
clc
push
mov
rcrl
or
cmpsl
jnp
fnstenv
loopne
dec
fs
mov
or
jmp
enter
popa
push
outsb
xchg
sub
clc
mov
mov
jp
cltd
loopne
cmp
clc
jecxz
mov
out
mov
push
cmp
xchg
lock
movsb
lcall
jo
adc
dec
mov
cli
stos
adc
sub
inc
testb
popa
mov
mov
add
fsubrs
sarb
inc
cmpsl
push
sub
leave
add
out
push
cltd
nop
or
iret
xor
outsl
jge
flds
pusha
cltd
leave
inc
xchg
pop
ret
and
lods
in
mov
fistpll
pusha
push
pop
test
add
cmpsl
orb
push
fprem
pop
pop
test
mov
adc
xchg
mov
pop
xchg
mov
inc
imul
in
xor
daa
nop
mov
dec
pop
push
xor
gs
mov
enter
push
int3
repz
pop
jl
mov
pop
sbb
aad
pop
add
mov
and
aas
loopne
inc
aam
dec
pop
inc
cld
xlat
ljmp
insb
cmp
mov
add
add
ss
sbb
pusha
mov
xchg
pop
mov
enter
fmulp
cmp
sbb
mov
and
sub
xor
es
inc
out
push
iret
pop
add
cs
inc
mov
mov
sbb
pusha
xor
pop
add
lret
dec
stos
jge
mov
sbb
push
push
in
lock
inc
hlt
xchg
push
mov
jo
pusha
repnz
jge
repnz
lock
cli
vandps
cmc
jne
or
outsl
out
mov
xor
xor
rcpps
sahf
repnz
shlb
adc
test
pop
xchg
enter
lcall
daa
add
xchg
inc
inc
lahf
cmp
lahf
mov
dec
jnp
and
xor
xor
stos
movsb
out
scas
lahf
push
loopne
cli
dec
sub
fidivl
mov
sti
outsb
cli
cltd
push
xchg
pop
aad
pop
shll
mov
aaa
int
xchg
sarb
add
push
add
incb
cmp
sub
add
test
adc
or
icebp
ret
push
mov
orl
fwait
push
test
insl
mov
mov
inc
test
ljmp
add
pusha
cmp
repz
pop
lcall
push
cmpsl
dec
outsb
lds
or
das
mov
call
jo
cmp
test
xchg
test
add
es
fisttpll
sti
mov
pop
mov
out
mov
xlat
sub
fsubr
mov
inc
movsb
imul
in
xchg
cmpl
dec
or
aas
xor
cmp
loope
xor
lds
loopne
push
cwtl
sti
ds
fsts
les
xor
gs
mov
mov
rclb
push
mov
jb
jp
cmp
xor
or
add
mov
pcmpgtd
adc
inc
and
dec
lods
pop
test
cld
fisttpl
push
push
sbb
mulb
dec
push
push
fisttpll
push
pop
push
dec
repz
push
or
mov
xchg
icebp
les
pushf
in
mov
fisubl
sbb
pop
or
or
xlat
mov
jae
test
movsl
lods
loop
cs
lods
add
sub
xlat
cmpsl
call
pop
insl
es
fs
cmpsb
xlat
aam
xor
and
xchg
aad
push
sub
xchg
or
push
loope
mov
push
in
incb
sbb
sub
push
mov
enter
sbbl
jb
lahf
notb
mov
inc
mov
cs
shrb
movsl
jge
push
test
lcall
dec
imul
cmp
fxch
cmpsb
mov
mov
or
outsl
mov
f2xm1
lods
in
sub
cld
cltd
inc
mov
sti
push
pop
sub
xchg
aaa
mov
gs
mov
adc
xchg
das
xchg
sarl
rolb
jg
push
in
cmp
pop
xchg
bound
mov
lods
dec
and
mov
mov
jne
dec
sbb
push
fwait
add
call
or
mov
add
sahf
popa
dec
ret
dec
inc
mov
stos
test
dec
inc
dec
inc
movsb
sti
pop
inc
ds
sbb
lcall
mov
add
and
clc
xchg
push
aaa
loopne
mov
sub
and
and
sbb
add
into
shll
cmp
jl
repz
lods
xor
jo
inc
mov
jmp
inc
int3
jge
xchg
test
cmp
or
ror
out
and
cld
idivb
cmpsb
cwtl
sub
mov
mov
leave
clc
mov
mov
jae
sbb
nop
dec
inc
jg
or
pop
addr16
mov
adc
mov
xchg
stos
and
enter
push
cmp
out
xchg
das
hlt
mov
dec
mov
in
sarl
inc
enter
fisubrs
xchg
mov
cmpsl
repnz
xchg
insl
cli
fdivl
inc
mov
mov
mul
jns
loope
and
icebp
mov
fdivs
push
loop
imul
add
cmp
xchg
popa
xchg
les
enter
pop
mov
pop
sub
test
mov
test
clc
idivb
mov
int
and
fsubrs
pusha
outsl
shrl
cmp
mov
sub
inc
cmp
int3
adc
das
mov
scas
out
dec
stos
push
jb
xor
loop
mov
push
add
and
lret
ret
in
inc
imul
mov
rep
jl
push
mov
adc
cmp
push
xor
mov
mov
aas
mov
push
test
lret
jmp
out
inc
lods
mov
jae
push
es
ja
dec
in
imul
sti
adc
or
sbb
cs
scas
mov
sub
repnz
mov
ja
jg
sarb
mov
sbb
dec
push
jne
cmp
cmp
test
cmpsl
add
xchg
xor
loope
pop
outsl
sbb
aaa
ret
ljmp
out
and
xor
std
orb
cld
mov
out
clc
divl
jge
cwtl
sub
add
cmpsl
mov
les
insb
scas
push
mov
xor
movsl
cmp
pop
sub
or
aam
popa
push
jns
push
mov
les
aam
mov
inc
add
dec
xor
call
ss
or
adc
xorb
jne
data16
add
and
mov
add
sti
inc
mov
cli
push
adc
xchg
pop
push
or
lret
mov
push
push
lahf
or
in
mov
repnz
aas
jb
je
push
sub
repz
xchg
call
insl
or
aaa
xor
pop
adc
and
jae
xchg
xchg
repnz
jp
movsb
lret
test
inc
addb
loopne
mulb
cmpsb
daa
dec
pushf
push
cltd
ror
gs
jno
ljmpw
mov
mov
add
mov
adc
dec
and
testb
lret
jnp
movsl
dec
in
dec
mov
cs
xor
or
mov
mov
loope
js
inc
xchg
xor
push
out
cs
fdivrs
xor
fnsave
sahf
adc
push
test
std
repnz
sub
xchg
aam
jl
mov
jge
into
bound
rcl
sub
bound
stos
aas
aaa
xchg
sub
pop
aas
add
inc
mov
mov
push
push
mov
pop
shrb
push
in
ljmp
xor
aam
jnp
jo
daa
mov
daa
xchg
lret
adc
jle
adc
enter
push
jb
xor
jge
mov
pusha
aaa
adc
xor
xor
aad
test
add
cwtl
push
ficompl
pop
push
sahf
add
jecxz
lret
or
pusha
cltd
and
pop
lret
in
std
into
loop
sbb
das
mov
inc
mov
jno
sbb
ljmp
jb
jl
xchg
sahf
mov
int
jno
jbe
adc
inc
icebp
cmc
jge
out
xor
bound
xlat
push
xchg
mov
das
es
insb
adc
xchg
fisubrs
loop
call
inc
mov
scas
add
cs
xchg
ljmp
andb
dec
rol
jge
jo
stc
pushf
sbb
jp
mov
inc
xchg
xor
pop
mov
sti
std
jo
mov
cmp
ljmp
or
xor
out
lea
xchg
sti
mov
adcb
in
mov
and
fwait
mov
or
arpl
clc
dec
int3
push
cs
les
loop
cmp
jg
xor
mov
out
outsl
bound
add
xchg
sub
mov
icebp
enter
push
std
cmp
rcll
sbb
outsl
inc
xor
gs
add
loopne
inc
int3
cmp
imulb
cli
enter
cmp
inc
jns
xor
gs
inc
ds
jle
adc
sub
mov
jl
push
imul
add
lods
jge
in
out
fldcw
push
mov
adc
imul
add
cmp
fdivrs
xor
mov
movsb
fdivp
push
shl
push
and
cwtl
pusha
outsl
add
push
dec
das
sbb
sbb
add
movsl
clc
jne
xchg
sub
pop
sarb
int3
fists
scas
xchg
pop
mov
out
jmp
call
inc
xorb
adc
shl
fbstp
xor
aad
jno
jae
sbbb
pop
adcl
xor
testl
fiaddl
and
fsts
cmp
popf
scas
clc
or
push
mov
pop
or
jmp
incl
jns
popa
cwtl
add
cmpsb
cpuid
iret
movsl
or
lret
sbb
xor
sbb
inc
rorl
imul
adc
pop
xor
push
loopne
xor
mov
sbb
addr16
xor
xchg
fs
mov
add
loope
xor
test
sahf
in
push
mov
pop
mov
xor
andl
mov
or
sarb
lds
lcall
mov
ficomps
dec
lock
mov
sarl
pushf
mov
dec
fsubrs
adc
subl
outsb
dec
mov
lret
pushf
xchg
rcrb
cwtl
adc
mov
insl
std
adc
lock
cmc
pop
add
addr16
ljmp
adc
icebp
mov
ffree
mov
xlat
push
movsb
mov
f2xm1
clc
push
adc
std
out
dec
outsl
ljmp
shll
loope
aaa
aaa
shrl
inc
fcompl
dec
test
jb
aam
fldl
push
jmp
stos
int
and
push
dec
enter
and
xchg
or
mov
ds
sub
shll
pop
js
jg
xchg
xchg
cmp
mov
xchg
nop
outsb
jmp
mov
aaa
ret
movsb
sub
test
mov
lret
mov
jno
in
mov
mov
pop
int3
mov
ja
shlb
fstpl
xor
aas
test
mov
test
shll
mov
or
sahf
fs
call
aaa
xor
lcall
cwtl
inc
sti
xchg
test
sub
addr16
ds
pop
mov
sub
lock
pop
mov
test
xor
xlat
push
scas
push
in
arpl
or
add
imul
dec
mov
cmp
adc
xlat
cmp
icebp
adc
dec
sarl
hlt
aas
insl
dec
mov
mov
and
outsb
xor
aam
mov
popf
push
out
cmc
jns
test
out
mov
ret
test
adc
std
cmp
inc
lahf
adc
mov
mov
adc
sbb
ja
mov
sub
xchg
aas
aas
mov
mov
mov
lods
repz
invd
nop
out
add
gs
scas
sub
cmp
shll
les
push
dec
mov
fsubrp
inc
inc
lods
mov
jnp
dec
fdivl
push
dec
cmpsl
dec
jmp
jb
shlb
leave
lcall
mov
ret
adc
lock
or
adc
scas
push
test
jne
push
std
xor
test
dec
filds
jmp
outsb
sahf
mov
jns
icebp
lods
aam
mov
xor
dec
test
insb
int
cmp
cld
in
or
jo
nop
xchg
mov
sbb
and
jns
adc
or
and
fmul
faddl
add
cmp
and
inc
and
mov
lock
jge
insb
das
aad
int3
test
imul
pop
push
jg
repnz
sub
je
xor
pop
test
xor
imul
cmpsl
mov
clc
cli
sbbl
cmc
xchg
lret
sbb
orl
lret
add
mov
cmc
imul
fsubrs
dec
push
cmpl
dec
inc
jmp
nop
rcr
xor
cmpsb
inc
push
mov
push
inc
xchg
or
xor
pop
inc
mov
test
and
jle
pop
movsl
shll
mov
test
fwait
cmp
lret
ja
dec
jmp
cld
in
in
sbb
xlat
push
sti
cmc
insl
mov
push
and
icebp
mov
aas
or
mov
add
dec
dec
jge
ljmp
ret
add
add
lret
mov
adc
popa
cmp
daa
mov
fs
in
lahf
ret
push
push
into
mov
jo
mov
cmp
push
cmp
mov
ljmp
push
push
arpl
shll
inc
call
fisttps
je
icebp
mov
add
sub
xor
aas
dec
jb
jg
cld
imul
daa
out
inc
push
add
jo
mov
ljmp
lret
idiv
sbb
or
adc
je
or
push
rcr
sub
out
xor
pusha
pop
mov
std
cmc
iret
and
cltd
pop
jns
jp
dec
dec
inc
imul
mov
test
fnstenv
mov
stos
mov
inc
in
test
insb
add
add
inc
sbb
add
jmp
or
mov
into
imul
xor
into
and
sub
pop
nop
jb
or
and
xchg
rclb
repz
sub
imul
add
lods
mov
aad
pop
test
mov
or
dec
pushf
iret
lock
cmc
fwait
daa
bound
inc
ret
jg
xchg
test
rcll
and
pop
jg
into
cmpsl
daa
jno
movsb
aaa
arpl
pop
xchg
sar
push
testl
sbb
xor
jns
loope
mov
inc
mov
fs
inc
mov
mov
popf
and
pop
test
mov
cli
inc
mov
imul
xchg
mov
xchg
pop
push
aam
hlt
imul
sub
out
shl
mov
mov
and
inc
inc
testl
push
in
pop
rorl
ret
mov
mov
inc
mov
subl
test
sbb
in
cltd
mov
js
mov
std
pop
mulb
ljmp
cmpsb
hlt
sahf
subb
movsb
pushl
fsubrl
hlt
call
jns
rcll
test
ljmp
gs
dec
add
pop
pop
pop
adc
icebp
js
fstps
push
adc
cmp
cmpb
and
jle
mov
lret
rcrl
jnp
mov
add
mov
aad
cmpsl
arpl
sbb
incb
fwait
cmp
sub
pop
out
arpl
dec
cld
dec
cld
stc
add
repnz
test
inc
mov
mov
inc
push
test
sub
rcll
outsb
jbe
movsl
test
movsb
push
mov
in
test
ss
subb
pop
popf
loopne
add
push
imul
loope
xor
aas
push
ret
mov
ret
jbe
loop
xor
out
stos
jb
fwait
and
aam
lods
gs
fldl
adc
push
jl
jge
adc
push
or
je
xor
push
movsl
adc
movsb
shll
add
in
lods
je
adc
push
xchg
mov
out
xbegin
cmpsb
push
dec
fs
cmpsl
sub
sbb
xor
jno
outsb
add
inc
rclb
cs
xor
cmp
pop
cld
jno
cmpsl
xchg
decb
das
or
rdmsr
dec
jp
adc
fnsave
sti
sbb
mov
inc
dec
mov
outsb
sub
popa
data16
sub
icebp
pop
and
jmp
dec
sarb
cmpsb
push
xor
ja
out
dec
add
ret
mov
add
sub
cld
push
lcall
push
or
frstor
cmp
mov
loop
jnp
pop
sub
aaa
xchg
ss
add
mov
mov
decl
add
jae
and
roll
mov
cmpsb
test
or
xchg
xchg
or
mov
pop
jo
sub
ficompl
nop
and
les
filds
and
jg
insb
jmp
fildl
outsb
pop
fwait
adc
mov
jle
repnz
ja
stc
inc
movsb
dec
and
outsl
pusha
dec
sub
jle
bnd
adc
es
fcmovnu
popa
call
mov
hlt
or
mov
cwtl
lds
test
aam
lods
pop
pop
pusha
cs
sbb
push
out
cmp
mov
sbb
mov
icebp
int3
pushl
rorb
outsb
addr16
sbb
dec
cmp
and
dec
movsl
push
loop
dec
jg
lahf
mov
mov
fcmovnb
and
inc
xor
popa
fldl
adc
xchg
lahf
jnp
sub
dec
jae
adcl
pushf
and
lcall
dec
addb
test
pop
fadd
pop
or
sub
nop
fidivrs
pop
fcmovb
adc
fadds
pop
sbb
sbb
xchg
cmp
in
bound
dec
aam
mov
mov
pop
dec
aas
leave
push
sub
fwait
js
mov
mov
push
popa
loop
cmp
repz
nop
fcompl
pusha
sub
outsb
xchg
xor
jns
dec
in
push
jno
push
mov
cwtl
xchg
cmp
mov
bound
mov
rcl
scas
xchg
and
decl
dec
fiadds
hlt
aam
push
mov
mov
dec
mov
mov
ffreep
ljmp
jl
push
lea
xor
mov
pushw
mov
or
lods
test
pop
adc
xor
cmpsb
sti
inc
shl
in
adc
jl
xchg
xor
cld
push
push
jmp
dec
adc
pop
pushf
mov
ss
sbbl
pop
loopne
jecxz
mov
arpl
test
stos
repnz
xchg
pop
and
cmp
ds
adc
cmpsl
jbe
and
loope
out
pop
xchg
or
sbb
movsl
das
fisubl
lods
push
outsb
ret
dec
push
dec
inc
dec
divl
add
jg
ds
ss
mov
fnstsw
fcmovnb
data16
sbb
inc
popf
inc
iret
push
out
mov
xor
mov
mov
int3
icebp
fistps
sahf
inc
jae
xor
jmp
fimull
call
lret
cmp
scas
scas
and
xchg
lods
stos
cwtl
call
pusha
ror
or
ret
ss
lods
div
push
in
and
cltd
loop
adc
test
pop
pop
addr16
pop
dec
jae
into
int3
push
jmp
push
aam
add
cmp
and
daa
loopne
mov
cltd
sahf
pop
or
inc
lret
iret
jg
cld
or
pop
inc
stos
inc
mov
or
lds
rorl
lcall
or
test
notl
orl
xchg
iret
lret
je
aam
push
incl
push
adc
scas
pop
cltd
cmp
cmpb
xor
pop
ficomps
aas
or
jg
scas
lds
cmp
mov
or
out
xor
imul
or
shll
jae
sub
cld
sbb
cmpsb
in
xchg
pop
jge
in
aam
out
rcrb
fildll
cmpsl
ret
addr16
js
sbb
push
inc
imul
mov
xchg
xchg
mov
lock
hlt
inc
jno
sub
fisubrs
inc
in
imul
lahf
test
xchg
xor
pop
es
shll
ror
fidivrl
aas
into
insl
ljmp
mov
fcomps
addr16
sti
mov
mov
mov
xchg
fldenv
jmp
bound
repz
lock
push
pusha
mov
or
addr16
aam
dec
pop
sti
adc
mov
xchg
sub
cmp
xor
repnz
sub
into
sub
je
lret
rorl
repz
scas
pop
lds
jecxz
add
inc
inc
insl
add
fstps
sbb
cltd
pop
fdiv
out
push
cmpb
fiadds
mov
int
or
into
jl
iret
call
pop
in
or
jae
movsb
or
adc
mov
arpl
mov
jmp
lahf
xchg
fistpll
jno
cmpsb
mov
add
xchg
aaa
xchg
data16
aam
adc
stc
or
les
mov
lret
fs
jne
inc
jne
movsb
pop
fmul
mov
bswap
mov
nop
sahf
lcall
xchg
fsubrs
lret
bound
mov
jne
insl
pop
cmp
mov
repnz
iret
fs
jle
pusha
sub
in
clc
mov
dec
sub
mov
pushf
pop
inc
mov
pop
movsb
leave
sti
in
lret
call
sub
jge
cmp
scas
push
push
xchg
cmpsl
movsl
shlb
cmp
in
push
data16
stos
stc
push
jb
test
rcrb
xchg
inc
lea
aas
add
and
lret
js
jbe
push
cmp
fstpt
mov
imul
fwait
sbb
je
repnz
and
popf
or
inc
sbb
sub
outsl
xchg
leave
outsb
divl
mov
movsb
cmp
int
jne
cmp
popa
out
test
test
push
push
add
pop
sti
add
dec
call
repz
adc
push
push
loopne
or
mov
xchg
incl
mov
movsl
int
inc
daa
and
es
scas
add
push
outsl
aad
fs
imull
ss
repnz
inc
mov
lods
sub
xchg
xor
push
jae
inc
inc
sub
push
cmc
xchg
movsb
out
rol
or
jge
je
mov
dec
enter
mov
ror
push
out
mov
push
adc
sub
ja
jne
or
cwtl
sbb
aaa
je
dec
sub
mov
jp
and
xlat
xor
ja
icebp
fisttpl
clc
and
ljmp
inc
sbb
je
xchg
dec
push
fdivl
sbbl
xchg
pmullw
adc
aam
mov
push
scas
mov
sbb
push
add
xchg
push
ret
jnp
int3
je
data16
mov
inc
fs
popa
jbe
data16
aas
push
or
add
mov
xchg
lret
xor
xor
pop
aad
cmpsl
push
sub
push
test
jne
out
loop
jl
mov
or
or
aas
pop
push
in
jmp
filds
and
lea
jae
add
movsl
mov
arpl
fcomi
std
cmp
por
jb
nop
in
xchg
sub
add
mov
rolb
cmp
xor
push
lahf
and
push
stc
mov
mov
insb
sarb
push
mov
fdivrl
mov
aad
dec
loopne
or
ljmp
and
xor
mov
inc
cmp
mov
inc
jg
or
jl
xchg
xor
or
xchg
pop
inc
and
sbb
and
punpcklbw
out
push
ljmp
mov
cmpsl
mov
rclb
out
les
cmp
mov
pop
inc
inc
mov
test
xchg
std
mov
imul
mov
and
mov
jecxz
dec
jmp
lods
fdivl
pop
popf
pop
dec
adc
adc
push
stc
mov
xchg
dec
stos
lea
mov
add
aad
mov
inc
mov
flds
mov
sub
or
push
nop
pop
cmpsb
jnp
pop
aam
cmpsb
or
lods
add
push
test
ds
mov
repnz
inc
cmpsl
cmpsb
cvtps2pi
hlt
xlat
inc
pop
test
cmpsb
inc
sub
iret
decb
jecxz
les
xchg
and
shl
mov
mov
jns
cmp
sub
mov
sub
xchg
mov
mov
pushf
das
cs
cmp
stos
mov
out
inc
add
cmpsl
call
scas
sbb
push
in
scas
mov
cltd
xchg
xchg
cmpsl
arpl
pop
aas
push
push
mov
repnz
xchg
je
into
dec
dec
xor
inc
dec
ds
dec
lods
sub
jecxz
nop
mov
mov
jg
push
jno
loopne
scas
sbb
sub
or
xor
es
mov
lea
test
mov
inc
mov
pop
out
cmp
adc
sbb
ja
sub
imul
lods
je
dec
ret
shll
fcomps
inc
add
or
inc
mov
es
push
jecxz
and
xchg
loop
jns
sbb
jo
push
xor
fcmovbe
bound
shlb
xchg
mov
aaa
sbb
push
inc
inc
jp
sub
mov
sbb
mov
fcomps
or
daa
lods
xchg
mov
movsl
inc
push
rorb
xor
rcrl
adc
adc
push
jbe
sbb
sarb
into
repnz
mov
mov
cmp
cli
into
outsb
insb
jno
lea
dec
mov
pop
and
insl
inc
test
cmp
aas
scas
cmp
jecxz
cmpsb
adc
jns
add
xchg
cmp
iret
stos
neg
imul
cld
orl
jp
mov
popf
jb
mov
leave
lds
dec
mov
mov
std
mov
pop
cmpb
into
shlb
xor
in
xchg
mov
adc
psubq
pop
mov
faddp
cmpsb
pop
pop
inc
jnp
imul
and
adc
mov
fisubl
pop
fstpl
mov
pop
adc
outsl
or
xor
adc
leave
jb
inc
sahf
push
mov
inc
fcompl
and
popa
jbe
call
sub
enter
add
push
lock
jecxz
lret
jb
or
jg
fbstp
in
sub
xchg
sub
mov
push
movsb
adc
in
pop
push
inc
repz
jl
inc
cwtl
push
or
add
adc
hlt
repnz
imul
sbb
and
ficompl
mov
sub
es
or
fs
add
mov
mov
push
outsl
jb
pushf
push
push
pop
fcmovnu
inc
out
outsl
pop
jo
clc
loop
shr
mov
or
jle
testb
dec
xchg
insl
push
daa
imul
inc
shll
or
fstps
aas
movsb
ds
in
jo
cmc
sbb
jo
mov
lock
ljmp
sub
add
cmovnp
fidivl
mov
sbb
adc
int
cld
test
sahf
addr16
ja
jno
in
mov
cli
xchg
sbb
jle
cli
cwtl
idivb
mov
outsl
loop
push
xchg
sbb
sub
roll
xor
insb
mov
pop
ljmp
xor
in
add
push
pop
mov
mov
xchg
sti
mov
xor
sbb
call
or
pop
rcrl
sarb
sbb
ljmp
ret
fs
sub
out
aad
loopne
xlat
adc
mov
sti
int
sbb
jge
jl
jp
ljmp
jl
test
lods
push
jle
and
pop
lret
sbb
cmp
jmp
xchg
sarl
or
push
icebp
jp
imul
mov
xor
mov
and
jne
mov
lret
mov
inc
jp
inc
and
sti
sti
pop
sbb
arpl
or
pmaddwd
pop
cmp
push
dec
movsb
mov
hlt
test
sahf
adc
push
and
cmp
lods
xchg
sbb
pop
int
test
out
push
popf
les
pop
out
mov
dec
into
daa
frstor
daa
scas
incl
sti
adc
adc
mov
push
ljmp
xchg
cld
mov
mov
call
add
cld
lods
fiadds
mov
mov
or
test
ret
sahf
loope
sub
jg
flds
popa
xchg
and
fistpll
int3
les
pusha
xchg
or
rcrl
mov
out
xchg
and
or
add
hlt
icebp
jne
inc
mov
add
pop
add
cmp
add
outsl
mov
adc
loopne
cmp
push
inc
push
xchg
mov
mov
scas
add
pop
inc
popf
pop
sbb
adc
inc
scas
fwait
aad
into
sbb
repnz
sbb
mov
or
cli
jbe
adc
mov
xor
dec
lahf
mov
aad
sub
mov
sbb
faddp
add
outsb
ficoml
pop
les
sbb
or
cwtl
cmp
inc
bsf
cli
test
or
mov
xor
icebp
cmc
jecxz
aaa
cmpsl
push
or
es
das
dec
cmpsb
lds
into
pop
xchg
xchg
shr
psubusw
xchg
or
pop
lret
mov
enter
xor
inc
addr16
popa
icebp
push
cmp
or
inc
sbb
aas
daa
inc
das
pop
jmp
sub
xchg
adc
xor
jnp
test
je
xor
cmp
imul
inc
adc
or
ficoml
push
addb
sarl
and
mov
xchg
shll
adc
fisubl
pop
sahf
jge
cmpsb
push
stos
xchg
sub
loopne
mov
cwtl
mov
test
pop
pop
std
cmp
fistpll
mov
sub
aas
faddl
xlat
leave
sub
iret
test
mov
jbe
or
pop
out
ds
push
pop
push
sbb
dec
or
sahf
adcb
add
dec
insl
dec
call
outsl
mov
and
ss
mov
insb
ret
pop
mov
sbb
xchg
adc
mov
pop
fs
pop
inc
aaa
in
sub
dec
nop
out
inc
sub
insl
mov
stc
push
mov
xor
mov
inc
rcl
cmp
xor
xor
push
notb
mov
dec
arpl
lcall
mov
cs
stc
jl
stos
adc
xchg
bound
clc
shrl
int
data16
cli
mov
jp
in
sarl
es
inc
out
xchg
into
popf
adc
mov
add
arpl
loope
pop
mov
mov
fwait
out
inc
sahf
cmpsl
mov
jne
and
push
in
out
or
cmp
ret
rcrb
mov
push
sbb
add
stos
lcall
add
cltd
test
dec
jbe
into
imul
sbb
lcall
xchg
mov
push
or
or
daa
pop
sbb
lahf
dec
mov
cli
stos
fwait
test
push
stc
mov
lea
mov
push
push
pop
and
sbb
sub
mov
or
xchg
daa
xor
andl
sbb
jecxz
cmp
loopne
ja
push
cmpsl
xchg
iret
scas
test
push
sbb
bound
stc
mov
cmpl
mov
lock
movsb
jle
sahf
xor
ficomps
add
pop
imul
aam
jmp
cmpb
bound
out
lock
inc
sub
xchg
jb
sub
ss
fnstcw
imul
test
ss
hlt
xchg
sub
pusha
mov
sub
pop
stc
aad
and
and
fsts
inc
in
or
or
fs
bswap
sbb
xor
sbb
mov
sub
pop
pop
in
or
push
sub
lret
pop
cmc
xlat
imul
popa
mov
ret
lods
jne
mov
test
out
cmp
lods
movsb
insl
and
sub
mov
add
shl
lahf
push
cltd
je
sub
dec
flds
xchg
inc
sbb
js
inc
push
or
jge
lret
push
ret
sub
arpl
into
pop
ret
pop
adc
xchg
test
ret
pop
cmc
aaa
es
lock
in
jb
xchg
push
cmpsb
and
jecxz
lea
cmp
in
lret
rsqrtps
insb
cmp
pop
int
xchg
dec
inc
lock
jp
cmpsl
adc
and
add
sub
add
xor
sub
xor
sbb
notl
aam
decl
or
dec
mov
in
push
mov
loop,pn
nop
mov
jne
fidivrs
jno
js
in
dec
rclb
mov
inc
bound
adc
cmc
movsb
gs
fildll
jae
jge
insb
mov
test
in
in
test
cld
or
cmp
xor
ret
mov
jl
outsl
test
loope
add
jbe
pop
adc
push
divl
test
lcall
mov
in
mov
mov
pop
sbb
clc
xor
pushf
shll
insb
and
pop
cltd
daa
jp
ror
lret
jae
jle
xchg
cmp
pushf
add
fwait
les
pop
aas
push
scas
sbb
cmp
sti
xor
xchg
jmp
ret
in
mov
jno
fldt
mov
sbb
bound
pusha
mov
fstl
sbb
outsb
loop
daa
cmpsb
sub
stos
int3
sub
addr16
inc
inc
je
add
xchg
dec
je
test
aad
add
dec
dec
lock
inc
sub
adc
div
dec
inc
insl
push
mov
push
push
out
xor
loop
lret
nop
cmp
xlat
pop
xor
movsl
mov
add
pop
inc
xor
xor
adc
mov
iret
mov
jb
pop
pop
xchg
pushf
lea
xchg
not
icebp
mov
mov
xchg
or
iret
sub
jmp
test
cmpsb
pop
cltd
or
andl
cmp
stos
divl
mov
arpl
nop
xlat
in
push
pop
mov
out
dec
push
lret
and
sbb
scas
inc
mov
jg
lods
loop
jae
addb
xchg
orb
insb
lcall
mov
mov
ljmp
ds
into
lods
shll
inc
mov
test
lcall
decb
cmpsb
xor
pop
cmp
stos
adc
jbe
imul
dec
mov
arpl
fwait
out
outsl
je
outsb
cmp
fldt
cmpsl
or
add
movsl
add
jmp
int
mov
and
mov
sahf
sub
out
or
popf
mov
in
rorb
cmp
test
add
sbb
sub
mov
pusha
jecxz
test
out
gs
out
jbe
mov
shrb
lret
aam
sbb
clc
pusha
inc
pop
mov
xlat
dec
int
faddl
lret
jmp
out
and
xor
imul
inc
in
ljmp
fsubs
ret
push
xchg
std
popf
dec
ss
add
scas
fistl
pushf
nop
mov
cmpsb
cs
hlt
js
xchg
loop
inc
mov
or
out
pop
cs
sub
mov
push
add
pop
outsb
cmp
sbb
bound
cmp
rcrl
stos
nop
lea
sub
fcompl
cmp
xor
jbe
mov
inc
lahf
das
adc
out
test
loop
or
xorl
jb
jmp
es
in
fwait
adc
add
xrelease
mov
push
sbb
lret
cmp
pusha
adc
lahf
ret
mov
shrb
mov
cli
mov
add
xor
inc
dec
mov
xor
mov
and
lret
addl
cmp
mov
stc
lret
or
mov
hlt
sbb
pop
cmp
popf
popf
xchg
adc
cwtl
jge
dec
mov
xor
adc
sbb
repnz
cld
inc
loop
add
xchg
arpl
jmp
cmp
adc
and
xchg
pushf
sbb
inc
and
xor
lods
js
mov
out
iret
fwait
and
mov
enter
shll
adc
push
and
roll
clc
dec
cmpsl
pop
jl
stc
jp
divl
sbb
push
test
shll
jmp
push
sbbb
mov
mov
dec
sub
lds
inc
mov
call
les
leave
mov
das
sbb
das
int3
stc
fdivl
lds
aam
jmp
ljmp
call
pop
mov
shlb
outsb
push
adc
ror
movl
mov
scas
scas
jg
lods
das
fwait
mov
fsqrt
push
or
lret
adc
push
or
ret
call
mov
xor
ds
mov
loope
inc
mov
jg
int
xchg
gs
movsl
insb
mov
adc
dec
into
adc
sub
arpl
in
iret
imul
jecxz
xchg
jle
mov
pusha
ficoms
fisubs
ret
xchg
sbb
or
inc
lahf
push
lock
jb
pop
xor
hlt
mov
in
je
gs
cmp
or
xchg
jo
mov
lcall
lods
mov
xchg
mov
in
das
fbld
push
out
fstpl
popa
js
dec
inc
std
adc
adc
and
add
movsl
repnz
push
add
jl
lds
enter
icebp
call
scas
rorb
inc
les
push
popa
scas
jbe
cmp
cmp
shrb
mov
ret
pusha
jge
jo
dec
cmp
cmp
test
movsl
in
es
out
push
cmp
into
push
aam
sbb
in
ret
add
adc
pop
in
popa
enter
cmp
cmc
rcrb
jb
adc
insl
pop
add
adc
jecxz
mov
sbb
dec
sbb
mov
sbbb
and
xor
loopne
inc
push
adc
sbb
push
lock
loope
push
jb
enter
xchg
mov
es
icebp
gs
push
or
fcompl
je
rcrb
xchg
imull
lcall
es
sbb
pop
mov
push
fiaddl
scas
xchg
cmp
cld
and
fsubr
xor
jae
push
ja
and
mov
mov
mov
or
es
loop
lcall
pop
jo
lret
les
xchg
jae
jo
pop
mov
adc
and
ss
push
mov
sbb
jge
aaa
cmp
and
imul
adc
jp
mov
les
mov
xchg
dec
iret
mov
inc
fstl
inc
sub
into
mov
and
in
in
out
mov
dec
mov
mov
adc
xchg
fists
fwait
jne
mov
cmpl
xor
iret
sbb
addr16
xor
push
xchg
imul
repnz
jns
cmp
push
cmp
out
out
mov
and
sbb
aad
push
or
inc
fsub
enter
adc
pop
lahf
jns
out
cmp
enter
scas
pop
std
leave
lods
jnp
or
xor
int3
cs
aad
out
mov
jl
mov
in
sub
cmp
enter
orps
stos
fildl
fwait
iret
out
mov
mov
pop
sbb
pop
mov
clc
xchg
je
ret
pusha
inc
sbb
pop
inc
jmp
ja
adc
push
xchg
add
jns
out
rcrb
jmp
orb
imul
sub
mov
jl
add
cli
mov
or
or
pop
shlb
ret
std
jg
pop
jo
das
push
xlat
jo
sub
mov
fsubs
outsb
add
pushf
inc
mov
test
std
inc
pop
adc
mov
or
jae
fmuls
aad
shlb
pop
jmp
sub
int3
lcall
imul
add
sbb
xchg
gs
cltd
jb
das
stos
mov
dec
into
addr16
sub
out
ljmp
dec
shrl
test
out
pop
inc
aas
sbb
jne
inc
jp
sbb
push
mov
push
clc
mov
xchg
ljmp
rorb
adc
out
in
adc
xor
push
das
outsb
ja
xor
pop
ljmp
arpl
mov
pop
jmp
mov
inc
dec
shrb
add
movzbl
dec
xchg
jecxz
and
mov
into
lea
arpl
sbb
add
sahf
std
jo
leave
xor
lds
cmp
pop
fs
push
dec
fldl
xchg
push
leave
int3
repz
sub
cmp
mov
xchg
xchg
sbb
adc
push
pop
aaa
in
cwtl
arpl
sbbl
aad
popa
sar
cli
adc
data16
mov
and
push
push
ret
mov
nop
push
cmp
ljmp
pushf
leave
adc
js
imul
jae
dec
cmpsb
xor
sbb
cmp
xchg
or
cmp
movsl
mov
sarl
rcll
aam
pop
inc
fisubs
cwtl
adc
lcall
rcrl
jmp
sub
xchg
fstpl
cmpsb
cld
lods
negb
pusha
stos
mov
sub
adc
mov
or
cmpsb
adc
or
sbb
mov
bndldx
sbb
mov
jns
xor
punpckhwd
cmp
sar
sar
ja
leave
and
aad
sarb
mov
xchg
add
mov
notb
jae
inc
cmp
xor
test
push
int
sbb
mov
fdivrl
fiaddl
inc
ret
shll
insl
rcrb
jo
stos
test
in
push
xchg
xchg
jno
push
clc
insl
cmp
imul
aas
pop
inc
cs
jb
push
xor
pusha
stos
cld
mov
jo,pn
arpl
mov
mov
adc
push
dec
xchg
orl
xlat
jg
ss
add
mov
pop
daa
pusha
imul
push
inc
repz
inc
testl
sbb
clc
loopne
outsb
xchg
push
mov
mov
lret
mov
mov
pop
mov
rcll
scas
movsl
pop
mov
cwtl
push
mov
repnz
mov
cmp
cmpsl
adc
adc
mov
push
outsb
mov
das
fiaddl
add
test
aam
les
mov
test
lds
cmpsl
pop
aaa
pop
add
xchg
dec
cmp
pop
mov
pop
sbb
lcall
int3
cld
xor
pop
call
mov
adc
js
xchg
inc
movsl
dec
loop
neg
es
mov
mov
pop
dec
shl
ss
and
cmc
neg
jg
inc
or
or
xchg
xchg
dec
xchg
and
test
iret
jmp
frstor
gs
mov
xor
jo
jecxz
loope
pop
or
xchg
pusha
or
jnp
add
pop
and
dec
fimuls
mov
mov
jno
test
lcall
add
mov
jg
mov
jb
cmp
xchg
rcr
loop
fisubrs
push
adc
sub
mov
xor
test
fsubrs
xchg
int
or
xorb
dec
insb
add
mov
clc
aad
push
mov
cmp
aas
stos
out
jo
jmp
sbb
setl
xchg
scas
sbb
mov
cltd
mov
mov
divb
into
out
loop
icebp
xchg
xlat
mov
fwait
aad
cmp
push
and
add
cld
adc
les
lahf
cmp
inc
test
dec
inc
push
nop
and
std
inc
lret
lret
cmp
inc
push
shlb
xchg
leave
pop
jmp
xchg
outsl
dec
sbb
icebp
sbb
iret
roll
mov
xor
adc
icebp
loop
loope
cmc
mov
enter
cmpsb
xchg
sub
push
loop
inc
or
outsb
add
outsl
jecxz
push
clc
ja
in
or
jle
xor
xlat
xchg
or
cmp
fiadds
mov
cmp
das
leave
mov
inc
jne
inc
push
ja
lcall
int
mov
lcall
cwtl
add
loopne
int
nop
push
int3
idivl
fistpl
aaa
pop
push
push
adc
ret
inc
shrl
mov
pusha
or
into
test
sarb
mov
and
mov
lret
dec
jnp
dec
jns
movsb
mov
lods
lret
xorb
inc
jno
cli
mov
out
iret
std
gs
and
or
add
pop
add
or
pop
stos
jge
xor
adc
test
sarl
loop
stos
push
std
mov
js
cwtl
pop
jae
mov
clc
pop
and
scas
lea
arpl
and
vcvttps2dq
aas
das
push
das
push
mov
dec
pop
dec
fxch
xor
fadds
push
dec
cmp
mov
or
mov
dec
mov
lret
sbb
out
inc
jle
jae
scas
test
adc
rcll
inc
push
xchg
mov
dec
jae
ja
push
sbb
jge
jl
sbbb
or
add
inc
divb
jmp
add
mov
inc
popa
xchg
repnz
adc
lods
lock
adc
incb
mov
push
mov
jle
pop
xor
fisttps
mov
add
out
cmc
and
shl
mov
sub
add
idiv
jp
mov
ficomps
insl
nop
fnstenv
lods
jno
js
lock
sbb
imul
lods
ss
mov
jmp
sbb
jns
ljmp
cmpsl
int3
out
lock
pop
pop
pop
repnz
pop
jbe
lea
jp
mov
mov
jbe
cltd
aaa
pop
enter
out
out
jns
out
loop
stc
jne
mov
xchg
xchg
sub
sub
dec
xor
and
cltd
imul
push
mov
push
inc
jecxz
jb
lea
cltd
subb
sub
add
repz
mov
outsb
sarb
xor
pop
adc
lret
mov
test
jbe
mov
xchg
jmp
test
cmpsl
sti
pop
out
mov
sti
rcrl
in
ror
jge
xor
out
imul
mov
lods
inc
scas
shll
repnz
xor
add
shrl
mov
je
jbe
or
add
cmpb
jp
add
jns
mov
adc
out
jmp
iret
repz
mov
aaa
cs
insb
mov
pop
mov
add
aas
xlat
shlb
and
rolb
jns
les
mov
jo
inc
mov
or
int
add
subb
add
jge
outsb
mov
mov
jae
jns
mov
sbb
das
jl
popa
push
adc
cwtl
in
dec
mov
sub
mov
in
pop
add
and
loopne
sti
push
into
mov
nop
out
lock
mov
jbe
jae
imul
jp
loop
cmpsb
fiaddl
mov
and
push
push
insl
push
aad
in
mov
dec
in
mov
jns
adcl
fs
jo
and
mov
push
ja
int
cmp
sti
fwait
mov
pop
sub
sub
cmp
jo
adc
push
push
ja
repnz
ja
jb
jle
jns
mov
adc
mov
sbb
aaa
push
aas
std
xchg
inc
rorb
pushf
cmp
mov
push
sbb
in
aad
ret
lret
jb
cmpsl
xchg
lret
mov
dec
insl
xchg
xlat
dec
mov
sbb
lret
xor
adc
sub
pop
dec
lcall
cmp
jno
adc
mov
mov
jo
and
bound
and
outsl
mov
ficomps
std
dec
scas
mov
xorl
pop
arpl
popf
iret
das
gs
les
int
jecxz
popf
test
add
and
jne
ret
outsb
out
insl
pop
adc
xor
dec
lahf
iret
gs
pop
loope
aas
cmp
sub
loop
addr16
or
mov
cmc
int
pop
mov
sti
out
sbb
lcall
roll
outsl
sar
pop
cwtl
mov
sbb
jb
lods
in
mov
cs
inc
andb
leave
jecxz
mov
clc
push
mov
fcom
fildl
in
push
js
fsubs
sub
jg
cmp
mov
or
cmp
jns
jmp
icebp
mov
dec
into
xor
mov
push
mov
xchg
or
jmp
inc
push
mov
jmp
cwtl
jno
xchg
lahf
pop
sub
pop
pop
mov
ja
test
imul
sub
mov
aad
mov
lea
fldz
aas
inc
push
stos
xor
inc
in
movsb
push
xchg
and
pop
xor
or
xchg
into
jno
xchg
nop
cmp
out
cmpsl
into
lret
mov
out
jg
add
push
sbb
push
lret
xor
sub
loop
mov
outsl
lahf
int
xchg
mov
insb
pop
int
push
out
mov
lock
loop
xchg
push
cltd
clc
sbb
in
test
lcall
fmuls
mov
addr16
cmp
jae
xchg
cmp
rcrb
push
daa
rcrl
jecxz
pushf
ds
mov
mov
js
dec
mov
xor
mov
popf
leave
push
pusha
inc
das
pop
addr16
pop
push
mov
insb
xchg
loopne
scas
xor
mov
mov
mov
push
mov
shrb
add
or
insb
inc
sbb
pop
popa
nop
popf
cmpsl
lret
pmulhw
jmp
sub
adc
xchg
stos
sbb
lret
scas
lock
fdivrs
jp
test
insl
push
aaa
popf
pop
test
ret
hlt
xchg
jl
cmp
adc
cs
pop
cmpsb
mov
push
dec
jbe
mov
xlat
es
rorb
sahf
cs
sbb
cmpsl
mov
mov
cwtl
insb
fwait
stos
mov
cld
mov
mov
rorb
popf
inc
loopne
or
insb
pop
cmp
add
xorb
xchg
test
mov
jle
sub
aam
or
pop
and
testl
mov
lret
xchg
mov
sbb
mov
test
dec
dec
dec
adc
pop
xchg
outsl
jne
test
sub
icebp
es
jns
popa
cmpsl
xchg
icebp
pop
inc
insl
or
idivb
mov
sbb
sbb
xorl
jno
inc
adc
mov
mov
sbb
jmp
dec
ret
cmp
out
dec
pop
mov
jne
lock
ljmp
or
or
mov
rorb
popf
cmpl
mov
push
sub
xchg
cmp
iret
pusha
dec
hlt
cmp
lret
jl
pop
xorb
insl
divl
jo
mov
dec
loop
loop
mov
adc
jno
or
in
cltd
pop
sub
dec
pop
xchg
jno
pop
push
out
or
inc
or
add
add
fdivl
dec
mov
popa
sub
aam
xchg
stos
sbb
jl
dec
rorl
rclb
cmp
mov
ficoml
sarl
bound
add
push
aas
std
xchg
jmp
addl
mov
inc
mov
and
imul
fs
mull
push
push
add
cmpsb
jg
pop
sbb
push
xor
mov
outsl
lret
lcall
dec
jns
test
xlat
mov
push
push
cs
adc
scas
rcr
mov
pop
in
push
jp
jmp
pop
mov
das
pop
add
jbe
fadds
sbb
pop
jae
push
je
mov
das
imul
movsl
inc
add
lock
jmp
push
sbb
dec
inc
inc
lods
lcall
sti
cli
loop
xchg
cmpsb
push
mov
cmp
enter
adc
sbb
sbb
pop
inc
jo
or
xchg
sbb
jp
mov
int
shrl
lods
dec
inc
in
jl
and
push
imul
cmc
inc
xchg
sarl
fmul
icebp
xor
adc
nop
lock
add
jne
stos
cmp
cmp
xor
inc
aam
and
inc
les
or
inc
lds
mov
fbld
jge
xchg
push
in
data16
mov
ret
jns
leave
push
dec
jbe
dec
data16
pop
clc
jp
loop
dec
pop
push
push
jbe
and
loopne
add
xlat
pop
out
mov
fcmovu
xchg
xchg
insb
sub
out
dec
jno
sub
and
and
push
popa
popf
int3
jmp
ss
xor
jg
fistpll
mov
inc
inc
fsubrp
mov
jmp
in
lcall
nop
aad
sub
stos
jp
adc
pop
mov
jge
fidivrl
cs
enter
inc
enter
ret
into
xchg
sbb
mov
movsb
mov
lods
inc
inc
xchg
push
loope
shlb
xchg
add
std
add
imul
sbb
ljmp
jbe
in
fldpi
shrl
add
insl
jbe
sbb
add
xchg
sbb
shll
roll
lahf
xor
and
inc
mov
enter
je
add
int
mov
fbld
and
adc
test
pusha
shlb
pop
mov
fistps
push
sahf
stc
in
sbb
outsb
outsb
mov
mov
dec
sbb
jl
mov
push
cmp
mov
out
mov
arpl
sbb
scas
test
imul
jns
mov
in
push
in
je
pushf
adc
jecxz
movsl
popa
add
ret
mov
mov
inc
mov
rcrl
lods
sbb
dec
mov
lds
mov
mov
jmp
adc
into
mov
xchg
fdiv
dec
pop
inc
jle
aas
pop
cmp
and
cld
shl
dec
jecxz
int3
sbbl
add
add
ret
data16
sti
loop
addb
or
xchg
dec
adc
adc
or
mov
push
add
jle
int
mov
fcompl
shll
push
ja
adc
add
outsb
imul
sbb
sbb
jge
mov
pusha
sbb
fadd
mov
mov
shrb
and
xor
adc
xchg
leave
add
negb
pop
and
in
fucomp
fs
ds
add
xchg
aam
mov
mov
test
and
pop
int
dec
cmpsl
adc
dec
les
dec
jl
and
cwtl
jge
or
fistpl
mov
push
ret
or
dec
pop
and
push
and
and
cmp
scas
inc
pop
or
mov
or
xor
stos
inc
loop
mov
fsubs
xor
jo
and
je
iret
ss
xor
cmc
or
xchg
sbb
jle
jae
xchg
cli
add
lods
xchg
sub
inc
jbe
arpl
ds
in
fisubl
xor
sbb
or
pop
dec
mov
mov
and
xchg
mov
add
inc
jbe
negb
lods
jl
xor
sub
insl
adc
and
mov
out
repz
pop
cmp
adc
int3
mov
mov
or
sbb
stos
cltd
add
pushf
push
xchg
in
add
fdivl
cmp
jmp
dec
out
mov
lahf
nop
mov
cmpsl
or
push
jae
inc
pop
cli
xorb
cmp
nop
mov
adcb
in
inc
repz
ret
add
push
out
dec
adc
add
sbb
mov
mov
outsb
aam
outsl
mov
sub
popf
and
lods
mov
les
mov
lcall
aam
cltd
lret
js
and
sbb
push
push
inc
mov
frstor
sub
cli
jb
xchg
sbb
les
das
fsubs
out
scas
mov
fsubs
lods
jecxz
fstl
pop
rcll
mov
movsl
sub
xorb
and
and
idiv
mulb
and
repnz
lea
cmovns
shrl
fs
outsb
mov
das
stc
stc
jne
push
ret
rcr
insl
add
sbb
aas
mov
cmpl
mov
fs
pop
jns
ret
stc
xor
jp
sub
cltd
inc
sub
cli
shrl
jns
test
test
mov
xchg
inc
outsl
mov
ret
xchg
inc
dec
mov
stos
xor
adc
add
push
pop
js
repz
add
mov
mov
inc
inc
xchg
jmp
stos
dec
repnz
shr
cs
mov
ret
xor
ret
add
mov
or
jge
std
add
imul
push
das
mov
mov
mov
adc
insl
dec
pop
and
sub
ds
dec
or
aad
enter
mov
push
mov
jmp
insb
scas
inc
clc
in
cmpsb
push
jo
fstps
outsl
jb
sbb
repnz
inc
jno
jno
lds
inc
adcb
adc
lret
mov
sti
inc
lea
adc
mov
add
cmp
mov
sbb
push
and
cli
sbb
lret
ss
push
xchg
dec
jo
mov
call
xchg
rcll
mov
dec
sbbb
xchg
jl
outsb
jo
inc
aam
xchg
adc
sbb
cmc
and
int
test
pop
aaa
cmp
jl
das
cmc
fdivl
shlb
lahf
sub
idivb
add
iret
pop
or
lcall
push
call
or
rorb
pop
xor
mov
add
mov
or
or
dec
inc
movl
mov
xchg
iret
ret
mov
daa
addr16
in
rorb
sub
in
leave
or
imul
sub
fadds
dec
push
mov
sub
daa
out
pop
pusha
jae
cmp
jne
cld
in
and
adc
fildll
or
push
jno
ret
out
fmulp
jnp
in
fs
xchg
clc
dec
xchg
test
dec
stos
jp
enter
out
dec
jnp
cmpb
inc
mov
lea
pop
out
ficoml
pop
mov
dec
mov
movsb
inc
das
sub
jno
push
movsb
pop
mov
jne
sub
vaddss
inc
pop
lcall
insl
cld
imul
lret
or
movsl
loop
je
scas
adc
movsb
and
mov
std
or
insl
movsb
pusha
nop
cld
adc
pop
xor
xchg
inc
xchg
pop
dec
inc
js
out
loop
addr16
or
ja
lret
or
pop
lret
push
mov
test
sbb
test
notl
lds
xchg
shrb
adc
sub
lret
or
sbb
pop
push
jmp
add
loopne
mov
add
cli
mov
mov
jne
shll
shrb
sbb
jmp
inc
lret
out
test
std
mov
xchg
xlat
popa
in
rcll
fwait
outsl
icebp
push
arpl
jno
sbb
xor
ficomps
lcall
in
or
repnz
jbe
or
inc
cmp
inc
sub
mov
mov
and
daa
imul
test
mov
loopne
lea
hlt
add
xor
mov
mov
aas
add
loope
dec
fsubrl
cli
adc
and
cwtl
mov
dec
clc
pushf
pop
enter
rcrb
mov
in
or
cmc
pop
aas
sti
es
sbbl
cmp
iret
iret
ret
fmuls
ljmp
adc
pusha
data16
clc
add
sub
ja
cltd
mov
imull
sbb
test
ret
mov
leave
sub
jmp
mov
call
inc
repz
hlt
outsb
mov
movsl
in
js
sti
pop
adc
mov
test
gs
dec
insb
add
or
adc
push
xchg
jo
and
pop
lea
add
cmc
add
or
sub
jne
fsubrp
xchg
xlat
fists
es
imul
adc
aad
pop
sbb
ss
in
mov
cld
jge
imul
add
roll
and
pop
push
subl
mov
sbb
push
cmpsl
xchg
add
fwait
popf
aaa
or
sub
xchg
xchg
mov
fsubl
push
pop
je
add
push
ret
mov
pushf
pop
mov
arpl
jl
lds
mov
or
shrb
out
push
int
pusha
and
mov
cmpsb
sub
push
pop
out
out
popa
popf
cmpsl
xor
push
ficoml
inc
adc
in
ds
loop
cli
pop
lock
push
popf
or
pop
xchg
xchg
popf
in
inc
dec
lahf
shrb
iret
sbb
fwait
and
out
fsubrl
fs
inc
mov
inc
outsb
jge
inc
fstpt
outsl
add
jbe
int3
leave
cmp
xlat
cmp
inc
mov
inc
xchg
loop
add
test
xlat
lret
jo
xchg
jae
or
iret
inc
cwtl
mov
sub
leave
cmp
pusha
movsl
pushf
hlt
lret
repnz
jg
sarl
jmp
add
popf
and
pop
iret
popf
inc
push
loopne
dec
mov
fcmovb
enter
mov
jp
mov
lds
fsts
std
mov
xor
mov
xlat
push
pop
fmull
es
sub
mov
or
adc
bound
mov
mov
lret
movsb
leave
sub
add
fldcw
adc
xor
jns
jle
lahf
pop
sahf
xor
xchg
mov
repnz
iret
dec
push
das
or
sahf
insb
or
jle
imul
iret
fsubl
inc
add
mov
lods
leave
and
arpl
push
pusha
xchg
popa
jle
xchg
xlat
xchg
sahf
adc
adc
sub
xchg
shlb
je
pop
cld
mov
movsl
cli
cmp
pop
xlat
lods
add
xor
scas
inc
or
push
mov
lret
inc
mov
fdivrl
or
imul
xchg
add
sbb
out
xor
cld
nop
movsb
push
push
mov
fidivrs
aas
push
inc
pop
fistpl
nop
jl
mov
filds
push
test
movsl
cltd
sub
icebp
enter
pop
mov
xchg
inc
xor
xchg
add
cmp
ficompl
push
loope
add
lea
jns
in
and
lods
lea
add
jbe
ljmp
mov
pop
xchg
inc
push
adc
xor
fs
add
mov
inc
sbb
jl
dec
lods
push
ja
push
mov
cmc
decb
xor
fistpl
xor
mov
int
aaa
inc
mov
fldl
pop
adc
sbb
jp
fstpt
mov
inc
dec
push
je
aad
push
cmp
loope
imul
xchg
shll
pusha
and
mov
loop
xchg
lods
loop
mov
clc
shl
pusha
loopne
and
fsub
jbe
dec
mov
icebp
push
iret
dec
sub
les
sarl
xchg
nop
rcrl
out
fisubl
nop
aad
push
aas
and
jecxz
mov
data16
and
icebp
or
int
lds
push
adc
jnp
xor
fbld
and
in
sub
push
div
adc
imul
iret
dec
arpl
mov
leave
std
xchg
rcrb
int
push
jp
stos
insb
sub
mov
sbb
push
inc
and
mov
mov
out
push
push
xor
movsl
push
je
lock
fcmovnb
ljmp
and
bound
pushf
testb
jg
outsb
or
mov
rorb
push
inc
or
cmp
loopne
in
or
lret
mov
negb
pop
mov
popa
gs
jbe
sbb
mov
mov
push
data16
addl
push
cld
and
sub
mov
and
xchg
es
cs
sahf
mov
data16
lods
es
pop
aad
aam
cli
sub
mov
mov
or
bound
in
lea
mov
shlb
insb
stc
dec
jecxz
inc
repz
arpl
and
jbe
insl
dec
jns
dec
daa
mov
test
sbb
dec
or
fimull
daa
mov
dec
mov
loope
pop
xorl
nop
adc
cwtl
push
popa
or
mov
ljmp
mov
mov
xor
pop
sub
xor
fiaddl
pushf
mov
push
inc
fdivs
int3
stos
cld
ss
mov
push
xor
bnd
int
xlat
ficomps
outsb
test
or
jmp
push
mov
out
jns
mov
inc
push
imul
mov
jno
jnp
pop
or
sbb
mov
mov
cmc
fmul
imul
xchg
leave
insb
jno
int
mov
mov
test
jp
sbb
rcrb
mov
mov
int3
ds
dec
jle
ja
test
mov
sub
xchg
mov
call
jb
mov
mov
dec
rclb
call
push
inc
mov
ss
sub
inc
push
rclb
mov
pop
mov
lret
jle
arpl
lds
adc
mov
add
nop
mov
sahf
mov
cmc
cmpsl
sub
sahf
and
sbb
and
aas
leave
in
adc
sbb
adc
inc
jae
pop
cmp
mov
adc
cmp
clc
jl
test
xor
push
jmp
cmpsl
inc
add
jp
and
sbb
lahf
inc
aaa
arpl
pop
jbe
jecxz
mov
add
fildll
xor
fsubs
cmc
mov
ftst
adc
sbb
mov
push
dec
ret
jecxz
int3
mov
xchg
mov
movsl
sub
dec
int
jle
shll
mov
cli
leave
or
in
in
mov
xchg
mov
jmp
test
add
dec
xor
scas
les
fs
xchg
jmp
cwtl
icebp
push
dec
pop
repnz
pavgb
jae
cltd
stc
cmp
add
inc
sbb
dec
lret
lret
mov
into
adc
mov
sub
mov
out
pushf
fcmovbe
pop
test
mov
xchg
sbbb
es
push
xchg
fwait
pop
das
xor
test
loop
imull
movl
fistl
nop
adc
pop
dec
neg
mov
mov
bound
into
jle
mov
push
lods
xor
cwtl
pop
loopne
rcrl
ret
sbb
jmp
or
or
dec
pop
pop
push
dec
xchg
test
movsl
fnstsw
int
sub
xchg
dec
movsb
jg
popa
shll
fiadds
sub
mov
loop
arpl
fwait
xchg
mov
ljmp
mov
mov
xchg
nop
push
lcall
or
aad
jmp
xchg
es
ljmp
sarl
aas
adc
bound
pop
in
clc
jne
mov
or
test
mov
xchg
or
jle
jno
mov
fistpl
std
sub
scas
push
xchg
cmp
nop
lea
sarb
cmp
add
scas
add
stos
cmpsl
popa
dec
push
sbb
xlat
cmp
sbb
lret
stos
jb
cmp
push
out
out
inc
scas
scas
adc
call
mov
in
stc
hlt
cmp
rcll
in
ret
addr16
iret
or
cmp
mov
imul
push
outsb
out
in
cltd
out
inc
cmpsl
aaa
dec
shlb
mov
test
leave
xchg
outsl
push
sub
xchg
out
dec
dec
mov
jl
add
mov
hlt
mov
or
add
fwait
jo
roll
jle
adc
ljmpw
cs
sub
fistpll
jle
nop
rorl
aam
jns
test
xchg
xchg
iret
mov
leave
icebp
arpl
lea
or
jmp
mov
insl
mov
xlat
les
push
jns
xor
push
pop
pop
xor
xor
fsubs
adc
aas
popa
imul
push
push
addl
fs
sarb
inc
pop
and
lea
lds
idivb
or
push
cmpsl
push
pop
mov
cmpsl
sarl
and
sbb
mov
push
pushf
notl
or
jle
insl
out
add
movb
mov
test
ds
sahf
dec
add
and
je
push
sub
stos
popa
xchg
call
jae
leave
jle
lcall
sbb
psrlq
mov
lcall
ljmp
sarl
xor
lret
orl
int3
sub
es
or
push
inc
inc
iret
int
or
push
inc
and
ret
mov
xchg
ror
mov
popf
outsb
or
adc
es
cli
fld
jbe
and
add
out
xchg
push
add
mov
adcl
je,pn
lret
xchg
outsl
inc
rclb
adc
fdivl
mov
dec
inc
xchg
mov
or
ffreep
jl
pop
adc
sahf
push
imul
pop
xchg
xchg
mov
xor
dec
sbb
push
pop
sbb
mov
mov
sbb
cmp
xlat
mov
mov
shll
pushf
pushf
js
jmp
mov
xchg
lods
push
inc
fwait
popa
out
dec
aaa
dec
sahf
jecxz
inc
cmc
jp
mov
push
mov
into
clc
mov
cmp
mov
inc
ret
jp
or
push
ret
xor
pop
test
rclb
jne
rcr
mov
dec
jno
push
xor
imul
cmp
pop
push
das
mov
or
nop
jecxz
xchg
scas
sbb
inc
cmp
test
fsubl
push
into
sbb
mov
daa
cmp
sbbb
aaa
mov
cmpsb
inc
adc
enter
invd
aas
mov
ficomps
push
sub
mov
stc
adc
outsb
inc
ret
fwait
cmp
add
lahf
jae
adc
pop
sbb
in
stos
mov
or
pop
dec
lods
jmp
push
das
ret
movsl
test
incl
mov
pop
sub
jb
adc
xchg
ds
xor
mov
inc
jns
ljmp
in
sbb
xchg
mov
xor
jb
mov
jl
inc
insl
sbb
jb
mov
test
mov
shll
mov
pop
push
insl
js
hlt
xchg
lahf
push
xchg
stc
orb
xchg
fsts
out
test
add
pusha
repz
xor
scas
mov
cli
xorl
fwait
jae
pop
popf
pop
ficoml
mov
jo
mov
xchg
js
dec
gs
adc
push
jbe
pop
inc
mov
outsb
xchg
add
es
and
ljmp
or
dec
loop
or
call
sbb
popl
cmp
je
inc
out
jle
xor
pusha
cmc
dec
test
xchg
les
xor
adc
mov
inc
add
push
jp
mov
out
xor
xorb
fcoms
jl
shlb
pop
add
mov
xchg
out
mov
das
jmp
xchg
pop
xchg
pop
stos
inc
push
fdivrs
xor
in
mov
xor
inc
sarl
aaa
add
push
jg
out
andl
stos
cmp
mov
xor
and
mov
decl
into
out
push
mov
movsb
loop
fidivl
std
mov
dec
arpl
pushf
pop
pop
scas
mov
mov
and
insb
shrl
xchg
mov
out
scas
sub
adc
dec
xchg
addb
sti
dec
mov
loopne
mov
cwtl
rcrl
les
insl
xchg
inc
push
adc
jb
inc
stos
fnclex
ret
inc
pop
test
in
fldt
in
fistl
mov
pushf
cwtl
and
sbb
pop
and
xchg
scas
inc
inc
xchg
push
pop
or
mov
dec
dec
rcrb
out
fwait
sub
mov
cmp
mov
mov
inc
mov
test
sahf
adc
mov
push
cmc
les
and
pop
adc
data16
fisubl
or
popf
mov
loopne
movsl
jp
mov
push
scas
lret
fstps
and
ret
sahf
mov
mulb
cmpsl
es
ret
mov
mov
icebp
sarb
je
pusha
push
mov
jbe
xor
sub
dec
sub
outsl
mov
xor
adc
hlt
ret
add
or
sbb
lock
icebp
imul
adcb
add
jp
int3
shr
in
out
inc
in
stc
mov
jb
outsb
adc
fisubrl
jge
push
adc
cli
iret
into
push
in
or
gs
addr16
and
nop
dec
aas
jg
push
sahf
in
adc
push
jecxz
sub
inc
sarb
adc
xchg
cltd
ds
int
jo
adc
outsb
jnp
jb
fistps
insl
and
pop
je
jnp
movsb
xchg
cmc
fwait
imull
mov
cmp
outsb
dec
mov
nop
mov
shrw
adc
push
xor
roll
add
mov
mov
loopne
dec
push
add
ja
aam
mov
bound
repz
shll
jbe
add
leave
or
push
sbb
out
movsl
int
stos
outsb
je
es
pop
das
dec
mov
sarl
push
xchg
cmp
mov
cld
pop
jb
push
ftst
rep
lret
daa
jp
subl
sub
fldenv
fdivp
lods
xor
call
and
cmp
cltd
out
sub
pop
out
call
int
cmp
adc
outsb
xchg
push
or
mov
mov
sbb
inc
shrb
mov
adcl
jae
scas
push
lods
jg
or
push
fcompl
fisubl
mov
in
sbb
dec
cwtl
adcb
cmp
bound
aaa
loopne
incl
sub
hlt
lea
nop
rcl
xchg
mov
add
fisubs
into
dec
sbb
push
sbb
cmc
fcmovnu
fs
iret
mov
mov
add
repnz
push
and
sbbl
js
dec
imul
mov
xor
daa
and
and
jb
out
and
call
in
arpl
xor
sub
sub
cmp
sub
cmp
ljmp
pushf
andl
fidivl
imul
lcall
jg
mov
lds
outsb
lock
jmp
in
or
xchg
pop
jmp
rcrb
rcr
popf
pop
pop
and
mov
sub
sub
pop
movsl
inc
and
test
out
add
pop
or
push
and
cmp
xchg
gs
icebp
out
pushf
mov
mov
cmp
lods
push
rcr
and
adc
repnz
mov
movsb
cmp
imulb
pop
sub
jl
mov
xor
adc
xchg
dec
lea
and
push
arpl
add
pop
fld
cmp
call
adc
rcll
and
push
cmpsb
imul
push
cmc
outsb
out
mov
cmpsl
dec
inc
daa
aas
pop
and
pinsrw
cmp
adc
fwait
push
mul
fwait
mov
int3
mov
pop
push
stos
ljmp
mov
jnp
fwait
mov
add
lret
cli
mul
in
sbb
xor
sub
or
loop
xor
jp
adc
cmp
pop
ret
stc
sbb
loopne
or
ret
and
mov
jl
inc
int
push
mov
dec
xor
jp
inc
pusha
rcll
mov
ror
imul
push
ret
fcoml
xor
fcmovne
cmp
fdivrs
dec
xchg
cs
push
cmp
push
xchg
cmp
aad
ljmp
pop
mov
insb
scas
adc
xchg
into
fdivr
setge
fdivrl
cltd
decb
sub
shll
push
rorl
adc
pop
mov
les
jle
xchg
enter
imul
push
imul
jno
and
lods
jge
movsb
inc
add
inc
lret
xchg
sub
and
or
in
xor
and
cmp
jb
scas
sbb
mov
call
jne
pop
dec
lea
xor
ja
loop
adc
cmp
test
je
aas
sbb
adc
dec
icebp
fistpll
mov
inc
divl
push
cmp
xor
inc
jno
jb
rolb
mov
out
mov
add
dec
xchg
icebp
scas
jb
inc
lods
repz
call
das
or
data16
call
adc
cwtl
inc
pop
cmpl
cld
arpl
aas
fdivrs
lcall
iret
cmp
jnp
pop
xor
call
mov
popa
filds
adcl
shlb
or
or
jbe
idiv
sbb
cmp
rol
test
dec
adc
clc
aam
icebp
push
mov
cwtd
clc
mov
fs
in
sbb
in
stos
addr16
test
push
fimull
cli
cmpsb
bnd
andl
lea
pop
mov
rorl
sub
test
cld
adcl
sub
adc
aaa
les
popa
stos
lcall
loop
ret
test
out
rol
adc
mulps
cwtl
sti
ljmp
mov
mov
xlat
jb
cmp
int3
insl
inc
sbb
sub
decb
mov
mov
xor
jge
fwait
stc
and
aas
sub
cwtl
test
add
dec
push
int
mov
or
loop,pn
xor
sub
sub
dec
jne
movsb
pop
xor
cmp
push
cmp
pop
in
xchg
lahf
cmpb
ljmp
jno
jp
dec
push
push
add
sbb
out
int3
sub
loope
or
xor
add
and
mov
je
push
sbb
push
cmpsb
push
sti
sti
dec
ljmp
pop
push
mov
mov
xor
jecxz
cmpsb
jg
push
pop
sarl
push
dec
inc
sub
mov
in
sahf
lds
fnstsw
faddl
inc
jl
adc
stc
hlt
insb
fldenv
insb
adc
cld
xchg
sbb
pop
leave
mov
rcrl
cltd
mov
out
cwtl
jns
adc
daa
or
cmp
xor
dec
addb
dec
outsb
cmp
addr16
push
shrl
mov
out
jae
pop
andl
pop
xchg
mov
jle
icebp
js
cmp
daa
lods
pop
fimull
sub
push
mov
jge
int
aaa
xchg
xchg
in
popf
lods
stos
outsl
out
mov
cmpsl
sub
in
shll
xor
sub
out
imul
fcompl
shr
mov
mov
out
jo
sti
cltd
xchg
out
test
outsl
sub
mov
into
add
jo
test
dec
push
dec
popf
push
push
lahf
pop
insb
clc
aad
xchg
add
movsl
int
out
push
add
push
dec
stos
mov
jle
sbb
sbb
dec
push
nop
lret
sub
loop
out
add
movsb
mov
arpl
mov
rolb
xchg
testl
or
mov
mov
jns
popa
add
jmp
pop
jo
jmp
inc
mov
movsb
ljmp
sbb
popf
into
jae
sub
repz
lods
xor
sub
dec
lahf
scas
lret
mov
fwait
add
add
push
das
pop
jmp
push
mov
jge
aam
xor
push
idivb
pop
sub
xchg
xchg
fsubs
sbb
or
les
dec
ret
mov
cs
cltd
outsl
jns
push
stos
adc
sbb
lcall
cmp
call
clc
lods
stos
bound
sbb
lea
stos
movsl
cwtl
push
cmp
out
jnp
push
sti
xor
cltd
jbe
dec
iret
push
mov
sbb
fs
divb
out
ret
out
std
jl
cld
mov
dec
lea
push
xchg
repnz
inc
out
dec
or
ret
pop
rcrb
aaa
pusha
sbb
inc
out
jae
loop
mov
clc
in
out
or
call
sarl
dec
lock
or
addb
aas
xchg
lcall
imul
daa
icebp
sbb
test
daa
aam
jmp
add
mov
imul
xchg
and
ds
sahf
gs
mov
jnp
mov
addr16
ljmp
cltd
and
push
cmp
outsb
repz
ds
pop
shll
repz
or
lods
adc
aaa
add
sbb
test
push
sbb
push
xor
icebp
fbstp
shrl
in
cli
xchg
or
insl
pop
jno
clc
scas
sub
mov
sub
xchg
sbb
int
js
aaa
je
ret
negl
insl
xor
bound
dec
cmpsb
mov
dec
pop
or
mov
add
xor
sbb
out
mov
mov
xlat
in
mov
das
adc
and
fwait
addr16
cmp
rolb
or
xor
cmp
ret
xchg
cmp
jb
call
fldl
and
xchg
aad
and
cld
pop
cmpsb
scas
popl
clc
test
int
dec
adc
xor
push
add
mov
lcall
shl
lods
sbb
je
test
out
jbe
in
mov
repz
mov
fs
xchg
inc
outsb
std
cmpsb
and
insb
inc
xchg
sub
test
jp
jge
sub
dec
test
sub
testl
sbb
outsl
or
push
jecxz
sbb
iret
xchg
repz
lods
in
cmp
test
call
rorb
cmp
outsl
es
inc
fdivrl
mov
sub
pop
loope
and
xchg
popf
es
xchg
ret
xor
or
jnp
or
xchg
add
movsb
loope
mov
jge
pusha
jnp
insl
popf
out
shll
popa
sub
js
jnp
out
xor
sub
fs
xor
jnp
push
push
mov
add
cmp
cmp
bound
xchg
jb
stc
xor
xchg
mov
es
and
int3
xor
cmp
mov
xor
jle
shll
pop
sub
rclb
push
push
fwait
xchg
sub
inc
pop
aaa
imull
fs
test
iret
loop
sub
xchg
fdivrs
jmp
scas
jnp
lcall
pop
mov
adc
dec
outsb
repz
enter
clc
in
arpl
ret
xlat
mov
out
sub
adc
sub
ja
lock
mov
jl
scas
cltd
add
xchg
mov
jne
es
xor
sbb
jne
stc
lds
aas
into
mov
fiadds
add
jae
loop
mov
mov
int
sub
rcll
scas
mov
cmp
rcrb
call
dec
or
inc
sub
inc
adc
mov
movsb
and
and
aaa
inc
mov
jge
popf
cmp
dec
jne,pn
rorl
insl
stc
xchg
push
inc
inc
dec
int
out
xlat
and
cvtps2pi
xor
mov
filds
sub
lock
outsl
dec
jmp
enter
mov
popf
add
and
add
outsl
repnz
cwtl
out
sub
adc
pop
pop
dec
push
cvttps2pi
push
push
sbbb
mov
cmpsb
mov
push
fs
inc
test
lock
cmpsl
es
sbb
mov
cli
or
cmp
cmp
inc
or
jge
jl
lea
sub
xor
loopne
pop
lds
mov
rorb
scas
ja
cmp
fistl
mov
adc
fldenv
lahf
movsb
push
int3
jl
cmp
xor
andb
and
fwait
push
aas
cmpsl
call
mov
loop
loopne
dec
fs
cld
aam
cwtl
xorl
nop
pushf
inc
and
sub
insl
insl
ds
adc
mov
mov
les
push
push
xchg
lea
leave
adc
ss
loope
iret
sub
pop
popa
cmp
loop
pop
inc
push
aaa
xor
dec
xchg
sbbb
gs
out
and
out
clc
sbb
movsl
pusha
rolb
mov
pop
pop
xchg
pop
and
mov
testb
sbb
jbe
xchg
rcr
sub
nop
mov
xchg
push
jnp
jecxz
movsb
lds
or
mov
pushf
shlb
sub
xchg
adc
shll
andl
xor
jg
add
aad
jns
bound
imul
mov
pushf
jnp
js
lahf
and
xor
ss
pop
jmp
int3
mov
mov
adcb
adc
je
stc
push
je
lret
xor
fildll
cli
jnp
jp
ss
sbb
sarb
loopne
and
jge
pop
call
jmp
mov
jbe
test
in
mov
enter
jecxz
sbb
outsl
dec
mov
mov
mov
and
push
stc
fwait
push
insl
or
jae
mov
rcrb
sbb
out
mov
push
cmp
cmpsb
push
stos
lea
test
ret
mov
adc
cwtl
cmc
mov
rcrb
scas
pop
mov
in
xchg
add
neg
or
and
mov
das
dec
xor
mov
icebp
fidivrl
fcoml
dec
clc
jo
fdivrl
lods
mov
mov
addr16
ljmp
or
hlt
inc
and
mov
fidivs
fldenv
ficoms
sbb
orb
roll
shr
jae
stos
xchg
fadd
dec
xor
mov
outsl
sub
aaa
cmpsb
jge
mov
xchg
popa
fwait
sti
lahf
clc
adc
push
std
push
cmp
outsl
mov
jp
jno
mov
mov
jns
ljmp
lea
mov
int
sub
shl
adc
ret
sti
mov
adc
ss
push
in
push
xor
cmp
sbbb
pop
fwait
xchg
rorl
mov
inc
rcr
leave
in
mov
aaa
jp
xor
jb
pop
adc
add
and
xor
inc
jno
pop
mov
loop
jno
mov
pop
push
pop
sbb
xor
mov
lock
ja
ss
pop
push
pop
pop
enter
inc
icebp
fists
iret
mov
into
sti
mov
jb
dec
bound
cmc
sub
fimuls
cmp
push
cmp
adc
div
fdivs
sbbl
icebp
and
lret
add
or
movsb
rol
icebp
and
fwait
mov
iret
repnz
addl
jmp
mov
mov
test
popa
xchg
insl
decl
cltd
pushf
and
xor
stc
test
out
mov
inc
dec
maskmovq
mull
jne
jle
or
sbb
xchg
sbb
dec
sbb
jle
leave
push
and
add
push
es
xor
sbb
jne
cmp
xorb
cwtl
mov
addr16
in
lret
dec
sbb
int
out
popa
loopne
popf
in
cmp
and
test
push
iret
push
push
mov
dec
daa
and
inc
xor
sub
rorb
jo
inc
test
pop
dec
mov
cmp
jnp
test
inc
stos
popa
lock
fidivrl
loopne
jl
stc
push
je
add
repz
enter
mov
dec
pushf
push
cmc
filds
sub
fwait
jg
push
or
mov
push
cmp
roll
mov
cli
aam
hlt
adc
adc
sub
mov
je
cmp
sbb
sub
mov
scas
xchg
inc
outsl
xchg
push
push
lret
lods
sbb
sti
xchg
icebp
cmp
sub
shl
dec
dec
sahf
xor
ret
mov
insb
xchg
cwtl
jns
fcomi
add
rcrl
shll
xchg
xchg
fwait
lods
mov
mov
les
cli
xchg
add
mov
test
shr
mov
sub
iret
dec
lret
addr16
lcall
push
mov
sub
push
ret
stos
nop
lret
fdivrl
cmp
in
push
das
mov
mov
jne
les
popf
scas
push
pop
imul
pop
mov
icebp
cld
lods
dec
int
es
cli
push
xor
mov
lock
inc
out
mov
or
ljmp
icebp
popf
cld
jp
dec
inc
mov
rep
add
cmc
dec
or
jp
sbb
dec
inc
inc
mov
leave
stos
cmp
xchg
iret
aaa
in
jnp
lds
aas
jecxz
pushf
cmc
out
ret
ret
add
popf
xchg
jmp
dec
add
mov
fildll
jg
pop
dec
jmp
outsl
out
loope
pop
mov
or
adc
adc
in
or
pop
pop
lea
out
hlt
and
fisubrs
push
test
test
xchg
pop
popf
fwait
stos
cwtl
sbb
adc
adc
cmp
jmp
pop
cld
push
sbb
insl
shll
outsb
or
stc
test
dec
int3
movsl
cwtl
pusha
jnp
out
lahf
jne
scas
icebp
pop
roll
cld
cld
int3
xchg
stc
fimull
xchg
out
cmp
jns
pop
js
xchg
jns
inc
push
cmp
or
xor
test
jo
push
sbb
into
sti
addr16
mov
dec
fimull
inc
push
mov
push
cli
or
pop
into
dec
jp
nop
cltd
inc
scas
mov
and
pusha
popa
stc
movsl
popa
dec
lahf
mov
fs
pop
pusha
test
pop
fs
push
leave
fistpll
mov
pop
outsb
sbb
aaa
lds
inc
jl
push
jbe
loop
xor
sahf
aaa
sti
out
add
xchg
sarl
repz
in
iret
fs
out
daa
jle
xchg
inc
in
leave
fs
loop
test
jb
nop
insl
sbb
in
jno
dec
mov
xor
or
jmp
inc
nop
pop
test
cmp
jbe
mov
xchg
test
int3
xchg
adc
inc
cwtl
sbbb
mov
pop
mov
lahf
jmp
out
movsl
nop
lcall
mov
std
insb
neg
pop
popa
sub
mov
xor
decl
and
rclb
xorb
and
aam
jmp
mov
jno
leave
pop
cmp
decl
stos
pop
shlb
aam
test
iret
xchg
jecxz
int
add
adc
xor
push
sub
lock
mov
mov
dec
add
push
clc
stos
icebp
repz
sub
ret
sbb
pop
push
adc
dec
es
pop
mov
test
insb
daa
jne
iret
mov
icebp
push
mov
mov
add
or
sbb
loopne
jne
cmp
jo
rcrb
out
iret
add
fdivrp
testb
popw
inc
or
es
fists
sbb
je
push
roll
mov
or
pop
xlat
inc
sahf
scas
cli
out
push
pushl
xor
add
jge
pop
dec
test
fdivs
jg
pop
jp
cwtl
push
cmp
divl
dec
pop
mov
dec
mov
xor
push
sahf
mov
mov
in
or
adc
aad
pop
ljmp
loope
jl
adc
cmp
xor
out
jl
jnp
mov
dec
mov
sub
aas
inc
pop
xor
movsb
iret
sub
mov
push
inc
repnz
das
xor
push
adc
mov
or
mov
sub
or
arpl
inc
jb
mov
push
clc
ret
lahf
stos
sub
imul
xor
fwait
mov
xchg
pop
mov
outsl
mov
test
fsubs
push
mov
subps
icebp
iret
sbb
cmpsb
jae
xchg
mov
xor
push
adc
xor
iret
mov
mov
fdivr
dec
cmp
mov
into
sub
cs
push
jo
pop
leave
outsb
stc
cmpl
ret
jg
loop
stos
sub
shlb
imull
xlat
int
adc
fidivrl
dec
add
pop
sahf
or
add
fiaddl
js
test
inc
ficomps
mov
cmp
cmpb
push
mov
dec
push
jo
sub
jl
jne
adc
xor
outsl
and
sbb
subl
jle
scas
ret
cmp
pop
repnz
movsb
call
push
add
je
dec
push
outsl
jbe
mov
daa
fnstenv
or
and
nop
mov
loope
dec
out
mov
out
inc
sub
cmpsb
or
testl
aad
add
aam
call
popf
cwtl
or
mov
dec
dec
inc
stc
mov
les
out
cli
dec
jno
iret
add
insl
cmp
insl
pop
sbb
in
inc
in
xor
jp
hlt
mov
dec
add
or
insb
das
idivl
loope
hlt
push
cmp
insl
rclb
cmp
imulb
sar
stos
ret
jbe
cmp
fdivr
or
mov
cld
ja
cltd
xor
std
add
in
rolb
add
aam
inc
add
pop
iret
cmp
test
mov
pop
jmp
inc
fcomip
mov
outsl
jb
imul
mov
ret
inc
divb
push
jns
and
xor
push
mov
fcmovb
cmpl
fsubrl
fxsave
out
push
push
das
jb
lret
enter
stc
fsubs
jmp
dec
xchg
mov
lods
in
inc
dec
sahf
pop
xor
ficoml
cmp
adc
and
xor
cli
sbb
addl
push
push
jmp
stc
and
andb
insb
add
adc
fisttpll
and
fsubrp
cs
and
lds
adc
es
push
inc
outsb
and
pop
push
int
loope
push
fs
sub
scas
int
xchg
jmp
nop
jle
pop
mov
xchg
or
call
pop
xlat
cmp
es
jbe
aam
mov
mov
pop
and
jle
sbb
push
sti
pop
inc
pop
jae
xchg
cld
pop
idivb
add
das
in
sub
jge
repz
std
lret
or
test
repz
xor
jbe
scas
push
int3
or
mov
xchg
xchg
jb
fcmovu
ret
icebp
adc
dec
idivl
xchg
dec
loop
add
and
mov
inc
sarl
das
mov
cmp
dec
xchg
gs
add
inc
mov
and
mov
add
mov
dec
dec
jae
test
sbb
sbb
pop
shll
lahf
push
test
mov
push
incl
fistps
rcr
cs
dec
fcom
movsb
cs
mov
mov
adc
fwait
stos
outsb
or
cltd
lahf
add
negb
rcrb
mov
loope
inc
iret
inc
inc
mov
xchg
fs
aam
bound
outsl
or
fnstenv
adc
xor
leave
sbb
das
add
iret
aad
sbb
insb
rcl
and
push
dec
imul
fiadds
cmc
loope
loop
push
daa
mov
xor
fbstp
mov
mov
mov
xchg
repnz
jg
mov
cld
dec
repz
mov
into
ljmp
inc
fnstenv
and
xchg
pop
cmc
cmpsl
and
leave
popf
cli
cmp
shl
push
aad
sbb
orl
test
imul
bound
mov
push
add
mov
testb
or
enter
sti
std
xchg
mov
push
push
dec
fnstcw
aaa
dec
scas
add
xor
or
sti
and
or
pushf
push
in
push
push
mov
std
sarb
dec
aas
and
pop
pusha
mov
scas
sub
cli
xchg
xchg
adc
and
pushf
loop
mov
mov
mov
adcb
int3
jno
imul
filds
mov
adc
fwait
les
dec
and
dec
xor
loop
orb
jmp
add
ret
ss
xor
cltd
out
ss
outsb
push
jae
fsubl
lods
pop
cmpsb
add
aas
jbe
pushf
fwait
push
out
pop
ljmp
rolb
xchg
inc
into
inc
jecxz
push
sub
xor
xchg
out
cmp
cwtl
push
push
mov
adc
ror
mov
aas
mov
je
std
push
add
mov
pop
fbld
das
mov
lds
jle
test
pop
jg
cmp
ret
icebp
call
push
mov
ljmp
out
imul
mov
dec
inc
xchg
xchg
loop
out
lods
pop
dec
jo
imul
jmp
mov
push
jmp
es
lidtl
cmp
push
mov
in
xor
orb
mov
aad
mov
mov
fstpl
insl
pushf
ret
out
jno
sbb
pop
cmpb
ds
mov
rclb
dec
lcall
inc
mov
out
add
jo
lahf
test
pop
xor
movsb
jns
mov
mov
cmp
sbb
add
les
mov
adc
dec
and
mov
xchg
jae
inc
out
loope
sti
rorl
pop
gs
mov
aas
inc
lret
and
ljmp
int
lahf
inc
xor
mov
mov
in
push
leave
repz
std
cmp
and
jnp
mov
int3
mov
rcll
and
pop
sub
mov
sbb
sar
sub
sbb
xchg
sub
and
inc
es
stc
mov
sbb
mov
gs
jae
bound
lret
mov
hlt
jbe
jmp
sbb
pusha
and
cltd
xor
outsl
xchg
test
sti
lahf
or
sbb
xchg
jbe
mov
cmpsl
jne
add
xor
popf
sub
mov
cmpsb
mov
dec
adc
push
test
sub
inc
outsl
cmp
inc
clc
pop
imul
in
sbb
dec
sbb
adc
leave
xor
daa
or
stc
mov
cwtl
jno
in
cli
ja
repnz
sbb
out
fimull
push
jge
test
jns
fmull
aad
adc
push
sub
fdivl
test
mov
insb
fdivr
fidivs
push
mov
in
mov
ret
into
ljmp
rcl
lret
out
jnp
inc
aaa
repnz
lods
outsb
aad
cld
movsb
xchg
std
xlat
jns
add
lret
mov
push
and
repnz
or
fimuls
ljmp
insl
push
lods
lods
imul
cmp
push
repz
sti
pop
add
iret
push
mov
mov
pusha
ret
out
iret
or
jle
push
lea
and
mov
xchg
add
fldt
movsb
addb
mov
outsb
xor
or
pop
sub
int
cmp
mov
fs
cmpl
and
inc
clc
cmpsb
jmp
pop
add
addl
xchg
sub
xchg
sub
sub
cmp
mov
and
test
in
push
pop
out
pop
inc
push
jae
push
aam
call
xchg
int3
sbb
rol
xorb
imul
in
mov
adc
sbb
mov
adc
movsl
mov
sbb
jns
sbb
lods
mov
fcmovu
mov
and
xchg
push
insb
mov
dec
xchg
xchg
pop
in
adc
faddl
sub
out
mov
orl
mov
shrb
add
sub
sub
cmc
sahf
ds
fldenv
pop
sbb
mov
and
dec
xchg
sbb
sbb
jge
mov
pop
jmp
es
repnz
mov
adcb
test
sub
push
cmp
lcall
mov
xlat
cmp
adc
xchg
je
dec
out
push
dec
push
pop
jb
mov
out
pushf
out
jg
fmul
loop,pt
cmpsw
lcall
xchg
sbb
lock
xor
leave
test
pusha
fcompl
rorb
into
dec
jg
out
aam
sahf
and
mov
mov
repz
mov
mov
dec
pop
imul
lret
flds
in
xchg
in
outsb
xlat
mov
fnstenv
xchg
das
arpl
mov
lock
push
fldcw
adc
lods
cmp
loopne
sbb
sbb
sub
lahf
iret
ss
cwtl
dec
sub
sub
add
or
pop
outsl
jecxz
sbb
mov
push
pop
sub
lcall
inc
cs
mov
or
add
mov
push
fimuls
sbb
jp
dec
mov
icebp
push
hlt
adc
push
mov
xchg
cld
sarl
shrl
lea
pop
or
lret
insb
sti
in
stc
lahf
call
inc
scas
or
jo
xorb
mov
aam
js
les
int3
dec
lods
dec
test
imul
push
xchg
xorb
testl
push
cli
test
lds
repnz
into
adc
xor
and
xchg
dec
push
repnz
aas
ficomps
cmpsl
xor
or
movsl
sub
aam
js
push
fwait
adc
popa
aas
clc
shrb
push
cmpsl
fistps
and
lahf
push
jecxz
mov
push
sbb
dec
pextrw
push
jns
xchg
mov
mov
loop
sub
inc
popa
xchg
sub
popa
out
ss
jbe
or
cli
ljmp
cmp
mov
das
jg
rcll
push
cmp
adc
gs
jmp
scas
pop
or
mov
iret
test
inc
fsubl
pop
sub
mov
iret
int
pmullw
inc
xor
cmp
jo,pt
xchg
jmp
add
jg
leave
cmpsb
test
mov
pop
cld
add
mov
repz
lock
fwait
popa
lods
xor
enter
mov
push
xchg
fs
push
jae
sbb
je
lock
push
iret
dec
inc
pop
imul
notl
mov
jecxz
cmc
mov
lds
add
clc
gs
jbe
xchg
daa
or
mov
pop
mov
add
xchg
imul
imul
adc
mov
popa
and
sub
xchg
outsl
pushf
mov
mov
in
aad
shl
push
mov
jb
mov
cmc
or
fnstcw
popf
push
mov
sub
es
pop
mov
adc
int3
insb
mov
out
dec
jge
mov
adc
outsb
loope
scas
xor
jg
sub
test
jne
popa
cwtl
adc
ja
dec
insl
rclb
aas
into
adc
and
sbb
push
movsl
and
mov
mov
jns
xchg
pop
push
add
das
add
mov
jne
jmp
pop
ror
adc
fbstp
xchg
test
jb
mov
adc
outsl
daa
xor
xchg
jae
mov
and
fdivl
or
mov
shr
or
mov
popf
and
jle
cmp
lods
mov
pusha
mov
js
xor
jecxz
lret
jle
and
xor
enter
and
or
icebp
int
int
das
insl
xchg
and
filds
mov
test
cmp
fiadds
mov
pushf
jne
fidivrl
mov
fistps
mov
pop
cwtl
pop
dec
sub
out
adc
enter
ret
pop
and
dec
or
movsl
dec
lods
imul
push
cmpsl
sub
mov
mov
lods
loop
jnp
gs
or
cmp
cmp
and
fiaddl
mov
mov
sbb
or
cmp
iret
dec
fldcw
int
movsl
ficomps
push
xlat
mov
loopne
in
out
lahf
pop
xchg
pop
mov
pop
add
pop
add
xchg
ds
shrl
leave
jmp
in
cmp
xchg
icebp
dec
dec
mov
dec
xchg
test
or
inc
xor
mov
pop
fs
xor
lods
mov
dec
pop
in
adcb
sub
jne
insb
clc
and
dec
mov
mov
cmp
cli
sub
sub
xor
gs
sbb
out
lret
sbb
mov
fs
push
add
xor
adc
adcl
lahf
cmpl
cmp
push
call
mov
fnstsw
das
pushf
or
adc
mov
ret
inc
jle
dec
mov
leave
arpl
cmp
rorl
repz
push
xlat
aam
and
aad
aas
js
sbb
dec
mov
out
std
ret
fnstsw
pop
push
outsl
xchg
or
pop
xlat
inc
adc
loop
inc
cmc
mov
pushf
or
xor
mov
mov
xor
lock
inc
fistpl
cmc
push
nop
cltd
adc
je
out
cmc
dec
outsl
add
lock
cmc
sar
std
les
lret
and
in
std
inc
cmpsl
dec
cmp
pop
adc
adc
push
mov
inc
icebp
popa
notl
xorl
mov
mov
fs
stc
fnsave
xchg
cltd
loope
inc
inc
nop
stc
add
inc
fdivl
and
in
ljmp
jno
xchg
xor
fsubrl
insb
and
mov
push
push
and
das
pop
mov
insb
insb
cld
js
out
cs
cwtl
imulb
jnp
cs
lret
pusha
popa
cmpsb
jg
adcl
aam
cwtl
pop
push
div
xchg
and
inc
xor
mov
mov
ss
lock
shlb
addb
aad
sbb
adc
scas
iret
into
push
sbb
lea
gs
or
dec
or
jmp
jnp
xor
dec
movl
decb
les
adc
dec
sub
mov
lcall
sub
cmpsb
call
push
call
add
mov
stos
mov
ss
push
inc
mov
out
fistpll
movsb
div
mov
push
aad
cld
dec
sbb
ljmp
rclb
add
xor
xor
shlb
jle
or
dec
or
xchg
push
pop
push
push
add
pop
into
hlt
push
mov
in
jp
push
cmpsb
jns
aas
insl
insb
add
lock
add
cld
loopne
cmp
pop
nop
test
loop
jnp
cli
pop
test
mov
cmp
out
in
adc
xlat
xchg
movsb
in
test
inc
into
test
cmpsl
js
imul
sub
in
inc
xchg
popa
adcb
xchg
cmp
xor
sub
repz
loope
mov
and
pop
aam
and
repnz
out
into
jge
cmp
aas
pop
push
sahf
fistl
call
test
pop
out
rclb
aaa
subl
sti
sub
lods
lahf
aam
and
cmp
dec
xadd
pop
arpl
fs
mov
xor
mov
fcoms
push
insl
mov
add
add
sti
mov
subb
pop
faddp
loopne
bound
sbb
mov
add
xor
enter
jne
loop
mov
sbb
mov
adc
sbb
adc
mov
pop
mov
sub
lahf
inc
hlt
and
js
ret
sbbl
hlt
stos
nop
rcr
sbb
shrl
inc
popf
dec
mov
or
nop
cmp
aad
arpl
popf
stos
lcall
sbb
insb
int3
filds
popf
and
xor
in
mov
adc
sbb
loopne
fldt
aad
adc
xor
mov
rcl
mov
jg
xlat
xor
xchg
shll
nop/reserved
or
gs
movsb
sub
aad
stc
and
leave
stc
out
iret
or
mov
jecxz
test
nop
pop
mov
mov
mov
ret
insl
lods
in
loop
loopne
popa
jmp
mov
in
mov
jg
or
cmp
mov
movsl
inc
or
scas
shlb
dec
out
aam
jbe
pop
xor
xchg
int3
pop
mov
insl
pop
sub
adc
push
jmp
fildl
xor
sub
sub
lret
push
add
test
push
je
push
divb
test
cmpsl
out
xchg
jmp
mov
adc
mov
scas
cmp
xchg
push
arpl
jmp
hlt
ja
aam
sti
jge
jb
sbb
ffree
dec
fimuls
sub
inc
popa
dec
test
test
mov
gs
das
xor
adc
xchg
sbb
xchg
cli
fidivrl
mov
call
add
fcomps
or
jae
iret
pop
push
mov
into
mov
jne
ret
es
push
push
out
mov
jns
xchg
adc
jmp
or
pop
push
cmp
testb
inc
or
decb
sbb
in
mov
xor
cld
rolb
jbe
cmp
dec
jae
lock
stc
in
xchg
xchg
cmpl
cmp
inc
xchg
add
pushf
call
rolb
test
or
movsb
imul
and
out
jmp
in
iret
jne
das
rcll
or
loop
pop
sti
lds
xchg
sbb
scas
fistl
iret
dec
pop
enter
and
and
out
cmp
out
fsubrl
sub
xor
pushf
push
or
xchg
mov
dec
mov
pushf
pop
or
ret
mov
cs
in
mov
pop
sub
sub
jl
jo
stos
ljmp
push
dec
inc
push
dec
int3
popf
lahf
or
dec
popf
cmpb
test
int3
loope
sti
in
repnz
mov
pop
adc
dec
sbb
xchg
pop
lea
or
sti
jns
mov
iret
ljmp
dec
sbb
shrl
mov
imul
pusha
nop
add
stos
dec
jge
cltd
fdivl
repnz
xor
pop
pop
test
push
or
xchg
and
adc
js
test
dec
int
sbb
adc
mulb
xor
icebp
push
nop
push
out
shlb
das
dec
xchg
lods
inc
xor
cwtl
cmpsb
or
ficoms
add
stos
dec
jns
mov
push
jb
jne
xchg
push
add
nop
mov
aaa
push
fisttpll
xor
in
xchg
jb
pop
jne
push
sub
imul
xchg
push
xor
and
repz
iret
jecxz
lahf
jae
bound
addr16
sbb
test
hlt
in
cld
outsb
pusha
iret
cmp
mov
shlb
xchg
aaa
mov
push
sbb
mov
movsl
loope
test
lds
xor
aam
and
sbb
push
fdivrs
daa
clc
mov
push
nop
sub
lahf
pop
push
lea
out
addl
push
mov
lret
enter
orb
mov
cmc
xor
pop
xchg
push
xor
dec
repz
xor
sub
shr
divl
jo
movsb
push
scas
dec
push
mov
sub
xor
imul
sub
mov
jp
dec
jg
or
mov
jne
es
lods
je
xchg
ss
dec
loopne
daa
nop
mov
icebp
stos
lock
mov
mov
push
xor
xor
aad
fnsave
cwtl
and
sbb
mov
add
jl
fwait
popa
jne
mov
xchg
xchg
cld
test
add
loop
push
imulb
mov
stc
sub
sub
lret
jmp
mov
addl
sub
or
sti
fcmovnbe
add
imul
fmull
jp
dec
push
loope
flds
lods
test
push
ja
sar
lods
fidivl
sbb
sub
and
insb
cli
adcb
sbb
dec
pop
and
test
pushf
int
jecxz
pop
adc
ljmp
adc
jne
jb
loopne
xchg
mov
jle
add
mov
call
jbe
push
fwait
xchg
ds
lods
mov
das
xchg
push
cwtl
inc
aaa
cld
loop
jmp
dec
bound
out
jl
test
mov
inc
fwait
xchg
hlt
lret
fsubr
loop
cwtl
push
add
jmp
pop
jnp
and
out
push
fs
into
dec
test
push
fisttpll
fldcw
out
sbb
scas
mov
mov
inc
mov
stc
fiaddl
add
scas
pop
lods
sbb
ljmp
rolb
xor
shr
inc
or
scas
das
sub
jns
push
shl
test
xor
jge
push
adc
jbe
dec
jecxz
in
push
outsl
imul
outsl
and
jp
aam
cmp
and
mov
jmp
and
lret
pop
cld
cld
mov
mov
add
pop
xor
shlb
adc
cmp
add
cmp
sub
mov
and
cmpl
movsb
adc
cmc
aaa
add
pop
dec
cmp
mov
or
xchg
inc
push
rorl
mov
out
push
and
cltd
dec
mov
mov
std
adc
cmpsl
outsl
ja
add
jmp
das
lods
jecxz
mov
dec
scas
pop
cmp
call
in
jl
jl
xchg
jle
lods
js
std
adcb
xchg
and
or
gs
pop
xchg
pop
addr16
cmc
movd
and
mov
rolb
rol
mov
xor
inc
jae
sbb
in
pop
loopne
hlt
jp
jmp
cltd
mov
adc
fwait
mov
jle
jecxz
mov
lea
jmp
sbb
xor
aas
je
and
stc
in
inc
iret
dec
test
mov
mov
xchg
sub
mov
or
adc
rolb
loope
scas
sub
jne
and
sbb
movsl
or
inc
lods
mov
push
in
out
sbb
push
mov
repz
inc
mov
in
xorb
xor
enter
lock
es
lret
mov
sbb
aas
les
stc
mov
pop
clc
push
xchg
mov
test
stos
popf
int3
cmp
mov
movsl
fcomp
dec
mov
pop
add
mov
xchg
cltd
add
push
pusha
test
inc
dec
jmp
testl
shrb
outsl
mov
push
mov
xor
jmp
xlat
pop
jo
or
mov
xchg
pop
or
data16
dec
fistl
xor
mov
fwait
mov
push
add
push
mov
cs
mov
lret
xorl
jbe
mov
pop
pop
sbb
incb
out
cmp
push
imul
sub
adc
sub
outsl
icebp
pushf
mov
jg
adc
imul
mov
xor
test
sbb
iret
inc
sbb
out
inc
fsubrs
jecxz
inc
dec
arpl
cmp
or
ds
lea
jl
sub
test
pusha
test
cmp
dec
bsf
and
call
add
in
and
testl
loopne
adc
inc
push
or
cmp
ficoms
fs
movsbl
out
sub
push
push
movb
push
or
sub
loope
dec
xchg
test
ret
mov
push
repz
out
rcll
mov
int
or
arpl
stos
jmp
lods
arpl
cmp
int
pop
lods
inc
xchg
adc
pop
fadd
pop
sbb
lods
sub
jae
lcall
pop
xchg
add
movsb
inc
push
xchg
ljmp
insl
adc
dec
xchg
ss
push
push
hlt
xchg
jbe
and
and
pop
or
dec
dec
push
push
mov
mov
scas
push
lea
and
lahf
mov
shlb
adc
pop
mov
xlat
mov
dec
out
lds
cmp
push
and
mov
movsl
jns
sbbl
pop
idivl
xchg
add
cmp
stc
pop
ret
and
dec
jmp
cmp
scas
fadds
test
subl
sarb
cwtl
faddl
mov
clc
jo
jmp
jbe
sub
sbb
pop
fsubs
into
xor
mov
mov
adc
jle
mov
bound
push
fsubrl
sub
mov
jge
lds
imul
cltd
jne
ljmp
push
jbe
mov
fdivl
in
sbb
add
add
jecxz
test
dec
mov
iret
push
iret
iret
loop
int
js
addl
xchg
repnz
push
xor
or
cmp
cmp
subb
push
adc
iret
fists
pop
jae
adc
hlt
data16
sti
lods
ljmp
dec
mov
outsl
orl
push
jle
mov
sbbb
inc
out
sub
mov
pslld
mov
movsb
popa
mov
push
sub
jmp
and
dec
mov
int3
enter
xor
mov
hlt
or
cmpsl
std
mov
pusha
and
jp
sahf
mov
pop
lahf
inc
jge
sbb
sub
push
lcall
clc
adc
lahf
sbb
adc
shll
sub
xor
insl
mov
adc
xor
xor
xchg
sbbb
cmp
jns
xchg
cltd
test
pop
mov
loope
mov
cmpsl
aaa
rcrl
lcall
test
dec
push
mov
movsb
scas
jp
icebp
mov
mov
xor
cmc
sub
sahf
cli
frstor
pushf
adc
mov
mov
pop
inc
xor
lret
mov
sbb
rcrl
pop
or
jmp
jg
jb
cmp
sbb
adc
cmp
dec
cmp
clc
adc
dec
leave
xor
inc
mov
jecxz
mov
clc
lahf
pop
mov
aad
fistpll
je
xor
jns
and
stos
sbb
xchg
xchg
mov
pop
adc
bt
aaa
ficoml
pop
icebp
std
jbe
js
jl
ds
fcoms
ss
dec
popl
js
xchg
call
inc
insb
mov
mov
test
mov
loop
movl
scas
neg
add
loopne
pop
adc
add
scas
stc
arpl
push
xor
imul
testb
addl
rorl
ret
cmpb
cld
or
push
add
aad
cmp
outsl
dec
mov
pop
je
inc
pop
cmpsl
mov
mov
and
in
sbb
jmp
inc
ss
or
pop
aam
push
jb
mov
mov
hlt
fildl
and
mov
into
adc
adc
call
sub
iret
dec
or
outsl
fbld
repz
jecxz
stos
add
scas
fistl
cltd
fisttps
adc
outsl
aam
roll
jns
inc
das
mov
mov
inc
pop
scas
out
mov
mov
cs
fiaddl
cltd
jnp
dec
sbb
popf
mov
pop
cmp
imull
sbb
dec
pop
lahf
hlt
sub
push
jl
in
lcall
or
jae
ds
dec
std
ds
mov
jmp
inc
es
xor
jne
leave
jl
fsubs
jns
pop
lds
mov
sbb
adc
out
cmp
dec
gs
push
fisttpl
lds
out
adc
pop
adc
push
enter
push
inc
and
sbb
subl
in
or
add
push
pop
ds
xor
mov
cmp
insb
in
scas
jno
mov
pop
pop
frstor
xchg
mov
mov
in
scas
adc
jp
xor
push
popf
jnp
jmp
push
sub
jp
mov
cmp
gs
fildll
mov
imul
dec
pushf
pop
jno
jb
pushf
out
push
sub
xor
xorl
and
fildll
mov
mov
xor
test
into
je
dec
sbb
flds
jo
cli
les
push
out
pop
push
inc
xchg
mov
push
adc
xor
mov
outsl
xor
mov
pop
idivb
fldenv
arpl
popf
fiaddl
aaa
lods
leave
popf
out
push
test
clc
or
mov
sbb
inc
sbb
sub
add
mov
pop
xchg
outsb
test
rcrb
jle
test
mov
push
pop
daa
cmp
pop
movsl
push
mov
cmp
push
push
fwait
dec
jecxz
fnstcw
popa
enter
adc
outsl
das
push
mov
inc
inc
xchg
inc
lret
orl
les
xlat
sbb
rorl
jecxz
jno
sbb
cmpsb
cmp
popa
cltd
std
jge
sbb
adc
push
mov
aaa
pop
nop
je
insl
push
popa
adc
jae
pop
cltd
push
jg
xor
fs
jb
filds
test
cmp
xchg
cmp
push
mov
fmuls
movsb
in
jle
adc
out
jo
pop
int3
add
stos
rolb
sub
dec
stc
icebp
mov
mov
aad
add
push
leave
and
sbb
or
enter
and
cs
inc
fldcw
sub
nop
jbe
mov
mov
xor
call
add
dec
das
mov
repnz
lahf
rcrb
enter
jb
loop
data16
rolb
enter
xor
mov
int3
enter
sub
mov
mov
cmp
jmp
cli
push
jbe
jge
les
mov
adcl
pop
jp
int3
fidivrl
inc
jp
aaa
cwtl
jecxz
add
inc
jne
adc
movsb
push
lahf
iret
mov
push
lret
pop
inc
iret
test
cmp
push
lret
or
mov
daa
mov
push
imul
jns
dec
cld
and
push
icebp
adc
jecxz
cmp
xchg
add
mov
into
or
scas
outsb
fistpll
mov
and
cltd
shrb
stos
push
stc
mov
and
dec
adc
add
popl
fs
add
add
rcrl
enter
aaa
pop
fwait
or
mov
fldt
add
jecxz
jmp
in
pop
jge
mov
iret
push
xor
push
frstor
adc
clc
jae
xchg
sub
adc
dec
arpl
cmp
mov
int3
xorl
cli
xor
adc
mov
mov
insb
iret
pusha
arpl
das
loop
es
arpl
jnp
and
insb
xchg
mov
push
orl
lds
dec
push
mov
xor
rorb
das
xchg
adcb
xchg
adc
or
lea
sub
ret
mov
addr16
mov
test
test
inc
movsl
in
ljmp
scas
iret
xchg
stos
call
xchg
iret
jl
test
ljmp
inc
jge
popa
jg
movsl
rcrb
pop
xor
mov
cld
cmp
add
mov
rcll
js
js
jnp
cld
sti
sbb
jp
lds
rcrl
pop
ljmp
or
sub
cmpsb
pushf
and
mov
loop
addr16
dec
test
in
mov
jbe
inc
cwtl
adc
cmc
dec
dec
jb
mov
push
stos
testb
les
and
push
inc
xchg
repnz
xchg
rcll
inc
sbb
out
aad
subb
das
cmpb
iret
insb
fwait
xor
add
inc
popf
adc
test
push
lods
iret
pop
repz
pop
and
rorb
std
fsts
jbe
xor
sub
mov
mov
aam
adc
adc
xchg
add
xor
test
xlat
xor
sti
mov
cmpsl
ret
inc
pop
adc
xchg
repnz
aam
sbb
push
adc
jns
jp
pop
popa
repnz
out
xor
pop
xlat
and
mov
dec
xlat
mov
mov
popa
inc
jmp
mov
icebp
add
inc
movsl
sub
pop
stos
aaa
les
aaa
ljmp
adc
sbb
fiadds
lods
mov
mov
jnp
sub
iret
mov
and
mov
js
jae
adc
cs
or
add
inc
adc
popa
add
montmul
cmpsb
add
adcl
pushf
dec
pop
movsl
out
mov
add
mov
mov
adc
lahf
jne
and
rorb
cli
fstpl
inc
lcall
pop
ret
jnp
les
cwtl
xchg
mov
add
dec
dec
pop
mov
jmp
daa
ja
sbb
adc
mov
testb
loopne
aad
and
in
add
cltd
sbb
and
cltd
jg
arpl
dec
mov
mov
outsb
into
xor
test
mov
jne
ret
dec
mov
call
stos
cs
mov
addr16
fcmovnbe
xor
mov
mov
lods
cmpsb
inc
fwait
or
pop
mov
mov
icebp
mov
jl
pop
jne
test
hlt
arpl
sahf
jp
out
shrb
dec
sub
xchg
jno
ja
in
stos
pop
rcl
fimuls
out
pop
pop
pusha
cmp
and
cmpsb
and
mov
ds
gs
mov
adc
int3
add
stc
js
sub
and
icebp
ret
mov
in
jl
dec
hlt
mov
cmp
sub
cmpsl
xchg
lcall
ss
or
mov
mov
outsb
pop
lret
adc
das
mov
enter
xchg
leave
loope
mov
pop
mov
std
sub
jmp
enter
sbb
rcrb
or
xor
xor
cmp
adc
out
cmc
mov
jecxz
imul
jns
jb
jne
loope
jge
dec
and
sub
mov
mov
adc
fstl
repz
fbstp
and
pop
mov
push
jmp
lds
or
sbb
jl
scas
push
and
pop
push
outsl
shrb
mov
test
pop
push
dec
xor
inc
imul
ret
mov
fs
pop
imul
jnp
push
adc
jnp
nop
mov
into
jge
adc
or
cmp
push
cwtl
aam
gs
sbb
or
or
cmp
repz
lods
sub
push
nop
inc
sti
jae
fucomi
xchg
out
data16
add
sbb
call
loop
mov
lret
sbb
sbb
pop
out
cwtl
or
mov
jecxz
stos
jg
shr
jp
jp
xor
cwtl
lods
adc
leave
enter
das
ljmp
sbb
negb
cmp
sbb
sarl
insb
push
roll
jb
sbb
push
mov
insb
inc
mov
gs
push
sbb
cmp
int
add
dec
mov
push
xchg
daa
xchg
mov
push
ja
imul
jae
xor
icebp
mov
pop
jg
sub
cmp
add
in
mov
daa
cmp
in
scas
mov
push
xchg
mov
out
pop
subl
fldl
adc
sub
jb
sub
sbb
xchg
dec
pop
or
fsub
sarl
fwait
pop
lret
loop
cmp
adc
inc
xor
imul
cmovo
adc
dec
js
lea
out
mov
or
adc
jns
dec
push
push
pop
imul
enter
or
cmp
xlat
sub
rcrb
push
mov
insb
movsb
movsl
mov
aaa
rclb
jl
xor
out
mov
jo
addr16
into
lods
fisubs
mov
pop
xorb
movsb
mov
out
out
pop
xchg
inc
push
dec
in
fsts
or
cmp
mov
ror
repnz
loopne
mov
int3
and
or
add
mov
sub
mov
mov
addr16
adc
pusha
jg
int3
pop
jle
sub
mov
inc
cmp
imul
rclb
mov
scas
xchg
imul
gs
ljmp
pop
hlt
and
out
xchg
outsl
pop
cmpl
and
lcall
dec
out
int3
dec
sbb
rorl
shll
xor
sti
sub
ds
mov
sar
adc
fidivs
movsb
fucom
enter
call
mov
pop
outsl
mov
rolb
sbb
xor
hlt
pop
xor
fistps
outsb
in
packuswb
adc
popf
fwait
inc
test
stc
pop
cltd
ja
lods
adc
roll
addr16
push
cmp
cmp
ljmp
push
sbb
xchg
btr
inc
add
incb
sub
mov
cmpl
dec
sbb
lcall
loop
sbb
adc
sar
xor
bound
scas
inc
inc
ret
stc
jp
fs
and
outsb
cld
mov
enter
movhps
test
cmp
cmp
cs
push
fsts
mov
xchg
sarl
out
stc
enter
stos
call
addb
and
cmp
iret
jle
add
cmp
in
add
cs
lcall
xchg
mov
pushf
mul
es
cmpsb
rorl
fiaddl
xor
mov
or
mov
mov
scas
out
sub
iret
outsb
ret
adc
stc
push
je
stc
into
addr16
mov
iret
xchg
fcompl
icebp
pop
push
ret
push
out
in
pushf
cmpsb
dec
jp
sub
mov
adc
js
adc
stos
add
pop
push
inc
into
xchg
cmp
orl
push
mov
pop
mov
loope
loope
stos
pop
aad
movsb
sbb
fimull
jno
out
lock
iret
jne
jae
add
stc
aaa
adc
xor
sub
push
shlb
std
fs
ljmp
out
aam
ficomps
jg
psubd
cmpsb
pop
xchg
or
mov
adc
cmp
bound
insl
sub
data16
xchg
mov
scas
movsb
push
hlt
mov
xchg
push
mov
pop
ds
add
mov
jbe
mov
repz
mov
bound
xor
push
mov
imul
xchg
hlt
fidivrs
xchg
nop
or
aad
into
repnz
out
dec
pusha
adc
pop
inc
mov
add
lods
and
mov
pop
sbb
outsl
ret
push
pop
ss
adc
dec
sub
repz
push
rcrb
or
stos
jnp
xchg
leave
into
push
xchg
pop
push
mov
clc
jl
aaa
jnp
mov
or
jecxz
arpl
mov
inc
xchg
stos
mov
icebp
and
iret
cmp
and
pop
cmpsl
outsb
mov
jb,pn
push
test
ret
arpl
push
sub
cltd
pushf
js
push
inc
mov
inc
mov
cmp
pusha
fdivrl
sub
adc
testb
and
pop
mov
fisttps
out
push
dec
test
call
pop
push
add
jo
add
or
sahf
and
int
push
in
sbb
fildl
cld
je
xchg
pop
insb
pop
cmp
xor
mov
pop
pop
in
or
popa
test
pushf
xor
jo
frstor
int
rorl
cltd
popf
test
sbbl
ljmp
mov
push
inc
orl
or
nop
jb
sub
nop
in
sub
adc
dec
icebp
stos
imul
xor
inc
push
inc
dec
sar
lret
ret
lahf
xchg
outsb
test
inc
lods
mov
mov
add
sbb
sbb
sbb
push
lcall
fstps
xchg
enter
incl
out
icebp
dec
xor
int
or
stos
or
mov
in
int
cltd
mov
scas
push
dec
idivl
mov
inc
add
sbb
out
sbb
cmp
jp
shlb
xor
insb
and
adc
xchg
jo
outsb
lahf
or
inc
ret
inc
adc
int3
add
in
ja
gs
jl
lock
push
or
mov
adc
addl
push
mov
and
pop
pop
inc
pop
mov
ret
jnp
stos
out
fldt
add
add
out
sar
jle
jnp
imul
out
xchg
xchg
push
push
mov
cmc
xorl
inc
dec
jnp
adcl
inc
cmp
inc
pop
xor
out
sbbb
pop
out
and
mov
sbb
test
inc
jl
add
pop
std
push
fstpl
mov
push
test
xchg
push
and
mov
cmpsl
sbb
dec
cltd
sbb
repz
xchg
cli
arpl
inc
ficoml
fsts
mov
jecxz
lcall
aam
test
es
negb
mov
pop
push
mov
stos
leave
fxtract
jl
popf
xchg
pop
cmp
cmc
mov
pop
or
cmpb
popf
daa
and
xchg
test
aad
mov
dec
clc
adc
cld
out
fs
cs
xor
sbb
or
add
std
fwait
jmp
or
jle
pushf
sub
outsl
pop
jle
xchg
mov
dec
aad
je
inc
loopne
or
xchg
mov
popf
lds
xor
test
sbb
cmpsl
sbb
stos
ja
mov
dec
push
push
inc
je
ja
data16
pop
cmc
push
daa
dec
mov
xchg
dec
mov
jae
in
mov
inc
filds
mov
jo
xchg
outsb
adc
sub
xor
pop
in
pushl
xchg
and
xor
orl
fsubrs
push
lods
lcall
jle
leave
mov
xchg
pop
es
shrl
sbb
cmp
add
test
pop
cmp
out
xchg
jg
pop
adc
inc
out
ret
add
outsl
cmp
outsb
cmp
scas
popf
jge
andb
mov
cmp
cmp
sub
sbb
mov
dec
dec
fsubrs
sahf
call
fstpt
mov
jp
mov
fildll
mov
lret
rcl
nop
lds
mov
aaa
xor
stc
jne
pop
push
loop
xchg
pop
lds
aam
int3
add
cmp
add
jo
das
pop
jne
or
pop
ljmp
cmp
pop
sahf
push
std
out
call
imul
adc
sbb
pusha
cmp
or
mov
fwait
or
stc
ret
jecxz
popa
and
inc
xor
lods
cltd
fsubrl
stos
addb
int
repz
push
or
sbb
mov
roll
ret
shl
mov
dec
sub
xchg
fs
jno
in
popf
fisttps
push
sub
jge
sub
xor
pop
lds
pop
xor
xchg
nopl
cmp
scas
inc
xlat
cmpsl
or
mov
ja
rcll
mov
lock
and
lds
test
jo
dec
idivl
dec
or
sti
xchg
sub
call
imul
cmpsb
jp
adc
add
cmp
xchg
loope
stc
clc
shrb
cmpsb
xchg
mov
int3
fdivs
divl
push
std
dec
sub
adc
mov
dec
movsl
jge
sub
fbld
pop
and
sbb
xchg
cmp
or
repz
aad
fmuls
arpl
sbb
js
sbb
iret
out
or
or
fcmovnbe
jo
js
aad
mov
js
mov
push
pop
fistpl
aad
mov
mov
jb
clc
jns
andb
sbb
popf
push
sahf
rclb
jae
xchg
iret
test
fimuls
mov
rorb
xor
imul
or
test
adc
xor
sub
clc
push
jecxz
in
ret
sbb
mov
hlt
shlb
jns
enter
add
push
mov
out
stc
shll
mov
repnz
push
pop
dec
decl
mov
hlt
ss
push
imul
mov
mov
xorl
loop
push
subb
imul
or
fldl
sbb
gs
xchg
rolb
rorb
fsubrl
mov
mov
bound
ret
loope
testb
ret
push
jnp
cs
push
mov
gs
mov
rorb
aam
pushf
inc
mov
dec
cmp
xchg
call
jl
add
shrb
in
pushf
jns
sub
sti
aas
pop
jo
pop
xor
add
adc
mov
push
daa
cs
loopne
movsl
xchg
mov
sub
cs
fisttpll
mov
mov
cmp
adc
pusha
push
js
sub
mov
push
aam
sub
sbb
popa
mov
ljmp
mov
adc
stos
mov
sti
ret
xor
std
or
std
fimull
call
movsl
fidivs
mov
cltd
mov
push
aam
clc
push
inc
mov
outsl
and
test
dec
dec
mov
hlt
std
and
xchg
lcall
loop
arpl
push
in
jmp
jns
shlb
push
push
sarb
pop
cmp
mov
pop
mov
orb
and
es
sbb
push
jae
add
xorb
sub
xchg
iret
bnd
jp
jle
aad
sub
jecxz
dec
xchg
jo
jmp
mov
shl
repnz
repnz
and
inc
ds
out
pop
icebp
push
jg
test
pushaw
xchg
out
test
adc
fnstsw
dec
sub
pop
int
sbb
repz
or
sti
sub
and
mov
or
sub
fsubs
mov
push
repz
ja
jns
sbb
ljmp
cld
xchg
sub
fidivrs
cld
jns
ss
arpl
xor
jecxz
imul
or
sub
in
or
or
pop
roll
cmpsb
shlb
mov
fwait
insl
call
pop
fsubr
adc
fwait
fists
pop
xchg
jne
cmp
jo
into
adc
or
push
mov
mull
xchg
cmp
cmp
ret
jg
pop
xchg
imul
and
stos
jmp
jmp
xchg
mov
mov
stc
mov
dec
scas
inc
and
sub
aad
shrb
mov
fbstp
push
sub
nop
sbb
adc
js
fsubrs
mov
cmp
xchg
out
cltd
pusha
dec
sbb
dec
jl
outsb
inc
mov
jp
andb
jo
popa
sub
in
mov
pop
jp
int3
lods
adc
test
aam
daa
adc
pop
add
adc
shlb
out
push
popf
lcall
xchg
xchg
pop
in
xchg
cwtl
sbb
orb
ret
and
sbb
rcrl
sbb
lods
lcall
inc
rolb
cmp
jnp
mov
push
mov
enter
mov
mov
pop
xchg
pop
idivl
stos
loope
dec
sub
xchg
ret
mov
mov
cmp
lcall
in
idivb
out
xchg
les
cltd
pop
mov
bound
test
imul
push
outsb
dec
pop
js
mov
xchg
jp
rcrb
je
scas
cltd
addr16
mov
aam
and
xchg
stc
adc
adc
cmpsl
leave
jge
cmp
js
xchg
cmpsl
cmp
push
fldl
nop
jb
add
mov
xor
cs
je
icebp
or
dec
adc
fidivs
out
int
inc
push
push
fisttps
icebp
mov
iret
jno
pop
push
inc
mov
pushf
in
test
jl
repnz
das
sub
inc
xchg
testl
adcb
into
jnp
arpl
add
xor
add
cmpsb
mov
hlt
add
mov
xlat
es
rol
ret
or
xchg
es
xor
dec
mov
xor
mov
lret
sbb
sub
sbbl
and
xor
enter
and
cmp
cltd
dec
out
push
shrl
push
jbe
jns
dec
nop
loope
imul
push
ja
sbb
push
xchg
test
cs
jg
das
ss
rorl
push
xlat
sub
in
test
int3
out
cltd
push
rcrb
pop
xor
rcll
ficoms
pop
stos
xchg
sbb
adc
das
mov
xor
jge
icebp
dec
ds
movsb
outsl
stos
loopne
imul
movsl
mov
movsb
xchg
test
roll
push
pop
add
inc
or
lahf
sbb
push
pop
in
sub
mov
rcrl
dec
pop
lods
das
cmpsl
dec
xor
and
and
ljmp
and
or
mov
cmp
xor
ret
adc
mov
scas
dec
lahf
repz
and
out
out
cmp
push
out
jo
pop
xor
add
sbb
imul
lds
jmp
mov
dec
cmpsl
pop
inc
adc
leave
es
lock
mov
dec
mov
arpl
inc
outsl
lea
ret
in
push
adc
add
fistps
mov
mov
jb
or
mov
fbstp
mov
jae
cmpsl
scas
stc
fwait
xor
inc
sub
jecxz
push
stos
cmp
adc
stc
and
push
add
push
push
in
inc
inc
pushf
add
imul
aam
xchg
jmp
test
jp
nop
fnsave
or
iret
je
adc
dec
add
cs
fwait
cmp
jg
or
dec
rclb
fsubrl
mov
push
lods
pop
mov
xor
push
add
mov
mov
xchg
or
cmpsl
sub
call
call
and
dec
or
or
and
lea
mov
sub
pushf
pop
test
inc
cmpl
mov
test
int
std
sbb
xor
xchg
mov
mov
push
push
mov
xor
lahf
sub
mov
jp
insl
lahf
sub
lcall
inc
jb
xchg
int3
not
shl
pop
dec
cmc
orb
stc
jl
lds
cmc
in
arpl
arpl
ss
xchg
jmp
imul
xor
mov
leave
stc
and
scas
cmp
jno
jp
scas
mov
das
cmp
jl
and
or
daa
outsl
lea
call
loope
xor
cmpb
ss
jne
clc
lods
pop
push
mov
leave
orl
jmp
ljmp
stos
ljmp
movsl
mov
filds
lods
mov
mov
xchg
gs
cmp
vmovshdup
lods
pop
inc
push
inc
aad
push
stc
ljmp
loopne
out
sub
inc
cwtl
cmp
pusha
fnstsw
add
sar
push
mov
fisubl
data16
and
ficompl
inc
or
mov
xchg
mov
sahf
sub
push
bound
jmp
mov
insl
repnz
mov
cmpsl
dec
mov
in
add
pop
xchg
shlb
lret
mov
test
sarl
mov
mov
ret
inc
xor
sub
lretw
xor
sbb
jmp
xchg
jle
push
cmp
imul
lock
pop
in
aaa
and
xchg
sbb
popf
pop
or
jns
push
sub
jg
lods
in
xor
xchg
iret
mov
xchg
mov
bound
repz
push
xor
les
pusha
popf
in
mov
dec
fstpt
inc
cli
jnp
fisttps
jecxz
aad
jmp
in
addl
out
xorl
ficoms
ret
push
push
iret
movsl
mov
pushf
pop
in
aad
pushf
jne
mov
clc
lahf
jg
dec
pop
es
sahf
xor
dec
adc
xor
mov
repz
pop
testb
in
imul
jmp
test
fildll
scas
and
ljmp
sbb
sub
mov
out
mov
out
cmc
imul
mov
in
pop
dec
cmpl
jb
lds
scas
xchg
mov
jo
pushf
pop
xor
adc
xchg
push
idivb
imul
lret
in
or
sbb
push
cli
mov
sbb
lods
inc
data16
popf
add
icebp
sbb
xchg
shrl
dec
shlb
xor
int
jp
jnp
mov
orl
out
mov
pop
stos
sub
je
cwtl
sub
sbbl
ja
repz
int3
lock
insb
push
inc
fwait
mov
xor
not
inc
pop
mov
popf
mov
mov
pop
test
in
shll
pop
mov
push
out
mov
pop
icebp
lea
mov
lock
adc
push
jp
int3
enter
or
cmp
frstor
sub
mov
pop
bound
sarb
lcall
outsl
or
fiadds
mov
pop
add
bnd
call
push
pop
loopne
fadd
and
fwait
xor
bound
pop
mov
adc
loope
ret
iret
pop
jge
cmp
mull
xor
mov
movsb
add
jno
push
lahf
mov
dec
in
dec
jo
mov
mov
movsb
push
out
adc
stc
lods
dec
xchg
mov
loop
xchg
adc
test
fisttps
jbe
in
mov
lock
daa
neg
loopne
mov
cmp
jno
mov
adc
xor
dec
jge
aas
inc
lret
ds
mull
clc
and
sbb
fisubrs
pop
lea
aaa
add
pop
add
dec
das
jp
lea
iret
sub
in
test
fisubrl
test
xorb
fidivl
sub
data16
cs
pop
xor
pushf
adc
adc
jb
or
lcall
pop
jle
shl
dec
sbb
push
shlb
pop
and
cmp
inc
scas
ds
xchg
pop
je
push
lea
jmp
cwtl
les
shr
ficompl
push
mov
mov
lods
mov
xchg
out
sub
clc
push
push
and
sbb
mov
lea
jne
mov
mov
sti
or
add
push
lods
loopne
aas
subl
fcompl
stos
mov
lahf
leave
data16
iret
std
int
insl
pusha
bound
and
out
test
mov
lea
jp
or
jns
cmp
lret
sarl
out
push
mov
mov
stos
popa
mov
and
test
jbe
add
push
adc
push
bound
mov
dec
xor
sub
cmp
xchg
pop
aaa
shrl
add
adc
imul
mov
rcll
popa
push
in
dec
cli
pop
in
adc
popa
push
outsb
jnp
pop
push
push
jmp
rcll
cmp
pop
and
lahf
or
pop
bsr
or
repnz
inc
mov
lahf
aaa
xchg
hlt
sahf
mov
cwtl
lds
ljmpw
adc
adc
sub
inc
les
inc
pop
lret
pop
jno
dec
inc
loopne
ficoms
shlb
or
pop
in
jne
push
stos
sub
cmc
loopne
mov
leave
adc
sub
push
nop
add
sahf
xchg
les
std
in
jge
pop
or
add
aas
push
test
out
pop
sbb
pop
xor
adc
push
popl
inc
cmpb
les
int3
lcall
jne
mov
adc
mov
popa
arpl
repnz
movsl
sub
jo
lret
inc
fs
es
add
dec
pop
jbe
jbe
mov
call
mov
and
out
fwait
dec
lret
clc
outsl
pop
xor
mov
xchg
mov
pop
rcr
xchg
rclb
gs
test
mov
aam
mov
pushl
icebp
pop
fdivrl
and
nop
test
sub
das
sbb
cmp
sub
mov
inc
lds
add
sub
and
call
pop
imul
sbb
xor
pop
ljmp
xchg
test
and
ja
mov
insl
mov
or
stos
mov
and
and
lea
in
lds
jns
cmp
stc
mov
fmulp
aas
dec
xor
inc
out
js
add
call
pop
lcall
adc
cmp
in
cmc
rorl
in
mov
gs
test
jbe
roll
leave
bound
pop
arpl
jb
fsubrp
dec
iret
subb
xchg
loop
cmpsl
jnp
into
hlt
imul
dec
mov
aaa
add
push
popf
cmpsl
mov
inc
xor
lds
push
xchg
dec
xchg
pop
pop
clc
pushf
push
sbb
lds
cmpsb
cmp
xchg
pop
sub
popf
out
negb
jno
cmp
mov
loopne
sbb
push
sbb
jp
pop
mov
sbb
incl
outsb
adc
and
aad
mov
repz
cmpsb
add
adc
nop
movsl
stos
gs
dec
jmp
jns
fstl
pop
or
mov
cmpsl
mov
sbb
pop
jne
jnp
and
imul
push
shll
clc
insb
out
mov
popa
lods
and
dec
rorb
mov
cmpsb
and
inc
or
mov
mov
sbb
adc
adc
lahf
xor
je
pop
fisttpl
sub
xor
add
insl
call
pop
clc
movsb
loopne
push
jno
push
movsb
xor
mov
sub
stc
xchg
mov
cmp
addr16
test
std
cmp
cmp
outsb
ss
or
pop
jge
arpl
into
pushf
aad
out
dec
out
fwait
lahf
xchg
dec
pop
pop
lcall
rorl
mov
daa
test
mov
outsl
cmpsl
je
shr
les
or
or
cmp
out
bound
and
repz
mov
mov
jne
jne
or
xor
andl
jge
pop
js
mov
inc
sbb
xchg
outsl
aas
push
xlat
dec
es
mov
push
add
xor
icebp
test
repz
out
pop
dec
iret
mov
in
into
or
pusha
outsb
and
das
call
shrb
sbb
lahf
and
jle
lds
xchg
sar
dec
insl
das
les
or
loopne
jp
sti
cmp
sub
rcll
jno
bound
jno
frstor
orb
xchg
call
push
sbb
iret
fists
jmp
repz
xor
lea
ficompl
xadd
fnstsw
xchg
fcmovne
je
pop
inc
xchg
int3
xor
push
ret
pop
dec
lret
test
out
out
xor
mov
jb
mov
adc
repz
aad
iret
fbstp
lret
or
std
clc
mov
dec
adc
push
cmp
mov
xchg
les
cmp
dec
add
jg
xor
add
mov
adc
fwait
and
ja
push
xchg
shl
sub
addb
test
aas
adcl
stos
orb
dec
iret
jne
loop
in
sub
xor
out
or
pushf
xchg
jno
hlt
mov
es
xchg
shlb
sahf
mov
and
adc
popf
add
fisttpll
in
mov
xchg
xor
pop
mov
lods
mov
test
push
in
adc
jbe
mov
notb
mov
adcb
and
arpl
cmc
nop
xchg
xor
sbb
stos
sbb
fbstp
adc
lahf
mov
push
pop
inc
pop
mov
pusha
fistpl
dec
roll
sbb
sub
popf
sub
int3
test
add
or
cmc
pop
stos
sub
out
sbb
cmpsb
vpaddb
std
clc
fwait
in
jg
sub
and
out
dec
xchg
std
mov
jmp
sahf
jmp
sub
arpl
test
pop
pop
dec
fsub
mov
mov
loop
inc
popf
cmp
xlat
in
inc
dec
xlat
shlb
inc
lret
test
mov
cld
push
cli
ds
fwait
push
add
pop
and
cmp
cld
push
and
xlat
dec
in
les
je
daa
loop
jbe
lcall
test
rclb
pushf
cmpsl
int
mov
and
push
push
mov
test
mov
adc
add
and
fs
dec
jne
lods
imul
mov
jns
lcall
and
fcoms
sbb
dec
sub
std
xchg
cmp
movsb
out
loope
stos
es
inc
and
mov
mov
imul
leave
push
in
jle
outsl
add
add
jge
lahf
iret
mov
and
movl
jbe
popf
mov
mov
shr
insl
xor
adcl
and
leave
pop
shll
dec
and
mov
xor
inc
imul
inc
cmp
outsb
into
push
ss
xchg
lods
or
mov
mov
and
and
mulb
faddp
test
or
pop
hlt
mov
stc
and
dec
pop
sbb
pop
roll
or
jo
xchg
scas
sbb
loopne
cmpsl
lods
add
jnp
test
js
or
mov
pop
or
dec
cwtl
mov
in
jno
mov
fwait
and
add
mov
fmuls
out
stos
repnz
ret
and
rcl
xchg
cmpsb
xor
cmp
add
cli
mov
xchg
mov
jmp
fisttpl
or
jle
lahf
pop
cmp
cwtl
dec
push
mov
in
fildll
cltd
fstpt
dec
stc
rclb
sub
stos
xor
fnsave
push
jns
in
sub
inc
cmpsb
ljmp
mov
hlt
push
addb
arpl
ss
leave
mov
adc
pop
push
in
rolb
out
cmp
dec
repnz
in
push
stos
cli
ret
mov
fwait
mov
xor
sub
mov
mov
sbb
aas
fsubs
fucomip
mov
or
inc
lret
jb
mov
add
adc
test
mov
int
pushl
loope
jg
or
sbb
lods
push
jge
mov
andb
sub
imul
inc
push
sub
inc
sti
cltd
movsb
ret
fistpll
repz
lea
sub
ja
cld
shlb
mov
sub
mov
add
outsl
fsubr
adc
inc
ret
xchg
adc
cli
adc
sbb
pusha
jnp
jb
js
arpl
add
stos
sub
dec
cmp
and
and
in
icebp
leave
rorb
ss
ficompl
sbb
fs
sahf
push
cmp
or
lahf
xlat
xchg
dec
std
jno
jp
adc
mov
add
xor
sub
shl
js
sub
inc
cmpsl
stos
jge
xor
and
popf
ret
push
jmp
fs
scas
cmp
xor
jo
cmp
inc
sub
jae
out
cmp
lret
mov
and
dec
lods
or
mov
aam
push
mov
filds
repnz
add
shr
iret
and
mov
push
outsl
out
fldenv
dec
mov
mov
inc
les
mov
jo
aas
push
stos
jg
xor
in
mov
jle
sarb
leave
mov
sub
adc
xchg
xor
mov
in
jo
dec
mov
cmpsl
adc
sbb
sbb
xchg
and
stos
inc
cmp
and
ljmp
enter
mov
lods
rcl
lahf
sahf
sti
out
dec
into
ja
push
or
clc
mov
dec
inc
push
ficompl
mov
push
std
testb
sub
jmp
mov
mov
mov
ss
xchg
rclb
or
ret
addr16
jle
test
jg
int
mov
mov
imul
or
push
add
bound
aaa
lds
cmpb
loop
pushf
cli
daa
push
xchg
and
or
mov
fidivrl
or
xchg
ds
push
xlat
out
in
xchg
pusha
push
inc
push
push
js
adc
or
lahf
mov
imul
and
test
es
dec
dec
pop
sbb
mov
sub
or
pushf
das
or
insl
adc
stc
cmp
mov
daa
je
int3
stos
cmp
mov
adc
push
lcall
mov
aaa
dec
add
mov
cmpsb
add
shrl
sub
pushf
sub
mov
add
xlat
mov
add
lret
fwait
shll
sbb
hlt
cmpsb
jecxz
jg
in
or
lock
mov
loope
pop
fidivl
test
mov
add
cwtl
add
add
outsl
sub
in
push
push
into
mov
insb
jno
push
or
sbb
shll
add
fstl
dec
xchg
outsb
mov
movsl
mov
dec
mov
xchg
and
or
aas
mov
cmp
das
inc
pop
sahf
xchg
or
xor
adc
mov
in
adc
pop
inc
sub
imulb
mov
ja
xchg
cmp
lea
bound
aad
ds
dec
fs
outsb
dec
push
fcmovne
loope
mov
loope
jecxz
mov
sbbl
movsb
pop
sbb
sahf
jns
pushf
call
xor
scas
aam
fs
and
xchg
jl
pop
cmpsl
pop
xchg
pop
mov
jmp
sarl
js
mov
lods
stos
mov
adc
or
xor
mov
add
mov
sahf
outsb
call
sbb
pop
es
adc
stos
and
add
sbb
aad
je
inc
jp
xchg
inc
es
pop
push
sbb
bound
out
cmp
fwait
lock
nop
inc
mov
dec
push
pop
xchg
fnstcw
orl
xchg
push
pop
cmc
mov
cmp
pop
arpl
and
adc
xchg
xor
inc
test
mov
mov
lods
mull
mov
insb
ss
mov
aas
adc
gs
jne
lea
xor
addr16
sbb
sub
mov
cmp
adc
mov
xor
push
jl
lock
icebp
pop
mov
cmp
adc
jl
inc
mov
and
dec
mov
inc
fbstp
sub
fmulp
xchg
call
movsb
sub
rorb
adc
inc
and
or
xchg
mov
push
stos
sti
jg
and
cli
mov
nop
fstl
clc
in
mov
adc
xor
jo
loope
ficompl
push
mov
insl
lcall
cmp
jge
and
loop
sbb
jo
je
ret
in
cmp
push
and
mov
out
popf
or
jmp
adc
insb
clc
jecxz
aas
aam
es
or
or
sub
dec
adc
adc
mov
xchg
shll
data16
and
inc
das
mov
mov
inc
in
nop
ja
push
test
mov
ja
shlb
inc
data16
sub
and
mov
cmpsb
push
xor
xor
xor
int3
push
cmp
xor
jnp
test
jecxz
arpl
lea
in
dec
lahf
popf
cmpsl
arpl
cltd
push
add
cli
dec
mov
mov
jbe
mov
cmpsl
mov
bound
push
and
mov
outsl
jns
lea
push
or
addr16
popa
mov
mov
shl
mov
mov
shll
dec
sub
push
mov
xor
notb
inc
dec
mov
aas
fisttpl
mov
jne
cmp
fucomip
sbb
jnp
ja
shll
dec
push
shll
push
jp
bound
pop
jae
ret
or
insl
in
fs
out
push
adc
ljmp
and
mov
aam
pop
mov
lea
rcrl
add
and
ret
mov
lea
nop
lods
xchg
cltd
add
pop
dec
out
fmulp
mov
pop
int
or
inc
mov
add
pusha
imul
cs
xor
pop
mov
sbb
jns
hlt
pusha
das
loop
add
jge
add
cltd
mov
jle
mov
jo
add
test
arpl
ror
mov
xor
mov
add
cld
push
cltd
inc
add
sbb
ljmp
divb
out
movsb
cli
adc
cltd
and
subl
sub
fnstsw
lds
push
shlb
sbb
idivl
inc
jnp
mov
push
sbb
xor
mov
mov
pop
mov
frstor
mul
shlb
shlb
fs
cs
jle
faddl
push
add
es
inc
xor
and
addr16
adc
out
sahf
out
push
mov
mov
stos
fcmove
push
clc
dec
mov
test
popf
push
aas
ret
xor
jl
dec
mov
bound
dec
loopne
jns
pushf
nop
daa
dec
addl
and
xlat
add
negb
xor
and
fmul
sahf
xlat
mov
icebp
movsl
mov
sbb
stc
das
cmp
sbb
fcmovbe
mov
int
dec
jl
mov
loop
jnp
ja
push
fildll
dec
dec
jne
jno
inc
cmp
xchg
repnz
or
cmc
cmp
clc
outsl
fpatan
xor
nop
or
add
pusha
mov
mov
outsb
push
lods
fnstenv
subl
fwait
sbb
jnp
lea
ret
push
int3
cmp
shrl
push
in
mov
mov
sbb
push
jmp
jno
mov
cmp
xchg
jecxz
mov
enter
jg
xorl
dec
cli
mov
rol
and
jg
xor
ljmp
cmc
repz
ret
add
sbb
loope
cmpsl
mov
or
sbb
fdivs
sbb
jbe
pop
nop
fdivrl
std
mov
ja
or
mov
addr16
mul
push
aad
fdivl
sbb
lret
insl
ss
sahf
xor
or
jge
add
pop
fisttps
imul
xchg
xor
movl
sub
fwait
repz
arpl
lods
inc
mov
mov
cmp
inc
stos
cltd
dec
push
inc
test
cmpl
xchg
adc
inc
nop
cmp
lret
lahf
data16
jae
sbb
inc
and
mov
push
sub
mov
mov
scas
add
ret
sahf
fnstenv
jo
loop
inc
mov
adc
fiaddl
je
dec
test
je
test
xor
dec
cmp
inc
mov
sub
in
sub
sbb
lods
adc
test
mov
adc
mov
inc
repz
push
fcmovnu
jb
ret
dec
subb
out
arpl
xlat
mov
mov
pop
xor
mov
pop
arpl
mov
aas
mov
cmpsl
outsb
subl
rorb
mov
jne
mov
dec
sub
mov
or
adc
jns
call
pop
les
pop
dec
pop
jle
push
push
adc
popa
adc
test
negb
loope
mov
ds
sub
bound
frstor
cmp
dec
xor
jg
mov
add
fwait
mov
inc
push
push
lods
negb
outsb
pop
out
mov
xchg
mov
mov
adc
sub
stos
adc
je
pop
flds
test
xchg
es
add
xchg
cld
test
mov
insl
je
movsb
test
int3
pop
pop
sbb
icebp
sbb
test
int
or
push
rcl
mov
fdivrp
pop
add
xchg
cmp
dec
mov
stc
mov
lret
jecxz
jl
push
mov
add
mov
push
cmc
push
pop
push
or
mov
cmp
and
sub
push
lods
icebp
clc
cmp
mov
adc
dec
mov
add
mov
shlb
mov
sbb
insl
sub
mov
sub
pop
test
sbb
xchg
in
outsl
push
out
fsqrt
dec
xchg
je
ret
inc
xchg
jmp
loope
mov
xor
sbbb
jmp
imul
data16
or
je
leave
mov
inc
sbb
int
test
dec
mov
sub
jae
jmp
add
bound
push
sub
scas
push
popa
outsl
mov
fsts
fbstp
push
adc
xchg
jle
lahf
outsb
and
jle
jbe
mov
mov
mov
dec
popa
div
jmp
push
out
into
divl
shl
and
and
cmc
in
add
pop
arpl
lret
gs
push
imul
rclb
fisubl
lock
ss
push
rolb
push
mov
lds
insb
mov
mov
sub
int
xchg
repnz
lcall
movsb
call
shll
scas
in
ret
or
fbld
in
or
movsb
lods
xchg
stos
outsl
dec
inc
enter
movb
js
inc
ds
mov
ljmp
call
push
jmp
lock
adc
scas
movsb
sahf
cmp
cmp
int
gs
sbbb
xchg
js
out
ficoms
vcvttpd2dqx
or
pop
jnp
mov
out
jg
loope
cmpsb
push
sahf
dec
mov
jp
mov
into
imul
xchg
xchg
outsl
mov
xchg
roll
pop
sub
rcl
cld
js
jecxz
xchg
push
fcmovnu
and
pop
xor
fnstsw
gs
inc
xchg
sarb
xchg
test
xchg
call
jo
pop
movsl
repz
jo
out
mov
cmpsb
push
push
lret
enter
mov
test
dec
movsb
mov
pusha
pop
push
in
and
loop
or
and
xchg
jl
mul
cmp
jmp
test
push
cmp
outsl
test
cmpb
hlt
pop
adcb
test
pop
ljmp
out
jle
dec
mov
mov
out
ss
leave
adc
or
scas
inc
jbe
xchg
jns
mov
jb
xchg
jnp
and
aad
sbb
lret
mov
or
in
lea
xor
jmp
cmp
add
testl
sbbl
push
add
jae
mov
in
jl
mov
dec
mov
jg
sahf
shrb
pop
xor
repnz
ret
andl
test
out
addb
push
lcall
add
jp
fnsave
sahf
ret
mov
sbb
cli
mov
je
stos
dec
js
and
int
lret
pop
jg
mov
int3
jp
aad
pause
push
popa
shlb
es
in
hlt
mov
mov
fisttpl
es
xor
cmp
push
cmp
inc
cli
es
sub
andb
arpl
jl
scas
sub
repz
jne
or
inc
or
pop
insb
dec
rolb
pop
leave
popa
scas
js
jo
inc
gs
fwait
aad
fs
dec
inc
jecxz
inc
sub
push
sub
cmpsb
sarb
inc
movsl
setle
cld
jp
hlt
sub
cli
jmp
xchg
xchg
stc
or
sbb
pop
and
jne
sbb
shlb
movsb
nop
in
push
inc
ror
sbb
lret
xchg
pop
ds
movsl
negl
fs
outsb
mov
pop
cld
push
pushf
jb
jge
iret
mov
jge
mov
mov
pop
pop
sub
and
aad
xchg
pushf
jne
lds
aam
imul
and
mov
leave
mov
fs
push
sbb
or
fisubrs
popf
mov
call
xchg
dec
push
mulb
add
add
add
mov
mov
jl
mov
jae
hlt
push
cwtl
ret
mov
out
shlb
stos
xorl
inc
adc
ret
push
pop
jb
out
stc
fwait
sub
popf
adc
repz
push
lret
inc
or
int3
pop
rolb
hlt
test
icebp
aas
les
aam
lock
clc
out
fdivrl
icebp
jae
push
dec
cmp
and
fstl
mov
and
ret
cmp
push
dec
fldl
add
fistpl
adc
push
pusha
xor
mov
sub
je
sti
int
inc
sbb
mov
sbb
mov
gs
pop
in
movsb
xor
inc
mov
loop
es
inc
jmp
mov
nop
scas
cli
and
sub
and
mov
adc
mov
push
test
jb
imul
outsb
movsl
in
in
orb
dec
pop
lahf
mov
sub
arpl
cmpsb
inc
fidivrs
push
negb
test
dec
inc
pop
xchg
xor
pop
ror
push
negl
or
pusha
and
jbe
jle
je
xchg
push
xchg
subl
mov
sti
incb
outsl
cmp
and
inc
je
cmpsb
xor
arpl
mov
sub
pop
arpl
jo
push
imul
cmp
fwait
inc
sub
sbb
mov
and
pop
sub
popf
imul
or
lods
outsb
test
testb
mov
fsub
adc
mov
sbb
les
jnp
sub
mov
cld
xor
jo
push
fs
sub
insb
pop
ljmp
mov
out
outsl
jo
push
mov
mov
sub
lock
pop
cmp
mov
sub
mov
adc
xorb
mov
int3
inc
out
lods
ljmp
rcr
loopne
pop
insb
push
sub
loopne
mov
mov
jns
jb
or
sbb
sbb
cmp
fistpll
push
sub
inc
dec
outsb
cmp
es
les
push
pop
cmp
test
sbb
or
and
jnp
out
push
mov
mov
pusha
pop
lahf
mov
mov
jle
xchg
jne
sbb
call
jp
pop
and
push
mov
push
mov
cmp
scas
jb
jp
xor
xchg
clc
sarb
xchg
dec
pop
imull
das
loope
cmpsl
lea
cmp
fs
dec
add
enter
xchg
and
and
add
adc
or
iret
sbb
mov
sarl
inc
addb
stos
jle
test
mov
xor
jmp
dec
jns
test
mov
mov
push
ficoms
cmp
jmp
das
pushf
je
mov
pop
iret
in
inc
jle
jne
adc
or
push
scas
fnsave
fxtract
pop
xlat
dec
int3
and
adc
data16
dec
push
dec
jge
push
sbb
push
add
in
insl
jno
sbb
jne
cmp
aam
mov
and
inc
gs
xchg
es
enter
outsb
or
dec
inc
inc
int
gs
add
mov
mov
lds
mov
sub
adc
fstps
add
mov
and
push
jmp
aaa
mov
test
loopne
add
mov
mov
adc
fildl
out
loopne
mov
hlt
push
xor
mov
mov
pop
orl
jl
xor
mov
push
xchg
cmp
daa
scas
add
add
or
repz
mov
pop
or
std
cmovp
push
roll
clc
pmulhw
arpl
adc
test
lahf
les
leave
sub
movsb
mov
scas
gs
stc
testl
lcall
inc
xchg
mul
sbb
or
out
mov
iret
mov
mov
jmp
mov
test
repz
shlb
stos
repz
movzwl
int
push
jae
test
pushl
mov
lret
and
jle
push
ret
lret
andb
imul
adc
jp
mov
mov
and
mov
decl
cmp
jcxz
sbb
sbb
adc
sahf
xor
push
mov
xor
add
scas
push
sarb
inc
cmp
xchg
jnp
insl
jle
repnz
movsl
sbb
test
in
mov
mov
jae
xchg
shll
dec
mov
pushf
mov
xchg
xchg
in
fldenv
into
lods
stos
cmp
ss
pop
adc
clc
xchg
enter
mov
fs
js
iret
inc
stos
xor
jo
pop
les
jno
loopne
shrb
mov
bound
mov
pop
inc
lods
adc
mov
pushl
cmp
xor
pop
in
push
push
mov
cmovne
sbb
cli
cmp
inc
push
jg
pop
sub
adc
and
pop
pop
mov
into
mov
sti
addr16
xor
je
out
add
scas
rcl
jnp
dec
cmpsl
mov
jmp
lret
xchg
pop
and
gs
cmp
sbb
add
dec
jmp
int
mov
in
xchg
xchg
fistpl
lds
mov
lock
and
lock
adcl
fstpt
mov
out
inc
int
xchg
xchg
cmp
imul
inc
clc
loope
jp
mov
repz
xor
or
ret
cmp
jecxz
jecxz
mov
lods
fidivs
mov
out
add
add
stos
aaa
jne
in
aas
movsl
dec
jmp
fistpll
ds
add
add
inc
test
pslld
mov
jns
pop
scas
xor
lock
inc
adcl
xlat
jo
hlt
push
pusha
dec
push
scas
fistl
dec
and
jmp
out
fwait
test
push
popl
lret
xchg
lods
out
mov
and
leave
jecxz
test
js
xor
jecxz
int3
lahf
scas
arpl
mov
lods
xor
sub
pop
imul
adc
in
sbb
cmp
lahf
movsl
mov
mov
inc
mov
cmp
cmp
pop
je
mov
rclb
pop
sbb
pop
imul
loope
inc
lods
adc
stos
cmp
test
int
aad
cmpsb
sbb
loopne
add
pop
jge
xor
mov
in
inc
int
pop
sarb
cmpsb
jle
pop
xor
fcom
ret
orl
addl
or
dec
in
jbe
aas
pop
test
cmp
ljmp
sub
decb
mov
mov
pop
mov
mov
addb
mov
pop
dec
insl
test
cmpl
jno
fidivl
pop
mov
sub
sbb
psllq
lock
mov
inc
mov
test
mov
mov
mov
mov
or
pop
dec
push
lods
popa
dec
lea
int
mov
pop
push
inc
and
and
stc
jp
lahf
mov
add
pop
cmp
push
inc
in
bound
js
jl
and
adc
or
jl
xchg
cmp
call
mov
or
les
dec
in
fs
mov
xchg
into
ss
mov
mov
fldt
lods
cmp
pusha
mov
mov
jmp
xor
loope
repnz
cs
lret
ret
dec
lret
and
das
jbe
xchg
cmp
stc
jne
cmp
inc
in
inc
pop
fsubrl
jl
inc
addr16
das
bound
push
in
jp
mov
ss
movsb
shlb
inc
mov
dec
pusha
fisubrs
addl
rorb
insb
or
cmp
mov
ret
mov
xchg
push
repnz
scas
lret
mov
lret
in
dec
mov
pop
sar
push
es
inc
mov
sub
ja
outsl
jns
add
dec
sub
add
or
aaa
add
xorb
or
mov
scas
cmp
and
xor
mov
movsb
jl
pop
fdivr
push
inc
in
sbb
push
inc
ljmp
sub
test
movsb
rcl
jp
inc
shlb
fidivl
xor
xchg
flds
stos
aam
xchg
sub
mov
ja
enter
and
mov
fdivrp
stos
mov
in
shll
bound
fs
mov
mov
mov
std
push
out
inc
push
pusha
stc
mov
sbb
xchg
mov
push
jnp
add
andl
sub
jle
xchg
and
add
add
lods
add
sbb
jne
mov
pop
inc
fs
jbe
mull
les
call
cmp
sarb
dec
clc
or
imul
sahf
xchg
cld
jmp
cmp
pusha
loopew
rolb
sbb
addl
or
xchg
inc
inc
push
pop
mov
mov
daa
mov
orb
push
jbe
test
xchg
add
dec
ret
cmp
aam
add
cmp
insb
cmpl
mov
icebp
mov
adc
push
aas
mov
or
popf
cwtl
xchg
dec
mov
clc
or
sbb
test
jo
or
shlb
or
push
mov
dec
cli
inc
mov
cs
ret
into
push
lds
mov
fwait
cmp
inc
roll
gs
inc
jns
ljmp
lods
push
outsb
popf
xchg
in
or
sbb
loopne
ss
rolb
insb
jne
adc
repnz
jno
js
dec
push
sldt
inc
movsb
ljmp
jl
adc
out
das
icebp
fdivl
push
cmp
call
test
ret
inc
xchg
loopne
cmpsb
scas
fsubs
push
jbe
and
call
lret
jecxz
pop
push
test
push
decl
pop
jbe
arpl
push
push
mov
jmp
push
inc
sbb
push
push
cmp
xor
sub
outsb
xor
movsb
jno
mov
movsl
xchg
in
out
add
mov
push
sub
aad
icebp
adcb
sub
sbb
jns
add
xorl
and
jno
mov
xchg
fwait
add
aam
cmp
xor
xchg
jle
xchg
jnp
push
in
gs
and
dec
out
and
nop
mov
and
inc
mov
adc
iret
or
push
fcomp
pop
fnstsw
lods
adc
sub
cltd
push
out
mov
xchg
mov
sbb
or
inc
xor
out
cmp
pop
push
jno
push
pop
les
jne
push
mov
inc
inc
jne
push
gs
lret
jns
add
adcb
inc
rcr
push
in
and
cli
mov
adc
in
xchg
jle
sbb
sahf
jmp
sub
int
adc
rclb
pop
and
sti
icebp
pop
fs
call
lock
cs
mov
icebp
std
push
sub
inc
bound
mov
insb
xlat
repnz
adc
xor
mov
mov
mov
cmp
in
outsl
icebp
mov
lea
jmp
leave
loope
dec
or
sbb
pushl
outsb
cli
and
shrb
cmc
pop
inc
mov
mov
ljmp
shrb
mov
nop
inc
push
scas
cmpsl
rcl
push
hlt
sub
xchg
xlat
mov
jbe
mov
push
jmp
sarb
les
or
leave
mov
es
xchg
cli
aad
pop
dec
cs
inc
jmp
ret
in
xorl
dec
pop
adc
sahf
cmp
outsl
mov
lods
pop
imul
ret
or
out
in
mov
dec
push
int3
jle
mov
je
out
mov
aam
test
mov
pop
inc
push
mov
and
fwait
push
xchg
xor
jle
sbb
outsb
mov
js
jbe
cmpsl
enter
add
out
lahf
decb
jne
push
cmc
call
repz
inc
ret
fildl
scas
adc
movsb
and
ror
push
rcr
leave
jle
fwait
jo
adc
or
cmp
and
lret
jno
jl
sub
es
mov
mov
lock
stos
stc
loope
sub
inc
sub
and
sbb
ds
loopne
jns
cmp
rcl
mov
mov
cmp
xlat
push
arpl
sbb
pop
inc
xchg
or
enter
push
ret
jl
mov
mov
mov
mov
dec
dec
jno
xchg
fldt
adc
clc
mov
cmp
adc
push
and
cmp
cmpl
repnz
sub
adc
jl
mov
and
push
outsb
push
fistl
jns
push
fdivs
jb
outsl
inc
mov
mov
mov
push
loop
jnp
adc
push
xchg
push
push
out
ret
jg
negb
in
xchg
xor
repnz
mov
outsl
mov
insl
mov
call
repz
cmp
ss
mull
repnz
sub
add
scas
xlat
jg
scas
mov
sbb
out
pop
mov
mov
cld
imul
loope
pop
dec
aaa
xchg
push
lea
cmpsl
std
inc
fidivrl
xor
push
dec
jge
sub
cwtl
xor
jae
lcall
inc
or
fcomip
push
mov
cmp
es
jae
stc
stos
fnstenv
mov
cmp
jnp
test
imul
cli
pop
or
jne
addr16
js
ja
or
je
fistl
add
jp
shlb
and
pop
or
adc
cmpsl
rcl
sbb
cs
insl
push
enter
aaa
or
add
dec
mov
data16
and
inc
fcoms
jecxz
into
dec
lcall
sti
sub
inc
idivb
insl
adc
xor
negl
add
mov
inc
mov
insb
xor
addr16
shr
mov
lcall
pusha
push
clc
sarb
xor
fstps
pop
iret
jae
daa
popf
ja
jnp
mov
add
fists
sbb
inc
mov
aaa
sub
inc
push
mov
pop
jmp
fsts
pop
pushf
lock
enter
mov
mov
push
sbb
ja
fsubr
ljmp
add
hlt
out
dec
or
js
xor
sahf
popf
xchg
fwait
or
cmc
stc
nop
push
gs
mov
jb
rorl
ror
pop
movsl
sub
lcall
or
hlt
pop
aas
xlat
scas
dec
sarb
mov
fcmovbe
je
inc
jge
pop
outsl
hlt
nop
mov
ret
lcall
dec
inc
mov
adc
and
or
ljmp
sti
data16
sub
mov
stos
sbb
es
and
cmp
sbb
out
sbb
jbe
add
ss
add
push
or
mov
cmp
out
adc
cmp
ljmp
push
xchg
aaa
fisttpl
sub
jo
sbb
call
adc
or
shrl
test
and
jecxz
dec
or
pop
fsubp
inc
loop
push
movsb
jbe
cmpl
pop
arpl
aad
out
mov
mov
pop
or
fldenv
mov
test
xchg
pop
aas
push
enter
nop
mov
inc
lahf
xchg
outsl
or
dec
and
sub
fisttpl
cmpsb
subb
xchg
out
jecxz
sti
jmp
or
adc
xchg
pop
jl
fldl
icebp
aam
mov
push
xlat
outsb
xchg
test
add
jp
cld
pop
into
pop
pop
aaa
jmp
test
shlb
imul
xchg
sahf
sub
mov
mov
pusha
addr16
cmp
mov
daa
mov
addr16
mov
or
push
out
cmpb
add
push
les
push
or
repz
xchg
out
int3
rorb
ljmp
pop
adc
iret
pushf
daa
dec
add
adc
xor
mov
movsl
push
js
call
out
cmpsl
xor
fs
push
jo
daa
mov
test
adc
mov
gs
cmp
test
leave
pop
push
mov
stos
mov
or
jg
push
mov
mov
call
mov
lret
sub
fwait
jbe
jecxz
out
lahf
gs
and
mov
les
and
add
fnsave
xor
out
sub
jecxz
sub
pusha
push
jp
jmp
int3
mov
inc
xchg
mov
scas
xchg
std
or
js
jo
mov
cld
push
cmp
in
call
sub
sbb
mov
sti
fistps
popa
scas
je
cmp
cmp
mov
lock
addl
leave
out
push
mov
mov
xchg
dec
cmc
mov
test
ljmp
insl
loop,pn
int
sub
cmpsb
push
jmp
pop
into
test
push
inc
add
xchg
sbbb
add
outsl
dec
mov
dec
mov
or
lret
pop
mov
or
movb
jae
cmp
mov
inc
insl
stc
xchg
lods
out
push
pop
ja
test
sbb
mov
inc
insl
or
fwait
clc
lgdtl
xchg
lea
ret
push
out
or
outsb
scas
in
mov
inc
pushf
in
mov
fiaddl
aaa
ret
ja
jnp
frstor
pop
arpl
mov
or
mov
pop
fs
stos
in
xchg
mov
repz
dec
jnp
pop
cmpsb
and
jle
push
or
xor
xchg
rolb
and
add
inc
jmp
aad
xchg
inc
std
outsl
imul
std
mov
xchg
cmp
loope
les
mov
fisttpl
out
pop
cmp
jnp
and
mov
pop
jp
jo
inc
icebp
xchg
jp
fdivs
movsb
mov
inc
sbb
out
sub
and
xlat
daa
sub
fwait
into
test
pop
xchg
stc
jno
out
adc
out
pop
pop
push
std
adc
in
ret
mov
int
into
sub
shll
dec
xchg
sub
insb
mov
sti
or
loopne
fnsave
test
stos
mov
mov
test
sub
call
xor
sub
push
jle
adc
aam
pop
leave
adc
jecxz
lea
mov
insl
les
hlt
pop
mov
pop
push
pop
mov
inc
jo
and
icebp
popa
mov
leave
pop
push
cmp
adcb
pop
push
pop
stos
popa
sub
dec
cmp
pop
push
jl
jnp
enter
pop
lret
xor
sbb
dec
inc
xor
lock
cmc
pop
mov
sbb
dec
push
pop
shlb
xor
pop
or
lds
cltd
pop
das
ret
pop
loope
mov
inc
jp
jle
mov
push
mov
jns
shr
and
push
push
jne
subl
pop
in
xchg
add
xchg
mov
aaa
xor
jecxz
or
adc
fnstenv
std
insb
stos
rcrb
push
or
insb
xor
dec
sbb
outsb
mov
lods
aaa
cmpb
fdivrs
clc
fdivs
loope
xor
adc
xchg
push
cmc
dec
pop
pop
mov
jg
inc
mov
lea
jmp
push
mov
xchg
icebp
loope
jns
or
je
lret
push
dec
shlb
push
mov
pushf
xor
or
sbbl
ret
rcr
sub
inc
repnz
xor
mov
cmpsl
es
push
and
outsl
xchg
cmp
mov
push
jbe
aam
out
test
popf
orl
subl
and
popf
cmp
mov
imul
out
adc
jp
int
into
leave
test
scas
jg
xchg
mov
out
mov
cmp
stos
dec
xor
outsb
inc
cmpsb
mul
sarb
ja
add
push
div
mov
adc
mov
jnp
and
sbb
stos
inc
sbb
adc
fldt
loopne
lea
cld
das
and
pop
repnz
je
bnd
inc
inc
mov
aad
aam
sti
mov
xor
test
inc
filds
shl
sbb
cmpsl
mov
inc
push
das
hlt
out
iret
iret
inc
adc
xor
ss
mov
pop
and
int3
scas
pop
call
sub
mov
lods
lcall
push
loope
cmpsl
int
push
lahf
and
repnz
mov
mov
inc
orb
or
sub
cmp
fs
jg
dec
aaa
fiaddl
jns
sbb
fs
pop
pop
mov
not
pusha
subb
push
in
les
pop
mov
sbb
jecxz
lret
in
arpl
cld
out
cwtl
scas
sub
xor
icebp
xor
push
movsb
out
push
cmc
icebp
sbb
pop
daa
push
pop
cwtl
imul
lret
mov
or
push
cmpsl
sub
fstpl
inc
xchg
xor
test
test
sbb
xor
aad
lea
test
in
lods
ret
nop
mov
mov
mov
enter
pop
nop
mov
dec
sbb
in
pop
sti
mov
inc
out
roll
cmp
lods
dec
sub
inc
movsl
stc
adc
dec
or
enter
mov
sub
add
ljmp
xchg
test
dec
mov
ss
test
mov
mov
imul
pop
lahf
sub
shrb
int
cmp
pop
push
jp
sarb
cmc
jl
insl
lock
enter
scas
test
add
jl
push
mov
in
sbb
in
xor
sbb
adc
push
cmp
add
movsb
jg
nop
decl
push
push
sub
or
popa
pop
mov
roll
inc
jp
mov
fistps
fsub
xchg
jge
sbbl
movsb
jecxz
adc
and
jnp
imul
imulb
imul
mov
js
scas
jnp
jp
xchg
jb
cmp
inc
jnp
xchg
jns
not
cmpsl
and
pop
lcall
fwait
dec
cltd
popa
inc
jae
scas
testl
mov
lock
outsb
insl
and
pop
out
push
lcall
sahf
icebp
pop
mov
cmp
pop
jmp
xchg
jne
outsl
push
aas
push
fisubrs
insb
mov
movsl
cmpb
cltd
dec
sbb
xorb
int
int3
cmp
pop
push
sbb
xor
add
inc
pop
mov
dec
pop
sub
xor
dec
mov
mov
xlat
mov
xor
mov
add
into
dec
out
cmp
cld
clc
cmpsb
mov
pop
or
insb
out
aad
sbb
push
and
in
dec
int
imul
enter
call
or
and
jns
dec
lahf
test
xor
sbb
pushf
into
and
mov
mov
dec
loope
push
sbb
or
idivl
aas
addr16
mov
data16
test
sbb
scas
or
sbb
fcoms
add
out
lcall
cwtl
lahf
pusha
sbb
adc
mov
test
cmp
loope
pop
iret
mov
and
cmp
xor
mov
outsl
js
dec
pop
mov
bound
sbb
mov
out
shll
cmp
push
mov
mov
daa
loop
dec
in
push
insb
popa
ss
add
shlb
mov
push
or
movsb
jno
bound
mov
mov
xchg
push
clc
xor
aam
sahf
jb
fidivl
lret
adc
mov
stc
or
or
xchg
rcll
insl
or
dec
mov
clc
aaa
mov
mov
adc
inc
lahf
jp
xchg
push
inc
sahf
dec
and
cmp
popa
jg
fnstcw
les
inc
imul
pop
inc
loop
sarl
inc
jo
addr16
repnz
mov
pop
ret
lret
pusha
inc
imul
cwtl
inc
rolb
popf
and
fwait
sbbb
cmp
aaa
jno
adc
push
mov
out
mov
and
fnstsw
pop
mov
add
mov
dec
movsb
adc
or
mov
sub
ljmp
dec
jno
adcb
vfmsub231pd
sub
insb
or
push
xlat
pusha
sbb
sbb
test
out
mov
insl
mov
test
pop
mov
out
push
inc
aas
inc
mov
inc
xchg
dec
lahf
les
jmp
test
mov
mov
sbbl
cmp
aad
jmp
push
cmpsl
clc
fwait
pop
pop
test
mov
and
aas
jno
dec
lret
call
in
das
jo
les
xchg
popa
jg
scas
addr16
mov
movsl
mov
subl
popf
pop
push
cmp
ds
fcoms
pop
insb
fnstcw
dec
or
inc
jo
test
rcll
popf
repz
mov
loopne
push
cmp
rorl
fsubl
cmpps
mov
ds
push
xlat
stos
adc
jae
jb
daa
in
dec
jge
ljmp
stos
pop
push
jmp
enter
js
add
in
mov
or
fcoml
and
aam
popa
or
loop
adc
sbb
enter
mov
dec
inc
pop
or
add
inc
and
add
mov
pop
enter
xchg
ds
cli
cmp
lds
fisttpll
aam
push
sub
ret
je
adc
shll
mov
lret
dec
sbb
jne
xchg
cwtl
dec
mov
mov
dec
div
sbb
stos
sub
jle
ret
xor
jg
cmp
rcrl
repz
inc
xchg
sub
movsl
add
into
fs
dec
imul
inc
sbbb
pop
push
dec
outsb
les
xor
ss
rolb
pop
out
jecxz
in
cmpsb
mov
in
in
pop
je
pushf
hlt
jnp
inc
fst
cmc
adc
dec
incb
xor
push
or
and
addb
xchg
outsl
cmpsl
sub
xchg
push
cwtl
jo
stc
popf
mov
cmp
or
js
in
repz
mov
push
sub
ja
leave
pop
ret
out
mov
int3
mov
and
mov
std
mov
xlat
scas
pop
inc
icebp
inc
jge
cwtl
jno
xchg
sbbl
sub
jno
outsb
sub
clc
mov
push
push
popf
sbb
push
sbb
mov
into
mov
repnz
cmp
gs
insl
adc
lret
jne
push
fsubrl
loopne
ret
push
mov
mov
push
mov
cld
pusha
cmp
fstpl
movsl
lds
xor
pop
pop
rcll
test
test
adc
mov
mov
sbbb
or
out
xor
popf
mov
out
js
ljmp
scas
cmp
cmp
inc
in
adc
jb
out
cmp
sub
jae
xor
cmc
outsb
cwtl
sahf
sbb
mov
rolb
xor
mov
scas
inc
pusha
xlat
loop
mov
or
ja
sbb
or
loop
das
mov
or
add
xchg
loope
out
and
cld
jmp
push
les
shrl
mov
cmc
popf
jp
jg
and
rclb
cmp
ret
fwait
jge
pop
xor
bound
loopne
mov
sub
xchg
inc
push
cwtl
lds
pop
or
pop
scas
jne
jno
inc
hlt
mov
fst
pop
jb
mov
xor
sahf
xor
loope
sbb
sub
xor
or
adc
mov
xor
lods
in
rcll
outsb
outsb
add
jns
orb
test
mov
inc
arpl
pop
jbe
mov
mov
fs
lea
or
mov
repnz
pop
rcll
jmp
cmp
loop
aas
mov
adc
and
pop
iret
push
std
and
add
int
mov
stos
mov
out
sbb
les
outsb
pop
sbb
ret
mov
std
xor
cltd
mov
add
jmp
mov
test
sub
mov
add
xchg
pop
lcall
ret
cmp
push
pop
jmp
outsb
pushf
xchg
sti
lods
jl
mov
mov
aad
jbe
cld
pushf
xlat
jne
xor
jge
inc
jle
out
or
pusha
dec
in
add
jg
cmp
mov
in
push
icebp
jmp
loope
inc
in
or
dec
insb
mov
fnsave
push
dec
fwait
inc
enter
push
pushf
ja
xor
out
cwtl
push
outsb
sub
vpcmpeqw
nop
push
insb
nop
mov
aad
ja
push
jmp
push
bound
stos
ds
sbb
imul
mov
cmp
push
cmp
xor
jmp
test
rorl
push
daa
stos
orb
jbe
mov
sbb
fbld
dec
pop
cmovg
adc
adc
inc
cmp
pusha
dec
loopne
and
adc
sub
andl
out
loopne
push
sub
loopne
mov
iret
mov
mov
or
fdivs
movl
dec
cmpl
cmp
adc
rep
xchg
ljmp
icebp
stc
sar
outsb
mov
cli
jae
cmc
cld
adc
cmp
mov
imul
fmuls
mov
movsb
and
enter
repz
mov
jns
stos
mov
xchg
int3
mov
and
jno
mov
addr16
lret
test
ja
sub
insl
pop
push
std
lret
xchg
inc
jp
sbb
nop
shrb
insb
inc
pop
dec
dec
or
sub
and
adc
mov
loope
outsb
push
push
lods
mov
and
or
xchg
das
loop
sub
sbb
sub
jnp
jmp
xor
es
enter
out
jl
in
test
sub
mov
cmp
jmp
push
mov
rclb
in
subl
mov
mov
popa
bound
inc
mov
outsl
repz
dec
xchg
ljmp
mov
jge
cmp
dec
and
jae
or
loop
shrb
jl
daa
xchg
dec
xchg
mov
mov
repnz
xchg
xor
sbb
inc
mov
mov
push
mov
cmpsb
loope,pn
or
adc
xor
cs
xlat
mov
and
push
mov
cmc
xsha1
cmpsb
emms
lds
stos
loope
lock
subb
xchg
fwait
bound
out
inc
lret
daa
fwait
sub
cli
mov
xorl
adc
pop
repz
jne
mov
pop
call
inc
test
gs
xchg
xchg
out
mov
sbb
daa
ljmp
mov
loopne,pt
cmp
mov
jae
xor
sahf
mov
xlat
movswl
cmp
or
push
mov
repz
and
fsts
push
ret
cmp
lcall
push
cmp
or
pop
xor
xlat
icebp
fs
mov
inc
out
ljmp
in
andb
and
loopne
or
jmp
push
fsts
mov
ljmp
jae
mov
add
hlt
or
dec
dec
adc
dec
cmpb
lock
mov
out
shl
mov
outsb
sahf
cld
mov
filds
rolb
insb
testl
inc
push
lret
js
dec
push
add
adc
sub
jg
fdivl
sub
rcl
jb
mov
mov
mov
shrb
rorl
test
mov
adc
in
dec
mov
popf
fcmovnu
mov
push
adc
mov
and
mov
cwtl
aam
push
cmpsl
popf
mov
mov
mov
xchg
jne
xchg
out
jecxz
pop
out
icebp
inc
mov
ljmp
inc
push
xchg
pop
adc
add
dec
into
mov
push
jl
cs
xor
push
add
rorl
sbb
xchg
in
stos
cld
fs
sub
push
xchg
jo
fwait
sbb
lret
push
mov
push
adcw
std
imulb
sub
cmp
lcall
mov
popa
dec
mov
icebp
mov
movsb
push
push
lock
cmc
imul
mov
fdivp
sub
cmp
movsb
mov
sti
imul
mov
mov
pop
jmp
sub
sbb
cmp
lcall
bound
out
jae
add
into
imul
movsb
testl
sbb
out
jge
ret
pop
adc
fldenv
fwait
jle
push
mov
dec
mov
or
std
add
insl
jbe
out
add
mov
rcrb
sub
sbb
pmulhuw
outsb
xor
jne
in
inc
dec
jp
dec
out
xchg
in
daa
rclb
sub
clc
xorl
mov
xchg
insl
sbb
cs
ljmp
cmp
sub
jbe
and
stc
aad
lea
loop
stos
dec
fistpl
adc
inc
push
scas
movsb
nop
sub
aaa
rolb
sbb
insl
jp
jecxz
popf
mov
and
inc
mov
xchg
xchg
movsb
push
lret
mov
add
sbb
call
movsb
jno
jge
mov
push
negb
pop
xlat
scas
push
inc
xchg
fdivl
pusha
out
hlt
mov
and
cmp
sbb
orl
push
aaa
dec
fucom
gs
dec
or
mov
add
jl
mov
pop
jmp
push
shlb
xor
das
es
xor
xchg
ret
test
jge
scas
sbb
cld
inc
mov
mov
xchg
cmp
push
sarb
fstps
movl
bound
cli
add
lcall
cmc
adc
mov
or
insb
jl
fs
mov
andb
cmp
and
or
gs
push
lret
lret
into
xchg
movsb
loopne
lds
out
mov
and
fs
sub
mov
int
outsl
push
ret
shrl
les
and
stos
xchg
push
ret
cs
pop
xchg
xlat
cmpsb
pop
punpckhdq
fs
test
sub
cli
mov
ret
mov
push
mov
cmp
xlat
add
dec
mov
add
and
loope
rcll
rclb
stos
adc
mov
inc
lahf
jmp
in
loopne
mov
push
and
testl
js
hlt
pushf
sub
or
in
negl
mov
mull
jne
sub
xchg
sbb
setle
jmp
enter
xchg
call
push
push
ljmp
sub
mov
inc
adc
push
xchg
and
stos
fcmovnb
scas
sarb
or
or
xchg
mov
mov
mov
lret
nop
imul
rcl
inc
push
cmc
adc
lret
lock
mov
or
popa
or
shlb
jmp
jge
scas
ljmp
lcall
dec
push
ja
ror
out
fnstcw
push
sbb
inc
and
ret
xchg
ffree
outsl
leave
mov
cld
pop
jmp
out
mov
negl
push
cmp
mov
test
movsb
lods
and
push
inc
enter
inc
add
inc
fwait
lock
adc
adc
xor
mulb
ds
hlt
or
dec
and
jle
cmp
das
rcrb
push
add
je
test
pop
int3
bound
es
inc
popf
and
push
shl
stos
push
mov
push
ror
fstl
pop
xor
lcall
lret
mov
jo
les
dec
dec
aas
mov
jmp
xor
cwtl
loope
jmp
jp
xor
mov
add
sbb
or
mov
pop
cmc
fisubrl
inc
hlt
cmp
js
leave
add
lea
push
fiadds
cmc
nop
xchg
mov
lods
imul
dec
adc
cmp
js
jnp
bound
imul
inc
push
push
loopne
ss
xor
sbb
ds
xchg
pop
cs
jle
mov
mov
mov
adc
dec
mov
lret
scas
inc
dec
jno
ljmp
pushf
mov
and
fs
test
mov
inc
mov
and
mov
movsl
push
add
mov
cld
jo
sahf
movsb
xor
popa
mov
cmp
mov
cli
pop
add
xchg
daa
in
sub
pop
jns
jb
bound
imul
sbb
ja
push
ds
call
mov
sub
imul
inc
xor
hlt
add
insb
mov
mov
inc
aad
dec
mov
inc
fnstsw
aad
loopne
arpl
hlt
std
stos
dec
leave
or
add
jmp
test
mov
outsl
mov
xchg
add
iret
sbb
iret
add
xor
mov
push
dec
pop
and
add
int3
mov
dec
nop
mov
aam
enter
out
cmp
dec
or
sbb
test
add
shrb
lock
scas
and
mov
movsl
cli
outsb
or
in
adcb
adc
test
xor
dec
lds
pop
iret
ja
mov
and
mov
mov
mov
test
test
mov
dec
mov
mov
mov
jo
mov
xchg
jecxz
stos
add
mov
daa
shll
loopne
ljmp
mov
in
ret
or
mov
insb
jge,pn
fs
jecxz
mov
dec
insl
cltd
mov
jb
adcl
adc
mov
mov
ret
jne
data16
jns
xor
sbb
or
lcall
sbb
inc
xor
push
aam
jg
out
adc
aam
mov
sub
jo
insl
lahf
inc
cmpsl
xchg
mov
inc
adc
loope
jns
shl
adcb
das
lahf
sbb
mov
add
push
adc
test
jbe
dec
xor
js
sub
test
or
xor
in
sub
cs
xlat
xor
fucomip
fildll
std
lret
lahf
xor
dec
stos
jne
or
jmp
or
int
loopne
fs
push
repnz
and
arpl
or
sub
roll
pop
cmp
test
aad
push
jae
xchg
test
mov
cmp
cmp
jl
shll
inc
stc
or
cmp
pop
and
cs
dec
jmp
dec
sub
xchg
push
or
mov
dec
in
mov
aad
jo
hlt
stos
repnz
push
fmul
pop
cs
imul
mov
cmp
pushf
and
data16
bound
xchg
dec
mov
pop
jo
lcall
aas
pop
stos
nop
xlat
push
inc
xor
aad
push
xor
mov
sti
push
fs
xor
sbb
call
fcoms
or
hlt
and
jp
les
rclb
mov
pop
jle
inc
loop
push
insb
fwait
and
xchg
loopne
fadds
inc
push
push
push
repnz
mov
adc
cmp
mov
ret
or
flds
pusha
js
out
mov
push
mov
sub
cld
jbe
pop
jle
xor
adc
add
xchg
pusha
add
xchg
xchg
out
repz
add
stos
shll
clc
iret
xor
aas
stos
adc
add
mov
push
idivb
dec
outsl
jbe
sub
inc
lret
repz
cmp
inc
pop
pop
lcall
xor
std
mov
lods
sub
cmpb
das
add
cmp
jg
scas
cmp
sbb
movsb
sbb
stos
pop
pop
adc
test
xor
add
mov
repnz
aam
push
cltd
das
pop
jmp
jno
test
es
inc
sbb
mov
into
loop
loope
mov
mov
or
mov
pop
mov
pop
add
jp
mov
cmp
mov
test
call
or
cmp
in
xor
mov
mov
mov
imul
aam
and
int
mov
mov
adc
inc
push
mov
ret
std
outsl
or
sub
andl
fisubl
sbb
ja
push
test
push
push
xchg
add
aad
push
push
xchg
fists
cmp
xor
push
mov
fstpl
xor
ljmp
add
into
stc
jp
sbb
mov
stc
fsubs
or
fs
ud2
cmp
je
lahf
sub
push
mov
mov
pop
or
cmp
xor
pusha
mov
test
push
aas
ret
cwtl
scas
sub
fcoml
arpl
int
mov
xchg
xchg
int3
and
mov
lods
dec
pop
inc
insb
and
mov
cmp
or
adc
add
jge
mov
xor
psrld
xchg
add
adc
push
and
dec
push
clc
sub
filds
xor
jle
je
or
loope
das
lcall
and
sahf
push
test
fstl
cmp
mov
test
dec
adc
ljmp
pop
lods
mov
lret
pop
push
add
adc
and
cli
lods
popa
mov
xor
lods
mov
and
arpl
call
adc
ret
cmc
jg
lcall
add
scas
testl
push
lea
push
add
dec
mull
push
test
lcall
inc
outsl
mov
sbb
sub
xlat
mov
jl
mov
jae
out
adc
dec
aas
xchg
aam
mov
sbb
loope
jl
add
dec
in
fcmovnu
movsb
lods
movsb
add
push
mov
cltd
push
shll
inc
mov
shrl
xor
int3
jp
sub
inc
shl
push
xchg
cmp
or
ss
out
cltd
push
sbb
or
repnz
scas
xchg
insl
cltd
push
nop
cmp
or
push
aas
aas
sub
push
enter
outsb
dec
fisttpl
mov
dec
loope
ret
push
push
mov
mov
subl
sub
icebp
das
mov
add
inc
or
pop
arpl
pop
icebp
out
xchg
push
sbb
cmpl
fcoml
add
mov
ljmp
xchg
jno
mov
js
fnstsw
divb
sub
int3
in
pop
repnz
mov
mov
lds
sub
dec
jg
mov
sbb
push
inc
repz
push
push
test
sbb
xor
fldenv
out
stc
bnd
fcmovnbe
add
mov
decl
int
xchg
jg
and
mov
fsin
pop
lea
popf
or
push
dec
std
ss
sbb
jge
rcrl
mov
imul
dec
mov
imul
or
adcb
or
dec
std
mov
pop
aam
add
xchg
sahf
or
dec
repz
and
call
push
pop
xchg
inc
or
std
inc
cmpsl
mov
arpl
sub
leave
push
imul
cs
in
xchg
mov
int
inc
xchg
inc
imul
xor
mov
cmp
cmc
cld
jg
ljmp
pop
outsb
mov
cmp
stos
jmp
or
lcall
inc
out
lods
mov
sub
pop
xlat
jmp
sub
enter
and
repz
and
sbb
pop
outsb
rcr
dec
je
dec
mov
aaa
aam
leave
mov
dec
lcall
neg
out
cltd
jg
in
inc
pushf
lods
inc
dec
and
fstpl
jno
add
dec
lcall
scas
or
push
inc
pushf
cmpl
std
mov
rorl
fnstenvs
xchg
and
shlb
popa
jns
dec
sti
popa
dec
xchg
loop
and
imul
add
sbb
jns
and
jge
or
ja
ficomps
adc
adc
add
outsl
rclb
movsl
jns
xor
mov
lcall
insl
mov
xor
inc
add
push
mov
xor
jne
pop
hlt
mov
jnp
xor
jb
push
data16
shll
and
add
imul
pop
mov
outsl
push
js
sub
dec
jmp
mov
xor
icebp
ljmp
fcomip
test
xchg
lret
mov
cld
mov
jge
and
cs
add
add
and
rolb
add
or
jmp
dec
push
fwait
lret
ss
push
sbb
test
sbb
mov
shrb
add
push
lods
fistps
push
pop
push
pop
jnp
add
loop
scas
xor
or
dec
pusha
jno
mov
jp
xorl
dec
mov
mov
je
push
xor
xchg
gs
arpl
stos
sub
xchg
cli
pmulhuw
pop
mov
movsb
mov
cmp
sti
xchg
mov
inc
fdivrl
inc
adc
leave
repnz
push
mov
cmpsb
push
xchg
outsb
pop
incl
hlt
cmp
and
push
test
or
mov
push
push
fyl2xp1
fdiv
aad
mov
add
sbb
and
filds
or
mov
fisubl
in
stos
xor
inc
fidivl
gs
mov
enter
shlb
push
or
cmp
ss
push
sbb
push
add
dec
sub
add
data16
push
xor
cmpsb
cmp
dec
mov
lret
rorb
and
fisubs
push
mov
in
iret
pop
dec
fimull
mov
out
inc
jae
pusha
and
adc
testb
mov
or
add
push
sbb
cmp
and
inc
inc
pop
repz
push
rcrl
jmp
jg
adc
or
movsb
hlt
and
loope
jo
sub
inc
cltd
xor
xchg
mov
cmp
sbb
push
dec
popa
inc
xor
inc
sbbl
and
imul
cmc
pusha
in
dec
roll
inc
sbb
xor
js
mov
jmp
and
scas
sub
jl
xchg
xor
sub
outsl
lds
aam
jp
jle
push
mov
jbe
dec
pop
lds
xor
imul
mov
fnsave
cltd
out
mov
lods
ss
and
mov
cmc
xchg
shl
clc
or
mov
arpl
nop
jns
and
mov
mov
pop
push
cli
les
shlb
jl
inc
jle
movsl
pop
mov
xchg
lretw
ljmp
ficompl
inc
iret
jo
mov
lea
jbe
mov
imull
mov
dec
bound
add
pop
les
es
mov
pop
mov
and
popf
sahf
cmc
adc
enter
push
inc
or
incl
pushf
call
sub
cmp
dec
inc
push
loope
shl
stc
jp
sbb
cmpsl
sub
out
test
std
inc
push
and
xor
fimuls
cmpsl
nop
cld
mov
sbb
inc
or
adc
add
xchg
xor
mov
movb
dec
lods
mov
mov
mov
xor
popa
jp
adc
mov
fisttps
addr16
add
xchg
rcl
test
or
push
mov
add
aas
xor
lea
out
pop
mov
xchg
daa
movsl
pop
push
or
sti
scas
jo
or
mov
repz
fwait
leave
icebp
adc
push
test
mov
daa
sub
inc
dec
add
push
xorl
mov
rorl
scas
dec
int
mov
lret
jmp
jne
or
xchg
aas
out
lds
sbb
test
and
xor
adc
dec
in
cld
pop
jnp
movsl
call
aam
aaa
sahf
int
adc
mov
inc
mov
negl
sbb
add
mov
js
jle
test
push
mov
enter
mov
outsb
fisubrs
push
rol
xchg
mov
pop
push
std
lcall
or
xchg
popf
add
adc
or
in
adcb
jb
cmp
cmp
into
icebp
push
orl
outsb
idivl
popa
sub
sti
or
daa
lret
in
jne
loope
cmpsl
mov
mov
inc
mov
addl
mov
fs
mov
loop
hlt
dec
outsl
mov
mov
adc
xor
xchg
movsb
lods
lret
repnz
hlt
dec
ja
rol
out
cwtl
push
pop
shll
test
cmp
mov
push
loop
and
leave
or
lahf
aaa
mov
out
mov
hlt
scas
arpl
push
out
int
jp
cmpb
divl
in
fiaddl
mov
bound
mov
dec
shlb
push
push
jge
lods
mov
sub
push
pop
pop
mov
les
and
icebp
push
lahf
shlb
sbb
dec
mov
pop
push
dec
inc
xor
adcl
xor
mov
add
xchg
dec
rorl
add
mov
rcrb
in
outsb
or
bound
jmp
mov
xor
xor
push
mov
push
lds
jae
ret
push
add
ret
cmp
sbb
xchg
cmpsb
push
cmpsb
rol
xchg
lods
imul
mov
pop
and
adc
sub
mov
pop
cwtl
popa
cmp
shlb
xchg
cld
loop
jp
jge
xchg
sbb
pop
dec
std
outsl
sbb
rcll
decb
adc
mov
shlb
sbb
js
scas
pusha
mov
cwtl
and
outsb
push
xor
cli
xor
or
inc
or
sub
pop
xchg
in
xchg
sti
movsl
adc
and
int
je
dec
into
push
rolb
imul
mov
sub
insl
inc
out
mov
in
mov
or
jmp
dec
xor
jp
or
cmc
add
xchg
lods
and
shld
push
ret
in
xchg
jns
adc
adc
aas
scas
xchg
jne
js
push
repnz
jp
loope
sbb
push
jbe
adc
pop
add
cmp
cs
ret
test
scas
shlb
movsb
cmp
call
orl
out
push
mov
dec
ret
or
push
lock
jecxz
pop
push
jp
popf
clc
lret
xor
out
aad
xchg
xlat
dec
jno
mov
and
add
ja
pop
lods
test
adcl
enter
add
popa
sahf
push
lods
mov
xchg
jl
ss
and
shrl
push
es
icebp
xor
in
lods
add
or
dec
xchg
icebp
xrelease
xor
xchg
mov
lods
popa
jo
sub
ret
faddp
cltd
in
cmp
rcl
jg
inc
cltd
lods
push
cwtl
adcb
mov
pusha
inc
adc
add
dec
icebp
and
cmc
sub
pop
inc
xlat
icebp
sbb
jecxz
cmp
incl
inc
inc
jae
dec
dec
sub
cmp
inc
mov
cli
or
adc
xchg
mov
mov
xor
ret
arpl
mov
add
add
in
cs
mov
jmp
mov
outsl
mov
mov
sub
jl
push
mov
int3
or
stc
push
iret
negl
fs
fdivrp
iret
out
insb
dec
cltd
lds
push
cmpsl
push
test
or
ds
pop
or
gs
jmp
mov
clc
sub
push
int3
aam
nop
fidivrl
js
push
lahf
xchg
mov
sub
ljmp
shll
sub
mov
ret
dec
cmpsl
iret
rol
sahf
cvtps2pd
mov
push
fsubl
jae
fwait
lea
sbb
mov
sub
aaa
mov
dec
cmpsb
mov
fisubs
xchg
mov
dec
in
inc
or
sbb
ror
inc
mov
or
and
sbb
adc
jl
sarb
sub
xlat
nop
push
and
repz
jne
shll
or
fistl
jnp
cld
fstpt
xchg
add
fnstcw
jle
movsl
ss
jno
test
sbb
lret
lret
arpl
das
adc
andl
fdiv
dec
dec
inc
ds
call
into
rorl
and
pop
mov
xchg
mov
and
testb
xchg
and
dec
imulb
mov
ffree
xchg
clc
add
adc
das
test
or
ror
in
fcmovnb
fists
and
xorb
xchg
in
dec
pop
jl
push
subb
dec
jb
lods
jb
jg,pt
inc
js
mov
sub
adc
xlat
and
inc
jae
mov
cmpsb
ficoms
lahf
call
popa
fmull
and
pop
cmp
xchg
orb
mov
pop
dec
cltd
and
es
les
fcoml
push
xchg
and
jne
fsubl
mov
daa
xchg
sarb
push
lock
pop
sub
aad
ret
add
xchg
adc
jnp
cli
aad
mov
cmp
iret
dec
xor
movsl
test
cmpsl
push
lcall
cmp
outsl
inc
xchg
mov
dec
pop
xchg
popa
push
addr16
out
outsb
rcr
jno
scas
lcall
add
rcll
mov
lret
enter
lret
pop
xchg
sub
adc
mov
mov
dec
pop
call
call
int
int3
cmp
and
aad
fwait
dec
js
dec
jo
cld
imul
adc
pop
or
sub
xor
pop
arpl
sbb
insb
push
repnz
cld
pusha
sbb
mov
test
dec
inc
and
mov
push
mov
ss
shrb
neg
rcrb
in
jge
cmpsb
out
jle
int
loop
xlat
stc
xchg
xchg
mov
lods
lea
popl
add
aas
xchg
idivb
jae
inc
and
rorb
lods
fnstenv
mov
sub
push
xchg
pop
aaa
and
mov
mov
or
mov
mov
or
test
jno
mov
movsl
out
int
scas
and
push
push
xor
imul
ds
shl
sbb
jg
loope
fs
or
mov
and
sbb
daa
xor
or
jmp
push
or
shll
repnz
scas
in
hlt
aam
sub
xor
jnp
inc
int
cltd
jge
inc
and
gs
pop
mov
and
leave
aaa
inc
mov
int3
gs
sbb
je
insl
jns
jno
xor
aad
sub
xchg
clc
mov
out
pushf
and
sarb
stc
out
jns
scas
outsb
mov
push
push
lcall
shlb
fucomip
add
aas
aas
xchg
in
pusha
mulb
or
call
sub
xor
cld
test
into
fwait
stos
icebp
push
mov
cmpsl
or
sahf
sub
lea
outsl
push
sub
jge
cmp
sbbb
fsts
vrcpps
pop
insl
jb
insb
pop
inc
dec
lret
add
pop
pop
sub
cltd
inc
jg
xorl
test
movsb
in
push
pop
xchg
cmp
ret
mov
xchg
lock
mov
mov
and
call
cwtl
xorb
jmp
je
dec
cmp
mov
xor
mov
jp
sbb
xchg
ds
jnp
sub
adc
add
cmpsb
and
push
insb
cmp
les
jae
subb
cltd
lods
ret
fsubs
dec
notb
fisttpll
add
sub
and
ret
add
enter
daa
add
out
jmp
bound
mov
jecxz
xchg
add
dec
cmc
ljmp
push
imul
in
ss
inc
in
shlb
faddp
scas
into
das
dec
mov
add
jecxz
mul
ljmp
test
cmp
push
movsb
std
aad
in
xlat
xor
movsl
test
sbb
scas
mov
mov
mov
dec
sbb
in
jecxz
add
and
sbb
pop
cmp
mov
aaa
mov
inc
adc
test
xchg
lea
ror
out
jb
out
sub
test
jo
leave
cmp
stos
and
xor
loope
push
les
icebp
mov
fdivrs
xor
incb
or
cmp
inc
and
data16
andl
adc
mov
sbb
test
loope
inc
inc
lcall
outsb
jmp
pushf
push
insb
cltd
mov
and
cmpsl
sub
int3
push
inc
scas
lock
icebp
sub
sbb
dec
cmp
fists
je
inc
dec
shlb
inc
cmp
adc
add
mov
mov
sub
lret
or
inc
mov
xchg
stc
add
xchg
dec
or
aas
xor
arpl
bound
cmpb
mov
dec
clc
cwtl
adcl
repz
push
cmpsl
ret
cmp
sub
ss
mov
push
bound
push
mov
pop
add
out
out
push
mov
adc
rcrb
sub
stos
imulb
mov
out
loope
pop
aam
adc
pop
inc
mov
xlat
fdivrl
rorl
pushf
sub
arpl
in
jo
call
xor
fwait
out
pushf
pushf
add
inc
jbe
add
lret
mov
hlt
fisubl
aas
sbb
in
pop
jg
or
mov
hlt
lret
adc
cwtl
sti
cmp
in
idivb
or
fstpl
push
jnp
arpl
inc
repz
insl
push
sub
push
adc
mov
pop
dec
pop
inc
mov
ja
cltd
fnstsw
mov
bound
jge
cmp
cmpsb
adc
and
outsl
sub
pop
fsubrl
push
test
lahf
mov
jo
hlt
jge
loope
data16
dec
pop
adcb
sub
movsb
ret
inc
mov
lds
mov
imul
fisttpl
fxch
sahf
and
or
adc
call
jle
xor
push
dec
push
repnz
ljmp
fmull
les
push
push
push
sti
or
imul
jne
cli
jnp
mov
cmpb
movsb
mov
mov
cmp
insb
movb
jns
sbb
std
mov
mov
pop
shr
jle
loopne
push
push
ss
jp
cli
aaa
idivb
insl
hlt
aad
mov
inc
xchg
scas
loop
xor
pop
test
sbb
fadds
add
dec
std
sub
xchg
lea
sbb
stc
test
shll
imulb
xchg
ficompl
pusha
in
dec
xchg
jmp
pop
pushf
cmp
jge
mov
mov
dec
jg
pop
sbb
mov
arpl
pusha
mov
cwtl
inc
push
jnp
ss
and
mov
xchg
movsl
jnp
pop
xor
sarl
jl
mul
and
mov
orb
jbe
pop
dec
icebp
add
aad
daa
mov
sarb
cmp
rclb
stos
in
enter
jecxz
xchg
jmp
into
fadd
push
ja
xchg
inc
sbb
xchg
fmull
jl
bound
push
dec
sti
xor
cmp
adc
jmp
jecxz
fisttps
in
outsb
pop
inc
cltd
or
lods
fsubrl
data16
fwait
imul
pushf
pusha
push
add
xchg
inc
aam
jp
loope
les
pop
loope
js
insb
cli
sbb
jecxz
xor
leave
shlb
std
dec
push
int
cmp
jae
out
xchg
scas
aad
sub
mov
lock
test
xor
mov
xchg
jns
push
and
or
push
test
movsl
cmp
les
korw
dec
insb
int3
xor
and
mov
sbb
push
push
fidivs
mov
inc
test
dec
or
jp
in
inc
mov
dec
imul
aas
add
inc
mov
add
lea
push
enter
dec
fs
xlat
test
xor
cmpsb
pop
or
cli
sub
ror
dec
cmp
or
ja
or
test
dec
jns
mov
lret
out
or
mov
mov
stos
adc
andb
mov
aaa
int3
les
mov
shll
aam
out
mov
xchg
movsb
jp
in
cmpsb
mov
push
js
mov
nop
mov
cwtl
mov
jmp
xchg
sub
insb
loope
movsb
test
decb
push
pop
movsl
adc
mov
ja
pop
insb
mov
cmpb
sbb
adc
insb
movsl
mov
push
inc
ss
push
pop
jmp
dec
cmp
sbb
insb
jecxz
lds
nop
adc
jae
mov
fcmovnb
pop
xchg
sbb
rclb
ret
aas
out
sahf
lock
inc
mov
jbe
mov
push
push
outsb
xchg
dec
push
xor
jecxz
mov
push
clc
xchg
mov
jge
ret
mov
inc
add
repz
mov
adc
fidivl
ret
adc
out
mov
int3
mov
fstpl
jno
mov
int3
adc
leave
shr
bound
cmpsb
dec
sarl
push
loope
or
pushf
push
rcll
mov
imul
daa
inc
sbb
je
dec
aam
lods
loopne
mov
xor
jmp
push
int3
test
je
outsb
jnp
cmp
adc
add
repz
mov
jbe
sub
sbb
hlt
or
xchg
cmpsb
stc
js
out
push
cmpsb
shrl
xlat
addl
cmp
aam
pop
jge
mov
or
out
pop
sarl
fwait
or
inc
mov
mulb
stos
fst
mov
sbb
sbb
sbb
sub
or
rorl
ljmp
fcoms
sub
inc
pop
inc
lea
sbb
mov
mov
int3
shll
insl
fisubl
jne
mul
pop
dec
mov
mov
hlt
out
stos
aas
mov
shlb
call
sbbb
cmp
fwait
push
sbb
lock
sub
rorb
fwait
push
incb
cmp
inc
add
popa
data16
inc
outsb
inc
out
pop
scas
xchg
fisubrl
sbb
test
sbb
dec
adc
idiv
lea
loopne
dec
dec
fsubr
adc
ljmp
push
test
int
mov
fwait
pusha
loope
xor
mov
adc
repnz
mov
mov
adc
inc
icebp
xor
lahf
sub
fwait
popa
sbb
sub
jmp
fcomps
mov
popf
add
leave
adc
dec
in
mov
shlb
cmpsb
popf
mov
pop
pop
fistpll
and
rcr
push
mov
cwtl
pusha
inc
jmp
or
in
dec
les
cmpl
lods
sub
rcrb
mov
mov
push
push
cld
int
inc
js
jns
pop
ja
aad
stos
insl
and
jge
fimull
sbb
das
cmc
popa
icebp
movsb
and
or
and
fisubs
popf
push
mov
jbe
and
add
mov
jae
insb
push
loop
testl
jne
aam
ja
mov
sub
adc
xor
fadd
mov
cmp
mov
mov
push
int
mov
ja
adc
cli
adc
movsl
jecxz
sbb
push
inc
std
shl
lcall
or
sahf
mov
and
push
mull
dec
ret
dec
xchg
fucomi
push
mov
test
sbbl
mov
adc
inc
pop
lahf
faddl
mov
adc
aas
and
lcall
cwtl
movsl
push
xchg
pusha
sbb
cmc
cmc
mov
pop
jb
sub
mov
fisubs
sbb
es
xchg
jb
je
lock
imulb
cld
inc
fstl
stos
mov
sbb
fsubrs
mov
ljmp
add
jmp
mov
aas
mov
sub
sub
subb
fnstenv
add
pushl
fucomip
stos
adc
pop
xorl
jl
xor
sbb
dec
xor
imul
dec
je
ffree
int
movsl
aad
mov
xor
adcl
fdivs
inc
push
scas
testl
loopne
jmp
inc
in
mov
pusha
addr16
repz
dec
cmp
add
inc
scas
loop
xor
loopne
pop
sbb
outsl
xchg
scas
roll
pop
ds
jae
test
cli
enter
imul
mov
or
ss
dec
cld
pop
jo
add
dec
mov
arpl
mov
inc
and
ljmp
lods
scas
jmp
test
xlat
xor
stos
out
jg
test
and
jb
inc
mull
popa
test
out
divb
pop
mov
adc
sbb
loop
call
pop
lods
jo
inc
dec
jbe
mov
push
sbb
add
dec
sub
fdivrs
icebp
push
sub
cmp
and
inc
jmp
lods
mov
mov
adc
sub
push
arpl
int3
mov
pop
stc
lcall
aam
shll
sbb
stos
push
loop
leave
push
cs
fstpt
andl
out
xchg
repnz
cltd
icebp
sbbb
pop
sub
loope
mov
jns
push
test
inc
jne
mov
mov
push
and
mov
insl
xor
mov
daa
ret
sub
and
dec
jp
loopne
or
aaa
movsl
jo
outsl
pushf
mov
fildll
jmp
or
jmp
mov
cli
loop
ja
clc
cmp
xor
mov
das
test
xor
mov
ja
std
cltd
cltd
in
lret
ljmp
sahf
jae
pop
cmpsb
outsb
in
inc
cmpsb
sbb
ds
test
repz
ja
jmp
daa
jg
mov
stos
cmp
sahf
fimuls
dec
out
neg
shll
cs
loope
sub
and
and
dec
inc
cli
int3
dec
mov
hlt
and
mov
xchg
arpl
jb
lret
es
and
dec
mov
sbb
cmpsb
mov
inc
mov
mov
add
lods
jge
imul
test
ja
jl
sub
lcall
or
cmp
xchg
cld
cwtl
pop
mov
push
lock
lock
mov
cmp
cmp
ret
leave
dec
daa
mov
push
jbe
aad
int3
int3
outsl
mov
or
mov
pop
inc
jnp
mov
jp
and
inc
pop
sbb
jnp
imul
int3
cmp
or
and
and
lods
out
or
xchg
lret
ljmp
andl
dec
test
push
les
add
inc
inc
push
ljmp
gs
imul
sub
pushf
std
lea
adc
or
test
cmp
aas
jae
xlat
inc
or
dec
mov
jbe
out
xchg
cmp
mov
jl
pop
clc
nop
faddp
mov
cmpsb
push
pop
dec
out
dec
or
adc
lods
push
fistl
dec
push
out
lret
out
and
int3
cmpb
popl
cmc
xlat
cmp
dec
repnz
xor
lahf
mov
aad
mov
stc
cmpsl
jp
decl
pushf
lcall
icebp
insl
aam
jns
scas
jp
jg
add
popf
int
xchg
jecxz
jns
fisttps
std
test
lds
daa
xor
jp
mov
jl
cli
push
lods
out
dec
popf
call
jae
lret
data16
shrb
pop
mov
mov
jbe
out
mov
inc
mov
gs
ffreep
add
out
mov
and
lret
push
mov
lret
mov
dec
push
fimuls
mov
jnp
lahf
xchg
sub
jle
hlt
inc
lock
and
pop
xor
xor
mov
daa
xchg
mov
loop
jns
insb
fidivl
cwtl
jae
push
jns
xor
adc
addr16
fistpl
cmc
cmpsl
daa
jle
push
add
pop
imul
aas
daa
add
add
dec
js
add
imul
inc
nop
call
clc
shl
xchg
imul
cmp
ds
scas
mov
repnz
std
cmp
in
add
imul
xor
adc
adc
pop
add
je
lods
lret
mov
loope
ret
mov
popf
xchg
fs
mov
push
pop
iret
cs
inc
mov
mov
arpl
mov
repnz
sub
push
sub
lods
jecxz
subl
sbb
scas
leave
jno
jnp
ror
jne
in
cld
hlt
iret
lods
dec
loopne
pop
dec
adc
lcall
or
cs
pop
sbb
cmp
cltd
jg
scas
inc
js
ss
adc
mov
inc
or
xor
xchg
push
jb
cmp
lret
flds
data16
test
jns
mov
jb
pop
pop
xor
or
xorb
shll
mov
mov
mov
popa
dec
mov
jecxz
leave
xor
nop
mov
fucomip
mov
and
mov
fisubs
pop
push
lods
cltd
int
and
in
push
jmp
xchg
dec
cli
aas
adc
xchg
pop
ss
rorl
mov
jno
out
lock
cs
sahf
sub
out
js
xchg
adc
ret
push
or
pushf
xchg
mov
rcll
sbb
and
aam
cmp
and
repnz
insl
imul
pusha
out
out
push
fs
sti
mov
dec
and
scas
cmp
pop
sbb
std
adc
jb
dec
or
lock
popf
daa
xor
push
and
mov
loopne
add
loope
xor
ficoml
jnp
push
dec
fstpt
jecxz
inc
std
cmpsb
mov
insb
aam
or
shl
jle
lret
movsl
xchg
xor
pop
loope
sbb
jnp
add
imul
stos
inc
pop
loope
xor
lahf
push
es
sbb
ljmp
test
dec
inc
sbb
fstps
mov
pushl
inc
push
xchg
adc
mov
dec
addr16
test
mov
dec
pop
and
push
mov
sar
mov
test
aaa
jl
xor
repz
or
incl
inc
dec
sbb
pop
mov
push
and
sti
out
push
loop
ljmp
leave
mov
stos
jp
lahf
mov
sarb
dec
mov
fstl
or
js
pop
xor
add
enter
xor
lret
sub
scas
jnp
pop
xchg
sbb
sarb
sahf
lock
adc
mov
pop
call
push
adc
dec
sbb
push
jb
roll
les
rcrb
lahf
add
fnstenv
add
insb
cmp
test
imul
in
xchg
sub
add
xor
sbb
jnp
test
sub
sub
icebp
pop
ret
js
jg
xor
daa
jp
movb
arpl
test
sti
pop
and
cmp
xchg
mov
clc
mov
push
mov
or
cwtl
popa
loopne
fsubl
aad
jns
stos
inc
lds
adc
mov
sub
mov
in
xor
dec
xlat
adc
and
dec
xor
push
aas
sub
js
adc
jns
sub
stos
rcrb
ret
cmp
mov
xor
push
push
mov
add
rclb
adc
cltd
nop
mov
dec
xor
xchg
mov
test
lods
icebp
sub
push
xlat
mov
and
push
cld
in
xor
sub
xchg
aaa
std
sbb
fwait
jge
mov
fldl
movsb
fsubl
and
add
xor
push
ret
mov
sarl
insl
in
add
dec
stc
ret
sbb
call
and
cmc
mov
jb
adc
xor
fs
inc
dec
inc
divb
or
mov
ljmp
pushf
addl
movsb
push
orl
roll
jnp
dec
fisttps
shr
mov
stos
and
rorb
fstps
sarl
dec
outsb
pop
cmp
fsts
dec
lods
push
out
sti
aas
rcrb
jb
sbb
aas
lods
push
cmpsb
fstps
loop
lock
dec
cmp
or
mov
cltd
call
jns
test
pop
lahf
dec
add
inc
cmp
test
pop
sbb
sbb
outsb
inc
xlat
test
loopne
mov
test
movl
push
sub
mov
jo
pop
test
pop
bnd
pop
jle
mov
sbb
repz
enter
xor
adc
jbe
fnstsw
shl
or
pop
xchg
mov
dec
lcall
add
and
xchg
out
popf
add
cwtl
outsl
fldcw
stos
jne
movsb
or
ds
dec
mov
pop
fstp
xchg
sbb
push
in
stos
mov
inc
fcomps
loopne
scas
adc
lret
jae
or
cmp
pop
jmp
ljmp
clc
test
push
ficomps
out
jae
fwait
les
mov
arpl
mov
dec
test
movsl
mov
and
adc
inc
imul
out
xor
in
roll
in
test
mov
and
sub
push
cltd
clc
dec
mov
int3
scas
stos
xchg
out
aam
cs
inc
mov
cltd
rcr
pop
push
sub
cli
mov
lahf
sti
or
movl
jno
mov
adc
xchg
cmc
mov
jle
cmp
frstor
jge
pop
icebp
mov
scas
lret
scas
inc
jge
fdivrl
or
aas
cmpb
iret
pop
push
adc
inc
sti
repz
out
loopne
ja
mov
mov
stos
jmp
mov
rcrl
outsl
stos
jbe
cmp
repnz
inc
imul
jne
in
lea
rcrl
mov
or
adc
mov
mov
pop
std
aad
imul
pop
sub
or
cmpsl
icebp
loope
adc
js
add
sti
and
xchg
nop
movl
lret
fistpll
sbb
jl
ud1
push
dec
std
testl
sub
dec
in
jns
cwtl
ret
popa
out
dec
xor
cld
gs
ja
lods
jp
cmp
push
test
hlt
outsb
shll
ds
movsb
lods
sub
or
pop
stc
arpl
sbb
popf
test
outsb
mov
cld
sub
insb
pop
inc
mov
imul
xchg
or
loope
es
cwtl
dec
mov
test
and
add
jns
in
call
add
decb
arpl
push
push
out
push
mov
push
jecxz
rol
cwtl
imul
xor
push
test
jne
and
frstor
cli
inc
mov
testl
mov
or
mov
iret
sbb
cmpsb
negl
xchg
sub
ret
dec
pop
cmp
pop
cmp
mov
inc
fcomp
fldt
jg
dec
pop
inc
repz
xor
mov
mov
cmpsl
add
mov
loop
sub
outsb
xor
push
adc
lods
cmp
addr16
lea
push
push
adc
fsincos
pop
push
ds
ja
pop
fsubp
adc
lods
je
push
inc
ret
int
sub
sub
xchg
arpl
push
fsubs
ret
inc
add
and
inc
add
dec
and
das
mov
dec
pop
sti
lods
divb
inc
rclb
jo
std
inc
mov
xor
and
add
imul
adc
out
fbstp
dec
pop
xor
imul
push
out
mov
cmp
imul
movsl
dec
push
push
loopne
fstps
data16
jg
scas
jnp
jmp
dec
aaa
xchg
mov
jne
sbb
mov
sub
mov
mov
push
adc
mov
pop
in
adc
out
xchg
mov
or
lock
inc
mov
pop
adc
cmp
jne
jle
bound
cmpsl
and
loopne
mov
pop
xchg
xchg
mov
inc
jp
inc
xchg
nop
jg
cltd
push
rorb
push
pusha
movsb
ucomiss
iret
icebp
ljmp
dec
lret
dec
loopne
daa
daa
jns
repz
mov
stos
cld
outsb
mov
sti
por
jno
jl
das
sarl
subl
aam
mov
jmp
cwtl
lods
js
xor
inc
push
imul
lock
jo
stos
stc
je
mul
stos
sbb
rcrl
pop
xchg
fnstenv
mov
mov
jg
ror
pop
push
pop
psubusb
dec
and
int
cld
push
aaa
add
mov
ret
xorl
aaa
enter
movsl
xor
or
mov
pop
or
jp
adc
test
popf
outsb
jl
lock
lret
mov
sub
insl
and
dec
inc
push
insb
or
loop
lds
pop
dec
xchg
cwtl
pop
cmp
jecxz
fsubl
pusha
mov
bnd
lcall
and
test
mov
dec
pop
mov
jp
dec
xchg
and
push
sbb
cmp
xor
sahf
iret
in
sahf
mov
cmp
scas
xor
out
lods
ds
push
push
jmp
out
sbb
stos
jg
lock
mov
test
iret
jle
cmp
xor
test
sar
sub
adc
xchg
mov
clc
adc
icebp
imul
xchg
js
add
sbb
hlt
rcrl
aas
fisttpl
push
movsl
sbb
insb
push
push
mov
cmp
push
test
inc
mov
pop
or
inc
sbb
mov
mov
pop
mov
xchg
incl
add
add
jne
push
aad
jecxz
mov
mov
fstpt
loopne
fdivrs
mov
adc
out
xchg
pop
movsb
test
iret
xor
std
mov
mov
in
fwait
mov
lods
rcl
mov
mov
jb
imul
fnstcw
call
das
jne
sub
in
adc
pop
lods
hlt
lods
aaa
sbb
mov
in
loope
outsl
je
pop
pop
add
imul
in
or
inc
inc
mov
pop
out
call
or
mov
js
sahf
dec
sahf
fsubrp
in
cmp
sub
jecxz
push
jecxz
jg
mov
jmp
shll
leave
jae
mov
icebp
cmp
sub
sarl
or
or
pop
inc
leave
dec
pop
push
mov
into
call
push
push
clc
jge
lret
jmp
sbb
inc
mov
inc
lret
add
enter
out
push
adc
cmpsl
fstpl
pop
inc
cs
sahf
jne
inc
popl
stos
es
mov
repz
outsl
shl
into
js
cld
sub
dec
mov
lret
fsub
mov
mov
push
xchg
and
rcll
sbb
fistpl
push
fwait
adc
std
sub
mov
cmp
lods
imul
stos
xor
and
loopne
fcomi
jp
push
inc
push
jb
dec
ljmp
jno
pusha
jl
cs
fstl
or
dec
cmp
xor
lcall
test
sbb
and
arpl
lds
mov
dec
push
mov
testl
cmp
movsl
cmp
dec
data16
xchg
fmul
enter
cmp
xchg
and
repnz
xchg
fst
negl
sub
jnp
jg
push
push
mov
push
es
mov
xchg
fs
cmp
and
loop
jbe
sub
jl
and
in
mov
mov
into
in
dec
sub
clc
sbb
pop
stc
push
mov
mov
pushl
or
xor
push
pop
sbb
int
sub
das
mov
jne
imulb
jne
dec
add
xchg
dec
push
enter
fildll
leave
add
sti
faddl
data16
je
inc
lahf
adc
jmp
jmp
test
jmp
cmpl
xchg
xor
sbb
scas
insb
sbb
and
popa
enter
popa
mov
mov
aas
xchg
mov
repnz
sahf
test
pusha
mov
jp
je
jecxz
mov
subb
ret
jmp
in
xchg
xchg
mov
jo
cltd
jle
lea
pop
movsl
lock
adc
and
push
cli
xchg
adc
stos
adc
xchg
push
push
sub
pop
std
nop
pop
into
jbe
in
or
faddp
adc
dec
adc
js
push
inc
xor
aad
cmp
clc
jg
xor
sarl
lea
out
fstl
cld
fwait
or
clc
jne
leave
push
daa
mov
fildll
lds
pushf
lock
cmp
mov
aad
cli
cltd
and
mov
push
lods
xchg
nop
ss
loopne
mov
loop
clc
gs
test
sub
inc
push
xlat
ss
mov
dec
jnp
clc
je
cltd
lret
mulb
push
inc
xor
scas
pop
imul
mov
mov
inc
dec
mov
fcoms
or
imull
sub
shl
dec
divl
popa
jle
cmp
int3
and
aas
dec
or
mov
pop
stc
aad
mov
pop
add
cmp
sub
aaa
and
pop
jnp
fiaddl
test
in
jle
dec
jge
cltd
jbe
mov
mov
lret
add
aam
pop
imul
ss
push
jmp
mov
mov
test
mov
sbb
mov
push
mov
push
in
fsubrp
es
out
fdivrl
cmpsb
xor
imull
pop
and
fclex
cld
pop
leave
fcoml
sbb
cmp
or
repz
jmp
int3
xchg
mov
jno
iret
scas
cs
mov
pop
inc
cli
xor
popf
dec
fwait
call
adc
sbb
pop
iret
imul
inc
movsb
mov
push
fdivs
sbb
movsl
mov
xchg
aad
call
xor
cmpsl
xchg
data16
mov
into
rcrb
push
loop
adc
shll
and
movsl
fistpl
adc
adc
mov
out
inc
ljmp
mov
sub
popa
push
sbb
inc
pop
outsl
xorl
mov
sbb
jb
add
adc
ja
mov
xchg
mov
dec
xlat
imull
scas
or
fucomp
cli
popa
mov
ja
adc
pushf
outsb
in
fsubrs
mov
out
addr16
xor
test
sbb
inc
inc
dec
mov
sub
jnp
data16
or
ja
jge
adc
fucom
inc
daa
mov
or
push
xor
dec
cmp
cmc
xchg
pushf
push
mov
mov
adc
push
jae
cmc
bound
gs
jmp
mov
cmp
std
lock
mov
push
push
xchg
rcr
add
and
imul
pushf
cltd
nop
shll
test
outsb
sub
out
push
outsw
sub
sub
sub
mov
push
and
pop
aaa
fidivrs
popa
jno
cld
mov
scas
dec
repz
je
pop
mov
data16
dec
pusha
xchg
ja
mov
jle
test
outsl
jp
cmp
push
or
pop
pushl
cmp
decb
sahf
loop
jns
inc
mov
pop
pop
and
sub
cmp
dec
mov
sbb
push
iret
or
js
xchg
jae
nopl
rorb
ficoml
ret
repz
popa
cmc
hlt
repz
mov
push
popf
jg
repz
sbb
movsb
sbb
pop
sub
popf
xchg
adc
lahf
and
mov
repz
dec
fwait
inc
mov
lods
cmp
stos
pop
mov
sub
cmpl
ljmp
stos
mov
mov
dec
in
jecxz
fstl
jl
ficomps
cwtl
push
test
or
jmp
adc
je
dec
das
into
fisttps
mov
sti
mov
dec
dec
ljmp
daa
inc
ljmp
jle
unpcklps
inc
inc
xchg
gs
loop
test
jno
shr
add
bound
jge,pn
pop
adc
inc
lock
clc
lahf
or
lret
cmp
hlt
aad
sub
push
fldcw
sbb
lock
mov
fs
stos
jmp
fs
sub
mov
mov
fcompl
lods
lea
dec
sub
mov
jle
mov
jmp
dec
jp
imul
insb
sub
push
pop
inc
sti
jg
dec
fldl
lahf
cmpl
movsb
outsl
dec
jns
add
push
mov
add
addr16
nop
cmp
xchg
push
std
sbb
lahf
jae
dec
xor
pop
sub
jl
jo
stc
loop
push
sub
scas
inc
push
mov
push
orb
xlat
roll
pop
jge
insb
insb
jb
ficompl
jae
mov
iret
sbb
dec
out
sub
bound
jne
mov
cld
repnz
hlt
jl
or
pushf
or
or
sbb
jp
rorl
stc
jle
int
push
in
adc
push
das
xor
mov
mov
ret
xor
or
sbb
gs
mov
inc
andl
test
add
jae
lock
sbb
lea
hlt
arpl
emms
mov
push
lods
mov
addr16
dec
fs
inc
in
xchg
dec
mov
sti
push
int
or
clc
sbb
cwtl
incl
leave
sahf
jp
mull
lea
mov
aaa
shl
sbb
inc
push
aaa
inc
mov
andb
out
mov
xchg
aas
mov
inc
cmp
orb
out
pushf
pop
push
cmpb
je
jne
arpl
mov
add
or
xchg
xchg
insl
fiadds
aad
stos
lock
hlt
fsubr
mov
popa
arpl
pusha
jnp,pt
jge
out
fldenv
sbb
mov
sahf
mov
xor
adc
or
jo
fisubrs
out
test
mov
imul
sub
pop
scas
out
pop
scas
iret
cmc
aas
in
pop
pushf
push
mov
dec
push
pop
mov
mov
pop
adc
stos
dec
fldenv
lret
ljmp
or
lea
jns
jno
jb
mov
loopne
insb
sbb
mov
mov
jecxz
xchg
mov
cmp
mov
out
daa
xchg
lds
es
ljmp
jl
outsl
dec
insl
xchg
mov
mov
xchg
int3
je
sbb
subps
and
test
imul
call
test
lock
shll
push
sbb
das
cltd
pop
loop
mov
push
xlat
fsubrl
dec
sbb
inc
push
ret
in
jae
mov
je
cli
mov
pop
cltd
add
loop
mov
idivb
pop
out
xor
mov
inc
cmpsb
add
fistl
cmpsl
or
mov
outsl
sub
popf
or
fmul
out
push
jnp
dec
mov
mov
lahf
movsl
enter
lods
pusha
mov
xchg
int3
pop
outsb
sbb
jle
jl
inc
je
test
popa
cmc
jbe
sub
sarb
cmpsl
push
jle
js
inc
in
lcall
subl
add
dec
xchg
insb
sub
int3
xchg
mov
jle
xlat
cmpb
ja
jo
loope
int3
sti
ljmp
test
andl
adc
or
jne
movsb
jbe
sbb
sbb
jg
or
sti
mov
inc
lock
in
aaa
and
push
imul
daa
sub
xchg
packssdw
stc
fists
std
mov
inc
mov
push
push
mov
int
xchg
push
daa
push
ss
cmp
stc
push
mov
sub
out
push
fnstsw
mov
int3
pop
add
icebp
imul
out
popf
cld
adc
fdiv
xchg
mov
sub
das
fildll
clc
fs
data16
popa
popa
jge
lods
test
popf
repnz
lcall
sbb
sbb
loopne
out
cs
push
fbstp
rcr
push
test
inc
lret
insl
test
mov
dec
ficoml
sbb
push
push
fadds
sbb
pusha
fwait
pusha
idiv
cmp
enter
ret
pop
dec
mov
xchg
cmp
das
ds
xor
lret
ljmp
sarl
jp
insb
mov
xor
ljmp
xor
test
push
add
fimull
add
mov
je
push
lods
sub
dec
sub
mov
pop
arpl
xchg
scas
sub
inc
jg
and
pop
inc
in
rorl
into
addr16
adc
push
cmp
xor
mov
or
mov
fisttps
jl
rol
movsl
add
inc
inc
ja
jg
xchg
adc
mov
cmc
pop
in
idivb
xor
push
sbb
fcom
push
mov
sub
fsubl
push
lcall
pop
push
and
hlt
inc
shll
dec
lret
inc
rcr
into
cmc
mov
out
pushf
push
add
mov
cld
push
or
je
sahf
lea
xchg
in
cmc
adc
rcr
mov
pop
push
dec
mov
ss
push
mov
dec
scas
xor
inc
sbb
repnz
xor
testl
movsb
lret
xchg
loopne
cmp
ss
pusha
mov
adc
outsb
and
push
lahf
xor
add
add
mov
stos
pop
divb
pop
pop
push
xchg
push
pop
pop
jge
lods
cmp
popl
adc
out
ljmp
mov
dec
add
xchg
xor
pop
pop
mov
popf
mov
call
js
sub
lods
sbb
gs
lret
sahf
sbb
push
mov
pushf
int3
test
fisubs
shrl
sbb
sarl
stos
lea
bound
rorb
shl
data16
jp
cmpsl
add
xchg
push
ss
fxch
cwtl
aas
sub
stc
or
es
and
push
jnp
cwtl
imul
test
pushf
les
cwtl
arpl
inc
mov
imul
sub
shll
sub
mov
shrl
adc
cmp
cmp
leave
pop
out
pop
sbb
lds
adc
insl
adc
icebp
rolb
xchg
mov
cmpl
mov
cmp
jne
cmp
fstps
jo
dec
mov
outsl
aam
dec
fldcw
int
add
outsb
out
in
sbb
dec
enter
in
adc
shrl
push
or
mov
adc
adc
adc
push
daa
scas
mov
xor
fisttps
scas
mov
fsubrs
rcll
cmp
push
xchg
dec
xor
push
aam
inc
lahf
mov
sub
push
mov
bound
pop
rcr
lea
cmp
push
pushf
xchg
inc
dec
pop
xchg
arpl
pop
mov
in
test
ficompl
adc
cli
mov
pop
xchg
dec
das
inc
scas
jne
sti
pushf
outsb
aaa
out
pop
daa
jno
imul
insb
mov
pop
jge
nop
dec
loope
inc
mov
popf
jns
pushf
adc
int3
and
pop
mov
mov
pusha
jp
loopne
enter
jae
adc
mov
xlat
adc
add
add
mov
push
enter
fisttps
in
add
inc
mov
xchg
jle
xchg
sub
cmpsl
mov
movb
lods
jmp
fstpt
in
js
test
xchg
ds
repz
jl
push
iret
js
decb
or
xchg
inc
xchg
lods
sahf
adc
push
cwtl
xor
jp
push
std
mov
fcmove
lods
std
test
icebp
xchg
push
mov
cmp
cmpsb
xor
mov
cmpsl
mov
xor
loop
adc
pop
push
xchg
sbb
mov
dec
movsl
test
cmpsl
cmc
or
faddl
fildll
xchg
and
rolb
fadd
pop
cmp
push
repz
xor
cmp
aad
arpl
repnz
dec
es
out
sarb
push
adc
xlat
mov
out
mov
push
orl
outsb
out
mov
insl
into
push
mov
mov
in
sahf
xor
push
or
mov
cs
mov
fildl
mov
add
pushf
decb
pop
push
movsb
mov
add
test
dec
adc
jno
call
mov
mov
hlt
xchg
sahf
mov
dec
movsb
jnp
add
mov
sti
test
hlt
mov
fldcw
jecxz
jecxz
adc
es
push
xlat
loop
add
mov
xor
jmp
pop
movsb
call
xchg
int
add
mov
enter
xchg
aam
push
test
negb
mov
lcall
mov
inc
add
aas
lods
push
das
in
stos
arpl
jmp
xor
mov
imul
flds
fidivs
mov
movsb
xchg
jns
lds
sub
or
xchg
lock
sbb
cmp
popf
mov
cmp
and
cmp
in
lods
inc
mov
and
enter
sbb
push
daa
mov
jl
loopne
xlat
pop
testb
dec
mov
and
adc
arpl
push
or
inc
js
mov
xchg
cltd
xchg
lret
jmp
and
pop
mov
mov
lret
fs
insl
push
loop
cmpsb
sbb
xchg
imul
inc
sbb
je
mov
ds
cli
fldl2t
sub
sbb
stos
outsb
push
bnd
or
mov
add
mov
jle
adc
lods
or
sahf
les
adc
lods
push
cmc
insb
lea
or
fdivrp
jb
mov
sahf
int
and
mov
in
mov
inc
lds
ljmp
inc
vpaddsw
jbe
adc
push
push
sub
push
pop
sub
sub
pop
dec
mov
xor
mov
pop
shrl
jge
push
ret
cli
shll
aaa
xchg
and
add
fsubrs
add
std
push
cld
pop
loopne
cmpl
out
sti
and
xchg
jg
pop
jp
ja
mov
test
stc
js
into
sub
int3
or
push
inc
vminpd
cmp
aad
inc
push
and
dec
test
jbe
push
iret
shll
cld
dec
mov
push
or
cmpsl
fstpl
test
stos
push
std
jno
push
fisubrl
lock
xchg
popa
push
inc
aad
movsl
pop
inc
mov
outsb
js
adc
loop
add
add
jle
hlt
add
sub
in
into
cwtl
cmp
push
gs
mov
loopne
mov
loopew
inc
sub
lock
push
ljmp
sbbl
jp
xchg
fwait
sti
cmp
mov
and
cmpsb
jb
jl
mov
add
lods
push
sub
stc
mov
adc
mov
lret
mov
pop
or
cmpsb
pushf
pop
xlat
lock
dec
mov
leave
xor
jo
cli
add
in
cmp
push
pop
in
stos
mov
inc
in
xchg
nop
cmp
jle
test
xchg
cmpsl
sub
pop
mov
in
mov
fldenv
mov
sbb
das
xor
mov
push
jp
stos
fnstsw
xchg
loope
push
push
addr16
aaa
mov
pusha
mov
insb
aas
lret
jge
les
ficoml
imul
clc
push
movsb
dec
aas
xlat
inc
out
or
jb
push
cmp
cwtl
mov
xchg
jnp
push
mov
ljmp
sbb
in
or
mov
xchg
shll
adc
cmp
in
and
mov
pop
sbb
dec
mov
jae
cli
rol
bound
fs
pop
call
mov
add
push
scas
mov
fpatan
imul
or
jmp
fsub
idiv
test
popa
mov
outsb
icebp
in
jns
fistpl
xor
cld
cmpsb
adc
fiadds
sub
rorb
lock
out
xchg
push
pusha
adcb
sbb
inc
jne
jg
mov
jo
and
mov
adc
jmp
stos
js
aaa
inc
or
xor
mov
jbe
xchg
int
jbe
mov
jl
add
and
push
lds
add
xchg
aam
mov
mov
rcrb
add
mov
push
repz
jbe
cmpl
popa
xchg
sbb
push
pop
movb
mov
dec
stos
cmp
add
int
negb
push
rol
rcl
imul
repnz
adc
adc
dec
mov
cmp
mov
xor
ljmp
idiv
jbe
in
adc
jecxz
sbb
fcomps
xor
in
les
mov
pusha
sub
insb
fwait
cmp
fs
or
arpl
leave
inc
or
or
arpl
ljmp
mov
and
mov
add
jne
push
and
push
pop
les
pop
pop
mov
dec
addr16
ja
sub
fsubl
shl
daa
lret
shll
repnz
sahf
pusha
popa
fimull
addb
cwtl
ds
mov
fsub
pusha
jl
pusha
and
jg
sti
je
xor
inc
sbb
insb
ds
push
mov
ss
cmc
call
push
jl
jnp
addb
js
push
fcoms
sbb
hlt
xchg
mov
inc
sti
daa
repz
lods
mov
cmpsl
mov
lock
std
inc
mov
lock
sbb
xor
cmp
mov
setne
push
addr16
sub
mov
mov
scas
mov
dec
les
test
dec
sbb
and
mov
xchg
aaa
aaa
out
jb
mov
mov
pushf
in
mov
cli
mov
lods
stos
xchg
test
mov
sti
adc
stos
mov
and
and
stos
mov
adc
push
pop
inc
pop
add
pop
pop
xchg
rorl
dec
or
add
icebp
xchg
push
in
and
or
pop
insl
mov
mov
scas
and
pop
or
enter
stos
shrb
add
push
fcomip
mulb
fsts
mov
jmp
sub
mov
divb
push
mov
rclb
cmp
inc
mov
pop
inc
add
or
push
leave
inc
xchg
in
lret
add
insl
jb
leave
sbb
cli
fbstp
sbb
scas
mov
cmc
mov
dec
add
lds
lcall
lock
and
lods
jbe
sbb
mov
xchg
dec
sbb
sbb
xchg
movsl
enter
sub
ja
int
push
push
mov
in
insb
cmpsb
aad
jl
inc
xchg
push
mov
movsb
repnz
jb
test
roll
stos
out
pop
sub
into
add
adc
addr16
js
xor
xor
cwtl
mov
stc
inc
inc
sub
fisubrs
lahf
push
xchg
lods
in
mov
pop
sub
popa
fimuls
setl
inc
push
std
adc
mov
lcall
jp
and
loope
gs
rorb
mov
adc
xor
shr
mov
adc
inc
dec
and
and
jp
ds
sub
fisubrs
sbb
push
lret
xchg
clc
lods
sbb
mov
pop
sbb
push
jae
outsl
add
cmpl
out
xor
inc
scas
notb
sbb
jb
xchg
xchg
icebp
repnz
mov
or
push
cmp
pushf
dec
int
cmp
pushf
push
insl
loopne
in
out
out
push
sbbb
push
imul
cmp
aam
inc
test
dec
ja
inc
addr16
mov
clc
shll
adc
pop
mov
imul
push
repz
test
lea
mov
pop
inc
push
cmp
cmp
scas
pop
popf
jp
dec
mov
and
pop
inc
mov
nop
and
cmp
mulb
cmp
ljmp
in
sbb
mov
fsts
xor
pop
mov
sub
sub
loop
add
sub
sahf
out
pushf
dec
jns
and
movsb
hlt
stos
outsb
adcb
or
inc
fisttpll
xchg
cwtl
sub
shrb
out
in
jle
popf
imul
pop
pop
push
lcall
mov
dec
mov
add
jmp
mov
adc
sbb
lahf
mov
push
push
lea
push
jbe
mov
into
aad
leave
scas
adc
inc
out
cmc
push
ja
out
cmpsb
cmp
lods
out
lret
sub
mov
scas
push
fwait
xor
repnz
xchg
xchg
jnp
popa
std
mov
push
popf
sub
negl
xchg
push
xchg
movsb
bound
jmp
fsubrs
dec
pop
mov
pop
jbe
aad
loopne
loopne
pushf
lods
pop
dec
shlb
push
adc
xchg
adcl
and
arpl
in
decl
das
pop
jns
or
jbe
daa
inc
sahf
das
aaa
test
mov
shlb
test
mov
cmp
repz
inc
mov
fiadds
fldenv
fisubs
or
enter
or
notl
lahf
jb
push
sub
sbb
lcall
bound
jg
mov
dec
dec
out
xorl
mov
inc
mov
push
test
dec
jae
ret
mov
mov
mov
rcrb
or
xor
cmc
fmul
push
xor
mov
push
mov
popf
mov
or
mov
fs
jle
sbb
jb
inc
jp,pn
popa
popf
sub
mov
sub
adc
sbb
fistpll
pop
pop
imul
mov
popa
inc
data16
xor
lods
fcompl
push
int3
sahf
add
push
mov
int
repz
nop
mov
lret
and
lods
mov
sbb
lret
mov
dec
pushf
cmc
mov
test
push
fwait
sbb
cwtl
jno
jns
adc
xchg
fwait
xchg
lcall
cmpb
jmp
mov
sbb
out
add
cld
aam
mov
cmp
movsb
jne
fwait
les
cmc
xor
xchg
lods
push
mov
push
xchg
aas
mov
imul
push
jmp
mov
iret
jecxz
inc
dec
or
je
inc
repz
into
lock
loope
std
mov
shlb
inc
call
push
cmp
adc
push
nop
and
mov
xchg
cmp
cmpsl
push
repz
stc
dec
xchg
pop
out
gs
jnp
loope
movsb
pop
std
mov
lret
insb
sub
mov
mov
test
xchg
xchg
mov
mov
jo
es
mov
and
xchg
push
testb
mov
ss
lods
addl
pop
into
fsubs
jmp
add
mov
xchg
cmpsl
loop
lahf
push
inc
push
mov
shrl
lcall
ret
aad
inc
into
jg
sbb
xlat
test
aam
add
adc
arpl
cmp
mov
jo
sub
imul
dec
test
ja
test
inc
adc
int
mov
in
adc
out
sbb
lret
inc
mov
loop
sub
out
push
jo
xchg
xorl
sahf
add
dec
cli
shrb
mov
das
js
fadds
push
repnz
cmc
movb
pop
xchg
xchg
jo
and
loop
jle
and
xchg
pusha
arpl
clc
jb
dec
cmpb
gs
imul
cmc
mov
sahf
cmp
dec
cmp
cmc
dec
jb
inc
loop
pop
cmp
lahf
mov
jle
adc
das
loopne
sarb
or
out
jno
pop
sbb
add
or
or
fsubl
push
jo
cmpsb
fwait
in
lea
stos
insl
push
notb
mov
dec
aaa
cmc
sbb
hlt
xor
ja
push
push
rorb
lea
pop
xor
rol
xor
and
ret
add
adcb
sbb
xor
adc
stos
sbb
and
mov
pop
sti
inc
xor
pop
sbb
dec
mov
fistpll
or
pop
sub
push
aaa
mov
and
lods
mov
sub
xchg
mov
scas
pop
jecxz
orl
inc
jbe
call
imul
jbe
mov
push
push
jmp
outsb
das
shrb
lods
mov
sub
jbe
and
scas
jbe
insb
dec
jp
cmp
adc
adc
adc
push
or
lea
mov
ss
pop
jp
push
jecxz
popf
imul
pop
lods
notb
xchg
out
jmp
ss
punpckldq
mov
call
jecxz
cmp
imul
add
subb
mov
cmpsb
sub
scas
and
ficompl
inc
int3
push
and
inc
push
lea
outsb
push
iret
out
push
aad
inc
imul
and
outsl
dec
mov
mov
lds
fdiv
push
es
mov
popa
rcll
cwtl
dec
out
and
xchg
or
sub
push
insl
nop
pop
push
jno
testb
sahf
mov
mov
mov
xchg
mov
jnp
imul
rorb
xor
xchg
leave
enter
ss
jge
int3
push
add
mov
sub
aad
gs
lcall
aas
mov
push
adcl
push
dec
pop
imul
lods
mov
fnsave
mov
xor
xchg
in
fcomp
popf
mov
mov
cmpsl
inc
je
jbe
lods
xor
xchg
xchg
in
jo
or
pop
call
adc
mov
jmp
dec
cmp
jb
xchg
fwait
push
sbb
add
lea
dec
pusha
xor
fidivl
cmp
stos
mov
loopne
pop
ljmp
cmc
ja
ss
mov
jne
int3
ret
xchg
mov
shlb
jo
insb
mov
xor
xor
in
mov
idivb
adc
test
outsl
pop
out
xlat
adc
cmp
pop
sti
pop
mov
sti
repz
push
adc
cmpsb
loop
bound
sub
lock
out
push
scas
mov
mov
aaa
cli
mov
and
cmp
imull
in
or
push
fprem1
adc
stos
jno
into
ds
std
and
jle
jmp
jae
rcr
loopne
lea
xlat
les
dec
or
dec
ljmp
sbb
pop
fsts
bound
pusha
adc
and
mov
shlb
mov
sub
jl
aam
push
or
jmp
outsl
rorb
or
cmc
leave
mov
mov
sbb
aam
inc
shl
pop
arpl
xchg
mov
stos
pop
lahf
imul
insb
mov
pop
add
adc
out
mov
adc
jp
mov
or
mov
aas
adc
push
dec
add
imul
idivb
mov
mov
shr
xchg
aad
jne
cmp
add
pop
jo
pop
in
frstor
shll
pop
movsl
arpl
sti
sarb
dec
push
addl
push
sahf
inc
js
push
xchg
mov
cs
mov
push
push
iret
pop
mov
mov
dec
das
test
inc
xchg
xlat
pop
jne
lock
or
stos
push
xchg
sub
movsb
dec
dec
outsb
movsl
in
dec
clc
addb
mov
sbb
rol
mov
dec
jl
xchg
pop
les
es
add
cmp
xor
and
xchg
call
adc
jg
cmc
int
or
jmp
push
and
test
fisubrs
xlat
mov
cmp
cmp
sti
sbb
bound
mov
cltd
mov
cmp
cld
jb
jg
int
mov
cmp
mov
stos
sar
mov
mov
sub
dec
std
lret
nop
cwtl
jns
divl
xor
xchg
dec
jecxz
not
lds
in
pop
popa
sbbb
sbb
fs
sbb
setg
sbb
mov
mov
xchg
cmc
sbb
pop
push
or
stos
fnstcw
xor
bound
jnp
add
int
dec
mov
lods
cmp
mov
mov
sbb
jp
inc
ds
stos
bound
outsb
ret
arpl
ss
xchg
popa
aam
jo,pn
lcall
mov
mov
ds
lcall
jne
in
xor
push
lcall
xor
xchg
clc
xorl
cmp
jg
xchg
mov
mov
ljmp
lret
outsl
dec
mov
adc
call
inc
data16
shrb
add
xor
movsl
push
mov
push
clc
movlps
loopne
fsubr
inc
jg
mov
mov
lock
xor
lods
insb
mov
add
fidivrs
es
dec
jmp
loop
and
call
daa
or
les
mov
xlat
inc
mov
mov
iret
cmp
sarl
xor
cmpsb
pop
sbb
dec
jbe
fwait
mov
jne
ds
in
add
fsubrs
fists
clc
in
pop
es
add
mov
mul
fdivrs
jecxz
das
repz
jo
sbb
pop
scas
push
pop
add
iret
sub
add
xorb
lds
jnp
pop
xchg
add
shll
adc
cli
mov
insb
popa
ror
scas
ja
fcomps
push
inc
lea
mov
xchg
paddb
hlt
dec
jae
mov
lea
popf
mov
add
repnz
inc
jae
imul
mov
dec
xchg
adc
mov
inc
xor
xchg
scas
jmp
sti
and
xor
in
stc
pop
sbb
scas
outsb
jne
sbbb
jbe
subb
mov
adc
lods
or
and
push
imul
cwtl
sbb
popf
outsl
mov
cmp
cmp
inc
jns
push
jmp
enter
lahf
push
mov
push
cmpsl
sbb
jno
cmc
mov
pop
push
inc
stos
jle
aaa
mov
fdivp
leave
xchg
xor
push
les
jl
call
jmp
scas
jle
jecxz
push
dec
je
or
aaa
jp
mov
ja
cmp
inc
and
or
js
imul
cmc
add
push
and
les
test
out
mov
popa
sbb
xchg
jp
rorb
mov
mov
idiv
mov
dec
and
push
lea
leave
popa
sub
out
icebp
loopne
cli
jns
les
ss
inc
sub
lea
int3
lods
sub
sub
jle
addr16
ret
dec
lea
stos
jae
sbb
dec
imul
out
adc
in
stos
fs
ljmp
cmc
xchg
fs
adc
fisttps
or
mov
pusha
in
cli
jmp
aam
ror
sar
mov
jbe
aad
movsb
jmp
fsubs
pop
ret
fwait
movsl
lea
lahf
xlat
or
rcrb
gs
push
xchg
mov
mov
test
cmp
or
lds
jle
jmp
jmp
das
and
enter
lcall
push
push
push
cwtl
call
pop
xchg
mov
pop
mov
iret
stos
cmp
sti
gs
and
jne
loopne
inc
sub
cmp
cltd
jl
aam
mov
fistpl
pop
inc
addr16
jno
push
push
sbb
inc
repnz
jmp
loope
and
pop
dec
inc
fnsave
xor
out
repnz
xor
lcall
jns
cmp
mov
in
and
sbb
pop
xor
pop
loop
loope
leave
rcll
imul
je
and
int
xchg
cmpsb
inc
and
fadd
jo
ret
mov
mull
mov
jmp
jl
lea
pop
xlat
jecxz
stos
hlt
shrb
push
inc
imul
shr
das
fwait
adc
sub
adc
je
ds
int
pushw
into
xor
dec
mov
dec
mov
ljmp
mov
loopne
xchg
pop
out
icebp
lahf
movzwl
or
add
imul
orl
adc
mov
sub
cvtps2pi
inc
bound
sbb
je
or
xchg
movsl
fldcw
jno
cmp
mov
push
dec
xor
test
mov
lods
inc
ljmp
mov
call
arpl
cmp
outsl
push
xchg
aad
in
in
out
cs
jge
pop
shrl
jle
cmc
fstpl
movsl
popa
sub
sub
into
cmpsb
push
les
sbb
ret
sahf
add
sbb
outsl
das
push
out
test
in
adc
inc
js
add
add
sub
addl
mov
idivb
mov
and
inc
push
aas
xchg
rcrl
mov
pop
in
cmp
divb
fsubrs
shr
mov
or
jge
pop
cmpsl
jne
cld
subb
std
add
and
xchg
sub
enter
ret
or
or
and
cwtl
ret
adc
testb
shlb
fnstcw
sbb
loopne
push
xchg
ss
ljmp
inc
xchg
mov
inc
pushf
test
pop
movsl
je
or
scas
cmpsb
sub
scas
mov
push
loopne
cld
jecxz
sub
outsl
or
dec
ss
or
shrl
inc
lret
mov
mov
cs
mov
aas
push
lods
fmulp
mov
inc
into
aad
in
jno
movsb
sub
imul
inc
mov
aam
sub
sahf
xor
jno
scas
popf
ds
gs
xchg
out
or
xor
fwait
icebp
pop
test
sbb
push
mov
dec
mov
sbb
sub
lret
int
call
mov
jmp
imul
out
pop
xor
or
pop
daa
mov
jo
jl
iret
mov
out
pop
push
adc
shr
out
xchg
sbb
out
mov
data16
in
fadd
xchg
dec
add
jnp
mov
cmp
push
jae
push
das
addr16
dec
mov
inc
dec
push
lock
or
pop
call
movsb
lahf
orl
xchg
sub
xchg
pop
int3
mov
jmp
xor
pusha
mov
rcrb
sbb
inc
push
push
ret
push
inc
arpl
test
out
aaa
xchg
shl
lret
pop
cli
mov
dec
enter
sub
or
xlat
push
test
pop
add
jb
dec
push
pop
into
pop
xchg
or
push
ffreep
mov
lret
push
std
call
pop
xlat
sarb
gs
add
test
aad
std
pushf
addr16
cld
stos
jg
push
mov
xor
adc
stc
mov
mov
cmpsb
dec
adc
pop
stc
scas
mov
je
call
pop
stos
out
test
movsl
insl
sub
repnz
add
mov
add
add
mov
jne
push
mov
sub
cmp
dec
push
loope
iret
adc
mov
or
in
nop
in
orl
mov
cmpsl
test
adc
ljmp
mov
ljmp
in
push
mov
jne
stos
std
or
pop
pop
aas
adc
insl
pop
lret
and
and
int
repz
mov
mov
xor
sub
hlt
dec
ficompl
sahf
mov
xor
mov
mov
and
add
sbb
add
test
test
jge
adc
push
xchg
and
add
add
icebp
incl
mov
push
cwtl
icebp
lea
sbb
shll
jl
adc
mov
sbb
jle
pop
xchg
daa
loope
cmp
insb
jbe
lahf
jl
cmp
pop
nop
into
data16
push
pop
push
push
decl
stos
das
adc
out
fs
imul
rsqrtps
filds
leave
push
inc
leave
inc
fsubrs
cmpsl
gs
das
andl
call
and
jmp
pop
lret
xchg
mov
dec
cmp
cmp
ret
arpl
add
cltd
fstpl
or
shlb
js
mov
or
lods
add
ss
popf
mov
ljmp
int3
mov
mov
call
mov
add
mov
jne
pop
in
andb
loope
fwait
cltd
sub
sub
fistpll
outsb
imul
xor
nop
imul
ljmp
les
aam
pop
jecxz
xchg
out
dec
pop
adc
push
jp
mov
fldcw
lahf
les
jae
sbb
test
and
xor
cs
fwait
sbb
leave
sbb
imul
mov
mov
or
add
inc
popf
stos
enter
jns
adc
aas
pop
call
iret
addr16
leave
xor
sub
sahf
out
fidivl
cltd
cli
sbb
pcmpgtb
cmp
inc
pop
mov
push
popf
sbb
daa
add
movsb
clc
in
hlt
outsl
loope
es
sbb
and
aaa
cmp
add
pusha
mov
dec
pop
xchg
das
mov
xor
xchg
lahf
ss
lods
pop
push
mov
into
sub
fimull
mov
mov
ret
bound
pop
stos
loopne
orl
repz
cmp
cltd
int
mov
mov
into
sub
aam
aas
mov
xchg
pop
xchg
popa
aad
stos
cld
ficompl
adc
fs
or
pop
arpl
dec
out
popf
fs
sbb
push
shll
call
inc
fsubr
stos
fwait
or
cmp
adc
mov
cmpsb
cmp
jae
sbb
enter
pop
xchg
test
cmp
lret
sbb
popf
cltd
dec
imul
iret
loop
das
adc
outsb
xchg
ret
mov
push
xchg
fists
sbb
xchg
call
pop
pop
dec
or
cmp
mov
inc
outsl
mov
xor
aas
jae
jns
mov
and
cmp
jbe
test
stc
pop
cli
jmp
xor
rorl
push
mov
clc
jmp
mov
fwait
in
stc
push
adc
pop
mov
and
xor
mov
rep
test
enter
andb
pop
jecxz
stc
or
mov
cld
pop
pop
add
jb
push
push
cmc
jge
and
cmc
pop
jo
ds
inc
imul
sub
int
hlt
and
push
fsubrs
shll
rcl
xor
out
daa
or
into
divb
sbb
jecxz
test
xchg
out
sbb
push
es
inc
xchg
es
jl
int
data16
mov
push
push
sbb
inc
in
mov
repnz
sbb
xchg
lret
mov
jp
lcall
lret
sti
inc
ljmp
sub
or
adc
cmp
and
cmc
insl
add
enter
rcrb
mov
jl
aaa
aam
inc
movsl
xor
repz
sbbl
jmp
and
lea
mov
lods
xchg
inc
stos
test
adc
shr
mov
gs
call
add
inc
fs
mov
int
push
icebp
mov
sbbb
mov
mov
cmp
sahf
sbb
ja
xor
push
xchg
jo
xchg
in
pop
icebp
push
jno
mov
push
sbb
jmp
lea
mov
stc
imul
lret
std
fwait
pop
rcll
or
mov
xor
mov
je
scas
dec
xor
arpl
addr16
xor
mov
inc
pushf
jl
fwait
mov
push
inc
aad
mov
and
mov
mov
mov
cmpsb
fadd
dec
add
jge
mov
xchg
fistl
lods
mov
inc
push
scas
or
inc
filds
push
fwait
mov
rcrl
adc
or
pop
sbb
sahf
loope
imul
push
and
jge
out
mov
cld
adc
jb
add
push
into
pop
idivb
inc
jp
mov
int3
fidivrs
int3
dec
outsb
cmp
push
adc
addr16
lea
jmp
add
popf
dec
jo
adc
test
lret
xor
mov
inc
pop
ss
and
inc
loope
outsb
inc
sub
mov
rcl
jo
mov
movsb
pop
sbb
push
movsb
enter
cltd
sbb
jo
pop
cmpsb
int3
in
mov
xlat
adc
xor
loope
mov
sub
mov
jg
pusha
mov
out
je
or
test
call
mov
mov
and
test
pop
cmp
jne
xchg
test
shlb
enter
out
and
ja
inc
out
scas
cmp
pop
pop
ud0
cmpsb
add
dec
aaa
inc
push
scas
stc
cs
int
in
cmp
ss
push
cli
lret
sbb
mov
pop
sbb
adc
push
and
in
pop
or
sbb
mov
je
mov
into
je
and
jmp
add
cmp
xor
lret
mov
jo
mov
iret
jle
in
push
pusha
add
mov
into
inc
fnstsw
inc
push
xchg
stc
fwait
mov
gs
insb
out
fsubs
or
ja
pop
mov
jae
mov
or
lods
mov
pop
in
imul
test
dec
mov
loop
cmc
add
adcb
sbbl
imul
pushf
mov
and
adc
dec
adc
cli
outsb
sub
pop
lcall
inc
or
aas
jl
inc
imull
aad
imul
pop
clc
mov
push
mov
loop
icebp
pop
push
mov
ss
rcr
inc
jo
mov
or
js
sarl
add
mov
mov
push
ficoms
mov
xchg
daa
int
xchg
push
jbe
or
push
ds
jle
sub
iret
sbb
aaa
adc
inc
fistps
mov
push
lahf
push
inc
xor
jae
dec
repnz
insb
lock
daa
scas
aaa
pop
push
bound
push
mov
les
ljmp
fcmovnbe
xchg
lcall
and
sub
adc
aam
mov
mov
mov
insb
rclb
cmp
sti
push
push
mull
lods
out
movsl
sahf
push
dec
stc
add
sbb
fistps
push
insb
mov
dec
ror
xor
loop,pt
add
in
ja
sub
xchg
lods
cmp
inc
in
fwait
add
pop
pop
enter
mov
lsl
push
fnsave
ret
add
xchg
fisubl
in
and
fwait
push
dec
adc
pop
inc
imul
or
adc
pushl
jnp
mov
or
add
jnp
adc
adc
fistps
jo
daa
movsb
adc
enter
testl
fidivl
pop
loop
xlat
add
adc
cltd
xor
add
and
sbb
jb
xlat
test
sbb
pusha
and
decb
test
test
cmpsb
push
out
fnstenv
cmp
sbb
xor
addr16
or
xor
jmp
or
cmp
or
xor
cwtl
insb
dec
push
push
fidivs
lahf
mov
or
or
enter
xchg
mov
mov
pop
mov
or
add
popf
sti
adc
inc
and
xchg
enter
sti
and
fwait
jp
xlat
pop
lahf
sub
cmpsl
mov
pop
popa
xlat
push
inc
mov
cmpsb
adc
jmp
mov
sbb
sbbl
repnz
mov
fistpll
aam
push
in
push
or
les
cmp
lahf
jnp
inc
xor
sti
nop
add
popa
jb
andl
call
das
test
int3
fs
mov
stos
cld
nop
cld
cmp
inc
mov
mov
cmpb
jae
mov
dec
dec
and
pop
sbb
pop
iret
jbe
xor
movsb
pop
in
jnp
xchg
scas
mov
pop
mov
pop
jns
movsb
push
mov
test
dec
sub
sub
push
inc
mov
xchg
gs
sub
xchg
dec
out
lahf
jecxz
cmp
push
mov
sarb
sub
ja
xor
movsl
or
sub
and
cmc
xchg
fimuls
mov
into
cmp
and
out
lcall
or
jnp
cs
fistpll
dec
stc
inc
add
pop
sti
xor
and
push
in
jb
loope
and
jbe
jae
mov
stc
adc
cmpsl
test
aam
cld
push
fldt
call
std
xchg
out
or
pop
dec
xor
or
adc
jne
clc
adc
mov
lret
mov
rol
pop
sbb
incl
pop
jb
inc
call
add
cmp
cmp
mov
dec
je
loop
sub
call
mov
jne
or
in
pusha
sbb
xor
lcall
mov
jae
push
xor
mov
fdivs
pop
dec
pusha
cmp
fs
dec
divl
add
loop
sbb
inc
xor
jmp
cmp
inc
std
dec
mov
lock
movsl
enter
sbb
lahf
lcall
rcrb
jae
fs
aaa
push
and
and
xchg
push
jb
sbb
dec
or
scas
mov
sarl
dec
rolb
jne
jl
push
outsl
jnp
mov
movsl
das
imul
xlat
and
loope
mov
ret
imul
fcmovbe
push
cmp
lock
js
adc
negl
mov
cmp
loope
add
sub
inc
pusha
iret
jns
dec
pop
pcmpeqd
add
xchg
aaa
std
cld
out
jnp
fnstcw
mov
push
push
stc
mov
stos
leave
or
dec
xor
rcr
insb
test
and
inc
fldl2e
jl
sub
push
gs
adc
dec
mov
push
push
push
clc
xchg
jl
sub
sbb
jo
inc
cmpsb
insl
fisubrl
pop
mov
adc
xor
mov
fwait
pop
out
inc
or
fiaddl
pushf
dec
add
dec
repnz
add
daa
and
push
xchg
aas
add
test
int
inc
les
push
fcoml
in
call
add
adc
jl
scas
mov
pop
cmp
mov
fldcw
pop
mov
jae
cmp
inc
loopne
test
jp
pop
jmp
inc
ficoml
rolb
sub
scas
mov
out
aam
das
xchg
mov
sbb
loopne
mov
scas
cmp
dec
cmpsb
mov
inc
jmp
dec
xchg
jmp
push
mov
int3
or
mov
push
mov
repz
jp
lods
pop
outsb
dec
push
aaa
cli
les
gs
jg
dec
push
pusha
cmp
jle
cmp
push
in
pop
inc
test
and
fisubs
push
test
je
dec
jne
cmp
lahf
xor
jbe
notl
xor
clc
push
and
push
mov
int
lret
push
popf
add
test
adc
pushf
xor
stc
mov
and
pop
mov
mov
mov
sbb
jp
jns
mov
add
xor
hlt
jbe
lds
mov
ja
test
xchg
xchg
cmc
sar
mov
cmp
into
pop
popa
lea
cli
std
dec
shrl
stos
out
mov
movsb
xchg
xor
and
fstpt
ja
cltd
mov
mov
fidivs
xchg
loope
fldt
mov
inc
test
test
push
js
test
jge
fbld
test
pop
ret
sbb
fwait
mov
dec
inc
ja
xor
call
mov
mov
ja
clc
jge
cmp
cmpsl
cwtl
mov
stc
fcomip
ret
inc
outsb
xchg
cli
mov
xor
xchg
jno
mov
push
out
dec
dec
pop
shll
fsub
dec
dec
fucomp
stc
add
fcoml
push
rorb
jne
and
mov
movsb
xchg
loop
inc
loope
ret
ret
cmp
cmp
orb
pop
push
or
inc
mov
popf
xchg
mov
arpl
hlt
dec
jb
jne
adc
jmp
lock
or
adc
or
call
xchg
arpl
mov
and
mov
add
sbb
call
dec
adc
fidivl
pop
jle
into
push
mov
xchg
mov
xchg
and
pushf
mov
push
jbe
mov
hlt
repnz
add
in
cli
lea
sti
jp
js
jp
fdivrs
adc
out
mov
cmp
pop
hlt
mov
fildll
scas
mov
leave
mov
clc
shrl
les
movsl
xchg
and
push
pop
outsb
aam
mov
push
roll
pop
pop
fcoms
lock
mov
inc
push
sbb
xor
in
mov
or
popa
rolb
jb
push
xor
lahf
subl
jge
xor
lret
pop
jmp
mov
push
sahf
loope
lods
mov
xorb
lea
pusha
rclb
test
sbb
inc
arpl
add
outsl
jp
mov
test
std
sub
jmp
add
mov
mov
jne
sbb
test
outsb
xor
fadd
imul
push
mov
faddl
xchg
xor
popf
push
repnz
jp
scas
and
jge
std
imul
gs
add
nop
cs
or
imul
inc
push
lcall
xchg
sub
push
pop
jae
push
mov
sbb
in
cmp
test
pop
nop
insb
daa
hlt
lods
mov
fbstp
movsl
adc
dec
mov
mov
or
cmpsb
cmp
and
imul
lods
xor
arpl
adc
or
int3
int
jp
leave
out
push
add
std
mov
out
shr
ja
daa
jge
and
roll
sbb
int3
mov
mov
call
pop
repnz
xchg
xlat
daa
mov
inc
into
push
xor
xchg
cmc
or
cmpsb
jge
nop
fadd
notb
adc
jmp
and
adc
and
data16
cltd
sbb
or
pusha
sub
pop
fnstcw
xchg
mov
pusha
mov
push
movsl
mov
outsl
or
sbb
xchg
xor
mov
int3
push
or
sbb
push
push
push
adc
adc
xor
mov
adc
call
lret
scas
lahf
push
pusha
aaa
sub
test
mov
cwtl
xlat
adc
idivl
setbe
test
jno
dec
mov
mov
and
dec
fldl
sbbl
lods
daa
sub
mov
pop
mov
lret
mov
pop
loope
xadd
fisubrl
mov
cmp
repnz
incl
lods
or
jmp
add
and
dec
xchg
clc
or
faddl
rcll
lahf
lcall
jno,pn
add
jecxz
mov
inc
fmuls
sub
pushf
aas
stos
bound
mov
xchg
mov
inc
adc
mov
or
dec
push
into
in
add
pop
mov
sbb
sub
dec
add
jae
inc
and
sub
sub
mov
mov
adc
call
jle
jmp
dec
idivb
rcll
pushf
xchg
clc
and
ja
es
mov
mov
pop
dec
or
push
js
cmp
test
cld
mov
xor
sub
lods
daa
imul
icebp
or
xorb
in
dec
jl
cmp
adc
and
mov
ja
jae
mov
fcmovne
outsb
cmpsl
mov
into
pusha
push
jae
in
out
jmp
jno
in
dec
mov
insb
test
dec
inc
jmp
xchg
mov
repz
sub
leave
mov
cwtl
or
push
xor
or
in
adc
sub
ret
push
hlt
cwtl
dec
inc
mov
nop
dec
mov
dec
mov
mov
dec
das
cs
stos
dec
push
repz
dec
mov
repz
or
movl
in
outsb
jp
shll
test
sbb
cvtps2pi
adc
push
sbb
xor
in
jbe
jne
inc
push
push
js
lret
cmpl
add
insb
mov
pop
fisubrs
popa
or
mov
cmpsb
fdivs
and
cmp
jecxz
inc
inc
mov
fsubl
mov
test
pop
sub
fwait
jnp
pop
mov
ret
jp
lret
inc
mov
and
push
or
fisubs
arpl
lock
mov
clc
lret
xor
sbb
or
jg
cld
shll
jle
notl
andb
addr16
cmp
icebp
mov
mov
in
xchg
loope
mov
sahf
push
sar
push
data16
leave
data16
add
inc
jecxz
sahf
cmp
mov
mov
lcall
xchg
ja
mov
inc
jge
imul
add
xchg
sbb
das
das
lods
pushf
cmc
xlat
outsl
or
xor
gs
mov
hlt
ljmp
pop
jecxz
imul
jl
mov
jmp
sbb
cwtl
sahf
lea
cld
add
repnz
or
bound
push
fdivl
stos
js
push
pop
adc
inc
push
and
sub
pushf
fimuls
add
icebp
std
mov
loope
int
leave
add
stos
hlt
sub
adcb
adc
add
mov
mov
pop
adc
insl
jnp
jp
mov
mov
std
icebp
pop
push
xor
cltd
call
jo
imul
lods
hlt
fnsave
cmpsl
movsl
out
sbb
loope
dec
mov
cwtl
mov
jge
sub
ljmp
pop
mov
xchg
ja
and
xchg
pop
mov
sarb
scas
stos
lock
cs
pop
pop
cmp
mov
lahf
or
push
bound
lea
sbb
iret
sub
in
fs
bound
sbb
aam
mov
jnp
push
lds
in
aam
pop
or
mov
fisubrs
cmpsb
jg
adc
sti
mov
mov
fisubs
or
adc
das
jmp
mov
je
mov
lret
or
sbb
popa
jmp
sub
in
popa
push
xchg
mov
bound
pop
test
mov
mov
frstor
ds
fs
push
push
cmp
inc
xchg
lcall
push
ret
and
stc
aas
out
mov
lahf
mov
ja
push
add
mov
filds
xchg
xchg
jbe
and
ds
xor
pop
xchg
and
pop
inc
imul
xchg
jmp
dec
pop
testl
push
js
enter
nop
je
andl
cmpsl
push
ret
imul
pop
loope
push
pop
xor
mov
inc
add
pop
int
sbb
and
push
mov
jp
sbb
jno
push
jae
test
imul
aas
cmp
cmp
pop
push
mov
pop
aad
sbb
pushf
xchg
aam
scas
mov
mov
fcmovu
dec
mov
push
imull
mov
xor
jge
ficoms
pop
dec
mov
mov
inc
fcmovnbe
mov
sub
ljmp
add
aam
jle
fcmovnb
and
int3
clc
jmp
mov
cmp
add
dec
xorl
mov
adc
dec
shl
out
neg
outsl
in
insl
addb
pop
xchg
inc
test
dec
dec
shlb
and
sbb
je
int3
and
push
or
lods
xchg
xor
pop
ret
ret
inc
gs
push
sbb
into
jno
sbb
pop
dec
ss
mov
test
mov
test
pop
or
pop
xor
gs
fcmovnb
imul
sub
and
mov
fsubp
adc
shlb
mov
jp
pop
or
xchg
pop
cmc
repz
pop
fsubr
stos
add
and
jp
sahf
dec
out
daa
clc
fcompl
int3
shrb
push
mov
cmp
lcall
rolb
adc
jp
jl
icebp
add
cltd
jnp
jb
aas
mov
iret
pushl
pop
test
sbb
rcrb
popf
into
push
mov
movsl
jne
xor
sub
stos
jns
pop
adc
and
leave
push
movsb
stos
test
in
nop
inc
inc
std
sbb
movb
jmp
mov
test
gs
pop
movsl
xor
out
js
dec
addr16
xchg
and
fcoms
shlb
add
xchg
mov
cmp
or
comiss
sbb
jg
or
jno
insl
repz
adc
mov
push
cld
inc
sti
sbb
sub
adc
sbb
or
aad
pop
jge
mov
inc
and
cs
mov
push
ficomps
movsb
mov
lret
mov
mov
pop
xchg
xor
sub
aad
mov
into
xor
adc
js
call
or
xorb
push
sarl
mov
pop
rclb
mov
xchg
shll
inc
xchg
ss
sub
out
cmp
shll
stc
push
rclb
iret
movsl
scas
pop
pop
sbb
add
inc
or
inc
clc
je
add
stc
js
push
push
fwait
leave
sti
dec
mov
out
daa
lods
scas
lods
ret
mov
dec
aas
mov
das
mov
push
adc
scas
xor
add
fistpll
hlt
cltd
fsubrp
aas
push
sbb
jb
pop
add
jbe
jo,pn
out
mov
stc
hlt
dec
stos
mov
add
repz
cmpb
mov
ret
inc
xchg
mov
sub
in
add
mov
jg
mov
loop
jp
movsl
sub
lahf
mov
iret
rcr
scas
push
cmp
fistl
and
mov
ja
fidivrl
ret
push
loopne
int3
subl
lcall
pop
inc
in
lret
fidivs
es
mov
jmp
fnstcw
cli
inc
scas
jns
js
xchg
into
and
rol
cmp
xchg
xor
pop
jno
das
cmp
xchg
mov
cmc
inc
fwait
sbb
or
pop
mov
push
rcrl
sbb
cmpsb
inc
sub
scas
xor
mov
test
mov
adc
cmp
les
insb
cmpsl
ret
push
cmovbe
dec
push
das
mov
adc
orl
xor
add
inc
js
movsb
andb
popf
sub
xlat
fcoms
std
jbe
add
out
mov
mov
inc
and
das
mov
mov
xor
jae
subb
popa
mov
fdiv
mov
lods
add
cli
mov
xor
add
mov
xchg
push
or
outsb
jbe
sub
movsl
rclb
pop
jae
push
sarl
outsl
roll
mov
addr16
fcmove
shlb
and
adcb
sub
popa
mov
ret
out
lods
mov
outsb
sub
test
lahf
and
std
out
sbb
jle
adc
int
xchg
popf
pop
sub
inc
fldcw
pop
lret
or
sbb
push
pusha
or
mov
cmp
lret
mov
mov
loopne
jmp
mov
imul
je
test
or
sub
or
icebp
or
pop
sbb
rcrl
adc
dec
push
leave
aam
std
sbb
icebp
mov
push
push
loop,pt
or
sbb
out
repnz
mov
and
shl
insb
jl
andb
jmp
or
aaa
scas
icebp
cld
add
push
aaa
and
scas
jge
mov
dec
push
aad
xor
popa
das
sbb
xchg
push
bound
push
xchg
sub
pop
js
andb
pop
and
dec
and
filds
mov
fucomi
insl
mov
dec
inc
mov
in
or
out
pop
in
pop
jnp
adc
test
sti
dec
xlat
push
mov
jne
or
dec
dec
cmp
jae
arpl
sub
xchg
in
sti
or
jns
ss
lret
adcb
in
adc
or
sub
ret
mov
loop
pop
test
cwtl
loope
imul
repz
loopne
loopne
loope
das
push
add
dec
adc
pop
and
inc
lods
sti
mov
stos
push
insl
inc
movsb
fcom
ljmp
push
int3
in
add
fs
mov
push
leave
aaa
mov
push
subb
jge
notb
jbe
and
aad
fwait
cwtl
aas
push
pop
pop
sbb
das
sbb
and
in
sub
outsl
popa
popl
or
nop
pop
movb
add
loopne
lea
mov
jg
in
push
jbe
mov
dec
push
jmp
inc
jno
shl
push
repz
imul
xchg
jo
push
shr
dec
in
dec
sbb
push
iret
jecxz
lret
dec
inc
fildll
ljmp
lret
int
jge
lock
ljmp
call
hlt
sbb
inc
jecxz
sub
mov
xchg
push
inc
cmc
test
pop
lock
shrl
bt
jmp
popf
jno
fcom
fwait
push
pop
lret
mov
xor
bnd
je
cmpsb
xchg
cmc
fdivrl
jnp
pop
pop
xor
add
xor
push
push
nop
popf
and
pop
mov
jne
stos
dec
outsb
icebp
add
xchg
lret
std
cmpsb
xor
inc
jg
clc
test
or
jp
and
lret
test
xchg
mov
sub
and
jp
cli
inc
or
xor
cmpsl
out
aas
pusha
pop
or
mov
add
pop
shlb
push
push
aas
jbe
add
sub
mov
lods
lods
mov
mov
lods
fcoms
dec
sbb
push
cwtl
mov
lret
sarl
xchg
mov
adc
mov
insl
jl
mov
or
cmp
movsb
fisttpll
pusha
iret
push
lret
sbb
jno
call
fmul
lahf
jae
jbe
cmc
es
test
hlt
in
pop
or
lcall
xor
push
test
add
cmpsb
xchg
push
and
lods
insl
pop
pop
mov
or
mov
js
cmpl
push
dec
xor
stos
xlat
imull
pop
cmp
fwait
or
orb
int3
pop
into
xor
fidivs
into
sub
pop
pop
cwtl
add
sti
or
push
test
sub
dec
leave
int3
sbb
lret
pushf
scas
jecxz
xchg
popf
and
lcall
movsb
pusha
cmc
loope
ret
mov
int
fsubrs
popf
cwtl
and
mov
fsubs
push
cmp
imul
pop
inc
lret
or
inc
dec
sub
in
add
pop
pop
stos
ror
fcoms
jb
dec
incb
mov
sub
cwtl
add
arpl
push
pop
push
cltd
pop
test
dec
cmp
mov
js
fwait
and
jo
hlt
in
cmpsl
pop
push
int
dec
jge
and
test
aad
scas
xlat
divl
and
in
or
or
hlt
cmpsl
mov
pop
movl
cli
stc
mov
xor
jmp
cmp
imul
jle
fisttpll
fiadds
and
test
outsb
and
pop
rolb
mov
pop
cmpb
shll
cmp
sti
orl
sbb
mov
cmpb
rcl
stos
test
xor
clc
mov
mov
stos
sub
push
std
test
inc
dec
mov
jnp
shrb
sub
data16
icebp
push
scas
inc
fwait
add
jmp
enter
dec
pop
loop
jne
fadds
mov
mov
pusha
or
mov
movsb
sbb
sahf
mov
or
cltd
test
mov
fdivrl
sbb
fisttpl
mov
jno
imul
stos
ret
lds
and
pop
js
ja
add
mov
xchg
movl
add
mov
inc
sub
call
lea
pop
push
push
mov
lret
mov
lcall
adc
test
pusha
out
push
test
or
push
sbb
aad
sbb
mov
mov
dec
sub
test
xchg
cmp
inc
xor
sahf
adc
add
or
add
push
in
xchg
movsb
adc
aaa
dec
mov
pop
lea
stos
push
insl
mov
sti
aaa
insb
and
enter
out
adc
inc
lcall
sbb
daa
mov
xchg
loopne
loopne
mov
gs
cmpsl
lods
hlt
jns
loop
or
pop
xchg
and
pop
cmpsb
mov
dec
inc
sti
jno
lock
inc
cmp
fisttps
fisubl
pushf
mov
lret
mov
ljmp
xor
ds
out
add
adc
jno
shll
lret
in
dec
fstps
insl
inc
repnz
mov
push
jns
mov
in
push
jne
xchg
sbb
lea
xor
and
mov
mov
mov
or
jl
xor
lret
call
in
jecxz
ret
inc
sub
sbb
and
fistpll
arpl
sbb
adc
aad
int
lahf
icebp
mov
adc
sub
mov
ds
enter
and
push
lds
jmp
push
loope
mov
hlt
sub
cmp
mov
loopne
push
xor
data16
jg
adc
nop
mov
shlb
jbe
scas
sub
cmpl
testl
fcomp
jmp
sbb
push
lock
or
cwtl
mov
inc
loopne
jmp
mov
loop
inc
lcall
adc
or
out
mov
cmc
je
push
push
stos
xlat
xlat
push
fnstcw
push
movsb
inc
ds
dec
movsl
out
call
in
xlat
fcom
mov
insb
lea
adc
cli
popf
and
inc
test
add
es
cwtl
adc
adc
fisttpl
push
jae
fdivrs
cli
in
popf
dec
jo
jmp
inc
sarb
pop
sbb
mov
call
push
sbb
and
movsb
xor
add
pusha
fstps
mov
mov
orb
dec
push
add
xor
enter
jbe
xlat
sbb
insb
inc
ljmp
cmp
xchg
fs
cwtl
adc
or
xor
jmp
dec
data16
mov
ret
xor
ret
aad
pop
pop
inc
xor
sbb
jmp
pop
adc
adc
stos
jno
lahf
inc
in
jbe
or
out
repz
or
sbb
adc
pop
lods
mov
xor
cmp
mov
pop
mov
push
jne
enter
jmp
and
or
sbb
pop
or
lret
repz
out
push
cli
dec
jecxz
aas
imul
mull
test
ljmp
add
mov
mov
mov
jno
loope
jmp
sbb
mov
cli
mull
adc
ret
pop
jnp
lret
and
mov
sbb
add
adc
repz
and
popf
cltd
cld
adc
xor
or
test
mov
js
enter
add
cmc
pop
cwtl
sbb
aam
xorl
sub
jno
mov
jb
jae
cmc
dec
das
icebp
icebp
pop
out
dec
pop
pop
mov
adc
adc
nop
mov
push
decl
outsb
lret
pop
imul
int3
mov
hlt
mov
ja
push
pushf
loope
mov
aaa
ret
adc
and
cltd
jae
dec
cmp
and
fnstenv
push
js
xor
cmp
or
jp
sbb
add
mov
std
mov
push
or
addr16
sub
test
pop
shr
adc
std
outsl
fistpll
push
inc
mov
lahf
mov
mov
popa
mov
mov
shl
mov
mov
dec
sub
and
xchg
jmp
roll
push
outsb
clc
test
call
testb
dec
lret
mov
test
and
jns
lods
xor
dec
jo
stos
shll
add
dec
rcll
jnp
stos
inc
imul
insl
sbbl
rclb
and
inc
pop
lea
insl
adc
add
jecxz
push
fsts
mov
xchg
lock
push
sbb
insb
push
shll
testl
add
mov
xchg
pop
and
pop
lcall
sub
ja
sub
bound
rcrl
mov
xor
mov
inc
movsb
mov
inc
mov
inc
repnz
outsb
pop
xor
sbb
push
es
inc
xchg
cli
xor
adc
ret
xchg
mov
dec
in
rcl
add
inc
sub
mov
out
jecxz
in
cmovg
inc
xchg
xor
lcall
loop,pt
hlt
xor
cmp
sub
dec
js
adc
insl
test
adc
clc
or
clc
dec
xor
data16
pop
orb
push
mov
pusha
or
enter
xchg
pop
aaa
rorl
rcll
mov
mov
icebp
xor
scas
aad
rcrb
adc
test
out
cmp
imul
jne
loop
jl
push
rorl
test
xor
mov
xor
inc
pusha
outsl
rorl
mov
mov
dec
jnp
mov
test
cmp
sti
sbb
pop
ljmp
pop
daa
test
and
inc
pushl
pop
xchg
mov
and
cmp
or
das
daa
pushw
xchg
xchg
add
cmpb
inc
icebp
out
cmpsb
cmc
dec
sbb
jmp
cmc
xor
int
imul
ret
push
adc
int3
xor
dec
and
test
loope
out
xor
mov
loop
push
sbb
andps
loope
pop
add
loopne
lret
aaa
mov
cld
cs
jae
push
mov
mov
jae
xchg
packssdw
test
jns
jmp
mov
loopne
lahf
dec
adc
das
out
inc
mov
dec
leave
ret
es
shll
shrb
mov
loope
mov
stos
xlat
jne
sahf
cmp
iret
pop
call
call
add
mov
adc
cmp
adc
mov
mov
loope
in
mov
or
lahf
push
push
lock
in
add
add
cmp
inc
js
test
mov
jmp
popl
xlat
inc
ja
jne
xchg
mov
jno
stos
les
mov
xchg
pusha
sub
leave
or
add
dec
loop
pop
in
int
out
sarb
out
pop
jp
inc
pop
fs
adc
adcl
call
pop
jle
in
inc
jae
jle
fisttpll
xlat
rorl
into
outsb
xor
jbe
inc
add
xor
sub
xor
aam
test
mov
xlat
out
out
fxch
cs
push
cltd
out
push
mov
mov
mov
les
mov
mov
imull
int
stos
mov
movsl
lea
add
or
mov
sub
cmp
add
lahf
cmpl
es
cmp
roll
aas
test
pop
cmc
aaa
in
ret
dec
int3
mov
adc
pop
clc
jns
and
jnp
sarb
cmpsb
push
inc
cmpsb
test
stc
loop
psrlw
push
in
pusha
lock
jge
gs
mov
out
adc
aaa
and
stc
xchg
jp
and
rclb
loope
neg
fs
push
mov
fs
sbb
and
or
xlat
xor
and
ret
jns
dec
test
pusha
add
push
or
mov
cwtl
sub
fdivs
ljmp
xor
add
fnstenv
or
mov
les
sbb
aad
roll
push
enter
loop
call
out
mov
dec
push
dec
jle
add
dec
int3
push
mov
xor
sub
arpl
cli
sub
lods
movsb
rcl
dec
xor
inc
ljmp
leave
push
cmc
cltd
or
mov
dec
push
cs
call
mov
test
xchg
stc
cmp
mov
popf
lds
iret
rcrb
mov
addr16
testl
and
mov
ss
ljmp
sarl
js
or
mov
lcall
cwtl
pop
insl
pop
xchg
std
jg
sbb
adc
out
sbb
inc
sub
fists
mov
inc
mov
outsb
mov
fisttps
xchg
sbb
sbb
xchg
mov
cmpsl
ficompl
icebp
or
xor
icebp
adc
repnz
push
pop
dec
xchg
in
aas
cli
rorb
lretw
arpl
popf
movsb
mov
and
out
mov
mov
inc
sbb
movsl
int3
jge
mov
adc
popa
mov
xor
push
test
test
pop
sbb
sarb
dec
imull
xchg
mov
adc
xchg
sub
movsb
dec
xor
adc
dec
movb
sub
push
jns
cwtl
lods
jg
jno
popa
jno
ss
lret
cmp
imul
imull
push
xchg
mov
cld
orl
cmp
or
and
xor
xor
out
jns
cmp
sbb
pusha
dec
fbstp
test
mov
pop
add
xlat
dec
mov
push
xor
xlat
push
mov
sbb
arpl
popa
jno
test
test
jb
sub
mov
pop
loop
aaa
gs
mov
loop
mov
popf
mov
imul
lcall
lcall
sub
jge
mov
or
dec
mov
pop
pop
addr16
cmp
cs
jl
or
mov
and
push
in
mov
adc
inc
and
test
fmull
repz
sub
in
test
sbb
cwtl
idivl
cltd
and
addr16
test
gs
sbbl
adc
repz
movsb
pushw
fdivs
ds
jb
mov
aad
xor
frstor
xchg
inc
in
xchg
adc
adcl
icebp
mov
jb
in
jmp
xlat
lds
cs
bound
pop
jno
out
dec
loop
stos
das
pop
push
push
push
mov
popa
push
jno
jae
bound
cli
add
xor
xchg
dec
out
lds
inc
or
std
out
sub
pop
lods
or
pop
cwtl
mov
rcrb
movsl
jae,pn
add
adc
pop
sbb
dec
mov
in
aam
pop
jge
push
jno
insb
imul
sub
add
xor
cmp
jmp
push
sub
inc
mov
movsb
pop
xchg
add
subl
out
or
ds
in
icebp
xchg
test
int
or
ja
xchg
ljmp
sahf
and
insl
ret
pop
push
jmp
idivb
cli
data16
in
cmpsb
push
ror
call
cmpsl
out
pop
jo
loope
test
pop
lcall
out
push
inc
mov
mov
cli
shr
jg
jp
xor
pop
xor
cmp
mov
push
repz
xchg
stos
lea
dec
out
leave
cld
jbe
add
sbb
cmp
mov
popa
je
dec
aam
push
sbb
and
pop
inc
or
jbe
sti
in
and
arpl
lds
rolb
out
mov
jne
je
dec
mov
je
mov
adc
ret
xchg
xchg
dec
add
cmc
inc
rolb
pop
pop
sub
fsubrs
xchg
loopne
gs
add
cmp
add
fwait
adc
stos
lock
inc
sub
leave
pushl
and
aas
wbinvd
iret
mov
xchg
fucomi
es
pushf
cmpsb
sub
in
pop
loop
lock
mov
push
mov
push
mov
pop
arpl
xor
push
enter
fidivs
or
xlat
and
insl
push
mov
mov
pop
fcoml
lods
push
int
jg
xchg
sti
or
push
or
leave
or
pop
cmp
test
or
jge
inc
mov
out
call
cltd
adc
icebp
inc
dec
cli
loop
cmp
outsb
pop
xor
out
pop
dec
enter
fistpl
add
dec
add
repz
imul
jge
fildl
iret
repnz
add
jb
das
ret
dec
mov
in
xchg
lods
cmc
outsl
aas
out
incl
xlat
aam
inc
fmuls
jg
test
pop
daa
and
push
test
or
cwtl
xchg
sub
cmp
pop
dec
add
mov
pop
outsb
scas
movsl
push
jmp
test
xchg
es
js
stos
ja
xchg
nop
enter
ljmp
std
and
in
add
xchg
fisubrl
or
mov
jmp
cmp
popa
mov
mov
cmp
add
flds
push
leave
pop
mov
adc
mov
lret
pop
mov
push
imul
mov
lds
dec
and
lcall
sarb
adc
in
mov
in
je
jns
stos
and
dec
add
mov
in
scas
push
or
or
inc
cmpsb
test
lret
sbb
pop
xlat
push
xor
xchg
loope
loop
mov
sub
push
ficoml
push
addr16
mov
inc
dec
sub
hlt
ja
out
xchg
xor
insl
aaa
jmp
dec
sbb
cmpsb
mov
cmp
in
push
dec
xchg
mov
loop
imul
add
jns
mov
and
ja
int
jne
cmovp
mov
scas
lcall
lea
ror
inc
cmp
xchg
inc
lret
lods
ljmp
mov
xchg
xchg
in
pop
shr
xchg
jle
push
fs
ds
pop
lahf
mov
rcl
adcl
mov
pop
adc
in
pop
pop
sahf
aad
sbb
fldcw
ss
gs
xor
ret
mov
add
scas
fbld
mov
lds
mov
lcall
xchg
pop
xchg
fwait
js
popa
cwtl
or
mov
bound
and
mov
mov
sub
push
sbb
rclb
inc
push
loope
insb
fsub
into
jg
js
lret
mov
aas
push
lahf
cmpsl
pusha
data16
lods
xor
shrb
cli
out
rorl
mov
xchg
stos
adc
popf
insl
jle
cmp
in
xchg
rcrl
pop
dec
fdivl
std
sbb
fsub
jbe
les
sub
cltd
sbb
add
push
iret
inc
sub
jns
sub
or
lock
cmp
xchg
or
sub
shrb
pop
sbb
cld
and
testl
lahf
js
mov
testb
sbb
jb
cli
and
dec
adc
imul
ret
andl
ds
mov
push
in
in
mov
push
fwait
nop
cmp
xchg
inc
aam
sub
jmp
js
loope
or
icebp
inc
in
mov
roll
jmp
shlb
loop
mov
cmp
mov
repnz
stc
out
ret
xlat
pop
inc
pushf
push
push
std
out
pop
sarl
fcompl
fcoms
stos
pop
in
in
lcall
je
test
outsb
les
mov
xchg
xor
test
xchg
cmpsl
aad
fldenv
mov
sbb
insb
xor
mov
stos
dec
lock
mov
fcoml
or
jge
or
cli
fisttpll
and
lcall
adc
push
mov
aam
aam
andl
jns
movl
or
outsl
or
icebp
repz
jg
xchg
ret
xchg
mov
fistpll
push
aam
jmp
mov
mov
hlt
lret
jns
pop
mov
data16
cmp
xchg
enter
xchg
jle
push
xchg
aad
sub
xchg
andl
or
dec
popf
inc
sti
int
mov
push
je
mov
mov
sub
std
xchg
int
in
fcmovnu
inc
mov
movsb
push
mov
add
push
lret
jp
inc
xor
lret
adc
mull
pop
lahf
call
decb
push
imul
and
lahf
test
mov
aas
adc
ljmp
xlat
mov
imul
xchg
cli
inc
xchg
pop
pop
pop
cmp
add
pop
sub
je
shll
cli
ret
int3
cmp
xchg
xor
and
das
push
lcall
test
daa
lds
shlb
sbb
adc
movsl
lret
add
pop
pusha
mov
cmpb
push
ja
ja
lea
add
inc
psubd
adcb
fistps
and
cld
shlb
pushf
mov
test
push
movsb
push
jecxz
add
or
test
push
xchg
pusha
dec
mov
mov
loopne
add
js
sbb
mov
iret
je
add
or
mov
adc
outsl
outsb
dec
pop
xor
es
fldl2e
sahf
out
dec
insl
and
outsb
sti
or
aad
in
in
das
imull
pop
cmp
lds
std
icebp
popf
pop
sbb
cld
fidivl
lcall
cltd
shll
push
jmp
rorl
xor
dec
mov
and
add
pop
push
adc
sub
data16
inc
cmp
lret
daa
sub
add
jg
repz
iret
cmp
fcompl
dec
faddl
lahf
pop
cmp
fdivl
inc
or
mov
jp
in
leave
arpl
sahf
jp
dec
lcall
movsb
push
pushf
inc
outsb
or
cmovno
divl
idivb
lds
and
fnstsw
xchg
mov
mov
lcall
xchg
addb
lahf
push
push
pop
incl
cltd
sbb
fucomip
jl
add
sti
or
cli
add
add
jg
inc
mov
fnstenv
out
mov
cwtl
cmpsb
iret
xchg
in
xchg
jns
xor
add
pop
cmpsl
mov
loopne
aad
movsl
jp
mov
pop
adc
ljmp
mov
mov
pusha
lods
and
addr16
pop
inc
repnz
loope
xchg
pop
lahf
sbb
scas
push
rorb
or
in
popw
push
mov
mov
sbbb
daa
add
jmp
in
ss
scas
ret
dec
pop
push
or
adcb
fldt
cmpl
sbb
test
in
pminsw
movsl
inc
test
fwait
inc
and
lahf
movd
std
adc
iret
aaa
lds
addb
mov
or
outsl
lock
scas
nop
sub
sub
stos
mov
cmpb
xor
test
sqrtps
push
testl
faddp
fists
xor
test
in
adc
in
arpl
movsb
sbb
sahf
insl
call
mov
sbb
ret
jge
or
ret
daa
cs
clc
enter
pop
inc
cli
add
sub
sahf
cmp
mov
and
dec
stos
cmp
fisubs
xchg
push
enter
dec
out
pop
cld
int3
lods
rolb
jle
and
mov
out
or
or
stos
in
imul
mov
dec
or
mov
aas
and
lea
jl
or
dec
lods
je
fwait
jecxz
sbb
mov
xchg
ret
adcl
mov
int3
call
push
ljmp
xchg
sbb
pop
pop
push
clc
xchg
shr
add
inc
addr16
addl
pop
rolb
out
push
adc
cmp
pop
sbb
xchg
push
movsl
and
fcmovnb
bound
data16
test
inc
fsubs
mov
jb
inc
call
or
nop
push
and
ss
sahf
sbb
pop
jge
into
cmovl
xor
ja
std
inc
movsb
mov
scas
rcl
cli
sahf
mov
aad
ficoml
cmpl
pop
adc
or
imul
test
jge
test
les
push
outsl
repnz
fsubl
into
push
dec
push
xor
mov
jbe
aaa
insb
mov
jmp
adc
lahf
test
sbb
faddl
mov
cwtd
cmpb
jbe
ja
cmp
mov
lahf
adc
pushf
lret
mov
pop
add
push
clc
push
test
push
dec
pop
sahf
inc
loope
sub
xchg
xor
xorb
pop
fs
shrb
roll
or
jmp
adc
stos
mov
sub
cli
xor
lret
pop
add
in
fistpl
test
mov
fcompl
lcall
push
push
scas
and
and
test
pop
rorb
push
call
cltd
stos
into
out
popf
or
push
movsl
in
cmp
xor
pop
push
aam
jnp
inc
in
popf
jl
fwait
xor
cli
sub
mov
lods
sahf
add
repnz
jbe
pop
jl
leave
pop
cmp
int
mov
jg
into
fsubp
scas
adc
iret
xchg
jbe
inc
mov
fs
cmpsb
sti
imul
jle
clc
lret
xchg
daa
pop
cmpl
vmulsd
sbb
cmpsl
sbb
lods
das
es
addl
dec
sbb
int3
xchg
in
jae
sbb
loop
aas
rcrb
pop
out
sub
adc
hlt
aad
sti
arpl
push
imul
neg
xor
sub
js
push
push
int
addb
lods
and
mov
mov
bound
jne
lods
aam
fldenv
inc
insb
push
pop
xor
sub
popf
gs
sbb
pop
divb
mov
or
in
pop
add
xchg
or
jb
jge
fldl
out
fsubl
lods
loopne
pop
mulb
mov
int
aaa
pop
in
mov
inc
mull
rcll
xor
mov
movsl
jecxz
and
mov
insl
es
pop
andl
inc
adc
mov
sub
insb
int3
inc
sbb
push
jp
pusha
pop
adc
adc
cli
add
cmp
es
rcrb
test
in
jle
rcll
sbb
jnp
xor
std
xorb
jle
pop
xor
mov
push
test
mov
xorb
xorl
stos
add
test
aaa
lds
lods
inc
data16
lret
cmpsl
outsl
dec
sahf
push
fs
aad
jge
inc
inc
js
js
loop
cli
les
mov
outsb
adc
add
sbb
adc
jnp
nop
scas
movsb
pop
inc
ss
es
cmp
mov
sbb
leave
jo
add
jge
scas
cmp
ja
jno
lahf
fiadds
loopne
jns
dec
cli
xor
pop
sbb
outsb
lret
icebp
sub
adc
or
and
je
mov
or
clc
mov
fldl
into
add
and
push
mov
mov
lock
and
insb
popa
fdivrs
movsl
fs
cmp
outsb
arpl
jo
inc
js
push
or
adc
je
gs
enter
sbb
repnz
push
fisubl
xchg
ret
sub
mov
popf
ret
sub
dec
xor
cld
daa
mov
test
mov
mov
repnz
xorl
popa
and
fwait
pop
push
pop
jns
cltd
adc
fisttps
daa
mov
dec
fcoms
int
push
jne
jl
xor
loopne
sarl
fadd
cmp
jnp
icebp
jl
pop
jae
in
pop
ret
mov
push
mov
xchg
pop
push
or
dec
and
fdivr
pop
std
push
jl
int
in
daa
mov
or
adc
xor
push
jno
movsl
ljmp
dec
xchg
push
pushf
adc
repnz
pop
mov
int
xor
mov
loopne
in
mov
mov
push
adc
xor
popf
es
out
push
rep
imul
aad
inc
push
add
mov
ret
leave
jle
sub
push
mov
call
call
mov
add
test
sub
push
stc
push
shr
test
fcoms
aam
sbb
jl
mov
arpl
push
sub
and
cmp
in
xor
mov
push
xor
mov
dec
or
fnstsw
pop
imul
dec
dec
adc
fsubrl
xchg
test
out
xchg
mov
lods
sub
mov
sub
sub
xor
push
mov
ljmp
or
cmp
or
clc
repnz
lea
scas
and
or
pop
or
rorl
rol
cmp
pop
imul
mov
das
inc
clc
or
cmp
jge
sbb
sub
and
pop
fadds
adc
sahf
stc
aam
test
xor
and
pop
lods
test
lods
ret
icebp
shll
or
mov
mov
cmp
jo
mov
arpl
cltd
sbbl
dec
call
stos
test
enter
jp
pop
inc
scas
inc
mov
insl
mov
jmp
mov
inc
jge
outsb
mov
jg
movswl
bound
int
pop
idivl
inc
daa
outsl
loop
push
adc
lea
push
fisttpl
cltd
push
icebp
and
ret
scas
sbb
push
add
andl
push
into
fadds
aad
mov
xchg
inc
ret
lret
arpl
lock
cmpsl
or
popf
dec
and
and
mov
jnp
pop
pop
xlat
xchg
cmp
xchg
sub
aas
add
lods
and
pop
sti
cmpsb
xchg
inc
jp
xor
sti
sbb
mov
or
mov
inc
xor
jecxz
lcall
clc
xchg
mulb
xchg
sbb
xor
push
stc
es
xor
cmc
mov
insl
mov
and
stc
adc
sub
mov
dec
mov
js
jno
lea
test
inc
mov
sbbl
out
das
fcomi
jp
xor
dec
sub
push
dec
push
dec
inc
mov
inc
faddl
push
mov
dec
repz
inc
cmpsl
outsl
mov
sarb
ss
jp
xlat
adc
outsb
or
push
in
dec
fdivl
popf
lods
das
mov
dec
rcl
test
addl
insl
seta
cmp
lret
loope
inc
add
shrb
sbb
dec
out
into
push
sub
orl
mov
out
pop
cmp
scas
add
push
mov
add
rcll
mov
insb
mov
lahf
outsl
push
inc
xchg
and
jns
or
imul
jns
stc
adc
cmp
push
imul
je
out
or
mov
push
cmp
clc
adc
scas
scas
dec
fxch
jno
xchg
faddp
sar
fidivl
pop
jmp
sub
or
sbb
adc
std
cmp
repnz
and
icebp
xor
addr16
mov
xor
rcl
sub
jae
out
ss
popa
nop
pop
insb
aam
pop
mov
popa
fwait
lods
cli
stos
pop
les
nopl
add
fxch
jno
jbe
add
out
and
xchg
hlt
icebp
lock
adc
jno
adc
lods
jne
pop
sbb
xor
gs
xchg
push
push
add
popf
add
and
jno
in
dec
lds
imul
sub
lds
sub
add
stc
cld
cmp
lahf
pop
add
pusha
ret
push
xchg
inc
adc
mov
jmp
rclb
rorl
aas
daa
mov
cmpsb
sbb
mov
push
pop
test
es
push
xor
push
aaa
inc
insb
push
xchg
sub
xor
imul
xchg
pop
ja
xchg
jno
scas
add
hlt
repnz
int
rclb
xchg
sbb
sahf
and
scas
inc
push
xor
xor
cwtl
in
sbb
mov
pop
cmp
push
xchg
dec
push
sti
push
test
mov
push
inc
dec
sub
inc
add
xor
xchg
dec
mov
or
jge
add
cmp
dec
sahf
xor
in
sbb
jae
cmpsl
loop
outsl
add
out
cmp
in
adc
fld
data16
je
sub
out
out
repnz
iret
movl
pop
out
testb
mov
pop
xchg
mov
ret
jo
stos
cmc
mov
xor
or
pop
sbb
enter
push
jbe
jecxz
pusha
jge
mov
xchg
insb
popa
sbb
adc
lods
inc
in
adc
imul
mov
jbe
sub
sbb
aam
add
sub
dec
mov
xor
sti
in
jp
pop
adc
cmp
mov
out
imul
xor
sub
call
cmp
mov
aam
pop
insb
mov
inc
outsl
mov
ds
imul
cmp
xor
add
or
and
mov
iret
rcrb
jbe
sbb
adc
sqrtps
pop
pop
add
movb
clc
add
popf
mov
dec
mov
push
test
mov
rcll
orb
mov
jae
add
adc
insb
lods
jp
push
in
lods
fwait
cmp
mov
jecxz
scas
daa
jl
mov
cmpsl
mov
xor
cmc
sbb
daa
pop
cmp
push
or
push
xchg
pop
loope
cmpsl
mov
int
icebp
stos
cld
fisubs
shl
mov
stc
push
adc
push
mov
andl
arpl
inc
loop
lcall
scas
es
cli
lcall
mov
or
out
out
std
mov
or
xchg
sbb
out
pop
jae
in
push
or
mov
icebp
mov
rolb
xchg
mov
push
pop
arpl
call
vpxor
pusha
jge
incl
insb
aas
inc
lds
push
push
jbe
cmp
dec
pop
test
mov
sbb
iret
outsb
or
cmpsl
mov
mov
lahf
addb
pop
sub
cmp
test
mov
mov
imul
push
inc
mov
bound
popa
cmp
stos
mov
xlat
sti
or
inc
pop
pop
scas
out
cmp
bound
jne
jnp
dec
push
mov
mov
xchg
cmpl
inc
mov
adc
sbbl
mov
pop
punpckldq
cltd
test
sti
insb
das
rolb
cld
sub
or
call
jmp
sbb
mov
lcall
aam
dec
sub
xchg
push
xchg
sbb
dec
test
lods
pop
mov
jmp
mov
jae
push
stc
popf
mov
add
pop
pop
jns
sub
mov
lret
add
mov
addl
std
fidivrs
pop
mov
adc
lcall
dec
adc
rcll
loopne
cmc
fwait
adc
insb
mov
cmp
repnz
push
pop
add
cmp
je
dec
fdivs
lret
add
push
dec
cmpsl
pop
adc
lcall
mov
ja
aam
push
fsubrl
jbe
inc
pop
jne
mov
js
add
dec
lods
sbb
dec
pushf
fwait
sub
or
out
mov
jbe
out
stos
or
cmp
dec
jmp
xchg
in
add
inc
sbb
subb
jmp
cld
pop
fsubr
cmpsl
js
mov
je
in
cltd
jecxz
push
and
lea
aas
pop
pop
int3
cltd
inc
xchg
aad
add
fsubrs
andl
mov
or
test
adc
cmpsl
shl
in
leave
pop
pop
dec
mov
push
pop
push
mov
pop
jmp
dec
jecxz
jecxz
adc
inc
nop
jno
or
mov
fidivrl
cmp
mov
sbb
lods
cld
and
mov
ljmp
popl
call
pop
sub
test
sarb
cli
shl
jnp
mov
cwtl
sbb
xorl
cmp
lock
fdivrp
sbb
mov
sarl
call
cmp
sub
mov
in
lock
jnp
push
push
ja
shrb
psubq
je
jecxz
pop
sub
or
inc
leave
int3
push
stc
sti
or
add
or
mov
fidivl
pop
push
sub
lock
leave
mov
stc
mov
inc
psrlq
imulb
sub
loopne
es
rorb
pop
iret
imul
imul
lea
jmp
rcl
aad
inc
rorb
and
das
mov
pop
jge
cmp
out
mov
les
fcmovbe
mov
sbb
or
add
sbb
jno
in
test
das
or
pop
jl
in
out
test
mov
jp
lret
and
xchg
fwait
pop
icebp
mov
cmpsb
cmpsl
stc
shlb
inc
push
pop
enter
jmp
adc
inc
or
or
inc
inc
bound
sbb
push
addr16
add
xchg
sub
imul
xchg
je
and
out
push
mov
xchg
addr16
inc
sub
sti
inc
fcomps
out
in
dec
mov
pushl
or
and
and
sub
icebp
mov
jne
movsl
mov
xor
clc
lret
fwait
mov
fisubl
mov
inc
sub
push
mov
mov
mov
mov
pop
adc
lret
test
test
lcall
adc
and
pushf
je
cld
pop
or
mov
into
jle
leave
xor
sbb
int
sub
shl
sub
enter
ss
sbb
lea
mov
ljmp
lret
xchg
mov
cmp
pop
cmc
mov
and
jne
loope
ljmp
lahf
xor
pop
fistl
mov
xchg
mov
fs
sbb
push
adc
cltd
xchg
call
pop
or
mov
and
in
mov
insb
je
inc
adc
test
jns
xchg
sub
div
cmp
in
out
clc
jle
cmp
sub
add
mov
iret
cli
inc
pop
rorb
xchg
shrb
les
mov
inc
test
pop
lock
daa
sahf
sbb
xchg
lahf
xor
push
sbbl
insb
enter
mov
cltd
adc
mov
mov
std
pop
movsl
in
push
jns
mov
cld
pop
pushf
fcmovne
fisubrl
dec
xor
xchg
add
aaa
sti
mov
iret
ljmp
cmp
cli
push
popa
jle
add
hlt
cwtl
out
mov
add
cmp
rcrb
aas
mov
call
cld
mov
push
pop
rcr
mov
cmp
sti
push
adc
dec
cmpsb
or
movsb
ds
jnp
pop
mov
xor
sbb
enter
or
mov
mov
push
sub
cmpsl
jbe
or
ret
push
into
mov
mov
inc
fldl
xchg
add
mov
data16
stos
icebp
dec
loop
nop
and
sbb
test
add
nop
pop
stc
sub
fdiv
movsl
pop
nop
adcl
pop
mov
jne
and
aad
repz
inc
adc
or
hlt
shlb
shrl
out
daa
and
scas
mov
pop
mov
mov
mov
cmp
leave
aad
pop
xchg
mov
mov
les
pop
sub
dec
mov
adc
cmpsb
jb
push
push
push
fsts
or
push
mov
iret
js
vpunpckhqdq
fcompl
adc
mov
int3
xor
push
lcall
jle
arpl
pushf
mov
aam
xor
pop
dec
mov
addr16
cs
fistl
jo
test
and
rcrl
cld
js
repnz
hlt
movsb
mov
dec
popa
mov
xor
dec
jb
pop
pushf
push
out
dec
imul
mov
sarb
cltd
xor
dec
mov
lahf
data16
mov
adc
xchg
push
cmp
subb
push
mov
cld
mov
call
or
hlt
push
push
or
xlat
test
pop
pushf
jnp
sbb
lcall
jbe
add
mov
pop
hlt
push
pop
jb
lea
sbb
cmp
movsl
cmp
or
adc
lock
aaa
pop
divl
xchg
les
fwait
sbb
lea
test
nop
and
push
popa
push
andl
je
movsw
mov
mov
and
dec
lahf
add
fisttpll
xchg
xchg
bound
mov
xchg
jns
fs
mov
popf
mov
push
jne
mov
pop
test
cmp
mov
jae
rclb
jns
sub
sub
adc
aad
jl
or
or
leave
cld
push
xchg
mov
cwtl
pusha
pop
fadds
or
fwait
mov
jnp
xchg
pinsrw
popf
sbb
sub
xchg
out
sbb
lcall
into
movsb
sahf
lods
push
push
outsl
mov
add
jo
popf
xor
lahf
add
scas
iret
fdivs
inc
dec
mov
out
jns
cmovo
aas
pop
stos
jns
xor
xchg
fsubrs
lea
mov
test
mov
cmp
and
fucomp
mov
aaa
sub
aad
cmc
mov
fmull
mov
cmpsl
stos
mov
xor
and
dec
sub
jbe
cwtl
jg
clc
stos
xchg
cmp
data16
and
movl
fmuls
mov
mov
out
iret
cld
push
outsb
in
mov
fcomip
and
pop
jecxz
in
and
int
xchg
cmc
sbb
and
mov
arpl
fs
sub
or
mov
pop
xor
fidivrl
jg
adc
jp
mov
aas
and
ja
loopne
xor
das
cwtl
adc
rolb
jp
lods
mov
mov
jne
bound
dec
xchg
fisubrl
mov
loop
hlt
inc
aaa
xor
lods
xor
leave
ljmp
lea
pop
mov
mov
cmp
aas
shlb
les
aad
insb
lcall
in
fcoms
push
lods
and
jp
cmp
movsbl
in
sub
inc
mov
ds
int3
lds
mov
push
int3
mov
in
jns
fst
fcoms
mov
xor
pop
sar
in
outsb
inc
and
mov
int
cmpsl
outsb
xchg
lods
mov
dec
mov
ds
cmpsb
xor
push
push
xor
xor
clc
xchg
lcall
jmp
jno
pusha
push
adc
cmp
sti
cmp
sbb
cltd
xor
daa
jbe
mov
in
test
push
and
fidivs
rcrb
adc
sub
dec
mov
mov
xchg
pop
sbb
orb
xlat
pop
jne
jne
add
push
loop
fwait
decl
pusha
data16
repnz
xchg
mov
mov
jg
pop
and
int
mov
mov
cltd
cmpsl
int
and
mov
icebp
idiv
push
jne
aas
cmpsb
popa
in
test
push
loopne
sbb
cltd
test
push
cmpsl
push
dec
mov
push
bound
mov
arpl
xchg
movl
pop
outsb
popa
and
in
pop
sbb
rcll
or
into
loope
sub
test
insb
subb
add
pop
jp
adc
jl
ret
inc
out
dec
jae
pop
cmp
fnstsw
out
les
scas
ljmp
dec
cmp
hlt
jne
mov
nop
xlat
cmp
jno
pop
or
in
and
js
jmp
std
add
sbb
inc
adc
lcall
jmp
and
arpl
inc
lock
sub
addr16
mov
mov
or
mov
shll
fidivs
inc
add
test
fisubl
call
sub
mov
shlb
inc
rcrl
sbb
adc
popf
adc
repnz
insb
mov
fistl
sub
dec
imulb
outsb
pop
fwait
pop
shll
xchg
repnz
mov
cmpl
adc
add
push
adc
out
push
int
jb
sbb
jb
cmp
mov
xor
stos
fwait
into
adc
mov
mov
push
out
out
roll
incl
add
pop
pop
pusha
xor
add
sbb
pop
cmpb
sub
xor
lret
mov
aam
mov
in
jecxz
adcl
cltd
xchg
inc
ja
sbb
jge
cmpl
xor
stos
cwtl
jae
or
sub
clc
dec
imul
popa
dec
cmp
lcall
repnz
and
fsubrl
jge
jne
jg
test
mov
jae
out
mov
test
sbb
sub
out
push
mov
mov
inc
jo
lahf
xchg
adc
sub
data16
aaa
lds
or
jp
popf
and
and
mov
sbb
int
sarb
imul
sbb
insl
shrb
enter
ja
and
mov
sbb
minps
or
add
jl
or
das
addr16
in
dec
xor
inc
hlt
out
jo
insb
scas
pusha
dec
or
loop
sbb
data16
push
mov
mov
lahf
clc
lret
std
xchg
icebp
insl
out
clc
and
pop
pop
xchg
int
mov
lock
mov
mov
sti
pop
ret
ftst
jmp
push
ds
sbb
push
bound
push
aaa
or
push
les
mov
orb
xor
sub
xor
jle
and
into
leave
pushf
mov
dec
or
cmp
ficomps
hlt
fwait
ret
lods
loop
in
jnp
mov
xchg
nop
shr
xchg
stc
add
cmp
pop
fnstsw
adc
in
daa
icebp
and
mov
or
imul
or
pop
push
lret
jo
inc
fisubrl
cmpsl
xor
jns
pop
jmp
sti
pushw
out
adc
mov
sub
xor
stos
xchg
repnz
xchg
xchg
cltd
fsubs
adc
jb
aad
adc
outsl
or
push
pop
pusha
pop
and
mov
mov
into
imul
adc
lret
cld
or
popa
aad
cwtl
pop
iret
jne
fsub
mov
mov
repz
je
xor
sub
andl
fs
or
int3
bnd
mov
push
stc
jns
iret
leave
in
mov
add
in
das
pop
das
sarb
cltd
cmp
stc
gs
cmc
mov
popf
adc
rcrl
cli
scas
cs
cli
arpl
popa
adc
std
stos
jmp
lock
or
in
add
pop
push
xor
xchg
lds
cltd
adc
push
cld
imul
in
daa
push
repnz
adc
push
in
pop
mov
push
loope
ss
push
movsb
inc
or
sub
xchg
push
or
rdtsc
pop
jnp
or
xchg
xchg
xchg
in
lods
dec
mov
lods
pop
adc
rol
roll
cmp
arpl
outsb
jns
rorl
testb
sbbl
and
pop
shlb
or
out
mov
lods
out
push
xor
cmpsb
sarl
sub
andb
adc
lcall
cltd
sahf
mov
negl
je
stc
dec
rcr
test
loopne
or
jecxz
roll
les
addr16
std
repz
xor
sbb
sub
faddl
cs
mov
xorl
dec
in
add
push
insb
movsl
movsl
in
xchg
cmc
push
mov
jg
clc
ret
repnz
sbb
testb
push
scas
jbe
mov
mov
sub
mov
inc
movsl
fs
pop
mov
mov
sub
into
iret
movsl
sarl
sar
cmc
cmp
cltd
mov
sub
push
cmp
out
lret
pop
fmull
shll
push
push
or
flds
sub
sub
ljmp
lods
pop
imul
mov
xchg
push
add
or
loopne
xchg
cwtl
jecxz
testb
lea
pop
pop
mov
call
adc
jl
cltd
out
in
mov
mov
fidivrl
inc
out
ja
insb
jno
pop
lcall
jne
gs
xlat
insl
cmp
lret
inc
shlb
pop
pop
cld
inc
mov
sarb
cmp
loope
cmpsl
cmpsb
jl
cmpl
daa
lret
jns
popf
or
inc
ja
pop
pop
stc
and
sbb
sub
sahf
add
jecxz
inc
out
mov
mov
push
dec
push
push
in
mov
mov
imul
int
imul
jg
imul
jmp
aad
mov
lock
jo
pop
daa
add
pop
orb
mov
inc
xchg
jmp
int3
loop
push
leave
and
jmp
daa
stc
out
ljmp
mov
xchg
icebp
or
icebp
adc
loop
fwait
int
or
nop
xor
out
popf
add
sbbl
dec
xchg
popa
jle
iret
or
dec
fwait
js
repnz
rcrl
cmc
add
cmp
into
call
nop
stc
das
out
nop
jl
loopne
dec
xor
les
push
sti
addr16
xchg
and
stos
xchg
xchg
sti
cmp
stc
movsb
xchg
xchg
test
fwait
jne
lret
jp
in
sub
jle
stos
dec
repz
mov
pop
pop
inc
ljmp
xchg
cmc
lea
jecxz
cmc
in
fcoml
xor
lock
dec
es
jg
fldenv
add
repnz
push
sub
sbb
gs
hlt
cs
cwtl
cmp
push
test
loopne
aad
sub
mov
insb
shrl
clc
jg
dec
jecxz
cs
and
or
loopne
dec
xchg
xor
faddp
or
mov
inc
pop
inc
jno
push
dec
mov
mov
dec
jns
fnstsw
adc
lret
mov
lods
dec
and
dec
repnz
cli
inc
or
les
dec
mov
outsl
sub
movsb
inc
dec
xor
cmp
mov
test
std
inc
xor
mulb
jle
xlat
pushf
js
ljmp
push
xchg
dec
lret
in
xor
push
fwait
clc
jmp
and
dec
mov
or
js
imul
jb
xchg
out
or
std
loop
pop
cmpsl
sbb
lcallw
testb
dec
jmp
cmpsb
jmp
pop
repz
stos
mov
add
out
mov
mov
dec
rcrb
in
in
push
sbb
lods
daa
pop
jns
pop
test
call
subb
dec
call
xor
or
or
mov
stos
les
lretw
das
loope
fdivp
cld
pop
cmp
out
rclb
inc
mov
mov
cmp
in
shlb
dec
popf
int
std
xchg
ret
xchg
mov
adc
xor
dec
out
ret
enter
mov
pop
sbb
xchg
dec
int3
nop
and
jo
iret
fwait
dec
jbe
cmc
fcomp
lret
movsl
cwtl
sub
or
rorb
and
movl
adc
xchg
rorl
jbe
jbe
fsubr
mov
leave
jp
dec
mov
ret
enter
lods
pop
jns
sbb
mov
lea
pop
icebp
clc
inc
jecxz
roll
pop
sbb
xor
sub
lahf
cmp
mov
cmc
mov
ret
nop
inc
hlt
in
mov
ds
out
lea
sub
adc
rcr
inc
stc
das
add
mov
or
add
or
sub
jl
mov
xor
repz
loopne
ret
les
movsb
or
mov
cli
fldt
or
xchg
cmp
aaa
lahf
rorl
loope
dec
sub
popl
imul
xor
push
fsts
mov
test
push
cwtd
push
mov
pop
sarb
sbb
xchg
fwait
xchg
push
bound
bound
std
ret
loopne
dec
xor
ja
pop
xchg
mov
jp
add
jmp
push
repnz
push
xchg
ror
jl
nop
dec
pop
subb
jg
and
sbb
dec
rolb
fadds
lea
movsl
loope
mov
mov
add
test
xor
jmp
test
test
pop
jno
and
stos
js
adc
loop
lock
in
adc
test
mov
push
fcos
xchg
inc
sub
shll
pop
aad
push
lcall
pop
cmp
lret
mov
inc
adc
xchg
push
jg
cmp
jb
and
mov
mov
push
aas
sub
dec
jecxz
xchg
repz
test
mov
cld
or
mov
jmp
fistpll
mov
push
cmpsb
xor
scas
adc
dec
in
inc
or
sub
into
std
test
movsb
ja
sub
mov
xchg
daa
inc
std
dec
mov
sub
mov
jnp
pop
sarb
and
enter
jae
xchg
dec
and
bound
inc
hlt
adc
or
loope
icebp
mov
shll
mov
sbb
repnz
popf
add
inc
and
xchg
mov
xchg
xchg
mov
cmpsl
int3
mov
push
jae
addb
movsl
mov
test
sarb
cmpb
into
mov
jnp
xchg
adc
sbbb
dec
adc
daa
jae
mov
loope
jmp
ss
lcall
mov
cli
inc
mov
lret
addr16
fcomps
fbld
fmulp
mov
das
lahf
jnp
rorl
jecxz
mov
sub
sti
call
inc
test
adc
mov
pushf
ja
sub
and
and
lcall
inc
outsl
push
shl
sti
cmp
roll
inc
js
loop
push
jo
mov
sahf
loope
adc
ljmp
fisttpl
xchg
xor
xchg
popf
push
sbb
jle
and
jg
xor
inc
repnz
add
adc
cli
inc
test
mov
sub
cltd
fxam
xchg
pop
sbb
lcall
dec
imul
mov
xor
repnz
dec
and
std
jge
sbb
add
test
scas
dec
pop
les
cmp
fwait
push
pop
arpl
std
pop
pop
add
dec
inc
dec
push
shr
inc
xchg
jecxz
and
dec
xor
daa
and
fstl
adc
mov
insb
popa
test
dec
xchg
outsb
xorb
mov
imull
mov
inc
xchg
add
popa
sbb
in
push
in
sub
push
pop
inc
rorl
loopne
dec
js
jbe
aaa
mov
ljmp
pop
adc
lahf
mov
sub
or
mov
rcrl
fisttpl
cld
cmp
call
negl
mov
mov
jne
sub
popa
out
adc
mov
push
mov
into
jnp
dec
sbb
ficomps
pop
and
ret
pop
subl
dec
xlat
rclb
or
rcr
mov
js
lods
and
xor
dec
iret
xchg
ljmp
ss
pop
enter
sbb
jmp
ljmp
cmpsl
pop
out
jno
imul
rcrl
cmp
loopne
pop
andl
xchg
xchg
adc
mov
mov
icebp
out
add
and
sbb
ja
jg
test
lock
insl
daa
adc
cli
outsb
xor
lock
loope
push
rcr
dec
rclb
dec
push
sahf
movsl
mov
pop
and
std
mov
dec
mov
and
outsl
sub
loop
jmp
clc
jnp
pop
jle
adc
lea
cli
fistps
dec
pop
jge
fwait
sbb
movsb
mov
xchg
repz
xor
aad
jne
fadds
mov
adc
push
outsl
jno
divps
repz
lahf
push
lods
jmp
sub
mov
dec
andl
pop
mov
cs
sub
cmp
andl
jns
jl
std
cmpsb
cld
lahf
mov
cs
sub
mov
dec
adc
subl
cmpsl
xlat
test
es
and
sbb
jge
and
lods
out
mov
leave
pop
jge
clc
jp
addb
out
mov
xchg
or
icebp
cltd
aaa
sbb
icebp
pop
push
popf
mov
les
xchg
mov
gs
jge
in
jmp
or
or
loopne
rorl
dec
js
adc
mov
or
in
jo
xchg
lea
ret
stc
call
addb
ss
ljmp
cmc
cmp
arpl
jl
push
cs
out
je
rorb
leave
xchg
test
in
lret
mov
pop
xlat
xchg
js
or
dec
call
imul
mov
mov
ret
imul
pop
add
mov
push
je
sub
ret
ljmp
psubd
aad
and
sbb
cmpsb
or
mov
inc
cwtl
jnp
add
ljmp
add
jne
ret
ret
cs
mov
mov
mov
fisubrl
rep
push
jecxz
xor
mov
inc
lods
out
mov
and
cmpsl
push
jmp
loopne
inc
jge
enter
xchg
push
and
push
xchg
iret
test
jmp
xchg
decl
lods
adc
add
xchg
cmp
cmp
mov
inc
pop
inc
cmpsb
mov
push
inc
iret
pop
xchg
in
das
imul
loop
push
push
inc
mov
and
in
sub
negb
adcl
mov
movsb
cwtl
or
cmp
adcl
add
lock
push
pop
loope
movsb
pop
push
sub
adc
and
pop
inc
sahf
push
mov
xchg
scas
mov
sbb
jbe
clc
loope
sbbl
push
sbb
imull
out
lret
js
and
cmp
sub
mov
pop
mov
mov
inc
cmp
das
push
jmp
cmp
sbb
mov
es
sbb
pop
fucomip
and
pop
jl
icebp
cmpsb
int3
xor
adc
or
ss
test
cmp
jmp
adc
add
or
pop
inc
outsl
je
out
push
cmpsb
sub
outsl
sbb
sbb
fisttpll
outsl
mov
xor
inc
adc
mov
add
add
jp
mov
xor
cmp
nop
sbb
subl
mov
dec
arpl
arpl
adc
or
fcoml
mov
add
mov
pop
es
mov
mov
adc
push
xchg
les
inc
test
mov
cltd
inc
mov
cmp
mov
in
adc
mov
jmp
pop
pop
fcmovnu
mov
lahf
test
roll
insl
xor
sub
xchg
aaa
jmp
arpl
or
or
push
mov
push
int3
sbb
and
pop
inc
mov
push
adc
bound
sbb
lret
arpl
in
enter
fwait
push
or
mov
mov
loop
push
add
mov
jge
xchg
int3
mov
mov
cmc
push
lods
xor
mov
jno
jl
jnp
mov
cmpsl
fistl
xor
push
mov
and
push
xor
inc
stos
outsl
into
pop
push
cltd
movsl
imul
lahf
xchg
cmpsb
add
fistpl
inc
pop
sub
and
push
ret
ds
mov
adc
mov
iret
push
insb
movsb
xor
sahf
call
lds
lock
aad
mov
pushf
scas
out
ret
sbb
mov
sub
mov
scas
sbb
and
sti
adc
pop
js
mov
and
pop
inc
jne
mov
imul
cs
aaa
movsb
xchg
or
mov
jo
cmp
xchg
icebp
push
andl
jbe
xor
pop
pop
push
fdivs
xchg
cmpb
mov
cmp
inc
push
int3
cmpsb
pop
movsb
sub
jge
pop
dec
movsl
rolb
mov
rol
sbb
dec
movsl
not
pop
data16
mov
aam
adc
mov
mov
mov
pop
int
adc
rcrb
push
mov
dec
jl
xor
fsubr
bound
insl
daa
gs
inc
pushf
mov
stc
pop
sub
mov
inc
push
adc
test
or
div
out
popf
xorb
cmp
mov
dec
push
xor
sahf
push
mov
nop
jp
jnp
mov
mov
lret
lock
sbb
neg
pop
movsb
std
ljmp
les
int
pusha
cmp
lock
add
sbbb
sbb
mov
mov
cmpsb
xor
cld
std
inc
mov
lock
repnz
sqrtps
gs
mov
xor
sbb
in
pop
mov
add
int3
shr
pop
int3
cltd
lods
fldenv
mov
pop
or
push
pop
test
in
mov
popa
inc
loop
stc
xchg
adcb
es
mov
xchg
mov
push
or
test
mov
or
fwait
in
fidivrl
sbb
lret
hlt
dec
das
sbb
aaa
jmp
ret
xor
test
in
movsl
je
or
or
icebp
sub
movsl
stos
push
js
ds
pop
ret
jge
xlat
jae
ret
mov
mov
push
mov
iret
and
outsl
das
andb
ret
rep
push
insl
cs
push
inc
inc
pop
jle
add
andb
cld
hlt
lahf
jns
adc
bound
movsl
cltd
sbbl
or
lea
sbb
and
inc
aas
sub
ret
adc
mov
pop
and
stc
lock
pop
push
and
dec
dec
imul
dec
push
scas
mov
mov
aam
inc
loop
jo
ffree
pop
mov
movsl
mov
mov
mov
mov
ja
lea
and
xchg
and
jg
add
imul
dec
roll
pop
xchg
movsl
orl
jle
mov
sbb
or
out
aam
mov
jo
sub
daa
stos
int
jge
aad
icebp
mov
lahf
fnstsw
jp
fistl
data16
sub
xor
push
xchg
jbe
mov
pop
cmc
pop
inc
and
pop
das
or
shll
xlat
pop
mov
imul
jle
or
clc
out
mov
or
inc
push
mov
iret
movsl
jge
fld
test
pushf
xor
mov
or
enter
inc
xchg
idiv
ja
cmp
stc
pop
ret
inc
sbb
aaa
sbb
jecxz
fcompl
es
mov
inc
inc
mov
xlat
imul
scas
ss
adc
dec
int3
push
xor
cltd
add
or
icebp
ds
ret
daa
sub
clc
testb
inc
jle
xchg
pop
dec
pop
xor
fs
imul
pop
dec
pop
fdivl
mov
rcll
lods
stc
pop
and
sbb
cmp
fcompl
mov
aad
stos
push
mov
jg
mov
push
out
jae
iret
and
sbb
inc
push
insb
repnz
dec
fimull
out
lahf
sbb
mov
rolb
xor
xor
std
cmp
xor
mov
and
jecxz
xor
and
loope
sub
bound
mov
push
movsb
xor
aad
xor
ficompl
mov
cmpsb
mov
mov
scas
push
jmp
jae
or
lds
andl
jmp
lock
dec
mov
adc
rcr
add
fstl
in
xchg
cmp
jnp
lea
jmp
dec
pop
sahf
hlt
fiadds
jg
testb
jo
dec
les
movsl
mov
sub
insl
nop
and
imul
dec
xchg
cmp
or
pop
es
inc
movsb
inc
int
ljmp
addr16
popf
mov
mov
lods
mov
ja
mov
and
xchg
add
or
jno
insl
cmp
or
popa
mov
mov
push
adc
test
pop
testb
stc
mov
into
stos
push
sbb
dec
mov
mov
nop
cmp
sarl
xor
and
mov
adc
push
out
mov
adc
enter
push
ss
add
sahf
insb
ja
mov
cmp
scas
mov
push
cli
mov
sub
pop
outsb
test
out
fistpl
add
mov
jg
popf
scas
add
mov
xchg
pop
out
xchg
or
push
push
mov
jmp
in
mov
out
jle
push
mov
cmp
dec
insl
adc
lods
sub
popa
dec
fnstenv
inc
ja
icebp
repnz
sbb
inc
scas
mov
movsb
adc
ja
stos
rcll
xchg
enter
push
leave
rolb
lods
cmp
sbb
fwait
fwait
js
stc
xchg
and
xchg
mov
ror
call
cmpl
aaa
leave
stos
sbb
shlb
into
popf
mov
add
adc
xchg
mov
xchg
push
dec
loope
sbb
ret
aaa
lcall
inc
jge
mov
add
xchg
mov
add
aad
imul
repnz
sarb
fwait
xchg
mov
iret
scas
xor
push
cli
int3
mov
lods
sub
enter
mov
mov
jl
mov
pushf
push
xor
push
pushf
aas
mov
mov
in
sub
sbb
push
add
mov
scas
adc
jmp
in
lret
mov
fisubl
or
movb
cmp
xchg
sub
mov
mov
push
add
adc
daa
mov
sub
sahf
push
fmuls
mov
nop
lock
push
out
add
repz
pop
push
xchg
scas
fcmovb
aaa
inc
inc
idivb
outsl
loope
int
sti
cld
pop
inc
pusha
fbld
filds
flds
outsb
ja
sarl
xchg
mov
xlat
xorb
orl
mov
scas
mov
adc
addr16
popf
cmc
sarb
xlat
push
jno
lds
dec
add
cmp
in
add
xchg
dec
cmp
test
cmpsb
or
cmp
and
adc
mov
clc
cmc
clc
jge
mov
pop
and
xchg
repz
push
jg
bound
push
cmc
sbb
xor
shll
xchg
insl
dec
fcoml
lock
gs
lahf
fmuls
jns
sti
dec
les
mov
fstps
sahf
jne
rorl
rol
inc
scas
dec
out
pop
cmp
pop
stc
std
lret
test
loope
aad
mov
dec
mov
arpl
xchg
aaa
mov
test
por
scas
adc
cmp
sbb
inc
ss
sub
xorb
idivb
movsb
mov
pop
and
fimull
xchg
aam
cltd
fwait
xor
cltd
and
mov
xchg
mov
nop
clc
movsl
sbbl
test
add
jge
movsb
lods
adc
cmp
mov
les
es
add
shll
popf
jae
daa
or
js
lods
xor
call
ret
mov
sarb
es
outsl
popa
xchg
pop
mov
mov
std
fdivrl
push
cmpl
outsb
adc
insl
add
mov
movsb
jae
mov
fcoml
sahf
inc
out
pop
pop
loopne
mov
mov
dec
jp
inc
in
subb
pop
lret
das
lea
ljmp
mov
and
xchg
lods
dec
insb
xor
fs
fisttpl
jle
movb
cmpsb
out
pop
imul
xlat
jge
data16
stc
fcoml
loop
jno
mov
add
cltd
enter
xchg
push
pop
inc
out
inc
jp
and
jge
fisttpll
sub
xor
cmpsb
stc
or
mov
push
pushf
dec
jle
adc
xchg
dec
sub
mov
addb
stc
rorb
dec
adc
add
jb
pop
mov
lcall
jge
sbb
ja
stos
in
mov
jae
xlat
jns
cmp
mov
lea
and
jo
lret
sbb
add
pop
mov
cwtl
pop
dec
ret
mov
sub
jnp
mov
cltd
or
cmp
adc
push
adc
add
sub
movsl
hlt
dec
fsubr
sub
or
mov
lea
jge
xor
mov
pop
jge
push
rcll
mov
popf
es
push
data16
je
add
sahf
cli
mov
lds
mov
sub
or
int3
xor
push
xchg
addr16
xor
inc
sar
fs
jmp
fisubrl
fisttpl
jg
mov
vphadduwd
aad
mov
lret
enter
call
mov
push
pop
es
dec
in
mov
fcmovu
xchg
mov
push
xchg
mov
lret
lds
jae
gs
mov
arpl
rcl
add
es
pop
icebp
aas
jle
das
jo
inc
pop
sbb
shlb
sbb
add
sub
out
push
xchg
pop
fisttpll
cmp
aam
mov
stc
scas
cmpsb
xchg
stc
and
in
jbe
mov
movsb
mov
push
int3
inc
ljmp
mov
inc
push
nop
sub
jne
jg
xchg
es
and
sahf
insl
push
and
xchg
iret
or
mov
jnp
out
xchg
xor
lods
push
mov
jne
mov
decb
or
int
sub
add
fdivr
in
out
push
and
bound
bound
std
push
dec
cmp
mov
adc
cmp
stos
dec
sub
icebp
mov
cmp
lds
in
xor
push
mov
jg
dec
fsub
insl
and
push
push
pop
mov
adc
fstpl
mov
outsl
popf
ret
cmp
pusha
or
sbb
es
or
jns
mov
pop
loop
lcall
add
cwtl
mov
xor
stos
into
pop
cmp
aas
adc
pusha
cmpsb
int3
dec
mov
xor
cli
xchg
jmp
xorb
or
adc
xor
and
cmp
push
xor
dec
xchg
pop
in
scas
mov
xlat
jb
jae
jb
pushf
ljmp
movsl
aas
imul
insb
and
push
xchg
jl
mov
xlat
loop
ljmp
mov
push
sarl
lds
sub
jmp
fidivs
iret
repz
adc
pushf
mov
clc
mov
adc
pop
ds
scas
cld
movsb
rcrb
xlat
xchg
and
or
jo
adc
daa
jecxz
les
sti
sub
int3
sub
pop
mov
dec
clc
mov
stos
dec
cmp
fists
insb
jle
cmp
inc
rcrl
out
sbb
jne
pop
test
loopne
push
cmc
lret
inc
jp
mov
pop
imul
out
sti
sub
test
aaa
ljmp
sti
push
lret
popa
adc
xchg
or
adc
push
jmp
xchg
cmpsl
cwtl
arpl
popf
push
cmp
rcl
nop
cwtl
arpl
test
dec
mov
inc
pusha
cmp
cmp
insl
push
test
pop
aad
mov
mov
sarb
mov
sbb
mov
pop
lret
in
cli
movsb
sahf
jbe
mov
jmp
loop
cli
cmp
mov
stos
push
mov
sub
cmpsl
fwait
adc
mov
shlb
adc
mov
sbb
cltd
push
fcmovb
cmp
jle
hlt
ja
cmpl
rcll
sub
push
cmpsl
sti
shl
inc
enter
pop
adc
fs
mov
dec
fmulp
cmp
loop
add
in
xchg
jl
jl
lods
pop
outsl
sbbb
or
jle,pt
mov
xor
popf
or
mov
or
push
and
lahf
mov
orl
andb
stc
lods
icebp
jecxz
mov
repnz
sti
subl
dec
xchg
adc
inc
lods
or
sti
sub
mov
popa
jb
pushf
in
movsl
decl
xor
inc
fcomp
cmp
aaa
out
es
idivb
insl
shll
and
lods
inc
jmp
cmp
xor
push
iret
mov
push
scas
jne
out
testl
dec
pop
pop
mov
aaa
stc
rclb
fimull
add
push
and
mov
lahf
insl
popa
in
jge
pop
hlt
mov
stos
hlt
jno
push
loop
daa
xor
xchg
inc
mov
mov
sub
adc
imul
add
lock
sub
orb
testl
pop
jno
add
fwait
and
xchg
nop
mov
dec
mul
push
push
paddd
adc
test
pop
dec
dec
jne
in
lock
mov
loopne
add
xchg
bound
mov
jne
and
xor
in
adc
mov
sbb
add
sbb
add
push
inc
lods
inc
in
fstpl
push
out
outsb
add
inc
pusha
sbb
lock
or
pop
repnz
xlat
jg
insb
push
loope
mov
jl
repz
andl
movsb
pop
in
ret
mov
and
mov
pop
negl
dec
jge
ja
add
adc
jnp
dec
cli
out
pushf
sub
gs
mov
xor
mov
inc
rcrl
mov
adc
hlt
insl
pop
inc
push
sub
testl
mov
scas
mov
insl
xchg
push
push
popa
adc
jns,pn
lds
dec
inc
shr
xchg
cmc
cs
and
enter
aad
mov
mov
jg
mov
push
pop
pop
dec
cmp
cwtl
push
cmp
and
in
mov
push
in
popa
adc
push
lods
pop
ljmp
mov
push
push
lahf
imul
hlt
mov
aad
push
xchg
lahf
pusha
mov
stc
pop
mov
jp
jnp,pt
xchg
in
dec
push
jne
insl
mov
xchg
pop
sahf
mov
inc
add
sub
push
xchg
dec
movsb
rolb
pop
andb
shrb
sbb
clc
outsb
jmp
xlat
stc
dec
ljmp
sub
rcll
dec
mov
push
xlat
test
scas
mov
xchg
push
lret
dec
dec
sbb
mov
lods
andb
inc
add
xchg
sti
pop
push
push
hlt
scas
out
jmp
outsb
pop
fs
cmp
jne
out
fcomip
mov
loop
and
out
out
adc
jo
in
pop
xchg
dec
jae
jp
sbb
pop
loopne
push
aaa
aaa
jp
aaa
repnz
fwait
out
cmc
pushf
add
imul
test
pop
mov
add
jecxz
xchg
popf
sub
std
mov
repnz
push
add
sub
mov
and
dec
int3
xchg
sub
sbb
xchg
jne
mov
testb
jp
or
insl
lods
pop
ljmp
push
clc
dec
sub
inc
adc
test
jbe
jae
xchg
sub
subps
ficoml
cli
mov
and
mov
fwait
sub
xor
pop
xor
and
shrb
popa
sbb
jp
lods
pop
or
icebp
mov
cs
sbb
std
shlb
jae
and
inc
mov
mov
sbb
sub
push
pop
xchg
mov
into
cmp
js
pusha
mov
fnstenv
scas
push
mov
jecxz
mov
aam
dec
pop
adc
push
xor
inc
test
fdivrs
pop
xchg
fidivl
jmp
repz
jns
mov
fwait
jmp
mov
out
movsl
adc
test
cltd
aaa
jmp
imulb
xlat
scas
push
popfw
mov
adc
cmpsb
gs
faddl
xor
jo
push
loopne
mov
clc
cmp
hlt
test
sbb
mov
mov
mov
jbe
xor
cltd
mov
cmpsb
out
lods
test
adc
xor
mov
jo
cmpb
xor
ret
fdivl
add
and
sub
push
into
jns
lds
mov
add
and
cmp
push
or
jg
pop
mov
lcall
push
ljmp
repz
inc
fcmove
adc
push
outsl
gs
xchg
fdivr
fs
fldenv
mov
pusha
xor
cmpsl
mov
mov
rorb
adc
int
or
jae
xchg
sbb
jno
or
dec
inc
ds
ljmp
mov
ret
push
mov
call
sbb
adc
add
xor
clc
mov
rcr
test
in
and
out
mov
pop
incb
jne
rcrl
pop
mov
mov
dec
pop
pop
loope
add
adc
lock
inc
adcl
shll
push
scas
adc
lea
mov
repnz
into
adc
lcall
fst
sbb
mov
jne
ret
inc
out
dec
cmp
enter
sub
and
nop
sbb
xchg
mov
xor
mov
dec
sbb
mov
jbe
fnstcw
bound
xchg
inc
popf
sub
cmp
or
jg
dec
movsb
jno
fdivrp
add
push
mov
lock
mov
shrl
add
daa
mov
aaa
xor
sub
mov
mov
addr16
mov
mov
jle
sub
xor
es
xchg
cmp
out
stos
in
mov
leave
cmp
in
ror
clc
scas
lret
adc
test
and
imul
dec
and
nop
fcompl
cltd
or
and
push
and
loopne
shrl
sbb
inc
sahf
movsb
dec
sarl
pushf
jbe
movsl
cmpb
negb
movsb
inc
xor
das
stos
pushf
nopl
outsl
cmc
movsl
adc
loope
xchg
stos
scas
in
xor
cmp
and
cmpsl
pop
jmp
xchg
mov
movsb
lods
ret
stos
fcom
gs
daa
push
sti
or
stos
and
test
cmp
or
dec
daa
push
inc
add
mov
scas
and
or
mov
mov
push
jo
popa
imul
ja
xchg
call
pop
negb
push
fmuls
adc
stos
and
jae
adc
js
dec
test
in
cs
in
loope
nop
loopne
std
add
cmp
adc
cmpsl
mov
sub
out
frstor
int
in
lods
xchg
sbb
mov
nop
sub
jg
or
adcl
not
filds
jmp
rorl
pop
xor
xchg
pop
dec
clc
int
mov
imul
mov
pop
or
cmp
in
lock
aad
int
aas
sarb
sbb
sub
cmp
push
mov
adc
cmp
stos
clc
push
mov
sbb
cld
outsl
cmc
lock
inc
scas
fcoms
aam
out
push
addb
shrl
or
mov
cmp
jl
mov
int
xor
in
mov
fsub
sub
out
lcall
loop
imul
rcrl
dec
gs
sarb
test
add
cmp
add
xchg
inc
dec
mov
jmp
mov
sbb
out
jnp,pn
xor
push
adc
repnz
xlat
and
add
mov
nop
les
rcrl
jge
mov
push
shll
outsl
xchg
pop
jno
fnsave
stos
and
or
and
das
xchg
adc
jge
sub
lret
xlat
xchg
movsl
pop
push
dec
mov
bound
shlb
adc
mov
mov
and
movsb
js
imul
into
aam
idivb
iret
lcall
aaa
xchg
cmpsb
adc
cmp
fsubrl
push
cli
shl
repnz
rclb
lret
int3
mov
ss
stos
imul
stc
adc
nop
push
outsl
add
fisubrl
loope
sar
adc
inc
stos
and
cmpsl
out
inc
cmp
and
jg
adc
jnp
xor
rorl
and
xchg
push
add
repz
dec
cwtl
mov
loopne
inc
clc
adc
outsl
xchg
xchg
aad
cwtl
out
xor
dec
jns
push
ja
jae
movsb
sbb
inc
dec
xor
lods
mov
adc
jo
cmp
push
inc
ja
sbb
jbe
mov
ja
daa
mov
in
sbb
push
mov
jmp
mov
pusha
ds
stos
inc
lock
lahf
movsl
in
cmp
popf
pop
push
int
push
adc
ret
mov
mov
imul
dec
lret
pop
sub
fdivr
adc
mov
pop
pop
adc
lock
cld
movsl
adc
mov
xor
pop
ljmp
lds
sub
mov
inc
sub
sbb
in
movsb
xor
iret
push
daa
orb
dec
loope
nop
pop
mov
out
sub
std
adc
or
dec
test
inc
adc
add
ljmp
shlb
xor
outsl
or
push
lret
int3
xchg
and
int3
lock
sbb
sub
stc
imul
das
leave
push
out
xor
push
cmp
mov
jb,pn
push
jg
dec
rcll
mov
sti
pop
lret
or
inc
es
inc
pop
xchg
stc
out
pop
mov
push
xchg
or
aas
push
ret
adc
push
lahf
lods
call
testl
adcb
cmp
dec
dec
xor
dec
pop
and
cli
push
rcll
pop
fcoms
and
xchg
mov
sub
adc
jnp
imulb
mov
pop
sbb
or
in
jle
push
mov
ljmp
mov
mov
dec
mov
mov
mov
cli
pop
pusha
scas
cld
mov
enter
sar
pusha
add
into
scas
mov
js
addr16
inc
ret
sbb
test
cmp
mov
or
outsl
cmp
test
adc
sahf
rcrb
xor
imul
imul
xchg
rorb
jnp
jne
xchg
fstpt
in
loop
movsl
mov
pop
fbstp
stos
test
clc
int3
inc
cmpsl
xchg
aam
xchg
sarl
hlt
dec
scas
lea
rcrb
fildll
sub
scas
rorl
test
lock
imul
out
scas
test
push
mov
mov
lret
in
in
jle
pusha
pop
stos
push
clc
lcall
or
add
repz
pop
lahf
aaa
mov
mov
xchg
jns
out
and
cmp
mov
cmp
inc
int
mov
mov
or
popf
sub
push
push
pop
or
xor
sub
rol
inc
mov
mov
sub
mov
add
movsl
cmp
adc
jp
jo
cmpsl
pusha
dec
lahf
push
mov
sarb
jns
cmp
mov
lods
sub
pushf
ljmp
cmpsb
mov
cmp
pop
js
sub
je
loopne
jbe
jge
movsl
dec
movsl
pop
sbb
lods
outsb
mov
pop
iret
lret
hlt
into
xchg
xchg
insb
enter
dec
aaa
jns
push
int3
mov
xor
fs
cs
add
push
jmp
stos
clc
out
js,pt
enter
daa
cmpsb
jb
mov
outsb
lcall
rcl
in
add
push
add
xor
je
imul
mov
adcb
cmp
xchg
mov
adc
pushf
add
xor
mov
xchg
lret
sbb
sub
aam
rcl
sbb
and
inc
inc
push
loop
arpl
or
dec
push
push
cltd
mov
popf
xchg
in
jmp
cmpsl
int
xor
subb
cmpb
aam
xchg
mov
out
mov
cmp
push
sbbb
jp
inc
sbb
mov
arpl
or
push
popa
rcr
mov
add
movsl
xchg
out
jl
negb
xor
and
mov
inc
in
or
mov
push
push
cmp
rorb
lods
mov
jae
mov
rcll
dec
push
int
or
fstps
scas
sti
fdiv
pusha
pop
sbb
mov
push
jmp
insl
add
inc
xor
sub
dec
into
vmwrite
and
cli
in
cltd
cltd
scas
adc
add
cmp
sbb
fildl
pop
imul
imul
lahf
sahf
enter
dec
cli
and
mov
xor
push
cmp
sbb
jg
sti
inc
syscall
rcrb
cwtl
movsl
mov
push
push
sub
mov
mov
cmpl
sub
jne
mov
jne
sub
mov
repnz
daa
sub
cmpsb
xchg
jbe
cltd
mov
loope
inc
or
loope,pn
std
push
cltd
add
fs
push
call
pop
mov
or
pop
xor
movsb
inc
cs
in
jbe
sbb
cmpsl
lret
jnp
adc
dec
push
adcb
jb
sahf
notb
fcmovne
aad
lret
sbbb
xlat
mov
xorb
pop
fbld
imul
and
cmp
pop
mov
popf
cmp
rcll
je
rcrb
inc
sbbl
sbb
subl
cmpsl
cmpsb
enter
xchg
or
mov
inc
pop
jnp
inc
fwait
jl
cmp
sub
dec
cmp
insb
inc
mov
test
jnp
data16
cld
sub
pop
cmp
clc
add
int
adc
out
stos
jg
scas
push
inc
data16
pop
jb
jp
dec
pop
jmp
cmp
xor
or
push
dec
sub
daa
jno
fidivl
loope
sbb
add
cmpsl
and
dec
ja
add
jnp
xchg
mov
les
adc
orl
jl
lea
daa
push
add
imul
pop
loope
cmp
fnstcw
outsl
and
dec
mov
sub
movsb
mov
cmp
mov
repnz
mov
std
movsb
shr
stc
jp
mov
adc
add
rolb
movsb
mov
inc
lods
leave
mov
dec
jg
pushf
scas
mov
dec
es
ret
popf
mov
inc
shll
sbb
int
pusha
fucompp
movsb
or
ds
mov
cmp
sahf
idivb
imul
adc
clc
into
inc
cli
lods
ljmp
cltd
push
push
fadd
aas
cwtl
sub
enter
cmp
aas
add
dec
cmp
out
mov
inc
xor
hlt
push
sbb
lods
fistpll
and
push
popa
add
sbb
je
mov
jecxz
sub
clc
fs
mov
test
loopne,pt
fsub
ficoms
jl
push
mov
dec
push
or
test
jle
out
inc
sahf
mov
jbe
fidivrl
or
enter
in
pop
mov
sbb
dec
jbe
dec
test
mov
and
test
lret
dec
dec
sti
cld
inc
and
test
insb
ljmp
es
dec
inc
clc
jle
mov
sti
aam
stc
cmp
mov
scas
sarb
pop
fistl
or
icebp
leave
pop
or
sbb
lea
cli
mov
cli
add
test
fnstenv
mov
in
push
jmp
push
jecxz
testl
dec
lahf
mov
mov
scas
and
into
cltd
or
stos
movsldup
je
fcompl
dec
adc
adc
faddl
enter
cmp
lret
lret
cmpsb
into
call
mov
call
xchg
mov
jne
cmp
nop
jge
outsb
test
cmp
push
scas
jnp
js
cld
adc
loope
pop
sbb
xchg
or
dec
ficompl
mov
jne
and
inc
xor
das
adcl
cltd
out
stc
popa
int3
lods
sti
sahf
je
lret
mov
ret
jl
cmp
mov
add
cmpsl
cmp
xchg
repz
xor
das
addr16
popa
aas
push
inc
add
fimuls
and
mov
loope
lret
pop
sub
add
mov
mov
pop
fnclex
inc
scas
sbb
std
scas
mulb
faddl
add
sbb
mov
add
dec
fs
js
loope
mov
divl
ret
mov
mov
emms
int
dec
mov
daa
aam
sbb
mov
adc
shll
shrl
mov
clc
sbb
mov
loop
bound
mov
sub
pusha
mov
add
sub
jge
repnz
std
inc
xchg
bswap
dec
scas
and
mov
iret
push
into
data16
inc
jae
inc
subb
in
adc
mov
fbstp
and
pop
add
pop
aaa
clc
ja
pop
sbb
mov
das
push
inc
sti
and
lcall
inc
push
push
leave
mov
add
jnp
pop
xor
xor
mov
jbe
mov
enter
pop
into
push
mov
imul
sub
popa
mov
adc
inc
mov
mov
rcrb
mov
adc
jae
jbe
mov
jp
int
test
fsubrp
push
jbe
js
xorb
sub
inc
mov
push
sub
loope
mov
and
push
cmp
jmp
push
popa
push
les
xchg
lret
sub
cmp
ds
repz
cwtl
and
cmpl
roll
shl
out
jb
or
jno
aam
pop
dec
arpl
adc
lock
jne
mov
shll
jb
insb
cltd
mov
adc
cld
or
nop
and
dec
pop
gs
jne
xor
in
push
out
lock
cmp
lcall
loope
inc
rcrb
sbb
outsb
ficoms
bound
stos
and
push
or
sbb
cmp
mov
out
fcoms
mov
add
mov
enter
cmp
jp
pop
xor
xchg
pop
xor
push
mov
jne
push
ret
leave
cmp
in
call
and
out
and
adc
sbb
fidivs
dec
jp
loope
inc
inc
cwtl
in
push
and
mov
cld
lahf
cmp
insb
mov
lret
fdivrl
loop
xchg
.byte
