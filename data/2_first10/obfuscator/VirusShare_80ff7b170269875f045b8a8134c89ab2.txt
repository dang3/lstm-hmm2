ljmp
cmp
or
dec
shrl
add
addb
pop
fiaddl
pop
aad
xor
mov
jo
mov
outsb
jae
out
cwtl
scas
gs
sub
in
mov
jge
push
pop
movsb
inc
aad
out
sti
cmp
sahf
scas
movsb
sub
aaa
shl
jns
mov
out
mov
mov
in
adc
aaa
aaa
out
repz
outsl
pushf
lods
repz
js
adc
pop
and
jne
popf
testl
push
mov
jns
jae
aam
iret
sbb
out
aam
push
iret
sub
jmp
sbb
xchg
outsl
cmpsl
imul
push
push
inc
jne
out
push
ret
push
push
mov
jo
cmpsl
add
jl
mov
js,pn
cmp
sti
sbb
lret
xlat
call
insl
mov
inc
mov
nop
push
jmp
mov
mov
daa
sti
dec
outsb
cld
mov
cmp
xcrypt-ofb
cmpsl
ljmp
shrb
call
pop
lock
cmp
fwait
inc
fisubrs
rorl
lcall
scas
shl
iret
test
out
ja
sbb
and
pop
shl
ja
mov
pop
icebp
iret
push
xor
lea
clc
iret
mov
in
sbb
add
and
pop
imul
sbb
cmp
jmp
sarb
movsb
and
ret
pop
insl
xchg
imul
shlb
jbe
or
orb
push
repz
ret
aam
fwait
sbb
loopne
sbb
pop
add
lcall
es
pop
pop
pop
insl
cmc
and
insb
dec
fnsave
out
lock
mov
inc
std
sbb
adc
test
cmp
mov
pop
cmp
sbb
xchg
cwtl
stc
add
or
lahf
in
popa
push
int3
and
daa
mov
adc
jo
cmp
push
loop
mov
arpl
inc
cmpsb
stos
lea
pushl
push
jg
repz
lahf
xor
clc
cmpl
jp
or
sbb
jne
data16
inc
jmp
shrb
mov
or
jno
inc
dec
inc
sub
jmp
sbb
cwtl
jns
scas
push
inc
lods
les
hlt
sti
popa
add
adc
add
sbbb
or
and
ret
mov
popa
fisubrs
lret
mov
movsb
cmpsb
add
ljmp
dec
pop
pop
jns
jno
add
cmp
push
imul
bound
loopne
mov
popa
rolb
mov
inc
jae
stos
fadds
inc
outsl
rcrb
mov
into
pushf
jae
int
and
mov
adc
jecxz
add
es
sbb
pop
mov
mov
data16
mov
les
mov
lock
jne
std
es
aad
push
in
mov
roll
daa
push
jl
adc
xor
mov
mov
push
dec
ror
iret
jmp
cltd
xor
addr16
xlat
push
insb
or
inc
ljmp
ljmp
lea
iret
mov
andl
cwtl
aam
daa
jmp
pop
loop
sahf
xchg
sub
enter
mov
pop
inc
outsl
sub
aam
mov
ljmp
movsl
push
into
imul
shlb
iret
jb
or
jecxz
int
outsb
in
sbb
cmp
stos
out
mov
cmp
dec
stos
push
inc
into
push
cli
or
mov
movsl
scas
loopne
mov
fcmovbe
cmp
fisttpll
sbb
movsl
nop
loope
dec
or
scas
orl
sub
jno
mov
popf
mov
rcrl
shll
int
icebp
add
testb
cmp
fimuls
or
jnp
test
mov
push
les
mov
jmp
icebp
sub
mov
das
jmp
sub
mulb
xlat
inc
inc
adc
lock
cmpsb
dec
dec
jbe
and
push
inc
js
cs
push
cmp
testb
mov
or
aaa
adc
add
das
push
mov
mov
xchg
or
adc
fwait
test
ret
repnz
jmp
adc
sarl
push
cmpsl
iret
jbe
inc
je
inc
fnstcw
push
push
push
jg
lods
cmp
in
add
cmc
repnz
jb
xchg
lea
and
rcrl
xor
addr16
mov
xchg
inc
inc
push
int3
cmp
or
ljmp
jp
roll
clc
ds
int
not
sbb
xor
xor
or
sbbb
in
xchg
faddl
in
ret
out
xchg
add
pop
xlat
mov
icebp
dec
sub
mov
xor
push
repnz
xchg
mov
fistps
sti
setae
push
pop
dec
pop
jp
test
mov
xor
dec
in
cmc
lods
aam
icebp
mov
push
jns
aas
mov
popa
or
jo
and
pop
adc
gs
bound
mov
jnp
ja
outsb
test
sbb
insb
xor
lret
xor
jae
cmp
dec
fwait
arpl
daa
jo
loop
imulb
mov
cmp
pop
xchg
sbb
aaa
mov
fldcw
fnstenv
dec
sahf
dec
cld
mov
call
xor
adc
sbb
push
or
insb
jb
push
inc
cld
js
hlt
dec
adc
mov
cmpsl
rcll
xchg
dec
mov
jb
idivl
jo
mov
mov
test
mov
fldl
and
or
sti
out
pop
push
pop
pop
jmp
mov
hlt
les
and
pop
sbb
inc
dec
cmp
xchg
dec
adc
movsl
sub
bound
jbe
pop
frstor
add
jbe
push
fidivl
mov
lock
pop
mov
jmp
dec
ja
jmp
push
orb
push
sarl
pop
lahf
lods
fistpl
in
lods
test
push
pop
je
jno
add
test
inc
xchg
lret
shr
mov
dec
xor
mov
imul
jae
sub
hlt
leave
mov
cmp
test
jge
js
inc
jb
sub
jns
xor
cmp
or
mov
push
pop
add
push
leave
pop
pop
adc
gs
js
push
aad
iret
push
daa
dec
cwtl
push
lcall
lea
fnstenv
ret
mov
push
fcom
cmp
mov
fnsave
push
jbe
sub
jp
repz
icebp
adc
add
jo
mov
mov
stos
popa
shll
add
stos
add
add
lahf
sub
in
xchg
scas
scas
push
jg
addr16
roll
les
pop
scas
pusha
stos
mov
pop
pushf
cmp
cwtl
push
jns
xorl
xchg
es
pop
leave
xchg
pop
xor
push
fimull
pop
or
mov
mov
and
mov
pushf
jo
push
sbb
mov
jg
push
ret
int
xchg
xchg
or
pushf
push
and
or
and
insl
inc
cli
jp
mov
xor
xor
sbb
stos
dec
cltd
cmpsb
and
and
xor
and
xor
lods
sub
jo
daa
push
inc
or
loopne
daa
loope
dec
daa
ja
mov
xor
sub
mov
mov
cmp
test
mov
rorl
in
adc
cli
int3
mov
aam
inc
adc
pop
leave
add
pop
sub
sbb
mov
loope
add
cs
adc
push
fisubrs
dec
stos
daa
call
les
daa
push
jb
xchg
lock
in
and
enter
scas
inc
xor
es
shrb
pop
out
ljmp
in
sbb
aam
lods
jne
addr16
arpl
dec
inc
mov
rolb
dec
iret
shrl
push
movsb
enter
mov
outsb
popf
inc
cltd
mov
enter
pop
jge
outsl
outsl
jo
cmp
sbb
push
xchg
sub
jne
popa
xchg
sbb
jg
jp
xchg
mov
mov
ficomps
lret
mov
rorl
adc
outsb
fnsave
fisubs
jne
inc
add
add
movsl
xor
push
sub
aas
push
push
inc
jns
cltd
push
test
push
mov
xchg
insl
mov
lods
inc
je
adc
lret
inc
out
or
jae
mov
inc
sbb
lcall
pop
addl
jge
mov
loop
push
int3
jbe
rol
pop
sbb
pop
push
jle
dec
int
call
sub
sub
popf
mov
in
sbb
loope
ja
mov
out
adc
ja
cmp
test
sbb
jnp
fwait
arpl
sahf
mov
cmpsl
das
push
test
mov
sub
pushf
cmp
dec
dec
dec
dec
pushf
push
sub
jmp
adc
test
mov
sbb
jle
jecxz
into
mov
jg
jnp
or
clc
lea
xchg
outsl
popa
cmp
pushf
dec
scas
decl
ljmp
mov
adc
xor
ljmp
jmp
andl
jns
int3
lea
xor
fldt
cli
xchg
int
pop
lcall
jbe
add
imul
fs
inc
iret
gs
rorl
xor
int
jp
push
pop
pop
out
mov
out
aad
fdivs
pandn
outsb
orl
pop
sub
cmc
sbb
lahf
cmp
js
aaa
sahf
repz
mov
push
xor
pop
pop
mov
sbbl
pop
push
stos
popf
adc
divl
ljmp
mov
fldpi
std
lahf
xor
pushf
ret
xor
clc
dec
incl
call
js
div
xor
hlt
iret
sarl
sub
cmpl
dec
cmpsl
cmpsb
popa
push
mov
dec
inc
icebp
jle
neg
shll
mov
inc
fstps
enter
and
mov
adc
sahf
cltd
call
in
jl
and
pop
xchg
lock
js
es
or
js
inc
jnp
cmp
add
adc
jnp
xchg
xor
cltd
stos
mov
sbb
arpl
scas
adc
mov
int
jmp
inc
pusha
xchg
orb
xchg
imul
hlt
shr
aaa
add
aaa
add
cmc
pushf
and
shrb
xorb
cwtl
andb
pop
enter
sbb
cmp
mov
shrb
and
lods
data16
push
enter
mov
test
in
xor
mov
outsb
or
push
and
cmpsl
and
out
push
sbbl
pop
les
cmovb
test
std
cmpsb
lods
call
in
pushf
push
adc
ds
lahf
cwtl
sbb
repz
les
es
lds
out
mov
data16
lret
hlt
in
dec
aad
adc
cmp
mov
add
mov
mov
call
outsl
mov
jl
daa
out
jae
cld
jmp
das
jg
out
jmp
mov
data16
aad
xor
mov
cs
push
adc
add
ds
loop
rcr
xor
in
xor
dec
loope
ret
sbb
mov
dec
adc
mov
inc
cmpsb
cmpsl
int
js
push
aas
cltd
and
mov
and
imul
int
sar
fisubrs
dec
test
xor
mov
jg
das
sbb
jb
jp
cwtl
push
mov
push
or
mov
mov
mov
xchg
fisttps
sahf
pop
lret
cs
icebp
popa
push
int3
mov
adc
mov
push
aam
test
std
scas
xor
pop
call
outsb
lcall
push
push
fwait
ja
hlt
movsb
je
sti
jae
lahf
je
inc
push
add
mov
test
shrb
mov
sub
orl
pop
push
or
cmp
sbb
outsb
imul
mov
jno
and
mov
leave
std
mov
cli
jg
pop
mov
into
leave
add
cmpsl
fsts
sbb
scas
or
push
iret
xchg
fs
sbb
loope
movsb
mov
bnd
cld
std
adc
add
pusha
rclb
lahf
bound
out
or
popa
sarl
jp
mov
fcomp
std
add
add
test
es
add
out
test
test
das
dec
stc
int3
sub
xchg
xchg
xor
sub
mov
adc
sbb
inc
dec
and
push
xor
jg
outsl
cld
out
adc
pop
cli
sub
dec
repz
mov
pusha
repz
jg
scas
sub
cs
jo
pop
lret
jno
inc
adc
cmpsl
fdivr
xchg
push
sub
or
mov
mov
rorb
xchg
bound
add
lret
les
cmp
jnp
dec
and
xchg
add
clc
cmp
repnz
lock
cmp
inc
in
popa
mov
xor
sbb
pop
or
dec
push
dec
pop
repnz
in
sub
cmp
adc
pop
push
cmp
mov
adc
add
roll
sbb
das
loope,pn
pop
jne
rorl
leave
xlat
push
mov
lret
paddsw
and
jecxz
outsb
and
fidivrl
inc
jmp
inc
fwait
inc
xlat
jnp
push
cmp
mov
push
insb
ds
sbb
adc
imulb
aaa
fwait
ds
lret
or
cli
dec
and
push
pop
or
inc
xor
xor
mov
insb
idivl
repnz
push
or
out
xor
mov
adc
int
in
or
rorl
push
ja
jp
stos
lret
xchg
or
xor
sub
mov
icebp
scas
push
sar
dec
pop
ficoml
jo
jo
pop
dec
pop
mov
nop
jb
fidivrs
xor
shlb
ja
mov
sti
cmc
add
leave
orb
rcr
mov
mov
jae
popf
mov
and
xchg
mov
imul
mov
xchg
aam
sbb
cmp
shlb
roll
or
mov
cmpl
shlb
arpl
shlb
mov
pop
ret
mov
xchg
sub
jg
je
cltd
xchg
xchg
inc
adc
popf
sub
cltd
insb
xor
mov
movsl
hlt
sti
and
xor
inc
popa
cmp
movsl
insb
movsb
aas
push
mov
fisubl
mov
push
les
dec
sbb
stos
mov
or
mov
mov
xchg
dec
push
pop
cmp
rcl
rorb
shr
xchg
or
ss
mov
fwait
push
inc
and
mov
add
xorl
pop
xor
mov
push
xchg
dec
fwait
pop
push
mov
js
push
jle
cli
ds
nop
xor
movsl
xchg
xor
mov
stos
imul
jge
gs
pop
mov
fadd
in
xchg
sbb
pop
ss
shrb
adc
push
pop
or
push
jmp
xlat
cmp
cli
fiaddl
xchg
out
jno
jl
lock
adc
rorb
rdtsc
and
xor
adc
add
out
stos
ds
sbb
lds
in
mov
sbb
leave
or
and
xchg
out
mov
xchg
xchg
stc
xor
cli
insb
dec
adc
call
inc
pop
mov
test
dec
out
dec
mov
xchg
int3
cmpsl
data16
push
cli
sub
add
mov
jno
adc
or
push
push
dec
push
mov
iret
mov
adc
inc
sbb
lcall
ja
ljmp
adc
cmpsb
out
pop
add
mov
mov
push
xbegin
pop
lret
push
dec
in
xchg
and
pop
mov
push
icebp
loopne
aam
mov
ret
popf
fimuls
sbb
mov
dec
jns
dec
ds
ljmp
pop
movsb
jae
mov
sahf
dec
push
dec
cli
inc
jno
mov
aas
stos
mov
ret
in
rcrb
mov
leave
repnz
shll
int3
aam
add
shll
stc
popa
xor
cli
sub
xchg
lods
xor
mov
push
or
movsl
cmp
jecxz
stc
dec
mov
jecxz
mov
jmp
mov
fwait
lods
int
data16
imul
xor
mov
mov
outsl
dec
mov
lret
iret
sbb
js
mov
or
sub
test
and
sahf
pop
loop
jno
xchg
es
jb
xor
xchg
adc
add
xor
cmc
sbb
dec
inc
pop
fwait
test
mov
or
cmpsb
shlb
mov
pusha
fiaddl
int3
inc
and
daa
lcall
into
outsl
shl
cld
stos
push
and
daa
and
pushf
add
mov
adc
ficoms
cmp
fcom
jae
mov
loop
aam
loopne
imul
daa
sub
test
data16
push
pop
mov
addr16
sbb
xchg
and
or
hlt
call
push
sbb
lds
xor
popa
cmpsb
and
movsl
push
inc
pop
push
rorl
jne
push
imul
cmc
adc
push
mov
or
scas
xchg
fadds
lret
popf
daa
arpl
int
inc
mov
pop
or
in
sarb
add
xor
dec
addb
int
fs
sub
mov
xor
ljmp
sbbb
faddl
adc
cmp
scas
loop
xchg
das
cmpsb
ds
mov
notl
push
ljmp
or
pop
and
loop
out
adc
ss
push
leave
ds
fwait
dec
leave
inc
sarl
ret
ss
fwait
mov
mov
inc
dec
stc
mov
xchg
aad
sub
test
mov
cltd
push
jp
icebp
aas
test
test
fdivrs
jg
mov
jle
push
lea
mov
daa
pop
add
aaa
pushf
ret
test
mov
mov
add
sbb
mov
or
inc
shlb
sub
test
lcall
xor
mov
dec
push
gs
daa
sub
loop
sarb
les
dec
shrl
test
repz
cmp
ss
je
icebp
dec
cmp
lcall
dec
fs
inc
mov
push
jmp
stos
push
lret
push
add
or
push
pop
out
jne
xchg
mov
push
add
rcl
inc
jno
sub
xchg
inc
inc
fcmovnbe
fisubrs
sub
jle
lret
in
inc
xor
mov
fstps
leave
inc
mov
insb
repz
mov
xchg
or
dec
cwtl
cld
out
inc
xor
add
cmp
jns
and
cli
push
push
adc
fimuls
mov
or
push
enter
cltd
sbb
call
adc
jge
xor
push
into
pop
cltd
and
jne
dec
sbbb
lcall
out
fdivp
fsubr
notb
orb
mov
dec
cmp
fsts
jno
ret
stos
ret
sbb
adc
sbb
call
cmpsl
stos
inc
adc
pop
out
inc
imul
fdivl
out
pop
cmc
pop
popa
cmp
xchg
scas
cmp
inc
fistps
popa
ret
xchg
dec
cmp
out
mov
imul
push
mov
jmp
or
jg
dec
inc
push
add
xor
int3
dec
in
pop
jne
dec
dec
les
add
xor
jle
fs
push
sbb
loop
xchg
or
xchg
push
dec
lds
filds
jbe
dec
lds
dec
ja
xorl
pop
cmp
dec
mov
pop
mov
xchg
or
lods
les
jge
push
cli
jle
lock
int3
in
inc
dec
push
popa
es
push
daa
dec
mov
and
xchg
sub
iret
add
xchg
hlt
and
mov
pop
and
js
xchg
movsl
inc
mov
mov
test
dec
mov
inc
ret
fwait
arpl
and
jl
loop
test
pop
ds
or
or
push
push
pop
mov
and
mov
shrl
in
fdivrs
test
mov
pop
xchg
push
sub
rolb
fwait
jl
out
mov
adc
cmp
xor
repz
scas
sub
inc
push
mov
mov
xchg
cmpsb
xchg
sub
sub
inc
stos
jecxz
mov
jg
cmp
test
rorb
aas
adcb
or
jns
pop
pop
dec
int3
adc
cltd
ret
cltd
ret
popf
pop
cmp
cltd
mov
push
ljmp
test
mov
xor
xchg
mov
adc
ja
enter
stos
jb
frstor
mov
push
dec
int3
sub
ret
idivb
movsb
jnp
repnz
subl
pop
dec
mov
lods
cmp
mov
cmp
lret
mov
pop
jno
dec
xchg
sbb
in
or
cld
cltd
adc
popf
adc
xor
fwait
out
xor
push
mov
lahf
push
sub
loopne
jnp
xor
xchg
dec
xchg
mov
adc
int
dec
sub
mov
dec
shl
dec
cmpb
cld
adc
dec
mov
leave
xor
cltd
lock
imul
cmpl
add
mov
cmp
test
test
cmp
pop
and
cmpb
add
divb
lret
test
mov
outsl
lret
mov
in
sahf
fcmove
sbb
push
add
inc
add
test
add
mov
data16
sbbl
mov
jmp
cmp
aas
dec
popf
pop
out
outsl
xor
nop
inc
pop
and
push
test
mov
pop
sti
or
lcall
cltd
pop
sbb
mov
les
fmull
rcrl
sub
stc
mov
fwait
xlat
shll
in
dec
xchg
mov
cli
pop
mov
dec
clc
dec
out
jge
test
xchg
cmp
iret
mov
adc
aaa
cmp
scas
push
test
xor
ror
dec
sbb
mov
pop
xchg
cs
pop
inc
xchg
and
and
and
lcall
jp
je
fisubl
scas
xchg
push
test
hlt
icebp
fs
mov
cmpb
or
fs
jge
arpl
xor
shrl
popa
rcll
jbe
sbb
fdivrl
pop
testl
int3
cli
lods
xor
and
inc
fists
mov
cmpsl
je
mov
mov
xor
xor
outsl
jbe
and
mov
aaa
push
mov
mov
ss
lods
add
push
inc
fwait
dec
out
jmp
pop
ffree
lea
jmp
mov
addr16
add
or
ljmp
jmp
mov
loope
xchg
in
dec
scas
mov
and
call
test
mov
xlat
mov
incb
enter
sbb
pop
out
fmuls
xchg
cli
insb
dec
lcall
cmpsb
dec
repnz
repnz
adcb
rcrb
test
jle
mov
jo
jo
sbb
dec
andl
push
fsubrs
push
xor
sbb
jae
add
push
call
not
pop
fistl
or
out
out
sub
adc
jecxz
mov
mov
cmp
clc
xchg
and
lcall
arpl
dec
cmp
add
clc
jbe
test
dec
sub
mov
xlat
mov
mov
mov
inc
sbb
mov
sub
sbb
xor
in
cli
daa
jne
mov
scas
sub
fs
jge
enter
push
pop
or
or
sbb
fs
dec
cmp
mov
fdiv
or
sub
dec
sbb
and
cmp
push
icebp
jg
in
not
dec
bound
sbb
js
mov
sub
enter
enter
lods
cmp
sbb
and
aam
dec
sti
das
ljmp
fbstp
cltd
fcoms
arpl
cld
xlat
shr
add
pop
jbe
xor
jmp
fs
sub
jp
pop
ljmp
sahf
push
aas
inc
arpl
xor
movsl
jl
hlt
fwait
imul
xlat
lods
sbb
cs
cmp
jmp
ljmp
push
sbb
pop
add
mov
xor
jae
out
jno
lcall
lds
cmp
and
js
sub
push
sub
pop
in
imul
jmp
adc
pop
pop
ljmp
rclb
jne
xchg
jo
es
pushf
jno
fidivrs
clc
xchg
add
lcall
or
push
pop
aam
jns
inc
sub
movsl
adc
cmpsb
mov
xchg
push
dec
xor
data16
sbb
in
jp
fxch
sub
pop
arpl
nop
jno
fmuls
pop
daa
fwait
aad
insl
push
mov
xchg
pushf
je
icebp
fldt
notl
push
sbb
sti
das
out
clc
dec
mov
mov
jl
lcall
inc
lds
jb
std
stos
sahf
dec
lock
pop
std
sub
scas
jecxz
xchg
xor
out
push
jo
mov
inc
lret
mov
jecxz
inc
les
xor
pushf
cmp
out
xchg
mov
jae
sarl
ror
sub
dec
addl
sti
jb
xor
xchg
gs
pop
aam
loopne
xchg
sbb
enter
aaa
xor
jnp
mov
dec
sbb
inc
lds
push
pop
add
adc
inc
xor
out
dec
aas
jae
push
fwait
in
mov
push
sahf
or
outsb
mov
fadds
stos
aam
jae
repnz
imul
test
or
daa
cmp
jne
dec
lcall
clc
ss
pusha
mov
adc
mov
test
in
sbb
outsb
adc
push
js
mov
stc
imul
es
sbb
cmpsb
popa
call
repnz
cmpsl
cwtl
ljmp
cmp
push
xchg
cs
rolb
fs
ret
mov
sbb
pop
orl
ret
jno
int3
movsl
mov
test
mov
fdivp
or
jns
test
adc
rcrb
mov
lock
mov
imul
fcoml
call
lret
scas
lahf
enter
xchg
pop
mov
mov
aam
xlat
data16
lds
inc
push
mov
push
ret
xchg
mov
mov
push
aas
xchg
fs
sub
loop
std
aas
dec
and
jge
out
gs
sub
xchg
into
repnz
fdivl
ret
xlat
xor
faddl
or
call
sub
mov
call
add
jno
and
popa
test
cmp
cwtl
lcall
mov
dec
leave
in
ss
ss
ss
cmp
leave
dec
fcoml
shll
roll
dec
pop
stc
in
sbb
into
pop
aam
jge
dec
or
and
cmp
xchg
inc
enter
xchg
xor
les
pusha
aaa
mov
sbb
lcall
or
sub
out
mov
push
mov
leave
cwtl
lret
mov
cs
dec
lcall
fists
push
mov
fmull
and
mov
mov
dec
jns
dec
push
push
lds
sti
pop
and
jp
push
iret
push
cmp
pop
dec
je
pop
leave
mov
cmp
icebp
dec
mov
mov
xorb
cltd
insl
stos
cli
push
jae
adc
cs
iret
movsl
ret
js
xor
cmp
popf
mov
sbb
cmp
outsb
andl
mov
cmp
movsb
loopne
push
and
sahf
pop
dec
ljmp
xchg
in
sbb
push
ljmp
adc
pop
mov
orb
jne
idiv
add
mov
inc
dec
push
es
movsl
ja
icebp
add
mov
repz
cmp
jb
sti
ja
push
test
push
xchg
mov
inc
in
mov
lea
jecxz
imul
rol
inc
push
cli
inc
xor
jae
jle
dec
cmpsl
adc
sarb
xor
xchg
inc
mov
pop
push
add
add
and
xchg
add
fildl
data16
mov
add
jne
andb
and
or
rcl
sbb
jno
orb
stc
push
cmp
loop
mov
loopne
and
adc
adc
jno
inc
jp
xor
sub
pop
sub
shlb
mov
ret
fadd
arpl
loope
xchg
cmp
push
jb
and
enter
pop
xor
push
xor
xorb
cmc
lds
xchg
cmp
sbb
dec
adc
idivb
stos
fdivrl
mov
rorl
ds
jle
lds
jecxz
cmp
popf
xchg
daa
jmp
xor
mov
aas
mov
cmp
test
loop
xor
movsb
popa
jl
cmp
cmp
cmp
sub
ret
xchg
pop
mov
pop
cwtl
jno
aad
xor
mov
push
or
jb
in
aam
decl
cmp
stos
xor
call
test
stos
inc
sti
fs
ret
push
push
out
movsb
addr16
ret
out
push
cltd
inc
mov
movsb
pop
dec
cmp
sub
jnp
cwtl
jne
scas
adc
mov
ret
cmc
push
ficomps
fdivl
or
inc
add
dec
xchg
clc
pop
pop
cmp
cmp
xchg
pop
mov
in
std
repz
pop
push
jbe
jne
js
fisubrl
xchg
sub
push
sub
sti
rorb
cwtl
int3
mov
pop
ds
sti
sub
pop
pop
adc
ljmp
ds
sbb
lahf
loop
jb
and
ss
inc
shl
pop
stos
lcall
and
mov
sbb
jae
cmpsl
pushf
shll
cmpsl
xor
xor
xchg
xlat
fmuls
cmp
dec
xchg
jnp
out
int3
dec
lods
xor
test
mov
arpl
cli
pushl
or
adc
jo
fdivrs
and
pop
pop
dec
jne
ss
out
loope
mull
mov
mull
pop
pusha
jnp
fstps
out
xchg
ja
lret
out
sarl
adcl
clc
inc
mov
pop
pop
aas
mov
mov
push
testl
push
xor
cmpsl
dec
xchg
leave
out
arpl
mov
nop
lea
cltd
adc
push
xchg
outsl
faddp
daa
lods
pop
fwait
xchg
bound
sti
movsb
stos
and
jne
or
jge
mov
popa
hlt
and
pusha
mov
stos
outsb
test
xlat
push
test
out
aas
ds
jno
push
xchg
xchg
push
sub
xchg
sub
imul
cmp
imul
mov
jb
lea
int
ljmp
mov
jmp
sbb
xchg
arpl
ret
ljmp
aad
pop
pop
addr16
xchg
shlb
or
mov
movsl
sub
popf
or
pop
add
out
leave
out
rorb
div
popa
sub
loope
mov
push
push
movsl
fldt
mov
inc
cmp
mov
dec
cltd
ss
xor
loopne
sti
add
pop
aas
enter
dec
arpl
shll
jo
mov
mov
xor
psubw
cmc
xor
pop
cmpsb
xchg
and
dec
fsubrl
mov
xor
fcoms
cmp
int3
add
jp
pop
add
call
cld
mov
nop
pop
and
add
sbbb
lcall
xor
inc
stc
add
mov
out
fwait
mov
dec
cli
imul
mov
sar
jbe
dec
lret
shll
mov
aad
aaa
sbb
push
or
rorl
cltd
jp
je
rolb
mov
pusha
ror
jo
ds
pop
outsl
out
and
cs
mov
dec
outsb
sub
into
data16
cmp
sub
je
sbbl
inc
ret
das
cltd
dec
popf
mov
jecxz
xlat
jb
xchg
dec
sbb
lods
int
fbstp
jae
ss
ss
iret
mov
sub
jecxz
cmp
jb
fs
mov
push
mov
out
cmp
xchg
movsb
lret
int3
sbb
cmc
test
sarl
xchg
insl
xchg
out
xor
xchg
push
mov
test
lret
jns
push
push
stos
shlb
jnp
mov
or
mov
mov
mov
out
sbb
jb
das
in
xchg
addr16
mov
stos
mov
or
adc
loop
jne
jns
mov
fstps
sub
mov
or
js
pushw
cmp
inc
adc
cmpsl
ljmp
jns
gs
fcompl
ret
push
cmpsb
pop
cmp
or
ja
lock
outsl
repnz
outsl
mov
sbb
adc
inc
fdivs
dec
mov
adc
pop
push
rol
ljmp
loopne
jle
out
lock
clc
push
pop
dec
test
xchg
out
repz
lahf
push
xor
ficompl
stos
movsl
inc
ljmp
push
and
scas
imul
aam
dec
pushf
push
out
clc
rcll
or
addr16
test
mov
jno
xor
add
orb
icebp
rolb
out
xor
or
xchg
adc
sub
mov
adc
push
test
dec
xchg
aaa
dec
mov
adc
aad
jp
mov
cwtl
jnp
and
hlt
lcall
mov
shl
lcall
adc
pop
mov
xor
push
mov
and
mov
jle
or
xchg
in
lcall
arpl
mov
cmpsb
call
push
ja
jae
leave
outsb
push
adc
fldenv
aam
mov
in
test
test
cltd
pushf
xor
rorl
pop
or
insl
jb
mov
into
dec
rclb
mov
mov
jno
test
push
dec
out
mov
xor
xor
daa
add
fwait
mov
popa
dec
sti
or
cmp
pop
and
into
scas
adc
cld
add
inc
sbb
mov
pusha
or
mov
lahf
inc
mov
jnp
add
imulb
repnz
pop
ss
push
sbbb
scas
pop
int
jmp
daa
add
or
cmp
es
add
dec
adc
push
cmp
addr16
dec
add
mov
fsqrt
mov
into
jp
pop
dec
mov
mov
imul
xchg
fstps
dec
insl
cwtl
xchg
stc
loope
mov
mov
push
mov
loopne
dec
jae
push
and
push
ds
addr16
and
scas
mov
xchg
hlt
aas
jg
push
push
jb
gs
fmull
xchg
dec
and
mov
in
pop
ja
call
aaa
mov
mov
aad
and
mov
adc
lods
fdiv
into
les
movsl
push
jle
stc
cmc
sub
add
icebp
dec
test
jbe
xor
or
lods
xchg
or
cmp
daa
or
pushf
inc
sbb
mov
xchg
xchg
or
jno
jo
leave
addb
in
jmp
clc
xor
aaa
addr16
adc
movsb
fdivrl
dec
in
fwait
xchg
push
pushf
in
call
sub
int3
pushf
mov
addl
int3
inc
lret
iret
xchg
push
cmpsb
mov
mov
ud0
insb
xor
lds
xor
inc
pop
test
xor
adc
lahf
into
lock
xchg
imul
movsl
push
jno
inc
sbb
xor
imul
mov
dec
adc
aas
stc
inc
lds
xlat
stos
mov
in
dec
mov
jbe
inc
mov
les
imul
enter
enterw
jmp
leave
or
test
leave
ficoml
stos
jg
adc
imul
popf
mov
add
gs
xorl
xor
dec
xchg
and
test
inc
inc
adc
xor
fisttpll
cmp
xor
cli
outsl
sub
jg
push
test
fnstcw
mov
stos
out
ds
mov
sub
jl
pop
and
sbb
jbe
ja
sbbl
adc
push
jno
and
sahf
push
adc
mov
xchg
popf
push
cmpsb
cmpsl
test
mov
test
cltd
pop
les
mov
lret
lods
js
inc
xchg
scas
mov
fs
shll
sbb
enter
jne
lcall
sub
or
fsubs
jo
mov
repz
adc
loope
je
xor
stos
xchg
mov
and
push
sbb
shrb
and
movsb
xchg
das
sbb
and
jl
decl
pop
jmp
and
mov
pop
pop
movsb
mov
dec
arpl
mov
mov
mov
adc
inc
mov
push
cli
xchg
lock
lods
roll
and
inc
sbb
add
in
daa
pop
clc
and
inc
test
lahf
xchg
pusha
jb
push
es
std
out
xchg
xchg
aad
ret
xor
shl
popa
repnz
jg
es
ficoms
cmp
and
and
add
loopne
fs
mov
out
mov
in
pop
fisttpll
loope
int3
push
xlat
and
aad
adc
ficompl
data16
push
aam
lea
scas
sbb
sbb
aam
pop
sub
lret
inc
jb
sub
das
xor
lea
sbb
pop
inc
mov
out
push
or
xchg
sbb
daa
sti
aam
mov
out
nopl
arpl
enter
add
mov
mov
lret
and
dec
mov
sub
andl
test
xor
dec
rcll
inc
cltd
cmpsl
shl
mov
xor
jnp
push
jnp
xor
ljmp
jne
repz
inc
push
in
outsb
sub
push
ficompl
loope
pop
cmp
sub
daa
jecxz
sub
mov
lock
mov
loop
neg
lods
icebp
mov
test
jmp
mov
xor
pop
cmp
dec
cmpsl
dec
jg
scas
jp
dec
dec
mov
add
ret
xchg
xchg
mov
sbb
aad
or
xchg
int3
je
xor
ret
movsb
mov
aas
fmul
scas
scas
push
pop
fisubrl
stos
xchg
lods
int
mov
push
pushf
pop
xchg
jo
cltd
pop
in
aaa
ljmp
mov
ret
pushf
sti
mov
lret
and
xor
mov
pop
out
dec
push
adc
fisttpll
inc
fadds
jne
shll
sbb
pop
roll
and
push
adc
nop
adc
repz
or
inc
and
rcll
test
jp
inc
popf
or
decl
out
pop
rorb
pusha
dec
fsubrp
dec
mov
test
push
test
cltd
inc
js
stc
push
xor
push
movsb
xchg
dec
mov
pop
mov
fnstenv
outsl
or
repnz
fisubrs
lds
or
or
nop
out
pop
push
push
or
add
pop
das
pop
roll
mov
insl
dec
xchg
insl
cs
sbb
xchg
iret
sbb
mov
lea
fidivs
addr16
pop
fdivp
enter
sub
inc
aad
push
adc
cmpl
pop
add
jns
sbb
ret
jne
or
repnz
jo
inc
push
xlat
dec
or
daa
or
imul
adc
and
vcmpss
inc
lahf
jne
push
push
mov
mov
mov
sbb
data16
leave
hlt
xchg
sub
xor
pop
add
bound
cmp
lea
arpl
cmp
rep
sub
mov
xor
cmpsl
cmp
stos
fst
clc
and
jg
js
decl
call
push
ss
mov
imull
xchg
andb
jmp
xchg
inc
in
adc
adc
jp
int
jo
mov
cltd
sbb
jl
add
lret
pop
and
jp
popa
jg
js
loope
jbe
ja
mov
cmc
pop
mov
std
inc
hlt
fucomip
scas
ljmp
lahf
bound
mov
inc
jno
ds
les
mov
in
pop
aaa
mov
shld
push
dec
mov
sub
mov
pop
dec
pop
push
or
cmp
mov
jns,pn
ret
mov
mov
ja
js,pn
lcall
clc
sbb
pusha
jge
repnz
jmp
pop
cwtl
dec
movsb
jne
daa
out
jle
scas
movsl
pop
fidivrs
jne
mov
in
call
jae
sbb
add
in
add
jbe
mov
add
ret
out
push
shlb
jne
mov
sqrtps
sbb
repnz
cmpsb
mov
outsb
pop
pop
scas
sub
push
lahf
shlb
adc
out
aam
test
in
je
adc
testb
mov
mov
adc
jmp
in
dec
scas
mov
fdiv
in
mov
dec
mov
ljmp
cmc
stos
dec
mov
jmp
pop
mov
and
and
lahf
xor
in
lret
mov
mov
int3
xor
inc
fisttpl
push
jge
or
xchg
fsubr
scas
xchg
and
decl
imul
fwait
scas
dec
mov
mov
mov
add
test
adc
jecxz
in
lods
xchg
fcompl
push
jle
scas
aad
sbb
jae
cmp
call
cld
cmpsb
dec
dec
dec
insl
xchg
js
adc
scas
dec
in
out
mov
jmp
sahf
xor
ret
cmp
fmuls
sbb
cmpsl
sub
pop
pushf
push
in
popf
sub
jl
dec
lret
daa
leave
test
je
gs
or
mov
mov
mov
insl
and
rorl
lcall
push
mov
push
hlt
cld
lock
pop
out
test
pop
mov
or
into
jle
ret
stos
fdivl
dec
ljmp
add
ljmp
cmp
mov
clc
dec
popa
xor
pop
mov
test
mov
testl
and
rcrl
sbb
mov
ja
sahf
fadds
pop
pop
pusha
insl
jp
cmp
rcrb
add
mov
outsl
sub
loope
hlt
pop
ficoms
mov
inc
pop
test
cmp
adc
jge
icebp
out
adc
push
testl
icebp
sbb
rcrl
jecxz
pop
inc
decl
push
xor
dec
pop
loopne
mov
adc
cli
data16
jl
mov
push
cmpsl
fxch
mov
pop
cmp
addr16
mov
push
ds
xchg
jb
push
mov
push
dec
jbe
mov
repnz
mov
lock
cmpsl
xor
outsl
rolb
mov
fildl
rorl
int
movsb
mov
imul
push
cltd
sbb
fucomip
fsubrl
dec
fcomps
loop
mov
push
jp
jbe
out
mov
ljmp
push
lds
mov
pop
xchg
xor
mov
jbe
in
imul
inc
scas
jl
pop
fwait
iret
in
xchg
mov
int
cmpsb
push
xchg
mov
mov
pop
mov
mov
pushl
jae
xacquire
shlb
loope
mov
int3
cmp
jmp
ret
mov
xor
mov
test
mov
fdivp
scas
inc
push
push
jmp
and
lret
test
and
push
data16
int
xor
mov
mov
or
adc
lret
jae
or
out
pop
popf
xor
imul
lret
js
lods
lods
cli
pop
xchg
cmpsl
outsl
in
pop
jnp
sahf
xchg
mov
subl
dec
jo
clc
sbb
gs
aad
lret
adc
cltd
gs
push
mov
jbe
mov
xchg
gs
out
mov
pop
shll
sbb
jle
or
add
mov
std
popf
out
mov
lods
cltd
mov
ret
mov
xor
jns
cmc
shlb
hlt
sub
sub
scas
and
incl
gs
imul
xlat
or
leave
cmp
outsl
sti
xchg
movsb
mov
adc
lods
xchg
out
iret
xchg
stos
test
cli
mov
frstor
mov
je
sti
mov
xor
push
outsl
inc
sti
push
mov
ja
sbb
call
xor
pop
mov
stc
leave
xchg
xchg
mov
xchg
cmc
inc
sub
cmp
lsl
cmp
js
and
add
push
out
and
adc
test
dec
cmp
push
fistpll
adc
lock
jg
jecxz
movsb
mov
enter
sahf
das
cmpb
or
mov
loop
pusha
and
jno
ret
clc
mov
mov
dec
pop
cmpl
test
xor
icebp
icebp
push
mov
leave
sub
dec
data16
loopne
iret
lods
mov
popa
stos
mov
cs
idivl
loopne
orb
movsb
ret
es
inc
jns
andl
in
ret
dec
dec
pop
cmp
mov
cmp
mov
xor
jp
mov
jbe
hlt
jb
loopne
test
fs
ficoml
jmp
mov
lds
mov
jne
cli
bound
js
xor
push
insl
lods
cmp
sub
push
cmp
loop
rorb
frstor
push
xor
loop
and
arpl
push
loop
dec
jl
dec
jecxz
mov
xchg
xor
xchg
shr
popa
jmp
adc
xor
test
pop
rsm
pop
movsb
sbb
inc
add
iret
mov
fisubrl
and
inc
pop
out
nop
mov
ret
jo
jae
les
sub
sbb
mov
imul
jns
pop
pop
pop
loop
fs
out
inc
pop
sub
and
inc
call
xlat
cmpsl
not
sti
sbb
popf
mov
outsb
mov
fstpt
iret
cmp
dec
fwait
int3
cmp
adc
bound
call
add
loopne
mov
test
push
cltd
imul
fisubrl
loope
iret
cwtl
subb
mov
xlat
jbe
xor
inc
int3
add
dec
push
incb
pop
ljmp
push
cs
inc
push
shlb
scas
add
jns
and
add
in
sbb
rclb
int
xor
dec
cmc
ror
push
inc
cs
in
fwait
pusha
mov
and
testb
adc
sbb
cmc
mov
push
cli
in
negb
insb
cmp
lea
ret
call
inc
or
enter
push
gs
clc
mov
imul
call
leave
xchg
je
shl
xor
or
ror
cwtl
push
arpl
shll
pop
inc
ja
xchg
jl
daa
mov
mov
je
inc
mov
fnstenv
mov
xchg
sub
fdiv
or
xor
cmp
xlat
fisttpl
mov
ljmp
je
sub
lea
test
mov
adc
jecxz
sub
out
popf
pop
push
pop
xor
pop
jno
cmp
jge
hlt
outsb
xchg
push
cmpsl
in
fcmovnbe
cwtl
ja
cmp
fsubrl
into
out
ds
in
into
dec
addl
add
xlat
push
cli
ret
popf
jge
dec
mov
sub
cmc
daa
add
pushl
lock
adc
sti
bound
and
or
pop
inc
loop
pop
clc
or
xchg
call
lock
stos
jne
cmc
rcl
imul
dec
xchg
pop
xor
cmp
jne
push
aad
aad
sub
xchg
popf
mov
fs
sahf
mov
int
mov
repz
and
repz
push
addr16
call
test
shlb
daa
xor
ret
mov
ljmp
push
pop
vdivps
mov
and
iret
and
int3
dec
js
jp
jmp
iret
cmp
cmpl
jmp
and
jl
dec
push
sub
xor
mov
inc
adc
adc
ret
pop
adc
outsb
jle
dec
out
mov
xchg
sbb
bound
icebp
pusha
jl
mov
ret
and
sub
addr16
cmpsl
ret
and
js
jp
sbb
sub
pop
mov
push
lds
mov
xlat
out
out
mov
scas
rcll
xor
lret
adc
shrb
mov
push
jnp
jle
add
xchg
xor
jl
leave
or
mov
mov
mov
sbb
jp
mov
imul
decb
and
std
out
jo
hlt
out
das
lahf
loope
loopne
add
out
ja
and
filds
inc
fs
test
rolb
insl
shr
jne
xor
enter
jbe
sbb
imul
mov
daa
rcrb
sbb
ljmp
jne
stos
cmp
mov
and
or
push
pushf
adc
xchg
test
movsb
jae
xorl
cmpsb
inc
jne
aam
xchg
cmp
out
nop
lods
aam
cmpsl
addr16
xor
stc
fwait
xchg
aam
or
sarl
in
pop
mov
mov
jl
sbb
mov
out
jns
outsl
aad
pop
xchg
shlb
sub
stc
jbe
mul
cli
jno
lods
push
push
add
mov
xchg
ja,pn
stos
push
pop
ja
sti
mov
pop
xor
ret
sbb
jbe
clc
cmp
cli
rorb
shrb
fldl
outsb
shl
dec
adc
sbb
jb
insl
lcall
push
dec
ja
aaa
outsb
dec
mov
cmp
mov
sub
out
mov
mov
shlb
ret
push
imul
rclb
push
icebp
cmp
mov
add
icebp
mov
adc
ja
cwtl
addl
ret
into
xorb
pusha
sbb
or
xchg
or
xchg
jg
data16
or
sub
fwait
and
les
sbb
test
adc
mov
mov
jbe
jne
push
arpl
push
sub
loope
pop
push
sbb
cmc
out
inc
mov
nop
mov
enter
inc
pop
dec
mov
jb
xor
mov
xor
cltd
mov
fdivl
fisubl
sbb
pop
roll
inc
lret
push
dec
aam
test
cmpsb
adc
stos
jne
imul
push
push
mov
mov
dec
in
in
and
mov
leave
dec
mov
sbb
pop
sbb
ja
movsl
out
sub
mov
outsb
inc
pop
daa
leave
inc
out
pushf
fs
xor
int3
lcall
cmc
mov
cwtl
imul
fbld
es
mov
aad
shll
dec
push
aaa
xchg
sbb
add
stc
ficoml
mov
dec
cmp
mov
jb
xor
repnz
adc
cmp
sahf
ja
cmpb
iret
mov
out
cmpsl
dec
mov
sub
sbb
hlt
cmp
lods
int
shr
mov
pop
sti
sub
aaa
out
xor
repnz
cmp
sbb
adc
or
fsubr
fldcw
inc
fcmovnb
push
push
stos
adc
test
cmpsb
and
inc
add
and
dec
int3
mov
lock
sbb
subl
pop
sub
mov
xor
call
lret
mov
sbb
sbb
or
orb
xor
mov
fnstenv
gs
push
adcl
loop
mov
mov
mov
push
pop
cmp
test
add
leave
sbb
inc
dec
addr16
test
out
pusha
icebp
jmp
aad
pop
icebp
inc
pop
lods
push
int3
je
xchg
test
cmp
xor
mov
xor
mov
cmp
push
sti
jne
push
into
jl
jl
or
push
imul
test
add
lahf
pop
lret
xchg
mov
stos
jb
js
pop
cmp
pusha
cmpb
pop
or
mov
jmp
aam
cwtl
mov
aaa
xchg
hlt
repz
stc
adc
jl
jle
cmpsb
lahf
iret
addr16
sub
jl
jle
or
fsubrl
push
cltd
out
inc
mov
mov
loop
fbld
cmc
lahf
out
mov
aaa
aas
gs
aad
and
xchg
pop
imul
fistps
out
add
mov
add
add
dec
fsts
add
mov
mov
jns
fld
xchg
cmp
fstpt
sbb
cmp
sub
leave
outsb
outsl
int3
in
int
jge
push
fidivl
cmovne
push
mov
data16
cld
cmp
dec
cmpb
dec
clc
xlat
or
mov
stos
and
fcmovne
xor
cmc
xlat
daa
call
jl
and
and
dec
insl
inc
mov
add
mov
shll
das
lock
mov
loop
push
out
pop
divb
push
fldt
sub
sbb
jle
out
hlt
cld
pop
mov
sahf
fistpl
pop
fstl
in
mov
sub
mov
and
loop
push
and
push
sub
ret
add
pop
dec
sub
xorb
add
sbb
mov
ljmp
aam
call
inc
mov
inc
jb
add
sbb
jle
call
pop
push
out
push
pushf
jnp
rcl
mov
aas
xchg
dec
decb
sub
add
gs
test
push
std
imul
mov
mov
jl
pop
fsubrs
xor
sub
sub
andl
or
aas
sub
sbb
cmp
sahf
and
mov
popa
jmp
mov
es
jmp
hlt
les
and
fs
leave
paddq
fbld
fchs
or
dec
inc
push
pop
ret
pusha
bound
cmp
sahf
mov
out
rclb
rcll
sub
lret
add
adc
into
in
mov
sub
jmp
push
int
mov
lods
hlt
out
jae
pop
in
cld
mov
lock
add
neg
mov
cmpl
sahf
dec
ss
xor
add
sti
push
in
mov
sbb
inc
add
ret
xorb
call
cvttps2pi
call
mov
mov
xchg
push
out
pop
xor
aas
jnp
call
scas
cmc
jle
daa
mov
xor
push
insb
mov
or
sub
js
jg
fiaddl
push
sbb
in
dec
lret
jmp
jns
push
mov
int3
stos
push
sbb
cmc
idivb
insl
or
jns
xchg
sbb
adc
sub
psubusb
mov
dec
movsb
lods
jg
cld
fcoms
mov
int3
cmp
insl
jle
jmp
mov
sbb
orl
jl
push
outsl
into
sbb
jp
pop
inc
mov
mov
sar
ljmp
mov
or
dec
bound
xchg
xor
outsl
shlb
dec
cwtl
incb
mov
pop
sub
jmp
addr16
outsl
ret
and
das
dec
dec
fdivr
stos
xor
ja
mov
iret
adc
or
mov
outsb
test
imul
ljmp
xlat
push
inc
add
pop
push
cld
cli
push
cmp
stc
jle
sbbb
xor
or
lcall
xchg
and
fstpt
sar
ss
sahf
mov
and
dec
jne
mov
andb
std
aaa
js
fs
or
out
jns
or
push
mov
enter
xor
movsl
sarl
inc
out
cmpsl
add
and
dec
sub
pusha
movsb
cmp
sub
repnz
mov
xchg
mov
xor
push
enter
add
sarb
cmpsl
stos
call
cmp
pop
sbb
pop
in
rcrl
pop
dec
cmpsl
jae
sti
test
add
pop
lret
pop
out
shll
mov
or
xchg
or
cmp
xchg
cmp
pop
call
rcrb
xlat
jno
push
push
xor
in
xor
in
xchg
out
movsb
aam
fcomi
fcomps
sbb
sarl
test
cmp
aas
mov
mov
xor
mov
xor
int
push
push
icebp
push
push
fiaddl
fistl
daa
outsl
lods
aaa
nop
js
sti
push
add
fcoml
scas
cltd
xchg
xlat
inc
push
mov
mov
out
mov
push
lret
scas
repz
xor
mov
or
dec
cmpsb
xlat
nop
arpl
pop
cmp
pop
push
dec
in
dec
sub
dec
cmc
jle
sbb
lods
movsl
stc
enter
repz
shll
lds
mov
sbb
push
or
mov
xor
xchg
shrb
or
and
mov
mul
jge
or
jae
lds
xchg
mov
fmuls
hlt
or
push
mov
cmpl
or
xchg
sub
or
cmp
and
mov
mov
jle
mov
cmpsl
mov
pop
pop
xor
cmp
ds
xor
repz
push
imul
mov
cwtl
or
xchg
pop
nop
iret
sub
std
mov
mov
fcomps
cmp
mov
cmp
insl
pop
inc
sti
hlt
mov
out
push
repnz
lods
mov
loop
pop
dec
test
cmp
jno
xchg
mov
iret
push
fidivrs
lods
aas
mov
std
std
sub
cli
daa
push
mov
lret
sahf
cltd
mov
jmp
rcrb
mov
inc
cmp
repnz
testl
lock
jp
cwtl
mov
xchg
pop
pop
mov
clc
call
xchg
fdivp
push
push
aad
push
jno
add
pop
js
ja
cmp
inc
pusha
dec
movsb
lock
repz
outsl
add
mov
ret
inc
mov
push
push
mov
push
jno
into
xor
inc
fists
dec
jne
jae
sub
mov
outsl
cld
das
or
je
cmp
push
ljmp
fsubrs
xchg
leave
daa
loopne
mov
xchg
cld
push
stos
fbstp
and
fsubrl
mov
xchg
jae
jg
in
xor
pop
xor
into
aad
movsl
inc
dec
pushw
dec
lcall
mov
dec
das
aad
jae
jnp
nop
sub
addr16
mov
enter
cmp
icebp
xchg
sbb
insb
cld
in
mov
jg
stos
jg
xchg
xchg
lea
repz
xor
push
iret
ja
loopne
dec
rcrl
out
xlat
data16
cmpsb
cmpsl
insb
jecxz
movsl
fcomp
jne
pop
dec
shll
mov
fmuls
repz
push
inc
sti
insl
add
scas
push
jp
dec
mov
cmpsl
cmpsl
loope
xor
sbb
imul
xlat
arpl
jg
mov
adc
call
std
sub
dec
sbb
push
iret
iret
loop
ror
dec
lcall
mov
xor
lods
idivl
ss
adc
lock
mov
js
xor
int3
inc
xchg
mov
int
out
inc
push
fsubrs
hlt
mov
je
sbb
in
call
cmpsl
xchg
shll
mov
bound
adc
andl
dec
adc
sub
add
sub
stos
lret
outsb
mov
ljmp
jnp
inc
cmp
or
scas
adc
mov
incb
mov
push
daa
bound
enter
imul
xchg
sbb
mov
out
bound
aad
or
jle
cmp
in
repnz
mov
sub
scas
sub
push
sub
push
fildll
arpl
and
mov
outsb
mov
imul
lock
pop
push
adc
mov
ds
mov
adc
mov
shrb
mov
in
pop
aad
push
iret
pusha
loopne
cmpb
das
xchg
sbb
callw
mov
outsb
mov
lret
in
iret
out
ja
and
sub
in
and
adc
jbe
das
mov
cmpsl
scas
mov
mov
cmp
push
popl
rcrl
or
fistps
std
jecxz
or
sbb
sbb
xor
cltd
xor
xchg
popa
bound
bound
cltd
or
xor
adc
bound
mov
mov
in
lock
jmp
cmpsl
push
cmpsb
adc
jmp
dec
cmp
dec
roll
call
call
mov
pop
pop
int
mov
mov
mov
push
subb
mov
outsl
shll
xchg
arpl
xchg
in
nop
aaa
mov
cmp
pop
push
pop
inc
int3
in
aam
cmp
jae
enter
or
sbb
xor
mov
jp
daa
and
push
pusha
std
adc
and
sahf
pop
loopne
xor
mov
ljmp
test
or
clc
mov
sub
fidivl
mov
dec
sarl
mov
std
add
enter
sub
aas
jge
fwait
mov
out
cmp
inc
fbld
mov
cmc
and
aas
ja
cmpsl
add
std
push
shlb
cli
sarl
insb
cmp
sti
cmp
adc
mov
outsb
mov
jno
add
pop
iret
pop
pop
xchg
mov
ss
testl
test
cmpsl
rclb
push
mov
repnz
dec
jl
fsubrs
add
sbb
jae
aad
subb
sbb
leave
flds
pop
insl
jbe
add
push
iret
fsubs
mov
mov
in
and
es
pop
stos
mov
mov
cltd
cmovne
sub
fcoms
push
aas
sub
and
leave
stos
imul
ja
rclb
jg
sub
inc
fwait
mov
cmp
add
das
sub
adc
mov
inc
push
loopne
mov
je
mov
jbe
ret
dec
sbb
xchg
ds
stos
hlt
in
jb
stos
mov
rorl
fwait
out
rolb
jmp
out
in
das
stos
jns
lods
add
sbb
clc
mov
aam
aaa
out
adc
lcall
or
add
push
and
xchg
xlat
leave
mov
or
inc
stc
add
pop
sahf
insb
adc
inc
or
sti
push
adc
stos
out
xor
std
pop
outsl
xor
lods
out
cltd
sbb
sbb
push
mov
adc
cld
gs
mov
and
popa
imul
push
cmc
mov
mov
fwait
decb
sbb
jno
push
fsts
dec
and
lret
rclb
punpckhbw
or
sub
sub
xchg
in
and
sub
je
popf
push
popa
mov
and
into
mov
jno
fs
fisubrs
std
out
cmp
orb
shl
movsb
inc
mov
pop
loope
mov
mov
mov
popa
sarb
cwtl
add
xchg
cmp
jo
mov
push
call
fwait
out
xchg
test
jg
jp
pop
test
mov
jg
adc
inc
iret
clc
sub
add
data16
aaa
mov
fbld
bound
pop
cmp
and
xchg
sub
fstps
mov
stc
mov
in
or
sbb
push
mov
jp
stos
xchg
mov
int
xor
out
push
mov
xchg
mov
je
in
cmp
mov
ljmp
jp
and
lcall
mov
sub
insb
loope
jns
iret
je
out
aad
nop
outsb
scas
jo
neg
js
sti
sarl
xchg
lret
imul
loop
hlt
mov
ja
xchg
lock
mov
fcoml
cs
mov
pop
push
jns
shl
lahf
mov
and
inc
xor
clc
int3
in
int
mov
test
sub
xlat
aad
or
cmpsl
out
adc
cmc
hlt
pop
mov
inc
fisubs
popf
fs
add
add
jbe
test
out
imul
outsb
shll
mov
cltd
mov
data16
dec
scas
and
sub
inc
pop
inc
dec
ljmp
addr16
adc
dec
pop
scas
lock
fwait
adc
mov
ja
sti
std
sub
jle
imul
loope
adc
push
jle
jno
aas
ret
xchg
enter
aaa
sti
cmpsl
cli
adc
int3
daa
mov
xor
ja
jle
xchg
ss
ja
fdivrl
mov
add
adc
push
xor
cwtl
or
std
je
pop
enter
cmp
pop
mov
cmpsl
aam
inc
sub
enter
rclb
push
dec
mov
jecxz
ret
sbb
aaa
push
cld
shrl
ja
dec
sub
sub
ret
mov
xor
sub
std
add
mov
xchg
dec
cmpsb
push
jae
in
icebp
fwait
dec
imul
hlt
add
or
imulb
mov
sldt
jne
cmp
push
jmp
push
fistl
js
aaa
xor
jecxz
add
pop
pop
dec
push
pop
enter
or
pop
outsl
and
divl
fld
sub
and
sbb
faddl
pop
pop
std
icebp
pop
ljmp
lods
pop
xchg
pop
fwait
aam
add
addl
push
pop
pusha
xor
test
sub
lea
aas
or
adc
push
repz
data16
sbb
test
mov
mov
mov
dec
repz
push
adc
mov
pop
fnstenv
rcr
or
std
mov
push
xchg
inc
pushf
fsubrl
mov
std
mov
stos
xchg
orl
mov
jle
jg
out
cmp
push
pop
dec
mov
jo
gs
sub
or
mov
mov
pusha
jge
xor
shll
ret
add
ret
mov
dec
imul
ret
icebp
push
pusha
imul
or
or
lahf
cmpb
and
imul
lds
popf
or
outsb
and
test
inc
xor
fs
adc
xor
jb
mov
cmp
xchg
rcr
mov
mov
add
ret
fwait
loop
pushf
jmp
mov
add
daa
sub
xchg
fisttpl
jae
mov
out
push
sub
mov
outsl
mov
mov
and
dec
add
shll
adc
loopew
pop
lods
dec
and
andl
xchg
jmp
repz
dec
fisubrs
xor
and
hlt
or
xor
jp
push
hlt
push
ficoml
stc
adc
mov
xchg
shlb
imul
fidivl
push
adc
aas
fisttpl
or
call
cmp
daa
pop
movsb
push
out
cld
stos
push
call
jg
xchg
mov
cmp
insb
inc
sub
or
fs
cmp
cmc
loope
lods
stos
lods
inc
push
sti
jp
mov
les
pop
incb
cmp
out
jns
pop
push
cmc
test
repnz
push
aas
les
sub
dec
leave
rcr
mov
xor
shrl
pop
stos
pop
fwait
jnp
ja
mov
lret
inc
rolb
mov
cs
push
insl
cmp
mov
cmpsb
arpl
cmp
mov
sub
scas
mov
stc
jne
aaa
sbb
and
ljmp
rcll
dec
icebp
cmp
sub
lods
shl
cmpsl
cli
bound
mov
out
add
add
xor
add
xchg
daa
fcomps
lds
mov
mov
adc
mov
mov
int
or
imul
cmp
fimull
int
xchg
test
adc
imul
pop
sbb
jno
xor
pop
pop
pop
push
and
fidivl
sub
sub
mov
pop
or
cmc
push
out
mov
shlb
mov
mov
dec
iret
cmp
nop
icebp
mov
push
out
stc
es
jnp
dec
mov
lds
ja
roll
or
and
out
test
sar
movswl
subl
or
ja
flds
rolb
mov
je
add
adc
lret
in
fwait
sbb
jmp
mov
insb
pop
mov
or
sub
int3
jb
add
sbb
xchg
jno
inc
jb
fcoml
add
xlat
pop
lret
call
xchg
mov
mov
push
push
mov
test
jb
dec
imul
je
das
mov
decl
ljmp
aam
cmpsb
pop
and
fisubrs
mov
add
sbb
mov
sarb
jg
stos
lret
push
pop
xchg
test
dec
or
adc
mov
cmpsl
fs
loopne
arpl
push
iret
std
je
sub
arpl
push
test
dec
and
jae
fists
mov
aas
fidivrs
test
mov
sbb
add
or
pop
cmp
cmp
xchg
jo
sti
ja
aaa
and
pop
mov
push
push
loope
pop
addr16
cmp
lcall
pop
xor
cltd
lods
andl
xchg
inc
pop
jecxz
sub
and
pushw
insl
xor
mov
shll
pop
js
adc
leave
ret
xor
or
pop
jnp
addr16
mov
inc
movsl
int3
mov
ficoms
pop
cmp
das
ds
sbb
cs
scas
test
fisubrs
pop
aam
stos
add
add
and
push
lret
sbb
imul
jne
daa
call
cmpsl
mov
jg
insb
mov
daa
jnp
in
mov
xchg
popf
loop
pop
add
imul
jae
shlb
rcl
mov
dec
cmp
repnz
inc
lea
fnstenv
xchg
cmc
icebp
add
xchg
xor
cmp
lret
xor
or
jmp
lea
lcall
outsb
fwait
js
mov
cmpl
or
xor
int
pop
imul
rcll
adc
xchg
pop
int
icebp
sub
push
inc
dec
lods
addb
adc
in
rolb
fistps
addl
jb
or
mov
gs
imul
mov
mov
insl
aas
ss
mov
or
lcall
mov
sub
stc
std
jb
add
aas
xchg
sub
adc
subb
jge
mov
outsb
push
pop
pop
stos
jnp
ljmp
clc
and
lods
xor
je
pop
andb
cmp
inc
lret
roll
lods
jo
inc
jne
cmp
push
push
bound
test
mov
call
push
ljmp
testl
push
loopne
mov
sub
ret
cmp
add
pusha
aas
mov
sbb
movl
fnstsw
in
jns
stos
sarb
pusha
sub
lods
push
adc
mov
aam
jmp
sub
mov
push
xchg
push
mov
pop
jl
aam
test
sub
dec
push
xor
lea
test
repz
daa
pop
xchg
push
jno
jb
xchg
cli
cmp
fdivs
lds
cli
idiv
xchg
int3
xchg
jmp
push
cmp
xor
lahf
inc
pop
mov
or
enter
mov
mov
fs
idiv
in
and
flds
add
dec
sbb
aas
incb
jle
mov
inc
mov
out
aaa
push
int3
xchg
adc
inc
push
add
sbb
pop
mov
cmpsl
outsb
jne
xchg
ret
or
ficoml
in
inc
push
add
cmp
cltd
cld
inc
push
mov
pop
xchg
lret
xorl
pop
mov
shll
adc
subl
rcrl
and
xor
es
ja
lcall
pusha
push
xor
push
push
fisttpll
jne
lahf
sub
rorl
fdivp
ljmp
aaa
out
ret
mov
loopne
sbb
inc
push
popf
inc
push
cmp
hlt
in
dec
call
xorl
xchg
arpl
cmc
mov
stos
repz
dec
lock
outsl
shlb
mov
fdivs
insl
and
jnp
add
dec
push
cs
sahf
or
mov
cli
aaa
push
mov
add
mov
out
mov
jnp
rcrb
mov
gs
rol
and
roll
sbb
inc
neg
sub
outsb
dec
jle
or
pop
and
mov
adc
push
pop
lods
push
lods
int
sti
iret
cmp
dec
xchg
fs
push
fs
and
xchg
and
xchg
idivl
call
pusha
jp
in
lcall
xorb
jl
in
fs
mov
cld
mov
pop
fs
nop
int
or
cmp
imul
adc
fwait
mov
hlt
in
je
je
dec
cmp
jl
cmp
out
stos
nop
pop
fwait
mov
push
add
sub
scas
leave
in
por
rcrl
shl
data16
mov
lret
mov
movsl
mov
push
mov
xchg
dec
ja
pandn
sbb
cmp
out
fldt
test
gs
movsl
xlat
mov
mov
ljmp
mov
fisttpll
fidivl
stc
and
int
repz
addl
test
jb
sbb
cmp
push
or
ds
les
mov
js
nop
push
inc
xchg
mov
aam
out
pop
pop
xor
inc
inc
sarb
xchg
loope
inc
outsb
lret
xchg
xor
out
ds
test
popa
cwtl
fidivl
insb
popf
mov
shll
test
filds
divb
cmc
push
mov
and
pop
fcoms
push
stos
rcrb
adc
jecxz
sub
mov
push
mov
xchg
addb
xchg
jl
test
or
movsl
jl
fsts
cld
mov
out
pop
add
pushf
insl
jmp
negb
popaw
inc
bound
sarl
adcl
ds
pop
xchg
jle,pn
push
mov
sub
movsb
movsl
push
fisttpl
outsb
push
xchg
frndint
gs
rcrl
and
cmc
pop
outsb
icebp
jl
pop
ret
fldt
or
test
inc
mov
sahf
dec
imul
mov
lret
aaa
xor
insl
add
aam
adcl
fidivrs
test
movsb
fcmovbe
sarb
lret
mov
adcb
std
or
mov
cmp
scas
inc
shll
xor
int3
ficoms
clc
xor
or
sbb
mov
adc
adc
pushl
push
and
inc
cmp
jne
stos
fwait
seto
fidivs
mov
outsl
pop
adc
popa
lods
loope
lds
popf
mov
mov
test
dec
out
enter
cmp
push
pop
mov
lahf
out
cmpsb
testl
int
push
push
or
jmp
or
bnd
in
pop
imul
sbbb
push
sbb
insl
loope
scas
xchg
cmp
xor
inc
dec
push
cld
xchg
fadds
mov
mov
sbb
mov
loopne
clc
mov
mov
ja
clc
shrb
push
daa
xor
adc
nop
pop
sub
xor
cmp
leave
insl
cmpsb
rol
lds
nop
mov
and
test
sti
fimuls
loopne
cmp
inc
cld
dec
pop
and
jne
jae
and
push
mov
lcall
xchg
jb
popa
cmpsl
out
push
ret
in
addr16
jb
cmc
sbb
xorb
nop
mov
cmp
shl
into
push
pop
adc
push
mov
repz
lods
pop
push
sub
mulb
cmp
test
dec
rcr
dec
sbb
dec
aad
lods
leave
jg
mov
in
mov
cld
dec
xor
mov
cld
dec
or
mov
outsl
subl
leave
test
push
andl
push
in
jl
out
mov
test
mov
outsb
mov
mov
in
xor
ret
mov
in
mov
stos
insl
int
or
int
sub
std
out
sbb
dec
mov
cmp
xor
mov
jns
push
jecxz
cli
mov
js
pop
mov
in
sbb
scas
test
dec
out
aam
jle
mov
xchg
rcrb
push
fcoml
jg
rorl
xchg
in
cmc
scas
mov
pop
xor
ja
push
hlt
mov
pop
push
mov
sarb
out
stos
add
sahf
mov
mov
out
dec
jbe
enter
sub
scas
jbe
mov
pusha
icebp
xor
lods
xchg
xlat
sub
cmp
leave
fcmove
rolb
rorl
push
lret
push
adc
sub
sub
imul
xchg
comiss
push
xor
mov
jp
lea
pushf
scas
cmp
sub
out
add
inc
out
daa
andl
cmp
scas
cmp
add
pop
inc
push
push
xor
add
add
sbb
inc
notl
cwtl
mov
mov
fdivs
in
roll
pop
lds
xor
and
rclb
aaa
xchg
jnp
aad
clc
push
jge
clc
ja
sti
or
ret
gs
inc
inc
push
dec
mov
mov
scas
add
jno
in
lcall
jg
mov
push
mov
retw
cmp
loop
mov
mov
mov
mov
imul
lea
xchg
or
clc
ffree
fdivrl
in
ljmp
in
pop
adc
in
inc
inc
push
cs
stos
jno
aam
outsl
xchg
ds
call
insl
cwtl
pop
xor
add
xor
sarb
mov
test
test
stc
mov
mov
xlat
nop
mov
lret
sbb
add
loop
cmp
enter
testl
cmp
ja
imul
adc
xchg
test
and
inc
inc
push
int
gs
daa
mov
lret
popf
add
cltd
add
lds
inc
std
movsl
in
xor
repz
pop
divl
into
xorb
inc
out
cltd
dec
jecxz
mov
lea
pop
stos
lea
fidivrl
mov
or
pop
cmpsb
pop
test
pop
shl
pop
adc
insb
leave
js
push
fadds
sub
xor
mov
cmpl
cmp
fsub
jge
pop
addb
dec
hlt
aam
xchg
es
push
rcrb
inc
icebp
faddp
mov
ja
xor
xchg
inc
mov
cmc
mov
dec
push
aaa
pop
fsubr
test
add
jbe
push
cmpsb
push
cwtl
jne
out
js
shll
aas
rcrl
jecxz
xchg
xchg
jmp
lock
cmp
sarb
jns
push
ficoml
fs
dec
leave
push
int3
push
cltd
pushf
hlt
push
dec
cmp
fidivrl
cmp
xchg
adc
iretw
push
sbb
gs
pusha
jbe
idivl
jg
lods
inc
xlat
sbb
xor
pusha
mov
push
divb
outsl
jmp
mov
in
add
push
repnz
xor
js
mov
adc
pop
int3
pop
sbb
cmp
ficomps
aam
lret
loope
pop
push
daa
out
lahf
pop
loope
cs
push
scas
test
mov
in
testb
xchg
mov
mov
mov
add
mov
inc
and
mov
or
lret
ficompl
jg
int
loopne
call
jne
xchg
jge
cmp
adc
orl
sti
inc
cmp
mov
mov
cli
sub
mov
lea
es
fcmovnbe
push
add
xor
xor
mov
repz
push
cmpl
enter
pop
adc
dec
sbb
mov
fstps
aas
or
xor
fwait
jns
lds
lods
or
jo
jge
pusha
imul
inc
sbb
dec
dec
cld
fcoml
in
test
test
mov
xor
pusha
frstor
lods
psrad
mov
popf
xchg
lods
cmpsb
mov
xor
sub
jae
push
pop
fimull
nop
in
xchg
es
xchg
lock
mov
data16
fs
xchg
testb
mov
mov
xor
scas
mov
in
test
pop
sbb
andl
rcrb
stos
or
mov
push
jle
pop
xor
inc
xlat
lahf
cmc
mov
adc
dec
ret
adc
inc
popf
in
mov
aad
cli
ljmp
cli
lcall
std
or
cmp
mov
cltd
sar
dec
cli
push
pop
in
pop
sub
xor
add
cmp
test
pop
xchg
je
js
sub
inc
inc
mov
in
sti
add
sar
das
arpl
mov
jb
cmp
push
cmp
mov
cmc
fsubl
xor
push
pusha
loope
mov
mov
es
imul
push
cmp
add
and
inc
dec
pop
fwait
lcall
das
jge
and
in
aas
push
enter
iret
push
inc
mov
mov
push
xchg
pop
jmp
cmp
jmp
sbb
dec
push
and
jmp
in
jno
jns
mov
imull
aad
and
push
pop
push
clc
xchg
out
or
sub
mov
outsb
rcrl
lea
shl
cwtl
je
add
js
and
movsb
je
jl
inc
call
mov
shlb
dec
pop
sbb
loopne
mov
lock
subb
decl
lret
out
lods
icebp
movsl
lret
cmc
cmp
mov
jle
cmp
and
or
mov
xchg
ds
mov
scas
mov
ja
ret
call
rorb
push
test
dec
xlat
je
jecxz
xchg
ret
and
scas
push
cmp
mov
sub
fistpl
dec
mov
mov
adc
lret
out
sbb
fdivl
shl
xchg
xor
mov
cmpb
mov
std
or
daa
fnstenv
xchg
dec
jbe
mov
fwait
out
cmp
dec
or
popf
out
jae
pop
out
in
popf
push
inc
aaa
xor
pop
stos
scas
in
bound
mov
out
jle
dec
inc
jb
je
add
sub
sub
or
add
pop
mov
js
scas
scas
jns
cmc
addr16
aas
xlat
jle
mov
add
jg
insl
sbb
in
rcr
into
push
jecxz
lcall
push
jne
iret
sub
je
mov
lcall
bound
pushf
fsubs
adc
xchg
sbb
rclb
fisttpl
dec
add
lds
sub
divb
dec
dec
mov
in
movsl
bound
mov
aam
mov
or
cmp
stc
repnz
idivb
cmc
scas
idivl
outsb
mov
imulb
push
movsb
lock
push
aam
sbb
dec
lock
xchg
sub
je
or
sub
pop
jge
cli
sbb
iret
aam
popf
jle
roll
push
jmp
mull
sbb
movsb
cmp
ret
inc
cmp
movsl
ja
mov
pop
dec
xchg
mov
enter
sti
dec
loope
push
xlat
shrl
xchg
hlt
jb
testl
pusha
fbstp
dec
les
jl
into
pop
insb
add
inc
dec
ds
jl
push
fsubr
hlt
cmp
iret
data16
and
sarb
mov
daa
mov
cmc
mov
decb
aas
xchg
push
out
out
push
push
mov
call
leave
or
pop
lea
sub
ret
cmp
sahf
ljmp
insb
mov
call
out
pop
fcmovb
loopne
popf
cmp
add
dec
int3
ds
out
inc
sbb
mov
dec
adc
adc
add
fmull
fmul
fcmovne
inc
sub
jecxz
scas
loop
nop
jbe
dec
imul
sbb
dec
xchg
jle
sub
pusha
insl
mov
mov
lret
mov
add
xor
mov
pop
test
mov
or
negl
js
imul
pusha
sbb
mov
dec
mov
movl
loopne
imul
xchg
ret
andb
xchg
add
les
stos
or
scas
imul
mov
shl
and
fstpl
inc
clc
sub
int3
xchg
push
lds
movaps
aas
stos
imul
out
adc
in
pop
add
push
jmp
push
outsl
xor
je
jge
out
int
dec
ret
jmp
mov
pop
out
andb
loope
sub
pop
es
test
or
mov
shr
fwait
mov
cli
adcb
flds
sti
ret
out
sbb
out
sbb
out
pop
cmpsl
inc
jbe
dec
arpl
mov
mov
push
cmc
movsl
sub
lret
add
sbb
testl
sub
hlt
inc
push
inc
sbb
inc
push
fildll
and
xchg
cmpsl
leave
dec
sbb
std
jge
add
pop
push
arpl
in
mov
and
enter
adc
imul
clc
repz
adc
js
push
fwait
mov
movsl
inc
aaa
cmpb
ret
fldl
sbb
in
xchg
xchg
xchg
mov
inc
xchg
mov
cltd
inc
dec
sub
cmpl
pop
xchg
fldl
mov
dec
sbb
lret
inc
lcall
je
daa
inc
xorb
leave
movsb
out
incb
je
imul
push
gs
call
add
pop
push
lods
orb
fdivrs
push
pop
dec
cmp
adc
cmpsl
inc
push
scas
or
int3
mov
negb
mov
es
dec
imul
push
jge
cld
into
cmpsl
inc
into
lock
mov
mov
inc
test
imul
sbb
mov
xchg
andl
xor
decl
fdivr
fsts
xchg
gs
fistl
shrb
pop
cmp
rcr
mov
xor
xor
jne
in
ret
mov
imul
popf
icebp
clc
lcall
xchg
jbe
cmc
loope
insb
xchg
addb
dec
xchg
enter
mov
jmp
mov
into
aam
xchg
mov
loopne
aaa
lahf
and
sbb
out
repnz
lods
xchg
stc
outsl
iret
addr16
fcmove
dec
fcom
iret
mov
into
incl
lods
cmp
mov
lret
stos
sbb
add
inc
jmp
or
pop
js
stos
enter
and
sti
and
lods
mov
mov
xor
shlb
ss
cmpsb
pop
fidivrl
cmpsb
popf
dec
mov
test
sub
test
ret
dec
or
jno
sbb
fs
jne
mov
call
and
jno
xchg
rcr
fldcw
jg
int
xchg
jp
pop
push
imul
sub
cwtl
cs
jbe
mov
test
lret
cltd
hlt
xchg
push
sahf
dec
test
clc
xchg
adc
cs
sub
psllq
inc
dec
pop
adcb
inc
adc
pusha
inc
addr16
mov
cmpsl
scas
dec
cmpl
and
int3
add
cmpsl
ret
push
mov
out
fs
push
rcll
jo
adcl
sub
push
push
pop
mov
push
adc
dec
mov
or
inc
or
repz
push
das
rclb
sahf
roll
loopne
xor
sub
fcom
pop
pop
shll
pop
mov
xchg
inc
fmul
push
outsl
xor
mov
mov
negb
adc
and
sbb
mov
mov
loope
xor
shl
xor
jnp
pop
cmp
mov
out
mov
je
push
xor
fstps
insb
cs
stc
xor
dec
shlb
rcrl
in
push
arpl
inc
shr
test
daa
sahf
mov
or
push
je
push
lea
cs
cmp
sti
jb
std
scas
cmpsl
xchg
xchg
frndint
out
and
call
sti
sbb
in
mov
cmpsl
aaa
jno
stos
clc
mov
inc
push
sti
lods
aas
popa
lods
dec
add
adc
add
inc
mov
imul
mov
cmp
push
rcl
pop
gs
add
mov
lea
push
xchg
fsubs
cs
cmp
mov
or
adc
mov
inc
gs
dec
cmp
ficoml
insb
ds
cmp
lods
testl
sbb
sub
sbb
or
inc
cmpsl
jmp
jnp
lret
cmp
inc
std
lcall
nop
sub
cmpsb
insl
pop
mov
mov
xchg
cli
mov
adc
ja
mov
int3
iret
movsb
push
les
andl
ds
xchg
inc
pop
loop
clc
lcall
aam
cld
push
sbb
cmpsb
inc
dec
call
cli
call
jnp
lret
mov
sub
cli
jge
push
stos
movsb
jle
inc
movsb
sub
sbb
roll
test
dec
and
xor
adc
xor
fisubrs
sarl
jp
mov
int
dec
sbb
dec
push
push
mov
push
les
ds
lret
add
subl
adc
xchg
aas
int
call
clc
mov
in
in
movsb
iret
inc
movsl
ret
stos
je
xchg
jb
jnp
test
hlt
lret
test
sbb
sub
and
push
adc
push
lcall
gs
jb
mov
jmp
dec
insl
mov
and
fistpll
mov
push
jbe
xor
jl
pop
mov
jle
cld
ret
and
shl
rcrb
pop
mov
xchg
sbb
popf
outsl
inc
mov
push
xor
or
xchg
jecxz
lret
loope
nop
cltd
lods
loope
dec
clc
mov
mov
xlat
xchg
dec
js
aas
jae
xchg
test
or
jge
sub
cltd
fnstenv
xor
mov
pop
call
push
call
sub
sahf
xor
call
test
cltd
movaps
cmc
pop
pop
iret
fnsave
repz
mov
lods
dec
push
js
ss
data16
dec
jne
push
test
or
add
cmp
sti
sub
daa
dec
je
adc
jno
mov
movb
push
adc
rcrb
pop
sbb
ja
xor
popa
jmp
pop
inc
ljmp
inc
jg
mov
xchg
sbb
faddl
push
mov
add
insb
hlt
push
xchg
int3
mov
cmp
xchg
add
jae
inc
fwait
xor
sbb
popa
cmp
mov
pop
mov
test
or
fmul
loope
dec
insl
lahf
mov
or
pusha
stos
lcall
mulb
leave
loopne
shll
enter
push
xchg
xchg
jae
repz
mov
int
fld1
stos
movsb
mov
incb
test
out
out
xor
mov
mov
shlb
and
aam
mov
lds
push
std
push
dec
sbb
push
cld
notb
push
mov
es
sub
dec
addl
stos
and
pop
xchg
cli
stos
dec
xchg
je
dec
lds
out
repz
jl
lods
ficomps
loop
mov
fildl
sub
lret
rclb
push
movsb
out
stos
std
sub
jns
or
adc
incb
lret
push
xchg
mov
js
in
pop
mov
xor
inc
cli
sbb
andl
test
inc
jmp
xchg
aas
or
std
test
push
pop
push
sahf
adcb
mov
mov
dec
dec
cli
jmp
lret
aam
xchg
mov
lret
adc
pop
mov
sbb
mov
test
stos
dec
sbb
addr16
xchg
dec
xor
adc
dec
imul
in
dec
pop
sbb
sub
stc
test
sahf
bound
xchg
pop
insb
test
test
scas
jb
pop
stos
cmc
mov
lcall
sub
stos
shr
js
aam
neg
repz
push
jne,pn
sub
movsl
leave
dec
sub
and
push
loope
shll
mov
fs
in
push
push
mov
inc
adc
fstps
rorb
mov
jg
inc
cmpsb
std
cmpsb
into
xchg
mov
xchg
sbb
sub
mov
mov
pop
mov
dec
jno
sub
stos
sub
xor
xor
mov
subb
test
jl
std
mov
outsl
cmp
inc
jne
into
mov
mov
pop
mov
arpl
jmp
aas
cmp
divb
loope
sub
iret
call
aad
xchg
outsl
shlb
cmp
sahf
lret
ret
es
cmpsb
daa
dec
iret
imul
pop
mov
call
inc
es
xlat
cmpl
jl
pop
xchg
sub
adc
sbb
push
in
mov
push
sub
inc
add
xchg
sbb
outsl
mov
cmc
jmp
push
scas
call
jp
jg
adc
or
and
shrl
outsb
pusha
roll
adc
mov
jb
jecxz
bound
push
sarb
jmp
imul
mov
pop
shl
outsb
sbb
jns
dec
lret
mov
push
repnz
hlt
and
fimuls
loope
cmp
jp
imul
push
jmp
shlb
cmp
jns
sahf
push
call
push
addr16
hlt
jl
sahf
jne
push
pop
test
adc
lea
outsl
mov
lock
lcall
mov
push
in
sub
xor
scas
xchg
shr
mov
fmuls
faddp
ret
jno
xor
daa
or
or
cs
pop
ljmp
inc
mov
xchg
xchg
mov
fwait
xchg
push
ret
push
mov
lods
aas
cmp
test
mov
inc
ffreep
mov
gs
negb
cmp
in
inc
xor
int3
add
aad
adc
push
lds
adc
pop
xchg
inc
daa
stc
mov
sub
arpl
outsl
into
imul
adc
cltd
cmp
ficoml
push
dec
ljmp
sbb
cmpsb
add
xor
mov
mov
ret
cwtl
mov
fidivl
js
mov
sti
mov
mov
mov
and
inc
leave
lock
testl
jg
in
dec
nop
cmp
pop
sahf
popa
fcoms
aad
imul
fldt
test
stos
movsb
cmpsb
lods
xchg
push
call
jg
lret
sahf
mov
xor
orps
pop
sbb
dec
and
in
int
sbb
jo
arpl
stos
push
jle
movsb
cmp
sbb
sbb
pop
daa
test
out
ds
lahf
ret
std
lahf
rcrb
out
sub
ret
push
test
push
or
fsubr
mov
add
adc
lea
or
mov
pushf
push
frstor
rcll
pushf
jb
sbb
call
mov
das
pop
sti
movsb
fisubs
in
outsl
ljmp
sar
std
lds
fbld
xchg
jns,pt
cmpb
or
push
mov
sbb
mov
shr
and
sub
xor
popf
loopne
adc
dec
bnd
xchg
aas
stos
fimull
cmp
gs
in
inc
inc
subb
sub
mov
in
fists
or
xchg
xchg
mov
mov
cmp
scas
sub
jns
into
mov
jo
imul
pop
mov
fldcw
outsb
mov
mov
addr16
pop
push
icebp
aaa
jnp
or
pusha
xor
jmp
mov
mov
test
push
pop
jl
out
fdivp
clc
mov
cmp
lea
push
adc
mov
aaa
mov
adc
jns
out
repz
das
xor
dec
cli
test
in
sub
push
cs
stos
push
jo
lods
jb
in
push
scas
sbb
adc
test
ss
imul
pusha
iret
sahf
inc
cmc
inc
xor
repz
mov
pop
les
pop
ret
scas
sbb
dec
subl
mov
cmp
scas
sti
fcmovbe
mov
mov
or
aad
or
push
mov
fistps
out
cwtl
jns
mov
faddl
dec
adc
test
adcb
lods
int
pop
jecxz
aad
cmc
xchg
sub
cmp
jnp
dec
je
mov
mov
hlt
inc
pop
ss
inc
out
dec
inc
pop
mov
mov
inc
rcl
and
jo
es
lahf
sbb
movsl
mov
roll
fistpl
mov
or
mov
or
inc
test
cmpsl
sbb
out
cltd
incl
in
or
fists
or
cmpsl
add
adc
adcb
pop
sub
nop
out
scas
jo
lods
int3
movsb
mov
orb
adc
hlt
call
inc
negl
icebp
push
or
out
in
jp
movl
push
repnz
rcl
stos
and
rclb
fsubrs
and
cmp
mov
sbb
cmp
pushf
or
clc
and
or
loop
icebp
xchg
push
cwtl
int
lahf
xchg
int
sbb
push
mov
mov
jns
pop
stc
sbb
inc
mov
sub
sti
xchg
jecxz
call
mov
jp
hlt
dec
nop
loope
arpl
add
sbb
jl
bound
outsl
xchg
fcompl
fiaddl
fsubrp
or
cltd
mov
cs
pop
and
iret
mov
pop
dec
pushl
mov
leave
pop
les
xor
lret
xchg
in
scas
inc
arpl
les
xor
into
test
imul
push
out
bound
fstl
fists
fisttps
mov
mov
sbb
or
push
stos
push
jae
pop
sahf
inc
cli
iret
jo
xchg
mov
add
dec
push
out
xchg
push
lret
push
shl
fwait
lds
stos
or
imul
mov
mov
popf
mov
shlb
push
andl
cmpsl
pop
cmp
out
sbb
test
aaa
mov
and
adc
sub
lea
mov
add
mov
cwtl
dec
lds
lds
push
mov
mov
das
aaa
int
leave
xchg
inc
xor
mov
push
imul
es
pop
add
iret
mov
and
inc
fcomp
dec
test
dec
insl
lds
push
out
int
out
pusha
push
xchg
fchs
jle
popa
adc
xor
outsb
xor
mov
inc
rclb
ret
inc
push
popa
shrb
pushf
push
add
push
shll
mov
faddl
sbb
pop
dec
and
dec
cltd
rcrl
into
xchg
or
cmovno
inc
sbb
dec
loopne
xlat
xchg
jb
or
or
lods
dec
loopne
mov
cmp
aas
push
data16
inc
mov
inc
rcr
imul
or
loope
mov
dec
arpl
popa
popa
cmp
mov
mov
lcall
push
scas
faddl
sbb
pop
mov
mov
repnz
je
rorl
mov
pusha
mov
jl
ret
sbb
in
pop
stos
stos
add
pop
ficoms
adc
and
jne
test
pop
hlt
ljmp
scas
out
and
test
xchg
stos
push
mov
mov
pop
insb
push
lret
adc
arpl
jae
dec
call
loopne
mov
lods
ffreep
pusha
push
sbb
cwtl
fidivl
ud2
pusha
loope
mov
ret
mov
add
dec
and
cmp
ror
cwtl
cmp
mul
mov
sbb
sbbb
push
rolb
xchg
add
ljmp
lods
mov
cmp
sub
pop
cmpsl
inc
into
jae
bnd
mov
mov
outsb
mov
xchg
cmpsl
scas
push
mov
xchg
lret
pop
rolb
pop
add
push
cmc
sub
cmpsb
xchg
inc
mov
adcl
inc
xchg
push
xchg
lahf
lds
mov
out
imul
data16
xchg
dec
aam
add
adc
add
cmp
adc
add
imul
mov
enter
mov
jne
xchg
xor
loope
cltd
mov
inc
adc
xor
insb
mov
fsubs
lock
mov
xchg
mov
mov
incl
fcompl
ret
insl
cmp
outsb
jle
adc
daa
cwtl
mov
mov
dec
pop
jno
int3
jne
add
mov
inc
dec
pop
lds
push
js
mov
out
vmwrite
lret
pop
mov
jle
out
mov
repnz
fdivrl
pop
mov
pop
in
jmp
inc
rorb
cwtl
xchg
jecxz
or
sarl
push
add
or
into
adc
inc
clc
push
arpl
cmp
ret
test
jg
rcrb
mov
sbb
and
nop
test
jo
scas
out
push
mov
pop
xor
fsubrl
pop
cmp
xor
rorb
int
int
push
sahf
xchg
sbb
add
scas
dec
movsb
xor
clc
inc
adc
cwtl
imul
mov
cs
cmp
cmp
ss
jmp
scas
subb
pop
mov
sub
scas
jnp
mov
repz
fstps
pop
xchg
lret
jmp
int
sti
and
dec
hlt
loopne
push
mov
mov
cmp
mov
dec
sbb
ds
jge
xor
in
test
xor
cmpsl
add
loopne
ss
fnstenv
cmpsl
movsb
das
sarl
call
mov
xchg
mov
push
int
adc
movsb
int3
fs
enter
outsl
pusha
jle
mov
inc
into
fcmove
out
fsqrt
sub
sub
out
sub
gs
jbe
movsb
jno
jbe
xor
inc
mov
lahf
fdivp
and
test
push
jne
stos
mov
inc
addr16
push
outsb
push
cltd
pop
mov
pop
call
stc
or
push
mov
xchg
pop
lods
lret
cmpsl
jmp
orl
shrb
xor
out
cmpsl
ficompl
mov
daa
sbb
in
cltd
jle
inc
push
dec
ss
mov
mov
test
insb
or
out
cmp
sbb
and
jnp
out
loope
pop
xchg
shll
ss
out
push
xor
or
mov
lahf
mov
adc
and
rcl
pop
jmp
inc
cmp
mov
mov
push
imul
mov
sahf
sbb
jg
scas
push
clc
mov
stc
cmp
or
roll
scas
movsl
mov
cmp
lea
subb
mov
in
addr16
pusha
fcom
fstps
lds
cltd
xchg
xchg
xchg
pop
sbb
mov
xchg
cli
jecxz
addr16
cmp
cmp
sbb
pop
cmp
add
push
imul
data16
stos
nop
xor
aad
jns
xchg
sbb
push
rcll
fs
lret
dec
pop
or
adc
shlb
or
push
sti
jb
fidivl
dec
gs
dec
rclb
push
mov
cmc
out
lret
repz
imul
dec
jnp
inc
arpl
insl
shrb
out
outsl
mov
fbld
scas
mov
cmpsl
imull
aas
xchg
fsubrp
leave
insb
outsl
orl
inc
daa
sub
testl
mov
or
sahf
loope
fwait
or
roll
lea
cmp
push
in
push
mov
inc
sub
outsb
fs
cs
xor
add
cmp
loop
xor
add
fs
sbb
and
test
lods
mov
xchg
push
jl
je
orb
jnp
jmp
push
pushf
jbe
in
jle
cmovle
je
jnp
push
test
mov
adc
sub
mov
addr16
jno
jge
fadd
mov
pop
mov
cmp
mov
or
lods
icebp
sub
loope
mov
push
inc
mov
popf
sbb
push
subb
out
add
cli
mov
repnz
fcomps
cltd
inc
cwtl
and
mov
repz
pop
push
mov
pop
sbb
popf
stos
lahf
scas
shr
push
loop
das
mov
add
std
sub
sbb
sbb
dec
mov
xor
or
jg
addl
andl
sar
negl
cld
or
jns
das
es
lret
js
xchg
mov
pop
jl
pushf
popf
jg
sub
sub
je
cmp
incl
jge
or
jne
mov
mov
cltd
jg
das
lret
test
sub
mov
loopne
adc
xor
or
xor
and
pop
mov
mov
pushf
mov
mov
and
nop
mov
pop
mov
inc
jbe
fcmovnu
shr
aaa
mov
mov
mov
adc
mov
shl
mov
repz
mov
xchg
pop
je
out
fidivrs
sub
push
ret
call
cmp
cwtl
and
pop
aad
ja
outsl
movsl
aad
dec
adc
push
in
clc
jp
xchg
jne
cmp
inc
mov
cmp
add
adc
cmpsb
andl
movzwl
mov
mov
push
mov
mov
ds
or
pop
jnp
xor
jp
mov
insl
dec
ficomps
push
and
lret
ja
push
es
pop
je
add
or
aam
sub
pop
movsb
insb
ja
aad
inc
push
and
hlt
pop
aas
fsub
ljmp
or
dec
nop
push
push
arpl
sub
mov
mov
pop
incl
inc
fstpl
adc
imul
int3
fisttpl
dec
mov
or
insb
xchg
pop
sbb
jns
fnstenv
push
cmp
out
fwait
stos
xor
lods
cmpsb
dec
sub
sub
cli
jo
scas
mov
scas
pusha
test
cmp
test
sub
jnp
xor
mov
sbb
fidivrs
test
sti
addr16
add
fstps
inc
adc
cltd
cs
mov
lahf
mov
jge
xor
popf
and
or
cmp
adc
push
ja
test
xchg
xor
adc
aas
leave
inc
sbb
lret
lret
fs
stos
cmpsb
push
dec
sbb
and
int
orb
js
cwtl
pop
arpl
out
adc
int3
stos
dec
test
push
push
popf
push
idiv
imul
push
shll
sub
jge
push
shlb
dec
or
jp
lds
mov
sbb
mov
leave
mov
mov
push
es
jo
mov
stos
lret
add
insb
loopne
scas
sbb
bound
sub
outsb
ja
sbb
adc
daa
adc
ret
bnd
das
xchg
ds
and
mov
cli
pop
mov
movsl
xor
pop
dec
shr
and
xor
jge
push
call
mov
xor
sbb
xchg
mov
sti
mov
jecxz
pop
mov
outsl
fdivrl
lds
cmpsl
es
xchg
outsb
add
sbbb
mov
xchg
sub
aaa
pop
or
add
aaa
pop
movsb
lret
cmc
sbb
iret
test
das
push
fadds
xchg
inc
xchg
or
pop
inc
inc
jno
mov
mov
in
xlat
dec
push
int3
dec
out
xor
jbe
jmp
jns
cmp
sahf
out
into
mov
bound
hlt
loop
inc
and
sub
fldl
dec
pushf
addb
sub
aam
pop
sub
inc
pusha
sahf
push
call
mov
imul
sub
insl
xchg
push
cmp
push
lahf
lret
jg
lahf
out
shl
rcrl
addl
pop
aam
and
cmp
jle
mov
mov
xchg
test
sbb
xchg
mov
cmp
into
jne
pop
call
lods
mov
pop
mov
dec
out
stos
andb
enter
adc
mov
aad
cmp
ds
addr16
sub
sub
ret
xchg
in
dec
push
xor
xor
ret
sub
xor
ja
cmp
fwait
add
jle
iret
pop
vpaddb
push
cmpsl
pop
leave
mov
loope
cltd
cli
lock
arpl
jns
jl
outsl
in
mov
push
dec
pop
fisttps
jbe
ror
lcall
lods
lods
mov
cmpsb
xlat
test
mov
xchg
push
xchg
jnp
in
pop
imul
mov
push
mov
xchg
mov
sbb
jns
xchg
add
jbe
scas
test
testb
sahf
sbbl
stos
cwtl
sahf
sub
ss
push
jl
test
mov
xchg
mov
hlt
mov
inc
mov
clc
out
sub
cmp
div
push
scas
lahf
pushl
fisubs
jns
fsubr
cltd
inc
iret
adc
fisubs
pop
movsl
lods
scas
inc
mov
scas
addr16
rcrl
mov
xchg
lods
push
insb
enter
pusha
dec
cmp
fs
xor
add
lds
sbb
pop
pop
mov
jbe
dec
and
inc
xchg
xchg
ret
outsl
stos
test
jge
std
aas
imul
pop
out
sub
mov
aaa
lahf
xor
mov
imul
xor
mov
mov
into
movsb
cld
fiaddl
sub
mov
insl
ror
jg
incb
fistl
jns
pop
pop
in
mov
mov
cmp
test
sub
jo
fisubrl
cmc
mov
dec
fsts
jbe
and
mov
xor
xor
faddl
push
or
xchg
push
add
dec
or
jnp
rcrl
xchg
jns
xchg
pop
adc
fwait
enter
mov
enter
pop
fmulp
xchg
mov
lods
mov
dec
popf
adc
sub
dec
popf
mov
push
mov
push
xchg
jae
data16
xchg
lock
fdivrl
dec
movsl
xchg
cmp
mov
dec
xor
scas
in
jb
pop
rcll
dec
push
mov
sub
or
xor
xlat
mull
int
jecxz
das
mov
fsin
dec
mov
ss
fnstcw
jge
xor
sbb
inc
stos
hlt
sahf
addr16
cmpsl
aas
push
stc
int3
sub
sti
sub
adc
frstor
pop
mov
sarb
jge
xor
pop
xchg
mov
xchg
outsb
out
mov
pop
lods
jecxz
pop
addr16
mov
sbb
inc
cmp
shl
lret
xchg
mov
aaa
sub
movsb
cmpsl
scas
scas
jns
xchg
inc
cmc
loope
das
addr16
push
inc
int3
push
mov
fisubs
stc
jge
out
js
inc
pusha
xchg
lock
fs
popf
xchg
call
mov
lods
out
inc
pop
fisttps
jnp
imulb
std
lods
loop
rolb
push
iret
mov
rcrl
scas
cld
in
jnp
lds
hlt
dec
outsl
dec
lahf
je
xchg
pcmpgtb
pushf
sbb
mov
lods
xchg
jns
inc
lahf
lcall
leave
es
jns
sub
push
mov
sbb
test
push
rorb
pop
ret
and
jbe
out
and
scas
xchg
rolb
fldenv
xor
add
inc
inc
loopne
jno
imul
enter
sar
insl
inc
inc
inc
in
je
mov
scas
sbb
sub
sbb
call
out
test
adc
cwtl
outsb
pop
mov
daa
out
loop
hlt
mov
push
lcall
xchg
xor
mov
push
sahf
xchg
sbb
mov
in
push
sub
out
nop
mov
mov
add
test
sbb
fsubrp
and
scas
fnstenv
nop
int
popf
and
shlb
mov
fstpl
outsb
fstpl
dec
jb
xchg
daa
cld
xlat
icebp
or
test
mov
lea
jl
pop
add
ss
movsb
es
aaa
xor
xchg
lahf
ret
or
xor
test
out
cmp
sarb
sub
mov
pop
dec
rcll
in
xchg
jge
jns
ljmp
jp
pop
pop
enter
rorl
sub
orb
mov
xchg
push
insl
push
negl
mov
lret
fisttps
jbe
jge
hlt
pushf
pop
adc
cmp
sub
sbb
enter
jmp
push
xchg
inc
lods
lods
sti
add
hlt
mov
test
push
lahf
xchg
fisubrl
iret
add
test
push
sub
dec
adc
lea
jb
loope
les
fbstp
jae
js
add
mov
sahf
out
cmp
lods
dec
xchg
or
cmpsb
inc
and
scas
xchg
mov
jae
xor
jae
clc
out
push
fldl
fadds
les
adc
iret
movhps
mov
cli
decl
push
fwait
lahf
shrl
iret
xlat
movsb
addl
sbb
movb
subl
test
mov
arpl
sub
loope
or
push
and
pop
mov
arpl
inc
push
lcall
xor
rcrl
mov
loop
mov
sub
sti
test
xchg
lret
xor
movsb
insb
aas
fwait
mov
xchg
je
in
decb
je
sbb
jmp
jo
fistpll
xor
insl
int
and
sbb
push
movsl
stos
adc
mov
mov
orb
enter
std
pushf
adc
movsb
xor
ja
popa
stos
xor
push
xlat
sub
jg
out
sarl
mov
js
cwtl
and
sub
jne
and
shlb
xchg
test
cld
shr
dec
fildll
testb
push
xchg
add
and
cmc
pusha
repz
fstps
pop
es
push
cs
push
mov
jne
rcrb
jg
int3
adcb
stos
inc
lcall
mov
adc
ljmp
leave
mov
insl
and
mov
xor
mov
cmp
pop
loop
imul
nop
test
cmc
push
fimuls
fisttpll
out
fcmove
mov
dec
femms
out
or
pop
push
mov
jl
mov
insl
imul
or
imul
dec
fldl
fimull
push
xchg
fs
fistpl
cmp
cmpsl
outsb
enter
inc
mov
mov
aad
xor
aas
jns
jno
lret
js
mov
mov
and
ret
jae
scas
das
add
add
push
and
inc
mov
push
movsl
daa
push
or
in
inc
loope
sub
jmp
fwait
leave
pusha
dec
mov
test
mov
pop
incl
movsl
imul
enter
push
insl
rcll
testl
sub
xor
push
push
xchg
fcoms
mov
ror
in
scas
lret
push
mov
sti
lds
mov
and
pop
sbb
aaa
pop
cmpsb
call
cs
ds
adc
cs
arpl
mov
push
cmp
pop
inc
xchg
iret
test
out
cmp
out
mov
xchg
mov
repz
mov
mov
das
jp
jl,pn
dec
mov
inc
xchg
mov
mov
rcrb
jecxz
mov
jg
ja
jg
or
ja
xlat
sarb
or
or
cmp
repnz
sti
ret
cmp
sub
movsl
das
bound
popa
add
inc
dec
aad
mov
nop
pop
inc
lcall
xor
dec
int
mov
xor
inc
and
imul
loop
out
push
sbb
cmpb
inc
xorb
shrb
insl
aam
call
mov
jp,pn
push
loope
push
pop
jae
sbb
xchg
jns
pop
das
insb
pop
inc
lods
loopne
push
mov
jmp
sub
mov
loop
push
cltd
and
xor
push
push
add
ss
add
iret
movsl
jle
inc
inc
shr
pop
push
and
mov
pop
jg
push
rcrl
cmp
and
mov
pushf
cmpsb
insb
mov
xor
push
sbb
movsl
jp
adcl
repz
or
and
loop
inc
int
dec
mov
stc
dec
jno
jae
jl
ss
pop
adc
sbb
leave
cmpsb
push
dec
dec
xor
cmpl
inc
gs
je
push
ljmp
cli
sbb
xchg
mov
dec
sahf
push
aad
push
push
or
aad
mov
inc
push
test
sub
cmpsl
pushf
push
ret
xchg
sub
aas
cwtl
push
insl
ret
rorb
jbe
jns
call
mov
shll
mov
cld
cmpsl
into
lods
pop
xchg
movsb
lret
xchg
and
movsl
shrl
or
ja
xor
jge
push
jmp
dec
mov
out
jnp
push
jle
jl
inc
and
lretw
aam
lds
aam
popf
cltd
mov
mov
adcl
andl
test
xchg
rcrb
es
mov
mov
rorl
jae
xchg
cmp
cs
outsb
dec
xchg
xor
imul
ljmp
fcomps
pop
test
xchg
dec
pop
in
cmpsb
in
imul
mov
mov
adc
fsub
xor
push
jg
push
xchg
fdiv
loopne
repz
je
ja
inc
cmp
mov
inc
mov
pusha
xor
pop
dec
out
outsb
fisubl
xchg
icebp
xchg
sub
dec
clc
aaa
lret
dec
shll
mov
xchg
outsb
out
iret
outsl
popa
stc
into
ret
jnp
repnz
xchg
dec
xchg
sub
aaa
in
aad
cmp
dec
pushl
add
push
ljmp
testb
lock
addr16
mov
add
pushf
and
rcl
icebp
push
mov
stos
mov
ljmp
jne
cld
push
mov
aam
xchg
add
aas
sbb
xor
insl
cli
outsl
mov
sbb
out
in
test
pop
pop
pop
sarl
test
outsb
cmp
mov
xor
mov
cmp
repnz
sti
jnp
shlb
test
js
mov
and
sbb
dec
lret
lret
lea
adc
sahf
test
mov
cmp
push
xchg
pop
mov
jl
push
sbb
aas
push
sahf
pop
adc
inc
jge
clc
push
sti
ds
sub
scas
push
sarl
testb
sti
push
sub
push
stc
jno
loopne
and
pop
andb
push
inc
mov
dec
inc
orb
sti
xchg
jmp
mov
leave
dec
fcoms
std
test
mov
cmpsl
das
sti
aaa
scas
mov
ret
push
fdivl
mov
push
mov
pop
mov
and
loop
pushf
mov
rcrl
aas
push
mov
std
mov
aaa
out
cmp
jge
sti
fstl
mov
fistpl
out
fistps
loop
sbb
xchg
gs
mov
jne
mov
sahf
jge
xchg
iret
aas
test
and
cmpl
cmp
lcall
sbb
fstpt
push
les
push
cmp
adc
repz
cs
dec
movsl
pop
leave
xor
add
push
test
test
lahf
out
fsubrp
mov
aas
iret
mov
roll
sahf
in
lret
adc
rol
ret
xor
push
aad
xor
loope
sub
dec
std
and
and
stc
sub
xchg
sahf
mov
sbb
scas
gs
loopne
pop
push
clc
movsl
lret
stc
adc
adc
ds
inc
mov
or
mov
mov
mov
and
in
cmp
mov
mov
pop
cmp
iret
lock
inc
push
clc
mov
cltd
lret
imul
jg
es
cmpsl
sbb
sbb
es
ss
cwtl
mov
inc
popf
jmp
xlat
ds
shrl
addr16
lahf
cmp
rcll
dec
fsts
lret
lahf
jl
lock
cmp
adc
mov
xor
jns
ljmp
lret
call
in
cmp
decb
jb
aam
push
pop
xchg
or
inc
add
ret
loopw
lret
dec
dec
jbe
je
loope
jmp
fcmovnbe
add
sti
out
in
jg
imul
sarl
and
ja
jecxz
push
fsubrs
bound
or
sub
jo
lea
adc
movsl
lods
push
xchg
aaa
xlat
std
jb
pop
arpl
jp
inc
hlt
mov
call
popa
jl
popa
notl
in
adc
stos
xchg
jge
inc
jo
cld
xchg
adc
aas
mov
leave
cli
add
mov
std
repnz
cltd
cmpb
lret
xor
bound
jnp
jns
adc
or
jno
enter
mov
sti
call
mov
fsubrs
mov
stos
mov
adc
mov
jg
pop
and
push
lods
les
jg
jge
sub
mov
pop
fcomps
cmp
repnz
js
sbb
dec
ja
in
and
cmp
sahf
out
xchg
aaa
iret
sbb
fisttpl
xor
lea
ljmp
and
dec
stos
pusha
cmpsl
jns
pop
enter
sub
cmp
or
insl
fldz
pop
inc
iret
sub
and
xlat
mov
scas
xor
pop
movsl
shrl
pop
push
popf
jnp
sub
sbb
adc
xchg
jge
adc
call
jl
cld
mov
popf
jnp
push
lahf
imul
dec
fs
je
mov
clc
jmp
lret
mov
mov
leave
out
or
push
ret
aaa
xchg
dec
stos
mov
call
rorl
push
jno
aam
in
es
out
cmp
pop
cld
imul
repnz
repnz
cli
xlat
push
jl
dec
xchg
test
in
sbb
or
fucomip
pop
jmp
xchg
and
int
push
es
nop
shrl
cltd
sbb
int3
sub
and
cmp
cmp
cmc
push
les
sbb
sub
mov
sarl
adc
jle
inc
not
mov
xor
lock
mov
jmp
jecxz
hlt
ret
aam
dec
mov
loop
or
xlat
fs
adc
imul
mov
mov
hlt
jp,pn
clc
mov
ljmp
ret
loop
cmovle
cmp
push
hlt
jle
sub
mov
lcall
fdiv
adc
fs
test
adcl
add
jno
data16
mov
xlat
cmp
pop
sahf
lcall
adc
pop
inc
dec
aam
inc
shlb
cmc
cli
cld
jne
mov
leave
cmp
sbb
mov
daa
mov
xor
cmp
mov
cwtl
movaps
cltd
add
int3
lret
cmpsb
pause
cs
mov
inc
or
loop
adc
jecxz
mov
mov
int3
lret
push
mov
sub
push
jae
gs
outsb
xchg
cmp
push
mov
jmp
or
and
int3
or
mov
xor
lds
outsb
sub
jb
lds
mov
roll
push
icebp
lret
lods
iret
mov
imul
repnz
xor
clc
mov
push
lea
mov
sub
outsl
imul
jo
movsb
lahf
ss
test
inc
push
jno
int
inc
insb
add
cmpsl
xchg
cwtl
fcomp
das
cmp
or
push
test
cmp
mov
cmp
mov
cmp
jl
call
loop
mov
cld
and
add
mov
push
xor
mov
jns
cltd
insl
movsl
loop
pusha
mov
lcall
sub
lret
jns
negl
lcall
mov
lock
sub
sub
push
cltd
jle
pop
movsb
mov
xchg
jmp
cmpsb
or
push
ljmp
mov
pop
out
ja
pop
mov
cmp
push
inc
stos
add
stos
pop
lds
dec
xor
xor
daa
mov
sbb
insl
cli
ss
aad
out
mov
inc
mov
xlat
xchg
add
hlt
adc
and
test
aaa
mov
lds
stos
sbb
mov
fimull
test
mov
jns
arpl
fisubl
pop
pop
shrb
lea
xor
dec
jp
out
imul
clc
test
inc
xor
test
rcrl
test
xchg
sbb
xor
pusha
icebp
jge
inc
dec
and
cmpsl
fs
jle
cmpsb
xorl
enter
mov
cmp
mov
mov
adc
pop
shll
scas
xchg
jle
ficoml
xor
cmp
mov
or
mov
inc
ret
dec
xor
jl
inc
mov
call
movsb
add
in
hlt
cmp
mov
sbb
mov
lock
cs
imul
je
pusha
ds
mov
pop
movsb
sub
sub
pop
and
test
sub
js
in
in
movsl
sub
clc
aam
push
mov
shll
in
popa
xchg
adc
mov
shll
or
call
out
and
xor
ds
loope
sarl
mov
cltd
sarl
xchg
xchg
push
pop
adc
mov
mov
fnstcw
xlat
incl
add
add
mov
sbb
and
test
fildll
fidivl
in
sbbb
int
mov
out
cmp
int
outsl
insb
mov
jge
and
in
xchg
cmpsb
xchg
pop
xor
nop
xor
jl
mov
mov
lret
jge
jmp
lahf
mov
in
das
jecxz
push
inc
cmp
sarl
outsb
jne
inc
imull
movntq
jle
loopne
outsb
mov
inc
cmp
jg
adc
mov
outsl
cmpsb
push
xchg
and
lret
popa
gs
xor
repz
lret
clc
in
pop
sbb
or
lods
repnz
mov
addl
xor
rclb
imul
jns
mov
inc
stos
ja
mov
ret
xor
mov
jne
movsl
mov
push
fnstenv
mov
int3
mov
mov
cmpsb
stos
mov
cmp
jle
xchg
xchg
mov
aam
jns
mov
cmp
sub
ja
imul
jae
pop
repz
mov
cmp
les
mov
test
int
mov
and
inc
mov
add
cmc
jb
dec
mov
cmp
xor
stos
stos
cmp
sahf
jmp
dec
clc
or
rorl
lods
jg
fstpl
sub
lret
add
pop
xor
mov
sarb
xor
rorl
jl
rcrb
in
popf
lock
out
inc
shlb
aaa
jno
cmp
dec
in
test
imul
xor
stos
lcall
add
iret
nop
aas
sbb
xchg
out
or
mov
mov
xchg
test
inc
xchg
hlt
mov
test
repnz
mov
push
inc
clc
stos
rcll
frstor
mov
xchg
mov
jle
sub
or
push
pop
ret
sub
xchg
iret
cwtl
push
cmp
add
dec
jge
push
loopne
outsl
and
scas
ja
fcmovnb
adc
xchg
lods
hlt
jle
xchg
sti
cmp
loop
loop
xor
cmpsl
stc
arpl
ret
sub
out
jb
cmp
lea
jg
outsl
gs
push
fcompl
sub
inc
pop
and
pop
lret
clc
jnp
dec
aad
sub
xchg
dec
pop
cmp
mov
adc
aam
fiadds
sbb
pop
js
shrb
out
dec
mov
dec
dec
out
inc
les
mov
mov
push
lock
in
pushf
in
inc
insb
imul
cmp
jge
leave
out
in
xor
stos
repnz
out
rclb
idivl
stc
iret
and
jge
dec
or
in
push
pop
aas
pop
jnp
fisubl
or
sub
cmp
sbb
mov
lahf
movsl
sub
scas
adc
out
insl
mov
inc
enter
test
xchg
jmp
leave
les
mov
ret
add
jno
or
xor
aaa
mov
dec
adc
push
cmp
xor
push
adcl
mov
sbb
mov
scas
in
xor
cmp
and
mov
loope
or
es
pop
dec
rolb
les
dec
jb
dec
jb
daa
imul
jae
mov
adc
lock
negl
hlt
sarl
test
lcall
pushf
ud0
adc
insb
icebp
mov
es
divl
stos
dec
js
jp
jle
push
xchg
cmc
and
add
mov
mov
ljmpw
xchg
xor
adc
shrl
push
sbb
or
pop
or
mov
sub
js
dec
push
cmc
int3
orl
mov
test
mov
sti
push
lea
push
mov
push
inc
cli
roll
add
jmp
inc
jb
lahf
fs
or
imul
loopne
shll
stos
rorl
les
call
adc
stos
rol
int
mov
cs
jb
js
fs
pop
pop
xor
fs
enter
vpaddusb
ja
mov
sbb
xlat
sub
sub
loope
pop
inc
lods
shlb
pop
popa
out
out
mov
in
cli
inc
repnz
jg
lods
sub
xchg
test
pop
aaa
mov
clc
pop
fidivrl
ja
push
cmp
sbb
aad
xor
mov
sbb
test
stc
test
mov
cmp
dec
xor
and
push
fs
sub
xor
mov
ljmp
lret
pop
sarb
xchg
or
aas
xchg
aam
dec
sub
loop
mov
lret
shl
or
fidivl
ja
pusha
stos
stos
mov
and
mov
aad
cmp
mov
imul
xchg
arpl
pop
dec
push
mov
dec
add
fdivrl
add
pop
push
and
jnp
rorl
cmc
and
sbb
pop
pop
mov
and
adc
cmp
fldl
and
stos
mov
mov
adcb
push
neg
shlb
mov
dec
stos
and
stos
or
push
call
mov
cs
shlb
lds
and
inc
jle
addr16
sbb
jno
shll
loop
shll
dec
mov
inc
sub
jo
cli
ss
fisubrl
dec
insb
xor
imul
mov
cmpsl
pop
into
shll
and
mov
das
push
xchg
incb
push
call
test
xchg
fnstcw
rcrl
sahf
and
sbb
cltd
gs
dec
xor
mov
mov
xchg
test
scas
sbb
into
sbb
mov
pop
leave
inc
aas
xchg
div
push
xor
aam
scas
push
popa
cmc
and
fldcw
adc
das
subl
xor
xchg
mov
cmc
dec
adc
scas
fs
cmovp
mov
jne
testl
aam
inc
and
iret
stos
cmpsl
mov
into
hlt
jge
sub
les
pop
outsb
pop
add
les
decl
stc
out
fildl
sub
jmp
pop
mov
popa
fcmovnb
loop
push
imull
imul
dec
push
mov
cmp
push
jnp
adc
pop
lock
imul
fwait
lock
cltd
loop
push
scas
adc
test
add
sub
pop
loope
pop
xor
push
and
mov
fildll
mov
sub
in
cltd
inc
outsb
jo
mov
mov
cmpsb
movsb
ljmp
ds
sub
dec
or
xlat
fildl
sahf
or
rorl
jb
gs
xor
test
ljmp
add
addb
fsubr
lcall
std
nop
loopne
in
pop
js
xor
xchg
repz
push
xchg
scas
pusha
inc
sub
pop
imul
mov
insb
xchg
rcr
push
sub
stos
movsl
mov
daa
mov
adc
jge
cmp
jns
stos
sbb
pop
fs
test
imul
sub
jg
repz
insl
or
push
call
jns
pop
mov
sahf
ja
arpl
aad
sub
pop
cmp
inc
lret
cmp
nop
jecxz
nop
mov
mov
clc
inc
addb
add
ljmp
iret
mov
notb
mov
push
and
cmp
xchg
inc
jg
inc
in
ja
push
jbe
and
xor
rcrl
sbb
push
sbbl
dec
add
sbb
adc
rcrl
fdivs
add
sub
pop
mov
pop
pop
and
test
mov
mov
push
mov
fists
popa
lods
inc
ss
mov
fadds
mov
lds
mov
adcb
pop
cmpsl
rclb
mov
xchg
mov
movsl
add
mov
cmp
std
adc
mov
outsb
dec
jg
inc
pop
pop
push
jo
stos
jne
cmp
outsb
cwtl
test
sahf
push
mov
mov
stc
movsl
jno
jnp
mov
inc
je
call
lds
lods
sub
hlt
xchg
xor
mov
ficoml
adc
cmp
popf
idivb
lahf
mov
xlat
nop
jecxz
scas
xchg
addb
xchg
sti
fisttpl
in
in
inc
mov
mov
and
mov
or
cli
fs
jb
bound
divl
test
ror
fadd
stc
push
ror
out
out
pop
xlat
jg
jge
imul
lds
sbb
stos
decl
call
stos
ljmp
sbb
adcl
cmp
imull
pop
in
mov
mov
add
pop
movsb
stos
xchg
push
cmpsl
push
cmpw
xor
or
pop
push
ljmp
xor
jae
sub
push
mov
mov
sbb
aaa
clc
dec
mov
cli
pop
test
sub
jle
repz
repz
rcr
mov
je
inc
mov
push
dec
jge
out
or
push
fimull
cld
sub
cltd
pop
jge
cmc
subl
jp
sbb
sub
dec
scas
xchg
out
test
xchg
dec
cli
fs
jge
orb
xchg
cli
pop
jnp
out
insl
push
jno
jl
mov
cs
jb
push
xchg
in
ja
push
adcl
in
mov
sti
cmp
lea
add
outsl
out
mov
fwait
push
push
aad
test
sahf
xchg
stos
pop
dec
mov
sub
inc
cltd
sub
int3
pop
pop
add
add
out
mov
pop
push
lret
or
or
mov
adc
sar
sti
in
mov
push
popa
mov
pop
sub
cmp
mov
clc
shlb
dec
pop
lds
jno
add
out
in
jb
xor
sbb
and
jns
pop
sub
mov
insb
data16
inc
cmp
xchg
and
cmp
subb
mov
hlt
xchg
insb
cmp
in
push
xor
mov
lds
pop
insb
mov
sub
and
in
lret
pop
mov
pop
popl
leave
push
sbb
pushf
pop
mov
idivl
neg
cmp
xchg
pop
pop
xchg
ss
mov
cmc
cltd
dec
ret
sbb
mov
iret
inc
jp
cmpsl
add
inc
mov
cmpsb
repz
orb
int3
hlt
cmp
out
cmp
pop
sub
sub
lahf
push
push
call
stos
jnp
fnstcw
ja
out
jmp
dec
iret
iret
and
ds
ss
cld
sbb
mov
aad
shll
aaa
in
lret
test
pop
mov
sti
aad
shll
aaa
cmp
lret
or
xchg
push
shlb
mov
ja
lock
fistps
iret
mov
mov
mov
mov
sahf
scas
iret
jp
cmp
jns
inc
xor
xchg
xchg
pop
in
xor
iret
ds
daa
and
inc
ss
xchg
mov
dec
pushf
push
jle
mov
mov
cmpsl
popa
sbb
xchg
lods
sbb
adc
test
shll
push
out
push
add
xor
mov
dec
out
lock
gs
or
sub
fldenv
std
mov
out
mov
dec
rol
gs
addr16
xchg
lcall
stc
jmp
adc
lahf
ret
lcall
add
jecxz
mov
adc
jae
sub
sbb
or
push
xchg
cltd
lock
dec
push
subl
mov
or
inc
and
push
outsb
loop
push
mov
push
lret
mov
xor
lock
mov
fbld
popl
or
cmp
jbe
jge
dec
push
lea
arpl
fbld
pushl
jmp
pop
jmp
lds
das
push
xor
cmp
xlat
rclb
pusha
dec
mov
sti
jg
psllw
dec
roll
sub
jecxz
adc
int3
xlat
mov
push
jp
pop
add
imul
add
jp
jae
dec
pop
xchg
ficoml
adc
cmp
test
mov
dec
mov
nop
mov
cltd
and
xchg
xor
dec
jns
stos
ljmp
ret
lea
ret
rclb
xor
pop
sbb
ss
xlat
mov
dec
daa
dec
scas
icebp
shlb
jl
fwait
dec
or
jle
jmp
inc
jecxz
aam
incl
mov
add
mov
adc
jl
lock
dec
fimull
neg
mov
fs
pop
inc
outsb
fsubrl
es
lods
and
scas
fs
js
mov
hlt
sti
mov
scas
mov
aas
aam
or
mov
out
lods
lret
mov
loop
push
clc
sbb
insl
hlt
ret
loope
ds
test
lea
mov
jae
mov
and
imul
cld
cmpsl
jns
pop
lahf
jns
lods
dec
mov
outsl
bound
inc
push
stos
cmc
mov
ds
pop
mov
pop
mov
lar
xchg
xchg
cmc
or
pop
hlt
mov
insb
insl
mov
test
fstps
pop
aam
call
inc
xchg
testb
or
int
lea
stc
nop
stc
and
sti
hlt
sbb
fs
pop
setb
lret
xor
xchg
aad
addl
or
inc
sub
ss
loop
dec
inc
jecxz
xor
jne
fwait
lods
or
rcl
aam
cmp
mov
xchg
sub
sub
pop
sbb
or
push
inc
jb
adc
inc
sub
mov
jle
lock
mov
popa
and
or
dec
inc
in
xor
pushf
push
cmc
xor
lds
popl
jle
cs
add
mov
jbe
push
pop
pop
loop
mov
mov
dec
or
sahf
repnz
arpl
xor
addl
enter
push
add
xchg
lcall
lods
fninit
xor
dec
sbb
rclb
mov
adc
inc
xchg
cwtl
ret
imul
dec
mov
mov
mov
or
inc
mov
mov
aad
add
les
mov
mov
push
cmp
fcmovb
xor
xor
rdtsc
or
aam
ficoml
scas
outsl
pop
mov
and
leave
scas
stos
mov
push
mov
inc
push
pop
xor
in
pop
sbb
fisubl
cmp
inc
add
inc
pop
test
add
stos
pop
nop
or
pop
jl
push
xchg
loope
xchg
mov
je
inc
arpl
cld
sar
ret
or
sub
sub
es
dec
adc
push
mov
aam
dec
push
pop
inc
mov
aad
mov
sbb
inc
fisttpll
jnp
push
pop
sbb
mov
in
or
and
out
call
xchg
xchg
jmp
pushf
or
mov
push
adc
pop
orb
arpl
jbe
pushf
and
gs
outsl
loopne
dec
leave
test
mov
jmp
pop
xcrypt-ctr
cmpsl
pop
mov
lods
loop
mov
inc
xchg
das
cld
mov
fcoms
jnp
jno
adc
sub
push
add
scas
testl
mov
ret
jb
dec
xor
aad
scas
push
jge
inc
mov
xor
sub
inc
mov
mov
cmp
sub
js
aam
nop
mov
lods
addr16
adc
flds
mov
push
nop
movsl
insb
cmp
mov
imul
xor
in
insl
pop
add
arpl
popf
ds
mov
movb
scas
mov
add
sbb
leave
mov
int
rcll
je
lcall
or
insl
xlat
fcmovne
jnp
test
loopne
jg
js
jmp
xchg
pop
xor
push
jae
cmp
mov
and
or
mov
fwait
mov
lcall
cs
push
loopne
popf
adc
call
cmp
sub
repz
add
iret
add
mov
mov
pop
mov
pop
rorb
pop
out
push
sbb
xchg
iret
mov
cld
sub
pop
xchg
adc
rolb
mov
aas
decl
sbb
sbb
aaa
adc
push
mov
movsl
repnz
mov
and
jno
loopne
cli
mov
dec
mov
push
fld
adc
xchg
int
jle
icebp
and
fcomps
push
pop
aaa
sti
inc
xor
je
xlat
mov
jb
xor
scas
iret
sbb
addr16
mov
lods
jmp
lds
xchg
add
lds
popa
fwait
push
mov
add
jmp
lahf
loope
dec
xchg
data16
adc
and
cmp
cmc
inc
fucomp
dec
lock
add
xchg
stc
jge
lcall
femms
pop
mov
pop
es
addr16
test
mov
sub
es
and
inc
xor
call
enter
ja
shld
jg
out
jle
sbb
addr16
jo
insl
cli
xchg
sub
adc
leave
nop
push
inc
cwtl
in
push
xchg
nop
icebp
gs
push
scas
or
xlat
mov
movsb
lcall
icebp
cltd
xor
in
lock
int3
hlt
out
mov
cld
ficoms
cld
ficoms
call
daa
aad
cld
pop
sbb
push
add
js
add
rcrl
mov
sti
or
xchg
push
jle
xor
push
sub
rcll
stos
lds
mov
mov
outsl
add
mov
out
pop
push
jle
dec
or
rorb
push
xchg
pop
mov
mov
mov
mov
jbe
xor
call
jno
sub
sbb
psubsw
sub
ret
mulb
xchg
mov
mov
addr16
xchg
lods
inc
xchg
adc
cli
lahf
fistps
lods
nop
cltd
leave
adc
push
lds
sub
jo
mov
jle
clc
cwtl
or
push
sbb
dec
jns
adc
push
xor
push
xchg
pop
push
push
xchg
xchg
lods
mov
stos
lret
addr16
xor
cmp
add
addb
aaa
push
xchg
jg
sub
rcl
push
jecxz
leave
cmp
or
stos
rcrb
dec
dec
cmc
sub
mov
cmpsb
sbb
lret
test
jb
mov
fwait
rcrl
lret
movsb
in
cwtl
mov
js
out
call
shlb
add
dec
dec
mov
ret
sub
loopne
push
daa
cs
outsl
lock
icebp
cmp
loopne
jnp
and
gs
sub
cmpsl
pop
and
sub
test
lret
bound
jns
sbb
lret
push
sub
add
push
or
or
inc
mov
sahf
cmp
push
test
and
xchg
xor
xlat
aad
adc
iret
lea
jg
pop
mov
mov
inc
xor
out
testl
icebp
mov
flds
push
mov
jmp
sub
xchg
dec
sub
push
lret
addr16
mov
sub
int3
lret
xchg
xlat
bound
test
adc
je
shll
repz
or
data16
push
outsb
mov
bound
insl
mov
scas
cmp
dec
push
push
sub
dec
sbb
fcoms
mov
insl
push
movsl
rolb
push
imul
test
inc
push
in
sub
test
fidivrs
push
hlt
repz
aas
push
outsb
scas
out
je
test
and
mov
mov
cmpsb
inc
jbe
cmpsb
cmp
and
shl
jecxz
cmc
add
inc
outsb
jae
xor
in
mov
mov
mulb
mov
in
inc
pop
fs
mov
test
or
dec
jb
imul
sbb
push
push
icebp
test
and
cmc
stos
push
imul
jns
and
in
stos
stos
cmp
out
dec
xor
jbe
out
mov
inc
jg
fisubl
xchg
fs
sahf
orl
or
mov
mov
test
popa
enter
imul
or
add
test
add
add
call
inc
inc
and
jnp
jle
sub
aas
add
addr16
xchg
es
inc
sub
or
xorb
lock
sbb
data16
das
leave
sub
add
rolb
insl
cld
std
cmpsb
cld
outsb
xor
insl
je
dec
ss
pop
shrl
xchg
jno
jle
sarb
adc
push
adc
jle
callw
cmp
fs
lods
xchg
add
lock
shll
imul
out
xchg
and
repz
add
lods
pop
sub
je
and
faddp
lods
mov
repnz
mov
shlb
inc
inc
clc
adc
jle
insl
jns
mov
fisubrs
das
decb
test
or
lds
imul
xchg
pop
cmpsl
loop
lcall
mov
ljmp
push
shrb
fnstenv
pop
adc
pusha
sub
cwtl
sbbb
rcr
fcomi
mov
jns
add
adc
addb
push
push
mov
insb
jnp
mov
pop
rclb
and
test
add
push
out
cmp
cwtl
fdiv
push
mov
stos
ret
adc
out
cmp
or
xlat
jnp
or
mov
push
xchg
cmpb
xor
cli
stc
xor
add
and
nop
jmp
sub
xchg
pop
add
cli
insl
sub
test
add
mov
sbb
je
loop
jb
in
xchg
fnsave
dec
lcall
push
push
sub
xor
cli
js
mov
sub
in
adc
adc
push
inc
movsl
cmp
jae
test
dec
inc
repnz
or
inc
mov
jnp
shrd
xchg
inc
aas
jg
and
cwtl
imull
jns
xchg
notb
adcl
stos
ljmp
scas
jp
addr16
xorb
jl
dec
das
clc
dec
cmp
dec
out
or
das
dec
gs
loope
call
adc
mov
mov
xor
xor
xor
iret
or
in
push
pop
fstps
pop
nop
and
jae
cwtl
sbb
and
xchg
pop
xor
adcl
mov
repnz
cmp
xchg
aas
inc
leave
lahf
pop
xchg
aas
ja
fs
sub
mov
js
dec
mov
jbe
dec
arpl
loopne
jbe
ja
icebp
jnp
xchg
div
jnp
mov
pop
aad
mov
lock
mov
fst
push
fmul
imul
pop
inc
mov
adc
jbe
in
cld
and
jbe
addb
mov
mov
pop
enter
repnz
and
mov
insl
jge
fistps
and
mov
lcall
mov
outsb
ret
fstpt
clc
in
in
fwait
push
fcmovne
sub
fisttpll
mov
fsubs
mov
pop
fiadds
push
jae
sub
js
xlat
cmp
jae
xchg
adc
pop
arpl
test
and
mov
and
ljmp
mov
in
xor
cmp
adc
push
xchg
mov
out
and
and
mov
or
fwait
and
jg
xor
pop
sbb
fimuls
jecxz
mov
cmpsb
pop
pusha
cmp
movsb
cmp
xchg
hlt
xor
lahf
cli
data16
test
mov
decb
negl
fldl
out
add
mov
push
subl
pop
inc
jmp
inc
fisubrl
sbb
push
mov
xchg
mov
inc
push
aam
daa
pop
jno
outsl
push
or
xchg
sub
je
or
pusha
subl
push
pop
aam
add
inc
das
dec
or
xchg
or
test
rolb
hlt
mov
jp
dec
call
movsb
test
sbb
jnp
std
into
push
mov
jl
insb
push
mov
pop
or
test
pop
aad
mov
mov
xchg
shrb
aam
adc
xchg
movsl
mov
fisttpll
inc
xchg
test
dec
enter
arpl
mov
daa
enter
adc
adc
pusha
stc
jge
std
ss
insl
push
mov
adc
pop
mov
in
pop
ds
push
xchg
lahf
lock
aaa
and
cld
scas
rolb
jmp
aaa
test
xchg
mov
and
or
add
test
aaa
outsb
jo
dec
dec
call
cltd
pop
imul
xor
sahf
cmp
in
pop
pushf
insl
mov
stos
or
dec
fwait
nop
fcomip
jg
cmp
add
cwtl
sbb
push
and
rclb
sbb
mov
inc
ja
mov
cli
or
xor
scas
clc
xor
outsl
and
dec
xor
inc
cmpsl
pop
es
insb
dec
mov
lahf
add
mov
leave
clc
jp
sub
sub
or
subl
and
pusha
jne
xlat
dec
das
xor
scas
inc
mov
mov
inc
and
xchg
or
cwtl
imul
xchg
or
mov
cmp
cmpsl
pop
aaa
test
cmp
sub
clc
fdivs
lret
in
push
add
or
jbe
sub
cli
inc
in
leave
inc
sub
std
cld
mov
mov
cmp
push
test
adc
aad
int3
stos
cmc
leave
out
push
enter
ljmp
insb
xor
mov
cmp
mov
das
cmp
cmpsl
or
push
fmuls
push
mov
repnz
cmp
mov
xchg
sub
mov
test
test
mov
jp
ss
sbb
dec
add
add
dec
push
aam
lret
inc
mov
push
in
std
add
push
gs
rorb
and
pop
loopne
mov
sarl
enter
nop
dec
xor
fisubrl
dec
push
or
mov
adc
mov
dec
adc
pop
lods
data16
sub
fidivs
lret
out
sarb
and
popf
ret
cmp
jb
ja
data16
in
mov
shrb
test
fdiv
pop
cmc
out
lea
addb
mov
or
test
lock
push
xchg
in
jg
testb
ljmp
mov
push
cmpsl
int
data16
xchg
push
inc
push
cmpsl
dec
xchg
daa
xchg
ds
jmp
mov
jmp
jge
xor
inc
scas
in
lcall
or
mull
jmp
sub
jne
inc
popf
adc
and
pop
jo
xchg
mov
jns
mov
and
repz
xchg
idivb
test
ds
shr
imul
mov
mov
push
mov
aad
rolb
or
add
add
stos
adc
lds
mov
jno,pn
outsb
sub
imul
das
je
or
mov
das
in
jo
call
insl
pop
xchg
pushf
sub
jg
sub
jle
outsl
subb
and
das
scas
sub
int
bound
jl
pop
cmp
mov
in
orl
push
not
sub
pop
lret
push
in
pusha
push
movsl
add
ljmpw
outsl
ss
cmp
repnz
and
loope
push
arpl
loope
pop
daa
push
xchg
cmp
cwtl
xor
xchg
fdivr
pushf
cltd
push
inc
adcl
mov
ds
dec
sub
lds
mov
pop
loopne
dec
mov
bound
push
mov
adc
repnz
push
ljmp
imul
lods
pop
cmpsb
add
mov
inc
popl
add
mov
dec
adc
or
stos
popa
mov
testl
in
test
jne
sub
add
stc
ss
mull
mov
dec
sbb
cli
roll
out
rcll
mov
mov
mov
sbb
jmp
test
loope
fs
cmc
inc
push
sbb
or
inc
sbb
mov
cmp
xlat
shrl
imulb
adc
mov
out
out
cmp
in
xor
cmp
mov
jg
inc
add
lock
mov
push
mov
lods
dec
sti
lods
sub
cs
sbb
and
dec
ret
pop
jne
inc
test
outsl
push
cmp
nop
into
out
push
loopne
push
pop
ret
movsb
and
xchg
xchg
bound
mov
xchg
incl
in
iret
stos
aas
loope
outsl
and
jb
cltd
mov
dec
in
hlt
inc
pop
enter
pop
push
adc
dec
inc
lcall
lds
mov
pop
mov
pop
pusha
inc
into
ret
mov
adc
not
adc
repz
push
pop
xchg
mov
movsl
mov
inc
fwait
lods
pusha
push
rcl
outsb
cltd
push
sbb
mov
pop
lock
stc
adc
sub
cmp
loope
xor
ret
outsb
imull
js
cld
rcll
fdivrl
rcr
jp
repz
xchg
int3
addr16
daa
push
adc
cmpsl
cmpsl
inc
stos
sbb
xchg
pop
adc
adc
lret
mov
outsl
xor
lods
push
mov
adc
or
data16
sarb
sbb
mul
push
bound
dec
pop
push
sahf
dec
enter
sbb
sub
das
enter
dec
sbb
xchg
outsb
rorb
adc
das
mov
pushf
and
mov
xor
clc
test
inc
repz
test
mov
push
lock
mov
ret
insb
xlat
dec
and
addl
sub
add
mov
xor
and
mov
adc
mov
mov
xchg
pusha
xor
sbb
js
mov
inc
mov
mov
out
lock
lock
ret
xlat
mov
dec
mov
push
pop
ds
jo
sahf
sbb
shll
pop
into
cwtl
arpl
repz
outsb
movsb
out
hlt
lods
movsb
cmpsl
sahf
adc
inc
imul
pop
and
push
into
xor
jae
sahf
mov
in
pop
lahf
pushf
arpl
push
cmp
dec
icebp
int3
cmp
out
cmp
mov
repz
aad
inc
add
jg
mov
dec
iret
sbb
dec
hlt
inc
hlt
mov
mov
lret
std
jg
sahf
cltd
lds
xlat
rclb
iret
fwait
hlt
jl
ljmp
shlb
inc
pusha
mov
pop
push
testl
cmp
imul
mov
les
push
stc
dec
push
jo,pn
lahf
xlat
add
js
jg
adc
mov
dec
and
in
sbb
movl
aas
inc
jmp
out
push
mov
mov
and
inc
sbb
in
in
jle
insb
nop
cmc
loope
leave
or
mov
lock
sbb
negl
ds
jle
in
pop
loope
cmp
jns
movsb
mov
dec
test
add
dec
inc
es
mov
xchg
jmp
imul
jmp
dec
leave
out
pop
jecxz
arpl
outsl
xor
push
aam
dec
or
pop
es
push
jb
sub
mov
bound
movlps
ss
dec
mov
push
adc
imul
js
push
lds
and
xlat
dec
or
int
nop
lret
jge
xchg
out
ja
out
cmc
xor
pop
inc
add
adc
jmp
aaa
push
push
fimull
cmp
dec
adc
not
les
repz
in
jmp
sbb
pop
mov
cmp
pop
inc
mov
jge
cltd
ret
xchg
xor
push
and
mov
xchg
jns
testb
dec
mov
mov
sarl
dec
mov
fisubl
sub
sbb
je
test
jmp
sbb
push
fdivl
lea
xlat
in
xchg
dec
loope
xor
cmpsb
inc
cmp
dec
icebp
and
add
loopne
dec
jp
pop
icebp
sub
movsl
push
inc
mov
pop
jmp
dec
adc
adc
or
or
insb
xchg
movsl
js
sbb
dec
enter
sub
in
inc
nop
jbe
adc
inc
adc
insl
ljmp
sbb
shr
pop
cmp
mov
adc
in
cmpsl
dec
mov
mov
jge
jp
clc
cwtl
cmp
outsl
repnz
dec
sub
es
nop
xchg
and
insb
hlt
insl
imull
dec
push
test
jae
mov
mov
push
mov
or
insl
in
dec
pop
sbb
mov
and
xchg
mov
lds
nop
or
out
mov
mov
daa
addl
adc
dec
test
pop
roll
in
inc
pop
loope
adc
in
adc
sbb
notl
xlat
repnz
dec
xchg
cmp
inc
pop
in
sbb
frstor
jbe
hlt
or
inc
and
fs
xor
xchg
stos
push
jbe
jo
jge
xor
mov
or
mov
das
jp
popa
nop
ss
and
sub
gs
aam
cmp
xor
mov
scas
call
dec
enter
push
sbb
xchg
mov
pop
scas
popf
sarb
xor
ret
and
jne
push
fadd
sub
sub
in
int3
fmuls
push
nop
add
mov
push
in
xor
sti
sub
std
mov
xor
cltd
cld
fidivrs
add
add
cmpsl
iret
cmp
xchg
jmp
cli
add
lcall
jno
inc
into
rcrl
fs
dec
out
stc
or
pop
mov
ror
and
test
pop
jle
fidivl
lea
inc
ss
dec
repz
mov
xchg
sbb
adc
popf
inc
call
je
mov
sbb
mov
movsb
or
outsl
cs
pop
lods
mov
cltd
lret
aam
aam
les
and
ret
or
xor
dec
sub
add
dec
out
leave
cmp
imul
xlat
jmp
pop
lods
je
fwait
rcrb
dec
push
je
ds
xor
mov
std
mov
jb
cmp
jmp
popa
push
mov
push
pusha
popa
push
cmp
add
inc
into
ja
inc
sbb
pop
or
cmp
push
xchg
jnp
cwtl
adc
mov
or
aad
dec
inc
loope
mov
outsl
jle
lret
lahf
loop
xchg
jno
mov
add
xchg
mov
in
or
mov
shlb
pop
sub
lcall
nop
sbb
jno
cmp
fisttps
mov
mov
test
in
mov
iret
mov
fcmovb
lods
cmc
mov
jmp
mov
pop
test
dec
in
scas
jnp
fs
or
cmpsb
and
inc
stc
sbb
mov
cld
sub
jmp
xchg
jle
imul
xor
mov
insb
pop
xchg
ss
pop
push
and
jb
xor
aas
imul
movsb
adc
mov
icebp
test
inc
cmp
xor
xor
mov
fdivs
push
lret
add
das
test
ljmp
insb
mov
or
cmpsb
inc
mov
dec
out
dec
and
mov
pop
arpl
stos
imulb
mov
ds
push
xchg
pop
cmc
jb
mov
adc
and
cmp
fsubrl
or
bound
sahf
scas
pop
sbb
lea
sub
push
shlb
jns
or
jne
in
push
dec
scas
cs
lret
pop
and
inc
or
push
mov
push
jo
mov
movl
cld
inc
inc
push
std
jnp
push
adc
add
mov
enter
outsl
inc
enter
xchg
test
push
mov
cmp
dec
pop
aad
stos
sbb
repnz
lahf
push
enter
inc
xorb
cltd
pop
push
push
pusha
push
push
jnp
push
push
sbb
jb
jge
mov
cli
das
xor
into
hlt
in
aam
fnstenv
or
aas
jae
mov
aad
jno
xchg
notb
fists
dec
rcrl
arpl
xchg
fs
push
lea
test
pop
xor
xchg
in
cmc
push
sub
leave
test
adc
mov
jno
shrb
rolb
jno
sbb
out
ror
or
cltd
or
lock
pop
pop
sbb
mov
xor
cmpsl
in
les
mov
pop
cwtl
pusha
inc
je
aad
icebp
in
add
scas
xchg
loopne
sub
rcrb
std
pop
mov
fucom
shll
and
xor
insb
push
lret
daa
and
jns
data16
mov
imul
pushf
sti
push
inc
xor
test
lret
popf
mov
mov
aas
jno
rcrl
fisubs
xor
xor
cmp
jno
or
stos
add
mov
push
xor
daa
loop
pop
insb
pusha
add
mov
xchg
mov
xor
fidivl
pop
movsb
jecxz
push
xchg
repnz
das
cmp
shll
cli
pop
subb
sub
and
out
dec
xor
pop
mov
loop
int
lds
sub
fs
icebp
lret
mov
xchg
ja
lods
in
sub
insl
push
cs
jle
xchg
sbb
aad
push
in
lahf
xor
sbb
fistpl
xor
or
inc
enter
mov
in
repnz
mov
xchg
cmc
push
test
adc
cmp
and
push
cmp
mov
in
jb
jmp
push
jne
push
xchg
sti
sti
push
jno
pushf
push
xchg
shrb
fimuls
ljmp
bound
xchg
mov
sbb
rclb
test
cmp
jnp
inc
flds
adcb
xor
call
lret
xchg
mov
mov
daa
or
lods
push
xlat
fsubl
add
mov
fldt
mov
shll
call
scas
into
push
dec
cs
add
xor
stos
inc
cmp
mov
push
cmp
mov
dec
mov
adc
sbb
lret
sbb
test
fwait
jle
aaa
insb
sub
inc
inc
cmpsl
aad
xchg
mov
mov
jle
out
dec
pop
pushf
sti
jmp
jne
iret
out
into
std
repnz
out
into
jae
dec
mov
pop
pop
sbb
insl
sub
lods
push
loop
jb
shlb
or
test
pop
test
ljmp
mov
xchg
fidivrs
stos
hlt
in
push
cmpsb
cwtl
cmpsl
repz
rcrb
and
push
mov
out
decb
and
xchg
gs
xor
fists
shrb
cmp
ljmp
or
jns
pop
xchg
leave
jmp
pop
out
xor
xor
mov
add
mov
test
cmp
sub
cmpsl
sahf
sub
cmp
loopne
jge
sbbb
jge
inc
out
lods
mov
add
xchg
cmpsb
pop
xor
repz
mul
and
xorl
cs
sbb
push
inc
aam
push
js
pop
insb
das
popa
lods
add
xor
push
pop
mov
sbb
xchg
mov
pop
inc
jbe
xchg
cmp
xchg
cld
jl
call
mov
pop
fwait
mov
arpl
in
hlt
add
inc
lahf
pop
insl
ret
lahf
pop
and
jge
and
xchg
jne
adc
test
dec
in
and
cmp
mov
add
lods
xchg
pushf
add
cwtl
lret
push
test
cld
outsl
inc
fs
push
test
scas
xchg
ja
xchg
pop
icebp
sbb
mov
sub
in
xor
jo
data16
lds
and
insl
loope
jns
cli
or
sub
sub
mov
mov
mov
aas
shl
mov
mov
xor
into
mov
gs
mov
sub
jmp
push
mov
mov
push
arpl
bound
xchg
sbbb
push
xor
cmp
cli
lods
outsb
lods
dec
jne
xor
cs
lahf
loope
jecxz
shlb
cmpsl
mov
movsb
addr16
cmp
xlat
test
pop
mov
jge
loope
out
pop
xchg
inc
mov
or
adc
rorb
mov
ret
fsubrs
add
in
xchg
inc
out
pop
out
mov
js
es
clc
adc
lret
sub
push
gs
xchg
imul
test
addr16
xor
in
test
repnz
aas
pop
addr16
inc
xchg
jg
movsl
mov
push
xchg
mov
push
adc
ret
sbb
fadds
xchg
jb
scas
mov
sahf
sub
inc
test
push
sub
mov
filds
adc
bound
in
fcoml
into
jns
cmpsl
and
test
test
inc
ret
mov
aas
pop
popf
jmp
inc
and
jns
push
or
sub
negl
je
mov
sub
lock
test
ficoml
push
sbb
xchg
push
or
mov
cmp
aaa
gs
movsb
pop
fstps
int
andb
movsb
inc
cwtl
sbb
aam
pop
pop
enter
jg
mov
in
out
cltd
push
mov
iret
scas
xchg
jge
xchg
fwait
cmp
mov
pop
rorl
out
and
mov
sub
xor
mov
inc
jo
sbb
loope
dec
pop
stos
movsl
jge
push
xchg
lds
idivb
jo
test
hlt
or
fdiv
out
cmp
push
shll
loopne
loope
inc
dec
aad
xchg
add
inc
jmp
filds
fwait
nop
mov
lcall
xchg
les
xchg
adc
dec
lret
mov
mov
add
hlt
mov
pop
das
aad
pop
aad
loop
scas
ror
into
scas
repnz
jg
and
or
xor
pushf
test
lods
sub
push
xchg
fisubs
push
add
ret
pushf
fildl
mov
pop
push
pop
push
stos
rcl
push
or
jp
rolb
sbb
adc
and
push
and
lock
ljmp
js
clc
es
call
or
xor
arpl
repz
sar
ror
cmp
sarl
mov
jl
shrb
cmpsl
lea
push
les
lret
shrb
pop
sub
jno
or
inc
xor
xor
add
push
inc
popf
cli
push
aad
push
jg
scas
sub
popa
cmc
mov
add
add
ds
jl
jb
mov
fidivl
aaa
ficompl
lods
lods
or
in
and
sub
and
xchg
push
mov
cmp
cltd
xchg
or
push
cmp
lods
pop
mov
cwtl
mov
cmc
mov
mov
daa
mull
repnz
pop
in
jo
and
mov
push
aaa
xchg
add
or
lahf
fcmovne
sbb
xor
xor
stc
push
ds
insb
xchg
shll
fs
fld
iret
loope
pop
sbb
lds
cmp
or
fdivrl
jecxz
adcb
adc
cmc
lock
loopne
dec
jl
inc
pop
mov
mov
pop
or
fistpll
scas
and
jl
push
sub
push
pop
and
pop
icebp
jae
test
xor
pusha
fdivs
stc
sub
pop
sbb
pop
and
jl
xchg
adc
ret
fs
xchg
aaa
lret
push
insl
and
scas
ja
inc
inc
mov
cmp
and
and
out
mov
jo
cmp
mov
movsl
mov
jbe
in
inc
cli
lcall
xchg
cmc
into
mov
xchg
mov
sbb
test
arpl
or
inc
roll
xchg
addr16
pop
sbb
cmp
mov
jns
pushf
cltd
test
pop
mov
psraw
jnp
nop
lea
out
movsl
in
mov
loope
mov
sbb
pop
push
test
aaa
sub
hlt
push
sahf
lcall
dec
test
xor
xor
movsl
cs
pusha
aaa
aas
xor
lret
and
jl
push
add
push
fdivrl
sub
nop
push
mov
arpl
mov
sub
scas
les
fstps
ja
push
mov
cli
scas
xchg
inc
in
cltd
fs
jl
insl
xor
lret
rol
lods
lock
mov
add
gs
orl
inc
xor
es
lcall
xlat
mov
xor
loopne
leave
shll
data16
adc
xor
insl
mov
fisttps
dec
arpl
insl
mov
jmp
sub
adc
pop
xchg
inc
inc
lods
mov
adc
popf
xchg
jl
out
je
add
js
enter
int3
das
test
pop
loope
jnp
mov
pop
into
test
mov
dec
int3
xchg
pmulhw
and
mov
shrb
mov
cli
iret
sub
jns
adc
mov
mov
xchg
fsubrl
sbbl
clc
mov
addr16
repz
xor
rcll
jecxz
cmp
pop
fildl
xorb
inc
fdivrs
xchg
iret
imul
repz
stos
xor
imul
cwtl
dec
inc
fimull
mov
outsb
cmp
sbb
data16
cld
dec
xor
pop
cmp
lahf
mov
hlt
outsl
mov
in
jae
out
test
outsl
sub
aas
lret
test
mov
inc
sub
ret
and
insl
cmpsb
fwait
arpl
es
cmp
jno
mov
mov
add
and
cmp
dec
jecxz
test
test
je
mov
in
push
setg
enter
test
stos
mov
insb
jnp
xchg
cmp
mov
adc
push
mov
push
stos
adc
jle
jecxz
cmp
insl
fcmovnbe
fldt
cmpsl
cli
xor
aas
cmp
iret
repz
scas
jl
jl
div
xchg
and
in
xchg
subb
mov
xchg
shl
sti
sahf
stos
inc
pushl
mov
shlb
sub
es
test
es
aad
fistpll
inc
xchg
repnz
fmuls
lret
popf
jne
push
ja
pop
xchg
andl
pushf
mov
mov
ret
scas
outsb
dec
jns
xchg
push
xchg
push
cmc
mov
movsb
mov
lds
pop
gs
loope
pop
fnstcw
xor
mov
test
adc
bound
mov
xorl
mov
add
push
insl
outsb
popf
stos
pop
fimull
stos
test
mov
or
mov
mov
pop
dec
xchg
addr16
fidivrs
aad
out
rclb
shlb
dec
add
test
mov
push
mov
mov
mov
jecxz
jb
cmp
adc
fs
jo
repz
popf
iret
or
mov
mov
dec
pop
push
outsl
ljmp
movsb
dec
dec
outsl
cld
test
pushf
nop
movsl
jp
int3
jnp
in
repnz
data16
int3
mov
clc
fsubr
leave
mov
push
sbb
cmp
inc
dec
sub
add
into
nop
pop
cmp
ret
in
les
pusha
sub
mov
cmp
ret
cmp
out
aad
movsl
inc
test
es
repnz
inc
insb
xchg
je
mov
idiv
in
xchg
xlat
arpl
mov
or
mov
rorb
sub
xorl
fbld
adc
mov
neg
lcall
addr16
cmp
dec
mov
fisubl
rorb
movsb
enter
inc
dec
int3
js
mov
insl
ds
sub
pusha
lods
nop
fwait
pusha
shll
push
mov
lcall
dec
rorl
retw
arpl
lahf
stc
insb
jo
xchg
lods
out
pop
pop
mov
adc
cmp
in
or
outsb
pop
push
push
shlb
push
stos
pop
adc
mov
loope
arpl
lods
mov
or
hlt
es
mov
aad
loopne
or
divb
bound
xchg
ljmp
cmp
lret
div
push
sarb
insb
xor
cld
lret
mov
cld
jmp
push
push
lea
bound
aaa
ss
test
ret
cmp
cwtl
aam
sub
mov
les
inc
jne
mov
shlb
cmpsl
cmp
inc
shll
mov
and
inc
pop
mov
adc
ss
into
and
add
add
iret
xor
in
and
stos
bound
mov
fimull
in
jnp
clc
cmp
mov
mov
outsb
out
xor
adc
clc
aam
ret
push
fwait
je
or
das
lock
pop
daa
repz
repz
fcmovbe
cmpsb
popf
shl
inc
sbb
mov
pop
jmp
cs
pop
test
mov
sbb
aaa
jmp
out
test
lret
insb
xchg
push
jg
icebp
das
cs
and
iret
adc
aad
push
fistpl
gs
gs
test
notl
aaa
pop
lods
cmp
sbb
cmp
sbb
add
mov
inc
rorl
ret
xor
vpshufhw
mov
rcrb
xchg
pop
add
jbe
in
push
hlt
add
subl
push
fst
movsb
imul
pop
add
pop
lods
fisubrl
cmp
mov
pop
clc
data16
mov
psubsb
cmpsb
jae
jmp
push
adc
pop
push
or
imul
inc
in
jne
cmp
ret
icebp
mov
mov
clc
mov
or
int
pushf
lock
and
mov
rcrb
cmp
pop
test
pop
pop
xor
repz
cld
adc
adcb
loopne
dec
int3
mov
fdivrl
lret
aaa
sarl
bound
popa
xchg
sub
push
jmp
imulb
push
pop
in
mov
pop
movsl
jge
ret
out
pop
scas
or
clc
mov
stos
or
rcll
fcmovnb
xor
xor
sub
repz
jb
in
push
popa
ja
out
jne
sub
movsl
mov
or
lds
aam
mov
inc
cmp
hlt
and
fcos
jbe
out
mov
lret
sbb
out
pop
push
int
stos
insl
jl
and
in
jg
jns
leave
mov
negb
and
pop
popa
insb
arpl
sarl
shl
cmp
push
xor
push
mov
xchg
xor
das
std
add
xor
ficoml
int
mov
movsl
lea
push
nop
cmc
or
jbe
sbb
adc
sbb
dec
dec
out
jbe
loop
pop
iret
test
inc
add
add
push
jp
data16
mov
cmpsl
in
outsl
shl
aaa
jmp
and
pusha
lret
adc
or
jne
aad
or
and
dec
push
xchg
pop
inc
in
das
mov
adc
push
clc
sub
mov
xor
push
add
repz
lds
mov
or
stos
fidivl
inc
inc
adc
push
adc
inc
add
popa
or
mov
inc
sub
rolb
xchg
fiadds
cs
enter
or
inc
inc
std
pop
xor
mov
mov
bound
es
ljmp
pop
push
sub
inc
leave
mov
sti
mov
push
cld
lock
out
jmp
and
es
sar
jnp
pop
mov
out
iret
mov
adc
sub
push
xchg
stc
cmpsl
mov
mov
movsb
out
or
aaa
pop
sti
scas
and
pop
xchg
mov
sub
ret
jbe
call
adc
pop
push
imul
jp
dec
jns
xchg
mov
push
popf
enter
mov
jns
nop
addl
push
pop
mov
pop
pop
andb
loop
jmp
mov
test
stos
mov
out
iret
scas
data16
cmp
outsl
push
test
dec
cmc
cmp
sti
sub
xchg
call
pushf
test
sub
sahf
cmp
push
jb
jp
add
icebp
xchg
or
mov
enter
out
pop
xor
into
clc
add
pushf
movsl
addl
std
jmp
inc
es
mov
out
mov
in
or
jl
xlat
jae
xor
shlb
mov
repz
lea
shll
pop
mov
push
hlt
inc
mov
dec
xchg
jnp
and
push
cmp
jl
mov
xchg
fiaddl
jb
push
jnp
aad
adc
jecxz
adc
mov
js
lods
stc
xchg
lret
xchg
adc
or
sahf
stos
sarl
andb
jb
add
loope
push
mov
jne,pt
sub
push
sbb
lea
and
movsl
mov
cltd
roll
bound
pop
pop
pop
push
nop
shrl
lret
lea
push
inc
pop
fmulp
mov
out
jo
shrb
das
ss
mov
addb
mov
pusha
pop
push
aad
aam
jbe
into
sahf
add
cwtl
jae
ret
gs
fidivrl
repnz
stc
insb
or
sub
cmp
mov
outsb
cs
sub
dec
fimuls
mov
ret
mov
xchg
add
cmp
notb
mov
xchg
test
cmp
cmp
loop
adc
imul
dec
pop
leave
dec
fistpl
xchg
lea
or
pop
outsb
mulb
scas
push
pop
sbb
out
lods
push
rcr
pop
cmp
dec
aaa
inc
mov
xchg
insl
push
xlat
and
inc
adc
fisttpl
repz
mov
lock
lahf
mov
mov
jle
xor
int3
push
push
mov
pop
and
mov
out
push
xchg
xor
mov
dec
movsl
frstor
jecxz
gs
arpl
sbb
fistps
mov
in
mov
in
mov
or
sarb
enter
test
xchg
pop
xlat
int3
mov
cltd
sbb
nop
mov
push
pop
jmp
pop
xchg
mov
xor
in
pmulhw
test
mov
mov
xchg
scas
push
stc
sbb
xchg
cmp
pop
enter
mov
dec
imul
push
adc
decb
jnp
jns
fisubrl
stos
mov
inc
xchg
bound
cmp
gs
test
push
pop
jmp
fnstcw
jne
lret
rcll
push
sbb
imul
popf
scas
adc
sti
and
sbb
lds
mov
test
dec
fcmovne
pop
add
mov
mov
lahf
push
invd
lret
push
enter
jns
mov
fstl
cli
dec
movsl
repnz
pop
sub
lea
xorb
adc
popf
pop
xor
or
hlt
das
aaa
das
iret
nop
sarb
push
lret
xor
hlt
ja
xchg
jae
dec
mov
jl
ljmp
push
add
mov
out
jl
insl
jge
gs
popa
aas
fistps
out
dec
test
sub
inc
or
pop
test
or
lock
xchg
rcll
push
mov
call
insl
int3
popa
mov
js
incl
jle
pop
pop
cs
jle,pn
mov
lea
lcall
mov
xlat
jecxz
scas
add
movsl
cmpsl
dec
mov
lret
test
out
push
pop
pusha
xacquire
lcall
pop
adc
and
int3
aad
xchg
leave
sub
mov
push
jb
sub
add
mov
imul
sbb
sbb
in
scas
addl
adc
cmp
mov
inc
jno
xchg
push
push
xor
fmull
mov
sti
jle
shll
xor
repnz
mov
pop
scas
popf
in
mov
and
out
fildl
in
sub
lea
ds
pop
lds
arpl
mov
lods
mov
push
and
test
xchg
add
fiaddl
jne
rcl
and
es
insl
insb
loop
aas
aaa
adc
pop
inc
cmc
ret
push
push
aaa
mov
pusha
mov
fld
clc
fmull
xor
add
test
push
call
jecxz
push
ret
repnz
xor
mov
lods
dec
in
outsl
dec
fidivl
inc
enter
ljmp
push
mov
mov
clc
daa
add
cli
inc
sbb
fistpll
jns
dec
insl
inc
cmp
aad
mov
fwait
push
sbb
loopne
adc
and
repnz
xor
cmpsb
addr16
cmpsb
das
dec
xchg
icebp
xor
mov
scas
adc
push
data16
and
ss
add
into
sahf
dec
in
cmp
dec
insl
dec
add
mov
pop
xor
lods
add
popa
inc
pop
xchg
cwtl
aas
pushf
mov
pop
mov
xchg
adc
push
sub
test
adc
mov
ror
adcb
popf
cmpsb
dec
out
cmpsb
iret
xor
mov
enter
cmp
mov
and
inc
insb
pop
adc
jg
xlat
inc
stos
jg
shll
pop
cmc
sarb
push
pop
add
push
and
loope
inc
dec
shld
lret
or
leave
jmp
stos
imul
xor
fnstenv
pop
fisubrl
push
insb
es
inc
dec
shll
shlb
and
mov
pop
mov
out
testb
cs
inc
insl
pop
dec
orl
jnp
scas
push
mov
sbb
lret
cmp
inc
in
insb
push
sub
mov
inc
pop
popa
roll
mov
loopne
sub
push
sarl
lahf
out
add
cs
insb
mov
ret
cs
sahf
or
adc
notl
sub
scas
lea
add
mov
sub
pop
mov
scas
les
mov
push
sub
sbb
pop
stc
push
ret
iret
sbbl
sti
mov
into
mov
dec
or
stc
jge
lret
insl
mov
shrb
popf
shl
dec
xchg
faddp
fimuls
lret
fcmovbe
mov
call
mov
mov
std
pop
mov
jnp
jge
into
mov
sarl
pop
xchg
and
gs
mov
pop
pop
and
jno
ds
lcall
mov
mov
pop
ficoml
or
push
popa
mov
push
popa
arpl
imul
add
mov
rclb
mov
dec
xchg
push
fsub
les
dec
push
aaa
and
stc
in
pop
dec
cmp
imul
std
jmp
js
add
dec
pop
dec
adc
add
mov
mov
sub
lahf
and
lcall
es
mov
lods
in
sarb
arpl
or
push
das
xorb
or
fldcw
pop
mov
jp
ret
add
push
addr16
shrb
andl
rcrl
mov
add
adc
cld
pop
icebp
imul
iret
jae
adc
lea
pop
bound
stos
adc
insl
dec
dec
inc
push
mov
test
hlt
aaa
les
hlt
and
into
cmp
inc
icebp
mov
bound
cltd
cltd
sub
test
add
loop
dec
repz
jle
push
adc
cmpl
xchg
jbe
dec
shrl
and
mov
rcr
xchg
dec
andb
pop
aam
dec
xor
outsb
add
lahf
or
sub
repnz
test
cmp
lcall
bound
sbb
mov
fwait
imul
stc
mov
xchg
test
sbb
jmp
mov
leave
jo
mov
push
aad
aam
lret
xor
push
fsubrs
aam
lret
les
mov
jge
push
cld
enter
sbb
xor
adc
push
push
into
xor
js
sub
jo
xor
mov
push
jns
xchg
fs
pop
in
pop
jnp
sub
cltd
mov
mov
in
mov
cli
sbb
mov
cltd
adc
and
xchg
std
rorl
fistpl
out
xor
es
icebp
push
push
xchg
scas
mov
and
test
clc
adc
cmpsl
push
mov
cmp
inc
outsb
sti
pop
cmpsl
out
loope
lock
fisubl
xor
imul
mov
push
test
and
jl
jno
mov
cli
sbb
mov
andl
shll
mov
and
pop
xor
jl
popl
fwait
aam
lret
les
mov
mov
cmp
mov
lods
mov
mov
sbb
pop
sbb
lcall
or
arpl
cmp
mov
inc
push
sub
inc
stos
insl
and
and
incb
popa
mov
dec
push
inc
dec
mov
push
xor
sbb
mov
sti
leave
lock
mov
out
xor
dec
loope
or
nop
cmp
or
pop
cltd
int
inc
les
pop
jo
aam
loop
mov
dec
sbb
lahf
repnz
ja
push
mov
dec
test
push
mov
sahf
pop
jnp
fcomps
int3
xchg
sbb
test
xor
sub
out
cli
jle
cld
and
rcl
adc
nop
cltd
push
sbb
mov
fisttps
lea
test
mov
cmpsb
xchg
test
sub
xor
adc
repz
sub
fwait
cld
test
sub
push
push
push
cmp
mov
mov
popf
ds
sbb
lea
push
ja
mov
mov
and
cmpsl
dec
arpl
cmp
pushf
lcall
add
test
fs
cmp
push
xlat
jge
cltd
xchg
sbb
test
inc
in
adc
cmp
mov
xchg
or
daa
jg
xchg
cmp
fadd
loope
inc
int
xor
int
lcall
stc
sbb
jno
cmp
enter
dec
out
xchg
jmp
jo
sbb
push
jecxz
mov
fsubrl
js
sub
or
movsb
inc
pop
sbb
nop
andb
dec
dec
xchg
pop
or
ret
repz
jo
aad
or
es
adc
add
fimuls
cmp
sbb
les
aad
push
inc
add
in
in
dec
dec
repz
aaa
subl
lods
add
push
sub
push
clc
add
and
sbb
xchg
mov
and
cmp
in
or
mov
adc
add
pushf
xchg
jbe
test
mov
adc
mov
aaa
cmpsl
in
or
lcall
fisttps
out
xlat
jmp
shll
cli
xor
sbb
popa
sub
jp
lods
sub
ljmp
jmp
call
mov
lahf
shrb
into
ja
icebp
lock
push
ljmp
xor
jl
arpl
in
lods
sbbl
lods
ret
push
aaa
int
arpl
cmpsl
fs
cltd
nop
adc
or
dec
scas
clc
jge
popa
and
xchg
out
mov
les
dec
jns
outsl
jnp
loop
mov
stc
in
scas
mov
inc
mov
jno
cmp
xlat
scas
je
aam
mov
aam
ret
jg
jns
mov
add
mov
les
jg
icebp
adc
addb
lea
clc
les
inc
je
cltd
jge
sbb
jle
cmp
mov
scas
loopne
fisubs
fs
loop
into
sbb
testb
rcll
pusha
xchg
leave
fcos
ret
push
xor
dec
jbe
ret
mov
popa
imul
and
insb
into
fisttpl
addl
ss
shl
mov
jle
sahf
lods
leave
sbb
int3
insb
jle
int
inc
cmp
cwtl
gs
scas
ja
and
lds
mov
mov
mov
mov
mov
xor
push
push
jb
xchg
add
ss
push
add
xor
arpl
push
xchg
push
xchg
xchg
in
jmp
cmp
push
sbb
push
pop
cmp
jne
adc
imul
xchg
inc
pop
push
inc
pop
ss
mov
mov
jnp
out
mov
out
pop
mov
data16
pop
and
pop
fs
inc
outsb
sbb
xchg
decl
js
xor
cmc
stos
sbb
cmp
and
dec
mov
dec
cmpsb
lret
pushf
rorl
sahf
ret
mov
mov
push
sarl
out
lock
push
fnsave
iret
cwtl
imul
xlat
fcomp
bound
aas
mov
imul
mov
push
jbe
bound
fisttpl
jecxz
pop
inc
test
push
lds
sbb
and
mov
mov
mov
mov
lds
pop
imul
cmp
out
xchg
dec
cmpsl
jne
cmp
insl
shll
stos
mov
push
lods
mov
mov
and
vcvtpd2psy
jp
int
dec
mov
int
jle
dec
sbb
push
jp
xchg
inc
cld
pop
mov
and
pop
dec
bound
sahf
test
insb
cwtl
out
mov
push
ds
pop
or
es
divb
lds
push
lret
and
in
popf
dec
js
inc
cmpsl
sub
add
and
ds
cmpsl
adc
stos
or
mov
lcall
stos
es
stc
push
adc
jge
test
jns
jge
mov
incl
xor
jmp
lods
test
push
jb
mov
cmp
mov
sub
cmp
scas
mov
orl
xlat
push
pop
cld
adc
orl
jge
mov
mov
push
lcall
cwtl
sub
push
cli
rorl
pop
jle
xchg
jge
pop
pop
jae
data16
jae
repz
or
fdivr
push
js
cmpsb
call
mov
xor
aad
pop
gs
xor
xor
jge
lea
sbb
into
sbb
nop
movsl
scas
fwait
aad
lea
push
hlt
push
aas
mov
dec
hlt
cmp
lods
jp
push
out
lods
lahf
mov
lret
mov
mov
xchg
push
jg
pop
es
mov
cmpsl
into
enter
popf
cs
test
test
xor
xorb
pop
scas
push
loop
xchg
int
cs
jge
fldt
ds
test
add
rcrl
nop
push
and
shrl
mov
add
xchg
idivb
adc
aam
stos
jo
loope
movsl
rcl
aas
jnp
ds
xchg
cs
mov
or
out
xor
shrl
xor
inc
jg
cmp
inc
in
adc
out
in
sub
push
push
call
mov
sub
jmp
andl
push
sbb
enter
sarl
jbe
jo
test
and
xor
pop
mov
adc
les
jae
push
sbb
mov
adc
jl
fs
aam
pop
loopne
push
outsb
arpl
adcl
adc
or
fwait
add
dec
xorb
cmp
int3
movsb
xchg
pushf
leave
xor
mov
or
cld
lea
insb
or
out
into
nop
mov
imul
pop
xor
icebp
xchg
jae
push
dec
mov
mov
ljmp
cmp
sti
pandn
mov
pop
xor
mov
cmp
and
pop
sbb
fwait
sbb
inc
push
sbb
in
and
jmp
dec
xchg
mov
mov
out
inc
out
sahf
in
xchg
xor
mov
test
mov
mov
mov
mov
pop
mov
cmp
cltd
and
les
sbb
testl
je
in
push
mov
inc
push
cmpl
dec
dec
fisubl
aad
mov
adc
fcompl
jae
neg
cli
xor
ret
test
jp
lret
mov
cmp
pop
cmp
xchg
ja
and
xchg
xlat
push
iret
stos
or
mov
cmp
adc
mov
dec
into
leave
xlat
dec
mov
je
dec
mov
sarl
imul
shl
xchg
lods
mov
fnsave
adc
shll
push
adc
pop
cmp
and
negb
int
mov
sbb
push
sub
sub
mov
cmp
jp
or
or
int3
insb
out
add
push
sbb
lock
push
adc
stos
lock
stos
push
iret
jecxz
add
sub
mov
jp
dec
mov
pop
bound
lcall
divb
std
sub
cmp
orb
stos
arpl
in
dec
leave
ficoms
rcll
adc
call
int
mov
testl
jae
mov
pop
cld
cmp
addr16
cli
repnz
pop
add
mov
lcall
push
mov
xor
pop
loope
xchg
push
inc
or
xor
lds
mov
dec
lods
xchg
orb
pop
test
repnz
in
or
pop
in
pop
andb
pop
cmpsl
sub
lods
mov
add
ret
xchg
cltd
fwait
loopne
insl
jbe
lahf
ja
pop
shl
outsb
add
fs
int
sbb
ss
or
mov
mov
mov
and
dec
mov
lds
in
cli
fisttpll
lock
popf
and
sbb
stc
test
test
mov
pop
dec
shll
pop
mov
dec
negl
mov
icebp
jmp
aad
inc
and
nop
adc
aas
ja
imul
pop
pusha
xor
ret
cmpl
push
cmc
push
xchg
iret
and
pusha
inc
dec
push
xor
inc
je
imul
stc
push
dec
in
mov
aam
stc
sti
or
jnp
mov
add
subl
stos
mov
xor
jbe
movsb
cmpsb
adc
adc
mov
ret
aas
data16
mov
jle
loop
mov
fists
call
pop
add
cld
mov
aaa
lcall
enter
xor
rep
dec
mov
inc
jg
adc
and
or
xor
data16
cltd
out
fsubrl
mov
pop
lret
movsl
mov
sub
lods
arpl
jmp
adc
stos
lahf
in
hlt
inc
sbb
sbb
adc
stos
jmp
in
js
pop
lret
inc
sbb
mov
xchg
push
lods
nop
cmp
sbb
or
inc
mov
mov
pop
fcoml
test
adc
and
roll
insl
or
sbbl
jno
push
mov
push
inc
push
and
push
adc
or
dec
leave
pusha
repnz
loopne
xchg
hlt
xor
push
sarb
jmp
sti
push
popf
scas
xchg
arpl
lahf
test
int3
inc
add
push
ss
cmp
jae
mov
sahf
dec
clc
movsb
lods
sbb
or
je
out
mov
dec
xorb
sarl
mov
aaa
jno
cmp
cmpsl
sbb
adc
jmp
mov
pushf
fdivrs
ss
mov
sahf
cmp
fwait
xchg
push
popa
cmp
jmp
sub
jo
xchg
dec
xor
imul
aam
daa
loope
dec
fsubr
and
push
adc
sbb
mov
mov
xchg
and
fidivl
cmp
nop
jne
aas
stos
pop
pop
pop
decl
jmp
stos
inc
mov
insb
idivl
js
jno
nop
imul
sbbl
dec
dec
scas
cmp
push
outsl
xchg
hlt
lds
jp
imul
mov
fstpt
jl
mov
mov
xor
ficompl
pop
in
mov
sub
mov
je
sub
push
cwtl
inc
loope
push
test
adc
mov
mov
fbld
push
cmp
divl
mov
int3
inc
adc
push
test
xor
push
jns
push
mov
inc
cmc
aaa
imul
es
jmp
or
andb
dec
mov
test
stos
test
sub
repnz
popa
je
bound
inc
sbb
jp
pop
sub
push
ljmp
cmp
mov
int3
mov
push
sub
pop
notl
xchg
sbb
or
push
arpl
shl
das
js
lret
jnp
jp
or
in
insb
movsl
jnp
and
and
fnstsw
push
fidivrl
jl
cmp
movsb
and
inc
xchg
rclb
fstps
xchg
mov
aas
push
test
mov
sbb
sti
into
xchg
mov
pushf
popf
pop
push
dec
fiadds
shll
adc
cmpsb
rolb
or
xchg
cmc
aaa
mov
lods
scas
push
xchg
push
pop
dec
mov
fisubs
ficomps
aam
cwtl
inc
popa
cmp
cld
sahf
ret
outsl
push
clc
cwtl
addb
cli
sti
inc
dec
inc
imul
jl
or
inc
out
xor
lea
ss
pop
xchg
sub
lcall
xor
and
push
out
lea
pop
mov
movsb
jno
fsts
mov
test
mov
out
insl
add
hlt
lahf
inc
aaa
sub
inc
cs
sub
cmp
fbld
scas
jle
or
stos
repnz
sbb
clc
mov
cmpsb
aad
mov
pop
lret
xchg
xchg
xchg
rclb
push
mov
add
jbe
adc
ds
aas
xchg
das
mov
dec
out
repz
dec
iret
ret
xor
fidivrl
in
mov
cmp
xchg
mov
sarl
cmp
dec
adc
cmpsl
cld
lods
push
jmp
test
pop
jbe
dec
rcrl
inc
iret
adc
xchg
mov
push
jbe
jns
lret
enter
daa
mov
xchg
ja
cmp
mov
xchg
sahf
add
popw
loope
frstor
iret
hlt
mov
mov
out
pop
push
scas
out
sbb
clc
out
nop
mov
test
xor
or
mov
cmpsl
testl
shrl
repz
int3
sbb
push
adc
xchg
mov
aad
sbb
lea
loop
cmp
inc
adc
sub
pop
mov
fmulp
mov
repnz
insb
pusha
out
mov
shrb
push
xchg
pop
rsqrtps
pop
insl
jno
mov
fisubl
sbb
xchg
mov
mov
pop
push
push
lods
sub
sarl
jae
les
mov
or
jno
sbb
xor
lret
inc
stos
aad
sbb
sbb
push
mov
jne
xchg
cmp
mov
ret
sub
jne
aad
out
inc
sbb
enter
jns
jl
or
outsl
notl
cwtl
adc
xor
sti
arpl
sbb
xchg
adc
lret
cmp
pushf
lahf
jne
dec
cmc
mov
jno
ljmp
or
sbb
mov
stos
dec
sbb
cwtl
popa
mov
ret
push
push
sub
incb
cli
sbb
push
xchg
stc
lods
mov
mov
sub
mov
inc
aad
mov
inc
movsw
push
push
fst
lret
popa
mov
in
loope
pushf
in
sbb
iretw
insl
cmp
jg
inc
xchg
pop
sti
nop
hlt
dec
iret
iret
repz
sti
test
add
jl
ds
sub
jge
xchg
negb
mov
inc
dec
outsb
add
mov
repz
lcall
xchg
xchg
insl
stos
inc
out
daa
mov
xor
pop
mov
es
movb
out
loopne
or
lea
jp
mov
mov
mov
mov
jae
leave
mov
int
popf
sti
test
push
or
xchg
mov
into
shrb
movsl
xor
mov
inc
mov
cmp
cmp
jecxz
cwtl
pop
in
iret
dec
rolb
or
dec
daa
fnstsw
sbb
dec
and
push
mov
xchg
add
mov
fs
fidivs
sbb
fwait
or
pop
test
mov
popf
mov
jbe
mov
pop
add
in
mov
ljmp
sti
clc
out
cmp
jmp
std
pop
xor
test
in
pop
lahf
mov
iret
mov
cltd
pop
aad
popa
daa
sahf
lret
ds
sub
cli
pushf
fcoml
push
push
mov
cmc
icebp
and
popa
jbe
scas
or
mov
add
push
adc
lahf
aas
out
sbb
push
xor
xor
inc
push
sbb
pop
dec
inc
mov
pop
push
mov
idivb
cmp
dec
push
push
and
sub
mov
dec
test
lods
push
mov
mov
out
bound
aas
icebp
inc
jecxz
cmp
xchg
out
dec
mov
jecxz
insl
lcall
cld
pushf
jmp
xor
push
or
in
pop
outsl
or
cmp
mov
dec
lods
push
pop
rcll
dec
mov
and
mov
add
aas
fucomp
lock
dec
aam
mov
adc
andb
rcrl
pop
lea
lods
lock
adc
out
jb
adc
fmull
in
mov
jnp
and
addb
ret
xor
or
addb
int3
aaa
inc
dec
or
mov
cwtl
inc
xor
jae
jne
push
jg
add
pop
adc
cltd
aas
cmp
andb
adc
out
xor
inc
push
add
imul
push
mov
or
dec
insl
popf
mov
lods
cmp
dec
mov
cmpsb
xor
int3
push
mov
iret
add
xchg
sbb
mov
fnstsw
add
dec
xor
repz
call
pop
pop
aas
shr
daa
fdivrl
lret
adc
popf
dec
jo
rclb
cs
pop
xor
sbb
adc
clc
call
je
ss
ja
jno
jb
cld
cld
cmp
jmp
add
jae
xor
lret
nop
dec
jbe
sbb
mov
leave
ds
lcall
stos
fists
lods
mov
mov
stos
mov
and
or
mov
pushf
xchg
and
push
bound
inc
jo
pop
iret
stc
aad
flds
and
xchg
out
cmp
jne
add
push
jb
mov
ljmp
sbb
out
sbb
lds
and
push
cmc
and
xlat
out
jbe
mov
xor
pop
add
add
push
add
pushf
mov
leave
das
popa
xchg
out
cmp
mov
push
mov
adc
xor
out
sub
inc
sti
ds
pop
mov
out
icebp
rcl
dec
fs
jmp
imul
xchg
fsubrl
cmp
inc
lret
out
mov
or
subb
popa
push
add
stos
insl
pop
adc
orb
clc
xor
xchg
mov
inc
sbb
fwait
pop
addr16
pop
nop
jno
imul
or
call
int3
pop
sbb
mov
mov
outsl
in
fbstp
pop
mov
or
cmc
cmp
pop
in
pop
inc
pop
fld
dec
fisubs
ss
push
std
sub
scas
dec
mov
iret
sub
aas
cmp
movsl
por
jecxz
pop
push
sar
fcmovbe
mov
scas
test
ret
movl
cmpsb
mov
sbb
mov
and
and
lret
xchg
sti
shlb
scas
and
imul
cmp
in
shlb
jmp
fstps
and
xchg
movsb
pop
xlat
pop
xor
addl
out
mov
xor
in
jge
sahf
je
cld
clc
loopne
insl
mov
pop
and
pushf
fwait
stos
cs
fwait
pop
sub
out
test
lahf
ss
and
add
cmp
mov
and
ljmp
jl
inc
jbe
jnp
sub
fcompl
push
mov
pop
mulb
push
jmp
test
aaa
xor
jmp
adc
xor
hlt
pop
leave
sbb
mov
and
xchg
push
sbb
cmc
xchg
push
mov
ja
jns
push
imul
movsb
popl
dec
pop
fs
push
imul
rolb
jb
jl
movsb
mov
jge
shll
imul
fs
testb
inc
ljmp
ja
or
mov
cmc
push
cmp
lods
sti
pop
je
shlb
xchg
or
add
clc
addr16
aaa
lods
mov
ss
sub
cld
and
push
xacquire
xchg
repz
pop
scas
ja
and
lret
and
arpl
or
cli
fnstsw
test
and
dec
stos
or
jb
pop
jbe,pt
fwait
test
jae
jmp
jae
or
cmp
aas
clc
out
jne
in
fisttpl
pop
push
aas
sub
cs
rol
imul
mov
xchg
ja
push
in
cmp
in
lahf
jo
je
push
outsb
pop
or
cmpsl
hlt
mov
sbb
fimuls
and
ljmp
or
mov
jge
push
out
cs
jbe
xchg
mov
in
cld
sbb
mov
xchg
insb
dec
das
cmp
fisubrs
jmp
add
jo
sbb
or
mov
and
jns
or
insb
pop
popf
jnp
mov
jle
ret
fsubrl
ss
nop
out
sbbl
je
aaa
or
dec
jae
xchg
jae
fwait
mov
sub
sbb
jne
inc
pop
adc
push
imul
lods
pop
ja
test
dec
loop
sub
xchg
sbb
xchg
sub
mov
js
lods
icebp
int
jp
mov
cld
enter
sti
aad
push
cmc
inc
sahf
insb
test
xor
add
nop
pop
mov
out
pop
xchg
lret
aam
push
test
xchg
sub
clc
adc
shlb
fmuls
push
mov
fcomi
shl
mov
scas
mov
ja
jecxz
lahf
and
jae
fcoml
jmp
push
test
sub
sahf
fidivrl
xchg
jmp
loopne
and
and
or
das
in
sbb
dec
jbe
pop
adc
insl
sub
pop
push
adc
mov
gs
int3
or
dec
jns
repz
imul
sbb
sub
push
add
xchg
jbe
or
jae
push
popf
add
mov
xor
scas
push
sub
aad
pop
push
add
sub
outsb
inc
cmc
loope
sub
mov
adcb
sub
jo
add
push
push
cmp
mov
push
scas
mov
test
mov
cmpsl
dec
adc
nop
sbbl
lds
outsl
cmp
fcomip
xor
xor
mov
mov
test
out
xor
imul
xchg
mov
les
xchg
outsl
inc
notl
jns
push
sub
int3
and
incl
and
sub
je,pn
loopne
andb
inc
out
je
popa
jnp
mov
es
lea
mov
out
add
lret
and
fcmovnu
mov
repnz
data16
stos
aaa
imul
sbb
xchg
loop
ja
xlat
popf
jbe
call
sbb
xlat
dec
jmp
aas
fidivs
cld
push
es
pop
dec
test
push
jae
dec
push
into
mov
pop
dec
mov
xchg
in
or
mov
add
mov
lds
mov
test
test
aad
loope
test
lret
jae
pop
jge
jmp
test
xchg
popf
and
fimuls
mov
pop
push
dec
sbb
cli
pop
arpl
dec
decb
jle
or
movsb
fldl
in
sub
xor
gs
lea
dec
and
or
adc
std
movsl
jl
test
ja
push
js
pop
mov
dec
xorb
sbb
add
fstpt
inc
pop
mov
lahf
in
fsubrl
out
out
jnp
jno
cmp
aam
fnstenv
cmp
shll
rcrl
pop
or
inc
push
sub
mov
mov
insl
lahf
jecxz
call
je
lret
adc
xchg
cli
mov
jb
shl
sub
test
cli
das
lock
sub
push
push
stos
lods
fidivrs
xor
dec
jecxz
mov
and
ja
and
sar
and
pop
and
addb
aas
data16
fdivs
stos
push
xchg
fcomip
cs
or
test
cld
sub
test
jmp
jecxz
aad
adc
addl
pop
roll
scas
ret
arpl
clc
lock
cmp
lea
lods
pop
ljmp
mov
jge
sbb
and
xchg
xor
pop
cmp
sub
jne
push
addr16
and
dec
fiaddl
mov
movsl
testb
jne
in
mov
lods
mov
xchg
cmpsl
lcall
jne
outsb
clc
sbb
mov
xchg
not
andb
adc
dec
lods
test
mov
popa
lret
xchg
pop
jae
sbb
cmc
inc
movsl
repz
pop
lods
test
push
outsb
mov
mov
and
and
lahf
dec
sbb
add
rcrl
iret
std
lds
lods
xchg
pop
hlt
icebp
rcr
sahf
mov
push
inc
jmp
xlat
inc
cld
fwait
imul
cmp
mov
fdivrs
inc
inc
mov
divb
xor
sbb
ret
pop
sub
mov
out
fsubrs
xchg
xor
sub
pop
pop
ja
ficoms
xchg
mov
int3
and
icebp
subb
fs
xor
add
int
inc
mov
stos
int
mov
sub
xchg
sub
mov
fdivs
ds
pop
mov
mov
insb
cld
and
hlt
ja
push
test
xchg
out
faddl
mov
mov
add
shrl
cs
cmp
lcall
aaa
rolb
push
movsl
std
mov
xor
test
sub
add
cmpsb
lds
dec
ficoml
dec
mov
push
pop
jne
jl
inc
fcmovnb
test
xchg
incb
push
out
sub
cmp
xor
dec
nop
pop
cltd
sbb
push
jge
stos
call
mov
mov
int3
lahf
mov
mov
fcompl
arpl
dec
sub
xor
dec
cmpsl
popf
shll
or
aaa
jg
push
jb
ret
push
arpl
addr16
inc
mov
ret
inc
dec
sub
lea
mov
xor
push
inc
mov
jns
test
mov
pop
fcmovnb
into
pop
xchg
mov
pop
div
ret
in
cs
pop
aad
rclb
mov
mov
cmp
sub
pushf
das
pop
bound
stos
orl
sti
call
stos
pop
mov
xchg
sub
push
out
imul
sbb
div
arpl
pop
jae
js
add
jmp
cs
adc
push
cmp
fldenv
outsl
orb
stos
ds
jge
jle
fwait
mov
cli
cmpsl
nop
movsl
jns
xor
lock
in
pop
sbb
insl
mov
push
sub
sub
adc
jnp
xchg
lods
insb
push
ja
testb
push
shll
call
mov
movsl
add
daa
aas
cmpsb
jbe
fildll
call
dec
notb
hlt
or
insb
out
xchg
sarl
cmp
sar
and
popf
jbe
aaa
push
in
test
dec
shlb
es
push
test
ss
aam
xchg
scas
cmp
pop
cmp
ret
or
adc
pop
xorl
sub
adc
out
cmpsl
push
jo
cwtl
mov
aaa
cwtl
or
mov
call
push
cmp
insb
inc
clc
fwait
xor
or
push
mov
fwait
mov
andps
fbld
rcll
inc
hlt
xor
dec
or
and
xlat
push
vmovss
popa
mov
push
dec
push
bound
xor
lretw
cmp
push
pop
sbbl
add
imul
test
jl
xchg
fistl
inc
add
filds
adc
test
dec
shrb
mov
rorb
das
sub
push
rcll
out
or
rclb
out
fldl
cld
push
aad
dec
jne
pop
daa
or
fldcw
cmp
or
add
inc
aad
cli
fdivs
gs
and
pop
jae
pop
cmpsb
cmpsb
sub
loope
add
xor
repnz
sub
addb
sub
lock
test
jmp
jb
pop
gs
jbe
sub
movsl
mov
xorb
aam
sarl
cmp
leave
out
aam
inc
mov
push
xor
vprotw
aad
pushf
cli
jmp
xor
int3
jnp
pop
mov
int
sub
shll
ss
add
jne
and
xchg
dec
cli
add
iret
push
xor
jmp
mov
das
jns
mov
xchg
xchg
test
mov
push
sub
inc
add
push
aam
add
ljmp
pushf
mov
mov
sti
clc
xor
lds
leave
lahf
pop
xchg
sbb
inc
aad
jo
ljmp
fwait
pop
shll
or
ja
xorl
mov
dec
jns
pop
les
fcoml
test
push
push
jmp
shlb
and
fnstenv
inc
xchg
mov
or
or
cmpsl
cmpb
fsubr
lahf
and
movsl
ja
push
aaa
js
mov
mov
push
pop
ficomps
inc
adc
cmpsl
out
pushf
sar
and
int
rcrl
into
lcall
add
daa
mov
clc
fmuls
mov
and
jo
cs
cmc
inc
adcl
aad
fs
dec
xor
jmp
xchg
aaa
gs
repnz
pop
pop
adc
dec
fnstcw
fistps
inc
bound
fistpll
leave
popf
mov
push
xor
inc
aas
mov
pop
push
sub
sahf
cmpsl
mov
mov
push
cmpb
or
loop
adc
movsl
pushf
push
aad
pop
pop
mov
and
xor
stos
pop
ret
or
mov
push
lds
xchg
sub
ss
xchg
push
out
mov
lods
lds
pop
pop
jg
popa
ret
inc
ja
insl
and
fsts
push
enter
in
popa
pop
dec
popa
jo
popa
jle
xchg
int
cld
mov
aaa
pop
cmp
push
insl
jmp
mov
sub
sub
in
jno
xchg
enter
add
cltd
xchg
mov
scas
sbb
sbb
das
jmp
adc
shll
pusha
faddl
les
rolb
push
or
dec
pop
out
lret
sbb
cltd
cmp
jb
bnd
outsb
push
aaa
sbb
dec
pop
inc
aas
mov
int
jl
push
or
pusha
add
mov
ss
push
jae
iret
les
loope
lcall
xor
mov
cmc
dec
fldt
sub
stc
inc
adc
cld
cmpb
dec
push
es
hlt
adc
mov
or
fiaddl
ficoml
jae
mov
cmp
loopne
push
setl
out
aad
fwait
out
cmp
jecxz
mov
jns
pop
mov
jge
outsl
popa
stos
out
jmp
fdivs
jle
aas
mov
gs
dec
outsl
sbb
and
sti
daa
call
sahf
test
pop
cli
sub
outsb
push
mov
lcall
jne
mov
adc
mov
popa
stc
xchg
xchg
push
das
pop
fidivl
push
into
pop
jmp
test
loope
push
pushf
jnp
ret
dec
inc
je
sbb
loop
test
or
lahf
shl
mov
into
inc
push
lahf
sub
movsl
mov
cmp
aaa
std
inc
fisttpl
sub
pop
or
dec
lock
cmp
jp
jle
cmpsb
jecxz
or
scas
int3
fwait
dec
pop
int
gs
push
imul
lea
xor
into
cs
in
aas
ret
call
jg
ds
loop
rcrl
ds
popf
jle
adc
cltd
jne
jb
outsb
hlt
jmp
test
adc
jl
xchg
hlt
mov
adc
lahf
test
mov
out
fidivrl
push
pop
shrl
cmpsb
cmc
and
mov
mov
jl
lods
sub
jl
pop
lret
pop
loope
push
pop
repnz
jle
gs
jbe
lods
shll
outsb
jno
sub
cmp
sub
push
lds
xchg
mov
jo
pusha
or
jns
pusha
add
sar
jg
repnz
push
push
jnp
lock
push
enter
pop
cwtl
mov
jbe
push
pushf
xchg
jns
insb
imul
mov
mov
movsl
fmul
pop
adc
xor
fistpll
lret
and
xchg
cld
push
rorb
pop
xchg
movsl
sbb
pop
ret
jae
or
sub
sarb
pop
stc
xchg
mov
test
ds
shll
fisubl
push
out
jno
popf
fists
lcall
mov
adcl
daa
fisttps
stos
mov
cmp
add
push
into
sub
dec
ret
iret
add
in
pop
aam
sbb
pusha
pop
clc
push
out
sub
stos
xor
out
mov
inc
and
stos
in
aam
gs
jle
mov
sahf
lea
pop
inc
int
mov
inc
rcl
out
mov
je
pop
dec
jp
or
sbb
adc
and
hlt
inc
inc
jle
out
pop
inc
ljmp
pop
cs
popa
and
mov
mov
sbb
push
mov
in
cmpsb
mov
arpl
imul
mov
jnp
jge
sub
js
xchg
rcll
mov
jge
mov
iret
mov
dec
mov
inc
shl
ds
mov
lea
outsl
mov
dec
mov
test
mov
pop
adc
ljmp
gs
idivl
stc
add
loopne
shll
loop
fcomip
hlt
push
push
xor
pop
loope
sbb
mov
lods
sti
xor
gs
jbe
leave
cs
out
xchg
sub
and
push
jl
stos
pop
mov
sbb
aas
xor
dec
jp
sub
cli
fwait
sbbl
pop
push
mov
push
test
sti
jg
push
int3
lahf
fidivs
out
divl
cmpl
bswap
mov
push
les
repz
adc
cmp
loope
xor
xor
xchg
adc
shr
leave
out
or
pop
adc
dec
inc
ret
in
and
push
pop
add
mov
and
leave
and
push
sar
jbe
repnz
mov
shrb
repnz
jb
stos
xchg
cmpsb
in
push
scas
movsb
jg
shrb
dec
adc
cwtl
sbb
lds
das
xchg
push
call
repnz
testb
lret
repnz
mov
xor
fsubrs
cmp
ret
gs
stos
jmp
inc
xchg
fs
in
fcompl
cwtl
andl
push
mov
push
pop
mov
imul
pushf
push
add
mov
sbb
mov
sbb
cmpsl
imul
popa
sub
lods
jecxz
fisubl
xor
sub
sbb
push
lds
cld
lcall
mov
mov
push
jp
dec
loope
or
mov
fiadds
std
mov
push
aaa
movsb
addr16
mov
push
adc
mov
adc
mov
push
xchg
nop
sti
fildl
mov
popl
mov
lcall
popa
push
stos
adc
lret
inc
pop
pushf
loope
stos
idivb
cmpsl
movsb
jl
dec
jg
leave
cld
mov
hlt
int
dec
jmp
popf
sbb
out
sbb
fsts
repz
sbb
call
dec
test
cli
aam
add
mov
xor
data16
sub
pop
clc
cld
mov
push
subl
cmp
fisubl
scas
into
xor
mov
mov
or
mov
xchg
mov
je
fisubl
shll
or
and
data16
addr16
gs
inc
rclb
sahf
ficoml
sar
lods
daa
cmp
mov
repnz
insl
lret
adc
mov
or
cmc
stos
jmp
rcll
sbb
cs
andb
adc
push
and
and
in
inc
lds
imul
xchg
pop
inc
pop
adc
inc
pop
and
adc
hlt
pop
jmp
stos
and
xchg
movsl
sbb
jno
sub
sub
imul
aaa
aaa
xor
push
pop
xor
sbb
repnz
int3
clc
sub
or
fcoms
mov
movsl
fs
add
cmp
pop
sbb
jecxz
fdivr
pop
cmp
and
push
mov
movsb
mov
stos
sub
push
daa
lods
fsubl
int
mov
das
or
dec
incb
out
xchg
icebp
ljmp
sub
xlat
push
xchg
in
andl
fadds
dec
dec
into
cli
icebp
inc
sbb
cwtl
lds
sbb
mov
xlat
mov
jbe
cmpsb
cwtl
data16
cli
in
xchg
ja
lcall
pop
xlat
pop
rcrl
subb
insl
pop
sbb
dec
adc
dec
dec
leave
lock
repz
insl
imul
push
push
dec
mov
or
and
leave
lock
mov
inc
xor
adc
js
gs
aad
mov
or
push
push
add
xor
pop
fsubrl
cmp
push
sub
mov
popf
jmp
push
movb
xlat
cmp
cltd
mov
adc
jae
push
mov
xchg
arpl
add
popf
insb
or
mov
movsb
mov
jbe
sub
imul
pop
movsb
xchg
repnz
push
std
neg
jae
loopne
mov
out
movsb
xlat
shlb
js
and
addl
pop
adc
mov
jns
mov
adc
shlb
pop
cmp
inc
repnz
mov
scas
push
adc
pop
int
jnp
or
pop
pop
insl
or
jns
mov
adc
adc
repnz
add
fcmovbe
enter
andb
fsts
adc
loope
ds
mov
sti
gs
shlb
lret
dec
cld
ret
sbb
movsl
test
jg
hlt
mov
imul
lock
mov
mov
dec
sbb
mov
mov
push
cmp
mov
and
lock
cltd
add
loop
jg
xchg
stc
insl
stos
cld
ror
insb
fmuls
lock
aad
popa
imul
cli
adc
dec
ljmp
std
xor
gs
dec
and
lahf
nop
test
cltd
filds
dec
jne
std
fsub
fadd
int3
jg
js
repz
pslld
inc
imul
adc
xor
pop
adc
jl
xrelease
xchg
aad
push
cltd
pop
enter
es
fsts
mov
lahf
sbb
lods
sbb
jo
xor
loopne
aam
hlt
push
outsl
test
sub
jg
inc
adc
test
out
shll
push
jae
incb
in
and
sti
fildll
pop
push
lcall
inc
add
push
sub
pop
cmp
adc
jo
or
aad
sahf
or
faddp
test
cwtl
roll
pop
stos
mov
push
cli
sub
sti
jb
int3
and
in
push
fst
mov
push
imul
in
sti
push
or
fists
imul
adc
jle
jnp
sub
push
movsl
xchg
div
push
lahf
fcmovb
dec
mov
mov
aam
mov
or
mov
jp
adc
notb
adc
popa
sub
out
shr
iret
inc
std
addr16
inc
push
jg
cmp
mov
sbb
ljmp
mov
mov
out
test
pop
mov
call
pusha
sub
insl
jl
in
fcmovb
dec
pop
aam
js
rcrb
push
pusha
movsb
negb
push
aad
cmp
cwtl
mov
scas
pop
pop
aam
stos
pop
test
imul
fwait
nop
xor
aam
sub
pop
imul
mov
xor
fildll
stos
pop
push
aas
lahf
enter
or
repz
outsl
cmpsl
test
mov
adc
add
je
mov
or
movl
and
push
inc
dec
and
cmp
imul
outsl
dec
fistpl
inc
inc
xchg
fdivs
jnp
cmc
pop
push
aas
sbb
xor
cmpsb
loope
daa
mov
mov
sbb
aad
sbb
stc
bound
mov
loope
cmp
imul
daa
aam
imul
test
xor
pop
sahf
cmpsl
hlt
cmp
push
fsubrl
cmp
sbbb
pushf
xchg
into
xchg
add
or
test
jmp
stc
mov
shr
inc
insl
inc
and
rcll
adc
add
sahf
clc
mov
ljmp
adc
gs
pop
in
mov
in
jle
mov
add
loopne
xlat
movsb
test
mov
mov
mov
xchg
test
mov
insl
inc
sub
mov
mov
jmp
cltd
add
sub
aaa
shll
daa
push
lahf
sub
push
aad
cld
jmp
mov
nop
shrb
or
cmp
into
rcl
jbe
pusha
sbb
enter
test
mov
stos
shlb
push
push
shrl
lret
imul
fcmovnbe
test
cmp
xor
es
cmpsb
in
inc
sahf
dec
pop
inc
movswl
and
xchg
repz
adc
sub
lods
lods
pop
inc
arpl
ljmp
mov
pop
ficomps
rorb
ss
dec
aaa
cmpsb
out
iret
ss
xor
mov
sub
mov
rolb
mov
hlt
out
addr16
lret
inc
cs
push
pop
mov
pop
mov
sub
aaa
fimuls
mov
int3
int3
hlt
mov
xchg
mov
cs
xor
mov
sbb
pop
jb
or
add
jmp
jp
and
xchg
inc
leave
sbbb
mov
into
outsb
aaa
xor
jns
psllq
inc
inc
jg
js
sbb
push
lahf
cs
dec
jg
jg
lods
mov
jnp
xchg
sahf
adc
aaa
ds
es
add
movsb
dec
sub
rcll
and
movsb
and
divb
cli
hlt
adcl
pop
mov
cld
nop
pop
mov
in
hlt
jb
call
in
sub
into
mov
loope
and
pushf
scas
sub
mov
ss
push
scas
loop
mov
jl
rorb
and
mov
xor
into
mov
add
xchg
jns
je
cli
insl
arpl
and
stc
hlt
xchg
pushf
int
dec
jecxz
adc
iret
into
int3
iret
dec
cli
in
aam
pop
jge
addr16
pop
cwtl
and
cmp
push
pop
es
sbb
push
cmp
test
rcrb
mov
lret
in
cmp
cmp
pop
jbe
mov
movsl
cmp
into
out
test
inc
xor
mov
int3
sub
shlb
test
pop
cli
aas
aam
mov
lods
and
dec
xchg
aas
push
sarb
or
out
xchg
arpl
jae
hlt
mov
lods
inc
out
in
pop
loopne
fdivrp
hlt
popf
dec
lea
popf
loope
xchg
and
inc
cmc
call
push
mov
je
mov
and
and
dec
or
je
sub
mov
clc
add
and
jp
and
popa
cmp
js
pop
imul
loop
xchg
loop
adc
pop
repnz
pushf
mov
mov
push
add
mov
xchg
fistl
daa
add
xor
or
out
push
mov
push
scas
enter
jbe
and
sbb
clc
mov
mov
jg
xchg
sub
into
popa
cld
or
loopne
pop
xor
test
pushf
jo
pop
cmpsl
shll
out
cmpsl
rcr
pop
mov
mov
clc
lea
cwtl
das
pusha
clc
inc
rolb
inc
push
test
scas
inc
pop
std
and
fnstcw
mov
mov
mov
subl
shlb
push
pop
divb
in
pop
std
jg
dec
cmp
lods
sub
xchg
push
sti
sarb
movsl
out
in
xor
scas
or
add
mov
inc
aas
inc
ret
cli
rcr
mov
sub
pop
lcall
sarl
and
push
test
mov
sbb
or
rcll
lret
or
pusha
push
popa
push
mov
leave
push
aad
out
jmp
stc
repnz
xchg
sbb
xor
dec
movsl
sub
decl
xor
iret
imul
mov
mov
out
fcompl
int3
mov
push
icebp
push
sahf
sub
sbb
test
push
xchg
cmp
lea
popa
fisubl
imul
outsl
sub
cld
bound
mov
dec
jl
adc
cli
popf
js
lcall
mov
adc
outsl
aam
into
call
inc
push
push
rcll
mov
sub
cmp
ljmp
mov
jnp
shr
fcomp
xor
dec
inc
xchg
clc
xlat
cwtl
add
xchg
fcompl
stos
es
rcrb
adc
mov
daa
jbe
adc
and
les
cli
cwtl
sarl
sub
jb
add
aaa
dec
stos
or
mov
fcmove
pop
or
inc
dec
pop
aam
push
fcomi
and
les
data16
pop
popf
jge
jecxz
or
sbb
lds
xor
xchg
jb
sub
out
xchg
dec
mov
jae
push
inc
cmp
dec
add
mov
out
push
sub
mov
arpl
outsb
sub
fcomip
dec
sbb
adc
testb
repnz
inc
cli
pusha
jno
mov
and
push
mov
fsub
roll
mov
jmp
loope
push
outsb
mov
pushf
stos
cld
sti
push
pop
sub
pop
xchg
test
in
sub
sbb
jg
lret
xchg
mov
lret
dec
mov
cmp
incl
out
jge
push
aaa
fwait
jmp
test
repnz
jae
ljmp
mov
movsl
sub
lret
into
sarb
adc
fwait
movsl
ret
mov
das
pop
mov
mov
cld
pop
push
lock
imul
test
pop
aam
or
ljmp
stos
mov
xchg
push
clc
jae
sbb
and
push
inc
test
cs
insl
mov
adc
repnz
addl
addr16
jne
jecxz
mov
xchg
sub
insl
add
xchg
push
inc
call
dec
ja
sbb
inc
jns
pop
mov
frstor
aas
or
sub
out
cld
xor
fisttpl
mov
sbb
addl
sub
push
mov
xor
xor
dec
pop
xor
shlb
pop
sub
js
xchg
imul
xchg
jp
and
fcoms
adc
aam
or
lea
fld
rorl
cld
sub
xchg
mov
push
cmpsl
shr
sub
push
pop
inc
aam
xor
cmpsl
popf
movsb
xlat
sbb
ffree
stos
adc
jne
xor
push
jmp
xchg
mov
into
sub
fs
movsl
mov
ljmp
and
xchg
pop
je
push
jnp
fs
push
jns
es
loopne
fstl
mov
mov
or
pop
enter
cmc
test
movsb
jnp
ljmp
xchg
ss
inc
cwtl
push
lret
stc
cs
pop
push
add
arpl
adc
in
xor
dec
cs
jno
loop
sar
adc
pop
cmp
adc
and
and
notl
imul
ret
and
mov
mov
sub
rcr
jg
mov
cs
fcomps
scas
push
adcb
rcll
push
xor
call
es
push
xor
rcll
or
roll
mov
icebp
mov
add
mov
cmp
mov
ret
enter
jp
test
aaa
adc
push
mov
mov
out
xchg
ret
dec
fs
xchg
hlt
push
xchg
lds
pushf
daa
mov
pop
cltd
mov
push
pop
mov
pop
pop
mov
jmp
mov
lods
jne
mov
ret
jae
add
fdivs
fmul
dec
push
cld
ds
xor
pop
xchg
sarb
add
popl
mov
sub
ret
insl
xor
dec
rcll
insb
sub
dec
ficoml
cmp
in
cmp
in
mov
dec
sub
jbe
divl
fwait
jb
xor
push
dec
mov
pusha
mov
mov
dec
jl
mov
movsl
cltd
outsl
sub
mov
dec
mov
push
lcall
jne
adc
stos
pop
out
sub
shll
in
test
daa
mov
push
xorb
ss
sbb
fwait
int3
mov
pop
add
jl
adc
roll
in
sub
xor
jmp
ljmp
fnstcw
dec
pusha
lods
sbb
pop
lret
cmpsb
je
fidivl
sub
adc
jecxz
and
sub
add
push
mov
jecxz
adc
movsb
push
xor
cmp
js
out
pop
jns
into
orl
adcl
test
mov
mov
dec
out
out
clc
fiadds
adc
das
fcoms
movsb
mov
in
aaa
xchg
insb
jge
arpl
stos
add
in
xchg
fsubs
leave
testb
dec
fimuls
in
gs
and
iret
lods
aam
enter
jae
arpl
sbb
sti
dec
arpl
rorb
xor
push
fistpll
adc
int
xor
stos
ljmp
mov
add
cmp
stos
mov
xor
jg
jge
fnsave
lock
pushf
xchg
leave
in
loope
fcompl
loopne
pop
xchg
lret
xchg
outsb
dec
dec
xchg
gs
test
push
ss
cli
sub
xchg
fstpl
mov
cmpsl
outsb
jmp
movsl
or
scas
dec
mov
mov
sbb
lahf
call
mov
jg
loopne
fidivl
andl
cmpsb
iret
or
mov
fwait
push
xor
movsb
icebp
xor
inc
xchg
loopew
lahf
dec
push
dec
or
inc
fistpll
fists
das
cltd
insl
push
lea
mov
test
jg
mov
sbb
cld
pop
inc
mov
dec
mov
fisttpl
outsl
subl
mov
and
ret
fsubrl
popf
test
sbb
xor
mov
jmp
xor
ret
and
arpl
addr16
fnstcw
movsl
sbb
orb
scas
sub
mov
push
and
jno
dec
jno
xor
ret
mov
sbb
mov
pusha
jg
xor
xor
andb
pop
out
js
mov
orb
fcmove
cmpsb
mov
aam
and
leave
movsb
loopne
cltd
push
add
sub
imul
push
adc
pop
mov
and
dec
sbb
mov
pop
leave
jnp
test
ss
clc
sbb
dec
loope
cvtpi2ps
adc
ja
xchg
mov
and
lea
clc
jno
in
adc
push
pop
test
fdivrl
insl
aaa
popf
data16
jne
ljmp
in
ret
xlat
aaa
mov
repz
cld
or
mov
jp
mov
test
pop
dec
call
popa
outsl
push
inc
inc
push
mov
pushf
and
pop
inc
pushl
aas
popf
roll
and
stos
arpl
sbb
ja
jg
and
dec
nop
cwtl
addl
add
leave
cld
push
ss
or
adc
aas
xor
hlt
mov
sahf
insb
cmp
and
xchg
lret
les
jb
jle
push
test
pusha
mov
stos
repnz
inc
xor
insb
popa
xchg
shrb
aam
add
inc
cmovge
hlt
xor
into
pop
xor
outsl
push
xchg
and
ret
shld
scas
xor
push
loope
pusha
gs
jo
mov
das
push
call
je
popa
fsubrs
imul
mov
push
push
jmp
dec
rcl
cli
fwait
movq
fnstsw
cmp
xlat
mov
ja
mov
jae
ja
sub
pop
rcrb
or
outsb
ds
leave
dec
push
jp
out
xor
xor
lahf
cmpsb
cmpsl
xor
es
rcl
sbb
cmp
or
fistpll
popf
dec
scas
addr16
or
cli
jne
sbb
out
jnp
jo
sti
mov
sti
ret
cmp
test
sti
xor
leave
pop
or
std
mov
xchg
mov
mov
js
mov
xor
leave
cmp
shlb
sub
cmpsb
popf
clc
loop
jecxz
pop
lods
mov
arpl
fdivs
adc
mov
ffreep
pop
and
inc
dec
cli
cmp
and
aas
push
jmp
push
cmpsl
adc
sbb
hlt
xor
sub
add
sbb
mov
mov
cltd
sub
pop
int3
in
jg
push
je
mov
popl
jge
sbb
lods
jl
or
add
les
das
aam
outsl
pop
lds
add
in
adc
aaa
inc
stc
fcmovnu
inc
mov
xchg
sbb
add
mov
sbb
rcll
filds
mov
inc
pop
sbbl
test
mov
or
pop
inc
push
in
mov
xor
pop
push
jmp
arpl
cwtl
shll
dec
cld
dec
popf
je
mov
les
pop
pop
testl
stos
test
aaa
adc
nop
push
mov
cli
push
add
sub
dec
adc
data16
and
ja
mov
imul
inc
out
into
iret
scas
push
sub
lcall
cmpsb
xchg
mov
fwait
iret
iret
jae
add
cmp
lods
stc
sbb
mov
dec
cmpsl
leave
pop
add
outsb
sbb
test
fcmovnb
and
push
enter
xor
ss
aad
or
xchg
imul
fdivl
fistpl
imul
sahf
adc
leave
pop
pop
shll
sub
andb
addr16
cld
push
dec
jmp
mov
xor
imul
pop
mov
mov
adc
inc
push
outsl
mov
push
sahf
in
cmpsb
jmpw
xor
arpl
stos
rol
lcall
mov
adc
out
push
jmp
fisubl
divl
mov
fbstp
dec
mov
xchg
imul
popf
inc
jge
fiaddl
mov
fdivl
mov
xchg
sbb
push
or
push
jg
mov
push
adc
xor
and
jge
ret
add
dec
jno
adc
ja
mov
sub
sbb
pusha
mov
sub
lods
and
push
lret
mov
cmc
aam
adc
mov
scas
fmuls
scas
adc
icebp
lock
and
inc
outsl
sub
test
jecxz
push
int3
cld
add
out
orl
sub
pop
and
jns
add
sub
mov
pop
popf
dec
sahf
clc
mov
or
scas
cld
std
mov
enter
cs
mov
ret
mov
sub
sbb
mov
stos
or
xchg
xor
scas
or
inc
mov
repz
mov
mov
test
sbb
shlb
add
hlt
push
mov
stos
mov
in
xchg
inc
dec
in
cs
mov
adc
imul
mov
fs
xor
or
in
jecxz
mov
cli
pop
xor
adc
push
sub
mov
add
xchg
ljmp
lcall
fnsave
test
pop
outsl
dec
insb
movsb
cmpsb
test
clc
gs
shl
insb
daa
inc
test
stc
or
dec
mov
cmp
pop
fildl
test
jne
sub
jne
lret
fmul
aam
jmp
dec
icebp
cmpsl
pop
mov
addr16
pop
popa
fstps
xor
hlt
mov
movsl
dec
ficompl
out
repnz
rolb
ret
sub
iret
mov
or
xchg
ss
sub
dec
mov
xchg
mov
or
out
xchg
setl
and
push
mov
pop
or
jmp
int3
fsubs
pop
inc
xor
hlt
insl
mov
shlb
mov
loopne
imul
testl
xchg
ss
and
add
push
inc
pushf
popf
test
stos
or
imul
jbe
and
aam
shr
push
mov
fbstp
fbstp
cmp
jge
loope
mov
inc
test
addr16
jmp
mov
xchg
fistpll
out
outsl
mov
mov
sahf
pop
call
cmp
into
lahf
mov
pop
clc
push
outsb
das
inc
lods
stos
lcall
lea
dec
xchg
push
mov
mov
xlat
cmp
push
sub
jg
mov
test
shl
sbb
mov
jmp
lahf
dec
call
inc
pop
dec
push
push
loop
push
add
in
mov
lods
mov
outsb
leave
xchg
jl
insl
add
inc
out
or
lret
sub
pop
stc
dec
adc
dec
stc
negb
or
lods
pop
xor
adc
sub
test
movsl
test
flds
xchg
adc
push
inc
test
rorb
inc
popf
mov
push
js
mov
sbb
sub
je
jbe
pop
imul
icebp
rolb
shrb
or
cwtl
xor
mov
jno
cmpsb
loopne
repz
das
ds
inc
iret
or
rclb
xchg
jne
and
mov
dec
cmpsb
sarl
fdivrs
mov
inc
push
mov
imul
repnz
cli
mov
or
and
and
add
pop
or
jle
hlt
add
std
aaa
jmp
pop
mov
ds
push
sbb
adc
enter
adc
or
je
xor
inc
lcall
lret
or
cmp
testl
leave
pop
stc
clc
pop
inc
jb
xor
mov
lret
or
fs
cmpsl
les
insb
sti
in
add
jge
pushf
push
cli
stos
mov
push
call
loope
pusha
int3
imulb
push
cmp
repnz
xchg
push
xchg
push
popa
es
inc
cwtl
push
dec
adc
pop
rclb
push
lcall
leave
enter
inc
sbb
push
add
sbb
imul
mov
cwtl
xor
pop
test
pop
jmp
jle
jno
push
movl
fs
jae
outsl
jnp
mov
dec
test
mov
rclb
jmp
rcr
xor
dec
or
jno
jp
jo
push
lcall
jle
xchg
mov
in
pop
add
add
mov
xor
sub
lret
jecxz
repz
push
xor
cvtps2pi
and
inc
sbb
xchg
adc
pop
lcall
adc
pop
and
jno
inc
pop
lods
and
push
dec
mov
jb
in
stos
push
or
shrl
in
mov
lods
xor
cmp
adc
inc
cmp
insl
mov
fdivrl
pop
out
test
pusha
out
mov
loop
out
or
cmpsb
pushw
push
and
mov
fs
imul
pop
mov
aam
push
js
mov
pop
sub
outsb
push
fmul
push
mov
xor
int
xchg
inc
add
sbb
data16
inc
jge
int
mov
scas
cltd
and
sub
pop
stc
pop
mov
pop
pop
mov
inc
scas
cmc
cmp
adc
mov
lds
xor
popf
mov
nop
inc
iret
sub
mov
adc
pusha
add
inc
decl
call
and
jl
icebp
sbb
popf
pop
jge
jle
pop
xor
push
inc
pop
add
cmp
and
mov
aas
rclb
add
add
adc
popf
fs
sbb
daa
scas
shr
and
lods
out
xchg
and
mov
aas
insl
and
jecxz
xchg
pop
fidivs
ds
sbb
add
sbb
cmp
leave
lret
fadds
push
test
mov
lods
aaa
adc
pushf
dec
outsb
mov
sub
mov
mov
xchg
stos
dec
movsl
popa
popf
pop
sub
mov
pop
shr
lret
mov
xchg
daa
leave
dec
stc
lock
inc
jmp
inc
mov
enter
dec
pop
es
lret
mov
in
fisttpl
sbbl
je
cmp
shlb
pop
adc
jge
adc
dec
or
and
mov
mov
shlb
adc
xchg
cmp
push
mov
sbb
jge
movsl
xchg
mov
popf
xchg
mov
ficompl
lret
mov
addr16
cmc
add
lock
mov
push
aam
mov
jg
add
pushl
mov
xchg
flds
int3
sub
aaa
xor
imul
xor
cmp
repnz
jbe
inc
sbb
xor
pop
xchg
nop
jno
sbb
pop
lds
pop
xchg
loop
cmp
loopne
and
push
pop
filds
adc
outsl
rcrl
pop
mov
arpl
or
mov
jle
pop
aaa
adc
jge
sahf
clc
push
mov
jl
pop
cmc
mov
ror
adc
pushf
js
adc
xchg
je
inc
jge
pop
adc
jo
fisubl
dec
mov
fidivl
iret
inc
icebp
loope
pop
call
ja
test
inc
xchg
jecxz
lret
xchg
and
loopne
std
and
dec
int
das
xchg
bound
jl
xchg
lods
lea
xchg
scas
jle
clc
xor
cmp
dec
test
and
pop
mov
ss
jbe
aad
and
into
test
cmp
sub
out
mov
adc
stos
push
mov
cli
dec
fmuls
sbb
mov
rol
pop
out
pop
inc
xor
jl
jp
or
test
sbb
les
pop
stos
sub
loop
or
lcall
xchg
test
mov
jno
test
jmp
out
cs
js
je
stos
dec
mov
clc
push
repz
pusha
sub
in
nop
stos
adc
outsb
jl
leave
lock
inc
data16
mov
or
pop
sbb
xchg
stos
or
sar
push
mov
sar
cli
mov
mov
sub
pop
lea
dec
jbe
pop
jno
loope
cltd
push
and
push
xchg
jg
inc
xchg
clc
sbb
ss
scas
cmpsl
nop
dec
adc
imul
push
mov
jo
cli
add
filds
data16
jl
in
insl
shll
lahf
pop
std
xor
jno
xchg
out
sbb
and
aas
insl
mov
sbb
cld
test
xchg
test
lcall
sub
sahf
out
out
jns
out
sahf
out
fnsave
fidivl
out
cmp
mov
adc
stc
cmp
sub
jb
int3
mov
dec
dec
loop
negb
xor
add
out
cs
sbb
mov
neg
push
sarb
cmp
lret
mov
push
ljmp
subl
andl
push
add
bound
xchg
mov
or
in
xchg
pusha
mov
and
jo
push
test
push
mov
and
adc
pusha
jnp
adc
cmp
add
push
cmp
stos
push
mov
stc
cmp
or
add
es
xlat
push
test
mov
das
and
add
add
notb
xor
mov
inc
test
inc
pop
and
cmp
dec
add
jle
cmpsb
cmp
rcll
loopne
xchg
cmpsl
mov
sar
push
jle
popf
pop
mov
shr
clc
cltd
aas
pop
mov
decl
jle
mov
clc
aad
cld
xchg
xor
mov
mull
xor
shr
lock
jecxz
ja
sti
mov
jne
std
out
scas
or
add
cwtl
js
orl
sbb
cwtl
jno
jmp
xor
xor
and
pop
or
fdiv
int3
loope
xchg
inc
loope
rorl
std
or
xchg
pop
pop
adc
sbb
cmp
inc
or
dec
jb
mov
adc
sahf
push
lock
out
xor
push
icebp
jo
in
pop
sarl
xchg
mov
pop
out
jecxz
inc
push
insb
test
sbb
arpl
testb
mov
ja
ja
int
dec
negb
pusha
aad
mov
fidivl
jae
inc
or
nop
pop
aad
js
cmp
in
sub
ror
mov
mov
and
push
add
mov
fadds
mov
rol
sar
add
addr16
mov
aas
dec
push
adc
lea
shll
roll
push
dec
sub
cmp
pop
rcll
push
adc
dec
sub
pop
sahf
and
inc
fwait
jge
mov
adc
mov
push
adc
out
jle
sti
sub
sub
jmp
jnp
stos
leave
icebp
loope
push
jl
test
aaa
daa
add
das
into
out
xor
adc
divl
ja
cmp
mov
lahf
sbb
xchg
cs
mov
cmp
mov
adc
pop
or
rorl
or
mov
jne
add
lea
decb
adc
movsl
iret
cmpsb
bound
mov
nop
mov
pop
repz
push
ja
lds
lea
pop
xor
pushf
fidivrs
lock
and
dec
in
enter
test
mov
fsts
mov
repnz
enter
sbb
pop
stos
call
stos
dec
aad
push
imul
pop
cltd
inc
data16
sub
lahf
xchg
fwait
or
jo
pop
dec
out
outsl
push
sub
xchg
loope
xchg
sub
test
and
push
fwait
pop
shl
inc
cmpsb
loopw
sbbl
insb
mov
out
mov
lea
sub
sbb
mov
je
aam
mov
xlat
mov
popa
push
push
mov
ds
sbb
inc
fidivrs
jg
adc
call
cmpsb
in
sbb
cmp
pop
xchg
cmp
xor
in
orl
pop
jno
fsubrl
frstpm(287
aaa
xchg
setno
lret
push
xor
scas
sub
movsb
jno
out
mov
nop
enter
push
cli
divps
cmpsb
jmp
fbstp
das
aaa
lods
push
cmp
fimull
sub
and
inc
outsl
xlat
push
or
inc
loopne
add
mov
lahf
ret
scas
pop
jle
add
jge
in
cltd
cli
movaps
and
ss
mov
sbb
imul
mov
lret
cmpsb
test
lret
push
jb
mov
sti
push
out
cmp
lock
nop
add
lods
dec
xor
out
in
lds
mull
fldpi
push
pop
lods
mov
cmp
or
push
xchg
and
jle
jl
mov
fs
test
add
and
jae
dec
cmp
test
dec
pop
xchg
test
push
jecxz
sbb
xor
dec
inc
or
sub
sti
insl
clc
mov
xchg
test
dec
call
lods
push
cmp
mov
stos
lods
jne
int3
xlat
cwtl
cmpl
push
push
push
dec
out
jnp
mov
stos
add
push
sti
pop
scas
pop
shll
pushf
sbbb
int3
popa
cmp
mov
or
push
mov
or
arpl
push
mov
xchg
js
clc
jne
dec
jl
cmp
sub
insb
shrl
icebp
and
outsb
je
xlat
xor
test
in
cmp
add
mov
mov
sbb
iret
jno
dec
imul
adc
cmp
cmpsl
not
lea
add
je
fsubl
test
mov
dec
xchg
mov
lret
daa
call
data16
push
inc
push
rorl
push
xor
add
or
stc
inc
iret
in
hlt
out
mov
xadd
sub
lods
dec
xchg
daa
push
mov
pop
push
adc
ficompl
lds
scas
mov
xor
fisubrl
repnz
mov
dec
sbb
adc
xchg
add
arpl
cmp
push
out
add
push
cltd
jge
in
mov
jnp
in
mov
ljmp
xchg
loop
shl
xlat
addr16
pop
mov
xchg
jp
out
add
movsb
leave
loope
popf
and
jae
or
mov
dec
push
xor
adc
sarl
xchg
xchg
push
mov
ret
and
test
mov
arpl
pop
xchg
sbb
xchg
add
ret
fmull
pusha
push
lds
notb
lea
into
ret
inc
cmp
xchg
test
xchg
sub
push
aam
adc
jle
xchg
jnp
mov
imul
push
js
inc
push
inc
dec
rcrb
enter
ja
xor
aas
insb
das
arpl
add
mov
sbb
mov
pop
or
rclb
adc
jnp
in
xchg
pop
fwait
adc
dec
lret
jle
call
addb
inc
jle
add
ret
outsl
jbe
in
or
fidivrl
mov
xchg
lret
leave
cmp
cs
mov
stos
out
loop
jne
addr16
out
xor
stc
cltd
mov
jecxz
add
cmp
sarb
hlt
cmp
fisttps
loopne
fsubl
cmp
adc
cld
or
mov
jle
sbb
insb
mov
cmpsl
mov
mov
push
add
stos
mov
or
jecxz
pop
out
mov
cmpsl
gs
sub
dec
pop
dec
dec
cmp
mov
pop
into
push
stc
cmp
in
sub
cmp
sbb
cld
mov
dec
push
push
pop
nop
jb
shll
inc
inc
cmpb
pushf
mov
jb
jo
pop
ret
mov
push
dec
xchg
mov
or
xchg
out
xlat
icebp
lret
xor
sub
in
jge
shrl
mov
fldenv
lret
add
lcall
jno
leave
adc
fildl
cli
inc
loope
add
popf
fcomp
fwait
jnp
outsl
or
jo
imul
inc
and
sar
sub
dec
and
cmpsb
dec
sub
movsl
in
arpl
cmp
int
or
push
push
stc
imulb
jb
insl
insb
mov
cmp
test
mov
pop
mov
pop
sarl
data16
pop
sbb
mov
rclb
inc
sbbb
push
push
ja
sahf
daa
rorb
cmp
inc
push
dec
xor
in
lret
cmp
push
dec
jno
mov
push
jcxz
shr
sarl
jno
adc
xor
lock
cmp
scas
cmp
leave
cltd
mov
or
sub
or
push
mov
pop
sbb
pop
repz
scas
jne
stos
decl
neg
imul
mov
insl
pop
sub
mov
loopne
stc
sbb
das
aaa
imul
shll
push
jo
sahf
ljmp
lock
dec
jbe
es
enter
lcall
in
mov
add
cmpsb
addl
stos
call
mov
mov
fistpl
out
ret
mov
push
mov
std
push
push
imul
mulb
pop
xchg
push
sub
jle
push
cs
pop
rcrl
mov
xchg
inc
jecxz
push
test
add
cli
movsl
adc
push
xchg
hlt
add
mov
addr16
push
push
inc
jp
fsts
insb
divl
sbb
test
lods
and
mov
and
mov
or
clc
sahf
and
lods
xlat
push
repz
and
mov
stc
inc
xorl
sub
jne
mov
jge
jb
fmuls
jge
pop
cld
fdiv
data16
sarb
add
shrl
aaa
jge
fisubrs
and
jb
or
inc
roll
popa
jns
dec
mov
or
stos
jge
xor
cli
push
or
sbb
sarb
cmp
insl
mov
sbb
std
sub
dec
leave
inc
mov
cld
cltd
pop
test
cld
in
jle
lds
cli
xor
jecxz
shrb
sbb
in
jl
ret
repnz
sub
test
inc
adc
cmp
popf
sbb
mov
outsb
jb
leave
jl
arpl
and
fucom
outsl
sbb
jg
push
repnz
movsl
cmp
sub
pop
add
adc
daa
lcall
lods
pop
and
dec
mov
push
shrb
ret
test
xor
filds
pop
adc
iret
shlb
dec
rcll
mov
adc
movsl
mov
mov
jne
mov
outsl
ret
jg
lahf
mov
rorb
dec
xor
jbe
push
test
lsl
mov
push
in
cmp
lods
clc
mov
gs
adc
sbb
hlt
shl
push
stos
sub
pop
insl
inc
sar
lea
adc
push
jmp
idiv
test
mov
adc
cmp
or
test
push
dec
mov
inc
lds
loopne
inc
int3
imul
lods
rcll
lahf
cmpb
sub
or
pop
out
ret
das
add
adc
ret
stc
aad
shrb
scas
xlat
imul
aam
or
pop
push
xlat
and
push
or
and
nop
inc
xchg
lahf
sarb
js
lods
sahf
mov
dec
fisubs
divb
push
insb
add
in
jo
test
lret
cmp
ret
mov
leave
repz
aaa
mov
xchg
popf
mov
pop
or
adc
notl
xor
inc
pop
mov
lods
xor
sbb
pop
xor
clc
push
adc
fmull
sarl
imul
mov
nop
addr16
mov
lds
std
dec
pop
popf
xchg
inc
dec
test
pop
jae
adc
inc
mov
in
lcall
fldcw
push
jb
mov
das
mov
xchg
or
pop
or
ret
jnp
out
xor
jns
mov
add
jp
das
shll
mov
and
faddl
pop
les
loop
push
adc
imul
push
jp
in
lods
xchg
or
xlat
paddusw
std
popa
loope
fcomps
adc
or
mov
push
cmp
mov
xchg
push
inc
dec
shrl
je
sti
push
dec
dec
lds
or
push
and
out
jecxz
xchg
stos
lds
mov
xlat
or
push
sbb
es
or
pop
daa
repnz
into
je
fstpt
fldl
sarl
mov
add
mov
icebp
nop
ret
out
outsl
shrb
mov
addr16
jmp
xor
dec
add
fwait
jle
sub
jne
xchg
and
arpl
adc
adc
lcall
and
ss
inc
mov
lahf
fldcw
or
push
or
jne
call
push
jge
push
xchg
fninit
div
jb
and
mov
push
mov
daa
jle
pop
movsl
enter
push
cmpsb
or
out
insb
fisubs
mov
ljmp
or
je
out
and
xchg
inc
loope
mov
pop
jmp
data16
into
xchg
adc
xor
pop
scas
fistps
loopne
sbb
sub
cmp
sbb
andb
out
add
imul
shrb
aaa
imul
pop
inc
cmc
enter
movb
xor
ret
movb
sbb
cwtl
jae
fwait
inc
cmp
aam
mov
pop
pop
dec
ljmp
push
pop
mov
adc
sbb
orb
or
sub
cmp
nop
mov
mov
repz
int3
adc
addr16
inc
je
and
or
fsubrl
jb
orl
lods
out
add
icebp
pop
xor
inc
sub
or
imul
ret
pop
popa
inc
das
test
orl
addr16
and
pushf
std
icebp
aas
jecxz
xor
mov
aaa
jle
in
js
subb
lcall
data16
cld
xor
cmp
fdivrs
scas
cwtl
or
clc
fcomip
or
xchg
mov
rolb
mov
sub
sahf
icebp
dec
sbb
addr16
cmc
les
outsl
out
mov
cmp
sbb
add
mov
xchg
pusha
mov
adc
leave
push
mov
out
sahf
jg
outsb
cld
subb
xlat
stos
sub
adc
fsubs
cli
xchg
ljmp
lret
adc
jb
xlat
and
jecxz
pushf
or
jne
cmpb
outsb
push
mov
scas
lods
sbbb
sbb
stc
js
gs
and
repz
add
stos
dec
rcrl
lahf
loop
lret
xchg
push
jg
jb
test
repz
out
not
or
pop
lods
xor
jno
fldz
pop
ss
pushl
stc
jbe
icebp
sbb
ljmp
in
popf
nop
and
sbb
pop
sub
ficoms
out
iret
lock
stos
jle
addl
mov
cld
push
and
mov
scas
shlb
lods
ret
pushf
fdivl
xchg
pop
cmpsb
jmp
rorl
mov
and
jae
lods
push
into
jmp
loop
test
cmpsl
cwtl
add
lods
lea
test
xchg
inc
cmpsl
lods
cmp
negl
and
sbb
mov
pop
xor
gs
js
shrl
jae
cltd
popf
or
pop
mov
mov
add
jl
pushf
mov
lock
popf
out
mov
push
xchg
jo
pop
arpl
mov
jg
push
xchg
xchg
cmp
inc
cmp
lock
repz
shll
dec
lret
sub
xchg
mov
cmp
lcall
jecxz
and
push
xorb
and
cmp
jp
mov
mov
dec
pop
leave
or
out
push
test
dec
jbe
data16
jecxz
cmp
sahf
aaa
mov
rcrb
popl
roll
stos
add
lock
sbb
mov
imul
dec
popa
push
leave
sbb
lds
and
sbb
out
xlat
xchg
sub
int3
mov
lock
mov
or
fld
dec
inc
lds
and
mov
or
into
int
adc
pop
dec
es
stc
insl
outsb
add
js
icebp
add
cmp
push
sbb
ja
leave
sti
shl
and
add
inc
cmp
mov
mov
mov
sbb
bound
add
addb
jo
repz
std
pop
movsl
rcll
mov
adc
je
jae
dec
out
mov
dec
or
jge
fwait
mov
test
cmp
aam
dec
rcll
push
sti
mov
adc
les
fs
cwtl
aaa
jne
push
push
or
sbb
jmp
daa
jle
adc
js
add
scas
jmp
and
sub
cmp
icebp
sub
in
fistps
in
pop
xchg
sub
add
xchg
add
fdivrs
repz
sbbl
cmp
jno
js
xchg
pop
loopne
jge
out
jb
out
lds
leave
aam
ss
fcmovnb
mov
mov
outsb
jl
shlb
adc
xor
fcomps
out
icebp
int
dec
inc
xchg
xorl
repnz
test
jno
cmpsb
lods
jmp
cmp
cmp
sbb
aam
loopne
out
mov
push
fdiv
xlat
aad
fs
roll
pop
cli
mov
adc
pop
lods
loope
mov
xor
call
or
mov
sbb
xchg
cmp
sub
dec
icebp
cmp
adc
popf
movsb
push
pushf
xchg
adc
loop
pop
hlt
shll
call
rol
insb
lock
lds
test
add
adc
mov
stos
mov
ret
out
out
inc
sbbb
fstpl
out
int3
rclb
xchg
cmp
ret
xor
adc
push
jbe
jne
mov
push
js
imul
fs
imul
aam
les
or
mov
push
mov
loop
fcomps
or
inc
leave
jle
xchg
insl
push
test
cmp
sub
push
jle
sahf
ss
repnz
movsl
sub
cmpb
inc
jbe
pop
js
pop
inc
push
sarl
shrb
call
lret
or
in
mov
mov
push
loope
cmp
mov
hlt
repnz
test
dec
out
add
lret
mov
push
out
xchg
lcall
hlt
mov
sub
xor
xor
mov
dec
xor
pushl
push
stc
cli
cmp
mov
ffree
mov
cmp
out
rorl
ja
sbb
callw
jne
fldenv
addr16
inc
xchg
les
mov
jg
mov
in
sub
mov
mov
popa
outsl
stos
pop
cmpsb
xchg
xchg
mov
pop
ret
clc
inc
mov
shlb
lods
movsb
lock
push
xchg
mov
into
xchg
and
rorl
roll
sub
push
pop
das
pushf
jno
pop
fwait
jno
pop
fwait
icebp
popa
sahf
push
fmuls
jne
pop
outsb
push
and
jns
test
push
mov
inc
fsub
negb
aas
popa
add
fdiv
add
sub
lds
int3
in
dec
pop
out
mov
gs
leave
out
mov
bound
push
inc
xor
jmp
push
cld
bound
xchg
and
fcomi
ret
dec
sub
insl
rcl
enter
dec
rolb
shrb
mov
xchg
popf
js
cmp
pop
nop
out
das
pop
data16
fwait
loopne
inc
mov
fdiv
inc
dec
add
fisubl
bound
cli
adc
xlat
arpl
mov
xorl
aam
pushf
dec
je
mov
mov
cmc
xchg
mov
test
fiadds
push
mov
mov
xor
jnp
das
xchg
imul
mov
lss
cs
xchg
and
mov
fdivs
and
sub
sub
ljmp
push
add
dec
push
sbb
jg
sbb
xorl
inc
sbb
add
dec
xor
sub
jno
dec
push
or
sbb
das
sub
shlb
jnp
mov
aas
inc
or
ss
test
inc
mov
sbb
xchg
movl
add
adc
cmp
pop
push
xchg
or
mov
rcl
mov
push
push
sub
arpl
insl
cmp
cmp
mov
mov
xor
dec
aam
xchg
arpl
mov
inc
push
inc
mov
inc
adc
mov
push
sbb
dec
jecxz
jecxz
push
dec
lock
sub
mulb
faddl
in
dec
jp
add
aad
xor
fdivl
mov
fstl
cli
xor
jecxz
ret
mov
std
out
xor
mov
xchg
shlb
sub
bound
fisubrl
ss
fnstenv
aad
das
fsubrs
jae
loop
push
mov
mov
loope
cmc
push
jb
leave
jle
xchg
fildll
cli
gs
inc
jo
and
mov
xchg
jmp
addb
ret
js
mov
jmp
inc
fidivrl
leave
ret
mov
xchg
or
scas
adc
sbb
test
testl
stos
add
xchg
xchg
inc
mov
mov
dec
push
jne
icebp
data16
sub
mov
movsb
push
mov
lahf
loope
add
mov
fsubs
cmc
mov
fiaddl
js
sbb
dec
push
test
ss
cli
int3
cmp
mov
push
dec
cmpsl
mov
jge
iret
sahf
out
int3
stc
mov
jmp
inc
int
decl
cmp
testb
repnz
cmp
pop
jnp
addr16
mov
add
and
mov
and
fcomip
mov
add
add
sbb
fldenv
clc
clc
inc
jle
aaa
add
pop
incb
add
sbb
pop
shrb
ror
in
fs
mov
in
movsl
iret
lret
add
adc
or
adc
mov
sbb
popf
jb
ljmp
mov
imul
xor
scas
xchg
imul
fists
stc
add
pop
sti
sbb
popa
adc
mov
jae
add
and
mov
aas
mov
mov
call
std
or
fistl
mov
adc
mov
or
or
mov
jb
fdivl
jle
ljmp
iret
je
out
in
xor
pop
lret
inc
das
mov
pop
cmpsb
sub
filds
rcl
shr
mov
lds
std
sbb
jb
xor
cmp
inc
fcoml
cmp
cmp
xchg
and
ss
push
xor
cmpsl
cs
inc
pop
into
pop
mov
lds
jbe
mov
in
sbb
outsb
cmp
inc
sub
lds
insl
call
js
int
dec
mov
das
test
sahf
push
mov
ret
lods
jle
sbb
clc
sub
stc
push
pop
faddl
or
mov
icebp
ret
adc
jmp
shr
aas
adc
notb
fsubrs
push
push
out
enter
mov
fnstcw
lds
in
xchg
loop
jo
xchg
cmp
mov
sbb
or
icebp
and
pop
cld
mov
in
push
and
mov
jb
adc
aaa
nop
dec
ss
mov
leave
out
xor
push
mov
jl
fwait
jbe
data16
and
mov
lret
lods
les
mov
rcll
pop
stc
mov
pop
mov
jo
mov
rcll
ja
pop
fimuls
ljmp
sahf
insl
push
outsb
out
cmp
jno
iret
xchg
cmp
out
adc
jp
test
insb
test
jnp
stos
arpl
lret
and
jmp
mov
cmpb
in
mov
jecxz
hlt
lock
sbb
xchg
push
fs
push
mov
and
test
sbb
push
xchg
outsb
int3
fs
jb
loope
mov
xchg
mov
fs
out
bound
pop
push
notl
repz
pusha
cmp
div
pop
clc
cmp
je
jge
mov
aaa
cmp
aad
mov
jne
and
imul
insl
and
in
cmp
push
xlat
add
sbb
sbb
xor
or
push
pop
cmpb
notl
push
xor
mov
orb
dec
cmp
xchg
lods
test
xchg
inc
add
adcl
rcll
fmulp
lock
inc
adc
sbb
jne
inc
into
ret
jbe
fwait
mov
or
or
inc
xor
filds
inc
test
mov
scas
or
fisttpll
adc
xor
adc
mov
or
dec
icebp
mov
adc
mov
shl
nop
mov
add
aaa
cmc
out
shl
cld
sahf
or
xorl
cld
cltd
push
popa
imul
pop
add
adc
das
push
icebp
call
cmp
outsl
sub
scas
pop
push
cli
add
push
rol
movl
aas
movsl
in
sbb
loopne
push
add
xchg
mov
add
jnp
cli
roll
sub
xlat
sub
fdiv
testl
lods
lret
lret
stos
dec
mov
lock
xchg
in
mov
xlat
pop
dec
lock
scas
jecxz
es
xchg
and
outsb
cmp
popf
push
call
aas
jbe
in
xor
or
inc
inc
lods
into
lock
mov
ret
in
jo
xchg
ljmp
pop
insb
clc
into
imul
mov
xchg
outsl
lahf
or
ljmp
dec
dec
sbb
dec
insb
rcll
and
push
int3
mov
sbb
pop
jae
jge
jle
sbb
inc
stos
scas
dec
mov
lret
pop
adc
sbb
mov
jo
inc
mov
dec
out
pop
xchg
xchg
inc
loope
jmp
jl
jno
int3
loope
mov
add
sahf
outsl
scas
pop
mov
in
adc
xchg
pop
push
js
dec
scas
cmp
ljmp
mov
jnp
inc
lds
mov
mov
adc
cmp
push
push
jl
sub
insb
aad
dec
mov
push
mov
cmc
out
add
fucomp
dec
adc
divb
push
cwtl
jge
mov
movsb
adc
sbb
sub
mov
lods
mov
mov
insl
dec
cmp
and
or
in
sbb
loope
pop
or
cmpsl
nop
dec
jne
hlt
mov
pop
gs
pop
pop
es
outsb
cmp
xchg
mov
icebp
es
mov
or
loop
iret
inc
clc
mov
dec
push
mov
pop
popa
dec
arpl
jns
pusha
dec
push
pop
aas
testl
mov
pop
pop
call
mov
adc
mov
and
jg
jns
inc
sbb
xchg
and
jns
xor
sub
jl
mov
sbb
jno
xchg
or
stos
lds
adc
inc
sub
orl
movsb
xchg
faddl
jmp
loope
rcll
pushf
sbbb
mov
xchg
pushf
pushf
pop
add
push
jecxz
ja
dec
xor
pushf
test
jmp
fucomp
ret
xor
addb
sbb
mov
and
nop
test
nop
popa
dec
mov
and
mov
inc
cmp
rcrl
or
fnsave
stc
jle
loop
add
fistps
in
aam
add
dec
stos
pop
xor
mov
enter
hlt
cli
daa
fdivrp
mov
jb
loop
sub
lock
lret
and
inc
dec
and
mov
pop
push
les
dec
jb
cltd
in
arpl
mov
ss
fsubl
aam
inc
mov
call
shll
data16
pushl
jo
jae
in
and
lock
repz
jo
jle
inc
inc
and
jne
cli
mov
adc
scas
fcmovnbe
aad
iret
test
pop
jl
jno
shll
adc
add
adc
and
mov
hlt
scas
loopne
js
adc
fnstenv
push
inc
xor
push
mov
add
ds
fdivs
mov
std
and
add
add
dec
test
push
cmp
nop
test
inc
jmp
divl
fimuls
jmp
adc
aaa
sub
cwtl
sub
je
sar
in
outsb
lcall
mov
mov
push
sbb
jne
loope
divl
arpl
es
xchg
push
cli
test
cmp
jl
inc
pop
fsts
aam
xchg
xor
cli
jecxz
movsl
or
cmp
pushf
dec
fmuls
lea
ffree
push
and
xchg
xchg
gs
sbb
or
cld
mov
xchg
daa
sti
insl
sbb
jne,pt
mov
push
andb
push
repnz
sti
mov
pop
pop
mov
adc
push
xor
pop
xchg
negb
in
iret
jbe
and
inc
dec
insb
mov
mov
nop
cmp
xchg
adc
call
fabs
sbb
add
pushf
push
cltd
ret
jae
pop
or
rcl
dec
loop
cld
jbe
xchg
fcoms
jb
fstpl
add
pop
or
lahf
pop
repnz
mul
mov
scas
add
in
dec
sbb
lock
cmc
inc
xlat
or
in
scas
repnz
daa
fcmovu
push
push
xor
repz
arpl
jp
lea
xchg
in
dec
adc
add
push
rcr
in
cmc
dec
test
sarb
push
mov
in
inc
mov
mov
loopne
mov
xor
cmp
sbb
dec
mov
outsl
or
test
repz
loopne
dec
mov
into
lcall
xorb
xor
xchg
or
aas
sub
or
jl
icebp
mov
addl
ret
mov
icebp
test
pushw
std
dec
jecxz
jl
or
jne
cltd
or
lret
ja
mov
mov
mov
and
pop
sub
jle
in
dec
sti
add
shrd
pop
dec
push
lahf
and
je
or
subb
call
mov
nop
jae
or
push
cltd
add
and
inc
inc
sub
clc
push
movsl
cmp
out
cmp
pushf
ljmp
nop
std
cmpsb
mov
push
adc
pop
cmp
add
movsb
movsb
rcl
jbe
jmp
je
nop
into
rcr
add
cli
scas
sub
orb
mov
cmc
mov
out
andb
invd
lock
std
test
mov
int3
inc
add
jno
dec
sub
sbb
add
test
add
dec
aas
bnd
cmc
xor
adc
inc
adc
push
dec
jg
rorb
jp
aad
pop
xchg
scas
pop
nop
shrb
add
sub
dec
or
mov
lds
pop
je
loope
dec
mov
mov
pop
dec
mov
add
orb
cmp
ja
aaa
cmc
out
loopne
movsb
jge
test
arpl
pop
inc
pusha
cmp
jg
stos
cmp
push
pop
add
push
imul
sub
fldl
int
dec
xchg
sbb
nop
and
mov
xor
sbb
pop
pop
jo
dec
subb
xchg
cmp
push
xchg
stos
adc
or
test
fmull
xor
and
sti
mov
dec
mulb
push
enter
daa
mov
testb
out
pushf
jnp
push
xchg
push
fdivl
je
popa
mov
dec
dec
xchg
repnz
das
jno
sub
adc
xchg
dec
push
insl
mov
adc
inc
xor
add
mov
dec
iret
push
loope
push
cmp
shlb
pop
mov
and
mov
lcall
push
push
movsl
cmp
cmp
frstor
aas
fnsave
sub
mov
bound
jno
scas
xor
daa
in
arpl
jns
imul
outsb
xchg
fisttpl
mov
call
jge
adc
fnstcw
in
repnz
inc
loope
jns
aas
dec
adcb
into
xchg
push
in
add
adc
pushf
and
mov
and
or
dec
sub
sub
mov
int3
ljmp
fstpt
inc
push
push
arpl
stc
fwait
add
mov
lea
and
out
mov
jge
jns
and
mov
and
std
add
aas
int3
jns
xchg
mov
jbe
addr16
jmp
dec
sbb
jb
cmpsl
and
mov
sub
sub
inc
arpl
xchg
fwait
imul
roll
fsubp
rcr
pxor
mov
js
sbbl
adc
jg
dec
call
mov
xor
sub
inc
dec
push
pop
insb
scas
inc
push
cmpl
pop
mov
jge
pop
popa
cmp
add
mov
scas
add
or
fs
repnz
xor
pop
push
arpl
pop
ret
popa
hlt
sbb
enterw
mov
aas
aaa
inc
popf
es
sub
jae
enter
sbbl
nop
fmull
pop
divl
loopne,pt
insl
sub
mov
loop
lea
test
daa
adc
jb
mov
pusha
in
pop
jg
addr16
mov
jno
sub
or
sti
daa
push
mov
mov
insb
test
xor
shrl
aad
pop
das
into
ljmp
mov
loopne
mov
sbb
iret
mov
fisubl
ja
dec
cmp
inc
dec
adc
stos
adc
and
jecxz
dec
xchg
mov
inc
aad
and
xchg
or
lods
das
adc
xchg
test
mov
nop
dec
sti
sbb
popf
es
out
data16
movsl
pop
nop
fldt
ja
jl
das
xor
xchg
cwtl
cmpsl
roll
adc
or
jle
pushl
cmp
or
mov
and
sti
in
adc
movsl
sub
push
imul
adc
pop
push
pusha
test
bound
cmp
subl
jl
not
test
mov
inc
pop
stos
pop
mov
clc
aad
clc
push
std
add
inc
cltd
dec
scas
mov
inc
jmp
ja
inc
andl
or
pusha
and
int
lods
movsb
add
sbb
xor
stos
and
lods
loopne,pn
xchg
cmc
sub
scas
jg
xor
mov
jmp
xchg
std
add
lret
sbbb
add
fwait
mov
mov
dec
adc
xchg
addr16
lock
lock
lock
mov
jo
mov
add
jb
sarb
popf
push
repnz
test
and
stos
ficoml
addr16
loopne
mov
dec
and
push
cmp
cmp
lock
sub
and
mov
add
pop
inc
mov
add
xchg
out
cmc
test
mov
outsb
dec
push
cmp
inc
or
add
and
xlat
jg
adc
adc
dec
lcall
loopne
test
jl
mov
dec
lret
in
mov
enter
sub
mov
mov
nop
jg
push
scas
mov
jmp
add
rorw
lret
or
lret
test
sub
jmp
fs
fwait
loopne
pop
rcll
mov
divb
andb
xlat
popf
js
mov
and
jno
scas
xchg
jl
lock
fstps
mov
aaa
jae
movsb
addr16
test
hlt
lahf
pop
lret
fcoml
out
push
push
roll
push
sahf
test
inc
xlat
daa
cwtl
xor
dec
dec
jecxz
repz
movsb
inc
fstpl
xor
dec
cmpsl
mov
aam
pop
jle
test
aaa
jecxz
lret
or
jnp
cmp
sub
shrl
cmp
xor
loope
pop
aas
fs
mov
cli
pop
pop
pop
pop
aas
pop
test
push
add
scas
xchg
cmp
push
xor
in
pop
div
scas
cmp
mov
push
push
cmp
adc
mov
pop
cmpsl
inc
mov
jae
lods
pop
cmpb
jl
lods
loope
notl
jno
ficompl
loope
ja
ss
and
fcompl
adc
mov
ljmp
adc
push
fidivs
shlb
lahf
pop
stos
and
inc
or
stos
roll
les
push
mov
lret
out
or
stos
mov
je
inc
mov
fdivrl
repz
and
adc
lahf
std
sbb
ficompl
in
cmp
xchg
xchg
sub
sub
out
xor
sti
sbb
loope
outsb
out
loopne
adc
aam
lock
add
or
pushl
cmp
mov
mov
fs
push
jmp
cmp
flds
popa
mov
repnz
cld
loopne
and
test
addl
mov
pushf
lcall
js
rcrl
inc
sbb
xor
sub
out
xlat
adc
mov
out
clc
js
cli
sub
iret
pop
jns
cmp
leave
sub
movsl
es
sub
inc
shrb
mov
jno
lcall
lea
pop
insl
out
xor
out
ret
clc
aad
mov
mov
pop
loop
cmp
mov
lret
gs
vmovsldup
mov
das
lds
fs
adc
sahf
adc
fsubrs
addr16
js
inc
or
cmc
repz
scas
pusha
inc
scas
cmp
mov
jnp
jge
mov
std
cmpb
loop
sahf
fs
arpl
out
aam
ss
dec
mov
mov
pop
fcomps
jl
push
in
adc
ret
imul
sbbb
pop
pusha
pop
mov
jne
mov
in
adc
jb
or
sbb
xchg
je
pop
xchg
cmpl
fcomps
jbe
inc
stc
stos
ret
fwait
cbtw
xorb
jl
mov
popf
push
roll
out
mov
push
xchg
and
adc
mov
pop
scas
iret
inc
dec
cmc
test
jge
cmp
popf
lods
cmp
ja
mov
and
mov
sahf
push
lcall
mov
jno
test
mov
pop
push
lret
popf
das
mov
in
fwait
loop
pop
iret
pop
cs
jge
inc
cmp
cmp
push
adc
xchg
push
mov
add
mov
std
lahf
cmpl
ja
inc
leave
lods
sbbb
xchg
dec
cmp
jns
cmc
dec
ror
mov
sub
push
mov
addr16
mov
dec
sub
neg
mov
js
push
cmc
pop
addr16
or
push
push
outsb
aad
lods
push
mov
leave
daa
sub
xchg
jbe
int3
aas
and
nop
in
aaa
mov
xlat
jns
jo
les
jecxz
jecxz
mov
stos
cmpsl
fimull
inc
or
data16
lret
xor
cmc
cmp
or
dec
in
jns
push
pop
es
je
inc
call
push
sub
dec
aad
adc
mov
jb
popa
pop
fiadds
add
negl
popf
fld
ret
mov
test
mov
adc
xchg
sub
dec
clc
jb
pop
fdiv
or
push
inc
int
std
xchg
xchg
pop
mov
fsubrl
js
push
adcl
inc
mov
iret
mov
pop
inc
sub
adc
adc
cwtl
call
jnp
fsubr
hlt
mov
out
and
sbbb
fisttps
inc
mov
sub
lock
lret
stos
fwait
sar
mov
pop
or
negl
or
gs
jae
push
xor
xchg
cwtl
mov
add
jg
xor
jge
and
cmovs
lret
cwtl
fmuls
xor
xchg
jo
insb
push
addr16
std
fmuls
dec
mov
stc
sbb
mov
cs
cwtl
sub
push
repnz
ss
shl
lret
lods
inc
movsb
insb
notb
push
mov
inc
pop
mov
pop
pop
inc
or
nop
loope
ds
push
or
rorb
in
cmpl
push
sub
jmp
leave
sbb
adcb
out
cmp
mov
and
sbb
and
rcrb
cli
or
sub
or
stc
les
inc
clc
movsl
sbb
or
sub
xor
adc
movsl
faddl
repnz
loop
and
fcompl
lcall
mov
xchg
mov
mov
or
ret
movsb
mov
pop
hlt
mov
xchg
cmp
mov
cmc
add
mov
in
xchg
dec
aad
int
mov
lret
in
scas
push
sub
sbb
mov
pusha
dec
sub
test
test
fadds
inc
jne
mov
mov
cld
jp
test
add
xchg
mov
add
jg
repz
xor
xor
call
cwtl
jecxz
mov
je
ret
dec
cmp
inc
std
in
lods
jecxz
fs
arpl
mov
flds
jbe
mov
jg
fmuls
popf
data16
pop
mov
stos
push
outsl
aam
cld
ds
sbb
xchg
rcrl
loope
fwait
jno
lea
sub
mov
sbb
mov
sub
sti
fs
pop
mov
and
xor
aad
lock
repnz
mov
inc
push
jecxz
les
lret
inc
fs
mov
xchg
pop
lock
inc
jbe
fs
cltd
xlat
adc
in
cmp
pop
nopl
sbb
scas
std
mov
cmpsl
aas
cmc
mov
ret
sahf
pop
inc
rcrl
push
faddl
and
out
mov
xchg
fs
push
xor
cmpb
mov
adcb
lods
cmp
loop
mov
sbb
in
add
jnp
jmp
mov
mov
ljmp
or
pop
xchg
xchg
jmp
pop
icebp
sub
ret
ja
xchg
jp
add
push
sub
inc
ret
pop
mov
mov
mov
popf
push
cltd
sbb
cld
jb
or
rorl
mov
bound
xchg
mov
jge
or
push
into
sahf
test
push
cmp
cmp
ss
daa
fwait
stc
mov
adc
push
movsb
jl
je
mov
das
cmp
stos
int
out
xor
add
ret
fcmovbe
jecxz
sbb
cmp
cld
add
fstpl
push
pop
xchg
fsubs
cmpsl
xor
inc
sbb
jecxz
and
mov
mov
mov
das
xchg
xchg
pop
out
or
mov
jns
sbb
in
mov
ja
loopne
cmp
pop
fwait
cmc
jecxz,pt
jecxz
bound
ss
push
loop
bswap
push
in
cmpsb
fadds
push
movsb
lods
cmp
sti
cmp
mov
arpl
xchg
clc
fs
mov
lret
repz
mov
sahf
xchg
mov
jb
cltd
das
sub
ds
outsb
fnstsw
jbe
mov
mov
aad
les
jae
pop
mov
xor
jns
xchg
xor
lods
std
setnp
sahf
add
adc
mov
cmp
xchg
dec
cwtl
mov
iret
and
movsb
sub
into
pop
fyl2x
dec
loop
insl
fisttpll
outsl
sbbb
push
xchg
sub
movsl
cmp
xchg
rcll
xlat
mov
xchg
push
fcoms
cmp
int
sub
xlat
mov
dec
sub
test
and
jbe
testb
xor
popa
xor
or
mov
sbb
sub
pop
insl
sbb
inc
popf
lds
rcrb
inc
push
out
adc
or
shr
and
pop
push
fsts
xchg
fdivrl
cli
mov
maskmovq
idivl
imul
repz
push
ds
mov
sahf
xlat
fcompl
jp
test
sbb
rol
lret
decl
jns
adc
lods
push
mov
push
sarb
imul
clc
js
pop
leave
rcr
push
add
cmp
pushl
popa
pushf
cmc
xchg
ret
pop
outsl
inc
in
cwtl
sti
jb
loope
jno
xor
sbb
nop
repz
fs
mov
rcrl
push
pop
and
jns
inc
stc
cs
push
xor
jmp
cmp
pop
imul
fwait
in
pop
push
fnsave
rcl
bound
add
fisubs
and
aas
mov
cmp
pop
mov
xchg
cmp
inc
ret
out
in
mov
outsb
cmp
movsl
arpl
cli
mov
movsl
inc
ret
pop
pop
lods
sbb
pop
mov
lods
jmp
inc
sub
mov
sarb
loope
jle
std
add
insb
jnp
scas
or
js
sub
mov
inc
and
or
leave
test
pop
es
pop
icebp
push
cmpsl
jns
sbb
out
mov
lret
push
cmp
dec
cmp
lret
xchg
lret
lcall
aaa
pusha
dec
lds
push
fidivs
mov
jne
fisttps
stc
ret
fcmovnu
mov
hlt
or
sbb
imul
and
jnp
aam
mov
lahf
inc
aad
jbe
mov
aaa
mov
stos
mov
cmp
adc
xchg
mov
or
hlt
std
test
mov
adc
inc
std
mov
hlt
andb
push
xlat
das
cmpsl
hlt
fistpl
jge
aam
gs
mov
mov
in
jmp
push
fsubr
outsb
repz
iret
rol
aad
fstpt
pop
cmp
loopne
add
arpl
leave
aad
cmp
in
sahf
int
mov
cmpsl
out
pop
jnp
sti
insl
fisubrs
jae
shrl
movsl
xlat
sub
out
adc
jge
call
inc
and
jae
inc
jne
mov
lods
jb
pop
adcb
mov
movsl
or
xchg
pop
inc
je
loop
adc
lods
into
or
bound
cmp
sub
mov
imul
mov
mov
aas
lret
ljmp
mov
fdivl
popa
scas
lret
jne
sti
repz
add
lret
jb
cmpb
jne
jb
test
lret
inc
popf
dec
scas
stos
xchg
jmp
mov
pop
push
mov
jo
ror
into
movsl
add
in
scas
jo
ret
inc
pop
mov
cmpsb
push
lods
xor
mov
xor
mov
or
mov
add
xchg
subb
fstpt
in
xchg
scas
push
stos
scas
movsl
stos
test
fldl
leave
mov
jmp
ljmp
jle
sbb
sbb
dec
lock
xor
add
mov
sbb
stos
inc
mov
ret
mov
addl
out
and
xorl
push
adc
push
jnp
pop
adc
adc
xchg
lcall
rcr
cmpsb
stos
loope
xor
pusha
insb
clc
sti
mov
push
aas
jge
clc
insb
outsb
xor
pop
rcrl
jae
mov
mov
adc
inc
and
pop
int
and
pop
lock
idivb
fmul
inc
call
dec
loope
mov
mov
or
sahf
or
std
push
sub
aam
xchg
adc
mov
push
out
inc
jmp
movsl
sub
sti
test
icebp
dec
adc
pop
mov
add
pusha
iret
jecxz
cli
scas
xlat
mov
std
icebp
push
call
sti
xchg
mov
clc
orb
or
outsl
or
sbb
xor
adc
add
sarl
aam
fcompl
adc
lcall
mov
jo
pushf
ljmp
sbb
ds
mov
shl
ss
sub
lret
outsl
sub
add
idivb
cli
and
lea
push
or
rcr
lods
push
jge
push
adc
mov
test
mov
stos
or
jae
fildl
push
dec
insl
cmp
or
inc
movb
repz
shlb
lret
adc
lcall
iret
out
adc
mov
mov
repz
in
lds
ds
mov
in
cwtl
jbe
jo
push
jmp
mov
mov
cld
xchg
mov
xchg
jge
movsb
add
int
cld
jne
mov
jo
xor
outsb
insb
mov
sbb
pop
xor
inc
or
mov
leave
push
popa
inc
out
les
test
inc
int3
enter
push
and
sbb
sbb
xchg
pop
ja
adc
loope
xchg
push
and
and
pop
in
lcall
push
jo
push
cmc
repnz
nop
das
dec
sub
mov
and
push
add
pop
outsl
or
mov
mov
lea
push
inc
dec
insb
shlb
dec
cld
jp
sbbb
lock
mov
add
jl
xchg
push
or
add
xchg
mov
jb
xchg
js
pop
mov
inc
jno
jle
jmp
push
sarl
fnstcw
or
sub
inc
cmc
adc
jae
jge
cld
jae
xor
sub
fmul
mov
loop
sub
aas
lahf
iret
js
sbb
push
cmp
aaa
out
movsb
sbb
aaa
push
fidivrs
pop
jl
push
cmpl
icebp
inc
pop
stos
xor
lahf
mov
lods
stos
sub
ret
sub
test
cmp
cwtl
arpl
mov
ror
adc
scas
jbe
push
mov
xlat
and
jnp
fwait
sahf
ret
jnp
fbld
lds
sub
mulb
push
sub
adc
shrb
cmpsl
sub
std
adc
dec
int
lods
xchg
xchg
mov
adc
pushf
shl
iret
leave
sub
push
mov
sahf
xor
and
lahf
rolb
inc
mov
cld
push
jge
lea
test
push
push
pop
pop
push
mov
lcall
rcl
rorl
mov
xchg
movsb
clc
jbe
jno
mov
push
lds
push
fists
pusha
push
dec
bnd
mov
loopne
mov
pop
test
sbb
mov
pop
sahf
shrb
loope
jne
hlt
add
push
or
and
sub
add
pop
int
adc
pushf
out
and
adc
daa
imul
adc
mov
shrl
repz
ret
les
mov
mov
roll
inc
adc
sub
repz
xchg
call
and
and
int3
mov
cmp
or
mov
add
jl
mov
fldl
ds
cmp
mov
sub
xchg
jne
repnz
lahf
sub
lcall
push
push
xchg
add
imulb
sbb
stc
lret
nop
dec
daa
pop
adc
mov
add
add
xor
push
push
hlt
nop
in
mov
mov
call
fwait
loope
or
testl
inc
mov
adc
loop
jp
lods
jmp
push
cmpsb
hlt
and
lret
pushf
push
mov
idiv
dec
test
loop
mov
cmc
ret
das
cli
shl
inc
aaa
lahf
sbb
movsl
mov
cmpsl
cmp
insl
repz
inc
loope
mov
test
stos
pop
in
inc
xchg
push
cmp
clc
lods
push
push
inc
test
lahf
fstpt
xor
hlt
jecxz
xor
outsl
rcrb
rorl
mov
add
mov
lcall
sub
push
lret
movsl
and
jmp
add
cmp
shll
sti
sub
fwait
mov
test
stos
pop
mov
pusha
subb
outsb
fnsave
fdivs
out
cmp
test
pop
add
enter
jnp
jmp
ds
out
lret
sub
mov
insl
ljmp
and
mov
mov
mov
stos
push
jmp
mov
xchg
add
cmp
inc
sub
jnp
daa
add
sahf
shrl
jp
mov
sub
mov
bound
lock
sbbb
les
pop
cmp
orl
outsl
lods
push
fmull
mov
in
loop
lods
ret
sbb
adc
in
mov
mov
xchg
push
push
mov
and
cmp
lahf
adc
ss
mov
or
inc
dec
xchg
sahf
add
xchg
popf
test
in
das
popa
adc
js
mov
push
cmpsl
pop
xchg
jg
lock
repnz
jo
mov
fmuls
fstp
mov
in
or
lret
jo
inc
idivb
dec
inc
xlat
scas
test
enter
push
sub
pop
aam
ss
fwait
push
faddl
fldenv
jmp
pop
xchg
cs
mov
lahf
cld
push
adc
xchg
test
out
jno
test
cmc
jb
dec
shll
lods
jecxz
enter
mov
fsubrl
push
jmp
dec
daa
rolb
xchg
pop
push
pop
mov
stos
repz
sbb
je
je
xchg
fcmovu
or
hlt
pop
sbb
and
out
mov
clc
xor
int
rol
mov
sub
inc
in
ret
cmp
jg
mov
xchg
mov
cli
pop
lea
dec
dec
jle
icebp
test
fistpll
sbb
cmc
dec
add
xor
mov
xchg
lret
sbb
dec
fwait
push
inc
icebp
adc
mov
imul
cmp
jb
shl
ss
adc
xor
sbb
insb
cmp
bnd
loope
mov
addb
fnstsw
mov
inc
inc
filds
mov
outsl
push
or
adc
lods
sub
test
test
add
inc
daa
insb
and
jmp
cltd
shl
and
cmpsb
sbb
mov
or
xchg
jmp
ret
push
add
jmp
jg
inc
inc
sbb
mov
inc
lds
xchg
mov
clc
adc
in
push
xchg
mov
push
adc
sbb
or
mov
pop
cld
ds
dec
adc
in
xchg
push
jno
jge
sbb
pop
icebp
sbb
jl
fistps
lret
cmpsb
fistpl
xor
sbb
int
in
andb
mov
mov
cltd
sbb
decl
xor
aaa
adc
stos
sbb
mov
push
or
stos
mov
insb
ret
add
lahf
lcall
jns
add
sarl
xchg
jae
push
out
mov
test
mov
in
jecxz
or
add
and
dec
mov
mov
sub
or
popa
ja
repnz
jle
sbb
repz
scas
leave
pop
loop
push
leave
popf
cmp
pop
push
je
cmp
xchg
inc
call
dec
jmp
sub
pop
lret
lret
xchg
pop
sahf
pop
jecxz
and
mov
lret
enter
std
cmpsl
xchg
xchg
orl
les
mov
bound
mov
aaa
outsb
fs
push
ljmp
ficoml
pop
adc
aad
mov
mov
dec
pop
cmp
stos
pop
into
mov
mov
pop
add
cld
adc
cmp
movsl
sub
in
lret
cmp
adc
fidivl
dec
or
test
sub
and
and
xchg
pusha
xor
sbb
add
adc
in
insb
sahf
push
push
in
add
fsubl
mov
adc
loop
mov
pop
pushf
fdivrs
xchg
push
out
test
into
add
cwtl
shl
xchg
popf
scas
je
sub
outsb
add
mov
stos
xor
jmp
lods
ret
sbb
jecxz
bsr
jg
mov
dec
out
std
imul
cmp
notb
incb
mov
pop
or
movb
stos
lods
add
scas
sbb
cmp
adc
dec
push
cmpsb
and
push
cltd
shl
xchg
jmp
sahf
xor
xchg
sti
push
dec
jbe
xor
jo
gs
cmpsb
dec
jno
xor
into
insb
pop
fstps
push
jns
cld
dec
insb
and
add
pushf
inc
out
leave
lock
imul
dec
jp
mov
dec
push
cmc
sbb
adc
imul
popa
xor
cwtl
popa
ds
sbb
or
pop
or
sub
push
xchg
pushf
inc
test
enter
nop
fdivl
dec
in
pop
clc
movsb
sahf
mov
xchg
xchg
loope
add
out
jb
data16
mov
fwait
mov
pop
xchg
xchg
or
adcl
insb
mov
or
sbb
fbld
fabs
xchg
pop
mov
repnz
or
adc
roll
ja
inc
in
sub
xor
and
jb
push
test
pop
loope
inc
mov
add
push
in
jmp
ja
jnp
data16
dec
loopne
icebp
push
mov
mov
or
cs
movsl
mov
pop
idiv
push
lods
iret
xchg
rep
mov
cmp
in
pop
sbb
idiv
rcrb
out
or
or
fildl
cmpb
jge
mov
or
inc
imul
pop
repnz
gs
xchg
pop
xchg
cli
pop
lcall
cmp
in
adcb
out
mov
cmc
cmp
stos
rcl
mov
lock
jl
rorl
shl
inc
pushf
scas
pop
pusha
mov
xor
inc
pop
mov
outsl
rcr
sarb
fisttpl
imul
dec
dec
pop
push
sub
rcrb
out
sbb
push
adc
cmpsl
jg
cli
inc
mov
push
dec
sbb
pop
or
fdiv
mov
mov
push
shl
lret
mov
jne
ffreep
out
insl
jnp
mov
arpl
xchg
and
cmp
std
sub
sahf
cmp
jns
dec
ja
je
jae
mov
pop
call
faddp
lcall
outsb
clc
xor
adc
inc
jne
or
or
mov
mov
jmp
ret
or
dec
les
fsincos
xchg
pop
mov
xchg
or
aas
notb
test
push
mov
pusha
insb
clc
jne
xchg
mov
fidivrl
insl
xchg
xlat
cs
xchg
mov
mov
in
movsl
mov
jno
xchg
ja
imul
fsubp
pop
cmp
bound
mov
sbb
testb
rol
neg
xchg
jns
mov
rcrb
cs
mov
lret
pop
fldl
jbe
jecxz
push
pop
jnp
negl
mov
dec
mov
rcr
jecxz
out
fldl2t
std
test
add
push
sti
push
jno
or
jle
inc
aaa
insl
jl
pushfw
addr16
icebp
sub
mov
dec
jns
jp
outsb
cli
push
dec
fmuls
or
dec
outsb
pop
push
pop
jecxz
sbb
mov
mov
xchg
cmp
pop
fimull
dec
adc
dec
cmp
mov
sub
adc
fwait
mov
jl
pop
jno
mov
movsl
js
les
aad
cli
push
inc
add
mov
ret
lods
xchg
dec
add
mov
and
rcll
popf
das
jb
shrl
out
neg
iret
ja
cmp
int3
cmp
sahf
stos
int
lods
out
dec
insb
ljmp
add
mov
xchg
lods
cmpsl
rcrl
jl
fimuls
out
inc
xchg
pop
adc
xchg
daa
xchg
push
dec
in
les
cmpsl
xor
loope
add
aam
jle
xchg
das
and
pop
les
inc
mov
xor
sahf
rol
mov
add
lods
xchg
popf
and
enter
inc
push
push
rcrl
call
pushf
push
movsl
add
cmpsl
xchg
and
sbb
xchg
pop
push
inc
repz
addr16
sbb
lea
cmp
pop
fwait
adc
movsl
dec
imul
mov
fisttpll
push
mov
mov
cmpsl
pop
clc
add
adc
pusha
pop
fmuls
xchg
push
jl
rorl
cli
in
sub
cld
rcl
or
roll
rorb
xchg
add
mov
ds
pop
mov
lods
add
jo
sarb
sbb
aad
cmp
int
dec
dec
pop
inc
dec
arpl
aam
jp
push
call
xchg
and
je
push
cwtl
movsl
jmp
jne
add
es
mov
mov
out
es
push
mov
cmpsl
and
or
xchg
cmp
jle
imul
rclb
xlat
fs
lods
mov
cmp
add
sahf
or
ret
adc
mov
xchg
mov
push
popf
fadds
sbb
inc
pop
orb
repz
adc
into
jae
cmp
in
inc
into
mov
loopne
je
sbb
push
inc
bound
enter
jnp
or
lret
cmp
dec
repz
xchg
popf
push
lock
mov
and
xchg
sub
xchg
fdivrl
dec
shl
xchg
jnp
scas
push
sbb
add
enter
or
test
call
cmp
add
cld
lcall
lea
pop
orb
fsubrp
insl
push
pop
xchg
add
push
sub
scas
mov
lods
inc
addr16
in
push
leave
xchg
lock
leave
jecxz
dec
add
jae
inc
sub
jne
stc
popf
subb
ds
nop
aam
shl
push
inc
push
cmp
lret
jle
movsb
sti
jnp
popf
pop
xchg
sahf
test
inc
pop
or
jbe
arpl
adc
pusha
push
xchg
mov
jg
fwait
mov
cwtl
mov
mov
js
jle
or
cs
push
shrl
cmpb
repnz
mov
fisttps
sub
aad
testb
inc
stc
cmp
pusha
sub
decb
pop
push
or
sbb
sbb
cmp
xor
mov
inc
js
add
out
jecxz
rolb
sti
bound
xlat
mov
mov
mov
test
xor
divb
pushf
out
addl
inc
fdivl
rcrb
inc
cmp
push
hlt
xchg
dec
ljmp
cmp
xor
push
push
cwtl
dec
clc
cmp
xchg
cmp
loop
xor
jbe
cmc
call
cmc
mov
pop
cmp
xchg
stos
iret
xor
cli
pop
inc
or
mov
inc
push
push
sahf
push
push
xor
or
xchg
loopne
xchg
and
leave
stos
divl
pop
jno
push
mov
sub
cmp
lret
aad
shr
sahf
inc
jns
les
mov
mov
mov
mov
xchg
jecxz
sbb
pop
sub
insl
clc
divb
int3
stos
pop
in
mov
fstpt
repz
outsl
mov
fldcw
mov
mov
push
rcrb
sub
push
mov
mov
or
push
jno
cmpsl
inc
aam
js
imul
sbb
xorb
loope
lock
jle
inc
popa
stos
les
imul
out
dec
test
push
fidivrl
jns
push
sub
loop
stos
push
ljmp
arpl
and
int3
push
cmp
lcall
pop
arpl
lds
dec
hlt
xchg
into
xor
insl
lock
jle
movd
out
in
adc
mov
fistps
mov
jmp
xchg
sbb
lods
adc
cli
mov
loopne
xchg
cltd
cld
insb
lods
sbb
and
xor
inc
cld
push
adc
sbb
push
mov
decb
fmuls
or
mov
imul
repnz
push
stc
scas
in
cld
insb
test
fisubrl
pop
ds
cmp
fdivrs
out
adc
les
in
cmp
out
lcall
inc
testl
aaa
mov
in
leave
mov
and
mov
sbb
fdiv
imul
cld
push
cli
inc
ds
sbbb
pusha
shll
popl
push
leavew
ljmp
ret
or
lcall
or
aas
or
ljmp
dec
or
subb
lea
ficompl
jns
mov
inc
aaa
push
cmpsl
cmp
sbb
insl
sti
cmp
lods
lahf
lods
iret
nop
cmp
fistps
inc
dec
add
test
jbe
pop
mov
lret
mov
push
hlt
movsb
mov
outsb
mov
loope
clc
add
dec
lahf
xchg
lahf
fistl
mov
or
ljmp
cmpsl
cmpsl
jb
add
outsb
sub
test
divb
bound
xor
or
rcrb
imul
inc
xchg
ret
sbb
cs
xchg
jae
in
cmp
sbb
cltd
decb
cmpl
test
clc
xchg
pavgw
push
add
sahf
insb
cmpsb
xchg
scas
iret
sbb
add
incb
fists
mov
mov
insl
pop
mov
pop
cli
fildll
lods
aaa
add
movsl
dec
call
nop
shlb
pop
fistl
fxam
jg
mov
xchg
repnz
ret
xor
mov
stc
in
sub
or
aas
shr
pop
mov
mov
jl
push
in
call
aaa
xor
pop
mov
roll
or
add
aaa
in
sbb
mov
push
mov
cli
and
or
push
je
xchg
fs
xchg
sti
test
add
aad
adc
pusha
stc
jle
xchg
xchg
orb
mov
mov
push
pop
sbb
iret
add
iret
cmc
push
testl
rcrl
movsl
test
addb
lcall
sbb
mov
xor
xchg
mov
sbb
mov
sarl
aas
mov
inc
and
hlt
pop
out
jno
nop
mov
sbb
mov
cltd
pop
loopne
cmp
inc
xchg
int
lds
jns
jge
adcl
ret
popf
cli
jns
adc
mov
lret
inc
jns
cmp
pop
ficoms
inc
cmp
xor
es
in
pushf
and
aam
jae
cld
pop
lret
ja
add
push
popa
pop
out
push
add
cmp
xchg
pop
mov
popl
jbe
push
inc
pop
fs
hlt
lods
push
data16
xor
inc
or
jb
out
mov
or
outsl
mov
int
lods
mov
sub
cli
leave
fmull
mov
clc
imulb
call
xor
sar
adc
jb
loop
lds
stos
lret
xchg
mov
aas
lds
push
data16
out
dec
mov
and
scas
ljmp
mov
inc
push
mov
shrl
mov
cmp
cmp
std
mov
adcb
adc
leave
in
cld
subb
cmc
shrl
test
cld
lret
mov
dec
arpl
scas
ss
push
jmp
jecxz
cmp
adc
mov
and
jl
cmp
pop
lods
inc
fisttps
add
dec
or
jbe
push
push
pushf
ret
add
jns
movsl
cltd
mov
jl
testl
mov
sbbb
jne
jmp
pop
pusha
push
addb
jle
sbb
adc
jg
test
imul
lahf
fmulp
stos
dec
push
out
add
cmp
fiadds
push
jmp
mov
ja
ss
in
push
jne
stc
dec
cwtl
mov
or
loop
push
xchg
int
in
and
jb
and
sub
mov
cmp
aas
inc
sbb
movsb
push
sub
pop
inc
pop
fs
sbb
fldcw
insb
lcallw
adc
lds
jp
dec
mov
adc
test
ret
por
jno
ljmp
jbe
jge
inc
xor
lret
ret
sbb
in
add
xlat
push
pop
cmpsl
xchg
inc
pop
mov
mov
pop
cmp
pop
pop
and
iret
mov
inc
cmpsl
sbb
xchg
rorl
xor
addr16
das
ror
mov
cmp
mov
add
xchg
pop
bound
push
dec
sbbb
push
or
or
ja
fisttpl
loop
nop
je
in
in
cli
idiv
popa
in
test
pop
aad
popf
int
subl
mov
push
movsl
push
xchg
dec
adc
xchg
and
jns
sbb
outsb
xor
shlb
sarb
push
outsl
mov
lret
fmull
push
nop
jns
cmpb
inc
dec
and
out
mov
out
aas
icebp
rorl
jb
iret
sub
mov
mov
aaa
mov
xor
and
int3
push
push
popf
mov
xchg
jmp
cld
cmp
ljmp
fstl
cmpb
sbb
int
dec
fwait
popf
js
cmp
ja
dec
movsl
cltd
aad
pop
jmp
mov
mov
dec
dec
sub
int
repz
push
mov
lods
and
pop
nop
dec
mov
xchg
dec
xor
rcl
mov
je
xor
jg
je
inc
push
xor
dec
push
jl
add
push
rep
xlat
cmpsb
repnz
imul
cmp
rcll
mov
ret
jmp
cmpsl
mov
shrl
pop
sahf
data16
pop
mov
add
in
and
fs
ret
jae
mov
jl
push
mov
xor
int3
pop
aas
add
int3
adc
add
mov
pusha
out
sub
sub
dec
loope
xor
adc
repz
pusha
out
sub
cmp
test
sub
movsl
mov
mov
int3
mov
sub
mov
pusha
es
cwtl
cltd
cmp
cs
jo
xchg
insl
mov
bound
jne
sub
adc
shll
xchg
call
gs
daa
pop
lods
bound
lcall
pusha
andl
ljmp
xor
pusha
sahf
out
andl
push
mov
testl
dec
jns
leave
push
mov
sub
dec
or
pop
shll
xchg
outsb
push
ficoms
mov
push
fists
repnz
jns
scas
mov
stos
mov
in
mov
sti
repz
pop
shll
fistl
jns
xchg
fwait
xchg
ja
imul
ja
repnz
inc
int
jl
rorb
xchg
out
adc
loopne
loop
lret
inc
loop
inc
add
xor
dec
fcomi
lods
mov
bound
mov
jae
pop
xor
or
adc
je
lods
dec
cmp
inc
ret
dec
or
cld
inc
inc
jp
add
mov
inc
lea
mov
xorl
cmpsb
pop
xchg
xor
cmp
lahf
insl
lock
repnz
je
cmp
pushf
in
clc
js
psubsb
in
fisttpl
outsb
mov
cmpsb
xor
loop
cmpsl
ljmp
lret
cmp
push
sbb
pop
imul
cld
jg
mov
xchg
aas
ds
xchg
add
data16
inc
sbb
fadds
push
rcrb
jl
aaa
inc
xor
ret
int3
dec
sub
mov
gs
pop
mov
push
xchg
and
xchg
pop
pop
pop
push
in
cs
fsubrp
outsl
mov
ja
cmc
xchg
mov
adcl
sub
repz
fcomip
mov
std
div
jecxz
or
pop
sahf
idivl
cmp
cmp
mov
subl
adcl
push
jne
xor
pop
xchg
sub
testl
push
pop
push
mov
daa
push
mov
out
es
and
in
enter
hlt
imul
jmp
out
and
lods
dec
or
inc
daa
adc
ret
xor
mov
sahf
lcall
dec
or
sub
adc
ja
into
xchg
xchg
mov
mov
nop
sub
repnz
and
jo
inc
adc
mov
adc
leave
test
xchg
mov
push
mov
lret
adc
jg
xorl
mov
adc
adc
sub
jno
daa
pmullw
sbb
test
add
jecxz
mov
adc
test
aad
or
adc
pop
out
mov
pushf
add
push
outsl
adc
and
loope
adc
xor
mov
adc
jmp
fsubrs
jne
pop
sbb
mov
pop
dec
inc
add
loope
inc
insl
mov
stos
aad
outsl
and
aas
add
sbb
out
inc
repz
ljmp
lods
mov
push
pop
and
pop
lods
ja
inc
ss
test
lcall
push
jnp
xchg
sarl
mov
int
bnd
clc
jb
adc
adc
lahf
test
mov
adc
mov
shl
pop
lcall
icebp
mov
mov
xor
or
mov
and
or
mov
xor
xor
mov
lods
sbb
aam
mov
icebp
jo
mov
out
gs
dec
popf
cmpsb
sub
sub
clc
into
pop
lahf
outsb
dec
add
push
xor
sub
mov
xor
aam
data16
mov
inc
sub
mov
sub
jbe
les
mov
mov
addr16
test
cmp
lods
or
pop
inc
scas
jl
popf
out
adc
mov
sbb
movsl
repnz
pop
dec
add
popf
mov
repz
ja
jno
fisubs
movsb
mov
jno
sub
xor
pop
push
ja
cmp
inc
outsl
or
aas
sub
dec
inc
xchg
bnd
aas
jle
pop
sub
xor
repz
mov
xchg
out
cmpsl
imul
and
mov
mov
mov
into
std
mov
sub
push
sbb
mov
sti
int3
push
mov
push
fdivl
inc
cmp
jnp
mov
outsl
fnstenv
js
jmp
push
or
stc
movsb
jecxz
cmpsl
ja
sbbb
fnstcw
in
cmp
aam
daa
repz
test
mov
adc
mov
lods
and
sub
mov
push
mov
push
adc
xor
mov
mov
mov
imul
insl
das
jl
mov
push
add
push
jle
jo
xlat
push
aam
adc
outsb
in
mov
pop
clc
push
mov
inc
mov
mov
jmp
jo
push
jo
push
or
mov
sbb
dec
xchg
jns
lea
xchg
mov
inc
jno
push
mov
xorb
lods
data16
scas
mov
xlat
fiaddl
test
mov
scas
jge
jle
push
arpl
cld
cwtl
dec
inc
and
jecxz
ljmp
push
fs
stos
add
lret
insl
loop
mov
push
adc
imul
xlat
repz
push
mov
jns
mov
fidivl
pop
fdiv
jne
mov
or
insb
rcll
stos
pop
jnp
mov
cmp
add
ds
sub
sbb
aad
inc
ret
push
shl
add
mov
adc
adc
out
cmc
dec
inc
add
in
bnd
pop
jl
clc
sub
push
push
xchg
cmc
idivb
push
es
rol
lcall
sbb
cmp
lock
cmp
test
push
hlt
gs
pop
out
mov
mov
out
cmp
test
rcrl
scas
movsl
imul
repnz
in
stc
cmp
rclb
ljmp
sbb
ret
jbe
insl
int3
inc
mov
mov
shlb
add
pop
daa
mov
inc
xor
push
pop
sbb
pop
mov
push
arpl
mov
cmp
push
mov
jbe
mov
test
jae
dec
push
sbb
push
loopne
cmp
mov
add
jne
cmp
call
sti
sbb
les
imul
mov
jb
cwtl
je
cmp
fdivr
xor
add
scas
xchg
and
xchg
xorb
ss
imul
std
js
sub
in
les
ror
mov
mov
jbe
xchg
shlb
lods
and
les
cltd
mov
mull
jne
inc
repz
leave
flds
out
lret
cmc
push
icebp
cli
push
loop
test
mov
push
fadd
fidivs
fildl
pop
mov
jge
loope
xor
insb
mov
out
mov
sub
inc
xor
mov
mov
aas
sub
int3
jne
push
mov
pop
stos
push
test
into
push
insl
insl
adc
ljmp
lods
jne
imul
jno
mull
fldcw
xchg
mov
mov
iret
inc
lcall
es
clc
sub
les
dec
inc
fsubrp
pop
iret
std
mov
fmull
sbb
and
leave
cld
pop
loop
imull
pop
ret
inc
mov
inc
std
pushf
ljmp
push
adc
popa
mov
xchg
push
dec
loope
mov
inc
test
jecxz
mov
or
dec
cmpsb
lods
fisubs
mov
cmpsb
popf
inc
pop
pop
es
sbb
push
lds
push
leave
dec
cmp
jp
hlt
ljmp
stos
icebp
push
aad
add
aam
xor
inc
sub
insl
imul
xchg
icebp
mov
loop
push
mov
dec
scas
cmp
push
push
jnp
pop
xlat
mov
shr
xchg
hlt
push
fucomi
mov
xchg
iret
ss
or
iret
mov
mov
lcall
xchg
pop
xchg
imul
pop
jae
gs
and
arpl
push
outsb
lods
aam
push
sub
pop
loopne
lret
insl
es
shrl
mov
shll
repnz
jnp
movsl
pop
mov
bound
das
mov
icebp
and
jne
sub
mov
or
xchg
xor
mov
push
xchg
mul
ficomps
jge
inc
mov
sbb
push
test
jl
jns
jb
insl
fcoms
inc
cmp
int3
sbb
mov
sub
mov
push
inc
mov
xchg
and
aaa
mov
xchg
test
scas
jns
icebp
lds
movsb
test
push
shr
mov
addr16
mov
out
iret
rolb
xor
data16
outsb
sti
cmp
xchg
inc
cmpsb
pop
lret
clc
inc
call
paddb
pop
mov
js
mov
sbb
loopne
xor
bnd
fiaddl
in
lret
sub
div
jl
or
mov
push
lcall
or
popf
pop
fisubrs
scas
jg
pop
push
xchg
testl
push
add
fstps
scas
fucomi
in
cli
out
lods
lock
add
jns
mov
push
mov
movsl
and
mov
push
shlb
pop
rclb
sub
sbb
inc
jg
push
mov
jbe
sub
ret
pop
mov
cmpsl
scas
les
out
pop
xor
jp
mov
jnp
shr
ljmp
stc
and
mov
fdiv
dec
mov
rcrb
mov
adc
rorb
or
lods
jb
jmp
les
xchg
push
cmp
sar
jne
inc
in
adc
mov
rcl
push
sbb
popf
pop
and
shrl
scas
mov
mov
sub
insl
jmp
or
xchg
mov
dec
jns
inc
push
sarb
or
push
adc
out
ja
sub
notl
int
jnp
mov
jae
sbb
xchg
int3
lods
ret
dec
add
mov
push
nop
mov
stos
cli
ja
loopne
push
jnp
fbstp
mov
into
fisubl
sarb
add
mov
inc
dec
sub
dec
lret
ret
xorl
lret
ret
xor
popf
repz
sbb
jg
xor
shl
movsl
cmp
nop
pop
xor
ret
push
mov
pop
fwait
loope
mov
jmp
ret
repnz
in
ret
adc
loope
jno
and
cmp
xor
xlat
aaa
jne
mov
push
push
xchg
loopnew
xor
jnp
dec
inc
xchg
idivl
out
jns
out
xchg
add
test
scas
xchg
out
jmp
push
pop
add
fidivl
imul
hlt
pop
jno
lods
incb
mov
sub
xchg
fmulp
test
divb
fstl
sti
fsubs
or
iret
adc
and
test
push
cmpsb
jmp
push
jl
es
xchg
test
je
cwtl
xchg
repnz
jb
cmpb
ret
pop
fidivrl
add
imul
dec
les
in
mov
andl
sbb
pop
aad
outsl
addr16
mov
sti
push
xchg
mov
movsl
pop
sbb
xchg
or
push
pop
push
insb
stos
in
mov
add
add
xor
dec
mov
in
xor
cmp
dec
push
movsb
and
stc
ret
cmpsl
sbb
inc
lret
inc
dec
rcrb
ljmp
scas
aad
ja
lds
lcall
xchg
pushf
push
out
mov
mov
jge
lcall
cmc
shlb
lret
addl
rcrl
test
and
xor
stos
sarl
idivl
xor
aaa
xchg
jmp
addr16
scas
cwtl
push
inc
scas
dec
mov
xor
mov
sahf
psubq
jecxz
aas
rolb
lods
test
decl
sub
inc
outsb
mov
int3
xor
aad
sub
inc
and
into
jns
sahf
movsb
sti
fs
data16
push
and
cmp
iret
pop
sbb
mov
aaa
pushf
sti
test
mov
push
inc
subb
pop
mov
into
dec
cli
ret
push
push
dec
mov
push
pushf
jecxz
push
cld
aas
sbb
ljmp
divps
jl
cld
ljmp
jae
iret
aaa
popa
jl
ficomps
or
cs
mov
lahf
shr
and
sbb
sti
int
gs
jg
push
cltd
ret
push
fcomps
cld
loopne
icebp
mov
addr16
nop
push
mov
cwtl
jge
ljmp
pop
push
xchg
sbb
jnp
clc
rcll
repnz
and
adc
pop
fists
dec
out
stc
movsl
jge
adc
and
push
cmp
inc
add
repz
add
mov
in
ficoms
xchg
add
mov
xchg
and
sbb
mov
jo
and
shlb
inc
push
mov
push
mov
cmp
lock
jno
aad
popa
xor
cmp
call
add
pushl
fcoml
push
xchg
adcl
lock
loopne
clc
lock
mov
push
mov
dec
es
lret
fildl
in
dec
dec
or
fidivs
mov
call
faddp
push
notl
inc
mov
shr
repnz
mov
jno
ss
mov
sbb
add
and
andb
out
push
mov
mov
or
ljmp
jae
shll
ljmp
dec
cwtl
imul
dec
pop
jp
dec
pop
out
repz
lahf
jl
push
mov
xchg
or
sub
in
jno
fistps
xchg
out
cli
test
xchg
inc
mov
fistpll
mov
rcrl
std
fpatan
loop
lea
test
dec
je
xor
fistl
ret
loop
push
fiaddl
inc
pushf
into
cmpsl
push
or
pop
loop
ret
push
jb
jmp
loopne
leave
cmpb
movsb
std
sub
sahf
in
das
sub
gs
int
imul
cmp
mov
inc
adc
lret
sbb
rcr
lock
and
addb
or
mov
aaa
mov
mov
or
fcom
imul
sub
leave
mov
lds
lahf
ficoms
pop
jns
cli
dec
movsb
int
xchg
mov
sti
dec
mov
jb
lods
shr
or
lret
xchg
mov
adc
sub
clc
jae
cltd
cmp
add
sbb
fpatan
mov
add
adc
lock
loop
inc
sub
pop
adc
push
enter
sub
lock
and
enter
fsubs
insb
outsb
leave
fsubrs
insb
push
sbb
adc
out
loope
repz
mov
mov
divl
fwait
jb
ret
movsl
pushf
lea
clc
adc
loopne
jg
aaa
cmpsb
lahf
fidivrl
loope
hlt
mulb
fidivrl
pusha
mov
pop
fmull
ss
cmp
xchg
lcall
jne
jl
insb
jg
ja
or
outsl
jp
int3
std
jle
cmc
cmp
negb
scas
mov
cltd
or
jb
sbb
pop
sahf
xor
les
aad
stos
push
sti
test
jg
dec
dec
call
sub
pusha
push
pusha
shl
fistl
sbb
das
adc
sahf
mov
mov
iret
pop
xor
lcall
xor
test
in
pop
test
mov
aas
in
icebp
inc
jb
cs
and
mov
xchg
cmp
mov
xchg
dec
jns
push
inc
out
repnz
cwtl
xchg
sub
out
movsl
inc
imul
dec
mov
lds
xchg
or
pop
out
loopne
lods
push
jg
dec
leave
mov
sbb
sub
push
test
lahf
cli
mov
adc
xchg
iret
inc
js
or
cs
ja
repnz
inc
pusha
adc
or
mov
xchg
push
mov
sbb
ffreep
adc
mov
cmp
dec
insb
mov
mov
in
out
xchg
popf
mov
orl
lret
adc
imul
jbe
add
pop
std
cmp
and
shlb
push
shl
sti
nop
jmp
pop
xchg
bound
cs
test
inc
std
sub
and
loope
leave
cmpsl
aam
and
imul
cwtl
cltd
cs
mov
mov
mov
cmc
fimuls
and
fmull
mov
pop
inc
lcall
sar
fcmovnb
rolb
sbb
cmpsl
pop
cmp
jns
loop
pop
orl
into
movsl
push
push
add
pop
daa
loopne
popa
xchg
cwtl
inc
mov
lods
cmpsl
xchg
sahf
data16
in
fidivrl
imul
lea
shll
out
push
xchg
sub
sub
int
xchg
sub
rclb
or
cli
add
daa
xchg
call
daa
jne
mov
pop
and
out
loopne
inc
iret
rcrl
pop
dec
ficomps
fimull
and
xchg
dec
or
dec
or
sub
adc
xor
lcall
mov
inc
mov
mov
pop
cmp
sub
adc
pop
mov
pop
loopne
mov
lock
xchg
js
dec
mov
pop
rcrl
xor
roll
ds
and
test
clc
mov
std
fistl
cmpsb
pusha
nop
push
aad
fsubs
dec
dec
push
loope
mov
fnsetpm(287
stos
ret
imul
int
sahf
into
cmp
cltd
jg
in
mov
in
mov
fnsetpm(287
mov
cmpsb
outsl
cmpsb
push
mov
pushf
mov
jg
jb
jnp
arpl
mov
xor
xchg
clc
shr
cmp
mov
fstpl
xor
dec
aam
mov
or
insl
test
xor
and
lret
push
movsb
pop
jns
cmc
or
push
addr16
fdiv
xor
pop
mov
sbb
mov
popa
xor
xchg
inc
out
fistpll
jbe
adc
mov
jnp
stos
jl
pop
or
jl
aad
cld
orl
or
mov
mov
inc
mov
xchg
adcl
mov
dec
hlt
inc
pop
shlb
or
xchg
or
std
add
mov
push
and
stos
repz
xchg
inc
fwait
push
push
in
arpl
dec
cmp
sahf
ljmp
adc
es
mov
cwtl
in
les
stc
into
push
lret
cmp
ja
pop
mov
out
push
std
dec
outsl
sbb
inc
mov
xchg
out
cmp
inc
lret
outsb
hlt
push
push
stc
lcall
clc
out
jb
and
xchg
ja
push
imul
pushf
cmp
cld
xchg
push
sbb
pushf
mov
aam
xchg
pushf
mov
adc
dec
mov
iret
or
or
cs
jge
lods
push
push
hlt
push
adc
addr16
jns
adc
xlat
in
testb
lds
cmc
outsl
mov
xor
push
xchg
sub
aad
inc
fmul
es
ja
push
daa
jb
push
int3
sarl
pop
in
inc
cltd
orb
pusha
stc
jmp
xor
pop
sbb
adc
jno
sahf
xor
in
pushf
daa
dec
add
or
scas
sbb
mov
mov
das
mov
mov
xor
push
cltd
mov
mov
fs
repz
gs
int
mov
mov
mov
push
stos
sub
or
std
lahf
mov
mov
test
push
test
dec
gs
lcall
enter
testl
js
lret
cmp
arpl
jb
enter
pusha
fcom
pushf
cmc
push
push
and
adc
push
in
sbb
dec
movsb
mov
cmp
add
sbb
out
pop
cmpb
mov
and
xor
mov
xor
xor
pop
add
dec
sbb
mov
push
add
push
sahf
jne
stc
cmc
pop
mov
xor
inc
pop
fucomi
test
and
leave
cmp
cmp
jg
jns
ret
jns
in
xor
jbe
mov
xchg
testb
enter
hlt
cmpsl
aaa
sub
mov
pop
xchg
jno
test
push
jae
out
and
leave
jmp
xchg
inc
mulb
and
xchg
aaa
in
shll
dec
ficoml
sub
movsl
or
bnd
sub
ficompl
mov
clc
cmp
pop
scas
and
push
mov
pop
aam
add
pop
fxch
xchg
push
pop
add
push
das
fwait
or
jl
add
push
mov
mov
and
mov
gs
adc
les
mov
sbb
mov
insb
pop
push
movsl
mov
add
cltd
js
orl
xchg
jns
andl
sarl
loop
fldt
jno
push
or
push
mov
jle
int3
lds
cmp
imul
popa
fwait
cmpsl
leave
fldcw
loop
mov
cltd
jge
xchg
mov
fmul
fcmovnbe
sbb
fcompl
xor
inc
cmp
jo
adc
push
cmp
cs
mov
or
dec
add
sbb
xchg
xchg
pop
jle
mov
insb
insb
push
movsl
push
push
lock
std
sahf
in
push
sbb
inc
and
fdivr
fsubrp
fcoml
aad
lahf
sbb
xchg
shrl
push
in
dec
lcall
aas
sbb
mov
cmp
push
jle
int3
jno
mov
lea
xor
test
popf
cs
outsb
dec
popa
cwtl
int3
cmp
ret
fistpl
clc
cmp
enter
cmpsb
repz
jne
adc
fsts
inc
outsb
sub
push
rorl
push
lock
lods
mov
mov
mov
shll
dec
adc
adc
jae
xor
and
add
test
push
test
mov
iret
fisttpl
jno
inc
jnp
rol
cmp
int3
xchg
sub
sub
mov
pop
imul
aad
push
cmp
cmp
movsl
mov
cs
idiv
mov
scas
jcxz
stos
or
lahf
pop
fsub
fldcw
movsl
fdivrs
aaa
xorl
out
jo
or
aas
ja
es
jp
xor
xlat
stc
imul
cld
sbb
and
loope
int
test
in
lods
push
imul
sbb
mov
rcrb
cmpsl
xchg
add
push
icebp
and
hlt
aas
xor
or
mov
add
aad
int3
mov
lods
sbb
jl
in
and
pop
sub
mov
rcl
cltd
sub
pop
insb
jl
mov
xor
popf
pop
outsl
ds
cmp
gs
into
cmpsb
and
dec
mov
mov
xor
and
push
xchg
push
pop
jmp
push
ja
pop
int
enter
sbb
lods
ljmp
add
aaa
mov
imul
data16
mov
cmpsl
cmpsl
sti
inc
sub
jbe
xchg
cmp
sbb
in
push
inc
clc
pop
into
mov
cmc
aam
jne
jno
dec
lea
mov
cs
testb
inc
loope
add
orb
sub
ja
stos
stc
push
mov
pop
add
movsb
fcmovnu
sahf
jae
jae
sbb
sbb
push
adc
sub
shrb
movsb
xor
mov
cmp
iret
outsb
mov
adc
cli
push
loop
xchg
dec
add
pop
scas
or
test
push
inc
ficomps
xchg
add
mov
push
or
jl
cmc
ret
push
and
push
mov
cli
fsubl
push
add
add
lds
mov
inc
adc
lock
adc
outsb
call
nop
aas
fadd
out
jae
aam
insb
ficoml
mov
fsts
mov
daa
ja
andb
push
push
sub
jbe
lock
daa
lods
cli
mov
repnz
mov
mov
lods
pop
leave
jns
and
popa
in
adc
std
popa
mov
je
out
shrb
xchg
mov
in
mov
stos
cmp
stos
dec
repnz
int3
stos
mov
jmp
xchg
sbb
cmp
sub
test
mov
js
inc
imull
rol
lea
int3
imul
stos
lret
mov
xchg
scas
push
scas
or
adc
and
sub
pop
pop
mov
sub
gs
sbb
fildl
icebp
mov
or
stc
insl
cmpxchg
loope
pop
loope
int3
enter
cwtl
in
stc
sub
inc
xor
pop
xchg
mulb
jge
fildl
sub
into
andl
jbe
fcmove
or
lea
adcl
sub
ja
xchg
mov
push
add
stc
pop
or
mov
sbb
data16
rcr
aam
mov
cmp
or
aad
xor
roll
jnp
stc
addr16
testb
dec
insl
idivl
fcoml
mov
fsub
sti
push
in
lret
jl
fnsave
in
lcall
fbld
stos
push
pop
push
mov
inc
push
mov
cmc
xor
ss
pushf
rorl
mov
push
or
js
std
lods
fildll
fs
cmp
cmp
cmc
ss
test
add
pop
xor
and
jmp
mov
popf
mov
ret
xor
mov
insb
push
aas
xchg
jmp
and
pop
outsl
jge
aad
jnp
push
sbb
loop
mov
fcoms
test
jo
dec
loop
mov
mov
out
adc
dec
pop
inc
mov
mov
add
lea
test
sub
sub
jns
sbb
sbbl
cwtl
rclb
movb
das
stos
ret
pop
leave
xlat
push
jb
inc
sub
inc
cld
push
lods
dec
lods
outsb
mov
and
orb
les
ret
addr16
out
adc
mov
dec
cltd
call
xor
mov
leave
push
mov
mov
push
push
xchg
push
jae
bound
sbb
sbb
lods
jb
cli
xor
pop
mov
add
mov
or
xchg
mov
into
push
sbb
inc
push
adc
jo
sub
pop
test
push
mov
and
movsl
popa
push
dec
sub
mov
inc
inc
sub
mov
cmp
inc
cwtl
pop
fnstcw
sarl
push
aaa
shrl
mov
arpl
repnz
xchg
test
sub
arpl
jae
shlb
add
into
jnp
xchg
das
js
or
or
fldt
mov
lret
inc
fsts
ds
sbb
stc
fs
jge
xchg
push
sbb
jecxz
ret
sub
inc
xchg
pop
adc
jge
mul
mov
dec
pushf
cmpsl
jne
insl
inc
or
loop
int3
push
lahf
pop
add
loopne
aas
jge
adc
mov
into
cmp
inc
mov
or
movsb
imul
nop
xchg
cmp
cmp
lock
movb
push
push
cmp
repnz
sbb
aad
imul
mov
push
ja
cmc
inc
xor
cmp
out
inc
sub
sahf
lcall
cmp
aas
out
test
pop
lahf
call
and
popa
cli
push
das
adc
dec
ret
jbe
out
adc
sub
inc
out
mov
pop
loop
and
addr16
sub
push
mov
xor
sbb
push
sbb
and
icebp
iret
cmpl
mov
and
icebp
lods
into
pop
push
sub
adc
add
icebp
add
push
pushf
rcll
cltd
sbb
mov
xchg
xor
jp
pop
subb
imul
jp
inc
push
mov
aaa
cld
gs
xchg
je
mov
xor
lcall
mov
jne
fiaddl
xlat
and
je
and
add
into
cmpsl
stc
les
sbb
popa
push
push
loope
inc
call
les
pop
lret
lret
sub
push
mov
call
jbe
stos
lods
insl
mov
ljmp
addl
movsb
pop
xchg
mov
movsl
scas
imul
adc
add
lret
mov
mov
fisttpl
and
out
stos
push
xor
je
cmp
xor
lret
imul
push
outsl
lea
or
aad
mov
sbb
inc
xchg
cmp
or
adc
scas
rclb
enter
and
and
mov
mov
lds
rep
mov
movsl
jb
les
and
sbb
cmp
sbbb
xchg
ss
pop
out
xlat
inc
push
jo
sti
mov
mov
add
inc
mov
pushf
or
test
jae
lea
loop
add
xor
sub
pop
xor
cmc
xor
std
xorl
ljmp
das
push
mov
test
xchg
arpl
or
mov
xlat
nop
cltd
jecxz
out
popa
lcall
sub
test
jns
mov
and
push
xlat
xor
imul
or
out
insl
sahf
dec
int3
jp
sbb
jmp
sahf
es
xchg
rclb
in
bound
or
pop
mov
fwait
test
movsl
fnsave
fcmove
out
mov
call
mov
mov
push
ljmp
jg
cmpsl
es
mov
stos
mov
daa
sahf
scas
outsl
iret
mov
mov
in
bound
insl
hlt
imul
jno
mov
jo
dec
dec
cmpsl
push
push
jno
adc
pop
mov
stos
pushf
lds
jno
rcrl
jnp
mov
sbb
adc
mov
scas
in
cli
jne
lcall
pop
inc
int
les
sub
push
sub
data16
pop
pop
insb
jecxz
vorps
int3
lahf
add
notb
mov
adc
sbb
addr16
mov
or
add
sarl
mov
and
stos
xchg
testb
or
subl
jg
mov
xor
rclb
cmp
aas
dec
hlt
andb
ss
add
pop
stos
cmpsl
lret
movsbl
xchg
adc
jg
sbb
movsl
adc
push
cmp
fadd
lds
xor
test
std
push
xchg
test
push
xor
xlat
out
arpl
pop
sbb
ret
xlat
inc
out
jnp
xor
movsl
jge
ret
push
scas
mov
ja
cmp
adc
or
sbb
and
xchg
mov
in
xor
inc
sub
push
add
faddl
data16
sub
sub
mov
inc
cmpsl
pop
push
xor
daa
or
cld
and
pop
fildll
in
test
aam
mov
dec
push
xchg
sub
inc
ret
js
mov
dec
out
fsubrl
sbb
cmc
js
sbb
xchg
mov
pop
aam
dec
shr
shlb
rcrl
in
icebp
mul
sbb
cmp
xchg
xor
sub
nop
xlat
insl
outsl
or
mov
scas
sub
pop
shl
dec
push
ds
lods
les
dec
dec
mov
mov
inc
daa
jae
fcompl
pop
inc
mov
add
jle
cmp
add
and
and
push
cwtl
inc
jbe
jp
inc
or
sbb
xor
sub
int
insb
jg
cld
mov
cmp
fiaddl
shlb
lock
sbb
push
lret
cli
gs
mov
pop
inc
push
fisttps
pop
das
insb
notl
gs
xor
push
adc
lcall
fistpl
scas
sbb
insl
fucomi
jg
movsl
lods
mov
fadd
adc
inc
test
jg
notb
je
push
dec
fdivrl
cld
cmpsl
inc
sbb
sub
add
adc
sarb
jle
jne
mov
jecxz
jbe
ret
mov
push
fsubrp
lock
mov
test
adc
pop
mov
push
add
and
bound
or
xchg
clc
int
outsl
sub
stos
jmp
call
jmp
mov
xchg
into
and
sub
push
cmp
lock
mov
mov
cmp
and
sbb
fcomps
outsb
data16
mov
idivb
dec
movb
ss
pop
icebp
sbb
or
mov
in
pushf
push
imul
cli
outsl
mov
dec
mov
cmp
std
je
roll
ds
pop
and
mov
mulb
test
jl
dec
push
aad
in
jmp
into
out
sahf
call
push
xor
leave
jne
mov
sub
js
pop
icebp
stos
les
decl
lret
leave
pop
lahf
fcom
adc
insl
es
and
xor
aam
pop
dec
push
pop
cltd
stos
pop
or
loopne
movsl
mov
out
adc
imul
push
daa
push
out
dec
cmp
fidivrl
inc
mov
xchg
mov
rcl
fwait
push
adc
pushf
pop
fistps
lods
and
xlat
mov
icebp
xor
dec
fbstp
fsubr
pop
rcrl
je
ljmp
rol
scas
mov
jl
bound
fisttps
outsb
in
loope
aad
loope
push
xor
shrb
xacquire
jbe
sbb
sahf
dec
cmc
add
test
sbb
xor
loop
or
push
and
int3
out
clc
movsb
sub
add
rcrb
mov
cwtl
jle
fldt
ret
jnp
sub
push
sbb
pop
inc
aam
xor
adc
loop
aaa
bound
or
mov
inc
adc
xor
push
imul
mov
xor
idivl
cmpsb
fwait
aaa
das
in
repnz
mov
out
je
enter
insb
mov
ljmp
dec
shrl
push
add
xsave
std
pop
movsb
xchg
arpl
xchg
push
inc
mov
inc
insb
imulb
popa
and
mov
push
and
push
lock
rclb
jno
lret
into
scas
sub
insb
fs
adc
fistpl
pop
outsl
push
push
fdivp
out
scas
lret
mov
jle
outsl
jns
notl
pop
shlb
or
mov
push
sarb
int3
jl
or
adc
adc
imul
mov
cmpsl
mov
cmp
cmp
push
mov
jne
ljmp
shlb
les
fs
fimull
or
arpl
mov
cmc
hlt
pop
jp
mov
push
xor
sbb
data16
das
rorl
push
dec
out
arpl
pop
or
clc
stos
inc
add
cmp
sub
je
sbb
mov
or
pop
lea
insl
jnp
mov
push
jae
movsb
sbb
insb
add
mov
in
xor
hlt
and
jno
vaddss
mov
dec
xchg
mov
jle
gs
int3
lea
push
pop
fs
sub
xor
out
xchg
push
sahf
xor
dec
sub
mov
out
mov
dec
mov
mov
lods
mov
mov
sbb
popf
pop
jp
xor
out
lods
mov
pop
fdiv
mov
pop
sbb
mov
xchg
fadd
and
adcb
popf
cmpsb
pop
mov
ja
inc
or
or
sahf
shll
or
jbe
sbb
cmpsl
xor
in
test
cmp
cmp
mov
mov
loope
push
movsl
iret
dec
xchg
ds
jns
push
insb
mov
adc
repnz
fstp
leave
rolb
out
insb
xchg
mov
shlb
fimuls
add
mov
push
in
mov
adc
dec
adc
insb
bound
cmp
cmpsl
icebp
jp,pt
js
mov
ret
dec
lods
add
inc
jns
ljmp
push
adcl
sub
and
pop
add
outsb
mov
xor
dec
jmp
and
push
sbb
mov
cmp
hlt
mov
push
xchg
sub
dec
lods
xor
fldcw
das
mov
pop
lret
xor
lret
and
ljmp
inc
hlt
movsb
cmp
cmpsl
movsl
enter
das
sahf
insl
orb
pop
xchg
or
xlat
mov
bound
cmpsb
sbb
xchg
enter
and
aad
pop
inc
cld
inc
dec
mov
int
or
mov
adc
or
loopne
or
adc
mov
movsl
mov
cmp
jbe
out
xor
or
lret
push
or
jns
lods
test
dec
inc
push
add
ret
add
sbb
test
xlat
rorb
notl
cmc
es
mov
movl
stos
push
xor
je
mov
inc
rol
cmpsb
mov
cmpsl
aaa
cld
sbb
paddsw
outsb
lret
rcl
xchg
xor
fisubs
sbb
lret
inc
cli
cmp
push
push
loopne
orl
mov
lcall
andl
into
mov
cmp
inc
or
mov
push
std
mov
in
xchg
cmc
sub
xor
dec
mov
adc
mov
iret
inc
or
jmp
jns
imul
ds
movsb
xchg
pusha
les
pop
subb
jg
cmp
xlat
pop
mov
rclb
leave
jnp
pop
mov
mov
into
lcall
pop
adc
insl
cltd
push
adc
pop
or
cli
pop
mov
xchg
nop
dec
mov
ss
push
xchg
adc
adc
imul
hlt
mov
push
lea
fmull
xchg
ret
shlb
stos
cli
mov
mov
inc
or
imul
das
or
mov
inc
daa
rolb
int
or
dec
fsts
cltd
cs
loopne
jb
and
sub
push
testb
imul
xor
addr16
mov
jl
or
xor
cmp
push
mov
push
push
or
push
sub
push
xchg
sbb
dec
nop
mov
out
ss
push
xor
lret
sahf
sahf
push
push
xchg
fnsave
repz
inc
push
in
xchg
leave
scas
and
xchg
xor
pop
mov
outsl
jecxz
lock
pop
mov
cmc
ret
xchg
mov
adc
mov
cmp
test
cmpsl
cmp
mov
hlt
xor
fidivl
pop
push
jmp
pop
mov
xor
pushf
mov
aas
and
mov
js
scas
pushf
ljmp
sti
bound
imul
mov
mov
push
inc
iret
mov
inc
addr16
jmp
imul
jne
pop
call
push
xor
xor
inc
adc
mov
push
mov
stos
iret
fnsave
scas
ret
rorl
pop
sub
outsl
push
or
loopne
inc
push
mov
stos
into
flds
shrd
pusha
sbb
jge
in
scas
enter
enter
mov
int3
cli
popa
les
push
test
add
sub
add
sub
std
jns
xchg
mov
adc
mov
into
lahf
or
ret
punpckhwd
jo
mov
lods
push
cmp
bound
leave
mov
mov
arpl
fs
loope
jge
dec
or
sub
inc
mov
add
fadd
fs
sub
and
pop
mov
fs
cli
loop
stc
sub
fsub
sbb
jge
lcall
jg
jbe
adc
lds
pop
fdivl
stos
into
push
ds
test
lods
call
lock
dec
mov
test
movsl
inc
jmp
fsubrl
lea
mov
jae
cwtl
xor
mov
ljmp
cmp
fucomi
cmpl
aam
adc
in
pop
cs
add
mov
cmp
sti
lods
aas
jbe
ja
in
mov
xor
mov
sub
inc
pop
js
iret
mov
cli
sub
xor
idivl
aam
insl
fisubrl
and
inc
repz
jne
lea
sbb
pop
cmp
subl
ljmp
and
or
mov
in
jns
mov
jb
shl
int3
fcomps
push
cmpsb
and
int
bound
jns
jns
stos
mov
aam
les
lret
loope
scas
cmp
rol
xor
paddw
rcr
and
sbb
xor
mov
or
cli
daa
push
sub
insl
dec
jge
lods
mov
xchg
jmp
push
dec
test
fcoml
mov
sub
scas
mov
and
imul
jo
xchg
lret
ds
jno
xchg
fs
mov
jle
cmpsb
jb
int
out
cmpsl
push
in
mov
cmc
fbstp
lret
imul
cmpsb
xchg
lods
xor
loopew,pt
mov
int3
push
pushf
sarb
andb
dec
fidivrl
sbb
mov
pop
ss
and
xor
cld
in
jp
out
sub
pop
dec
in
fstl
xchg
dec
push
in
lret
movsb
js
bound
mov
call
aam
call
mov
jae
sti
test
int3
icebp
sbb
sub
xor
cmp
pusha
jl
xorb
js
jne
cwtl
mov
fidivs
mov
adc
xchg
pop
dec
and
aad
jp
jl
jmp
lea
adc
mov
lahf
hlt
roll
loop
das
into
jle
adc
popf
sub
cmc
inc
mov
mov
das
mov
push
stc
leave
enter
dec
mov
cs
cli
dec
imul
and
mov
call
scas
xorps
loope
xchg
popa
loop
je
push
pop
inc
adc
cli
mov
aad
add
imul
scas
ret
cmc
add
popf
sbb
lds
mov
cli
jle
scas
jge
idivb
out
jbe
or
xchg
cwtl
push
sahf
js
std
les
aaa
cmp
jbe
loope
mov
xor
dec
and
jo
imul
out
gs
inc
loop
test
out
lods
mov
insb
jns
test
lods
push
mov
jl
and
incb
in
das
stos
daa
sti
add
mov
or
pop
sub
arpl
pop
vcomisd
jmp
push
ds
insl
mov
pop
test
xchg
add
leave
das
ret
leave
out
cmp
mov
ret
lret
jp
ret
mov
pop
iret
test
fsubrs
cmp
jp
mov
pop
sbb
cltd
inc
clc
outsl
adc
movsl
sbb
add
aaa
cmp
inc
icebp
sub
es
stc
jbe
pop
push
xchg
and
add
adc
in
push
sahf
inc
adc
cwtl
sub
into
xchg
sbb
cmovns
dec
pop
arpl
sbb
xor
or
push
rcr
jl
imul
cli
xor
enter
mov
dec
xlat
lahf
mov
leave
insb
mov
cmpsb
in
dec
aas
aas
sti
hlt
test
inc
jle
xchg
icebp
aas
jb
adcl
pop
or
rcr
xchg
mov
and
test
push
pushf
das
rcr
icebp
and
jmp
ret
int
sub
std
shl
mov
push
cltd
mov
sti
nop
rcll
addr16
mov
imul
leave
adc
stos
pop
decl
imul
loope
ret
out
pop
dec
jo
lret
pop
mov
jmp
iret
adc
pop
addr16
or
xor
mov
push
and
loopne
dec
push
sbb
outsl
inc
inc
xchg
jb
pushf
jmp
cmp
jbe
pop
xchg
sub
call
add
in
insl
and
fs
sub
popa
popf
cltd
jmp
mov
dec
adc
mov
test
dec
mov
and
rcrl
jg
fildl
shlb
add
daa
orb
mov
je
movsl
xor
scas
dec
dec
jno
dec
mov
push
jp
jno
pop
cmp
dec
dec
fistpl
push
xchg
loop
mov
dec
gs
jbe
es
data16
pop
and
cmp
loope
shl
xor
popf
sbb
leave
mov
test
ss
and
mov
push
daa
xchg
xor
push
ljmp
adc
aas
sub
adc
clc
push
aad
inc
adc
repnz
repnz
cmp
add
add
pop
popa
mov
gs
mov
mov
ja
and
inc
das
adc
cs
jge
xchg
jbe
pop
jp
jns
inc
mulb
icebp
in
push
add
nop
fists
into
adc
push
cltd
inc
movsb
jbe
xchg
or
stc
mov
out
js
mov
push
sub
dec
cmp
nop
sub
jp
test
call
xchg
popf
xlat
stos
int
scas
jp
arpl
stc
mov
fisttps
xchg
les
mov
lret
push
inc
cwtl
or
jge
add
push
loop
push
mov
and
outsl
cmp
sbb
push
dec
jb
in
imul
icebp
sbb
adc
imul
call
add
test
popf
ss
jb
dec
jmp
jns
jb
pushf
inc
push
mov
loopne
push
sbb
lahf
iret
mov
mov
mov
xchg
pop
daa
mov
les
fstpl
icebp
lahf
mov
test
out
movsb
mov
cmpsl
mov
repz
iret
in
and
dec
imul
rclb
dec
push
jb
movsl
jg
sbb
inc
arpl
ljmp
test
fs
dec
sub
insl
fldenv
fnstenv
xchg
mov
call
mov
inc
shlb
push
dec
sbb
inc
jl
notb
add
test
movsb
adc
sub
in
sbb
cmpsl
pop
popl
pop
xchg
lret
xor
or
jb
cmp
lcall
sbb
inc
jbe
add
repz
or
dec
xchg
pand
or
rcl
dec
pop
mov
cs
clc
loope
stc
lock
out
jge
jb
mov
mov
push
jp
dec
lahf
cmovo
push
cltd
cmc
jns
lods
aas
cld
cmp
clc
cmp
movb
sub
xchg
push
arpl
std
dec
rclb
popa
push
shl
cmpsb
push
dec
mov
insb
int
mov
imul
out
adc
mov
int3
movsl
out
js
test
cs
lcall
jecxz
cmpsl
push
mov
and
and
fstpl
jl
xor
push
cli
xchg
add
push
push
test
cmc
inc
cmp
das
repz
jno
cld
push
clc
xchg
sbb
pusha
mov
push
adc
xchg
ret
inc
test
and
sbb
push
cmp
lcall
fnsave
adc
sub
inc
nop
hlt
js
addr16
loope
cmc
iret
xchg
xchg
test
sarl
aad
jae
xchg
ret
dec
xor
xor
loope
cwtl
inc
sbb
out
mov
push
and
test
out
add
test
add
xor
mov
movsl
hlt
inc
pop
out
adc
lock
fs
das
lahf
pop
ljmp
jmp
jbe
popf
mov
lret
out
sub
mov
inc
push
ss
dec
imul
lods
mov
int3
subl
sbb
test
push
int
mov
cmc
out
jge
pop
mov
push
push
cmp
dec
push
mov
push
bound
cwtl
imul
mov
dec
mov
stc
or
loope
popf
ficoml
xchg
sbb
stos
pop
iret
mov
pop
cmp
ljmp
out
gs
jbe
ret
jge
fmuls
sbb
jecxz
negb
bound
sub
jmp
rolb
pushf
lods
inc
out
sub
xchg
test
mov
pop
mov
xchg
adc
pushf
shlb
imul
mov
pop
mov
mov
adc
ret
sub
cltd
lcall
int3
mov
lret
jp
mov
sub
mov
addr16
repnz
shll
popf
inc
fs
aaa
test
leave
jmp
mov
inc
in
add
xlat
aad
adc
ret
xor
push
mov
mov
and
das
fbld
scas
pop
mov
inc
pushf
loop
repz
pop
repnz
jle
sub
cmp
outsl
sbb
lret
lea
inc
clc
out
inc
fstp
out
test
jle
lcall
fs
jo
mov
mov
lcall
jnp
loop
test
dec
mov
xor
sbb
xchg
dec
dec
dec
icebp
fimull
mov
cltd
imul
inc
sub
inc
inc
add
sbb
push
pop
mov
pop
aas
xor
cmpsl
mov
lds
xchg
pop
jle
dec
lcall
jl
sbb
sub
bound
insb
dec
scas
insb
and
enter
leave
repz
mov
jne
cmp
push
imul
fwait
int3
jno
add
addr16
in
orb
xlat
call
cmp
stc
fwait
ljmpw
stc
mov
fiaddl
sbb
mov
call
push
and
sbb
stos
sbbb
movsl
mull
cwtl
pop
cmp
int
and
adc
add
mov
mov
rcrl
push
push
push
ret
xchg
or
mov
scas
or
shr
dec
or
push
adc
sar
cmp
movsl
fnstcw
adc
dec
fidivrs
push
test
xor
loop
std
ss
std
mov
dec
insb
outsb
scas
mov
mov
xor
sbb
jae
ds
or
nop
lods
outsb
sub
cmp
popf
or
ja
pop
stos
test
or
pop
cwtl
mov
inc
push
mov
in
out
adc
lahf
sbb
mov
test
test
push
sub
cwtl
rcrb
lret
jg
jge
repnz
inc
or
sahf
fldenv
inc
lods
dec
lock
hlt
in
es
aaa
mov
add
in
sub
pop
xchg
int
push
stos
adc
stc
xchg
inc
jg
aad
inc
enter
sar
stos
pusha
pop
pushf
push
pop
fcmovb
les
push
pop
mov
cmp
mov
ja
bound
dec
popf
pop
js
loop
or
icebp
xor
stc
outsb
xchg
shrl
pop
popf
jno
jne
aas
lcall
sbb
xlat
int
mov
and
dec
and
enter
inc
scas
pop
mov
outsl
fmull
icebp
xor
iret
cmp
xor
or
cld
cmc
add
dec
xchg
test
lea
cmp
ds
jl
cld
aad
cmp
pop
adc
xchg
cmp
aad
sbb
fists
mov
cmp
mov
ds
lret
loope
pop
fcmovbe
dec
xchg
loopne
fidivrs
mov
inc
inc
or
or
or
xor
sub
inc
ds
pop
push
imul
test
cmp
xor
imul
in
stos
das
jmp
mov
dec
mov
in
sub
call
xor
mov
and
test
xchg
pop
jmp
sub
and
cwtl
mov
or
pop
sbbb
pop
sbb
xchg
icebp
jno
mov
push
outsb
mov
stc
mov
and
and
das
sub
outsb
sub
adc
cmp
dec
pop
cmpsl
cmp
xchg
inc
inc
loop
pop
outsl
cmp
fdivrp
negb
ja
loope
outsb
out
in
cli
ficompl
xor
out
xchg
push
mov
rol
popl
xchg
pop
xor
jg
pop
test
adc
mov
aas
repnz
dec
dec
movsb
lea
std
fdivl
jg
sarl
loopne
inc
xor
sbb
fwait
js
and
add
adc
mov
popa
pop
je
cmp
pop
xchg
lcall
testb
and
xchg
ss
lcall
xlat
hlt
jmp
daa
inc
add
fidivs
mov
dec
clc
sbb
lahf
cmp
jl
sub
or
pop
mov
adc
imul
cmp
ds
inc
xor
push
xor
lahf
lea
inc
mov
and
dec
jbe
push
sbb
into
sahf
push
mov
lods
stos
add
hlt
mov
or
cmpsl
push
push
or
mov
jo
and
dec
xor
dec
cmp
and
sub
xchg
xor
xor
dec
pushf
enter
xor
mov
xor
jne
jecxz
jmp
icebp
imul
add
xlat
cmpsl
loope
jb
cmp
lcallw
adc
sbb
enter
xor
jecxz
ss
dec
inc
pop
mov
in
daa
sub
aad
xchg
cmp
lods
and
pop
jmp
xor
lock
je
jge
push
adc
jnp
xor
xchg
mov
adc
and
inc
dec
pop
mov
mov
int
sub
jmp
jp
addr16
mov
mov
push
shll
pusha
pop
mov
jl
mov
xchg
pop
in
mov
gs
push
xchg
xor
ss
inc
dec
cli
cwtl
movsl
test
shll
ret
outsb
inc
cli
das
outsb
adc
stc
loopne
mov
sub
enter
mov
dec
es
sbb
cmpsb
jbe
stos
sub
enter
mov
dec
pop
psubsw
mov
sysenter
jo
nop
push
mov
jp
int
into
ja
pop
test
pop
sarb
lcall
pop
cmp
in
xchg
or
out
ffreep
daa
push
pop
or
pushf
mov
mov
or
js
lret
dec
jns
stos
pop
pop
icebp
loope
ficoml
sbb
cs
add
lret
divl
aaa
cld
dec
gs
xor
mov
jmp
testl
into
scas
pop
pop
insl
es
pop
jp
xchg
lock
sbb
xchg
pop
insb
jecxz
mov
addb
js
fdivrl
push
cmp
repz
mov
pop
sbb
push
les
or
xchg
or
jmp
xor
pop
test
mov
mov
cmpsb
add
jp
and
inc
push
cmp
add
pop
pusha
into
sbb
imul
dec
in
lods
and
dec
fs
dec
push
and
mov
sbb
subb
push
xchg
push
xlat
out
mov
test
inc
in
lods
xor
bound
xchg
push
jno
insb
mov
dec
inc
repz
imul
xor
mov
lret
push
iret
inc
enter
and
mov
sti
jb
mov
stos
je
cmp
shlb
shrb
mov
jge
pop
and
and
push
pop
or
aam
cmp
add
jbe
in
xchg
out
push
mulb
add
sub
cmp
inc
ficoms
xlat
xchg
cmpsb
fmuls
repz
int3
movsl
xor
push
mov
test
push
ja
out
mov
in
pusha
sub
xor
inc
fistps
fwait
push
stos
and
mov
test
jecxz
adcb
or
mov
in
outsl
push
fwait
pop
ret
ja
fs
push
pop
jo
movsl
loop
fildll
daa
pushf
jno
adc
insl
in
push
add
fidivrl
pop
loop
adc
xor
cmp
pop
in
sub
out
sahf
mov
ljmp
aam
jb
lahf
xor
jle
sub
sti
ja
inc
lock
sbb
inc
mov
jg
push
cmc
adc
push
pop
sbb
pop
sub
adc
cmp
jne
stos
pushf
push
mov
mov
pop
decl
shl
jne
and
xor
mov
jl
mulb
imul
pop
arpl
fldcw
cmp
rep
es
cmp
xchg
mov
or
pop
jp
xor
dec
pop
jae
jae
cs
fs
flds
xchg
loop
mov
mov
dec
and
mov
int
andb
idivb
inc
aad
mov
std
cmp
jmp
sub
mov
mov
fimull
sub
and
stos
fs
adc
sub
dec
xor
pop
gs
aaa
and
mov
dec
jg
fisubs
testl
inc
add
lahf
scas
jmp
mov
xor
cs
jo
xor
push
mov
hlt
dec
and
and
lret
les
jmp
int3
xor
xor
insl
fimuls
fndisi(8087
hlt
push
inc
jecxz
jne
cmp
insl
out
jl
out
mov
dec
mov
mov
pop
jle
cld
cmc
mov
jbe
imul
pop
aam
adc
repz
xlat
repnz
inc
sub
cs
jb
cld
sbb
dec
iret
xchg
add
js
leave
nop
xor
mov
bound
adc
js
jmp
rclb
and
sub
or
les
mov
in
jbe
mov
mov
je
lds
mov
push
sti
mov
dec
std
ret
cmp
std
fyl2xp1
cmp
xor
jno
mov
cmpsb
call
jge
stc
cmp
inc
xor
pop
in
lea
iret
enter
stc
cmpl
in
popf
cs
leave
lret
test
cmpsl
shl
sti
bnd
pop
incb
cmp
repnz
mov
icebp
bound
fsubrs
arpl
jge
sbb
mov
stos
inc
jp
jl
push
enter
std
out
mov
add
jge
lock
sbb
cwtl
in
out
aam
scas
dec
and
daa
loope
fucom
les
mov
inc
cltd
inc
insb
pop
mov
adc
xchg
popa
mov
daa
jns
xlat
adc
ss
adc
ret
jl
les
cmp
cltd
mov
add
mov
jo
mov
cwtl
mov
push
jnp
cltd
fwait
lcall
data16
dec
lahf
sarb
push
push
ret
repnz
jle
imul
scas
popa
sbb
adc
aas
cwtl
sub
notl
in
fnstsw
sahf
and
rolb
je
lds
fmuls
int
jg
repz
mov
mov
shrl
jp
out
xchg
jle
in
xchg
out
lods
inc
in
sarl
adc
stos
sub
xor
mov
xchg
jno
es
pop
sahf
mov
lahf
inc
adc
mov
arpl
jae
cmp
es
rcrl
mov
fisubrl
xchg
push
jle
data16
scas
jnp
mov
sahf
jmp
in
xor
add
xchg
add
out
lods
aad
or
sub
push
fnstenv
add
sbb
leave
scas
call
lods
sub
xor
adc
dec
aas
rorb
popa
stos
mov
rcll
dec
dec
pop
popa
ss
aaa
shlb
mov
cmp
adc
enter
cmpsb
push
scas
into
dec
mov
add
dec
cmpsl
sub
cld
pop
fsubrs
inc
insl
mov
pop
in
dec
repz
cmc
cli
call
cltd
sbb
ret
cmc
insb
je
mov
jecxz
jg
loopne
std
pushf
mov
and
lcall
jbe
sub
pushf
cld
add
je
mov
pop
and
leave
mov
jno
sub
stos
enter
call
and
push
adc
mov
xchg
add
and
xchg
gs
jno
sbb
out
xchg
rol
mov
sbb
mov
mov
test
mov
mov
pushf
nop
or
cmp
scas
sbb
push
push
popf
push
push
mov
xchg
mov
jle
aam
les
rolb
popa
jno
push
push
dec
lods
dec
jp
sub
cs
popf
pushf
sub
add
jle
test
test
sub
or
sarl
aas
mov
mov
jle
sbb
push
mov
mov
mov
lcall
and
mov
rolb
jle
movsl
jmp
mov
mov
inc
mov
xchg
mov
cmp
add
xchg
sub
pop
ds
xchg
outsl
in
notrack
xor
inc
fsts
adc
add
push
mov
mov
dec
shl
jge
jecxz
sub
xchg
adc
adc
int3
add
in
pop
sub
hlt
daa
push
mov
push
lahf
mov
mov
xchg
and
sub
shll
es
jmp
repnz
loope
or
mov
ljmp
push
in
mov
or
cmpsl
repz
jmp
add
mov
push
fcomps
mov
insl
mov
adc
mov
or
out
xchg
mov
and
das
test
jb
stos
loope
pop
pop
cmpsb
mov
sub
mov
pop
adc
adc
cs
aas
aad
mov
repz
mov
pop
jnp
mov
sbb
imull
xor
push
mov
fs
ret
imul
int
pop
daa
stc
push
icebp
jl
or
push
jmp
fwait
mov
xor
cmpsb
addr16
or
and
jg
iret
cmp
xor
xchg
cltd
cli
in
sub
ss
movsl
insl
addl
mov
dec
and
out
push
dec
insb
shlb
fsubrl
stos
repnz
lret
call
fidivrs
and
imul
in
and
ficompl
adc
inc
loop
das
inc
mov
aad
lret
sbb
leave
xrelease
mov
mov
incb
add
mov
movb
lods
jle
jge
iret
mov
out
stos
push
aam
sarl
and
rolb
cwtl
mov
aam
fcomps
les
push
jnp
setbe
mov
pop
cmp
inc
lea
xor
or
outsl
xchg
mov
icebp
fistpll
cmpl
jbe
jns
test
pop
mov
xlat
pop
in
ror
sub
inc
mov
aas
push
imul
es
rorl
in
pushf
sar
pop
fsub
xchg
push
mov
cmpsb
adc
in
aam
andps
inc
pop
or
repz
fwait
stos
inc
lock
bound
sbb
push
movsb
push
sarl
mov
test
call
and
mov
cli
xchg
fnstsw
xchg
add
lds
rcrl
jg
mov
cmp
out
mov
xchg
cld
icebp
cmp
mov
mov
faddp
loop
fdivrp
fcompl
daa
popf
jbe
or
outsl
dec
ds
jae
push
es
pop
hlt
mov
aad
mov
jp
rorb
dec
mov
jl
cli
popa
sub
clc
daa
sbb
mov
lock
adcb
lods
repz
test
pop
out
xchg
decl
les
sidtl
shrb
std
pop
aam
cmp
mov
scas
dec
mov
fnstsw
push
jge
jl
cmp
xor
add
cs
shlb
lahf
js
xor
loope
mov
pop
cmpl
sbb
test
test
out
sarl
xor
mov
xor
shrb
enter
and
cld
cmp
ret
jl
fildl
cltd
adc
ret
sbb
fs
jp
inc
mov
jo
imul
sub
push
and
out
punpckhbw
addr16
inc
push
mov
dec
fdivr
mov
in
jae
in
aas
dec
dec
shrb
cmp
out
push
js
mov
dec
push
mull
xor
das
jg
cmp
or
and
mov
adc
sbb
jmp
scas
add
pop
bound
sbb
pop
add
dec
insb
mov
pop
mov
stos
and
mov
mov
push
mov
out
cld
aam
fwait
or
imul
rol
gs
xchg
fdivrs
int
or
dec
xchg
orl
in
into
shlb
cwtl
mov
mov
sahf
lret
mov
std
scas
into
rcrl
inc
repz
cmp
ss
cmp
or
in
shr
into
mov
dec
test
jnp
xchg
pop
pop
aam
popf
cltd
sbb
push
pop
iret
and
pop
lods
fisttpll
test
push
negl
mov
test
push
imul
mov
lods
mov
mov
ficoml
in
dec
les
cli
cmp
mov
mov
xchg
jmp
sbb
inc
jle
fimull
in
pop
repnz
lock
cmpsl
js
ss
imul
stos
or
cwtl
xchg
mov
jp
outsl
fdiv
mov
push
repnz
in
in
dec
adc
fcmovu
fwait
mov
lret
cs
bound
repnz
mov
fwait
clc
out
pushf
inc
ret
outsl
inc
push
or
in
shll
mov
pop
aad
mov
in
pop
jb
xlat
push
push
mov
es
ss
xchg
pushf
hlt
stos
leave
stc
rclb
in
ret
movsb
movsl
out
lds
rorb
lock
leave
popf
mov
into
mov
push
lds
dec
sbb
sub
xchg
clc
jge
enter
jle
xor
loopne
mov
jno
mov
pushf
lds
xor
out
aad
loope
sbb
subl
inc
ffree
leave
ja
mov
xor
mov
fstl
cmp
cld
pop
or
pop
fs
rorl
scas
or
insb
sbb
mov
inc
in
fiadds
jnp
mov
push
cmp
cltd
pop
mov
cmc
cmp
cld
pushf
lret
jnp
fidivrs
add
in
xor
outsl
enter
pop
or
jl
movsl
add
daa
or
repz
enter
andl
and
fcmovnb
push
loop
ss
fwait
xor
jno
adc
in
hlt
ficoms
in
sarb
and
pcmpeqd
fiadds
jle
test
jl
adcl
loopne
daa
mov
dec
xor
xor
mov
lock
enter
or
dec
divb
mov
sahf
inc
push
sar
repz
std
push
addr16
testb
push
sub
shr
loope
in
xor
mov
aam
mov
add
dec
dec
cltd
xor
mov
bound
jl
lock
rcrb
aam
sub
pop
cld
hlt
ds
das
movl
pop
jbe
mov
sub
sbb
xchg
es
add
dec
or
sarl
scas
fs
cmc
stc
test
rorl
push
xchg
cmpsb
scas
das
rcll
and
push
fidivs
xor
push
mov
and
mov
and
dec
addl
add
jno
fadd
insl
mov
jb
arpl
sub
jecxz
mov
lods
mov
insb
cmpsb
jo
jbe
popf
fstpl
loope
out
pushf
pop
js
or
test
imul
sub
jl
mov
inc
lock
imul
mov
xchg
iret
in
sub
or
lock
push
mov
jge
adc
sbb
and
push
push
inc
into
cmp
roll
lods
sub
fiaddl
fiadds
pop
sub
mull
rcrb
ja
sub
sbb
flds
jle
sarb
insb
inc
jno
inc
add
sub
movsb
scas
cs
rolb
sub
mov
std
cmp
sbb
sahf
add
in
loop
mov
int3
jb
in
and
cmpsb
mov
xchg
mov
aas
sbb
daa
xchg
mov
pop
rorb
dec
mov
xor
repnz
pop
or
xchg
mov
btc
movsl
scas
loop
adc
jbe
ds
daa
lods
ljmp
pop
pop
loop
inc
jae
ret
push
lret
lds
mov
loop
add
mov
cmpsl
outsl
pop
xchg
mov
mov
fidivrl
cmp
xor
addr16
movb
push
jno
cs
push
inc
movsl
mov
jge
mull
sti
mov
sbb
cwtl
mov
lock
imulb
jae
fwait
out
mov
in
lahf
test
fs
ljmp
rcl
loope
ret
fisubrs
add
repz
dec
mov
mov
aaa
leave
inc
aas
mov
xchg
out
jb
fs
sub
xorl
daa
pop
rorb
scas
xor
pop
idivl
and
cli
mov
loope
imul
into
pop
inc
mov
inc
push
push
pop
stc
lods
in
pop
or
sahf
mov
popf
mov
iret
push
sahf
js
pop
xchg
mov
scas
sub
popa
cmc
je
rcrl
xchg
and
cwtl
mov
pop
fbstp
hlt
jl
call
xchg
sub
mov
out
lods
jge
out
test
popa
mov
mov
lods
xchg
das
call
dec
or
mov
test
test
ds
mov
mov
je
ja
aas
mov
pop
test
xchg
pop
add
sbb
push
je
mov
sbb
in
jnp
xlat
insl
jmp
shll
xchg
ds
mov
repnz
outsl
movsb
push
test
in
int
mov
sub
lret
fnsetpm(287
shlb
cmp
outsb
mov
mov
cld
fucomi
sub
aam
jo
sbb
sbb
in
pop
mov
lea
ret
jmp
jg
mov
pop
inc
cwtl
enter
pop
ja
ja
pop
add
pushf
inc
inc
jnp
pop
mov
pop
dec
dec
stc
jae
sub
jbe
out
cld
aaa
call
pop
fbld
and
mov
mov
push
cmp
sub
jb
std
insb
adc
sbb
int3
lea
repz
jle
add
bound
xchg
fcomps
mov
clc
xchg
mov
pop
fwait
jl
cmp
inc
inc
xchg
jbe
repnz
push
jl
sahf
fsubl
aas
mov
neg
stc
ret
mov
stos
aad
xlat
mov
mov
sub
xchg
in
add
mov
repnz
insb
sti
orb
mov
sbb
repnz
arpl
lcall
or
fnsave
test
les
sbb
xor
jo
pop
jbe
cli
sahf
jl
and
fcoml
nop
in
pop
repnz
push
inc
bound
sbbl
mov
pop
iret
pop
dec
inc
or
mov
fdivrs
sbb
push
out
or
out
out
ss
call
xchg
pop
lods
lret
dec
push
push
aam
sbb
out
inc
cli
mov
fistpll
aaa
pushl
es
mov
fbld
push
repnz
dec
clc
mov
jne
stos
or
mov
cmc
fisubrl
sti
mov
mov
jnp
out
fcomp
sub
in
push
sti
jns
mov
fwait
rcr
jle
stos
adc
mov
rcrl
loopne
and
mov
sub
or
movsl
sbb
mov
xor
std
bound
paddsw
push
int3
ss
mov
mov
inc
xchg
cmp
xor
outsb
xchg
cmp
mov
adc
lock
or
in
pop
test
sbb
sahf
in
xor
out
fstps
xlat
adc
mov
call
sbb
test
ja
adc
jae
data16
jg
pop
aad
aaa
in
pop
ret
xlat
loop
pop
or
es
mov
dec
outsl
xchg
ja
rcrb
jecxz
inc
push
insl
aad
fistpl
cmp
mov
fildll
fsubl
pop
insb
sti
loopne
stc
add
and
mov
jo
out
pop
insb
and
aas
jno
mov
push
jle
imul
gs
iret
rep
lahf
jmp
fidivrs
cmp
aas
movsb
mov
xor
push
push
fdivr
adc
push
mov
and
ret
xor
xchg
les
cmpsl
lret
sbb
mov
loope
push
test
cltd
mov
push
scas
sahf
lcall
dec
daa
js
out
clc
pop
icebp
mov
insl
ds
add
in
xor
xchg
shlb
inc
ret
pop
imul
loope
test
insl
mov
test
cli
or
loope
filds
mov
jg
xchg
adc
adc
out
mov
ficompl
int3
mov
lock
sub
hlt
dec
insl
dec
out
xchg
sub
lea
dec
jecxz
push
push
sahf
or
test
mov
insb
jno
mov
pop
mov
adc
lahf
pop
sarl
lods
jnp
and
mov
pushf
in
enter
push
mov
pop
cmp
cs
cltd
repz
nop
and
push
adc
mov
fdivrl
imul
sbb
mov
mov
push
shl
sbb
dec
fwait
cmpsl
fidivrl
lret
cmp
pop
lods
mov
mulb
cli
fistpll
fcmovnu
cmc
xchg
ljmp
jae
das
repnz
rclb
cli
sbb
mov
leave
addl
nop
cwtl
dec
mov
mov
xchg
outsb
ss
stos
lahf
pop
mov
xchg
lahf
xlat
and
repz
int
jmp
sub
mov
xor
lret
popf
leave
pcmpeqw
cmp
jae
pop
sbb
in
aam
pop
push
scas
imul
sub
enter
mov
push
outsl
push
push
mov
jne
adc
ds
inc
lock
mov
decl
enter
das
xor
inc
cmp
xor
cmpsb
mov
ficoms
loopne
xchg
add
fnop
imul
in
insb
dec
movsl
mov
sahf
lret
mov
xchg
or
or
lock
outsl
fucomi
int
xor
xchg
ror
jne
int3
shr
sbb
mov
mov
cs
fidivrl
dec
fwait
and
popf
mov
ds
push
packssdw
fwait
cmp
cld
inc
mov
bound
pop
push
or
ret
pop
int3
call
sarb
or
adcb
add
add
sub
push
push
adc
jnp
add
ja
dec
mov
mov
push
push
ret
mov
lea
and
ret
lea
push
in
je
loop
xchg
mov
adc
mov
les
fbld
arpl
iret
jne
add
lret
mov
pop
int
lea
xor
sbb
lahf
cwtl
sbb
mov
mov
xor
jb
pop
lock
push
out
ret
aaa
loope
outsb
rol
xor
test
xchg
fistps
mov
mov
push
rcr
cmp
popa
shr
sbb
xchg
jg
cs
ljmp
sub
xor
aad
push
sarl
mov
fidivl
lods
sarl
push
jp
inc
das
mov
inc
jb
test
popa
scas
dec
test
or
test
adc
or
addr16
int3
mov
sti
or
jge
inc
stos
icebp
lcall
cmp
xchg
xlat
lret
or
cmp
cmc
xchg
imul
sub
inc
stos
stc
sub
loope
push
fisubs
inc
cmpb
push
sahf
adc
push
push
insl
das
fsts
dec
pushf
jns
jmp
stos
jmp
mov
or
cmp
sub
enter
scas
lea
jnp
push
mov
pop
scas
lea
xchg
inc
aam
ljmp
insb
jno
ret
cmpsl
push
adc
or
popl
fwait
in
mov
xchg
add
and
mov
jle
inc
sub
leave
out
add
and
or
fisubrl
jl
pushf
fisttpll
scas
and
loop
nop
add
mov
les
in
jecxz
outsl
ds
add
dec
insl
rorl
enter
xor
js
daa
fucom
adc
sub
mov
or
adc
mov
in
test
pop
cmp
imul
scas
inc
sbb
outsl
jge
inc
clc
and
dec
cmp
out
shl
lods
mov
inc
sbb
dec
aad
inc
das
out
into
jmp
mov
cmp
idivl
xor
cmp
lea
data16
cmp
popa
cmp
xor
cld
dec
sbb
pop
mov
in
jecxz
int3
aaa
es
insb
or
cmp
xor
outsb
in
pushf
fwait
daa
mov
mov
and
adc
xor
pop
mov
mov
sarl
adc
pusha
lret
sub
or
add
jge
int3
repz
mov
loope
mov
mov
jecxz
xlat
push
lret
jmp
and
ret
mov
xor
pusha
push
pop
adc
dec
in
movl
adc
aam
std
mov
pop
pusha
rcll
xchg
pop
sti
lret
and
and
shrl
es
imul
mov
mov
insb
int
mov
cmp
and
jbe
fcomi
insl
fadd
jns
dec
dec
mov
cmp
mov
sti
aas
jg
jne
stos
jns
cs
and
dec
dec
or
rcr
and
stos
faddl
adc
jns
push
add
xor
jl
or
jno
push
mov
lret
int3
cs
xchg
sub
cmp
mov
fstpl
inc
fiadds
inc
pusha
test
xlat
cmpsl
ja
xor
sbb
subps
movb
iret
mov
ss
add
push
or
push
stc
push
mov
xchg
gs
and
sbb
les
mov
add
stos
pop
and
xchg
xchg
dec
loope
mov
mov
daa
xor
xor
in
xchg
xchg
stos
push
adc
fs
jb
dec
cmp
push
sub
inc
cmp
loopne
sbb
push
sbb
sbbl
ljmp
inc
adc
mov
call
adc
sub
lods
and
dec
dec
or
scas
mov
add
mov
mov
add
sbbb
aaa
pop
jo
xor
add
add
xor
push
sbb
das
jl
add
mov
stc
sub
cmp
cs
pop
loop
scas
add
gs
cmp
adc
movsl
ss
add
hlt
rcr
std
out
adc
mov
adc
mov
inc
ds
push
mov
imul
adc
rclb
and
mov
adc
pop
insb
cmpsl
stc
data16
dec
jne
imul
inc
mov
shlb
xchg
fcoms
jp
fidivrs
rcrb
inc
mov
or
sti
add
cld
incl
mov
lret
stos
lods
dec
into
in
sub
js
xor
add
daa
jno
fcoml
fsubr
stos
jl
addr16
mov
aas
xchg
or
imul
jle
sub
sbb
aam
sbb
and
loope
lods
sbb
out
xchg
js
in
dec
or
inc
fwait
inc
jae
and
cwtl
and
or
pop
add
and
xchg
and
pop
jl
mov
fsubrs
jno
cld
cmp
fnstenv
testl
jl
adcl
aas
ja
fs
shll
addr16
outsb
out
daa
imul
push
mov
call
inc
ds
mov
jbe
out
xor
mov
movsl
or
cmp
inc
jmp
loop
mov
shll
fcmovbe
pcmpeqd
jmp
adc
xchg
data16
adc
mov
scas
inc
push
and
jne,pn
dec
lods
mov
inc
or
movsb
adc
jnp
in
cli
fidivrs
or
xchg
aas
mov
cli
sub
inc
std
and
push
movsl
push
and
fwait
ss
and
pop
repnz
lret
pop
pop
loopne
xor
jne
insl
cmp
cmp
test
fnstenv
cmp
clc
fstl
cmp
mov
data16
js
xor
jecxz
ret
int3
out
dec
test
das
cmp
xchg
mov
lds
test
sub
loope
les
mov
aam
sahf
mov
xor
cmp
sub
and
push
test
sub
imul
adc
cmc
xlat
fdivs
lret
hlt
imul
test
add
xor
inc
mov
cld
sbb
dec
pop
mov
fwait
lds
dec
xchg
jle
fsub
push
cs
jnp
enter
jo,pt
xor
cmp
rcrb
cmpsb
xchg
mov
movsl
repz
sbb
jne
les
adc
mov
mov
pop
or
or
lcall
inc
xchg
mov
pusha
sub
inc
lock
lret
xchg
xor
mov
or
ja
cmp
popf
jmp
pusha
insl
mov
test
pop
mov
mov
inc
mov
js
or
pop
mov
cmpsl
pop
loop
subb
mul
xchg
xchg
popa
add
and
loopne
scas
lahf
adc
add
mov
loopne
mov
dec
mov
dec
mov
and
leave
pop
scas
nop
hlt
ficoms
xchg
cmpb
push
lods
and
shll
cmp
lock
sbb
bound
add
clc
cmp
mov
stos
ja
fbld
jnp
pop
sub
jno
mov
dec
aaa
cld
in
arpl
rcll
and
xor
mov
pop
mov
jo
pop
add
push
cli
pushf
icebp
xor
cltd
stos
call
lods
lods
mov
sub
pushf
icebp
push
pop
loopne
inc
push
mov
jl
mov
cmpsl
dec
jmp
or
stos
inc
inc
fwait
add
lahf
push
jb
notb
xchg
subl
and
jmp
jnp
roll
xor
mov
dec
xchg
and
aad
fisubs
mov
xchg
daa
test
das
fldl
add
or
sti
lret
ljmp
arpl
adc
and
sub
lahf
repnz
in
cmp
cmp
pop
dec
aas
icebp
fidivrs
xor
leave
mov
andl
and
ljmp
push
and
cltd
and
push
inc
inc
fldt
push
mov
or
repz
adc
mov
pop
pop
mov
cli
fld
push
xchg
inc
addb
addb
ljmp
or
cmp
fdiv
out
add
out
cmpsl
fistpll
out
mov
fdivl
cmp
xchg
ja
enter
jle
jg
add
and
xor
out
cmp
hlt
push
mov
pusha
cmp
pop
outsl
dec
pusha
mov
xchg
jecxz
sahf
xlat
or
mov
aaa
and
or
sahf
rcl
xor
pop
xchg
inc
xchg
sub
and
sub
jle
push
xchg
mov
sbb
lds
and
lods
rcrl
jnp
jge
lds
jne
dec
mov
xchg
outsb
mov
fistps
push
add
sbb
subl
leave
inc
adc
loop
inc
ret
fcoms
leave
sub
out
push
mov
dec
cld
and
loope
pop
lret
lret
push
pop
and
and
dec
outsb
inc
adc
adc
and
sbb
loop
xchg
xchg
and
es
sub
fmull
or
aaa
sbb
push
cmp
xor
xchg
mov
mov
xchg
sbb
mov
test
lahf
xchg
lock
ds
add
adc
mov
mov
sbb
or
add
in
xchg
sub
or
lret
and
mov
dec
fcoms
mov
mov
and
mov
xchg
cmpsb
mov
test
or
dec
dec
xlat
fsubs
pop
cmp
cmp
dec
lea
adc
jle
dec
cwtl
das
movsb
clc
jnp
aad
xchg
push
and
mov
push
xchg
test
icebp
inc
cmpsl
lea
je
adc
es
cmp
mov
jg
mov
and
mov
mov
fdivs
cs
inc
xchg
and
sub
sbb
jg
jge
std
das
dec
in
incl
subb
icebp
and
cmpsl
push
pop
xchg
lret
xchg
and
dec
mov
mov
inc
out
into
push
mov
inc
xchg
push
repnz
andl
fistpl
pop
jo,pn
sub
inc
push
sti
xchg
mov
out
push
add
fdivrp
outsb
push
dec
jbe
push
daa
xchg
dec
enter
jb
rclb
loopne
mov
mov
hlt
aas
loope
sbb
add
jnp
aas
xchg
aas
lcall
mov
adc
mov
scas
adc
scas
popf
js
xor
jle
inc
mov
test
repz
sub
xor
pop
lcall
mov
mov
gs
push
test
sub
ds
push
and
add
pop
mov
mov
mov
push
jl
aaa
fcmovne
inc
js
mov
call
jle
aas
pop
setg
mov
lods
cmp
fisttpl
push
jg
ret
pop
fcoml
std
or
shlb
aam
sbb
mov
pusha
cmp
jb
cs
fucomp
and
in
and
js
call
cmp
lahf
xor
das
xor
scas
mov
stos
lods
xchg
push
movsl
dec
push
stos
lods
xchg
sub
movsl
fidivrl
jb
push
fbld
xchg
lods
xchg
mov
fwait
cmp
aaa
shlb
rcrl
ljmp
mov
fsubl
sbb
aad
xchg
lret
or
mov
add
mov
stos
leave
aad
leave
inc
xor
xchg
and
stc
sbb
sbb
adc
mov
cwtl
jae
hlt
mov
dec
into
jnp
stos
test
pushf
xchg
inc
repnz
jo
ds
sub
rclb
jge
sub
sub
cmp
iret
std
inc
std
fldz
fs
lahf
int
outsl
pop
aam
stc
mov
scas
mov
adc
dec
stos
or
lods
xchg
add
inc
push
jmp
fiadds
fsubr
push
subb
push
pop
insl
int3
dec
test
lock
push
cmp
push
mov
mov
or
movsb
mov
pushf
not
sub
cmp
popf
ficoml
dec
sbb
cmp
adc
mov
push
arpl
adc
rcll
repz
lret
out
cmp
add
pop
pop
enter
cpuid
inc
in
cmp
sbbb
jnp
orl
xchg
and
leave
or
insb
sti
add
stc
ljmp
repnz
and
lret
test
mov
les
scas
push
test
sbb
pop
aad
inc
mov
arpl
cmp
imul
in
fsubrl
cmp
aas
lds
dec
int
mov
mov
das
adc
mov
lahf
scas
cmp
mov
mov
test
mov
xchg
mov
popf
xchg
pop
pop
adc
sbbb
mov
mov
repnz
movsl
dec
push
dec
stc
lds
and
lods
jns
loope
or
pop
add
cmp
sub
int
rorl
fstps
bound
xor
cmpsl
inc
jo
push
jbe
dec
push
sbb
push
mov
outsl
jae
outsl
adc
movsl
jle
jae
fcompl
cmc
pop
rcrl
mov
xchg
andnps
jle
push
cmp
push
mov
js
mov
popa
cmp
popf
sub
lds
mov
stc
dec
push
sub
lea
das
test
pop
ret
scas
adc
pop
adc
andb
push
invd
lock
sarl
mov
repnz
push
jecxz
out
movl
fsts
push
adc
adc
mov
aad
adc
mov
xchg
adc
icebp
decl
add
bound
leave
sbb
call
mov
gs
fs
lods
push
lea
jge
and
dec
mov
sbb
cmpsb
stos
push
pop
mov
inc
fnsave
out
xchg
mov
in
lret
lods
inc
cmpsb
sbb
sahf
test
movsb
sub
jle
out
push
repz
pop
out
pop
repz
imul
call
xchg
jae
daa
in
and
repnz
test
outsl
popf
pop
mov
add
ret
cs
push
mov
xlat
bound
fwait
or
mov
stos
loop
std
jmp
aam
outsb
iret
mov
mov
adc
dec
and
inc
hlt
sbb
mov
in
jne
push
rcl
cmp
jbe
mov
and
sub
cld
jns
sub
int
mov
stc
jne
mov
aad
in
add
or
or
loop
push
pop
fcompl
rcll
fidivrs
ficomps
xchg
push
push
notl
add
dec
frstor
les
adc
orl
jmp
ret
add
cmc
nop
inc
adc
jne
cld
sub
push
jge
sub
dec
je
xor
inc
mov
mov
xchg
repz
xor
hlt
mov
sub
xor
lcall
mov
stc
cmp
popa
add
xlat
movsb
popa
pop
cmpsl
or
pop
scas
push
cmpsl
int3
jnp
dec
jle
inc
out
aas
jno
dec
push
cld
cli
mov
arpl
push
jle
sbb
and
or
mov
or
jne
lods
in
pop
gs
xchg
xchg
mov
inc
cmpsl
sarl
adc
jnp
dec
xchg
repz
aaa
mov
rcl
outsl
mulb
mov
mov
xchg
ret
mov
cmpsl
and
aaa
jmp
pop
aad
mov
out
push
jbe
and
daa
push
or
or
dec
mov
xchg
pop
fisttpl
push
adc
cmp
pop
cltd
iret
cmpb
ds
push
cwtl
in
mov
cmp
pop
or
and
dec
pushf
ds
popa
sub
sbb
es
push
ds
dec
idiv
or
cmp
or
lahf
sti
push
sahf
mov
dec
fisttps
inc
mov
rcrb
cltd
in
sub
icebp
shll
movsb
iret
dec
fdivrl
loopne
jbe
jecxz
push
cmp
xchg
sbb
jb
mov
ds
sbb
sbb
aas
adc
call
pop
sbb
cmp
lret
fldl
inc
cmp
jecxz
ljmp
std
dec
int3
rcrl
std
into
jle
xchg
inc
and
or
sbb
xchg
repnz
imul
inc
lea
mov
jmp
xchg
push
pop
leave
and
fdivrs
bound
and
cli
mov
cmc
mov
cmc
push
pop
sub
imul
jno
shlb
or
cmp
jns
jb
jge
push
repz
cld
repnz
sbb
jns
xsave
movsl
clc
rorl
jecxz
sbb
fsubrl
jnp
out
mov
jmp
jno
loopne
insl
scas
xchg
mov
mov
lret
out
fdivrs
sub
outsl
mov
xchg
shrl
mov
dec
int
mov
mov
mov
lock
repnz
insb
jp
push
outsb
lahf
ljmp
push
test
orl
das
sbb
sbb
push
les
mov
jge
inc
imul
repnz
lods
sub
nop
loop
pop
add
sub
mov
or
lds
push
cmpl
cmp
mov
jo
imul
adc
call
mov
jge
std
arpl
js
push
cmp
push
and
dec
sbb
imul
sbb
insb
icebp
push
ljmp
fcomps
stc
adc
mov
mov
pusha
outsb
xlat
push
rcr
cs
call
and
das
adc
inc
leave
and
sub
pop
lea
loopne
mov
inc
rcrl
jae
stos
inc
imul
cmpsb
scas
mov
mov
filds
fidivs
hlt
fldenv
mov
stc
insb
sbb
repz
icebp
or
adc
jae
lcall
insb
pop
jp,pt
mov
sbb
cmpsl
pop
mov
scas
enter
imul
xor
push
cmp
push
dec
stc
adc
lahf
and
push
test
add
into
in
and
cmpsl
sahf
cmp
and
jmp
int3
test
push
movsl
in
flds
sti
call
push
mov
cmpsb
xlat
inc
adc
scas
xchg
roll
in
add
dec
out
mov
sbb
and
repnz
mov
mov
ficomps
inc
loop
mov
scas
lods
xor
ret
popf
mov
add
int
aas
push
mov
ja
cmp
cmp
cmp
mov
or
dec
sub
mov
inc
int
jne
int
lret
out
imul
fsts
pushl
xor
jnp
imul
jl
jne
scas
in
sbb
lds
mov
ljmp
sti
lret
ret
bound
mov
adc
sahf
ds
iret
sub
and
and
cmpsl
out
sbbb
roll
fbld
xchg
xor
push
std
nop
insb
cli
xchg
bound
in
sbb
push
aam
xlat
lahf
dec
shlb
aad
pushl
jo
jle
push
imul
mov
fnsave
in
adc
icebp
fwait
cmp
sub
cmp
xorps
scas
cld
test
nop
mov
dec
cli
out
push
adc
inc
pop
jmp
and
mov
out
loope
out
fwait
xchg
cld
fxch
push
nop
popa
lcall
js
daa
dec
mov
fs
das
dec
dec
dec
sbb
push
xor
and
std
mov
dec
bound
fs
push
sbb
out
dec
jae
movsl
mov
sarb
sub
shr
adc
mov
mov
pop
pop
mov
mull
cli
lea
enter
fiadds
hlt
jnp
std
push
mov
outsl
jmp
dec
lret
std
lret
jbe
out
jmp
fdivrl
bound
push
dec
mov
mov
add
and
push
xchg
fdivs
mov
mov
shlb
inc
add
dec
inc
mov
nop
movsb
movsb
or
push
in
inc
test
jae
outsb
mov
sbb
imul
test
and
pusha
andb
ret
int
ja
push
sub
ret
pop
jae
arpl
hlt
cmp
dec
pop
aaa
data16
inc
mov
iret
push
out
sub
cmp
call
inc
nop
mov
xlat
push
ror
ret
sbb
int3
sbb
sbb
fdivp
pop
jae
xor
dec
mov
add
inc
inc
mov
inc
cmp
sub
mov
dec
imul
call
dec
inc
aaa
lds
mov
ss
lock
int
xor
sub
xchg
or
and
or
fs
dec
movsl
sub
pop
dec
jge
aas
xchg
push
andb
push
imul
insb
sub
shrb
ljmp
pop
mov
sbb
lahf
cmpsl
pop
icebp
imul
jge
fucom
push
jmp
arpl
in
cld
insl
imul
dec
cmp
lods
insb
ret
push
jb
ret
stos
sbb
cmp
mov
inc
inc
lcall
adc
xor
test
or
ljmp
das
test
xchg
fldcw
push
jnp
fldcw
pusha
jnp
push
addr16
call
ficoml
push
ds
add
lods
sarb
insb
mov
jge
pushf
xchg
pop
daa
ds
js
mov
pop
hlt
sbb
push
sbb
rclb
lcall
lcall
inc
sub
ja
ljmp
lret
mov
mov
pop
in
push
sbb
aad
dec
lea
cmp
cmp
jecxz
dec
dec
in
pop
out
sub
or
mov
call
mov
pop
add
and
rclb
movsl
lret
mov
cltd
adc
movsl
adcb
inc
dec
loopne
popf
rcll
hlt
jle
jns
hlt
das
popa
jmp
mov
cmp
cld
sbb
and
call
pop
pop
jecxz
sarl
push
dec
mov
dec
mov
out
xchg
or
pusha
or
hlt
mov
mov
pop
test
cli
xor
inc
icebp
xorb
xchg
jae
sbb
imul
mov
fisubs
pop
js
jns
adc
aad
cmp
loope
out
imul
add
mov
add
pusha
in
push
mov
shrb
push
rclb
mov
jae
mov
cmp
push
mov
shrb
xchg
sub
add
ret
sub
dec
mov
mov
push
stos
int3
sbb
cmp
jmp
daa
jne
repnz
out
push
movsl
jo
lds
cmp
xor
sti
add
test
dec
mov
les
xor
cmpl
mov
cmp
inc
and
mov
in
inc
fildl
sbb
jmp
adc
jmp
mov
cmc
int3
int
rorb
pop
gs
mov
stos
pop
mov
inc
push
push
add
movsl
outsb
std
icebp
jmp
popf
jmp
pop
push
jae
xor
std
or
sbbl
orl
cltd
mov
cwtl
adc
xchg
pop
cli
add
fld1
ret
call
and
shl
sbbb
push
cmp
bnd
and
sahf
pop
out
fwait
cwtl
ljmp
mov
shll
mov
imul
fcmovnb
sub
inc
mov
add
clc
dec
and
mov
cmp
lret
nop
fldcw
outsb
push
xor
stos
repz
push
mov
sbb
xor
rorl
shlb
in
pop
sub
imul
adc
and
mov
add
js
inc
mov
std
sbb
aad
and
in
and
dec
cmc
sub
sbb
adc
addr16
jno
imul
push
cmp
mov
nop
insl
push
jo
fs
int
icebp
nop
pop
jl
or
lret
cmp
push
inc
movsl
mov
and
test
mov
inc
test
insl
in
es
and
mov
scas
scas
sub
mov
call
dec
fisttpll
andb
inc
sub
pop
push
gs
shrd
and
test
jbe
mov
scas
inc
scas
sub
adc
pop
scas
and
cld
loope
clc
dec
mov
push
cmp
xchg
sub
jbe
pop
lahf
pop
mulb
xor
fs
cltd
les
cs
stos
pop
xchg
pop
and
scas
out
loopne
insb
jmp
and
mov
cmpsl
lods
and
jne
int3
and
push
mov
aam
or
cld
test
pop
mov
jp
pop
add
adc
shrl
mov
dec
inc
pushf
lods
adc
pushf
mov
outsb
push
push
int
push
loope
mov
loope
sub
mov
addb
or
mov
xchg
jnp
lea
scas
pop
push
daa
push
mov
sbb
cmp
sub
sbb
xchg
jae
mov
sahf
sub
cmp
xchg
lahf
mov
jl
outsl
jbe
pop
and
inc
faddl
fsubrs
stos
insl
fwait
mov
adc
sti
test
pop
add
bound
adc
inc
xchg
mov
lock
stc
stc
jne,pn
mov
jl
jno
jge
cli
sub
andps
movsb
ljmp
out
dec
push
cmp
sbb
inc
das
repz
pop
loop
xorb
adc
dec
int
sti
xor
push
push
jl
shrl
cwtl
cmp
decb
hlt
xchg
mov
lahf
clc
and
and
repz
sbb
gs
mov
scas
pusha
int3
outsb
mov
jmp
xchg
sub
xchg
ret
lahf
lret
jbe
mov
addr16
pop
mov
decl
sahf
mov
pop
jp
inc
jge
cmp
jns
mov
psrad
push
mulb
jg
hlt
loopne
clc
clc
js
arpl
push
mov
inc
inc
adc
mov
movsl
sub
and
add
cmp
icebp
paddw
mov
cld
add
jmp
out
push
ja
stos
or
dec
jbe
aas
cmp
push
dec
mov
adc
aaa
pop
lods
add
fsubp
js
fcmovnu
outsl
call
cmp
cmp
in
xchg
call
movl
mov
movsb
out
jl
fst
cmpsl
pushf
repz
push
add
jne
ret
fistpll
inc
addr16
sub
jmp
pop
je
pop
push
scas
fisttpl
jne
pop
jg
scas
push
jmp
stc
lahf
push
jg
sbb
enter
adc
add
or
sub
cwtl
adc
push
mov
sbb
ja
xchg
pusha
fs
nop
mov
stos
lods
pmaxsw
inc
js
pop
jmp
pop
rol
xchg
mov
jecxz
ror
pop
or
sbb
dec
inc
jp
sub
dec
popf
out
cmp
xor
adc
in
mov
repnz
adc
pop
test
inc
iret
das
mov
loope
fucomip
sub
int3
imul
arpl
rorl
adc
add
dec
dec
add
inc
dec
mov
xchg
mov
push
or
xor
movsb
push
mov
xchg
and
rclb
stos
jbe
insb
and
mov
pop
or
clc
inc
repnz
xchg
jo
outsl
pusha
fstpl
mov
pop
fnstsw
dec
inc
pusha
jne
push
pop
push
subl
cwtl
mov
ljmp
sarl
mov
sbb
pop
jnp
scas
test
fstpt
push
mov
loop
lea
xor
testb
push
sub
call
or
mov
lock
lahf
and
mov
enter
mov
push
in
js
jge
fstp
xor
xchg
shll
sahf
rcrl
mov
sbb
mov
jg
mov
cmp
test
test
xor
jmp
push
dec
int
mov
int
lock
aad
push
jge
je
dec
stos
into
and
stos
lods
bound
outsl
ja
lret
jle
fcomip
inc
mov
mov
std
pop
icebp
outsl
loope
scas
pop
mov
loope
push
push
ja
lret
xchg
fldl
pop
pop
mov
mov
ja
and
inc
out
inc
sub
push
jb
nop
push
jbe
in
jp
gs
and
pop
jg
in
mov
dec
fstpl
jp
sub
cwtl
mov
cli
jmp
push
pop
int
ljmp
inc
pop
mov
fcoml
popf
out
push
mov
mov
jp
ret
bound
pusha
clc
pop
lock
fbstp
or
ret
sbb
xor
add
and
xor
lock
jge
popf
int
imul
repnz
mov
and
pop
insb
cmp
icebp
xchg
jge
pop
dec
mov
mov
nop
mov
shr
sti
inc
aaa
push
lds
stos
mov
xchg
aaa
jbe
test
cmp
mov
flds
ret
xor
js
repnz
pop
mov
lods
aad
scas
or
inc
outsl
cld
xor
rclb
push
inc
in
addb
popf
inc
sbb
pop
incl
mov
out
js
mov
test
in
daa
stos
mov
xor
in
cmp
into
pop
dec
push
xor
shl
add
sbb
jbe
lock
mov
mov
cld
ja
dec
rcll
cli
xor
fwait
and
cmp
loopne
mov
dec
jo
and
push
andl
jo
fnsave
mov
or
xchg
adc
inc
dec
xor
cmp
adc
shll
stos
xor
sub
sub
and
pop
mov
adc
das
push
add
loope
scas
popf
xchg
leave
std
test
sbb
in
push
je
sbb
fs
js
in
in
xchg
stos
pop
add
push
push
mov
dec
in
dec
adc
push
jp
sbb
jge
rolb
and
add
and
mov
jb
xchg
pop
leave
fsubrl
das
push
jp
daa
jecxz
popf
stc
jp
mov
cmp
fiaddl
add
sub
outsl
lock
add
xlat
xor
in
test
outsb
inc
orb
sbb
mov
pop
jg
lods
mov
add
mov
daa
out
xchg
stos
sbb
xchg
push
fisttps
push
jnp
jge
sbb
aad
pop
inc
lret
fistpll
xchg
sub
sbb
addr16
pushf
shll
jo
add
or
inc
sti
shll
jbe
imul
icebp
out
in
int3
lahf
or
out
jp
dec
sbb
ss
das
or
lea
push
mov
add
mov
fisubrs
mov
bswap
test
pushf
js
ljmp
sbb
add
lock
mov
jo
lea
push
dec
jae
xor
xor
test
test
lret
xchg
pushf
inc
sbb
and
cmp
fmull
xchg
xchg
add
test
scas
shlb
mov
cmp
or
add
adc
insl
mov
mov
xor
test
jl
pop
roll
movsb
popf
sub
insl
xor
scas
scas
and
push
cmpsb
mov
sub
add
push
lock
sbb
notb
sub
shll
or
mov
push
jge
pop
push
cmp
or
fisttpll
adc
mov
push
xor
pop
ret
into
clc
mov
or
hlt
das
mov
push
xchg
popf
pusha
cmp
cmp
inc
sbb
lcall
pushf
stc
pop
in
xchg
cmc
add
test
mov
or
push
add
mov
stc
orb
add
icebp
ret
xor
sbb
stos
pushf
add
out
outsl
test
lahf
or
mov
jg
inc
mov
movsb
mov
sqrtps
mov
scas
movsl
enter
mov
push
imul
mov
and
and
aad
stos
jae
jb
jne
enter
mov
jne
mov
shrb
cmp
sbb
jo
and
cs
out
or
pop
outsb
cmp
mov
in
outsb
lds
into
in
and
dec
test
sub
xchg
mov
mov
pushf
aam
inc
scas
push
mov
mov
subl
shl
pop
cmp
insb
xchg
pop
and
xlat
jbe
cmp
fwait
cmpl
pop
xor
mov
sub
sub
mov
xchg
adc
call
std
sbb
mov
inc
pushl
jae
fildll
adc
leave
pop
mov
ja
pop
and
add
mov
add
in
cmpsb
gs
fisttpl
ret
hlt
das
loop
sub
pop
adc
push
adc
out
dec
add
insl
shlb
daa
mov
mov
and
imul
xchg
lahf
test
pop
push
dec
add
sbb
jnp
mov
push
jp
sub
arpl
stc
mov
or
mov
fstpt
stos
clc
int
sub
pop
in
push
mov
xchg
cmp
dec
mov
fsubr
scas
jns
mov
lcall
arpl
outsb
or
or
jl
xchg
dec
sahf
jns
cmp
adc
call
xchg
adc
stc
xor
adc
sbb
adc
ds
loop
mov
sub
mov
sbb
std
shrb
test
shl
jmp
outsb
mov
add
xchg
xchg
add
insl
popa
mov
inc
mov
or
lret
jge
push
push
sub
loopne
jp
ss
std
cmp
mov
add
lds
jmp
push
pop
jl
pop
and
testl
les
stos
fildl
dec
mov
pushf
add
mov
mov
add
ds
shlb
mov
mov
xor
aas
mov
push
inc
jp
lods
test
in
mov
jecxz
or
and
popa
cmpsl
in
lods
or
adc
pop
jae
push
push
inc
inc
cmp
inc
or
test
loope
sbb
lcall
mov
imul
les
test
out
adc
and
push
mov
xor
adc
pop
push
mov
frstor
call
loope
adcl
repnz
cmpsl
pop
rcr
lret
push
iret
mov
adc
fs
ret
mov
or
sbb
cld
jmp
lcall
cmpsl
mov
xchg
out
mov
sarl
cmp
dec
outsb
xor
inc
mov
xchg
mov
enter
jp
out
dec
and
in
add
pop
call
push
in
mov
scas
lcall
lea
ss
sti
mov
or
adc
push
cmp
pop
adc
inc
xor
sub
lret
popa
inc
pop
pop
cltd
dec
pop
push
lret
pop
adc
cvtps2pd
movsl
sub
adc
test
xchg
inc
ret
cmc
jmp
scas
repnz
jmp
add
lock
daa
int
sbb
lods
and
jae
lock
fs
mov
pop
adc
jb
movsl
inc
inc
xor
arpl
xchg
mov
xchg
jmp
pusha
push
daa
sub
lahf
test
ficoms
dec
push
imul
leave
xchg
xlat
pop
add
sbb
sahf
inc
inc
popa
mov
in
fs
insb
pop
lock
ficomps
fimull
mov
adc
in
repz
add
dec
inc
and
push
lahf
mov
push
push
xchg
adc
insl
mov
adc
cltd
mov
into
or
sub
mov
lret
fwait
mov
jae
jne
push
mov
fisubs
testb
or
push
cmp
cld
je
lahf
jecxz
mov
imul
pop
dec
jo
out
je
pop
inc
dec
test
cmp
mov
or
push
cs
rorb
iret
mov
xchg
pop
mov
cmp
cmp
adc
sarb
nop
lcall
cmc
fstpt
imulb
sbb
lahf
inc
out
xor
push
push
xchg
push
jmp
inc
sti
dec
mov
mov
xor
pop
sub
loope
gs
notb
mov
or
dec
popf
push
les
out
add
movsb
xchg
push
mov
jge
sub
adc
lods
pop
add
inc
int
pop
out
sub
pop
push
mov
gs
clc
push
scas
inc
cmp
xchg
xlat
into
repnz
es
inc
stos
mov
test
push
stos
xor
je
mov
sub
inc
sbb
xor
stos
xor
cli
out
inc
imul
inc
test
ret
nop
loope
mov
or
arpl
inc
imul
mov
jl
add
xor
lods
test
imul
shrb
lahf
mov
notl
imul
sbb
popf
and
fs
fldt
cmp
jge
ss
mov
sub
cmp
test
mov
and
outsb
lds
loopne
repz
mov
mov
ljmp
xor
or
js
mov
imul
and
cmp
cmp
push
fs
xor
adc
mov
mov
roll
test
jle
and
jbe
and
mov
sahf
daa
fadd
sbb
scas
mov
adc
and
out
sbbl
in
movsb
adc
add
sbb
mov
aam
add
xor
xor
adc
add
aaa
movsb
mov
pop
call
pushf
jmp
int3
test
and
icebp
shlb
pushf
aad
sub
sbb
pop
jno
jp
jne
inc
cmp
mov
out
out
stos
or
inc
jecxz
movsl
and
movsl
dec
push
repz
std
sbb
jp
lods
lea
mov
sub
mov
ja
sbb
shlb
mov
iret
push
sub
shr
adc
or
and
jg
shlb
mov
xchg
adc
add
push
in
mov
lock
xchg
cmp
sbb
or
fincstp
movsb
push
in
and
mov
inc
mov
ljmp
lods
xlat
outsl
or
adcb
mov
push
lods
test
mov
and
push
leave
in
das
loop
mov
mov
frstor
aad
fidivrl
inc
pusha
cmp
sub
jo
rolb
ror
fadd
sub
aas
jb
jl
shr
fisubrs
out
ds
lahf
neg
jbe
insb
sbb
insb
jmp
jp
mov
add
and
fs
out
pmuludq
xor
or
scas
or
sbb
jge
sarb
loope
stc
pop
sub
xchg
push
sbb
ret
es
pop
push
sbb
icebp
movsb
insl
mov
add
dec
mov
mov
mov
mov
out
lods
jmp
test
fdivrs
pop
ds
dec
aaa
push
adc
cli
insb
adc
mov
lea
addl
jo
cwtl
cmpl
shlb
xchg
push
sbb
sub
xor
cmp
push
imul
dec
sahf
es
and
xchg
mov
xchg
push
inc
push
mov
jae
push
xor
ss
cmpsl
xlat
std
sbb
dec
wrmsr
mov
xorb
or
jne
mov
push
out
xchg
inc
mov
xchg
jecxz
fimuls
dec
adc
test
push
push
pop
mov
mov
icebp
dec
test
xchg
xor
xlat
in
jle
pusha
push
pop
pop
sbb
or
inc
sub
icebp
mov
aam
cmc
in
dec
xor
jg
inc
filds
mov
or
cmp
or
jns
fisubrl
cltd
mov
nop
out
imul
rcr
stos
and
gs
or
push
jns
fidivrs
movsb
mov
fsubs
cltd
cmp
dec
push
insb
aas
repz
cltd
push
roll
or
xlat
cmpsl
aaa
lcall
iret
sbb
subl
pop
lds
pushw
fs
mov
clts
je
adc
ss
jo
inc
ljmp
push
pop
lea
inc
outsl
sbb
xchg
sahf
jb
mov
or
cli
jo
sbb
push
add
ret
in
pop
gs
jmp
sub
xlat
data16
mov
mov
xor
push
cmc
insl
push
mov
adc
jnp
sub
and
aas
adc
imul
mov
jno
fisttpl
and
sbb
arpl
js
outsl
popf
pop
les
ss
aas
outsb
sbb
inc
in
fdivp
cmp
xchg
fcompl
or
fwait
mov
cmp
popa
negb
push
pop
in
push
pop
lcall
pop
out
rorl
fnsetpm(287
lcall
mov
out
and
lcall
xchg
dec
fst
pop
xchg
gs
or
dec
clc
mov
jl
js
adcb
in
mov
sub
push
scas
jmp
repnz
inc
lcall
aad
lods
mov
in
cmpsl
xor
and
pavgw
adcb
and
std
fisubs
in
jnp
mov
adc
cmp
aad
shlb
stos
push
jb
test
xlat
add
pop
sar
ljmp
ror
cmc
and
sub
fistl
into
jo
call
add
ja
sub
inc
jg
jge
inc
outsl
cltd
push
mov
in
in
jo
jmp
icebp
cmpsl
or
xchg
pop
es
cmpsb
cmc
sbb
cltd
and
mov
ficoms
das
jl
sbb
push
sub
mov
xor
test
adc
dec
mov
ror
mov
dec
scas
call
xor
mov
dec
push
lahf
cmp
jae
lods
lock
xor
jge
push
and
jbe
mov
mov
aaa
loope
scas
loope
test
dec
mov
cli
das
lret
add
pop
sub
gs
call
lea
inc
cmc
add
and
cwtl
test
fildl
adc
or
or
fsubrl
stc
adc
adc
xor
push
fs
jno
adcb
mov
addl
ds
sbbl
push
mov
cmp
pop
inc
mov
neg
pop
jge
sbb
ret
out
cwtl
and
or
mov
ss
mov
dec
mov
out
mov
jmp
adc
js
aas
adc
in
insb
xchg
adcl
or
sbb
aam
mov
mov
test
pop
push
jnp
jns
jle
push
filds
push
sub
stos
int3
or
and
fnstenv
xchg
sbb
fwait
cmpsl
mov
jb
in
fbstp
jl
lea
test
cld
pusha
rorl
xchg
loope
sbb
jns
fsubp
push
add
outsb
push
pushl
mov
mov
jo
dec
push
fisubs
lahf
clc
lret
cld
ds
into
test
mov
jne
jo
push
sbb
addl
ror
arpl
pop
xor
std
test
cmp
cltd
xor
test
popf
push
sub
int
mov
test
mov
add
fidivs
icebp
add
movsl
stos
mov
xor
push
ret
outsb
cmpsb
int3
mov
lods
addr16
lock
imul
movb
cmp
fwait
xchg
mov
push
cltd
loope
cld
les
ret
add
movsl
fimuls
mov
and
ficoms
dec
mov
test
jnp
cli
enter
ret
pop
adc
mov
adc
inc
mov
inc
jb
jns
shr
xchg
enter
mov
outsb
popa
test
add
or
fcmovnu
inc
xor
or
xor
push
xchg
mov
in
movsb
and
cmp
cmc
cli
shll
in
or
inc
or
stos
leave
jnp
push
mov
in
xor
es
test
ljmp
test
cmovae
mov
imul
aas
aas
jp
pop
nop
adc
rolb
sub
cmp
addr16
or
fsubrp
cmpb
mov
jae
je
pop
add
shll
mov
ret
ret
xor
es
into
sub
aas
pop
je
icebp
in
insb
jnp
hlt
lret
push
loope
jno
movsb
push
cltd
jne
es
cmpsl
mov
clc
mov
dec
mov
loope
mov
cmp
pop
sbb
aad
push
cmp
aad
or
out
clc
lods
mov
repnz
hlt
ds
std
add
in
add
add
jge
lods
int
out
pop
push
loopne
lods
sub
popa
call
sbb
adc
jbe
pushf
decl
sti
sti
aas
enter
pop
sti
pushf
test
aas
xor
jp
mov
repnz
mov
pop
pop
stc
pusha
mov
nop
add
push
add
or
push
xchg
dec
pop
dec
jns
dec
pop
mov
adc
push
jnp
jge
xchg
cmp
xor
movnti
mov
or
cmpsb
dec
test
fdivrl
inc
test
lods
mov
mov
add
add
jns
daa
cld
adc
add
movl
ret
cmp
or
sti
mov
iret
inc
xor
je
lahf
push
roll
loop
in
cmpsl
adc
lcall
daa
outsb
jp
je
cmp
xor
pop
test
or
jg
or
ficoms
rcr
xacquire
xor
or
xchg
dec
dec
clc
cmp
add
xor
loop
xchg
xchg
push
movsb
std
mulb
mov
inc
aam
mov
lds
inc
push
add
xchg
cld
cltd
ds
imul
sbb
adc
loope
cmp
divb
sbb
xchg
hlt
xor
cmc
inc
mov
stos
mov
and
sub
fiadds
cmp
imul
int3
lcall
fmuls
sbb
adc
cmp
mov
lods
jmp
std
repz
in
in
jo
aaa
cld
outsb
push
dec
shlb
ss
cmp
cmp
rorb
aaa
dec
ljmp
lock
xchg
lock
fdivs
clc
and
cmp
sarb
popf
addr16
cmpsl
xchg
mov
push
ret
shl
xor
xorb
xlat
mov
lods
sbb
or
jnp
into
jge
pop
push
mov
clc
ret
fdiv
pop
mov
xor
jae
jle
and
clc
aad
in
pop
cmp
jg
leave
cmp
cmp
loope
stos
lods
push
subb
jecxz
pushf
mov
outsb
ljmp
pushf
xchg
aaa
xchg
divb
outsl
mov
adcl
sbb
lret
jo
cli
cmpsl
mov
loope
jb
jg
mov
into
push
shl
add
out
inc
mov
fimull
or
cwtl
sbb
mov
out
xchg
jle
cmpsl
shlb
pop
dec
mov
jb
mov
mov
cmp
add
mov
xchg
lods
inc
sbb
push
stos
loopne
xchg
cmp
push
fsub
divl
jae
mov
addr16
lret
scas
mov
insb
ja
jno
or
stc
sbb
into
jle
mov
mov
hlt
pop
outsl
ret
test
loop
mov
and
bound
lret
add
in
std
addr16
nop
add
sbb
into
sbb
std
adc
jns
adc
icebp
pop
bound
int3
inc
je
xor
rcll
jmp
ret
push
push
das
xchg
push
add
jne
out
mov
rol
mov
or
cmp
inc
xor
or
inc
mov
sub
mov
in
fidivrs
das
add
or
mov
arpl
jmp
pop
jl
xor
lret
mov
mov
cmpsb
dec
jae
out
pop
sti
flds
lahf
pop
mov
inc
lahf
or
cmpsl
pop
outsl
aam
sub
pop
inc
enter
pop
inc
outsb
or
iret
iret
repz
pop
inc
lea
sbb
pop
cmpsl
mov
jp
fistps
xchg
dec
sbb
fs
jmp
icebp
cltd
push
ret
or
fsubrl
jns
test
mov
cli
jb
push
cwtl
test
adc
cmc
leave
repz
pop
ja
xchg
inc
dec
cmpsb
test
imul
adc
add
out
fidivs
xchg
int3
lret
test
pop
leave
lea
xchg
add
mov
stos
flds
cli
push
dec
outsb
mov
mov
cmp
lods
jl
xchg
sbb
insb
cmp
mov
sahf
int3
xor
xor
insb
mov
inc
cltd
filds
insb
jle
and
rorb
mov
les
hlt
pusha
push
aas
pop
mov
xorl
ljmp
xchg
test
rolb
insl
out
jo
in
insl
sbb
test
ljmp
nop
out
or
push
lret
aas
adc
imul
xor
dec
lcall
lods
clc
jno
sahf
sub
mov
imull
pop
jecxz
cli
fwait
pusha
addr16
sub
stos
mov
pop
cmpl
cmp
in
xchg
scas
imul
cwtl
repz
cmpsl
test
pop
cmp
cmp
cmp
ret
jle
into
std
int
lcall
jb
iret
push
fcmovne
cmp
cs
and
hlt
std
loopne
jmp
jle
insl
shr
push
mov
sbb
push
clc
mov
int
in
mov
adc
mov
bound
jle
pop
pushl
fwait
lods
sbb
dec
inc
rcrl
lret
gs
push
xchg
call
ljmp
adc
pop
xor
fwait
xor
dec
lret
popf
push
fdivp
sbb
jl
add
mov
cli
rdmsr
std
lds
lea
mov
jae
mov
xor
jmp
dec
jbe
push
ficompl
sbb
mov
push
push
inc
insb
jle
mov
push
jge
xchg
sti
mov
aad
or
outsb
lret
adc
stos
stos
fsubs
add
jns
repz
sti
inc
shl
jg
jmp
cs
pusha
mov
pushl
sti
mov
loop
out
in
xchg
dec
cmpsb
imul
cmp
mov
mov
bound
jmp
in
incl
int3
aam
fmuls
or
mov
scas
cmp
jno
call
pop
xchg
jae
jo
push
int
orl
cmp
adc
jl
mov
movsb
fmulp
stc
repz
cmp
fcomps
cmp
outsl
mov
out
arpl
mov
jae
and
roll
xchg
inc
popa
cltd
pop
adc
fiaddl
iret
out
inc
dec
popa
pop
dec
push
lods
and
add
nop
mov
cltd
cwtl
mov
and
hlt
push
sbb
cmp
pop
inc
adc
cmp
rorb
and
imul
cmp
sub
xor
cmpsb
adc
mov
mov
sub
dec
lahf
clc
jmp
xor
fdivr
mov
inc
lahf
and
movsb
push
in
dec
les
jg
jmp
sub
cmp
decl
es
outsl
jle
dec
pop
call
es
es
push
cmc
mov
push
sbb
cmp
call
xor
push
pop
push
daa
push
add
insl
loopne
shl
mov
shrl
sbb
xlat
and
fcompl
mov
push
mov
cmp
sbb
outsl
mov
fcoms
lea
jnp
lcall
xchg
xor
aad
cs
lret
popf
dec
or
fstpt
sub
xor
aas
lods
jle
jb
data16
dec
jmp
xchg
cli
out
mov
sti
xor
sub
adc
loope
push
enter
loop
ja
mov
pop
add
jns
sbb
add
mov
mov
cmp
push
je
lcall
repz
insb
fldenv
stos
stc
lds
jmp
movl
clc
adc
mov
daa
sar
je
sbb
test
jmp
mov
xchg
or
cltd
movl
jecxz
xor
sbb
in
inc
xor
push
outsb
pop
adc
pusha
pop
push
mov
dec
adc
mov
testb
jno
xlat
and
cwtl
add
sbb
mov
leave
in
lock
add
cmp
pop
movsl
out
jp
aam
jmp
add
test
push
int
fcomi
lods
push
jb
fiaddl
fisubrl
push
dec
inc
or
adc
or
addl
mov
mov
push
pop
sbb
inc
push
add
inc
mov
ficomps
out
dec
mov
in
and
mov
aam
sub
cwtl
push
popa
and
push
or
xchg
sub
jle
fsts
sub
adc
gs
sar
adc
push
sar
sub
cmp
addr16
clc
or
clc
adc
inc
push
push
push
leave
jge
jg
push
in
insb
sbb
out
stos
xor
inc
negb
paddsw
mov
fdivs
je
push
mov
adc
xchg
mov
push
call
inc
pop
add
fnstsw
ret
out
push
adc
mov
sbb
sbb
add
aaa
cmp
stos
loopne
lret
pop
cmp
adc
jne
ja
pop
pusha
xor
cli
into
lock
imulb
lods
mov
jae
xor
mov
pusha
xchg
int
addr16
sub
cwtl
inc
movsl
xor
adc
xchg
push
cmp
aas
daa
lods
lcall
pop
orl
fdivr
ret
sub
insl
arpl
insl
call
adcb
jle
mov
push
xlat
lds
adc
or
popa
je
inc
pop
xchg
push
js
test
lock
loop
push
sbb
jnp
or
pop
xchg
xor
fdivrl
push
xchg
aam
jge
inc
xor
lock
jge
jmp
cmp
sbb
or
out
mov
in
mov
data16
pop
push
xchg
sbb
cmp
das
je
aad
sbb
lret
xor
in
pop
adc
pop
jp
add
in
xchg
or
test
push
jae
gs
cmp
mov
aas
pop
jp
cmpsb
rcrl
xchg
mov
decl
imul
lods
mov
jae
rcrb
add
setns
gs
and
push
fdivrl
add
imul
in
jns
xchg
jmp
mov
movsl
sar
xchg
cld
lahf
pop
sti
fwait
lcall
mov
push
xchg
and
test
mov
mov
xor
or
mul
or
loopne
psubq
xchg
or
enter
pushf
test
xlat
iret
insb
das
notl
sahf
dec
in
pop
in
sbb
cli
or
sti
aad
mov
jp
movsl
mov
dec
dec
scas
push
roll
jmp
in
mov
nop
mov
in
cmp
lret
aam
jecxz
cld
imul
sub
repnz
nop
jmp
cmpsb
andl
jmp
movsb
mov
stos
in
mov
jp
rcl
adc
shrl
dec
push
in
repnz
jmp
movsl
repz
pushf
or
push
push
out
test
test
push
cmpsb
cmpsb
ja
test
rcll
jnp
push
jg
push
push
scas
in
mov
loopne
jo
or
mov
and
push
jecxz
lret
mov
ljmp
movsb
icebp
in
hlt
jle
mov
sti
mov
jne
ja
push
sub
aaa
cmpsl
mov
xchg
repnz
lret
pop
xchg
push
push
xchg
jb
xchg
inc
in
jb
imul
sahf
movsb
push
mov
xlat
popf
push
ljmp
dec
sub
vpmacsdd
aaa
bound
mov
jns
daa
xchg
sbb
inc
cmp
jp
es
sbb
bnd
test
lods
dec
sub
xchg
inc
jl
jns
movsb
push
mov
mov
cli
jle
add
xchg
in
adc
dec
or
mov
and
mov
push
repnz
inc
fiadds
mov
repnz
sbb
mov
das
lcall
enter
or
stc
icebp
leave
je
mov
negb
lahf
sarl
cmp
xchg
int
push
xchg
or
test
into
jecxz
mov
push
btcl
push
add
xchg
ljmp
mov
idivb
push
sti
aas
inc
or
mov
das
mov
mov
stos
cmpsl
mov
mov
pop
das
fwait
pop
xor
mov
xchg
cwtl
out
mov
push
fnsave
push
mov
xchg
lock
lcall
mov
mov
and
jl
add
sarl
push
aaa
push
xchg
gs
sub
or
cmp
call
mov
imull
loopne
inc
fstpl
mov
andb
insb
jmp
pusha
out
fnstenv
pop
mov
addr16
mov
jne
or
cli
sar
cmp
xchg
cmp
or
cmpsl
mov
jge
je
push
inc
fisttpl
cmp
push
mov
ss
lret
xchg
ret
xchg
jle
cmp
sbb
ud0
sahf
mov
out
lcall
cmp
jnp
and
jbe
mov
inc
pop
add
popa
repnz
jb
scas
jbe
pop
inc
push
testl
xor
fdiv
cmp
fnstcw
aaa
pop
les
xor
mov
xor
call
stos
imul
inc
pop
lret
ret
inc
insb
repnz
fs
or
xor
sbb
jl
ret
fdivrs
mov
pusha
jge
imul
push
in
call
addl
test
push
daa
jb
clc
cs
fstpt
mov
mov
jnp
add
filds
insl
xor
xchg
fdivs
adc
dec
sti
push
iret
xlat
jmp
pop
mov
jp
repnz
scas
dec
into
cwtl
pop
cmp
in
and
outsl
and
stc
aaa
out
cltd
divb
int3
pop
xchg
divb
pop
jg,pt
fistps
jb
jg
mov
outsl
or
mov
push
jmp
insl
lock
orl
loopne
repz
shll
ret
pop
add
dec
dec
pusha
jae
mov
mov
std
call
lock
daa
cld
mov
jl
jno
push
scas
enter
jecxz
adc
out
lods
mov
dec
and
leave
mov
adc
adc
repnz
pop
js
adc
bound
lds
scas
and
mov
mov
mov
sbb
cli
je
xor
mov
mov
or
push
push
or
fcmovnu
jmp
mov
out
pop
mov
ret
jmp
cltd
add
pop
icebp
outsl
clc
cmp
add
popl
daa
jle
inc
js
or
fadd
stos
or
jnp
aaa
pop
subb
push
loopne
push
add
mov
sbb
testl
leave
pop
cwtl
jne
jns
jb
jp
push
jle
xor
aas
cmp
rorl
insl
jb,pn
fnstsw
mov
adc
add
in
inc
sub
int3
js
or
xchg
dec
xorb
mov
mull
xor
out
dec
xchg
rorb
adc
loope
je
gs
pushf
xchg
jb
mov
das
xchg
mov
mov
jecxz
jmp
pusha
sbb
cs
jmp
call
mov
mov
scas
mov
jl
push
pop
push
cmpsb
mov
lcall
daa
mov
jo
mov
sbb
pop
xchg
sahf
aam
mov
or
jne
adc
dec
dec
imul
inc
cmp
pop
lds
jae
arpl
stos
sub
in
cmpsl
xor
or
ret
push
mov
pop
push
mov
jb
push
inc
addr16
add
or
add
xorb
mov
inc
mov
add
inc
out
and
push
jnp
fs
cli
jmp
and
and
add
ljmp
in
mov
mov
push
in
sbb
out
add
or
sbb
out
push
dec
loop
cmc
sbb
adc
insl
xor
loop
xor
jo
ret
and
lods
xchg
roll
repnz
and
icebp
inc
ret
lods
push
push
jg
push
cmpsb
je
divl
push
mov
and
xchg
mov
sahf
mov
jnp
inc
sahf
jns
iret
dec
push
cwtl
fsincos
andl
ret
or
fcomip
dec
popf
add
das
lds
mov
jnp
arpl
pop
jg
lds
cmpsl
cli
lahf
lret
les
fcmovne
sti
pop
cwtl
popf
jge
sub
fsubr
xor
jne
cmp
ja
xchg
sub
js
cli
inc
push
stos
movsl
movsl
cmp
jle
clc
mov
sti
daa
leave
aas
mov
in
or
loopne
repz
mov
jo
roll
add
jnp
jo
rolb
es
lea
mov
aam
in
push
jmp
mov
add
out
push
jmp
pop
jmp
jg
mov
mov
mov
cmp
out
fcmovb
movq
dec
xchg
mov
xchg
xchg
das
rcrb
nop
mov
mov
outsl
mov
roll
ja
push
int
fstl
sbb
daa
lret
lahf
pop
push
insl
js
cmp
vmread
int
and
movsl
inc
lret
pop
mov
push
lret
inc
jmp
pushf
in
ficoml
aas
mov
add
dec
pop
movsl
dec
pop
adc
and
add
loop
fstl
sar
xor
sbb
cmp
and
jbe,pt
pop
mov
xor
jg
jno
scas
inc
insl
cmp
add
sbb
push
cltd
ret
xchg
in
orl
and
insb
stos
push
mov
mov
sub
cmp
scas
jbe
jecxz
adc
xchg
ret
rcr
and
call
out
push
and
icebp
add
int3
imull
dec
and
stc
adc
add
out
call
pop
xor
and
sbb
and
icebp
sub
push
repnz
test
cli
sarl
gs
test
je
push
xor
mov
call
movsl
aad
in
and
lret
xor
push
in
fwait
das
cltd
mov
cmpsl
mov
or
addb
xchg
ljmp
cmp
scas
stos
or
imul
insl
lahf
mulb
popf
hlt
bound
loope
mov
inc
jb
stc
dec
aad
cltd
mov
dec
scas
repz
inc
repz
incb
xchg
push
dec
gs
fcompl
xorb
movsb
xor
leave
aad
es
or
xchg
lret
fistpl
adc
in
lahf
pop
and
push
scas
sbb
das
xlat
in
sti
pop
cmp
sbbl
lock
cmp
movd
test
push
clc
sbb
daa
ffree
push
fistps
inc
pop
enter
jp
pushf
sub
rcrl
dec
add
mov
clc
bound
icebp
lods
in
jecxz
ficomps
sbb
pop
mov
shll
jg
mov
lock
sbbb
and
lcall
push
adc
les
mov
push
test
loope
mov
dec
stos
aad
int
iret
std
xchg
mov
scas
sub
addr16
inc
xor
mov
lock
pop
and
dec
mov
lcall
jae
movsb
int3
xchg
cmp
pusha
sahf
gs
push
and
into
dec
jns
cs
adc
repz
xchg
rorb
inc
push
pusha
enter
movsl
sahf
inc
icebp
mov
movsl
scas
fs
imul
sub
rclb
es
notb
cmpsb
pop
mov
call
sbb
ret
xor
xor
dec
lahf
adc
mov
xor
xor
dec
in
dec
vpmacssdqh
sub
inc
add
jne
push
dec
adc
imul
mov
dec
shrl
push
les
in
fisttps
xchg
mov
lret
hlt
mov
lea
daa
lret
iret
push
mov
stos
xchg
mov
and
dec
xchg
out
fyl2x
cmpsl
dec
popf
iret
sbb
and
es
and
sbb
lret
lods
insl
jp
lcall
push
sub
add
jl
pop
pop
das
stc
ret
test
push
loop
jno
fsubr
js
and
push
xchg
cmpsb
test
sub
adc
dec
fs
sarl
xor
out
xchg
js
xor
adc
mov
inc
push
cli
test
out
jb
pusha
dec
mov
std
push
jbe
inc
in
mov
bound
ret
enter
outsl
push
push
stos
fs
popa
negl
dec
mov
scas
xchg
arpl
xchg
int3
lds
add
cli
or
daa
adc
fwait
sahf
push
pop
push
push
jge
das
mov
shll
jmp
or
push
mov
es
cmp
jp
push
push
xor
lret
out
icebp
nop
mov
std
and
cmc
adc
in
in
push
in
mov
ret
pop
std
push
clc
mov
jb
sbb
and
addr16
cli
jle
push
xchg
test
leave
jns
mov
xchg
push
ja
nop
sbb
mov
ret
mov
mov
pop
cmpsb
pop
pop
dec
mov
loope
std
cmp
scas
push
jmp
dec
dec
push
jns
add
test
sti
test
cs
cmp
jmp
mov
mov
mov
jnp
xchg
mov
mov
ret
jnp
xlat
or
cld
jge
cmp
lret
and
pop
pop
inc
xchg
sti
pop
xor
fdivp
in
orb
pop
addr16
lds
add
push
push
or
ret
mov
adc
mov
int3
sbb
jno
jmp
jl
xlat
aas
push
fs
inc
xor
subl
addr16
movl
lods
sub
add
sub
or
xchg
mov
push
sub
sub
addl
popf
add
dec
sub
repnz
mov
or
outsb
fisttpl
mov
and
stos
pop
lds
ret
jmp
int
insl
cmp
in
frstpm(287
push
sub
jmp
xor
lret
in
lods
mov
mov
sbb
mov
inc
rolb
pop
mov
test
in
sbb
pushf
xchg
adc
and
icebp
cs
roll
lock
pop
stos
data16
rcrl
shl
sbb
add
add
sbb
nop
popa
out
test
fmuls
sub
ret
loop
mov
mov
sahf
ret
mov
xchg
mov
pop
mov
dec
ja
loope
lahf
lods
cmp
mov
ret
or
ret
inc
mov
test
and
jnp
test
jp
add
xchg
nop
sti
xor
out
shlb
or
ret
in
mov
mov
push
loop
hlt
lods
pushf
push
repnz
fdivl
cs
or
pop
mov
out
push
push
cmc
xchg
pop
scas
push
test
nop
xlat
push
add
add
test
add
inc
mov
stos
leave
cli
faddp
orl
pop
frstor
scas
sub
jecxz
xchg
popf
outsb
jecxz
lahf
enter
repnz
and
sub
mov
popl
adc
add
in
jmp
popf
jl
jg
les
inc
jg
sbb
sbb
pop
addr16
and
mov
push
cwtl
std
inc
mov
out
and
ja
setl
fwait
ret
in
testb
xlat
lcall
imul
mulb
sbb
std
insb
mov
push
mov
std
sar
xchg
idivb
clc
scas
imul
mov
repz
adc
adc
or
aad
lret
roll
aas
jmp
addr16
sbbl
out
mov
xchg
in
inc
std
jg
jmp
dec
mov
lahf
xor
cltd
or
xchg
ljmp
mov
imul
jle
push
fistl
movl
jmp
mov
mov
fwait
out
jp
mov
push
xchg
cmp
inc
cmp
test
mov
lahf
mov
xchg
bound
rol
mov
mov
call
jl
cltd
repnz
lock
int3
jg
lock
test
aaa
imul
in
xor
xchg
ficomps
inc
insb
jmp
push
xchg
sti
inc
and
xchg
push
repnz
es
sbb
cmpsl
cmp
lds
pop
mov
mov
jp
and
sbb
cmp
enter
lahf
mov
andl
sbb
andb
mov
cmpsl
sqrtps
in
enter
lret
fs
mov
insb
jl
push
into
out
dec
ret
mov
cltd
andb
aam
xor
mov
insl
mov
jle
lods
mov
in
mov
pop
filds
in
es
fiadds
adc
cmc
repnz
inc
xor
mov
sub
and
ss
mov
xchg
movl
shll
adc
mov
out
mov
jecxz
adc
fdivrs
ficomps
dec
sbb
sahf
mov
sbb
xor
mov
jae
push
call
shrb
add
aad
push
inc
push
push
sbb
ret
cltd
stos
les
pop
mov
sbb
dec
roll
into
mov
cmp
hlt
das
loop
xchg
dec
fwait
pop
into
es
and
int3
pop
lds
sbb
dec
xchg
in
in
notb
fistl
mov
cmp
outsb
pop
imul
mov
enter
out
xchg
or
hlt
loopne
cmp
mov
sbb
mov
imul
mov
xchg
insl
in
inc
inc
aam
jp
cmp
jo
lret
out
push
popa
push
loope
les
xchg
mov
inc
jne
out
shlb
jp
out
and
cmp
cltd
pusha
sub
push
mov
push
add
aaa
jb
pop
cmp
ret
sub
mov
lods
adc
imul
insl
xor
pop
and
and
cs
popf
sub
testl
insl
and
pop
dec
push
xor
das
nop
stc
mov
js
sub
push
jmp
mov
es
add
inc
loope
push
jns
jnp
sbb
push
jbe
jno
sub
aam
pop
cltd
or
adcl
test
std
push
mov
aaa
adc
imul
leave
jle
xchg
xor
pop
out
dec
lock
insb
jge
or
fists
mov
fidivrs
cmp
mov
mov
or
out
xor
je
mov
imul
ljmp
pop
or
and
or
bound
cltd
add
xor
or
push
xchg
mov
xchg
mov
inc
daa
aad
and
xor
movsl
test
or
pop
jp
jb
repz
and
xchg
push
rcrl
pop
mov
inc
pusha
cmovb
and
xor
loopne
xlat
lods
ret
mov
pop
rcrb
repz
pop
test
stc
shrl
leave
adc
cmpsl
and
repz
cmp
es
scas
push
out
repz
repnz
negl
sbb
push
pop
adc
cmp
sahf
mov
dec
rorb
iret
jge
xlat
pop
mov
fidivrs
cltd
aas
xor
and
les
push
adc
cmc
and
xor
jmp
adc
repz
fisubrl
xor
fidivl
rcrl
adc
lahf
sarl
fs
sub
enter
lret
jbe
enter
pop
or
or
sbb
jg
push
mov
add
inc
ja
jnp
nop
xor
sub
jb
add
out
fwait
orl
aad
gs
adc
jmp
add
mov
das
adc
xchg
mov
or
dec
sub
jl
insl
cmp
mov
sar
cltd
fcompl
stos
lcall
xchg
movsb
add
adc
out
imull
sub
sarb
rorb
lods
stos
or
xor
mov
outsb
fwait
xlat
test
mov
pop
out
push
sbb
cmp
xchg
test
adc
shlb
dec
ret
push
fsubs
outsl
ret
insl
and
jnp
stos
push
call
in
insl
cld
loop
in
pop
xor
push
mov
fldlg2
andb
aam
mov
add
push
xchg
or
fld
enter
shll
pushl
popf
sub
hlt
ror
push
mov
out
divb
ja
std
push
out
orb
xchg
mov
sbb
sbb
add
jne
sbb
test
addr16
aad
mov
cmpb
add
push
mov
orl
jnp
lea
mov
rcrb
sar
inc
outsl
ja
jno
popf
mov
in
outsb
call
popf
and
pusha
pop
test
fs
and
cmp
xor
push
int
jmp
cmp
mov
adcb
jge
sti
push
in
add
or
lods
stc
rcrl
sbb
ret
push
xor
lcall
inc
push
push
cwtl
sub
cmc
cmp
jns
nopl
lds
in
mov
imul
mov
stos
mov
jg
cmp
push
inc
outsl
ffreep
cmc
aaa
test
xchg
popf
fbld
mov
mov
pop
std
add
cmpsl
int
mov
push
cltd
mov
fdivl
and
dec
xchg
push
jg
arpl
cmc
ror
adc
faddl
mov
and
sbb
jo
or
xchg
adc
test
clc
imul
mov
or
sahf
push
lret
pop
pop
adc
shrl
movsl
push
xor
pop
adc
sbb
dec
sahf
stos
aad
shll
pop
jno
test
cmp
mov
or
push
mov
ljmp
cltd
dec
mov
es
fs
dec
insb
cmp
cmp
xlat
sub
mov
and
mov
mov
push
inc
stos
scas
repz
and
adc
mov
js
add
pusha
mov
int3
jne
jnp
mov
ds
sub
jns
xchg
ss
mov
into
mov
jmp
pop
cs
cltd
pop
inc
subl
bound
pop
jb
das
sbb
mov
lods
mov
jmp
lret
adc
push
xchg
stos
cmp
das
popf
or
out
fiaddl
fldenv
jbe
iret
pop
loopw
das
lret
fldenv
fs
and
jecxz
jl
push
in
in
fistl
out
push
in
arpl
xlat
mov
mov
adc
adc
ds
inc
std
scas
xorl
aaa
fstpt
push
enter
loope
or
mov
out
mov
dec
das
jno
fbld
jb
cld
sub
lahf
inc
ja
mov
inc
das
div
inc
jle
or
inc
jb
call
push
jnp
xchg
or
in
popa
ja
add
dec
shrb
cmp
ljmp
out
testl
imul
fwait
mov
mov
movsl
mov
mov
pop
fcoml
fsubl
popf
shrl
push
fisttpll
addr16
pop
inc
popa
or
add
xor
pop
xor
xor
faddl
jb
or
cld
mov
loope
popa
pop
push
xor
or
sbb
and
cmp
sub
jne
xchg
push
in
pop
js
das
cwtl
or
add
dec
mov
ret
push
push
mov
outsl
ljmp
and
or
add
push
sub
jb
movsl
pop
xor
lret
stos
cld
roll
rorl
xchg
sbbl
lret
dec
fisubrl
js
pop
repz
and
fiadds
imul
leave
push
movsl
inc
sbb
mov
ret
loope
inc
lret
and
mov
pop
clc
jno
or
push
or
dec
xor
cmp
inc
push
inc
add
xor
js
pushf
mov
xchg
xchg
insl
adc
sbb
cltd
rolb
sub
in
xchg
clc
inc
lret
pop
add
imul
sbb
add
lret
mov
dec
scas
xor
fdivrp
loop
sarb
sub
adc
dec
adc
pop
popa
je
repz
stos
inc
je
push
adc
pop
inc
test
pop
aad
and
jae
in
ret
jmp
sbb
push
xor
lret
mov
lcall
mov
out
jno
inc
je
adc
je
xchg
sbb
fwait
xchg
sub
sub
or
in
jge
mov
loop
rcll
fdivrp
in
mov
cwtl
imul
mov
mov
stc
xor
sub
repnz
jnp
or
test
inc
inc
scas
aas
cmpsl
cmp
nop
add
jmp
lds
mov
jle
xchg
adc
dec
popf
push
ret
test
mov
xchg
push
adcb
mov
loopne
xor
movsl
cmpsl
in
in
addr16
push
stc
aad
jb
adc
cmpsl
xor
xchg
hlt
ds
fadds
mov
or
es
mov
imul
imull
push
and
std
test
cmp
test
xchg
inc
sub
loope
add
movsl
or
add
and
into
and
shrb
repnz
xchg
jg
adc
dec
addl
xchg
jle
in
dec
xor
enter
and
and
jmp
sti
sbb
inc
lods
mov
lods
push
les
add
nop
sub
loop
jle
xor
arpl
or
lds
jmp
pop
xchg
push
push
mov
push
mov
or
or
add
adc
sbb
fwait
aaa
notb
mov
mov
ljmp
cmpl
je
stos
out
loop,pn
add
aam
das
fldl
add
xchg
inc
or
das
and
jmp
mov
je
outsl
sub
div
daa
xor
out
clc
and
repz
sbb
shrl
cmp
jnp
dec
cld
pop
popf
shlb
lods
pop
jl
mov
push
es
in
fwait
movsb
sbb
xor
ja
inc
movsl
sbb
addr16
xchg
das
sub
nop
mov
out
dec
inc
out
cmp
lds
xchg
sbb
and
add
lret
fisubs
xlat
pop
rolb
sbb
call
outsl
inc
sub
push
sbb
aaa
dec
push
stos
dec
daa
adc
adcb
or
psllq
cmp
pop
lcall
jg
inc
sbb
mov
neg
sbb
rclb
xchg
pop
push
test
mov
mov
and
aad
push
insl
mov
sub
fcomp
loopne
je
dec
sbb
xchg
adc
cmc
dec
and
imul
jb
cmpsb
push
pop
test
cmp
rcrl
mov
sbb
mov
mov
sub
lds
aaa
add
push
rol
jle
add
add
lods
lret
fisubrl
in
inc
loope
jmp
je
arpl
adc
pushf
rorb
cmp
xchg
rcr
mov
jb
add
loope
or
ja
mov
jmp
imul
imul
repnz
cmp
lds
push
jle
adc
es
and
dec
push
mov
or
dec
jle
sub
sahf
xchg
jecxz
fwait
cld
or
mov
fwait
lcall
ds
in
inc
jl
fcoms
xchg
dec
dec
out
daa
mov
in
vpsllw
and
mov
popa
xchg
sbb
pop
icebp
cmp
or
lea
outsb
push
lret
sbb
imul
scas
lret
or
inc
add
cmp
mov
cmpl
push
mul
add
cmp
xchg
add
adc
or
ljmp
mov
adc
sbb
pop
mov
daa
ret
dec
int
test
movsl
lcall
cmp
out
cmp
add
pop
movsb
push
mov
or
cs
xchg
pop
pop
lods
sahf
gs
inc
aas
mov
inc
or
adc
cmp
ss
add
xlat
add
push
inc
loopne
xor
xor
int3
icebp
inc
jae
xchg
jecxz
xchg
test
xchg
mov
and
pushf
dec
inc
jbe
dec
movsl
mov
outsl
mov
mov
mov
subl
int3
ror
out
mov
jp
adc
add
sub
imull
mov
xchg
or
repnz
nop
ret
jno
and
stos
pop
adc
fcoms
xor
pop
or
push
popf
cwtl
daa
test
jns
fcomp
inc
cs
xchg
insb
inc
pop
xchg
cmp
testb
push
push
test
imul
stos
sbb
fwait
into
rclb
shrl
arpl
inc
aad
mov
sub
enter
test
clc
jo
les
sbb
and
imul
push
push
dec
outsl
mov
mov
scas
cltd
inc
out
jno
out
push
or
mov
popa
cwtl
insb
outsl
xchg
ss
gs
in
addr16
call
mov
push
sahf
leave
pop
sbb
mov
sarl
std
lods
js
push
mov
repz
push
sbb
in
push
jl
jecxz
mov
cld
inc
dec
add
and
lahf
loopne
mov
mov
jle
lret
fimuls
orl
sti
imul
fs
das
jle
dec
jp
push
mulb
psrlw
jno
cltd
xchg
adc
xchg
pop
addl
sbb
adc
cmp
sbb
cmc
mov
ret
repz
jecxz
push
push
xchg
pop
out
inc
mov
jno
add
in
xor
xor
xchg
xlat
lea
add
repz
stos
es
pop
inc
pop
jo
push
jne
out
sbb
xor
insb
push
mov
xchg
sti
push
das
scas
lock
rorb
xchg
mov
inc
out
cmpsl
adc
push
scas
stos
adc
cmp
notb
mov
fistl
test
push
adc
mov
jb
gs
insb
jnp
call
cwtl
mov
fadds
or
pop
stos
jl
xchg
mov
dec
filds
mov
cs
test
fucom
mov
push
cmp
cmp
pushf
cmp
test
lcall
lcall
jge
rcrb
shll
cli
sbb
mov
lods
inc
pop
push
orb
rolb
sahf
scas
out
imul
jns
imul
jle
push
pop
sahf
fstpl
testb
xlat
popa
aas
mov
xchg
cmp
or
neg
ss
jo
cmpsb
lcall
and
ss
mov
sub
in
dec
pop
test
cmp
lcall
jbe
outsb
pop
sbb
push
fbstp
dec
cmc
pop
xchg
dec
sar
out
test
jns
mov
sub
ja
inc
aas
mov
xchg
cmp
cmp
iret
dec
outsb
mov
mov
enter
sahf
lcall
mov
or
push
jle
aaa
sub
cli
or
sahf
cmpsb
loop
rcrl
sbb
inc
xchg
or
lret
push
xor
js
jl
jp
in
wrmsr
rsqrtps
pop
or
js
ss
shl
mov
fstps
mov
mov
shll
and
push
sarl
notl
scas
ss
mov
sarb
push
aaa
xchg
je
in
addr16
lods
mov
andb
dec
adc
ret
mov
sbb
notl
icebp
pop
or
xorl
push
dec
mov
test
pop
xchg
mov
mov
mov
jmp
add
movsl
sub
fs
rcrb
dec
ja
aaa
loop
or
push
add
add
pushf
and
push
nop
xchg
outsb
pop
cli
ficompl
pop
in
sub
shrl
int
inc
loopne
sbb
lcall
pop
mov
xchg
addl
xchg
jmp
movsb
xchg
lret
add
cmp
mov
and
ret
push
sti
std
call
sub
out
pop
sbb
repnz
fs
push
fstps
dec
imul
in
sbb
mov
push
dec
adc
aam
fidivl
movq
mov
insl
mov
in
mov
or
cltd
dec
rorl
or
fs
cmp
int3
mov
xchg
loop
out
out
ja
mov
jle
iret
repz
divl
cmp
mov
jbe
fisubrs
pop
jb
mov
out
mov
add
cld
jb
addr16
mov
outsb
fcoms
sub
jno
rcr
cmp
pop
push
add
and
gs
jne
sub
int
outsl
pusha
xchg
jge
stc
outsb
push
dec
pop
test
mov
mov
in
out
push
or
ja
push
ljmp
rcrb
icebp
push
mov
xchg
sub
aas
les
in
push
call
push
and
or
add
jbe
fstpt
inc
jmp
adc
add
inc
adc
aaa
fidivl
dec
lods
or
pop
test
mov
stos
divl
push
mov
push
mov
adc
dec
push
add
push
outsl
add
jmp
adc
push
imul
std
lock
shlb
jbe
fldl
ss
or
inc
clc
sub
lret
sbb
andb
jo
inc
and
adc
jg
loop
add
jg
arpl
pushf
clc
shrl
xor
jbe
cmp
ret
or
pop
ret
mov
xor
jne
mov
outsl
dec
and
inc
xchg
mov
sub
jg
cmp
add
lock
gs
in
in
push
mov
pop
adc
roll
je
pop
push
or
pop
loopne
mov
xchg
mov
rcrb
add
or
push
sahf
leave
dec
repnz
outsb
das
push
dec
movsb
mov
addb
inc
pop
dec
jns
inc
ficoml
test
xor
cmp
xor
jl
pop
mov
aam
or
int3
mov
sub
ret
test
lods
fucom
daa
inc
mov
inc
xor
cmp
cld
mov
lcall
or
jns
mov
popf
sub
notl
xor
sbb
dec
push
iret
out
lret
fsubrs
or
sbb
mov
mov
cmp
out
test
add
or
push
lret
xchg
inc
mov
push
inc
lcall
mov
lods
shl
push
mov
push
lcall
push
popl
movsb
mov
std
cmp
cmpsb
repz
movsb
or
mov
call
lret
addr16
xor
inc
push
inc
xchg
and
mov
jno
or
fs
jno
shll
lea
push
jnp
and
or
xor
push
push
das
sub
push
dec
gs
pusha
jge
and
lods
mov
pop
mov
adc
xchg
lds
shl
jae
in
sbb
bound
and
outsb
fwait
lds
dec
sti
jbe
mov
or
in
scas
xlat
dec
aam
or
andl
cmp
lret
fmull
cmp
push
and
dec
aad
mov
mov
insb
and
inc
push
mov
loopne
jbe
stos
sbb
stc
mov
push
rorl
xchg
inc
inc
xchg
xchg
inc
imul
pop
xchg
and
mov
popf
mov
loopne
das
sub
push
push
outsb
and
sbb
pop
insb
fs
shll
sbb
cmc
je
add
xor
out
loope
pop
pushf
pop
add
xchg
outsb
rolb
jb
or
dec
insl
mov
out
push
add
jns
in
push
andb
xor
imul
into
cltd
mov
lods
dec
sbb
xor
inc
sbb
cwtl
lea
inc
dec
call
cmp
mov
push
clc
dec
mov
fimull
add
clc
mov
icebp
cmpsb
cmp
mov
sahf
test
mov
aaa
sbbb
loope
or
test
into
repnz
repz
xor
mov
int
mov
mov
mov
pop
xchg
in
insl
test
sbb
fildl
jecxz
sarb
fidivrl
add
in
shl
jns
lcall
xor
pop
jge
out
movsb
shrl
ljmp
andl
mov
ss
addr16
mov
add
xor
fimull
cmc
and
push
out
in
push
add
add
mov
rcrb
lret
xor
jmp
notl
push
cmp
mov
sarl
les
xchg
cmp
dec
icebp
pusha
xchg
lock
xor
andl
loop
cmp
cmc
pop
adc
int
cmpb
rorl
sub
pop
cltd
mov
mov
sub
xlat
push
mov
lahf
sub
push
fnstsw
insb
aas
rorl
mov
arpl
and
addb
or
cltd
testb
push
cmp
in
repz
adc
add
jnp
dec
xchg
or
xchg
pop
dec
shrb
push
mov
pop
in
fcmovbe
inc
adcl
cmc
pop
xor
sbb
inc
jns
andb
into
imul
pop
cmpsb
lea
enter
lret
fs
int
in
int
inc
daa
xor
push
addb
xchg
add
sbb
fsubl
fwait
in
popa
test
push
xor
out
dec
inc
lods
cmc
sub
out
add
addr16
jl
sahf
push
data16
and
addr16
fs
dec
stos
inc
imul
insb
enter
icebp
pop
jo
mov
mov
dec
sub
cltd
testb
fstps
push
sbb
mov
mov
sbb
imul
xor
loopne
movsb
fisttpl
call
jge
pop
dec
bound
mov
xor
cmpsl
hlt
imul
jl
dec
ja
sub
in
jl
rcrb
jg
movl
ror
jbe
das
xor
push
inc
setae
in
lock
and
insl
push
fwait
push
xor
inc
xchg
das
jno
sub
scas
adc
dec
cmpsl
aam
aaa
xor
movsb
movl
or
ret
aaa
outsl
cmpb
pop
call
cmp
pop
rorb
pop
int3
insl
jge
mov
decl
fisttps
cmc
dec
pusha
stos
shrb
pop
xrelease
loope
or
add
mov
mov
add
xchg
mov
mov
pusha
inc
and
test
and
cmp
inc
test
or
scas
cmpsl
repz
in
pop
outsb
int3
push
jnp
cmpsb
popa
mov
pop
mov
xchg
xchg
stos
mov
cltd
pop
xor
fildl
cmp
add
lret
dec
cmp
addr16
jae
out
adcb
push
add
push
test
push
xor
sub
cmpsb
lods
int
pop
mov
ret
push
cmpsl
cmp
aas
dec
push
pop
cmp
lods
push
imul
mov
and
iret
fs
push
xchg
or
push
mov
lsl
or
push
xchg
add
addr16
dec
rcrb
aaa
mov
inc
or
add
outsb
int
in
jne
cmp
jge
fnsave
or
mov
test
out
popa
testb
rcr
cmc
cmp
cld
dec
stc
sbb
push
jae
movsb
or
cs
adc
pop
lock
jge
pop
rol
fistpl
xchg
add
add
push
adc
mov
outsl
mov
std
cmp
xlat
int3
fcompl
out
fnstsw
outsb
or
add
enter
pop
add
stos
out
xor
lods
lods
call
jbe
adc
enter
iret
mov
mov
jno,pn
imul
std
inc
xchg
lea
mov
mov
pop
pop
mov
ffree
cmpsl
sbb
cmpsl
cmc
rclb
adc
lods
pop
pop
mov
sbb
cmp
movsb
mov
repnz
pop
lea
shr
jl
add
cmp
jp
loopne
ds
push
cmp
addl
adc
rorl
xor
pop
adc
adc
mov
lret
lcall
push
lods
xlat
stos
arpl
orl
add
imul
call
in
lds
push
fists
inc
std
cmpsl
push
out
adc
push
push
movl
pop
push
aas
and
add
out
std
insl
stc
cmp
xor
mov
or
lret
mov
pop
push
xchg
mov
mov
aas
out
aas
test
sub
fadd
int
imul
loop
js
cmc
pop
cld
pop
setp
mov
lods
cmp
fstl
fildl
cmp
push
loope
inc
sbb
loop
jge
pushf
ja
fnstenv
add
stc
gs
mov
jle
rcll
sbb
out
rorb
adc
mov
decl
out
xor
dec
das
xor
or
mov
mov
cmpsb
cmp
stc
mov
aad
lea
and
mov
adc
sbb
xchg
mov
cmp
jecxz
xor
mov
inc
and
lock
inc
aas
vmovdqu
jg
out
jecxz
mov
mov
mov
jge
cmpsl
fdivr
and
shl
aaa
in
sti
xchg
iret
mov
sti
push
pop
data16
mov
stos
test
dec
jae
and
adc
lret
aad
pop
pop
icebp
pop
xchg
icebp
pop
jl
mov
pop
icebp
lock
sub
int3
xlat
dec
hlt
jg
dec
test
test
cmp
sub
adc
enter
leave
stos
movb
fst
and
xchg
sub
push
jbe
sbb
sub
jmp
insl
mov
adc
ja
adc
rorl
and
fs
xchg
push
or
or
mov
loop
out
lea
stc
adc
mov
lahf
mov
enter
clc
xchg
cmc
cld
cmp
or
dec
push
or
jge
inc
or
rcrl
jmp
imul
mov
cmc
js
sbb
scas
mov
sub
sub
cltd
lea
lods
int3
ljmp
dec
pop
pop
lods
sub
push
xchg
push
inc
push
pop
cmc
in
insl
movsl
into
mov
aam
push
roll
je
sub
les
in
jecxz
out
adc
lds
sub
pop
out
arpl
mov
inc
out
jno
movd
adc
fsubrl
idivb
xor
ss
popf
lret
jno
jae
mov
dec
add
pop
repz
pop
xchg
mov
je
es
jne
jmp
add
mov
jb
fs
lret
jae
movsbl
xchg
mov
cmp
pop
sub
sub
sbb
push
fisubl
pop
cwtl
setp
rorl
inc
pop
lods
mov
icebp
inc
or
xchg
sub
adc
aam
xchg
sbb
mov
xor
sub
ja
loope
loop
test
nop
dec
lcall
push
push
cs
es
pushf
push
addb
fcmovnb
icebp
sbb
dec
test
push
push
insb
dec
out
mov
ljmp
lock
es
inc
or
stc
jno
xchg
xchg
sub
sti
in
out
into
mov
les
loopne
add
shrl
inc
cmp
cmp
into
data16
fwait
or
cmp
loope
fcomps
ficoms
mov
adc
fldl
loop
and
repnz
xor
inc
out
js
sub
fcomip
outsl
and
xchg
mov
fsub
push
cmpsb
cbtw
ret
inc
cltd
pushf
jo
mov
nop
out
lea
dec
jmp
or
in
stc
and
inc
jne,pt
xchg
push
pop
and
add
aaa
dec
inc
lods
jb
or
fiaddl
mov
pushf
mov
jp
jecxz
xor
mov
jns
fsubrp
cmp
icebp
jae
scas
data16
cmp
out
sub
jb
ljmp
mov
incl
sub
ds
jp
sarb
push
stos
cmp
inc
test
fstp
xor
mov
adc
inc
push
scas
fcmovne
mull
inc
cli
dec
sub
push
dec
clc
gs
push
and
sub
jmp
jnp
and
sbb
push
fcmovne
imull
sbbl
mov
arpl
mov
xchg
fdivs
lcall
into
mov
lret
fs
outsb
push
cltd
adc
jae
mov
mov
push
lahf
mov
cld
int
mov
push
insb
mov
mov
jns
sub
inc
mov
mov
dec
push
jns
insl
clc
fucomp
push
pop
out
jmp
loope
out
subl
je
xor
jns
loop
sub
xchg
outsb
dec
add
push
pop
pop
lret
push
mov
dec
out
fldcw
jno
test
jo
insl
add
jmp
lock
inc
xor
xchg
xchg
dec
iret
popa
lahf
and
cmp
inc
mov
sub
orl
xor
pop
daa
inc
dec
pop
dec
dec
test
insl
std
ds
rcll
int
mov
adc
mov
push
cmp
mov
jb
pop
daa
push
in
mov
push
push
or
push
pop
iret
sub
push
xor
in
ror
icebp
pusha
shll
mov
in
inc
loope
sahf
ds
cmp
mov
fmull
push
mov
add
sbb
pop
xchg
loope
enter
out
loop
push
add
pop
aam
test
shl
push
and
push
mov
les
ja
or
mov
pop
into
stos
aam
xchg
or
push
icebp
xor
lea
pop
rclb
pop
repnz
mov
int3
rcrl
imulb
xchg
xor
dec
add
iret
andb
test
lcall
ss
cli
sub
or
adc
jecxz
push
stos
adc
loope
fistpll
shlb
inc
outsb
scas
into
inc
popa
inc
mov
pop
xchg
test
je
mov
sub
sbb
adc
and
loope
inc
xor
fimull
movsl
sti
std
cld
outsb
dec
xchg
inc
jle
pop
popa
fwait
lods
adc
das
push
pusha
dec
dec
rol
mov
add
sbb
mov
stos
mov
push
movsb
push
and
lods
xchg
jle
popa
mov
call
mov
inc
sbb
mov
les
and
fcom
push
dec
js
cmp
mov
xor
xchg
loop
mov
xor
pop
adc
insl
sbb
sub
out
roll
lahf
xlat
push
ret
lret
cmc
movsl
movsb
sub
jp
stos
roll
out
cltd
fcomps
cmp
cmc
xchg
or
aaa
popa
aam
mov
dec
pop
sub
fcoml
xchg
std
rolb
imul
mov
jno
jp
mov
std
movsb
lods
sub
jae
insl
enter
cmp
sub
scas
maxps
imul
mov
call
mov
push
sub
cwtl
stos
sub
sbb
adc
sub
or
cmc
lret
pop
sti
orb
idivb
add
pop
adc
fcmovu
jb
add
shrl
jecxz
fwait
ss
adc
pop
mov
stc
bound
fdivl
mov
cmp
push
out
jb,pn
imul
leave
or
gs
outsb
faddl
pop
jae
jg
call
dec
and
mov
andl
in
adc
sbb
sbb
push
imul
inc
cmpsl
ss
jmp
mov
lret
mov
lret
or
ljmp
add
xor
xor
mov
inc
push
adc
and
loope
xchg
or
pop
sbb
jae
dec
jns
jne
daa
lods
or
sahf
push
out
mov
jne
in
aaa
in
jp
push
int3
inc
in
in
push
clc
icebp
and
leave
cmp
shr
dec
out
in
xchg
and
sbb
and
mov
pop
sahf
pop
dec
imul
stc
cld
cwtl
ja
cmpsl
pop
stc
fnsave
mov
lcall
push
ljmp
mov
shll
xorb
movsl
imul
sbb
loopne
jmp
sbb
sub
mov
push
push
fisttpl
lcall
add
decl
fiadds
pop
mov
clc
sti
add
pop
andb
lahf
or
cs
imul
cld
jmp
in
call
mov
sarl
popf
popa
repnz
test
fidivrl
sbb
dec
xor
pusha
and
or
adc
push
outsl
and
cmp
mov
loop
out
imul
dec
xchg
shr
xchg
pop
push
dec
clc
mov
scas
xchg
cmpsl
dec
fs
outsb
push
sahf
mov
dec
and
inc
test
lods
je
nop
outsb
mov
sbb
pop
hlt
lret
cwtl
add
pop
push
pop
sbb
dec
inc
jae
sbb
push
sbb
cmp
adc
mov
add
xor
fs
sbb
sarl
mov
lcall
lea
ss
scas
hlt
mov
sub
outsb
mov
fs
dec
xor
inc
js
rorl
xlat
aas
push
pop
cwtl
adc
push
outsb
lods
inc
je
cmp
mov
jmp
in
pop
and
cmpsl
mov
nop
fcmovbe
out
jb
movsb
outsl
xor
aam
cs
xchg
pop
xor
pusha
imul
cs
fsubs
imul
xchg
xor
mov
iret
inc
in
or
adc
repz
iret
mull
add
push
daa
push
out
lret
push
test
jmp
jbe
jl
mov
lret
mov
lods
repnz
pop
ret
mov
lcall
lds
bound
or
aaa
ret
push
jns
loope
shrb
jno
mov
enter
int
mov
or
ror
out
sti
enter
jl
into
fnsetpm(287
dec
stc
rol
lcall
das
mov
lret
aaa
daa
orl
in
scas
pop
scas
push
sub
mov
lods
dec
jb
push
cmpsl
test
cmp
aaa
sub
lods
jecxz
inc
or
aas
sahf
inc
icebp
jmp
mov
jge
repnz
shlb
lahf
xchg
jmp
sbb
dec
mov
lea
int
add
xchg
sub
sub
jb
fadds
lret
scas
outsl
js
cld
sahf
adc
outsl
push
stos
int3
pop
std
ss
prefetch
je
mov
sbb
mov
cmpsl
in
scas
fsubrs
or
mov
jb
dec
loopne
jno
mov
jnp
push
jnp
inc
xorl
iret
mov
mull
push
adc
inc
ficoms
fcomps
pop
int
sbb
lds
inc
mov
lahf
cwtl
lds
push
rorb
cmp
stc
mov
pop
xor
arpl
add
add
mov
dec
pop
sbb
xchg
jno
sbb
xchg
lcall
cmp
sahf
out
xchg
insl
imul
movsl
imulb
aaa
lea
enter
mov
sub
push
cmp
cmp
loopne
rcr
popa
pusha
xchg
lahf
jmp
and
out
jle
es
leave
jmp
inc
mov
and
into
mov
cmp
mov
loop
call
push
push
pusha
mov
shr
shr
mov
lods
dec
mov
pop
shl
push
aas
lret
out
in
cmp
ljmp
fs
inc
xchg
ror
rolb
outsl
jno
imul
xor
push
add
jecxz
mov
mov
jo
mov
pop
shll
mov
push
dec
push
bound
mov
shlw
sub
stc
xchg
pushf
inc
fiaddl
cli
push
rcr
or
dec
fstpt
inc
xor
jno
jecxz
ret
mov
mov
mov
jl
push
mov
int3
jge
mov
pop
adc
lods
dec
out
jecxz
sbb
repz
pop
fwait
daa
cmp
xor
pop
cwtl
xchg
out
pop
dec
call
or
shll
frstor
mov
mov
xor
ds
arpl
mov
pop
repz
mov
xchg
jns
mov
and
inc
js
arpl
xchg
cmp
xchg
js
jns
bound
stc
push
push
lods
dec
daa
and
adc
nop
push
mov
daa
mov
ret
mov
pop
shl
shlb
cmp
mov
movsl
or
inc
mov
xor
dec
insb
xor
push
aam
or
mov
xchg
cmp
add
cmp
push
insl
hlt
jbe
mov
mov
testl
in
js
jne
insl
mov
mov
xchg
or
push
sub
fistps
mov
sbb
adc
out
push
and
add
sbb
fdivs
inc
jo
aaa
icebp
pop
cwtl
inc
jns,pn
lret
xchg
insl
arpl
push
xchg
lahf
sti
ret
inc
arpl
in
into
test
movl
dec
cmp
mov
mov
cmpsl
cwtl
add
out
outsb
repz
push
or
fldt
lds
adc
out
cwtl
repz
xchg
jl
jb
fmulp
aaa
enter
rcl
aas
ret
ret
push
xchg
sub
clc
rcl
or
mov
sbb
mov
aaa
inc
mov
rolb
leave
mov
insl
std
sbb
xchg
lret
mov
push
test
sahf
sub
lret
mov
pop
popf
mov
je
cmpsl
lret
jle
or
leave
ja
lods
adc
ds
adc
fucomi
push
cli
xchg
cltd
into
or
mov
push
imul
test
and
mov
shrb
test
and
in
sbb
adc
fisttpl
in
es
pusha
mov
inc
dec
inc
adc
sub
insl
xchg
mov
repnz
xor
arpl
add
icebp
sbb
out
mov
mov
sbb
jmp
inc
mov
mov
insb
or
pop
push
into
daa
adc
arpl
punpckhbw
xlat
out
inc
mov
daa
xor
jg
outsb
mov
pop
xchg
and
or
je
mov
xchg
arpl
insb
sub
cli
xor
mov
icebp
ljmp
cld
leave
xchg
sbb
aam
test
rcr
mov
ret
mov
cli
lea
inc
call
andl
mov
lahf
stos
push
add
mov
aam
lods
xorb
sahf
sbb
test
push
push
movsl
testl
pop
adc
cmp
stos
jbe
ficoml
sti
inc
push
jl
js
xchg
cmp
out
das
fs
mov
dec
shlb
test
cltd
ljmp
stos
jbe
mov
out
pop
into
mov
or
inc
and
jmp
in
mov
push
icebp
dec
hlt
inc
popf
pop
mov
mov
or
lret
dec
and
xchg
xchg
pop
shrl
add
add
cs
lea
jbe,pn
subb
into
adc
cmc
in
test
mov
ret
leave
mov
jg
pop
mov
jge
push
stos
jmp
xor
notb
dec
cmp
jno
or
aaa
add
lock
adc
and
mov
mov
mov
push
cmp
pusha
pop
cmp
mov
lret
cwtl
and
jnp
push
push
fwait
aas
cwtl
cmp
aaa
jbe
es
jne
pushf
jecxz
ja
add
mov
idiv
xor
push
pushf
push
dec
in
das
mov
imul
jnp
mov
push
push
icebp
insb
mov
or
inc
sub
ljmp
fidivs
xchg
mov
test
adc
aam
pop
insl
int
cld
movsb
inc
iret
mov
mov
cmpsl
cmpsb
push
lods
movb
int
push
jae
adcb
in
lds
add
test
jmp
xchg
jp
bound
push
jo
xlat
pop
dec
in
lcall
jno
jo
leave
or
inc
popa
pusha
push
lock
loop
xor
and
fidivrs
mov
lret
mov
adc
aas
out
bnd
daa
ljmp
jae
decb
stc
sbb
mov
sbb
adc
mov
mov
mov
sub
fcoml
test
cmpsl
inc
jno
xor
xlat
aas
mov
adc
cwtl
and
sbb
mov
es
mov
cltd
fs
xchg
jp
test
cmp
sub
lods
adcb
test
pslld
add
adc
sub
movntps
icebp
pop
fimull
notl
xchg
sarl
sbb
int3
xchg
mov
mov
outsl
clc
jbe
lock
int3
or
jp
lret
sbb
sbb
jns
lcall
aam
push
mov
leave
mov
popa
and
dec
push
sub
jp
les
pop
pop
cltd
les
sbb
mov
mov
cmc
add
rorl
cmp
in
outsl
cli
inc
push
or
or
movb
push
pop
popa
pop
jge
loop
in
mov
sbb
les
test
divb
xor
pop
adc
or
cmp
pop
cmpsl
cmp
movb
mov
rcll
addl
shrb
es
outsl
scas
xchg
test
into
ja
das
popa
out
jl
rcrb
mov
data16
jl
mov
jae
xor
lcall
in
mov
hlt
rclb
mov
test
repz
into
mov
mov
adc
dec
pop
orl
or
test
mov
push
sti
mov
sub
xor
ficomps
xchg
repz
add
inc
dec
mov
leave
jmp
call
ja
xor
lcall
cld
sub
adc
repz
ficompl
or
mov
popa
add
add
inc
xor
adc
cmc
sub
lahf
inc
js
ds
xchg
adc
addr16
aam
rcrb
pop
orb
xorb
pop
clc
add
cs
mov
aad
fadd
dec
mov
mov
mov
cs
mov
dec
cmp
pop
ret
and
std
push
or
jae
jg
cmp
sarl
lahf
mov
jae
addr16
lods
sub
mov
jnp
scas
cmpsl
push
adc
repz
push
out
or
add
cmp
jp
sarl
roll
cltd
clc
cmpl
test
pop
popa
dec
pop
sub
push
notb
shl
lods
stos
clc
sbb
dec
or
adcb
fdiv
jne
imul
sub
cs
bound
add
cld
jg
xchg
adc
inc
push
sbb
cmp
add
dec
and
push
or
lods
pop
int
mov
lret
jns
xor
lcall
imul
xchg
jo
jo,pn
paddd
sbb
jecxz
rolb
fs
cmp
or
xor
lock
cvttps2pi
loopne
add
mov
xor
or
out
mov
in
push
dec
mov
out
add
push
cmp
stos
les
scas
xlat
dec
or
les
mov
jno
add
ds
mov
scas
aad
movsb
bound
repz
xor
les
jb
out
push
ficomps
pmulhuw
push
pop
xchg
mov
or
enter
sub
test
jl
cmp
neg
pushf
xor
mov
ror
sbb
pop
dec
and
and
push
pop
mov
mov
fimull
out
xchg
adc
push
xchg
and
adc
push
mov
cmp
sbb
sbb
xchg
mov
inc
xor
imul
lods
adc
push
hlt
xlat
sahf
jns
loopne
inc
lods
out
mov
movsb
frstor
jne
push
cmp
sbb
adc
and
sahf
arpl
dec
mov
cld
shl
imul
in
jmp
jnp
dec
cmpl
aaa
out
jge
mov
cwtl
sub
mov
ret
addr16
lret
aas
dec
mov
and
pop
mov
jno
repz
cmp
mov
push
bound
fs
or
fstp
add
sbb
outsl
fwait
xchg
mov
std
lret
xchg
cmp
xchg
xchg
add
dec
subb
or
arpl
add
lock
mov
stc
jmp
inc
fwait
adc
jnp
xor
out
sbb
mov
cmpsl
mov
or
outsb
mov
jle
add
or
mov
sarl
loope
in
xor
or
add
mov
dec
inc
clc
and
push
icebp
cmp
cld
jb
daa
jp
add
test
jl
dec
push
mov
pushf
lret
mov
int
js,pn
dec
fldl
jb
add
mov
imul
jecxz
lea
addr16
mov
xor
lahf
cmpsl
sbb
adc
jnp
imul
scas
movsl
xor
cld
pop
popf
and
push
sbb
xchg
jb
fldcw
add
mov
xchg
test
dec
push
test
cmp
mov
cmp
fwait
es
and
sub
inc
lret
cmp
sub
sbb
pop
lock
adc
int3
lret
lret
pop
and
test
sti
dec
ljmp
sub
inc
clc
loopne
jl
jne
sahf
andl
jb
pop
popf
lcall
aas
sub
sbb
xchg
jae
enter
movsl
addr16
call
dec
mov
cmp
lds
fwait
pop
shll
jns
aad
mov
cmp
xchg
adcl
addr16
int
outsb
inc
ja
pusha
mov
mov
xchg
cmp
mov
cmpsl
fisttpll
shlb
or
push
fwait
shlb
pushf
jg
sbb
xor
mov
dec
scas
subb
dec
fwait
gs
repz
jl
mov
jno
fldenv
imul
add
fbld
mov
in
xchg
push
outsb
int3
inc
int3
sbb
scas
fiadds
sahf
mov
in
adc
dec
popf
or
dec
pop
lcall
sahf
in
push
gs
imul
add
push
out
dec
cmp
sub
pop
jnp
inc
cld
outsb
sub
addr16
xor
sahf
xchg
jl
stos
push
lret
push
sbb
or
jle
mov
mov
lgs
gs
ret
repz
xor
push
out
addl
jnp
lret
push
shrb
sbb
into
gs
xchg
fistl
push
or
mov
mov
aad
data16
mov
xchg
xor
push
stos
dec
sub
call
aaa
test
pop
or
jge
movsl
test
sub
pop
rcrl
mov
sbb
or
in
fmull
hlt
das
inc
iret
and
andb
sbb
pop
cltd
mov
inc
imul
mov
mov
push
mov
pop
andl
adc
or
mov
jecxz
and
orl
into
push
lock
add
popa
push
cwtl
bound
xchg
mov
lods
idiv
insb
jnp
sahf
jbe
xchg
repz
and
cmp
outsl
cmp
sub
loope
cwtl
or
jle
pop
inc
adc
icebp
test
and
jbe
orl
pop
inc
push
bound
mov
aas
push
cmp
ret
lret
or
mov
pop
aam
push
sbb
jns
bound
js
cmp
sbb
xchg
push
insb
and
lods
dec
sbb
pop
xor
jl
inc
shll
xor
aas
sub
pop
inc
sub
les
nop
mov
pop
lock
in
and
sahf
add
test
adc
ficoms
les
lds
test
popa
cmp
push
xor
adc
aad
mov
addb
mov
mov
sbb
adc
sbb
rolb
gs
lret
mov
xor
xchg
xchg
jecxz
xor
mov
psubw
inc
inc
lods
or
mov
adcl
xor
dec
mov
mov
dec
pop
ljmp
push
outsl
movsl
fnstsw
xchg
jp
jo
stos
or
mov
cmc
fdivrs
jae
loope
lea
jne
dec
lds
mov
movsl
stos
mov
add
repz
aas
adc
mov
mov
lock
xchg
cltd
rorl
sbb
test
aam
insl
out
and
imul
out
test
and
pop
or
aad
test
or
test
int
xchg
cmpsb
cmpsl
rolb
js
fldl
lcall
cmc
pushf
sti
bound
xor
pop
loope
jo
dec
and
addl
add
push
push
push
or
gs
lahf
push
jb
jecxz
inc
xor
pop
aad
hlt
push
out
mov
jmp
insb
sarb
mov
pop
add
pop
xor
fsubs
gs
bound
xor
loopne
loopne
mov
sbb
lcall
decb
dec
push
out
and
push
rcll
sbb
daa
sub
fimull
rorb
lock
int
sbb
mov
xchg
ret
xchg
push
push
jle
sub
push
test
rcll
adc
loope
ja
nop
sarl
rol
dec
sub
xchg
push
lods
add
in
and
fbstp
sub
popaw
and
xchg
xlat
enter
jno
popa
push
movsbl
push
in
dec
les
jae
mov
test
test
add
ljmp
neg
cmc
rclb
hlt
mov
out
xor
jbe
in
sbb
sahf
cli
rcrb
mov
xor
jae
jb
out
or
push
pop
test
or
mov
das
mov
inc
test
mov
data16
push
das
jmp
lea
ret
cmp
mov
jnp
rcl
dec
out
pusha
daa
cmovns
push
movsl
or
sub
dec
dec
mov
clc
push
adc
mov
lea
jns
cmp
lahf
dec
jle
and
add
aas
cld
ljmp
into
mov
xor
jae
test
ret
rcrb
add
sbb
imul
cltd
inc
mov
pop
call
xor
jnp
fnstenv
sub
test
push
iret
sti
cmp
push
dec
insb
add
outsl
adc
xor
push
add
mov
xor
sbb
cmp
and
in
ficoms
add
jbe
push
hlt
dec
push
dec
ja
and
mov
test
adc
push
jo
cmp
nop
outsb
cmpsb
clc
dec
xor
add
inc
mov
mov
or
sbb
and
shlb
out
add
cmp
inc
fwait
push
jae
aaa
lcall
lods
subb
and
add
into
jmp
test
jns
pop
fwait
pop
and
loope
and
mov
pop
dec
ds
addr16
and
in
jo
ljmp
jb
loop
and
sbb
stos
cmpsb
cmp
xchg
sbb
in
decb
dec
and
xlat
inc
rorl
add
outsl
je
insl
in
fdivs
mov
cmp
sbb
xchg
jmp
lock
pop
pop
pop
push
mov
punpckhwd
out
dec
and
aaa
lea
subb
ret
nop
sbb
nop
mov
imul
mov
push
imul
ret
jno
js
mov
out
invd
stos
jno
pop
sub
add
sbb
in
jae
jbe
adc
mov
mov
push
dec
es
or
pop
sbb
inc
fnstcw
cli
lahf
loopne
stos
mov
dec
jecxz
mov
push
cs
sub
jno
orb
in
stos
push
aas
dec
xor
mov
inc
and
mov
lods
scas
jecxz
lahf
adc
mov
dec
cmpsl
xor
rcrb
hlt
cmp
mov
ror
int
mov
enter
pop
xchg
sub
mov
jns
popf
int3
ljmp
xor
push
xor
lods
cmp
cwtl
sti
sub
jg
mov
xchg
adc
in
pop
rcl
stos
sub
xchg
stos
popa
add
jmp
lock
arpl
xor
mov
pusha
xchg
sbb
xchg
dec
out
cld
rolb
arpl
aam
in
cmp
mov
test
mov
outsb
decl
sub
jge
out
fcomi
outsl
xor
cmp
mov
repnz
arpl
repnz
sub
daa
pop
leave
push
lcall
sub
test
xchg
aam
dec
pop
and
fimull
roll
xlat
inc
mov
pop
or
daa
addl
loop
jb
imul
out
inc
jecxz
dec
addr16
inc
cltd
out
ss
mov
fildl
lret
or
addb
data16
or
mov
popf
push
cwtl
lret
cmp
dec
or
jmp
cwtl
not
pusha
sbb
mov
stos
dec
popa
aaa
pop
push
fwait
mov
and
inc
mov
test
stos
and
bound
mov
cltd
aad
dec
and
and
dec
xor
shl
and
adc
leave
jno
lret
fldcw
and
in
pop
into
movsl
adc
cld
fsubrs
popf
mov
aas
add
cli
imul
and
push
movsb
les
mov
inc
arpl
fdivrl
adc
mov
addl
inc
lds
sti
sarb
das
insl
push
add
sbb
es
fsubs
aas
xchg
sub
sbb
in
or
notl
int3
inc
pop
cmp
pop
sbb
mov
in
es
fadds
xchg
dec
jmp
inc
xchg
or
loope
not
cmp
aad
jmp
xor
lret
int
jne
or
fidivrl
lods
fnsave
cmp
jo
push
fsubrl
sti
mov
test
add
sbb
test
add
xchg
sub
cmp
inc
cltd
pop
mov
fisubl
out
xor
push
movsb
lret
mov
sub
mov
insb
inc
aaa
sbbb
fbstp
pop
out
push
insl
push
es
fnsave
mov
push
jbe
xchg
test
mov
xchg
mov
mov
add
sbbl
pop
arpl
fidivrs
loop
push
stos
lods
pop
int
sbbb
pop
pusha
and
test
insb
push
mov
xor
jl
xchg
pusha
test
or
add
cmpsb
add
push
mov
fwait
add
cli
jno
push
cmp
mov
ds
mov
lea
ret
in
lret
xor
jns
out
sti
adc
jns
push
sbb
cmpsl
imul
out
pop
lcall
jl
icebp
lods
xchg
cmp
cmp
mov
push
int3
inc
sbb
xchg
mov
jb
xchg
xor
incl
push
sbb
push
ljmp
cwtl
and
jns
outsl
cwtl
mov
es
fs
push
cmp
jb
push
aam
adc
add
sub
ja
out
out
cmp
mov
push
and
push
mov
cld
jne
cmpb
insl
cs
pop
xor
test
mov
test
jb
push
inc
lods
mov
add
dec
xchg
sbb
mov
cltd
shrl
sub
ret
sarb
lock
les
mov
lea
or
cmp
pop
scas
jmp
gs
mov
pcmpgtd
push
sub
mov
ja
push
pop
movsb
lods
pop
pushf
mov
push
adc
ficompl
xor
pop
lds
aad
inc
iret
hlt
mov
mov
xor
and
test
mov
adc
stos
cmpsb
test
or
pop
adc
ss
pusha
xor
pop
jne
or
mov
mov
iret
stos
bound
pop
or
mov
xor
ds
sub
push
mov
sub
sarl
daa
mov
inc
call
movsl
sar
into
ja
rolb
xor
test
test
pop
add
int3
xchg
inc
shll
add
mov
mov
xchg
cli
out
push
sub
mov
data16
je
imul
jge
xorb
repz
jno
dec
xchg
js
scas
sbb
nop
xor
cli
xor
aad
xor
rcl
fcoms
cmp
fwait
test
das
mov
mov
scas
mov
dec
pop
cld
ja
icebp
sbb
aam
and
repz
or
outsb
inc
sbb
mov
movsl
adc
add
repz
cmc
jbe
push
and
jle
xor
pusha
or
scas
pop
aaa
fcoml
rcrb
fwait
mov
dec
imul
mov
mov
popf
pusha
cmp
push
jnp
mov
sbb
cs
adc
fs
outsb
bound
leave
and
sub
rol
aad
mov
push
push
mov
test
adc
out
stos
lock
sbb
dec
cmp
les
push
xchg
es
push
inc
jbe
test
into
push
rolb
add
insl
pusha
cmpsb
scas
or
dec
pop
jnp
and
jnp
inc
push
subl
inc
mov
cltd
xor
pop
sub
xchg
rcrl
fcmovnb
push
adc
imul
pop
es
aad
sbb
cwtl
add
pop
and
pop
sub
daa
out
dec
fcoms
arpl
cmp
scas
sti
sub
arpl
and
mov
test
cwtl
mov
stos
lock
jg
push
in
sti
nop
stos
cmpsb
ds
testb
inc
pushl
mov
bound
out
mov
or
jl
pop
jge
insl
hlt
mov
scas
iret
sbb
or
mov
xchg
inc
mov
rorb
cwtl
ds
jne
out
mov
fimuls
gs
jl
jl
dec
insb
mov
pop
cmpsl
or
sar
jecxz
sbb
adc
sub
mov
std
mov
clc
pop
jne
push
pushw
xor
push
add
fstl
in
add
nop
int3
push
and
test
pushl
pushf
dec
jge
pop
mov
xchg
jne
aas
call
int3
sub
in
xchg
repz
add
shrb
enter
inc
in
mov
xchg
pop
sahf
loop
push
test
xor
bound
outsl
repnz
jbe
hlt
pop
aad
jae
mov
and
nop
mov
ja
loope
add
scas
movsb
mov
lds
nop
outsl
popa
dec
nop
stos
movsb
mov
sub
loope
movsb
xor
pop
xchg
movsb
scas
sbb
inc
xor
jo
movsl
imul
mov
add
inc
cld
subb
je
ds
or
fisttps
or
xor
or
mov
sar
cmp
xchg
pop
rcl
dec
mov
ret
mov
sar
sets
test
aas
add
scas
repz
scas
inc
mov
ret
cltd
subl
outsl
addr16
push
cmp
mov
jb
lret
mov
mov
push
jecxz
divb
push
dec
xchg
aad
rcll
in
push
gs
imul
and
pop
lds
mov
mov
xor
adc
inc
sub
mov
and
in
ficoms
fidivl
sub
fidivl
pusha
xchg
divb
ss
rcr
mov
pop
and
push
cmpsb
test
lds
out
add
mov
not
ret
shll
cmpsl
ja
mov
jmp
fcomi
sbb
push
fidivrl
loope
imul
inc
fistl
inc
dec
dec
mov
loopne
cmp
cmp
xchg
adc
fwait
mov
fisttpll
cmp
outsl
lock
stos
cmp
test
and
dec
aam
inc
out
ss
jp
mov
loope
sub
xchg
aas
stos
sbb
jne
loope
in
cmpsb
aas
jb
xor
mov
test
subl
jle
ljmp
or
fwait
push
mov
mov
nop
xor
push
add
int3
mov
xchg
or
jb
fildl
jmp
sub
insl
outsl
imul
mov
mov
cmp
movsl
adc
pop
cmp
pop
add
pop
cmp
out
adc
lds
decb
jge
push
or
jo
or
pop
pop
outsl
push
faddl
out
fwait
jne
lods
int3
insl
inc
dec
mov
dec
repz
mull
ret
arpl
mov
jge
aam
shlb
adc
pop
xchg
lret
add
fsubrl
test
xchg
daa
xor
repz
push
adc
js
sbb
mov
sbb
notl
jmp
and
xchg
cmpsl
xchg
or
cmp
pushf
popf
fs
imul
pop
stc
or
leave
mov
mov
pushf
lahf
test
or
or
mov
scas
jns
push
mulb
fisttpl
mov
xchg
mov
dec
repz
pushf
test
test
aaa
mov
mov
xor
inc
push
mov
xor
or
sbb
dec
loop
dec
cmp
out
cmp
fcmovnb
and
lods
mov
sub
mov
adc
push
pop
loope
adc
pop
cli
sub
shlb
push
icebp
lret
mov
stc
test
adc
ret
mov
pusha
jge
xor
test
mov
mov
add
mov
or
pop
lea
into
mov
or
dec
dec
ljmp
and
inc
push
les
sbb
push
call
inc
daa
movsl
std
and
div
lret
jmp
insl
push
pop
lods
clc
jge
mov
xchg
fmuls
decb
mov
jg
or
inc
loope
int
xor
add
mov
inc
cmp
aaa
aaa
pop
sub
sbb
int3
jp
mov
mov
test
jmp
sbb
lods
lret
inc
or
pop
pop
cmp
in
push
pusha
push
sub
adc
pop
cmpsl
fstl
cmpsb
movsb
sbb
mov
xorb
xor
add
sbb
in
bound
or
inc
push
shrl
adc
cmpsl
ljmp
test
pop
mov
popa
mov
pop
sub
push
cld
sub
divl
xchg
out
mov
dec
and
sti
sbb
lcall
jecxz
xor
push
sbb
mov
insl
jge
sub
push
mov
fsubs
sbb
pop
cmp
ret
sbb
mov
pop
out
mov
in
jecxz
out
leave
dec
je
cwtl
sbb
ret
pop
push
leave
int
dec
xchg
rcl
ss
adc
sahf
enter
jae
es
out
dec
pop
ror
jno
jmp
dec
inc
ds
sti
pushf
addr16
fbstp
jne
scas
cmp
sub
int
mov
mov
pop
nop
inc
pop
bound
mov
insl
stc
push
mov
and
mov
mov
mov
sbb
pop
mov
data16
push
lcall
jae
lock
into
add
ljmp
add
xchg
ret
fdivrs
xor
sbb
mov
mov
sub
xor
iret
dec
push
in
add
mov
dec
int
mov
ljmp
loope
cmpsl
call
xor
xchg
xor
mov
hlt
inc
add
xor
sub
jle
pusha
mov
out
rolb
xor
scas
push
lock
aam
mov
shlb
ret
in
test
je
stos
nop
mov
loop
pushf
inc
movsl
fmull
push
push
outsb
push
mov
sub
pusha
jnp
out
and
jnp
mov
clc
in
lock
sar
mov
sbb
ljmp
addb
add
mov
lea
pop
imul
mov
cmc
jb
jbe
mov
loop
in
lods
aam
mov
jns
js
insl
cs
push
dec
push
mov
sub
push
sub
push
icebp
sbb
repnz
xor
inc
out
xor
inc
pusha
loope
js
inc
mov
push
aas
pop
add
adc
shrb
jns
jecxz
cld
movsb
xor
dec
mov
cmp
js
shrl
fidivrs
cmp
jl
xor
push
repnz
insb
daa
pop
cmp
aaa
out
iret
mov
ret
xchg
cmp
jle
mov
cltd
in
inc
mov
jno
or
inc
out
fsts
orl
test
stos
pop
jo
test
pop
nop
push
sbb
enter
loopne
in
sbb
nop
lret
xchg
cmp
rcrl
jle
in
push
add
adc
xchg
out
mov
jg
dec
sbb
bnd
movsb
cmp
pop
sub
add
jae
dec
sub
dec
or
adc
xor
pop
and
dec
jle
cs
or
dec
fcmovbe
addr16
ret
pop
hlt
jge
push
aaa
jbe
aaa
xlat
mov
pushf
fwait
xchg
xor
lods
in
lea
outsb
add
imul
mov
call
shlb
mov
or
push
inc
inc
lcall
adc
sub
add
dec
jp
out
stos
dec
iret
mov
push
mov
pop
fs
fisttps
ds
test
sub
pop
roll
mov
movsb
fmull
adc
xor
dec
inc
mov
loopne
pop
jge
movsb
mov
xchg
mov
iret
cmp
mov
aad
inc
les
js
inc
dec
dec
adc
lcall
pop
push
push
jb
roll
dec
lcall
jl
push
data16
and
subl
push
inc
jge
loop
mov
ret
shrl
xor
fnsave
push
pop
push
shrl
movsl
rorb
xor
xchg
add
pop
adc
insl
lea
jns
fs
xor
inc
xchg
lods
lret
inc
pop
stc
sub
sub
movsb
shlb
call
mov
mov
mov
insl
xchg
aaa
xchg
fcomps
xchg
sbb
ret
sub
mov
xchg
add
dec
ret
test
sub
repnz
mov
jg
jle
dec
test
sbb
jp
mov
pop
out
sbb
jo
xchg
cmc
jl
sub
push
or
push
popa
or
cmp
aad
sub
ss
popa
push
fwait
and
push
mov
loope
and
enter
cmp
mov
sbb
arpl
into
lcall
btc
mov
ss
jbe
nop
shrl
pop
jmp
mov
sbb
aas
fistpl
mov
dec
loope
sahf
sbb
mov
mov
ds
imul
adc
arpl
cmp
or
les
lock
pop
shr
dec
les
or
xor
add
dec
cmc
xor
pusha
loopne
ljmp
xor
andl
mov
ljmp
dec
sahf
push
in
loopne
mov
add
sahf
cmp
push
lds
pop
in
add
insl
call
fists
ds
inc
jl
xor
sbb
popa
cmp
fwait
jb
mov
mov
or
cmp
push
ds
test
in
or
mov
pop
cmovns
mov
xchg
arpl
vmovapd
aas
push
stc
pop
clc
cltd
add
pop
mov
mov
dec
call
lea
loop
push
movsl
js
mov
push
xchg
rclb
jbe
enter
cmp
lods
lcall
mov
jmp
inc
sbb
shll
xchg
pop
cwtl
xchg
cmp
mov
stos
jl
call
ret
aas
into
fcmovu
stc
push
cmc
call
cmp
popf
lahf
xlat
push
cmp
jp
jno
mov
insl
stc
shlb
in
mov
mov
fwait
iret
sub
sub
in
fwait
push
adc
cmp
mov
mov
shlb
or
add
sbb
and
stos
add
scas
xchg
in
inc
mov
xchg
mov
cmpsb
enter
popf
adc
push
push
test
xor
cltd
stos
mov
adc
pop
add
fwait
add
aad
adc
jo
in
mov
fimuls
mov
jle
sub
xor
lcall
sbb
icebp
fdivs
insl
hlt
add
push
xchg
in
decl
pop
fcomps
mov
mov
push
mov
sbb
rclb
stos
popa
inc
fsubrs
cmp
nop
cs
iret
lret
push
lahf
and
inc
adc
pusha
pop
and
mov
popl
out
xor
jle
xchg
cs
mov
or
stos
cmpb
stos
mov
lods
bound
or
mov
pushf
mov
rcl
xchg
daa
les
jns
mov
push
shll
movsl
mov
mov
leave
and
iret
dec
jle
jbe
mov
aam
mov
push
push
xchg
pop
xor
inc
mov
loopne
movsl
sahf
sbb
loopne
cld
mov
jnp
aas
adcb
sbb
imul
stos
loope
or
add
ret
dec
mov
fisubrl
movsb
cmp
int
scas
or
mov
es
arpl
add
ret
int3
xchg
ror
add
push
cmp
mov
gs
les
mov
and
data16
popa
ret
into
inc
push
test
push
cmp
rcll
cltd
xchg
inc
mov
out
inc
and
es
push
cltd
aas
sbb
popa
nop
jns
ret
shlb
xlat
cmp
std
icebp
hlt
add
jbe
sbb
imul
cltd
mov
outsb
dec
into
inc
push
adc
test
jb
xchg
dec
daa
push
fists
sbb
fnstcw
imul
adc
fdivs
fdivs
push
pop
ss
xor
out
sbb
jns
ljmp
push
out
test
dec
mov
js
dec
jp
jmp
jb
sub
sti
lcall
in
mov
jb
mov
jmp
xlat
fidivrl
sub
test
lahf
jg
fcoms
clc
mov
nop
inc
icebp
call
lods
pop
repnz
movsb
clc
enter
xchg
cltd
aaa
jne
pop
push
fwait
mov
divl
test
fwait
je
cmp
inc
push
imul
clc
jle
repnz
cwtl
and
mov
adc
js
push
mov
push
push
fucomi
insl
jbe
sbb
out
ret
add
loope
ret
sub
cli
aam
leave
push
mov
fucom
xorl
jns
arpl
mov
pop
jne
enter
xchg
syscall
leave
sbb
insl
push
aaa
jo
testb
inc
sub
fwait
scas
bound
jge
dec
das
cmc
mov
js
repz
gs
sbb
fwait
cli
lahf
cmpsl
lds
dec
loopne
or
shlb
sahf
subl
mov
gs
jnp
jne
ret
in
aaa
std
idivl
clc
jecxz
jo
and
in
xchg
cmp
scas
jnp
jne
ja
lcall
es
pop
cmp
add
fcomps
fwait
mov
hlt
insl
add
cmc
cli
fidivrl
pushf
xor
sub
outsl
add
pop
jns
enter
pusha
aam
aas
cmp
sub
sbb
inc
pusha
dec
js
aas
call
or
pop
int
loop
sub
mov
mov
test
mov
cmpsb
adc
jnp
add
cmp
inc
fildll
xor
mov
lock
call
test
aas
jae
add
lret
push
out
pop
mov
sbb
or
or
fcmovnb
cmpsb
xor
lret
jp
inc
out
shll
xor
pop
lahf
pop
and
xor
mov
test
mov
sbb
test
stos
scas
mov
or
xchg
or
addr16
icebp
jg
push
inc
test
data16
jno
shlb
imul
ror
in
and
cmp
mov
xchg
stc
jne
sub
cld
cmc
xlat
xor
mov
xorb
adc
adc
mov
or
sbbl
pop
cmovl
outsb
mov
xor
jl
jnp
faddp
mov
out
in
ficoms
fildl
hlt
ljmp
andl
cmp
mov
std
ficompl
cmp
push
bound
sbb
lods
xchg
repnz
adc
and
adc
test
lcall
lock
aad
cmp
shlb
pop
movsb
out
sub
pop
push
cmp
sarl
adc
std
push
push
and
iret
mov
adc
sbb
xor
iret
ja
fisttpll
mov
pop
test
scas
mov
sub
push
in
dec
mov
fistpll
xchg
and
xor
arpl
mov
jecxz
mov
daa
inc
push
push
pop
mov
inc
or
gs
jne
mov
xchg
xchg
lds
adc
std
pop
dec
rol
lock
mov
movq
cmc
jmp
mov
or
andl
rcrl
mov
push
in
jl
js
push
gs
push
cltd
mov
test
jae
loop
das
mov
cmp
cmp
inc
jne
mov
pushf
test
xchg
lods
jno
jo
jp
movsb
enter
pop
not
mov
std
inc
notl
cmpsl
outsb
lods
lahf
pop
movsl
dec
and
arpl
imul
pop
push
lahf
gs
pop
xchg
pop
and
cmp
pop
fisubrs
xor
lahf
jo
out
mov
mov
test
adcl
cmp
movsb
mov
test
data16
leave
sbb
and
add
xor
pop
cmp
mov
scas
xchg
in
xlat
bound
mov
lods
or
je
push
sahf
push
popa
sti
jg
lahf
insb
push
daa
jns
and
pop
cs
mov
ja
or
cmpsb
push
and
sbb
cmp
dec
ret
or
push
sti
pop
ret
ret
or
or
sbb
es
jns
pop
and
test
cmp
stc
bound
movsl
mov
mov
cmp
sti
adc
rorl
test
arpl
sub
outsb
daa
lret
sub
aas
pop
xchg
negb
data16
mov
dec
ljmp
test
sahf
enter
fnstcw
mov
ret
lahf
lods
sub
add
or
inc
mov
mov
xchg
xchg
xor
xchg
fwait
sub
mov
sbb
jecxz
test
in
iret
in
ds
push
mov
inc
cmp
lods
push
mov
cli
xchg
popa
mov
cltd
add
stos
icebp
or
sbb
repz
in
pop
movsl
insl
pushf
dec
sub
stos
dec
movl
cmp
or
icebp
sub
dec
aam
lcall
mov
in
ja
pop
adc
pop
repnz
adc
pop
out
aam
icebp
cmp
or
arpl
outsl
stc
fidivs
sbb
xchg
ret
adc
mov
sti
int3
in
stos
lods
iret
sub
push
jge
jne
cmp
dec
mov
test
or
loope
jp
adc
enter
push
lcall
out
bound
out
popfw
jl
push
iret
fldcw
push
sti
sbb
xor
into
repnz
sbb
rclb
scas
ss
aad
into
jmp
mov
out
aas
aam
mov
cltd
pop
cmpsb
push
aad
outsl
frstor
sub
mov
pop
push
xor
push
stos
jp
jp
dec
in
lods
mov
and
or
movsb
jns
orb
pop
mov
jb
or
mov
int3
loopne
and
sub
enter
pushl
sbb
push
mov
jl
les
shr
setns
cmp
add
cld
dec
fs
add
sub
andl
sub
stos
les
je
std
stos
jmp
dec
scas
push
fst
push
push
jnp
gs
fidivrl
sub
push
jne
addr16
repnz
fcomps
and
xchg
shlb
inc
pop
dec
inc
movsl
cmp
imul
xchg
cmc
push
xchg
push
dec
add
pop
cmc
mov
push
cmp
inc
add
push
popf
push
mov
mov
icebp
push
les
dec
ja
push
ret
clc
lods
sahf
pop
adcb
pop
inc
ror
mov
std
shlb
mov
jg
aad
mov
cltd
clc
push
int3
aaa
fdivl
clts
test
add
out
outsb
dec
pop
loope
or
inc
rorb
loopne
cmp
dec
lds
fwait
inc
iret
dec
push
pop
int3
and
scas
into
add
mov
mulps
lods
inc
ds
ret
dec
les
jp
dec
fdivl
sub
aaa
js
pmaxub
jb
movsl
jno,pn
xor
je
push
push
push
or
mov
add
pusha
or
lea
roll
daa
imul
mov
inc
inc
push
mov
adc
lcall
sub
xor
repz
xchg
ficomps
leave
sub
popf
imul
icebp
pop
pushf
iret
lahf
adc
lock
or
mov
clc
pop
fistpll
push
notl
in
out
mov
fistpll
lret
aad
jae
sub
sti
sbb
outsb
add
rcll
iret
push
andb
sbb
outsb
addb
ja
sarl
ljmp
jmp
add
into
lret
mov
aas
jne
movq
xchg
fwait
jle
addr16
pop
in
int
sarl
mov
push
cld
into
loope
shrb
mul
sbb
add
dec
lcall
dec
jmp
ljmp
shlb
mov
arpl
jl
xchg
mov
and
mov
fwait
test
repnz
movsl
stos
data16
es
mov
call
insl
ja
mov
cmp
clc
add
mov
subb
dec
pop
inc
mov
dec
push
loope
aas
popa
dec
cld
in
aaa
xchg
adc
shll
mov
xchg
fsubrs
fdivs
xchg
daa
dec
jne
jns
clc
arpl
xor
mov
mov
mull
dec
adc
pop
jp
cmp
ret
jb
aam
sbb
not
push
lock
add
mov
movsb
enter
aaa
fs
fwait
mov
mov
cmpsl
inc
hlt
insb
mov
fdivr
jp
xchg
cld
mov
cmp
and
xchg
sbbb
roll
push
daa
in
mov
jmp
or
mov
ror
das
mov
jecxz
mov
ret
add
std
jnp
enter
imul
sbb
mov
jmp
push
adc
dec
pop
add
insl
and
sbb
jp
xor
insl
and
ficoms
movsl
cmc
push
sbb
inc
jle
pop
xchg
pop
outsl
seto
pop
xchg
xchg
push
add
push
popa
pop
out
or
adc
bound
jecxz
fs
cs
xorl
mov
stc
mov
inc
repnz
xchg
rcr
mov
fwait
data16
or
mov
shrl
push
mov
out
add
jo
add
xchg
cmpb
dec
lret
or
pop
jnp
out
jne
aas
loop
xchg
sub
pop
stos
mov
push
or
add
jge
mov
sub
sub
dec
and
mov
in
dec
ret
mov
bnd
insl
test
sub
fiaddl
enter
nop
jp
fistl
add
repz
jne
add
mov
mov
lahf
js
ja
jl
xchg
arpl
xchg
adc
xchg
mov
sarl
jl
mov
add
lret
ljmp
sbb
mov
loope
jnp
pop
sbb
sub
into
ds
xor
fadd
and
sbb
mov
cmp
jge
mov
shrb
daa
or
xchg
arpl
bound
inc
aad
stos
pop
ljmp
cs
push
out
and
xor
mov
bound
or
addr16
mov
stos
and
xor
movsb
ror
sbb
sbb
ss
mov
inc
add
cwtl
aad
adcl
insb
cmpsb
lock
xchg
aad
pop
sti
jmp
movsl
cmpsb
and
movsb
sub
mov
cld
icebp
call
lods
jmp
or
data16
aaa
xlat
jnp
jne
ss
mov
xchg
xchg
xchg
pop
je
iret
shll
into
push
imul
scas
cltd
mov
aas
sub
lods
mov
cmp
sub
bound
test
xchg
mov
cmpsl
cmp
jecxz
mov
sbb
cltd
les
flds
mov
adc
dec
or
push
je
xor
xchg
jbe
mov
sbb
dec
lods
ljmp
jl
xlat
out
xchg
sbb
stos
je
loope
in
in
test
pop
ja
movsl
test
push
mov
xchg
jbe
push
fdivr
inc
fsubrs
sub
cmp
enter
sahf
adc
out
push
daa
jns
test
sbb
or
cld
mov
aas
cwtl
jmp
imul
pop
icebp
lret
xor
mov
jb
cmp
adc
int3
popa
sub
rol
imul
sbb
lods
and
dec
sub
sti
cmc
and
test
push
mov
cli
lods
sub
decl
pop
push
sbb
cltd
pop
insl
rclb
mov
enter
push
cmp
jns
bound
lahf
rorb
pop
test
mov
push
and
mov
cmp
jl
imul
push
pop
xchg
add
add
aam
mov
pop
mov
inc
push
jmp
je
jno
jge
inc
test
loope
push
dec
push
and
out
sbb
movaps
xor
mov
jle
sub
dec
dec
jmp
dec
xchg
cltd
sbb
mov
push
inc
incb
jmp
stos
cmpsb
mov
popa
dec
bswap
push
sub
mov
test
das
aad
aaa
xor
adc
mov
cs
je
cmc
jl
pop
push
xor
mov
icebp
cltd
repnz
mov
jle
js
daa
pop
mov
push
fs
push
fsubl
ss
lock
xor
cli
push
sbb
imul
push
fwait
loop
arpl
jns
lock
jae
jecxz
js
test
loopne
xor
sub
mov
aam
push
push
mov
test
mov
inc
xchg
inc
pop
push
xchg
fwait
rolb
out
out
data16
adc
xor
outsl
xchg
or
cmpps
xchg
sub
lcall
cld
or
xchg
xchg
stos
das
in
dec
inc
push
out
add
repz
lds
cmp
push
xor
cltd
lahf
mov
add
push
fistpl
xchg
testb
gs
ficomps
push
adc
push
xchg
adc
sbb
in
int
mov
xor
in
popf
xor
jmp
cmp
inc
push
pop
cmp
pop
xor
lea
shll
ret
add
cmpsl
jecxz
xchg
lret
mov
adc
into
add
into
pop
mov
loopne
dec
cmc
xor
ret
int
inc
jns
imul
dec
repnz
call
and
pop
sbb
imul
push
mov
sbb
or
les
add
stos
mov
push
jns
scas
leave
ds
ljmp
sbb
sbb
mov
and
test
jp
push
lock
pusha
mov
fisttpll
sar
nop
call
jle
push
push
and
xlat
cs
mov
in
lret
hlt
mov
cmc
mov
jb
or
mov
sub
daa
addr16
xlat
stos
xchg
call
es
mov
push
pop
mov
xchg
add
add
push
pusha
or
sbb
or
loope
lret
mov
in
mov
repz
popl
mov
fcompl
test
push
aas
jb
std
dec
and
mov
daa
inc
imul
and
cmp
jae
mov
xor
sbb
std
inc
scas
jo
mov
cmpsl
xchg
outsb
or
cmc
jne
mov
push
and
mov
neg
das
pop
cmp
mov
sbb
in
dec
popl
jge
lea
mov
xlat
stc
rcl
sbb
cmp
ss
in
and
or
popf
xlat
cs
add
fadd
xor
out
call
adc
inc
pop
pop
lret
fchs
idivl
mov
pushf
sbb
mov
pop
mov
popa
inc
jg
cmp
xchg
test
cmp
js
fisubs
push
mov
add
mov
mov
xchg
lods
hlt
dec
mov
lea
mov
adc
aad
pop
xor
test
out
scas
mov
testl
sbb
dec
xor
sbb
test
jle
mov
jae
lods
lea
nop
lods
mov
adc
jge
push
mov
lock
jle
push
movsl
push
fwait
aad
sub
nop
insb
mov
mov
push
dec
aaa
movsl
jne
and
mov
cmp
push
or
loopne
shll
aam
mov
and
xchg
outsb
repnz
mov
xchg
aas
mov
test
xchg
push
rcrl
add
add
popf
mov
pop
popa
xchg
addl
xor
or
cmp
cmc
idivb
pop
fcomip
inc
divb
sahf
std
push
ljmp
mov
pop
push
push
test
cmp
mov
mov
cmp
into
push
inc
mov
pop
pusha
xor
out
test
inc
sbb
inc
pop
out
mov
mov
loope
js
fsin
pop
shr
add
insb
repz
loope
das
test
int3
into
xlat
pusha
hlt
add
call
or
mov
mov
mov
movsb
iret
mov
sarb
sub
pop
dec
out
lea
inc
sarl
insb
shlb
add
gs
enter
aaa
cmp
mov
mov
mov
stc
shl
push
mov
cmc
out
inc
and
cmp
sub
inc
mov
push
jns
xlat
sub
insb
push
mov
push
inc
ds
cmp
aad
std
lods
movsb
call
and
loopne
test
cmp
pop
pop
sbb
nop
dec
stc
xor
cmp
popa
andb
ljmp
arpl
cmc
sbb
add
insb
or
adc
mov
movsl
inc
cmp
push
inc
mov
push
and
ficomps
cmp
shrl
sub
mov
repnz
fldl
insb
in
mov
sbb
xchg
add
pop
add
adc
es
push
add
push
ret
scas
cli
je
add
mov
out
outsl
jo
insb
out
cmp
xor
jbe
xchg
stc
rcll
sbb
jnp
fwait
add
sub
aam
or
ss
cmp
add
sahf
inc
or
add
push
xor
nop
leave
lahf
in
jg
adc
andb
mov
lods
test
or
filds
add
add
loop
ror
adc
test
jo
fcmovbe
mov
pop
or
addr16
push
xchg
lret
ret
push
sub
mov
insb
movsb
std
insl
inc
js
movsb
sbb
popf
scas
mov
shr
pop
vsqrtps
xor
call
je
cmc
int
dec
mov
cltd
mov
leave
lock
dec
bound
mov
ret
cmp
sub
push
or
dec
ret
popf
aam
xchg
test
into
xor
in
xchg
mov
cmp
daa
sbb
or
inc
test
jbe
iret
mov
orb
scas
lock
mov
mov
cmpsl
sbb
shr
mov
jmp
xchg
adc
xchg
or
sbbl
mov
lea
int
cld
aad
push
sti
dec
in
adc
mov
out
stos
clc
adc
pop
adc
outsl
or
push
sub
push
add
push
push
icebp
push
ret
hlt
mov
or
push
add
in
jl
xor
stos
js
adc
inc
loope
jo
cmp
inc
enter
shl
pop
inc
shlb
or
fcmove
inc
or
mov
out
ret
pop
mov
mov
pop
pop
or
dec
popa
or
push
mov
je
sub
test
das
sub
and
fsts
xor
sub
enter
js
adcb
xchg
add
lods
je
mov
lahf
or
mov
pop
mov
inc
pusha
sub
pop
inc
ljmp
ds
sub
imul
insl
dec
fdivs
out
lcall
insl
sub
insb
addb
or
xchg
xchg
pop
popf
out
jne
addr16
inc
movsl
pop
sub
aaa
out
sbb
push
fisttps
or
lds
in
push
mov
enter
flds
in
sbb
sti
shll
in
add
outsb
and
sub
inc
mov
or
mov
mov
cmp
mov
adc
stos
and
jmp
mov
cli
aaa
int
int3
inc
cmpsl
sbb
andl
enter
push
test
mov
arpl
or
ss
enter
or
stc
dec
test
cmp
and
filds
push
push
js
xor
arpl
into
push
or
inc
pushf
mov
lahf
add
fisttps
les
movsb
outsb
out
int3
lds
shrb
lahf
or
xchg
sub
xor
call
mov
mov
fldcw
cmp
mov
jb
push
into
push
nop
push
imul
in
or
rol
adc
jmp
movsb
xchg
sbb
std
jno
or
fbld
mov
jnp
add
jmp
mov
fbstp
movsw
int3
call
ret
lcall
push
jns
mov
addl
mov
push
lods
fstl
mov
rolb
xchg
inc
dec
out
xchg
subb
cmova
cmp
out
mov
cmpsl
xlat
lods
mov
xchg
pop
push
adc
jae
cmpsb
push
sub
sub
repz
lahf
xchg
xor
inc
fucomp
mov
scas
das
dec
iret
jns
repz
jns
out
sti
add
xchg
shrl
inc
or
rolb
cmp
xchg
push
rol
int3
pop
mov
stos
push
outsb
es
imul
sub
ret
cmp
je
pop
loopne
jle
xchg
push
push
in
inc
clc
inc
lock
lret
jb
cmp
into
mov
cmpsl
mov
lahf
push
mov
mov
cmc
sbb
fneni(8087
sahf
nop
mov
push
or
scas
loop
mov
movsl
loopne
add
out
inc
fisttps
jl
jge
cmp
mov
cmp
sub
push
negb
xchg
sbb
cmp
mov
sub
cmpsb
push
fdivl
pop
sub
dec
rolb
push
mov
push
xor
int
adc
roll
sbb
add
ror
nopl
dec
ret
pop
loope
std
subb
jo
pop
les
jb
fwait
add
mov
negl
pop
addr16
fsubrl
lahf
jle
mov
and
xchg
rclb
stc
and
sti
ss
outsb
movsb
mov
cmpsl
aaa
bound
sbb
jne
outsl
pushf
stc
sub
sub
push
std
hlt
or
cmp
sub
ficoms
insb
stc
dec
nop
xchg
cmp
jae
mov
sub
xchg
fldcw
sar
or
sarl
mov
pop
aam
insb
bound
lret
push
fwait
sar
sbb
call
sub
jg
xchg
fcmovu
sub
pop
pop
loop
test
sub
xchg
pop
mov
outsl
push
int
hlt
mov
xchg
dec
xor
shrb
loope
sub
inc
popl
sub
inc
mov
leave
testb
push
mov
pop
mov
cld
adc
inc
xor
ljmp
xor
fcom
push
loopne
rcll
dec
aam
cmp
jg
xchg
repnz
or
or
sbbl
push
jb
daa
xor
js
add
and
mov
mov
xchg
aam
xchg
inc
daa
push
lea
adc
mov
jns
sbb
cmp
mov
jge
inc
ja
jmp
add
cmp
ret
sub
out
loope
jecxz
outsb
adc
loope
sub
repz
xor
jo
xor
in
stos
hlt
and
add
ret
adc
ret
adc
add
mov
sbb
rcrl
shll
xor
mov
cmp
push
mov
dec
push
and
push
test
mov
xchg
imul
push
mov
sub
and
or
mov
mov
mov
idivb
test
adc
or
mov
sub
scas
and
popa
mov
mov
add
nop
jp
xorb
filds
push
bound
mov
pop
imul
or
sti
hlt
fsubr
inc
std
jge
aad
sub
xchg
push
inc
cs
xchg
lret
or
cld
mov
test
cmpsl
mov
scas
pusha
xor
jae
or
in
push
das
bound
jle
in
clc
daa
ja
add
popf
aad
ljmp
pop
inc
in
out
or
gs
mov
repz
stc
dec
nop
adcl
mov
mov
cmp
js
mov
mov
loopne
jnp
ljmp
mov
fwait
mov
and
shl
ss
sbb
icebp
inc
stos
add
loop
adc
inc
lcall
mov
fnstenv
mov
ja
inc
mov
inc
mov
leave
fistpl
pushf
pop
add
or
pmaxsw
inc
rcrl
mov
and
in
jne
jb
mov
mov
mov
push
mov
fcom
inc
xor
jmp
mov
cwtl
sbb
arpl
int
xchg
or
mov
jecxz
scas
out
or
or
scas
fbstp
cmp
scas
sbb
lods
fwait
mov
popf
mov
ret
jg
iret
aas
push
je
outsb
pop
mov
mov
xchg
push
push
mov
stc
pop
sub
sbb
mov
inc
scas
sbb
imul
movsb
mov
aas
jl
or
pop
fptan
pop
fcompl
adc
xor
mov
jg
jle
mov
xchg
adc
sub
sar
fnstenv
insl
sarl
lea
fildl
paddsb
cs
lcall
mov
das
sbb
cmp
vphsubwd
scas
pop
out
push
push
shl
mov
aas
sub
sbb
jae
mov
inc
iret
dec
push
adc
jnp
adc
mov
pop
pop
in
dec
push
push
add
cmc
hlt
push
push
int3
mov
and
jge
jl
into
fistpl
roll
and
mov
push
nop
fdivl
adc
int
mov
mov
int
fdivs
pop
in
insl
lret
mov
and
pop
xchg
lock
sbbb
ss
mov
sbb
popa
lods
pop
das
fists
cmpsl
into
das
fistpl
jge
je
push
ss
mov
mov
iret
out
ss
sbb
repnz
mov
mov
or
fs
sub
dec
push
in
lds
jmp
jb
mov
pop
out
dec
faddl
ljmp
inc
insl
xchg
jmp
insb
mov
std
lods
jl
add
lods
call
cld
jne
ret
int3
sub
xchg
adc
cmp
dec
push
lock
scas
leave
xlat
xchg
aad
cmp
imul
mov
cli
gs
pop
mov
fidivs
xchg
jnp
das
jne
div
pop
cmp
outsb
xchg
jg
xchg
mov
testb
pop
pop
test
imull
out
mov
std
add
mov
icebp
cmp
pushl
and
out
cmp
and
sub
push
jmp
or
cmc
sub
mov
adc
aaa
cmc
mov
int3
push
adc
sub
in
sub
inc
jnp
or
sub
jge
add
mov
sub
jbe
xchg
add
mov
xor
or
ret
ret
xchg
pop
pop
mov
fistpll
cld
mov
mov
fdiv
and
mov
icebp
insl
cmp
bound
fsubl
sbb
add
add
loop
cmp
mov
scas
andl
xchg
lea
dec
nop
ror
mov
repz
mov
frstor
xchg
call
cmp
ret
add
add
out
gs
repnz
f2xm1
mov
fwait
les
fcompl
push
pusha
sub
loopne
sbb
dec
or
push
push
inc
and
push
inc
cs
jne
mov
dec
scas
cmp
mov
imul
idivb
lds
push
rorb
notb
lock
sbb
hlt
sub
or
int
cmp
in
mov
scas
mov
movsb
fs
inc
cmp
fisubrl
test
cmp
inc
mov
lret
jp
adc
sti
mov
dec
cmp
int3
inc
mov
out
jo
addl
repz
mov
scas
orb
mov
lahf
mov
rcrb
dec
pop
mov
negb
dec
in
nop
sub
and
setne
int3
icebp
cmp
xor
pop
lds
cmpsl
mov
add
repnz
insl
lahf
test
aaa
call
sbb
iret
adc
xor
add
and
cwtl
cmpsl
ret
xchg
ret
insl
pop
push
cmp
sbb
cwtl
jg
lahf
fldl
xor
mov
popa
pushf
lods
jge
mov
imul
std
jne
outsl
mov
cltd
rcrl
inc
xor
xchg
mulb
dec
push
lret
addr16
pop
mov
and
sub
jge
hlt
dec
mov
add
sub
loopne
xchg
ss
jb
imul
out
popf
cwtl
lods
iret
dec
jle
inc
cmp
les
cld
dec
arpl
cli
add
cwtl
jecxz
and
push
pop
shlb
adc
push
xor
mov
mov
jbe
sub
mov
pop
adc
push
das
mov
gs
or
xchg
outsb
dec
test
pop
jecxz
aaa
popf
pushw
sbb
dec
fcomps
xor
jmp
pop
xor
cmp
aam
enter
jnp
stc
je
call
xor
inc
cmp
jae
in
mov
out
popa
pop
popa
xchg
fld
out
cwtl
cld
ret
in
loop
cmc
rcll
imul
fs
jbe
pop
xchg
mov
inc
or
jecxz
mov
sub
inc
test
inc
jl
pop
add
popf
fistpll
sbb
mov
cmp
mov
cmp
bound
aaa
pop
dec
xor
sbb
sub
fiaddl
mov
mov
rcrl
mul
jmp
std
or
jmp
cmp
or
mov
jmp
mov
fdiv
sub
cli
pop
je
js
mov
push
stos
xchg
mov
push
sahf
mov
rclb
add
and
mov
add
jg
stc
call
sub
sbb
push
or
hlt
pop
mov
lret
lea
addb
adc
outsb
mov
loopne
adcl
rolb
pop
nop
mov
mov
hlt
jmp
pop
jnp
outsb
and
pop
dec
scas
mov
js
sbb
fcmovnu
popa
mov
dec
mov
dec
add
dec
ss
mov
lods
xchg
pop
enter
cmp
jbe
das
fucomp
aad
outsb
js
xor
pop
ja
or
mov
pushf
in
out
neg
dec
or
imul
or
dec
inc
dec
hlt
insl
mov
stos
adc
mov
cmp
aad
sub
out
aaa
je
sbb
pop
mov
pop
popf
push
cmc
adcb
std
mov
fucomp
mov
cmpsb
data16
push
inc
xor
jmp
into
sub
into
mov
lcall
sub
pop
mov
pop
ret
outsl
lods
sbb
sahf
mov
out
popa
dec
mov
cmp
mov
mov
lret
mov
subb
mov
sbb
outsb
inc
jecxz
imul
lds
test
fmuls
sub
inc
stos
into
cld
mov
mov
pop
es
fstpl
rcr
jge
test
fcmovnu
jno
lds
cmp
lock
lods
sbb
sub
movsl
add
leave
jno
and
pop
xchg
sbb
xchg
lods
sbb
mov
pusha
icebp
and
cwtl
xlat
mov
add
mov
arpl
movb
adc
push
jns
push
sbb
inc
xor
pop
jno
inc
daa
arpl
ja
and
inc
xor
jmp
repnz
push
mov
sub
repnz
test
pop
mov
push
into
call
add
daa
das
sub
adc
in
gs
stos
bound
and
sbb
arpl
scas
movsb
inc
sub
adc
inc
push
inc
cld
out
mov
in
xlat
jb
mov
jo
mov
fnsave
enter
aas
in
jle
mov
inc
mov
pop
int
xor
adc
dec
outsl
jns
xor
ret
xchg
insl
xchg
lods
aam
push
push
sub
sub
dec
mov
jnp
ljmp
dec
lds
mov
fiadds
loopne
mov
mov
mov
loope
fucomp
popl
outsl
inc
adc
cmp
mov
aad
std
mov
mov
int
jbe
scas
add
nop
clc
lock
dec
jecxz
mov
decl
pop
add
add
iret
or
lret
sbb
push
and
sbb
mov
decl
orb
xlat
outsb
inc
mov
inc
inc
mov
mov
std
jmp
andb
xchg
in
stc
or
sti
shl
mov
jmp
pop
ret
pop
jno
mov
jo
push
insl
mov
ss
xchg
push
in
ret
xchg
pop
lret
mov
bnd
jmp
insb
xor
xchg
pop
ja
js
scas
inc
sub
mov
inc
jecxz
test
fsub
add
push
mulb
ficoms
jecxz
fiadds
call
mov
pushf
adc
mov
lods
lods
fistpll
nop
pushf
and
repnz
loopne
test
stos
fdivrs
xchg
pop
dec
pusha
pop
jp
jge
push
xor
sbb
cmpsl
das
aaa
scas
imul
ret
mov
cmovo
into
ret
pop
mov
data16
out
inc
sub
lods
cmpsl
daa
daa
std
out
scas
and
xchg
stc
ds
out
pushf
sbb
in
dec
jns
mov
fisttpl
pop
mov
subl
inc
pop
je
aaa
filds
xlat
xchg
and
fs
jo
xor
mov
sbb
mov
mov
and
stc
out
push
xchg
loop
divl
icebp
lds
sub
jno
in
fcmovnbe
xor
repz
mov
and
xchg
and
ret
mov
nop
mov
or
mov
imull
adc
into
jae
enter
jecxz
inc
daa
mov
fwait
in
mov
pop
dec
outsb
clc
dec
jae
cmpsb
cmp
in
pop
mov
sub
sub
dec
mov
push
int3
push
std
pop
movsb
inc
xchg
cmp
adcl
mov
push
mov
and
jle
call
ret
jge
nop
jmp
dec
sub
movsb
adc
inc
inc
incl
in
les
dec
and
xchg
jnp
fldcw
in
push
add
outsl
rol
clc
cmp
sbb
push
dec
outsb
nop
mov
mov
adc
std
add
dec
out
pop
fwait
adc
jno
rolb
or
add
inc
scas
sub
dec
daa
mov
push
adc
jge
mov
sti
mov
mov
mov
add
repz
icebp
bound
jns
into
jl
adc
xchg
lock
insb
sbb
mov
lods
int
es
movsb
mov
leave
fsubs
cltd
fisubl
gs
stc
pop
shrb
divl
cmc
jge
lds
lahf
push
sub
mov
adc
bsf
cmp
add
jo
mov
push
mov
push
cmp
jae
jmp
and
inc
sbb
jnp
inc
iret
inc
xchg
add
jo
pop
jo
pop
adc
andb
xchg
idivl
cmp
js
add
pop
pop
movl
fisttps
cmp
faddp
in
stos
lods
bound
adc
inc
mov
nop
icebp
and
fimuls
imul
je
dec
out
imul
mov
repz
push
enter
sbb
push
or
mov
jae
fsubrl
call
mov
adc
push
sub
inc
mov
sbb
sbb
adc
pushl
lods
or
add
jo
dec
imulb
das
xor
pop
push
cmp
in
jl
inc
clc
ljmp
pop
mov
cmp
cmp
cmpsl
add
xchg
push
jbe
sbb
call
jnp
jnp
outsb
in
clc
sbb
xchg
mov
dec
into
add
fadds
sbb
xchg
xorb
jmp
mov
mov
add
push
adc
xlat
push
test
daa
insl
add
inc
cmp
scas
in
cmc
mov
std
cmc
ds
mov
in
rorl
fdivp
loopne
jnp
scas
dec
cmpl
ret
fistps
mov
pop
enter
sahf
repnz
movsl
cmp
in
inc
jle
inc
test
sub
test
leave
add
jno
dec
add
lock
inc
aad
push
cmc
push
stos
fimuls
aad
test
enter
outsb
dec
pop
push
sbb
shrl
add
jae
out
dec
test
punpcklwd
cli
cmpsl
sub
jnp
sbb
sbb
f2xm1
xchg
inc
in
rcl
ret
pop
cs
inc
lea
faddl
ret
cwtl
imul
imull
fsts
lods
cld
int
fbstp
xchg
mov
cld
lods
call
aad
add
mov
gs
imul
lret
sbb
mov
fdivrp
xorb
fbld
mov
or
rorb
adc
outsl
push
xor
aaa
fsubs
sub
pop
sub
cld
mov
push
dec
xor
mov
jnp
clc
fildl
mov
xchg
hlt
mov
aaa
fsubrs
xor
loop
lock
int3
jmp
pop
jne
mov
rep
iret
imul
enter
xor
xchg
repz
in
mov
jmp
mov
jl
mov
sub
mov
jno
into
or
int3
mov
jne
and
jmp
mov
mov
imul
xchg
mov
stos
adc
fcompl
outsl
dec
loopne
xchg
popa
mov
cmp
loopne
lods
push
mov
xchg
jg
mov
fistl
jmp
or
add
add
inc
rcrb
dec
rorb
sti
rcll
sbb
push
cmp
loop
enter
sbb
test
adc
and
sbb
cmp
pusha
shlb
imul
pop
push
ja
pop
jge
dec
negb
cmpsl
in
sub
hlt
inc
cmc
in
jbe
int
mov
and
jmp
or
cmp
and
testl
popa
mov
fisubl
adc
adc
aas
int
xor
cltd
pop
fmuls
fnstsw
xchg
int
out
ljmp
sbb
mov
sbb
add
in
sti
push
loopne
xchg
loop
push
mov
cld
inc
hlt
in
je
mov
aad
fwait
cmp
or
mov
movsb
jp
inc
insb
lock
jno
pop
mov
pop
pop
out
jg
clc
adc
out
pop
gs
mov
and
jnp
outsl
out
xchg
fmull
mov
leave
jge
and
ret
push
mov
add
inc
es
dec
pushf
mov
or
xchg
stos
pop
dec
mov
push
inc
sti
add
mov
sub
roll
nop
pop
jns
mov
adc
pop
test
ret
cmp
je
fidivs
data16
pop
dec
push
test
jle
scas
dec
pushf
in
in
push
cmc
dec
divl
jl
rol
cltd
sbb
jl
jo
call
pop
arpl
adc
lods
dec
xor
test
fwait
pop
cltd
daa
xor
fs
jbe
jno
sbb
aas
or
lret
movsb
inc
adc
data16
push
add
sbb
andl
mov
mov
fstps
lahf
xor
out
add
xchg
fucomp
and
fldl
fwait
aam
mov
sarl
std
push
sbbb
dec
nop
mov
ret
xchg
jb
pusha
mov
and
movb
or
jmp
jb
cmp
adcl
adc
gs
sarb
sub
test
aam
cmp
push
pop
xchg
mov
test
test
bound
mov
scas
rolb
jge
outsb
mov
or
mov
xor
xchg
jno
or
xchg
sbb
dec
cmpb
cwtl
dec
dec
lds
pushf
push
gs
add
insb
dec
mov
pop
nop
push
in
push
popf
cmpsl
mov
add
fildll
push
and
xchg
or
repz
xchg
mov
aaa
je
cmp
nop
pop
sbb
popl
xor
sub
sub
ret
int3
loope
xchg
xchg
or
jmp
js
jne
add
sub
ja
je
pop
ja
or
or
inc
pop
xchg
sar
popf
testb
ja
test
inc
mov
stos
in
test
aad
adc
adc
std
popa
add
lahf
mul
lret
stos
push
and
mov
mov
insb
call
mov
std
mov
mov
mov
cmp
leave
add
mov
dec
movsb
pop
or
aas
lods
mov
fdivp
imul
push
mov
push
xor
pushl
les
jbe
xor
cltd
fstpl
mov
in
aas
dec
dec
xchg
xchg
adc
jbe
dec
int3
inc
mov
adc
add
imul
inc
adc
je
iret
mov
adc
sbb
cmp
in
jo
nop
data16
jbe
dec
loop
or
sbb
outsb
xchg
inc
rcl
ds
fsubr
mov
push
hlt
push
dec
lock
push
jo
fwait
mov
mov
push
xchg
sbb
loop
adc
and
pop
inc
jno
xor
test
les
or
ss
outsb
jle
xor
jae
enter
jne
lock
mov
fists
inc
jl
mov
jnp
inc
mov
jmp
and
dec
movl
das
xor
cld
mov
mov
dec
pop
push
jae
xchg
xchg
mov
or
out
mov
pop
fldt
int
pusha
movsb
int3
push
call
xchg
rcrb
sub
call
and
fildl
jge
cs
push
test
in
iret
loopne
mov
insb
xor
aas
inc
pop
jge
mull
inc
mov
stos
cs
out
pop
add
out
jae
daa
mov
push
push
pop
push
xor
lock
jnp
loope
push
jb
fcomp
or
sub
mov
sti
mov
cli
fildl
cmp
pusha
lret
push
rorb
aam
cwtl
add
ret
popf
cs
es
sbbb
cs
inc
cld
nop
lret
mov
das
movsb
or
mov
out
bound
and
sub
adc
stos
clc
jmp
loop
or
push
aam
push
rcrb
test
mov
inc
adc
jp
int
loop
dec
lret
aas
sbb
mov
xchg
sub
imul
data16
pop
in
into
jbe
enter
leave
testb
ret
and
and
adcb
pop
or
movsb
lds
fsubrs
sarl
add
jo
pop
mov
push
bound
push
unpckhps
cmp
cmpsb
dec
dec
sarb
mov
dec
je
repz
mov
loopne
or
pop
push
sub
adc
leave
xor
add
mov
adc
fwait
or
je
mov
jge
push
ljmp
or
cmp
addl
dec
pop
jl
jne
mov
lock
movsl
sub
or
mov
cwtl
stc
in
mov
or
les
or
pop
cmc
dec
sar
aaa
and
ss
add
out
rolb
mov
or
fwait
mov
xchg
lret
icebp
sti
aad
sub
and
mov
in
sub
out
mov
push
inc
mov
test
ljmp
dec
mov
fldcw
lret
into
mov
adc
mov
mov
cmpsb
cmp
cwtl
bound
push
arpl
sbb
fwait
insb
mov
lods
pushf
mov
scas
mov
ret
adc
bnd
ds
dec
lock
mov
mov
pop
ljmp
or
mov
les
cli
xor
les
inc
or
xor
enter
shl
test
ss
lds
dec
jns
lahf
xchg
inc
jge
jl
scas
mov
xchg
mov
mov
sub
out
push
sub
andb
and
aad
test
mov
aam
and
add
pushf
mov
xor
fcmovu
sar
mov
xlat
xchg
clc
fnstcw
fldenv
test
std
jge
fildll
rorl
mov
mov
dec
rol
out
add
xchg
dec
enter
out
mov
adc
and
add
fcoml
aad
mov
test
xor
int
je
daa
incb
out
jg
pop
in
xchg
cwtl
cltd
cmp
jp
addr16
sub
mov
lret
cmp
mov
or
mov
jl
sbb
add
aas
mov
sub
iret
mov
ret
repnz
lea
xor
dec
outsb
sbb
faddl
sub
imul
cmc
ror
add
rol
shll
sbb
cmpsb
pop
addr16
mov
shrb
jbe
fisttpll
fldcw
popa
aas
cmp
add
loope
loope
sub
ss
push
or
and
ret
nop
xchg
sub
inc
sahf
outsb
sbb
sarb
test
mov
push
adc
fcoms
loope
jns
aaa
pushf
loop
aas
xcrypt-cfb
cmpsl
in
push
jle
lcall
cmc
insb
icebp
mov
insl
inc
clc
rcl
inc
mov
add
push
int
addr16
js
jmp
adc
daa
shll
in
hlt
adc
jmp
mov
jg
push
idivl
pop
arpl
aad
mov
lods
dec
movsb
mov
xchg
loopne
fstpt
outsl
add
cli
pop
inc
jp
incb
xchg
gs
inc
jmp
cmpsb
dec
adc
pop
mov
out
xchg
outsl
pop
push
jno
jb
fldenv
push
add
dec
mov
dec
inc
pop
dec
jae
dec
cmpsl
dec
push
or
in
cwtl
sub
inc
cmp
add
cmp
cld
into
outsb
mov
mov
and
nop
and
stc
cs
mov
sbb
movsl
in
push
outsl
stc
jge
adc
std
ds
lar
jecxz
add
dec
int3
pop
xchg
mov
cs
xchg
orl
adc
test
sbb
push
int
cmc
fistpll
xor
cld
and
mov
cmp
or
stc
js
imul
std
xchg
out
bound
lea
or
and
xchg
xor
rcl
insb
pop
push
arpl
xor
imul
inc
inc
mov
add
xchg
es
nop
mov
mov
lahf
pushf
shrl
ret
arpl
jge
test
xlat
xchg
lret
fldl
jmp
push
and
mov
cmp
add
mov
mov
xor
lds
cld
pushf
add
shrb
rolb
pop
and
jbe
dec
adc
mov
idivl
sub
sbb
fwait
leave
push
ret
call
call
cld
das
loop
push
sub
test
std
test
adc
push
xchg
insb
aam
pop
in
cmpsl
js
add
mov
xchg
loopne
xchg
movsb
shrl
fisttps
sbb
clc
pushf
jecxz
lahf
icebp
pop
arpl
xchg
pop
pop
lods
and
sub
mov
sbb
ljmp
push
out
sahf
ds
jnp
aam
mov
sbb
add
inc
or
sub
aam
call
cli
cld
jl
aad
in
inc
pop
ljmp
mov
imul
mov
cmpsl
jae
cmp
out
js
repz
mov
pushl
and
and
push
repnz
dec
xchg
adc
sub
xchg
mov
sarl
jge
cld
xchg
iret
ss
nop
add
add
jecxz
push
push
or
lcall
jl
sbbl
jno
mov
xlat
jb
ss
mov
insl
push
call
shlb
dec
addr16
sbb
xadd
sub
mov
imul
cli
mov
call
ficompl
movsb
mov
aaa
pushf
pop
fiadds
push
push
fisubrs
bound
mov
and
sbb
sahf
iret
nop
cmp
fwait
insl
mov
fnstsw
adc
xlat
and
lock
mov
sub
nop
add
xor
push
incl
in
push
jle
dec
inc
addr16
out
lds
inc
outsl
pop
mov
push
jle
movb
xor
sub
ret
lods
pop
cmp
mov
pushf
and
lcall
xchg
aaa
jp
inc
loopne
out
repz
xchg
mov
arpl
insb
inc
xor
inc
pop
into
nop
dec
sbb
fildll
sub
push
mov
dec
pop
in
daa
inc
push
push
ljmp
ss
fistpll
or
push
cmp
in
xchg
icebp
fisubl
inc
or
popf
scas
int
push
sbb
fnstcw
mov
xor
sbb
ret
cmp
scas
data16
je
mov
pusha
jne
cmp
addr16
insb
inc
dec
sarl
xchg
subb
mov
test
or
pop
dec
pop
pushf
mov
out
pop
fs
out
push
ja
lea
pop
int3
fwait
repz
insb
jns
push
loop
ficoms
in
icebp
mov
imul
mov
jb
aaa
gs
fimuls
repz
stc
mov
fisubrs
in
fwait
add
incb
add
imul
enter
mov
insb
sbb
mov
loopne
fldenv
jp
jns
mov
cld
nop
adc
cmp
inc
xchg
jo
cmp
inc
sub
cmpsl
jnp
sub
daa
sub
test
push
mov
jp
sub
jo
push
jge
hlt
push
inc
data16
jp
dec
mov
repnz
popf
lcall
sub
add
sub
dec
inc
jnp
aas
adc
lods
mov
inc
add
pop
aam
push
jnp
hlt
test
or
push
call
mov
data16
cmp
or
add
xor
push
pop
subl
jbe
ds
or
jle
add
mov
add
into
add
dec
cmp
loope
jp
pop
repnz
and
sub
imul
pop
lret
push
dec
rcr
pusha
dec
jge
out
inc
pop
sbb
sub
mov
sbbb
lods
pop
pop
decb
dec
mov
mov
cld
js
popa
xor
xchg
in
sub
fwait
adc
movsl
imul
sub
lret
dec
in
or
out
add
adc
ljmp
sub
xor
lret
jae
mov
lea
in
and
ret
jbe
pop
jno
nop
movsb
pusha
cmpsb
mov
jmp
lock
jbe
xchg
incl
lock
decl
jne
pop
jecxz
sbb
inc
add
outsl
jecxz
fucomp
mov
pop
sbb
call
dec
mov
pop
sub
pop
ret
pop
cmp
ret
notl
ja
or
jne
aaa
adc
cld
test
aaa
pop
mov
iret
sub
lahf
add
sbb
mov
scas
sub
movl
push
lods
push
in
loope
in
add
jl
not
push
fisubrl
mov
fldt
aas
mov
or
sti
add
pop
pop
hlt
or
loope
sub
sti
add
dec
sarb
out
and
sbb
hlt
push
cwtl
cmpb
sbbl
rolb
cmp
stos
aam
repnz
and
xchg
jp
insl
fisubrl
test
dec
adc
gs
xchg
stos
fs
mov
push
cmp
pushf
pop
pop
add
add
call
pop
and
pop
xorb
push
push
cmp
push
xor
mov
test
pop
iret
es
scas
add
sahf
add
mov
sub
popf
adc
shll
test
pop
imull
adc
pop
hlt
rorb
clc
mov
sbb
pop
adc
aas
mov
mov
and
cmp
dec
adc
imul
jl
call
or
filds
or
pop
roll
loop
adc
push
dec
fcmove
test
or
test
lret
or
jne
lock
stos
arpl
dec
add
cmp
into
hlt
sar
ja
jle
fcompl
jb
and
mov
insb
and
push
dec
or
dec
sub
inc
adc
adc
leave
fdivl
mov
jl
and
in
fcoml
in
scas
dec
insl
mov
jl
outsb
or
add
jp
fildll
imul
into
pop
and
and
or
lahf
sbb
sbbl
inc
movsl
ljmp
xor
int
or
sbb
dec
mulb
dec
and
add
orb
out
vdivss
xor
pop
iret
mov
shlb
out
and
xchg
adc
cli
cmp
or
mov
hlt
out
lahf
pop
pop
in
test
and
pop
fwait
xor
adc
scas
push
fmuls
addr16
mov
xlat
inc
or
incb
test
jg
cltd
movsb
mov
shll
out
adc
mov
rorb
fimull
add
loope
ljmp
mov
and
xchg
jl
sti
xchg
mov
dec
push
stc
outsb
call
leave
lods
cmpw
jb
mov
push
call
in
add
ds
aaa
pop
mov
pushf
in
push
aam
or
adc
movb
iret
jecxz
xchg
ds
or
or
loop
and
ljmp
xor
and
sbb
pop
cmc
ljmp
dec
push
hlt
shll
insb
jecxz
insb
push
popa
sub
dec
or
cmp
pop
or
mov
and
outsl
dec
out
dec
and
mov
ret
jmp
add
loopne
adc
sti
jb
enter
jnp
in
dec
sbb
ror
xor
adc
and
dec
pop
mov
mov
push
xor
lret
inc
leave
mov
adc
shrl
push
cmpb
xchg
jns
lea
cmp
sub
pop
adc
sbb
xor
add
popa
test
out
fimuls
inc
jne
ljmp
ret
stos
imul
jae
xchg
push
xchg
call
cltd
jge
orl
sbb
fs
xchg
sahf
and
push
dec
push
jecxz
popa
rcll
stos
mov
sbb
sub
ror
faddp
or
jns
pop
jb
mov
add
lret
mov
pusha
cmp
rcrl
mov
fs
mov
xlat
sbb
loope
fildll
mov
out
inc
cmpsl
adc
popa
dec
cmp
filds
insl
inc
add
fsubr
cmp
mov
aas
mov
cli
lret
imul
sbb
push
cmp
ret
adc
call
imul
aam
mov
adc
push
hlt
push
nop
pop
lods
adc
ss
jb
inc
rorl
cmp
pop
xor
adc
sub
popl
int3
rcr
cld
lods
out
pop
mov
arpl
mov
cld
or
outsl
pop
mov
xchg
nop
mov
gs
stos
rcll
lret
sti
dec
cmp
pop
popa
mov
push
out
or
inc
jge
adc
ret
jecxz
hlt
repnz
dec
rorl
loope
inc
or
xchg
shlb
test
adcb
ret
js
cmp
imul
inc
stos
xchg
xor
das
xor
in
cld
adc
dec
sbb
cwtl
mov
xchg
hlt
test
ror
xchg
cmp
sub
out
xor
jno
jecxz
mov
or
mov
mov
pop
scas
lock
pop
bound
or
adc
mov
in
les
fs
mov
mulb
ds
mov
jb
mov
cltd
test
sbb
stos
adc
cmc
add
fsubs
gs
imul
mov
push
imull
add
loope
ficoml
fwait
jno
cmp
stc
dec
shll
pop
xorb
enter
jp
gs
movsb
ret
xor
stos
psraw
sub
jge
jg
sbb
in
pop
fs
cld
outsl
jecxz
test
in
or
xchg
adc
xchg
or
and
or
cmp
aas
js
push
stos
arpl
add
jne
mov
sti
in
or
mov
pop
mov
lret
xor
test
ret
adc
pop
ss
jbe
dec
inc
fidivs
mov
cmp
or
flds
pop
shl
mov
mov
mov
dec
inc
jg
jbe
inc
pop
cmp
add
xchg
fcmovnb
inc
daa
pop
iret
or
sub
or
lret
push
mov
scas
movsb
push
cmp
dec
jae
mov
pop
stos
iret
or
pop
inc
mov
int3
sbb
push
jle
inc
stos
push
pop
ret
sub
xchg
inc
icebp
jmp
xchg
mov
loope
lods
ja
mov
aaa
mov
sub
lahf
rclb
xchg
push
cmpsl
mov
cwtl
test
cmc
jmp
pop
mov
sahf
lock
stc
sub
std
xchg
dec
xlat
xor
in
xor
pop
lock
add
mov
inc
add
push
cmp
fldt
test
shrl
jne
fstps
fwait
push
dec
insb
sahf
mov
divl
adc
mov
stos
jno
iret
hlt
inc
mov
aad
jns
adc
lock
jns
adc
mov
popa
loop
xor
mov
insb
mov
fstpt
test
les
imul
dec
cmp
jne
addr16
pop
mov
xchg
les
jle
in
dec
lahf
xchg
loope
popf
cmp
jg
mov
mov
jmp
call
imul
fld
les
lods
outsl
add
mov
das
popf
jecxz
mull
dec
ljmp
inc
xchg
aad
pop
aam
push
sbb
stos
add
rcrb
adc
fxch
mov
adcb
jge
mov
sarb
aas
push
jge
iret
sub
push
mov
hlt
jbe
cmp
or
xchg
mov
icebp
pop
sub
jg
lahf
sbb
adc
jno
imul
call
clc
icebp
shl
decl
inc
cld
dec
clc
push
in
adc
lret
in
dec
fcompl
into
sbb
sti
jmp
xchg
mov
pusha
jbe
jg
clc
out
fcomps
inc
fiaddl
dec
sbb
jg
and
mov
pop
sahf
rorl
push
clc
arpl
fstpl
xchg
cmc
pushl
push
mov
or
movsl
mov
out
xlat
in
repz
dec
jp
and
mov
jg
icebp
jle
es
add
push
or
or
mov
cmp
ret
pop
xchg
cli
xchg
dec
rcrb
scas
rorb
push
add
xchg
mov
movsl
add
int
lock
lret
mov
roll
stos
aas
sbb
add
cmp
cmpsb
out
add
sub
adc
push
cmp
and
icebp
decb
mov
ds
lret
mov
push
shrl
ret
frstor
ljmp
in
clc
sahf
xchg
jg
das
cmc
pop
pop
and
testb
mov
les
and
lret
call
jbe
xchg
std
xchg
push
add
pop
and
jae
fwait
xchg
or
test
lret
sarl
dec
outsb
push
outsl
mov
xor
dec
jnp
test
dec
ds
ds
rclb
rol
int3
dec
inc
pop
lds
adc
imulb
test
test
addr16
fdivr
out
xchg
pop
stc
addr16
mov
clc
out
push
daa
into
insb
ret
daa
cmp
xchg
stc
add
in
jl
lcall
fiadds
cmp
jb
fsubr
clc
sub
fwait
test
out
mov
rolb
aam
leave
adc
xor
sbb
mov
gs
or
mov
insb
leave
adc
or
sub
mov
mov
les
mov
pop
mov
rorb
xchg
subl
scas
sbb
push
sub
xor
int
cmc
push
aas
mov
xlat
inc
cmpsl
push
mov
push
mov
test
push
ljmp
jns
sub
fwait
test
mov
sub
jl
fdivrl
xorb
out
mov
shll
insb
dec
dec
fists
gs
rcrb
xor
pop
fisttps
js
mov
cltd
dec
cmpsl
push
lods
out
mov
push
xor
dec
lcall
lret
inc
jl
push
adc
push
aad
loop
jecxz
in
xchg
inc
dec
in
not
cmp
out
inc
mov
dec
cmp
dec
popa
fidivs
xorl
sub
lahf
idivl
add
xor
divb
aaa
jl
call
hlt
and
cmp
xchg
orl
mov
dec
sub
xchg
clc
ret
dec
insb
or
push
mov
sti
xor
pop
mov
les
je
add
mov
adc
sub
pop
lea
test
xor
pop
mov
add
aam
sub
fcompl
imul
js
xchg
cmp
repz
adc
test
rorl
push
pop
mov
loope
push
pop
mov
push
rolb
mov
mov
into
cmc
pop
pusha
out
jge
ljmp
dec
sub
sub
fcmovnu
hlt
mov
push
aad
push
stc
sub
xor
inc
mov
bound
jmp
add
adc
push
jge
mov
ret
mov
leave
jnp
xorb
cmp
cmc
addr16
insl
jg
leave
xchg
sub
and
filds
dec
jae
mov
imul
hlt
cld
fs
and
decl
sbb
pop
dec
into
dec
xorl
rorb
mov
sub
add
and
insl
mov
inc
mov
hlt
shl
jne
test
icebp
test
cs
add
sti
adc
sti
sub
and
jnp
jb
or
push
pop
sbb
scas
xor
sbb
mov
mov
xchg
int3
insb
dec
ss
mov
inc
mov
jecxz
sub
push
sbb
xor
sbb
sub
loopne
sub
xlat
fistl
mov
pop
jg
mov
add
mov
dec
test
loope
sbb
add
ret
in
mov
pop
xchg
pop
js
mov
pop
mov
lret
inc
in
test
rcrl
mov
pop
rclb
dec
insl
xor
xor
ja
pop
jno
jg
push
ja
test
scas
adc
jge
rol
int3
push
jne
out
jns
sbb
mov
inc
sbb
insb
push
repz
add
ret
xor
dec
repz
cmp
push
out
pop
andl
add
mov
xor
shr
fdivs
add
aam
enter
push
and
mov
xor
test
cltd
sbb
adc
push
sahf
cmpsb
iret
mov
mov
scas
push
cmc
dec
xchg
rclb
fadd
dec
xor
arpl
and
xchg
xor
clc
xchg
dec
xlat
fs
or
aas
arpl
adc
ret
lret
add
jb
mov
push
aaa
sbb
jno
sub
decb
scas
out
repz
cli
mov
out
rorl
adc
sub
adc
inc
bnd
mov
cmp
xor
ret
dec
mov
and
xor
pop
notb
fidivrl
cwtl
pop
pop
loop
dec
dec
push
jle
sbb
lahf
jne
add
or
push
cmc
pushf
mov
addr16
dec
jmp
cmp
fdivl
cmp
out
inc
jmp
divl
pop
lahf
cmc
mov
pop
nop
test
cmp
mov
add
gs
ja
inc
mov
fisubs
adc
jne
sbb
cli
push
push
cmp
cld
movb
add
mov
lock
aam
push
xchg
mov
gs
in
sub
cli
int
inc
ficompl
aam
pop
outsl
std
aas
fdivr
mov
sar
cli
iret
in
mov
lcall
mov
jmp
mov
cmp
cmc
cld
adc
and
mov
mov
cli
pop
pop
sbb
xor
ja
xchg
pop
ret
arpl
fbld
cmpsb
stos
outsb
cld
jb
or
daa
add
in
jecxz
add
das
icebp
rep
and
add
pop
mov
jno
cltd
bound
test
lods
mov
clc
sub
loopne
add
mov
cwtl
loope
cld
into
ficoms
insl
mov
mov
push
cld
push
jae
lahf
test
adc
push
mov
mov
or
push
imul
jae
mov
movsl
mov
test
pushf
push
mov
arpl
xchg
stos
mov
outsl
lret
jae
adc
push
or
or
mov
push
hlt
cld
add
mov
dec
adc
adc
mov
mov
lret
test
jne
repz
pop
fwait
aas
add
cmp
sahf
inc
psrld
jp
sahf
lds
push
dec
mov
jbe
jecxz
inc
or
popf
sbb
pop
sbb
call
mov
mov
dec
sbb
call
jno
or
mov
dec
lock
mov
lret
sbb
push
les
pop
sub
or
dec
popl
inc
jbe
push
ret
pop
outsb
inc
dec
icebp
fs
fwait
jno
cmpsl
in
out
push
mov
xchg
dec
dec
cmpsb
jecxz
ficoms
sbb
call
rorb
inc
rorb
shl
and
mov
jno
lods
shll
and
test
test
mov
fisttps
xchg
mov
and
cmp
xchg
mov
and
clc
jp
fbld
outsb
mov
dec
lcall
jae
gs
push
fs
mov
icebp
push
jl
xor
or
fisubrs
push
mov
mov
sbb
iret
out
cwtl
dec
mov
sub
rolb
sbb
cmp
add
test
out
sub
shl
mov
pop
daa
daa
fsubs
call
mov
dec
jnp
lods
lock
mov
cmp
sahf
add
cmp
lgs
or
mov
jmp
rcrl
mov
repnz
aam
sar
shlb
js
pop
add
xchg
out
movsl
cmp
insb
sbb
dec
cmp
mov
sbb
cli
xchg
dec
jp
aam
stc
cmpsl
xor
push
lea
inc
iret
ret
mov
mov
push
fistpl
mov
jno
or
enter
push
xor
insl
shlb
push
mov
aad
pop
call
jg
push
fstpt
cli
xor
push
movsb
arpl
cli
mov
addr16
sub
sub
bound
pop
push
clc
aaa
add
data16
adc
add
cmp
icebp
incb
pop
mov
xchg
dec
sub
xor
ljmp
dec
pusha
inc
ss
mov
xchg
push
std
and
mov
repnz
jb
es
inc
adc
popf
stos
dec
jo
cmp
lahf
dec
icebp
push
aas
cli
jno
mov
pop
mov
cli
lcall
fisttps
lock
popf
lock
loope
fadds
mov
jnp
mull
fdivp
dec
js
xor
std
movsl
or
std
sub
cmp
sbb
in
xchg
mov
mov
mov
mov
sbb
cs
jmp
inc
mov
sti
insb
xor
roll
ljmp
jne
scas
mov
push
push
mov
call
pop
nop
mov
sbb
into
cmp
test
popf
addl
and
xchg
mov
dec
xchg
dec
mov
fldcw
ret
stos
mov
insb
nop
lea
dec
fldl
inc
pop
and
xchg
jns
cmp
add
insb
cmp
mov
dec
push
or
push
sbb
gs
ss
dec
adc
in
cmp
or
jb
nop
ds
mov
out
cltd
loope
and
vpcmpeqw
in
fs
mov
mov
pop
jbe
mov
xchg
inc
push
sub
scas
in
inc
push
cwtl
mov
push
les
mov
jnp
movsb
repz
jl
jge
sub
push
incb
xor
jp
rclb
push
je
cli
adc
push
and
ret
pop
mov
mov
lret
popf
cmp
pop
lcall
test
int
jecxz
pop
sub
inc
ret
shll
adc
std
mov
xlat
push
push
mov
outsb
mov
pop
insl
push
sub
cli
jecxz
data16
pop
insl
xor
mov
pop
outsl
out
scas
mov
scas
ja
mov
mov
mov
push
cld
and
divb
sbb
in
std
call
repz
xor
ja
mov
jno
int
cmp
mov
cli
push
and
jge
arpl
pop
insb
in
push
in
xchg
insl
fmuls
pop
mov
inc
cmp
adc
push
dec
fistpl
adc
cmpsl
or
xor
push
leave
scas
cmp
paddsb
fidivrl
jns
inc
sbb
mov
or
jge
mov
mov
dec
xor
jno
sbb
popa
lods
js
pop
adcb
ljmp
movsb
add
jo
hlt
hlt
fidivrs
popa
push
mov
mov
cmp
inc
jno
rol
ror
mov
push
lds
ljmp
in
lea
jmp
pop
mulb
hlt
enter
sbb
mov
in
arpl
es
lock
mov
cmpsl
call
fwait
or
sbb
mov
cmp
adc
cmp
or
cmpsl
add
sti
nop
push
movntps
pop
ljmp
hlt
xchg
cld
cmpl
mov
jp
test
enter
xor
cmp
pop
adc
push
adc
in
sub
push
lret
lds
inc
mov
push
pop
idivb
divb
cmc
repnz
xor
fiadds
fistpll
je
mov
fistpl
mov
push
loope
cmp
pop
push
sub
jg
enter
movsl
ss
push
mov
push
add
stc
cmp
in
push
js
push
js
leave
ds
inc
out
mov
pop
aaa
cld
jge
sahf
orl
xorb
shlb
jecxz
and
mov
ret
push
mov
mov
mov
mov
fsubs
mov
scas
sub
cmc
jo
xchg
jecxz,pn
mov
lcall
js
cltd
je
xchg
cmp
shll
test
xchg
lahf
test
dec
lea
cld
stc
and
inc
or
out
les
sub
dec
int3
jns
fs
pusha
mov
push
xchg
stc
movsb
cmpl
sbb
cli
ss
cwtl
loope
xor
imull
cld
popf
or
ret
pop
dec
sbb
mov
xor
or
and
and
mov
orb
into
cmp
jge
xchg
fstpl
mull
sbb
fdivrl
aad
mov
mov
pop
out
iret
popf
repz
adc
xchg
add
in
cmp
push
ss
movsl
mov
jge
lods
faddl
rorb
movsl
or
xchg
jp
mov
mov
sub
pop
jge
mov
jmp
and
in
insl
sbb
dec
cmp
mov
and
aad
push
sub
sbb
shlb
push
aad
gs
lea
sbb
lock
pop
das
mov
neg
mov
std
test
cmc
ficoml
ret
aas
add
int3
dec
inc
add
nop
xlat
push
xor
fwait
adc
push
and
pop
ja
dec
mov
and
add
add
or
jb
cmpsl
add
fimull
or
hlt
mov
movsb
scas
fwait
sub
jle
shrl
les
add
cld
mov
cld
sarb
add
iret
push
stc
fdivrs
push
dec
sbb
insl
shrb
mov
cli
xchg
sub
cmp
cmpsb
shr
jno
sahf
dec
std
adc
mov
js
add
mov
mov
sbb
or
jp
cmc
mov
add
add
ljmp
outsb
and
xlat
cmp
mov
jne
sub
out
insb
fucom
test
gs
iret
pop
sbb
sti
int3
lret
push
not
cmp
ret
jl
dec
pusha
shlb
xchg
outsl
mov
mov
out
mov
push
pop
xor
loopne
ret
aaa
add
mov
pop
rol
scas
dec
repnz
cmpsb
cmp
mov
push
jne
aam
cmp
push
xchg
cmp
inc
imul
jo
popa
fdivs
les
in
adc
jle
jge
inc
pop
add
push
cmp
xor
fldt
mov
cs
and
mov
jbe
mov
mov
into
fsts
addr16
mov
addr16
cmp
jmp
inc
testl
mov
adc
pop
bswap
add
xchg
mov
sbb
cltd
pusha
roll
adc
xor
and
in
cwtl
nop
fldt
cmp
loope
inc
push
xor
mov
ljmp
sbb
scas
lea
hlt
fwait
dec
mov
out
nop
add
xor
mov
or
push
sbb
sbb
in
adc
mov
iret
bound
ret
fisubrl
add
aam
sub
sbbb
aaa
push
repz
es
arpl
arpl
xorl
out
cli
dec
jle
shrb
adc
mov
mov
mov
mov
arpl
jp
pop
fwait
mov
stc
iret
push
sbb
adc
out
fcoms
sti
lods
xchg
aas
push
hlt
jp
mov
stos
mov
out
pop
popf
mov
push
xchg
jl
call
imul
mov
cld
lock
xchg
mov
cmp
dec
mov
imul
mov
or
add
sbbl
push
daa
cli
push
push
loopne
shrl
int
xor
fwait
push
out
in
lret
mov
xchg
arpl
mov
sbb
lods
call
dec
dec
aam
imull
clc
push
stos
inc
jp
jno
mov
jnp
repnz
fstpl
lcall
mov
in
ret
mov
or
popa
inc
mov
xchg
mov
sbb
add
pusha
sbb
cmc
idiv
ljmp
stc
and
xor
and
ljmp
cmp
sbb
mov
mov
pop
jae
xchg
cs
mov
sub
pop
testb
inc
sbb
into
add
or
mov
ja
addr16
adc
jbe
aam
mov
mov
sti
cmp
sub
or
pop
loop
xchg
and
popl
mov
ret
push
sbb
or
stc
xor
sub
sub
or
in
push
jg
pushw
mov
and
xchg
and
push
add
test
xchg
scas
sbb
ss
loope
stc
shlb
lea
inc
jns
inc
insb
push
lock
xchg
mov
mov
test
cltd
pop
lea
and
popf
push
lea
aaa
bound
sub
adc
popf
sub
push
jmp
mov
mov
nop
test
dec
and
add
inc
lret
cli
mov
loopne
testb
sahf
call
xchg
das
push
ret
adc
shrl
aam
jo
adc
and
or
adc
or
cltd
push
xchg
lock
stc
test
sub
std
or
arpl
in
pop
cmpsb
xlat
loope
in
cmc
mov
dec
sbb
daa
xchg
mov
xchg
cmpsw
loop
sti
pusha
sbb
sar
jge
divb
dec
push
lcall
sti
repnz
add
stos
push
add
push
leave
adc
aas
sub
mov
scas
dec
lods
insl
leave
fcmove
cs
add
fnstcw
cmc
lcall
aam
pop
and
inc
pop
sbb
jo
add
call
add
or
out
mov
fwait
xor
mov
adc
jne
adc
sbb
loopne
jl
hlt
inc
scas
push
and
mov
inc
dec
or
and
fidivl
jne
cmp
lods
test
bound
dec
rolb
pusha
out
cmpsb
inc
sti
pop
sub
or
mov
mov
inc
xor
ficompl
push
out
push
push
shr
jns
adcl
imul
xor
aam
add
xchg
lret
xchg
mov
xchg
out
adc
xor
mov
sbb
jae
and
lea
mov
enter
mov
loopne
add
out
movl
ljmp
mov
pop
lret
inc
dec
mov
lods
int
movsb
fwait
push
dec
pop
lcall
xchg
stos
push
sub
mov
insl
stc
nop
rcrl
cltd
adc
dec
fnsave
sub
pop
out
dec
imul
inc
lcall
rcll
nop
mov
pusha
rorl
je
or
pop
clc
into
jbe
clc
ret
xor
lock
rcl
mov
adc
mov
dec
arpl
arpl
mov
pop
ret
pop
int3
xlat
data16
xchg
test
pusha
adc
je
std
dec
nop
or
lea
inc
mov
rcrb
inc
addr16
or
in
bound
xorb
sbb
adc
ret
add
cli
and
in
in
sti
fsubrl
fdivr
or
inc
inc
xchg
sti
xchg
addl
push
lahf
jns
add
test
mov
testb
fwait
lahf
out
push
sar
std
fsubr
adc
aas
dec
sti
or
sbb
cmp
outsl
scas
fsubrl
daa
mov
leave
aas
add
fs
scas
sbb
ret
mov
shl
fcmovbe
mov
sbb
jmp
popf
rcrb
addr16
sahf
mov
mov
pop
jb
sbb
in
ja
add
cwtl
int
or
xlat
pushl
pop
pop
add
mov
cmp
lret
je
mov
divb
xchg
into
mov
loopne
push
xchg
stos
stos
sbb
das
jo
sub
pusha
sahf
mov
fpatan
dec
xor
sahf
fndisi(8087
mov
cmp
jnp
xchg
mov
sahf
std
lods
jne
mov
aam
loop
dec
daa
sti
pop
pushf
add
and
jnp
mov
xchg
mov
cli
lds
ficoms
mov
dec
inc
popf
bound
cltd
icebp
sub
adcb
lret
fldenv
imul
xor
adc
rclb
lcall
cmc
push
push
test
push
ljmp
cwtl
pop
aaa
test
mov
std
xchg
outsl
gs
push
popa
aaa
das
mov
mov
pop
inc
cmp
xor
inc
cmp
addl
test
dec
xchg
dec
xchg
push
dec
stos
je
movl
mov
loope
inc
mov
and
xlat
rcll
jmp
sub
sub
mov
stos
pop
jns
imul
xchg
fs
call
imul
pop
aaa
add
push
sub
fwait
addb
rclb
enter
jge
fs
adc
xchg
push
jp
jg
adcl
sub
bound
les
movsl
les
pusha
ret
xor
out
cmp
stos
push
sahf
leave
int3
cwtl
test
push
mov
mov
shrl
in
inc
ja
inc
mov
xchg
inc
cltd
movl
lahf
outsb
lds
movsb
cld
or
aam
jle
sarb
cmpsl
or
in
cmp
push
outsb
mov
insl
xchg
call
lock
nop
test
fadd
push
negl
and
ror
xor
add
inc
cmc
add
push
jg
nop
inc
sbb
inc
mov
in
js
in
fsubr
test
in
es
std
cmc
into
or
ret
jno
pop
bound
and
jo
stos
add
outsb
fadds
int
filds
cmpb
or
sub
cwtl
mov
cwtl
mov
imul
cwtl
leave
jbe
add
lcall
xchg
xor
fs
lret
or
xor
loope
jo
or
push
in
lret
arpl
push
cmpsb
add
add
aaa
addl
les
or
loope
push
aam
pop
push
add
cmp
add
bnd
and
stos
les
jmp
loopne
push
mov
dec
pop
enter
push
or
mov
cmp
aas
shlb
leave
imul
sbb
adc
inc
cmp
inc
jb
stos
cmp
or
sbb
dec
mov
mov
jae
popf
imul
data16
lea
mov
out
into
in
pushf
pop
pop
xchg
mov
cmp
dec
sti
scas
cs
stos
sub
xor
xor
pop
mov
xor
mov
push
out
sar
fcomp
cmp
sbb
pop
mov
xor
loopne
pop
lret
or
shlb
sahf
sub
mov
inc
and
stos
data16
inc
or
sub
pushf
scas
sub
mov
adc
sub
sub
ret
ljmp
sub
dec
dec
xor
mov
mov
addb
xchg
mov
add
xchg
ret
into
fisubs
cmp
sub
adc
jno
fisubrl
scas
jbe
call
into
out
in
pop
cmc
popf
pop
ja
insb
xchg
sahf
add
mov
xor
adc
mov
popf
scas
iret
pushf
sbb
xor
add
ja
inc
frstor
or
cs
aas
adc
addl
icebp
fucomi
rclb
sbb
test
sbb
out
call
daa
cmpsb
mov
pop
inc
xchg
orps
sbb
dec
shll
xor
and
push
dec
xor
cwtl
shlb
shr
ret
popf
es
mov
or
mov
jnp
add
add
popf
sahf
loope
pop
ret
and
frstor
cs
movsl
push
scas
push
dec
rcr
pop
and
mov
inc
pop
push
jp
xor
data16
sti
fnsave
loopne
cli
mov
pop
mov
fsubr
push
fiadds
jp
xchg
sahf
adc
loopne
dec
and
mov
movsl
sbb
dec
jnp
jb
add
rolb
ja
out
sub
les
pushf
daa
nop
and
pop
test
jmp
lds
pop
xchg
es
je
les
or
cmp
flds
gs
push
lods
call
mov
jmp
jns
test
rep
add
mov
cmp
bound
aad
fwait
in
fs
sbbb
sbb
and
jl
clc
aad
js
mov
in
popa
imul
stc
jge
adc
stos
loope
mov
icebp
bound
fcomps
fwait
inc
adc
aam
or
dec
js
scas
fidivs
cmp
ss
data16
sahf
shr
cmp
nop
sbb
scas
popa
push
jl
sbb
out
lods
aas
and
pop
jle
loopne
adc
iret
mov
inc
cmp
into
clc
adc
imul
and
sahf
cwtl
xchg
push
mov
xchg
jp
inc
rolb
roll
mulb
movsb
lock
jo
mov
fnstenv
push
rcrb
aad
or
mov
mov
and
shll
mov
shlb
add
sub
push
subb
mov
and
mov
push
arpl
cs
cmp
push
xchg
int
insb
dec
add
xor
shll
xor
adc
stos
fsubs
mov
sbb
arpl
int3
sbbb
js
int3
cld
push
mov
inc
xchg
popl
and
jmp
jnp
or
outsl
xchg
imul
pop
and
push
scas
mov
push
into
fwait
xlat
shlb
int
dec
into
hlt
lcall
ret
and
pushf
fwait
lea
xor
insb
or
cmpsb
ss
pop
addr16
incb
stos
mov
cmpb
cmp
push
pop
ret
sbb
inc
into
push
ret
sbb
je
fistpl
xor
adc
repnz
in
mov
add
iret
rol
sub
pop
pusha
jb
daa
dec
ljmp
mov
or
adc
inc
push
mov
push
imul
test
sub
pop
pop
int3
test
mov
jo
mov
cmpsl
insb
and
add
mov
adc
in
or
mov
adc
arpl
sub
inc
jbe
fnstcw
fldt
jecxz
lods
sbb
mov
mov
mov
dec
sbb
mov
je
jb
hlt
sub
addr16
push
movsl
mov
fisubrs
mov
ljmp
loop
ret
adc
adc
jne
jmp
mov
or
pop
mov
and
inc
sbb
faddl
or
adcb
sbb
mov
and
stc
xchg
push
add
inc
fdivr
adcl
or
fs
sub
push
jne
out
mov
hlt
pop
nop
stos
out
add
mov
jb
push
clc
cmp
ret
xchg
or
mov
testb
xchg
push
adc
add
int
pop
cmp
fidivl
outsl
mov
fsub
mov
fsubrl
cmpb
mov
xchg
fisubrl
lods
ja
pop
fadds
sub
movsl
in
xchg
enter
and
xchg
into
lods
sbbb
js
or
cld
mov
and
cmpsl
and
push
mov
test
pop
jnp
scas
cmp
pop
xor
push
sbb
jbe
push
jnp
mov
and
push
jns
ret
mov
pop
popf
sub
inc
pop
jl
jns
dec
mov
fcompl
into
ret
in
add
pop
adc
jns
sub
test
dec
fdivrl
test
xchg
rol
xor
dec
jno
popf
inc
cli
insl
push
shl
sti
cmp
push
push
sub
repnz
iret
dec
stc
xchg
fldenv
jmp
pop
in
xchg
or
pop
repnz
iret
imul
xchg
mov
push
idivb
cld
push
inc
js
es
lods
mov
push
lret
jnp
mov
sbb
pushf
jl
mov
movsl
loope
mov
jmp
lcall
mov
les
arpl
outsb
xor
mov
aad
stc
lods
iret
mov
mov
test
pop
xchg
sub
mov
jmp
rolb
sbb
push
sarl
pop
jecxz
mov
mov
pop
mov
jne
lock
mov
lahf
lock
xorl
dec
outsl
and
mov
adc
xchg
mov
add
pop
stos
sbbl
shll
rorb
dec
xchg
cmp
pop
testl
mov
lret
mov
mov
dec
bound
gs
std
int
push
mov
jecxz
imul
into
or
sub
lahf
xlat
add
movmskps
jbe
out
in
addr16
pop
inc
bound
add
sub
sub
out
adc
inc
push
test
aad
jne
mov
mov
out
sbb
sbb
shl
nop
push
stos
loop
and
push
and
push
in
sbb
xchg
movsb
outsb
or
cmp
cmp
xor
mov
loope
lods
fsts
xor
lea
test
rcrl
fidivs
andb
aad
pop
mov
bswap
imul
mov
sub
xor
int3
xchg
jecxz
dec
cmc
lret
out
sar
jmp
sub
add
out
orl
movsb
sahf
adc
or
dec
iret
fidivrl
les
mov
mov
loopne
jnp
adc
jnp
fsubrl
int
aam
jle
in
movsl
push
lret
in
push
inc
xchg
lahf
outsb
mov
lea
mov
push
fisttpll
je
sti
sarl
imul
cmp
mov
or
cmpsl
stos
fs
adc
scas
movsb
daa
xor
xchg
rcll
rcl
pop
jp
jae
push
jp
dec
ret
and
pavgb
es
es
faddl
and
sub
mov
add
insb
divl
data16
arpl
mov
cmp
adc
jmp
fnstenv
int
inc
das
mov
fidivrl
pop
mov
insl
pop
ret
insb
outsl
jecxz
es
daa
rsqrtps
subb
dec
arpl
loope
or
jb
les
dec
pop
scas
pop
ret
loope
adc
push
inc
addb
jecxz
cwtl
sub
stc
mov
cld
stos
and
cwtl
mov
add
mov
adc
or
out
xor
pop
xchg
test
xchg
pop
pop
orl
movsl
mov
lret
jg
fcoml
add
in
mov
mov
subl
inc
adc
mov
inc
hlt
mov
inc
mov
adc
stos
jecxz
lret
pop
cmp
inc
push
ja
sbb
nop
rcrl
cmp
addr16
notb
out
ret
int
mov
out
jp
lret
dec
mov
aas
jae
xor
flds
dec
push
jl
xor
mov
je
sub
fiadds
test
xor
inc
loope
pop
arpl
push
cmc
xchg
or
inc
mov
cmp
xchg
out
xor
jmp
push
in
cmpsb
and
ret
mov
outsb
jge
mov
dec
scas
adc
int3
or
addr16
sbb
sbb
cli
pop
arpl
inc
cltd
xchg
mov
mov
lea
fsubrl
mov
jge
pop
push
pop
scas
ds
in
rol
out
lcall
inc
sahf
mov
sub
push
enter
out
iret
out
jle
arpl
and
add
ljmp
adc
test
add
das
icebp
lods
sbb
xor
sub
repnz
push
mov
pusha
adc
pop
sub
cmc
xor
xor
cmp
push
mov
repz
imul
dec
dec
and
out
pop
inc
std
fs
pop
iret
xchg
mov
cwtl
adc
sub
fdiv
sbb
in
jbe
cmp
stos
fcoml
xchg
fmuls
push
jmp
mov
bound
hlt
mov
xchg
out
mov
mov
push
cli
cmpsb
jbe
cmp
rcll
xchg
mov
decl
je
lret
mov
mov
push
sub
ret
inc
and
subb
sbb
rorb
jbe
sub
jns
or
lods
mov
push
add
pop
subl
mov
mov
stc
add
lcall
jno
adc
and
repz
sarl
mov
cmc
push
test
bound
push
inc
lret
push
or
ss
adc
add
inc
inc
in
pop
rcr
lcall
ja
xchg
sbb
ret
addr16
mov
sub
lret
mov
push
jo
adcb
push
xor
jecxz
inc
daa
aam
cwtl
or
dec
mov
fnstsw
and
and
adc
repnz
fwait
inc
cmp
faddl
inc
mov
xlat
outsb
xchg
imul
imul
imul
inc
fwait
add
sbb
sahf
daa
push
and
into
and
push
mov
inc
fs
xor
js
jecxz
iret
cmp
hlt
push
enter
cmp
arpl
daa
lcall
cmp
mov
imul
and
mov
jle
into
test
xchg
rorb
ss
push
call
lds
shll
lods
push
aas
push
test
cmp
dec
jo
mov
add
out
add
jmp
mov
int3
mov
not
add
fs
mov
add
call
adc
pop
pusha
jo
inc
or
mov
push
mov
jb
fnstenv
inc
pop
daa
and
xchg
pop
fbld
ret
dec
insb
jnp
sub
xor
loope
ret
aam
lods
icebp
add
mov
pop
call
orl
mov
sub
mov
ss
shl
shl
orl
jno
stos
vshufps
ror
sbb
lea
add
mov
gs
int
aam
fcomps
loopnew
lock
mov
aad
scas
rorb
pusha
lods
cmp
and
mov
adc
outsl
sbb
sbb
cld
jl
inc
or
mov
jnp
vsqrtpd
and
mov
pop
lods
lret
hlt
adc
lock
out
or
clc
ss
leave
movsl
jl
inc
xchg
lea
add
mov
ret
jne
and
mov
add
cmp
mov
sbb
lods
iret
shlb
mov
mov
and
adc
outsl
loope
ds
icebp
movsl
xor
jmp
comiss
xchg
inc
lret
popl
pop
call
mov
push
pop
inc
inc
add
mov
cmc
fdiv
insb
add
add
add
mov
imul
mov
add
xor
loopne
cwtl
xchg
mov
inc
addr16
sub
rorb
cmp
adc
pop
insl
push
rcll
mov
mov
ret
pop
xor
pop
js
orb
daa
xor
sbb
les
adc
inc
pop
out
rclb
mov
add
push
mov
mov
push
adc
inc
aad
adc
pop
shlb
xlat
inc
adc
mov
push
frstor
mov
in
ss
inc
test
scas
outsl
jae
jne
xchg
cmp
es
inc
cwtl
adc
stos
lods
adcb
mov
shll
insb
adc
fcomip
pushf
jae
cmpsb
cmp
jge
jg
movsb
imul
fsub
cmp
cmp
iret
jmp
mov
stos
adc
mulb
outsl
outsb
enter
push
leave
pop
jmp
fiaddl
fwait
xchg
and
fisttpll
inc
sahf
jns
scas
or
shlb
cwtl
mov
add
xor
mov
mov
sbbl
xor
movsb
inc
cmp
inc
xor
roll
dec
fiadds
shrb
jge
mov
bnd
scas
nop
push
je
fcompl
inc
add
lds
arpl
scas
mov
scas
bound
mov
cli
jg
loope
movsl
adc
les
push
adc
and
popa
cmp
cmpsb
pop
mov
xchg
movsl
mov
cmp
mov
lcall
push
push
xchg
in
jno
sub
sub
mov
dec
mov
pop
cmp
cmp
lea
pushf
std
mov
xchg
mov
mov
imull
lods
imul
rclb
mov
sbb
leave
fidivrs
scas
addr16
adc
cwtl
das
pop
pop
cmp
das
stos
or
lods
push
fs
adc
jl
hlt
xor
insb
push
fwait
xlat
rcrb
cmp
fwait
out
lahf
adc
mov
leave
push
movsb
adc
add
repz
dec
pop
loope
pop
mov
testb
pop
adc
xchg
stc
hlt
data16
aad
add
stc
inc
sbb
jb
clc
adc
fstl
aas
call
add
pop
mov
std
dec
mov
lret
sbb
lahf
jbe
inc
fdivrp
or
movsl
pop
pop
scas
mov
add
ret
stc
mov
cmpsb
or
dec
jnp
jp
xchg
mov
testb
xchg
xchg
or
xor
inc
adc
in
aad
push
push
insl
or
test
testl
and
popf
shrl
jecxz
cmp
push
inc
pusha
sub
xchg
es
notb
and
cmp
xor
mov
pop
and
repnz
lods
mov
dec
inc
arpl
cmp
int
xor
mov
andb
fnstsw
scas
xchg
test
outsl
in
iret
movsl
fisttps
pop
xchg
ja
sub
mov
adc
mov
aam
faddp
push
jo
mov
push
xchg
cmp
or
cmp
test
out
jmp
dec
dec
in
jg
adc
test
psrlq
icebp
es
mov
fcompl
aam
stos
in
sbb
jge
add
jbe
xchg
iret
aaa
call
xchg
and
sub
fwait
pop
push
loopne
inc
mov
mov
inc
lods
popf
stos
cmp
stos
dec
mov
mov
mov
inc
je
jno
push
cmpl
dec
cld
ss
pop
add
jp
xchg
daa
cs
les
js
daa
pop
xchg
fistl
inc
inc
cmp
dec
add
test
out
clc
pop
stos
insl
sti
inc
mov
addl
andl
std
aaa
dec
pop
sbb
in
es
add
ja
push
shr
push
aaa
fxch
sub
nop
lcall
adc
or
sub
out
cmpsb
outsb
sub
cld
mov
test
adc
push
arpl
ljmp
sub
imul
sub
and
push
pop
aas
subb
int
rcll
out
add
arpl
mov
sub
pop
pop
push
bound
push
add
jns
inc
fcoml
and
xchg
add
pop
sub
insb
int
lock
adc
sbb
xor
xchg
mov
insl
aas
or
jno
les
push
push
test
pop
push
jne
notb
mov
scas
stos
xchg
mov
scas
add
pop
stc
icebp
xchg
leave
or
pushf
cmp
jae
nop
mov
insl
mov
inc
insb
mov
notl
arpl
roll
mov
jg
pop
stos
push
sub
xchg
fistps
test
jne
mov
sub
sbb
repnz
and
orl
sbb
dec
mov
arpl
push
inc
push
aad
fstps
and
inc
add
shl
xchg
add
mov
mov
mov
dec
lret
pop
dec
fisubl
jg
lret
addr16
xchg
sbb
ss
pop
fs
in
sub
out
pushf
push
js
mov
sbb
popa
hlt
lock
in
dec
call
inc
out
push
sti
shrl
pop
cltd
cmp
mov
or
fs
mov
push
adc
xor
adc
add
mov
dec
push
test
enter
pop
mov
push
dec
jnp
lret
imul
out
andl
cmpl
xchg
decl
ret
repz
mov
test
cmp
test
out
mov
filds
inc
lea
sbb
inc
add
sbb
jbe
xchg
iret
jae
xor
aas
jb
stos
pop
cmp
sbb
mov
xchg
mov
add
mov
into
adc
cmp
adc
movsl
cmpsb
int3
movsl
push
jl
xchg
iret
aam
inc
in
ret
inc
mul
xchg
xchg
push
pushf
pop
in
daa
out
pusha
mov
sbb
mov
xor
call
test
ljmp
repz
mov
xacquire
xor
cmp
nop
push
fstps
out
lea
jne
repz
out
pop
aas
rorl
rclb
mov
sbb
aam
call
mov
add
daa
fists
test
mov
xor
xor
push
dec
mov
or
cld
or
add
dec
pop
xchg
mov
dec
xchg
and
push
out
stc
stos
mov
das
aam
aad
add
sahf
test
scas
xor
xchg
jnp
adc
in
mov
mov
dec
gs
mov
lods
orb
mov
std
fiaddl
mov
adc
shrb
adc
push
inc
dec
imul
pop
jl
sbb
repz
subl
aad
sbb
sub
je
add
imul
fsubl
xchg
mov
inc
mov
cmp
pop
sbb
dec
jle
into
aam
mov
jnp
les
and
rcrb
xchg
xor
inc
out
mov
es
ljmp
xchg
mov
shlb
call
mov
mov
mov
fmull
sbb
cs
inc
push
es
xor
ss
repz
cmpsb
pop
call
movsl
lea
xchg
mov
test
stos
cvtps2pd
fcom
mov
inc
in
fnstsw
out
sbb
or
xchg
mov
cmc
enter
insb
pop
xor
addr16
or
mov
leave
leave
xor
es
sub
cwtl
pop
testb
cmp
std
adc
push
and
xor
or
push
push
inc
fstpl
leave
popa
out
in
inc
movl
js
into
ret
xchg
fwait
insl
pop
data16
sbb
inc
cs
or
cmp
jg
dec
mov
mov
fistpll
or
xchg
mov
clc
xor
stc
mov
mov
push
es
mov
icebp
fs
cwtl
mov
sbb
es
cmp
dec
push
xor
lret
bound
cmpsb
jne
jbe
out
pop
push
ds
sub
adc
adc
loopne
sub
jg
or
jno
sarb
push
int3
nop
or
test
pop
rolb
cmp
push
out
jg
fstl
test
in
dec
jmp
aad
and
mov
xchg
cmpsb
sbbb
sub
pop
lods
or
pop
lock
ret
jns
adc
xor
sbb
sub
mov
push
push
mov
xor
add
addr16
test
jo
inc
sahf
lods
push
dec
lds
in
arpl
and
mov
mov
leave
jge
mov
repnz
data16
adc
or
jae
adc
arpl
call
adc
fisttps
sahf
and
mov
mov
xchg
push
jl
push
fmull
fiaddl
adcl
push
sub
aam
loope
mull
xchg
call
loopne
push
data16
loope
add
std
andl
sub
or
or
add
shr
je
test
sub
pop
int
cmp
mov
fildl
mov
add
cmp
xor
mov
frstor
jo
pusha
mov
mov
inc
fisttpll
cmpb
decl
imul
stos
bound
popf
clc
dec
cltd
test
xor
pop
or
and
add
popa
aaa
xchg
aam
pop
test
lahf
cmp
inc
jnp
mov
mov
fstl
in
fmull
ja
xlat
adc
inc
arpl
xchg
mov
mov
pushf
cmp
lahf
movsb
lods
cltd
cltd
repz
cli
aad
inc
cmp
addl
pop
cmp
mov
push
faddl
rolb
xchg
cltd
loope
fwait
outsb
pop
inc
add
imul
mov
push
cmc
mov
rcll
int
xchg
sti
bound
test
sti
call
inc
divb
fcomp
outsw
cmpsl
leave
bswap
bound
pop
mov
add
sub
mov
and
addr16
cmp
or
in
xor
pop
loop
jle
sbb
es
fcompl
out
mov
jb
test
data16
inc
and
pop
push
jecxz
insl
jg
mov
aam
push
test
dec
orb
jno
mov
dec
cmpsb
arpl
and
push
adc
les
in
pop
cmp
ret
cmc
popf
cwtl
sub
inc
xor
and
cli
enter
ja
lds
sbb
icebp
pushf
fbld
xor
out
inc
scas
imul
out
jg
mov
sahf
xchg
lds
or
in
outsl
mov
adc
push
pop
fildll
inc
je
popa
xor
xchg
addr16
push
jnp
sub
popa
out
mov
fidivl
dec
jbe
mov
mov
push
inc
sub
xor
inc
pop
xchg
stos
mov
xchg
mov
inc
lds
jecxz
adc
adc
imul
mov
jo
test
xchg
es
test
stos
hlt
outsl
dec
loop
cli
add
mov
jmp
in
sbbb
xor
xchg
mov
jecxz
lret
or
mov
pop
jb
lret
pop
xor
or
inc
mov
jno
negl
mov
aas
or
mov
xlat
mov
mov
aas
bound
or
or
or
push
jno
xchg
nop
lods
cmp
stos
pop
js
not
mov
jb
clc
add
sbb
cltd
inc
adc
int3
push
jae
mov
das
daa
and
lret
movsb
nop
lds
pop
pop
inc
pop
mov
dec
push
and
mov
ficompl
lret
mov
into
call
add
leave
test
cmc
sub
cld
in
or
adc
ds
and
jns
push
mov
aas
icebp
loope
in
or
mov
fsub
je
fwait
push
xchg
andb
pop
ljmp
adc
bound
inc
jmp
lret
movsl
cmp
in
icebp
xchg
aad
mov
inc
and
jae
into
call
jno
push
pop
pusha
cmp
pusha
xor
negb
loopne
jae
or
mov
shl
out
arpl
std
mov
mov
lods
dec
pop
sbb
dec
test
sub
jl
lcall
lods
fisubs
push
sbb
sbb
lret
sbb
test
loopne
ret
jecxz
les
add
add
movsb
mov
enter
push
push
iret
pop
sub
mov
or
mov
pop
mov
jno
mov
test
or
inc
jp
sub
insl
loopne
pusha
xor
mov
dec
js
repz
icebp
inc
xor
or
repz
cmp
scas
lods
cwtl
insl
andl
xlat
push
mov
mov
mov
rorl
and
stc
sub
inc
xlat
ljmp
in
add
and
sbbl
xor
mov
or
negl
mov
adc
outsb
cmpsb
std
adc
push
out
jno
pop
je
xchg
and
inc
cmpl
into
dec
push
pop
mov
xlat
scas
je
insb
movsb
lods
dec
arpl
jb
bound
cwtl
stos
xor
addr16
aas
test
jbe
movsl
jp
wrmsr
pop
test
aaa
adc
jnp
icebp
cmp
mov
mov
mov
push
cmpsl
sub
and
ret
insb
in
cwtl
cmp
push
repnz
test
xlat
repz
lcall
mov
popa
fcoms
stos
jae
out
stc
push
cltd
mov
loope
xchg
in
sub
inc
adc
xor
pop
jg
lcall
sub
movsb
test
ja
xchg
cwtl
cmp
ss
in
std
mov
outsl
repz
sahf
cmpl
negl
jge
pushaw
pop
mov
sahf
cwtl
add
adc
out
or
pusha
xchg
cmp
adc
inc
pop
lret
xlat
fiadds
imul
fcomps
or
arpl
ljmp
clc
std
divl
test
js
jle
pop
add
cld
mov
push
lret
daa
fnstenv
mov
inc
clc
in
sti
xor
inc
out
popf
in
adc
jns
sub
push
or
pop
mov
aaa
stos
xchg
out
int
mov
jg
add
pop
pop
mov
mov
in
mov
mov
pop
lods
je
loope
cmpsl
in
pop
lods
pop
pop
mov
int3
xor
aad
push
jno
ds
xchg
xor
ret
ljmp
aaa
adc
loopne
pusha
mov
sbb
add
xor
sub
testl
das
inc
daa
mov
and
out
pop
cmpl
fucomip
int3
pop
push
out
inc
add
outsl
fists
es
repnz
xor
repz
ss
fwait
into
ret
sub
filds
dec
loope
stos
xor
aas
fwait
inc
dec
in
outsb
mov
dec
cmpsl
scas
mov
pop
data16
or
mov
in
test
mov
push
out
scas
jl
mov
push
lss
dec
add
fwait
js
enter
jnp
and
and
fsubrp
sti
sbb
insb
pop
and
repz
jnp
push
or
or
mov
cmpsb
lods
arpl
jecxz
insb
cs
push
sub
mov
mov
jb
dec
push
inc
and
orb
insb
xchg
mov
fildll
and
sbb
xchg
xor
mov
xchg
sub
mov
cmpsl
cmp
cmpb
bound
in
add
inc
gs
icebp
cmp
jbe
mov
cli
dec
pushf
xchg
xorl
xor
data16
mov
rcl
mov
jnp
fistps
adcl
or
arpl
aas
pop
mov
and
mov
cli
adc
inc
bound
hlt
cli
sbb
int
cmpsb
rorl
cmp
cmp
data16
les
mov
pop
push
fldl
in
in
xchg
adc
mov
mov
push
insb
sub
push
out
add
push
cmp
adc
jmp
out
pushf
adcl
pop
xor
and
hlt
or
xor
xor
aaa
jecxz
leave
addb
jae
ja
dec
mov
jne
test
inc
je
arpl
fdivl
xor
inc
ss
jb
xchg
jo
xor
aas
and
inc
inc
add
cli
xor
popa
pusha
xchg
inc
dec
aad
mov
int
lea
mov
fcoms
jae
call
lahf
inc
pop
das
lods
out
in
pop
mov
inc
mov
sbb
xchg
js
mov
lea
push
adc
mov
mov
stc
push
jmp
aaa
jle
lret
pop
or
or
pop
xchg
cmpsb
ljmp
jmp
add
mov
push
test
in
cs
stos
cmpsb
addr16
imul
inc
or
pop
sbb
mov
fisttps
sub
xchg
push
stos
jne
pusha
enter
xchg
mov
mov
inc
jne
dec
sub
xchg
mov
int
stos
nop
push
mov
mov
fwait
mov
push
mov
jne
push
push
daa
push
lcall
dec
or
test
cld
cwtl
adc
push
add
leave
push
or
sub
aam
por
jns
cmp
test
subb
test
pusha
sub
mov
sbb
push
inc
stc
hlt
dec
and
icebp
add
jns
sbb
xchg
cmp
inc
add
test
pandn
fnstcw
xor
inc
and
ss
mov
sub
iret
das
jno
loope
inc
fistps
rorb
js
ret
xor
test
xchg
mov
push
ret
cli
pop
out
jecxz
icebp
dec
js
loope
jl
mov
and
loope
mov
dec
int
aaa
add
outsb
aas
bound
bound
pop
rorl
out
xchg
mov
sub
aad
xor
push
inc
or
sbb
mov
mov
cli
movsl
out
push
and
stos
adc
stos
js
mov
shll
enter
test
test
adc
sahf
add
scas
cmp
pop
movsb
push
pop
jl
jmp
pop
aad
cwtl
loopne
mov
hlt
pop
adc
adcl
lods
mov
xor
mov
mov
pushf
fistps
dec
mov
fwait
pushf
xlat
aaa
xchg
cmpsb
leave
pop
xor
sub
add
xor
push
stos
in
pushf
dec
dec
out
sbb
fimull
push
mov
push
nop
fcoml
gs
movsl
rep
inc
test
and
and
dec
xchg
je
pop
cli
mov
xor
in
inc
xchg
repnz
inc
mov
and
pop
in
adcl
xchg
lods
lret
inc
scas
fcompl
ljmp
xor
push
cmp
jb
xor
sbb
dec
cwtl
pushf
mov
pop
push
and
mov
rolb
cli
xchg
cli
cmp
push
xor
cmpsb
cmp
call
movb
adcb
shlb
jno
or
call
or
insl
mov
inc
lret
push
and
sarl
mov
jp
frstor
pop
lods
sti
out
jbe
adc
push
stc
cmpsl
push
call
mov
push
sbb
adc
stos
cs
lock
flds
jnp
loope
mov
cwtl
mov
js
lods
and
jne
bound
cli
or
hlt
sbb
pop
frstor
dec
mov
sbb
negb
cli
fnstcw
fsubrl
mov
push
mov
push
scas
pop
xchg
cmp
lock
sub
push
loope
lods
dec
lds
mov
adc
loopne
fcmovne
cmpsb
mov
pop
ret
fisttps
mov
out
mov
push
fdivl
jae
insb
fsubl
push
mov
mov
push
addl
ljmp
js
cmpsb
mov
jmp
mov
dec
lock
lods
adc
dec
popa
mov
dec
xchg
movsl
out
aad
dec
bound
aam
xlat
dec
add
pop
dec
imul
push
cmp
mov
fimuls
rcrb
out
pop
cs
mov
mov
adc
mov
stc
shll
add
fld
or
xlat
xorb
es
pop
mov
clc
lsl
sbb
insl
xchg
lret
mov
cmp
cmp
pop
add
in
pushf
push
mov
jne
imul
sti
push
fnstenv
sbb
sub
scas
inc
inc
sbb
outsl
jns
ss
test
jge
les
jo
sti
pop
leave
push
cltd
mov
pop
xchg
mov
push
addl
add
icebp
sub
inc
pop
sbb
lcall
int3
hlt
xor
and
in
pop
add
inc
pop
and
or
mov
popa
movsb
aam
mov
fs
imul
adc
call
jecxz
ja
dec
jb
enter
cmp
or
lret
lret
ja
mov
cs
push
jle
in
xchg
push
mov
mov
je
loope
in
jp
cmpsb
js
add
dec
jmp
cmpb
inc
jo
sub
sub
xchg
hlt
pop
pushf
outsb
in
dec
pop
mov
inc
outsl
outsb
dec
mov
outsl
aaa
cmp
inc
fldcw
inc
mov
xor
push
inc
jmp
fldt
lcall
fdivrs
aaa
out
mov
aaa
sbb
arpl
pop
shl
in
xor
push
dec
jmp
dec
push
push
outsl
bound
int3
ficoml
out
jl
mov
xor
push
orb
jnp
mull
lcall
xor
es
jle
data16
mov
push
adc
dec
push
mov
push
pop
mov
rcrl
jns
fwait
std
and
enter
std
and
fdiv
xchg
pop
sarb
sbb
add
jnp
sub
leave
jno
outsl
clc
push
js
shlb
sti
adc
scas
mov
or
lahf
mov
mov
bound
aaa
ds
dec
int3
out
mov
movsb
enter
dec
call
push
repnz
aaa
fcmovnbe
and
sar
std
je
sar
incl
loopne
mov
insl
xchg
jmp
fldt
fistpll
xor
add
lds
fistps
jo
mov
jp
es
mov
mov
lret
outsl
inc
mov
lods
mov
cmp
pop
shlb
add
jno
dec
mov
int3
std
addr16
mov
out
mov
inc
gs
xchg
inc
mov
rorl
jl,pt
push
fbld
ja
je
imul
add
fldt
push
inc
repnz
ljmp
xor
rolb
or
outsl
sti
sbb
or
add
into
mov
scas
mov
mov
ds
nop
stc
dec
outsl
mov
push
in
jb
std
jle
lods
scas
and
pusha
fs
lock
jne
ss
sub
lea
outsl
mov
daa
shrl
cmc
and
shr
sub
mov
push
sbb
sub
add
loopne
and
ja
pop
push
in
cltd
loope
aad
xchg
test
in
xchg
cmpsl
xor
dec
imul
pop
mov
inc
or
outsl
sub
and
adc
frstor
fisubrs
mov
push
fistps
ljmp
aad
mov
push
mov
stos
lahf
jnp
mov
ja
mov
mov
jbe
lcall
jbe
daa
mov
mov
rcr
sbb
jge
mov
mov
jle
aam
lahf
adc
in
jmp
or
fiaddl
jmp
xchg
pop
fwait
test
fiaddl
scas
or
jo
ja
dec
fwait
pop
jmp
divl
inc
dec
dec
dec
mov
fsubr
andl
ds
jmp
arpl
mov
cmp
subl
bound
pusha
xor
repz
mov
imulb
xchg
jae
sbb
xchg
in
inc
push
loope
pop
test
cmc
adc
push
ret
mov
cld
std
call
pop
lds
push
xor
cmp
nop
or
ret
jp
enter
push
mov
ret
sti
jno
icebp
mov
cltd
mov
add
jb
lret
mov
jl
adc
jbe,pt
andb
cmp
data16
in
xor
add
in
xor
push
nop
in
pop
in
lahf
bound
bound
jmp
mov
xor
xchg
xor
pop
in
das
insl
sbbb
cmp
loope
shl
xchg
lcall
ja
out
push
int3
pop
and
pusha
sub
mov
mov
adc
dec
jge
mov
dec
idivb
or
outsl
packuswb
in
and
push
mov
mov
inc
sarb
repnz
cmp
jp
push
jp
sbb
cmp
out
add
sbb
jmp
mov
fdivr
pop
in
into
mov
xchg
popa
pop
fiaddl
fsubrl
int
cmp
out
add
xchg
ss
mov
push
int
lret
stc
pushf
push
rorl
ljmp
add
push
mov
mov
jo
pop
lcall
jmp
add
imul
push
pop
dec
call
fisttps
rclb
adc
fwait
adc
dec
mov
cmp
jg
lahf
movsb
xor
mov
movsb
mov
aam
push
cwtl
push
dec
popa
jge
sbb
pushf
cmpl
or
dec
xor
or
push
pop
pop
mov
sub
out
push
aaa
pop
sarb
les
sbb
test
scas
and
mov
and
out
mov
cwtl
nop
lret
fistps
int3
jnp
test
mov
sarl
mov
movsl
js
push
cwtl
shr
dec
sub
mov
pusha
movb
and
push
jle
loop
and
and
lret
or
inc
mov
push
and
jg
in
push
mov
mov
add
aaa
ret
cmpsl
out
imull
jl
filds
mov
mov
and
out
inc
xor
xor
mov
or
leave
xchg
scas
mov
xor
sbb
mov
dec
dec
lea
aad
movsl
cmp
data16
or
ret
cs
or
mov
int
imul
mov
cld
xchg
ss
push
cltd
lock
lds
jbe
decl
or
jae
add
out
mov
loopne
sbb
incl
mov
jge
jns
es
sarl
jno
pushf
cs
popf
xor
push
mov
push
and
ljmp
sbb
pop
xchg
inc
xor
adc
lret
mov
adc
sub
loopne
aad
mov
pushw
data16
loop
cmp
push
xchg
loope
add
test
add
cmp
or
mov
cld
sbb
mov
pop
negb
loop,pt
ss
pop
lds
in
jge
imul
movsl
xchg
scas
test
in
ss
into
fwait
jb
dec
push
cmp
popf
xor
stos
bound
cltd
and
cmp
sub
add
inc
filds
scas
and
xchg
ror
scas
xor
pop
mov
push
aas
dec
into
jge
decl
xchg
cmp
pop
xchg
out
mov
aad
dec
into
jge
arpl
push
addl
mov
mov
add
movl
ret
test
mov
mov
jg
gs
mov
stc
test
jg
jmp
pop
fwait
mov
roll
jo
jne
rcll
out
xlat
fcomps
pop
inc
in
add
push
jg
outsb
sub
cwtl
imul
add
outsl
dec
adc
dec
pusha
adc
push
cmpsb
test
push
xorb
push
dec
mov
dec
outsl
stos
popa
adc
sub
pop
out
cmpsb
ret
mov
sub
aam
push
xor
ja
test
inc
jl,pn
lods
xor
lds
fnstcw
repz
add
xchg
jle
cs
xchg
sub
sti
out
fiaddl
lret
and
mov
aam
fidivs
xchg
shlb
hlt
hlt
or
and
sbbl
jb
fcmovu
test
test
mov
mov
mov
loope
xor
xor
add
mov
xchg
mov
cld
xor
cmc
or
sbb
push
jge
mul
fildl
xor
xchg
or
mov
in
push
orl
pop
add
ret
out
int3
pop
mov
not
cmpsb
iret
test
lods
enter
movsb
mov
orl
fbstp
ja
mov
add
xor
int
pop
adc
into
pop
rcll
and
xor
in
dec
xor
xchg
sbb
movsl
outsl
fisubs
es
int
fcos
dec
in
jno
movd
or
pop
mov
jnp
push
xchg
insl
aas
stc
pop
dec
int3
aam
dec
test
adc
pop
dec
adc
adc
loop
bound
in
push
and
sarb
arpl
pop
mov
inc
push
jecxz
mov
aam
cmp
adc
pop
movsl
fwait
cmp
fstpt
loopne
ja
push
test
test
add
mov
and
push
ds
pshufw
xorb
mov
xor
cmp
jge
stos
xor
push
pop
test
roll
add
stos
pushf
add
mov
jmp
mov
repz
add
fmuls
jp
rcrb
sbb
loope
loope
mov
cs
int
out
das
xchg
or
lret
out
cltd
cmp
outsl
xchg
pop
movsl
xchg
stc
inc
loop
jecxz
jo
ds
fbld
cmp
sbb
lods
lea
rclb
pop
adc
dec
arpl
call
inc
add
test
or
jno
and
xchg
push
pushf
cmp
fists
mov
divps
pop
xchg
ds
pushf
test
mov
push
sarl
sbb
clc
jecxz
xchg
mov
ljmp
push
sbb
inc
add
mov
enter
rcl
jp
mov
pop
sub
and
add
sub
loopne
jecxz
push
cwtl
inc
outsb
jns
or
lods
rcll
add
sbb
inc
loope
adc
mov
or
push
cmp
and
xor
jmp
cmp
ds
mov
leave
xchg
lret
sub
iret
out
sub
xor
dec
adc
fstps
sbb
das
pop
inc
fisubrs
push
add
mov
ljmp
cmp
pop
lahf
adc
dec
shr
fwait
out
es
stc
pop
andb
lret
cmc
stc
add
lea
pop
icebp
pop
outsb
ljmp
test
push
std
outsb
shlb
xor
insl
clc
lock
pop
data16
add
dec
movsb
pusha
xchg
cld
xchg
inc
pop
sahf
ljmp
daa
js
loope
xor
ret
or
jno
pop
stc
lds
lcall
sbb
mov
lods
mov
fnstcw
add
cld
lcall
fisttpl
mov
jle
and
dec
scas
xlat
daa
and
cmc
js
aas
popf
ds
nop
cwtl
test
mov
xchg
or
push
push
mov
push
inc
dec
add
cmp
clc
jbe
xor
mov
mov
push
jnp
jl
adc
mov
lahf
sahf
loopne
push
test
dec
into
rcll
cli
mov
gs
test
lret
nop
xor
lock
imul
and
and
jmp
xchg
fisubrl
mov
push
repnz
jae
test
loopne
fnstenv
mov
mov
pushf
and
mov
lds
in
insb
push
jnp,pn
daa
and
mov
cwtl
add
jno
loop
lcall
or
and
inc
fs
pop
in
xor
stos
aad
mov
lret
cltd
ror
sbb
xchg
mov
jns
mov
push
mov
xor
adc
xchg
ds
cmp
nop
sbb
pop
push
add
cmc
fstpt
push
fdivs
shl
sub
adc
jo
sbb
call
stos
push
pop
sbb
sbb
test
mov
and
imul
sbb
push
mov
mov
inc
pop
js
jae
mov
sbb
popa
icebp
test
jne
sbb
enter
outsb
cmp
xchg
popf
push
pusha
push
gs
clc
pusha
pop
or
pop
nop
es
movsb
mov
out
add
mov
push
repz
inc
rcrb
sbb
inc
and
push
fldt
notb
lods
cmpsb
sbb
fdiv
or
in
repnz
and
push
lahf
mov
push
cmpsb
nop
push
mov
pop
mov
xchg
jo
add
sub
sbb
xchg
pop
in
popa
mov
push
dec
sti
rclb
or
addb
ud2
bound
shl
xchg
mov
outsl
dec
sbb
js
or
lock
insb
mov
jne
loope
movsb
or
lret
fsubs
scas
and
push
lret
or
popa
push
fstpt
add
es
dec
push
pop
add
pop
jne
enter
xchg
fdivrs
int3
adc
jmp
inc
sbb
data16
or
in
pop
mov
jbe
mov
jg
aas
inc
aaa
loopnew
sbb
or
add
aam
xor
xchg
orl
lret
icebp
pop
out
idivl
pop
shrl
rcr
mov
dec
outsb
push
lds
aas
xchg
imul
dec
jp
lret
cwtl
jg
sub
and
dec
notl
into
cmp
xor
sti
pushf
sub
xor
out
xor
loope
pop
test
xor
mov
das
mov
stc
mov
aas
sbb
sbb
dec
sub
mov
lcall
and
inc
cld
push
mov
into
and
sbb
cmp
jmp
js
dec
pop
cli
push
subl
mov
fists
das
mov
or
sbb
iret
inc
sahf
movl
cmp
cmpsb
push
mov
jae
lret
out
xor
jns
xchg
inc
cmc
jo
mov
sub
mov
mov
inc
insl
mov
dec
push
jecxz
outsl
pop
mov
cmpsb
mov
push
jecxz
cmp
data16
pop
out
insl
repnz
lods
jbe
mov
push
jle
mov
test
mov
stos
pop
xlat
sbb
and
pusha
mov
enter
js
lds
stos
mov
jns
push
push
ss
popa
es
test
inc
out
nop
adcl
pop
sbb
sbb
dec
sbb
je
lea
sbb
cld
popl
loop
or
pop
fsubrl
mov
insb
and
dec
adc
cmpsb
clc
nop
or
jno
add
out
jge
mov
cwtl
mov
dec
adc
mov
andb
jne
cmp
or
mulb
insb
pop
xor
test
movsl
repz
xchg
scas
sbb
inc
arpl
inc
into
xorb
mov
pop
in
mov
adc
push
pop
bound
sub
mov
xchg
cld
pusha
out
fucomp
xor
inc
push
or
gs
les
push
lods
lret
fsubrl
cmp
popf
insb
xlat
leave
lret
cmp
xchg
pop
popl
lret
into
mov
adc
stc
mov
ret
fstpt
out
add
mov
add
xor
dec
mov
lock
sarb
scas
pop
in
or
repnz
jnp
xchg
mov
xchg
pop
icebp
stos
jnp
mov
cmp
xor
xchg
in
ja
aad
loope
jl
in
ja
rorw
lahf
aad
or
adc
lods
jmp
jmp
inc
lret
cs
xchg
loopne
bound
xchg
and
xchg
pop
lods
pop
pop
movsl
movsl
ss
push
inc
add
adc
or
sbb
sbb
xchg
xor
cmpsl
dec
inc
xchg
insl
dec
add
jg
jbe
mov
dec
mov
fisttpll
mov
inc
xchg
lret
fstl
dec
daa
sub
or
pushf
cld
or
dec
inc
into
lcall
mov
cli
insl
bound
add
mov
outsb
movsb
fisttpl
push
xchg
or
outsb
repz
test
imul
jmp
sbb
sbb
lahf
data16
mov
int3
stos
pop
add
mov
and
mov
rcl
pop
into
lods
sub
adc
sti
pusha
push
mov
sbb
add
lret
rorb
lock
xchg
xor
cmpsb
call
and
ficoms
mov
xchg
or
call
dec
int3
sbb
test
inc
push
sbb
pop
push
or
add
dec
mov
cmp
jecxz
sbb
mov
out
adc
and
jecxz
jb
out
add
xchg
pop
cs
sbb
sbb
sub
push
insb
cmc
jo
inc
pop
dec
mov
adc
lahf
add
dec
mov
pop
push
ja
xchg
inc
adc
aaa
insb
aas
sub
in
gs
jl
cmp
xchg
mov
jo
inc
mov
lahf
xchg
fstpt
sbb
aas
and
stc
push
or
sbb
add
xchg
mov
cltd
pop
sbb
lret
es
pop
shr
mov
test
xchg
dec
and
es
rorb
inc
cld
test
mov
inc
inc
loopne
lahf
dec
rcrb
rorb
mov
jb
ljmp
std
cwtl
incb
lcall
jbe
and
aam
psrld
cmp
out
out
test
pop
mov
mov
and
ja
leave
imul
sti
lds
inc
daa
test
pushf
cld
push
decl
ljmp
and
insb
pop
pop
cwtl
or
sbb
in
pop
in
mov
mov
leave
sub
xor
xchg
movsl
mov
repnz
test
fsts
data16
pop
and
xor
imul
iret
outsl
xor
or
jns
jb
cmp
jns
clc
call
sarb
jge
fs
mov
xor
fdivrl
jnp
jecxz
jno
insb
clc
jne
je
sub
fldlg2
std
cmpb
loope
cmpsb
inc
pop
sub
aam
or
imul
popf
mov
xor
pop
lods
sbb
inc
ret
clc
addr16
xor
jg
cwtl
ret
jae
adc
ds
mov
aam
and
push
dec
adc
pop
fstpt
outsb
fmull
and
sbb
mov
jle
or
sarl
mov
mov
mov
fisttpll
add
mov
nop
gs
cmp
xorb
xor
cs
shr
icebp
mov
sbb
sub
mov
sbb
inc
mov
out
negb
shll
sub
push
fisubrs
loopw
mov
pop
and
push
xchg
mov
cmpl
dec
xchg
lock
mov
sahf
adc
mov
repz
pop
push
nop
test
xor
mull
push
idivl
xchg
movsl
jae
mov
add
scas
cli
addb
jae
cmp
cmp
sti
lret
call
loopne
cmpsl
mov
sub
js
add
fsubr
daa
push
xor
dec
xchg
xchg
cmp
or
xor
call
inc
test
call
cmp
jle
mov
call
stc
shrl
inc
push
out
push
sarb
dec
scas
sbb
addr16
in
xor
ja
cld
mov
lahf
popf
jle
mov
push
das
add
lret
mov
jnp
dec
xor
dec
ds
cs
aad
pop
push
mov
stos
jle
leave
dec
js
push
or
jno
sub
mov
sub
push
push
pop
ret
out
test
jne
mov
fnsave
mov
sub
in
stc
stos
or
jg
mov
pop
adc
ds
stc
add
aas
loop
jo
in
jecxz
test
loopne
push
scas
sub
dec
cmp
loopne
jns
dec
ficoml
ja
fbld
lock
add
and
or
cmc
pop
mov
pushf
pop
dec
roll
xchg
jmp
test
stos
xchg
xchg
ja
jge
stc
js
mov
xor
push
jo
sti
dec
mov
fadds
inc
clc
in
out
int3
fdivr
or
adc
enter
xor
cmp
dec
icebp
fisttpll
popf
mov
jae
inc
mov
mov
xchg
push
xchg
jae
add
jl
push
in
jmp
xor
xchg
add
test
push
lahf
pop
into
cli
xor
inc
aaa
daa
stc
or
lcall
xlat
jg
ljmp
push
xchg
add
cmp
xor
jmp
lcall
lahf
das
push
rcrl
loopne
ljmp
adc
shl
daa
out
out
imul
fmul
lahf
rorb
add
inc
mov
lods
mov
jo
inc
fsubrp
pop
add
sub
inc
shrb
pop
cltd
xor
lahf
xor
fdivs
mov
test
lods
out
push
lea
lock
or
lea
push
mov
rolb
adc
push
ja
inc
out
out
imul
mov
call
mov
push
mov
push
imul
mov
push
pushf
jbe
jl
shlb
mov
in
cmpsb
notl
inc
andb
outsb
lcall
sbb
test
hlt
push
mov
add
iret
sbb
push
mov
das
inc
popf
mov
xchg
lret
ret
mov
fdivrs
jne
xchg
out
xor
xchg
push
aas
dec
mov
inc
cmp
popa
and
cli
lea
scas
jge
push
mov
mov
or
push
inc
inc
lds
push
loopne
bound
fwait
sub
mov
clc
push
add
mov
rcrb
cltd
hlt
push
sub
push
pop
xchg
cmpsl
cmpsl
inc
jns
shrl
std
stc
inc
sub
mov
jecxz
cmp
sbb
movsb
mov
xor
fdivl
mov
and
fdivrp
pop
and
into
sub
lods
mov
push
daa
sbb
std
xchg
inc
and
jecxz
fdivrp
adc
icebp
orl
add
out
stos
dec
aaa
outsb
xor
mov
and
add
loopne
scas
fwait
sbb
xchg
test
stc
repnz
mov
xchg
add
or
cld
adc
int3
push
xor
or
add
insl
subb
movl
xchg
sub
in
sub
push
jns
sti
arpl
sbb
adc
pop
pop
sbb
stos
jecxz
push
sbb
cmp
idivb
ficomps
decl
out
mov
and
pushf
jge
fstpt
bnd
mov
xor
xor
out
jmp
loope
inc
fidivs
movsb
and
cmp
arpl
pop
mov
cmp
aam
pop
jbe
adc
dec
push
pop
mov
aas
in
pushf
jge
fidivl
pushf
pop
lods
xchg
xchg
mov
and
sbb
and
iret
jns
loope
push
sbb
add
jno
dec
fcmovb
sbb
aad
xor
and
roll
add
jbe
loop
lods
or
cli
adc
mov
call
add
daa
mov
mov
inc
cs
pop
add
pop
stos
out
pop
inc
dec
pop
lds
push
std
add
es
sub
xor
mov
or
iret
fistps
sbb
call
pop
add
mov
fisubrs
jb
orb
pop
pop
lock
adc
mov
cmpsb
adc
cwtl
or
lods
lods
mov
sub
pop
sub
frstor
inc
or
and
push
xor
repz
lcall
les
xchg
fdivrs
xor
jnp
arpl
andl
popa
mov
pop
in
push
incb
push
sarl
test
rorb
gs
out
repnz
imul
push
inc
into
xor
jmp
leave
shll
pop
push
push
or
outsl
sbb
adc
jle
cmpsb
push
xchg
mov
xor
or
and
sbb
jge
out
pop
xchg
sub
lcall
aas
outsb
sahf
dec
aas
push
adc
jb
jae
dec
addr16
xlat
mov
ljmp
shll
sbb
arpl
fst
cli
cs
int
jl
sar
push
imul
xchg
fistl
aaa
cltd
cmc
add
cs
xor
adc
sbb
hlt
in
addr16
inc
mov
pop
xor
xchg
inc
in
mov
push
out
fwait
dec
jnp
ljmp
mov
bound
test
xor
pop
shl
cmp
pop
out
adc
int
dec
cmp
js
clc
imul
data16
sub
pop
adcb
mov
mov
sahf
or
lods
sbb
xchg
mov
push
and
dec
sbb
sub
push
test
dec
aaa
js
bound
imul
xchg
jb
adc
push
push
mov
repnz
out
xchg
or
and
mov
lock
mov
cwtl
push
test
dec
loope
test
jge
xchg
std
adc
sbb
push
fsts
add
pop
add
mov
sub
loopne
fnsave
fcoms
mov
dec
sub
cmp
lcall
push
pop
xchg
pop
ret
or
jmp
add
aam
dec
push
dec
or
daa
sbb
jge
mov
and
inc
cwtl
jmp
push
dec
dec
jg
push
push
pop
mov
testl
cmp
push
cli
ljmp
xchg
in
dec
movsb
xchg
hlt
add
push
leave
lods
sarb
xor
mov
and
mov
jb
js
xchg
loop
sub
cli
out
add
fimull
idiv
adc
fbld
scas
mov
add
mov
dec
dec
cmp
sbb
inc
jle
dec
xor
fnstenv
pop
mov
dec
ljmp
dec
push
pop
fwait
push
jo
out
pop
std
cmc
aam
inc
mov
xchg
imul
and
cmp
pop
or
test
out
lret
movsb
xchg
imul
je
data16
mov
popa
repnz
sub
xchg
aaa
dec
cmp
fcomip
mov
pop
or
xchg
mov
test
adc
jns
ret
les
or
sub
mov
repz
push
mov
push
cmp
movsl
add
mov
aad
mov
jl
js
sub
or
and
cld
test
je
sbb
and
jne
push
roll
dec
in
mov
mov
pop
les
xchg
xchg
jbe
ret
mov
mov
ror
std
push
scas
fs
pop
pop
xchg
popa
aad
mov
cli
ja
xor
out
loop
jecxz
leave
mov
jp
push
imul
ss
dec
xchg
push
push
add
repnz
pop
and
cltd
pop
push
pop
rcrl
test
loopne
jmp
shr
mov
cs
mov
leave
sbb
mov
in
and
fs
jo
xchg
dec
and
orb
add
out
stos
mov
lcall
mov
scas
pushf
mov
insl
dec
xor
xchg
stos
mov
arpl
mov
sub
add
rcrl
test
and
mov
dec
or
in
ret
ljmp
in
lock
popa
fistpl
stos
dec
adc
ret
loope
nop
scas
int3
mov
lea
inc
jg
cld
pop
scas
fldenv
loope
out
and
movsb
movsl
loope
inc
dec
xchg
sub
pop
sbb
lcall
shr
adc
faddl
sbb
cmp
add
loop
jp
sar
cmp
mov
or
push
mov
mov
cmp
fmuls
les
push
push
cli
push
xchg
arpl
insl
loope
mov
sbb
mov
sub
cmp
sbb
popl
inc
pop
dec
pop
pushf
mov
and
inc
xchg
mov
mov
shll
lock
and
shl
mov
jge
cmp
loopne
lahf
lods
into
mov
mov
inc
ds
cmp
iret
pop
mov
into
pop
nop
jg
pop
fnstenv
push
in
lock
xchg
insb
push
mov
mov
jmp
imul
addb
sbb
ret
mov
dec
shll
mov
iret
aas
mov
ds
test
test
adc
bound
sub
cld
fstpl
push
test
ret
fnstenv
in
xorb
call
add
or
test
inc
adc
jl
inc
or
xor
add
cmp
jb
and
mov
repnz
stc
fildll
jb
insl
enter
mov
jl
lahf
pop
cmp
outsl
mov
mov
jno
ds
cli
push
mov
cmc
in
push
outsl
dec
xor
aas
pop
push
out
and
jo
sub
insb
rclb
int
shrb
push
call
sbb
xchg
push
or
pop
push
rorb
cmp
xchg
or
movsl
xchg
pop
adc
pop
test
fdiv
fcomps
cmp
adc
mov
out
clc
cmc
ret
scas
pop
jle
loope
cs
push
rorl
out
in
test
or
loope
pop
mov
jo
and
cmp
adc
push
ret
jno
outsl
lock
aam
rclb
sub
fbld
clc
cmp
mov
bound
jg
mov
mov
push
mov
cs
mov
mov
pop
popf
jns
sbb
xor
cmp
or
cli
mov
fsubs
enter
jns
mov
push
push
out
ljmp
hlt
mov
xor
shrl
push
push
outsb
outsl
sbb
les
dec
fldt
add
je
inc
cli
mov
inc
pop
leave
pop
jno
add
push
sbb
mov
iret
adc
fwait
mov
push
push
sbb
daa
shrb
add
xchg
movsb
add
inc
sbb
cvtps2pd
or
in
or
cmp
push
pop
jns
bnd
rcl
mov
sbb
lock
jle
lock
cmp
cmp
mov
cmpl
push
add
sbb
stos
mov
mov
repz
imul
dec
out
adc
mov
and
jmp
xchg
bndldx
imul
dec
insb
dec
pop
mov
jmp
dec
pop
dec
mov
out
jns
mov
or
jne
sbb
fabs
jecxz
dec
addr16
pusha
push
arpl
jae
cmpsb
insl
leave
jne
add
push
sub
cmp
pop
sbb
cmpsb
mov
ret
leave
adc
arpl
cwtl
hlt
ds
hlt
push
fmuls
pop
mov
rolb
xchg
cld
cltd
sbb
fldl
aas
sbb
lods
xor
ret
cld
mov
imul
xchg
repz
rcl
es
cs
aas
data16
dec
sbb
sbb
in
sahf
shlb
jge
sar
fcmovne
ja
or
jb
cmp
sbb
enter
arpl
mov
repnz
xor
idivl
jo
std
icebp
loop
mov
mov
fs
daa
dec
enter
jl
jp
jae
cmp
loopne
xchg
xchg
je
mov
push
je
push
xchg
fcmovnu
js
leave
enter
xor
cmp
sti
push
inc
fistl
and
mov
mov
cltd
or
pop
scas
mov
adc
sub
and
adc
mov
imul
jae
out
push
push
fs
sub
sub
mov
repnz
outsb
pop
xchg
stos
add
dec
add
js
mov
ds
mov
mov
dec
pop
mov
cwtl
rorl
subb
xchg
mov
ficoml
mov
mov
iret
or
shr
lods
adc
and
xor
aaa
test
pop
jae
pop
mov
pop
and
push
test
sbb
pop
jle
lcall
dec
imul
lods
xchg
cmp
jecxz
popa
pop
jecxz
xor
aas
call
and
popa
lods
repnz
sub
imul
push
sahf
add
cmp
xor
lods
sbbb
cli
mov
out
std
sbb
add
xor
les
xchg
jnp
repz
add
addr16
divl
outsl
pop
loope
aam
fisttpl
xchg
test
dec
xor
aas
call
push
and
xchg
call
mov
push
in
mov
fildl
sbb
sub
pop
xchg
repnz
inc
push
out
jmp
mov
sub
add
stos
push
pop
cmpsl
fildl
jle
or
pop
adc
fisttpl
shrb
or
pop
push
cmp
js
push
xor
fnsave
cs
sti
nop
add
mov
push
pop
fmuls
push
out
ds
arpl
out
and
data16
das
std
popa
fists
call
mov
aaa
lcall
xchg
sub
and
xchg
jae
scas
mov
test
stc
fsubrs
rcr
mov
scas
jno
shll
shlb
jno
xchg
add
mov
out
in
das
cmpsb
jmp
aad
test
xchg
test
xor
jp
dec
jmp
clc
les
sub
xchg
or
aaa
adc
dec
sar
in
clc
in
addb
out
lds
push
sbb
sahf
orb
inc
sub
pop
mov
lods
mov
sbb
loope
and
sbb
xchg
jp
xchg
add
cld
xchg
xor
cltd
xor
inc
das
and
mov
loope
and
in
imul
mov
in
adc
mov
dec
insb
push
mov
pop
jo
mov
popf
add
and
dec
xorl
ja
mov
cmc
cmpsb
les
xchg
scas
xchg
adc
jno
lds
jnp
orb
xchg
cmp
inc
in
iret
inc
fwait
dec
rcl
xor
add
bnd
imul
je
pop
push
clc
std
lahf
imul
das
fs
addr16
loopne
loopne
add
test
xor
pop
dec
les
sbb
test
sarl
mov
es
sub
ljmp
cmp
dec
inc
add
and
jnp
and
movsl
mov
adc
mov
sub
idivb
mov
xchg
loop
jmp
mov
fcmovnb
mov
out
fisttps
cmp
es
sbb
push
jmp
aam
lods
sbb
or
sbb
push
addb
test
push
pop
mov
jno
loop
lcall
out
les
rclb
in
sub
iret
mov
or
sbb
xorb
or
jl
cltd
xor
sub
loope
in
int3
mov
push
fyl2xp1
cmpsb
lret
test
mov
cmpsb
dec
mov
cmp
addr16
mov
clc
ds
scas
mul
lock
cmp
jnp
xchg
stos
adc
mov
adc
push
int3
lock
fildll
xor
mov
and
add
cld
mov
dec
js
inc
or
jmp
out
adc
jnp
mov
mov
les
int
jp
lret
pop
lods
dec
inc
mov
cmp
jns
fcomip
pop
inc
into
mov
imul
pop
fsubp
push
int
xchg
mov
frstor
inc
inc
pop
cltd
adc
rolb
mov
or
mov
add
lcall
int3
jg
mov
adc
loop
fldcw
dec
in
add
mov
jecxz
xor
and
insb
push
into
aaa
jne
pop
push
mov
xchg
pop
fnsave
mov
jb
leave
int
dec
mov
test
lea
xor
mov
xchg
rolb
fbld
push
cmpb
pop
inc
jns
stos
push
fisubrl
jle
sbb
shll
mov
pop
sub
adc
cmp
negb
jno
pop
inc
iret
jg
xchg
mov
movaps
pop
sub
cld
rep
mov
jecxz
and
push
sbb
bound
dec
adc
mov
dec
mov
hlt
aad
xchg
xchg
gs
or
or
test
loope
dec
je
dec
sbb
fstpl
out
out
sti
int
and
inc
jae
cs
and
fisubrs
mov
mov
cld
sub
ja
loope
fbld
push
or
jae
and
and
and
out
sbb
cmp
mov
in
xchg
lcall
rolb
nop
jnp
fldcw
imul
popf
jns
insl
repz
ljmp
xchg
cmc
out
div
test
movsb
adc
mov
push
cmp
adc
outsb
cmpb
add
jmp
imul
hlt
dec
ret
and
cmp
mov
xchg
mov
adc
inc
ret
sub
or
pop
pop
and
jae
dec
sbb
jns
adc
push
cmp
mov
cltd
dec
shlb
aas
sub
scas
aad
int3
sub
fdivs
fwait
pushf
movd
jmp
ret
call
ficompl
pusha
adc
movsb
and
push
nop
in
xorl
xchg
test
jb
xor
sub
xchg
notl
adc
in
mov
sarl
pusha
sub
cld
insl
stc
push
cmpl
xor
fbstp
fidivl
dec
pop
insl
dec
call
dec
inc
lds
jno
dec
shlb
push
fadds
nop
dec
mov
pop
xchg
mov
xchg
mov
cmp
pop
dec
aaa
sbb
mov
cwtl
out
sti
test
jae
fcmovb
push
rcll
jg
mov
shlb
mov
ret
inc
xor
out
jne
push
pop
sub
pop
xchg
inc
sbb
test
movsl
jmp
and
add
pop
mov
rol
lcall
loope
imul
and
test
popf
mov
jnp
mov
les
popf
aam
xchg
out
pop
add
popf
mov
xchg
mov
mov
jecxz
push
shr
mov
pusha
ljmp
dec
inc
adc
shlb
cli
push
cs
xor
push
push
pusha
sub
or
sbb
inc
mov
xchg
or
in
mov
popl
rol
sub
shrl
push
icebp
add
ficompl
jb
add
mov
lahf
push
lret
insl
xorb
ror
fistps
jge
cmp
xchg
ja
pushf
dec
dec
or
repnz
out
sbb
xchg
hlt
ror
add
stc
lea
jmp
lcall
xchg
jo
sub
ljmp
add
mov
je
repz
push
iret
mov
sahf
cltd
lret
pusha
or
in
sub
out
js
xor
push
in
nop
lock
sub
mov
xor
loope
xchg
test
and
cmc
mov
gs
insl
jecxz
cmpsl
or
imulb
mov
shrl
bound
enter
sbb
and
dec
loope
loop
mov
loop
xchg
jo
xor
test
ret
mov
jbe
outsl
add
cmp
and
mov
fstl
inc
out
insl
push
pop
rcrl
pop
js
sbb
sub
sahf
aaa
adc
push
in
out
mov
jecxz
das
icebp
dec
add
or
lahf
sar
shrb
es
xchg
push
movsb
cmpl
xor
sti
jmp
clc
mov
pop
stos
in
and
jp
push
or
out
sbb
in
mov
and
dec
cwtl
push
fdivp
lds
out
add
pop
pop
xchg
inc
jp
subps
enter
jnp
dec
mov
mov
test
dec
pushf
lret
sub
pop
xchg
sub
shll
lock
mov
mov
ss
xor
gs
or
inc
sub
lcall
pop
pop
add
sbb
push
stos
pop
jp
imul
not
addl
mov
into
mov
push
test
test
or
addb
add
in
inc
cmp
cs
inc
xchg
jecxz
mov
stos
loope
inc
adc
stos
cmp
imul
enter
insl
test
mov
cmpsb
lock
mov
and
xlat
mov
and
out
pop
mov
repnz
xor
lds
mov
leave
movsb
inc
faddl
sub
xor
inc
push
adc
outsb
mov
and
subb
adc
mov
or
inc
cmc
rclb
xlat
pop
std
mov
pop
jl
mov
sahf
in
sub
add
rcrb
fwait
pop
int
sub
mov
fisubl
mov
int
xor
xor
push
mov
add
inc
add
ds
push
insb
lds
inc
scas
movsl
xlat
iret
das
pop
cmp
popf
inc
jno
pop
jmp
cld
push
jne,pn
lcall
mov
cmp
fwait
dec
in
push
mov
mov
fisttpll
daa
fcomps
mov
xchg
sub
jmp
sub
gs
lock
adc
lock
das
xor
xchg
xchg
lcall
fs
shrl
ret
and
sbb
xchg
fimuls
jns
stos
dec
pop
lcall
bound
push
mov
or
out
jns
jle
mov
pop
daa
fstl
pop
or
mov
inc
dec
dec
push
cmp
stc
inc
inc
inc
clc
or
nop
cmp
pop
jns
inc
mov
enter
add
cmp
cmp
cmp
dec
loopne
imul
sub
int3
enter
es
pop
xchg
mov
repz
mov
and
out
dec
cmpsl
xor
pusha
lahf
ret
out
shll
xchg
in
ret
push
mov
push
pushf
pop
mov
roll
push
adc
cltd
lret
inc
gs
push
push
out
jmp
int3
and
stc
notl
cmp
pop
test
dec
dec
add
jge
loopne
mov
decb
out
cmp
inc
push
fidivrs
cmp
icebp
arpl
push
pop
xor
int
aad
mov
int3
or
or
mov
je
adc
lcall
jp
dec
mov
cmp
adc
sub
cmp
cld
add
jb
or
mov
and
ret
and
call
addb
mov
xchg
or
mov
sahf
add
push
popf
push
mov
push
inc
popa
std
mov
sti
mov
cs
ja
fidivs
cmp
out
dec
jg
cli
push
push
jg
cld
pop
dec
shl
stc
lock
test
sti
mov
push
int
pop
sti
mov
stos
stc
outsl
mov
adc
das
cld
mov
out
pop
clc
sbb
mov
xchg
repz
call
filds
mov
outsl
push
cld
jb
idiv
xchg
std
pop
dec
in
mov
mov
fbstp
mov
scas
push
cmp
sbbb
mov
test
jnp
divb
std
pop
xchg
bnd
cwtl
xchg
lock
out
icebp
ja
sti
lret
cwtl
mov
push
imul
push
jle
loopne
shrb
scas
cmp
mov
jnp
outsl
or
ja
iret
jmp
jg
push
das
push
dec
cmp
es
push
gs
xor
mov
adc
inc
jns
xchg
ljmp
stc
sti
jbe
dec
test
jge
xor
int
inc
push
test
adc
jmp
jnp
rcll
dec
mov
test
pop
rcrb
push
scas
inc
js
hlt
fsubr
push
ret
test
jb
nop
sbb
test
jbe
test
test
or
jmp
test
mov
es
das
or
xchg
dec
ljmp
les
dec
cmp
data16
and
sub
js
cli
pop
pop
in
xor
jg
inc
js
cmp
mov
mov
push
xchg
xor
in
gs
mov
enter
je
and
sarl
mov
cld
jo
ja
cld
or
subb
in
cmpsl
out
dec
icebp
jae
les
aam
mov
out
push
data16
es
jge
scas
nop
icebp
cmp
jg
jle
mov
aad
cmpsl
and
int3
pusha
enter
cmp
sub
lods
popf
std
sbb
ss
stos
ljmp
mov
movsl
cwtl
sub
test
stc
push
xor
add
pop
loop
xlat
aas
iret
sbb
lock
mov
in
pop
push
and
sarb
pop
movsl
imul
int3
xchg
sub
dec
ljmp
adc
mov
int3
outsl
test
push
ret
les
pop
mov
ds
push
inc
notb
push
jl
and
adc
jle
dec
and
jg
or
add
scas
push
jecxz
fistl
icebp
scas
add
pop
mov
leave
pushf
push
icebp
push
rcl
add
scas
cs
loopne
jb
ret
inc
icebp
lds
or
scas
fs
arpl
cmpsl
les
insl
ja,pn
cld
mov
sbb
push
sahf
mov
aaa
pop
sub
pop
cmp
clc
shl
pop
stc
ljmp
xor
hlt
dec
add
dec
mov
shlb
mov
vpcmpeqd
sahf
pop
lcall
push
pop
mov
pop
lret
outsl
push
data16
int
adc
xchg
ret
cli
adc
faddl
lods
mov
mov
pop
pop
mov
pop
sbb
mov
shr
sbb
xchg
mov
jb
cwtl
cltd
mov
inc
push
pop
stc
mov
cmp
dec
cmc
es
cs
dec
mov
ss
cmp
lods
test
xorl
jg
sbb
or
mov
push
sahf
push
cmp
adc
inc
stc
sarb
shr
jmp
or
cli
cltd
les
lret
mov
out
xchg
push
xchg
and
cmp
lahf
iret
daa
lea
in
cmp
gs
sbb
push
clc
xchg
mov
sub
and
jae
int3
and
inc
jo
xchg
mov
movsb
pop
scas
jo
not
subl
leave
sub
jb
outsb
and
adcl
xor
inc
mov
cld
xchg
cmpl
out
fwait
cli
test
mov
mov
fldl
subb
jge
jmp
dec
sbb
pop
mov
mov
cmp
add
xchg
out
popa
fcmovnb
cmpsb
leave
xor
sbb
insb
aam
mov
lahf
push
xor
sbb
lods
mov
dec
jns
sbb
jne
lods
inc
inc
adc
push
insb
fcomps
lods
mov
iret
js
inc
push
daa
lcall
fnstcw
push
popa
stos
and
iret
call
mov
std
int3
rcrb
push
cli
stc
cmp
fidivrl
sub
movsl
pop
push
shl
xchg
cmp
sbb
pop
out
std
add
dec
xor
decb
loopne
insl
jg
pop
and
sbb
sbb
xchg
mov
les
ret
jno
pop
sbb
or
aaa
jne
out
pop
leave
nop
mov
cmpsl
or
daa
fistl
lea
and
push
xchg
cmpsb
das
inc
std
adc
pop
shll
stc
loope
loop
mov
inc
jl
adc
adc
bound
mov
icebp
sahf
jg
jecxz
push
sbb
arpl
movsb
jbe
cmp
fisubs
add
ja
clc
test
adc
nop
sub
mov
xchg
pusha
pop
jnp
sti
dec
je
test
aaa
cs
add
push
jge
jo
imul
mov
bound
call
imul
out
jl
xor
mov
dec
sub
ficompl
insb
cmp
outsb
lea
lods
or
les
out
ret
sub
out
js
and
inc
jbe
popa
fimuls
mov
pop
mov
sub
fildll
push
sbb
icebp
dec
mov
adc
jge
pop
push
es
cmp
and
dec
cmp
aad
aaa
out
cmp
jns
sbb
movsl
mov
std
adc
add
jecxz
ss
cwtl
fisttps
cmp
aam
cmc
jge
pop
and
xor
pop
lret
fcmovnb
mov
lods
xor
xor
and
or
jno
fisttps
or
jle
mov
aaa
cmpsl
imul
jl
cmpsb
movsb
push
or
sub
fwait
pop
jno
lea
xor
fldl
push
in
mov
dec
cmp
fimuls
jp
mov
add
test
mov
adc
stos
imul
mov
aam
add
mov
add
sti
aas
pop
cmovne
sarb
sbb
mov
test
sahf
and
mov
je
mov
loop
mov
jo
xorl
adc
dec
rol
mov
add
pop
jl
mov
je
repnz
pop
sarb
push
insl
sbb
mov
cmpsb
das
xchg
lea
cltd
aas
idivl
xor
sti
mov
mov
fadd
dec
gs
call
daa
xchg
scas
fdivr
pop
sbb
mov
fwait
ja
add
mov
adc
leave
push
mov
cs
sbb
mov
dec
push
or
das
shll
sub
sub
imul
sbb
adc
ret
adc
rcl
lahf
mov
std
inc
ljmp
cld
xor
test
repnz
mov
adc
or
inc
push
sub
js
add
push
jle
insl
lock
push
js
inc
adc
and
test
dec
xor
inc
iret
cs
and
pop
pop
add
add
xor
mov
jo
pop
add
lods
and
ret
movsl
jl
xor
loopne
pop
push
adc
enter
outsb
mov
shr
icebp
out
out
out
je
fidivrs
push
ficompl
xor
mov
mov
mov
stc
repnz
push
movl
jmp
in
add
mov
leave
push
call
shr
leave
pusha
mov
pop
js
or
scas
jmp
cmc
int
cltd
mull
add
fcmovbe
jae
inc
jg
outsl
cmc
cmp
cmc
rcll
test
and
or
cltd
add
sahf
daa
cs
sbb
insb
sbb
movsb
push
cs
cli
inc
xchg
mov
push
fistpll
loop
pop
ficompl
push
std
sub
cwtl
clc
testb
xchg
xchg
or
or
pop
sub
ret
cmp
loop
lret
andb
and
outsb
sahf
inc
push
rolb
add
push
push
sub
xchg
repz
cmp
add
out
sub
sbb
or
sbb
outsb
dec
out
jmp
push
mov
mov
mov
fsubs
mov
ret
pop
call
test
xchg
lret
xchg
mov
test
outsb
cld
sbb
pusha
je
movsb
or
jno
add
test
jmp
pop
outsb
ja
pop
dec
scas
xor
push
xor
inc
add
adc
push
call
dec
xor
outsb
jl
idivl
adc
mov
repz
mov
adc
pusha
enter
push
jmp
das
sub
repz
pop
cld
dec
outsb
add
cmp
int3
imul
xor
inc
adc
fidivl
repz
jno
loope
and
jns
mov
cmp
or
dec
inc
test
xchg
push
push
add
jnp
sarb
push
stc
xor
inc
iret
test
mov
lret
frstor
repnz
hlt
jns
jge
xchg
xchg
imul
xchg
pop
inc
sbb
mov
or
loop
sbb
gs
mov
jno
add
std
lock
xor
sub
movsl
movsl
enter
dec
les
push
popa
into
push
ljmp
faddl
and
sub
lahf
sahf
xlat
pop
rorl
push
je
cwtl
imul
out
mov
iret
or
xor
ja
sahf
mov
lds
mov
mov
mov
jl
pop
out
mov
mov
pop
aad
aad
scas
push
cld
je
ffreep
jg
cld
adc
push
dec
lea
imul
mov
jle
aad
push
jmp
adc
outsl
mov
outsl
rclb
xor
sub
pushl
pop
jae
scas
push
jg
jnp
clc
es
sub
and
movsb
mov
jnp
or
fbld
sbb
xor
xchg
mov
sbb
xor
jno
loope
fwait
movsb
or
xor
add
pop
daa
shll
dec
jbe
imul
test
rol
scas
jno
push
lcall
mov
and
test
idiv
sti
pop
jae
fidivs
cmp
out
fdivrl
je
cmp
repnz
stos
push
mov
push
fwait
inc
cld
leave
lods
pop
cld
xchg
sbb
lock
pop
outsl
jl
add
fildl
xchg
ljmp
adc
pop
mov
adc
lcall
cli
cmpb
cld
sbb
xor
jae
mov
mov
dec
dec
dec
add
lret
aas
les
test
sbb
pop
cmpsl
jae
mov
fnstsw
push
or
fwait
fwait
or
daa
or
shll
jecxz
cmp
inc
jne
or
cmp
clc
mov
imul
push
adc
arpl
add
sbb
jne
xor
mov
test
cmpsl
adc
sub
stos
adc
cmpsb
sbb
push
jbe
inc
faddl
adc
sub
ficoml
lock
imul
in
dec
cmc
std
loopne
jmp
xchg
mov
out
push
mov
rcll
cmpsb
test
dec
cmp
shrl
mov
mov
push
sahf
data16
and
in
into
fists
jae
and
xor
push
or
sbb
stc
and
cmp
cmp
imul
jae
stos
mov
ds
sbb
fsubs
cmp
pop
inc
je
sbbl
jge
xchg
sub
xor
out
push
push
mov
sub
sub
hlt
push
push
lock
cld
sbb
or
notl
psrad
insl
add
mov
mov
mov
mov
mov
fmuls
xor
lods
or
sub
adc
xchg
cmpb
xchg
xlat
shrb
sbb
pop
movsb
lahf
add
mov
daa
sbb
jmp
cld
xlat
inc
pop
jno
aad
jns
clc
mov
lods
lds
loop
mov
cmp
xchg
push
icebp
sti
jb
sub
ret
cld
jl
aam
mov
add
xchg
in
xor
pop
adc
adc
cmp
pushf
cmp
pop
outsl
and
cmp
mov
push
mov
jmp
jno
lret
rcll
fisubl
sub
dec
int3
das
loopne
imul
xchg
xor
sub
ret
xor
xchg
loope
and
sub
jno
adc
pop
pop
mov
sub
add
cmpsb
jb
leave
adc
loopne
cmc
push
dec
mov
je
ja
fists
adc
mov
add
sub
mov
sbb
lcall
push
inc
add
ljmp
or
int
mov
jbe
inc
imul
xchg
xchg
stc
mov
cmp
xchg
mov
je
mov
xlat
adc
mov
inc
mov
hlt
mov
fidivrs
adc
mov
push
outsl
lods
fidivl
mov
cmp
mov
scas
xor
mov
inc
pop
push
mov
out
adc
push
mov
xor
ds
imul
js
ficoml
dec
ret
popa
in
jns
add
test
inc
push
pop
test
xor
fsubl
fs
jno
dec
inc
bound
insb
sahf
pop
or
cmp
lock
jg
jmp
sbb
insl
cltd
push
add
lock
ja
stos
lds
adc
leave
les
push
aad
sbb
jmp
roll
imul
iret
push
repz
dec
mov
rcl
andb
inc
rclb
es
cld
popa
mov
repz
and
push
movsb
aad
inc
mov
pop
iret
pop
imul
sbb
pop
or
mov
loopne
movsb
sub
push
push
fdiv
cli
add
ds
add
mov
pop
jl
stos
xor
into
sub
jmp
call
popf
xor
mov
pop
test
mov
adc
dec
mulb
mov
aas
jnp
adc
xchg
inc
sub
cmp
lcall
hlt
and
into
fwait
sub
test
jns
cld
push
in
jno
mov
xcrypt-cfb
cmpsl
bound
test
push
outsl
pop
cltd
mov
sahf
adc
js
jmp
aas
in
into
sub
sub
orb
push
ljmp
dec
sbb
pcmpgtb
rcr
adcb
add
mov
gs
mov
pushf
bound
aas
ja
aam
movsl
push
out
bnd
clc
xor
rol
xchg
mov
pop
pushf
ror
inc
lahf
lds
adc
adc
mov
pop
xor
dec
mov
dec
adc
xor
loopne
or
sbb
mov
bnd
lods
mov
popa
pop
ss
mov
stos
imul
push
cmpsl
out
inc
cmp
lret
sti
subb
pop
test
add
faddp
jmp
sub
cmp
fiaddl
add
cmp
sarb
pop
dec
mov
ss
adc
stc
addb
xchg
fwait
or
loope
cltd
addl
stc
mov
or
mov
pop
fnstsw
and
insl
fadds
dec
lcall
adcb
mov
popf
cld
loopne
bound
sahf
je
push
pop
and
jle
pop
cmpsb
sbb
xchg
push
inc
cmpsb
and
testl
push
imull
mov
scas
shll
stos
mov
jbe
push
rorl
pop
dec
xchg
and
std
add
adc
ljmp
sahf
lods
rolb
ss
or
dec
cmpsl
inc
nop
push
push
xchg
ljmp
cmp
aaa
ljmp
cmp
push
ficompl
ja
cmp
mov
inc
mov
pop
loop
movsb
test
dec
out
es
jp
mov
dec
jle
testl
je
cltd
sub
adc
sub
les
movsb
or
dec
outsb
fistps
sbb
pop
jns
popa
or
or
sub
xchg
mov
lret
lock
imul
mov
lcall
sti
jns
push
xchg
mov
mov
mov
inc
jae
orl
pop
inc
lock
andb
out
and
out
lds
dec
pop
or
jle
inc
mov
push
out
sti
and
jp
push
push
lods
jns
push
imul
orl
cmp
clc
xor
je
xor
in
mov
incb
dec
push
mov
inc
push
out
xor
push
or
cmpsb
sbb
mov
pop
daa
pop
pop
push
test
jge
lret
jge
mov
add
es
adc
std
dec
mov
das
imulb
dec
popa
adc
xchg
adc
in
mov
data16
pop
cmp
cmp
and
sti
push
lret
cmp
cmp
frstor
dec
testl
inc
push
mov
add
rolb
scas
out
aam
mov
hlt
roll
adc
loopne
and
hlt
shll
jno
xor
sarl
or
xor
cmp
xlat
int3
test
inc
int3
shlb
enter
sbb
mov
je
mov
fisubl
ror
sbb
mov
ja
dec
mov
cli
pop
add
daa
aas
inc
xchg
adc
add
je
xchg
popf
dec
adc
push
add
jnp
xchg
push
mov
cli
pop
dec
bound
pop
sbb
push
sbb
mov
shl
add
mov
push
add
orl
pop
lds
int
sbb
jmp
sub
mov
in
icebp
test
stc
fistl
imul
inc
enter
jge
stos
sub
cmp
data16
es
rcll
pop
mov
lahf
daa
cmp
xor
out
cmp
pop
dec
ret
add
ja
pop
outsl
push
push
enter
sbb
pusha
int3
sbb
push
incl
ds
add
xchg
or
icebp
cltd
aas
mov
sbb
enter
ss
loopne
test
lahf
in
addr16
arpl
jmp
test
cmp
lret
test
es
imul
sbb
xlat
hlt
and
cmpsl
imulb
mov
mov
std
sub
mulb
mov
pop
add
arpl
mov
insb
data16
mov
adcb
imul
int
lds
jo
inc
jno
pop
jg
fwait
stos
pop
es
push
cmpsb
test
xchg
arpl
or
nop
cmp
ret
cmc
pop
dec
inc
jp
ljmp
sub
add
xchg
jo
out
jns
dec
lret
test
mov
jle
pusha
jmp
adc
outsl
mov
sub
data16
and
movsb
rcrb
rcrb
jne
and
inc
mov
xchg
dec
or
mov
in
addl
out
fisttps
xorl
and
enter
je
je
push
mov
loopne
or
xchg
ja
icebp
subb
inc
sti
push
or
jae
gs
add
and
xchg
push
imul
and
je
cmp
loope
pop
movsl
ss
push
push
pop
imul
xchg
xchg
adc
sbb
or
push
mov
fs
repz
xchg
cmpsb
push
shrb
sub
push
lods
jbe
aam
jo
lds
push
inc
scas
jg
cmp
lea
popf
test
xchg
es
adc
ret
das
push
or
bnd
hlt
inc
mov
shrl
add
clc
fwait
sub
sets
cmp
cmp
pushf
and
mov
push
mov
dec
sub
mov
leave
cmp
arpl
xchg
pop
adc
inc
and
xorl
or
negl
jl
fistpl
dec
sub
sub
or
ds
cld
stos
push
mov
clc
aad
xchg
inc
call
sar
jns
lods
into
and
test
add
adc
in
xchg
jmp
scas
mov
jge
lods
mov
lret
stos
leave
xor
add
dec
lea
and
pop
loop
addr16
or
mov
mov
dec
shr
push
pop
lock
jg
mov
rclb
cld
fs
mov
pop
xor
or
push
jecxz
xchg
out
add
sbb
int3
mov
pushf
and
dec
cltd
xor
lret
fisubrl
and
push
test
dec
daa
ss
jecxz
test
fdivs
add
push
jne
push
mov
outsb
xor
push
jle
push
inc
xlat
and
cli
imul
jg
push
mov
mov
inc
adc
sbb
push
fidivl
xchg
idiv
and
add
xor
jbe
dec
std
adc
and
xchg
mov
test
add
sbb
aas
vpsrlw
clc
pop
inc
jle
stc
mov
je
int
mov
arpl
bound
icebp
inc
stc
loop
sub
sub
push
das
mov
mov
xor
sub
xor
inc
xlat
addr16
fwait
inc
push
sbb
push
and
jl
or
jle
stc
iret
cmp
arpl
stc
jp
or
sbb
iret
xor
out
push
icebp
mov
pop
imull
scas
jmp
idivb
fistpll
push
pop
lret
divl
mov
and
inc
mov
dec
lods
cmp
inc
mov
in
cs
mov
movsl
sbb
xchg
lret
sbb
sbb
pop
xor
test
mov
push
rcl
push
int
pop
test
pop
adc
test
pop
scas
or
dec
das
mov
mov
mov
aad
scas
pushf
push
sub
std
add
iret
mov
sbb
mov
dec
scas
movb
lds
sbb
stos
daa
ret
sub
mulb
icebp
sbb
movsl
dec
jg
jne
adc
xor
pop
cmp
mov
movsb
loopne
lahf
mov
mov
xchg
test
jns
in
aam
pop
movsb
and
call
xor
test
cmp
ds
inc
or
sbb
test
shll
sti
and
jns
add
int
add
xchg
sbb
adc
and
lock
scas
js
push
hlt
inc
rorb
out
test
mov
call
push
xchg
xchg
inc
xor
and
sub
pop
push
cmp
jecxz
push
push
shrb
in
cmc
insb
mov
stc
cmp
jecxz
push
aaa
xor
xor
mov
iret
sahf
adcl
jge
ljmp
je
xchg
push
push
ret
aad
jge
xchg
scas
inc
mov
xchg
lahf
push
mov
in
jb
in
test
sub
pop
cmp
adc
or
add
sub
jecxz
mov
mov
fnstenv
inc
push
jg
into
in
and
std
cwtl
and
push
adc
rorl
fstpl
test
add
pop
sub
xor
shlb
mov
adc
mov
adc
popa
cmp
mov
or
cmp
mov
mov
stc
sub
stos
arpl
insl
loope
inc
jp
sbb
sbb
adc
in
cmp
ljmp
ss
add
xlat
pop
pop
mov
adc
sti
adc
pop
mov
xchg
insb
cs
jae
addr16
push
aas
inc
inc
pop
inc
jb
pop
aas
push
fcmovnb
das
lret
sub
adc
dec
jle
loop
cmp
outsl
test
leave
in
pop
jne
inc
xchg
push
pop
aas
rdpmc
into
push
xchg
jno
repnz
insl
fwait
xor
out
jns
sahf
push
into
mov
and
out
daa
les
and
jle
jmp
gs
pop
test
xchg
test
in
sub
or
dec
fcoml
pop
or
out
clc
cmpsb
bound
adc
addb
stc
cmp
xor
dec
cwtl
rcll
clc
movsl
xchg
je
pop
or
jnp
stos
loopne
and
push
lea
test
mov
std
inc
lds
je
push
loopne
fldt
sub
fildl
rorl
pop
icebp
rorb
cmp
addl
scas
xchg
pushf
pop
and
jns
in
into
and
sbb
dec
push
in
and
cmp
shrl
add
idivl
cmpl
popa
fstpl
cmp
inc
enter
ret
lret
mov
mov
xlat
imul
and
mov
nop
cmp
movsb
rcll
mov
scas
pop
inc
inc
enter
call
push
fstps
in
andl
dec
cs
stos
inc
lret
xor
mov
cld
into
and
cwtl
out
imul
mov
popa
es
cmc
pushf
push
inc
insb
mov
lret
int3
shrb
das
xchg
shrl
mov
sub
cmp
aam
loope
mov
dec
cmc
jge
stos
xor
ret
loope
mov
jg
ds
mov
xchg
inc
inc
pop
add
xor
call
mov
movsl
jecxz
data16
adc
sarb
pushf
add
idivb
leave
mov
leave
repnz
inc
push
repz
add
int
rcrb
call
or
or
mov
push
cmp
enter
jo
and
adc
sub
cmp
xchg
mulb
gs
add
sub
inc
adc
sbb
xor
push
pop
cwtl
push
in
loope
out
movntq
sub
aam
orb
mov
xchg
rcrb
outsb
shl
insb
mov
fs
nop
fs
adc
shl
ja
mov
mov
pop
enter
mov
adc
or
xchg
inc
arpl
add
pop
insb
fimull
nop
cwtl
xlat
aam
mov
jge
lcall
xchg
jne
in
rolb
leave
xchg
xor
jg
push
mov
xchg
outsl
shll
bound
push
push
mov
jge
imul
sub
sub
movsl
mov
add
adc
sbb
xchg
int3
adc
adc
sahf
jecxz
in
gs
mov
inc
aas
inc
jnp
ret
jge
inc
lahf
xchg
xor
mov
pushf
fisttpll
push
xchg
push
test
cli
adc
sbb
xor
iret
push
inc
addr16
xlat
into
ss
popf
ret
movsb
popf
aaa
ret
adc
jp
stos
popf
or
add
cli
dec
outsb
into
test
out
xor
or
int
hlt
in
xchg
roll
test
aad
push
es
int
push
faddp
jmp
jmp
es
stos
aad
enter
dec
push
xlat
inc
ficomps
or
test
subl
loopne
cwtl
ss
pop
cmp
add
lea
or
push
dec
xlat
rclb
mov
inc
push
dec
dec
addr16
into
jmp
das
imul
cwtl
inc
push
aad
pop
aas
daa
cmp
push
cmp
pop
addb
andl
push
mov
out
mov
mov
sub
push
add
cmp
loope
test
push
adc
inc
popf
pushf
pop
lcall
or
sbb
sbb
lret
inc
jo
imul
int3
sbb
or
frstor
xchg
mov
xchg
ret
pusha
pop
call
sbb
shll
jns
xchg
int3
mov
nop
hlt
mov
adc
inc
daa
shr
push
jo
mov
cmpsb
adc
in
lcall
icebp
mov
mov
push
js
ds
in
cs
mov
int
imull
pop
xchg
mov
push
inc
push
xchg
paddsw
sub
data16
cmp
mov
and
ds
jne
aaa
outsb
lret
sbb
mov
sahf
arpl
fistpll
popa
push
xchg
jae
adc
xor
lahf
sub
adc
pushf
scas
lds
or
adc
add
stos
sbb
ljmp
in
movsl
js
shlb
mov
lret
or
mov
pushf
inc
pop
pop
sti
jle
int3
lret
push
jb
add
out
xor
lcall
sub
fistpl
fdivr
dec
cmpsl
mov
push
mov
dec
insl
xchg
cwtl
lret
cs
scas
xor
es
je
xchg
jnp
lahf
and
add
sub
lods
cmp
mov
hlt
scas
lds
clc
sbb
or
mov
sahf
cli
push
notb
xchg
out
xrstors
in
stos
inc
stos
aam
sti
cmp
pop
out
mov
insb
add
mov
mov
sbb
shlb
mov
aam
addb
jns
pop
xor
aam
jbe
adc
pusha
int
push
xor
inc
sbb
inc
xchg
pop
push
aad
pop
mov
inc
pop
sub
sbb
ret
insl
push
sub
out
mov
or
add
adc
stos
cmpsl
cld
sbb
cltd
addr16
mov
xor
add
xchg
mov
mov
push
repz
cmp
xchg
mov
clc
sub
rcr
sbb
or
xor
mov
test
inc
test
lret
jb
adc
fisubl
cli
push
and
adc
faddl
push
pminub
add
sbb
push
xlat
das
or
xchg
or
add
sbb
in
or
mov
addl
out
popa
mov
movsb
neg
rorl
lods
sub
mov
jne
dec
sbb
jp
test
adcb
outsl
daa
fisubl
popa
and
sbb
dec
in
sub
cmp
in
jb
xor
and
xchg
jns
add
stos
xor
mov
stos
fst
notl
dec
clc
pop
out
fisubrs
xchg
pop
lods
jns
sub
fsubrl
mov
mov
sub
dec
xchg
jno
sbb
in
mull
mov
xchg
dec
dec
mull
push
pop
xor
or
mov
loopne
out
pop
lea
mov
mov
push
cwtl
xor
movl
dec
pusha
in
cmc
or
jb
rcrl
and
addr16
xchg
mov
data16
into
hlt
es
daa
pop
je
xor
push
sbb
inc
mov
xor
push
push
sbb
sbb
cmp
mov
lods
jg
mov
fistps
loopne
pop
mov
mov
add
loop
cld
mov
add
inc
mov
les
push
pop
push
test
aas
or
into
call
inc
mov
sub
ljmp
sub
sbb
dec
mov
dec
js
push
push
shlb
cltd
push
lods
fdivl
xlat
shrl
mov
pop
mov
aaa
mov
sbb
inc
jecxz
jno
push
sbb
jno
mov
mov
cwtl
pushf
jge
faddl
adc
mov
jbe
mulb
jecxz
push
xor
pop
jb
icebp
das
adc
mov
mov
ja
cmp
or
clc
pop
and
or
jge
xchg
cmp
dec
shlb
sbb
dec
icebp
mov
push
mov
fistps
sub
sub
xlat
mov
adc
mov
inc
arpl
and
les
dec
adc
fistps
inc
jecxz
mov
dec
adc
xchg
mov
jno
xchg
mov
xchg
fwait
mov
xchg
loop
and
push
pop
aas
sbb
fbld
push
cs
lret
stc
mov
repz
and
sbb
adc
test
add
inc
movsb
addl
ret
ret
les
mov
daa
mov
aaa
xchg
rcl
inc
pop
or
xchg
loopne
sub
out
pop
aaa
mov
xor
mov
xlat
stc
sbb
stc
jmp
pop
divl
stc
sbb
stc
jmp
pop
ja
cli
aas
jg
cli
aas
call
jmp
cld
ljmp
fwait
and
sub
add
fwait
mov
mov
aam
icebp
xchg
jo
ljmp
insl
ret
fwait
fcmovnb
add
insl
fsubr
clc
xchg
lds
push
add
mov
sub
add
sbb
test
fstps
push
xchg
push
fsubs
pop
arpl
inc
mov
test
pop
test
divb
test
mov
in
cwtl
mov
jbe
xor
sub
shlb
inc
ret
xor
cmp
mov
outsl
sbb
xchg
faddl
leave
in
jg
sub
or
xorl
les
push
pop
cmpsl
clc
adcb
cmp
insb
xor
xchg
imul
ss
or
inc
pop
add
in
int3
out
pop
pusha
push
mov
mov
xor
ds
fcoms
jnp
mov
xchg
xchg
mov
push
dec
hlt
lahf
dec
cmp
jl
and
mov
jne
cmpsl
push
xchg
mov
lret
mov
pop
into
mov
add
sub
enter
fwait
and
or
nop
scas
dec
call
scas
add
push
mov
mov
decb
hlt
rclb
rcr
xchg
fcmovb
scas
cmc
mov
aaa
call
lret
cmp
aaa
or
ret
dec
loope
loope
cli
xor
in
sub
inc
data16
jae
add
pop
mov
or
mov
dec
out
divl
xlat
negl
fisubrs
jne
or
mov
fcoms
mov
out
pushl
cld
pop
out
mov
aaa
fistpll
hlt
fstpt
pop
rcrl
clc
loope
and
inc
mov
jne
xchg
mov
cmp
pop
push
and
and
stc
bswap
loope
inc
dec
add
cmpsl
cmc
out
mov
sub
push
cmpsl
push
enter
sbb
inc
sahf
cld
or
sbb
or
roll
loop
sub
push
loope
push
aad
pop
mov
jecxz
push
ja
mov
mov
push
or
aaa
xchg
outsl
inc
scas
sub
inc
aaa
cli
outsb
daa
pop
dec
hlt
mov
fwait
mov
dec
gs
or
adc
xchg
inc
sub
outsb
mov
sti
loopne
scas
jp
and
adc
mov
cmp
inc
aas
inc
fsubl
iret
push
out
icebp
stos
ljmp
pop
jge
fsubp
imul
std
mov
cld
and
je
pop
mov
incl
adc
fimull
jae
or
repz
fdivrs
inc
cmp
mov
rcrl
jge
cmc
outsb
pop
pop
add
sbb
inc
negl
lods
and
testl
out
mov
xor
mov
push
adc
inc
int3
int
sbb
adc
push
mov
stos
pop
dec
scas
test
sub
shrl
mov
pop
imul
dec
xchg
rol
les
das
mov
jnp
call
es
repnz
in
mov
or
pop
jmp
inc
out
lret
hlt
outsl
jno
mov
out
sub
xlat
ret
cmpsb
sub
mov
out
or
cmp
mov
mov
insb
aaa
push
popa
jb
add
jo
jnp
not
cltd
jns
gs
jne
xchg
shll
sub
xchg
pop
pop
out
mov
cs
jns
jecxz
mov
movsl
test
int
loopne
aaa
test
hlt
jnp
imul
and
jmp
dec
xchg
jl,pt
add
and
pop
and
push
shll
outsb
add
push
jge
je
ret
sub
and
sub
cltd
lock
mov
mov
mov
ljmp
pop
and
sbb
les
int3
ss
pop
dec
js
mov
mov
xchg
xor
out
push
dec
xchg
lahf
sbb
sbb
leave
imul
jg
lock
imul
sahf
mov
lds
imul
jno
add
adc
add
gs
sbb
mov
adc
sub
out
add
imul
jge
pushf
out
sahf
xchg
mov
sarl
loope
and
rclb
cmovb
dec
mov
scas
jp
inc
push
shll
mov
dec
arpl
xlat
push
jmp
pop
out
je
mov
lods
arpl
pop
jns
mov
cltd
fiadds
cmp
push
out
icebp
sub
decb
xor
pop
xchg
and
or
sbb
cmpsb
mov
cmp
int
adc
js
mov
lret
xlat
stos
xor
pop
mov
les
scas
rol
or
pop
fdivr
sub
pop
xor
out
xchg
jl
outsl
lock
stos
sti
andb
ja
mov
push
mov
rorl
das
cmpsb
push
adc
push
jge
in
mov
mov
ret
mov
inc
stos
fwait
sbb
shl
inc
adc
cltd
sbb
mov
mov
cmp
shl
scas
sbb
data16
aad
je
aas
shl
mov
cmp
sub
mov
out
ja
mov
cmpsb
stos
movsl
xor
and
fsubrs
loopne
in
inc
std
add
jl
ret
scas
mov
mov
bound
jnp
out
sbb
push
and
or
or
jle
imul
std
fiaddl
adc
iret
and
adc
les
gs
mov
jmp
mov
into
jnp
data16
cmc
xor
xchg
xchg
scas
out
aas
loope
lods
negb
xlat
mov
xlat
or
xchg
push
pop
sub
orb
cmp
push
cld
add
inc
jns
jns
icebp
vpcmpeqw
mov
sbb
in
jp
pop
sub
jno
pop
jbe
xchg
in
popa
mov
dec
sbb
cwtl
mov
popa
sarw
or
or
ror
jo
fistl
stos
orl
lods
inc
pushf
cltd
lock
lock
cld
inc
mov
mov
push
xchg
aas
das
aad
pop
mov
aad
mov
inc
mov
imul
dec
aas
adc
inc
jmp
gs
loop
adc
fwait
stc
mov
jno
or
rorb
xchg
cmc
add
aas
lds
jp
sbb
push
rolb
sub
cmp
xchg
xor
add
lea
sti
jle
xchg
or
mov
jecxz
lds
shl
xor
sti
enter
jp
mov
pop
lret
test
ss
push
mov
push
cmc
jns
mov
clc
pop
pusha
pusha
xlat
add
mov
add
jb
cwtl
and
and
mov
push
jge
sub
call
mov
jbe
in
int
call
out
xor
jmp
add
inc
dec
push
pop
les
lock
jmp
xchg
mov
mov
divl
jecxz
mov
fstpt
fcompl
lock
and
inc
das
rcl
mov
test
xchg
int3
imul
rcrb
lahf
dec
int3
cmp
mov
fistpll
cmp
fbld
popa
daa
or
movsb
rcr
rol
jg
iret
push
adc
xchg
mov
or
scas
test
mov
in
ss
mov
inc
fistpl
imul
in
push
mov
push
ljmp
sub
pop
sti
popa
adc
sbb
lods
inc
lods
std
fstpt
repz
addl
mov
sbb
pop
sbb
es
push
lock
adcb
pusha
icebp
sbb
add
movsl
cmp
push
xorb
xlat
mov
or
inc
add
mov
lret
movsl
push
popa
mov
movsb
mov
mov
mov
ss
mov
repz
fistl
xor
shrl
cwtl
add
pusha
dec
insl
push
pop
iret
and
frstor
fcmovnb
jle
test
in
testl
pop
nop
or
es
sbb
or
mov
lret
xor
mov
incb
subl
outsb
imul
arpl
rcrl
lods
pop
lahf
jp
imul
xchg
sarb
test
out
mov
push
push
insb
jmp
testl
clc
in
and
inc
pop
mov
ja
pop
inc
jle
dec
rcrl
imul
loopne
fistpll
jp
testl
or
pushf
push
lods
cmp
fidivrl
stos
mov
mov
dec
add
scas
jne
jo
inc
dec
stos
iret
sbb
rcrb
cmp
and
add
mov
cmp
idivl
mov
adc
cmp
insl
test
push
lock
stos
cltd
pop
mov
sbb
inc
push
add
faddl
out
sahf
int
sub
add
xor
inc
jecxz
push
fwait
jbe
test
dec
pop
sub
dec
in
and
imul
ret
out
cmp
push
mov
mov
dec
jae
jb
push
adc
and
mov
lods
mov
arpl
fucomp
dec
popf
out
and
movsl
fcomps
xchg
or
xchg
icebp
add
push
pop
jo
inc
push
jle
ljmp
mov
and
or
adc
dec
and
repz
imul
mov
dec
aad
add
out
vorpd
notb
inc
loope
loop
or
push
rcrb
lods
pop
dec
decb
ret
dec
sarb
insb
sub
push
add
popa
les
mov
aad
xchg
iret
mov
in
pop
xchg
in
xlat
das
lret
cmp
in
cli
mov
cmp
cmp
sub
mov
xor
jge
mov
in
cmp
sbb
adc
dec
lahf
dec
add
fs
push
call
ficoms
adc
iret
subl
add
and
or
hlt
fidivl
sbb
push
fistps
js
sahf
les
out
ljmp
sbb
das
push
mov
xor
jmp
xor
or
jmp
xor
cmpsb
pop
mov
xlat
insb
lods
push
addr16
xor
xchg
adc
jge
ja
mov
xchg
les
mov
adc
push
mov
jne
jo
add
jl
inc
and
pop
push
jecxz
push
mull
nop
cli
pop
inc
sbb
bound
test
stos
pop
jp
xchg
loop
inc
jmp
jg
pop
stos
js
ss
jp
cld
jns
rcrb
and
test
aam
xchg
mov
stos
xchg
lock
loope
dec
hlt
dec
fcmovb
pop
and
push
inc
ret
pop
ja
push
sbb
and
loop
inc
fstl
sub
movsb
cmp
dec
cmc
insl
cmp
jne
sbb
xchg
dec
ja
lret
test
sbb
gs
leave
int3
inc
lods
mov
cmpsb
adc
pop
or
cmp
fsubrs
sub
ret
outsl
fdivs
sahf
bound
mov
mov
jmp
mov
fsts
fdivrs
cmp
pop
loope
fs
in
mov
jle
add
adc
in
mov
dec
lcall
push
testl
xchg
mov
inc
push
lcall
jle
mov
dec
lcall
ret
push
mov
test
sbb
pop
lret
pop
and
mov
xchg
lret
nop
dec
sbb
adc
pushf
mov
jbe
jg
std
sarb
mov
loope
or
mov
movsb
mov
xchg
push
cmp
testl
fsubrl
pop
stc
out
pop
add
adc
or
cmp
xor
test
xor
inc
fwait
dec
pop
sti
imul
add
gs
mov
xor
lock
and
or
lret
adc
push
cmpsb
std
sub
mov
lret
jbe
hlt
mov
add
shl
les
test
jbe
mov
or
addl
ja
pop
xchg
outsl
xor
cld
add
notl
inc
aaa
cmpsb
adc
mov
enter
sub
outsb
add
add
sub
pop
cmp
mov
push
sbbb
loopne
imul
xchg
loope
insb
add
add
dec
jo
test
pop
ljmp
rorb
jecxz
lcall
add
ds
data16
repnz
mov
loope
mov
std
sub
jge
scas
ret
mov
jg
or
out
lock
push
bound
mov
imul
out
push
and
mov
push
cmp
jno
push
cmpsb
add
sti
push
bound
cmp
lcall
adc
in
add
clc
adc
sti
mov
test
push
and
pop
lcall
sbb
outsl
cwtl
jo
xchg
pop
loop
jno
add
les
mov
fldt
xor
inc
xchg
sbb
pop
push
addb
les
xor
mov
jg
andl
jmp
and
mov
cmp
xor
sub
or
or
mov
dec
xor
pop
ret
mov
add
dec
andl
mov
lea
lcall
xchg
jmp
dec
push
pop
pushw
xor
and
pop
add
adc
push
and
js
je
inc
loopne
add
mov
mov
mov
inc
mov
jo
mov
adc
ja
fildl
mov
cs
cmp
cmp
pusha
les
lret
leave
jl,pn
mov
and
shl
jae
loop
fsubrl
imul
fwait
push
mov
jnp
loop
clc
test
push
call
xchg
das
das
in
cmp
jmp
and
imul
jmp
clc
popf
push
enter
popf
stc
aam
mov
nop
add
negl
movsl
aam
sbb
xchg
rcrb
xchg
fisubrs
mov
test
int
lods
fcomp
mov
outsb
xchg
push
popf
cmc
add
cmp
mov
push
mov
popa
fiadds
int
inc
clc
pop
gs
pop
push
les
int3
dec
push
outsb
xchg
out
sbb
adc
push
jle
je
cwtl
test
jge
imul
pop
jmp
push
ljmp
dec
dec
xor
xchg
or
xor
mov
dec
jmp
sar
and
inc
mov
loop
test
aaa
xor
jne
mov
mov
ret
fbstp
jge
aad
xor
inc
lock
pop
push
pop
mov
rclb
stc
dec
adc
mov
in
cmp
and
test
xchg
dec
arpl
loop
or
cmp
and
fbstp
push
sarb
push
inc
mov
jle
and
popa
addr16
add
pop
sbb
lock
scas
mov
or
scas
xor
enter
sbb
xlat
cmp
movsl
mov
jp
or
sbb
addb
pusha
adc
sbb
gs
ficompl
in
fsubrl
jge
loopne
add
xchg
bound
leave
imul
insb
fs
jno
fadds
push
inc
mov
pusha
aam
mov
movsb
outsl
flds
into
jmp
cmc
scas
xchg
adc
scas
jl
test
or
xorb
adc
test
jle
cld
xor
rolb
adc
loopne
cmpsl
roll
neg
sub
and
inc
mov
scas
mov
and
rolb
fwait
inc
loopne
push
cmp
punpcklbw
enter
jne
sub
xor
dec
fdivr
xchg
hlt
mov
mov
xor
sub
inc
mov
sub
les
pop
js
push
loop
decl
mov
adc
test
ficoms
cltd
sbb
cmp
mov
lret
mov
fldcw
xchg
ficoms
or
loope
lock
lods
fs
lahf
mov
mov
add
nop
inc
jl
mov
sbb
adc
jne
scas
mov
lds
je
insl
ret
mov
mov
sahf
rclb
mov
loope
pusha
sbb
jns
subl
xor
jle
loop
out
pop
hlt
out
popa
add
test
adc
test
repz
push
push
rol
jge
mov
and
jb
sahf
cmp
fiaddl
sar
jbe
adcb
push
lods
mov
mov
xchg
or
out
dec
mov
mov
mov
insl
jge
xchg
xlat
cmp
inc
jecxz
fcmovne
jl
pusha
dec
sahf
xor
cmp
inc
sub
pop
leave
add
out
movsl
xor
in
mov
mov
cmpsl
sbb
es
lret
add
int
rorb
std
mov
inc
push
or
cmp
cmp
inc
add
jne
scas
stos
inc
adc
fchs
dec
add
inc
hlt
dec
nop
and
xchg
cld
pop
cwtl
pop
loop
or
cmp
repz
xor
jb
mov
ficoml
ds
sbb
adc
mov
cmpsl
xchg
mov
ljmp
push
dec
int3
jbe
pop
mov
push
mov
xor
jns
sbb
mov
les
scas
add
cmp
push
nop
dec
pop
add
jge
cmc
pusha
or
lret
cmpsl
repz
sbb
mov
stos
imul
out
inc
test
adcl
push
mov
fisttpll
mov
enter
push
incl
aas
cmpb
add
out
shll
faddl
xchg
arpl
rclb
pop
mov
stc
cmp
inc
lret
cmp
push
mov
adc
in
bound
xchg
repz
lods
rol
xor
mov
sub
cmp
test
icebp
stos
cld
ss
jmp
adc
jbe
loopne
push
xor
comiss
push
push
outsb
es
pop
out
xchg
fstps
inc
xchg
push
mov
mov
addr16
lret
xchg
mov
aaa
mov
rcrb
jmp
add
xchg
xchg
sub
movsl
xchg
ror
sbb
nop
mov
shll
fimull
ret
lcall
cmp
mov
xchg
repz
test
xchg
cmpsb
bound
loope
inc
and
hlt
into
cmp
stos
stos
jmp
mov
mov
and
fadds
push
dec
sbb
mov
and
in
scas
lcall
cmp
daa
movsb
in
xor
pop
js
push
lds
jle
jae
stos
nop
mov
aam
mov
xor
test
loope
idivb
cmpsb
cld
imul
je
push
fildll
adc
adc
push
out
dec
in
mov
lcall
outsb
data16
test
lds
jo
roll
xor
outsb
cmp
cmc
addr16
mov
ret
push
loope
sub
shll
fdivrl
scas
xor
fdivrs
or
rcrb
sbb
push
dec
arpl
lods
mov
mov
push
fisttpll
dec
movsb
xchg
jl
pop
gs
mov
and
adc
sub
xor
imul
jbe
test
scas
imulb
mov
lods
outsb
jp
push
jp
in
adc
push
pop
push
mov
jnp
pop
xchg
orb
cltd
and
mov
out
push
push
movsb
outsb
sbb
jae
xchg
psraw
push
add
lahf
ss
push
pop
jnp
mov
in
pop
and
add
in
rcrl
sub
xchg
pop
test
or
scas
sbb
hlt
xchg
aad
sub
out
dec
in
int3
adc
jl
sbb
xor
jbe
add
push
pusha
inc
push
into
or
pop
lret
mov
pop
jnp
xor
jne
mov
xor
test
pop
push
cmp
or
xchg
popa
fcoml
enter
mov
sbb
fwait
adc
mov
adc
or
sub
or
fistpl
and
int3
nop
test
jbe
iret
or
or
jae
and
push
cltd
push
adc
repnz
testl
aam
out
inc
mov
popf
cmp
fs
jbe
cltd
inc
sahf
dec
mov
jp
fmulp
movsb
jb
repz
int
dec
jns
or
xor
mov
pop
xor
cmpsl
ss
jne
push
xchg
mov
rorl
lock
inc
mov
leave
mov
icebp
inc
adcl
xchg
fcmovbe
sub
adc
cmp
mov
lea
testl
andl
lahf
cltd
xchg
mov
int3
out
mov
out
aaa
in
xor
sahf
loop
xor
pop
or
stos
or
adc
cld
aad
lret
shr
add
cmp
mov
outsl
outsl
mov
or
ja
push
xlat
dec
pop
in
sbbb
leave
out
or
xor
mov
dec
xchg
mov
pop
cmp
cmp
inc
shlb
jecxz
in
mov
jp
and
lods
cmp
sbb
testb
insb
xor
xor
outsb
cmpl
cltd
push
push
or
ja
lret
hlt
add
imul
xchg
inc
and
push
mov
shrl
scas
xchg
cmp
mov
cmp
bound
test
adc
push
pop
lea
mov
movsb
mov
loop
dec
daa
icebp
or
mov
sahf
es
cli
xchg
aam
popa
adcl
sbb
popw
aaa
jne
movsl
pop
rclb
push
sahf
pusha
movsl
push
loope
lret
or
je
hlt
or
xchg
cmp
mov
andl
into
pop
sbb
rorl
ja
test
mov
inc
jnp
mov
insb
and
or
gs
inc
int
xor
lods
push
inc
shll
ja
call
push
xorb
ja
rolb
and
popa
xchg
adc
popa
ret
xor
cli
pop
or
mov
xchg
rcrl
lahf
inc
sbb
pop
add
push
xor
adc
mov
xrelease
in
lcall
shll
and
loopne
shrb
in
inc
daa
xchg
mov
inc
repz
loop
arpl
adc
mov
fcompl
shl
mov
add
jecxz
cmpsl
xchg
arpl
sbb
pop
addr16
pop
dec
scas
add
insl
inc
sub
xchg
xorb
mov
cmpsb
leave
out
or
popf
fdiv
xchg
add
lds
jle
sbb
mov
or
lcall
mov
std
outsb
aas
add
cmpsb
jg
clc
call
addb
aas
push
decl
cmp
sbb
ljmp
xchg
sahf
arpl
mov
iret
cltd
and
xchg
loopne
inc
fcomps
add
in
loopne
movsb
hlt
or
stc
xchg
push
mov
fbld
sbb
xor
insl
jp
add
mov
ss
and
adc
jo
adc
scas
and
jl
xchg
push
rclb
gs
jmp
adcb
dec
cmp
adc
jns
aas
pop
movsl
jnp
call
mov
fisttpl
je
arpl
das
popa
fwait
dec
lods
xchg
ljmp
adc
mov
pop
sarl
add
jae
sar
outsb
sub
cmp
sub
es
orb
adc
or
xor
cmp
dec
test
lahf
adc
cmp
pop
sahf
push
push
imul
in
cli
fcomps
mov
orb
fstl
mov
or
notb
adc
jo
push
bound
lods
movsb
scas
dec
test
xchg
push
pusha
sti
lret
out
push
jge
pop
int
repnz
cld
cmp
and
push
inc
mov
adc
rcrl
mov
push
sahf
orl
es
dec
adc
xchg
dec
loop
cltd
call
fcoms
cmpsb
ss
or
dec
mov
mov
or
shrb
out
jecxz
arpl
shll
outsb
inc
int
jmp
sbb
mov
cmp
mov
add
dec
pushf
sub
andb
push
adcl
daa
dec
call
clc
xor
imul
ret
fstl
dec
mov
and
sub
inc
mov
sub
mov
jno
or
dec
inc
xlat
add
mov
cs
push
xchg
dec
sarw
jnp
hlt
xorb
pxor
sub
test
rcrl
fidivs
push
or
rcr
cmp
inc
fs
jle
mov
sbb
insb
sahf
inc
rdpmc
fadds
sub
fiadds
loopne
pushf
out
outsb
xorb
adc
sub
int3
fists
xor
or
bound
jg
cli
pop
ljmp
cmc
inc
push
mov
je
out
loope
lods
hlt
push
xchg
test
push
dec
pop
lcall
js
lldt
call
fadds
jns
js
rcll
fisubrs
add
jge
lds
or
lods
sbb
mov
or
fisttpl
add
add
aas
or
sub
inc
daa
mov
cltd
or
insb
fistpll
sbb
lret
jmp
inc
setae
sti
adc
sub
mov
rorl
xchg
arpl
pop
cmp
and
notl
cs
push
cmp
push
mov
lock
add
out
imul
mov
test
dec
mov
jbe
jae
fsubrl
sarl
ljmp
aam
jne
cmp
ror
lods
test
dec
lds
add
jg
arpl
ljmp
lock
test
int
jg
decb
mov
cltd
and
add
iret
test
inc
pop
push
rclb
adc
loopne
adcw
ds
sbb
rorb
inc
cmpsb
pop
xchg
std
dec
jb
push
pop
add
mov
dec
pop
stos
and
dec
lret
jnp
nop
arpl
shll
pop
jl
nop
imul
adc
mov
jp
mulb
cli
je
xlat
in
pop
mov
sbb
cmpsb
xchg
mov
push
aad
std
xor
leave
fisttpll
add
popa
jg
fcmovnbe
out
xor
sbb
pop
push
adc
jecxz
and
xchg
mov
xchg
lods
arpl
repz
add
or
jb
pop
imull
or
xor
dec
scas
xchg
in
pop
out
mov
sarb
xlat
dec
push
inc
popf
pop
mov
adc
dec
out
lcall
adc
sub
fistps
xchg
in
stc
xchg
xor
and
pop
scas
sti
loop
out
inc
mov
lods
jns
into
mov
xchg
out
int3
cmovo
or
xchg
push
pop
push
je
jno
stos
push
jo
aad
ljmp
and
test
xorl
cmp
adc
rcrl
xchg
fildll
aad
jns
dec
sub
sbb
hlt
inc
nop
sub
mov
inc
popf
adc
cvtps2pi
es
jge
subb
xor
xchg
xor
mov
push
push
sbb
rcrb
aas
pop
inc
mov
add
mov
lcall
fwait
push
cmp
cmpsb
inc
or
mov
mov
sub
into
pusha
inc
fidivs
adc
sbbl
cmp
call
push
inc
xchg
push
bound
or
fcoml
add
push
xchg
stos
icebp
imul
gs
push
cld
and
sub
mov
cmpsb
lds
ficompl
pop
daa
jecxz
andl
popf
pop
nop
shll
mov
xor
mov
out
adc
mov
nop
or
mov
mov
fwait
int
std
push
fwait
add
movsb
push
mov
adc
push
mov
stos
fistpl
sarb
or
add
add
jo
leave
imul
cld
or
daa
test
ds
cmp
int
mov
les
ljmp
push
push
sub
out
or
mov
dec
cmp
lods
mov
adc
pmaxub
insl
mov
addl
je
nop
mov
inc
mov
or
bound
inc
cmp
movsl
fadds
loope
mov
jne
dec
pop
push
jno
adc
pop
stc
fiaddl
sbb
pop
std
out
jge
hlt
leave
mov
xchg
fwait
fwait
sbb
adc
sbb
jbe
sar
push
outsb
or
popf
adc
cmp
jmp
sti
sbb
or
xchg
pop
xor
add
dec
push
mov
jmp
shll
dec
ljmp
fs
sarl
xchg
cmp
mov
icebp
fimull
xor
fwait
sbb
shlb
iret
or
dec
pop
jmp
cmpsl
ret
adc
dec
sbb
clc
adc
mov
inc
ds
dec
movsb
lock
hlt
sbb
mov
int
sbb
mov
dec
mov
repz
std
popa
into
movsb
jb
or
adc
bound
das
icebp
fucomip
mov
loope
xchg
out
mov
push
pusha
fwait
mov
push
or
outsb
dec
and
das
jae
push
inc
cmp
bnd
sbb
in
lods
out
jne
in
sub
jns
subl
testl
or
pop
mov
fcoms
fstp
mov
xchg
bound
xchg
iret
add
out
inc
and
mov
pop
cmp
ret
jmp
push
add
xchg
mov
cmp
aam
in
stos
sti
mov
cmp
out
stos
xor
jae
xchg
xor
negb
dec
scas
fdivs
ret
fisttpll
test
fidivs
popa
js
scas
adc
or
out
adc
dec
adc
mov
xchg
out
loopne
pop
sbb
dec
jne
adc
jne
in
imul
dec
fcoms
xor
mov
arpl
xchg
xchg
or
cmp
push
push
sub
movsl
push
inc
dec
xchg
cmc
xchg
inc
or
gs
cmc
ljmp
mov
or
fbld
xor
shll
das
jecxz
repz
jae
inc
jmp
out
popa
adcl
in
daa
pushf
ret
inc
decb
mov
sbb
sbb
adc
xchg
xchg
mov
imul
and
dec
hlt
push
pusha
lods
sub
jb
jns
pop
cs
xor
sarb
or
test
xlat
scas
mov
daa
pushaw
loopne
sub
cltd
clc
cli
cmc
xchg
adc
adc
push
xor
imul
lock
mov
or
lret
push
add
iret
rorb
repnz
repz
rep
jl
repz
sbb
pop
sbb
out
inc
cmpsl
add
push
enter
movsl
dec
pop
push
das
sub
fsubr
test
movsl
shrb
or
xchg
cmpsl
stc
mov
mov
jbe
es
inc
push
cmp
clc
jp
scas
out
inc
stos
mov
jne
lock
adcb
out
insb
push
or
js
xchg
and
fldenv
mov
mov
sbb
jns
mov
pop
arpl
in
cmp
sahf
or
mov
int3
mov
in
sbb
gs
and
mov
addl
stos
sti
js
add
mulb
push
add
cld
pop
xor
or
mov
hlt
sub
adc
das
push
cmpsl
mov
std
les
mov
push
jge
push
mov
adc
and
mov
xor
frstor
mov
pushf
mov
xchg
sti
or
mov
pusha
sub
jle
push
push
mov
push
add
inc
in
dec
push
pop
fiadds
adc
js
xor
je
or
inc
shl
dec
in
adc
fmulp
frstor
mov
insb
jae
daa
addr16
cmc
jne
loopne
and
out
sub
dec
mov
mov
push
sarb
les
or
adc
lea
das
stc
inc
rcl
inc
cmp
sahf
scas
lods
in
incb
ficoml
dec
pushf
mov
xor
call
out
icebp
adc
mov
cmp
ja
stos
movsl
pop
ret
jb
in
pop
daa
ja
negl
pop
cs
mov
test
fistps
ret
lds
xor
push
sbb
call
sub
adc
xchg
lds
repnz
movsl
xor
mov
sbb
lret
inc
leave
shrb
dec
clc
cwtl
adc
inc
insb
shll
lods
jo
cpuid
cld
add
or
and
std
in
ror
and
lahf
fcmovnb
push
dec
in
rorl
sahf
loop
out
out
or
xchg
mov
aam
outsb
xchg
dec
mov
test
mov
lret
out
jbe
cwtl
push
jnp
imul
sarl
push
sub
adc
fildll
jecxz
imulb
aas
jns
fimuls
hlt
mov
sub
adcb
add
adc
mov
xchg
aaa
jnp
fsubrl
out
jb
jecxz
outsl
iret
shrl
push
stos
shr
clc
dec
iret
stc
sbb
jnp
push
stc
pop
aas
pop
adc
xchg
dec
xchg
loope
gs
fld1
mov
out
sbb
xchg
xor
fdivr
xor
mov
lret
push
dec
jbe
mov
ret
test
scas
ds
add
cmp
sbb
lret
gs
hlt
jge
test
pop
test
jnp
ss
xchg
dec
iret
push
jne
cmpsl
adc
push
xchg
pop
jp
outsl
lahf
xor
mov
or
mov
fcompl
inc
and
mov
popl
in
inc
cmpsl
ds
jb
dec
outsb
jb
xchg
test
cmpsb
xchg
sbb
jne
lcall
in
inc
out
mov
gs
mov
jmp
cld
and
stos
inc
and
push
inc
sub
inc
std
adc
push
xor
mov
fcomi
and
stos
in
frstor
jbe
mov
cmc
rcr
icebp
insl
xlat
int3
mov
shr
sub
and
or
jns
dec
dec
jl
fisubrs
imul
adc
fs
and
sub
mov
push
clc
xor
insb
xchg
and
mov
dec
out
jecxz
fistl
adc
ffree
cmc
iret
aad
jmp
push
cmp
aas
xor
sub
jno
bound
lock
ret
test
push
out
cmpsb
ja
dec
test
fcompl
pop
aas
sbb
sub
gs
mov
rclb
aaa
jno
inc
push
sbb
jno
push
pop
adc
imul
aad
je
sub
ret
ss
into
rcll
push
mov
imul
movsl
lea
cwtl
and
neg
inc
mov
fimull
shl
inc
aaa
ret
hlt
fidivrs
cli
imul
shll
adc
dec
sti
adc
sbb
jne
push
xor
jne
push
fmull
fdivrs
imul
mov
or
sub
or
sbb
sub
add
dec
inc
pop
sahf
test
add
xor
int
sbb
mov
mov
or
mov
mov
push
sub
xchg
pop
gs
and
test
jbe
cwtl
jge
jb
xchg
push
outsb
and
pop
xor
add
xor
test
out
cmp
or
ljmp
and
xor
xchg
push
jb
inc
lds
enter
loop
cmp
mov
cli
or
in
daa
add
lret
jmp
push
xchg
movsb
lret
out
fcoml
lods
jns
xchg
dec
rcrl
dec
dec
movsl
xor
mov
inc
imul
sub
enter
clc
adc
mov
pop
pop
stc
aam
lock
fwait
xor
pop
nop
loop
daa
arpl
or
out
mov
call
mov
jecxz
ljmp
aad
xlat
jbe
inc
cmpsl
pop
pop
pop
and
sub
mov
cmpsl
jge
cmpsl
movsl
push
gs
cmpsb
jns
mov
gs
into
pop
jns
mov
jbe
aas
dec
jb
add
out
xor
push
sub
push
in
cwtl
aas
out
stos
int3
dec
sbb
iret
sub
roll
cwtl
jg
jbe
pop
je
sbbb
jl
jle
sbb
cmp
sbb
notb
inc
fsubl
pop
loope
test
popl
adc
inc
stos
sub
cld
mov
cmp
mov
fwait
jnp
outsl
push
subl
add
lret
out
scas
sbb
pop
je
add
xchg
ja
mov
pop
mov
call
mov
aaa
mov
leave
pop
inc
or
repnz
cld
inc
adc
aaa
add
or
adc
pop
add
push
cwtl
movsb
sbb
aaa
xchg
inc
aas
lcall
test
bound
push
outsb
cmpsb
roll
int
jge
out
push
push
cmp
loope
out
or
imul
dec
push
mov
fs
stos
mov
pushf
adc
and
rcll
pop
push
clc
in
cwtl
scas
mov
fildll
int
inc
rep
dec
mov
scas
mov
cmp
xchg
scas
rcll
into
mov
test
dec
cmp
adc
loope
mov
into
int3
push
adc
pop
ret
sub
cmpsl
jb
aam
jnp
dec
mov
gs
jge
mov
stos
in
push
add
push
mov
fistpll
popf
pop
mov
pop
ljmp
cmc
test
jnp
mov
pop
cmp
push
in
jns
adc
outsl
subb
jl
sbb
fiaddl
lods
loope
add
sbb
outsl
push
test
rcrb
sub
push
sub
repnz
adc
jne
pop
test
or
mov
in
inc
movsl
stos
aad
mov
pop
push
add
stos
jle
sub
rcrb
bound
loope
mov
push
pusha
iret
push
inc
and
outsb
push
push
mov
mov
lods
cmpsb
push
and
mov
mov
pop
mov
pop
push
les
jbe
cs
jne
in
sub
sub
xchg
clc
push
jg
fucomip
cmp
jnp
pop
push
jl
adc
mov
cltd
xor
pop
ret
or
sbb
lea
pop
mov
or
xchg
sbbl
out
mov
xor
jo
js
sbbb
mov
cmc
xor
incl
sbb
xor
in
fs
cmp
inc
dec
xor
mov
popf
pop
xchg
call
fs
mov
mov
or
jp
std
negb
xchg
adcl
push
push
mov
mov
sub
ds
stos
out
push
sub
out
and
int
je
jno
jg
bound
lahf
aam
jl
leave
inc
mov
stos
aad
arpl
fdivl
push
pop
pop
lcall
outsb
sti
adc
insb
lock
adcb
or
addr16
or
pop
mov
xchg
dec
pop
jl
hlt
cmc
data16
adc
add
fs
and
pop
dec
es
and
or
pop
mov
es
push
dec
addr16
std
pop
outsl
dec
enter
adc
jne
mov
xor
aas
mov
iret
mov
loopne
mov
fldl
aad
xchg
mov
mov
test
mov
call
dec
call
mov
out
xlat
push
lods
lods
gs
mov
icebp
cmp
fistps
std
fwait
in
xchg
out
dec
mov
xchg
inc
or
fwait
in
shrl
out
adc
dec
inc
stos
sbb
dec
sti
push
aaa
or
mov
int
test
repnz
pop
add
inc
adc
pushf
push
mov
test
mov
out
xor
movsl
jl
adc
adc
jns
sbb
fistl
xchg
rcrb
fildll
repnz
repz
mov
fdivrl
xor
mov
sarl
add
out
jle
rorb
inc
xor
repnz
inc
mov
lock
pushf
test
jnp
pop
mov
cmp
xchg
xchg
in
mov
das
inc
cmp
inc
sbb
aaa
aam
mov
inc
clc
mov
cwtl
sbb
and
dec
adc
mov
xchg
ljmp
ds
je
push
push
js
popa
sbbl
std
inc
sbb
lock
arpl
addb
aaa
popa
cmovno
xchg
arpl
pop
popa
jecxz
cld
js
flds
jae
cmpsl
mov
outsl
repnz
and
or
xchg
sbb
add
fmulp
xor
mov
in
lea
xchg
jle
inc
push
movsb
cmp
daa
jb
mov
mov
pop
repz
mov
icebp
sbb
loopne
test
in
jno
xor
sub
cmp
mov
scas
shl
jne
add
and
pop
sub
sbb
and
xchg
repnz
rcrb
call
aaa
mov
or
mov
jbe
shll
xor
adc
cltd
add
sub
sub
jo
mov
repnz
sbb
sub
lcall
popa
jbe
cli
addr16
cmp
cmpsl
pop
rclb
mov
dec
cld
sub
popf
test
hlt
and
xchg
fwait
cmp
mov
push
out
and
cmp
push
int
xchg
xchg
lds
mov
repnz
int3
pmuludq
mov
leave
das
test
jae
sbb
jno
push
mov
lret
sbb
xchg
jge
cmp
jae
xchg
push
xor
gs
stc
lret
cmpsl
dec
sub
icebp
fwait
std
test
xchg
jg
std
push
ljmp
iret
jbe
gs
std
push
jo
aad
jle
cmp
ss
jbe
xlat
dec
daa
push
push
and
rcrl
pop
in
or
aaa
call
jg
popl
inc
jns
cmpsl
ret
gs
xor
call
loope
dec
popa
in
xor
divl
outsb
cmc
and
test
xchg
aam
cmpsl
loope
xlat
outsl
and
dec
addr16
stc
jl
xor
push
mov
movsl
stos
jle
sub
aaa
fnsave
cli
ret
adc
xor
jl
fs
insb
jb
xchg
aaa
sbb
push
mov
jae
inc
cs
fidivl
or
je
push
pushf
cmp
or
xor
add
adc
mov
mov
imul
leave
mov
push
pop
or
mov
pop
mov
sub
adc
dec
add
sub
fwait
test
xchg
pop
gs
loop
pop
xchg
xchg
jge
mov
les
ja
loope
sarl
and
cmp
fisubl
in
je,pt
mov
pop
lret
test
fdivr
mov
xchg
sub
mov
lret
lock
bound
js
push
jmp
aad
inc
je
clc
into
je
rcrl
mov
cwtl
int
cmp
in
inc
dec
into
push
jae
mov
ljmp
mov
ret
push
aaa
xlat
mov
popa
cs
cwtl
mov
and
in
dec
cmp
and
in
jecxz
in
jb
push
sub
mov
sbbl
mov
sbb
inc
xlat
arpl
loop
xchg
aad
mov
cmpsb
push
add
mov
jl
leave
outsl
fisttps
iret
mov
insl
hlt
pusha
les
pavgw
or
add
xchg
xor
pushl
scas
je
and
cmp
mov
xor
jae
cmp
mov
sbb
mov
bound
mov
int3
jnp
mov
mov
cli
addl
push
sbbb
push
inc
cmpsl
lret
or
cmp
inc
adc
push
mov
nop
shlb
dec
mov
rorb
loopne
pusha
movsl
pop
mov
adc
jo
inc
sub
pop
jecxz
hlt
flds
or
js
pop
stos
bound
test
push
jbe
xor
rclb
sbb
lock
xor
sti
test
push
cmp
mov
bound
push
aas
inc
cmpsb
jg
in
jl
mov
mov
rcrb
mov
dec
mov
xor
and
iret
test
addr16
ljmp
outsb
fdivrl
adc
rorb
sub
mov
rol
sar
mov
call
mov
popf
subl
add
jmp
rorb
inc
mul
sti
movsl
adc
or
mov
mov
lret
in
out
xchg
xchg
mov
push
addl
mov
dec
pop
call
es
daa
je
addr16
and
in
cmc
fwait
mov
out
xchg
xchg
mov
or
test
xor
push
lahf
std
in
addr16
leave
sub
lcall
dec
adc
lea
int3
push
loope
cli
xorb
and
xchg
test
out
enter
jl
std
mov
lahf
ja
out
addr16
cmp
cli
arpl
jge
push
sub
movsl
cli
add
sub
je
push
dec
mov
in
push
mov
lods
inc
into
iret
xor
test
in
xchg
pop
cmp
xchg
sub
jg
loopne
xor
mov
mov
adc
mov
push
sbb
ret
popa
inc
or
gs
or
iret
sbb
inc
dec
sub
cmp
jo
popf
js
jae
adc
jecxz
mov
cmp
push
push
ja
add
jb
iret
or
dec
dec
in
fincstp
xor
jbe
mov
inc
push
pop
dec
pop
flds
icebp
aas
pop
dec
mov
int3
roll
mov
pop
mov
into
pushf
sarl
push
mov
adcl
or
imul
out
xchg
or
subl
test
mov
fincstp
fsubs
movsl
and
inc
add
add
in
repnz
clc
sub
or
js
loope
int
fldt
enter
out
ja
jae
dec
leave
lea
dec
mov
mov
aam
pop
nop
popf
js
lock
stos
out
ljmp
iret
into
jecxz
xchg
mov
shrb
adc
xchg
ficompl
out
xchg
dec
dec
ja
test
js
dec
xor
xchg
insb
das
push
dec
sbb
add
aaa
xor
and
fwait
pop
sub
mov
stc
lret
sub
xchg
mov
data16
lods
dec
hlt
jmp
mov
push
jbe
lea
push
push
lock
jbe
push
enter
dec
stc
daa
loopne
sbb
xchg
ljmp
fsubrl
aad
les
cmp
popa
pop
leave
daa
sbb
jge
into
test
inc
xor
pop
add
push
mov
lret
inc
repz
les
imul
fadds
jnp
fscale
pop
in
in
jl
mov
adc
jmp
mov
scas
mov
gs
pushf
call
sub
xor
sbb
cld
cmp
orb
pop
pop
cmpsl
movsl
mov
inc
pop
jmp
mov
loopne
dec
jbe
xchg
mov
daa
lods
dec
mov
adc
jg
sbb
pop
inc
push
dec
jnp
pop
sub
xor
inc
inc
int
mov
repnz
js
mov
adc
jo
and
dec
or
cmpsl
movsb
test
fistl
sbb
stos
decb
rorl
sbb
aaa
cmpl
jg
divb
lock
xchg
xlat
loop
outsb
jbe
sbb
push
and
and
push
adc
sub
adc
jbe
inc
xorb
xor
xchg
loope
sub
fidivrl
das
push
mov
imul
pop
or
or
mov
sub
mov
mov
test
push
mov
jnp
jns
aas
adc
stc
std
ss
jl
sahf
out
aas
mov
lods
dec
cmp
mov
test
aad
aas
push
fmul
xchg
arpl
add
dec
lods
cmp
lods
push
ret
sbb
jns
fwait
outsb
in
push
outsb
adc
ljmp
adc
and
xor
ja
cwtl
mov
jle
and
cltd
jl
clc
cmp
mov
cs
and
pop
or
push
push
cmp
xchg
cli
aam
addr16
sub
sub
out
fimuls
inc
dec
lods
push
fildll
dec
push
std
scas
js
jmp
call
and
int3
js
lds
sahf
fs
dec
repz
andl
push
shrb
jmp
fmul
clc
dec
dec
mov
push
addr16
xchg
mov
jo
in
sub
in
iret
lods
fwait
adc
mov
cli
insb
stos
mov
lret
fwait
sbb
scas
mov
fildll
test
push
mov
jp
sbb
stos
fcompl
inc
lods
mov
cli
stos
pop
xchg
xchg
xchg
in
pop
inc
insb
cli
push
insb
std
or
loope
cmp
mulps
adc
lret
cmc
call
inc
cmpsb
popl
jle
scas
shll
sub
sub
lahf
inc
cmc
pop
div
lock
sar
jne
jecxz
or
daa
dec
cmpsl
aaa
jecxz
push
clc
scas
or
jae
aaa
mov
out
mov
sub
lret
std
enter
mov
dec
mov
ret
enter
in
mov
xchg
jmp
arpl
mov
mov
psllq
inc
mov
add
repnz
cwtl
jg
icebp
sbb
add
aad
or
mov
mov
sub
inc
xor
fdivr
mov
inc
fstps
test
jmp
in
or
mov
mov
pop
mov
out
out
addb
imul
xchg
sub
aam
push
std
xchg
add
std
daa
aam
testl
stos
in
in
sub
mov
fnstenv
push
mov
call
sbb
xlat
arpl
lret
leave
push
daa
mov
out
xchg
jmp
adc
rcrb
jno
xor
fcmove
dec
pop
popf
outsl
jmp
xor
adc
cld
xor
jecxz
mov
popl
sub
aad
or
test
mov
mov
sbb
aaa
mov
mov
scas
dec
pop
fdivs
scas
jmp
push
out
mov
mov
mov
push
aad
and
sub
shl
mov
je
das
mov
sbb
imul
test
xor
in
lods
arpl
test
ljmp
dec
dec
out
inc
sti
pushf
test
shlb
je
dec
aaa
test
inc
xchg
aad
insl
xchg
push
and
ds
mov
push
sub
jl
adc
jae
sub
movsl
je
decb
mov
or
int3
jbe
and
cli
dec
ljmp
cld
jecxz
inc
lods
jg
add
mov
jns
mov
aaa
lahf
mov
mov
cli
or
jecxz
mov
jp
adc
in
loop
fcomps
fs
into
daa
mov
lea
sbb
test
test
add
sahf
fimuls
mov
rcrl
jns
sub
push
int
jae
in
loope
pop
pop
dec
leave
and
repz
mov
mov
adc
lret
jnp
lcall
lds
je
test
mov
mov
push
mov
pop
cmp
ret
xor
cld
xchg
and
and
je
ljmp
adc
jp
sbb
push
call
stos
mov
xlat
fcmove
sti
pop
daa
jns
sub
mov
sbb
or
mov
and
scas
push
jg
sbb
iret
add
push
out
inc
push
ret
icebp
bound
into
cmp
outsl
repz
dec
stos
mov
ss
aas
mov
fwait
loope
xchg
popa
cvtps2pd
outsb
les
outsb
shlb
and
push
jl
xlat
jg
cs
outsb
sub
imul
std
pop
call
and
push
sub
mov
pop
dec
fmulp
cld
outsl
mov
pop
mov
call
adc
mov
inc
cli
adc
mov
push
xchg
nop
jecxz
pop
cmpsb
ds
movsl
gs
jae
cltd
incl
cmp
loopne
inc
jne
in
lock
pop
push
popa
flds
adc
sub
shr
clc
insl
sbb
clc
and
loop
inc
mov
or
pop
lcall
jns
jbe
pop
cmp
fadds
xchg
push
test
cltd
push
xor
dec
mov
pop
xor
andl
sbb
xchg
mov
lods
fidivrs
fldl
imul
sub
es
mov
sbb
and
or
adc
jnp
push
xorb
cmp
and
dec
les
jb
gs
icebp
dec
push
int3
push
xchg
mov
loopne
push
bound
jge
cmp
mov
mov
pop
and
adc
cmp
push
pop
sbb
or
aam
out
imul
rorb
xchg
repnz
cltd
inc
lcall
outsb
ljmp
xchg
out
inc
data16
frstor
ja
nop
lret
push
out
push
cs
mov
cmp
js
push
mov
and
mov
lahf
cmp
sbb
stos
jg
bound
fidivrs
popf
addr16
cmp
addb
lock
fs
push
inc
lods
pop
mov
or
jecxz
leave
adc
mov
jmp
scas
inc
aad
ja
jle
addb
cmp
jp
test
loop
movsl
cmc
sub
frstor
add
dec
mov
push
stc
daa
nop
jb
dec
adcl
lock
aad
loop
lret
xchg
jmp
or
mov
aam
in
insl
cmp
xor
sub
pop
xchg
pop
insl
pop
dec
cmp
adc
loop
into
sbb
rcll
sar
push
push
pop
insb
xchg
outsb
jl
inc
decb
or
sub
pop
adc
push
call
stos
pop
addl
mov
mov
repnz
dec
clts
insb
enter
cmpb
jp
xchg
cmpsb
lret
dec
lock
push
or
lods
mov
insl
and
fldl
gs
jle
imul
hlt
dec
out
cmp
sbb
lods
or
jg
fwait
sbb
xor
sahf
inc
je
adc
jmp
pop
popf
pop
lock
mov
sahf
and
push
jnp
arpl
test
sub
mov
sbb
imul
mov
popf
mov
xor
fsubrl
sub
fwait
adc
fldenv
scas
dec
dec
sbb
pop
fdivs
test
inc
mov
xor
out
andl
mov
push
mov
pop
lahf
stos
push
push
movsl
inc
jle
mov
ret
mov
clc
dec
mov
pop
clc
dec
mov
paddb
arpl
sub
sbb
ss
lahf
int3
es
cwtl
push
and
es
adc
popf
jb
sub
stos
nop
sub
sbb
fsubp
jnp
push
das
les
or
xchg
dec
nop
mov
pop
xchg
xor
inc
mov
inc
pop
sbb
stos
pop
leave
ja
push
insl
outsl
mov
mov
xor
lret
mov
faddl
idivb
lret
mov
loope
lods
fcmovnbe
xlat
xor
test
inc
movsl
lret
test
popa
jns
adcb
jl
xlat
jle
addr16
in
cmp
push
aas
add
into
xor
inc
add
adc
arpl
lret
ds
cmp
inc
in
test
pop
push
push
xchg
pushf
test
test
inc
in
call
rclb
lea
sti
mov
or
lret
mov
ljmp
cmpsb
dec
mov
xchg
mov
ljmp
ret
mov
fldenv
int
inc
hlt
push
add
in
mov
pop
orl
pusha
arpl
test
test
stos
sub
lahf
insl
push
sub
jnp
xlat
mov
lods
push
pusha
out
test
cmpsl
mov
cmp
popf
std
xchg
popf
in
js
cmp
outsl
dec
js
mov
std
cltd
pop
jecxz
das
push
inc
inc
adc
jb
add
ds
push
pop
push
push
aaa
dec
or
stos
mov
mov
pop
sbbl
ja
xor
call
dec
jle
ljmp
push
mov
lret
ret
punpckhbw
loopne
shlb
jae
fstp
jge
mov
jne
out
out
rcrb
mov
movsl
pop
mov
xchg
imul
mov
mov
jg
rorb
mov
mov
cmc
in
and
mov
cmpsl
out
outsb
in
fcoms
fsubrp
aas
mov
loope
xor
sbbl
aas
sbb
sbb
ds
mov
call
pop
movsb
lods
fnsave
scas
shr
lock
cmp
lret
sbb
rclb
inc
into
imul
negl
negl
inc
popa
xchg
ret
shr
jnp
decb
bound
mov
xchg
stc
or
cmp
or
mov
insb
roll
shrb
scas
sbb
mov
in
xor
arpl
leave
dec
and
out
sarl
test
xchg
cmp
add
ja
lcall
pop
mov
popa
inc
pop
fidivrs
xlat
pop
gs
jg
xor
lret
arpl
inc
jne
pop
push
movsl
mov
inc
pop
mov
aas
jnp
jno
out
rep
aad
push
xlat
into
frstor
inc
jb
mov
push
mov
jl
fdivrl
add
jno
adc
jl
mov
sub
ja
jmp
xorl
push
mov
imul
outsl
mov
mov
mull
mov
push
jns
in
sbb
jl
xor
mov
repnz
lods
arpl
push
daa
sub
mov
cwtl
push
das
add
hlt
rorb
mov
inc
lret
cmp
pop
mov
mov
xchg
inc
gs
fwait
mov
stc
mov
push
pop
fwait
mov
push
push
test
das
outsl
xor
out
xlat
test
insl
cwtl
imul
push
aaa
fistps
popf
insl
and
aas
or
push
lods
inc
insl
inc
arpl
std
push
push
movsl
xchg
cwtl
cwtl
in
scas
in
loop
xor
sarl
add
loop
sub
cmc
lods
testb
ss
sbb
mov
jo
xor
adc
loop
popf
scas
int3
xlat
popf
mov
mov
call
nop
repz
jne
pusha
cmpsl
add
movsl
pop
mov
loopne
add
jns
sbb
popa
jmp
das
popf
imul
scas
add
and
mov
scas
mov
push
ret
cs
fucomi
call
cmp
stos
shrl
push
stos
cmp
fisubl
insl
sbb
cli
outsb
push
xor
mov
or
out
push
mov
or
pop
cmpsl
xor
gs
cwtl
push
in
adc
shr
pop
xor
outsl
popf
ss
daa
dec
push
mov
adc
out
and
sub
xchg
pop
cmp
outsl
cmc
or
adc
jg
or
jne
push
popf
cld
sub
pop
popa
cmp
mov
lods
jbe
shll
scas
xor
movsl
int3
shlb
enter
pop
sbb
dec
gs
pop
inc
xchg
jg
enter
pop
shl
jl
sbb
clc
test
pop
inc
xchg
ss
mov
or
inc
dec
jg
mov
and
cld
aas
enter
inc
mov
hlt
hlt
pop
popf
aad
push
mov
dec
lea
xor
inc
movsl
gs
push
addb
popf
jb
inc
insl
adc
pop
outsl
decb
pushf
mov
jle
imul
pop
pop
addr16
lahf
and
jbe
push
es
add
ret
jne
cmp
xor
or
mov
mov
imul
outsb
or
ret
adc
mov
mov
mov
cwtl
cld
repz
mov
sbb
xchg
dec
add
mov
push
fisubrl
aad
cmp
xchg
cmp
out
aam
ficompl
cwtl
test
fwait
xlat
imulb
and
inc
add
lods
lods
iret
sbb
rep
cld
psubsb
daa
xchg
stc
jp
rcrb
sbb
jl
fiaddl
dec
xor
enter
out
scas
mov
lahf
mov
sub
imul
ret
sub
sub
cmp
mov
dec
dec
les
jae
jp
aam
ret
dec
dec
add
cmpl
cmp
shlb
or
cmp
cmp
das
pop
mov
sub
or
movsb
xchg
sub
pop
and
adc
cs
inc
in
sub
lds
stc
outsl
xchg
xor
icebp
out
inc
and
pop
and
in
xor
and
shll
sar
add
out
hlt
lahf
not
out
stc
shlb
mov
lds
test
cmp
test
mov
pmuludq
orl
mov
jl
outsl
add
sub
call
fists
fstl
add
iret
fidivs
adc
mov
aas
int
cmp
cmpsb
xchg
jg
dec
mov
shll
or
xchg
mov
sub
mov
adc
hlt
lret
cltd
ja
out
jmp
nop
cmp
mov
mov
push
jns
es
ds
nop
xchg
mov
xorb
daa
xchg
in
outsb
jmp
enter
xchg
inc
pushf
fcompl
es
cwtl
mov
std
pusha
sub
push
leave
out
mov
jae
cmp
and
shll
and
cli
clc
fcmovbe
call
cmp
pop
scas
sub
pop
jns
bound
mov
inc
lods
popl
mov
inc
dec
add
gs
dec
push
mov
mov
or
jmp
addl
mov
xlat
fldl
mov
push
and
push
sbb
bound
ljmp
or
sbb
lret
add
xor
mov
mov
leave
and
repz
sbb
xor
mov
aam
imul
cmpsl
mov
movsl
ret
mov
dec
jae
mov
sub
fwait
xor
sub
xor
test
dec
xlat
xlat
jae
mov
in
mov
and
push
int
xchg
in
mov
fs
pop
inc
jmp
in
dec
in
stc
lcall
xor
cld
std
decl
andl
mov
adc
insl
mov
sub
mov
gs
in
push
and
mov
das
push
dec
mov
sub
aam
rclb
stos
repz
cmpsl
imul
mov
mov
sub
mov
outsl
in
fidivrl
pop
push
pop
sbb
je
je
jne
xchg
mov
hlt
imulb
cwtl
scas
fcomi
les
ret
push
or
push
mov
jg
ret
aaa
lahf
aad
mov
or
ret
out
ja
icebp
xor
mov
mov
push
flds
cmp
jmp
shrb
sub
xorl
inc
repz
idivl
xchg
enter
leave
add
insl
inc
jle
push
or
fs
xor
jecxz
int3
dec
push
cmpl
in
adc
inc
mull
call
pushf
mov
movsb
sub
test
dec
push
jb
jno
sub
inc
xchg
fldt
push
clc
push
dec
nop
add
xor
push
sahf
lods
aas
xchg
call
push
push
daa
dec
bound
std
push
or
mov
cmc
push
mov
shrl
xchg
pop
pop
sub
xchg
pushf
xor
outsl
pop
test
cmc
inc
push
inc
add
popa
jmp
in
pop
jmp
xor
cmp
pop
arpl
cmp
pop
in
sahf
sbb
lods
js
jb
push
jl
mov
xor
dec
fcmovnu
mov
xlat
lds
sarb
adc
in
enter
cmp
and
inc
add
inc
or
lahf
and
shrl
sbb
aam
xlat
sahf
inc
mov
jnp
push
dec
add
adc
into
push
inc
pop
cmp
fsts
insb
add
cs
je
jns
dec
sub
and
iret
subl
adc
mov
add
pop
push
hlt
push
sbb
rolb
mov
and
xor
addb
out
daa
rclb
das
rcrb
aam
sbb
xor
sbb
xchg
inc
pop
cmpsb
push
sub
int3
jp
int
jl
insb
loope
and
jne
cli
call
mov
mov
int3
insb
mov
ss
push
add
imul
inc
xor
mov
nop
fcomip
rcl
call
jle,pt
scas
jmp
mov
out
loope
cmc
mov
xchg
leave
shlb
lahf
repnz
aaa
adc
out
mov
pop
sbb
idivb
cmpsl
ja
push
or
out
jge
or
hlt
pusha
add
mov
and
lahf
das
loope
pop
rcrl
shl
hlt
or
adc
cmp
jmp
cmp
jle
insl
mov
push
add
fsts
mov
and
int
jo
std
sti
imul
int3
xchg
test
push
inc
xor
insb
lods
pop
arpl
ljmp
xor
inc
fisubrs
imul
xor
addr16
aad
outsb
jbe
shl
mov
sahf
pop
fwait
lods
pushf
mov
std
rcr
insl
cld
fbld
or
dec
and
cli
movsl
dec
jne
mov
nop
pop
flds
dec
push
sub
push
jae
inc
stc
inc
ds
add
jmp
mov
loop
jns
jns
cld
stos
jmp
lock
lret
sbb
popa
out
and
mov
jne
popf
xchg
mov
pusha
cmp
dec
mov
repnz
icebp
mov
imul
add
js
aam
sti
xchg
ret
mov
addr16
pop
adc
add
aam
scas
sbb
dec
push
and
fisubs
mov
mov
cmp
cmp
jno
je
repz
xor
adc
loop
mov
arpl
mov
push
push
cmp
popf
xor
pop
andl
cli
add
and
dec
mov
xchg
push
and
lret
xor
cmpsl
xchg
mov
ret
push
fmuls
btc
fwait
adc
push
loopne
clc
loopne
jb
in
xchg
dec
aam
aam
das
cmp
and
push
imul
xchg
adc
pop
or
aas
mov
adcl
fpatan
clc
sub
fisttpl
rol
mov
jecxz
imul
xor
mov
jg
xchg
cmc
cld
std
cmp
mov
aas
rcr
popf
push
lret
pop
sbb
push
loopne
mov
push
xor
pusha
shll
stc
lods
out
sbb
bound
ja
test
inc
mov
sbb
shll
jmp
pop
hlt
lods
mov
aam
mov
lret
adc
push
mov
repnz
stc
js
xlat
jp
repz
cmpsl
hlt
mov
add
add
inc
stos
adc
xchg
outsb
jmp
dec
popa
les
out
int
cli
sub
jmp
xchg
jmp
push
fdivrl
mov
mov
xchg
shll
es
pop
test
jnp
imul
je
roll
xchg
push
out
movsb
pop
std
scas
xchg
fcom
xor
aaa
xchg
ss
notb
pop
dec
push
ja
pop
int3
add
sub
call
mov
sbb
shll
jg
js
rcl
imul
mov
mov
xchg
inc
mov
jecxz
mov
dec
mov
jl
and
mov
push
or
jnp
pop
mov
xor
fnsave
addr16
cmpsb
cld
pop
cmpb
push
jae
mov
pavgb
sar
jge
mov
jecxz
es
pop
sub
sarl
lock
popf
dec
push
mov
adc
lret
daa
cs
cli
add
lret
enter
mov
out
jbe
rolb
and
int
dec
std
testl
pop
bnd
sbb
dec
jbe
xlat
sbb
mov
jg
push
xchg
xchg
cmpsl
cltd
jae
lea
cmc
inc
icebp
mov
lods
inc
in
shll
lods
repnz
popa
daa
in
lods
lret
mov
jle
xchg
cmpsl
push
xchg
leave
outsb
arpl
or
mov
in
movsl
jl
out
pop
cmp
or
xchg
and
cli
or
cmp
cmp
push
faddl
iret
push
std
mov
roll
xor
cltd
xchg
cltd
dec
lds
xor
cld
add
or
jo
in
fxam
mov
xchg
gs
lea
aas
sti
andb
jb
inc
mov
sbb
icebp
lahf
cmp
pop
fcmovne
xor
mov
rcl
ja
push
mov
or
jno
jge
out
out
jecxz
xchg
js
inc
subl
nop
xchg
test
pushf
push
push
and
inc
scas
leave
negb
or
inc
jecxz
rorb
push
inc
mov
ja
test
push
jmp
jo
mov
add
fsubs
gs
cmpsl
aad
mov
xor
pop
jle
fdivs
shll
sahf
adc
aam
sbb
icebp
and
cld
xchg
mov
sbb
pop
fs
jae
xor
jne
push
hlt
test
jmp
push
pop
sbb
stos
cmc
daa
cmp
cmp
cmpb
popa
push
mov
fwait
and
sbb
imul
lret
sbb
and
push
mov
faddp
pop
xor
pop
js
repnz
pop
push
popf
lds
lea
or
inc
xchg
xchg
mov
aad
ds
jp
mov
out
ret
popa
jbe
inc
std
mov
sbb
cmp
ffreep
fidivrs
push
mov
and
call
and
hlt
negl
inc
xchg
push
xor
mov
or
sub
push
xchg
pop
mov
jno,pt
pop
jg
add
push
jns
test
mov
repnz
push
lret
cld
icebp
cmp
push
pop
scas
mov
mov
lahf
xor
mov
xchg
sarb
movsb
add
or
mov
rclb
dec
cmp
sbb
mov
out
mov
cs
inc
lea
pop
jae
loopne
push
sbb
rcl
push
ss
jmp
clc
jmp
fnstsw
insb
hlt
xchg
out
fcmovu
movsl
pop
xchg
std
push
stc
and
dec
out
outsl
icebp
xor
jecxz
or
cmpsl
xor
leave
rorl
mov
stc
rclb
fwait
cmp
test
mov
push
arpl
inc
in
cmp
dec
adc
fstl
insb
mov
test
test
cmp
aam
adc
ret
fdivrs
imul
hlt
cmp
adc
sbb
xchg
imul
movl
mov
pop
lret
xchg
sti
ret
add
jmp
call
sbb
inc
cmp
cwtl
addl
jp
or
imul
loope
in
jecxz
arpl
mov
xchg
loope
ret
pusha
in
mov
in
sub
add
xchg
push
xor
add
mov
movsl
fldt
mov
cmpsl
mov
popl
sti
sbb
mov
addr16
inc
insl
ljmp
sub
fiadds
xlat
mov
mov
mov
stc
into
lods
ret
add
inc
push
int3
jmp
std
push
inc
mov
shlb
insb
insb
mov
pop
pop
cmpb
lods
mov
xchg
and
sbb
call
xchg
bound
add
adc
cmp
loope
into
inc
call
imul
pushf
mov
pop
adc
cmp
movsl
pop
movsl
sub
push
rcll
jecxz
lahf
pop
es
leave
jmp
xchg
sar
testb
pop
mov
jo
jnp
mov
dec
pop
adc
xchg
aas
push
lret
xlat
lcall
int
inc
jo
inc
mov
xor
popa
add
lret
pop
stc
xor
mov
jecxz
sub
notl
xor
repz
mov
addl
out
or
rcr
or
jb
les
jp
cmp
aaa
xor
into
insb
push
mov
cmp
std
xorb
xor
inc
in
cmc
lahf
jo
add
movsb
cmp
mov
andb
add
fiaddl
subb
cmp
push
ds
mov
inc
dec
or
dec
cmpsl
sahf
dec
sahf
dec
pop
add
int3
add
pop
lret
repz
imul
clc
ljmp
pushf
hlt
outsl
ds
lock
cmp
ror
insl
js
mov
cmpsb
cmp
scas
pop
mov
jg
and
mov
outsb
adc
mov
push
imul
dec
xchg
sbbl
fdivrs
loope
fsubs
ja
shll
mov
cmp
or
leave
popa
sub
scas
vpsubd
inc
out
test
lods
push
or
cs
jo
rcrl
jns
lret
xor
mov
sub
xchg
push
imul
mov
jbe
inc
imul
push
inc
sbb
and
push
stc
mov
insb
dec
je
loopne
out
mov
xchg
xchg
xchg
add
pop
out
add
pop
dec
rep
push
mov
mov
dec
shll
das
add
fstp
pop
push
xor
mov
adc
insb
adc
ljmp
fisttpl
mov
and
add
or
pop
arpl
mov
mov
ficoms
cmp
dec
cmpsl
inc
xor
aad
frstor
fdivl
dec
fneni(8087
hlt
popf
pop
aaa
lea
push
jbe
push
mov
mov
fsubrp
sub
sbb
inc
add
enter
inc
inc
or
and
cmp
in
lods
pop
pop
and
mov
and
pop
rolb
pusha
std
nop
cltd
scas
insb
pop
psrld
inc
testl
testl
in
and
xchg
ficompl
mov
jl
mov
cmp
mov
mov
je
bound
inc
into
fs
cmpsl
mov
mov
lods
scas
adc
adc
pop
rorb
cltd
push
and
pop
sub
int
and
in
pop
add
repnz
in
test
scas
jp
daa
out
inc
sub
scas
shrl
jno
mull
les
mov
sbb
mov
scas
test
lods
xchg
insb
mov
jb
or
add
inc
movsb
fwait
mov
xchg
jbe
sahf
xchg
cmp
fiaddl
out
add
mov
push
mov
adc
inc
mov
add
ret
leave
into
mov
jle
sbb
or
pop
mov
sbb
sbb
in
ret
push
push
dec
mov
std
test
imul
dec
test
cltd
hlt
sub
inc
into
test
loop
adcl
lea
mov
push
aam
mov
mov
cmp
ficompl
xchg
std
dec
lahf
add
inc
adc
sbb
fdivs
js
xor
into
adc
int
jl
jb
lds
das
pushl
adc
int3
xchg
test
out
gs
repz
push
fbld
jbe
ss
aad
les
push
ds
sarb
sub
out
pop
stc
in
and
sbb
adc
lcall
movsl
inc
in
mov
jp
xchg
leave
jno
push
cmc
sbb
inc
pop
sub
mov
imul
inc
mov
imul
sub
pop
ds
aaa
das
xor
mov
pop
ds
cld
mov
sub
call
or
roll
sbb
shr
out
mov
cld
sti
jg
sbb
mov
cs
jg
and
popf
sti
into
xchg
clc
sbb
repz
js
mov
cld
test
js
adc
int3
loop
sub
xor
inc
int3
cld
mov
dec
int3
loop
xor
mov
int3
and
cwtl
inc
add
out
popa
adc
out
aas
aaa
jno
xor
lds
mov
and
scas
lods
out
pushf
test
outsl
leave
imul
fcomps
mov
pushf
xrstors
lods
shrb
fs
xchg
je
stc
inc
adcb
push
lea
xlat
pop
xchg
xchg
ret
ljmp
les
xor
pop
push
xchg
sub
mov
push
lret
cmp
dec
xchg
cmp
mov
scas
jne
popa
and
mov
lcall
push
cwtl
or
jp
repz
push
add
push
sub
cld
xchg
mov
sbb
popa
fsubr
push
out
in
stos
cmp
cmp
xchg
mov
jb
lods
pop
and
nop
dec
fldl
inc
push
imul
push
stos
xor
outsb
shr
lret
cwtl
lods
mov
pop
pop
fistps
in
pusha
outsb
dec
movsb
cmp
lea
mov
push
bound
fdivrs
sub
inc
adc
mov
sahf
sarl
jecxz
lahf
inc
mov
pushl
scas
rorb
ret
and
arpl
lods
xorb
push
ret
daa
movsl
arpl
jnp
push
in
mov
add
dec
fwait
pop
jns
movsl
test
pop
popa
je
inc
mov
mov
mov
add
sub
fnstcw
popf
xor
sbb
sub
push
icebp
inc
lret
adc
xor
loope
insl
mov
nop
popf
aaa
repz
ret
push
or
xchg
push
lret
std
jg
sub
in
xor
or
mov
repnz
xchg
fistpl
mov
fwait
lock
add
cltd
push
aaa
mov
xor
xchg
enter
icebp
sub
rorl
and
sti
cli
nop
mov
vmulpd
lods
push
jae
jle
jno
sbb
sbb
cmc
push
in
push
cmpl
sub
mov
push
lods
rorl
aas
lods
iret
int3
push
cli
sub
xor
sub
out
stos
rcrb
xchg
lret
xchg
mov
fwait
jo
stos
or
inc
mov
shlb
call
outsl
aam
push
push
push
arpl
sub
in
lods
inc
sub
cmp
scas
sbb
jmp
adc
xor
mov
fst
popa
enter
subl
fcompl
nop
xor
les
pop
mov
icebp
xlat
and
test
js
sub
ficompl
cmpb
sub
or
fs
dec
adc
xchg
ds
int3
add
lret
ret
js
call
dec
into
call
fcomi
fcomps
mov
clc
mov
loope
mov
pop
popf
ljmp
xor
divl
push
mov
cmp
adc
test
xchg
popf
mov
scas
fiaddl
loop
int3
or
or
stos
loop
addr16
es
lds
int3
or
popa
and
jmp
xlat
mov
cmp
icebp
shll
loope
test
push
imul
xchg
lsl
xor
add
out
pop
mov
addr16
mov
shll
out
and
mov
lods
lods
lcall
sub
cmp
add
jb
in
dec
sub
cli
xlat
out
jle
mov
xlat
inc
cmpsl
cmp
push
dec
es
pop
xchg
shrb
data16
push
jne
xchg
push
jne
mov
ds
insl
test
iret
out
inc
sub
out
inc
sbb
sbb
cmp
cmp
sub
mov
and
cmp
aad
jo
sbbl
inc
stos
pop
dec
xlat
imul
outsb
subb
iret
and
lret
rclb
scas
sub
mov
cmp
lea
pop
loop
lods
int
in
sub
stos
pop
insb
out
dec
in
dec
lret
rcll
js
xchg
inc
outsb
fists
mov
sbb
int
sbb
pop
imul
lret
js
sti
xor
js
insl
jp
cmp
int3
ja
popf
mov
imul
sbbb
in
adc
mov
inc
xchg
hlt
lea
push
push
call
inc
add
or
fisubs
cmpsl
inc
insl
mov
pop
dec
aad
push
inc
jae
sbb
xlat
add
mov
ret
sub
lret
xor
jle
cmp
sbb
lods
out
jl
jb
push
divl
je
lcall
gs
lret
idivl
or
dec
call
cltd
adc
xchg
xor
dec
stos
adc
sub
pop
jle
rorl
jmp
fistps
mov
jp
fidivrl
inc
ret
cmp
sbb
xor
push
mov
mov
movsb
push
jb
sub
int
shll
or
out
fwait
ret
dec
dec
sarb
xchg
jg
inc
sahf
pop
mov
sub
setp
test
in
sub
incb
sbb
adc
lret
shr
inc
xor
data16
dec
mov
or
ret
rorl
pusha
adc
je
inc
jg
mov
jmp
mov
filds
ds
aad
push
nop
je
mov
add
dec
mov
push
cmp
xchg
sub
mov
lret
pusha
mov
decb
dec
mov
and
fwait
dec
jne
pushf
gs
xchg
pop
xchg
mov
xchg
sub
lahf
mov
in
fucom
dec
lret
xchg
xchg
pop
fs
dec
mov
loopne
xor
mov
sahf
movsb
push
push
out
mov
sbb
sbb
scas
sbb
dec
mov
xor
jnp
dec
popf
div
xchg
xchg
mov
dec
sub
jge
or
mov
lea
cltd
mov
add
cmp
jae
sub
leave
mov
or
and
inc
fldenv
inc
pop
or
aad
cmp
mov
jmp
or
or
aaa
cmp
cs
or
and
push
sub
xchg
stc
inc
test
sub
lahf
scas
shll
cmp
ljmp
cld
jmp
bnd
xor
out
lods
sbb
stos
mov
movsl
jno,pt
pop
inc
fcom
xchg
push
xchg
pop
xchg
xchg
rol
jecxz
test
std
inc
in
lods
mov
mov
ficoml
mov
pop
jb
movsl
sub
shlb
add
cmpsl
ret
fucom
inc
imul
xchg
inc
lods
inc
popa
mov
out
fcmovnu
xchg
shl
cwtl
jnp
pop
popa
adc
cli
push
or
push
loop
fs
jl
add
xchg
roll
imul
int
loopne
push
out
fld1
push
in
in
lods
mov
popa
sub
mov
rcl
mov
dec
mov
insb
xor
and
es
lock
and
ficoms
addb
fcomps
in
sbb
scas
adc
sub
dec
jo
cmp
popf
das
mov
mov
lret
adc
hlt
jo
or
mov
pop
push
js
mov
lods
xchg
mov
xchg
xor
hlt
pop
inc
pop
sbb
push
or
inc
push
mov
sub
xchg
es
adc
cs
jmp
push
les
push
and
and
je
nop
add
and
jmp
sub
movsl
xor
jecxz
loopne
test
add
inc
dec
cmp
xor
hlt
sbb
ret
cmpsl
push
imul
mov
sahf
push
mov
cmpsl
in
rorl
loop
rcr
mov
and
xor
cmpsb
in
jns
and
dec
push
xor
xor
sub
mov
les
fiaddl
adc
addr16
xchg
mov
jp
inc
mov
dec
cmp
iret
jae
stc
xlat
and
jecxz
adc
adc
sub
push
sti
movb
or
leave
rcrb
adc
aas
out
push
in
daa
adc
shl
fnclex
push
sbb
mov
mov
rcr
fldl
aas
adc
mov
outsb
mov
jb
scas
mov
jb
mov
fsts
mov
cmp
push
scas
loopw
cmc
inc
lods
lret
and
lret
or
movsb
lret
in
mov
call
in
sub
mov
aam
aas
in
inc
and
stos
mov
pop
or
add
ds
test
shrb
das
ds
add
imul
inc
jmp
fwait
inc
mov
xchg
stos
andl
and
test
sub
mov
test
inc
pop
mov
mov
jge
out
ret
inc
fsubrs
idiv
and
add
cmp
mov
jmp
stos
pushf
jmp
xchg
adc
and
push
sub
adc
lret
xor
push
cmc
fstl
xor
mov
lcall
mov
leave
dec
cmp
xchg
cmp
jnp
pop
sbb
mov
adc
enter
mov
rorb
add
cwtl
mov
push
lret
fs
xlat
test
dec
dec
push
dec
mov
shlb
push
cmpsl
shll
int3
insl
xor
sub
pop
test
xor
sub
into
cli
loope
adc
js
xlat
pushw
ja
and
mov
fisttpl
xchg
mov
jl
in
sbb
jno
sarb
xchg
pop
push
cmp
xchg
out
movsl
or
test
popf
hlt
cmpl
inc
negl
mov
or
pop
jbe
data16
inc
faddl
jo
add
jecxz
cmp
mov
rclb
mov
adc
dec
adc
xor
cwtl
popf
fsubr
iret
negl
scas
insb
cmp
das
out
lods
mov
xchg
ds
inc
inc
inc
or
add
push
jne
stc
inc
loope
mov
jno
pusha
xor
sbb
sarb
subl
dec
xchg
cmp
sbb
lds
cmpb
ret
xchg
inc
mov
ja
aad
ret
jae
pushf
adcb
sbb
xlat
mov
lock
je
sbb
mov
cmp
add
enter
mov
jmp
scas
sub
xor
mov
lret
loop
inc
fwait
repnz
cmc
sbb
xchg
push
ret
mov
insb
jmp
faddl
sub
push
mov
dec
lods
subb
mov
jmp
inc
mov
dec
dec
inc
dec
adc
jns
and
fsubl
sbb
mov
and
aam
xchg
cmp
loop
pop
scas
xchg
xchg
push
rcrb
test
aad
movsb
and
fldcw
dec
fdivr
dec
cmp
add
inc
push
pop
rolb
lods
add
and
in
insl
xchg
push
mov
mov
sbb
jmp
xor
negb
jae
or
int3
leave
stos
in
jle
loop
das
mov
test
and
cmp
in
jecxz
in
and
lods
pop
cmp
call
jae
scas
jno
xor
pop
pop
arpl
lods
xor
ficompl
inc
stos
sub
jmp
mov
mov
es
xchg
lea
stc
into
dec
xlat
add
jnp
mov
jns
jg
lret
push
mov
mov
insb
out
hlt
jecxz
pushl
xor
adc
push
sbb
mov
adcl
mov
jb
pushf
or
jae
fisttpll
cmp
stos
lcall
jbe
nop
cmp
push
imul
push
mov
dec
cmp
ds
sbb
decb
pop
aaa
add
std
pop
jp
adc
cmp
jecxz
sarb
loop
cmp
stc
insl
or
dec
inc
test
cmp
pop
adcl
mov
in
pop
push
jo
data16
test
add
push
sbb
dec
insl
add
mov
ret
sbb
repnz
push
sub
popf
add
adc
notb
pop
mov
xchg
push
inc
out
lods
xlat
jle
hlt
out
pusha
bound
jno
jmp
pop
cmp
outsl
pop
push
or
js
imul
mov
jle
dec
sbb
pop
inc
sysenter
clc
repnz
pop
dec
ljmp
testb
adc
adc
test
pop
insl
popf
sbb
pop
insb
jmp
inc
push
lods
imul
push
stos
lret
mov
adc
mov
mov
sub
adc
dec
or
out
mov
inc
mov
leave
lods
insb
imulb
dec
and
push
rolb
es
lods
loopne
insl
outsl
xchg
movb
add
lods
mov
jecxz
je
shl
ds
add
ret
mov
std
sahf
add
aad
movsl
lret
jns
mov
dec
cmpsb
mov
sbb
xorb
xchg
pusha
push
add
int
sub
xor
sar
sbbb
aam
push
aaa
cmp
cmpsl
push
mov
popa
fwait
dec
iret
jb
mov
mov
or
add
xorb
xchg
or
pop
cmp
xchg
sub
fcomp
mov
add
fidivs
and
js
mov
xlat
xor
jecxz
test
fisttps
jne
pop
push
imul
js
mov
loope
es
add
add
add
mov
mov
popa
arpl
cmp
or
or
push
xchg
cmp
int
into
pop
loop
sbb
cmpsb
std
notb
sbb
pop
pop
push
dec
add
ljmp
xor
sbb
fadds
dec
push
int3
add
push
fwait
xchg
mov
inc
inc
fsubrs
int3
push
enter
fmuls
and
scas
daa
or
es
stos
rol
stos
push
inc
js
mov
std
inc
sbb
lret
in
pop
cmp
fmull
or
cwtl
ret
fcmovb
ds
fdivrs
pop
fisubl
dec
adc
or
adc
bound
shr
fiadds
xor
mov
popf
push
inc
xchg
ja
sub
xchg
xor
mov
mov
dec
push
xor
dec
cmp
and
mov
sbb
in
pop
dec
add
fadd
pop
loop
sub
pusha
mov
rep
lret
subl
cmc
enter
or
stc
pop
addr16
mov
mov
mov
add
cltd
shll
stos
jbe
mov
fadds
lret
call
lea
lods
stc
mov
adc
arpl
mov
xchg
out
inc
shl
repnz
fs
inc
adc
repnz
pushf
fsts
hlt
call
jge
cmp
pop
in
das
or
int
sahf
push
lret
and
pop
rcrl
xchg
popa
in
adc
push
ss
flds
test
addl
mov
mov
cmp
mov
xchg
mov
aaa
cpuid
mov
xor
hlt
inc
leave
push
lock
xor
out
mov
out
dec
in
mov
xor
sbb
insl
insb
scas
dec
in
sahf
sbb
cmpsl
fs
jmp
clc
pop
cmp
mov
sub
mov
inc
fsubr
ljmp
dec
stos
fisubrs
mov
sub
jmp
jnp
aad
add
fs
icebp
stc
or
sbb
dec
ret
loop
lods
lret
popf
test
pop
aaa
insl
lahf
imul
fimull
pop
dec
hlt
outsb
imul
pusha
cmc
mov
add
push
in
popa
pop
int3
mov
cwtl
add
dec
jnp
dec
lcall
repnz
call
mull
sub
or
xchg
xlat
out
subb
shl
aas
sub
fs
lahf
mov
daa
out
lret
cld
mov
push
mov
rcrl
icebp
mov
test
pushf
push
addr16
mov
inc
in
cmpsl
ja
aas
and
outsl
xchg
adc
stos
lock
and
pushw
mov
frstor
fsubp
inc
repnz
mov
out
inc
sbb
das
push
jl
add
mov
mov
xchg
inc
dec
and
call
xchg
cs
bound
aaa
mov
xor
mov
pop
xchg
xchg
jno
mov
push
pop
insl
jmp
sbb
mov
fidivrl
sub
not
iret
mov
push
into
addr16
addr16
lret
outsb
mov
gs
sub
mov
aas
dec
lds
loop
jge
adc
xchg
stc
int3
add
nop
in
or
fwait
adc
lock
adc
add
cmc
pop
or
stos
cmp
fmull
lods
sbb
mov
test
loopne
push
jbe
stos
or
jmp
repz
xchg
cmc
daa
and
inc
hlt
xchg
pop
jne
mov
mov
je
or
cmp
push
rclb
scas
popf
jge
fisubrl
ljmp
inc
sti
insl
inc
mov
or
insb
mov
or
or
mov
cltd
insb
js
pop
or
push
f2xm1
movsb
fwait
insb
mov
sub
jnp
js
xchg
mov
sbb
and
sub
je
cmp
jge
mov
js
insl
lock
pop
fdivs
add
push
mov
xor
sbbl
jo
nop
mov
popa
pop
test
or
or
enter
es
ss
mov
jnp
inc
mov
out
push
or
lods
cmp
inc
in
in
lret
cs
ss
std
mov
scas
gs
push
mov
push
jne
imul
bound
aaa
dec
lea
dec
repnz
lock
cltd
inc
das
lds
mov
pop
mov
nop
sahf
mov
js
xor
or
loop
adc
pop
jp
add
test
xchg
add
daa
xchg
mov
loop
std
shll
mov
stos
cmpsb
inc
ds
xor
cmp
lret
test
mov
add
jne
pop
enter
jmp
aam
dec
ret
int
leave
fs
lahf
and
push
mov
inc
mov
lcall
and
fstpt
int3
sub
hlt
sub
arpl
fists
hlt
mov
xor
pop
add
jle
ret
mov
sbb
xlat
test
stos
pop
or
lea
xchg
loopne
orb
cwtl
test
jg
mov
adc
sbb
loop
dec
es
mov
cmp
or
inc
insb
cmp
inc
subb
out
andb
mov
test
lods
xchg
adc
xlat
imul
push
negb
lods
mov
ljmp
cmpsl
push
mov
sub
out
ds
in
ss
or
xor
and
je
add
and
test
pop
xchg
popa
fidivl
xchg
mov
aaa
popf
out
loope
cmpsb
jecxz
shr
sarl
das
into
sub
loope
aas
addr16
ja
fcmovu
loop
sub
dec
lods
int3
or
xchg
jne
push
jmp
mov
mov
cmp
mov
xor
mov
pop
sbb
lds
inc
adc
add
jp
sbb
sbb
xchg
inc
cmp
loope
ret
mov
mov
push
inc
lods
sub
cltd
add
fdivrl
mov
inc
inc
xor
xorl
pop
mov
pop
or
les
imul
fldenv
addr16
test
repnz
out
pusha
sub
jo
and
arpl
push
xchg
jb
pusha
push
push
xor
and
mov
fwait
stc
pop
add
ljmp
repnz
inc
fsubp
mov
ret
jg
ret
outsl
fidivrs
jb
jmp
add
shll
nop
inc
es
sub
push
test
xchg
andb
fdivrs
pushf
stos
or
leave
dec
mov
mov
mov
cmp
xchg
fimull
mov
mov
cmpsl
xchg
movsl
in
xor
out
dec
lock
popa
out
push
std
pop
pop
push
jb
les
cld
add
push
xchg
dec
jns
nop
bt
mov
cmp
fistl
pop
inc
adcl
pop
test
std
cmpb
cmp
jae
loopne
bnd
add
pop
xchg
lds
jb
adc
ljmp
mov
xchg
mov
inc
popf
sahf
sbb
fcomps
and
cltd
inc
add
cld
push
imul
mov
jno
and
imul
inc
shlb
aad
repnz
and
sub
mov
inc
hlt
xlat
in
mov
pop
imul
lcall
xor
adc
jno
xor
lea
test
and
add
loop
add
push
rcrl
call
sub
push
mov
push
add
mov
cs
insl
ljmp
pop
adc
aam
stos
or
pop
jnp
dec
pop
int3
sbb
pop
fists
int
out
and
gs
sbbb
mov
pop
rclb
cld
sbb
push
je
imul
xchg
movsb
cltd
xor
sbb
insl
inc
add
outsb
cltd
fistpll
js
sbb
repnz
int
repnz
push
jmp
filds
rorb
fnsave
movsl
dec
das
leave
sbbl
inc
aaa
dec
jae
adc
out
shr
cs
insb
xchg
cmpsl
shrb
je
lods
pop
dec
push
shll
ror
shll
pop
mov
addl
cmp
dec
pop
xchg
push
xchg
das
sarb
out
mov
out
daa
bound
aaa
popa
jmp
pop
mov
jae
cmp
adc
xchg
fildl
fwait
xchg
mov
pop
inc
mov
loopne
xor
lock
rorb
fs
pop
daa
lret
inc
repnz
cmp
dec
jo
leave
mov
dec
outsl
lret
or
movsl
dec
cs
outsb
xlat
mov
mov
in
lret
push
pop
out
xchg
push
push
test
nop
mov
popf
mov
enter
inc
in
fildl
mov
test
inc
pop
xor
popa
js
inc
jecxz
sbb
jmp
lods
xor
push
popf
push
cmp
mov
cmpsb
call
and
jo
into
xchg
popa
jo
push
push
outsl
lods
repnz
lcall
xchg
loopne
mov
imul
aam
mov
xchg
loope
ljmp
adc
sbb
into
push
push
data16
or
sbb
ss
into
mov
in
xchg
iret
ret
adc
cmpsb
cmc
pop
sbb
dec
sub
ret
lea
aas
mov
cmp
jl
in
push
call
out
notb
pop
push
fiaddl
cmp
and
xchg
into
xor
pop
jmp
leave
or
jno
jmp
scas
xor
stos
in
adc
mulb
insb
mov
mov
sub
xor
out
add
adc
mov
pop
in
bound
jmp
adc
push
loopne
lods
and
xchg
add
mov
push
or
xor
jmp
xor
insb
mov
mulb
mov
or
or
and
fsubr
call
stc
andl
sbb
push
dec
dec
pop
mov
ja
fildll
mov
add
pop
sahf
pop
pop
out
xchg
repz
and
mov
lds
push
rcll
jp
pop
cmp
jnp
mov
imul
jnp
mov
xor
das
lcall
aam
insl
rcrb
fbstp
jae
movsb
cltd
fidivrl
daa
sbbl
out
mov
xor
dec
sub
mov
xor
jle
or
not
fadds
lret
sbbl
adcl
or
cmc
inc
cmpsb
push
cmp
pop
hlt
enter
pop
adcl
mov
pop
fidivrl
and
xor
inc
push
mov
or
jnp
pop
xchg
icebp
mov
mov
xchg
sbb
lret
nop
ret
sbb
mov
dec
lea
cmp
aam
jnp
jno
out
pop
mov
loopne
jp
ja
bound
dec
xor
sbb
lahf
iret
es
shrb
psubd
adc
hlt
fucom
pop
jge
lods
pop
hlt
dec
pushf
sbb
icebp
xor
and
out
mov
fwait
sahf
mov
sbbl
bound
fnsave
or
xchg
aam
pop
inc
dec
cmp
jp
std
sbb
icebp
fcomps
pop
mov
enter
loop
scas
std
fsubl
pop
call
hlt
icebp
pop
mov
sbb
js
fwait
adc
shl
or
and
fisttps
jmp
cs
push
into
gs
out
adc
and
jb
inc
into
addr16
jecxz
out
push
ret
inc
pop
popa
dec
in
mov
or
add
mov
push
les
ds
cmp
sbb
mov
jnp
call
shll
push
nop
scas
dec
in
adc
aad
test
mov
call
cs
mov
adc
lahf
mov
iret
cmpb
lods
xchg
jecxz
pushf
test
lcall
out
xchg
mov
mov
or
push
mov
adc
mov
dec
aaa
pop
sub
mov
jg
and
pop
stc
dec
pop
pop
pop
pop
stc
pop
lods
test
dec
enter
add
faddp
idivl
inc
test
sub
mov
xlat
dec
xchg
js
dec
xchg
fwait
sub
adc
sbb
push
jecxz
dec
aas
dec
insb
rcr
dec
pop
test
movsl
jmp
dec
and
xchg
sub
clc
lock
push
push
push
into
lahf
pusha
mov
adc
cmp
jecxz
arpl
mov
aad
stos
js
test
mov
ss
pop
shrl
dec
add
mov
andb
data16
pop
call
mov
adc
xor
jb
mov
jne
mov
jge
sub
fbstp
cmp
mov
decl
lods
add
or
cmp
mov
mov
int3
jns
int
push
lods
in
jnp
test
jp
ret
out
mov
iret
mov
out
push
addr16
mov
push
or
in
adc
orl
mov
jne
out
roll
or
add
jbe
lods
loopne
clc
push
pop
jne
pop
pusha
lods
scas
cmpsl
mov
sub
cld
sbb
or
imul
or
lods
test
jle
lock
shlb
jae
aas
fwait
lcall
fldl
jb
push
scas
lods
decl
add
and
cmp
lods
pop
jno
mov
test
mov
add
call
notb
fbstp
ljmp
hlt
xchg
xor
pop
xor
insl
mov
inc
lahf
inc
mov
repnz
mov
out
pop
mov
or
push
jnp
xor
das
icebp
and
inc
inc
pushf
xchg
stos
cwtl
sub
jns
mov
jbe
call
jle
lock
ja
jle
fstpt
js
out
andb
repz
out
es
scas
and
repz
filds
loope
sbb
mov
out
dec
clc
in
xchg
jno
std
adc
std
pop
pop
or
neg
repnz
sbb
xor
cli
std
mov
mov
sarl
imul
lods
outsl
add
mov
imul
sahf
jo
xor
jno
sub
jbe
clc
mov
or
arpl
jno
ret
cmpb
dec
mov
xchg
inc
xchg
imul
arpl
cmp
add
pop
push
add
jge
in
add
stc
popf
jmp
cmp
cs
inc
sbb
inc
cli
cmp
dec
das
mov
mov
fs
mov
add
add
mov
mov
push
into
idivb
pop
int3
add
adc
scas
add
insl
mov
cmp
and
inc
scas
mov
dec
out
dec
xor
inc
xchg
mov
jecxz
subb
ljmp
rcr
dec
dec
cmpsb
sbb
clc
jp
shlb
cli
xchg
xchg
pop
mov
dec
jl
lea
cmp
mov
dec
xor
mov
xchg
scas
fadds
repnz
mov
ss
xchg
es
cmc
mov
push
push
sbb
mov
xorb
fldcw
repz
lahf
jle
pop
add
cmp
jle
fstpl
cmp
mov
test
or
inc
mov
pop
dec
inc
mov
and
call
scas
test
rcrb
jl
push
xchg
sub
and
cmp
mov
fs
mov
mov
push
mov
jmp
xor
imul
js
es
lahf
inc
mov
bound
pop
repnz
pop
fstps
stos
cli
pop
arpl
stc
or
adc
and
or
notb
inc
pop
daa
jns
and
jns
inc
push
lods
pop
imul
jb
pop
sub
in
mov
mov
sarl
movsb
jns
push
jbe
dec
xor
ds
mov
pop
arpl
mov
mov
daa
xchg
lds
jge
iret
fdivrs
and
dec
dec
aas
cwtl
xor
and
adcb
xchg
daa
and
das
lcall
jo
sub
xchg
jbe
mov
mov
out
leave
and
push
push
dec
pusha
add
cmp
or
je
test
mov
mov
divb
mov
loopne
data16
adc
push
fisttpl
inc
add
seta
xchg
psllw
fmull
jns
sub
and
jnp
aaa
stos
dec
cmp
rol
arpl
cmp
mov
inc
aam
mov
mov
add
push
and
movq
cmc
nop
adc
xchg
push
push
loop
jb
mov
adc
aas
push
sub
and
subl
outsl
add
cli
insb
add
loop
outsb
in
and
out
inc
data16
stos
sbb
adc
dec
dec
stos
push
mov
cs
add
inc
sbb
xchg
out
out
leave
mov
inc
sub
xor
shlb
ljmp
mov
cltd
mov
xor
mov
shl
loop
xor
je
sbb
movsl
mov
xchg
push
mov
and
add
adc
insb
mov
pop
in
out
outsl
mov
dec
cld
outsb
sbb
push
aaa
outsb
jno
ja
mov
adc
outsl
iret
aas
or
insl
negl
sbb
sahf
xchg
nop
sbb
das
cwtl
cs
inc
push
cmp
ret
cmp
dec
movsb
cmp
or
les
sbb
sbb
mov
inc
xchg
pop
dec
aam
mov
mov
push
enter
sbb
je
or
lahf
xchg
dec
pop
jg
fmul
sbb
xor
fidivrl
dec
fwait
test
inc
pop
pop
xor
inc
sub
lcall
inc
sub
mov
jl
nop
and
shrb
xchg
cltd
xchg
xor
gs
sub
cltd
push
popf
rol
fidivs
mov
push
movsb
fstps
push
push
out
movsl
repz
in
xchg
out
jno
adc
add
jb
cwtl
pop
add
jge
sbb
mov
aam
or
popa
lods
fists
or
popl
sahf
xchg
idivl
jecxz
into
in
dec
addr16
std
insl
ss
mov
mov
pop
ss
push
popa
mov
fs
enter
push
loop
enter
ret
and
movsb
xor
leave
dec
loop
outsl
sub
mov
fsubrl
sub
js
xor
outsl
xor
and
jbe
fimuls
jno
mov
or
add
into
in
in
dec
add
dec
and
cmp
aam
and
js
push
mov
mov
cmp
in
dec
add
and
push
sbb
out
and
insl
cmp
sahf
inc
in
sub
sbb
push
stos
mov
in
test
xchg
mov
inc
cmp
aad
pop
fcmovne
aad
lcall
pop
push
outsb
sbb
cmp
pop
sub
scas
jge
sbb
inc
jb
cltd
into
mov
sub
je
jbe
xlat
adc
and
aam
icebp
ljmp
dec
stos
imul
cmp
and
shlb
ss
in
es
data16
fwait
mov
and
xchg
insl
in
clc
mov
sub
inc
ljmp
inc
mov
popa
hlt
cli
mov
and
xchg
ss
inc
push
mov
dec
dec
les
push
jle
or
imul
and
sbb
push
mov
pop
jp
inc
ret
mov
xchg
lret
cmp
fisubl
pop
xchg
in
adc
add
lods
popf
int3
jbe
or
bound
lcall
lods
ljmp
rcl
iret
ljmp
cmc
inc
pop
pop
jmp
aaa
mov
lock
mov
call
pop
sbb
arpl
add
jl
fisubrl
or
fxch
cli
loop
ret
xor
in
sub
mov
dec
mov
rcrl
bnd
jl
xchg
pop
xor
inc
test
push
lds
mov
sbbb
sub
push
out
dec
aaa
jno
fsubr
insb
inc
sahf
sbb
and
and
hlt
dec
jl
xor
int
js
testb
in
or
sar
sbb
imul
out
inc
sub
fstp
mov
mov
or
add
pop
push
and
sub
movb
sub
pop
data16
mov
ss
xchg
fldlg2
jb
out
sub
add
mov
jmp
daa
repnz
ds
loop
jge
arpl
push
lret
fwait
imul
xor
std
pop
mov
fcoml
mov
dec
push
call
in
in
aas
das
xchg
adc
je
push
or
les
jl
fisubs
mov
faddl
inc
xchg
int
or
sub
push
push
push
out
in
and
jbe
sbb
mov
mov
xchg
push
out
imul
xchg
cmp
test
adc
xchg
in
adc
dec
scas
sbb
sbb
in
insb
jb
and
dec
mov
pop
sbb
into
lds
dec
dec
mov
dec
cmpl
lods
repnz
testb
jg
cmp
loop
dec
or
repnz
add
mov
jns
orb
aam
inc
mov
push
fadds
test
das
inc
rclb
xchg
mov
jbe
jno
xor
cltd
insl
xchg
mov
or
repz
loope
int
fisubrs
mov
adc
sub
adc
andl
mov
int3
test
ret
jae
imul
dec
mov
insb
xchg
adc
mov
aas
mov
sub
test
pushf
shll
pop
in
lock
outsb
aaa
jns
or
jbe
add
ds
mov
pop
hlt
std
sbb
push
mov
push
bndldx
fs
and
loope
fnstenv
lds
mov
movsl
and
aad
fidivs
fcomps
jge
sub
sbb
in
rcrb
pop
xlat
in
inc
pop
pop
dec
fcompl
test
or
repz
sbb
ret
les
jns
xchg
mov
xchg
add
pop
stc
and
cmp
adc
inc
cmp
call
sub
push
jg
imul
fistps
jg
in
es
ret
and
xor
lods
push
xorl
sahf
inc
fsts
or
movsb
sub
push
insl
mov
jecxz
in
pop
fbstp
daa
lret
andb
leave
cli
sbb
rcrl
and
sti
leave
aam
mov
push
xlat
or
aad
sbb
mov
test
push
in
sub
sti
cmp
dec
je
xchg
loope
insl
ret
je
mov
add
mov
mul
ret
nop
movsb
pop
repnz
xchg
dec
cmp
mov
es
ror
mov
fs
out
in
push
mov
ret
js
and
enter
cmc
cmp
nop
ljmp
inc
pop
push
xchg
cmp
enter
cmpsl
xlat
out
push
lods
cmp
fs
jp
stc
mov
mov
pop
fidivl
cs
out
adc
data16
aad
outsl
jno
inc
cmp
mov
aam
jl
enter
in
jae
lock
shlb
aaa
test
cmp
sbb
rorb
mov
inc
mov
lret
pop
adc
cmpl
and
adc
add
out
adc
gs
dec
and
fsubrl
jne
mov
and
loop
cmp
fnstcw
popf
test
or
enter
cmp
adc
dec
imul
in
jnp
sbb
addr16
int3
dec
adc
cli
dec
iret
popa
sub
mov
lock
clc
jae
dec
jb
gs
inc
cmp
lods
inc
dec
ret
ret
push
ss
cmp
jmp
pop
pusha
enter
sub
inc
lods
mov
movsl
xor
dec
xor
pop
loop
pop
push
int3
inc
mov
xchg
xor
leave
adc
or
fsubl
jecxz
xchg
leave
sarl
les
push
adc
imul
popa
stos
sub
dec
pop
loopne
scas
xchg
notl
call
add
lret
pop
lret
jo
lds
lods
lods
dec
mov
test
xor
cmp
fwait
jno
xchg
lea
addr16
adcl
and
je
cmp
pop
lcall
pop
cmp
popf
loope
fldt
dec
pop
std
gs
dec
or
jns
test
arpl
icebp
ret
pop
cmc
mov
mov
gs
push
pop
incb
loope
mov
jge
js
lret
jp
out
outsl
pop
pop
ret
and
fwait
xchg
xor
xchg
scas
int
pop
ss
push
popf
clc
xchg
ror
cs
test
cli
add
sbb
subb
and
mov
push
mov
into
jmp
pop
testl
dec
f2xm1
mov
add
in
xor
out
dec
jbe
push
das
daa
pop
pop
mov
lcall
pop
andb
or
push
cmp
xchg
pop
aam
mov
pop
dec
mov
dec
addr16
mov
daa
dec
jnp
nop
test
mov
inc
lods
add
sbb
movsl
mov
pop
xchg
in
pop
insb
pop
loop
test
lock
ljmp
sub
insb
or
push
aad
push
inc
mov
jecxz
push
mov
add
pop
bnd
jl
sbb
test
sbb
adc
cmp
stc
std
push
stos
icebp
cli
je
shlb
jbe
insl
ret
xlat
jecxz
aas
loope
sub
ds
sbb
inc
ret
sbb
cld
sub
pop
sub
leave
xor
cmp
aad
call
xchg
repz
mov
sbb
loope
sbb
jmp
in
jb
inc
add
inc
mov
mov
mov
cmpsl
add
push
lahf
and
lea
jnp
and
pop
fcmovnb
cmc
leave
sbb
pop
and
mov
fldenv
es
or
in
mov
sahf
push
mov
cltd
scas
pop
add
mov
rclb
repz
pop
jl
pop
xchg
mov
lods
adc
xlat
and
or
das
mov
pop
loope
and
fcmovnb
mov
push
and
push
rorb
jns
mov
jp
inc
mov
sbb
jp
push
pop
fwait
icebp
jnp
or
mov
outsb
inc
lea
aaa
push
and
cs
push
bound
aaa
xchg
fisttpll
xchg
bound
jno
xchg
push
faddl
iret
je
fwait
scas
loop
cmpsb
jne
fnsave
jmp
lods
ja
fbld
adc
inc
scas
insl
xchg
sbb
fsubrl
jo
rcl
lret
int
pop
arpl
jge
mov
lahf
mov
jge
fiaddl
cmp
mov
sbb
xchg
inc
or
jmp
mov
ja
cmp
xor
pushf
insb
sbb
inc
daa
jne
mov
aas
jne
cwtl
pop
nop
out
jae
int
xchg
xor
out
js
mov
or
and
pop
push
jns
rolb
scas
adc
imul
jge
xchg
shrb
mov
ja
mov
movsl
jl
pushf
stc
nop
lret
sub
inc
or
add
inc
popa
aas
call
xlat
loope
jne
jmp
jge
imul
sub
and
arpl
mov
or
addr16
xchg
rolb
scas
jmp
push
mov
shlb
das
test
cmc
mov
jne
dec
and
xchg
clc
jns
push
mov
push
mov
add
pushf
sub
push
in
jg
aas
ret
push
mov
ret
adc
outsl
sub
mov
mov
jbe
mov
dec
pop
dec
out
mov
mov
pop
lcall
mov
mov
inc
call
ljmp
lcall
sbb
adc
mov
mov
or
xor
mov
and
fdivr
dec
adc
mov
idiv
sbb
mov
jnp
push
sbb
lcall
mov
mov
sbb
dec
rcll
cmp
lcall
inc
dec
addr16
std
clc
cs
rcll
stos
mov
cmp
xor
imul
xor
cmc
adc
and
jno
cmpsb
sti
sarl
dec
inc
ret
popa
ret
sub
scas
pop
cltd
iret
in
daa
rcl
repnz
cmpb
dec
fisubl
insl
imul
mov
sbb
pop
test
rorl
in
aad
scas
out
repz
js
sbb
ss
iret
stos
push
into
bound
jp
jne
cwtl
imul
add
dec
mov
cwtl
cmp
push
stos
push
repnz
or
lods
pop
orl
bound
jae
dec
js
outsl
push
add
sbb
pushf
dec
test
mov
mov
xchg
xchg
aaa
xlat
dec
aad
pop
xchg
outsb
sub
lret
inc
movsl
gs
js
bound
cld
inc
lcall
mov
lock
jge
xor
or
lcall
push
ret
gs
inc
cmpsl
test
pushf
pop
pop
and
xchg
mov
or
add
int
gs
out
add
test
mov
jne
adc
xchg
aas
push
add
mov
push
adcb
push
fs
lea
inc
enter
push
dec
in
insb
dec
push
icebp
cmpsb
xchg
inc
dec
xchg
out
pusha
or
jne
popf
pop
xchg
fistpll
imul
movsl
cwtl
xor
rorl
jg
inc
pop
js
test
sbb
adc
push
fs
mov
test
cmp
xchg
iret
roll
movsl
imul
out
adc
xchg
sarb
lahf
jl
mov
insb
dec
jle
int
cmp
dec
filds
dec
lahf
pusha
pusha
jae
pop
mov
jge
outsb
push
and
or
or
cs
sub
cli
inc
mov
cmp
xchg
pop
incl
sbb
mov
lock
jle
pop
lea
jb
jae
loop
mov
adc
adc
sub
ret
lcall
imul
imul
jge
dec
jmp
out
mov
jne
loop
negb
enter
sub
dec
pop
outsb
arpl
repz
lds
mov
jmp
sub
stc
push
xchg
insb
aad
std
mov
sub
xchg
adc
xchg
out
in
fs
pushf
push
add
mov
repz
mov
sub
sbb
fst
mov
bound
dec
cli
jle
pop
lret
outsb
idiv
jl
lahf
add
mov
xchg
fmuls
stc
insb
xchg
out
cs
xchg
scas
pop
aaa
push
mov
adc
dec
push
inc
or
cmpsb
fsubrl
mov
fcmove
sti
mov
data16
das
xchg
std
jg
aam
cmpsb
inc
lock
xchg
add
and
iret
fldl
call
es
sub
cmp
mov
dec
fsubl
ror
sahf
mov
pop
dec
push
enter
pop
pusha
imul
inc
mov
or
or
ljmp
outsb
dec
shll
jp
mov
loope
push
outsb
push
or
repnz
jne
outsb
outsl
mov
xchg
add
xchg
xor
gs
sub
leave
dec
lcall
fists
icebp
popf
or
jecxz
and
and
loop
jge
mov
bound
cwtl
sub
aaa
jae
rcrl
imul
popa
jno
mov
pop
jne
pop
jmp
jb
push
imul
push
adc
test
jne
add
xchg
fldcw
pop
jb
sbb
ficomps
add
pusha
push
pop
push
mov
or
insb
aas
push
mov
iret
mov
pop
das
enter
test
mov
jp
push
or
sub
aad
and
xchg
cli
xchg
xlat
sarl
and
jb
scas
push
rorl
dec
insl
repnz
dec
inc
rcl
xor
test
cld
inc
cltd
out
je
xchg
xlat
mov
sbb
out
jb
or
or
mov
dec
adc
or
mov
test
xor
mov
daa
inc
cwtl
js
gs
pop
pop
pusha
gs
cs
int
mov
int
cmpsl
jmp
mov
test
mov
in
pop
mov
sbb
out
cld
cmp
movsb
fwait
mov
and
push
sub
nop
fs
orb
inc
jb
inc
cli
int
dec
pop
or
je
fdivl
lds
jo
stos
inc
sbb
pop
xor
push
jp
insl
pop
adc
inc
in
hlt
ljmp
mov
cmp
pop
scas
dec
adc
xchg
test
xchg
fsts
std
mov
outsb
mov
out
mov
mov
lret
sbb
inc
inc
rcll
or
push
mov
lods
sub
xchg
rcrl
and
lret
sub
xchg
cwtl
stos
inc
stos
rcrl
imul
and
mov
sub
test
shr
jp
jmp
out
inc
int3
clc
xlat
arpl
pavgw
jge
mov
push
mov
bnd
test
jg
mov
bound
fadds
stos
push
iret
ja
out
mov
movsb
sub
pmuludq
mov
pop
sbb
add
xchg
sbb
cmp
test
movsb
dec
push
add
mov
adc
pop
outsl
push
mov
pop
icebp
out
jno
cmpsb
push
inc
add
scas
adc
out
xor
adc
adc
xchg
rorb
movl
int3
and
rol
adc
dec
rclb
lea
imul
pushf
sbb
test
and
dec
cmpsl
ds
adc
push
pop
insl
das
mov
pop
outsl
fimuls
clc
push
and
rcrb
adc
movsl
testb
jb
mov
fsubp
arpl
xor
fcomi
stc
jmp
inc
out
mov
iret
fisubrs
mov
inc
jne
cmp
sub
jg
cli
or
test
movsl
ljmp
and
jae
mov
pop
jbe
insl
test
or
dec
inc
xchg
ret
inc
adc
cli
xor
fdivr
inc
jo
mov
xchg
decb
aad
ss
cld
adc
ficoms
push
mov
mov
ja
cmp
xchg
cmp
push
inc
jp
mov
add
mov
imul
or
addr16
repz
pop
fmull
lcall
ljmp
mov
mov
pop
mulb
aad
ljmp
adc
mov
xor
cmp
fidivs
fdivrp
not
dec
xchg
cmpsb
mov
out
pop
out
mov
mov
pop
jns
pop
jns
out
sahf
xor
arpl
lahf
repnz
imul
dec
xchg
andb
xchg
sbb
dec
out
clc
pop
pop
add
fmuls
sub
mov
mov
test
jbe
lods
sbb
xor
aad
sub
jb
fstl
sbb
xchg
xor
pop
adc
mov
sbb
or
stos
je
mov
into
clc
sub
xchg
addr16
xchg
dec
mov
mov
adc
sub
mov
rcll
nop
stos
adc
sbb
push
sbb
aam
xchg
nop
fs
hlt
inc
push
inc
adc
movsl
xchg
push
fs
pop
push
lock
lret
int3
xchg
mov
mov
enter
lahf
or
and
sub
iret
js
call
imul
rcl
jb
sti
mov
dec
scas
jbe
adc
cmp
or
ret
dec
cwtl
add
stos
push
lock
xor
inc
shrb
in
mov
enter
cltd
iret
lahf
inc
hlt
fs
stos
sub
xchg
das
xor
loope
jle
mov
mov
jg
in
or
cmp
les
ljmp
sub
in
lods
scas
push
lahf
shrl
mov
or
sub
and
mov
sub
dec
sub
mov
pop
cltd
je
std
call
mov
vunpckhps
scas
add
lea
inc
out
fdivrs
jns
aas
sbb
mov
pop
test
scas
test
cmp
mov
dec
test
jae
or
mov
pop
jmp
imul
push
insl
xchg
mov
imul
imul
dec
and
aaa
loope
xor
jns
jmp
inc
test
xor
or
dec
xchg
mov
lahf
push
mov
clc
xor
add
cmp
gs
aad
mov
out
enter
or
in
icebp
mov
movsb
push
call
sub
mov
aad
iret
inc
les
mov
inc
aad
inc
mov
ljmp
inc
shll
fstp
cmpb
ret
xor
outsb
push
loop
mov
xor
hlt
pop
je
in
ss
adc
dec
jnp
jl
sub
outsb
sbbl
stos
cld
mov
sub
lods
mov
push
ret
cmp
dec
jnp
pop
lret
cmp
aam
cmp
pop
leave
andb
add
cltd
out
not
cli
movsl
lods
enter
out
mov
push
or
dec
out
mov
mov
aas
stos
stos
pop
or
mov
ficompl
pop
pop
loop
std
sub
insb
jl
test
or
hlt
sbb
dec
push
out
repnz
out
mov
sbb
pop
add
jmp
pop
adc
xor
inc
test
movsl
aad
data16
bound
push
xchg
fisubrs
outsb
jae
mov
mul
inc
push
loopne
mov
iret
icebp
int3
stos
xchg
pop
imul
cmc
mov
out
outsl
das
hlt
data16
arpl
icebp
jno
lcall
jo
je
nop
sbb
cmc
movsb
dec
or
add
mov
out
test
hlt
add
stos
mov
xchg
push
jno
stc
and
je
mov
xchg
xor
mov
enter
lock
xor
out
sub
repz
fwait
pop
xchg
and
andb
clc
add
xorb
in
sub
push
test
shll
rorl
mov
sbb
cmc
mov
push
outsb
in
jnp
dec
in
stos
test
daa
call
int3
iret
dec
cmp
pop
mov
inc
pop
mov
dec
xchg
pop
adc
sub
inc
jae
mov
jge
in
outsl
mull
stos
test
mov
fsubrp
mov
lods
pop
sti
pop
es
adc
out
sahf
out
pop
test
adc
sub
das
aad
dec
xchg
mov
nop
mov
imul
mov
into
push
inc
leave
push
cmp
xchg
add
sbb
sarl
push
lret
mov
scas
scas
or
jl
ficoml
popa
addl
dec
repz
jl
outsb
hlt
add
pop
inc
push
push
sub
add
mov
push
pop
aad
cmp
inc
dec
outsl
lock
or
ja
pop
or
push
bound
les
sbbl
push
jp
retw
cmp
and
add
cmc
push
js
mov
push
js
adc
mov
cmp
popa
fidivs
adc
lock
rolb
leave
sub
outsl
adc
inc
mov
xchg
cmpsl
mov
sbb
ja
pop
mov
cmp
cmc
loopne
cld
inc
jp
scas
sti
adcl
jne
mov
push
cltd
or
cwtl
jbe
push
ret
paddsw
pop
dec
mov
or
test
idiv
js
cs
xchg
aaa
jmp
jl
js
or
addb
jg
ret
ja
jg
sbbb
add
imul
idivl
push
mov
add
ss
fwait
dec
mov
adc
dec
cmp
xchg
mov
mov
into
mov
dec
adc
movsb
pop
fsubl
mov
cltd
dec
ret
adc
push
sbb
movsb
cld
xor
fcmovb
adc
rorb
pop
lock
and
cmp
jl
int
mov
repz
adc
icebp
data16
gs
stc
mov
rorb
add
or
add
xchg
rorb
imul
pop
xchg
jne
out
pop
pop
xor
pop
sub
push
test
or
in
cmpsb
add
movsb
push
cltd
or
jno
xchg
mov
push
and
mov
xchg
xchg
popa
push
fadd
jp
test
push
sti
fistl
shl
out
xor
das
xchg
jne
or
in
lahf
pop
aam
jns
fisttps
inc
and
inc
sub
sbb
hlt
mov
stos
pop
xchg
stos
loop
push
pusha
sbbb
inc
out
xchg
cmp
cli
push
jae
sub
mov
pop
cmp
icebp
mov
jl
ds
out
xchg
pop
dec
dec
push
jns
ret
or
ret
xor
pop
add
fnstcw
lods
or
bound
sahf
je
push
xchg
les
subb
cmp
pop
push
cld
shrd
lret
sub
ret
iret
push
jmp
fistps
pop
fadd
ret
pop
add
loop
mov
divl
pop
shrb
aas
xchg
jns
clc
rcr
test
push
ret
fs
mov
mov
std
rcrb
ja
mov
out
adc
xchg
outsl
test
pop
xchg
push
adc
lods
xor
testl
xchg
dec
pop
pop
mov
fiaddl
or
mov
lcall
ljmp
cmp
in
icebp
inc
je
push
dec
add
mov
pop
cwtl
and
sub
mov
dec
pop
jbe
xchg
xchg
dec
popf
cmp
mov
pop
aaa
or
ret
aas
lahf
fcmovnu
mov
sub
jle
insb
add
push
movl
mov
push
fisubs
addr16
cld
sub
subl
cwtl
stos
addr16
inc
xor
mov
sbb
inc
outsl
push
aas
mov
int3
cmp
divl
cld
cmpsl
ja
xlat
push
out
mov
dec
fwait
dec
hlt
cmp
jbe
testl
add
orl
add
jnp
leave
adcb
insl
nop
xchg
adc
sub
in
xchg
lea
pop
xchg
sti
cmp
mov
pop
adc
shl
rclb
fwait
cmpsb
iret
add
push
mov
jns
arpl
cmp
mov
movsl
iret
fmuls
jecxz
out
push
xor
clc
or
cmp
out
push
icebp
xlat
daa
mov
aas
mov
add
add
jae
iret
fs
lahf
sbbl
cmp
arpl
cmp
inc
je
dec
sbb
int3
btc
fwait
sub
fbld
mov
jp
mov
enter
out
adc
pop
sar
xor
cmp
xor
mov
xchg
dec
cld
les
loope
mov
sbb
loope,pn
push
sub
sti
adc
fbstp
icebp
fwait
loope
sti
inc
xchg
nop
out
imul
inc
cmp
or
jl
jae
bound
add
fwait
push
sbb
inc
das
push
imul
mov
aaa
loopne
out
add
es
test
sbb
gs
jae
dec
jnp
clc
or
data16
push
xor
clc
sbbb
sbb
repz
ss
xor
cltd
mov
add
sahf
or
mov
mov
xlat
sti
mov
mov
insb
inc
das
push
loop
les
ss
jbe
ljmp
dec
push
xchg
fldl
rorl
stc
aaa
mov
pop
add
inc
int
scas
and
stc
push
jb
mov
pop
dec
xor
jge
xchg
mov
dec
aaa
dec
test
jb
adc
cli
icebp
data16
daa
mov
adc
pop
fistps
sahf
jns
mov
mov
jge
clc
add
push
mov
add
test
adcb
add
lret
aaa
loopne
adc
cmp
insb
pop
fiaddl
ss
mov
bound
enter
idiv
adcl
out
add
add
fcomps
and
fisubrs
cmp
int
dec
adc
bound
leave
rorb
sub
mov
insb
ss
pop
rclb
mov
jmp
ljmp
pop
mov
je,pn
push
lret
inc
cmpsl
fisttpl
sub
xor
cmpsb
or
and
lcall
or
loope
fistpl
mov
xorb
mov
or
xchg
aad
inc
push
fmuls
cmp
mov
sti
lret
pop
cmp
repnz
jae
fsts
or
das
leave
repnz
les
int
or
dec
xchg
lods
dec
push
mov
sbb
pop
sbb
inc
or
fadd
cmc
adc
loope
push
mov
push
mov
hlt
push
push
or
sub
idivl
outsl
push
aam
add
pop
mov
vpsadbw
xor
icebp
pop
rcrb
pop
sbb
test
and
xor
leave
inc
leave
mov
push
movb
sbb
lret
mov
sub
adc
leave
fmull
pop
xchg
mov
sarb
lcall
inc
xchg
dec
or
push
push
aas
cwtl
in
sub
les
jnp
push
mov
jecxz
add
and
mov
hlt
pop
lods
push
les
add
jne
leave
jle
lcall
pop
jge
sub
add
mov
push
mov
popl
mov
mov
aas
pop
in
jl
xor
movd
push
fistl
cli
jmp
mov
sbb
mov
cmpsb
inc
orb
jp
mov
pusha
sub
dec
xchg
in
popf
push
cmp
in
adc
cmp
imul
outsl
jno
mov
popfw
cmp
gs
push
pop
push
mov
mov
fdivrl
aaa
xchg
js
lcall
int
nop
jle
xchg
subb
jmp
pop
cld
insb
das
inc
stc
sub
and
jle
jp
loope
cmc
cmp
mov
out
dec
sub
dec
fisttps
loopne
jle
jnp
out
fistpll
fistpll
mov
fnstsw
cmc
mov
into
out
int
fcomp
js
cs
mov
mov
int3
push
cmp
xchg
jle
push
idiv
loopne
outsb
pop
aas
xor
jo
in
and
jnp
sub
andl
cmpsb
test
pop
push
iret
dec
shlb
es
and
and
loopw
or
mov
xor
sub
jae
pop
xchg
fs
sbb
pop
rolb
cmp
mov
mov
add
sbb
iret
push
mov
sbb
fwait
dec
scas
int
mov
sbb
shll
test
loope
xlat
mov
cli
xor
jno
cwtl
ja
mov
addb
lods
sbb
pusha
jb
hlt
xor
lret
and
add
das
sub
or
adcb
movsb
fwait
mov
cmp
stos
inc
push
mov
add
rorl
sbb
mov
push
push
push
pop
jp
adc
addb
jne
mov
ss
insl
xchg
loopne
aam
xchg
gs
call
jp
mov
cmp
popl
mov
fcompl
pop
push
ss
mov
xchg
mov
aaa
sub
xor
xor
and
loop
inc
push
push
cmp
loope
icebp
mov
aam
inc
loopne
cmpsl
xor
mov
ljmp
sbb
inc
xchg
xor
imulb
mov
cs
cmpb
jl
lahf
xchg
adc
fwait
pop
cltd
das
push
cltd
std
bound
js
and
call
push
lcall
test
xor
hlt
adc
sub
dec
call
mov
push
mov
sub
pop
xchg
jmp
and
sub
sbb
out
jecxz
xor
outsl
jbe
cli
adc
sti
ds
negb
repnz
ret
daa
dec
fcmovnbe
jo
dec
add
fs
repz
mov
jae
iret
nop
mov
fisttps
adc
lahf
and
mov
mov
or
in
add
ljmp
dec
pop
pop
push
inc
lds
inc
cmp
movsl
jle
xchg
fisttpl
movsb
test
loopne
jb
scas
cli
out
and
nop
jl
mov
stos
cmp
push
lock
leave
fwait
outsl
sbb
test
cmc
into
lea
out
imul
fimuls
aaa
fucomip
sub
insb
shlb
xchg
pop
into
add
mov
xor
pop
mov
mov
pop
ret
inc
out
mov
mov
aam
or
adc
out
or
sbb
add
xor
mov
sub
cmp
or
sbb
sub
push
fwait
outsl
push
repnz
adc
lcall
or
push
test
enter
xchg
arpl
add
sub
pop
jae
popa
jl
xchg
pop
iret
jae
loope
cli
push
or
or
inc
xchg
jecxz
in
mov
pop
nop
xchg
lock
add
pop
icebp
mov
lds
pop
cs
jp
or
addl
imul
div
data16
adc
push
adc
out
jge
fwait
xor
xchg
jl
inc
or
sbb
outsl
push
dec
aam
pop
lods
repnz
jle
xor
sub
xor
mov
adc
sub
sarl
xchg
sbb
cmc
stc
fcompl
mov
adc
dec
mov
jae
push
stos
inc
int3
add
pop
clc
and
dec
iret
mov
inc
adc
and
pop
cs
divl
add
mov
xchg
das
push
aam
pop
mov
aad
sub
lods
repz
inc
xor
or
push
jmp
js
je
iret
xor
push
lahf
imul
dec
cmp
je
adc
and
je
ds
sahf
repnz
mov
inc
jecxz
int3
mov
in
andb
push
enter
pop
sub
in
sti
rcr
ret
ja
mov
and
xor
mov
movsb
add
pushf
jle
dec
out
loope
test
rol
mov
stos
or
xor
scas
jae
xchg
push
mov
xchg
dec
fwait
or
mov
clc
lahf
and
je
jp
cli
mov
mov
and
adc
mov
fs
inc
sub
outsb
add
push
sbb
add
stos
add
dec
jmp
subl
iret
enter
iret
pop
aad
and
lds
xchg
mul
push
mov
nop
les
or
dec
outsl
add
pop
dec
xor
cwtl
pushf
add
dec
in
scas
xchg
adc
xchg
iret
shlb
mov
inc
jg
adc
movsl
stos
sub
test
flds
pop
ret
jns
sbb
lea
or
cmp
cmpsb
fdivr
inc
push
push
sbb
mov
jo
add
mov
fsubrs
xchg
fnstenv
xorl
pop
mov
inc
inc
jecxz
stos
pop
or
push
jp
inc
add
sbb
iret
lea
jo
or
divb
jl
push
repz
ss
adc
mov
jne
xor
les
notb
push
inc
pushf
mov
inc
mov
ds
xor
daa
push
jne
mov
test
xchg
mov
fsubrl
addb
andl
or
cld
cmpl
xor
in
xchg
sub
or
js
lret
ja
int3
pop
pop
mov
mov
mov
jg
int
ds
dec
push
ret
pop
outsl
inc
cmp
sub
jo
repnz
cmp
sti
sbb
addr16
negl
pop
mov
lret
aaa
pop
ret
dec
ret
push
fisttps
cmp
cmp
int
push
inc
jae
cmc
out
xor
push
aam
jae
jb
out
mov
mov
sub
in
mov
lahf
cwtl
sbb
ja
jbe
lods
hlt
mov
mov
fildll
pusha
and
push
add
sbb
pop
hlt
fstl
shlb
into
push
popf
mov
lds
into
dec
mov
push
ljmp
fldenv
xor
mov
scas
imull
popf
add
cltd
call
mov
outsb
xchg
push
and
xchg
aaa
jl
mov
adc
or
in
std
ja
xchg
pop
sbb
out
inc
push
jnp
jns
sti
pop
into
inc
lret
lds
ret
mov
lock
jb
cmp
xchg
rolb
sub
ret
mov
mov
cmp
cmp
jg
mov
icebp
pop
ret
pop
xchg
mov
and
rclb
enter
rcrb
cmpsl
cmp
xchg
pusha
mov
cld
outsl
inc
jae
stc
filds
jns
jnp
movsb
mov
addb
and
xchg
mov
into
inc
cli
mov
dec
leave
xor
mov
ljmp
push
scas
sahf
ret
pop
jge
xchg
shlb
push
in
or
popa
shld
mov
into
adc
call
jbe
pop
add
or
cmp
pop
loopne
add
xor
popa
dec
mov
test
push
mov
fnsave
sti
cli
les
sub
pop
cwtl
adc
mov
addb
pop
dec
dec
std
js
xchg
xor
inc
sbb
int
mov
sub
lret
in
mov
mov
pusha
mov
mov
mov
int3
inc
push
les
aaa
inc
imul
sub
jp
cmp
xchg
outsl
out
cmp
incb
in
xlat
jmp
xor
dec
movsl
xchg
imulb
aaa
and
pcmpgtb
sbb
xor
inc
jno
hlt
cmpb
enter
inc
dec
cmp
xchg
ds
add
fwait
in
loopne
sub
or
mov
pop
mov
or
jnp
inc
inc
dec
push
sub
ds
push
lock
inc
mov
mov
ret
divb
adc
in
stc
hlt
jo
shlb
push
jmp
lods
addb
in
loop
aas
jbe
insl
ret
jno
es
push
mov
les
inc
fisttpl
xchg
sahf
sarb
dec
and
and
push
iret
inc
cld
inc
leave
xor
mov
sarl
mov
inc
push
and
movl
dec
dec
mov
mov
mov
insl
jge
fldenv
test
cld
push
scas
inc
mov
loopne
pop
push
dec
das
xchg
fisubl
aam
loope
stc
pop
xchg
rorb
cmp
sbb
adc
add
scas
xor
mov
jae
dec
fsts
lds
scas
xchg
xchg
pop
sub
dec
mov
jbe
jb
adc
add
jg
cmp
movl
clc
lock
adc
mov
mov
popf
jnp
pushf
push
pop
and
ljmp
mov
das
and
inc
lret
iret
add
mov
push
or
pop
xchg
imul
mov
adc
cli
repnz
xor
mov
fiadds
and
cwtl
and
pop
sbb
pop
lods
mov
es
mov
mov
cmp
ja
push
sahf
je
sarl
das
dec
loopne
sub
rorb
mov
add
inc
into
test
push
sub
inc
adc
xor
adc
jge,pt
and
mov
ds
imull
test
sbb
lret
sub
insb
iret
fistps
add
jge
jne
push
mov
xor
out
xchg
xchg
icebp
in
cli
aad
dec
push
cld
sbb
loop
std
sti
and
movsb
notl
cmpsl
fwait
roll
test
jmp
popf
movsb
movsb
scas
call
cltd
or
daa
add
jp
and
sub
shll
pop
das
stos
aad
fwait
negl
incl
scas
jg
cmpsb
mov
js
jae
sub
inc
pushf
inc
dec
mov
cmp
sbb
inc
es
sub
ja
cld
sbb
dec
jecxz
aam
jmp
fs
mov
inc
loopne
cmc
loop
cmp
lret
sarb
pop
iret
mov
out
mov
push
dec
enter
push
and
movhps
addr16
push
cmp
cmovae
mov
push
fcoml
lahf
call
movsl
cmp
repz
test
inc
mov
jecxz
mov
mov
mov
lahf
dec
fcomi
fnstenv
aas
out
test
jg
push
arpl
push
aam
ftst
inc
lods
inc
pop
sbb
xor
mov
xchg
test
dec
sbb
push
push
mov
add
sbb
adc
xor
mov
dec
cmp
pop
dec
out
xor
mov
add
jne
xorb
adc
xchg
sub
push
mov
mul
sti
mov
fldt
pop
icebp
push
xchg
movsb
jns
add
and
fistl
sbb
xchg
test
jbe
pop
push
xchg
clc
xchg
aad
xor
mov
mov
shrb
les
xor
mov
aaa
cmp
nop
or
pop
xor
pushf
jp
mulb
and
fwait
aad
mov
jne
dec
addb
fwait
gs
mov
clc
aad
pop
mov
aas
inc
jmp
pop
fs
testl
int3
and
mov
dec
rcll
dec
lret
mov
call
lods
sti
sarl
adc
daa
stc
shl
mov
ret
inc
inc
jne
push
xchg
mov
stc
out
mov
scas
incb
inc
outsb
pop
add
and
stc
add
std
push
sub
data16
shll
repz
hlt
xchg
ss
adc
test
bound
cmp
xor
inc
shl
mov
cwtl
xor
xchg
fsts
pop
cmp
enter
jnp
xor
push
jle
mov
aam
push
or
jmp
shrl
mov
mov
loopne
jo
sbb
add
jg
ss
rcrb
clc
push
adc
jnp
mov
out
add
xchg
or
lea
iret
pop
push
ret
call
jb
sarl
fs
dec
adc
lret
sub
xor
inc
jle
dec
dec
pop
fiadds
cld
fnsave
mov
adc
add
outsb
decb
rcpps
fucomi
mov
push
mov
adc
xlat
mov
push
mov
ret
call
mov
mov
adc
and
lds
dec
scas
mov
ja
or
inc
inc
iret
ds
mov
push
int
push
mov
shrl
std
shrl
std
push
shrb
aas
mov
fstps
push
out
ds
fldl
add
outsl
shrb
mov
loop
shr
and
leave
test
sar
insb
xchg
push
pop
mov
popa
xchg
sub
stos
std
push
outsb
sbb
stc
mov
in
adc
jle
loop
adc
mov
pop
pop
aas
shrl
inc
mov
stos
jl
xchg
mov
mov
add
lahf
pop
jns
jne
xchg
out
dec
sub
cmpsb
insb
lods
mov
mov
cs
inc
ds
mov
bnd
testl
lods
ja
cmp
addr16
cli
mov
push
in
pop
pop
adc
rcl
scas
sub
imul
fstl
lahf
adc
enter
pop
stc
and
mov
lret
paddw
in
nopl
unpcklps
repz
daa
cmp
sub
mov
pop
inc
mov
insb
pop
outsl
int3
mov
movsl
gs
enter
cs
or
sub
mov
mov
arpl
loopne
aas
jo
adc
aaa
negb
fcomps
cld
out
hlt
std
jmp
movsb
sub
loope
nop
push
mov
push
inc
mov
gs
stos
int3
pop
xchg
shlb
mov
lret
dec
sbb
jo
je
push
xor
jecxz
in
jp
mov
xchg
sub
adc
sub
fistl
mov
pop
cmp
or
ret
push
mov
xor
pop
dec
sti
sbb
add
lret
jbe
pop
xchg
call
rcll
cli
mov
mov
jne
sbb
mov
arpl
inc
ja
scas
popf
mov
flds
sub
clc
cwtl
subl
std
sub
push
jne
inc
adc
push
push
cmpsb
inc
mov
js
jmp
push
cmp
adc
sub
ret
and
ror
cmp
call
mov
jae
stos
cmp
xchg
cmp
and
inc
mov
cwtl
into
data16
jecxz
ss
fcoms
ja
aas
mov
and
jmp
fnstcw
pop
jne
imul
ret
aad
je
ljmp
test
dec
popa
xchg
sub
mov
fbstp
popa
xor
rorl
out
scas
push
mov
test
add
jae
pop
mov
lods
pusha
add
shlb
sub
dec
jne
inc
xchg
sbb
pop
sub
mov
lahf
fidivs
jmp
xlat
test
sbb
sbb
or
lea
push
jbe
mov
or
in
dec
pop
cmp
out
adc
iret
add
or
or
cmpsb
and
inc
fucompp
mov
xchg
jno
push
fcmovu
mov
out
cli
mov
lock
and
orl
push
xlat
inc
shlb
and
sub
pop
and
outsl
js
cmp
mov
les
rclb
insl
jle
jmp
sti
push
enter
imul
xor
addr16
fistpl
das
mov
repnz
or
imul
lods
mov
mov
and
enter
add
and
xlat
dec
jle
inc
scas
popf
in
mov
mov
fst
jbe
mov
cmpsb
push
dec
movsb
push
les
and
outsb
mov
dec
int3
not
lds
repnz
in
xor
mov
cs
pop
fsubs
inc
lcall
fcoms
xor
jnp
mov
in
cmp
fldt
mov
xchg
in
push
push
orb
fdivrl
pop
add
xchg
pop
loope
and
cmp
mov
fucom
sbb
jp
aad
pop
pop
sahf
das
mov
add
mov
push
ret
cmc
lods
aas
rorb
sbb
leave
int3
sub
lea
jnp
jl
mov
sub
xchg
bound
stos
stos
pop
data16
insl
aam
fcomip
mov
dec
repz
adc
dec
icebp
sbb
mov
call
in
mov
xor
push
pushf
shr
mov
imul
mov
xchg
xor
inc
pop
mov
fsts
mov
fisttpll
fildl
aam
fildll
mov
outsb
mov
mov
or
push
data16
xchg
inc
inc
inc
sub
cmpb
shrl
cld
fadd
enter
sbb
xor
test
sub
mov
stos
xchg
mov
or
hlt
inc
imul
push
add
xchg
push
mov
and
xchg
mov
mov
fcoms
mov
rorl
adc
xor
mov
cmp
sbb
fldt
loopne
jmp
movsb
aad
adc
lcall
imul
lods
xchg
lods
popa
rorl
shr
push
mov
lock
mov
push
cmp
or
int
mov
sahf
iret
pop
sub
shr
into
pop
dec
sbb
mov
insb
cmp
enter
inc
aas
sbb
lret
enter
inc
frstor
pop
mov
test
aaa
xor
test
sub
rolb
push
dec
test
lods
push
pop
enter
adc
rorb
mov
mov
push
loopne
mov
shrb
adc
aaa
aam
xchg
cmp
das
popf
inc
cmp
dec
mov
pusha
fucomi
cmp
jl,pn
add
xor
dec
in
and
or
xor
or
aaa
stos
gs
mov
insl
add
pop
rolb
stc
ljmp
push
and
pop
pop
loop
fldl
shlw
imul
mov
loope
push
in
ja
repnz
dec
add
enter
add
in
stos
add
xor
ljmp
mov
test
out
adc
dec
xor
test
cmp
or
dec
and
adc
aam
sbb
das
aam
ficoml
stos
lock
or
jns
or
rcrb
jmp
dec
cmp
fcoms
outsb
sahf
mov
call
jne
dec
leave
or
imul
mov
xor
test
call
lcall
bound
nop
inc
iret
dec
bound
faddl
mov
mov
mov
mov
out
mov
insb
adc
cmp
jbe
xchg
hlt
sti
sub
out
cmpsb
fistpll
xchg
ja
pop
leave
fimull
lds
mov
or
subb
scas
test
and
bound
sub
in
clc
or
into
enter
enter
cmpb
xchg
jo
loop
sub
lds
sub
inc
push
ja
mov
sbb
mov
jne
negl
mov
pop
mov
shr
insl
test
jmp
mov
inc
jp
xchg
inc
push
xchg
addl
cltd
mov
outsl
xor
popf
out
fcmovbe
mov
insb
je
outsb
mov
shll
pop
fnstsw
in
xchg
sub
jb
pop
cli
popf
fcoms
jnp
fs
enter
xchg
cmp
sub
lock
inc
sbb
sbb
pop
es
cmpsl
pop
xchg
dec
stos
xor
xor
mov
mov
cmpsl
das
test
push
jl
in
lahf
fimuls
pop
lret
adc
lret
add
mov
mov
mov
xor
lock
nop
int
xor
ljmp
mov
mov
pusha
mov
adc
popf
push
enter
xchg
jb
push
test
popa
cmpsl
xchg
jecxz
ss
fcmovnbe
cltd
call
fisttpll
lret
into
fidivrs
int3
mov
notb
jns
lret
push
xchg
jecxz
loope
in
xlat
or
les
mov
mov
jecxz
xchg
std
jge
ss
hlt
stos
fidivl
bound
push
cmp
or
push
inc
cmp
mov
repnz
xorl
and
cmp
sti
push
icebp
lret
adc
add
aam
stc
icebp
mov
rcll
inc
stc
mov
ja
xchg
aad
sar
cmpsb
pop
xchg
or
sahf
sub
push
cmpsl
shl
cmp
cmp
mov
xlat
xchg
push
fisubs
inc
sub
push
jle
fiaddl
inc
xchg
out
push
lock
sub
sub
js
outsl
jl
push
jb
sarl
scas
divl
jmp
outsb
mov
loopne
push
mov
and
cwtl
xchg
pop
xchg
mov
sbb
add
lods
mov
add
aaa
sbb
or
jne
mov
xchg
dec
out
cmp
pop
mov
mov
scas
dec
popa
paddsw
or
fdivp
std
and
adc
mov
mov
mov
mov
test
push
jnp
xchg
jl
add
mov
jge
mov
sub
dec
jecxz
xchg
loop
pop
test
addb
movsb
fs
mulb
lea
int3
pop
xor
cs
xor
call
fldl
fistl
es
mov
int3
and
cmpsb
cmc
mov
sub
jbe
mov
fisubrs
mov
push
jp
mov
pop
data16
aam
or
mov
or
fisttpl
xchg
xchg
xchg
mulb
pop
or
test
fildll
add
pusha
xchg
pop
es
dec
pusha
insb
sti
test
push
mov
pop
jge
leave
sbb
cmp
loop
add
iret
stos
push
dec
fstpl
add
lahf
repnz
out
in
cmp
imul
xor
mov
pop
sub
push
jle
repnz
cli
in
jl
ljmp
insb
push
jg
jb
push
or
fstpl
push
dec
icebp
lds
dec
scas
and
xchg
mov
pop
jmp
repz
xchg
dec
add
ret
xor
xor
jmp
shlb
and
loopne
mov
gs
ljmp
xor
jle
adc
scas
fcomps
pop
jp
enter
loope
or
push
push
inc
or
cltd
pop
jo
sub
pop
dec
and
cwtl
mov
sbb
mov
fs
mov
jmp
shll
inc
sub
and
sbb
push
and
and
cmpsl
ret
and
dec
mov
xchg
mov
mov
scas
in
sbbl
int3
inc
xlat
sbb
mov
cltd
mov
pushf
rorb
loope
sub
push
inc
shrb
xor
xchg
pusha
rorl
orb
fcoml
push
jbe
push
xchg
ljmp
add
sti
fimull
cwtl
sahf
dec
iret
adc
cmp
pop
jle
cwtl
mov
mov
jmp
cli
and
pop
adc
dec
cmpl
sub
mov
push
out
lcall
cli
popa
popf
pop
fldt
aaa
mov
sarb
xchg
cmp
mov
insb
xchg
inc
mov
cmpsl
sub
arpl
ss
pop
add
incl
pushf
add
into
push
das
jp
loop
push
push
jns
sarl
mov
daa
lods
fsub
clc
push
xchg
ja
fidivrs
xlat
xor
mov
mov
add
mov
je
out
cltd
loope
std
mov
add
ja
out
inc
xchg
in
js
mov
cwtl
aad
pop
das
in
fistl
mov
inc
dec
adc
cmp
pop
int3
sbb
and
pop
fs
cmp
stc
fwait
mov
inc
sub
fstps
mov
jl
jmp
and
cltd
or
js
jns
cmpb
cmp
imul
in
insl
sti
cmp
dec
stc
faddl
mov
pop
push
rcl
lret
push
pop
lds
sub
jg
mov
mov
xchg
lock
lods
push
pop
inc
push
sbb
mov
pop
xchg
icebp
mov
cltd
and
js
out
mov
push
mov
scas
ret
je
andl
aaa
mov
add
in
pusha
adc
add
inc
sbb
insl
sbb
pusha
fistl
ljmp
sahf
cld
ja
adc
jg
mov
mov
nop
lods
sbb
mull
xchg
cmp
xchg
cmp
sub
iret
jb,pn
nop
push
pop
scas
insb
fwait
nop
scas
inc
jns
push
push
data16
mov
andl
pop
xchg
lahf
mulb
popa
or
and
mov
ret
lcall
push
mov
aas
xchg
adc
pop
test
xchg
fucomip
push
aas
add
add
int3
repnz
xor
iret
ds
mov
xchg
into
jl
mov
mov
cmpsb
test
subb
xor
imul
jmp
jnp
data16
dec
loopne
fidivrs
cwtl
pushf
pop
cld
sbb
idivb
add
add
inc
pusha
or
mov
dec
adcb
in
adc
sub
test
clc
data16
inc
call
xor
mov
nop
or
adc
adc
adc
xchg
push
mov
pusha
adc
mov
pop
imul
cmp
xor
repnz
push
test
scas
ret
cld
sub
push
out
inc
xchg
js
rolb
inc
mov
cmpsb
movb
stos
outsl
mov
push
stos
dec
xchg
inc
pushf
jo
in
inc
aaa
daa
and
pop
mov
inc
gs
sub
dec
mov
mov
aas
test
xor
scas
loop
shrl
sbb
imul
in
roll
cs
scas
add
notl
jecxz
cmp
or
jbe
and
je
sub
addr16
cli
cmpsb
lcall
or
xchg
xor
sahf
int
jl
shlb
pop
add
movsl
test
and
jno
adc
sar
jne
js
fs
mov
repz
clc
test
mov
push
aam
addr16
dec
gs
test
fisttpll
mov
hlt
cmpsl
int3
fdivrs
adc
in
push
aas
arpl
outsb
jecxz
cmc
xchg
or
mov
inc
flds
mov
dec
icebp
inc
cli
notb
cwtl
sbb
mov
push
cs
pop
ret
jae
xlat
lock
jle
inc
out
ret
addb
cmpsl
push
test
pop
test
sbb
push
pusha
cli
pushf
and
in
test
mov
or
andb
add
pop
in
mov
push
aam
add
mov
inc
out
pushf
mov
ret
add
arpl
adc
addr16
std
aad
int
mov
aaa
xor
pop
jmp
lret
and
cmp
int3
push
mov
dec
sbb
imul
pushf
fs
rcrb
fstpt
dec
mov
sahf
sbb
mov
sbb
into
pop
inc
addr16
addr16
es
jecxz
lods
int3
push
cs
addr16
sysret
xchg
adc
cld
mov
mov
jae
xor
je
lods
cld
mov
mov
imul
jl
movsb
dec
mov
fucom
sub
dec
jl
in
dec
xor
mov
ret
es
hlt
clc
adc
xchg
fldt
test
dec
aaa
fcmovnu
pop
jnp
cmpsb
je
adc
push
add
inc
testb
fisttps
roll
jnp
lcall
imul
jnp
insl
nop
aaa
xchg
adc
adc
insb
xchg
das
test
push
fs
and
inc
mov
cltd
pop
shr
mov
dec
jl
sub
jg
mov
adc
insl
dec
push
lret
cs
push
sahf
mov
fstps
popf
and
sub
std
adc
xor
adc
inc
jge
daa
mov
mov
adc
daa
sbb
xor
lret
jle
sbb
shll
pop
lret
jnp
jnp
daa
insl
lea
lea
daa
sub
mov
outsl
jae
fstpl
dec
orb
sub
subb
pushf
jnp
cmpsl
gs
and
sub
test
cli
inc
test
pop
pop
pop
mov
fwait
andl
or
push
mov
jb
adc
cmpl
inc
lods
into
add
cmpsb
ret
hlt
jl
xchg
adc
sub
mov
enter
push
push
push
int
repz
loop
pop
push
dec
aam
dec
stos
lods
add
mov
xchg
inc
cmc
adc
inc
out
into
adc
sbb
mov
inc
or
ds
sub
ljmp
push
imul
cmp
pusha
xchg
loop
mov
inc
lret
and
push
daa
pop
jle
mov
mov
ljmp
ss
fwait
mov
stos
daa
xor
cld
and
outsb
xchg
es
shll
scas
add
or
xchg
setb
fnsave
mov
repnz
cli
sbb
in
mov
mov
dec
mov
mov
xchg
je
mov
push
ljmp
jb
pop
outsl
cs
and
aas
repnz
mov
push
lods
dec
and
loopne
mov
mov
add
lea
mov
lds
xchg
jo
ret
xlat
inc
fsubrs
lods
xchg
adc
lahf
inc
loopne
xor
add
nop
shrb
popa
leave
xchg
cmovnp
scas
mov
xor
in
adc
jae
scas
pop
push
cmp
push
mov
nop
lcall
dec
inc
rcrb
push
test
or
ja
sbb
repz
sti
bound
pushf
xchg
cmc
orb
outsb
movsl
inc
add
std
cmp
add
cmpsl
cltd
add
mov
dec
int3
std
shl
jnp
add
mov
inc
popl
popf
mov
inc
icebp
fimuls
fstpt
outsl
out
pop
push
pushfw
lcall
pop
ss
push
aad
aad
enter
dec
imul
xchg
sub
sbb
or
mov
fucomi
outsl
sub
jmp
imul
mov
add
lods
addr16
xor
fidivrs
pop
dec
pushf
xchg
adc
jo
mov
js
pop
add
add
cli
push
fwait
sahf
push
out
pop
adc
test
int3
das
ljmp
loope
dec
xchg
xlat
push
outsl
jbe
xchg
mov
roll
daa
push
add
sarl
pop
out
mov
xchg
cli
add
popa
movsl
aam
sar
dec
push
lahf
xchg
cli
cmc
dec
cmp
rolb
xchg
out
push
inc
in
aaa
jae
adc
mov
int3
fisttps
cmp
xor
cmpsl
cld
in
mov
xchg
repnz
jnp
jle
ss
test
xchg
pop
call
mov
imul
push
jbe
push
adc
pop
or
or
into
cmp
xchg
outsl
jg
dec
pop
es
outsb
mov
or
addr16
mov
cmp
xor
mov
daa
aas
pop
fcmovnu
hlt
pusha
fisttpl
xchg
scas
in
jmp
sub
fidivl
cmp
lock
cmp
loope
in
inc
dec
and
dec
cli
cmc
test
mov
cmp
add
out
out
dec
sub
bound
stos
adc
push
xor
mov
mov
mov
pop
adc
das
mov
push
pop
xor
sarl
sahf
add
add
mov
lds
mov
add
pop
loope
lock
aaa
add
scas
fcoml
call
mov
fcompl
cmp
mov
aam
lods
iret
loope
dec
add
test
mov
ret
in
ror
sub
iret
add
or
inc
jae
je
sar
add
js
mov
inc
nop
cmp
fadds
push
cwtl
sbb
ficompl
mov
js
jne
or
pop
shrl
add
xchg
pop
and
rcrl
jno
insl
cmp
sbb
jecxz
popf
je
sub
mov
stc
out
jmp
pop
int
add
outsl
xchg
mov
fisubrl
fsubrp
aam
popf
jae
inc
iret
repz
in
testb
leave
repz
mov
xchg
movsb
and
push
test
mov
stc
cmp
or
fnstcw
pop
cmp
test
mov
xor
xchg
je
and
cmp
add
bound
arpl
hlt
adc
and
arpl
mov
add
fidivl
ret
mov
sahf
add
cld
jae
movsl
pusha
jno
clc
cmp
and
xchg
mov
jne
mov
push
mov
call
pop
js
xchg
lock
dec
mov
std
mov
mov
pop
xchg
push
test
and
jae
xchg
xchg
xlat
inc
rcll
pop
sub
adc
adc
lods
or
ret
mov
rorl
movsb
cld
nop
std
mov
or
fildll
shll
in
xor
push
add
xor
jno
scas
hlt
in
ja
aad
mov
adc
test
dec
fnstsw
imul
add
dec
loop
mov
adc
std
inc
add
fbld
mov
inc
cli
insl
aas
cmpl
ja
lret
jae
mov
pushf
sub
or
movsl
adc
divb
les
enter
inc
jo,pt
sahf
push
cwtl
lods
mov
cmp
sub
into
sbb
pop
aas
or
adc
sbb
aas
in
push
dec
sahf
lret
push
xchg
and
mov
xor
pop
xchg
lods
xchg
lcall
ret
xchg
jno
add
or
mov
add
push
add
add
pop
and
in
xchg
into
xor
mov
in
int3
add
adc
inc
mov
sbb
mov
dec
clc
pop
adc
repnz
xlat
pop
cmp
xchg
gs
push
xor
xchg
fstl
adc
jo
repnz
xchg
jmp
or
inc
out
ljmp
int3
xchg
out
out
inc
jb
sub
jp
and
push
fwait
lcall
gs
mov
pop
pop
inc
inc
test
lods
pop
cmp
push
lods
mov
enter
sbb
mov
jbe
jne
daa
add
xchg
cmp
xchg
cmpsl
pop
xor
test
pop
enter
aaa
movsl
ss
sbb
lcall
pandn
arpl
shl
arpl
jb
fsub
xor
lods
cmpl
xchg
jl
cmpsl
rcll
xchg
adc
push
mov
add
inc
adc
ss
into
jns
test
lds
mov
and
in
divl
cmp
cmp
push
xchg
inc
or
clc
pop
inc
and
add
mov
clc
bound
add
outsl
icebp
out
pop
mov
cmp
add
mov
jbe
xor
mov
dec
cmpsb
mov
add
pop
sbb
and
jnp
insl
aad
psubb
push
cmpsb
mov
rcr
js
mov
out
sti
lock
pop
movsl
push
in
add
pop
pop
xchg
outsb
mov
sub
pop
mov
ljmp
popa
negl
aad
push
fwait
jp
xlat
xchg
test
sahf
cmpl
fwait
cld
xchg
popf
xor
cltd
hlt
test
test
je
aad
mov
aaa
push
roll
mov
mov
lods
pop
jbe
or
rcll
dec
shlb
add
ret
xchg
addr16
adc
mov
sbb
movsl
pop
in
and
add
scas
mov
pop
xchg
btc
sbb
mov
in
fcmovnu
jle
loop
jle
add
xor
add
jae
push
rep
lock
rorl
sbb
rol
push
testl
add
and
xor
push
mov
fsubp
pop
insl
unpckhps
mov
adc
mov
pop
mov
pop
shll
in
mov
std
inc
andl
push
push
pop
jo,pn
jae
fwait
add
add
and
sbb
mov
xor
mov
push
ja
aad
push
mov
ret
cwtl
xor
sub
add
jb
repnz
clc
cmp
in
pop
pop
imul
pop
imul
loop
cli
xchg
push
js
mov
sub
mov
cmp
imul
fisubl
add
pop
pop
sbb
aaa
loop
mov
or
cmp
int3
orl
cmc
cmp
nop
and
addr16
mov
out
nop
out
add
mov
sbb
cmp
pusha
xchg
in
andb
sar
inc
lret
imull
sub
mov
jnp
jno
aaa
push
out
out
loop
out
xchg
aas
mov
or
sbb
xchg
int
mov
leave
and
lea
sub
or
fsubrl
jp
mov
lret
in
sub
stc
sahf
xlat
push
frstor
mov
dec
adc
inc
mov
dec
or
jae
cmp
aaa
stos
fisubrs
fisttpl
mov
lret
repz
imul
pushf
inc
or
and
mov
stos
cmp
jns
pop
outsl
setne
add
cmc
fucompp
add
cmpsb
hlt
mov
stc
test
test
out
push
ret
xor
repz
mov
aaa
lods
data16
subb
stc
push
in
shrb
xchg
pop
dec
push
mov
lret
fdivs
out
in
lods
lods
push
pop
push
fucom
scas
push
ret
daa
inc
xor
xlat
push
loopne
aad
fistps
cmp
sbbl
mov
clc
test
cli
sti
cmc
mov
ret
dec
aam
cmp
cwtl
xchg
sub
cmp
cwtl
out
inc
popa
mov
jne
out
pop
push
jb
cs
lock
dec
xor
mov
movl
mov
push
mov
imul
mov
and
dec
lods
jbe
ja
and
or
jnp
pop
scas
push
loop
fsts
loope
iret
loope
and
pop
xor
mov
mov
mov
jecxz
dec
iret
or
dec
jp
jne
push
fisubrl
clc
inc
popf
movl
adc
push
pop
into
in
sub
repz
and
repnz
pop
mov
pop
lock
lock
sahf
jecxz
pop
cwtl
pop
test
popf
leave
jg
adc
ljmp
adc
lods
jnp
mov
roll
cld
pop
push
pop
and
jo
dec
mov
or
call
mov
dec
cmpsl
subl
popa
xchg
and
cmp
lock
outsl
clc
push
scas
pop
cmp
repnz
or
cmp
jno
dec
cmpsb
pop
stos
mov
dec
ds
add
or
in
mov
leave
push
sub
adc
pop
push
ficomps
mov
dec
ljmp
mov
inc
enter
pop
addb
rorb
and
cmp
mov
jecxz
adc
sbb
test
sahf
mov
jl
jns
out
aaa
roll
repz
mov
dec
pop
inc
je
test
sbb
pushf
stos
or
push
das
scas
inc
sub
cli
popa
cmpsl
jle
jmp
mov
std
test
pop
mov
adc
dec
testl
scas
lret
popa
pop
in
into
nop
push
test
and
mov
sub
cli
pop
lea
push
imul
call
push
dec
push
mov
or
inc
sbb
mov
mov
aaa
lahf
aas
add
add
inc
cmp
dec
scas
in
pop
push
mov
jb
fsts
lds
addr16
and
lret
in
push
mov
cmp
inc
mov
in
jg
mov
pop
inc
out
sbb
jp
jl
mov
cltd
leave
jl
mov
in
lea
mulb
jno
mov
cmp
das
out
jge
dec
rolb
and
pop
sbb
inc
lcall
shll
mov
xchg
cmp
dec
rcrl
int3
inc
pop
push
cmpb
mov
lret
les
hlt
stc
pop
aaa
cli
in
sub
mov
addr16
add
xor
out
pop
push
js
test
adc
sarl
and
inc
mov
jmp
and
sbb
mov
into
jo
popa
jl
jae
fmuls
sub
mov
lock
repnz
fildll
cs
mov
and
out
sbb
or
fstl
stos
imul
aas
mov
mov
push
cmp
cmp
cld
add
test
ja
push
inc
mov
jmp
test
shlb
notb
ja
std
xchg
mov
pop
xchg
gs
mov
mov
sahf
sti
data16
in
sarb
insl
mov
ds
jb
push
jecxz
xor
mov
lea
pop
std
push
mov
rcrb
scas
mov
lods
cmp
fisubrl
clc
xchg
cli
inc
pop
cmp
mov
out
mov
mull
hlt
xor
fs
xchg
pusha
incl
sti
ja
cmpsl
pop
popa
jmp
outsb
inc
pop
mov
jmp
pop
push
dec
pop
mov
sub
adc
sub
and
jmp
xchg
sbb
mov
jae
sbb
xchg
mov
testb
movsl
aas
iret
rol
xor
add
cmc
mov
aas
push
mov
std
lahf
jmp
filds
sbb
in
jmp
cli
jge
add
out
movsl
sbbl
adc
movsl
mov
test
sub
lds
sub
cmp
and
pushf
movsl
test
scas
xchg
es
stc
sbb
inc
xchg
jle
mov
sub
xchg
xor
test
dec
in
clc
test
mov
popa
je
push
lahf
stos
ret
bound
xchg
loope
fs
mov
js
lea
bound
push
push
xchg
pop
sbb
pop
pop
nop
in
push
mov
sub
xlat
push
dec
sbb
out
dec
pop
das
xor
mov
pushf
add
fwait
jp
out
pcmpeqd
mov
cmp
jae
and
cs
nop
mov
sub
cmp
mov
pop
jle
push
jge,pt
push
ljmp
shrb
mov
sbb
arpl
lahf
int3
inc
pushf
scas
xchg
mov
add
sbb
mov
test
xorb
rol
push
sarl
fmulp
push
sbb
mov
sarb
lahf
gs
jns
cmp
lahf
mov
in
repz
loope
in
sub
decl
xlat
mov
jo
mov
jmp
ret
aad
xorps
jg
scas
outsl
in
ret
push
outsb
std
out
or
xchg
jmp
jmp
add
out
pop
dec
negl
mov
push
ja
repnz
in
mov
mov
rorb
jle
and
xor
out
mov
std
out
xor
popa
xchg
add
fbld
iret
out
dec
imul
xchg
xchg
cmp
dec
out
into
sti
jle
outsl
pmulhw
jle
jbe
repz
jnp
int
out
std
nop
jg
jb
cmpsb
pushf
xchg
lds
shll
pop
ss
dec
dec
aas
aas
sbb
pop
das
mulb
pushf
sti
jnp
and
or
stos
sahf
dec
or
insl
push
jbe
shll
and
push
jg
out
jl
lret
xor
mov
xchg
mov
in
popa
in
xor
stc
xor
or
pop
push
sub
mov
insb
pop
lret
mov
sti
fnstcw
lea
leave
sahf
int
pop
hlt
mov
lahf
sub
fisubrs
mov
xchg
hlt
mov
jmp
mov
pushf
xchg
aam
movsb
mov
push
cmp
scas
jmp
xchg
hlt
jbe
rcrb
rcrb
jmp
push
jl
fbld
in
lock
xchg
lahf
iret
out
mov
jmp
lret
cmc
loopne
stc
aaa
sbb
jb
add
jecxz
jne
sahf
or
mov
mov
push
push
pop
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
orb
arpl
mov
dec
mov
sbb
inc
mov
dec
inc
inc
and
popf
add
jle
add
mov
jp
nop
loope
iret
dec
mov
pop
xchg
pop
ret
jae
push
lock
in
ljmp
push
lahf
popf
ror
iret
addr16
or
pop
out
enter
xlat
sti
jl
cli
orl
in
clc
mov
hlt
in
jle
xchg
pop
movsl
jno
decb
repz
jg
xchg
pop
insb
ss
xor
rcrl
adc
jmp
pop
mov
or
push
aam
shl
rcll
xlat
or
cwtl
fs
in
mov
scas
test
insb
push
sub
movsl
adc
iret
or
insl
das
pop
xchg
cmp
pop
sbb
pop
or
mov
mov
lcall
popa
in
xchg
mov
clc
out
pop
xor
adc
mov
rorl
sub
sub
stc
aam
es
cmp
mov
movsl
adc
mov
dec
mov
xchg
repnz
scas
leave
or
in
ljmp
cmp
and
enter
bound
pop
cmpsl
push
xchg
adc
arpl
mov
jp
jmp
rcrb
lds
mov
repz
hlt
movsl
in
lret
shl
mov
jg
fcompl
fbstp
push
cmp
pop
add
test
cmp
std
jb
push
jp
xor
mul
cmp
insb
mov
dec
sarl
cmpsb
ret
xchg
inc
outsb
adc
xchg
cmpl
xchg
dec
jl
mov
jmp
ret
jle
lret
aad
call
xchg
ds
sarl
adc
add
xchg
out
xor
cwtl
gs
push
jne
inc
into
push
orl
pop
push
std
or
mov
xor
insl
mov
testb
punpcklbw
mov
xor
mov
dec
fimull
test
pop
cmpsb
jmp
and
push
xchg
popf
dec
rcr
repz
mov
pop
cmpsl
pop
scas
jb
mov
icebp
sar
int
xor
cwtl
idiv
xor
xchg
insl
shrl
pop
push
ficoms
aad
jecxz
hlt
cmc
mov
add
dec
movsb
les
dec
inc
cmp
mov
loopne
lock
mov
pop
int3
cmp
cwtl
adc
stc
fnstenv
mov
and
mov
ljmp
out
mov
hlt
mov
movsb
out
in
sbb
rcrb
femms
repz
xchg
rcrb
inc
rcll
or
jle
sbbl
cmp
cmp
dec
jmp
shrl
inc
jns
push
xchg
into
scas
sbb
mov
rorb
cmpsb
lds
mov
aaa
mov
std
or
int
gs
sar
fdiv
push
icebp
mov
int3
pop
pop
pop
sti
cli
mov
mov
push
and
in
inc
add
xlat
out
jecxz
imul
pushf
mov
or
jns
mov
sub
or
enter
hlt
or
das
push
sbb
pop
cs
mov
and
jge
lock
lock
mov
stc
aaa
inc
icebp
repnz
xchg
mov
jnp
loope
and
sub
into
xchg
ret
js
xchg
sbb
inc
lock
or
nop
addb
jle
iret
push
jge
aas
jo
sbb
pop
or
test
cmp
mov
adc
push
andb
fsubrl
mov
jp
or
cmc
jp
dec
ljmp
sub
pusha
dec
inc
lods
in
cmp
test
ss
arpl
mov
inc
lods
mov
mov
sahf
gs
fsts
and
mov
mov
mov
movsl
in
dec
dec
sbb
sub
outsl
dec
es
fcmove
std
insb
mov
fstpt
sub
jmp
stos
into
xor
mov
fildll
ja
mov
mov
pop
jne
arpl
enter
sbb
addl
fdivrl
xchg
mov
icebp
std
jne
push
ss
jns
ja
js
push
and
das
sub
mov
dec
leave
das
sti
pop
aad
imul
out
or
ljmp
dec
scas
mov
movsb
out
mov
hlt
call
xchg
xor
pop
rcl
faddl
sbb
and
in
push
in
xor
dec
clc
add
sti
shrb
and
dec
mov
inc
lcall
pop
pop
mulb
cmp
xor
fsubs
fs
push
xor
outsb
add
sbb
push
dec
jns
mov
scas
jle
jbe
mov
out
jl
fstpl
add
lahf
jle
sub
pop
into
xchg
fdivrl
cmp
int3
shrl
es
cld
dec
xchg
jg
push
fstpl
jns
mov
xchg
lcall
sbb
fsubl
push
popa
nop
sbb
fsubrs
or
or
enter
cmc
daa
lret
jp
gs
inc
leave
cmp
push
mov
pop
jle
or
movsl
out
popa
jmp
jns
mov
mov
inc
push
add
cld
jnp
jl
fdivrs
notl
jge
sbb
lods
lahf
out
outsl
into
mov
inc
das
push
mov
jae
jns
aad
out
sbb
fwait
cmpsb
movsl
mov
stos
jnp
dec
mov
mov
loope
pause
push
inc
inc
xchg
adc
cwtl
mov
enter
push
inc
or
ret
and
or
or
lea
jo
jl
fnsave
add
jmp
xchg
ror
mov
xchg
in
hlt
sti
push
cli
shll
sub
xchg
jmp
cmp
xor
mov
pop
imul
cmp
pop
ror
andl
and
pop
dec
jg
mov
clc
hlt
jecxz
pop
and
add
ret
cmpsl
xchg
gs
push
sbb
lcall
dec
fbstp
cmc
icebp
call
jg
enter
cld
jno
jle
lds
cmpsl
enter
cmc
adc
in
inc
jo
adc
cmp
fisubl
jle
mov
mov
or
xor
dec
jmp
and
mov
dec
sub
xor
addr16
dec
ja
popa
fcoml
cmp
divl
xchg
add
add
pop
popf
cwtl
ret
dec
adc
xchg
mov
inc
dec
scas
sbb
xchg
jno
push
xor
jns
filds
fs
push
jp
dec
cmc
dec
insb
pcmpgtw
popa
and
test
sti
jge
lods
jecxz
dec
pop
ss
into
and
lock
in
gs
mov
fbstp
repz
in
test
idivb
jbe
jns
mov
cmpsb
mov
jmp
fnstsw
lahf
or
imul
ds
int
cwtl
shlb
out
and
xlat
clc
cmp
out
mov
lret
and
out
es
add
movsb
pop
inc
je
dec
xchg
aaa
xor
adc
sbb
imul
das
sti
repz
dec
lea
out
fistpl
test
sti
daa
or
dec
sub
ja
cmp
cltd
cmpsl
repz
ljmp
mov
pop
push
mov
aas
subb
fdivrs
jecxz
mov
hlt
xlat
cwtl
adc
mov
push
mov
mov
std
jae
jno
lods
xor
movsb
rcl
and
dec
cmc
test
out
arpl
sti
lret
dec
fbld
das
mov
inc
cli
inc
xchg
ljmp
call
out
leave
mov
pop
cmp
xchg
nop
outsb
push
jle
lods
push
dec
ljmp
lods
int3
in
mov
mov
inc
div
jne
adc
jg
addr16
lret
dec
popf
sahf
aam
dec
mov
mov
mov
jnp
test
in
imul
jg
xchg
sbb
out
sub
fcom
push
fwait
xchg
fisubl
mov
push
test
hlt
fsubrs
jae
fnsave
lcall
mov
aas
lahf
out
dec
xchg
xchg
fsubp
loop
xor
mov
xchg
int
mov
lock
scas
not
loop
and
loopne
pop
add
dec
cmpsl
das
popa
movsb
or
xor
cmp
test
dec
and
in
or
shr
out
mov
lahf
xor
mov
mov
icebp
xor
data16
addb
js
xchg
in
dec
fidivrl
imul
imul
adc
repz
pop
jns
jae
xchg
outsl
sub
lret
aaa
mov
mov
stos
xchg
repnz
shl
int3
dec
fdivr
mov
repz
stc
adc
gs
pop
mov
cld
outsl
mov
mov
ds
jnp
cli
test
xor
pop
iret
sbb
cmp
scas
dec
cli
xchg
pop
pop
and
fwait
jns
outsl
cmpsb
repnz
out
jp
sarb
repnz
roll
int
cmp
cmp
xor
mov
jg
int3
xor
stos
sbb
push
repz
int
and
outsl
negl
call
pushf
inc
pop
inc
sbb
fwait
ja
fidivrl
push
and
lock
mov
cmp
mov
xor
jno
jg
stos
loop
mov
sbb
bound
mov
outsl
dec
gs
pop
jae
mov
imul
ds
xlat
mov
inc
outsb
inc
mov
movsl
mov
daa
cli
jo
fisubs
cmp
xchg
out
jmp
mov
outsl
xor
in
push
cmp
sahf
scas
pop
mov
cmc
out
dec
in
mov
ja
stc
mov
push
dec
loop
aas
insl
mov
scas
lret
push
pusha
pop
mov
mov
std
out
xor
in
shll
or
dec
mov
add
xor
mov
dec
sub
cltd
test
dec
dec
dec
lea
dec
adc
cwtl
sbb
lret
loope
sbb
mov
push
mov
mov
leave
mov
cwtl
sti
mov
xchg
lock
fs
gs
ljmp
lret
int
jecxz
dec
adc
pop
addr16
lock
gs
push
popa
imul
xchg
test
fldenv
aaa
lcall
xchg
ja
inc
dec
mov
lods
das
mov
cmp
jno
test
outsb
xchg
jp
repz
test
cmp
sub
pop
jb
push
mov
jp
cltd
xchg
pop
enter
adc
push
aam
push
fs
mov
add
push
cmp
fistpll
push
xchg
sarl
clc
out
cmp
jne
pushf
out
testl
aas
xor
arpl
ja
lahf
mov
or
xchg
leave
aam
sub
dec
pop
imul
stc
jl
cmp
jg
xor
ljmp
cmpsl
mov
xchg
sahf
adc
jmp
sub
in
outsl
bound
mov
stos
pop
xor
in
cmpsb
mov
test
aas
lods
xlat
dec
arpl
gs
jmp
inc
cmp
js
sbb
xchg
ffree
mov
pop
les
int3
pushf
cmpsb
pushf
js
or
mov
loope
mov
xor
cs
addr16
jge
sbb
xchg
and
packssdw
cmpb
pop
mov
lea
call
loope
push
sbb
out
pop
lods
lea
lds
sbb
add
mov
cmp
mov
imul
mov
jmp
xor
mov
and
repz
push
in
or
sub
stos
repz
cmpsb
mov
outsl
jb
rcrl
lds
mov
jns
mov
jno
cwtl
jno
lea
sbb
movups
enter
jno
arpl
inc
pop
jecxz
int
mov
cwtl
shlb
stos
test
and
adc
int
pushf
mov
in
dec
adc
fs
leave
or
aaa
sub
stc
mov
ret
jbe
outsb
push
or
mov
nop
fidivs
mov
xchg
cmp
push
lea
dec
scas
ss
mov
xor
xchg
push
sti
in
jnp
ds
pop
jle
fstp
out
inc
adc
xchg
addr16
sbb
pop
adc
jb
inc
frstor
cmp
adc
xchg
mov
in
inc
in
nop
adc
mov
mov
pop
push
push
popfw
xchg
icebp
popa
push
mov
mov
les
xchg
pop
and
mov
dec
andb
insl
cmovnp
xor
dec
jmp
sbb
sbb
jo
jecxz
leave
xor
lods
repz
cmp
sub
push
sbb
jmp
sub
or
dec
push
pop
negl
inc
in
push
sbb
clc
pusha
mov
scas
imul
push
mov
jg
fisttpll
cmp
imul
lock
sub
or
and
adcl
int3
pusha
data16
xor
adcl
out
sbb
movsl
mov
push
jbe
xchg
push
mov
loop
or
repz
push
mov
jae
stc
mov
sti
fisttpl
xor
add
clc
add
pusha
add
shlb
xchg
add
cmpsb
in
call
bound
cwtl
setb
or
je
push
pop
icebp
adc
push
out
push
mov
lods
add
and
or
mov
pop
loopne
in
orb
add
pop
roll
into
and
push
repnz
inc
sub
jo
addps
es
inc
or
in
push
inc
inc
daa
call
pusha
lods
mov
and
cmp
test
xorb
push
andb
inc
ret
jns
enter
dec
jo
mov
fwait
mov
shll
inc
fistps
push
addb
adc
fs
add
mov
adcl
jl
push
and
pop
mov
or
je
push
loop
call
fmuls
lret
nop
or
inc
add
inc
add
inc
sub
add
andl
loop
adc
add
addb
mov
cmp
inc
test
jmp
adc
adc
rorb
add
enter
sbb
jo
aam
frstor
pop
add
inc
adc
add
push
sub
pop
or
pop
mov
xor
subl
push
pushf
add
rcll
or
add
enter
cmp
add
addb
add
adc
sbb
cmp
inc
sub
mov
rolb
or
add
push
andb
insb
pop
cmc
mov
addb
xorl
psrld
adc
cmp
call
mov
add
sbb
scas
inc
ljmp
sbb
push
jo
test
adc
in
or
cmc
hlt
iret
div
jle
sbb
scas
add
sbb
or
adc
sub
test
pop
lods
add
fneni(8087
or
add
ds
add
add
mov
pop
xor
jno
pop
repz
add
rolb
cwtl
push
addb
mov
push
arpl
enter
cltd
push
mov
push
or
shrl
add
add
mov
adc
or
sub
sub
movd
add
mov
nop
add
addb
push
enter
loopne
fsubl
pop
push
rolb
push
xor
data16
pop
xor
or
shll
cli
add
sahf
xchg
push
pop
pusha
sub
subb
pop
xor
jns
fstpt
pop
pop
shlb
or
loopne
xor
pop
loopne
ret
adc
add
add
sbb
adc
psrld
fmuls
testb
push
xlat
sar
lret
mov
or
jmp
mov
icebp
mov
int3
add
jle
add
add
sbb
adc
push
or
jl
lock
jecxz,pn
mov
jnp
jbe
loope
in
ficoms
lds
std
rorb
mov
pop
push
xchg
jns
add
add
jl
insb
jmp
adc
std
addb
push
repz
das
add
jns
popf
lea
cmp
mov
push
adc
and
add
pop
loope
lahf
orl
test
cs
mov
push
xor
push
rorb
outsb
sbbb
add
shll
add
adc
push
bound
add
cld
shll
pusha
ds
or
adc
push
nopl
shll
movsb
loopne
clc
add
shlb
aam
adc
add
pop
in
add
sbb
loopne
or
push
paddq
mov
mov
rolb
push
rclb
add
add
rclb
adc
pop
arpl
cmp
sub
adc
push
fadds
add
add
add
addb
rcrb
subb
add
fmuls
jbe
ret
mov
loopne
lods
aas
jle
mov
and
add
cwtl
add
push
insb
add
sarl
or
std
inc
outsb
das
mov
rolb
pusha
sub
or
cmpb
add
addb
push
cld
or
pushaw
cmp
add
adc
adc
cmp
add
orl
adc
jmp
adc
xchg
push
cmp
xor
add
xor
mov
filds
mov
mov
pop
add
push
jl
sub
push
or
addb
xor
add
out
or
pusha
or
push
aas
sub
and
roll
pushf
lret
sub
stc
pcmpeqd
fwait
ret
fnstcw
aas
jmp
and
dec
nop
clc
xlat
adc
and
stc
pop
leave
or
ja
mov
jl
sti
mov
movsb
aas
sub
out
push
mov
dec
adc
xchg
jge
xchg
clc
cmpl
or
cmp
mov
mov
mov
push
push
pusha
dec
sbb
nop
aas
daa
inc
cmp
loope
xchg
xchg
lret
xchg
jecxz
mov
mov
adc
inc
inc
inc
mov
push
les
jae
and
test
fwait
or
out
cmpsl
mov
pop
push
xchg
aaa
xchg
iret
inc
clc
repnz
pop
cld
aam
mov
pop
les
aam
and
mov
addr16
aas
pop
les
dec
dec
dec
loope
dec
loopne
mov
or
add
push
les
push
js
push
and
and
bound
jl
add
adc
out
xchg
ret
les
inc
add
sub
jbe
stos
dec
cwtl
les
leave
repnz
dec
cltd
and
or
jmp
jns
ds
les
dec
dec
dec
adcb
sub
inc
mov
and
adc
movsb
push
jl
test
arpl
sahf
sub
and
out
icebp
dec
dec
adc
jmp
mov
jne
sbb
jg
sbbb
or
dec
mov
or
push
bound
les
sub
inc
cwtl
xor
iret
sub
xor
rcr
pop
jp
adc
sub
adc
xchg
test
les
adc
xchg
inc
popa
or
mov
mov
es
mov
fdiv
xchg
push
or
lahf
aas
sti
fisttpl
lock
dec
enter
addb
add
or
fcompl
int
imul
cmp
or
sub
das
stc
sti
jb
popf
mov
dec
mov
daa
jge
icebp
xchg
sub
arpl
adc
sbb
dec
loopne
and
iret
adc
mov
cmp
and
cmp
mov
enter
push
lea
enter
js
or
movsl
push
mov
popf
cmc
loop
js
inc
jo
mov
stos
and
sbb
aas
stos
jns
rcrl
mov
lret
pop
adcl
cmp
pusha
std
xchg
addr16
in
shl
cmp
ljmp
mov
xor
ljmp
gs
pop
or
pushw
aas
jbe
ds
mov
iret
xchg
mov
out
insb
aad
imul
mov
pop
cmpsb
out
mov
sbb
jp
jge
and
mov
pop
mov
test
dec
rclb
cltd
cld
mov
cmp
loopne
mov
xchg
add
and
arpl
out
in
pop
mov
movsb
add
dec
mov
jecxz
jb
sbb
dec
adc
pop
pushf
xor
fildl
inc
pop
loopne
leave
inc
js
or
mov
dec
shr
pushf
xchg
xlat
scas
mov
icebp
stc
jne
loop
pop
outsl
cmp
cmc
mov
jno
repz
fsub
repz
idivl
jecxz
push
fdivrs
mov
inc
lock
mov
pop
cli
mov
decl
mov
fcmovnb
stc
cmpsl
imul
jge
inc
jns
lahf
mov
cmp
mov
push
push
or
pop
nop
xor
iret
leave
lahf
aam
repz
mov
cli
jg
dec
popf
addr16
sub
lret
mov
mov
jg
lahf
push
fisttps
jns
mov
ljmp
cli
les
lea
cmp
fcmovnb
push
sbb
cmp
inc
mov
out
add
mov
rcr
je
movl
mov
or
dec
and
inc
jge
or
sbbl
dec
mov
cmp
or
sub
jmp
add
andl
xchg
test
subb
inc
pop
xor
idivb
cmpb
jne
and
pop
and
cmp
arpl
cmp
push
add
lods
test
mov
inc
stc
clc
icebp
mov
repnz
insb
inc
xor
ja
ljmp
sub
mov
xchg
loope
mov
in
inc
mov
lods
mov
std
cmp
insl
and
push
push
and
adc
mov
xor
ds
lds
jno
jno
jl
pop
sub
jle
xchg
and
push
aaa
ds
scas
mov
adc
dec
ds
imulb
lcall
or
jge
sbb
divb
loope
test
mov
outsb
jle
popa
inc
mov
in
sub
xor
mov
and
add
cmp
mulb
pop
jnp
inc
jnp
sbb
jp
notl
pop
xlat
add
dec
repz
cmp
xor
mov
add
je
and
aam
outsl
fidivl
out
cli
cli
push
scas
ds
pop
testl
jle
je
lock
sahf
or
nop
xchg
xchg
mov
adc
pop
mov
xor
mov
shlb
std
mov
jl
pop
jno
in
sti
idivb
mov
add
push
mov
jg
mov
lock
xor
inc
cwtl
sahf
std
loope
xchg
cmc
std
out
xor
push
fcomip
div
in
out
lock
adc
jl
clc
jecxz
inc
and
adc
adc
cmp
mov
xor
call
out
or
frstor
xchg
mov
loopne
cld
clc
sbb
ds
subl
mov
insl
call
sub
fisttps
jmp
out
gs
sbb
cld
daa
jno
jg
div
cmpsl
xlat
and
adc
ljmp
cmpsb
xchg
and
hlt
cmpsl
jmp
jg
fildll
sbb
lock
mov
inc
cld
mov
icebp
mov
das
arpl
js
int
push
or
sub
and
decb
mov
lahf
les
movsb
gs
and
jg
es
pop
fmul
es
jg
out
int
lret
aas
cmp
aas
imul
push
out
inc
int
iret
cmpsb
push
sti
mov
mov
ret
jmp
sarb
mul
cltd
insl
and
push
bnd
xchg
inc
cli
das
dec
mov
mov
push
xlat
clc
outsb
in
xor
jmp
xchg
adc
dec
cli
adc
xchg
fistpl
pop
mov
jge
vpmacssdd
in
xchg
xor
popa
not
mov
or
pop
out
pop
gs
popa
shlb
xchg
jo
cpuid
das
mov
popf
mov
or
mov
lret
inc
jp
rcrl
and
or
cmp
jge
mov
pop
mov
mov
out
cli
fdivrl
jbe
std
stos
imul
adc
jae
clc
mov
daa
lock
lds
sbb
adc
sbb
mov
mov
cld
cmp
iret
mov
cmpsb
cwtl
cmp
ds
cmp
icebp
das
out
inc
dec
cmpb
cmp
fimuls
mov
fwait
out
pushw
jnp
clc
repz
out
inc
test
mov
outsl
bound
or
fmulp
add
mov
shlb
fwait
xor
cmpsl
outsl
jae
mov
imul
repnz
push
fists
pop
jle
nop
xchg
in
add
call
mov
adc
xor
fdivs
push
mov
push
mov
inc
sti
xchg
dec
lret
inc
xchg
jmp
lret
inc
test
push
mov
aas
imul
mov
cli
call
ljmp
ds
std
sbb
fidivrl
aas
sub
mov
mov
sub
xchg
lahf
mov
insl
mov
fsubr
data16
mov
leave
sarl
rcl
jecxz
iret
andb
cmp
mov
lods
mov
fimuls
imul
aaa
mov
mov
mov
add
sti
fs
bound
das
js
mov
pop
insb
dec
mov
push
enter
in
dec
push
and
arpl
mov
inc
bnd
xor
sub
jp
xor
cmp
sub
cs
adc
cmp
sub
out
push
mov
jnp
cmpsb
mov
ficompl
aaa
insl
mov
sub
pop
cli
cmp
sbb
or
push
test
ret
jo
icebp
mov
jl
dec
dec
pop
jno
add
xchg
icebp
xchg
mov
xor
cmp
mov
xchg
int3
inc
int3
jecxz
es
out
out
cmpsb
sahf
xor
cmp
mov
pop
addr16
dec
mov
aam
loope
call
jbe
lods
leave
lods
ret
in
mov
outsb
outsl
fdivl
sub
xchg
jmp
in
in
push
outsl
scas
jge
jge
jge
std
ss
pop
in
mov
xchg
cltd
adc
and
inc
pop
inc
test
cmpsl
cmp
mov
test
xchg
cmp
xchg
push
stos
test
dec
lcall
inc
pop
inc
cmp
movsb
mov
rcrb
sbb
sbb
bound
mov
jno
jae
jmp
call
in
je
jb
jo
jo
cmp
jo
jne
in
movsb
dec
cmpsl
roll
jmp
sub
and
or
inc
in
push
call
lret
push
pop
test
xor
leave
xor
mov
mov
jae
xchg
sbb
int
insl
mov
jp
out
fwait
xchg
sti
insb
not
lock
in
dec
in
mov
in
or
ficompl
mov
js
dec
sub
xchg
fstl
lret
cmp
es
movsl
xchg
dec
jns
sbb
sub
test
aam
aam
push
cmc
xor
and
push
mov
pop
pop
xor
inc
fildl
cmp
dec
and
pop
cmp
cmp
dec
ja
jecxz
mov
stc
adc
xor
es
sbb
out
cmpsb
sbb
and
cltd
int3
out
sbb
jb
es
cmp
jns
jns
test
jecxz
call
sbb
sbb
cmp
cmp
jns
jae
repz
out
into
push
mov
xchg
and
test
add
mov
mov
inc
mov
pop
inc
pop
mov
std
pop
inc
pop
mov
mov
jbe,pn
push
std
mov
jne
jmp
xlat
std
scas
inc
pop
sbb
das
mov
loop
lret
stos
mov
jl
jbe
jnp
outsl
push
sti
pushf
cmp
sbb
or
and
cmp
sahf
dec
pop
dec
das
cmpsb
xchg
ror
pusha
lods
not
dec
or
dec
fimuls
and
je
mov
and
out
iret
mov
xchg
int3
sbb
dec
pushf
insb
movl
aad
and
ds
popf
fdivrs
hlt
mov
adc
and
sub
sbbl
les
bound
or
push
mov
shlb
loope
add
lock
jge
stos
cmpsl
dec
push
mov
icebp
sarl
dec
sahf
packssdw
clc
stos
rcrl
push
nop
inc
xor
xor
or
jmp
inc
xor
fnstsw
shlb
add
inc
loope
push
mov
pushf
leave
ret
add
bound
bound
cltd
dec
in
imul
test
daa
mov
fsubs
lret
dec
loopne
iret
push
rcl
dec
and
mov
add
pop
ja
xor
test
movsl
mov
xor
cmc
or
push
inc
sbb
aam
das
xchg
mov
imul
jge
imul
jl
mov
mov
mov
inc
aad
bound
pop
jns
dec
sahf
adc
xor
jmp
jne
dec
sbb
jbe
movsb
nop
shrb
inc
adc
sub
outsl
ret
int
insl
mov
lds
jae
in
add
jb
std
movsl
add
xlat
dec
xchg
adc
xchg
mov
movsb
lds
scas
pop
aad
xchg
movsl
int
addb
cltd
and
pop
or
push
ljmp
push
pop
xchg
sarl
inc
setnp
add
sub
push
andl
clc
push
aaa
mov
mov
push
pop
ret
fsubrs
mov
imul
xor
jbe
dec
cwtl
fbstp
add
mov
leave
sbb
cs
movsb
cmovge
imul
jl
int
dec
mov
xor
cmpsb
inc
cmc
pop
jmp
loope
push
jne
mov
adc
dec
mov
repz
cmp
fs
in
mov
jl
faddl
mov
fldcw
dec
lock
push
in
jp
daa
cli
loop
add
sbbb
sub
arpl
xlat
xor
loop
mov
rcll
repz
xor
insl
jnp
xor
mov
loope
and
insb
call
mov
loop
mov
or
mov
fcomp
daa
add
mov
mov
and
stos
mov
rcl
imul
mov
mov
aam
lock
sbb
aas
dec
stos
jae
int
lods
mov
dec
mov
pop
ss
gs
mov
lret
dec
mov
and
testb
fdivrl
cmp
nop
mov
mov
sub
mov
cmp
push
xchg
jne
adc
mov
pop
fstl
fstpt
scas
pop
jmp
xor
pop
mov
mov
inc
call
xchg
jge
mov
xchg
into
mov
cmp
sub
mov
jp
clc
cmp
popa
pop
dec
mov
push
and
ret
ret
and
sub
jae
pop
add
ret
icebp
xchg
mov
push
popf
bound
stos
xchg
mov
inc
inc
lods
aad
jp
aad
jb
cmpsb
popf
faddl
cmc
movl
and
mov
or
jecxz
or
push
into
push
pop
push
xchg
adc
or
out
loop
add
sub
rcl
mov
xchg
sub
sub
push
mov
mov
mov
ret
mov
adc
xchg
cmpsb
jge
adc
adc
out
pop
jno
hlt
xor
and
inc
sarl
and
test
cli
inc
mov
cli
mov
movsl
and
roll
in
out
cmp
ret
pop
inc
mov
repz
pop
pushf
cmc
aas
pop
sbb
xchg
mov
loopne
mov
adc
inc
lret
jle
nop
loope
lcall
jnp
call
add
pop
cmp
mov
adc
mov
inc
sbb
xor
divb
popa
push
dec
pop
movsl
popf
cmc
dec
push
inc
dec
lret
imul
pop
out
or
out
aaa
pusha
pop
in
ja
lock
mov
dec
std
xchg
xchg
jle
sbb
icebp
repnz
sbb
testb
test
ret
add
lods
cmpb
ss
pop
adc
mov
ror
dec
mov
mov
lret
cmc
lods
rorb
clc
cmc
add
dec
ret
xor
dec
fistpl
mov
outsb
pop
dec
jle
sub
xor
mov
ficomps
lahf
cli
cld
push
sub
lods
js
and
stos
mov
dec
and
jmp
and
jmp
jno
mov
stos
cmpsb
mov
sti
lds
ja
into
mov
adc
mov
std
dec
cs
fxch
push
push
test
outsl
daa
dec
rol
out
push
push
sbb
adc
xor
movsl
sbb
cwtl
sti
and
insb
push
test
dec
aas
imul
pop
imul
cmp
lods
sub
xorl
bnd
push
and
xor
mov
nop
insb
or
loopne
mov
or
and
cltd
out
cmp
jno
and
inc
sar
les
xchg
adc
push
add
test
pop
bound
ficomps
scas
outsb
stc
aam
in
mov
mov
dec
push
sti
test
hlt
in
inc
std
sbb
adc
mov
or
cmp
jp
lcall
pop
pop
shrl
rorl
xlat
loope
daa
aas
test
stos
mov
sbb
leave
mov
ret
jl
cli
pop
cmp
leave
repz
mov
cmp
sub
pop
imul
mov
mov
movsb
outsl
add
fldcw
jns
xor
mov
ds
mov
imul
xchg
js
push
fcompl
push
mov
lods
mov
pop
inc
sub
adc
mov
xchg
mov
pop
xchg
push
imul
cld
in
jnp
mov
fucom
xor
fcomps
xchg
jecxz
outsb
mov
daa
fwait
push
jns
xor
adc
or
xor
fbld
movsl
jecxz
cmp
loopne
dec
adc
xchg
jne
loop
sub
cvtps2pd
idivl
movsl
out
ljmp
test
mov
add
xchg
lret
gs
icebp
pop
icebp
jecxz
adc
stos
mov
imul
mov
fldl
stos
popf
mov
cmp
cmp
sbb
sahf
fwait
hlt
inc
jo
mov
dec
mov
data16
xor
push
adc
loope,pt
into
popf
gs
dec
lock
jmp
in
xchg
and
cmc
jge
xchg
mov
ret
push
stc
scas
mov
mov
jo
ja
in
clc
movsb
lea
insb
xor
lods
negl
nop
ljmp
cmpsl
lods
lock
jecxz
add
xchg
loope
mov
fwait
arpl
bound
add
jae
jbe
push
lcall
inc
outsl
icebp
mov
xor
cmp
dec
sbb
int
imul
cltd
dec
sub
dec
imul
sub
dec
pushf
mov
leave
pusha
cltd
mov
mov
out
loop
xor
aam
movsl
rcrl
push
push
test
jno
je
ss
gs
dec
lods
add
decl
clc
mov
jne
cmc
xor
push
setge
sbb
sub
push
popa
push
test
cmp
push
rcl
pop
mov
std
jecxz
jg
pop
movsb
mov
sbb
shrl
out
fs
mov
jl
dec
or
mov
leave
dec
mov
sbb
inc
lea
jl
xor
jle
jle
test
daa
arpl
roll
cs
inc
fisubrl
fimull
cmpsb
mov
cwtl
sbb
push
stos
leave
dec
mov
lods
orl
xchg
cld
push
arpl
mov
lahf
add
jle
idivl
xchg
sbb
data16
sub
pop
ret
rolb
hlt
mov
loope
dec
pop
repnz
mov
or
mov
mov
xor
cmp
in
push
hlt
cs
xor
pushf
out
stos
scas
idivb
imul
mov
out
sar
cmp
mov
scas
cli
das
ficompl
adc
mov
sbb
cli
and
and
test
ret
into
cli
cmpb
push
fisubs
pop
movsb
add
pop
xchg
jb
push
outsl
in
dec
or
or
out
imul
sub
inc
xchg
xchg
into
xor
scas
xchg
fdivl
dec
sahf
jecxz
or
adc
addr16
fs
hlt
jb
cltd
lea
aaa
lea
loopne
adc
mov
mov
loopne
mov
aas
xchg
pop
dec
sub
dec
xor
push
lret
cs
mov
cld
xchg
dec
sbbw
sub
stos
fwait
mov
fwait
into
or
les
jnp
into
sbb
sbb
dec
inc
cs
movsl
fwait
aas
mov
mov
push
scas
cmp
pushf
jno
jmp
insl
jbe
pop
scas
push
push
fs
sub
into
mov
inc
push
les
stos
sub
cmp
or
into
sub
stos
lahf
push
mov
lea
jmp
lcall
mov
mov
inc
shr
scas
insl
cmp
mov
or
push
pop
lcall
in
adc
and
push
stos
ss
lods
out
pop
aam
xor
lock
repz
lds
fnsave
mov
in
pop
xlat
mov
mov
cmp
push
jmp
xor
xchg
jb
roll
mov
xchg
aad
mov
inc
out
push
out
outsb
xchg
int3
jle
fidivs
addr16
lock
cld
sbb
cld
jne
cmpsb
jmp
imull
jae
dec
lcall
test
sbb
jecxz
cwtl
push
mov
stos
pop
pop
clc
xor
pop
leave
push
negb
lret
mov
jnp
ficompl
neg
mov
movsl
cmp
ds
xchg
mov
xor
stos
stos
xchg
fs
aam
pop
test
mov
stos
or
cmpsl
cmpsb
jns
push
aam
jo
jge
test
cli
fdivs
mov
test
dec
inc
lahf
test
in
dec
ds
aam
xchg
jbe
dec
std
out
cmpsb
and
dec
jp
rcrl
or
rcrb
lods
adc
dec
lods
jmp
dec
mov
ja
aam
int3
dec
mov
loop
arpl
jae
test
push
fsts
cmp
jns
pop
pop
out
mov
movsl
cmc
bound
push
sbb
ficomps
mov
rcll
xchg
xchg
mov
jb
adc
in
les
lret
sbb
loope
test
lods
shrl
pop
dec
out
imul
cmc
adc
xchg
adc
push
sbb
insl
sti
aam
inc
arpl
gs
jmp
test
out
lahf
push
out
popf
push
jge
in
imul
add
arpl
out
rorl
xor
pop
cltd
mov
leave
push
ljmp
les
or
push
inc
pop
xor
mov
insl
aaa
addr16
pop
outsl
sbb
int
xor
pop
mov
push
repnz
incb
rclb
in
mov
pshufw
in
sbb
ss
mov
shr
inc
dec
push
or
xlat
jbe
test
mov
and
xor
and
in
outsl
pop
jnp
and
xor
das
or
or
lods
fisubrl
stc
sub
jg
insl
or
cmpsb
cmp
or
in
mov
je
shlb
loope
fcmovb
add
pop
xlat
sbb
insl
sub
sub
gs
loop
stos
cltd
repnz
sbb
xor
in
push
fnsave
cld
dec
xchg
enter
inc
into
jb
stos
mov
nop
mov
out
mov
out
mov
pop
test
sbb
scas
insl
and
sbb
jno
sbb
inc
fsub
stos
sub
je
and
sahf
out
xor
cmpsl
fnstsw
xor
pushf
std
enter
push
mov
cld
mov
ljmp
xlat
mov
iret
lods
and
sub
ss
adc
shlb
in
popf
cmp
mov
xchg
dec
jecxz
push
repnz
loopne
mov
mov
adc
pop
pop
sbb
das
nop
mov
push
jnp
cmp
xchg
jmp
pop
pmulhw
cmp
stos
mov
mov
orl
mov
cmp
das
dec
jno
outsb
mov
je
frstor
mov
jne
je
xchg
lret
pop
fldcw
cmpl
insl
insl
out
jne
push
call
imul
and
jg
push
jge
push
push
lods
jge
loop
sti
inc
cmp
rcrb
push
out
jecxz
jge
jge
fdivrs
int
push
add
adc
gs
vrsqrtss
fwait
iret
xchg
sahf
les
jns
cs
mov
cmp
gs
pop
jecxz
mov
jp
or
pop
and
inc
jae
ljmp
insl
rcrl
pop
sub
push
jnp
mov
inc
sbb
dec
mov
push
fst
mov
xchg
cmp
mov
stos
and
scas
jmp
mov
cltd
jp
xchg
push
xchg
inc
lods
fidivl
inc
jb
int3
inc
fisubrs
push
pop
aad
lods
xchg
jo
push
mov
xchg
pop
mov
jnp
cmp
xlat
mov
je
add
dec
movsl
mov
add
scas
notl
test
cs
cltd
sub
ficoml
jnp
mov
js
into
mov
out
jmp
leave
cltd
dec
jp
push
adc
data16
pop
mov
test
sub
fwait
cmpsb
fidivl
sub
cmp
xchg
das
imul
mov
mov
push
and
iret
in
sub
out
xor
cltd
int3
sub
pusha
push
sahf
divb
mov
shr
push
jmp
ja
fcompl
jp
adc
xor
push
mov
mov
push
push
dec
fdivr
and
xchg
int
cli
mov
cmpsb
sub
mov
pop
cmpsb
mov
ss
push
add
jae
mov
icebp
in
jmp
sbb
xchg
hlt
push
cmc
pop
dec
vpsrld
inc
lret
cmp
lock
iret
dec
or
fdivrl
lds
xlat
jecxz
inc
fisubl
insb
mov
imul
out
out
mov
stos
stc
cmp
leave
in
xchg
sub
dec
lods
movsl
or
es
test
lahf
jp
pop
pop
inc
out
cmp
add
rcrl
aam
repnz
in
testl
in
cwtl
push
test
std
icebp
xrelease
sarl
cmp
xlat
jg
mov
add
sti
mov
fwait
add
lods
repnz
je
mov
dec
imul
push
mov
cltd
fsubrs
jmp
loope
ret
in
cmc
xor
je
hlt
jno
out
pop
ficomps
icebp
add
mov
outsb
fbstp
cmpsl
jae
sub
int3
test
jno
hlt
inc
or
es
xchg
mov
or
jp
addr16
jbe
dec
xchg
jmp
imul
mov
lahf
push
cmp
test
out
sub
push
fidivrs
cmp
fs
in
jmp
pop
cmp
cltd
xchg
dec
cmpsl
popf
push
push
insl
outsl
les
pop
into
inc
xchg
aam
aas
inc
mov
daa
aaa
sub
xor
push
cmp
xor
imul
sub
imulb
pushf
mov
hlt
xor
dec
hlt
test
xchg
ja
jl
into
fdiv
insb
fstpt
jl
lcall
dec
mov
and
xchg
icebp
ljmp
fcom
jge
sbb
sub
sti
mov
xor
mov
adcl
mov
xchg
cmp
pop
push
insb
pusha
pop
scas
fldt
adc
adc
es
int3
fdivl
pop
in
mov
mov
insb
dec
sub
mov
aas
mov
ret
repnz
movsb
xchg
data16
loop
insb
fwait
pushf
push
out
jle
leave
popf
call
sbbl
fdivp
xchg
mov
sti
int3
xchg
lret
ss
stos
cmp
out
xchg
mov
repnz
jle
fwait
pop
dec
arpl
sti
jge
xchg
mov
or
es
mov
ret
jb
imul
mov
add
xchg
cmp
sbb
and
out
mov
ret
jbe
jae
notl
aam
ret
roll
push
imul
lock
xor
shlb
stos
imul
push
lret
cltd
stos
mov
inc
test
dec
shlb
xchg
fistpl
popa
test
pop
fidivrl
in
pop
lret
mov
fldl
xor
ret
dec
lds
aad
movzwl
gs
jo
insl
mov
dec
in
pop
sarl
inc
pop
pop
das
mov
push
adc
sbb
mov
pop
cmp
mov
push
cltd
in
movsl
push
lcall
fiadds
cmpb
adcb
xchg
ja
sub
adc
sahf
inc
js
stc
jle
insl
je
add
ret
or
xchg
in
lea
pop
add
push
lcall
aas
inc
push
in
mov
mov
dec
inc
xchg
movsb
out
shrl
push
fstps
xor
in
xor
out
xor
in
cmp
cmc
in
adc
mov
jb
rcr
mov
test
jno
pop
repnz
aam
out
sbb
rcrl
cmc
fimull
inc
movsl
xorb
mov
xchg
cmp
jns
mov
jp
xor
xor
push
or
xor
ja
pop
sbb
cmp
xor
cld
xlat
scas
addr16
fcomi
mov
cmp
icebp
test
into
cmpsb
aaa
xchg
pop
adc
andb
mov
andb
daa
lcall
mov
xchg
pop
adc
adc
pop
loop
sub
test
mov
and
jp
dec
sub
pop
push
jno
xor
leave
cmp
jnp
mov
xchg
loop
push
or
icebp
insb
daa
sub
fs
imul
lds
insb
inc
push
pop
scas
lock
shrb
insb
sub
xchg
sbb
leave
push
xchg
inc
lret
call
adcb
push
xchg
pop
inc
sub
xlat
pop
lds
mov
repz
sub
cmp
mov
stos
fcmovbe
mov
mov
fldenv
fsubr
pushf
fwait
test
inc
out
shll
mov
aad
aaa
pop
pusha
mov
mov
mov
mov
inc
jo
mov
enter
or
adc
daa
sahf
sub
ljmp
mov
in
gs
ja
gs
stos
loop
in
mov
cmpsb
fidivs
push
and
xchg
das
imul
jae
jmp
xchg
push
ss
adc
add
and
fstp
nop
pop
dec
test
cmpsb
test
jle
inc
in
out
push
in
stos
shrb
xchg
aad
adc
adc
sbb
push
xor
dec
xchg
push
and
ja
push
sub
dec
aaa
dec
mov
xlat
dec
ds
inc
pushf
mov
pop
ret
lahf
sbb
cmp
shlb
inc
add
or
sbb
xchg
mov
das
mov
rorl
lea
mov
mov
dec
cmp
adc
xor
clc
leave
aam
mov
popf
pop
addr16
in
cmp
pop
hlt
push
inc
adc
es
das
rcll
imul
pop
fisttpl
setae
pushf
or
movsb
fwait
outsb
mov
lods
lods
inc
sub
insb
jp
ret
outsl
sti
lods
arpl
stos
xor
inc
mov
pop
cmpsl
orb
cmp
pushl
cld
loop
inc
rcrl
mov
jecxz
mov
fisttps
rclb
sub
mov
fs
fwait
mov
sub
mov
inc
out
xlat
movsb
loopnew
pop
xchg
or
ss
xor
aaa
es
loopne
mov
iret
push
push
pop
jmp
out
mov
xor
push
pop
neg
cwtl
lods
push
jb
test
stc
test
add
das
pop
divl
loopne
fisubs
and
shrl
dec
jnp
add
inc
cwtl
xchg
into
imul
cwtl
pop
pop
stc
mov
outsb
xlat
jne
push
gs
adc
or
cmp
xor
mov
mov
mov
cwtl
cwtl
dec
test
and
imul
jb
sbb
jge
dec
push
cltd
xchg
push
fs
sub
and
lods
repz
iret
inc
and
dec
mov
push
xlat
cltd
mov
shrb
jne
call
sti
push
xchg
out
xchg
jns
dec
push
sahf
and
dec
mov
pop
xor
vpshaq
jecxz
mov
lcall
jmp
insl
frstor
jnp
sahf
mov
mov
shlb
stos
inc
adc
test
xor
out
mov
push
mov
icebp
dec
fnsave
in
dec
mov
aaa
inc
fadds
cmp
call
and
shlb
pop
test
xchg
stos
movsl
push
mov
mov
adc
cld
jecxz
pop
lret
jp
outsl
fdivl
dec
jmp
sbb
aad
in
insl
into
push
sub
sub
test
xor
xchg
mov
adc
insb
aas
dec
insb
les
add
aam
test
imul
aad
mov
cltd
les
scas
adc
pop
mov
mov
sub
mov
adc
int3
decb
pop
movsb
jb
hlt
in
fmuls
inc
fcomip
xchg
aad
cltd
and
into
pop
sub
imul
arpl
mov
das
aam
push
scas
push
cwtl
ret
pusha
out
sahf
cmp
shrl
stos
xor
fcoms
in
jge
lret
push
movsl
stc
adc
daa
in
repz
or
lcall
push
and
pop
and
inc
push
test
leave
das
jno
push
lahf
jbe
cmpl
sub
insl
pop
lods
jecxz
xchg
stos
mov
mov
inc
out
addr16
daa
and
das
sbb
adc
pop
sbb
xchg
std
xor
cmp
inc
jb
sar
cltd
ss
mov
cli
xchg
icebp
movsl
dec
inc
mov
xchg
push
or
test
stos
jno
clc
sbbl
popf
inc
jmp
cwtl
popa
and
ret
adc
jbe
mov
aas
jb
or
xchg
push
jae
testl
test
lret
inc
mov
movsl
inc
mov
dec
mov
jbe
adc
adc
mov
or
push
aad
inc
out
imul
sub
in
inc
and
mov
jle
ret
mov
xchg
loop
cmp
jl
and
push
andb
cmpsl
or
movsl
sub
xor
nop
ljmp
jae
push
jns
lcall
mov
cltd
xor
sbb
pop
mov
shrb
dec
cld
stos
mov
sub
push
jns
jb
cmp
mov
cli
sbb
mov
leave
scas
daa
cmp
imul
dec
push
popf
cmp
mov
sbb
fxch
sub
mov
dec
nop
pusha
push
push
xchg
pop
mov
shrb
cld
or
das
sbb
push
pop
sub
arpl
pop
sti
popa
cwtl
icebp
xor
jbe
pop
sub
movsl
push
mov
std
pusha
and
jmp
cmp
mov
mov
adc
pop
cmp
add
lret
jge
jle
xchg
outsb
cmp
and
xor
cmpsb
loope
stos
cmp
loopne
leave
inc
inc
loopne
mov
inc
orl
mov
rcrl
lahf
std
pop
cmp
outsb
aad
in
imul
into
outsb
push
movsb
scas
cld
add
divb
outsl
fadd
fst
mov
mov
jmp
or
out
adc
insb
and
xchg
jge
push
lcall
push
movsb
stc
es
aam
cmp
stos
loop
out
mov
mov
repnz
stos
mov
scas
imul
add
cmp
mov
mov
movsl
xchg
lret
jbe
fwait
mov
leave
push
mov
popf
popf
xchg
xchg
movsb
stos
mov
mov
jne
mov
push
mov
mov
test
add
mov
pop
sahf
dec
mov
addr16
popf
notl
das
sbb
daa
inc
outsb
and
sbb
das
cmp
pop
rorl
das
cltd
clc
mov
out
loope
cmpsl
xor
xchg
xchg
mov
lret
xlat
les
lds
xor
mov
xchg
in
push
imul
lret
push
cmp
dec
mov
insl
jecxz
xor
xchg
cmpsl
dec
mov
popa
push
or
fdivp
data16
mov
jb
ds
xchg
adc
cmpsb
sbb
fadds
adc
negl
jno
jns
pop
lahf
lret
lea
dec
cmpsb
mov
int3
jno
pop
movsl
pop
mov
pop
pop
xlat
in
sub
jno
inc
jne
pop
xor
dec
or
je
xchg
sbbb
out
pop
add
sarl
xorb
cmp
dec
mov
movsl
jle
mov
into
pop
pushf
mov
mov
std
xchg
inc
sbb
mov
xchg
popf
cmp
sti
into
fcomi
insl
pop
xor
je
mov
bound
jp
push
out
pop
xor
arpl
and
insb
data16
into
pop
int3
fnstsw
dec
add
jmp
lods
stc
mov
add
jno
dec
in
pop
mov
enter
or
stos
pop
fcomps
out
push
shrb
mov
pushf
ds
jp
and
mov
xchg
dec
cmp
aaa
mov
das
mov
cmpsb
jmp
push
pop
pop
jle
pop
pop
pop
push
sbb
jp
fldl
lods
xchg
jnp
mov
imul
pop
pop
dec
je
aam
or
subl
ret
out
loop
ljmp
add
movsb
adc
inc
mov
cmc
xor
mov
adc
sbb
cmp
fs
lret
cmpsb
cmp
xchg
adc
inc
jns
xor
dec
out
les
in
add
sahf
lods
xor
jge
cli
and
jnp
stos
cmovbe
mov
inc
push
int
push
test
inc
daa
jmp
inc
xchg
jns
into
adc
add
mov
adc
leave
mov
cli
div
gs
fnstcw
cmp
out
cld
arpl
out
imul
and
iret
inc
test
scas
or
mov
int
popa
mov
in
mov
loope
inc
lods
shl
sbb
gs
in
pop
and
imul
in
mov
sub
fnsave
out
aaa
pop
pop
fs
add
lea
fs
gs
sbb
dec
stc
pop
jo
icebp
push
insl
leave
into
jge
push
sahf
cs
mov
or
in
add
lods
jmp
mov
inc
stos
push
dec
ja
pop
xor
pop
call
clc
xlat
push
dec
jp
sahf
das
push
lods
jbe
ja
std
ja
adc
jbe
mov
and
fcmovu
mov
mov
jne
mov
aad
jns
movsl
pop
fcomi
xchg
into
add
and
mov
fnstenv
xlat
jb
dec
ret
jge
lret
pop
xor
sub
pop
into
jle
inc
test
cmp
mov
push
push
push
xor
shlb
idiv
jmp
jbe
cld
xchg
pop
stos
and
mov
and
outsb
cmp
jp
xchg
fucomi
test
iret
cmpsb
pop
inc
popa
nopl
lock
lds
xor
ss
ljmp
sarl
or
mov
ret
xchg
xor
mov
test
sbb
data16
mov
and
bound
icebp
icebp
insl
stos
outsb
out
enter
stos
cs
movsb
xchg
stos
push
dec
jecxz
ss
imul
bndldx
xchg
lcall
pop
mov
int
in
dec
adc
cmp
xchg
push
jmp
mov
je
negl
push
pop
push
cmp
adc
pop
xchg
and
inc
pop
fwait
dec
cwtl
and
inc
lods
jne
jb
fwait
loopne
xor
call
fidivs
pop
out
out
dec
mov
sub
push
jge
mov
inc
dec
and
ljmp
mov
add
pushf
je
dec
lcall
jnp
insb
lea
pop
xchg
incb
cmp
arpl
mov
xor
in
pop
in
and
cld
jecxz
mov
lcall
sbbb
mov
xchg
out
push
imul
add
sub
or
pop
push
pop
jbe
xchg
data16
push
push
mov
outsl
mov
xor
mov
mov
mov
dec
sti
mov
cli
test
addr16
mov
nop
out
leave
je
daa
loope
xor
xor
sub
push
jnp
pushf
vpsrad
xchg
lret
lods
jno
jae
or
jnp
mov
xchg
mov
xchg
inc
dec
push
sar
jb
lods
xchg
into
fnsave
int3
sub
add
out
imul
push
xor
or
mov
rclb
or
fidivrs
push
cwtl
sub
fsts
into
out
mov
out
out
enter
jmp
rcl
mov
pop
out
mov
xchg
adc
cmp
cmpsl
fiaddl
jnp
inc
xlat
mov
pop
push
js
lret
inc
jp
out
sub
idivb
xor
cmp
movsb
adc
push
adcl
mov
jmp
cwtl
out
enter
jp
out
int
pop
pmuludq
dec
test
jns
test
mov
dec
enter
mov
pusha
mov
ja
jecxz
mov
sub
cltd
scas
movsl
lahf
adc
xchg
sub
imul
adc
addr16
xor
xor
sub
and
sti
mov
push
sub
cmc
fnstcw
mov
push
mov
mov
push
jecxz
push
sbb
pop
aas
leave
test
mov
mov
ror
ds
jae
aaa
mov
inc
cmp
movsb
mov
mov
ret
aas
sbb
jmp
sahf
neg
rclb
mov
subl
dec
arpl
int
jmp
icebp
add
push
lock
stos
dec
or
nop
ret
aas
shrb
movsl
repz
xor
inc
addr16
xor
int
mov
sbb
push
jge
leave
cmp
fs
cld
mov
push
pop
sbbl
lcall
shl
lods
aaa
mov
pop
mov
ljmp
lahf
mov
movsl
jnp
aam
int3
arpl
sti
ljmp
repnz
jnp
iret
daa
dec
into
test
ja
sbb
jle
mov
xlat
rclb
aaa
push
dec
outsb
rorb
ret
and
outsl
ret
cmpsb
das
mov
mov
adc
pop
popf
in
popa
divl
out
cmpsb
sbb
ljmp
jnp
mov
ds
xchg
ds
sub
int
and
std
mov
test
xorl
xchg
mov
pop
jl
mov
pop
xchg
lea
dec
lahf
pop
xor
xlat
loop
sbb
gs
or
loop
mov
and
jmp
dec
fsubl
pop
ljmp
cmp
in
cmp
xchg
push
rcrl
repz
pushf
int3
xchg
dec
pop
je
out
daa
lock
or
dec
je
dec
xchg
xchg
xchg
fwait
dec
mov
movl
cmp
mov
mov
popa
test
movsb
mov
mov
imul
popf
sub
iret
fstpl
es
jmp
cld
jno
mov
in
pop
inc
inc
stc
pop
xlat
outsl
fisubrs
fidivrs
std
pop
cmc
cmp
inc
in
adc
popf
cld
adc
cmp
cmp
fisttps
xchg
btr
sub
rcl
into
pusha
mov
mov
fidivrs
fimull
iret
stc
xchg
mov
je
xor
addr16
sub
stc
and
pop
or
xchg
xor
cltd
mov
and
je
sbb
pusha
or
cmpsl
inc
in
mov
cwtl
imul
addr16
jb
ljmp
dec
test
jae
imul
mov
icebp
enter
xor
sarb
push
adc
cmp
mov
sbb
stos
dec
push
pop
or
xchg
test
cmpsl
mov
pop
jne
test
inc
out
push
aam
cmc
test
jb
pop
jne
stc
sbb
cwtl
into
jne
push
adc
push
push
inc
sub
adc
repz
aas
lock
stos
cwtl
jbe
and
imul
xor
int
mov
cmc
loop
paddb
xor
xchg
xor
jg
push
xlat
mov
out
jbe
rcl
xchg
push
lcall
jle
push
cmp
in
cmp
xchg
fwait
push
push
push
xorl
cltd
push
mov
mov
pop
inc
neg
mov
inc
imul
lret
fcoml
mov
and
cmp
fdivp
adc
mov
fnstcw
or
inc
das
jmp
xchg
cmp
pop
xchg
shll
or
outsl
sarl
mov
dec
popa
loop
xlat
pop
fisubrs
and
pusha
fidivl
in
fs
out
sbb
cmp
std
outsb
lret
and
int3
ja
adc
push
js
in
insb
ljmp
lret
les
cmc
add
fdivrs
jne
outsl
cmpsb
push
lods
xor
adc
in
mov
adc
cmp
adc
adc
test
cmp
mov
sbb
push
rcrl
inc
iret
jnp
out
and
push
pop
aad
repz
dec
les
pop
icebp
out
lds
dec
xchg
movsb
iret
jmp
xchg
xchg
mov
cld
xlat
jb
cwtl
pop
negb
jnp
jno
and
mov
ljmp
out
mov
push
gs
aad
xor
fwait
or
pop
push
sub
jmp
cmp
test
fdivr
mov
dec
lret
fdivs
push
inc
loopne
ja
xor
stos
mov
je
ret
imul
je
jg
mov
jl
mov
jbe
cld
les
fisttpl
push
jne
flds
cwtl
mov
pop
mov
jmp
pop
mov
mov
or
push
rorl
pop
sbb
mov
push
inc
cltd
inc
xor
ljmp
xor
test
pop
pop
mov
pop
enter
rcrl
pop
mov
loope
mov
push
data16
push
pop
sub
addr16
adc
adc
cwtl
adc
daa
es
js
mov
push
popa
fs
dec
dec
pop
mov
pop
lret
jae
fisubrl
pop
pop
xor
push
xchg
fsubr
cli
dec
lcall
pop
fwait
xor
mov
cwtl
rorb
cmc
lret
pop
enter
mov
mov
sbb
sub
dec
dec
sbb
leave
stos
or
mov
inc
test
std
stc
fcmovu
fsts
shlb
in
std
pop
call
xchg
pop
or
pop
mov
mov
xchg
dec
jbe
fimuls
das
push
call
pop
xchg
inc
lcall
dec
xor
xchg
sbb
push
cwtl
cmp
jae
out
int3
push
cltd
jmp
fwait
xor
addr16
int
fwait
stc
sub
jns
fcmovne
and
and
inc
cmp
fwait
sub
and
lods
ret
test
int
pop
pop
sub
lods
add
nop
mov
subb
xchg
push
xor
mov
sub
sub
cmp
clc
mov
dec
iret
xchg
cmp
jbe
gs
in
fsubp
pop
cmc
mov
pop
aaa
cmp
mov
or
sarl
pop
push
mov
mov
push
test
mov
jmp
add
sbb
cli
fsubrp
out
fcomip
imul
outsl
out
adc
mov
stc
in
popa
por
stos
jae
lret
xlat
pop
fnstsw
inc
xor
cmp
pop
mov
mov
cmp
rorb
mov
cmp
push
fiadds
fwait
pop
aas
call
cwtl
dec
cmp
jg
mov
ret
ret
rorl
out
jmp
std
mov
insl
imull
mov
sti
pop
testl
out
mov
aad
lods
and
pop
push
lock
or
aad
cmp
outsb
nop
js
popa
cs
push
mov
cltd
inc
inc
sub
cmp
pop
rcr
icebp
mov
insl
mov
mov
ja
or
fnsave
lods
jmp
pop
lcall
mov
adc
test
inc
icebp
or
pop
push
fnsave
mov
ja
ja
in
mov
fcomi
mov
push
lcall
in
divl
sbb
aas
jle
repnz
movl
rorb
movsb
sti
into
bswap
or
dec
lret
pop
nop
mov
mov
stos
push
inc
pop
lret
dec
jbe
rcrl
hlt
notb
cmp
jmp
test
testl
insb
xlat
dec
mov
out
jae
xor
pop
mov
push
xchg
push
insb
stos
cmp
rcll
movsl
loop
push
add
mov
cli
in
or
jg
std
jno
jecxz
jmp
pop
jp
out
in
sti
push
add
cmpsl
mulb
mov
std
mov
cmpsb
shrl
push
sti
push
push
or
xor
mov
pop
loope
sbb
adc
push
xor
icebp
stos
adc
fcomp
mov
jecxz
inc
add
fcmovne
jno
daa
pop
cmp
sbb
movsb
cmp
int3
clc
aam
jb
pop
mov
jge
push
jno
arpl
sbb
jae
imul
xor
xor
jae
data16
test
cmp
addr16
add
mov
jae
ror
mov
jp
bnd
sbbb
sub
dec
iret
ret
jnp
adc
pop
inc
sub
sub
mov
pusha
jne
fwait
or
out
aaa
sbb
imul
pop
sub
xor
orb
shll
xchg
inc
push
mov
andb
add
aad
ret
add
aas
andl
pop
popf
mov
arpl
rclb
or
xchg
fsubrs
testb
into
mov
lahf
into
jno
or
xchg
adc
jle
mov
push
sqrtps
push
and
mov
sahf
xchg
push
int3
pop
cld
xchg
mov
adc
mov
fsubrl
push
int3
imul
lock
pop
sub
fs
cltd
fwait
lock
sub
scas
je
push
xor
push
mov
mov
hlt
push
or
movsl
lret
fistps
ficomps
cld
test
xchg
ds
imul
out
jbe
pop
jecxz
sub
or
aas
jmp
xchg
ficoml
gs
lret
repnz
lret
sub
jg
into
mov
push
and
shlb
push
cmp
cmpsb
popf
lahf
sub
sarb
imul
fldenv
orl
xchg
mov
cmp
lds
adc
shlb
in
les
std
and
mov
testb
jmp
pop
adc
ret
lahf
mov
xchg
imulb
jo
loopne
rorl
repnz
lret
aaa
je
cmp
mov
lahf
les
icebp
cmp
pop
pop
push
sub
push
mov
stos
dec
add
out
adc
arpl
adc
jmp
fstpt
mov
insb
mov
xchg
push
xor
xchg
das
or
or
xchg
jne
pop
fwait
das
stos
lea
push
xchg
insb
hlt
cld
dec
cs
mov
sbb
jmp
scas
mov
push
inc
push
add
lcall
jb
inc
bound
pushf
xchg
aad
repz
ss
pop
aas
das
call
ss
mov
cmp
into
cmp
adc
mov
dec
xchg
xchg
gs
sbb
test
adc
pop
dec
sub
repz
mov
arpl
data16
cmp
repz
lock
ror
bound
adcb
adc
mov
pop
cmp
pushf
xchg
and
mov
adc
pop
xor
xor
jl
mov
xor
lds
je
pop
push
push
hlt
scas
sub
or
aas
xor
std
popa
jo
sbb
test
rolb
fildll
jnp
jg
enter
test
add
mov
mov
lods
dec
call
adc
push
cmp
out
push
mov
pop
mov
add
and
sti
mov
cmp
mov
mov
sub
nop
in
stos
test
pop
and
cltd
sbb
xchg
lods
adc
in
bnd
xor
dec
fidivrs
in
lret
mov
in
inc
cld
aaa
stos
cmp
rcll
and
enter
test
test
mov
lock
cmc
mov
lock
mov
adc
push
cmp
fldl
xchg
sbb
jg
hlt
iret
add
xor
ds
mov
sbb
inc
imulb
xchg
das
and
jns
mov
adc
xchg
mov
scas
mov
jl
adc
push
dec
inc
mov
push
inc
and
pusha
imul
inc
fcom
repnz
fdivs
lcall
aaa
push
cmp
sti
mov
fisttpl
in
mov
shlb
cld
pushf
jb
mov
insb
daa
cmp
sbb
xchg
es
mov
mov
and
fucomi
subb
pop
or
movsb
add
shrl
jle
repz
sbb
xchg
scas
jp
cld
out
mov
cld
call
inc
hlt
jmp
inc
mov
mov
jl
lcall
das
fildl
and
lret
xchg
adc
inc
mov
and
and
shrl
repnz
sbb
stos
inc
cmp
imul
mov
lods
fists
or
sub
and
cmp
dec
pop
jl
pop
mov
int
aam
jg
roll
scas
fimuls
sub
mov
mov
mov
inc
xchg
and
lret
nop
push
pand
out
roll
ljmp
dec
ss
mov
je
fmuls
push
cmp
pop
negb
sbb
dec
call
imull
lcall
sti
out
add
xchg
lock
cmp
sbb
mov
pop
fistps
test
imul
sbbb
pop
insb
popa
sbb
xor
push
mov
adc
sbb
adc
push
mov
shlb
adc
dec
test
es
insb
lea
movsb
fcoms
and
aas
sub
icebp
sbb
bound
or
inc
sub
inc
xchg
in
jb
adc
mov
test
push
fsincos
shrw
push
pop
mov
and
pushf
sub
aas
and
cmpsb
pushf
shrl
imul
add
lods
out
and
das
stc
cmc
and
xchg
shll
loopne
cwtl
push
mov
push
xchg
rolb
xor
add
das
lock
sub
adc
adc
mov
pop
mov
and
nop
jne
and
mov
fnclex
in
aas
push
xor
push
cmp
mov
sbb
jae
or
ljmp
in
sbb
xor
dec
inc
jle
mov
adc
mov
jle
xchg
mov
lods
mov
cmp
lods
adc
mov
rcl
aaa
test
or
js
pop
ss
add
iret
xor
mov
lret
xchg
pop
push
push
adc
es
sbb
mov
xor
orb
cltd
xor
jecxz
mov
lret
dec
pop
pop
aas
mov
jb
lret
or
or
sub
fdiv
adc
popa
xchg
repz
out
mov
jne
fistpll
jne
out
popf
jae
cmp
cmp
fidivs
pop
push
pop
pop
push
xchg
into
pop
fldl
repz
adc
push
pop
push
andl
dec
data16
mov
mov
mov
pop
xor
adcb
mov
test
js
mov
or
sti
sub
insl
xchg
sahf
in
ret
mov
inc
and
xchg
cmovns
add
mov
in
fwait
jb
addr16
xor
lahf
bound
jnp
cmp
lods
xchg
mov
icebp
movsl
insl
jb
jl
dec
jns
lea
sbb
bound
std
push
cmpsb
leave
pop
and
mov
dec
sahf
adc
popa
cmp
mov
ja
test
pop
data16
add
in
ret
lcall
rcll
inc
cmp
xchg
add
jbe
mov
aam
add
xor
bts
sbb
pop
movsb
and
adc
pusha
xchg
lea
push
mov
fildll
or
leave
leave
ret
xor
mov
xor
cmp
mov
shrb
mov
mov
mov
inc
add
int3
or
dec
inc
iret
out
pop
mov
push
sti
das
lret
mov
cmpsl
mov
out
gs
mov
pop
dec
movsl
int
xlat
mov
and
lds
loope
hlt
and
cs
dec
inc
test
inc
shrb
call
lods
add
lods
push
pushf
cmc
scas
mov
jmp
mov
mov
mov
mov
es
mov
fiaddl
neg
xchg
xchg
xor
cs
sbb
push
adc
xor
scas
push
loopne
push
and
mov
fcomps
xchg
int3
leave
mov
xorl
scas
cmpsb
cmc
popfw
mov
cli
mov
jmp
xchg
cmpl
mov
loop
inc
orl
int
pop
mov
shl
sbbb
movb
loop
out
in
cmpsl
mov
jecxz
xorl
inc
or
mov
ljmp
xor
and
mov
jmp
inc
into
fists
sbb
xchg
gs
sbb
repnz
mov
aaa
popf
leave
pop
out
cs
in
lods
push
rcrl
arpl
mov
xchg
mov
xor
xchg
ds
rorb
ret
add
lahf
mov
in
iret
push
loopne
xor
dec
jb
jae
std
lods
cmpsl
pop
nop
pop
int
cltd
iret
lea
push
sub
push
testb
xchg
inc
insl
jge
pop
imul
xor
stos
iret
push
jge
cmpsl
mov
push
mov
lret
sahf
lret
inc
pop
and
repnz
lret
push
push
mov
aam
xor
in
aas
iret
or
pop
adc
test
jbe
or
sub
pop
inc
test
adc
mov
dec
push
testl
fs
sahf
loop
adc
int3
out
mov
cmp
lds
sub
ret
enter
pop
mov
xlat
inc
sub
insl
mov
adc
push
into
push
mov
or
lods
xlat
push
jmp
jbe
dec
movsl
mov
pop
cld
and
lret
enter
jle
data16
adc
xor
mov
repnz
push
mov
jle
rclb
loop
imul
mov
mov
or
mov
fadds
sahf
je
mov
std
add
push
repnz
pop
mov
mov
mov
imul
ror
cmp
sub
pop
sub
pusha
and
frstor
repz
sbbb
add
jmp
push
out
insb
jno
mov
push
push
std
or
rorb
mov
jns
nop
cmovns
or
aaa
sub
lea
dec
and
jle
xor
stc
hlt
pop
mov
jp
sahf
or
cwtl
iret
inc
mov
in
sti
andb
push
xor
lds
cmp
jae
js
cmp
xchg
push
inc
push
sbb
jae
jnp
popa
or
shrl
mov
cmp
fistps
lods
jmp
cmpl
pop
call
psubsw
out
loop
inc
mov
dec
in
adc
or
mov
jmp
dec
call
in
popa
test
dec
adc
push
repz
jb
pop
inc
cmpsb
imul
adc
jne
aad
insb
outsl
mov
mov
cltd
push
mov
dec
xor
cmp
ds
mov
and
in
lock
cmpsb
insb
xor
je
sti
pushf
mov
push
push
cmc
test
test
out
push
and
jle
imul
cltd
enter
outsb
push
add
ljmp
cmp
ljmp
mov
in
xor
push
adc
testb
outsb
imul
cltd
lods
inc
cmp
fsubp
andl
mov
mov
jns
push
push
add
inc
pop
aam
push
movsb
movsl
sahf
pop
ror
or
popa
jo
adc
add
fisubl
test
decb
inc
sub
push
out
testb
andl
push
jno
lods
cld
lods
enter
push
xor
inc
addr16
mov
insb
mov
sbb
test
push
sbb
lods
aad
mov
sub
movsl
mov
sahf
stos
xchg
cmpsb
add
push
push
pop
mov
sub
stos
pop
test
sub
push
xchg
loop
cmp
leave
adcl
push
or
popl
aad
and
leave
cmp
mov
or
stc
add
sti
mov
in
aam
mov
add
in
jle
enter
pop
in
pushf
pop
inc
dec
jnp
rcrl
mov
int
aam
les
push
push
fidivrl
ss
adc
sbb
mov
fistpll
mov
pop
aas
cmpb
lea
sbb
mov
mov
jge
or
or
mov
dec
int3
mov
mov
sarl
inc
ss
je
test
fadds
sub
bound
cmp
jmp
test
test
jbe
xchg
jno
ja
fcmovu
pop
pop
fs
push
push
lds
cmp
and
pop
ja
pop
mov
push
add
dec
in
xor
out
sbb
divl
test
outsl
nop
mov
push
pop
sub
dec
fs
insb
lea
pop
stos
adc
fnstenv
shll
inc
int3
insl
dec
jae
aaa
xchg
pop
adc
fwait
mov
sub
mov
mov
pop
hlt
gs
pop
cmp
lahf
mov
jg
mov
mov
aaa
jb
jp
cmp
arpl
or
fisttpll
cltd
outsl
jp
jl
adc
sahf
sti
icebp
jg
outsb
call
pop
arpl
jnp
aaa
repnz
pop
cmp
mov
into
adc
imulb
iret
push
adcb
loop
adcl
inc
jnp
sbb
xor
or
movnti
sbb
inc
xor
lods
lds
xor
jo
fidivl
jecxz
cmp
dec
out
in
cli
add
push
je
repnz
push
int3
xor
add
in
dec
mov
pop
jne
pusha
dec
push
out
and
out
daa
or
or
mov
fdivr
xchg
cmp
inc
je
pop
cmp
int3
and
sbb
mov
addr16
mov
ret
cmc
test
adc
lods
add
cwtl
or
mov
fistl
rorl
stos
jbe
popa
cmc
scas
data16
std
lock
cmp
nop
test
dec
adc
repnz
mov
lret
lea
mov
std
imul
stos
iret
dec
cmc
fistps
insb
lods
push
push
in
adc
or
mov
inc
rorb
int3
xchg
sub
pop
out
clc
mov
cltd
push
scas
and
lcall
pusha
sbb
mov
push
pushf
jecxz
int
dec
ds
mov
push
push
scas
mov
fisubl
cmp
mov
je
mov
push
and
inc
mov
cmp
scas
bnd
lock
stc
mov
ficoml
mov
cs
sub
push
xor
ficompl
repnz
push
insl
mov
cmpsb
fstpl
inc
adc
cmp
mov
inc
fs
fwait
pusha
pop
decl
mov
fistpl
fildl
mov
jb
push
mov
lahf
cld
mov
xchg
in
call
push
stos
aaa
movsl
cmp
orl
mov
dec
cs
hlt
aad
iret
pop
pop
fisttpll
xor
and
fmul
dec
sub
sbb
sub
mov
xchg
xchg
mov
cmp
addb
jge
insb
sti
neg
pop
mov
mov
lcall
test
pop
das
hlt
in
int3
fldl
jecxz
dec
xchg
ljmp
cmpsb
jle
enter
ljmp
pop
inc
mov
std
aad
sub
mov
stc
and
xchg
xlat
mov
add
jne
dec
cli
imul
push
sub
lock
in
add
les
pop
sub
in
mov
fwait
bound
add
push
cmp
or
cli
lea
call
repz
and
jge
and
dec
pushf
pop
push
in
pop
mov
pop
aam
pop
orl
imul
fisttps
lock
rcrb
xchg
dec
mov
jp
cmpsl
dec
fists
mov
hlt
xchg
cld
adc
imul
cmpb
or
xchg
mov
jbe
mov
jnp
ja
into
inc
nop
dec
mov
inc
mov
mov
mov
jp
pop
add
jmp
fwait
sub
mov
outsb
movsb
stos
dec
fsubrl
test
mov
repnz
out
jp
fcmovu
xchg
dec
inc
movsl
xchg
mov
inc
or
mov
cmc
dec
iret
jmp
push
shll
xchg
js
popf
adc
and
nop
call
push
push
pop
mov
idivl
test
dec
mov
pop
push
mov
out
inc
mov
cmpsb
in
sbb
pop
popl
imul
mov
push
std
test
mov
iret
mov
pop
xor
adc
push
fmuls
sbb
stos
sub
inc
cmpsb
dec
dec
int
dec
push
inc
adc
push
fcmovne
jecxz
inc
mov
aam
lods
popa
xlat
js
jbe
jmp
dec
js
push
fs
or
lea
adcl
push
mov
aas
dec
dec
or
push
fildll
adc
sbb
and
ja
pop
add
iret
push
stos
imul
out
dec
outsb
repnz
inc
lcall
or
in
and
push
ljmp
jae
jg
ficomps
in
add
popa
arpl
mov
mov
leave
or
aam
xchg
push
mov
test
pusha
and
ljmp
loop
loope
push
clc
pusha
push
cmp
enter
rcrb
lret
pop
rcrl
dec
adc
and
mov
push
fmuls
adc
loop
inc
cmp
mov
cmp
fisttps
dec
lret
xor
xchg
mov
daa
cltd
fidivrl
cmp
and
pop
and
push
aas
andl
push
shlb
icebp
shlb
push
jo
mov
pop
loop
stos
ror
cli
stos
adc
mov
xor
xchg
rcrb
ror
ret
add
sbb
hlt
test
hlt
movsl
push
adc
xor
gs
jo
push
call
sti
jne
cmp
inc
mov
and
dec
cmc
sub
jl
jg
fnsave
fs
ds
fimuls
jnp
jns
scas
dec
jecxz
pop
shll
push
pop
stc
push
adc
sub
shrl
add
cmp
mov
add
mov
dec
sarb
test
inc
repnz
mov
popf
inc
add
jg
inc
xchg
dec
movl
cmp
mov
mov
ja
fs
fadd
sbb
cli
out
adcb
dec
lock
pusha
and
adc
shll
cmc
ljmp
dec
ds
inc
sarb
aam
cli
pop
pop
dec
mov
in
sub
dec
mov
xchg
dec
xor
std
dec
fidivrs
inc
jno
xchg
push
sbb
out
fistpl
xchg
fcomi
jns
arpl
out
xlat
pop
push
mov
loopne
js
lcall
std
xchg
xchg
sarb
sbb
shlb
cli
lock
mov
cmp
loopne
or
loop
gs
bound
push
iret
add
add
cwtl
cmpsb
add
fstpl
jno
xor
mov
shlb
push
ret
call
aad
mov
or
lea
cmpsl
adc
popf
std
out
js
cmp
shrb
jg
or
mov
movsb
movsb
ss
add
mov
mov
or
pop
and
inc
loop
ret
repnz
inc
sub
popa
stc
pop
and
sbb
lret
mov
movsb
cld
or
mov
adc
stc
xchg
sub
mov
mov
xchg
dec
cmp
xchg
jg
fadds
xchg
sbb
lret
mov
pop
mov
pop
testl
lods
movsb
jb
pop
mov
xchg
testb
decl
xlat
stos
loope
xorl
mov
cmp
iret
gs
lods
mov
movl
mov
xor
cmpsb
jle
pop
dec
mov
push
cmpsl
push
outsl
hlt
or
xchg
dec
scas
cmc
jmp
jmp
out
mov
repz
xchg
inc
ret
mov
sub
pop
in
pop
into
or
lret
outsb
and
std
cmpl
jo
loopne
rcll
sub
lds
movsl
mov
dec
es
cli
cmpsb
mov
rolb
lea
outsl
lret
pop
shrb
js
mov
lea
das
xor
sub
jmp
jo
sbb
mov
mov
and
call
sub
inc
jecxz
jg
sbb
rcrb
dec
xor
je
ret
dec
jecxz
and
das
push
push
repnz
jne
out
test
cltd
in
inc
jecxz
mov
or
add
mov
nop
scas
mov
sbb
mov
call
xchg
out
loopne
cli
mov
lods
cmp
mov
out
repnz
sub
je
mov
mov
les
ffree
xor
and
ffreep
inc
mull
std
roll
movsl
in
je
fisubrs
rcrl
je
xor
je
outsl
gs
stos
int
lret
sbb
inc
push
and
pop
sub
push
rolb
or
mov
fs
fxch
mov
push
mov
inc
fnstenv
bound
jmp
fdiv
mov
aas
add
push
cmpl
xchg
inc
loopne
adc
test
jae
shlb
lods
adc
add
mov
std
sub
aas
jg
add
stos
rorb
sarb
adc
mov
fs
arpl
ss
push
xchg
mov
xor
inc
fnstenv
sbb
fwait
add
fwait
outsl
add
cmpsb
test
lods
xor
sarl
add
cmpsb
mov
xor
or
dec
ror
or
mov
inc
neg
xlat
mov
pop
lahf
jge
jnp
lahf
jecxz
in
bound
jmp
sub
mov
inc
daa
adc
insb
jmp
adc
xchg
jecxz
or
insb
pop
popa
mov
dec
adc
add
int3
xchg
cmpsl
leave
jecxz
mov
imul
xchg
je
clc
pop
cmp
and
push
mov
mov
loopne
xchg
cmpb
or
xchg
adc
roll
shll
mov
inc
rol
cmp
push
nop
xor
sub
sub
je
dec
in
nop
subb
sub
dec
bound
call
shll
inc
rcll
cmp
loopne
lods
pop
adc
xor
adc
iret
insl
push
mov
lods
lock
adc
sbb
and
xchg
int
jbe
push
inc
sub
adc
aaa
stos
fisubl
enter
sbbb
add
dec
adc
or
stc
movsb
in
in
fwait
or
mov
adc
mov
jge
jns
pop
cmp
or
stc
ror
repnz
push
cmp
lods
fcom
inc
mov
insb
ljmp
mov
daa
xchg
pop
sbb
pop
jp
add
in
out
or
pop
xor
add
popa
int3
and
ljmp
stc
xchg
cmpl
inc
mov
cmp
cltd
cmpl
inc
xchg
sahf
pushf
cmp
jl
inc
add
push
loopne
pop
or
xor
vcmpss
stos
pop
mov
mov
and
cmpsl
imul
lds
mov
jns
dec
leave
xchg
ljmp
jmp
and
or
sbb
movsb
lret
dec
cmpsl
cmpsb
sub
fidivl
mov
test
gs
popf
je
xchg
pop
call
shlb
imul
sub
movsb
pop
cmp
out
fstpl
movsb
mov
gs
jecxz
sub
lea
cmp
fimuls
sbb
jmp
push
pop
pop
mov
xor
gs
dec
xchg
in
sbb
jmp
movsb
mov
mov
jbe
imul
sub
mov
cmp
out
push
insb
call
shlb
sbb
jb
cli
dec
xchg
in
cmc
popf
je
in
cmp
out
jae
ja
sub
dec
dec
sahf
inc
mov
movsb
sti
cli
dec
cmp
sarb
cmp
scas
cmp
jns
pop
pop
and
jb
mov
jne
mov
lcall
mov
aaa
jg
aam
cs
fstpt
push
pop
clc
mov
shlb
nop
push
jle
add
imull
jbe
fstps
pop
lcall
add
mov
iret
rcrb
je
jmp
movsb
inc
jmp
jne
push
fwait
xchg
test
xor
mov
adc
cmp
stos
dec
adc
cmp
call
and
sbb
ror
mov
outsb
adc
mov
lods
push
or
cmpsb
aas
imul
gs
pop
jno
sbb
cmp
imul
sbb
aaa
jge
xor
mov
xlat
sbb
fwait
push
imul
xor
cmp
call
inc
stos
pushf
mov
cmpsl
repz
int3
mov
scas
into
scas
cmp
sbb
call
loopne
imul
cld
adc
and
sub
ret
pushf
add
repnz
add
and
icebp
jne
outsb
inc
cwtl
jb
sbb
in
lret
lret
sbb
xor
loope
into
jmp
sbb
dec
xor
out
xchg
mov
push
aad
call
stos
adc
xchg
jns
loope
cmp
dec
mov
lahf
jecxz
push
inc
lcall
and
and
cmpsb
and
cltd
or
push
or
xchg
push
ss
sub
push
xchg
pop
dec
xchg
cmp
pop
pushf
test
loope
sarb
stos
cmp
inc
push
inc
inc
call
jno
add
cmp
fcomps
push
jl
inc
fstl
js
push
xchg
subl
sbb
push
inc
lret
mov
mov
adc
cmp
les
mov
dec
insb
shlb
outsb
jle
and
xchg
iret
ljmp
push
loop
hlt
mov
out
adc
jno
pop
cmp
jae
jb
ja
popf
add
lods
pop
rorl
push
mov
push
call
loop
movsb
out
jp
mov
and
orb
shlb
and
movsb
push
lahf
shrl
jmp
ljmp
loopne
mov
int3
xchg
dec
mov
jns
int3
adc
inc
mov
fst
mov
cmpsl
stc
imulb
pop
data16
dec
sahf
ds
idivl
insl
sub
xor
xorb
lods
imul
das
shrl
xchg
daa
dec
neg
add
out
push
rcrb
stos
dec
pop
ljmp
xor
dec
jne
adc
insb
pusha
jg
lds
xchg
popa
int3
clts
andl
jne
or
mov
push
dec
ret
addr16
and
std
shrb
fs
add
mov
mov
imul
xchg
xor
scas
and
mov
pop
lds
js
popf
lahf
push
je
inc
mov
pop
dec
pop
movsl
fisttpll
rol
lret
in
and
test
push
sub
cmpsb
test
test
cmp
je
out
jbe
dec
stos
jp
iret
loope
or
notb
in
icebp
out
test
lods
fwait
sub
fcmovnb
sahf
loop
push
in
int
jecxz
push
xlat
negl
loope
dec
jae
jmp
stc
mov
xchg
subb
add
add
pop
mov
addr16
push
jg
jne
cmp
push
adc
mov
pop
aas
leave
push
ja
into
popf
cs
ror
cmp
add
filds
fdivp
movsb
and
lds
loop
xchg
fs
mov
push
and
add
fcomps
push
xchg
xor
adc
arpl
ret
dec
lds
and
pop
insl
movsl
adc
mov
insb
inc
sub
test
inc
mov
pop
mov
cmpl
push
nop
nop
ret
lock
push
pop
pop
push
jmp
fcmovnb
pop
stos
push
sbb
xor
pop
xor
pop
test
push
push
mov
out
aas
lods
in
out
and
sbb
or
adc
lods
or
mov
or
inc
fisubrs
stos
add
pop
adc
pop
adc
adc
or
dec
fs
fwait
push
jecxz
out
and
sbb
scas
jg
mov
ljmp
push
sbb
rcrl
pop
sti
jno
lods
mov
pop
pop
sbb
lea
jecxz
movsl
xor
pop
aad
enter
pushf
pop
mov
in
mov
jmp
out
pusha
imul
and
jmp
jmp
out
cmc
fistl
les
out
mov
in
adc
or
sbb
inc
xchg
push
dec
nopl
in
in
arpl
ss
gs
lret
mov
inc
jle
cmp
dec
dec
lods
rcr
into
mov
fadds
sti
mov
sub
pop
xchg
cwtl
mov
out
loop
cmpsb
push
ja
jle
shll
sti
cwtl
into
out
mov
or
rcll
lock
push
push
pop
in
jge
or
out
push
aad
xor
inc
sti
sbb
xchg
sbb
iret
cmp
push
xchg
inc
sbb
sub
mov
pushf
std
jns
testb
jl
or
shll
clc
xchg
cmp
cld
pop
jge
cmp
outsl
inc
sbb
lock
add
xlat
loopne
int3
test
std
insb
shll
icebp
bound
ret
or
push
xchg
mov
push
lock
inc
xchg
ja
call
and
mov
cmpb
xor
subb
jg
fmull
iret
fcoms
jl
shl
aas
hlt
hlt
negl
mov
mov
sub
adc
xor
jl
jl
jle
mov
sbb
push
loopne
mov
inc
popa
insl
subl
lret
mov
xor
daa
rclb
jo
jecxz
jp
dec
pop
xchg
pop
jp
push
aad
sbb
incl
subb
testb
mov
pop
fildll
aas
test
test
xor
lods
in
gs
cmp
and
pop
xchg
mov
xchg
xlat
inc
cmp
fstps
jnp
mov
pop
sbb
jb
and
push
push
and
pusha
stos
das
sbb
jge
mov
out
jnp
cltd
test
jae
ficoms
cld
icebp
ljmp
xchg
incl
sbb
sbb
or
cmp
jae
movsl
ret
inc
add
dec
and
sbb
and
fs
popf
xchg
or
xchg
mov
adc
mov
mov
ljmp
pop
mov
insl
daa
imul
movsl
mov
and
jmp
lcall
sbb
jae
mov
test
jg
imul
adc
pop
push
cmpsl
ret
lret
repz
add
xchg
lds
jecxz
repz
cmp
ret
cmp
ret
decb
or
test
lcall
cwtl
into
icebp
ljmp
imul
imul
fiadds
dec
ljmp
lods
aad
xchg
xchg
sbb
adc
aas
push
mov
jns
movsl
push
repz
pop
fs
clc
dec
pop
lods
jecxz
mov
dec
jmp
mov
in
xor
iret
imul
xor
jb
xchg
out
inc
pop
cmp
lcall
les
aad
adc
lahf
mov
add
sti
cmp
fildll
xor
jmp
rolb
lods
aam
fucomip
push
inc
sub
dec
xchg
sub
mov
push
push
xlat
sbb
mov
push
js
mov
sti
cli
movsl
adc
arpl
ds
xor
lea
and
sbb
rclb
push
fcmovnu
cwtl
push
add
js
cli
xor
or
push
push
jecxz
aad
push
add
mov
movsb
outsb
mov
xor
push
sbb
pusha
iret
xor
lods
mov
pop
sbb
lcall
add
push
add
sbb
sbbl
cmpl
inc
adc
call
icebp
stos
xor
sub
add
sub
sub
inc
cwtl
mov
and
movsb
add
xchg
negl
xchg
and
rcll
imul
sub
mov
mov
cmp
cwtl
push
or
adc
rcrl
bound
or
je
and
sub
adc
adc
or
sub
or
fstpl
xor
nop
push
add
sub
out
pop
xor
sub
mov
cmpsl
mov
dec
aam
add
add
popf
lods
jo
popa
out
pop
ret
mov
cmpsb
mov
cmp
iret
dec
inc
lods
repz
dec
xchg
outsb
mull
xor
lahf
fidivl
rol
enter
out
incb
loope
in
sti
mov
leave
dec
pop
je
dec
dec
iret
inc
push
daa
out
test
test
inc
xlat
int3
push
sbb
mov
test
or
adc
lret
pop
cmpl
sbb
cmp
loop
and
jo
cmp
fdivrp
out
pop
dec
or
jbe
sub
mov
push
scas
flds
xlat
xchg
jg
pop
lret
jmp
je
movb
std
sbb
movsb
mov
mov
das
shrb
mov
popa
lds
jne
icebp
test
jge
orb
out
or
adcb
mov
repnz
test
sub
std
fwait
cmp
stos
xchg
lods
in
iret
rclb
xorb
decl
call
ljmp
std
inc
lret
cli
jmp
pop
cmp
pop
mov
pop
dec
inc
lcall
out
push
test
inc
xor
movsl
lret
in
cmpsb
icebp
lahf
sbb
into
movaps
lods
sti
dec
movsl
fdivrs
in
std
jb
sbb
jmp
xchg
sbb
jo
lret
push
mov
cmp
pop
test
mov
sbb
and
mov
jle
loopne
out
nop
and
ljmp
daa
ljmp
xchg
out
push
cs
ret
add
add
mov
lds
arpl
cmovae
loopne
sub
or
mov
subps
mov
push
mov
xor
rolb
cmpsl
adc
rol
inc
cmp
sub
push
cmpsl
cmp
bound
xlat
fsubl
pop
jl
inc
test
out
sub
or
loopne
xchg
sbb
jo
mov
popf
xchg
jnp
mov
adcl
adc
rol
xchg
ja
out
imul
push
or
mov
xlat
jle
push
inc
ret
add
in
orl
mov
cs
movb
pop
rcr
mov
and
dec
popa
mov
orl
mov
daa
sub
insl
inc
push
push
pop
leave
out
xor
ficomps
sub
test
out
mov
or
outsb
push
shlb
mov
cmpl
int3
or
sbb
jmp
mov
cmp
lock
add
cmp
out
enter
lret
jmp
out
xorl
std
scas
icebp
outsb
add
mov
and
push
test
and
fmull
sbb
inc
jp
fistpl
lock
adc
cmpsb
add
shlb
jge
add
mov
xor
mov
jmp
sbb
jns
xor
pop
and
es
adc
jnp
dec
and
cmpsb
xor
in
dec
sub
in
dec
xor
in
dec
aas
fsubl
lret
mov
sub
iret
or
mov
rorl
xchg
mov
mulb
dec
xchg
sbb
add
add
and
xchg
in
xlat
lea
adcl
mov
sbb
shll
mov
xor
in
push
xchg
ja
ret
xchg
loopne
push
movsl
jl
add
jge
stos
adc
cmc
int
inc
mov
test
pushf
mov
ja
psubsw
leave
lds
ja,pn
mov
xchg
addr16
jecxz
push
lahf
push
out
mov
cmp
dec
pop
or
repz
jl
js
ds
das
xchg
iret
sub
sahf
pop
in
sub
je
insb
ss
xor
jmp
mov
mov
inc
cs
mov
int
xor
and
pop
mov
and
in
ss
jb
fisubrs
cmpb
jbe
xor
xchg
cwtl
push
sbb
push
jp
in
mov
data16
ja
xchg
outsl
inc
in
and
add
fs
lahf
jne
loop
jg
or
mov
lock
aas
inc
push
movb
out
popa
pop
xchg
adcb
mov
dec
and
dec
mov
roll
aas
mov
rcll
jecxz
dec
cmc
jle
dec
fstpl
dec
int
fcoml
sub
mov
cwtl
decb
cmpl
cmp
or
mov
dec
mov
test
mov
lods
hlt
lock
cmp
int3
adc
mov
jbe
clc
repz
cld
lock
imul
imul
into
jp
imul
outsb
xor
fcompl
shrl
out
movsb
aam
out
push
cmpsb
mov
mov
pop
fwait
jle
cmpsl
pop
data16
pop
push
cli
xchg
xor
outsl
aaa
imul
inc
ss
or
sbb
push
test
rorl
gs
sahf
in
movsb
cwtl
icebp
dec
pushf
in
and
outsb
out
adc
sarb
std
outsb
xlat
jno
pushf
shl
cld
jl
push
dec
or
movsl
sar
mov
jnp
push
sahf
shrb
cmp
mov
inc
jp
bound
pop
mov
mov
paddusb
loopne
pusha
jmp
jge
adc
mov
adc
mov
sub
push
sub
repz
shrl
call
cwtl
mov
mov
les
arpl
rcr
mov
xchg
push
jae
add
jge
sar
dec
outsb
shll
in
cmp
fiadds
dec
bound
aad
inc
mov
jp
jle
out
out
xlat
lods
pushf
out
mov
addr16
push
push
out
adc
adc
cli
subl
inc
outsl
mov
xchg
adc
xor
stos
inc
xchg
xor
cmpsb
push
repz
push
xchg
mov
cli
cmp
pop
jl
add
inc
dec
xchg
adc
stc
pusha
jp
movsb
ds
xchg
xchg
les
push
pop
and
movsl
dec
jnp
dec
lret
dec
pop
mov
xchg
pop
dec
rcrl
cs
adc
push
push
inc
jle
and
sahf
lea
psllq
arpl
and
icebp
adc
add
adc
jmp
hlt
cmp
sub
and
sbb
mov
pop
push
mov
repz
lahf
xor
xlat
mov
arpl
sti
or
adc
lock
sbb
ds
vmread
and
into
addr16
pop
divl
addr16
and
sub
sarl
cmpsl
jmp
int3
rclb
mov
adc
fnstcw
push
xchg
pop
fidivrl
push
push
roll
std
jmp
mov
adc
fwait
loopne
push
adc
pop
inc
jae
out
fcoml
roll
jo
bound
or
xor
lock
cmpsb
dec
in
and
movsl
mul
adc
out
fsubrl
jae
pop
adc
adc
cmp
push
mov
fdivl
popa
sbb
add
or
rclb
adc
sub
push
xor
aam
inc
and
cld
into
insl
cmpsb
mov
idivb
sbb
imul
sbb
push
les
mov
jg
pop
aaa
insb
ds
fsubr
iret
fucomi
ja
push
lds
out
stos
xor
popf
sub
pop
push
bnd
sub
mov
loop
sub
pop
ret
adc
adc
mov
xor
mov
push
mov
dec
fists
scas
bound
cli
loop
jbe
mov
inc
daa
in
mov
xchg
rcll
mov
mov
pop
scas
push
push
or
ja
repz
cmp
sbb
dec
and
insb
out
sbbl
icebp
outsb
mov
outsb
push
mov
mov
pop
pop
pop
pop
scas
jae
mov
pop
mov
js
pop
out
mov
imul
inc
ds
cmp
cmp
cltd
aaa
fs
jnp
pop
rcr
pushf
dec
imul
sub
loop
mov
mov
and
fildl
lcall
push
pusha
lcall
nop
xchg
test
andb
mov
stc
loop
xor
push
psllw
je
test
lcall
fstpt
rorl
insb
sahf
lahf
cs
mov
push
lcall
negb
out
lods
ljmp
pop
xchg
mov
pop
cmc
out
pop
or
in
push
into
shll
jns
xchg
shll
sub
dec
aad
ds
cmc
idivl
pop
out
sub
inc
stos
mov
push
enter
je
div
mov
js
aad
jae
adc
and
dec
or
aad
cmp
aad
fnstsw
mov
lahf
hlt
shll
dec
rcrl
xchg
test
call
idivl
loope
stos
les
cmpsl
jp
aaa
hlt
jb
inc
mov
sbb
ja
out
xchg
mov
push
out
dec
enter
pushf
mov
cmp
je
outsb
enter
cmp
out
das
cmpsl
jb
std
mov
cmpsl
ljmp
xlat
das
cmpsb
ljmp
aam
dec
cmc
cld
push
mov
push
lds
lock
mov
sti
and
push
jle
idiv
test
pop
push
repnz
shr
and
xor
fcmove
sub
mov
into
and
testb
dec
lahf
stos
mov
dec
inc
arpl
je
inc
inc
data16
dec
jb
mov
rorb
dec
push
outsl
jae
adc
add
je
sub
mov
or
je
push
jge
mov
sub
lret
adc
mov
rorb
loopne
repnz
jnp
dec
pop
aad
aas
pop
popa
sbb
addb
out
iret
stos
scas
ja
sub
rclb
pop
dec
jne
xor
mov
mov
or
out
pop
push
outsl
ds
xchg
cli
outsb
push
mov
mov
rorb
mov
pop
inc
daa
je
or
mov
xchg
cmp
sub
inc
ss
pop
cmp
fs
loop
xlat
outsl
sbb
insl
shrl
xchg
rcll
cmp
rolb
xor
inc
stc
jmp
jg
cmp
xchg
stc
mov
sahf
and
mov
push
inc
mov
xchg
jb
jnp
jp
jl
out
mov
lahf
mov
sbb
and
adc
js
mov
or
mov
push
xlat
incl
sbb
dec
xchg
fistl
dec
mov
pop
xor
add
fsubs
pop
enter
je
mov
pop
mov
cmp
cld
rorb
lods
shlb
xor
rorb
test
das
js
push
daa
dec
lret
fwait
lea
fidivrs
stos
mov
int
out
and
dec
fsts
frstor
adc
dec
or
dec
movsb
mov
push
test
xchg
mov
pop
or
repnz
adc
andl
imul
ss
test
insb
jmp
fisubs
pop
jp
popf
mov
out
xchg
fsubrp
int3
adc
mov
xchg
aad
sbb
dec
cmp
out
int3
jo
cs
mov
stos
or
jmp
js
fisttps
mov
lcall
fcomp
mov
pop
adc
cli
push
xorl
cmp
cld
add
or
or
sbb
xchg
sbb
sbb
adc
int3
rolb
pop
insb
daa
and
xor
dec
dec
or
mov
cltd
inc
outsl
inc
or
test
mov
xchg
pop
insb
inc
sbb
jnp
clc
mov
test
xor
bound
pop
cmpsb
pop
fwait
push
cmpsl
arpl
shlb
sub
xor
cmpsb
cmpl
shl
sbb
loopnew
push
pop
jmp
sbb
gs
fcomp
sbb
mov
cmp
adc
adc
jmp
std
push
inc
push
xchg
in
dec
mov
mov
fwait
ret
std
dec
push
icebp
adc
rcl
mov
dec
mov
mov
mov
add
nop
ss
cmpsb
pop
aaa
lret
and
dec
cmp
mov
xor
and
fnsave
add
sbb
popa
sbb
mov
outsl
adc
push
mov
jp
jbe
adcl
sar
mov
fisubrs
inc
out
add
dec
fildl
dec
int3
inc
mov
pop
xchg
je
add
mov
jg
outsl
inc
insl
insl
lret
ja
loop
xor
jl
ljmp
xor
icebp
xlat
xor
ljmp
adc
int
push
jecxz
out
cmp
dec
xor
test
mov
cmp
repnz
jno
call
pop
push
clc
pop
ljmp
pop
pop
out
jbe
push
push
sbb
xor
dec
rolb
jae
test
subb
push
push
js
mov
imul
xor
jmp
fisttpl
clc
xlat
pop
sub
dec
push
cmp
fildl
rol
lcall
inc
daa
lods
jmp
icebp
mov
cld
pusha
stos
push
push
mov
xor
sub
loop
fwait
adcl
add
pop
lods
pop
xor
xchg
lret
jg
sbb
push
in
sbb
mov
jbe
mov
add
mov
stc
jb
mov
shll
mov
xor
decl
lods
orb
mov
fistl
or
test
fwait
push
push
pop
fcomip
pop
lock
pop
sbb
push
daa
jmp
add
jl
jb
add
mov
xchg
xor
push
add
push
mov
std
ja
or
pop
and
cltd
iret
xchg
cltd
push
imul
loopne
adcb
aad
push
fbld
iret
lahf
out
das
sbb
pop
mov
inc
cld
cld
xor
pop
jbe
sti
repz
stc
popf
imul
push
jmp
loop
shrl
sbb
stos
xchg
mov
cwtl
lds
cmc
inc
inc
shrl
xchg
jecxz
sub
push
push
push
fs
lods
arpl
inc
lret
lods
test
cmp
and
xor
mov
lret
push
movsl
bound
adc
lret
jbe
std
lea
mov
lcall
leave
or
notb
adc
add
push
pop
dec
jg
fisubs
outsl
dec
jg
mov
mov
jmp
cli
cmp
iret
or
add
movsb
xchg
jbe
out
sub
pop
in
imul
enter
outsb
and
aam
cmp
push
dec
fnstcw
imul
dec
cmp
xor
es
sub
adc
out
push
cld
popa
adc
insl
shll
es
es
ds
jns
xor
je
lds
xor
pop
jno
push
push
jg
movsb
push
xchg
cmc
test
pop
loope
xchg
js
dec
std
into
adc
in
adc
mov
adc
loope
inc
lds
inc
lods
fisttpll
cmpsb
jl
push
lret
push
cmp
out
jg
test
lahf
inc
mov
sarb
or
mov
outsl
jge
jae
aas
outsl
mov
mov
mov
inc
dec
js
enter
js
or
push
sub
call
out
repz
push
pop
movsl
jecxz
js
hlt
mov
int3
cmc
aaa
jo
int
loope
dec
or
icebp
js
lret
jl
rorb
push
lock
ret
cltd
push
xchg
cmp
std
adc
mov
inc
pop
sub
jecxz
add
jo
sub
push
pop
sbb
sbb
inc
inc
jle
sbb
test
pop
pop
aas
jle
jge
ja
add
mov
push
call
cld
xchg
pop
incl
sahf
nop
mov
daa
inc
test
shlb
negb
inc
xlat
jo
add
sarb
shl
sbb
sub
movsb
dec
adcl
call
cmp
inc
mov
mov
scas
cmpb
dec
clc
fwait
cmpsb
jg
push
mov
xchg
inc
add
fstpt
pop
lret
aas
pop
xor
push
decb
aas
bound
or
pop
xor
sub
add
dec
xlat
push
loopne
jmp
pop
movsb
fdivrs
or
sbb
retw
rcll
xchg
mov
push
pop
or
dec
enter
jp
ja
and
mov
jl
clc
jmp
out
cmp
xor
cmc
pop
cmp
lea
cmp
xchg
add
cli
gs
inc
hlt
loop
mov
jbe
mov
mov
pop
inc
pop
std
xchg
rorb
nop
pop
enter
lea
push
cmpsb
arpl
sbb
dec
jp
loop
and
out
xchg
cld
dec
mov
shl
lahf
cs
outsl
in
push
pop
and
xlat
jno
mov
jno
orl
xchg
out
mov
jmp
fcoms
rcrb
iret
dec
pop
out
out
in
test
or
dec
stos
fiadds
scas
lds
and
stc
pop
shrl
lcall
out
push
sbb
jge
push
mov
mov
or
sub
out
ret
jnp
push
and
xchg
in
and
aas
ficompl
roll
insl
push
mov
fwait
lock
push
pop
aam
pop
or
adc
push
cmp
mov
ret
xchg
outsb
xchg
mov
push
rolb
pop
pop
out
pop
in
iret
jnp
out
jl
mov
fwait
dec
add
addr16
cmp
rolb
inc
or
out
mov
adc
mov
call
pushf
cmc
or
push
popf
mov
push
data16
in
xor
xor
and
lahf
test
jne
pop
inc
inc
stos
mov
inc
mov
or
sbb
andl
rol
aaa
xorl
or
es
push
shr
jnp
push
jl
imul
dec
lcall
insb
lret
and
icebp
fcompl
and
out
adc
jnp
leave
sub
sahf
mov
xor
add
xlat
or
loop
pop
mov
iret
mov
dec
push
or
popf
jg
jmp
test
fnsave
push
sbb
sbb
mov
ljmp
lds
imul
icebp
fdivrl
cmp
jecxz
dec
push
jecxz
lock
add
add
push
ds
into
ja
cmp
or
jl
mov
push
xchg
cmp
and
xor
jbe
jmp
lahf
sub
pop
and
fwait
pop
mov
push
mov
add
scas
push
mov
je
ret
lahf
and
dec
rcrb
ss
mov
sub
dec
ret
lahf
incb
sbb
xchg
mov
rcrl
clc
ss
gs
pop
loopne
ljmp
data16
xchg
into
aas
mov
and
imul
sarl
pop
lret
outsl
adc
pop
jo
mov
mov
sbb
cmpsl
cwtl
shlb
pop
in
shl
psubb
sbb
popa
mov
dec
sub
ss
sbb
xor
sbb
mov
lret
ja
nop
mov
inc
jno
inc
adc
pop
lret
lods
ficompl
mov
movb
push
jo
pop
mov
sbb
push
or
gs
fildl
test
shrb
xchg
arpl
ja
push
adc
enter
das
rorb
adc
pop
test
mov
push
pop
mov
add
jmp
sbb
sbb
mov
lret
ss
xchg
jae
mov
test
iret
hlt
pop
mov
rcll
add
aam
gs
repnz
dec
push
aad
sti
push
xor
xor
out
into
push
rclb
add
pop
outsb
repnz
xchg
mov
dec
rorb
push
mov
in
and
ja
or
jne
addr16
and
jno
sbb
and
loopne
jne
xlat
out
and
mov
xchg
cltd
or
lret
enter
jne
xor
pop
loope
mov
and
xor
mov
stos
mov
sub
repnz
dec
mov
push
scas
lods
push
mov
mov
pop
jmp
mov
rorl
mov
es
iret
push
sub
push
out
icebp
insb
flds
xchg
fnstcw
dec
fcoms
mov
cmpsl
jp
xor
dec
pop
pop
loopne
lods
fnsave
cltd
pop
add
mov
sub
imul
imul
inc
mov
xlat
adc
mov
cmp
lcall
dec
jge
add
popa
pop
xchg
gs
mov
leave
add
sbb
aam
testl
adc
add
lar
aaa
sbb
int3
pop
inc
hlt
sbb
aam
out
add
sub
lcall
jns
dec
leave
loope
dec
push
repnz
dec
pop
jnp
xor
inc
jp
lret
outsb
sub
fld
add
dec
icebp
sbb
push
sbb
pop
leave
adc
mov
shl
push
push
adc
xchg
xchg
adcb
xchg
pop
enter
popf
mov
aam
xor
std
test
lret
testl
das
inc
jo
xchg
mov
call
enter
jp
movsb
push
inc
or
scas
mov
imul
mov
mov
fwait
mov
daa
insl
mov
ljmp
call
jbe
pop
sub
movsb
scas
repz
ljmp
pop
or
test
scas
loopne
jbe
pop
mov
adc
push
pop
scas
call
sub
daa
pop
xchg
xchg
sub
xor
xor
adc
or
orl
cmpsl
js
fsubs
dec
nop
dec
add
lcall
dec
js
dec
call
data16
xor
ja
add
mov
cmpsb
pop
loop
mov
fcmovnbe
scas
sti
leave
in
add
cs
jnp
mov
fwait
push
addr16
in
push
mov
in
hlt
dec
negl
jp
cld
add
int
and
les
cmp
stos
cli
adcb
js
inc
push
adc
adc
ficoms
js
xor
sbb
outsl
rcrb
cmp
jmp
xor
lahf
lret
lock
fdiv
cmp
sub
enter
mov
xchg
mov
js
mov
sub
test
xor
aad
mov
inc
ljmp
cs
jp
xchg
lcall
incb
sbb
std
popf
push
testb
scas
aam
mov
rcrl
and
mov
mov
test
cwtl
mov
mov
loope
jo
rcrb
dec
pop
addr16
jge
cmp
sbb
pop
outsl
push
mov
imul
sbb
xor
mov
cmp
jno
dec
jmp
daa
lret
sbb
and
sbb
and
jnp
inc
add
mov
into
and
inc
jno
xchg
stos
aaa
or
cmp
jno
dec
int3
xor
inc
dec
jno
cltd
or
jno
loopne
je
int
scas
xchg
push
stc
jmp
mov
cwtl
and
xchg
jp
mov
out
xlat
add
ror
incl
push
aam
jp
mov
mov
jb
jo
push
out
inc
adcl
fcom
mov
xorb
xchg
mov
push
xchg
outsb
mov
jp
loope
sbb
jge
push
jecxz
dec
lds
push
sbb
pop
add
dec
rorb
pop
dec
clc
mov
add
dec
cmp
lret
add
cmpsb
dec
movsl
js
outsl
pop
mov
sub
push
mov
xor
jo
lock
push
sub
mov
call
mov
popf
leave
rorb
cmpsb
ss
in
int
fldln2
xchg
out
xchg
fwait
adc
es
ss
xor
bound
or
xrelease
dec
cmpsb
pop
rcr
shll
in
mov
subl
bound
xchg
cs
sub
dec
out
fidivrs
push
in
decl
jle
test
push
sbb
jge
repnz
pop
xchg
add
outsb
loop
pop
jmp
hlt
or
pop
pop
test
lods
cmp
stc
pop
mov
fcmove
mov
dec
inc
fwait
jns
insb
loop
sbb
pop
mov
xchg
adc
pop
pop
insl
fmuls
mov
fwait
fs
pop
iret
push
arpl
xor
pop
lahf
test
loope,pt
jnp
out
jl
hlt
shlb
push
test
sbb
inc
pop
or
mov
rolb
shll
sbb
mov
dec
pop
push
mov
jl
mov
xlat
jmp
das
pop
jl
mov
mov
or
or
pop
or
cmp
mov
repz
xor
jl
loope
xlat
arpl
js
aaa
push
push
dec
loopne
sbb
subb
mov
push
push
xor
fucomip
and
xchg
mov
leave
or
jns
es
cmp
mov
or
subl
shrb
outsl
int
pop
mov
sbbb
jcxz
imul
sar
pop
stc
pop
sbb
outsb
sbb
sarl
cs
mov
jl
fdivrl
test
divb
dec
jno
dec
sbb
call
add
mov
repz
aas
fimull
mov
jbe
jbe
inc
arpl
not
cs
stos
fstpl
mov
mov
pandn
fwait
das
call
push
push
push
aam
push
shlb
sbb
push
mov
sti
mov
in
or
daa
mov
aam
into
fcomps
std
decl
push
aam
dec
xchg
and
xlat
inc
call
test
shlb
out
popa
movsl
rolb
mov
out
jg
push
mov
adcl
loop
cli
rcll
add
ret
adc
xorb
jl
outsl
movsb
sbb
push
aad
clc
mov
push
pop
mov
int
addr16
jge
out
add
jb
sbb
jge
shll
xlat
mov
arpl
fs
lcall
lock
mov
mov
mov
test
jnp
or
jne
rcr
xorb
arpl
push
xchg
inc
jnp
dec
dec
fdivs
push
mov
imul
sub
aas
or
jecxz
shr
sub
pop
sub
and
push
jg
lock
xlat
pop
pop
xchg
lock
cld
lea
aas
jns
out
cmp
repnz
lods
ds
insb
mov
lahf
inc
jg
out
mov
mov
adc
rcrl
pop
mov
inc
lock
shr
rolb
sbb
out
xchg
cmp
pop
rcl
mov
out
pop
hlt
nop
push
mull
ror
adc
xchg
in
pop
push
lock
pop
adc
test
std
cmp
mov
mov
xor
in
addr16
test
cmovno
out
mov
sbb
scas
fstps
pop
sub
adc
leave
pop
aam
addl
iret
mov
push
mov
jae
and
mov
jae
std
dec
notl
ljmp
fbld
aam
fistl
repnz
fsubrs
push
aam
negl
mov
adc
add
inc
ss
addr16
imul
xor
mov
pop
add
imul
mov
movsb
mov
shr
data16
cmp
insb
ds
xlat
inc
sahf
ds
sub
es
js
popa
mov
aam
xor
ja
mov
xchg
push
sbb
fiaddl
push
xchg
rcrl
sbb
orl
std
mov
cmp
push
mov
dec
orl
mov
movsb
cld
jle
in
pusha
pop
int3
fldcw
sbb
or
sub
mov
push
jle
xchg
inc
insb
jl
call
scas
push
dec
mov
loope
mov
dec
adc
mov
pop
lods
push
shl
ret
in
popf
cmp
mov
outsb
scas
pop
mov
fbld
rcrb
jmp
lods
mov
stc
cmp
divl
clc
cmp
mov
push
iret
sti
mov
aas
push
cmp
in
addr16
sbb
ds
pusha
insl
rcrl
lahf
popa
sub
sbb
push
lahf
addr16
sbb
pop
iret
mov
xor
cmp
jmp
in
cmc
jns
iret
cmc
xor
fs
hlt
jp
mov
jb
test
lcall
sub
mov
loopne
mov
int
jecxz
pop
mov
xor
mov
shll
mov
cmpsb
cmpsl
out
add
stos
orb
rol
loop
push
push
sti
lock
xor
and
aad
pop
pop
cltd
es
jmp
je
out
push
jno
lea
ds
push
xor
loopne
cmp
sbb
jle
xchg
out
in
into
cwtl
sti
xor
jno
imul
inc
aaa
adc
jne
outsb
pushf
push
popl
out
popa
movsl
adc
or
test
push
pop
popf
push
mov
xor
rorb
stos
fdivs
pop
lock
pop
mov
scas
adc
pusha
mov
mov
sub
imul
adc
lds
loope
mov
sbb
ljmp
pop
ja
or
jo
and
mov
shrl
arpl
sub
adc
sub
loope
das
sbb
push
inc
fdivl
pop
and
lret
into
add
sub
xchg
mov
push
aas
push
ja
jb
pusha
push
mov
cmp
adc
nop
adc
jno
lcall
repnz
mov
shlb
ja
pop
jl
divb
and
jg
mov
jmp
push
mov
fwait
outsb
shr
and
popa
aad
clc
push
or
popa
push
sub
mov
cli
test
ficoml
scas
xor
lds
aad
sarl
lret
xchg
out
mov
lods
or
shrb
arpl
xchg
repz
mov
orl
mov
mov
gs
push
xchg
mov
orb
push
inc
jo
jl
movsb
lods
jl
frstor
xchg
mov
mov
popf
xchg
mov
fwait
mov
push
xchg
jbe
xor
cmp
mov
dec
movsl
dec
in
jb
test
fcompl
sbb
shrb
and
mov
shufps
jecxz
and
sub
cltd
movsl
or
clc
pop
jnp
xchg
and
push
push
je
outsl
dec
fwait
lcall
mov
sbb
mov
pop
scas
adc
adc
test
divl
insb
call
addr16
mov
xor
outsb
loopne
push
test
mov
pop
outsl
ret
push
push
and
pop
std
js
adc
inc
pop
test
sbb
ljmp
stos
imul
push
pop
add
fs
stc
or
ja
mov
dec
mov
jl
xchg
sub
push
inc
xor
stos
sbb
xor
push
xor
mov
dec
xor
push
jb
xlat
aam
out
sbb
add
mov
mov
lret
ljmp
xchg
jmp
sub
aas
paddb
rcl
dec
test
out
mov
outsl
outsb
cltd
hlt
out
ja
mov
mov
mov
push
movsl
xchg
jl
fs
test
addb
inc
dec
push
das
sbbb
pop
lret
jae
mov
les
outsl
push
fucomi
int3
ss
cli
dec
jge
pop
in
nop
mov
adc
jge
mov
jge
data16
ret
ss
dec
mov
jmp
xor
jmp
loop
mov
arpl
cltd
shlb
sub
inc
adc
sub
jbe
push
testb
leave
or
int3
push
fwait
xorl
imul
mov
mov
inc
out
add
bound
push
push
sub
ss
inc
mov
out
jno
and
repnz
xchg
lea
push
lods
icebp
xor
popa
mov
hlt
xchg
sub
imul
sti
dec
mov
movsb
insb
jmp
push
pushf
sub
subb
pop
loop
xchg
and
ja
sub
ja
or
dec
gs
scas
lea
push
in
push
sbb
xchg
fmull
mov
testl
jns
mov
divl
sub
push
nop
mov
xchg
cmpsl
outsb
adc
xor
push
mov
add
xchg
xchg
jo
mov
mov
add
movsl
sbb
ss
pop
push
stos
fimull
cld
or
pop
xchg
xchg
movsl
mov
mov
nop
push
push
sub
enter
in
or
xor
fsubr
pop
aad
add
add
pop
iret
xor
cmp
inc
xchg
xchg
sub
shl
jo
adc
test
sar
or
jnp
mov
xchg
sbb
aas
xor
add
sub
pusha
or
push
pop
xchg
sbb
lret
and
mov
xchg
push
orl
jg
sbb
bts
and
mov
pushf
mov
fcoml
sbb
aaa
sti
pop
hlt
lock
cmp
fisttpl
call
dec
mov
movsb
sub
and
movl
jg
cmp
push
jmp
das
fbld
cld
std
int3
popa
cld
jmp
mov
scas
insl
mov
mov
fisubl
mov
push
push
mov
pop
and
sub
dec
scas
fs
mov
jl
sarb
and
je
jecxz
jbe
cmc
movsb
xor
arpl
xor
test
xchg
in
mov
cmp
inc
repz
sbb
mov
dec
shl
or
push
pop
pop
loope
and
out
jno
ds
push
fistpll
sub
mov
fsubl
xchg
in
inc
add
cltd
push
aas
xor
cmpsl
or
pushl
sbb
sahf
int
inc
lock
inc
sub
out
adc
mov
mov
cli
pop
dec
jg
loopne
clc
dec
cltd
xchg
push
lds
mov
mov
outsb
mov
or
repnz
lds
ja
add
lret
or
cmp
xchg
sbb
cltd
mov
dec
lods
clc
loope
gs
pop
fwait
adc
inc
inc
dec
ss
mov
call
xchg
adcb
mov
dec
mov
lds
push
or
insl
push
es
adc
xchg
inc
insb
or
xchg
into
mov
adc
sub
nop
cmc
or
jmp
lock
or
clc
out
jg
xor
gs
adc
lret
ret
cwtl
xchg
or
loopne
mov
cmp
mov
mov
aam
pop
xchg
out
sbb
mov
push
in
gs
jg
call
insb
push
dec
popa
ljmp
lahf
pop
loope
xchg
pop
test
pop
add
add
inc
fstp
push
push
data16
iretw
xor
fs
and
lock
mov
dec
add
and
je
or
cmpsb
out
cltd
outsl
push
stos
repnz
shlb
inc
mov
and
leave
or
cltd
call
lods
pop
shrb
sub
jle
es
push
and
mov
xor
iret
iret
mov
mov
lds
pop
sub
jl
das
xchg
hlt
testl
loopne
dec
insl
mov
add
lret
push
je
insl
add
push
jmp
fadds
pop
and
dec
or
mov
incl
int
lret
push
fmull
pusha
cmc
xorb
sbb
sub
xlat
divl
jecxz
mov
mov
lds
mov
xchg
cli
stos
lret
daa
inc
push
clc
inc
xchg
icebp
pop
sub
in
aaa
stc
jmp
cmp
xor
fwait
aas
jg,pn
push
fiaddl
fcomi
cmpsl
sti
iret
xlat
adc
iret
enter
test
mov
jno
ret
jp
jnp
sub
inc
inc
adcl
mov
roll
dec
push
mov
adc
mov
iret
push
mov
mov
mov
in
out
lcall
out
or
ss
sti
sub
push
dec
jge
das
stos
adc
add
mov
ret
mov
es
dec
outsb
es
jo
cmp
filds
jmp
xlat
pop
dec
lret
sbb
out
lea
loope
cmpsl
lds
iret
orl
sub
les
xchg
fstl
adc
xchg
jg
xor
jp
fnstenv
jo
cmp
or
daa
add
and
xchg
cmp
push
or
das
pop
hlt
sbb
dec
inc
lods
not
mov
mov
es
push
inc
cmp
test
xchg
es
popa
cs
pop
nop
or
rorb
xor
data16
out
aaa
xor
mov
cmp
rcl
push
sub
aas
mov
dec
sbb
add
mov
clc
loop
mov
sbb
jno
adc
jae
jmp
fsubl
inc
mov
add
add
adc
loope
mov
scas
subl
xchg
test
hlt
xorl
lods
cmpsb
cli
mov
pop
xchg
xchg
pop
push
pop
cmp
aad
rcr
mov
out
mov
mov
dec
lret
inc
jg
lock
adc
mov
jae
mov
rorl
shll
push
push
movsl
mov
movsl
test
popa
sahf
out
mov
aam
pop
xor
insl
dec
fstp
insb
push
inc
fistl
or
repz
xor
fcoms
and
or
andb
inc
cmp
insb
push
push
mov
test
into
bnd
addr16
inc
jb
jae
rcll
ds
cli
insb
in
push
aam
and
cmp
push
or
popf
dec
fidivrs
xchg
cli
es
jge
dec
es
xor
sub
fxch
jo
dec
mov
xor
ljmp
mov
les
xchg
loope
aam
or
ds
in
jmp
or
inc
xorl
add
sub
fcomi
push
sub
push
fcmove
xor
cmp
dec
inc
push
sub
pop
mov
mov
lcall
test
lret
out
pop
pusha
lds
ds
stos
movsb
jge
dec
sti
shlb
adc
insb
push
movsb
push
sub
rorb
subl
dec
dec
fistps
pop
mov
popa
inc
stc
nop
mov
jecxz
lods
leave
aad
ds
pusha
bound
jns
sbb
int
cmp
stc
shrl
testb
mov
fdivl
test
mov
mov
cltd
pop
fxch
gs
scas
mov
pop
mov
dec
pop
inc
push
call
sub
fidivrl
pop
sbb
fs
lcall
mov
mov
stos
bound
mov
or
push
xor
lahf
test
loope
jmp
pop
and
xor
daa
pop
sub
xor
popf
pop
mov
jge
movsl
pop
push
fsubs
dec
push
mov
ret
mov
cmp
lds
pop
mov
inc
imul
cmp
cmp
jne
cli
dec
or
lock
nop
xor
mov
adc
les
in
inc
xorb
or
aad
cld
cwtl
pop
jno
mov
aas
dec
pop
adc
int3
or
mov
push
cmpsl
mov
cmp
cmp
std
daa
and
clc
jno
add
ss
jae
fisttpl
push
xchg
sub
mov
xchg
hlt
test
ds
or
outsb
sbb
in
cwtl
icebp
cmp
icebp
addr16
mov
pop
sub
mov
mov
pop
push
insl
add
jo
and
jnp
adc
fs
insb
push
daa
xchg
scas
insb
mov
insb
mov
or
push
add
xchg
sbb
gs
mov
inc
xchg
xor
sub
xor
movsb
enter
mov
ret
loopne
mov
fucomp
iret
lcall
add
out
xor
in
jo
outsl
sub
mov
xor
fs
pop
add
xchg
dec
out
pop
inc
aaa
lods
sbb
cmp
jle
jmp
jbe
dec
adc
add
mov
xor
testl
adc
lret
dec
and
stos
loope
sbb
and
xor
adc
dec
je
iret
addr16
adc
mov
js
ret
sarl
inc
fldcw
pop
ljmp
nop
pop
loopne,pt
mov
mov
pop
aas
adc
negb
mov
add
mov
xchg
mov
adc
inc
pop
mov
inc
xchg
xorl
add
jae
or
sbb
clc
lret
sub
or
cmpsl
shlb
xchg
je
icebp
pop
mov
lods
sar
out
nop
mov
xlat
test
inc
outsl
dec
add
xchg
in
sbb
mov
adc
and
dec
fnstcw
ret
lock
fstl
jno
out
popf
movsl
add
es
sub
out
sarb
lods
sbb
or
rolb
inc
push
fsts
lret
dec
jmp
ljmp
jg
cmpsl
cld
sub
dec
dec
jmp
ja
jecxz
xchg
or
loope
movsl
lods
dec
cld
or
jg
and
cmp
jp
sbb
sbb
stos
fadds
mov
std
xchg
js
cwtl
gs
pop
mov
push
lea
mov
jns
or
nop
adc
dec
outsl
xor
adc
cmovne
je
and
bound
mov
mov
pop
lret
push
sbb
sub
insb
aaa
sub
cmp
test
in
push
xor
int
lret
hlt
sbb
icebp
cmp
sub
adcl
je
inc
cmpsl
jno
xchg
fsubs
cmp
aaa
add
jb
out
sbb
jl
xchg
cld
and
repnz
jb
faddp
mov
loopne
fistps
sbb
dec
icebp
pusha
inc
punpckhdq
std
inc
dec
stc
add
les
dec
sub
test
iret
pop
pop
mov
and
inc
int3
and
inc
inc
jne
frstor
sbb
ljmp
shll
cwtl
or
and
push
mov
imul
lods
and
aas
stc
inc
dec
pop
adc
mov
xchg
inc
jmp
insb
sub
mov
add
or
out
repnz
rorl
lock
lcall
push
jle
repnz
cmp
xchg
mov
inc
and
out
insb
push
iret
iret
rorb
cmpsb
in
jns
dec
mov
xchg
and
inc
loop
cmp
movsb
dec
cmp
sbb
adc
sub
pop
mov
imul
rcl
mov
jnp
ret
loop
pop
inc
fistpl
pushf
push
mov
adc
inc
add
mov
jno
xorb
cmp
je
gs
iret
jmp
data16
or
imul
cs
sbb
adc
xor
mov
jl
cmp
hlt
loop
shll
dec
push
cmp
sub
mov
jae
das
insl
add
shl
shl
movsb
cltd
mov
pusha
ss
inc
and
push
insl
add
xchg
mov
sti
mov
decl
and
out
ss
stos
dec
data16
movsb
insb
outsl
mov
mov
xor
sar
hlt
mov
pop
lahf
arpl
mov
rorl
sub
jg
sbb
jno
xor
cltd
test
bound
pop
sub
dec
ffreep
incl
jle
loope
xor
sub
mov
jp
xor
js
fxch
out
out
shll
aad
add
es
mov
jmp
int3
out
push
mov
xchg
stos
rclb
jbe
and
aam
sbb
in
test
rorl
cwtl
add
int3
bound
mov
dec
orl
in
dec
fstp
jno
out
lcall
xor
jb
push
mov
jg
add
mov
cmp
ds
jbe
inc
pop
mov
pop
pop
jae
sarl
cmp
cmp
push
rclb
xor
rcr
mov
inc
jp
pop
pop
jbe
faddl
lds
mov
ret
adc
xchg
cmp
imulb
or
sbb
xor
adc
hlt
add
lock
fs
daa
sbb
jecxz
inc
sbb
lock
in
pusha
mov
and
pop
push
lret
imull
mov
sub
push
outsb
test
je
mulb
push
cli
mov
adcl
mov
xchg
repnz
mov
or
adc
xchg
pop
push
pushf
xchg
mov
mov
xchg
bswap
push
pop
in
ror
dec
cmp
sbb
dec
ss
sbb
loop
leave
push
das
pop
push
roll
mov
je
ror
sbbb
jl
jne
mov
jmp
mov
ja
loope
aaa
orb
ja
fdivr
test
pop
outsl
dec
fildll
movsb
in
fdiv
bound
inc
roll
xchg
push
ds
out
ja
sub
cs
jecxz
in
sbb
js
insb
in
pop
xchg
sbb
shll
aad
int
mov
lds
mov
add
push
xchg
pop
icebp
inc
jns
xchg
jmp
dec
lret
dec
loopne
popf
stc
cmpsb
jle
mov
add
into
into
notb
mov
sub
mov
out
stc
pop
nop
stos
or
mov
push
xchg
xchg
in
ja
xor
inc
jb
in
fadd
ficoms
sbb
bound
adc
push
add
stc
jbe
inc
inc
mov
mov
data16
enter
jp
xchg
or
add
enter
mov
dec
int3
into
and
out
test
jmp
test
incl
in
mov
outsl
pushf
inc
pop
das
hlt
xlat
adc
call
lds
jp
or
push
mov
imul
xor
push
outsl
xchg
fisubl
push
xor
ret
or
jp
or
out
jnp
push
sub
out
mov
test
shlb
ret
out
mov
xor
push
aam
repnz
test
xor
sub
push
xchg
icebp
aam
mov
jnp
sub
rolb
movsb
cs
cmp
push
dec
je
sbb
subb
sti
xchg
negb
adc
sbb
call
stos
je
aad
and
lock
loope
addr16
pop
test
jne
dec
imul
fs
fadds
in
fwait
adc
cli
xor
mov
adc
inc
jae
insb
mov
jns
popa
inc
sub
andl
sbb
cmp
xor
pushw
jno
daa
sbb
sbb
enter
aam
adc
shll
popa
idivl
xchg
cmpl
je
popf
inc
pop
cmpsb
int
imul
lods
lret
push
sub
fisttpll
inc
iret
push
jmp
aas
sbb
lds
subl
add
dec
pop
in
xor
test
test
ja
xlat
xchg
add
cld
sub
imul
and
adc
in
lock
add
stos
cltd
stos
pop
jb
clc
lret
xchg
adc
jle
movsb
fsubs
xchg
mov
dec
sahf
test
dec
test
fbld
enter
lea
mov
push
rorb
fildll
jno
mov
sbb
shlb
lcall
lcall
divl
sbb
sbb
add
lret
jl
js
lds
jp
dec
mov
cmp
pop
sbb
mov
outsl
lods
cs
dec
rcll
aas
xor
adc
jae
dec
push
mov
leave
adc
dec
or
cmp
fsubrs
ret
popf
lret
inc
loopne
rcrl
mov
push
cwtl
push
pushf
fxch
pushf
adc
je
adc
cmpsl
add
xchg
insl
inc
js
pop
mov
xchg
xchg
ds
sub
cmp
jne
mov
mov
xchg
sub
pop
and
pop
pop
pop
cld
dec
cmpsl
xor
mov
sub
pop
cmp
gs
sbb
xor
sbb
xlat
push
mov
sub
xchg
mov
mov
dec
cmpsl
aam
pop
fldcw
inc
movsl
into
fisttps
or
test
inc
pop
mov
imul
add
jnp
stc
pushf
mov
adc
fwait
pop
inc
mov
sbb
and
call
loope
or
loopne,pn
int
xor
inc
cmp
sti
insb
push
sbb
push
cmpsb
inc
sbb
push
inc
jmp
lea
mov
fcomip
inc
inc
jmp
push
xlat
stos
test
cmp
cmp
loopne
fwait
or
xchg
dec
cwtl
sub
pop
cmc
jl
fwait
and
jmp
or
std
pop
aam
dec
push
jecxz
cmp
jnp
pop
lret
out
test
sbb
clc
iret
push
cmp
xchg
mov
jo
dec
clc
imulb
sub
mov
fistps
cmpsl
pop
push
mov
dec
push
sub
lret
or
std
mov
out
and
lret
xlat
mov
sub
lret
mov
jne
xchg
or
add
inc
aaa
sbb
add
call
outsl
rolb
cmpsb
dec
ud1
cmp
movsl
test
int
pop
sbb
shl
lds
sub
inc
and
int
inc
cwtd
cmp
pop
aaa
mov
jmp
and
push
jp
out
in
test
je
je,pn
lea
mov
stc
ficoms
pop
shl
xchg
cs
push
ret
adc
loopne
and
mov
das
and
mov
loopne
shlb
rolb
nop
fwait
ja
popf
cmp
xchg
mov
xchg
jge
sbb
ja
daa
call
sbb
xchg
cmovns
or
pop
clc
jno
mov
arpl
mov
push
adcl
mov
in
jmp
pushf
xor
jne
push
sub
loop
mov
movsl
or
cmpsl
xchg
xchg
and
sbb
xorl
mov
xchg
jnp
cmp
mov
jns
aad
je
xchg
add
adc
repnz
movl
mov
inc
jb
lods
cld
or
and
xchg
bound
cmp
jns
int
lods
jmp
mov
dec
adc
push
stos
push
sbb
pusha
shll
sbb
insl
jae
lret
lods
clc
stc
sahf
or
xor
jmp
in
cmp
mov
adc
fdivrl
cmp
cmp
mov
out
push
xor
leave
xor
jecxz
or
pop
add
push
mov
mov
dec
testl
jge
fdivl
std
dec
int3
pusha
cmpsb
enter
inc
test
dec
movsbl
dec
pushf
mov
dec
cmp
sbb
jbe
test
mov
sub
insb
gs
jnp
push
cltd
arpl
mov
ss
pop
cltd
jecxz
mov
jnp
cmp
xor
cmpsb
inc
add
in
leave
dec
xor
sub
adc
ret
mov
lcall
aam
scas
int3
dec
hlt
sahf
add
sahf
sbb
jb
xor
in
jo,pn
pop
adcb
dec
lds
push
mov
test
mov
lret
pop
add
jb
into
push
dec
sbb
xchg
sbb
js
es
add
dec
jge
sbb
fcmovnu
or
xchg
imul
xor
inc
push
push
in
outsl
add
add
mov
scas
dec
jecxz
aam
pop
notb
xchg
out
add
cmp
add
sub
je
pop
cli
xor
inc
lret
mov
mov
mov
sar
pop
xchg
mov
addr16
xchg
mov
adc
dec
ds
inc
or
shrb
adc
inc
xor
adc
stos
dec
mov
xchg
or
test
in
add
jl
popf
insl
jbe
aaa
push
loop
push
sahf
cmp
dec
cld
nop
insb
xorb
xadd
cs
stc
jnp
ret
add
sbb
and
push
lcall
aam
mov
mov
add
jecxz
leave
inc
les
out
add
pushl
out
mov
jns
stc
mov
addr16
sbb
in
push
or
adc
gs
insl
dec
or
sub
rclb
xlat
repz
mov
dec
push
popf
pop
push
sbb
pop
mov
cmp
shlb
push
push
gs
lcall
rorl
imulb
mov
ja
pusha
fs
dec
lcall
push
clc
mov
movsb
mov
or
mov
out
and
aas
mov
negl
adc
gs
nop
out
pop
stc
lret
push
or
sbb
sub
lahf
jl
cmp
andb
aam
dec
cmp
ljmp
scas
jne
xchg
mov
push
and
fld1
push
ja
push
insb
xchg
pusha
pop
dec
popa
cltd
repz
mov
or
aam
pop
into
push
xchg
sbb
lods
ljmp
int3
dec
dec
add
lds
fbstp
cmpsl
in
jo
mov
pop
sbb
aaa
orl
cmp
stc
pop
lret
scas
cmp
cmp
xchg
sbb
jno
wrmsr
sub
sbbb
in
mov
pop
outsb
mov
mov
mov
nop
xor
jae
inc
shlb
sahf
jmp
cld
cmp
fwait
dec
sub
pop
jb
mov
xor
dec
adc
cmp
sub
int
xchg
dec
into
aaa
jmp
dec
jmp
and
add
pop
sub
inc
movsl
leave
jge
mov
jo
and
cmp
lds
sbb
ror
add
sub
clc
xor
cmp
nop
xor
push
cmp
cmpsl
jl
xchg
dec
jne
fdivp
jge
mov
and
add
jecxz
test
push
repz
aas
push
gs
pop
jmp
or
jno
add
inc
rcrl
mov
dec
loop
roll
or
xor
mov
mov
repnz
inc
mov
adc
ja
add
les
xchg
pop
shll
sub
or
lods
jae
fildl
mov
sub
dec
pop
add
xorl
inc
ds
jb
sbb
xor
in
sbb
lods
std
xchg
es
idivl
in
stc
xor
pop
xchg
popa
xchg
fistpll
dec
or
scas
or
adc
dec
fidivrl
push
cmp
ds
scas
sub
ret
and
or
fiadds
dec
add
mov
xor
daa
xchg
rorl
mov
nop
jg
inc
bound
loop
mov
movsl
in
inc
sbbl
adc
lock
add
mov
mov
mov
cmpsb
popa
bound
dec
stos
fadds
stos
in
add
xchg
pop
stc
int
nop
in
adc
pop
icebp
push
mov
lock
imul
in
add
add
loopne
dec
pop
and
mov
nop
sbb
loopne
push
loopne
in
in
sub
xchg
inc
add
add
mov
inc
fnsave
pop
mov
sahf
push
push
out
jno
and
or
mov
sbb
ja
push
call
jp
xchg
dec
decb
out
inc
lret
push
into
dec
add
push
add
mov
ljmp
fiadds
repz
xlat
cmp
sbb
and
cmp
lds
xchg
orb
ja
lea
addr16
dec
lock
fs
jae
mov
mov
aad
inc
jae
add
inc
decl
ja
xchg
lcall
cmp
shll
adcl
nop
adc
test
xchg
int3
inc
or
xlat
sbb
and
js
mov
push
lods
push
jmp
rorb
cwtl
andb
mov
pusha
mov
adc
mov
adc
stc
out
into
cltd
jae
fisubs
sti
fisubrl
jne
xor
dec
mov
rcrb
push
pop
inc
pop
inc
ret
daa
call
mov
pop
dec
rcl
xchg
test
not
in
add
imul
or
cmc
xor
mov
in
and
xor
and
lods
shlb
dec
movsl
mov
stc
and
sti
xor
sbb
xchg
movsl
mov
dec
outsl
cld
add
fwait
push
fcoml
mov
lcall
mov
jle
xor
or
jne
arpl
pop
sub
fwait
and
ljmp
push
insl
sbb
inc
xchg
jge
or
mov
andb
add
xchg
imull
mov
pop
dec
jo
addr16
adc
mov
cmc
dec
lods
push
jns
xchg
push
mov
sbb
cmp
sub
incl
je
mov
jecxz
cmpsb
lahf
in
or
mov
xchg
or
inc
cmc
and
xchg
jl
scas
aas
std
cwtl
cmpsl
int3
lds
call
mov
cvtdq2ps
stc
pop
sarl
lods
adc
fisttpl
mov
push
xchg
inc
cmp
mov
sbb
jno
jno
cltd
mov
adc
cli
pop
push
leave
jg
xor
push
mov
ja
leave
sbb
mov
arpl
fcmovnbe
xchg
and
jnp
and
pop
sub
and
mov
mov
jmp
adc
mov
cmp
lahf
clc
push
aam
inc
push
or
push
pop
std
pop
push
xor
jno
pop
lahf
pop
daa
aad
xchg
cli
cmc
les
leave
cli
fcompl
push
push
xor
scas
decb
loopne
cmp
inc
out
rcrb
adc
sarb
sbb
mov
daa
cmp
les
sti
xchg
push
popa
test
cmpsb
dec
mov
shl
sbb
mov
push
out
bound
jle
outsl
cmp
sets
dec
and
xchg
es
in
lcall
jecxz
mov
add
mov
sbb
leavew
pop
aaa
jo
rorl
and
mov
or
int
pusha
mov
je
xor
jl
and
scas
pusha
pop
inc
adc
aad
aad
je
leave
and
daa
push
outsb
or
pop
in
fnstcw
lahf
or
pop
aas
ret
jo
xor
adc
loopne
scas
dec
jno
sbb
ret
xchg
stc
adc
movsb
mov
ss
fsubrl
mov
lret
out
xchg
pop
loop
mov
jne
mov
mov
pop
movsb
push
bsr
cli
arpl
ljmp
ds
push
hlt
call
adc
push
ss
loop
imul
xor
arpl
adc
movsb
std
mov
cwtl
mov
push
repz
in
lods
or
divb
ss
pop
xchg
shll
rcl
pop
cmpsl
test
sarb
inc
popf
into
loop
dec
mov
rclb
sub
and
in
pop
scas
mov
fcmovnbe
pop
sti
in
scas
sahf
sar
call
jg
lock
daa
outsb
aas
push
aas
mov
js
lcall
imul
add
in
jnp
pop
cmc
data16
cmpsb
sbb
jmp
test
shll
mov
shlb
addr16
ja
inc
xor
jo
stos
repz
sbb
leave
flds
inc
sub
cwtl
mov
stos
pop
and
imul
aam
sub
mov
repz
dec
mov
mov
dec
and
pop
jnp
mov
insb
ds
and
cmpsb
imul
gs
sub
add
jo
js
dec
sub
inc
insb
ret
call
cmp
mov
dec
mov
jbe
jne
xchg
cld
ljmp
loope
xchg
and
nop
mov
call
dec
sub
jo
cmpsl
ljmp
mov
call
mov
ds
inc
dec
sub
iret
mov
mov
mov
mov
push
inc
daa
inc
and
sub
adc
push
mov
pop
add
inc
sbb
cmpsl
adcb
ds
sub
fstpt
xor
mov
mov
icebp
mov
push
jnp
aad
mov
mov
cmp
adc
imul
jnp
xor
out
mov
and
cmc
pusha
fs
das
push
aas
repnz
shll
mov
push
mov
rcrl
jp
insl
fcmovu
imul
scas
ud1
into
rcrb
sub
mov
mov
fisubs
std
stc
imul
ret
lock
pop
sbb
push
jp
or
add
adc
loop
movsb
mov
mov
add
mov
add
xor
popa
xchg
sbb
loop
lret
cli
adc
or
inc
inc
jle
out
mov
cli
mov
ficompl
sbb
xor
mov
aam
int
inc
into
fsubr
rcll
mov
cmc
ret
daa
mov
test
mov
ds
ds
push
pop
mov
inc
cmpsl
ret
add
xchg
inc
adc
dec
test
jg
mov
imul
dec
push
or
lret
lahf
test
inc
xlat
adc
xchg
enter
mov
add
add
rorl
jne
jmp
loope
sti
ss
je
ljmp
xlat
mov
scas
jp
lcall
mov
dec
icebp
lock
mov
pop
mov
insb
push
inc
loop
int
loop
es
iret
push
cmp
dec
cmovl
xchg
addr16
aam
fistpl
jg
lret
jae
pop
lods
popa
mov
sahf
jecxz
out
fwait
sbb
outsl
push
and
xor
push
cmp
push
scas
rol
or
call
int
int3
pusha
scas
rcrl
aaa
pop
jnp
or
mov
jp
sbb
mov
sbb
inc
mov
jae
pop
outsl
aad
js
inc
call
cwtl
test
jb
mov
adc
test
fyl2x
repz
add
xor
mov
mov
shl
sbb
or
in
xor
frstor
nop
xor
pop
ret
shlb
and
sahf
xchg
jno
mov
imul
jb
push
mov
cmpsl
scas
lds
adc
ja
and
dec
pop
mov
cltd
mov
or
cmp
pop
push
mov
test
outsb
es
ret
addl
shrb
add
cmp
mov
xorb
scas
dec
pop
and
push
rcll
vpshuflw
jae
insl
fmull
ret
add
pop
daa
adc
push
out
lods
push
rcl
sub
jp
dec
imull
mov
xchg
and
mov
pop
or
pop
cmp
mov
mov
stc
dec
mov
dec
push
cmp
lds
pop
pop
insb
es
divb
adc
loop
sbb
les
stc
iret
inc
pop
dec
ds
jno
sbb
sub
ret
pop
inc
ret
std
cmpsl
jae
imul
repz
lahf
ds
jle
inc
mov
mov
dec
hlt
mov
pop
and
aad
jb
sub
cmp
loope
lcall
and
xor
ret
mov
mov
sbb
adc
aam
xchg
cwtl
add
dec
pop
jmp
incb
adc
dec
sarb
gs
pushf
xor
gs
add
sbb
cld
mov
push
push
in
inc
push
and
loop
popf
cmp
data16
fcmovne
mov
push
push
popa
pop
iret
scas
push
jb
shlb
lods
sbb
insl
jge
adc
fcoml
in
mov
cmpsb
clc
cli
push
aam
call
lcall
dec
mov
xor
das
movsl
lcall
aam
aas
jecxz
imul
jecxz
or
jecxz
clc
into
add
repz
sub
dec
adc
jnp
loope
mov
fisttpl
mov
mov
movsb
adc
mov
cmpb
lods
or
xchg
inc
push
pop
testl
xor
mov
inc
stos
in
inc
sbb
dec
fcompl
sub
das
mov
ss
cmp
and
arpl
jp
ja
icebp
or
dec
sbb
mov
xchg
jne
lea
iret
push
sub
xor
cmc
sub
xchg
movsb
cmp
stc
sti
mov
pop
xchg
xchg
dec
mov
pushl
int
loopne
stc
push
ret
stc
jno
push
mov
call
popf
inc
mov
jns
ficoms
enter
ljmp
xor
jno
mov
cwtl
push
sbb
js
movsb
movsb
test
fcmovne
and
jmp
cltd
fucomip
mov
pop
jb
or
mov
xor
cmpsl
pop
or
cwtl
mov
mov
popf
mov
les
mov
loope
mov
push
outsl
into
aaa
mov
gs
inc
aas
or
jb
dec
sub
outsb
or
sub
xor
pop
push
dec
lods
cs
int
popf
jp,pt
movsb
imul
lahf
lret
or
sbb
add
popf
dec
jge
xchg
xchg
lea
cwtl
ds
jns
int3
xchg
or
inc
sbb
or
sti
dec
push
xor
shll
sub
mov
inc
cmc
jne
icebp
in
xchg
stos
sub
jne
sub
insb
pop
faddl
aaa
lret
dec
mov
insl
inc
movb
mov
pusha
add
push
xor
rol
dec
js
pop
insb
and
loopne
add
out
xor
pusha
sub
test
loopne
push
test
dec
sbb
in
stc
fsubrl
mov
inc
sub
aas
popf
xchg
aas
movsl
lds
je
scas
mov
pop
add
push
push
inc
or
aam
pop
data16
jns
mov
push
pop
cs
xor
scas
and
mov
aad
scas
and
mov
orl
lcall
test
data16
pop
lods
or
push
jne
push
push
xchg
cld
bound
popa
push
test
jbe
mov
jl
pop
aam
dec
fildl
jb
and
pop
jl
xchg
xorl
movsb
lcall
jg
into
add
add
fcmove
xlat
stos
inc
into
mov
insl
and
data16
or
push
and
sub
jns
lods
jmp
jae
ss
sub
ss
lock
xor
jg
ds
mov
jp
jecxz
dec
pop
js
sub
ds
mov
sbb
or
pop
push
insb
push
jg
out
addr16
inc
push
in
xor
dec
push
sbb
js,pt
int3
js
loopne
or
push
mov
adcl
mov
sub
push
ljmp
pop
mov
push
in
pop
mov
out
mov
cmp
cmpl
mov
pushw
pop
inc
inc
popa
fsubrp
inc
popa
mov
stos
inc
cmpl
aas
mov
aam
sbb
inc
jmp
lea
cmp
lds
pop
push
hlt
xchg
sub
scas
add
mov
lock
fcomps
sub
subl
jp
cmp
into
push
mov
xchg
outsb
jg
adc
call
inc
or
daa
insb
sbb
popa
pop
incl
xchg
mov
jno
out
das
ja
adc
jmp
mov
loop
out
flds
fsubrs
jns
ljmp
mov
sub
cwtl
lea
jcxz
int3
or
loopne
aaa
cmp
sbb
insb
outsl
and
or
fimull
jl
sbb
in
lock
std
xchg
mov
ja
cmp
stos
mov
popf
fsubl
fucomip
adc
xchg
test
add
jecxz
jle
or
js
or
stos
hlt
mov
push
aad
mov
aaa
cli
repz
ficomps
adc
inc
mov
sub
ljmp
clc
dec
cmp
test
mov
cmp
inc
jno
ds
sbb
dec
sbb
inc
cmp
mov
mov
bswap
mov
push
jmp
mov
adc
insl
cmp
in
ljmp
in
mov
sub
mov
or
xor
call
and
aad
adc
add
cltd
stos
out
hlt
jno
ja
cmc
push
jnp
loop
jge
enter
cmpsb
push
sub
sub
pop
stc
add
mov
in
jno
sbb
xor
jne
or
outsl
mov
sahf
mov
insb
adc
pop
mov
ret
jae
push
mov
rorb
inc
test
pop
cltd
mov
pop
push
inc
stos
lock
lods
ret
push
sbb
cs
aad
pushl
imul
cmpsl
mov
aas
and
push
cmc
les
das
sbb
into
iret
imul
into
dec
xor
dec
fldt
imul
mov
push
sahf
xchg
xor
iret
aaa
scas
xor
jg
lret
int3
adc
xor
or
cmpsl
sbb
lret
repnz
movsl
cmpsl
cwtl
xchg
icebp
pop
enter
insb
cwtl
xor
and
jge
mov
pusha
imul
aam
scas
add
xor
pop
xor
aad
mov
in
sub
sub
xchg
jbe
test
xchg
add
mov
test
xchg
leave
imul
shl
cli
cmp
cmc
das
scas
imul
push
notl
outsl
cld
add
inc
mov
rolb
rcrb
and
mov
mov
xchg
je
ret
std
mov
das
sbb
ds
jle
fisubrl
aas
sbb
sub
mov
lret
or
pop
test
jnp
xchg
xlat
aad
push
adc
xor
sub
add
js
out
xchg
jle
not
xor
push
pop
repz
shl
adc
call
in
ds
lahf
ljmp
jnp
cli
cmp
call
stos
mov
inc
mov
jae
jo
mov
pop
jbe
adc
jg
push
ljmp
xchg
push
inc
stos
dec
push
or
add
scas
mov
dec
adc
push
push
cli
movsb
mov
lahf
adc
outsb
fiadds
cmp
fldenv
iret
sbb
mov
add
lds
or
and
add
enter
pop
adc
sbb
iret
movsb
adc
and
lahf
movsl
cmovs
cld
lock
cs
in
repnz
mov
sub
jl
push
outsl
push
daa
jge
roll
fidivs
pop
xchg
shll
outsb
movsb
imul
mov
jp
scas
int
mov
push
mov
shl
or
pop
dec
shl
sub
jmp
roll
cli
dec
fidivrl
test
cli
dec
or
insl
loop
insl
adc
adc
sbb
adcl
cmovns
and
inc
popf
inc
sbb
gs
push
es
iret
aaa
inc
pop
jecxz
fcmovbe
cmpsb
mov
mov
out
cld
add
out
test
lret
jge
jp
cmc
inc
jbe
pop
xchg
or
mov
inc
cs
fiadds
xchg
pop
pop
ret
jb
daa
je
lret
mov
inc
ss
shrb
inc
or
mov
or
ret
jno
cwtl
and
insl
sbb
push
xchg
cltd
mov
dec
dec
lea
mov
insl
add
lds
call
pop
xchg
pop
repnz
mov
inc
mov
stos
push
hlt
and
cltd
mov
data16
addr16
ret
clc
pop
ljmp
es
into
xlat
pop
int3
hlt
mov
cs
and
lock
into
cmpsb
pusha
out
nop
mov
sub
test
sub
xchg
jbe
loop
cli
fdivl
pusha
jge
push
and
pop
inc
stc
sbb
push
push
rorl
inc
pop
mov
and
jg
add
jle
xchg
cmp
mov
adc
mov
pop
cmp
loop
add
mov
pop
insb
pop
sub
sub
test
mov
jle
lcall
in
cmp
testb
cli
lret
sbb
mov
sbb
push
or
dec
adc
xor
imul
les
jg
bnd
fimuls
inc
pop
sahf
fwait
jg
aaa
aam
push
mov
mov
es
in
push
sbb
mov
pop
ret
mov
dec
mov
jge
outsb
inc
or
xor
into
jecxz
ds
jg
mov
negl
insl
xchg
jns
jl
aas
jns
sub
repz
incl
insb
dec
repnz
not
mov
fadds
fimull
lret
fsubs
scas
xacquire
xchg
sub
dec
lret
mov
pop
adc
repnz
sub
sbb
stc
jae
test
sub
inc
popa
scas
cmp
fdivr
or
sahf
lds
out
ja
sbb
out
loopne
push
inc
pop
lock
lret
loop
push
addr16
arpl
or
fwait
xchg
mov
sahf
sti
repnz
call
fxtract
daa
mov
rol
adc
mov
xchg
cmp
ljmp
pop
arpl
adc
pop
fists
jmp
cltd
hlt
scas
xor
or
add
cli
mov
jle
xchg
repnz
cld
cmp
lret
or
mov
call
mov
fninit
repnz
lcall
repnz
lock
adc
test
lcall
psrad
repnz
inc
push
bound
daa
xchg
push
sub
dec
xchg
dec
fcmovnb
negl
xchg
shl
fimull
enter
mov
and
into
ret
popf
xchg
xchg
add
mov
sbb
aad
mov
pop
push
push
cmpsl
xor
iret
dec
lods
xor
dec
mov
add
cmp
lock
dec
imul
cmpsb
jae
stc
les
das
xor
inc
cmp
xor
push
fwait
xchg
jne
leave
push
cli
jle
jmp
cli
xchg
lods
cmc
fstpt
mov
pop
xor
iret
pop
cmovge
movsl
loopne
xor
std
ljmp
dec
pushf
repz
push
call
call
jb
push
out
std
and
jnp
or
mov
imul
rcl
dec
cli
out
dec
stos
adc
jmp
push
out
mov
repnz
outsb
sub
cs
add
pmaddwd
push
add
dec
xchg
jmp
test
xor
adc
lods
in
or
cld
sbb
test
pop
sbb
sub
cmpl
lea
test
jmp
fwait
push
test
inc
sbb
je
sbb
pop
pop
pop
pop
cmpsb
test
ficompl
mov
mov
dec
dec
mov
test
pop
inc
adc
es
push
into
cmc
cmp
mov
jl
ret
xchg
xchg
push
add
xor
test
loope
leave
dec
or
test
or
or
jo
aam
push
rcll
cmpsb
xchg
addl
lds
daa
imulb
lret
push
shrl
movsb
push
cwtl
mov
push
and
adc
jg
pop
adc
adc
std
fwait
pop
lret
shlb
fucomp
mov
ss
test
push
cmpsb
lret
ret
test
dec
lods
jp
mov
fisubrs
cmp
and
mov
ljmp
push
push
movl
cmc
xor
mov
xchg
adc
in
mov
pop
inc
test
jno
repz
aam
pushf
add
addr16
cltd
jmp
repz
pop
or
dec
sub
mov
or
sub
lods
and
and
clc
xchg
cmp
xor
push
mov
adc
adc
xchg
cmpsl
roll
enter
mov
in
pop
inc
inc
sub
les
mov
mov
sub
jge
adc
dec
pushf
cmp
xor
pop
hlt
cs
dec
inc
in
push
push
or
out
loope
outsb
add
mov
ds
mov
sub
and
icebp
stos
js
xchg
push
cmp
inc
push
js
dec
sub
out
lcall
pop
mov
push
dec
or
xor
mov
and
pop
fs
jae
cmp
movsl
sbb
xchg
jp
aas
jae
xor
push
test
outsb
mov
xchg
mov
jmp
es
cwtl
xor
ljmp
lods
cmp
inc
scas
enter
fcoms
mov
pusha
adc
push
cmpsl
ja
test
sub
ljmp
cmpb
arpl
xor
pop
pop
mov
imul
sbb
pusha
sbb
data16
lret
dec
or
pop
sbb
adc
out
frstors
aam
or
in
test
xor
jg
mov
jns
fbstp
lcall
mov
sub
mov
xchg
fnsave
pop
jge
jp
pop
or
xor
sbb
sbb
cmp
push
pop
or
movsl
mov
imul
sarb
shll
mov
jbe
rcl
and
dec
mov
mov
xor
cmpsb
clc
sbb
and
loop
mov
in
das
add
test
mov
mov
cmp
test
cmp
pushf
lods
mov
or
in
movsl
mov
sahf
ss
xchg
sahf
int3
arpl
adc
outsb
repnz
test
iret
shlb
and
or
rcrb
jnp
pop
sub
and
jae
loopne
int3
push
arpl
push
iret
iret
sbb
push
dec
inc
mov
mov
sbb
stos
jmp
cmp
jno
sbb
inc
xchg
sbb
xor
dec
jmp
call
in
sub
loopne
cmpsl
sbb
cs
adcb
pop
lods
pop
rorl
cmpl
jp
add
pop
or
testl
repz
xor
pop
add
test
mov
movsb
ret
jne
shrb
dec
call
sub
int
dec
jno
out
inc
dec
call
mov
mov
imul
cmpsb
stos
ljmp
xor
lcall
xchg
mov
in
call
cltd
inc
jne
insb
subl
rcrl
es
out
sarb
clc
cmp
mov
dec
mov
roll
dec
pop
in
sbb
test
les
add
lods
cmpl
arpl
inc
mov
push
jnp
lcall
hlt
loop
aam
int
lahf
mov
scas
xchg
sub
scas
cmp
incl
add
shll
lods
imul
mov
pop
call
xor
cld
rorb
sub
adc
daa
or
mov
stc
fs
ja
sub
mov
pop
push
loopne
push
push
mov
add
pop
clc
pop
inc
mov
orb
in
push
pop
mov
leave
and
pop
pop
or
test
push
test
mov
fdiv
push
cmp
inc
lock
mov
pop
pop
inc
jae
fs
outsb
jecxz
stos
outsl
xchg
mov
sbb
ds
lcall
mov
dec
mov
adc
pop
adc
fmull
in
in
stc
pop
inc
push
daa
inc
sbb
test
js
xor
fnstsw
movsl
mov
aaa
mov
daa
int3
test
push
and
ficompl
cld
mov
lcall
int
adc
cmp
jb
ds
or
fadd
sub
xor
mov
outsb
xor
iret
push
push
mov
mov
fimuls
pop
leave
xchg
mov
test
aad
pushf
decb
push
sbb
js
or
ret
pop
jne
std
jmp
and
sub
test
lea
out
dec
xor
subl
push
fstl
mov
aam
or
mov
jl
or
jg
inc
pusha
xchg
sbb
pop
dec
aad
inc
add
aaa
enter
insb
or
sbb
mov
adc
jae
jno
adc
cmp
xor
aaa
stos
pop
mov
pop
adc
ljmp
and
lahf
int
ret
cmp
insl
or
cwtl
mov
push
sbb
mov
dec
out
jne
and
push
push
inc
xor
sbb
aad
out
movsl
ret
and
mov
cmp
and
dec
dec
lcall
in
lds
movsb
inc
or
negl
pusha
ss
adc
mov
adc
mov
lds
adc
cs
sbb
pop
cltd
sub
cmp
insl
test
daa
fldenv
cmp
adc
cmp
xor
adc
pop
cwtl
cmc
gs
notl
pop
sbb
mov
cmp
xchg
test
mull
std
sahf
bound
inc
fdivs
pop
into
add
lret
cmpsb
into
xchg
or
inc
inc
movsb
loopne
cmc
bound
adcl
test
sub
cli
in
cmp
int3
sar
das
push
push
std
aad
and
cld
add
jg
jmp
jmp
mov
dec
dec
pop
je
cmp
mov
mov
jb
imul
loope
es
or
mov
mov
sub
mov
lahf
in
pusha
xchg
fnstsw
aaa
sbb
jne
mov
aaa
push
pushl
push
add
push
inc
push
je
adc
pop
pop
jmp
bound
loop
or
push
js
and
mov
das
ret
push
js
mov
stos
adc
lods
nop
fwait
test
xchg
js
andb
aam
cmp
cmpsb
into
push
ret
xlat
mov
and
xor
int3
adc
movb
mov
and
sbb
mov
sbb
inc
ljmp
xor
sahf
inc
in
into
lahf
adc
jp
xchg
jle
fmull
dec
mov
add
subl
sbb
in
jmp
lret
inc
daa
cwtl
das
sub
mov
and
mov
cwtl
push
imul
mov
ret
cmc
mov
xor
aaa
shl
rclb
jmp
packuswb
adc
daa
sub
mov
pop
cli
jb
mov
cld
pop
mov
cmp
cltd
push
outsl
or
fsts
int
pop
aas
push
push
xchg
test
dec
popf
ret
aam
xchg
ljmp
scas
pop
movsl
mov
sub
add
cmp
in
out
cltd
cmpsl
dec
test
push
xor
sahf
ljmp
jae
jne
int
dec
add
les
jno
fmuls
dec
out
xchg
sbb
fdiv
add
jge
xchg
inc
inc
and
pushw
pop
ficoms
jle
js
xor
clc
lods
inc
cmp
cmpsb
mov
mov
out
fcompl
inc
lods
add
mov
clc
insl
ljmp
cmpsb
mov
dec
mov
cmp
fcoml
dec
int
pop
fdivl
xchg
outsb
inc
inc
fists
lahf
dec
fcoms
imul
arpl
xor
rsqrtps
cmp
sarb
lods
ficomps
push
inc
jae
fisubs
scas
sub
decb
xor
and
pop
test
ret
dec
inc
pop
lret
sbb
pop
lods
mov
dec
xlat
aas
call
je
dec
xlat
jbe
fisubrs
dec
es
stos
div
iret
clc
incl
cld
arpl
jnp
mov
popa
mov
mov
out
sahf
sahf
fcompl
xor
push
push
test
js
jge
loopne
cmc
cmp
mov
jae
add
sar
cmpb
xchg
ret
xchg
adc
stc
fsubrs
andl
aas
push
xor
jae
pop
imul
stc
xchg
push
outsb
mov
lret
cmp
pop
push
inc
movsl
sub
cli
jae
jmp
push
mov
mov
scas
jg
pop
test
mov
lea
dec
cmpsl
lahf
fucom
push
mov
aad
sti
mov
leave
outsl
sub
jge
lods
mov
push
clc
lods
inc
sub
pop
sar
lods
gs
outsl
mov
in
mov
dec
test
mov
jecxz
jg
insl
ljmp
fidivrs
mov
mov
aas
call
popa
mov
mov
xchg
xchg
mov
dec
sbb
vpinsrw
fisubl
into
fisttpl
mov
mov
pop
hlt
sarb
insb
jno
repz
mov
adc
inc
and
iret
sti
push
cmp
sbb
fnstenv
sahf
mov
pop
push
xchg
cwtl
movsb
cmp
repnz
inc
in
inc
fwait
xchg
and
gs
enter
dec
mov
cmpsl
loop
push
hlt
xchg
adc
add
sub
adc
xchg
cmp
loop
test
mov
and
adc
xor
std
or
add
add
pop
pushf
mov
js
xchg
out
fwait
je
push
insb
lahf
cmp
sbb
sbb
jns
add
xor
sub
lahf
and
and
add
icebp
icebp
loopne
push
dec
call
clc
leave
jecxz
fnstenv
clc
imul
mov
sbb
int
bound
pop
adc
jo
xor
adc
inc
outsl
sub
mov
mov
mov
inc
and
sub
inc
cmp
idiv
sub
xchg
stc
push
push
enter
pop
cmp
mov
sahf
push
insl
loopne
fdivrs
mov
movsl
push
sti
je
enter
add
push
setae
adc
ja
out
sub
fists
mov
cmp
in
push
daa
clc
jmp
pop
pop
dec
daa
or
pop
inc
ljmp
decl
mov
cmp
jbe
loope
aaa
pop
fmuls
imul
mov
test
push
mov
or
pop
jp
cmp
dec
test
push
mov
loop
shll
in
movsb
add
adc
ret
jmp
addr16
push
das
pop
outsb
aad
scas
push
jg
pop
out
xor
and
sarl
add
cmp
xchg
cltd
mov
cwtl
jne
cmp
enter
mov
in
and
aas
cmpsl
aad
xchg
mov
addr16
test
addr16
sbb
loop
push
push
mov
ljmp
and
sub
aam
dec
lods
add
jno
xchg
push
push
sub
jae
and
jno
jns
xchg
mov
lock
mov
sbb
sbb
inc
divb
mov
xor
repnz
push
dec
add
jnp
hlt
pop
cmp
cli
xchg
das
cmc
in
mov
push
fistpl
push
loopne
mov
loop
repz
jns
iret
jmp
cmp
stos
pushf
mov
out
pusha
add
inc
xchg
out
movsb
dec
push
shlb
push
xchg
loop
dec
pop
outsb
mov
into
sub
mov
mov
pop
or
jb
xor
sbb
bound
out
and
popf
nop
orl
out
aam
inc
cs
mov
add
sbb
xchg
pop
push
loope
pop
sbb
push
push
sbb
popa
pushf
mov
stos
ds
shrl
or
dec
cmp
sub
dec
push
popa
stc
jl
shr
data16
call
fwait
mov
int3
push
popa
xchg
int
fbld
jns
mov
mov
aad
inc
dec
pop
cmp
cmp
ss
push
push
scas
and
lock
jecxz
cmpsb
sub
cmp
cmp
lret
mov
cmp
push
cmp
adc
mov
inc
aam
mov
sbb
pop
add
loope
and
adc
pop
pop
lods
outsl
push
dec
pop
pop
cli
pop
mov
cwtl
pushf
cli
jecxz
jmp
adc
cli
shrb
jmp
in
inc
nop
cmpsb
daa
mov
mov
fmull
sbb
je
psraw
aaa
cld
mov
cmp
jg
mov
add
mov
or
or
add
or
ja
fdivs
int3
mov
xor
adc
cmc
inc
test
push
lds
mov
lahf
cmp
pop
rcl
xor
das
or
incb
cmc
xor
loope
out
mov
ret
repnz
hlt
lds
add
stos
pop
int
mov
cmp
sub
out
dec
in
sbb
rcrb
aaa
or
pop
sbb
faddl
push
ret
add
add
and
dec
and
push
jg
add
test
in
jo
pop
cmpsb
lods
xor
inc
rcrb
scas
mov
icebp
sbb
test
xchg
adc
dec
xor
fnstenv
out
scas
data16
push
clc
andl
enter
xchg
mov
mov
push
ss
jp
push
jno
orl
add
xchg
pop
xor
enter
jbe
jne
jle
lods
adc
mov
aad
sbb
adc
adc
pop
lods
push
int
adc
mov
sarb
jle
subb
stos
movsl
repz
pushf
aas
jbe
xor
jg
push
loope
jecxz
cmc
add
add
imul
push
loop
cmp
mov
push
std
sar
xchg
popf
mov
mov
sbb
pop
aam
xchg
inc
bound
jp
flds
mov
js
shrb
and
aas
iret
sbb
mov
cmpsb
popa
bound
xor
stos
xchg
adc
mov
es
jae
mov
dec
lods
jmp
insb
ljmp
repz
and
pop
mov
and
ret
dec
pop
lds
mov
sbb
sti
xchg
pop
dec
adc
and
add
pop
imul
fidivs
push
pop
sbb
sbb
incb
je
cmp
cwtl
addr16
loopne
int
daa
shl
pushf
test
mov
dec
mov
data16
pusha
adc
cmp
sub
loope
mov
lods
in
pop
dec
dec
popa
push
sbb
xchg
mov
lahf
out
inc
fucomp
test
je
adc
popl
pop
sahf
insl
cmpsl
sahf
xor
ret
pop
xor
aam
in
adc
clc
in
loope
inc
mov
nop
inc
rcl
int3
bound
shll
lock
int
or
inc
xlat
adc
outsl
cmp
add
cmc
mov
jg
repz
xchg
ss
push
xor
sbb
scas
cmpsb
mov
imul
push
or
push
push
divl
and
movups
addr16
lea
push
cmp
dec
mov
andb
push
mov
data16
out
add
out
cmp
lods
sub
xchg
sahf
mov
fwait
fbld
imul
in
pushf
jle
cmp
sub
inc
xchg
push
pusha
jns
mov
ret
adc
jae
mov
xchg
sub
adc
fwait
addr16
cli
add
outsl
lods
mov
or
pop
mov
mov
jb
sub
shll
jle
and
imul
cmp
sub
pop
adc
adc
aaa
jmp
rcll
jge
imul
test
mov
jnp
mov
in
icebp
push
adc
cmc
mov
insl
mov
stos
adc
sbb
aad
pop
subl
xchg
mov
mov
insb
int
int3
mov
xor
jg
cmp
adc
push
lret
lcall
xor
aas
cmp
nop
inc
xor
test
or
xchg
and
insb
lahf
daa
lcall
mov
mov
movsl
pop
or
into
imul
sub
xchg
test
div
lds
mov
dec
out
in
inc
mov
popf
push
mov
jl
push
mov
out
int
fildll
rorl
mov
imul
mov
movsl
mov
push
test
xor
aas
xorl
lock
add
sbb
push
negb
roll
mov
dec
mov
jl
hlt
mov
xor
xchg
cli
test
clc
xchg
xor
in
jecxz
push
xlat
ret
jl
sub
outsb
sti
adc
push
pop
ss
sbb
jne
nop/reserved
pop
push
pop
sbb
testb
mull
hlt
mov
test
sbbl
add
fadds
mov
dec
xor
push
jle
and
fnsave
inc
test
sub
rcll
dec
sub
ret
call
jnp
mov
inc
jo
mov
mov
aad
pop
mov
arpl
mov
push
outsl
cmp
outsl
mov
mov
and
cmp
js
mov
loopne
call
inc
and
andl
and
lea
jae
data16
inc
add
push
inc
push
xchg
mov
cmp
lds
in
xor
mov
mov
shl
lock
mov
and
push
in
mov
out
fsubrs
mov
hlt
dec
push
movsb
mov
pop
push
adc
lods
jg
inc
stc
mov
test
dec
push
dec
icebp
push
push
nop
and
cmp
ds
loopne
out
fisubrl
lret
inc
pop
in
sbb
lods
bound
testl
jge
aad
lods
push
test
lahf
push
push
pushf
ss
sbb
push
push
shlb
and
xor
insb
jbe
sub
jg
push
test
cld
cmpsl
inc
lret
mov
jg
xor
enter
or
int
add
fwait
and
fs
movsb
roll
stos
mov
ja
xchg
into
pop
cmpl
fnstcw
cs
vpackuswb
dec
push
int3
fsubr
pop
cmpsb
jns
repz
call
scas
dec
lret
and
lret
in
sub
leave
stos
xchg
dec
jns
or
push
in
pop
mov
jmp
lock
push
pop
xchg
sti
ret
sub
repz
stos
inc
push
notl
aam
dec
xchg
push
insl
dec
mov
mov
sub
mov
pop
and
testb
fmul
pop
jbe
lret
aad
push
out
push
aam
mov
imul
mov
jg
stos
xchg
fwait
dec
mov
daa
into
xor
xchg
mov
scas
pop
xlat
clc
data16
mov
jno
inc
sbb
fwait
pop
lret
push
idivb
jns
pop
mov
dec
jbe
sbb
cmp
scas
outsb
push
push
pop
movsb
stos
movsl
sub
lret
mov
rclb
cs
sarl
and
test
xchg
sub
imul
imul
insl
sub
outsb
cmp
divb
addl
adc
rcll
adc
pop
pop
lods
mov
xorl
femms
das
aas
push
ds
and
inc
sbb
orb
pop
pop
or
push
xchg
lock
pop
movb
jmp
loope
mov
fcoml
push
push
mov
cmp
fidivl
into
pop
sub
or
lahf
subb
negb
cld
dec
int
lods
mov
sbb
add
xor
rclb
dec
sbb
cmpsb
jb
out
aaa
xchg
popf
movsb
lods
jb
push
inc
daa
fstp
push
in
jmp
xor
mov
inc
sbb
lods
std
mov
add
ja
mov
pop
iret
out
loopne
cli
ret
icebp
mov
das
cmp
cmp
mov
dec
mov
jl
loopne
repz
adc
stos
or
dec
decl
dec
jle
cmpsb
cmp
shll
mov
ud0
adc
push
push
sbb
int
mov
pop
cmp
shl
pmullw
add
adc
xchg
sahf
jmp
and
outsl
fwait
cli
loop
gs
mov
push
cs
clc
jno
and
xchg
fldenv
shlb
enter
push
add
stc
movl
les
fdivrp
push
imul
fwait
mov
clc
mov
adc
scas
cli
andl
adc
lahf
xchg
xor
xchg
lcall
jge
fidivrs
pavgw
addr16
out
mov
and
lret
stc
adc
push
cmp
dec
scas
and
mov
pop
aas
cmp
cmp
js
lock
push
ja
push
lock
popa
mov
mov
mov
aad
sahf
aaa
icebp
inc
hlt
mov
jle
xchg
xchg
leave
lahf
ror
ror
scas
push
push
fists
aas
loopne
lock
enter
push
jbe
fisubl
iret
xchg
nop
mov
pop
icebp
aad
shrl
repz
imul
clc
xchg
mov
cmp
nop
and
push
cmc
pop
rcl
call
test
roll
inc
sub
and
mov
fisubs
bound
dec
inc
cmp
shll
dec
sbb
mov
adc
das
push
pop
add
addr16
ss
dec
or
mov
rcrb
pop
cmp
dec
daa
test
jnp
loope
pushl
cld
hlt
pop
lods
in
clc
sbb
pop
pop
int3
iret
cmp
dec
sbb
mov
cmovg
mov
addr16
out
shll
js
in
daa
into
or
and
aad
xchg
or
imul
sub
in
inc
and
pop
ja
inc
add
cmp
cmpsb
clc
cmovs
inc
int3
jmp
nop/reserved
ljmp
jno
fidivs
push
clc
or
adc
inc
test
in
lock
addr16
jb
pushf
jg
jns
pop
sub
push
sar
aad
xchg
mov
cmc
adc
iret
jnp
mov
push
repnz
push
cmpsb
or
mov
add
push
xor
mov
cmp
push
call
inc
mov
je
dec
lret
jp
or
out
push
das
movsl
xchg
and
xor
dec
cmp
or
out
vcvtdq2ps
das
rcrl
je
mov
sar
mov
adc
arpl
ja
fcomps
aas
xchg
std
icebp
fnsave
imul
cmp
std
std
jno
mov
int3
sbb
jg
ds
jg
outsl
cmc
inc
out
push
in
lret
mov
cld
pop
out
cmpsl
std
mov
sbb
jmp
js
stc
aas
jmp
iret
cld
xor
cmc
int
aam
ffree
bound
repz
ja
cmp
push
div
pop
les
stc
dec
mov
mov
pop
out
lahf
xchg
aam
push
hlt
adc
enter
out
movsb
aas
icebp
fistpll
out
daa
repnz
mov
incl
imul
xor
xchg
mov
scas
sbbb
sub
add
ret
xchg
or
or
ja
lods
hlt
xlat
insl
or
mov
int3
mov
fldl
sbb
mov
xor
test
outsb
stc
mov
cltd
mov
sbb
xchg
rcll
hlt
or
int3
ret
mov
cli
cmp
int3
ret
lods
sahf
mov
std
std
lret
dec
cvtps2pi
pusha
push
and
jo
mov
add
fld
pop
and
fcomip
lret
adc
lods
xchg
mov
adc
sbb
dec
movsb
jl
push
fstl
push
out
aam
push
pop
sub
mov
sbb
lahf
ds
pop
jg
pop
in
push
xchg
add
and
popa
test
ret
xchg
and
repnz
and
ret
arpl
lret
mov
js
enter
les
xchg
js
call
xchg
aam
mov
or
xchg
mov
mov
xor
dec
pop
cld
test
pop
or
adc
fwait
jne
popa
clc
push
adc
jp
dec
rcrl
movl
adc
rorl
sub
ja
aaa
movsb
aaa
outsl
bound
mov
lcall
sbb
pop
xor
mov
out
sub
int
aam
lods
xor
adc
push
das
adc
xchg
lret
rcrl
int3
xlat
mov
mov
insb
aam
iret
adc
cmp
lods
cmp
fucom
negb
js
and
jp
push
cmp
xchg
add
aas
jmp
mov
xchg
aad
jne
dec
mov
icebp
es
pop
dec
inc
test
shr
xorl
cltd
xor
call
iret
fisubrs
shll
aas
push
jb
aam
inc
xchg
cli
lret
divl
dec
dec
popf
rcr
jb
pop
into
push
xor
pop
push
loop
pop
jbe
adc
push
cmovnp
xor
dec
mov
test
dec
add
xchg
fwait
test
cmp
bound
mov
add
arpl
sub
lods
ret
jns
scas
outsl
rcrl
je
pop
push
or
sbb
pop
inc
cltd
ret
scas
fcomps
dec
fldcw
in
out
icebp
enter
mov
ror
pop
jne
cmp
ljmp
ds
icebp
jecxz
data16
jl
mov
sbb
mov
pop
inc
adc
pushf
pop
cs
adc
sub
sbb
adc
lret
cmp
inc
mov
sub
js
enter
mov
repz
push
or
js
stos
imul
cmp
cli
add
adc
pop
sahf
sahf
mov
sbb
sbb
or
dec
push
insb
push
jns
imul
repnz
out
dec
addr16
cmp
dec
in
or
mov
iret
mov
jo
aam
xchg
sbb
fmuls
int
mov
sbb
orb
insb
xchg
ret
inc
lcall
rcl
xchg
mov
sub
stos
pushf
lock
xchg
sbb
mov
pop
lea
adc
rcrb
xchg
and
divb
arpl
not
insb
out
adc
xlat
push
jne
bnd
int3
outsl
int
add
inc
dec
out
mov
repz
std
into
addr16
mov
popa
popa
cmpsl
mov
jmp
mov
push
sahf
jle
dec
cmp
xchg
add
xchg
arpl
lds
cmp
adc
into
or
mov
sub
test
jmp
icebp
sub
fcoml
insl
or
jle
outsb
stos
neg
adc
mov
sbb
push
jne
mov
and
cld
adcl
mov
xchg
xchg
aad
cmpsb
cmp
push
hlt
fsubrl
adc
sbb
or
jb
push
jae
mov
mov
xlat
fsubl
insb
adc
fists
test
jmp
or
mov
lcall
push
or
mov
adc
and
jns
cli
xchg
in
mov
fiadds
imul
int
addr16
mov
stos
xlat
into
outsl
test
xchg
jl
push
andb
ret
cmpsb
pop
jmp
or
jns
loopne
popl
aad
insl
xchg
repz
jns
sub
push
push
in
cmp
sbb
mov
adc
jo
or
out
push
pusha
in
sbb
pop
adc
lcall
mov
rcl
xchg
je
lock
cmp
jle
xchg
push
xchg
mov
mov
mov
mov
ljmp
je
sti
addr16
in
popa
stos
mov
stos
inc
sbb
fldl
scas
lea
or
and
loopne
mov
insb
inc
sub
rcrb
xor
mov
in
adc
mov
xchg
jge
mov
pushl
adcb
incb
jge
sub
ljmp
dec
in
shr
outsb
outsb
nop
cs
mov
pushf
pop
imul
inc
or
push
mov
ret
inc
stos
xchg
xchg
cs
push
scas
dec
testb
pop
mov
cmp
outsl
pop
and
dec
pop
mov
jl
or
mov
add
push
mov
and
inc
lret
jecxz
rcrl
jmp
mov
in
xchg
je
xchg
testb
movsl
popa
mov
mov
ljmp
js
dec
cmpsl
sub
shll
pop
inc
xor
daa
xchg
lods
cmp
jne
add
les
lcall
add
lahf
mov
call
inc
repnz
jo
cmp
cmp
nop
dec
mov
xor
js
pop
sahf
sbb
rorl
dec
pop
inc
rcrl
mov
popf
fsts
dec
outsl
pop
stos
sub
ss
out
scas
loope
push
loope
mov
pop
mov
les
mov
cmpsb
sub
cmp
ss
es
cmpb
test
cmpsl
scas
lock
adc
pop
rclb
dec
xchg
sbb
cmpsb
test
stos
xlat
rcrb
lods
int
gs
cld
cmp
int3
dec
xor
mov
js
addr16
push
or
enter
addr16
xor
testb
pavgw
cmp
clc
pop
rcrb
pop
gs
cld
mov
loope
loopne
xchg
push
sbb
push
sahf
mov
mov
push
in
xchg
sarl
movups
sti
gs
jle
sbb
mov
mov
cmp
movsl
cmp
push
or
lahf
mov
data16
mov
xor
mov
pop
adc
les
jg
add
adc
lea
lret
jg
sbb
lret
dec
or
push
mov
outsb
or
pop
pop
cs
js
dec
and
sbb
es
out
push
repnz
div
outsl
mov
sti
pop
jge
incl
xchg
insb
subb
or
dec
adc
jno
and
xchg
jb
add
jns
mov
mov
cmp
inc
push
loope
sbb
lcall
or
fidivl
sbb
cltd
fs
insl
inc
enter
jecxz
push
jge
jno
adc
jo
fildl
divl
cmp
je
sarl
cmp
push
pop
adc
int
pop
mov
mov
pushf
mov
es
xchg
dec
cs
mov
pop
mov
cltd
movsb
push
es
and
mov
rorl
pop
es
and
mov
push
out
ljmp
mov
dec
sti
stos
std
test
repz
bound
sbb
shll
mov
adc
add
push
jae
jl
dec
cmc
inc
ss
pop
repnz
push
mov
arpl
insb
inc
sub
xchg
jecxz
cmc
jae
jmp
xor
call
ds
int
fsubs
lret
mov
sbb
pop
fsub
push
clc
ficoms
cmpsl
pop
inc
cmp
and
es
jp
xor
sub
outsl
fcmovnbe
jbe
push
pusha
sub
bound
lea
outsl
lahf
test
xchg
xchg
int3
insl
jne
pop
push
adc
inc
sub
jns
cmp
adc
lcall
out
mov
sahf
push
xchg
adc
lea
mov
sub
outsb
call
stc
test
jno
jbe
scas
xchg
pop
call
pop
dec
mov
and
test
jmp
loop
fidivrs
popf
cmpsl
sbb
iret
xor
or
cmc
mov
jecxz
enter
xchg
je
subl
or
loopne
aad
cmpsb
out
repz
test
mov
es
mov
aas
daa
fisttpl
push
or
inc
push
pop
fs
insl
push
jno
xlat
aad
sbb
into
dec
andb
dec
lods
rcrl
push
dec
andb
xchg
and
lea
les
cmp
icebp
pop
pop
les
push
mov
pop
pop
xor
dec
mov
xchg
add
pop
mov
mov
test
mov
mov
pop
inc
jge
clc
pop
cmpl
inc
sub
dec
rorb
gs
loope
out
mull
data16
jmp
adc
add
scas
inc
fsubr
jecxz
das
pop
cmp
loopne
push
popf
fistps
inc
xchg
push
xor
dec
enter
mov
cmpb
add
sbb
jp
pop
lea
out
hlt
imul
pop
rcl
jle
mov
pop
sub
jl
pop
dec
sar
pop
sub
mov
inc
ljmp
jnp
fldl
stos
mov
push
jnp
xchg
push
call
loop
and
les
mov
popa
aam
cmp
in
cmpsl
leave
mov
xchg
ja
push
mov
sbb
jae
xlat
fadd
jmp
fcmovnu
sub
hlt
scas
sahf
cmpsb
outsb
lea
jmp
and
or
jb
xor
sti
lret
test
shl
popf
xchg
cwtl
dec
jns
cltd
out
std
push
fwait
dec
sti
xchg
and
pop
xor
inc
cmp
movsl
inc
insl
ds
lds
mov
add
cli
dec
mov
cld
test
cld
inc
sbb
pop
mov
mov
and
fs
iret
adc
sub
or
mov
les
test
lret
adc
popf
inc
inc
loop
add
dec
mov
js
xor
push
idivl
adc
sti
stc
add
dec
cmp
shrb
insl
add
inc
cmp
sub
xlat
test
sti
idivl
push
push
sub
push
imul
mov
jl
movsb
cli
inc
lock
push
sub
jmp
push
cmp
mov
test
sub
scas
enter
or
cmc
sqrtps
jne
dec
in
adc
mov
pop
push
mov
mov
js
pop
shll
sahf
int
ljmp
push
add
ret
jmp
sub
addl
js
mov
hlt
mov
jb
mov
nop
cmp
inc
jb
mov
loop
stos
mov
mov
insl
xchg
jmp
push
cltd
pop
jbe
push
ds
fs
into
repnz
sti
add
das
lea
mov
fcoml
nop
jnp
xor
pop
sub
dec
sub
mov
sbb
push
push
jae
cmp
js
jl
jecxz
pop
fs
sub
bound
jne
push
popl
cli
mov
pusha
ret
das
dec
ja
inc
push
stos
mov
bound
aaa
outsl
jmp
mov
push
cmp
lods
and
jbe
xor
mov
xchg
outsb
jmp
lea
sub
out
push
ds
stos
pop
adc
daa
sahf
pop
push
dec
dec
pusha
cmp
jb
movsb
sbb
adc
dec
xchg
pop
pop
out
sub
fs
pop
imul
addb
dec
decl
pop
rclb
cs
add
cmc
rcll
xor
push
mov
xchg
jns
pop
lret
or
mov
and
call
cli
inc
out
aas
jge
hlt
jg
xchg
inc
mov
jge
in
enter
negl
andl
in
aas
gs
hlt
cmp
mov
xlat
dec
in
clc
pop
cmp
cmp
cmpsl
add
xchg
cmc
cmp
xor
jns
repz
jg
add
movsl
xlat
cltd
movsl
dec
jae
cmp
adc
sub
pop
int
imul
or
lods
push
ret
test
cmpsl
sub
push
daa
pop
negb
push
push
js
lock
jmp
cmp
lods
cmp
outsb
addl
xchg
push
std
jne
jmp
rorl
mov
icebp
push
rcl
int
jns
mov
jns
and
int
adc
movsb
daa
mov
mov
out
addr16
insb
cmp
jbe
mov
data16
dec
mov
aas
inc
mulb
push
cs
je
popf
jp
cmp
dec
mov
aam
push
std
pop
std
or
outsl
pop
jne
rcl
leave
outsl
mov
dec
das
inc
xchg
mov
add
xor
jb
cmpsb
push
pop
rorb
adc
jbe
inc
dec
sub
cwtl
out
stos
data16
jle
insb
scas
fidivrl
test
inc
jno
push
lahf
mov
lods
lods
iret
ja
jl
cli
mov
clc
cli
pop
mov
int
mov
icebp
cmpsb
test
pop
ja
cmc
aas
sbb
mov
iret
adcb
incl
mov
jne
ret
hlt
stc
je
lea
popl
pop
mov
mov
popa
add
adc
adc
in
mov
loopne
aas
stos
outsl
aam
and
inc
xchg
jg
mov
bound
sbb
jle
into
pop
dec
cmp
fmulp
fdivs
les
imul
push
lods
xchg
test
pop
jb
adc
cmc
push
lret
push
pop
fucom
in
imul
mov
cld
sti
mov
xchg
ds
out
adc
jmp
adc
aam
fnsave
jb
pop
scas
dec
push
inc
mov
in
sahf
inc
dec
lahf
dec
outsl
pop
inc
cmpsl
jmp
into
dec
pop
xchg
push
rorb
dec
dec
insl
cmp
jnp
mov
scas
adc
mov
icebp
jns
out
call
fcoms
push
lcall
ds
adc
ret
outsl
testl
sbb
jg
cltd
clc
je
jb
lret
stos
xchg
stos
jbe
or
sub
push
lea
push
and
inc
movsl
cmpsb
jo
movsl
mov
push
and
lcall
insb
cmpsl
movsl
push
fsubr
in
fisubrl
in
ss
in
push
mov
adc
mov
outsb
decl
mov
xchg
out
push
mov
je
cmp
cmpsb
dec
inc
and
xchg
push
push
jo
lcall
add
arpl
pop
pop
outsl
gs
push
mov
cmp
or
xor
sar
scas
cmc
repz
dec
imul
movsb
lcall
cmpl
mov
jbe
adc
cmpsb
xor
inc
lods
xor
loop
sub
cmpsb
xchg
sub
xor
pop
outsl
xchg
add
xchg
mov
pop
sub
cmp
inc
rolb
add
gs
mov
push
and
loope
nop
inc
xor
xor
stos
ret
arpl
dec
fwait
rorb
push
test
inc
in
in
mov
jmp
sub
and
push
push
mov
pop
ss
push
or
jae
push
xchg
add
or
inc
outsl
mov
test
aaa
pop
outsb
xor
lahf
adc
into
jo
je
dec
mov
sbb
stc
pop
pop
cltd
pop
jl
push
roll
mov
push
pop
inc
mov
and
and
push
dec
roll
fmuls
xor
mov
pop
xor
aaa
fstpt
xor
mov
mov
imul
cwtl
fcoml
add
mov
addr16
and
jnp
xchg
stc
rcrl
push
test
cltd
xchg
aam
out
xor
mov
xchg
push
push
sub
xchg
jns
outsl
cmp
test
lods
icebp
mov
in
fwait
ja
int
mov
int
int
sbb
aam
fwait
bswap
mov
cmc
lods
leave
and
push
cmpsb
mov
pop
dec
mov
sbb
mov
or
dec
aam
aas
icebp
call
fsub
imul
out
popa
mov
cmp
shrb
les
mov
jb
imul
add
aam
or
ljmp
fs
or
mov
push
popf
arpl
mov
popf
cmp
xlat
cltd
cmc
push
dec
movsb
or
cld
sbb
mov
jmp
es
lods
sahf
cmp
and
stc
jb
addr16
cmp
adc
popa
xchg
dec
test
pop
push
dec
mov
rcll
xor
aas
stc
adc
scas
push
dec
mov
add
addr16
and
fwait
pusha
mov
adc
pusha
test
mov
xchg
cmp
aaa
imul
sbb
ds
repz
and
repnz
jbe
mov
inc
sbb
mov
das
jnp
pop
icebp
mov
lea
lock
addb
stos
ficomps
es
pusha
xor
push
mov
add
out
mov
sbb
aam
jmp
call
or
das
xchg
xor
fucompp
rolb
lcall
xlat
aaa
jo
inc
xor
call
ficoml
test
push
call
mov
test
cmc
mov
lods
jmp
mov
int
lret
sarl
inc
and
cld
mov
xchg
lods
xlat
loope
pop
fucom
jp
popa
sbb
pop
xor
or
scas
dec
daa
adc
cmpb
call
sub
push
iret
fs
cmpsl
pop
mov
dec
or
sar
push
fsubrs
setne
dec
jb
fdivl
adc
adc
jmp
xchg
fdivrp
mov
ja
and
mov
sub
mov
cmpsl
pop
sbb
stos
sahf
mov
call
test
out
sub
dec
or
sbb
sub
bound
in
xor
mov
xchg
mov
lods
ss
jecxz
sbb
negb
test
out
mov
adc
clc
clc
inc
dec
adc
cmpsb
and
mov
lret
outsl
xor
fwait
mov
adc
aas
in
ja
outsb
sub
bnd
roll
xor
cmp
add
sbb
xor
pop
jns
mov
cld
imul
inc
sbb
adc
sub
push
jno
loopne
int
dec
int
push
jns
nop
aaa
push
ss
jae
ret
jno
inc
inc
int3
push
pop
out
pop
dec
imul
cmp
stos
adc
inc
mov
lea
adc
das
push
cmp
popa
jmp
pop
loopne
pop
mov
or
sahf
imul
mov
aas
outsb
popa
mov
pop
cs
mov
imul
in
rolb
adc
cmc
inc
fiadds
test
cmc
in
loopne
push
sub
adc
xchg
xor
lods
push
js
inc
pushw
pushf
jo
and
adcl
push
cmpsb
sub
mov
add
stos
notb
jmp
inc
cmp
mov
and
cmpsb
mov
mov
or
iret
cmpsb
cmp
outsl
ss
xor
sub
or
lea
imul
adc
cltd
push
lea
ret
mov
adc
fwait
cmc
lock
jb
sti
in
pop
pop
unpcklps
cs
hlt
adc
test
mov
movsb
push
push
test
es
jo
sbb
ret
xor
movsb
insb
pop
in
repz
add
dec
test
mov
movsb
sti
lods
xchg
inc
pop
mov
out
mov
pop
mov
jnp
dec
in
ljmp
lods
stos
mov
mov
je
dec
push
loopne
cmpsl
sub
sbb
lahf
adc
pop
stos
push
adc
jp
push
push
xchg
jp
lods
jns
test
or
mov
mov
pop
mov
add
cltd
dec
xchg
adc
aaa
mov
shr
out
clc
pop
jl
clc
iret
shl
outsl
movsl
jne
shlb
inc
add
mov
sahf
cmp
mov
jle
popa
mov
aad
push
aas
leave
icebp
pop
call
lea
scas
cmpsb
ja
data16
mov
jb
push
shrb
call
out
je
flds
aas
shrl
arpl
test
idivb
repnz
inc
ljmp
mov
xchg
sbb
cmc
mov
cmp
jmp
rcll
fcomi
mov
fwait
push
insl
mov
push
mov
fwait
movsl
pop
sub
in
sbb
fs
inc
rcrb
int
cmpsb
ljmp
sub
cmp
mov
dec
mov
test
jae
gs
stc
fists
test
mov
jecxz
push
jle,pt
xchg
cmp
xchg
movsb
jl
ficoms
jg
add
lahf
pushf
mov
in
xchg
rcrb
adc
jecxz
xchg
inc
jae
and
bound
rolb
dec
mov
push
sub
sti
cmp
adc
jmp
sub
mov
loopne
inc
dec
dec
pop
inc
jge
or
mov
xchg
popa
push
loope
leave
rorl
fcmovbe
arpl
dec
enter
movsb
cld
inc
filds
mov
jge
add
in
fsubrs
inc
push
jns
scas
fldl
mov
xchg
jb
je
jecxz
cmpsl
daa
out
or
std
lret
jg
mov
xor
mov
add
cmp
or
fistps
lea
test
in
sahf
push
in
inc
xchg
jae
in
mov
dec
lods
dec
cmp
ret
xchg
jp
test
std
loopne
mov
dec
mov
lcall
imul
push
loop
out
dec
dec
pop
je
add
aaa
loop
sub
bound
and
daa
jb
mov
inc
dec
outsl
cmp
sub
cmp
fstpt
pop
ret
sbb
push
scas
inc
cmp
dec
xor
out
les
js
dec
sub
test
repnz
pop
adc
add
inc
jmp
repz
cmp
push
push
imul
imul
adc
addl
inc
mov
jns
mov
lret
aaa
xor
mov
out
pop
lret
adcl
or
mov
fmulp
popa
into
dec
in
jb
ljmp
daa
sahf
add
movsl
jmp
imul
sub
in
or
mov
shlb
mov
fimull
aas
aas
cmp
and
jp
loop
mov
inc
xchg
popa
loope
nop
inc
jl
aam
repz
fs
insb
and
push
daa
orl
stos
xchg
in
rorl
int
movsl
jb
hlt
jns
add
mov
xchg
dec
aam
xchg
movsb
pop
xor
testl
and
out
push
int3
cld
push
inc
jbe
xchg
aam
sub
add
imul
mov
test
repz
enter
fsts
or
mov
sbb
sub
adc
cmc
movsb
or
in
ja
out
cmpsb
sub
jl
cmp
push
xor
js
mov
lahf
cs
popf
xchg
int
cmc
push
cmp
mov
pop
push
sbbb
leave
inc
vunpckhps
js
into
aas
mov
or
sub
mov
inc
inc
jnp
js
mov
fwait
push
out
jns
cmpsl
sub
jge
ret
out
addr16
pop
pusha
ret
xlat
inc
filds
shll
xor
mov
test
adc
insl
mov
and
jl
and
jae
mov
rcl
cltd
nop
inc
fstpl
sahf
addr16
scas
mov
add
loopne
roll
cmp
fs
pop
hlt
fs
mov
pop
fistl
or
les
jmp
lcall
mov
sbb
or
cmc
in
insb
mov
out
addr16
jnp
sarb
add
sahf
dec
outsl
adc
outsb
xchg
mov
pop
mov
jle
ret
sub
jne
cmp
mov
inc
in
frstor
loopne
cmp
aaa
adc
sbb
popa
and
cli
xor
xlat
loope
aaa
mov
xchg
mov
xchg
xchg
sub
xchg
inc
into
test
inc
push
popf
or
push
sbb
push
inc
cmp
mov
fs
icebp
mov
ret
inc
push
nop
sub
outsl
add
jp
xchg
push
xor
movsb
mov
xor
movb
adc
bound
and
jle
data16
and
mov
mov
sub
iret
adc
mov
inc
insl
sbb
or
mov
xor
sub
out
clc
xor
xchg
sbbl
adc
imul
mov
insl
loopne
sbb
mov
frstor
mov
sbb
jmp
jne
ja
out
jmp
jp
cmp
mov
aas
in
jge
ja
imull
dec
mov
xor
pop
lret
stc
incb
fists
ffree
sub
dec
out
sub
andb
mov
jg
leave
mov
fstps
jmp
and
mov
mov
je
cmc
movsb
sub
sub
or
shlb
in
add
push
les
inc
sub
sbb
notb
push
lahf
mov
lds
jnp
cmovp
add
adc
int
mov
out
mov
call
dec
mov
sbb
mov
push
ss
popf
pusha
add
and
cld
or
pop
xchg
and
xor
add
xor
pusha
push
mov
arpl
lods
dec
std
rcrb
fsubrl
ud0
pop
mov
sub
test
xor
jle
sti
fwait
mov
adc
cmpsb
ficompl
sbb
xor
das
hlt
add
adc
in
xor
sub
push
pop
xor
fs
xlat
dec
dec
ror
aas
add
aas
mov
pop
mov
add
imul
cmc
pop
add
cmp
addr16
jns
cmp
arpl
loope
stos
lock
shl
fcomp
cmp
mov
jp
push
fidivrl
sub
or
mov
sub
cmpsl
test
mov
es
int
inc
dec
aad
outsl
in
stos
push
jp
push
pop
leave
mov
pop
or
mov
push
lcall
pop
loope
xchg
idivb
pop
xor
inc
inc
jns
or
push
or
mov
sub
movsl
test
roll
jo
mov
push
inc
pop
cmp
or
inc
out
push
test
adc
pop
push
add
pop
xchg
loop
icebp
int
pusha
arpl
jae
pop
adc
fists
mov
ret
and
in
mov
lcall
mov
outsb
adc
sti
dec
in
pop
das
push
jge
imulb
arpl
pop
push
cmp
in
add
lahf
test
mov
mov
xchg
push
outsb
loopne,pt
mov
dec
inc
mov
imul
cli
out
sarl
stos
sbb
arpl
dec
shll
test
es
mov
shll
adc
inc
pop
movsl
mov
ja
push
iret
adc
cltd
pop
sub
mov
add
adc
enter
xor
rorl
xor
pop
lea
out
loope
adc
aaa
or
jl
dec
pop
xchg
fdivrl
fisubl
lret
repnz
inc
cmp
jns
dec
mov
sub
mov
xor
aam
gs
push
fs
mov
inc
in
sbb
jmp
push
adc
scas
fildl
mov
cwtl
add
pushf
aam
out
pop
mov
jle
push
in
sbb
nop
pusha
sbb
test
and
mov
aas
push
lret
fcoms
jns
dec
scas
xlat
sub
or
push
fld
stc
xchg
pop
roll
or
shll
daa
or
es
pop
xor
fcompl
inc
rcrb
mov
jle
jae
popf
xor
xor
inc
aam
movb
jl
pop
inc
icebp
push
je
jg
xchg
ja
jae
xor
ss
cmc
mov
mov
out
dec
or
sahf
inc
pop
movsl
out
jle
test
inc
in
mov
mov
add
jecxz
cltd
bswap
lds
jge
shll
les
wrmsr
out
jns
jbe
fwait
addr16
imul
lods
out
ljmp
stos
bound
ret
decb
pop
imul
dec
add
adcb
les
xchg
xchg
adc
gs
sub
test
out
jg
jb
lods
push
testb
stos
xlat
jg
add
dec
pop
mov
icebp
cmpsb
cs
and
ja
mov
arpl
roll
insl
mov
ret
movsl
jl
dec
stc
sti
leave
lods
aam
bound
enter
roll
inc
add
out
adc
enter
mov
fmull
adc
int
and
icebp
imull
out
je
inc
sbb
testl
fs
pop
lahf
sub
cmp
mov
adc
mov
xchg
jge
sbb
jo
bound
cs
roll
aas
shlb
dec
into
inc
leave
jbe
movsb
loope
xorb
inc
incb
lret
les
out
sbbb
icebp
pop
mov
popf
jle
call
sub
movsl
xchg
and
scas
bound
inc
cmp
pop
test
push
sbb
xor
pop
push
stc
stos
mov
ja
aas
bound
jbe
pop
fs
ss
dec
imul
mov
mov
mov
xchg
dec
arpl
mov
subb
jle
mov
addl
out
out
test
xlat
loop
and
mov
daa
rcrl
aad
scas
dec
jne
and
scas
jp
leave
daa
jbe
ret
sahf
mov
lahf
hlt
inc
stos
mov
les
jg
lret
jb
jne
or
out
lds
in
pop
test
xchg
mov
inc
add
push
fldcw
lds
push
push
inc
gs
mov
or
stos
loop
data16
je
mov
add
jb
xchg
mov
push
pop
ss
or
jnp
sub
mov
and
aaa
rolb
mov
jmp
pushf
out
mov
ljmp
xchg
adc
mov
lock
fdivs
cmp
fnstcw
jnp
fdivrp
dec
or
in
shl
int
fwait
fs
sub
imul
or
pushf
add
andl
sbb
aad
xor
out
or
xchg
js
daa
sub
cmpsb
aas
push
cmp
adc
repz
cmpsb
dec
cmpsl
cmpsl
test
arpl
aam
dec
push
call
mov
mov
xchg
xorl
dec
scas
ds
int3
xchg
insl
xlat
xchg
negl
jl
rclb
jecxz
mov
stos
lds
fcmove
or
lea
dec
aas
out
xor
mov
sbb
xor
mov
dec
cmp
rcrb
jl
out
push
ret
jbe
test
fs
jne
or
pop
arpl
mov
push
sbb
and
push
inc
pop
shll
pop
sub
imul
push
xor
ss
mov
add
daa
push
jge
jne
cmpsb
fwait
inc
shrl
into
dec
mov
jecxz
scas
push
sbb
es
fwait
jmp
ja,pt
xor
sbbb
loopne
add
mov
mov
and
dec
lcall
fcompl
imul
add
adcl
hlt
mov
mov
test
add
aam
mov
xor
dec
jnp
and
cmp
jo
mov
rcll
lock
xor
stos
jl
jle
sub
mov
cmp
cwtl
jbe
sub
inc
mov
inc
sahf
xchg
imul
push
mov
in
adc
cmp
jo
imul
lcall
mov
loope
sub
sti
dec
xchg
jg
pop
add
lahf
add
movsb
xor
les
cmp
mov
adc
pop
and
mov
inc
in
or
inc
ret
xor
movsb
scas
fs
pop
int
cmpl
sbb
mov
fadd
push
loope
bound
jnp
lret
push
dec
and
fisttpll
mov
test
push
int
fdivr
movsb
cmpsb
adc
cmc
pop
icebp
sub
adc
iret
dec
mov
push
push
sahf
push
pop
xor
decb
test
dec
mov
lcall
int3
repz
push
adc
testl
cltd
or
and
pop
ja
jo
mov
rcll
xchg
sub
mov
mov
jecxz
add
cmc
sbbl
aaa
sti
pop
cltd
int
out
jl
inc
mov
out
jge
insl
pop
scas
adc
pop
fcoms
and
rorl
add
mov
push
mov
test
xor
dec
cmp
call
imul
dec
fcompl
daa
leave
or
dec
xchg
lahf
inc
les
dec
sbb
in
and
cmp
and
ficoms
cld
push
out
or
roll
imul
cs
sahf
pop
arpl
and
sahf
mov
fidivrl
cld
push
test
pop
mov
pop
test
mov
ret
roll
in
out
pop
jecxz
cmp
sahf
pop
lods
push
xchg
sbb
std
lret
cmpsl
xchg
mov
ja
and
mov
gs
call
lahf
adc
jnp,pn
pop
inc
pop
or
cli
sbb
jge
mov
lock
movsl
addb
and
pop
or
and
in
push
adc
mov
outsb
jns
outsl
imul
mov
stc
or
mov
hlt
mov
call
stos
fidivs
pop
xchg
je
dec
xlat
cmc
adc
push
rclb
xlat
jne
pop
movq
fistpl
je
mov
shll
fistl
dec
push
daa
pop
xchg
jbe
insl
ds
sbb
push
dec
jnp
dec
std
fidivs
pop
aas
cmpsl
out
cli
mov
stos
es
sub
sbb
jp
scas
std
je
mov
outsl
xor
fcmovnb
push
cltd
ret
iret
test
out
mov
mov
add
push
movb
test
stos
or
sbb
cwtl
pop
and
lods
xor
popf
fsubs
jl
pop
cmp
ja
sbb
test
sbb
dec
mov
subb
filds
jb
jnp
pop
lret
imul
sub
imul
fisubrs
inc
inc
insb
xlat
cltd
in
insl
push
push
ret
inc
in
loop
je
aad
dec
out
sahf
adc
jmp
lods
and
shld
imul
ds
sbb
arpl
mov
adc
sbb
cmp
cmp
pop
scas
pop
sbb
mov
jae
pop
xlat
sahf
stos
sbb
pop
xor
add
icebp
cmp
mov
int
xchg
xor
inc
pushf
or
dec
out
adc
push
xchg
jle
pop
jge
je
sahf
les
pusha
lods
mov
outsl
sbb
data16
or
mov
loope
outsl
cmc
mov
stos
aaa
imul
out
mov
jge
inc
fiaddl
push
insb
jmp
es
repz
inc
push
inc
jbe
mov
test
pop
mov
test
xchg
fidivl
stos
adc
xchg
hlt
mov
in
or
stc
mov
adc
cld
jge
loopne
call
inc
xor
arpl
andl
cli
adc
sub
dec
iret
sub
mov
xlat
ficomps
adc
jle
xor
aad
adc
xor
xchg
adc
shll
pop
jle
jo
or
add
inc
pop
jge
pop
aam
jle
jp
jns
fists
and
sbb
jle
mov
lcall
repnz
add
and
addr16
and
xchg
pop
repz
mov
jno
mov
frstor
mov
fwait
mov
mov
push
mov
stos
subb
mov
pop
jge
shrb
mov
subb
pusha
hlt
cmp
adc
fucomip
mov
lret
repnz
sbb
push
cmp
jmp
xchg
sub
cmc
push
dec
test
hlt
cld
mov
jp
push
inc
cmp
sbb
and
jg
lock
imul
inc
arpl
push
mov
or
fidivs
cli
test
mov
mov
clc
cmpsl
inc
mov
xchg
mov
cli
sub
xlat
mov
add
aas
mov
add
or
bound
pop
mov
aam
inc
mov
push
lds
pop
xlat
xchg
dec
cmpsb
mov
and
dec
icebp
jle
dec
aaa
jno
testl
or
xchg
xchg
adc
sar
lahf
out
jae
mov
fistpll
lahf
sar
jle
ja
xchg
out
iret
jae
lret
dec
xchg
xchg
mov
or
mov
dec
std
cmp
inc
mov
fnstsw
fisubrl
inc
shrl
dec
movsb
mov
push
cmpsb
scas
mov
aas
inc
inc
push
iret
push
inc
adc
out
sbb
xor
loop
int3
jne
mov
ss
jl
inc
icebp
xor
jnp
xchg
mov
sbb
or
cmp
popa
test
or
call
hlt
ret
aad
insl
shl
rcrb
ss
or
mov
jae
and
dec
and
sbb
xchg
jle
mov
and
and
mov
ja
into
popf
mov
pop
lods
add
ljmp
jle
jp
and
or
icebp
or
sub
ss
jl
sbb
cmpsb
inc
scas
aam
dec
in
dec
cmp
cltd
push
ja
pop
shrl
std
xor
add
andb
sub
xchg
in
xchg
jecxz
clc
stos
insl
mov
xchg
jnp
repz
das
xor
out
pushf
push
repnz
mov
call
mov
cmp
xchg
push
loopne
out
push
sbb
jno
test
enter
aas
cmpsl
xor
mov
les
clc
nop
xchg
into
xchg
fisttpl
jnp
add
dec
add
pop
push
hlt
fs
fwait
xchg
mov
lods
add
movsl
cmpsb
jns
sub
rcrb
jo
in
push
pop
adc
and
stc
sbb
aas
mov
popa
dec
dec
sahf
mov
rcl
push
repz
hlt
add
jle
repnz
and
dec
cmp
stc
loope
cwtl
lea
mov
into
mov
inc
or
lods
loopne
das
cmp
es
and
inc
shlb
test
mov
cltd
roll
add
aaa
aad
xchg
and
enter
fisubrl
adc
aaa
xor
mulb
lcall
loop
mov
lret
movsb
cmpl
jp
xchg
nop
call
sub
jle
test
daa
shlb
xchg
bound
mov
inc
daa
insb
cmp
sbb
xchg
fisttps
push
mov
fmull
push
rcrb
out
rcll
aam
jge
dec
adc
arpl
fisttpl
inc
xchg
mov
xor
lods
das
push
xchg
mov
jno
mov
testw
imul
int
jmp
hlt
inc
mov
jae
or
inc
sub
xchg
inc
push
jge
mov
stos
mov
scas
sahf
cmpsb
in
cmpsl
test
xor
jb
dec
dec
jns
sbb
mov
xchg
cmp
pop
sub
pushf
inc
gs
test
ds
es
xchg
dec
jg
insl
mov
cmp
hlt
and
jge
mov
inc
and
jb
ret
mov
loope
incb
mov
ret
fcomi
sbb
push
int3
nop
fstpl
mov
enter
adc
scas
dec
orl
cmp
loop
fcomps
out
mov
jb
mov
jg
adc
adc
lcall
out
insl
int
inc
sahf
sub
sub
mov
incl
dec
out
decl
or
pop
jnp
fsubrl
xchg
or
pop
vandnps
adc
push
jle
push
jb
mov
call
pushf
xlat
in
rol
dec
out
inc
dec
and
dec
fldcw
insb
push
pop
mov
fsubrs
fs
rorl
xor
lds
sbb
cmc
leave
into
mov
test
or
push
xor
add
aad
outsb
stos
sub
hlt
sub
fisubrl
cmpsl
test
push
fiaddl
mov
mov
cltd
pop
add
push
dec
pop
push
cld
pop
sub
fistpl
pop
icebp
mov
xor
stos
sbb
jle
xor
pop
mov
xlat
sub
fdivp
jno
jnp
sub
jae
mov
insl
bound
add
inc
hlt
idivb
dec
push
ficoms
cld
in
mov
jnp
and
pop
xor
inc
ficoms
cmp
insl
cmp
test
aad
jo
xchg
not
lcall
in
push
cmc
xor
popa
mov
xchg
mov
pop
xlat
movsl
bnd
ss
add
push
mov
push
das
adc
addr16
mov
jecxz
jo
movb
cmc
loope
ja
push
push
test
call
inc
inc
sub
jne
or
sub
adc
fwait
sti
cmp
jmp
cltd
je
test
shr
stos
sbb
fisubl
fimuls
lret
inc
xor
inc
pop
push
mov
notb
roll
daa
adc
lret
call
mov
inc
mov
jnp
test
lahf
call
in
pop
scas
decb
fdivrs
stos
in
pop
xlat
es
dec
sub
movsb
ds
jl
jle
push
xchg
imulb
fwait
add
popf
fxtract
add
cmp
add
xlat
mov
popf
into
call
push
mov
pop
jg
fs
call
stos
push
mov
pop
push
mov
shrb
mov
add
mov
xchg
xchg
push
push
push
repz
adcl
pop
lods
push
call
in
xchg
mov
cmp
inc
stos
pop
add
sub
inc
mov
cmp
dec
xchg
insl
lea
inc
mov
je
iret
mov
push
test
mov
inc
lret
imul
lods
mov
sub
popa
mov
pop
pop
insb
or
dec
sbb
pop
movsl
fninit
jg
mov
xchg
out
push
push
dec
mov
ss
outsl
push
xlat
inc
and
subb
push
push
daa
out
cld
inc
xchg
into
dec
adc
pop
test
loopne
push
in
cmc
stc
inc
inc
aaa
mov
fmuls
adc
sub
mov
jns
les
jnp
or
stos
outsb
xchg
sub
fs
adc
insl
stc
fidivs
push
insb
sub
mov
hlt
mov
inc
sub
test
cmc
pop
sub
and
jl
dec
fildl
in
or
loope
mov
xchg
add
movsb
push
rorl
mov
subb
ds
jecxz
cmpsb
push
or
push
xchg
aad
nop
fstl
pop
and
push
movsb
sbb
mov
cltd
jge
lret
jns
pop
aas
cmp
mov
sbb
mov
xchg
sbb
cli
lods
mov
clc
and
loop
stos
sbb
fwait
dec
lret
pop
sbb
shll
imul
inc
jmp
sub
mov
jg
sahf
pop
sub
in
rcrl
jb
lods
js
mov
mov
add
mov
call
cld
dec
pop
addr16
leave
scas
fwait
stos
scas
repz
test
std
arpl
mov
cld
jns
dec
push
add
aad
das
loope
addl
icebp
xor
loopne
jne
repz
sbb
jo
outsl
or
pushf
adc
out
jae
aam
jne
jae
imulb
push
fcmovnbe
nop
add
repz
mov
mov
dec
dec
cmp
mov
insl
loopne
inc
lea
push
lock
je
imul
into
out
or
lods
jne
shlw
dec
stc
adcb
mov
lods
xor
push
out
movsl
stos
fcmovb
nop
in
xor
pop
dec
enter
js
push
ss
lea
mov
or
out
or
bswap
mov
cmp
add
loopne
mov
xchg
out
jl
sti
xor
or
sub
add
hlt
shrl
jl
in
rclb
inc
xchg
inc
mov
sub
jae
or
out
stos
adc
add
mov
fstp
int
and
fsubr
pop
in
mov
rorb
adc
jo
aas
pop
test
test
data16
pushf
lcall
lds
fmul
je
and
outsb
and
lahf
loopne
cmp
movsb
dec
loopne
adc
scas
rol
hlt
scas
ret
repz
cmp
repnz
push
mov
insb
jle
call
add
sub
pusha
add
inc
imul
fwait
jne
mov
repnz
push
dec
mov
inc
clc
gs
lock
adc
in
ja
aam
cmpl
lods
and
pop
pop
pusha
push
mov
pop
or
cmp
jp
rorl
mov
cmpsb
shl
popl
sahf
loope
jno
hlt
mov
or
mov
shll
pop
je
pop
xchg
add
jp
dec
push
cmp
xlat
shrl
inc
add
gs
push
cmc
pushf
rolb
ljmp
cmp
stos
push
rorl
lret
inc
mov
and
loop
popa
out
inc
popf
int
dec
xor
into
cmpl
mov
jmp
push
and
sbb
add
sub
subb
sbb
testb
mov
imul
inc
out
sub
outsb
pop
or
mov
mov
cs
lea
lcall
sahf
and
cmp
pushf
mov
mov
mov
push
cmpsl
mov
ja
mov
scas
cmpsl
mov
addl
push
pop
mov
shlb
rcll
push
pop
in
lcall
fwait
imul
xchg
in
mov
mov
jne
loope
js
jae
arpl
cmp
mov
xor
jecxz
cmpsl
addr16
ret
dec
movsl
fwait
pusha
in
test
out
mulb
test
outsl
xor
mov
sub
addr16
int
cmc
test
mov
adc
outsl
cwtl
or
or
or
push
pop
xchg
cld
inc
enter
or
stos
push
mov
adc
pop
mov
sbb
test
inc
mov
fdivs
jg
inc
dec
inc
inc
mov
loop
mov
xchg
mov
cmp
dec
fs
mov
cmpsl
sub
mov
and
adc
in
outsb
cmp
stc
push
popf
in
jo
lahf
ret
cmpsb
bound
sbb
xor
inc
dec
cmp
cmpsl
mov
sbb
movsl
daa
fsubs
dec
leave
cmp
mov
push
jo
sti
rcl
xchg
push
cmc
sub
push
mov
jp
test
add
enter
imul
test
dec
rcll
mov
or
mov
mov
call
xchg
aam
cmp
adc
addr16
adc
cltd
mov
mov
cmp
dec
cltd
outsl
push
push
stos
fsts
ficomps
ficomps
cs
jp
lods
pusha
ljmp
xor
jle
jb
pop
ret
cwtl
xchg
lods
mov
cmc
in
add
mov
xor
aad
movsl
add
pop
call
push
or
nop
rorb
das
add
add
inc
cmpsl
sub
cmc
faddp
cmc
nop
cmpsl
ljmp
insb
mov
jae
addl
movsl
testb
fists
repnz
cmp
sbb
pop
xchg
insl
popa
jl
popa
arpl
cmp
dec
inc
sahf
jo
vmwrite
xchg
mov
es
shll
popa
movsl
add
mov
or
std
ret
addb
repnz
jns
loopne
mov
stos
or
ret
mov
scas
or
loope
mov
stos
sahf
xor
cmp
or
lcall
sbb
iret
test
mov
push
xchg
je
fs
fld
jecxz
mov
and
xchg
imul
pop
pop
cmp
push
scas
and
daa
xchg
ret
dec
stos
dec
cli
sbb
bound
inc
aaa
clc
in
mov
cmpl
pop
popa
movnti
xchg
push
sub
push
cld
adc
mov
cld
xor
jno
dec
fcoms
mov
mov
push
and
mov
push
or
xor
xchg
fistpl
sbb
aaa
sbb
fimuls
fisttpll
jecxz
test
out
andl
stos
mov
bound
pop
and
call
mov
sub
cmp
insl
and
jmp
lcall
jl
out
icebp
clc
or
cmp
fnsetpm(287
cli
mov
mov
rorl
lock
shlb
sbb
inc
sahf
pop
pusha
imul
jb
scas
in
mov
dec
sub
inc
push
es
mov
fs
cltd
xor
jge
aaa
sub
nop
sbb
push
sbbl
push
push
sub
sub
cmp
sbb
insb
inc
sbb
inc
or
out
test
push
ja
add
icebp
cmp
cs
cmp
xor
repnz
imul
jns
repz
xchg
sub
out
jg
inc
push
mov
sub
bound
mov
arpl
loop
les
mov
cmp
cmc
enter
pop
mov
jnp
sahf
cmc
or
subl
sbb
sub
mov
lret
ret
pop
mov
lret
and
cmpsl
cld
out
mov
aaa
inc
clc
xor
sub
lret
cmp
popa
negb
push
add
mov
xchg
cmovae
push
mov
insl
jb
lret
push
mov
mov
cmp
pop
pop
dec
ss
popa
sub
cmp
movsl
inc
fidivs
push
dec
ficoml
lock
push
stos
push
aas
test
psrlq
sbb
adc
xchg
xlat
ds
loop
subb
dec
negl
arpl
push
dec
add
lret
mov
add
cltd
loope
adc
mov
inc
pminsw
xor
lahf
mov
jmpw
xor
sbb
or
xor
sbb
or
xor
test
sub
sahf
adc
mov
test
push
stos
mov
sub
pusha
ds
arpl
out
mov
mov
dec
or
outsl
out
sub
dec
shrl
jp
cmp
mov
fbstp
mov
mov
je
sbb
movsb
int
outsl
push
fnsetpm(287
repz
cmp
scas
shlb
sbb
rol
push
mov
cltd
cltd
adc
adcb
jg
pop
push
aad
int3
pop
out
shl
test
xchg
jp
insb
fistpl
mov
cmp
dec
movsb
cmp
xchg
insl
aas
dec
movsl
hlt
cmpsl
lcall
sbb
mov
addr16
or
mov
loop
cmpsl
shlb
ror
mov
mov
mov
push
jp
push
fs
jno
mov
outsb
mov
loopne
and
js
adc
inc
xchg
jle
cld
fdivrp
push
mov
mov
add
movsl
lods
push
xchg
je
ret
movsb
stos
push
movsl
mov
scas
jno
pop
addr16
aad
cmp
std
popa
add
ret
sub
mov
rol
sub
das
mov
sbb
insb
mov
lahf
lea
xlat
das
sbb
aaa
out
or
xchg
push
sbb
lods
dec
cmp
xor
movsb
mov
inc
in
cmp
pop
mov
mov
js
gs
outsl
jl
outsl
out
insb
cmc
lds
jnp
and
jne
or
jno
xchg
insl
scas
shll
sahf
adc
sti
out
mov
stos
xchg
or
sub
mov
xor
push
pop
inc
mov
dec
aaa
mov
movsb
je
int
andb
test
fcmovb
daa
pop
xchg
orl
mov
ljmp
mov
out
jl
sbb
xchg
jl
ljmp
ds
fcoml
cmp
jge
push
leave
xchg
xchg
scas
fcoml
cmc
sbb
nop
xchg
sub
orb
xchg
mov
rclw
divl
rcll
loopne
rorb
cmp
adc
lahf
cmp
adc
xorb
jl
inc
lds
mov
cmp
aam
mov
sub
outsl
xlat
stos
mov
add
sub
rorb
xor
js
cmp
sub
xchg
sub
arpl
shlb
ret
adc
shl
andl
hlt
xor
dec
shl
mov
rcl
es
ja
and
sbb
mov
cwtl
mov
adc
data16
push
pop
cmp
cltd
int
xor
fstpt
into
ss
or
ja
xor
fisubl
and
dec
in
mov
xchg
cltd
push
lret
xor
fdivr
sub
or
mov
lcall
xor
aam
cmpsb
mov
lds
mov
inc
push
lcall
sbbl
dec
push
paddsw
mov
int
aam
cmp
pop
scas
cwtl
repnz
pop
test
sbb
adc
lods
sub
mov
and
test
lret
xchg
mov
or
mov
aaa
shll
dec
and
xor
and
leave
xchg
cmp
addr16
pop
or
sarb
add
or
mov
fdivl
adc
stos
add
pop
or
shrb
stos
cwtl
inc
push
sub
lret
pop
mov
sbb
push
sbb
mov
mov
gs
dec
addr16
mov
mov
shlb
cmpsl
cmp
inc
xchg
cmpsl
cli
insl
mov
test
dec
adc
cmp
pop
or
js
fldl
lods
cli
push
sub
jbe,pt
sahf
xor
dec
stos
fmull
sbb
sbb
dec
push
out
lock
sbb
sub
lahf
mov
inc
out
in
jmp
gs
arpl
incb
xchg
push
lds
xchg
aas
sub
iret
imul
js
mov
cwtl
js
adc
insb
xchg
xchg
outsl
test
fcomip
push
cmpsl
loope
repnz
out
loope
inc
mov
loop
mov
xor
lahf
lret
pop
lods
popf
mov
out
sub
pop
dec
mov
jb
scas
jl
addr16
mov
lds
pop
int
xchg
jno
imul
pop
lret
in
mov
pop
inc
mov
lea
cltd
inc
pop
stos
jecxz
lcall
xchg
xor
filds
ljmp
cs
mov
mov
mov
movsl
rcrb
subb
mov
in
push
hlt
adc
inc
repnz
jbe
jo
stos
dec
jecxz
fdivrl
sub
mov
pop
sbb
scas
xchg
dec
test
add
insb
out
mov
add
test
out
ljmp
pop
pop
and
pop
pop
cltd
imul
jl
mov
pop
sub
xor
ret
jp
ljmp
mov
jmp
incl
std
mov
and
addr16
outsb
adc
das
push
movsl
add
xlat
push
movsb
jecxz
adc
cmp
inc
or
pop
lds
iret
cmp
pop
mov
popa
and
jmp
mov
jle
test
cmpsb
push
adc
push
cwtl
mov
outsb
pop
sbb
mov
mov
sbb
inc
sbb
pushf
pop
out
test
dec
push
sti
movsb
fs
subb
mull
in
cmpsl
js
add
ljmp
lea
xchg
out
xchg
rcrl
push
fildl
mov
or
cmp
mov
xchg
repz
rcll
jl
adc
fcmove
out
mov
pushw
ss
lds
jle
push
inc
jb
mov
push
xchg
or
lret
pusha
cmpsl
es
or
dec
add
mov
pop
pop
je
sub
imul
lahf
dec
aaa
cmp
into
push
push
mov
pop
or
jp
xchg
loopne
inc
jns
stos
lcall
loopne
xor
adc
lods
jns
push
movsl
add
push
add
xor
jae
cmpsl
scas
hlt
mov
xchg
divb
call
pop
pusha
lret
adc
or
sarb
xor
scas
adc
enter
idivb
in
inc
loope
or
test
cmpsl
jo
add
cltd
int3
xchg
mov
negb
subb
adc
mov
leave
xchg
fistl
pop
scas
test
mov
insb
jp
fnstcw
je
mov
or
jmp
sub
or
ret
outsb
mov
mov
push
inc
enter
js
orb
iret
jg
mov
jnp
repz
push
sbb
jle
sub
cmp
xor
cmpsb
pop
in
mov
orb
test
lahf
leave
rcl
js,pn
repz
mov
or
bound
ja
mov
testl
sti
shll
fs
pop
clc
repnz
test
or
pop
je
sub
sub
repz
daa
jne
call
orb
lret
andb
fdivr
lods
add
imul
mov
cld
ror
xchg
imul
mov
mov
gs
and
call
push
jmp
cmpsb
imul
mov
fwait
bound
mov
insl
inc
push
inc
pop
andb
shll
out
nop
sbb
pop
call
fs
imul
shrb
int
xor
jnp
mov
push
addr16
aad
xchg
sarl
push
shll
dec
jno
xchg
es
out
repnz
out
pusha
push
dec
sarl
push
ret
push
and
push
stc
or
hlt
dec
lods
rcr
jnp
xchg
popf
xor
loopne
pop
jbe
test
icebp
xor
jbe
shrl
sbb
ret
test
xlat
or
mov
sub
push
movsl
push
out
sbb
mov
mov
fdivrl
pop
adc
fwait
jge
out
jae
vmovaps
and
clc
insb
enter
bound
fldt
mov
jl
out
in
jb
inc
pop
cmp
push
fiaddl
stos
repnz
xchg
add
push
or
mov
fdivrs
lea
dec
repz
enter
fdiv
and
pop
es
shrb
or
clc
mov
push
pop
and
in
popf
cmp
negl
in
inc
loope
adc
mov
push
sub
mov
sub
jmp
test
scas
sarb
cmpsb
push
popf
mov
ds
imul
scas
cmp
pop
adc
adc
or
and
fsub
ror
clc
mov
jns
push
fdivrl
sub
mov
orl
lock
mov
push
ljmp
loope
imul
dec
fdivrp
jmp
and
or
lods
lahf
scas
or
pushf
sub
fistl
mov
sub
push
push
fdivr
dec
or
pop
mov
bound
xor
push
repz
and
divb
idivb
fwait
cmp
xor
sti
mov
pushf
je
push
push
sahf
pop
xor
es
dec
pop
lods
and
sbb
jo
add
jecxz
adc
out
bound
pop
or
adc
cltd
shl
mov
cs
jno
push
jnp
icebp
arpl
push
imul
out
push
push
push
mov
mov
jne
aaa
mov
mov
sbb
cmpsb
lock
adc
fucomip
nop
out
cmc
dec
mov
dec
sarl
psllq
jmp
xlat
push
mov
in
add
jne
adc
shrb
lods
add
ffreep
shrb
pusha
xor
loop
js
lods
leave
mov
test
sbb
imul
shll
mov
loop
sbb
push
add
cmpsb
jne
insb
pop
cmp
jns
insb
jl
enter
cmp
les
aad
xor
loopne
inc
dec
mov
lock
pusha
fidivrl
mov
ret
ds
xor
cmp
cltd
fistpll
and
inc
dec
sub
inc
adc
cmp
xchg
xchg
push
sub
in
sub
xor
adc
pop
lcall
or
cmpsl
mov
push
loope
cwtl
mov
sub
mov
addr16
imul
hlt
fs
dec
test
add
shrb
test
add
push
push
push
mov
jge
mov
dec
orb
arpl
push
mov
insl
test
pusha
pop
dec
movsb
jne
xor
pop
in
addr16
cmp
repnz
imul
fisubrl
xchg
fwait
leave
xor
sub
mov
inc
es
pop
hlt
dec
enter
mov
int
hlt
xchg
sahf
xchg
popa
into
xor
das
sub
scas
sub
inc
adc
dec
popa
cmp
adc
wrmsr
cmp
xor
sub
pop
mov
jle
jge
xchg
es
cmp
scas
sahf
arpl
pop
outsb
push
scas
push
addr16
addb
push
xor
xor
push
addl
adc
fxch
push
cmp
add
add
test
xchg
inc
jecxz
popa
jb
into
loopne
stos
mov
out
scas
popa
iret
or
push
xchg
out
jne
xlat
add
mov
sti
mov
or
enter
jno
in
cmc
lret
sub
dec
dec
xchg
add
popf
inc
xchg
jae
ss
push
int3
dec
enter
add
xchg
cltd
dec
cmpsl
push
in
test
adc
outsl
sbb
mov
cmp
pop
adc
and
imul
leave
push
popf
and
jl
andl
cmp
ss
les
dec
pop
push
cltd
mov
movsl
jno
sub
and
outsl
les
imul
fwait
sbb
inc
push
out
dec
lods
outsb
lret
mov
out
cmp
jge
in
or
pop
mov
inc
outsl
mov
mov
int3
xchg
mov
inc
lods
mov
in
adc
add
sbb
fisttpl
pop
mov
mov
push
sub
mov
addr16
dec
cmpsl
cmpsb
outsb
push
dec
xchg
movsb
mov
fadd
clc
xchg
adc
xor
iret
popa
jb
js
pop
mov
xchg
imul
ret
rcr
fisttpl
lahf
push
clc
xchg
addb
push
mov
sub
inc
addr16
jle
pop
test
cli
test
popa
jne
fwait
lods
mov
cld
pop
cmpsb
xor
add
subl
jl
imul
stos
or
push
in
lret
icebp
jbe
jp
inc
fdiv
pushf
addr16
lock
test
gs
pop
lea
aam
es
mov
jl
outsb
sbb
mov
adcl
test
js
and
lods
mov
jecxz
test
cmp
call
popf
sahf
outsb
repz
xlat
sti
lock
ja
jmp
cmpsl
jno
addr16
sub
cld
cwtl
stos
icebp
pop
lock
loope
test
inc
ljmp
cmp
leave
jp
imul
sub
popa
jo
jno
repnz
pop
add
adc
icebp
xor
lock
aas
adc
add
xchg
sti
xor
jp
outsl
or
aad
push
cmp
sub
stos
inc
mov
mov
data16
fisubl
xchg
dec
jecxz
dec
mov
mov
hlt
das
mov
and
lock
test
xchg
or
pop
adc
and
adcl
xor
mov
jnp
inc
adc
cmp
pop
jg
jge
xchg
xchg
test
mov
mov
xlat
and
adc
lahf
daa
ret
pop
sub
jge
cltd
xor
cs
daa
out
cmpsb
and
adc
inc
jo
xchg
leave
imul
xor
in
inc
aaa
sahf
xlat
repz
cmp
jge
pop
scas
mov
clc
negl
pop
lea
ja
mov
cmp
std
adc
scas
clc
pop
out
les
fidivrs
cmp
aam
dec
enter
aad
jne
inc
shrb
inc
add
pop
mov
cld
and
pop
push
inc
mov
das
xor
jecxz
std
inc
int
xor
mov
mov
in
addr16
jmp
aas
cmpsb
clc
shrb
jmp
icebp
xchg
pop
mov
in
or
and
cld
outsl
push
call
mov
daa
mov
mov
les
in
enter
jno
dec
inc
mov
sub
ror
mov
dec
leave
mov
test
movsb
pop
xchg
jnp
add
pop
sub
jbe
inc
adcl
jge
xor
out
add
sahf
inc
popa
pop
leave
enter
test
cli
sub
xor
and
inc
adc
pop
xor
inc
pop
and
nop
jl
dec
mov
ja
je
push
push
cmpsl
lret
repnz
imul
jne
xor
xor
xlat
pop
cmpsl
aad
std
push
sbb
call
mov
sub
shrl
mov
pusha
pop
pusha
outsl
cmp
lods
pop
imul
rcrl
cmp
fdivl
sbb
inc
dec
pusha
gs
rorb
nop
cmp
test
pop
push
es
and
nop
out
lods
data16
sub
loop
stc
jb
xchg
popa
add
shll
sti
pop
push
rolb
jb
test
inc
jl
mov
or
in
mov
dec
movsb
fs
std
lds
stos
add
mov
insl
aad
cld
paddusb
hlt
pushf
lret
xchg
ss
in
jae
bound
pop
ret
pop
push
lock
inc
jne
rclb
arpl
mov
ljmp
mov
lahf
lcall
mov
popa
inc
lods
adc
fstl
mov
inc
aam
in
addr16
cli
add
clc
clc
jbe
mov
stc
xchg
pop
mov
popa
mov
add
jae
or
movb
outsl
out
add
icebp
push
pop
lahf
or
sub
xor
sbb
out
popf
xor
scas
xchg
xlat
push
pop
cltd
push
dec
push
jle
enter
lds
xchg
push
arpl
mov
lret
movsb
mov
aaa
cmc
xchg
or
out
fnstcw
out
push
mov
sub
push
add
adc
dec
xor
inc
push
jmp
sub
mov
aad
outsl
mov
xor
jne
jbe
sbb
in
loope
hlt
int3
ret
inc
dec
xchg
pop
or
inc
mov
fwait
out
or
push
pop
dec
pusha
jno
loopew
and
test
psrlq
ror
out
outsl
mov
inc
fcompl
sub
sbb
xchg
push
enter
mov
das
div
adc
mov
ret
loope
out
ljmp
pop
hlt
stos
test
mov
shll
lock
shlb
inc
jg
mov
lcall
xchg
popa
shrb
enter
adc
lock
mov
lea
movsl
adc
add
daa
push
mov
icebp
add
mov
jns
incl
adc
xor
pop
imul
scas
movsl
xor
add
aad
add
adc
adc
dec
call
out
sbbl
mov
mov
mov
iret
cmp
mov
sahf
jmp
sub
daa
pop
imul
cmp
in
sub
js
xlat
cmp
xchg
pop
js
dec
test
stos
cmp
cmp
fdivrl
and
jns
cltd
int3
or
adc
xchg
adc
xchg
jbe
cwtl
fnsave
pop
push
xchg
mov
mov
loope
int3
jo
cmpsb
jbe
ret
mov
loopne
fidivrs
inc
cld
xchg
rorb
faddp
pop
fmull
mov
adc
xchg
bound
repz
push
cmpl
shl
aam
les
cmp
xchg
stos
add
push
data16
sub
fimuls
jo
cmp
fwait
lods
std
xchg
inc
mov
test
jle
int
sti
cli
int
int
xchg
cmp
dec
test
clc
bound
movsl
push
insl
mov
inc
in
ds
movsl
cwtl
push
stos
push
fcomps
int3
xchg
lret
xor
ret
mov
mov
xor
pop
dec
mov
xchg
inc
lods
jg
add
pop
inc
shll
daa
sar
cmp
das
aas
mov
sbb
mov
pop
pop
fisubl
js
mov
ret
pusha
mov
stos
test
mov
add
aam
sub
sub
sub
mov
inc
mov
jno
pop
and
mov
not
mov
rcrb
std
mov
mov
mov
outsl
int3
test
je
mov
bound
cmpsb
xor
subb
imul
mov
lods
lods
jnp
cwtl
push
ja
mov
adc
mov
gs
push
inc
pushf
stos
ljmp
repnz
sbb
fimull
xchg
mov
lds
test
mov
fsubrl
popf
mov
fsubrl
mov
cs
xlat
xchg
cmp
mov
movsl
jno
stos
decb
fsubrl
repnz
lcall
push
pop
loop
jge
mov
jb
inc
stos
or
ret
adc
insl
lret
pop
pop
testl
xchg
shrb
int
dec
inc
mov
push
lds
xorb
lret
mov
and
pop
repnz
cmc
les
xchg
test
in
jecxz
adc
dec
in
push
mov
test
xlat
or
popa
mov
popa
cmp
cmpsl
rcrb
test
push
dec
popa
inc
mov
icebp
mov
dec
mov
test
xor
xor
push
shrl
std
ds
shll
int3
dec
jmp
imul
popa
cmp
imul
aas
out
sbb
cli
dec
loop
jmp
mov
in
lods
roll
mov
mov
lea
sbb
mov
cmp
jp
mov
rol
xor
jle
push
and
mull
scas
cmp
jg
data16
ds
cmpsl
out
xor
call
mov
or
push
insl
cmpsb
pop
shll
repz
xor
xchg
xchg
ss
leave
into
fistpl
in
ja
push
jecxz
icebp
lock
pop
icebp
in
sti
xchg
mov
jle
lods
arpl
xor
test
enter
push
pop
push
sti
xlat
sub
cmp
xor
and
mov
cmp
aas
pop
cmp
in
int3
out
out
stos
xchg
cmp
xchg
sub
jnp
dec
out
xor
leave
shll
push
ficoml
enter
cmp
jnp
das
and
mov
mov
adc
data16
hlt
and
leave
sbb
stos
mov
cwtl
sub
pop
movsb
outsb
pop
movsb
outsb
jle
inc
dec
fs
cmp
push
jmp
mov
fidivrl
mov
mov
cltd
aam
mov
mov
das
push
jno
cld
pushf
push
lahf
push
arpl
sub
and
xor
sub
lahf
je
xor
mov
cwtl
pop
inc
push
cld
cli
sub
inc
and
fs
cld
dec
fs
sarl
icebp
push
and
mov
mov
ss
std
hlt
sub
push
lret
mov
aaa
mov
in
pop
pop
fcoms
push
gs
bound
xchg
xchg
incw
cmp
lret
sbb
jbe
bound
in
faddp
mov
adc
xchg
arpl
into
inc
lods
lahf
arpl
and
into
inc
insb
or
out
jbe
inc
inc
sub
ds
loop
int
mov
mov
inc
adcl
shr
insl
in
and
mov
into
push
inc
fstpt
pop
sbb
sub
dec
lds
ret
mov
repz
pop
xor
loop
fs
cmp
ja
sahf
jae
incb
xor
aaa
cmp
mov
xchg
sbb
aas
fiaddl
mov
dec
mov
push
insb
out
repnz
jl
stos
sub
pop
mov
sub
in
shl
sbb
jp
mov
and
in
mov
dec
les
sbb
pop
jl
ret
dec
cmp
in
test
jp
pop
jne
ret
es
jnp
ret
dec
cmp
in
test
jg
pop
ret
daa
imul
mov
mov
mov
pop
scas
imul
xlat
mov
jnp
jnp
scas
imul
mov
jb
mov
push
pop
push
dec
aas
cmp
mov
push
loope
rcrl
mov
xchg
outsl
ljmp
js
fildll
inc
test
inc
movsb
fistps
jns
inc
xchg
xchg
adc
or
out
xchg
and
mov
filds
ds
ret
jns
fildll
pop
mov
mov
js
cmpsb
cmp
pop
jg
mov
pop
jle
pop
jecxz
sbb
loopne
pop
and
jl
cmpsl
add
in
pop
or
add
sub
pushf
movsl
adc
cmpb
mov
addr16
fildl
movsl
mov
dec
inc
movsl
hlt
push
mov
ret
sub
xchg
pop
fildl
cmp
dec
fwait
pop
jge
inc
cltd
fldt
pop
je
mov
push
ljmp
repnz
imul
sbbl
jmp
cmp
jp
push
and
mov
movsl
inc
sub
es
lahf
int3
shr
push
fld
dec
jl
push
lret
pop
push
cmpsb
sub
je
push
or
loopne
std
sbb
adc
lcall
ret
push
push
out
movsb
je
stos
into
cmp
add
pop
xchg
pop
push
pop
insl
lods
inc
inc
cmp
mov
dec
enter
adc
lock
sbb
mov
inc
mov
mov
ret
adc
cs
xor
lods
dec
pop
imull
jecxz
in
xchg
movsl
mov
jl
lret
pop
shrl
adc
add
mov
movsl
clc
andb
loop
mov
outsl
jae
jge
lods
lds
jns
gs
popa
add
lds
shrl
test
data16
and
mov
rcrl
fmul
dec
cmp
mov
movsb
addr16
sub
mov
addr16
inc
pop
test
out
movsb
enter
sub
loopne
push
push
inc
cmp
pop
movsl
insl
add
sbb
int
pusha
xchg
adc
mov
fucomip
inc
jmp
mov
int3
test
xchg
sbb
jbe
fld
subl
push
mov
mov
sbb
enter
mov
lds
sub
sub
xor
pop
mov
movsb
jg
adc
inc
mov
dec
sbb
xlat
mov
jns
shr
pop
pop
push
sti
stos
notl
inc
mov
jge
iret
test
adc
push
push
lcall
hlt
daa
hlt
push
fildll
jge
fbld
push
decb
insb
mov
mov
sbb
adc
je
pextrw
pop
out
dec
xchg
int
or
cmp
xchg
push
push
pusha
xor
packssdw
xorps
or
call
out
into
fists
xor
call
cmpsb
rcrl
inc
aam
popf
cmpsl
adc
cmp
push
add
lock
shlb
dec
outsb
loop
lods
outsl
ja
xor
add
shrb
std
xor
imul
push
ret
cmpsb
enter
sub
insl
xor
xchg
popf
arpl
lea
add
imul
lret
outsl
leave
cmpsb
push
push
push
das
daa
cli
sub
frstor
in
cmp
stc
cmc
imul
iret
pop
int3
loop
adcl
lods
mov
mov
push
sahf
cltd
nop
rclb
xor
int
cmp
inc
mov
out
je
or
push
mov
dec
cmc
push
addr16
mov
mov
in
movsb
xchg
fwait
cwtl
lods
int3
lret
in
sub
inc
cmp
ds
inc
and
call
add
int
and
in
xor
shlb
xor
cmc
lea
in
aam
pop
fiaddl
and
call
lea
mov
mov
push
addr16
inc
mov
or
xchg
jb
sub
pop
or
movsb
iret
inc
dec
adc
and
lock
shlb
orb
fcompl
dec
jae
arpl
mov
ds
call
ret
enter
add
shll
ljmp
lds
incb
subl
dec
or
aaa
mov
loope
orl
pop
mov
mulb
aad
insb
cwtl
cltd
fcom
imul
sti
mov
lcall
mov
sub
or
in
cwtl
lock
das
mov
cli
cmc
sarb
sbb
push
addr16
cmp
dec
int3
xchg
in
dec
das
jne
stos
sar
or
mov
or
aaa
ss
mov
sbb
aad
push
ja
fcomp
sti
imul
mov
imul
dec
cmc
shrb
outsb
lret
cmp
inc
mov
movsb
xor
jae
xor
jp
mov
enter
mov
shlb
xlat
dec
inc
pusha
inc
lds
jo
shrl
mov
gs
fcoml
mov
lods
aas
push
lock
cs
movsl
mov
and
cmp
pushf
cmp
data16
mov
xor
xchg
sbb
int
dec
cltd
xchg
inc
idiv
xchg
je
out
xchg
add
test
leave
xor
xchg
lea
push
jecxz
repnz
sub
fcomi
adc
add
add
add
mov
fs
mov
les
push
mov
sub
jae
xor
mov
insb
ljmp
jbe
mov
clc
xchg
lea
xor
insl
and
out
bound
mov
repz
shlb
mov
xchg
push
cltd
xchg
sub
inc
lahf
das
mov
pop
shl
add
test
popa
and
lock
xchg
orb
lea
stos
ss
aas
push
scas
sub
out
sti
sbb
xchg
jbe
mov
leave
jbe
aaa
aad
mov
inc
and
mov
pop
shll
aaa
negb
cmp
fdivrs
and
scas
push
lahf
cmpsb
mov
faddl
xor
lods
add
inc
sahf
jmp
ja
mov
jmp
int
mov
std
std
fnstenv
sub
fiadds
js
aaa
jno
aam
xor
sub
and
pop
dec
lea
lods
xchg
leave
sub
push
xchg
rcr
cli
xchg
rclb
sub
push
pop
lods
ret
mov
or
xchg
or
in
dec
xor
jle
enter
adc
inc
cmc
and
lock
push
arpl
xchg
pop
test
out
push
stc
cli
inc
ss
test
popf
sbb
xchg
sub
cmp
mov
adc
mov
popf
mov
jno
xor
lahf
mov
mul
aas
mov
ljmp
lea
adc
mov
adc
mov
loope
lret
lds
bound
cltd
xchg
arpl
sbb
lea
negl
xlat
cwtl
sbb
push
enter
sbb
ret
movl
xchg
outsb
or
push
popa
jb
hlt
pop
xchg
and
dec
loope
adc
push
cmp
sbb
ret
sub
mov
dec
or
push
fstps
fmuls
adc
inc
ss
jne
test
cld
stos
ficompl
and
stc
arpl
mov
aam
clc
int
dec
lret
mov
lahf
mov
lret
ret
and
arpl
sbb
sbb
mov
sub
xlat
sbb
or
adc
shrb
mov
mov
xor
mov
popf
mov
aas
push
adc
pushf
push
fiaddl
jge
jle
cltd
lret
push
ljmp
jae
ljmp
lods
push
dec
lock
sbb
jecxz
jl
push
mov
pop
ds
pusha
stos
aam
sub
movsb
push
mov
cmp
iret
aad
std
enter
cmp
inc
xchg
jle
sbb
test
xchg
std
lods
fidivs
lcall
arpl
aaa
notl
lcall
mov
dec
or
mov
jecxz
lods
and
repz
clc
adc
sub
popf
addb
sub
inc
popa
xor
lock
mov
jbe
mov
test
dec
loope
xor
adc
adc
pop
pop
sbb
pop
push
cmp
incb
add
iret
iret
scas
mov
icebp
scas
call
cmp
in
movsl
cmp
loopne
flds
stos
sbb
xchg
fnstcw
mov
shl
sub
in
dec
je
fdivs
mov
das
mov
mov
lret
jnp
pusha
call
mov
ds
jae
cmp
mov
mov
sbb
sub
mov
stos
movsb
cmpsl
add
lret
lret
addr16
popf
rcl
cmp
or
xor
out
mov
iret
jmp
or
idivl
movsb
notb
out
jle
cmp
inc
push
nop
mov
imul
mov
sahf
fsts
dec
add
lret
or
and
leave
shll
mov
xchg
dec
aad
xchg
and
push
es
jns
mov
mov
sahf
iret
imul
xor
test
movsb
mov
movsb
mov
mov
pushf
xor
div
pop
stc
insl
push
movsl
out
icebp
push
lds
push
sub
leave
add
push
outsb
xchg
iret
icebp
mov
das
es
movsb
add
int
test
jnp
adc
cmp
xchg
jo
out
mov
mov
popf
cmp
in
int
and
push
dec
ficoms
lret
dec
fwait
mov
stos
mov
stos
loop
jb
mov
test
lock
push
lock
inc
flds
mov
imul
cltd
repnz
xchg
loop
out
test
cmp
loopne
shlb
or
push
das
dec
mov
rcr
std
sbb
pop
movsl
push
or
push
int
mov
loop
jmp
leave
jle
inc
push
shl
orb
lea
lret
fs
int3
shll
sub
and
pop
stos
aas
loop
lea
sahf
mov
sbb
cmp
sub
aaa
pop
xor
adc
pop
xor
pop
inc
popf
jge
jmp
enter
icebp
sarl
jl
adc
insb
scas
dec
out
sbb
rol
in
pop
bound
pop
push
xchg
adc
lret
cmp
jp
fisubl
cmp
mov
fwait
pushf
repz
and
xor
xor
mov
sub
imul
in
mov
arpl
fstl
add
addr16
mov
adc
push
jae
bnd
insb
dec
lcall
in
arpl
in
mov
mov
idivb
fs
sbb
jle
ds
mov
out
cld
mov
cmp
jae
fwait
cld
jl
mov
pop
int
mov
dec
lods
in
out
mov
mov
jmp
mov
mov
test
push
sbb
mov
add
pop
movl
jno
enter
enter
xchg
out
mov
cltd
popa
adc
xor
repz
push
lods
xchg
sbb
mov
xchg
outsl
decb
sub
push
cmp
adc
je
adc
jb
sub
lods
cwtl
enter
inc
or
and
outsb
ret
xor
xor
mov
shlb
lret
sbb
psubb
stos
jnp
cmp
mov
mov
sti
ljmp
jae
lret
mov
xchg
loope
cli
push
nop
shll
out
rorb
ljmp
insl
ffreep
sub
sub
sub
dec
jl
mov
shll
jl
or
mov
cmp
and
repnz
mov
hlt
pop
stc
rclb
dec
cmp
icebp
test
sub
lods
inc
jbe
xor
add
inc
aas
int
mulb
sbb
int3
loop
pop
push
cmp
jmp
or
cld
les
lods
mov
and
sbb
or
dec
leave
clc
ret
cmc
push
mov
jge
call
or
cmp
sub
in
mov
cmp
or
push
mov
or
mov
ret
adc
jle
in
dec
mov
mov
js
mov
out
test
cmpsl
test
mov
in
pop
xchg
andb
lcall
mov
sti
push
aam
popa
cmp
daa
loope
adc
cmp
mov
jge
push
jge
insl
push
cwtl
cwtl
lret
cltd
pop
iret
fidivrs
mov
shl
repz
jmp
sbb
or
xchg
lahf
pop
mov
sbb
ljmp
ja
mov
imulb
loopne
sti
push
mov
jl
cwtl
ja
jb
pusha
lea
outsb
lret
add
or
and
add
cmpsb
jp
sub
adc
jne
and
jnp
jo
daa
repz
mov
mov
jl
dec
in
lea
cmovl
test
mov
mov
stos
imul
jg
cld
mov
js
pop
pop
lock
inc
loope
mov
jns
xchg
shlb
fwait
lea
sahf
mov
int
jle
push
jl
in
stos
ja
mov
lods
je
ja
in
cmc
pop
es
mov
pushf
xchg
test
cmp
dec
gs
aam
sbb
in
test
push
stos
addr16
adc
add
pushf
cmc
push
addl
sbb
or
in
mov
dec
out
stos
lods
test
inc
push
xabort
sub
sbb
sub
cmp
fisubs
mov
cmc
aam
rcl
fsubrl
in
cli
sub
fidivs
xchg
aam
adc
jge
mov
imul
dec
rcrb
orps
pusha
and
adc
sub
mov
std
mov
jae
pushf
cmp
pop
pop
push
jmp
scas
adc
scas
popf
mov
mov
jecxz
xchg
or
cmpsl
inc
stos
out
mov
pop
arpl
mov
and
mov
or
xor
lds
pop
std
bound
insl
int3
movsb
out
mov
fidivrl
xor
fimuls
sbb
or
adc
push
jp
mov
lds
pop
or
sbb
add
mov
scas
mov
xor
daa
scas
test
lahf
popf
mov
jne
js
jg
test
jl
jmp
fcompl
addr16
cmp
jg
adc
jle
incl
xchg
repnz
fdivr
lret
aam
push
mov
sahf
jp
push
push
xlat
mov
jnp
lret
sbb
sbb
inc
shll
push
nop
jmp
inc
pop
xor
out
shl
pop
lret
dec
int
cmp
out
dec
mov
in
imul
and
sbb
inc
fnstsw
pop
dec
pusha
pop
repnz
rep
dec
cmpsb
pop
ljmp
xchg
movsb
push
popa
mov
jne
repz
mov
xor
mov
xlat
ret
mov
mov
leave
pop
lock
mov
mov
cmpsb
mov
xor
outsl
fbld
pop
push
dec
cmpsl
imul
or
imul
scas
xor
xchg
cmp
jle
jmp
xchg
mov
shr
ret
mov
sub
pop
ljmp
and
push
adc
int3
fisubl
mov
jo
outsb
incb
push
xor
jmp
mov
and
mov
jp
stc
pop
into
sahf
fs
in
mov
and
dec
sarb
sub
jge
mov
into
ret
ret
xchg
out
outsl
push
into
lods
dec
leave
dec
cmp
inc
sbb
or
mov
fnstcw
push
fisttpl
mov
pop
ds
stc
mov
arpl
xorl
xchg
jb
cwtl
loope
popa
mov
cmc
mov
xor
scas
hlt
adc
push
data16
ljmp
ljmp
aam
out
gs
cmpsb
xchg
or
and
pop
jmp
outsb
mov
rcl
mov
add
test
lcall
pushf
int
adc
sbb
xor
pop
stos
shrl
lds
adc
push
outsl
lret
fbld
les
outsb
mov
push
mov
addb
pusha
sub
xchg
sub
jne
cmp
inc
and
aaa
hlt
jg
and
mov
and
ljmp
or
pop
fidivl
xchg
out
fbstp
xchg
flds
adc
insl
adc
dec
das
bound
pop
lahf
mov
jo
pusha
xchg
inc
jle
fbstp
cwtl
cmp
mov
in
imul
xor
xlat
rorb
std
xchg
ja
in
imull
leave
out
popa
repz
int
ret
dec
ret
sbb
cmp
add
mov
les
jb
je
dec
pop
and
fs
xor
push
pop
push
push
int3
bound
ret
pop
jb
sbb
cmp
pop
jmp
outsl
xchg
shll
lea
loopne
or
mov
inc
lds
xor
cmp
mov
icebp
jo
repnz
push
ret
push
roll
lret
lock
cltd
mov
test
cmp
adc
adc
aaa
pop
ja
imul
push
add
push
loopne
dec
in
push
ljmp
lcall
fstpl
aam
fistpll
add
les
pusha
incb
dec
sti
fsubrs
xor
xor
push
sbb
inc
out
aad
mov
jmp
xchg
ja
xor
cmp
mov
cmp
js
pop
jle
lret
pop
je
pop
mov
xor
into
popf
lret
les
pop
push
xor
dec
push
xchg
ss
mov
jae
inc
daa
lcall
rcl
out
sub
mov
push
hlt
cmp
xchg
jge
cmp
popf
inc
push
or
add
inc
mov
mov
add
or
or
pop
dec
rol
xchg
sub
mov
aas
sbb
lods
push
ds
jge
mov
dec
jle
sub
insl
pusha
xchg
mov
cltd
jns
jmp
cmp
je
fmuls
mov
jmp
push
stos
aad
in
out
iret
addr16
xor
cmp
shlb
pop
push
mov
push
movl
sbb
ret
je
mov
jns
xchg
xchg
push
xor
xchg
jg
rolb
outsb
rclb
and
push
in
pop
rclb
adc
loopne,pt
test
push
push
scas
ret
mov
rcr
push
cli
mov
pusha
sar
mov
pop
into
add
loop
jo,pt
sbb
repz
iret
push
data16
cmpsb
rclb
pop
les
test
aas
call
xor
data16
sar
lcall
or
aam
push
dec
xor
repnz
lret
add
xor
mov
es
xor
sub
data16
and
cli
subl
xchg
cmpsb
mov
test
jo
repz
jne
adc
lods
mov
insl
cmpsb
mov
outsl
jl
xchg
dec
pop
daa
push
testb
push
in
leave
outsb
mov
mov
sub
gs
pop
enter
push
in
pusha
addr16
jo
fisubrl
std
pop
mov
std
jae
insb
fistps
xor
sbb
mov
not
lcall
push
inc
mov
pop
enter
cmpsl
ficompl
scas
sub
lret
pop
fdivl
xchg
inc
inc
cli
int3
sbb
adcl
mov
ja
fistl
aas
cmp
outsb
popf
jnp
pop
out
cli
or
aam
pop
mov
inc
jno
pop
es
into
scas
push
sbb
pop
sbb
pop
jg
pop
mov
xor
xor
mov
sbb
jmp
or
push
jge
mov
fadds
cli
mov
mov
add
into
ds
sub
jmp
pushf
shrb
js
push
sbb
outsl
aad
lods
push
xchg
adc
out
lds
mov
cmp
mov
cmp
mov
sub
aaa
cmp
pop
gs
mov
mov
push
cs
stos
ret
jl
jl
ss
sub
mov
push
fnstsw
mov
push
mov
push
push
shl
jge
add
dec
jl
lahf
or
xchg
or
jge
mov
cmp
push
out
out
ret
cmp
aam
out
ljmp
mov
jnp
test
push
cs
inc
push
push
push
adcb
mov
fstps
cmp
xchg
mov
xlat
test
xorl
repnz
testl
mov
fdivs
mov
int3
dec
clc
sbb
sub
inc
mov
mov
jbe
push
rcl
cmp
xor
dec
mov
xchg
mov
repz
mov
out
test
in
test
add
add
call
lea
xchg
addr16
pop
out
pop
out
movsl
pop
out
push
lret
gs
test
fcoml
lods
xchg
popl
jno
xchg
test
xchg
movsb
subl
testb
jmp
mov
xorb
f2xm1
movnti
aaa
test
sahf
addb
out
mov
xchg
xor
inc
sub
pusha
loope
mov
je
out
jl
subb
mov
inc
aad
mov
or
pop
shll
subl
xchg
not
pop
mov
test
adc
or
dec
scas
adc
jo
pop
mov
jbe
lcall
add
or
dec
inc
ljmp
stos
sti
idivl
pop
in
repz
and
jle
mov
shll
scas
xchg
bsr
push
aaa
repnz
jno
pop
add
push
jmp
aaa
gs
outsl
in
xchg
gs
das
int3
aam
cmp
mov
fimuls
cmpsl
data16
push
div
jle
xchg
into
mov
sbb
xchg
mov
shl
insl
adc
sahf
xchg
dec
shlb
pop
je
fld
jg
jmp
mov
pop
or
cmp
jo
fucomi
fs
dec
insl
test
insb
xor
jmp
xor
pop
loopne
cmp
jo
jns
mov
int3
adc
std
push
cmp
adc
jbe
add
popa
outsl
and
adc
pcmpeqd
mov
inc
cmp
imul
and
clc
pusha
scas
sub
dec
jo
ret
popf
or
data16
ds
mov
mov
sahf
leave
mov
in
outsl
mov
or
ljmp
lret
jmp
loopne
add
sub
out
inc
pop
pop
pop
in
roll
fsubl
test
ja
dec
fdivr
fiadds
mov
movsl
pop
jecxz
repnz
jg
pop
cmp
dec
or
clc
js
jg
push
movsl
mov
sub
jb
or
mov
push
notb
enter
mov
pop
xchg
addl
push
cld
xor
adc
dec
js
jge
std
data16
xchg
xchg
mov
cmpsb
mov
or
pop
dec
iret
jno
mov
loop
xor
sub
cld
cmp
arpl
aaa
xchg
mov
lret
jg
jbe
xchg
lahf
std
imul
out
jae
out
xor
rol
lea
in
push
stc
loopne
push
sbb
push
xor
xchg
movsl
push
dec
ret
out
ror
jg
push
cmp
add
aas
inc
out
push
xchg
test
adc
mov
xchg
loop
push
push
call
sub
xor
lock
lcall
mov
mov
rclb
pop
sub
adc
or
adc
cmpsl
cmp
xchg
jg
sbb
es
cmc
dec
jne
push
in
cmp
cmp
inc
cmp
dec
scas
repnz
outsb
movsl
cs
pop
add
mov
lret
sub
call
push
lcall
cltd
lock
addr16
cmp
bound
ja
cltd
adc
fs
lret
xorb
mov
sbb
inc
test
pop
inc
shr
add
idivl
mov
stc
push
pushf
test
mov
fnstsw
fwait
cmp
sbb
js
ficompl
test
in
gs
add
push
movsl
or
pop
add
rclb
fdivl
outsb
repnz
mov
mov
es
inc
jne
cmc
test
xchg
es
adc
rcrb
push
pop
sub
mov
jmp
dec
xlat
sub
bnd
mov
ja
je
pop
xorl
add
mov
mov
lock
jge
sbbl
out
cmpsb
rep
js
push
addr16
push
mov
pop
cmp
sub
out
por
pop
mov
stos
mov
xor
bnd
enter
in
popa
dec
mov
iret
add
adc
es
pop
movntq
jge
stc
mov
add
bound
ds
enter
outsl
outsl
test
mov
jl
daa
outsb
insb
rclw
mov
or
mov
jmp
jge
cmpsb
mov
aas
xlat
fwait
lock
mov
sub
bound
lds
xor
mov
sahf
or
mov
adc
test
aaa
mov
push
lret
lods
outsl
mov
in
or
sbb
cmpl
add
popa
mov
cmp
xchg
xchg
in
call
subb
sbb
xor
clc
popa
lds
sarl
mov
bound
pushw
push
pop
mov
mov
push
jo
ja
or
inc
aas
shlb
movsl
inc
lret
and
movsl
daa
sub
and
inc
dec
pop
fisubl
mov
cmp
mov
jbe
ja
lcall
mov
int
cmpsl
fsubrs
mov
sbbb
shrb
cs
cs
jno
add
adc
mov
outsl
cld
sbb
outsl
stc
mov
mov
sbb
icebp
lea
jecxz
cmp
out
imul
pop
scas
dec
into
stc
mov
mov
es
pop
sub
sub
inc
adc
xor
icebp
xchg
subl
jbe
inc
test
stos
xor
pushf
popf
cmp
shrb
mov
xor
adc
adc
mov
or
cwtl
jmp
cmc
out
test
fsubrs
into
add
adc
sub
addr16
push
mov
inc
xchg
repnz
fnstcw
sbb
movsb
push
add
mov
ret
pop
mov
in
xchg
fistl
dec
mov
stc
stos
xor
jp
or
dec
in
stos
pop
and
insb
dec
js
test
mov
pop
aam
jle
mov
sub
xor
scas
out
popf
and
mov
or
or
mov
pusha
pop
bound
aam
xchg
adc
fdivrp
push
stos
fimuls
sub
loop
sbb
cmc
sarl
movsl
pop
xor
shrl
mov
xchg
testb
mov
in
cmc
dec
xor
into
cwtl
ret
mov
outsb
xor
in
xor
aad
mov
shlb
xor
lock
jne
sbb
adcb
out
test
mov
pop
pop
jg
push
cmpl
inc
int
push
iret
mov
loop
cltd
mov
sub
loope
adc
fisttps
in
scas
mov
popf
fisubrs
xor
stc
dec
es
sbb
and
jge
sub
cmpsl
mov
xor
cwtl
inc
pop
test
stc
cmp
sub
jnp
popa
xor
inc
xor
inc
mov
xchg
ljmp
jae
mov
test
clc
jbe
push
push
shll
or
xchg
lret
daa
shlb
sbb
sub
or
jne
push
popf
push
dec
pop
push
enter
pushf
pop
adc
lea
test
jns
in
testl
fisttpll
mov
jecxz
jle
pop
sub
popf
sbb
movnti
sub
out
rclb
pop
ret
jne
sub
jge
cmp
push
cmc
push
fsin
movsb
fldt
mov
jae
mov
sub
popa
mov
mov
jb
enter
fnsave
insl
cmp
sub
in
xchg
cmpsl
in
xchg
dec
xchg
push
jnp
mov
mov
loop
in
xlat
dec
dec
divb
jecxz
cmp
pop
adc
cmp
mov
sbb
mov
iret
ljmp
stc
sbb
lea
sbb
or
dec
or
adc
rclb
cmpsl
das
jo
call
ss
cmp
xor
js
outsl
je
pop
sub
shl
dec
xor
add
jno
push
or
mov
sub
rcl
rorb
mov
in
outsb
aaa
in
xor
mov
add
cmp
xchg
cmp
test
lahf
jmp
call
ficoms
mov
xor
repz
repz
test
mov
xor
mov
aas
dec
scas
imul
imul
cmpsl
inc
or
pop
sbb
fistl
pop
aam
out
and
mov
ret
add
out
or
and
push
aas
stos
repnz
inc
data16
movsl
fcmovbe
or
sbb
cmpsb
loope
inc
or
mov
jo
daa
lret
hlt
adc
pop
sub
in
xchg
mov
nop
mov
adc
aas
sbb
cli
xchg
or
dec
movsb
push
jmp
out
dec
iret
es
add
mov
incl
lock
fldl
pop
jno
addb
add
dec
fnstsw
cwtl
mov
testb
jecxz
test
test
or
cmpsb
in
pop
push
loopne
ss
pop
xchg
push
lcall
aad
jnp
stc
mov
or
lret
inc
push
cmpsb
jb
enter
sub
mov
cld
push
dec
enter
mov
adc
mov
daa
mov
push
sub
dec
scas
and
mov
into
jmp
sbb
lcall
or
lcall
xor
push
clc
push
out
sub
lahf
repnz
iret
icebp
icebp
jl
xor
std
or
leave
aas
pop
inc
cmp
lahf
push
mov
iret
lock
jecxz
call
xchg
stos
mov
ss
push
std
mov
jbe
loope
xor
push
xor
rcll
out
adc
jle
out
push
inc
lock
fcmovu
stos
je
push
xlat
sub
pop
cmp
mov
push
imull
movsl
pop
lret
loop
cmp
push
popa
stc
aas
sub
ja
fwait
xor
mov
cwtl
aad
push
push
push
sbb
add
push
mov
test
outsb
xchg
shrb
sub
and
xchg
fdivl
sub
mov
mov
and
mov
fdivl
inc
and
daa
ret
inc
fdivrp
push
popa
push
add
push
xchg
das
pop
jecxz
out
inc
push
mov
pop
inc
cs
mov
jns
dec
dec
mov
adcl
cmpsb
xchg
sbb
pop
icebp
mov
addb
cmpsl
pop
sub
or
add
clc
rcrl
inc
jne
sub
bound
enter
pop
ss
or
lock
aad
sbb
xor
popf
das
xchg
ljmp
mov
sbb
mov
das
add
fcmovnu
or
sahf
xchg
or
cmpsb
fsts
pop
cmpsb
push
jo
jle
jb
sti
add
arpl
lret
imul
out
das
jo
ret
mov
fcomi
lea
pop
adc
sbb
mov
pop
cli
sub
add
mov
ljmp
add
xor
je
jo
or
in
pop
popa
xlat
lret
or
adc
js
fildll
push
leave
pop
adc
mov
lret
xor
push
sbb
imul
hlt
xor
mov
inc
cltd
leave
mov
pop
jmp
sbb
adc
into
mov
inc
fsubrl
push
push
cmp
xchg
out
push
adc
insb
mov
inc
xchg
rclb
lahf
adc
mov
insl
jl
mov
xor
movsb
inc
popa
add
cmpsb
je
in
aad
mov
or
mov
jno
stos
jno
or
inc
jns,pt
stos
jns
shlb
mov
loop
imul
daa
out
aad
fwait
jg
pop
pop
popa
in
ljmp
repz
mov
xchg
add
mov
test
pop
mov
cs
dec
push
dec
sub
pushf
ja
mov
sarl
mov
and
mov
movsb
dec
aaa
add
lcall
mov
movl
jp
dec
loope
or
cmp
call
and
cmpsb
jae
dec
mov
insb
push
cmpsb
xor
test
pop
mov
push
dec
sti
sbb
jl
loope
push
push
pop
test
xorps
xchg
jp
sbbb
push
or
xor
test
push
cmpb
ret
jno
cmc
jns
bound
pop
push
xor
pop
aad
std
push
mov
mov
movsl
xor
sub
js
cmpsl
mov
rcl
test
lds
aad
pop
xorb
dec
cmpb
mov
jne
out
cmp
test
frstor
push
sti
int3
aam
lahf
cltd
leave
or
fists
repz
pop
adc
sahf
cmpsl
pop
aad
cmp
add
loope
jecxz
fs
push
pop
ss
test
pop
cmc
mov
add
xchg
iret
mov
pop
jle
insb
lret
mov
xchg
push
sbb
dec
stc
xchg
pop
clc
lret
jecxz
adc
fldt
insl
aam
add
popf
test
xor
ds
in
sbb
int3
xchg
or
fcompl
scas
loopne
cwtl
cmpsl
cmp
add
push
xchg
push
fmuls
out
sub
cmc
lret
jbe
jmp
insb
movb
ds
scas
clc
sub
lcall
lds
les
or
rclb
add
adc
popf
insl
xchg
sub
scas
inc
mov
aad
loopne
test
jp
movsl
out
push
sbb
shrb
add
mov
insl
xor
bound
sub
gs
inc
call
imull
outsl
repz
push
lock
hlt
and
cmp
mov
mov
inc
inc
mov
jne
arpl
scas
mov
push
icebp
push
gs
xor
lahf
js
mov
push
fdivrl
mov
sub
push
out
jnp
sbb
mov
mov
fs
add
push
lds
push
int
mov
aas
imulb
test
inc
jb
arpl
or
dec
xor
pop
int3
jb
stos
pop
xchg
mov
dec
mov
inc
and
and
inc
aam
test
sub
xchg
push
add
inc
in
add
pop
pop
rclb
js
pusha
jns
and
push
inc
rcrb
mov
add
stc
fists
sbb
fsubrl
jp
mov
sbb
pop
insl
adc
xchg
sub
insl
pop
popa
xlat
daa
xchg
jle
and
cmp
push
test
dec
mov
jl
lcall
xor
stos
dec
xor
xchg
dec
jns
jno
push
and
pop
sarl
xchg
adc
push
clc
or
mov
ljmp
addl
fsubrs
aam
push
in
pop
cltd
lret
std
push
sbb
lds
popa
sub
js
mov
jle
lcall
aam
pop
cs
ja
pop
enter
mov
push
push
aas
add
fsts
add
paddq
xor
clc
aad
lret
push
imul
xlat
add
xchg
dec
sbb
lods
cltd
xor
flds
dec
cli
jbe
subl
sbb
cmp
fistpl
std
aas
sub
hlt
sahf
dec
stc
imul
loopne
push
jle
lods
add
es
pushf
push
mov
aam
sub
into
test
out
lock
sbb
jle
lcall
iret
dec
xlat
jmp
pop
lds
cs
inc
in
sbb
pop
xchg
jae
mov
scas
jle
std
xorl
sarl
cmpsb
mov
jno
jle
movsl
push
int
repnz
or
stc
sub
mov
psllq
inc
imul
pushl
std
mov
jb
jg
out
mov
jmp
xchg
and
aaa
repnz
mov
xchg
cmc
aas
in
pop
inc
adc
loope
int3
out
loopne
lods
outsb
clc
test
pop
mov
mov
or
loop
roll
ds
dec
insl
and
xchg
push
and
cld
dec
sub
sar
fisubl
xchg
and
ds
xchg
ja
sbbl
iret
pushf
adc
push
clc
fildl
test
cmp
popa
pop
movsl
mov
cmpsl
xor
mov
pop
inc
ret
mov
imulb
int
daa
fisttpl
mov
loopne
xor
dec
xor
dec
outsb
repnz
mov
movsl
testl
cld
test
push
lret
divl
mov
dec
push
mov
push
inc
jl
arpl
pop
push
js
xor
jo
xchg
xor
pop
stc
xchg
xchg
jnp
mov
sub
mov
push
adc
mov
testl
fcoml
sbb
dec
out
mov
mov
add
pusha
clc
add
test
xor
push
fwait
test
xacquire
test
xabort
mov
and
sbb
cmc
cmpsb
dec
jmp
jno
jnp
out
mov
imul
mov
push
lret
fisttps
dec
movsb
mov
push
mov
out
mov
imul
fwait
and
or
negl
fildll
sbb
inc
jno
or
jecxz
and
loopne
fdivrs
mov
aam
call
sbb
ljmp
dec
rcr
mov
jecxz
shll
insb
pusha
fnstsw
fisttps
push
mov
test
cmp
sub
in
lds
cltd
rcrl
fcoml
pop
xchg
mov
pop
pop
mov
push
sbb
in
lcall
jns
push
cmc
jnp
fistpl
lods
popl
jmp
pushf
and
bound
mov
int
fs
outsb
lock
jnp
sbbb
ja
pushf
cli
scas
mov
popf
push
int3
jo
adc
sahf
notb
jp
lret
xchg
adc
add
push
decb
scas
push
push
shrb
dec
sub
jp
fbld
sbbl
addb
test
add
push
push
cmp
mov
outsb
mov
push
jo
lods
pop
mov
lods
xchg
notb
cmp
or
push
jle
mov
push
dec
shrl
clc
mov
cmp
pop
mov
mov
mov
in
and
stos
aaa
js
sub
xchg
and
stc
xchg
push
lods
inc
xor
insl
cmpsl
push
mov
out
inc
lods
mov
dec
mov
stos
fldcw
lods
and
out
aaa
insb
inc
xchg
xchg
mov
mov
sub
pop
std
jle
fsts
sbb
pop
mov
mov
gs
or
pop
xchg
xor
cmc
lahf
xlat
xlat
lahf
lods
psadbw
jno
icebp
out
sub
aaa
in
or
in
lods
cmp
insb
rorb
out
iret
cmpsb
movsb
fcompl
ljmp
and
jmp
add
pusha
out
int
push
pop
fstl
idiv
dec
push
nop
sub
popf
cli
lret
mov
push
xchg
jp
stos
lods
pop
push
dec
jp
stos
addr16
or
cmp
push
xor
imul
insb
sub
adc
fdiv
outsb
mov
or
adc
mov
out
xor
mov
jmp
add
mov
push
sub
icebp
int
push
xlat
lods
mov
testl
hlt
cmp
push
mov
or
and
xchg
jo
cmp
dec
xor
xor
shlb
shl
sti
pop
hlt
repnz
gs
dec
hlt
jb
lock
push
aaa
std
into
adc
sub
inc
popf
mov
push
lea
lods
jl
pop
cmp
movsb
mov
mov
sbb
pop
fisttpl
mov
mov
xor
int3
xor
mov
daa
call
stos
iret
push
dec
and
inc
lahf
pop
test
movsl
jg
std
lahf
ds
repz
ret
inc
call
popf
push
std
imul
push
rcrl
in
call
sbb
push
notl
pusha
cmp
pop
mov
xchg
loope
pop
fwait
push
mov
dec
inc
xor
outsl
xor
pop
cmpsb
mov
fcomps
sbb
aas
xchg
pusha
rcll
jmp
sbb
pop
pushw
pop
push
aas
fistps
int3
scas
lahf
fbld
lock
cli
stc
jge
inc
pop
std
cld
jle
mov
xchg
mov
cltd
repnz
aaa
pop
mov
idivb
push
push
out
pop
clc
inc
and
sbb
fidivl
into
ret
cmc
inc
push
fcom
sbb
mov
enter
les
ss
icebp
roll
call
icebp
sarl
notl
jg
xchg
jbe
fcomp
outsb
ds
fidivrs
or
es
mov
icebp
mov
pop
rcrb
sahf
and
in
inc
mov
cmp
shr
mov
mov
fninit
xchg
scas
gs
or
mov
dec
and
imul
aam
jge
fwait
sub
clc
mov
cwtl
or
cmpsb
std
xchg
negb
icebp
lahf
insl
add
inc
sbb
aaa
inc
cld
mov
sbb
mov
sub
je
loope
imul
testl
es
jmp
cmp
mov
inc
adc
pop
imul
push
mov
and
cli
pusha
sti
mov
mov
mov
imul
xlat
dec
subb
aaa
jg
outsb
shll
fwait
ret
cmpsb
addl
jbe
jno
push
pop
adc
cmp
jle
rcll
fstpt
hlt
sti
out
ja
neg
jae
cmp
cmp
lods
int
add
pop
cmp
jo
cmp
and
push
fadds
fcoml
pushf
bound
xchg
imul
jge
pop
js
dec
and
sbb
daa
add
mov
ljmp
enter
inc
pop
sbb
or
in
lret
inc
ljmp
cld
insb
movsb
jge
lcall
ds
addr16
pop
dec
jno
ret
add
out
lods
popa
mov
mov
ret
aas
cmp
mov
repz
mov
jbe
iret
cmp
ss
dec
and
jmp
cltd
xlat
loopne
xor
add
pusha
mov
sbb
aam
mov
js
lea
nop
fwait
jmp
stc
add
xlat
stos
push
jg
fmuls
out
js
and
adc
test
or
scas
pop
xchg
or
outsl
fidivs
fsts
aas
icebp
sub
cwtl
pushf
jmp
pop
repz
mov
dec
aaa
sbb
mov
daa
repz
es
nop
loop
imul
in
adc
int
add
pop
fnstcw
dec
clc
hlt
jns
addr16
or
mov
inc
popf
and
adc
out
xor
in
sahf
into
push
scas
cld
sbb
sub
push
sbb
ljmp
cmp
jnp
mov
enter
call
or
dec
inc
fptan
mov
das
fcmovne
mov
pusha
xor
dec
jbe
into
shrl
mov
in
pop
es
je
push
pop
fldt
clc
pop
mov
or
test
mov
adc
es
jmp
enter
in
xor
dec
adc
push
jle
mov
daa
mov
repz
and
and
rcrb
das
xor
adc
scas
inc
es
jmp
ja
mov
in
mov
leave
mov
test
test
cld
adc
iret
loop
mov
mov
sar
dec
sti
cltd
imul
fcmovne
pop
sub
cmp
je
jmp
outsb
xchg
ja
push
add
push
aad
arpl
test
cmc
imul
jle
aas
pop
jmp
sbb
iret
sbb
add
mov
sbb
repz
cld
push
ds
cld
inc
insl
cmpsl
mov
fiaddl
inc
insl
jnp
fidivrl
fistpl
lret
xchg
lea
in
pop
test
pop
in
inc
imul
jl
xchg
aam
decl
bound
aas
xorb
pop
mov
orb
lahf
shll
pop
cs
data16
xacquire
dec
jmp
push
jne
pop
lea
jno
inc
add
mov
mov
xor
mov
leave
jmp
fdivrl
paddsb
mov
clc
pop
in
add
aad
addl
push
outsl
inc
imul
stos
popf
push
mov
test
xchg
xchg
push
cwtl
adc
push
leave
xor
repnz
iret
cwtl
inc
jmp
xchg
leave
mov
sbb
imul
movsb
faddl
mov
das
or
popf
insl
pop
scas
sbbl
add
test
std
in
cmp
xchg
dec
pushf
incb
jle
sbb
pop
cmpb
mov
mov
jle
xorl
mov
and
in
sbbl
fidivrs
pop
xchg
lock
jle
leave
out
popf
pop
inc
iret
clc
cmc
das
mov
mov
mov
fsubrs
jno
movsb
std
int3
iret
std
mov
bound
xchg
jmp
and
frstor
in
addr16
repz
insl
push
fstpt
push
movsb
repnz
enter
or
jbe
gs
movsl
add
sub
mov
stos
mov
pop
jnp
mov
pop
xor
test
cmp
inc
rcrb
add
cmp
mov
icebp
jno
add
pusha
dec
es
sbb
and
jmp
sbb
inc
aaa
mov
sub
imulb
outsl
inc
mov
fcomps
leave
push
insl
dec
sahf
stos
add
std
xchg
xchg
add
jl
icebp
and
fsubs
sub
dec
je
add
dec
outsb
mov
add
mov
aam
or
fimuls
enter
daa
lret
pop
adcl
dec
jge
cmp
loop
ljmp
aaa
sbbb
fsts
xchg
loopne
js
hlt
xor
out
sbb
xchg
cmp
adc
std
cmp
adc
mov
ds
fimull
sarb
repz
cmp
gs
or
loop
pusha
pop
outsb
mov
stc
mov
xor
push
movsl
dec
push
fimull
pop
xchg
ret
loope
repnz
adc
filds
and
cltd
mov
movsb
mov
mov
inc
jle
jb
mov
test
ds
jo
xchg
xchg
or
negl
stc
outsl
js
mov
es
or
out
pop
scas
and
jb
cmp
sahf
pop
inc
fsubrl
testl
xchg
ficoms
cmp
mov
fdivrs
flds
outsl
or
xchg
fwait
push
fimuls
sbb
fdivs
mov
test
fnstenv
out
ss
cmpsb
sbb
or
pop
mov
push
lock
inc
xor
mov
mov
xor
cs
mov
jl
pusha
lods
scas
dec
hlt
sahf
out
xchg
fs
je
push
cmpsl
je
cmpsl
call
dec
jmp
ja
pop
mov
jp
inc
mov
rcll
aam
imul
inc
stos
cmp
xchg
int3
js
insl
push
scas
mov
xlat
pusha
or
lcall
cmpsb
clc
scas
sub
ret
outsl
push
fcompl
xchg
sub
out
push
fistpl
aas
xchg
fisttpl
mov
out
mov
nop
fld
mov
popf
sub
xchg
arpl
add
add
into
inc
out
dec
imul
shl
test
mov
jg
mov
cmpl
scas
dec
ss
test
fwait
fwait
xor
jnp
out
movsl
loop
push
xchg
dec
loopne
fldt
test
in
in
mov
xchg
cmp
or
fcoms
scas
faddl
bound
mov
mov
sbb
into
xchg
cmpsb
add
jp
dec
int3
sbb
fiadds
and
pop
adc
sub
adc
mov
adc
mov
fisubs
push
push
popf
enter
adc
nop
icebp
xor
aam
or
out
test
aam
push
loop
pop
lock
jnp
insl
fisubrl
mov
scas
xchg
cmpsl
adc
ret
mov
xor
leave
icebp
inc
test
lcall
stos
mov
add
lods
addr16
subl
cwtl
cmp
adc
int
leave
sbb
cmp
pop
das
pop
add
pop
or
or
insb
out
mov
mov
xchg
jne
sti
lahf
ljmp
nop
dec
mov
and
fcoms
lods
jbe
lods
daa
rorl
jne
aam
aaa
insl
cmp
sbb
push
mov
lods
mov
loope
lret
adc
dec
and
fstpt
outsl
push
outsb
ja
mov
sbb
xchg
adc
pop
je
fldcw
lock
push
dec
nop
nop
and
addb
in
punpckhwd
dec
arpl
bound
shll
and
or
inc
xchg
leave
cmc
pop
sub
pop
adc
push
xchg
sbbb
add
and
jae
sub
inc
mov
leave
sahf
xchg
cltd
jae
inc
or
adc
mov
fimuls
mov
cld
pop
sbb
dec
jecxz
inc
test
daa
cmp
nop
pop
fstps
mov
aas
mov
leave
addr16
xchg
dec
and
dec
jns
push
push
xor
xchg
aad
mov
lods
lcall
in
mov
pop
lock
adc
out
xor
aas
in
fmuls
ffreep
mov
jp
add
push
sub
sbb
loopne
fstp
adcb
inc
push
cmpsl
hlt
push
mov
mov
or
cmp
xor
pop
out
mov
ret
dec
mov
mov
aaa
pop
xchg
mov
jbe
fdivrs
loop
sub
mov
adc
lahf
call
push
sbb
xchg
sbb
pop
frstor
fucom
in
ret
cmp
je
stos
imul
cli
mov
or
aas
cmpsl
dec
sbbb
in
inc
hlt
adc
mov
mov
cmpb
mov
and
js
pop
shll
out
pop
sub
mov
push
and
scas
ret
xchg
mov
mov
pop
mov
ds
add
cmpsl
int
inc
jmp
dec
aad
test
and
mov
xor
push
fcmove
dec
inc
out
xchg
mov
scas
mov
sub
cmpl
and
jg
ss
loopne
inc
dec
jp
lret
je
lcall
cmp
rcl
sbb
lcall
cmpsl
inc
lds
fldt
scas
xor
cmc
clc
cmp
pop
scas
inc
jbe
iret
sti
fists
imul
push
push
leave
dec
add
xchg
sbb
idivb
inc
or
cmpsb
stos
int3
jecxz
js
add
pop
insl
mov
addr16
outsl
test
push
lahf
mov
cld
dec
xor
cld
mov
cmpsl
sahf
imul
cmpl
cmc
int3
scas
inc
jg
test
sbb
cmp
adc
das
icebp
lods
pop
mov
addb
das
push
mulb
cmp
sub
and
ljmp
mov
subl
push
sub
mov
int3
inc
ja
add
add
sbb
sub
enter
inc
mov
fisttps
jne
dec
and
cli
stc
leave
je
or
sbb
fcoml
sbb
cmp
mov
out
push
sbb
mov
cli
das
inc
aaa
es
xlat
mov
adc
inc
das
jne,pn
cld
loopne
aad
or
xchg
mov
and
xchg
sub
cmp
sub
jae
pop
dec
inc
inc
aaa
lcall
ret
push
inc
pop
mov
adc
imul
or
scas
das
leave
repz
mov
stos
je
psadbw
lds
pushf
je
xor
mov
sbb
outsl
pop
ror
xchg
mov
sbb
repnz
neg
cs
test
or
orb
dec
cmpsl
aad
lea
mov
add
mov
sbb
outsl
rcl
inc
sti
jge
fstpt
jbe
int
mov
mov
mov
mov
ljmp
xchg
imul
outsb
mov
xchg
jne
push
inc
push
jnp
iret
ljmp
scas
ss
mov
jmp
outsl
ret
xchg
lcall
cmc
es
adc
or
outsb
xor
add
movsl
sbb
movsl
mov
xchg
pop
mov
aam
sbb
cli
adc
mov
pop
aaa
and
push
arpl
add
mov
in
lods
xor
inc
mov
xchg
data16
test
sti
fsts
in
lret
call
pop
aad
inc
cmc
dec
in
add
loope
rolb
imull
out
add
dec
or
fs
xchg
pop
push
out
cmpb
and
pop
and
into
add
dec
sbb
pop
cmp
and
rorb
ljmp
stc
sub
cmc
push
movl
das
jmp
add
rcll
xor
das
mov
cmp
cmp
lcall
cmp
or
add
pop
add
cmp
xor
cmpb
leave
pop
mov
push
xchg
lret
jg
dec
imul
adc
loop
std
lcall
cltd
int
test
scas
loop
addr16
push
imul
pop
mov
mov
inc
pop
mov
pop
lock
cld
enter
andl
xchg
pop
xor
or
imul
push
loopne
mov
adc
arpl
xchg
arpl
mov
push
aas
fwait
loope
push
cmc
fcmovnu
insb
leave
jno
push
shr
imul
push
pop
mov
inc
out
mov
insl
jns
in
mov
cmp
jne
stos
mov
mov
cmpsb
je
mov
sub
rol
sub
ds
jg
pushf
nop
dec
aas
mov
arpl
mov
jl
xchg
mov
or
adc
test
cmpsl
jbe
in
mov
cld
scas
lret
jno
and
xchg
fstpt
aad
mov
push
jle
mov
fndisi(8087
cwtl
insb
std
pop
lea
fbld
into
mov
inc
adcl
jg
push
addr16
sbb
or
fwait
add
xlat
enter
cld
push
js
or
retw
fdivrs
std
or
js
mov
xor
mov
xchg
cmc
jg
lahf
pop
jne
xchg
push
in
jmp
std
sbb
mov
aas
cli
shrb
add
js
xchg
in
imul
jmp
lds
test
aad
mov
mov
jae
lods
fsubs
test
add
orb
dec
push
outsl
aas
lahf
xchg
push
sub
jg
shll
dec
mov
cwtl
sbb
sti
cwtl
subl
int3
sub
mov
inc
and
cmp
xor
int3
jne
sub
mov
mov
maskmovq
idivl
sbb
sub
jle
dec
ret
out
fs
fnstenv
out
inc
stos
pop
jne
mov
mov
ret
std
and
pop
or
movsb
add
das
rclb
int
inc
test
movsl
fwait
leave
imul
push
mov
int3
fdivrl
add
gs
jb
mov
jae
mov
in
push
or
add
scas
adc
shl
adc
cmpsl
xor
ret
aaa
pushfw
scas
rorl
std
jae
mov
rcll
xor
push
mov
gs
decl
jnp
dec
and
mov
inc
and
mov
lods
sub
cmp
lret
dec
loop
pop
ljmp
fidivrs
insb
aam
sub
pop
in
push
dec
js
dec
sub
popa
inc
mov
lea
dec
push
sbb
mov
pop
or
adc
or
add
fwait
out
adcl
leave
leave
sub
mov
sub
xchg
adc
out
mov
bound
mov
dec
fistl
mov
pushf
add
aam
stos
out
pop
mov
scas
sbb
inc
aam
outsb
nop
test
dec
add
test
mov
sub
pop
das
pop
sahf
mov
fs
jg
js
sub
mov
lods
xchg
subb
clc
lret
xchg
pop
insl
push
outsb
pop
aas
movsb
lcall
pop
push
int
popa
test
dec
push
scas
fdivrl
out
outsb
pop
out
xor
push
data16
loopne
sarl
bound
fsubrp
shll
into
pop
fildl
inc
addl
aam
incl
jb
sub
pop
push
and
sbb
cmp
adcb
fbld
xor
pop
lods
lds
jae
in
dec
and
jns
sub
pop
sbbl
dec
out
mov
mov
pop
mov
rcrl
xlat
xor
adc
dec
hlt
loopne
add
adc
mov
and
cmc
js
pop
or
cmpsl
ss
inc
clc
wrmsr
imul
adc
pop
das
sbb
iret
fcmovb
imul
popf
cmp
out
nop
xlat
xor
pop
mov
cmp
data16
cmpsb
int
adc
jbe
jbe
gs
xchg
frndint
xchg
push
push
pop
cmp
iret
jnp
sub
orb
pusha
cld
cwtl
nop
test
xchg
lea
popa
insb
out
in
test
or
mov
je
mov
ret
lea
mov
xchg
outsl
push
xchg
jecxz
push
xlat
dec
adc
call
call
nop
mov
xlat
jmp
imul
mov
notb
into
stos
in
xor
ucomiss
mov
iret
bnd
add
mov
pop
sti
ds
cmp
psraw
out
pop
lea
push
adc
pop
adcl
cli
sub
mov
jbe
aad
mov
fildl
jge
stos
inc
icebp
jae
hlt
mov
xlat
fadds
push
pop
xchg
jnp
push
aad
repnz
lea
dec
pop
jnp
pop
mov
push
inc
xchg
dec
vdivss
push
popf
cltd
xchg
sahf
je
pop
xor
outsl
jl
adc
jmp
mov
xchg
dec
fisubrs
cmpb
aas
lock
sahf
je
lds
fisttpl
dec
push
and
xchg
das
ds
rcrb
hlt
add
pop
adc
mov
push
cmpsb
dec
cmpsb
test
lcall
lock
xchg
mov
in
cwtl
cs
movsb
in
ret
sbb
mov
inc
jl
mov
icebp
mov
mov
jle,pn
mov
lds
pop
lock
inc
jmp
add
adc
pop
sub
cld
inc
mov
mov
inc
std
cmp
dec
mov
cli
add
sbb
and
sub
mov
adc
roll
rol
push
popf
out
insb
dec
sbb
push
adc
sar
adc
loop
jo
sti
dec
cmpsb
sbb
sub
jg
aas
xchg
or
push
stos
arpl
cmp
addr16
lods
dec
xchg
pushf
adc
jo
cmp
in
sarl
ljmp
insl
xor
aas
popf
add
outsb
xorb
xchg
push
fisubs
xchg
out
adcl
pop
cmpsl
mov
in
xor
nop
pop
mov
xor
inc
mov
push
dec
lret
imul
jmp
add
pop
test
push
jle
inc
dec
cmp
fldl
ret
divb
mov
rolb
loopne
mov
sti
adc
sbb
test
iret
xlat
mov
dec
repnz
push
and
inc
dec
lahf
and
inc
arpl
and
rcll
daa
xor
fisubrl
jg
andl
cmp
push
lods
xchg
pop
dec
sar
jecxz
rcrl
hlt
leave
lret
je
or
les
testl
leave
xchg
jl
push
std
cmpsl
insb
lcall
xchg
push
movsl
adc
imul
xor
orb
cs
lods
jp
aas
push
shll
mov
pusha
iret
jnp
out
stc
bound
aas
inc
push
jmp
or
shl
xchg
rcrb
push
popa
or
jmp
fldt
enter
or
sub
rcl
mov
nop
xlat
aas
mov
pop
sbb
inc
sbb
xchg
sub
aam
cmp
out
out
out
cmpb
or
iret
jno
jg
inc
mov
add
add
cmp
cmp
pop
or
mov
push
sbb
es
pop
pop
fistpl
pusha
movsl
pop
adc
int3
push
dec
push
cmp
test
add
sbb
ds
in
cmp
adc
mov
push
pop
or
mov
ret
sbb
cmp
add
imulb
fsubl
sub
xchg
shl
push
mov
push
stos
push
xchg
push
mov
cs
call
and
push
pushf
orb
cmp
iret
inc
fdivrl
mov
push
and
imull
addr16
fnsave
jo
jbe
imul
sbb
push
mov
jmp
sti
mov
inc
out
xchg
test
push
or
pop
xor
add
mov
scas
add
scas
pop
mov
icebp
scas
fs
xchg
cmp
push
lcall
fmull
jmp
cmp
jl
and
xchg
pop
add
cmp
jnp
mov
fadd
imull
xor
sbb
and
pop
pushf
push
es
mov
sar
scas
cmpl
fiaddl
adc
ficoms
inc
jl
adc
ret
dec
negb
aad
xchg
movsl
mov
mov
sub
or
push
fcoms
pop
hlt
sub
loope
lahf
fs
outsb
xchg
jbe
cmp
adc
bnd
jo
push
sbb
aad
loopne
rol
cmp
shlb
pop
and
adc
test
pop
jo
fs
movsl
mov
xorb
fldt
test
xor
out
and
aaa
lock
cmc
xor
or
sbb
addr16
addr16
outsl
lock
mov
mov
movsb
imull
jg
mov
imul
std
fstpl
das
inc
fldl
lods
jbe
ds
jno
pop
pop
je
sbb
imul
dec
mov
imul
jno
bound
mov
in
add
adc
or
add
test
mov
mov
dec
es
and
xchg
pop
subl
lret
cld
sarl
rol
cmp
sbb
ja
icebp
jge
cmpsl
jp
mov
mov
or
outsl
sbb
inc
stc
mov
xorl
out
insb
mov
sub
aaa
mov
int
int
mov
addr16
push
mov
scas
sti
sahf
jo
enter
sbb
ss
cmpsb
xchg
push
adc
xchg
test
fsubrp
fcomp
push
xor
or
push
or
std
cmp
cmp
fs
cmc
dec
stc
pop
push
jne
jl
fdivl
push
mov
mov
pop
loop
jne
jns
jg
sub
iret
pop
fisttps
call
xchg
call
mov
jle
xacquire
adc
push
inc
scas
cmpsb
add
pop
lsl
rorl
mov
addb
pop
jle
cmp
lea
sub
pop
sti
popf
sbb
push
loope
les
and
std
adc
lea
xchg
aad
xchg
jecxz
aad
pusha
pusha
mov
pushf
inc
fidivs
mov
cld
inc
insb
sub
mov
fs
push
lahf
sbb
or
lahf
decl
cmp
sub
jp
rclb
nop
ret
mov
repz
lret
sbb
test
push
addb
dec
sbb
mov
push
mov
hlt
push
xchg
js
cmp
inc
jmp
iret
jne
adc
dec
and
out
pop
imul
jp
loope
cmc
dec
jns
cmpsb
adc
cmp
push
mov
aad
adc
iret
push
rorl
out
shlb
push
mov
fisttpll
out
loopne
mov
out
pop
pushf
stos
popf
daa
stos
cmp
pop
subb
stos
cmp
jg
scas
mov
rorl
or
adc
inc
dec
and
mov
sarb
and
sahf
push
adc
cltd
loop
jo
enter
addr16
leave
cmp
dec
or
cli
adc
mov
call
fwait
and
sbb
push
ss
jne
clc
xchg
nop
int
sub
lret
pop
sarl
popf
mov
mov
repz
rorl
stos
dec
ja
jg
lret
add
pop
sti
xchg
sub
insl
lds
stc
cld
aam
hlt
addr16
fiadds
cli
into
add
add
into
pop
mov
fwait
pop
jne
ljmp
lret
outsl
es
and
mov
mov
cltd
arpl
mov
and
inc
fsubrs
xor
pop
adc
aaa
lret
in
outsb
incb
stc
xchg
mov
in
dec
sbb
dec
gs
push
enter
scas
sub
into
sbb
cmpsl
xor
add
cmp
neg
jae
cmp
lods
add
push
mov
mov
sbb
cld
cmpsl
pop
loope
sub
dec
pop
add
xlat
les
sub
mov
xor
aaa
mov
mov
in
pusha
inc
jl
mov
shrl
mov
lcall
dec
jne
cli
dec
arpl
jbe
push
cs
xchg
nop
add
sbbl
and
clc
ss
add
cmpsl
push
out
sub
in
pop
and
leave
dec
pop
pop
mov
sbb
xor
dec
inc
sbb
mov
dec
clc
mov
nop
test
cmp
inc
mov
out
imul
jno
ret
enter
inc
mov
cwtl
outsl
imul
loop
test
lcall
prefetch
or
in
jg
mov
xchg
std
fwait
xorb
test
mov
dec
scas
mov
fldt
rolb
fbstp
iret
aam
aam
pop
xor
mov
lea
scas
xor
inc
ja
jp
lods
bound
jbe
cwtl
mov
add
or
dec
ds
aam
dec
rcl
xchg
repnz
out
add
dec
les
and
xchg
stc
ret
mov
fnstsw
mov
add
sub
xchg
in
mov
fcmovnbe
insb
daa
pop
fwait
insl
sbb
lret
scas
mov
xchg
adc
in
aad
cmpsl
popa
ficompl
das
jg
mov
sbb
arpl
lods
xor
jle
jae
es
rcll
jecxz
lock
fildl
icebp
jmp
jp
mov
jae
cmp
xor
sbb
inc
inc
les
cs
cs
push
dec
lcall
out
mov
xchg
push
into
outsl
ficoml
ss
add
push
inc
out
mov
push
rol
in
xchg
cmp
xor
pop
in
fnstcw
mov
jnp
jbe
test
in
insb
xchg
les
jne
mov
mov
rcrl
hlt
clc
xor
mov
pop
mov
dec
adc
and
cmp
clc
mov
push
and
or
and
rolb
enter
xchg
enter
in
imul
xchg
ja
push
fimull
sbb
mov
cmp
add
movsl
and
xchg
xor
loope
cmp
cmp
or
sti
jecxz
dec
xor
lds
notb
repz
clc
sti
mov
mov
push
adc
xchg
call
ret
adc
gs
sbb
mov
lcall
shr
dec
rcr
jnp
dec
jmp
psubusb
push
fsubl
push
dec
push
ficompl
pop
add
aas
outsb
mov
pop
data16
out
sub
sbb
adc
pushf
xchg
sarl
push
sbb
add
push
pop
sub
fstpl
dec
lret
mov
jg
mov
daa
lods
in
loopne
popa
dec
nop
sbbb
adc
and
in
dec
inc
jp
push
imul
push
mov
jne
push
inc
into
loope
mov
sbb
push
rcll
les
push
xor
je
mov
and
pop
lods
cltd
rcrl
lret
bound
scas
call
sub
test
imul
into
mov
jecxz
cbtw
insl
movsb
ss
loope
ja
mov
sub
sbb
inc
jne
push
enter
mov
mov
popa
testb
sti
sbb
movl
mov
das
popa
test
xor
cmp
repnz
adc
js
jmp
lods
ret
pop
inc
test
pop
adc
aad
mov
cmpsb
mov
xor
and
addl
loopne
push
daa
lret
pop
addr16
lea
xchg
lock
test
sbb
inc
out
jo
shl
or
addr16
je
scas
in
pop
dec
addl
pop
push
je
sbb
jne
insl
inc
outsl
dec
jns
popa
mov
subb
and
out
or
or
xor
push
pop
out
cs
lea
scas
add
jle
push
jnp
mov
pop
adc
mov
xor
movsb
or
or
sub
test
gs
movb
jae
ds
addr16
daa
or
daa
jl
in
je
loope
lret
jae
insl
inc
push
pop
cltd
and
pop
adc
test
jle
inc
jno
xor
negl
dec
addr16
fsubs
in
incb
or
call
add
and
insb
xor
or
incb
jne
sbb
int
inc
das
cld
push
mov
jns
scas
popf
pusha
sub
dec
cmp
mov
jg
mov
push
mov
jg
mov
add
fcompl
jp
scas
sbb
xor
ljmp
pop
or
jecxz
mov
mov
cmp
testb
lcall
fiadds
loope
xor
movl
jbe
dec
cltd
add
int3
mov
hlt
dec
dec
lds
clc
xchg
je
lret
in
popa
mov
out
push
int3
ret
or
adc
test
into
aam
push
jmp
sarb
jb
lret
call
in
push
testb
scas
pop
lret
sti
dec
ljmp
mov
mov
in
pop
cmp
cmp
mov
jecxz
inc
incl
pop
mov
fwait
orb
mov
out
pop
inc
sub
bound
movsl
enter
ds
pop
arpl
cmp
xor
mov
xor
adc
mov
dec
out
rcrb
mov
xlat
dec
and
into
mov
ljmp
cmpsb
jmp
cmpsb
push
ret
femms
push
adcb
inc
cld
mov
aam
testl
lods
pushf
mov
mov
daa
and
icebp
add
cmpb
mov
aad
xlat
mov
xor
mov
out
mov
jno
out
lahf
or
dec
fisttps
push
sub
sbb
sbb
or
dec
sbb
xchg
test
lea
imul
iret
sbb
loopne
push
loop
sbb
cmp
stos
cmc
or
ret
mov
std
call
scas
addr16
rcrl
push
mov
mov
and
or
sub
lock
clc
je
sbb
sbb
test
pop
inc
jle
rcr
pop
pop
jle
jne
inc
mov
imul
cwtl
ret
and
cmp
dec
push
leave
pop
andb
xchg
or
mov
xor
inc
mov
cmpsb
lret
leave
xchg
rorl
jecxz
ret
or
daa
test
lret
add
lcall
xor
cmp
mov
sub
arpl
bound
adc
lock
pop
nop
lahf
sbb
inc
add
or
out
lahf
cmp
jo
mov
enter
dec
mov
mov
dec
push
fcoml
rcrl
xchg
sbb
lea
mov
dec
stc
out
shrb
mov
xchg
jle
mov
mov
adc
cmp
add
add
push
in
mov
jno
popf
mov
dec
inc
jnp
dec
xchg
add
jle
push
mov
mov
call
push
hlt
stos
adc
mov
stos
lods
jo
pop
jmp
jns
addr16
sarb
fldl
nop
stos
add
outsl
or
fcmovu
inc
sarb
or
movsb
out
cmpsl
cmp
test
mov
pusha
sti
or
push
test
rclb
pop
test
sub
pop
adcb
dec
sti
push
jge
jae
mov
je
lret
rcrb
inc
xchg
dec
add
aam
pop
inc
in
dec
cmc
mov
movsb
ficompl
push
cmp
adc
xor
xor
lea
xchg
in
aas
mov
cmc
sub
xchg
adcb
inc
leave
es
mov
int
popf
iret
outsl
adc
int3
inc
outsl
es
data16
jne
mov
mov
jae
jl
mov
pop
xor
mov
cmpl
inc
stc
cmp
sbb
int
jno
push
jp
rcrb
cmp
and
loopnew
xor
clc
push
adc
inc
les
pusha
rcll
sub
addl
adc
sub
cmpsl
dec
jne
or
jp
ret
pop
pop
mov
fisubrl
xlat
leave
jge
repnz
loope
outsb
pop
add
fbstp
scas
aam
or
sbb
dec
sub
hlt
pop
xchg
mov
fcmovbe
add
cmp
movsl
out
sub
xor
repnz
inc
xor
inc
mov
jno
lcall
fdivrs
or
shlb
or
shl
aas
mov
incl
xlat
pop
ffree
std
popa
loope
fmuls
es
adc
incb
lods
mov
loope
push
or
test
mov
int3
lretw
testb
adc
stc
popa
fdiv
push
jp
xchg
das
mov
sbbl
dec
in
sbb
sbb
dec
xchg
xor
push
sub
in
mov
mov
inc
sub
push
cltd
mov
les
loop
dec
xor
negb
inc
rol
sbb
insl
jae
mov
lods
jns
in
mov
aad
ret
lock
xor
mov
add
dec
mov
ficoml
mov
in
std
mov
dec
rol
push
and
xor
add
cmp
imul
cmp
ficoms
sbb
loopne
hlt
mov
mov
sbb
in
or
jne
je
dec
push
dec
sbb
imul
push
test
mov
vandnps
dec
mov
or
and
lea
das
outsb
pop
in
xchg
jle
xchg
dec
fisttps
outsl
mov
add
lds
jne
rcrl
out
add
call
mov
or
ljmp
mov
out
add
and
sbb
loopne
jns
jecxz
mov
inc
cmc
mov
out
repz
insb
and
sbb
inc
aam
mov
insl
ds
ss
repnz
pop
and
inc
popa
fidivrs
je
cmp
push
pop
jp
imul
mov
aad
mov
insl
loope
leave
aam
lods
and
pushf
stc
mov
xchg
pop
cmp
sub
xchg
adc
popa
ja
call
jmp
popa
mov
mov
inc
sarb
clc
xchg
mov
aas
push
ljmp
pop
dec
lret
mov
or
mov
outsl
scas
insb
and
out
mov
or
lcall
out
rolb
das
pushl
out
outsl
mov
rclb
add
mov
test
repnz
cmp
sbb
xchg
xchg
push
rorl
gs
sbb
xor
mov
jmp
fidivrl
or
lcall
add
out
aas
push
clc
and
dec
out
lods
loope
mov
test
dec
or
mov
paddd
fdivrs
mov
scas
cld
mov
repnz
pop
stos
movsb
clc
push
sarb
ret
pop
mov
dec
std
test
mov
dec
pusha
cmp
cld
pop
inc
sbb
sub
andb
sbb
push
shrl
push
xchg
pop
sbb
mov
sub
lcall
rcl
dec
mov
jge
and
mov
dec
popf
sub
sub
lret
adc
mov
lock
insb
ja
sahf
cli
out
test
fcmovu
adc
in
pop
pop
add
jp
xchg
sahf
movsl
hlt
scas
dec
js
pushf
xor
adc
repz
js
xor
adc
inc
mov
or
outsb
jns
je
jb
push
push
push
dec
dec
outsb
sbb
test
or
lods
pop
xchg
scas
js
fnstcw
lcall
scas
pop
insl
pop
fxch
cltd
cmp
adc
add
std
dec
clc
fisubrs
cltd
lock
into
outsb
inc
or
sti
xor
aad
data16
adc
jb
ficoml
scas
gs
sbb
cli
push
nop
add
sub
loop
xor
xchg
in
jbe
xchg
and
pop
mov
dec
sbb
pusha
aam
arpl
inc
inc
divb
xor
push
js
mov
push
imul
stos
adc
dec
inc
jge
mov
adc
inc
ret
mov
test
xchg
fldl
rolb
adc
sub
test
outsl
pop
or
lock
out
mov
xor
fnstsw
mov
hlt
daa
mov
sbb
rorb
inc
mov
sub
stos
push
jmp
sub
jge
jno
stc
cmp
cmp
xor
cmp
jae
adc
pop
dec
cmpsb
mov
mov
sti
jl
adc
repnz
leave
jl
sbbl
xor
std
jl
cmp
or
lcall
and
gs
push
xor
add
sarl
ficoml
mov
add
repz
mov
mov
inc
imul
mov
fcomps
addr16
pop
add
add
arpl
leave
or
out
pushf
jmp
jge
ja
xchg
int
push
cwtl
or
shl
fneni(8087
out
sbb
dec
dec
loope
inc
adc
jmp
sub
loop,pn
inc
inc
sub
lret
std
pop
sub
std
fistps
and
mov
cld
xchg
pop
arpl
out
mov
test
cmpsb
inc
lcall
sbb
pop
pop
sahf
addr16
push
faddl
adc
ds
add
out
repz
xor
inc
xor
stos
mov
or
jne
in
pop
xchg
sub
add
nop
add
aam
mov
and
adc
add
jp
sbb
mov
pop
lock
das
lret
daa
outsb
sti
pusha
fsubl
test
orb
jae
push
std
cmpsb
lea
jmp
stc
push
push
dec
xchg
rcrl
jb
sbb
pop
cmp
mov
imul
xchg
adc
adc
leave
rorl
les
fwait
shlb
cmpsl
cmp
mov
jae
adc
mov
pop
pop
mov
mov
mov
inc
in
push
das
cltd
mov
shr
or
repnz
or
ja
mov
mov
dec
fldl
pop
dec
dec
test
iret
out
cmpsb
and
and
jbe
mov
pop
es
jg
cmpsl
or
mov
dec
xchg
adc
imul
pop
mov
jno
test
test
loopne
pusha
aad
gs
leave
aad
js
call
ret
mov
xchg
loope
pop
mov
dec
sarb
lods
mov
mov
inc
pop
fbstp
or
and
mov
jge
push
ffree
inc
lock
aad
lock
jb
xlat
add
jns
jb
ljmp
fildl
loop
lock
cmp
lods
xchg
cmp
dec
aad
insl
aas
inc
adc
int3
stos
adc
imul
sbb
fcmovnb
scas
rcl
xor
or
xchg
fbld
push
push
or
hlt
cmp
movsl
int3
lret
call
movsl
aas
and
mov
addr16
mov
inc
mov
lods
pop
jb
mov
arpl
stos
insl
lds
mov
hlt
mov
add
icebp
jbe
repz
in
and
jnp
in
mov
iret
std
clc
in
aas
sub
stos
jg
cmpl
nop
jbe
int
int3
sbb
push
xorb
pop
dec
inc
jl
dec
push
enter
pop
jge
outsb
cwtl
in
or
call
ret
es
xchg
add
and
lds
pusha
or
pop
pop
xchg
jecxz
xchg
and
push
dec
mov
jb
push
scas
adc
aad
je
aas
push
push
mov
mov
shr
test
sahf
sub
fsubl
ret
dec
ljmp
or
insl
inc
sub
pop
sar
jo
push
sub
ljmp
mov
xor
cld
outsl
xor
xchg
jno
mov
enter
test
mov
or
push
clc
add
mov
adc
or
sub
mov
mov
pop
sarl
dec
xchg
lahf
or
cwtl
push
mov
jae
push
repnz
in
mov
push
daa
mov
sbb
int
inc
xor
pop
cmp
pop
popf
sub
pop
insb
rcrb
mov
lret
lods
cmc
jnp
adc
mov
nop
lods
fbld
jl
pop
inc
in
sbb
cmp
fistpl
adc
mov
sub
xchg
popf
push
mov
out
ss
ss
inc
jbe
or
in
out
adc
mov
rolb
cmc
lods
mov
and
cltd
jnp
int
das
and
cmp
sbb
addb
cmpsb
pop
sub
mov
js
insl
cmp
cltd
xchg
xor
fldt
xor
fdivr
js
subl
lcall
push
mov
das
adc
xchg
xor
js
iret
push
stos
push
sub
adc
ret
sbb
cmp
xor
or
ficoms
ss
mov
into
mov
mov
mov
aas
and
lea
mov
inc
cmp
cmp
mov
pop
and
sub
dec
fptan
mov
dec
lcall
stos
cld
mov
mov
sbb
jg
mov
or
notl
enter
push
pop
dec
das
sbb
testl
rcl
add
xchg
ds
mull
jg
movd
test
or
stos
cmp
cli
ret
notb
insb
mov
and
xbegin
sbbl
add
in
or
shl
jle
xor
ljmp
dec
xor
jge
xor
and
call
sar
rorl
and
sahf
loopne
sbb
xlat
stc
fdivrs
loopne
cmp
xchg
add
jmp
jb
adc
aam
push
sub
das
bnd
rcr
test
insb
fisttps
imull
imul
xor
mov
dec
push
pop
xchg
cmp
ret
adc
scas
push
mov
fcmove
in
shlb
mov
js
adc
adc
fcmovb
cmpsl
in
shrb
mov
stc
pop
mov
mov
outsb
roll
push
dec
add
jp
push
fdivrs
repz
fstp
pusha
fcmovnbe
add
popf
cwtl
sub
into
inc
ja
cmp
mov
jge
lods
shlb
incb
jns
xchg
pop
jbe
orl
mov
mov
popa
mov
lahf
cmpsl
arpl
ljmp
mov
xor
cmp
xor
loopne
cltd
jbe
aaa
or
pop
orb
inc
sub
cli
pushf
cs
jg
outsl
or
dec
dec
mov
rolb
pop
mov
cmpsl
mov
insb
push
les
aaa
shr
popa
pusha
fsub
xchg
inc
lahf
mov
xor
jae
stos
or
mov
inc
mov
pop
mov
hlt
call
cmp
pop
xor
add
xchg
fcmovb
mov
pop
mov
lock
jb
and
inc
pop
mov
pop
addb
xchg
int3
ret
xchg
int3
clc
les
cmc
lahf
dec
scas
popf
cmp
pop
mov
sbb
pop
shrb
ror
insl
fs
mov
xchg
adc
jl
loope
lcall
ds
push
add
pop
add
mov
dec
in
jbe
lds
fnstenv
addr16
hlt
cmpsb
into
mov
pop
lock
push
mov
mov
ret
arpl
idiv
mov
stos
cwtl
outsl
js
add
idivl
out
nop
xor
mov
push
enter
shrb
nop
adc
nop
dec
push
cmp
arpl
mov
mov
ret
fcompl
pop
jb
scas
inc
add
cltd
sbb
cs
ss
test
sub
clc
or
loopne
push
push
dec
mov
push
fbld
stc
test
jno
test
inc
and
insb
scas
lock
inc
adc
sbb
cmp
mov
xchg
dec
adc
int
rclb
cmp
add
inc
mov
sub
mov
pop
stos
scas
mov
popf
mov
subl
inc
sub
js
pop
arpl
sub
xchg
arpl
ljmp
cltd
push
ja
into
inc
out
mov
mov
pop
pop
popf
data16
and
add
stos
addr16
jo
in
loopne
mov
lea
sbb
pop
pusha
or
enter
xchg
js
fiaddl
dec
or
jmp
loopne
sbb
aam
inc
jae
rorl
push
imul
int
daa
loopne
cwtl
dec
ds
or
xchg
sarb
les
imul
out
int3
int3
jg
dec
push
leave
scas
icebp
lds
or
les
pop
push
push
shrl
mov
clc
shrb
filds
es
jb
lds
int3
ffree
push
frstor
mov
and
mov
sarl
cmp
test
mov
ror
sub
push
js
inc
pushf
jmp
jmp
xchg
jp
aam
mov
scas
outsl
insb
adc
pop
mov
subb
sub
mov
xor
inc
lahf
test
mov
pop
adc
dec
or
aam
repnz
dec
cwtl
ret
ffree
push
lock
fmull
testl
adc
add
add
cmpb
lock
xchg
adc
in
nop
xchg
aas
dec
or
pop
mov
push
inc
shl
jp
scas
faddp
enter
cmp
insl
mov
jmp
lds
jae
add
repnz
shrl
sbb
push
mov
sahf
pop
arpl
or
and
stos
and
mov
jno
add
cmp
jno
dec
shl
lcall
or
push
inc
sub
dec
mov
rcll
lock
enter
mov
xlat
bound
cmp
jnp
xor
adc
je
pop
xlat
pusha
mov
jmp
pop
mov
test
subl
dec
add
test
mov
aam
sbbb
adc
push
cmp
imul
imul
fcmovnu
les
pop
jnp
sbb
lds
jecxz
and
int
pop
add
insb
leave
push
jmp
mov
xchg
loopew
or
test
cmp
cmp
sub
loopne
insb
add
in
inc
or
dec
icebp
mov
add
mov
icebp
add
dec
lock
mov
test
and
xor
adc
xchg
add
outsb
outsl
pop
pop
sbb
mov
inc
jne
movl
fwait
aad
pop
push
push
mov
jb
jnp
ja
popl
lds
les
aam
js
jae
nop
add
and
cmp
cmpsb
inc
outsl
dec
and
xor
icebp
mov
incb
movswl
popa
push
sub
pop
bound
dec
sbb
pop
in
jecxz
jae
fistpl
rsqrtps
xor
add
aad
adc
and
pusha
and
sub
pop
and
push
int
push
cmp
aaa
xchg
sbb
pop
mov
sbb
push
sar
das
xchg
in
outsl
movsb
sbb
mov
lea
mov
adc
ja
cld
enter
inc
in
imul
insb
cmp
inc
add
negb
fstpt
test
pcmpeqd
xchg
cmp
stos
xchg
out
pushf
mov
mov
leave
outsb
out
lea
or
dec
cltd
add
aam
sub
pop
enter
add
mov
mov
stos
cmpsb
insl
cmp
cli
lcall
or
jns
fstps
mov
adc
mov
in
dec
imulb
cmp
pop
push
xor
movsb
insl
pop
mov
pop
das
out
xchg
or
mov
mov
mov
cwtl
pop
jge
outsb
daa
cmp
andl
mov
sbbl
mov
gs
sbb
sbb
mov
mov
jmp
jno
mov
les
inc
sahf
mov
adc
stos
mov
rcll
arpl
in
rorl
or
in
mov
inc
pop
call
push
and
imul
or
jmp
push
nop
stos
rorb
mov
mov
and
es
xor
enter
mov
sbb
jno
aam
in
repnz
sarl
sbb
sub
jbe
xchg
andl
loopne
das
into
adc
sub
ja
dec
cli
popf
aaa
negb
or
mov
and
imul
cmovae
adcb
push
xchg
xor
mov
lcall
xor
adc
sub
xchg
sub
pop
pusha
popa
sbb
sbbl
xorb
repz
jge
and
pushl
inc
icebp
xchg
inc
les
cmp
xchg
mov
test
movsl
jno
mov
in
stos
pop
lcall
mov
out
pushf
das
push
jne
stc
adc
stos
xlat
xor
or
movsl
push
scas
sbb
kortestw
xchg
pop
jp
mov
out
rol
pop
jmp
sti
cld
std
movsb
fstpt
imulb
dec
adc
dec
insb
add
in
jge
les
pop
popf
daa
pushf
outsb
data16
rcr
or
leave
xchg
scas
int3
scas
or
inc
pop
in
pop
or
hlt
jl
cmp
ljmp
mov
lahf
jg
pop
push
fs
out
jle
xlat
jo
inc
adcb
xorl
mov
pop
ljmp
jnp
in
je
subb
imul
add
adc
pop
jbe
or
sbb
add
xlat
fwait
pop
mov
xchg
nop
mov
add
stos
test
lock
and
ds
popf
mov
das
movsb
and
sub
test
shrl
adc
sti
sbb
test
jg
cmp
aas
popa
push
cmp
in
movsb
aad
lods
popf
call
adc
fwait
mov
xor
inc
pop
mov
mov
mov
push
sbb
divl
mov
rol
dec
fnstcw
std
loopne
aas
aad
add
and
das
mov
add
push
mov
aas
dec
pop
sub
jl
xlat
push
jecxz
mov
dec
add
pop
orl
mov
xchg
pop
sahf
popf
sahf
js
xchg
cmpsl
xchg
cmpsb
es
ss
icebp
stos
dec
or
mov
stos
mov
insl
cmc
mov
jle
cmc
aaa
push
dec
in
cmp
js
addr16
arpl
and
xchg
dec
cmp
clc
xchg
out
dec
fidivs
adc
xchg
pop
cwtl
xor
xchg
jg
adc
in
sbb
and
in
mov
adc
shll
loopne
xchg
imul
pop
mov
and
cmp
repz
cmp
adc
pop
jbe
and
inc
rol
movsl
lock
cmpsl
decb
loopne
mov
push
jmp
loop
std
jp
dec
mov
mov
lock
push
jl
xchg
in
dec
popf
shll
jl
sub
and
test
popa
push
push
sbb
cmpsb
xchg
dec
andb
add
sbb
adc
call
sbb
xchg
dec
popf
cmp
and
adc
jecxz
lods
add
daa
hlt
push
push
cli
mov
xchg
jl
shrl
push
out
mov
lret
ss
push
popf
sarb
add
xor
into
pop
jo
push
pminsw
fs
add
pavgw
jmp
mov
stos
jb
push
fsub
add
cmp
daa
mulb
xchg
shlb
sub
sti
sbb
int3
sbb
imul
mov
insl
mov
imul
andl
add
or
in
sbb
notl
adc
and
mov
pop
js
scas
ds
sbb
ljmp
fadds
sahf
mov
test
jb
xchg
scas
lret
adc
inc
sub
int
jp
aaa
xchg
cmpb
sub
clc
push
mov
into
das
daa
lahf
idivl
insb
in
insb
push
mov
es
icebp
push
les
int3
adcl
scas
arpl
aam
leave
roll
call
adc
outsl
mov
cmp
out
sar
adc
adc
lods
mov
cmp
sbb
icebp
out
mov
dec
sub
sbb
add
test
sub
pop
or
cmp
pop
or
mov
jmp
jecxz
stos
jmp
pop
xor
repz
imul
movsb
andb
cmp
test
and
push
fwait
insl
dec
ret
mov
test
mov
repnz
mov
rorl
loop
fdivrp
iret
inc
movsb
jge
xchg
ret
std
js
inc
pusha
cmp
ja
stos
cmp
push
push
pop
add
in
xchg
xorl
addr16
inc
stos
push
mov
shll
jl
mov
stos
mov
lods
pushf
fucom
test
or
out
rclb
shrl
jae
cmpsb
dec
mov
pop
inc
mov
lret
dec
mov
scas
jbe
test
lcall
loop
stos
and
mov
scas
in
cmp
or
push
sbb
sti
lea
or
test
lods
rcl
call
mov
xchg
movsb
cltd
clc
push
pop
stos
lock
roll
mov
in
int
xor
add
les
and
xchg
add
bound
push
fadds
add
inc
or
hlt
les
cmp
jecxz
mov
jae
aad
pop
les
arpl
std
xchg
pop
arpl
shll
dec
dec
mov
pop
mov
pushf
fistps
ficoml
mov
lret
jae
cltd
lds
xchg
rcll
adcl
mov
add
pop
cmp
div
xchg
dec
loope
icebp
fs
xchg
xchg
dec
enter
dec
adc
mov
xor
jns
add
inc
sub
cmp
lods
sbb
ljmp
lds
adc
push
jecxz
loope
pop
dec
xor
lods
iret
jmp
sub
aas
negb
jecxz
mov
hlt
rcll
je
bound
push
incl
adc
sub
lock
shr
lock
mov
loope
shlb
shl
scas
xchg
pop
jne
or
xorl
dec
mov
push
clc
inc
fdivl
repnz
loope
pop
fstl
mov
movl
adc
cmp
add
fwait
adc
pop
lahf
into
adc
mov
or
xchg
rcr
cld
dec
dec
dec
adc
inc
test
jo
jl
adc
inc
sbb
je
xlat
adc
mov
lods
loope
shlb
fisttps
lea
mov
pop
or
lods
jo
imul
cltd
test
lds
xchg
and
and
and
pop
jo
mov
loopne
enter
inc
push
shlb
test
mov
push
loop
lret
cmp
test
das
cmc
or
scas
push
arpl
xor
icebp
pop
int3
jecxz
mov
jg
push
inc
sbb
ret
sbb
subb
xchg
pop
das
sbb
push
xor
in
jge
fisubrl
in
and
adc
push
lcall
popf
in
je
int
push
lcall
xchg
fcmovne
pop
jmp
xor
int3
mov
xor
or
int3
fsubr
lods
mov
xor
pop
sub
das
aaa
mov
cmp
dec
ja
sbb
fstpt
stos
ss
mov
test
test
rcll
in
or
rolb
mov
push
jge
jle
adc
ror
mov
mov
jmp
out
push
mov
jecxz
mov
mov
mov
push
jle
cmp
leave
cli
in
jns
imul
jle
out
and
pop
mov
lods
xchg
in
lahf
js
mov
test
shrl
push
push
loop
repz
jl
pop
lahf
fimuls
pop
jge
push
arpl
ds
aaa
mov
push
lahf
movsb
xor
arpl
mov
xchg
push
fstpl
dec
and
and
push
jge
call
iret
dec
xor
cmp
lahf
cmp
dec
fcmovb
jl
sahf
sti
lret
jo
jmp
jne
shrb
jmp
mov
and
sub
adc
and
std
nop
cmpsb
push
rcrl
fwait
cmpb
cmp
pop
jge
jns
cmpsl
sbb
gs
mov
adc
push
je
dec
fcmovnbe
call
adc
mov
das
in
rcrb
mov
adc
mov
inc
or
jl
dec
cli
cmp
ds
shl
repz
pop
cmp
loop
rorb
lea
cmp
movsl
sbb
xor
pop
jle
test
inc
dec
stos
xchg
movsl
stos
ret
das
fstpl
das
mov
xchg
inc
ds
jg
movsl
jge
rol
addr16
adc
mov
cltd
dec
in
xchg
adc
dec
jne
repz
or
cli
cltd
dec
loopne
fidivs
cltd
cmp
dec
push
xchg
add
cmpb
iret
and
and
dec
xor
stc
xor
mov
mov
data16
dec
mov
sbb
iret
es
sub
add
lea
test
ljmp
aad
xorb
cmpl
popa
test
adc
cmp
mov
push
adc
int3
push
fsin
lock
push
and
insb
inc
test
inc
mov
push
adc
xor
xor
mov
test
dec
jmp
mov
xchg
fxtract
jo
cmp
ds
stos
pop
ja
sti
xchg
stos
or
movsl
mov
movsb
mov
xor
push
imul
jge
int
lds
rcrl
pushf
ljmp
in
xchg
inc
mov
add
and
pop
adcl
push
dec
insl
sbb
sub
fmull
add
sbb
pop
cmp
loop
lret
and
jmp
cmp
nop
cld
jns
push
std
pop
dec
xorl
dec
std
mov
insb
jle
mov
inc
pop
call
adc
xchg
rorb
pop
add
mov
xchg
shlb
sbb
cmpsl
or
jp
add
mov
cmp
inc
outsl
aas
pushf
loope
ja
sub
add
scas
cmpsb
lcall
sbb
movsl
lods
pop
sub
outsl
jnp
repz
pop
daa
cs
testl
add
fistpll
sbb
call
fistpll
ds
xor
mov
lahf
or
pop
push
ja
xchg
xchg
inc
mov
ljmp
add
stos
aaa
sub
mov
das
subb
sbb
insb
das
ljmp
jl
inc
imul
ljmp
out
je
xchg
in
inc
mov
lret
stc
in
lahf
mov
mov
movsb
shlb
xor
jbe
rcl
mov
fidivrs
lods
lret
inc
clc
rcrl
inc
dec
mov
lods
push
lret
jge
xor
das
fisttps
mov
leave
rcll
lods
xor
sub
rolb
pop
leave
pop
sub
scas
push
cmp
loop
pop
push
pushf
xchg
push
adc
dec
and
in
mov
inc
push
mov
arpl
jg
stc
pop
jae
data16
aas
lods
xor
push
daa
adc
shl
je
or
push
addl
imul
das
dec
hlt
psrlq
testl
cld
sbb
mov
or
sbb
adc
xchg
push
jmp
mov
mov
das
or
movsb
clc
outsl
inc
sub
stc
cmp
adc
sbb
inc
push
je
pop
inc
jp
jp
rcrl
lret
mov
add
cmpsb
insb
aas
inc
xchg
dec
in
sbb
jecxz
leave
std
adc
inc
into
jge
fsubrl
mov
stos
nop
cmpb
aaa
jmp
mov
add
xchg
shlb
inc
out
jnp
pop
push
in
xchg
mov
nop
icebp
scas
inc
call
addl
mov
cwtl
push
call
push
sbb
push
add
push
and
insb
xor
btc
cmp
mov
popa
xchg
fdivs
mov
pop
adc
sarl
mov
pop
jnp
fdivrs
push
es
add
cmp
aad
pop
push
jmp
ljmp
push
in
std
and
loope
std
mov
sub
ljmp
mov
ret
or
lds
jmp
push
hlt
pushf
inc
jb
ret
sbb
xor
pop
xor
push
sub
data16
push
add
bound
icebp
bound
push
into
dec
enter
aad
sbb
std
repnz
or
push
fldcw
es
xor
adc
in
subl
aam
xchg
lea
test
repnz
jns
dec
insl
shl
fldenv
xor
leave
add
mov
sub
faddl
pop
push
dec
cmpb
push
pop
push
add
sub
insb
pop
lods
push
add
std
shr
sub
xchg
lret
pop
xor
ficoms
sarb
push
negl
into
mov
adc
mov
enter
xchg
dec
lock
fisubl
jns
add
mov
lahf
mov
pushl
repnz
daa
and
cld
or
push
adc
mov
stc
icebp
push
mov
lea
lds
xor
aam
inc
sub
fcmovu
xor
es
lea
mov
outsl
and
pop
sahf
sbb
iret
cmp
pop
xor
sti
addl
test
cmpsb
xchg
ret
cmp
movsb
fwait
popf
jl
inc
int
lahf
test
pop
sub
cmp
pusha
mov
dec
jl
pop
or
sub
insl
sarl
jg
stc
dec
pusha
mov
cmpsb
cwtl
cmp
cmpsl
inc
inc
and
jge
mov
pop
and
mov
lret
jae
adcl
adc
xor
adc
sbb
push
xchg
fdivrs
mov
cld
xor
mov
cmp
in
loope
in
shlb
imulb
mov
out
lahf
ret
fisubl
push
nop
pop
push
push
xchg
cmpsl
cwtl
mov
mov
sbb
pop
mov
adcb
imul
pop
popf
mov
outsl
sub
data16
adc
leave
out
or
lods
sub
loope
cmp
in
jg
sahf
add
push
jne
test
fmul
hlt
sub
and
pop
in
xchg
out
stc
mov
lea
push
addr16
adcl
ret
pop
jo
jnp
mov
rcrl
jns
inc
outsb
jge
mov
or
jae
test
pop
fldenv
inc
mov
push
inc
dec
mov
pop
sbb
ds
out
hlt
cld
xor
pop
mov
or
aad
decl
add
icebp
lods
sub
cwtl
ss
loopne
xor
ljmp
xor
xchg
fadd
lds
adc
pop
mov
incb
subl
cli
das
das
sub
cmc
sbb
mov
mov
pusha
xor
xchg
pop
out
aaa
insl
outsl
mov
addr16
movsb
inc
repnz
jecxz
jle
cmpsb
loop
mov
test
pop
xchg
enter
xor
jo
jo
cmpsl
js
mov
iret
bound
out
leave
push
push
into
pusha
stos
cmp
out
outsb
xor
enter
and
pop
clc
addr16
nop
fistps
sub
push
insl
das
mov
sbb
mov
jmp
push
imul
sub
mov
adc
imul
adc
and
into
mov
fcmove
inc
mov
imul
inc
dec
sub
leave
mov
or
gs
clc
mov
mov
clc
adc
sub
and
jmp
inc
fldenv
push
call
addr16
pop
mov
clc
mov
outsl
mov
lods
js
stos
push
aam
push
in
push
or
dec
fistpll
push
sbb
push
dec
frstor
add
ja
in
enter
mov
sbbl
sbb
sub
nop
adc
in
aad
sub
shr
or
pop
xor
lret
or
mov
sti
sbb
mov
je
mov
sbb
jo
std
mov
insb
push
jae
incl
sub
add
jecxz
inc
push
lea
insb
movsl
mov
lcall
inc
push
daa
mov
xchg
fimull
in
orl
repz
das
sbb
pop
add
jne
fidivrs
xchg
push
adc
xor
jecxz
fcmovnu
icebp
ds
mull
mov
mov
imul
mov
cmp
pop
and
mov
clc
push
sbb
ret
xor
xor
lret
xor
pop
adc
mov
decl
add
cs
negl
xor
cwtl
pushf
outsb
repz
mov
das
mov
arpl
sbb
scas
shrb
sti
mov
les
inc
ret
sbb
mov
adc
or
test
mov
push
xor
popa
ret
inc
sti
ds
mov
adc
mov
rcr
mov
dec
sbbb
dec
inc
jb
sbb
test
std
mov
fadds
adc
pop
subl
inc
rorl
adc
xchg
movsb
sub
loopne
lds
push
sub
repz
pop
pop
fidivl
pop
xchg
test
jp
pop
fincstp
and
cltd
push
and
xchg
mov
jbe
outsb
std
popl
sbb
fs
adc
repnz
int
inc
pop
lahf
mov
xorb
mov
out
cmpsb
xchg
scas
cmc
orl
call
inc
into
cld
sti
stos
aam
or
sbbw
cmp
dec
adc
pop
shlb
je
stos
lods
dec
imul
lcall
jbe
das
push
ficoml
insl
mov
mov
mov
xchg
mov
inc
fstpt
pop
pop
xor
pop
fcoms
mov
in
lock
movsb
lret
sbb
fnstenv
pop
repz
fcmove
pop
push
call
push
inc
mov
xchg
pop
mov
icebp
sbb
push
mov
lods
jg
aam
jg
pop
aam
push
mov
loop
cld
jb
lods
or
add
mov
sbb
dec
cld
insb
out
icebp
jae
inc
pop
fsts
mov
movsl
fwait
imul
mov
push
mov
jno
inc
daa
cmp
dec
dec
fdivs
cmp
cltd
mov
xchg
pop
fdivr
pop
dec
insl
mov
imul
xchg
fidivrl
jg
idivb
push
push
mov
mov
push
push
dec
insl
sub
dec
mov
addr16
addr16
fdivrs
and
pusha
addr16
jmp
xchg
out
insb
movsl
int3
sbb
or
out
mov
xchg
cmpsl
mov
inc
pop
push
outsb
or
dec
idivb
dec
pop
test
mov
pop
xlat
loope
sti
and
xor
push
mov
nop
add
push
push
sub
pop
mov
mov
sub
inc
inc
rorl
dec
adcb
jae
mov
jge
outsb
repz
push
adc
pop
adc
addl
jl
jl
ja
clc
stos
xor
repnz
lret
repz
mov
add
roll
pop
ret
scas
xorb
cli
xor
and
loopne
stos
cmp
and
or
rcll
inc
add
popa
mov
push
push
sub
jae
cmp
repz
inc
lahf
loopne
push
push
stos
lea
test
lret
ret
push
push
cmp
sbb
xchg
mov
stos
fstps
in
ret
stc
roll
lret
int
add
and
sub
adc
scas
insl
iret
cld
cli
xlat
xrelease
hlt
inc
in
outsl
scas
mov
pop
je
lea
bound
jmp
push
cmp
mov
pop
pop
mov
mov
push
gs
daa
test
pushf
and
add
or
aaa
add
mov
cmc
or
rcrb
repz
in
inc
cmpxchg
pop
loopne
ret
rcrb
into
jmp
prefetch
or
pop
xchg
lcall
scas
xor
add
out
int3
xchg
hlt
cmpb
arpl
cltd
arpl
pop
jb
cs
adc
in
in
leave
lcall
jmp
push
inc
adc
sub
sbb
sub
adc
mov
add
and
sbb
xchg
mov
inc
mov
push
mov
dec
and
xor
xchg
mov
aas
and
data16
xorb
stos
sub
outsl
jae
pop
jp
shl
dec
sbb
inc
movsb
iret
mov
sbb
test
dec
clc
mov
jnp
xlat
add
mov
pop
pop
es
mov
movsl
lods
shll
xchg
mov
mov
inc
xor
andb
mov
xchg
hlt
sti
lret
lods
mov
fistpll
imul
movsl
mov
and
pop
cltd
inc
imul
xchg
nop
mov
sbb
jp
lret
sbb
lcall
lea
mov
mov
std
sub
movsl
rol
xchg
cs
fistps
push
mov
in
shll
fstpt
movsl
cmp
dec
fwait
mov
stos
fbstp
mov
ret
pop
cmp
data16
lahf
and
mov
cld
iret
adc
or
jo
aad
lea
pushf
mov
sub
roll
mov
jnp
jne
in
xor
pop
stos
out
arpl
fisttpll
movsb
sub
data16
test
or
push
and
loopne
push
dec
stos
pop
inc
insl
pop
dec
or
movsl
cmpl
popa
ret
mov
xchg
adc
lods
pop
in
or
daa
hlt
call
iret
mov
inc
xorl
icebp
dec
enter
push
mov
in
rcrl
icebp
pop
cmp
loop
push
jle
lock
and
or
outsb
sti
lahf
clc
mov
inc
cmp
push
push
idivl
sub
mov
jg
sahf
scas
xchg
dec
popf
mov
lret
ds
adc
pusha
mov
push
adc
addb
pusha
in
repnz
ret
add
and
iret
rcr
pop
jp
test
daa
mov
cmc
pop
push
jns
in
and
shlb
or
jle
ljmp
popa
scas
jl
mov
data16
or
into
pop
jne
jnp
push
xor
das
pop
int3
xor
sub
add
cmp
lahf
and
leave
out
das
mov
mov
mov
out
add
cmp
or
into
sub
inc
mov
xor
movb
rcll
dec
lds
add
cmp
sub
ret
je
aam
add
cld
inc
cmpsl
stos
pop
xchg
lds
fdivrs
lock
push
add
xor
add
mov
add
or
or
testl
xchg
imul
insl
xchg
insl
jmp
fists
rcrb
xchg
mov
in
sbb
xor
idivb
jp
or
push
pop
mov
pop
mov
lods
jno
mov
pusha
loopne
out
pop
in
out
lgs
push
cs
jmp
je
add
lret
lahf
inc
loope
inc
or
out
fwait
lods
inc
mov
imul
cmp
loopne
push
push
add
cmc
out
lods
push
fldcw
nop
test
ret
cmpsb
into
fists
sbbb
jb
mov
test
or
push
out
sbb
pop
and
mov
inc
mov
pop
test
mov
cmp
jmp
add
cmp
jmp
aam
outsl
in
xor
push
mov
gs
xlat
shlb
jle
mov
out
jns
fdivs
sti
mov
sub
subb
jo
je
mov
stc
out
xor
cli
xor
lds
dec
call
sti
rorb
xor
or
mov
sbb
jle
push
test
sub
add
sahf
pop
popf
sbb
cmp
dec
jmp
mov
cmp
sub
mov
insb
pop
sbb
neg
fists
mov
fcomps
incb
cli
shr
jo
cmp
enter
mov
and
sub
imul
pop
jnp
iret
movups
sti
xchg
cli
dec
xchg
xchg
sbb
hlt
cmp
loop
inc
das
mov
pop
xor
pop
cmpsb
sub
mov
sub
test
add
test
dec
outsb
imul
addr16
mov
add
ret
and
jne
stos
out
xchg
and
push
add
lea
sub
push
in
popf
push
sub
adc
scas
dec
in
jbe
fdivrs
cmp
mov
adc
mov
xor
inc
mov
repz
jne
mov
lea
pop
mov
cmp
rolb
push
pushf
repnz
in
inc
sahf
lds
cmp
sbb
aam
mov
inc
daa
lahf
adc
jmp
addl
or
inc
inc
gs
inc
jne
dec
xchg
in
nop
cwtl
movsb
add
test
dec
sbb
scas
xchg
in
sbb
shl
dec
setle
xchg
cmpsl
pusha
pop
mov
push
pushf
mov
stos
lret
std
andl
in
dec
test
lret
mov
cld
xlat
adc
dec
outsl
push
popa
pushf
pop
hlt
cmp
adc
arpl
loopne
xchg
inc
pop
xor
cmpsb
or
bound
stos
sarl
jle
sbb
in
fnstcw
mov
insl
lods
shrb
out
fwait
mov
inc
push
add
ret
ret
mov
add
loope
aam
xchg
xchg
mov
dec
ds
adcb
mov
xor
add
add
push
imul
lahf
dec
daa
mov
push
lret
pop
mov
sbbb
ds
lret
and
xor
stos
cmpsb
push
pop
push
push
sbb
lret
xor
xor
nop
and
jecxz
push
stos
testb
mov
ret
lret
cmp
inc
cmp
mov
ret
sahf
nop
in
xchg
inc
xchg
mov
inc
xchg
out
mov
mov
or
fsubs
shr
mov
mov
xlat
push
cmp
dec
frstor
movsb
push
test
pop
dec
bound
fisubrl
xchg
dec
shrl
sbb
push
xchg
mov
push
sub
xchg
add
cs
cld
push
daa
ljmp
clc
and
mov
mov
cmp
inc
call
add
pop
sub
test
das
pusha
popa
movsl
mov
add
xchg
mov
mov
pop
test
fcomip
inc
iret
popa
ja
mov
pushf
sub
xchg
ficoml
jo
fiadds
lods
jmp
testb
call
sub
stos
push
jle
or
fsubs
inc
movsl
inc
adc
dec
mov
jnp
jns
call
jne
aad
mov
and
xor
add
pop
mov
fsubrs
lods
inc
mov
pop
push
cmp
mov
inc
xchg
stc
addr16
outsl
mov
sbb
cld
aad
lods
les
mov
std
sbb
test
out
aaa
jne
inc
add
cmp
pop
sub
sub
dec
cmp
jge
or
mov
scas
pushf
sbb
pop
mov
mov
pusha
xchg
add
sbb
jecxz
test
push
push
push
fmull
inc
sbb
jne
roll
fisubrl
ss
les
dec
or
dec
lods
adc
sbb
test
mov
cmp
push
dec
jge
jmp
push
stos
insl
mov
jmp
pop
and
in
xor
out
cmp
sub
sahf
outsl
std
ds
ds
repz
addr16
jge
imul
pop
lea
xchg
add
pop
outsl
inc
push
scas
and
adc
cmp
insl
cmp
cmc
test
movsl
mov
mov
gs
mov
adc
adc
les
add
jbe
inc
jp
push
cmp
xchg
dec
lahf
jb
dec
sbb
mov
bound
or
insb
mov
lret
jmp
outsb
pop
aas
shr
jne
imul
outsb
xchg
pop
xor
pop
push
int3
cmc
insl
jbe
add
movsl
xchg
sbb
out
fdivrs
pop
fwait
jmp
into
je
xchg
call
in
sub
jge
xor
adc
andb
push
inc
mov
rcrl
inc
inc
sbb
jne
stc
mov
aam
cwtl
cmpsb
or
outsl
mov
pushf
divl
rcr
jecxz
scas
jecxz
mov
sub
dec
popf
imul
pusha
aas
pop
scas
ljmp
out
cmp
rcr
xor
lea
xchg
add
cmpsb
push
je
aaa
in
icebp
bound
pop
or
sbb
inc
ss
pop
jnp
cmp
adc
cmp
repnz
adc
or
adc
cmp
xchg
mov
fstpl
inc
inc
out
lock
insl
sub
enter
inc
dec
fcmovnb
push
es
and
lret
jbe
int
cmp
enter
pop
fwait
into
dec
push
pop
idivl
int
adc
leave
in
cmp
fwait
loop
xchg
push
cmp
mov
test
psraw
and
xchg
adc
leave
and
clc
iret
into
mov
sbb
not
push
addb
sbb
data16
sbb
mov
icebp
lret
mov
dec
insl
sub
filds
push
jnp
out
lock
and
imul
xchg
std
xor
push
repnz
shl
sub
in
into
sub
xchg
mov
loop
push
pop
cmp
xor
fisttps
xor
into
fmuls
mov
mov
cwtl
in
pop
test
pop
imul
or
sbb
pop
loop
repz
addr16
mov
data16
push
test
ds
stos
xchg
mov
mov
call
pop
aaa
mov
sbb
std
xor
leave
leave
clc
pushf
daa
ret
lods
mov
daa
or
sub
push
mov
in
mov
adc
xor
adc
insl
or
adc
fisubl
iret
fildll
push
sub
imul
lock
xlat
xchg
mov
cmp
in
out
lds
and
out
shufps
dec
dec
test
pushf
cmc
cmpsl
imul
aaa
mov
mov
imul
xchg
test
jne
push
pop
cmpsl
dec
adc
pop
inc
cs
ljmp
call
rorl
pop
cmpsl
mov
out
data16
jae
lea
icebp
cmp
cmp
cmp
adc
jnp
xchg
lods
adc
pop
ret
xchg
loop
sbb
daa
test
xchg
mov
jecxz
outsb
call
mov
les
out
out
dec
in
cmp
cmpsb
shrl
xchg
mov
out
sbb
mov
dec
jge
push
ljmp
mov
sub
sbb
pop
mov
stos
pusha
and
mov
adc
iret
sbb
sbb
subl
xchg
pop
mov
pusha
fcomi
xlat
les
lahf
jbe
mov
ds
iret
fisttps
lds
mov
dec
jg
add
daa
inc
es
out
xchg
rcll
sbb
cli
cmp
sub
inc
flds
cmp
out
inc
nop
xchg
iret
add
notl
nop
cld
inc
movsl
lahf
data16
adc
jb
mov
inc
pop
mov
popf
popa
mov
hlt
lret
test
inc
pop
sbb
enter
pop
outsb
ret
jno
lods
shrb
js
xchg
mov
in
xlat
jecxz
in
and
sub
test
push
outsl
enter
dec
dec
cld
lret
pop
inc
in
mov
icebp
das
mov
out
dec
addr16
push
aaa
lock
jle
test
imulb
or
cmpsl
adc
or
loope
or
cmp
jge
rclb
jnp
mov
add
outsb
daa
lock
and
jnp
je
pop
fwait
shlb
jl
sub
xor
pop
dec
pusha
mov
or
stos
add
xor
daa
out
clc
pop
dec
mov
xchg
sub
jno
sub
pop
mov
inc
mov
mov
ret
insl
gs
mov
mov
out
push
mov
inc
testb
fcoml
push
cli
add
imul
jns
or
fwait
push
hlt
add
xlat
cmp
xchg
imul
sbb
cwtl
adcb
xchg
cmp
push
fsubrl
aaa
xor
xlat
idivb
pusha
out
call
dec
int3
mov
pop
mov
xor
daa
lods
xlat
movsb
lahf
jl
mov
and
loopne
lock
dec
dec
xchg
sub
lds
out
sub
sub
jg
repnz
jmp
mov
pop
pop
xchg
imul
mov
pop
in
or
or
or
push
es
outsl
push
push
mov
adc
out
or
aas
in
jo
add
xchg
hlt
popf
jo
and
mov
sub
stos
mov
insb
movsl
and
mov
lahf
aam
sbb
jp
dec
mov
jae
inc
mov
and
fcmovbe
push
scas
outsb
pop
mov
push
inc
je
in
shr
push
cmpsl
aam
xchg
pop
cmpsl
rcr
xchg
cmp
inc
sbb
xlat
mov
or
cmc
add
out
pop
pop
es
stos
test
jbe
xchg
cmpb
push
dec
sub
sub
cmpsl
jmp
in
repnz
add
adc
daa
mov
arpl
fisubl
lods
dec
js
mov
inc
push
jo
mov
pop
out
inc
cmp
sub
mov
pop
mov
sbb
cltd
shl
lcall
inc
sub
inc
in
ss
adc
jns
mull
int3
mov
dec
or
mov
fcmovnu
loop
mov
xchg
lods
mov
sub
xor
xchg
dec
or
loope
lcall
xor
push
jl
aas
ret
cli
jp
popf
lock
xchg
call
xchg
arpl
imul
inc
dec
setp
and
daa
fcompl
fmuls
xchg
mov
inc
cwtl
jp
cmp
ds
jmp
push
push
adc
adc
aaa
and
pushf
aaa
sub
cli
in
mov
mov
stos
push
arpl
mov
pusha
mov
or
jb
lcall
adc
js
jnp
add
jo
mov
and
jne
xchg
jp
loope
cmpsb
adc
pextrw
stos
add
testb
ret
mov
pushf
pop
jne
xchg
outsl
bound
push
mov
push
lea
pop
out
pop
stos
push
test
adc
cmp
pusha
dec
sbb
mov
xchg
data16
or
or
jmp
mov
es
adc
cltd
mov
cmp
jge
cmc
inc
xor
shrl
loope
push
aad
out
daa
and
mov
adc
pop
inc
pop
sbb
fsubl
and
or
mov
mov
imul
inc
lret
aad
mov
iret
inc
sub
add
negb
push
gs
xorl
mov
sub
sbb
sarl
xchg
mov
sbb
inc
flds
int3
cmp
loop
nop/reserved
les
and
int3
data16
xor
or
xor
cmp
add
movsb
inc
js
js
pusha
cmp
and
inc
push
out
sbb
popf
jle
cmp
sub
call
stc
push
pop
movsb
pop
ja
push
test
filds
and
in
lds
jg
pop
cmc
ret
pop
sbb
push
pushf
xchg
add
inc
das
ja
pop
mov
iret
mov
dec
dec
push
jbe
pop
cmc
movsl
fidivrs
cmp
and
add
add
addr16
pop
lret
jge
sbb
fisubrs
jge
mov
pop
cltd
loop
pop
shll
vaddpd
imull
jmp
pop
ljmp
sub
outsl
jge
scas
int
mov
into
pop
scas
lods
roll
sbb
dec
test
mov
pop
dec
scas
insb
cmp
cvtps2pd
and
ficompl
out
push
loop
and
inc
fnstsw
push
outsb
inc
cmc
push
cli
arpl
pop
jmp
xor
push
imul
jp
sbb
mov
jle
fwait
cmc
mov
out
jmp
stc
mov
addr16
clc
mov
inc
push
add
mov
fst
or
in
in
cmpsl
and
dec
cmpl
mov
adc
leave
dec
dec
pop
xlat
in
sbb
mov
movsl
int
and
insl
push
cmp
cmc
mov
outsl
loopne
out
sbb
cld
ss
push
mov
mov
inc
or
mov
or
shrb
fs
jne
mov
lahf
das
les
lahf
push
sbb
out
jae
in
sahf
add
cmp
imull
std
lea
xlat
rcr
std
hlt
idivl
std
mov
cwtl
scas
lcall
or
out
mov
jmp
cltd
sahf
jp
jp
in
xchg
pushf
clc
xor
mov
dec
repnz
jb
pop
out
lds
and
dec
insb
mov
in
and
inc
add
and
xor
mov
hlt
les
cltd
pop
fwait
fwait
mov
push
cmp
jmp
pop
stos
jo
mov
stos
in
jbe
fldenv
insb
test
sarl
mov
mov
dec
stos
add
jecxz
ja
fucomp
or
aam
mov
mov
inc
pop
mov
dec
cli
jo
jmp
push
push
fs
jae
jmp
test
lods
mov
mov
jo
dec
fstpl
xor
cli
into
cs
pusha
clc
cmp
in
pushl
dec
shrl
ret
cmp
stos
and
mov
pop
cld
hlt
sub
inc
xchg
aam
inc
mov
cmpsl
lahf
pop
push
pop
xchg
cmpsl
cmc
aas
sarl
shll
jns
or
sbbl
adc
mov
lods
adc
stos
je
pop
fcmovb
and
mov
pushf
sahf
and
jnp
push
cld
pop
xchg
cmp
dec
sarb
xchg
lret
adc
xchg
jae
inc
sbb
outsb
std
cs
xchg
inc
and
inc
pusha
mov
mov
mov
push
aam
lret
dec
xchg
out
out
mov
jbe
nop
push
lahf
out
xchg
cli
push
sbb
mov
adcl
cmp
jg
cld
lss
inc
dec
mov
and
xchg
leave
xor
ss
cwtl
outsl
ljmp
push
es
fld
inc
in
mov
mov
cmpb
fwait
xlat
icebp
lret
lret
pop
xor
push
stc
insl
xor
dec
rcrb
adcl
jo
mov
sub
xor
aas
pop
in
cmpsl
mov
das
cmpb
mov
mov
or
mov
push
nop
out
sbb
add
je
lcall
jno
mov
in
scas
pop
fimuls
mov
orb
sbb
inc
pop
adc
add
push
enter
xor
xor
hlt
and
push
cs
push
add
sbb
and
sbb
and
cli
aaa
hlt
jne
imul
std
fcmovne
mov
and
add
pusha
lods
mov
cmpsl
repnz
xor
pop
das
out
shll
mov
dec
jp
xor
subb
mov
addr16
aas
ficoms
jmp
adc
loope
mov
ja
jl
lock
lret
movsl
xchg
fldl
add
adc
adc
sbb
pop
mov
decb
lea
push
jge
and
and
lahf
pop
in
dec
imul
jo
inc
cmpsl
or
aaa
rcll
jb
cmp
arpl
das
out
xchg
fldcw
clc
pop
mov
push
mov
jge
lods
stos
and
test
xchg
mov
dec
mov
mov
sbb
divb
xorl
cmp
add
pop
add
pop
xchg
push
adc
in
jne
roll
pop
push
sbb
fnstsw
xchg
decb
cmp
notb
cmc
sub
out
repz
aas
out
sti
fisubs
pop
icebp
xor
jp
fildll
nop
shrl
insl
pcmpeqd
int3
outsl
sub
and
jns
gs
nop
push
sub
and
mov
shll
push
push
scas
fsubs
ds
jno
loop
cmp
jnp
stc
enter
data16
cmc
adc
cld
mov
mov
sub
ret
pop
lods
int
test
pop
ds
fdivl
aam
int
test
jo
test
lods
mov
mov
or
xchg
data16
ror
cmpsb
pop
push
and
push
mov
jnp
dec
jl
mov
pop
in
lret
pusha
cmp
jae
lret
mov
lahf
and
jns
mov
ss
cmc
push
clc
fwait
jmpw
dec
push
mov
xor
ja
adc
cmp
inc
faddl
sub
jl
xchg
jae
imul
inc
lods
into
inc
xor
mov
pop
adc
mov
xchg
ss
sbb
sub
xchg
lahf
jmp
mov
cli
xchg
mov
add
stos
repz
lods
popf
fisubrl
sbb
lcall
xchg
jecxz
insl
insl
xchg
inc
adcb
xchg
movsb
xchg
xor
gs
pop
pop
sub
sbb
into
aam
scas
pop
bound
cmp
dec
ja
inc
and
pop
mov
dec
arpl
mov
xchg
xchg
push
icebp
lods
sbb
js
daa
outsl
test
pop
cld
mov
sarb
lahf
mov
out
imul
jge
add
adc
pop
cmpsb
movsl
ret
fisubrl
fnsave
cmp
mov
mov
movsb
pop
lods
mov
adc
xchg
xchg
rcr
jle
inc
pop
push
add
jge
test
aaa
in
dec
or
mov
lret
in
cmp
cli
jg
fdivrs
mov
add
sub
lea
fcoms
lea
jge
xchg
or
movsb
adc
xor
xchg
enter
stos
sub
and
sub
adc
lret
jmp
movsl
fstp
aaa
lods
sbb
leave
fcmovbe
pusha
dec
in
cmp
inc
sbb
movsl
ret
push
inc
loop
cltd
in
inc
push
pop
aam
push
mov
push
xchg
cmp
mov
pop
rcll
mov
popa
jno
or
mov
lods
and
fs
add
test
mov
iret
xchg
jle
ret
jecxz
icebp
push
xchg
inc
adc
xchg
ljmp
fstpl
xchg
fisttps
test
or
hlt
std
stc
jbe
outsl
mov
mov
sahf
rcrb
movsl
dec
adc
push
imul
jmp
dec
inc
les
int
ds
imul
outsl
lret
mov
push
fiaddl
sub
dec
movsl
dec
adc
stc
fidivs
and
out
mov
fsts
nop
imul
pop
xor
and
push
ficompl
movsb
dec
imul
mov
pop
lret
arpl
in
xor
push
jecxz,pt
xor
jmp
jno
inc
cltd
outsl
xchg
xor
xchg
imul
xchg
sarl
cmpsb
inc
into
popa
movsb
fld
adc
adc
gs
imul
xchg
popa
jbe
mov
push
pop
sarb
mov
pop
das
cmp
sub
pop
jg
jecxz
les
cmpsl
xchg
or
mov
and
repz
jecxz
ret
mov
stc
xchg
or
sbb
xor
mov
mov
mov
and
pop
cld
pusha
out
dec
cwtl
cmp
mov
and
out
sbb
jmp
xchg
xor
or
xor
clc
fstp
xchg
xor
mov
icebp
mov
jnp
ret
icebp
fwait
cmp
sbbb
pushf
and
jge
dec
lods
mov
or
cmpsl
mov
jnp
ret
loop
mov
ret
mov
xchg
sub
js
and
dec
adc
int3
sub
pop
mov
cmp
mov
pinsrw
mov
and
ds
rorl
sti
into
pop
fsubr
mov
pop
cmove
xor
xor
sub
adc
mov
cwtl
mov
add
jge
cmp
out
pop
mov
aaa
fidivs
in
dec
mov
out
adc
mov
les
iret
xor
mov
ja
clc
and
ds
clc
mov
outsb
loop
add
frstor
ss
ds
pop
ret
sbb
fldenv
mov
mov
mov
into
mov
pop
lea
out
lcall
les
jg,pn
icebp
ds
sbb
out
xchg
mov
mov
inc
jle
int
fildll
out
negl
out
push
adc
jnp
and
inc
inc
imul
cmpsl
jae
movsl
sub
fists
cmp
imul
stos
lods
scas
iret
icebp
add
lds
adc
and
mov
push
mov
clc
mov
daa
adc
adc
jp
xchg
enter
shrl
cmp
ja
push
lds
std
xchg
push
fstl
cwtl
in
imul
lahf
push
lods
cld
mov
push
in
fldcw
ffree
pop
add
push
sarl
into
notb
mov
jno
into
int3
testb
rcrl
pushf
add
insb
xchg
mov
jns
test
orb
or
aaa
fwait
ja
pop
sbb
push
xlat
mov
or
sub
xchg
add
sti
cmc
inc
aaa
test
cld
add
jmp
in
insb
int
adc
sbb
mov
and
loope
lock
cmp
pop
daa
mov
cmpsb
jmp
push
pusha
cmp
aam
inc
sbb
mov
push
xor
pusha
cltd
arpl
nop
mov
sub
dec
daa
stos
cmc
loop
imul
inc
imul
pop
push
out
mov
imul
pop
jmp
loopne
aaa
jp
mov
out
int3
ret
jnp
out
cltd
add
jge
dec
cmc
push
mov
aam
aas
and
cmp
addb
or
or
popa
sarb
xor
mov
movsl
sahf
xchg
sub
adc
das
dec
inc
xor
int
repnz
cltd
add
aad
movsb
aas
dec
gs
ljmp
fdivrl
jns
pop
fildl
jnp
cmp
mov
inc
mov
iret
out
mov
shll
add
imul
les
xor
mov
dec
sbb
mov
in
in
mov
jns
test
xchg
adc
dec
insb
jns
in
or
cs
sbb
jge
mov
std
movsl
sbb
cltd
js
jno
inc
mov
es
dec
pop
int3
pop
pop
jbe
std
push
push
das
cltd
xor
inc
dec
hlt
ja
lea
dec
hlt
cmpsl
pop
nop
pop
push
daa
repz
push
jb
xor
mov
into
aas
xchg
subb
add
xchg
dec
cmp
mov
cs
mov
adc
add
aaa
xlat
cwtl
fwait
adc
shll
clc
pop
call
pop
ljmp
outsl
cmp
xor
mov
jp
dec
hlt
enter
mov
sahf
adc
lods
ljmp
adc
mov
pop
sub
es
or
dec
shl
dec
movsb
push
push
cmc
jbe
fsts
xchg
loopne
sbb
jl
fwait
push
sbb
stos
sub
scas
adc
pop
or
pop
sub
rcr
sarw
sti
ret
fdivr
pop
mov
jle
mulb
sub
cli
or
div
sbb
sub
mov
iret
push
push
mov
jp
sarb
pop
aam
or
jbe
pop
lret
loope
pop
les
sub
dec
cwtl
pushf
or
push
mov
js
or
jae
in
mov
iret
mov
fimull
push
cmpsb
rolb
push
ret
push
out
or
shll
fnsave
fs
or
push
add
jnp
jbe
sti
negl
cmp
jg
ds
clc
test
dec
fldt
lods
mov
cmp
cmp
xor
fwait
aaa
add
fdivs
rorl
cmpsl
push
adc
insl
inc
clc
jne
jae
jne
push
and
int
jbe
and
test
push
icebp
enter
mov
push
negl
imul
sub
mov
add
movsb
xorb
cmp
ja
fs
ja
sti
imul
adc
shlb
arpl
loop
leave
inc
ds
mov
dec
xchg
out
insb
jl
mov
fidivrl
adcb
mov
adc
ja
adc
sbb
ret
xor
and
movsl
or
lods
mov
pushf
mov
sbb
testl
mov
je
jb
cmc
mov
xchg
xlat
dec
add
js
aad
inc
rcll
xlat
test
dec
sbb
jbe,pn
pop
les
mov
insb
lcall
fbld
mov
loop
cmpsb
cmpsl
loop
shr
mov
jno
or
in
sub
outsb
mov
nop
lock
lcall
sbb
mov
mov
movsl
pop
jno
fmull
inc
inc
mov
or
xchg
rclb
int3
sarb
std
push
push
cmpsl
in
xchg
xorb
cmp
xchg
add
lret
mov
shl
or
mov
inc
xorl
mov
jne
jmp
les
xchg
pop
scas
insb
push
imul
lret
push
sti
lds
push
sub
add
mov
iret
scas
iret
out
hlt
fdivrl
mov
cmp
mov
mov
pop
out
cmp
popf
ficoml
add
adc
popa
lods
clc
outsl
pop
push
xor
and
icebp
inc
inc
inc
pop
loop
jecxz
sti
and
lahf
push
shlb
in
mov
cs
imul
rclb
push
stos
mov
and
out
nop
add
pushf
dec
mov
xor
xchg
loope
daa
cmp
fldenv
insl
scas
push
cmp
out
xor
scas
int
cld
pop
mov
cmpsl
sbb
pusha
sti
pop
ljmp
fsubrl
mov
or
inc
mov
inc
mov
loop
mov
fbld
arpl
xor
adc
fisubrs
adc
mov
in
gs
js
inc
aaa
cmp
mov
ds
movaps
xor
dec
mov
lahf
sbb
aas
mov
inc
lods
ret
pop
mov
fists
xchg
stos
lret
sti
inc
aas
loope
in
xchg
cld
pop
sub
add
pop
rcr
fnstcw
cmp
mov
jae
pop
sbb
out
mov
xchg
rcrb
inc
dec
sti
xchg
xor
fildll
movsl
mov
incl
jno
pushl
shlb
push
or
fimull
bound
jb
in
mov
das
lea
mov
ret
loop
jnp
js
xchg
lret
inc
out
out
jge
lods
mov
and
mov
icebp
or
jge
arpl
mov
or
mov
mov
jecxz
xchg
push
fidivl
jnp
adc
mov
inc
fidivs
push
mov
mov
and
out
flds
pop
mov
in
inc
mov
push
or
jns
repz
repnz
add
mov
sub
ds
popa
xchg
lods
ds
push
lret
and
mov
int
ljmp
movsl
xchg
mov
xor
into
mov
stos
push
mov
and
stos
pop
stos
or
stc
gs
ret
mov
fisubl
mov
cli
and
rcll
frstor
aaa
cs
rcrl
jno
cmpsb
in
mov
mov
adc
or
arpl
rcrl
pop
bound
cmc
ja
sub
loopne
sub
loopne
rclb
nop
addr16
sbb
or
loop
mov
insb
dec
xchg
jne
ds
and
inc
in
sbb
push
push
or
mov
repnz
cmp
jge
jns
jns
leave
mov
insl
movsl
push
mov
ret
jae
not
xchg
adc
sahf
mov
dec
cltd
cltd
aas
xor
pop
sub
fistps
pop
sbb
ja
inc
xor
sar
mov
rcr
jno
and
pop
mov
jns
jl
sbb
pop
js
je
push
imul
or
inc
pop
lods
push
inc
ljmp
je
xor
mov
loope
inc
loope
add
fxch
cmp
pop
jno
out
or
mov
pushf
xor
cmp
mov
imul
out
roll
test
xchg
lock
outsb
stos
pop
aad
out
or
xor
sub
js
js,pn
jns
es
nop
fdivrs
out
filds
mov
repz
lret
pop
fwait
add
pop
ret
xchg
sub
ret
imul
enter
test
mov
out
jp
sbb
xchg
sarl
cmp
mov
jl
mov
cmp
ret
out
shll
fldcw
dec
je
enter
ficompl
xor
mov
sti
push
icebp
aad
jbe
adc
and
imul
enter
fists
stos
repnz
cs
test
jmp
adc
js
jmp
daa
rsqrtps
in
mov
sbb
lahf
es
shll
fidivl
fsubl
out
scas
scas
xchg
xor
fwait
pop
dec
sbb
movsb
mov
iret
ficompl
aam
sub
mov
scas
xchg
call
inc
jge
jmp
rcl
jb
sbb
ficomps
sti
fimuls
stos
cmc
fsubl
and
pop
inc
sahf
jae
dec
das
fcomps
out
leave
cs
gs
pop
dec
test
lcall
pop
fidivl
sar
jg
sub
mov
cmpsl
jbe
dec
in
js
insb
mov
pushf
push
stc
fcmovnb
test
not
ljmp
or
or
mov
out
jg
xor
cltd
pop
dec
cld
lea
les
std
xchg
ud0
in
hlt
pop
mov
xor
mov
pop
popf
sarb
rclb
push
aas
jecxz
mov
addr16
cld
jmp
enter
xchg
cld
out
mov
movsb
repz
mov
xor
or
push
cmp
shl
or
test
out
cmpsl
push
adc
fistpl
mov
mov
add
loop
movsl
sti
leave
into
cmp
xor
mov
pusha
mov
push
lcall
pop
pushf
lea
push
jbe
out
cmp
inc
sub
in
jecxz
jns
mov
mov
jns
push
insl
dec
out
jne
push
jo
sbb
test
stc
je
repz
sti
adc
cmp
add
fnstenv
mov
cmp
fwait
mov
ret
cmovnp
mov
xchg
rcr
push
rcrl
std
sub
mov
push
in
std
mov
mov
fucomip
adc
ret
push
pop
test
push
icebp
mov
dec
aam
outsl
mov
ficoml
sbb
imul
mov
dec
jbe
fcmovbe
cli
mov
int
add
mov
cmp
mov
inc
imul
mov
lea
gs
stos
adc
mov
movsl
xchg
inc
insl
testl
dec
mov
cmp
cmovge
sbb
mov
fstpt
mov
repz
test
lret
sbb
jne
pop
cli
add
mov
jmp
int3
pop
cmp
sbb
int
mov
push
sti
loopne
add
dec
fs
jne
mov
push
sub
pop
sti
in
sub
idivl
scas
xchg
imul
jne
addr16
add
adc
or
sbb
push
pop
push
arpl
mov
cwtl
stc
mov
dec
jle
test
mov
add
hlt
div
and
push
loopne
loop
ss
dec
dec
stos
cmp
push
les
leave
sbb
mov
mov
mov
push
icebp
in
pop
xlat
ror
jle
xchg
lret
clc
mov
xlat
jae
mov
clc
jle
aad
pop
xchg
and
insb
es
and
hlt
popa
push
sub
repnz
xchg
cld
out
fisubrs
cmc
sbb
sahf
dec
jmp
lods
cmpsl
dec
dec
ret
mov
rorl
loope
jge
jl
orb
pop
and
repz
push
mov
je
fwait
mov
fcoml
roll
or
pop
rcll
or
clc
jnp
jecxz
popf
cld
jnp
stos
mov
bnd
incl
mov
in
adc
outsl
dec
out
inc
insb
add
pop
xchg
push
cmp
or
or
sti
jg
jo
in
int3
push
pop
xchg
pop
ljmp
jl
pop
ljmp
aaa
test
xchg
scas
in
jle
call
rorb
cli
clc
jnp,pt
clc
pop
js
cmp
mov
aaa
je
clc
push
push
xchg
fistpl
pop
hlt
dec
int3
cmp
aas
int3
sbb
sub
jb
jns
sbb
js
and
jae
and
fprem
enter
mov
pop
dec
pop
iret
mov
jecxz
call
fnstcw
mov
inc
or
mov
jo
lock
mov
jge
mov
subl
jecxz
sub
in
mov
push
xor
scas
scas
dec
cs
inc
faddp
mov
dec
mov
imul
jmp
dec
fimull
test
jo
dec
adc
cmp
popf
mov
lods
pusha
es
jle
daa
push
jg
sub
sbb
sbb
rol
xchg
cwtl
push
ljmp
les
ljmp
lret
cli
sub
adc
mov
push
mov
pop
js
cmp
loopne
or
or
jns
dec
pop
shlb
stc
rcrb
cmp
jl
cwtl
cmp
mov
insl
jle
das
fmuls
hlt
roll
out
inc
sahf
das
outsl
jl
js
imul
fwait
rcl
cmp
pop
je
inc
dec
adc
jp
mov
cmpsl
cmpsl
jl
pushf
xchg
xchg
rol
es
in
sub
dec
push
mov
cmp
insl
int
xchg
fnstsw
or
stos
fwait
cli
jmp
aad
pop
pop
cmp
push
imul
sbb
sahf
adc
cmp
push
add
cmp
dec
dec
push
jnp
sub
shl
xchg
pop
fsts
fisttpll
ret
or
roll
adc
cli
inc
daa
iret
and
rorb
mov
stos
mov
adc
push
lcall
dec
cmp
into
xchg
dec
out
fucomp
pop
pop
mov
xchg
in
mov
insl
iret
mov
sti
movsb
mov
pop
jne
scas
xchg
inc
cmc
sub
jge
push
cmp
adc
js
adc
cmp
jmp
mov
jge
inc
movsl
popf
into
mov
xchg
add
out
fwait
dec
xchg
notl
fldt
jne
iret
push
cwtl
cs
mul
push
push
sbb
mov
push
mov
xchg
mov
jns
out
mov
push
jmp
jp
mov
rorb
test
cwtl
repnz
call
dec
sbb
add
jecxz
jne
xor
add
icebp
jle
push
pop
mov
xor
push
push
mov
aaa
sbb
mov
mov
sbb
cmp
lretw
imul
adc
cmp
inc
into
mov
cmp
push
js
fists
insb
pop
repnz
dec
or
push
dec
mov
imul
jmp
jge
fwait
sbb
jp
push
insl
stos
mov
jge
outsl
adc
xchg
aaa
pop
inc
push
pusha
iret
movsl
pop
mov
sub
jl
stos
xor
popf
pop
insl
test
mov
loope
mov
mov
inc
sti
xchg
int
xchg
adc
ljmp
ret
and
in
rolb
mov
in
mov
push
push
pop
xlat
adc
popf
sahf
xchg
aaa
fnstsw
out
adc
imul
dec
jns
or
xor
repz
sub
dec
pop
dec
stc
repnz
xchg
pop
sbb
adc
mov
sbb
in
and
dec
lea
dec
sar
mov
xor
or
in
mov
mov
mov
mov
mov
popa
pop
test
cmpl
sbb
inc
mov
mov
shl
pop
add
xor
push
es
nop
xchg
xor
jg
xchg
jge
jns
std
pushf
xorl
enter
aas
imul
jecxz
ret
aas
xchg
fcoms
stc
lods
hlt
insl
orl
out
lret
pop
push
pop
fisubrl
sbb
ljmp
xor
test
push
lods
cmp
cmp
inc
xchg
mov
inc
cmp
sbb
jns
aas
jns
out
sbb
sub
mov
sbb
test
cmp
mov
push
push
pop
js
mov
dec
mov
fbld
dec
imul
jmp
insl
cld
add
dec
ret
lods
xor
fs
ljmp
test
nop
popf
out
dec
test
dec
frstor
sub
fwait
insl
je
sarb
cmpsl
dec
adc
jmp
jmp
pop
call
popf
jp
ret
jbe
loope
mov
mov
cmp
mov
add
add
inc
dec
add
jno,pn
fs
lds
pop
lea
out
xchg
or
or
dec
adc
mov
fisubrs
mov
cmp
jne
mov
lahf
cmp
std
pop
lret
mov
xor
cltd
out
mov
pop
cmp
xor
inc
jbe
adc
jb
arpl
inc
inc
and
mov
aad
inc
xchg
clc
ja
sub
into
fildll
mov
outsl
in
mov
faddp
sahf
adc
sbb
cmp
in
les
lret
xor
mov
cmpsl
cmp
mov
add
pop
sub
out
cmp
pop
mov
int3
push
icebp
shrl
or
je
test
inc
hlt
sbb
shl
jl
or
psllw
inc
das
incb
mov
dec
das
pop
out
loope
or
clc
jecxz
in
add
jne
aad
inc
cmp
outsl
xor
dec
mov
ss
call
pop
pop
xchg
lock
mov
push
ret
lods
sub
daa
pop
jmp
sub
adc
sub
outsl
sbb
ja
xchg
loope
jmp
sub
negb
rorl
mov
xchg
fwait
cli
xchg
sub
daa
out
dec
and
int3
and
dec
shl
mov
and
notb
sub
in
sub
fidivrl
dec
sub
pop
pusha
repnz
jle
xchg
ljmp
dec
repnz
xor
insl
push
mov
cmp
movsl
xor
push
daa
add
xchg
lea
inc
shl
test
xorb
xor
inc
rorb
and
add
aam
mov
stos
adc
sub
les
xor
jns
inc
stos
mov
pop
addl
xor
cmpsl
btr
mov
sahf
or
add
cmp
icebp
adc
sub
cltd
test
xor
xor
stc
ss
stc
fcmove
jl
xor
aam
test
sti
pop
jno
mov
mov
je
xchg
inc
mov
or
cmpsl
or
movsl
cmp
and
mull
sti
scas
adc
jne
int3
jp
push
sbb
jns
xchg
repz
cwtl
addr16
out
adc
js
xchg
or
lods
sbb
movsl
push
fwait
imul
xor
and
mul
out
loopne
subb
inc
and
cwtl
sbb
lock
pop
inc
stc
lret
repz
mulb
les
stc
jp
xchg
inc
sbb
add
stos
add
mov
jb
cmp
mov
xor
xchg
jg
ds
adc
jge
mov
adc
cmpl
jge
dec
insb
pop
ret
ds
lods
xor
das
dec
jl
lcall
scas
cld
ss
gs
adc
filds
xor
mul
jb
scas
orb
sub
add
pop
mov
mov
daa
jl
push
int3
into
repnz
xchg
inc
or
add
lea
cli
push
movsb
aaa
popf
in
push
mov
push
mov
test
sar
and
call
jne
in
push
inc
out
and
cmpsl
or
inc
popa
movsl
fstpt
pop
push
es
mov
das
rcll
xchg
or
lods
popa
jg
gs
loopne
mov
aam
es
outsb
xchg
icebp
mov
call
test
test
rcl
jnp
jne
fldl
xchg
lods
cmc
push
imul
jns
mov
mov
and
icebp
sbb
dec
xchg
js
sub
sahf
mov
pop
lahf
jb
int
test
ret
mov
pop
jg
insb
xor
insb
mov
ss
orl
notl
pushf
shrl
pop
or
sbb
pushf
jecxz
fidivrs
pop
or
sub
ds
jae
push
xchg
sbb
aas
out
ret
xchg
stos
and
out
cmpsl
cmp
inc
data16
int3
es
loop
mov
mov
sbb
iret
mov
add
imull
mov
out
fldl2t
mov
addr16
push
and
xlat
lods
mov
add
mov
scas
mov
jl
cli
dec
jns
iret
jno
out
mov
inc
dec
int
mov
cwtl
les
or
mov
pop
insb
cltd
and
stos
ljmp
fcoms
gs
idivl
ja
or
pop
push
pop
aaa
divb
loope
mov
fsubl
pmullw
nop
sub
sbb
ret
je
les
push
fdiv
jg
xchg
cmp
pop
insb
mov
notl
mov
mov
jge
mov
and
stos
or
sub
lret
or
sbb
mov
cmpsb
add
cmp
dec
out
sub
aad
fidivs
or
aaa
in
js
in
test
push
scas
loop
movsl
mov
xchg
or
inc
jecxz
cmp
hlt
cmp
xor
mov
fistpll
xchg
sbb
inc
sub
mov
sub
in
mov
in
sbb
jo
adc
mov
jecxz
xchg
outsl
loop
adc
les
loope
mov
mov
sub
sub
xor
sahf
and
sahf
das
inc
pop
pusha
push
mov
pop
out
fcomip
pop
add
imul
hlt
xchg
out
jge
hlt
pop
out
xor
mov
or
mov
clc
cwtl
cmp
sahf
jns
mov
add
lret
cmp
test
lods
push
lds
fnsave
scas
mov
dec
stos
push
add
or
xchg
cmpsb
xor
cld
push
jg
xchg
dec
adc
dec
popf
push
cmpsl
cmp
in
mov
fldl2t
in
dec
jmp
mov
cmp
pusha
jbe
bnd
cmpsl
aad
mov
push
test
scas
jmp
inc
fsubl
popf
push
aad
mov
fs
mov
std
xor
sbb
fs
jle
rorl
lcall
jl
mov
test
negl
xchg
ljmp
and
popa
and
inc
xor
sarl
push
xchg
inc
ss
jne
jg
mov
pop
dec
mov
cli
arpl
out
and
inc
jg
shr
push
in
mov
mov
loope
adc
xchg
out
ss
fistl
aaa
repnz
ds
lods
pop
dec
dec
lea
das
xor
mov
test
popf
inc
xlat
mov
daa
aad
cmpsb
adc
stc
out
nop
pop
in
add
fwait
inc
pop
loopne
push
pop
lcall
push
pop
sti
in
xor
rol
in
adc
pop
cltd
mov
mov
inc
in
mov
mov
ret
push
insb
clc
dec
stos
cmp
cltd
push
loopne
subl
data16
mov
and
dec
mov
jbe
mov
push
sbbb
iret
add
ret
filds
repz
stc
pop
fxam
mov
or
sub
fldcw
mov
add
pop
cmp
inc
push
fbld
fdivs
stos
adc
jbe
sarb
dec
inc
stos
and
sarb
icebp
push
push
xchg
pop
cmp
das
jno
lods
xchg
pushf
cmp
inc
mov
xor
sarb
out
pop
mov
mov
lahf
enter
dec
fsubs
imul
jnp
in
ret
gs
or
scas
xchg
int
sti
xchg
dec
outsl
movsl
mov
pusha
jg
pop
xchg
push
faddp
dec
mov
lret
mov
lods
cmp
je
sahf
fsubs
in
cs
jp
lret
mov
xor
data16
dec
fstpl
mov
dec
cmp
jmp
dec
adcb
jge
mov
jmp
ja
xchg
sbb
jmp
leave
sbb
cmp
pop
shr
mov
jb
adc
dec
and
fsubrs
and
fwait
and
push
cltd
aam
mov
faddl
out
stos
pop
inc
mov
test
mov
pop
jecxz
fwait
sub
pushf
jmp
or
mov
lock
xor
sub
adc
shr
mov
or
clc
xor
jo
cmp
dec
inc
xor
dec
mov
fisubrl
ss
push
subb
sbb
dec
loop
inc
xor
pop
push
cmpsb
pop
idiv
out
aad
pop
adc
or
mov
or
xchg
data16
mov
mov
daa
scas
out
sti
xchg
push
loopne,pt
movsb
rclb
andl
sbb
xor
ja
cwtl
cmp
push
inc
sbb
jno
mov
adcb
loop
xor
cmp
fidivrl
jnp
loope
and
ljmp
push
mov
sarl
inc
jo
mov
pop
testb
int3
and
in
push
ljmp
repnz
jno
shll
dec
jle
sub
sub
mov
bnd
adc
pop
lahf
ret
fadds
mov
bound
xlat
and
fs
mov
mov
mov
in
dec
stc
test
pop
and
xchg
lret
dec
in
dec
mov
adc
inc
mov
push
imul
pop
or
ja
jb
das
mov
add
das
mov
and
xor
sub
leave
xor
sbb
ret
ljmp
cmp
out
gs
lock
xchg
add
cmp
les
es
leave
out
push
push
pushf
mov
push
sbb
cmpsl
out
adc
sub
inc
jmp
xchg
sub
cmp
mov
push
int3
jle
jle
jae
in
lcall
push
cmp
cli
psadbw
push
xchg
lret
in
and
mulb
push
out
insb
dec
push
inc
roll
mov
nop
mov
std
mov
pop
jnp
sti
jmp
pop
test
cld
fidivl
pop
mov
neg
cld
sub
xchg
fbld
outsl
mov
mov
mov
add
sbb
inc
iret
sti
stos
aad
lea
xor
lds
sub
int3
or
movsl
push
into
inc
jno
mov
push
or
hlt
adc
mov
xor
and
jae
ficoml
push
into
xchg
xor
push
cs
test
push
push
push
cltd
push
pop
push
stc
ret
and
sbb
cmp
test
mov
push
sbbl
xor
fidivrl
stc
mov
pop
sbb
insb
pop
rcl
push
lret
sbb
jno
cmc
ret
frstor
jae
scas
or
sbb
sub
bound
mov
outsl
xor
cmp
sar
pop
push
dec
jmp
push
push
cltd
dec
mov
bound
in
cmp
pop
inc
repz
cld
jp
je
add
adc
and
in
imull
movsb
xor
mov
jo
inc
sbb
and
jecxz
mov
out
in
push
pusha
or
les
and
rcr
mov
movsl
cmpsb
ficoms
dec
pop
scas
int3
imul
inc
lods
mov
xorl
fwait
pushf
jne
movntps
or
fcoml
xor
mov
mov
out
adc
es
je
popa
mov
mov
pop
inc
and
sbb
loope
dec
mov
stc
or
add
dec
repnz
aad
sub
lods
sub
sbb
into
pop
movsl
sarb
cmp
mov
add
jmp
mov
ror
mov
or
fdivl
fucomip
xlat
es
imul
bound
adc
push
mov
pop
cmp
mov
iret
cmp
outsl
sub
out
test
mov
push
addr16
inc
dec
filds
loopne
aas
jns
adc
mov
dec
ficompl
xor
xlat
mov
sub
popa
pop
in
bound
dec
pop
in
mov
incl
xchg
xor
mov
aam
jecxz
and
jae
xchg
fdivr
data16
mov
popa
add
push
movsl
mov
sub
fimuls
or
clc
addr16
punpckhbw
xchg
lea
loop
aas
add
dec
dec
adc
std
or
mov
mov
in
loop
cmp
test
scas
test
jp
xor
cmpsb
repnz
inc
jns
in
mov
sub
arpl
sub
and
sbb
loop
popf
push
push
movsl
push
adc
jo
jno
movsl
jge
add
cmp
jg
xor
sub
aad
mov
aad
enter
and
xor
pushf
test
roll
jne
mov
cmpsb
or
push
jp
insl
fimull
mov
insl
int3
rclb
ds
pop
js
sbb
jecxz
mov
fdivr
aaa
fsubrl
pop
mov
sbb
adc
dec
xchg
or
sbb
test
pushf
inc
xor
pop
test
testl
out
cwtl
sbb
sbb
pop
test
sbb
pop
ja
fstl
mov
mov
cmc
xchg
add
outsb
mov
jne
repz
add
sub
fmul
mov
enter
dec
aam
lods
cld
das
mov
sahf
je
iret
pop
add
lods
mov
pop
push
sbb
out
mov
stos
or
jne
sub
dec
lcall
aas
mov
or
lods
addr16
push
cmp
cld
xor
jg
add
jnp
cltd
lock
cmp
jae
lds
mov
scas
repz
mov
xchg
mov
sbb
in
push
inc
mov
gs
mov
aad
dec
ret
lock
inc
xchg
cmc
add
cmp
add
bound
dec
xor
fadds
lock
or
stos
lahf
dec
add
sub
shr
fiaddl
imul
in
adc
inc
xor
imul
push
mov
xor
pop
dec
repnz
leave
cmp
cltd
push
fwait
daa
or
clc
scas
pop
lahf
or
adc
xor
push
fldenv
cld
scas
enter
pop
fistpll
lret
add
add
es
scas
or
test
sub
cmpsb
dec
push
fwait
lds
sbb
cmp
pop
add
cmp
or
push
pop
or
mov
ja
xchg
arpl
jnp
or
movsb
push
push
sub
test
pop
insl
es
fdivrs
jo
inc
fdivs
fsubr
mov
inc
jmp
jecxz
movsl
ficoml
fisubl
ljmp
push
mov
pop
xchg
rcrb
pushf
jge
add
shrb
aaa
push
add
xor
sbb
mov
push
mov
faddl
ds
fidivrl
push
sarb
and
call
push
or
lods
daa
sbb
xchg
fidivs
mov
or
mov
pop
xor
je
sarb
fxtract
jmp
pop
fwait
pop
psubsb
shrl
sub
mov
inc
out
mov
stc
les
ret
push
sub
mov
mov
rol
cmp
mov
repnz
xor
test
cmpsl
icebp
pushf
lds
push
lods
aas
xor
clc
jl
sbb
fimuls
orl
pop
icebp
mov
arpl
repz
push
push
enter
sbb
xchg
data16
int3
xor
popf
mov
push
hlt
inc
sahf
and
mov
stos
add
fcmovb
push
cmp
lods
dec
loop
add
pop
imul
stos
xorl
mov
or
jp
daa
push
movb
xor
adc
add
sbb
cmp
or
adcl
mov
frstor
outsl
out
ss
shrb
mov
fldenv
jle
xchg
out
adc
push
cmp
pop
jne
mov
into
cmp
test
push
loope
popf
fists
cwtl
lock
fwait
rol
arpl
insl
pop
repnz
dec
or
pop
js
roll
sub
cmp
mov
xchg
xchg
sahf
push
stos
mov
sbb
xchg
inc
push
push
test
shlb
repnz
fmuls
lcall
mov
pop
sub
mov
fimuls
mov
pop
das
jecxz
push
jne
fisttpl
mov
mov
sarb
sub
add
xchg
mov
sbbb
add
daa
in
cli
cmp
cmpsb
jb
fildl
mov
xchg
inc
mov
sti
stc
inc
xchg
add
mov
mov
push
and
dec
into
xor
dec
sbb
stc
and
loopne
repnz
pop
ret
push
pop
dec
xor
iret
push
push
jb
pusha
and
adc
dec
sub
les
ljmp
loope
jns
and
cmp
pop
stc
inc
mov
cwtl
popf
pop
cmp
fdivrs
aad
incl
cltd
dec
inc
fisttpl
rorb
push
addr16
mov
loop
mov
sahf
mov
ret
repnz
xchg
mov
cmp
shlb
fs
in
sbb
xor
add
loopne
or
pop
jns
mov
sti
test
pop
xlat
cltd
ds
xchg
fnsave
imul
jno
stos
and
fsubrp
das
jno
mov
js
cld
ljmp
push
sbb
mov
test
insb
jne
nop
lock
sub
fsubl
xlat
push
adc
pop
mov
sub
xchg
ds
adc
pop
aam
and
inc
insl
ds
data16
dec
add
repz
and
mov
fistpl
scas
push
fnsave
fstp
mov
mov
scas
sbb
popf
cmpsl
jl
out
sbb
mov
mov
dec
sub
jnp
push
adc
jle
adc
xorl
and
sub
dec
inc
bound
jle
leave
jle
xlat
test
pop
das
popf
pusha
push
xchg
add
sub
push
ds
jbe
in
mov
pop
inc
pop
xchg
in
jns
adc
fstps
cmp
stos
pop
jl
out
jae
das
cmp
stc
fmul
push
in
sbb
lods
jno
mov
add
arpl
jno
subl
push
jle
sbb
xchg
fisubrl
lcall
int
shrb
sub
xor
sub
push
enter
jbe
mov
dec
or
jno
orl
aas
push
pop
or
fs
cmc
push
rorb
or
sti
les
push
pop
sti
js
bound
inc
out
jnp
sbb
ss
push
fisubrs
repz
xchg
pushf
lret
stos
or
add
and
push
clc
xor
jmp
push
inc
push
js
xlat
test
jns
dec
scas
xor
jnp
mov
daa
and
imul
dec
mov
ja
insb
or
jb
and
and
clc
ror
arpl
sahf
idivb
popa
scas
das
iret
sti
add
fisubrl
std
out
mov
popf
jnp
jo
mov
xchg
xor
mov
sub
xor
sbb
push
sbb
pop
sub
in
repz
roll
push
cmp
dec
cmc
ds
jo
daa
mov
cmpb
xor
lret
fnsave
ds
push
xor
xor
sbb
pushl
iret
xchg
mov
jbe
add
sub
inc
pusha
fbld
sub
js
les
lea
dec
adc
and
in
pop
mov
add
mov
cwtl
or
data16
mov
movsl
jae
in
test
cmpl
aad
jp
int3
mov
fwait
mov
push
lea
clc
outsb
mov
out
dec
add
scas
add
push
push
or
xor
cld
aas
push
lret
mov
repnz
mov
sub
and
push
jnp
dec
xor
sub
cmc
push
mov
cmpsl
shll
and
mov
cmp
pop
test
leave
pop
addr16
and
lret
sbb
out
sbb
fisubs
xor
xchg
sar
mov
ret
call
push
bound
repz
inc
xor
xor
lcall
mov
into
or
mov
sbb
stos
and
push
or
fdivs
stos
dec
xchg
icebp
aad
aaa
mov
mov
sarl
fstpt
fbstp
push
aam
fildll
cmpsl
pop
pop
fistpll
or
mov
sbb
aam
js
data16
das
int
mov
jbe
movsb
popf
pushf
sbb
or
dec
ret
stos
sahf
ret
std
mov
imul
mov
test
stc
lret
push
mov
inc
rclb
cmp
arpl
lcall
add
ret
xchg
test
cltd
pop
aad
xor
add
das
stos
ljmp
addr16
cmc
lods
lock
ds
roll
mov
inc
out
or
mov
dec
cmpsl
int3
jmp
in
shrl
out
dec
popf
out
sbb
adc
lock
xchg
push
add
jp
sub
loopne
add
pop
cltd
mov
shrl
aam
out
jnp
lods
fmull
mov
into
pop
mov
jge
into
xchg
push
push
adc
inc
test
shll
cmp
fs
jne
dec
test
pop
or
mov
push
fsubs
push
dec
xchg
or
push
data16
loop
and
je
sub
lret
push
ret
mov
or
fistpll
test
scas
mov
stos
pop
sub
push
add
sbb
leave
call
fisttpll
xchg
popf
movsl
outsb
push
insl
mov
jo
push
add
add
clc
pusha
and
ds
or
xchg
add
call
pop
popl
add
mov
push
xchg
test
pop
fldcw
push
adc
pushl
mov
pop
pushf
lods
or
and
sub
mov
and
ja
test
push
jo
lock
enter
jg
jle
push
iret
cmpsb
mov
lret
dec
repnz
sub
enter
ljmp
ffree
add
mov
icebp
pop
jle
dec
pushf
or
fadd
add
stos
test
jle
mov
mov
aad
repz
sbb
int
adc
sbb
enter
test
push
je
jg
sbb
adc
push
or
mov
mov
inc
mov
lods
jecxz
push
pop
aad
lahf
jno
dec
rcl
inc
addl
xor
sti
push
lea
cli
jae
jns
cmp
loopne
inc
jg
mov
std
out
adc
fcoms
outsl
movsl
mov
cmpsb
in
sbb
adc
push
jbe
xchg
mov
mov
sbb
sub
cmp
mov
inc
jg
mov
scas
lock
cmp
rcrl
jb
inc
push
movsl
stos
xor
scas
out
mov
mov
ret
push
jmp
jecxz
sub
pushf
push
stos
inc
mov
bound
sbb
and
filds
icebp
pop
xchg
fadds
dec
je
jle
int
push
mov
test
ficoms
shr
outsl
movsb
and
daa
imul
push
lds
xor
bound
lahf
movsl
stos
movsb
xor
dec
mov
xchg
mov
loopne
data16
fidivrl
ficomps
mov
fdivs
frstor
int
push
dec
loope
jb
mov
sbb
stos
push
or
enter
das
fnstsw
push
push
jae
test
imul
imul
xchg
imul
mov
cvtps2pd
ds
es
mov
in
inc
outsl
shrb
mov
movsl
lret
inc
shl
cmp
mov
cmp
push
repz
pop
xor
fstpl
sub
inc
test
mov
imull
mov
adc
das
divb
mov
inc
cmp
mov
ljmp
inc
mov
stos
lret
shlb
push
aam
aad
or
or
sub
adc
inc
insb
xchg
test
cmp
stos
cmp
push
mov
xchg
sub
jge
cmp
inc
pop
imul
jo
rorl
jg
push
sbb
mov
hlt
addr16
xchg
sbb
inc
lea
xor
jnp
inc
insb
adc
mov
xchg
lret
js
testb
pop
shll
push
cmp
pop
imul
cmp
cmp
add
sbb
jo
inc
jmp
mov
pop
dec
fxch
mov
add
mov
mov
adc
data16
rcll
test
cmpsb
lret
mov
hlt
cmp
insb
or
scas
pop
xchg
cmpsl
xor
adc
pop
and
roll
inc
or
xor
push
xchg
in
fdivs
loopne
cltd
mov
ret
jbe
and
add
decl
push
adc
mov
pop
inc
pop
jns
popa
mov
sbb
leave
loop
aad
pop
bound
inc
ss
xchg
add
lahf
jbe
mov
mov
pop
sub
ja
lret
jecxz
xchg
jge
xorb
outsb
cld
push
pop
movsb
dec
into
imul
push
mov
stos
jmp
mov
shll
insl
enter
or
mov
jo
ss
fstp
gs
xchg
insb
xor
fcompl
sbb
daa
bound
push
xchg
sti
out
shl
outsl
nop
pop
mov
out
push
dec
pop
cmpsb
ss
mov
sbb
pop
push
sub
jl
jmp
push
mov
dec
inc
outsl
xlat
mov
cmp
dec
mov
and
dec
mov
fisubrs
cmpl
xchg
cmp
xor
xchg
sahf
xor
into
pusha
xchg
das
pop
mov
sbb
scas
clc
mov
and
arpl
add
insb
mov
aad
xchg
jle
mov
mov
out
xchg
cwtl
sub
mov
lds
dec
pushf
cmc
mov
xor
jl
test
pop
push
imul
add
adc
seta
repnz
and
mov
int
fdivs
icebp
lea
mov
int3
mov
pop
mov
adcb
stos
ljmp
pop
or
int
mov
lods
inc
mov
cmp
mov
out
es
dec
mov
fidivl
sub
insl
rcpps
clc
in
cmp
imul
fists
or
out
inc
ljmp
xor
std
shr
cmp
lahf
rcr
adc
or
pop
lds
mov
mov
jnp
xchg
aaa
aas
mov
jge
into
test
jnp
decl
outsb
jmp
aam
sbb
sti
cmp
fisttpll
negl
jg
cmp
cmp
int3
jne
fstl
outsl
addr16
scas
inc
inc
or
scas
inc
outsb
xor
cltd
and
mov
xchg
xlat
mov
imul
shrb
or
lea
mov
dec
jle
adc
jge
cmp
mov
jnp
test
mov
pop
cmp
inc
jg
cmp
push
sub
pop
mov
jnp
fidivs
gs
adc
inc
in
fwait
aas
test
jo
jmp
test
and
imul
jno
dec
cs
jmp
dec
outsl
jmp
test
mov
mov
das
xor
sti
xchg
lods
lods
or
lret
or
loope
sti
js
repz
adc
mov
xor
arpl
adc
xchg
rclb
fwait
test
in
mov
dec
push
inc
sbb
cmpl
ret
push
push
mov
pop
adc
rol
dec
mov
fwait
inc
inc
adc
pop
cmp
pop
jns
icebp
cmp
and
pop
sub
or
fwait
sub
gs
scas
jo
nopl
ud0
cmp
lea
je
in
mov
sbb
push
sti
ret
adc
sbb
loope
ret
sahf
sbb
outsb
je
data16
enter
pop
add
dec
push
rcll
mov
call
push
cld
fdivl
int3
sub
lret
out
xchg
pop
es
or
xor
mov
stos
dec
lcall
xor
stos
push
mov
loop
inc
lods
push
nop
les
sbb
xlat
mov
fstl
filds
mov
sbb
lods
lea
jg
call
test
pop
cmc
sbb
sti
jecxz
hlt
inc
xchg
call
sub
inc
rolb
inc
fildl
pop
mov
dec
xor
xor
repnz
int3
inc
mov
sbb
xor
cmp
jno
adcl
roll
pop
subb
rorl
mov
adc
or
mov
xchg
mov
sub
mov
stos
cs
movsl
in
inc
jo
xchg
fsubrs
mov
cltd
sub
jl
inc
pop
mov
or
mov
push
cmp
in
xor
loop
in
ss
stos
aad
jb
cmpl
and
xor
lea
clc
xchg
adc
ret
sub
fldt
pop
jb
xor
shl
mov
ss
and
pop
test
mov
sub
adc
sub
and
into
pop
push
gs
mov
push
dec
add
in
mov
dec
imul
add
cmp
jecxz
or
lahf
mov
das
insb
outsl
in
sahf
pop
cli
imul
mov
rep
cli
jnp
decb
divl
pop
dec
jg
sarl
inc
lea
jnp
jg
mov
mov
ds
mov
pop
mov
mov
ficoml
mov
stc
js
push
repnz
cwtl
cmp
sub
hlt
or
scas
jge
inc
adc
mov
hlt
push
ficoml
pop
pop
jns
out
pop
insl
in
dec
lahf
cwtl
js
icebp
cwtl
sub
sub
jmp
pop
pop
and
icebp
and
fbld
les
enter
jle
pop
je
cmp
outsl
outsl
lret
mov
mov
add
push
clc
push
dec
pop
sbb
adcb
pop
movsb
adc
dec
inc
cmc
mov
mov
mov
iret
sarb
mov
mov
push
aam
shll
lods
push
fldenv
loop
pop
xchg
cmpsb
sbb
ret
aad
mov
std
iret
dec
test
cwtl
loope
std
out
push
mov
sub
orl
enter
mov
mov
mov
inc
mov
add
jp
inc
jno
inc
jp
inc
and
add
lds
pop
add
inc
in
mov
pop
fdiv
xchg
btr
jle
push
mov
mov
or
out
clc
pcmpeqw
inc
jae
inc
daa
mov
xchg
test
int3
and
lret
aas
sub
decl
push
repnz
lret
lahf
in
ret
jg
loop
pop
ljmp
inc
int
mov
mov
xchg
adc
repz
mov
clc
jb
fstl
mov
mov
mov
adc
sub
push
cmpsb
int
fnsave
mov
adc
adc
mov
rcrl
pop
cmp
push
stc
xor
lods
add
fisttps
loopne
mov
cmp
mov
xor
dec
out
into
xchg
pop
out
negl
hlt
push
js
lods
xchg
push
mov
mov
fdivs
or
cmp
iret
push
xchg
push
inc
xor
push
or
repnz
sub
sbbl
sbb
pop
int
stos
pop
push
mov
sub
cmp
lret
movsl
sbb
mov
gs
fninit
xor
jb
push
aad
das
ds
push
out
jns
xlat
lea
out
stos
outsb
mov
inc
sbb
adc
gs
or
rorl
test
pop
and
arpl
lods
pop
test
add
lods
push
into
or
mov
inc
pop
jge
int3
ud2
jmp
arpl
es
mov
insb
adc
gs
das
scas
iret
cmp
fcmovbe
out
rcr
dec
sub
sti
ret
aaa
ret
push
test
push
adc
cmp
and
ljmp
sbb
mov
mov
ja
mov
xor
pop
sbb
xchg
iret
imul
pop
pop
dec
or
lret
sbb
fdivrs
bound
xchg
arpl
int3
sbb
jb
cmp
cmpsb
xor
aas
cmp
movsb
xchg
jl
lret
sbb
mov
xchg
pop
mov
mulb
cmp
dec
or
sub
adc
call
or
test
repnz
xchg
sbb
inc
xor
sub
cwtd
vlddqu
repz
adc
xchg
xchg
loopne
enter
or
pushf
into
xchg
out
ljmp
xor
jnp
mov
and
lea
rcll
shr
fmull
outsl
pop
pusha
xchg
or
cmp
push
pop
xor
aad
das
mov
jne
push
jp
adc
and
js
mov
stos
jns
push
pushf
outsl
mov
fisubrl
and
fdiv
and
mov
xchg
out
pop
out
shrb
aam
jnp
les
mov
ret
sub
xlat
xchg
lods
in
add
pop
sub
std
test
and
adc
lahf
lret
out
jecxz
loop
inc
fidivrl
adc
je
pop
push
cli
ret
mov
mov
je
rorb
in
je
xorb
jge
stos
testl
dec
jp
add
sbb
pop
mov
dec
mov
aam
lds
in
dec
fwait
je
dec
adc
cmp
arpl
mov
cmp
cmp
mov
add
les
sbb
push
insb
mov
mov
clc
sub
dec
mov
daa
or
mov
cmpsl
dec
rolb
xor
inc
jl
add
daa
sbb
pop
aam
pop
fwait
push
cmpsb
es
mov
es
mov
test
xor
jns
mov
mov
test
je
loop
cmp
and
xor
cmp
mov
mov
int
jmp
mov
dec
fcmovbe
inc
jge
daa
lods
cmp
fistpl
push
xor
and
pop
insl
addr16
scas
jmp
insb
call
out
dec
in
sbb
cmc
xorl
or
jl
bound
sbb
je
outsb
mov
imul
std
inc
cld
xor
in
fs
lahf
loopne
or
rcr
arpl
test
imul
in
cwtl
adc
lock
mov
in
in
jnp
sbb
mov
dec
sbb
ficompl
and
hlt
lods
cmp
jo
cmp
aas
mov
addl
push
xchg
popf
int
or
jge
cmp
mov
pop
mov
or
test
or
sub
mov
popf
int
icebp
mov
popa
xchg
push
sub
stos
leave
aam
out
xchg
sbb
in
push
pop
dec
aad
hlt
mov
stc
jb
mov
ret
ja
and
inc
inc
sarl
dec
jp
pop
pop
pop
add
loopne
call
lret
xor
xor
jecxz
pop
mov
les
imulb
sub
test
int
jp
adc
push
mov
or
pop
mov
pop
sarl
xlat
adc
popa
aaa
adc
sti
inc
mov
cld
jl
bound
lods
xor
aaa
fwait
movsl
push
xor
unpcklps
jecxz
fsubrl
sub
push
cltd
xchg
xor
xchg
push
push
push
and
ret
xchg
stc
movsb
dec
mov
movsb
pop
mov
in
sbb
ret
cmp
les
int
nop
push
cld
dec
adc
inc
icebp
jns
imul
aam
and
aaa
loopne
xchg
jmp
push
test
mov
pop
push
cmp
sahf
sti
cmp
adc
out
jp
mov
jbe
scas
out
enter
popa
jg
xchg
stc
subb
inc
pop
out
in
gs
cwtl
rcr
ss
insb
daa
ss
out
shll
das
jp
mov
xchg
mov
mov
stos
add
cmp
sub
call
or
movsl
stc
xor
xor
mov
pop
test
fwait
mov
push
pop
pop
xchg
push
jl
mov
mov
mov
or
jl
cmp
or
jb
fwait
in
flds
mov
push
loop
sti
rorb
pop
mov
mov
dec
sub
shrb
adc
push
mov
sbbb
mov
vcvttpd2dqx
out
and
and
mov
fcmovb
sub
cmp
mov
mov
xchg
sbb
imul
pop
xchg
mov
out
sbb
pop
mov
add
movsl
mov
mov
les
ds
xchg
xchg
rorl
or
jecxz
call
shlb
loop
xchg
dec
je
stc
call
leave
dec
jnp
imull
cmpsl
cmp
into
nop
jo
pushf
repnz
xchg
sub
aas
sbb
std
mov
jmp
inc
lahf
cld
test
in
pop
rclb
sub
data16
imul
loop
pop
flds
mov
jb
stos
sub
jle
xchg
aas
incb
es
pop
cmp
rcrl
pushf
fisttpll
lret
jbe
shrb
inc
dec
sbb
repnz
out
imul
mov
jge
fwait
sbb
cmp
aad
fstpl
shl
sbb
adc
sub
mov
cmp
jmp
imul
push
cmp
call
mov
or
aad
ss
scas
jbe
xor
imul
mov
mov
mov
jecxz
lods
inc
cmp
adc
adc
xchg
enter
jle
aam
mov
mov
push
mov
scas
fbld
ss
ret
and
jno
mov
arpl
insb
movsb
sbb
je
sub
mov
cmp
mov
cmc
imul
js
notl
push
push
mov
lds
fisttps
shlb
push
xchg
dec
xor
sti
lahf
sahf
mov
jge
nop
push
into
push
adc
cmc
inc
jmp
daa
in
push
in
std
mov
add
pop
int3
rcr
inc
xor
out
inc
and
ret
cwtl
ficompl
push
fiaddl
imul
rcrl
push
imul
aam
cmp
std
mov
xchg
into
cmpb
sbb
orb
insb
dec
popa
push
lahf
push
xlat
mov
into
adc
mov
pop
cmpsl
leave
sub
stc
lahf
or
shrb
daa
sub
hlt
pop
dec
movsb
jmp
xor
jp
xorb
sub
cmpsl
mov
aaa
aad
imull
xchg
adc
add
dec
ret
push
mov
or
add
pop
jg
and
lret
push
icebp
mulb
ret
imul
or
xchg
inc
imul
lea
push
fisubs
xlat
lods
nop
in
or
and
loop
test
pop
push
lock
jge
dec
repnz
jecxz
icebp
dec
pop
mov
pop
scas
shll
jns
xor
je
add
ret
dec
imul
dec
notl
outsl
loope
mov
gs
dec
fisubrs
jmp
sbb
stos
test
add
dec
aas
mov
xchg
mov
scas
lods
push
jp
add
lahf
push
add
stos
hlt
shlb
sti
int3
scas
push
lds
ret
imul
adc
neg
adc
cld
adc
sbb
add
inc
sub
fldlg2
repnz
sbb
mov
mov
das
pop
enter
pop
cltd
sbb
test
mov
cmc
cli
movsb
pop
lcall
sbb
divl
dec
add
fstl
hlt
inc
into
push
push
and
rolb
push
sub
mov
mov
cmp
aad
xchg
lock
push
cmp
sbb
loope
ret
es
xchg
pop
pop
out
jge
pop
dec
lret
add
mov
mov
push
sbb
ret
and
jecxz
aam
dec
add
or
hlt
out
aaa
dec
sahf
xchg
or
frstor
push
sub
outsb
rorl
add
sub
mov
cltd
js
push
mov
jmp
lret
adc
loope
test
fldt
and
xchg
call
add
or
sti
loop
jnp
sbb
push
dec
inc
arpl
movsl
imul
fwait
xor
fbld
data16
pusha
pop
push
sti
add
subl
jne
cmc
jbe
das
jne
stc
xor
sub
jnp
xchg
jg
sbb
cmc
int
sbb
jbe
sbb
notb
leave
pop
aaa
insb
jge
out
es
aad
mov
xchg
and
mov
call
ret
fildll
addl
rcll
jmp
pusha
or
push
xlat
adc
loope
and
push
roll
push
stos
inc
cmp
cltd
xor
or
mov
xchg
mov
es
adc
lret
push
je
cmp
fstl
sti
movb
pop
xchg
xchg
jge
frstor
push
pop
push
fimull
ljmp
or
or
jno
lea
test
lahf
sahf
cmp
les
push
sbb
movsl
adc
mov
jbe
and
cli
push
les
cmpsb
cmp
retw
pop
cmp
movsl
lods
sbb
imul
loop
stos
hlt
incb
xlat
shrb
inc
lds
add
cmovb
iret
add
ret
lret
mov
fmuls
cmp
inc
enter
pop
sbb
test
sub
stos
movsl
push
pop
sti
pop
cmpb
je
sbb
mov
cmp
dec
je
push
sahf
adc
lcall
jg
xchg
cmpsb
inc
and
pop
fwait
loope
out
arpl
push
sti
inc
sbb
repz
test
and
sbb
sbb
xchg
scas
call
mov
stc
adc
repnz
sbb
das
mov
ljmp
into
mov
mov
push
rcl
xor
inc
arpl
mov
lods
and
jb
scas
shrb
xor
xchg
in
repz
or
add
or
push
int
aas
into
aam
mov
sub
stc
adc
sbb
pop
add
mov
fldt
jle
pop
cmp
push
ds
fcoml
pop
jns
mov
push
jmp
xchg
dec
mov
lret
ds
mulb
fidivl
inc
test
rcrb
nop
xlat
in
xchg
insl
push
out
fnstcw
pop
mov
sbb
xchg
jns
ret
pop
inc
mov
lcall
jecxz
cwtl
divl
push
add
fidivrl
adc
and
roll
lea
pop
rclb
shl
or
adc
ror
int
push
mov
inc
and
std
lods
xchg
shl
sub
rcr
add
jno
lods
test
std
push
int
push
xchg
sbb
jno
or
test
movsb
into
inc
mov
testb
or
push
and
ficompl
popa
inc
pop
jno
out
das
int3
cmp
jae
and
mov
push
scas
std
inc
jp
ret
leave
mov
aaa
iret
lret
sbb
mov
movsl
add
or
jne
or
stc
mov
mov
sbb
lods
adc
jl
and
push
loope
hlt
in
sahf
and
lret
xchg
dec
loopne
leave
lret
xor
lock
xchg
outsl
aad
xor
cli
mov
mov
inc
push
pop
aaa
dec
clc
push
jge
push
aad
push
xor
int
adc
hlt
push
cmp
mov
push
gs
inc
lcall
pop
mov
dec
bound
jno
push
and
mov
mov
sub
movsl
hlt
negb
into
imul
add
scas
push
push
mov
jae
xor
mov
iret
ja
mov
aam
mov
sbb
sbb
cltd
ds
fwait
jo
in
movsl
rorl
mov
xor
or
jno
icebp
mov
xchg
push
out
test
jo
test
or
lea
push
mov
mov
popf
loopne
cmpsb
mov
mov
jl
movsb
kmovd
push
ja
or
iret
aaa
les
sbb
arpl
shrb
mov
loope
cld
jmp
pop
daa
xlat
or
sbb
aas
mov
cmp
cmpl
lcall
or
or
in
lret
mov
mov
stos
js
outsl
pop
jmp
push
cmpsb
add
shl
cmc
not
loope
fstl
sahf
adc
jb
mov
sarl
std
push
outsb
mov
push
jae
pop
inc
fistpll
jecxz
push
in
lds
roll
sbb
dec
adc
imul
repnz
inc
in
sub
inc
ds
adc
cmp
xchg
push
bswap
xor
js
ds
out
jno
cmp
call
mov
aas
in
xor
or
ja
inc
mov
cmp
mov
cmp
cmp
mov
call
clc
andb
je
ds
jmp
sbb
push
das
fidivrs
and
pop
out
adc
mov
add
cmp
xor
ficoms
fmull
and
cmp
and
in
pushf
out
test
mov
fisubrl
jp
call
out
in
add
mov
rolb
push
stos
jbe
je
mov
mov
rclb
push
push
in
cmp
cmpsl
mov
push
xor
cmpsl
xchg
pminsw
ljmp
mov
adc
imul
lret
adc
dec
jns
negl
lahf
in
stc
cld
int
and
std
pushf
jnp
mov
cmp
push
xchg
stos
mov
xor
movsb
mov
and
stos
fmul
lret
push
pop
mov
or
movsl
sti
mov
ret
inc
cs
insb
and
mov
inc
aas
dec
and
xlat
xchg
rcl
xor
cld
fildl
out
sbb
mov
adc
or
imul
sub
dec
inc
pop
in
aad
ret
sub
xchg
imul
dec
cli
xor
mov
out
fs
aad
jge
cmp
mov
in
xchg
pop
xchg
arpl
stc
stos
pop
push
addr16
xchg
test
cmp
lahf
popf
test
insb
xchg
cmp
std
cli
sbb
xchg
add
dec
scas
pushf
inc
cld
call
mov
sub
cmp
mov
les
mov
outsl
mov
lahf
mov
jo
mov
repz
sarl
adc
into
loop
xor
lods
push
out
pusha
adc
std
jg
xor
daa
xchg
loope
pop
test
loopne
jmp
xchg
push
push
in
nop
xor
xor
sbb
mov
cmp
dec
sar
pop
mov
test
icebp
dec
daa
push
pop
cmpl
mov
scas
mov
push
sbb
fs
shl
js
ljmp
push
nop
and
xor
aad
pop
sti
sbb
movsl
sub
mov
arpl
scas
jb
dec
and
mov
test
inc
jecxz
add
add
imul
int3
or
repnz
sbb
repnz
out
cs
jp
jecxz
cmpsl
in
imul
movsl
inc
sbb
into
dec
mov
xor
ret
xchg
fiadds
adc
or
adc
add
pop
dec
add
jne
sbb
xor
fbstp
xchg
arpl
cmp
roll
sub
loop
jecxz
shll
arpl
sub
icebp
adcl
subl
adc
lods
push
gs
insb
jno
hlt
in
es
mov
test
jp
sub
sub
jb
push
xchg
sub
stos
lods
fwait
mov
movl
insl
adc
pop
in
shlb
mov
test
cli
je
pop
ss
subl
subb
lahf
adc
cwtl
xor
inc
pop
and
shl
call
aam
jbe
rorb
mov
or
jmp
sbb
adc
pop
loop
fbld
sbb
mov
jp
adc
sub
lret
cmpb
loopne
sub
popf
pop
xchg
and
cwtl
fsubs
outsb
push
xor
mov
pop
inc
pop
sub
ret
inc
mov
inc
imul
jg
xchg
push
fs
movsb
outsb
inc
dec
fstpt
adc
or
sub
add
jbe
test
xlat
mov
mov
lds
neg
and
test
cwtl
mov
nopl
test
push
repnz
movsb
jb
repnz
mov
mov
push
dec
pushf
pop
xor
rolb
mov
dec
push
pusha
jb
pop
add
lds
cmp
shl
jo
arpl
jp
lds
or
or
inc
cmpsl
dec
std
and
pop
inc
cwtl
call
sub
push
jb
pushf
fbld
out
sar
mov
sbb
mov
ficomps
iret
sbb
scas
fimuls
es
lds
inc
or
rcrb
addl
aas
lds
sahf
rol
cmp
das
push
lret
xchg
xlat
stos
xorb
movsb
loope
adc
aam
push
dec
mov
mov
push
pop
push
mov
or
lods
cmp
push
pop
outsl
fisttpll
mov
popa
cmp
in
loopne
push
inc
lock
mulb
dec
xchg
add
push
arpl
xchg
lock
inc
hlt
lahf
nop
pop
addr16
mov
push
mov
pushf
jns
pop
ljmp
mov
inc
inc
sarl
insb
nop
gs
add
aaa
jne
das
push
sbb
mov
add
and
andb
mov
loopne
mov
or
cli
push
int
pop
hlt
lea
sti
push
shrb
dec
xchg
and
into
ja
push
add
jle
add
sbb
roll
and
lds
inc
lods
outsb
scas
xlat
adc
sub
adc
mov
inc
scas
fs
insb
rolb
mov
sti
cli
enter
mov
aas
nop
cmpsl
repnz
push
lods
arpl
daa
mov
push
repnz
mov
mov
push
mov
sbb
ret
inc
lock
loop
pop
inc
in
rclb
mov
xchg
enter
fnstsw
and
adc
aam
mov
addl
mov
jnp
add
fsubrs
push
xchg
js,pt
stos
sub
jb
dec
fnstcw
pusha
dec
es
jae
fs
xor
iret
push
bound
daa
pushf
ljmp
cwtl
fsubrs
in
rclb
and
cltd
popf
out
xlat
pop
ja
mov
xor
sbb
push
bound
xchg
mov
adc
cmp
out
aaa
lods
pop
stos
addb
jo
pop
test
mov
popf
push
shrl
lahf
mov
popa
push
outsb
xor
or
jg
cmc
mov
cmpsl
sbb
mov
aam
rcl
sub
sbb
sahf
popa
fs
mov
cs
and
ss
xchg
icebp
add
in
dec
adc
xor
inc
adc
mov
lods
cmpsb
aaa
scas
and
or
popa
adc
xchg
popf
dec
sbb
inc
jl
cmpb
arpl
adc
inc
xor
test
fadds
repz
push
sbb
or
popa
jmp
jg
mov
dec
push
push
imul
and
stc
jbe
jbe
mov
mov
sub
cmp
adc
movsl
push
aaa
or
dec
jl
decb
flds
in
add
incb
insb
sarb
movl
mov
int
fldenv
jg
test
pop
cmpb
add
cmp
dec
fmulp
rorb
ss
mov
cld
cmp
lahf
mov
test
mov
cltd
push
jmp
push
xchg
repz
bound
push
test
shr
arpl
lds
pop
push
inc
mov
cs
cmp
loop
mov
lret
or
mov
mov
dec
xor
outsb
add
sbb
sub
scas
xchg
xor
gs
cs
out
fimull
jnp
mov
push
fidivl
xchg
dec
xor
sar
sub
ja
mov
rorb
mov
stos
jbe
aas
in
daa
inc
dec
dec
push
ret
mov
add
xchg
icebp
cld
mov
movsl
cmp
push
sub
adc
xor
jmp
and
xor
jmp
hlt
loope
fistps
ja
in
pop
dec
adc
cmc
bound
jmp
js
pop
test
jl
fmuls
repz
mov
or
push
ss
inc
add
inc
or
daa
push
pop
cltd
dec
adc
or
lea
sub
into
inc
cmp
sub
insb
icebp
pushl
fcomp
cmc
fidivs
in
mov
sub
push
xorl
pushf
mov
mov
pop
flds
mov
mov
sbb
std
xchg
and
cmp
es
aas
adc
fwait
mov
insl
mov
pop
pop
inc
inc
jle
jns
push
imul
cltd
mov
daa
mov
daa
pop
adc
ds
mov
ficoms
and
jl
fwait
das
mov
leave
sub
push
push
xor
jns
rorb
insb
push
test
cmpsl
and
pop
or
jp
addr16
loope
into
fldenv
mov
and
xchg
bound
lock
int
push
lret
inc
sbb
inc
mov
inc
and
sbb
mov
adc
jg
arpl
iret
inc
clc
addl
arpl
xor
and
push
mov
mov
dec
or
add
insl
pop
in
mov
push
or
dec
sbb
sarb
js
fwait
shll
cmc
push
je
xchg
cmp
scas
fisubs
jecxz
loope
mov
dec
sbb
test
out
orb
iret
adc
fbld
sbb
adc
and
pop
dec
mov
subl
cmp
in
sbb
and
add
les
shl
ljmp
jbe
mov
and
aaa
les
mov
mov
insb
mov
mov
lret
lds
aam
xchg
jecxz
jg
ljmp
pop
xor
testl
jg
out
dec
jl
mov
imul
out
test
rcl
fists
inc
push
popf
nop
xchg
hlt
and
inc
dec
jmp
dec
mov
ret
lret
sub
or
dec
out
lds
stc
repnz
sbb
scas
insb
ss
aas
fstpt
xchg
pop
inc
xchg
bound
dec
adc
push
mov
dec
cmc
dec
xchg
jno
add
and
inc
dec
pop
pop
fsubrs
jnp
jae
lds
sub
mov
mov
sets
or
lds
shlb
ljmp
daa
xor
loop
cmp
pop
xchg
fstpt
pop
push
mov
popa
movl
mov
sbb
arpl
xchg
mov
mov
push
pop
cmp
sti
lds
std
mov
push
aad
xchg
test
daa
xor
jmp
lods
xchg
loop
push
cmp
ret
mul
mov
push
jmp
xor
jo
decl
jg
nop
je
dec
cmp
jne
sbb
add
adc
stos
movsb
jp
iret
push
popa
fwait
mov
adc
adc
xchg
lcall
into
mov
stos
pop
sarb
pop
xchg
shlb
cltd
jmp
stos
sbb
cld
divb
loopne
sub
nop
cmp
add
add
mov
add
stos
mov
cmp
and
fprem1
jae
mov
mov
push
ret
or
mov
sub
cmp
hlt
insb
mov
push
dec
ss
cmpsb
out
and
mov
mov
adc
jg
add
inc
or
adc
daa
xchg
movsb
cmp
mov
or
or
lcall
in
inc
inc
sbbb
mov
ljmp
push
xor
push
or
add
dec
cld
or
cmp
bnd
dec
popf
stc
xor
out
lock
lahf
loope
adc
cmp
jne
push
inc
pop
dec
pushf
mov
in
inc
cmp
in
adc
mov
pmaxub
adc
xor
sti
aaa
jl
inc
test
inc
lods
fimuls
scas
jmp
dec
into
xor
push
mov
outsb
fistpl
sbb
andl
push
mov
mov
jg
lcall
sbb
mov
es
popf
push
add
lret
orb
pusha
cmpsb
jno
pop
call
inc
jo
cli
xchg
sbb
jbe
add
mov
xor
cmpb
dec
mov
add
adc
popa
xlat
cmp
mov
add
jbe
and
sbb
or
mov
dec
cltd
add
es
je
mov
notl
dec
inc
push
or
inc
outsl
mov
fdivr
and
xor
cmp
ja
cmc
xor
mov
jmp
movsb
arpl
and
sahf
xorb
mov
adc
and
pop
adc
cld
sub
data16
out
mov
clc
add
dec
stc
xchg
mov
adc
in
push
xchg
xchg
mov
ret
lcall
les
cmp
in
xchg
ja
push
cmp
add
les
out
inc
sub
add
mov
dec
add
cwtl
filds
add
fmul
push
xlat
or
jnp
pop
or
clc
aas
dec
or
or
mov
xor
call
shll
and
icebp
adc
xchg
sub
pop
inc
cmc
mov
bound
add
add
mov
insb
aas
or
sbb
push
into
jbe
add
push
ffree
out
leave
mov
sarl
cmp
ljmp
shl
insb
rolb
jae
jecxz
mull
jg
xor
je
enter
push
stos
sahf
jle
xchg
xchg
hlt
push
ret
inc
sbb
aad
inc
addr16
cmpsb
mov
mov
je
cli
jae
stc
icebp
insb
adc
xchg
jmp
push
xlat
aas
adc
imul
and
hlt
sbb
ja
enter
lock
adc
cmp
sub
cmc
std
pop
add
mov
das
push
add
aas
loope
mov
add
pop
shrl
push
pop
inc
inc
push
lods
jecxz
push
daa
cs
orl
aas
add
xor
jae
dec
in
pop
pop
pushf
addr16
dec
push
bound
loopne
add
or
into
push
push
inc
cli
xor
mov
jns
xchg
leave
loop
clc
pop
stc
mov
push
addr16
das
cmp
jno
lcall
inc
jnp
jnp
xchg
mov
fcoms
inc
mov
shr
cs
jg
lret
dec
mov
je
addb
das
pop
stos
jnp
push
pop
ret
loope
aas
cld
mov
test
sarl
adc
mov
or
adc
mov
aas
jns
inc
cmpsl
cmc
mov
pop
pop
outsl
out
pusha
xchg
test
lea
cmp
fldz
rcrb
sub
jbe
xor
adc
jb
xor
jns
dec
inc
mov
xor
outsl
dec
lahf
mov
push
fisubl
push
sahf
cltd
jg
stos
std
pushf
fdivrl
xor
xchg
cmpsl
and
jp
adcb
in
pop
dec
pop
sub
dec
mov
xchg
cwtl
mov
sub
dec
pop
xchg
clc
cwtl
mov
pop
sbb
daa
add
xor
jmp
cmpsl
lods
adc
xor
rolb
aad
mov
mov
adc
xor
push
gs
mov
push
jle
mov
jp
lret
jg
aas
rcrl
jns
inc
sahf
sbb
es
mov
lcall
jge
fstl
mov
mov
jmp
sub
mov
test
in
xchg
sbb
icebp
imul
out
xor
mov
outsb
stc
xchg
mov
movsl
mov
mov
icebp
pop
dec
dec
xor
push
shrb
jbe
dec
xor
rcrl
adcb
dec
and
or
das
sti
and
adc
xor
pop
lds
pop
fwait
push
addps
push
sbb
into
inc
out
mov
push
decl
sti
pop
pop
pop
out
dec
lret
cmp
jle
sbb
orl
mov
cld
movsl
adc
xchg
mov
div
aas
push
inc
mov
jmp
xchg
push
inc
inc
add
rcrl
push
cltd
out
inc
pop
mov
es
outsb
inc
jp
movsb
add
pop
jmp
dec
clc
hlt
fsubrs
and
mov
xchg
arpl
rolb
cli
sbb
and
test
adc
cmc
hlt
rcl
imul
sub
ljmp
addr16
push
dec
into
mov
cmp
xchg
outsb
pop
or
hlt
cmp
lcall
stos
adc
or
cmp
and
movsb
or
inc
push
mov
push
cmp
pop
loop
lret
outsl
js
out
xchg
sub
add
test
outsb
add
pop
cwtl
insl
jl
arpl
ret
jno
shr
xchg
xor
sub
jmp
loope
adc
sahf
mov
pop
mov
shll
add
xlat
or
andl
clc
sub
cmp
test
enter
and
or
sub
sub
dec
je
jb
imul
adc
adcl
fldcw
mov
sub
mov
adc
lds
xchg
rep
lock
xchg
xor
push
cmpsb
sub
pop
in
dec
mov
cmp
xchg
mov
cmpsl
jle
mov
mov
out
push
or
and
test
imul
addb
movsl
push
daa
bound
add
cmp
je
std
test
call
mov
add
out
out
iret
cmp
cmc
mov
jecxz
fsubr
movsb
dec
lret
mov
push
sbb
mov
imul
sti
outsl
lds
xchg
ds
xchg
pop
xor
add
mov
jno
popa
cmc
shlb
fcomip
xor
pop
push
mov
push
repnz
push
mov
xchg
es
mov
mov
popw
jecxz
data16
cmp
mov
and
outsl
xor
xchg
add
mov
add
int
mov
dec
sar
loope
sbb
loop
inc
inc
mov
push
fwait
xor
mov
pop
push
pop
sbb
out
in
inc
mov
arpl
bound
xor
rorl
jg
cmpb
add
sarl
mov
imul
xchg
inc
popa
ljmp
dec
in
sub
loop
incb
sbb
sti
es
push
adc
fmuls
fbstp
ss
and
mov
cld
dec
cld
lea
jbe
inc
sbb
jge
sub
mov
in
ss
inc
ret
fcompl
test
pop
mov
clc
leave
outsl
inc
xlat
test
add
lea
test
sbb
dec
or
fstp
sbb
into
test
test
jb
or
xchg
pop
nop
cmpsl
mov
inc
dec
ss
insb
fs
lahf
or
mov
xlat
add
jno
xor
mov
dec
adc
sbb
movsb
sbb
cmp
xor
xchg
mov
push
rorb
fs
nop
pop
cwtl
sub
jp
cmp
mov
bnd
stos
in
clc
cli
ret
lahf
insl
xchg
sahf
aam
push
cmpsl
inc
mov
aad
std
ja
in
mov
lahf
mov
mov
insl
lea
jae
and
xor
orb
inc
sub
push
or
jne
sbb
nop
arpl
jne
add
pop
mov
jnp
push
es
cmpl
lea
cmpsl
mov
aas
insb
pop
or
enter
aaa
sub
cmpsl
cmp
push
or
movsb
out
xor
pop
outsb
test
test
int
bnd
lahf
mov
minps
xor
jo
pop
sarb
lahf
pop
push
out
lret
ret
ret
jo
xchg
into
sub
mov
push
ja
je
int3
jne
inc
pop
mov
xchg
or
gs
pusha
ja
sub
mov
push
mov
and
cli
sub
inc
mov
iret
popa
cli
sub
pusha
divb
cmpsl
fcoms
and
jl
xchg
and
cmp
sbb
xor
sub
imul
fdivs
shrl
jmp
cs
rcrb
cmp
cmc
adc
stos
and
cltd
orl
push
loop
gs
pushf
data16
lods
insb
icebp
in
fistps
cmp
mov
cmpsb
imul
inc
cwtl
mov
xor
push
inc
mov
mov
rcll
xchg
mov
clc
mov
int
push
inc
cmpsl
test
stos
ss
mov
ror
loopne
xor
xlat
mov
cmp
xchg
pop
mov
or
fs
sub
xor
mov
xorl
xchg
lcall
ljmp
icebp
inc
es
mov
sub
dec
sbb
sahf
fwait
leave
push
sahf
pop
repz
or
repz
cmp
jl
cltd
mov
push
aas
pop
inc
pop
aam
mov
cmc
adc
fisubrl
es
das
arpl
jge
es
into
sbb
cld
sub
xor
mov
insb
and
add
cltd
cld
push
stos
mov
xchg
cmp
inc
adc
cmp
xchg
js
out
mov
sbb
scas
fiaddl
sbb
loopne
and
loope
sub
sub
mov
sti
outsl
in
lret
jo
scas
jns
pop
mov
js
mulb
movsb
fidivrs
or
xchg
push
add
mov
push
fs
cmpsb
ret
xor
aad
out
sub
fnstenv
lock
leave
fildll
mov
dec
insb
dec
push
mov
mov
sub
inc
sbb
nop
push
pusha
push
mov
dec
mov
push
mov
and
fs
pusha
sub
in
clc
sub
bound
xor
std
nop
ret
push
call
std
cmp
pop
adc
jp
das
stos
push
xchg
pop
inc
cs
insb
adc
mov
lock
adc
dec
nop
outsl
cmp
jae
out
mov
ret
mov
rclb
cmp
push
cltd
add
into
add
in
aaa
jg
fs
aam
mov
jno
add
xchg
cltd
stos
rcrb
inc
sub
mov
es
imul
mov
mov
pop
push
mov
or
and
rcrl
pushf
fwait
sub
pop
and
iret
unpckhps
test
push
jmp
mov
lea
xor
xchg
pop
mov
jp
out
xchg
mov
mov
xchg
adc
ror
cmc
dec
cvttps2pi
imul
and
mov
push
mov
and
mov
push
test
jo
stos
jno
test
mov
arpl
js
fcomp
jge
inc
pop
jmp
hlt
push
iret
sahf
pop
cltd
dec
jle
loopne
push
mov
leave
jns
mov
lret
movsb
aad
jp
lods
repnz
out
arpl
or
fistpll
std
aad
xchg
xor
sti
out
nop
xlat
je
cmpsl
mov
inc
dec
cmp
mov
or
ret
test
or
ds
iret
dec
loope
ret
repz
push
cli
cwtl
or
decb
inc
xor
fisubrs
cs
xor
cmp
aas
cli
dec
jmp
xor
sbb
mov
cmp
adc
gs
adc
xlat
imul
jae
cmp
dec
je
cld
cmp
popa
es
mov
xor
sbb
out
repz
inc
sub
sbb
imul
xchg
loopne
leave
push
lea
mov
inc
mov
inc
scas
int3
push
std
sub
int3
add
movsl
xchg
mov
push
inc
jo
mov
push
sbbb
sub
add
xchg
test
sahf
push
out
inc
fwait
jno
xor
pusha
pop
shl
lret
addb
jne
mov
loop
mov
push
aas
daa
scas
and
mov
fistl
out
incl
adc
les
ret
cmp
dec
adc
mov
mov
jbe
inc
in
fsts
imul
addr16
mov
out
dec
cmp
repz
icebp
push
sub
pop
or
loope
and
ljmp
leave
shr
fstpl
outsb
pop
jno
dec
adc
mov
lea
xchg
xor
dec
iret
mov
cmpb
ret
sub
mov
push
test
ret
daa
dec
adc
xchg
outsb
mov
iret
xchg
and
pop
sbb
xchg
stc
cmp
repz
adc
lret
out
data16
mov
xchg
fidivrs
mov
sub
mov
movntps
shll
dec
cmp
pushf
jb
icebp
sub
scas
xchg
jns
add
xor
lahf
xorl
nop
mov
lock
inc
lea
rcll
sub
xchg
ret
xchg
dec
sbb
xchg
insl
test
mov
sbb
stc
imul
xchg
enter
inc
push
cmpsb
and
mov
jmp
cld
sub
sub
cmp
inc
aas
mov
push
push
orl
shr
add
mov
cs
test
and
inc
in
mov
push
es
fwait
pushf
jno
subb
mov
clc
sarl
es
loop
popa
arpl
dec
scas
inc
lret
jae
addl
out
inc
dec
xor
stc
lock
in
popf
sahf
sbb
push
dec
scas
cmp
pop
fimuls
lods
xor
adc
sub
cwtl
lret
movsb
xchg
pop
adc
repz
add
cld
movsl
cwtl
bound
mov
xor
jbe
lahf
pop
sbb
pop
dec
push
jo
adc
lea
push
iret
dec
cmp
cltd
das
inc
pop
mov
sbb
push
push
or
fisubrs
pop
out
sbb
scas
nop
aas
lcall
icebp
rcl
insb
sbb
mov
cltd
or
lea
push
insb
loopne
iret
sub
in
lods
sahf
shlb
subl
xor
or
or
or
addr16
es
sub
jne
pop
fsub
loop
jl
iret
push
rorl
gs
mov
daa
pop
inc
pop
xor
xor
push
cli
xchg
or
adc
adc
out
ret
cmp
inc
push
gs
div
push
scas
shll
sub
cmp
inc
inc
mov
lahf
xor
mov
fisubs
adc
aam
cmp
hlt
cmpsl
fchs
or
pop
bound
lods
cltd
jb
lahf
dec
or
sahf
inc
mov
pushf
inc
push
mov
popf
shll
sahf
xlat
pop
or
iret
mov
mov
adc
es
sub
or
gs
mov
nop
ss
sahf
inc
int3
jp
dec
rcll
nop
outsl
mov
out
out
leave
xchg
jp
add
fistl
xchg
dec
aad
xchg
shll
mov
and
fsubs
push
push
push
cmp
fwait
xor
clc
mov
fmul
jl
or
pop
pushf
repz
or
test
jb
inc
scas
fxch
cmp
sbb
adc
movsl
fdivs
cmp
lods
rorb
out
enter
sub
repnz
jmp
or
movsb
cmp
xor
aam
jbe
enterw
outsb
aad
or
dec
jb
pop
outsl
shlb
dec
xor
xchg
lcall
add
call
rclb
mov
jo
fimull
loop
cmp
aad
shrl
jbe
fsts
pop
cltd
cmp
xchg
push
adc
stos
ja
inc
push
cwtl
mov
push
vpunpcklqdq
shll
pusha
sbb
or
shl
in
xlat
and
add
and
lea
sahf
dec
mov
xchg
push
mov
xchg
stos
mov
les
adcl
cmp
filds
lret
sub
ja
sarb
cmp
sbbl
aam
scas
out
notl
test
push
shrl
cmpsb
ja
in
and
jno
pop
jg
mov
out
icebp
call
cmp
fwait
cmp
jns
or
xor
mov
in
add
pop
jns
mov
xor
stos
mov
ret
mov
dec
xchg
jno
dec
repnz
fildl
dec
arpl
mov
cwtl
jg
jns
pop
xor
sti
packssdw
std
call
arpl
xchg
arpl
jno
dec
xor
shlb
mov
popf
xchg
hlt
in
ds
in
lahf
bound
jl
fsubs
cld
add
jge
or
lock
out
icebp
and
inc
cwtl
push
ret
clc
cwtl
xor
stc
sbbl
xor
push
mov
push
and
and
cmp
sub
or
jl
push
ret
in
pushf
in
js
xchg
scas
mov
cwtl
xor
aas
cmpsl
lods
ljmp
xor
repnz
sti
cwtl
cmpb
mov
aad
jp
xlat
inc
xchg
dec
cmp
repz
sub
dec
and
jmp
lahf
fnstsw
push
addb
lea
pop
mov
movsl
mov
lock
dec
movsl
mov
pop
adc
xchg
sbb
push
add
orb
jmp
add
xchg
ficoms
jbe
cmp
in
js
inc
mov
xlat
rol
call
enter
mov
add
lock
lahf
fistl
xchg
mov
out
dec
je
jnp
mov
dec
ds
repnz
fsubrl
jecxz
or
scas
cwtl
outsl
lret
push
fisubs
leave
or
jns
rorb
jmp
dec
fisubrs
mov
pusha
xchg
mov
in
sub
xchg
push
mov
or
dec
inc
adc
pop
scas
pop
pusha
mov
xorl
fnsave
mov
fwait
lock
jg
inc
inc
mov
mov
add
cmp
and
les
sarb
jb
sub
jb
mov
adc
cmpsb
bound
xchg
xor
lea
add
in
add
ficompl
cld
pop
mov
jbe
sbb
fdivs
rcrl
lea
je
adc
adc
add
testb
xorl
xor
aas
clc
jb
fisubrs
mov
orb
std
add
ret
pop
pushf
int
sbb
jmp
inc
push
fwait
jnp
pop
cltd
out
push
jne
pop
fidivrl
in
out
sahf
pop
outsb
xchg
or
or
and
dec
inc
cmp
mov
out
icebp
bound
or
inc
fistl
xchg
jae
je
int
call
mov
loop
push
stc
sbb
adc
cli
mov
push
stos
add
leave
shl
movsl
jne
push
mov
pop
xchg
into
call
push
jbe
jae
jae
jecxz
loope
test
lret
inc
mov
inc
jno
je
inc
dec
fs
inc
iret
mulb
sbb
ss
sub
test
and
jg
pop
fisubrs
stos
and
int3
cmpsb
jecxz
vmovdqa
cmp
jb
push
or
pop
sbb
mov
mov
xor
sti
mov
sbb
hlt
sbb
push
mov
out
push
pop
jmp
int3
aas
dec
sub
dec
push
imul
je
mov
leave
fisubrl
dec
out
inc
fwait
or
dec
jl
maxps
es
push
inc
mov
loope
push
sbb
jo
rolb
push
mov
aaa
dec
sub
cmp
es
enter
mov
mov
addb
push
sbb
iret
movq
in
aaa
add
dec
dec
imul
dec
in
push
push
adc
lods
daa
mov
push
mov
pop
das
push
sub
or
jmp
add
hlt
call
fwait
mov
push
xchg
adc
push
pusha
orb
sub
ret
sub
stc
repnz
pop
aam
cmp
imul
aam
push
jno
mov
push
inc
mov
incl
addl
mov
pushf
sti
lods
pop
mov
cmp
jno
sbb
pop
sbb
cmp
fucomip
xchg
push
cmp
test
mov
pop
repnz
cs
or
out
cmc
stos
gs
ffree
out
iret
lods
scas
sbb
push
xchg
jo
jnp
mov
mov
notb
add
push
hlt
jne
mov
dec
sar
jl
cmp
inc
add
cld
imul
mov
add
imul
loope
out
mov
stos
cmp
mov
cmpsb
subl
or
jecxz
adc
sbb
pushf
cmp
sub
or
aaa
insb
cmp
mov
xchg
addr16
add
push
fisttps
fimuls
fdivs
push
lret
testl
mov
pop
xor
push
fisubs
pop
jnp
lea
jge
push
and
loope
xchg
push
fcmove
mov
inc
mov
jge
xchg
dec
mov
inc
xchg
filds
lods
push
cmp
pop
jecxz
sbb
xor
cmp
mov
icebp
jge
shll
pop
inc
push
dec
repz
stos
or
or
outsb
sub
ret
int3
nop
push
xchg
mov
jnp
add
pop
push
cld
fmull
pop
adc
cltd
out
int
shll
aad
sarb
test
mov
test
in
popa
popf
int3
shrl
dec
jb
xchg
cmpb
add
or
xchg
pushf
push
sub
stc
cmp
pop
mov
mov
mov
xor
push
pop
lahf
lret
inc
ret
pop
cmp
inc
ja
outsl
popa
mov
add
clc
xchg
xchg
sbbl
cmpsl
divl
aaa
imul
sbb
and
mov
adc
dec
push
adc
hlt
test
jbe
cli
mov
sbb
adc
cmp
pop
mov
and
xlat
mov
push
outsl
xor
push
lds
test
mov
pop
insb
or
pop
sub
ja
insl
int3
les
mov
mov
rcll
xor
pop
pop
cmp
cmp
lea
mov
pop
insb
int
fimull
adc
testl
js
cli
xchg
sbb
xor
cmp
scas
or
popf
mov
mov
fidivl
mov
mov
xor
or
mov
jge
mov
pop
push
dec
popa
movsb
jmp
sbb
pop
dec
jo
jmp
dec
xlat
dec
pop
add
mov
lahf
aam
mov
daa
cli
subl
pop
fldenv
lea
jecxz
add
pop
jne
inc
push
fsts
insb
sub
mov
call
inc
pop
inc
ljmp
popf
jp
popf
pop
fsubl
in
es
out
mov
jmp
ss
adc
movsb
sub
inc
cwtl
ror
jg
inc
js
stc
mov
xsave
in
je
andb
mul
sbb
call
rclb
push
mov
loop
out
mov
mov
push
push
je
lcall
popf
dec
fstps
mov
out
ja
sub
iret
cmp
je
xchg
jge
mov
fnstcw
ja
sub
mov
jg
popa
movsl
in
xchg
or
mov
sbb
je
mov
adc
incl
cmp
cmp
enter
sub
ja
mov
sbbb
jno
repz
mov
out
xchg
push
xor
sbbl
mov
inc
pop
je
inc
lahf
sbb
stos
js
mov
mov
and
sbb
imul
shlb
dec
add
nop
mov
dec
jne
or
lods
and
aas
pusha
mov
adcl
sub
jne
call
clc
test
out
sub
dec
jno
sbb
cmp
inc
or
in
dec
je
adcb
call
mov
mov
int
xchg
lret
scas
push
or
scas
shrl
fildll
in
ss
insl
lret
xchg
leave
cld
dec
dec
shr
sbb
xor
adc
push
mov
push
sbb
scas
movl
lret
mov
push
jge
sahf
or
je
or
xchg
insl
push
test
and
clc
fs
hlt
cltd
xchg
jns
or
lods
mov
pop
cmpsl
lds
mov
sarl
enter
sbb
hlt
cld
dec
pop
fstpl
mov
xchg
fists
in
addr16
inc
int3
test
adc
scas
test
nop
out
pop
sbb
dec
dec
aad
lods
pop
cmpsb
add
sub
sub
jae
insl
mov
in
je
or
pop
imulb
stos
pop
push
dec
movsb
push
push
lock
mov
lea
jle
out
push
scas
adc
aas
sti
lcall
mov
sub
out
repnz
jbe
jne
enter
vcvtsi2ss
fs
sub
in
lea
loope
ret
jmp
sub
and
add
jecxz
hlt
adc
das
punpckhwd
ja
dec
loopne
out
fisttps
shrb
add
std
imul
loopne
faddl
cmp
pcmpgtd
jnp
inc
sbb
xchg
mov
cmpsl
sub
faddl
and
jns
inc
repnz
mov
je
push
js
cli
sbb
or
inc
ds
dec
repnz
cld
jg
stos
xor
mov
cltd
in
adc
xor
loopne
sub
or
jnp
mov
push
sub
inc
jo
lds
test
xchg
out
int3
xchg
xchg
sarb
cld
mov
lock
lods
mov
or
repnz
js
add
sub
fldt
cmp
cmp
insb
jnp
insb
iret
jle
cld
stos
ja
mov
jle
mov
and
sub
shll
jg
das
jnp
xchg
inc
sub
and
int3
adc
insb
and
not
fistps
mov
mov
cli
flds
lahf
mov
das
ret
and
sbb
scas
cmpsl
mov
inc
ja
out
inc
mov
or
mov
fs
jp
xchg
dec
mov
sub
mov
cmp
lret
mov
xchg
test
push
out
add
test
xchg
cld
testb
and
mov
lea
popf
gs
sbb
lods
jge
inc
or
xor
adcl
lds
imul
pusha
inc
fwait
cmp
and
les
lcall
test
mov
or
mov
popa
sub
ljmp
pop
les
cmp
aam
xor
jp
data16
push
push
xchg
das
mov
in
repz
int3
clc
mov
inc
lea
xchg
push
negb
test
jnp
imulb
cmpsl
mov
inc
mov
mov
dec
sbb
mov
in
test
push
pop
or
out
cmp
mov
pop
mov
insb
push
adcl
pop
inc
sbbb
xchg
or
xchg
orl
ret
push
mov
dec
jge
daa
movl
jb
sahf
lcall
jecxz
mov
movsb
lret
jp
int
sti
xchg
inc
jbe
and
pop
adc
sbb
lahf
cmpsl
in
clc
xor
inc
push
mov
cld
add
imul
outsb
loopne
jge
cmp
sbb
xor
xor
add
adc
xor
or
jl
stos
shll
cld
clc
imul
jbe
out
std
call
addr16
pop
test
bound
loopne
in
pusha
test
push
dec
sti
jge
popf
data16
mov
enter
sbb
repz
add
incl
adc
jno
and
pop
jbe
test
lret
enter
sub
push
inc
jle
add
dec
or
push
sbb
jecxz
xchg
movsb
push
test
insl
inc
xchg
cmp
repnz
pop
lret
mov
mov
xchg
xchg
jno
jg
and
emms
adc
mov
call
and
add
and
xor
dec
sar
cmp
popa
inc
adc
inc
push
cmp
and
cmp
imul
xchg
hlt
int
lret
adc
push
mov
sbb
jmp
or
mov
mov
vshufps
sarl
lcall
push
sub
push
sahf
cmpsb
pop
mov
in
mov
call
addr16
cli
mov
outsb
cwtl
imul
jg
add
shr
in
mov
imulb
lds
cmc
sbb
mov
rcrl
mov
fucom
out
data16
mov
xchg
xchg
negb
aaa
incl
sub
sub
xor
test
pop
shll
cmp
sub
out
ret
dec
lahf
js
adc
and
flds
inc
mov
push
xlat
lret
lahf
jae
mov
cmpsl
push
push
in
frstor
xchg
or
jge
adc
add
mov
ret
out
repz
adc
cmp
in
dec
adc
fcoms
test
lds
cmpsb
inc
popf
or
pop
test
push
inc
roll
test
mov
sub
add
push
insl
gs
jb
push
push
dec
repnz
rorb
fldenv
fincstp
sub
jne
add
cmp
mov
adc
add
icebp
pop
inc
sbb
popa
xchg
mov
push
xor
aad
adc
mov
xchg
xchg
pop
movb
dec
sbb
xor
arpl
xor
addb
aam
sub
mov
push
cmpb
add
das
popa
stos
stos
xchg
pushf
jg
mov
sbb
cli
adc
push
inc
int
mov
lea
es
dec
mov
inc
pop
call
adcl
jno
push
in
and
mov
push
stc
mov
cmp
pusha
dec
lods
xor
popf
stos
push
xchg
ret
dec
test
loope
test
ret
push
xor
jge
or
push
lret
stc
xchg
arpl
push
pop
push
rorb
fadd
xchg
pusha
leave
and
sub
and
enter
push
cmp
loop
out
inc
adc
xchg
sub
jge
rolb
aam
lds
lahf
cld
dec
pop
xor
cmp
cmp
loopne
data16
mov
xor
cs
dec
xchg
fisttpll
int3
sub
sub
adc
mov
push
clc
cli
dec
xchg
or
jnp
jecxz
jecxz
xor
xor
mov
push
pop
fwait
ds
test
sti
sub
sbb
mov
lods
pop
pop
jmp
mov
aas
lea
xchg
xor
fbstp
mov
sbbl
nop
cmpsl
stos
fnstenv
stos
pop
pop
cmp
fcoml
dec
push
inc
or
enter
test
ja
jg
sbb
test
nop
lret
dec
jo
cmp
mov
sub
sub
fbld
cs
ffreep
rolb
dec
add
repz
loop
fmull
mov
or
pop
jl
fsubl
jge
xchg
sbb
mov
gs
or
cmp
push
movsl
or
xchg
rcll
xchg
jb
mov
pushf
lods
cmp
pop
pop
das
cmp
pop
imul
cwtl
pop
in
jbe
mov
mov
rcr
add
mov
fdivs
pop
dec
dec
rorb
and
jl
cmp
jp
mov
xchg
pop
inc
ret
leave
adc
nop
in
cmp
pop
xchg
inc
mov
inc
cmpsb
hlt
push
rol
ss
and
int3
mov
das
movsl
xchg
xor
fsubr
sbb
dec
test
add
add
pop
scas
push
sbb
mov
ffreep
dec
fnstsw
sub
getsec
mov
fsubr
in
arpl
pop
ror
inc
repz
fsubrs
adc
mov
fisubrl
clc
push
movsb
int3
pop
out
int3
mov
push
testb
das
pusha
jg
jge
pop
das
adc
sub
mov
sub
mov
insl
insb
mov
psubd
jge
cmp
push
js
int
and
jecxz
xor
jns
subl
cli
lahf
dec
jmp
orb
dec
xchg
mov
mov
mov
add
cltd
cmc
dec
stc
popf
mov
js
push
push
loopne
lcall
adc
jbe
xor
mov
bound
cwtl
inc
out
icebp
stc
in
clc
js
std
sbb
inc
or
dec
push
mov
xor
push
in
jp
das
test
out
ficoml
iret
call
js
scas
shll
mov
pop
jg
lahf
and
dec
or
dec
dec
in
push
pop
cli
shlb
jge
faddl
xor
ds
mov
cmpsl
push
les
faddp
incb
iret
arpl
and
jmp
cmpsl
jb
push
jo
adc
xor
push
sub
loope
sahf
push
stc
jl
fst
and
aam
imul
or
out
xlat
jmp
test
dec
movsl
std
pop
call
jge
or
push
push
pop
scas
xor
sbb
push
ret
out
xlat
sub
jmp
xor
call
lock
leave
daa
movl
and
sub
pop
int
shll
cmp
lods
or
inc
clc
sub
stos
jl
mov
xchg
inc
push
sub
mov
adc
gs
jns
lds
mov
loop
mov
xchg
dec
xor
adc
sahf
dec
mov
and
jnp
adc
pop
jmp
jnp
jne
push
adcl
clc
dec
xor
test
out
inc
sbb
mov
mov
xor
dec
jp
mov
mov
push
lds
jno
movsl
mov
es
and
jge
insb
and
repnz
in
mov
and
lock
push
shlb
pop
fists
pop
lods
packssdw
stos
or
mov
gs
mov
dec
add
lods
pop
inc
cli
popa
insb
decb
jb
dec
xlat
lcall
fs
inc
cli
sarb
mov
loopne
add
xchg
pop
fs
scas
idivb
mov
jg
adc
sbb
push
adc
fbstp
repnz
mov
sarb
lods
mov
shl
inc
lock
movsl
imul
xchg
sub
ror
addr16
daa
push
cmpsb
lods
sbb
mov
xchg
lock
mov
xchg
mov
xchg
jl
mov
loop
jp
cwtl
add
add
add
pop
mov
es
lods
movsb
mov
lods
mov
in
mov
les
pop
fidivrs
fistpl
fstpt
or
mov
sub
push
imul
mov
repnz
in
insl
push
xchg
sbb
aaa
mov
fwait
sbb
and
shll
xchg
out
cmp
ret
sub
push
fs
fwait
mov
push
push
pop
orl
push
mov
icebp
ret
scas
xchg
or
lret
push
jmp
add
add
jne
cmp
lds
call
outsl
inc
nop
pop
lret
push
jns
sbb
mov
clc
movsb
adc
adc
fwait
mov
ss
jbe
cmp
xchg
jne
cmp
mov
pop
sarb
xchg
sahf
push
add
fldcw
ljmp
loop
sti
sub
dec
and
mov
sub
mov
dec
push
sub
imul
cmc
shl
cli
dec
xor
xchg
jmp
hlt
add
cmpsb
push
test
sbb
ret
jne
popa
mov
sti
stos
push
gs
mov
or
hlt
ror
sbb
pop
jbe
sti
fdivrs
and
push
push
add
adc
pop
aaa
mov
enter
pop
aaa
rorl
inc
push
aas
ss
or
test
jle
outsb
mov
inc
shll
gs
sbb
adcl
push
or
dec
gs
ja
mov
fwait
aaa
std
pop
mov
imul
int
add
adcb
jle
adcl
jle
sbb
repnz
cli
mov
pop
out
insl
jne
es
pop
mov
comiss
pop
mov
test
sbb
mov
pushf
aad
or
arpl
sbb
push
push
pushf
addr16
mov
sbb
mov
adc
pop
add
repnz
mov
and
mov
aaa
lret
jge
popa
loopne
cld
mov
mov
cltd
cli
cmp
pop
lods
pop
sub
pusha
leave
aas
les
stos
dec
cmp
mov
notb
adc
lods
dec
lods
movsb
pop
jmp
ret
das
enter
imul
and
pop
pop
pop
add
pop
xorl
imul
mov
push
mov
sbb
leave
cmp
sub
ljmp
cmp
mov
movsl
lods
fwait
sbb
sub
inc
mov
jo
xchg
mov
pop
or
add
lods
jne
std
movsb
and
push
les
add
inc
rorb
mov
call
pop
xor
gs
adcb
scas
daa
mov
movsb
fstl
jo
pop
mov
jp
add
ljmp
add
test
dec
imul
or
loope
cmp
ret
aad
ret
and
push
inc
jae
xor
roll
cmp
add
jle
sub
and
mov
lds
jmp
and
lods
pop
aad
mov
dec
adc
or
pop
nop
mov
sbb
mov
mov
cmp
xor
nop
add
lret
daa
pop
into
dec
fwait
adc
jmp
jecxz
pop
pop
inc
les
imul
lods
add
clc
fwait
xchg
shl
leave
popa
daa
mov
int3
sbb
pop
mov
fucomp
inc
xchg
loopne
arpl
aad
pop
aas
cmp
and
lcall
and
mov
xchg
jo
xchg
cmp
movsb
popf
cmp
pop
repz
cmp
pushf
stc
push
pop
dec
push
lock
xor
or
test
repnz
push
fwait
dec
push
and
dec
add
aam
mov
xchg
jns
adc
add
mov
sti
push
or
mov
es
xor
outsl
cmp
jne
ds
dec
sbb
jmp
jmp
das
shrl
dec
inc
dec
mov
lock
in
cmc
add
rcr
fmull
mov
jg
push
jb
xor
pop
mov
push
and
cmp
lret
pop
pop
jl
inc
cmp
cs
iret
loopne
pop
pop
daa
mov
stos
scas
mov
inc
insl
sbb
pop
shlb
xchg
jb
push
jle
xchg
mov
xor
dec
pusha
dec
push
mov
fmuls
inc
and
shrl
jge
cmp
icebp
mov
or
pop
in
xor
xor
push
mov
jnp
fwait
pushl
ljmp
std
push
jl
adc
call
push
lea
fsts
lds
cltd
inc
std
mov
add
sbb
icebp
ret
outsb
fistps
mov
mov
daa
mov
cmp
sub
sub
hlt
pop
fwait
mov
aaa
fwait
jg
mov
bound
in
mov
out
cmpsl
push
jne
pop
mov
notl
addr16
movsl
clc
cmp
insb
sub
mov
clc
mov
cmp
das
cmpsb
xorl
cmp
aas
dec
test
jo
xchg
popl
inc
lret
testb
stos
jge
sbb
inc
cmp
mov
sahf
and
mov
sbb
push
out
js
aas
pop
enter
out
xchg
leave
imul
icebp
lcall
jp
sub
cltd
in
dec
arpl
add
mov
cmp
incb
push
js
push
mov
dec
cwtl
movsb
xchg
je
ret
in
aad
cmpsl
sub
negl
dec
xchg
or
fldenv
ret
jecxz
mov
pop
mov
ljmp
lahf
jmp
mov
mov
sbb
decl
cmp
movsl
lea
je
jp
mov
addl
push
sbb
adc
cltd
std
movsl
inc
inc
incb
ss
jne
sbb
outsl
fdivrs
aad
hlt
pusha
stos
push
mov
out
and
mov
cwtl
movsl
push
int
xchg
sbb
jae
clc
xchg
ljmp
call
xorb
ffree
and
mov
rorl
xchg
orl
repnz
add
mov
mov
lcall
leave
fs
add
push
sub
xor
lea
notl
aas
enter
sbb
nop
das
pusha
sbb
xor
sbb
int
sbb
and
dec
add
in
pop
dec
sbb
inc
lds
daa
inc
lret
add
in
and
ret
mov
push
pop
fldl
sbb
pop
push
mov
sahf
push
roll
fiadds
mov
sub
cmc
dec
stc
insb
sub
push
jle
xlat
mov
sbb
cmp
cmp
int3
lods
repz
jo
imul
adc
jg
in
sub
cmp
add
roll
idiv
ror
cli
mov
call
imulb
fwait
lods
pop
and
stos
loopne
mov
imull
fcmove
and
hlt
mov
filds
cmp
mov
enter
in
sub
dec
inc
mov
cwtl
popf
xchg
mov
pop
popl
scas
push
or
push
mov
inc
lret
or
rolb
stc
aas
das
repnz
mov
xchg
inc
outsl
cmc
stos
les
inc
je
jmp
repz
pop
nop
fs
push
ret
shll
cs
bound
shrb
dec
data16
in
cmpsl
jmp
sub
adc
insl
mov
mov
mulb
sub
mov
in
xorb
and
mov
fldcw
mov
outsl
or
xchg
mov
dec
or
daa
sub
and
enter
sbb
and
or
lds
andl
dec
xor
cld
in
and
xorl
data16
int3
je
pop
lock
mov
aas
and
test
fidivrl
mov
stos
pop
sahf
xchg
cmp
iret
cli
dec
jo
out
je
lods
inc
dec
sub
in
inc
icebp
inc
and
dec
sub
pop
or
push
das
testl
cmc
add
push
push
in
xchg
xchg
dec
inc
push
stos
add
push
ficoms
and
leave
adc
mov
test
sbb
pop
inc
data16
inc
pop
test
sbb
nop
push
test
dec
pushf
in
decl
shll
rol
and
pop
jmp
call
inc
inc
ret
push
fcmovnb
je
xchg
gs
xchg
mov
lahf
es
and
mov
push
loopne
stos
mov
rcll
adc
mov
xor
dec
mov
mov
test
fisttpll
xor
lock
push
sub
inc
jo
jno
fwait
outsl
adc
daa
jecxz
jnp
mov
inc
data16
jns
stos
shll
sbb
cmpsl
xor
cs
icebp
stos
icebp
and
add
int3
jp
addr16
aad
scas
sub
push
inc
bound
mov
dec
mov
lds
stc
insb
clc
and
mov
lret
dec
scas
mov
jbe
sbb
pop
popf
cmp
test
xor
psubd
repnz
std
dec
or
jnp
call
jle
fmuls
lret
xchg
in
repnz
jg
mov
cmpsl
shll
jbe
jge
or
pop
scas
xor
dec
lods
in
dec
call
repnz
or
lock
addr16
mov
dec
loope
push
mov
push
insl
out
lea
xor
daa
push
lds
aad
jge
cmp
std
mov
sbb
xchg
stc
mov
dec
mov
dec
test
imul
xchg
lcall
mov
dec
and
jle
and
shl
xor
in
push
clc
sbb
or
dec
dec
addr16
inc
or
and
adc
mov
iret
push
mov
jl
pop
sbb
in
scas
cltd
pop
add
sti
xor
sub
gs
jno
cmc
jecxz
or
push
loop
call
fisubs
mov
enter
out
das
fmuls
add
add
imul
shll
arpl
mov
push
lret
inc
xchg
cmp
xchg
push
flds
notb
test
cmpsb
fwait
in
jb
or
jo
cmp
rcll
sbb
or
dec
cmp
and
imul
xchg
add
sub
lods
push
pop
imul
icebp
jne
mov
mov
push
or
and
and
test
pop
push
push
call
pop
xchg
inc
lret
xchg
test
jns
flds
stc
inc
jge
dec
out
mov
cltd
push
insb
imul
xchg
cmp
mov
cwtl
jns
or
xchg
repz
push
xchg
aas
pop
add
xor
xor
pop
ljmp
inc
inc
in
xchg
out
xor
arpl
and
push
cmp
pop
and
fdivrp
inc
xor
mov
daa
inc
imul
add
jmp
add
xor
mov
int3
scas
xlat
inc
add
test
pop
pop
das
scas
mov
and
popf
xchg
xor
ja
lret
out
stos
cwtl
mov
pop
dec
mov
aaa
jb
jg
or
xchg
and
loopne
lods
ljmp
jmp
sub
cmpsb
cmpsb
adc
daa
cld
adc
lret
inc
repz
add
popf
sti
sbb
mov
inc
jle
test
bound
push
test
cwtl
lret
mov
dec
mov
out
gs
fcoms
aam
cli
pop
arpl
test
push
mov
mov
lcall
sub
pop
arpl
stos
jmp
push
outsl
pop
ret
mov
ds
outsb
iret
shlb
xchg
push
sbb
lods
cmpsl
jmp
sbb
mov
call
lods
dec
inc
pusha
xchg
jl
xor
sub
xchg
or
sbb
mov
or
xor
test
mov
scas
popf
sub
les
xor
rcrb
bound
pop
adc
xor
push
lds
jge
push
outsb
xlat
test
lds
jmp
cmp
scas
incb
lahf
nop
in
inc
push
dec
into
out
ljmp
out
movsb
cmp
sub
or
mov
push
push
leave
jge
xor
rclb
loop
xchg
push
jp
sbb
mov
xchg
shrb
mov
mov
gs
imul
sub
inc
lods
cmp
lock
mov
lods
inc
jb
add
xor
xchg
mov
lock
add
ffreep
test
xchg
dec
dec
orb
fs
pop
punpcklwd
jp
dec
inc
outsl
movlps
es
out
out
mov
notl
fldl
es
jo
dec
add
mov
daa
adc
out
fbld
pushf
insl
rclb
insl
cli
loopne
xor
or
frstor
test
pop
mov
jnp
lret
addr16
jne
push
sbb
xchg
inc
xor
scas
cmpsl
pusha
sub
and
fwait
mov
test
and
or
testb
jbe
push
pop
xchg
addb
dec
sbb
xchg
fnstsw
xchg
mov
dec
sbb
and
ret
pop
inc
nop
in
packssdw
mov
mov
js
pushf
jb,pn
mov
aaa
cs
ljmp
fiadds
js
mov
sub
notl
pusha
wbinvd
call
cmp
adcl
movsb
nop
pop
cmp
jle
repz
stos
xlat
pushl
roll
xchg
mov
dec
ret
xor
sub
lds
test
ljmp
lret
dec
mov
lcall
mov
rcll
dec
push
fstpl
inc
mov
and
jle
pop
jns
xor
lret
adc
and
dec
scas
lea
fs
push
cs
xchg
and
cli
stos
loope
jp
adc
rcl
xchg
fdivrl
xchg
mov
cmp
into
push
dec
inc
sbb
je
mov
xchg
mov
and
stos
shl
icebp
sub
insl
cwtl
jne
enter
cmpsl
mov
mov
cltd
insl
or
fwait
inc
inc
or
fwait
inc
scas
ljmp
leave
nop
push
jbe
adc
pop
mov
push
mov
je
sbb
fs
push
insl
pand
mov
adc
sbb
jl
out
aas
or
inc
xchg
in
or
repz
cmp
adc
shrb
popa
faddl
push
xchg
lcall
andl
dec
sbb
pop
pusha
loope
das
into
jbe
mov
insb
inc
hlt
fimull
iret
xchg
and
out
popa
add
adcb
sbb
or
sub
sub
jle
xorl
inc
adc
add
mov
jle
in
add
inc
mov
in
aad
mov
xchg
add
imul
sub
lret
push
jbe
and
inc
push
cs
shll
and
inc
add
mov
push
or
add
and
cmp
mov
pop
dec
sbb
popa
or
sahf
pushf
xor
fwait
or
in
cltd
daa
mov
mov
lods
push
mov
clc
call
call
sub
icebp
mov
aas
mull
test
stos
rclb
cmpb
add
ja
add
adc
jae
cwtl
add
subb
mov
les
mov
les
inc
sbb
xchg
cmp
inc
dec
movl
out
icebp
scas
cmp
nop
hlt
push
out
hlt
out
into
bound
inc
jge
inc
daa
xchg
and
mov
nop
enter
jnp
movd
inc
scas
or
sub
mov
add
fidivs
test
mov
addr16
sbb
adc
sub
jno
sbbb
clc
push
test
cs
mov
lock
cld
aas
xchg
ret
aas
pushw
leave
xor
sub
cmp
adc
mov
mov
sbb
sbb
xchg
adc
mov
dec
mov
xor
flds
stos
int
sbb
pusha
inc
insl
shll
in
popa
jb
ljmp
add
jge
push
inc
das
add
call
jbe
test
idiv
scas
or
mov
cmp
add
inc
add
pop
jnp
cmp
cli
fsts
repz
call
cmp
loop
test
test
idiv
out
jne
les
cmc
dec
add
pop
or
dec
cmpsl
dec
ret
push
cs
aas
xor
push
sbb
xchg
sub
test
das
mov
aad
int
fcmovu
and
jecxz
cmp
add
mov
aaa
inc
push
jl
push
mov
jmp
dec
enter
cmp
and
test
inc
xchg
dec
xor
subl
pop
call
pushf
jbe
dec
jecxz
test
repz
xchg
push
ss
aad
in
sbb
adc
sub
out
test
mov
or
mov
pusha
fwait
mov
pushf
insl
cmp
int
mov
test
into
inc
popa
xor
cmpsl
test
rol
bound
movsb
in
lret
add
xchg
mov
add
jge
in
or
test
cmp
jae
mov
imul
mov
mov
cmpsb
xchg
rep
xchg
inc
into
push
xorb
les
xor
pop
frstor
test
dec
mov
mov
popf
or
out
jne
jne
call
cmp
xlat
stc
lahf
mov
cmp
inc
inc
daa
cmpsl
test
dec
dec
rcll
mov
jecxz
cmp
cmpxchg
mov
je
xchg
jb
inc
jl
out
inc
ror
sub
lods
std
jo
into
shll
xor
fwait
jae
imul
sbb
dec
out
cltd
fidivl
jbe
jns
cmpsl
daa
cmpsl
pop
mov
repz
cmp
call
je
and
inc
fnstcw
mov
fmuls
shl
lret
mov
enter
rcrb
lea
pusha
mov
sub
inc
mov
popf
jnp
sbb
cmp
xchg
arpl
pop
in
decl
jne
test
test
iret
xchg
lcall
cmc
bound
xor
xchg
mov
pop
pop
int3
imul
add
push
aas
sub
sub
inc
lret
mov
lock
cld
in
fwait
mov
call
pop
shlb
pmaxsw
and
decl
xor
mov
mov
fistl
jb
push
rclb
cmp
leave
mov
cmp
xlat
sahf
ja
fnstenv
nop
test
push
jecxz
jmp
cmp
inc
fldt
mov
hlt
cmc
add
repz
arpl
icebp
mov
lods
or
iret
fs
cltd
cs
jecxz
sub
mov
shl
aad
push
scas
push
mov
aaa
mulb
sub
and
rcl
mov
popf
pop
add
fisttpl
mov
not
test
cld
les
cmpsl
and
enter
jns
jae
ss
dec
fbld
das
jnp
or
nop
xchg
clc
je
imul
mov
test
mov
je
out
mov
cmp
inc
or
mov
inc
jno
mov
cwtl
imul
xchg
mov
test
iret
jp
enter
push
dec
lcall
jle
mov
into
das
out
cli
rcrb
insb
ljmp
dec
add
out
outsl
fbstp
xlat
test
icebp
mov
inc
fisubrs
jb
nop
out
jle
jae
cmp
movsl
dec
or
inc
pop
xchg
adc
stos
fldl
xor
cs
test
insl
and
cmp
xorl
sarb
fistpl
jmp
cmp
jne
aaa
leave
mov
daa
mov
lcall
inc
test
mov
or
stos
out
imul
pop
jnp
mov
mov
mov
dec
sub
push
pop
xchg
stos
xor
aas
or
or
fwait
pop
mov
lock
ret
imul
popf
insl
and
sbb
outsb
push
mov
xchg
or
pop
pop
mov
push
test
xchg
cmp
xchg
imul
fwait
mov
out
jmp
inc
ja
pop
sbb
addb
lock
bound
mov
xchg
mov
mov
push
sbb
mov
sbb
pop
hlt
fidivl
pop
enter
mov
pop
push
pushf
jo
cld
cmpb
xor
xchg
test
pop
imul
jmp
sub
pop
in
jl
iret
es
push
mov
jns
adc
pop
das
rorl
adc
popa
or
jp
sub
loopne
inc
cmp
fisttpl
nop
lock
fldenv
scas
dec
push
aaa
outsl
or
xchg
xchg
xor
pushf
mov
xor
pop
jne
mov
sbb
leave
mov
jbe
aad
gs
out
lods
out
je
adc
jle
xchg
lods
cmp
mov
mov
inc
stos
dec
aad
notl
int
mov
add
dec
xchg
sti
rol
lods
pop
aas
jbe
mov
xchg
mov
or
repnz
or
fiaddl
popa
fwait
cmc
jmp
aas
inc
jb
imul
ja
call
mov
add
jecxz
jnp
in
ror
dec
sub
mov
ret
pop
test
and
enter
rcrb
xchg
mov
lret
fldcw
jne
mov
lds
and
push
adc
into
add
movsb
pop
xor
cmp
rcrl
imul
out
stos
fs
push
push
imul
subl
sub
add
push
mov
test
fidivrl
or
mov
fiadds
sbb
jl
sbb
xor
xchg
xor
inc
fisubrs
or
xchg
pop
pop
sub
sbb
stos
out
pop
cmpb
int3
sbb
dec
mov
pop
push
aaa
pusha
mov
bswap
push
mov
lods
mov
aam
mov
rcll
jecxz
in
mov
bound
test
jno
inc
std
mov
inc
push
cmp
cli
push
imul
push
inc
loope
cli
push
and
dec
test
push
mov
fcmove
sub
inc
pop
mov
add
pop
jmp
mov
mov
mov
jle
cmp
dec
lds
stos
loope
ret
lret
sub
hlt
push
mov
push
jmp
lret
jle
data16
jo
push
jno
mov
adc
push
mov
lods
inc
push
push
add
mov
mov
mov
test
cmpsl
int3
jle
mov
stos
out
lahf
stos
sbb
pop
rol
mov
mov
jae
pop
push
insb
push
jle
jne,pt
sub
call
push
bsr
pop
and
lahf
clc
cs
adc
push
and
mov
aad
cmpxchg
loop
nop
dec
test
pop
mov
notb
insb
nop
fnstcw
jae
int
sub
cmp
stos
sub
daa
divb
imulb
mov
mov
mov
scas
rcl
roll
mov
ds
lcall
sub
jae,pt
inc
xchg
lcall
pop
orb
aas
sbb
leave
aaa
fsts
sub
lock
pop
or
rorl
aad
imul
pop
jo
jb
je
mov
sbb
mov
xchg
inc
fcoms
in
daa
cwtl
std
inc
dec
cltd
mov
popa
sbb
or
add
xchg
pop
rcrl
push
stos
adc
scas
stos
cwtl
pop
inc
xchg
mov
sbb
cli
aaa
data16
out
stos
out
rcll
cld
jno
push
mov
inc
add
fists
xchg
inc
les
testl
loop
bound
xchg
jge
push
sub
mov
mov
push
add
mov
mov
hlt
testl
push
ljmp
xorl
insb
push
pop
mov
sub
outsl
and
aam
in
adc
jecxz
scas
sub
dec
repnz
push
pop
mov
in
sub
fisttps
xchg
sbbb
adc
shr
pop
or
fmuls
loopne
hlt
fmull
lds
popa
cmp
mov
xor
inc
cmpsl
ss
fstcw
sbb
cmp
lret
pop
sub
ret
xlat
repnz
cltd
cmpsb
movsl
in
mov
fldt
hlt
add
subl
insl
bound
and
dec
pop
xor
adc
mov
push
mov
in
mov
in
cmc
int3
jns
push
hlt
gs
or
imul
push
jbe
inc
cmc
aaa
xor
lock
aam
sub
jmp
mov
sub
inc
jae
adc
pop
in
outsl
push
cmp
inc
cltd
or
mulb
dec
icebp
leave
dec
cmpb
adc
aam
jno
push
lret
push
sahf
psllq
rcll
enter
xchg
push
leave
inc
test
adc
pop
pop
dec
adcl
test
lret
xchg
ljmp
mov
cld
mov
popa
repz
mov
pop
rcll
push
mov
aad
sbb
fwait
aam
lret
mov
aaa
iret
negb
adcl
pop
in
sbb
jg
sahf
xor
adc
les
and
test
cmp
cltd
and
lods
dec
outsw
jae
not
repnz
add
push
repnz
or
jmp
mov
push
mov
popa
popaw
mov
inc
xor
mov
add
jle
sbb
rorl
popf
jmp
or
and
cltd
push
sbb
decb
sti
sbb
fists
or
mov
inc
clc
pop
ljmp
jmp
mov
cs
cmp
mov
and
push
lods
push
dec
repz
repnz
pop
shr
hlt
cmp
lods
jnp
sbb
fwait
aad
decb
mov
jmp
jp
les
pop
adc
lret
xchg
je
sar
inc
cmp
ja
mov
push
rclb
cmp
nop
jle
movsl
out
shl
and
adc
das
push
shlb
inc
cli
xlat
out
mov
leave
nop
jle
cmp
sahf
add
sbb
shlb
sar
xchg
nop
out
push
shlb
inc
cli
or
jmp
and
dec
aaa
inc
cli
add
jmp
xor
notl
jle
xchg
hlt
leave
js
xchg
xor
xchg
dec
cli
adc
stc
outsb
and
xchg
nop
outsb
sbb
ror
nop
jle
xor
dec
xor
xor
jmp
mov
cli
xor
out
cs
movsl
adc
stos
fdivl
sbb
dec
cmp
xchg
sub
push
jg
jb
dec
mov
fistps
sahf
loopne
out
arpl
leave
cmp
js
shlb
sbb
sub
fstl
push
lcall
sub
xchg
push
mov
push
push
pop
xchg
cmpsl
lcall
xchg
adcl
or
xchg
repz
pusha
sub
fwait
push
fs
imul
pop
jae
gs
push
lret
push
rorb
mov
sbb
jle
pop
inc
mov
data16
cmp
push
stos
sahf
push
push
lods
inc
dec
icebp
push
sub
adcb
push
push
dec
xchg
out
xchg
push
inc
mov
ss
and
outsb
stos
xor
mov
push
stos
cmp
movsl
cwtl
test
push
and
xchg
scas
aad
xchg
jne
or
in
pop
hlt
lahf
xchg
jo
pop
fnstsw
sub
leave
xor
imul
pop
cmp
in
inc
pop
xor
sub
mov
jnp
or
and
lret
xchg
rcll
xchg
iret
std
cmp
add
xchg
daa
jp
test
int
xor
test
pop
ret
std
or
fdivl
aas
add
pop
xor
cmc
pop
inc
scas
in
cmp
insb
push
int
mov
adc
nop
or
sbb
mov
repz
pop
clc
leave
jp
rclb
pop
cmp
in
pop
jp
dec
mov
pop
sbb
jae
xchg
cmpsb
pushf
dec
pop
lea
mov
xchg
cld
push
push
mov
pop
xchg
pop
pop
xor
cmc
lods
jne
cmp
rcll
cmpsl
push
push
jecxz
icebp
inc
test
daa
lcall
cmpsl
jb
sub
cmp
pop
nop
and
aad
add
dec
rorl
sbb
push
xchg
cmp
mov
pop
mov
ffreep
out
pop
mov
iret
and
stc
inc
pop
dec
lret
cmp
or
lcall
clc
jge
mov
sbb
jno
outsl
loop
imul
icebp
je
cmp
mov
sub
shrl
pop
and
xor
pop
lea
cmc
int3
jne
xorb
pop
mov
jns
dec
xor
shll
fcmovnu
fldenv
rcrb
je
test
stc
sarb
imul
fadds
jmp
mov
lret
add
dec
pop
sbb
xor
js
popf
jo
pop
outsb
roll
loop
movsb
xor
cltd
test
sbb
pushf
pop
inc
mov
cmc
push
pop
add
mov
adc
sub
in
inc
pop
outsb
adc
jns
in
ljmp
fstp
aaa
pop
sahf
mov
jns
dec
add
xor
or
mov
cltd
mov
stos
dec
imul
xchg
cmp
cmp
and
add
sub
es
jne
cmp
mov
fstps
fwait
push
dec
rcll
je
mov
aam
xchg
mov
mov
push
mov
iret
out
jl
clc
stc
xor
sahf
jmp
mov
pop
jbe
push
inc
fistps
scas
aam
pushf
add
add
sarb
fsts
sarl
and
and
test
sbb
mov
std
or
add
fwait
jge
imul
and
dec
iret
mov
scas
xchg
push
int
and
push
adc
jle
in
xlat
in
mov
or
sub
pop
push
ret
addb
nop
aad
psraw
and
pop
pop
ss
fwait
add
jo
pop
rcll
sti
in
test
and
test
psraw
and
jns
cltd
sbb
std
xchg
pushf
sub
cmp
out
push
cmpsl
ret
mov
stos
mov
push
imul
int3
sahf
add
ret
and
jne
adc
fcomps
fisttps
testb
ret
loopne
hlt
jmp
enter
ds
ljmp
adc
mov
cmpsb
mov
jg
imul
dec
mov
push
cmpsb
loop
je
jno
mov
je
jns
mov
push
dec
sbb
sub
xor
or
push
xchg
mul
int
aam
popa
sbb
push
or
dec
dec
sbbl
add
adc
sub
xchg
add
leave
sbb
jns
int
jo
fidivrs
mov
mov
hlt
or
push
test
cmp
inc
movsl
insb
imul
in
aam
inc
cwtl
dec
add
addl
ficoms
test
mov
fwait
cmc
fcmovb
or
lods
mov
mov
push
ret
cmp
in
enter
mov
dec
fs
jo
dec
fwait
pop
and
mov
sahf
push
stc
enter
mov
push
xor
lahf
and
cli
or
sahf
sub
nop
xchg
mov
push
popl
and
mov
stos
inc
pop
movsl
cmp
pop
arpl
cwtl
imul
jp
sub
out
add
outsb
test
outsb
inc
cmp
cmc
pop
inc
mov
sbb
lds
adc
ja
or
sti
xor
cmp
bnd
aad
data16
sbb
sbb
ljmp
in
cmp
repz
aas
adcl
daa
add
ljmp
mov
es
cmc
cmp
inc
lea
mov
loop
xchg
mov
ret
xchg
push
add
mov
and
xor
mov
and
and
repnz
inc
mov
and
aad
mov
cltd
xorb
push
lcall
cwtl
jb
cmpsb
ret
stc
mov
xor
pavgw
sahf
shl
mov
les
rcl
inc
jae
and
pop
jne
mov
pop
inc
pusha
int3
cmc
and
xlat
aas
inc
xor
and
ljmp
fistl
add
aam
adc
leave
xchg
rep
iret
dec
xlat
add
cmp
shrl
pop
and
int
xor
dec
movsb
pop
shlb
mov
pop
rolb
mov
ds
pop
sub
repnz
lret
popa
mov
pop
in
pop
jns
iret
loop
cs
enter
push
xor
rolb
pusha
mov
adc
ds
stos
stos
adcl
mov
out
loope
push
inc
mov
les
in
pushf
fnsave
add
jae
xor
add
insl
std
or
adc
out
add
cmpb
cmpsl
popa
out
jae
and
inc
andl
cmp
js
cmc
out
fcmove
xchg
sub
cmp
lahf
pop
dec
pop
aam
mov
xchg
pusha
pop
mull
aad
into
pop
pusha
xchg
adc
jo
xor
test
bound
ds
xor
lods
jmp
fcompl
xchg
daa
inc
roll
inc
jle
mov
mov
xchg
les
cmp
out
sbb
aaa
scas
adc
or
lret
test
mov
push
dec
in
mov
and
pop
xor
mov
pushw
iret
imul
daa
in
pop
lods
das
addr16
leave
xchg
cltd
pop
sti
jns
test
xor
mov
lock
lods
cmc
mov
inc
mov
lahf
mov
mov
xor
mov
jge
cmpsb
mov
cmp
mov
cmp
mov
mov
das
ss
shrb
jg
dec
inc
mov
and
enter
scas
mov
push
lret
xchg
subl
sub
pop
sub
inc
aam
mull
insl
cli
mov
push
stos
gs
loope
and
hlt
mov
mov
decl
dec
and
decl
ljmp
pop
lahf
jne
mov
and
cmpsb
sub
outsl
inc
pushf
push
mov
jmp
nop
sarl
mov
es
or
mov
test
loop
jne,pt
cld
gs
xor
xchg
sub
cmc
aaa
lcall
push
jecxz
hlt
sub
cmpsl
out
ds
dec
xchg
xchg
test
mov
push
fbstp
push
test
xchg
jle
sti
loope
insb
pop
sub
mov
movnti
mov
incb
jbe
and
dec
xchg
or
ret
ss
sub
sub
cwtl
cmp
lahf
xor
pop
mov
cmp
dec
jo
jg
jp
cltd
shll
dec
ret
in
mov
arpl
mov
enter
lock
mov
repz
push
push
cmp
scas
xor
jg
addr16
mov
jo
adc
cli
cmp
pop
adc
add
jns
jecxz
scas
adc
sahf
call
test
test
or
stos
in
push
jg
sahf
iret
cli
mov
pusha
rcrl
add
inc
xor
add
fwait
pop
cmpsl
mov
mov
js
aaa
mov
insl
into
ja,pn
mov
mov
pop
mov
cmc
addr16
call
test
or
daa
icebp
mov
out
adc
stc
rol
xchg
loopne
push
ds
loopne
arpl
stc
sub
lahf
push
in
sbb
pop
test
sub
repz
cmpb
or
mov
pop
test
xor
cmp
out
pop
divl
mov
add
in
and
aaa
stc
shrl
test
scas
arpl
loopne
cld
popa
jg
pop
outsl
pop
inc
pop
sub
dec
mov
das
test
xchg
pop
fiaddl
mov
in
add
inc
sub
push
push
sbb
adc
or
scas
mov
pop
push
das
ret
pop
mov
fstps
inc
pop
add
jl
hlt
shll
int
dec
adc
xchg
in
enter
mov
mov
scas
dec
lret
mov
dec
and
cmp
pop
mov
pop
test
pop
sbb
pop
je
lea
shll
fwait
pop
jle
repnz
xlat
push
ret
sub
arpl
mov
test
xchg
inc
stos
or
mov
clc
cmp
pop
fnstcw
test
mov
lret
pop
xor
mov
push
pop
sbb
pop
movsb
sub
cmp
ret
lret
cld
jmp
xchg
mov
sub
ffreep
andl
repnz
pop
inc
les
in
pop
lret
push
pushf
test
mov
iret
push
aaa
mov
jae
add
rcl
mov
xor
jns
scas
jno,pt
sbb
mov
incb
cmp
loope
sub
cwtl
in
mov
push
jecxz
scas
stc
xchg
dec
adc
xchg
jb
in
cmp
cmpsb
in
outsl
popa
cmp
push
sbb
mov
insl
mov
mov
insl
sub
shll
std
push
out
pop
test
test
jbe
mov
lcall
pop
push
add
push
add
std
xor
jp
in
lock
mov
jne
adc
out
mov
loopne
mov
arpl
sub
and
loopne
push
lock
mov
lods
je
js
ret
enter
hlt
jo
push
dec
hlt
lret
leave
popa
jb
mov
in
mov
adc
sub
cmpsl
xchg
ja
mov
dec
jge
in
int
cli
push
push
ljmp
icebp
stc
xlat
jmp
mov
jg
iret
xchg
in
push
cmp
or
lret
jb
push
and
xor
add
and
and
clc
push
pop
fistpll
or
sub
ret
scas
clc
adc
mov
xor
aas
mov
jecxz
aas
fwait
sti
push
divb
or
cmp
add
loope
pushf
lock
and
stos
ret
jle
int3
sti
or
sbb
pop
lret
iret
dec
in
sbb
jmp
out
jb
jmp
lahf
and
sub
inc
fdivs
sahf
push
test
stc
or
in
stc
xor
sahf
cmpl
insl
movsb
repnz
mov
and
out
rcrl
repz
xor
ffreep
gs
negl
xor
jg
xchg
mov
into
ret
or
loop
push
daa
and
cmp
aas
add
and
adc
mov
jne
repnz
call
out
sbb
das
out
jbe
lcall
int3
jmp
loope
jl
out
xor
dec
mov
sub
rorl
add
hlt
push
push
push
sbb
int
xor
enter
jp
repz
lods
mov
sahf
cmp
pushf
dec
in
xchg
jns
add
adc
mov
and
or
add
out
std
lods
pop
push
dec
aas
repnz
mov
xchg
dec
out
leavew
fldl
fisttpll
pop
push
sbb
aaa
inc
inc
das
xchg
testl
mov
shr
jle
xchg
cmp
mov
testl
int3
in
arpl
adc
scas
push
mov
sub
adc
inc
push
push
sbb
repz
popl
sub
xchg
inc
mov
daa
inc
in
arpl
pop
mov
jle
sbb
jg
icebp
insb
jnp
dec
mov
xchg
lcall
xlat
nop
adc
adc
test
mov
lret
ljmp
xchg
pop
inc
loop
out
test
push
icebp
outsb
inc
sti
inc
and
popa
mov
mov
mov
lret
stc
inc
std
mov
ss
inc
sti
repz
ljmp
shl
mov
notl
insb
pop
ret
movsl
inc
xor
sub
adc
out
test
sub
sub
andb
mov
sbb
pop
dec
out
jae
xchg
shl
sahf
mov
gs
negb
in
dec
xor
fidivs
in
into
fstl
leave
lcall
jmp
outsb
mov
jns
push
stc
push
pop
pop
aas
lods
orl
cld
pop
pop
sbb
xchg
or
dec
mov
push
rolb
pop
out
sarb
bswap
cmp
pop
ror
inc
enter
push
mov
mov
pop
fildl
sbb
push
mov
mov
fidivrs
cmp
pmulhw
fcoml
ss
ss
mov
mov
sti
jmp
ret
push
inc
jecxz
repnz
out
icebp
loope
stos
cmpsb
cwtl
aam
cwtl
scas
or
ret
addb
faddl
mov
in
mov
ret
addb
stc
paddusw
jns
jp
int3
mov
fwait
lcall
mov
and
xor
test
and
outsl
add
jns
and
cld
cmp
inc
call
test
mov
adc
xchg
mov
sub
test
and
mov
jl
loopne
jns
fsubrl
idivb
andl
xchg
outsl
push
fnstsw
cmc
jg
imul
push
insb
clc
fucomip
aas
sbb
les
jg
pop
pop
loope
sbb
pop
ret
repnz
and
jmp
lds
and
sti
in
cmpsl
jno
sbb
imul
jbe
aad
icebp
mov
pop
stc
inc
lods
xor
cld
andl
fdivs
and
mov
es
aaa
push
push
repz
xor
out
icebp
or
xchg
push
inc
mov
add
xchg
mov
test
call
je
jns
lcall
pop
mov
and
jle
int3
inc
sbb
mov
mov
std
stos
mov
out
sahf
adc
push
cmp
or
das
xor
cmc
addr16
xchg
js
jo
mov
into
mov
push
jl
test
icebp
mov
call
sub
push
inc
push
sbbl
jp
cmpsl
fimull
bound
roll
push
push
xchg
xor
aas
sarb
call
jp
fwait
push
je
cmp
jno
mov
in
push
outsl
and
push
xor
inc
outsl
or
mov
sbb
jl
cli
xor
pop
push
mov
push
mov
mov
test
insl
mov
outsl
dec
pop
cmpsb
dec
sahf
fildl
mov
mov
inc
mov
mov
int3
lods
adc
dec
mov
rcr
fldcw
aaa
outsl
in
and
cwtl
cwtl
les
cmc
cmc
xor
and
and
adc
jb
into
sub
lods
and
stos
cmp
adcb
shlb
push
rdmsr
out
xlat
divl
jg
popf
pop
daa
add
jne
and
add
inc
addl
adc
je
ljmp
push
inc
ret
lods
les
imul
std
pop
flds
add
sbb
stos
xlat
call
sub
sbb
dec
mov
lahf
es
sahf
les
dec
pushl
pop
sbb
stos
push
clc
inc
mov
call
xchg
lcall
xchg
sub
add
loop
and
out
ds
iret
mov
cmp
mov
das
and
inc
mov
imulb
pop
xchg
push
in
lahf
push
dec
stos
pop
leave
or
xchg
fistpll
movsb
cmpsb
or
push
cmp
xchg
in
and
xor
pop
mov
test
jmp
outsl
out
inc
lahf
pushf
clc
adc
lock
sti
testl
jne
push
enter
stos
scas
add
movb
int
repnz
sarl
sub
pop
int
mov
movsl
out
adc
test
lea
inc
xor
sahf
mov
or
in
ja
mov
icebp
xchg
outsl
imul
and
push
and
inc
or
das
jnp
jae
mov
dec
cltd
pop
sahf
cli
or
push
in
and
and
mov
push
out
divl
popf
sub
cld
and
ret
pop
mov
imulb
mov
xlat
lock
cld
mov
movsb
cld
movsb
and
ret
dec
push
fmuls
gs
movsl
mov
mov
in
or
xor
pop
ret
hlt
decl
fs
sub
in
or
sbb
xor
lret
stos
clc
pop
scas
lcall
or
adc
repz
fs
jecxz
pusha
pop
xchg
jecxz
negl
int3
push
popf
sub
incb
neg
stos
xchg
xor
and
dec
jb
repz
pop
sahf
sahf
mov
imull
shlb
jnp
jecxz
push
mov
mov
xor
jge
sti
and
fisttps
xor
inc
xchg
cld
sbb
fmuls
dec
xor
sub
pop
pop
dec
xlat
jle
rcll
mov
sub
aam
pop
push
push
testl
lods
loop
gs
xchg
push
out
inc
int
stc
push
jae
insl
xlat
dec
sbb
lock
inc
pushf
xor
xor
fadds
js
or
fs
sub
imul
lds
int
ret
stos
fstpl
mov
mov
loope
xor
sbb
sbb
dec
dec
dec
pop
rcll
imul
pop
leave
xor
fidivrl
dec
mov
lea
adcl
adc
push
pop
pop
roll
or
add
int
insb
mov
dec
jmp
insl
cmp
or
cmpsl
addr16
imul
rorb
imul
cli
test
scas
sub
mov
adc
stc
jno
loope
inc
xchg
lcall
movsb
push
inc
add
pop
mov
mov
sahf
data16
bound
enter
lods
movsb
cmpsb
jne
xchg
dec
mov
sub
ret
call
jne
ret
jecxz
ds
sbb
das
adc
cmc
cmp
cltd
add
and
mov
jp
xchg
add
mov
dec
outsb
fwait
bound
shlb
xchg
outsb
mov
dec
push
mov
dec
nop
cmp
xor
pop
daa
test
xor
dec
or
push
out
adc
insb
mov
ljmp
pop
sub
out
imul
mov
xor
xchg
into
in
push
sbb
mov
fistl
xor
jecxz
dec
test
xchg
shlb
push
flds
lcall
into
xchg
movnti
sub
test
xor
or
sahf
mov
or
push
xor
fistpl
lods
push
pusha
fiaddl
into
in
aas
inc
adc
ss
cmp
mov
push
enter
inc
popa
xchg
inc
in
addl
rorb
imul
inc
dec
out
jl
sahf
mov
inc
popf
pop
and
mov
adc
jno
aaa
push
lds
scas
dec
adc
mov
imul
xchg
xchg
add
and
dec
push
jge
cmpsl
add
or
xchg
in
lea
jecxz
fcoml
push
jo
push
xlat
dec
and
pop
xor
inc
je
out
push
mov
inc
mov
inc
jo
test
in
out
xchg
sbb
sub
in
push
out
inc
mov
enter
jns
dec
mov
lret
lods
mov
call
add
mov
cmpsl
add
sub
adc
das
add
adcl
cmp
pushf
sbb
loopne
sbb
fcoml
mov
bound
jp
pop
les
fisttps
leave
dec
in
and
lods
icebp
jecxz
inc
pop
push
inc
mov
pop
dec
lret
inc
in
sar
sbb
sub
sub
cmp
adc
rolb
iret
aaa
xchg
push
andb
or
stc
mov
fwait
ret
addl
xor
aam
insb
inc
ret
add
jmp
ds
mov
xor
jno
mov
sahf
xchg
mov
mov
push
fsubp
shrb
nop
push
int3
xchg
inc
mov
cmc
xchg
mov
adc
mov
fistpl
inc
iret
push
cld
or
shlb
lret
insl
in
jle
sbb
sar
ja
inc
loop
std
cmp
stc
shr
in
leave
inc
fcomi
sub
clc
pop
out
cmpsl
daa
mov
sub
mov
mov
idivb
lds
jmp
and
xor
push
in
inc
mov
sub
push
or
inc
mov
rcr
stos
adc
dec
sbb
jecxz
inc
sti
adc
xchg
dec
add
cmc
add
fs
scas
ds
sub
sahf
mov
adc
cmp
lcall
jg
pop
pop
adc
pop
jb
mov
scas
popa
ret
cmp
fnstenv
ds
clc
sbb
rcrl
xchg
rcl
adc
mov
lea
gs
shl
or
ja
cmp
cmp
lods
inc
loope
int
cmp
repz
dec
adc
lods
jmp
mov
cmp
sub
and
shll
js
add
mov
in
adc
out
mov
dec
js
imul
rorb
and
fistps
int
clc
cmp
aad
and
and
cmp
cmpsl
aam
pop
stc
out
insl
hlt
pop
xchg
aas
lcall
loopne
cmpsl
push
sub
xchg
in
mov
lods
inc
jbe
adc
jecxz
dec
dec
je
fnsave
mov
sub
sbb
lret
mov
sub
or
pop
idivb
pop
daa
jns
jg
cmpsl
popa
and
ret
pop
mov
test
add
test
push
lods
adc
pop
lretw
lods
insb
insl
jnp
pop
jne
icebp
pop
push
pusha
lahf
mov
inc
cmp
ror
dec
xchg
pop
sarl
mov
scas
js
cs
push
and
dec
pushf
test
cmpsl
push
xchg
pusha
push
cmp
lret
jb
std
stos
push
or
add
arpl
mov
mov
cmp
jp
mov
leave
adc
sbb
cmc
loopne
rorb
xchg
fwait
dec
lret
pop
inc
jmp
test
mov
aam
mov
jge
xor
add
mov
daa
mov
test
add
dec
push
mov
inc
cmpl
pushf
push
sbb
add
clc
add
faddl
adc
icebp
cmp
push
mov
sbb
dec
fldt
inc
and
cs
cmp
sub
pusha
sub
push
ret
scas
inc
pop
jmp
clc
pop
or
dec
mov
xchg
pop
xchg
ret
in
mov
int3
mov
adc
cmp
js
or
mov
repnz
mov
sub
jecxz
pop
or
hlt
leave
setg
push
xor
loop
int
cld
or
lods
xlat
popa
dec
jb
ficomps
fcomip
mov
fstp
and
insb
aad
mov
xchg
in
xor
jp
mov
mov
aam
mov
mov
dec
loop
push
xor
push
xlat
popf
das
mov
lods
in
test
lret
loop
cmpsb
jo
test
adc
cmc
mov
sub
mov
fnstcw
sub
pop
push
fstl
sub
jnp
xchg
clc
jns
dec
adc
jmp
cltd
jp
mov
adc
cmpsl
xchg
add
xor
cli
arpl
icebp
push
pop
cmp
xchg
stc
popa
aad
sub
xchg
cmpsb
icebp
mov
ja
jl
push
mov
fs
lcall
fstpl
or
notb
ja
lea
inc
aam
cwtl
inc
sub
mov
sub
mov
inc
shll
lock
inc
div
cmp
pop
xchg
push
fadds
cmp
mov
int3
hlt
or
test
and
jae
cltd
fcoms
iret
add
lods
dec
stc
jne
cmpsb
mov
adc
pop
sub
dec
inc
loope
leave
pop
push
inc
ds
pop
cltd
pop
dec
sbb
out
ret
in
sub
je
mov
cmp
jnp
ljmp
punpckhbw
inc
out
and
nop
and
jg
adcb
fmul
cmpsb
lods
inc
push
sub
xchg
dec
sub
cmp
or
cmc
adc
negl
xchg
jge
push
out
jge
iret
mov
repz
dec
int3
sbb
fs
push
pop
push
addr16
lock
icebp
mov
movntps
mov
in
adc
enter
push
adc
cmpsl
bnd
sub
sbb
push
pusha
jl
aad
xor
cmp
cli
push
scas
sub
mov
sub
fdivr
cmp
movsl
adc
repz
and
je
mov
cmpsb
lret
xchg
mov
jecxz
lret
fisttpl
int
aad
or
mov
mov
dec
push
leave
dec
adc
insb
push
ds
loop
fwait
movsl
lds
sahf
jno
dec
imul
jbe
cmp
cld
or
ss
jns
fwait
and
sub
cmp
or
mov
out
stos
dec
mov
adc
sbb
faddl
fs
arpl
pop
pop
cmp
jp
mov
adc
lret
bound
xor
nop
add
adc
push
inc
stos
inc
inc
sub
adc
test
pop
pop
mov
dec
lahf
mov
jb
cmp
jmp
rorb
adcb
push
dec
mov
std
adc
nop
push
movsl
movsl
cmp
imul
jno
fimull
xchg
jbe
test
push
test
mov
aaa
out
stos
xor
imul
pxor
pusha
adc
pop
lock
jp
xchg
sti
mov
movsb
cmpsb
in
or
movsb
bound
sub
in
es
outsb
fdivp
aam
mov
sbb
pop
fimuls
sbb
addr16
leave
test
jb
test
sub
fcomp
aad
pop
pop
sub
popf
pop
leave
lods
mov
outsl
sub
arpl
arpl
push
lea
pop
enter
pop
imull
jecxz
ljmp
push
jns
and
enter
popa
ret
add
ret
dec
jle
mov
stc
repnz
pop
aad
jno
push
jle
movq
jge
loopne
rcl
mov
xchg
insb
dec
sub
xchg
das
pop
cmp
xlat
push
nop
inc
int3
sbb
data16
xchg
mov
push
pop
sub
ss
das
testl
test
insb
xchg
dec
shl
mov
xor
push
add
dec
jle
ds
sbb
xchg
mov
pop
xor
push
and
fs
xor
sahf
les
inc
mov
lret
fnstenv
mov
lock
sbb
roll
inc
xchg
or
test
mov
addl
stos
pop
cmp
jge
repnz
mov
xor
test
sub
test
cmp
mov
mov
push
pop
lea
ret
adc
sahf
in
sbb
jg
addl
xor
mov
xchg
outsl
sub
insb
mov
arpl
push
sub
jbe
mov
fsubrl
cmp
cmp
call
mov
xchg
add
hlt
sbb
adc
std
out
or
popa
ds
cmp
mov
or
jecxz
inc
in
ror
cmp
out
adc
insb
dec
adc
inc
push
add
sbb
ret
push
lcall
pop
movsl
adc
test
inc
push
cli
fs
jbe
sub
test
popf
fdivrs
mov
sbb
imul
outsl
or
lret
fmul
xor
movsl
xchg
aam
push
jecxz
cmp
ss
les
push
dec
fwait
bound
jnp
mov
scas
push
sti
sar
push
lods
sub
sbb
fcom
loopne
dec
mov
jnp
xchg
aas
pop
adcl
xchg
pop
lea
inc
cmp
mov
xchg
push
mov
or
std
mov
ds
out
pop
xchg
lcall
pop
xor
inc
add
and
mov
ljmp
jge
js
lock
xor
cmpsl
sar
push
int
iret
data16
loopne
outsb
cmp
and
ss
push
mov
cmp
pop
cmpsb
fs
add
cli
pop
hlt
xchg
add
scas
inc
out
jb
stos
pop
test
and
dec
mov
sub
jecxz
adc
dec
jp
shl
inc
pop
add
sub
jno
jae
sub
mov
or
sbb
movb
sbb
mov
push
pop
addr16
mov
sbb
mov
mov
das
test
inc
mov
mov
mov
andb
ds
imul
mov
aam
lret
fsubs
data16
and
cmc
mov
push
sbb
imul
rcrl
dec
fnstcw
adc
xchg
inc
xlat
xchg
push
inc
mov
ljmp
mov
add
int3
loop
fistpl
shrl
cmp
cmp
in
inc
repnz
aad
ss
ret
insl
add
comiss
sbbb
pop
or
or
int3
ret
in
icebp
dec
xchg
push
mov
call
xor
jecxz
lds
and
into
add
cmp
in
scas
mov
lret
push
jne
adc
dec
hlt
loop
jl
add
pop
push
faddp
mov
lods
dec
outsl
cmc
imul
jns
mov
jns
hlt
pop
popf
mov
pop
jno
inc
std
push
adc
xchg
fiaddl
data16
das
push
cmpsb
fimull
ret
arpl
bound
arpl
aaa
mov
sbb
outsl
push
jge
pop
mov
dec
cli
arpl
ja
lea
push
xor
push
stc
lock
cmp
mov
sbb
mov
xchg
sub
nop
outsl
sub
cmp
lea
or
pop
jmp
mov
inc
mov
jg
in
push
cmpl
imul
jg
enter
mov
dec
clc
es
mov
pop
add
imul
out
xchg
insl
fbstp
push
insb
or
nop
mov
push
insl
sub
ljmp
stos
das
cld
mov
pop
ss
lcall
adcl
test
imul
jg
jg
adc
std
or
mov
loope
scas
adc
or
jp
dec
cmp
mov
pop
mov
lock
push
movsl
dec
js
xchg
les
adc
js
ret
ja
or
out
fisttpll
jns
mov
jns
scas
test
mov
pop
xchg
scas
push
shrl
cli
ljmp
and
stos
in
push
addr16
inc
inc
and
out
ret
mov
fs
mov
fsub
shlb
mov
aam
enter
pop
dec
or
mov
mull
es
mov
inc
std
repnz
lret
out
imul
notb
fisubrs
and
sbb
mov
cmpsb
pop
inc
popa
imul
arpl
call
icebp
xlat
hlt
or
adcb
or
cwtl
leave
jno
stc
enter
testl
mov
push
and
icebp
inc
or
xchg
mov
outsb
mov
inc
mov
test
or
fdivrs
aad
shlb
inc
fbstp
clc
repnz
mov
push
sbb
mov
fsubs
outsl
pop
push
mov
arpl
add
push
inc
pop
shr
sub
mov
in
mov
dec
xchg
push
lock
arpl
cli
jle
daa
test
push
fwait
jle
mov
movsl
mov
mov
bound
sbbb
add
repz
xchg
pop
aam
pop
dec
andl
pop
push
js
and
xor
inc
sbbl
inc
mov
lea
and
mov
mov
lahf
jle
shr
lret
inc
sbb
mov
mov
jb
das
sbb
add
fisubrs
pop
pop
cmpsb
dec
push
push
cltd
push
subl
rol
shld
push
push
adc
or
or
das
test
jle
or
imul
clc
leave
int3
mov
push
rcrb
push
or
xchg
inc
push
lock
pop
add
cmp
insl
adc
or
addb
adc
add
ret
aad
mov
mov
and
sbb
dec
test
aad
test
popf
enter
adc
mov
mov
inc
and
sub
int3
mov
and
daa
sub
into
pusha
je
mov
aam
jne
push
lcall
mov
cld
lock
mov
cmp
jnp
mov
adc
ret
loope
inc
and
push
jns
pop
pop
xor
ds
fldcw
enter
sub
lock
cmpsl
repnz
rcrb
or
sub
mov
push
pop
das
andb
test
and
in
in
add
mov
inc
inc
lcall
adc
mov
lods
shll
mov
imul
mov
lock
xchg
push
sbb
ljmp
push
in
push
pop
ror
mov
shl
mov
int3
imul
sahf
loopne
mov
imul
push
adc
adc
clc
inc
stc
dec
adc
jecxz
add
nop
mov
dec
or
adc
lea
call
xchg
mov
adc
pop
mov
or
sbb
mov
or
lock
mov
xor
cmpsl
rep
js
push
xchg
push
fisttps
push
jno
and
sbb
mov
add
pop
cltd
add
shlb
outsb
and
es
dec
sbb
mov
mov
inc
ss
mov
sbb
and
or
mov
imul
cmp
xor
loopne
or
cmpsb
fadd
js
out
mov
imul
pop
pusha
adc
orl
xchg
pop
xchg
test
scas
sarb
mov
ds
mov
jo
xchg
test
pop
dec
dec
andb
sub
adc
movb
push
add
jns
in
push
add
mov
je
repz
rolb
jge
adc
push
mov
dec
mov
arpl
cmp
addb
xor
jns
and
aaa
sub
mov
jge
mov
pop
outsb
loop
push
in
out
add
dec
adcb
pop
cmp
aaa
cs
inc
and
push
inc
xlat
pop
ds
hlt
rorb
and
push
enter
pop
adc
mov
adc
fidivrs
clc
pop
gs
stos
dec
loopne
or
idivl
fiadds
pop
loope
push
jo
dec
out
lcall
or
mov
and
add
rorb
je
inc
pop
in
jno
loopne
dec
mov
adc
repz
add
rclb
sahf
push
fisubs
add
gs
inc
jae
stos
repz
jb
add
pop
jo
sub
add
bound
aas
pop
inc
sbb
lock
lret
in
push
int3
cmp
cmp
mov
xchg
dec
mov
aad
clc
in
mov
loopne
jne
adc
int
cmpb
aam
push
push
cmp
iret
sub
lret
enter
mov
in
mov
test
sub
pop
push
lret
fs
fsubrl
xor
sbb
addl
jo
mov
repz
jne
fmull
outsl
xor
jge
jl
sbb
enter
or
xlat
into
test
mov
outsl
int3
lcall
lods
sar
ds
push
sub
movsl
sub
js
jbe
sub
clc
inc
fnsetpm(287
outsl
and
pushf
inc
xchg
fwait
mov
mov
sub
mov
jo
sbb
jb
movsl
inc
movsl
into
cmp
out
cmp
inc
xchg
jae
sbb
and
mov
stos
xchg
shll
scas
sbb
and
mov
pop
out
leave
lcall
add
call
adc
mov
xor
mov
jno
loope
fs
or
cmpsl
pop
testb
mov
adc
lcall
pop
cmp
mov
insb
enter
loop
loopne
imul
xchg
lods
xchg
xor
adc
mov
xor
int
xchg
inc
push
push
sub
stos
jl
out
dec
ds
dec
ss
and
popf
xchg
aas
movsl
jle
adcb
ret
mov
inc
and
mov
mov
inc
sub
xor
neg
insl
into
inc
lret
std
call
sub
cld
and
enter
xadd
jbe
and
sarb
adc
loopne
ds
pop
aad
mov
sub
mov
pusha
dec
add
dec
je
dec
dec
xchg
stos
push
xor
test
jge
mov
pop
mov
fiadds
shr
hlt
hlt
lahf
mov
mov
cwtl
mov
cmp
push
or
pop
xchg
jne
jp
push
pop
or
xchg
dec
in
in
or
dec
jp
cmp
loope
mov
daa
mov
shll
mov
dec
xchg
ret
hlt
xlat
mov
lea
sub
jne
loop
xchg
jle
jl
pop
mov
call
jp
push
or
pop
hlt
fs
les
mov
mov
repz
xchg
call
hlt
mulb
insb
ficompl
jb
das
clc
ret
pop
imul
mov
test
xchg
push
xchg
lea
les
pop
jge
dec
pop
insl
xchg
push
pop
dec
sub
imul
in
xchg
clc
push
adc
xchg
push
xlat
dec
stos
inc
test
ret
ljmp
xchg
mov
lods
push
or
dec
cmc
gs
aas
hlt
loope
in
stc
or
mov
into
enter
xor
clc
xchg
mov
loopne
in
and
lods
cmp
roll
out
fs
mov
cmpb
in
or
or
push
repz
std
repnz
xchg
sub
mov
push
lret
cmpsl
mov
mov
stc
and
jmp
fiaddl
cmp
outsl
mov
int
xor
xchg
sti
cmpsl
out
jae
rcll
mov
xor
and
lret
shl
and
cmc
faddl
out
mov
pushf
mov
test
jb
and
adc
xchg
adc
jecxz
mov
leave
inc
cld
lods
mov
xchg
es
clc
in
ljmp
or
test
stc
je
das
xchg
mov
sbb
mov
pop
and
dec
mov
jb
sahf
dec
ret
mov
jle
sahf
add
inc
insb
push
fisubrs
lock
lahf
xchg
fdivrp
inc
or
testb
addr16
push
cmp
iret
or
cld
sub
jge
daa
out
gs
push
stc
shll
cmp
cmc
jb
jbe
shlb
rclb
pop
cmpsb
dec
sahf
mov
mov
push
ljmp
sub
je
mov
adc
aad
add
and
push
loop
xor
push
dec
xor
dec
adc
mov
xchg
push
xchg
add
sbb
mov
pop
xchg
lret
test
add
aas
xchg
mov
stc
imul
mov
stc
mov
dec
les
lock
mov
pop
mulps
mov
pop
loopne
pop
cwtl
out
pop
iret
inc
inc
int3
insl
daa
in
sahf
pop
loopne
or
add
mov
push
and
push
and
dec
mov
sbb
sub
inc
cmpxchg
out
aaa
add
call
out
cmp
fisttps
arpl
popa
enter
jno
xchg
dec
push
lea
xchg
sbb
add
hlt
mov
jae
push
sub
dec
xor
lcall
leave
mov
repnz
pop
ss
sub
out
xchg
decb
cltd
movsl
test
mov
call
enter
rorb
xor
jae
call
pop
outsb
in
inc
mov
leave
jno
jnp
mov
pop
repnz
mull
sti
imul
pop
sbb
hlt
mov
jnp
outsb
add
fimull
aam
sbb
shlb
out
and
and
lret
sahf
iret
dec
sbb
loop
sub
addr16
imull
mov
jmp
push
pop
mov
xor
loopne
insb
filds
pop
mov
jl
cwtl
lret
adc
jns
adc
in
xor
and
xchg
imul
cwtl
pop
mov
mov
pop
mov
push
and
dec
hlt
adc
cld
push
insl
enter
dec
mov
and
movsb
cld
imul
fwait
jmp
inc
cmp
in
scas
push
pop
clc
pop
imul
mov
jo
in
movsb
mov
int
sub
jg
shlb
push
adc
adc
inc
out
jns
popa
jae
cmpsl
add
inc
jmp
addr16
fadd
mov
push
adc
push
dec
cmp
popf
imul
push
jb
cld
jns
out
push
jmp
or
out
ljmp
jns
ror
in
mov
add
loop
jge
jmp
inc
mov
xor
shll
mov
icebp
scas
fisubs
lret
jo
pusha
loop
out
and
aam
sub
push
cmp
ret
inc
xor
test
bound
outsb
data16
in
lret
in
jp
inc
loope
xchg
sbb
negl
iret
lahf
outsl
dec
sbb
test
fisubs
mov
lods
xchg
jl
mov
dec
lods
pop
filds
in
push
jg
sub
sbb
pop
mov
movsl
in
fnstsw
dec
mov
pop
int3
repz
hlt
aaa
cld
mov
pusha
leave
mov
scas
rorb
jne
in
xchg
jnp
push
pusha
icebp
orb
mov
push
lods
es
push
movsl
in
mov
add
dec
loope
ds
out
add
lahf
mov
jae
pop
fdivrs
xchg
jne
cli
or
xor
sub
cmc
mov
sahf
movsl
idivl
xorl
insb
cld
clc
daa
sar
pop
mov
jb
xchg
lods
mov
xchg
mov
cmp
fbstp
mov
filds
pushf
in
and
movsb
movb
mov
sub
mov
add
lock
lock
pop
lea
sti
repnz
lods
sti
pop
ficoml
lock
fwait
into
sbb
mov
cltd
lret
ret
sub
inc
mov
sub
xchg
out
dec
nop
or
lcall
movsl
insb
push
stos
sbb
add
mov
push
out
mov
xor
xor
hlt
inc
and
adc
cmp
jne
dec
xchg
cmp
adc
or
push
inc
cld
icebp
cmc
inc
push
jae
xchg
rorl
jle
inc
aam
stos
inc
and
push
rclb
pop
jb
cltd
fsubs
cmc
cwtl
aam
hlt
lret
pop
push
adc
fidivrl
in
sub
daa
xchg
popf
gs
mov
les
cltd
mov
mov
jmp
lcall
jmp
sbb
cmp
in
jbe
loope
jp
cmpsl
hlt
mov
inc
xor
imul
dec
cmp
lods
push
arpl
xor
push
stos
xor
sub
mov
push
jns
jmp
mov
cmp
stc
xor
push
lret
pushf
inc
xchg
mov
lret
in
mov
dec
mov
cmp
leave
dec
xor
adc
jb
out
call
stc
out
movsl
xor
fldt
movl
mov
out
fsubrs
movsl
jge
sub
inc
mov
shl
popa
mov
outsb
stos
imul
sbb
pop
imul
shr
icebp
jp
hlt
negb
std
push
call
sub
jle
or
pushf
or
dec
in
pop
stos
push
adc
mov
repz
adc
jnp
and
clc
xchg
jo
cmp
jae
pop
push
idivb
int
mov
pop
mov
lods
adc
pop
mov
cmpsb
jmp
dec
push
adc
jne
stc
xor
push
into
bound
int
xchg
cmpsl
pop
jb
into
dec
imul
xchg
roll
das
cmpsl
add
movsl
sbb
add
sti
adc
es
enter
lods
pop
imul
rcl
loopne
and
add
mov
and
fxch
sbbb
das
cmpsb
mov
mov
sti
cmc
dec
dec
loop
push
sub
cs
jmp
test
in
add
pop
sub
mov
xor
xchg
jno
out
add
outsb
xor
add
adc
jnp
pop
mov
rorb
xchg
repz
loop
xchg
push
sahf
loop
add
sub
xchg
add
cli
fnstcw
add
or
ret
dec
aaa
stos
imul
gs
mov
dec
in
xor
mov
inc
shlb
stos
in
xchg
test
lret
shlb
insl
inc
rcrl
push
jnp
insl
cmpsb
cwtl
mov
push
rcll
test
insl
scas
mov
inc
je
jb
inc
push
dec
fwait
bound
dec
pop
push
imul
push
in
sub
cmpsl
das
xor
push
pop
cs
mov
xor
push
adc
fcomps
jo
ss
cli
pusha
mov
pop
mov
shrl
inc
movsb
push
and
lods
xor
cmpsb
fisubrl
jg
in
xlat
jne
fsubs
mov
push
xchg
daa
loopne
cmp
insb
loop
sub
sbb
cld
and
cmc
mov
cli
mov
mov
mov
in
sbb
stos
jmp
or
inc
es
punpcklwd
lahf
loope
push
push
sahf
lcall
sahf
xor
lcall
lcall
dec
push
lcall
dec
fs
push
adc
shl
fdivs
jmp
adc
add
inc
push
sbb
cmpb
leave
popa
sub
push
sbb
xlat
xor
hlt
mov
jp
sub
pop
leave
sbb
xchg
or
or
mov
adc
imul
and
cmp
xor
stos
popa
daa
cld
mov
imul
mov
sbb
inc
dec
xor
push
out
cmpsb
fs
scas
dec
repz
sbb
xchg
rolb
repz
fsubl
sub
adc
insl
push
pop
lcall
sbb
cwtl
imul
lea
adc
cmp
xchg
fwait
or
je
pop
adc
neg
das
rcrl
and
insl
xlat
les
jb
ss
mov
in
mov
and
pop
add
jge
dec
test
movsb
pop
push
nop
rcrb
cld
dec
dec
mov
lock
xlat
mov
test
test
sbb
data16
inc
bound
mov
test
loope
out
mov
div
in
cmpb
jmp
fisttps
mov
adc
pop
sbb
movsb
mov
dec
or
mov
jne
aam
mov
dec
jb
ret
lcall
jmp
inc
out
push
sbb
jns
fiadds
lret
mov
ja
in
sbb
xchg
ja
xor
outsl
mov
inc
pusha
cli
adc
fstp
fwait
inc
fisubs
ds
cmp
lret
ret
fdivrl
fildll
lret
and
inc
mov
outsl
loop
xor
fucomp
pop
mov
movsb
outsb
bound
dec
jp
hlt
jb
std
scas
add
jg
ds
cmpsl
pop
ds
insb
or
lock
sub
int3
loope
push
jl
pop
jg
lock
movl
pop
lods
dec
das
mov
ds
sub
xor
inc
jecxz
mov
repnz
jb
fwait
xor
outsl
cwtl
push
and
xchg
fildll
push
int3
mov
out
les
mov
jmp
mov
lds
mov
lock
in
mov
popf
mov
aas
jno
outsl
jae
mov
pop
and
jne
fstps
sbb
ja
pop
lds
ds
faddl
repnz
iret
adc
mov
jo
out
xlat
dec
pop
xchg
add
std
and
loopne
shlb
call
movsb
cmpsl
sub
mov
add
sbb
or
stos
mov
xor
sbb
mov
notb
fnstenv
notb
or
lcall
dec
xor
dec
jg
or
test
hlt
clc
mov
add
adc
xchg
jae
push
ss
xor
in
fldenv
jmp
mov
nop
fcmovbe
in
stos
sbbb
and
sub
js
andb
add
mov
add
xchg
mov
scas
les
popf
mov
js
push
or
ljmp
mov
cmpsb
outsb
dec
ficompl
xor
scas
adc
xlat
in
or
adc
add
add
mov
cltd
adc
test
mov
adc
jg
cmp
sahf
cld
cmp
pop
inc
sarl
bound
and
mov
or
mov
insl
insb
clc
cmp
push
aad
inc
jecxz
sub
mov
pop
cmp
pop
sbb
mov
inc
mov
popa
testl
clc
or
ret
lcall
das
out
sub
das
int3
adcl
vmovq
subl
imul
mov
in
push
inc
addr16
iret
mov
mov
sub
push
adc
sbb
jecxz
insl
push
scas
loope
mov
inc
fcompl
jmp
dec
jp
ja
stos
mov
in
pop
add
mov
or
test
cltd
cmc
jo
sbb
pop
xor
push
mov
mov
lods
jle
leave
cmpsl
push
cmp
cmp
pop
cmp
std
cwtl
inc
in
aaa
jne
cli
fnstsw
push
es
aam
insl
mov
sarl
gs
mov
ja
jle
jnp
test
das
mov
popf
lret
mov
insl
mov
movsb
cmp
std
inc
push
mov
jmp
sbb
insl
imul
call
add
addl
icebp
cmp
jae
in
mov
and
pop
xor
popa
das
ljmp
dec
adcl
clc
in
inc
mov
push
jg
pop
or
nop
sete
add
insb
loopne
fsubrl
in
or
sub
jo
push
push
pushf
icebp
pop
push
mov
cmpsb
scas
adc
or
fisttps
gs
shrl
test
cmp
fiadds
cmpsb
outsl
int
pop
add
lret
pop
movsb
sub
xor
icebp
imul
pop
jb
ja
lods
sbb
mov
mov
cmp
in
pushf
aad
loope
dec
iret
mov
popf
movsb
mov
sub
std
sub
mulb
lds
es
rorl
and
lcall
dec
std
or
inc
cmp
aam
ret
test
cmp
push
rcr
popf
or
fsubrl
sbb
movsl
push
add
mov
ficoml
jl
scas
sbb
inc
je
sbb
scas
je
mov
test
shll
aam
mov
fdivrl
in
dec
jecxz
inc
mov
cmp
adc
iret
scas
sub
xchg
xor
sub
test
dec
push
mov
gs
adc
jecxz
xchg
in
pop
xor
jae
das
pop
inc
movsb
repnz
mov
ficompl
icebp
push
fisttpl
lock
mov
dec
sub
jbe
mov
xor
addl
les
xchg
bound
dec
dec
flds
or
and
outsl
test
cmc
lods
shlb
and
lea
out
pop
gs
sub
inc
fbld
mov
xchg
push
fldcw
mov
push
mov
mov
push
inc
leave
leave
and
cmc
mov
adc
subb
mov
mov
sbb
push
inc
fsubs
test
cmpsb
xor
xor
dec
cltd
out
push
or
ret
mov
inc
mov
and
pcmpeqd
xchg
shlb
es
rcrb
std
push
jmp
mov
xor
stc
sbb
loop
jbe
inc
mov
or
mov
pop
pop
push
leave
ljmp
cmp
lret
js
add
inc
push
sub
and
add
outsb
data16
lds
dec
pop
roll
fisubrs
aad
pop
sti
cmp
out
jo
out
dec
in
fs
clc
das
push
shr
pusha
gs
out
test
mov
push
jbe
xor
shll
mov
lcall
dec
pop
cltd
and
lods
test
xchg
jns
pop
adc
pop
in
mov
inc
adc
mov
push
xchg
mov
push
xchg
in
push
adc
ds
adc
arpl
inc
repz
or
sub
popf
shl
into
cwtl
mov
mov
jmp
mov
inc
or
jo
pop
mov
mov
hlt
jmp
movsl
arpl
testb
mov
clc
andl
adc
cltd
stos
sub
ret
dec
ljmp
pusha
fldcw
insb
sbb
aaa
int
mov
mov
clc
int
jae
std
mov
outsl
mov
jno
pop
jo
rclb
and
pop
test
or
aad
push
mov
mov
out
mov
rorb
dec
push
movsb
dec
and
ret
je
pop
xchg
pop
in
popf
mov
and
scas
out
rcrl
xchg
inc
lock
mov
sub
xor
movsl
aas
xchg
loop
clc
mov
dec
loopne
xorb
aas
loopne
ret
add
jne
jno
lds
xor
imul
int
xor
shr
sar
fisubs
cwtl
movsl
xchg
jns
fildll
pop
cmp
inc
clc
mov
adc
into
jp
testb
mov
adc
xlat
inc
inc
bound
mov
js
lret
out
mov
xlat
imul
mov
and
pop
push
test
inc
nop
imul
jne
mul
mov
hlt
jmp
mov
adc
addb
fiaddl
adc
sbb
dec
popf
push
mov
sbb
xchg
ds
popa
fidivs
lahf
xor
lds
iret
dec
lahf
sub
inc
pop
in
hlt
mov
sub
in
dec
cmp
scas
shll
fiadds
in
sbb
adc
mov
mov
xor
inc
outsl
and
inc
jg
jno
and
daa
jbe
fwait
outsl
sub
js
jbe
dec
rcl
enter
inc
imul
inc
sub
fcoms
loope
mov
lds
repz
shrd
stos
icebp
cltd
mov
mov
insl
sbb
std
repnz
int
inc
sbb
ret
imul
in
xchg
push
cmp
sbbb
push
jns
cmc
iret
lret
movsb
jno
push
rclb
inc
aas
das
mov
cld
outsb
fidivrs
xchg
mov
jmp
cmp
and
push
push
pushf
aaa
pop
gs
jo
shlb
daa
lret
pop
push
push
pmullw
jmp
movsb
dec
xor
insb
pop
adc
and
and
add
cmp
jg
sbb
call
and
sti
push
xchg
cmp
enter
jg
aas
in
jg
bound
pop
or
jns
out
bound
popf
jl
loopne
jmp
fmull
xchg
in
fisttps
rcrl
cmp
enter
mov
mov
jmp
mov
in
jl
dec
push
mov
test
push
repnz
jbe
or
aas
push
mov
aad
stos
aad
or
dec
into
xchg
movsb
fnstcw
xor
pop
cmpsb
or
outsb
inc
shrl
sub
fisttps
jmp
ss
test
xor
ja
push
inc
cld
stos
rcrb
sub
mov
in
xchg
adc
pop
xor
mov
in
cld
xor
fcmovnb
xchg
mov
mov
jbe
hlt
cmc
call
cwtl
sbb
stc
jne
xchg
xor
sub
dec
jne
aam
push
fst
aam
icebp
mov
stc
int
outsb
xor
add
cmp
ljmp
xor
sub
ljmp
xchg
fcmovne
adc
test
out
push
insl
cli
add
ljmp
fwait
dec
fdivs
jno
mov
push
das
mov
shrl
mov
flds
aas
mov
sub
int3
test
mov
sub
pop
popa
rcr
cmp
shr
ds
xchg
shl
or
dec
test
sub
push
cmpsl
cld
loopne
push
addr16
idivl
fistps
cwtl
mov
inc
andb
and
cmp
inc
jmp
push
pop
xlat
in
stos
lods
test
cmp
sbb
mov
test
sarb
mov
pop
sub
scas
loopne
pop
dec
in
or
or
mov
loopne
js
xchg
pop
js
mov
lods
cmp
ret
xor
jns
mov
or
cmp
cmp
addl
inc
pushf
dec
lea
mov
jmp
adc
jle
jae
add
loope
enter
pop
rol
mov
popa
add
rorb
lods
xchg
xchg
and
sbb
or
lret
int3
outsl
rcrl
jno
jae
mov
test
inc
std
or
mov
mov
mov
sbb
or
int3
mov
notb
jmp
out
loop
data16
int
cmovnp
pop
add
pop
lahf
jb
mov
lods
test
sti
sbb
rolb
pushf
stos
decl
jae
out
scas
out
mov
fldenv
cmc
cld
aad
jp
pop
pop
out
mov
cmp
daa
popa
cmp
xorb
sub
add
mov
movsb
xchg
adc
pushf
mov
daa
mov
mov
imul
loope
dec
fidivrl
dec
loope
cmp
enter
xchg
push
xchg
ret
in
pop
or
aad
in
mov
and
ret
mov
call
pop
push
call
inc
xor
and
imul
lods
out
pop
in
adc
pop
mov
mov
call
nop
jo
sub
or
aaa
mov
aaa
add
inc
sbb
sub
push
mov
push
xchg
out
fcoml
cltd
xchg
lds
inc
stc
dec
je
idivl
mov
inc
add
and
adc
pop
sti
leave
pop
vcmpss
xchg
mov
mov
xchg
jl
decb
sbb
adc
cmp
pop
sti
inc
push
mov
bound
inc
lods
inc
shll
pusha
mov
fdiv
test
out
dec
xchg
std
imul
fcompl
and
push
xchg
cwtl
fsubrl
mov
ficomps
ljmp
cmp
inc
fstps
ljmp
inc
addr16
inc
aaa
rorl
inc
stc
jnp
enter
lock
out
xor
push
lea
test
sub
in
dec
or
jo
and
mov
les
cs
dec
call
dec
loopne
cmpsb
cmpsb
jecxz
pop
jp
pop
xchg
jns
loopne
inc
lods
jnp
pop
add
out
cli
sub
sbb
inc
xchg
sub
pop
ss
sbb
mulb
out
fwait
data16
mov
movsl
hlt
pop
ss
cli
jecxz
aas
cmp
repnz
cmp
push
dec
dec
push
repz
mov
das
repnz
insl
mov
and
mov
in
cmpsb
dec
mov
aaa
lahf
pop
mov
xchg
enter
push
shrl
stos
stos
cmp
les
ret
mov
lret
cmp
xor
in
mov
mov
popl
gs
mov
add
outsb
dec
cmc
int3
fstl
jmp
pop
ret
pop
out
xchg
fsubrl
pop
sbb
pop
adc
mov
hlt
dec
dec
sub
or
test
mov
sbb
pusha
pop
add
push
scas
movhps
negl
rorb
loope
std
loope
lret
test
test
repz
xchg
mov
pushf
mov
push
subl
leave
ss
cmp
sbb
jg
mov
jae
sbb
movq
loope
in
fildll
fcomps
mov
outsl
xchg
mov
arpl
in
outsl
enter
cmp
push
pop
mov
scas
je
cmpsb
jo
negb
push
icebp
mov
pop
push
mov
jg
xchg
mov
hlt
dec
mov
push
jmpw
jmp
push
decb
repnz
lock
mov
mov
sub
dec
cmc
enter
jmp
push
movsb
aad
nop
mov
sbb
jmp
aam
repnz
xor
xchg
add
mov
cmp
and
inc
std
pop
scas
and
sub
lods
clc
outsb
jmp
aam
test
ljmp
xor
mov
jl
sarl
pop
fdivrp
and
jecxz
nop
jnp
dec
dec
pop
xchg
rorb
mov
out
dec
icebp
mov
je
xor
das
outsl
mov
sub
mov
or
fbstp
xchg
jecxz
shll
push
inc
popf
mov
pop
push
adc
lret
dec
jmp
inc
stos
ljmp
cmp
stos
or
js
push
popa
test
mov
dec
ret
or
push
dec
add
cmpsb
mov
repz
jl
mov
in
mov
enter
pop
into
mov
add
je
push
sub
int3
icebp
arpl
data16
outsb
add
int3
in
sub
dec
jge
sub
push
aam
lahf
inc
cmpsl
ljmp
dec
repz
movsb
mov
in
xor
clc
jmp
lahf
shr
xchg
push
adc
dec
negb
pop
jp
or
dec
add
arpl
mov
sub
imul
movsb
lahf
shrb
cltd
push
aas
test
fs
std
test
adc
add
stos
data16
add
sbb
scas
test
out
std
sbb
fs
xchg
mov
adc
jb
mov
push
adcb
insl
loop
lods
addb
popl
sbb
aaa
push
lods
outsb
clc
mov
pushf
dec
jmp
shrl
jae
adc
cmp
mov
push
andb
loopne
jmp
xor
inc
push
lods
mov
imul
pop
out
call
ret
xchg
cmp
ret
and
xor
addr16
arpl
jle
aas
lock
sbb
xchg
add
sbb
popf
mov
xor
push
dec
mov
jp
in
xchg
jns
roll
cmpsl
pop
jecxz
cmp
arpl
jecxz
outsl
inc
outsb
inc
leave
sbb
insb
xor
test
clc
daa
in
gs
jmp
pusha
sub
jge
inc
clc
popf
push
dec
add
xchg
cmp
dec
sub
mov
inc
orl
push
jbe
movsb
pop
and
push
and
iret
adc
popf
or
mov
std
std
mov
push
call
aam
cmc
lea
movsl
push
dec
dec
fistps
cwtl
mov
add
stc
add
mull
repnz
inc
xlat
mov
hlt
adc
pop
je
adc
lea
rcr
mov
inc
mov
xchg
aam
pop
das
pop
int
out
bound
inc
jl
cmp
sbb
and
cmp
lcall
add
and
mov
stc
sarl
add
mov
daa
jecxz
mov
sti
enter
xor
nop
in
inc
dec
push
fwait
mov
sbb
adc
dec
dec
movb
arpl
lods
jnp
pop
add
movsb
lods
js
xchg
int
js
cmpsb
pop
repz
sbb
push
mull
push
inc
sysenter
les
sub
cltd
sub
movsl
ljmp
lcall
mov
jns
test
jecxz
push
xor
xor
fcoml
pop
out
or
fdivs
shlb
jl
sahf
pusha
xchg
or
es
and
or
sub
mov
add
and
dec
pop
shl
adc
loopne
test
push
arpl
in
inc
jae
popa
mov
dec
fucomp
sbb
icebp
dec
inc
jge
loop
jo
sub
popf
adcl
jns
jnp
aam
icebp
xchg
shrl
addr16
sbb
clc
lahf
and
fmuls
loop
ljmp
outsb
arpl
sbb
mov
loopne
adc
pop
xor
int
and
fs
mov
loope
loopne
mov
sub
stos
popa
addr16
mov
mov
dec
mov
jmp
scas
jecxz
mov
inc
push
rcll
mov
cli
xor
jl
lods
add
mov
and
xchg
mov
stos
mov
aas
les
out
dec
add
adc
js
mov
loope
outsb
rcll
push
pop
mov
andl
ret
inc
sahf
mov
xor
ss
addr16
shlb
xchg
out
bound
push
in
mov
scas
xor
jns
out
mov
mov
stc
add
out
mov
paddusb
loopne
sub
push
mov
jg
jge
jbe
sbb
loope
cli
rcrb
lret
jl
dec
cwtl
cmp
adc
pop
rclb
xchg
xor
shll
mov
ret
or
ror
ljmp
mov
notb
movsb
movsl
imul
jp
push
lret
inc
sub
test
add
xchg
shlb
stos
repz
nop
mov
popl
sbb
sub
incb
mov
adcb
xchg
xor
scas
dec
jle
or
js
jp
jl
mov
pop
or
xor
cmp
cmp
push
gs
lock
jbe
push
add
lods
cmpsb
outsb
mov
mov
xor
ret
sub
sbb
mov
mov
xor
es
sub
pop
mov
fstpl
add
cmpsb
cmpl
push
jge
mov
fadd
dec
cmp
inc
inc
cmp
cmp
es
cmpsl
pop
sub
xchg
pop
xchg
insb
lds
adc
pand
shlb
sub
mov
out
cmpsb
xchg
stos
jecxz,pn
adc
iret
sub
movsl
movsb
pop
stos
sub
cld
pop
cmp
jb
out
or
out
jae
mov
cmp
jbe
repz
and
dec
fs
and
movsb
jno
fldenv
sbb
inc
cmpsb
mov
lods
stos
loopne
xchg
mov
jge
cmp
sahf
sbb
adc
jae
in
movsb
mov
aad
lret
das
lds
cmp
xchg
bound
scas
or
lahf
loopne
add
insl
jnp
inc
xchg
jb
das
clc
call
hlt
aad
xorl
je
insb
jmp
mov
inc
cmp
pop
jb
dec
push
push
sbb
add
pop
test
fwait
gs
sbb
nop
mov
pop
arpl
mov
shlb
pop
gs
mov
jge
and
mov
pop
mov
adcb
xor
in
xor
inc
and
lahf
sub
dec
dec
add
push
lret
or
pop
sbb
inc
fnstcw
cli
inc
add
lcall
jecxz
xor
popf
inc
pushfw
add
xchg
lods
lcall
xabort
and
loopne
mov
xlat
test
movsl
sti
int3
pop
cld
sbb
test
mov
adc
mov
ja
out
pop
incb
aas
dec
cmpsl
repz
js
pop
cmp
inc
fwait
outsb
data16
sti
mov
lret
xchg
lods
xor
mov
xchg
cmp
leave
arpl
cld
adc
das
ret
nop
xchg
mov
in
jecxz
imul
pushf
test
je
scas
push
popf
push
cli
loopne
dec
inc
into
xor
mov
pusha
xchg
sbb
inc
sub
sub
ja
rolb
or
aam
in
fucomi
and
push
jl
add
outsl
and
xchg
and
icebp
xchg
adc
into
mov
rcll
pop
aad
scas
in
movsl
sbb
pop
loopne
es
xor
cld
push
xcrypt-ofb
cmpsl
lods
cwtl
push
cmp
jae
insl
aam
push
cwtl
cli
shll
xor
jnp
sbb
cmp
push
xchg
imul
out
inc
arpl
dec
addr16
dec
cltd
out
jbe
mov
scas
mov
push
xor
sbb
xor
push
sub
push
inc
cmpsl
fbstp
and
sub
aaa
outsl
sub
push
sbb
cli
jge
int3
cli
out
imul
clc
cs
nop
mov
mov
jmp
dec
push
mov
icebp
push
filds
inc
or
outsl
cmp
imul
sarl
push
and
lds
lods
sbb
adc
fildll
repz
call
addr16
mov
or
mov
loopne
pop
jecxz
pusha
xor
jo
and
lods
push
mov
fwait
jmp
pop
mov
cmp
push
xchg
sbbl
or
js
push
xor
pusha
mov
add
sahf
cs
lds
dec
stc
pushw
cli
shlb
inc
out
sarl
mov
and
xor
dec
cmc
hlt
jbe
test
adc
add
lahf
notb
xor
mov
dec
pop
lds
addb
fidivrl
inc
jl
dec
jp
divb
pop
js
ffreep
lods
sbb
ds
fs
xchg
xor
dec
addr16
pusha
mov
push
negl
sbb
insb
sbb
inc
scas
lret
fsts
or
scas
add
or
adcb
jo
icebp
mov
sti
inc
fistps
sbb
out
push
push
and
inc
adc
lcall
cmpsl
lcall
mov
xorb
sbb
mov
and
cli
or
arpl
aaa
mov
cmpb
sbb
into
jbe
adc
add
outsb
nop
jae
fbstp
test
test
mov
adc
cmp
cld
push
push
push
insb
xchg
sbb
jecxz
fisubs
es
xchg
fldenv
push
fwait
movsb
cmp
sub
push
fmul
adc
sti
cmp
or
jg
inc
test
mov
loope
pop
xchg
out
ffreep
jmp
pop
cmp
lret
inc
push
std
in
xlat
add
xchg
in
sahf
inc
pop
push
push
pcmpeqw
shl
mov
in
inc
inc
arpl
loopne
aas
mov
test
sahf
scas
icebp
mov
xor
mov
jecxz
mov
repz
mov
mov
cmp
inc
jb
cmpsb
and
adc
hlt
or
ficomps
and
shr
inc
out
fildll
pop
xlat
pusha
inc
inc
inc
mov
sbb
xor
loopne
add
or
or
push
popf
dec
aas
add
push
or
ret
in
rcl
fisubrl
and
lret
movb
mov
cltd
int
and
fcoml
adc
rsm
iret
cmp
les
pop
in
push
add
test
sbb
stos
out
loopne
xchg
and
sub
arpl
in
adc
fsubs
cmp
or
cmp
mov
insb
adc
cs
inc
punpckhdq
sub
sub
jmp
mov
mov
cli
mov
pop
imull
cs
incl
mov
sbb
imull
mov
cmpsl
loope
pop
lock
or
aas
add
xor
jp
decb
lcall
scas
mov
cmp
imul
mov
xchg
mov
mov
xchg
pop
adc
outsb
push
loope
adc
lods
push
inc
xor
sub
pop
dec
lret
xlat
clc
inc
mov
inc
imul
lcall
cmp
mov
jns
and
push
sahf
xchg
dec
jne
mov
and
dec
test
mov
push
imul
in
movsb
jne
popf
xor
shl
cmp
pop
lcall
pop
sbb
cld
or
jbe
aaa
int
xor
rcl
fistpl
fnstsw
enter
add
fimuls
movl
or
jbe
in
jecxz
inc
adc
jp
sarl
in
sbb
sbbb
dec
stos
dec
xor
mov
lret
outsb
ds
sar
xor
mov
shl
fdivrl
xchg
push
addr16
and
push
mov
cmp
mov
ja
rcrb
pop
insl
dec
mov
and
ds
jl
xchg
les
jmp
adc
lret
js
sbb
pop
cmp
inc
lahf
and
or
sub
out
shll
sbb
subb
ss
loop
inc
jmp
xchg
js
pop
mov
aas
lret
insb
or
push
xchg
es
pop
dec
jbe
lds
inc
in
mov
pop
cmp
rcr
inc
jecxz
cmp
mov
xchg
loope
sub
movsl
inc
xchg
push
push
pop
loop
xchg
cmpsl
pusha
jp
ss
mov
mov
jmp
sbb
mov
cmp
jno
ret
sarl
nop
je
jb
or
inc
sub
stc
jmp
pop
push
jle
xor
dec
pop
addl
divb
enter
mov
add
xor
sahf
dec
cmp
lea
stos
push
inc
neg
mov
test
jb
inc
outsb
lret
sbb
ja
jmp
add
idivl
xchg
clc
mov
cld
adc
fwait
jl
pop
outsl
fwait
cmp
xlat
mov
jmp
cmc
stc
add
jmp
mov
or
hlt
and
cld
and
cld
xor
mov
scas
xor
movsb
inc
dec
fdivs
popa
jecxz
mov
cmp
gs
test
mov
mov
outsl
sti
pop
ljmp
stos
adc
addr16
jnp
outsl
and
cli
hlt
dec
inc
xor
fwait
pop
xor
cmpsl
decl
xchg
xlat
push
jne
fwait
lcall
push
xor
push
insb
sahf
test
mov
les
xchg
ljmp
call
mov
mov
cmpsl
fildll
xor
jns
fdivrs
hlt
ja
data16
xor
or
pop
inc
pop
mov
repnz
xor
adc
jns
push
roll
adcl
stc
xor
push
xor
and
cwtl
shlb
and
push
mov
inc
add
sub
adc
and
pop
push
cwtl
cmp
mov
add
xchg
mov
mov
push
dec
rep
cmp
ss
cmpsl
test
andb
decb
cwtl
add
mov
fimull
aas
pop
pop
and
or
jno
sub
and
xchg
je
lods
inc
leave
mov
popa
je
fcomi
test
pusha
out
ljmp
pop
pop
loop
jns
jmp
lret
cld
lret
movsb
xchg
push
xor
repz
pop
stos
add
dec
leave
and
push
enter
and
popf
jg
iret
mov
inc
mov
jo
dec
lcall
or
fidivs
sbb
mov
pop
stos
or
popa
fistpl
and
sub
push
and
in
iret
mov
lea
sub
dec
mov
mov
inc
pop
rcll
and
outsb
dec
mov
xchg
mov
cmp
pop
jp
loope
int
mov
xchg
out
divl
adc
out
lahf
loop
out
icebp
push
ljmp
ja
push
in
fs
mov
cld
cmp
cld
js
movsl
mov
es
dec
out
test
es
mov
out
dec
pop
xor
push
pop
jecxz
or
xor
incb
in
fwait
dec
push
popa
sbb
jno
sti
mov
imul
pop
pop
iret
push
rcll
icebp
mov
mov
out
jo
outsl
aad
popf
mov
stc
sub
mov
bnd
and
adc
or
sbb
je
pop
enter
push
aaa
dec
outsb
xorl
pusha
jecxz
int3
insl
inc
dec
mov
lods
clc
movsl
sti
shrl
fcomps
nop
js
xor
ret
roll
rcrb
mov
stc
shrb
pop
cmpsb
in
js
mov
imul
cmpsl
insb
in
bound
mov
dec
mov
or
pop
gs
loope
xchg
aad
fs
mov
pop
repnz
in
enter
mov
das
mov
repz
mov
fdivrs
xchg
aad
aas
push
imul
mov
loop
pop
mov
pusha
movsb
dec
pop
and
cltd
aas
imul
cmpb
data16
mov
scas
loop
insl
inc
test
cltd
xchg
ret
mov
push
cmp
test
push
push
mov
jbe
jno
xlat
cmc
inc
loope
push
cmc
insl
push
inc
test
inc
push
push
cld
stos
fstl
ret
jne
outsb
lock
pop
push
int3
rcrl
mov
repz
jge
jg
bound
inc
out
outsl
in
imul
jge
cmpsl
repnz
mov
jl
cli
mov
or
sub
lea
into
movsb
test
mov
xlat
push
rorb
rol
xor
mov
jmp
mov
xchg
std
and
mov
jle
popf
jp
mov
mov
stc
or
arpl
push
icebp
xchg
xchg
stc
inc
mov
fldcw
or
movsl
sar
and
in
int3
dec
sahf
mov
call
mov
mov
dec
das
xchg
sbb
cltd
jne
jnp
dec
pop
insb
inc
or
mov
add
pop
cmp
in
push
push
das
addr16
gs
mov
mov
xchg
and
sub
cmp
rcr
lds
clc
and
clc
and
stos
mov
jle
sub
das
push
incb
in
push
call
call
push
mov
imull
or
int3
sub
fwait
inc
mov
insb
mov
xor
mov
inc
lret
pusha
add
sbb
add
mov
xchg
dec
sbb
mov
repnz
cmpsb
mov
sahf
and
cli
mov
mov
or
insl
mov
xor
addr16
pop
aas
xchg
je
andl
pop
push
push
mov
pop
push
push
fcompl
push
mov
fbld
std
jmp
in
adc
mov
adc
mov
dec
cmp
scas
pop
jle
aas
dec
jmp
test
pop
fistps
inc
mov
xor
outsb
sub
in
sub
rcrb
sbb
pop
sbb
cwtl
jmp
push
push
int
mov
add
push
jns
mov
cmp
addb
aad
lods
mov
movsl
insl
pop
mov
or
mov
xchg
imul
jnp
mov
iret
xor
out
push
out
insl
pop
insl
test
add
inc
sub
mov
push
test
jmp
std
dec
jp
out
scas
jae
xlat
jge
pop
xlat
cmp
jae
hlt
insb
pop
in
cmp
cli
lea
mov
or
cltd
xchg
fildl
repnz
out
xchg
stc
sub
or
fwait
mov
dec
dec
push
in
dec
push
jbe
in
repz
imul
cli
or
popf
push
adc
enter
xor
jne
pushf
sbb
sbb
scas
fiadds
std
inc
add
ja
mov
and
pop
cmpl
dec
dec
sbb
rorl
iret
cs
mov
shlb
mov
mov
lods
imul
xchg
push
or
test
or
jae
jb
sahf
mov
out
dec
cwtl
xchg
movsl
repnz
addr16
stos
mov
push
jge
fcomps
pop
sbb
adc
test
lret
test
inc
add
mov
mov
sub
jbe
mov
jge
adc
lods
sub
data16
repnz
pusha
fwait
mov
mov
inc
push
fsubl
add
xor
out
iret
roll
pop
cmpsb
repnz
addl
repnz
sub
into
jo
and
jl
push
iret
inc
repz
sbb
pop
lock
js
xchg
sahf
lea
jo
inc
mov
sbb
and
push
dec
jno
into
les
je
iret
mov
test
scas
xor
stc
sbb
and
mov
nop
sub
jp
test
lock
jp
repz
pusha
and
icebp
mov
aad
cmp
pusha
sub
data16
ss
das
test
rcr
shrl
inc
sub
push
divb
mov
sbb
fwait
pop
cld
jae
push
rorb
adc
js
into
pop
jecxz
bound
ljmp
stos
and
sbb
cmpsl
add
and
push
scas
pushf
xchg
or
pushf
cmc
adc
fistpl
sahf
inc
loope
jge
mov
sub
loop
ss
pop
cmc
cmpsl
decb
jo
add
stos
daa
leavew
arpl
outsb
jne
push
xor
push
xchg
mov
jl
mov
enter
lahf
inc
mov
sahf
and
jbe
mov
mov
or
mov
push
and
dec
mov
imul
cmp
cwtl
int3
pop
lock
add
es
push
mov
push
mov
ret
push
mov
aad
xchg
adc
jmp
imulb
xchg
sarb
jae
jbe
inc
xchg
mov
or
incb
fwait
lea
push
aam
adc
push
outsb
cld
cli
jb
loopne
mov
popf
jns
cmpsl
sub
jno
xchg
loop
mov
int3
pop
aam
inc
les
js
xchg
dec
dec
adc
cmp
mov
mov
lcall
ret
and
adc
pop
add
rcll
xor
pop
pop
mov
and
jmp
movsb
sub
rorb
lock
pushl
sbb
out
std
and
pop
lahf
mov
inc
sti
inc
jno
lea
repnz
jp
mov
mov
inc
lea
test
out
or
arpl
mov
mov
notl
push
xchg
arpl
ja
call
push
push
xchg
andb
xor
mov
in
ret
sub
jbe
xchg
fsts
pop
jbe
push
xrelease
cs
push
out
inc
int
not
ljmp
fnstenv
push
jle
lea
imul
sbb
jo
xchg
insl
jle
and
adc
push
popa
pand
inc
div
mov
into
lcall
aas
push
xlat
fs
sbb
inc
fisubrs
mov
cmp
mov
js
flds
mov
es
dec
push
rorb
in
lods
inc
dec
jae
cld
xchg
push
mov
jo
test
xlat
sbb
dec
mov
pushl
xchg
lea
insb
sub
xor
push
les
jns
call
iret
adc
adc
icebp
or
cmp
xorb
xchg
inc
jp
mov
xchg
std
jecxz
xor
mov
push
and
and
mov
dec
outsl
rcl
xchg
js
cmp
xchg
ss
inc
xchg
push
insb
out
mull
fadds
pop
cmp
pushf
nop
sbb
sub
adcb
scas
ret
mov
push
jge
xor
push
out
arpl
jecxz
adc
aaa
cmp
shlb
cs
push
loopne
nop
dec
sub
pop
pop
pop
scas
int3
mov
movsl
mov
aas
add
fisttpl
fdivp
mov
adc
add
jl
in
aas
dec
inc
xchg
pop
cmp
add
or
jge
hlt
bound
dec
push
adc
cwtl
sub
mov
cmp
xor
jns
jne
sub
push
xor
sub
mov
movb
sahf
ret
scas
jno
fdivr
mov
mov
mov
int3
leave
outsb
arpl
add
xchg
mov
add
nop
aaa
pop
mov
cmc
or
insl
cmp
call
mov
ja
dec
jge
pusha
xor
movsl
push
xchg
xchg
xchg
push
loopne
jae
xchg
mov
in
mov
or
push
aas
int3
mov
out
sbb
insl
jns
and
in
flds
repnz
in
xchg
mov
jmp
fwait
lcall
push
xchg
or
mov
jno
dec
je
psrlq
and
xor
les
fs
dec
out
jnp
adc
jns
popf
shll
dec
ret
add
repz
cld
and
movsl
lock
cs
dec
out
or
pop
cmpsb
mov
and
inc
test
dec
add
mov
in
mov
out
mov
jge
shl
cmp
pusha
loopne
jp
jle
mov
or
mov
sbb
inc
adc
das
das
and
lcall
mov
sub
test
mov
jp
mov
jne
xor
je
sbb
lcall
sbb
divb
out
aas
mov
adc
mov
arpl
sub
jl
xchg
cs
mov
inc
mov
or
jno
cmp
inc
shll
push
out
push
xchg
andl
jae
insb
outsl
in
xchg
jae
adc
jb
cwtl
arpl
int
jae
shl
jmp
or
ss
xchg
cmp
movsl
int
xchg
jl
jecxz
and
pop
adc
loop
inc
mov
mov
or
lods
or
or
pop
cmpsb
rcr
pop
add
mov
and
movsb
aas
lret
push
fs
cmp
js
mov
dec
jnp
lret
push
out
shll
or
loop
inc
js
scas
push
sar
cmpsb
cld
cmp
add
and
add
clc
shr
and
xlat
push
jp
test
divb
adc
sbb
jbe
cwtl
sahf
rcll
mov
mov
adc
xchg
leave
sub
and
mov
push
push
and
sahf
cmpsl
inc
sub
ljmp
cmp
xor
or
ret
and
adc
push
mov
sub
lahf
inc
filds
rcl
daa
push
cmpl
inc
xchg
iret
push
lret
icebp
test
cmp
add
inc
jecxz
ficoml
outsb
push
rorl
dec
sbb
cmc
sbb
xchg
dec
lcall
je
adc
jnp
das
sbb
dec
in
inc
jne
lea
push
mov
push
lret
pop
dec
sub
push
aad
cld
shlb
cli
pop
mov
test
sbb
sahf
je
mov
cmp
pop
jbe
lret
inc
lea
aaa
sub
out
pushl
imul
jp
push
push
xchg
mov
xor
xchg
jae
nop
loop
loope
cli
and
outsl
push
test
lcall
out
mov
xor
push
fistpl
shlb
mov
xchg
fidivl
and
cmc
sub
or
mov
imul
js
push
mov
xchg
outsb
mov
arpl
outsl
js
mov
jmp
addr16
mov
scas
mov
mov
mov
icebp
inc
cltd
sarl
pop
ficomps
lods
sbb
cmp
mov
pop
mov
clc
test
dec
pop
int
jl
daa
stos
fsub
in
sbb
cmp
pusha
jbe
mov
and
cmp
fiaddl
push
gs
mov
add
ss
jne
dec
mov
and
ret
cmp
ds
aas
pop
jns
aad
xchg
loop
in
add
pop
sub
mov
loope
jnp
sbb
mov
sub
aas
dec
pop
mov
sarl
sub
les
nop
or
jl
stos
or
mov
mov
inc
jnp
gs
pop
inc
loop
mov
push
cmp
pop
movsb
cwtl
xchg
and
sbb
hlt
sbb
in
sbb
testl
call
insb
dec
cmp
idiv
clc
loope
ds
das
dec
cmpsl
xlat
cmpb
dec
cmp
repz
imul
and
lods
jecxz
stos
pop
add
in
push
push
addl
push
out
sbb
inc
sbb
jae,pt
sbb
dec
push
loope
pop
mov
imul
aas
mov
in
lcall
icebp
xor
fcmovnb
xchg
jmp
and
sub
mov
pushf
or
out
push
lods
filds
sahf
stos
cmp
pause
xchg
mov
inc
dec
mov
lahf
in
inc
test
ss
icebp
or
mov
pop
leave
cmc
outsl
movsb
adc
push
mul
cs
ja
sbb
mov
mov
mov
add
jmp
inc
mov
repnz
lret
inc
data16
iret
mov
dec
push
push
out
mov
jp
sti
xchg
push
mov
mov
inc
pop
or
insl
int
push
pop
push
int3
jne
fadds
xchg
xor
sbb
mov
jmp
mov
pop
fisubl
mov
jb
push
dec
sub
mov
int3
adc
mov
cmp
push
int3
xchg
push
pop
icebp
sbb
cmp
aad
sub
xchg
lahf
jne
dec
iret
test
lds
clc
add
jnp
dec
sbb
movsl
mov
mov
out
daa
repz
fcomi
mov
push
push
sahf
and
jns
mov
test
mov
into
enter
push
dec
lret
jns
push
xchg
cmp
fmuls
jle
xorb
lahf
lods
mov
repnz
inc
and
dec
fdivs
xchg
cmp
sub
mov
jns
pop
ja
arpl
dec
js
add
push
pop
rolb
mov
sub
cmp
mov
loopne
cmpl
fldcw
pop
mov
lock
xor
or
xor
test
je
ret
in
mov
fsubrs
xchg
mov
rorl
movsb
nop
divb
add
dec
inc
shrl
xor
mov
adc
pop
int
inc
jg
pop
xchg
sti
push
mov
shll
jmp
pop
stc
cltd
jmp
jns
mov
lcall
xlat
dec
shlb
scas
filds
sbb
mov
iret
test
cmp
adc
mov
inc
das
mov
gs
mull
and
or
adcl
push
fwait
sub
inc
mov
fs
jns
mov
xchg
js
sub
decl
scas
jo
out
je
cmp
loopne
mov
jae
push
sbb
push
inc
push
jl
mov
aad
dec
xor
lods
inc
das
out
xchg
xlat
imul
movsl
test
outsl
sub
dec
lea
ret
push
xchg
xor
jecxz
and
sbb
mov
jb
jno
mov
dec
mov
or
cltd
lcall
push
and
mov
cmp
sarb
and
sub
jle
notl
fildl
push
mov
cmp
fistps
lahf
cli
push
ss
clc
enter
movsl
sbb
inc
popf
sub
ja
pop
mov
clc
lret
dec
ret
push
cmpsl
push
movntps
ds
dec
jns
movsl
faddl
shll
xchg
imul
aad
adc
cmp
add
mov
jmp
call
jle
js
sbb
cs
lods
cmp
stos
mov
pop
aas
mov
test
sub
fisubl
inc
jle
lea
xor
arpl
out
test
or
cmp
jnp
jne
lock
fidivs
inc
mov
jne
lea
lcall
std
pop
xchg
pop
in
pop
pushf
test
mov
and
testb
ja
pop
inc
inc
aaa
repz
stos
inc
arpl
lods
aad
jnp
notl
inc
lea
dec
xor
call
xchg
xlat
add
push
scas
cs
xor
loope
or
psrad
bound
cwtl
xchg
pop
mov
mov
in
sub
pusha
pop
roll
mov
je
sub
aam
out
das
stos
into
mov
xor
insb
cmpsb
xchg
test
aad
aaa
jo
pop
je
xchg
or
push
das
fdiv
sub
add
push
xchg
sbb
aad
lods
into
iret
xor
int
jle
dec
imul
cmp
mov
stc
movsl
cli
push
jb
mov
or
jae
gs
push
and
mov
addl
rorb
add
add
sahf
mov
and
lods
stc
cltd
jae
repnz
xchg
cltd
or
jmp
inc
insb
sbb
jecxz
push
sub
sub
jnp
hlt
or
stos
cmc
dec
data16
sahf
inc
movsl
fisubl
in
ljmp
or
push
ret
add
test
nop
push
adc
sbb
scas
fidivrl
mov
push
sub
inc
mov
sbb
push
jnp
or
jge
sbb
push
popf
push
lods
cs
int
sbb
loope
mov
and
pop
dec
hlt
mov
jnp
dec
dec
xchg
sbbl
fbld
fst
cmpsb
and
mov
mov
aad
adc
cli
add
scas
js
sbb
cmp
xor
les
adc
lret
xor
scas
adc
add
mov
xor
mov
push
mov
and
sub
ffreep
push
inc
scas
lock
cmp
shlb
adc
fdivp
adc
mov
inc
js
ret
imul
shll
rcrb
xor
push
cli
add
sti
sbb
pushf
adc
or
stc
xchg
lret
sub
inc
scas
sahf
or
push
and
sub
icebp
stos
mov
or
mov
push
xchg
xor
stos
mov
xchg
pop
outsl
pop
fsts
test
cmp
push
inc
repz
pushf
iret
lahf
fsub
imul
xor
xor
mov
add
pop
repnz
std
pop
cmp
loop
lret
inc
int3
cmp
fs
dec
leave
sahf
rcl
push
xlat
addr16
aam
in
in
inc
mov
or
inc
out
popa
fdivr
mov
loopne
xor
stos
and
sub
nop
cld
mov
sbb
ja
in
clc
pop
pop
mov
mov
pop
fcomps
fldl
inc
inc
ljmp
jecxz
mov
mov
push
xorb
inc
dec
adc
push
mov
lcall
sti
movsl
fsubrl
xor
push
pop
jl
push
mov
push
push
ret
inc
fstpl
adc
stos
mov
nop
jnp
cli
mov
into
xchg
adc
cltd
gs
inc
sub
repnz
or
add
mov
mov
xor
jl
dec
pop
stos
outsl
scas
bound
mov
mov
mov
insl
in
sub
ret
dec
jne
decl
pop
jnp
cmp
inc
mov
mov
pop
mov
adc
pop
jl
and
pop
icebp
pop
test
xor
stos
push
sti
gs
and
inc
lret
or
shlb
bound
cmpsb
mov
movsl
or
xchg
sbb
lret
xchg
cld
insl
xchg
mov
dec
icebp
pop
inc
out
lods
in
imul
fnstenv
mov
lea
pop
shrb
mov
mov
icebp
out
enter
iret
add
cs
dec
lret
mov
pop
and
mov
xchg
mov
jge
sub
adc
out
inc
cmpsb
iret
ss
adc
stc
lods
cmc
sahf
sub
mov
ljmp
rcrb
or
lds
push
sub
jns
into
loopw
mov
pop
out
xor
sbb
push
in
rolb
fists
inc
push
jl
jno
mov
push
fmull
pop
test
out
sbb
xor
call
sbb
sbb
movb
xlat
imul
loopne
shll
add
xchg
rcll
movsb
in
fidivs
xchg
fisttps
aaa
shll
pop
jl
arpl
adc
add
arpl
mov
sbb
push
xchg
xor
cmp
int
aad
iret
push
inc
adc
push
xchg
repnz
dec
es
xor
mov
stos
adc
add
jns
sar
inc
adc
sub
sub
cli
adc
insb
cmpsl
loop
test
adc
mov
popf
fsubs
mov
xor
mov
jl
mov
insb
xchg
loop
sti
out
sub
pop
pop
das
push
mov
lock
std
pop
les
mov
mov
pop
test
and
inc
idiv
cs
arpl
mov
mov
in
std
js
inc
xchg
inc
adc
pop
les
fidivl
dec
mov
dec
cld
das
out
xchg
cmpsb
into
shll
mov
dec
leave
scas
mov
pushf
push
and
test
ja
imul
enter
aad
es
and
dec
cmpsl
push
test
outsl
lock
jnp
cmp
imul
test
fstpt
sub
dec
xchg
sbb
sbb
mov
jecxz
push
addr16
negb
and
mov
ficompl
push
jb
dec
dec
jp
dec
ds
enter
and
inc
movsl
int
xchg
leave
ljmp
repz
xor
mov
or
sub
mov
stos
int
lock
data16
dec
add
stos
cltd
popa
out
adc
out
fcoms
in
adc
sbb
gs
cmpsl
mov
in
inc
loopne
insl
jns
mov
aas
and
out
inc
aad
cli
fbstp
or
cmp
mov
push
cmp
xlat
in
jne
cmp
xlat
mov
popf
ret
xchg
adc
cli
lret
repz
pop
cmp
fucomi
daa
pop
fs
dec
mov
mov
pop
insl
or
rcl
push
pushl
ds
cmpsb
in
incl
sbb
push
data16
mov
bound
enter
out
lret
mov
in
xchg
cmpsb
jno
loop
push
push
outsl
cmp
mov
out
shl
pop
je
inc
sbb
pop
add
jle
scas
test
jnp
inc
and
cmc
pop
and
xor
testl
xor
xchg
mov
jae
pop
ret
fstl
test
inc
mov
in
test
xor
mov
push
adc
loop
adc
test
jno
inc
lahf
loopne
mov
dec
mov
fbld
ficoml
ret
cmp
inc
pop
cmp
fsubs
add
movsb
call
jmp
cltd
sub
pop
lods
dec
adc
jo
test
inc
das
jl
xchg
mov
push
pushf
sub
cmp
xor
sub
xlat
enter
leave
push
pop
ljmp
sbb
xlat
mov
mov
xor
mov
push
lods
aas
test
dec
sbb
sahf
test
subl
add
pop
insb
ret
inc
jo
sub
push
xlat
and
fstpt
push
fdivrl
jg
stc
cltd
jb
pop
xchg
gs
push
paddd
xor
int3
pusha
mov
mov
xchg
sub
cmp
lods
lahf
adc
mov
sahf
movsl
or
pmaddwd
mov
ljmp
xchg
inc
lods
rcrl
ss
sub
mov
scas
stc
scas
mov
and
fwait
push
push
xchg
add
xchg
mov
xor
and
xchg
or
mov
dec
nop
xor
movsb
jl
cmp
inc
xor
leave
sub
sub
fwait
int3
in
aas
mov
scas
mov
shr
stos
lret
push
jle
push
dec
out
mov
push
jnp
mov
insb
push
cltd
jl
shrb
push
mov
scas
adc
or
mov
insl
cmp
push
sub
cmp
inc
sub
lahf
in
cmp
lcall
xlat
iret
xchg
addr16
cwtl
push
add
sbb
dec
lahf
scas
into
movsb
pop
mul
divb
sub
pop
dec
testb
cmp
aam
or
lahf
scas
sti
mov
pop
push
nop
in
lahf
popa
adcb
xchg
popa
test
fisubl
in
pop
push
loope
sti
outsb
lods
sub
jecxz
imul
add
fadds
dec
inc
cmp
daa
cmp
cmp
daa
in
lcall
bound
daa
xchg
je
xor
fwait
inc
inc
push
lods
std
loope
movsb
cld
subl
pop
das
jns
mov
inc
mov
pop
cwtl
dec
hlt
push
inc
jae
adc
xchg
fadds
popa
stos
jne
add
sbb
push
cld
popf
lods
mov
xchg
cs
clc
pusha
inc
push
hlt
stos
mov
mov
testl
push
or
in
add
sahf
or
dec
out
add
cmpsb
inc
mov
or
pop
fs
aad
sub
imul
ficoml
test
insb
sub
mov
and
mov
sbb
gs
push
xor
jnp
push
mov
popf
out
cwtl
adc
and
aas
enter
sbb
enter
shrl
push
movb
add
je
call
out
push
sahf
aam
and
shlb
shl
pop
into
dec
sub
pop
mov
jns
sub
cmp
jecxz
inc
leave
lods
lock
adc
push
stc
pop
xchg
jmp
in
or
loop
dec
icebp
repz
js
push
push
ja
add
std
int
sub
icebp
mov
mov
dec
add
lcall
sbb
mov
push
jbe
cmp
rorb
stos
mov
lcall
sub
and
cmp
jnp
clc
fildl
mov
imul
mov
fisubrl
test
xchg
lret
into
adc
mov
and
cmp
ds
js
out
movsl
or
mov
and
mov
fcmovnu
sbb
imul
or
push
and
push
loop
mov
xor
dec
hlt
mov
outsl
jecxz
push
sbb
repnz
ljmp
xchg
mov
stos
fwait
push
cmp
mov
popa
out
mov
mov
mov
jnp
jbe
jne
call
vmovdqa
push
push
dec
icebp
call
das
or
sbb
mov
add
add
jnp
jmp
lret
imul
jge
fidivl
loop
sub
movsl
mov
cmp
in
pop
ja
cmp
cmp
dec
fcmovnu
adc
mov
mov
sahf
xchg
pop
test
lahf
sub
pop
sub
out
pop
mov
out
xchg
jns
jecxz
mov
mov
icebp
cmp
insl
cmp
hlt
and
jge
popf
jmp
or
or
neg
pop
mov
gs
push
popf
push
mov
pop
out
outsb
mov
push
add
jp
scas
dec
scas
popf
aam
dec
mov
scas
xor
ss
pusha
xchg
sarb
ret
mov
or
lea
push
movd
mov
xchg
hlt
xlat
jnp
pop
das
mov
repnz
repz
arpl
sbb
cwtl
mov
dec
dec
fucomp
je
clc
or
push
jns
xlat
sub
pop
aas
aad
xchg
mov
lahf
add
aad
adc
fstpt
xchg
aam
dec
cmp
movsb
dec
sub
cmp
xchg
mov
ror
add
sbb
dec
stc
xor
cmp
xor
mov
ret
and
push
out
pop
xor
loope
dec
mov
jecxz
or
mov
clc
loope
mov
jmp
ret
and
xor
mov
mov
xor
cmp
data16
mov
lea
lock
jnp
and
lahf
inc
push
sbb
adc
sbb
ret
cmpsb
lcall
sub
mov
xor
movsb
dec
pop
das
jo
insb
jmp
cmp
xor
pushf
cli
mov
pop
into
inc
mov
jge
aaa
adc
testb
test
ficomps
add
or
mov
fcmovu
push
sub
xchg
dec
ret
cmc
xchg
jmp
fs
push
lret
lret
bound
push
out
pusha
rcll
and
cmp
jno
arpl
cwtl
dec
xor
jns
movsb
xchg
dec
dec
xor
pop
sub
or
xor
push
sbb
pop
or
xchg
jl
pop
sar
jbe
cmp
and
dec
jp
inc
sub
cwtl
sub
jno
cmpsl
test
aam
push
or
xchg
jecxz
inc
loopne
data16
adc
test
jecxz
into
movsb
into
mov
test
pop
mov
push
bound
push
ss
sub
sub
ret
xchg
mov
or
adc
mov
mov
in
inc
outsl
mov
sbb
lahf
sub
pop
loope
jb
mov
add
scas
inc
mov
add
mov
jbe
call
and
cmp
inc
lea
in
imul
pop
pop
out
xchg
mov
jb
mov
addr16
lds
mov
adc
sub
sbb
ret
hlt
in
push
inc
test
test
sub
jecxz
js
js
cs
inc
fsubrs
or
adc
adc
arpl
movsb
push
push
rolb
into
aad
and
pop
dec
out
mov
fimuls
mov
fcomps
ja
in
mov
mov
add
jb
loopne
test
jbe
adc
mov
int3
ret
pop
lds
movsl
sbb
jmp
repz
loopne
xchg
xchg
divb
jmp
sbb
stc
je
jnp
sbb
cltd
mov
mov
lods
inc
or
cmp
jle
in
push
scas
push
jl
push
pcmpeqw
xchg
adc
aad
push
stc
lea
mov
or
mov
loopne
cmpsl
sub
out
repz
xor
flds
lea
xchg
adc
adc
in
data16
ret
push
addr16
dec
jp
sub
loop
movsb
dec
jecxz
fldenv
cmp
mov
icebp
sub
jmp
fs
fildl
push
lods
xchg
sahf
add
mov
inc
jecxz
xchg
loop
add
inc
dec
in
mov
cmp
push
fs
mov
mov
enter
stos
push
and
lock
es
xchg
push
cmpsb
mov
add
push
adc
mov
out
xchg
data16
bound
aad
mov
add
add
loope
aad
mov
cmovbe
or
ror
call
pop
adc
sub
les
movsb
pop
loopne
push
cli
out
add
jge
add
add
fisttps
lods
cmc
test
mov
xlat
xchg
pop
das
jae
mov
push
mov
or
mov
xchg
xchg
jge
inc
insb
fisubrs
sahf
xchg
rolb
xchg
adc
cmp
or
clc
sti
faddl
add
adc
iret
add
cli
das
cpuid
mov
cli
xchg
mov
push
ret
pop
cmp
dec
sbb
adc
cli
aad
aaa
lods
xchg
out
jp
cmp
mov
psubsw
sub
mov
in
fnstcw
mov
test
popa
push
add
andb
inc
mov
inc
pop
icebp
add
test
and
sbb
fwait
fs
mov
sbb
xchg
pop
aaa
movsl
pop
sub
fdivrl
jp
mov
cmp
movsl
add
inc
popf
negl
jp
xchg
ret
jne
jne
test
cmp
dec
adc
push
aas
sub
lret
mov
clc
or
pop
xchg
cmp
inc
bound
ds
dec
into
pop
or
les
fmuls
test
daa
mov
insb
mov
mov
imul
lods
xchg
aad
inc
cld
mov
jbe
in
lds
jnp
xchg
and
jp
scas
xor
pushf
cltd
jo
jle
sub
out
pop
cld
dec
mov
sahf
ja
adc
dec
inc
std
mov
popf
in
scas
rolb
stos
loope
push
repnz
sbb
xchg
add
jae
or
dec
imul
fs
lods
inc
push
jmp
push
jl
sub
push
data16
sub
cmpsl
cmpsl
sub
pop
mov
popf
inc
lds
test
insb
push
or
sub
aad
out
mov
pop
gs
int3
scas
repz
add
stos
push
scas
jg
adc
int3
in
sub
cmp
mov
lock
add
cltd
lods
mov
das
ds
fidivrs
mov
jae
jns
les
dec
movsl
lahf
mul
jae
test
jmp
cltd
mov
inc
fisubrl
and
xor
dec
sub
sbb
sub
mov
pop
adc
mov
cmpsl
outsl
dec
mov
addl
xor
xlat
test
sub
icebp
cmp
insl
mov
xchg
jg
jecxz
mov
imul
cmp
scas
push
cmc
xor
faddp
sub
or
mov
jg
hlt
and
push
jno
dec
out
call
rol
gs
push
cmp
stos
nop
jecxz
dec
clc
add
popf
lea
add
push
xchg
pop
jae
addr16
jp
push
fsubrl
sub
ret
in
repz
push
or
xchg
pop
rorl
add
leave
movsb
adc
mov
xor
rcr
aas
push
fmull
loop
hlt
xor
add
inc
lahf
lods
push
sbb
pop
dec
sahf
movsl
rcrl
outsl
gs
test
mov
dec
aaa
cli
dec
and
push
test
in
cmp
jecxz
cmpsb
sbb
sub
sbb
push
fcmovnb
pop
nop
xchg
loop
iret
stos
inc
rorb
pop
add
and
adc
sbb
ficoms
dec
push
shrb
pop
repnz
add
sub
xchg
lret
pop
or
ljmp
xor
adc
scas
inc
mov
hlt
outsb
test
inc
fwait
ja
jnp
mov
mov
cmp
sbb
or
jle
push
pop
mov
push
movsl
imul
mov
lods
std
and
pavgw
test
lods
push
cltd
adc
pop
push
fwait
inc
push
ret
popf
test
test
faddl
mov
dec
ljmp
popf
lods
jmp
ret
sub
cli
adc
lock
rorb
fildl
mov
fstpl
pop
pop
or
xchg
lea
ret
addr16
mov
movsb
mov
mov
sahf
mov
or
or
lret
int
es
mov
or
dec
out
push
or
cwtl
clc
push
bound
or
data16
sub
inc
cltd
lret
mov
mov
push
xchg
jne
jmp
fidivs
repnz
das
lea
mov
xchg
or
push
fcmovbe
xor
jb
rcr
xchg
cwtl
pop
cmp
push
bound
or
mov
or
fcmovnb
jp
imul
and
int3
lea
shlb
pop
cli
es
popf
testl
iret
adc
adc
dec
shlb
or
sbb
pop
jmp
fsubrs
mov
mov
sub
out
mov
fbld
jle
adcl
ljmp
idivb
mov
cmp
mov
test
jp
jle
in
inc
movsb
insb
rol
mov
jbe
lock
mov
sub
adc
dec
in
mov
in
arpl
fnstcw
jns
je
sahf
inc
imul
lods
aam
mov
adc
inc
xor
mov
iret
push
mov
orb
sub
mov
sub
xor
fldcw
test
push
int3
js
cld
addl
jmp
sbb
mov
and
sbb
lods
adc
cli
mov
or
jne
cmp
add
notb
scas
cmc
add
leave
pop
mov
jbe
icebp
mov
call
pop
ss
pop
lds
adc
pop
frstor
stos
inc
add
js
push
or
lods
cmp
fbstp
mov
lods
cs
repz
mov
mov
push
out
pushf
and
sub
xchg
sbb
fidivl
int3
mov
pop
mov
int
arpl
in
aam
and
pop
cmpsb
push
aam
inc
pop
inc
add
pop
xchg
int
add
pop
mov
cmp
cltd
push
sub
aam
gs
pop
sti
sub
cmpsl
lret
add
jge
adc
xchg
push
push
dec
leave
jl
or
pop
sbb
push
mov
push
mov
lahf
arpl
adc
inc
aam
lcall
push
jb
dec
mov
push
popa
push
mov
sbb
js
aad
fildll
adc
mov
jbe
aas
adc
jecxz
aas
add
jae
xlat
inc
ljmp
mulb
jne
ret
xor
jnp
aas
sarl
mov
stos
scas
shrl
add
aaa
testl
jle
or
mov
mov
inc
push
dec
daa
inc
ss
xor
mov
test
pop
cmp
and
sbb
ret
pop
mov
aaa
jbe
outsb
mov
adc
pop
sbb
push
test
adc
lock
mov
dec
fwait
arpl
mov
push
inc
mov
xor
andl
lods
jo
sbb
pop
stos
out
cs
mov
inc
cli
cmp
sbb
inc
dec
and
cmpsb
aad
mov
inc
jbe
sub
outsb
imul
lcall
mov
or
lods
gs
lret
insb
in
cmc
dec
xchg
das
dec
jecxz
out
scas
push
mov
sbb
jge
xor
jns
movsb
and
rorl
and
and
je
push
jnp
imul
ret
cmp
mov
cltd
cmp
cltd
lods
jmp
int
fnstenv
inc
mov
push
rorb
jbe
leave
nop
daa
ret
cmp
mov
xchg
incl
jbe
inc
cmp
mov
cld
jne
insl
cmpsl
icebp
push
scas
gs
push
push
push
push
or
fsubs
mov
test
dec
mov
pop
jmp
sbb
sbb
jns
sub
notb
mov
or
jg
pop
lods
sub
jns
lock
test
dec
pushf
leave
jb
xlat
test
inc
ror
popa
addr16
lcall
xor
xor
cmpps
mov
sub
mov
and
out
dec
push
inc
pop
movsl
sbb
out
sub
cwtl
push
aas
push
mov
mov
cwtl
les
lret
cmp
cmp
lds
jle
cmp
mov
xor
cmp
lea
mov
lret
daa
and
push
jns
jg
shl
idivl
pop
cmp
inc
fimull
fdivrl
out
das
fs
inc
in
sub
enter
jno
in
insb
loope
jo
xchg
mov
pushf
jecxz
out
pusha
xchg
cmp
cltd
sub
cmpsl
insb
daa
jbe
cwtl
imul
mov
pop
aas
loopne
dec
js
fcos
loopne
js
fidivl
dec
cmpsl
aaa
sbb
icebp
gs
lods
add
call
and
cmp
lea
xchg
xchg
fld1
loope
pop
dec
sbb
bound
cmp
push
xor
rcl
inc
imul
sub
dec
daa
add
popa
mov
cltd
and
jns
into
ja
es
outsb
dec
mov
add
sbb
push
mov
sub
gs
outsb
bound
es
aas
jl
cmp
pop
adc
mov
xchg
inc
ja
dec
or
int3
mov
adc
adcl
adc
inc
mov
push
or
shr
call
sbb
cmp
mov
inc
dec
imul
in
aam
xchg
sbb
push
loop
mov
pusha
mov
xor
pop
in
pop
subl
lods
adc
ljmp
inc
mov
add
mov
xor
add
loopne
rorb
pop
sub
sbb
jno
cwtl
jne
mov
fwait
enter
push
shl
mov
adc
lcall
sub
orl
adc
test
aas
repz
mov
pop
insb
aaa
cmp
pop
add
mov
xlat
clc
and
adc
mov
pop
popf
out
lods
inc
dec
aaa
fiaddl
sbb
cmp
mov
js
ret
stc
js
pop
pop
mov
push
mov
xor
std
adc
call
push
faddl
jp
mov
popa
divb
cltd
loop
dec
and
mov
adc
mov
movsl
fildll
cli
movsl
jae
mov
mov
hlt
dec
adc
mov
mov
out
mov
xor
ss
adc
rcrb
jg
jo
stos
test
ret
out
mov
mov
stc
mov
adc
in
push
mov
jg
dec
js
jge
shlb
incl
inc
loop
fs
cmp
or
mov
sbb
imul
xchg
push
sti
xlat
enter
push
out
pop
fs
outsb
in
test
fisttps
mov
mov
jae
xor
mov
popf
and
fildl
in
adc
outsl
xchg
mov
inc
adc
push
or
xor
push
fstp
mov
out
push
cld
imul
addr16
dec
push
jno
adc
insb
sarl
adc
xchg
imul
ud2
clc
arpl
in
cmp
cmpxchg
insb
push
add
add
and
jne
push
sti
outsl
push
and
dec
and
scas
inc
movsb
push
les
xchg
push
daa
aaa
dec
inc
add
push
enter
lods
jle
jno
scas
inc
cmp
sub
push
jo
call
test
fcomps
lahf
loop
push
loopne
in
push
mov
add
aad
sub
sub
data16
mov
mov
gs
xchg
das
cmp
clc
stc
pop
in
je
shl
pop
cld
jge
mov
lret
cld
insb
lods
adc
xor
call
xchg
inc
andb
or
add
xchg
mov
clc
jno
dec
repz
xor
lahf
les
fcomps
mov
cwtl
pop
add
lahf
iret
ret
xchg
and
xor
gs
inc
jb
push
and
fucomi
cmp
jb
iret
fstpl
mov
lret
icebp
xor
out
and
jp
adc
sar
notb
mov
leave
push
leave
outsb
das
leave
sbb
shlb
cmpsl
aam
sarb
clc
cmp
sbb
cmp
pop
cwtl
add
inc
ljmp
jp
lods
push
fisttps
pop
fnstsw
jl
add
cmp
push
call
push
ds
xchg
inc
js
ljmp
push
das
add
iret
iret
test
push
out
sti
stos
add
rol
push
lcall
jo
div
mov
in
int
pop
je
cmpsb
sbb
call
sub
sbb
or
iret
inc
mov
test
jge
test
dec
loope
outsb
pop
ffreep
xchg
mov
icebp
push
insl
lahf
fldenv
mov
pushf
inc
in
loopne
imul
movsl
div
in
sub
cli
add
int3
in
loopne
jne
mov
mov
mov
jge
sub
dec
push
inc
or
cmc
loope
sub
mov
jnp
cli
mov
sti
adc
les
shll
and
cs
cmp
jb
cs
stc
push
push
shll
jb
push
dec
and
es
ret
out
inc
push
jns
or
cmpsl
das
popa
dec
and
or
cli
jb
ljmp
arpl
cs
jl
add
int
arpl
data16
in
adc
aaa
std
fidivl
mov
and
es
fwait
adc
lret
mov
stos
lods
pop
mov
or
daa
add
push
add
in
mov
test
mov
and
vcmpss
imul
test
fidivl
int3
cmc
mov
mov
push
test
push
in
aaa
in
jge
jle
in
cmp
in
mov
stos
lds
pop
scas
and
inc
enter
xchg
addb
mov
fistpl
aam
pop
jmp
subb
pusha
mov
dec
mov
push
cmpsl
jp
push
xchg
popa
lcall
stos
mov
jmp
in
clc
mov
scas
aaa
push
sti
sbb
cs
mov
ljmp
les
data16
ja
and
push
in
jmp
xor
lock
sbb
xchg
orl
mov
test
shlb
cmp
push
fmuls
fldenv
jge
fldcw
xchg
inc
imul
pop
fldenv
jne
sub
adc
or
test
lcall
pop
adc
test
sbb
add
mov
std
mov
roll
or
adc
inc
scas
sub
dec
mov
and
fs
fadds
inc
out
push
add
or
mov
pop
insb
mov
enter
dec
inc
scas
addr16
inc
push
scas
cmc
xchg
jbe
negl
pop
insb
mull
sti
mov
std
cmp
cli
dec
push
fstl
das
xor
test
push
sub
mov
movsb
push
mov
insl
jbe
je
mov
stc
sub
sbb
imul
inc
in
and
xor
cmp
lea
ret
shll
lahf
and
inc
pop
fiadds
fiadds
ds
pop
movsl
in
sub
jbe
mov
repnz
out
repnz
out
clc
adc
pop
add
pop
and
insb
ja
stc
leave
sub
fmuls
add
xchg
test
lahf
xchg
push
cld
insb
push
inc
pop
sbb
enter
push
inc
dec
sbb
mov
inc
mov
jb
dec
xchg
test
push
pop
inc
pop
jne
push
or
xchg
fldt
mov
std
idivb
hlt
dec
xchg
pop
cmp
cmpsl
mov
fbld
sub
les
aas
mov
out
push
adcl
ret
adc
add
aam
pushf
fs
cltd
jmp
cmp
int
push
loope,pt
inc
dec
in
inc
lods
adc
jmp
pushf
cmp
in
add
mov
or
in
pop
rolb
and
stc
mov
jns
dec
cltd
pop
adcb
sbb
ja
mov
cmp
bound
out
xchg
inc
fiaddl
jg
lods
jae
rclb
jne
cmp
bsf
push
or
inc
pop
lret
push
push
lock
les
loope
fwait
std
push
out
repnz
cmp
push
in
sbb
xchg
jl
mov
testb
cmp
adc
clc
fwait
aaa
mov
scas
daa
aad
push
xor
lock
inc
iret
sbb
ret
cmp
jle
mov
ljmp
sub
inc
mov
cmp
adcb
mov
inc
rcrl
lea
push
pop
mov
and
and
cmp
push
mov
dec
js
pop
sarl
xor
jge
aam
data16
add
jl
dec
push
emms
outsb
lcall
inc
ret
aaa
xlat
jns
xchg
pop
pop
fldenv
or
insb
xorl
xchg
mov
inc
push
je
mov
sbb
movsb
mov
jae
lds
inc
jns
inc
cmpl
subb
aaa
xor
pusha
data16
adc
push
adc
xchg
into
inc
lahf
cmp
cmp
pop
mov
fnsave
jecxz
mov
shll
icebp
mov
jle
add
outsb
mov
popf
outsb
lcall
xlat
or
inc
cwtl
cmp
in
mov
dec
jge
jno
cmc
jns
int
idivb
pop
cwtl
cmp
sar
stos
lods
std
xor
rorb
inc
pop
jnp
push
dec
jl
fwait
or
notl
pop
sti
inc
mov
add
cwtl
ss
es
cmpsl
push
sarb
es
push
aaa
add
aaa
dec
fistl
cmp
aam
pop
inc
jecxz
into
daa
cmc
and
mov
fwait
push
dec
jl
in
mov
sub
loop
pop
insb
pusha
imul
or
daa
imul
xchg
jg
mov
mov
fidivl
test
cmp
add
ljmp
inc
iret
mov
and
lahf
mov
je
scas
mov
mov
mov
cmp
sbb
push
scas
in
mov
jo
sbb
inc
cs
cmp
pop
movsl
insl
xchg
sub
loopne
add
and
movsl
cmp
fmull
cmc
jbe
cli
lock
push
in
jae
insl
cmp
add
cmp
scas
inc
mov
mov
and
pop
inc
enter
jge
jne
mov
scas
and
mov
cmpsl
push
mov
mov
pop
add
xchg
insl
and
cmpsb
xchg
sbb
pop
ret
jge
add
sub
sbb
leave
das
bound
ret
stos
fmull
stos
mov
aam
movsw
movsb
jp
cmpsl
xor
popa
or
and
xor
fisubrl
xchg
sbb
inc
enter
iret
cmc
test
lea
nop
and
ss
jno
bound
mov
pop
dec
mov
xchg
jle
scas
sbb
out
stc
jg
xchg
jmp
sbb
mov
add
into
push
lds
mov
call
in
loop
push
cmc
dec
divl
jge
inc
in
lea
xor
cli
push
aad
fldcw
mov
data16
repnz
xor
push
out
jno
mov
sahf
inc
and
js
sbb
xchg
push
inc
and
add
dec
inc
cmpsb
rol
repnz
mov
loop
clc
cmp
rclb
in
mov
sbb
movsb
jecxz
mull
mov
int
xchg
cli
ret
xchg
outsb
and
outsb
push
sti
fdivs
lock
xchg
mov
xchg
subb
inc
lret
je
in
das
adc
cli
pushf
gs
rorl
cltd
dec
xor
in
fwait
inc
call
cmp
jbe
and
jmp
pop
cmpsl
or
test
jbe
adc
loop
rcll
adc
mov
push
sbb
cmpsl
xor
enter
movsl
loop
insl
push
sub
movb
xor
arpl
pop
fnstcw
mov
push
sub
aaa
push
es
cmpsl
mov
stc
scas
shr
mov
jbe
lcall
mov
inc
jl
ja
iret
or
out
push
jno
jge
jnp
ja
and
in
imul
pop
int3
sbb
rol
sub
push
fisttpl
mov
loop
and
and
into
mov
movsl
into
jge
mov
jne
inc
sub
inc
and
jp
mov
out
jge
jne
sbbl
sti
sahf
int
xchg
push
cmp
pop
call
cmp
jp
jne
ja
cmp
movsl
roll
test
js
adc
movb
gs
jge
and
sub
popa
popf
hlt
nop
jle
fisttpll
cmp
aad
cld
das
xor
aaa
lcall
sbb
cmc
rcr
mul
testb
jae
and
fsts
leave
pop
mov
and
movsl
into
or
je
pop
and
fdivl
jo
out
movsl
into
mov
and
test
adc
or
das
xchg
shrl
popa
mov
iret
pop
mov
dec
xchg
sahf
inc
lods
add
cmp
xchg
xorl
mov
test
lock
dec
movsl
cwtl
sub
out
das
ret
jg
sbb
call
leave
and
mov
into
adc
lods
in
loop
push
push
aas
pop
shlb
xchg
in
mov
or
mov
std
add
jno
out
mov
jnp
push
lock
in
shrb
lea
repz
hlt
sbb
arpl
sub
dec
inc
mov
je
das
xchg
xchg
not
mov
dec
mov
into
and
mov
sbb
adc
pushf
je
inc
xchg
iret
rcrl
jnp
aam
fwait
stc
jns
dec
mov
push
fnstsw
nop
ret
ja
clc
mov
mov
push
aas
inc
cmpl
outsl
adc
aas
rcll
fcoml
jne
dec
inc
jno
ss
int3
mov
pop
or
jae
cmp
enter
sbbl
pop
pop
mov
add
jae
icebp
mov
mov
rolb
xor
xchg
sub
out
mov
adc
in
rolb
jb
pop
les
mov
cmp
int
out
push
sarl
ficoms
push
pop
dec
jae
jae
out
push
xchg
mov
test
dec
stos
in
cmp
in
fcmovu
jle
jae
inc
adc
cs
push
xor
mov
fisubs
push
daa
mov
pusha
jle
xchg
mov
lea
sahf
les
hlt
mov
add
hlt
jge
cmp
push
jnp
xchg
pop
insb
push
fistl
in
xor
xor
scas
rcrl
inc
cwtl
iret
pop
shll
mov
pusha
into
mov
dec
add
pop
adc
cmovo
adcb
xor
mov
or
or
mov
jp
cmpl
lahf
pushf
ret
fisttpll
xor
es
pop
jne
sti
adc
cmpsl
fsts
leave
addr16
shl
or
sbb
enter
push
gs
lea
nop
and
jg
inc
xchg
cmp
lcall
mov
lahf
clc
mov
add
adc
mov
push
hlt
cmc
and
mov
jp
pushf
jbe
cli
mov
push
es
data16
jbe
dec
sbb
sbb
cmp
mov
mov
xchg
cmp
pop
pop
xor
shll
mov
mov
mov
lods
push
fs
popf
push
ss
push
cmp
gs
scas
in
xor
sbb
ss
in
sub
out
mov
inc
arpl
test
ljmp
and
and
adc
outsl
pop
test
mov
shlb
push
add
std
flds
adc
mov
sub
lods
push
adc
int
fisubrl
mov
out
add
cmp
mov
leave
cltd
mov
fcoml
jo
lahf
add
xor
mov
fisttps
out
rorl
test
xlat
adc
addr16
aam
cmp
ja
pop
mov
cltd
les
add
adc
les
and
lret
pop
push
pop
mov
daa
cwtl
and
insb
add
dec
jecxz
push
cmc
cltd
leave
inc
js
pop
push
shll
inc
movl
fcoml
sahf
jmp
mov
dec
mov
add
das
ret
fwait
inc
mov
pop
sbb
xchg
jg
les
stos
mov
cmpsl
jo
pop
cmp
loopne
jle
ds
enter
inc
sbb
fbstp
in
shlb
arpl
push
xor
dec
mov
pop
xor
cli
popa
aas
sahf
dec
fs
xor
inc
outsb
mov
out
dec
xor
fldcw
and
pop
dec
push
ret
ret
push
aas
aas
icebp
mov
in
push
clc
mov
scas
jns
in
and
mov
jns
cmp
jg
js
cwtl
sahf
repnz
xchg
mov
push
into
or
dec
lret
push
xchg
lea
or
sub
hlt
ret
sub
les
and
mov
xlat
aam
inc
add
sbb
addr16
es
and
inc
cwtl
xor
repnz
and
arpl
jo
jmp
push
pop
adc
sub
dec
or
cli
cmp
ret
sub
sbb
add
shrl
aaa
cmc
fstp
jb
and
adc
or
fadds
xchg
out
repnz
addb
in
das
aam
ljmp
mov
or
lcall
dec
cs
pop
adc
adc
add
push
lods
fstpl
mov
cmp
call
rol
jmp
push
fsubr
jl
sti
sarl
int3
dec
mov
jo
jns
and
sti
jle
inc
xchg
data16
dec
jo
in
out
add
leave
mov
mov
sbb
out
inc
mov
and
mov
fisttpll
xor
jno
jp
pop
das
cmpsb
or
mov
or
arpl
sbb
mov
dec
icebp
arpl
das
ret
adc
cmp
xor
mov
push
mov
mov
aas
jmp
mov
fisubl
sbb
into
js
push
fistpl
repnz
adc
out
pop
les
insl
pop
jo
inc
sbb
push
mov
push
mov
and
xchg
ss
repnz
int
pop
xor
loopne
je
add
sbb
lock
cmp
jp
popf
movsl
mov
cmp
xor
movsl
test
ret
pop
insl
sbbl
filds
dec
and
scas
xor
xchg
or
jb
sbb
repnz
pop
test
mov
sti
cmp
jmp
shl
xchg
mov
repnz
or
inc
inc
lds
push
imul
adc
sub
push
pop
cmp
fbld
mov
rolb
push
and
cld
xchg
nop
mov
push
adc
idivb
jle
cld
cli
inc
adc
cltd
bound
decb
stc
xlat
mov
push
idivb
xchg
jg
cmp
fldln2
and
lods
jmp
adc
sbbb
sbb
out
aam
xchg
push
mov
push
push
lods
in
clc
push
and
dec
hlt
ret
jae
insb
add
lret
aaa
cld
mov
idivl
mov
pop
stos
or
jns
fnstenv
pop
shrl
xor
jbe
push
cli
stos
std
negb
lds
jl
div
das
hlt
addr16
in
dec
clc
addr16
das
hlt
pop
fadds
ljmp
sub
cld
clc
ljmp
adc
repnz
js
jge
mov
lahf
roll
les
pop
insl
popa
jle
repz
pushf
jnp
jmp
xlat
mov
add
hlt
inc
nop
jg
fwait
cmpl
leave
loope
scas
pop
fdiv
aas
cli
sahf
lods
iret
sti
sahf
lods
icebp
mov
fsubr
shl
mov
stos
icebp
in
testl
jo
enter
mov
or
cld
dec
inc
sbb
mov
inc
mov
stc
aas
imull
insb
xor
and
jmp
pop
sub
push
jae
sub
test
pop
add
jns
adc
inc
loope
sbb
jge
pusha
dec
mov
cmpsb
shrl
mov
push
push
cmovb
pop
sbb
pop
in
pop
xchg
pop
rolb
cmc
and
js
inc
sub
incb
sbb
cld
push
nop
leave
fstl
data16
movsb
xchg
mov
jns
fs
xor
sub
int
adcl
ja
or
jl
shll
pop
loopne
adc
sti
repnz
pop
stc
mov
ficompl
aas
mov
ret
stc
addr16
loope
loope
iret
mov
jne
sub
outsl
std
sub
in
popf
ret
mov
cmc
pop
in
inc
popa
cmp
or
mov
test
clc
sub
jae
out
pop
adc
pop
popa
or
or
jno
and
insl
icebp
lock
mov
and
ds
addr16
cmp
lea
sub
push
out
sbb
sub
xor
xchg
xlat
out
jmp
cmp
ficompl
in
sub
enter
or
jo
sbb
mov
iret
sbb
inc
jbe
jb
mov
mov
jle
dec
pop
notb
in
sub
test
int
push
pushf
in
mov
shlb
movsb
aaa
data16
test
pushf
rolb
ds
lods
xor
out
iret
flds
sub
jns
push
ja
aad
mov
test
cltd
pop
pop
call
and
iret
or
je,pn
arpl
shl
xor
lret
add
iret
cmpl
cmp
in
dec
out
sti
sub
pop
fnstenv
cli
inc
imul
ror
mov
ss
mov
add
lds
shlb
rcl
cmp
inc
out
add
sti
rolb
pop
pop
jo
inc
lahf
push
call
or
roll
or
mov
mov
or
inc
mov
adc
shlb
xchg
sub
cmp
jmp
xchg
filds
test
mov
pop
push
loopne
mov
stc
mov
adc
pop
aas
popf
fwait
arpl
popa
icebp
adc
js
popa
js
fdivrl
sbb
or
cwtl
jb
aad
pop
pop
je
lock
mov
aad
and
in
adcb
mov
xchg
rcrb
mov
sbbl
das
in
push
cmp
popa
fisttpll
popf
imul
arpl
shrb
fisubrl
out
xchg
or
xchg
out
or
scas
add
and
mov
mov
clc
jns
shlb
loop
push
pop
test
insb
in
sbb
xor
frstpm(287
dec
xchg
or
mov
jg
fcomi
xlat
call
cmc
jle
sbb
out
mov
enter
jae
add
loop
push
add
js
ret
ret
mov
int
pop
into
test
or
popa
sub
sbb
cltd
sbb
or
insl
sub
ficomps
into
and
push
push
mov
inc
mov
pop
sub
test
push
popa
stos
jne
xor
pop
stos
and
ja
repz
rorl
push
push
test
xchg
inc
push
or
xorb
mov
mov
pop
push
scas
push
imul
aas
sub
ds
or
in
stc
bound
pop
rcrl
rcl
cmpsb
pop
dec
test
or
or
bound
rcrl
out
pop
xor
push
out
cmc
xor
test
adc
mov
lea
ljmp
lahf
xor
pop
jmp
push
inc
dec
inc
cltd
xor
fisubrl
nop
jae
mov
mov
test
and
jp
test
addb
and
inc
or
sarl
fisubl
xor
fwait
mov
test
push
cld
addr16
push
outsl
push
pop
test
sbb
pop
test
xchg
ret
xor
clc
xchg
mov
add
enter
add
loope
mov
mov
mov
std
ficoml
add
mov
stos
xchg
shl
mov
cmp
pop
addr16
xor
or
repz
mov
mov
sbb
lret
jg
aaa
sbbb
push
and
sbb
cltd
pop
xorb
inc
mov
mov
and
vmovq
pop
cmp
jnp
int3
sbb
sbb
cmpsl
sub
and
hlt
iret
jns
pop
aaa
mov
fdivs
mov
rorb
mov
ret
leave
push
adc
cld
out
in
xor
mov
pop
in
or
adc
leave
add
mov
xor
in
les
popa
pop
popa
scas
mov
and
test
pop
pushf
cmp
dec
outsl
pop
mov
mov
pop
jo
in
test
or
pop
ret
scas
cld
jne
mov
inc
ret
cmp
cltd
sbb
jmp
in
jle
add
out
inc
mov
cmpsb
mov
ss
outsl
pop
adc
mov
loopne
call
loopne
pop
push
scas
push
xor
mov
or
dec
aas
test
mov
inc
data16
cltd
or
xchg
fwait
ds
jns
pop
jp
and
adc
cltd
fldcw
fsubrs
fcompl
xor
xorb
push
sarb
sahf
repz
jg
inc
inc
push
imul
dec
xchg
pop
loopne
pavgw
sbb
ds
shrb
add
mov
arpl
arpl
xchg
push
mov
je
pop
inc
pop
lods
xor
lret
inc
mov
shl
cs
and
outsl
popa
inc
daa
xor
ficoml
icebp
mov
jg
js
mov
or
or
icebp
xchg
inc
jmp
out
in
rclb
shll
dec
sub
lods
hlt
jg
sbb
lods
imull
inc
inc
push
fcmovnb
iret
dec
lods
pop
lret
pop
ret
js
jno
mov
insl
mov
push
rolb
or
mov
inc
cmc
lea
mov
addr16
jle
cltd
ljmp
and
outsl
subl
cmp
dec
stc
sarb
mov
shl
mov
xlat
adc
pop
inc
inc
js
dec
cmpsl
adc
sbb
ror
pop
mov
pushf
addr16
jne
dec
les
cwtl
negl
xor
pop
xchg
push
xor
sbb
or
pop
pop
shlb
mov
pop
add
subb
xchg
test
ret
cli
fwait
iret
lret
and
adc
xchg
sti
icebp
orb
sti
fistl
les
ret
int3
data16
loopne
dec
rorl
push
je
xlat
in
jmp
clc
cltd
cwtl
mov
pop
mov
xor
lret
sub
pop
rcr
les
or
inc
out
mov
je
pusha
sti
pop
pop
imul
ljmp
lret
outsb
test
adc
repz
int3
push
xchg
bound
out
xchg
lcall
ret
aas
leave
or
add
and
mov
mov
test
mov
or
mov
pop
pop
pop
loopne
test
pop
cmp
push
mov
es
mov
cmp
lret
dec
cwtl
mov
inc
iret
ss
stos
push
adc
xor
mov
gs
xor
sub
push
stos
add
in
lock
jb
sbb
or
jns
movsb
imul
int3
and
sub
pop
jecxz
imul
sbb
or
mov
push
mov
or
movl
push
jnp
xchg
inc
mov
leave
in
xchg
leave
sti
insl
xchg
addr16
mov
or
loopne
jnp
pushf
sbb
les
loopne
sbb
or
pop
sti
scas
das
lock
mov
ljmp
or
push
clc
add
scas
or
sub
pop
outsl
shll
jge
add
inc
sbb
push
fcmovnb
stos
jmp
subb
and
stc
cld
add
andnps
mov
fstpt
push
fwait
lahf
lods
sbbb
lahf
cmp
mov
imul
sub
fidivrl
mov
mov
sbb
jecxz
movsb
adc
mov
and
loopne
test
mov
cmpsb
iret
movsl
mov
popa
js
subl
pop
shl
mov
push
adc
popf
imul
xchg
xlat
adc
pop
ss
pop
jp
cmp
rorb
cs
and
inc
fildll
arpl
lds
test
or
sti
or
pop
add
in
fldt
xchg
xchg
dec
mov
or
fs
clc
mov
mov
pop
jb
mov
mov
mov
adc
sub
mov
xchg
xor
scas
mov
push
clc
mov
cmp
mov
roll
das
xor
gs
test
dec
or
mov
mov
push
dec
mov
sub
aaa
add
iret
jno
imul
cmp
mov
pop
cld
das
repz
dec
mov
enter
ds
sbb
dec
sub
sbb
pop
lret
jbe
cmp
sbb
into
adc
rorb
fstl
jecxz
mov
jb
sub
addr16
mov
xor
cmp
add
scas
cmp
mov
push
jno
or
sbb
sahf
mov
push
jae
lea
dec
mov
cli
dec
ss
sbb
loope
ljmp
inc
movsl
aam
int3
mov
and
cwtl
aad
loope
pusha
xor
aaa
mov
xor
in
push
mov
enter
imul
test
or
pop
push
cwtl
cmpsb
cld
jl
pop
xor
xchg
sahf
xchg
mov
adc
jmp
out
ljmp
daa
mov
out
clc
enter
jl
xchg
insb
aad
int
xor
and
xlat
fiaddl
push
fnstcw
ds
pop
shl
adc
add
in
push
or
sbb
cmpsl
pop
sub
sbb
andl
out
and
test
mov
jnp
insl
or
lea
cmp
cmp
jb
inc
cli
pop
cmp
sbb
mov
fnstenv
test
jne
add
imul
imul
push
cmp
inc
icebp
cmp
pop
add
out
push
adc
addr16
fstps
in
mov
mov
jle
scas
fnsave
imul
xlat
jae
pusha
adc
std
mov
outsb
xor
jae
dec
or
jle
std
movsl
cli
jp
andl
rcrb
sti
les
movsb
out
ljmp
dec
sbb
test
push
jecxz
xchg
loope
ljmp
xchg
pop
inc
mov
pop
cmc
aam
adc
aaa
ja
cmp
in
jbe
jb
mov
or
add
subb
mov
mov
pop
jno
cld
fsub
mov
xchg
sbb
mov
shr
sar
sbb
inc
pop
popa
cmp
leave
rcll
cld
xchg
mov
cmp
xchg
jle
loopne
inc
sbb
xor
aad
or
test
xchg
lcall
ret
xchg
lahf
mov
mov
jecxz
mov
scas
jle
push
idivb
test
push
es
dec
mov
lret
mov
aam
sbb
or
orb
mov
mov
call
pop
inc
mov
cmp
mov
lods
add
aam
ret
pop
in
iret
cmpb
mov
nop
divb
and
and
push
das
mov
loopne
xor
stos
outsb
sbb
lock
xor
shlb
jo
inc
inc
out
jo
cmp
xchg
lods
mov
clc
aas
fcoml
in
pop
test
jne
jmp
mov
sbb
sbb
imul
dec
cmovl
sti
push
subl
add
mov
lods
jl
leave
test
leave
sub
xchg
sub
mov
out
xchg
mov
dec
enter
add
xor
and
loopne
xchg
sahf
fxch
mov
incl
and
cmc
xlat
jo
ljmp
and
sbb
sub
ss
fnsave
mov
or
cld
push
fsubrp
pop
mov
imul
outsl
mov
ljmp
test
pop
dec
mul
inc
xlat
popf
xor
lods
shrb
inc
ja
push
fbld
adc
mov
mov
mov
jg
push
in
mov
into
xor
clc
add
add
inc
mov
inc
add
cli
mov
mov
shrl
push
mov
loope
dec
sbb
sub
dec
push
clc
dec
ljmp
and
rorb
loopne
and
push
xchg
pop
mov
and
cmpsl
add
jbe
imul
dec
jnp
ss
mov
dec
xor
push
fwait
jns
loop
xchg
fisubl
inc
mov
jb
jg
fwait
leave
lock
test
mov
inc
sub
add
jecxz
repnz
daa
adcl
xchg
loope
push
cwtl
repnz
mov
jmp
aam
mov
outsl
fs
jmp
xchg
outsl
pop
push
add
arpl
push
and
mov
push
dec
in
lods
cld
xchg
cmpsb
bound
mov
data16
out
outsl
sub
lds
addr16
add
hlt
xchg
enter
mov
mov
mov
loop
iret
mov
fiadds
push
pop
enter
cmp
jns
xor
aaa
ds
in
mov
sub
inc
sbb
in
lock
mov
pop
sub
data16
and
xor
push
add
les
pusha
fbstp
jge
cltd
adcb
jp
adc
ret
push
dec
int3
mov
jo
ret
ret
and
call
imul
cmp
mov
mov
gs
lret
xor
imul
mov
mov
inc
add
jl
sbb
icebp
loop
xchg
aas
jecxz
test
popf
iret
sub
stc
cmp
outsb
out
xchg
fcomps
xor
nop
repnz
test
mov
add
pop
mov
sub
cmp
or
jg
loope
aas
loopne
xchg
cmp
daa
ret
lock
push
lsl
dec
jg
cmp
mov
push
cmp
mov
out
xor
and
xor
adcb
filds
pop
mov
cs
bnd
pop
push
sti
daa
and
jecxz
xchg
sub
xchg
cmp
dec
dec
dec
dec
xchg
cmp
xchg
cmc
sbbb
sub
push
pop
dec
cwtl
mov
int3
inc
jmp
push
sub
xor
popl
mov
xchg
xor
fstpl
es
inc
mov
pop
pop
lods
inc
dec
lahf
mov
dec
iret
sub
outsl
inc
push
out
jae
shlb
repnz
lock
mov
inc
sub
ret
das
stos
jne
and
jne
inc
mov
jecxz
mov
xchg
adc
bound
in
les
mov
insl
dec
jg
fbld
pop
or
push
fldenv
pop
mul
popf
test
stos
out
inc
jl
xlat
push
in
mov
add
iret
mov
jp
lea
ds
ss
sub
fmulp
insb
insb
outsb
data16
fstp
jnp
outsl
int3
mov
lahf
popf
rcrl
xchg
jmp
xchg
call
mov
push
das
sarb
xchg
cld
ret
ja
mov
adc
movsl
stos
inc
gs
sbb
dec
leave
mov
jb
push
cwtl
movsl
into
cmp
mov
lods
clc
mov
xbegin
ljmp
dec
gs
std
push
jl
or
cltd
stc
inc
push
ror
popf
jo
jp
sbb
out
inc
icebp
lods
loopne
lods
sub
jnp
jb
adc
or
xlat
rorb
popa
cld
xchg
xlat
int
jb
and
xchg
mov
int3
xchg
mov
cmp
push
sub
hlt
cmpl
rorb
mul
sbb
jg
jle
or
jo
ds
jle
adc
pop
rcr
xchg
jle
inc
or
int
add
sub
scas
pop
mov
sub
popf
jle
shr
sub
cmp
fadds
push
xchg
xor
into
add
fidivl
sahf
lcall
cwtl
sbb
jb
mov
lock
lret
adc
sbb
imulb
jmp
mov
dec
add
lock
pop
ds
mov
pop
or
lret
icebp
sub
movl
sub
inc
jp
dec
sub
in
mov
fstpt
testl
xor
and
scas
in
mov
loope
daa
mov
adc
fildll
loopne
out
lock
mov
dec
rcrb
insb
lret
aaa
lock
mov
pop
ror
mov
sub
pop
aad
lock
jg
lret
test
mov
clc
dec
nop
dec
gs
out
mov
jecxz
jg
and
and
fisttps
adc
popa
and
xchg
cmp
dec
dec
inc
rcll
rcl
mov
movsl
cmp
out
jo
jle
push
dec
iret
and
repnz
xor
movsl
fldenv
in
jge
mov
xor
jae
fnstsw
xor
cli
dec
inc
jp
outsl
pushf
and
faddl
sti
mov
aaa
sbb
pop
in
andb
lahf
ja
adc
cmp
clc
or
xor
cmpsb
adcb
push
inc
repnz
jge
lret
push
and
in
sub
jg
mov
cmp
push
fdivrs
loopne
sarb
imul
inc
scas
mov
xchg
mov
js
jae
dec
sub
aaa
sbb
inc
fwait
push
inc
push
into
cmpl
popf
daa
filds
pusha
andb
lcall
mov
or
adc
mov
shll
or
jmp
jl
mov
and
lods
std
in
sbbl
fucomi
les
iret
inc
lcall
test
lock
pushf
cld
sub
ljmp
jecxz
shrb
int
jnp
insl
xor
push
dec
insb
sahf
pop
ret
add
dec
push
fisubs
popa
cmp
mov
fldcw
dec
or
mov
cld
push
jl
loopne
sbb
shr
nop
dec
pop
xchg
loope
push
mov
inc
imul
or
sub
iret
jmp
daa
ss
and
int
or
icebp
das
lock
mov
scas
lds
cld
dec
jp
jle
cwtl
cmc
mov
xchg
stc
jle
outsl
push
mov
jmp
clc
iret
and
sub
dec
pusha
sbb
test
sub
fisubs
push
shr
mov
mov
loope
lret
fists
pop
loopne
xchg
movsl
insl
mov
mov
mov
add
in
push
enter
sbbl
mov
push
dec
xor
cwtl
dec
imul
add
lock
pop
mov
shrb
cmp
push
cmp
inc
jp
addr16
ficomps
mov
and
mov
rclb
scas
mov
cmp
jg
imul
into
inc
pop
loop
test
lock
jecxz
dec
out
mov
aam
push
jle
rcl
mov
cmp
js
daa
insl
clc
call
int3
xor
xchg
fisttpll
or
pop
pusha
fcmovb
xchg
push
xchg
pop
mov
loope
loop
xor
mov
jo
cwtl
movsb
and
pop
das
out
mov
out
jmp
fidivrs
mov
jns
mov
insl
fiaddl
adc
inc
xchg
add
sub
mov
push
mov
lcall
pop
dec
cmp
inc
inc
out
sbb
popf
shll
or
cmovo
insb
xchg
rcll
bound
stc
scas
mov
dec
cli
shlb
std
out
idiv
jle
mul
and
imul
mov
out
stos
std
ret
jo
jo
add
push
daa
fwait
mov
push
mov
inc
adc
aad
mov
imul
out
inc
xchg
adc
fmull
mov
test
mov
fnsave
inc
les
and
aas
js
mov
cmove
xor
jmp
lods
scas
pop
mov
jne
call
xchg
push
and
pop
xor
mov
andb
lds
gs
mov
xchg
xor
fistpll
adc
dec
sub
inc
mov
push
sub
adc
clc
push
inc
mov
jmp
xchg
dec
fs
ljmp
lret
and
add
pop
cld
test
sub
ds
xor
dec
lcall
jo
mov
xchg
jge
icebp
stc
call
cmpb
pop
test
sub
and
je
dec
mov
dec
dec
and
ja
mov
lcall
jb
fcomps
lret
nop
ss
push
pusha
xchg
ljmp
dec
mov
loope
push
lock
adcl
cltd
sarb
cli
mov
test
mov
or
xchg
ljmp
mov
jmp
xchg
sbb
jnp
shrl
dec
pushf
test
mov
out
xchg
pop
cmp
ficoml
push
add
xor
sbb
cld
pop
jae
fsubrs
push
stos
sbb
mov
aaa
sbb
ja
xchg
cmp
fwait
int3
xor
aaa
imul
fwait
dec
pop
mov
aaa
mov
push
int
fstl
cmovge
ret
mov
imul
push
shl
out
je
std
cmpb
inc
adc
xchg
mov
sbb
mov
and
lock
mov
sub
fiaddl
dec
pop
push
adc
add
rcll
mov
cmpl
xchg
adc
push
insb
addb
jnp
jno
inc
popf
lods
mov
addb
jge
adc
dec
cmp
leave
mov
xchg
xchg
mov
sub
sbb
loope
or
aas
cmp
mov
lret
movsb
test
mov
gs
push
xor
stos
cli
shl
jge
sbb
aaa
add
mov
inc
inc
test
test
push
inc
hlt
daa
test
xor
push
into
outsb
mov
bound
test
cmpsb
mov
xchg
pop
rcll
add
mov
fcoml
dec
sub
shll
roll
mov
lds
adc
pusha
cmp
rcrb
mov
mov
mov
sub
movsb
outsl
mov
loop
movsl
jl
stc
xchg
pop
pop
jne
add
sbb
dec
pop
test
jae
ret
sbb
loopnew
push
jb
fadds
daa
adc
mov
add
arpl
jnp
pop
lds
xchg
or
push
fistl
jns
pop
jo
or
mov
adc
xchg
in
shlb
out
lret
jbe
add
xor
add
aas
hlt
out
sbbl
lods
xchg
pop
adc
push
cld
enter
push
dec
sub
inc
or
fwait
in
dec
sbb
push
rcr
pavgw
push
inc
bound
into
sbb
jno
mov
pop
sub
or
into
int3
std
les
inc
jns
fimuls
dec
and
push
es
fiaddl
jno
shll
pop
dec
inc
dec
xchg
in
xchg
jmp
cmc
lcall
adc
test
lcall
sub
icebp
adc
mov
arpl
lds
and
shlb
cwtl
pop
sbb
cltd
fldl2e
jmp
addr16
jge
cmp
cltd
or
push
popa
cmpsl
adc
jmp
or
movsl
loop
cwtl
call
add
dec
enter
fstpt
push
dec
lock
in
es
push
lods
push
jb
lods
add
or
adcl
aam
sub
mov
jne
inc
cwtl
dec
push
pop
pop
and
or
inc
ret
jb
movsl
ret
sub
lret
aam
insb
dec
push
push
inc
mov
jg
add
xchg
inc
sub
aas
icebp
push
fstps
mov
push
adcl
or
push
push
das
lret
add
sbb
push
orl
loopne
mov
lock
arpl
xor
lret
daa
test
pop
subl
imul
insb
out
mov
mov
filds
fs
add
sub
aam
push
push
pop
inc
pusha
ret
aam
xchg
sbb
mov
mov
sub
mov
xor
push
push
in
pop
ss
add
loope
mov
out
mov
jb
jnp
ds
inc
xor
lahf
add
ds
xchg
push
scas
sub
xchg
mov
syscall
cmp
xchg
pop
out
js
loopne
jecxz
mov
sbb
jecxz
sahf
rclb
adc
fnclex
adc
mov
jae
and
sbb
lea
mov
sbb
cmp
sbb
adc
int
lcall
push
ret
xchg
dec
rcrb
test
arpl
fsubrs
test
enter
mov
lret
aad
xchg
outsb
pushf
pop
ja
test
fnstcw
lret
xchg
lret
or
cmp
push
xchg
jb
and
or
add
in
movsl
nop
or
aam
adc
inc
mov
nop
mov
pop
fldt
cs
shll
scas
add
andb
std
xchg
push
in
in
imul
mov
mov
push
or
mov
es
gs
inc
sbb
shld
push
jns
jb
jno
stos
sbb
insl
inc
mov
fs
icebp
adc
push
or
in
jle
imul
push
cli
pop
pop
inc
cmp
rclb
lret
push
push
in
sbb
shrl
ret
cmp
adc
xor
xchg
shrb
repnz
xchg
popa
adcl
and
mov
mov
push
std
jge
fistps
xor
push
xlat
cmp
mov
leave
data16
push
shlb
cwtl
inc
jmp
insb
into
add
shlb
pushf
loop
add
imul
sub
mov
push
jecxz
adc
and
popf
xor
aaa
mov
shlb
dec
mov
ret
call
andb
inc
and
lods
push
add
add
inc
cmp
pop
pop
sub
adc
jmp
popa
movsb
xchg
test
mov
jecxz
lcall
adc
fidivrs
stos
dec
mov
mov
and
inc
jmp
movsl
ret
inc
inc
inc
shrl
decb
in
fbstp
cltd
data16
adc
scas
fcompl
sar
dec
clc
stos
repnz
psubusw
adc
xor
mov
xlat
lcallw
xchg
dec
inc
fadds
or
or
nop
rolb
pop
xor
aas
mov
fldenv
imul
int
push
out
in
and
push
jl
into
xor
lock
sub
add
push
pop
int
sbb
mov
bound
mov
outsb
xor
mov
std
xchg
std
addr16
cmc
inc
sbbb
dec
repnz
aam
cmp
ds
push
call
movsb
sub
xor
xchg
and
insb
inc
nop
jmp
adc
or
fs
push
out
jecxz
push
mov
popa
sub
xor
jo
rorl
add
inc
xorl
add
adc
jg
rol
pop
rorl
fs
xor
fldl
cmp
dec
dec
mov
pop
xchg
movzbl
adc
dec
in
nop
fs
roll
cli
or
lock
jno
hlt
or
cmp
inc
jg
out
in
ss
int
xor
push
je
mov
xlat
sub
pop
inc
out
sub
cli
bound
dec
mov
and
dec
loop
enter
test
movsb
test
ffreep
sbb
int
xchg
push
addb
xchg
insl
cwtl
popf
pop
in
cltd
test
mov
and
inc
std
xchg
inc
jg
and
dec
xor
mov
adc
mov
imul
movsb
add
sub
push
push
cmpsb
sub
jmp
pop
cmp
in
xor
data16
sbb
sbb
dec
mov
cwtl
pop
movsl
dec
jmp
lods
insl
sub
insb
pop
testl
cmp
rol
in
imul
dec
mov
in
dec
in
mov
mov
add
sti
sbb
mov
mov
dec
adc
mov
fst
js
xchg
sbb
push
mov
enter
jl
push
or
and
cmp
cmp
mov
push
es
mov
mov
or
test
push
fwait
push
aam
ja
pop
push
cli
sbb
lock
sahf
sbb
xchg
fwait
loop
xchg
daa
dec
ret
cltd
jno
or
lods
cli
inc
fcomi
dec
ficoml
xor
ret
cs
lods
and
aam
xor
fwait
scas
mov
pop
add
movsb
jmp
push
fisttpl
sub
cli
xor
imul
or
sti
loope
sbb
imull
cmpb
loope
test
fcoml
inc
inc
mov
pop
jmp
aam
fiaddl
iret
xor
enter
jno
add
push
or
scas
rclb
push
jns
je
sbb
mov
jmp
fistpll
lock
repz
icebp
jb
ja
lock
sahf
mov
and
mull
jl
loope
or
ds
test
or
sub
cmp
add
mov
xor
mov
jle
or
shrb
jbe
inc
ljmp
inc
jecxz
fiaddl
cwtl
fildl
push
addr16
jg
cmc
stos
scas
or
mov
push
inc
mov
repnz
fisubl
imul
lock
loopne
sbbl
xchg
cli
jne
clc
pop
inc
jnp
adc
movsb
dec
lea
imul
sbb
or
addb
xchg
sahf
sti
sbb
xor
xorb
clc
insl
sbb
push
add
stos
movsb
pop
shlb
test
or
out
pop
loopne
add
mov
adc
ret
xchg
xchg
add
sub
repz
cmp
jne
cmp
in
movsb
sbb
mov
sbb
outsb
xor
sbbl
xor
xchg
imul
jp
push
cmp
sbb
pop
shlb
xchg
and
sbb
add
and
pushf
push
push
lea
or
pop
fidivrl
dec
or
xchg
xor
fsubl
mov
out
fmull
out
mov
or
jbe
xchg
pop
rclb
sbb
or
scas
adc
sub
scas
jecxz
sbb
lcall
addr16
repnz
repz
xchg
out
sbb
sbb
cli
lds
mov
daa
xchg
mov
fmul
test
dec
mov
jbe
lods
orl
cmp
adc
sahf
xchg
jg
mov
sahf
pop
dec
repnz
int
jp
movsl
scas
pop
fisttpll
icebp
dec
dec
ret
int3
push
mov
mov
mov
mov
fldln2
mov
push
lcall
push
pop
out
dec
pop
cmpsb
fldcw
and
loope
jnp
movsb
xor
ret
jae
repnz
xchg
adcb
popl
imul
cmp
xor
add
jecxz
jns
stos
ret
orl
fs
xor
pop
add
gs
les
jle
mov
jns
push
or
sub
mov
cld
or
xor
ljmp
mov
or
xchg
sahf
dec
push
add
divb
pop
mov
dec
les
xchg
pop
push
xchg
ds
divl
sub
out
jb
aam
out
jg
xchg
xor
jge
cwtl
add
stos
sbb
jg
pop
push
int3
sbb
push
xor
add
sub
xor
jmp
sub
mov
adc
in
adc
sbb
inc
in
jo
hlt
mov
dec
push
ret
shrb
push
stc
cmp
mov
jmp
fwait
daa
dec
cld
add
mov
jb
push
testl
or
jp
adc
mov
add
sbb
adc
dec
mov
jl
call
mov
adc
pushf
cs
das
mov
cmp
test
push
cmpsb
adc
inc
push
lock
add
sub
enter
mov
je
adc
add
shl
pop
xlat
scas
cmp
daa
or
gs
xchg
pop
push
mov
sub
mov
push
rcll
incl
sbb
adc
int3
mov
adc
add
mov
stc
inc
xchg
stos
and
xchg
jmp
sahf
out
sub
mov
cmp
cmpsl
add
dec
fadd
mov
loopne
jae
xchg
pop
add
movsb
add
lds
lea
pop
mov
rcr
inc
rclb
int3
sub
xchg
pop
rclb
cli
das
xlat
fmull
xchg
loop
push
mov
rorl
mov
or
int
pop
addps
and
adcb
cmp
lods
xor
mov
mov
shll
sbb
inc
test
aam
xor
sbb
fstps
jbe
pop
jnp
repnz
or
ret
aas
add
add
xchg
lds
cmpb
mov
sub
test
hlt
out
icebp
or
xor
cmp
add
sbb
mov
imulb
lret
pushf
adc
xor
xlat
rorl
out
push
push
out
loop
push
dec
hlt
outsl
dec
xor
ja
or
xor
ret
mov
dec
pushf
push
popa
mov
sahf
fwait
push
insl
sbb
clc
or
into
lea
repnz
adc
dec
inc
imul
cmpsl
or
dec
stos
cmp
rcrb
and
dec
lds
push
xchg
mov
js
push
pop
lret
sbb
dec
or
sub
and
sub
add
loope
das
xor
inc
mov
lret
ss
adc
pop
or
xchg
popa
mov
sub
stc
pusha
dec
sbb
jge
pushf
cwtl
mov
in
cmp
pop
lcall
out
cltd
cltd
loopne
bnd
int
mov
les
dec
test
inc
dec
inc
jl
les
xor
dec
dec
seto
popa
mov
lret
mov
lcall
cwtl
repnz
fs
cmp
jl
jmp
shrb
mov
jo
sarb
and
inc
cmp
jne
lret
movsb
jns
imul
je
jns
inc
daa
and
sbb
push
out
push
cmp
sbb
pop
mov
sbb
es
sbb
loope
sub
ja
pop
cmp
dec
xchg
dec
sub
jb
daa
nop
dec
pop
decb
mov
nop
call
dec
repnz
adc
jae
xor
xor
push
mov
dec
sbb
lret
dec
cmpl
aas
add
hlt
pushf
idivb
lods
sub
xor
hlt
pop
jmp
insl
ret
sbb
mov
ds
in
adc
test
jns
xchg
out
ret
pop
cmp
addr16
out
sub
sub
or
addr16
xchg
insl
sbb
jne
into
sub
popa
fs
popfw
icebp
shll
fs
jb
cmp
rcrl
mov
sub
jno
cmpsb
adc
mov
fisttpll
jne
std
or
adc
subl
insl
push
dec
push
pop
inc
daa
stc
xchg
push
in
cwtl
cli
push
cmpsb
inc
or
dec
imul
movsl
mov
leave
inc
leave
mov
adc
mov
add
cmp
pop
xchg
jno
cmp
sbb
add
out
jne
sbb
mov
pop
divl
mov
jb
sub
lods
sbb
imul
rol
faddl
inc
adc
pop
add
inc
sarb
sarb
push
sub
sbb
jl
lock
divb
or
cli
xchg
pop
scas
into
dec
fs
sti
inc
daa
xor
sub
sub
int3
push
lods
rolb
dec
pop
push
xorb
push
sbb
aas
mov
and
adc
scas
popa
inc
push
push
cwtl
xor
adc
mov
mov
nop
jmp
pop
lock
jb
inc
aas
cmp
jl
mov
shlb
fidivl
das
push
nop
mov
sub
xchg
lea
push
push
sub
xor
xor
mov
test
repnz
jge
sarb
in
pop
shll
jmp
push
pusha
xchg
mov
jbe
adc
add
ss
add
mov
sahf
notl
xchg
fidivrs
test
xchg
shrl
std
cmp
and
push
in
sbb
jne
mov
out
push
add
adc
sbbb
fildll
xor
cmp
mov
dec
xchg
cltd
or
icebp
dec
out
and
push
mov
pop
loop
push
inc
mov
inc
call
jle
cli
shld
adc
jmp
leave
fldenv
dec
scas
and
and
pop
ret
add
ja
les
cwtl
shrl
dec
push
testl
incl
icebp
sar
jbe
decl
sub
pop
jmp
cmpb
ret
and
or
inc
dec
or
fs
popa
push
adc
xor
cmp
xor
out
add
ds
cwtl
mov
lock
in
scas
mov
or
adc
addr16
inc
xchg
mov
mov
icebp
sub
xor
or
fcoms
shll
mov
push
dec
dec
or
push
test
dec
and
mov
pop
jp
pop
cmp
insb
movsb
test
push
push
loope
push
iret
repnz
sub
ja
in
mov
and
mov
jno
xor
xor
test
sub
pop
mov
dec
fcmove
popf
xchg
sti
or
js
test
sub
enter
mov
test
xor
add
sub
mov
imull
inc
push
nop
inc
in
data16
xchg
ljmp
mov
push
pushf
loop
pop
pusha
test
xor
mov
dec
addl
test
cmp
loopne
lcall
clc
adc
fwait
push
sbb
fimuls
aaa
and
xor
mov
xlat
lea
cmc
jno
icebp
xlat
lods
fisttpl
jmp
dec
dec
decb
popa
pop
subl
xchg
xlat
mov
cmp
ja
scas
xchg
jnp
pop
movsl
loop
jb
cs
ljmp
adc
xchg
push
popf
mov
outsb
mov
in
dec
stos
sub
lds
pop
ficompl
mov
bound
rcrl
stc
sub
in
add
xchg
or
imul
jmp
scas
mov
xorb
push
stos
outsb
inc
je
stc
jb
and
pop
aaa
fsubl
loop
ret
filds
test
mov
movl
xlat
pop
push
test
pop
mov
in
push
mov
lock
bound
push
push
adc
outsb
xlat
or
adc
outsl
test
in
pop
or
push
inc
xor
jb
cmp
jnp
mov
jp
xlat
mov
cmp
pop
mov
mov
mov
and
sub
mov
pop
adc
arpl
xorb
sub
xchg
imul
fs
pushl
mov
sub
jl
ret
mov
jae
stos
sbb
pusha
adc
push
add
fidivl
sbb
fidivl
push
xor
adc
bound
ja
xchg
icebp
fiadds
adc
js
scas
cmp
inc
sub
in
sbb
mov
xchg
fnstenv
mov
fdiv
sub
pop
cmp
test
adc
or
xchg
lods
and
fldenv
and
outsb
push
sub
xchg
sbb
arpl
js
movsb
cmpsb
xor
sbb
stos
je
sbbl
loop
push
sub
push
loope
out
decb
mov
aas
subb
out
push
ljmp
pop
and
dec
pop
shrl
pop
or
dec
push
adc
adc
pushf
xor
lods
cmp
jnp
push
push
cltd
shl
push
jmp
mov
les
ljmp
roll
jl
je
dec
mov
jp
mov
xor
ss
mov
jmp
xor
jmp
sti
rorl
cmc
aad
shrl
pop
ret
out
clc
aad
scas
push
jle
cld
push
xchg
push
clc
insl
ds
inc
movb
loope
or
inc
decb
dec
fildl
mov
call
fidivrs
test
inc
enter
lcall
loop
cmp
loopne
adc
shl
xchg
or
sti
rorl
cmp
out
push
clc
push
ret
scas
es
mov
push
push
pop
scas
es
mov
mov
pop
add
test
pop
add
lret
aad
or
cmp
jecxz
into
xor
loopne
mulb
xchg
adc
cmpsb
jle
add
mov
cmp
insl
cmp
insl
xchg
dec
pop
cmp
xorl
aam
cmpsl
xor
push
sbb
and
add
xchg
movsl
push
mov
sub
add
int
push
adc
xchg
adc
lret
push
push
or
movsb
adc
sbb
fs
pop
lods
enter
adc
push
das
sbb
jo
jp
into
push
or
dec
push
icebp
arpl
shl
dec
ret
and
je
aad
add
stc
les
repnz
je
div
lret
gs
dec
dec
imul
push
jmp
push
shll
inc
sti
cwtl
repz
jmp
adc
sub
fcoms
pop
or
mov
and
push
adc
xchg
jbe
or
scas
xchg
in
aam
push
lods
inc
add
loope
shll
cmp
in
jb
pop
aaa
mov
scas
cmp
stos
jo
iret
lea
inc
test
cmp
cmp
dec
pop
cmp
in
sbb
lds
mov
out
jp
sub
out
push
jno
ret
sbb
je
arpl
or
or
lret
sub
les
mov
pop
mov
sub
scas
loopne
inc
lret
stc
int3
loop
mov
dec
mov
in
dec
adc
loope
and
aas
int
xor
xlat
imul
cmp
fmuls
popa
lcall
out
popa
fstl
jae
fistps
or
mov
in
sbb
or
insl
jb
sbb
cs
adc
fmuls
sbb
and
sbbb
mov
out
inc
cld
imul
sub
ret
insl
mov
sbb
cmc
inc
into
mov
inc
cmp
xchg
hlt
pop
cltd
mov
lds
in
xorl
inc
push
cmpsb
je
stos
out
lcall
loopne
sbb
xor
mov
xor
loope
es
mov
lcall
sub
xor
sub
arpl
mov
mov
or
mov
pop
sub
sub
cld
jnp
lds
adc
mov
xchg
inc
jno
and
adc
push
scas
add
cwtl
mov
aas
mov
loop
aaa
lea
aas
push
add
aaa
jge
or
scas
outsb
sti
sub
pop
cmp
push
pop
add
icebp
adc
in
jp
repnz
push
leave
pop
loopne
adc
push
jecxz
add
js
lock
jae
js
push
iret
pop
hlt
faddl
sahf
xadd
sbb
loopne
add
outsb
hlt
and
mov
add
hlt
add
vpandn
mov
fcmovnbe
xchg
xchg
mov
and
nop
sbb
mov
push
stc
adc
jo
fidivs
loope
imul
mov
icebp
iret
adc
iret
cmp
mov
xchg
in
sbb
scas
test
popa
in
call
add
stc
fidivrs
mov
jge
inc
sti
push
mov
scas
xchg
and
outsl
lret
cmp
test
xchg
stos
js
dec
push
adc
mov
stos
lock
mov
inc
repnz
inc
iret
iret
or
je
call
insl
das
and
xor
pop
push
dec
cmpsb
fs
in
jle
iret
or
aas
movsl
ss
dec
mov
popa
lock
pop
pop
or
mov
jbe
mov
fdivl
push
jmp
add
orb
pop
dec
add
pop
sbb
adc
jge
jl
mov
cmc
and
inc
gs
mov
xor
mov
xchg
or
adc
adc
mov
fptan
cmp
pop
push
lods
sahf
cmpsb
inc
xor
fisttps
lds
pop
lods
outsb
mov
std
int3
sub
mov
popf
mov
inc
dec
mov
sub
push
adcb
jo
adc
and
iret
push
fstps
jg
dec
icebp
data16
call
mov
mov
repnz
xor
cli
sahf
inc
pop
cltd
fisttps
cmp
cs
outsb
ret
out
push
xchg
imul
lahf
ja
sbb
loope
fwait
inc
jbe
orl
ja
and
movsl
or
mov
cmc
sub
dec
aad
sbb
add
xchg
add
es
inc
inc
into
dec
jb
xchg
daa
aam
xchg
popf
js
sub
dec
adc
add
inc
sbb
mov
test
jmp
idivb
pmulhuw
je
xchg
addr16
arpl
jbe
mov
xchg
and
sub
fucom
xchg
adc
stos
or
lds
adc
test
loop
adc
iret
xlat
sub
adc
mov
ret
dec
cwtl
cmp
pop
mov
lcall
adc
out
leave
sbb
dec
and
cld
jno
jp
fadds
cmp
pop
roll
lock
and
repz
adc
mov
enter
in
out
adc
scas
push
pop
xchg
jbe
xor
and
xchg
adc
cmp
xchg
jmp
or
decl
push
ds
jne
sbb
aam
enter
pop
movsl
mov
dec
or
mov
xchg
and
adc
mov
clc
sti
mov
pop
and
cmp
dec
mov
push
or
test
xlat
ja
xchg
mov
sub
and
push
inc
mov
fildll
inc
xor
sti
addr16
jbe
jns
push
aad
ja
sub
cltd
mov
xor
sbb
pop
or
faddl
push
insb
rorl
out
pop
pop
insb
add
inc
dec
loop
xlat
js
lods
fimuls
cltd
cmpsb
cmpsl
jbe
adc
int3
hlt
jle
mov
jb
xchg
jno
pop
in
dec
enter
out
and
mov
lcall
in
push
add
js
outsl
add
sub
fldenv
pop
repz
cmp
push
loop
xchg
push
jg
pop
sub
jb
jmp
and
mov
test
mov
outsb
adc
fwait
mov
rolb
popa
sub
out
pop
es
sub
pop
pusha
sub
xor
dec
in
les
movsb
and
scas
pop
mov
xor
add
xor
xchg
sahf
sub
xchg
mov
lcall
sbb
push
nop
out
cmp
inc
cmpsb
sbbl
mov
insl
adc
ss
stc
sub
pop
ss
aam
cmp
es
in
and
arpl
aam
and
jbe
push
sbb
arpl
mov
push
mov
pop
sub
movsl
add
pop
bound
add
bound
aas
dec
pop
into
mov
cltd
cmp
int3
outsl
pop
xchg
insb
fidivrs
sbb
mov
jno
pop
xor
cmp
je
outsb
adc
outsb
lahf
pop
aaa
mov
jecxz
push
repnz
pop
adc
icebp
dec
push
cmp
daa
loop
and
pop
dec
jmp
shll
stos
out
pop
mov
push
push
fadd
hlt
adc
jbe
mov
add
pushf
mov
pop
test
sbb
lret
cmpsb
andl
inc
out
cwtl
jno
cmp
xchg
inc
popa
clc
bound
sti
inc
jp
jp
jae
mov
cmp
xor
push
and
aam
push
dec
inc
xlat
je
arpl
inc
xchg
fisttpll
aad
pop
inc
xlat
movsb
stc
pop
push
clc
cli
dec
dec
fcmovbe
push
mov
ljmp
mov
movsl
outsl
adcb
jbe
sbb
mov
sahf
cmp
sbb
arpl
fdivl
pop
push
ret
xlat
mov
scas
push
call
fwait
sub
roll
pop
dec
ret
repz
js
sti
cmpsl
js
sbb
adc
push
or
sarb
stos
and
or
pushf
in
sarl
pop
pop
nop
push
shrl
in
cltd
leave
pop
out
int
mov
mov
xor
out
push
sub
and
push
cltd
xchg
inc
fcoml
sbb
sub
jne
mov
lds
out
mov
mov
or
mov
mov
pop
ret
pop
cmp
fidivrl
scas
mov
cmpb
mov
hlt
ret
mov
ja
sar
int3
cltd
xchg
jp
testb
push
pop
and
lock
insl
mov
push
rol
aad
pop
jecxz
push
mov
mov
outsb
inc
jnp
xchg
addr16
jp
mov
add
push
or
pop
or
cmp
jnp
in
lods
loope
testb
and
dec
xchg
test
jbe
dec
dec
std
adc
cwtl
cmp
push
das
xchg
mov
push
pop
xor
push
pop
inc
xor
inc
popf
cmp
and
add
lret
xor
add
fwait
sarl
jg
adc
cli
adc
adc
xor
popa
fcmove
insb
xor
sub
lret
imul
sbb
jae
outsb
stos
ja
aaa
sti
in
loope
xor
jae
or
add
fimuls
popf
movsl
repnz
cmp
stc
rcrb
cmp
inc
cli
into
lds
fmuls
xchg
jo
test
jecxz
push
adc
out
lahf
push
jg
push
addr16
cmpsb
inc
add
rcll
push
cmpsl
sub
cmp
mov
cmc
mov
repz
add
fwait
inc
cmp
sub
xchg
push
mov
mov
pushf
push
call
imul
testl
dec
jae
inc
aam
adc
xor
push
fcmovb
adc
sub
sbb
push
fnsave
xchg
mov
scas
dec
testl
sub
inc
push
stc
sub
outsl
mov
push
or
xchg
enter
cmp
mov
sub
es
jl
pop
lahf
daa
xchg
jnp
jne
into
gs
scas
fwait
xchg
lret
in
fdivrl
int
xchg
xchg
add
dec
test
scas
xchg
dec
xlat
movl
lods
jmp
mov
das
ret
mov
jae
dec
xor
xor
pop
xchg
pop
mov
mov
mov
sarb
dec
std
mov
test
push
sub
sbb
pop
add
mov
mov
cmp
js
ja
sbb
or
pop
jecxz
ds
jge
cmc
inc
out
push
ja
std
push
shll
sub
jae
iret
add
loopne
push
cld
and
dec
mov
pop
loope
and
pop
fnstenv
xchg
fwait
cmp
sub
mov
arpl
or
out
lea
sar
cmp
inc
sbb
cmp
cli
xor
in
enter
push
push
add
lcall
add
shlb
negl
shll
and
mov
testl
dec
imul
loope
add
lea
ficoms
inc
add
xor
mov
mov
insb
push
pop
or
mov
daa
inc
ljmp
jo
out
sbb
in
inc
iret
jne
or
xorb
insb
pop
test
fwait
pop
daa
ret
cmp
cmp
sub
arpl
or
sbb
lahf
mov
icebp
popa
xchg
xor
pop
dec
mov
ds
andl
mov
inc
icebp
cmp
push
addb
sbb
mov
ret
pop
add
dec
es
push
sahf
cld
cmp
sbb
fidivs
push
fisubrs
js
es
popa
test
inc
add
pop
cld
jle
inc
add
mov
aad
sbb
adc
xchg
dec
jne
fs
cmp
adc
mov
in
fs
out
mov
lds
jl
mov
pop
icebp
fsts
mov
icebp
pop
push
jl
jl
cs
je
orb
aas
enter
inc
fnstsw
or
dec
mov
push
aas
mov
rclb
pop
imul
add
fwait
adcl
mov
shlb
xor
test
sub
and
mov
arpl
add
popa
insb
add
aas
test
mov
sbb
pop
les
call
add
daa
fldenv
fwait
stc
aam
mov
or
out
sub
outsl
push
cmpsl
rol
daa
add
or
mov
addb
fistl
jbe
mov
movb
adc
adc
or
jno
idiv
in
imul
push
int
lret
pop
jg
lret
sub
jle
movsl
inc
sahf
jl
mov
xor
je
mov
push
addr16
inc
aad
sarb
mov
push
loope
fildl
out
mov
test
popf
lret
stos
xchg
add
fsubs
jnp
and
sbb
pop
test
iret
pop
lock
push
sbb
sub
cmpsb
mov
lea
jle
mov
fidivs
rcrb
sub
xchg
sti
inc
pop
repz
repnz
enter
in
pop
ret
lods
jbe
repz
sbb
sub
movsl
xchg
sti
notb
dec
mov
or
sub
cmp
push
mov
pop
data16
sbb
imul
cmc
cwtl
sbb
jecxz
jne
pop
cmpl
divb
mov
jg
popf
popa
bound
mov
testb
xor
pop
dec
or
outsl
mov
decl
mov
sub
add
dec
int
ffreep
mov
xor
aam
adc
sbb
mov
lds
xchg
sub
lock
leave
lock
es
rcrl
cltd
int
xchg
lret
dec
adc
xchg
inc
xchg
mov
test
test
mov
insb
xor
sbb
sbb
mov
popa
or
xchg
or
mov
jae
movsl
movsl
outsb
mov
hlt
shrb
mov
subb
ja
push
fdivl
in
sub
mov
test
jecxz
mov
adc
push
les
jge
push
push
push
mov
popa
pop
sub
loop
shlb
push
pop
in
jno
ds
mov
mov
mov
cld
dec
lods
fnstsw
push
jae
ret
push
das
xchg
inc
pop
or
add
sti
scas
les
testl
dec
sub
addl
sti
mov
imul
inc
enter
sbbb
xchg
fcoms
addr16
jge
inc
adc
xchg
push
js
pusha
aam
fwait
idivl
ret
dec
outsl
xchg
cs
lock
jp
js
mov
mov
mov
jbe
into
xchg
mov
xchg
push
nop
movsb
add
das
pop
into
lods
mov
test
add
shll
repz
andl
insb
out
jp
jmp
imul
xchg
dec
pop
mov
mov
mov
std
test
js
fidivrs
popa
add
xchg
sti
icebp
mov
loopne
push
inc
dec
push
ljmp
aam
test
mov
insb
nop
mov
jnp
popa
mov
sub
inc
iret
fldl
dec
jns
movsb
in
and
pop
clc
cmp
mov
fwait
lea
add
ret
pop
repz
xor
ljmp
xor
shrb
sarb
scas
mov
and
fisubrs
dec
lcall
xchg
iret
xchg
lods
inc
and
sub
lods
rcl
push
jnp
test
scas
lret
mov
pop
mov
xchg
iret
int3
sub
jmp
not
mov
into
loopne
fstps
mov
sub
sub
in
or
xchg
xor
bound
or
rcrl
cmc
loop
push
jne
adc
xchg
js
mov
sub
xchg
hlt
jne
and
test
mov
mov
lret
sub
enter
cmp
or
cmpsb
aaa
movsb
stc
in
xor
or
pusha
and
ficoms
fists
imul
cmp
jmp
js
mov
xor
jg
test
pop
lahf
les
mov
call
inc
add
jb
test
dec
jle
fiadds
sti
test
sbb
in
or
addr16
jmp
pop
cld
hlt
iret
movsb
insb
push
test
mov
xlat
inc
es
cmp
cld
or
cmpxchg
push
inc
loope
das
loopne
push
or
lret
cmp
xor
andl
repz
pop
stos
popa
lcall
cmp
jne
adc
mov
or
push
mov
xor
pusha
not
push
and
push
cmpsb
xchg
in
mov
in
mov
dec
sub
and
mov
inc
ss
jg
aaa
repz
ljmp
inc
insl
sub
fiaddl
flds
push
insb
cmp
and
push
sbb
cmp
pop
nop
fcmove
push
xchg
jns
paddb
and
pop
ret
mov
jecxz
add
xchg
insb
xor
in
push
xchg
leave
out
push
mov
lret
clc
pop
fstpl
inc
lret
dec
sbb
repz
adc
mov
xchg
outsl
xchg
outsb
inc
xchg
out
jge
pop
fdivs
pusha
push
push
inc
shll
popa
cltd
insl
cmp
push
insl
fsubr
xchg
cwtl
jno
sbb
js
mov
fnsave
movsl
push
les
das
mov
outsb
cmp
cmp
xor
jl
imul
pop
outsl
sti
dec
mov
stc
lock
mov
in
push
push
int
mov
jae
aad
inc
push
shlb
cmpsl
and
cmpsl
clc
jmp
mov
sub
mov
enter
mov
rep
nop
dec
lret
fmulp
fwait
xchg
sbb
dec
adc
daa
fidivrl
jge
cli
iret
leave
leave
data16
cmp
out
clc
lock
pop
outsl
in
xor
in
adc
jnp
notl
paddw
lret
cmp
xor
test
jo
add
xchg
and
push
dec
aaa
push
sbb
andb
pop
fimuls
les
xor
cmp
mov
push
insb
aaa
or
sti
dec
ret
sbb
jne
data16
in
je
jbe
rorl
mov
inc
in
cwtl
mov
in
js
out
jl
mov
jne
mov
popa
shlb
push
jmp
jo
mov
xor
pushf
loop
out
popa
xchg
fistps
sub
sbb
leave
cmp
pop
pop
lods
pop
mov
xor
test
faddp
js
lahf
jp
cmp
sbb
or
imul
mov
jmp
xlat
mov
cmp
mov
dec
imul
sti
mov
mov
push
xchg
push
cmp
xchg
adc
cwtl
imul
push
pop
in
pusha
das
test
sti
or
lret
jbe
inc
lcall
xor
mov
sbb
sbbl
xor
fwait
mov
inc
mov
dec
int
cmp
inc
push
je
mov
dec
or
nop
lods
cltd
test
dec
mov
es
push
pop
mov
sbb
mov
mov
pop
cmp
sub
push
mov
pop
sub
xor
push
or
xor
mov
mov
orl
cmp
popf
cmp
push
inc
mov
pop
sbb
add
test
int3
inc
dec
test
subb
sahf
push
jmp
adc
clc
hlt
mov
mov
int3
call
rcrb
mov
daa
push
push
imul
xor
aaa
push
push
jo
insb
test
pop
rol
mov
sub
pushf
dec
adcb
test
sbb
mov
xlat
dec
adc
and
in
mov
int3
fsubrs
mov
adc
imul
mov
addr16
pop
shll
inc
fiadds
mov
lods
cwtl
das
mov
inc
add
lahf
fldenv
sbb
cwtl
mov
roll
pop
jb
sub
or
pop
sar
imul
push
stos
inc
cs
int
cltd
push
add
movsl
les
inc
iret
mov
push
xchg
jnp
inc
iret
and
add
sub
or
push
pop
jp
daa
xchg
cmpsl
dec
sub
jb
mov
rclb
mov
cmpb
pop
fs
cmp
xor
jae
shll
sti
icebp
mov
jp
jmp
mov
xchg
outsl
ret
fs
xchg
sub
mov
adc
mov
lods
int3
clc
jmp
push
rcr
cmp
mov
push
jmp
push
arpl
bound
xor
dec
nop
mov
xor
xchg
xor
sbb
lock
movsl
pop
jo
je
sub
inc
ss
cld
sbb
movsb
and
add
jg
stc
hlt
jl
mov
test
mull
test
dec
inc
mov
cmp
xor
std
in
lods
jb,pn
stc
xor
repz
cli
bound
push
jg
jmp
scas
ljmp
jno
inc
mov
pop
scas
inc
adc
push
or
ljmp
or
mov
lea
adc
xchg
pop
fcom
jo
mov
stc
and
insb
dec
imul
cwtl
push
mov
push
lds
pop
les
rcll
jmp
xchg
stos
ret
test
mov
sbb
out
imul
cmp
mov
fmull
into
repz
icebp
and
in
jg
andl
insl
mov
ja
aaa
lods
fmuls
inc
sbbb
xchg
loop
push
rcr
xchg
mov
flds
das
lcall
dec
mov
jp
popa
fcompl
ja
jo
cltd
or
ret
movsb
inc
js
dec
xor
insl
push
add
jg
xchg
inc
push
std
jmp
pop
loopne
aas
jne
sbb
jbe
movsl
push
test
add
loopne
nop
aas
xchg
imul
lea
ss
xchg
out
das
adc
repnz
sub
pop
nop
mov
jbe
cli
cltd
mov
sti
mov
ret
leave
mov
mov
sub
test
inc
or
mov
decb
cld
fucomi
jnp
ficompl
pop
mov
fimull
ret
cmp
dec
add
repz
scas
daa
pop
xor
call
mov
hlt
inc
rorb
cli
mov
lret
mov
sub
push
or
or
inc
rol
sub
gs
jl
jns
loop
jl
mov
out
je
icebp
popa
mov
inc
pop
jns
push
ja
pop
mov
fsubrl
xchg
jmp
xchg
xor
stos
aad
test
fidivs
pop
sbb
dec
mov
cltd
adc
mov
sbb
mov
sub
adc
out
aam
or
cmp
fisubs
mov
dec
roll
jns
data16
orb
stos
inc
daa
jo
shll
movsb
inc
loope
xchg
xorb
nop
mov
cltd
push
stc
loopne
push
lds
xor
icebp
xor
aad
or
dec
sbb
xchg
dec
mov
jg
shrl
mov
jns
adc
cmp
sbb
lods
add
ja
es
sub
add
clc
enter
xchg
add
daa
cmp
add
push
ljmp
and
add
inc
cmp
movb
movsb
je
repz
aas
adc
sub
mov
rcl
xchg
cmp
popa
popa
xchg
in
aaa
mov
push
sbb
mov
insl
jg
xor
mov
popf
push
fsubr
enter
jae
loope
xor
push
mov
in
push
mov
sti
les
imul
adcb
cmp
inc
cs
pop
jae
in
push
dec
lds
add
mov
xchg
and
xchg
adc
mov
sbb
push
outsb
sbb
push
and
mov
je
adc
shrl
sbb
mov
push
jb
icebp
sub
pmaxsw
arpl
les
aad
xor
fdivs
dec
ret
jb
xor
jno
lret
je
into
cmp
shll
int
mulb
sarb
inc
xchg
fwait
push
xor
inc
in
lods
clc
sbb
repnz
jbe
enter
fadds
adc
fldl
imull
ss
mov
xor
gs
adc
insl
in
sbb
xlat
mov
adc
add
bound
push
add
push
leave
sub
ror
pop
mov
cmp
add
sub
mov
mov
lods
xchg
mov
and
mov
cmp
ljmp
pop
mov
adc
hlt
pop
fwait
sti
inc
es
pop
sub
aas
movsl
roll
ss
std
and
add
and
jg
push
repnz
pop
shlb
and
imulb
inc
les
test
dec
into
cmp
test
dec
cmp
pop
roll
add
mov
or
dec
mov
jae
push
movsb
pushf
sbb
add
faddl
cmc
call
mov
loop
es
add
cmpsb
ds
and
push
loop
mov
rolb
jmp
data16
cltd
mov
js
sub
and
xor
or
sbb
dec
ds
and
push
repnz
lods
xchg
push
ret
push
add
leave
stos
sti
jp
dec
sahf
xchg
adc
xchg
xor
ds
xchg
xchg
aam
dec
faddl
je
lds
pop
or
jno
xor
xor
mov
out
jae
fistl
loope
int
or
mov
mov
xchg
sarl
push
and
mov
rorl
in
and
inc
insl
cmp
add
loop
jb
dec
cmp
mov
and
in
mov
shll
push
addl
shlb
add
sbb
inc
bound
adc
aas
lret
jg
jae
sbb
sbb
sbb
imul
lcall
and
mov
ds
rcr
xor
icebp
and
and
pop
ret
dec
mov
dec
fwait
jnp
sti
xchg
dec
dec
push
sbb
lods
shrl
pushf
cmp
push
ljmp
fiaddl
pop
outsb
dec
movsl
loop
sub
jmp
add
pop
shrb
mov
jnp
icebp
inc
and
mov
clc
cmpsb
cli
mov
dec
dec
sub
push
pop
mov
sti
cmpb
mov
jmp
dec
cmp
das
ss
jl
mov
mov
cmp
outsb
in
aam
xor
pushf
addr16
insb
xlat
xlat
or
clc
mov
lds
cmp
push
clc
gs
xor
lods
xor
xor
sbb
leave
jo
mov
test
push
cmp
out
xchg
cmp
mov
orl
mov
ja
aam
add
rolb
xor
fs
fs
mov
mov
jae
cs
lods
fbstp
jmp
sbb
push
mov
nop
sub
lcall
sti
cwtl
add
aas
or
rclb
push
sub
xorb
xchg
out
sub
jae
pop
lods
sbb
push
add
jg
add
aas
xlat
xchg
inc
mov
cmp
lret
movsb
js
les
loopne
mov
ds
mov
pop
sub
ret
xor
xorl
cmp
test
and
stos
xchg
leave
jo
mov
lcall
xchg
ja
mov
icebp
int3
aam
fwait
call
fidivl
lods
sub
cmp
push
shrb
aaa
sbb
jge
push
hlt
rol
stos
les
in
das
lock
xchg
inc
ss
imul
fcomi
aam
jge
mov
add
dec
ds
and
cltd
mov
push
mov
adc
mov
inc
pop
cmp
shrb
sarl
xchg
cmpsb
stos
scas
fnsetpm(287
test
aam
movsl
test
pop
neg
cmp
xchg
ja
scas
out
add
adc
sub
cwtl
lds
pop
int3
push
int
mov
or
dec
push
stos
ljmp
aaa
push
ret
sbb
xchg
xor
or
xchg
jb
cs
insl
lea
inc
iret
jg
outsb
ja
aad
and
push
ss
and
js
and
outsl
inc
aas
jbe
out
dec
xor
sti
sbb
mov
cmp
xchg
stos
mov
mov
mulb
sub
mov
movsb
mull
fiaddl
cmp
add
sbb
push
xor
in
lods
mov
scas
sbb
sub
rcrb
insb
cmp
sbb
loopne
pushl
jnp
push
mov
test
mov
push
dec
imul
mov
xor
in
mov
jb
ret
shl
jb
add
jle
adc
and
add
loopne
or
inc
push
scas
cltd
xor
orb
flds
ds
jae
adc
loope
jno
clc
clc
mov
and
or
push
cmpsb
xorb
push
enter
clc
mov
dec
iret
cmp
fs
into
cmc
dec
popf
pop
dec
sbb
jmp
sti
or
xchg
dec
scas
addb
cmp
ljmp
loop
lds
sbb
mov
mov
mov
pop
push
in
xlat
mov
cmp
pop
and
xor
sbb
sarb
out
push
mov
inc
faddl
or
roll
sub
or
and
xchg
add
jbe
and
sbbl
push
pusha
sub
jge
xchg
mov
mov
out
pop
rclb
addl
jecxz
int
hlt
into
test
mov
mov
and
syscall
pop
cmp
es
loopne
scas
js
insl
aam
je
xor
in
into
jb
andb
jbe
push
inc
loopne
cltd
push
movsl
jbe
iret
outsl
push
dec
fdivs
cld
cmp
stos
lcall
xor
lahf
inc
push
jecxz
mov
mov
scas
jmp
hlt
in
lods
stos
mov
in
xchg
mov
jb
or
jns
sti
and
xchg
push
xchg
out
inc
sti
ret
cltd
data16
push
sub
in
mov
jbe
mov
cld
pusha
cmp
jnp
fwait
xchg
and
aas
int3
sbb
mov
xchg
sbb
mov
push
xchg
repz
sbb
cltd
add
daa
and
mov
arpl
dec
int
sub
xchg
fcoms
and
add
push
sbb
jl
pusha
insb
cmpsb
in
xchg
jg
aaa
data16
push
adc
pop
ja
and
mov
push
out
xor
test
lcall
cmpb
icebp
imul
add
imull
mov
or
out
lods
test
sahf
daa
add
jns
add
xchg
pusha
jnp
cmp
out
daa
in
stc
adc
push
inc
mov
mov
mov
pop
mov
fs
sub
adc
push
rorl
push
push
mov
shlb
xor
dec
mov
push
mov
pop
lcall
scas
xchg
lock
jl
xchg
out
sub
xchg
popl
xorl
or
call
sbb
inc
dec
mov
xchg
sbb
adc
loope
stc
and
mov
pop
inc
arpl
mov
les
arpl
je
aas
lea
inc
inc
inc
dec
loop
arpl
es
stc
and
or
push
sti
sbb
cmp
jl
or
test
push
pop
mov
mov
dec
pop
xor
sbb
dec
mov
pop
jecxz
lock
mov
pop
mov
sar
negb
sbb
sbb
cmp
cmp
idivb
cmp
xor
xchg
in
and
and
movsb
lds
inc
cmp
mov
mov
mov
xor
sbb
mov
sub
insl
sbb
sbb
shll
xor
xchg
in
and
and
movsb
movsl
cmp
push
or
push
insb
cmp
push
test
in
aaa
in
mov
fs
xor
bound
and
aaa
pusha
push
fnstenv
ret
bound
or
or
jno
sbb
mov
leave
movsb
icebp
dec
scas
push
sbb
aad
mov
jno
popf
mov
xor
and
testb
jnp
cmp
shlb
sbb
ss
cmp
lcall
sub
out
loope
stos
stc
xchg
lret
clc
sub
call
lock
stc
push
or
inc
stc
pop
push
jg
stc
sarl
movsl
sbb
dec
sub
ret
or
and
les
dec
dec
mov
adc
jmp
jno
add
add
cs
cmpsb
cli
insl
les
out
jns
sub
cmc
fwait
xchg
mov
out
fisubs
stos
xor
xchg
cwtl
add
sub
mov
pop
adc
out
and
fs
stos
sbb
aam
divl
dec
int3
inc
mov
sbb
push
and
lret
mov
jge
push
sub
stc
mov
push
pop
xor
lods
pop
push
sub
cld
into
ss
add
clc
or
and
test
jae
and
into
lahf
sti
call
pop
or
adc
dec
dec
imul
mov
pop
sub
sbb
pop
cmp
adc
xchg
shll
adc
cmpsb
mov
faddl
sub
dec
shll
fwait
pop
mov
xor
enter
jno
xor
pop
mov
pop
es
jns
lock
ss
xchg
jns
xchg
in
pop
fs
data16
inc
xchg
add
push
and
xchg
cmp
clc
ds
and
test
es
jge
mov
dec
push
aaa
pop
insl
or
out
add
lret
mov
sub
mov
sbbb
mov
push
push
fwait
sub
clc
mov
lret
jbe
scas
push
mov
lret
xchg
xor
mov
lds
rorb
pusha
mov
jg
outsl
ret
call
neg
mov
idiv
mov
jecxz
icebp
scas
sti
ljmp
xlat
adc
pop
mov
cmp
mov
scas
test
rolb
enter
sub
lret
push
mov
jl
ret
out
ss
xchg
insl
adc
scas
mov
xchg
adc
mov
sbb
xor
ljmp
sbb
xor
dec
stc
cmp
push
pop
push
hlt
lods
pop
sub
push
push
mov
lcall
ss
out
int3
xor
and
jnp
loop
dec
push
pop
lods
int3
xchg
adc
mov
test
aas
inc
cmp
fisttpl
lret
xor
jns
xchg
pop
cs
mov
dec
mov
repnz
imul
mov
mov
clc
loop
mov
lods
pop
pushf
push
or
mov
mov
es
xchg
sbb
ret
pop
jo
pushf
mov
mov
pop
adc
lods
outsb
clc
out
popf
outsb
inc
jo
adc
xor
xlat
mov
mov
jmp
outsb
idivl
inc
xchg
xchg
adc
mov
pop
pop
cmpsl
popa
scas
sub
ret
stos
mov
mov
mulb
int3
jp
jns,pt
jmp
inc
sbb
inc
sbb
dec
xor
mov
jp
insb
xor
sbb
rorl
xchg
mov
idiv
fcompl
xor
xor
push
mov
mov
les
mov
xchg
nop
stc
or
shlb
lea
dec
mov
cmp
sub
cmp
push
scas
xchg
aam
in
shlb
lret
jge
int3
bound
sbb
push
mov
inc
pusha
mov
scas
movsl
pop
mov
cmpsl
movsl
pop
mov
nop
daa
sub
sbb
bound
sti
cwtl
scas
mov
inc
std
push
aaa
push
outsb
xor
mov
mov
xlat
mov
inc
xor
or
jbe
push
cld
fldcw
ljmp
outsl
ja
and
lret
mov
je
ficoms
cmc
pushw
in
xor
pop
into
int
sub
movl
cmpl
mov
test
imull
push
and
dec
in
in
mov
or
movsl
inc
and
cmp
imul
xchg
pop
ljmp
jp
hlt
lret
dec
pusha
xor
add
dec
mov
add
sbbb
cmpsl
js
gs
ret
and
test
andb
fwait
vpmacsdqh
jno
dec
cmp
das
rclb
aaa
leave
mov
in
mov
nop
movsb
sbb
mov
or
jl
sub
cwtl
jmp
adc
jnp
sub
add
dec
cli
rcrb
mov
repz
inc
push
test
sbb
and
mov
jae
mov
inc
cmp
outsb
sbbb
iret
fsubl
push
xchg
mov
pop
cmpsl
mov
ret
or
bound
int
cld
pusha
pop
out
jb
and
std
jbe
mov
int3
jg
mov
sbb
and
les
cmpsl
lds
mov
dec
pop
mov
out
inc
push
mov
xor
dec
xchg
fisubs
in
sbb
cmp
sub
inc
lcall
xchg
cwtl
dec
fdivl
enter
inc
xchg
push
jo
mov
out
xor
call
stos
lods
subb
stos
fst
jg
cld
aad
int3
xor
out
rcrl
fdivrl
or
mov
fsubr
xchg
lahf
sbb
sub
mov
ss
lds
int3
lea
mov
mov
push
mov
adc
shll
push
aam
jbe
in
fwait
dec
add
jnp
and
push
cld
mov
rcrl
int
mov
xor
es
out
out
not
fdivrs
lods
inc
shrl
ret
sub
xor
sbb
mov
sarl
repnz
mov
xchg
jmp
dec
scas
and
jecxz
xor
out
ds
arpl
int3
stos
push
xchg
xchg
inc
mov
inc
sbb
leave
movsl
push
dec
punpckhdq
js
mov
clc
test
adc
orl
pop
xor
xchg
dec
jg
cltd
xchg
mov
lds
sbb
xchg
xor
mov
in
divl
and
cmpsb
outsb
rol
push
icebp
out
sub
mov
lcall
inc
mov
jne
cli
nop
push
aam
popf
sub
mov
jb
pop
and
sbb
lods
add
hlt
sub
das
push
fildll
pop
lea
out
imul
cmpsb
xor
or
pop
inc
flds
cltd
or
and
aam
xor
cli
adc
mov
push
stos
gs
push
ljmp
dec
js
jp
gs
je
std
lret
xlat
out
mov
push
push
lcall
sub
fisubrs
in
ret
sbb
push
pop
aad
inc
sbb
push
hlt
push
lret
shlb
icebp
mov
xor
adc
push
rorb
xchg
hlt
add
daa
cld
push
jp
dec
or
scas
dec
mov
mov
fildll
shlb
xchg
stos
add
mov
and
lock
aad
and
jg
pop
sbb
push
out
xchg
ljmp
test
fwait
outsl
out
shl
push
and
jmp
je
lds
jbe,pt
or
in
repnz
pop
stc
bnd
lods
sbb
adc
push
js
out
pop
les
icebp
fiadds
std
mov
sbb
fwait
repnz
aaa
mov
loopne
outsb
ljmp
jmp
repnz
cmp
sbb
xor
lds
sub
cmp
aad
lret
xor
jbe
in
ror
xchg
and
adc
pop
int3
clc
add
mov
cmpb
addb
xor
jne
sub
arpl
or
push
lods
adc
das
add
sub
xchg
mov
dec
stos
test
jbe
mov
je
fsubrl
cwtl
mov
stos
lcall
sub
or
and
in
mull
push
inc
arpl
add
adc
jne
imul
inc
clc
mov
inc
or
add
and
xlat
sub
ret
push
ds
sub
incl
shlb
adc
inc
lret
faddl
push
stos
clc
pop
cmp
add
icebp
adc
sbb
sub
adc
pop
or
sbb
nop
fists
hlt
pop
fcompl
xchg
repnz
mov
sbb
in
add
mov
xor
sub
cmp
out
push
cwtl
scas
or
jecxz
xor
xor
imull
test
add
outsb
icebp
inc
subb
arpl
iret
mov
pop
test
jle
int
cmp
sbb
mov
dec
dec
cwtl
inc
pop
or
and
or
cli
mov
cmpl
mov
data16
in
fcoml
movsl
outsl
hlt
popf
lods
dec
adc
pop
xor
adc
clc
mov
push
enter
stos
or
push
or
xchg
pop
ds
pop
and
fdivrs
stos
sbb
stos
loope
sub
xchg
mov
subb
fcmovnbe
jb
test
scas
loope
mov
sti
out
cmp
add
insb
jne
mov
add
mov
pop
dec
fdivp
fildll
cmc
test
pop
mov
and
test
push
loop
bound
pushf
or
lret
adc
std
outsb
pop
cld
xorl
pop
pushf
je
ja
inc
adc
sub
cmc
sub
enter
push
pop
inc
addr16
inc
int
ret
push
jl
add
fistpll
stc
push
jmp
cmp
cwtl
sub
and
arpl
pop
xchg
inc
pop
movsl
data16
push
add
add
lock
or
lods
std
stos
pop
pop
outsl
add
imul
push
push
jns
scas
imul
adc
vpunpckhbw
sarl
and
xchg
cmp
popa
sbb
and
push
xchg
repz
out
dec
sub
mov
in
mov
nop
push
dec
add
ja
or
jo
fdivl
sub
add
nop
popa
data16
and
fisubl
or
jmp
add
movsl
in
or
pop
stos
add
ja
jno
test
adc
mov
imul
inc
cld
lret
scas
inc
ret
in
and
aaa
xchg
push
lcall
adc
cmp
js
ljmp
mov
imul
xchg
jg
ficoms
pushf
andl
or
scas
and
cmpsl
sub
sti
mov
xor
pop
les
mov
test
ret
data16
jp
and
pop
lcall
mov
cmp
leave
dec
lock
les
adc
xchg
pop
add
mov
psrad
or
xor
dec
xchg
or
mov
dec
in
test
icebp
pop
jle
mov
subl
pop
cwtl
push
arpl
rol
push
pop
adc
xchg
lds
jno
and
fstl
mov
fwait
movsl
adc
jl
mov
cmpl
out
push
dec
int3
mov
mov
mov
jae
pop
dec
mov
adc
xor
mov
xchg
and
sets
mov
jno
xor
add
fstl
inc
mov
lods
fcoml
mov
cwtl
ljmp
push
jg
jnp
sub
sbb
mov
cld
jo
aas
mov
pushf
jecxz
xchg
add
mov
mov
loopne
pop
arpl
shll
sub
out
xchg
or
inc
imul
jge
inc
and
xchg
push
xor
xor
je
xchg
fwait
sub
adc
popa
cltd
pop
cmp
psubw
test
int3
pop
popf
rol
pop
jno
mov
pop
add
popa
xchg
mov
or
int3
sti
rolb
fisubl
je
dec
nop
dec
push
rorl
add
fwait
in
xor
xchg
ja
inc
mov
jb
imul
jl
mov
dec
cli
in
imul
jge
push
leave
inc
xchg
push
repnz
pop
jge
shrb
cli
adc
dec
xchg
sbb
dec
sub
dec
dec
dec
xchg
popf
pop
push
sahf
mov
iret
dec
pop
lock
lcall
iret
dec
lcall
cmp
pop
mov
pop
jb
je
sbb
mov
icebp
popa
outsb
pop
push
cmp
ret
rclb
clc
repnz
add
fcoms
jle
mov
xchg
sbb
fadds
mov
test
cmpsl
mov
sbb
fstpl
test
dec
faddl
mov
cwtl
ffree
xor
cmp
and
jle
test
mov
mov
rcrb
cmpsb
aas
movsb
in
xchg
xchg
fbstp
and
jbe
jge
loopne
loop
inc
test
jge
mov
mov
inc
pop
mov
xlat
inc
loope
lret
int
in
gs
cwtl
test
lret
jns
adc
movsb
rcrb
jo
xchg
xchg
daa
mov
addl
add
call
and
mov
or
cmpsb
dec
jp
xchg
rol
es
pop
fadd
outsl
movsb
sbbb
lock
pop
in
push
in
add
dec
popf
lds
and
add
notl
out
aam
out
lds
adc
mov
jge
filds
jnp
in
fcoml
sbb
rorb
mov
or
mov
and
add
jae
pop
mov
xchg
mov
inc
stc
mov
scas
ret
fcoml
sbb
cmp
push
mov
push
shlb
inc
in
mov
fcomp
dec
add
movsb
mov
icebp
addb
mov
xor
sbbb
pop
sub
add
mov
pop
xchg
xchg
xlat
das
stos
adc
sbb
and
nop
jns
lcall
mov
roll
and
mov
jecxz
clc
push
mov
xchg
outsl
add
push
arpl
ret
adc
pop
test
sahf
xchg
loop
in
mov
pop
fs
adc
xchg
fwait
iret
movsl
and
dec
mov
les
xchg
sbb
xor
push
sub
and
fwait
les
cwtl
mov
sbb
xchg
fbld
fsubs
es
ds
jns
pop
cmp
pop
dec
mov
add
mov
xor
lret
js
add
push
fsubl
mov
or
xor
jl
arpl
lock
inc
in
ljmp
adc
test
das
or
shlb
mov
sbb
test
jecxz
xchg
iret
pop
inc
mov
dec
rorb
pop
sar
and
inc
mov
mov
cwtl
std
stc
jb
xor
and
out
jo
imul
in
adc
jnp
imull
or
jns
cwtl
add
movsb
insl
insl
insb
sbb
in
cwtl
sarb
ja
ret
cli
or
fstpl
dec
xchg
dec
loop
cld
and
jo
mov
fisubl
xchg
mov
mov
mov
cltd
xlat
or
int
mov
mov
jo
or
mov
sbb
in
bound
push
int
pop
popf
lret
mulb
jmp
sub
repnz
shl
push
test
aad
addr16
mov
xor
inc
mov
outsb
sub
add
mov
push
xor
push
jmp
jbe
xchg
push
add
mov
mov
js
out
mov
aaa
jl
pop
sbb
adc
pop
jns
gs
in
fisubrl
ds
leave
subl
ja
ret
sub
jle
es
aaa
or
fstpl
mov
fadd
xchg
movsb
jnp
sub
insl
fadds
fcoms
pop
loope
pop
js
loop
mov
mov
push
ficoml
sbb
sbb
outsb
lcall
test
inc
jno
xor
push
push
push
jns
push
xor
adc
cmpsb
sbb
add
jge
repz
fmull
hlt
and
xor
xchg
outsb
sbb
inc
add
repnz
sub
test
push
dec
mov
pusha
xchg
ret
imul
loope
sbb
pusha
popf
push
adcl
inc
sti
or
xchg
rcrb
mov
mov
insb
test
ja
jmp
cmp
insl
lock
rcll
pop
add
das
dec
insb
sbb
push
xchg
es
test
sbb
jnp
xor
jne
lcall
sub
mov
je
popf
adc
into
outsb
out
es
mov
rclb
sub
xchg
insb
and
lcall
jnp
push
cli
jmp
cli
push
xlat
dec
call
syscall
mov
outsb
or
das
and
cmpsb
cmp
cs
fisttps
or
shr
xor
xchg
adc
cli
orb
movb
push
decb
or
repnz
out
cs
shll
test
push
popa
ret
shl
rclb
push
dec
pop
adc
xor
inc
sahf
jno
ljmp
jae
xor
mov
imul
sub
mull
cltd
and
int3
add
inc
or
dec
mov
movsb
push
add
and
cmpsb
in
adc
mov
xchg
sbb
xchg
mov
mov
sbb
aad
ja
xlat
pop
rcr
xchg
mov
clc
adc
lods
inc
mov
dec
stos
add
int3
jns
cltd
dec
add
cld
jle
cltd
jns
aas
sahf
idivl
out
lahf
cmovs
xchg
shr
sbb
in
je
xchg
fnsetpm(287
sbb
mov
cmp
imul
mov
movsl
jle
in
dec
pop
nopl
cmp
inc
out
or
aad
jecxz
in
jne
aam
push
jmp
pop
in
pop
xchg
loopne
les
sub
dec
mov
nop
jmp
in
ror
mov
scas
movb
sti
and
or
mov
xchg
shrl
or
test
push
repz
mov
adc
mov
sub
clc
test
mov
js
or
pop
jl
mov
or
inc
sub
jo
add
xchg
nop
orb
sti
hlt
mov
in
stos
adc
nop
nop
or
cmc
aaa
sub
push
mov
movsl
cmp
cmp
push
repnz
xor
ja
shl
cmp
rclb
push
xlat
loopne
lcall
sbb
dec
fbstp
mov
int
jle
lahf
inc
adc
push
push
flds
dec
lret
and
mov
loopne
pop
jle
sub
jns
sbb
and
sahf
nop
xchg
fistps
lods
and
mull
lock
aad
jno
jmp
jns
xor
lds
adc
inc
add
cmp
push
std
adc
sbb
in
xor
sub
dec
and
fsubrl
jno
mov
add
jg
xchg
sbb
lods
jno
imul
lods
in
ljmp
sub
pusha
in
rorb
mov
pop
lods
jecxz
out
or
sbb
cmp
imul
inc
inc
sbb
dec
sub
pop
loope
cli
sbb
push
sbb
jb
inc
push
test
sbb
xchg
popf
repnz
je
cmpsb
divb
cs
out
lcall
int
call
scas
and
rcl
sbb
mov
shl
clc
cmpsb
or
push
mov
cs
mov
or
adc
in
popa
out
shll
sub
lahf
rcl
sti
leave
push
fimuls
ljmp
cmp
adc
sub
xor
dec
incl
fstps
ljmp
movsb
mov
fimull
ds
mov
fidivrl
in
ja
loopne
push
lock
movsb
mov
push
dec
test
scas
inc
or
mov
das
lcall
mov
dec
or
jne
sub
push
push
lods
test
sbb
scas
pop
mov
cld
cmpsb
in
cwtl
mov
insb
stos
rcrb
xlat
mov
and
int3
sub
mov
sarb
xchg
xchg
in
les
stos
mov
mov
sbb
push
pop
dec
movsl
push
push
adc
inc
dec
push
or
push
sbb
out
dec
or
or
insb
mov
xor
hlt
jo
in
fwait
aaa
rclb
xchg
pop
ret
enter
sarl
das
cmpsb
fdivrl
add
inc
or
movsl
ret
cmpsl
cmpb
ss
ret
arpl
in
ja
cltd
ret
fmull
rorl
cmpsl
cwtl
pop
lods
fnop
xchg
mov
inc
sbb
xor
xor
cs
sub
fucom
fsub
adc
jns
es
dec
jae
adc
jmp
mov
sbb
cmp
pop
fcoms
jb
rcr
fdivs
ss
sbb
inc
loop
mov
inc
jb
mov
in
xchg
sbb
das
repnz
or
sub
into
test
ficoml
push
or
loop
and
stc
push
push
push
inc
leavew
scas
clc
nop
data16
rcrl
rorb
dec
out
clc
sub
sbb
jae
sti
adc
ja
mov
sub
xor
inc
sub
fwait
daa
xlat
add
lcall
pop
and
fcmovnbe
imul
loopne
cmp
ja
cmp
sbb
lret
test
mov
scas
xchg
lahf
push
ficompl
xchg
jb
fwait
xor
cwtl
sbb
xorb
jb
sbb
lcall
xchg
mov
ss
xchg
mov
pop
push
sbb
cmp
push
dec
lahf
in
inc
popf
xchg
jae
jae
daa
mov
addb
xor
jl
xor
negl
or
mov
adc
cmp
out
shll
adc
inc
lods
inc
sub
and
pop
dec
mulb
jle
adc
imul
cmpsl
pushf
dec
push
sbb
or
cmp
std
push
push
fwait
mov
or
add
fisubrs
mov
repnz
lock
cmp
add
cmpsb
aad
adc
sub
mov
pop
int3
add
mov
sub
dec
push
cmp
xor
mov
scas
fiaddl
pop
xchg
add
mov
idivb
std
dec
mov
add
push
testl
aam
mov
cmp
cmpsl
dec
fbld
fildl
jns
push
scas
iret
cmp
int
cmp
fcomps
fstpt
sub
mov
into
pop
pop
jb
inc
stos
ret
mov
repz
add
sub
outsb
jg
fimull
jmp
xchg
xchg
and
fwait
jle
ds
mov
push
fwait
cmpsl
fwait
aaa
ja
fidivrl
fidivrs
push
cmpsb
bts
sbb
xchg
mov
or
mov
test
mov
imul
jl
cmp
sub
mov
mov
aad
sbb
jg
out
xor
in
xchg
cmp
xor
rorb
sbb
popa
in
xor
out
dec
inc
adc
add
mov
pushf
jno
in
sub
sub
outsl
xchg
into
add
lds
out
insl
fiadds
popa
ljmp
fdivs
jmp
push
cmp
out
push
outsl
out
in
cmp
sarl
dec
mov
xchg
imul
mov
push
ljmp
ljmp
push
push
in
inc
xchg
jmp
ds
sbb
lock
pop
korb
sub
je
pop
cmp
inc
jecxz
or
xorl
out
cmp
and
mov
push
fists
int
lret
xor
xchg
jecxz
iret
push
jne
push
inc
inc
xchg
push
mov
push
or
inc
repnz
inc
mov
pop
pop
decb
test
in
push
repnz
iret
call
jns
jp
sbb
nop/reserved
mov
inc
das
xchg
mov
aaa
gs
push
sahf
out
lret
fiaddl
sub
jle
mov
sub
mov
pop
hlt
pop
insl
sbb
mov
insl
std
stos
sbb
jl
push
jl
jbe
or
sti
sub
sub
aad
fildl
pop
int3
xor
or
test
leave
outsl
mov
pop
push
mov
inc
outsl
test
divl
and
sub
outsl
mov
mov
mov
mov
ss
ret
pop
xor
sub
daa
fs
xor
or
mov
sub
repnz
stc
xchg
inc
or
sub
test
lds
mov
pop
sub
pushf
stc
bound
dec
test
int
inc
in
xor
mov
pop
fstpl
pusha
aad
sub
lcall
fs
pusha
negl
add
push
mov
xchg
jg
leave
out
dec
out
mov
dec
xchg
aas
outsb
les
lods
adc
test
mov
push
xor
test
mov
and
test
into
lds
das
stc
mov
loope
je
sub
mov
inc
push
lahf
xchg
bound
ss
push
outsl
xchg
jg
bnd
dec
mov
sbb
jno
rolb
jmp
cmc
enter
push
icebp
or
orb
clc
add
xor
and
aaa
mov
test
cltd
jle
dec
out
cmp
sub
jbe
add
xchg
pusha
adc
out
inc
xor
inc
inc
pusha
adc
push
jno
and
adc
insb
mov
pop
loopne
fdiv
jmp
mov
add
dec
leave
jl
icebp
imul
ud0
pop
adcl
mov
sti
add
push
xchg
xchg
jmp
cwtl
and
xor
cmc
imull
jo
push
fbld
jle
jecxz
arpl
sti
gs
xor
jbe
outsb
insl
dec
or
mov
jbe
xchg
in
arpl
fcoml
and
ret
fnstenv
lcall
push
movsl
andl
enter
nop
stc
rcr
daa
sub
inc
dec
aas
mov
sub
push
test
sbb
adc
mov
sbb
sbb
es
arpl
stos
jbe
dec
lock
dec
int3
or
jge
lea
mov
fsubrp
xchg
xlat
fildl
pop
add
std
mov
sub
dec
sub
inc
test
cmp
add
jno
fadds
mov
imul
movsl
cmp
lcall
cmp
hlt
dec
fstpt
mov
jo
sbb
mov
add
daa
add
out
xor
mov
xlat
mov
xchg
or
fidivrl
std
inc
or
insb
cmp
mov
mov
xchg
push
xchg
in
xchg
lds
sub
mov
mov
daa
and
and
sbb
pop
sbb
mov
push
lea
cmpb
mov
mov
stos
out
loope
jecxz
pop
pop
scas
jmp
lods
adc
inc
mov
pop
inc
data16
rorb
out
or
dec
push
jg
dec
jmp
lock
imul
fs
push
shl
and
mov
sub
add
sbb
mov
xlat
cmc
cmpb
mov
test
push
ljmp
ret
sbb
clc
fdivs
push
repz
mov
hlt
or
pop
jnp
ja
pop
cmp
outsb
xchg
inc
pop
cmp
mov
je
inc
cld
lock
shlb
jge
cld
pop
dec
jnp
add
xlat
inc
pop
outsb
push
vminsd
push
lock
sub
jmp
pushf
popa
nop
pmulhw
fbld
sbb
xor
jne
jmp
sub
mov
stos
call
mov
pop
in
rclb
scas
add
and
pusha
gs
sub
jnp
inc
dec
rcrl
pop
mov
dec
mov
mov
cmp
repz
dec
sbb
int
jns
fadds
push
sub
mov
pop
mov
sub
test
sub
mov
stos
stos
icebp
callw
push
cmpsb
push
inc
test
mov
xlat
es
dec
roll
stos
sbb
popl
lds
in
into
pop
mov
adc
pop
aad
insl
pop
imul
push
ror
fmull
sbb
fistl
sub
outsl
jp
sbb
sub
pushf
fmul
mulb
insl
inc
cmpsb
and
aad
jg
xchg
push
pop
sub
or
bswap
sti
or
icebp
cs
repz
pop
divl
clc
pop
test
or
xchg
rorb
mov
mov
popa
pop
jp
iret
shlb
pop
mov
push
test
pop
rclb
and
cwtl
push
cs
cmpb
shll
push
mov
cmpsl
iret
scas
push
push
in
push
js
jbe
lret
out
sbbl
ret
insb
sarl
and
xchg
fwait
pop
dec
mov
mov
sub
jecxz
lea
imul
cld
xchg
fwait
cmc
pop
loop
mov
sub
call
fidivrs
mov
das
pop
out
testb
mov
rorl
dec
jo
push
scas
add
mov
sub
ja
sbb
ret
jmp
clc
fwait
push
popf
pop
mov
ljmp
cmpsb
push
stos
sti
xor
jno
push
outsb
cmp
sub
pushf
and
mov
ds
aas
mov
xchg
lock
dec
fwait
adc
and
adc
add
mull
push
dec
cmpsb
adc
xor
ret
inc
inc
fs
xchg
or
loop
mov
imul
rcr
mov
cmpsl
xchg
repz
clc
addl
cmp
stc
push
sbb
or
pop
and
push
jnp
fs
int3
xor
push
cs
addr16
and
inc
xchg
push
mov
lods
push
loopne
lods
jo
mov
pop
stos
cmp
popf
push
clc
mov
xchg
jg
adc
xlat
test
push
jns
lret
andb
mov
xchg
dec
jmp
lods
jbe
xor
inc
xchg
mov
xchg
inc
pop
fdivr
jae
cs
pop
divb
mov
fwait
jb
fsts
jg
and
adc
cmp
dec
xchg
and
sub
inc
add
xchg
cs
outsl
addl
or
adc
adc
xor
or
ds
std
arpl
pop
inc
xchg
push
leave
or
and
dec
andb
pop
scas
xchg
addr16
jecxz
mov
insl
loop
les
push
mov
push
mov
fisubrl
xchg
dec
popf
sub
adcb
sbb
mov
xor
add
sbb
in
xchg
les
xor
mov
rcrb
aas
loope
mov
pushf
mov
mov
lcall
inc
add
xor
mov
mov
sub
dec
add
pop
xor
int
shll
les
into
int3
push
dec
jg
mov
shlb
xchg
jge
or
mov
call
in
mov
divb
insl
lods
mov
lret
insl
pop
xor
mov
cs
dec
push
and
xchg
lret
pop
cmc
push
push
addb
cs
loopne
nop
aas
push
jno
pop
fdiv
sbb
fisubrs
jge
sub
ljmp
ds
add
stos
xor
mov
mov
mov
mov
hlt
push
xchg
fcoml
mov
and
cvttps2pi
insl
jmp
xchg
idivb
mov
cmp
or
cmp
pop
dec
pushf
inc
cmp
mov
es
mov
inc
gs
xor
xor
xor
push
push
inc
and
inc
sbb
pop
sub
mov
cmpb
movsb
xchg
pop
aaa
cmp
xchg
inc
lret
lret
adc
cmp
pop
stc
sub
mov
sbb
pop
xor
mov
dec
pop
icebp
andl
xchg
push
jmp
jo
test
aaa
call
fucomip
add
fisubs
iret
mov
xor
clc
aam
dec
jb
call
mov
mov
cmpsb
daa
cmp
ljmp
or
inc
or
repnz
shlb
adc
cltd
cli
and
fistpl
jl
negb
lahf
push
mov
out
cmp
ds
sbb
out
sub
imul
mov
ljmp
cmp
in
lea
xchg
nop
in
loopne
or
push
jno
in
sub
inc
push
outsl
mov
outsb
add
les
jl
add
and
ljmp
xchg
or
inc
pushf
insl
lock
movsl
or
ja
ljmp
sbb
push
or
xor
mov
mov
push
in
in
je
push
xchg
push
lock
and
jl
add
and
icebp
decl
mov
hlt
mov
pop
cmp
mov
stos
inc
or
ljmp
mov
shr
and
sbb
lahf
add
les
ljmp
xor
sbb
pop
ja
lock
pop
or
in
shrb
shll
cli
insl
negb
jmp
mov
mov
sbb
push
imul
add
jl
jne
xor
mov
ret
jle
cli
xchg
mov
cmp
dec
sarw
mov
mov
subb
cmp
std
ljmp
jl
stos
jecxz
clc
stos
jmpw
xchg
dec
and
mov
in
dec
sub
and
cmp
or
fnop
arpl
and
and
xchg
or
xchg
imul
adc
cmp
addr16
and
mov
sbb
jecxz
mov
and
sbb
adc
inc
xchg
push
xchg
and
cmp
or
cs
in
mov
inc
insl
mov
mov
jecxz
mov
imul
test
and
dec
pop
sbb
ja
ss
mov
mov
jns
popa
lcall
pop
gs
loop
mov
int3
out
mov
sbb
mov
fnsetpm(287
xor
mov
inc
sub
fdivl
out
aas
sbb
push
js
pushf
xor
mov
out
push
ret
mov
or
inc
lahf
cwtl
push
and
pandn
imul
scas
dec
out
sbb
shrl
popf
push
xchg
inc
and
xchg
gs
pop
xor
mov
lcall
jl
sbb
add
dec
mov
sbb
rcrl
add
fs
cmp
addr16
mov
or
mov
enter
pop
loopne
sbb
addb
lods
push
sbb
and
stos
int
ror
push
mov
or
inc
mov
lock
clc
jbe
insb
mov
sub
mov
arpl
inc
testb
ljmp
js
stos
xor
nop
scas
repnz
push
or
fisubrl
mov
fidivrs
cwtl
imulb
iret
bnd
out
inc
popf
test
mov
stc
and
push
sub
ljmp
xor
sbb
test
fdivrl
lret
sub
xlat
xor
inc
loope
jb
fldcw
popf
dec
std
mov
mov
pop
sahf
repnz
mov
mov
adc
push
xchg
xor
adc
inc
in
xchg
add
and
xchg
add
push
mov
shl
cwtl
cmp
stos
hlt
push
in
push
leave
fucomp
fidivrs
in
clc
xchg
in
xchg
fnstsw
inc
loope
test
cmp
mov
pop
xor
jb
fisttps
sbb
ret
rcrb
mov
testl
adc
clc
std
xor
lret
jecxz
popf
mov
fs
pop
loop
adc
jno
lea
popa
mov
mov
mov
jne
mov
xor
adc
es
inc
mov
jl
in
pop
or
out
cmpb
mov
out
dec
mov
mov
pop
fmull
movl
mov
xor
xchg
pop
lahf
jae
test
test
gs
jmp
add
rol
mov
mov
arpl
aam
mov
pop
cmp
mov
pop
cwtl
pop
pushf
sub
sub
pop
in
imul
insb
xorl
or
add
test
inc
pop
mov
daa
mov
sahf
es
dec
cmp
outsl
sbb
insb
cmpl
insb
xchg
xor
push
push
jne
clc
test
mov
push
popf
mov
scas
int3
loope
xchg
dec
mov
jmp
mov
int
mov
ret
xchg
pushf
cli
xor
jmp
lahf
mov
push
xlat
inc
mov
shll
gs
lret
jnp
outsb
sub
or
out
fistl
pop
dec
mov
loop
and
adc
sbbb
mov
jo
scas
movsb
je
adc
dec
and
jns
sub
xorb
aad
mov
sub
pusha
in
sbb
xchg
adc
mov
mov
jb
sub
aad
mov
sbb
in
add
dec
das
xor
xor
mov
test
cli
and
add
pavgw
adc
jb
mov
xrelease
mov
mov
push
imul
shld
out
jp
cmp
mov
movsb
adc
cmp
and
test
xchg
push
rol
dec
in
dec
adc
mov
xchg
xchg
dec
fsubrl
mov
pop
outsb
mov
fbstp
imul
mov
std
ds
imul
insl
lahf
dec
pushf
aam
mov
add
push
adc
or
xor
bound
imul
inc
pushf
add
fbld
pop
sete
fucomi
out
test
push
jl
jge
jle
mov
orl
mov
cmpsl
adc
mov
mov
popa
xchg
jne
or
filds
scas
sub
scas
lods
ljmp
mov
andl
cmpsb
jge
andb
xor
pop
mov
dec
push
out
inc
pop
ds
pop
ds
mov
mov
ja
dec
jbe
es
in
and
xor
and
cmp
xchg
adc
ret
aam
daa
mov
jle
cmp
mov
test
mov
inc
cltd
cmc
xchg
xchg
inc
in
ret
pop
mov
fnstenv
cmp
cmp
push
dec
roll
loope
push
aad
mov
mov
pop
popa
addr16
push
add
sbb
dec
int3
and
lds
hlt
sub
mov
jg
insl
das
and
push
insb
sub
xor
cmp
sbb
adc
test
inc
inc
fisubl
xchg
popa
out
je
bound
fstl
shlb
jmp
push
jno
xor
movsl
inc
out
ja
lods
hlt
cmp
lcall
mov
lret
scas
cmp
push
xchg
test
pushf
inc
scas
out
jbe
push
inc
and
fsts
rorb
inc
loopne
add
cwtl
cmp
in
sbb
push
je
pop
nop
mov
bound
push
into
je
aaa
pusha
mov
and
inc
mov
xor
fisttpll
push
push
cmpb
pop
orl
pop
test
pop
inc
sbb
daa
out
dec
call
shlb
lods
stos
inc
iret
pop
adc
push
xchg
pop
pop
push
scas
in
or
aam
push
dec
test
loop
cmp
push
push
bound
daa
jo
dec
out
movb
aad
xchg
subb
mov
cmp
insl
aam
sub
ret
push
cmp
imul
pop
cmpsb
loopne
ret
lret
sbb
mov
sub
push
into
xchg
cmp
insb
pusha
insb
add
cltd
leave
push
fiaddl
aaa
cmpsb
jae
fnsave
lcall
xor
xlat
scas
dec
xchg
fistpll
in
popa
push
cmp
in
jb
mov
ja
fcoms
fistps
mov
lods
mov
sbb
test
int
pop
lds
andps
xor
or
push
push
xor
or
popf
push
je
lods
out
in
sub
pusha
test
or
or
add
repz
mov
or
bound
jmp
xchg
int
fidivrl
pushf
xor
imul
jle
mov
jmp
mov
mov
in
pop
push
push
adc
inc
adc
and
push
inc
sub
mov
subb
add
push
mov
lcall
movb
insl
hlt
push
addl
cmp
dec
jle
scas
int3
cli
inc
push
daa
adc
sti
cmp
inc
imul
imul
xor
cmp
xor
push
push
xor
xor
sbb
xlat
push
and
outsb
scas
push
repz
out
push
pushf
fs
sub
ja
dec
xchg
daa
or
int
fwait
cmp
repz
push
fwait
dec
inc
pop
pop
movsl
popf
fistpll
ss
outsb
daa
enter
cwtd
cmpsl
cmc
push
mov
rcrb
test
inc
cmovb
sbb
and
ret
dec
fldt
loop
xchg
or
stc
dec
add
std
sbb
aad
dec
stos
lret
ret
ljmp
and
nop
xchg
lock
adc
pop
imul
test
add
cmp
popf
out
popa
ja
add
mov
std
sub
or
push
xchg
test
xchg
inc
test
mov
jmp
push
cmp
cmc
lods
roll
xchg
std
jno
lcall
xchg
repnz
cmp
jmp
popf
ljmp
stc
fwait
repnz
or
mov
in
aaa
lds
mov
cmpb
in
push
xor
sbb
xor
sbb
jge
mov
into
adc
xchg
mov
mov
ds
repz
aam
jnp
sbb
out
jmp
cwtl
mov
pop
scas
test
out
test
lahf
pop
xchg
push
dec
subl
xorl
mov
push
fnsave
test
icebp
or
push
cwtl
mov
mov
aam
mov
test
mov
call
mov
push
fnsave
mov
pop
mov
cmp
sub
cld
shll
mov
js
divl
sbb
lds
jmp
push
mov
fstl
into
cwtl
sbb
push
bound
pop
test
xor
movsb
sub
adcb
sub
ret
ds
dec
fisttpl
or
cmp
jge
cmp
loope
repz
cmpsl
mov
adc
ret
shrl
adc
aad
lea
mov
cmp
inc
scas
sbb
push
out
dec
sbb
in
push
gs
cmp
lods
lret
cltd
scas
add
mov
in
jg
mov
insl
insl
mov
stc
adc
stc
rcl
xlat
push
icebp
push
xchg
aas
in
aad
and
adc
jb
out
sbbl
fwait
add
addb
jnp
pop
inc
fbstp
xor
adc
lcall
cwtl
xchg
push
jle
xchg
int3
jne
cmpsl
jae
test
xchg
or
add
mov
fs
lahf
inc
jns
insl
out
jb
faddl
icebp
sub
cld
insl
mov
jae
sahf
pop
ret
xchg
int3
sbb
lock
jmp
testl
add
mov
andl
adc
mov
js
pop
dec
sub
jg
notb
in
clc
or
cmp
sub
push
inc
outsl
dec
pusha
fnstcw
mov
lcall
sub
push
insl
mov
aam
les
sbb
imul
xor
xchg
cltd
sbb
mov
xchg
xchg
mov
sbbb
jo
fildl
setnp
int
cli
mov
mov
sbb
sub
es
popf
jne
test
insl
mov
fistpl
shl
rcr
sbb
jmp
ja
add
jmp
dec
test
mov
cmpsl
mov
mov
mov
insb
ss
adcb
mov
mov
xchg
xchg
insb
jae
hlt
dec
inc
mov
sub
xor
xchg
cmp
leave
xchg
pop
les
clc
mov
add
idivl
push
cmp
jl
sub
fcomp
sarb
jp
fisubrl
outsl
rcll
fcmovu
pop
sbbl
movsl
or
pusha
pop
addr16
insb
or
ficompl
pop
xor
outsb
mov
sub
mov
scas
ret
mov
loop
jno
and
loope
insl
inc
lahf
movsl
and
test
insb
ja
ss
aaa
xchg
sub
xchg
mov
test
aaa
lods
out
clc
adc
ret
fstpt
outsl
inc
and
imul
fs
fisttps
hlt
push
jnp
dec
int
loope
xchg
and
repz
test
xorb
test
xor
jp
clc
adc
ret
cltd
xor
fisttpll
ss
clc
mov
cmpsb
stc
push
std
mulb
mov
cmp
sbb
addr16
in
sti
imul
mov
inc
ret
insl
fimuls
or
and
push
es
adc
jno
cld
push
push
out
popl
addr16
sbb
push
in
xor
xchg
call
xchg
pop
mov
jo
mov
cwtl
bnd
aaa
out
mov
or
mov
out
andl
jl
popf
loop
mov
push
add
dec
add
out
and
cmpsl
lret
pop
and
stc
add
aam
mov
sbb
cmpsl
xor
data16
in
xchg
std
nop
pop
dec
and
inc
lcall
popa
clc
and
jb
nop
ljmp
shll
sbb
push
ret
sarl
pop
test
sahf
mov
dec
jle
jnp
pusha
outsb
mov
xchg
pop
add
dec
fsts
movsl
mov
mov
jge
xor
mov
lcall
test
sub
mov
pop
sub
testl
pop
jle
cmp
xor
jle
fnstcw
pop
mov
cmp
sbb
call
sub
adc
in
int3
adc
cmp
pop
jp
outsl
icebp
ret
mov
jg
or
dec
xchg
cmpsl
and
and
dec
cld
mov
fidivl
push
into
addr16
push
test
push
push
mov
or
and
outsl
shrl
mov
mov
mov
imul
jbe
cmp
popa
xor
mov
lds
test
lea
and
mov
add
loop
cmp
popf
add
fdivs
add
lock
lock
orb
fsub
xor
xchg
push
lods
popa
or
pop
jb
andb
push
mov
sub
fmull
push
push
push
xchg
push
pop
inc
or
xchg
jo
dec
es
bound
repnz
in
inc
ja
sti
mov
pushf
int
xor
ljmp
sahf
cwtl
xchg
shll
ja
push
pop
das
fs
aam
shlb
outsb
test
pop
dec
dec
cmpsb
insb
leave
push
stc
mov
xor
xor
adc
sub
mov
push
cmp
pop
rorb
cmpsb
fwait
out
test
and
lods
mov
shlb
cmpsl
inc
xchg
add
cmpl
add
rcll
not
arpl
insl
mov
pusha
mov
ret
xchg
add
popa
test
pop
stos
vcmpps
ret
mov
push
imul
push
movsl
and
jne
adc
jb
ficompl
xchg
repz
add
inc
ds
sub
mov
xor
cmp
out
push
imul
imul
mov
mov
movsl
dec
test
add
lret
and
fidivl
cld
pop
mov
push
cmc
das
nop
negl
ds
xchg
stos
loop
aad
add
loope
in
icebp
movnti
xchg
cmp
push
dec
xchg
and
shr
leave
inc
add
push
pushf
mov
xor
xchg
mov
cs
push
dec
mov
ja
jl
sub
jne
rcrb
mov
and
mov
sub
and
push
jge
mov
xlat
cmc
lret
xor
stc
fwait
loop
cmp
push
mov
test
sbbl
adc
add
inc
fistpl
ret
xchg
mov
sbb
std
inc
outsb
pop
cmp
pop
loope
xchg
push
push
xchg
fcompp
inc
push
stc
in
loopne
sub
je
jg
ljmp
call
push
push
sbb
xchg
loope
pop
or
std
inc
or
cmp
or
leave
push
mov
in
mov
movsl
sbb
pop
fistpll
add
add
add
sub
adc
pusha
ja
xchg
and
xor
lea
sbb
imulb
cmp
dec
mov
add
pop
les
in
mov
add
mov
les
and
or
int3
xor
xchg
add
sub
xchg
or
and
out
pop
das
jne
fdivs
jbe
and
xchg
repnz
bound
out
add
lods
pusha
lret
iret
xchg
xor
xchg
nop
les
notb
and
call
add
out
sbb
out
xor
test
into
mov
lret
clc
adc
jo
sbb
sbb
lock
imul
sbb
xor
inc
leave
sub
xor
jge
pop
jle
xchg
mov
je
enter
inc
pop
inc
mov
and
or
mov
insl
pushf
sbb
mov
push
mov
icebp
adc
mov
test
xor
outsb
mov
lahf
lahf
nop
cmp
ja
jle
aad
in
sub
lahf
push
jp
addr16
icebp
test
orb
push
mov
out
loopne
mov
pop
mov
mov
test
mov
push
xchg
mov
std
mov
and
and
xchg
incl
xchg
cwtl
jle
idiv
popf
fs
clc
jecxz
test
mov
mov
lret
push
lds
rclb
movb
jmp
mov
adc
xchg
cmp
xchg
in
mull
movswl
in
push
adc
mov
pop
sti
or
pop
out
and
push
and
testl
out
dec
leave
bound
std
addl
ss
ds
jge
loope
daa
mov
dec
pop
inc
leave
mov
mov
leave
xor
push
inc
bound
mov
adc
xor
xchg
pop
mov
ret
sub
call
int3
and
repz
mov
incb
addb
lea
insl
pop
test
pop
mov
jne
test
sbb
xor
adc
sub
movsl
xor
push
mov
mov
mov
dec
pcmpgtb
scas
add
mov
mov
test
fxch
and
jp
jae
mov
push
test
ds
jo
xchg
addr16
popf
stc
jmp
jmp
dec
pop
pushf
jb
lahf
mov
and
dec
sub
in
cs
xchg
scas
lods
adc
xor
push
and
js
pop
mov
mov
lods
xchg
roll
fs
repnz
and
push
mov
mov
jle
sub
jl
bound
js
mov
sbb
dec
or
jo
add
push
jns
in
xor
test
outsl
jb
ljmp
sar
push
sub
repz
es
cwtl
cwtd
popf
cltd
pusha
faddl
dec
std
or
loop
shll
inc
mov
pop
cwtl
push
je
sbb
int3
imul
bound
arpl
loope
in
jmp
push
xor
push
or
xchg
aas
mov
pop
cmpsl
xlat
jle
jno
sbb
xchg
fiadds
jo
jg
xchg
sub
pushf
cli
dec
fdivr
add
xchg
cltd
sbb
or
lods
pop
fldenv
mov
pop
push
int3
hlt
popa
or
in
aam
xchg
imul
inc
fnstenv
sbb
jmp
xor
jle
ljmp
dec
in
shl
nop
cwtl
add
push
ja
insl
incl
push
jge
jg
lret
lcall
push
movsb
pop
out
cmp
jge
push
fbld
push
mov
inc
rep
ljmp
orb
test
iret
mov
mov
mov
or
push
and
imul
cld
jp
cli
mov
ljmp
je
jb
gs
mov
dec
and
std
shl
jmp
mov
ljmp
push
not
aad
mov
shld
push
int3
repz
lahf
rorb
insb
mov
mov
inc
xor
cmp
pusha
mov
xor
frstor
call
mov
dec
out
xor
das
pop
cmp
enter
lcall
test
gs
adc
mov
sahf
sarl
subl
jae
mov
lea
popa
inc
and
fdivs
aad
out
or
dec
mov
fsubs
call
in
sbb
xlat
ret
lahf
inc
pushf
mov
outsl
add
xchg
in
add
das
int3
mov
adc
inc
out
aaa
xchg
test
shll
mov
mov
lods
xchg
inc
and
mov
aas
inc
mov
dec
inc
rclb
mov
ljmp
imulb
pop
xchg
sub
push
and
aaa
enter
dec
inc
inc
leave
mov
and
xor
std
decb
pusha
mov
mov
dec
dec
rol
int
adc
test
and
rol
movsb
hlt
fst
push
cmp
je
mul
sbb
js
in
imul
js
test
pushl
adc
daa
push
or
scas
ret
adc
repz
fs
std
adc
xchg
adc
mov
test
ja
jle
int
into
inc
adc
imul
cwtl
sti
leave
cmp
jo
adc
enter
xor
fadds
orl
ljmp
imul
cs
and
push
mov
sbb
out
inc
cmp
popa
inc
jmp
sbb
jmp
je
std
jns
fdivr
adc
cs
inc
aam
mov
push
icebp
rclb
repz
test
repz
cs
sub
fidivl
ljmp
fidivrs
out
in
xchg
and
xchg
inc
repnz
mov
shlb
popa
fisttpl
mov
scas
sub
adc
movsb
mov
inc
stc
aaa
mov
adc
sahf
jl
gs
fsts
add
icebp
pop
addb
in
mov
xchg
stc
js
push
lahf
call
push
cmpsl
inc
and
jnp
pop
xchg
aam
stos
jecxz
pushf
loope
mov
mov
mov
enter
cmp
pop
mov
inc
div
inc
leave
push
filds
nop
mov
cmp
fsubrs
sti
aaa
mov
jmp
and
or
xor
adc
nop
pop
jne
mov
inc
mov
jmp
in
inc
cltd
jmp
jne
aas
sbb
cld
out
ret
lds
sti
or
inc
fbstp
ret
scas
push
jle
sbbl
mov
xchg
insl
inc
lret
mov
neg
push
xchg
jne
mov
lret
mov
sbb
shlb
xchg
and
mov
sti
subl
mov
lahf
loopne
or
pop
add
stc
add
movsb
test
dec
rclb
test
dec
dec
icebp
xchg
shll
push
or
fistl
mov
shr
ljmp
insl
aad
add
add
xchg
xchg
cmp
test
insb
push
test
mov
push
dec
js
je
add
push
addr16
out
jmp
jns
adc
sub
push
shlb
loope
sbb
mov
mov
in
arpl
mov
insl
add
scas
mov
cmp
add
imul
add
inc
pop
dec
movsb
cmpsl
mov
icebp
or
ds
cmp
mov
lea
push
movsb
rclb
enter
cmp
iret
inc
idivl
inc
adc
xchg
lret
sbb
in
call
adc
dec
xchg
adc
jns
lret
xchg
leave
fyl2x
xchg
icebp
leave
sbb
imulb
es
aam
or
push
cli
sub
push
ja
ret
cmp
nop
aas
mov
nop
nop
fcmove
out
ljmp
int3
cwtl
shlb
dec
lahf
adc
mov
push
ret
aaa
adc
and
pop
je
xor
adc
push
xchg
aam
lds
ss
dec
cwtl
push
pop
sub
and
mov
pop
repnz
and
hlt
add
xor
lret
ret
dec
fsubr
bound
jg
das
stos
sbb
out
or
mov
inc
and
mov
jns
shrb
xchg
xchg
pop
imul
ss
jno
cmp
xlat
lds
lret
and
sub
and
rclb
call
andnps
sub
jb
loopne
inc
nop
hlt
aaa
scas
push
and
and
xor
and
in
pop
pop
mov
add
xchg
fimuls
xor
addr16
ja
testb
dec
sbbl
ljmp
sbb
xor
mov
xor
jno
ds
stos
fdivs
jbe
pop
mov
pusha
sbb
pop
jg
int3
das
scas
jl
push
scas
push
insl
adcb
xor
ds
mov
mov
sahf
and
enter
mov
cmc
mov
adc
xor
je
jno
jo
popf
ljmp
xchg
lcall
or
jno
js
push
pop
jecxz
hlt
or
rclb
xor
sub
fistl
mov
outsb
movsl
inc
in
and
sub
ds
cmpsl
fildll
cld
cmpsl
das
push
cmpsb
icebp
add
jmp
ret
arpl
jno
or
imul
dec
push
cmpsb
mull
jle
mull
mov
dec
xlat
dec
and
or
xchg
fbld
test
mov
push
xchg
adc
popa
cli
cld
pop
mov
xchg
notb
imul
inc
or
sub
adc
mov
mov
icebp
lods
inc
inc
leave
repnz
pop
pop
sub
push
cmp
out
fsubp
pop
xchg
pop
mov
in
pop
test
and
lret
mov
into
iret
fsubrl
jl
cmp
inc
ljmp
nop
cmpsb
lds
repz
int
adc
out
and
xchg
pusha
push
or
idivb
loope
mov
inc
mov
dec
cmp
daa
ja
and
pop
cwtl
movsb
xchg
scas
push
dec
jg
lods
jo
xor
xchg
insb
movsb
les
pop
test
stc
adc
xor
xchg
popf
xor
pushf
mov
rorl
dec
xor
jp
fstl
lahf
mov
cwtl
roll
push
mov
mov
mov
orb
lea
mov
ret
decl
sbb
sub
inc
ljmp
repz
and
movsb
and
iret
jl
mov
jg
sub
xchg
push
sub
in
jb
jb
out
mov
and
jl
xchg
loopne
popf
xor
outsb
nop
mov
in
push
repnz
pop
adc
jae
testl
test
in
jp
mov
jne
cs
roll
inc
outsl
scas
xor
repnz
sbb
inc
mov
fdivs
push
scas
or
sbb
xchg
addr16
fidivs
scas
loop
or
pop
dec
out
inc
and
daa
push
rorb
ret
jo
out
cwtl
dec
or
ficoms
pop
fisttps
push
mov
sbbb
test
cmc
inc
test
cmp
sahf
cmp
int3
ret
and
out
and
jno
ja
clc
cmpb
lcall
cld
into
shr
clc
imul
cld
je
cmc
ret
out
out
lock
movsb
fwait
pushl
adc
scas
jo
xlat
sub
lahf
scas
add
lock
fcoms
scas
sub
shl
in
imul
stos
sub
mov
jmp
rcll
imul
adc
sub
add
adc
mov
xchg
adc
xor
mov
lret
insb
adc
mov
adc
or
ljmp
mov
in
lods
dec
push
lods
jle
fnstsw
xor
sti
pusha
pop
push
gs
mov
mov
pop
gs
aaa
lret
jnp
inc
xchg
sbb
push
pop
mov
jg
sbb
loopne
das
mov
mov
jmp
sbb
fadds
xor
lods
mov
clc
pop
jnp
pop
sub
sub
sbb
in
xchg
push
imul
and
jb
xor
mov
test
xor
repz
sbb
call
test
idivb
lret
aad
out
inc
shrl
arpl
lcall
pop
icebp
mov
or
nop
stc
mov
mov
jle
and
daa
dec
lock
and
mov
mov
lock
test
and
cltd
inc
add
je
lds
lahf
xlat
pop
imul
movsb
pop
mov
xchg
dec
sub
sub
mov
jns
clc
push
pop
mov
adc
divl
out
iret
movsl
or
inc
jp
mov
dec
je
ljmp
pusha
das
or
xchg
or
cli
icebp
xor
test
cltd
pop
fsub
inc
push
iret
sub
adc
jecxz
test
ret
push
arpl
shrb
fadd
dec
incl
aas
sti
jl
sti
popf
jg
pop
imull
outsb
insl
or
std
push
sub
mov
pop
sub
js
xor
mov
pop
lock
or
add
lds
push
jbe
push
and
mov
inc
xor
pushf
pop
call
mov
mov
or
je
loope
inc
aad
mov
arpl
push
stos
adc
push
in
xor
dec
and
inc
mov
icebp
jno
hlt
lods
inc
xchg
mov
cld
adcb
rcr
insb
jecxz
inc
pop
orb
jnp
pushf
and
mov
cmp
shll
fsubrs
lcall
or
jge
cmp
lret
mov
xor
fisttps
sbb
jle
testb
clc
imul
push
out
xchg
mov
push
mov
les
lock
xchg
mov
das
ss
mov
jl
sbbl
sbb
je
movq
push
shlb
dec
sbb
xchg
fdivrp
add
repz
add
xchg
rcl
sub
and
mov
aad
jnp
cmc
imul
adc
sub
mov
lods
hlt
add
xorb
add
fistps
lds
testl
adcl
xchg
rorl
add
xchg
and
xchg
cli
push
fstl
loope
sub
pop
test
movsl
dec
mov
sbb
jmp
and
and
mov
adc
inc
jbe
push
shll
hlt
mov
push
xor
adc
outsl
and
adc
aas
jl
mov
jnp
adc
cmp
sti
cmp
dec
je
xor
pop
int
ss
mov
pop
test
jle
pop
scas
push
repz
cli
xchg
ss
inc
sbb
mov
push
cmp
adc
dec
icebp
movsb
fucomip
ja
repz
xchg
jmp
out
cmp
or
loopne
stos
faddl
mov
sub
mov
std
inc
cli
in
cmc
rcrl
pop
or
dec
cmp
mov
xchg
lea
xchg
mov
insl
mov
lahf
mov
mov
inc
int3
cld
rcrl
fs
leave
lods
cmp
mov
add
mov
jnp
sub
fwait
cmc
adc
inc
jmp
pop
pop
fs
mov
rcrb
pop
and
das
mov
loope
icebp
xor
fs
stos
insb
es
push
and
xchg
andb
jae
add
mov
sti
stos
mov
fisubrs
mov
mov
jmp
imul
xlat
add
pop
popl
out
loop
cmc
outsb
mov
scas
push
das
adc
cmpsb
mov
sbb
sbb
int
pop
dec
gs
and
jno
mov
jno
inc
fs
or
andb
lea
shlb
add
and
lret
out
popa
mov
jmp
mov
push
dec
out
in
cmp
out
ret
repnz
sub
push
ja
mov
outsl
adc
sub
gs
test
xchg
into
pop
sbb
sarb
imul
aaa
dec
les
mov
ret
in
sti
xchg
sub
sub
jne
nop
dec
mov
mov
xchg
jge
pushf
in
cmp
sbb
mov
pop
ret
test
xor
add
fldenv
lcall
push
push
dec
cmp
out
int
jnp
pop
ss
stos
pushf
and
inc
ljmp
cld
fcmovu
cmp
xchg
out
and
andl
mov
xchg
mov
ss
xor
pop
cs
mov
and
xor
les
push
adc
inc
call
push
inc
fdiv
out
mov
iret
jp
fs
mov
and
nop
jge
inc
cmp
stos
lods
xor
insl
lahf
dec
inc
sbb
lods
xchg
insl
pushl
repz
faddl
adc
or
repnz
clc
loop
mov
aad
pop
mov
loopne
xlat
outsl
pushf
sbb
cmpsb
add
cmc
cli
mov
mov
push
jnp
or
mov
sbb
and
sbb
inc
mov
pusha
lahf
jns
xor
sbb
inc
xchg
outsb
ret
mov
test
int3
mov
xor
xor
push
aam
out
clc
lahf
repz
xor
mov
shll
mov
faddl
pop
std
dec
mov
sbb
movsl
xor
inc
cwtl
xchg
fists
push
ljmp
lret
or
push
repz
je
movb
ds
jmp
ds
dec
cmpsb
das
xchg
dec
and
aaa
addb
push
xchg
jle
pop
xchg
gs
es
cmp
xor
pop
ret
ret
bound
push
push
adc
and
lods
test
dec
dec
popl
in
js
mov
insl
cmc
adc
popa
pop
pop
in
dec
push
mov
mov
fsubl
pusha
mov
xor
sub
pushf
dec
enter
adc
push
push
lcall
nop
and
addr16
mov
daa
lcall
fcomp
lcall
pop
nop
or
mov
fwait
or
lahf
inc
xchg
imull
rclb
dec
popf
xor
cmp
mov
jns
int
xor
cld
ja
cmpl
push
fldl
idivl
divb
rorb
cld
and
adc
mov
cli
xor
sub
fldcw
jne
xchg
cmp
stc
add
sub
pop
sub
inc
rclb
cmp
mov
imul
imul
lret
push
mov
jp
cli
imul
ficomps
xchg
fists
cmpsl
xor
xchg
xchg
inc
dec
incl
jl
fcmovbe
xlat
mov
fcompl
cmc
cmp
push
or
loop
mov
and
lods
pushf
fistps
xchg
mov
test
fcmovnu
leave
cltd
shrb
adcl
repz
rclb
lcall
arpl
jnp
rorb
repnz
je
mov
pusha
ss
inc
stos
dec
lea
loope
push
pop
mov
out
inc
pop
fstl
fsubr
hlt
insb
lods
inc
adc
push
xor
pop
mov
and
cli
jo
mov
pop
ret
lcall
dec
imull
repz
pop
insb
dec
in
in
cmp
cmpsl
negl
jg
shll
jmp
sbb
in
nop
and
out
cs
or
movsl
mov
pop
and
fs
cmp
cli
push
jp
mov
out
cmc
inc
sub
cmp
jmp
mov
fisubl
scas
mov
xor
pop
push
pop
sbb
roll
push
pop
scas
mov
aad
mov
ss
cld
jb
mov
xchg
and
mov
stos
add
das
xchg
add
mov
fistpl
sbb
pushf
rolb
sar
adc
push
jae
xor
push
mov
push
in
cmc
inc
rol
imul
ret
out
aaa
ss
cmp
pop
mov
xchg
mov
lret
ficoml
jae
in
out
popf
lock
lahf
repz
in
aaa
push
fisttpll
imul
xor
imul
mov
hlt
shll
jp
mov
adc
mov
sbb
xorb
pop
fwait
sub
bound
cmpsl
scas
pushf
inc
imul
aas
mov
jo
or
push
mov
dec
lcall
cmp
push
pop
mov
je
dec
clc
mov
arpl
rcrb
lods
mov
bound
ljmp
mov
rorb
pop
push
push
aas
shl
cwtl
in
aam
xchg
movsl
scas
xchg
push
jecxz
es
sbb
mov
lods
insb
xchg
test
mov
cmc
sub
js
movsl
ja
out
sbb
fldl
jle
popf
add
jno
mov
icebp
outsb
mov
cs
cmp
pop
lret
add
shl
stos
and
push
add
fstl
dec
add
jae
adc
xor
and
idivl
rorl
mov
jp
movsl
test
roll
sub
arpl
popa
cmp
mov
pop
mov
shll
push
cltd
dec
lock
and
in
js
and
ja
andb
jbe
pop
dec
cmp
cmc
rcl
push
cmc
xchg
push
xor
cmpsl
aaa
nop
mov
push
loope
add
out
jmp
aam
fwait
out
cmpsb
jb
mov
fisubrs
hlt
jns
inc
mov
lds
xor
pushf
jns
outsb
jp
fldt
or
hlt
cmc
nop
arpl
or
movsl
and
jmp
jmp
pop
arpl
les
push
push
out
lahf
fmull
mov
jo
ja
mov
push
push
in
mov
ljmp
and
xchg
cs
sbb
cmpsb
jnp
jge
stc
mov
out
movsl
clc
pop
fs
leave
mov
mov
bound
add
jne
add
rcrl
mov
loop,pn
push
xchg
inc
mov
mov
or
lock
in
testb
insl
inc
imul
mov
add
imul
pop
mov
xor
or
fdivrs
jno
xor
mov
cmp
fsubrs
loop
movsl
sub
inc
bound
outsl
pop
xchg
push
or
testb
movsb
iret
jne
lds
andl
dec
dec
rolb
cwtl
es
mov
std
sbb
aas
mov
scas
jp
or
in
cmp
lock
adcb
out
test
out
fs
mov
out
jl
test
add
push
add
repz
xchg
repnz
sbb
in
push
adc
lahf
fdivrs
add
je
mov
jne
jg
int
push
lods
pushf
outsl
push
call
cmpsl
cmpsl
add
iret
addr16
sbb
out
andb
mov
pop
out
lret
lret
out
mov
inc
pop
cmpb
mov
push
subps
cltd
and
mov
adc
loop
xchg
int3
xor
cmp
andl
or
mov
pop
cmp
pushf
es
mov
orl
and
pushf
jge
jnp
test
jno
adc
bound
jg
pop
test
lret
insb
iret
das
lahf
andb
sbb
aas
xor
cmpl
cs
jo
scas
ljmp
cmp
cld
mov
sbb
or
and
dec
sarl
cli
movsb
push
jne
add
cmc
mov
pop
dec
xlat
cmc
fwait
cld
aad
idiv
xchg
stos
mov
push
jge
dec
out
sub
or
cwtl
xchg
inc
or
xor
test
cmp
inc
popa
mov
add
xchg
push
jo
and
cmp
jo
outsb
mov
inc
sbb
jnp
lret
or
sub
cwtl
push
adc
xchg
pop
addr16
pop
xchg
shll
les
es
idiv
adc
sahf
sar
jbe
cmp
in
sbb
pusha
jno
daa
pop
lods
notl
xor
inc
mov
lahf
clc
or
dec
and
sbb
pop
sbb
and
cmp
addr16
in
gs
ss
fxch
cmp
outsl
imul
mov
scas
push
loope
pop
xchg
shlb
xchg
inc
lahf
pop
ret
mov
sbb
and
out
adc
add
movsb
ror
add
dec
push
loope
and
xchg
ss
add
mov
scas
push
lret
jno
cmpsl
pop
add
cmp
dec
fidivs
fstps
es
or
testl
lods
push
std
cld
cmc
add
rcl
xor
icebp
ret
add
outsb
sub
mov
push
lcall
dec
lret
and
inc
xor
arpl
int
out
inc
lcall
insb
jbe
imul
push
je
stos
add
mov
jg
sbb
mov
sub
jmp
mov
mov
push
lods
mov
adc
cmp
inc
jnp
sub
pop
arpl
clc
ss
xor
mov
cmp
push
test
inc
std
add
dec
mov
push
mov
pop
pop
fdivrs
adc
in
xchg
adc
ss
or
pop
xor
int3
inc
inc
loop
shl
int
out
addl
cmpsl
shrb
mov
push
push
movsl
cmp
lock
mov
cs
leave
mov
dec
sti
das
cmp
pop
or
mov
adc
mov
xor
push
mov
push
inc
ljmp
jne
data16
jge
movsb
imul
ljmp
aam
jp
push
inc
sti
daa
ss
jnp
bound
xlat
mov
cmp
cmpsb
or
pop
std
sbb
out
push
sarl
fst
stc
jl
jb
loop
jp
jp
aad
cmpsb
jne
cmp
sbb
jmp
cmp
jns
jae
shlb
inc
push
mov
fstl
dec
fidivs
push
mov
sbb
lea
mov
or
jns
sarl
jne
adc
sbb
call
and
xor
loopne
pop
pop
inc
cli
addr16
mov
or
jno
es
push
push
test
xchg
dec
sub
in
rcrl
xor
mov
arpl
pop
jecxz
stos
fisubrs
xlat
inc
loope
jns
cmpsl
dec
and
ds
loopne
lahf
mov
push
fwait
pop
push
popa
loop
mov
mov
adc
shll
xchg
call
loope
push
ret
mov
xchg
fisttps
cmp
les
pop
sbb
and
aas
leave
lds
cmp
jle
call
or
cmp
aad
test
add
add
jecxz
mov
out
add
movsb
cmp
mov
ljmp
dec
jnp
or
out
cmpb
filds
loopne
xchg
dec
mov
mov
adc
fsts
jb
inc
push
xor
mov
push
cmpsb
add
pop
xchg
dec
icebp
add
jg
ror
xchg
shr
iret
pop
pop
loopne
cwtl
icebp
add
movsb
into
lds
adc
sbb
dec
xchg
dec
pop
test
aas
in
sti
lahf
lret
inc
stc
addr16
add
vshufps
pusha
std
push
les
pop
pop
xor
push
jge
adcb
mov
push
add
test
jl
mov
test
lds
dec
icebp
and
movb
pop
iret
gs
popf
pop
inc
int3
dec
push
in
sbb
dec
cmp
cmp
push
mov
inc
mov
push
hlt
cmp
pop
flds
adc
cmpsb
xchg
inc
xlat
adc
add
sahf
jno
insb
fwait
cmpsl
js
ja
nop
push
fisubrs
cmp
push
insl
ja
xor
pop
dec
adc
js
ljmp
hlt
pop
lds
pop
mov
push
sub
es
xchg
push
and
or
pop
xchg
xorb
mov
js
mov
lods
xor
daa
and
icebp
xchg
loope
mov
fsubrs
enter
ds
daa
or
xor
inc
adc
clc
bnd
add
fwait
mov
dec
adcl
push
add
inc
xchg
mov
cmp
jle
sbb
test
push
out
insl
pop
push
scas
push
jae
mov
mov
mov
into
faddp
mov
mov
xchg
loope
pop
and
mov
mov
stos
xor
pop
loopne
cmp
pop
sub
push
rclb
mov
popa
ret
inc
pop
mov
xlat
ret
xor
sub
or
dec
icebp
push
sub
cmp
mov
jo
shrb
pop
inc
adc
loopne
jae
imul
mov
imul
int3
iret
movsb
lea
repz
es
or
cs
cmpsb
mov
push
lret
jg
cltd
push
jno
push
arpl
or
out
pop
inc
ljmp
dec
rolb
and
sbb
cmp
sbb
lods
pop
sub
mov
push
add
pop
out
aas
repnz
fisubrl
and
lock
sub
scas
add
aam
adc
pop
cmp
push
sbb
adc
pop
sub
cmp
or
sub
into
jmp
in
cmpsb
out
push
mov
test
jle
xchg
and
das
inc
in
adc
shll
mov
imul
inc
jnp
ret
cmp
pop
stos
dec
fisttpll
arpl
out
jp
pop
in
mov
mov
xor
mov
scas
enter
sbb
push
adc
hlt
loopne
push
not
adc
fildl
push
fs
push
call
test
pop
movsl
fcompl
loop
call
xor
aam
gs
push
mov
out
push
cmc
lret
xor
in
stos
mov
fistpll
inc
add
ss
jb
jns
insb
xchg
add
and
mov
mov
inc
stos
loop
xor
jle
rolb
mov
xor
jno
adc
cmp
xchg
push
mov
iret
adc
imul
and
mov
cmpsb
bound
popf
inc
push
xchg
ljmp
out
mov
jae
dec
inc
cs
adc
and
xchg
push
ss
arpl
and
ss
xchg
mov
mov
push
jnp
std
in
add
mov
mov
cmp
sbb
mov
lret
in
sbb
repz
mull
lret
cmp
cmp
in
pop
mov
fidivl
sbb
adc
xor
imul
pushf
dec
fisttpl
enter
cwtl
jl
cmpsb
and
bound
lock
sbb
aas
les
insb
into
xor
jae
ja
into
lret
add
repnz
pop
fdivs
pop
jecxz
loopne
imul
popl
push
inc
pop
int
mov
fisttpll
scas
lods
sub
popa
xor
pop
mov
lock
pushf
mov
fstl
or
pop
cmp
inc
mov
xchg
pop
mov
nop
pop
cwtl
lea
js
addr16
test
sub
add
jmp
rcrl
xchg
dec
push
xchg
fistl
lods
cmp
jecxz
mov
jecxz
mov
add
test
mov
popf
jmp
pop
cltd
ss
gs
inc
sbb
loope
sub
push
je
xlat
xchg
insb
lds
pop
test
push
mov
dec
and
lea
lea
loop
dec
xor
insl
into
push
sbb
shlb
or
mull
sub
dec
insl
lea
fwait
arpl
div
out
dec
test
and
fbstp
push
push
bound
or
mov
inc
fcomps
mov
enter
imul
inc
sub
dec
pusha
jns
sbbb
cmp
mov
enter
mov
jo
je
test
mov
js
push
cld
notl
xchg
in
mov
jg
rcrb
mov
or
pop
xchg
jmp
jp
flds
pop
mov
test
or
adc
test
pop
dec
sarb
repz
pop
jmp
and
arpl
mov
in
daa
and
movsb
push
es
and
and
or
add
addr16
pop
dec
sub
mov
push
push
add
faddl
int3
cwtl
in
adc
ja
ret
popf
push
fildl
sbb
ljmp
fucomip
mov
hlt
dec
mov
ret
cld
mov
mov
iret
in
sub
mov
inc
add
notl
pop
push
mov
sbb
sahf
out
shlb
icebp
lods
cmpsl
or
push
mov
stos
mov
push
rclb
push
push
sti
mov
insb
cmp
mov
xor
mov
adc
fadds
xlat
and
jl
cmp
dec
mov
lods
addb
pushf
xchg
adc
and
xchg
mov
pop
add
inc
cld
nop
out
js
ud2
xor
mov
loop
mov
inc
movsl
fldenv
sub
cli
mov
daa
icebp
inc
loop
adc
test
push
rorb
imul
pop
push
xlat
mov
cmp
sub
gs
cmc
cli
inc
addr16
inc
sub
xchg
add
pop
lods
aas
jl
mov
sub
shlb
testb
xchg
dec
and
fwait
lock
push
int3
icebp
xor
adc
sbb
pop
inc
jb
jo
js
push
cmp
jg
pop
int3
jno
leave
icebp
and
js
int3
add
add
jmp
xor
dec
jb
rcrl
or
cmpsb
testl
lcall
xchg
xor
data16
mov
mov
je
push
inc
inc
js
imul
hlt
div
mov
loop
outsb
aad
jmp
mov
adc
ss
and
mov
das
add
lods
insl
or
and
aad
inc
cli
push
int3
mov
mov
push
stos
out
insl
shrl
push
pop
push
mov
xchg
rcrl
pop
mov
in
pop
add
imul
or
xchg
aam
jl
dec
icebp
clc
mov
imul
push
movsb
les
loopne
adc
lret
inc
mov
movsl
inc
jnp
dec
sub
add
iret
or
mov
pop
rcrl
mov
dec
mov
dec
jno
dec
mov
push
xlat
jb
out
out
push
je
push
xchg
jnp
mov
inc
bound
dec
mov
jae
push
movsl
cmc
sbb
cmp
push
push
xchg
out
stos
ljmp
in
orl
sub
add
cmpsl
fs
jo
adc
xchg
shr
jp
out
movsb
ja
lods
dec
insl
cmp
enter
cmpb
xlat
inc
andl
mov
movsl
popa
xlat
shrb
and
push
mov
lea
scas
push
rcll
in
jae
xchg
ljmp
insl
rorl
cmc
pop
xor
fs
dec
push
xchg
mov
loop
push
push
sbb
int
sti
jno
out
and
data16
loope
inc
stc
cmpsb
aad
mov
push
cmp
out
loop
nop
mov
mov
or
stc
dec
jbe
cld
outsb
xchg
push
into
stos
aam
shrb
push
out
into
sbb
xchg
jmp
addr16
mov
out
insb
jnp
int
jns
pop
cmpsl
fwait
mov
sbb
insl
jb,pt
mov
ljmp
mov
inc
jecxz
popa
and
test
sbb
cmp
cmp
jns
push
insb
ret
sahf
fstpl
rcrb
add
adc
push
sub
lods
lock
lods
jae
test
dec
jle
pop
popf
imul
in
push
stos
xchg
mov
daa
push
push
insl
call
scas
repz
loop
jne
cwtl
repz
pusha
xor
lret
dec
pop
aaa
mov
stos
cmp
mov
push
lods
cmp
cmp
fsubrs
adc
push
cwtl
js
add
lods
push
xchg
enter
icebp
mov
add
push
insl
jecxz
xor
xchg
ds
rcrb
fnsave
push
jb
pop
js
cwtl
fcomps
mov
out
lret
xchg
pop
fstps
ja
sbb
inc
jmp
test
stos
push
adc
adc
push
fldt
or
mov
pop
jb
inc
cmp
push
pop
lods
ror
lret
jecxz
push
cmp
stc
add
lds
jmp
push
jae
adc
in
nop
aad
sub
test
loope
shr
movsb
fstl
mov
cmp
add
addb
jno
xchg
inc
dec
push
xchg
inc
xchg
test
add
jecxz
push
mov
jp
cmpsb
jb
push
sbb
mov
icebp
xorl
test
mov
std
xchg
jbe
insl
loop
cmc
stc
add
imul
pop
adc
into
xor
test
push
jb
ljmp
cmpsl
cwtl
fcmovb
xor
add
popf
and
stos
sbb
repz
or
adc
cmp
shlb
pop
inc
je
std
cmpsb
data16
adc
shld
sub
ret
adc
dec
jnp
pop
jg
push
add
xchg
dec
add
ret
call
mov
jne
and
push
mov
cmp
sti
mov
mov
cltd
jo
sahf
or
cmp
cmp
jnp
lea
dec
dec
xor
movsl
or
insb
pop
enter
push
xor
fstpt
sub
cli
mov
aad
js
iret
imul
xor
xchg
stos
mov
push
adc
fisubs
cmp
push
mov
cld
aas
cltd
and
mov
xor
xchg
adc
or
or
mov
adc
lcall
jb
xchg
inc
push
insl
shrb
push
jmp
mov
mov
repz
fwait
jno
subl
sub
sahf
mov
xor
mov
out
mov
cmp
int
test
mov
push
pop
daa
outsb
mov
outsl
jecxz
popa
push
pop
xchg
loop
ret
mov
int3
xorb
push
jo
xchg
xchg
sub
sub
nopl
js
aas
enter
icebp
sub
or
insl
pop
mov
xchg
arpl
or
sbb
add
cmpsb
cmp
fiaddl
pop
fisubrs
aaa
mov
push
es
in
adc
outsb
or
pop
push
cltd
pop
push
jecxz
mov
pop
popf
sub
aam
ficompl
adcb
aam
inc
jns
bound
push
push
and
cmpsb
aaa
cmp
rcll
mov
mov
aaa
lea
and
push
fwait
pop
shrl
mov
inc
fmul
and
neg
mov
xor
addl
addr16
pushf
add
int3
lret
dec
push
insl
ret
xor
std
jmp
leave
add
xchg
stc
repnz
mov
or
mov
mov
fisttps
movsb
mov
dec
xchg
gs
sub
cmp
sub
inc
adc
nop
xchg
and
push
ret
pop
mov
mov
dec
notb
push
push
movsb
push
adc
push
faddl
mov
cwtl
jo
lret
xor
lds
in
mov
outsl
aaa
xchg
lds
loope
xorb
jecxz
loope
ficompl
cs
push
js
ss
cmp
pop
sbbb
hlt
in
push
faddl
jg
popa
sbb
push
call
je
or
fldenv
insl
adc
inc
xchg
lds
ss
push
ljmp
scas
pop
inc
ret
xchg
mov
cli
mov
daa
lahf
iret
mov
mov
jge
pop
jo
mov
jb
inc
mov
stos
loope
jno
xchg
lcall
mov
or
cld
scas
sbb
outsl
dec
jle
lea
out
add
push
jns
andl
xchg
add
mov
stos
lods
mov
mov
mov
xchg
inc
add
outsb
fcom
int3
mov
push
imul
popf
fcmovnu
fs
outsb
mov
pop
cld
add
sub
jmp
mov
cmpsb
dec
or
nop
cmp
repz
out
jle
jl
jb
fsub
jns
mov
jae
divl
cmp
inc
int3
cld
adc
and
insb
push
stos
aam
dec
loop
pop
xor
lret
imul
mov
dec
out
xchg
mov
outsb
cmpsl
fidivs
lret
ljmp
jecxz
sub
jle
call
push
xchg
ja
icebp
aas
xchg
pop
test
xchg
xchg
ja
xchg
jnp
xor
sub
icebp
cmp
sti
movsb
fcmovnu
add
ficomps
dec
jns
push
xor
out
lods
push
adc
xchg
sub
lahf
cmp
fistpl
jecxz
cmp
jb
xor
push
sub
fs
jl
sarl
xchg
cmp
xor
pop
adc
loop
mov
adc
mov
pop
sub
lea
xchg
inc
lods
test
add
inc
jae
sbb
jecxz
stos
push
frstor
push
sub
dec
sub
sarb
cld
scas
fwait
leave
pop
lods
sbb
xor
and
daa
mov
pusha
loope
sti
imul
stos
mov
ss
mov
test
mov
push
mov
lahf
loop
jmp
jge
cmp
shrl
in
ljmp
ret
movsb
aad
pop
cmp
mov
aaa
nop
insb
scas
mov
aam
jge
cltd
lret
mov
mov
mov
mov
jecxz
fisubl
movsb
fxam
das
sbb
sti
mov
add
xor
sub
loope
lcall
es
in
jle
add
mov
int3
dec
fisttpl
testl
pop
mov
popf
cmp
cmpsl
jecxz
std
cmc
fnstenv
stc
cltd
push
pop
sub
pop
stos
push
ret
push
in
adcb
mov
mov
es
jbe
ret
test
adc
push
mov
jae
xchg
dec
int
pop
cmp
aas
scas
sahf
dec
and
sub
jnp
add
pushf
decb
shll
cwtl
fcoml
jae
pop
mov
push
popa
aad
add
je
popa
adc
repnz
push
jno
rorb
cmc
loope
cld
lods
shlb
outsl
jbe
dec
sbb
jecxz
push
imul
xor
repz
cltd
movsb
sub
sub
shll
dec
jecxz
outsb
nop
mov
imul
icebp
lret
sbb
mov
push
cmpl
push
shl
andl
movsb
mov
mov
adc
mov
push
jmp
pushf
in
popa
inc
dec
cwtl
mov
inc
aad
mov
les
mov
cmp
jns
mov
and
push
paddb
lret
aad
add
mov
push
outsl
cmp
adcl
orb
pop
jmp
lea
pop
data16
pop
icebp
pop
mov
filds
movsl
push
add
rcrl
rol
mov
mov
push
jle
idivl
pop
cmp
test
and
dec
pop
lret
movsb
out
fwait
pop
cs
ss
push
inc
ljmp
ljmp
lods
add
iret
xchg
inc
and
adc
das
mov
test
mov
call
rcll
inc
jb
insb
pushf
lret
ja
pusha
stos
cs
flds
jle
sub
shlb
add
stc
or
ret
mov
mov
push
js
outsl
arpl
pminsw
push
insl
xor
mov
sub
mov
sub
arpl
dec
add
ja
push
rcll
das
and
xchg
dec
and
adc
mov
scas
cmp
leave
insl
cmp
dec
loope
ss
popf
imul
fs
pusha
mov
push
aam
mov
xchg
add
sub
jmp
dec
xchg
fidivrs
jne
cmp
sbb
mov
lds
mov
mov
out
ljmp
ss
jp
repz
xlat
mov
imul
mov
mov
sub
mov
mov
mov
xchg
sbb
xchg
add
cld
xchg
dec
loope
xorl
pusha
add
mov
cmp
mov
sub
or
jl
and
out
xchg
jne
insl
or
mov
gs
mov
insb
add
mov
mov
bound
dec
cltd
out
pop
inc
sub
je
mov
movsl
inc
and
mov
call
inc
arpl
mov
scas
sbb
lcall
sub
lahf
imul
mov
lods
int3
jns
rolb
cwtl
xchg
xchg
pop
mov
in
jo
leave
inc
mov
rcrl
into
repz
cmp
mov
insb
xchg
sbb
insb
scas
fdivs
js
repnz
frstor
push
lods
pusha
repnz
push
adc
add
mov
loope
inc
les
popf
mov
nop
cmp
push
mov
jl
lahf
loope
sbb
ss
incb
stos
pop
mov
adc
xchg
ror
cwtl
xor
mov
xchg
jl
negb
mov
pusha
lds
adc
aad
cmc
xchg
jp
movsl
and
dec
push
out
stos
push
dec
inc
push
ja
cmp
pop
mov
xchg
inc
jecxz
stos
xchg
cmpsl
xlat
cmp
jge
cmp
sbb
inc
ja
or
push
je
dec
pop
and
clc
pop
fwait
inc
inc
sbbl
jmp
cmp
loopne
ret
mov
fcoms
lock
insl
dec
scas
pop
jns
insl
int
int3
sti
push
nop
data16
adc
sahf
js
cs
popf
leave
mov
add
call
or
jmp
xor
insl
fwait
popa
rorb
mov
fsubp
stos
fbld
sub
xor
mov
sahf
pop
pushf
insl
dec
int
insb
imul
int
sub
pop
pop
jmp
into
ss
movsb
rol
ss
mov
ficompl
inc
mov
pop
inc
movsl
fwait
mov
je
pop
imul
mov
sub
repz
stos
ljmp
bound
mov
mov
fdiv
popa
mov
pop
popa
mov
pop
ljmp
testl
and
push
pop
xor
xor
jae
sbb
dec
ficomps
shrb
insl
ljmp
cmp
jecxz
dec
push
lods
loope
mov
pop
int3
aas
lock
cli
xchg
es
mov
lret
cmp
lea
gs
xchg
pop
sarb
sbb
mov
mov
push
loopne
mov
loopne
sbb
and
lret
cli
sbb
loop
sbb
scas
mov
shrl
or
popf
pop
aas
add
les
xchg
daa
in
sub
stc
outsb
xor
pop
cmpsb
in
adc
mov
xchg
mov
inc
cli
push
pop
or
cs
mov
mov
cmpb
cmpsl
mov
pop
jmp
cmp
scas
repnz
jo
lret
mov
xchg
fs
daa
dec
fbld
in
mov
adc
and
pop
push
call
push
push
or
xchg
inc
fs
in
loop
cmp
lahf
cmp
inc
fs
cmp
jp
out
cs
cs
scas
add
aad
fcomps
cltd
or
mov
mov
mov
dec
mov
sbb
scas
mov
jecxz
mov
repnz
inc
adc
gs
pop
int
jno
insl
in
inc
xchg
ficoml
jns
out
bound
add
mov
lods
push
stc
pusha
scas
inc
iret
mov
pop
lea
enter
dec
orb
repz
cmp
je
fs
mov
movsl
aaa
and
mov
test
nop
popa
je
jle
popf
mov
push
sbb
mov
int
sbb
jp
repz
enter
jns
int3
shrb
mov
mov
cmp
fbld
pop
mov
scas
lods
mov
xchg
cld
repz
movsl
adc
rcll
iret
les
ret
movsl
fdivrl
mov
pushl
shlb
stc
sarl
repnz
int3
int
out
bound
xor
mov
lret
lcall
pop
pop
jl
lret
push
mov
dec
mov
sbb
fidivrs
ror
clc
sbb
mov
inc
repnz
imul
cli
and
jns
sub
ljmp
icebp
lods
ja
dec
sub
push
sbb
daa
in
and
sbb
jmp
sar
flds
jecxz
out
mov
and
xchg
dec
shll
sub
cwtl
jns
mov
dec
sbb
mov
ss
loopne
cmp
pusha
out
mov
aad
leave
out
test
fmull
sbb
xchg
sar
jl
add
and
pop
xchg
or
xrelease
sub
mov
pop
in
cld
or
dec
rclb
icebp
and
adcl
andb
inc
adc
in
or
sbb
int3
lcall
loopne
int3
adc
outsb
push
and
mov
imul
sub
imul
and
lahf
push
mov
sbb
xor
out
sbb
movsl
sti
jnp
mov
jmp
pusha
pop
dec
mov
ss
push
jmp
sub
mov
outsb
xor
lds
mov
mov
adc
data16
xor
cs
jmp
push
or
pop
popf
dec
ret
mov
faddl
sbb
in
popa
xchg
mov
jl
cmp
or
popf
push
push
add
or
inc
cwtl
lcall
mov
and
xchg
dec
jle
pushf
imul
mov
mov
mov
fistl
int3
bsr
shl
mov
test
cmp
xor
dec
mov
add
loop
cmpsb
push
popf
push
jmp
std
and
inc
in
push
mov
cld
add
dec
in
int
jo
ja
jno
int3
stos
notb
int
lods
add
cmp
rolb
insl
add
mov
or
xchg
jle
cmp
mov
xchg
add
xor
push
nop
fisttpl
mov
push
sbb
fldt
cld
adc
mov
cs
cmc
sbb
cmp
mov
clc
or
and
sbb
mov
outsb
mov
rcl
daa
mov
inc
sbb
xchg
movsl
call
sbb
loopne
lret
icebp
push
iret
pop
outsl
addb
gs
jb
scas
ret
fmulp
mov
fs
popa
stos
pop
mov
ret
adc
pop
iret
jle
in
daa
inc
cmp
and
lods
aam
xor
jo
ss
mov
dec
lret
in
pop
dec
add
nop
jp
mov
data16
xor
or
lods
daa
aam
dec
cwtl
lret
xor
scas
push
stos
movsb
cmovl
scas
jecxz
adc
cmpsb
mov
mov
adc
mov
cmpsl
sbb
dec
xor
jge
std
arpl
dec
dec
mov
xchg
out
and
data16
fwait
shrb
stos
jne
dec
sti
push
aaa
insl
mov
adc
pop
test
add
pusha
cs
ljmp
jbe,pn
dec
mov
and
sti
mov
lea
loop
lea
push
fistps
mov
iret
sbbb
jecxz
aas
lods
mov
lock
mov
movlhps
mov
sbb
pop
xor
xor
mov
xor
lret
dec
scas
test
mov
movsl
xchg
mov
ss
lret
cli
jmp
mov
sub
jp
pusha
push
dec
sub
addr16
sbb
cld
add
loop
jl
mov
adc
push
pop
mov
adc
mov
cmp
idiv
xchg
popf
cmpsb
xlat
add
cltd
shrb
fnstenv
push
pop
popf
shll
push
dec
pop
int
sbb
iret
lods
out
mov
xorb
mov
adc
inc
dec
lods
fcomps
enter
cmpsb
jns
out
es
fsubrl
mov
and
stos
xchg
push
lods
imull
mov
push
mov
dec
xchg
rcll
loop
outsl
out
sub
xor
imul
dec
mov
mov
call
jno
cmp
stos
aam
fstpl
ds
mov
pop
and
adc
insb
mov
sbb
mov
mov
xchg
mov
test
cmpsl
sub
or
addr16
pop
cmp
pusha
addb
push
ret
push
lock
outsl
das
cmc
push
push
shrl
xchg
mov
or
jbe
out
mov
inc
push
cmc
popa
mov
sbb
mov
inc
cmp
sub
pop
cmp
out
cmp
js
aaa
inc
xchg
mov
pushf
or
mov
mov
pop
dec
inc
repz
or
jecxz
mov
movsb
cmpsl
add
push
popa
xor
cmp
movsl
shr
repz
shlb
mov
ljmp
leave
iret
shrb
cmp
fisttpl
enter
nop
inc
jg
shl
xchg
out
push
jecxz
in
fucomp
shlb
mull
add
jns
inc
popf
test
mov
lret
stc
je
xlat
or
lret
mov
dec
pop
in
aam
lods
xchg
fisubl
sbbl
mov
xchg
xchg
or
imul
mov
xor
les
into
mov
cmp
fsubrl
pop
call
sbb
mov
inc
icebp
loopne
inc
dec
fcoms
inc
dec
mov
test
and
fldcw
ret
push
xchg
pop
mov
cmp
lods
jne
push
insl
repz
push
pop
add
push
pop
js
gs
and
adc
xchg
push
aad
inc
sbb
cld
filds
cmp
stc
xor
mov
icebp
cmp
cwtl
movl
arpl
iret
jns
stos
cli
movsl
lods
or
push
dec
xor
sbb
lods
inc
cmpsb
add
jb
loopne
jmp
shlb
hlt
mov
cmpsl
sbb
fnclex
and
mov
inc
add
test
push
sub
jbe
imul
shll
stc
pop
clc
sbb
or
arpl
lahf
sub
mov
imul
push
mov
iret
push
ds
mov
test
xchg
movsl
and
repz
adc
lods
jae
stc
fwait
pop
lds
call
mov
mov
out
cmpsl
mov
stos
fcom
into
sar
loop
pop
pop
pop
inc
cli
lds
subb
fimuls
jb
add
pop
pop
pop
sub
cmp
jmp
add
loop
in
test
mov
xchg
jmp
mov
xlat
or
jne
push
cmp
or
push
xor
mov
adc
es
test
or
inc
enter
pop
jb
imul
xchg
cmpl
xchg
xor
loopne
cwtl
repz
xchg
cmc
xor
std
and
jno
inc
mov
inc
sbb
mov
pop
movsb
mov
xor
ficompl
loope
mov
insl
iret
bound
push
jae
mov
popa
sti
into
mov
testl
sub
adc
sbb
mov
out
jbe
jno
cs
lods
mov
and
xor
sbb
nop
jmp
mov
je
lods
scas
setg
dec
xor
jo
xrelease
test
jg
inc
cmp
mov
mov
dec
and
push
pop
or
mov
out
mov
pop
std
faddl
outsl
into
ds
mov
jge
bnd
fdiv
xor
jb
dec
idivl
test
call
enter
popf
jecxz
test
clc
popa
outsl
mov
mov
lea
mov
inc
movl
mov
aad
mov
and
adc
push
leave
stos
cmc
xchg
pop
mov
movsb
into
xlat
mov
scas
push
cmc
jae
sbb
gs
mov
jno
cmpsl
pop
rorl
push
cmp
test
sbb
dec
das
cmpsl
in
cmp
cmp
adc
loop
mov
push
jmp
jl
scas
sbb
adcb
mov
cmc
cmp
dec
jae
in
jb
push
cld
andl
filds
jge
stc
ret
dec
je
add
lret
sub
jne
jo
pop
scas
popa
call
sub
arpl
mov
jo
fnstcw
and
push
jns
pop
pop
dec
pop
inc
xor
xchg
cmpsl
xchg
jp
sub
fsqrt
sub
cmp
loopne
push
xchg
mov
mov
push
push
adc
je
repnz
out
pop
sub
push
in
enter
lahf
test
pop
in
fstps
xlat
loop
imul
pop
nop
dec
push
dec
adcl
jb
bound
test
and
shlb
lods
loop
cmp
dec
and
cltd
out
mov
and
pop
adc
inc
mov
adc
jb
outsb
push
data16
pop
and
out
sub
out
sub
mov
pop
push
sbb
mov
push
pushf
js
addr16
mov
icebp
mov
jmp
ret
xor
or
out
pop
ljmp
inc
inc
shll
xor
push
jae
in
mov
push
adc
sbbl
pop
jp
jb
adc
or
stos
jns
mov
aad
loop
cmp
les
int3
or
call
inc
or
jnp
adc
outsl
rorb
inc
cld
jl
mov
ds
ja
mov
cli
jl
add
lret
push
pushaw
push
push
push
jp
mov
add
adc
fwait
imul
cmp
incl
imul
scas
les
iret
adc
jnp
mov
lret
bound
movzwl
rcrb
pop
inc
cmp
lahf
cwtl
inc
shld
lock
inc
sub
repz
sahf
rcl
insb
outsb
jno
lds
out
pop
fld
fsubr
push
jne
repz
orl
int
xor
mov
js
cmp
test
jo
cmpsl
fcoml
shl
rclb
push
inc
fcompl
inc
fdivs
or
and
add
call
mov
lcall
bswap
sbb
gs
xchg
icebp
cmc
dec
lea
jl
outsl
shlb
lods
add
sbb
push
cmc
mov
mov
xchg
in
pop
dec
xor
jo
iret
adc
frstpm(287
adc
dec
adc
push
pushf
fwait
jns
lcall
pop
dec
pop
fdivrp
bound
xchg
in
mov
fucomip
jmp
jnp
mov
cmpsl
out
mov
lret
xor
int
push
mov
mov
sbb
out
push
cli
fildl
rcr
inc
hlt
negl
cli
jnp
jbe
jg
stos
jae
dec
pop
mul
hlt
cmp
dec
inc
pop
fwait
ja
cld
add
lea
dec
xor
pop
dec
jg
shll
int
popa
das
sub
xor
jge
in
jge
or
push
jnp
jno
cld
mov
in
std
xor
mov
or
mov
aaa
cmp
sbb
lods
scas
or
or
sub
inc
aad
imul
lods
dec
cmp
and
pop
scas
outsl
push
testl
mov
sbb
or
pop
jnp
cwtl
sahf
popf
es
stos
je
aas
cmpsb
lahf
push
das
sbb
mov
cltd
clc
xchg
hlt
jge
and
aad
or
mov
xchg
dec
bound
push
jecxz
fsubrs
aam
and
stos
mov
movsb
push
stos
pop
ds
out
pop
sub
sbb
inc
pop
dec
aas
adc
cmp
nop
cmp
xor
xchg
ds
aas
sub
bound
inc
pushl
push
mov
adc
cmp
and
and
sarb
and
kmovd
int3
aam
add
decl
mov
cmpsb
jbe
int
xchg
aad
push
test
or
jne
std
cmp
xchg
inc
adc
cld
jo
int
loope
xor
scas
aad
inc
push
in
cmpsb
or
sbb
or
clc
push
addb
jae
jbe
out
pop
pop
in
or
cwtl
push
and
clc
insb
rorb
add
inc
sub
movsl
loop
jno
adc
inc
aas
inc
and
sahf
pushf
sub
adc
das
pushf
popa
mov
cld
pop
mov
ret
clc
adcl
xchg
push
xchg
movsl
dec
or
push
daa
and
jl
pop
outsl
int3
rcrb
addl
subb
dec
dec
incb
js
addl
inc
xor
out
ljmp
push
push
iret
dec
mov
and
mov
fcoml
aam
cli
xor
js
jb
outsb
aam
cli
mov
mov
jmp
sub
cmpsl
xchg
and
xchg
enter
ret
mov
push
loopne
lods
dec
pop
nop
mov
inc
xchg
mov
rcrb
movsl
aam
pop
add
stos
pop
jb
cmp
or
mov
in
lcall
shrl
jecxz
mov
mov
inc
fimull
outsl
jns
push
cltd
cmp
jns
xchg
push
mov
cld
push
lock
jl
jbe
rorb
jbe
out
lds
xorb
dec
push
stos
hlt
dec
xor
xchg
and
mov
or
lcall
push
leave
dec
je
sub
fbstp
idivl
arpl
mov
pop
and
bound
push
mov
cmp
insb
jb
sub
pop
mov
cmp
mov
loop
fdivl
xor
imul
js
mov
lock
outsl
push
scas
mov
pushf
ja
in
and
pop
testl
pop
shl
outsb
pop
lods
mov
push
xchg
mov
xchg
jb
std
and
sti
sbb
mov
xchg
xor
pop
jmp
je
xor
sub
pop
mov
mov
fsubl
jge
lret
pop
add
dec
lret
jae
dec
enter
xchg
je
scas
pop
shrb
ja
mov
inc
out
xchg
repz
out
push
fdivrs
xor
mov
jno
sbb
fwait
push
lods
sub
mov
adc
test
pusha
jmp
test
sub
mov
mov
sub
stc
pop
mov
xor
les
rorb
xchg
shll
lock
xchg
mov
pop
das
aad
pop
mov
je
nop
cs
scas
mov
mov
mov
pop
and
in
mov
dec
addr16
test
ss
outsl
mov
dec
dec
loop,pt
mov
mov
mov
adc
or
sub
insb
lock
das
xchg
jns
or
mov
sub
outsl
dec
bnd
mov
mov
idivl
xchg
movsb
int
mov
or
or
and
shlb
mov
jl
inc
sub
dec
into
or
xor
xchg
shl
lds
out
inc
mov
insb
std
gs
std
fwait
xor
xchg
dec
and
push
out
scas
fs
jns
push
stc
inc
out
cmp
test
in
outsb
enter
test
jbe
icebp
jno
fwait
xor
and
push
push
lods
adc
cmp
stos
dec
roll
pmaxub
add
xchg
fisttpl
adc
imul
repz
ror
dec
sbb
sbb
test
in
inc
cld
and
jb
shl
push
lods
stos
cmp
inc
fbstp
jne
adc
pusha
out
les
lods
or
mov
lods
test
push
pop
push
insl
cli
es
divl
call
jmp
lds
aaa
in
mov
lcall
inc
pop
fstl
mov
add
stos
cmpsl
aam
adc
int3
arpl
push
ss
das
inc
dec
aad
add
dec
jbe
or
movsl
or
fadds
rclb
sub
dec
sbb
and
rcrb
xor
gs
mov
rcrl
xchg
aam
int
orb
and
popf
orps
jmp
mov
inc
sub
push
popa
push
xchg
lods
dec
cmp
sbb
ret
mov
xchg
out
int
popa
ljmp
rclb
icebp
mov
ja
inc
lahf
mov
xor
std
jne
js
inc
xchg
movsb
out
mov
aam
mov
push
mov
in
mov
stc
jae
sub
pop
scas
lret
mov
cmp
dec
adc
call
dec
mov
test
fldenv
loope
sarb
addr16
mov
push
test
xchg
sbb
lahf
outsl
sub
stc
fisubl
clc
repz
or
mov
jnp
or
ss
test
scas
out
leave
add
xchg
sub
inc
movsb
test
adc
cltd
lret
ret
push
outsl
movsl
pop
mov
pop
mov
and
jp
jecxz
xlat
imul
lods
xorl
ret
rcrl
mov
out
xlat
sti
call
jmp
pop
dec
xchg
hlt
jmp
push
insb
das
and
out
movsl
scas
xlat
sub
pop
and
pop
adc
imul
push
filds
shrl
sti
stos
mov
dec
fistl
mov
inc
ret
and
hlt
lcall
pop
or
enter
mov
ljmp
ror
ret
sub
in
push
dec
add
push
and
pop
rol
sub
and
jle
push
pop
mov
sahf
and
xor
lahf
fcmovbe
mov
dec
iret
repnz
cmc
cltd
xchg
pop
mulb
adc
sahf
shlb
fldt
or
inc
nop
shld
in
mov
push
fisubl
lahf
xor
addr16
push
or
pop
mov
dec
push
cwtl
dec
cwtl
std
mov
xor
dec
loope
dec
pop
inc
lret
aad
jne
mov
fdivrl
sub
xchg
lods
les
imul
dec
jmp
mov
repnz
into
add
mov
pop
nop
and
jbe
push
mov
rcrb
mov
mov
lods
mov
lods
pop
xchg
out
in
xchg
ljmp
pop
pop
in
cmp
sarb
xchg
fstl
scas
sbbl
test
dec
popf
into
mov
xchg
call
push
mov
dec
mov
sub
lcall
pop
and
cmp
mov
mull
adc
or
cmpsb
dec
je
aas
testb
int
add
pop
dec
shlb
jns
fiadds
out
lret
mov
sub
pop
dec
or
pop
xchg
xchg
and
pop
ljmp
pop
jb
jg
push
fs
jb
je
sub
jp
movsl
into
sub
addr16
adc
xor
add
es
adc
push
jmp
mov
jle
xchg
fldt
into
repnz
cli
adc
ds
add
loope
jge
push
gs
dec
sbb
pop
xor
pop
mov
or
stos
das
sbb
and
fxch
push
mov
into
call
mov
out
mov
lahf
ret
ja
shll
push
loope
dec
sbb
cmp
sahf
cmp
cmp
test
and
jo
out
imul
ja
pusha
xchg
inc
jae
inc
stos
scas
test
and
inc
arpl
jmp
stc
xor
scas
clc
and
inc
fisubs
test
std
test
rorb
sub
subb
xchg
ljmp
fbstp
dec
mov
inc
or
sub
sahf
fcompl
mov
nop
mov
data16
sub
xor
lret
filds
mov
mov
mov
aad
data16
adc
call
sub
insl
mov
and
adc
in
out
xor
push
xor
sub
cmp
notl
stos
shll
sbb
sbb
push
xchg
loope
mov
xchg
sub
dec
movsl
ljmp
and
cmp
ljmp
xorb
data16
dec
push
popf
sbb
cmp
repz
xchg
inc
xchg
add
xorb
pop
cwtl
inc
imul
jno
xor
ja
int
sub
lret
lret
faddl
stos
js
jae
lods
imul
sbb
mov
je
adc
int3
sbb
lods
pushf
inc
imul
dec
jle
dec
repz
mov
dec
loop
in
mov
jmp
ja
scas
sbb
sub
cli
ret
jno
addr16
xor
loope
in
jno
jmp
clc
xchg
push
and
dec
and
push
push
cmpsl
das
enter
ljmp
lret
sbb
cmp
movsl
pop
pushf
pusha
cltd
inc
dec
cld
iret
jmp
dec
add
iret
and
xchg
imul
popa
iret
fwait
js
int3
pusha
fldt
stos
jns
gs
push
jns
loopne
mov
les
pop
cltd
jns
sbb
add
mov
jne
pusha
fidivl
jb
dec
jo
and
cmp
sarb
in
xor
xor
add
arpl
xorb
dec
mov
cmp
stos
roll
test
jnp
nop
dec
testl
imul
sahf
and
lods
xchg
or
rorb
pop
pop
adc
dec
sub
cli
ret
imul
xchg
pop
xchg
ja
dec
mov
cltd
jbe
decl
push
pop
rorb
xor
fildll
sub
insb
loopne
cs
shll
shlb
push
movsl
out
imul
adcl
cltd
aam
cmpsl
stos
test
orl
mov
jle
ficompl
insl
xchg
jae
xorb
lret
or
xchg
xchg
dec
out
or
xchg
mov
xchg
lods
imul
out
jnp
stos
sub
loope
jbe
jl
lods
daa
mov
cmp
lock
jns
mov
lret
push
jg
or
sahf
movsl
push
or
nop
pop
inc
fcmove
sub
sbb
test
jb
pop
jns
dec
xchg
sbb
fistpll
adc
arpl
out
xlat
and
xor
xchg
mov
mov
popa
lods
sub
lcall
arpl
repnz
mov
cmpb
jmp
data16
pandn
sahf
xor
hlt
cltd
adc
push
push
hlt
lds
mov
unpcklps
fcmovnbe
sub
mov
cmp
xor
cmpsl
push
sub
cmp
cmc
int
rcrl
mov
fcoms
and
add
cmp
dec
mov
out
adcl
mov
push
test
xchg
cld
pop
lea
pop
sub
jecxz
dec
pop
divl
lahf
add
sbb
cmp
cmp
fwait
adc
sub
mov
loope
nop
mov
aam
outsb
notb
hlt
clc
cmp
cmc
shrl
xor
sahf
aaa
adc
or
lds
scas
cmp
sub
jne
add
xchg
pop
xchg
cmpsb
fcoml
xor
jno,pn
xchg
mov
and
lcall
push
out
daa
mov
insb
arpl
scas
into
in
jns
adc
stos
cmp
ror
dec
and
lds
ljmp
cli
mov
mov
add
fwait
push
jno
inc
mov
test
jns
lret
sbb
shl
push
stc
xchg
jle
in
mov
into
jnp
xor
ret
dec
mov
pop
mov
sahf
mov
out
cltd
sbbb
jb
push
loopne
mov
sbb
out
xor
mov
jmp
insb
mov
shl
int
in
dec
negb
das
bound
das
inc
arpl
into
jb
out
inc
out
cmp
mov
jb
jge
into
sbb
rcrb
pop
data16
jae
pop
popf
inc
stos
mov
sub
pop
xchg
mov
cmp
xor
sbb
into
sti
mov
mov
addr16
xor
sbbl
jmp
adc
cmp
inc
xor
adc
sbb
inc
mov
repz
lods
out
or
xchg
mov
adc
mov
add
mov
inc
rcll
dec
jecxz
sbb
lock
add
pop
pop
pop
or
mov
push
jle
xor
nop
adc
js
aaa
aam
aad
push
inc
in
push
repnz
sahf
stos
mov
push
pop
test
xchg
mov
adc
cs
xchg
daa
lods
jno
cld
sbb
movsl
out
inc
pushf
sarb
xlat
loop
xchg
push
stos
test
ljmp
std
inc
xchg
pop
xor
jns
mulb
adc
sub
cmp
ss
aas
jne
cmp
roll
loopne
fists
xchg
cmp
sbb
cmc
sbb
ljmp
mov
mov
mov
mov
mov
std
xor
xchg
int
add
jo
inc
jge
pop
lcall
pushf
cmp
jo
mov
addr16
iret
aam
mov
in
xchg
push
mov
mov
push
roll
enter
ja
adc
test
rcrb
mov
sub
xor
add
popa
shlb
test
fbstp
push
mov
cltd
and
sub
add
std
scas
imul
sbb
xor
les
data16
sub
test
push
sub
adc
mov
aas
pop
loopne
mov
cmp
mov
sub
mov
std
loop
stos
subl
shl
or
pop
jo
add
and
add
inc
xor
mov
inc
stos
or
add
adc
bound
lea
mov
jnp
inc
jbe
ficompl
xlat
add
lcall
in
leave
sbb
sub
ss
jmp
lods
repnz
hlt
pusha
sti
stos
mov
les
dec
mov
sub
lret
xlat
das
xor
js
mov
sub
data16
lahf
inc
loop
enter
or
push
inc
dec
cmp
mov
add
sbb
nop
fs
mov
cmp
pop
xchg
in
scas
pusha
add
test
stos
push
mov
mov
adc
leave
adc
gs
mov
mov
outsl
mov
fdivl
mov
cmp
xor
mulb
mov
pushf
mov
lds
jecxz
mov
mov
dec
mov
xor
cmp
push
mov
push
push
pop
insl
sub
imul
push
push
pop
adc
stc
movsb
and
cmp
mov
sub
fcoms
add
movsl
fisubl
stos
or
sbb
repz
xchg
and
sete
insl
xor
push
fdivrp
addr16
pop
cmp
push
mov
pop
int3
mov
out
dec
inc
shrl
xchg
insl
cmp
jl
in
cmp
or
pop
out
imul
iret
movsb
push
je
sti
sub
lret
xor
loope
in
in
ja
sti
and
iret
pop
jae
sbb
lret
mov
aaa
jb
adc
mov
fisubrl
add
idivl
outsb
cmp
int3
push
bound
adc
mov
or
jno
insl
cmp
push
adc
jns
mov
jge
xor
decl
int3
lret
in
push
jnp
sbb
xor
ljmp
or
faddl
outsb
mov
insl
cmpsb
sbb
sub
push
imul
mov
scas
gs
mov
std
adc
aad
outsl
pop
movnti
xchg
pop
jno
std
repnz
adcl
outsl
mov
repz
xchg
mov
lock
sti
je
mov
test
sbb
mov
insb
insl
or
rorl
mov
pop
into
mov
inc
cld
lea
or
mov
sbb
and
shll
lds
ljmp
jno
test
fdiv
cmp
or
aaa
aaa
into
mov
or
mov
les
fistpl
cmpsl
out
push
inc
in
mov
pushl
imul
push
adc
leave
mov
cwtl
sbb
jp
aaa
ficompl
shrl
mov
mov
xchg
jge
std
push
pop
movsl
scas
sub
jbe
cli
and
lret
xchg
xor
in
insl
ret
lock
aam
aad
icebp
jle
sbb
fs
repnz
inc
push
scas
dec
icebp
pop
arpl
dec
mov
adc
bndldx
faddl
test
sbb
pop
popa
shll
sbb
or
loop
mov
mov
sahf
cmp
inc
loope
sub
push
jecxz
icebp
jle
das
jae
cld
sub
pop
sarb
mov
inc
daa
and
pop
and
aam
push
jmp
mov
cmp
ficompl
pop
and
test
mov
sti
repnz
sub
aam
and
mov
dec
dec
cmp
fstl
xchg
out
imul
cltd
sub
xchg
push
mov
shlb
mov
in
sub
shr
sub
dec
xchg
pop
push
ret
shl
inc
lretw
adc
or
push
insb
mov
data16
pop
int3
imul
stos
adc
xchg
jae
ret
int
jo
mov
aad
shrb
in
pop
loopne
inc
adc
pop
std
xor
stos
mov
add
sub
v4fmaddps
loop
hlt
lcall
mov
dec
add
jmp
push
mov
bound
outsl
xchg
or
adc
add
mov
dec
mov
fwait
mov
jno
xchg
pop
out
mov
jmp
fildll
mov
push
sbb
cmc
fucomp
sbb
fidivl
pop
mov
into
mov
loopne
ss
push
shll
cld
jne
pop
je
into
mov
and
mov
fwait
bound
repz
orl
and
inc
inc
jl
xchg
or
pop
adc
push
add
jns
xor
pop
sbb
test
in
ret
and
dec
jbe
pop
dec
sahf
cmp
xchg
pop
negl
lods
fiadds
gs
and
lret
pusha
mov
push
push
or
inc
inc
sub
pushf
loopne
pop
and
pop
nop
cs
shrb
popf
ds
out
dec
xchg
mov
or
mov
popf
push
int
stos
mov
insb
jbe
bound
cmp
pop
ds
sbb
movsl
fstsw
loop
push
jns
mov
jge
mov
mov
das
insb
cmp
mov
mov
jns
out
and
shlb
repnz
out
popa
dec
mov
icebp
xor
sbb
mov
xchg
and
les
mov
mov
jg
sarb
testl
fwait
add
ljmp
nop
mov
adc
lret
push
outsl
dec
aam
inc
stos
pop
jno
stos
add
cwtl
pop
inc
shl
fldl
fdivrl
inc
hlt
cld
lcall
mov
in
insl
pop
cmp
cmpsl
xor
pop
fdivrs
jo
cmc
cmp
les
mov
std
test
daa
lods
aas
pop
pop
sbb
cmp
fisubl
stos
fcmovnb
aas
mov
mov
sbb
adc
xor
and
xchg
cmp
adc
mov
jg
jp
cmp
aad
pop
sub
push
or
push
loop
loope
clc
aaa
and
xor
addr16
loop
stos
rolb
sbb
adc
dec
iret
sub
push
js,pt
xor
mov
push
pop
mov
mov
mov
dec
push
lods
imull
into
stos
push
das
lods
push
xlat
push
stos
pop
call
rclb
adc
push
addr16
mov
pop
lods
dec
inc
std
cmp
or
orb
adc
mov
jnp
lods
scas
push
jg
dec
push
mov
filds
push
adc
sub
pop
into
mov
inc
les
hlt
into
data16
jne
mov
inc
xchg
mov
xor
sbb
mov
and
iret
sti
push
cmp
in
sub
mov
into
into
or
xor
cs
sbb
scas
in
mov
imul
aam
rolb
into
into
ret
arpl
fsubrs
lods
and
out
int
pushf
addr16
push
dec
xchg
pop
xor
xchg
cltd
sbb
insl
sub
inc
sub
xchg
in
dec
sbb
hlt
out
mov
sar
lret
out
and
out
lea
cmp
scas
ret
lods
mov
mov
std
out
jle
sub
add
or
push
lret
inc
hlt
inc
cs
cs
sbb
ficomps
inc
xlat
dec
mov
lcall
jl
test
sbb
addl
jle
mov
xor
or
push
jbe
insl
cld
pop
and
pop
aad
add
shrb
cmpsl
lods
out
mov
inc
mov
into
subb
loope
lret
mov
ss
jp
sbb
push
inc
pop
mov
push
adc
sub
dec
and
xor
mov
in
scas
sahf
cmpsb
inc
and
xor
enter
stc
cmp
add
cmc
mov
sbb
lds
bound
xor
dec
pop
add
addb
mov
js
jecxz
aas
stc
adc
jne
xor
and
cmc
das
sahf
adc
mov
adc
jns
lods
dec
pop
pop
jns
mov
mov
cmp
std
rdtsc
fwait
repz
mov
and
lock
mov
dec
fnclex
or
das
jp
cmp
push
push
push
outsl
mov
or
cmp
adc
fsubrl
push
popa
mov
mov
mov
add
aad
pusha
jmp
fisubrl
ror
mov
xor
mov
jg
dec
mov
js
out
das
lds
xchg
push
or
mov
mov
int3
aaa
stos
mov
mov
push
fstpt
xchg
add
adc
jle
lock
mov
test
les
sbb
dec
xchg
adc
sbb
sub
inc
lods
mov
fists
pop
dec
lods
sub
pop
repz
jne
into
xchg
in
cli
sbb
mov
test
je
sub
mov
inc
hlt
call
insl
jg
sub
jns,pt
jecxz
sti
test
push
adc
cs
lods
sbb
jg
mov
std
xchg
std
into
sub
bound
je
insl
test
popf
leave
mov
jbe
pop
sub
add
js
push
xor
adc
push
addr16
sub
sbb
jl
adc
pop
and
xlat
mov
outsb
out
adc
lods
in
sbb
pop
pop
fwait
jmp
nop
sub
pop
or
mov
hlt
hlt
stos
pop
icebp
ret
dec
sarb
dec
rol
lret
mov
pop
stc
sbb
les
mov
push
mov
push
jmp
ds
insl
dec
and
jle
out
pop
push
sub
icebp
rorl
mov
push
cmpsb
mov
xor
xor
sub
inc
iret
ss
or
jmp
lret
pop
and
add
outsb
lea
arpl
xlat
adc
cltd
sbb
aaa
jmp
jecxz
popa
pop
cmpsl
dec
hlt
fsubs
push
lret
jle
or
rcrl
jg
test
xchg
scas
jmp
sbb
pop
sub
or
jne
mov
ja
filds
mov
push
jnp
test
sbb
fcompl
sub
int
push
mov
inc
or
jno
sbb
pop
aaa
jmp
ret
xor
add
fs
jbe
ja
std
cmp
mov
cmp
and
xchg
mov
cld
cltd
insl
je
lods
pop
sbb
jg
add
daa
pop
or
rorl
adc
fiadds
pop
push
sub
inc
xchg
cmpsb
push
xchg
out
popa
mov
push
icebp
cmp
stos
cmpsb
and
adc
pop
loopne
rorl
xor
movsb
shlb
incl
mov
fstpl
lods
dec
xor
add
or
jb
dec
adc
mov
xor
dec
mov
add
mov
dec
adc
sbb
jg
orl
lea
xor
jnp
pop
dec
inc
inc
gs
xchg
inc
int3
xor
add
jp
insb
ja
jne
mov
mov
pop
jbe
in
xchg
clc
xor
in
insb
jno
xor
sbb
jo
inc
xor
jp
jp
mov
mov
scas
dec
xchg
or
push
add
mov
mov
xor
dec
cli
jb
leave
scas
inc
push
je
push
fistl
test
xchg
shrl
dec
xchg
mov
mov
jno
mov
cs
sub
pop
shrl
stos
movsb
jmp
xchg
insb
jne
jae
roll
mov
dec
push
mov
cmc
ljmp
inc
fcmovu
push
inc
inc
fcoms
imul
jbe
not
mov
and
jmp
pop
pop
xor
inc
push
and
add
push
lcall
insb
bound
sub
mov
pusha
cmpsb
ljmp
ja
fidivl
jmp
rcl
hlt
test
jge,pn
cld
sahf
addr16
dec
jecxz
test
pop
cmpsb
adc
cwtl
ja
xchg
add
and
dec
negl
mov
sub
loop
sub
push
push
push
xor
push
jae
mov
or
xlat
test
xor
test
push
shlb
es
insl
out
xlat
int3
adc
mov
rcr
daa
pop
shll
sbb
repz
xorl
mov
in
sub
mov
sahf
and
gs
dec
mov
push
fimull
fcoms
xchg
xor
imul
ljmp
cli
adc
movsl
mov
push
mov
xchg
test
dec
push
or
daa
or
js
or
loope
add
pop
inc
add
out
push
xor
pop
arpl
pop
xor
pop
jp
outsb
aad
arpl
test
cwtl
nop
lock
jmp
hlt
loop
test
aas
jne
xor
aas
std
insb
add
mov
mov
scas
test
shlb
push
jns
nop
loopne
cld
cs
and
cmp
sub
cmp
test
cmp
divl
cmpsb
inc
add
jnp
punpckldq
cmpsb
mov
out
rclb
push
and
lods
and
pop
lahf
stos
fisttpll
int
add
jecxz
dec
xor
xchg
test
mov
mov
mov
adcl
pop
dec
call
mov
es
xchg
push
cltd
add
and
sub
xchg
ret
push
js
sahf
jnp
or
mov
mov
jb
adcl
scas
jb
clc
pop
in
outsb
pushl
cmpsl
pop
jae
ljmp
outsb
or
enter
cvtps2pd
test
cmp
mov
fwait
xchg
test
shlb
jne
lcall
mov
pushl
enterw
inc
int3
sbb
sbb
sbb
mov
mov
sub
aas
lods
imul
in
dec
stos
push
lcall
repnz
out
fistps
push
ss
imul
scas
and
mov
lret
arpl
pop
imul
stos
add
sbb
dec
and
dec
dec
movsb
fnsave
mov
popa
rcrl
rol
sub
in
cwtl
test
jg
je
stos
pop
scas
lahf
xchg
mov
pushf
ds
sub
test
es
xor
jp
sahf
sbb
in
add
lcall
sarb
mov
movsb
into
sub
dec
sub
clc
xchg
push
sbb
enter
xor
xor
jbe
add
aaa
jg
cmp
je
pop
sahf
push
jbe
adc
mov
scas
movsb
negb
push
out
add
test
repnz
cld
or
shrl
enter
adc
pop
daa
mov
sbb
pop
mov
popf
cmp
lds
ror
jbe
clc
mov
fdivrl
sti
inc
and
das
imul
or
mov
pop
xchg
dec
ret
mov
pusha
jnp
xor
inc
mov
push
idivl
pushf
and
js
jnp
mov
sbb
sarb
xor
je
test
repz
jg
jmp
dec
mov
jns
mov
push
sbb
push
int
fnsave
dec
mov
sub
xor
stc
add
pop
mov
sbb
push
aad
mov
cmp
xor
jmp
jg
out
jle
pushf
out
cmp
icebp
out
push
stc
fstl
pop
es
pop
mov
imul
iret
cmpl
pop
dec
out
dec
mov
jg
or
adc
cmpb
xor
jg
adc
pop
xchg
cld
jae
mov
clc
mov
out
dec
cld
repz
dec
cltd
sarl
ss
imul
in
jg
bound
addr16
jp
repz
sahf
dec
xor
sub
stos
cld
jne
imul
push
ret
in
cmpsb
push
xchg
adc
push
fildll
jmp
sti
mov
fwait
xor
int
add
out
insl
out
mov
inc
lahf
cmp
loope
jnp
addr16
popa
das
scas
dec
aad
adc
mov
jb
mov
rcl
cmp
pop
rorb
jle
jne
mov
test
lcall
sbb
mov
dec
lods
push
lcall
mov
call
inc
push
insb
mov
mov
bound
icebp
int3
lcall
sub
mov
jmp
ljmp
cmp
push
sarb
clc
add
decb
mov
out
xchg
test
hlt
imul
sbb
push
add
lods
inc
push
pop
add
cmp
mov
scas
cmp
test
and
push
or
adc
out
out
or
mov
pop
adc
ss
adc
push
insl
adc
dec
push
mov
mov
aam
mov
push
test
sarl
adc
inc
pop
leave
clc
xor
roll
inc
add
adc
mov
pop
out
in
mov
inc
sbb
mov
jns
lret
imul
out
cmp
add
xchg
je
adc
adcb
stc
sub
mov
lods
or
shll
jmp
popa
mov
lods
adc
sub
xchg
inc
mov
js
dec
mov
ja
inc
das
hlt
xchg
inc
fisttpl
test
stos
mov
adc
xor
sbb
push
mov
xchg
out
sub
sub
pop
sub
adc
push
mov
es
mov
mov
cmp
loop
mov
lret
rorl
sub
xchg
and
dec
push
ficoml
mov
and
arpl
loope
mov
lock
pop
pop
sbb
insl
inc
push
and
pop
addr16
enter
shll
std
js
mov
mov
inc
fisubrl
stos
das
jno
outsl
mov
addr16
push
inc
sar
ja
sbb
adc
mov
cmp
mov
fistpl
mov
push
pop
or
xchg
sbb
mov
out
cmp
hlt
pop
lds
push
and
das
mov
loopne
mov
sbb
mov
pop
xchg
pop
in
aas
lock
lock
ds
sbb
iret
cmp
cmp
in
pusha
imul
mov
sub
imul
sub
add
xchg
scas
in
mov
cmp
jp
sti
das
adc
pop
pop
loope
insl
sub
inc
xor
sbb
enter
add
lea
lcall
push
hlt
or
inc
imul
movsl
rcll
imul
je
mov
lds
test
lahf
dec
sub
sub
jge
mov
cmp
xorl
lcall
and
jno
jb
pusha
push
cli
adc
in
rclb
mov
loop
arpl
mov
push
sti
jnp
xlat
mov
sbb
inc
jne
icebp
fmuls
jecxz
jo
in
lea
sbb
and
cmc
and
push
push
push
aas
xchg
or
dec
cmp
aam
push
outsb
jge
daa
shrb
adc
mov
lds
mov
pop
fstpl
sbb
xchg
ficoml
outsl
xchg
push
push
shll
mov
loop
mov
fmul
fcom
fdivs
push
jp
fistl
fimuls
xchg
or
into
or
jno
xor
push
mov
test
inc
stos
out
jl
lods
movsb
cli
sahf
cmpb
mov
scas
lds
loope
cld
jmp
jo
lahf
test
adc
push
daa
loope
jg
adc
rorl
std
xchg
daa
loope
cli
clc
dec
clc
pop
hlt
das
or
push
sahf
test
dec
ret
sarl
xor
int
lock
orl
sbb
loopnew
lret
int3
xor
cmpsl
lahf
ret
inc
btc
mov
imul
sub
enter
jae
and
lret
int3
fwait
adc
cli
ret
adc
scas
jmp
test
fbld
jo
xor
mov
jle
push
mov
push
imul
dec
loopne
sbb
sbb
sub
add
fucomip
add
ljmp
cmpsl
pop
mov
mov
cmp
in
push
data16
sbb
mov
arpl
sbb
sbb
pop
sub
mov
les
xchg
mov
cmp
leave
roll
adc
enter
pop
aaa
cltd
cmpsb
enter
and
lcall
pop
fisubs
push
fmull
rorb
sub
push
movsl
pop
pop
sbb
test
daa
mov
xchg
pop
loope
js
and
adc
loop
mov
inc
dec
xchg
jnp
push
andl
sahf
inc
gs
pop
cmc
push
adc
ljmp
fidivrs
pop
mov
cmp
jns
jl
inc
int3
ret
pop
das
int3
mov
jne
out
mov
adc
or
cwtl
push
mov
fcoml
and
in
add
jb
push
test
insb
inc
pushf
jbe
mov
subl
std
insb
movsb
loope
cmp
mov
fiaddl
test
and
daa
leave
fs
rcrb
clc
cmp
dec
pop
pop
in
fsub
data16
call
sbb
icebp
bound
mov
test
popf
push
pop
testb
xor
shrl
nop
xchg
repz
loopne
fnstcw
sbb
nop
push
cmp
push
hlt
pop
xchg
icebp
lahf
mov
cmp
jnp
loope
enter
push
adc
loope
gs
xor
jge
testb
sti
cmc
pop
and
fnstcw
jns
mov
push
xchg
jne
or
mov
pop
xor
lcall
mov
sti
pop
mov
insl
mov
mov
sub
inc
lahf
sbb
iret
adc
test
mov
add
fisttpl
gs
xor
mov
mov
sbb
mov
cmp
dec
pop
jle
in
adc
jmp
and
sub
mov
scas
xchg
or
xor
pop
test
fnsave
fwait
sbb
xchg
scas
gs
jne
sbb
mov
idiv
cmp
xchg
and
int3
jmp
pop
es
icebp
jmp
shlb
mov
lcall
fimuls
dec
adc
not
jnp
ja
in
data16
mov
add
add
cmp
lods
push
xlat
adc
xchg
and
cmpsb
adc
mov
fwait
mov
sbb
pop
test
icebp
or
lahf
cwtl
push
stos
aas
popf
outsb
push
push
push
insl
jns
stos
dec
dec
mov
ja
test
pop
dec
mull
xlat
push
push
cmpsb
jle
dec
jbe
cmp
imul
dec
mov
xor
xor
sub
rclb
cmp
shrl
arpl
mov
loop
dec
jl
rcr
movsb
mov
mov
jmp
ljmp
push
jo
lret
inc
mov
mov
mov
xchg
aad
fldt
mov
mov
scas
jb
dec
mov
sahf
and
dec
addb
insb
movsb
ja
fwait
movsl
not
adc
mov
dec
lods
push
and
sti
jp
in
mov
ficoml
lahf
sbb
sbb
dec
add
clc
gs
rcrl
push
das
std
pop
mov
lods
scas
adc
xchg
mov
push
mov
and
push
rorl
aaa
push
xlat
inc
jl
push
adc
and
mov
fldcw
sbb
out
push
cwtl
and
shlb
and
jg
adc
dec
std
out
jns
pop
nop
orb
pop
fsubrl
jbe
jge
in
dec
aas
mov
push
outsb
mov
aaa
pop
cmpl
push
leave
jb
fnsave
sub
mov
or
shlb
jbe
lods
in
mov
call
shrl
loope
mov
mov
adc
shl
push
setne
in
and
mov
js
mov
cmp
xor
jno
mov
xor
and
xchg
adcl
jbe
xchg
ljmp
xor
jb,pt
add
jno
jl
stos
popf
sbb
adc
icebp
sbb
push
clc
mov
add
push
cltd
cmp
inc
cmp
add
mov
push
in
and
movsb
xor
push
dec
xchg
stc
xor
nop
sbb
nop
js
mov
jne
imul
mov
clc
adc
mov
adc
adc
sub
xchg
cmp
mov
shll
pop
mov
adc
loope
mov
jmp
nop
pop
xor
mov
jns
adc
add
adc
inc
pushf
dec
inc
jecxz
sbb
cmp
adc
pop
enter
rolb
xchg
sbb
jp
out
and
mov
pop
popa
jnp
mov
push
in
mov
out
xor
dec
push
test
cld
stc
sub
lret
and
mov
cmp
push
mov
dec
cwtl
int
lock
pop
rcrb
jecxz
add
jl
lcall
inc
xchg
fstl
ds
mov
push
aam
mov
aam
ficomps
popf
aas
ja
jge
inc
fwait
jnp
ret
int
outsb
sar
je
cmp
cmp
mov
cli
fsubrl
ja
pop
cmp
sbb
fildl
in
push
dec
jnp
iret
loope
stos
sbb
pop
popa
sarl
push
mov
leave
adc
xchg
pop
aam
out
sahf
mov
pop
jnp
aas
std
jno
hlt
mov
out
cmpsl
insl
int3
ficoml
mov
cmpsb
data16
pop
and
dec
fcmovb
in
fwait
popf
push
mov
stc
jecxz
adc
out
fs
lods
mov
pushf
dec
push
add
xchg
push
and
cmc
mov
insb
push
addr16
sub
push
mov
loop
jecxz
movsb
xchg
cmpsl
test
sbb
cltd
inc
or
int
inc
cmp
cmp
ret
xchg
outsb
imul
rol
dec
and
xor
lods
rorb
cmova
loop
insl
sub
das
inc
xchg
enter
call
mov
orb
jecxz
fdivp
shlb
jns
es
sub
push
mov
push
lods
sahf
sbb
mov
jg
cmp
push
push
adc
imul
push
mov
or
bound
pop
or
lods
jl
fsubp
cmpsl
mov
pop
int3
testl
dec
jg
mov
cmpsb
pop
xor
lcall
lods
sub
cmp
xor
lea
aam
mov
push
push
fmull
and
pop
sub
pop
addps
pop
adc
insb
sti
ror
call
shrb
jle
push
mov
mov
out
out
pop
dec
fidivs
fistps
and
ja
mov
mov
inc
std
sub
scas
xor
out
adc
mov
jg
xchg
mov
or
pop
repz
sbb
pop
sbb
mov
cmp
sub
mov
in
mov
push
filds
orb
popa
negb
cmpb
xchg
ljmp
sahf
aad
pop
cltd
cmpsb
mov
pop
movsl
cmp
sub
xor
inc
sub
psubusb
adc
push
ret
sub
adc
pand
add
sbb
movsb
shrl
push
jne
mov
add
sti
sbbl
push
xor
movsb
xlat
cmp
sub
pop
scas
jb
jp
and
xchg
mov
mov
fcomi
dec
mov
je
fistps
divb
into
cmpb
xchg
imul
jp
dec
cmpsl
mov
pop
lods
adc
es
jbe
mov
sets
testl
inc
gs
jns
xor
add
pusha
jge
loope
xlat
add
addr16
cmpsl
out
fbld
jbe
out
pusha
xor
rorl
lahf
ret
sbb
aaa
cltd
fs
lahf
jecxz
inc
pop
inc
insl
je
and
xchg
mov
jle
pop
pop
sub
push
fs
leave
aas
sub
push
or
cmpsl
lea
pop
sbb
data16
pop
push
aaa
jl
icebp
popf
mov
push
loop
and
inc
test
and
mov
sbb
hlt
fsubrs
mov
add
lcall
into
mov
xchg
add
inc
testl
ficoml
cld
jns
mov
push
jl
dec
jnp
outsb
clc
imul
sbb
pop
dec
mov
int3
mov
cmp
push
aaa
adcl
mov
inc
addr16
push
leave
push
adc
in
in
cld
add
scas
fsubrs
les
movsl
test
jle
mov
jp
insl
xchg
mov
sbb
and
mov
lods
scas
aam
cld
loopne
mov
ds
adc
sub
idivl
dec
pop
fcompl
dec
daa
insb
test
fcoms
add
add
out
jecxz
jp
sar
pushf
popa
cmp
insb
test
jl
ficomps
pop
aaa
push
icebp
inc
cmpsl
push
push
push
cmp
pop
and
sbb
add
ds
jne
loope
cmpsb
pop
jbe
and
mov
in
fwait
pop
dec
or
loop
clc
loope
add
or
cmp
push
cmpsb
xchg
adc
mov
jno
pop
xchg
mov
imul
dec
stos
movsl
pop
xor
jno
lcall
loop
rorb
mov
fyl2x
xchg
pop
push
in
ret
sub
cwtl
popf
cmc
pop
mov
or
aaa
ja
lds
dec
and
icebp
adc
ss
ret
hlt
xchg
xlat
mov
leave
jle
inc
bound
mov
push
fsts
dec
int3
test
inc
or
or
dec
adc
ja
lahf
push
imul
xchg
outsb
dec
scas
jnp
and
addr16
sbb
scas
cmp
pop
sub
fld
in
dec
sub
ret
jmp
mov
sub
push
psllq
cmp
mov
dec
add
jno
roll
mov
not
adc
sub
nop
cmp
or
iret
pusha
adc
jbe
dec
mov
nop
jno
xchg
out
cmpsl
mov
xchg
or
stc
cwtl
mov
lret
movsl
loop
popf
sarl
ljmp
cmp
jae
imul
popa
xor
subb
or
add
push
dec
and
addr16
jg
shrb
mov
mov
in
jp
mov
fs
mov
imul
fstpt
je
fstpt
pop
pop
ja
ficompl
mov
inc
mov
xor
push
cld
mov
imul
sbb
cwtl
fisubl
sbb
push
xchg
mov
cli
outsl
cld
stos
sbb
ljmp
rclb
rcrl
scas
inc
lret
scas
pop
aaa
jl
dec
shlb
dec
gs
into
cmp
jno
push
lods
jmp
jl
lcall
pop
aaa
call
xlat
sub
xor
push
enter
adc
in
push
and
fcoms
xchg
nop
js
jns
add
out
xor
lea
or
mov
test
and
mulb
add
add
cli
lret
jp
xor
ja
es
lds
cmp
movsb
jbe
add
mov
daa
push
add
jle
push
cmpsl
stos
pushf
push
mov
mov
daa
mov
test
out
mov
shl
mov
lods
sub
imul
iret
mov
jae
clc
sbb
nop
fcomi
pop
xchg
mov
je
add
int
lds
dec
xchg
dec
adc
test
xchg
xchg
lret
add
fstp
pop
push
pop
ljmp
jl
pusha
xor
data16
and
mov
arpl
movsb
into
cmp
sub
outsl
movss
cmc
xchg
ja
aas
divb
shlb
dec
out
pop
xor
loopne
push
out
xor
testl
inc
repnz
push
pop
std
negb
inc
xchg
sub
lock
or
cmc
js
adc
xor
xchg
cmpsb
dec
jecxz
mov
adc
iret
loop
es
ss
bnd
ds
sahf
jo
lret
repnz
js
gs
mov
in
mov
subb
mov
les
enter
in
pop
cmpsl
loope
iret
popf
sarl
lock
clc
call
lahf
add
mov
in
or
mov
jl
aas
aaa
loopne
mov
ljmp
mov
xor
stos
mov
leave
adc
xor
fsubs
push
lock
fists
lds
pop
add
pop
push
test
bound
xor
jmp
jmp
cld
stc
int
cmp
cmp
mov
add
and
push
xchg
cmpsb
xchg
xor
mov
ljmp
jbe
pushw
out
or
ss
fldenv
xchg
push
and
dec
jno
ret
mov
xorl
test
sbb
adc
insb
fidivl
movsl
or
mov
mov
xchg
push
jle
or
shll
jne
fucomi
inc
addr16
jnp
popf
xor
dec
insb
dec
scas
arpl
pushf
ljmp
mov
les
popf
das
xor
or
mov
setl
adc
jo
mov
or
repz
lock
icebp
mov
test
and
loop
or
adc
push
lahf
gs
popf
icebp
fidivrs
popf
es
fistl
sbb
jno
lahf
add
pushf
sti
out
stc
push
push
pop
decb
mov
nop
in
xchg
xchg
inc
sar
loopne
xchg
mov
icebp
iret
dec
cmp
les
js
xor
dec
call
ret
pop
les
pusha
xchg
adc
test
jecxz
imul
cmp
and
jge
pop
or
popa
adcl
jne
cwtl
mov
cmp
jo
xchg
out
jp
cmp
jg
xchg
jae
pop
mov
jb
pop
cmp
mov
ss
jle
sbb
inc
add
push
sbb
push
lods
mov
ss
add
bound
out
sub
js
xchg
and
add
pop
movb
fsubs
aad
mov
fisubrl
test
cmp
popf
add
mov
repnz
rcr
imul
and
or
xchg
jbe
push
ljmp
outsb
test
inc
sbb
xor
push
int3
outsb
je
cmc
mov
pushf
jbe
vmptrld
jle
loop
mov
jp
cmp
mov
xor
mov
dec
test
movsb
movsb
add
fidivl
fidivl
fidivl
pop
iret
mov
out
mov
roll
insb
sbb
push
pop
shrb
lret
xchg
xchg
aas
lret
movsb
push
fwait
xor
jbe
inc
test
lock
movb
mov
cmp
cltd
add
jb
scas
cmp
gs
sbb
mov
cli
or
sub
dec
or
push
cld
test
scas
xchg
lock
and
adcb
adc
cmpsl
adc
arpl
sub
insl
fdivs
push
mov
inc
dec
cmc
pop
dec
popf
std
or
inc
shl
pop
shlb
cmovle
pop
es
int3
outsl
push
inc
filds
inc
test
mov
clc
lret
clc
std
jmp
insl
jno
jno
lret
pushl
scas
fisttps
enter
jb
pop
inc
out
inc
lods
int3
sahf
dec
jmp
cmp
or
sub
xlat
in
jae
js
xlat
sbb
test
jg,pt
ja
lcall
sbb
sub
lcall
cs
fsubl
or
in
push
xchg
sbb
outsb
leave
das
dec
icebp
pop
leave
push
std
jg,pt
mov
mov
jge
out
pusha
adc
jle
or
jge
aad
movsl
fisubl
test
sbb
xor
or
aad
data16
in
or
aas
pop
data16
jp
divb
mov
mov
mov
jbe
addb
fdivs
not
aad
inc
int
push
adc
xlat
stc
add
outsl
push
mov
dec
and
test
fxch
cmp
xor
dec
imul
lock
icebp
adc
out
jnp
xchg
mov
sub
ljmp
or
add
sbb
iret
clc
jmp
and
lea
fsts
sbb
es
das
jno
bnd
xor
xchg
mov
lret
fadd
mov
mov
stos
xor
mov
insb
jne
gs
shrl
je
outsl
mov
repnz
lds
rclb
fsts
pushf
cmpsb
enter
jbe
lret
cli
in
pop
lods
mov
les
push
leave
jp
fiadds
arpl
xor
push
cmp
mov
stc
sbb
cli
cmp
or
cs
sbb
in
add
stos
and
dec
mov
daa
out
xor
addr16
mov
pop
mov
jle
sub
xchg
mov
xchg
jo
jge
daa
xor
and
sbb
adc
xlat
mov
xchg
outsb
popa
cmp
js
mov
lea
fdivl
cwtl
adc
pushf
xchg
and
arpl
jnp
inc
fucomp
inc
aas
pop
in
mov
mov
insb
aad
insb
mov
in
scas
jne
sub
push
jge
push
jno
xor
cmp
or
mov
test
lret
stos
frstor
jge
cmp
sub
fidivrl
dec
jae
mov
jbe
mov
xor
out
lock
adc
inc
outsl
lods
arpl
jnp
fs
mov
mov
jns
dec
inc
fwait
inc
sub
jae
push
fldcw
adc
and
out
xchg
je
movsl
cmp
cmp
pop
stos
mov
pop
push
push
adc
push
xchg
stos
pusha
in
sbb
jmp
int3
out
aas
xchg
lea
lds
sub
mov
jp
pop
lods
add
mov
cmp
xlat
or
and
xor
sub
fsubs
or
mov
lds
sbb
cmpsl
into
xchg
xor
mov
pop
call
cmp
adc
fstl
das
mov
lds
inc
inc
sahf
mov
imul
fadd
shll
sbb
int3
mov
jge
iretw
and
jbe
xchg
icebp
pop
sar
sahf
into
cmc
push
jmp
sti
adc
pop
dec
sbb
fdivr
sbb
add
pop
mov
xchg
fcoml
clc
jno
xchg
imul
inc
ljmp
mov
clc
int3
sbb
cmp
pusha
lods
dec
fcompl
fdivrs
xchg
or
mov
cli
in
pushf
mov
es
and
adc
sub
or
in
insb
repz
jnp
pop
subb
stos
sbb
shlb
dec
cmp
hlt
outsb
loopw
test
ds
cmc
out
cltd
cmp
xchg
pop
jb
ja
add
imull
frstor
or
icebp
and
push
sub
nop
or
sbbl
cmp
je
jp
inc
jg
sbb
loope
cmp
jp
cmp
push
mov
outsb
inc
inc
mov
out
repnz
int3
add
mov
shr
repz
mov
sub
jl
aas
lahf
jecxz
mov
fs
jno
daa
cmp
push
repnz
add
push
or
fildl
and
and
mov
push
movsb
pop
lods
and
divb
into
cmpl
rolb
mov
call
pop
jb
shrl
stos
lahf
scas
out
add
gs
pop
or
cld
leave
leave
dec
xor
mov
cli
mov
shr
es
into
daa
fs
popl
add
aas
cmc
jnp
lret
leave
mov
in
ljmp
push
inc
mov
push
icebp
mov
push
cltd
loop
clc
jle
pop
sub
jecxz
je
mov
bound
pop
fiaddl
jmp
mov
cmp
mov
xchg
add
jge
mov
lock
and
fcomip
push
xor
xor
subl
popf
jle,pn
test
push
jmp
xchg
int
iret
leave
sbb
pop
in
cmpsl
mov
cmp
pop
dec
popf
cmc
xchg
or
rcl
add
mov
scas
js
sub
cs
sbb
mov
iret
sbb
lods
dec
rorl
mov
cmp
inc
orb
push
movsl
movsb
fistps
shrb
push
fs
xlat
scas
xor
pop
inc
and
mov
dec
mov
xchg
das
cmp
rcrb
jmp
cmp
push
je
inc
sbb
mov
movsb
mov
cmp
or
sbb
mov
jb
xor
movsb
int
cs
adc
int
adcl
sbb
mov
dec
xchg
sbb
sbb
lret
adc
pop
loope
outsl
add
jne
rcl
out
add
add
and
repz
mov
mov
dec
loopne
idiv
nop
pop
daa
subl
sbb
mov
mov
pop
aaa
out
fidivs
push
fisubl
mov
and
stos
stos
out
add
pop
movsl
dec
imul
xchg
enter
fcmovnb
imul
or
jle
mov
leave
idivb
mov
or
mov
subl
scas
and
push
xor
pop
sbb
lods
xor
push
int3
into
push
repz
xchg
add
xor
clc
add
xor
xchg
frstor
jmp
xchg
inc
add
scas
mov
inc
xchg
stos
sub
dec
jmp
jmp
lods
sbb
mov
incl
lds
mov
pop
imul
test
jns
jno
mov
mov
mov
jl
flds
cmp
xchg
scas
add
daa
and
aam
jo
mov
rcl
xchg
cmp
inc
mov
mov
inc
sbb
iret
xchg
mov
stc
push
lds
mov
lcall
sar
out
rolb
lcall
js
mov
add
sub
adc
push
mov
ret
sub
adc
and
scas
movsl
cmp
xor
mov
mov
push
pop
inc
xchg
mov
push
lret
movsl
cmpsb
xchg
mov
pop
sbb
aad
enter
sub
xor
cmc
and
push
faddl
mov
jne
ss
scas
pop
fimull
test
stc
add
lret
mov
and
arpl
es
push
les
jnp
cld
test
dec
addr16
xor
push
mov
int
inc
and
sub
dec
and
mov
aaa
inc
stos
pop
adc
jecxz
pop
cmp
sbb
stc
dec
jno
dec
inc
stos
and
xchg
push
xchg
push
xchg
adc
mov
mov
out
fsubs
xchg
in
lret
push
push
mov
pop
adcl
pop
lods
sub
das
push
in
repz
shll
pop
hlt
inc
push
in
out
loope
cmp
mov
sbbw
mov
mov
push
cmp
mov
test
out
add
dec
sbbb
nop
jae
add
xchg
push
mov
mov
imul
into
cmp
push
inc
dec
add
jb
int3
int3
mov
out
idivl
pushf
jnp
icebp
jl
pop
neg
or
pop
pop
push
fst
mov
mov
popf
mov
or
mov
out
sbb
jne
fwait
dec
jo
in
rcrl
push
std
addr16
push
inc
popa
mov
jmp
push
add
subb
dec
out
ret
fildl
mov
mov
push
fdivr
inc
imul
outsl
mov
pop
jmp
mov
mov
pop
cmc
shll
mov
ficoms
dec
xchg
mov
adc
ror
xchg
lahf
pusha
push
xchg
stc
jns
sarb
add
scas
or
int
sahf
sub
jo
sbb
adc
push
pop
jne
push
dec
pusha
js
mov
mov
aam
neg
cmpb
mov
repnz
icebp
clc
je
mov
and
ss
out
loope
rcrl
cs
mov
jl
sbb
in
cmp
shlb
popl
neg
jns
ljmp
outsl
roll
cmp
mov
xchg
adc
roll
inc
jle
xchg
pop
test
imul
dec
insl
sub
dec
loope
xlat
imull
icebp
or
dec
scas
movsl
mov
mov
popf
dec
and
xlat
adc
or
inc
mov
sti
hlt
and
divl
out
cmpsl
cmpsl
push
mov
outsl
mov
xchg
dec
dec
and
je
cmpsl
jns
xchg
pop
movsb
loope
and
or
fists
xor
in
inc
icebp
sub
jne
daa
in
mov
add
sarl
jno
adc
dec
push
pop
jl
ss
enter
ficoml
loopne
aas
je
mov
jbe
cmp
insl
mov
out
sbb
push
cmpl
loopne
and
cmp
int
lds
mov
test
cld
jmp
xchg
cmp
aaa
setp
mov
sub
sahf
sbb
pop
fstps
pop
je
push
xchg
xor
mov
sbb
or
repnz
dec
sub
enter
ja
dec
popf
sbbb
ds
xchg
stc
or
scas
rcr
mov
mov
xchg
push
inc
pop
aas
iret
jne
fisttps
inc
jl
xor
pop
aaa
je
aam
mov
fcmovne
pop
inc
lock
pop
sti
mov
jl
insl
mov
add
out
cmpsl
sub
mov
cltd
xor
out
push
lock
mov
lods
ret
lret
lds
scas
fsubrl
push
cmp
adc
xor
aad
jmp
mov
daa
adc
cwtl
xchg
sbb
in
push
lret
adc
insb
sbb
sar
sbb
int3
test
add
jg
xchg
les
gs
ret
adc
and
lahf
stos
loope
aam
lds
xchg
sti
or
fcoms
adc
inc
jbe
mov
add
sub
push
int
aaa
jle
or
cmp
aam
xchg
and
pop
ds
jecxz
stos
and
xchg
mov
mov
iret
pop
enter
or
xor
inc
cs
mov
enterw
int3
aaa
mov
or
in
add
fldt
leave
mov
in
nop
or
hlt
aaa
jo
addr16
dec
sbb
jo
jbe
cmp
pop
adcl
imul
popa
pop
adc
ret
add
mov
jbe
imul
xor
mov
jg
jbe
fiaddl
jle
xchg
jge
dec
sbb
mov
subl
jl
and
xchg
stc
out
mov
call
call
xor
xor
jge
idivb
in
sub
mov
jge
daa
lods
mov
mov
repnz
vpavgb
cli
push
pusha
faddl
sti
xchg
push
loop
and
out
mov
adc
push
std
push
adc
lahf
inc
jl
pop
fdivrl
imul
daa
pusha
cmovb
inc
or
bound
out
mov
fsts
in
dec
add
in
xchg
out
sub
jle
pop
test
pusha
cmp
push
adc
cmc
mov
inc
repnz
mov
inc
push
ret
mov
xor
mov
dec
sbb
ret
dec
and
cmp
andl
push
loope
adc
xor
lea
fisttpll
xor
add
xor
cmc
mov
popa
add
ror
loopne
add
pop
inc
shrl
and
daa
mov
fldenv
xchg
xlat
roll
and
adc
inc
inc
xchg
lahf
jmp
cmp
xchg
out
loope
ss
dec
aaa
mov
bound
cmpsl
or
jg
mov
aas
cmpsl
xchg
cmpb
mov
inc
mov
jmp
sbb
add
and
xor
pop
sti
fimuls
lods
push
adc
mov
lds
jl
pushf
shll
mov
xor
adc
popf
cld
lods
push
pop
lahf
pushf
xlat
jge
inc
inc
cmp
inc
push
xchg
mov
xchg
ljmp
jg
lahf
cmp
inc
sbb
testl
mov
adc
mov
mov
add
inc
mov
pop
push
cs
xor
pusha
std
mov
hlt
push
adc
push
inc
mov
in
mov
push
sub
xor
pushf
inc
xchg
rcl
pop
cli
daa
push
mov
cmp
jp
icebp
or
fistl
mov
in
mov
hlt
shr
jbe
adc
jg
stc
jae
add
sbb
clc
xor
cmp
lahf
imul
inc
mov
pushf
mov
inc
mov
push
add
inc
pop
mov
jno,pn
adc
cmp
jg
xlat
sub
psubusb
clc
roll
mov
mov
or
or
mov
mov
inc
jnp
inc
mov
push
cmp
push
jg
hlt
sbb
pop
test
or
mov
pop
cmpxchg
inc
jnp
fcmove
rcr
cmp
popf
xor
mov
dec
mov
adc
sahf
out
gs
repnz
and
dec
jo
xor
fcomps
cli
pop
xor
std
sbb
jo
pop
jo
loopne
mov
ds
push
pop
out
test
test
add
mov
cwtl
iret
gs
dec
inc
out
dec
out
cwtl
or
repz
and
cmp
pop
mov
pop
jp
mov
divl
rclb
inc
inc
jnp
or
imul
ja
xchg
test
jnp
ljmp
jo
mov
pop
sarb
std
push
push
cs
hlt
scas
inc
decl
cmp
pop
hlt
rcll
jmp
test
inc
shlb
or
sti
push
in
je
lahf
and
decl
adc
xlat
mov
xlat
pop
jns
jns
lock
shlb
mov
xor
sbb
imul
outsl
sub
cmp
test
jp
stos
inc
mov
push
test
inc
mov
ret
pop
sahf
cwtl
sub
loope
add
pop
xlat
and
loope
stc
mov
idivl
add
jb
test
enter
ja
adc
mov
inc
and
sbb
inc
adc
scas
xor
mov
mov
rolb
dec
and
loop
shll
daa
or
popa
call
mov
or
adc
adc
shlb
push
call
inc
mov
fidivrl
push
sbb
adc
mov
mulb
dec
adc
lea
mov
cmp
faddl
xchg
push
test
incb
xor
pusha
push
mov
pop
mov
jnp
mov
std
fneni(8087
pop
ficoml
jno
or
ficoms
mov
enter
fnstcw
cmpsb
mov
sti
sbb
les
and
dec
push
mov
push
testl
mov
in
ret
dec
adc
fildl
vmwrite
insb
pop
mov
ds
inc
fs
enter
divb
push
push
push
in
or
xchg
sbb
mov
sti
cmp
mov
pop
mov
mov
sti
mov
test
divb
pop
adc
fcmovnb
adc
mov
mov
inc
and
adc
imul
inc
mov
sbb
popf
xchg
in
jecxz
sub
stc
fs
pop
in
faddl
mov
sbb
jns
arpl
mov
shrl
xor
rolb
mov
xor
mov
mov
jae
jo
das
je
jns
lret
mov
mov
mov
sub
mov
in
xor
out
nop
inc
test
bound
dec
enter
sbb
jp
lock
movsb
daa
dec
jl
jge
ljmp
or
movsb
negl
enter
or
lcall
scas
test
lcall
dec
jecxz
ret
push
mov
xor
pop
adc
popa
push
xor
rcrb
dec
sub
pop
sahf
loopne
les
cmp
cld
cmp
inc
lea
jl
cmp
mov
mov
xor
pop
sub
dec
out
jl
pop
and
inc
pushf
lret
pop
or
std
lcall
out
arpl
or
stos
sar
out
jns
mov
or
mov
push
das
hlt
push
adc
jnp
mov
pop
fdivrl
jg
leave
dec
mov
clc
jp
sti
js
ret
mov
jbe
sbb
cli
popa
push
nop
sbb
aad
cmc
test
mov
xchg
outsb
jbe
push
mov
lock
add
pop
jmp
filds
insl
in
xchg
clc
in
cmpsb
pusha
clc
adc
jbe
pushf
pop
cmp
movsl
or
push
mov
adc
out
inc
xchg
cmp
mov
xor
sub
dec
dec
push
and
jl
inc
iret
cmpb
xor
stos
es
pop
shll
xchg
jae
mov
call
cmp
xchg
fsts
movsl
dec
loop
in
mov
and
int3
negb
loop
push
xchg
sbb
dec
mov
push
bound
push
push
and
mov
or
adc
and
outsl
sarb
jg
clc
rorl
adc
sar
fwait
mov
sub
imul
outsl
cmp
fs
xor
jne
pop
and
ret
xchg
jae
pop
sahf
push
pop
sahf
popf
les
jb
test
sub
sbb
pop
pushl
xor
shll
mov
aas
mov
test
loopne
dec
jecxz
ss
pop
das
inc
mov
fimull
mov
call
or
sbb
mov
sahf
fsub
xorl
aaa
push
push
icebp
push
xchg
outsb
and
fsub
xorl
rolb
shll
into
incl
and
daa
or
jg
adc
mov
aam
push
push
pop
rcr
imul
xchg
fistps
cmp
jecxz
cltd
fldenv
fadds
sub
push
add
scas
inc
push
lahf
psubusb
mov
rorl
pop
sarb
push
js
out
dec
mov
icebp
mov
popf
pop
jae
mov
xor
hlt
cmp
jno
sbb
shlb
xor
sub
std
loop
js
sbb
popa
add
stc
stc
mov
clc
xlat
cmp
mov
cltd
push
sub
xchg
push
push
or
bound
rorb
adc
pop
inc
jno
icebp
cld
mov
mov
loope
adc
out
adc
movsb
xchg
in
ret
cmc
push
cmp
mov
repz
sub
das
mov
icebp
call
push
ja
cmp
xchg
jno
adc
cld
mov
cmp
jp
mov
das
pop
push
jns
mov
insb
adc
sub
loope
mov
mov
lock
and
xchg
ds
sbb
in
inc
jno
aaa
in
jns
jb
pusha
or
mov
pop
int3
xchg
xorl
adc
push
mov
fsts
in
sub
mov
pop
mov
jle
das
jecxz
push
fimull
cs
icebp
or
jns
jg
cmpsl
adc
clc
in
cmp
mov
loope
fs
insb
jle
dec
into
mov
jno
jge
in
dec
mov
pop
sarl
cmc
xor
mov
jecxz
inc
inc
jle
les
push
mov
ud1
ja
jae
mov
lds
sbb
shl
std
fsub
xchg
lock
sarb
mov
leave
and
popa
mov
adc
sti
dec
int3
cmp
jns
aas
fucomi
adc
lds
outsl
in
bound
cld
es
pop
push
xchg
mov
mov
std
mov
fisttpll
dec
jmp
pushw
testb
in
sub
cmp
ds
scas
cmp
sarb
je
notl
scas
out
lahf
es
pop
ret
xchg
push
ds
imul
mov
dec
cmc
mov
daa
jnp
cmpsb
mov
inc
dec
xchg
pop
inc
std
inc
adc
or
mov
sti
add
fwait
jl
xlat
stc
out
test
sbb
pop
sub
daa
add
insb
outsl
dec
sti
outsl
jbe
sarb
mov
jnp
jmp
pop
les
aaa
sub
scas
repz
rorb
inc
jp
faddl
jl
mov
rcr
sahf
lahf
mov
push
aam
lds
xchg
xlat
iret
icebp
cmp
in
inc
push
sbb
adc
insb
lcall
mov
sub
mov
cmp
adc
popl
aam
hlt
xor
cli
push
pop
pop
xorb
cs
xchg
dec
dec
out
icebp
add
dec
rcrl
addr16
or
mov
mov
mull
push
mov
inc
stc
pop
adc
push
jb
jnp
mov
mov
dec
push
je
ret
add
icebp
or
mov
push
mov
cmpsl
pop
and
stc
sub
out
and
xor
pop
dec
push
or
xchg
dec
mov
in
and
and
sahf
ret
adc
adc
push
or
jno
es
popf
mov
jmp
add
pop
xlat
cmp
cli
pop
int3
adc
insb
mov
cmc
shl
push
pop
pop
xor
cli
push
pop
pop
cmp
vpsrlw
adc
mov
out
mov
xlat
xchg
xchg
cli
fdiv
push
pop
pop
fwait
pop
mov
or
xlat
movl
pop
cltd
adc
inc
jmp
cmp
xlat
xchg
inc
inc
jge
push
or
push
mov
mov
das
lret
clc
dec
daa
icebp
xlat
addl
ds
mov
mov
bound
leave
sbb
repnz
clc
nop
sub
es
rolb
insl
or
mov
xor
nop
and
test
popa
sub
mov
xchg
and
pop
xchg
xor
lret
xchg
fisubl
or
dec
inc
push
mov
sbb
adc
dec
pusha
addr16
add
pop
or
jo
movsb
or
jne
cmp
shrl
push
imul
inc
mov
mov
xchg
ja
out
adc
push
inc
std
sbb
jmp
mov
mov
jae
js
add
adc
and
mov
xchg
call
mov
les
outsb
add
jg
and
fwait
mov
dec
fdivrl
cmp
in
es
cmpsl
gs
lahf
inc
mov
outsb
sub
inc
push
jg
loopne
pusha
pminub
pop
and
xor
mov
xchg
push
mov
lea
pop
arpl
das
sarl
sbb
ss
loopne
addr16
sbb
or
pop
adc
or
movsb
mov
sub
and
dec
in
add
xor
inc
push
push
fs
idivl
lahf
mov
bndstx
cwtl
dec
fdivrp
and
pop
push
in
in
inc
rcrl
gs
fadds
mov
push
and
inc
push
jae
xor
in
push
jnp
es
fscale
loop
add
mov
bound
jg
pushf
icebp
mov
loop
insb
mov
jmp
mov
mov
cmp
mov
mov
pop
push
pop
pushf
dec
xchg
push
or
lahf
push
adc
or
lahf
addr16
mov
jmp
jno
pop
into
xchg
xchg
ja
je
outsb
push
stc
or
lahf
dec
mov
and
mov
fucom
mov
xlat
jecxz
and
mov
imul
aas
sbb
xchg
sub
cld
jg
jmp
aad
dec
pop
mov
outsl
mov
cmp
mov
xchg
int3
das
icebp
lcall
int
sub
arpl
pop
sbb
and
pop
mov
sbb
push
push
xchg
popf
adc
cli
fimull
fwait
out
mov
movsb
jmp
and
pop
sub
cmc
mov
scas
cmp
out
and
std
pop
adc
aas
scas
insb
mov
sub
loop
dec
xor
dec
inc
sti
sbb
aas
test
aaa
std
into
into
cmp
cwtl
lahf
outsl
inc
jnp
fisubl
or
adc
jne
mov
inc
dec
jae
sbb
pop
shl
sbb
jg
mov
and
hlt
mov
bound
ljmp
std
mov
add
dec
jg
and
push
push
std
and
cmpsb
dec
in
sti
popa
and
dec
cwtl
subl
cmp
cmp
fisttps
sahf
or
cmp
mov
mov
mov
sbb
pop
cmp
orb
test
and
stc
inc
jo
mov
loop
adc
jo
loope
cmc
pop
mov
lock
loopnew
and
jecxz
bound
sub
decl
pop
mov
cmpsl
icebp
inc
sbb
cmp
jne
push
lahf
sub
in
xorb
mov
int
js
mov
pushf
jbe
jmp
aas
mov
std
sub
scas
sarb
push
js
out
popa
in
pop
sbb
lret
or
mov
stc
xchg
sbb
fwait
sarl
das
mov
lahf
dec
push
enter
cld
xlat
mov
sub
cmpsl
mov
and
dec
inc
mov
leave
jle
stc
sarb
jg
dec
cmc
xchg
xchg
mov
dec
mov
inc
jnp
ficompl
sti
sbb
not
push
add
scas
dec
clc
pop
ret
mov
ja
jp
fmuls
out
data16
inc
lea
add
ds
sbb
mov
pop
mov
test
incl
mov
std
or
jle
push
push
jns
mov
out
xor
aam
mov
adc
fmuls
pop
inc
scas
or
xchg
jo
lret
push
mov
mov
adc
enter
dec
int
shll
jg
add
pop
loopne
ficomps
jge
xlat
mov
mov
leave
sti
inc
xchg
dec
sti
gs
fdivrs
mov
jl
jg
iret
ja
std
insb
rolb
aad
sbb
mov
int3
xor
jl
or
ss
imull
fldl
pushl
lahf
push
cld
or
das
mov
jo
or
jb
inc
jg
sbb
xlat
pushw
mov
mov
sar
jno
fidivrs
pop
shl
dec
popa
roll
pop
mov
mov
enter
js
cmp
pop
and
mov
test
or
xchg
sbb
push
mov
lret
and
jmp
in
mov
dec
jp
xchg
jnp
jo
mov
hlt
shl
loope
jmp
movsl
mov
mov
mov
jbe,pt
lret
fdivrs
cltd
push
push
into
insb
scas
or
sbb
pop
sbb
loopne
dec
cli
fcmovb
stc
cwtl
int
xor
out
gs
pop
into
mov
push
pushf
and
mov
in
cld
aad
repz
leave
push
push
into
fs
or
cmc
pop
push
cmp
imul
jne
jl
in
xor
cmp
mov
fistps
jecxz
and
cltd
pusha
jge
hlt
pop
pop
addr16
imulb
insl
cmp
daa
das
pop
adc
insb
es
adc
or
clc
ret
dec
mov
fwait
loope
in
test
jg
mov
jg
fstpl
in
rcll
jg
adc
outsl
dec
cmp
mov
pop
test
push
aas
sti
daa
test
mov
or
inc
inc
icebp
sbb
cmp
cmp
arpl
sub
cmpsb
call
sub
in
sbb
aas
jg
cld
sbb
aas
xchg
adc
aas
push
dec
dec
in
mov
jl
test
mov
jbe
fdivl
mov
lock
jbe
int3
sarl
lds
mov
mov
pop
mov
adc
int3
inc
mov
mov
jge
es
sbb
pmaxub
mov
data16
and
mov
push
xchg
cli
xor
pop
jno
int3
mov
cmc
pushf
rclb
imulb
out
adc
dec
iret
fwait
push
je
inc
jb
mov
xor
loopne
xchg
mov
jg
inc
repz
jns
es
push
in
jle
mov
popa
jle
inc
xchg
mov
jmp
adc
lds
xor
test
adc
stos
lock
popa
lods
xchg
adc
cltd
mov
xor
jo
jno
inc
sub
and
dec
test
mov
jp
push
inc
pop
cmpsl
or
xchg
jmp
cmp
movsb
loopne
icebp
in
cmp
cld
out
iret
es
dec
jo
rcrl
insl
cs
ret
inc
mov
fwait
dec
push
push
mov
sub
aaa
push
jl
pushl
xchg
lock
rcrl
jle
ficoms
pop
scas
pusha
pop
push
jns
shr
push
popf
adc
lea
subb
lahf
jl
adc
add
jecxz
pop
icebp
inc
stos
mov
insb
push
es
lcall
lret
adc
fiaddl
jno
sti
leave
sti
mov
cwtl
mov
mov
pop
ljmp
mov
inc
jnp
cltd
movsb
cld
testl
sub
sbb
dec
sar
movsb
dec
addl
jns
hlt
cld
icebp
cli
addr16
mov
mov
clc
fiadds
push
xor
fwait
std
cmp
icebp
cltd
or
fimull
pop
or
sub
repz
arpl
fidivl
push
fcompl
jl
pop
inc
cmp
add
jns
vxorps
cmp
push
dec
sti
cmp
pop
xor
rcl
dec
outsb
das
arpl
test
add
inc
lock
mov
in
sub
mov
fildll
aas
and
out
xor
negl
js
mov
sub
jecxz
mov
mov
lods
inc
fistpll
scas
pop
and
ss
mov
dec
hlt
fldl
xchg
clc
repnz
lahf
enter
adc
out
cmp
shl
sar
int3
xlat
push
in
cmpl
vmaxsd
mull
or
addr16
adc
cli
mov
addr16
sub
aaa
mov
or
push
sbb
inc
icebp
mov
sbb
add
xor
mov
inc
sarl
push
dec
inc
jno
jle
mov
aam
mov
test
sbb
inc
popf
aaa
ljmp
outsb
adc
push
mov
test
cmpl
jno
pop
insl
and
fbstp
jge
jl
test
adc
pop
arpl
clc
mov
scas
inc
popf
or
pop
aam
mov
lds
rclb
imul
dec
stc
fcoms
js
pop
sti
mov
test
daa
mov
scas
push
cmp
mov
push
movsl
sti
inc
inc
stc
test
ret
mov
pop
sbb
enter
xchg
lods
pusha
fdivrl
scas
mov
frstor
lahf
jl
dec
lock
repz
js
inc
lahf
flds
push
mov
lahf
sub
mov
mov
xor
repz
in
adc
test
or
push
xlat
mov
divl
cmp
pop
cmp
pusha
sarl
pusha
jle
push
push
and
jge
sti
out
leave
test
and
pop
jne
lds
jo
and
stc
push
enter
push
ud1
jae
pop
hlt
pop
aaa
pop
mov
xchg
les
add
jbe
lret
jnp
xchg
adc
or
sbb
stc
mov
arpl
pusha
cmp
push
arpl
into
incl
add
fnstsw
lcall
inc
or
pop
xlat
pop
rcr
jbe
pushf
pop
aam
sbb
divl
ljmp
testl
add
fmull
lods
mov
mov
mov
push
mov
xor
add
lret
mov
xchg
mov
xlat
and
push
aam
mov
cmp
dec
stc
cmp
and
inc
ret
adc
mov
dec
cli
sbb
sti
pop
add
ret
dec
or
out
movlps
ss
mov
pop
or
icebp
repnz
mov
cmp
cltd
cmp
sub
stos
push
psubd
lods
xor
data16
sbb
sub
adc
adc
out
xorl
ret
in
mov
pop
std
je
jns
inc
pop
mov
dec
mov
sti
xor
aam
sbb
aad
mov
aas
inc
mov
jns
out
or
stc
test
insb
test
push
movl
and
xchg
or
addr16
out
lcall
mov
mov
jmp
mov
loop
jle
adc
push
test
cmpsb
popa
and
stos
movsb
mov
das
lods
sub
jno
std
inc
cmpsb
loop
outsl
sub
jge
out
mov
sbb
lods
sti
call
scas
sbb
mov
call
xlat
push
jl
sbb
je
in
in
shlb
push
cmp
loope
sub
and
sub
jp
mov
rclb
mov
cmp
ljmp
inc
popf
mov
daa
sti
leave
inc
pop
stos
add
clc
fistpll
jp
mov
jb
mov
lock
adc
scas
cmpsb
fnstenv
xor
push
pop
xchg
add
fwait
shlb
mov
pop
add
sbb
scas
xor
xchg
sbbl
dec
pop
addb
rorb
rclb
and
orb
mov
add
lea
mov
cwtl
or
push
inc
add
sti
push
testb
cmp
push
loopne
mov
pop
add
xor
or
or
pop
sti
add
inc
pusha
daa
mov
mov
out
popa
jmp
cmc
lcall
cmpsl
sbb
adc
add
addb
jle
in
jecxz
sbb
pop
sub
xchg
orl
outsb
cmpb
add
xor
lret
add
mov
inc
pusha
cmp
pop
movb
shrb
xor
repnz
je
sbb
pop
ljmp
add
cmpl
pusha
cmp
sbb
or
ss
add
out
mov
loopne
jo
fadds
stc
rolb
add
call
outsl
addb
test
jae
cmpsl
push
mov
push
lcall
and
mov
pop
pusha
daa
mov
pop
add
add
or
sbb
mov
push
sbb
or
add
enter
push
pop
add
add
cmpl
push
cwtl
or
or
rclb
add
add
add
lret
inc
jo
iret
sar
push
js
cmp
jle
jae
dec
js
in
test
fimuls
inc
add
sti
inc
cmp
inc
mov
add
add
orl
mov
xlat
andl
cmpl
inc
add
inc
cmp
jb
cmpsl
shrb
mov
clc
sbb
and
push
inc
push
loopne
xor
lock
or
push
mov
imul
fadds
inc
add
call
add
push
loopne
jo
cmp
insb
add
add
add
dec
cmpb
push
sub
and
sbb
cmp
push
loopne
mov
clc
adc
movsl
push
ret
mov
sub
aaa
and
or
es
pop
jo
dec
add
xorb
adc
scas
xorl
andb
sbb
orb
pusha
lods
test
nop
pop
fsts
out
inc
xor
pop
pop
add
push
addl
add
and
add
adc
add
push
rclb
add
lea
nop
pop
outsb
add
cmp
cwtl
or
ret
inc
inc
pop
mov
out
sub
pop
dec
add
pop
test
fstl
push
addb
pusha
das
jo
push
nop
dec
add
mov
lret
inc
mov
sub
pop
jb
das
or
call
sahf
xor
mov
fisubl
pop
adc
movsb
jno
js
dec
dec
hlt
inc
out
sub
sub
dec
popa
lahf
mov
cmpsb
push
sbb
pop
insb
pop
das
cmpl
cltd
insb
mov
insl
dec
idivb
loopne
jno
or
cmp
sahf
add
inc
or
sbb
add
and
jl
or
subl
jp
mov
fistpl
xor
or
and
pusha
or
push
xchg
subb
adc
add
pusha
or
shlb
mov
in
add
add
pushf
add
add
adc
add
aaa
loopne
mov
add
rcrb
add
andl
sbb
mov
js
add
add
add
adc
insb
add
add
and
lea
jae
xchg
int
push
add
subb
add
add
sbb
lock
mov
cmp
pop
add
adcl
sbbl
xor
push
movb
subb
pusha
das
jo
mov
inc
and
aam
es
add
add
add
or
mov
jge
adc
mov
cs
wrmsr
add
adc
imul
pop
or
scas
add
nop
or
cmp
wrmsr
mov
pusha
sbb
add
mov
xchg
sub
jecxz
in
sub
out
pop
das
je
cmpsb
cmc
cld
test
or
loop
gs
dec
icebp
fwait
hlt
mov
sbb
pop
sbb
adc
mov
xor
fisubrs
je
in
mov
icebp
xchg
nop
mov
push
fcomp
add
and
sbb
es
loop
adc
and
push
and
pop
int3
cld
xchg
push
xchg
and
enter
arpl
mov
inc
imul
icebp
mov
jae
mov
cli
pusha
shlb
sub
mov
mov
add
sbb
mov
jg
sar
sub
push
jle,pt
ret
mov
jg
pop
in
mov
mov
loopne
int3
addr16
fdivs
jmp
inc
inc
imul
out
dec
mov
lods
mov
adc
shl
enter
mov
mov
cwtl
mov
jb
clc
add
sbb
mov
jb
in
cwtl
mov
ss
pop
daa
std
adc
sbb
mov
pop
mov
out
lret
adc
mov
mov
push
inc
inc
xchg
pop
ret
jns
and
dec
mov
pop
and
dec
pop
xor
cli
scas
mov
push
int
and
cs
adc
sbb
enter
jge
inc
test
popa
jae
mov
dec
lds
dec
inc
sub
movb
mov
inc
mov
inc
insb
inc
cld
mov
cwtl
adc
out
sub
fs
neg
or
loop
out
scas
lea
mov
sbb
sbb
nop
repnz
mov
mov
in
adc
xchg
add
jno
or
bound
or
pop
and
out
xor
dec
push
enter
add
mov
adc
ss
push
mov
or
jl
int3
fisubrl
mov
mov
clc
pushl
pop
xchg
les
imulb
push
push
int3
movsb
jns
xchg
xchg
roll
xor
lret
loopne
loop
sub
pushf
fildll
jno
xor
in
clc
xchg
push
mov
in
cmpl
cld
ds
movsb
lea
jae
lcall
sub
inc
mov
xor
int3
push
xchg
xor
dec
hlt
loop
aas
xchg
sbb
jp
dec
and
cli
jmp
pusha
out
es
lret
divl
xchg
sub
test
sbb
subb
insb
xchg
call
lods
cmp
xor
imul
outsl
mov
movsb
mov
mov
pop
rclb
mov
cld
daa
jg
outsl
jmp
xor
call
ljmp
mov
aas
cli
pavgw
xor
jle
sahf
in
movsb
dec
sti
dec
xlat
in
cli
push
jb
out
mov
mov
mov
jno
mov
outsl
out
ljmp
mov
xor
push
mov
fidivrs
ss
mov
rcrb
out
or
cltd
inc
gs
push
jbe
and
jnp
mov
cmp
in
push
test
and
testl
jnp
test
dec
dec
sub
clc
nop
push
call
repnz
movsb
aad
popa
xchg
sbb
pop
scas
add
gs
mov
in
dec
popa
sub
loopne
xchg
in
or
dec
rcrb
sub
pop
lock
int
addr16
ja
popf
int
stc
repz
and
sbb
sbb
iret
lahf
imul
jg
jl
dec
daa
xchg
in
out
pop
ds
repnz
mov
mov
cs
dec
scas
mov
and
in
insb
insl
sbb
sbb
sbb
mov
push
cmp
lods
add
mov
jg
popf
arpl
sbb
fists
pushl
decb
test
gs
pop
pop
mov
pop
and
mov
jg
std
sti
in
pop
int3
cmp
cmp
fmull
std
fldenv
pop
mov
jl
std
fistpl
fistpll
lods
iret
xor
into
out
sbb
jle
sbb
sbb
ds
icebp
pusha
ja
lahf
xchg
loopne
and
lahf
pop
adc
add
lcall
out
aas
aam
dec
dec
outsl
rorl
outsb
or
aas
jmp
cmp
jle
adc
test
push
cltd
and
cli
std
cmpsl
mov
jecxz
mov
and
call
jge
xor
bound
aam
xchg
dec
push
xchg
dec
push
xchg
ja
aaa
je
and
clc
mov
mov
lcall
lcall
mul
push
inc
push
inc
mov
jg
jae
test
iret
in
call
sub
andb
adc
xor
mov
sti
das
std
lods
movsl
mov
stos
push
pushf
xchg
adc
sbb
das
xor
and
test
idivb
sub
mov
jne
jne
mov
mov
push
xchg
lods
adc
stc
mov
insb
sub
jbe
scas
dec
icebp
imul
outsl
mov
stos
sub
icebp
lret
bound
xchg
push
movb
stc
sti
push
pop
hlt
mov
fcoms
sub
adc
mov
lds
mov
sub
rorl
fwait
addr16
leave
int
push
in
push
cmp
sbb
pop
dec
pop
dec
jnp
sbb
dec
push
iret
fstps
inc
mov
scas
sahf
fistpll
jge
sbb
adc
sub
sbb
jmp
mov
rclb
subl
sub
inc
das
sub
shlb
sub
cmpsb
mov
push
cmp
cmp
pop
mov
lea
jle
ja
cmp
mul
repz
mov
inc
fimuls
lods
inc
repnz
mov
or
sub
lahf
sub
or
jecxz
movsl
sbb
push
cld
scas
jecxz
sbb
xchg
stc
adc
adc
pop
div
pop
stc
in
in
push
clc
xlat
dec
das
cli
xlat
and
sti
push
sbb
add
les
loopne
jmp
mov
repz
clc
mov
push
sub
mov
pop
fimull
daa
gs
popf
cmpsl
inc
test
lock
ret
clc
lret
imul
xchg
pop
ja
stos
and
sbb
jbe
xchg
push
push
jmp
cmpsl
jl
jle
scas
inc
mov
cmp
js
ffreep
cmp
out
mov
fstpt
mov
notl
imul
inc
jp
lds
test
sbb
xchg
lcall
arpl
and
cwtl
push
fisubs
aas
mov
sbb
lahf
dec
push
nop
mov
out
jge
cmp
out
sbb
mov
sub
inc
ljmp
in
imulb
in
mov
clc
mov
mov
push
mov
dec
aaa
loope
ljmp
in
inc
dec
fists
aad
fists
sti
ja
cmc
sbb
and
sbb
hlt
adc
test
xchg
cld
mov
ss
and
pop
inc
sbb
mov
cmpsl
jl
lods
cwtl
jg
inc
push
stc
fstpl
pop
inc
pop
xchg
xchg
inc
lea
push
xchg
notb
lahf
leave
out
hlt
fucomip
mov
dec
xor
cmpsl
insb
mov
lods
cli
cmc
sti
mov
div
fdivrl
cld
adc
or
popf
mov
jecxz
sahf
jle
xchg
mov
xor
int
shlb
rep
stc
fwait
test
xchg
ss
into
movsl
sbb
add
sub
hlt
jns
add
sub
std
adc
mulb
popf
xchg
cmp
jne
in
fsubrl
mov
out
iret
lods
mov
hlt
fisubs
cli
iret
testl
push
cmp
xchg
mov
arpl
xchg
or
lea
dec
cmpsl
dec
xchg
dec
xchg
jb
inc
cmp
inc
cmp
lock
xchg
js
jle
lds
dec
insl
or
repz
inc
push
xlat
mov
ficomps
mov
sahf
in
push
push
call
cmpb
dec
outsb
mov
lds
movsl
push
dec
adc
mov
jb
pop
lcall
mov
aam
mov
xchg
mov
aam
leave
or
sub
aad
cs
jnp
mov
arpl
push
insl
xlat
cmp
cmpsl
pop
xor
movsl
mov
jns
pop
fwait
stos
mov
and
pop
mov
push
push
push
pop
imul
sti
test
ljmp
xchg
cmpsl
icebp
xor
lahf
negl
lds
jl
insl
push
xor
push
fdivs
push
xchg
aaa
mov
adc
dec
popf
stos
stc
dec
fistl
bound
mov
and
fwait
cmp
dec
in
push
loop
fsts
cmp
lret
pop
jp
sti
pop
push
lcall
mov
lds
mov
jb
push
adc
in
loope
push
movsb
xor
cmpsb
rclb
adc
std
fs
popa
andl
pop
stos
push
and
cmpl
xorb
jnp
loop
jmp
lcall
int3
lods
mov
into
cld
movsl
out
call
outsb
push
cmpsb
adc
pop
lret
in
or
lret
imul
sarl
leave
pusha
mov
mov
or
mov
xchg
jecxz
aad
jle
mov
repz
lret
jmp
or
sbb
xor
cltd
pop
xchg
pop
loop
je
mov
and
pop
out
mov
mov
stos
dec
push
fsts
adc
pop
stos
push
push
imull
stc
pop
out
loop
imul
negl
mov
pop
mov
jl
jge
into
mov
lods
mov
incb
jg
into
stos
sahf
pop
lahf
fistpll
xchg
test
scas
pop
into
bound
stos
jae
fistl
adc
mov
push
cltd
stos
dec
push
leave
nop
mov
jne
ja
jmp
fsub
shlb
arpl
imul
mov
lods
pop
lcall
stos
fsubrl
fstpl
mov
inc
mov
xchg
dec
arpl
scas
test
stos
addr16
adc
or
mov
sub
xchg
std
dec
movsl
dec
jns
xor
dec
fimull
out
push
pop
outsl
push
pop
daa
mov
ds
jmp
testb
addr16
ds
xchg
xchg
mov
inc
cmp
je
and
xchg
xor
fmulp
insl
pusha
jnp
ficoms
push
push
popa
fisubs
movsb
cmpsb
idivb
jmp
pop
mov
mov
out
push
fisubrs
lods
sbb
lahf
lret
aam
repz
xchg
gs
push
push
push
stos
rcrl
mov
mov
sahf
push
inc
cmp
dec
mov
aaa
movsb
stos
imul
dec
mov
mov
sbb
jno
repz
xlat
xchg
lods
dec
cmp
mov
ljmp
mov
inc
out
sub
out
jge
push
dec
cmpb
lahf
into
sbb
pop
inc
xor
xor
out
leave
push
imull
and
fisubrl
lds
dec
dec
mov
cs
pop
in
dec
ljmp
jo
mov
mov
pop
fdiv
mov
mov
insl
sbb
sub
push
pop
xor
xor
sub
imul
push
or
push
ss
lea
push
cmp
out
fwait
shrl
sub
inc
movsl
pop
or
mov
arpl
xchg
testb
xor
int3
lret
push
jge
sub
cmc
scas
inc
xchg
out
dec
lcall
imul
pop
std
sub
in
dec
fimuls
xor
aam
int
imul
mov
jmp
add
sahf
lods
mov
mov
jmp
mov
or
cmp
mov
sahf
xchg
xor
aad
pop
iret
rorb
sub
jmp
sarl
stos
adc
into
mov
sub
out
mov
push
push
jns
mov
cmp
test
dec
es
xorl
xchg
aad
mov
repz
jb
loop
ja
scas
xchg
mov
pop
loopne
mov
rcr
gs
cmpsl
fwait
mov
pop
lret
fisubrs
adc
scas
sub
and
inc
lret
and
lods
mov
jmp
out
outsb
mov
sbb
mov
test
xor
jp
mov
push
idivl
push
jns
mov
dec
ja
jbe
push
mov
in
inc
pop
or
lret
adc
std
ja
fs
or
pop
in
lret
inc
lret
sahf
arpl
xchg
lret
rorl
fistpl
jo
stos
cmp
outsl
xchg
insb
int
xchg
jp
lods
loope
mov
dec
lahf
xchg
push
sbb
negb
and
and
lea
mov
push
test
dec
sbb
jecxz
push
ljmp
sahf
loop
gs
and
pop
int3
jne
jnp
dec
sub
jnp
mov
insb
dec
cld
std
jno
jno
cli
mov
xor
fdivrs
in
cmp
addr16
hlt
pop
pop
cmp
lea
es
jle
aam
test
movsb
imul
fstps
push
in
xor
push
push
push
sbb
push
push
push
xchg
into
call
cmp
jge
movsl
in
inc
xchg
pop
ljmp
mov
stos
fistpl
movsb
sbb
xor
aad
push
cs
ljmp
push
dec
hlt
jnp
es
mov
rorb
out
dec
lock
push
frstor
stos
ret
arpl
sub
mov
aam
jle
scas
fdivp
jns
mov
mov
inc
jns
jne
clc
repz
cmp
sbb
and
dec
lahf
sub
scas
icebp
xor
mov
cmc
xor
shr
je
push
test
scas
es
mov
mov
pushf
popf
rcrb
adc
fprem1
lret
loope
xchg
add
xchg
call
rorb
shlb
jae
add
mov
cmpsb
fidivrs
sbb
fsts
xchg
mov
jb
mov
xchg
gs
ss
cltd
sub
sub
sub
movsb
fs
fwait
pop
adc
push
in
pop
or
jb
jl
loopne
push
lahf
imul
test
lcall
jns
push
push
loope
xor
cmp
movsb
hlt
xor
or
ds
xor
scas
cmp
notl
pusha
inc
popf
aad
inc
fs
pop
jl
sbb
dec
imul
xor
cmpsl
dec
repz
cmp
pop
je
aad
xchg
pop
push
dec
push
sbb
inc
sub
rorl
sub
push
mov
lret
stos
sub
sub
scas
divl
ja
xchg
inc
mov
iret
fbld
mov
mov
rolb
push
fbstp
ja
pop
cmp
ds
pop
ds
jecxz
out
sahf
and
daa
imul
mov
movsb
pop
cmpsb
mov
in
fildl
pop
fiadds
mov
cmpsb
sahf
jmp
dec
repz
xor
iret
js
cwtl
fstpl
shrb
hlt
mov
or
cmp
sti
mov
ds
dec
xchg
cli
mov
inc
fst
jge
pushf
dec
insl
mov
popf
push
or
pop
mov
inc
jmp
fs
push
dec
xchg
inc
mov
mov
in
xchg
shll
jbe
cmp
std
inc
loope
push
loop
imul
mov
sub
cmpl
fwait
cli
pop
in
or
cmpsb
push
imul
daa
mulb
push
and
push
sbb
jmp
lods
adc
out
aas
ljmp
and
xlat
and
push
lret
insl
notb
ss
mov
mov
arpl
rorl
jmp
jp
fs
lret
mov
push
pusha
push
mov
xchg
mov
lret
jmp
pop
cli
fxtract
rclb
fwait
aam
adc
dec
jmp
xor
je
inc
ja
ljmp
ljmp
jle
cmp
setg
jbe
xchg
out
inc
pop
mov
in
push
push
loop
mov
dec
inc
push
rcrl
jnp
data16
fwait
insb
aaa
xchg
xor
gs
insb
xchg
lods
jp
sahf
shrl
mov
jg,pt
xchg
out
repz
push
cmpsl
into
test
jmp
loop
cld
mov
out
add
das
fscale
sbb
xchg
lret
outsl
jg
sub
pop
pusha
pop
sbb
xor
test
ret
in
xchg
mov
mov
bound
popa
mov
xor
div
pop
in
leave
mov
testl
pop
hlt
repz
out
divb
std
xchg
outsl
mov
loope
ss
mov
xor
pusha
lret
fistpll
out
scas
nop
outsb
push
popa
mov
mov
jb
cmp
cmp
lret
xor
pop
leave
test
push
jmp
adc
std
in
jecxz
test
and
mov
jmp
stc
jnp
pop
sbb
jns
inc
ret
data16
std
jns
leave
aam
lods
cmp
lahf
xor
hlt
jae
fs
inc
sbb
pop
fcmovnu
fistpll
dec
mov
jb
aad
sbb
aad
je
and
pop
fldcw
jae
out
fisubl
sbb
imul
int
or
push
lret
cltd
jle
out
sub
push
dec
das
iret
sahf
lcall
outsl
push
pop
cmp
rcrl
movsl
dec
mov
int3
xchg
pop
mov
fwait
mov
mov
sub
mov
push
mov
ret
and
mov
iret
mov
mov
cli
sahf
xor
xor
xchg
push
mov
cmp
mov
in
sti
insb
out
outsb
fimull
inc
aas
stos
cmpsb
dec
out
outsb
push
push
repnz
std
push
push
mov
xchg
pop
lret
out
push
scas
sbb
dec
pop
mov
mov
mov
push
jl
jns
test
jns
in
outsl
ljmp
ja
inc
out
sbb
mov
repz
sub
or
xor
stc
pop
push
inc
int
sbb
int3
imul
cmp
push
pusha
xor
fsubr
pushf
inc
mov
mov
xchg
sub
mov
dec
outsl
lcall
and
das
mov
in
insb
cmp
fistl
cmp
insl
movsb
lea
pop
fstpl
ljmp
xchg
aam
hlt
fs
js
push
std
daa
sub
inc
stos
or
mov
clc
xor
cmpsl
ret
out
fidivrs
repnz
mov
cmc
adc
fdivl
das
xor
xchg
cmpsl
jge
std
push
sahf
sbb
lods
icebp
pop
out
lea
ja
aaa
sbb
mov
clc
push
scas
fwait
push
mov
mov
in
shl
jmp
lahf
push
jle
push
shrl
ror
mov
sbb
out
sbbl
cmp
push
dec
into
inc
std
dec
xchg
mov
es
scas
data16
push
push
xor
mov
jno
idivl
fsubrs
sub
scas
stos
inc
lods
lods
jle
addr16
and
rclb
lret
mov
inc
jl
jne
xchg
jmp
clc
bound
imul
sub
sub
xchg
mov
leave
mov
xchg
mov
lahf
cs
idivb
testl
mov
dec
push
incl
xchg
ds
lods
mov
inc
pop
outsl
adc
push
in
sub
clc
gs
pop
lret
fsubl
or
xor
rcll
iret
cmp
jg
push
insl
scas
mov
dec
imul
push
adc
std
xchg
dec
popf
icebp
or
insb
mov
mov
add
inc
shll
in
push
aas
out
aam
mov
jne
sahf
data16
lahf
sub
jns
jne
movsb
in
cltd
iret
xchg
fisubrs
jmp
addr16
outsl
mov
fidivl
push
push
ss
addl
dec
jnp
fmull
dec
les
mov
fwait
scas
lcall
cmp
fnstcw
pop
int
ffree
dec
and
test
jb
std
adc
insl
dec
mov
sub
pop
jbe
adc
or
shrl
call
shl
jns
loope
bound
mov
dec
pop
pop
or
into
push
mov
sbb
mov
jp
adc
out
in
addr16
xchg
and
icebp
jnp
lock
pop
pop
push
ds
mov
aad
ret
ret
cmp
lret
iret
pop
cmpsl
inc
push
cmp
inc
cmp
aad
stos
sub
sbb
cli
cmc
pushf
aam
inc
loope
and
test
scas
fsubl
mov
imul
sbb
outsl
and
rcll
xchg
movsl
lock
divb
push
adc
out
imul
mov
jmp
imul
ret
imul
mov
ret
xor
test
cmc
pop
mov
jno
popa
mulb
xchg
lods
mov
lcall
mov
xor
pusha
aam
out
inc
mov
insl
jl
jnp
cmc
dec
loop
inc
push
stos
jns
mov
sbb
push
pop
outsl
fiaddl
dec
pop
sub
cmp
test
subl
cltd
stc
jbe
icebp
add
jb
lea
push
sub
mov
or
aam
push
xor
jge
out
cmp
push
aaa
outsb
fcompl
test
stos
mov
test
fsubrl
pushl
stos
xor
hlt
sahf
jb
incl
fisttps
sbb
insb
xchg
hlt
xchg
xchg
sbb
aas
sbb
cmp
mov
lds
les
pop
stos
jne
fimuls
push
mov
jle
jns
cmpsl
in
popa
ljmp
mov
sub
repnz
das
imul
imul
lcall
push
pop
pop
inc
in
aam
cmc
fs
xor
mov
ret
pop
stos
pop
sub
xchg
icebp
daa
sbb
stc
fisubrs
lods
jns
sarl
jmp
adc
imul
testb
xchg
ljmp
mov
aam
mov
jecxz
es
mov
mov
push
push
dec
daa
ret
enter
mov
fsts
test
xor
mov
repnz
shrl
ja
addr16
pop
mov
pushf
adc
sub
cwtl
in
mov
imul
pop
cmp
popf
icebp
iret
scas
stos
jg
jns
scas
movsb
ret
dec
leave
dec
out
mov
sub
mov
scas
pop
icebp
testb
stos
push
mov
push
js
in
shl
and
aam
push
inc
mov
lret
cwtl
adc
and
stos
fwait
and
cltd
lds
mov
pop
cli
or
jne
and
in
or
clc
rorl
je
fsubs
adc
loop
aad
aaa
jae
mov
lcall
lret
fidivs
sti
sub
ljmp
sub
ret
gs
dec
fisubs
mov
out
jb
mov
pop
dec
idivl
roll
in
mov
cli
push
push
or
scas
jns
xchg
mov
arpl
xor
cli
push
mov
cld
xor
sahf
das
add
imul
cmp
out
and
in
pop
int
push
cli
call
cmc
xchg
adc
daa
or
push
fsubs
scas
xor
hlt
push
pop
test
xchg
outsb
pop
sub
int3
mov
lds
jl
clc
in
lock
push
push
mov
test
xlat
mov
mov
xor
push
inc
leave
mov
lahf
adc
xor
stos
repz
into
adc
mov
into
xor
cmpsl
bound
int
mov
xchg
ss
and
stos
push
lret
call
push
icebp
and
pop
test
nop
sub
jg
ja
andw
std
ficoml
repz
ret
xor
lret
cmpsl
mov
cmpsb
xchg
mov
not
scas
popf
dec
imul
sbb
nop
gs
cmc
sub
leave
mov
pop
sbb
in
pop
icebp
mov
cld
mov
clc
pop
sub
dec
loop
in
adc
ret
mov
push
cld
stos
sti
shl
pop
notl
push
jo
mov
repnz
outsb
aas
ret
test
daa
mov
dec
outsb
int3
aad
fcomi
mov
shll
xchg
lcall
push
mov
mov
cmp
cmp
std
dec
jge
xor
pop
inc
xchg
data16
std
inc
lret
pushf
xchg
ret
stc
mov
sbb
out
adc
inc
sub
inc
pop
sub
push
mov
xor
cmp
mov
test
or
out
push
test
mull
stos
dec
pop
sbb
fisubrl
out
pusha
imul
mov
xor
add
imul
lcall
push
sahf
push
js
mov
jno
dec
jecxz
push
cmc
xchg
dec
stc
or
pop
popf
mov
mov
jge
ss
in
cwtl
aad
loope
outsb
ja
daa
push
xor
jmp
dec
xchg
into
std
lock
cwtl
cmpsb
cmp
mov
hlt
adc
xchg
fs
xor
jns
and
in
icebp
ficompl
jl
pop
jno
je
loope
fcoml
mov
sbb
dec
xor
mov
enter
cmp
cmpsl
push
mov
stos
pop
xor
jbe
cmpsl
popf
xchg
sahf
cmpsb
xor
lret
dec
aaa
jae
sbb
push
std
or
icebp
daa
mov
cmpsb
pusha
sub
mov
jne
lahf
lret
sub
adc
das
sbb
jge
out
mov
adc
shll
jb
jecxz
arpl
mov
fs
test
outsl
fstcw
repz
dec
cmc
dec
lcall
sbb
gs
enter
push
fldenv
jnp
xor
popf
jge
or
int3
stos
sub
ljmp
mov
jmp
fidivl
push
ja
jb
lret
push
repnz
or
pop
insb
dec
jmp
fidivrl
cli
pop
mov
ja
arpl
sub
sbb
movsl
pop
pop
pop
movsl
imul
movsl
xchg
ss
inc
enter
je
imul
jb
cld
ljmp
push
sub
xor
out
push
dec
jge
inc
lock
div
or
mov
xchg
shrb
mov
gs
fisubrs
jmp
lret
fwait
daa
outsl
scas
xchg
lods
sbb
mov
aaa
inc
xlat
dec
inc
push
jno
addl
mov
xchg
cmp
jl
lock
scas
and
jge
cmpsl
sub
insb
or
negb
dec
in
rcrb
ss
jns
scas
icebp
jg
cmp
loop
push
mov
arpl
lret
daa
mov
mov
jmp
addr16
stos
push
hlt
sbb
and
movsb
push
push
lea
mov
sti
jle
in
adc
mov
ficoms
addr16
aam
out
insl
mov
roll
out
lcall
ret
lods
into
cld
pop
fisttpll
frstor
dec
mov
sub
jmp
sti
movsb
cwtl
cmpsl
push
sub
jmp
pop
imul
mov
pushf
repnz
jmp
mov
iret
cmpsb
out
push
loope
fucom
pop
aad
lret
cmpsb
rolb
jge
repnz
mov
inc
xchg
jge
push
push
fimuls
sub
jne
out
lahf
test
cmp
je
rcrb
mov
xor
mov
es
mov
ret
out
jp
stc
movsl
and
lea
sbb
xor
push
mov
insl
pop
mov
fldt
xor
push
push
mov
lret
jbe
push
adc
push
lcall
popf
add
push
cwtl
in
rcrb
mov
in
clc
in
movsb
fidivrl
negl
js,pn
fwait
jbe
xchg
push
xor
jne
jae
and
loop
jae
dec
push
jae
stos
fs
hlt
ja
aad
lods
aaa
pop
pop
mov
aaa
jmp
fsubr
cltd
mov
cmpsl
fcoms
xchg
mov
addr16
int3
aam
scas
push
sub
ja
xchg
xor
jge
xor
imul
jecxz
sub
orb
sbb
and
fwait
in
cmp
mov
fadd
test
sti
in
ret
int3
lds
addb
or
in
xchg
dec
loopne
xor
mov
mov
icebp
lahf
xor
sub
hlt
cmp
lahf
jg
stc
mov
outsb
ret
push
dec
xor
scas
dec
cmpsl
cmp
push
lods
int
mov
fs
lahf
cmp
lods
int
push
push
push
push
xor
sub
lods
mov
and
cmp
xor
iret
jmp
sti
xor
outsl
jecxz
ret
out
inc
jmp
cmpsl
sbb
jmp
pop
push
pop
push
stos
aaa
sub
xchg
out
fdivrp
lds
mulb
mov
test
lods
stc
push
cli
pop
cli
adc
int3
push
sahf
out
jb
mov
repnz
sub
cmc
popf
ja
filds
jae
sahf
jno
mov
push
xchg
cmpsl
mov
sbb
cmp
enter
shl
xchg
xor
sarl
mov
test
cmp
out
fsubrs
fistps
test
xchg
inc
mov
dec
mov
xor
testl
mov
out
jl
mov
cmc
hlt
insb
divl
lods
repz
popf
pop
lods
inc
call
xchg
push
bts
loopne
mov
arpl
cmp
cli
xor
loop
cmp
push
pop
sbb
stc
adc
iret
cmp
mov
xor
jae
fimull
stos
icebp
cmc
sbb
call
je
sahf
daa
mov
vpunpcklbw
ljmp
jle
fisubrl
sub
aas
fsts
inc
mov
mov
lods
mov
sub
lods
push
pop
dec
in
hlt
ficompl
add
cmpsl
pop
jecxz
cwtl
lock
scas
cmpsl
jns
scas
fildll
popa
test
test
mov
mov
andl
xlat
out
sub
std
jo
mov
sub
mov
push
out
gs
lret
cmp
sti
in
shll
jb
sub
or
pop
das
xlat
adc
dec
xchg
in
stos
jg
mov
and
imul
jge
data16
cmpsl
out
jge
stc
inc
orl
push
push
inc
stos
out
fwait
shlb
mov
sub
fmuls
outsb
push
ljmp
std
ficoml
gs
scas
leave
jmp
mov
dec
mov
testl
xor
cmp
pop
mov
scas
iret
std
jne
jge
add
in
pop
fwait
xor
pop
stos
push
outsl
mov
int
jo
dec
call
lcall
stos
mov
sub
loop
pop
les
out
aaa
movsb
out
lret
mov
je
mov
fnstcw
jno
in
nop
mov
push
jbe
aaa
cli
cmp
repz
mov
into
stc
mov
loopne
pop
xlat
adc
xchg
loopne
or
lods
int
insb
xchg
or
ss
mov
push
rcr
fistps
pop
sbb
pop
pop
push
sub
fistps
fdiv
stc
bound
jecxz
and
sahf
ss
pop
push
scas
ljmp
cmpl
aas
roll
cmp
std
scas
hlt
mov
xchg
popf
dec
pop
cmp
jnp
jl
mov
dec
jbe
sbb
and
lock
movsl
imul
pop
pop
jge
mov
push
dec
sub
xor
lea
fidivs
sti
xchg
mov
jae
icebp
jg
mov
jne
enter
and
add
in
push
call
fidivs
std
jmp
aam
fsubrp
sub
push
push
je
test
jo
jnp
arpl
pop
gs
jge
push
xor
in
test
out
cld
sbb
dec
ja
int
sub
cli
test
mov
mov
jb
push
push
fimull
lea
ret
lahf
jbe
jb
insb
jge
jo
cltd
mov
cmp
mov
scas
jl,pt
lock
push
ret
clc
fwait
cmc
fmuls
cmp
adc
xor
rcl
cs
in
sbbl
inc
mov
scas
sub
in
mov
pop
rcrb
xchg
scas
insl
ljmp
xor
pop
xor
mov
out
cmpsl
mov
neg
cmp
pop
movsb
popf
test
outsl
jle
fsubl
jle
iret
rcl
icebp
sbb
mov
push
xchg
xor
pusha
call
xchg
rolb
stos
push
not
out
mov
in
sti
mov
mov
sub
pop
dec
dec
mov
mov
cmc
or
hlt
mov
fsub
push
push
cmc
inc
stc
sbb
movsl
sti
xor
dec
sbb
jb
cmp
sarl
enter
gs
push
jmp
xchg
mov
sahf
mov
jo
out
cmp
test
cmc
shll
xor
neg
lret
into
add
xchg
lret
push
mov
sarb
and
xchg
push
jbe
sbb
arpl
dec
or
cbtw
loope
repnz
cli
imul
mov
mov
addr16
cs
subb
cmp
scas
sar
call
xor
cmp
stos
ljmp
pop
notb
adc
pop
or
adc
inc
sbb
loope
sub
or
cli
jb
ret
lret
mov
gs
ds
pop
ror
sub
push
or
and
rorl
call
xor
push
popa
lods
cld
sub
cmp
mov
mov
mov
arpl
aad
xor
int
stos
scas
sub
cltd
inc
ljmp
xchg
fwait
mov
add
cmp
ljmp
jmp
cltd
movsl
pop
fcoms
jnp
mov
and
fidivl
dec
fs
fs
mov
ljmp
das
call
push
sahf
repnz
dec
in
lret
fstpl
cmp
inc
jae
out
dec
jmp
out
lods
dec
popf
aas
insb
in
mov
xor
dec
out
cld
xchg
xor
jns
int
call
jnp
lock
mov
fwait
jg
insl
mov
jg
imul
mov
enter
mov
call
cmp
scas
sti
jge
je
jbe
dec
jmp
mov
mov
mov
rcl
fucomi
dec
mov
jmp
fucomi
pop
pushf
cltd
je
ret
out
leave
outsb
outsb
inc
xor
mov
jmp
xchg
iret
fdivl
ljmp
mov
mov
popa
test
mov
mov
and
lods
mov
jnp
xchg
xlat
iret
lea
xchg
aad
int3
sub
or
mov
imul
or
sub
stos
fidivs
push
test
xchg
push
sti
cmp
repz
mov
js
loopne
ret
fidivrl
imul
cwtl
out
mov
cmc
enter
xor
pop
xchg
mov
daa
jae
ss
outsb
scas
hlt
xchg
incb
push
les
mov
insb
jle
lret
sahf
push
jg
pop
cmpsb
stc
dec
mov
aaa
dec
or
pop
lds
mov
mov
ds
lods
imul
lods
xor
call
aaa
lods
jecxz
mov
xor
mov
shrl
scas
sahf
sbb
pop
mov
gs
mov
fldt
movsl
mov
pop
repnz
sub
hlt
pop
stc
in
or
lock
pusha
xor
lods
mov
insb
fisttps
push
cmp
mov
dec
dec
jge
stos
jb
daa
dec
cmp
or
xchg
mov
dec
lret
test
xchg
sahf
sti
cwtl
js
mov
jecxz
xchg
or
out
push
cmp
mov
pushf
fcmove
ljmp
loope
mov
mov
call
sub
sbb
imul
mov
cmp
ja
xchg
pop
dec
sub
out
xchg
cmp
jmp
mov
and
fnstcw
jae
or
mov
cmp
sbb
jle
cmpsb
pop
outsb
inc
addr16
pavgw
fbld
mov
ds
pop
out
fwait
int3
jae
pusha
mov
push
ret
call
jmp
mov
std
out
jmp
mov
fcoml
mov
jp
dec
mov
lods
mov
jno
fisubrl
pop
and
outsb
jno
cmpsb
scas
inc
fmull
jnp
lcall
stos
jge
scas
pushl
push
loope
das
jle
mov
std
fbstp
mov
repz
outsl
xchg
jle
xchg
jnp
test
push
scas
push
repnz
test
cmc
xor
stc
fldenv
ret
xor
mov
std
je
fwait
sbb
add
inc
ss
int
dec
xchg
out
adc
outsl
out
out
rolb
inc
inc
pop
jb
mov
push
fdivrl
pop
dec
pop
jno
mov
pop
xchg
loopne
xchg
push
out
fnsave
mov
int3
mov
or
stos
in
imul
mov
notb
fwait
push
aam
pushf
sub
or
xchg
in
gs
enter
lret
lea
out
nop
jge
xor
adc
imul
jae
push
inc
test
outsl
push
cmp
loopne
xor
daa
repnz
sarl
aas
fcompl
div
mov
push
outsl
outsl
stos
in
xor
mov
test
ret
ds
ret
int
sti
fdivrp
xchg
mov
or
fistl
cmpsb
cmp
mov
jmp
test
pop
push
push
jmp
bound
ljmp
mov
repnz
sti
rcrl
fildll
outsb
insb
jl
nop
jge
mov
stos
cmp
inc
and
xor
sbb
stc
imul
cld
loop
dec
cmp
adc
fildll
fildl
in
xchg
inc
or
lea
imul
jno
xor
lret
lahf
mov
jae
sub
pop
stos
cmp
mov
clc
mov
lahf
jmp
push
jg
std
insl
jl
cmp
mov
push
pop
aaa
cli
push
in
jne
cmp
push
dec
stos
out
gs
repz
rclb
mov
lods
out
xchg
cmp
cmp
push
ficoml
xchg
roll
jne
xchg
mov
popaw
leave
cmpsl
rorl
mov
mov
shll
push
mov
in
icebp
movsl
fistl
jg
jns
ror
pop
lea
jo
jns
test
mov
pop
fs
in
ja
into
fwait
xlat
fcmovnb
mov
gs
loope
mov
ljmp
test
pop
inc
lcall
jl
mov
fs
lods
lahf
xchg
xlat
or
xorb
gs
out
and
outsb
je
cmp
push
dec
pop
fnsave
lahf
int3
or
jp
adc
cmpsb
jno
fisttps
lods
jg
xor
pop
or
xchg
shrb
dec
mov
ljmp
mov
sub
int
hlt
jnp
div
cmp
imul
loope
das
cwtl
mov
stc
iret
or
stos
xchg
sar
testl
sarb
xchg
hlt
xor
out
test
sub
fwait
pop
xchg
fldenv
and
push
fisubs
sub
mov
ss
stos
fldcw
in
cltd
mov
repnz
fsubl
icebp
fistl
arpl
xchg
or
mov
out
fcompl
movsb
ljmp
xchg
lods
leave
rcr
inc
dec
or
adc
scas
stc
cmc
in
fld
pop
outsl
xchg
push
aas
inc
lahf
adc
mov
xchg
inc
das
or
insl
or
roll
adc
xchg
out
sti
add
jno
loopne
mov
fcomps
pop
push
push
pop
mov
inc
test
outsl
pop
jp
sti
fildll
lret
pusha
mov
mov
sbb
mov
dec
out
mul
shrl
fstpl
cli
inc
call
ret
mov
push
aam
mov
xchg
fistl
add
and
out
dec
call
scas
cmp
stos
cmp
mov
imul
cld
lods
sbb
sbb
mov
addl
fsubl
movsb
pop
mov
fpatan
add
scas
jmp
stc
adc
cmpsl
mov
aam
aaa
out
fdivrl
clc
rcl
mov
and
loop
fs
lods
lock
shlb
xchg
jecxz
les
or
or
fstp
dec
rcrl
jle
icebp
xor
jne
das
jnp
stos
bound
add
xchg
into
jae
adc
es
pushf
push
jae
repz
jmp
outsb
push
mov
in
popa
test
pop
push
scas
jle
fsubr
lods
and
outsl
test
pop
enter
mov
xor
lea
adc
cmp
mov
sbb
pushf
sub
in
fstpl
daa
ja
scas
mov
stc
inc
cli
jae
jbe
icebp
fmul
pop
add
or
rcll
xor
add
mov
lods
imul
push
jecxz
push
mov
inc
lret
pop
icebp
out
fildll
sarl
sti
repz
lahf
aaa
data16
dec
xchg
das
seta
test
push
jno
lea
inc
popa
cmpsb
mov
sahf
ljmp
lods
bound
scas
sub
push
pop
and
mov
add
fldt
mov
cmp
ds
cmp
cmpsb
les
mov
xor
jbe
je
shll
fwait
mov
fcmovbe
lods
or
dec
adc
pop
stos
out
jb
or
adc
fidivs
enter
mov
pop
jmp
xor
lret
fisttpl
ret
dec
sahf
mov
sub
mov
jns
mov
pusha
xchg
in
and
aad
adc
push
popf
in
sub
jcxz
add
mov
pop
and
mov
out
or
jl
mov
jecxz
jp
stc
cmpsl
mov
pop
cmpsl
pop
pop
jl
fs
ret
jecxz
sbb
lcall
fdivl
xchg
fisubrl
jno
lods
fdivrs
jmp
loop
add
jae
ja
jmp
sub
aaa
movsb
out
mov
and
xchg
inc
stc
and
sti
cmpb
mov
cs
pop
cld
lcall
dec
icebp
fsub
sub
lods
ret
enter
pop
add
dec
mov
pusha
adc
notl
mov
orb
stos
xlat
ljmp
clc
cltd
fbld
fisubl
mov
stos
dec
pushf
adc
aam
dec
pop
jg
lods
lahf
xlat
mov
pop
jle
inc
inc
or
jmp
daa
lret
lea
ja
mov
sub
std
insb
jns
xchg
ja
scas
pop
xchg
scas
jl
rolb
loop
cmpl
fwait
sub
in
inc
mov
jmp
xchg
ror
sbb
shll
jae
es
hlt
mov
int3
xor
mov
jo
cmp
inc
push
xlat
aaa
inc
pop
pushf
in
dec
cmp
push
jbe
das
fistps
sub
incb
ja
jnp
xor
repnz
je
jp
loopne
mov
mov
inc
push
sbb
fdivr
andb
fcomps
xchg
leave
popa
aad
add
jmp
aam
aas
ficoml
inc
fdivr
sub
push
imul
imul
scas
jb
jbe
in
lods
mov
mov
out
adc
adc
cltd
loop
in
leave
daa
mov
es
mov
mov
jmp
scas
mov
mov
mov
hlt
je
divl
sub
ljmp
inc
dec
pop
xchg
mov
clc
mov
inc
or
bound
ss
mov
sti
push
cmp
inc
sub
in
stc
mov
data16
mov
push
rcrb
es
int
push
icebp
and
enter
dec
xchg
xchg
clc
ds
pop
mov
mov
jno
mov
or
cmpsb
lods
mov
add
cmp
repnz
jge
inc
mov
dec
inc
or
xlat
int3
test
mov
jg
jecxz
mov
loopne
gs
lahf
negb
shll
pop
jl
cli
mov
popa
test
fadds
push
scas
js
jnp
jbe
mov
pop
cmc
mov
xchg
sbb
das
pusha
jne
xchg
mov
call
in
outsb
lds
pop
icebp
xchg
xor
lret
hlt
lods
adc
push
mov
out
mov
cmp
jge
stc
mov
lret
mov
fidivrl
mov
in
iret
ljmp
inc
outsb
js
dec
push
lds
xor
dec
cmp
push
jno
adc
dec
bnd
xor
lds
jmp
fildl
push
xlat
dec
arpl
xorl
cli
in
push
sbb
mov
push
mov
inc
loopne
sbbb
aam
pop
jecxz
ljmp
ja
mov
pop
and
cwtl
lret
xor
push
push
dec
insb
pop
sbb
test
push
call
jmp
cmp
neg
cld
jle
lret
push
adc
loopne
rcr
sti
shl
loop
push
mov
lahf
mov
rorb
outsb
push
jnp
push
vcvtps2pd
mov
mov
jns
add
inc
jne
mov
adc
adc
xor
pop
pop
ds
fimull
jnp
hlt
outsl
dec
xchg
jb
js
hlt
ret
push
mov
adc
les
push
fmulp
nop
out
xor
aaa
or
mov
and
pop
inc
xchg
inc
cmc
testb
dec
fcomps
test
hlt
movsl
cli
test
xchg
cs
lcall
subb
push
jnp
xchg
sub
lcall
push
cli
cs
movsb
cmp
sbb
aas
mov
ja
dec
mov
cmpsb
fcoms
cltd
dec
and
test
add
or
xlat
jno
mov
dec
mov
sub
and
push
into
jo
pop
xchg
push
inc
aas
lds
inc
sub
adc
xchg
les
xor
test
adc
lods
insl
dec
das
dec
addr16
gs
mov
es
mov
insb
sbb
or
sbb
xor
mov
insl
and
mov
push
sub
scas
adc
push
pusha
aad
inc
xchg
jmp
mov
mov
push
fmull
sbb
int
outsb
lea
gs
rolb
pop
andb
sahf
add
sbb
pop
jmp
jmp
mov
icebp
shl
loop
or
imul
orb
in
push
cmpsl
ljmp
push
out
loope
in
outsl
dec
mov
sub
push
xchg
mov
mov
push
loop
mov
xchg
insb
adc
mov
dec
push
aas
clc
inc
mov
je
dec
xchg
dec
sub
pusha
jg
lcall
sbb
push
je
lock
ret
mov
loope
ret
mov
inc
mov
push
ds
push
repz
push
pushf
dec
jle
hlt
push
int3
fnstsw
jp
int
fidivl
test
outsl
iret
mov
jno
fistps
jp
dec
cld
ljmp
mov
test
js
cmp
call
xor
cmp
jmp
pop
lds
jmp
in
insb
fldcw
idivl
and
push
loop
hlt
sbb
out
jne
pop
mov
jl
sti
mov
dec
outsl
iret
add
and
mov
int
xor
iret
xlat
hlt
arpl
fistpl
lret
sub
mov
leave
arpl
push
xchg
cmpsl
ds
out
inc
sti
xor
add
inc
sub
std
pop
xchg
pop
shll
insb
outsb
mov
xchg
out
adc
or
mov
int
fnstenv
xchg
sub
mov
cmp
push
inc
into
mov
mov
lds
adc
iret
mov
inc
mov
pop
and
push
mov
popf
shr
mov
mov
out
sbb
push
xlat
pop
cmp
push
mov
rep
fistpl
dec
sbb
addr16
cmp
add
inc
adc
int3
in
dec
pop
arpl
pop
mov
iret
push
in
push
mov
addl
or
es
xchg
dec
sub
pushf
mov
jecxz
inc
mov
xor
mov
lahf
mov
or
jno
push
sub
gs
shrb
arpl
test
and
pop
ret
scas
lret
sti
fwait
xlat
pop
data16
cmp
cmpsb
ds
inc
inc
leave
sahf
sti
arpl
ds
gs
mov
test
cmp
push
cli
cmc
ja
ljmp
xchg
sahf
push
out
mov
xchg
push
fisttpl
pop
stos
xor
xor
and
xchg
jle
cs
in
xchg
into
push
push
clc
pop
xlat
xchg
sub
jns
xlat
and
jp
and
mov
lahf
aad
push
xlat
inc
dec
aad
push
in
xchg
daa
loop
imul
aaa
std
leave
cmp
lock
shlb
leave
stc
rclb
pop
mov
mov
inc
int3
repnz
jmp
dec
nop
in
mov
outsl
and
or
xchg
fsubr
cmp
sub
imulb
dec
sub
push
push
in
xor
mov
cmp
clc
adc
jge
pop
lds
andl
push
jecxz
xlat
push
or
arpl
lahf
xchg
fisubrl
and
cltd
jg
das
xchg
and
aam
imul
test
imul
xchg
dec
test
jp
cmp
js
jg
fs
xorb
fadds
mov
pop
fs
loop,pt
jecxz
fs
loope
mov
mov
iret
inc
jae
ja
pop
loope
inc
vmwrite
cwtl
xchg
inc
out
lcall
data16
pushf
fstpl
jl
lock
cmp
jnp
jnp
cmp
jl
clc
retw
cs
push
push
pop
imull
dec
adc
lock
fbld
xlat
push
add
push
call
out
lods
popa
imul
call
ds
jb
fs
test
filds
incl
das
cmp
fcmovnbe
cs
sub
sbb
sub
jne
in
or
jne
outsl
pop
jg
mov
orl
xor
push
lcall
ret
or
sub
push
mov
hlt
lret
xor
in
pop
dec
int
sbb
or
sbb
mov
outsl
xchg
jno
in
repnz
sti
test
push
fwait
mov
lock
or
cmp
mov
popf
out
and
in
imul
xchg
jnp
jmp
push
add
nop
mov
inc
jnp
cmc
pushf
decb
out
fstpl
cs
gs
xor
sub
outsb
mov
cmp
outsb
xchg
jae
pop
mov
out
pop
les
lcall
jnp
lods
sub
jne
lods
cs
repz
push
dec
mov
pop
scas
lods
lcall
sbb
mov
lret
pushf
arpl
mov
mov
hlt
aam
dec
cmp
fldcw
lock
mov
lcall
std
ret
fbld
or
js
leave
stos
pop
xchg
test
fidivs
lock
jp
add
push
popa
lahf
mov
fwait
mov
dec
out
mov
cwtl
xchg
pop
shl
or
call
or
mov
xlat
adc
aam
shrl
add
inc
dec
repz
negb
cmp
fstpt
jnp
jns
pop
inc
pop
cli
andb
add
aam
push
mov
rcrl
lret
push
push
mov
hlt
cmp
pop
loope
mov
xorl
xchg
int
negb
daa
lret
es
push
inc
dec
xor
pop
ljmp
aaa
add
cli
push
pop
jbe
sti
stos
pause
in
mov
mov
pop
dec
jle
fiaddl
cwtl
je
mov
jnp
jmp
push
clc
cmc
cmp
xor
mov
push
mov
adc
cld
cwtl
jp
lahf
mov
std
jne
sub
ret
mov
aad
shrl
pop
sub
lret
or
into
push
jbe
das
adc
cli
dec
js
mov
lahf
jae
mov
and
test
mov
lahf
cwtl
jp
inc
mov
outsb
inc
sbb
inc
ljmp
mov
in
push
notl
ljmp
dec
sub
push
jb
cs
sti
fwait
jns
cmp
pop
in
xchg
and
addr16
lea
xchg
dec
or
data16
pop
out
pop
bound
cltd
jae
pop
jno
push
sbb
sub
stos
cmpb
in
icebp
or
fnstcw
out
xor
fdivl
scas
mov
insb
pop
mov
addr16
mov
jecxz
mov
push
sbb
stc
push
sbb
jno
js
cli
adc
sub
jg
push
aad
sbb
xchg
mov
testb
ficomps
or
mov
sub
dec
or
mov
xor
addr16
xor
das
mov
mov
hlt
dec
cwtl
add
sub
ror
icebp
mov
and
shlb
jmp
jecxz
mov
and
mov
inc
pop
inc
jae
pop
and
inc
jl
sar
jbe
or
popa
sbb
sbb
sbb
es
popa
pop
inc
dec
daa
dec
mov
sahf
fucomip
cltd
imul
jnp
jnp
cmp
aas
cltd
xor
sbb
sti
rcl
imul
in
shrl
jmp
loopne
cli
mov
jne
sub
in
mov
inc
pop
sub
or
mov
pop
dec
std
inc
mov
jne
dec
mov
xor
jo
mov
je
dec
in
jns
or
and
inc
sbb
xor
js
jb
jmp
stos
and
push
xchg
lods
wbinvd
ljmp
mov
sub
mov
sub
push
stc
mov
mov
push
imul
jge
sar
sahf
out
and
lahf
stos
mov
fisubrl
ds
xor
mov
mov
in
out
pushf
xlat
fsubs
push
cmp
ror
or
movsb
popf
sub
jne
aam
dec
lods
mov
stos
js
insb
data16
xor
push
popl
xchg
sub
movsb
pop
call
jp
sahf
iret
out
lahf
call
push
sti
sub
push
push
addl
xchg
fs
mov
pop
in
je
neg
mov
jge
jl
fsubr
fsubrl
and
fldenv
pop
jno
inc
pop
jle
mov
inc
js
outsl
ret
out
jecxz
arpl
mov
xchg
subl
cld
sub
dec
jb
icebp
fbld
xchg
in
aad
mov
movsl
in
cmpsl
cmp
lret
add
movaps
push
mov
dec
dec
test
dec
or
fcmovnbe
fbld
rcr
xchg
cmp
lods
hlt
sbb
mov
push
mov
mov
cmp
cltd
jb
ljmp
pop
fistl
and
sbb
pop
add
sahf
leave
xchg
out
sub
push
aad
rol
dec
and
ret
sub
adc
sub
dec
pop
jne
das
push
movsb
mov
sbb
adc
cltd
xchg
lret
cld
mov
lret
cld
sub
push
shrb
outsl
or
inc
mov
xchg
mov
lock
test
scas
mov
lahf
sub
repz
mov
mov
gs
in
push
jae
xor
stc
aas
jo
mov
sub
shr
adc
xchg
arpl
lahf
popf
sub
sbb
cltd
loopne
adc
subl
jae
out
mov
addr16
in
jmp
jmp
fcomip
fdivl
pop
mov
movsb
mov
imul
fdivl
jb
mov
jns
aad
outsl
inc
jne
daa
call
fcoms
dec
aas
push
jnp
jae
notb
pop
jb
xchg
lahf
jl
mov
leave
push
daa
aas
rcl
push
pusha
sub
sub
icebp
in
inc
aaa
in
sti
shl
out
mov
mov
das
pop
imul
aaa
repz
out
in
cmpsb
adc
dec
jno
dec
enter
sarl
out
testl
mov
out
cmp
in
adc
push
push
inc
and
xchg
leave
jl
aas
mov
mov
ss
sbb
pop
sarl
cld
outsb
aaa
jns
ds
jge
jnp
rcrb
dec
xchg
jl
push
ljmp
push
mov
jo
test
xor
stos
cmp
push
lods
jae
out
ffree
jl
cwtl
xchg
js
xor
push
cmc
inc
mov
scas
xor
xlat
dec
mov
dec
icebp
leave
push
sbb
mov
or
sbb
mov
jl
aam
stc
cmp
sub
cmp
imul
mov
cs
std
repnz
sbb
push
fwait
out
adc
dec
out
popf
jne
mov
movsl
cs
dec
xchg
adc
inc
fwait
adc
push
in
push
mov
push
fstl
aaa
adc
jnp
jp
cmp
mov
inc
test
pop
cld
and
shl
pop
dec
sub
inc
pop
arpl
adc
dec
outsb
movsb
je
jbe
pop
jl
sar
test
lcall
jo
jns
inc
data16
fnstcw
xchg
adc
pop
mov
or
adc
hlt
adc
js
insb
cmpsl
lods
stos
inc
inc
push
lock
mov
xchg
stc
xchg
fdivrl
lds
push
mov
sub
fisttps
mov
ficoms
cmp
aam
into
jge
in
pop
cmp
cwtl
mov
cs
pop
imul
fstl
mov
sarl
xchg
leave
xchg
outsl
mov
int
popf
aaa
cmp
fcmovb
lret
movsl
or
jb
push
out
xlat
or
mov
out
leave
inc
xchg
cli
lods
adc
mov
repnz
and
jnp
lods
aad
push
lea
movsl
xchg
stc
es
sbb
mov
xchg
pop
sub
sub
pop
jmp
hlt
lret
mov
pop
cmpsl
out
sub
cmpl
push
movsl
cld
fs
je
dec
sub
jb
aaa
or
jb
es
mov
pop
pop
repnz
pop
sub
mov
cmp
jbe
daa
adc
or
jns
flds
jae
out
push
sbb
out
or
shrl
cmpsl
sbb
sbb
sub
mov
cltd
pop
jecxz
out
jp
stc
mov
or
xchg
mov
out
mov
lcall
pop
cmp
ja
ja
xor
lret
fcmovbe
and
mov
xor
shrb
mov
js
jae
sbbl
push
mov
mov
shll
jb
cmp
rcrl
adc
rep
adc
scas
mov
dec
xor
fwait
ds
jnp
mov
cmpsb
mov
xchg
sub
mov
jbe
mov
les
dec
cltd
xorl
push
jp
jp
aam
enter
lods
lock
sub
push
jle
lods
or
mov
and
jae
cmpsl
ja
in
xchg
cmpsl
je
imul
movb
xchg
xchg
aad
in
push
xchg
out
dec
mov
dec
and
mov
aaa
punpckhbw
push
fildll
push
mov
and
jbe
rcr
jbe
push
ljmp
cmpsl
stos
cld
lcall
das
push
xchg
and
clc
imul
pop
mov
adc
fists
icebp
loope
out
movsl
jne
add
jae
int3
mov
int3
pop
rcrl
dec
fneni(8087
imul
mov
iret
mov
adc
loop
pop
mov
xchg
std
stos
jne
test
pop
shll
jmp
fwait
lods
lcall
cs
push
loope
mov
and
sahf
xchg
or
js
incl
mov
jecxz
int
cmp
imul
arpl
loope
and
je
mov
insb
fistpll
inc
dec
les
lcall
call
fcmovu
outsl
test
xchg
insl
jo
in
shll
cmpsl
add
aaa
mov
adc
sub
int3
test
sub
test
out
mov
sahf
and
push
fildl
mov
lds
rep
test
mov
lret
mov
test
jecxz
pop
cmp
das
test
xchg
or
sbb
push
in
imul
cmc
mov
sbb
movsl
pop
lret
mov
lods
or
das
fildll
loope
test
jb
mov
scas
enter
loope
cmp
lea
fisubrs
stos
xchg
jae
negl
mov
into
sub
imul
gs
push
inc
movsb
int
pop
push
outsb
test
js
inc
scas
enter
mov
imul
in
incl
mov
mov
gs
stc
fucom
mov
jnp
popa
js
cmp
inc
jg
loop
movsb
cltd
mov
dec
or
sbb
daa
in
jp
aaa
sub
lods
mov
rcrb
sub
movsb
jns
mov
cwtl
scas
out
xchg
push
std
in
dec
xchg
imul
cmp
xchg
inc
out
call
cltd
lcall
shr
stos
addr16
stos
mov
mov
outsb
cmp
scas
cwtl
das
push
fisubrs
push
rol
inc
pop
fsqrt
fsub
pop
pop
cltd
les
push
dec
or
adc
call
daa
nop
xlat
mov
outsl
and
lock
cmpl
mov
xor
jae
pop
imul
jl
fldenv
pop
mov
jge
hlt
inc
mov
push
imul
rclb
icebp
mov
xchg
jmp
repnz
cld
sbb
xchg
cmp
outsb
popa
cmpsb
sti
mov
jp
mov
cld
pop
sub
pop
xchg
dec
je
adc
iret
xchg
aaa
xchg
call
push
arpl
sbb
aas
cli
and
scas
std
into
xchg
mov
push
and
icebp
fstps
adc
in
and
pop
push
nop
mov
fildll
std
and
arpl
adc
addr16
jnp
imul
jae
xchg
jns
pop
pop
insb
or
hlt
loope
adc
cmp
dec
ret
lea
scas
ret
add
fsubrp
fidivl
push
fadds
mov
mov
lret
lock
push
or
xchg
inc
lcall
adc
imul
cwtl
mov
mov
ret
lahf
add
repnz
adc
aas
sahf
lret
mov
out
arpl
jb
pop
inc
or
cmpsl
test
pusha
pop
jle
cld
inc
dec
lods
cmp
sbb
outsb
mov
dec
les
popf
adc
ss
fcomps
pop
ss
mov
dec
in
lret
int3
xchg
imul
shlb
cwtl
sti
pop
sahf
pop
out
out
ljmp
scas
lahf
and
push
cld
into
les
push
jmp
mov
push
outsb
xchg
mov
add
fisubrs
lahf
icebp
sub
fdivp
aad
cltd
adc
push
push
dec
jo
xlat
sub
rcrl
sarl
ret
mov
addl
mov
push
lret
cmp
mov
pusha
shll
scas
fnstenv
pop
or
xlat
mov
fdivrp
fists
push
or
sbb
xor
cs
inc
lret
cld
arpl
sti
xchg
hlt
sub
pop
pop
mov
addr16
jbe
scas
fcoms
cli
bound
pop
jmp
in
and
stos
or
cld
push
in
call
testl
xchg
pop
inc
pop
clc
lret
sahf
adc
inc
addr16
push
cmp
jmp
dec
pop
jle
jne
jp
jno
std
xor
test
jo
int3
mov
mov
in
adc
scas
repnz
imul
push
cltd
cmpsb
xchg
out
aam
dec
iret
ljmp
mov
lret
lea
sub
rcr
or
xor
adc
mov
pop
hlt
xchg
fwait
outsb
mov
xchg
mov
cmp
enter
jmp
divl
mov
cld
inc
repnz
jp
sbb
in
and
xchg
andps
push
pop
xchg
lods
xor
fcmovu
inc
mov
pop
push
xor
in
inc
stos
icebp
and
pop
iret
cmp
mov
pop
pop
lods
bound
push
iret
addr16
loop
in
xchg
inc
xchg
mov
xchg
in
add
xchg
ja
je
push
push
out
jecxz
adc
dec
icebp
push
stos
add
lret
lods
mov
xor
lret
lahf
xchg
bts
aaa
xchg
std
pushf
jmp
jmp
data16
outsl
xor
test
insb
adc
mov
mov
adc
push
adc
push
and
lods
cltd
out
push
mov
scas
pop
fidivs
fiadds
mov
daa
out
not
push
xchg
mov
jecxz
cmpsl
mov
mov
int
pop
xchg
jle
enter
jo
aam
adc
push
sub
enter
fists
idivl
scas
mov
imul
jbe
je
divl
icebp
scas
loope
or
mov
mov
andb
loopne
frstor
in
sub
inc
cmc
cmp
pop
leave
jle
cmp
imul
add
aad
test
aaa
in
iret
sbb
in
inc
dec
out
jmp
push
bnd
div
cld
fcoms
aaa
push
sti
push
mov
andb
pop
clc
insb
insl
lcall
add
movsl
dec
movsl
and
lret
into
push
les
setns
pop
cmp
push
stos
cmp
mov
dec
push
push
add
push
push
insb
stos
js
mov
inc
push
loopne
lds
cmp
jb
xor
sub
pop
aam
pusha
jns
fwait
ret
mov
subb
cwtl
add
bound
cmp
xchg
gs
ja
xchg
mov
xor
cli
ffree
adc
iret
stos
pop
lret
outsb
push
sub
mov
in
dec
mov
in
and
lea
dec
dec
sub
inc
or
pop
shll
scas
test
inc
inc
imul
and
fcoms
dec
jle
out
jb
dec
leave
cld
pushf
orb
insb
sub
push
mov
rcrb
lods
mov
fldcw
mov
adc
jne
loop
test
mov
and
push
ficoms
sbb
pop
pop
xchg
push
sahf
jne
xor
mov
cltd
xchg
sub
sahf
jp
daa
pop
mov
dec
stos
push
mov
pop
test
adc
adc
in
push
and
lds
xchg
xchg
lahf
sub
xchg
jg
push
fwait
fwait
xchg
fwait
cltd
pop
pop
hlt
ja
inc
gs
insl
xchg
into
jae
pop
loopne
fistpl
int
push
dec
aaa
sub
dec
jo
inc
mov
gs
mull
push
dec
mov
xchg
jle
ss
add
cltd
loop
mov
aam
loope
leave
gs
das
xchg
lcall
pop
sbb
imul
out
pop
shrb
push
imul
shll
sub
mov
dec
xchg
sbb
scas
imul
dec
orl
in
leave
push
mov
mov
shlb
aad
hlt
and
mov
std
adc
adc
enter
mov
jle
cld
mov
xor
aaa
lret
cmp
xor
cltd
insl
je
xlat
push
push
aaa
xlat
mov
testb
mov
loop
gs
in
aad
xchg
push
xor
daa
mov
cltd
into
mov
ja
xlat
lahf
mov
aam
rcll
mov
mov
push
arpl
insl
jmp
fwait
aam
dec
inc
mov
cmp
pop
pop
ffree
inc
inc
mov
xchg
mov
cmpl
jmp
repz
out
adc
aad
sbbl
push
pop
xchg
popf
adc
inc
push
mov
mov
clc
sahf
test
and
sub
push
ret
add
loopne
jl
mov
mov
ja
hlt
psubb
scas
ret
mov
enter
push
popf
test
std
xchg
push
jp
mov
jae
jnp
cmp
dec
pop
in
aad
fwait
push
in
repnz
mov
xchg
pop
ss
push
cmpsb
sbb
mov
mov
and
xchg
aad
incl
or
jmp
xor
mov
scas
movsl
cltd
adc
xchg
mov
outsl
xor
mov
mov
cwtl
shrl
fs
testb
and
int
je
iret
arpl
inc
inc
inc
xor
mov
lret
insl
imul
mov
or
test
mov
xlat
fstpl
outsl
xchg
cmp
push
aad
sahf
xchg
dec
in
mov
repnz
lret
andl
sub
mov
nop
shlb
arpl
xchg
push
push
mov
mov
and
aaa
sub
test
andb
xchg
jno
stc
mov
int
cmp
cmp
cmp
cmp
push
cli
inc
lods
movlps
test
mov
pop
and
mov
in
mov
fsub
push
pusha
fstpl
test
mov
shll
and
jbe
mov
sahf
sub
and
xchg
pusha
leave
insl
stos
xor
xchg
enter
popf
jmp
jnp
add
test
sub
sbb
xchg
xchg
cmp
in
outsl
sti
push
ja
xor
inc
mov
mov
push
lcall
and
test
dec
test
clc
sub
into
mov
test
push
movsl
movsb
aam
xor
sarb
leave
mov
jno
cli
lahf
jns
test
jo
mov
cmp
xorl
sub
mov
fidivrl
mov
mov
or
pop
mov
data16
push
mov
das
jg
mov
jns
and
push
xchg
inc
pop
jmp
aas
test
jmp
insl
sarl
and
inc
and
lret
test
push
pop
mov
bound
jae
in
leave
push
cwtl
loopne
sbbb
gs
cmc
or
es
sbb
arpl
mov
ret
xchg
js
cld
mov
fisubrl
flds
pop
out
fnsave
in
aaa
lods
sbb
insl
popf
sbb
fsubrl
xor
push
cmpsb
xor
mov
and
mov
cmp
inc
dec
sub
sub
adc
scas
and
mov
add
scas
repz
dec
dec
jns
mov
movsl
mov
adc
sub
bound
icebp
or
bound
cld
and
cwtl
cmpb
xchg
cli
mov
dec
aad
mov
stos
popf
icebp
mov
or
bound
ja
xchg
pop
push
insb
mov
mov
push
data16
or
and
jns
sub
sbb
shll
int
adc
xchg
cmc
je
adc
jns
test
faddp
mov
pop
insl
cs
movsl
scas
repnz
test
enter
rorl
sub
daa
push
sbb
js
jnp
ja
mov
test
ljmp
push
inc
mov
loope
inc
inc
out
push
mov
hlt
jl
subl
push
imulb
test
icebp
dec
jecxz
or
ss
mov
out
jbe
jne
pop
cmp
sbb
pop
daa
mov
adc
inc
adc
xchg
aaa
xchg
or
movsl
dec
outsb
push
lahf
mov
push
into
repnz
mov
adc
xchg
lods
rorl
pop
scas
xor
or
pop
fcoml
cmp
dec
inc
cmpsl
adc
adc
sub
loop
and
popf
jl
bound
mov
dec
out
mov
repz
mov
cwtl
dec
push
jo
add
sbb
in
in
or
lock
adc
sti
inc
out
pop
in
test
lods
jl
shrb
scas
lret
push
lret
mov
mov
jb
push
xchg
cmp
cmp
pop
sbb
loopne
jo
insb
dec
mov
ljmp
rorl
es
dec
pop
cmpl
xchg
mov
inc
mov
jmp
jmp
inc
cmp
pop
pushf
jns
sbb
fwait
loop
jb
lret
repz
or
xchg
into
adc
mov
clc
cmp
insl
pushf
data16
inc
test
lea
dec
cld
inc
push
dec
daa
push
scas
xchg
fwait
pop
rolb
pop
pop
shr
jmp
adc
movsb
adc
inc
mull
ljmp
sahf
push
pop
fbstp
pop
call
cmp
mov
xchg
stc
idiv
xor
inc
mov
rcll
inc
push
pop
jp
insb
cmpsb
frstor
inc
mov
adc
loop
les
jo
out
hlt
je
xchg
iret
mov
mov
lds
and
cmp
add
xchg
sub
lret
mov
popa
rcrb
ds
mov
mov
insl
push
pop
fwait
pop
mov
jmp
scas
mov
subb
fnstcw
repnz
or
cmp
jecxz
mov
mov
int3
sub
fs
gs
inc
or
loope
fcmovne
neg
xor
sarl
push
les
sar
adc
adc
xchg
inc
dec
outsl
dec
ja
aas
dec
les
mov
inc
sub
lock
sarb
mov
adc
xchg
mov
clc
pop
pop
xchg
leave
pop
mov
fnstcw
decb
outsl
adc
push
call
dec
aas
dec
mov
xor
push
adc
mov
popa
xor
mov
ret
inc
lods
and
or
dec
out
jmp
sub
leave
decl
inc
fnstcw
out
jo
mov
push
iret
aas
int3
xlat
fcomps
mov
int
add
in
and
mov
xchg
leave
out
sub
fisubrs
cmpsl
test
das
leave
lret
and
mov
cmp
lcall
xchg
mov
jg
aaa
shlb
in
jle
aas
iret
lahf
loop
jmp
in
pusha
scas
jo
jle
out
dec
insb
cmpsb
mov
adc
pop
lcall
mov
inc
adc
outsl
fmull
ds
je
cmpsb
sahf
neg
adc
inc
or
mov
loop
ljmp
psllq
test
pushf
cmpsl
cld
and
pushf
push
push
in
mov
jecxz
jl
mov
cli
addr16
adc
std
mov
cld
dec
jl
and
push
sub
testb
dec
out
add
mov
scas
arpl
out
scas
sub
sbb
je
in
andl
mov
js
imul
es
adc
test
aas
ret
xchg
jo
mov
inc
cmp
jge
pop
mov
popf
fwait
jne
jae
jo
je
jno
jae
jnp
stc
add
arpl
mov
ja
mov
mov
xchg
xchg
jge
hlt
adc
cmpsb
pop
nop
ret
rcrl
loope
out
cmpl
fistl
add
insl
out
in
push
xchg
mov
aas
test
ret
outsb
in
lock
xor
xchg
mov
mov
pop
enter
in
repnz
lods
dec
xchg
xlat
xchg
inc
dec
pop
mov
roll
push
adc
xor
or
out
int
in
lock
or
cmp
out
lock
js
pop
lds
xchg
lock
inc
ds
mov
pop
clc
lods
ret
int
fildll
icebp
pushf
mov
call
push
rcrl
lods
test
std
das
jne
pushf
inc
push
inc
mov
cmp
loope
in
sti
out
lret
stos
imull
lock
lock
mov
cltd
aaa
in
pop
mov
cmpsl
push
testb
movsl
jb
inc
imul
mov
xchg
nop
pop
pop
pop
test
xchg
outsl
cmp
into
iret
ss
iret
xor
sbb
lret
pop
aas
aaa
inc
test
ficoml
xchg
push
xchg
cmp
adc
mov
js
mov
clc
xor
and
lahf
dec
in
jo
pusha
mov
scas
cmp
cmpsl
test
inc
loope
push
or
lds
add
pop
nop
xchg
cmp
and
pop
in
repnz
jb
sbb
das
jl
cwtl
into
outsl
out
fdivs
fists
out
add
add
scas
push
adc
gs
lock
cmp
lea
adc
mov
adc
adc
mov
jmp
adc
lcall
clc
psubb
stos
mov
scas
jge
std
jae
fucomp
adc
and
xchg
rcl
mov
dec
insl
cmpsl
ljmp
test
mov
mov
dec
push
inc
lods
cmpsl
push
pop
test
mov
stc
xchg
cwtl
inc
lods
inc
pop
jo
and
pop
jo
pushf
orl
pusha
je
clc
dec
cmpsb
adcl
call
xchg
lcall
popf
shl
fiaddl
xchg
sub
push
push
out
test
dec
or
mov
sub
lret
lock
mov
push
and
pop
dec
sbb
mov
fs
mov
rorl
xor
cld
je
add
ss
mov
fnstcw
aam
sub
fisttps
or
xor
jno
aas
fsubrs
sahf
loope
ret
test
dec
push
nop
scas
enter
jns
jb
add
sub
push
js
and
cmp
stc
fists
das
jle
dec
repz
xchg
fbld
insb
ret
loop,pn
stc
pop
aad
jle
and
bound
sahf
dec
mov
test
jbe
jmp
shrl
lods
jno
cmp
test
sub
test
xlat
ret
shl
addr16
in
call
dec
push
push
jecxz
ja
cwtl
push
mov
pushf
fiadds
mov
xchg
insb
dec
pop
add
mov
fsubrs
je
ret
lcall
lea
add
adc
push
mov
xor
adc
rcl
xchg
jb
fcoms
xchg
fucomip
sbb
cmp
and
cmp
cmp
cmp
push
mov
xchg
mov
je
lods
inc
iret
adc
scas
xchg
xor
pop
sbbb
push
repnz
jl
xor
sahf
dec
push
in
je
out
adc
cmp
cmp
fs
sti
xchg
dec
add
lock
cltd
push
pop
outsl
stc
cmp
popf
inc
dec
mov
dec
and
push
cltd
aam
mov
and
fisubs
dec
movsl
sub
loopne
jb
daa
sub
xchg
fdivs
rorl
fwait
jno
mov
pop
push
cmpps
dec
or
xchg
je
es
aam
stos
subb
cmovge
mov
stos
xor
mov
stos
or
test
outsb
jle
incl
lahf
call
pop
inc
or
mov
mov
ja
mov
cmc
pop
repnz
int
sub
lock
outsl
lock
ja
out
punpcklbw
dec
pop
or
jae
jl
jl
jns
aam
mov
fwait
je
in
mov
mov
mov
bound
outsl
push
test
mov
in
jb
mov
adc
adc
jae
test
pop
adc
push
adc
add
inc
pop
mov
xchg
sahf
and
stos
adc
mov
mov
inc
das
mov
push
shrl
mov
push
faddl
xchg
sbb
and
dec
repz
mov
pop
mov
jge
gs
mov
mov
das
enter
je
shrl
adc
mov
cwtl
mov
xchg
push
jb
push
andb
cmp
pop
or
test
inc
dec
mov
and
clc
mov
mov
stos
sub
stc
icebp
jbe
pop
js
or
mov
jae
cmp
mov
int3
inc
out
repz
xchg
insb
cmp
stos
jecxz
jae
js
mov
aaa
mov
ss
into
shrl
inc
sbb
pop
cmp
mov
popf
test
sub
aaa
sbb
or
addr16
xor
adc
sbb
adc
cs
js
les
push
repnz
jno
xor
mov
lods
ret
xor
and
or
ret
mov
add
or
jge
jno
sbb
mov
sub
aas
mov
xchg
sub
aaa
leave
insb
repnz
cltd
dec
ds
pop
nop
sbb
bound
hlt
xor
and
pop
lock
jecxz
mov
mov
mov
inc
cmp
sbb
je
sbb
mov
ffreep
iret
out
lock
in
cld
push
loopne
inc
loopne
cmp
sbb
xor
jbe
mov
fucom
jne
orl
popa
mov
test
sbb
icebp
or
xor
dec
inc
pop
push
and
das
sahf
daa
inc
or
fimuls
mov
aaa
shl
push
pushf
repz
adc
inc
xor
and
jp
out
push
pop
xchg
mov
sbb
sti
pop
rcrl
stc
popa
sbbb
cmp
aaa
fimull
xchg
mov
xchg
stc
in
mov
jmp
adc
push
test
psrlw
adc
mov
adc
hlt
bndldx
or
cmpl
mov
jno
enter
add
mov
test
and
shlb
and
adc
pop
xchg
and
mov
rorl
cmp
and
jae
mov
xchg
mov
aaa
sbb
sbb
add
and
fmuls
and
lods
mov
test
pop
loopne
lock
incb
sbb
sub
movb
repnz
push
mov
push
aaa
stos
adc
sbb
sbb
inc
push
hlt
sbb
sar
xchg
aas
jecxz
sbb
xchg
shll
adc
test
or
lock
fcoml
imul
lahf
nop
mov
andb
jnp
aaa
rorl
pop
jae
cmp
ss
in
xor
inc
and
call
push
cld
movsbl
mov
add
mov
inc
jo
jo
sbb
lea
and
repnz
cwtl
fadds
and
and
push
push
adc
sti
mov
add
sbb
xchg
or
mov
out
add
test
vmovntdq
jno
mov
repz
pop
ret
xor
inc
hlt
sbb
push
mov
push
mov
inc
mov
jne
pop
enter
daa
mov
push
scas
xor
cmp
aad
sub
lock
adc
sub
add
enter
jo
nop
cmp
push
les
push
inc
insl
and
or
bound
loope
aaa
rcrb
inc
adc
cwtl
stc
fwait
sar
sar
and
add
sub
leave
jae
sbb
or
or
sub
enter
insb
mov
xor
cmp
inc
cwtl
pop
cmp
dec
faddl
sbb
sbb
jnp
lcall
rorl
or
in
dec
mov
xchg
loop
mov
dec
and
mov
loope
push
add
adc
cmpsl
push
mov
stos
je
ret
test
inc
stc
shll
rorb
ffreep
jne
es
inc
mov
xor
inc
push
pushf
cltd
shl
rcr
push
jo
cld
push
call
repnz
outsb
adc
jecxz
inc
pop
xchg
int3
mov
cmp
xchg
mov
or
aas
orl
cwtl
faddl
test
shr
shll
add
cwtl
jp
mov
pop
inc
xchg
jge
cmpsl
testl
and
push
and
incb
pop
sbb
jle
inc
pop
sub
xchg
hlt
adc
lea
mov
inc
adc
sub
cs
xor
int
push
adc
ds
in
les
in
pusha
push
or
mov
loop
sarb
lds
loopne
add
push
pusha
cmc
es
rolb
adc
xor
sub
inc
push
or
mov
adc
adc
xchg
call
popa
and
insb
popa
mov
cld
sub
push
sub
orb
add
dec
shl
sub
mov
inc
dec
adc
ja
fdivl
adc
dec
enter
or
pop
lds
and
negl
hlt
jle
sub
sbb
add
mov
fimull
pop
clc
or
mov
jnp
inc
inc
adc
cmp
rcll
inc
push
aaa
shl
fimuls
fsts
ret
mov
mov
in
pop
and
cmp
sbb
ds
adc
push
inc
test
sbb
adc
cmpl
loopne
sub
or
mov
pop
jecxz
jg
pop
test
add
add
outsb
loopne
das
in
ds
mov
push
loopne
imul
push
pop
and
inc
xor
test
push
jns
and
xchg
rorb
std
sbb
pop
cmpb
mov
and
mulb
dec
ret
push
mov
das
jecxz
repz
leave
out
pushf
mov
xor
ja
scas
mov
repnz
push
pop
hlt
push
adc
imulb
xchg
xor
add
add
pop
inc
mov
shrb
aad
std
outsl
lock
cmp
add
test
dec
push
das
push
nop
xlat
rcr
paddd
lret
xor
push
mov
test
mov
add
jno
adc
or
cmc
or
add
hlt
and
mov
rcll
incl
les
jl
inc
push
pusha
leave
dec
shlb
scas
test
test
xor
out
pop
dec
shr
inc
or
pop
push
out
xchg
push
lods
mov
cmp
sbb
test
jbe
cmp
iret
jb
filds
loop
add
loop
addl
daa
rcll
hlt
and
test
iret
lds
push
cwtl
and
adc
inc
xchg
xor
sub
icebp
insb
pop
lods
cmp
jl
push
outsl
pop
pushf
xlat
roll
aaa
lds
sbb
daa
js
mov
jg
adc
push
xchg
lahf
subb
mov
push
jnp
add
inc
mov
xorl
subl
push
sbb
lods
sbb
enter
repz
inc
add
inc
dec
fcmovb
loope
add
and
inc
push
or
inc
sub
hlt
jp
mov
sbb
mov
or
ds
inc
outsl
icebp
or
pop
outsl
add
add
iret
aad
rcrl
popf
inc
scas
lock
mov
ret
inc
push
hlt
es
stc
repz
cmp
or
cmpb
adc
fistpl
jp
cmc
push
fdivrs
mov
add
sbb
sahf
repz
popf
fst
push
mov
mov
add
aaa
aam
pop
fmuls
inc
sbb
mov
je
mov
adc
inc
cmp
inc
popf
add
add
test
fidivl
mov
rcl
inc
std
adc
sub
pop
repnz
add
adc
xchg
inc
xchg
inc
xchg
icebp
inc
movsl
lds
pop
cmp
add
jg
popf
xchg
jg
outsl
ret
daa
lahf
rorb
das
add
jp
sub
je
adc
dec
cwtl
mov
cmc
daa
inc
jg
dec
sbb
cli
fiaddl
testb
jb
sub
mov
xor
loop
xlat
and
pop
mov
mov
sti
rcr
andl
cmc
leave
jo
lock
stos
out
sub
sbb
xor
les
add
cwtl
inc
xchg
mov
mov
scas
dec
pop
add
ret
sahf
das
xorl
loopne
pop
mov
sbb
jo
add
ficoms
out
outsb
or
jmp
lret
push
xchg
pop
cld
add
aas
add
cmpsb
shrb
cmpsl
xchg
ret
loopne
inc
lock
lahf
xorb
fcompl
loop
rclb
push
jl
or
adc
inc
inc
push
pop
stc
and
sbbl
scas
cmpsb
rolb
call
js
mov
fucomip
out
jns
pop
or
orl
aas
subb
add
sti
xchg
std
scas
lret
popf
mov
mov
ss
inc
cmpb
pop
push
pusha
sbb
push
rol
rcr
arpl
call
lods
fadds
ljmp
enter
inc
xor
orl
mov
sarb
sbb
mov
dec
std
pop
fnstsw
out
jno
push
mov
mov
test
psrad
cwtl
popf
add
incb
sub
or
or
adc
pop
add
cli
push
loope
inc
xchg
pop
call
out
test
xchg
pushf
cmp
cmpsl
loop
mov
dec
loopne
add
add
lret
jp
outsb
or
jmp
call
mov
fbld
ljmp
out
sbb
push
cld
or
add
cwtl
aas
out
add
inc
shrb
mov
sahf
clc
inc
inc
xor
mov
mov
inc
dec
add
sub
rclb
data16
imul
mov
dec
sub
add
rcll
mov
or
sarb
inc
pop
cmp
cmp
sbb
or
popa
lds
fs
repz
xor
aas
cs
pop
cmp
into
jbe
jge
and
int
ret
outsb
lock
jmp
js
pop
fsubrs
adc
jne
push
mov
xadd
cmpsb
sub
cs
sahf
add
ss
lods
add
stos
xchg
popl
rcrl
fdiv
jg
dec
xor
pop
mov
cmp
cs
repz
pop
jle
jge
push
mov
aas
testb
add
dec
or
das
add
push
sarb
fcomip
rolb
lahf
hlt
mov
pop
nop
shrl
pop
push
inc
sbb
shrl
add
mov
push
mov
out
adcl
ficoml
stc
xor
jecxz
rcr
loopne,pt
and
sub
mov
inc
pushf
add
imul
call
jae
mov
pop
push
js
sbb
push
int3
popa
xor
andb
or
add
popl
fsts
lock
rclb
int3
in
jg
fldl
push
popa
add
cmp
cmp
int3
mov
mov
add
nop
sub
mov
movb
loopne
cmc
push
imul
cld
das
shlb
js
insl
fsubs
in
std
pop
loopne
or
pushf
push
imul
dec
add
andb
and
data16
or
or
std
outsl
into
pop
or
fisubrs
stos
movsl
or
inc
push
cmp
and
cmpsl
add
addr16
sar
ret
lahf
inc
ret
xor
out
pop
add
pop
push
cmp
cmpb
add
xor
movsb
stc
pushl
push
sbb
ds
push
push
sub
dec
js
xchg
xchg
or
sarl
rorb
outsb
and
in
push
xchg
scas
jle
repz
les
cmpsb
mov
das
shl
lock
xor
add
out
pop
js
cmpsl
into
fiadds
shlb
cli
or
inc
jge
ja
rcrb
ja
and
lock
xor
subl
fwait
mov
jnp
rclb
enter
pop
or
xchg
inc
outsb
inc
dec
add
ret
sbb
mov
pop
test
repnz
sti
cmc
dec
dec
and
jo
xchg
aaa
subb
ret
loope
jo
add
faddl
adcb
hlt
pop
and
cmpsl
add
mov
push
xor
add
das
sar
adc
sub
mov
sbbb
jecxz
call
movsb
add
sbb
test
pop
loope
push
jl
push
cmp
jnp
adc
in
das
sub
popa
cmpsb
ds
sub
out
cmp
dec
and
stos
and
push
sti
push
cld
adc
or
clc
adc
fiadds
cltd
in
decl
out
add
dec
sbb
and
leave
cmpsb
stc
pushf
jbe
ds
jno
fadd
and
shll
mov
fistpl
test
call
mov
xor
cs
mov
iret
fistl
cs
mov
mov
out
int3
fwait
aaa
outsl
mov
or
cli
popl
mov
nop
jno
inc
popa
arpl
sub
add
fs
or
lret
rolb
dec
push
iret
jns
mov
inc
jae
push
or
mov
xor
adc
mov
push
jmp
iret
arpl
outsl
shlb
lds
sub
jle
divps
jno
mov
pinsrw
add
mov
or
mov
mov
cmp
push
out
cmpb
enter
cli
jge
dec
call
xor
aas
inc
scas
scas
rolb
test
ret
lock
sarl
mov
or
push
cli
call
mov
orl
jnp
sbb
add
jle
movsl
mov
pop
pop
xchg
add
dec
nop
cli
dec
mov
adc
outsb
inc
das
mov
cmp
sub
pushw
push
pop
arpl
or
decl
mov
xor
mov
jle
xor
pushf
inc
mov
mov
ds
fistl
std
adc
jl
ds
push
pop
sar
mov
jbe
adc
fisttpll
pushf
sahf
cmpl
pop
cs
lock
jnp
ja
clc
and
and
filds
mov
rorl
repnz
mov
call
aaa
shll
fcmove
mov
daa
loopne
pop
call
jle
cld
testl
mov
fidivl
inc
iret
gs
dec
loope
filds
jnp
pop
xor
fcoml
sbb
ja
sarb
call
or
sub
data16
aam
sub
ret
ja
test
andb
repz
mov
movsb
rorl
test
cs
jmp
cmp
xchg
sbb
filds
ja
nop
in
adc
add
lods
or
jnp
mov
bound
ret
pusha
pop
pushf
push
testl
lahf
mov
rcll
icebp
inc
mov
fwait
xorb
adc
mov
imul
inc
jno
add
into
ja
popf
mov
and
mov
add
mov
lcall
inc
insl
and
and
aad
xchg
push
fidivrl
lock
xchg
push
repnz
or
jle
cmp
cld
jge
lcall
inc
cld
sti
pop
arpl
jo
push
xchg
mov
into
mov
mov
mov
add
jl
pusha
ret
shll
jno
dec
jno
test
dec
sub
inc
add
xchg
push
es
dec
gs
add
into
gs
sub
dec
and
adc
ds
inc
inc
inc
inc
dec
and
add
adc
enter
sub
adc
adc
sub
movsl
jo
xor
pop
and
and
ss
ds
dec
push
push
push
mov
clc
ret
sbb
lea
xchg
adcb
adc
adc
mov
in
dec
fs
adc
enter
and
cld
push
enter
and
rcl
adc
pushf
cwtl
xchg
sbb
lahf
mov
dec
dec
mov
pop
mov
mov
jae
xchg
ror
push
push
pop
fstl
pusha
data16
push
out
xchg
xchg
pop
movq
xor
mov
stos
cmpsb
scas
es
data16
das
mov
addr16
xchg
insb
outsl
in
sbb
rcl
pop
push
push
push
xchg
pop
mov
imul
sti
stos
arpl
cmp
mov
xchg
push
push
addr16
fcomp
insb
fnsave
mov
jo
fsubr
adc
rcrl
xchg
popf
popf
fnstcw
add
cmpsl
mov
mov
imul
mov
and
xchg
push
mov
shll
lods
sbbl
jno
jns
sbb
fistl
fidivrl
mov
aas
xorl
pop
mov
jne
cwtl
mov
int
adc
push
fcmovnbe
shll
xchg
jp
xor
fxch
mov
xchg
mov
fdivrl
mov
push
in
pop
pop
sub
repz
push
data16
jl
aad
mov
pop
inc
sarb
push
aas
push
outsb
ja
test
and
pop
fistpl
lock
sub
scas
test
mov
lcall
mov
lods
notb
int
gs
lahf
shlb
in
stc
add
mov
mov
les
jae
idivb
enter
jge
push
movsl
add
fwait
sub
out
mov
xchg
data16
idivl
dec
std
pop
or
mov
aaa
lods
mov
push
lahf
push
aad
pop
pop
adc
jbe
mov
pop
xchg
pop
xor
fcompl
pop
nop
cltd
loopne
cmc
adc
imul
in
ja
mov
mov
push
test
outsb
fstpt
sub
scas
xchg
mov
xchg
pop
rcr
ficomps
xchg
adc
mov
mov
les
lret
fstpl
fcmovu
push
pop
pop
pushf
xchg
shlb
inc
pop
push
rcrl
sbb
jmp
lds
push
push
push
push
cwtl
ljmp
and
mov
scas
cmpsb
cmp
mov
dec
testl
jmp
stos
dec
push
fcompl
out
adc
push
aam
cmp
sbb
mov
mov
scas
cmc
push
xchg
fsub
shrb
sahf
paddusw
aam
movsl
cs
mov
pop
cmp
je
xchg
out
push
stos
or
call
test
lcall
push
mov
mov
pop
push
xchg
and
js
push
jns
popf
mov
jo
jo
jecxz
sbb
pop
push
push
pushf
movsl
adc
clc
cli
jae
push
or
les
popf
mov
xchg
repnz
addb
jne
jno
dec
inc
bound
mov
sub
ds
adc
sub
dec
push
dec
fstps
sti
jmp
lcall
int3
or
dec
shlb
aam
mov
icebp
push
xchg
mov
mov
dec
push
mov
sub
jecxz,pn
push
xorl
lret
dec
xchg
mov
xorb
outsb
dec
push
push
inc
dec
add
cwtl
adc
adc
dec
dec
dec
push
inc
mov
mov
jb
push
adc
arpl
and
adc
and
inc
ret
ret
imul
dec
cmp
cwtl
pop
int3
loop
inc
cmpsl
dec
dec
mov
cmpsl
movsl
addr16
xor
inc
enter
add
bound
aam
mov
adc
fs
jno
bound
lea
test
adc
add
sub
push
sub
cmp
xor
jb
push
xorb
ss
bound
fmull
and
jl
xchg
setne
xchg
push
push
xchg
xchg
adc
jecxz
jno
mov
lock
ss
xchg
xchg
addl
dec
mov
sbb
push
vshufps
inc
jmp
dec
push
outsb
dec
push
push
pop
adc
sbb
add
and
push
adc
inc
xchg
stos
adc
mov
push
push
and
ss
and
mov
push
pop
pop
jbe
xorb
xor
pop
add
punpckldq
inc
test
test
adc
adc
mov
push
test
lock
inc
sbb
sbb
mov
adcb
sub
sbb
sbb
test
sbb
icebp
cmp
sub
push
sbb
mov
sbb
scas
add
mov
ret
les
mov
test
mov
test
and
js
adc
dec
dec
add
adc
and
rorb
xchg
call
mov
cs
or
inc
adcl
shrl
nop
sub
jno
dec
aam
push
push
add
dec
adc
xor
and
push
inc
add
ss
fwait
loopne
jge
mov
ret
imul
mov
loope
fnsetpm(287
mov
and
subb
rorl
pop
jns
mov
push
sbbb
in
test
push
sub
mov
sbb
adc
or
aaa
es
mov
pop
xor
dec
leave
adc
in
cmpsb
push
into
dec
stos
xchg
sbb
and
mov
push
insl
mov
push
xor
ss
xchg
or
inc
scas
jmp
mov
cmp
xchg
leave
je
push
cmp
scas
pop
or
and
mov
and
jb
stc
mov
outsb
gs
iret
jl
dec
jg
lret
addr16
jae
mov
cltd
scas
mov
xchg
rorl
aad
sub
xchg
mov
int3
out
repz
or
fldcw
outsb
xor
inc
cmpsl
push
cwtl
push
inc
test
enter
test
push
je
mov
data16
in
xchg
mov
mov
jmp
iret
jg
sarb
iret
cltd
adc
test
in
into
sub
int3
lds
fcompl
sub
push
lahf
lcall
insb
into
cmp
pop
fs
fsubrl
jl
fcompl
addr16
sub
cmpsb
cmp
cmpsl
xchg
xchg
int
repz
cmp
lods
nop
int
addr16
and
rorl
mov
dec
adc
pop
adc
cmpsb
insb
xor
mov
jae
jmp
xor
or
int
rcrl
dec
enter
cwtl
insl
gs
pop
dec
xchg
mov
lods
add
jb
cmpsl
and
xchg
sub
dec
fwait
jns
or
sahf
add
inc
scas
cmp
aam
rorb
clc
lret
pop
lret
push
xchg
pop
ret
xchg
lahf
fildl
lret
add
jmp
mov
mov
or
xchg
sub
in
les
mov
adcl
xchg
enter
push
push
add
adc
fs
mov
push
mov
or
mov
cmp
push
mov
mov
dec
push
push
nop
and
push
dec
mov
jmp
scas
push
rcrb
cmp
mull
cltd
pushf
enter
mov
mov
nop
mov
and
stos
hlt
mov
mov
iret
aas
and
sub
cmp
or
in
mov
int3
int3
int3
mov
in
test
cmpsl
lahf
mov
cltd
xchg
lods
dec
mov
and
push
outsb
jle
push
inc
jb
jb
aam
roll
push
add
and
out
add
mov
jle
jno
lcallw
dec
in
clc
sti
shr
sbb
pushf
mov
and
int
or
inc
les
sub
in
push
adc
push
data16
dec
and
nop
or
push
gs
and
lahf
sub
jbe
pusha
jnp
sub
dec
dec
mov
movsb
bound
pop
fldl
adc
aad
aam
jae
gs
rcr
adc
cmpl
aad
mov
cmp
adc
icebp
div
mulb
sbb
or
jns
rcll
shrl
neg
mov
jns
and
xlat
aad
scas
pop
or
xchg
and
mov
push
out
lds
rorl
fildll
xchg
fnstcw
stos
and
lcall
das
jg
sub
mov
inc
dec
push
data16
dec
popa
lret
test
sbb
or
sub
pop
in
fsub
sbb
fst
aam
fldt
adc
pop
ds
popa
mov
call
xchg
mov
scas
jle
outsb
pop
jnp
filds
mov
dec
sub
xor
jb
aad
jae
in
cltd
or
negb
pop
out
jb
adc
push
aaa
mov
cmc
ja
push
adc
adc
dec
or
xlat
xor
jne
pop
out
mov
mov
fisubs
gs
dec
ja
jo
dec
inc
jno
inc
mov
inc
cmpsb
stos
xchg
outsb
lea
jns
fcmove
sahf
insb
mov
ss
in
icebp
xchg
test
xchg
jnp
aam
and
es
cli
xorb
sub
mov
xlat
in
shl
push
sahf
popa
jmp
xchg
pop
stos
lret
stos
push
xchg
idivl
loop
cmpsl
mulb
jp
int
insl
mov
mov
das
mov
nop
push
fnsave
push
inc
jge
inc
inc
ljmp
jecxz
jae
cs
adc
int
out
mov
push
sti
mov
xor
pop
mov
aas
in
pop
je
lret
addr16
bound
cltd
cmc
cmp
pop
xchg
mov
addr16
std
jns
outsb
mov
sti
outsl
sbb
adc
pop
fsub
das
insb
fcmovb
dec
outsb
sbb
ljmp
xchg
mov
movsl
idivl
mov
inc
scas
mov
pop
cmpsb
stc
repnz
sahf
xor
sbb
fsubs
roll
cmp
mov
std
testb
loop
push
jg
push
inc
lret
ss
loope
mov
ds
fidivrl
insl
rol
xchg
inc
imul
sub
mov
in
jbe
dec
cmc
shrb
ja
jne
sti
sub
clc
push
and
addr16
repz
scas
jl
loope
insl
icebp
push
das
cs
jmp
sbb
fdivr
or
lret
aas
repnz
ficomps
push
pop
jecxz
mov
mov
pop
imul
loop
stc
mov
lret
add
insb
and
imul
mov
mov
lods
mov
mov
cmp
cmc
add
inc
outsl
inc
rclb
jbe
insb
cmp
sbb
jne
aas
insl
push
adc
jae
fdivr
test
and
pop
pop
mov
dec
imul
addb
ficomps
jb
mov
scas
call
das
sahf
ds
fistps
or
mov
mov
test
cmp
jle
pop
push
fdivl
in
xlat
dec
hlt
movzbl
cli
inc
scas
mov
push
pushf
jp
lea
imul
xchg
jg
hlt
enter
xchg
pop
mov
cmc
test
jecxz
sub
test
mov
xchg
mov
jge
ror
mov
xchg
pop
fcmovbe
sbb
add
cmp
pop
mov
mov
mov
notb
jle,pt
clc
enter
scas
rorl
lods
cmpsl
push
or
mov
in
cmc
in
push
dec
hlt
dec
push
pop
push
call
xchg
arpl
jbe
mov
xlat
mov
mov
fildll
xchg
dec
imul
repz
sbb
ss
loopne
jbe
xor
rcrb
pop
cmp
pop
xchg
ret
fbstp
mov
or
cmp
bsr
int3
icebp
into
stos
je
push
mov
push
inc
out
cmc
lea
js
in
into
hlt
pop
fwait
pop
jge
clc
loope
popf
adcl
sti
mov
fs
mov
in
hlt
mov
lods
out
cmp
xchg
ret
pop
xchg
popf
mov
pop
xchg
mov
mov
jnp
dec
xchg
mov
lea
int3
mov
lea
icebp
lock
fildl
cmp
or
dec
addr16
sub
inc
mov
hlt
cld
xchg
shl
outsb
mov
mov
leave
dec
into
sub
inc
lret
adc
mov
jbe
sub
pop
inc
pop
jmp
rcll
into
mov
mov
clc
les
sbb
pop
xchg
cmp
ficompl
mov
inc
cmpsl
das
mov
sub
fisubl
shlb
cmp
xchg
lret
cmp
into
push
mov
add
cmp
hlt
sarl
fistl
and
xlat
rcrl
lods
in
in
mov
jno
push
and
mov
cmp
cld
icebp
mov
xchg
outsl
jb
or
out
call
and
inc
xchg
stos
mov
daa
nopl
fsubp
mov
icebp
gs
add
fstp
rclb
iret
cmpsl
cmp
fndisi(8087
lds
jno
int3
sar
into
ret
sbb
adc
mov
mov
sub
ror
rol
dec
pushf
pop
fidivrs
jp
jl
push
pop
stos
lret
out
iret
outsb
fimuls
es
mov
xor
sti
mov
aas
xor
mov
sbb
cmp
and
mov
stos
lods
testb
cmpsb
push
mov
ss
pop
lds
or
xchg
pop
shll
hlt
jmp
loop
dec
push
stos
mov
into
xchg
sub
ss
out
add
divb
js
pushf
fcmovu
mov
xchg
push
out
fsubl
loop
jmp
mov
cmc
cmc
push
inc
andb
sbb
jne
in
xchg
mulb
adc
or
push
sub
cltd
and
daa
movb
xchg
add
fldenv
fldenv
xchg
pop
push
push
push
cmpsl
into
mov
in
fcompl
stc
mov
repnz
inc
popl
sub
jne
mov
int
sbb
sub
les
cltd
sahf
sti
cmp
call
mov
loop
sti
sbb
scas
fsubr
mov
adc
push
push
sahf
fwait
adc
div
je
push
imul
fnsave
ficoml
adc
sub
sub
jns
rclb
data16
call
cmpsl
and
ret
dec
imul
mov
pop
pop
mov
pop
ficomps
pop
fst
aas
jb
mov
pop
adc
ror
dec
out
in
rol
cld
rcl
mov
cld
xchg
push
mov
stos
mov
insb
stos
push
cli
mov
mov
xchg
push
pop
pop
push
push
lcall
repnz
out
hlt
push
mov
addr16
sub
aad
stos
and
repnz
inc
mov
aaa
fstpl
jmp
lods
push
icebp
cmp
cmp
jp
addr16
push
pop
jno
mov
xor
iret
aaa
push
movsb
enter
cmp
cmp
pop
sbb
call
int
pushf
mov
lds
inc
pusha
or
fildl
lret
scas
jmp
fcoms
in
out
imul
pop
sbb
nop
jle
xchg
in
loop
js
dec
aas
push
aas
sub
mov
jo
inc
mov
xlat
jge
cmpsb
or
add
popa
jno
push
pop
jp
cmp
gs
int
pop
inc
xchg
stos
push
sbbl
insl
aaa
insb
mov
mov
stc
inc
inc
xchg
adc
or
repnz
xchg
into
roll
arpl
mov
cmp
lds
shlb
setae
xchg
addr16
mov
nopl
cmp
icebp
neg
mov
jle
mov
loop
loop
mov
adcb
imul
loope
cmpsb
and
push
mov
xchg
adc
push
nop
popf
and
in
cld
pop
cwtl
int3
stos
scas
mov
ret
cmp
insl
mov
in
add
popf
xchg
lahf
pop
sub
js
add
sub
ljmp
fcompp
sub
and
xchg
popf
pop
pop
nop
lahf
mov
cld
add
loope
mov
outsl
insl
xchg
stos
test
add
xor
flds
pop
in
addl
jb
sbb
sti
inc
mov
je
push
mov
in
mulb
xor
or
jae
jecxz
test
mov
jl
dec
jae
loopne
push
dec
push
mov
mov
js
or
xor
repz
xchg
push
ret
jbe
sub
mov
pusha
movsb
mov
cltd
iret
hlt
mov
outsl
mov
lahf
cmpsl
mov
scas
mov
and
push
or
or
loop
push
cmp
or
mov
jmp
inc
dec
cmp
and
sub
outsl
xchg
mov
out
in
xchg
sub
or
mov
idiv
imul
push
in
out
hlt
jge
popf
aad
popa
add
dec
scas
lcall
and
fs
add
nop
adc
jle
jae
rol
lock
push
outsl
movsb
mov
cltd
test
fldcw
jge
iret
inc
ja
mov
jp
mov
mov
enter
mov
loop
cmp
lods
inc
xchg
cmp
mov
scas
movsl
xor
fcom
fnstsw
in
cmp
mov
xorb
jp
jp
adc
enter
stos
insl
ljmp
stc
shll
pop
insb
ja
cmc
loope
daa
andb
int3
xchg
sbb
pop
add
push
push
out
ss
in
out
test
data16
mov
jbe
pop
adc
pop
cmpsb
movb
gs
xlat
mov
hlt
divl
xchg
cmpsb
lock
cmp
sub
pop
fdivr
inc
adc
flds
movsl
and
add
fmuls
pop
sti
lcall
push
push
fistpl
icebp
sbb
push
les
imul
call
data16
insb
mov
jb
pusha
mov
pop
das
sub
int
push
inc
xchg
pop
rclb
outsl
mov
cmp
cmpb
ds
jo
xchg
sub
mov
addl
lock
arpl
pcmpeqd
xchg
and
cld
mov
mov
cmpsb
push
pop
push
xchg
xchg
push
das
or
bound
push
or
pop
jnp
fwait
sub
in
je
sti
lods
testb
add
push
stc
and
add
enter
pop
ljmp
xchg
je
pop
arpl
std
mov
xorb
int3
inc
movsb
mov
mov
lods
outsl
out
test
loope
lret
shlb
push
lock
pop
cmp
nop
sub
mov
jbe
xchg
in
pop
ds
push
push
push
dec
jnp
and
fs
jb
adc
js
insb
push
inc
pop
push
addr16
inc
inc
inc
cwtl
idivl
sbb
nop
xchg
pop
pop
push
cwtl
xchg
movsb
or
popl
sbb
leave
jl
mov
pop
movq
lods
and
and
inc
inc
add
jb
cmc
pop
cmp
cmp
pop
dec
pop
insl
ja
adc
jmp
adc
cs
cs
clc
jnp
fildll
sbb
movsb
popw
inc
rorb
mov
je
pop
dec
push
push
addr16
arpl
sub
jmp
arpl
cmp
scas
movsb
mov
sub
mov
or
dec
stos
sbb
push
jbe
xchg
and
cwtl
pop
outsl
fucomip
dec
clc
and
xor
add
arpl
imul
and
xlat
jno
sbb
pushf
add
dec
cs
add
xor
jge
pop
outsl
inc
pop
push
and
lret
popa
xlat
jle
pop
push
inc
inc
pop
xor
sub
inc
and
les
aam
movsl
sbb
out
fstl
xor
shr
or
repz
ret
stc
inc
add
gs
pop
cmp
jmp
xchg
mov
or
leave
jb
xor
aas
cmp
scas
mov
movsl
sub
call
jle
push
call
xchg
mov
fdiv
add
pop
sub
pushf
scas
outsb
call
into
mov
cmp
fsubr
inc
push
cltd
mov
lret
mov
jo
sarl
into
out
into
es
mov
mov
mov
mov
into
cs
orb
mov
subl
pop
sbb
arpl
cmp
les
and
mov
push
rorb
pop
jnp
stos
jb
add
cs
out
mov
orb
and
pop
push
aaa
and
and
pop
stos
xor
add
dec
pop
sub
mov
mov
inc
xor
cwtl
pop
sbbl
push
ja
inc
pop
mov
rcl
stos
xchg
mov
sub
stos
test
and
data16
and
call
mov
mov
cmp
les
mov
fsubp
add
dec
adc
or
repnz
das
xor
stos
test
mov
pusha
jnp
xchg
xchg
iret
fsubl
outsb
mov
push
or
and
movb
adc
mov
mov
insb
mov
jnp
xchg
jno
popa
cld
test
sub
cwtl
lret
or
ds
or
sarb
pop
sbb
add
mov
mov
xchg
gs
and
mov
sub
leave
xchg
lock
pushf
sub
mov
xchg
xchg
push
out
push
mov
pop
cs
adc
outsl
addr16
push
and
xlat
leave
ret
roll
xor
mov
sub
sub
stos
lret
std
popf
lods
lods
insl
mov
inc
mov
mov
jb
push
test
stc
mov
sbb
addr16
jne
test
mov
cmp
or
adc
jb
stos
pop
jp
sahf
pushf
push
outsb
dec
jo
mov
sub
cs
iret
xchg
sub
out
in
cmp
ljmp
push
add
nop
lods
mov
sub
mov
mov
sub
and
arpl
sti
jl
fs
xor
addl
jae
jmp
cmp
push
pop
and
push
mov
fbstp
and
inc
test
jmp
testb
mov
in
insb
in
mov
mov
fs
adc
daa
sti
repnz
xchg
push
and
rcr
ficompl
xchg
xchg
inc
push
test
add
jle
inc
subb
lods
fsubrl
push
roll
pop
jmp
shlb
dec
inc
out
sub
jo
xchg
inc
add
mov
rcr
pop
pop
or
lahf
out
inc
mov
roll
adc
movsw
sub
loope
xchg
pop
lcall
inc
inc
push
outsb
jl
lock
and
sub
push
and
inc
mov
jle
arpl
jge
mov
jbe
cmp
push
call
cmp
xor
add
jg
dec
pop
jnp
mov
out
mov
movsl
sub
pop
sub
mov
sbb
sub
imul
insl
push
mov
or
dec
xor
test
shlb
or
sbb
xcrypt-ctr
cmpsl
sbb
popa
cmp
cmpsb
in
addb
dec
pop
je
pop
sbb
dec
dec
lret
sub
push
lds
in
jno
faddl
enter
arpl
sub
add
sub
dec
mov
jp
cmp
add
scas
mov
jle
pop
and
or
or
in
aad
aaa
inc
es
and
fucomip
mov
rcll
push
nop
xchg
mov
inc
andl
dec
adc
xchg
sub
pop
push
insb
mov
cmp
shlb
or
xor
mov
rorb
jns
push
pop
pop
push
push
jge
dec
mov
ror
xchg
mov
xor
xor
mov
shl
sub
lcall
jle
popa
push
add
adc
or
inc
xlat
mov
gs
push
aaa
xor
push
adc
imul
mov
cmpl
bound
mov
inc
dec
jp
lods
add
sbb
push
cmpsb
in
aad
inc
popf
mov
mov
js
pop
pop
popa
and
push
adc
sub
add
mov
les
sti
jnp,pn
pop
jge
mov
xchg
lea
xchg
and
dec
jno
xor
jne
lods
mov
mov
dec
add
fildl
jp
add
shrl
adc
fldenv
aad
sbb
ss
jbe
outsb
sub
cmp
scas
test
xchg
sub
dec
pop
cmp
pop
adc
mov
and
shl
rclb
xchg
or
or
xchg
xchg
push
push
mov
mov
and
mov
ret
pop
jns
jno
cmp
inc
subl
pop
rcr
rcrb
xchg
and
stc
mov
jbe
cmc
or
test
or
or
pop
mov
or
sub
xchg
test
xor
xchg
mov
dec
add
and
lods
mov
cmp
sbb
add
lock
push
mov
cmp
and
xchg
aad
aad
adc
loop
adc
lods
xchg
lcall
fcmovne
ror
int3
int3
lret
sub
daa
pop
push
icebp
xor
add
mov
mov
in
jmp
fistpl
cmp
mov
stos
ret
adc
jns
sti
mov
sub
pop
xchg
adc
lock
into
fldenv
inc
mov
insl
test
js
pusha
inc
inc
dec
push
dec
inc
xchg
mov
in
mov
jle
pop
daa
sub
outsb
gs
jp
movsb
nop
sbb
pop
inc
movsl
in
rorl
out
mov
fisubs
jnp
pop
cltd
pop
pop
roll
pop
lock
xorb
jl
jbe
inc
jle
mov
cmp
mov
mov
xor
loop
subl
xchg
xchg
popf
mov
mull
pop
mov
mov
mov
mov
lcall
mov
adc
sub
xor
dec
sbb
movsb
jnp
jp
add
push
scas
cs
xchg
adc
adc
lahf
cwtl
pushf
xchg
adc
mov
push
mov
mov
dec
int3
xorb
movsb
sub
jne
call
sub
pop
inc
inc
adcb
movsb
nop
pop
les
cmp
call
xor
dec
dec
inc
popa
add
popa
inc
xchg
push
adc
pop
cmpsl
mov
js
mov
inc
mov
cmp
pop
sbb
icebp
adc
ret
ret
enter
xor
add
popa
dec
mov
mov
adc
sbb
sub
movsb
mov
rcrb
pop
test
sbb
mov
sub
xchg
push
push
push
push
xchg
adc
xchg
call
fsubrs
adc
test
js
push
mov
and
dec
dec
dec
dec
dec
mov
xchg
stc
add
push
xchg
adc
push
nop
fildl
xor
popf
sbb
lods
push
sbb
stos
jns
sub
xor
sbb
cwtl
jmp
popf
sub
bound
sbb
movsl
gs
inc
mov
jge
aas
and
outsb
mov
xor
notb
sti
sbb
pushf
jns
daa
mov
arpl
sub
testl
insl
jns
lret
mov
mov
xor
add
cmpsb
push
in
addr16
mov
mov
sbb
xlat
ret
mov
scas
frstor
test
adc
inc
adc
jne
roll
test
ret
add
xchg
mov
dec
and
loope
stos
xor
loope
jne
flds
xlat
add
cs
ret
ret
sbb
add
arpl
cmpsb
sub
rcrb
sbb
push
mov
dec
or
jg
ret
pop
jg
ret
lods
aas
vrcpps
dec
pusha
into
bound
push
mov
fidivl
mov
adc
fildl
leave
xchg
ljmp
push
out
jmp
das
mov
sti
shl
inc
out
pop
outsb
hlt
fadd
out
icebp
ret
into
adc
xor
sbb
sub
cmp
mov
dec
fistpll
fmuls
push
or
ja
sbb
bound
push
xor
test
popa
add
cmp
test
dec
push
push
ds
sub
inc
sbb
cmc
cli
adc
rcrl
int3
pusha
pop
decb
mov
adc
push
mov
rorl
mov
sarb
out
mov
loop
stos
inc
int3
pop
xor
cmc
insl
pop
scas
adc
mov
sub
jno
add
test
fcmovnbe
andb
fildl
jae
mov
daa
iret
pop
call
out
enter
mov
btcl
test
dec
jle
in
stos
jle
xchg
shrl
jae
sti
lret
outsl
fwait
pop
mov
bound
push
push
aas
test
dec
je
lock
testl
loope
mov
adc
aas
inc
in
scas
push
jbe
sarl
pop
jecxz
aaa
into
je
mov
push
icebp
icebp
scas
pop
movq
std
std
test
lods
jge
ret
cmp
clc
enter
adc
fs
sbb
pop
cs
ljmp
xor
iret
jl
js
in
pop
mov
jmp
pusha
lock
in
xchg
mov
mov
das
sbb
cli
out
sti
stc
jg
in
mov
push
mov
fnstcw
cmc
push
jne
int
dec
pop
mov
js
js
adc
mov
add
cs
add
stos
sbb
insl
sti
jo
mov
dec
pushl
mov
mov
inc
xchg
sbb
mov
jne
xchg
loop
cld
into
jge
push
cmp
rcll
mov
push
push
mov
or
sub
mov
bnd
jp
hlt
ja
sbb
cmpsb
stos
mov
pushf
loope
xchg
jmp
lahf
mov
aad
pop
sti
dec
out
xchg
test
mov
jno
ja
shrl
aaa
scas
jle
push
pop
call
jae
loopne
test
mov
pop
ljmp
mov
lahf
insb
sti
mov
js
fisubrl
aas
push
xor
xchg
cmpsl
jg
imul
fs
sbb
cmc
out
imull
cld
jb
jae
lret
mov
les
frstor
push
andnps
mov
mov
in
adc
dec
dec
push
mov
hlt
imulb
lahf
or
test
iret
mov
clc
movsb
ja
call
outsl
int3
cwtl
stos
stos
ret
or
push
push
shll
inc
inc
jnp
repz
ret
aaa
adc
popa
jp
push
int3
aas
mov
ss
ds
mov
hlt
lret
push
xchg
clc
mov
sbb
out
xor
sub
xchg
mov
popl
aaa
add
mov
mov
insb
repz
out
inc
inc
cmp
xchg
jnp
fisubrs
inc
jg
pop
mov
loopne
pop
pop
and
mov
int3
cmp
lods
jns
mov
andl
shll
ret
xchg
hlt
xor
in
test
mov
fidivl
and
cli
mov
cmp
mov
in
mov
jns
jnp
mov
pop
fwait
rclb
out
mov
mov
test
cli
add
jge
lret
xchg
test
and
sub
cwtl
push
enter
ret
in
int3
push
es
sbb
mov
stc
xchg
negb
shl
or
das
pop
add
je
sbb
add
scas
test
xchg
out
jp
js
adc
das
or
iret
aad
dec
fidivs
xor
rorb
cmp
fisubrs
xor
ja
shr
fwait
leave
cmc
xor
push
push
rcrb
addr16
mov
or
mov
sub
scas
mov
mov
movsl
cmc
stos
xlat
fldt
das
pop
insl
mov
jge
fndisi(8087
bound
jp
fidivl
mov
pop
sub
xor
sub
cwtl
mov
jle
leave
int3
pushf
cmp
mov
jmp
shll
push
and
pop
aam
stc
lcall
jae
pop
cmp
sbb
or
jle
push
xchg
and
rorl
js
push
mov
loope
pop
jecxz
lock
or
mov
fidivl
and
ret
adc
in
sbb
adc
stc
mov
int3
sub
jo
sub
xchg
inc
xor
into
in
test
leave
pop
mov
or
add
mov
sbb
frstor
jle
ljmp
sbb
stc
insl
rclb
js
push
and
rclb
or
and
dec
sbb
fldt
push
bound
and
xor
and
pop
xchg
mov
iret
in
mov
dec
inc
push
lahf
repz
or
divb
adc
fldt
cltd
mov
pusha
sahf
and
in
in
cmp
ljmp
adc
cwtl
les
rorl
test
jbe
das
subl
jns
addr16
push
mov
cli
cmp
and
pop
pusha
fs
faddl
dec
push
jmp
pop
dec
mov
add
mov
lea
test
cwtl
push
shr
add
out
fs
dec
filds
push
shl
add
push
enter
push
mov
or
or
das
imul
lret
xor
cltd
ret
repnz
and
mov
lock
pop
mov
push
imul
adc
pop
fs
sub
sbb
sub
cld
xor
add
xor
aaa
mov
push
jge
orb
push
jl
adc
stos
push
adc
imul
adc
enter
xchg
adcb
push
add
inc
pop
dec
or
and
mov
mov
or
adc
mov
push
cmp
pop
add
popa
jbe
scas
and
in
nop
out
mov
xor
pop
shll
nop
je
inc
outsl
mov
or
dec
push
jno
inc
ss
out
push
xor
push
jae
cltd
lds
fwait
out
xor
notl
mov
cmp
fwait
cmp
pop
loope
or
idivl
fstp
inc
mov
stos
les
fisubrl
lret
mov
mov
add
std
jecxz
pushw
xor
ret
or
ja
fadds
je
cmpsb
sub
ret
pop
filds
je
mov
outsl
rclb
jge
jo
out
mov
fistpll
hlt
xor
jmp
fisubl
in
fisubl
cmpsb
cwtl
mov
punpcklbw
ror
jmp
add
adc
add
addb
push
adc
xor
push
pop
ret
sbb
inc
orb
jbe
xchg
cs
mov
test
pop
ret
js
sbb
adc
in
sub
or
popa
int3
pop
xor
sbb
rolb
push
repz
test
push
mov
addr16
ljmp
xchg
dec
fwait
add
popf
out
adc
jp
pop
sti
jae
loopne
out
fstpt
cmp
jns
add
or
sub
icebp
popf
sub
lods
jmp
les
sbb
xlat
mov
out
lods
insl
pop
inc
mov
lret
fdiv
pop
fs
xor
cmp
adcl
leave
cmc
dec
xchg
out
inc
lods
mov
cmc
mov
xchg
hlt
jg
push
cli
fs
sbb
fisttps
incb
fwait
pop
push
jg
repz
enter
mov
stos
pushl
xlat
aad
shrb
dec
imul
pushf
ljmp
in
pop
out
ljmp
aas
pop
or
cmp
jle
mov
jo
mov
cld
xchg
outsb
cmc
push
mov
arpl
jmp
jecxz
dec
stos
jne
push
lods
push
mov
iret
aas
mov
jle
cmpsb
mov
out
mov
ljmp
push
pop
sarl
and
inc
jl
pmullw
jmp
xlat
jecxz
adc
gs
and
push
cs
adc
xchg
les
ljmp
out
and
mov
cli
cmp
hlt
sbb
addr16
fcomip
xor
adc
jns
xlat
and
imul
call
mov
push
outsb
dec
sti
fdivr
ljmp
jge
xor
outsb
fdivrl
loopne
out
pop
cmp
sub
jbe
lods
dec
ja
out
push
lahf
arpl
icebp
pop
pop
xchg
push
jae
push
stc
push
imul
pop
clc
repz
and
push
fmuls
lock
movl
push
cmpsl
sbb
stos
xor
mov
insb
call
mov
pop
stc
mov
jp
in
pop
movsb
sahf
push
fsubr
sub
int3
sbb
pushf
xor
stos
icebp
cmp
aam
and
in
rcrb
addr16
jno
shr
aad
xchg
mov
rcrl
lds
roll
mov
jge
rclb
cltd
rorl
int
ja
push
jp
xchg
mov
iret
jge
mul
test
mov
std
adc
pop
mov
xor
fimuls
ss
cmp
xchg
shrl
mov
jg
lods
jle
pop
pushf
shr
sub
decl
mov
data16
sbb
scas
cld
pop
and
jg
rorb
lea
ror
andb
arpl
mov
mov
pop
pop
faddl
xor
aam
imul
pop
push
out
push
add
xor
cwtl
add
pop
mov
sub
dec
mov
add
out
xchg
jo
mov
dec
sarl
loopne
mov
dec
rcrl
inc
sahf
mov
ja
mov
stos
pop
cs
mov
pop
sti
in
rcr
xor
fsubr
je
push
hlt
imul
pop
push
sbb
mov
das
sbbb
inc
mov
lea
hlt
adc
add
addr16
mov
jne
fcmovnbe
sbb
inc
mov
loopne
xchg
mov
sbb
and
xchg
mov
fucomp
push
pop
inc
mov
ss
mov
mov
cmp
ljmp
out
popf
clc
insb
mov
decb
dec
mov
sbb
sbb
mov
jae
jnp
push
aas
mov
ret
mov
addr16
sbb
test
pop
imul
pop
imul
sub
dec
mov
insl
rolb
sub
push
mov
cld
add
add
addr16
or
mov
pushl
xchg
jg
fcos
pop
ja
pop
je
aaa
jae
pop
int
lock
cmp
mov
cmp
push
js
negl
mov
in
mov
imul
cld
xor
pop
xchg
aaa
cmp
mov
aaa
jg
cmp
outsb
fisubs
test
mov
add
xorb
and
je
sahf
fistps
cmp
jnp
or
sub
repz
or
lcall
repz
rorl
dec
mov
popa
add
add
add
add
add
orb
adc
adc
mov
fnsave
add
das
add
shlb
push
outsl
notl
xchg
sbb
or
mov
or
add
add
aaa
add
ret
dec
out
mov
push
test
std
or
mov
imul
sbb
add
aaa
dec
shlb
repnz
lcall
enter
xchg
xorl
adcb
sub
shll
push
add
add
or
mov
xorl
sbb
xor
loopne
inc
js
xlat
inc
or
adc
add
adc
sbb
scas
push
add
or
mov
int
pop
pop
ror
mov
sub
je
test
cmp
call
dec
in
cmp
insl
add
test
jo
arpl
and
sub
xor
inc
loope
inc
mov
dec
mov
nop
and
daa
rolb
or
pusha
dec
or
pop
fnsave
movsb
pop
sbbb
add
or
call
outsb
adc
mov
aaa
ret
dec
bound
cmp
push
xor
test
or
fcomps
pop
mov
repz
add
loopne
ja
lret
outsl
fadd
clc
jo
jo
xchg
push
add
sub
pop
mov
push
xchg
mov
cltd
sbb
ja
and
jbe
loopne
inc
pusha
xor
faddp
ljmp
sbbl
inc
or
mov
or
fadd
popl
xorb
lahf
inc
mov
fidivs
xor
sbbb
add
add
das
mov
sub
xchg
add
push
inc
cmp
add
add
add
xchg
sub
add
add
sub
adc
add
mov
fadds
adc
push
or
int3
push
cmp
inc
sbb
pop
fcmovnb
popa
push
mov
ret
push
daa
inc
fistl
dec
pusha
dec
arpl
sbb
dec
ficoml
mov
lea
jge
arpl
ss
cld
out
mov
add
clc
push
data16
mov
scas
add
mov
push
add
popl
sbbl
or
add
add
pop
push
and
addr16
push
add
rcrb
or
sub
inc
add
fmuls
cmc
jnp
dec
jae
fbld
xor
andl
inc
add
pop
jecxz
xchg
test
ret
push
or
test
data16
cmp
into
pusha
js
fnstsw
jge
bound
sarb
lahf
add
sbb
inc
mov
mov
cwtl
aaa
jmp
mov
dec
int3
out
loopne
inc
test
sub
mov
push
pop
dec
and
adc
clc
add
pop
iret
cmpsl
jmp
sti
loop
cmp
cmc
push
pop
sarb
or
test
and
sub
fcomp
ljmp
hlt
xor
sub
js
pusha
shr
ftst
negl
cmp
mov
lret
aas
cld
int3
mov
jns
dec
ss
dec
xchg
inc
stc
mov
nop
insb
sub
mov
jge
notl
int3
mov
sahf
dec
push
dec
xor
fsubrl
stc
mov
mov
mov
cmpsb
addr16
js
sbb
pop
sahf
cmp
push
call
xchg
roll
mov
pop
repz
mov
scas
jne
add
cmp
fstp
outsb
js
ds
jb
fs
jmp
dec
aaa
xlat
push
dec
int3
in
imul
lock
icebp
or
es
push
push
dec
push
xor
jns
stc
jo
stc
mov
fildl
sub
data16
aas
into
jo
repz
lahf
jb
ja
xor
imul
shll
mov
nop
xlat
mov
scas
sti
outsb
lcall
mov
xchg
sub
ror
and
sahf
outsb
push
push
test
lea
jo
fmul
fsubrs
faddp
lahf
pop
imul
jae
mov
movsl
add
cmpsl
add
and
mov
xchg
push
jbe
popf
imul
cmpsl
std
pop
mov
pushf
lret
mov
ds
popf
mov
cmp
std
fdivrs
push
outsb
cmc
ds
xchg
jg
in
hlt
lret
pop
fcmovu
xor
gs
jmp
mov
and
jp
int3
mov
aad
push
lahf
mov
fwait
xor
sub
cmp
les
fwait
js
ljmp
jnp
push
dec
sbb
mov
sti
das
cmp
jmp
aaa
out
jmp
fst
flds
ret
outsb
pop
data16
in
xor
std
addr16
cli
fdivrs
jecxz
daa
xchg
jmp
cs
lret
inc
cwtl
sub
testl
sbb
pop
mov
cmpsl
pop
aam
push
mov
sub
lahf
roll
gs
ret
and
shll
jmp
hlt
icebp
xchg
push
xor
stc
mov
data16
jl
out
out
jge
test
ja
test
xchg
lret
cmp
lahf
pop
out
jae
jecxz
rorl
push
mov
jb
dec
movsb
sub
lret
jmp
jl
std
pop
jle
jg
icebp
loopne
leave
jns
pop
int3
cmp
in
data16
idiv
xchg
dec
sahf
mov
mov
sbb
ljmp
iret
orb
sti
inc
xlat
stos
ret
mov
js
sarl
aam
fcomi
cs
pusha
lods
jl
ret
and
cmp
out
jae
adc
cmpsl
into
lea
in
pop
sbb
sub
loopne
sub
xor
xchg
mov
sti
repnz
ret
lahf
jne,pt
jp
cs
insl
pop
fucomp
cmpsl
mov
icebp
call
jnp
andl
jg
jmp
mov
data16
imull
ljmp
daa
lahf
cmp
dec
mov
inc
mov
scas
jno
adc
in
in
das
mov
stc
adcb
cmc
cmp
jecxz
fstp
sub
mov
mov
pop
ss
xchg
inc
inc
sbb
fildll
cmpsb
out
in
mov
mov
pop
gs
sbb
mov
adc
out
xchg
into
mov
lahf
sbb
out
insl
cmp
imull
mov
daa
xchg
sbb
mov
cmc
cs
out
pop
jae
cmpsl
cmpsb
cwtl
mov
into
mov
cld
leave
mov
insl
pop
out
lret
jle
sbb
cmp
mov
out
inc
jecxz
out
mov
mov
cmpsl
lea
mov
call
mov
add
mov
jb
std
mov
mov
das
dec
pop
iret
cmc
mov
call
adc
cmp
mov
popf
inc
fstpt
jmp
popf
aas
imul
out
mov
mov
loope
ret
lret
outsb
outsb
out
jl
sbb
loope
jg
adc
idivl
dec
sub
cmp
cmpsb
lret
mov
imul
xor
push
iret
repnz
adc
mov
sbb
out
jns
icebp
clc
xlat
movb
out
sti
loop
in
fldl
mov
cld
mov
dec
push
mov
sub
jge
mov
sub
cmp
sub
fdivrs
mov
fwait
outsb
cmp
push
outsl
out
das
inc
fwait
mov
js
jb
inc
push
mov
fstp
jae
fmull
mov
push
repz
xchg
mov
int
mov
sbb
jae
cli
and
mov
gs
arpl
in
hlt
sub
or
lea
lahf
mov
cmp
xchg
ja
test
movsb
fistpll
call
sbb
es
loope
and
call
mov
xlat
mov
dec
xchg
inc
stc
inc
loop
xor
push
cli
sbb
ds
rcrl
stos
jecxz
mov
and
jae
mov
cmp
cmp
or
push
push
dec
fcmove
jge
xchg
cld
out
addr16
test
lahf
add
rorl
imul
aam
sbb
insl
mov
or
movsb
jae
cmpsb
jecxz
mov
push
add
jmp
pop
mov
xchg
jge
ss
subl
repz
cmp
ret
push
mov
fistpll
shr
pop
hlt
pop
jg
inc
into
sub
lcall
pop
and
leave
repz
or
lahf
push
adc
push
mov
mov
mov
lret
sub
int3
jp
cwtl
jno
adc
aas
rcl
xchg
ror
lds
filds
add
loope
push
xor
jns
fildll
push
lds
jo
inc
jnp
stos
sbb
and
rcl
aas
stos
push
jmp
hlt
js
mov
push
imul
xchg
inc
popl
mov
mov
cmp
dec
clc
int
cwtl
movsb
cmpb
add
addr16
aaa
mov
mov
inc
push
in
dec
jb
dec
xor
lock
mov
mov
cmp
lcall
enter
xor
out
fldt
cltd
out
imul
ds
cltd
ja
or
sbb
sbb
jg
xor
pop
jmp
sbb
aaa
cltd
repz
aad
push
xchg
clc
aas
into
mov
sbb
cmp
fisubl
sti
in
insl
mov
or
fcmovu
out
add
addr16
std
lahf
sub
cmp
and
jns
int
mov
arpl
in
orl
xor
ljmp
jmp
aaa
daa
push
mov
gs
cld
scas
jae
xor
imul
movsb
loope
dec
jmp
clc
jae
icebp
mov
push
outsl
scas
xor
or
add
mov
pop
push
outsb
mov
data16
or
pop
test
hlt
sbb
jl
loopne
shl
jge
mov
subb
push
icebp
das
sbb
pop
mov
or
xor
mov
imul
inc
sbb
cmc
imul
daa
loopne
push
push
pop
inc
ret
cmc
mov
push
xor
mov
callw
clc
add
ss
shll
hlt
sub
loopne
mov
push
xor
andl
outsl
cs
push
andl
jnp
mov
or
insl
inc
aas
cli
add
sub
cmpsl
loope
sub
orb
lret
push
or
cmp
jle
jge
jae
pushf
dec
sbbl
lea
mov
xchg
push
pop
cmp
mov
pop
shll
adc
cwtl
pop
inc
ret
inc
sub
sbb
cld
sub
call
sbb
fildl
sbb
and
sub
xor
mull
pop
clc
cmp
add
lahf
jg
data16
ja
xchg
fimull
aam
aam
and
movsl
outsb
daa
mov
mov
lods
outsb
mov
sbb
inc
push
mov
scas
mov
repz
shrl
imulb
mul
shlb
xor
push
idivl
out
dec
aas
push
mov
sbb
fisttpl
hlt
xor
mov
add
add
jp
mov
stc
sub
and
cmc
test
aam
pop
pop
mov
jns
data16
lret
xor
pop
in
std
fildll
fdivrp
xlat
jae
in
arpl
mov
xchg
jb
je
int
pop
jle,pt
jne
xor
jge
cmp
frstor
jb
mov
push
in
sbb
pushf
movsb
sti
call
dec
adc
jg
test
push
repz
out
movl
fsubl
mov
inc
scas
scas
test
add
adc
andl
fdivrl
inc
popf
daa
stos
pop
rorb
outsb
scas
icebp
add
divb
frstor
pop
push
dec
ljmp
loop
push
divb
aad
rcl
ret
mov
ret
lea
sti
int
lahf
mov
cld
repz
leave
mov
std
mov
mov
popa
adc
push
or
es
int
iret
mov
ljmp
shll
repz
sub
scas
cmp
lcall
dec
sahf
mov
js
mov
cmp
fwait
mov
mov
movsb
cmp
xor
mov
jl
jne
ret
jno
and
hlt
cwtl
nop
push
jmp
mov
lods
xchg
imulb
mov
popf
xlat
dec
les
xlat
mov
jle
mov
sub
addr16
mov
aam
push
sbb
dec
ljmp
inc
inc
fnstsw
sarb
inc
xchg
mov
int
xlat
andl
mov
inc
push
lea
push
fcmovnb
and
pop
outsl
jle
scas
fwait
out
push
jmp
sbb
sbb
add
jp
cmc
mov
cli
adc
js
mov
fucomip
scas
push
mulb
lret
test
jp
ret
xor
xchg
incl
xchg
xchg
sahf
jmp
std
push
int
aam
in
push
dec
in
outsl
stos
sbb
cld
or
push
stc
scas
mov
push
xchg
mov
jb
sub
dec
push
in
cmp
pop
lahf
cmpsl
fdivl
sbb
jnp
cld
pop
inc
cmp
pop
push
dec
aam
pop
inc
stos
mov
stos
sahf
xchg
test
jmp
mov
adc
in
aaa
push
xlat
out
aam
dec
cmp
cld
rol
out
jp
mov
aam
arpl
shll
cs
fcmovne
ljmp
pop
je
or
repz
inc
lods
daa
mov
dec
and
pop
aad
repz
clc
stos
pop
out
mov
inc
incl
mov
std
pop
out
arpl
aas
dec
pop
mov
data16
jbe
ret
std
movsl
jp
mov
push
sbb
shll
jno
out
out
clc
lret
xor
or
out
fs
loop
mov
sbb
sti
fbstp
les
aas
and
sbb
sbb
add
push
or
add
rclb
iret
xchg
sbb
mov
repnz
int3
mov
fidivrs
adc
add
jl
adc
ret
push
out
adc
add
arpl
xchg
xchg
add
shl
xor
test
inc
mov
sbb
in
in
mov
cli
jp
enter
xchg
fnstsw
push
insb
pop
cmc
mov
push
fcmovnbe
ret
and
push
jne
prefetchwt1
or
mov
mov
mov
fwait
or
clc
push
orb
sbb
insl
aaa
inc
pop
int
fcomi
push
mov
ljmp
std
in
cmp
call
mov
inc
xchg
lock
xor
push
jl
pop
pop
mov
add
mov
testl
mov
scas
add
in
fcmovnb
jl
dec
adc
mov
or
xchg
sub
pop
and
or
inc
outsb
jg
xor
ret
popf
sbb
sbb
adc
in
cmc
test
or
rol
jmp
add
dec
cmp
scas
xchg
mov
push
mov
dec
cmp
dec
lods
fwait
call
loope
xchg
mov
push
push
das
aad
cmp
dec
push
call
nop
xchg
jns
mov
icebp
fs
add
or
jmp
mov
push
lock
cmp
in
push
xchg
orl
outsl
aad
cld
xchg
push
not
aad
call
test
hlt
je
adc
push
cmp
sti
mov
inc
out
xchg
mov
push
xor
lcall
mov
push
cs
icebp
sbb
scas
pop
dec
xchg
bound
inc
xchg
iret
lahf
aad
mov
inc
mov
test
cmp
xchg
test
add
adc
lods
fs
daa
pop
test
push
rcll
rorb
push
movsl
sbb
out
xlat
fwait
out
inc
jle
jp
push
fisubrs
mov
pop
iret
movl
mov
call
add
scas
jmp
cmc
cmpsb
icebp
push
sbb
repnz
clc
add
mov
xchg
and
push
cwtl
shrl
add
add
sbb
xor
neg
outsl
insb
push
add
test
neg
mov
cltd
xchg
mov
adc
add
xchg
push
pop
fldl
lcall
aas
dec
ljmp
cld
mov
shrb
xchg
scas
and
loope
add
data16
stc
push
fdivp
test
outsb
add
adc
fidivl
jmp
outsl
xor
rol
out
dec
cmc
out
out
mov
lret
and
jno
pop
jge
jle
iret
jmp
je
xor
jl
push
adc
fmuls
cli
repz
push
push
xor
sub
in
in
cmpsl
pop
xchg
ret
dec
cmc
sub
lods
icebp
inc
jge
jno
pop
movsb
dec
cltd
loopnew
cli
xchg
icebp
jb
lods
dec
sbb
dec
stos
cmc
sub
sub
dec
cltd
scas
test
cmc
sub
fiaddl
outsb
inc
cmc
jl
dec
pop
mov
jo
mov
mov
adc
out
scas
inc
cli
cmp
movsb
ds
lea
pop
daa
cmc
mov
push
sub
push
mov
or
imul
jge
sub
cmp
aaa
icebp
jp
lret
hlt
or
in
hlt
and
es
sbb
shrl
loopne
sahf
adc
or
das
sub
xlat
add
or
in
repz
loopne
pop
stc
outsl
aaa
addr16
mov
gs
das
pushf
xchg
lgs
sbb
sbb
stos
jnp
cmpsb
in
jle
pop
inc
cld
jl
ja
mov
fucomi
jg
aaa
clc
lahf
int
int3
push
sbb
mov
push
fwait
sbb
adc
movsb
outsb
test
pop
jmp
sbb
push
ja
imul
js
add
mov
jl
or
stos
add
push
push
and
jmp
mov
cmp
shlb
ss
addb
lock
mov
and
jno
jae
outsl
imul
mov
addb
sbb
test
outsb
inc
ret
mov
nop
lock
fbld
mov
pop
popf
test
and
out
inc
add
dec
aaa
and
xor
movsb
fisubs
mov
push
test
in
pop
lret
jg
jmp
jge
int3
sahf
cmp
add
push
int
lcall
mov
clc
scas
xor
insl
pop
daa
inc
cmp
icebp
mov
imul
pop
mov
cld
and
in
and
pop
aad
ja
mov
imul
jl
mov
lds
mov
aas
ja
in
shl
fimuls
fistpll
ds
sti
dec
movsb
rorb
out
je
add
cmp
outsl
das
cmpsl
fimull
sarl
inc
clc
stos
rolb
sti
daa
jg
addb
xor
scas
push
mov
lock
and
jno
push
jg
or
pop
out
push
and
xacquire
int3
cmp
push
sbb
outsl
xlat
test
mulb
out
ret
or
repz
mov
and
ljmp
inc
adc
xor
loop
or
jb
lahf
push
mov
jp
aaa
lea
mov
sahf
cmpsl
sbb
hlt
test
jecxz
test
mov
inc
jle
jns
clc
test
stos
les
ljmp
aaa
push
jg
cmp
lock
jmp
mov
or
jae
adc
pop
stos
xchg
add
cmp
fstpl
fucomi
stc
aam
stos
lret
cli
mov
dec
mov
inc
call
mov
sahf
jb
dec
lods
add
add
cli
mov
xlat
push
fcos
fnstsw
mov
dec
fistpll
sbb
jmp
mov
js
out
cmpsl
ffreep
cmpl
jle
cmp
push
fwait
ret
add
scas
pop
jne
jl
out
xchg
xchg
xchg
out
rorb
mov
mov
pop
mov
int
push
or
cmp
aad
iret
arpl
mov
xchg
sbb
repnz
in
das
push
mov
jge
test
pop
dec
inc
ds
cmc
mov
hlt
pop
or
push
push
cmp
cltd
shll
push
call
icebp
sub
hlt
xor
sbb
rcl
fsubs
enter
xchg
fisttps
dec
incb
lock
xlat
add
add
push
add
adc
add
sbb
push
shlb
adcb
stc
push
fdivr
mov
repz
cwtl
mov
cmc
nopl
cmp
addr16
cwtl
jmp
cmc
cmp
into
aas
or
cmp
fnstsw
cmp
mov
jl
scas
push
push
dec
outsl
ljmp
imulb
lods
cmp
dec
int3
jae
pop
lahf
mov
cmpsb
pop
push
hlt
das
stos
pop
mov
icebp
xchg
pop
shr
stos
jg
mov
jns
incb
jp
mov
je
in
sub
out
int3
dec
icebp
sbb
hlt
lods
pop
jecxz
pushf
scas
jl
mov
imul
push
xchg
mov
adc
insb
aam
mov
jmp
pop
sti
iret
sti
iret
fwait
dec
lret
clc
test
sub
inc
fs
clc
mov
fidivrs
loop
scas
sahf
jp
dec
push
cmp
jl
popf
pop
jns
fiadds
sbb
sbb
imul
cmp
lock
cli
out
adc
push
xchg
lods
mov
push
or
pop
jl
jmp
outsl
cmp
rcrl
mov
pop
stos
std
jb
lcall
imul
sbb
out
fsubl
addr16
std
and
mov
ficompl
xchg
out
and
repnz
adcl
jle
xlat
mov
jle
adc
aas
sub
jbe
loopne
jns
xor
ja
add
jp
jge
jecxz
xchg
pop
out
scas
xchg
scas
cld
mov
fmuls
dec
pop
sbb
adc
jle
rol
in
xchg
mov
and
push
repz
mov
not
xor
shlb
dec
mov
jle
cmp
fmul
int
imul
xorb
fdivrp
aad
mov
idivl
fwait
js
mov
loopne
outsl
into
lds
stc
nop
js
push
mov
dec
push
in
or
jb
sub
faddl
jle
lock
iret
es
push
out
or
negl
cltd
outsl
rcrb
std
scas
lea
mov
iret
aam
outsb
fnstcw
cmp
dec
lds
mov
outsl
sbb
jae
mov
out
mov
sbb
aam
or
cld
pop
cmpsb
loop
cmp
mov
repz
lock
ds
jle
shll
out
stos
mov
shll
pop
imul
sbb
cmp
jle
mov
and
movsb
jae
std
push
sbb
xchg
push
or
ret
and
dec
pop
jle
mov
mov
push
sti
and
popf
mov
lods
lret
inc
das
mov
movsl
fwait
pop
jp
cwtl
push
shlb
pop
jg
cmp
out
pop
dec
inc
fistpl
inc
cwtl
and
leave
xor
and
in
jo
repz
and
jns
pop
std
loope
and
leave
test
sbb
adc
gs
fwait
sbb
leave
mov
cmc
daa
mov
jne
jns
cmpsl
jne
imul
repz
repz
rorb
cmp
mov
stc
fdivp
pop
xor
outsl
psllq
aas
hlt
push
and
lahf
movl
mov
iret
out
inc
dec
aas
jmp
pop
es
clc
cltd
ja
lods
mov
xchg
sbb
adc
and
jecxz
leave
cmp
adc
fsubs
jbe
xor
cmp
cs
fisttps
fnsave
sbb
notb
pop
or
lahf
ds
dec
les
pop
clc
fidivl
scas
inc
pop
hlt
dec
mov
mov
ss
stc
ja
clc
mov
push
loop
xchg
or
je
in
ss
push
cld
int3
mov
and
sub
jg
push
mov
pop
dec
sub
arpl
les
pop
mov
notl
sbb
orl
jo
sarb
cmp
add
test
addr16
out
mov
and
dec
and
jmp
fsubrp
adc
hlt
adc
arpl
dec
nop
insl
bound
popf
xchg
and
std
cmpsb
stc
in
push
and
mov
push
xchg
adc
cmpsl
negl
ljmp
jl
xchg
or
dec
into
jmp
pop
xor
dec
enter
incb
call
insb
inc
in
leave
add
xchg
pop
jl
data16
popa
jae
pusha
nop
test
cwtl
mov
fwait
jmp
or
addr16
popa
xor
mov
push
addr16
cmpsl
mov
mov
data16
and
cltd
inc
sahf
pop
loopne
pushf
inc
cmp
pop
add
in
and
aas
sbb
fildl
pop
add
add
add
jle
mov
cmp
stc
daa
inc
add
mov
loop
add
std
cmc
inc
cmpb
cmp
les
xchg
add
outsl
cmpb
push
push
jmp
inc
mov
std
ljmp
jecxz
outsl
aaa
aam
out
jg
fimuls
mov
into
es
jo
imul
push
mov
aas
sbb
push
cmp
in
mov
in
xchg
cmp
adc
push
test
fadd
jg
mov
jecxz
xchg
inc
mov
fidivl
imul
inc
pop
arpl
xor
sti
sbb
cmpsl
mov
xchg
and
aad
sti
inc
aad
pushf
test
add
cld
sub
aas
add
popa
sbb
aaa
sbb
cmpsb
fsubrs
sub
test
or
jle
and
pop
cmp
sbb
push
mov
leave
nop
pop
lret
xor
cld
aam
xchg
sbb
jae
ss
jo
es
dec
add
pop
jae
bound
es
pushf
sub
jecxz
into
fwait
xor
cltd
pop
lcall
shll
mov
outsl
xchg
push
scas
ret
andl
popf
xlat
ljmp
pop
gs
jmp
loopne
imulb
or
loopne
inc
xchg
in
sarb
mov
mov
call
or
inc
je
test
stos
mov
push
scas
aam
mov
mov
sarl
out
addr16
push
or
jne
or
inc
imul
sub
or
mov
dec
out
jbe
inc
cmc
pop
fs
enter
lar
add
test
je
xor
repz
std
jle
jg
call
pop
add
sub
push
push
fmuls
add
nop
and
or
and
and
inc
adc
xor
pusha
ja
xchg
test
test
fcmovnbe
cmpsb
aad
dec
insl
jmp
sti
fnstcw
mov
aam
lods
mov
aam
push
imul
test
aaa
ja
neg
pop
jbe
sar
std
call
scas
sbb
sahf
cmp
sahf
cmp
jae
out
cltd
fnstcw
sbb
dec
sub
cbtw
pop
das
inc
add
jne
jb,pn
sbb
das
icebp
cmp
sub
ljmp
xlat
cmp
in
jns
movsl
dec
fbstp
mov
shl
ss
shll
in
sbb
cld
popa
ret
js
inc
jbe
adcb
jns
xor
push
movsb
pop
mov
je
outsl
push
idivb
xchg
push
test
insl
mov
fadd
mov
faddp
scas
push
scas
arpl
shlb
daa
loopne
call
je
fsubrl
testb
pop
sbb
sbb
cwtl
sbb
pop
sarl
aam
fwait
pop
data16
xor
fadd
in
loop
xor
cmp
stc
lods
mov
pop
push
sub
pop
pop
movsb
mov
fcmovnu
cmp
fwait
adc
rcrb
lahf
xorl
out
idivl
hlt
cmp
lcall
in
aaa
jne
stc
dec
lock
xchg
std
jnp
cmp
pop
lret
mull
jne
inc
out
push
ds
xor
repz
mov
and
mov
mov
add
push
in
xchg
xor
jg
in
mov
lods
std
pop
jmp
incl
cmp
mull
lods
aas
mov
sbb
cmp
jle
out
xchg
fbstp
aas
sti
mov
mov
ja
int3
clc
cmp
pop
int3
icebp
adc
inc
jg
in
add
outsb
pop
add
mov
lock
add
or
lds
lock
mov
push
or
test
incl
in
loope
lock
sub
fmuls
ret
sub
adc
aas
jg
lds
cmp
jg
cld
sbb
mov
std
xchg
stc
dec
lds
sbb
cmp
daa
cmc
ret
jnp
sub
pop
idiv
mov
sahf
mov
js
jb
dec
das
addr16
call
lcall
addr16
ret
sub
add
and
outsl
testl
pop
mov
cld
jnp
out
jmp
cmp
cmp
lret
push
fisttps
test
cli
pusha
jle
ds
stos
idivl
jge
in
cld
sbb
std
lahf
sbb
clc
push
xchg
sbb
icebp
jmp
adc
cmp
imul
sahf
repnz
mulb
pcmpeqd
mov
lods
ficompl
pop
das
aam
or
rcrb
cli
jns
jae
icebp
cmpsl
cld
mov
jmp
lahf
inc
pop
std
mov
jmp
xor
lret
lahf
xchg
xchg
in
notl
call
mov
push
nop
repz
pushf
cmpsl
sub
hlt
push
xchg
cmc
sbb
hlt
jp
jae
js
add
mov
stc
cmpsl
inc
jg
and
ja
stc
and
jae
mov
das
xchg
lahf
jmp
inc
mov
pop
mov
scas
imul
je
out
push
mov
lret
aas
xchg
repz
fbstp
jbe
sbb
jle
lock
mov
fcmovnbe
aas
mov
jns
dec
dec
and
lods
shl
mov
movsb
clc
loopne
shrl
call
sub
out
lock
mov
pusha
inc
decb
aas
fbstp
filds
pop
mov
cmp
sbb
into
pop
add
ds
cmp
fndisi(8087
lock
ja
pushf
jmp
inc
mov
mov
imul
in
lcall
lods
enter
sahf
dec
and
xchg
ficoms
inc
mov
es
clc
jns
cmpb
lods
scas
or
es
or
popf
xor
xor
or
enter
scas
mov
rcl
mov
inc
mov
sub
dec
in
fistpll
jno
lcall
ret
fistps
fldt
fwait
and
pop
sarb
fs
fnstsw
popf
js
loope
xchg
cmp
lahf
data16
es
cmp
mov
or
push
testb
das
sbb
mov
loope
shr
int
mov
pop
fdivl
lret
fmuls
enter
ljmp
popa
mov
mov
fidivs
sar
mov
cmp
sti
pop
call
call
mov
sbb
insb
loope
fdivrl
into
sub
jecxz
sbb
ljmp
sbb
addb
and
sbb
pushf
in
or
idivl
add
or
jp
sbb
std
out
aam
pushf
mov
jnp
test
icebp
scas
in
repz
pop
int3
jmp
cmc
or
xchg
stos
pop
adc
mov
in
in
and
cli
jae
stos
xchg
iret
aad
mov
ljmp
inc
jne
fisttps
xchg
sahf
cmp
jmp
cli
orl
xchg
xor
cmp
jbe
xor
sub
mov
int3
pusha
adc
mov
xor
or
push
rcr
stos
daa
and
jmp
mov
cmc
push
scas
out
inc
jl
mov
xchg
aam
inc
pop
mov
xchg
out
mov
sbb
mov
stos
rolb
mov
add
inc
pop
fwait
iret
add
mov
jle
imul
rolb
aas
xor
out
rep
cmpb
imull
push
jg
jl
push
mov
cs
adc
adc
pop
mov
enter
scas
sub
fsubrl
pop
fistpll
shlb
cmp
test
cmp
mov
pusha
push
jmp
sbb
int3
hlt
bound
dec
mov
fimuls
bound
cwtl
sbb
loopne
jno
lods
jae
push
jnp
lock
xchg
in
jo
add
enter
arpl
adc
sbb
jbe
idivl
test
pop
out
dec
mov
into
cmp
lock
xchg
inc
cmp
dec
jne
pop
push
pmullw
lcall
ret
aaa
loop
gs
and
mov
jns
pushf
mov
mov
les
loope
loope
jns
sub
test
mov
negl
mov
addr16
testb
scas
scas
movsl
sub
mov
pop
in
lea
sbb
jmp
jb
pop
xchg
in
sbb
popf
pop
scas
fldt
cmp
pop
sub
in
adc
lods
mov
mov
aad
dec
dec
sub
mov
data16
fstpt
sbb
rorl
jno
sti
popf
push
bswap
inc
in
push
into
in
cltd
popf
cs
shl
xor
mov
add
imul
repz
aad
jl
adc
jmp
jno
lcall
fsub
sbb
add
fdivrl
out
subb
mov
ds
adc
sarb
fs
js
scas
sbb
dec
pushw
test
mov
loope
shr
ret
cmp
daa
daa
cmp
mov
rolb
mov
mov
jmp
fisubrl
pushf
cs
shr
sbb
jl
cmpsl
mov
mov
mov
push
aad
fnstcw
jl
push
cli
testb
sub
inc
xlat
dec
sbb
xor
stos
lds
cmp
jns
pop
dec
movsb
arpl
or
adc
lods
push
or
jnp
addr16
pop
call
aaa
mov
jns
icebp
lret
xor
cli
mov
dec
jmp
xchg
sbb
fsubs
mov
cmp
outsl
pushf
pushf
fcmovnu
mov
mov
lods
leave
into
shrb
fsts
das
mov
iret
pop
enter
mov
lea
push
loopne
cmpl
fdivl
push
xchg
ds
mov
mov
addr16
jmp
sbb
mov
in
outsb
shll
adc
push
jb
les
jg
jecxz
es
add
xor
fisubl
negl
pushf
dec
imul
jns
fnstcw
and
inc
cmp
es
out
adc
je
mov
cmpsb
call
lea
xchg
decl
mov
sti
or
jo
mov
jl
rcrl
or
xchg
cmpsb
or
mov
call
cmp
xor
cmpl
mov
inc
inc
je
and
aad
mov
aas
xor
fstpt
jecxz
les
mov
push
mov
cli
dec
mov
or
inc
add
mov
xlat
adc
and
xchg
cmp
sbb
sbb
jne
xchg
pop
sahf
scas
adc
cli
cmp
adc
xchg
add
or
and
stos
xchg
test
sub
popa
or
dec
inc
pop
xor
imulb
or
ljmp
iret
mov
mov
jg
jo
cmpsb
andl
xchg
jnp
sahf
mov
mov
addl
adc
xchg
aad
scas
dec
daa
and
stos
or
pop
pop
mov
out
hlt
and
sbb
cs
cs
pop
sahf
and
push
scas
daa
movsl
adc
cmp
outsb
rcll
jbe
push
pop
mov
xchg
dec
or
xlat
push
sbb
fmull
add
sbb
or
jp
clc
fstpt
or
in
test
lcall
cmp
mov
out
imul
jne
loopne
mov
popf
enter
daa
ret
sbb
fs
inc
sub
jnp
lods
sbb
test
cmp
adc
popf
mov
lahf
daa
dec
pop
aad
jb
cld
mov
aaa
jp
mov
pushf
addr16
push
mov
daa
lods
lahf
lock
sub
jg
jge
out
inc
xlat
xlat
sbb
jo
sbb
dec
adc
push
sbb
mov
testb
pushf
rorb
inc
fisttps
push
push
aad
loope
mov
cli
in
sub
cli
ret
hlt
push
sbb
dec
mov
mov
pop
movsl
push
inc
dec
inc
mov
icebp
xor
pop
jns
repz
addr16
jp
push
mov
mov
pop
in
enter
std
push
sti
test
xor
fistl
inc
out
les
push
or
nop/reserved
in
enter
mov
inc
test
add
mov
iret
pop
popa
std
add
cmp
pop
pop
imul
sbb
lock
pop
daa
mov
inc
outsb
pop
stc
adc
cli
inc
in
xchg
cmc
popa
sub
cld
cmp
aam
out
psrlq
mov
xchg
cli
and
fadds
mov
sbb
mov
pop
inc
lahf
xchg
je
out
mov
imul
call
rorl
in
loopne
icebp
sub
dec
inc
out
inc
cwtl
pop
stos
jmp
out
mov
jp
pop
xchg
test
cmp
fdivrp
imul
pop
cmp
dec
pop
sbb
aas
push
jmp
push
into
stos
sub
mov
mov
out
inc
rcl
lods
mov
aad
popf
repz
scas
add
cs
and
in
add
jno
ret
lret
leave
dec
fistl
shr
mov
or
mov
mov
jge
cs
fwait
mov
leave
xor
jno
rcrl
negl
dec
adc
aad
cli
ficoms
or
push
shlb
xchg
jmp
sti
sar
mov
cmpsb
jns
push
hlt
in
ret
std
push
inc
jne
jb
imulb
cli
hlt
lcall
push
inc
adc
filds
fs
loopne
mov
fcomps
push
push
aad
mov
mov
cmpsl
repnz
xchg
popa
jp
scas
adc
enter
mov
test
stos
mov
and
lds
ss
psrlq
in
in
out
sub
jno
fidivrl
stos
jecxz
out
jae
clc
lcall
hlt
dec
xchg
mov
test
movsl
mov
mov
sahf
sub
into
mov
push
push
mov
mov
hlt
jno
xor
pop
je
loopne
adc
aas
push
movsl
jmp
sub
jg
fwait
mov
mov
jmp
test
popf
pushf
daa
xchg
inc
pop
call
and
pop
aad
xchg
repz
mov
test
sub
cwtl
iret
jns
push
hlt
jne
call
jne
out
in
and
mov
popa
jp
scas
dec
into
sbb
ret
je
jno
rcll
dec
ja
testb
rcll
mov
mov
adc
lcall
push
sar
daa
sub
insb
popf
orl
out
xchg
inc
scas
xchg
cmp
ret
js
scas
xchg
call
pop
cwtl
mov
scas
xchg
xchg
jl
in
jbe
inc
in
fdivr
stc
stc
xor
sbb
popf
movsl
enter
xor
leave
cltd
addb
cmpsl
dec
pop
mov
push
into
mov
mov
push
mov
mov
fcoms
ficompl
cmp
mov
lods
or
xor
dec
sub
mov
mov
out
pop
cmp
xchg
adc
and
movsl
and
in
jp
inc
jle
and
or
push
xchg
jmp
xchg
xor
in
test
sub
xchg
jmp
xchg
in
xor
sti
insb
out
rcrb
xor
lahf
ja
movb
add
fld
xor
cmp
push
orl
fsubrl
dec
xor
add
jge
stc
adc
cld
push
shll
ret
mov
popa
jp
xchg
enter
test
out
aam
fistl
inc
cs
bnd
test
sti
pop
mov
enter
inc
filds
enter
cmp
jp
push
mov
pop
lds
cltd
pushf
hlt
sbb
xchg
mov
popf
lret
jmp
gs
sbb
aam
jmp
in
add
dec
cmp
mulb
sub
lret
pop
pop
sub
cmp
push
mov
outsl
push
adc
daa
test
fildll
lcall
repz
mov
fldenv
or
adc
jecxz
jb
dec
bnd
stos
and
leave
jmp
xchg
xlat
sti
cmp
mov
pop
xchg
push
gs
sub
cmp
push
ss
repz
push
xchg
jmp
out
stos
cltd
aad
mov
dec
mov
pop
negb
inc
out
mov
cmpsl
cli
scas
cmp
inc
or
pop
hlt
jge
sub
call
test
aas
gs
push
in
sub
inc
adc
outsb
dec
inc
scas
dec
and
mov
popf
push
xchg
repz
int3
test
in
push
in
sub
cmp
jb
out
cld
mov
pop
aas
sahf
cmp
imull
or
sub
aas
adc
cmp
mov
lret
ja
lret
arpl
mov
lret
out
xchg
jmp
mov
jnp
cld
mov
push
xchg
lahf
push
enter
cmp
cmp
dec
lcall
push
jae
pop
out
stc
sub
push
jb
test
jl
or
mov
push
test
push
xchg
pop
pop
in
stos
enter
clc
gs
scas
cmp
cli
sbb
adc
stc
es
and
sub
popa
std
lods
pop
imul
inc
test
lods
add
adc
sbb
cmp
mov
adc
jge
push
movsl
fistps
cmp
frstor
jmp
dec
aas
push
xor
std
dec
int3
xchg
inc
jmp
jmp
movsl
fbld
mov
pop
mov
movsl
fildll
push
pop
inc
jmp
jmp
jmp
hlt
jae
cs
cli
std
xchg
pop
inc
jmp
pop
adc
fs
iret
in
fcomip
sub
and
shl
imull
stos
enter
out
jb
jg
sub
ljmp
pushw
pop
cltd
std
xlat
mov
sti
divl
gs
lret
dec
sub
lcall
cltd
std
out
insl
idivb
aam
in
jg
xchg
fcos
xchg
push
pushw
jbe
jg
into
in
jg
popf
fnstcw
ror
fbld
pop
imul
jnp
int3
mov
cmp
frstor
jbe
mov
xchg
sti
gs
cmpsb
mov
in
lods
pop
ds
jmp
push
enter
cltd
push
xlat
inc
loope
test
popf
pop
pop
cmp
mov
loopne
jle
cmp
into
lret
mov
iret
lahf
xor
hlt
adc
sahf
mov
push
cld
repz
jl
cmpsb
and
mov
xchg
shrl
sti
iret
xchg
in
xchg
cld
mov
lds
mov
mov
jb
sub
daa
adc
mov
jb
push
in
ss
out
mov
in
das
addr16
dec
lahf
cmp
dec
sbb
out
out
xor
mov
pop
and
jae
xor
aad
lret
push
cmp
mov
fincstp
insl
int3
out
mov
pop
fcmove
out
mov
int
cli
jbe
lcall
scas
popf
fstpt
jg
out
jns
daa
fcmovu
cld
jg
int
mov
jp
fwait
out
sub
dec
fbld
out
mov
jbe
pushl
frndint
das
insb
incb
xor
mov
sub
sar
aam
bound
ficompl
scas
push
mov
sti
xchg
jno
cmp
pop
iret
mov
lods
std
das
jo
sub
daa
mov
sbb
mov
test
scas
push
vxorps
faddp
jecxz
push
push
lahf
sahf
push
cs
out
out
pusha
cmc
fld
cmc
push
pop
mov
sahf
outsl
mov
mov
sbb
or
in
fcmovb
fidivl
mov
ret
push
mov
call
pop
and
lahf
pop
mov
hlt
sub
stc
sub
hlt
sbb
sub
cmp
call
jno
xor
adc
vpxor
mov
hlt
dec
jo
and
in
fxch
popf
push
leave
xchg
mov
aad
pop
ds
dec
push
popa
movsl
and
lret
push
mov
dec
outsb
xchg
mov
das
adc
xchg
dec
inc
outsb
xchg
push
inc
outsb
mov
lret
sbb
call
push
sub
pop
inc
into
mov
bound
in
sub
outsl
pop
sar
pushf
jg
sub
pop
inc
mov
and
stos
clc
xchg
push
mov
push
xchg
cmp
jmp
bound
cltd
mov
call
dec
jae
jl
mov
dec
push
out
jne
aas
jne
daa
fwait
mov
in
pushf
repz
mov
scas
pop
in
mov
jno
psubsw
arpl
mov
mulb
popf
insb
ds
loopne
fcmovne
lret
cmc
ja
pushl
scas
fistpll
lret
push
inc
fistps
jge
filds
fbld
out
stc
dec
mov
ljmp
jb
aad
mov
pop
int
fldcw
scas
not
lods
pop
imul
or
cld
add
jmp
mov
jmp
pop
testb
in
jns
jno
out
repnz
lea
stos
xchg
fildll
mov
jne
in
sub
sbb
jle
mov
jl
xor
ret
lcall
pop
jle
or
cmc
sbb
cli
xsave
fwait
pop
ret
cli
stc
enter
xchg
pushf
jg
lret
sbb
popf
repz
shl
in
in
push
xchg
stos
cmp
icebp
mov
shll
dec
and
loope
mov
mov
jl
mov
enter
jmp
jmp
fstpl
cli
pop
sub
fcmovu
in
push
div
into
mov
cli
insl
push
incl
jg
cmpb
hlt
lahf
mov
fbstp
fwait
jmp
sti
mov
rcr
cmp
push
dec
enter
push
xlat
aas
push
inc
jg
add
adc
std
vpsubusw
daa
aaa
mov
iret
push
sbb
pop
sub
lcall
nop
sti
jne
sbb
out
into
cmp
ficomps
xchg
jae
fidivrl
mov
cmc
pop
mov
mov
cs
jb
fs
out
test
decl
mov
pop
inc
scas
fwait
jmp
mov
in
or
mov
inc
push
into
cs
jl
js
ja
ljmp
cmp
addr16
fdivs
loop
pop
inc
scas
dec
and
push
xchg
mov
push
lods
jg
ss
negb
mov
iret
fcmovbe
icebp
aas
mov
mov
popf
movq
jae
cmp
mov
jp
stos
xchg
xor
aam
and
cmp
mov
scas
dec
aas
scas
gs
mov
xchg
mov
call
mov
lds
pop
lret
loop
aaa
xlat
mov
out
jecxz
insb
pop
cmpsl
out
sti
mov
cmp
jbe
repz
jg
pop
fucomi
lahf
rol
idiv
sub
mov
out
sbb
push
jne
std
jg
mov
decb
out
jbe
mov
mov
push
mov
popf
idiv
mov
fsubrp
out
fisubrl
ficoms
mov
jmp
std
lea
inc
cmpsl
adc
roll
push
cli
sbb
mov
adc
and
shr
xor
rorb
aas
mov
add
out
adc
jno
push
xchg
jle
ljmp
push
dec
mov
in
jnp
push
adc
xor
inc
jp
imul
cmp
call
pusha
std
xchg
ljmp
push
out
loopne
mov
pop
mov
jae
pop
mov
stc
sbb
pusha
std
testb
mov
cmp
fucomp
pusha
std
testb
outsl
jg
mov
sti
xchg
jmp
in
lods
fbstp
mov
fwait
mov
popf
jl
mov
jmp
cmp
pop
fcmovu
mov
mov
loop
cld
jge
jne
popf
fistps
js
dec
inc
fildll
test
negb
mov
ficomps
js
dec
and
sbbl
icebp
arpl
mov
test
pushf
inc
and
inc
outsb
test
adc
test
cmp
mov
push
in
mov
sub
pop
das
fistpl
xlat
lret
fcmovnb
mov
gs
lret
lahf
lahf
call
xchg
int
fstpt
mov
stos
fcomip
mov
cmc
je
fwait
push
das
divb
jle
fxch
out
jno
push
mov
cltd
dec
cmpsb
cmpsl
ror
xchg
cmp
ss
sub
xchg
aad
cltd
xchg
aad
ror
ljmp
pop
cmp
cmp
clc
pop
lods
push
cltd
daa
mov
fmulp
jmp
sub
mov
bnd
scas
and
cwtl
pop
jge
mov
notb
cld
jle
pop
imul
ds
jbe
mov
jns
mov
cmp
mov
int3
fidivs
jo
adc
ffreep
jmp
mov
xchg
push
mov
push
out
cmp
cmpsl
js
dec
and
scas
mov
mov
push
xchg
mov
stc
dec
test
inc
adc
push
enter
ffreep
in
scas
xchg
test
jo
jge
cltd
popf
pslld
add
jecxz
jb
sub
jae
adc
adc
inc
mov
push
cmc
sub
jg
in
std
fsubrl
jle
jl
dec
jnp
adc
std
cli
fnstcw
fldcw
cld
sahf
jle
cmp
push
xchg
fwait
loopne
dec
jmp
or
iret
ljmp
cmp
add
imul
fstpt
dec
inc
scas
pop
and
test
cmc
adc
out
or
inc
add
sti
inc
jmp
iret
cmp
jmp
ret
in
ja
sub
dec
dec
lock
jmp
jg
jmp
in
pop
jns
pop
pop
in
lds
scas
pop
mov
or
in
mov
icebp
mov
stc
std
iret
cmp
cs
mov
cs
mov
hlt
fldenv
jl
leave
push
jnp
loopne
sbb
stc
push
sub
aad
loope
gs
sub
xlat
push
sahf
xchg
lret
mov
xchg
in
das
repnz
sub
das
scas
jmp
pop
test
jnp
pop
mov
mov
subb
imul
ficomps
bound
cmp
jns
inc
xchg
lahf
aas
fdivrs
cli
repz
shl
fbstp
cwtl
xchg
xchg
adc
fcmovu
ret
sar
std
les
and
sub
in
cmp
lcall
idiv
sub
or
inc
outsb
cmpsl
mov
mov
into
mov
push
in
outsb
loopne
in
sub
popfw
scas
loop
adc
pop
stos
enter
jbe
pop
test
popf
sub
pop
out
inc
test
inc
adc
je
loop
dec
adc
rolb
sarb
mov
or
in
js
testb
scas
xchg
iret
ret
repz
sub
jg
stc
sbb
jb
push
in
pop
push
xchg
fwait
loopne
pop
loope
xchg
shll
push
mov
nop
std
push
xchg
xor
in
adc
std
scas
mov
jg
xchg
inc
jmp
std
cltd
sub
sbb
stc
cmp
cltd
push
std
fadd
adc
and
fcoms
lahf
lret
pop
jge
pushf
mov
adc
lcall
fimuls
scas
push
jg
dec
icebp
cld
imul
sbb
xor
stc
lret
ljmp
pop
popa
jle
mov
iret
idivl
fcoms
ds
sub
jae
pop
mov
pusha
jp
jmp
jae
mov
mov
jg
jmp
idivb
cs
cli
mov
in
imul
mov
out
pop
pop
insb
aaa
pop
fildl
mov
sbb
cmpsl
mov
int
frstpm(287
outsb
mov
ds
int
fcmovne
outsb
mov
pop
in
sti
insb
cmpsl
fwait
popf
arpl
fwait
popf
arpl
int
mov
call
je
jae
mov
adc
push
icebp
subl
fisttpll
cltd
iret
push
outsl
lock
cltd
jmp
in
push
enter
fnstcw
enter
inc
cmp
repnz
loop
movsl
xchg
jmp
in
call
lock
sub
popa
pop
test
outsl
push
enter
test
mov
jl
jl
stos
mull
xchg
jae
ljmp
jecxz
repnz
repnz
mov
stc
jge
sub
scas
and
mov
ja
jmp
jno
jl
cmp
cmp
imul
cmc
lret
test
jmp
cli
cli
mov
fmull
xlat
ja
xlat
testl
shll
xchg
js
jmp
enter
cmc
mov
cmc
jge
sar
popa
mov
pop
sub
stos
adc
adc
jb
test
or
mov
in
push
in
or
jbe
test
dec
or
stc
jp
rorl
xchg
adc
mov
scas
mov
mov
adc
push
orl
inc
into
jecxz
cmc
sbb
enter
in
push
xchg
fwait
lock
jle
push
jecxz
jne
mov
xchg
and
icebp
addb
pop
mov
ljmp
xchg
int
mov
dec
and
cwtl
mov
outsb
inc
inc
dec
sbb
clc
jg
mov
pop
and
mov
inc
inc
cmp
inc
adc
aas
sub
and
xchg
insb
push
cmp
scas
xchg
scas
mov
lahf
mov
outsl
out
popf
or
lods
movsl
shl
jge
jle
and
movsb
and
enter
aas
in
sub
push
in
jae
clc
dec
mov
adc
mov
jbe
call
int
jecxz
mov
sti
test
stc
sub
rcr
xchg
and
sub
pop
xchg
jp
cmp
add
mov
stos
enter
fdivrl
in
sub
jbe
enter
lea
ja
inc
outsb
lahf
inc
dec
cmp
pop
sub
out
enter
mov
enter
rorl
xchg
lret
push
enter
stos
push
enter
lret
xor
jb
or
mov
outsb
push
inc
dec
sbb
iret
add
push
lahf
pop
loop
ljmp
ds
push
fdivp
inc
adc
lahf
dec
imul
mov
or
bnd
cmpsb
xchg
sarb
rcll
fcos
icebp
jb
inc
sub
cld
aaa
insl
add
icebp
scas
xor
lret
jp
mov
testl
stos
xchg
sti
jg
je
cmp
sti
xor
divl
mov
bnd
jb
arpl
in
movsb
sub
xchg
aas
stc
sub
aas
adc
cmp
sar
in
rep
mov
sahf
fistl
stos
ss
data16
mov
push
leave
xlat
mov
icebp
std
pop
lret
pop
sti
xchg
dec
mov
nop
outsl
ret
sbb
cld
idivl
xor
mov
stos
push
gs
push
aam
mov
pop
mov
mov
adc
sti
push
in
sub
es
in
sub
hlt
imul
jb
sub
stos
push
in
push
jns
je
enter
jecxz
xchg
shll
in
scas
nop
icebp
cld
das
mov
dec
lds
sub
out
enter
jle
mov
sbb
jg
mov
sub
pop
xchg
in
push
xchg
jnp
fsin
repz
fisubs
test
cmpsl
js
mov
xchg
mov
jge
test
mov
mov
mov
cmp
jecxz
jb
or
das
xchg
jmp
mov
xchg
fcmovne
jmp
inc
and
xchg
mov
mov
push
gs
push
in
push
mov
inc
dec
fsubrs
xchg
inc
dec
call
push
inc
ljmp
in
mov
push
into
lea
shr
cmpsb
mov
xor
jle
pop
out
pop
scas
pop
fnstcw
jl
xchg
in
pop
adc
es
jl
mov
mov
rorl
jnp
pop
rcrl
jmp
jmp
fsubs
test
pop
stos
lock
jb
or
test
sbb
jmp
enter
or
push
xchg
adc
in
xchg
xchg
pop
gs
dec
scas
cmc
stos
aam
scas
gs
cmp
cmp
pop
out
dec
jns
aaa
sub
scas
xchg
out
xorb
in
push
xchg
jnp
xlat
jecxz
test
addr16
movsb
lret
adc
scas
mov
or
xchg
jg
lods
repz
jecxz
fidivl
in
rclb
jp
lock
push
aam
mov
cmc
cmpsl
stos
inc
aad
test
jnp
repnz
iret
cmc
jp
movsl
fsubrp
adc
push
mov
stos
mov
mov
dec
inc
outsb
cmpsl
inc
dec
mov
outsb
fildl
xor
cli
mov
das
jno
subl
int3
dec
and
cmp
cmp
sahf
add
not
jecxz
pop
rorl
sbbl
and
push
inc
sbb
xorb
sti
sub
fistl
xorb
mov
aaa
andl
pop
or
outsb
push
lock
pop
adc
cmpsb
and
stos
orb
insl
pop
mov
outsl
andb
pop
mov
sbb
cltd
inc
or
or
and
add
add
pop
mov
pop
lock
inc
rorb
jo
mov
js
push
xor
jl
cmp
mov
jbe
sub
sbb
add
add
add
shlb
xchg
shlb
add
cmpl
mov
add
subl
into
add
aaa
mov
inc
sahf
add
add
add
push
decb
clc
sub
mov
mov
push
xor
cmc
shlb
mov
mov
add
je
xlat
add
mov
mov
add
out
add
call
pop
sahf
add
cld
leave
cmp
ds
sbb
decb
xor
insb
add
add
inc
sub
add
mov
pop
ror
pop
add
add
repz
mov
fcoms
js
js
lock
loopne
adcb
add
add
pop
cmp
sub
mov
mov
pusha
push
loopne
jo
jo
lock
shrb
pop
pusha
sbb
mov
pop
add
pop
ljmp
xchg
cmp
pusha
or
xchg
loope
jb
clc
or
pop
loopne
loopne
sarb
mov
sti
sbbl
pusha
and
add
lret
daa
orl
mov
std
shlb
cmc
loopne
add
add
cs
rclb
cwtl
jae
add
adcl
test
dec
jl
sbb
jmp
pop
jge
jae
lret
out
xor
inc
loopne
sarb
ffree
add
subl
and
mov
mov
add
js
lock
rolb
pop
add
adc
or
sbb
out
mov
loopne
sar
mov
outsl
add
add
call
add
add
add
mov
add
out
add
or
or
add
pop
cs
add
inc
cmp
repnz
js
mov
mov
insl
shrb
add
andl
lock
jo
lock
shrb
add
mov
ja
es
xor
fadds
add
add
lock
sarb
or
pusha
fwait
pop
mov
sbbb
push
add
movl
mov
loope
orb
add
jo
mov
mov
cmc
rcr
jnp
adc
dec
loopne
rclb
pop
inc
sub
je
xchg
add
add
loopne
test
sbb
xchg
orb
add
push
mov
sbb
add
push
pop
or
stos
stos
loope
outsb
add
add
jl
clc
or
sbb
add
add
js
lock
psrlq
add
sbb
pop
xchg
jmp
sbbb
and
aam
rorb
or
daa
outsl
shrb
pushf
xorl
or
lret
pop
ffree
into
xchg
imul
jl
testb
cli
inc
daa
lcall
cmpsl
scas
arpl
or
mov
inc
hlt
push
loopne
mov
gs
daa
jg
sub
sbb
dec
enter
decb
outsl
scas
xlat
cmp
enter
out
sbb
adc
pop
inc
xchg
xchg
hlt
push
and
jbe
push
icebp
jp
cs
ret
adcb
mov
dec
in
dec
sti
jl
xorl
cmp
xchg
add
push
jg
cmp
ja
leave
adc
pop
int
inc
idivl
loopne
pop
std
sbb
jmp
test
xlat
push
pop
popf
dec
pop
mov
mov
jae
cmp
stos
in
aad
repnz
clc
pushf
jbe
rolb
out
ds
lds
pop
shlb
push
stos
pushf
fisubs
movsl
jno
sahf
call
fiadds
sbb
aam
mov
sub
popf
into
rorb
sbb
cmp
addr16
jno
cmpsb
leave
jmp
or
adc
outsb
xchg
out
mov
fscale
call
sub
fs
in
push
outsb
sbb
lods
lds
push
add
scas
xchg
mov
lcall
jnp
jp
sub
jmp
shl
sbb
cli
cmpsb
lock
push
pop
sbb
xor
jb
imul
int3
scas
int
insb
xchg
cmp
add
insl
mov
aad
sbb
js
mov
jb
push
fildl
jmp
inc
ljmp
lods
jle
xor
cmc
add
ss
cmpsl
dec
ret
jg
push
cli
imul
mov
and
inc
fists
pop
fiadds
lret
inc
shl
je
pushf
bound
inc
sbb
cmpsl
ja
jg
je
cmp
nop
ret
shr
cmpsb
mov
xor
inc
pusha
mov
aam
mov
icebp
es
cmpsb
popa
cvtpi2ps
jmp
daa
addr16
mov
into
in
lock
fwait
xchg
jge
jmp
jle
mov
pushf
cs
test
lcall
nop
mov
mov
sti
xchg
jmp
dec
mov
pop
cli
mov
fidivs
or
lahf
inc
stc
or
xchg
and
jp
add
jno
inc
jbe
inc
into
mov
or
mov
ret
cld
inc
and
test
in
add
xlat
dec
jge
repnz
fnsave
xor
repz
filds
xlat
push
mov
lea
mov
aas
shrb
mov
int
and
sbbl
xchg
scas
mov
scas
test
jmp
shlb
stc
cmp
mov
les
mov
pop
stos
inc
mov
jns
mov
cmpsb
xor
stc
test
jle
lea
test
push
stc
mov
lcall
lahf
fsubrs
mov
jge
loop
cld
rorb
sbb
fwait
mov
jmp
adc
cmc
pop
sbb
jmp
jb
js
aaa
enter
mov
sub
mov
mov
stos
add
outsl
out
rcll
or
arpl
pavgw
inc
mov
push
add
cmp
insl
push
xchg
pushf
outsb
mov
iret
or
in
xchg
jo
call
mov
xlat
adcl
or
lahf
clc
mov
and
xchg
jae
add
in
xchg
sub
push
dec
sbb
bound
jl
cmc
and
ret
jnp
dec
jg
mov
push
xchg
jb
pop
sbb
andl
int3
add
lods
jmp
inc
cmc
cmp
adcl
leave
cmp
mov
sub
js
inc
notb
adc
sbbl
popf
into
or
jb
call
aad
xchg
fld
and
or
sbb
mov
jo
mov
jecxz
sub
fstpt
in
jcxz
and
addl
fwait
push
dec
push
sub
sti
ror
in
insl
xchg
loope
cmpsb
jge
adc
pop
insb
aam
xchg
mov
fsubl
imul
xor
inc
xchg
push
xchg
sub
inc
push
int3
sbb
fadd
inc
xor
xor
inc
enter
and
pop
sbb
jle
push
in
push
clc
aaa
out
imul
pusha
popa
sbb
xchg
es
mov
cmc
push
in
push
aas
sub
pop
mov
call
imul
out
pop
repz
shlb
inc
add
js
adc
mov
lds
jno
jp
in
push
mov
pop
fidivl
aad
sbb
jo
test
mov
mov
repz
fsubs
stc
adc
xchg
push
sbb
shlb
imul
orl
sbb
push
pop
mov
dec
xchg
jle
sbb
je
mov
movsb
jno
xchg
sub
push
dec
out
shll
xor
sbb
lock
xchg
sub
or
mov
cmpsb
add
xchg
xchg
push
imul
jo
and
test
andl
shll
xor
aam
pushf
jp
mov
push
cmp
jl
push
jmp
loopne
jb
mov
enter
jbe
dec
jno
cmp
psllw
cmpsb
lret
add
mov
out
or
xor
and
cmp
adc
xor
sbb
and
mov
xlat
shrl
sbb
cmpsb
mov
jg
dec
sub
sub
daa
jae
fsubs
and
sub
mov
or
daa
jmp
xor
lcall
mov
ss
iret
push
xchg
int3
inc
mov
hlt
sbb
dec
test
fwait
notb
ret
cld
ds
insl
jg
fwait
mov
daa
pop
enter
daa
add
sahf
dec
mov
push
out
jp
dec
ss
adc
xorb
in
cmc
jno
and
in
movsl
fdivs
es
popa
movsb
dec
subl
adc
je
nop
xor
fstpl
push
and
push
add
insb
cmp
inc
cmp
into
imul
xor
pop
daa
inc
ret
mov
lcall
data16
nop
cmp
gs
mov
cltd
dec
mov
cmp
cmp
notb
pop
loop
mov
mov
xchg
daa
movsb
push
and
sub
nop
ret
cmp
cmp
pop
cmpsl
pop
mov
je
pop
cmpsl
nop
ret
shl
jno
test
in
mov
adc
jge
adc
outsl
or
pushf
sbb
mov
push
stos
cmp
pop
dec
repz
sbb
hlt
incb
xorl
jecxz
xchg
cmp
cltd
fs
pop
push
jno
imul
jo
mov
pop
ds
add
in
push
mov
fcmovu
push
rcl
mov
nop
repz
mov
pop
lcall
adc
movsb
cmp
movsb
or
mov
pushf
aaa
loop
outsb
xchg
js
aam
lods
lods
mov
mov
mov
in
aaa
scas
daa
fwait
pop
mov
jne
stc
in
mulb
inc
inc
push
mov
aaa
aaa
rolb
and
sbb
add
jle
mov
and
mov
leave
jae
mov
scas
call
dec
sub
xchg
stos
cs
out
lds
imull
stos
fisubrl
add
jnp
jl
mov
into
fisubs
push
out
and
xchg
push
stc
dec
in
ljmp
insl
shll
loopne
lcall
push
mov
std
push
cmc
movsb
dec
sbb
and
nop
cmpsb
sub
sarb
dec
xlat
mov
jge
pop
pusha
lahf
or
cmc
nop
xchg
iret
and
leave
jnp
pop
insb
pusha
addr16
adc
inc
lahf
mov
shll
test
cmpsl
mov
pop
pop
jmp
fsin
repnz
sub
xchg
mov
dec
mov
pop
repnz
xchg
scas
icebp
sbb
ds
mov
aaa
pushf
sbb
add
mov
add
out
stos
jge
xchg
or
jmp
outsl
sub
sbb
sbb
dec
scas
mov
cmp
ficoms
adc
cmpsb
and
inc
jle
out
cs
leave
xchg
mov
rolb
sub
xor
aaa
add
je
pop
es
dec
scas
nop
inc
lods
fdivr
and
roll
test
gs
lds
mov
xor
xor
sbb
ret
cwtl
pop
cmp
jnp
sbb
nop
jae
and
jl
xchg
xchg
xchg
mov
dec
out
rolb
add
popa
cmpsl
pop
ja
jno
lods
rcll
cmp
imul
outsl
shlb
cmp
push
icebp
mov
ljmp
jno
jmp
rorl
ret
cld
int
push
out
lods
and
stos
gs
adc
out
lods
je
pop
pop
pop
cld
inc
test
lahf
push
mov
pop
cmp
mov
xlat
mov
pop
push
jecxz
dec
int
xchg
imul
sub
hlt
mov
aaa
pop
cmp
dec
and
adc
sbb
mov
aad
cltd
mov
fmul
mov
popf
xchg
add
repnz
dec
movsl
inc
inc
mov
jb
dec
das
mov
rcrb
std
stos
fdivl
in
addl
fsts
sti
cli
shrl
push
subb
int
inc
mov
xorl
adc
pop
packssdw
movsl
stos
mov
and
scas
movsb
cmp
ljmp
idivl
insb
pcmpeqb
test
cmp
adc
dec
xchg
jnp
sbb
outsb
xchg
pop
stos
xchg
sbb
pop
dec
xchg
aam
das
xlat
xlat
ds
push
dec
fimuls
fcomps
in
ja
int
and
mov
fwait
pop
jno
cmp
fimuls
push
pushf
push
es
in
sbb
outsb
push
lock
dec
cmp
std
outsb
testl
xchg
or
push
dec
daa
dec
dec
loop
jo
int3
mov
and
mov
pop
cwtl
ficoml
add
mov
sub
mov
inc
mov
pushf
movsl
dec
repz
std
cmpsb
bound
xchg
push
cli
fptan
jns
je
mov
lea
push
cwtl
push
cs
rcl
repz
les
popf
mov
ss
lret
push
add
mov
cwtl
jne
insb
std
mov
jnp
test
sub
push
jp
in
fsts
fdivl
lahf
push
cmp
sub
mov
mov
cmp
lret
in
lock
push
testl
je
in
fsubp
xchg
iret
out
scas
inc
pop
jns
in
repz
imul
ja
xlat
mov
cmp
xor
lds
jnp
add
fxch
mov
in
jp
fcomps
ss
dec
fisubs
push
cld
int3
sub
xor
shlb
aas
shlb
cmp
xchg
xor
mov
mov
xor
push
mov
aaa
xchg
frstor
mov
jl
sbb
stos
fcompl
jno
mov
push
out
push
imul
gs
repnz
imul
out
jno
ds
adc
faddl
mov
sub
icebp
adc
popl
or
rcr
shll
idivl
pop
loop
sub
es
sahf
cld
in
out
push
dec
movq
sahf
jns
out
sbb
add
outsl
adc
int
mov
arpl
jmp
nop
dec
pusha
or
sub
pop
adc
dec
sbb
xchg
xchg
fdivr
leave
std
sbb
or
ss
jecxz
js
ret
fwait
fs
cmp
add
xor
cmp
pop
mov
or
outsl
shl
fidivs
call
sti
xor
neg
mov
imul
pop
lock
js
inc
loopne
jae
test
jecxz
fcmovne
jecxz
xchg
out
or
mov
jle
dec
clc
jno
mov
xor
test
addr16
or
fcmovbe
xor
scas
sbb
sbb
cmpsl
adc
les
mov
push
lock
mov
jbe
addr16
popfw
push
add
pop
faddl
push
mov
faddl
push
or
sbb
mov
shll
lret
je
jle
sahf
cmp
sub
sub
sbb
lods
and
lods
test
shll
xlat
mov
adc
pop
push
mov
arpl
xchg
dec
sahf
fimuls
sbb
gs
pop
push
stc
stc
jecxz
xor
in
xorl
push
jle
call
loopne
xchg
repz
inc
jnp
cld
icebp
xchg
and
loope
sahf
out
mov
mov
rcrl
rcrb
repnz
fstpt
stc
addr16
jnp
das
xor
jns
jae
neg
fidivs
fidivs
mov
dec
ja
sbb
pop
outsl
cmp
addr16
cmp
ret
or
lock
mov
mul
xor
fiadds
into
out
mov
nopl
jp
sbb
lods
jmp
jnp
lret
and
adc
jb
scas
jge
inc
xlat
sub
into
fs
in
or
jbe
adc
mov
fdivl
cmp
adc
fistpll
inc
das
out
loope
idivl
mov
push
xorb
stos
inc
mov
cli
push
adc
jbe
gs
insb
fisttpll
orb
ja
fsubr
lahf
mov
idivl
jae
ret
test
add
in
pop
xchg
add
pop
testl
int
push
cltd
xchg
sahf
mov
inc
loopne
fwait
es
lods
enter
ficomps
loopne
rolb
fidivrs
sarb
inc
icebp
pop
add
stos
rcll
sub
xchg
shr
mov
int
ficoml
mov
jp
jle
out
orl
pop
jno
out
data16
pop
mov
adc
inc
icebp
and
ljmp
xchg
mull
hlt
sti
mov
cwtl
fidivrs
repnz
push
mov
add
mov
xchg
and
sbb
test
cmp
push
jne
xlat
aaa
pop
jg
mov
jle
fwait
jae
es
lcall
out
ficompl
leave
idivl
pop
rcrb
dec
jge
js
mov
jg
shll
scas
dec
jle
pop
jge
mov
cmp
dec
pushf
clc
outsl
mov
pop
jge
aas
arpl
das
mov
xchg
movl
jg
cmp
int
int
dec
mov
lret
arpl
pop
iret
sub
mov
xchg
sub
popf
into
pop
lcall
in
xor
cmpsb
jmp
pop
ficoms
fnstcw
outsl
xor
sub
mov
pop
fsts
hlt
loop
flds
jg
jecxz
dec
std
jp
in
mov
mov
jge
mov
sti
enter
jno
je
mov
mov
mov
jmp
cmp
je
or
dec
mov
aad
repnz
shl
and
push
scas
jg
fstp
imul
pop
je
push
sbb
cmpsb
pop
repz
jle
out
lock
xlat
sbb
ficoml
jmp
jmp
jle
pop
xor
fwait
xor
fadds
inc
sbb
or
icebp
ret
stc
cmp
std
je
pushl
std
outsl
in
mov
mov
out
xchg
dec
dec
lock
jmp
rolb
inc
inc
ffreep
xchg
adc
dec
sarb
call
stos
movsb
push
and
push
hlt
push
sub
or
mov
pop
and
loopne
mov
int3
std
sub
inc
incl
enter
hlt
sub
call
pushf
and
and
nop
outsl
xchg
jl
push
pop
pop
inc
ljmp
jp
and
add
sbb
loopne
popa
adc
lahf
in
fistl
mov
pop
out
and
jb
out
jno
xchg
jl
movsl
out
xchg
cli
out
adc
into
outsl
adc
pop
dec
sahf
and
xchg
xchg
leave
and
adc
daa
jg
ror
xchg
out
fdivrl
push
add
notb
rclb
xchg
xchg
aas
jae
hlt
call
repnz
sahf
les
mov
cmpsl
fbld
scas
xchg
pop
push
daa
push
out
add
pop
nop
into
and
and
add
aas
nop
pop
add
add
hlt
jle
test
rorb
outsl
jo
in
pop
pop
js
sub
or
sbb
sti
push
ljmp
loope
into
jl
jecxz
jg
jns
in
addr16
icebp
mov
testl
leave
mov
testl
sti
sarl
arpl
imul
loope
adc
jecxz
iret
loope
aad
xor
call
add
lds
sahf
pop
sti
and
out
sarl
js
lahf
fadds
cli
inc
sbb
daa
cmpsb
jmp
popf
aas
push
fwait
out
jecxz
loope
out
js
jg
das
jl
rcl
jo
mov
pop
inc
add
cmpl
rcrb
mov
push
cli
mov
inc
adc
dec
pusha
sbb
mov
jge
sub
cli
fimuls
push
out
test
movsl
mov
pop
xchg
jae
xchg
jnp
std
jl
das
call
inc
aas
stos
dec
aas
test
ds
aas
repnz
std
sbb
mov
out
sbb
repnz
xchg
std
stos
aaa
fdivr
rolb
mov
ljmp
repz
and
idivb
dec
cmp
clc
cmpsb
inc
mov
aam
pop
add
popf
xchg
dec
mov
incb
ret
mov
xor
les
out
add
cmc
mov
inc
outsb
fnstsw
rcrl
imul
incb
iret
pop
mov
fdivrp
outsl
fidivs
fisubs
in
dec
cmp
dec
jae
fidivrs
sbb
sti
fistpll
jp
shlb
fistpll
mov
insl
rol
push
xchg
out
mov
sahf
jp
mov
out
mov
cmp
int3
mov
jle
push
rolb
cltd
gs
jmp
push
into
in
mov
aas
jle
mov
out
add
rcrb
jecxz
in
fs
fisttpll
fwait
jl
ret
mov
push
jl
je
sar
in
jns
std
sti
pop
jl
loop
add
push
out
mov
std
call
fmull
std
in
sbb
movsb
mov
dec
arpl
pop
sti
sbb
and
mov
std
xchg
pop
dec
lahf
ja
add
idivl
test
jbe
je
js
xor
dec
xlat
add
dec
inc
mov
dec
fbstp
pusha
shl
pop
inc
cli
pop
cmp
ficoms
sbb
jge
cmpsb
pop
aas
inc
imul
pop
sub
pushf
cmpl
mov
dec
rcll
div
das
fisubl
mov
loope
inc
mov
repz
lahf
jle
fstps
das
cmp
fcmovnu
cli
popf
daa
push
mov
mov
add
ds
mov
add
fdivrp
or
xchg
in
aaa
jg
jno
das
int
or
clc
in
cmp
and
repz
stos
in
daa
out
clc
xor
jmp
test
mov
add
arpl
xor
or
xchg
int
jnp
mov
sbb
mov
add
or
test
jle
les
es
jle
cwtl
icebp
idivb
loopne
lret
rorl
push
push
dec
mov
push
pop
in
xor
jp
cmp
and
xchg
mov
mov
push
jb
jmp
jge
xlat
inc
xchg
add
movl
cld
fcomps
xor
out
mov
jle
clc
push
mov
sti
lock
test
imull
ljmp
jle
mov
test
shlb
or
ss
aad
inc
jg
sub
repnz
pushf
adc
xchg
shl
push
and
cmpsb
sbb
stc
cmp
sahf
daa
and
in
sti
arpl
mov
xchg
lahf
mov
in
xchg
nop
push
mov
aas
leave
sub
cs
xchg
sub
out
xor
mov
mov
pop
or
xchg
je
adc
dec
sbb
or
subl
sub
pop
cmc
mov
cli
jp
icebp
stc
lods
xlat
gs
iret
idivb
sti
dec
pop
jle
out
lods
daa
das
aas
push
popf
mov
pop
xor
test
pop
imul
cld
arpl
xchg
adc
fs
cs
push
ja
jg
orb
cld
bound
das
into
stc
movsb
stos
mov
sub
lds
sbb
mov
add
jne
xchg
push
lods
mov
into
and
push
aam
pop
jb
pop
lahf
pop
popa
mov
jmp
repz
xchg
outsl
not
mov
lods
dec
fcoms
pop
mov
cmp
jecxz
addr16
xchg
outsb
fcomi
addr16
dec
sti
leave
cld
test
dec
or
movsl
in
xchg
jo
daa
and
mov
mov
fwait
jae
jbe
int3
xchg
stc
jmp
push
and
nop
pop
push
xlat
fcoml
jg
inc
xchg
fsubrl
sub
push
push
addr16
dec
imul
into
aad
scas
aas
scas
repz
imul
cmp
insb
daa
das
mov
outsl
into
mov
or
loopne
mov
lcall
jbe
xor
inc
pop
test
in
aad
ds
push
negb
cli
adc
stc
je
lock
ss
imul
lods
xchg
xor
jle
cs
dec
rcll
mov
xor
jns
dec
fmul
jne
neg
mov
dec
inc
sub
push
mov
jmp
sti
out
jge
adc
gs
mov
mov
scas
outsl
dec
pop
pop
aad
fucomp
mov
mov
mov
cmp
or
std
js
lret
sbb
lcall
push
cld
mov
je
pop
xchg
jge
nop
mov
and
sar
into
mov
inc
int
mov
mov
imul
scas
push
faddl
call
or
call
ds
aas
rorb
ret
popa
pop
bound
call
insb
fiaddl
or
insb
sbb
shrb
filds
outsb
pop
pop
add
sbb
jmp
scas
add
add
imul
jmp
negl
pop
aas
repz
idiv
add
pop
loopne
les
xchg
pop
daa
sub
or
out
lods
sbb
or
jle
push
add
dec
arpl
xor
aam
cmp
xor
mov
xor
mov
xchg
jle
mov
xchg
mov
push
push
rcrb
mov
jmp
dec
inc
xor
inc
xor
cmp
mov
mov
je
jge
nop
sub
pop
hlt
insl
push
push
jecxz
jns
repz
test
jle
adc
inc
cmc
or
call
popl
mov
dec
out
add
push
pop
je
call
jb
push
std
sahf
lcall
movsl
xor
cmc
mov
test
out
adc
pop
add
pop
popf
pop
mov
icebp
inc
xor
leave
push
push
sbb
sub
mov
fidivl
cmp
repnz
in
sbb
xor
jns
mov
daa
movsl
push
bound
xor
xor
mov
jbe
xchg
ja
data16
cmp
mov
pop
push
push
outsb
dec
pop
cmc
lods
mov
sub
stos
insb
in
mov
sub
fcmove
xor
cli
mov
aaa
lods
repz
mov
pushf
fdivrl
or
dec
add
mov
cmpsb
sub
dec
sub
push
les
push
pop
cltd
fwait
adc
out
shlb
daa
ljmp
ljmp
xor
push
test
or
lods
xor
sbb
sub
pop
adcb
sbb
adc
inc
add
ficoml
and
cwtl
data16
cmpsb
and
adc
jae
and
fldl2t
add
cltd
loopne
es
mov
insl
push
rclb
mov
jmp
push
enter
jbe
int
dec
aam
push
and
add
fisubrl
jmp
pop
sub
adc
or
add
dec
or
mov
adc
push
pop
inc
popa
mov
test
dec
pop
push
sub
push
inc
jns
push
mov
mov
jmp
xchg
xchg
add
jae
adc
mov
add
mov
es
mov
jmp
push
shlb
jb
inc
mov
xchg
stos
inc
cli
pop
and
mov
cld
mov
cwtl
daa
xchg
push
sub
sub
mov
mov
es
pop
movsl
stos
cmp
pushf
cs
pushf
rcll
pushf
sub
lret
and
inc
cmp
cmp
pop
sub
imul
aam
hlt
jne
pop
dec
xchg
mov
xchg
into
sub
or
add
xor
arpl
dec
add
rcrl
sub
adc
movsl
bound
call
or
sbbb
mov
inc
test
inc
mov
push
mov
movsb
xlat
in
int3
outsl
adc
and
test
push
xchg
lcall
test
movsb
repnz
jnp
push
and
or
add
lcall
fdivl
and
mov
int
add
cmpsb
cwtl
push
repnz
adc
out
sub
pusha
mov
pop
mov
jmp
pop
mov
repz
xchg
mov
xchg
adc
push
dec
ret
mov
pusha
popf
sub
mov
xor
ljmp
xchg
scas
gs
jmp
movsb
imul
inc
movsb
push
fimull
or
cmp
adc
sbb
ss
jbe
hlt
xor
push
add
xchg
rorl
cmpl
push
sbb
sbb
push
xchg
sbb
aad
subl
iret
add
insb
mov
or
rcrb
push
xchg
ror
inc
arpl
cs
mov
movsl
xchg
or
in
scas
dec
scas
leave
es
xor
or
scas
adc
stc
sbb
mov
in
mov
sarb
or
jmp
sbb
fists
xchg
jmp
sbb
sub
and
decb
push
or
push
loopne
rcll
icebp
cmp
dec
pushf
out
mov
sbbb
or
mov
movsl
dec
clc
sahf
clc
jge
cwtl
stos
or
jne
sub
mov
dec
cmpl
cli
cmp
xchg
xchg
add
push
add
inc
mov
mov
cmc
jp
push
xor
push
addr16
lock
mov
jmp
aaa
mov
cld
cmp
or
adc
add
aam
jg
shrb
fs
pop
cltd
or
adc
subb
sub
outsb
xchg
mov
mov
pop
sahf
into
cmpsb
push
mov
adc
testb
add
push
bound
outsb
pop
adc
cmp
in
inc
jmp
fsubrs
es
test
in
les
lret
dec
sub
inc
add
les
and
aaa
mov
shrl
add
or
or
frstor
sub
sbb
and
in
in
pop
out
xchg
sub
cmp
repnz
sub
or
push
adc
sbb
cmp
adcl
jl
dec
pop
sbb
das
int
sarb
fsts
mov
jl
adc
popl
xchg
jo
jmp
ret
js
jl
pushf
pop
sub
test
inc
inc
sub
pop
or
dec
test
ret
out
inc
mov
mov
clc
mov
push
add
cli
sbb
lds
push
mov
mov
ret
out
inc
mov
stos
add
inc
adc
test
inc
enter
nop
pop
add
or
xchg
add
and
pushf
cmp
pushf
mov
enter
inc
loope
bound
inc
jle
negb
adcb
push
push
cmp
push
mov
inc
xchg
mov
dec
mov
arpl
mov
inc
cmp
xchg
into
xchg
loope
icebp
scas
and
and
fwait
js
mov
and
filds
repnz
xchg
jecxz
aaa
dec
iret
add
cmp
xchg
add
ret
loopne
bound
or
test
inc
inc
gs
jl
icebp
sub
nop
mov
adc
aam
push
inc
loope
xchg
rorl
mov
pusha
cmp
xchg
lock
cmove
mov
clc
push
or
test
sbb
or
or
insb
adc
and
scas
xor
or
clc
inc
fs
and
int3
adcb
add
lcall
or
dec
pop
mov
jo
or
in
subb
cltd
mov
orb
sub
cmovge
inc
mov
cmpsl
pop
adc
push
sub
xchg
in
dec
sub
cli
adc
pop
or
sub
mov
pop
sub
aas
mov
add
push
xchg
and
subb
int
pop
xchg
nop
movsl
in
inc
subb
add
pop
xor
sub
add
cmpsb
pop
loopne
xchg
dec
test
imul
decb
test
xchg
add
icebp
xor
push
cmpsb
gs
repnz
scas
repz
or
in
andb
dec
cmpsb
ret
add
push
mov
mov
mov
and
imul
data16
fwait
xchg
pop
ljmp
lahf
push
or
cmpsl
in
cmpsl
gs
sti
shll
dec
orl
test
xor
adc
push
lcall
add
inc
popf
lahf
rcll
inc
in
subb
jle
in
mov
add
dec
or
iret
shl
sahf
jmp
mov
push
xchg
adc
imulb
adcl
arpl
inc
pop
stc
shrl
xor
dec
xor
subl
sbb
add
sbb
add
xchg
clc
sbb
xchg
aas
aas
cmpsb
mov
lods
xor
cmp
movsb
jl
notb
bound
mov
clc
stos
mov
mov
cwtl
xlat
leave
in
mov
les
jae
std
inc
in
pop
je
jae
sbb
adc
xlat
gs
adc
jno
xchg
lret
arpl
rorb
xchg
out
out
xchg
imul
sub
pop
pop
mov
daa
iret
lea
xor
jne
push
inc
data16
or
or
stc
test
xor
insl
xchg
ss
cmp
dec
sub
shrb
dec
mov
inc
sub
leave
repz
dec
sbb
xor
sub
mov
repnz
cltd
adcl
pop
mov
ljmp
vpunpckhbw
bound
cltd
mov
imul
lds
iret
iret
xor
push
ficoml
sub
mov
mov
lods
lret
bound
mov
pop
mov
fwait
push
bound
mov
lods
dec
das
rcl
xchg
mov
cmpsl
xor
mov
or
add
ficoml
push
mov
xchg
in
ret
ljmp
lret
or
and
mov
mov
mov
ret
dec
mov
rorb
imul
cwtl
cld
movsb
cmp
inc
xchg
popf
push
xchg
push
dec
xchg
jb
mov
and
dec
push
aaa
rcrl
xor
mov
mov
stos
int3
ret
mov
sub
mov
pop
or
dec
push
push
pusha
jmp
ds
lods
xchg
cmp
aam
jno
mov
dec
lods
dec
lret
rcll
push
mov
adc
leave
inc
mov
lods
fsub
cmp
cmp
xor
bound
xchg
out
xchg
sub
cltd
xor
mov
cmp
mov
lods
sbb
sahf
mov
dec
sub
in
mov
fcoml
push
ljmp
hlt
mov
ds
fwait
xchg
inc
fbstp
repz
inc
or
cmpsb
and
scas
and
xchg
in
mov
stos
sarl
sbb
xor
cmpsl
and
lret
and
aad
fs
dec
lret
bound
push
xchg
pop
arpl
dec
sbb
cld
mov
mov
pop
jge
mov
pop
cltd
pop
insl
enter
sub
sub
cltd
xor
push
or
mov
xor
into
adc
mov
sbb
clc
cltd
sbb
test
mov
sub
mov
sbb
dec
cmpsb
mov
inc
addr16
cbtw
test
insb
arpl
dec
sub
lods
in
bound
stos
out
bnd
sbb
jne
mov
scas
mov
adc
movsl
icebp
sbb
test
jns
lea
aad
mov
mov
lods
lret
leave
rcrb
mov
fwait
cmp
xor
jns
imul
sub
int3
rcrl
repnz
cld
jmp
cltd
arpl
ljmp
inc
mov
ret
lods
test
dec
hlt
inc
mov
ficoms
jmp
enter
adc
mov
inc
mov
xchg
mov
test
pop
inc
inc
mov
das
cs
mov
std
lahf
pop
arpl
daa
mov
cltd
fldcw
mov
adc
enter
pop
mov
pop
or
mov
dec
into
dec
mov
lock
stos
data16
lods
mov
dec
mov
bound
pusha
sub
addr16
pop
push
jb
jb
fcoms
xchg
and
jne
sub
cmp
cmpsl
call
mov
fsubl
mov
or
mov
cld
outsb
mov
retw
xor
and
gs
out
inc
js
movsb
mov
cs
push
or
xchg
call
test
dec
fwait
mov
xchg
fdiv
mov
insl
add
gs
sub
pusha
push
js
in
insb
imul
push
cmpsb
movsl
lods
and
sub
jp
pop
lahf
adc
mov
lods
inc
imul
outsl
sub
adc
nop
int3
fdivrl
lods
in
mov
mov
lahf
aas
pushf
push
xchg
or
inc
cld
xchg
and
cwtl
fwait
cltd
xchg
xorl
in
add
jne
aas
test
mov
in
iret
aad
rcll
cmpsb
and
xchg
xchg
scas
lret
rcll
movsb
in
cltd
ss
inc
inc
pop
sbb
pop
sbb
mov
or
jmp
movsl
xchg
leave
es
outsb
mov
jae
push
jle
pop
insb
enter
out
cli
aaa
sti
mov
adc
adc
cltd
push
mov
scas
pop
das
icebp
sbb
xchg
insl
pop
sarl
inc
jne
leave
mov
insl
leave
test
cld
mov
stc
and
push
pop
fwait
inc
cs
in
pop
mov
cmp
push
sub
mov
jno
sub
pushf
in
jb
ficompl
test
sbb
shll
int3
enter
icebp
sti
push
ljmp
inc
or
loope
mov
mov
push
xchg
and
mov
mov
mov
push
dec
je
mov
int3
adc
pop
xchg
sahf
outsl
xor
push
movsb
mov
ss
lahf
xchg
xchg
cmpsl
lret
aad
addr16
scas
lock
xchg
mov
enter
lcall
lock
push
xor
mov
outsl
cmpsb
xlat
sbb
shrb
xchg
cmp
mov
jbe
cmp
pop
push
dec
sahf
and
aad
int
sub
int3
std
es
and
and
test
adc
rclb
movsb
in
fwait
addr16
xchg
out
in
aam
pop
lea
lret
lods
into
sub
or
xorb
push
fiaddl
mov
jae
pop
pop
push
pusha
daa
in
xchg
push
dec
mov
sub
xor
xchg
pop
pushf
push
xchg
push
stos
sahf
push
jle
jne
in
sub
rcrl
insl
inc
inc
sahf
outsb
push
push
mov
ret
movsb
shrl
pop
testb
loopne
insb
mov
movsb
in
pop
repnz
add
aaa
cmp
outsb
jp
test
int
pop
lret
dec
pop
jb
iret
mov
adc
sbb
mov
lahf
add
pop
es
and
data16
les
push
in
fdivl
push
mov
ss
mov
enter
sbb
mov
dec
mov
scas
lret
dec
sub
mov
mov
popf
pushf
xchg
push
pusha
mov
xlat
sbb
loopne
loopne
push
adc
movsb
aam
lcall
push
es
pop
in
cli
imul
sbb
cmpsb
sub
mov
addr16
mov
xchg
inc
push
arpl
push
cwtl
mov
cltd
pop
das
hlt
jne
bound
ja
test
cmp
mov
movsl
add
xchg
aam
gs
push
fisubrl
cltd
insl
test
cs
or
cmpsb
cltd
add
cmpsb
into
pop
xchg
sahf
pop
mov
call
sbb
xchg
jp
cmpsb
cs
cli
cmp
pushf
outsb
rcr
bound
jle
scas
sub
push
xchg
push
mov
cmpsl
cmp
hlt
pop
fs
ds
mov
cmp
mov
mov
push
mov
push
pushf
pop
push
movsl
arpl
hlt
cmpsl
xchg
sbb
push
dec
fistl
pop
repz
test
pop
outsb
mov
xchg
xor
int
daa
test
push
in
push
adc
pop
xor
mov
mov
hlt
sub
sub
dec
call
mov
adc
cli
pushf
xchg
mov
lea
call
test
add
insl
cs
sbb
pusha
test
sub
es
push
or
xor
xchg
lahf
adc
in
pop
mov
lods
leave
pop
pushf
mov
bound
aam
mov
cld
sbb
cwtl
adc
mov
adc
xor
data16
into
sub
xchg
push
imul
mov
sbb
inc
pop
test
inc
test
imul
adc
or
push
mov
xchg
push
addr16
enter
and
test
mov
adc
add
js
mov
pop
adc
adc
ret
lret
sti
dec
jg
imul
fstps
aaa
imul
and
je
aas
sbb
cmp
mov
bnd
and
mov
mov
psllq
inc
jecxz
xchg
sub
in
movsb
in
aam
pop
rcrl
js
dec
push
push
lea
and
data16
push
push
lcall
push
sahf
cmpsb
sbb
scas
pop
xchg
aas
ret
inc
xlat
lods
dec
stos
mov
mov
scas
push
xor
xor
pop
lcall
xorb
push
xchg
mov
push
pop
xchg
xchg
xchg
imul
fucomip
inc
out
stos
in
sbb
call
push
jnp
dec
mov
fidivl
or
iret
int3
xor
aaa
xchg
push
outsl
mov
aad
adc
add
aam
fcompl
nop
lods
cmpsb
and
mov
orb
xchg
mov
inc
shld
aad
in
mov
les
pusha
mov
push
mov
pop
clc
ljmp
pop
add
aam
pop
adc
mov
fwait
pop
lcall
xor
mov
int3
pushl
cmp
xlat
nop
dec
jnp
mov
dec
inc
xorb
dec
cltd
xchg
xchg
std
or
test
mov
int3
pop
sub
in
negb
ljmp
xor
das
mov
fsub
aaa
xchg
sbb
inc
jno
lea
mov
mov
add
lods
pop
xchg
pop
outsl
dec
sub
test
lods
dec
lret
dec
lret
mov
ror
push
or
lea
and
mov
push
scas
jp
add
xchg
cmc
mov
das
fmull
addb
or
clc
sub
dec
dec
push
dec
mov
inc
xor
push
xchg
or
pop
ret
int3
pop
divb
imul
dec
adc
mov
sub
push
es
lcall
lahf
add
repnz
mov
aas
pop
pop
addr16
mov
mov
jae
movsb
roll
mov
pop
insl
aas
jne
and
mov
adc
inc
mov
cmpl
call
cltd
inc
or
sbb
or
push
popa
sbb
inc
js
ret
je
hlt
mov
sbb
mov
sahf
sbb
add
xorb
add
cwtl
ss
popf
movsb
sbb
sub
sub
sarl
loope
xchg
mov
les
mov
xor
or
sbbb
jmp
mov
stc
and
add
mov
push
lock
jnp
add
xchg
cli
ljmp
cmpsl
mov
ret
ljmp
xor
loopne
ljmp
movsb
int
outsb
mov
mov
pop
dec
je
ljmp
mov
shl
push
outsl
or
out
imul
pop
test
xchg
jmp
inc
jge
xchg
sbb
test
push
mov
pop
mov
pop
jp
xchg
mov
add
mov
sub
mov
lods
imul
rcl
inc
jmp
jns
loope
and
mov
out
mov
add
shrb
pop
xor
test
and
imul
mov
pusha
outsl
inc
mov
mov
adcl
pop
cmp
mov
outsl
dec
mov
loope
std
jbe
test
cld
mov
aam
sbb
popa
lock
xchg
cmp
lock
xorl
sbb
inc
adc
lock
add
jg
loop
cmp
pop
lock
push
sub
xor
ja
inc
repnz
mov
aas
sbb
flds
xlat
sbb
mov
mov
jbe
fldl
es
pop
pop
stos
mov
incl
call
xor
jle
sbb
inc
jnp
aaa
adc
cmp
jge
std
jge
js
jns
int3
fwait
push
sti
in
ret
dec
aam
inc
outsl
je
add
xlat
in
add
pop
adc
mov
or
test
cmp
cwtl
ss
sbb
and
ret
cmp
mov
sbb
and
daa
inc
sub
cmc
mov
xchg
adc
mov
insl
push
inc
call
push
xchg
das
fdivrl
in
pop
lods
cli
bound
mov
lock
cld
sti
je
push
es
jmp
test
clc
xchg
push
out
or
sub
and
and
rol
adc
inc
xor
adc
cmpb
jne
data16
cvtps2pd
rcrl
incb
adc
movsb
sub
and
ljmp
xchg
inc
clc
or
or
xchg
sarb
shrl
je
mov
xor
int
push
add
or
gs
push
testb
sub
xor
jmp
or
test
push
clc
xchg
adc
jg
xor
xor
cwtl
jne
and
shlb
ret
push
fwait
test
lea
add
push
mov
mov
hlt
jle
cmp
sub
int
out
in
or
icebp
jl
push
cltd
dec
outsl
hlt
inc
cwtl
mov
rolb
mov
jp
out
scas
out
cmpsl
mov
or
in
or
and
sub
inc
fisubl
in
xchg
or
mov
ljmp
push
fsubrs
sbb
arpl
bound
movsl
mov
pop
push
pop
stos
ret
pop
jge
sbbl
mov
add
or
fwait
movsb
mov
cld
sub
cmp
xchg
adc
jl
push
stos
jnp
adc
mov
iret
cmp
and
decb
in
push
jge
in
imul
xchg
movsb
jmp
ja
pusha
mov
ret
je
ficoms
dec
adc
outsb
mov
popa
sbb
mov
inc
cld
adc
cwtl
sub
mov
inc
mov
and
daa
in
jge
and
push
cmc
push
ret
xor
inc
stos
arpl
pop
sub
mov
cwtl
sbb
mov
pop
in
fwait
push
mov
test
repnz
xorb
scas
lock
xor
test
repnz
scas
lea
imul
xchg
push
xchg
pushf
push
movsl
es
adc
das
xor
xor
jp
xchg
jecxz
loop
dec
mov
call
xchg
ficoml
mov
popa
cli
sahf
pop
lock
lock
inc
lahf
push
lods
pop
jl
dec
sbb
in
lods
test
sbb
mull
inc
lahf
push
xchg
or
sbb
xor
cmpsl
paddusw
mov
add
xchg
jl
dec
jle
adcb
addb
or
xchg
mov
rorb
lods
hlt
mov
add
adc
xchg
rclb
pop
mov
or
adc
sbb
inc
mull
gs
push
ficoms
push
mov
nop
jnp
ss
sub
jp
xor
mov
xchg
sbb
or
call
cs
push
imul
stos
pop
out
mov
faddl
sub
ss
std
lea
cmp
and
inc
xchg
outsl
jg
jne
ds
lcall
in
or
inc
out
ret
out
jmp
roll
iret
sbb
push
dec
ficomps
arpl
adc
hlt
icebp
stos
inc
sbb
outsl
mov
stos
imul
cmp
mov
mov
dec
lahf
xor
xchg
popf
xchg
es
push
ret
mov
adc
sbb
rorb
sub
inc
lods
mov
jnp
ror
mov
test
mov
cmp
stos
mov
xor
ret
pushf
rcr
rclb
mov
adc
jno
in
out
mov
cmp
cli
shrl
testb
or
sbb
pop
or
in
test
push
add
lods
pop
lods
paddb
lcall
inc
xorl
and
pop
push
js
pop
rorl
es
pop
lods
mov
dec
sahf
sbb
out
push
lock
iret
and
sarl
fmulp
call
mov
push
aam
stos
xchg
hlt
xor
mov
jge
sub
stc
lcall
js
jmp
test
call
ffree
xor
fwait
scas
mov
pop
push
jp
inc
fistl
mov
pop
sahf
clc
notl
jne
int3
mov
lcall
add
lods
mov
ret
faddl
enter
sti
inc
push
fidivrl
out
scas
pop
sub
xor
aas
sbb
or
cld
push
jns
xchg
pop
lahf
jns
das
jne
ret
das
adc
shrb
sbb
xchg
xor
jmp
jle
ficoml
cld
cli
clc
jmp
mov
sub
xchg
loopne
test
fisttpl
repz
inc
jns
push
div
dec
repnz
xlat
int
push
or
fcmovnbe
aaa
pop
inc
outsl
call
inc
mov
xor
inc
sbb
adc
add
pop
mov
lcall
pop
xorl
cli
xchg
es
jmp
push
imul
xor
mov
cmp
sbb
pop
dec
mov
and
mov
dec
insl
test
jns
xor
and
std
aas
out
or
sub
jg
fsubrp
jle
and
mov
dec
fistps
js
sbb
add
sahf
jno
mov
out
js
shrb
rcl
lock
push
cmpb
jno
adc
jge
jmp
push
inc
xchg
push
cmpsb
mov
not
test
xor
jge
pop
pusha
mov
push
sbb
cmp
pop
test
testb
loop
cmc
subl
xorb
cmpsl
adc
add
fstl
push
push
das
lahf
imul
sbb
aas
inc
imul
inc
lahf
inc
addr16
imul
or
xor
push
test
sbb
xchg
mov
sbb
orl
shl
jae
sahf
sub
ja
mov
pop
xorl
ds
cmp
gs
popa
hlt
adc
jnp
xor
mov
aas
decb
pushf
xor
or
scas
sub
jle
stos
les
es
xorl
fnstsw
lods
dec
aam
xor
arpl
xor
mov
push
inc
jnp
aaa
lahf
ret
xor
adc
sbb
push
sub
sbb
popf
xor
jecxz
adc
loopne
xor
mov
adc
push
int3
iret
nop
fwait
inc
nop
pop
adc
popa
outsb
loopne
mov
out
jmp
pop
ljmp
cmp
pushf
sbb
pop
xor
leave
adc
pop
outsl
call
fnstsw
pop
lahf
mov
dec
out
daa
shll
cmp
negl
ds
lahf
adc
shlb
jne
dec
das
pushf
jnp
mov
mov
lahf
fidivs
sbb
lock
sbb
xor
bound
loop
stos
xchg
cmp
and
jnp
sar
add
jmp
lods
xchg
loope
cwtl
call
sub
push
outsl
ljmp
int3
pop
sbb
jmp
pop
pandn
xchg
push
std
movsl
cmpsl
xchg
test
sahf
cld
inc
cmp
jle
mov
out
mov
mov
loopne
cmp
xlat
xchg
aam
fldl
outsl
lock
testl
imul
imul
sbbb
int
inc
pop
jo
roll
js
stc
cmp
sub
mov
sbb
test
imul
jo
in
in
loop
inc
iret
jbe
loope
mov
dec
jae
jae
das
mov
js
cmp
sbb
inc
js
jmp
mov
push
imul
out
vpandn
xchg
jae
mov
hlt
add
or
jmp
and
mov
test
mov
pushf
sbb
push
in
mov
jge
dec
jo
loope
inc
pop
lods
es
in
sbbl
xchg
sub
cld
adc
in
lret
mov
pop
mov
jno
xor
bound
dec
sbb
sbb
cli
cwtl
out
in
lds
add
lret
inc
push
adc
stos
rcr
pop
shlb
cwtl
test
mov
inc
mov
add
inc
cld
jmp
stos
jo
add
sub
or
mov
orl
xchg
into
push
push
jne
out
stos
and
sub
sub
ljmp
push
lock
je
movsb
or
lods
mov
call
or
sarl
test
jle
je
sar
xchg
enter
clc
xchg
and
iret
inc
push
and
loopne
xor
inc
inc
inc
out
mov
sahf
or
fcmovbe
sub
ror
out
mov
je
and
and
cmpsb
in
jp
in
xchg
pop
xchg
inc
cmp
pop
pop
inc
nop
in
dec
dec
sbb
mov
mov
shl
sbb
and
push
cmpl
pop
mov
adcl
out
inc
dec
iret
repz
mov
hlt
loop
jae
je
jnp
jg
adc
mov
rcrl
push
lds
push
rolb
aad
es
inc
inc
sub
ret
jmp
mov
test
add
pop
repz
cmpsl
mov
ret
adc
and
mov
aad
cmpsl
or
xorl
adc
fs
loop
xchg
out
ds
hlt
lods
or
mov
inc
test
out
call
loopne
imul
ds
cmp
pop
in
out
mov
jns
cmp
nop
fsubp
lea
jo
adc
push
pushf
xor
push
mov
je
push
push
mov
and
ss
test
shll
mov
inc
lcall
mov
xor
fwait
call
xchg
shlb
mov
inc
cmp
in
pop
mov
je
es
je
aaa
shrb
add
cmp
aad
je
enter
xchg
dec
in
adc
sbb
repz
test
adc
repz
dec
xlat
push
repz
test
sbb
in
inc
push
aad
dec
sar
js
jnp
cmp
cmpsl
aaa
mov
sbb
sub
je
or
add
inc
pshufw
sar
inc
ret
aas
pop
adcl
cs
and
sub
sar
enter
xchg
cld
push
mov
mov
lahf
andb
cwtl
cld
and
nop
and
in
lods
loope
push
pop
xchg
jnp
pop
insb
inc
or
pop
out
push
inc
and
inc
mov
push
xor
mov
jg,pt
into
xchg
pop
mov
mov
insl
and
xor
cmc
lret
daa
cmp
andb
inc
cmpl
dec
lods
xchg
jns
add
je
sbb
je
pop
cmpl
inc
enter
add
add
and
nop
lcall
mull
mov
sbb
push
inc
xor
mov
subl
push
jmp
icebp
nop
dec
mov
and
and
adc
hlt
jbe
xlat
or
pop
hlt
js
mov
popa
mov
loope
push
mov
out
cmp
mov
mov
add
int3
and
ret
rol
pusha
add
sub
cmpb
out
cld
mov
lcall
or
pop
ss
scas
xchg
lahf
jbe
mov
push
mov
or
cmp
jecxz
rolb
sub
fimull
xchg
notb
cmp
clc
sub
mov
fisubrl
jbe
cmpsl
dec
int3
or
cmp
sahf
add
xor
into
stc
mov
ljmp
jecxz
pop
popf
cmp
mov
enter
push
fs
ds
xchg
pushf
insb
mov
test
pop
in
std
shll
jnp
sahf
arpl
outsb
mov
adc
push
mov
das
test
aad
in
cmp
sarb
xor
scas
and
repz
mov
fdivrp
jp
push
and
cwtl
test
ret
outsl
jle
jb
test
fcmovnu
ljmp
cmp
mov
mov
mov
add
and
stos
mov
dec
sbb
sbb
xchg
inc
xor
andl
mov
jg
in
ja
movsb
ret
dec
add
sbb
xorl
add
adc
inc
add
add
inc
mov
test
aam
into
add
sbbb
orb
xor
jne
sbb
or
push
adc
or
mov
nop
add
enter
movb
add
subb
adc
xor
xor
push
clc
dec
setle
pop
add
dec
shrb
fwait
orb
adc
and
xor
xor
xor
adc
or
mov
add
add
outsl
add
add
ds
push
shlb
jo
or
pusha
and
adc
xor
or
outsb
sarb
push
sarb
pusha
add
sbb
dec
add
or
add
dec
and
xor
pop
dec
gs
xor
pop
xchg
inc
repz
enter
adc
pop
mov
push
or
sub
sub
adc
push
add
cmp
aam
push
sbbl
xor
sbbl
xor
sbbl
xor
sbbl
mov
jp
call
pop
pop
jp
call
cli
jb
movsl
in
mov
jns
fdiv
ret
xor
xchg
cmp
ret
std
loopne
mov
fwait
pop
ret
mov
xlat
lock
push
loope
push
loope
push
loope
lods
ret
test
pop
test
xor
adc
int3
mov
les
jae
xchg
cmp
dec
in
xor
cwtl
adc
mov
dec
mov
pop
cmp
fwait
pop
scas
outsl
xchg
lock
or
dec
cmp
or
push
and
adc
or
jmp
push
aam
push
jno
pop
adc
das
out
xchg
lock
dec
xchg
lock
fildll
loope
adc
xchg
gs
or
jo
test
dec
cmp
jecxz
cmp
ret
clc
outsb
or
xchg
in
loope
adc
lock
setae
push
outsb
cmp
jmp
and
subb
sbb
sbb
mov
int3
lock
cmp
lahf
cwtl
dec
es
addr16
xchg
and
test
adcb
and
pop
cmp
xchg
adc
mov
cmpl
dec
push
inc
dec
mov
repnz
pop
pop
jge
rcll
andps
jae
iret
add
xchg
xchg
lahf
negl
int
sub
pop
les
pop
and
lds
jnp
jnp
or
inc
and
add
mov
jg
das
xchg
fsubrl
out
out
jl
lcall
cli
sbb
push
sbb
mov
mov
aaa
or
add
das
lock
shr
sbb
add
subb
sbb
jl
cmp
inc
pusha
sbb
inc
xor
test
mov
mov
add
sbb
pop
loopne
loopne
orb
cwtl
jg
jle
scas
subl
lock
pusha
adc
aas
andb
mov
pop
mov
mov
aaa
cmpl
adc
inc
loopne
shlb
dec
stc
cmpl
add
sub
jae
xchg
add
add
push
js
lock
shrb
aas
movsb
jb
iret
push
mov
loopne
rolb
dec
shlb
pop
mov
mov
adc
jge
cmp
jno
and
rolb
rolb
add
cmpsb
testb
mov
aad
out
push
ljmp
jle
lock
mov
add
adc
pop
loopne
xor
xchg
cmp
notl
sarb
jbe
out
and
xorl
sbb
dec
scas
shrb
push
fiadds
xorl
add
subl
pop
cmp
sub
fstl
sti
mov
mov
scas
imul
add
insl
fisubl
lret
mov
jle
mov
jae
cmp
jbe
cmp
sti
out
fisubrs
push
push
std
in
test
daa
stos
jle
mov
aas
out
jg
fistpl
ret
sub
std
pop
mov
fistpll
push
in
pop
mov
lock
call
jno
lods
fmuls
call
fldt
jp
cmp
addr16
jecxz
enter
jae
mov
jno
ljmp
cli
int3
cmc
lods
testb
mov
mov
mov
mov
xchg
dec
aad
aas
sub
adc
sub
jne
out
outsl
rorl
adc
cmp
jmp
rcrl
stos
cmp
arpl
rol
int
daa
pusha
push
mov
push
inc
sub
mov
push
mov
lea
pushf
push
mov
jecxz
lret
mov
jle
cmp
pop
shlb
sbb
insl
cmp
fsts
or
stos
dec
outsl
fbstp
sti
fstl
imul
stos
xchg
jecxz
or
out
fldt
in
pop
mov
addr16
movsl
mov
or
and
jae
fldt
sub
sahf
ljmp
adc
mov
xchg
sti
gs
insl
jmp
pop
mov
sub
mov
arpl
fidivs
gs
pushw
decb
xchg
movsl
daa
lret
fwait
je
jbe
outsb
imul
cmp
cmp
ljmp
ja
mov
stos
insl
cltd
daa
push
and
and
imull
pop
notb
lcall
jle
ds
jnp
xor
lret
inc
dec
fistpl
stc
stos
sub
in
arpl
leave
std
mov
rcl
fistl
js
jp
dec
mov
jae
lock
xchg
scas
lods
cmp
cld
lret
mov
in
sti
loop
push
cmp
sub
lret
cmp
ds
into
dec
jns
push
cltd
jp
insl
cld
icebp
jae
pop
fcom
sub
jno
popf
lahf
cmp
out
fucompp
std
in
inc
cld
in
mov
out
jecxz
fucom
into
outsb
jl
lock
mov
loop
loop
cmp
fwait
mov
or
mov
in
cmp
mov
int
fistps
mov
pop
jg
cmp
push
test
ss
mov
adc
in
cmp
inc
mov
mov
push
or
sbb
push
cli
mov
jmp
sub
lret
cmp
outsl
in
xchg
push
mov
and
in
jns
jge
leave
enter
mov
dec
outsb
inc
jnp
sbb
jmp
ja
enter
pop
fs
js
lret
imul
rorl
in
lret
psadbw
lahf
leave
push
dec
sarl
iret
test
fistpl
cmp
cltd
outsb
enter
out
jae
xchg
notb
fldl
ret
push
mov
and
sbb
stc
out
mov
jp
negb
into
mov
xchg
out
das
pushf
lahf
ss
pop
mov
jmp
notl
insl
xor
sahf
push
enter
sbb
or
jmp
dec
cmp
rcr
in
xchg
sbb
jg
in
fildll
stc
push
mov
fwait
jo
cltd
test
out
cmp
xchg
sbb
jo
cmp
insl
filds
jge
cli
and
outsl
sar
enter
mov
mov
push
cmp
pop
push
ljmp
mov
arpl
int3
mov
fdivrs
jp
sbb
ljmp
cmp
mov
repz
aad
jbe
sbb
ret
jne
test
test
imull
push
mov
add
add
out
push
ret
mov
or
inc
or
jo
push
add
add
cmc
faddl
sbb
sti
mov
aad
pop
push
bsr
sti
push
fdivrs
sti
test
and
or
fucompp
pop
and
push
outsl
adc
aas
out
cmpsb
xor
jle
pop
push
outsl
fstpt
push
call
test
out
cld
sub
fwait
test
iret
xor
gs
out
inc
mov
mov
rcll
adc
out
xor
adc
xor
xor
pop
xor
push
push
inc
sbb
push
loopne
mov
xchg
vorps
cltd
out
mov
ret
inc
jae
pusha
inc
subb
sbbl
mov
iret
out
pusha
add
inc
loope
mov
test
ljmp
dec
push
push
pop
jl
cmp
mov
xchg
cs
bound
jns
data16
sub
push
sub
dec
loope
or
stc
push
int3
cs
mov
xchg
fsubs
loopne
lods
sub
in
sti
cmp
fstpt
lock
mov
ffree
gs
cmpsb
bound
loope
aad
dec
lock
dec
and
mov
clc
mov
loope
mov
pop
stc
negl
jge
in
stc
sub
cs
repz
push
push
out
out
mov
ds
dec
test
jp
bound
xchg
insl
mov
stc
out
leave
stc
inc
std
mov
nop
jmp
loope
pop
mov
ret
repnz
pop
pusha
pushf
xchg
mov
ror
cmp
pop
stc
fnstcw
inc
ds
mov
and
loop
jecxz
xlat
mov
mov
mov
sbb
mov
sar
cld
mov
aaa
bound
mov
push
cmc
dec
sbb
lock
mov
or
out
out
mov
xchg
enter
dec
jp
movsb
xchg
mov
hlt
adc
addr16
stos
movsl
sbb
ds
push
mov
fidivrl
stos
popf
pop
fcoml
mov
xchg
mov
lahf
jno
mov
adc
ss
imulb
ja
cmp
fbld
mov
or
add
pushf
fidivrl
mov
lock
icebp
sbb
adc
and
cld
stc
lgs
leave
insl
in
pop
cmpsl
lcall
mov
ret
add
jae
pop
aad
inc
aaa
jb
outsb
mov
inc
fwait
clc
lahf
lret
xchg
in
cs
sub
fwait
sbb
adc
cmp
dec
dec
pop
and
mov
pop
mov
dec
fwait
cmp
ja
pop
xchg
cmp
jmp
lret
imul
fisubrl
data16
mov
icebp
lods
ljmp
lock
cld
pop
aas
adc
in
imul
adc
popf
cmp
in
pushf
mov
xor
das
mov
cltd
cltd
fwait
aas
mov
les
in
lret
mov
xchg
ljmp
into
lcall
call
addr16
lahf
xor
and
out
ss
rorl
out
popf
aas
jg
inc
lods
cmc
and
jo
loope
pop
insl
stc
pop
mov
mov
adc
nop
aas
sub
mov
out
mov
push
add
mov
in
cwtl
mov
push
ljmp
fcmovbe
xchg
ds
repz
movsb
clc
jae
insl
xchg
xchg
xchg
lea
cmp
sti
bnd
outsl
push
dec
cmp
or
lcall
push
mov
arpl
shrl
mov
popf
xchg
mov
push
iret
mov
iret
cltd
cltd
dec
pop
lods
loop
mov
ljmp
testb
xchg
fmulp
leave
sbb
dec
mov
cmp
mov
dec
arpl
popa
jb
outsl
fs
mov
testl
jb
cs
jg
cmp
dec
jbe
jne
cmp
lods
lret
sbb
notb
call
out
sub
sbb
cld
stc
fldcw
or
fldt
fwait
pop
andb
jecxz
xor
aas
aaa
jae
adcl
sbb
mov
and
pop
jbe
into
cmp
mov
lahf
push
loope
push
orl
insb
add
mov
or
and
mov
pop
mov
cmp
push
mov
dec
add
or
fucomi
outsb
xchg
mov
scas
lods
jne
out
stos
adc
into
cmp
mov
cmpb
daa
cmp
pop
clc
push
inc
into
mov
jns
cld
xchg
data16
and
sbb
adc
sbb
stc
loop
ror
out
imul
dec
sarb
push
mov
fstl
push
lods
and
add
nop
or
movsb
add
push
add
inc
sub
adc
pop
xor
je
or
sbb
dec
cmpb
and
inc
adc
pop
add
mov
adc
sub
adc
mov
xchg
das
mov
jecxz
rorb
adc
ja
mov
cli
adc
mov
orl
sub
xchg
push
and
and
dec
jno
cmp
jl
adc
and
push
cmp
xchg
lds
js
push
adc
out
pop
sub
hlt
lea
repz
stos
les
test
hlt
xchg
push
cmp
call
ret
cld
mov
adc
push
loop
movsb
xchg
jle
dec
pmuludq
mov
sub
and
divb
add
mov
mov
mov
mov
push
adc
mov
lret
rcrb
fdivr
icebp
inc
arpl
cli
push
jb
loopne
adc
sub
xchg
pop
call
movsl
pusha
mul
dec
mov
dec
in
mov
stos
or
or
dec
fmul
data16
fisttpl
cmp
imul
pushf
repnz
dec
push
dec
jbe
ljmp
aam
mov
xor
rolb
fs
add
std
dec
add
xchg
into
jl
loope
mov
add
add
scas
pop
inc
add
jge
add
jg
pop
arpl
lods
push
mov
push
or
in
inc
sub
lods
cld
sti
imul
jae
cmp
jle
mov
fiadds
adc
aas
jae
pop
sahf
push
push
cmp
add
lods
in
aaa
ret
pop
int3
mov
push
jl
out
inc
test
xchg
jo
adc
rol
cli
arpl
test
pop
mov
add
xor
inc
sar
sbb
mov
incl
negl
cs
and
jne
cwtl
jg
or
xor
repnz
scas
xchg
aas
or
add
xor
imul
inc
out
outsl
add
sbb
mov
mov
pop
and
cpuid
aas
lods
aas
mov
incb
push
add
lea
sub
cwtl
mov
mov
mov
inc
xchg
inc
popf
and
inc
leave
imul
xchg
mov
push
lcall
lret
xchg
aam
push
jns
or
leave
je
sbb
mov
pop
jb
lret
imul
rcrb
pusha
add
push
add
add
add
lock
loopne
rclb
pop
inc
cmp
and
cmp
loopne
shlb
sbbb
lret
xchg
inc
and
push
rolb
lds
jbe
ds
jl
push
out
ljmp
or
clc
add
and
shl
in
aaa
inc
cmovo
sub
rorb
js
cmpsb
lods
mov
mov
repz
aas
cmp
je
aaa
movsb
es
mov
je
lahf
icebp
push
cld
lea
lret
pop
sub
adc
repnz
cmp
jb
aas
in
cld
xchg
repz
fnstsw
lods
and
mov
dec
sti
mov
out
jns
push
popf
inc
out
jns
push
popf
inc
out
jns
push
popf
inc
out
jns
push
popf
inc
out
jns
push
popf
inc
out
jns
push
popf
inc
out
jns
push
popf
inc
out
inc
inc
out
push
aam
sbb
mov
dec
inc
ret
call
lock
mov
mov
inc
mov
ret
xchg
xchg
xchg
stc
pop
sub
sub
out
adc
ret
lea
loop
mov
arpl
pop
sub
mov
cli
jno
jmp
cmpsl
jmp
dec
xlat
dec
cmp
jmp
xor
fst
sti
mov
pop
hlt
mov
aas
repz
paddw
and
data16
loopne
rorb
pusha
sbb
xchg
cmp
lea
jo
call
adc
sub
hlt
jle
icebp
push
dec
fbld
clc
in
sub
aaa
pop
testl
daa
insb
xorl
cmc
push
mov
jmp
lcall
jmp
div
int
xchg
aas
jne
scas
lods
iret
scas
seto
adc
ljmp
xlat
das
jle
loop
enter
inc
mov
fcompl
mov
das
xchg
xor
aad
aaa
jnp
sbb
clc
clc
mov
lock
or
jno
fucomi
scas
jg
shlb
pop
lret
mov
pop
cmp
clc
loopne
and
xchg
mov
aam
mov
xor
divb
xchg
std
in
dec
fwait
jo
loop
inc
cmp
arpl
movsl
inc
sbb
loope
xchg
scas
movsl
jl
fiaddl
cld
out
sbb
ds
mov
sbb
out
shrl
shll
mov
fists
sbb
pop
sti
repnz
cmp
fnstsw
jmp
jno
stos
jne
sbb
xor
sub
out
fwait
movsl
notl
ljmp
sub
pop
cmp
daa
mov
pushf
jno
xor
scas
ds
rorl
pop
dec
jle
dec
scas
jae
or
aam
jl
negb
pop
pop
xchg
adc
adc
outsb
cmp
nop
pop
movsl
pop
cmp
fs
xchg
jns,pt
stos
cmp
in
aad
pop
shlb
jae
mov
pop
jle
hlt
mov
daa
pop
mov
xchg
mov
xor
outsb
in
aam
push
mov
sbb
jecxz
test
pop
clc
mov
aas
popf
mov
cld
in
pop
dec
cmp
clc
mov
mov
jno
int3
mov
sub
xchg
mov
lret
sahf
sbb
out
pop
jmp
out
xchg
clc
pop
dec
dec
mov
jle
sub
sub
aam
stc
ja
mov
xchg
xchg
push
lahf
dec
mov
daa
and
pop
lods
jo
push
jb
adc
push
add
js
mov
pop
xchg
test
jbe
fwait
out
mov
fsts
popl
push
fnsave
in
popa
push
cmp
mov
pop
sbb
lods
mov
mov
push
xchg
mov
das
sub
jge
dec
call
xchg
popf
xchg
sahf
arpl
testb
jecxz,pt
xchg
jae
xchg
dec
push
mov
fistps
cmp
insl
mov
mull
jp
into
add
push
xchg
std
aad
jmp
repz
push
jg
ljmp
pop
cs
dec
pusha
jno
cltd
mov
fmul
mov
sub
xor
lods
pop
ret
push
loopne
push
idiv
cmp
sub
push
loope
nop
std
popa
cmp
sbb
imul
add
adc
dec
cmp
sahf
fs
gs
or
cmp
pop
ret
mov
adc
mov
cli
xor
xchg
sub
pop
divb
clc
jne
xchg
inc
ss
shll
cs
add
fldln2
sub
pop
adc
sahf
xchg
hlt
popa
xor
test
adc
mov
div
movsb
push
lcall
add
aas
fidivs
pusha
xorb
mov
pop
out
je
or
dec
out
cs
cmp
cwtl
incl
xchg
stc
xor
xor
mov
sbb
outsl
sti
push
dec
rcpps
sub
mov
dec
xor
ss
out
fildll
sbb
or
movsb
filds
test
mov
lock
xchg
aas
jb
mov
pop
ss
mov
pop
push
adc
aaa
xchg
pop
je
clc
add
imul
xor
lds
outsb
mov
xor
hlt
jnp
mov
mov
xchg
push
cltd
packsswb
out
jno
mov
sub
dec
lret
out
and
jmp
clc
sbb
dec
popf
out
jmp
sbbb
mov
adc
mov
adc
cltd
cmp
push
fsubrs
punpckldq
mov
xchg
in
jl
cmp
jae
fwait
int
fdivl
and
inc
xorl
jno
xor
iret
sub
aad
hlt
xorb
imul
cli
mov
push
arpl
jge
test
rcll
dec
int
lcall
fsubrs
aam
inc
jae
sub
into
mov
into
mov
into
mov
into
mov
adc
xor
arpl
test
cmpsb
fistps
test
adc
dec
je
shl
out
shlb
cmp
lods
hlt
cmp
xor
mov
lods
insb
flds
push
sub
xor
sbb
xor
pop
mov
stos
pop
and
movsl
push
xor
jbe
jl
and
add
ss
pop
loopne
shl
ja
das
add
add
lods
inc
rolb
sbbl
int3
inc
jnp
mov
loopne
rcrb
scas
pop
icebp
in
stc
ds
push
jl
test
shll
pop
jmp
dec
jle
cmp
fisubl
insb
std
or
sbb
shr
pop
sbb
add
insb
jo
movsl
rcl
mov
addps
cmp
mov
shlb
push
inc
jmp
lock
pusha
pop
loopne
rcrb
cmpb
stc
lea
mov
out
loope
or
add
repnz
adc
ficoms
js
mov
in
sarl
hlt
addr16
cmp
or
outsl
lea
popa
aam
ljmp
dec
pop
icebp
imul
mov
clc
jne
les
and
pop
icebp
adc
adc
inc
jl
pop
icebp
jl
nop
jbe
or
mov
jne
aas
movsb
cmp
push
loop
cmp
fiaddl
mov
rolb
out
loop
cmp
mov
push
loop
cmp
inc
sbb
aaa
jne
aas
movsb
cmp
push
loop
cmp
fiaddl
mov
adc
push
loop
cmp
scas
cmpl
inc
sbb
aaa
jne
aas
movsb
cmp
push
loop
mov
jmp
inc
pop
hlt
push
loop
jne
mov
sbb
and
ret
popa
adc
adc
insb
adcb
sahf
imul
mov
mov
inc
xchg
ret
pop
and
mov
or
lds
std
inc
xchg
mov
or
mov
sbb
jo
imul
mov
in
pop
ret
pop
xchg
mov
ret
xchg
call
jo
sub
push
pop
in
lret
xor
mov
in
xchg
pop
sti
mov
xchg
mov
mov
xlat
icebp
std
xchg
in
cs
call
jmp
shrb
cmp
pop
jne
lcall
jecxz
mov
xchg
jo
es
mulb
cmp
adc
jge
xor
pushf
ret
mov
negl
jl
sub
mov
lock
out
js
sub
jp
jmp
push
sbb
lock
or
test
mov
xor
cmpsl
lock
in
cmp
add
pop
jg
call
cld
mov
popl
xchg
and
xchg
mov
sub
add
orb
or
gs
fstps
xchg
movsl
and
punpcklwd
aas
add
insb
sbb
inc
inc
cmp
sbb
push
push
mov
and
xchg
or
outsb
inc
aas
pushf
lea
rep
insl
imul
pushf
mov
jae
cmp
rcl
rol
fisttpl
into
xor
leave
lret
xor
cmp
enter
xor
cli
mov
adc
jecxz
cmpsb
nopl
data16
fcoms
aas
xchg
pushf
cltd
je,pt
cmp
cli
clc
mov
jmp
inc
xor
xchg
inc
sub
mov
jno
adc
hlt
push
xor
xor
lds
mov
div
sbb
xor
aam
mov
les
adc
mov
sbb
aas
xchg
jb
in
mov
pop
mov
cwtl
es
push
lods
push
out
cs
cwtl
push
cmp
das
jnp
cld
insb
adc
scas
and
das
daa
scas
jo
pop
sbb
imul
or
movsb
fldcw
int
notb
movsl
add
lods
arpl
xchg
push
fists
cmp
pop
add
sbb
adc
dec
hlt
std
dec
jp
dec
dec
outsb
xchg
push
add
and
mov
adc
femms
pop
jge
mov
jo
and
sbb
repz
pop
dec
in
rcll
cwtl
sbb
sbb
add
sbb
inc
ds
adc
loopne
and
add
js
add
jbe
flds
aam
int3
cmp
shl
jns
stos
mov
loopne
rorl
lods
dec
or
add
add
jg
lret
or
or
adc
insl
or
jo
pusha
sub
aam
dec
jbe
dec
push
add
cmp
inc
push
lea
push
jecxz
push
mov
icebp
outsl
xchg
sbb
shl
movsb
and
or
sbbb
daa
mov
push
mov
cmp
sar
push
xchg
jns
sub
and
imul
sub
inc
and
inc
inc
ja
mov
sub
push
aam
push
sub
add
pop
xor
pop
xor
mov
lret
and
ljmp
outsb
mov
push
fisttpll
pop
loop
arpl
inc
xor
addr16
daa
adcl
lods
data16
movsb
pop
ret
testb
mov
cmp
ret
inc
inc
sbb
clc
sbb
push
mov
adc
mov
inc
test
pop
lret
cmpb
leave
push
popa
dec
mov
and
push
jmp
push
xchg
hlt
mov
std
shll
and
mov
insb
jmp
scas
roll
sbbl
inc
xlat
call
mov
pushf
sahf
adc
push
addr16
in
xchg
and
add
loop
fsts
jmp
test
out
xchg
mov
mov
imul
sbb
daa
pop
xlat
cld
pop
fs
leave
das
sbb
lret
out
mov
gs
mov
dec
out
aas
dec
xchg
cld
jne
pop
aas
sub
mov
sti
movsb
insb
aas
mov
jl
test
iret
cmp
mov
and
cmp
cld
sbb
rcrl
lods
repz
jno
lea
in
popf
shr
rorl
ss
jmp
loop
hlt
push
or
std
xor
xchg
insl
enter
stc
or
push
into
mov
addr16
test
cwtl
or
cld
or
xor
mov
jp
cmp
add
xchg
jb
scas
pop
mov
mov
sbb
adc
sti
xorb
jl
ret
loope
sub
add
xchg
in
bnd
lods
jecxz
push
fnstcw
jne
push
les
push
lds
gs
jl
cli
or
xor
sbb
dec
xchg
scas
lods
adc
sub
cmc
sub
jl
shrl
pop
rcrl
shlb
in
jmp
mov
push
in
je
push
mov
pop
in
fsubl
popf
jb
mov
mov
cmpsl
imul
scas
sub
dec
jl
mov
push
push
xor
lcall
mov
icebp
cs
cs
ljmp
push
mov
das
pop
lcall
std
addr16
call
insl
fucomip
sub
out
xchg
imul
cmp
scas
jmp
xlat
xor
xor
fildll
xlat
pop
mov
dec
repnz
jb
sub
jno
dec
fadds
arpl
fwait
pushf
addr16
test
mov
mov
jl
xor
test
mov
je
ret
mov
jle
xor
jl
insb
pop
mov
jno
les
mov
xchg
dec
int
cmp
mov
dec
mov
pop
cmc
mov
cmp
push
rcrb
cltd
mov
xchg
aad
push
stos
jb
mov
inc
dec
xor
pop
adc
lret
ror
shll
push
mov
push
and
xchg
and
pop
stc
mov
cmp
gs
dec
cmp
xlat
nop
test
rclb
mov
cmpsb
call
lret
sub
xor
mov
fidivl
sbb
mov
mov
outsl
mov
mov
test
ss
push
into
xor
loop
or
pop
daa
test
push
xor
ja
dec
cmp
or
inc
mov
sbb
scas
mov
stos
in
loopne
cmpsb
adc
sub
aas
lds
xor
insl
imul
mov
sbb
push
scas
jp
iret
sahf
fstpl
dec
or
inc
and
inc
std
xchg
lahf
inc
adc
sbb
insb
pop
cmp
mov
aam
popa
sub
jl
dec
fsubrl
sbb
and
mov
cltd
xchg
cmpsb
and
mov
xor
add
sub
in
imul
cltd
cmp
andl
jg
lea
push
cmp
sbb
mov
and
mov
das
pop
mov
sub
push
cmp
and
inc
scas
xchg
lea
clc
mov
rcr
fstl
jae
test
sub
adc
and
xor
ds
mov
call
sbb
xchg
lods
stos
shl
inc
mov
push
cmp
std
mov
jae
cmc
mov
je
sti
push
je
xchg
xlat
dec
mov
mov
mov
scas
jnp
mov
xchg
push
mov
mov
xchg
cmp
out
out
mov
jne
rcl
jge
fmuls
cmp
mov
adc
xchg
push
mov
pushf
xchg
push
sbb
pop
lahf
jae
sbb
jno
mov
sarb
orb
jle
inc
push
mov
mov
dec
out
inc
add
sub
sub
mov
aaa
pop
push
mov
div
pop
cmp
fidivrs
xlat
pop
push
push
lret
add
shrd
and
xchg
pop
cs
dec
xchg
push
xlat
ret
mov
rcll
js
fistpl
aam
scas
scas
lods
push
pusha
je
movsb
inc
movsb
movsb
imul
shrl
cmp
sub
daa
sbb
addr16
inc
iret
sub
jg
cs
imul
pop
jecxz
data16
call
lret
adc
pop
ret
cmpsl
mov
mov
xchg
lret
imul
and
out
mov
mov
mov
xchg
jbe
and
out
jg
pushf
jle
cmp
lret
insb
into
scas
aaa
cmp
int
push
mov
dec
mov
push
das
push
mov
inc
xorl
inc
ds
stc
mov
fdivr
jl
push
pop
das
xchg
push
mov
scas
jmp
in
out
mov
lods
insl
jbe
inc
pop
stos
fsubrs
fldt
lods
pop
lret
fadds
sbb
pop
loope
jp
lret
adc
fsubrl
repnz
pop
mov
pop
inc
f2xm1
ljmp
jne
sub
pop
movsl
sarb
adc
jecxz
popf
inc
add
out
add
jbe
dec
cmp
out
push
pop
daa
mov
out
inc
mov
sbb
cmpsl
lcall
in
push
fmul
adcl
sub
dec
stos
push
decl
stc
cmpsl
mov
je
mov
xor
xchg
pop
push
adc
aam
push
mov
xchg
xchg
pop
mov
dec
ficoms
and
pop
xchg
js
mov
or
insl
adc
inc
sub
push
loop
jns
loop
stos
insb
insb
fstp
call
jbe
pop
jp
and
das
dec
jbe
push
pop
xor
or
or
imul
pushf
and
inc
test
test
mov
push
js
mov
lret
jns
jl
and
adc
push
inc
inc
xor
scas
icebp
jb
lcall
inc
jmp
inc
mov
push
sbb
xor
int3
daa
fwait
daa
or
jne
dec
ret
xchg
addr16
sbb
mov
sbb
cmp
mov
das
ficompl
lea
mov
mov
in
int
adc
jb
icebp
adc
pop
mov
pop
fs
pop
icebp
ret
in
das
dec
mov
sub
cmpsl
sub
in
lret
add
push
xor
xchg
shll
inc
dec
mov
lret
bound
icebp
jb
adc
mov
out
mull
into
into
in
adc
into
cmc
jae
pop
mov
lahf
push
xor
sbb
inc
sub
bound
sbb
sub
push
pop
or
leave
lret
xchg
mov
dec
cli
mov
sahf
xchg
leave
jecxz
lock
jp
cltd
lods
out
test
pop
inc
xor
loope
insb
sbb
xchg
popf
push
aam
das
jmp
push
inc
cmpsl
js
fimull
scas
cmp
cmp
inc
inc
or
cmp
pop
loop
int
aam
xor
fistpl
popf
mov
lods
int3
int
dec
mov
cmp
lret
ss
dec
pushf
sar
xchg
fcmovnu
dec
test
iret
ds
jno
insb
cmp
fs
mov
insb
es
int
fadds
loopne
fidivl
sbb
sub
repnz
jmp
gs
test
adc
movsb
addb
lds
inc
add
xlat
jnp
loope
adc
sub
into
jmp
fwait
inc
jno
cmp
jne
mov
es
fnstsw
xchg
jae
insl
xchg
or
cmp
popl
repz
add
and
jnp
js
pusha
insl
xchg
andl
cltd
inc
sbb
xor
icebp
add
or
xchg
push
lret
sub
cmpsl
sub
imul
sub
dec
imul
lds
stc
jecxz
arpl
pop
ret
and
loope
rep
das
pop
fcompl
test
in
cmp
cmp
adc
movsl
jno
add
cmp
jle
enter
fbstp
jo
aam
js
loop
add
lcall
stc
popf
iret
adc
test
int
das
sub
mov
push
xchg
test
cmp
adc
mov
hlt
dec
in
pop
lods
xchg
dec
imul
sub
jns
out
daa
movsb
xor
mov
clc
or
stos
cmp
das
jmp
imul
das
icebp
shll
ss
sub
mov
jp
add
push
testb
lcall
insl
gs
pop
push
enter
lret
decl
xor
sbb
repz
je
pushf
outsb
pop
fiaddl
jae
fimull
xor
fisttps
clc
xchg
pop
and
mov
mov
je
and
xor
imul
je
cmp
clc
data16
xchg
sbb
jns
pop
daa
push
inc
mov
sbb
mov
insl
test
jnp
jle
fisttpll
cld
push
pop
into
add
int
dec
in
mov
mov
xor
sub
or
imul
iret
push
mov
imul
inc
stc
push
in
pop
push
and
inc
jp
stos
inc
ss
sahf
ss
xor
mov
adc
jns
das
xchg
mov
sub
pop
dec
sti
jg
in
aaa
fdivs
inc
fwait
test
int
aaa
enter
out
pop
test
push
stc
adc
dec
mov
mov
pop
in
insl
lret
xchg
fbstp
and
xchg
cmp
lods
aam
inc
imul
pop
or
fisubrs
cmc
xchg
rclb
mov
ret
call
adc
mov
jl
cmpsl
mov
xchg
shl
inc
pop
icebp
push
ret
out
add
mov
push
pop
push
dec
je
lods
cmp
mov
jb
stos
xchg
mov
push
sub
popaw
in
or
xor
jns
push
push
mov
mulb
push
sti
loop
cmp
fadds
mov
jg
in
xchg
mov
insb
mov
jae
sub
aad
dec
inc
and
out
jnp
loope
add
xor
fisubrl
in
movsb
sbb
sub
cmp
or
in
into
add
xor
mov
mov
mov
lods
push
add
mov
fucom
popf
ljmp
divl
in
aam
lea
ljmp
push
fstpl
fbstp
xor
mov
out
sub
out
aad
and
js
divl
aad
negb
xor
mov
jb
jns
lock
jmp
stos
in
push
cli
scas
movsl
sti
cmpsb
dec
jae
inc
xor
xor
data16
xchg
inc
out
fwait
sbb
jnp
push
push
mov
mov
cwtl
out
xchg
in
or
adc
jns
in
test
pop
pop
in
loope
mov
pop
into
inc
repnz
push
rolb
pop
nop
pop
mov
inc
mov
inc
mov
push
lods
clc
jmp
int3
aam
outsl
mov
jl
call
and
xchg
mov
sbb
outsl
push
clc
sbb
aam
sbb
int
cmc
into
xor
mov
jp
push
pop
das
jae
shll
lcall
jne
addr16
loope
imul
mov
push
dec
ret
sub
je
inc
cmp
jge
mov
das
ljmp
pop
mov
int3
outsb
scas
xchg
mov
aas
shr
cld
daa
jmp
in
in
pop
idivb
in
popa
adc
ja
jae
icebp
jns
adc
lret
fisttps
jno
icebp
or
xchg
js
xor
adc
cmp
mov
icebp
jns
push
mov
sbb
enter
jnp
cld
jnp
daa
lret
jge
loope
mov
xchg
popf
sub
lock
pop
in
add
lea
in
jg
mov
std
andl
cmpsl
fdivl
in
adc
lcall
sub
bnd
filds
inc
stos
in
mov
mov
push
pop
imulb
jne
lahf
daa
and
scas
mov
testb
inc
test
std
das
cmp
mov
int3
jmp
idivb
sbbl
neg
testl
mov
fsubrs
ret
das
cli
data16
call
imul
jmp
js
lret
mov
scas
imul
in
lahf
sbb
subl
shll
fidivrl
xchg
ret
and
out
cmpsb
mov
repz
out
xchg
js
mov
shlb
imul
ljmp
jno
lcall
leave
outsb
lea
fbld
cmc
cmpl
pop
lock
mov
add
jl
add
scas
rcrb
dec
jge
leave
dec
dec
jnp
add
cld
cmpsl
sahf
in
stc
sub
call
in
stc
mov
fcmovb
jge
mov
dec
lock
push
out
sbb
ds
dec
daa
aas
jbe
je
enter
nop
push
cs
push
jo
int
pop
ret
jno
into
xchg
out
dec
pop
pusha
das
dec
je
idivb
enter
sub
addr16
push
pop
jb
ret
push
lea
movsl
lock
xchg
lahf
jae
jbe
lahf
rorl
aam
pop
lds
lahf
movsb
mov
das
sbb
xor
outsl
mov
pop
in
sti
mov
shrl
sahf
out
cmpl
mov
sub
push
pop
fists
lods
sub
dec
xchg
imul
mov
daa
rcr
in
pop
mov
fs
lret
lret
andb
mov
or
cwtl
mov
imul
lret
lret
cld
mov
mov
jns
adc
leave
data16
sub
pop
and
sub
hlt
pusha
outsl
enter
dec
lds
cmp
jmp
dec
jmp
aam
mov
xchg
jmp
cmp
ja
push
push
dec
jmp
repz
clc
cld
sub
leave
fwait
jge
jp
fcompp
jl
fsts
aam
sbb
lods
xchg
inc
pop
fs
sbb
xor
jae
mov
scas
lret
stos
leave
stc
sub
mov
leave
lea
out
aam
imul
repz
xchg
mov
add
std
jp
rcrb
test
ficomps
shrl
jp
movsl
xor
and
jnp
cmpsb
je
xor
mov
std
std
lds
cmc
pop
dec
negb
and
test
shll
out
je
aas
test
adc
rorl
pop
test
pop
ss
and
insl
sti
pop
out
push
xchg
scas
arpl
out
into
fidivs
inc
aam
xchg
xchg
nop
mov
pop
fwait
lock
pop
out
jg
jbe
mov
sti
movsl
ss
cmp
xchg
out
mov
push
xchg
cmpb
cmp
sub
hlt
and
mov
dec
imul
jp
gs
dec
pop
sbb
add
xlat
mov
xchg
cmpsb
scas
sub
adc
testb
xchg
ds
dec
iret
sahf
dec
pushf
mov
dec
push
or
testb
ljmp
sub
mov
and
mov
sub
stos
in
fiaddl
dec
imul
in
lret
sbb
lods
sahf
mov
imul
es
call
rcrb
in
and
xchg
push
mov
arpl
fmul
and
jp
cmc
fisubl
cmp
cli
shll
sub
das
rcll
je
data16
aam
sub
aam
inc
xchg
cmpsb
fdivp
xor
in
sub
sub
iret
adc
out
adc
cmp
loopne
jmp
neg
gs
mov
pop
ljmp
fistpl
mov
cmc
rcrl
insb
shrl
subl
dec
ljmp
movsl
mov
dec
scas
dec
pop
pop
je
in
lret
mov
adc
sub
bound
clc
jl
subl
dec
mov
sti
jecxz
lahf
out
dec
fnstsw
dec
push
xor
cmp
adc
aam
aaa
insb
inc
adc
cmpsb
out
dec
adc
hlt
iret
dec
adc
xor
xor
jne
push
rolb
repz
inc
neg
stos
lods
ds
inc
testl
push
jecxz
insl
lods
inc
fcmovbe
mov
sbb
sbb
dec
js
jle
push
pop
and
inc
les
pop
test
fnstenv
mov
inc
dec
pop
into
dec
mov
insb
lret
popa
lcall
adc
adc
clc
cs
mov
in
fwait
push
mov
fwait
ljmp
shl
fbld
mov
shlw
xchg
inc
mov
daa
mov
outsb
sbb
cltd
ret
pop
nop
lretw
dec
cs
cli
lods
notl
test
pop
dec
in
sub
icebp
xchg
sub
xor
movsb
mov
loope
fnstcw
test
orb
push
mov
cmp
inc
fiaddl
jmp
orl
cs
xchg
or
jp
or
and
cmp
dec
les
cld
in
xlat
cmpsl
xchg
out
push
enter
fidivs
cwtl
and
insl
call
js
cmc
xchg
mov
icebp
les
jmp
ja
push
sbb
hlt
clc
repnz
fisubl
gs
pop
dec
pop
pop
fcompl
lahf
lahf
inc
std
std
scas
imull
das
mov
dec
xchg
pop
lahf
shll
clc
jne
mov
stos
sub
mov
push
adc
addr16
inc
testb
xor
imul
inc
or
mov
gs
clc
outsl
leave
data16
jne
fwait
stc
cwtl
icebp
ja
hlt
hlt
push
or
popf
dec
push
jno
push
cmpsl
je
push
rcrl
rcr
jl
inc
jecxz
inc
mov
mov
dec
xor
xor
inc
mov
xor
xor
xor
imul
lds
adc
int
sbb
or
mov
enter
cmp
loopne
out
dec
es
fidivrs
lret
mov
jp
ret
pushf
mov
fidivs
pop
jne
pop
fsubl
out
cmp
movsl
int
lcall
push
push
mov
inc
es
add
clc
mov
rorl
jg
mov
stc
in
inc
clc
xchg
call
jnp
shll
pop
outsl
add
outsl
leave
xchg
xlat
jecxz
out
adc
cmpsb
sub
notl
xor
lret
sub
repz
rcl
hlt
add
pop
scas
hlt
lods
mov
arpl
jg
pop
xorb
pop
rorl
in
pushf
add
cmc
push
popa
cmp
popf
ljmp
jbe
les
cld
jbe
xorl
and
cmpsb
mov
aam
int
mov
sub
arpl
dec
sahf
sub
je
cmp
popf
loope
jo
mov
js
or
mov
mov
cltd
push
pop
inc
push
inc
cmpsb
fldcw
xor
push
push
mov
mov
dec
push
cmpsl
aaa
push
xor
mov
xor
sbb
inc
xchg
adc
aas
add
pop
in
std
jno
push
ja
dec
push
mov
xchg
ljmp
stc
mov
mov
aam
cmpsl
push
pop
inc
lcall
mov
xchg
lcall
mov
pop
mov
and
or
cltd
movsb
inc
stos
pop
xchg
lods
push
mov
jmp
adc
gs
jmp
pusha
push
test
add
mov
mov
into
arpl
push
jnp
mov
in
and
jnp
dec
push
rcr
xchg
mov
xor
fisttpll
jns
mov
xchg
ja
mov
outsl
xchg
mul
arpl
int3
stos
arpl
rcrl
sub
push
sub
mov
lods
mov
inc
push
fstps
xchg
push
lret
test
mov
loop
cwtl
jle
mov
pop
loope
lcall
pop
stos
inc
out
cmpsb
adc
mov
and
xor
ja
mov
cwtl
enter
lret
mov
shrl
cmp
or
add
sarb
mov
mov
outsl
jmp
daa
xor
cld
outsb
lds
ret
pusha
repz
cli
mov
add
notb
sahf
mov
or
xchg
lea
push
jmp
test
mov
lock
aam
inc
fs
and
filds
imul
fidivrl
dec
sbbb
rorb
insl
mov
inc
mov
fisubs
or
xchg
dec
mov
sbb
sti
jmp
jno
mov
jmp
stos
lds
dec
imul
das
sbbl
jno
mov
mov
shl
push
pop
cmc
push
imul
push
mov
pop
ret
mov
ret
mov
jae
jne
or
xor
mov
lret
jmp
cmp
cli
ds
notb
push
sbb
fs
push
cld
lods
ljmp
jmp
and
mov
sahf
or
jae
xchg
push
dec
ljmp
lahf
sarb
adc
pop
or
das
bound
loopne
ja
lret
xlat
push
adc
mov
add
push
pop
sti
cmpsb
dec
mov
xchg
fwait
or
fsubl
mov
jns
stc
or
mov
inc
cmp
outsb
mov
nop
aam
mov
mov
sub
jg
cmp
mov
nop
lods
ss
ds
xor
and
inc
jnp
pop
out
les
mov
insl
das
inc
out
out
add
aaa
dec
aaa
cmp
in
outsl
inc
lcall
rep
imul
push
and
out
lods
fldl
fwait
xchg
stos
push
pop
jbe
fcomps
aad
xchg
js
mov
cmp
add
jecxz
pop
jecxz
jg
and
lods
and
int
push
push
cld
into
jp
das
pop
hlt
rcr
mov
call
filds
icebp
xor
push
lret
push
mov
out
jne
loope
fucomp
xor
lcall
xchg
shlb
cmp
lock
insl
idivb
jnp
pop
mov
xchg
inc
repz
lds
movb
xor
je
jnp
and
pop
cmp
mov
dec
je
jb
lea
push
push
jecxz
adc
adc
dec
aas
sbb
ror
sub
push
mull
add
or
daa
repnz
outsb
aaa
pop
xchg
jb
jp
or
popa
mov
std
and
pop
pop
mov
mov
xchg
cmpsb
mov
mov
inc
outsb
and
pop
pop
movsb
and
loopne
std
xor
in
push
cmp
jecxz
add
xchg
push
push
ds
mov
push
lret
cmpsl
push
lea
lahf
fimull
int
jge
leave
out
repz
aaa
cmpsb
fs
fdivr
movsl
std
and
lods
pop
jae
mov
test
sbb
enter
in
dec
lret
add
push
xchg
mov
mov
push
fldl
pop
mov
push
dec
int
dec
mov
sbb
jg
stos
leave
sahf
imul
in
movsb
mov
jns
pop
sub
mov
push
lret
scas
out
insb
xchg
mov
lret
scas
and
and
aaa
into
cld
test
repnz
mov
sub
and
stos
mov
xor
out
es
in
cmp
std
ficoms
push
lock
jmp
fwait
and
adc
repz
shl
loopne
aam
mov
push
xchg
mov
xchg
dec
and
mov
push
push
movsl
ret
fmul
sub
or
aaa
cs
xor
adc
shrb
push
pop
xchg
in
sub
push
cmp
outsb
and
pop
inc
es
sub
stc
push
movsb
bound
pop
mov
sbb
jns
je
push
testb
in
stos
add
stos
sahf
jecxz
fnstcw
mov
cli
shrl
xor
mov
inc
dec
inc
xor
test
jne
fdivs
pop
sub
insl
mov
out
mov
fildll
das
mov
push
lahf
jnp
jmp
stos
enter
dec
cmp
nop
out
fisubs
mov
ret
insl
ret
les
dec
lods
nop
mov
lret
repnz
lahf
lahf
jl
mov
cmp
inc
xchg
popf
mov
and
ljmp
cltd
lods
jne
ljmp
fxch
lret
imull
pop
mov
cmp
inc
mov
out
inc
dec
insl
cmove
or
or
xchg
int
mov
mov
stc
test
fnstsw
mov
add
dec
data16
mov
jle
addb
jae,pt
in
sarb
fmull
push
pop
movl
push
inc
jae
cmp
xor
or
add
sub
pop
and
aad
sbb
push
xchg
xor
mov
stos
add
test
mov
std
cmp
xchg
xchg
in
scas
ror
push
jbe
fcomps
inc
add
arpl
mov
fwait
aas
jge
pop
mov
std
call
xchg
cli
push
lahf
mov
or
movsl
shll
imull
lcall
loop
xchg
cmp
ret
mov
je
push
stos
cli
push
dec
gs
stc
xchg
scas
es
into
lods
scas
sub
nop
sub
aad
push
int3
test
gs
imul
fsub
jmp
xor
sahf
imul
jg
in
int3
loopne
repz
imul
out
xlat
outsb
xorb
add
fcoml
addr16
cmc
shll
pushf
fwait
ja
lods
es
sarb
mov
rcrb
std
repnz
mov
daa
dec
fmull
pop
fisubrs
adc
mov
cltd
jge
sub
das
shrl
fwait
lods
mov
jns
in
adc
and
fdivrl
pop
mov
mov
pop
mov
clc
adc
filds
mov
xchg
mov
test
or
xor
sub
add
jae
sub
push
test
fwait
movsb
xor
idivl
jne
insl
mov
stc
in
cmpsl
add
add
insl
leave
movsl
jne
movsl
xchg
xchg
jae
push
lods
fstpl
or
lahf
cmp
jmp
push
pop
push
test
add
pushf
mov
out
push
shrl
loopne
std
sbb
cli
sbb
and
sbb
push
inc
jnp
movsb
ja
add
frstor
mov
mov
jecxz
xor
jo
xor
and
pop
push
mov
xchg
jne
in
jns
jl
sti
jp
or
mov
cmc
mov
push
xchg
arpl
jo
ljmp
jb
enter
adc
outsl
pop
mov
xchg
jle
push
outsb
lahf
pop
adc
sub
gs
hlt
aaa
in
and
dec
mov
jbe
jp
cmp
mov
push
push
jge
jnp
mov
xchg
cwtl
subb
push
xchg
sub
pop
into
popf
or
sub
cmp
test
cmpsb
sbb
out
sbb
stos
lods
aaa
out
sbb
jecxz
adc
cmp
or
jo
daa
sbb
fdivrs
pop
lds
stos
xchg
stos
iret
mov
testl
mov
les
and
incl
ficoml
in
xchg
cltd
pop
imulb
dec
sub
mov
jp
shrl
or
push
iret
aas
lock
inc
loop
data16
jb
out
inc
dec
adc
inc
cwtl
dec
in
dec
stos
sbb
mov
nop
pop
ja
cwtl
pop
aad
mov
lret
cltd
shrb
xchg
aaa
int
xchg
bound
xor
push
jg
hlt
mov
int3
dec
xchg
stc
dec
xor
adc
scas
add
cmpsb
andb
imul
mov
shlb
fists
xchg
movsl
mov
jge
loopne
test
cli
cmpsl
filds
arpl
and
jnp
cwtl
sbb
lcall
adc
inc
into
cli
lea
jmp
xor
pop
cltd
pop
add
pop
mov
jmp
outsl
insl
rclb
inc
mov
les
jp
jb
fptan
stos
in
popa
cmp
dec
push
xor
cmp
dec
lods
decl
push
jmp
addl
mov
outsl
push
gs
mov
inc
call
xor
fisttpll
rol
sub
imull
dec
mov
popa
fs
push
jge
mov
lcall
cmp
loopne
call
sbb
pop
jge
notb
jne
lahf
mov
aaa
imul
scas
pop
pop
rorb
sarb
mov
push
int
fdivr
in
pop
out
test
rorb
addr16
ss
dec
lret
cltd
cli
mov
push
ljmp
adc
stc
popa
clc
xchg
div
ret
fmuls
inc
in
loopne
xor
ds
mov
and
clc
mov
xor
push
push
daa
sti
mov
xchg
pop
jge
jae
adc
shl
push
cmp
out
sub
ds
sub
mov
aad
stos
push
dec
fstl
add
push
int
ja
repnz
in
xchg
pop
lea
or
sbb
lock
dec
push
repnz
sbb
ret
cmp
mov
rolb
sub
in
and
push
mov
sub
push
jle
jg
cmpsb
mov
push
cmp
test
dec
stos
out
push
rorb
cld
negb
bswap
mov
bnd
insb
dec
insb
dec
daa
ds
stos
inc
push
push
pop
idiv
test
mov
and
push
dec
in
push
outsb
or
sub
icebp
dec
popa
loop
repnz
nop
rorb
sub
lods
push
push
mov
ret
push
mov
inc
inc
adc
popa
loop
fidivl
and
cmp
repnz
aam
rcll
cmp
dec
loope
inc
push
push
aaa
mov
es
call
or
push
jge
dec
xor
fistpll
js
dec
cmp
pushf
sub
stos
movsb
xor
mov
cmp
scas
sub
dec
cld
push
fsts
and
js
xor
movsl
jp
lcall
cmp
cld
mov
pop
ja
push
test
push
in
jbe
sub
jo
and
mov
xchg
lret
in
cmp
stos
lahf
hlt
pop
rorb
sub
shll
cmp
aas
dec
jp
cmc
push
std
and
sbb
jb
add
jne
movsb
adc
incl
jne
push
cltd
mov
push
cwtl
cli
xchg
lret
mov
and
inc
sub
sahf
lret
cmc
jmp
push
mov
adc
incl
push
pop
rcrl
mov
cltd
iret
jl
cmp
loope
xchg
mov
aad
sbb
leave
mov
popa
sub
imul
ljmp
lods
cmpsl
push
popa
or
dec
or
xchg
jnp
cmpsb
scas
mov
in
test
push
push
push
iret
jl
add
cltd
push
rcrl
int3
fisttps
fmul
aad
lods
pop
mov
jo
add
jbe
or
aad
jl
jns
sbb
cltd
mov
ss
ficomps
notl
lods
pop
xlat
popa
out
sbb
jns
mov
aaa
push
test
lds
mov
jb
pop
js
xor
dec
lock
cmp
aad
roll
mov
jp
jne
mov
push
sbb
mov
repz
inc
mov
cmp
jnp
jp
aaa
or
sub
jnp
lcall
ljmp
fs
fs
stos
mov
sbb
xchg
cli
mov
or
sub
insl
dec
sub
cltd
xchg
mov
test
rcr
bound
iret
mov
mov
pop
sti
xchg
daa
js
loopne
test
rolb
sti
or
mov
out
stos
or
pop
iret
mov
movsb
dec
pop
imul
cmp
outsb
fbld
mov
xchg
dec
xchg
push
mov
mov
ss
push
pop
notb
pop
mov
cli
lcall
addr16
mov
lcall
out
clc
insl
loopne
inc
lea
popa
mov
mov
dec
and
popa
mov
xchg
sarl
sarb
xor
xchg
lea
and
jecxz
mov
js
ss
icebp
fdivrs
inc
insb
push
sub
call
mov
xchg
mov
cmp
inc
xchg
sti
jae
push
loopne
cmp
xor
ja
and
fs
clc
jmp
mov
or
xchg
movsl
shrb
dec
mov
sub
xor
pop
inc
xor
sub
jg
ds
pop
test
sbb
hlt
xor
lods
mov
adcl
push
xchg
jo
repz
enter
out
and
push
stos
es
mov
shll
aaa
out
stos
shl
fsubrp
sbb
pop
ret
test
add
xorl
xor
dec
icebp
xchg
xchg
leave
mov
adc
nop
aas
ljmp
cmp
sbb
test
jle
and
movsb
push
push
sbb
test
test
cltd
mov
jno
repnz
mov
pop
sahf
sbb
pop
js
into
out
pop
push
or
insb
mulb
andl
cmpsl
fs
cld
pop
and
decl
adc
push
movsb
dec
mov
inc
mov
xchg
adc
or
jmp
mov
enter
fidivrs
int3
sbb
mov
fisubs
repz
jl
and
out
mov
adc
dec
shl
xor
push
push
sbb
lock
xchg
inc
pop
mov
lock
movsl
pop
adc
adc
push
xor
inc
inc
movsb
das
pop
fistpll
fadd
push
movsl
loope
dec
mov
mov
rolb
mov
pop
cli
daa
insb
adc
inc
mov
shlb
fldcw
lret
fnsave
pusha
xor
cmp
stc
push
mov
add
sub
es
cs
inc
pop
cmp
jecxz
and
in
lock
adc
or
add
mov
add
xchg
loope
add
push
or
cmp
pop
jg
mov
add
scas
testb
inc
push
xlat
shl
loope
sub
and
cmp
sysexit
push
or
xchg
and
fstpl
pop
add
cmp
push
popa
or
sub
popa
test
sub
movsl
test
rorl
arpl
sub
addl
adc
call
pushf
or
jge
rclb
jmp
cmp
les
adc
inc
jmp
jnp
sbb
mov
or
xor
add
sbbb
inc
or
outsb
add
jle
dec
pop
ret
loope
xchg
dec
lcall
and
jne
mov
fimuls
das
mov
push
mov
shlb
fistpll
dec
xor
inc
and
jecxz
mov
mov
test
push
dec
inc
inc
or
add
or
jnp
adc
push
xchg
insl
xchg
fisubl
push
inc
in
mov
add
lods
ret
push
or
add
sub
adcb
loopne
sbb
add
push
xor
inc
xchg
xor
jmp
xchg
cld
xchg
xor
mov
or
in
movsb
cmp
sbb
nop
push
lea
into
sbbl
and
or
jo
cwtl
outsl
daa
add
ss
jo
mov
inc
and
and
cmpsb
icebp
sarb
in
aas
inc
inc
cmp
or
push
xchg
jmp
stc
clc
pop
dec
test
push
or
push
loope
setno
inc
add
pusha
cmp
inc
adc
push
cmp
clc
sbb
loopne
jne
popa
mov
inc
mov
dec
out
xchg
ss
mov
out
lcall
pop
mov
out
int
shlb
js
call
nop
pop
add
pop
jecxz
sti
mov
in
loop
jno
cmpl
shlb
jnp
repnz
add
jmp
add
jo
ret
jmp
mov
jp
push
mov
lock
dec
or
or
loop
call
in
sti
nop
inc
jp
pop
add
jg
add
rcll
adc
inc
aad
inc
ljmp
mov
cmp
in
or
sbb
roll
push
dec
dec
xlat
sbb
push
push
inc
ds
mov
mov
ret
lcall
push
out
shll
jmp
fwait
xor
dec
xchg
test
sti
fildll
push
mov
aaa
js
pop
test
pop
adc
in
aam
sti
stos
mov
sti
das
sbbb
aaa
sbb
lahf
jmp
cmp
mov
repnz
ss
fiadds
dec
inc
jp
and
inc
and
cmp
and
adc
adc
push
gs
int3
hlt
out
cmp
sub
scas
add
mov
js
push
loopne
push
subb
mov
dec
xor
ret
rol
dec
push
ret
outsb
icebp
iret
fiadds
or
add
mov
push
icebp
shrb
sbbb
jle
stos
mov
push
lcall
aad
push
push
in
xchg
loope
leave
pop
jb
leave
add
add
or
xor
cmp
or
add
mov
sti
push
or
js
mov
adc
push
bnd
mov
stc
cmpsl
inc
cmp
xchg
or
add
jp
sub
test
loope
jno
andl
sbb
sti
push
lea
pop
dec
xchg
or
std
shlb
cmpsb
movsl
rolb
inc
roll
imul
nop
jo
js
or
sbb
jns
mov
adc
mull
andl
jge
mov
inc
and
ja
mov
fists
sub
lods
inc
sub
adc
and
pushf
jo
cmp
add
pop
or
movl
loopne
filds
add
dec
sub
andl
mov
addb
dec
sbb
and
inc
negl
push
es
cmp
unpcklps
movsl
sarb
adc
push
xchg
pop
xor
mov
incl
pop
fdivs
pop
test
popa
and
adc
cs
hlt
push
enter
pop
add
sahf
sbb
add
add
mov
inc
clc
sbb
inc
das
in
loope
mov
add
popa
or
test
inc
ja
jmp
mov
mov
ret
sbb
aad
nop
push
lcall
cmp
test
aad
cmp
cmp
push
enter
rcl
sub
icebp
add
loopne
pop
addl
sti
sub
out
popa
xchg
ret
adc
push
dec
push
mov
mov
sbbb
lea
mov
and
xchg
jno
pop
scas
cmpb
jle
cli
lahf
jno
insl
aas
test
pop
add
xchg
push
push
mov
xchg
inc
mov
add
dec
sti
mov
add
and
push
add
mov
cmp
pop
idivl
push
ss
addr16
test
pop
idivl
idivl
sbb
mov
jle
js
loope
mov
adc
es
inc
push
adc
adc
mov
leave
push
or
lock
cmp
call
or
std
rcll
test
sub
sub
sub
xor
mov
mov
and
lock
dec
sub
and
and
push
pop
adcl
repnz
loopne
ds
dec
or
or
pop
movsb
test
sub
ja
jbe
mov
jecxz
lcall
addl
or
jecxz
mov
inc
and
or
loopne,pt
push
cwtl
add
xor
movsb
xchg
push
mov
lea
clc
xchg
popf
jmp
mov
jl
inc
in
jp
loope
and
bound
pushl
sub
mov
mov
jp
pusha
push
xchg
shll
test
lea
pop
adc
sbbl
mov
xor
adc
push
mov
mov
loopne
mov
orb
pusha
hlt
and
and
jno
cmp
pop
and
mov
or
roll
and
sbb
adc
loopne
add
fwait
add
call
cmc
cmp
push
aam
dec
pushl
dec
inc
ret
jmp
push
sbb
cmc
mov
sti
xchg
inc
stos
test
cmp
lret
jmp
sbb
mov
addl
mov
sti
mov
push
xlat
pop
and
out
mov
jle
scas
jge
inc
xchg
lret
sub
or
adc
addl
pop
or
push
sub
add
and
or
and
fcomi
popa
mov
or
dec
pop
mulb
push
push
dec
shll
out
mov
out
jnp
push
push
repnz
push
je
mov
jmp
cs
shlb
test
sbbb
xchg
pop
sbb
in
clc
stc
xchg
pop
and
fdivl
push
mov
inc
shl
sbb
jmp
sarb
jecxz
scas
add
mov
fildl
sub
jg
pop
cs
xlat
stos
sub
cmp
repnz
stos
fisubrs
and
fnstcw
stos
add
or
pushf
std
ds
test
insb
aas
dec
stc
dec
xchg
sub
mov
imulb
out
xor
ja
xor
jg
xchg
jae
repz
add
xor
and
rorl
inc
ret
mul
push
cmpsb
jecxz
mov
add
js
sub
xchg
sub
push
rol
and
mov
pop
mov
ret
jle
xchg
sub
mov
inc
mov
cmp
rorl
pop
xchg
push
or
pop
dec
xor
mov
dec
mov
icebp
in
mov
sub
clc
adc
sbb
and
jbe
jecxz
std
pop
push
repnz
mov
lods
rorl
and
les
mov
dec
sub
pop
mov
mov
sub
mov
shl
sbb
jmp
push
mov
sbb
add
cwtl
cmp
fiaddl
out
and
andb
sub
xchg
push
movsb
lret
dec
psrlw
dec
xchg
insb
mov
pop
jne
in
sub
sbb
inc
popa
ret
into
and
and
sarb
push
mov
or
roll
mov
inc
ficoml
mov
mov
cmpb
and
mov
and
jmp
nop
ds
mov
pop
lock
div
cli
scas
aad
or
lret
leave
lods
push
inc
push
push
add
repz
push
or
ss
fwait
push
xchg
add
sub
ljmp
sarb
push
jl
adc
xor
sbb
lret
in
fwait
jbe
mov
js
subb
test
mov
mov
mov
adc
mov
dec
out
insb
ds
and
jo
aam
shll
outsb
and
mov
std
mov
adc
outsb
fstpt
push
pop
add
bound
jecxz
pop
xchg
rcrl
int
in
scas
fmulp
lcall
dec
mov
shl
xchg
cmc
jns
aam
inc
and
cwtl
ret
sti
in
jb
repz
push
sbb
mov
mov
sahf
nop
mov
cld
pop
and
fsubrl
insb
jge
out
mov
stos
sarl
cwtl
mov
repnz
sub
out
sub
scas
xchg
inc
mov
push
push
test
cli
sbb
sarl
and
insl
ficompl
push
pop
cld
add
and
add
adc
mov
sub
pop
pusha
stc
jle
ror
xchg
jmp
lds
adc
push
ffree
fisttpll
mov
pop
xchg
jecxz
sub
or
adc
lea
sti
dec
xchg
dec
cmp
adc
add
ret
adcb
jns
add
mov
push
cmp
jg
outsb
push
mov
loope
movsb
lea
dec
sti
rcrl
cmp
sub
jp
pop
sbbl
cmp
inc
inc
xor
hlt
mov
jmp
pop
sti
mov
inc
sar
stos
mov
test
daa
and
inc
adc
sub
push
sarb
scas
pop
mov
or
sub
pop
mov
inc
rorb
mov
xchg
pop
sbbb
jle
dec
dec
sub
and
sub
loopne
fistl
adc
in
call
movsl
push
popa
and
sbbl
test
imul
ja
or
stc
pop
sbb
mov
and
mov
push
push
push
xchg
adcb
sbb
add
ret
leave
inc
xlat
repz
dec
aas
scas
add
aaa
fs
xchg
push
rcl
dec
loope
xchg
scas
push
andl
pusha
xor
or
int
aas
inc
or
dec
jb
pop
iret
aad
nop
out
hlt
int
mov
lds
flds
fcoml
mov
adc
push
pop
push
std
shl
imul
rclb
cmp
cmp
add
test
jmp
not
sbb
xor
loopne
push
jnp
fstl
add
lods
xchg
or
sarb
cmp
ljmp
adc
xor
sub
popa
sbb
mov
clc
mov
pop
push
push
cmpb
int
adc
lea
mov
adc
aad
scas
leave
fists
insl
and
pop
dec
mov
fwait
mov
mov
push
mov
adcl
aaa
mov
sahf
xchg
loop
addr16
cmp
jb
nop
cltd
pop
mov
add
dec
mov
mov
jbe
jnp
dec
mov
mov
stos
stos
adc
xlat
fisubl
cmpsl
dec
and
push
data16
nop
nop
mov
or
addl
jnp
int3
adc
mov
insl
jge
pop
adc
xchg
stc
push
std
pop
xlat
dec
adcb
mov
aam
repz
cmc
push
mov
adc
xchg
mov
adc
mov
jecxz
lcall
add
jns
lods
cmp
mov
cltd
xor
das
scas
out
pop
inc
lock
sub
stc
inc
pop
adc
lds
lcall
mov
or
shlb
or
sahf
and
sti
mov
movsl
add
fs
lea
mov
jecxz
dec
mov
cmp
pop
dec
lea
fsubr
cmp
mov
dec
cmp
adc
pop
sbb
outsb
insl
cmp
jmp
mov
dec
xor
mov
pop
mov
jl
scas
orl
in
cmp
cmp
push
mov
xchg
aas
fidivrl
fs
repz
ds
das
aaa
iret
fcomps
inc
mov
sahf
mov
int
negl
and
pop
movsl
xchg
push
out
fstpt
notb
data16
add
mov
mov
add
xchg
cli
xchg
cld
and
jb
add
mov
fdivrp
jno
movsl
xchg
add
xchg
ret
inc
insl
and
push
mov
mov
adc
ficoms
sub
pop
ret
mov
cld
in
mov
ja
cli
pusha
cld
sbb
jmp
xor
and
push
dec
or
mov
push
jmp
dec
fisubrl
jmp
inc
push
mov
inc
in
push
dec
int3
jne
negb
xor
jne
pop
dec
jmp
movsb
mov
xchg
mov
add
daa
sub
mov
adc
pop
faddl
pusha
stos
push
xchg
rcr
cmp
or
jmp
sub
mov
or
aad
or
fimull
les
xor
mov
or
sti
cltd
xor
jp
mov
mov
daa
mov
sbb
in
jmp
aas
repnz
ficompl
jne
fprem1
pop
mov
adc
nop
add
scas
filds
inc
mov
leave
push
in
mov
inc
pop
mov
or
mov
fxch
cmp
stos
inc
mov
scas
dec
mov
lret
int
ss
dec
addr16
rcrl
sub
cwtl
mov
or
jae
inc
mov
jnp
sbb
lahf
daa
and
pop
mov
jb
sbb
stos
rcll
mov
push
mov
ljmp
sti
jno
add
dec
rorb
incb
stos
out
inc
loop
add
ret
and
add
xchg
sti
jp
sub
data16
add
pushf
dec
loopne
shl
scas
jp
mov
fimull
push
dec
mov
stos
mov
in
or
mov
add
inc
inc
sahf
dec
jae
inc
popf
or
xor
mov
push
and
das
push
cmpsl
pop
inc
xor
and
mov
nop
adc
pop
xor
sub
jp
pop
pop
mov
or
push
aad
call
ljmp
mov
imul
psrld
xchg
shlb
sbb
adc
sub
popf
mov
cmpsb
mov
lds
andl
in
pop
or
xchg
adc
mov
bound
or
cld
pop
in
dec
int3
bnd
pusha
sub
xchg
cmc
xchg
ja
test
jb
lret
xchg
push
mov
test
jne
inc
or
out
dec
jge
add
push
fcompl
fstps
pmaddwd
sbb
inc
push
push
sub
clc
ret
mov
mov
lret
test
and
jmp
inc
loope
mov
in
stos
ret
dec
inc
ret
rcr
sub
mov
ret
or
pop
lret
xor
xchg
fmulp
jbe
push
push
mov
mov
mov
inc
sub
add
push
fbld
push
mov
jecxz
xor
sahf
cli
pop
mov
push
adc
xor
mov
repnz
mov
cmpsb
clc
leave
sbb
pop
add
pop
mov
jns
ret
fcmove
push
cmp
xchg
fidivrs
in
out
shll
jmp
cmc
js
pushf
jne
nop
mov
xor
inc
in
sub
jle
jo
sub
cmp
addr16
mov
sub
mov
sbb
shrl
stos
mov
stos
push
loop
push
shll
xor
pop
in
fbstp
add
int3
pop
int3
sarl
mov
cmpsl
cli
xchg
fisubl
cli
dec
add
xlat
push
or
mul
sub
inc
mov
pop
cld
and
aad
mov
sbb
jne
xchg
lods
test
inc
fldenv
pop
pop
arpl
or
sub
jle
inc
rorl
dec
mov
sti
mov
xor
mov
sub
loop
mov
mov
pop
test
lret
xchg
xchg
sbb
add
push
stos
sti
into
aad
cmpsb
mov
repnz
lea
fs
inc
push
mov
mov
ret
mov
leave
push
and
cmpsb
sub
fdivs
popl
fs
add
out
pop
add
cld
sub
test
dec
sti
mov
mov
push
dec
pop
ja
popf
idiv
jne
shlb
xchg
cmc
sbb
addr16
test
dec
push
lds
movsb
inc
das
inc
scas
and
dec
pop
and
bound
cmp
les
dec
and
cltd
sbb
ss
xor
lods
mov
jb
movsl
in
call
ljmp
xchg
dec
das
test
cli
and
jge
xchg
cwtl
cmc
shlb
jo
pop
fiaddl
xchg
dec
iret
inc
xor
mov
inc
ds
dec
xor
inc
idivl
xor
jnp
popf
sub
or
and
inc
xlat
pop
mov
iret
data16
imul
aaa
lea
mov
mov
dec
mov
adc
push
adc
adc
into
aas
stos
mov
or
cmp
jnp
mov
dec
in
cld
jne
mov
pop
add
stos
fildll
jp,pn
inc
mov
lea
add
jo
and
test
jp
gs
insl
mov
fst
insb
lret
mov
xor
cmp
repz
pop
xchg
les
mov
dec
or
fcomps
or
jmp
inc
leave
fnsave
adc
ret
inc
icebp
lds
in
idiv
popa
sub
mov
and
jno
push
daa
xor
dec
xchg
and
push
arpl
mov
aas
in
scas
or
xchg
gs
inc
popf
adc
jmp
jne
push
jnp
xor
test
loope
dec
das
add
mov
aas
jns
sub
cmp
inc
xchg
pusha
insl
insl
jb
mov
sbb
lock
inc
sub
adc
inc
mov
imul
insl
ja
call
cmp
andb
mov
xchg
sub
nop
sub
adc
test
mov
dec
xchg
stos
loopne
xchg
pop
test
repnz
pop
cmp
ret
sub
sbb
les
movsb
gs
push
xor
sub
sub
push
insl
stos
pop
or
pop
jmp
lods
and
enter
shrl
cmp
cmc
in
lcall
adc
in
push
pop
jbe
clc
fldcw
mov
enter
cmp
cmc
mov
imul
mov
dec
xorb
or
repz
iret
sbb
stc
ret
daa
adcl
test
lcall
sbb
bts
mov
mov
loop
xchg
sbb
or
hlt
out
cmpsl
jg
cmp
ret
inc
inc
leave
xor
dec
adc
push
jle
jle
clc
add
lcall
pop
rep
push
add
out
mov
loopne
in
je
ds
in
in
das
push
out
out
sti
sub
mov
adc
cmp
loop
mov
iret
sub
pop
xchg
js
xchg
out
cs
jmp
cmpb
loope
cwtl
jbe
sarl
leave
iret
mov
cmc
xchg
adc
dec
mov
test
mov
mov
sub
insl
cmp
nop
movsb
lret
xchg
fisubs
les
outsl
and
xor
add
sbb
or
adc
cmpsb
std
push
pop
out
incb
ss
roll
add
outsb
pusha
pop
iret
or
inc
dec
xor
push
nop
orb
test
int
mov
aad
xlat
sbb
xor
les
lods
mov
std
out
pop
cmpsl
jne
lret
fsubl
test
xchg
clc
std
cmpsl
jo
dec
lahf
mov
popa
dec
nop
adc
pop
rcr
lods
loope
iret
and
pop
jb
sahf
mov
jge
test
mov
into
int
test
jno
lahf
cmpsl
fimull
mov
stos
or
scas
mov
pop
xor
sub
inc
pop
aas
jb
mov
icebp
dec
mov
xor
das
dec
fdiv
lret
insl
jg
pop
and
gs
rcr
mov
lahf
js
dec
div
ja
pop
jle
add
aad
push
enter
scas
sub
je
or
dec
jnp
fldt
push
dec
fbld
jge
mov
fwait
or
inc
fdivrl
lods
adcb
mov
dec
fcoml
cwtl
scas
ret
jbe
cltd
cmc
adcl
xor
in
clc
cltd
or
mov
mov
loope
test
jns
lahf
jp
xchg
aaa
insl
setle
les
mov
jne
nop
aas
mov
into
movsl
mov
jb
out
lea
out
pop
aam
das
cli
cmp
in
out
push
mov
fdivr
mov
sub
and
subb
xor
test
repz
xor
fisubrs
jg
add
fidivs
xchg
in
jbe
iret
lock
xchg
cmc
pop
cmp
inc
dec
aad
stos
sbb
mov
mov
jae
aaa
lahf
sbb
fsubrl
int3
fstps
in
lahf
mov
lock
ficoml
fsubs
cmp
and
scas
fnstcw
dec
vpunpcklqdq
pop
out
sbb
stos
and
out
cld
aam
inc
mov
loop
lcall
insb
pop
shlb
mov
fcmovb
insb
push
mov
inc
popa
subl
jecxz
hlt
jle
pop
sub
cmp
cltd
fsubs
andl
hlt
imul
pop
sub
cmc
fadds
cmp
mov
xchg
xor
jg
xchg
xor
jne
mov
jge,pn
imul
lds
mov
popa
call
fstl
inc
pushf
cmp
lret
jg
push
stc
shrl
xchg
push
push
dec
mov
repnz
push
stc
shll
cld
cmp
loopne
je
sub
push
ficompl
lods
incb
fistps
je
jp
sbbl
lods
and
adc
sub
imul
mov
mov
cmpsl
out
xchg
pop
sub
sub
rol
and
xor
push
mov
mov
adc
mov
push
jbe
popf
jae
insb
ret
dec
sbb
pop
jp
movsb
jl
clc
movsl
hlt
ds
int3
mov
dec
into
inc
mov
push
aad
sbb
lahf
jmp
aam
cmpsl
fwait
cmp
xlat
push
jge
fisttps
fbstp
dec
cmc
scas
rcrl
imulb
mov
push
xor
outsb
or
test
es
movsl
les
or
mov
std
inc
icebp
and
jb
mov
popa
mov
dec
cmp
cmpsl
int3
jl
sbbb
or
and
adc
pop
dec
push
cltd
int3
roll
sbb
lea
cmp
je
push
jbe
add
testl
ljmp
fs
sti
pop
sbb
shrl
lock
jno
arpl
pop
rcpps
pop
xchg
notb
add
push
push
push
shrb
imul
lcall
mov
in
fstp
pop
pop
mov
mov
and
adc
sahf
cmp
imul
adc
int3
push
fdivl
lret
or
pop
mov
aam
mov
push
cli
mov
jmp
repnz
push
pop
shll
jae
lock
lea
mov
mov
or
cmp
add
pop
and
int3
and
enter
jp
sub
outsb
out
jb
rorb
fiaddl
adc
jge
fcoml
lahf
and
aad
mov
pop
outsb
inc
test
jmp
f2xm1
repz
sbb
pop
lea
stos
jae
imul
js
cmp
fs
lcall
hlt
xchg
mov
daa
and
xchg
outsb
enter
sub
pop
stc
fsubr
and
mov
cltd
orl
pushf
sbb
fwait
popf
mov
jo
out
rcrl
push
mov
repz
fstl
std
pop
pop
out
enter
mov
cmp
cli
sarl
cmpl
xchg
cmp
sbb
popa
mov
push
mov
mov
dec
mov
mov
xchg
jb
sbb
iret
pop
fists
pop
mov
stc
and
mov
lods
push
scas
xor
pop
jp
pop
rcr
mov
mov
mov
xor
pop
inc
lods
and
mov
mov
xor
sbb
cli
pop
push
sbb
mov
sbb
sbb
xor
ljmp
imul
cld
out
sar
lds
lret
int3
jge
inc
popf
cmpsl
sbb
cs
sub
mov
add
subl
data16
push
push
and
pushf
aad
lahf
add
push
cli
loopne
adc
aad
mov
dec
mov
test
rorl
fs
sbb
popf
inc
cmp
es
mov
inc
fists
jl
rep
sub
mov
jne
es
xor
repnz
fnstenv
dec
jb
mov
pop
in
mov
inc
lcall
jl
push
rolb
dec
mov
push
push
inc
sub
mov
mov
inc
arpl
dec
dec
imul
mov
mov
shlb
mov
mov
aam
mov
imul
shl
add
decb
xchg
test
xor
in
jne
lret
pop
cmpsb
test
pop
or
xor
cld
fcomi
sub
jecxz
push
sbb
std
push
pushf
mov
mov
mov
or
js
sahf
jl
push
addr16
cld
daa
sbb
sbb
dec
cmpsl
gs
ret
stos
sbb
and
sub
or
test
inc
jmp
fisttpll
ja
inc
push
pop
aad
inc
sub
and
jmp
stos
sbb
xor
js
and
add
jnp
aam
mov
addr16
push
sahf
mov
xchg
push
lods
cmc
xlat
add
stc
stos
mov
jl
sub
mov
jbe
pop
das
in
or
push
cmp
lcall
sub
sub
and
out
push
jg
cmp
jg
and
out
mov
gs
jae
mov
push
xchg
xchg
int
test
mov
cmc
push
inc
adc
push
stos
movsb
push
in
ljmp
mov
stc
shl
lahf
pop
fidivl
fisubrs
mov
add
add
out
push
add
dec
jo
push
cmpxchg
dec
cli
ljmp
iret
in
adc
stos
sbb
fwait
and
in
pushf
xlat
sub
jne
sub
mov
mov
stos
and
xor
cmp
fwait
leave
decb
stos
sbb
xchg
ss
dec
jb
scas
mov
mov
push
das
arpl
lahf
movsl
test
outsb
cmpsb
test
test
sbb
cmc
xchg
xor
adc
arpl
movsl
lret
xchg
jl
lock
sbbb
push
rcll
imul
pop
add
fistl
stc
int
xor
mov
test
jecxz
or
inc
sbb
dec
pop
mov
imul
push
jae
les
jmp
fsubrl
sbb
or
jge
xchg
adc
xchg
mov
int3
jecxz
push
es
cmp
cld
xchg
arpl
insb
mov
ret
lret
ficomps
mov
bts
cs
jns
jmp
sub
push
outsb
sbb
sarl
out
push
pop
adc
iret
jle
or
cli
jb
add
int
jb
sbb
cmpsb
out
into
daa
mov
push
mov
inc
insb
outsl
mov
lret
divb
cmp
push
rcl
fistpll
cmp
xorb
fwait
loopne
icebp
push
xor
xor
out
cmp
add
xor
ja
jno
mov
pop
mov
ljmp
lods
cmp
xchg
adc
test
les
dec
cmpsb
push
inc
outsb
push
inc
lret
ror
ficoml
pop
mov
in
push
cld
inc
or
test
mov
sbb
push
daa
inc
pusha
and
in
ja
enter
hlt
fdivr
dec
sub
mov
or
gs
push
sti
sbb
hlt
out
xlat
lods
xchg
cmpsb
fists
hlt
sbb
cli
fs
in
cld
dec
jl
mov
mov
ja
cmp
mov
clc
inc
dec
ss
int3
addr16
aas
pop
mov
mov
inc
rorl
pop
mov
pop
cli
cmp
ret
pop
pushf
jmp
sbbl
cs
push
movsb
lahf
pop
cmp
pop
mov
mov
jl
mov
mov
aaa
mov
stc
xor
inc
jmp
mov
enter
jbe
xchg
lcall
in
add
sbb
cmpb
jns
push
dec
xor
adc
pop
jno
aas
and
sub
lock
inc
push
and
fwait
test
leave
sbb
pop
sahf
aad
dec
fsubs
mov
adc
mov
fs
fcomip
decl
mov
ffree
inc
call
adc
xor
aam
add
mov
xlat
movsb
mov
or
sub
popf
or
push
xor
sbb
mov
lret
mov
sub
push
xor
cwtl
mov
in
adc
hlt
fcompl
dec
cli
aad
and
addr16
pop
test
push
shrb
dec
in
adc
icebp
ljmp
lock
xor
iret
lock
cmpsb
mov
xor
jmp
and
addr16
ficomps
fs
mov
das
cltd
lret
sub
sub
cmp
outsl
jns
lret
push
aaa
adc
jno
push
repnz
nop
neg
adc
test
pop
dec
xchg
aaa
pop
or
pop
aam
jl
lret
mov
push
xor
pop
repz
jmp
das
cmp
xor
stc
in
dec
mov
clc
inc
xchg
or
push
adc
pop
inc
adc
lea
out
mulb
pop
imulb
and
mov
dec
outsb
inc
scas
or
repnz
sub
sub
pop
dec
cld
fwait
inc
xchg
inc
fs
flds
fs
pop
push
jne
pop
mov
cmc
jne
push
and
jge
mov
sbb
sarb
jge
in
fldt
xchg
in
adc
test
cmp
cmc
mov
cli
testl
bound
hlt
inc
jb
movb
popf
fmull
mov
fs
lahf
pop
pop
xchg
in
or
repnz
or
push
add
jecxz
inc
aad
cmovle
scas
push
mov
call
dec
dec
scas
rorl
aaa
je
cmpsb
decl
cli
dec
xor
jb
mov
subl
mov
stos
fstl
insb
fcomp
outsb
rcl
sub
aad
fdivrs
mov
push
xchg
stos
shlb
repz
mov
inc
es
cli
lods
add
cmp
mov
xchg
stc
adc
rolb
inc
sahf
pop
fwait
and
leave
xchg
lods
push
dec
and
jl
test
mov
jae
popa
repnz
std
adc
fmuls
fmulp
loopne
inc
aaa
clc
std
out
ja
je
dec
ds
cmpsb
sbb
ds
outsl
in
xchg
cltd
aad
iret
les
pop
daa
jo
hlt
test
jns
xchg
jne
dec
mov
mov
add
mov
aaa
xchg
or
outsl
out
xchg
arpl
inc
jae
xor
inc
push
sbb
lods
movsb
movsl
sub
jae
push
push
and
push
fildll
cld
lods
testb
popf
jno
lcall
negb
inc
inc
jb
or
shlb
mov
dec
scas
xor
lcall
jb
push
xor
mov
nop
cmp
filds
aaa
jp
sahf
bound
rorb
nop
mov
out
xchg
jmp
xchg
pushf
in
cwtl
cld
lods
filds
sti
aas
ss
pop
imul
sahf
mov
data16
es
or
lret
shlb
sub
push
xchg
popf
xorl
jb
adc
fstpl
mov
fwait
pop
jnp
cld
in
push
ss
movsb
and
xchg
imul
lea
jge
movsl
loop
dec
or
pop
test
fs
cli
fisttpl
and
adc
and
cmp
adc
sub
dec
and
divb
xor
outsl
adc
in
outsl
mov
adc
ret
mov
bound
ret
cmp
call
mov
leave
dec
push
mov
xchg
jecxz
mov
mov
jge
pop
xchg
js
push
scas
in
mov
lock
mov
ds
inc
out
ja
fwait
push
arpl
xor
push
xchg
or
aam
seta
nop
cmp
jle
es
jl
xchg
mov
cld
movsb
and
out
dec
cmpsb
sbb
pusha
or
cmp
push
test
jnp
mov
fs
insb
xor
lret
mov
xchg
loop
idivb
pusha
jno
dec
out
div
daa
xor
out
shlb
xchg
vmovd
int3
push
in
ja
cmp
and
pop
push
imul
cmp
push
sbb
scas
pop
jmp
sti
es
aas
dec
push
pop
sub
popf
aaa
fsubl
jmp
jl
es
fistpl
cmpsl
movl
aaa
imul
fldt
jnp
mov
cmpsl
inc
ss
push
movsl
push
cltd
xchg
lcall
jl
stos
lds
push
ror
cs
cmpsb
or
test
iret
mov
jle
popf
mov
mov
test
dec
push
cmp
jge
iret
mov
pop
insb
dec
out
jmp
insl
push
call
mov
pop
add
ds
push
fidivs
adc
inc
jne
xor
dec
clc
jae
sbb
fldl
xchg
jmp
cmp
mov
cmp
xor
xchg
dec
movsb
sbb
je
sub
mov
dec
into
or
sub
xor
popf
clc
and
xchg
xor
cs
pop
pop
out
mov
orb
mov
outsl
sbb
rcrl
out
push
cmc
sub
push
pop
aaa
cli
xor
adc
fyl2x
and
xchg
xlat
hlt
mov
inc
push
imul
popf
adc
sbbb
xchg
sti
mov
dec
sub
add
jecxz
mov
sahf
aad
xor
xchg
cmp
movsl
aad
inc
mov
xor
cmc
add
push
aaa
push
xlat
xchg
and
out
pop
xchg
fisttps
jae
in
mov
adc
shrb
mov
pop
cmp
dec
or
stc
outsb
mov
shrl
pop
jl
es
test
mov
xchg
jge
jbe
sarb
xchg
adc
insl
push
data16
pop
lret
and
sbb
imul
stos
faddl
push
leave
lret
shll
mov
pop
stos
leave
ds
ljmp
mov
sbb
ret
xor
shll
dec
jo
es
mov
insl
lret
mov
lods
int3
and
push
sbb
nop
pop
adc
xor
lahf
jmp
out
dec
sbb
and
idiv
jp
lret
dec
popf
lret
cmp
cli
aad
pop
mov
push
cwtl
iret
pop
jno
xchg
or
std
xor
inc
jo
cmpb
mov
inc
dec
in
xor
pushf
inc
sub
cli
sbb
filds
aam
sbb
lds
in
movsb
adc
icebp
or
cltd
repnz
dec
fists
stos
push
pop
push
jecxz
sbb
mov
outsb
push
pop
dec
push
in
sti
adc
pop
cmp
cmp
test
ja
add
mov
test
dec
mov
cmpsb
int
mov
mov
or
lahf
out
dec
adc
push
mov
or
mov
leave
mov
xor
xchg
repnz
cmp
sub
ret
stc
lods
jnp
movsb
ljmp
jne
int
out
push
mov
jnp
sub
loop
push
repnz
mov
je
pop
push
mov
dec
xchg
jo
lret
out
adc
jbe
ss
sar
es
cmpsl
orb
jb,pn
aaa
and
dec
push
stos
std
sbb
jnp
xor
insl
sbb
rep
dec
icebp
mov
fimuls
loop
mov
fiaddl
insl
mov
jl
push
or
push
push
aad
xchg
outsb
stos
jp
pop
iret
inc
xorb
shll
or
stos
mov
mov
out
lret
sbb
xor
or
xchg
test
arpl
jbe
negb
mov
cmp
roll
sarb
sub
xor
rolb
imul
dec
cwtl
not
idivb
pop
cltd
pop
lcall
enter
sbb
in
cmc
push
dec
sub
loop
mov
sub
dec
mov
lret
aam
cmp
mov
in
ljmp
aaa
or
fisubs
mov
out
cltd
adcl
lock
jns
lea
out
xor
cmp
pop
or
xor
nop
cwtl
xchg
cmp
leave
jp
shlb
pop
scas
aad
stc
sbb
into
push
dec
dec
xchg
nop
cmp
bound
mov
jbe
pop
mov
xorl
stc
and
jle
sub
enter
xchg
fisttpll
add
fsub
mov
fcomi
push
xor
leave
or
aas
int
jmp
addr16
sbb
ror
inc
dec
pushf
fcoms
stc
xchg
cwtl
lea
scas
in
mov
les
push
sbb
add
inc
dec
nop
popa
ficoms
or
cli
xchg
pusha
popa
sub
fidivs
push
mov
add
pop
stc
jle
adc
mov
xor
mov
aam
push
push
mov
int3
pop
out
imul
adc
push
pop
xchg
call
jmp
pop
xchg
repz
cltd
pop
out
mov
cmp
jae
pop
lret
cltd
inc
pusha
sub
shll
dec
ret
ds
mov
scas
sub
test
push
cmpsl
or
push
loop
dec
mov
push
jno
lock
insl
xor
xchg
lcall
subb
aas
loop
jno
in
lods
test
outsl
aaa
mov
icebp
dec
arpl
fwait
dec
dec
inc
xchg
aaa
mov
mov
jne
mov
xor
enter
xor
jg
fsubr
or
ret
rcrl
cmpsb
push
mov
into
and
ja
mov
stc
mov
addr16
gs
xlat
fmuls
jle
sbb
into
or
xor
push
mov
cld
mov
call
add
push
xchg
push
into
sub
movsl
mov
pop
dec
cmpsb
jo
cmp
into
jae
mov
xchg
scas
push
orl
lods
dec
lret
mov
xlat
jbe
leave
in
push
lods
dec
or
inc
mov
leave
repz
out
or
or
push
ret
adc
adc
and
xor
cmp
movsl
insl
inc
mov
fs
mov
pop
loope
xchg
cmp
mul
mov
push
bound
pushf
mov
adc
mov
sarl
cltd
jle
mov
mov
inc
mov
ficoml
and
fdivp
lea
ret
push
ja
shl
ds
clc
xchg
mov
inc
sbb
rolb
jne
mov
xchg
or
and
scas
shll
jle
int
mov
push
daa
dec
jo
cmp
sbb
jecxz
insb
and
mov
xchg
shrl
sbb
addr16
xor
sub
dec
call
pop
loopne
fidivrs
jbe
xor
ja
in
filds
push
jg
repnz
in
inc
and
stos
movsl
xlat
leave
push
adc
out
lret
xchg
push
cmpsb
jp
insl
ja
cwtl
cmp
repnz
movsl
mov
or
sub
mov
dec
pop
mov
in
sbb
addr16
jnp
xor
ficoms
push
sbb
insb
lahf
out
pushf
pop
aam
outsb
xchg
dec
scas
and
xorb
mov
rcll
out
inc
xchg
or
mov
xor
outsl
mov
sub
dec
xchg
adc
push
xor
push
adc
pop
sub
stc
iret
mov
push
outsl
or
outsb
out
inc
cld
lret
mov
call
mov
outsl
std
nop
mov
addr16
xlat
add
es
xorb
pop
repnz
lock
cwtl
dec
xor
push
mov
inc
nop
ficompl
inc
xor
cld
outsb
popf
cs
sbb
aas
in
fwait
add
test
cltd
call
jmp
jg
cmp
inc
pushf
loope
jns
pop
leave
insl
repnz
mov
test
dec
add
cmp
ret
es
and
mov
push
lahf
std
arpl
sbb
stc
sbb
jmp
mov
test
nop
mov
adc
inc
push
jle
sbb
les
out
daa
jle
dec
das
dec
movsb
call
push
testb
mov
push
popa
pop
shll
adc
fdivs
gs
subl
push
pusha
pop
sahf
jae
mov
inc
cli
out
loopne
lock
push
aas
int3
aam
jns
and
xor
aaa
cmp
adc
jge
fisttpl
xchg
xchg
xor
jl
ds
scas
imul
mov
dec
fldenv
das
or
mov
in
xor
rorb
stos
and
and
fstl
or
or
xchg
mov
cmp
and
std
push
xchg
pause
push
adc
cs
dec
pop
sub
loop
push
lock
cli
repz
mov
mov
pop
jle
jg
jg
pop
mov
imul
mov
js
in
push
jo
pushf
decl
scas
mov
mov
jb
clc
lods
adc
fimuls
xchg
xchg
cld
inc
aam
xchg
enter
mov
lea
sub
jmp
pop
sub
xlat
fcmovu
sbb
stc
fwait
cli
hlt
jp
in
in
mov
add
mov
and
sbb
mov
mov
mov
xor
lret
mov
sbb
out
into
in
ja
movsb
ljmp
xor
mov
stos
test
ljmp
mov
mov
or
mov
pop
xchg
pop
jl
in
bound
cmp
es
adc
and
lret
pop
mov
mov
adc
push
jbe
dec
mov
shrl
jle
mov
or
lds
sub
jb
cmpsb
sbb
dec
jo
adcb
mov
inc
push
jg
in
mov
xchg
jno
pushf
jg
dec
and
and
stos
and
inc
sub
insb
inc
movsb
cli
inc
jno
imulb
xchg
dec
lea
data16
inc
in
pop
push
adc
rorl
xor
xchg
and
cltd
xor
fisttpl
dec
adc
es
je
cmp
dec
nop
add
push
dec
sbb
inc
fisubs
sti
out
dec
jno
int3
js
add
stc
int3
xchg
sti
cwtl
xor
imul
mull
aaa
aad
push
or
push
and
pop
stos
int
movsb
lcall
mov
mov
mov
cmp
mov
inc
push
fnstsw
inc
stos
push
adc
aaa
sbb
lock
lea
das
mov
lods
cmc
imulb
inc
xchg
lret
addr16
mov
sbb
push
xor
jne
jmp
sahf
or
sbb
pop
js
js
adc
inc
lock
outsl
arpl
adc
pop
jo
fs
lcall
push
sarb
mov
xchg
out
sub
idivb
lods
and
shrb
push
pop
jecxz
iret
xlat
mov
lcall
adc
mov
jmp
fmull
leave
xor
mov
xchg
pop
xchg
pop
or
data16
data16
fsubs
jno
cmpsb
or
cmp
mov
sti
cwtl
ss
xor
jno
mov
into
loopne
faddl
push
inc
std
lods
call
ret
loope
push
dec
dec
jae
in
sbb
and
pop
inc
xor
pop
jecxz
data16
popa
push
inc
and
std
inc
mov
sub
xchg
adc
idiv
out
pop
mov
add
filds
add
loope
push
aaa
dec
and
cmp
test
push
data16
fwait
sub
mov
loop
cld
insb
sarb
dec
test
sbb
mov
push
cmc
pop
mov
pop
mov
add
mov
xor
mov
hlt
es
adc
aad
test
lret
sbb
lahf
pop
repz
scas
sub
arpl
pop
loope
ss
shrl
lods
int3
lock
sub
sbb
jge
into
mov
insl
push
clc
lods
inc
jge
mov
xor
sub
mov
cmp
mov
call
mov
push
inc
adc
std
or
sbb
movsb
xchg
aam
jbe
xor
cmp
inc
pop
sti
or
leave
nop
negb
loopne
das
test
xchg
mov
lods
mov
xchg
dec
jecxz
imul
cmp
push
cmp
cwtl
dec
sub
or
std
hlt
hlt
dec
jle
pop
mov
xchg
mov
jnp
pop
cltd
cmp
icebp
mov
js
icebp
and
xor
icebp
imul
xchg
movsl
rcrb
inc
or
xor
mov
jg
add
cmp
test
pop
mov
xor
sahf
mov
dec
clc
mov
testl
aam
cmpsl
push
xchg
add
sub
fimuls
lcall
mov
lret
ss
rolb
inc
inc
dec
test
jp
stos
ficoms
dec
jmp
inc
insb
outsl
xchg
ja
addb
std
shrb
dec
pop
dec
in
out
inc
pop
push
dec
mov
push
test
dec
test
push
insl
push
sti
ret
pop
sub
mov
sbb
addr16
je
leave
push
loop
sub
test
adc
jge
push
jbe
cltd
xchg
dec
cmp
push
xlat
add
push
test
iret
nop
outsb
mov
jle
dec
xchg
lea
mov
adc
fisttps
pusha
je
sbb
cwtl
es
in
into
iret
mov
enter
xchg
outsl
sarb
les
sub
hlt
cmp
addl
and
xlat
fbld
lret
dec
fst
in
lcall
xchg
loop
popa
jbe
xchg
jae
mov
cmp
dec
and
mov
pop
out
iret
mov
cmp
ret
scas
xchg
cmp
or
rcrl
jge
push
and
in
enter
scas
imul
xchg
out
mov
dec
push
xchg
lahf
frstor
xchg
push
les
dec
mov
mov
subl
test
push
xchg
movsl
lahf
fisttps
cmp
movsl
repz
insl
or
cmp
xchg
xor
shrb
mov
pop
and
rorb
push
pusha
xchg
push
sub
ret
test
cmpsl
int3
data16
cmp
les
mov
pop
mov
jge
inc
push
mov
test
sub
jl
and
xor
sub
jp
push
int3
divl
iret
test
out
cmpl
stos
pop
outsb
xor
mov
cmp
insl
mov
fsubs
inc
push
fwait
sti
sbb
push
xchg
mov
mov
mov
add
xlat
or
cli
add
mov
sub
sbbl
cmp
and
into
stos
fadd
pushf
iret
xor
popf
aas
fists
sbbb
pusha
lret
sub
mov
mov
insl
aas
cmp
push
cwtl
jp
and
pop
push
loopne
ret
mov
mov
jp
int3
pop
mov
xchg
add
dec
or
pop
dec
sbb
repz
aad
das
xlat
mov
mov
std
daa
mov
loope
dec
mov
mov
jne
mov
je
cld
stc
jg
div
sub
fsubl
das
jb
and
mov
cmc
mov
js
mov
call
push
xchg
inc
xchg
mov
imulb
and
add
sbb
inc
cmp
push
shl
lods
js
mov
adcb
rcrl
enter
lret
shrb
mov
add
xchg
push
mov
xor
push
test
pop
test
in
jp
sarl
sarb
mov
jmp
push
sub
icebp
mov
notb
scas
sub
cmp
cld
sar
imul
rolb
adc
inc
lods
in
jmp
xor
icebp
fidivrs
push
add
lds
std
mov
fs
popa
jb
inc
mov
stos
into
xchg
call
xor
in
and
call
sbb
ss
mov
jno
aaa
sub
cwtl
and
sbb
and
mov
js
lret
je
cld
std
sbb
xor
cmp
lahf
adc
cld
lcall
dec
push
and
daa
sbb
mov
push
xor
stc
dec
jno
nop
jno
mov
dec
sub
movsb
hlt
sbb
sub
outsl
mov
cli
icebp
gs
push
xlat
stc
rorl
out
mull
cltd
fldt
mov
push
inc
push
cmpb
mov
scas
ds
mov
addr16
adc
stos
jg
cmp
jb
and
jae
adc
cmpsb
test
adc
loope
lea
dec
jmp
inc
pop
sbb
lcall
mov
push
dec
push
frstor
shl
or
enter
mov
cmpsl
sbb
or
mov
dec
xor
das
pop
test
fldl
insl
pop
or
cmc
mov
xchg
cmpsb
pop
repz
pop
pop
adcl
mov
loopne
add
pop
nop
scas
out
out
cs
inc
pushf
add
or
das
ret
inc
ds
pop
loope
and
stos
xchg
xchg
mov
inc
dec
push
cmpsb
stos
cmc
xchg
ret
out
test
cmp
dec
fistps
jns
inc
jo
xlat
mov
and
cmp
insb
xor
mov
aaa
dec
addr16
mov
xchg
dec
enter
or
cld
sub
mov
mov
add
jo
adc
sub
pop
jg
lcall
lahf
repz
xchg
dec
in
dec
test
in
sbb
xchg
dec
repz
push
jbe
stc
neg
add
addb
fdivr
lret
shrb
mov
add
fnsave
xchg
xor
xchg
fwait
or
mov
sub
mov
jge
stos
aas
xchg
mov
imul
bound
shlb
xlat
sbb
repz
out
lea
fisubs
xorl
push
ljmp
push
dec
aad
icebp
das
test
and
pop
mov
cmp
jmp
mov
test
jl
loop
push
and
adc
jmp
mov
cli
mov
push
xor
fld1
roll
jbe
mov
pop
nop
inc
daa
adc
pop
shrb
leave
loopne
iret
or
inc
into
unpcklps
lahf
mov
in
jle
outsb
daa
or
in
lods
add
dec
xchg
mov
push
inc
pop
daa
jle
mov
dec
sbb
in
jne
stos
jg
int
mov
cmc
or
push
pop
call
jmp
enter
aad
imul
cmp
sahf
sbb
sbb
mov
mov
push
inc
jae
ds
mul
lods
xchg
rclb
repnz
gs
fnsave
jne
mov
inc
jnp
push
negb
mov
jp
cmp
ret
xorl
push
icebp
pop
mov
rclb
sbb
mov
test
adc
push
push
insb
popf
sbb
dec
movsl
pushf
das
fwait
out
ljmp
das
add
into
lods
pop
lcall
push
movsb
mov
cmc
sub
cmpb
jns
imul
and
jp
dec
adc
add
add
xchg
stos
mov
jge
pop
dec
js
repnz
push
mulb
xchg
or
mov
and
pop
in
icebp
fs
mov
in
cmp
xor
cli
jp
adc
jg
push
xchg
icebp
xlat
lret
cmp
cmp
adcl
sbb
cmc
add
xlat
mov
add
fidivrs
pop
xlat
add
divb
lahf
push
xor
cmp
cli
mov
jg
cmpl
int3
outsb
js
cmp
ret
les
cld
cltd
lret
repz
jg
stos
stos
mov
or
pop
cs
data16
sahf
jge
and
mov
test
mov
imul
mov
jmp
sbb
in
jo
xchg
daa
fcmovnu
sbb
dec
xchg
enter
add
cmpsl
push
ret
cmp
out
and
aaa
sahf
clc
pop
add
test
mov
inc
xor
lods
shlb
mov
das
xchg
adc
std
movsb
dec
icebp
sub
jns
fidivs
fiadds
mov
jge
rcrl
std
call
dec
fbstp
jmp
out
mov
je
pop
sub
inc
mov
iret
jp
xchg
aad
push
movsl
ds
cmp
gs
sbb
das
jnp
jge
sub
pushf
outsb
sub
ljmp
xor
sub
out
test
sub
lcall
jb
aas
repz
outsl
bound
xor
sub
cli
mov
loop
cmp
popa
imul
ds
mov
imul
loopne
push
or
ret
xchg
xchg
cmp
and
je
cmp
stc
lret
out
inc
out
shlb
cmp
mov
cmp
pop
out
cmp
loop
lods
fmul
or
sahf
add
adc
mov
inc
sbb
int
shl
fs
jmp
shll
fidivl
in
push
mov
cmpl
mov
popf
rcl
ljmp
orb
movsb
repz
cmc
mov
sbb
mov
push
and
in
add
mov
ret
xchg
dec
sub
mov
push
inc
sub
inc
sub
inc
sub
fildll
xchg
out
jb
aam
jp
es
negb
aaa
daa
xchg
popa
fisubs
mov
in
sub
xchg
pop
jge
mov
call
in
mov
arpl
add
dec
or
add
iret
sbb
jns
ja
dec
clc
loop
pop
push
lock
mov
cltd
mov
jp
fwait
mov
stos
in
mov
fs
mov
push
add
rcrb
ds
push
into
mov
sti
xor
sbbl
mov
jne
aad
test
add
adc
and
mov
or
jmp
push
xchg
shr
leave
xchg
lcall
ljmp
scas
ja
sub
fs
gs
outsb
push
insb
inc
mov
fucomp
adc
fimull
inc
pop
push
aas
rolb
inc
subb
and
pop
sbb
leave
lcall
mov
jne
sub
adc
mov
pop
cs
cwtl
insl
lcall
rorl
jnp
cmpsb
xchg
cmp
lret
inc
in
cmp
adc
mov
clc
xor
xor
test
mov
jb
stc
push
addb
out
add
inc
mov
jp
dec
out
fwait
notl
das
adc
mov
hlt
mov
cltd
mov
test
sar
lea
fs
xor
cld
xchg
sbb
ficompl
adcl
push
into
stos
mov
cs
or
flds
test
fwait
lahf
and
or
addr16
mov
push
lods
pusha
dec
push
inc
in
std
pop
cmc
fidivrs
imul
sti
sbb
adc
repz
test
push
push
cmpsb
and
push
push
mov
sub
adc
adc
and
xchg
xchg
xor
xchg
xor
out
jg
pop
iret
jp
fcomip
sti
aad
xlat
stos
repz
idiv
out
out
scas
imul
imul
mov
sbb
jg
ss
lahf
cmp
pop
repnz
pop
repz
insl
pop
int
jl
mov
scas
imul
or
outsb
clc
out
mov
rol
adc
and
dec
inc
or
lret
stos
pushf
jge
jnp
xchg
add
jge
jge
imul
cmc
fwait
ja
mov
pusha
imul
lahf
inc
push
stc
aad
pop
sbb
mov
sbb
loopne
repnz
loop
in
pop
lahf
jg
loopne
pmaddwd
pop
xchg
daa
jle
jne,pt
in
inc
jno
and
aam
sub
cld
mov
jns
lret
repnz
out
xchg
scas
push
imul
mov
lods
out
jns
leave
idivb
xchg
fdivr
adc
mov
ja
dec
rcrl
sahf
jmp
sbbl
jge
xchg
lahf
lods
xchg
or
cmpsb
js
gs
mov
dec
sahf
push
mov
outsb
mov
cmp
mov
push
popf
sbb
add
mov
movsb
jmp
ljmp
xlat
add
out
mov
xor
out
mov
fwait
pop
mull
lret
cmpsl
out
mov
cmp
test
cmp
pop
addr16
adc
out
cwtl
sub
fidivrs
roll
inc
or
cli
push
adc
idiv
lods
jmp
xchg
sarl
mov
stc
cli
sub
sahf
mov
xor
jp
movsb
outsl
cltd
testl
popf
outsb
out
fdiv
xchg
sub
test
jmp
ja
ss
sti
idivl
sahf
lahf
jle
nop
rcll
imul
adc
sub
cmp
inc
fs
paddusw
xchg
jl
pushf
jne
jno
cmpsb
add
lea
dec
jno
daa
js
divb
jge
pop
repz
idivl
jnp
loope
fists
xchg
mov
mov
mov
movsb
lcall
outsl
cmp
ds
mov
lret
xchg
dec
daa
pop
in
cmp
mov
dec
fstpt
clc
cmp
movsb
movsl
iret
mov
or
fcos
mov
cmpb
sahf
ja
inc
hlt
out
enter
in
inc
jne
add
leave
std
pusha
xchg
ror
and
ljmp
aaa
addr16
jmp
pop
repz
jb
push
es
test
inc
jp
shrl
iret
in
icebp
int
jmp
cmp
cmpsl
and
movsl
sti
and
hlt
mov
dec
cmp
ljmp
call
std
cld
dec
cmp
int
jno
mov
outsl
rol
fimull
pop
dec
push
and
ficomps
adc
jne
fldenv
out
cmp
jbe
mov
xor
lods
xchg
cli
cli
lcall
je
addr16
movsl
pop
jns
xlat
fwait
jmp
arpl
mov
mov
btr
cmp
push
test
pop
scas
lea
xor
stc
dec
mov
cld
jb
scas
dec
mov
jbe
pop
sbb
in
dec
lret
push
dec
daa
dec
pop
xchg
xor
jne
out
cmp
jae
aad
ret
and
ret
inc
dec
lahf
lods
icebp
pop
mov
loopne
stc
mov
daa
pushf
outsl
int
push
test
jle
ficoml
repz
aam
std
out
arpl
je
inc
mov
dec
faddl
ds
jmp
fildl
pop
popf
xchg
loope
dec
inc
test
cwtl
sbb
lds
mov
sub
push
sbb
stos
pop
sahf
xchg
push
cmpsl
ss
arpl
jmp
sbb
mov
pop
shlb
sahf
dec
jmp
mov
cmp
mov
int3
mov
xor
ljmp
mov
gs
adc
std
cmp
loop
shll
out
push
jnp
cmp
cmpsb
test
test
fsubrl
cmpsb
fwait
fwait
xchg
mov
push
popf
mov
movsl
sbb
scas
jecxz
mov
push
mov
mov
iret
mov
out
imul
pop
cmp
xor
mov
aam
inc
dec
idivb
enter
arpl
or
js
jns
pop
pushf
xor
loop
not
clc
fadd
push
les
insl
push
lods
cltd
leave
imul
sbb
fs
loope
mov
call
lret
xor
sub
cmp
sbb
cmp
loope
mov
ss
enter
int
ret
jp
xlat
outsl
shlb
pushf
js
cmp
push
dec
out
ja
dec
or
jbe
pop
inc
jecxz
or
cmpsb
aaa
xor
mov
mov
insb
jge
push
pop
sbb
pop
call
pop
mov
xlat
faddl
mov
icebp
fsubs
fwait
out
out
out
movq
xor
mov
jmp
movsl
or
mov
cmpsl
mov
mov
ficoml
in
cli
cmc
mov
add
gs
mov
roll
jo
mov
iret
cmp
xchg
lret
lcall
call
js
cmc
ds
std
mov
das
repnz
mov
mov
mov
and
mov
mov
fs
in
cs
in
mov
cmpsl
into
hlt
scas
inc
outsl
push
mov
aaa
dec
stc
cmp
in
rcrl
cwtl
es
jg
leave
jmp
mov
test
inc
jb
mov
xor
outsb
sahf
sbb
insb
shlb
ret
mov
jns
jg
stos
push
fidivs
cld
xor
shll
ja
xchg
pop
push
cmc
cli
scas
push
stos
call
lcall
call
in
adc
fistpl
jbe
aam
dec
iret
pop
jl
testb
movsl
fnsave
add
es
dec
push
sti
aas
cltd
mov
jne
lods
out
mov
xchg
arpl
xlat
xchg
xchg
ljmp
mov
fisubrl
repnz
iret
pop
rorl
dec
mov
jle
xor
sar
arpl
enter
push
arpl
adc
arpl
jae
jp
and
enter
mov
pop
pop
xlat
int
jns
jge
xlat
movsl
mov
or
cmpsl
mov
cwtl
push
loopne,pn
push
clc
sub
mov
xor
adc
hlt
pop
fimuls
pop
mov
popa
or
ds
xchg
ss
scas
sar
mov
pop
jle
jno
mov
das
mov
cltd
mov
cmp
lcall
filds
cmp
aam
mov
movsb
and
jno
jmp
mov
sub
int
xlat
fisubl
xchg
outsl
cmp
out
iret
fwait
jp
ja
cmp
data16
insb
loopne
arpl
repz
sub
or
pop
mov
shlb
cli
popf
stc
lea
or
pop
fdivp
mov
fistpll
insb
pop
dec
lock
push
enter
sub
xor
cmc
mov
xor
gs
inc
mov
into
sahf
call
xchg
loopne
push
addr16
push
xchg
fmuls
dec
xchg
movsb
mov
push
dec
js
repz
pop
mov
cwtl
mov
mov
aas
outsl
mov
popa
inc
jecxz
xchg
xchg
dec
sbb
mov
lahf
idivl
push
xchg
pop
out
xor
or
fsubl
pop
stc
push
pop
lahf
jbe
out
in
pop
jmp
jno
and
mov
lahf
push
hlt
dec
ja
mov
adc
std
xor
fisttpl
in
push
cld
fldcw
cmp
ljmp
rcl
out
pusha
std
pop
loope
arpl
inc
pop
pop
push
mov
test
cmp
cmpsb
sbb
adc
mov
sarl
mov
xchg
or
ja
sbb
das
sahf
cld
jge
aad
mov
int
mov
nop
mov
jle
movsb
sbb
inc
fdivr
adc
mov
mov
jne
loopne
and
scas
scas
pop
mov
push
xor
out
cmp
mov
outsb
outsl
scas
xor
mov
loop
mov
lock
jl
clc
hlt
out
aam
cli
adc
dec
dec
xchg
mov
das
ja
sbb
sarb
push
scas
lods
mov
lea
pop
sahf
mov
arpl
mov
mov
xor
mov
sahf
mov
rcrl
aaa
fildll
dec
iret
cmp
jle
mov
pop
pop
test
std
popf
andl
pop
ljmp
divl
idiv
fwait
mov
mov
lahf
dec
out
push
ds
scas
mov
cmpsb
lret
fcmovbe
jne
xor
addr16
xchg
aaa
lcall
push
negb
lcall
cmp
repnz
inc
outsb
aas
sbb
out
dec
sub
shl
mov
cmpsl
push
xor
jmp
push
leave
dec
stos
outsl
in
sub
fwait
pop
pop
xchg
pop
mov
mov
icebp
loope
mov
and
not
sub
xlat
sbb
and
std
cmpsl
out
jo
push
out
mov
stc
dec
pop
dec
mov
push
cmp
rcrb
mov
or
mov
sbb
or
lock
lds
sbb
xchg
xchg
mov
cmc
ret
pop
arpl
push
cli
jl
cmp
or
cli
pop
ss
sbb
cmp
outsb
mov
pop
ljmp
std
lret
aas
addr16
ffree
out
ja
jge
pop
iret
cmpsl
into
sub
mov
jae
mov
lds
fidivrs
js
mov
je
arpl
stc
in
in
mov
inc
outsl
iret
shr
sbb
pop
xchg
jo
jecxz
outsl
adc
pushf
icebp
mov
push
jne
insl
shll
mov
clc
inc
xor
fs
out
jne
fnstenv
div
repnz
xchg
shrl
xchg
les
jle
sub
mov
dec
rorl
mov
clc
mov
mov
outsb
and
int3
jno
in
cmp
jns
lds
or
xor
mov
jno
mov
jmp
ret
daa
jne
jg
push
mov
mov
fs
incb
cli
mov
test
add
std
repnz
sahf
push
and
dec
xlat
lds
sbb
pop
push
add
pop
aam
ret
mov
jne
test
fidivs
xlat
negb
push
push
mov
test
jns
sbb
jnp
jbe
scas
cmp
lds
dec
pushf
pop
in
int3
aad
jns
or
sbb
mov
movl
pop
int3
ljmp
leave
pop
fwait
xor
jne
xor
sub
fwait
and
fdivs
ret
int
movsl
addr16
insl
jge
mov
push
xchg
lock
mov
fcompl
shr
shll
rorl
jp
mov
xor
lret
jge
push
mov
jo
test
sub
pushf
cmp
jno
xor
in
vpunpckhqdq
mov
in
lret
mov
mov
mov
sbb
cli
inc
jbe
or
movb
xchg
popa
mov
jmp
jnp
outsb
mov
loope
test
call
mulb
xlat
inc
popa
pop
cmp
stc
jge
xor
or
sbb
lret
add
mov
addr16
daa
gs
mov
mov
jo
outsb
pusha
xchg
cwtl
xchg
cmpsb
fildll
xchg
push
jae
int3
mov
mov
pop
or
xor
mov
shll
xor
aas
sbb
jle
pop
clc
push
outsl
pop
xchg
jb
add
std
addl
sbb
mov
imul
pop
imulb
hlt
push
jle
cmp
sub
sahf
jno
out
scas
sbb
out
fmuls
out
scas
jns
popa
stc
shll
rolb
repz
mov
jb
out
xor
xor
int
pop
mov
sub
insl
fld
int
je
shl
into
mov
pop
inc
xor
mov
jl
mov
pop
testl
lret
es
pop
jp
dec
inc
jo
jb
clc
jb
in
into
inc
out
lahf
scas
or
jle
int
test
int3
mov
xor
xchg
shll
mov
mov
mov
popf
stc
out
push
lcall
shll
ds
aas
ljmp
jne
aaa
sbb
jnp
cli
test
jecxz
das
mov
js
mov
test
dec
cmp
xor
push
sbb
loop
fistps
cmpsb
mov
mov
jno
ss
mov
fidivs
xchg
jae
mov
jo
inc
lret
cli
leave
in
jne
mov
mov
out
notb
ss
jmp
jle
je
test
mov
mov
sbb
push
pop
fcmovb
cmp
inc
fcoms
arpl
clc
mov
inc
fcmovnbe
add
sarb
int
scas
ret
in
bound
call
inc
pop
aaa
push
xchg
std
sub
cs
sub
mov
dec
mov
cmp
movsl
pushf
pop
js
aaa
mov
fdivp
dec
icebp
mov
sbb
stc
testb
mul
in
mov
out
mov
push
cmpsl
cmp
daa
dec
imul
repz
mull
pop
cmpsl
insb
int
out
aas
hlt
jge
jae
lahf
scas
shll
ficoms
sbb
test
pop
cli
shll
nop
cmp
arpl
in
jne
push
push
or
in
cmp
popf
outsl
cmp
jns
sub
into
mov
scas
pop
sub
adc
repz
push
push
out
pushf
jo
data16
jecxz
mov
imul
fdivs
mov
add
cmc
sub
push
sti
fmull
stos
mov
in
fidivrl
das
int
mov
mov
lods
mov
lahf
setno
rorl
mov
mov
int3
add
idivl
cld
xchg
xor
push
pop
sbb
test
imul
out
xchg
sti
lcall
pop
insb
xor
jb
nop
fst
xchg
or
stos
dec
xchg
cltd
cmp
lock
test
scas
jne
xor
es
and
jno
push
fadds
lds
in
fildll
mov
fdivp
jcxz
pushf
pop
out
lahf
xchg
mov
fsub
sub
xchg
xlat
aad
and
mov
ficoml
jge
cmp
stc
jns
mov
loope
and
into
jae,pn
stc
js
push
shr
stc
call
repnz
lret
pop
jmp
imul
test
lds
movsl
les
fincstp
fsubr
out
and
mov
cmpsl
fildll
mov
jbe
fsubl
jb
lods
iret
inc
fwait
pop
mov
sub
pop
es
das
sub
mov
pop
cmp
jnp
lcall
mov
jecxz
imul
cmc
and
scas
jg
shlb
sbb
sar
or
pop
or
or
stc
outsl
fdivrp
jmp
ss
cmp
sbb
fnsave
pop
das
jge
inc
xchg
or
and
mov
fimuls
negl
das
jecxz
cmpsl
jg
jge
pop
mov
or
push
icebp
test
sub
in
stos
popf
shrb
out
out
repnz
dec
cmpsl
xor
out
repz
inc
negl
jp
pop
push
mov
cltd
pop
mov
cmp
shlb
mov
cmp
out
cmpsb
sahf
stos
mov
jae
jae
cld
xchg
mov
add
stc
arpl
bound
in
call
inc
mov
leave
jne
insl
mov
mov
into
mov
repz
gs
dec
xchg
cli
jns
fs
jge
fstpt
and
jp
popa
fcompl
call
cltd
shlb
and
inc
inc
out
repz
mov
jl
stc
xchg
inc
test
shll
and
int3
pop
lret
mov
out
mov
imul
fidivl
dec
add
adc
icebp
mov
cli
scas
mov
inc
fmul
negb
ljmp
jno
lret
mov
shll
xchg
push
aas
jns
jne
in
movsl
gs
inc
mov
cmp
inc
out
mov
fcomps
fwait
ja
orl
fcom
sarl
mov
pushf
jge
arpl
rcrl
fmull
mov
aaa
push
lods
in
mov
enter
mov
es
out
hlt
cli
jb
jno
movl
clc
cltd
jp
inc
mulb
movd
lock
inc
sbb
cmpsl
out
mov
mov
std
orl
aad
inc
aas
scas
arpl
das
fbstp
loope
aam
jg
jmp
push
mov
sarb
in
aas
mov
jnp
sbb
popf
xchg
loopne
lods
int3
nop
mov
mov
xchg
sub
aad
mov
xor
mov
jns
mov
js
pop
mov
jge
xchg
je
mov
outsb
sub
dec
out
cli
jle
mov
int
jl
rcr
sub
out
adc
seto
adc
out
loopne
fld
cmpl
push
cmp
test
out
push
aaa
imul
shll
lods
lock
xlat
fistl
out
push
divb
ds
stc
jne
adc
mov
sub
ficoml
ss
jecxz
inc
ss
push
cmp
mov
mov
jp
fwait
add
jmp
xor
aas
fistps
push
push
adc
arpl
jmp
imul
xlat
mov
mov
pop
adc
xor
jl
jecxz
jno
mov
lock
dec
ja
pushf
mov
jge
lcall
cmp
inc
repz
imul
cmp
int
in
xchg
and
push
jg
jl
es
outsl
test
lods
scas
imul
xchg
in
stos
jp
cmp
dec
shr
mov
push
dec
jb
inc
movsl
shrl
insl
cmp
in
mov
into
mov
jge
pushf
push
push
sahf
aad
lcall
jb
mov
ds
dec
xchg
jnp
xchg
stos
mov
outsb
push
inc
outsl
fdivrl
mov
loope
data16
mov
std
fdecstp
and
dec
pop
cltd
pop
sbb
mov
cmc
mov
xchg
clc
into
ds
cmp
mov
ja
push
xor
in
les
sub
mov
xadd
jmp
into
mov
cmpsb
repnz
and
fdivrl
imul
scas
jno
scas
add
shll
lods
mov
shlb
jge,pn
fcmovnu
jns
imul
addr16
int
mov
pop
dec
sti
pusha
sbb
pop
lret
sbb
lahf
shrl
aas
or
popf
xor
int3
test
repnz
aas
stos
sbb
push
ss
mov
dec
mov
adc
movsl
cs
dec
stos
pop
imul
outsb
fcomps
or
fwait
movsb
in
jb
jbe
scas
and
aas
gs
mov
int3
push
cltd
cmp
pop
mov
pop
jns
pop
daa
adc
data16
test
jbe
fimull
dec
xchg
pminub
ss
out
icebp
stc
insb
int3
cmpsl
or
das
mov
adc
jle
push
sarl
push
fs
mov
fwait
xchg
jns
scas
jle
jp
pop
push
cmp
push
pop
mov
pop
popf
jne
iret
shl
stos
lahf
or
push
cmpsl
mov
mov
sub
inc
sbb
lret
jnp
stc
cmp
aad
mov
shr
outsb
add
call
hlt
movsl
jmp
push
arpl
shll
cs
fildl
sti
imul
or
mov
fdivr
and
bound
push
cmp
add
stos
outsl
arpl
icebp
imul
idivl
dec
fidivrs
inc
push
rdpmc
push
js
mov
inc
fidivrl
mov
cmc
cltd
add
pop
push
jne
cmp
jmp
lock
mov
jle
in
ffree
dec
ja
out
mov
and
mov
cmp
ja
pop
fnsave
scas
icebp
jg
outsl
push
fwait
jge
mov
lods
icebp
stos
pop
aaa
xlat
mov
sub
aam
aas
xor
lods
dec
adc
lock
lods
dec
xchg
icebp
sarl
xor
cmpsb
call
outsb
cmpsl
cs
loop
xchg
fsubrp
mov
sbb
in
popa
test
xchg
loop
std
call
dec
inc
jle
pop
add
shll
sahf
das
leave
jecxz
lods
ss
mov
dec
fldt
sub
repz
add
lahf
shll
aaa
pop
jp
cli
testb
pop
or
clc
cli
jg
push
dec
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
lcall
cli
cmp
push
sub
mov
gs
xor
scas
addr16
cltd
cmp
aas
push
xor
mov
aam
jmp
test
add
and
mov
repz
das
imul
aaa
jmp
mov
jns
mov
pop
sbb
sbb
sarl
jmp
stc
popf
jmp
fiaddl
mov
inc
sub
outsb
fdivrs
nop
pop
les
jg
pop
lcall
adc
push
pop
mov
mov
addl
stos
mov
push
sbb
addr16
jo
inc
popa
insl
add
out
jp
imul
mov
mov
inc
insb
popf
js
jb
push
aam
movsl
pop
es
jg
inc
lcall
pop
fildll
or
mov
dec
jg
sbb
shr
out
cmc
stos
inc
stos
pop
mov
mov
mov
sar
in
jge
clc
cmpsl
xor
cmc
sub
orb
movsb
xchg
dec
sub
test
mov
or
nop
subl
or
add
and
out
les
pushf
insb
and
add
cwtl
and
maskmovq
testl
adc
inc
or
fimuls
inc
jg
jg
and
cmpl
mov
lret
mov
in
inc
xchg
aad
scas
repnz
inc
ret
inc
adc
or
sbb
lea
clc
push
loop
push
dec
hlt
daa
popf
enter
xor
fcomps
xchg
xor
out
insl
in
mov
mov
in
ficoms
cmpsl
clc
pop
cld
sub
or
adc
sub
or
dec
adc
sbb
popf
clc
pop
sub
push
mov
aaa
cmp
push
clc
roll
mov
xchg
xchg
test
push
or
xchg
lcall
cmpsl
xor
sub
sub
lock
clc
adc
push
test
adc
adc
cmovb
adc
xor
and
xchg
or
xchg
cmp
mov
and
xor
arpl
clc
xor
repz
sti
mov
fadds
dec
mov
mov
in
outsl
jbe
jno
mov
fwait
stos
loop
jb
jns
ficoms
jl
cltd
mov
dec
roll
or
cmpsb
mov
lds
loop
roll
and
dec
jg
cmp
adc
inc
push
push
pop
in
pop
mov
inc
insb
nop
gs
sub
and
lcall
int3
add
bound
push
rcrl
ja
or
je
mov
or
pop
lret
inc
push
sbb
into
push
mov
push
xchg
cmp
push
mov
ljmp
mov
push
push
jnp
and
dec
test
inc
das
mov
mov
add
or
fadds
das
fwait
int
mov
lods
or
jnp
iret
pop
iret
or
jl
pop
ret
aaa
or
test
inc
mov
push
adc
rorl
adc
jns
sub
sbb
xor
mov
loope
mov
cs
lds
and
inc
or
xlat
mov
xor
add
mov
movl
and
jecxz
jb
mov
jle
jg
xlat
adc
add
add
and
cltd
ret
mov
dec
test
sahf
xchg
test
sub
xchg
cmp
lds
pushf
and
lds
sub
add
inc
data16
or
ds
jnp
jmp
clc
jge
push
xchg
mov
inc
sbb
or
arpl
dec
insl
movsl
mov
aam
lcall
fldl
jecxz
jno
inc
test
and
pop
lret
jmp
dec
repnz
add
or
or
inc
mov
dec
adc
dec
inc
jecxz
pop
mov
jge
stos
arpl
mov
or
mov
xor
jl
jle
lahf
inc
jl
adc
fs
mov
in
lock
std
cld
gs
call
aaa
sbbb
mov
push
mov
pusha
outsb
fsubrs
nop
sub
add
sbb
hlt
inc
sbb
and
divl
dec
data16
mull
aaa
shrl
mov
movsl
xchg
rcr
jmp
jo
cmp
mov
push
or
ret
dec
insb
adc
cmp
cs
adc
push
cs
stc
mov
inc
sti
mov
inc
int
fs
sbb
inc
loope
sub
push
inc
std
movsb
jbe
cmp
push
cmp
mov
flds
inc
xor
iret
jmp
int
stc
rclb
xor
jnp
dec
dec
push
dec
mov
push
sub
and
xchg
lock
ja
and
loop
insb
inc
into
and
xchg
into
test
mov
stos
jle
sub
outsl
andb
or
pop
les
mov
xchg
aaa
enter
cld
test
sub
push
mov
ljmp
mulb
sub
scas
movsb
aas
push
xor
insl
mov
jnp
ds
add
out
sbb
push
push
loop
roll
and
mul
sahf
imul
lea
fstl
adc
arpl
lds
mov
clc
arpl
xor
mov
or
cmp
les
jmp
scas
cmpsb
jo
fbstp
les
sbb
sar
lods
pop
or
roll
icebp
ja
cmp
insb
and
mov
sbbl
or
daa
clc
repz
popf
repz
ljmp
xor
add
cmpb
popa
lds
test
cli
xchg
sbb
lcall
fldcw
inc
es
mov
out
data16
mov
pop
and
out
insl
loope
repz
xchg
gs
or
sbb
jge
dec
inc
add
in
rcrl
jge
loope
lock
mov
xchg
movsl
fs
ljmp
clc
xlat
cld
sbb
mov
inc
mov
lds
pop
cs
sbb
dec
cltd
shlb
jo
jae
inc
notb
inc
pop
popa
lods
cmpsb
js
xlat
xor
and
cmp
add
push
xchg
je
aam
and
leave
inc
repnz
add
mov
roll
mov
in
sbb
mov
xlat
shl
jge
pop
outsb
test
add
mov
add
loopne
outsb
cmpl
and
adc
popa
inc
shl
sbb
cltd
dec
out
and
leave
scas
in
rorb
mov
mov
xor
dec
mov
sbb
out
bound
sbb
xor
jmp
mov
cmp
mov
call
into
adc
les
dec
fs
movsb
scas
jb
jns
sbb
out
push
mov
clc
jno
push
inc
in
push
dec
hlt
sub
or
outsb
dec
fcoms
pop
les
mov
dec
vmulsd
dec
sbb
xor
imul
imul
fmull
xchg
jnp
std
loope
lock
stc
and
adc
cs
mov
or
test
inc
test
push
mov
enter
mov
pop
and
leave
mov
cld
pop
xor
imul
and
sub
sbb
ja
lock
shlb
ret
jp
and
inc
xchg
fs
fcomps
or
or
rolb
xor
cmp
es
xor
popf
pusha
cs
xchg
push
enter
inc
dec
jmp
hlt
cmp
mov
test
ss
add
and
sub
jp
mov
push
mov
adc
dec
rolb
fwait
jo
out
aaa
cwtl
fucomip
test
leave
inc
insb
es
or
sub
sahf
sti
imul
push
mov
loope
insl
and
jmp
stos
cmpsb
in
daa
insb
adc
xor
push
in
outsl
movsb
pop
rcl
insb
sbb
cwtl
jecxz
es
adc
les
mov
sub
adc
pusha
in
jb
mov
cmc
push
lea
imul
fisubrl
orb
sub
imul
sbb
push
ljmp
test
sbb
loope
rcr
call
inc
iret
mov
mov
xor
add
jle
jle
inc
jg
lcall
cltd
pusha
data16
or
sbb
dec
add
jmp
lret
clc
adc
adc
nop
and
dec
and
mov
xchg
leave
jae
adc
mov
add
rclb
fwait
iret
xchg
add
jae
mov
mov
pop
sub
stos
adc
mov
mov
jp
inc
jno
cmp
inc
inc
xchg
lds
push
push
jmp
pop
add
inc
andb
sti
les
sub
sbbb
push
sahf
mov
clc
add
in
clc
pop
fsubrl
and
xchg
push
ret
xchg
or
es
push
popa
das
dec
sahf
rclb
push
or
xchg
adc
jae
scas
je
cmp
sbb
inc
sarb
dec
stos
xchg
stos
movsb
mov
inc
jmp
inc
dec
xchg
jne
jge
xchg
insb
and
sbb
sub
shlb
push
repnz
jns
mov
push
xchg
aaa
lret
xchg
in
stc
xor
pop
cmpsb
jl
mov
lret
xor
cld
inc
outsb
nop
jg
lods
in
cmc
cwtl
mov
mov
adc
pop
bound
or
loopne
jecxz
or
outsb
mov
jb
test
push
mov
adc
adc
mov
es
pusha
les
adc
xchg
scas
and
stc
push
xchg
push
push
or
mov
out
rol
cmp
cmpl
mov
sub
imul
setns
orw
sbb
jo
cmp
xchg
stc
push
xchg
pusha
and
push
je
push
fsubl
pop
xchg
sahf
dec
or
adc
lods
cmp
arpl
mov
mov
sarl
add
mov
adc
icebp
push
jmp
adc
and
push
xchg
icebp
in
rolb
test
imul
ja
sbb
mov
mov
in
pusha
adc
imul
or
jb
fcoml
cs
leave
cmp
popf
xchg
idivb
iret
in
or
push
aaa
pop
and
idiv
push
repnz
push
cmc
xchg
or
add
inc
push
mov
fstl
and
jge
mov
jmp
push
negb
fisttpl
sbb
jp
inc
pop
pop
scas
aas
aaa
nop
sbb
pop
jb
inc
jo
in
imul
cmp
hlt
jno
pop
mov
ds
repz
cmp
or
xchg
pop
xor
or
shr
testb
in
stc
push
jl
loope
pusha
sub
adc
pop
movsb
lcall
cli
and
pop
movsb
adc
js
js
cmp
xchg
cmp
xlat
cmp
imul
ffree
push
ret
jno
shr
jl
lock
sub
mov
scas
jecxz
stc
ss
test
and
dec
clc
movsb
mov
inc
pop
cltd
xchg
adc
mov
stos
rorl
mov
mov
fstp
imul
incb
xchg
enter
mov
sub
lahf
nop
push
push
add
jnp
or
or
jne
mov
xchg
bound
mulb
pop
add
ffree
jbe
pop
cmp
pop
pop
push
fistps
add
push
pop
mov
pusha
dec
or
inc
fcmovbe
mov
scas
jb
cld
pusha
mov
inc
lods
jg
mov
sub
jo
sbb
adc
lcall
pop
dec
les
ljmp
mov
add
adc
nop
sbb
lods
or
js
sub
dec
gs
mov
in
js
pop
lahf
out
rcrl
jge
cld
inc
jle
outsl
or
and
ja
dec
pop
sub
dec
mov
mov
sub
lret
fnstenv
pushf
daa
pop
enter
stc
dec
sti
jge
stos
sub
inc
pop
in
and
mov
sub
lret
add
add
add
negl
add
mov
push
mov
add
sub
stos
shll
add
mov
stc
sarl
mov
pop
lcall
shlb
jne
mov
lods
fmuls
icebp
loopne
mov
test
mov
lds
ds
es
jl
and
and
out
mov
lret
inc
sub
push
push
aam
test
adc
pop
cld
mov
data16
dec
lods
add
adc
and
orb
decb
cmp
stos
sub
mov
popf
inc
cmpsl
shr
push
push
cltd
je
popf
dec
out
add
cmpsb
dec
and
push
ror
and
aad
mov
sbb
fwait
jmp
pop
daa
ss
pop
cs
adc
scas
cwtl
sub
push
jno
mov
scas
mov
jecxz
pusha
cs
jae
jnp
jnp
push
loopne
cld
jp
cmpsl
rcrb
adc
ja
adc
pop
jb
cmp
repnz
mov
aam
cmp
xchg
inc
outsb
sarb
push
hlt
sbb
iret
push
nop
cld
xchg
pusha
insl
pop
mov
clc
add
xchg
sub
cmp
and
std
call
mov
dec
punpcklbw
ja
je
add
or
lcall
out
icebp
or
add
bound
push
movsl
cmpsb
rorb
les
test
cltd
dec
repz
mov
xor
lods
subb
test
fisttpl
mov
ja
rorl
push
mov
or
loop
dec
or
leave
daa
stc
daa
cld
inc
decb
jge
or
gs
jnp
push
fstps
and
push
push
push
push
data16
sbb
or
mov
push
push
jo
cld
sbb
push
cmp
mov
dec
xchg
ret
ret
sarb
pop
or
and
scas
fsubs
jle
fwait
lds
push
and
cmp
sub
xchg
mov
inc
movsl
jae
arpl
pop
scas
push
jb
mov
cmp
sti
xchg
adc
clc
pop
cld
cmp
add
pop
aam
adc
mov
les
js
dec
cwtl
js
mov
sbb
mov
out
or
es
rcll
pop
push
add
mov
and
mov
or
or
aaa
push
cmpb
jne
ds
std
nop
shll
lods
adc
fs
movsb
loope
dec
and
movsb
add
pushf
rolb
push
outsl
pusha
iret
cmc
hlt
add
inc
adc
pushf
fadds
test
xor
lahf
mov
xchg
xor
lock
sarb
test
nop
add
aaa
add
adc
add
pop
pop
and
adc
insl
pop
and
xchg
sub
add
daa
enter
aad
fld
add
fbld
xchg
pop
cmpw
outsb
scas
adc
js
add
add
int3
movsl
inc
pop
push
ja
add
sub
nop
arpl
mov
add
or
mov
repnz
aad
inc
movsb
add
js
bound
mov
out
out
int3
jl
xor
out
scas
popa
add
and
sub
push
cwtl
push
es
leave
orb
jb
jns
cwtl
inc
out
push
int3
xchg
inc
dec
test
sahf
xor
imul
daa
fdivrs
pushf
cmp
sbb
insb
test
insb
add
push
fisubl
xor
jae
cmp
cmp
xor
jmp
mov
sahf
bound
lret
clc
adc
inc
inc
xchg
fcmovne
stos
movsb
xor
inc
jle
add
ret
jno
cmp
in
add
jg
js
sbb
idivl
cmp
xchg
scas
dec
jge
or
addr16
adc
repz
sbb
je
ljmp
popl
inc
mov
mov
cld
mov
outsb
out
pop
dec
into
lds
jecxz
test
xor
imul
les
push
mov
mov
sbb
mov
stos
test
imul
dec
fbld
in
popa
pslld
mov
out
nop
arpl
int3
imul
sbb
aam
xor
mov
lds
mov
jl
or
repnz
mov
inc
mov
mov
pop
adc
in
sub
xchg
aaa
rclb
cs
and
cmp
mov
add
dec
and
std
insb
mov
mov
or
inc
leave
dec
xor
adcb
cwtl
mov
push
adc
sbb
mov
jecxz
sahf
adcl
mov
add
sub
or
addl
sub
push
pop
les
adc
clc
push
imul
mov
and
mov
js
pop
dec
je
inc
repnz
mov
dec
mov
push
push
mov
mov
in
fstl
sub
mov
loop
enter
stos
js
pop
cmpsl
cmp
rclb
test
mov
lret
ret
into
lods
push
push
test
adc
cmpsl
add
push
sahf
dec
test
push
push
xor
sbb
enter
std
pop
mov
mov
adc
xor
icebp
les
loop
js
sbb
mov
cmp
es
test
loopne
inc
fstps
xor
push
jb
stc
and
xor
xor
popa
mov
dec
or
and
cmp
lods
jo
jns
mov
cmc
adc
bound
xchg
xchg
nop
das
mov
ficompl
xchg
push
pop
mov
push
mov
push
ret
ret
mov
rorl
sbbb
sub
add
into
mov
xchg
xchg
xchg
lods
cwtl
cld
out
mov
mov
cmp
jl
mov
inc
lahf
xor
call
addr16
pop
dec
int
mov
xor
inc
roll
or
cmc
loop
icebp
mov
cmc
xchg
add
out
jl
xlat
shll
push
fdivs
xchg
jo
scas
mov
in
pop
fwait
and
icebp
shll
sbb
jp
xchg
sbb
mov
mov
inc
ja
jl
mov
cltd
scas
cmp
mov
adc
lock
jnp
and
xor
add
and
enter
xchg
mov
pushf
add
lahf
cmp
add
sbb
jns
sub
pop
or
push
push
test
repnz
mov
pop
add
arpl
call
sub
jno
mov
mov
sbb
arpl
mov
andb
adc
and
sbb
sub
lock
sbb
int3
or
add
add
sti
andl
sbb
pop
outsl
pop
mov
pop
cmpsb
push
pop
fs
aas
cmp
std
je
or
add
xchg
add
mov
repnz
enter
jecxz
icebp
add
jo
rclb
dec
lds
inc
lcall
sub
xor
pusha
jb
popa
aad
inc
mov
push
subl
and
mov
fiadds
seto
inc
scas
movsl
ret
push
or
push
ds
data16
jecxz
jno
mov
mov
test
xor
mov
mov
jl
lcall
addl
sbb
mov
mov
jb
gs
mov
sahf
inc
push
scas
outsl
out
stc
xchg
jg
dec
inc
xchg
push
iret
add
xchg
xor
inc
cli
push
std
cltd
out
leave
pop
mov
fcoms
xlat
jnp
sbb
xor
push
push
mov
nop
leave
enter
out
add
inc
jne
cmp
sbb
mov
icebp
push
fmull
and
aam
lret
setle
insl
test
mov
dec
cli
push
dec
imul
sbb
arpl
inc
mov
imul
aas
bswap
pop
and
mov
fs
fbstp
pop
je
jg
inc
or
sahf
jp
callw
sbb
pop
lea
int
sub
ljmp
cmovo
and
mov
popa
xchg
mov
movsb
daa
clc
insb
push
push
dec
jge
push
shll
jmp
call
push
ret
cltd
cmc
fs
mov
nop
xchg
lods
cmp
test
lret
faddl
outsb
xor
sahf
ja
mov
les
cmp
pop
adc
scas
sarb
test
nop
dec
add
mov
lods
cmpsb
bound
cld
and
push
clc
ds
inc
call
inc
mov
les
cwtl
arpl
mov
leave
cmp
push
cmpsb
into
push
cwtl
jp
mov
jne
mull
nop
push
std
cltd
and
jge
add
pop
mov
jmp
into
addr16
fsubs
mov
pop
pop
into
adc
lds
aas
mov
orl
adc
push
rolb
cwtl
adc
lcall
bnd
push
xor
pop
xchg
dec
xor
sbb
cmp
outsb
fs
nop
jp
rclb
stos
rorb
inc
lahf
mov
add
cltd
arpl
and
addb
cmp
fldcw
outsb
mov
mov
les
adc
or
inc
cmp
cmp
add
adc
inc
cmpsb
sarb
test
cli
dec
ss
pop
xchg
cmp
cltd
inc
add
test
hlt
pop
jp
movsb
popf
xor
push
and
addr16
pop
cwtl
gs
sbb
js
sbb
cs
xor
out
mov
and
pop
outsb
add
xor
ja
jnp
or
or
repnz
aaa
in
sahf
lahf
or
aam
in
clc
and
sbb
push
mov
pop
add
or
fcoml
daa
mov
sahf
xchg
scas
dec
rolb
test
sub
mov
aad
jle
aas
xchg
ja
pop
or
movsb
pop
jb
int3
or
mov
jae
and
fcmovu
and
and
enter
pop
inc
mov
aam
push
in
lods
mov
add
sbb
jge
dec
jnp
fwait
jmp
mov
enter
cld
pop
jle
out
ret
daa
lock
mov
sub
jl
mov
stc
dec
scas
cmpl
or
cmp
add
mov
inc
bound
xor
pop
test
fs
dec
mulb
cmp
stc
adc
jbe
shlb
push
pop
dec
test
test
pushf
shlb
shrl
cmp
xchg
mov
and
pusha
lds
pop
stc
push
cld
and
pop
cmp
sbb
jo
popf
loopne
js
fiadds
adc
cs
in
add
fsubs
inc
jb
and
sbb
test
xor
jne
cmp
mov
inc
gs
rcll
adc
shl
and
pop
mov
mov
rorb
lret
je
mov
jmp
andb
mov
sbb
pop
fldenv
add
xchg
lahf
or
mov
pop
mov
pushf
or
sub
dec
mov
inc
mov
xchg
mov
call
inc
pop
pusha
arpl
les
loope
add
roll
cs
jns
xor
cmpb
orb
pusha
fimull
cmpsl
bnd
inc
fadd
lahf
cld
inc
popa
sub
or
adcl
jp
inc
lret
jmp
cmc
nop
ret
mov
pop
push
cmp
mov
pop
enter
inc
addr16
inc
cli
mov
add
jae
sbb
lret
push
or
mov
loope
icebp
mov
into
lret
or
popf
into
mov
daa
jecxz
imul
or
xor
les
pop
jmp
sub
mov
mov
enter
movsb
aaa
cmp
daa
shll
mov
xchg
sub
ja
int3
or
lea
sbb
jns
cld
jne
adc
jo
dec
inc
xchg
arpl
rcrl
push
loopne
test
test
loope
frstor
sub
leave
sbb
packuswb
push
dec
jnp
mov
pop
enter
outsl
mov
rcrl
inc
cwtl
and
pop
rcr
mov
xlat
lods
sub
push
jb
je
mov
test
ret
add
push
push
jbe
cmp
push
xchg
and
push
mov
dec
cmc
mov
pop
sub
sub
xor
inc
insb
das
jge
mov
push
or
or
aas
add
mov
movsb
std
ds
pop
mov
mov
mov
lods
add
mov
inc
cwtl
add
add
shl
pop
stc
jbe
sub
call
add
push
jle
mov
inc
dec
sbb
xor
inc
popf
push
push
je
in
or
mov
les
les
pop
es
and
adcl
mov
repnz
sub
fildll
rcrl
stc
sbb
shrb
roll
cmpw
pop
das
add
arpl
and
or
inc
mov
push
mov
pop
xor
leave
pushf
inc
pop
ret
mov
adc
mov
dec
insb
and
xchg
leave
insb
mov
jl
push
mov
pop
mov
push
int3
aad
mov
data16
mov
lret
push
int3
xchg
pop
dec
mov
xchg
push
aad
mov
call
or
dec
push
mov
jg
mov
push
idivb
sub
dec
sahf
test
or
js
push
out
adc
sbb
mov
test
cmpsb
call
mov
int3
andl
jbe
cmp
bnd
out
bnd
xchg
lods
pushf
and
jns
dec
xor
sbb
xchg
test
loop
icebp
mov
dec
shll
lea
xor
inc
cs
pop
mov
pop
test
repnz
jo
loop
iret
mov
jge
rcr
sub
sbb
xchg
mov
data16
bound
mov
pop
inc
lods
pop
and
hlt
sbb
pop
add
jb
pop
mov
dec
xor
mov
repnz
adc
or
pop
fisubrs
fcomi
pop
lret
push
dec
jg
jnp
xchg
subl
scas
inc
ret
mov
mov
inc
dec
and
nop
dec
enter
jb
sub
push
outsb
add
inc
mov
stos
push
mov
outsl
lds
fwait
pop
dec
pop
les
idiv
pop
mov
dec
dec
and
les
daa
and
into
movsb
and
lahf
sbb
pop
xchg
adc
or
aaa
mov
inc
ds
sub
adc
push
fnstenv
mov
sarb
add
cli
rolb
sub
inc
xchg
mov
mov
push
sti
sahf
inc
cmp
sahf
mov
test
jno
or
incl
mov
sub
loopne
repnz
dec
lock
jne
add
inc
push
mov
addr16
inc
popa
jecxz
add
inc
lods
and
clc
and
adc
les
jo
sub
mov
jge
pop
insl
dec
shld
test
push
pop
jmp
sub
dec
popa
sar
jmp
in
ror
mov
lds
ss
pusha
pop
jae
clc
jge
call
lds
loopne
ret
movsb
gs
scas
adc
in
xchg
mov
jns
sbb
outsl
cmpb
popa
sub
xchg
fildll
mov
and
mov
xor
add
dec
inc
repnz
and
adc
or
sub
aam
mov
fst
in
icebp
jmp
or
sahf
inc
mov
out
call
subl
add
mov
pop
ja
and
sub
jge
mov
clc
loope
int3
pop
icebp
xchg
and
push
push
adc
jmp
ret
stc
cmp
ret
test
insl
enter
adc
or
leave
inc
lcall
sub
nop
xor
fs
jbe
daa
lret
into
repnz
lock
and
push
and
add
mov
pop
adcl
inc
sbb
out
cmp
inc
xchg
pop
bound
mov
pop
popa
dec
movb
xchg
daa
enter
pop
dec
and
inc
lret
movsl
mov
adc
jp
cltd
decb
aaa
cltd
jno
push
add
pop
int3
add
adc
lret
cli
sarb
icebp
iret
lods
and
repz
mov
xor
testb
or
adc
mov
leave
mov
lock
push
and
lret
out
call
mov
mov
mov
and
or
xor
insb
ss
sub
gs
mov
ret
mov
and
loopne
lock
inc
mov
popa
or
jecxz
int3
and
adc
repz
and
cmp
cli
dec
hlt
and
xchg
movsb
sub
adc
mov
nop
and
pushf
push
mov
in
cmc
test
movsl
or
sahf
je
je
gs
jg
jmp
xor
cwtl
adc
mov
jns
push
xor
dec
test
pop
in
imul
insb
pop
into
sbbl
iret
out
repz
insb
lock
add
mov
jno
sbb
insl
btc
test
loopne
test
xchg
or
stos
movsb
sub
push
in
repnz
cmp
xchg
xchg
in
jb
rolb
bnd
lods
notb
adc
in
icebp
inc
fs
add
and
testb
and
fildl
jge
push
repnz
arpl
push
jne
fsub
adc
xor
leave
gs
dec
insb
sbb
and
mov
pop
shrl
int3
cmp
lret
aaa
lock
dec
pop
xchg
test
cmp
xchg
pop
in
scas
cmc
sub
rcrl
push
cmpsb
mov
inc
mov
jae
jcxz
and
iret
and
xchg
in
xor
ja
addr16
mov
push
add
inc
inc
push
dec
xor
or
or
pop
insb
cmp
jae
lock
pusha
bound
lock
in
push
sub
sarb
fsubrs
sbb
das
in
repnz
flds
mov
push
dec
mov
pop
in
sub
rcl
hlt
pop
cwtl
inc
imul
cmpsl
mov
xchg
into
pop
pop
cwtl
mov
pop
mov
cld
and
rcl
outsb
jg
dec
shr
in
cwtl
push
testb
lret
push
mov
push
sbb
aad
xor
xchg
pushf
inc
mov
rcrb
cltd
sub
mov
es
jg
jae
adc
outsb
mov
cs
mov
fcoms
sub
je
mov
mov
add
stc
iret
jl
scas
sub
adc
jl
sub
pop
out
adc
or
inc
call
lea
sub
xor
clc
inc
jo
jl
push
mov
scas
xchg
mov
mov
add
loope
adc
dec
inc
fcmovu
xchg
jae
fmull
pop
loop
xchg
dec
in
stc
les
sbb
jmp
enter
xor
add
inc
dec
enter
in
rcrb
sub
sahf
notl
jl
sub
dec
pop
sub
and
dec
out
orl
loopne
clc
ss
jo
jle
and
movd
xchg
push
das
jb
je
aas
cltd
inc
push
xchg
cmc
in
fmuls
test
push
or
and
pop
fimull
in
cwtl
ds
insb
add
jmp
enter
loopne
xchg
xchg
out
xchg
push
or
pop
std
mov
lock
int3
sbb
lock
inc
jl
mov
data16
das
mov
xor
fsts
test
rorb
xchg
mov
mov
idivb
fisttpl
jae
loope
rcll
pop
add
adc
or
sti
lds
push
mov
adc
loope
nop
xor
inc
dec
jle
cli
aaa
xchg
sub
imul
and
lret
lret
daa
ljmp
pusha
lahf
pop
sbbb
cli
negl
les
xlat
cld
and
hlt
inc
dec
nop
xorl
cs
mov
push
adc
cmc
add
mov
mov
nop
pop
je
out
cwtl
or
sbb
mov
mov
fcomps
pop
outsl
insb
adc
cli
iret
cwtl
sub
mov
outsl
icebp
jp
mov
inc
hlt
xchg
push
outsb
cwtl
inc
sub
adc
add
pop
adc
and
mov
jge
adc
pop
repnz
repnz
ret
orl
jno
sbb
out
adc
mov
leave
inc
push
or
subb
dec
pushf
xchg
gs
fdivr
cmp
ficoml
mov
daa
loopne
mov
add
xor
leave
add
mov
adc
mov
inc
inc
das
lahf
orl
or
and
jae
sbb
daa
fxch
pop
add
pushf
cltd
cli
mov
fstps
sbb
sbb
lea
inc
mov
sbb
es
in
cmp
iret
pop
popa
push
lahf
mov
cmpl
fldenv
mov
fsubrs
sbb
ret
xchg
cmp
mov
outsl
loope
mov
loopne
sbb
movsb
aam
out
jae
mov
icebp
add
ret
adc
les
push
rcrl
sub
int3
cmpb
lds
cmp
inc
dec
outsb
rcrb
push
stc
push
dec
lcall
push
movsb
fwait
rcrb
push
stos
add
adc
and
push
push
push
stc
ds
rcl
inc
push
pop
aad
xor
sbb
insb
add
imul
mov
add
xchg
loope
icebp
pop
test
lods
out
adc
inc
sub
mov
and
lea
cmc
ds
pop
call
filds
xchg
xor
data16
mov
pop
or
sub
mov
or
push
roll
inc
enter
aas
movsb
sbb
cmp
aam
sub
or
jp
std
mov
xchg
hlt
jl
xor
jb
hlt
pop
jo
push
adc
jp
jae
jns
push
notb
xor
dec
out
sbb
xchg
jnp
or
filds
adc
les
das
dec
xchg
and
lcall
cmpsl
movsl
stos
push
pop
cltd
xchg
sbb
xchg
iret
in
and
inc
into
and
sbb
jb
jge
les
jns
cmp
or
xor
mov
sbb
push
insb
aaa
xchg
xchg
add
aas
sbb
lock
js
outsb
lock
insl
mov
cmp
and
ds
dec
inc
ja
pop
rol
nop
and
gs
imul
inc
shl
out
or
into
mov
shrb
mov
jnp
test
or
in
cmp
fsubr
and
bound
xchg
jns
stc
inc
aam
add
and
sbb
dec
mov
lahf
daa
fs
iret
addl
pop
rcrb
push
sub
pop
sbb
sub
shlb
lret
ficomps
mov
clc
pop
fcoml
xchg
or
add
xor
cmp
xchg
inc
stc
jge
jns,pt
jb
sbb
test
cmp
cld
pop
dec
xchg
inc
sub
movsb
rclb
push
sahf
cmp
test
shrb
out
ret
shr
mov
lods
add
imul
out
ret
inc
add
push
xor
sub
loope
daa
imul
inc
xlat
mov
in
jae
xchg
fists
mov
sub
jmp
add
mov
jmp
push
addr16
ljmp
dec
xchg
cwtl
movzwl
cmpsl
xchg
inc
bound
lods
add
lods
and
sarb
movsl
inc
jmp
cwtl
pop
jge
aam
push
gs
and
xor
lret
aas
fists
test
dec
or
lea
mov
mov
push
jbe
mov
fsub
mov
sbb
mov
sub
scas
orb
sub
adc
mov
movsl
std
lock
push
gs
in
insb
mov
insl
ficomps
mov
or
mov
sub
popf
xor
insb
xor
mov
filds
jp
pop
lods
cmovl
xchg
movsb
sbb
sbb
mov
imul
inc
jmp
ret
pusha
std
jge
add
adc
leave
int
dec
jno
fmull
push
pop
ret
int
dec
popa
or
fstpl
rcll
mov
xchg
sub
mov
jl
in
scas
int
mov
call
cmp
jg
mov
add
outsb
adc
shlb
arpl
pop
arpl
nop
sbb
add
inc
fbld
sub
sarb
jno
pop
sub
test
js
mov
add
fsubp
bound
lods
fdivs
fwait
enter
lret
insl
rolb
cld
xor
sbb
push
mov
or
or
mov
and
mov
repnz
mov
mov
add
push
cmp
xchg
fldl
data16
gs
hlt
out
pop
sub
mov
add
jmp
mov
or
cmp
mov
inc
in
js
mov
in
sub
jns
push
sarl
mov
cmp
cmp
movsb
loopne
insb
adc
test
inc
pop
js
insb
push
add
movb
out
xchg
sub
cmp
out
pop
and
cmpsb
jae
push
mov
xchg
ds
jecxz
call
fistps
xor
daa
pop
or
out
or
add
subl
or
movsb
or
dec
outsb
add
cmp
and
lret
add
js
imul
mov
insl
popa
dec
pop
std
lds
icebp
cmpb
shrl
test
mov
rclb
adc
in
xchg
fcmovu
es
std
xchg
pop
cmc
fiadds
cs
fcompl
lahf
test
xchg
sub
stos
adc
aam
fldl
adc
sarl
adc
rclb
dec
mov
insl
jp
insb
test
cld
fcmovnu
ss
mov
xor
lcall
push
rcl
cmpb
pop
and
ficomps
std
xor
fstps
jns
into
repz
xchg
sbb
int3
push
sar
and
xor
and
rcr
inc
pop
iret
inc
push
daa
xlat
inc
mov
fs
cmpsl
scas
mov
add
lahf
add
jle
imul
les
mov
imul
mov
push
mov
aam
cmpsl
out
push
and
jae
and
sti
jbe
mov
jecxz
xchg
jecxz
jecxz
xchg
lods
sub
pop
inc
lret
ljmp
sbb
pusha
pushf
inc
popa
repz
xchg
adc
adc
incb
xor
xchg
decb
lods
mov
int
lret
aad
dec
push
addr16
outsb
rorb
xchg
mov
insl
clc
mov
xor
and
and
xchg
test
out
add
cwtl
jl
stc
inc
repnz
xchg
incl
clc
cs
jmp
mov
fstpt
movsl
mov
lock
sbb
insb
jo,pt
dec
call
shrb
adc
loopne
das
cmpsb
cld
ds
lret
fwait
push
xchg
add
cld
cmpsl
aam
test
cmc
xchg
test
mov
jnp
std
pop
idivb
decl
fdivrs
cld
pop
imul
out
pop
add
jg
jae
push
shl
in
hlt
dec
cwtl
lea
mov
jns
add
jp
jecxz
call
lahf
imul
push
dec
outsl
xor
hlt
xchg
sub
cwtl
mov
popa
dec
ret
addr16
mov
or
jmp
les
rep
loopne
fwait
mov
int3
ljmp
mov
vcvtdq2ps
repz
pop
push
adcb
jmp
lods
loope
push
push
mov
pusha
pop
mov
or
loop
enter
push
nop
sar
andl
mov
mov
imulb
mov
pop
aas
xor
imul
and
dec
push
jne
nop
shlb
shld
cmc
popf
aam
aam
jnp
cmp
mov
mov
imul
divb
jnp
std
sbb
fbstp
pop
jecxz
out
add
out
daa
aaa
inc
push
mov
mov
xor
bound
movsb
jg
mov
cmp
jns
out
sub
outsl
cmpsb
incl
sub
out
mov
cmp
mov
fbld
ljmp
jne
and
cmpsb
fs
xchg
test
add
sub
aaa
dec
das
cltd
fs
or
mov
push
bound
push
call
add
sbb
mov
repz
push
push
scas
repnz
xchg
adc
jl
cmpsb
mov
rorl
pop
addb
sbb
or
outsl
inc
jnp
aam
mov
insl
cmp
gs
mov
out
pop
cmpsl
cmpsb
movsb
xchg
movsl
outsb
dec
jge
cmc
aaa
push
fistl
fincstp
inc
xchg
mov
fsub
cmp
js
mov
pushl
in
dec
js
adc
jo
inc
dec
ret
out
test
test
adc
dec
cwtl
popf
cwtl
add
int
int
push
cmp
sbb
sbb
testl
movsb
addr16
xchg
mov
out
mov
add
lcall
push
out
cmpsb
mov
fsubs
xchg
add
in
dec
arpl
inc
pop
fmull
movsb
and
xor
hlt
adc
shr
jmp
imul
fwait
clc
sub
and
cmp
sub
xor
push
call
add
cwtl
insl
dec
mov
inc
mov
pusha
popf
mov
cmp
pop
leave
adc
and
rcll
in
stos
mov
ror
fsts
xor
push
fsubrl
dec
cmpsl
pushf
xchg
adcl
inc
or
pop
add
insl
cmp
ja
xchg
arpl
das
sbb
push
outsb
inc
sub
loop
inc
rcrl
sub
fsubrl
xor
cmpsb
inc
roll
adc
push
dec
pushf
cmp
lea
insb
mov
imul
jl
mov
push
rcll
push
adc
pop
xchg
or
or
and
and
imul
xchg
aas
add
cmovle
orl
xchg
in
aas
mov
ret
inc
sub
pop
cmpl
call
movsl
cld
sbb
insb
ret
das
cmc
test
shrl
int3
mov
mov
push
mov
mov
inc
lahf
cmpsl
cmp
dec
mov
xchg
ret
add
mov
cmp
in
mov
xor
in
or
insb
lcall
fdivs
mov
fidivs
nop
je
in
out
dec
cmp
je
ss
add
dec
sbb
aad
and
and
leave
bound
or
push
sub
sbb
cltd
pushf
popf
pushf
pop
scas
loope
cs
cs
pop
push
sbb
divl
inc
aas
adc
arpl
mov
push
outsl
xor
sub
fwait
int
xchg
popf
or
fimull
mov
das
and
outsb
enter
popf
xor
inc
pop
push
sbb
pop
xchg
xor
and
cmp
stc
sbb
push
cmpsb
push
cmpsl
aam
aam
jb
dec
imul
and
arpl
mov
cmp
cmpsl
mov
jno
inc
push
add
adc
cmp
loopne
or
push
jns
gs
jne
sub
cmp
mov
jnp
into
test
sbb
testb
push
dec
cmp
mov
in
push
ret
incb
nop
sbb
inc
shrb
mov
inc
ja
sub
jb
pop
mov
push
dec
jo
xor
push
imul
icebp
sub
adc
sbb
inc
orb
and
dec
sub
pop
lcall
add
jmp
pop
dec
xchg
adc
sahf
fcoms
ds
sub
sub
data16
jecxz
pop
imul
mov
rclb
inc
sarb
dec
lret
mov
incb
push
inc
inc
pop
es
jbe
jp
cli
into
hlt
add
loop
sbb
movsb
mov
int
sbb
mov
adc
or
mov
stc
rorb
cmpsb
pop
sarl
mov
xor
sbb
push
ret
arpl
inc
pop
popf
fiadds
je
fcomps
es
and
mov
fistps
xor
fwait
cmp
xchg
daa
int
data16
mov
js
mov
fcoml
imul
push
insl
lea
hlt
jbe
pop
and
je
or
ljmp
sti
andb
mov
pop
inc
mov
lcall
add
dec
adc
add
adcb
jge
inc
mov
inc
jne
dec
call
xchg
jb
jp
xchg
mov
push
fs
inc
jns
movsb
push
sub
mov
push
jns
repz
testl
test
sti
sbb
sbb
sbb
imul
aaa
daa
xor
jl
mov
xchg
cmpsl
dec
jmp
rorb
mov
inc
xor
push
movsb
add
dec
adc
test
jo
push
sub
je
in
push
scas
dec
xor
les
mov
dec
lock
inc
inc
adc
dec
sub
lods
add
out
fs
daa
adc
adc
mov
out
jae
fwait
mov
sub
cmpsl
int3
addr16
out
mov
xor
jne
fwait
lea
jns
mov
lea
in
xchg
ja
ret
je
push
pop
pop
fwait
push
pop
adc
stc
stos
imull
inc
cmpsb
lahf
je
stc
sarl
xor
pop
loopne
jge
mov
push
ret
dec
jmp
stos
arpl
sub
and
push
ljmp
aad
in
jge
jmp
int3
out
mov
push
lods
inc
je
sbb
inc
xor
insb
lods
ret
mov
pop
insb
jno
mov
xor
push
cmpsl
mov
inc
movsl
mov
pop
jb
jbe
std
mov
arpl
sbb
push
xchg
or
cltd
cmpsb
sbb
in
add
ret
dec
sbb
lock
jns
out
or
shll
bound
sub
stc
nop
and
jp
out
nop
lock
mov
pop
adc
mov
mov
int3
jbe
push
scas
jl
ja
lods
out
popa
lock
mov
addr16
push
xchg
dec
bound
cmp
rcll
sub
loop
iret
in
lods
out
shlb
jecxz
cltd
push
xchg
pop
movsl
insb
popf
out
mov
mov
mov
mov
pop
inc
stos
into
push
inc
pop
arpl
jmp
pop
dec
push
mov
xchg
mov
clc
inc
cmp
jb
mov
cli
stc
repnz
mov
dec
les
xchg
or
adc
and
ja
xor
hlt
aas
mov
call
sahf
nop
sub
xchg
shl
sub
cmpsl
mov
mov
fmuls
pop
fldcw
mov
mov
pop
cmc
aaa
adc
cld
int
popa
mov
mov
imul
nop
aas
mov
xor
mov
repnz
imul
stos
shrl
sbb
or
xchg
or
icebp
xchg
xchg
ret
pop
jle
xchg
outsb
dec
mov
lret
push
in
dec
jbe
out
dec
aas
xchg
jle
jge
sbb
in
dec
mov
pop
adc
outsb
enter
pop
div
fsubs
fidivrl
aad
fldcw
jo
jg
mov
fyl2x
mov
or
addb
or
mov
test
and
dec
adc
cmpsb
js
mov
sub
inc
inc
push
fs
sub
add
scas
inc
sub
test
js
pop
lret
mov
jnp
jge
mov
andb
mov
mov
pop
decl
push
nop
push
sarb
jnp
mov
rol
inc
aad
inc
leave
ret
mov
add
int
outsl
xor
push
add
popf
ficomps
outsl
add
sbb
mov
lahf
cli
data16
add
push
sub
sub
xchg
pusha
add
mov
lcall
test
cwtl
test
and
adc
and
fwait
cld
jne
dec
jae
inc
lods
dec
jae
mov
push
leave
push
insl
scas
xor
data16
aaa
out
mov
jns
xchg
js
subl
nop
jge
shlb
or
testb
inc
repz
mov
sub
enter
inc
ljmp
inc
cmp
xor
and
jg
inc
out
pushf
add
and
stc
pop
js
push
jmp
cli
sub
inc
sbb
adc
lock
daa
js
data16
decl
rcrb
mov
mov
data16
xor
dec
out
xchg
add
xchg
fldt
rcll
jne
mov
enter
jbe
dec
jo
push
sti
outsb
mov
testb
pop
negb
sahf
xchg
notb
xchg
std
lahf
lret
cmpl
adc
es
xchg
rolb
dec
ficompl
aad
hlt
inc
jmp
into
xor
fisubl
addr16
mov
movsl
loopne
pop
or
sbb
test
das
or
dec
out
popf
loopne
std
stos
pop
and
pop
ret
outsl
dec
mov
lock
rol
push
xor
ficoms
std
add
mov
sub
pop
mov
mov
or
cltd
loopne
mov
out
insb
mov
pop
lcall
nop
popf
loopne
pop
rol
leave
and
cld
test
mov
loop
sbb
data16
pop
add
cmp
jno
dec
or
leave
push
imul
xchg
dec
mov
test
pop
mov
jbe
iret
popf
rclb
icebp
dec
or
movsl
lods
icebp
pop
scas
sbbl
aas
cli
dec
mov
test
add
aaa
ljmp
arpl
mov
aad
sbb
adc
inc
jbe
push
call
mov
into
mov
jb
mov
push
push
sub
sub
sub
sbb
pop
push
push
mov
pop
pop
stc
mov
mov
push
pop
and
lea
sbb
adc
lahf
int
jns
push
sbb
mov
js
lret
jns
sub
xor
leave
cs
jb
pop
inc
mov
ret
and
popf
stos
aam
data16
aaa
inc
mov
mov
ljmp
out
cmp
xlat
and
stos
dec
iret
xchg
mov
iret
cmp
dec
jmp
jecxz
mov
and
shll
gs
push
es
imulb
js
and
ss
or
jecxz
mov
jno
aas
loop
into
outsb
sbb
out
mov
jae
jge
xchg
push
pop
rclb
int
mov
fcom
std
jmp
js
pop
pop
jge
or
pushf
jnp
ret
sahf
fwait
sbb
pop
jecxz
les
std
mov
xchg
jecxz
xor
pop
lods
pop
pop
cmp
and
sahf
test
or
rcll
wrmsr
mov
mov
and
js
sbb
jo
jge
mov
dec
and
ret
xor
enter
xchg
xchg
push
cmp
cmp
mov
pop
or
aad
movsb
inc
jl
mov
mov
or
xor
cmpsl
sub
mov
sbb
mov
dec
cmpsb
fsubrs
jmp
and
xchg
cmp
xor
cmp
test
jo
push
loopne
and
push
shrb
adc
adc
je,pn
mov
xchg
add
pop
aas
mov
xchg
cmp
sti
inc
xchg
daa
roll
aaa
bound
fchs
or
testl
movb
inc
cmp
sarb
mov
loopne,pt
inc
shlb
loopne
inc
mov
cmp
adc
jnp
sti
inc
ja
inc
jne
subl
sub
mov
add
xor
out
and
test
or
faddl
lcall
push
push
pop
outsl
cli
sub
xor
add
fcoms
pop
cmp
add
popf
movsl
js
inc
test
sbb
jbe
sbb
dec
outsl
leave
xor
lret
popf
ret
inc
push
rclb
je
and
ds
and
pop
test
or
aaa
cmp
xor
xor
roll
push
dec
int3
pop
inc
sub
sahf
jbe
lcall
into
sbb
ss
addr16
xlat
inc
loop
cmpl
lcall
mov
xor
ds
push
xor
fisubrl
add
cmpl
stc
roll
push
cmp
sti
rolb
mov
fcoms
iret
xchg
xchg
push
mov
push
xchg
adc
cmpl
and
loop
lock
sub
stos
lahf
pop
cltd
out
pop
data16
out
pop
inc
xchg
push
jg
aam
or
sbb
sbbl
aam
mov
push
xor
xor
inc
lds
adc
mov
add
push
aas
add
fimuls
imul
out
fisttps
sub
adc
ljmp
cmc
sub
add
add
xlat
add
xorb
jmp
jno
in
add
jmp
cmp
popa
xor
dec
jo
std
inc
mov
mov
and
push
daa
call
xchg
sub
or
lret
dec
scas
add
xchg
shr
shll
fisttps
loopne
xor
enter
dec
add
or
out
and
inc
jp
ret
dec
mov
inc
add
add
cmp
pop
sbbl
mov
push
push
pop
lock
push
orl
mov
cmp
lea
sarl
mov
repz
push
xchg
rcl
xor
push
daa
shll
pop
push
imul
mov
sub
sti
and
cs
rcrb
add
lods
dec
jmp
call
cmp
popf
mov
cli
inc
arpl
test
push
ret
popa
aad
mov
add
inc
ret
sahf
xchg
mov
pushf
inc
dec
adc
push
int
push
push
aad
sub
shrl
and
pop
imul
rolb
aas
mov
fcmovbe
or
xor
or
andb
pop
dec
arpl
je
js
pop
pop
jecxz
xchg
sub
and
aaa
inc
outsl
ret
jbe
xor
and
adc
and
inc
mov
bound
pop
inc
arpl
jne
sub
inc
stos
sbb
fildll
in
test
pop
cli
add
inc
inc
inc
arpl
ror
cmpsb
lahf
xchg
jne
nop
stos
jno
icebp
in
int
insb
push
mov
call
or
add
and
inc
hlt
mov
mov
jb
pop
mov
push
das
test
sub
adc
in
sti
mov
stos
cmp
dec
in
in
pop
movsl
mov
xchg
inc
jns
nop
cmpsl
pop
adc
lcall
outsw
ret
pop
test
popa
and
clc
push
leave
into
lretw
sub
pop
xchg
cmpsl
test
pusha
mov
and
repz
pop
xlat
push
pop
lahf
jmp
out
arpl
push
into
shrl
sbb
rcrb
jp
xchg
aas
leave
or
sub
xor
adc
push
bnd
adc
push
and
xor
add
es
int
add
inc
fldl
sbb
or
movsl
mov
inc
arpl
stos
jle
imul
fisubrl
dec
rclb
test
jge
les
mov
pop
adc
enter
mov
sbb
inc
jecxz
xchg
or
dec
leave
fidivs
jle
shll
repnz
jno
mov
pop
xchg
xchg
mov
gs
add
lods
cltd
mov
data16
xlat
nop
fsubl
xchg
adcl
jbe
cli
fxch
sub
icebp
or
shrb
push
jmp
je
pop
xchg
add
dec
xor
sbb
int3
lahf
sub
int
mov
add
std
rolb
dec
iret
jns
outsb
push
sub
adc
aad
push
into
sub
and
push
pop
or
fmuls
lcall
pusha
mov
adc
pop
lods
fs
cmp
push
push
divb
je
adc
pop
ljmp
aaa
mov
in
addr16
push
sbb
inc
test
push
cmp
pop
mov
ja
push
sub
retw
imul
je
cs
xor
test
sbb
mov
add
imul
popa
inc
adc
push
pop
sbb
xchg
mov
dec
add
xchg
jns
jb
add
fs
movsl
xchg
and
and
rol
ret
or
fucom
sbb
inc
mov
push
jns
xchg
loopne
fwait
add
sub
mov
fs
leave
out
mov
jp
shl
xchg
adc
fldl2e
cmp
push
shrb
mov
mov
inc
inc
inc
dec
ret
cs
inc
pushf
ret
pop
mov
jns
inc
fcmove
mov
pop
mov
push
mov
sbb
lock
call
jo
imul
test
cmp
mov
enter
cmp
loope
push
dec
mov
nop
cmp
shlb
scas
jo
sbb
lock
adcl
dec
mov
mov
call
jmp
pop
xor
xorl
jge
faddp
insl
cmp
push
mov
jo
push
mov
bound
repnz
test
sub
and
lods
stos
mov
mov
mov
mov
in
and
ja
cli
cmp
push
leave
jecxz
mov
repz
loope
sbb
cli
cld
inc
divb
inc
pop
repz
xchg
dec
dec
push
adc
cmc
cmp
xorb
xchg
jbe
lods
mov
insb
add
xchg
pop
mov
out
leave
mov
mov
enter
fidivs
fcmovne
bound
sbb
insb
xlat
jne
std
xchg
lds
cmp
out
sbb
sub
fs
jno
jmp
adc
lods
das
fs
sbb
mov
jae
je
ss
rcr
es
push
in
add
gs
outsl
data16
es
fdivr
mov
or
dec
sub
dec
push
arpl
sti
lods
push
xor
imul
dec
jbe
outsb
add
negb
cld
jb
push
and
pop
in
cmp
jp
mov
mov
pop
push
mov
mov
xchg
test
lahf
xchg
loopne
fs
mov
fcoml
push
int3
mov
xchg
pusha
mov
out
push
insl
or
pop
das
mov
mov
or
stos
xchg
scas
inc
mov
arpl
cmpsl
push
mov
mov
nop
iret
mov
jmp
mov
enter
mov
pop
mov
xchg
in
xchg
pop
insl
mov
in
and
inc
sub
push
mov
cmp
les
ds
in
push
lods
adc
mov
stos
or
dec
nop
iret
mov
cs
outsl
leave
outsb
dec
push
pop
mov
xchg
xchg
ss
fldenv
and
push
xchg
mov
sti
xor
xchg
and
enter
push
outsb
ja
xor
dec
xchg
js
add
test
jno
fs
mov
lds
adc
adc
shrb
push
pop
popa
leave
dec
insl
scas
adc
xor
fidivl
stos
mov
scas
es
shll
mov
sub
adc
xchg
int
and
jge
enter
in
and
testl
fs
sub
push
mov
xchg
jge
push
mov
xor
divl
xchg
mov
xchg
and
outsb
pop
in
push
outsb
push
in
push
mov
jb
sub
leave
jle
jbe
popf
int3
mov
cmp
enter
mov
pop
adc
push
jno
adc
enter
mov
pusha
mov
cmp
mov
leave
cmpsb
dec
pop
out
sti
and
pop
maskmovq
add
in
scas
dec
lods
pop
pop
mov
pop
imul
outsl
pop
lods
mov
imul
or
pop
or
push
jp
fsubr
mov
xor
insb
sarl
outsl
ret
mov
cmp
cmp
aas
or
data16
mov
lds
sub
push
xchg
dec
push
cs
lods
pop
xchg
xchg
and
jnp
iret
or
leave
aaa
dec
xchg
xchg
sti
or
dec
pop
pusha
out
mov
das
or
or
pop
push
das
or
ljmp
xchg
fldt
stc
pop
call
pusha
cli
sub
lcall
xor
xchg
mov
pop
das
div
xchg
jbe
cmp
ficoml
movl
pop
xchg
jl
push
out
sub
jbe
out
cwtl
and
mov
mull
mov
jno
cltd
nop
mov
add
lret
adc
push
or
pop
pop
sub
jno
cmc
stos
nop
add
mov
xchg
push
xchg
pop
stos
sbb
cmp
xor
jb
mov
sub
jno
adc
dec
mov
fs
cmpsl
clc
inc
mov
adc
xchg
jnp
mov
fcoml
aaa
movsb
cs
dec
scas
pop
adc
add
leave
cmp
divl
mov
mov
dec
push
dec
xor
and
mov
push
and
mov
jo
cmpb
sub
int
inc
and
and
jmp
leave
and
sub
adcl
or
cmp
cld
xchg
iret
mov
xor
dec
cmp
pop
xor
mov
fiaddl
stc
mov
add
inc
push
imul
jne
dec
inc
adc
addr16
mov
push
cmc
hlt
jno
pop
div
jno
push
imul
add
pop
shlb
cld
or
adc
and
and
and
and
clc
out
outsl
inc
ja
fsubrs
inc
ja
in
or
adc
mov
sbb
jbe
sbb
cmp
xchg
out
repz
push
pop
xor
sbb
pusha
push
cmp
sahf
pushf
es
inc
sbb
mov
sbbb
out
popf
jecxz
cmp
xchg
jecxz
cmp
lea
mov
pop
push
decl
popa
mov
push
mov
or
int
rclb
jbe
aaa
mov
xchg
dec
jp
xlat
sub
repz
push
push
adc
dec
sbb
cmp
xchg
add
addr16
mov
cmp
or
push
jae
or
push
repz
jecxz
pop
mov
dec
lcall
pop
and
loope
out
aad
fmuls
outsl
fcoml
jge
cmc
inc
lret
out
rolb
lds
and
mov
inc
ja
js
pop
lods
mov
std
jg
cmpsb
inc
rorb
xchg
sub
dec
sbb
in
pop
or
popl
mov
jmp
pusha
cmp
movsb
dec
rolb
sbb
test
inc
out
adc
add
dec
pushf
fsubl
or
push
nop
in
sbb
popf
mov
or
repz
or
xchg
nop
hlt
add
or
mov
xchg
jns
lea
int3
add
sbb
pop
out
add
test
or
out
mov
daa
int3
orl
push
cwtl
xchg
or
flds
dec
sbbb
pop
mov
push
mov
dec
add
addl
das
fmull
push
and
or
mov
jmp
or
rolb
scas
inc
outsl
icebp
addr16
fnsave
add
dec
push
jbe
sti
jp
aaa
push
sbb
jp
sub
neg
dec
ficomps
cli
pop
and
leave
mov
outsl
jp
rcll
lahf
mov
add
or
adc
fidivrs
mov
popf
addr16
lods
xchg
sub
mov
test
pop
daa
and
mov
ficompl
test
lds
arpl
jmp
lret
ja
dec
pop
jle
stc
xchg
in
xchg
lahf
pop
jle
cmp
repnz
in
lret
lret
xchg
xor
jle
stc
and
lret
cmp
cs
ds
mov
pop
ret
lods
xchg
sbb
imul
mov
dec
mov
imul
xlat
jp
jne
cmc
add
cmc
inc
jmp
jmp
xor
repnz
mov
aam
in
pusha
mov
xchg
in
sbb
dec
push
mov
lods
ds
int3
jmp
std
dec
push
sbb
fisubl
fisubl
fisubl
inc
fwait
inc
std
pop
mov
mov
inc
andl
inc
cld
adcb
cmp
sarb
hlt
ds
and
mov
or
out
push
cmp
cwtl
data16
fmull
push
les
cli
xchg
mov
mov
push
lods
xor
andl
pop
das
scas
aaa
scas
pop
outsl
int3
mov
inc
gs
push
push
xchg
jno
sbb
or
cwtl
sub
inc
sub
jmp
pop
dec
movsb
stos
xlat
ret
outsl
dec
jle
sbb
lahf
sti
les
fistpll
rcrb
popf
sbb
aad
dec
mov
into
sbb
enter
fmuls
add
mov
imul
data16
jns
movsb
mov
cmp
xor
pop
inc
cwtl
fdivs
or
mov
jae
js
in
xchg
int3
xor
std
and
mov
cwtl
mov
rorl
out
das
fbld
rcr
mov
insl
nop
push
sbb
clc
mov
xchg
adc
inc
in
sti
les
mov
mov
mov
testb
iret
movsb
out
scas
sub
mov
dec
inc
aad
ljmp
mov
fstpl
cli
xchg
aad
cmp
pop
push
sbbl
call
add
inc
push
dec
in
imul
lahf
cli
mov
push
mov
lock
ss
jne
or
iret
adc
cltd
fisubl
fisubl
fisubl
lret
mov
cmc
cmp
mov
or
mov
cmpsl
shrl
ljmp
movsb
clc
push
popf
pusha
jo
sbb
push
lret
mov
push
push
cltd
movsl
and
andl
inc
xchg
push
nop
loop
in
sbb
popf
ficomps
mov
js
call
push
adc
and
or
dec
jle
jbe
ja
inc
insl
push
sub
test
in
cmp
iret
loope
shl
std
push
fcoml
mov
jae
push
dec
nop
movsl
sub
cmp
out
movsl
or
push
push
cld
ds
pop
test
ja
inc
mov
mov
int
mov
stos
fldt
cmpsb
pop
mov
add
enter
mov
scas
loope
fdiv
mov
rcrl
sbb
push
ret
lcall
xor
cmc
mov
mov
test
clc
sbb
cmp
dec
inc
jp
testb
in
mov
mov
pop
jae
sbb
mov
shlb
push
nop
into
xchg
loop
adc
push
inc
dec
fnstenv
clc
cmp
dec
pusha
sbb
mov
in
mov
repz
ret
sub
sbb
jne
push
cwtl
mov
xor
mov
push
shrb
or
mov
xlat
push
lods
shr
lahf
js
dec
adc
cltd
pop
push
cld
mov
aam
cmp
fldt
out
mov
sbb
out
movd
jp
roll
sbb
mov
mov
stos
xchg
sub
dec
add
jp
mov
mov
jns
ret
in
movsb
scas
shl
lahf
shr
insl
adc
jecxz
pop
jge
mov
mov
cs
jne
jge
mov
mov
dec
sub
sub
mov
mov
mov
mov
in
sub
adcl
loope
mov
sbb
cmp
in
add
xchg
ja
pop
out
enter
xchg
jae
ja
imul
fwait
xor
mov
out
dec
pop
test
xchg
daa
fisubl
add
ret
fiadds
or
neg
add
or
daa
inc
js
je
insb
jl
sbbl
push
pop
cld
xor
imulb
push
mov
leave
jo
pushf
or
dec
sub
sbb
imul
pop
mov
mov
mov
mov
dec
aam
jle
xor
or
call
out
jle
shlb
rcll
pop
lea
sti
sahf
and
dec
mov
jl
adc
mov
jo
aaa
cli
jne
dec
arpl
pop
sti
jbe
fdivrs
out
cld
cmp
mov
jbe
push
mov
inc
jl
sbb
loope
out
fidivrl
and
out
mov
addr16
xor
inc
clc
xor
out
pop
jecxz
adc
sahf
lret
or
add
test
pusha
lret
sub
stos
mov
shrl
shr
pop
cli
call
adc
push
lea
sub
or
fisubrl
push
aaa
pop
cmp
icebp
sbb
aad
ss
mov
cmp
xchg
push
sbb
mov
icebp
mov
cmp
rcrb
jp
fisubrs
xchg
or
jp
loop
mov
stos
push
rolb
imul
sub
fiaddl
ret
cmpsl
rol
mov
cmp
sbb
mov
push
stc
cmp
idivb
mov
xlat
pop
stos
test
cmpsb
mov
push
movsb
loope
sub
aam
xor
xchg
push
sbb
and
lret
mov
cmp
xor
sub
mov
gs
les
sbb
mov
cmpsb
cmc
std
imul
outsl
xor
and
out
xor
dec
gs
loop
mov
mov
pop
pop
xor
lds
mov
mov
mov
in
xor
in
icebp
sbb
mov
addl
pop
xor
sahf
sbb
lods
cmpsl
mov
sub
int3
lret
inc
lret
xor
rcll
out
rcll
imul
xor
cmpsl
xor
pushf
inc
jne
pop
mov
daa
fsubs
cwtl
loopne
push
into
mov
dec
mov
outsb
sbb
pushf
out
xchg
jnp
out
cmp
ss
arpl
jle
sbbl
jle
iret
mov
cld
int3
cltd
inc
frstor
mov
pop
imul
sub
sub
mov
ljmp
in
mov
fsubr
or
cltd
mov
and
cli
loopne
mov
xchg
outsb
push
mov
scas
xor
sub
setne
mov
mov
jb
ror
jb
inc
scas
lods
out
or
out
aam
xchg
hlt
int
call
jp
jbe
mov
xor
imul
addr16
cmpsb
jle
lret
mov
sub
ja
insb
push
cmp
push
xor
aad
mov
fwait
xor
imul
das
pop
popa
inc
out
sub
mov
pop
pop
push
and
pop
call
pop
xchg
cmpsl
cmp
out
jnp
repnz
lods
sti
ret
xor
ror
into
inc
jge
push
dec
sbbl
pop
repz
sbb
ss
jge
icebp
nop
stc
pushf
adc
lret
pushf
jae
mov
cmp
in
jb
lret
mov
jb
int
push
pop
movsb
rclb
cmc
mov
int
cwtl
sub
nop
scas
das
sbb
mov
ja
imul
outsl
pop
mov
inc
inc
loop
hlt
imul
jno
jecxz
add
aam
shrb
roll
int
push
mov
movb
ds
jo
addr16
into
cmc
push
mov
int3
stos
movsb
inc
xchg
cmc
fld
ljmp
mov
shl
lret
insb
xchg
cmp
adc
iret
movsl
int3
leave
and
add
testl
sub
xchg
imul
movsl
jp
jo
iret
jmp
decb
lcall
in
and
js
add
in
sub
mov
inc
adc
sub
xchg
outsb
pop
out
sbb
mov
xchg
mov
ds
lret
daa
leave
jnp
shrl
lcall
stc
les
adc
mov
fnsave
lods
pop
jns
sub
movzwl
aas
inc
test
inc
jmp
mull
mov
sbb
sbb
mov
push
adc
leave
icebp
cmp
or
add
fistpl
insl
stos
sar
push
and
lret
arpl
idivl
inc
or
in
arpl
loop
out
cmc
in
cs
insl
cmp
mov
shlb
movsl
and
mov
sub
frstor
sub
cmp
cld
jae
mov
adc
mov
fs
push
fwait
ds
inc
lcall
outsl
stc
mov
addb
and
cmp
sbb
fisubl
and
shll
lret
insl
xchg
aaa
das
mov
push
sarl
cs
bound
and
xchg
int
in
cmp
enter
adc
inc
xchg
or
insl
push
sub
inc
in
xor
mov
ret
sbb
sbb
adc
mov
mov
jae
outsl
xchg
lcall
xor
dec
push
dec
fwait
xor
pop
stos
sbb
test
repz
xchg
gs
popf
inc
bound
xchg
push
out
imul
int
dec
or
aaa
mov
inc
cmp
jne
lea
mov
rclb
insl
adc
pushf
cmp
jl
fsubr
daa
or
lcall
add
push
add
aam
pop
cmpsb
and
dec
and
lods
call
shlb
inc
loope
in
jb
es
and
fwait
add
xchg
out
js
xchg
mov
insw
or
mov
cltd
test
inc
pop
ret
or
mov
pop
mov
fistpll
imul
mov
xor
xlat
movsb
enter
pop
or
cmp
pop
call
inc
mov
pop
push
mov
int3
lea
sbb
or
insl
test
jno
adc
dec
or
and
mov
xchg
inc
jae
sub
int3
stos
mov
mov
in
aas
inc
sub
pop
sub
insb
aaa
sub
movsl
enter
cld
xor
pop
pop
jo
push
icebp
cs
dec
push
xchg
mov
xor
push
push
in
sbb
lods
stos
xchg
leave
aaa
pop
mov
setne
or
icebp
cld
in
mov
pop
in
and
adc
inc
jmp
mov
sbb
xor
pop
add
js
in
dec
xor
pushf
in
ja
sbb
lret
or
pop
mov
cmc
stos
pop
sbb
aad
rorb
fnstcw
add
jo
push
add
xchg
mov
popl
mov
inc
inc
mov
mov
push
dec
xchg
insl
mov
daa
pop
inc
int
into
push
mov
jnp
gs
adc
cmpsl
movsl
repnz
xor
fcomi
sub
jecxz
test
adc
adc
dec
jmp
xchg
into
xor
sub
add
cltd
rcll
jge
fimuls
push
or
pop
dec
lcall
mov
pop
push
comiss
jno
or
out
stos
adc
adc
adc
sbb
cmp
out
sub
dec
fisubrs
push
push
mov
push
cmpsl
jb
cmc
sbb
xor
xchg
inc
mov
fwait
aaa
xor
scas
addps
mov
lods
sbb
add
fidivl
frstor
test
cs
xchg
mov
jbe
dec
jmp
aad
dec
lods
es
imul
lock
stc
fisubrl
popa
pusha
mov
cld
push
xlat
mov
test
dec
jecxz
add
push
xor
lds
cmp
fiadds
and
sbb
lret
mov
ret
repz
add
jle
pusha
mov
sbb
and
mov
or
sub
inc
repz
addl
xorl
sub
ljmp
cmp
dec
je
filds
dec
lock
cli
data16
pop
ljmp
mov
daa
pushf
aam
jl
jp
jns
xor
pop
stos
out
sub
fistpll
cmp
jmp
mov
jp
lret
pop
arpl
cmpsl
aaa
sbb
nop
push
in
int3
in
xlat
test
inc
mov
dec
dec
cmp
dec
cmc
lock
xchg
push
pop
sahf
push
loop
cli
dec
stos
xchg
aad
xchg
adc
jl
jge
pop
jb
or
das
sub
iret
aaa
push
int
stos
jl
jnp
inc
btc
test
lea
xor
sbb
or
jae
icebp
or
push
frstor
cmp
lea
or
sub
jle
outsb
xchg
outsb
fstpt
outsb
xchg
outsb
fdivrl
outsb
xchg
scas
fnstsw
outsb
xchg
cmpsb
cmp
dec
fidivrs
push
mov
jle
jge
jmp
mov
cli
sub
insl
and
pop
mov
jp
loopne
mov
pushf
pop
push
adc
insl
or
jno
imul
mov
add
pop
jmp
sbb
sti
ret
shlb
addr16
ljmp
outsl
pusha
jle
mov
lcall
test
xchg
rcr
xor
enter
mov
dec
incl
pop
xchg
pop
ss
fwait
iret
sbb
mov
pavgw
pop
in
cmp
mov
pop
aad
cmp
and
add
mov
lods
xor
adc
adc
jg
aaa
pushf
mov
rclb
js
dec
test
cmp
lret
add
jne
jl
adc
gs
cli
push
stos
dec
inc
out
pop
rclb
icebp
sbb
inc
es
mov
xchg
sbb
aad
scas
jne
nop
xchg
cmp
mov
cmp
jno
sbb
push
sti
mov
fwait
mov
rcrb
mov
inc
jmp
adcb
jmp
mov
adcl
xchg
mov
mov
lret
movsl
stos
lret
jnp
iret
pusha
lods
pop
add
inc
adc
mov
mov
sbb
inc
loopne
adc
in
in
es
rcll
sub
push
lea
jne
pushf
inc
gs
cli
pop
nop
sti
mov
cmpsb
sub
repnz
xchg
das
adc
push
cmp
jecxz
adc
mov
lea
test
testl
xchg
sbb
bound
and
das
sbb
fistpl
idivl
mov
ds
movsl
lahf
aaa
dec
cmp
clc
fsubrs
sbb
inc
das
cli
outsl
jl
in
or
fidivrs
cli
movl
inc
push
sbb
inc
addr16
sbb
pop
or
sub
pop
pop
arpl
cmpsb
lcall
jmp
test
repnz
lds
out
pushf
push
inc
xor
inc
clc
mov
into
mov
cmp
pushf
call
add
sub
and
xchg
mov
and
mov
stc
repnz
push
scas
loope
stc
test
pop
sti
mov
shrl
dec
xchg
pop
lds
push
xchg
outsb
js
mov
dec
xor
std
fidivl
insb
mov
ds
test
clc
leave
repnz
aas
mov
imul
mov
cmovo
sahf
mov
xor
lahf
cmc
push
lret
das
dec
ja
push
gs
mov
fst
xchg
jge
push
iret
sbb
insb
push
mov
jle
stos
cmpsl
push
fstl
aam
inc
repz
gs
mov
jb
adc
cmp
imul
cwtl
lds
inc
ja
daa
jmp
clc
shll
jecxz
jle
mov
or
aad
idiv
sub
and
sti
lret
in
jae
mov
sahf
mov
push
mov
iret
je
add
push
xchg
jmp
adc
stos
or
mov
jb
lret
mov
test
jae
or
notb
jnp
cltd
pop
mov
jl
jno
ja
pusha
shr
sub
scas
insl
repz
dec
dec
out
into
or
in
fisttpl
mov
xchg
cmp
fbstp
xchg
pop
cs
mov
sahf
cmpsl
mulb
jns
mov
stos
loope
xchg
inc
jg
and
icebp
dec
ror
xor
aas
mov
sbb
cmc
fimull
push
push
mov
lahf
or
pop
pop
std
outsb
adc
icebp
mov
cmpsl
mov
hlt
mov
cmpl
aas
sub
dec
cmp
push
mov
and
pop
push
popa
in
arpl
xchg
cli
testl
iret
lret
push
cmpsl
outsl
lcall
xor
mov
lock
testl
arpl
popa
adcb
dec
leave
in
test
inc
es
xlat
pop
push
fidivl
bt
push
mov
and
jbe
or
faddl
adc
shl
outsl
xchg
movsb
lret
xchg
inc
roll
popf
xlat
mov
lods
dec
mov
les
jge
pop
fdivr
in
movsl
cs
mov
mov
and
push
in
or
test
xor
inc
hlt
shl
cmp
lret
lods
int
inc
call
std
dec
pop
into
pop
pop
call
cs
sub
test
sbb
aas
fsubl
fidivs
inc
lahf
out
sub
mov
xchg
xchg
enter
jnp
imul
or
mov
pop
ret
pop
or
cmp
fsubp
bound
jns
jecxz
sub
mov
das
pop
repz
mov
clc
aas
pop
cmpsb
lcall
inc
andb
lret
jecxz
inc
scas
push
pop
cmp
pusha
push
imul
cmp
and
clc
and
mov
mov
push
push
push
loopne
fbld
push
pop
arpl
mov
arpl
outsb
mov
aad
aam
insb
insl
gs
test
xor
adc
xor
adcb
pop
imul
icebp
xor
sbb
jp
bound
xchg
add
cmp
mov
jge
mov
mov
jmp
mov
inc
pop
push
loop
fnstsw
pop
div
out
mov
out
or
in
mov
pusha
jns
loope
cmp
mov
aas
mov
cmp
push
fidivrs
lods
sub
rcll
pop
test
mov
dec
mov
pop
sub
xchg
movsl
xor
arpl
scas
jecxz
push
ljmp
pop
xchg
pop
inc
push
jbe
mov
and
sub
inc
lret
push
sti
mov
cmp
into
jle
adc
negb
xchg
sti
popa
in
inc
mov
sarl
xor
std
fdivr
cmp
shl
shlb
ret
mov
push
dec
mov
jbe
fucom
arpl
jae
pop
insl
mov
shll
dec
icebp
stos
jecxz
aaa
xor
push
lahf
pop
cld
mov
dec
iret
sbb
ljmp
enter
int
mov
loope
sbb
fidivl
outsl
cmp
mov
mov
test
jge
mov
or
jg
movsb
xchg
in
xchg
lret
les
ljmp
sbbl
jge
iret
aas
xor
xor
xor
in
shl
repnz
ja
jns
lds
bound
cmpl
rcr
inc
arpl
sahf
scas
jmp
xlat
popa
das
bound
bound
mov
xlat
xchg
repz
sbb
jbe
in
dec
into
mov
xor
aad
arpl
add
stos
sbb
add
mov
jnp
imul
std
das
pop
outsl
fcomi
cli
ret
cmp
xchg
pusha
ja
dec
scas
inc
fnstcw
cmpsl
dec
fwait
in
and
adc
out
push
rol
ja
cs
push
adc
js
sbb
jl
sub
fs
loope
jo
push
jae
cmp
test
rol
es
js
sbbl
cmp
dec
push
mov
inc
mov
add
addl
fdivs
mov
push
jmp
stc
int3
test
js
adc
mov
jmp
pop
fsubl
cmc
mov
fcmovnu
mov
scas
add
mov
out
jb
xor
adc
in
sbb
sbb
ja
jno
mov
shr
and
test
mov
or
dec
mov
fimuls
pop
add
and
inc
lret
mov
cld
adc
insl
xor
sub
out
pop
or
lret
jle
ss
xchg
ret
outsb
or
sub
std
push
in
repnz
sti
xor
inc
mov
mov
cmpsb
or
sar
adc
insb
jecxz
fimuls
pop
test
rcrl
mov
cmove
sbb
scas
sar
shlb
pushf
xor
pop
mov
adc
fs
fwait
scas
in
enter
xchg
lods
insb
adc
aaa
iret
cmp
hlt
ljmp
into
sub
pop
inc
movsl
sub
cmp
insl
xchg
neg
ficoms
xchg
repnz
dec
sar
dec
xchg
sahf
out
aas
sbb
das
xor
fldcw
jge
call
lock
out
scas
mov
push
xchg
arpl
xor
clc
or
xor
mov
fdivrl
in
cmp
add
cli
sahf
in
mov
jg
jnp
enter
repz
pop
fistpll
scas
pop
lds
iret
faddl
cmpsl
sbb
sub
sub
fwait
dec
mov
insl
out
push
inc
sub
in
adc
jb
pop
cmp
jns
inc
stos
rolb
lret
jge
insl
xorl
mov
lret
or
sbb
scas
outsb
fs
mov
or
mov
mov
push
add
cmpsl
pop
es
or
lods
js
repnz
dec
lods
push
push
pusha
lock
call
mov
aas
push
or
or
fcmovb
mov
sub
psrlw
xor
cmpsb
jns
mov
call
dec
cli
imul
add
inc
jns
adc
cmp
insb
pop
xchg
adc
xchg
scas
mov
or
mov
sbb
mov
mov
xchg
sbb
ret
cmp
not
gs
scas
mov
aad
mov
xor
pop
mov
adc
ljmp
scas
cmc
mov
test
sbb
lret
scas
arpl
add
jmp
mov
shlb
sub
push
data16
aam
jno
clc
cmc
sub
cmp
adc
adc
xchg
and
jns
testl
insb
or
leave
js
mov
xchg
repz
pop
sbb
outsb
cli
and
sub
dec
jle
jbe
xchg
pop
xchg
ja
pop
mov
int3
neg
loop
ja
adc
dec
jg
sbb
cltd
push
popa
sub
pop
dec
sti
inc
push
jns
sbb
loop
push
stos
sub
mov
adc
enter
repz
mov
call
sarb
mov
ret
sub
ffree
adc
ja
add
inc
aaa
ficompl
into
imul
movsl
aad
orl
xchg
xor
sbb
bound
xchg
ja
pop
mov
inc
mov
in
aam
add
int
sti
push
fsubs
icebp
adc
pop
addr16
adc
jle
push
push
mov
and
pop
add
sti
cmpsb
mov
push
xchg
in
mov
dec
fsubl
mov
lea
xchg
push
mov
insl
sub
lds
fsubl
xor
mov
mov
into
out
int3
mov
or
ret
dec
movsl
lret
jg
popf
mov
xor
pop
or
fwait
and
xchg
mov
and
adc
sbb
cltd
bound
cli
sarb
lods
mov
dec
add
mov
or
xor
inc
mov
pushf
pop
into
pop
enter
dec
pop
push
or
stos
pop
jnp
in
mov
jns
and
inc
popf
cs
or
sbb
push
xor
test
jge
and
jl
int3
mov
movsl
dec
outsl
push
repz
mov
sub
mov
jne
xor
cs
dec
adc
mov
inc
sub
xor
mov
xchg
adc
stos
fists
popa
sub
out
lgs
into
sbbb
lret
loop
repnz
loopne
push
and
jmp
into
divl
sysexit
mov
ss
mov
lods
pusha
in
mov
sarl
dec
ja
inc
fistl
jno
aas
mov
mov
outsl
test
test
mov
xor
adc
dec
fistps
testl
sub
ret
imul
pop
movsl
call
cmp
fsubl
imul
mov
out
cmp
cmc
push
sarb
fisubrl
xchg
imul
pusha
inc
xchg
adc
rclb
pop
push
in
stc
jp
mov
or
mov
xchg
outsl
dec
cltd
mov
repnz
sbb
push
out
lret
jb
cli
cwtl
sbb
push
mov
in
arpl
jmp
adc
stos
inc
cs
fistps
jge
mov
sbb
mov
imull
testl
sbb
mov
push
fsubrl
xchg
ficomps
xchg
insl
pop
jns
rcl
sarl
sahf
sti
daa
push
add
enter
mulb
outsb
xchg
cmpsl
stos
test
shll
sub
mov
mov
stos
repnz
aaa
out
fs
inc
imul
mov
jnp
notl
loope
sub
mov
fistpll
pushl
rcl
jmp
jmp
cld
lret
div
inc
mov
mov
mull
lods
add
xchg
fsubs
mov
cs
lods
adc
mov
nop
cmpsb
mov
std
les
adc
cmp
mov
mov
pop
gs
lret
or
push
lea
pop
mov
pop
mov
or
cmp
jae
xchg
sub
dec
ficoml
cwtl
add
outsb
ftst
leave
jbe
mov
pushf
fmull
push
adc
pop
xchg
mul
push
test
aam
jmp
adc
adc
in
pop
out
mov
push
aad
mov
repz
add
sbb
call
in
bound
fcomip
scas
and
fisubs
in
pop
bound
lahf
or
xchg
and
sbbl
jbe
add
xor
add
lret
adc
cltd
pop
push
xchg
js
xchg
jecxz
insl
idivl
inc
mov
cwtl
pop
mov
aam
nop
jae
sub
add
aas
cmp
fidivrl
lock
mov
and
xlat
push
mov
or
stos
mov
cmp
lret
add
outsl
sbb
repz
fsubrl
add
sahf
jnp
out
cmp
popf
movsl
jne
ds
sub
jae
xchg
mov
ja
pop
pop
dec
jmp
test
les
jae
fs
hlt
int3
sub
jae
dec
fcmovnu
addb
push
pop
and
sahf
pushf
popa
mov
aad
andl
hlt
int
pop
cmp
xlat
es
ds
dec
mov
hlt
int
sarb
xchg
ficoms
adcw
js
test
pop
int3
cmp
xchg
sub
rcr
xchg
mov
popf
mov
nopl
sbb
mov
jae
add
jb
fmull
out
insl
sub
jns
int3
addr16
lahf
sbb
fistpll
jp
insl
cmpsl
out
int
sbb
xor
jmp
lea
push
sub
xor
cmp
fwait
push
daa
lock
sbb
ja
jno
mov
mov
ljmp
xchg
test
jmp
ja
jae
je
or
mov
cld
push
inc
movsl
mov
lods
ret
gs
ljmp
cmp
in
push
idivb
mov
push
loop
data16
rcrl
adc
cmc
dec
popa
cmp
sahf
inc
sub
es
inc
jae
insb
in
xor
fwait
pop
cli
inc
and
pop
or
sti
icebp
lea
fildl
sub
notl
xlat
jnp
lret
mov
cmc
or
lret
lret
adc
ficoml
adc
mov
movhlps
xlat
fldl
cli
adc
shl
clc
sahf
mov
fcomps
movsl
dec
mov
mov
jne
repnz
int3
sahf
adc
notb
movsl
fistpll
xor
sbb
xchg
mov
sbb
test
bound
sub
mov
jbe
pop
jo
negl
sub
mov
iret
sar
mov
inc
ss
loope
sbb
sub
or
adc
xlat
pop
ret
scas
xor
xor
stc
pop
js
push
xchg
es
inc
gs
call
and
sbb
jns
mov
je
inc
in
pop
in
movsb
sub
jne
dec
lea
movsb
lods
shrb
push
or
lock
es
lods
sarb
movsl
lret
out
stos
out
jecxz
and
call
add
outsb
pop
add
in
cmp
call
jnp
stos
mov
icebp
mov
cmp
fidivl
mov
fstps
movsl
pop
pop
push
bound
out
insl
loop
jns
jne
sub
scas
sbb
push
and
xor
arpl
gs
repz
inc
movsl
shrl
out
lret
mov
aaa
sbb
cmp
adc
fmuls
imul
jnp
adc
faddl
out
into
bound
gs
hlt
sub
pop
push
sub
xchg
aas
mov
sarl
popa
mov
test
rol
pusha
insl
into
cmp
lds
xchg
lret
out
mov
ret
out
imul
push
add
cs
ds
fstp
jne
mov
xchg
mov
scas
call
popf
lahf
stos
cmc
in
mov
xor
in
inc
add
cmp
dec
hlt
adc
push
fldcw
pop
lock
popf
xor
and
mov
cmpb
mov
incb
adc
sub
xlat
fstpt
cmpsb
imul
push
mov
pop
add
jno
or
mov
adc
sbb
pop
or
mov
iret
leave
lods
popf
push
int
es
cli
inc
in
pop
xor
mov
clc
in
add
outsb
mov
sarl
in
ljmp
pop
mov
vmaxss
adc
cmp
jmp
cmp
mov
sub
cmpsb
xchg
push
mov
mov
push
jl
sahf
dec
xchg
xacquire
or
std
push
call
mov
pop
mov
les
out
cmp
test
cmp
clc
in
cli
out
add
sub
xor
sbb
sbb
ljmp
cmp
and
fimuls
add
dec
leave
pop
xor
xchg
cld
mov
nopl
scas
or
push
int
ret
daa
and
lds
popa
pusha
push
aad
xchg
adcb
xchg
add
sbb
adc
mov
mov
sbb
mov
fldl
int
jne
mov
icebp
repz
jne
or
repnz
xlat
pop
inc
movsl
sub
push
out
mov
jl
and
jmp
fsubl
mov
lcall
jge
inc
shrd
mov
out
pop
sub
xchg
mov
mov
pop
push
pop
fsubr
lcall
fwait
push
xlat
fwait
mov
jmp
xor
incl
mov
in
dec
imul
ljmp
pop
out
imul
or
sub
sub
shll
rcll
add
into
dec
mov
shl
xchg
mov
into
shll
pop
outsl
test
adc
inc
stc
and
into
sbb
scas
aas
test
addr16
cmp
fmull
jle
jmp
lock
comiss
pop
lret
push
dec
jnp
out
stc
adc
and
inc
rcl
int
rcrl
lock
ljmp
sub
push
mov
dec
inc
movsl
dec
out
sbb
out
mov
jno
sarb
mov
lods
ficomps
pop
sub
xlat
push
imul
lcall
xchg
add
pop
jge
xchg
xor
js
daa
xchg
dec
test
insl
mov
rcl
andl
cmpsl
cmp
dec
pop
sub
popa
lods
insl
cmp
add
xadd
fdiv
mov
test
xchg
jne
nop
or
dec
push
das
dec
xor
cs
cwtl
push
inc
enter
adc
pop
daa
cmc
sub
mov
xchg
xor
pop
call
push
inc
ljmp
clc
mov
xchg
jns
insb
or
xor
fwait
sbb
lcall
cs
decb
inc
mov
sub
sahf
test
fdivrl
faddl
fistps
testb
sub
mov
push
pop
adc
hlt
ds
mov
xchg
mov
les
sub
dec
out
push
mov
jp
jge
popf
lahf
out
popl
fstl
jae
and
into
sub
push
pop
jge
aaa
xor
lds
je
mov
dec
or
or
cmp
mov
push
push
sub
add
gs
mov
jae
inc
out
mov
adc
mov
jecxz
pop
clc
pop
xor
cmp
sbb
mov
loop
pop
les
arpl
pop
xor
call
jmp
cmp
mov
jne
stc
mov
push
jns
pop
ja
jns
adc
pop
dec
stos
dec
mov
sbb
lds
repz
aas
mov
cmp
into
mov
mov
jbe
std
notb
icebp
push
dec
xchg
push
lret
sbb
adc
imulb
icebp
scas
pop
jge
test
repz
cmc
pop
adc
shll
icebp
ss
icebp
icebp
ss
cmpsl
clc
sbb
repz
arpl
sarl
sbb
dec
cmp
dec
dec
fs
dec
mov
pushf
aaa
cmpsb
mov
cs
fimull
icebp
mov
loop
leave
push
int3
pop
jge
push
in
mov
flds
int3
push
ficomps
jb
mov
fadds
loop
lret
xor
aam
mov
ret
iret
fnstcw
je
into
mov
cwtl
push
push
jno
push
aas
outsl
movsl
push
fdivrs
pop
sub
xchg
add
jo
movsl
and
mov
and
adc
mov
lea
rorl
inc
mov
mov
cmpsb
mov
pop
push
jb
xchg
mov
xchg
cmp
fisubs
lods
jbe
lock
rolb
pop
jg
sub
idivb
and
cmp
hlt
loopne
pushf
xor
cmp
in
bound
xchg
mov
stos
movsb
inc
cmp
dec
mov
xor
lea
test
cmp
xlat
fcoms
push
in
sbb
test
mov
popa
ror
jecxz
lcall
scas
cld
push
add
push
mov
sbb
loope
lds
mov
and
in
mov
sbb
jg
push
call
loope
hlt
decl
dec
adc
cwtl
js
jns
out
mov
and
sub
test
les
insl
mov
movsl
cmpsl
jnp
aam
out
mov
dec
lcall
shrl
inc
xor
inc
or
push
loopne
scas
and
jne,pn
jb
mov
int
cwtl
xchg
or
sbb
sub
jge
clc
std
inc
jg
rorb
ss
inc
dec
sahf
data16
xchg
into
dec
cmp
mov
or
out
add
mov
pop
lret
xor
movsb
pop
push
pop
or
lods
cmp
mov
pop
imul
or
pop
or
imul
sbb
mov
jmp
daa
repnz
fnstsw
pop
out
jg
mov
sub
repz
ret
dec
pop
push
xlat
jge
mov
jmp
imul
fsin
imul
or
loop
loop
bound
pop
and
jge
xchg
lcall
pop
mov
xchg
aas
loope
push
sub
negl
pop
jl
ficompl
mov
loope
push
pop
cltd
add
push
lock
scas
pop
popf
jmp
dec
in
cmp
cmp
cmc
subb
jg
sbb
loop
rol
xchg
das
enter
aas
dec
dec
sub
stos
rcl
mov
mov
push
sub
fmul
inc
imul
and
inc
out
aam
push
fchs
ljmp
in
dec
add
std
scas
roll
cltd
cmp
push
mov
jb
sub
inc
adc
xchg
imulb
test
xchg
ljmp
and
pop
iret
cmpsl
mov
mov
fdivl
in
push
std
xor
cmp
inc
inc
push
pop
daa
add
pop
insl
loope
cltd
stos
fildll
jmp
sbb
mov
repnz
das
jp
add
jnp
stc
dec
and
xchg
lods
mov
mov
inc
mov
or
add
jne
push
cltd
mov
push
fnstcw
psrad
mov
mov
jmp
subl
cltd
sbb
mov
popa
and
pop
imul
add
xchg
push
xchg
pop
rcll
pop
sbb
xlat
sbb
ss
cmp
jae
pop
fs
jo,pt
jp
cltd
jae
fcom
jnp
or
and
push
cli
dec
cmpsl
ja
adc
ds
xor
stos
hlt
xor
cli
or
add
xchg
xor
cmc
repz
bndstx
outsb
sbb
fldl
repz
xchg
into
outsl
or
jns
xchg
cmc
lret
in
int
insb
mov
mov
mov
add
scas
mov
div
movb
mov
jns
lcall
out
repz
stos
in
jmpw
out
fwait
jae
sub
pusha
xchg
clc
xlat
push
lret
and
lret
scas
lcall
xchg
mov
xchg
pushf
loope
jg
sub
scas
mov
loopne
xor
xchg
xor
lahf
sbb
jmp
jg
xchg
movsl
hlt
rcrl
fsubrp
or
je
hlt
adc
enter
js
xor
push
and
sbb
sbb
shr
sub
inc
cmp
popa
cld
jns
push
jge
stos
nop
cmp
inc
int
jl
idivb
add
xchg
jnp
jecxz
lock
push
lahf
movsl
ret
mov
loopne
loop
adc
jo
push
pop
xor
and
mov
pop
outsl
or
lock
loopne
mov
cli
sbb
inc
std
jecxz
pop
pop
pop
or
js
add
fdiv
fildll
dec
adc
je
dec
jno
inc
sub
sarb
or
or
test
push
cmp
xor
or
pop
xchg
test
ret
adc
les
xor
rcl
dec
out
and
sbb
clc
js
sub
sub
push
sub
jp
hlt
adc
outsl
stc
aad
dec
pushf
fisubl
fisubl
fisubl
sti
sti
divb
and
push
repz
movsb
repz
xchg
test
jle
aam
je
imul
lods
and
nop
outsb
inc
cli
adc
inc
movsb
sbb
inc
ljmp
push
cmpl
dec
jns
mov
and
add
shlb
movsb
push
dec
pop
and
lret
andb
jmp
jl
push
movsb
cmc
dec
fistl
jmp
cltd
imull
mov
movsb
mov
pop
notl
mov
stos
push
mov
out
mov
pop
dec
xchg
jae
popa
dec
jle
ret
insb
lret
sub
clc
inc
shl
jl
pop
das
scas
xchg
scas
stos
xor
xlat
outsl
test
or
movsb
and
jae
push
sub
shll
lods
lds
jb
dec
xor
xor
jmp
push
scas
lods
xor
mov
scas
xchg
push
aam
std
dec
xchg
mov
stos
mov
xchg
test
stos
cmc
sbb
inc
stos
lea
mov
in
fimull
mov
pop
mov
dec
lahf
jnp
adcl
mov
jge
jb
xchg
jno
fidivrl
scas
test
scas
xchg
xlat
scas
cmpsb
xor
aad
mov
lods
and
stos
lods
scas
fidivrl
popf
push
mov
nop
jb
mov
loop
jmp
ss
mov
jecxz
aad
lret
push
mov
scas
push
push
push
leave
inc
repnz
in
lret
imul
inc
and
scas
cs
stc
jecxz
fiadds
add
mov
mov
and
ja
movsb
stos
cli
jne
xlat
pop
cmp
xchg
iret
lods
scas
push
inc
jo
cli
jne
jmp
adc
mov
iret
sub
dec
add
dec
movsb
mov
push
loopne
jmp
xor
insl
pop
mov
cmpsl
mov
xchg
aas
mov
or
loop
or
sub
mov
xchg
sub
mov
mov
cmp
dec
daa
out
push
sub
jmp
mov
pop
scas
scas
inc
sub
xchg
xlat
outsl
fdivs
add
or
sbb
js
movsb
jecxz
mov
sbb
pop
mov
sub
movsb
mov
lret
dec
scas
adc
icebp
repz
mov
sub
insb
adc
stos
sbb
sub
test
sub
outsb
test
aaa
daa
mov
pop
jb
inc
jne
out
xchg
mov
andb
adc
dec
jns
jmp
movsl
ss
xchg
fsub
lea
add
in
fmuls
into
add
inc
lret
pop
mov
loope
jp
jnp
xchg
xchg
shlb
push
popf
adc
int3
xchg
pop
xchg
sbb
ud1
cmp
addr16
scas
movsl
pushw
push
aam
es
xchg
pop
cmc
jo
lods
mov
mov
sahf
inc
cmc
push
mov
cmc
push
sbb
inc
not
mov
and
cmc
xchg
adc
mov
test
pop
scas
outsl
push
repz
stos
sub
push
test
sub
mov
gs
ljmp
sub
test
pop
cmpsl
test
loopne
scas
mov
inc
adc
adc
in
inc
repz
push
insl
inc
rcl
add
or
loop
dec
aad
and
xor
and
sbb
repnz
adc
stos
mov
push
imul
mov
xchg
jb
and
jge
aad
sbb
ret
push
add
mov
mov
add
pushf
pop
xchg
in
pop
push
rolb
add
lods
insl
add
pop
pop
pop
rcl
nop
addl
and
inc
jge
mov
aas
mov
cltd
mov
outsb
push
jge
mov
inc
pop
rol
ret
or
dec
pop
mov
les
and
iret
setle
mov
xchg
sub
mov
inc
jecxz
pop
push
filds
dec
sub
pop
test
adc
push
sbb
ss
adc
or
push
jns
mov
pop
xchg
mov
test
rcrb
sub
jmp
xor
nop
repz
sub
adc
out
int
sub
push
or
push
mov
xorb
into
jae
push
adc
pushf
cld
push
fs
cmc
imul
or
rcrb
stos
movsb
stos
test
nop
enter
push
dec
fmull
jno
mov
inc
movsl
pop
pop
inc
ja
add
push
into
test
ljmp
pushf
sub
mov
push
or
adc
jl
mov
test
lahf
cs
mov
mov
ja
in
mov
std
pop
adc
loopne
xchg
xchg
or
jnp
cmp
out
in
sub
ja
flds
or
and
fwait
sub
clc
jge
or
test
loop
cwtl
je
push
adc
pop
xchg
sub
sub
jle
mov
lahf
cld
pop
sbb
addr16
push
pop
call
std
cmp
sti
push
push
add
jp
enter
mov
fwait
mov
test
clc
or
insl
or
mov
popa
inc
inc
sbb
xlat
in
mov
or
and
inc
mov
sub
out
inc
out
roll
dec
push
xchg
loopne
cmc
push
xor
xorb
loop
jecxz
lahf
fidivs
xchg
incl
sarl
fsubrs
movsb
repnz
les
or
fwait
nop
xor
and
mov
xchg
push
outsl
enter
andl
or
shlb
in
dec
sti
xchg
jle
aam
je
jmp
shll
pop
rorl
and
jp
adc
push
and
mov
adc
dec
pop
je
xchg
xor
or
popa
cmpsb
jo
jo
adc
adc
test
mov
pop
pop
dec
dec
inc
add
test
enter
push
push
out
xchg
pop
out
dec
cmp
adc
pop
mov
fcoml
sub
insb
icebp
clc
popf
jmp
out
xlat
scas
pop
sti
or
mov
mov
sarl
sub
add
push
xchg
jmp
jne
push
pop
mov
mov
scas
test
mov
ret
sub
mov
mov
xchg
xlat
repnz
jbe
adc
or
inc
push
dec
cld
dec
inc
push
push
cmp
mov
lods
andb
orl
mov
dec
es
aas
stos
je
push
imul
sub
pop
cld
pop
idivl
jg
scas
lods
int
inc
pop
or
shlb
stc
stc
mov
xchg
sub
clc
mov
pop
aas
repnz
lahf
out
pop
sti
mov
pop
pop
jle
jge
jno
pop
es
dec
adc
mov
data16
pop
jle
xor
push
or
pop
add
fcom
jcxz
mov
pop
lea
ud2
push
mov
mov
popa
test
div
lds
pop
divb
push
in
iret
push
or
cmp
sti
int
xlat
bound
jp
negb
ds
jnp
sbbb
dec
adc
add
in
fwait
xlat
jno
cmc
int3
stos
into
or
fwait
ret
rcr
stos
jae
sbb
sti
xchg
cmp
fadds
out
jecxz
daa
sbb
icebp
aas
dec
cmp
movsb
arpl
sarl
dec
sahf
jbe
mov
xchg
jg
lret
xlat
outsl
push
repz
jnp
fcomip
inc
mov
aas
sbb
insl
dec
insb
mov
mov
std
fdivrl
sbb
inc
repnz
ljmp
cmpl
inc
clc
pop
js
lock
xlat
mov
mov
aaa
ret
imul
cld
je
push
cli
jg
lock
lds
or
dec
sti
aad
pop
sbb
push
int3
sti
push
sub
push
fisubl
fisubl
fisubl
fisubl
fisubl
fisubl
fisubl
push
insb
adc
xor
jg
jnp
mov
mov
adc
pop
xor
adc
popa
push
test
mov
loop
mov
les
xchg
pop
filds
push
inc
inc
lds
dec
xchg
jl
cmp
stc
das
neg
imul
out
sti
fidivs
adc
sti
sub
ljmp
movsb
movsl
mov
loope
jp
xor
xorl
inc
iret
mov
mov
cmp
je
nop
sbb
and
cwtl
out
ljmp
add
push
xchg
push
ds
push
outsb
and
sub
xchg
xchg
mov
clc
sub
shll
nop
shll
cmp
adc
in
mov
sbb
dec
ljmp
call
lahf
xchg
pop
cmpsl
dec
lock
sbb
xchg
movsb
cmp
sbbb
mov
das
cmpsb
lds
or
stc
mov
add
jg
mov
pop
lahf
mov
inc
ljmp
out
ds
pop
fisubrl
push
jb
sub
jmp
rolb
pop
cld
insb
fistl
stc
xor
cs
enter
inc
outsb
sbbb
jb
in
enter
and
xchg
add
jnp
movl
sbb
dec
nop
ret
and
inc
push
inc
jbe
mov
mov
insb
enter
nop
xor
inc
adc
orb
outsl
xor
popf
xorb
xchg
push
pop
push
mov
das
mov
xchg
in
sub
idiv
sti
add
adc
inc
daa
imul
xlat
or
scas
ret
jmp
sbbl
daa
popa
orb
nop
add
jecxz
sbb
cmp
xchg
add
std
and
fidivl
mov
nop
std
movsl
inc
jne
push
xor
cmpsb
shll
inc
shrl
dec
mov
shll
inc
shrl
dec
mov
fwait
fs
sbb
movsl
mov
in
mov
push
fs
cmp
pop
xchg
mov
aaa
in
iret
decb
cmp
test
xchg
mov
xor
movsl
ljmp
ja
mov
int3
aas
iret
jo
or
mov
adc
mov
xchg
popa
push
jo
or
ss
rcrb
enter
xchg
mov
ds
cwtl
out
pusha
addr16
mov
push
cmp
sbbl
sbb
gs
sarb
jnp
push
fadds
adc
pop
pop
push
fldcw
iret
repnz
int3
or
aaa
add
add
aaa
cmpsb
sbb
shlb
dec
sub
mov
pusha
and
xor
leave
jbe
and
fidivs
add
xchg
sti
cmp
loope
loop
subb
sbb
fstps
pop
and
xor
cmp
cmc
int
lret
lea
adc
cli
add
scas
fbld
inc
push
mov
lar
in
imul
cmpl
pop
lcall
pop
pop
mov
mov
xlat
jb
mov
adcb
jnp
mov
cli
das
xchg
mov
add
mov
imul
cmpsl
mov
inc
and
je
popa
insl
test
jo
xchg
aaa
aam
popa
ljmp
cmc
or
xchg
jmp
sti
movaps
scas
cld
jecxz
cld
mov
add
jle
in
decl
jmp
popa
je
leave
add
and
jb
jg
add
popf
xor
lcall
mov
mov
imul
push
adc
and
adc
xchg
notl
fildll
in
and
repnz
pop
xchg
shl
icebp
call
clc
mov
jo
and
pop
add
adc
mov
leave
jne
add
les
inc
pop
bnd
mov
jg
pop
std
lcall
fxsave
fbld
sti
inc
jle
inc
xor
xlat
icebp
fbld
sar
pop
xchg
push
rcrb
cmp
dec
xchg
clc
icebp
xchg
ljmp
frstor
jae
lods
cmp
jmp
nop
flds
dec
mov
inc
out
add
sbb
in
xor
fidivrs
lea
sar
lods
les
dec
mov
shrl
inc
dec
adc
enter
into
add
cli
and
fwait
cs
mov
push
and
xlat
pop
dec
insl
mov
dec
int
loop
jl
daa
js
adc
adc
mov
xor
je
mov
jbe
push
and
jnp
xchg
sub
jae
aam
inc
add
dec
cmpsl
inc
dec
cmp
cli
rorl
sbb
popa
les
push
mov
mov
mov
pop
loope
or
pop
mov
sbb
call
neg
jo
fidivrl
xchg
lods
and
cltd
les
push
test
add
rcrl
movsb
or
or
jg
pusha
icebp
adc
or
je
lahf
mov
sub
pop
mov
push
or
jnp
sub
mov
sub
hlt
insl
mov
notl
cmpb
jle
sub
daa
pop
arpl
ret
jb
push
int3
add
dec
jmp
xchg
push
cs
mov
repz
push
and
js
add
sub
pop
dec
mov
popa
arpl
test
mov
mov
nop
das
push
cmp
adc
mov
pop
test
test
das
push
add
pushf
dec
daa
insb
out
mov
pop
je
xor
addl
pop
push
loop
lds
call
mov
or
push
mov
dec
mov
mov
mov
adc
sbb
rclb
pop
pop
inc
dec
xlat
mov
adc
frstor
sub
xchg
popa
mov
sti
sbb
sbb
push
lahf
jp
xor
fnstcw
pop
pop
rcr
sub
add
lcall
inc
imul
sub
sub
andb
ljmp
add
pushf
mov
xor
and
outsb
pop
mov
or
or
je
jne
mov
cltd
lds
ret
add
jbe
inc
lret
xchg
mov
mov
mov
repz
test
leave
sub
ljmp
lret
pop
jp
test
push
and
fimuls
adc
pop
stos
adc
adc
mov
mov
mov
inc
cmpsl
xor
int3
lock
mov
clc
jle
push
fcoms
push
stos
jecxz
hlt
adc
into
cmpsl
fisubrs
shl
xor
loope
push
xorb
in
xor
dec
ss
inc
push
ss
hlt
mov
arpl
sbb
loope
movsb
push
cwtl
mov
jae
mov
std
or
pusha
jge
xorb
repz
and
jecxz
dec
rclb
and
jg
cmpsl
aam
call
add
or
popl
add
mov
or
xchg
push
dec
adc
mov
les
xor
cmpsl
mov
or
vandnps
xchg
aam
pop
dec
cld
rclb
notb
ljmp
and
rol
mov
cbtw
mov
inc
inc
and
adc
mov
outsl
push
xchg
dec
mov
sbb
adc
inc
pop
cs
sbb
int
mov
int3
cmp
dec
cmp
add
insb
mov
int3
push
loope
sub
mov
lea
test
mov
test
cmp
dec
pusha
fstpl
adc
mov
push
sahf
loopne
xlat
lds
test
bound
xlat
adc
jmp
and
inc
inc
pop
mov
and
cmp
stos
and
and
sbb
mov
inc
cmpsb
sub
popf
daa
mov
jo
fimuls
jb
xor
xchg
xlat
mov
push
adc
mov
sarl
lea
cs
rol
mov
and
into
inc
or
int
sbb
imul
aas
lahf
es
cmp
outsl
mov
out
in
fsubr
in
jb
fnstsw
daa
fisttpll
lods
pop
dec
xor
mov
or
cmp
iret
fwait
dec
scas
xor
loopne
repz
shrb
iret
mov
popf
test
pop
imul
jne
sub
mov
outsl
xchg
clc
loop
jg
scas
mov
cmpsb
mov
mov
scas
mov
fwait
sbb
mov
int
ret
mov
cmc
sbb
jle
sbb
out
xchg
mov
lods
xchg
mov
add
mov
mov
fimuls
call
pop
cltd
out
mov
mov
dec
fstps
es
inc
outsl
fists
dec
negb
cmp
mov
lods
cmc
cmc
push
mov
mov
in
int
jge
shlb
jecxz
mov
rorb
cwtl
cmp
test
cmp
icebp
dec
xor
test
popa
je
jo
nop
xlat
xchg
xchg
jle
add
inc
inc
mov
out
adc
and
jl
sbb
out
mov
je
pop
jb
clc
bound
adc
ss
fcoml
mov
sub
cmp
nop
fwait
adc
orb
push
push
nop
sbbl
add
sbb
push
pop
lods
mov
pop
push
mov
dec
in
aaa
outsl
into
jns
and
and
and
cmp
xor
inc
lcall
cmpsb
out
sub
sbb
cmc
and
pop
out
pop
fbstp
out
mov
outsl
cld
xor
daa
adc
dec
add
or
or
dec
aam
fistpll
aam
and
leave
inc
adc
sarb
xor
les
outsb
add
push
jmp
lahf
loopne
nop
outsl
and
mov
mov
inc
pop
xorl
and
cmp
shrl
repz
xor
bound
push
jmp
sub
daa
icebp
mov
loopne
div
adc
jecxz
or
lods
xchg
ret
dec
bound
bnd
or
rol
enter
pop
js
jbe
js
mov
addb
push
int3
das
scas
pop
ret
cmpsl
sahf
out
push
bound
jl
mov
xlat
pmaxsw
outsl
xchg
jnp
fisttps
je
cvtps2pi
push
jecxz
loop
sub
mov
add
pop
in
or
adc
jae
mov
lret
cmp
pushf
aam
pop
mov
mov
xchg
xor
adc
add
enter
sub
xor
and
add
jns
xor
sub
mov
or
adc
lret
jb
leave
ss
or
push
xor
mov
lods
push
add
in
adc
xchg
push
or
stc
hlt
sbb
dec
adc
mov
lcall
ss
scas
popf
mov
popl
bswap
xchg
cmpl
fstps
cmpsl
out
mov
mov
icebp
push
xchg
xlat
testl
jecxz
jb
rcr
cmp
insl
loopne
push
mov
xchg
mov
test
ds
add
jb
std
lea
cmp
je
hlt
jb
mov
lds
movsb
adc
push
inc
mov
jecxz
lods
mov
mov
cmpsl
inc
arpl
inc
adc
cmpsl
pop
stos
and
mov
inc
fsubl
aam
bound
or
scas
dec
xchg
lahf
mov
adc
add
and
ret
jnp
in
add
leave
adcl
daa
imul
or
mov
dec
jmp
cmp
inc
xor
add
push
dec
inc
mov
mov
loop
push
or
aas
outsl
sub
sbb
out
test
fadd
iret
dec
jle
push
repnz
mov
mov
sbb
mov
mov
das
inc
mov
or
rcll
jecxz
hlt
movsb
int3
loop
shlb
fs
push
or
pop
pushf
push
mov
dec
push
sub
icebp
andb
mov
mov
aam
add
ret
add
mov
adc
movsb
sbb
fyl2xp1
adc
push
cwtl
into
mov
jl
repnz
shrb
data16
push
jmp
mov
or
aaa
add
xchg
sub
xchg
clc
gs
cmpps
dec
cmp
push
enter
inc
cmpl
pop
aam
sub
out
stos
cmpsl
out
rcrl
sbb
popl
sub
and
or
into
and
daa
mov
setno
mov
dec
lret
dec
cmpsb
sbb
pop
ret
add
movsb
js
inc
cmp
add
andb
adc
arpl
pop
push
mov
ljmp
mov
enter
and
rol
lods
sbbb
mov
lock
jne
push
pop
jb
mov
loope
aas
or
addr16
inc
inc
insl
mov
sub
xlat
mov
adc
mov
das
movsl
adc
nop
lods
push
xor
mov
sbb
jbe
jl
mov
pop
add
adc
cmp
sbb
sub
das
daa
in
xor
adcb
adc
mov
jp
sahf
cmp
test
je
inc
inc
jb
dec
repz
cli
orl
xlat
and
and
jmp
mov
sbb
add
rcr
and
mov
bound
mov
js
cmpsb
or
add
mov
or
push
sub
test
add
popf
add
das
adc
push
xchg
sub
int3
pop
mov
les
push
add
rcrl
jmp
mov
add
adc
sbb
out
mov
ficoms
gs
xchg
sub
cld
scas
negl
jmp
daa
fiaddl
and
push
cwtl
std
data16
xlat
mov
in
adc
mov
mov
dec
jno
pushl
sbb
gs
mov
sub
dec
and
cmpsb
ret
movsb
xor
fwait
or
pop
adc
xorb
inc
inc
and
jo
sub
inc
ret
add
out
sbb
add
or
rcll
and
mov
jl
adc
ret
orps
imul
loop
sbb
xchg
mov
dec
rcll
mov
add
fwait
popa
loope
jbe
mov
cmc
cmp
je
sbb
aam
jne
insl
inc
add
push
rcr
inc
push
into
push
jge
push
or
loopne
jb
push
fldl
add
popa
movsl
jl
outsl
les
filds
and
pushf
mov
lea
lcall
jmp
test
xor
pop
dec
into
xchg
cli
add
dec
ret
push
fldenv
or
cld
clc
mov
fists
or
adc
icebp
xchg
je
sub
xchg
push
leave
mov
pop
sub
cmp
sub
es
xchg
mov
or
and
dec
mov
daa
clc
jmp
int3
jmp
mov
adc
sbb
mov
adc
xor
jbe
xchg
xchg
fisttps
pusha
xchg
loop
test
mov
ljmp
xchg
pop
sti
pop
mov
rolb
push
or
or
fisttpll
push
mov
mov
sub
push
in
inc
xor
mov
mov
xor
push
fisttps
aaa
mov
or
or
dec
dec
mov
mov
ror
or
xor
cmp
and
sbb
lods
nop
ret
mov
cli
loop
rolb
lahf
lahf
mov
pop
pop
sub
jne
xor
push
add
dec
aad
or
fwait
jo
push
js
mov
shlb
add
rcll
add
mov
subb
sbb
dec
and
push
xchg
outsb
push
mov
fstpl
cs
cs
sub
cmc
dec
and
push
push
cld
jl
imul
iret
aaa
xchg
cli
sub
mov
dec
mov
inc
aad
cmp
loopne
pusha
pop
std
add
mov
mov
xchg
inc
data16
pop
xorl
pushl
push
fucom
mov
and
sub
pusha
jecxz
hlt
clc
dec
je
push
test
xor
cli
out
aas
or
icebp
mov
fiaddl
dec
mov
fistps
xor
push
sbb
pusha
daa
push
mov
mov
add
shrl
fists
inc
popa
inc
xchg
shrl
mov
dec
je
xor
mov
mov
test
xchg
push
push
and
insb
repnz
pop
leavew
dec
sub
push
mov
cmp
sarl
jno
test
loopne
int3
cli
or
push
jecxz
fstpt
mov
push
push
push
out
lock
test
shl
leave
aas
loopne
andl
mov
mov
fstps
fldl
in
stos
lahf
adc
nop
pop
arpl
pusha
es
cli
inc
clc
ret
push
mov
inc
xchg
mov
sub
orl
add
cmp
cs
adc
inc
mov
jl
test
push
and
push
dec
inc
mov
nop
bound
push
push
or
mov
add
js
inc
in
loop
jp
adc
test
loope
inc
xor
adc
sti
inc
and
xchg
movsb
movsl
fiaddl
scas
negb
ljmp
das
in
test
hlt
inc
mov
dec
ds
out
adc
pop
add
cmp
das
shll
ss
mov
ror
addb
int
testl
aaa
and
rclb
push
mov
xchg
lds
cmp
cli
cmp
out
adc
insl
pop
fs
xchg
adc
add
pusha
mov
sbb
push
and
adc
dec
insb
dec
mov
sub
lret
mov
lock
sbb
movsl
jmp
sarb
xlat
sbb
xchg
es
lahf
addl
or
jp
les
lcall
mov
xchg
add
and
sarb
adc
addb
cltd
ljmp
daa
add
lock
push
je
dec
mov
jno
or
mov
or
or
popf
out
sbbb
dec
xchg
jp
cmp
stos
dec
dec
aaa
stos
mov
dec
call
sub
test
jne
xorl
cmp
andb
out
ret
adc
popl
out
push
dec
lds
lret
mov
xchg
clc
loopne
aad
pop
das
nop
jecxz
cmp
pop
inc
or
mov
sbb
fldl
daa
daa
mov
mov
sbb
add
adc
loope
inc
xchg
adc
mov
je
iret
push
sbb
sbb
test
cli
sbb
xchg
shrl
mov
bound
enter
and
int3
and
pop
and
push
movsl
leave
jnp
pop
movsb
rcrb
addr16
mov
outsb
int3
push
aaa
outsb
clc
orb
push
push
je
inc
andb
cmpsl
dec
movsb
mov
jl
imul
cmp
shl
scas
test
adc
addl
lret
mov
jbe
movsb
loopne
mov
inc
popa
hlt
inc
sub
jns
jb
sbb
mov
xchg
xchg
roll
pop
mov
icebp
lea
orb
adc
jecxz
mov
adc
cmp
imul
jno
popa
sbbb
adc
adc
sub
xchg
mov
rcrb
imul
fidivs
sarb
es
out
lods
pop
add
and
out
or
cmpsl
add
cmp
es
xor
incb
dec
xor
sarb
scas
je
push
add
test
insb
rcr
btr
add
mov
mov
adc
push
stos
adc
push
adc
mov
sbb
jb
sub
jl
cwtl
mulb
jo
cmc
xchg
es
mov
or
mov
cmp
inc
out
insl
adc
das
mov
and
test
loop
pusha
mov
mov
movsl
cmp
cmovbe
mov
fcomps
pop
push
in
lea
leave
or
push
pop
pop
cli
ljmp
bound
test
mov
jno
push
mov
fisttpll
adc
clc
mov
mov
add
adc
or
add
mov
fdivl
lds
add
loopne
inc
push
loop
lods
mov
loop
mov
rcrl
ret
aas
mov
xchg
xchg
out
mov
testl
jmp
jb
mov
sbb
pop
pop
jmp
xchg
loopne
movsb
push
popa
mov
mov
sbb
xchg
mov
pop
sbbb
jns
inc
mov
push
adc
sub
adc
fisubrs
add
ja
icebp
xchg
pop
mov
dec
cmc
xlat
dec
xor
js
pop
and
cmp
sbb
cmc
xchg
xor
lods
xchg
rol
ficompl
addr16
ffreep
insl
fistl
dec
aas
lss
jmp
push
in
dec
je
sar
adc
stos
pop
test
xor
nop
in
aas
push
and
add
pop
ljmp
mov
enter
lret
mov
cmpsl
jns
int
ljmp
push
add
fsts
aas
mov
repnz
mov
outsb
out
shlb
jnp
fistpl
xor
sub
jp
adc
mov
cmp
add
cmp
sub
loop
aam
mov
bound
in
add
jae
test
push
and
mov
cli
xor
mov
icebp
adc
sbb
stc
aaa
test
das
xor
and
in
add
xlat
push
inc
orl
and
inc
mov
je
cmp
dec
or
les
xor
mov
push
xchg
dec
cli
or
ds
push
mov
pop
sub
jge
fimull
xchg
in
ja
in
cmc
inc
mov
mov
or
lds
test
hlt
les
add
and
dec
sti
xor
jae
rdmsr
pushf
jae
lock
sbb
rcrl
jns
lret
fistps
sbb
rcrl
pop
jmp
mov
push
jo
lock
icebp
mov
rorb
aas
out
icebp
repnz
enter
cwtl
and
test
inc
xchg
add
and
pop
pop
push
sbb
or
sub
punpckhwd
xchg
lds
dec
cld
or
or
mov
pop
xchg
lods
outsb
push
shlb
inc
inc
or
das
push
je
cmp
ljmp
data16
and
sub
das
pop
dec
jne
dec
addb
in
test
testl
adc
push
push
cltd
fsubr
dec
inc
lahf
aam
mov
outsl
add
std
je
mov
imul
movsb
movsb
dec
out
or
adc
inc
mov
scas
notl
jp
fsts
push
popf
movsb
and
stos
adc
leave
insl
adc
mov
aas
add
sbb
loopne
xchg
sub
fisubs
dec
enter
sbb
cmp
ds
sub
mov
in
inc
rorb
lods
sarb
repnz
mov
inc
pop
rorb
sub
and
xor
iret
ret
mov
fwait
and
mov
mov
rclb
xchg
les
push
add
fadds
movsb
add
cmp
mov
flds
jg
fidivrl
and
adc
mov
arpl
fs
inc
pop
mov
aam
lcall
mov
inc
stos
cmp
repnz
shl
jmp
lahf
inc
imul
jns
add
and
scas
push
mov
stos
sbbb
pop
push
adc
jmp
jmp
dec
rcrl
push
dec
shld
negb
adc
or
pushf
push
adc
mov
jns
rcrb
or
ss
es
movsb
jp
add
and
adc
mov
cmp
scas
int3
adc
push
mov
ljmp
pop
add
push
ss
cld
add
add
andl
scas
xchg
or
cmp
pop
xor
mov
pop
scas
xchg
mov
dec
dec
ljmp
jmp
inc
jle
out
dec
je
popa
add
in
push
fisttpl
push
bound
test
rcrl
cmp
enter
push
insl
sbb
insb
sub
adc
adc
push
sti
out
scas
bound
sbb
dec
sbb
fldl
xor
or
iret
pop
rcrl
jecxz
adc
das
sti
mov
ret
xchg
jae
adc
adc
stc
loop
jne
rclb
pop
cmp
mov
push
cmp
icebp
inc
xlat
push
inc
mov
das
jbe
out
jo
jecxz
jl
fisubrs
aam
pushf
lahf
scas
test
icebp
adc
out
jg
lahf
out
pusha
mov
add
inc
mov
jmp
loopne
mov
lcall
add
lcall
repz
icebp
cmp
sarl
int3
add
or
inc
mov
jl
ljmp
call
add
in
pop
or
add
add
cmp
call
ja
repz
out
call
mov
sbb
sbb
push
lea
std
aas
into
lahf
les
rorl
daa
push
call
scas
and
cmova
aas
stc
pop
lea
sbb
push
push
pop
rorl
push
xadd
mov
mov
lret
jl
cli
and
cmp
addr16
loope
dec
ret
outsb
mov
dec
mov
addb
imul
and
icebp
sbb
cmp
sbb
imul
jge
pop
dec
push
inc
pop
push
dec
stos
inc
bswap
cmp
testb
aad
fwait
mov
ja
inc
es
jnp
dec
movsb
jle
add
mov
pop
ljmp
push
call
mov
and
or
mov
push
sarb
mov
pop
pop
sahf
sbb
dec
cmp
in
sbbb
xor
rcrb
in
mov
jp
rcll
jg
clc
notb
into
mov
cmp
and
fiaddl
data16
jmp
movb
loop
and
adc
das
in
or
jmp
fmuls
das
or
ja
cmp
sbb
push
mov
push
lock
aas
rclb
sbb
enter
pop
lea
mov
out
dec
mov
fs
daa
rclb
sub
jl
scas
adc
stos
or
in
js
insl
sbb
add
fmuls
xor
stos
sub
cli
pop
sbbb
inc
or
lods
ret
push
mov
xchg
mov
imul
or
jns
mov
xchg
data16
addr16
in
addr16
push
clc
jne
insb
not
shll
push
jno
fimuls
or
loop
shrl
scas
push
call
dec
cmpsb
sub
xlat
test
jp
xor
dec
or
sti
pop
seta
test
mov
fmul
fdiv
cwtl
pop
fsubr
call
rol
add
sub
or
xor
ret
adc
fcmovnu
mov
stos
push
cmp
xchg
jb
and
or
push
xor
test
mov
lds
ret
ljmp
jns
pop
mov
pop
pop
and
icebp
mov
cmpsb
dec
dec
add
fscale
outsb
jle
pop
icebp
dec
sbb
sbb
pop
add
dec
push
push
pop
shr
cmp
jbe
dec
sub
cmp
mov
nop
ja
sub
pusha
subb
ss
push
loopne
loop
cli
aaa
pop
mov
sbb
pop
mov
jl
int3
push
push
push
jo
inc
loop
and
stos
adc
mov
pop
das
notb
or
adc
cmc
pop
repz
sahf
pop
fists
xchg
orb
sub
enter
aam
repnz
sub
mov
jge
xchg
sub
fs
jmp
fidivs
add
aam
mov
or
mov
inc
xchg
or
pop
mov
adc
xor
loopne
incl
jp
inc
stc
insb
and
mov
push
sub
icebp
jmp
inc
mov
sti
dec
jb
adc
jge
jb
test
add
xchg
sahf
sub
push
js
js
jns
in
mov
jo
les
inc
sbb
mov
mov
push
add
rolb
cmp
outsb
pop
cmp
cmpsl
mov
xor
dec
aaa
push
jno
mov
mov
adc
mov
js
js
fs
dec
lret
xchg
mov
call
inc
lods
fmuls
adc
leave
loope
call
xchg
adc
jg
daa
inc
call
cs
jmp
test
out
pop
jo
jnp
push
nop
fwait
lds
jecxz
pop
mov
je
fstpl
aad
cli
dec
sbb
mov
jmp
lahf
daa
testl
cmc
das
pop
je
roll
fistl
aad
adc
add
push
add
xchg
xchg
negl
xlat
daa
gs
push
cmp
sbb
add
and
add
aas
je,pt
mov
jo
arpl
pusha
ret
stos
popf
adc
icebp
test
add
pop
daa
int
jle
inc
mov
in
decb
in
inc
cmp
mov
pop
in
mov
xchg
mov
loop
nop
push
pop
jo
cs
out
adc
push
cmp
push
push
lcall
enter
ficoms
aam
dec
movsb
mov
inc
cli
mov
inc
jno
mov
pushf
aad
hlt
sub
pop
jg
xor
stc
test
clc
or
sbb
fisubrl
fildl
xlat
pop
jne
push
in
movsl
cs
xor
leavew
call
cmp
arpl
aam
fbld
inc
xchg
mov
das
mov
mov
jnp
fnsave
and
mov
fscale
mov
xchg
adc
lods
sbb
test
sub
lods
dec
adc
repz
js
fisttpll
fscale
sbb
ret
mov
fisubrs
loope
test
push
jb
inc
repnz
sbb
xchg
fsubs
insl
push
jle
jnp
imul
cltd
adc
xor
or
and
pusha
imul
jg
jl
jae
ret
xorb
xchg
mov
and
dec
lods
adc
pop
lds
jb
xor
pop
cltd
lret
pop
lcall
mov
inc
adc
sbb
popf
lods
mov
dec
mov
lahf
and
dec
fisubl
jne
jl
mov
cld
mov
ss
stc
pop
stos
jp
xor
push
mov
ret
mov
dec
imul
or
js
fidivrs
test
jmp
xchg
stos
out
jg
in
pop
imul
repz
into
or
ror
jmp
fxch
cmp
push
jl
imul
mov
aas
scas
dec
pop
mov
jbe
mov
idiv
mov
jns
jl
out
inc
mov
ljmp
push
repz
sbb
ds
mov
xor
out
cmpsb
int3
ror
cmp
ja
out
push
insl
push
dec
jge
ftst
ficoms
cmpsb
jnp
addr16
clc
mov
cmpsb
lds
xor
cli
xchg
mov
pop
out
push
scas
cs
push
xor
cs
ds
xor
outsb
inc
xchg
lds
mov
push
out
inc
push
lahf
push
scas
mov
xlat
push
sti
mov
movsl
or
pop
call
std
and
mov
std
mov
mov
adc
push
add
xchg
xchg
jnp
jb
out
std
in
xchg
or
mov
out
push
js
out
jle
in
in
add
jb
dec
fnsave
filds
loop
arpl
arpl
inc
and
shl
arpl
mov
pushf
jg
sbb
fwait
gs
in
mov
pop
stc
xor
fsincos
sub
inc
out
lods
rcrb
sbb
xor
mov
stos
pop
outsl
mov
imul
data16
adc
fstps
mov
insb
sbb
lcall
gs
push
xchg
jg
fwait
repz
pushf
loope
lds
sub
sti
stc
or
scas
shrb
xchg
mov
aam
sti
int3
icebp
mov
push
into
jg
rclb
jno
stos
lret
scas
push
jb
push
data16
dec
out
das
aas
lahf
rcl
cmp
jmp
pop
push
xlat
lods
notl
nop
mov
fucomp
in
xor
mov
mov
ficoms
xchg
insb
lods
cmp
xor
test
psubq
dec
mov
jge
jbe
jmp
push
mov
pop
jl
insb
in
lret
push
xor
pop
cltd
adc
iret
push
popf
arpl
or
mov
in
pushf
cmp
sub
out
in
lods
mov
aad
mov
push
stos
sbb
push
fdivp
lcall
pop
out
test
scas
jp
mov
repz
cltd
jno
inc
addr16
out
fidivrl
pop
pop
std
jle
inc
pop
jg
or
mov
dec
xchg
sub
sbb
fsub
sub
cmp
jbe
jecxz
fsubrl
jl
jge
add
mov
imull
push
out
int3
pop
xlat
xchg
push
mov
or
mov
addr16
mov
ds
mov
pop
ret
cwtl
cmp
mov
adc
xor
pop
mov
addr16
xchg
inc
jb
jmp
movsl
pop
arpl
out
pop
xchg
fimuls
int3
jl
out
mov
sbb
aaa
jmp
xchg
jae
cmp
out
mov
data16
mov
sub
lcall
mov
jmp
ret
ja
sahf
addr16
and
pop
test
iret
xchg
pop
lret
xor
das
out
xchg
push
int3
imul
cmc
addr16
leave
pop
add
fmul
push
xor
sub
mov
aad
mov
daa
push
or
xchg
int3
cld
fwait
out
or
lcall
mov
out
push
dec
jle
dec
movsb
mov
sti
sub
adc
mov
fcmovnu
push
out
xlat
sub
f2xm1
cmp
int
mov
je
or
cmp
call
or
xor
mov
je
test
out
inc
in
sub
ja
out
adc
pop
sbb
inc
xlat
jae
fiaddl
mov
push
pop
lcall
outsb
cli
iret
hlt
xchg
push
in
mov
cmpsl
lahf
fnsave
mov
xchg
out
xor
push
out
out
cmp
cmp
andl
push
xor
into
enter
lahf
xchg
pop
incl
mov
into
mov
int
cmp
adc
aas
pop
in
pop
leave
addr16
xor
movsl
fwait
cld
cld
pop
icebp
daa
dec
lods
push
movsb
add
dec
sti
decb
test
jmp
addr16
mov
data16
repz
out
jg
xor
fidivrl
aam
mov
push
in
aaa
mov
rcl
push
sti
cmp
iret
fsts
das
mov
std
stos
iret
mov
outsb
sti
xchg
in
mov
aam
stos
adc
or
sti
fldenv
frstor
pop
mov
les
scas
loopne
flds
or
mov
inc
scas
jnp
shrb
addr16
pop
cld
hlt
ret
mov
push
jae
pop
ljmp
sub
loop
int3
push
xchg
js
enter
adc
cwtl
mov
add
movsl
jge
aad
faddl
loop
push
jnp
fmull
pop
stos
imull
out
out
cmp
xchg
mov
xchg
sbb
insl
fcompl
rcrl
xor
sti
fmulp
cmc
loope
ljmp
fcoms
mov
out
dec
dec
gs
out
std
out
mov
hlt
aad
imul
stc
popf
sub
sahf
mov
in
mov
jecxz
xlat
dec
les
imul
jp
jl
sub
sarb
jbe
ss
jle
pop
adc
clc
inc
jns
in
mov
or
addr16
cltd
mov
mov
mov
xchg
test
jecxz
pop
icebp
dec
jnp
xorl
pop
stos
outsb
pop
sahf
fistpl
pop
mov
jg
cwtl
jp
jo
jmp
cmc
inc
jnp
adc
ja
std
cli
repz
mov
add
outsb
insl
lods
sbb
loop
and
or
jns
mov
scas
fcoml
push
xlat
sti
insl
into
clc
jno
pop
int
push
mov
sub
das
mov
gs
test
jge
rclb
ljmp
lcall
neg
cltd
decb
pop
mov
js
jg
mov
mov
jns
push
fwait
jecxz
cld
or
fldt
std
cmp
shrb
outsb
in
dec
fstp
add
dec
push
jmp
fstp
xor
in
inc
sub
mov
dec
cmpl
sbbl
out
xlat
cld
scas
xchg
or
hlt
fisttpl
div
fdivrl
push
push
jnp
lahf
sahf
mov
add
imul
in
out
js
cmpsl
rolb
xor
jae
cmc
sbb
pop
bound
lods
mov
pop
dec
outsl
in
cmpb
xor
adc
push
xor
mov
lret
sub
xchg
ss
push
lods
push
or
sub
xchg
sbb
xchg
push
dec
ficoml
dec
mov
aam
in
mov
xor
cmp
mov
sub
call
fwait
sbb
jbe
int
sub
dec
cs
test
insb
cmp
movsl
test
in
lds
pop
xor
cmp
rolb
movsl
sub
out
xchg
stos
iret
mov
inc
adc
in
or
imul
mov
loop
std
mov
jnp
dec
mov
jmp
jp
dec
mov
xlat
popf
mov
arpl
cmp
push
popf
cltd
cmp
pusha
dec
xor
pop
shr
cmp
mov
lods
pop
mov
adc
repnz
cs
adc
cs
mov
test
pop
mov
divl
mov
xchg
aas
cmpsb
fdivrp
pusha
jp
ja
xor
sub
pop
pop
xor
fisubs
pop
notl
lods
in
add
fldenv
jb
sti
sub
xchg
dec
out
pop
pop
cltd
ja
idivb
popa
mov
or
jg
push
mov
jp
std
mov
bound
xchg
es
xor
push
dec
xlat
lods
cli
aad
inc
int3
sbbl
mov
jo
dec
pop
daa
in
dec
imul
scas
sti
js
dec
mov
mov
imul
test
pop
arpl
pavgw
cmp
mov
insl
mov
push
aad
lret
ss
in
xchg
lods
and
push
clc
push
repz
addr16
stos
jg
mov
leave
mov
icebp
fwait
nop
loope
mov
into
mov
in
int3
sarb
dec
outsl
in
add
inc
sti
lods
mov
lods
mov
mov
push
test
test
hlt
in
mov
sahf
insb
scas
lahf
pop
dec
dec
jmp
mov
scas
lea
out
fdivrl
int3
sbb
arpl
mov
dec
shlb
gs
push
xor
iret
push
dec
pop
cmp
test
inc
cmp
inc
add
enter
enter
push
or
sub
pop
insl
jb
pop
dec
leave
jge
xor
repz
pop
into
cmp
mov
push
sbb
push
inc
inc
mov
nop
mov
dec
jo
inc
in
clc
push
sub
and
mov
out
std
xor
sbb
jne
into
aam
xchg
mov
cmpsl
jg
fcompl
jmp
pop
sub
sbb
popa
xor
cld
mov
xchg
idivb
jnp
sti
imul
ds
dec
std
pushf
insb
cmp
mov
or
je
notb
mov
cmp
stos
gs
sbb
or
aaa
test
mov
ljmp
aam
in
sahf
daa
inc
sub
in
inc
ja
hlt
sahf
stos
xor
lret
fnstcw
fstl
lret
jl
push
cmpsl
psubsb
out
outsb
mov
and
or
cmpsl
mov
and
lcall
sub
adc
inc
fnstcw
cmp
jle
dec
push
movsb
std
ret
in
fcomip
jl
test
es
inc
and
mov
fwait
mov
push
in
mov
xchg
shr
fwait
fwait
pop
adc
jge
sahf
push
push
add
ret
sub
cmpl
sbb
xlat
and
lahf
jbe
mov
imul
push
inc
xchg
push
ds
dec
mov
daa
jecxz
dec
jno
movsb
inc
sti
mov
aad
dec
cli
push
nop
pop
in
ljmp
add
push
mov
gs
inc
hlt
mov
push
pop
pop
mov
insl
mov
pop
int
adc
lock
push
mov
movl
jecxz
popa
mov
mov
cli
mov
faddl
imul
bound
xchg
mov
mov
and
iret
xor
and
xor
pop
ret
push
rclb
pop
insb
fisttps
scas
imul
dec
jecxz
mov
lcall
movsb
jl
clc
mov
scas
out
mov
aaa
pop
sub
push
stos
adc
pop
push
or
call
out
dec
inc
dec
lcall
mov
vunpckhps
movsl
addl
mov
mov
dec
cld
lods
out
in
xchg
bound
ljmp
mov
xchg
call
pop
cld
mov
xchg
add
test
inc
ja
xor
mov
aas
mov
and
je
xor
dec
and
fadd
mov
mov
pushf
outsl
iret
jp
fdivl
in
cwtl
sbb
out
sbb
add
xorl
js
push
loopne
leave
fdivr
pushf
jnp
cmp
mov
push
fcoml
jmp
mov
stc
mov
es
ficompl
add
in
mov
add
mov
imul
ja
pop
cmp
mov
movsb
pop
push
mov
addr16
cld
add
sbb
fbstp
andl
dec
mov
fisttpl
sbb
clc
testl
incl
push
ljmp
ret
mov
repz
sti
inc
add
imul
out
mov
or
xchg
pushf
jb
outsb
xchg
dec
gs
and
or
sub
mov
lret
mov
cmpsl
movsb
push
jne
dec
outsb
pop
or
mov
sub
loop
push
cmpsl
adc
nop
mov
xchg
jl
mov
pop
jno
sub
js
aad
mov
loop
cli
hlt
mov
dec
inc
mov
lods
mov
pop
outsl
fimull
repz
or
int3
jo
popf
xchg
out
mov
repz
jnp
dec
xchg
leave
mov
fcoms
test
ficoms
insb
shl
stos
cmpsl
sub
push
das
sahf
jnp
xor
push
inc
pop
loopne
xchg
or
out
sbb
cmp
call
repz
lret
out
jae
loop
push
mov
pusha
out
je
cltd
push
mov
mov
dec
cmp
cmp
ret
mov
mov
dec
movsb
push
fistl
push
mov
loop
divl
aas
cltd
lods
mov
jg
out
lret
xor
out
repnz
dec
lods
push
adc
shrl
pop
jno
mov
scas
jmp
gs
insl
sub
jle
inc
sbb
jbe
rorl
mov
out
jg
shr
mov
mov
in
pop
stos
add
dec
into
lahf
test
popf
push
xchg
mov
test
adcb
xchg
fldenv
jnp
jp
jne
sub
jge
into
xor
xchg
ret
inc
mov
xchg
hlt
push
loop
xchg
or
out
mov
xor
mov
repnz
cmp
mov
or
insl
dec
leave
pop
inc
xchg
jecxz
stc
mov
jnp
in
divl
push
jp
es
ret
and
jno
fwait
test
scas
lods
jns
jns
ss
ja
jp
cmp
mov
ljmp
mov
adc
mov
inc
pop
ds
sahf
add
cltd
aam
rol
sahf
mov
ret
xor
out
lods
repnz
pop
cmp
aaa
fsubr
js
sub
push
jno
loopne
out
sahf
stc
xchg
cli
xchg
mov
cmpsb
lret
call
testl
scas
sub
hlt
inc
dec
mov
push
mov
std
imul
or
sub
js
inc
cmc
repz
out
daa
pop
fdivp
rcrb
jmp
in
adc
jle
inc
pop
push
sub
imul
rcr
xchg
sub
mov
pop
hlt
push
lock
adc
into
aam
push
cltd
xor
pop
sar
or
xchg
sub
test
outsl
mov
push
dec
loope
sti
add
es
lahf
pop
push
jg
divl
or
xor
ja
cmp
data16
rcl
xor
outsb
fs
push
mov
push
test
push
fistl
push
lret
mov
sbb
sbb
out
inc
dec
das
push
mov
cmp
lahf
pop
leave
cmp
pop
stos
push
mov
mov
mov
daa
outsl
push
dec
push
fistpll
ret
cmc
rcrl
test
or
in
adc
sub
cmpsb
lods
ljmp
inc
xor
cmpsb
ss
testb
xorl
jne
ja
xchg
jne
push
out
in
pushf
sbb
push
addr16
outsl
lods
into
xor
inc
xchg
sub
rcl
xor
xor
sub
int
xlat
out
testb
mov
test
dec
popa
jge
jmp
sub
movsl
xchg
jecxz
out
movsb
ret
in
inc
dec
pop
fs
insb
jb
fdivrs
cmp
subb
loop
add
cmp
xchg
aas
mov
cmpl
xor
mov
sbb
push
jmp
mov
ret
mov
dec
push
dec
and
dec
jb
jl
imul
addb
fists
sub
divb
test
inc
lahf
mov
dec
cwtl
std
lcall
test
fiaddl
test
mul
in
stos
fiaddl
mov
jp
addr16
mov
jp
jnp
in
adcl
and
popf
enter
or
jmp
adc
aaa
int3
lds
dec
scas
rclb
sbbl
jmp
pop
test
adc
arpl
fstpt
fdiv
pop
dec
add
push
scas
rorl
jl
mov
fmuls
pusha
push
and
outsb
inc
imul
hlt
pop
std
cmp
aad
int
xchg
mov
lcall
jbe
pushf
lret
lock
out
dec
jmp
pushf
cmp
lods
fucomp
pushf
out
push
mov
imul
xchg
ljmp
push
fisubs
jnp
rorb
sti
fmull
stos
test
jo
lods
dec
push
daa
sbb
mov
jae
jmp
loop
adc
in
jnp
rcrb
loop
or
fnsave
inc
scas
fdivrp
xchg
xor
call
cmp
xlat
dec
pop
std
push
lds
mov
jle
dec
sbb
jle
inc
out
popa
mov
push
cli
add
mov
sbb
sub
movsl
and
daa
in
mov
aad
jbe
jne
gs
aam
mov
fld
mov
call
bound
ret
daa
movsbl
cli
pop
popa
lahf
ss
lods
fstpt
int
out
dec
pop
sub
mov
insl
fucomip
movsl
cmp
fstl
pop
sub
adcl
fcomps
mov
movsl
inc
sub
sar
dec
jmp
mov
cs
jno
aaa
mov
pop
jmp
mov
cmpsl
xchg
sub
aam
xlat
push
out
xor
push
mov
ret
daa
cmpsl
aam
fcomp
pop
jmp
outsb
push
jp
sar
xchg
test
cld
out
mov
in
cmpsb
xchg
add
jl
lcall
ret
pushf
push
jecxz
jp
add
sbb
adc
imul
hlt
cmp
jno
call
or
cmp
sti
std
scas
pop
imull
stc
fs
jbe
jns
cmc
mov
push
fcomps
dec
mov
cmpl
psubd
icebp
pushf
scas
fnsave
mov
mov
push
add
lea
push
outsb
aad
std
fld
fdivrl
add
lahf
sub
lds
out
pop
insl
fs
mov
mov
test
pop
push
mov
xor
inc
shl
push
daa
sub
mov
adc
and
pop
mov
xor
fdivrs
sub
adc
iret
xor
stc
pop
loop
pop
and
repnz
xchg
inc
cmpsb
loop
fstpl
addr16
sar
or
push
xor
outsb
loop
mov
mull
xchg
outsl
mov
adc
not
pusha
rcr
mov
dec
sbb
sub
jmp
mov
out
in
fld1
repnz
xor
sti
idivl
leave
xor
jge
mov
fistps
sub
in
fimull
jge
in
add
pop
jp
dec
int3
jne
sbbb
test
dec
leave
fcomps
js
cmc
xchg
sbb
fwait
push
je
cmpsl
pop
mov
scas
stos
fimuls
cmpsl
shl
xchg
mov
adc
pop
in
push
xor
clc
test
test
lock
dec
jg
stos
shlb
xchg
arpl
mov
mov
mov
mov
jo
inc
sbbl
mov
jg
jecxz
mov
lds
cmpsl
pop
into
pop
je
lods
repz
fdivl
sub
pop
pop
sbb
ret
xor
scas
aam
fwait
add
orb
cmc
lds
sbb
push
cmpsl
out
out
xchg
das
adc
mov
es
pop
jge
jg
test
xchg
pop
xchg
pop
or
out
scas
mov
rcll
and
daa
mov
leave
sbb
sub
or
push
shll
add
xor
sbb
dec
aam
push
ss
cmpl
stos
mov
mov
mov
inc
jmp
mov
dec
cmp
stos
cli
movsb
pop
add
les
icebp
mov
imul
loopne
dec
xor
push
sbb
mov
or
ret
test
fs
pop
pusha
movsb
xor
mov
add
test
leave
sbb
push
xor
data16
test
bound
mov
mov
pop
push
sub
dec
push
rcr
lcall
adc
xchg
cli
cmp
mov
pop
lea
mov
mov
mov
fdivrs
or
ss
xor
insl
jo
loopne
sarl
pop
push
jge
fisttps
cmp
cs
mov
pop
int
loop
lret
fsub
xchg
jb
cmp
cmp
jo
mov
lds
sbb
jle
sbb
std
cmpl
ror
fsubp
mov
sub
sbb
imul
hlt
fmull
xor
push
pop
fsubl
mov
xor
shll
or
and
ficoms
imul
lret
mov
sub
dec
pop
lret
cmp
cmp
cld
mov
jnp
jmp
mov
inc
das
add
sub
shlb
sbb
xchg
xor
mov
orl
adc
icebp
xchg
ror
nop
popa
into
bound
push
int3
gs
mov
add
jno
arpl
inc
cmpsb
xor
lds
mov
pop
jl
xor
imul
aaa
imul
lock
sub
push
jmp
stos
xchg
cmc
mov
add
fcmove
sbb
imul
xlat
ja
not
psrlw
scas
pop
lods
pop
scas
decl
jnp
cmp
pop
les
mov
lock
popf
add
push
in
cmp
sbb
cmp
enter
pop
mov
sbb
pop
sbb
insl
xor
push
call
dec
mov
cmc
inc
ret
inc
dec
sbb
push
lea
jmp
sbb
outsl
xor
insl
pushf
push
icebp
out
sbb
rorl
cltd
sub
stc
fldenv
xchg
leave
imul
jge
or
jb
aaa
cltd
push
xor
mov
shll
scas
cmpsb
lcall
xor
cmp
sub
scas
flds
mov
pop
andb
out
jae
mov
imul
out
out
out
out
out
out
out
out
sub
pop
or
push
call
bnd
sub
cmpl
std
add
cmp
hlt
dec
jmp
inc
repz
loopne
in
jae
jo
jae
out
jecxz
jae
cmp
cmp
cmp
cmp
inc
iret
cmp
rolb
cmp
sbb
sbb
sbb
imul
imul
imul
clc
nop
icebp
inc
arpl
testl
movsl
fwait
ljmp
lcall
mov
int
cwtl
imul
int3
fldcw
xor
leave
out
int
cwtl
or
sub
mov
cmp
xor
sbb
repz
sub
push
bound
rcrl
sub
xchg
cmpsl
imul
in
jge
lret
in
sbb
fisttps
cmp
call
or
jecxz
dec
loopne
loopne
jae
sbb
sbb
jle
xchg
out
loope
mov
xor
aaa
xchg
mov
stos
popa
movsb
arpl
pusha
in
hlt
mov
push
movsb
push
adcl
out
fdivr
xchg
xor
rol
int
rol
fildl
outsl
jb
in
dec
mov
fwait
dec
mov
movsb
shll
leave
add
lds
inc
inc
shl
cmpsb
jns
in
in
cmpsb
out
dec
cmp
dec
aas
fwait
mov
cltd
insl
xor
pushw
gs
and
in
scas
int
mov
xor
pop
scas
xor
cmp
pop
mov
testl
xchg
daa
sbb
pop
cs
es
push
imul
cmpsb
in
insb
push
fistpl
lds
fld1
and
dec
cltd
adc
enter
lret
and
mov
mov
sbb
xor
cmp
outsl
data16
xchg
pushl
jbe,pt
cld
lret
jge
subl
popa
fmull
insl
fsubrl
nop
mov
pop
out
add
popa
out
jno
nop
jnp
jnp
jnp
fwait
dec
out
sub
out
jno
mov
cmp
insl
jecxz
jae
jae
outsb
daa
mov
sti
sbb
push
mov
xchg
aam
push
and
mov
or
gs
aam
hlt
ljmp
xchg
lret
jg
aas
dec
jmp
or
pushl
pop
lret
mov
pop
negl
pop
jnp
aad
add
repnz
sbb
out
out
sbb
sahf
or
hlt
xchg
jns
jns
cmp
hlt
jo
es
call
push
xor
sub
mov
rcrl
fildl
std
ds
xor
push
rcrl
je
sbb
imul
mov
js
sti
or
jae
add
or
push
mov
mov
out
push
inc
mul
mov
ret
jne
fdivrs
mov
xchg
fisubs
mov
in
lret
pop
mov
pop
aad
fsubrl
push
insl
popa
jne
pop
dec
gs
in
scas
lret
clc
ret
fsubrl
lret
mov
cmc
std
mov
repnz
pop
lods
ljmp
add
jle
jne
lods
outsl
mov
cmp
lods
stc
gs
lahf
mov
shll
mov
fsubrs
xor
sub
dec
mov
pop
sbb
cltd
or
xchg
movsl
outsl
les
inc
lea
ds
mov
or
ret
pop
fadd
jl
cmp
and
xchg
xor
mov
sub
shl
mov
xor
test
loop
imul
sub
addb
inc
mov
add
add
imul
loope
xor
inc
lcall
mov
pop
adc
mov
ret
sub
loop
mov
test
pop
div
test
sbb
test
lret
loopne
sbb
xchg
sarl
sbb
test
or
sbb
and
mov
sub
push
cmpsl
lea
ret
and
push
orb
popf
test
and
push
test
xchg
inc
icebp
rcll
mov
jo
cmp
je
jge
std
xlat
push
mov
xor
pop
sub
test
mov
mov
or
xchg
outsl
daa
cltd
cmp
add
inc
cmc
lcall
dec
ret
jo
add
sahf
add
pop
xor
push
xlat
jecxz
jne
jle
or
rorl
adc
xchg
push
cmp
sub
and
dec
in
test
ljmp
dec
ja
mov
popf
pop
lds
je
pop
cmc
dec
inc
push
xchg
mov
sub
jp
mov
sub
xchg
and
pop
ljmp
mov
aam
dec
inc
inc
add
leave
fnstenv
mov
adc
and
push
cmp
or
movsb
test
or
fdivs
jecxz
loope
bound
dec
roll
test
je
jne
mov
aad
popl
popa
lods
add
hlt
fldenv
jp
mov
xchg
xor
and
inc
mov
push
cmp
jno
and
loop
cmp
inc
dec
pop
stos
xchg
call
jno
sbb
sub
cs
dec
nop
dec
pop
stos
add
inc
mov
sub
adcl
inc
insl
aad
adc
es
xchg
fldl
dec
adc
pop
andl
popa
xchg
enter
loop
xor
adc
push
push
xor
mov
push
inc
or
fs
sub
inc
test
add
sub
imul
push
dec
push
dec
sbbl
mov
inc
pop
mov
jg
ficoml
xor
mov
popa
mov
ret
xchg
and
push
mov
pop
sbb
ficoms
test
dec
mov
push
jmp
jle
xchg
add
dec
pop
mov
in
xchg
sbb
sbb
loopne
sbb
popa
mov
ret
shl
fisubrl
push
loop
adc
pop
pop
inc
cmc
jo
or
mov
adc
xlat
filds
xchg
pusha
lods
sbb
or
xchg
js,pn
nop
daa
mov
adcl
xor
lods
xchg
mov
mov
mov
dec
fcom
cmp
pop
sbb
mov
push
add
sbb
mov
jmp
pushf
out
lret
sbb
adc
sti
pop
cltd
add
cwtl
sbb
dec
adc
mov
inc
xchg
pop
flds
fcomps
subl
shll
add
xor
adc
adc
pop
aam
pop
imul
lcall
jne
adc
faddp
jne
repz
test
movl
jle
jle
popa
and
fadds
add
jg
out
test
jns
prefetch
or
insl
cld
push
mov
xor
fisubs
sub
fwait
loopne
sbb
sub
cmp
ja
cmp
add
jge
std
jg
aaa
or
and
mov
inc
pop
or
arpl
cwtl
xor
cmc
adc
mov
leave
dec
in
es
jbe
pop
dec
xchg
stos
in
ror
ljmp
mov
cld
fmuls
dec
jns
mov
enter
and
insb
mov
pop
bound
xchg
cwtl
push
mov
lret
insb
in
imul
jb
adc
jae
adc
mov
pop
push
inc
jns
and
add
ret
sub
jecxz
xor
jg
test
jae
psadbw
cltd
arpl
cs
inc
outsl
adc
mov
and
sahf
xlat
lret
out
mov
adc
mov
xlat
aaa
jmp
in
mov
xchg
js
out
cs
inc
ret
jl
hlt
pop
out
push
and
jge
inc
fnstsw
mov
popa
rol
out
inc
inc
int3
or
aaa
ja
loopne
test
out
mov
jmp
inc
mov
jnp
ljmp
mov
jg
int
pop
test
popa
into
adc
pop
mov
scas
add
add
iret
repz
das
or
dec
repnz
pushf
lock
lahf
adc
stos
xlat
das
rcl
dec
xor
int3
sub
mov
loopne
scas
in
cli
pop
in
std
out
ret
addb
xlat
sti
mov
inc
sbb
jg
pop
roll
or
das
xchg
mov
mov
repnz
lods
mov
pop
sub
movsl
std
test
dec
push
lea
push
rcl
pushf
rclb
push
inc
ljmp
dec
inc
push
ja
scas
test
mov
jae
outsl
xlat
jecxz
jl
mov
xlat
std
push
repnz
not
in
pop
dec
aaa
mov
adc
fistps
test
iret
clc
push
rclb
lcall
in
stos
jnp
and
dec
dec
inc
push
mov
push
into
mov
jns
jp
outsb
push
int
jbe
mulb
in
xchg
stos
mov
mov
jnp
cmp
pop
sbb
leave
mov
jecxz
roll
aas
sub
into
insl
cltd
ja
lret
out
jbe
pop
dec
dec
imul
mov
out
jp
sub
pushf
js
icebp
nop
aaa
xor
add
test
insl
aad
pop
mov
arpl
pop
ret
in
lret
mov
jns
arpl
cmc
add
mov
push
test
xchg
jae
mov
les
lret
inc
and
lds
push
into
xchg
adc
lret
mov
daa
xor
out
pusha
cmc
hlt
int3
mov
lret
and
jne
dec
cmp
call
repnz
or
addr16
cmp
mov
mov
xchg
push
mov
adc
mov
cmp
mov
into
push
test
jg
mov
jae
in
scas
test
push
and
ja
or
ds
pop
xchg
jns
cmpsb
lods
loop
ret
mov
popf
bound
sub
fists
cltd
xchg
and
fbld
ds
outsl
mov
test
mov
pop
push
fsts
ja
imul
lcall
mov
xchg
mov
xlat
paddb
aam
pop
ljmp
dec
dec
scas
test
push
rclb
orb
jbe
xchg
cmp
or
jnp
cmc
icebp
cmpsl
sbbl
mov
adc
out
cld
mov
and
or
icebp
ss
call
mov
push
stos
xor
popf
inc
jbe
and
push
push
xor
add
int
ds
int
cmpsb
add
or
or
mov
fwait
out
pop
ljmp
into
fildll
xor
mov
mov
call
adc
mov
nop
mov
mov
jo
lahf
mov
sub
mov
scas
pop
jl
hlt
loopne
mov
xchg
xor
in
jp
jne
mov
add
pop
std
add
pop
or
jg
mov
addr16
or
pop
out
mov
cli
push
lahf
in
sbb
add
mov
test
lods
mov
xor
inc
leave
cwtl
loop
sbb
push
andb
scas
lods
testl
inc
jp
mov
adc
daa
rcrb
mov
inc
sub
mov
mov
fistps
mov
fbstp
mov
jnp
mov
roll
and
rolb
loopne
jno
xor
cwtl
ret
jb
cmp
or
loopne
push
sbb
scas
sar
add
mov
dec
push
push
xor
loope
xlat
dec
mov
pop
push
inc
ss
out
iret
es
and
int
icebp
or
out
icebp
or
mov
xchg
sbb
call
popa
leave
pop
push
add
add
popa
or
testl
push
aam
ret
pushf
mov
cwtl
dec
adc
sub
sub
jge
fdivrp
sti
jp
insb
pop
xor
lahf
dec
ds
jmp
fidivs
negl
adc
push
out
mov
popa
or
pusha
pop
adc
adc
das
mov
pushf
add
fnstsw
mov
fistpll
das
jg
xor
fsubrl
cld
mov
pop
orl
or
out
cwtl
ss
jnp
push
sbb
repnz
add
shr
mov
fcomp
adc
arpl
pop
lods
popf
pop
insb
xchg
cmp
cmp
sub
push
mov
mov
xchg
adc
sbbb
or
mov
sbb
dec
mov
lret
lods
push
sub
outsl
push
gs
es
mov
xchg
sarb
pop
push
xchg
adc
fsubrs
in
inc
outsb
enter
ds
cld
and
inc
xchg
and
pusha
das
pusha
mov
jmp
mov
cwtl
pop
mov
loopne
pop
loopne
insl
cmp
mov
and
inc
cld
adcb
mov
fistpll
mov
add
xchg
mov
loope
xlat
ret
mov
addl
xchg
lods
xor
shrl
adc
push
xchg
xor
push
mov
nop
push
sahf
gs
imul
push
dec
loop
out
int3
sub
mov
repz
cld
mov
cmp
int3
jae
cmp
pushf
addr16
int3
mov
pop
fistps
movsl
nop
mov
sbb
fldl
pop
pop
mov
push
xor
imul
or
andb
pop
fucom
xor
data16
loope
jp
xor
push
pop
sti
fdecstp
shl
fildll
into
mov
hlt
fwait
test
push
jno
mov
lret
or
add
add
repnz
inc
xor
test
mov
mov
inc
fwait
add
fcmovnb
push
cmpl
or
cmp
in
rclb
das
clc
scas
pop
sbb
shlb
lock
clc
mov
mov
fwait
sbb
xor
jp
movl
clc
cmp
je
jae
mov
adc
inc
nop
mov
inc
xchg
and
dec
xorb
nop
and
mov
sahf
add
xchg
addr16
ss
fcomps
mov
outsl
jmp
popf
pop
dec
sub
mov
pushf
outsl
cli
push
jmp
outsl
xor
mov
jecxz
mov
fisubl
mov
subb
cmp
mov
cmp
ljmp
inc
stos
fldenv
aas
xor
and
mov
adc
xor
mov
mov
in
dec
jbe
int
xor
lahf
loope
js
push
add
or
ss
xchg
leave
pusha
sub
and
popa
mov
sti
popa
sub
in
bound
inc
fwait
ret
lock
lea
xor
loopne
mov
ss
dec
inc
inc
lods
cmp
sbb
in
inc
xchg
dec
inc
jnp
mov
add
add
shlb
inc
inc
and
or
xchg
in
pusha
dec
xorl
add
cli
movsb
add
jle
dec
subb
cmp
outsl
mov
mov
mov
mov
mov
or
leave
in
movsl
cmp
std
mov
sahf
push
xor
cltd
ja
xlat
add
push
xchg
mov
adc
add
outsb
loop
inc
cmp
xor
sub
scas
cmp
push
mulb
xchg
loopne
je
cmc
mov
add
sbb
inc
mov
popa
or
sarb
cmpb
pop
lock
insb
mov
push
xor
rcr
leave
shlb
inc
cltd
fsts
xlat
cmp
sbb
cmpsl
imul
ret
pushf
add
xlat
pop
add
xchg
lods
loopne
xchg
ljmp
bound
cmp
fistpl
push
fstpt
jno
std
mov
mov
inc
ss
neg
iret
iret
mov
xorl
insb
jg
cmpb
push
jnp
sbb
fldt
popa
xlat
pop
insb
fwait
cmp
and
add
imul
and
loopne
jo
push
lret
and
dec
sbb
imul
mov
xchg
jmp
insb
add
pop
pop
aad
je
in
add
ljmp
inc
adc
xor
idivb
and
mov
add
pop
dec
in
icebp
sub
shrb
mov
cmp
or
xchg
insl
ret
orl
mov
xor
lods
test
movl
iret
lods
sahf
mov
int3
adc
dec
pop
fwait
arpl
insb
cmp
int3
cmp
fadds
dec
shll
xchg
orl
loopne
mov
lods
mov
fsubl
push
negl
mov
jbe
or
sbb
cmp
mov
fs
dec
mov
dec
fsubs
lahf
cmp
and
shlb
add
mov
adc
popf
add
add
and
add
subb
push
inc
xor
dec
sub
lret
mov
nop
add
add
mov
adc
push
add
mov
push
loop
mov
xor
push
call
cmp
pop
pop
insb
inc
cmpb
js
adc
dec
jae
sbb
mov
xchg
inc
adc
ja
addl
add
mov
sbb
les
cli
xlat
lcall
insl
mov
pop
pop
das
add
shll
into
mov
sub
loop
mov
test
jle
lahf
mov
sbb
cmp
xchg
inc
pop
mov
or
cwtl
or
fildl
aas
inc
sbb
inc
and
data16
cmc
cmc
lock
mov
lock
push
movsb
mov
hlt
ret
pop
mov
pushf
or
or
or
push
push
push
sbb
hlt
jmp
push
cmp
add
jne
or
inc
add
pmaddwd
test
test
push
xor
aaa
ror
and
imul
shll
pop
in
repz
mov
cmp
cmp
in
xchg
or
push
push
push
test
sbb
mov
imul
ficoms
pushf
lea
sub
aas
and
inc
cltd
mov
in
xchg
xor
push
cld
dec
sahf
mov
popa
nop
xchg
xchg
pop
jmp
and
xor
fiadds
fdivl
and
scas
or
pop
pop
or
xchg
insl
insl
insl
push
inc
cmc
or
pop
push
or
or
jge
pop
lods
push
stos
push
pop
jb
jno
push
pop
cmpsb
jo
lds
sbbb
sub
dec
sbb
push
cmp
arpl
lahf
push
mov
pop
shll
in
push
mov
movl
push
jle
jle
popf
fwait
aaa
jg
mov
leave
xchg
daa
inc
xchg
cs
cmp
gs
std
rcl
rclb
je
mov
loope
sub
lret
scas
stc
clc
clc
sub
jmp
or
fcoml
inc
out
push
cmpsb
sbb
add
xchg
lcall
xchg
lds
dec
dec
sbb
xor
cmp
lret
into
pusha
jle
mov
xor
jns
cli
mov
inc
add
outsb
fistpll
cmp
fmuls
out
imul
aam
ret
xchg
xor
sub
dec
ret
into
into
mov
cltd
mov
dec
dec
push
jl
jecxz
add
mov
imul
test
psubb
and
mov
cmpl
call
scas
mov
pop
mov
std
jns
out
out
hlt
add
add
add
dec
in
xor
sbb
mov
mov
mov
jp
pushf
insl
add
ret
dec
jle
sbb
dec
xor
push
pop
pop
sti
aam
jle
cli
jne
push
mov
cld
cld
cld
mov
xor
cwtl
sti
push
add
sbb
dec
cmp
inc
mov
cli
cmc
imul
addb
insl
int
cld
add
pop
sbb
fldl
cmpsl
fdivl
popl
lock
mov
popa
addr16
cmc
repz
xchg
idiv
repnz
jg
xchg
popf
jae
ret
cli
sbb
jno
out
xor
jg
fwait
cmp
mov
fdivrl
ljmp
out
pop
scas
addl
xor
es
mov
in
or
fwait
mov
cmp
ss
inc
loope
pop
mov
mov
insb
jg
fildl
pop
mov
shl
adc
call
or
loop
and
ljmp
pop
das
pop
cld
in
pop
std
push
sbb
dec
sbb
incl
cmp
push
jp
jg
push
push
mov
push
lea
pop
mov
push
sbb
movsl
dec
xchg
inc
ss
fcmovb
push
out
jg
ljmp
aas
stos
mov
mov
pcmpgtd
add
sbb
insl
jo
mov
dec
xor
loopne
pop
cmc
adc
outsl
and
xchg
mov
mov
add
jne
out
pop
pop
hlt
pop
pop
pop
inc
mov
popa
mov
fwait
lret
xchg
cmp
fbld
jl
stos
pop
jecxz
stos
stos
stos
mov
sub
fists
incl
pop
imul
fsub
jno
ss
xor
push
pshufw
ds
incl
repz
jp
jmp
xor
sarl
jae
int3
call
push
pop
int3
cmc
imul
ds
incl
push
pop
pop
ret
popa
jp
scas
sbb
push
cmp
jp
cmp
std
xchg
lahf
lahf
std
add
hlt
inc
int
sbb
cmp
cwtl
jmp
movsl
fdivs
and
adc
xchg
add
or
cltd
or
ret
jb
xor
enter
ret
add
int3
divl
in
lret
iret
arpl
loope
or
cwtl
ds
loopne
push
pop
or
inc
xchg
mov
pop
push
pandn
out
pop
sub
jmp
jne
mov
xchg
xor
cmp
repnz
fpatan
push
outsl
loopne
xchg
jae
jg
adc
in
in
cmp
mov
test
addl
pop
mov
loopne
lds
dec
mov
fstl
or
mov
fbstp
mov
push
dec
ret
pop
or
shrb
stos
hlt
cld
cmc
shrl
pushf
cmpsb
jns
nop
or
jno
inc
fcmovnb
inc
mov
and
jle
jmp
pushf
adc
stc
mov
xlat
data16
mov
inc
pop
inc
inc
push
and
hlt
and
sahf
push
cltd
xchg
les
or
pop
mov
pop
push
lea
test
sub
ret
mov
incb
cs
repnz
nop
dec
ja
fistl
jb
mov
add
mov
loopne
xchg
clc
js
rclb
xchg
cld
lahf
call
add
les
jge
nop
aaa
frstor
outsl
mov
mov
pushf
xor
sbb
popa
sbb
fcmovu
addr16
rcrl
fildl
inc
xor
pop
cli
jmp
push
mov
push
add
inc
adc
loope
lea
inc
shlb
and
outsl
fnstsw
and
mov
mov
addr16
sahf
mov
mov
mov
mov
mov
mov
mov
cmp
lahf
in
in
in
nopl
jl
enter
pop
xor
add
addr16
sbb
mov
pop
pop
and
adc
inc
cmp
ljmp
addr16
in
pop
or
repz
mov
js
mov
repz
mov
pop
fisubs
and
neg
xlat
xlat
div
in
and
jp
sub
std
std
std
add
add
cli
cmc
sbb
outsb
addb
lods
pop
addl
jl
jo
fnstsw
loop
nop
inc
aas
js
loopne
ret
xchg
jg
call
inc
jle
adc
adc
sbb
in
xchg
test
test
dec
lahf
orb
out
xor
add
and
add
data16
cmp
jle
lods
popf
xchg
xchg
xchg
pushf
pushf
cld
repnz
xchg
xchg
adc
cs
rcl
rcl
sbbl
popa
push
push
adc
sbb
push
push
ret
inc
cli
push
pop
pop
pop
push
push
add
cld
lret
stos
stos
stos
ljmp
scas
or
popl
jmp
jl
xor
jg
dec
cli
pop
aas
xchg
mov
push
and
inc
add
push
clc
cmp
inc
lds
test
pop
dec
inc
sarl
jb
jb
mov
and
xlat
push
xchg
pop
sti
inc
dec
sbb
sub
dec
into
push
ficomps
mov
dec
gs
mov
jb
push
xchg
push
mov
ret
data16
inc
enter
prefetch
pop
int3
fstpl
iret
xor
sub
cmpsb
pusha
int
aam
lahf
test
sbb
cmc
stos
cmpsl
out
mov
arpl
xchg
inc
ss
fnsave
gs
jmp
dec
xchg
add
mov
or
add
shll
int
jns
dec
ret
inc
mov
outsl
or
dec
iret
cmp
movsb
popf
fwait
test
les
jmp
xchg
mov
out
int3
fistl
sub
sub
testb
cmp
add
imul
push
xchg
bound
inc
mov
sub
shlw
iret
inc
xchg
movsb
jp,pn
sub
sub
ss
cmp
sti
mov
add
imull
and
dec
mov
push
das
iret
push
adc
lret
mov
adc
cmpsb
cld
ret
cltd
mov
cmpsb
adc
jp
jmp
jmp
movsl
xor
push
sub
or
adc
push
mov
lret
or
test
mov
and
decb
fildl
test
je
sahf
dec
mov
sahf
cmp
pop
inc
pop
adc
nop
push
cmp
dec
pop
pop
fldenv
xor
push
mov
mov
jo
roll
int3
mov
addr16
in
ret
enter
mov
lcall
cmc
jecxz
cld
cmp
fildl
lds
divb
in
jae
sbb
or
test
aam
aad
inc
adc
pop
inc
push
hlt
pushf
sbb
dec
xor
dec
test
adc
movups
add
iret
add
push
hlt
out
cmp
xlat
adcl
insl
xor
addb
ja
push
pop
adc
inc
cmc
pop
out
repz
lret
or
ficompl
inc
sahf
mov
out
inc
xchg
dec
pop
cmp
xchg
jae
in
sub
push
add
mov
add
cli
mov
push
lds
out
mov
in
xchg
xchg
xor
fwait
xchg
lds
cmp
out
dec
add
fldenv
cld
sbb
test
xchg
fldt
and
jb
cmpsl
sub
imulb
bound
aas
sub
push
push
dec
pushl
popf
test
in
scas
or
sbb
adcb
pop
mov
das
js
sub
and
sub
mov
les
je
in
bnd
or
aas
dec
int
lcall
nop
dec
lret
mov
sub
pushfw
mov
aaa
movsb
call
lret
and
and
imul
cmpsb
adc
push
ss
pop
fdivrp
lods
lea
es
enter
stos
out
push
jg
popf
sub
inc
dec
mov
sbb
pop
fwait
inc
sbb
sub
push
mov
cmp
dec
in
pop
or
int
pop
jl
adc
sub
sbb
inc
pushf
xchg
orb
inc
inc
sub
negl
lea
push
cmp
cmpsl
or
leave
mull
rorb
das
fisubs
sub
xor
pop
push
or
aad
mov
adc
loope
les
mov
dec
test
out
gs
mov
mul
ret
cld
xchg
test
xchg
fiaddl
stos
pop
or
rol
pop
cmp
jg
dec
jg
es
pop
pop
lahf
jp
jae
roll
stos
jle
out
ret
lods
ja
cmp
xor
mov
mov
xor
cmp
lcall
call
fstps
and
test
shrb
cmpl
movsb
inc
sarb
out
adc
mov
and
xchg
xchg
xchg
std
rcll
mov
addr16
addr16
in
call
aaa
mov
push
sub
sub
cli
push
lret
clc
rcrb
stc
mov
xor
ss
mov
mov
daa
aam
fcmovu
fcomp
rcl
fprem1
mov
lods
mov
mov
stos
stos
mov
cmp
mov
scas
out
shll
and
xlat
scas
pop
inc
loop
jb
nop
prefetchw
in
jmp
sar
out
xlat
jmp
pop
xor
pop
push
mov
jnp
ret
fwait
push
add
add
xor
and
iret
jmp
xor
xchg
jp
xlat
scas
add
jne
in
cmc
xlat
out
pushf
popa
mov
pop
iret
out
in
sub
rclb
cmc
xlat
ret
outsl
stos
cltd
inc
cltd
test
loopne
das
jns
iret
stos
sbb
mov
xchg
insb
fld
jg
ljmp
pop
shrl
lods
iret
iret
xchg
repz
in
out
fs
pop
repz
pop
pop
dec
push
add
push
scas
pop
mov
xchg
jg
lahf
mov
dec
fwait
loope
mov
jmp
inc
xchg
cwtl
mov
rcll
jbe
pop
pop
imul
into
pop
jmp
mov
mov
lods
cltd
mov
adc
std
ss
xchg
inc
mov
icebp
pop
jl
data16
xchg
out
ret
cmp
imul
pop
sbb
aaa
fcoml
and
ficomps
mov
in
sub
fdivr
in
loope
lods
dec
lahf
fcmove
lahf
in
popf
outsb
pop
sub
hlt
add
mov
xchg
sub
enter
dec
nop
cmp
incb
lret
inc
dec
cmp
inc
out
push
jle
push
loopne
pop
xchg
mov
fwait
pop
pop
cmpsb
cmp
sub
ljmp
sub
les
add
hlt
adc
dec
hlt
iret
outsb
mov
xor
aad
cmc
xor
push
pop
fsub
in
hlt
jmp
test
subb
pop
outsb
cwtl
insl
ja
das
xor
cmovb
sub
push
iret
cmp
jle
sub
nop
jge
sti
xchg
mov
data16
mov
sahf
jle
aam
not
sti
and
out
push
into
pop
ljmp
or
ja
inc
fildl
xor
imulb
stos
sub
lcall
les
aam
movsb
ss
ljmp
push
sbb
lea
imul
inc
jmp
bound
adc
into
dec
mov
sub
popf
insl
xor
scas
sub
xlat
dec
cmp
mov
mov
add
adc
cli
mov
push
clc
jnp
mov
rorb
pop
icebp
popf
pop
pop
mov
xor
in
stos
jns
cmp
pop
data16
sahf
jnp
add
pop
je
pop
or
test
aaa
ljmp
sbb
jl
cmpsb
idivb
call
loopnew
sti
mov
fisubrs
xor
cmp
fnsave
mov
dec
je
xor
mov
push
xchg
mov
mov
inc
loop
or
mov
repz
jne,pt
cmp
out
pop
sub
pop
dec
loope
jp
adc
inc
les
dec
nop
mov
scas
lret
sbb
mov
push
jne
test
call
ss
repz
out
imul
scas
sub
dec
dec
mov
insl
in
js
xor
cmp
flds
scas
push
addl
icebp
adc
bound
clc
lods
xchg
jp
dec
jbe
cmc
xchg
cmp
fldpi
mov
and
ljmp
sbb
popa
pop
mov
iret
or
cmp
xchg
les
into
in
sbb
jp
jno
fsts
or
fwait
mov
sbb
cwtl
jle
jae
ljmp
aam
cmp
cs
scas
lods
enter
dec
cmpb
dec
xchg
fs
push
sub
aas
lcall
cmp
lahf
in
fistl
mov
xchg
sar
fistpl
jge
movsl
call
pop
dec
mov
sub
cli
cmc
dec
ljmp
leave
jno
rclb
xchg
rorb
clc
sarl
hlt
mov
fucom
inc
jne
mov
cltd
add
mov
out
stos
das
push
insb
jl
fcomps
mov
in
divl
shlb
cmc
xchg
or
or
mov
call
jmp
out
sbb
clc
rorl
push
jl
cli
jecxz
jmp
xchg
fsubp
scas
jge
add
pop
ds
jg
mov
mul
roll
jmpw
ret
xchg
pop
es
inc
mov
stos
out
lret
sahf
rcr
addl
dec
pop
rol
insl
rorl
mov
dec
ljmp
mov
adcl
or
sbb
push
pop
lods
cmc
xchg
cwtl
mov
lret
dec
pop
inc
mov
mov
cmp
stc
dec
push
ficoms
movsb
repnz
push
lret
inc
loope
ret
fcmovnbe
or
mov
sbb
insl
and
jns
cmpsb
or
stos
adc
je
and
pop
test
inc
iret
rcrb
mulb
mov
add
lea
jmp
xchg
fdivrl
test
iret
and
inc
pusha
jp
es
pop
das
leave
mov
in
jmp
sbb
int3
bswap
shlb
in
mov
pop
sbb
inc
push
push
or
inc
in
scas
ret
popa
pop
fxam
shl
das
mov
shll
jno
xchg
pop
xchg
inc
sbb
add
std
lds
xchg
in
or
test
jmp
pop
mov
mov
cwtl
push
cmp
xor
xor
stc
int
loopne
fldcw
jle
cmp
lds
sti
inc
push
aaa
movsb
and
insl
or
lcall
insl
or
inc
pop
loop
push
movsb
nop
pop
xor
dec
test
xlat
add
xor
into
push
or
pop
mov
pop
lcall
xchg
pushf
jne
xchg
inc
test
test
lcall
das
inc
fs
or
ret
cmp
enter
pop
inc
and
ret
ss
nop
add
push
xchg
mov
dec
pop
in
std
add
repnz
out
push
add
jns
and
and
xchg
mov
insb
ds
jne
xchg
int
dec
aad
pop
ss
mov
test
or
insb
jle
mov
xchg
mov
and
das
adc
ss
mov
dec
sbb
loope
fnstenv
push
jno
bound
xor
aaa
scas
sarl
lock
iret
cs
sarl
sbb
es
mov
dec
loop
mov
lds
push
xor
sub
rorl
sahf
push
stc
mov
fincstp
adc
or
cmp
lds
or
and
enter
push
push
popf
mov
aas
test
ds
out
lcall
cmpsl
inc
pop
mov
scas
pop
nop
ja
in
shl
or
sbb
pop
clc
adc
outsb
addr16
inc
sbb
popf
sub
mov
xchg
mov
in
fstpl
std
pop
in
std
cmp
lods
sbb
enter
mov
insb
clc
sub
mov
adc
lea
les
inc
bound
bound
loop
dec
cmp
sub
sub
sub
shrl
fimuls
test
mov
mov
adc
xlat
dec
xlat
dec
and
push
sbb
and
push
sub
fstl
test
push
xor
adc
xlat
dec
jg
jmp
stc
pop
rorl
fnstsw
mov
inc
in
pop
jmp
or
or
xchg
fwait
in
sbb
pop
in
pop
adc
sbb
imul
dec
dec
ljmp
sahf
fwait
push
cmp
push
jb
pop
xchg
aam
gs
push
dec
out
sahf
cltd
cmp
lods
outsl
dec
cli
cmpsl
mov
ljmp
pop
sahf
stc
jle
mov
sbbb
push
cld
das
imul
outsb
enter
jle
xor
out
inc
repz
fistl
xchg
pop
popf
dec
fwait
dec
xchg
xor
sbb
pop
aaa
lahf
test
mov
mov
mov
jecxz
mov
xchg
int
sub
lods
imul
loopnew
into
mov
insl
adc
mov
aas
cmp
jbe
sbb
xor
rcrb
jmp
and
fiaddl
push
mov
mov
cmpsb
pmulhw
lods
adc
mov
mov
mov
imul
dec
out
pop
lahf
es
sti
fcmovu
es
pop
jnp
out
dec
pop
pop
int3
fdivrp
dec
pop
lcall
mov
cmp
jle,pt
push
mov
out
mov
sbbl
scas
testb
fstl
xchg
mov
jecxz
inc
xor
pop
and
inc
in
idivb
aad
out
test
repnz
adc
xchg
jns
push
bound
in
les
imul
pusha
out
mov
mov
pop
cmp
push
mov
movsl
aaa
repz
cmp
mov
mov
cmc
mov
and
repz
mov
jp
jo
shlb
insl
push
out
scas
aas
test
lret
inc
jge
jl
loopne
icebp
leave
outsl
xor
fisubrs
int3
pusha
mov
pop
aad
xchg
test
mov
insl
mov
mul
inc
xor
scas
jae
popf
popf
dec
lods
rcrb
out
outsb
stc
hlt
mov
dec
mov
lcall
push
sbb
sub
in
leave
sub
mov
movhps
mov
int3
cwtl
popa
cmp
mov
adc
pop
hlt
push
je
ret
cli
in
push
or
jbe
popf
daa
std
fs
add
inc
inc
pop
fwait
jp
hlt
mov
out
push
mull
xchg
sub
repnz
lods
stc
jmp
imul
pop
mov
scas
pop
or
adc
int3
push
lahf
pop
roll
rorl
sti
mov
mov
xlat
cmpsb
push
int
lss
int
jae
pop
lcall
mov
fsubr
and
popa
push
jne
inc
out
pop
push
jl
fcom
mov
jp
scas
mov
xchg
and
push
in
xchg
data16
mov
lods
push
xlat
lods
popa
mov
aaa
outsb
push
mov
call
cwtl
stos
imul
mul
mov
push
or
mov
or
aad
pop
mov
cmpsl
ja
push
leave
xchg
in
jne
jp
idivl
hlt
aad
dec
out
jl
jne
mov
fisubs
sub
imul
add
movsl
in
sub
fnstenv
xchg
adc
in
leave
xchg
dec
or
scas
scas
ret
fisttps
gs
insb
cwtl
pop
mov
pop
fdivs
pop
inc
ffree
stos
imul
jp
in
push
lahf
adc
in
movsl
dec
dec
jmp
dec
inc
loopne
cmc
cmp
jmp
and
iret
dec
popa
or
cmpsl
scas
fcompl
gs
movsl
loope
fcmove
inc
inc
push
repnz
mov
mov
and
sbb
rol
les
cmpsb
push
xor
test
xlat
ss
test
imul
push
es
adc
adc
cmp
jnp
cwtl
sub
sar
cmp
cmp
jae
scas
ljmp
mov
mov
pop
das
les
adc
loope
cwtl
lret
lret
outsb
fwait
aas
push
cmp
sbb
or
insl
push
add
imul
cmc
jbe
jp
or
adc
mov
js
adc
cmp
xchg
xchg
mov
adc
aam
xor
cmc
in
jae
mov
test
out
sbb
sbb
stos
pop
xchg
push
aam
xchg
add
addr16
mov
mov
sub
xor
negl
jle
adc
fildl
sub
dec
bound
imulb
push
xor
inc
call
test
mov
repz
or
stc
mov
sub
or
lret
mov
sbb
inc
aam
roll
outsl
fisubrl
and
scas
sub
insl
aam
jg
xchg
jl
xchg
loop
jp
cmpsb
push
mov
xchg
divl
jns
mov
shlb
xor
jno
testl
push
ja,pn
int
lret
in
dec
jb
jbe
or
pop
mov
dec
sbb
mov
pop
cmp
test
iret
out
push
adc
push
jb
lret
fs
popf
xor
jbe
inc
ja
xchg
mov
pop
nop
fistps
pop
imull
in
loope
ds
cltd
sbb
add
adc
xchg
push
ss
daa
stc
or
sub
dec
arpl
insb
sti
movsb
inc
cmc
jl
xor
mov
or
xor
or
ds
rcrb
pop
ja
int3
fildl
pop
imul
fdivl
adc
movsl
jl
in
aam
addr16
stc
and
stc
cmp
xlat
ret
ja
jb
xor
mov
xchg
out
loop
adc
inc
jmp
jmp
mov
shl
cmpsb
cmc
lcall
cmp
jmp
cmp
lods
cmp
out
hlt
xor
dec
xor
popf
xor
cmp
and
iret
sub
adc
mov
js
push
xchg
scas
sub
jo
aas
sar
shr
or
in
lods
xor
cld
sbbl
xor
mov
ljmp
cmp
popf
sub
lret
cmp
xchg
not
test
lds
add
mov
pushf
test
fwait
jnp
sbb
pop
sub
ljmp
test
test
bound
addr16
aas
loopne
cmp
pop
pop
lock
cmp
dec
imul
push
add
jb
jmp
xchg
cmp
jl
lret
lahf
mov
lea
mov
mov
push
cmpsl
dec
or
outsb
les
mov
in
repnz
mov
test
and
addr16
sahf
test
inc
ds
stos
leave
push
inc
sub
pop
addr16
inc
fmul
adc
push
and
dec
test
dec
inc
or
imul
mov
mov
xchg
cwtl
aaa
and
jecxz
dec
jo
lret
and
sub
jmp
jecxz
fs
cmpsb
daa
push
leave
and
ret
or
or
les
and
in
aas
sub
xchg
pop
xor
test
and
in
mov
shr
or
imull
xor
xor
stos
je
imul
mov
xor
push
daa
repz
popa
push
popf
jno
mov
pushf
push
ret
cld
inc
jecxz
cmpsb
dec
inc
shrl
dec
fdivl
gs
fsub
fcoms
and
mov
aad
pop
popf
enter
pop
jnp
aad
jge
lcall
pop
dec
sbb
xor
mov
test
jo
mov
insb
jne
addr16
mov
lret
add
scas
pop
jnp
out
in
decl
or
ret
rcr
lret
aaa
outsb
fmull
or
mov
dec
dec
pop
pop
pop
inc
inc
les
mov
xchg
xchg
push
push
push
iret
pop
pushf
sub
pop
repnz
jb
ret
mov
imul
jmp
add
and
adc
das
or
scas
mov
out
pop
jns
inc
push
mov
aaa
sub
xchg
xor
push
scas
jmp
gs
jo
sti
std
sahf
rcrb
and
pop
xchg
xlat
cmp
push
sbb
pop
cli
xor
aas
movsl
lock
push
imul
in
jno
out
push
aam
test
xchg
mov
je
mov
stc
movsb
mov
ljmp
lret
mov
dec
fwait
jnp
aaa
idivl
outsl
in
mov
dec
addr16
xor
es
dec
out
cli
fdivr
mov
dec
fldenv
iret
sahf
test
imulb
cmp
cmp
add
pop
nop
fildl
pop
and
mov
stos
mov
xorb
jne
jmp
out
sub
push
mov
dec
pusha
repz
js
push
repz
or
fsubrs
jno
jnp
pop
ja
das
lds
movsl
lods
scas
and
push
scas
push
pop
mov
mov
scas
fwait
push
cmc
imul
outsb
jge
and
aad
adc
xor
ss
add
sub
inc
sbb
faddp
push
sti
fdivrl
lock
jo
test
imul
scas
jle
ds
fimull
rcrb
arpl
dec
push
repz
iret
xor
data16
mov
jecxz
mov
pusha
pop
jle
ret
mov
or
bound
loopne
mov
add
or
or
ljmp
in
mov
je
pop
sub
fstpt
loop
arpl
imul
cld
add
call
loope
aam
mov
cs
sub
popa
sbb
int3
test
push
addl
push
sbb
in
sbb
mov
mov
lods
lret
ret
or
pop
xchg
dec
xor
stos
and
addr16
cmp
lahf
dec
sub
jbe
in
fucomi
xchg
mov
push
sahf
aam
aas
insl
test
xlat
popf
stos
mov
int
cltd
adc
aad
cmp
xchg
mov
mov
xchg
cltd
xchg
dec
dec
pop
mov
into
movups
jns
pop
xor
sti
das
jg
hlt
loope
mov
negb
or
pop
cmpl
dec
ja
stos
xchg
stos
cmp
dec
incb
sub
test
or
cltd
out
xor
xlat
or
icebp
mov
add
mov
xchg
jp
sbbb
in
jle
nop
cmp
mov
js
xor
xchg
push
xchg
test
aad
fdivrl
ljmp
mov
fidivs
mov
pinsrw
movsb
std
dec
sbb
mov
mov
pop
packssdw
in
pop
mov
xchg
fcoml
iret
xor
cmp
or
repnz
mov
test
pop
jae
popa
fildl
cmp
flds
js
mov
stos
daa
ret
jae
pop
das
jns
mov
sub
cmp
test
fidivrs
push
push
cmpsl
jp
inc
sbb
add
jge
scas
mov
stos
and
addr16
imul
inc
call
inc
push
outsb
je
in
dec
inc
mov
mov
testl
fdivrl
inc
and
out
add
inc
add
sbb
mov
or
and
inc
mov
jo
jno
rcrb
jmp
sbb
push
mov
sub
aaa
cmpsl
je
int3
icebp
lret
test
push
mov
inc
sti
xor
push
jno
fistps
mov
cmp
sub
mov
dec
add
inc
dec
jb
xchg
stos
movd
push
movsb
roll
pushf
push
pop
adc
mul
subl
push
cmpsb
out
ffree
scas
dec
xor
fldt
lods
push
cmp
fdivs
and
fmuls
cmp
repnz
or
push
sbb
jns
cld
jns
push
mov
les
mov
mov
cmp
rcrl
mov
movsb
pop
das
mov
jl
mov
push
push
inc
push
xchg
xor
imul
mov
mov
dec
stos
push
gs
xchg
movzwl
scas
lds
push
sti
idivl
push
fdivs
mov
mov
les
cmpsb
bnd
shr
push
mov
addr16
repz
out
sbb
pop
jbe
sub
movsl
fistpl
arpl
dec
scas
pop
push
lahf
and
lods
ss
jmp
push
lock
dec
or
sti
out
lahf
jmp
and
jno
inc
cwtl
dec
adc
jmp
adc
mov
dec
inc
jb
aam
lods
push
pop
test
stos
aad
fimull
pop
lahf
pop
repnz
ja
cltd
scas
xchg
outsl
adc
into
adc
mov
icebp
rcll
pop
test
aad
push
inc
mov
fsubrs
in
rcr
ja
sbb
cmp
xor
outsb
mov
clc
mov
out
xchg
inc
sbb
pop
out
jnp
cmc
cmc
rolb
jmp
sbb
cltd
dec
pop
adc
fs
divb
je
test
mov
mov
loope
pop
cmp
add
mov
jp
out
jl
sbb
movsl
test
pop
popf
pop
xor
and
dec
in
jne
jb
scas
jecxz
mov
pop
stos
jnp
stos
pop
fucom
dec
ss
or
xor
fwait
loop
sub
into
jmp
xchg
insb
negb
push
mov
push
iret
not
mov
adc
cwtl
out
sub
test
es
jne
sub
cmc
push
std
aaa
adc
std
into
insl
mov
sbb
jmp
rcrl
cmpsb
out
jbe
sbb
jnp
scas
pop
push
mov
lret
testb
outsl
xchg
mov
das
mov
pop
inc
mov
cmc
inc
dec
push
mov
and
imull
rcrl
push
icebp
int
push
mov
push
xchg
mov
inc
out
xchg
aas
cltd
mov
mov
icebp
push
xchg
ljmp
inc
sbbb
and
lock
mov
rcll
stc
hlt
sub
sti
xor
pop
aaa
ljmp
xchg
aaa
pop
sbb
adc
into
add
pop
imul
mov
int3
push
pop
jo
repnz
sbb
cmpsb
int
dec
mov
pop
add
loopne
jp
jmp
xlat
pop
dec
popf
cli
stc
mov
mov
adc
stos
ds
push
sbb
xor
xor
pop
sub
inc
jp
call
mov
jae
lods
mov
and
xchg
xor
sti
std
lret
pop
sub
iret
pop
sti
jnp,pt
int3
hlt
iret
enter
movsl
jnp
jmp
cwtl
into
pushf
pop
movsl
test
pop
test
lods
outsb
sbb
fidivl
jae
pushf
cld
mov
iret
push
sub
setg
lock
jns
sbb
dec
cltd
add
lgs
jbe
xor
push
imul
dec
xchg
fdivs
mov
xlat
jge
cli
mov
and
mov
pop
sahf
scas
lock
sbb
aaa
cmp
fstpt
mov
cmp
in
lods
fldcw
xchg
cltd
sub
pop
dec
pop
push
std
inc
je
pop
into
loope
ljmp
mov
push
stos
test
lods
std
jo
jl
movsl
xchg
mov
test
xchg
pop
inc
dec
repnz
mov
dec
test
cli
pop
jecxz
mov
hlt
or
jge
out
mov
mov
cmpb
fstpl
addb
out
arpl
inc
ret
ljmp
mov
mov
mov
add
inc
outsl
sahf
sbb
mov
popf
xor
stos
popf
imul
inc
imul
negl
out
ljmp
roll
jmp
sahf
sub
out
test
int
or
cltd
out
cmpb
gs
rolb
loop
les
out
mov
ljmp
pop
jp
push
jecxz
lret
fstl
sbb
repnz
loopne
mov
jmp
loop
push
imul
xchg
mov
in
and
cwtl
lods
lds
pop
xor
shrl
pop
adc
in
push
cs
ljmp
jne
push
shlb
xchg
jne
sbb
enter
shr
sbb
pop
aas
aad
dec
xor
loop
and
leave
call
jl
daa
pop
out
mov
mov
popa
push
icebp
dec
mov
fiaddl
jne
loop
imul
mov
sub
stc
xor
sub
std
out
out
push
mov
mov
out
scas
jno
fs
adc
sbb
jp
xor
shrb
sub
jbe
insb
pop
jp
ret
iret
mov
dec
jl
cmp
call
mov
inc
push
out
out
jne
xchg
jnp
testl
stc
lods
lods
pop
rorb
xor
nop
pushl
lret
mov
and
xor
int
outsb
std
shll
out
inc
sti
add
loop
aad
jp
std
inc
shlb
xchg
sbb
or
or
fstpt
sub
jp
push
das
in
iret
pop
in
sub
fnsave
cltd
pop
mov
fnsave
sbb
mov
clc
fs
cli
sahf
aam
xor
cmpsl
iret
das
stc
aam
test
pop
xor
mov
call
ret
ja
pop
mov
cmp
lret
repnz
xchg
fistps
out
insl
leave
out
or
lods
xchg
ja
adc
ror
lahf
shl
dec
aas
or
int3
ja
jnp
cmpsb
pop
pop
sub
dec
rorl
dec
ja
adc
stos
mov
enter
loope
xchg
mov
insl
or
cltd
inc
mov
daa
push
xor
adc
add
dec
out
test
cmp
mov
shrb
leave
and
aaa
insl
loopne
bound
decl
jg
sub
fistl
insl
mov
jecxz
shll
je
jns
cmc
repz
fstl
sub
xchg
pop
cmp
push
out
jno
jb
pusha
jmp
and
adc
lea
xor
mov
fisubrs
test
repz
faddl
fmull
ja
sub
mov
out
jle
int
xchg
mov
inc
popl
jne
out
adc
mov
lahf
aaa
emms
aas
adc
ret
dec
stos
inc
decb
cltd
cld
xchg
cld
push
nop
subb
adc
lcall
ja
xchg
inc
xor
cltd
xchg
cmpsl
stos
lcall
fdivrp
mov
lret
subps
test
lock
sahf
inc
or
push
pop
js
or
cmp
or
movsl
add
lock
cs
mov
sahf
jl
pop
xchg
fidivrl
fistpll
jge
mov
inc
mov
xchg
jno
in
lret
pop
ret
pop
jno
insb
mov
insl
jge
mov
push
cltd
and
sub
stc
ds
jge
sbb
setno
xchg
sbb
repz
mov
icebp
aam
repnz
lock
hlt
push
dec
hlt
or
les
test
call
notl
loope
fimuls
mov
xchg
mov
outsl
adc
xor
dec
push
adc
push
adc
popf
sub
enter
out
mov
cmp
fnsave
adcb
and
arpl
ljmp
inc
cmp
in
jne
cld
mov
pop
jge
jbe
mov
cmc
dec
jbe
insl
loop
in
bnd
outsb
cld
int
mov
int
xlat
mov
cwtl
test
or
outsb
mov
xchg
adc
in
ljmp
pop
insl
cld
fs
jo
sub
shll
pop
pop
out
in
mov
adc
repnz
stc
cmp
sbb
cmpl
ds
lock
fisubs
jmp
pusha
dec
orl
mov
add
loope
dec
sbb
mov
xor
pushf
mov
pop
popa
ja
jns
xor
bound
xor
lcall
into
outsl
pop
es
enter
push
int
jmp
mov
mov
stos
data16
pop
cmp
adc
sbb
jae
fcmovnu
divl
ljmp
push
mov
push
add
lret
gs
jae
nop
es
in
bound
bound
add
dec
ret
fdivrl
movsb
jmp
push
jo
ja
xchg
dec
sub
mov
movsb
jb
in
not
inc
cmpl
testb
sti
mov
loopne
out
jbe
cmc
dec
or
xorl
repz
lgs
or
jo
js
jmp
and
fwait
xchg
popa
mov
enter
cltd
jl
les
fcomi
sub
daa
aas
fdivs
test
dec
adc
xchg
lods
push
and
test
frstor
fsubl
sbb
aam
pop
ja
add
iret
repz
imul
or
and
pop
in
and
push
or
cmp
icebp
mov
cmpsl
push
ja
ficomps
xchg
out
ss
lods
enter
add
add
push
sbb
add
xchg
ret
cmp
movsb
sbb
stos
lds
out
lret
jb
pop
ret
inc
cwtl
mov
pop
leave
xor
iret
and
cmp
push
adc
clc
lret
inc
cmc
dec
push
jp
jmp
push
cmp
mov
adc
pusha
repnz
xchg
repz
sub
shld
pop
mov
jl
jo
add
push
loop
dec
in
sub
loopne
add
lret
scas
movsb
lea
jecxz
dec
push
in
cmpsb
call
je
cmp
repnz
lret
dec
cmpsb
lds
sbb
rcrl
pop
or
int3
fs
jp
jl
imul
xchg
cltd
out
movsl
cmp
add
mov
sub
mov
es
addl
push
aas
loopne
icebp
outsl
das
loopne
mov
dec
rcll
mov
das
push
jmp
add
xor
and
pop
mov
mov
nop
inc
jns
sub
fs
mov
lahf
dec
inc
xchg
insl
jb
or
jl
addl
mov
dec
push
push
sbb
addl
push
daa
inc
inc
dec
clc
and
sbb
inc
loope
stos
cmp
pop
mov
enter
inc
dec
cld
xor
test
ja
sbb
aam
test
or
pop
jp
and
loop
insl
mov
orl
xchg
sub
inc
cltd
xchg
call
sbb
and
dec
inc
js
mov
out
or
adc
sub
cwtl
mov
cmpsl
or
inc
vaddsubpd
mov
dec
push
repz
pop
dec
jno
lahf
cmpb
sbb
jl
int3
std
mov
iret
inc
arpl
sbb
in
xor
mov
and
aaa
lods
mov
or
addb
nop
mov
ss
pop
pop
mov
cmpl
or
push
sub
mov
push
mov
xor
or
jno
inc
dec
and
push
xchg
pop
xor
jae
mov
negb
hlt
mov
adc
inc
stos
js
add
test
lods
push
cmp
mov
and
and
movsl
lahf
and
sbb
push
lret
clc
push
call
loopne
jns
mov
pop
and
stos
scas
or
mov
dec
push
aaa
xchg
incl
mov
out
dec
and
into
jecxz
shrl
sbb
jno
test
pop
add
shlb
imul
leave
jl,pt
aaa
xchg
icebp
or
out
jo
mov
inc
push
push
cmp
xchg
xchg
test
push
out
and
mov
mov
addr16
daa
inc
inc
lea
adc
sbb
inc
pop
xchg
sbbb
and
adc
adc
mov
test
adc
xchg
mov
into
daa
and
xchg
pop
lcall
dec
test
leave
out
je
xor
cmp
inc
and
cmpb
inc
inc
pop
repnz
cmpsl
inc
xlat
xchg
push
pop
dec
xor
test
pushf
pop
xchg
bound
jbe
rcr
test
sub
add
xor
insb
test
or
push
popa
ja
mov
adc
xor
les
or
and
je
rorb
pushf
and
bound
mov
fmull
out
fdivl
add
adc
lds
daa
or
test
subb
and
scas
testb
mov
imul
rorb
insl
stos
iretw
mov
xor
sub
mov
cmp
cmp
add
and
mov
fsin
inc
mov
mov
xchg
adc
xchg
jnp
inc
mov
xor
stos
pop
dec
jmp
inc
xchg
sub
sbbb
cmp
mov
add
mov
rclb
lcall
sub
aad
lret
shll
lcall
sub
dec
and
lea
xor
rcrl
add
push
xchg
and
mov
vfrczpd
test
xlat
into
xor
or
call
push
mov
mov
xor
xchg
and
loop
sub
adc
sbb
jns
adc
leave
push
lret
aas
mov
xchg
cmc
mov
test
cmc
repz
inc
mov
inc
test
repz
xlat
test
jle
mov
or
xchg
in
xchg
xchg
jns
sbb
cmpl
jge
or
outsl
mov
and
out
xor
fcmovbe
xchg
adc
pop
out
mov
push
outsl
dec
inc
mov
dec
adc
adc
mov
jle
inc
test
ja
sub
mov
mov
jg
mov
cli
push
ret
push
cmpsb
mov
xor
mov
sbb
and
adc
dec
add
sbb
and
jno
lods
mov
aad
lahf
stos
push
dec
inc
jle
les
cmpsb
or
icebp
sbb
mov
data16
sbb
sbbb
or
adc
sarl
mov
adc
mov
ljmp
ret
mov
loop
mov
jno
pop
dec
mov
push
jmp
mov
or
push
sbb
std
cwtl
mov
or
popaw
das
xor
mov
imul
push
jnp
jae
mov
xor
xchg
sub
fadds
shll
jmp
lds
or
stos
mov
push
loopne
mov
mov
or
cmc
dec
rcll
ljmp
dec
xchg
jmp
dec
cmp
sbb
mov
sarb
add
and
insl
nop
cs
xchg
cmp
or
repnz
mov
adc
iret
nop
adc
scas
and
mov
adc
push
xor
push
or
repz
mov
and
ret
mov
xchg
sub
in
scas
scas
in
mov
xchg
pop
or
adc
mov
out
out
jg
xor
mov
inc
lret
and
insb
inc
xchg
add
fisubl
call
xchg
mov
sub
stos
cmc
pop
sub
push
xor
dec
dec
sub
push
jmp
sub
push
or
jl
enter
frstor
or
jp
inc
adc
xchg
jp
pop
out
out
or
mov
sub
loope
add
aam
add
add
mov
adc
icebp
push
add
add
hlt
mov
add
or
adc
xchg
pop
add
clc
sub
mov
ret
and
sbb
mov
pop
dec
push
enter
mov
dec
js
dec
clc
lret
cli
fwait
dec
into
cs
pop
js
dec
mov
jo
xchg
das
push
call
and
mov
cmp
lock
into
js
xchg
or
lcall
mov
add
pop
push
mov
push
jle
inc
jo
psubsb
arpl
add
scas
pop
lahf
sbb
jnp
or
push
jne
shlb
mov
rolb
xchg
xchg
ret
sub
inc
outsl
add
jb
push
arpl
xchg
or
hlt
cmp
pop
mull
dec
in
dec
add
cmp
adcb
out
and
push
lahf
out
dec
cmp
scas
in
jne
in
jmp
sbb
leave
adc
stc
inc
inc
fisttpl
jbe
dec
cmp
pop
push
mov
rcrb
outsb
add
and
jmp
inc
fistpl
sub
dec
icebp
pop
pop
inc
dec
inc
mov
je
mov
cmp
call
cmpsb
cmp
hlt
pop
rorl
pop
xor
jp
stc
sahf
ja
push
push
adc
out
lcall
sbb
in
arpl
in
jb
in
or
sahf
cmc
lcall
mov
movsl
aam
cmpsl
sti
lcall
pop
sahf
add
sahf
jnp
repz
mov
mov
movsl
enter
fistl
xchg
aad
mov
dec
popa
out
fistl
mov
sti
adc
lahf
movsl
notl
dec
push
or
pop
ss
sbb
jp
and
dec
sbb
hlt
and
int3
push
mov
jmp
xor
sbb
dec
pop
dec
and
xchg
fcmovb
dec
loop
push
inc
cmp
pop
cmp
jne
divb
aas
dec
push
stc
xchg
push
add
mov
insb
mov
mov
sbb
jmp
lods
iret
lret
fcomps
js
sub
sub
je
xlat
mov
je
fisubrl
push
push
scas
fisttps
mov
add
push
push
mov
lret
fisttpl
push
pop
jns
mov
ret
mov
ds
insb
xor
push
xor
fsubr
inc
fcoms
lods
pushf
and
fisubs
xchg
idivb
ja
outsl
jmp
icebp
cmp
fdivrl
jno
mov
dec
ja
dec
push
into
mov
xchg
arpl
in
test
movsl
jp
jbe
lods
mov
fdivrs
std
test
fcompl
adc
insl
push
jecxz
outsb
cld
daa
xlat
sahf
dec
xchg
lods
cmpsb
sub
push
out
add
jg
ret
pushf
cltd
fdiv
sub
jno
or
iret
sbb
leave
jl
stos
insb
sub
shrl
lods
sbb
adc
add
inc
inc
and
dec
jge
scas
pop
pop
or
xor
cld
mov
cli
rcrb
add
shlb
add
mov
cmp
add
pop
xlat
dec
add
out
enter
add
mov
add
aad
cmp
push
add
adc
repnz
push
loopne
adc
test
jns
inc
aas
dec
adcb
incb
fbld
inc
cli
insl
jnp
cld
mov
and
and
mov
add
xor
cmpsl
adc
bts
loop
jg
xor
jae
mov
jecxz
mov
jle
mov
mov
cs
mov
inc
out
jecxz
lock
cld
push
nop
and
pushf
add
pop
loope
jp
std
and
mov
nop
add
div
push
add
xor
mov
xchg
and
mov
jecxz
inc
dec
and
jg
xchg
xchg
cltd
add
jecxz
cs
das
pop
mov
and
ret
ss
push
lock
push
and
iret
jecxz
addr16
xchg
bound
nop
fistpll
mov
push
cmc
dec
cltd
add
cltd
jle
inc
dec
jns
inc
mul
lods
pop
inc
push
out
jle
mov
sahf
and
sub
cmp
ret
push
mov
xor
dec
lahf
jp
aaa
jge
cmp
ja
pop
add
cld
out
loop
add
fldt
push
repz
jmp
mov
in
aad
std
add
sbb
adc
dec
cli
stc
loopne
mov
mov
pop
mov
cld
in
push
outsl
cmp
pusha
cmp
sbb
aam
aas
clc
aas
or
or
cli
mov
lcall
cli
jle
xlat
imul
call
mov
dec
es
and
push
scas
inc
jg
iret
push
xchg
jecxz
test
stc
sbb
jae
pop
sbb
out
or
jno
mov
and
dec
pusha
daa
add
ss
jg
in
paddb
clc
nop
sbb
pop
jmp
pop
clc
xchg
loop
pop
test
dec
mov
mov
push
cmp
inc
ret
jecxz
daa
cmpsb
scas
or
xorl
mov
sub
cmp
xchg
fcmovnbe
xor
fisubs
lock
das
data16
and
dec
cs
lret
jb
es
inc
mov
xchg
nop
ret
mov
js
mov
lods
pop
cmp
sahf
dec
pushf
mov
and
imul
jnp
loopne
xchg
mov
pop
repnz
clc
pop
je
jecxz
sbb
enter
pop
sahf
cli
jb
clc
sub
jb
insl
sarb
sti
lock
dec
and
out
jno
xor
push
jmp
sub
mov
in
test
lret
stos
sahf
cmp
mulb
mov
out
data16
out
and
js
and
pop
clc
xchg
loope
pop
movsl
nop
aaa
pop
in
fidivrs
es
ret
mov
push
fidivs
movsl
xchg
shrl
shl
stc
mov
pop
icebp
push
iret
xchg
adc
jbe
push
ret
mov
jns
inc
loop
fsubp
lahf
push
ret
lock
mov
mov
clc
jecxz
jmp
xchg
dec
cs
push
mov
outsl
mov
dec
in
mov
fwait
outsl
pop
stc
mov
jns
insl
rcrl
fs
fldt
push
lock
and
lds
cmp
popf
icebp
lret
push
lds
hlt
pop
xorl
dec
in
cmp
add
mov
jg
mov
es
cmp
out
std
popa
mov
les
dec
jl
pop
mov
cld
es
lahf
sti
fisubl
loope
inc
jmp
mov
clc
jg
sti
pop
cmp
dec
adc
notb
mov
add
icebp
sub
aaa
jno
add
and
fwait
into
mov
jmp
popl
scas
adc
inc
jmp
shrb
lahf
js
pop
fiaddl
jmp
jns
ret
inc
pop
daa
mov
lahf
daa
xchg
fwait
add
scas
xchg
mov
fstl
les
pop
es
push
das
or
adc
xchg
inc
into
mov
loope
iret
test
inc
pop
movsl
std
mov
xor
arpl
jle
sub
cmp
jle
fcmovnb
cmc
rcrb
and
mov
mov
pop
adc
xor
pushf
cmc
add
mov
nopl
daa
shlb
xchg
pextrw
or
add
add
clc
ret
or
push
jge
sbb
repz
inc
shl
mov
mov
pop
cli
add
xor
mov
xlat
pusha
fidivrl
jp
adc
sub
xchg
hlt
mov
insb
lock
out
dec
sbbb
sbb
jo
loopne
pop
out
and
ret
mov
xor
inc
lock
stc
pusha
addr16
sub
and
mov
stc
mov
cmpb
js
insl
aad
scas
cmc
add
pshufw
cmp
mov
lret
lahf
or
push
dec
push
ja
inc
fidivrl
pop
clc
jne
jmp
sbb
enter
dec
testl
xchg
aam
cwtl
adc
adc
sbb
sbb
push
mov
add
std
ss
pop
xor
lcall
fistpll
push
outsb
sbb
pop
xor
sarb
test
aam
push
rolb
jnp
or
imul
xchg
mov
hlt
or
imul
popf
loopne
adc
gs
andl
sub
inc
and
insl
enter
push
rcrb
fs
cmc
xor
lcall
ja
sbb
lcall
mov
jno
mov
pop
cmpl
xor
mov
sar
stc
cmp
roll
jle
or
push
sti
mov
inc
mov
mov
movsl
mov
movsb
jl
in
add
in
mov
pop
and
repz
jne
rcrb
clc
add
jns
int
scas
xor
ss
sub
ds
sahf
add
jne
call
and
add
dec
xor
sbb
ja
jnp
xor
shl
jmp
mov
push
jbe
fwait
scas
neg
ss
or
jae
pop
fdivr
sbb
push
or
subl
out
add
imul
mov
inc
mov
dec
daa
mov
shlb
fmulp
jecxz
cli
mov
sti
js
jmp
xchg
dec
fidivrs
xor
shl
in
mov
xor
mov
loope
inc
sbb
push
iret
jge
sub
into
movsb
je
aad
iret
push
push
inc
jge
in
shrb
popf
icebp
stc
and
in
or
jns
inc
dec
inc
repnz
testl
scas
repz
pop
and
add
jo
sahf
lahf
or
jbe
cld
ret
mov
cwtl
mov
and
ljmp
mov
mov
cld
inc
frstor
adc
imul
cmp
inc
ss
loopne
dec
sbb
jmp
loope
dec
dec
stos
jp
sub
pop
xor
mov
inc
pop
scas
add
add
scas
push
inc
sti
or
dec
pop
or
daa
adc
cmp
jo
lahf
test
imul
add
mov
movsb
testl
add
mov
jp
xchg
je
and
jnp
out
cli
aaa
add
sbb
stc
pop
test
cmpb
xchg
cli
mov
shl
ja
xlat
loope
mov
mov
mov
xchg
roll
notb
cs
jmp
mov
mov
sbb
movsb
lret
shrl
xor
jp
loop
nop
lock
rolb
mov
loope
js
lods
or
and
jmp
mov
insl
outsl
stos
aad
iret
fildl
aam
sti
or
cmp
add
pop
sahf
repnz
shl
mov
loop
ret
mov
shll
aas
fiaddl
xchg
aas
pop
and
dec
ficomps
jle
int3
outsb
pop
push
fidivl
sub
mov
pusha
out
shl
mov
jbe
shl
stc
jbe
js
cmp
mull
add
xchg
pop
jg
pop
repnz
mov
dec
aas
dec
popa
or
pop
push
lods
jne
lcall
dec
pusha
decl
dec
scas
xchg
jg
pop
ja
mov
jne
roll
xchg
les
rolb
jno
jae
scas
mov
in
cmp
pop
mull
jle
lcall
mov
adc
sbb
jno
mov
xchg
xlat
inc
jae
insl
test
xor
jecxz
rcrb
filds
mov
lock
jge
mov
sarb
das
mov
fdivrs
pop
jle
lcall
mov
add
jmp
add
jge
arpl
push
and
ret
cmp
fisubrs
xor
outsl
mov
add
cmp
testb
mov
sbb
aas
ja
fdivr
pushf
push
jecxz
call
add
add
mov
fcomi
xchg
movsb
movsl
nop
out
jl
mov
dec
pop
mov
mov
and
ret
mov
icebp
xor
sbb
cwtl
in
bound
jae
pop
jns
add
mov
cmp
push
out
pop
push
mov
and
lcall
xchg
pop
test
sar
adc
pop
sbb
int
imul
ret
mov
out
add
push
ror
sar
arpl
loope
mov
pusha
jmp
sub
jecxz
cli
mov
clc
movsb
pop
out
inc
jae
lea
push
ljmp
lock
iret
clc
xor
pop
mov
loopne
pop
pusha
repz
jae
jecxz
adc
mov
mov
push
cmp
mov
add
add
cwtl
and
lcall
xchg
pop
cmp
sbb
scas
jns
cmp
sahf
shlb
adc
and
cmp
add
inc
leave
add
push
mov
bound
sbb
out
decb
notb
stos
js
xor
cmp
mov
clc
aas
fstpt
jb
jg
pop
sub
nop
dec
shlb
push
ret
rcl
jecxz
daa
fdivp
cmp
div
mov
mov
pop
aam
cli
jge
adc
push
mov
repz
adcb
jg
inc
call
cmp
lods
mov
sahf
fnstcw
dec
outsl
pop
sbb
jle
pop
inc
pop
cmpsb
xchg
ljmp
xor
cld
loope
cmc
mov
lods
cmpsl
xor
push
cmc
movl
pop
xchg
mov
pop
push
mov
aas
push
fcompl
stc
imul
call
xor
clc
and
push
and
outsl
mov
xchg
gs
inc
mov
aad
sub
fcompl
push
push
scas
jle
add
push
mov
push
add
sub
cld
push
cmp
shll
sbbl
cmp
fwait
outsl
dec
xchg
das
or
leave
lock
inc
push
add
add
jmp
mov
add
xchg
pop
xchg
sub
stc
and
sti
lea
sub
into
cmp
out
mov
add
xorb
xor
sbb
xor
addb
xor
repnz
cmpsl
dec
int3
xor
inc
pop
cmpsl
icebp
jo
mov
leave
and
fistpl
je
adc
sbb
dec
xchg
out
outsl
jge
and
xchg
cwtl
stos
mov
ljmp
leave
lret
jecxz
pop
cmpsl
xchg
scas
testl
in
mov
dec
repz
xchg
pop
into
pop
es
jno,pn
sub
mov
aam
test
adc
sub
inc
mov
cli
pop
lods
inc
xchg
mov
lods
sbb
mov
cmpsb
fcmovne
push
jp
iret
cmp
dec
adc
daa
dec
cmc
fcmovnb
lret
mov
cmp
test
pop
hlt
or
xor
mov
jne
cmp
pushf
jle
iret
cld
call
sti
push
clc
cmpsb
mov
incl
jl
jge
adc
cltd
cmpsb
imul
imul
mov
shlb
mov
pop
aad
mov
sub
cmc
mov
gs
sub
cld
iret
fdivrl
aaa
ja
jae
push
fbld
sti
sti
jl
cmp
popf
jae
jae
int3
cltd
cltd
xor
into
mov
jno
popf
cld
test
adc
pop
les
fwait
sub
paddusb
pushf
stc
sarb
mov
pop
push
jp
cld
outsl
pop
insl
cmp
inc
fisubrl
jns
stc
xor
sbb
out
lahf
cld
and
cmp
sahf
cli
scas
lahf
mov
ficoms
jo
in
xchg
cmp
cli
test
pop
cli
out
aas
mov
ljmp
lret
test
iret
jle
lret
jg
je
lods
scas
clc
stc
mov
je
xchg
daa
jl
shlb
xchg
fidivrs
repz
jp
int
in
stc
out
mov
jae
insl
mov
addr16
mul
repz
js
aaa
xlat
push
mov
cmpsl
sbb
xchg
mov
mov
pop
cmpsl
jl
aam
jle
out
dec
stc
out
jg
push
pop
jnp
cld
pop
mov
mov
jns
mov
jp
test
clc
in
int3
push
cmp
sub
in
xchg
ret
in
cmp
lods
jnp
mov
cmpsb
sarb
lahf
gs
inc
iret
jnp
sar
sbb
xlat
sar
jle
lods
sti
pusha
out
lds
mov
sti
jg
pop
out
jl
cmp
jmp
fisubl
out
cmpsl
mov
andl
mov
mov
aas
filds
aad
mov
mov
ja
out
stc
bound
dec
out
cmp
repz
out
sbb
stc
shl
mov
lahf
mov
mov
insb
mov
pop
adc
xor
mov
inc
mov
std
shll
mov
cmc
dec
pop
data16
or
mov
mov
shr
xchg
lods
mov
adcl
inc
fildll
hlt
pop
mov
mov
ljmp
or
cmp
je
dec
pop
leave
mov
xor
data16
imul
subl
iret
dec
cld
movsl
js
jae
out
adc
sbb
lock
jnp
inc
jnp
in
push
div
bound
aaa
push
sub
inc
jle
sarb
mov
div
std
neg
add
aaa
outsb
mov
scas
xorl
mov
test
jl
and
xor
add
rolb
or
int
xor
stos
and
xchg
sub
loopne,pn
loope
or
outsb
sub
sub
mov
and
dec
jbe
outsb
inc
orb
in
or
inc
jb
loop
add
jl
push
jge
pop
addb
je
insl
inc
jle
push
cmp
and
cmc
lret
push
fidivrl
pop
push
in
hlt
jno
add
shr
jmp
xor
add
or
jmp
xor
xlat
jns
insl
shl
hlt
mov
rolb
lcall
mov
xchg
pop
repz
or
pop
mov
or
fwait
pop
jle
in
arpl
and
sbb
nop
jb
dec
mov
in
jo
push
fcmovnbe
jo
xor
loope
es
xor
movsb
mov
hlt
push
mov
sub
test
jg
cltd
jge
cmp
xchg
mov
cmp
inc
fbld
pop
mov
popf
outsl
sbb
pop
jmp
std
ficomps
imul
pushf
or
out
enter
std
xchg
out
cmp
aas
xor
cmp
push
push
into
push
inc
sub
xchg
fadd
xor
jle
or
mov
xchg
cltd
inc
loop
mov
insb
scas
push
rcrl
out
pop
out
scas
pop
outsl
and
addr16
sti
dec
mov
insb
sti
lea
adc
icebp
test
ret
into
add
adc
add
shrb
cmp
push
leave
add
movsl
out
out
xor
rolb
push
leave
pop
out
out
dec
cmpl
jbe
xchg
sub
out
nop
jge
inc
sahf
jbe
das
sub
icebp
inc
fiadds
jmp
out
pop
fidivl
faddl
repz
xor
add
inc
cwtl
outsl
bound
test
pushf
or
out
or
inc
call
pop
mov
jecxz
jae
sahf
dec
test
into
test
xor
push
cmp
cmp
jae
fldt
leave
cmpsl
mov
sarl
shll
inc
and
pushf
mov
imul
xor
jmp
xchg
jmp
in
out
pop
or
dec
notb
dec
pop
in
rorl
xchg
cli
mov
mov
and
rorb
jle
mov
loope
jge
mov
sub
popa
or
sbb
ret
sbb
and
push
inc
inc
cs
testb
add
cld
xchg
lea
fistl
sub
inc
sub
inc
enter
decb
cltd
scas
dec
enter
out
sub
adc
out
frstor
fists
and
and
scas
xorb
lods
adc
fs
mov
outsb
adc
cmp
mov
push
out
out
out
mov
ja
or
mov
sub
sarb
and
push
into
fdivl
psubb
scas
arpl
arpl
test
sti
addl
call
cmp
xlat
out
xchg
repz
push
into
aas
add
mov
and
fldt
jg
xchg
in
subl
adc
and
aaa
cli
push
rclb
pop
mov
xchg
enter
cli
out
orl
test
push
mov
rcrl
repnz
cli
das
outsb
das
sbb
jge
fdivr
ja
fisttpll
fs
pop
call
add
xchg
jl
mov
mov
int3
adc
and
dec
ds
mov
js
mov
xor
cmp
fldl
fwait
popa
jp
cmp
jbe
sbb
cmp
cmpb
std
sbb
cli
jns
hlt
imul
jp
fucomi
cli
jne
sti
arpl
sbb
xchg
mov
outsl
mov
and
jae
cmpsb
pop
cli
pushf
loope
shr
xchg
je
repz
arpl
mov
je
in
loop
mov
test
arpl
into
xor
insb
cli
cld
fs
repnz
add
arpl
call
mov
add
sbb
clc
call
cmp
popf
jno
push
clc
sub
std
loopne,pn
cmp
leave
jbe
out
xor
and
sbb
mov
add
sbb
into
cltd
push
data16
test
inc
test
mov
sub
push
test
or
scas
aam
int3
aaa
daa
popa
push
int3
push
and
add
push
ljmp
mov
enter
pushf
int
movlps
adcb
js
cmp
mov
out
mov
jo
push
and
pop
fidivrs
or
sbb
pop
xchg
nop
outsl
jno
enter
or
icebp
fiadds
pop
out
sub
loopne
dec
mov
and
jecxz
push
push
daa
sub
and
cmp
dec
inc
jne
mov
es
sbb
in
pushf
pop
test
push
push
push
es
xor
fxch
shll
fsin
xlat
jmp
adc
mov
out
pop
insb
popl
mov
aaa
cmp
aas
imul
mov
mov
loop
loopne
cmp
pop
xchg
pop
adc
or
xchg
std
fcmovne
or
add
push
mov
loop
xchg
sbb
mov
fs
pop
clc
mov
popf
and
add
push
mov
iret
mov
or
pop
out
dec
xchg
decl
sub
jno
or
ljmp
mov
cmpsl
in
fwait
out
cmp
iret
sbbl
xlat
repz
jmp
pop
xlat
icebp
fwait
out
add
cmc
cmp
mov
ss
push
std
sbb
sbb
call
sbb
cmpsl
inc
jg
call
sbb
hlt
out
mov
cli
add
push
jns
cmc
xchg
ds
xor
jp
mov
cmp
pop
popf
repz
or
mov
cli
and
sti
jmp
sti
fiadds
std
lcall
aas
pop
inc
stos
orb
sahf
dec
adc
sub
inc
inc
push
fists
outsl
cmp
inc
cli
and
popf
or
mov
push
fistpl
repnz
jmp
jmp
loop
ss
mov
repnz
dec
dec
das
movsb
jg
or
ss
inc
jbe
xchg
cli
cmc
stos
sti
inc
stc
shll
out
repz
popa
cmp
fs
lret
iret
add
or
pusha
pop
adc
daa
jle
cmpsb
push
daa
sbb
pop
jnp
push
out
out
lods
xchg
fildll
push
bnd
xchg
inc
dec
fbstp
lahf
jb
insl
test
imul
adcl
dec
in
int3
not
test
insb
pop
cld
sahf
mov
stos
pop
pop
mov
fiaddl
aad
push
and
lcall
neg
fdivrl
xchg
jg
aas
pop
pop
xchg
ret
jo
sarl
push
iret
pop
sahf
sbb
xor
imull
pushf
das
push
stc
hlt
cmp
loop
fnsave
xchg
sbb
sbb
xchg
das
cli
pop
aaa
mov
or
lret
and
adc
outsl
cmp
xchg
hlt
pop
sti
jmp
lahf
pop
and
inc
repz
cs
mov
fists
and
in
jmp
outsb
mov
mov
jp
mov
xor
in
pushf
fidivs
mov
cld
push
mov
mov
fnstcw
jg
icebp
insb
lahf
mov
iret
aas
cs
jo
cmp
adc
repz
daa
dec
in
repz
sbb
out
cmpsb
mov
ja
sbb
inc
out
mov
sub
mul
dec
jle
add
stos
stos
out
je
hlt
and
dec
and
pop
add
fbstp
adc
mov
inc
and
add
ret
jmp
cli
sub
fistps
jo
out
repnz
gs
test
aas
lods
push
jl
inc
stos
jge
cld
xchg
fnstenv
outsl
test
fbstp
xchg
fldcw
adc
ds
into
mov
xchg
cld
push
lods
imul
jnp
sub
adc
fldl
add
call
jmp
cmp
iret
cltd
and
cmpsl
ficoml
cs
fwait
ret
and
rcrw
loopne
add
loop
dec
enter
call
aaa
sarl
out
fisttpll
hlt
out
scas
data16
cmpsl
jne,pt
xchg
sbb
je
jo
leave
pop
outsl
sarb
cmp
stos
or
aas
jb
inc
sbb
inc
sbb
data16
fxam
lret
push
jmp
out
add
rcr
cmp
push
inc
mov
into
add
cmpsb
push
std
mov
adc
divl
cmpsl
les
add
mov
lret
outsb
mov
les
or
jbe
pushf
loope
aas
push
addl
lcall
adc
xchg
pop
add
mov
xchg
fistps
fnstenv
enter
and
icebp
cmpsl
mov
mov
pop
sti
aad
cld
cli
mov
ror
xor
std
sub
cmpsl
mov
xor
fdivrs
mov
fistps
into
xor
add
add
rorb
sbb
jae
clc
lods
pusha
out
mov
out
leave
sub
lods
ffreep
and
shr
flds
or
and
ret
dec
mov
adc
enter
test
mov
xor
dec
and
popa
sub
mov
lods
fs
and
add
mov
vaddsd
inc
or
call
daa
adc
leave
into
cmp
xchg
xchg
iret
push
jnp
stos
jmp
arpl
shrl
cmp
adcb
test
lahf
bound
xchg
or
sbb
xor
or
cltd
push
pop
dec
jne
and
jns
fxch
cmp
push
cmp
cs
fisubl
or
xor
das
sbbb
pop
inc
jns
mov
enter
out
jns
push
repz
or
lcall
leave
add
mov
dec
sbb
pop
pop
pop
out
sbb
jge
imul
addr16
pop
inc
outsl
push
cmp
jle
popa
fdivl
dec
inc
clc
sbb
out
mov
aas
inc
cmp
push
cmpsb
subb
jmp
cmpsl
pop
or
nop
es
notl
pusha
jmp
sahf
or
sbb
cmp
sub
dec
subl
repnz
out
pushf
dec
xchg
imul
repnz
jo
test
cmp
sbb
cmp
inc
test
sub
cmp
jne
jnp
and
lods
insl
jns
fs
ret
lods
xor
jno
outsl
scas
lea
mov
shll
rolb
icebp
cld
int
shrl
push
pop
pop
add
xchg
icebp
clc
int
adc
jp
outsl
rolb
dec
pop
pop
cmp
dec
out
cld
leave
arpl
ret
dec
in
push
repz
jecxz
jge
mull
addr16
popa
lods
dec
fisttps
cwtl
scas
cltd
jb
cmpsb
imul
pop
mov
clc
mov
lds
rorl
jbe
lods
add
repnz
jl
sbbl
iret
jl
fiaddl
not
stc
or
ja
jns
mov
cmp
ja
mov
lods
cmp
outsb
das
xchg
lahf
stos
outsl
das
mov
dec
loop
lods
fs
push
repnz
lods
test
or
test
das
mov
dec
xor
fdivl
dec
xchg
and
cli
dec
sub
xorl
cmpsl
adc
inc
nop
cs
cmp
jl
popa
ret
das
lods
in
sub
fisubl
push
sub
add
js
fadd
xchg
nop
xchg
hlt
inc
clc
and
idivl
enter
outsl
add
xchg
mov
sbb
sub
insb
xchg
mov
pop
leave
pop
and
cmp
xor
pop
pusha
push
repz
fisttpl
mov
jmp
cli
mov
and
push
cli
and
or
test
filds
sub
jnp
loope
or
push
enter
icebp
lahf
inc
push
paddq
nop
pop
roll
lock
jmp
testb
ja
fmull
and
ljmp
mov
mov
xchg
in
or
stos
in
orl
dec
cmp
fwait
sbb
mov
fimull
push
testb
daa
dec
sti
pop
pop
dec
rcrb
pop
push
call
pop
out
xorb
fisttps
test
push
out
test
sub
mov
fwait
cmp
push
mov
cmpsl
cmp
adc
sub
push
enter
inc
push
fcoms
cmpsb
or
xchg
inc
loop
movsb
mov
or
andl
push
xchg
pop
or
push
and
mov
insb
pop
es
test
sti
mov
in
adc
cmpsb
addr16
and
iret
test
adc
inc
mov
js
scas
std
mov
negb
loopne
repz
mov
mov
adc
enter
inc
pop
add
or
add
enter
inc
clc
add
enter
decl
sub
jo
loop
movl
xchg
sbb
mov
xchg
jg
xchg
mov
pushf
call
xchg
sub
popf
shrl
push
push
xchg
push
xchg
push
xchg
sub
jne
aas
sub
and
sbb
loopne
movsb
andl
push
push
inc
in
push
popa
out
pop
fsubrs
test
pop
enter
cmp
xchg
dec
xchg
lahf
lret
add
fwait
mov
push
and
fs
movsb
adc
mov
fdivrl
pop
xchg
or
cmp
mul
jae
popf
popa
cmp
fidivrl
inc
leave
scas
mov
sahf
pop
shl
jle
int
imul
mov
cld
mov
cmc
inc
dec
pop
loopne
dec
cltd
jle
xchg
repz
pop
jge
sbb
cmpsl
daa
or
cmpsb
repnz
pop
inc
out
sub
cmpsl
pop
aas
push
inc
sub
sub
stc
ret
aam
cltd
jb
sbb
sub
lods
jecxz
lods
xor
test
xchg
cmp
or
sbb
jno
xchg
test
lret
ror
jo
jb
scas
sbb
fadds
and
xor
dec
mov
mov
add
loope
or
jb
mov
and
pop
and
and
add
bound
push
scas
pop
insb
dec
sub
sbb
das
pop
imul
imul
mov
ss
fwait
mov
pop
das
out
push
scas
pop
jg
inc
loope
adcl
fcoml
push
aaa
cld
into
xor
sbbb
int3
cmp
jge
inc
les
mov
dec
subb
push
inc
add
mov
push
xor
pop
pop
movsl
pop
out
scas
mov
push
aam
cld
pusha
enter
cmp
mov
inc
push
mov
jle
adc
mov
xchg
repnz
xlat
dec
jns
cld
xor
int
sub
test
in
sbb
sub
push
leave
in
xchg
xor
gs
mov
jle
push
adc
sbb
push
cmp
push
or
lahf
rcrb
in
push
cmc
mov
dec
pop
aam
dec
jo
js
dec
fstps
loop
sti
loop
loop
loop
lret
push
out
xchg
push
bnd
jnp
ljmp
or
xchg
int
test
test
inc
jmp
mov
int3
lret
lods
push
lret
dec
lret
cmp
test
sbb
jae
pusha
idiv
shll
jge
gs
fldenv
cmp
dec
jno
inc
les
add
cmp
xchg
aam
mov
lret
sub
sbb
or
cmpb
shrl
aaa
jp
xchg
test
scas
cli
pop
adc
push
fwait
out
xchg
adcl
add
jbe
push
xchg
call
or
sbb
adc
imul
cs
mov
xchg
bound
mov
lock
cwtl
repz
fimuls
jb
imul
jp
dec
outsb
les
lock
cmp
aam
hlt
cltd
xor
xchg
mov
sbb
inc
or
sub
sbb
xchg
cld
mov
repnz
add
mov
cs
andl
pop
jmp
cmp
push
insl
push
shlb
jb
mov
lahf
in
test
je
push
out
or
std
je
cmp
xor
or
ljmp
aad
sar
icebp
jbe
test
push
test
push
mov
in
fbld
pop
cmp
sahf
das
mov
mov
sub
test
and
and
mov
fcomps
je
lds
in
mov
sarb
jno
jnp
icebp
aad
ljmp
lock
scas
add
in
xchg
adc
mov
xchg
cmpsl
cmp
add
mov
idivl
pop
xchg
pop
inc
mov
dec
mov
and
mov
scas
inc
cwtl
test
xchg
xlat
add
ljmp
mov
push
mov
adc
cmp
roll
adc
xchg
mov
sti
mull
addr16
lahf
fldcw
out
lock
and
das
ret
pop
pop
or
lcall
mov
and
jb
dec
mov
ret
fcmovb
xchg
nop
xor
arpl
adc
push
mov
sbb
jno
xchg
pop
pop
pop
cmp
dec
mov
jge
jae
scas
mov
fbld
fmuls
xorb
push
or
sbb
dec
andb
adc
dec
test
dec
push
icebp
xchg
sub
sarl
iret
push
cld
push
lahf
out
pop
test
pop
xchg
cmp
pushf
pop
inc
push
pushf
stos
test
or
pop
rclb
dec
or
aas
shlb
das
hlt
pusha
out
subl
nop
pusha
pop
sub
sub
test
xchg
sarl
out
stc
fsubl
xor
ja
and
push
sbb
jmp
pushf
jne
inc
and
push
xor
pop
xchg
insl
pop
or
fs
test
aas
fwait
inc
pop
cmp
in
inc
cmpsb
daa
jg
add
dec
repz
pop
int
ss
xor
hlt
mov
cmp
mov
bnd
mov
xor
push
xor
or
cmp
daa
cmp
into
sbb
stc
xchg
notl
outsl
dec
jp
lcall
inc
xchg
fisubs
fcomip
out
pop
clc
out
inc
decl
jmp
shlb
ja
lcall
scas
shll
fistpll
shlb
hlt
aam
addr16
jge
push
lods
cli
cmpb
jecxz
lcall
stc
pmovmskb
mov
mov
movsb
aas
lods
and
xlat
loopne
jns
mov
fisttpll
cli
cmp
pop
inc
sahf
daa
in
int
push
sbb
lcall
hlt
loope
xchg
out
clc
cmp
push
rcr
jge
out
jg
dec
xchg
pop
xchg
fcoml
xor
lret
mov
sub
cli
push
cmp
cmpb
cmpb
frstor
addr16
pop
outsl
inc
aas
fadds
mov
std
push
add
inc
add
add
add
xor
cli
loope
hlt
and
inc
sbb
xor
insl
inc
aas
fiaddl
mov
gs
pop
call
mov
mov
or
arpl
xlat
and
lods
or
jae
out
push
stos
mov
sbb
out
adc
movsl
inc
pop
add
push
push
and
outsl
xorl
insl
push
frstor
ret
pop
cmp
lret
ror
push
jl
scas
sbb
cmp
in
lcall
cmpsl
iret
mov
call
cli
jp
mov
cmpsl
popa
or
mov
loop
cld
sub
pop
dec
inc
lret
cs
inc
jns
and
jne
cmc
in
shl
mov
insl
and
jecxz
in
aam
mov
imul
mov
cli
push
sbb
popa
inc
fiaddl
pop
stos
xchg
in
xorl
stc
adc
cmc
lret
sbb
xchg
inc
jns
jmp
int
shrb
jp
jle
xlat
cmpsl
shrb
shl
repnz
sbb
in
jne
inc
lcall
cmc
xlat
stos
loope
jns
and
aaa
scas
push
jbe
data16
sbb
cmc
push
jmp
enter
loope
jns
xchg
ss
clc
push
pop
std
dec
lret
fisubrl
cmc
cmc
fldt
pop
leave
xchg
xor
sbb
mov
lret
xchg
mov
popf
cli
repz
int3
mov
jno
jle
sbb
shrb
and
sub
jb
rep
aam
sub
push
test
in
cmpb
in
shrb
popl
xchg
or
leave
dec
lcall
cli
fisubl
mov
xor
ror
push
jl
jg
fildll
or
mov
add
fsts
xchg
data16
loopne
mov
fs
push
adc
scas
or
std
xor
rcr
mov
sbb
inc
jns
and
int
cld
in
sbb
inc
xor
test
mov
mov
sbb
out
push
pop
mov
push
cs
scas
shlb
jmp
fsubl
out
pop
xor
loopne
xorl
aas
mov
repnz
sub
sbbb
pop
in
mov
cs
jbe
cmp
xor
jbe
insl
aam
sub
xchg
lea
sbb
xchg
sub
mov
add
sbb
inc
jns
and
sbb
sbb
xchg
in
ljmp
fisubrl
iret
shlb
mov
aad
test
mov
add
xchg
push
or
imul
fsubl
outsb
pop
mov
cld
push
loopne
inc
pop
faddl
ss
jnp
sbb
inc
adc
add
mov
scas
pop
mov
add
push
or
cmp
testl
add
or
cmc
push
insb
dec
xor
or
es
in
imul
mov
fisttpl
js
and
insl
xor
pop
rorl
xchg
imul
xlat
jecxz
mov
xchg
in
inc
pop
rolb
mov
in
lock
xor
aaa
sub
inc
ss
ficoml
cld
in
sbb
inc
xor
test
repz
or
imul
clc
push
push
cmpsb
cmp
mov
clc
jmp
filds
cmp
dec
mov
enter
mov
ss
fistps
adc
fistps
nop
inc
ds
mov
aas
out
xor
xlat
ss
sbb
aad
in
fucomip
jmp
push
cli
jp
test
and
pop
push
movsl
decl
call
jp
lret
gs
out
fisubs
or
enter
xchg
inc
call
scas
push
movsb
cltd
xchg
scas
loope
jns
cmp
into
sbb
stos
sbb
mov
popf
repz
jne
out
aaa
loopne
inc
pop
xchg
sbb
loope
jns
nop
arpl
fbld
sub
mov
in
jge
fistpll
nop
jnp
jno
mov
mov
stc
into
pusha
lahf
pop
xchg
xchg
fisubrl
dec
mov
cmpsl
pop
pop
sarl
mov
xorb
mov
xchg
in
inc
pop
stos
add
and
jmp
daa
pop
cmpsl
mov
cli
xor
dec
jmp
loopne
insb
sarb
idivl
dec
mov
pushl
data16
vmread
sub
fnstcw
pop
cld
pop
std
jp
imul
cmp
dec
mov
xchg
shll
push
fldlg2
and
mov
loopne
xorl
icebp
inc
ds
data16
jb
lcall
jmp
pop
cmp
stc
cmc
imul
mov
lock
addr16
cltd
out
shr
sbb
nop
out
shll
push
dec
adc
push
frstor
sbb
mov
cld
adc
sbb
mov
sbb
sbb
jge
inc
mov
sti
xor
movsb
fdecstp
sbb
pop
ficomps
xor
mov
imul
repnz
xchg
inc
jns
pop
rcrb
mov
cmp
icebp
xchg
pusha
mov
inc
fiaddl
sbb
mov
add
mov
in
inc
mov
cmp
inc
lcall
cli
pop
cmp
fisubrs
in
aam
movsl
pop
cmpsl
add
rcr
or
fdivr
shl
mov
call
lahf
or
popa
or
cli
push
arpl
xchg
fcomps
aam
movb
cmp
jns
adc
dec
adc
maskmovq
mull
sti
mov
inc
xchg
loop
push
mov
cmp
imul
jae
insl
add
xor
push
xor
cmp
les
push
inc
sub
mov
cwtl
and
xchg
adc
mov
xlat
loope
add
and
mov
imull
pusha
lods
ja
ret
test
mov
repnz
in
mov
dec
popf
jb
sbb
xor
in
cmp
push
test
jno
in
enter
push
int
les
pop
inc
jl
subl
pop
aaa
xchg
adc
cli
cmp
sbb
jo
add
sub
jmp
arpl
add
shll
repnz
fidivrl
push
mov
out
xchg
sub
jmp
shl
jle
inc
sub
in
incl
jns
push
push
jns
das
shlb
fiadds
sbb
jecxz
xor
mov
or
mov
stc
add
mov
cltd
stos
mov
xor
pop
jmp
scas
ret
in
das
arpl
inc
dec
gs
jne
fcmove
ret
add
xchg
test
call
cmc
arpl
pop
nop
jg
jno
jl
stos
add
pop
mov
clc
lods
test
jno
push
aad
dec
out
push
mov
outsl
pop
test
dec
push
aaa
jmp
out
hlt
fnstcw
fistpl
test
rcl
insl
pop
mov
add
mov
jmp
push
inc
or
aam
enter
cmc
mov
lds
or
push
out
clc
pushf
pop
or
pop
loop
push
test
mov
xchg
lcall
aad
shll
pop
aaa
das
push
sti
push
xchg
sbbb
hlt
mov
and
cs
cli
fildl
cmc
xchg
jno
mov
mov
sbb
lret
sbb
mov
pop
mov
leave
std
lea
sbb
pop
orb
mov
jb
jle
or
sub
lret
mov
xchg
aaa
sub
xor
loope
dec
or
aad
mov
insl
add
dec
sahf
ret
mov
neg
mov
jno
icebp
add
fisttpll
pop
clc
loop
arpl
adc
mov
push
or
in
pop
int3
aad
dec
inc
mov
outsb
add
add
incl
pushf
cltd
ret
and
aaa
sub
push
jae
lods
fistps
jecxz
sbb
push
sub
push
sti
imul
fcomps
jge
std
sbb
push
stos
mulb
sbb
iret
aaa
testl
cmp
mov
pop
aas
int3
jne
jno
xchg
jbe
stos
xor
sub
adc
ljmp
ret
jne
jo
cmpsl
cmp
add
adc
and
pop
stc
sbb
shl
repz
xchg
fbld
ljmp
aam
jle
stos
add
cmp
push
mov
inc
jbe
ffreep
loope
add
jp
aam
enter
inc
xor
fcoml
lret
arpl
outsl
adc
mov
pop
lods
incb
pop
lret
pop
insb
mov
cmp
aam
scas
jo
jg
pop
mov
je
dec
out
sti
and
jmp
xchg
lcall
inc
adc
xor
cmp
cmpsb
idivb
scas
xchg
dec
outsb
fwait
jl
ljmp
mov
sbb
leave
adc
xor
shll
cmpsb
addr16
repz
dec
iret
jne
test
xor
sahf
mov
xor
jp
std
push
mov
aaa
addr16
loopne
mov
fbld
jle
cli
jge
paddusb
jne
pop
pusha
pop
and
outsb
es
insl
mov
add
mov
cli
ja
dec
pop
add
push
ret
hlt
aas
pop
cli
ja
dec
jmp
mov
aas
cs
scas
xchg
cwtl
aaa
dec
dec
decl
dec
dec
cmp
adc
mov
mov
jg
cli
call
cli
lahf
push
lret
hlt
jg
sub
sar
jns
dec
incl
dec
jmp
mov
call
mov
pop
cmpsb
call
xor
ja
xor
fistps
hlt
jmp
decl
mov
jge
dec
lcall
xlat
xor
out
test
cli
lcall
bound
aad
sbb
lahf
push
fnstcw
arpl
repnz
cmp
pop
mov
cmc
je
icebp
aam
xchg
iret
sbb
or
push
mov
ja
and
lret
mov
adc
shl
push
movsb
xchg
repz
add
pop
lods
incl
dec
lods
outsl
pop
fstpl
not
jno
pop
nop
mov
sbbb
mov
insb
jnp
or
fwait
cmp
cmp
stos
add
mov
addr16
shl
lods
into
mov
sar
insb
cli
mov
out
inc
mov
inc
mov
cmp
addr16
pop
mov
xchg
arpl
ljmp
mov
jecxz
jecxz
push
das
sbb
mov
fprem
mov
das
sbb
hlt
inc
call
pop
xchg
incl
jmp
xlat
lret
incl
decb
lret
lret
jg
xchg
lea
xchg
jp
sbb
popa
das
mov
aam
dec
push
idivb
lahf
dec
aad
sub
dec
aas
int
pop
sbbl
loop
imul
adc
mov
clc
fs
out
and
jl
adc
jae
xor
cs
mov
cmp
and
loopne
push
sahf
cs
out
and
jge
lret
repnz
mov
aaa
mov
xor
jno
cmpsl
sahf
jmp
lods
cmc
fs
stos
fbld
pop
iret
fcmovu
pop
scas
cli
rcrl
jb
enter
push
mov
cltd
pop
cmp
loopne
sarb
ja
sbb
iret
xor
icebp
jle
divl
iret
repz
inc
aas
movb
add
cmp
push
out
repnz
aas
inc
cmp
mov
xor
mov
jo
sbb
sub
xchg
push
mov
sbb
stos
mov
loopne
or
inc
in
imul
sarl
outsl
insl
pusha
jp
mov
xchg
mov
mov
xor
outsb
mov
jne
jo
jle
std
add
outsl
jle
dec
or
fimuls
incb
loop
jle
iret
mov
sub
xchg
mov
stos
int
icebp
dec
sbb
stos
mov
push
mov
aas
and
jmp
jbe
jecxz
sar
sti
aam
pop
out
fstpt
pop
ds
stc
in
in
mov
jae
add
ja
xor
and
clc
popf
adc
out
aas
or
sbb
add
mov
jne
pop
mull
iret
add
cmc
scas
or
sub
cmp
fld
leave
dec
pop
push
hlt
scas
mov
cmp
leave
jns
nop
icebp
mov
jp
push
sub
in
in
add
jmp
loopne
cmp
addb
pop
in
mov
push
rol
ret
push
lock
in
jg
xchg
out
pop
insb
aas
scas
xor
cmp
or
mov
lret
pop
lret
sub
or
jae
xchg
xchg
add
stos
xchg
stos
in
cmp
lds
pop
fidivl
out
pop
stos
ficompl
dec
scas
inc
out
cwtl
ljmp
scas
push
mov
jo
dec
mov
sub
iret
ret
nop
fcmovu
ret
mov
cmpsb
mov
cmp
insb
dec
jg
icebp
pop
outsb
popa
xchg
jg
push
aas
test
aas
clc
adc
mov
lock
gs
mov
lock
decl
cld
pop
xor
pusha
das
push
lahf
jg
mov
mov
sbb
adc
cmp
jle
jge
repnz
jns
mov
jecxz
or
inc
mov
and
or
jb
ljmp
in
je
mov
push
cmc
outsb
jns
pusha
pop
xchg
incl
out
stc
scas
and
out
jl
popa
outsb
pop
in
psllq
add
cld
jnp
jns
add
inc
mov
xchg
xlat
add
xor
ret
add
int3
loope
add
sub
jle
cs
loope
sbb
aas
cmp
int
outsl
mov
gs
mov
std
mov
stos
fisttps
cvtdq2ps
aad
xlat
mov
je
xchg
xor
cmpsl
testl
fucomip
sbb
aam
inc
pop
sti
pop
sbb
in
jg
xchg
int
daa
inc
rcrl
mov
ljmp
int3
lcall
stos
sub
mov
mov
js
xchg
in
imull
cmc
push
mov
mov
testl
idiv
sahf
mov
insb
mov
idivl
mov
insb
mov
imul
mov
fucomi
cmp
mov
ja
and
out
fcmove
idiv
data16
mov
push
fmulp
idiv
push
xor
les
or
iret
and
pop
or
fnsave
fldl
icebp
adc
out
cmp
mov
adc
push
loop
mov
imul
out
cmpsb
incl
aas
sbbl
sti
sub
mov
leave
jg
cmc
nop
divb
mov
cmpsb
jg
in
in
psubsw
negl
jno
test
adc
mov
outsb
into
es
outsb
andl
mov
xor
lods
fstpl
push
es
outsb
das
ss
jnp
mov
mov
in
xchg
outsb
jecxz
lods
fnstsw
arpl
ss
mov
fistpl
outsb
cmc
xor
outsb
int
outsb
xlat
aam
mov
mov
ds
cmc
jl
ljmp
sbb
stc
lahf
sbb
xchg
jp
loopne
xor
divb
push
xorb
repz
xor
dec
nop
scas
sbb
aad
jae
pop
orb
xchg
ret
or
xchg
std
daa
sarl
in
jo
sbb
decl
jo
push
xlat
cs
mov
ret
or
push
sbb
inc
mov
ficomps
std
outsb
sbb
outsl
dec
sub
lods
mov
stos
notl
sbb
push
pop
sub
jecxz
js
sbb
lret
fnstcw
push
inc
das
jcxz
bnd
scas
into
pop
into
aad
in
mov
xchg
popa
mov
cmp
mov
lcall
cmp
pop
into
in
pop
into
in
bound
xchg
sti
mov
xchg
stos
jne
mov
pop
pop
mov
in
sub
jge
mov
mov
ljmp
pop
mov
popf
xchg
arpl
cwtl
fisttpll
in
sbb
in
cld
pop
sub
out
out
or
or
jnp
sbb
icebp
cmpsl
sub
pop
jmp
ret
scas
pusha
stc
mov
mov
xor
mov
test
ljmp
sbb
mov
clc
pushf
mov
cs
pop
and
lret
loope
add
pop
mov
sahf
pop
mov
cmp
cmp
jno
xchg
push
in
cmpl
scas
out
push
add
outsb
incl
jmp
repnz
mov
faddl
hlt
or
or
mov
out
stc
xchg
mov
pusha
mov
bound
or
lret
mov
add
jge
int3
pop
mov
enter
adc
pop
aaa
xchg
adc
cli
cmp
fisubs
ja
sti
cmp
inc
push
mov
repnz
test
inc
lods
sahf
mov
mov
jmp
jg
mov
cmp
outsl
aad
adc
mov
aas
jo
pop
out
jne
mov
cld
repz
mov
sub
pcmpeqb
dec
loop
std
enter
dec
xchg
mov
mov
sub
lods
sub
daa
xchg
xlat
mov
xchg
xlat
cmpsl
sub
pop
xchg
mov
clc
je
lcall
mov
sub
ljmp
inc
pushl
out
mov
into
push
jmp
mov
jbe
xchg
adc
fldenv
aam
dec
popf
pop
xchg
hlt
scas
xchg
fs
jb
dec
das
scas
das
scas
jg
mov
and
cld
sub
js
lahf
lcall
hlt
jecxz
mov
sub
pop
or
xchg
cmp
scas
out
jg
hlt
jnp
xchg
and
fnstcw
pushf
pop
orb
int
jg
loopne
scas
data16
mov
shlb
sti
add
ds
iret
xlat
jmp
cmp
dec
mov
sub
and
ja
ljmp
push
lods
rep
sub
cld
fisttpl
fistpll
cli
cmp
jmp
xchg
ljmp
clc
pop
int3
decl
cmpsb
aas
pop
leave
lods
es
aas
pop
sar
push
fdivr
dec
nop
iret
cmp
pop
mov
out
mov
pop
loopne
mov
push
mov
xor
loop
mov
or
loope
add
add
pop
pop
loopne
sub
pop
add
xor
cmpb
cli
inc
mov
mov
sub
jl
xor
lods
inc
std
lods
mov
int3
or
loop
bnd
push
xor
jecxz
push
mov
fwait
mov
push
gs
xchg
hlt
jge
mov
push
and
add
mov
pop
jle
jp
std
jno
mov
std
icebp
sti
push
push
out
sti
ss
les
fwait
push
jmp
sub
stos
inc
xlat
mov
std
pop
pop
iret
ss
pop
fisttpl
add
jne
pop
and
or
jl
lret
mov
test
lret
sti
stos
jno
insb
xor
jge
aad
outsl
mov
test
push
aaa
pop
sti
stos
jno
insb
xor
jge
xor
test
sbb
aaa
pop
cmp
imul
or
jge
xor
pusha
cmp
sbb
cld
repz
add
sbb
scas
lods
popa
std
repnz
imul
sbb
pop
or
inc
xchg
mov
xorl
cmp
pop
inc
nop
scas
cli
sbb
ja
xor
outsb
std
sub
xlat
mov
je
ret
int
call
mov
cmc
pop
mov
fcoml
xchg
aas
mov
mov
clc
rclb
aas
mov
rol
clc
pop
push
aas
and
fistl
pop
lahf
or
and
arpl
jbe
outsl
dec
sub
mov
jg
jl
loop
inc
cmp
push
ss
mov
icebp
jnp
pop
xchg
fbstp
sahf
rcrl
clc
dec
pop
lret
in
rol
icebp
std
mov
imul
inc
mov
or
sti
enter
fldl
and
sti
jge
cmp
dec
sarb
cmc
or
xlat
jb
jg
into
ret
addl
pop
lock
push
out
inc
add
xorb
dec
minps
ja
mov
or
cmc
pop
mov
cs
out
add
adc
mov
sub
mov
jns
fstpt
popf
ret
jne
jo
push
xchg
adc
fcmovu
push
cmp
clc
sbb
jmp
mov
out
insb
cs
fidivs
ss
std
int
and
xorb
hlt
arpl
leave
pop
pop
in
xlat
jno
pop
xorb
mov
cmp
decb
jo
xlat
loope
adc
iret
fldcw
sbb
mov
in
adc
cmp
jo
in
mov
daa
dec
and
adc
jg
lock
cmp
jecxz
fbld
call
ret
fildl
cmp
stos
jno
lahf
add
inc
jl
sbb
cli
jne
fidivrs
add
jl
inc
outsl
and
sti
stmxcsr
pop
pop
sbb
xor
sbb
add
sub
add
jecxz
lret
cmc
clc
fisttpll
out
stc
xchg
orb
fiadds
jp
out
ret
repnz
mov
add
jecxz
jp
cld
repz
int3
into
js
aam
ljmp
mov
jge
sub
adc
in
mov
sahf
pop
decl
lock
stos
in
push
xchg
out
inc
mov
add
int
lods
push
loopne
inc
jge
clc
popa
les
jno
test
aas
mov
out
aas
add
xchg
lds
cmp
mov
cmc
xlat
cmp
divl
in
insb
pop
loope
pop
mov
out
jnp
enter
das
lahf
sbb
or
inc
mov
ljmp
int3
addr16
fnstcw
sbb
pusha
pushf
jb
outsb
adc
aas
ror
lea
pop
push
aaa
and
or
mov
shlb
int
add
fs
pop
pop
loopne
cmp
push
loope
add
push
aaa
sub
inc
cmp
ret
flds
dec
sbb
sub
jne
mov
push
xchg
adc
cli
outsl
pusha
jecxz
ds
iret
mov
jo
ficompl
mov
lea
es
and
inc
out
mov
out
dec
xchg
sahf
dec
mov
pop
dec
lahf
inc
cmp
in
repz
xchg
jge
push
jge
lret
sbb
int
icebp
int
es
fcompl
std
and
lods
mov
jg
repnz
cmpsb
jl
cmp
roll
aad
xchg
out
sar
cmp
cli
out
dec
sub
sti
add
cmp
idiv
or
scas
cmc
inc
jl
or
dec
fdivr
pop
in
test
hlt
in
dec
scas
lahf
cmp
jb
sbb
cmpb
in
fs
repz
cltd
das
stos
cmc
lods
push
xor
jae
mov
jo
sbb
pop
sbb
loope
add
repz
popa
arpl
jno
cs
xorb
pop
aad
push
call
mov
adc
js
mov
scas
pushl
mov
aas
add
jl
add
jle
pop
pop
loopne
jo
ja
jo
add
outsl
fcmovb
aad
xorb
cmp
mov
ljmp
sbb
iret
or
dec
out
jg
lret
cmc
stos
in
call
pop
out
aaa
and
aas
ret
aas
or
dec
sbb
and
mov
rorb
push
cmpb
data16
loop
into
call
loopne
cmp
addb
leave
loope
jnp
out
lahf
jb
mov
mov
ret
push
or
outsb
out
pop
cmpb
std
in
int3
dec
call
enter
sbb
xor
jp
scas
inc
jge
inc
push
outsb
das
xchg
sti
ss
sti
ds
jge
jbe
jmp
shlb
lea
cs
ret
jne
jo
jo
add
pop
or
into
cld
mov
fwait
add
mov
shrb
or
scas
out
cld
xlat
aaa
loop
sar
mov
enter
add
clc
pop
loopne
outsb
shl
repnz
mov
repz
pop
lret
xlat
mov
xorb
mov
psubusw
lea
gs
add
ja
push
jg
scas
insb
and
jne
outsl
stos
add
jecxz
jbe
negb
sarb
iret
loope
out
sub
push
std
jge
sub
aaa
jnp
xor
jnp
xchg
push
cmc
incl
xlat
stos
subl
ljmp
negb
mov
test
push
jne
jae
mov
std
sbb
jle
mov
ja
jle
lret
rcl
cmp
sti
aas
lcall
mov
pop
xor
sbb
std
add
jg
pusha
mov
push
repz
cmpsl
sub
dec
test
pop
lahf
into
aas
mov
or
cmp
cmp
cmp
add
iret
stos
xor
jmp
pushf
jno
jp
lret
pop
das
cmc
mov
stos
repnz
sbb
rorl
jnp
fisubrl
cmpb
add
insl
out
pusha
sti
sarb
jge
or
dec
mov
es
notl
adc
pop
jmp
adc
cmp
rep
fcomps
inc
pop
xchg
mov
stc
jg
mov
sbb
ljmp
aaa
es
cld
mov
mov
fs
fwait
xor
mov
jnp
xor
sbb
fistpll
jg
jecxz
cmp
pop
pop
mov
jb
sbb
shr
ja
stos
sbb
pop
sbb
rorl
idiv
xchg
add
int
fiaddl
popl
xlat
iret
loope
add
sbb
xchg
fstpt
adc
fdivrs
incb
pop
subb
xchg
or
jecxz
decl
into
jmp
sar
leave
daa
mov
push
incb
add
and
ja
daa
in
out
enter
sub
std
add
pop
cli
or
cmpsl
sti
or
xor
cli
in
addr16
pop
repz
aas
cs
xchg
bound
pop
push
mov
aaa
outsb
out
xlat
pop
xchg
ja
nop
jge
rcll
roll
scas
mov
das
das
push
mov
enter
scas
std
bound
out
in
pop
std
add
testb
push
xchg
adc
repnz
push
cmc
jmp
addr16
and
mov
jg
dec
push
fildll
shrb
fwait
outsb
push
iret
imul
notl
icebp
iret
fsubrl
pop
cli
shl
jmp
and
out
pop
punpcklwd
test
shl
fistpl
mov
pop
mov
pop
mov
cli
aad
dec
mov
subl
pop
scas
pop
mov
loop
dec
int3
dec
sub
hlt
adc
aad
arpl
jecxz
push
icebp
mov
out
cmp
incl
rcrl
sbb
cli
adc
cmp
sub
outsl
loop
decl
daa
ss
insl
scas
pushf
fmull
pop
cmpsb
out
push
repnz
jge
cmp
enter
aaa
decl
jo
push
outsb
adc
mov
jo
lret
cmp
stc
das
sub
cs
nop
lahf
lahf
jae
pop
nop
outsl
lock
mov
lock
out
mulb
add
cmp
ja
addr16
imul
push
movsl
cmp
mov
repnz
jmp
sti
dec
bound
shll
push
xor
mov
xchg
ja
mov
stc
pop
xchg
jg
push
dec
aas
cmpl
fdivr
out
cmc
jl
clc
outsl
mov
fdivs
mov
xchg
jae
dec
in
nop
adc
orb
nop
push
ret
sets
jg
std
std
div
jg
std
std
div
jmp
iret
sbb
clc
or
imull
iret
inc
dec
test
xchg
adc
sbb
cmp
lret
les
mov
test
or
adc
add
xor
popf
and
es
push
sub
push
sub
lods
leave
sbb
aas
iret
pop
aam
push
pop
sbbl
arpl
sub
sub
movsb
hlt
cwtl
mov
mov
outsl
test
or
out
aaa
mov
into
insb
aam
sub
int
ja
push
bound
cmp
in
adcb
lds
pop
push
stos
shr
stos
das
or
std
adc
sbb
orb
das
push
enter
enter
push
add
xchg
xor
loopne
cli
mov
test
cld
subb
and
push
les
lock
adc
dec
decb
aaa
add
add
int
mov
leave
ljmp
mov
movsb
lods
shlb
rolb
or
push
loop
aam
jge
cld
mov
xchg
movsl
movsb
bnd
pop
push
lds
fucomip
or
and
pushf
pop
dec
test
orb
aaa
ret
aas
dec
push
jp
jb
mov
mov
imul
popa
rolb
mov
jl
dec
enter
and
daa
push
lea
xchg
test
dec
aam
mov
and
aaa
call
insb
adc
out
xchg
dec
lret
mov
imull
movsb
shrb
ret
push
and
pop
xchg
cli
mov
pop
es
cmpsl
scas
add
adc
cmp
xor
inc
fs
adc
ds
ljmp
push
push
inc
inc
cs
shll
lahf
cmpsb
jne
rcr
jmp
push
fisttpl
xor
adc
sbb
xchg
lds
in
adc
xchg
insb
outsl
dec
mov
dec
insl
repnz
push
jae
xor
aas
and
cmp
sbb
pop
sbb
xchg
fcmovb
cwtl
fmull
aas
ss
add
gs
aam
test
push
jne
ljmp
stos
sub
insb
pushf
inc
mov
add
scas
pop
sub
cmp
jnp
push
fs
and
lock
mov
cmpsl
pop
sub
jo
aas
sbb
lcall
pop
mov
test
outsl
mov
loopne
sub
dec
pop
cmp
dec
dec
mov
call
xchg
sub
out
inc
push
and
jbe
popf
test
and
aad
je
lods
xchg
or
repnz
faddl
xor
andl
aaa
and
jle
lock
jle
outsl
ja
pop
inc
sub
fldenv
jl
stos
leave
inc
push
mov
sub
stos
sbbb
js
mov
sbb
or
cmp
out
movsl
push
cmp
pop
enter
xor
cmp
xor
mov
mov
jg
scas
inc
mov
jge
test
cmpsb
push
push
mov
in
out
mov
inc
lret
cmp
pop
and
and
push
inc
mov
ret
shrl
mov
test
inc
into
es
jle
lea
repz
add
jl
dec
insl
xchg
cli
xchg
imul
je
test
xchg
stos
mov
pop
aam
push
lds
mov
lods
dec
mov
dec
jmp
or
adc
push
mov
pop
dec
inc
jecxz
add
xchg
jl
in
push
loopne
orb
lods
aam
outsb
inc
cmpsb
add
sub
and
loop
int3
xlat
add
pusha
sbb
mov
lret
mov
sub
in
and
cwtl
int
popf
xor
push
shrl
or
mov
and
adc
xchg
and
mov
dec
mov
push
jle
push
inc
cmp
repnz
pop
sbb
xor
outsb
gs
lea
dec
mov
in
test
pop
mov
nop
rcrl
cmpsb
insl
into
inc
repz
insb
popf
cmp
scas
aaa
rclb
insl
push
push
in
pop
push
rcrb
push
cli
pushf
int
rorl
dec
add
mov
rorl
xchg
inc
inc
xchg
pop
inc
imul
rcrl
mov
ds
push
mov
div
addl
mov
jp
andl
push
insl
sub
pop
fdivrs
cmpsb
fisttpll
mov
in
popf
aaa
dec
cmpsl
lds
pop
in
inc
imul
addr16
in
fmuls
test
fdivl
mov
lea
stc
pop
or
ret
mov
cs
es
push
in
push
test
xor
nop
lea
lea
cli
mov
jbe
std
push
jno
pop
stos
sub
sbb
push
sub
scas
popf
sub
lea
sbb
pop
jno
inc
cmpsl
jo
fldl2t
shrl
jb
mov
stos
mov
rcl
daa
inc
testb
xlat
adc
mov
lods
or
adc
sahf
in
xchg
loopne
or
imul
mov
add
pop
rcr
mov
jmp
ss
enter
std
out
and
mov
or
pop
ljmp
xchg
ja
jp
push
jo
xor
dec
or
shlb
cmovae
lcall
loopne
mov
and
jl
test
xor
mov
adc
xor
dec
dec
dec
inc
adc
pop
adc
xchg
iret
mov
arpl
cmc
lret
push
sub
dec
imul
push
outsb
arpl
sbb
cmpsb
and
pop
inc
repz
mov
int
aad
jno
std
xor
aam
or
and
movsl
test
sub
pop
das
jne
in
dec
push
push
and
lahf
mov
add
cmp
xchg
ret
dec
push
int
jle
mov
sub
lds
stc
lcall
mov
test
shrb
pop
adc
sarl
mov
pop
xlat
xchg
ljmp
femms
add
fcmovb
jl
mov
push
ljmp
push
loope
ss
mov
fsubrl
sub
ret
inc
imul
inc
pop
or
cwtl
dec
gs
or
test
movsb
icebp
inc
mov
mov
shll
xchg
hlt
loop
orl
dec
rorl
inc
imul
inc
cmc
loopne
out
mov
xchg
repnz
cmp
cmp
out
fisttpll
fsubl
rcl
loope
inc
adc
push
inc
xchg
and
xchg
dec
pop
ss
push
lahf
or
jo
ret
shr
push
cmp
sub
hlt
shll
jge
add
mov
jae
mov
push
mov
rcll
push
dec
push
das
sbb
xor
jne
jmp
stc
xchg
inc
cmpl
test
jl
xchg
adcb
add
lret
fstpl
xchg
mov
dec
push
fiadds
ret
xchg
adc
mov
cmc
sub
rcl
out
inc
fists
mov
dec
aam
sub
bound
lds
inc
cmpsl
mov
lret
and
adc
push
pop
rcll
ret
xor
pop
push
push
mov
je
inc
fsincos
mov
repz
popf
mov
pop
adc
std
cmp
cmp
xchg
fldl
mov
stos
insl
movsl
push
jno
out
or
adc
sbb
mov
jecxz
ret
pop
loope
push
xchg
mov
sbb
ljmp
or
add
sub
orl
pop
repnz
outsb
shlb
push
sbb
push
jmp
movsl
or
mov
push
push
pop
add
mov
sub
sub
sub
xchg
int
js
out
jle
in
lods
out
cltd
movl
or
andb
and
mov
and
loopne
popf
xor
leave
outsl
mov
cwtl
xor
fistl
jl
sub
fstp
movsb
test
rcll
iret
outsb
imul
fdivl
stos
inc
jns
xchg
ljmp
push
xchg
jmp
stc
push
xchg
xchg
jnp
pop
and
test
test
pushf
or
mov
add
inc
sub
mov
pop
pop
stos
leave
lret
xor
popf
sbb
ljmp
in
sbb
mov
ss
mov
add
sub
mov
adc
pop
mov
pop
imul
mov
fdivl
sbb
out
popf
adc
xchg
fdivr
pop
stos
mov
push
shrb
xor
lods
in
push
lods
hlt
call
jl
and
mov
or
fs
fiaddl
lret
in
or
sub
into
adc
mov
or
jbe
loop
test
lea
and
fistpll
push
addr16
cltd
push
sub
mov
movsb
and
pop
inc
out
je
lcall
cmp
std
ja
adc
add
insb
xchg
fucom
mov
sub
lret
shlb
cmp
push
nop
in
xchg
mov
sarb
es
adc
outsb
push
cmp
jb
xchg
pop
lret
popf
mov
adc
jb
call
adc
jge
cmp
or
xchg
into
xor
in
xchg
movsb
loopne
push
sbb
add
cmp
clc
dec
test
xor
inc
xor
jo
out
mov
icebp
fistpl
mov
jl
test
mov
daa
xor
xor
movsl
mov
mov
fneni(8087
aam
push
mov
stc
inc
pop
jnp
cmp
cmp
test
mov
out
push
jp
popa
xor
fwait
imul
mov
sbb
xchg
fsub
outsl
les
cmp
lods
cld
add
jmp
gs
mov
cmp
mov
pop
lds
jp
jb
pop
jbe
mov
pop
pop
mov
ficompl
imulb
inc
pop
xchg
jmp
or
ljmp
mov
aas
jge
arpl
out
into
cmp
call
scas
xchg
xor
test
jne
dec
dec
and
cli
xchg
cwtl
cmp
lret
fisttps
sub
mov
fdivl
movsl
jg
lret
std
jecxz
dec
jp
lds
scas
xchg
push
ret
hlt
aam
cltd
push
pop
cwtl
cmpsb
cs
mov
ljmp
div
aad
dec
mov
ffree
xchg
call
into
int
adc
jmp
fisubrl
aas
loope
pop
pop
pop
into
sub
out
mov
push
jmp
nop
out
bswap
es
lods
pop
inc
pop
repz
pop
jne
push
push
fdivr
aaa
mov
inc
enter
push
lahf
shrb
insb
lret
mov
in
mov
in
into
js
cs
data16
mov
fsub
xor
iret
outsl
cmp
jecxz
mov
xor
push
sbb
daa
xchg
inc
dec
push
sahf
pop
xor
ret
mov
xchg
dec
adc
loopne
stc
adc
fisttpl
sub
cmpb
cwtl
icebp
inc
mov
or
jo
insb
jb
adc
sahf
cld
bnd
gs
fiaddl
mov
pop
mov
add
into
fidivl
mov
push
xlat
in
sti
imul
cmp
sbb
xchg
mov
jbe
push
sbb
xlat
xor
je
push
cmp
jbe
xor
lock
lret
or
jg
lret
push
xor
clc
in
std
sti
pop
or
cli
movsl
insl
arpl
cmp
test
xor
rorb
jne
retw
pop
rol
mov
pop
fs
pop
add
aad
pop
fisttpl
out
pop
mov
subl
stos
hlt
sbb
sub
into
xchg
lock
mov
adc
mov
out
mov
in
jnp
cmp
inc
ljmp
cmpsl
pushf
sbb
shl
repnz
cmp
scas
xor
in
imul
xchg
stc
out
inc
dec
dec
in
jp
inc
lret
daa
sbb
imul
insl
xchg
addr16
pop
cmp
dec
mov
xor
jb
int3
iret
and
addr16
mov
shlb
jle
cmp
push
in
jg
mov
test
icebp
shlb
push
hlt
shrl
mov
adc
dec
sbb
clc
loop
add
jge
jl
aad
lcall
es
cltd
dec
ret
leave
ss
out
mov
pop
add
dec
and
mov
push
jmp
mov
mov
lods
insl
insl
stos
out
jne
jno
mov
jbe
sti
adc
add
or
stos
push
push
inc
mov
xorb
push
jno
lahf
popf
jae
mov
stc
popf
cmp
mov
repz
inc
mov
sbbb
jb
sub
xor
sub
fld
mov
in
ret
cmpsb
sub
call
push
in
xor
xchg
lea
sbb
push
sbb
pop
int3
ss
sbb
clc
scas
and
cmpl
ret
fdivr
xchg
xchg
cld
shl
mov
idivb
xor
jns
fsubr
mov
mov
inc
inc
scas
cmp
imul
aaa
mov
add
sbbb
pusha
and
cmp
lea
pop
xor
add
xor
hlt
and
lods
jg
shll
push
je
pusha
roll
hlt
les
test
cmp
popf
adc
or
xor
xor
mov
add
inc
mov
mov
cltd
mov
aad
lods
xchg
jmp
mov
lret
daa
xchg
jge
mov
mov
ljmp
mov
arpl
imul
fdivp
rcl
popf
jmp
cmpsb
clc
sbb
jne
scas
adc
scas
dec
test
xlat
lods
pop
mov
aaa
out
jns
rcr
sub
outsb
and
das
imul
fsts
mov
cmc
std
std
inc
jbe
mov
je
leave
insl
or
mov
sbb
fdivrl
sbb
mov
lds
aad
fimull
insb
sub
push
pop
mov
gs
jno
out
adc
lcall
ss
testl
popa
mulb
jl
rolb
sbb
lcall
cmpsl
sbb
mov
in
cld
test
lcall
ds
inc
icebp
sbb
idivb
cmp
out
in
pop
mov
divl
int3
sbb
subl
xchg
mov
enter
lods
imul
push
jbe
fdivs
add
sub
add
in
add
adc
enter
lods
lods
mov
call
adc
mov
cmp
mov
cmpsl
mov
lds
and
sbb
popf
push
inc
je
inc
fcompl
jge,pn
and
scas
nop
jge
xchg
and
dec
xchg
mov
and
jno
cmpsb
push
fsubl
sbb
jge
mov
cmp
jg
mov
leave
mov
xchg
out
inc
cltd
test
arpl
in
or
mov
call
xchg
mov
mov
out
pop
out
sarl
dec
popf
shl
push
out
cld
cli
stos
dec
das
int3
ret
das
xor
fwait
jae
cmpsb
cli
clc
dec
int3
mov
je
xchg
loop
cli
push
not
pop
rcll
aam
clc
cmpsb
cmc
ret
mov
jg
stc
lret
pushl
xlat
stc
dec
fisttpl
mov
iret
cmc
lret
aaa
mov
mov
jge
in
out
xchg
fdivp
push
data16
in
fstpt
inc
daa
cli
mov
idivl
xchg
mov
in
or
cli
sbb
out
ds
icebp
insl
mov
sti
and
frstor
imul
cli
stos
aas
les
aas
out
stos
out
xor
xchg
xlat
sahf
sub
sbb
xchg
jmp
jbe
cmpsb
dec
test
cwtl
lahf
xchg
xor
outsl
stos
jge
imul
pop
xchg
mov
das
out
and
cli
xchg
fdiv
jge
out
mov
lcall
push
ds
jbe
mov
mov
idiv
stos
cld
jae
icebp
jl
mov
ljmp
pop
fisubs
jnp
fcom
sbb
jle
repz
out
arpl
dec
cld
sub
testl
mov
gs
imulb
cmpsl
outsl
ret
cli
ja
iret
mov
jg
jge
iret
aaa
mov
lahf
xchg
pop
aaa
push
sahf
cmp
push
pop
mov
dec
mov
mov
iret
arpl
jg
fmul
fs
sbb
xchg
adc
adc
daa
fmul
inc
adc
mov
das
cltd
push
mov
mov
rcr
add
sub
leave
xor
fs
loope
adc
or
add
pushf
mov
ret
cmp
stc
les
cmp
xchg
clc
or
int
dec
loop
fdivr
lods
mov
loop
shr
out
fmuls
imulb
imulb
fcmovne
jle
or
ja
outsb
inc
call
push
add
dec
test
arpl
pop
pushf
push
xchg
cmp
sar
imul
sbb
aam
repnz
outsb
dec
loopne
add
bound
test
jp
in
arpl
ss
mov
insb
das
sti
xchg
sbb
xchg
lods
in
out
shrl
loope
dec
jno
and
sbb
xor
adc
fnstenv
leave
loopne
mov
adc
cmp
xchg
lahf
push
cmpb
inc
ds
and
adc
neg
jno
and
mov
xor
inc
mulb
jbe
push
enter
add
add
pop
xchg
scas
dec
andb
pop
mov
inc
add
adc
push
scas
inc
dec
push
inc
jns
shlb
je
inc
cmp
cmp
jbe
fwait
insb
mov
pop
in
cli
sbb
outsl
cli
icebp
dec
mov
ljmp
fldt
mov
out
cmc
mov
sbb
icebp
scas
icebp
cmp
scas
adc
dec
sbb
aad
cwtl
jmp
cmp
fistpll
jecxz
dec
pop
out
add
mulb
jle
in
inc
pop
jne
icebp
outsl
sar
arpl
outsl
jl
mov
ljmp
mov
ja
popa
insb
notl
add
push
rclb
cmp
loopne
and
dec
jno
xchg
call
in
ds
mov
or
test
jne
addr16
inc
lret
into
arpl
fwait
add
mov
cli
inc
and
dec
jae
lcall
xchg
aam
int
fsts
pop
jle
scas
hlt
dec
int
push
cli
out
es
jae
pop
sti
lret
imul
pop
mov
xlat
mov
insl
test
frndint
jmp
shll
sub
pop
icebp
pop
sahf
sub
mov
jg
in
loope
dec
jbe
push
test
fwait
hlt
jg
test
sbb
sti
into
xor
paddb
popa
out
sti
jo
pop
fnstsw
xchg
in
outsb
push
fwait
xchg
jecxz
push
in
jns
mov
notb
int
fidivrl
sahf
fcomip
aam
int
outsl
sti
jnp
fimull
mov
sti
idiv
jae
push
mov
mov
inc
je
sti
jnp
mov
push
outsb
fstp
mov
jns
sub
out
push
or
ja
sbb
aaa
bndstx
xchg
pop
std
dec
pop
divl
js
fdecstp
jecxz
fisubs
push
jp
addr16
cld
hlt
push
loope
mov
pop
mov
push
sti
aaa
out
fst
repnz
aam
push
stos
dec
pushf
cmpsl
js
int
push
hlt
leave
test
push
outsb
frstor
push
jl
jo
arpl
movsl
cmp
pop
not
dec
mov
dec
sub
mov
insl
outsb
pop
mov
imulb
jmp
addr16
aam
xor
bound
ss
call
sbb
jmp
test
mov
and
sub
dec
jmp
dec
loope
loopne
jae
test
outsb
push
aam
pop
mov
data16
mov
sbb
mov
sbb
adc
mov
and
ss
clc
xor
cs
mov
xchg
rorb
xor
mov
jae
xchg
and
xor
mov
out
cli
cltd
sbb
mov
mov
shrl
in
cld
clc
shl
inc
xchg
ja
jg
shlb
jp
lds
lods
mov
in
arpl
movsl
jmp
add
int
loop
insb
fcmovnu
fcmovnu
mov
mov
sub
movsl
fdiv
call
lret
jge
imul
mov
cli
push
call
push
iret
pop
fcom
test
mov
mov
addr16
lahf
and
lret
jp
imul
cmp
cli
cmp
inc
sar
mov
sbb
cli
leave
cmpsb
arpl
pusha
addr16
push
push
dec
cmp
mov
ljmp
aam
fstl
jno
cmpsl
xor
insb
clc
mov
xchg
dec
mov
xchg
mov
call
stc
negb
push
test
cmp
test
xlat
imul
pmaxsw
mov
xor
sahf
push
mov
xlat
dec
sub
mov
jg
loopne
div
push
sub
das
arpl
test
fwait
test
jg
jmp
stos
fsubrl
cld
loopne
cld
xchg
sar
push
xor
cmc
aad
js
imul
fwait
sbb
cld
in
pop
mov
fucomip
andl
inc
adc
add
xchg
or
inc
push
imul
mov
pop
mov
add
push
ret
add
es
dec
sub
popa
and
arpl
and
mov
imul
shll
mov
int3
mov
xor
test
mov
movb
sub
push
xchg
inc
dec
pop
sub
jo
lock
sub
cli
mov
cld
hlt
sarb
lds
mov
jle
scas
xor
pop
xchg
push
aaa
add
repnz
pop
fs
sar
hlt
fdivl
mov
fistpll
fwait
fwait
and
mov
mov
mov
mov
xchg
jle
mov
cs
call
popf
aaa
mov
pop
mov
jmp
cli
dec
call
xor
mov
lods
push
dec
jmp
mov
and
test
mov
push
xchg
jae
lret
cs
xchg
jns
pop
cmp
enter
sahf
sbb
cltd
repz
push
sub
fists
jp
movsb
stos
sbb
cwtl
xor
mov
jne
out
hlt
insl
dec
add
aam
jmp
rorl
rorb
sahf
push
pop
xor
mov
lahf
mov
jp
jle
lds
xchg
rorl
pushf
sarb
or
adc
inc
mov
nop
divb
inc
sbb
add
lods
js
test
mov
popf
push
dec
in
xchg
sbb
ss
cmpsb
mov
inc
mov
dec
xchg
mov
inc
stos
mov
mov
xchg
pop
loopne
sti
sbb
shll
sbb
js
adc
inc
and
shll
dec
dec
and
pop
sub
aaa
inc
xchg
sub
mov
mov
idivb
mov
rorl
stos
fwait
negb
pop
shr
pop
arpl
adc
cmc
mov
repnz
es
iret
or
popf
pop
aas
jnp
inc
shrl
jle
inc
inc
aam
int3
and
xchg
icebp
mov
inc
lea
sbb
pop
rolb
fcomp
xor
outsb
adc
repz
cmp
inc
pop
sub
nop
sbb
jae
iret
inc
ja
jle
mov
in
mov
dec
inc
data16
lret
mov
xor
popa
lods
out
sub
jg
jne
cld
pop
mov
movsb
and
mov
inc
xor
sbb
cmpl
add
push
sti
shlb
filds
dec
ss
loopne
sbb
scas
pop
mov
adc
clc
add
dec
jl
stos
imul
add
adc
jl
js
js
js
cmc
das
js
lock
mov
jbe
icebp
loopne
rol
cmp
inc
cmpl
add
jl
ljmp
ror
or
testl
out
inc
mov
mov
pop
outsb
lock
je
cmpsl
fldt
add
pop
or
cs
enter
cmpl
cmp
repz
shlb
iret
addl
inc
loopne
rorb
inc
sarl
and
insb
pop
cmp
mov
scas
fwait
pop
cmp
mov
jmp
cwtl
cmp
jecxz
dec
jae
out
xor
dec
mov
gs
es
pusha
xchg
fwait
lea
dec
gs
into
shrl
fs
push
pop
push
stos
roll
xor
mov
dec
repz
int
pop
les
in
das
jo
arpl
sub
lea
loopne
sub
mov
scas
lahf
jns
jne
shrl
imul
scas
scas
shr
inc
mov
fadds
mov
sahf
fdivl
bound
pop
jmp
mov
rclb
in
push
xchg
lds
loop
pop
mov
dec
ds
pop
push
nop
andb
mov
inc
iret
sub
pop
lock
jns
das
stc
add
inc
adc
mov
mov
addr16
pop
cmp
mov
repz
in
mov
cmp
loopne
jne
jge
insb
mov
into
lret
pop
xorb
push
pop
outsb
xchg
loopne
cld
scas
sahf
sbb
ror
js
daa
ja
lret
std
enter
das
ja
lock
pop
ja
mov
or
dec
lock
das
out
pop
std
in
inc
aas
pop
in
and
andb
sub
inc
and
shll
lahf
sbb
add
or
and
lahf
psllw
mov
push
inc
cmp
movsl
mov
jle
in
mov
ret
jge
clc
xor
dec
inc
sub
xchg
cmp
adc
cmpsl
arpl
lahf
adc
dec
inc
xchg
xlat
xchg
daa
and
imul
sub
add
shl
repz
mov
js
daa
loop
outsb
pop
loope
xor
rol
cmpsb
push
inc
inc
adc
push
lcall
and
mov
aas
adc
pusha
sahf
fsubl
mov
push
mov
mov
imul
adc
iret
or
sbb
push
cmp
add
in
out
repnz
pushf
test
xor
lahf
push
adc
shlb
inc
fdivrs
popf
mov
cmp
sbb
cmp
add
dec
inc
lock
lock
add
rolb
lret
lret
js
xchg
mov
fists
inc
or
inc
jnp
repnz
pop
sub
add
jo
arpl
outsl
repnz
or
loope
fsubp
xor
inc
xor
or
fstpt
loopne
fidivs
les
inc
pop
ljmp
push
jg
ljmp
mov
lock
popf
add
jl
jg
outsl
mov
in
shll
adc
clc
push
jg
cmpsb
mov
jne
mov
stos
out
scas
mov
aaa
dec
mov
pop
in
clc
xor
leave
dec
inc
add
xor
inc
and
repnz
es
out
lcall
jmp
int
inc
repz
fwait
push
int
jge
sub
sbb
jecxz
add
or
adc
and
nop
into
test
roll
mov
inc
and
push
aas
das
test
sbb
xlat
sbb
rorl
pop
mov
sbb
out
ret
adc
loopne
pmaxub
dec
rclb
call
dec
inc
imul
sub
mov
sbb
adc
ds
mov
cld
adc
iret
add
fcoml
jle
jmp
mov
lcall
out
mov
push
push
jmp
inc
xchg
and
pop
ja
ja
mov
cmp
lret
idivl
jo
icebp
pop
ds
sub
inc
dec
test
and
xchg
xchg
dec
lds
in
xchg
push
sti
jp
and
sub
iret
fnstsw
and
inc
pop
in
in
shll
sbb
xchg
add
ret
cmp
or
inc
loope
mov
lret
and
in
adc
dec
sub
adc
repz
push
ja
das
and
repz
imulb
jnp
lcall
scas
repz
pop
adc
xlat
mov
pop
mov
jp
xchg
xlat
test
lods
or
jns
sub
and
and
jne
sub
adc
push
fcomp
mov
dec
or
cmpsl
js
xor
xchg
pop
in
out
or
testb
cmp
bound
xchg
sub
sbb
in
inc
inc
adc
bound
sbb
dec
es
das
stc
cmp
cmpsl
stc
sub
xchg
mov
outsl
out
mov
xchg
jbe
mov
fists
dec
fmul
mov
out
adc
jno
sahf
loope
xchg
movsb
arpl
lahf
adc
pop
loopne
in
movsl
movsl
repnz
sahf
fcoml
into
mov
pop
sbb
inc
sub
xchg
test
xchg
in
dec
rcr
mov
aas
push
nop
add
and
add
add
test
xor
jo
mov
adc
jg
iret
repz
in
pop
loopne
ds
inc
rorl
cmp
iret
add
mov
das
repz
cmp
sub
stos
jl
fcom
andl
dec
jmp
mov
clc
fwait
jl
adc
lock
ja
arpl
push
js
cmpb
fsubp
push
ret
stc
ja
sub
in
std
adcl
orl
js
pop
jns
fsubp
aas
adc
subb
shlb
add
and
and
nop
pop
jns
push
jmp
icebp
adc
stc
mov
pop
jo
ds
lock
jnp
ds
or
jo
xchg
inc
dec
les
repnz
and
or
mov
and
gs
or
adc
jb
xlat
inc
mov
or
sahf
out
dec
orl
push
xlat
sahf
outsl
xchg
xorb
adc
dec
inc
push
cmp
lret
mov
sbb
js
clc
insb
mov
mov
mov
inc
sub
pop
xchg
or
bound
leave
cmp
ds
icebp
outsb
jg
rcll
sbb
std
adc
enter
jae
leave
xor
test
addb
loop
mov
add
push
cs
jo
popa
dec
mov
gs
test
fcompl
xchg
loopne
repnz
push
fsub
je
mov
negl
out
or
ret
lea
lock
pop
add
sbb
call
fisubrs
mov
cmp
jg
ja
es
movsl
sub
cs
std
loop
bound
add
test
inc
xor
daa
rclb
or
add
jno
xor
pop
mov
clc
add
inc
mov
push
sbb
jno
xor
sub
stos
xchg
bound
adc
jno
addr16
lods
jo
mov
add
cmp
bound
mov
xchg
cmp
pop
out
rorl
sbb
loope
js
aas
add
insb
mov
or
jno
push
xchg
test
sub
sarb
sub
pop
in
add
dec
rcl
jo
les
jo
fdiv
cmp
add
inc
xchg
xor
cs
push
pushf
cmp
jo
dec
adc
and
cmp
stos
jb
dec
sbb
bound
imul
xor
cs
insb
push
pop
out
sbb
mov
sahf
out
add
test
dec
jae
pop
or
enter
rclb
sub
xchg
xchg
packsswb
pusha
in
jmp
sti
int3
mov
pop
in
std
push
and
sub
xor
nop
fprem1
cmp
fdivrs
sub
cmp
lret
cmp
call
cmp
push
mov
lds
out
push
xor
gs
sub
int3
and
neg
pushf
cli
cwtl
movsl
dec
pop
inc
add
pop
cmp
popa
or
push
cs
push
shr
stc
test
int3
adc
push
int
push
or
pop
and
test
push
push
mov
sbb
xchg
and
xor
mov
outsl
or
jo
mov
nop
xchg
mov
push
push
mov
xor
cwtl
push
xor
aam
imul
icebp
hlt
push
mov
das
mov
repz
jb
push
loope
xor
cmpsl
repz
xchg
pop
adc
mov
out
xor
sub
sbb
nop
int3
popa
mov
dec
mov
insl
sub
mov
sub
out
mov
mov
mov
pusha
push
pop
sub
mov
add
inc
adc
jns
add
and
fwait
ret
cmp
repz
pop
adcb
fistpl
xchg
inc
cs
and
pop
jns
inc
pop
stos
mov
jnp
inc
adc
cwtl
pushf
xchg
jle
and
sub
stos
cwtl
shrb
or
adc
outsl
sub
ret
add
dec
mov
sbb
pop
push
sub
sbb
ds
in
jae
nop
fisubl
adc
xchg
fnstsw
push
cmp
lods
in
loope
das
lea
iret
mov
gs
lret
repnz
xchg
mov
leave
jge
pop
push
call
and
popf
push
cmpsl
ds
jmp
mov
mov
rcll
int
jae
pop
mov
cmp
xchg
test
movsb
out
lret
lods
jb
mov
in
in
dec
mov
insl
and
arpl
mov
movsl
mov
lods
std
sub
imul
adc
dec
pop
repz
loop
sbbb
neg
mov
adc
xchg
popa
dec
daa
fs
pop
push
inc
movsl
dec
int
mov
inc
fucomip
add
insl
ret
into
pop
pop
jns
jl
mov
scas
mov
sub
mov
dec
dec
push
movsb
ficomps
mov
dec
movsl
mov
xor
int
cli
push
adc
sub
scas
cmp
pushf
int3
arpl
aas
lret
das
mov
cld
dec
in
mov
hlt
xor
repz
insl
push
dec
dec
push
xor
enter
ljmp
mov
xchg
call
outsb
ret
js
mov
sahf
xlat
cmp
insl
into
sbb
arpl
xchg
jno
shrb
lret
bswap
adc
mov
mov
pop
jmp
mov
xor
add
cs
dec
outsl
mov
push
and
inc
push
outsl
ljmp
cwtl
ds
lret
jmp
arpl
outsb
mov
int3
adc
cwtl
ficoml
inc
sub
cmp
arpl
mov
xchg
int
push
or
fdivr
cwtl
sub
dec
dec
cmpsl
sub
pushf
mov
insb
push
cmp
clc
or
xor
pop
nop
aaa
int
out
sbb
movsb
and
ss
or
movsl
lret
int3
test
arpl
addl
mov
dec
or
shrb
push
shl
test
lcall
inc
and
or
sub
enter
dec
dec
addr16
outsb
mov
mov
xor
lret
jl
data16
jno
fstpt
jno
xchg
out
shrb
mov
shll
lcall
inc
adc
mov
leave
mov
xor
cwtl
mov
sbb
dec
xchg
fldenv
xchg
mov
mov
pop
rclb
imulb
insl
jo
jae
pop
pop
xor
repz
sub
push
pop
mov
lds
stos
lock
xor
fisubrs
fistps
and
xchg
lcall
push
int3
xchg
fmuls
jecxz
xchg
pop
xor
push
mov
mov
mov
mov
cld
mov
or
mov
es
sub
scas
pop
push
in
shlb
sub
loop
adc
xor
out
inc
inc
mov
leave
ret
mov
xor
mov
out
jbe
inc
add
xor
pushf
add
scas
or
push
ja
xor
pop
stos
popa
xchg
inc
cmpsl
cmp
mov
int
or
fisubrs
dec
rcrb
sarl
pop
imul
mov
ficompl
inc
push
fs
insl
outsb
call
fsubrl
jnp
push
int3
mov
push
pushf
dec
lea
stos
xor
js
in
data16
jns
imul
aas
inc
mov
nop
adc
xchg
cmp
xchg
fldenv
sub
xor
push
js
and
cwtl
cmp
xor
popa
test
sub
cwtl
mov
imul
fdivl
cmp
hlt
adc
adc
push
xor
and
jp
mov
fimull
sbb
enter
les
jne
mov
pop
cltd
out
inc
ljmp
fcoms
adc
pushf
xor
mov
lods
popa
jp
test
fmull
jns
cmp
iret
sbb
aas
mov
xchg
xchg
add
gs
aaa
fxtract
pop
hlt
push
scas
fucomip
mov
mov
inc
jmp
ja
lea
pushf
mov
xchg
jb
and
sub
pop
pop
out
and
mov
mov
dec
sub
pop
mov
mov
cwtl
in
push
mov
stos
add
xchg
mov
cli
hlt
pushf
xor
subl
mov
adc
inc
insb
dec
or
xor
mov
dec
lds
jecxz
aas
popf
xchg
hlt
outsl
sub
mull
mov
push
jno
int3
shrb
dec
setns
sti
or
pop
iret
fnstenv
sbb
jmp
xor
push
mov
pusha
or
push
cmp
pop
and
lret
mov
pop
cmpsl
pop
pop
negb
inc
ss
cmpsl
xchg
mov
adc
sbb
ljmp
test
outsb
adc
dec
iret
sub
repnz
aad
ffreep
repz
and
cmpsl
mov
hlt
ficompl
test
repz
pushf
push
repnz
cmc
cltd
and
xor
push
mov
jp
adc
mov
xchg
xchg
mov
leave
ret
stos
mov
and
sbb
cmp
mov
cmpsb
adc
rol
cwtl
mov
insb
push
jns
cs
testl
arpl
sti
in
daa
js
xor
add
xchg
leave
mov
subb
add
adc
and
stc
hlt
gs
mov
rorb
mov
stos
cmpsb
adc
aas
popa
or
rolb
mov
aaa
sbb
andb
test
out
and
out
pushf
cwtl
mov
sar
fs
test
push
outsb
repz
and
pop
push
add
mov
push
lret
mov
sub
cmpsl
mov
nop
add
xchg
mov
inc
inc
mov
jb
fisubrs
ret
sub
jmp
adc
mov
test
popf
add
loop
mov
ljmp
add
cmp
lret
dec
jae
xor
pop
aaa
rcll
out
cmpsl
and
nop
xor
daa
repz
mov
and
adc
je
loop
pop
cmp
mov
popa
sub
and
or
rcll
sbb
fsts
push
xchg
cwtl
dec
repz
sbb
push
enter
and
xor
mov
out
jge
sahf
inc
push
pusha
dec
mov
pop
insb
or
test
test
in
sbb
sub
lock
aad
inc
aas
pop
sbb
repz
and
insb
mov
pop
test
mov
lcall
xchg
pusha
scas
push
sarb
push
xchg
in
out
lods
and
pop
cs
push
and
mov
stc
faddl
or
cwtl
lcall
dec
int
cmp
rcrb
gs
stc
pusha
gs
push
xchg
mov
add
jns
fmuls
ret
jno
in
xchg
clc
mov
mov
rclb
imul
cmpsb
add
pop
mov
arpl
popa
mov
mov
adc
pop
cmp
lods
push
cmc
push
jns
mov
xor
jecxz
adc
inc
dec
add
inc
jb
mov
push
pop
xor
jns
mov
loopne
sub
daa
loop
inc
sbb
pop
imul
fs
or
mov
ficompl
cmp
hlt
nop
pop
jge
mov
mov
jae
test
push
xchg
push
fnstenv
hlt
rcrb
push
int3
out
pusha
pop
imul
popa
push
xchg
jle
lods
int3
negl
ss
pushf
sbb
out
popa
cli
adcb
popa
pop
in
ret
dec
andl
popf
push
in
mov
xchg
xchg
push
test
out
push
jbe
dec
xchg
mov
or
nop
mov
push
inc
insb
pop
loope
idivb
push
pop
fdiv
sub
xchg
cmpsb
ja
lret
lea
mov
sbb
in
into
cmp
pop
mov
xor
rcrl
mov
mov
lret
lret
loop
mov
mov
cmp
jge
sarl
xchg
rolb
or
sbb
xchg
push
inc
xchg
cmp
xor
mov
pop
xchg
and
mov
jl
mov
or
or
push
mov
cltd
daa
daa
push
and
mov
test
ret
cs
iret
addr16
ret
jne
sbb
inc
jae
sub
push
push
bound
sub
inc
xchg
xor
ret
popf
push
sbb
sub
sub
pop
test
incb
pop
xchg
jns
add
into
sbb
sub
adc
add
mov
mov
in
xor
mov
push
push
pop
mov
inc
cmp
cmpsb
xchg
mov
adc
aam
mov
dec
jne
stos
cmp
jp
sub
aaa
in
shll
pop
loop
mov
subl
aad
mov
mov
xor
sbb
adc
into
and
push
mov
jp
xchg
mov
dec
test
jecxz
add
or
pop
mov
mov
sub
fmuls
lods
mov
aam
mov
popf
sbb
cli
mov
jl
test
pushf
in
repnz
lret
mov
mov
mov
stos
sub
xor
in
dec
testl
jb
cmpl
out
inc
repnz
xchg
addb
mov
mov
jb
jbe
push
lods
mov
mov
popa
mov
xchg
out
in
xor
jns
fwait
dec
xchg
cmp
adc
cli
aad
push
leave
shrb
xor
mov
sub
jbe
jl
ss
lds
in
push
lcall
jns
jecxz
scas
pminub
jmp
insb
ja
mov
bound
cs
in
dec
dec
cmp
push
pop
shll
mov
cmp
stos
or
mov
int
push
pop
frstor
fnstsw
ret
sbb
push
fcoml
sti
sub
jae
stc
in
lods
mov
mov
mov
and
cmpsb
data16
sbb
jge
adc
cmp
sub
inc
xchg
add
add
nop
push
cmp
push
outsb
je
popa
cmp
ret
sub
pop
hlt
movsb
inc
mov
jl
addr16
movsl
mov
imul
nop
xor
insb
pop
fcompl
add
scas
ja
and
mov
pop
pop
and
or
dec
int3
pop
in
push
in
inc
jg
subl
sub
push
test
mov
rorb
int
imul
sub
sbb
roll
idivb
pop
mov
adc
imulb
fcomp
push
fisubrl
sbb
aam
das
rcl
xchg
push
pop
mov
mov
rolb
mov
or
dec
mov
push
mov
mov
pop
inc
jb
mov
sub
pop
pop
dec
testl
cmp
mov
fadds
test
data16
xchg
dec
pop
les
mov
ss
das
dec
ja
repnz
movsl
lahf
sub
or
adc
lea
lahf
into
xchg
dec
mov
bound
je
mov
pop
xchg
cmp
mov
xchg
and
addr16
push
adc
clc
xchg
pop
movsl
sbb
add
movsl
sbb
adc
iret
lret
mov
pop
xor
into
ret
jle
out
xchg
jbe
cwtl
mov
xor
ljmp
jne
iret
bound
cld
add
ret
leave
jmp
aad
cmp
leave
lea
cmpsl
ret
out
sbb
mov
sub
rcrb
or
addb
dec
jle
mov
sub
stos
out
jns
std
dec
inc
sbb
test
mov
mov
popa
leave
popa
cmc
lret
mov
cmp
cmc
insb
adc
pop
jb
pop
add
in
in
mov
push
addr16
out
mov
pop
in
jp
xchg
push
fisubrl
or
sti
adc
scas
mov
pop
fmuls
bound
push
hlt
push
mov
lret
lcall
icebp
lcall
lods
push
pop
jmp
sti
pop
pop
push
cmp
jbe
jle
cmp
mov
insl
rclb
xor
mov
cltd
and
ret
mov
jb
xchg
jb
fstpl
or
dec
lods
push
and
push
and
xor
andl
stos
xchg
inc
push
jne
push
imul
xorl
ja
in
or
adc
xchg
into
sub
lods
or
push
sub
sbbl
mov
push
mov
lock
das
push
pop
pop
push
push
xchg
mov
mov
fsubrs
jb
mov
cmpb
daa
cltd
or
leave
mulb
mov
add
fdivs
in
push
inc
icebp
mov
arpl
xor
repnz
push
cmp
xor
adcl
and
mov
sub
xchg
xchg
xlat
les
or
jbe
pop
leave
cltd
dec
enter
lods
call
movsb
jle
mov
jle
scas
cmc
cltd
ret
xor
movsb
xchg
imul
push
push
inc
popa
popl
in
xor
hlt
lds
movsb
cmp
pop
pop
pop
mov
lods
sub
push
pusha
gs
sub
repz
inc
pop
daa
lret
cltd
mov
lret
jae
xchg
lds
sbb
add
xchg
inc
xchg
test
push
sti
xor
jbe
insb
add
inc
mov
xor
call
adc
xor
xor
bound
mov
jb
mov
mov
nop
int
hlt
ret
fsts
arpl
xchg
lds
int
stc
pop
in
push
shlb
imul
xor
inc
loope
mov
jne
pop
jb
and
aam
je
dec
mov
jne
std
pop
out
ds
adc
int3
ficompl
lods
imull
dec
mov
cmp
mov
mov
mov
aad
sub
les
popa
lods
or
loope
ret
call
mov
push
sbb
dec
or
mov
mov
insb
dec
insl
mov
dec
mov
mov
fisttpl
mov
add
fmuls
stos
std
cmpsb
push
xor
popa
ja
mov
aam
in
fwait
sub
mov
pusha
sbbl
sarb
adc
in
mov
fiadds
dec
jmp
fsubr
jno
push
mov
imul
jecxz
pop
dec
insl
mov
in
aad
shlb
out
jae
mov
fdivs
scas
lahf
out
push
out
jae
xor
cmpsb
xchg
mov
xchg
cmp
dec
clc
in
xor
mov
pop
out
jbe
data16
add
push
or
inc
push
mov
mov
and
push
adc
test
cmp
or
cmpsl
inc
mov
dec
xorl
fsubs
sub
stos
cmp
cmp
ffreep
aad
xor
outsb
aaa
lods
inc
sbb
sbb
in
jbe
sbb
adc
inc
jo
xchg
rcrb
aad
jle
mov
stos
movsl
xor
adc
std
sub
icebp
pop
dec
xchg
push
jo
outsl
pop
push
push
add
ficoms
cmp
sbb
es
loopne
shr
fsubrl
pop
xchg
dec
mov
xchg
fbld
lods
bound
jl
push
push
pop
xor
add
cli
in
xor
cmp
add
sub
ret
out
ss
aad
es
leave
add
scas
push
sub
subb
push
jg
xchg
leave
gs
sahf
fisttpll
fdivs
rorb
int
pop
sbb
les
pop
lock
fucomip
movsb
sti
pop
callw
lds
pop
dec
mov
in
fdivrl
leave
movsl
shll
inc
outsb
in
rcll
int
sti
push
inc
cmp
mov
mov
xor
addr16
mov
imul
stos
test
mov
mov
test
jbe
xchg
es
call
sbb
movsl
mov
push
sbb
mov
adc
aas
divb
in
jmp
sar
insl
adc
mov
xchg
call
xchg
cltd
loopne
mov
hlt
hlt
mov
repnz
pop
jp
test
push
pop
enter
mov
stos
push
cmp
jo
hlt
fisttpl
dec
xchg
xchg
jo
inc
push
test
mov
je
dec
out
jns
adc
pop
je
sbb
js
adc
sub
sti
pop
pop
aam
dec
mov
inc
cmp
fmuls
push
outsb
movsl
mov
ds
push
mov
mov
sbb
stos
pop
and
dec
shlb
pushf
stos
add
mov
fsubrs
test
push
nop
and
lahf
ljmp
popa
cli
adc
or
dec
xchg
adc
cmp
mov
mov
mov
xchg
aas
sub
mov
cmp
push
lods
and
sub
mov
inc
mov
cmpl
push
lock
leave
xchg
mov
pop
mov
out
leave
push
loop
inc
add
mov
in
add
push
mov
jo
orb
lock
ud1
scas
push
rcr
mov
push
push
enter
push
xchg
jb
jecxz
mov
xchg
clc
xor
scas
mov
dec
mov
stos
sbbl
cmp
shlb
xor
movsb
xchg
mov
sub
pop
repnz
movsb
jae
mov
jbe
gs
xor
dec
inc
push
dec
sub
xchg
mov
roll
jle
cmc
mov
mov
jmp
or
imul
mov
dec
jbe
ret
lret
pop
cmp
sbb
inc
cmp
pop
adc
cwtl
xchg
xchg
jle
sub
mov
stc
gs
test
mov
cmp
in
fcmovb
sub
push
jae
sub
push
add
xor
cltd
jecxz
xchg
not
cmp
add
cmpb
or
nop
jecxz
jns
int3
test
xchg
and
bound
push
sarl
or
inc
jne
jno
test
mov
test
and
sbb
push
xor
orl
cmp
xchg
push
sub
popa
popf
cmp
lock
cmp
and
aam
mov
std
xchg
rcl
and
jle
mov
xchg
sbb
mov
xchg
xchg
mov
cwtl
mov
sbb
in
adc
lds
pop
dec
idivl
pop
pop
int
ficoms
imul
scas
add
fwait
xchg
nop
mov
jp
scas
das
xchg
in
test
dec
lods
add
push
sbb
add
dec
jp
push
inc
xor
divb
push
clc
in
jecxz
mov
rorb
and
jmp
jp
jle
mov
sub
pop
or
int3
push
xchg
mov
andb
push
cltd
inc
aam
mov
push
mov
daa
test
pop
test
cmp
imul
lods
gs
and
orl
daa
inc
inc
ret
mov
inc
test
sub
popa
push
push
pop
daa
add
cmp
mov
pop
inc
sbb
push
inc
cli
daa
stos
inc
mov
push
loopne
mov
sti
rorb
mov
inc
pop
mov
push
mov
ret
test
ret
dec
cli
popf
ds
jecxz
out
int
pop
je
daa
mov
das
mov
imul
mov
inc
enter
pop
stos
mov
and
test
rclb
aam
nop
ljmp
andb
test
imul
mov
sbb
outsb
dec
shll
out
mov
lock
leave
aas
int
cmp
and
adc
sub
or
sarb
xchg
cli
lahf
sahf
push
leave
icebp
xchg
cmp
les
adcb
stos
shr
pop
gs
add
fwait
inc
jae
cmc
les
inc
xor
push
pop
int
add
inc
mov
ss
jmp
ret
in
jmp
fbld
mov
ds
shr
pusha
enter
pop
xlat
rcrl
or
shrl
leave
jmp
int
cmp
jge
hlt
sahf
or
lea
mov
mov
inc
das
add
pop
or
test
adc
jne
enter
leave
pop
inc
clc
mov
pop
pop
sbb
aam
cli
fisubrs
aaa
lods
xchg
fiadds
sub
mov
imul
jg
clc
inc
sub
aas
in
movsb
mov
xor
out
loope
push
stos
push
js,pt
imul
repnz
cld
dec
or
jp
repz
repnz
pop
pushl
and
arpl
out
xor
push
into
in
shrb
movsb
lock
ljmp
sub
sbb
mov
cmp
fstpt
fdivp
xorl
sub
cmp
movsl
jmp
sub
faddl
pushf
sbb
cmp
dec
cmpsl
lcall
sbb
cmp
sarb
call
punpckhdq
add
inc
addl
addb
xorb
cmp
pop
int
add
cmp
add
add
ss
push
sbbl
popl
cli
and
sarb
push
add
sbb
cmp
adc
jns
mov
mov
call
add
mov
xor
add
cs
test
nop
add
jmp
call
add
jmp
mov
rclb
xor
jo
or
dec
shrb
shrb
testl
subb
lea
lea
pop
push
mov
adc
hlt
jge
adc
xchg
mov
jbe
bound
mov
xor
dec
int3
out
loop
inc
rorb
push
xor
call
jl
int
pop
inc
aas
fs
movsb
push
and
scas
inc
jp
shrb
xchg
pop
mov
dec
movsb
push
and
outsl
inc
jp
rcrb
nop
fiadds
and
outsl
inc
jp
rcrb
nop
fiadds
dec
cltd
shlb
ljmp
mov
es
test
pop
xor
mov
sbb
dec
or
loope
pop
cmp
scas
dec
or
ret
inc
push
aad
push
mov
push
xchg
pop
push
jne
push
push
pop
push
xor
push
cmc
pop
push
aad
push
mov
push
xchg
pop
push
jne
cli
mov
xchg
cld
leave
icebp
adc
cld
cld
add
adc
loopne
add
nop
loopne
or
xchg
repnz
dec
fsts
test
aam
push
aad
push
mov
pop
mov
mov
jl
cmpb
daa
and
adc
repnz
sub
daa
clc
mov
es
cwtl
add
and
mov
jl
orb
daa
clc
mov
pop
lcall
mov
fcomi
loop
mov
xchg
add
sarl
cld
dec
test
and
ret
sbb
roll
rcrl
cmp
sub
or
sub
pop
mov
lret
pop
adc
cmp
or
negl
ljmp
aam
lret
ss
mov
data16
int3
push
fidivs
std
aam
cmp
imulb
loope
cwtl
insl
fildl
pop
shrb
movsl
mov
push
adc
scas
nop
wbinvd
loop
xchg
dec
cmc
mov
jmp
into
test
push
dec
outsl
neg
mov
std
sbb
cmpsl
jno
jp
lcall
lock
cmpsl
loopne
lock
loopne
lock
rorb
int
push
jg
cld
add
daa
clc
inc
loopne
sarb
pop
add
outsl
lock
aas
add
ds
dec
lock
clc
sbb
ja
cmp
jg
jns
out
subb
scas
lcall
lock
pop
jg
jl
clc
fwait
loopne
lock
test
ret
aad
pop
loopne
rcrb
rcrb
rorb
aaa
cmpl
ds
or
dec
lcall
pop
add
push
cld
add
sar
sbb
movd
clc
xor
inc
xchg
psubb
daa
lock
push
mov
rorl
pop
mov
mov
rcrb
cli
pop
jl
js
clc
push
ljmp
mov
push
mov
shlb
cmpsl
incb
filds
or
lock
sub
lock
lock
fwait
test
sbb
aaa
sbbb
cmp
sbb
jl
mov
or
add
pop
js
xchg
or
push
aam
lock
push
jg
xchg
xchg
das
clc
or
js
xchg
pop
fimuls
into
rclb
gs
xorl
fwait
pop
fstpt
ss
mov
mov
pop
pop
aad
out
jnp
cwtl
sbb
faddl
cli
push
enter
outsb
sub
shlb
ja
cmp
cld
sbb
jne
sti
sti
ficoml
xchg
and
mov
stc
fidivs
fistps
js
xchg
cmpsl
dec
push
push
loopne
cmc
outsl
xor
pop
inc
scas
jg
mov
outsl
std
out
mov
out
push
icebp
in
jne
mov
jl
mov
push
pop
decl
push
lret
negb
cmpsl
jl
scas
fnsave
dec
std
imul
mov
arpl
lock
sub
jnp
fnstcw
or
pushl
jmp
mov
sub
cmp
inc
dec
dec
xor
cmpsl
mov
mov
int
sarb
scas
test
lea
cmp
fiadds
xchg
sahf
lcall
mov
cmc
les
sub
test
sub
push
jge
dec
enter
out
fldenv
xchg
testb
sbb
test
cmc
dec
mov
fists
jno
sub
mov
cltd
mov
pop
fistps
mov
jno
punpckldq
js
push
sub
out
cs
jle
js
aaa
popf
xor
imulb
mov
mov
mov
out
mov
jecxz
rclb
lds
je
xchg
ljmp
jno
ja
jae
insl
movsl
sbb
sub
mov
jmp
push
outsl
test
fisubs
repz
xlat
sbb
lret
dec
ljmp
dec
sbb
mulb
out
sub
sbb
cmp
push
ja
inc
icebp
pop
lret
jp
mov
movsb
jp
xlat
out
jnp
fstl
sub
cmp
es
fcmovu
fcomi
dec
dec
sti
into
ja
fistpl
xchg
cli
inc
cmp
mov
cmc
xchg
jne
sbb
sbb
lret
aam
jnp
out
pop
mov
pop
cmp
gs
lods
js
xchg
pop
aas
sub
movsl
gs
mov
movsl
pop
xchg
fidivrl
lods
jge
out
push
cmp
icebp
shrl
movsb
mov
sub
je
xchg
inc
mov
bound
jl
loope
jb
sbb
fdivs
jge
loop
das
cmp
scas
mov
out
lods
pop
jge
imul
sub
je
loope
mov
cwtl
ss
test
push
pop
cmc
shlb
sbb
fstpt
int
jp
std
mov
loop
mov
notl
mov
jmp
push
xchg
mov
xchg
fiaddl
lcall
adc
fcoml
movsl
movsl
mov
jnp
arpl
ss
lcall
outsl
test
xchg
mov
lods
jmp
cmp
hlt
cs
cmp
dec
scas
or
xchg
gs
insb
incl
outsb
dec
mov
mov
jbe
mov
stc
mov
dec
hlt
push
pop
mov
xor
jmp
cmpsl
push
cmp
adc
cmc
cmpsl
sbb
aas
popf
cmp
sbb
mov
cwtl
and
psllw
call
frstor
jmp
cmp
push
dec
jecxz
cmpsl
fisubs
mov
jmp
pushf
out
das
aad
xor
insl
xor
insl
push
mov
iret
push
daa
jle
call
sbb
jmp
xchg
mov
jmp
ficoms
mov
adc
mov
jg
sti
daa
fcmovnu
push
push
mov
dec
jno
imul
idiv
out
xchg
xor
mov
jnp
pop
cmp
mov
mov
pop
fstpt
dec
bound
test
push
pop
mov
push
clc
fimull
sub
mov
add
fcomip
aad
pop
cwtl
lock
mov
sub
lds
sub
sub
mov
sbb
cmovo
andb
call
push
mov
mov
adc
mov
sub
or
pop
or
push
mov
fnstsw
pop
test
idivl
scas
enter
pop
dec
movsb
jnp
inc
js
jb
push
sahf
cmp
iret
mov
sub
xchg
das
and
sti
xchg
mov
cmc
push
iret
icebp
mov
inc
imul
stc
pop
or
cmp
cmp
lahf
mov
inc
scas
fs
dec
jecxz
dec
mov
jns
in
and
out
mov
inc
loopne
cmp
inc
jbe
loopne
jmp
daa
cltd
jo
insl
and
ss
pusha
dec
test
iret
push
adc
jle
mov
add
lcall
dec
loopne
sbb
adc
add
xlat
lahf
xor
stos
sub
lods
stos
cmpsb
jmp
lock
cmp
xor
mov
insb
adc
mov
neg
outsl
mov
lock
outsl
nop
rcr
jne
jns
cli
pop
js
cmpsl
lock
or
mov
adc
sbb
mov
aad
lret
insb
sti
cmp
sbbb
ja
adc
repnz
in
inc
pop
insl
cmp
idivb
jbe
out
push
ret
pop
imull
pop
pop
xchg
dec
sub
dec
mov
lret
jmp
mov
out
adc
dec
in
push
mov
outsl
pop
and
dec
sti
push
xchg
outsl
pop
sub
cli
insl
xor
int3
mov
sbb
fidivs
enter
repz
frstor
je
pop
divb
jmp
push
xchg
lret
stos
jnp
ja,pt
ja
fstpl
push
sbb
mov
insb
push
cli
push
lds
lods
movsl
sbb
sub
sub
leave
push
cmp
mov
out
out
outsl
cld
lock
arpl
leave
loop
repz
cmpl
jne
int
or
mov
xor
aaa
scas
lods
mul
jns
gs
sbb
dec
popf
sub
xor
aam
mov
lcall
fcoml
fsub
cmp
loope
dec
sbb
push
movsb
insb
fcomps
sbb
mov
popa
dec
ret
mov
out
call
pushf
out
lock
lea
sbb
xlat
xchg
add
mov
adc
je
cmc
scas
lret
fadds
in
jle
and
xor
xchg
repnz
pop
icebp
mov
sub
cmpsl
je
scas
mov
negb
into
loopne
dec
repnz
push
sub
std
mov
out
call
fidivl
mov
test
push
cmc
jno
in
mov
lcall
jg
mov
pop
cld
jbe
dec
fldt
adc
jne
cmp
jne
fcompl
test
jge
mov
mov
std
push
push
icebp
or
jns
xor
mov
pop
test
push
int
jle
mov
push
and
mov
mov
sarl
cmpsl
jl
in
test
dec
mov
loope
imul
fildl
cli
fmulp
sbb
inc
xchg
and
push
pop
fdivrl
fists
mov
loope
sarb
cmp
movb
pop
inc
pop
rolb
scas
push
shll
inc
inc
and
pop
inc
int
adc
mov
inc
std
les
pop
test
jns
imul
out
sbb
sbb
mov
mov
lret
inc
insl
sbb
mov
adc
or
pushf
jmp
mov
pop
mov
xchg
adc
cltd
pop
aaa
mov
pop
aam
mov
add
push
push
lods
push
add
out
sarl
and
popf
dec
aaa
cld
jp
dec
jo
testb
mov
in
ds
pop
in
out
mov
imul
stc
adc
gs
int
mov
ljmp
xchg
dec
xchg
jne
ds
dec
popf
fdivl
sub
test
jne
imul
mov
lret
xorl
cmp
int3
mov
gs
aam
mov
cld
push
jmp
not
lods
scas
outsl
clc
out
xlat
popa
ret
das
in
test
mov
iret
scas
ret
mov
and
fidivl
adc
insl
sbb
push
mov
fiadds
sub
scas
mov
sti
mov
outsl
test
cmc
pop
jmp
mov
out
pushf
mov
aam
popf
nop
mov
cli
cmp
je
inc
clc
mov
test
outsl
fbstp
shll
imul
hlt
sbb
stos
xchg
push
insb
mov
data16
lods
jne
jno
ror
push
cmp
and
cmp
jmp
or
pop
cmp
mov
in
xchg
xor
sti
mov
adc
adc
icebp
cmp
xchg
jne
pop
in
cmp
cmp
xchg
nop
enter
not
frstor
cli
jb
lcall
pop
inc
xor
mov
pop
push
fwait
je
cwtl
jg
in
outsl
loope
lods
dec
xlat
sahf
pop
fdivs
push
mov
xchg
mov
loop
call
notb
sub
cmp
jne
mov
jge
and
fisttpll
xchg
dec
sub
std
cmp
std
pusha
aas
hlt
ret
test
into
mov
idivl
dec
cmp
in
in
xor
inc
leave
movsl
inc
add
insl
jae
daa
leave
int
popa
out
insb
and
pop
sarl
scas
lds
jbe
fdivp
add
out
out
xor
pop
sub
sar
sahf
cmp
lret
jmp
fcmovnbe
rcl
inc
mov
outsl
fisttps
cltd
cwtl
pop
es
stc
adc
add
xchg
cwtl
cmpsl
bound
mov
scas
adc
mov
jmp
sub
adc
pop
mov
pop
mov
cmp
xor
fs
dec
jg
sub
sub
sbb
rorl
mov
xchg
cmp
in
leave
push
pop
mov
jnp
lret
mov
pop
mov
std
lcall
inc
or
decb
lds
mov
mov
aam
pop
sti
mov
sub
xchg
fs
loopne
mov
out
sahf
adc
xchg
in
jnp
rcrb
jnp
lock
jmp
jmp
mov
lods
xchg
addr16
loop
imul
cltd
sti
movsl
cmpsl
cmp
inc
lret
ficoms
xchg
addr16
pop
sbb
das
imul
aad
jge
mov
aaa
mov
push
xchg
test
fs
sub
sub
movsl
ret
scas
push
cmp
lods
fisubrl
adc
and
add
fwait
in
dec
fwait
stos
imul
sahf
in
fnsave
stc
in
testb
cs
cli
dec
arpl
dec
sub
mov
out
insb
popa
or
cmp
data16
pop
and
or
out
mov
in
sbb
add
orl
outsw
push
addr16
push
fadds
push
jmp
cmp
sbb
icebp
imul
dec
pushw
scas
mov
push
subb
int
or
in
int
dec
sub
stc
jl
out
hlt
xlat
pop
pop
aaa
mov
dec
cltd
sbb
mov
push
leave
out
int
push
andl
pusha
jmp
sarb
jnp
inc
repz
int
mov
gs
and
pop
xchg
mov
ss
inc
leave
icebp
inc
addr16
ret
mov
iret
es
mov
fdivp
jecxz
ljmp
jmp
mov
jmp
jp
cmp
rcr
cmp
xor
test
gs
jae
out
dec
lods
cmp
cmp
cli
push
ljmp
in
inc
ds
addr16
lods
imul
arpl
fnstenv
mov
movsb
rcrl
sti
imul
mov
xchg
sub
ficoms
fcmovb
and
dec
aad
imul
sbb
jno
scas
jmp
aaa
aaa
or
cmp
push
ja
xchg
insl
outsb
xchg
cmp
movsl
pop
or
shlb
aas
cmp
int
out
pop
scas
push
ret
xchg
data16
test
pop
jge
lods
lcall
mov
mov
daa
idivl
stc
xchg
jp
ja
mov
push
dec
cmp
mov
ss
je
cmp
sbb
js
fcompl
lea
loope
scas
jle
pop
sbb
cwtl
lock
out
mov
call
xor
loope
sub
stc
xchg
inc
pop
lcall
loop
jb
aas
jnp
arpl
xor
jp
and
push
xor
push
cmp
xchg
cmp
pop
aaa
dec
popf
push
jg
ljmp
dec
cwtl
push
rcll
lods
bound
jmp
loop
cmpsb
out
mov
neg
dec
in
mov
mov
mov
push
ja
scas
jnp
dec
xlat
cmc
mov
lods
jle
arpl
aam
addr16
scas
test
xor
add
jno
dec
insb
push
xor
jnp
sarl
cmpl
inc
lcall
and
sbb
push
inc
mov
cmp
mov
dec
aaa
mov
jne
lcall
or
popa
xor
jne
mov
dec
das
ja
in
sbb
int3
dec
mov
lea
pop
shll
sbb
lcall
pushf
push
fistps
lcall
jl
fcompl
xchg
sbb
jl
pop
ror
fwait
cmp
int
int3
iret
cmpsb
int3
std
das
or
jl
mov
mov
push
popf
inc
fiadds
mov
lahf
int
movsl
jp
test
jno
or
or
xor
pop
int
hlt
jno
mov
test
xchg
dec
cmpsl
pushf
pop
push
xor
imul
mov
daa
stos
lock
test
sbb
int
imul
dec
jb
jb
dec
cs
xlat
gs
iret
mov
pop
or
jle
leave
ret
xchg
or
imul
push
ss
jae
jae
xchg
repz
xor
lods
push
into
das
std
jl
sbb
rorl
in
cwtl
push
aas
sti
xchg
cmc
iret
idivl
mov
pop
daa
sbb
lcall
cmp
fstpl
sub
xlat
push
outsl
shl
jae
sub
addr16
into
jg
sti
mov
shl
and
mov
push
pop
cmp
loopne
in
mov
icebp
sbb
xchg
sti
mov
cmp
aas
outsb
je
jp
fstpl
xlat
jne
negl
pop
das
fadds
int
push
dec
into
mov
dec
cmp
jp
aad
dec
aas
aas
fs
pushf
fwait
push
shlb
ret
out
and
fcomps
ret
mov
pusha
imul
jae
sbb
fdivs
or
insl
push
inc
insl
testl
inc
xor
filds
mov
mov
mov
cld
sarb
fistpll
into
clc
mov
outsl
outsb
lods
mov
xchg
fwait
lret
fs
xlat
gs
rorl
repnz
pop
out
jb
out
cmp
std
lock
hlt
mov
push
pop
cmc
mov
mov
push
repnz
bound
out
stc
shll
call
push
mov
xor
aam
lcall
add
stos
add
enter
in
mov
add
dec
shlb
fiadds
sbb
or
aam
jp
hlt
inc
sarb
jnp
ja
out
sbb
repz
out
sub
pushf
jle
movsb
outsl
inc
shl
test
jge
cli
push
xor
cld
pop
dec
in
add
and
fsts
xlat
adc
daa
repnz
loop
mov
js
and
lcall
ret
xlat
pop
sahf
mov
stc
pop
xchg
sub
and
cld
fwait
leave
popf
clc
aaa
xchg
rorl
pop
loop
adcb
fistps
cld
popf
mov
imulb
call
inc
jge
dec
xchg
imull
jle
mov
mov
xchg
aam
in
and
fldt
fstl
adc
ret
push
dec
xchg
dec
mov
cli
adc
lock
nop
jle
mov
nop
jecxz
and
xchg
loopne
jge
aas
cmp
push
and
fiadds
ds
movb
sub
and
cmp
add
jbe
loope
cmova
fistpll
lds
pop
xor
and
dec
and
mov
scas
dec
clc
jg
in
add
xchg
dec
pop
and
cmp
lcall
cld
mov
pusha
add
into
scas
adc
lea
dec
push
cmp
adc
loop
jle
and
dec
shrl
jo
jecxz
shr
ljmp
ss
clc
jle
daa
cmp
jp
lret
adc
xchg
leave
repz
popf
sbb
add
lahf
popf
cmp
xchg
sbb
in
loopne
in
cmp
cld
mov
mov
pop
mov
jge
sbb
iret
icebp
loope
dec
or
out
jmp
mov
insb
push
push
stc
es
scas
adc
cmp
ret
out
cmpsl
adc
mov
push
adc
popf
call
loope
ja
in
aaa
fsubl
mov
or
inc
jl
mov
sarl
pushf
jle
cmp
dec
jae
jns
rcrb
pop
outsb
pop
sti
jnp
cmp
mov
cld
xchg
lds
add
mov
push
jo
mov
testb
cs
jge
mov
jno
in
loop
fnsave
cmp
cmp
stc
stc
loopne
movsb
xor
jmp
jmp
jmp
dec
xchg
out
into
and
stc
inc
loop
aas
outsl
dec
xor
xor
lret
mov
fildl
adc
push
adc
test
pop
and
repz
sbb
clc
inc
push
decl
sub
lock
or
or
xor
cmc
out
cmpsb
add
ss
sbb
cs
cmovo
xor
dec
rcrb
sarb
jno
jnp
in
mov
mov
mov
xor
or
push
xchg
subb
pop
or
aas
inc
stos
inc
jmp
jg
mov
std
testb
add
hlt
add
push
shrb
adcb
sbbb
pusha
pop
and
test
push
shll
out
cmp
out
xchg
jge
cmc
call
testb
pop
repnz
in
dec
in
adc
mov
mov
ljmp
mov
inc
inc
and
jg
adc
jge
je
negl
movsb
jge
push
std
adc
je
cmc
pop
pushf
sti
xlat
mov
cmp
sbb
mov
cmp
cmp
sbb
mov
cmp
cmp
sbb
mov
cmp
cmp
sbb
mov
mov
inc
mov
jae
sbb
mov
das
test
sar
and
sbb
mov
jl
clc
insb
lds
cld
test
ret
mov
sub
aad
loop
jmp
xchg
lahf
sahf
mov
and
in
xchg
scas
mov
hlt
xchg
filds
push
sbb
mov
inc
xor
lahf
dec
dec
lahf
cmpsb
out
jmp
mov
dec
out
push
data16
rcrb
sbb
outsl
mov
stc
mov
call
dec
mov
rcrb
or
int
mov
sti
sti
insb
xchg
fistpll
sub
outsl
ja
jb
stc
pop
push
fbstp
movsl
cmpl
mov
sahf
push
std
mov
mov
mov
push
sti
cmpl
cmp
jecxz
cmp
iret
push
cld
mulb
flds
sahf
push
pop
xor
incb
pop
mov
std
es
ds
outsl
cwtl
adc
loopne
pop
xor
int
mov
popf
cmp
mov
clc
cli
dec
scas
out
jp
jg
popf
icebp
jle
adcb
mov
ret
mov
mov
mov
js
scas
lods
mov
add
in
out
jg
mull
cli
call
mov
arpl
jge
lcall
push
outsl
scas
cmp
int
out
cs
outsb
cwtl
clc
lock
cmpsl
jle
in
unpckhps
rorl
ja
fimuls
lods
jg
insb
ljmp
mov
jge
sub
js
sbb
jecxz
je
pop
xor
xchg
mov
mov
cwtl
popf
jge
mov
scas
jae
push
popf
mov
in
xor
out
sbb
sbb
sbb
call
jmp
fadd
stos
out
lods
sbb
imul
mov
aaa
popf
cmp
mov
pop
ds
xchg
jbe
mov
pop
clc
fwait
mov
pop
int
mov
ja
jg
insl
loopne
rcll
jnp
lock
into
imul
out
shlb
xchg
push
lods
mov
mov
lods
cltd
je
pop
mov
pop
nop
fnstsw
rolb
out
aaa
aas
into
cmp
insb
pusha
rol
xchg
mov
mov
push
sbb
xchg
test
aam
sbb
stc
ret
dec
std
mov
mov
popf
pop
jg
mov
inc
sub
sub
fdiv
shll
mov
mov
pop
das
jp
scas
push
stos
in
push
jg
mov
mov
xchg
mov
mov
push
fucomp
fsubp
jg
repnz
call
xchg
lcall
popa
repnz
outsl
jg
shll
pop
mov
pop
imul
sbb
xor
xchg
jnp
sub
aad
lret
mov
outsl
insb
cmp
iret
mov
mov
or
xchg
pop
push
ja
test
cmc
mov
mov
mov
pop
js
nop
mov
sbb
cmp
enter
inc
and
xchg
xchg
sarb
push
in
enter
in
mov
loopne
in
decb
xchg
dec
cmpb
mov
andl
cmp
sti
lret
js
fs
imul
gs
enter
insb
loope
in
enter
fadds
shrb
dec
negb
cwtl
lods
push
js
xchg
int
rorb
mov
stos
test
push
fldcw
mov
fmuls
call
es
les
popf
iret
inc
les
addb
in
loop
in
pop
jp
div
out
mov
or
mov
xor
jnp
stc
inc
jbe
cmp
test
lods
jne
cmp
cmpsl
addr16
lcall
pushw
arpl
fldenv
push
xlat
push
iret
inc
shll
aam
or
imul
jmp
in
xchg
push
out
in
push
jp
fcoms
into
sbb
cwtl
hlt
lock
fadds
push
mov
aad
popf
movb
cld
mov
sub
inc
clc
push
or
pop
iret
mov
shrb
mov
mov
and
cmp
or
dec
divb
jl
movsl
jb
or
xor
sahf
iret
stos
jmp
pop
mov
fbld
arpl
f2xm1
mov
in
push
jp
mov
vprotd
lret
mov
clc
add
les
jbe
bnd
inc
divl
cmp
pop
insb
push
mov
test
test
filds
push
fdiv
enter
loope
fs
int
arpl
xor
push
mov
insb
push
mov
mov
subb
cmpsb
mov
je
xor
xchg
aam
and
sub
push
out
paddusb
jb
mov
add
out
movsb
sub
adc
xorb
movb
inc
pop
push
and
or
and
dec
js
decl
pop
pop
stc
and
cmp
cmp
xchg
lahf
sbb
jp
ss
push
add
incl
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
pop
or
or
or
mov
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
lea
mov
push
push
mov
mov
add
lea
mov
push
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
push
addb
push
addb
push
addb
push
addb
push
addb
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
push
push
add
push
call
test
je
pop
pop
pop
pop
jmp
push
push
mov
mov
mov
sar
rep
mov
and
rep
pop
pop
ret
push
mov
mov
sub
lea
orl
mov
lea
mov
mov
lea
push
mov
mov
push
xor
xor
lea
push
mov
mov
mov
mov
mov
xor
mov
movl
test
jne
push
pop
cmp
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
mov
shr
and
sub
mov
je
dec
jne
shr
mov
sub
mov
jmp
sub
push
mov
pop
and
shr
shr
sub
mov
mov
jmp
mov
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
not
and
shr
xor
jne
xor
xor
test
mov
mov
je
push
pop
jmp
mov
neg
sbb
and
mov
cmp
jne
cmpl
jne
mov
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
mov
jae
lea
sub
dec
mov
jmp
lea
sub
mov
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
lea
cmp
je
lea
mov
lea
cmp
lea
jae
sub
dec
mov
jmp
sub
mov
mov
test
je
mov
andl
cmp
jbe
mov
push
pushl
pushl
call
add
add
add
sub
add
sub
jne
mov
neg
sbb
and
mov
jmp
mov
push
pop
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
and
sub
shr
xor
pop
mov
mov
mov
mov
jmp
mov
xor
cmp
jne
shr
add
cmp
jae
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
mov
and
sub
add
movzbl
shr
mov
mov
incl
shr
add
cmp
jb
mov
push
pop
cmp
jae
mov
add
movzbl
mov
incl
jmp
lea
movl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
mov
call
add
test
jne
cmp
je
push
mov
pop
mov
cmp
jne
mov
mov
shr
and
and
lea
cmp
mov
jae
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
mov
lea
cmp
movzbl
jae
mov
sub
mov
shrl
mov
incl
jmp
cmp
jne
push
pop
jmp
lea
xor
cmp
setne
dec
and
add
mov
lea
cmp
jae
sub
add
shr
add
mov
movzbl
mov
add
shl
lea
or
incl
cmp
jb
mov
push
shrl
pop
mov
shl
add
mov
sub
dec
and
shrl
add
mov
mov
lea
cmp
ja
cmp
jne
cmp
jb
cmp
jne
mov
jmp
xor
lea
mov
inc
add
dec
jne
mov
jmp
lea
mov
push
lea
push
lea
push
lea
push
mov
lea
and
andl
andl
push
pushl
pushl
lea
push
push
lea
movl
push
movl
call
add
test
jne
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
shr
push
and
pushl
pushl
inc
push
lea
push
push
call
add
test
jne
mov
test
jne
test
jne
mov
andl
mov
push
mov
pop
mov
mov
cmp
jne
mov
mov
mov
andl
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
jne
cmp
jb
mov
mov
mov
mov
andl
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
push
mov
mov
pop
shl
mov
push
dec
mov
pop
shl
dec
mov
cmp
jae
push
pop
sub
shr
add
movzbl
mov
add
shl
or
inc
cmp
jb
mov
mov
mov
and
lea
lea
movzbl
mov
test
movzbl
jne
shr
movzbl
sub
mov
mov
inc
decl
jmp
shr
movzbl
sub
testb
jne
jmp
mov
testb
jne
mov
push
pop
shl
dec
and
add
lea
lea
movzbl
mov
test
movzbl
je
shr
sub
testb
je
andl
push
mov
pop
shl
sub
dec
and
add
shr
cmp
mov
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
lea
lea
movzbl
mov
movzbl
shr
sub
testb
jne
testb
jne
mov
push
pop
shl
dec
and
add
lea
jmp
andl
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
push
pop
sub
shl
dec
and
add
lea
shr
mov
sub
mov
sub
cmp
jb
mov
sub
mov
mov
mov
inc
inc
mov
inc
inc
subl
jmp
mov
lea
sub
sub
cmp
jbe
sub
mov
mov
inc
inc
dec
jne
lea
mov
mov
inc
inc
decl
jne
jmp
shr
sub
mov
mov
inc
decl
mov
cmpl
jae
mov
shr
cmp
jb
mov
mov
sub
shl
sub
andl
mov
mov
mov
jmp
testb
je
mov
shr
cmp
jb
mov
mov
mov
shl
sub
sub
mov
mov
movl
mov
andl
cmp
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
je
cmpl
jne
mov
movl
jmp
movzbl
mov
mov
mov
movl
mov
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
lea
movzbl
shrl
sub
movzbl
test
mov
jne
mov
movl
mov
jmp
test
je
and
mov
mov
mov
movl
jmp
test
je
test
je
movl
jmp
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
mov
sub
mov
movzbl
mov
mov
jmp
mov
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
pop
shl
dec
and
lea
movzbl
shrl
lea
sub
mov
movzbl
test
je
and
mov
mov
mov
movl
jmp
test
jne
mov
mov
lea
lea
mov
jmp
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
sub
mov
cmpl
jne
mov
lea
sub
cmp
jae
mov
lea
lea
sub
sub
jmp
mov
sub
cmpl
je
mov
mov
jmp
mov
test
jne
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
andl
mov
mov
mov
inc
inc
dec
cmp
jne
lea
decl
jne
andl
mov
cmpl
jne
test
jne
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
mov
andl
mov
inc
dec
andl
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
movl
cmpl
je
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
call
add
cmpl
jne
jmp
mov
push
mov
pop
lea
mov
push
lea
push
lea
push
lea
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmp
mov
jne
mov
xor
mov
jmp
push
pop
cmp
jbe
orl
add
dec
mov
mov
mov
cmp
jne
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
push
pop
mov
cmp
je
jmp
mov
mov
jmp
movl
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
add
cmpl
jge
xor
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
incl
lea
dec
jne
cmp
jne
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
pop
lea
mov
mov
cmp
jne
inc
add
cmp
jbe
cmp
mov
jae
mov
mov
push
lea
pop
cmp
jne
dec
sub
cmp
jne
cmp
mov
jbe
mov
mov
push
mov
pop
shl
cmp
jae
lea
sub
js
inc
add
shl
cmp
jb
mov
shl
mov
lea
sub
mov
js
add
mov
xor
dec
mov
je
xor
add
add
dec
mov
jne
mov
xor
mov
add
test
mov
je
mov
mov
lea
mov
mov
inc
mov
mov
inc
cmp
jb
mov
andl
andl
orl
mov
mov
mov
mov
mov
neg
cmp
jg
lea
mov
mov
mov
mov
dec
test
mov
je
jmp
mov
lea
cmp
jle
inc
mov
incl
add
mov
mov
add
sub
cmp
jbe
mov
mov
push
sub
pop
shl
cmp
jbe
or
sub
add
mov
cmp
jae
inc
cmp
jae
jmp
mov
add
mov
mov
shl
cmp
jbe
sub
inc
cmp
jb
mov
push
pop
mov
shl
mov
add
cmp
ja
mov
lea
lea
mov
shl
cmpl
mov
lea
mov
mov
mov
mov
je
mov
mov
mov
mov
sub
mov
shr
mov
mov
sub
mov
push
cltd
pop
idiv
mov
sub
mov
lea
lea
lea
movsl
movsw
jmp
mov
mov
mov
mov
mov
cmp
jg
mov
mov
sub
mov
mov
lea
cmp
jb
movb
jmp
mov
mov
cmp
jae
cmp
sbb
and
add
mov
jmp
sub
mov
mov
add
mov
mov
movzwl
addl
mov
mov
mov
push
sub
pop
mov
shl
mov
shr
cmp
jae
mov
lea
lea
lea
shl
mov
mov
add
lea
add
cmp
movsl
movsw
jb
mov
mov
mov
push
lea
pop
shl
test
je
xor
shr
jmp
xor
mov
mov
lea
push
mov
pop
shl
dec
and
cmp
je
decl
sub
sub
jmp
mov
decl
mov
test
jne
incl
addl
mov
cmp
jle
test
je
cmpl
je
or
jmp
or
jmp
push
mov
push
mov
push
push
mov
mov
push
mov
mov
cmp
mov
mov
jbe
mov
mov
sub
mov
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
push
call
add
mov
add
add
cmp
jne
cmp
lea
mov
jne
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
pushl
call
add
add
add
mov
mov
pop
mov
mov
mov
pop
pop
leave
ret
nop
and
sbb
add
dec
add
cmp
add
add
add
out
add
cld
out
sbb
dec
xor
add
lea
add
adc
add
add
imul
mov
mov
add
jle
sbb
test
add
add
add
jbe
add
add
add
mov
sbb
add
mov
sbb
add
mov
add
mov
sbb
add
mov
add
mov
sbb
add
add
mov
add
sbb
add
sbb
add
sbb
add
add
mov
add
cmpl
add
mov
sbb
add
mov
add
ds
sbb
add
sbb
add
add
add
mov
add
add
add
test
sbb
add
add
add
mov
add
sarb
add
loopne
sbb
add
add
addb
add
adc
add
or
add
lock
add
add
ja
jbe
dec
jne
dec
jo
outsb
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
arpl
add
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
add
addr16
insb
outsl
jae
dec
gs
add
push
push
js
arpl
gs
add
add
push
popa
jae
dec
gs
inc
jb
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
push
dec
dec
dec
dec
cs
insb
add
xor
xor
fs
insb
add
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
dec
xor
cs
insb
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
insb
add
inc
dec
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
gs
cs
insb
add
insl
fs
xor
cs
insb
