and
jb
loope
xchg
adc
iret
leave
or
int3
inc
pop
mov
xor
lds
fs
sbb
or
dec
push
jl
aas
mov
lds
or
negl
dec
popf
and
mov
loopne
lcall
mov
aaa
bound
adc
loope
aam
mov
insl
xchg
aam
fucomip
rcr
sbb
add
fmulp
push
adc
subl
xor
aad
stc
or
inc
hlt
cs
fwait
insb
inc
xchg
jmp
mov
mov
call
mov
mov
in
mov
xorb
add
subl
mov
mov
test
fidivrl
aaa
xor
mov
mov
sbb
push
test
lea
dec
xor
jmp
cli
sub
xchg
push
lods
call
jge
pusha
movl
pusha
call
push
pushf
mov
cwtl
setle
pushl
popl
movzbl
push
call
daa
rcll
lds
adcl
ja
or
lahf
mov
sbb
popa
cwtl
lea
xorl
and
insb
cmp
cmp
and
xchg
xchg
loope
or
mov
jmp
cmp
clc
add
push
pushf
lea
jmp
pop
mov
gs
stos
sbb
and
sub
stos
imul
jecxz
xor
fists
jge
xlat
in
sti
rcr
loope
xlat
pop
push
push
pop
and
and
cli
das
mov
mov
loop
jg
repz
push
cld
dec
stc
cli
orb
sarb
mov
mov
dec
test
jb
shrl
dec
call
into
ficoms
cli
das
or
loope
xor
pop
cmp
add
imulb
xor
lea
sahf
rcrl
scas
cmpsl
inc
jle
arpl
inc
movl
ret
adc
jbe
outsb
movsl
push
jg
int3
mov
push
ret
mov
frndint
stc
jecxz
scas
dec
orb
dec
dec
sbbl
aas
and
push
mov
cwtl
cmp
loop
ds
cmp
mov
mov
movsl
fsts
lock
adc
sarb
test
addr16
rol
sbb
std
or
xchg
jecxz
push
fistpll
add
pushf
cltd
sub
push
movsl
imul
arpl
pop
add
arpl
push
imul
mov
mov
addl
out
fnstsw
push
out
cli
add
jns
in
test
decl
pop
push
movsl
fimull
lcall
jno
push
test
or
in
aad
cwtl
add
mov
test
push
call
pop
adc
cmp
add
pop
xchg
push
pusha
mov
lea
jmp
iret
aas
inc
mov
ficomps
addl
add
mov
cltd
dec
or
icebp
rcrb
add
push
clc
imul
stc
pop
jbe
mov
adc
scas
aaa
pop
outsl
sub
mov
cmp
mov
push
into
cli
lret
popa
gs
pop
mov
shlb
std
or
xchg
pushl
movzbw
mov
bswap
movsbw
mov
pushf
mov
pushf
push
push
movb
pushl
ret
lea
je
call
push
lea
call
push
movw
pusha
lea
jmp
call
pusha
mov
pushf
push
pushl
ret
movl
pushl
call
push
movl
jmp
add
add
add
xorl
add
and
add
add
add
adc
add
add
pusha
sub
add
add
subb
add
add
add
add
add
add
add
mov
adc
add
adc
add
adc
add
adc
jae
insb
popa
jns
push
dec
dec
push
popa
add
jae
insb
popa
jns
push
dec
dec
push
je
add
bound
inc
jb
ja
gs
bound
arpl
outsb
inc
insl
bound
inc
jb
ja
gs
bound
arpl
repnz
jmp
sahf
dec
dec
in
adc
lret
out
sub
data16
sti
jnp
enter
and
movsl
xor
and
daa
lods
out
fisubrs
pslld
pop
mov
fsubrs
inc
addr16
addr16
inc
push
push
arpl
mov
push
loopne
test
testb
sbb
subb
les
push
cli
and
and
test
cmp
int3
xchg
mov
xor
enter
pusha
push
cmp
pop
rcrb
fs
xchg
imul
enter
repnz
push
imul
pop
or
sbb
mov
pop
insb
testl
aaa
push
xor
js
push
sub
mov
out
bound
mov
pop
mov
fs
push
out
mov
rolb
adc
dec
test
and
xor
push
mov
and
dec
lds
repnz
mov
scas
into
aas
ja
outsl
inc
repz
sbb
sub
mov
mov
inc
insb
pop
or
lret
mov
xor
test
ja
dec
cmp
push
xchg
mov
int
xchg
inc
jg
push
cmp
lods
inc
test
pop
lret
fdivrl
xchg
test
inc
or
popa
insb
cmp
mov
arpl
pop
cmp
cltd
bnd
popf
sbb
sarb
mov
stos
lahf
cli
rcrb
cmc
or
or
or
pop
test
or
out
mov
shrl
xor
movsl
test
ret
hlt
mov
in
pop
or
pop
mov
adc
imul
sub
or
adc
add
dec
jbe
xor
dec
sbb
in
dec
cmp
jecxz
aaa
adc
push
xchg
shlb
gs
add
icebp
pop
fs
mov
jp
jb
lret
sub
mov
out
and
adc
insb
jno
add
lret
sbb
sbb
inc
rcr
out
dec
dec
mov
jo
sub
cmpsl
mov
and
push
int3
mov
mov
jecxz
xor
int3
xchg
loope
call
cltd
jp
inc
and
ret
jae
push
mov
andb
fdivrp
mov
lods
in
mov
ficompl
pop
xor
xchg
xor
mov
mov
aam
inc
mull
cld
and
cld
mov
lahf
bound
rcll
sbb
test
pop
jo
fsub
pop
ljmp
add
cmp
pushf
cmp
xchg
shrb
sbb
mov
pop
mov
push
shl
push
fwait
aas
add
dec
daa
add
bound
sbb
inc
pop
fbld
lcall
sub
cmp
sbb
cwtl
cmpsl
xor
outsl
add
arpl
lret
cmp
mov
fistl
dec
pop
add
cltd
aam
cmp
adc
data16
jbe
cmc
dec
pop
mov
andl
loope
mov
aaa
movb
mov
push
dec
cmp
test
cmp
adc
mov
and
movsb
sub
sub
das
fsubl
out
jo
adc
aaa
lods
in
and
push
adc
ljmp
or
dec
idivl
das
or
rorl
cmp
mov
je
jmp
aaa
mov
and
sub
sbb
push
popf
nop
jnp
out
rolb
dec
sbb
pop
push
scas
std
popa
mov
lock
mov
scas
cmp
inc
lods
or
ss
mov
ss
jo
xchg
dec
mov
lea
adc
or
push
xchg
std
icebp
pop
inc
jle
or
add
loopne
aas
leave
lods
daa
bound
lahf
sub
push
or
xchg
mov
leave
lahf
in
and
or
cmp
aam
jne
add
mov
mov
aad
lods
std
adc
add
mov
sbb
out
addr16
adc
pusha
pop
sub
jmp
jg
in
mov
fisttpll
or
and
mov
xor
icebp
adc
push
pop
arpl
rorb
out
cwtl
mov
ret
push
scas
sahf
push
push
rorl
sub
pop
pop
ljmp
fisttpl
in
cmp
xlat
loop
pop
adc
and
fcomp
fdivs
mov
mov
lods
inc
cmp
xchg
push
test
mov
fwait
cwtl
inc
push
cmc
adc
or
adc
cmpsl
adc
adc
cltd
or
int
outsl
nop
out
gs
stc
and
ret
pop
ljmp
and
rcll
shll
sbbl
push
addl
inc
pop
jns
call
pop
cld
stos
jb
pushf
push
shrl
lods
mov
and
push
and
and
pop
mov
sarb
inc
mov
pushf
loope
cmp
jb
add
testb
push
aam
mov
int3
data16
dec
test
ret
lods
cltd
jecxz
aaa
rcll
pop
mov
shrb
popf
xor
sarl
inc
pop
dec
jbe
and
or
popl
inc
xor
aaa
imul
rol
cmp
sti
into
cli
sti
sbb
mov
pop
xor
fcoml
pop
test
mov
cmp
xor
hlt
mov
pushf
fistl
adc
js
bound
nop
pop
dec
out
jae
xchg
push
push
pop
stc
xchg
xor
es
dec
sbb
lea
aas
push
cwtl
inc
repnz
jmp
rcrb
and
and
xorb
scas
ds
cmp
pop
dec
xor
sti
ja
call
test
loopne
lret
jo
stc
jle
lods
xorb
lcall
sub
insb
dec
idivb
outsb
inc
ret
fisubrs
movsl
sub
clc
rcr
or
pop
ljmp
xor
or
xor
nop
fmull
xor
sbb
lock
pop
sub
sbb
xchg
fisubs
nop
insb
dec
sbb
out
jae
push
mov
mov
add
push
sbb
or
mov
add
and
gs
addb
adc
cmpsb
roll
iret
mov
mov
xchg
repnz
cmpsl
jecxz
xchg
mov
xchg
xor
cmp
nop
lock
test
hlt
inc
stos
out
ds
adc
arpl
mov
xchg
cmp
mov
jnp
sbbb
scas
cmp
fs
or
xorb
daa
inc
sub
lret
pop
push
cld
shr
cld
aaa
fstpl
test
inc
test
jbe
xor
scas
mov
jne
daa
inc
shrb
pop
sub
fcomps
popf
mov
xor
test
and
mov
mov
in
stc
fwait
mov
aam
cmp
inc
adcl
lea
cmp
xchg
ret
bound
or
out
fwait
popf
hlt
adc
leave
cmp
lahf
in
loop
or
fwait
loopne
cltd
sub
pop
jns
sbb
adc
sbb
iret
outsb
lret
rcrl
sub
xchg
jmp
pop
inc
cmpsl
insb
and
xor
add
loope
sub
mov
pop
iret
mov
cmp
fadds
loop
rol
lods
mov
out
call
sbb
adc
cmp
jg
test
mov
adc
xorl
outsb
push
repz
jb
push
xchg
pop
stos
push
shlb
push
xchg
gs
pop
and
cmp
or
rcr
lock
sub
sti
jecxz
std
test
inc
or
sub
out
loope
jnp
push
loope
dec
imul
mov
jl
repz
add
xchg
imul
pop
int3
mov
pop
adc
test
sub
in
fcomps
mov
mov
mov
push
scas
lret
cmpsb
fldl
and
mov
sub
outsl
adc
lds
sahf
orl
cs
sub
loopne
dec
pop
int3
outsl
lods
push
and
cmp
adc
jge
pop
subb
gs
popa
cld
sub
mov
ljmp
test
jecxz
imul
loope
jp
add
jns
sub
ds
insb
mov
iret
inc
adc
pop
gs
js
dec
or
je
lahf
sub
mov
popl
push
test
cli
cli
lahf
adc
or
and
sbb
inc
push
rcll
xchg
fnstsw
xchg
stos
mov
mov
rcr
fiadds
inc
pop
imul
lret
mov
ret
sbb
mov
pop
scas
insl
aam
pop
jecxz
pop
cmp
into
outsl
dec
nop
xchg
ret
int3
push
xor
shrl
jns
sarl
int
push
ret
imul
outsb
mov
cmp
jge
cmp
into
js
icebp
push
int
stos
lods
mov
int
cmp
or
popa
fsubl
rcrb
movsb
ja
int3
lds
mov
daa
jo
loopne
and
sahf
xor
adc
adc
pop
cli
jl
add
mov
fists
scas
outsl
scas
shrb
push
mov
jg
cmp
stc
jo
fnstenv
out
pop
dec
push
std
mov
mov
scas
mov
xchg
pushf
and
mov
jp
xor
das
sbb
pop
mov
fcomip
mov
dec
mov
adc
cli
jge
fs
cmpsb
xlat
inc
loopne
dec
or
inc
decl
cmc
inc
or
mov
jbe
orl
mov
test
adc
mov
pop
mov
fwait
jg
mov
pop
loope
cmp
hlt
ror
xchg
dec
les
imul
cmc
call
cmp
int
push
inc
or
sbb
cmc
push
js
pusha
or
in
ds
pop
rolb
fwait
jns
popa
inc
jge
scas
and
les
ret
mov
loop
imul
repnz
add
xlat
subl
jmp
sbb
cld
shlb
gs
lret
sti
mov
fstl
out
sub
inc
shrl
adc
or
cmp
mov
mov
pusha
fdivs
hlt
xor
mov
lea
daa
mov
out
jbe
addr16
add
clc
int3
stos
cmp
aas
sbb
in
out
outsl
and
cwtl
xor
ret
and
jle
xchg
pop
aas
dec
out
fwait
xor
int3
push
inc
push
sarl
incb
outsl
push
mov
pushl
mov
and
add
inc
xor
jbe
mov
jne
test
cmpsb
xor
and
dec
imul
jnp
repnz
mov
pop
add
gs
je
insb
gs
insb
add
clc
bt
shld
shrd
mov
cmp
cmc
add
pusha
movsbw
movzbw
pushf
mov
movb
call
lea
jne
bt
clc
movsbl
rcl
mov
test
clc
pushf
add
clc
pushl
pushf
movzwl
movsbl
mov
pushf
cmc
bt
push
add
movb
push
clc
call
movzbw
ror
rcl
mov
mov
stc
test
cmp
cmpb
pusha
pushf
lea
jne
call
cltd
jmp
and
mov
ss
xchg
out
shlb
outsb
jnp
push
iret
aaa
outsl
jne
add
clc
loope
jae
mov
lea
mov
xor
xchg
out
inc
inc
push
adc
jge
mov
adc
mov
adc
pop
ljmp
mov
lods
push
rcrb
pop
in
imul
sub
pusha
dec
in
or
clc
dec
add
outsw
pop
aam
aas
or
sahf
mov
or
cmp
scas
sbb
xbegin
outsb
pop
dec
xchg
fstps
inc
cmpsb
divl
and
and
add
pop
andb
mov
mov
adc
sub
xor
mov
std
or
bt
cmp
push
movb
lea
jne
pusha
jmp
mov
mov
neg
mov
pushf
bt
clc
cmp
xor
cmc
clc
repnz
mov
jmp
lea
je
mov
seto
setl
call
jmp
and
lds
ds
jo
mov
inc
popa
test
xchg
xchg
loopne
lret
inc
fstpl
jae
int3
enter
sar
adc
gs
cli
jecxz
sarl
and
xchg
jg
xchg
mov
xlat
nop
inc
mov
sub
fs
lahf
data16
test
jp
not
pushf
lods
mov
push
jmp
pushf
mov
movw
pusha
pushf
lea
call
pusha
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
enter
jmp
push
cmp
jmp
pusha
lea
jb
call
call
test
fcomps
mov
mov
outsl
dec
outsb
dec
xchg
and
jns
push
mov
adc
test
in
shl
pop
push
sbb
push
mov
jge
xchg
mov
pop
mov
mov
loope
cmp
enter
or
inc
add
cmp
lret
mov
add
inc
dec
mov
js
imul
aad
mov
stos
ret
sti
push
cmp
test
dec
fisubrs
sbbb
lods
aad
std
or
pusha
pushf
not
jmp
mov
clc
stc
test
jmp
je
pushf
cmc
jmp
or
mov
call
pushf
jmp
pushf
push
call
movw
cmp
movl
call
add
aas
jae
bound
jb
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
push
inc
inc
aas
inc
push
xor
inc
dec
dec
inc
pop
add
xor
imul
movl
pusha
mov
add
pushf
lea
jmp
pusha
pusha
xchg
call
pushf
lea
ja
pusha
lea
jb
call
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
jle
fbstp
out
adcl
cwtl
mov
stc
ret
push
test
outsb
sub
mov
jae
mov
das
add
mov
inc
inc
clc
aas
cmp
ds
test
dec
xor
test
dec
mov
mov
adc
lret
loope
add
inc
xchg
mov
ss
aaa
adcb
sarl
pusha
mov
dec
jne
scas
xchg
aam
push
push
xor
jmp
xorl
and
loope
sub
loopne
push
std
or
lea
jbe
push
pushf
mov
push
lea
jmp
cmp
pushf
or
movb
lea
jne
lea
ror
ror
mov
push
cmp
test
stc
or
lea
jp
pusha
mov
lea
je
pusha
pusha
lea
mov
not
mov
movzwl
pop
lea
bswap
not
mov
jmp
mov
push
jle
test
adc
mov
ss
cwtl
dec
xor
fcmovnbe
mov
push
mov
cmp
hlt
push
sub
pusha
push
pop
das
nop
cmp
and
jg
lock
aas
sti
popf
scas
mov
jbe
mov
popa
sub
and
xlat
stos
jp
xchg
cmp
fcomps
mov
negl
enter
push
jnp
or
into
cmpsb
rcr
mov
xchg
pop
lcall
das
cmpsb
pop
dec
in
mov
lock
xchg
cmp
push
ds
enter
repnz
sub
test
pop
subl
daa
cld
add
or
mov
mov
and
pop
and
shrb
loopne
xor
aam
clc
test
mov
cmpl
enter
and
cwtl
loop
adc
daa
jg
mov
outsb
mov
bound
mov
cld
ja
dec
je
sub
int
subl
addr16
mov
or
jg
rorb
dec
int3
cld
daa
jnp
test
js
ret
mov
cltd
add
cli
loope
adc
cltd
add
jo
movsb
bound
ja
imul
scas
cmp
iret
pushf
scas
jb
test
addr16
and
mov
pop
es
inc
mov
test
cmpsl
stc
cmp
leave
xlat
mov
cs
lss
lods
rcrl
add
or
movb
mov
jmp
push
pushf
lea
je
pushf
push
push
call
call
movl
push
movl
jmp
sub
pushf
clc
stc
movb
repnz
pushl
pushl
pusha
call
lea
jae
clc
call
jmp
push
mov
pushf
pushl
pushl
ret
lea
jne
movsbw
jmp
cmp
pushf
call
stc
movl
not
clc
cmp
sub
mov
movb
not
push
inc
test
stc
cmp
movsbl
lea
lahf
movb
push
mov
mov
pusha
push
lea
ja
pushf
call
lea
jae
pushf
lea
jne
jmp
jmp
pop
mov
push
sbb
jae
inc
push
adc
xor
scas
test
sub
cmp
push
jmp
pop
leave
scas
outsl
sub
shll
dec
ficoml
lods
or
inc
mov
sub
cs
jmp
ja
out
std
or
call
les
inc
insl
sub
add
ljmp
add
mov
pop
pop
xchg
loope
js
pop
add
add
clc
leave
push
sar
push
pop
xchg
push
push
xorl
cmp
mov
push
into
mov
mov
mov
inc
gs
iret
testl
jnp
fimull
mov
xor
and
cmp
movsb
sbb
xchg
inc
add
lret
movsl
mov
push
cltd
mov
inc
call
call
stc
pusha
cmp
sub
pusha
inc
pushl
jmp
pushf
lea
jb
stc
push
cmp
call
shr
pushf
cmp
pushf
pushl
lea
je
test
cmp
cmp
pusha
call
jmp
call
adc
pusha
pushf
mov
movb
lea
jmp
lea
call
push
mov
pushf
call
lea
jne
btc
shl
mov
push
shl
sub
pushf
rcr
not
lea
cmp
call
movb
lea
ja
call
pushl
popl
cmp
cmp
clc
cmp
call
lea
push
cwtl
lea
lea
bswap
lea
call
push
pushf
pushl
push
lea
jmp
cli
mov
lret
add
loop
push
xchg
ljmp
mov
xor
inc
mov
xlat
scas
daa
mov
jno
fcomps
pop
cltd
js
xor
out
lret
push
mov
aam
fs
jae
clc
call
lea
call
jmp
movb
lea
jb
test
cmp
cmp
pushf
pushf
lea
ja
dec
call
mov
cmp
sbb
lcall
mov
fs
dec
ss
es
pop
and
sub
jo
rcll
sbb
inc
pop
sub
mov
mov
out
outsb
movl
aas
rcrl
mov
and
fwait
pusha
jmp
mov
push
adc
insl
js
negb
pop
cmpl
xor
sub
add
add
push
push
jmp
inc
mov
lea
jbe
pushf
inc
push
lea
jmp
lea
jne
pushf
bsr
adc
mov
stc
test
test
jmp
popf
or
xor
rcpps
loope
xlat
mov
jg,pt
cmp
outsl
sbb
inc
mov
pop
sbb
mov
repnz
xchg
dec
filds
dec
mov
xor
clc
mov
je
hlt
jne
add
mov
jnp
fistl
and
movsb
sbb
stos
pop
xor
cmp
xchg
push
mov
movsb
ss
or
movl
pushl
mov
push
jmp
mov
cmc
cmc
clc
mov
push
cmp
call
movzwl
shl
btr
shld
mov
clc
pusha
add
bt
mov
jmp
jmp
mov
pushf
movl
push
pusha
lea
jmp
cmp
pop
movb
test
pop
add
sub
and
push
dec
push
sbb
lcall
icebp
xor
rolb
insb
cmp
dec
lods
in
adc
orl
mov
lahf
mov
insl
sub
cmp
lods
int3
pop
jo
in
cmp
mov
insb
cmp
xor
test
stc
add
pushf
jmp
xchg
hlt
fnstsw
into
fdivl
push
mov
mov
loope
mov
notl
push
push
jle
iret
sub
sti
dec
call
xor
cmpsb
inc
jge
lods
add
lret
cmpsb
hlt
hlt
mov
adc
mov
popa
pop
add
xchg
pop
les
cld
pop
sub
inc
and
fcompl
jge
cmp
mov
adc
lea
xchg
sub
mov
cmp
outsl
jnp
jns
daa
jg
adc
mov
cli
gs
bound
jnp
xor
sub
bound
pop
lds
pop
push
xchg
jbe
iret
xor
pop
pop
pop
mov
jg
xor
mov
and
cld
xor
cmp
int3
mov
stc
repnz
pusha
sbb
out
out
test
xor
cmpl
insb
lcall
pushf
cmp
jge
nop
adc
sar
mov
inc
mov
xor
into
xor
mov
repnz
sbb
adc
loope
push
and
xchg
push
nop
std
or
cmp
pusha
lea
ja
cmc
call
cmp
push
lea
jb
stc
cmc
test
bt
cmp
push
lea
jae
btc
sar
xadd
mov
bswap
call
movw
movb
jmp
pusha
mov
lea
jae
call
add
push
push
js
arpl
gs
add
ret
lcall
add
xchg
shrb
pusha
jmp
jmp
in
push
lret
dec
pusha
add
test
orl
frstor
icebp
fwait
lods
xor
ja
mov
aaa
pop
pop
xchg
xor
inc
addl
adc
xor
fwait
mov
in
mov
add
pushf
mov
lret
incb
jns
sbb
add
mov
xor
sbb
sub
popf
xchg
std
or
xor
pusha
lea
jmp
sub
pushl
movl
mov
not
pusha
inc
call
cmp
pusha
pushf
movb
call
movl
pushf
mov
pushl
mov
lea
jmp
jmp
bt
test
test
call
stc
pusha
cmp
jmp
call
lea
jae
add
lea
mov
sbb
shrd
mov
pushf
jmp
push
call
ljmp
sbbl
mov
addl
bound
sti
mov
test
cld
out
and
mov
mov
test
fwait
test
mov
push
mov
cmpsb
mov
xchg
adc
adcl
xchg
xchg
mov
jb
popf
int
add
aad
xchg
dec
jbe
or
mov
sbb
or
mov
mov
fldenv
pop
decl
subl
imul
test
lea
mov
mov
jge
sub
inc
test
enter
stos
pop
out
gs
iret
xchg
jg
or
daa
xchg
outsl
jnp
jecxz
lea
adc
clc
lods
mov
jae
andl
cmpsl
inc
in
push
mov
into
aaa
es
ret
mov
pop
in
pop
inc
inc
test
mov
mov
mov
pop
jmp
dec
mov
jecxz
aaa
shr
fadds
mov
xchg
inc
aaa
cmpsb
fbld
arpl
mov
addl
dec
jecxz
and
mov
subl
jecxz
xor
repz
loope
mov
repz
cmpsb
mov
test
or
add
cmc
mov
add
cmc
subl
das
notl
loop
xchg
or
or
or
cmpsl
jmp
mov
or
xchg
mov
movsl
inc
or
jnp
sysexit
sti
lea
inc
pop
cmpsb
mov
push
sahf
xchg
xchg
rcl
mov
mov
vmovhps
jmp
xorl
sti
jne
pop
mov
add
mov
xchg
repnz
arpl
je
and
outsb
aas
ljmp
ss
cmp
adc
jg
jecxz
dec
and
cmpsl
in
lahf
ja
out
xor
or
xlat
lahf
fisttpl
ret
mov
cltd
jnp
inc
mov
xchg
les
adc
fs
nop
sti
insl
xchg
push
dec
adc
shrb
mov
mov
or
arpl
pop
mov
xor
mov
fwait
dec
sti
data16
imul
push
xlat
jb
clc
test
xchg
add
das
inc
stos
outsb
fwait
mov
or
inc
mov
xchg
lret
outsb
jb
sub
xchg
cltd
pop
loope
jecxz
imul
scas
outsb
pop
mov
mov
jb
push
xchg
xchg
fmuls
iret
pusha
xor
lea
fstpl
cmc
test
daa
outsb
sub
popl
pop
mov
dec
inc
outsl
test
xchg
xchg
xlat
cmpsl
lahf
xor
imul
xchg
mov
inc
into
imul
pop
mov
cmp
xchg
dec
mov
jo
sbb
dec
xchg
xor
adc
cmp
xor
jb
pop
adc
jge
xor
push
jno
add
xchg
inc
mov
xchg
xchg
push
scas
mov
inc
sahf
inc
mov
mov
dec
push
xchg
cld
arpl
add
push
outsl
out
or
decb
ret
jnp
push
fs
push
insl
js
stos
lret
mov
mov
mov
jle
imul
xchg
arpl
stos
sahf
lret
mov
negl
sbb
mov
adc
jb
mov
mov
outsb
xchg
and
test
inc
inc
sbb
mov
test
in
cltd
sbb
sub
fwait
icebp
inc
cltd
adc
jns
add
xcrypt-cfb
cmpsl
in
das
or
push
ret
adc
roll
outsb
push
clc
movsb
repnz
jp
sbb
cmpsl
leave
pop
mov
out
xadd
mov
js
fwait
jnp
inc
jno
xchg
push
sahf
dec
adc
mov
imul
xchg
arpl
addl
lea
out
lock
jns
enter
mov
dec
push
xlat
sbb
dec
outsb
push
outsl
push
xchg
dec
stos
cltd
jns
cmpl
inc
add
inc
test
jl
cmc
push
test
inc
outsb
iret
jmp
out
push
pop
jl
xchg
pop
outsb
xchg
push
fnstsw
movl
outsb
fwait
mov
arpl
cwtl
push
jne
add
and
jns
loope
pop
ss
add
xor
bound
mov
cmp
sub
in
sub
stos
fstpt
mov
pusha
xlat
xchg
jns
mov
je
scas
push
addb
or
fisubs
jae
push
pop
test
jg
outsl
or
lahf
pop
jns
jle
sbb
stos
dec
sub
dec
popf
and
mov
cmpsl
fnstenv
push
pop
lods
repz
jecxz
jae
pop
inc
lcall
xchg
xchg
pusha
xchg
cmpsl
pop
xchg
es
or
scas
adc
xorl
jecxz
sti
sbb
cmpsl
and
into
adc
ret
sub
mov
jb
mov
mov
outsl
inc
xlat
mov
cwtl
loope
out
fcoms
mov
stos
dec
iret
lea
xor
addb
xchg
mov
jnp
je
adc
outsb
loope
mov
or
popl
pushf
and
outsb
adc
or
cmpsl
pop
sti
adc
pop
xor
outsb
hlt
or
push
xchg
mov
mov
lahf
sbb
outsb
in
or
lods
inc
cmpsl
mov
jecxz
cli
sbb
dec
dec
les
xchg
jae
mov
push
add
jns
nop
and
outsb
dec
sbb
pop
lahf
sub
jae
mov
mov
call
mov
jle
pop
fcmovnbe
jle
mov
cmp
lret
lret
sbb
mov
fcmovnu
inc
cmc
test
dec
iret
mov
adc
scas
arpl
adc
stos
aad
lret
mov
xchg
imul
scas
sbb
ret
mov
sahf
pop
jecxz
inc
outsl
sbb
iret
outsb
sub
xchg
cs
cmc
test
sahf
xchg
sbb
outsb
clc
xlat
aam
inc
xchg
push
lods
es
mov
add
in
mov
addb
xchg
add
out
and
and
loopne
and
xchg
movl
mov
mov
insl
sub
and
cmc
cmpsb
jae
and
lahf
jecxz
sbb
fldenv
xor
scas
xchg
js
mov
push
ja
cmp
push
push
cmp
roll
inc
imul
push
inc
sub
or
pop
adc
jns
loopne
pusha
fimuls
shlb
xchg
negb
arpl
insb
mov
dec
cltd
jp
cld
mov
pop
dec
nop
inc
pop
fwait
outsb
stc
movsb
sub
and
mov
imul
jecxz
fisubl
clc
inc
mov
sahf
leave
and
lods
mov
xor
popa
out
jg
test
add
or
hlt
mov
mov
or
mov
cwtl
jnp
js
jmp
repnz
pop
loopne
or
dec
dec
int
lret
pop
add
cmc
xor
testb
inc
pop
dec
xchg
test
mov
fwait
sbb
ds
cmp
aad
in
mov
mov
xchg
scas
outsb
pop
rcrb
xchg
mov
shlb
ret
outsl
lahf
repz
xchg
adc
xor
jg
ret
push
mov
cmpb
jne
lret
inc
cwtl
gs
lea
jns
add
divb
outsb
cmpb
sub
lods
xchg
cmp
xchg
dec
xchg
jnp
xor
sub
xchg
mov
xchg
aad
sti
adcl
xchg
inc
push
xchg
adc
outsb
sub
push
jecxz
add
xchg
mov
addb
push
fisttpll
movsb
mov
fnsave
push
and
mov
add
cwtl
xchg
pop
into
pop
add
cwtl
add
movsl
into
pop
sbb
ss
out
subb
and
or
dec
pop
lcall
leave
movsl
inc
leave
out
test
mov
repnz
xchg
pop
nop
mov
loop
xchg
jmp
and
lret
popf
cli
push
cmp
pop
outsb
fistpl
aaa
xchg
add
pop
sub
popa
sti
jl
inc
scas
jno
sbb
xchg
jae
leave
outsb
pop
out
stos
mov
lahf
xor
insl
enter
into
gs
push
pop
xchg
cmp
cltd
jecxz
cmp
dec
mov
pop
outsb
push
or
leave
jno
fistl
mov
sarb
dec
mov
mov
cmp
push
inc
cmc
adc
jnp
lock
inc
and
jp
and
scas
add
sti
jnp
jb
jno
inc
ret
mov
mov
pop
shr
jge
mov
ret
mov
pop
jae
and
sbb
cmp
bound
and
dec
stos
je
ljmp
test
rcll
sahf
inc
stc
je
pop
jge
push
bound
xchg
scas
rcrl
xorl
mov
jnp
jo
push
fs
push
cltd
outsb
mov
daa
jle
repz
jnp
inc
or
jl
jbe
nop
sti
jb
pushf
push
mov
imul
incb
inc
dec
jle
jae
jno
inc
fnsave
insb
aaa
xchg
adc
fwait
push
jnp
dec
sbbl
or
cwtl
movsb
stc
pop
inc
xor
cmp
jle
popl
mov
cltd
xchg
outsb
add
gs
cld
jecxz
pop
mov
adc
call
push
xor
mov
adc
add
test
cs
mov
push
xchg
fmull
inc
jnp
sarl
js
xchg
inc
dec
or
iret
or
sbb
popf
xchg
push
xchg
mov
pop
imul
add
mov
ret
fcom
outsb
cmpsl
inc
jno
add
insb
push
scas
lds
inc
mov
push
or
std
cli
pop
js
or
push
ret
out
lret
rorb
mov
xlat
or
fistpl
fdivrs
test
push
pushf
sub
or
push
jecxz
xchg
icebp
sub
xchg
and
movzwl
mov
mov
ljmp
add
leave
call
xchg
insl
sbb
arpl
mov
gs
adc
mov
jecxz
cmp
fwait
arpl
inc
test
outsb
xchg
sahf
imul
movb
ja
clc
lea
out
iret
shll
add
jp
push
xchg
mov
xor
add
and
aam
popf
nop
pop
test
cmp
mov
dec
out
inc
mov
jae
popf
sbb
test
lahf
scas
jno
push
pop
push
movsb
xchg
inc
xor
leave
add
sti
repnz
jae
arpl
adc
xchg
mov
jno
lcall
jp
cli
xchg
and
mov
stos
add
push
xchg
cs
arpl
jge
sub
mov
and
push
xor
outsb
lret
ss
sbb
rcrl
movsb
aad
sub
xchg
pop
xchg
jmp
test
fistl
xor
dec
cmp
popa
xchg
jb
jno
das
fwait
add
int
mov
push
in
repnz
and
ficoml
cwtl
loop
cmp
arpl
dec
inc
lea
pushf
adcb
aaa
xchg
jb
outsb
lret
scas
fistl
rcr
out
outsb
shll
sbb
and
nop
cmp
lds
scas
fwait
dec
movsl
mov
inc
xchg
sub
jecxz
mov
sbb
adc
cld
out
lret
xlat
dec
in
push
mov
push
push
jae
push
insl
scas
leave
test
addl
add
push
sub
mov
leave
push
xor
mov
add
movsl
sbb
arpl
test
mov
arpl
cmpsl
sarb
push
nop
mov
or
popl
mov
push
and
or
lret
pop
scas
jecxz
subb
push
arpl
cmp
dec
dec
inc
jae
mov
jg
call
push
xchg
arpl
stos
lea
cmp
inc
push
push
imul
shlb
sub
daa
dec
xor
inc
add
rcll
adc
fcoml
adc
fmuls
push
fwait
int3
jp
jecxz
mov
xchg
push
mov
rolb
push
fwait
arpl
mov
xchg
pop
andl
pop
shrb
mov
insl
jne
push
test
ret
push
lea
jle
enter
mov
outsb
dec
enter
mov
mov
sti
jecxz
xchg
sub
lret
sbbl
xchg
xchg
adc
out
arpl
fistl
mov
test
leave
xchg
ja
dec
jbe
sub
nop
iret
int
adc
ret
sub
mov
push
jle
test
divb
fisttps
push
arpl
ljmp
push
out
pop
sti
cmpsl
and
mov
sahf
adc
adc
inc
gs
mov
xchg
xchg
push
sahf
mov
mov
mov
popf
mov
lahf
or
rcrl
fsubrp
mull
aaa
test
movsl
sub
test
mov
xchg
pop
mov
cmpsl
push
dec
rol
pop
sbb
cmpsl
loope
movb
dec
stos
inc
scas
fistpl
popa
cmpsl
daa
lret
pop
sti
pop
cmpxchg
jecxz
mov
mov
mov
ds
test
test
mov
cmpsb
mov
xchg
das
pop
pop
loop
xchg
lds
mov
subl
aad
movb
inc
incl
movsl
add
jle
xchg
das
andl
pop
pop
in
add
pop
sbb
cmpsl
mov
jecxz
es
gs
dec
outsb
dec
xchg
movsl
xchg
fwait
push
jnp
mov
repz
fwait
sub
pop
les
adcl
xchg
xchg
push
jecxz
cmp
ret
fwait
mov
mov
xlat
mov
lds
test
xchg
rol
lds
and
ja
adc
xlat
lds
sahf
sti
mov
test
pop
add
mov
stos
aad
ljmp
ret
aad
lds
fwait
int
mov
cmpsl
mov
movsb
mov
gs
out
push
xchg
xchg
xor
mov
repz
or
rcrl
inc
mov
mov
and
sub
inc
add
xchg
pop
push
ret
mov
xorl
cmpsb
das
fwait
lahf
add
sbb
sbb
jmp
pop
pop
push
xchg
jmp
add
inc
scas
arpl
adc
push
lea
mov
negl
dec
lret
ja
out
pushf
pop
les
mov
fcmovnbe
push
shll
rclb
push
movsb
push
xchg
add
cs
mov
mov
aad
int3
pop
or
cld
arpl
mov
dec
dec
push
lods
std
mov
xchg
fcmovnb
lods
jmp
dec
je
out
mov
sub
cmp
rcrb
sbb
mov
jmp
into
push
cs
fwait
aad
fnstenv
sbb
sarb
int
jge
push
sub
xchg
jge
pop
clc
inc
xchg
inc
dec
mov
and
mov
xchg
jle
dec
pop
std
movsl
test
xchg
jge
jle
dec
sbb
sti
jl
push
jno
or
and
and
pop
jae
loopne
out
inc
scas
dec
shll
inc
or
lods
mov
pop
arpl
mov
decl
xchg
outsb
imul
stos
xchg
push
notl
lahf
mov
or
movsl
push
inc
jle
in
stos
dec
rorl
bnd
push
outsb
ss
lret
adc
xchg
fninit
addr16
push
adc
into
test
clc
icebp
shll
in
sub
adc
ss
or
xchg
arpl
pop
cmpsl
rcrl
jmp
mov
jns
lahf
inc
push
jb
mov
xchg
arpl
cmpsb
addl
neg
push
fwait
pop
xchg
mov
adc
leave
xchg
adc
xchg
xchg
addl
push
rorl
outsb
or
arpl
fimuls
dec
fwait
loope
inc
sub
cmp
mov
outsb
pop
scas
in
cltd
mov
push
jecxz
bound
sbb
jne,pn
mov
call
in
inc
int
push
push
outsb
mov
push
ror
add
add
aam
loope
jbe
pop
mov
jno
jg
mov
fbld
push
call
les
ja
xchg
mov
pop
aad
mov
divl
ja
std
loope
in
mov
dec
popa
mov
and
mov
cmpsb
push
outsb
mov
inc
jno
lcall
aad
inc
lds
dec
push
pop
std
adc
bound
sbbl
cmp
jle,pt
cli
insb
jg
dec
lods
jp
mov
je
push
push
inc
or
inc
fdivrl
ret
cltd
fwait
sahf
mov
mov
pushf
sarl
loopne
sbb
sbb
push
and
insb
pop
push
loopne
pop
mov
test
mov
mov
fstpt
ds
xorb
sbb
mov
test
xchg
push
arpl
es
lds
jbe
cmp
mov
test
imul
adc
jle
mov
movsl
repnz
mov
inc
or
xchg
leave
jecxz
add
and
xchg
rol
or
rorb
std
call
lahf
inc
dec
jle
cmp
add
fistpll
and
jecxz
cmpb
dec
xor
dec
test
sahf
mov
fsts
in
jo
add
add
mov
scas
and
jb
mov
inc
xchg
std
pop
lret
dec
or
jne
xchg
push
outsb
sbb
arpl
xchg
mov
cmpsl
icebp
fldt
cli
mov
push
addb
outsb
jae
es
test
bts
add
ja
roll
dec
test
leave
aad
cmpsb
adc
xchg
push
mov
mov
xor
repz
sub
jbe
loope
in
in
adc
inc
leave
mov
mov
or
mov
ficompl
pushf
jmp
pop
fldt
mov
xchg
fwait
aam
repnz
gs
mov
out
push
mov
icebp
push
lea
cli
cwtl
cmp
add
mov
jne
mov
mov
cmpsl
mov
loop
fwait
out
mov
int3
push
lds
dec
lods
xchg
out
repnz
inc
cmc
mov
lods
add
jbe
call
lods
and
test
jecxz
xlat
imul
les
adc
sahf
sub
mov
test
push
mov
mov
jno
cltd
fwait
pop
adc
mov
sbb
dec
aaa
push
movsl
out
jo
into
jno
pop
jns
ret
pop
xorl
arpl
jecxz
jno
lret
ss
nop
mov
movsb
je
in
lret
loopne
pushf
push
iret
cmp
jnp
andl
cmp
test
mov
in
inc
jecxz
stos
pop
lods
jno
sti
push
jecxz
jbe
into
xor
push
ja
cmpsb
cmp
or
inc
cmp
jmp
mov
pop
push
jmp
push
lea
arpl
push
mov
dec
fwait
in
popf
arpl
push
inc
mov
pop
nop
pop
jae
inc
aad
mov
cmp
add
pop
shll
sbb
dec
cmp
sbb
pop
xchg
rolb
mov
loopne
mov
scas
and
xor
jnp
jecxz
dec
lret
leave
adc
sbb
cmpsl
jo
sbb
xlat
push
mov
inc
sahf
iret
ret
inc
mov
or
mov
add
add
xor
xchg
enter
xor
gs
imul
mov
int3
mov
out
xchg
mov
mov
cmp
push
scas
movl
or
mov
movsb
in
xchg
or
push
out
add
out
or
test
inc
rorl
lock
push
dec
daa
or
sbb
add
movsb
in
in
mov
mov
xor
in
fnstsw
data16
ret
adc
dec
jb
jecxz
adc
sub
inc
sub
fistps
jp
arpl
fsubrs
shlb
adc
pop
test
movsl
xchg
mov
jae
rcll
mov
sti
sahf
jecxz
movsl
lcall
aam
adcb
xor
je
arpl
shll
test
aam
jb
call
test
sub
outsb
add
xchg
fldenv
rclb
outsb
scas
pop
sarl
pop
mov
sbb
andl
test
shlb
stos
jg
subl
test
jge
jae
push
jno
push
cmpb
rcrb
fistps
jecxz
xchg
or
stos
cmpsl
cmp
add
out
sub
cld
into
pop
mov
incb
daa
adc
xchg
or
mov
push
xchg
into
push
iret
pop
xor
leave
aaa
xchg
sarl
pop
inc
xor
push
jecxz
sub
pop
or
dec
xchg
jno
jae
iret
mov
out
mov
dec
arpl
jp
stc
push
cwtl
cmp
lods
ret
addl
stos
in
sar
dec
jp
jb
lret
mov
fwait
push
mov
mov
sbb
test
jecxz
sbb
loop
xchg
push
push
int3
inc
stos
lret
or
mov
pop
fninit
xchg
imul
arpl
and
or
xchg
and
nop
outsb
or
mov
push
mov
into
cmp
ret
shlb
mov
outsb
dec
scas
xchg
fcompl
dec
mov
js
sub
jae
das
subb
mov
dec
sub
clc
adc
shll
mov
and
mov
scas
push
mov
ja
dec
jns
es
data16
mov
mov
jb
arpl
rorb
push
aam
xorl
fwait
jle
push
popa
mov
sbb
mov
mov
pop
or
sbb
arpl
movsb
test
fwait
cmp
mov
jne
cmc
out
inc
pop
outsb
xchg
sbb
fxch
adc
enter
mov
pop
jbe
mov
sbb
xchg
aaa
mov
dec
int
incb
xchg
iret
mov
mov
mov
dec
stos
scas
nop
sbb
fst
push
imul
ja
je
xchg
test
addr16
scas
lahf
sub
fldt
xlat
adc
jbe
or
pop
xor
ja
sti
popa
cltd
cld
push
loop
pop
dec
aad
aam
xchg
and
xchg
popf
sti
xchg
imul
jecxz
xchg
jns
out
dec
pop
push
es
inc
add
xchg
jle
stos
bound
test
jg
and
cmp
pop
aad
push
push
addl
xor
ret
std
mov
arpl
jno
mov
adc
or
xlat
xor
aad
addr16
mov
faddl
cld
cmpsb
and
lea
test
mov
aad
and
popa
nop
push
cltd
inc
js
inc
js
jns
or
mov
pop
add
scas
test
pop
adc
mov
stos
jmp
pushf
lea
lret
jle
fwait
test
repz
mov
jns
jbe
sbb
sbb
loopne
sub
int
xchg
test
or
cmp
push
mov
arpl
outsb
fsub
push
push
clc
jle
ljmp
lea
push
lret
movsb
or
adc
push
repnz
stos
push
ja
jns
adc
sbb
jle
in
push
mul
mov
xor
mov
add
lret
call
mov
inc
jecxz
stc
ret
popf
int
lcall
xchg
and
xor
and
test
mov
xchg
and
leave
xlat
cmpsb
outsb
cmp
add
inc
mov
dec
gs
cmp
mov
scas
mov
jg
mov
out
jge
das
cmp
lods
xchg
inc
jmp
ror
lret
orl
aas
jb
and
daa
mov
adcl
stos
roll
dec
xchg
mov
pop
lods
aam
or
dec
scas
cmp
aam
mov
adc
int3
ret
jecxz
test
inc
fisttpl
dec
loope
data16
jmp
push
xor
sti
sub
outsb
nop
push
test
push
cwtl
pop
lds
push
mov
inc
xchg
or
inc
jecxz
mov
or
sub
mov
std
pop
mov
outsl
jne
jmp
ret
inc
mov
stos
mov
jge
adc
cmp
pop
daa
cmp
lods
and
or
pop
outsb
mov
call
int
addr16
test
sub
mov
cltd
fwait
mov
jno
fsubl
and
lea
ficoml
mulb
imul
lret
fidivl
aad
jmp
push
adc
dec
jae
ja
xchg
pop
jns
test
mov
jne
mov
pop
pop
je
fiadds
mov
dec
mov
mov
rolb
loopne
sarl
jnp
lret
inc
outsb
mov
inc
push
lret
adc
sbb
xlat
rorb
icebp
jecxz
insl
mov
xor
sbb
mov
aaa
nop
push
pop
into
stc
ret
mov
insl
sar
jecxz
test
ss
leave
push
cmc
mov
jg
dec
pop
mov
int
xchg
lahf
mov
into
int
sahf
xlat
lret
testl
arpl
fdivs
cwtl
pop
sbb
push
jb
js
into
jns
scas
cltd
jne
adc
jno
loop
dec
in
mov
xor
lods
leave
push
mov
aaa
sub
stos
test
repz
aas
loop
jbe
push
mov
scas
jecxz
xlat
mov
imul
lret
pop
jl
inc
addr16
fmulp
addl
xchg
aas
test
mov
fcomps
mov
jb
jle
fwait
push
rorb
roll
loop
outsb
imul
subl
mov
aad
dec
jae
inc
lea
fs
filds
push
cli
adc
dec
xchg
insl
repnz
cwtl
andl
push
jns
xor
pop
mov
imul
les
pop
shlb
cmp
shl
inc
subl
jmp
dec
jae
add
sti
std
push
pop
sti
scas
jno
xchg
stos
stos
jnp
and
scas
aaa
jo
jle
sbb
add
js
scas
inc
andl
nop
jp
add
test
in
test
in
fidivl
or
mov
jbe
cmpsb
add
push
stos
stc
adc
and
scas
add
mov
inc
pop
mov
test
dec
mov
pop
mov
negb
mov
fldcw
inc
popa
mov
adc
icebp
gs
or
fsubrl
call
sub
xor
sub
je
push
fmull
loopew
mov
and
mov
push
push
xchg
aad
or
xchg
inc
cmpsb
icebp
xchg
mov
mov
out
adc
imul
nop
addr16
pop
jl
ss
xchg
jp
mov
jge
or
adc
ja
xchg
stos
add
pusha
insl
daa
adcb
xchg
pop
push
or
lcall
jecxz
adc
xrelease
std
pop
xchg
arpl
cmpsb
xor
jno
adcb
and
inc
test
cwtl
dec
pop
push
push
pop
mov
mov
xchg
mov
xchg
jbe
inc
psubusw
sbbl
js
rcrb
test
pop
pop
jo
and
jp
or
cmp
lds
mov
adc
jecxz
xchg
jae
inc
mov
add
inc
int
inc
cmp
nop
shrl
or
enter
mov
cmp
jge
and
sahf
add
mov
mov
pop
xchg
jnp
insb
gs
xchg
mov
fs
in
out
mov
sar
xchg
scas
inc
fmull
adc
gs
xchg
lret
mov
pop
aas
push
iret
test
test
fnstcw
ret
in
inc
push
cmpsb
mov
ss
mov
mov
xor
adc
dec
mov
outsl
mov
out
cmp
add
inc
xchg
mov
mov
rcr
push
jecxz
inc
rorb
push
stc
sub
in
cmp
lret
addr16
cmpsl
fs
and
pop
xchg
inc
sub
jp
push
mov
sbb
cmp
pop
dec
jle,pn
cltd
mov
jle
jae
cltd
jno
mov
jb
xchg
add
push
dec
outsb
xchg
shll
push
adc
mov
imul
push
mov
mov
jecxz
cmp
sbbl
leave
ret
movsl
movsl
mov
or
divb
sub
and
mov
aam
fistpll
push
push
add
cmp
imul
sbb
es
outsb
data16
sub
push
pop
mov
js
sbbb
or
imul
cmp
ror
aad
adc
lcall
jnp
xchg
push
cld
pop
fcomip
mov
adc
pop
cmp
pop
add
dec
fdivl
jge
enter
into
mov
xchg
jne
jmp
leave
lret
rorb
xchg
jno
fsubs
test
das
ja
jp
lahf
mov
fcoms
into
xchg
pop
mov
ret
arpl
or
fnstcw
xchg
inc
mov
pop
xchg
jae
test
insl
addr16
push
jne
xor
inc
add
xchg
pop
push
push
pop
or
mov
imul
inc
std
sahf
stc
fs
jg
loope
mov
adc
lea
lahf
and
mov
jno
xchg
sub
cmp
jmp
xlat
andb
addb
and
add
pop
inc
push
cmc
fwait
inc
testl
imul
in
data16
imul
add
or
cltd
in
inc
xor
out
add
jp
adc
fistpl
inc
or
pop
movsb
adc
mov
ja
dec
sub
sti
xor
dec
gs
stos
cmp
cltd
pop
nop
push
inc
dec
dec
jg
outsb
pextrw
or
cmp
cwtl
cmp
jp
push
iret
cmp
testl
mov
mov
rclb
sbb
mov
sbb
arpl
shrb
imul
xchg
xor
rorb
xor
push
xlat
mov
pop
mov
in
cltd
in
aad
movsb
sub
mov
sub
scas
dec
mov
pop
jb
push
mov
jo
outsb
and
fucom
push
clc
outsl
mov
cmpl
add
xor
sbb
andl
cwtl
dec
pop
mov
xlat
movsl
add
sti
push
push
xor
cmc
stos
mov
leave
nop
push
pop
sbb
sti
subb
aam
outsb
aas
sbb
incl
xorb
lahf
je
mov
scas
push
jmp
sbb
dec
mov
mov
mov
int
out
leave
jecxz
int
push
add
pop
mov
jae
fwait
aam
fcmovne
es
stos
jne
pop
adc
pop
xchg
mov
movsl
push
lods
fwait
mov
xchg
pop
mov
xchg
outsb
push
jae
mov
xchg
lods
shlb
in
xchg
mov
lret
daa
jg
mov
push
mov
cmp
aad
mov
mov
mov
into
sub
cltd
adc
jecxz
or
mov
cmc
mov
xor
push
push
fwait
lds
cs
test
repz
cmc
into
stc
xlat
jnp
jecxz
ljmp
push
test
xor
lret
lea
mov
loope
mov
jp
lret
fninit
decl
jl
icebp
cmpsl
jle
xchg
fdivl
xor
fists
sti
jle
cmp
add
xchg
add
add
pop
jno
pop
daa
test
std
xlat
cli
mov
mov
aam
pusha
xchg
sbb
inc
mov
iret
xlat
testb
cmp
inc
push
jle
add
adc
and
popf
adc
movsl
mov
and
xchg
addr16
ljmp
cld
ja
lods
icebp
jns
and
in
mov
and
arpl
xchg
xchg
push
dec
test
pop
adc
ror
imul
add
lret
scas
mov
mov
ja
movsb
push
jnp
je
outsb
xor
sbbb
inc
add
mov
xchg
xchg
mov
pop
sahf
inc
mov
sbbl
xchg
rol
rcll
fbstp
push
ja
testb
mov
sbb
and
into
frstor
shll
dec
aas
mov
push
inc
rcrl
inc
dec
out
scas
es
stos
sub
adc
xchg
mov
in
mov
arpl
jp
gs
pop
xchg
add
aas
pop
jg
jnp
jne
lds
arpl
mov
fs
and
popf
and
mov
fistpl
push
add
leave
addl
sub
or
ret
mov
retw
pop
cltd
repz
xor
jae
lods
cmpsl
jno
sbb
mov
push
push
add
fadds
dec
bound
inc
dec
adcl
fdiv
mov
stos
xor
pop
cli
popa
adc
sub
int3
fsubrs
push
pop
mov
jle
mov
pop
dec
nop
mov
pop
hlt
mov
js
arpl
rorb
xchg
mov
xchg
ffree
pop
stos
pop
out
xchg
jno
movsb
jmp
sbb
mov
push
lcall
mov
arpl
sub
push
mov
cmp
add
pop
inc
std
outsl
int3
jle
jg
mov
nop
orb
inc
movsb
push
aad
sbb
xchg
xlat
aaa
pop
cmpsb
mov
mov
jecxz
dec
imul
xlat
pop
jle
jns
push
and
jecxz
cmp
loop
movsb
mov
xchg
arpl
out
nop
and
fninit
pop
mov
aam
adc
sbb
adcl
movaps
mov
lods
cmp
aaa
mov
xchg
outsb
fldt
sti
sbb
xor
inc
mov
call
jnp
jecxz
mov
int3
orl
push
mov
mov
cmp
push
insl
adc
imul
inc
mov
fcoms
push
inc
testl
adc
mov
int
out
dec
sub
gs
insb
or
and
sbb
nop
movsb
push
sub
dec
jno
lcall
cld
stos
xor
jne
out
jne
dec
imul
sub
mov
gs
inc
in
cltd
sub
arpl
sub
fwait
je
push
inc
cmc
inc
xlat
pushf
add
popf
jle
dec
daa
mov
arpl
or
push
push
jb
push
scas
xlat
mov
inc
or
inc
push
inc
outsb
dec
push
movsl
mov
sti
push
push
lods
add
add
jecxz
or
jno
lea
fldl
fsub
mov
stos
push
add
enter
imul
jns
pop
std
jno
xchg
arpl
pop
cmp
pop
test
push
int3
mov
ret
xchg
adc
sub
ret
adcl
daa
mov
movl
mov
nop
mov
outsb
adc
mov
jle
sarl
lea
fistpl
push
arpl
xor
sbb
orb
ja
pop
adc
nop
add
inc
inc
mov
push
cmp
stos
pop
pop
mov
fimuls
push
int3
add
popf
sti
push
insb
pop
insl
lret
push
aad
xlat
inc
out
sub
lock
lods
dec
mov
adc
ret
cwtl
mov
nop
push
out
mov
adc
push
mov
cmp
aas
pop
jle
es
fiadds
test
add
pop
xor
and
jp
pop
shrl
mov
outsl
fcomps
iret
js
xchg
xlat
gs
lods
fcoms
push
mov
sahf
jno
arpl
ja
sbb
insb
mov
push
xlat
jb
pusha
je
test
popa
and
test
dec
mov
sarl
aam
mov
jno
mov
xor
gs
adc
mov
push
popa
mov
mov
or
mov
enterw
fimuls
sbb
cmp
dec
int
jle
mov
mov
xor
loopne
mov
cmp
push
lret
jle
mov
cltd
xchg
in
cmp
lea
sbbl
inc
jb
pop
cltd
push
int3
xchg
sahf
dec
and
jge
xchg
inc
mov
xchg
arpl
shr
repz
testl
dec
mov
push
pop
adc
lock
outsb
fwait
xchg
xchg
pop
pop
jb
push
fimuls
xchg
mov
negb
mov
jbe
jecxz
jle
lods
push
call
testb
movsl
jne
test
jle
mov
jp
mov
data16
int3
mov
mov
push
out
mov
xor
jle
insl
into
insb
cmp
lds
les
push
xchg
dec
sub
test
lods
iret
shr
nop
addr16
mov
rcrl
pop
inc
or
jns
mov
mov
push
lock
adc
sub
and
cmp
je
xor
cmp
fnsave
shrl
int3
mov
pop
mov
jne
mov
sub
and
or
scas
addr16
imul
add
pop
inc
pop
dec
into
push
aad
mov
xchg
push
xchg
in
mov
sbb
inc
movsl
pop
sbb
jae
add
iret
out
outsb
lret
adc
xchg
sub
mov
lcall
repnz
divb
cmp
pusha
sbbl
mov
popf
stos
movsb
sarl
cmp
push
fwait
sbb
jne
inc
fdivs
and
inc
pop
cmpl
ret
adc
dec
mov
es
mov
mov
xchg
sub
add
shlb
sub
subb
xlat
xor
cmp
int3
arpl
and
inc
pop
cli
push
jg
call
icebp
mov
mov
xchg
andb
test
jg
sbbl
dec
imul
mov
mov
insl
mov
mov
xor
hlt
and
dec
int
sahf
in
mov
in
sarb
mov
fistpl
lcall
rcl
lea
arpl
cs
xorb
out
inc
add
fldt
cmp
adc
jecxz
cmp
movsl
xor
xchg
xlat
ljmp
push
and
pop
lea
outsl
subb
leave
nop
add
cltd
adc
cmpsb
jle
jne
sub
or
add
cmpsl
and
cmp
loopne
int3
xor
cmp
xor
popa
xlat
xchg
jo
lahf
fldcw
cmp
test
stos
pop
int3
cmp
mov
cmp
add
aam
add
xchg
add
out
inc
pop
fwait
rcl
sar
outsl
into
in
jge
sahf
outsb
mov
mov
stos
cpuid
lahf
test
divl
jbe
bound
xlat
pop
push
lea
popa
enter
or
xchg
ds
xchg
jns
dec
sbb
pop
sub
mov
mov
fimuls
test
push
pop
mov
adc
inc
pop
push
push
or
jp
lods
mov
popl
shl
popf
addl
or
nop
out
xlat
cmp
aam
out
lret
jmp
dec
add
lret
mov
mov
mov
aaa
aam
cmp
lret
mov
out
sti
jecxz
xchg
mov
imul
xor
mov
xchg
addl
mov
sti
ds
sub
mov
jnp
sbb
cmp
fcoms
adc
xchg
and
int3
sub
daa
lret
mov
push
pusha
jae
xchg
outsb
cwtl
mov
lcall
addr16
push
add
cmpsb
xchg
mov
mov
or
push
or
push
movsb
stos
fldl
sahf
insl
arpl
fisubrs
and
dec
mov
xchg
cltd
mov
cmpsb
xchg
cmp
xchg
or
arpl
aad
mov
dec
cmpsb
and
outsb
xor
out
jae
pop
test
push
mov
lret
ret
or
mov
lds
mov
push
mov
cmp
in
cmp
insb
push
xchg
test
lea
and
out
inc
pop
push
clc
jge
ds
in
mov
push
sbb
add
je
ljmp
sbbl
jne
fistpl
loop
outsl
fsub
aaa
jae
mov
test
in
stc
push
andl
std
fs
dec
xlat
adc
rorl
jne
scas
lock
mov
inc
jno
mov
aad
adc
cmp
subl
testl
imul
push
mov
jae
and
inc
push
mov
sbb
int3
roll
add
mov
repnz
arpl
nop
adc
mov
xchg
pop
jecxz
mov
add
xchg
or
mov
subl
stos
inc
push
mov
adc
stos
add
scas
lret
dec
jecxz
jge
into
pop
scas
es
sti
sar
jns
xor
add
mov
adc
inc
ret
sub
cwtl
sub
xchg
mov
shlb
inc
pop
es
subl
lret
add
jno
xchg
dec
movl
jb
pop
lods
sbb
jns
cmp
mov
adcl
sbb
push
pop
test
in
jae
xlat
outsb
sub
lods
leave
shlb
loop
nop
loopne
ljmp
sbb
jp
iret
sbb
xlat
push
cmp
adc
mov
das
pop
sbbb
xlat
and
xor
xchg
jecxz
aam
lret
aam
pop
aad
cmp
pop
jns
inc
cmp
mov
addr16
jl
mov
arpl
into
sbb
or
and
adc
mov
les
imul
lret
movsb
inc
mov
test
insb
jge
or
or
pushl
in
mov
cmp
in
jecxz
inc
pop
add
repnz
xchg
sarl
scas
cmp
int3
dec
mov
xor
lods
sarl
xchg
xlat
or
adc
mov
push
rolb
push
mov
leave
dec
mov
mov
cmp
test
aas
fisubrl
and
dec
mov
faddl
add
jo
adc
add
dec
scas
fcmovnbe
mov
enter
loope
leave
mov
mov
dec
imul
and
aas
dec
arpl
cmpsl
in
test
jns
inc
push
xchg
lods
adc
in
pop
fisttpl
imul
fwait
inc
lods
movl
jecxz
ljmp
mov
call
clc
int3
add
mov
pop
push
cmpsb
ss
jg
pop
cmp
icebp
mov
lods
jg
ret
push
int3
lcall
pop
ret
cmp
outsb
mov
pop
adc
add
fidivrs
mov
mov
mov
jno
inc
mov
int
push
mov
shl
clc
xchg
scas
cmp
aas
add
pop
adc
jp
jle
dec
jecxz
push
xchg
mov
xchg
sbb
in
jecxz
add
adc
inc
pop
or
cmc
data16
or
ficompl
sti
add
arpl
pop
leave
mov
outsl
aaa
xor
jno
shll
mov
jno
dec
imul
arpl
outsb
in
adc
loopne
dec
or
cmc
insl
lds
into
sbb
leave
add
and
aad
push
nop
xor
xchg
dec
cmpb
push
orl
leave
cmpsb
ja
or
push
jb
out
mov
aad
inc
inc
sbb
test
dec
sahf
arpl
add
in
lds
sar
jecxz
and
sahf
insl
out
add
dec
mov
inc
sbb
mov
jae
mov
sbb
cwtl
xchg
outsb
sahf
mov
and
movsb
add
push
mov
push
or
add
xor
addr16
xchg
mov
cmpb
jle
ja
cld
filds
sbb
pop
rolb
arpl
inc
stc
xchg
sub
orl
test
mov
xchg
les
idivb
adc
loop
outsl
mov
adc
or
cli
jp
icebp
jmp
sub
mov
fs
int3
pushf
mov
xlat
imul
pusha
mov
and
mov
outsb
aaa
cmp
ds
or
fisttpl
or
cmp
lds
xchg
test
ror
pop
inc
mov
lods
js
out
inc
push
mov
dec
mov
cmp
outsb
pop
arpl
popa
jb
adc
and
daa
dec
nop
jne
repz
xor
mov
aam
test
addr16
mov
dec
sarb
inc
jge
xchg
xchg
mov
cmp
sub
lock
push
mov
jo
dec
pop
fadds
mov
mov
add
xchg
cmpsl
cmp
outsb
jecxz
jne
and
out
pop
xchg
mov
imul
mov
imul
mov
sub
mov
jnp
leave
sti
dec
stos
js
pop
push
cmp
andb
or
lods
add
adc
sbb
aaa
mov
js
inc
mov
jne
adc
adc
out
push
imul
add
popa
dec
xor
push
insl
lret
push
sbb
jecxz
in
movsl
dec
aaa
adc
xchg
cmp
pop
cmp
xor
fwait
or
aad
testb
xchg
bound
notb
push
jecxz
xchg
int
cmc
arpl
mov
rclb
je
in
movups
enter
out
icebp
hlt
ret
sub
push
mov
jle
loopne
inc
cwtl
cmc
mov
push
jl
repz
jo
xor
mov
pop
nop
inc
pop
in
pop
nop
and
xchg
add
sub
mov
cwtl
sbb
jnp
pop
in
push
xchg
add
cwtl
xchg
imul
xlat
mov
mov
loop
popl
sbb
fisttpll
pop
sbb
mov
pop
inc
jle
shlb
iret
loop
fwait
pop
and
xchg
push
adc
ljmp
jno
arpl
inc
lods
push
in
int
dec
jns
pop
cmp
pop
in
repnz
jle
dec
or
xchg
jns
bound
cmpsl
pop
pop
ret
stos
daa
imul
cmp
cmp
outsb
in
mov
cmp
inc
shll
and
xorl
jne
mov
pop
mov
mov
inc
stos
data16
xchg
arpl
outsl
fs
adc
push
jmp
test
xchg
data16
movb
add
cmp
test
jns
push
outsl
movsb
ficomps
sbb
frstor
and
push
rcll
mov
dec
fstpl
fdivrl
mov
inc
xor
fcmovne
push
stos
cltd
sarb
mov
sub
arpl
dec
std
lds
lcall
sbb
mov
fiaddl
popf
outsb
xchg
lret
shl
dec
adc
shll
sbb
mov
out
aad
push
mov
dec
shl
call
frstor
pop
inc
cmp
pop
aaa
mov
adc
aad
shlb
leave
dec
movsl
into
and
into
bound
aaa
push
push
add
add
aam
adc
xlat
fninit
and
orb
arpl
cmp
pop
push
sbb
rcrb
or
adc
mov
jne
sub
test
inc
jecxz
test
inc
pop
leave
add
rclb
jle
mov
xchg
out
adc
jle
pop
jae
imul
pop
dec
adc
mov
scas
int
add
movsb
in
rol
xchg
jg
jb
cmc
mov
in
nop
sub
mov
in
shrb
stos
sti
fwait
dec
adc
scas
gs
mov
clc
mov
inc
jnp
sahf
xchg
int3
pop
aad
fsts
pusha
nop
push
inc
and
shr
rclb
adc
or
jmp
cmp
aas
movsl
aad
push
add
or
lods
mov
mov
fwait
push
inc
inc
movsb
orb
add
cmp
inc
sub
inc
push
in
add
nop
les
insl
ljmp
mov
fdivrl
lods
jle
sbb
mov
outsb
pop
lods
pop
fsubp
cmp
push
lds
mov
stos
arpl
jecxz
mov
cmp
jo
jmp
mov
adc
jl
scas
mov
cmp
mov
mov
icebp
aas
movsl
inc
movsb
arpl
test
sti
mov
sti
adc
jmp
cli
scas
mov
jne
mov
mov
inc
push
inc
inc
xor
cmp
pop
stos
pop
ret
inc
in
xchg
outsb
mov
adc
dec
ss
aam
ds
pop
xchg
and
mov
xor
mov
mov
adc
inc
add
xchg
imul
lcall
xchg
push
aas
mov
mov
jb
cltd
push
xlat
mov
cmpl
sbb
lcall
adc
mov
adc
adc
into
imul
sub
pop
xlat
xchg
jb
inc
jnp
mov
stos
mov
pop
adc
out
adc
outsb
nop
sti
dec
dec
test
outsl
fcompl
add
xchg
push
push
cmp
js
imul
dec
test
scas
mov
pop
popf
push
jg
icebp
mov
dec
jnp
je
push
push
mov
rcll
mov
aas
inc
dec
pop
add
mov
fstl
push
mov
inc
int
clc
fwait
xchg
pop
outsb
int3
fidivl
test
cmp
and
inc
mov
fwait
sbb
mov
xchg
add
shlb
adc
xor
dec
orl
pop
popf
test
call
bound
sbb
sbb
cmc
repnz
nop
mov
je
popa
daa
stos
mov
add
shll
out
call
adc
xchg
je
and
mov
stos
xor
add
movhlps
or
hlt
cmc
push
data16
mov
pop
mov
mov
mov
adc
dec
fisttps
ret
pop
scas
lcall
mov
shrb
inc
jns
std
add
aam
jecxz
xchg
outsb
adc
out
nop
out
in
or
or
movsb
xor
test
push
jb
jecxz
mov
stos
sub
jno
xor
imul
add
fs
js
fwait
push
pop
push
inc
dec
pushf
mov
and
pop
xchg
push
stos
fistpl
pop
aad
test
cmp
jns
test
loope
jo
cltd
outsb
sbb
data16
jl
inc
mov
sti
popf
or
addl
mov
push
mov
pop
fdivrs
mov
xor
cmc
stos
mov
inc
mov
push
jle
and
push
insl
cmc
adc
xor
clc
xchg
and
push
dec
push
push
popf
or
ret
mov
inc
mov
outsb
ss
out
or
jecxz
outsl
scas
sub
rol
xchg
mov
sub
pop
cmp
mov
jle
ret
pop
inc
adc
pop
lea
mov
sbb
mov
nop
or
mov
out
dec
mov
push
xchg
sti
jle
jae
mov
xor
xchg
arpl
push
mov
cmp
cmp
fildll
cld
shl
js
aam
test
xchg
orl
ja
mov
daa
mov
mov
jp
xlat
sbb
or
sbbl
out
mov
xlat
aas
or
and
icebp
push
xchg
scas
je
jmp
mov
popa
and
adc
jmp
fmul
movsb
repz
enter
xorl
xchg
cs
cltd
aam
lds
sbb
movl
inc
stos
nop
gs
ds
push
je
mov
movsb
jns
into
jae
daa
cmp
jno
mov
jp
stos
jnp
sbb
jnp
pop
sbb
lods
je
bound
outsl
in
dec
sbb
idivb
pop
add
int3
lea
jae
add
add
mov
leave
jle
inc
sbb
sti
pop
sbb
mov
dec
jae
inc
negl
sbb
xlat
lcall
add
adc
add
arpl
or
sbb
in
inc
cmp
ljmp
mov
hlt
cmpsb
out
mov
jnp
rolb
inc
scas
push
add
sbb
and
jecxz
imul
push
lds
clc
sbb
enter
cmc
sub
jp
adcl
pop
adc
pop
pop
mull
mov
enter
test
lods
push
jae
aas
mov
push
orl
push
fcmovnu
outsb
into
mov
add
jbe
into
or
in
outsb
cs
aam
aam
cli
idiv
mov
cltd
mov
dec
jno
add
dec
ja
arpl
faddl
leave
sub
pusha
jb
call
pop
fldenv
sbb
loopne
push
call
push
sbb
xchg
jle
pop
jge
adc
mov
jno
andl
push
pop
pop
push
rorl
push
jmp
xor
cli
adc
js
fcmovnb
outsb
shll
add
int3
nop
push
enter
adc
mov
inc
mov
xchg
jo
hlt
xchg
mov
jmp
cld
aam
xor
loope
push
or
arpl
add
push
leave
sbb
incl
aam
and
lret
test
dec
stc
sub
push
test
sbb
inc
xor
js
lcall
sub
mov
imul
push
xor
mov
out
fbld
push
inc
data16
mov
cltd
adc
je
cs
js
mov
dec
ret
imul
fwait
dec
outsl
loope
cmpsb
lock
ja
and
call
sbb
jns
inc
fsubrs
inc
roll
mov
enter
repnz
incb
mov
insl
xchg
push
sub
aad
mov
adc
imul
fildll
xchg
popf
jmp
test
fildll
mov
sbb
outsl
addr16
xlat
jle
fsubr
mov
sti
fstp
mov
lret
jae
ss
jmp
xchg
sbb
pop
mov
cmp
cmpsb
movsl
fsub
fisttpll
push
insl
arpl
jne
hlt
dec
in
mov
xchg
dec
mov
inc
lock
pop
cwtl
subb
dec
jb
push
jecxz
mov
mov
pop
and
xor
pop
data16
mov
mov
mov
push
cwtl
jge
jne
scas
fldl
and
stos
xchg
xor
mov
dec
mov
mov
inc
jae
xchg
pop
sbb
cmp
pop
fidivrs
push
and
pop
ljmp
loope
nop
cltd
pop
movsl
mov
push
add
int3
movsb
sti
test
pop
data16
adc
sti
popa
jmp
push
cs
xchg
inc
dec
shll
and
jecxz
lcall
mov
stc
jnp
arpl
into
xchg
mov
lds
ljmp
sbb
ror
mov
fiadds
sbbb
sarl
insb
nop
fwait
call
cwtl
mov
dec
jno
inc
insb
mov
pop
jns
nop
push
jmp
mov
mov
adc
ds
xchg
jno
cwtl
push
nop
ja
add
push
dec
pop
test
or
nop
rcrb
or
push
ss
push
movaps
adc
add
mov
dec
sti
fildl
shrb
movsl
addr16
das
je
jle
mov
out
cmp
mov
push
inc
sbb
mov
adc
pop
ffreep
push
or
movsl
xchg
sbb
xlat
mov
adcl
push
outsb
les
xlat
aas
shlb
fists
add
mov
lods
inc
cs
inc
push
arpl
out
or
andb
test
sbb
xchg
pop
sar
and
mov
or
push
sahf
loope
push
je
sub
cs
dec
sub
out
adc
inc
dec
and
test
inc
jp
lcall
gs
iret
mov
addr16
aas
mov
push
sti
push
adc
cmpsb
test
lahf
sub
mov
insl
test
inc
jno
xlat
dec
pop
stos
pop
fs
arpl
fstps
push
xchg
mov
adc
movsb
out
push
sarl
inc
sbb
sbb
inc
jb
inc
int
or
and
sahf
insl
adc
jle
and
aas
sub
and
nop
cmp
cwtl
and
sbb
lock
push
fnstcw
push
stos
xchg
xlat
outsb
fwait
mov
incb
cmp
movsb
mov
push
push
outsb
test
inc
sub
cli
or
xchg
and
push
lret
push
mov
inc
ret
push
testl
adc
jle
cmpb
mov
adc
xor
inc
cmp
pop
jle
mov
push
shlb
push
bound
lock
jbe
shrl
and
push
adc
jno
jecxz
push
cltd
or
sti
fwait
push
int3
lods
xlat
ljmp
fldt
adc
jl
xchg
mov
arpl
icebp
pop
xor
jge
xchg
fcomp
cmp
mov
add
jae
jb
stc
inc
sbb
outsb
xchg
mov
stos
ss
pop
stos
inc
int3
int3
jmp
pop
mov
dec
inc
sbb
popf
fs
pop
dec
jbe
adc
pop
lods
repnz
cs
jl
shrb
iret
jle
inc
mov
push
xchg
inc
stos
xchg
in
mov
clc
pop
leave
in
out
cmp
xchg
and
push
mov
xchg
xchg
jo
cmpsl
mov
mov
push
mov
sub
pop
adc
inc
mov
mov
push
pop
mov
outsb
cli
frstor
mov
add
cmp
sbb
jle
inc
popf
inc
push
jnp
jns
sti
pop
pop
or
jnp
je
scas
push
jecxz
sahf
stos
out
inc
sub
fmul
stos
ja
lock
pop
cmp
xchg
xchg
jl
push
jns
jecxz
rcrb
jae
pop
dec
sbb
sbbb
mov
aaa
shll
shrd
arpl
push
adc
fsubrl
lods
pop
cmpl
dec
xchg
pop
jnp
jb
int3
xchg
lock
sub
popl
mov
pop
test
jl
faddl
pushw
jns
arpl
movsb
mov
cld
xor
jge
push
stos
int
inc
arpl
xor
imul
int3
inc
stos
or
mov
mov
ret
jns
adc
pop
sub
push
xchg
arpl
mov
push
push
jle
stos
das
jecxz
in
movsb
outsb
jno
or
pop
or
rorl
js
xchg
movsl
push
add
nop
fists
shrb
push
adc
aam
push
add
jmp
xor
mov
push
das
insl
xchg
pusha
sub
add
inc
inc
or
rcrl
cmp
aas
loope
mov
fsubrs
xchg
movsb
mov
test
popf
das
push
xchg
dec
ds
dec
adc
cmp
adc
pushf
push
insb
cli
inc
jnp
mov
pusha
or
je
repnz
jp
outsb
pop
adc
xchg
outsl
arpl
push
mov
push
jb
xor
push
sbb
stos
mov
insb
inc
mov
sbb
out
mov
outsb
fcmovu
push
cmp
xor
mov
jecxz
xor
sub
cli
cwtl
fs
push
stos
mov
and
xor
icebp
or
pop
enter
sbbb
push
xlat
arpl
dec
mov
mov
leave
mov
xor
xorl
cmp
mov
leave
push
lock
jns
push
jecxz
jge
in
test
or
loop
dec
cmp
adc
xchg
fdivrs
adc
add
mov
inc
sbb
dec
popa
push
mov
cmp
imul
sub
bound
fbstp
mov
jle
scas
pop
mov
inc
js
dec
and
push
adc
mov
push
popa
test
sbb
jns
lock
inc
iret
into
mov
jecxz
stc
sbb
fstpt
adc
add
je
mov
bound
push
adc
dec
stos
dec
mov
xchg
fsts
mov
add
mov
sbb
mov
xchg
push
ret
cmp
cwtl
mov
jnp
lahf
cmp
scas
fiaddl
arpl
cmpl
movsb
xchg
inc
insl
ss
test
push
mov
test
xorb
fnsave
lret
lods
daa
jne
mov
push
dec
lcall
fsub
dec
pop
jno
xchg
movsl
and
xchg
and
testb
les
mov
movsl
int
rcrb
sub
les
movsl
xchg
push
or
flds
add
out
jno
scas
push
sub
dec
test
lods
add
jbe
sub
sub
xor
mov
xchg
outsl
pop
xlat
jle
int3
or
sub
movb
xor
jnp
and
imul
pop
jno
fbstp
repnz
sbb
ret
jb
je
cmpl
mov
push
jle
sub
mov
cltd
mov
popf
mov
fadds
shl
les
mov
jno
fwait
movsb
mov
pop
and
xchg
cmp
ss
dec
outsb
xchg
adc
and
sub
loope
mov
imul
aas
insl
jbe
repz
dec
pushf
mov
xchg
imul
xor
clc
or
sbb
push
mov
rcrl
int3
stos
outsl
jecxz
push
ljmp
and
mov
out
jle
fwait
xor
pop
xchg
sti
push
xor
push
push
loopne
into
andb
mov
rorb
out
cwtl
add
xchg
aam
inc
fstpt
fwait
xchg
mov
std
fiadds
mov
pop
int3
mov
leave
cmpsb
mov
push
jp
add
je
inc
inc
repnz
xor
inc
pop
mul
les
or
mov
push
ljmp
gs
out
jge
xorl
add
outsb
loopne
addr16
mov
cmpb
aas
mov
dec
popa
mov
outsb
dec
mov
pop
shr
inc
push
and
or
xor
int
lahf
rcrl
jecxz
in
test
xchg
daa
cmpsl
repz
daa
mov
movl
ds
sub
lods
fisttpl
fisubl
leave
xor
cwtl
push
jae
pop
xchg
rorl
dec
dec
stos
dec
fbld
in
xor
mov
and
mov
mov
inc
mov
push
adc
sub
fcmovnb
sahf
xchg
mov
mov
fwait
sbb
fwait
mov
push
sahf
fwait
dec
ja
xor
mov
mov
xchg
push
popf
subl
aam
push
mov
rcrb
stc
push
inc
ret
push
xor
jmp
xchg
or
lret
sti
mov
sti
pop
pop
cmp
nop
andl
or
stc
mov
stos
aad
xchg
xchg
and
lea
testl
test
sbb
lea
call
xchg
in
out
inc
decb
xlat
fwait
aas
mov
ret
int
test
fwait
and
jae
or
or
rcrl
pop
imul
ret
aaa
mov
fwait
loope
inc
pop
scas
or
pushf
outsl
cmpsl
jmp
sti
sub
dec
or
ret
mov
int
rcl
sbb
or
pop
pop
roll
jecxz
pop
dec
lahf
test
scas
iret
xchg
push
adc
popf
dec
push
jmp
mov
fwait
xchg
sti
push
repz
jg
inc
add
xchg
jecxz
fwait
lods
pushf
out
xlat
dec
mov
imull
out
lret
ret
cmpb
xchg
sbb
mov
xchg
movsl
or
sarl
cmpsl
cmc
add
jnp
add
jmp
dec
pop
mov
fwait
push
bndstx
mov
or
add
xor
int
scas
jnp
fwait
mov
or
test
mov
ss
into
xor
into
jae
or
mov
orl
cmp
daa
jnp
daa
mov
jae
push
decl
sbb
iret
sarl
iret
jae
ret
ss
xor
xor
push
addr16
lea
test
mov
out
jl
icebp
fldt
jmp
and
jl,pn
fldt
fnsave
mov
lcall
pop
fwait
mov
ja
fbld
mov
jecxz
jge,pn
mulb
add
cli
cmp
arpl
pop
fstpt
daa
pop
push
xchg
cmpb
adc
jb
ss
fucom
fwait
mov
dec
nop
jle
imul
cmpsl
fsts
outsb
imul
xchg
sti
jno
adc
fildll
cmp
dec
jo
sbb
xlat
add
sbb
rolb
cwtl
repnz
loope
int3
pop
pop
xchg
mov
aam
je
fsts
sub
in
scas
push
mov
clc
add
outsb
flds
inc
jecxz
inc
mov
sbb
dec
sbbl
jnp
mov
xchg
lahf
andl
inc
cltd
orl
push
aad
xchg
leave
pop
jbe
and
jle
in
xorl
inc
inc
jmp
ret
mov
stos
fwait
xchg
mov
pop
mov
outsb
or
nop
jne
mov
mov
sbb
mov
test
out
ljmp
and
std
pop
mov
pop
and
orl
sbbl
lds
add
loope
stos
das
addl
adc
dec
test
mov
cmpsl
jmp
or
inc
or
std
push
mov
xor
mov
ret
pop
arpl
xchg
cmc
sahf
or
mov
fcmovnu
sbb
movsl
sbb
mov
cmpsl
adcl
mov
sarl
and
mov
stos
fwait
lahf
mov
lds
fwait
dec
comiss
push
adc
dec
out
popf
mov
dec
pop
shrl
outsb
mov
stos
push
mov
mov
mov
out
dec
or
rcll
in
jmp
dec
stos
sahf
pop
sub
roll
mov
out
imul
cmpl
add
inc
dec
stos
mov
jnp
mov
es
cwtl
push
mov
mov
ja
mov
mov
sahf
mov
mov
pop
ffreep
fwait
pop
pop
into
xlat
push
mov
mov
jae
jnp
mov
sbb
fisttpl
addr16
pop
out
loop
xchg
sbb
or
data16
mov
or
mov
mov
adc
inc
sbbl
adc
scas
adc
xchg
push
sbb
outsb
dec
and
lret
cmp
jmp
movsl
push
lea
fsts
popf
add
aam
and
filds
jecxz
stos
xchg
cld
mov
mov
mov
adcl
pop
adc
inc
test
lea
pushf
adc
sti
sub
adc
add
les
inc
sbb
das
into
int3
js
mov
push
dec
add
fldt
pop
test
testl
sub
lods
add
sub
push
inc
arpl
push
pop
pop
jnp
jno
push
jp
stos
mov
inc
xor
mov
dec
shr
das
sar
pop
push
jne
xchg
adc
inc
push
dec
jb
movsb
arpl
or
outsb
add
pop
sub
push
and
leave
cmp
adc
stos
shrl
pop
xchg
and
fcmovu
aaa
mov
arpl
mov
push
addr16
test
adc
data16
jae
lods
icebp
std
test
pop
pop
push
push
aas
roll
addr16
xchg
dec
jne
stc
lods
xor
inc
pop
pop
shll
mov
inc
adc
cmp
daa
lods
mov
jg
push
dec
xor
aam
mov
push
fwait
xor
outsb
mov
pop
sub
ja
mov
rcrb
adc
cmp
pop
mov
mov
cmp
mov
cltd
xchg
push
ss
or
arpl
nop
hlt
xchg
stos
sub
mov
or
arpl
outsl
push
push
push
outsb
sbbb
or
and
pusha
aam
scas
insl
repnz
in
mov
sub
ret
test
leave
fadds
or
adc
sbb
mov
cmp
fsubrl
xchg
sbb
xchg
ds
lret
xchg
mov
lock
xor
sahf
adc
cmp
xchg
stos
pop
fwait
cld
mov
mov
int
xor
mov
dec
jne
test
lods
inc
push
repz
mov
inc
push
and
and
aam
leave
call
subb
lock
and
xor
mov
lods
add
jb
mov
mov
xor
lods
rolb
cmp
lock
ds
pop
cld
pop
inc
push
xor
mov
jne
or
add
push
ljmp
pop
xchg
jbe
xchg
clc
push
arpl
sub
icebp
jne
iret
mov
xchg
or
inc
cwtl
test
pop
pop
pop
jnp
jo
push
push
arpl
rcrb
frstor
adc
int3
cmp
aaa
popa
arpl
sahf
shlb
ret
stos
leave
in
push
jecxz
test
ja
bound
dec
jno
jae
mov
push
mov
movsl
mov
cs
test
call
data16
cmp
jecxz
xchg
addr16
cs
dec
dec
mov
imul
inc
pop
pop
mov
cmp
cs
jae
cmpsl
pop
or
movsl
mov
dec
test
lcall
cmp
push
inc
xchg
pop
or
xchg
mov
jno
xchg
sub
movsb
mov
mov
and
mov
add
movsb
dec
xchg
and
fnstenv
lret
enter
aam
lret
jmp
outsl
push
shr
xchg
jecxz
sbb
adc
ret
jecxz
jecxz
sbb
mov
mov
pop
xor
pop
fwait
xor
mov
rclb
fadds
ds
das
scas
mov
arpl
mov
je
xor
or
mov
lds
xor
mov
stc
pop
push
pushf
mov
cmpb
and
out
stos
mov
push
dec
scas
mov
xorl
pop
xor
dec
pop
xor
push
mov
popa
pop
fbld
xchg
cwtl
ss
aad
lahf
out
xchg
jmp
and
mov
into
sti
pcmpeqb
sub
scas
mov
fsubrs
adc
mov
pop
mov
xchg
and
int3
xchg
cmp
test
leave
scas
pop
inc
sub
add
cltd
rol
and
lret
es
xchg
dec
push
fmull
mov
dec
pop
imul
xlat
xor
xchg
int3
sbb
xchg
outsb
je
sbb
popa
stos
fs
sbbl
fiaddl
sub
xchg
mov
mov
cmp
clc
out
sbb
loopne
jae
ret
mov
sti
jecxz
pushf
mov
sub
imul
std
fldl
sub
fs
push
addr16
int3
add
push
jle
call
lods
cmpsb
mov
add
lahf
jp
mov
imul
fldt
frstor
daa
mov
cmpsl
push
stos
fstps
pop
mov
push
dec
mov
cmp
arpl
aas
sti
popf
cmp
push
pop
mov
pop
in
frstor
jecxz
cld
mov
fisttps
test
sbb
pop
jb
popf
add
sbb
mov
jb
cmp
mov
subb
pop
inc
lcall
sub
arpl
into
ret
push
sbb
pop
lret
movsb
fnsave
dec
outsb
insl
push
rcrb
mov
sti
fwait
inc
adc
cltd
xor
and
mov
xor
sub
das
inc
insb
movsl
repz
ds
ret
push
add
push
inc
in
inc
xchg
std
dec
xchg
out
lea
inc
sub
xchg
rep
pop
mov
inc
push
dec
int
fldcw
jle
push
outsb
gs
out
int3
aaa
cmc
xchg
fldl
mov
enter
xchg
push
pop
shrb
mov
push
stos
mov
mov
jecxz
fcmovbe
out
mov
in
mov
jns
mov
loope
dec
lcall
jecxz
fildll
sbb
stc
mov
cmpsb
leave
add
add
mov
test
adc
cmp
push
mov
push
icebp
movsb
cmp
dec
int3
mov
or
sbb
movswl
add
push
cmp
pop
sub
das
mov
sbb
dec
inc
aas
mov
jmp
jmp
or
daa
loopne
sahf
adc
repz
jno
loope
scas
dec
jb
sbb
push
mov
aaa
fcmovnb
arpl
mov
push
cmpsb
mov
jmp
into
dec
pop
mov
outsb
out
jae
mov
dec
xor
mov
xor
jecxz
addb
leave
mov
mov
movsb
or
stc
pop
insl
adcl
pop
jne
cwtl
cltd
pop
add
mov
stos
sub
xor
jecxz
aas
js
push
aam
rcll
xchg
adc
mov
aas
pop
int3
rcr
mov
adcl
cmp
ficoms
mov
jp
movsb
jae
jecxz
mov
and
pop
jae
xor
add
mov
addl
pop
lods
std
mov
and
mov
xchg
arpl
pop
fldt
mov
mov
sti
mov
in
jle
inc
lahf
outsb
xor
mov
jl
lcall
push
repnz
mov
mov
pop
push
decb
push
and
pop
out
loopne
pop
pop
mov
inc
add
inc
pop
repz
mov
loopne
jle
cwtl
je
cmp
sbb
dec
js
jecxz
mov
pushf
mov
push
or
jge
sub
data16
push
pop
idivl
stc
push
outsl
std
pop
rolb
loope
inc
xchg
xlat
add
push
leave
pusha
icebp
jns
fsubr
or
jge
push
sbb
call
jno
xor
into
out
xchg
add
xlat
inc
xor
jecxz
nop
and
xor
sub
cmp
jnp
push
ja
stos
fldcw
or
bound
jnp
nop
outsb
mov
inc
jne
jns
test
xor
outsb
aas
xor
hlt
inc
xor
loopne
sbb
pop
xchg
mov
sub
cmpsl
stos
pop
shld
mov
jl
jecxz
pop
test
movsl
mov
divl
arpl
stos
dec
in
lds
stos
leave
mov
ficoms
cwtl
sbb
xor
insb
iret
test
jnp
jno
xchg
out
cmp
outsl
xlat
cwtl
paddw
fcmovne
mov
cmpl
insl
xchg
cmp
and
or
adc
fstpt
xchg
mov
cli
add
imul
push
arpl
out
shrl
leave
add
hlt
out
flds
pop
xchg
push
jno
and
popl
jecxz
push
shrl
in
fstps
imul
sub
pop
test
cmp
jg
fsts
pop
jns
jge
addr16
aaa
outsb
cmp
call
jl
cmpsb
aad
xor
lret
jecxz
lcall
fcompl
mov
sbb
loope
aad
fst
adc
mov
jle
js
pop
jnp
push
jecxz
loopne
mov
sub
roll
sbb
dec
iret
vmulsd
stos
test
push
xchg
cmp
insb
xchg
cltd
fwait
jge
and
into
popf
push
stc
mov
push
adc
mov
aad
xor
jae
xchg
sbb
mov
jle
popl
aad
sahf
pop
test
dec
jbe
call
leave
imul
repnz
in
shlb
hlt
pop
fwait
jo
jno
es
rolb
lret
pop
fs
xchg
jb
xchg
pop
push
xor
inc
je
xchg
push
outsl
xchg
lods
mov
or
xchg
xorl
ja
xchg
sub
sbb
push
mov
fcompl
push
cmp
sub
dec
xchg
pusha
inc
iret
pop
mov
push
arpl
cmpsl
sti
mov
ja
leave
sbb
dec
je
mov
mov
cmp
clc
xchg
mov
jp
lcall
mull
sbb
cmp
mov
adc
add
pop
adc
mov
sti
inc
add
adcl
mov
in
fnstcw
push
mov
imul
pop
xlat
mov
xor
arpl
inc
in
stos
ljmp
jns
iret
lods
mov
mov
cmp
jge
scas
cmp
xorl
faddl
pop
mov
xchg
fildl
adc
mov
fldt
mov
loopne
xchg
cmp
aad
inc
int
push
fwait
inc
adc
adc
xlat
rcrb
inc
inc
out
test
insl
mov
and
fistpll
iret
and
outsb
fimuls
leave
arpl
xor
xchg
xchg
mov
cmp
sbb
jne
sbb
mov
sbb
mov
add
cmpsb
jnp
mov
pop
inc
inc
jle
adc
add
jmp
jae
or
xchg
jecxz
pop
mov
add
inc
mov
movsb
rep
cmp
jb
aad
and
xchg
pop
jnp
daa
add
xor
mov
xor
popa
or
jg
lret
into
int3
jne
add
in
sbb
and
mov
lea
push
pop
out
nop
dec
dec
or
stc
ss
stc
mulb
fcomi
push
push
fldt
cltd
jecxz
mov
scas
aam
push
sbb
pop
ror
sub
push
dec
sarl
out
inc
pop
pop
push
xchg
inc
addb
test
sub
sti
mov
enter
arpl
movsl
int
test
imul
pop
jle
jae
sbb
adc
pop
or
in
jo
dec
bound
jge
lcall
adc
and
mov
cmp
sub
gs
add
in
push
xchg
pop
test
lods
push
cltd
or
jle
mov
push
in
xor
data16
rcl
aam
adc
jmp
hlt
mov
push
sbb
jns
rolb
insl
test
jae
outsb
roll
push
xchg
inc
adc
and
jmp
leave
shrl
pop
mov
add
mov
jno
pop
fwait
arpl
negl
adc
rorb
inc
outsb
aaa
jb
lea
sub
insb
sub
outsb
or
adc
test
jbe
push
inc
lahf
mov
movsl
leave
std
cli
inc
cmc
sbbb
sub
sbb
arpl
sbb
jno
xchg
cmp
lea
rcl
adcl
aas
or
insb
add
sbb
adc
xor
inc
xchg
xchg
cmp
adc
iret
push
into
dec
pop
lret
arpl
stos
sbb
in
mov
outsb
mov
add
pop
arpl
mov
in
sbb
mov
sbbb
xchg
ja
cmpsl
push
das
repnz
aas
push
inc
outsb
roll
rcl
loopne
call
dec
xchg
inc
sub
aad
rolb
xchg
fwait
dec
adc
fsubl
inc
test
rcr
xchg
shlb
loop
jns
dec
cli
xchg
outsb
pop
pop
je
int
adc
daa
pusha
push
xor
enter
sarl
mov
dec
scas
push
outsb
dec
arpl
jecxz
jne
jbe
hlt
aam
jae
mov
repz
pop
cwtl
imul
inc
cmpl
add
xorb
inc
gs
and
mov
fwait
jg
xchg
jno
push
gs
add
adc
pop
flds
push
imul
test
out
adc
xor
div
repnz
hlt
mov
jb
arpl
add
fnsave
jnp
jecxz
push
mov
mov
push
fiadds
adc
jnp
mov
jb
cmpsl
mov
push
lods
dec
sbb
sub
mov
push
cmp
sub
fcoms
adcl
xor
js
mov
mov
arpl
jecxz
xchg
ret
stos
xchg
arpl
imul
subb
loopne
leave
movsl
mov
cmc
xchg
sahf
mov
pop
addl
xchg
sbb
pop
cmpb
scas
mov
hlt
adc
dec
jl
jle
mov
push
inc
adc
inc
xchg
add
pop
outsb
inc
cmp
inc
add
insb
inc
imul
push
xor
jnp
push
dec
jb
outsb
xor
adc
fadds
leave
mov
mov
xchg
insl
sbb
sub
cmp
loop
inc
mov
leave
out
mov
dec
mov
lods
ja
aas
rcrl
cmpsl
jb
mov
mov
jmp
shrl
fcomps
xchg
stc
orl
lods
ljmp
orl
arpl
arpl
sub
jno
in
in
jne
inc
jae
inc
xor
mov
dec
and
add
or
sub
mov
push
cwtl
dec
jecxz
sub
jp
jmp
imull
mov
cli
movsl
push
sbb
push
ljmp
push
cli
scas
dec
xchg
sbb
sub
insl
insl
leave
cmp
nop
inc
inc
aad
lods
fdivrs
sub
js
pop
cmpsl
fs
lods
xchg
aas
sbb
jl
pop
xlat
jb
dec
movsl
es
sub
push
ss
cmpsb
lea
stos
inc
pop
pushl
popa
pop
sbb
pop
sub
out
pop
outsb
inc
push
repz
dec
leave
fld
outsb
sub
xor
adc
push
or
icebp
aam
and
bound
cli
imul
dec
fcom
jecxz
nop
je
js
fwait
mov
sbb
iret
push
add
add
outsb
or
adc
pop
bound
sbb
dec
jl
and
or
pop
fiaddl
addb
and
fnstenv
push
cmp
mov
pop
sti
xchg
dec
dec
icebp
push
jne
jns
adc
xchg
outsb
mov
add
sbb
xor
mov
cld
jne
out
insl
mov
fwait
stos
jb
xor
jle
ds
fcoms
in
sti
rcl
jle
adc
popa
std
jge
out
jae
icebp
sbb
lahf
pushf
inc
and
dec
xor
push
popl
iret
lds
cmpsb
dec
test
mov
jbe
adc
add
mov
fdivl
mov
aad
out
and
fsts
add
pop
cmp
stos
shr
adc
fwait
pop
xchg
imul
add
mov
movsb
andb
xchg
stc
xchg
fsubrs
lret
imul
add
sbb
pop
add
int
inc
mov
jmp
fdivl
fs
jmp
loopne
jno
mov
and
iret
adc
ret
push
inc
data16
push
pop
sbb
mov
lahf
fnstsw
dec
pop
das
push
sbb
rcr
jbe
jle
mov
stos
jg
mov
arpl
xchg
adc
inc
int3
or
stc
inc
cli
movsb
sbb
cmpsl
xor
fcmovbe
gs
scas
outsb
int3
test
sbb
dec
adc
xor
pop
addr16
pop
push
jl
dec
xchg
pop
pop
adc
sbb
push
int3
cmpb
pop
pop
gs
add
sbb
cmp
testb
adc
jecxz
repnz
sub
push
pop
in
andb
lods
and
xchg
xor
repnz
out
jae
mov
test
sti
out
and
test
stos
pop
lret
pop
mov
data16
nop
jb
add
adc
rolb
sahf
js
inc
fildl
xchg
and
adc
add
add
fbld
insb
push
push
and
icebp
jecxz
rorl
jecxz
xchg
mov
sti
scas
pushw
xlat
js
mov
aam
iret
sbb
pop
and
sub
aad
sbb
in
jb
cld
iretw
std
adc
cmc
loope
jne
cmp
xchg
mov
mov
pop
sahf
jns
jns
imul
sbb
mov
ret
pusha
add
cmp
ret
mov
insb
repnz
xlat
pop
pop
jecxz
sarl
jp
or
int
je
andl
pop
dec
vmovntps
cltd
dec
sbb
movsb
adc
inc
mov
push
mov
fsubrl
mov
xor
into
in
cmp
xchg
frstor
jl
mov
scas
mov
adc
mov
sub
test
sti
jge
je
xchg
test
jle
cmc
sarb
popa
andb
push
xchg
inc
roll
adc
shr
ljmp
inc
add
xchg
sti
jp
adc
add
sub
jo
xlat
loopne
arpl
lods
stos
sbb
mov
ds
sub
insl
subl
dec
xchg
outsb
xorb
jecxz
lret
out
gs
mov
inc
mov
in
movsb
push
xchg
lods
add
scas
in
into
mov
dec
sbb
jbe
subl
hlt
jnp
xchg
mov
add
xchg
inc
lods
mov
fists
adc
dec
or
fcmovnbe
cmpsl
in
sub
and
pop
jecxz
scas
imul
gs
xchg
or
pop
in
arpl
addr16
inc
leave
out
int3
inc
pop
sbb
lret
inc
add
push
jnp
push
loope
mov
add
jno
cmp
stos
jbe
testb
dec
pop
out
dec
pop
pop
push
test
xor
fst
testb
or
notb
mov
je
arpl
pop
loop
adc
cmp
mov
mov
mov
pop
add
jb
rol
fldt
jg
push
mov
inc
jae
cmp
add
add
xchg
outsl
insl
out
mov
ljmp
testl
mov
or
pusha
adc
jg
xchg
mov
in
push
fcmovnu
sub
nop
das
into
or
rolb
cli
aaa
mov
and
dec
in
mov
jns
fcmovnu
jle
sti
lret
in
sbb
gs
jnp
call
cli
push
jnp
dec
std
jmp
fcoms
sbb
rcrl
push
cmp
ret
jg
jnp
jne
stos
in
ja
mov
outsb
inc
jg
inc
jnp
adc
xchg
dec
jnp
mov
jmp
jnp
icebp
enter
loop
jnp
aad
add
test
stos
inc
rcll
push
inc
push
insb
or
mov
pop
testb
cmp
hlt
lret
popf
cs
cmpsb
inc
test
std
into
fldcw
nop
jnp
push
pop
insl
jb
xor
pop
cmp
scas
fsubl
rorl
xor
mov
mov
jnp
cmp
fs
jg
or
or
jnp
inc
pop
jne
out
lret
or
scas
shrb
or
les
iret
push
mov
mov
jg
add
int3
jae
test
lea
fmull
lcall
push
cmova
lea
les
xlat
sarl
into
or
mull
mov
stc
inc
test
mov
jle
add
cmp
adc
sbb
or
or
fimull
dec
mov
jp
mov
das
pop
sbb
test
xor
inc
fnstenv
sti
jecxz
mov
push
inc
lcall
dec
adc
xlat
dec
or
mov
fdivr
fstpt
sarb
test
pop
pop
mov
arpl
pop
inc
fwait
aaa
cmp
std
cmp
pop
pusha
test
test
and
rcrl
mov
aaa
sbb
jnp
jecxz
mov
neg
sub
adc
sbb
loope
mov
push
mov
popa
out
sbb
pop
push
add
gs
lea
outsb
sahf
jmp
mov
sub
or
std
cmp
outsb
dec
arpl
clc
dec
mov
inc
fstpt
adc
ds
faddl
aad
push
mov
into
popa
filds
pop
mov
fwait
addr16
sub
push
roll
jne
cmp
bound
xlat
stos
push
rcrl
loopne
add
sbb
ret
sbb
loopne
jnp
jl
js
jecxz
mov
daa
add
test
fmul
pop
and
cmp
popf
test
jle
mov
stos
and
and
cmc
outsb
xchg
test
lahf
xchg
shlb
aas
outsl
sti
icebp
jecxz
jae
int
aas
scas
pop
fistpl
push
lcall
jns
cmpsb
addr16
ljmp
cmp
lods
sub
dec
in
sbb
lahf
add
add
test
test
and
xchg
mov
cmp
adc
sbb
lea
mov
jnp
rclb
push
sub
dec
daa
out
aaa
cmp
mov
stos
cltd
jmp
xorl
lds
ja
out
jns
cmp
ljmp
xchg
xchg
repz
lcall
dec
xchg
aas
in
inc
mov
inc
and
push
jnp
cmp
gs
bound
and
jb
loope
jnp
push
fidivrs
lds
lea
dec
sbb
ds
and
sbb
jnp
clc
test
call
outsl
inc
nop
cwtl
xchg
dec
mov
bound
push
sub
lahf
adc
mov
ja
or
aad
cld
mov
mov
jle
pop
test
xor
mov
cli
mov
xchg
xor
adc
jne
pop
enter
fs
rcll
jnp
scas
jmp
mov
fdiv
sbb
mov
ljmp
adc
mov
sbb
cmp
xchg
aam
push
mov
pop
mov
es
add
stos
lahf
jnp
fidivrl
jecxz
std
fs
stos
sbbl
xchg
in
inc
jnp
es
jno
sti
mov
fsubr
bound
jnp
sbb
push
sbb
push
cmp
addr16
repz
pop
test
dec
adc
rorb
in
fistpll
test
pop
cmc
cmpsl
cmp
inc
and
ret
add
test
mov
lods
imul
je
js
jnp
out
mov
xchg
and
sub
jmp
arpl
jmp
jnp
adc
imulb
and
and
jb
fdivrp
fmuls
test
push
mov
xor
sbb
cmpsb
cmpsl
iret
add
jnp
inc
std
mov
adc
pop
rorl
aam
jmp
lea
xchg
add
roll
aaa
out
push
test
push
add
fildl
les
jno
pop
mov
lret
sbb
xchg
sub
rcll
mov
inc
outsl
and
dec
js
jnp
jecxz
mov
notb
loop
mov
jp
push
mov
dec
add
or
sub
aad
shlb
mov
add
dec
xor
xchg
mov
push
aam
cs
sbb
jnp
jmp
test
jnp
adc
add
repz
push
mov
pop
mov
mov
mov
push
cmp
mov
xchg
stos
sbb
push
push
popa
popf
pop
jnp
pop
and
mov
add
fstpt
ljmp
enter
add
dec
aas
pushf
dec
fs
jnp
cmp
cltd
jne
jge
mov
mov
xchg
fisubrs
aaa
sbb
dec
addr16
mov
clc
jne
in
outsb
pop
neg
jnp
stos
lods
xor
pop
jnp
gs
rorl
dec
and
sub
xor
xchg
aaa
or
clc
cmc
jle
jo
pop
in
mov
mov
call
push
jnp
std
outsl
daa
lock
rcr
ja
call
jb
mov
dec
pusha
cli
sub
push
sbb
ja
jnp
push
xchg
push
push
iret
test
fdiv
sbb
cltd
popa
mov
jnp
sub
lret
and
jmp
jnp
lods
dec
repnz
cmp
out
sbb
jge
push
fdiv
xor
int3
rcll
mov
into
popa
int
xchg
arpl
mov
outsl
jnp
or
imul
sub
aad
inc
pop
mov
jnp
std
js
insl
jnp
inc
and
out
into
imul
adc
or
jg
setle
stc
jnp
xor
mov
or
test
sub
stos
call
adc
sbb
xchg
jl
mov
sbb
or
mov
add
out
enter
cmpsb
lods
jecxz
ret
test
pop
sti
mov
test
xor
jmp
mov
push
jae
cmpsl
mov
in
int3
aam
add
sub
push
mov
mov
ffreep
arpl
sbb
mov
aam
fwait
lahf
lods
mov
inc
imul
adc
mov
xchg
cmp
mov
jno
xchg
mov
lock
push
dec
arpl
out
scas
outsb
out
iret
sti
fidivl
jnp
add
pop
lds
inc
or
dec
jns
xchg
mov
dec
cmp
cs
and
mov
pop
xor
ljmp
sbb
push
jnp
iret
pop
cmpsl
push
cmp
stc
xchg
or
aas
pop
repz
jnp
into
cmc
adc
shll
inc
jnp
xchg
push
les
outsb
mov
or
and
xchg
add
add
adc
dec
xchg
lea
jnp
sbb
jae
jnp
stos
add
outsb
mov
jae
out
shl
dec
mov
mov
xor
add
setl
adc
fidivrl
pop
std
mov
xchg
outsb
clc
cltd
outsb
push
xchg
add
add
mov
mov
push
lret
xchg
or
inc
sarb
pop
fcomps
sub
xchg
pop
movsl
out
pop
clc
out
add
out
out
xchg
mov
mov
pop
inc
sbb
mov
xchg
or
sbb
or
push
cmpsb
scas
mov
iret
movsl
adc
xchg
ret
hlt
sti
sub
fildl
addr16
clc
inc
scas
sub
shll
mov
jecxz
insb
mov
cltd
dec
fs
xor
sbbb
js
inc
jl
adc
jp
sti
mov
adc
xchg
out
push
mov
jns
jnp
xchg
sub
jns
mov
addl
dec
mov
lods
sti
out
mov
jle
pop
adc
pop
xchg
mov
pop
das
dec
mov
pop
imul
es
jno
pushf
decb
insl
dec
dec
cmp
and
add
add
psubusb
cmp
or
push
bound
adc
lods
pop
push
leave
push
add
cmp
or
or
fstsw
jnp
lods
add
lods
mov
add
sti
lock
lcall
push
hlt
cs
ss
xchg
push
loop
jo
pushf
jnp
inc
push
cmp
in
fs
or
or
aad
cmp
leave
fidivrs
imul
pop
sub
pop
jle
dec
mov
jae
lods
imul
jnp
dec
addr16
and
jnp
inc
aam
lds
popl
push
sbbl
cmp
and
mov
sub
jnp
ja
mov
push
inc
leave
dec
ss
xor
gs
lea
out
loope
jnp
popf
jbe
mov
and
pand
sahf
in
add
test
xor
jnp
dec
mov
fstpt
test
push
test
jge
cmpsl
pop
dec
sub
and
dec
mov
jbe
xchg
jne
les
inc
mov
or
xor
mov
call
gs
jnp
sub
jecxz
jae
jnp
xor
testl
imul
adc
scas
mov
lret
in
xlat
dec
jnp
fisubs
frstor
fwait
into
xchg
stos
cmp
mov
je
stos
mov
adc
scas
adc
lds
cmp
outsl
jnp
arpl
add
cli
mov
mov
pop
push
jnp
jo
inc
push
test
je
cmpsl
mov
mulb
jno
jnp
in
dec
mov
orl
aas
dec
xorb
loopne
push
or
out
jnp
jge
pushf
xchg
les
cmp
pop
fcoml
int3
cli
mov
or
dec
pop
mov
jnp
jns
mov
sub
inc
or
loopne
jg
popa
cwtl
sub
ljmp
mov
popf
lahf
sub
mov
lret
sbb
movsb
jne
inc
or
jge
inc
push
xlat
xchg
outsb
dec
and
scas
and
push
mov
faddp
sbb
mov
ja
sahf
outsb
rolb
int
das
xchg
mov
xchg
push
cs
xchg
inc
rorl
clc
std
enter
mov
clc
and
and
and
pop
rorl
xor
outsl
test
loop
stos
fstpt
test
in
add
jns
stos
sti
mov
push
jecxz
rol
push
ds
ret
jae
in
insb
mov
xor
mov
lahf
mov
cld
outsb
int3
pop
cmp
mov
xlat
ja
adc
movl
adc
xchg
push
aaa
pop
mov
std
pop
adc
push
imul
mov
insb
xchg
inc
outsb
or
jnp
mov
sbb
daa
xor
sbb
dec
push
jnp
outsb
xchg
cmpsb
cmpsl
pop
sub
cld
and
sub
rol
test
jnp,pn
out
pushf
mov
jnp
sahf
xchg
xchg
leave
test
je
mov
jnp
add
jns
jp
nop
jecxz
in
sti
pop
mov
fucomip
jnp
lock
dec
jnp
stos
icebp
xor
push
mov
int
mov
jnp
pop
test
icebp
jnp
bswap
jle
outsb
mov
push
rcr
sti
pop
imul
adc
mov
std
push
mov
and
mov
or
sbb
addb
aam
sbb
mov
mov
pop
test
jl
lods
inc
fiaddl
dec
cmp
int
fnstcw
fistl
and
push
iret
jg
add
popa
ret
ret
test
mov
loope
addr16
je
mov
mov
add
dec
test
outsl
adc
insl
or
fs
jnp
inc
scas
push
or
lret
cltd
lods
sbb
and
jnp
inc
insb
jbe
adc
xchg
push
test
inc
mov
mov
or
xchg
cwtl
pop
xchg
and
jge
cmpsl
xchg
rcll
xchg
mov
jnp
and
cmp
aam
jge
jns
idivl
jnp
fmull
dec
rcll
jmp
xor
test
loope
xchg
pop
cmp
pop
dec
sub
add
outsl
repnz
lods
fistpl
in
mov
imul
shrb
sbb
imul
ja
lcall
cmpsb
mov
repz
out
mov
and
dec
mov
mov
lds
jnp
mov
inc
dec
jnp
inc
lods
in
fldenv
or
push
test
movsb
adcb
jno
adc
in
xchg
and
mov
inc
mov
pop
das
into
mov
mov
sarb
xchg
ljmp
scas
scas
cmp
jl
ljmp
pop
adc
rcll
add
sub
add
push
mov
shlb
mov
sbb
or
movsb
inc
pop
jnp
adc
call
push
mov
bound
mov
jg
inc
lock
mov
outsb
cmp
dec
pop
cmp
jnp
subb
or
vphaddudq
outsb
scas
xor
dec
pop
sahf
jmp
adc
dec
pop
jno
and
and
add
movsb
dec
jle
cmp
scas
adc
insb
push
inc
neg
adc
mov
rolb
scas
mov
mov
or
or
pop
arpl
mov
sub
repnz
in
cli
jmp
inc
sti
jle
push
addr16
pop
scas
daa
add
repnz
dec
je
push
lds
dec
fadds
test
repz
cmpsb
jns
sbb
movsl
jp
dec
push
add
adc
mov
movsl
fidivl
mov
and
push
lret
loope
sbb
xchg
dec
sbb
cli
adc
loop
fadds
inc
mov
and
jnp
jge
inc
jl
mov
ss
in
jmp
test
add
pxor
push
xchg
jnp
mov
xor
sbb
xor
bound
aas
jnp
lahf
fcmovnu
lods
xchg
sbb
cmp
dec
pop
jle
pop
mov
mov
mov
mov
xchg
mov
jnp
pop
sub
cmp
mov
adc
xchg
and
xchg
inc
mov
incl
enter
sarl
sbb
ds
faddl
xchg
adc
xor
into
int
aad
jo
out
mov
clc
sbb
rclb
jnp
outsl
and
cwtl
jnp
xchg
or
das
xor
mov
inc
jnp
test
aaa
sbb
dec
test
popa
mov
cwtl
ror
inc
jnp
cmp
sub
or
mov
dec
fwait
or
xor
pop
push
es
and
xor
fmulp
test
shl
pop
hlt
jnp
cld
mov
test
dec
addr16
stc
mov
xchg
stos
jae
les
jnp
sub
mov
testl
mov
hlt
jb
jnp
in
icebp
ret
adc
leave
jnp
insl
clc
cmp
hlt
add
mov
popf
jnp
jmp
ret
out
lcall
test
or
sub
decl
mov
jo
cmpb
inc
ljmp
push
pop
ja
mov
mov
clc
pop
push
mov
call
sti
inc
pusha
xchg
xchg
pop
dec
jnp
ror
dec
outsl
ss
jne
pop
lcall
lret
sbb
cwtl
sub
push
cmp
xchg
or
mov
into
in
pop
dec
jnp
bound
lea
mov
and
mov
sub
je
jnp
popa
jne
inc
jae
pop
rol
xor
mov
popf
jbe
jnp
addb
ja
xor
lret
jp
and
or
jne
jg
int
jnp
ret
fdivrs
jo
movsb
pop
push
fistps
push
jb
stc
jno,pt
dec
pop
das
xchg
xlat
push
and
fisubrs
inc
jnp
int
cmp
cmpsl
aas
dec
outsl
jnp
mov
jnp
mov
ss
push
sahf
cmpsl
lcall
mov
test
sub
cmp
add
mov
fnstenv
test
jg
xchg
dec
mov
enter
and
jnp
jo
jbe
mov
shl
test
xor
stos
movsl
or
pop
lahf
adc
inc
dec
sbb
jnp
adc
popa
push
fdivr
jnp
or
adc
add
addl
mov
outsl
ljmp
push
sbb
sbb
test
cmpsb
cmp
sarb
xlat
test
add
stc
jl
mov
xchg
inc
lea
push
push
jnp
sbb
adc
arpl
xchg
sbb
inc
jge
loopne
and
push
sub
jnp
sbb
out
lcall
cmp
push
push
aaa
jnp
sub
fsubl
mov
jnp
rorb
inc
push
or
add
cld
adc
push
jb
dec
vprotw
cmp
xchg
mov
pop
jnp
sub
ret
cmp
in
xchg
mov
push
cmp
push
xor
inc
shl
fwait
push
and
inc
pop
xor
mov
add
shlb
add
mov
mov
pop
scas
insl
mov
rcrl
adc
icebp
das
xchg
jb
pop
into
bnd
mull
je
pop
push
loop
test
jge
or
pop
pushf
test
jnp
into
sti
xor
lock
jnp
cmp
subl
lret
fabs
xor
fwait
mov
movsb
sti
aas
ret
lret
lahf
sti
xchg
xor
mov
dec
xor
cmp
jnp
xor
cmp
mov
outsl
test
and
jnp
std
sbb
shr
clc
fldl
push
mov
jb
pusha
mov
sub
or
and
jnp
rcll
fucom
dec
rolb
jnp
addr16
addb
jl
adc
add
fisubs
mov
xchg
mov
bound
stos
dec
lret
jle
movsb
idivb
mov
in
jnp
jl
sub
jnp
ja
lea
fwait
or
xchg
cli
in
test
pop
inc
loop
jnp
or
mov
push
and
push
jnp
in
shrl
jmp
aaa
pop
daa
push
push
es
dec
push
sti
cs
pop
mov
jnp
cmpsb
int
fmuls
adc
adc
xchg
or
sarl
jo
xor
mov
test
outsb
pusha
mov
or
push
test
mov
pop
jne
sti
jge
enter
and
sub
push
jnp
repz
adc
pop
stc
lcall
sbb
pop
lahf
cmp
call
out
in
jo
jnp
stos
lret
jecxz
sbb
sbb
pusha
mov
add
fnstsw
pop
adc
pop
daa
cmp
jnp
out
mov
mov
dec
sti
pushf
pushf
sbb
xchg
jnp
cmp
repnz
cmpsb
jb
int3
stc
and
add
in
ljmp
mov
mov
xchg
mov
adc
outsl
test
jmp
lock
xor
add
mov
std
mov
sti
repz
inc
xchg
mov
gs
popf
xor
pop
jnp
fwait
ret
fisubl
jl
jmp
xchg
jnp
xlat
xchg
and
pushf
mov
test
mov
or
int3
jnp
xorb
and
cli
jnp
adc
pop
pushf
jp
mov
cltd
mov
xchg
pop
cmp
mov
jmp
sbb
mov
insb
mov
test
and
pop
add
lods
sbb
loopne
out
call
dec
adc
and
icebp
pop
jnp
or
cmp
inc
xor
mov
push
incb
cmp
pop
mov
push
test
fisubrs
cmp
ljmp
mov
push
jnp
sahf
insb
and
inc
rcl
add
lcall
inc
lods
stos
outsl
and
inc
sar
dec
mov
int
fcomip
sti
cld
mov
jmp
in
push
imul
push
adcb
cmp
addb
jle
js
call
jno
out
lds
xor
jl
mov
pop
outsb
mov
test
add
cmp
fstl
arpl
js
add
xor
jne
mov
test
pop
jbe
sub
jo
jmp
jne
jnp
lcall
jnp
in
push
das
mov
or
pop
repnz
pushf
add
sub
xlat
push
dec
sti
sbb
pop
lcall
xchg
jge
mov
push
lcall
jnp
xchg
mov
push
push
cmpb
repnz
or
stos
xor
es
into
cmp
test
cltd
jle
add
jmp
mov
mov
imul
aaa
je
leave
popa
pop
push
xor
imul
jb
daa
mov
test
sub
jp
and
or
jnp
iret
ds
xchg
sub
sbb
out
jmp
lahf
clc
in
inc
pop
mov
cli
insl
pop
inc
push
jle
test
sub
pusha
jnp
aam
xor
adc
cld
pushf
jnp
loope
push
hlt
mov
imul
popl
jnp
xchg
outsb
jnp
dec
push
inc
test
xor
xorb
adc
xor
rorb
jbe
movsl
jnp
ja
jae
mov
jmp
mov
shll
hlt
pop
cmp
std
push
jae
aam
fildl
xchg
jnp
cli
ja
dec
je
iret
gs
jnp
mov
add
jne
addr16
jnp
push
out
fwait
je
jg
jnp
pop
xchg
cmp
test
xor
sbb
jno
mov
outsb
inc
clc
fwait
adc
pushf
daa
sub
pop
ffreep
sbb
inc
nop
xchg
mov
jl
jnp
aas
dec
movb
dec
fnstsw
push
nop
in
cld
divl
lahf
and
sbb
test
inc
jp
fimuls
pushf
cltd
fmull
lods
fs
pop
mov
or
fistpl
jnp
mov
mov
jnp
adc
adcb
mov
orb
insb
das
cmp
les
jnp
xchg
mov
js
jnp
add
in
adc
xchg
popa
bound
adc
rolb
lcall
jle
add
mov
lods
add
sub
ja
xchg
iret
mov
scas
cs
hlt
sahf
cmpsb
mov
fimull
ret
xor
push
sbb
repz
sbb
mov
jb
clc
hlt
test
scas
mov
cmp
push
pop
fstpt
test
test
sub
fstl
dec
aas
cmp
inc
movsb
mov
bound
loopne
std
out
xchg
ror
dec
jne
pop
inc
adc
lock
mov
and
jns
inc
xchg
push
hlt
push
dec
mov
jnp
jo
negb
xor
in
lock
js
cmp
sub
push
cmp
xchg
flds
or
test
cmpsl
hlt
stos
addb
sahf
ret
bound
loopne,pn
jl
sub
jnp
cmovae
jg
aam
jnp
cld
insb
mov
aad
out
mov
into
pop
or
or
addr16
mov
leave
push
nop
jno
sbb
int3
scas
xchg
icebp
pop
mov
jbe
push
fs
dec
jae
mov
fstpt
fildl
jnp
push
push
adc
push
xor
mov
lret
jecxz
test
pop
pop
lcall
pushf
pop
pop
xchg
xor
icebp
mov
cmpl
or
aam
fstps
lods
int3
add
and
mov
aaa
pop
lock
pusha
jnp
jbe
enter
into
jnp
scas
ja
in
mov
roll
in
test
arpl
fisubrl
mov
mov
mov
dec
or
push
mov
movsl
jnp
icebp
popf
xlat
or
xchg
imul
repz
mov
pop
addl
rorb
sub
cmpsb
cmp
mov
ret
imul
mov
or
stc
jnp
jae
adc
rcrb
pop
and
fnstsw
into
and
fbld
int
out
mov
cmpsl
shrb
sub
repz
mov
lahf
mov
cld
xchg
mov
fldt
test
cli
inc
mull
and
sbb
mov
cmpsb
pop
mov
or
insl
int3
out
in
sbb
xchg
xchg
ja
jno
mov
sub
push
and
jnp
sbb
fistpll
arpl
adc
mov
imul
push
test
inc
push
pushf
jnp
loopne
rolb
clc
push
insb
lods
xor
jnp
in
inc
xchg
je
adc
pop
aas
xorl
jmp
jo
scas
arpl
push
lcall
fsts
aad
and
shll
push
push
repnz
xchg
jnp
mov
mov
fsubrl
mov
nop
adc
inc
push
jnp
mov
dec
sbb
in
jg
sti
cmpsb
or
bound
push
or
icebp
and
mov
sahf
inc
arpl
and
and
jb
jle
and
cwtl
arpl
jg
aas
xchg
xlat
jo
aad
jnp
jecxz
shr
stos
or
add
adc
leave
pop
add
mov
jmp
mov
mov
sti
pop
negb
adc
xlat
and
adc
xchg
jnp
sahf
dec
adc
mov
xor
jnp
insl
movsb
lods
dec
xchg
in
mov
lret
add
mov
mov
lds
mov
jnp
cltd
mov
icebp
jne
mov
mov
jbe
cs
jnp
push
and
cmc
mov
jnp
lds
adc
cmp
jae
iret
orb
mov
scas
adc
jnp
js
mov
jnp
xchg
lds
idivb
mov
mov
sub
jnp
jb
and
xor
cmp
adc
fwait
rorb
ret
adc
iret
mov
cmp
mov
out
cmp
shll
aam
inc
and
sahf
add
lahf
jnp
jbe
jl
xchg
cmc
mov
inc
xor
cmp
mov
dec
push
cmp
jecxz
dec
jbe
repnz
xchg
pop
dec
addr16
nop
sbb
xor
inc
and
pop
and
sar
jnp
pop
ds
js
pusha
pop
mov
or
aam
inc
enter
dec
test
sbb
dec
jnp
pop
push
aad
pop
lret
aam
movsb
mov
sarb
jp
hlt
jnp
pop
mov
mov
lea
jmp
ljmp
movsl
shrl
lock
xchg
cltd
test
cmp
rcl
jnp
push
adc
or
ljmp
cmp
js
sbb
jnp
sbb
into
lret
in
jnp
sbb
enter
mov
and
jmp
loop
in
jnp
loope
cmp
or
mov
outsl
jmp
dec
sarb
clc
mov
add
mov
jnp
mov
sbb
test
clc
cmp
insl
pop
xchg
rcll
xchg
or
cmp
mov
scas
popa
push
xchg
xor
movsb
jle
mov
sub
mov
sarl
daa
adc
cwtl
leave
lret
push
jnp
mov
lret
test
dec
arpl
inc
pop
pop
mov
stc
inc
push
mov
addb
jb
rcrb
push
jnp
jbe
lock
shll
xchg
dec
imul
clc
add
push
inc
jnp
xchg
sbb
lea
add
mov
lock
jmp
xor
xchg
jge
ret
jnp
js
mov
jnp
jle
int3
nop
cwtl
repnz
push
mov
or
ss
mov
mov
jnp
and
sarb
and
cs
xchg
xchg
jmp
jge
cmp
xchg
jae
mov
sbb
lods
jg
fldenv
lds
push
pop
xor
mov
dec
mov
jnp
aad
test
dec
or
mov
fildl
test
imul
sahf
call
mov
jnp
mov
adc
add
or
mov
sub
pop
ds
jg
imull
loopne
rep
out
loope
push
inc
cmpsl
mov
sar
fwait
es
xor
ljmp
mov
mov
movsb
arpl
out
pushf
aam
imul
xchg
fiaddl
jnp
adc
jnp
or
pusha
dec
cmp
ret
pop
cmpsb
jnp
movb
ss
sub
mov
imul
mov
mov
cmp
outsl
mov
repnz
je
inc
jno
jge
mov
xlat
arpl
in
mov
pop
sbb
jns
or
jmp
pop
jnp,pn
inc
cmc
cmp
and
sub
xchg
fdivrl
test
fcmovbe
push
dec
xchg
push
popa
stos
dec
jns
jae
hlt
jnp
inc
cld
cmc
into
outsl
push
jnp
ret
dec
jno
xchg
lds
fdivr
loopne
pop
cmpl
jnp
pop
xor
test
lock
decl
and
mov
test
out
pop
rcrb
fisttpl
jnp
mov
out
inc
notl
icebp
xchg
mov
add
push
sub
inc
jbe
out
mov
fstpl
pop
je
stos
xchg
inc
in
fsubs
fbstp
pop
arpl
cmp
push
sahf
pop
outsb
into
push
fcomps
pop
jne
and
ss
mov
mov
jbe
pushf
and
dec
pop
sub
mov
and
popa
and
inc
jnp
repz
bound
inc
addb
hlt
fistpl
jnp
pop
icebp
mov
jnp
add
pop
pusha
jnp
cltd
aad
fs
pop
xor
inc
cli
loope
mov
aas
and
push
lahf
cmpsl
movsl
lahf
jnp
fadds
out
sbb
jae
cmp
mov
jnp
aas
data16
inc
mov
jmp
imul
sub
fwait
popf
xor
xor
jbe
and
loop
out
xor
jnp
jmp
xor
mov
mov
iret
sbb
jnp
xchg
clc
mov
mov
repz
push
sbb
fildl
mov
out
adc
pop
ja
jnp
xchg
stc
push
mov
inc
xchg
jnp
add
dec
out
or
std
in
xchg
mov
ds
pushf
jnp
popf
or
jnp
int3
xlat
filds
pop
jmp
lods
inc
xchg
push
icebp
cmp
mov
or
xchg
mov
data16
ret
jae
jnp
cmp
mov
into
add
pop
aam
cmc
jnp
or
jl
mov
mov
xchg
or
mov
push
add
jne
mov
adc
push
jno
xchg
rcll
jp
mov
cmpsl
int
and
aaa
mov
add
fcmovnb
jge
mov
inc
mov
jnp
loope
dec
cmp
add
inc
add
fcmovnu
xchg
mov
mov
sbb
jno
xchg
daa
xor
popa
jmp
cmp
mov
jmp
push
orl
nop
mov
pushf
and
lcall
adc
adc
mov
push
test
xchg
cmpsb
sahf
insl
sarb
adc
pop
jnp
pop
daa
dec
jb
push
fwait
jnp
xchg
xchg
add
xor
stc
pop
jnp
pop
test
sahf
or
addr16
scas
jnp
adc
fdivr
jge
mov
pushf
and
ror
pusha
cld
dec
jnp
sbb
addr16
jge
test
cmpsl
inc
dec
add
sub
pushf
int
sbb
repz
xor
je
jnp
jo
add
int
inc
aaa
and
push
or
rorl
xchg
mov
into
out
ret
and
push
popa
insl
orl
and
adc
jb
pop
lods
pushf
dec
shl
jnp
push
mov
jbe
pop
sbb
jo
test
jnp
cli
xchg
ja
daa
add
pushf
jnp
imul
std
xchg
cmc
inc
mov
push
ret
lds
dec
push
lods
fimull
jnp
adc
into
scas
jnp
and
pop
aaa
lcall
test
fdivrp
fs
mov
sti
inc
adc
pop
sub
jmp
out
js
push
shll
push
xchg
jnp
pop
mov
cmp
pop
adc
add
fwait
test
gs
clc
mov
mov
idivl
bound
mov
lcall
xor
ljmp
jnp
pop
push
sbb
enter
or
addr16
test
and
fs
xor
stos
fisttps
test
mov
xchg
fwait
push
dec
xor
mov
fstl
test
lock
pop
mov
aad
dec
inc
movsl
mov
das
push
xchg
sbb
fwait
xor
ljmp
dec
test
flds
push
adc
mov
test
cmp
std
add
push
popa
cld
sti
movsb
and
test
cmp
xchg
orb
fadds
stc
mov
ret
inc
push
lahf
or
mov
sub
das
mov
movsl
pop
shll
jnp
int
xorb
xchg
nop
mov
insl
mov
outsb
jnp
pop
xor
mov
adc
fwait
push
je
fisubl
mov
xchg
out
inc
mov
movb
sti
popa
test
mov
cmc
lahf
sbb
ret
movsl
jecxz
ret
inc
pop
jnp
scas
pop
adc
jb
mov
stc
mov
fdiv
es
xchg
mov
inc
out
inc
mov
jle
inc
jp
and
adc
insb
jg,pt
jb
daa
xchg
push
sti
in
push
push
movsb
mov
fdivs
sbb
subl
push
outsb
ror
inc
jge
xor
loop
inc
or
dec
pusha
sbb
leave
jbe
or
fdivrs
jo
fcmovnu
cmp
mov
sti
lret
cmp
loop
shll
dec
sbb
adc
jne
inc
test
outsb
sbb
and
add
in
sarl
inc
mov
pop
hlt
dec
das
jo
stos
outsb
jge
sbb
mulb
shrd
xchg
fisttpl
rclb
into
rcll
xchg
push
fcmovbe
stos
fdivrl
xchg
xor
add
pop
fiadds
not
cmp
je
jecxz
daa
add
outsb
jle
call
in
jnp
leave
fmull
out
jnp
roll
lock
andl
mov
jnp
push
out
loopne
or
and
sbb
mov
shl
sti
daa
jne
sbb
addr16
cmpsl
mov
out
inc
in
inc
daa
jle
pop
push
xchg
int
in
and
inc
out
and
mov
sbb
loopne
add
hlt
jnp
mov
dec
out
cmpsl
sarl
jnp
adc
xlat
or
jno
xchg
std
jnp
mov
and
jnp
or
mov
jae
jnp
mov
jge
mov
pop
outsl
pop
xchg
dec
in
xchg
jae
xlat
jnp
gs
xor
popa
ljmp
xchg
mov
inc
mov
push
js
push
int
outsb
movsl
sti
lea
out
test
pop
sub
test
jnp
cld
adc
xchg
fnstsw
repnz
and
cmp
negb
cmp
xchg
enter
dec
test
jge
push
cmp
push
nop
or
sbb
mov
or
jle
adc
xorl
cmp
scas
das
dec
pop
subb
pop
popa
push
mov
jae
iret
pop
imul
arpl
loope
out
pop
push
sub
jnp
xor
test
lds
inc
cld
or
sbb
aaa
shlb
jnp
loop
and
jecxz
jnp
aas
bound
push
loopne
jnp
dec
push
cmp
sbb
inc
mov
out
scas
xchg
in
hlt
jnp
into
pop
dec
mov
mov
or
xchg
xor
jl
mov
adc
test
or
jecxz
inc
mov
jge
and
adc
pushf
and
call
insl
jnp
fbld
int
sti
mov
addb
inc
popa
je
outsb
ljmp
xchg
fisttpll
xchg
cld
es
movsl
or
push
add
jnp
inc
cwtl
leave
add
test
icebp
xchg
inc
jno
jnp
shlb
xchg
push
dec
cmp
adc
ret
inc
push
jnp
mov
add
popa
cltd
mov
xlat
jbe
jnp
jmp
js
addb
scas
out
cmp
xchg
xchg
or
test
orl
outsl
jnp
or
in
aaa
pusha
mov
out
test
pop
test
daa
lds
imul
es
jnp
inc
cltd
aad
adc
jno
iret
mov
mov
fdivr
pop
mov
test
mov
movsl
jle
adc
cmpsl
jnp
push
jno
cmp
sbb
clc
lods
scas
ret
popl
pop
jnp
sub
rclb
pop
mov
mov
jnp
stos
pop
js
mov
push
mov
sti
jmp
jnp
je
hlt
int
jle
mov
jge
mov
pop
ljmp
or
mov
scas
xchg
or
iret
popf
push
jnp
stc
outsb
lcall
or
insb
setae
ja
sub
push
push
adc
mov
jnp
outsl
rcrl
cmpsl
out
lea
insb
into
sti
daa
loope
cmp
jnp
xor
jp
lahf
or
sti
pop
lret
fsts
jmp
add
sbb
add
pop
add
cmp
mov
xchg
js
fwait
iret
mov
jno
lds
shll
cltd
jnp
add
aaa
nop
scas
int3
cmp
popf
enter
jnp
cmp
mov
jnp
cmp
inc
and
out
jnp
add
clc
inc
jnp
fs
dec
cmpsl
sub
jno
ss
mov
dec
jnp
push
sahf
daa
and
rcrb
adc
push
add
loope
mov
imul
pop
pop
and
push
jnp
xchg
test
mov
cmc
mov
sub
jnp
and
adc
xchg
shll
outsl
xor
push
jnp
cmpsl
mov
lds
inc
test
pop
test
pop
pop
xchg
pop
dec
and
xchg
call
jo
sti
dec
inc
arpl
fnsave
ret
or
cli
push
roll
pop
jae
jnp
insl
fistl
jnp
fbstp
jnp
cmp
cwtl
pop
adc
and
rcll
or
fdivr
sti
mov
adc
jnp
cmpsb
fbld
and
sti
add
mov
and
test
sahf
icebp
jnp
lods
mov
lods
outsl
xchg
jnp
arpl
jbe
push
leave
add
lcall
gs
push
repnz
mov
mov
out
jnp,pt
jl
cld
dec
jns
inc
jnp
shrb
aad
imull
repz
shlb
jnp
inc
xchg
lds
push
jnp
mov
dec
data16
sub
mov
mov
sti
add
or
pushf
stos
jne
jnp
addr16
cmp
int
out
pusha
and
cli
movsb
ja
xor
addb
adc
daa
pop
sbb
es
cmp
rorl
shlb
popa
jnp
xchg
in
dec
cli
mov
fcmovb
xchg
lods
out
sbb
imul
ret
sbb
arpl
cmp
cmpb
mov
out
sub
ss
mov
push
jno
or
inc
xchg
add
mov
lret
idivl
jnp
movsl
jns
xor
inc
iret
cltd
xchg
pop
mov
and
mov
int3
clc
lods
out
push
or
lock
imul
add
clc
mov
stos
rcll
add
es
cmp
dec
sbb
lcall
or
ja
in
mov
enter
mov
cltd
jge
popf
fcomps
pop
push
dec
bound
call
sbb
mov
and
outsb
jns
sti
lods
jae
pop
jnp
loopne
mov
jnp
push
movzwl
xchg
or
sub
add
in
repnz
out
add
and
scas
push
into
jmp
jnp
add
xchg
enter
jge
push
in
rolb
jl
into
jmp
std
icebp
inc
xchg
fwait
stos
nop
in
ds
lcall
push
jp
popl
ret
rcll
bound
mov
sub
sbb
pusha
mov
outsb
jnp
fdivs
fistpll
int3
mov
leave
xchg
sbb
add
ret
sub
test
jo
jnp
or
arpl
mov
or
mov
cld
sti
dec
dec
mov
and
jg
jno
inc
dec
push
jnp
punpcklbw
outsb
xchg
leave
mov
repz
lds
arpl
xchg
lcall
xor
pushl
jnp
adc
pop
push
cmc
test
sti
push
int
add
mov
popa
mov
fwait
scas
and
inc
ja
inc
jnp
sub
clc
outsl
pop
stos
call
fadds
aam
jnp
out
sbb
push
xchg
mov
push
addr16
jnp
cmp
sub
aam
scas
jnp
popa
cltd
or
push
mov
mov
xor
stos
xchg
fcompl
rolb
sar
call
add
loopne
adc
mov
jb
cmp
lods
xchg
mov
fucomp
cwtl
ja
jnp
rcr
add
das
test
xor
pusha
push
adc
test
fistps
push
adc
adcb
aad
rcll
mov
icebp
das
mov
popf
les
vcvtsi2sdl
and
add
mov
test
loopne
sbb
int3
jo
sahf
jnp
call
imul
fisubrl
jmp
push
addr16
inc
out
inc
push
dec
cmp
mov
sti
movsb
in
in
add
xchg
into
adc
or
mov
fldl
out
das
rorb
test
xor
adc
test
testl
faddl
sub
add
dec
divl
jnp
push
jmp
mov
mov
jnp
xchg
lea
cltd
jnp
jne
add
push
sbb
loopew
push
icebp
jnp
sar
daa
mov
leave
jge
sub
mov
and
loop
dec
push
or
cltd
mov
cwtl
cmp
mov
push
lods
jecxz
sbb
inc
jmp
les
sub
jp
pop
adc
in
arpl
add
xor
test
imul
out
jnp
xchg
pop
enter
in
xchg
cmpsb
mov
sub
arpl
jnp
jne
mov
jbe
movsl
mov
dec
outsl
and
xchg
sub
iret
mov
lock
xchg
jnp
addb
cmp
push
in
xchg
outsl
test
in
cltd
pop
fstpt
incb
sbb
pop
test
jnp
ffree
lcall
scas
xor
andl
mov
mov
pushf
inc
and
lahf
mov
sti
cmpl
push
lret
imul
or
dec
sbb
stos
adc
cmp
clc
pop
xor
push
mov
outsb
dec
jns
fstpt
push
scas
mov
xchg
lret
jno
push
js
pop
out
dec
dec
fidivrs
gs
stc
cmc
roll
jle
sub
cmpsb
test
in
xchg
xor
push
mov
dec
or
lds
xlat
jnp
fcmove
mov
mov
push
mov
inc
jnp
movsb
adc
hlt
insl
idivb
arpl
das
dec
aaa
test
adc
jnp
mov
gs
cltd
aad
enter
jnp
lahf
sbb
mov
add
clc
mov
mov
test
js
push
ljmp
call
enter
and
pop
jnp
push
outsl
lea
mov
lds
mov
or
xchg
adc
add
in
subl
push
aam
xchg
ds
in
test
cmp
out
pop
in
mov
ds
push
sbb
xchg
dec
gs
sbb
jnp
inc
inc
dec
insb
and
mov
or
mov
xchg
jnp
hlt
mov
jmp
cmp
les
cmp
mov
add
packsswb
xchg
out
sahf
and
sub
sub
or
sbb
jns
lods
mov
mov
cld
cmp
or
les
ret
test
fdivrl
sub
outsb
das
and
jnp
fists
add
enter
xor
xlat
or
imul
mov
idivl
aad
es
push
sub
addr16
add
cwtl
xchg
jns
test
mov
xchg
jnp
je
push
imulb
sarb
in
test
outsl
adc
push
jg
or
and
pop
adc
stc
movsb
scas
cmpsb
scas
out
out
into
jnp
jbe
nop
aaa
fiaddl
xor
pop
stos
jbe
jnp
imul
bound
sbb
jo
sti
mov
mov
fidivl
push
imul
mov
adc
pusha
jnp
push
hlt
es
movsl
lcall
out
xchg
fs
mov
ror
cmp
mov
sahf
je
leave
dec
es
fwait
sbb
jnp
cmc
xor
into
lret
mov
jnp
cmp
push
jp
std
test
shlb
push
mov
in
shll
std
adcb
loope
mov
push
sti
jmp
mov
sbb
cmp
mov
mov
add
inc
sub
lods
xor
adc
test
jg
int3
sti
aam
jp
shlb
fldt
jae
iret
adcl
mov
cmpsl
jbe
cwtl
mov
icebp
sti
jge
jge
nop
push
sub
and
cwtl
mov
nop
arpl
cltd
mov
mov
hlt
fcmovne
jne
negl
imul
sti
sbb
sub
out
pop
push
fadds
stos
sbb
xchg
outsb
cmpsl
adc
sbbl
xorb
cmpsl
mov
int
sub
adc
or
mov
jno
iret
hlt
inc
ds
lahf
movsb
outsb
lret
mov
jnp
in
jmp
mov
aas
lcall
test
cs
ret
in
orb
div
cmc
inc
xchg
cmpsb
xchg
jnp
xor
out
les
push
add
stc
addr16
das
out
repnz
pop
cmp
jb
adc
jbe
mov
ljmp
mov
jmp
mov
cmp
adc
sub
jb
into
lcall
adc
sub
xchg
stos
dec
jnp
fidivrs
leave
and
imul
pop
lcall
int3
add
mov
or
test
adcb
or
mov
nop
jnp
mov
dec
jnp
and
push
imul
jl
mov
adc
sub
cmp
imul
pop
nop
shl
scas
pop
rclb
cmp
add
dec
mov
push
inc
out
fcmovnb
jb
fdivrs
test
add
cmpsl
push
xor
or
ljmp
xchg
popf
cs
add
test
xchg
jecxz
cmpsb
pop
jnp
hlt
adc
add
jnp
int3
repz
dec
and
pop
clc
hlt
cwtl
cltd
pop
xchg
xor
popa
cmpsl
test
outsb
ficoml
scas
test
movsb
iret
cli
xor
sub
iret
stc
mov
out
pusha
aam
insl
jle
cld
cmpsb
cmp
loope
ja
mov
lret
and
and
or
cmp
iret
repz
adc
imul
bound
and
rorb
ret
mov
mov
cltd
xor
pop
stos
lods
fwait
cltd
mov
jl
mov
sbb
sbb
mov
jnp
adcl
jnp
sub
cltd
addr16
jnp
push
add
push
shll
mov
iret
mov
jnp
cmpsl
xchg
and
and
mov
test
aam
xchg
mov
filds
jnp
in
sti
sbb
jnp,pn
xchg
dec
adc
lret
dec
mov
and
xchg
jnp
stos
cmp
jnp
xlat
divb
cltd
in
mov
cwtl
leave
jb
pop
test
jnp
or
divl
push
lret
call
out
shrl
jnp
sarb
add
pop
arpl
imul
rcrb
push
repnz
pop
in
push
pop
rorb
push
sbbb
arpl
aaa
and
shl
push
cmpsl
cmc
decl
mov
movsl
or
pop
out
xchg
pushf
push
cmp
or
out
mov
fcomi
jnp
ret
mov
inc
cld
inc
adc
fwait
jecxz
and
test
adc
or
add
loop
ret
pop
adc
arpl
jl
test
rcll
lcall
movsb
sub
mov
dec
in
shl
mov
cmpsl
scas
stos
test
iret
lcall
or
gs
dec
jnp
arpl
push
jnp
mov
sub
cwtl
ds
dec
rcrl
lock
push
test
loop
mov
loope
mov
push
movsb
lods
xchg
or
sarl
ja
mov
or
sarb
aam
arpl
xchg
mov
repz
fidivrs
pop
jno
into
jnp
shll
xor
and
es
adc
adc
std
jnp
ds
out
mov
stos
and
jp
xchg
sbb
insl
or
enter
int
mov
xchg
mov
fstl
mov
mov
cmp
mov
cld
mov
sarb
jnp,pn
ret
les
sahf
mov
sbb
insb
cmp
push
jnp
and
lcall
ret
fs
cwtl
sbb
fadd
iret
iret
in
and
filds
fisubrs
pop
mov
xorl
repnz
jne
cli
mov
adc
shl
mov
cmp
mov
xor
ret
or
lcall
pop
in
cmpb
sub
cmp
jmp
bound
cwtl
adc
mov
jne
inc
and
mov
xchg
aam
or
or
stc
arpl
out
mov
dec
xchg
cmpsl
xor
icebp
inc
cmp
stos
push
int3
movsb
lret
fcomi
repnz
cltd
dec
cmpsb
xor
mov
lods
dec
mov
cmp
push
stos
outsb
or
jno
test
fwait
test
xchg
inc
fnstenv
jns
cmp
sub
lock
adc
push
mov
lock
cmpsl
jnp
test
mov
jge
and
addr16
pop
aas
add
pop
cmpsl
sub
dec
stos
loope
xchg
test
push
scas
roll
xlat
lods
inc
icebp
and
loope
fldcw
add
arpl
add
and
sub
mov
jge
movsb
outsb
inc
dec
fildl
cmp
or
out
mov
jecxz
xchg
mov
fidivrs
mov
xchg
mov
pusha
sbb
and
cmpsl
pop
jnp
xchg
daa
dec
outsb
aas
mov
loop
xchg
lods
dec
jmp
inc
inc
xchg
out
push
mov
jnp
sub
into
xchg
push
in
es
adc
int3
pop
jns
xchg
mov
dec
xchg
loopne
pop
xor
sub
and
test
jnp
shl
or
dec
jle
mov
aas
sub
ja
sti
sbb
jnp
sbb
nop
ss
incb
inc
inc
mov
mov
xchg
jb
sti
imul
xor
js
ret
pop
rcr
sti
jg
movsl
or
inc
adc
push
mov
pushf
daa
xchg
call
sub
lods
xchg
push
push
jno
jnp
push
jne
lcall
imul
nop
mov
or
add
rorl
stc
lds
jnp
sar
push
pop
sbb
imull
pop
mov
jnp
popa
add
or
repz
inc
push
mov
fwait
push
push
repnz
mov
clc
in
ss
xor
stos
mov
andl
jne
lea
rclb
cltd
mov
sub
int
fistpl
addr16
sub
sbb
bound
sbb
mov
mov
aad
test
mov
and
and
in
or
adc
mov
or
pop
lcall
das
roll
test
adc
or
inc
jecxz
adc
mov
mov
cwtl
rcrl
jnp
push
add
call
cmpsl
sbb
jnp
xchg
jl
adc
push
mov
ds
or
sub
push
jecxz
fs
ret
mov
or
js
mov
inc
jnp
inc
ja
pop
pop
sub
mov
cli
aam
jnp
aas
call
dec
xchg
xchg
sahf
jnp
lock
xchg
cmpb
sti
add
adc
movsb
xchg
enter
lea
and
test
mov
sub
mov
cmp
outsb
outsb
aaa
mov
jl
sti
mov
rorl
sbb
push
stos
xchg
jno
cmp
dec
xor
and
pop
iret
hlt
jg
jae
jnp
andl
pop
stos
jnp
xor
adc
jmp
loopne
mov
push
rolb
repnz
addl
dec
adc
leave
pop
jbe
sarl
sti
in
aad
pop
fnstcw
daa
mov
xor
adc
mov
pop
int
jnp
jae
lret
les
stos
lods
jnp
loopne
jne
pop
orl
mov
xor
repnz
hlt
push
xor
and
sarb
sbb
repz
mov
push
enter
mov
sti
jbe
test
inc
mov
aad
push
imul
in
jnp
xor
and
test
lea
leave
popf
imul
loop
jnp
xor
lahf
xchg
sbb
daa
jnp
cmc
push
mulb
or
dec
cmp
jae
and
cmpsb
mov
jmp
fwait
aad
and
sti
xor
xchg
fsubp
test
fwait
xchg
jnp
jae
push
sbb
in
mov
xlat
test
adc
jnp
cli
nop
popf
mov
push
aas
mov
testl
or
jnp
pop
cmp
gs
push
pop
and
xchg
jno
nop
lahf
or
insl
cmp
or
sbb
test
lcall
add
in
jle
popa
cmp
and
notb
ret
jo
push
sub
and
push
and
jecxz
lret
push
enter
lea
and
andb
mov
mov
pop
sti
notb
cli
mov
push
xor
cltd
faddp
xor
in
and
cmpsb
sahf
dec
xlat
ja
xchg
cltd
into
mov
add
jnp
cmp
shlb
mov
sti
jnp
cmpsl
xchg
or
lods
mov
dec
fwait
pop
xor
xchg
pop
jnp
gs
mov
scas
and
cmpsb
mov
data16
pop
daa
popf
outsl
mov
jecxz
inc
jbe
cmpsb
xchg
jnp
cmpsl
repz
add
mov
xor
jle
cwtl
jg
or
inc
or
mov
or
mov
cwtl
negb
lock
enter
mov
les
sbb
leave
sub
cvtps2pi
pusha
rolb
repz
add
jnp
xor
sarb
movsl
mov
inc
xchg
subl
xchg
pop
roll
lea
jmp
ret
test
mov
aad
mov
movsb
dec
adc
dec
test
mov
stos
fidivrl
cs
hlt
mov
add
mov
test
pop
pop
adc
mov
jne
lea
imul
or
pop
and
push
sti
or
mov
fstpt
cli
add
or
mov
stos
dec
cltd
mov
push
movsl
fstps
adc
lds
daa
test
add
sbb
jle
das
cmp
imul
in
mov
xchg
adc
sbb
xchg
jnp
ja
enter
test
inc
push
or
insl
repz
icebp
test
pop
xor
jnp
dec
mov
test
sti
fildl
or
add
add
jnp
pushf
lds
jnp
and
pop
inc
sub
imul
mov
leave
add
loope
bndstx
jno
or
dec
sub
aas
dec
shrb
rolb
jmp
stos
mov
xor
in
adc
push
or
iret
lahf
mov
pop
inc
lds
mov
adc
jge
sti
jl
mov
pop
out
mov
jnp
cmpsl
fcmovnu
or
insl
xchg
and
fwait
lods
arpl
xchg
and
fcomi
inc
jbe
fistps
mov
mov
test
sti
mov
or
jmp
add
imul
adc
inc
push
or
push
jns
mov
dec
push
sub
lret
test
das
xchg
inc
xchg
push
jmp
jnp
mov
testb
int
mov
sti
xor
xchg
rol
pop
adc
xchg
ja
js
nop
sub
push
lcall
dec
clc
mov
mov
sti
test
lcall
fcompl
and
jne
xor
cs
les
int3
pop
movsb
addr16
mov
jnp
jns
stos
das
icebp
test
jnp
pusha
decb
shl
repz
add
or
mov
fnstsw
jnp
cmpsl
push
jmp
rcrl
mov
notb
aam
test
pop
push
cmp
sbb
mov
xchg
sbbl
or
or
jo
mov
sub
and
jmp
jnp
push
adc
pusha
cmp
push
jnp
inc
xor
xchg
sbb
pop
add
pop
jnp
inc
popf
jo
cmpsl
bound
inc
adc
test
add
pop
lret
imul
dec
cwtl
addr16
inc
mov
ret
mov
mov
dec
rol
xor
mov
iret
cmpb
cld
mov
mov
fidivl
jno
push
adc
xchg
jnp
cmpsb
stos
fnstenv
jl
mov
mov
dec
sti
pop
mov
mov
cmp
cmp
mov
cmp
mov
mov
xchg
cmc
cmp
jnp
andb
xor
jnp
shl
push
jnp
lds
adc
ret
jnp
mov
push
out
adc
mov
sbb
pop
gs
outsl
xchg
cmp
mov
mov
jp
mov
xchg
or
xchg
and
mov
jl
xlat
cld
test
cmpsb
test
inc
mov
es
fst
pop
insl
fwait
push
or
add
daa
sbb
sti
in
push
repz
ss
iret
cli
jnp
mov
jecxz
hlt
pop
jae
stos
in
nop
iret
mov
lret
test
xchg
jae
lea
repz
jns
ljmp
in
pop
cmp
mov
mov
test
dec
xchg
fadds
jnp
fstl
es
cli
sub
xchg
xchg
repnz
mov
mulb
loope
ficomps
lret
ljmp
adc
shrl
iret
outsb
outsl
cmpsb
hlt
jnp
sbb
and
enter
outsl
mov
jne
sbb
fnstsw
adc
mov
xor
pop
jnp
xchg
inc
sti
cmpsl
dec
mov
fsubrs
mov
addb
mov
cmp
xchg
mov
dec
dec
mov
fwait
test
inc
adc
and
mov
jnp
dec
nop
mov
adc
mov
call
push
mov
sbb
push
jg
or
jnp
sub
outsl
rolb
jnp
cwtl
inc
jo
mov
xor
std
sbb
xchg
dec
lods
addr16
sub
inc
dec
add
test
add
ds
fsubl
jecxz
mov
inc
pusha
ss
cmp
enter
imul
sbb
xchg
lret
punpckldq
mov
jbe
push
inc
jno
nop
xchg
mov
jnp
fcmovnu
icebp
xor
jle
inc
or
call
xor
repz
push
jns
inc
push
pop
fisttpl
adc
jnp
inc
sbb
das
test
jnp
push
cmp
jns
xchg
test
inc
je
rcrb
sti
add
pop
outsl
fisubrl
lcall
pop
pop
lret
fisubrs
jnp
jge
popf
mov
or
pop
sub
test
clc
fld
ss
adc
sbb
jae
xchg
outsb
aam
xor
pop
pop
lea
ja
mov
jno
adc
jle
jmp
lods
testl
shlb
lock
inc
add
xor
and
adc
enter
mov
std
in
andl
jecxz
jno
and
jnp
aaa
das
in
add
ficoms
test
sti
mov
sub
sbb
stos
jo
hlt
rcrb
xchg
test
and
repz
mov
jge
in
cmp
outsb
jl
adc
test
bnd
popf
cmp
add
cmp
pop
pushf
pop
fistpll
push
sbb
je
xchg
jnp
testl
push
nop
fidivrl
or
push
rcll
cmp
xlat
mov
cmpsb
cmp
pop
mov
ret
cmc
jnp
cli
aam
jmp
push
and
adc
dec
dec
jmp
jnp
mov
dec
xorl
jge
cmp
pushl
fisttpll
cli
add
or
jmp
push
ret
jo
mov
pop
jae
push
lds
sub
jnp
fidivl
pop
mov
adc
popf
loope
jl
and
mov
add
pop
jnp
push
add
pusha
je
sbb
add
scas
sub
mov
sahf
insb
xor
in
mov
addl
jle
mov
es
aam
jne
popf
xlat
push
mov
inc
sbb
andl
add
sbb
sar
subb
loop
xchg
mov
scas
insb
add
jnp
sbb
mov
inc
sti
aaa
rcrb
pushf
push
push
test
test
ss
pop
push
test
cmp
mull
inc
add
mov
cmp
bound
cmp
cwtl
lcall
mov
dec
int
lret
jnp
push
aas
pop
stc
inc
inc
dec
adc
mov
cli
xor
pop
dec
mov
aas
adc
push
push
and
cwtl
cmc
test
call
aas
sub
lcall
ret
cld
aad
push
jle
in
das
cmpb
jb
loop
or
insl
jnp
into
or
ret
adc
cmp
cmp
push
jns
jnp
dec
and
mov
setbe
jns
mov
jno
mov
movb
lahf
outsb
ffreep
jnp
push
jnp
mov
xchg
jb
nop
mov
pop
sahf
test
ret
xor
or
pop
orb
mov
mov
jecxz
das
jnp
pop
test
aas
or
jnp
in
gs
sub
popf
hlt
std
and
int3
mov
push
movsl
movsb
pop
test
pop
jl
dec
scas
mov
es
sti
adc
fadds
movsb
mov
pop
fistpl
jnp
adc
inc
sbb
aaa
dec
in
int
aad
sub
or
mov
xchg
dec
jns
sub
jb
int
xor
rcr
mov
pop
aad
jb
xchg
mov
dec
arpl
xor
test
pop
xor
enter
xlat
out
mov
sbb
add
mov
cmp
fcoms
pop
jne
push
cmp
add
fistpl
xor
in
mov
data16
sbb
sarl
add
pusha
mov
aad
lret
and
ret
pop
push
adc
dec
lret
sub
push
xchg
mov
xchg
jmp
jnp
loopne
sbb
stos
add
ret
push
jg
lods
mov
mov
jnp
test
aaa
icebp
mov
xchg
pop
mov
dec
mov
int3
sub
rolb
cmp
jnp
and
sub
jnp
inc
pop
jecxz
lahf
cmpb
roll
lock
adcb
aaa
jecxz
dec
pop
mov
pop
jae
jb
movb
or
mov
jnp
jp
mov
clc
jnp
test
int
mov
fistpll
adc
sbbl
dec
add
pop
mov
jmp
mov
ret
push
xor
lcall
or
in
test
in
pop
clc
cld
jnp
or
jmp
test
lds
ja
adc
imul
mov
mov
and
jne,pt
cmp
fbld
or
jp
jnp
adc
ja
or
lret
lcall
jnp
dec
mov
jmp
fmulp
jns
dec
lea
mov
xchg
mov
in
xchg
mov
daa
sub
adc
mov
or
jnp
sbb
adc
push
imul
jnp
pusha
mov
mov
cmp
test
adc
cmc
mov
jmp
movsb
jg
nop
aaa
sub
mov
ficomps
aad
in
jnp
stos
int3
cmc
in
cmp
jnp
add
jne
inc
adc
into
mov
sub
cld
push
push
outsl
dec
jecxz
cli
sti
pop
rcl
sbb
jge,pt
mov
and
inc
jnp
mov
icebp
pop
jp
mov
dec
std
xor
pusha
inc
dec
pop
outsl
inc
or
xor
and
mov
mov
fistpll
cmp
mov
push
mov
lods
nop
clc
fadds
shl
jecxz
fstps
xchg
inc
mov
insb
fwait
adc
pop
mov
mov
gs
pop
xor
or
inc
push
or
xor
scas
sbb
fwait
jp
lods
jle
cmp
cs
lahf
or
ret
ret
pop
cli
jnp
sub
mov
imul
jb
mov
cs
sub
cmp
arpl
hlt
sbb
js
jnp
scas
fcomps
mov
lret
inc
mov
xchg
xchg
rclb
pop
jbe
mov
dec
mov
fstl
adc
pop
mov
out
inc
or
pusha
jae
int3
xor
jle
test
add
fcomp
jnp
mov
addr16
repnz
jnp
sbb
repz
mov
adc
add
shrl
adc
sbbl
outsl
aaa
sbb
mov
jnp
shl
cmp
push
fwait
jl
dec
inc
cli
xchg
fildll
adcb
sti
jo
jns
and
pop
out
adc
icebp
lods
add
test
sbb
add
js
push
mov
jnp
test
icebp
popf
add
adc
inc
fnstsw
inc
mov
pop
cmc
jnp
sub
jnp
movsb
push
aaa
dec
pop
adc
xchg
xor
push
rcrl
inc
es
or
cld
jo
stos
movsl
leave
lods
or
cmp
mov
lcall
mov
dec
pop
push
add
mov
jno
mov
mov
inc
jnp
pop
je
insb
mov
adc
jnp
mov
mov
and
les
data16
mov
xchg
inc
pushf
and
inc
iret
inc
and
or
and
out
jnp
adc
pop
jmp
sub
mov
lret
dec
jns
or
mov
jno
jnp
cmp
loop
jmp
rcl
sarl
inc
xor
xchg
or
mov
cmpb
es
jne
push
gs
cltd
adc
repz
push
loopne
enter
jnp
stos
scas
insl
pop
in
mov
push
xor
test
or
outsl
je
mov
and
ret
ds
mov
repnz
dec
cmp
cmp
fdivrl
cmp
mov
push
imul
shrb
fs
sbb
mov
adc
xchg
daa
ret
and
negl
aas
add
movsl
rcr
jp
push
sbb
arpl
dec
xchg
repnz
nop
ja
std
pop
jns
pop
push
cmp
leave
fcompl
jno
sbb
aaa
sbb
cli
xchg
mov
rorl
sub
jnp
inc
mov
mov
push
jnp
das
dec
cmc
in
adc
and
jl
std
fcmove
fistps
test
shlb
inc
pop
hlt
std
stos
sarb
cmp
js
ja
sub
repz
xor
inc
push
dec
xchg
jnp
mov
in
sti
daa
into
mov
mov
push
ret
mov
ret
fldt
xchg
mov
mov
xchg
test
inc
xchg
sub
sbb
lds
nop
push
sbb
shlb
mulb
mov
sub
cmpsb
xlat
push
pop
pop
cmp
fstl
cwtl
imul
cmp
jnp
das
scas
xchg
or
mov
jnp
xlat
jb
mov
data16
mov
clc
inc
or
out
sub
lds
sbb
and
stc
lret
jnp
cmc
push
pop
imul
jbe
dec
jnp
mov
sub
hlt
and
jmp
subb
and
sbb
iret
jnp
push
dec
xor
mov
xor
sarl
jecxz
xchg
mov
cmp
push
jge
lea
jnp
es
pop
add
leave
adc
mov
aas
mov
push
push
mov
push
in
dec
cmp
jle
cmpsl
mov
sub
xor
jnp
lea
jge
inc
sbb
pusha
lret
insb
dec
cmp
rcll
aam
jnp
adc
push
fwait
hlt
icebp
jnp
imul
lds
ljmp
sub
mov
adc
int
fidivs
adc
jge
jno
aam
mov
repnz
jnp
cmp
fmuls
xchg
js
xchg
add
into
pop
mov
sbb
scas
sub
loopne
push
sar
mov
cmp
xor
jnp
decb
fists
cmp
enter
outsb
rorb
ret
fdivs
jne
fbld
nop
or
mov
enter
mov
or
jne
mov
lret
std
jmp
adc
sbb
push
jmp
outsb
mov
jnp
jecxz
mov
stos
xlat
add
insl
aad
aaa
lahf
xchg
adc
in
stos
out
scas
jnp
mov
test
aad
inc
cmp
mov
push
jg
jnp
add
popa
push
push
sub
stos
sbb
sub
outsb
jnp
neg
cmp
xchg
stos
cmp
enter
mov
pushf
fsts
outsl
aaa
jnp
cmpsl
rcrb
xorb
stos
loopne
sbb
xor
outsl
inc
xchg
into
rcr
mov
inc
pop
adc
mov
test
jmp
popa
jbe
jnp
inc
testl
test
fwait
ud1
and
sti
adc
outsb
cmp
adc
jb
mov
incb
hlt
sub
mov
loopne
or
push
std
mov
adcb
jns
inc
scas
imul
or
jae
gs
mov
jno
ror
movsb
sub
faddl
push
push
jnp
stos
addr16
mov
inc
xchg
adc
and
icebp
mov
mov
aad
lret
push
pushf
insl
std
mov
lds
push
mov
test
imul
loope
int
clc
shlb
and
xchg
sbb
mov
jno
jnp
enter
test
cmp
jae
mov
mov
jne
pop
inc
jo
cmpsl
jbe
mov
into
mov
push
das
rclb
xor
or
imul
cmp
mov
ret
dec
adc
jmp
out
jnp
cmp
and
test
insl
pop
jnp
insb
push
dec
sbb
mov
imul
mov
and
cmp
cmp
jnp
pop
jmp
jbe
mov
imul
sbb
mov
xchg
sbb
cltd
mov
pushf
gs
or
dec
sti
cmc
adc
repz
stc
push
cli
rcrl
mov
push
cmp
dec
adc
cmc
je
jnp
inc
dec
arpl
aam
inc
orl
clc
cmp
sbb
jle
and
fildl
int3
pusha
jns
cmp
inc
jg
xchg
push
flds
scas
sbb
adc
out
lret
repnz
es
inc
dec
dec
xchg
push
mov
push
adc
fldenv
jmp
jbe
inc
insb
inc
fists
lahf
fstl
out
mov
sub
adc
orb
sub
mov
aad
and
gs
cmp
jnp
js
xchg
out
fimull
aas
test
test
nop
xor
push
sbb
pop
pop
xor
push
jg
jbe
cmp
push
arpl
mov
sbb
push
fisttpl
push
ds
orb
imul
rcll
mov
fwait
mov
into
mov
stc
enter
add
mov
in
jecxz
mov
outsl
push
add
mov
adc
stos
mov
js
mov
add
sbbb
adc
mov
scas
inc
ss
add
pop
sbb
arpl
roll
mov
ja
or
mov
fcoms
dec
push
jnp
call
outsb
cmpsb
mov
mov
lods
jl
push
inc
jnp
cwtl
inc
mov
hlt
cld
jnp
xor
jg
jno
adc
push
jnp
imul
iret
or
mov
inc
fidivs
hlt
dec
lods
jne
jnp
mov
or
jnp
pushf
jge
into
das
lahf
mov
nop
fstps
mov
push
rolb
sbb
mov
jnp
xor
outsl
gs
cmpsb
pop
pop
jge
sbb
adc
lret
mov
cmp
fiaddl
sti
int3
push
mov
push
frstor
rorl
insb
dec
adc
imull
fcoms
pop
mov
mov
jl
rorb
mov
dec
mov
jno
inc
push
cmc
adc
rolb
or
gs
mov
jnp
push
or
fs
and
mov
and
stos
add
imul
fidivrl
cmp
xlat
push
xchg
lods
adc
lods
mov
fdivs
icebp
and
adc
fsub
and
mov
jnp
into
icebp
pushf
add
mov
jb
pop
adc
sarl
fnsetpm(287
out
sbb
sub
cmp
ficompl
imul
xchg
sub
aaa
mov
stos
jnp
fsubl
das
pushf
jecxz
popa
mov
testb
mov
pop
orl
out
fwait
xchg
iret
adc
dec
or
ss
jnp
pop
jge
inc
les
mov
xchg
cmp
cld
add
jnp
and
xlat
push
sbb
adc
and
popa
mov
pop
fistpl
mov
ds
jbe
sti
and
stos
jnp
push
xchg
cltd
mov
dec
aad
je
add
in
jnp
iret
out
xor
pop
inc
xor
jnp
mov
jb
or
test
jp
jnp
jmp
push
xchg
mov
mov
adc
jnp
sti
mov
jnp
dec
lds
cmpsb
pushf
xor
cmp
mov
add
loop
pop
jnp,pt
dec
cwtl
push
dec
pop
outsl
and
or
shl
test
add
es
pop
sahf
jmp
mov
aad
jb
mov
or
mov
cmp
insl
sub
add
into
jl
fisubrs
inc
pop
repz
loopne
or
scas
add
cmpsb
ja
std
repnz
orl
nop
push
mov
xchg
and
sarb
mov
outsb
ret
rclb
popf
xor
inc
aad
lret
mov
pop
rol
ret
shl
movsl
jnp
mov
inc
push
mov
test
stos
lods
push
ret
out
pushf
adc
insl
mov
insb
mov
jecxz
mov
repz
aaa
mov
rcl
add
jns
dec
jle
adc
jnp
clc
ds
jnp
push
mov
ljmp
cld
rcll
xor
xlat
adc
mov
fdivr
test
or
das
rep
jne
fisttpl
inc
arpl
mov
test
shll
fwait
jnp
push
adc
div
mov
push
mov
jnp
pop
fists
jnp
sbb
add
jae
andl
fbstp
jnp
inc
pop
sub
or
test
jns
inc
add
sarl
addr16
mov
pop
push
pop
jb
xchg
sbb
lods
stos
xchg
push
mov
std
in
mov
xchg
ret
mov
sub
aam
push
xor
out
andb
cmp
mov
loopne
ficompl
ret
in
jnp
mov
in
sbb
cmp
xlat
jae
pop
inc
arpl
pushf
xchg
jge
sti
outsl
xchg
mov
cwtl
stos
jnp
adc
mov
adc
addl
movntq
sbb
push
and
cmp
cmp
sub
loope
add
popf
div
test
mov
rorb
mov
sarl
xchg
mov
jnp
in
push
movsl
popa
or
pop
jnp
push
pop
pop
fistpl
sti
push
test
test
and
ret
fstpt
jge
and
xchg
mov
mov
pop
cmp
dec
lahf
in
jo
shrb
jnp
inc
mull
adc
dec
xchg
inc
mov
mov
mov
mov
push
sub
in
nop
cmpsl
pop
mov
and
inc
cmpl
xorb
negb
lcall
push
shr
dec
hlt
cld
sahf
jnp
into
cwtl
cmp
jo
cmp
pop
xchg
mov
xchg
out
jne
mov
fwait
push
dec
cmp
mov
jnp
mov
dec
test
sahf
add
cmp
xor
xchg
sti
jae
jnp
xor
shl
daa
pop
jnp
pop
jecxz
iret
sub
cmp
xor
sarb
sub
imul
jnp
mov
jnp
out
xchg
jno
sahf
enter
xchg
add
inc
jmp
sub
mov
xchg
cmp
and
xor
cwtl
mov
or
pop
pop
push
hlt
pop
fnstcw
pop
jg
leave
aam
mov
je
imul
push
test
vpmacsdql
ret
cld
outsb
dec
and
cmp
and
or
lret
mov
lret
lds
xor
cmpsl
cmp
dec
cld
or
pop
idivb
xchg
enter
add
lret
push
sbb
into
cmpsl
sub
jnp
movb
mov
jnp
sbb
leave
lds
insl
xchg
mov
push
mov
mov
jnp
xchg
daa
cwtl
add
loopne
lock
push
jle
xchg
hlt
stc
push
push
out
sub
jnp
add
scas
ret
mov
cmp
xchg
pop
addr16
adc
loop
xchg
dec
sti
cmp
movsl
jb
fildl
add
int3
or
add
mov
aaa
jnp
loopne
or
sbb
xchg
insb
into
dec
xchg
jnp
stc
xor
jnp
pushf
fisubs
negl
adc
mov
push
test
loope
inc
ljmp
adcl
jnp
xor
lock
cmc
jnp
inc
je
ds
pop
aad
fnstcw
mov
dec
pop
pop
lahf
test
jge
das
fwait
outsl
push
inc
mov
cmp
jnp
out
pushf
in
jo
daa
xchg
frstor
aam
mov
outsb
push
fisttpl
insb
jmp
xchg
shrb
pop
mov
jl
pop
cwtl
mov
ds
outsl
jge
add
popa
cld
jp
test
mov
mov
clc
cmp
mov
addb
mov
int3
push
imul
mov
mov
xchg
push
adc
sahf
cmp
cs
xor
cmp
cmp
jnp
lods
movsb
pop
pop
adc
cmp
icebp
idivb
lret
pushf
add
jnp
insl
sbbb
add
ljmp
das
leave
cmp
xlat
jnp
mov
xchg
scas
inc
mov
stos
js
jae
inc
jns
dec
jnp
popf
leave
cmp
dec
scas
test
imul
xor
std
mov
adc
popa
mov
mov
fisttpll
call
push
fidivl
cld
mov
enter
nop
fwait
inc
rol
fisttpl
and
roll
cmc
scas
jecxz
pop
jo
sahf
aad
xchg
fistl
int3
scas
mov
jecxz
ss
add
jnp
les
movsb
stc
inc
lret
jnp
sbb
fbstp
orl
jnp
jp
mov
outsl
jecxz
sub
jnp
into
adc
shrb
daa
inc
lret
add
cmp
stc
add
pop
sub
inc
pop
or
sahf
xchg
test
mov
or
jge
adc
test
out
lea
cwtl
and
xor
mov
or
xchg
ficomps
sarb
jnp
sub
lahf
jb
jmp
mov
push
cmpsl
mov
cmp
test
adc
push
push
scas
es
fs
mov
hlt
iret
test
jae
lock
enter
mov
add
cmp
jno
stc
in
test
imul
and
add
jb
mov
inc
pushf
or
sti
push
or
mov
int
push
jne
sbb
inc
movsl
sti
xchg
arpl
pop
inc
inc
aaa
stos
adc
and
fsubrl
xchg
test
jl
movsb
inc
mov
out
sbb
pop
xlat
mov
addr16
push
mov
imul
nop
and
mov
add
or
xchg
inc
mov
pop
mov
call
pop
lahf
imul
jnp
xor
push
mov
add
pop
push
xchg
jnp
mov
jecxz
xchg
dec
out
jnp
xchg
cwtl
sbb
xor
lahf
inc
out
or
sar
jne
jnp
ret
fidivrl
icebp
call
jnp
rclb
xchg
inc
imul
mov
sahf
push
fwait
push
adc
sti
lcall
ds
shrl
mov
mov
icebp
into
xchg
mov
sti
adc
scas
jnp
mov
enter
push
sbb
jnp
and
mov
mov
jnp
inc
outsl
cmpb
pop
incl
in
jnp
call
imul
mov
pop
js
repz
jnp
cmp
or
mov
cmc
jnp
or
mov
shrl
movswl
or
movsl
out
push
pop
mov
test
in
push
mov
mov
das
cs
add
adc
loop
xchg
dec
mov
dec
sub
jae
dec
jnp
push
stc
or
jnp
jge
shll
pop
gs
cmp
aas
jnp
add
dec
dec
nop
mov
loope
sub
imul
pop
dec
add
insb
add
mov
mov
jb
pop
popl
add
mov
lret
jnp
shlb
mov
mov
outsb
in
enter
cmc
lods
adc
sub
mov
add
test
jecxz
inc
sbb
or
fstl
das
cmp
sbb
mov
les
jnp
cltd
add
mov
test
sbb
push
push
jnp
mov
inc
ds
or
mov
icebp
and
imul
popa
insl
das
cmp
cmp
or
inc
sti
xlat
wrmsr
adcb
icebp
jge
or
lret
movsb
dec
scas
jnp
hlt
stc
mov
jae
sub
mov
or
test
xchg
pushf
ja
xchg
mov
cmp
add
int3
jnp
or
dec
adc
enter
cld
mov
iret
mov
mov
pushf
aaa
insl
out
inc
push
xor
xchg
sbb
in
orb
fmuls
ds
sbbl
push
mov
add
test
xor
inc
or
lods
inc
push
fwait
pop
jae
xor
xchg
lahf
sbb
jecxz
pop
ja
jp
adc
dec
xlat
xchg
pop
mov
mov
or
rdtsc
mov
sub
cwtl
add
pop
fisttps
jnp
outsl
arpl
jecxz
stos
aaa
mov
sbb
mov
jns
outsl
jnp
and
loop
add
xchg
fimull
mov
xor
xchg
jnp
mov
lods
sub
in
jns
xchg
pop
fisubs
xchg
push
arpl
mov
inc
jnp
cmp
dec
jnp
in
xchg
cmp
fimuls
cltd
dec
cwtl
inc
jnp
xchg
sub
test
int3
in
adc
lret
cwtl
jnp
sub
scas
pushf
int3
mov
ficoml
jmp
jnp
add
push
jnp
cld
cmp
into
dec
jge
arpl
xchg
mov
icebp
scas
jl
outsl
and
aad
mov
sbb
roll
flds
sub
subb
js
inc
add
xor
les
push
enter
add
popf
lahf
xor
test
test
mov
xchg
inc
adc
cltd
icebp
dec
add
fwait
loop
inc
imul
testl
mov
and
cli
pop
jb
lea
xchg
ret
ljmp
xchg
mov
sbb
jno
xor
push
into
pop
jecxz
out
cmp
out
in
mov
pop
aam
subl
jnp
or
adc
dec
jnp
loop
insl
aas
cltd
je
jnp
push
dec
daa
and
movb
inc
jnp
cmp
in
mov
jnp
movsl
sarl
jnp
sub
loop
sbb
pop
xor
insl
jnp
fsubs
es
cmp
test
and
cmp
stos
fs
jnp
adc
mov
jnp
loope
push
mov
stos
test
outsl
or
int3
out
dec
mov
nop
jb
xor
outsb
imul
inc
lcall
mov
mov
pop
fcompl
jnp
mov
ror
dec
and
jno
into
iret
pushf
aaa
mov
cwtl
jnp
xor
pop
jnp
or
mov
add
mov
enter
xor
inc
pop
nop
sti
in
stc
push
or
and
adc
cld
mov
aad
ss
dec
cli
mov
sub
adc
xor
xchg
or
sar
in
push
addb
dec
sti
sbb
add
xchg
in
sbb
cmp
fnstsw
mov
adc
hlt
cmp
or
in
jae
sbb
mov
clc
hlt
loopne
and
das
mov
xchg
mov
jmp
pushf
lods
mov
stc
add
mov
dec
scas
aad
jecxz
cli
int3
jnp
mov
add
jae
jnp
pop
xchg
add
and
repz
mulb
push
jnp
and
out
xchg
sti
push
pop
test
fistps
cmp
ja
dec
test
mov
in
loopne
test
mov
pop
push
dec
mov
mov
ss
jae
mov
dec
fldcw
adc
sti
xchg
daa
pop
xor
mov
stc
ds
ficompl
arpl
push
es
sbb
aad
mov
popf
fisttpl
lea
jecxz
push
enter
popa
out
repnz
mov
adc
lea
clc
out
lods
pop
test
push
hlt
mov
cmp
cmp
fmul
mov
out
pop
or
cmc
add
xchg
dec
xchg
adc
pop
jnp
andl
addl
jnp
popf
and
xchg
aad
jnp
iret
hlt
fsubs
add
xor
sti
mov
lods
cs
and
sbb
sar
outsl
jnp
aaa
iret
adc
or
cmp
mov
jle
sarb
and
aad
fnstsw
cwtl
cmpsl
out
pop
lcall
and
jnp
out
push
sub
pusha
jb
test
pop
add
inc
add
jnp
mov
lock
jl
aaa
orb
fisttpll
data16
jnp
push
pop
xchg
fsubrs
jnp
mov
data16
jnp
or
push
mov
mov
add
scas
cwtl
rcrl
xchg
shrl
fwait
adcb
add
jnp
aaa
pusha
jne
fisttpll
adc
jnp
test
enter
js
push
ret
xor
neg
andl
xchg
movsl
insl
xchg
sarb
test
enter
push
out
fcmovnbe
push
incb
fimuls
cli
popa
jnp
xchg
pop
test
mov
xor
jnp
popf
inc
pop
cmp
xchg
inc
cld
in
mov
fcmovne
or
push
push
orb
mov
push
mov
rol
lcall
jmp
xchg
mov
stos
mov
cmpsl
dec
jnp
push
xor
imul
ret
add
cmpb
sarl
mov
ret
jle
fldcw
movsl
mov
adc
jmp
dec
cmp
cmpsl
cs
lds
mov
add
in
cltd
cmp
clc
pop
xchg
dec
mov
ficomps
jnp
mov
xchg
mov
inc
movsl
gs
jnp
mov
mulb
cmp
xchg
andb
jle
push
dec
jnp
fimuls
inc
cwtl
imul
les
test
movsb
mov
jnp
push
shrl
sub
jne
xchg
mov
xor
arpl
jnp
jns
sub
push
jmp
xchg
inc
inc
ficompl
and
es
fldl
rcrb
es
fwait
sarb
dec
rcrb
inc
dec
pop
push
in
jmp
xchg
test
or
cld
push
jg
cli
out
mov
arpl
sbb
xor
cmp
icebp
lret
pop
sbb
imul
mov
iret
pop
js
add
cltd
test
xchg
mov
shll
pop
jnp
jecxz
mov
repnz
int
outsb
stos
dec
jnp
jns
jbe
js
or
in
scas
aam
mov
xor
sbb
lods
adc
xor
out
jnp
pop
scas
xchg
cld
aam
xchg
jae
xchg
cmp
pop
xor
xchg
leave
fsubr
adc
mov
cli
repz
dec
mov
in
fsubr
in
arpl
sbb
repz
xor
push
or
pop
ja
mov
sbb
jnp
les
outsl
and
sbb
sahf
xchg
jo
adc
jnp
shlb
cmpb
adc
jp
test
mov
test
jnp
loope
xorb
fisttpll
pop
arpl
mov
jnp
pop
inc
sbb
aad
jns
in
sub
mov
jnp
imul
xchg
scas
xor
mov
or
add
fstpt
xchg
repnz
in
mov
adcb
lahf
adc
dec
sbb
inc
mov
insl
pushf
xchg
jnp
rorl
cltd
add
stos
loop
outsb
leave
mov
out
inc
adc
adc
fsts
and
popa
popa
inc
mov
pop
push
or
lret
sbb
adc
bound
ds
sti
ret
push
xchg
inc
cmc
jnp
popf
shlb
inc
imul
out
mov
xchg
xor
mov
mov
fsubs
jnp
pop
cmp
mov
cmp
mov
repnz
jecxz
xchg
xor
push
mov
fdivr
lret
cwtl
out
jg
lcall
vpunpcklwd
pop
jnp
jecxz
lcall
fcomps
addr16
stc
sub
push
sbb
jns
xchg
cmp
lods
mov
iret
mov
jnp
or
dec
push
pushf
and
mov
xlat
inc
inc
cmpb
mov
add
jnp
pop
sar
dec
fdivl
jnp
pop
iret
xor
pop
pop
cmp
adc
sbb
aam
lea
pop
or
sti
jnp
lahf
inc
push
jno
cli
insb
jns
mov
imul
push
jnp
insl
sbb
jnp
es
jne
fidivrs
jnp
inc
sahf
xchg
jno
faddl
or
inc
jns
gs
lods
xor
add
cs
nop
xchg
shrb
nop
call
lds
mov
mov
adc
dec
negl
in
xchg
bound
addr16
sub
jnp
and
push
aaa
push
pop
cmpb
push
mov
xchg
daa
es
nop
popf
or
mov
das
jl
clc
in
mov
imul
push
push
nop
scas
mov
add
inc
fistpl
sbb
adc
xor
int3
mov
jnp
lea
push
gs
inc
pop
fs
in
mov
pusha
icebp
lea
sub
xorb
push
in
rorl
dec
mov
or
cmp
jmp
fmull
in
jnp
lret
cltd
or
jle
dec
add
call
pop
adc
lcall
pop
je
idivb
adc
inc
insl
insb
fistpll
fwait
incl
add
xchg
mov
add
lea
pop
loop
pop
xchg
outsb
xor
sub
jnp
mov
mov
in
dec
fs
rcr
jnp
shlb
stc
pushl
mov
stos
xchg
and
xchg
mov
lock
in
adc
sub
mov
adc
xor
pop
outsl
sub
jp
data16
ss
test
shrb
sti
int
jp
ja
fisttps
int3
loope
outsb
xlat
mov
test
mov
add
jnp
sub
add
in
jne
xchg
lcall
push
sbb
shlb
cltd
call
sahf
cmpsl
dec
inc
mov
mov
dec
mov
stos
mov
add
jmp
popa
dec
xchg
nop
bt
addl
push
mov
or
add
loopne
imul
ret
ret
cmp
dec
push
mov
push
cltd
popa
lahf
loopne
sub
shl
push
xchg
out
cmp
jmp
adc
lods
outsb
insb
aaa
inc
mov
sub
push
mov
mov
cmp
jge
xchg
jae
out
insl
adc
es
push
sub
jb
mov
movsb
or
pop
jnp
mulb
mov
or
jns
repz
mov
and
xchg
add
jnp
cltd
mov
popa
sub
hlt
sub
shlb
mov
cmpsl
sti
movsb
or
sub
out
in
dec
pop
push
mov
mov
cmpsl
fimull
int3
sarb
pop
jnp
ds
jo
inc
inc
nop
jnp
jl
mov
ljmp
lcall
push
pop
inc
mov
fwait
xor
pop
fstpt
mov
sahf
and
lahf
insl
dec
jmp
fs
sub
mov
pop
lret
sbb
push
out
push
cmp
scas
sub
fists
dec
in
pusha
jnp
pop
pop
xchg
call
out
mov
jno
xor
jnp
add
cmp
subl
andb
jne
jnp
ret
adc
cmp
in
into
int3
xchg
mov
xabort
or
jno
jnp
add
addr16
mov
mov
aad
adc
xchg
inc
call
or
xchg
inc
out
jnp
xor
leave
jg
mov
lds
mov
iret
lods
loope
mov
aam
stos
je
icebp
mov
hlt
fidivl
mov
and
and
test
das
shlb
inc
push
sub
stc
cmpsb
xchg
jl
adcb
jge
lock
push
xchg
cmp
jbe
fldt
jg
jle
scas
sbb
roll
shrb
dec
in
and
sahf
cs
cld
repz
not
adc
add
or
sti
insb
push
jb
push
xchg
or
jno
lahf
xchg
mov
int
jno
xchg
loop
xchg
mov
cmc
fidivrl
jecxz
xchg
adc
hlt
sbb
rcrl
jo
mov
jnp
js
jo
push
push
jnp
insb
sub
dec
push
in
mov
inc
nop
sub
mov
sti
pop
mov
popf
xchg
add
and
lods
xor
fstpl
push
mov
imul
lea
sti
sub
jnp
out
test
inc
test
xchg
cld
cmpsl
cmpb
mov
lods
fildll
jnp
pop
jne
or
sbb
push
jnp
enter
lret
es
sbb
add
jb
or
lret
jl
adc
imul
mov
mov
or
pop
xchg
sets
xchg
jp
jnp
dec
adcl
fsubrl
stos
int3
ret
or
test
or
pop
jnp
fwait
call
jno
and
jl
ds
arpl
stos
stos
or
in
and
or
stos
es
pop
xchg
xor
sub
jae
push
sub
dec
outsb
das
mov
lea
ret
xchg
dec
jno
push
adc
pop
xchg
dec
rcrl
cld
jnp
push
jecxz
cli
or
lret
xor
sbb
out
jae
aam
dec
xor
push
jnp
jp
aas
mov
lods
mov
and
jbe
sbb
jnp
and
test
dec
subb
or
call
stos
dec
pop
jbe
dec
xchg
jle
cmp
and
jnp
aad
adc
loopne
jnp
jne
addr16
ljmp
cmpl
mov
aam
adc
push
cmp
inc
sbb
ret
xlat
aaa
add
dec
push
mov
cmp
push
pop
mov
cmp
sbb
fnstcw
inc
sub
mov
fdivs
lcall
lods
sti
pmaxsw
cwtl
lcall
sbb
mov
sbb
jnp
cmpsb
sbb
insl
inc
lahf
sbb
shlb
cmp
adc
and
ja
shll
je
mov
insl
inc
dec
loop
mov
xchg
xchg
insb
jnp
pop
leave
push
sbb
push
in
in
movsb
rorl
cs
imul
jnp
pop
or
dec
por
jne
sub
xlat
jnp
je
nop
mov
popl
test
jnp
inc
or
mov
and
sti
adc
xchg
mov
adc
xchg
and
int
mov
daa
or
xchg
pushf
sbb
les
inc
cltd
sbb
enter
adc
jnp
scas
or
jle
pop
test
pushf
sub
fwait
insl
sbb
adc
pop
stc
test
and
dec
sqrtps
xchg
sbb
adc
out
test
sub
add
cmp
xchg
jnp
in
fcompl
scas
into
aas
jnp
xor
xchg
xchg
push
adc
mov
xor
sti
xchg
mov
sub
std
rcrb
push
add
jnp
movsw
adc
jnp
xchg
daa
mov
cmp
jo
push
ljmpw
push
fidivs
push
jb
lcall
push
cmp
leave
stos
sarl
inc
lock
xchg
mov
mov
psllw
xchg
nop
push
xchg
sbb
sbb
sbbl
sti
aas
and
or
rorb
fisttpl
mov
jb
lcall
jecxz
fsubr
shlb
lret
dec
add
bound
mov
jnp
ss
outsl
pop
pop
or
jae
ret
jns
lret
pop
std
in
mov
mov
orb
mov
push
sbb
dec
out
jnp
dec
add
pop
xchg
repnz
jae
test
icebp
push
push
fsubrl
add
std
sub
addr16
xchg
stos
into
jnp
mov
or
aam
ret
jnp
mov
add
aaa
out
xor
in
and
sahf
stos
data16
and
mov
add
iret
jnp
mov
fstpt
jnp
inc
test
test
mov
inc
jmp
inc
popf
aas
jnp
sub
test
mov
cmp
repnz
dec
pop
sbb
xchg
jne
pushf
popf
pop
loopne
jnp
fidivs
lcall
dec
cmp
mov
adc
xchg
roll
xor
sbb
bswap
aam
jnp
and
in
fwait
test
pusha
scas
push
push
inc
dec
push
inc
das
test
adc
or
enter
sbb
jnp
hlt
aas
or
fdivrs
sahf
pop
popa
xchg
xchg
sbb
sti
cmp
test
sub
lahf
and
les
mov
cmp
mov
xchg
arpl
add
test
mov
cli
sti
outsb
dec
out
add
mov
js
sub
jnp
nop
mov
xor
xchg
mov
int
sbb
ds
cmp
sbb
js
pushf
dec
dec
sbbb
int3
rorb
leave
in
pop
cwtl
xor
push
lds
jmp
fildl
mov
dec
pop
push
testb
inc
xchg
inc
mov
aas
sahf
mov
xor
inc
clc
fstpl
insl
mov
imul
cmp
and
jnp
js
mov
divb
ret
stc
jmp
jnp
test
cwtl
leave
inc
mov
pusha
mov
or
mov
push
and
ja
test
popf
lods
and
sbb
add
mov
sti
cmp
cmp
jnp
push
jg
imull
mov
dec
and
leave
out
cs
jnp
sub
pop
xchg
cwtl
adc
ret
sub
sarl
push
int3
mov
mov
jno,pn
loop
jg
ss
pop
jnp
es
cmp
fldt
xchg
inc
pop
push
jnp
les
xchg
push
adc
cs
cmp
jnp
jg
popa
nop
dec
jne
mov
ja
stos
sub
popa
test
loop
sbb
scas
and
or
mov
jnp
aaa
dec
push
ss
mov
pop
test
outsb
dec
sti
xor
rclb
jnp
mov
scas
jmp
inc
pop
lcall
aas
jnp
fdivrp
enter
add
lods
xor
stc
cmp
mov
cmc
jbe
mov
xchg
jno
mov
jmp
jl
sub
jb
adc
xchg
push
out
ds
jnp
mov
xor
jnp
xchg
mov
mov
cli
jnp
loope
dec
in
inc
adc
movsl
jnp
or
cs
sub
xchg
and
aam
std
xchg
xabort
lds
lcall
jmp
and
insb
jnp
js
lahf
push
jno
out
mov
pop
arpl
push
jnp
adc
sub
scas
mov
jnp
adc
xchg
in
cltd
jg
jnp
dec
inc
mov
testb
mov
push
adc
xchg
rcr
iret
xchg
rcrl
ret
adc
mov
fildll
xchg
test
sub
inc
pop
int
loopne
cltd
aam
mov
lods
addr16
imul
xor
jge
test
iret
xchg
jnp
inc
divl
jnp
jbe
imul
and
jmp
ret
dec
sbb
je
fsub
mov
adc
xchg
and
cld
aaa
aad
push
or
jnp
xlat
mov
sub
cmp
cmc
push
and
imul
xchg
jnp
or
aaa
icebp
repz
xchg
in
push
dec
pop
arpl
xchg
or
adc
std
imul
lcall
sahf
inc
out
jnp
enter
push
das
icebp
pushf
out
xor
pop
jo
pop
int3
daa
bound
adc
mov
in
lea
pop
inc
sahf
roll
and
xchg
loopne
mov
jecxz
comiss
movsb
cltd
mov
xchg
mov
ja
jnp
loope
cmpsb
leave
cmp
jnp
inc
sub
adc
inc
jae
push
xchg
gs
or
rep
aaa
mov
mov
insb
xor
jb
push
sbb
jge
popf
pop
imull
jge
or
mov
in
cmp
or
jmp
cld
shl
add
adc
push
pop
xor
sub
jnp
in
inc
inc
sub
or
jnp
push
pop
cmp
push
imul
fnsave
ss
mov
lcall
mov
jae
icebp
scas
jnp
imul
xlat
repz
jnp
bound
push
jnp
inc
fwait
pop
jp
imul
push
in
jg
push
inc
xchg
or
aaa
scas
mov
divps
mov
mov
clc
mov
in
data16
push
inc
jns
insl
data16
mov
out
jnp
cmp
jno
or
jnp
mov
aam
add
test
xchg
xor
xchg
cmp
ja
mov
and
pop
outsl
or
jnp
cmp
mov
cmpsl
vmovd
fnsave
dec
in
mov
push
js
ret
push
sbb
mov
insb
inc
in
fsubp
jnp
jns
push
lret
ljmp
xor
sub
jnp
sub
out
mov
jno
mov
sub
stos
rclb
sbb
pop
notl
gs
inc
xor
mov
sti
cmp
repz
and
subb
jnp
cmp
mov
lods
adc
cli
mov
popa
cwtl
pop
push
jge
sahf
pop
pop
movsl
jg
push
adc
push
or
jo
mov
mov
repz
mov
add
jnp
inc
ljmp
jbe
sti
push
push
movsb
mov
pop
and
out
xor
pop
outsl
arpl
dec
sti
sub
notl
lsl
test
mov
leave
jecxz
stos
nop
fistpl
xchg
test
xchg
jecxz
mov
cmp
popa
jmp
in
test
mov
cmpsb
sti
jle
dec
push
aad
ja
scas
dec
jo
inc
push
jmp
cld
cmp
sbb
cmp
mov
cli
xchg
mov
mov
add
pop
jl
push
mov
and
xor
cli
aam
mov
push
js
mov
xchg
out
fistpl
adc
or
jo
jns
jnp
arpl
and
outsl
xchg
pop
mov
pop
nop
or
fnstcw
sub
jnp
xor
inc
mov
pop
ss
inc
pop
adc
jnp
mov
out
fcoml
mov
sti
rcrl
jnp
loop
mov
mov
jnp
test
ds
push
loopne
add
xchg
mov
push
xchg
push
jo
add
cmp
lea
mov
movsl
push
pop
jnp
pop
into
fstl
mov
inc
movsb
mov
js
cmp
xchg
adc
nop
xor
stos
call
insl
push
fwait
int3
divl
loop
ret
xor
lods
sbb
lret
rclb
or
inc
mov
imulb
lahf
fisubs
dec
stos
loop
push
sarb
cmp
push
lahf
popf
mov
jmp
cmpsb
push
loope
sti
pop
or
mov
dec
imul
add
cmp
scas
jnp
rcrb
xchg
negl
jae
jbe
jnp
mov
stc
sti
jnp
out
fildl
or
sub
mov
insb
mov
pop
stos
loop
xor
inc
aas
aam
out
sbb
mov
xor
das
xchg
lods
repz
bound
pop
xchg
cmp
push
ret
repnz
out
imul
mov
sti
push
cmp
lahf
xor
jge
inc
dec
push
je
push
ss
jno
cmc
push
mov
data16
out
cmp
pop
jg
gs
mov
mov
sar
ficoml
movsb
dec
je
sti
mov
dec
sbb
cmp
loop
jle
push
aas
and
jae
inc
jecxz
sub
xchg
jp
cli
aas
adc
mov
pop
aam
mov
jl
mov
scas
pop
jnp
daa
aad
cld
mov
cli
adc
and
cmpl
movsb
test
mov
sub
cli
lods
jge
int
insl
dec
inc
adc
jnp
mov
imul
push
loopne
push
imul
scas
movsl
sub
push
test
dec
in
loop
insl
adc
sbb
cmp
jnp
adc
push
cmc
jae
pop
jnp
fs
pop
dec
xor
jnp
jne
push
jnp
push
adc
pop
xchg
ret
lods
pop
or
cmp
fldcw
xor
mov
pop
insl
pop
xchg
pusha
fwait
mov
jg
mov
pushf
xchg
mov
fs
and
dec
add
mov
cwtl
or
xchg
pusha
cmpb
outsb
rolb
daa
or
pop
aad
mov
leave
movl
jnp
fmull
mov
test
and
test
adcl
or
cmp
adc
and
push
inc
scas
lods
mov
in
adc
pop
xlat
gs
fldcw
cmp
push
test
xor
ror
cmp
jnp
cmp
mov
jnp
push
out
jg
test
pop
mov
adc
mov
sub
jg
mov
aas
mov
popf
sbb
jnp
icebp
xchg
es
xlat
adc
roll
pushf
pop
jle
sarb
insb
xor
add
pusha
loope
mov
std
addl
jge
lcall
jo
sbb
fildll
clc
jp
add
mov
je
stos
mov
fldl
scas
out
xor
jp
inc
pop
sahf
xchg
dec
push
xor
popa
lret
mov
lds
xchg
xor
fwait
pop
jo
shl
inc
fwait
sub
push
decl
lea
lock
jecxz
sbb
mov
je
inc
mov
adc
mov
js
cmp
clc
jnp
dec
jb
fisubs
sti
aas
xchg
sub
mov
loopne
push
push
or
mov
jnp
ds
push
jnp
mov
aad
ljmp
cmp
jl
gs
jnp
aaa
cmp
ds
mov
insb
or
iret
movl
sub
cvtps2pi
jae
pop
ficoml
xchg
in
fwait
jno
mov
je
jecxz
inc
jnp
xor
jno
sub
cmp
add
or
push
xchg
cmpsb
sahf
jge
cli
imulb
scas
fsubl
nop
sbb
and
test
mov
mov
and
fsubrl
movsl
xor
xchg
and
mov
pop
mov
pop
sbb
sub
subb
xchg
jno
aaa
jnp
push
dec
inc
or
add
and
shl
inc
xchg
scas
and
hlt
add
add
lds
je
mov
pop
outsb
scas
lcall
jnp
test
jnp
or
inc
sbb
stc
cltd
fcmovu
cmp
adc
lods
cwtl
sarl
insl
cld
mov
leave
js
push
push
loopne
ja
jnp
pusha
and
xchg
jnp
mov
or
dec
mov
or
loope
fistpl
dec
sub
std
bound
mov
mov
shr
and
js
movsl
add
scas
add
orl
out
out
jnp
aas
or
push
movsb
mov
mov
adc
mov
mov
lahf
cmp
jb
cmp
lods
stc
pop
pop
ftst
jnp
sarl
add
pop
jnp
mov
or
dec
popf
jnp
negb
lcall
sti
insl
jnp
xchg
int3
mov
push
cwtl
mov
jnp
pop
sbb
pop
inc
ss
sub
cwtl
mov
add
loope
in
notl
xor
and
xchg
out
shll
sahf
mov
sti
lds
jnp
das
mov
lods
ljmp
std
fmuls
gs
push
or
jnp
pushf
mov
mov
add
sbb
jns
jnp
shrb
negl
and
sti
mov
jnp
push
dec
xlat
jg,pt
ja
mov
stos
mov
jnp
jl
mov
push
fimull
jno
or
mov
imul
adc
mov
test
mov
jmp
pop
adc
xor
outsb
xor
sti
jbe
adc
and
pusha
ss
xchg
sub
movsb
shrl
mov
decl
pop
xchg
sub
shlb
shl
pop
jo
lods
inc
mov
outsb
sub
test
jnp
mov
push
in
jl
outsb
inc
jecxz
test
jns
push
push
out
sub
in
addr16
test
out
sub
lock
arpl
imul
mov
mov
je
clc
mov
int
mov
scas
dec
mov
and
xchg
outsl
xchg
fsubl
sub
insb
int3
sub
js
mov
ror
sbb
push
lds
aaa
call
clc
push
jnp
jns,pt
mov
ret
adc
xchg
push
lods
and
sbb
shr
ret
cmp
mov
scas
mov
cwtl
lcallw
mov
call
call
push
mov
gs
addb
sti
jb
loope
jnp
je
int3
fdivrs
fs
mov
xorl
jae
out
lcall
or
sub
fistpll
sbb
popf
jnp
lcall
jnp
test
mov
test
ljmp
cmp
jnp
cmp
xchg
jnp
pushl
or
imul
shl
movsb
xchg
jnp
push
arpl
add
mov
shrb
ret
jnp
test
mov
into
jg
sti
mov
sbb
mov
inc
jge
das
jecxz
sub
add
bound
inc
dec
test
cmp
add
repnz
cmp
mov
fwait
pop
mov
rorb
xor
cli
jnp
adc
fisubrs
movsl
loopne
and
cmpsb
xor
or
arpl
jnp
inc
flds
adc
out
fldt
dec
mov
arpl
dec
ss
cwtl
jnp
or
pusha
repz
int
xchg
jmp
add
cmp
aas
jge
cmp
cld
adc
mov
cmp
shll
adc
or
hlt
pop
sub
adc
rcrl
fucom
jne
dec
test
aas
repnz
pop
push
dec
fmull
pop
cltd
dec
jnp
mov
or
jnp
mov
pushf
cli
inc
push
cmc
xchg
cwtl
into
lods
adc
and
je
in
jnp
mov
sub
gs
sub
out
lock
sbb
push
mov
jno
jnp
lods
mov
incb
ror
mov
mov
dec
fadds
cmovnp
cwtl
stos
xor
ds
jo
nop
mov
scas
inc
push
adc
sbb
out
or
and
cmp
push
jg
lods
in
jp
and
or
add
std
inc
mov
mov
sub
fisttps
jnp
clc
outsb
mov
jnp
jmp
js
into
in
mov
inc
jb
pop
dec
fnstcw
adc
int3
pop
cmp
mov
stos
scas
jnp
dec
or
icebp
shlb
jnp
leave
insb
push
fistl
pusha
jbe
aas
jnp
test
cmpb
sti
xchg
hlt
pop
jp
jecxz
or
jb
test
mov
mov
xchg
fwait
jmp
cmp
fistpll
adc
pop
test
or
xchg
cmc
insl
or
fwait
sbb
dec
cs
mov
inc
xor
into
test
jecxz
rorl
sti
adc
inc
mov
mov
mov
and
cmp
xor
decb
and
inc
fists
or
cmpb
jecxz
outsl
sti
cmp
jbe
outsb
insl
inc
arpl
call
adc
cmp
and
cwtl
stc
or
and
mov
mov
xor
mov
lds
dec
cltd
jnp
or
sbb
xchg
pop
pusha
dec
cmpsb
je
mov
lahf
pop
jmp
into
adc
divb
aam
cmp
sbb
ficoml
add
ljmp
frstor
mov
mov
pop
mov
insb
dec
clc
fs
mov
aam
and
jns
lret
dec
sub
jmp
scas
movsb
nop
inc
push
sti
push
mov
push
ret
sub
aam
mov
pop
cmp
mov
mov
xchg
sbb
mov
sub
xor
jnp
outsb
sub
pop
jnp
fs
xor
fisubl
adc
mov
sub
dec
mov
call
bound
shr
dec
jnp
addr16
sub
mov
jno
test
fstpt
mov
rorb
mov
shr
mov
pop
jnp
cmovae
mov
scas
insl
xchg
fnsetpm(287
jg
or
rcrb
xor
sub
outsl
jo
cmp
mov
filds
insb
pop
adc
xchg
repnz
push
push
cltd
or
enter
pop
in
jno
sbb
cmp
pop
cwtl
push
inc
addr16
pop
or
mov
mov
push
add
cmp
xchg
jne
sub
mov
call
jnp
les
xchg
xchg
out
xor
push
push
push
ss
lcall
test
jmp
jbe
push
jnp
push
lods
insb
dec
mov
or
je
sub
jnp
cwtl
xor
fisubrl
jnp
test
xchg
mov
addr16
je
sti
adc
jnp
jmp
enter
lahf
mov
sbb
mov
xlat
xchg
cld
jnp
sbb
jecxz
push
lods
mov
adc
jnp
jns
shl
imul
or
sub
mov
sub
sti
mov
out
jb
repnz
jnp
scas
std
cmc
jmp
cli
mov
xor
adc
je
fwait
push
dec
adc
je
cmpb
mov
lods
mov
fistpl
test
xor
push
xchg
insl
jecxz
xchg
bound
jbe
fistpll
test
loope
xchg
adc
fsubs
cmp
test
out
push
mov
mov
pop
test
dec
cld
cmpsb
es
jnp
fstl
fsts
sbb
or
mov
push
mov
hlt
data16
and
mov
leave
decb
mov
stos
dec
cld
inc
cltd
dec
andb
push
xchg
ret
mov
push
or
jbe
and
inc
jp
xchg
dec
outsb
inc
sub
pop
cmp
jnp
mov
pop
js
mov
cmp
inc
sub
mov
mov
sti
jle
xchg
test
fisubl
jnp
adc
xchg
xor
imul
xor
cmp
daa
dec
pusha
add
and
sub
mov
mov
ljmp
fdivl
mov
and
adc
pop
inc
xchg
push
jnp
adc
jl
iret
les
inc
and
xlat
lcall
add
pop
das
dec
lods
xchg
sahf
lahf
outsl
jnp
mov
cmc
dec
outsl
mov
mov
or
shrb
mov
dec
adcb
hlt
or
pop
mov
jae
ret
sub
jnp
popf
add
stc
outsb
mov
jnp
aam
jb
xchg
adc
xchg
xor
mov
out
negl
adc
push
js
sbb
dec
jnp
mov
mov
jnp
idivl
test
flds
lods
xor
ret
cmpsb
arpl
cmp
sub
sti
xor
and
xlat
jnp
in
not
pushf
xchg
xchg
cmp
jnp
fwait
adc
ret
xor
popf
sbb
sahf
rcll
mov
out
jnp
lret
pop
rcll
adc
mov
jnp
test
repnz
icebp
sti
imul
insb
sub
sub
pop
dec
sbb
cmp
pop
pop
sbbb
dec
popa
add
push
jnp
bound
iret
mov
cld
fs
sarl
inc
or
fildl
push
mov
outsl
sti
jg
popf
xor
jnp
int
out
loopne
cmpb
jecxz
inc
fildl
addr16
ret
das
outsb
mov
adc
fwait
xchg
xchg
cld
sub
jbe
xor
mov
xlat
loope
jl
and
sbb
dec
xor
fcmovb
popf
push
mov
adc
and
cmc
outsb
mov
mov
jns
scas
jmp
sbb
shll
int
movsb
sbb
icebp
jle
mov
bnd
arpl
scas
outsb
repz
mov
cmp
jp
pop
mov
adcb
aas
jae
pop
sub
pop
enter
xchg
xor
scas
bound
fistl
dec
test
pushf
lahf
or
or
or
mov
test
xchg
movsb
push
sar
adc
push
jnp
ret
sbb
enter
stos
es
push
fs
fiadds
arpl
xor
cmp
mov
popa
jnp
xlat
adc
dec
pop
jl
jnp
jns
ret
jge
jnp
push
or
jnp
bound
das
mov
mov
cwtl
into
ljmp
pop
inc
dec
mov
pop
mov
jnp
std
lahf
cmp
repnz
fidivrl
fstl
mov
fsub
mov
cmp
pop
cmp
nop
fnstenv
dec
fwait
repnz
test
adc
outsb
daa
jecxz
sub
or
test
push
xchg
lods
mov
push
push
lret
mov
ja
mov
repnz
and
mov
adc
mov
xchg
add
cs
cmp
pop
push
fdivrs
cwtl
push
jno
mov
fs
sbb
mov
cmpsb
mov
mov
add
popf
push
pop
jnp
addb
inc
imul
pop
pop
inc
jnp
pop
out
add
nop
lcall
push
inc
jnp
jmp
ss
arpl
dec
cmp
out
lcall
lret
or
nop
adcl
dec
subb
xchg
out
int3
cmp
push
adc
and
xchg
cmpsl
and
mov
xor
cwtl
mov
jnp
jb
outsl
mov
sub
int
jnp
jl
adc
cmpsb
push
aad
jnp
mov
inc
ss
ficompl
push
sub
pop
pop
std
jnp
cmp
scas
xchg
sbbb
lahf
add
in
sub
jl
addr16
or
outsl
lret
xlat
and
jnp
jns
fwait
pop
or
daa
jns
jnp
or
xor
in
mov
or
mov
jnp
fidivl
add
fwait
mov
or
jnp
adc
int3
cs
pushf
fnstsw
and
popa
mov
sub
popf
jge
jnp
add
add
out
testb
bound
scas
std
imul
les
xor
or
test
adc
jecxz
inc
and
mov
sbb
mov
adc
mov
mov
flds
cmp
jne
int3
shll
sub
jnp
sbb
cmpsb
outsb
push
jmp
pop
idivb
std
fbld
jb
je
lcall
mov
cmp
jnp
iret
aad
int
fnstsw
mov
cli
pop
nop
xor
jnp
pop
in
leave
mov
or
scas
jnp
adc
xor
mov
jge
sub
cs
jecxz
mov
push
pop
jnp
in
test
push
push
orl
xchg
push
lea
sub
daa
shr
jmp
icebp
pop
add
inc
lods
iret
test
add
xchg
push
dec
pusha
add
jle
mov
cmp
pop
cmp
shl
lods
test
xchg
and
push
adc
and
jo
cmp
mov
stc
cwtl
xchg
mov
jae
push
decl
sbb
imul
sarb
cwtl
xor
popf
stos
mov
js
cmpsb
push
jnp
push
jge
sahf
pusha
dec
outsl
sbb
adc
jnp
xor
loopne
cmpsb
inc
leave
pop
stos
push
ret
pushf
cli
push
es
push
stos
cltd
mov
test
fldt
cli
ds
adc
mov
cs
add
popf
jnp
rolb
push
add
jnp
outsb
sub
push
xchg
adc
jnp
mov
pop
sub
orl
adc
xchg
loop
enter
xchg
insl
fbld
repz
xchg
leave
test
fistl
adcb
outsb
fstpl
jmp
lods
add
rorl
pop
add
jmp
loope
mov
mov
mov
mov
dec
lcall
add
jns
jnp
mov
push
jnp
lret
jb
and
cltd
or
in
mov
push
pop
jnp
int3
mov
dec
outsl
dec
or
jnp
out
mov
mov
cmp
adc
xchg
movsl
icebp
or
bound
jnp
sbb
xor
mov
push
mov
push
ficompl
jbe
or
sbb
int
ret
sbb
add
test
pop
or
sub
jge
lcall
nop
loope
or
jne
aad
adc
repnz
in
das
aaa
jbe
icebp
mov
add
cltd
add
jecxz
addr16
popf
repz
test
xor
popa
mov
mov
pop
push
repnz
jge
ja
imul
mov
sti
inc
and
sbb
cmp
dec
sti
dec
push
pop
jnp
aad
adc
test
jae
loope
out
pop
jo
es
test
in
stos
cmpsb
mov
pop
outsb
xor
in
loope
stc
pop
dec
adc
bound
cmpsl
pop
in
stos
clc
jnp
rol
incl
and
jnp
out
imul
add
in
lds
lret
scas
xchg
jnp
dec
xor
sbb
xor
sub
sbb
ja
lcall
hlt
bnd
aam
jge
jnp
sub
dec
lret
lahf
jmp
jnp
inc
jo
mov
data16
cltd
jnp
jbe
and
jnp
dec
push
lock
add
mov
das
mov
jnp
call
addr16
pop
popf
cmp
pop
std
stc
xlat
aaa
mov
mov
jge
pop
cmp
repz
lods
xchg
mov
out
sbb
jle
pop
test
jg
fbstp
subb
and
mov
mov
and
mov
mov
jae
sahf
outsb
and
or
lret
and
lods
jle
lcall
addl
test
iret
rcrl
rol
out
pop
jns
mov
mov
mov
rcll
xchg
sarb
in
lahf
fisttpl
xchg
or
stos
push
or
adc
xchg
loopne
sti
subl
xchg
sbb
shrb
jne
xor
jg
jecxz
jbe
sub
mov
scas
rcr
test
lods
xor
cltd
loopne
fistpl
shrb
mov
imul
xchg
cli
xor
mov
fstpt
sbb
push
int3
std
dec
mov
imul
mov
mov
add
sub
in
mov
mov
repnz
cmpsb
mov
xchg
jnp
sbb
insl
aad
pop
ja
adc
dec
je
mov
notb
cmp
or
jnp
sbb
jl
loopne
rolb
mov
mov
jno
lahf
rclb
sub
stos
sti
and
xor
jnp
add
nop
int3
xor
mov
adc
sti
dec
or
std
fstpt
dec
jb
clc
jno
add
pop
outsb
xchg
or
lret
xchg
sub
or
pop
add
jnp
test
and
adc
jle
into
xor
pop
enter
sub
shll
adc
shlb
fsubl
ja
nop
jge
icebp
es
and
jecxz
jnp
addb
or
adc
sub
cmc
add
arpl
mov
or
mov
es
pop
arpl
mov
adc
push
and
fwait
lods
jo
stos
out
sarl
xor
mov
jnp
mov
icebp
cmpb
pop
jnp
loopne
rcrl
or
rorb
fisttpl
jb
jne
inc
cmp
fwait
rclb
xchg
xor
cwtl
push
jl
jnp
cld
jmp
mov
jnp
push
subl
sti
lcall
jg
add
imul
loope
outsl
fwait
xchg
pop
jnp
pop
call
inc
mov
cmp
faddl
jnp
fstpl
jbe
loop
enter
ret
cmpl
iret
push
inc
mov
out
and
push
or
mov
jno
push
mov
addl
jnp
or
pop
push
vorps
pop
imul
jp
outsb
mov
jle
clc
out
test
xor
push
jmp
xor
jnp
aaa
leave
sbb
cld
mov
push
testb
xchg
iret
ja
test
sti
or
addr16
sub
mov
mov
cmc
test
mov
sub
sti
pop
stc
lcall
sti
scas
pop
out
jnp
shrb
jbe
cwtl
iret
jnp
push
add
mov
xchg
ss
mov
jnp
stos
sbb
cld
jnp
je
sahf
aas
xor
call
mov
sub
subl
cmpb
xchg
jl
add
adc
inc
sbb
insb
scas
jns
mov
sti
or
sbb
add
pop
adcl
sub
test
pop
inc
cltd
adc
pop
pop
cmp
mov
into
push
test
cmp
mov
out
lahf
out
cwtl
adc
jg
iret
mov
in
repz
popa
mov
cmpsl
pop
aas
lahf
cmpb
out
rorb
fwait
dec
mov
movsb
test
inc
lcall
shlb
test
adc
loopne
test
push
jl
xchg
mov
dec
imul
mov
shlb
jae
xor
jg
addr16
xchg
push
ja
inc
add
jg
test
sti
lea
add
test
cli
fidivrl
ret
xchg
inc
adc
mull
jge
shrl
inc
addr16
mov
adc
sahf
mov
push
inc
jnp
es
ret
mov
xlat
xchg
xor
mov
push
xor
cmp
fnstsw
jle
inc
mov
xchg
fdivp
lock
push
jnp
cld
scas
mov
jnp
mov
inc
sub
addl
mov
cs
jnp
mov
outsb
jbe
jl
jnp
push
push
rolb
jae
imul
cli
and
xchg
jnp
push
xchg
cmp
sub
stc
lret
sti
pop
repz
daa
test
mov
push
adc
sub
in
hlt
xor
dec
nop
xlat
inc
or
lock
cmp
cmp
jno
xchg
sbb
fdivrl
popa
add
or
aad
addr16
jmp
inc
pop
shl
loopne
xor
outsb
adc
lahf
scas
sarl
jb
push
pusha
mov
inc
adc
outsb
push
sub
push
jecxz
jl
jns
push
pop
mov
sbb
iret
outsb
cld
mov
sahf
test
mov
cmp
inc
loop
in
sti
repnz
jno
xchg
subl
aad
imul
mov
aaa
push
data16
inc
cmp
mov
mov
mov
sahf
call
ret
or
mov
jnp
dec
popa
fmul
into
xchg
int3
loopne
xor
mulb
push
cltd
dec
mov
cmc
cmp
jnp
out
fnsetpm(287
mov
sub
dec
imul
cwtl
xchg
push
addr16
aas
lea
jb
fnstsw
cmp
lock
addr16
push
into
lret
xor
and
idivl
mov
jmp
lcall
fwait
scas
jnp
xchg
insl
adc
pop
xchg
cmpsl
cwtl
inc
test
jnp
push
pop
mov
scas
rorb
jmp
xchg
icebp
jnp
inc
jae
inc
adc
jnp
stos
sub
lods
jnp
push
cmpsl
pop
movsb
mov
cld
rcr
inc
call
inc
test
dec
frstor
pop
aam
movsl
cmp
mov
xlat
stos
sub
fimull
mov
test
fwait
daa
or
or
outsb
dec
jne
mov
outsl
scas
cli
mov
add
mov
xchg
jne
jns
aam
sub
jnp
shl
and
pushf
pop
hlt
push
repz
cmpsl
scas
push
bextr
ds
jnp
inc
out
jge
adc
shll
stos
jecxz
cmp
cmpl
jecxz
mov
xchg
or
dec
push
jl
pop
mov
push
jo
xchg
iret
mov
in
and
or
mov
xor
adc
inc
pushf
jno
xchg
jne
and
sub
std
push
jge
xchg
mov
add
jg
fldt
clc
inc
push
ret
sbb
mov
je
lods
outsl
push
sti
mov
xor
lret
gs
mov
adc
cmp
repz
test
cmp
adc
outsb
stos
lret
sbb
jl
jnp
jecxz
lahf
dec
out
lret
int
pusha
pop
sti
inc
mov
pop
lcall
mov
aam
xchg
jg
jnp
xor
cs
ret
jnp
popa
xchg
sbb
dec
mov
movsl
lds
pop
jbe
mov
or
notl
ja
jnp
jno
xchg
jecxz
push
inc
sti
fists
cmpsl
or
mov
jo
test
lods
xchg
pop
leave
sar
and
mov
xchg
flds
or
frstor
push
dec
sub
fildl
in
jmp
jae
imul
cmpsl
jne
pushf
jnp
pop
xchg
xlat
stc
cmp
sub
sahf
cwtl
mov
repz
jnp
js
pop
jl
mov
jne
jnp
pop
pushf
and
jno
mov
mov
push
ljmp
ja
test
push
lret
inc
add
jg
mov
and
sbb
xchg
jge
lock
mov
push
cld
pop
add
sarb
adc
jnp
fnstenv
daa
sub
xor
test
lahf
jnp
dec
adc
push
xchg
popa
adc
or
addb
push
fs
into
xlat
jnp
test
jecxz
pop
dec
add
in
popa
sub
xor
mov
in
jecxz
in
aad
pop
dec
push
jae
lcallw
out
mov
push
jbe
fwait
movsl
nop
hlt
and
clc
ror
mov
add
js
gs
rorb
pop
wrmsr
je
xchg
flds
jae
fdivs
jb
mov
dec
adc
jnp
xlat
popf
or
cmpsl
subb
pop
fisttpll
mov
cwtl
sub
xchg
pop
adc
cmp
test
mov
jb
mull
jo
jno
in
ret
adc
sbb
insb
mov
inc
stos
push
sub
sbb
ds
cwtl
cmp
das
adc
adc
mov
ret
pop
add
inc
bswap
inc
stos
sbb
xchg
jp
xchg
cmp
push
jae
jae
out
jecxz
dec
insl
and
mov
loopne
cmp
adc
inc
xor
imul
adc
arpl
jmp
aas
cmp
cli
xor
jo
subl
aaa
mov
xor
popa
fwait
jnp
lods
ja
or
jnp
mov
sub
sub
rorb
subl
lret
imul
xor
push
fistl
mov
cltd
scas
mov
sbb
sub
jnp
or
jecxz
xchg
lahf
jnp
ds
out
push
div
jnp
mov
lcall
fwait
lods
rclb
pop
mov
scas
push
int3
cmpsb
sbb
jmp
jnp
imul
xchg
add
push
lret
out
mov
pop
adc
pop
add
jnp
dec
mov
push
in
jnp
movsb
mov
mov
adc
je
jbe
inc
and
aad
add
ss
mov
and
stc
xchg
movsb
test
push
fsubl
je
ret
jge
mov
jmp
add
rol
adc
ret
in
mov
jnp
outsl
sub
cmpsb
jnp
movsb
hlt
notb
xchg
loop
jmp
sub
cmc
lock
push
jnp
scas
pushf
push
and
jno
lcall
or
pop
test
subl
rorb
inc
jno
sbb
lods
jnp
jae
sub
and
mov
pop
mov
lahf
sbb
and
stos
and
testl
push
fldcw
jnp
cltd
jnp,pt
movsb
iret
fstl
orb
loop
lcall
jg
enter
insb
into
adc
pop
les
scas
fwait
sbb
jnp
rcll
ret
jns
inc
adc
int3
mov
shrl
sarl
cld
jno
mov
jnp
repnz
or
jo
sub
daa
pop
into
adc
sub
stos
negb
icebp
ja
rcl
pusha
je
outsl
cli
push
js
adc
cmp
mov
xor
dec
adc
jnp
sbb
arpl
xor
out
dec
dec
cli
xchg
cmp
icebp
adc
xchg
push
adc
cld
stos
mov
jno
iret
js
xchg
mov
mov
lcall
es
js
xor
jl
sub
aaa
enter
call
xchg
cmp
or
fldt
fs
cld
cmp
mov
int
arpl
notb
out
pushf
ffreep
mov
add
bnd
out
data16
cltd
mov
mov
or
dec
push
mov
jnp
xchg
cmp
stos
jnp
call
push
adc
outsb
sti
fwait
jo
rorb
popa
adc
lcall
mov
xchg
ret
xor
or
mov
mov
hlt
jno
cmp
pop
pop
add
idivb
insl
cmp
push
sbb
inc
mov
call
je
jge
push
ja
mov
xor
sarl
jne
out
fdivr
jb
arpl
mov
and
mov
adc
jecxz
outsl
xor
ja
jl
imull
test
xchg
fldcw
cli
pop
jmp
pop
rclb
inc
inc
push
adc
mov
orl
push
jnp
scas
jae
push
inc
xor
idivb
jne
jnp
adc
popf
subb
js
psubusb
dec
clc
lock
data16
out
filds
mov
add
in
and
imul
pop
jnp
mov
lds
mov
call
arpl
jnp
lods
xchg
ljmp
int
mov
imul
push
mov
pushf
es
addr16
add
int3
out
jne
xlat
hlt
loope
rolb
sbb
pushf
mov
mov
push
pop
hlt
mov
ret
int
mov
cmp
dec
pop
jnp
mov
inc
push
std
cmp
repnz
jle
and
and
push
sub
lods
inc
pop
scas
dec
jnp
cmpsl
clc
and
push
jbe
xchg
cmpl
mov
xor
sahf
in
pop
lds
lret
xor
jp
adc
push
loop
in
dec
shrl
sub
adc
cmp
and
push
insl
mov
jae
sbb
add
sbbl
or
fcmovu
push
les
sti
mov
hlt
push
jnp
inc
mov
xchg
mov
dec
sub
push
ja
push
adc
daa
mov
xchg
lret
jnp
push
aam
jl
jnp
add
aad
cltd
xchg
movsl
jnp
roll
jg
push
jmp
add
popa
xlat
sub
outsl
movsl
pushf
adc
mov
and
aad
mov
xor
cwtl
gs
hlt
fstpt
jl
jl
adc
rolb
shrl
nop
std
adc
cmp
out
adc
pop
data16
mov
adc
subb
pusha
mov
js
mov
sbb
lahf
and
cmp
mov
nop
lock
xor
pop
movsb
jnp
sub
gs
inc
test
mov
out
inc
jge
mov
jnp
xchg
xchg
adc
pop
sub
lcall
and
and
sarl
jnp
js
xchg
data16
or
fwait
add
into
mov
push
popf
fidivrl
test
ljmp
xchg
inc
mov
or
rolb
cmp
jnp
lods
cld
sub
cmp
pop
mov
jnp
cs
jbe
and
leave
push
jno
jnp
cmp
push
mov
in
inc
fwait
xor
mov
insb
sub
rcrl
push
ret
scas
cs
push
xchg
pop
ficomps
sub
adc
addr16
movsb
xchg
mov
pop
mov
xor
loope
adc
jnp
sbb
cmp
jnp
aaa
inc
fmull
and
adc
xchg
pushf
jmp
aad
dec
addl
or
xor
sti
jnp
mov
cld
or
test
movsb
fcmovnu
fst
hlt
sbb
sbb
out
aad
inc
jae
xchg
adcb
jnp
daa
xchg
dec
add
cmp
and
test
in
bound
pop
jnp
and
repz
mov
jnp
in
jns
fcmovnu
pop
jnp
movl
fwait
push
mov
cld
xchg
pop
addr16
mov
test
jl
adc
mov
leave
aaa
xchg
subl
xchg
dec
jmp
pop
lods
xchg
rcrb
mov
repnz
arpl
jnp
sbb
insb
adc
jnp
pop
loope
scas
or
mov
mov
hlt
enter
fcmovne
cmp
cmpsl
inc
or
jnp
fnstcw
dec
jle
jnp
mov
cwtl
sbb
jnp
jmp
push
sub
cmpsl
push
loope
add
mov
lahf
sarb
jnp
jb
out
test
add
iret
jnp
mov
lret
lahf
cwtl
ret
mov
test
gs
mov
mov
xchg
stos
cmp
dec
pushf
inc
jne
lds
cmp
sbb
inc
mov
mov
pushl
cld
mov
pushf
xor
sti
paddd
mov
cs
pop
in
mov
push
es
add
dec
mov
sbb
cmp
vcvtdq2ps
jecxz
jle
cmpl
test
scas
mov
mov
jnp
ret
loopne
push
mov
lea
jmp
jb
push
lret
pop
and
cmpsb
dec
mov
daa
mov
insl
fisubrl
ja
jae
or
flds
sbb
inc
pop
notb
in
sbb
xchg
inc
cmp
jnp
push
imul
incb
shrl
jmp
mov
jnp
add
call
cltd
test
arpl
push
ret
test
out
movsb
cmp
mov
repnz
inc
cmp
jnp
jo
mov
jnp
cmp
clc
enter
pop
adc
jo
mov
out
pop
fmuls
insb
mov
mov
lds
loopne
fdiv
jnp
or
lret
xchg
jnp
mov
jns
lret
mov
or
stos
jecxz
sub
xchg
dec
addl
cmp
mov
xor
adc
or
sub
mov
mov
imul
iret
cmp
sbb
jnp
xchg
mov
mov
and
jle
mov
out
push
mov
jge
scas
jnp
cwtl
or
jo
movsb
lahf
jnp
push
jle
nop
mov
xor
mov
stc
popf
enter
xchg
sub
inc
pop
roll
mov
in
dec
pop
mov
jbe
mov
mov
jl
nop
test
addr16
sbb
out
movsl
or
in
xchg
cs
sbb
jmp
mov
cwtl
mov
sbb
or
jnp
inc
pop
adc
adc
dec
jnp
movsl
pop
insb
js
ja
jnp
int3
fldl
test
adc
add
and
int3
mov
adc
decl
push
ret
inc
push
pop
mov
xchg
fdivrs
neg
sahf
movsb
movsl
decl
jge
subb
sub
cmp
stos
lret
adc
scas
pop
pop
xchg
push
mov
push
inc
add
cli
push
cmp
lods
les
mov
jnp
adcb
mov
ja
add
out
adc
dec
cmc
jnp
shl
clc
xor
xor
mov
pop
or
hlt
pop
pop
pop
mov
mov
jnp
popf
sbb
icebp
xor
jns
xchg
cmp
cmp
or
inc
pop
bound
ss
mov
jnp
loope
stc
gs
sub
stos
mov
mov
jnp
out
lock
sub
xchg
daa
call
icebp
hlt
js
negb
aaa
inc
push
jnp
out
pop
outsl
and
push
insb
jnp
aam
dec
lcall
pop
xchg
and
popl
arpl
jmp
xchg
adc
sti
or
sbbl
mov
push
lcall
push
jo
mov
fnsave
mov
jnp
inc
cmpsl
add
loope
pop
mov
mov
popf
cli
jnp
fucomp
lgs
lcall
add
arpl
or
test
push
sbb
lret
push
pop
jnp
sbb
cli
imul
sbb
stos
test
jnp
pop
sub
xor
dec
call
clc
jnp
add
out
xchg
stos
xlat
mov
test
mov
nop
clc
jnp
stos
sbb
or
in
jp
inc
nop
sarb
adc
add
fmul
cwtl
push
addr16
jb
js
or
jnp
mov
insl
mov
pop
mov
add
mov
mov
pop
xor
mov
jmp
nop
jno
pop
add
xchg
lods
jl
push
xchg
and
es
dec
hlt
test
sbb
js
pushf
adc
push
sbb
cmp
mov
jnp
xchg
andb
sbb
dec
adc
imul
test
call
dec
test
pop
cmpsl
leave
adc
jnp
adc
mov
jbe
orb
sub
arpl
push
stos
mov
sarl
fwait
jp
popa
cs
les
mov
dec
xlat
daa
lret
mov
jnp
or
mov
pop
jecxz
jno
fdivs
aad
lods
test
test
daa
test
xor
xor
mov
mov
mov
jp
cmp
pop
sub
xor
sub
jnp
inc
add
test
fs
jnp
leave
dec
fisttps
xchg
stc
lods
push
mov
push
pop
jnp
in
sub
out
js
into
cmp
sbb
dec
push
xchg
mov
das
mov
jne
mov
sbb
rcrl
sub
xor
mov
dec
add
lods
cli
mov
add
loop
imul
aas
testl
cmpsl
adc
push
jnp
in
icebp
bnd
inc
jae
jnp
daa
and
jb
xchg
mov
push
adc
icebp
adc
outsb
mov
xchg
add
push
bound
dec
cmp
add
test
cmp
pop
adc
cmp
ret
cli
jnp
lea
inc
pop
and
pop
mov
ss
bound
mov
sub
arpl
xchg
dec
xchg
push
dec
lahf
fwait
ja
inc
test
outsl
mov
fildl
sbb
add
gs
inc
or
ja
pop
loop
andl
fistl
aas
call
jnp
sahf
jl
xchg
nop
pop
movsb
jnp
add
arpl
jg
push
leave
test
push
call
mov
xor
sub
rclb
and
jmp
in
jnp
into
inc
add
push
mov
lcall
test
dec
dec
lods
jnp
xchg
mov
add
icebp
jnp
cmp
nop
mov
adc
and
js
adc
iret
mov
mov
arpl
jnp
dec
lods
mov
xchg
data16
mov
ljmp
or
mov
fbld
cmc
lret
lcall
jnp
sbb
add
shl
xchg
dec
mov
cmp
sub
jnp
cltd
lret
sbb
pop
xor
xchg
aaa
int3
mov
outsl
pop
adcb
xor
int
cmpsb
jnp
out
inc
xchg
cmp
sbbb
xlat
pop
and
add
loopne
shll
pushl
mov
xchg
push
xchg
mov
enter
test
add
mov
mov
loop
mov
jnp
imul
jnp
inc
jge
pop
movsb
sbb
out
out
inc
inc
lods
mov
mov
gs
stc
pop
dec
sbb
inc
xor
sbb
dec
mov
pop
imul
push
addr16
loop
lods
pop
jp
lcall
mov
push
cmp
jnp
shrb
fsubs
sti
xchg
adc
cli
adc
filds
pop
xchg
stos
jg
pop
sbb
mov
leave
stos
cmp
imul
fxch
lds
fwait
jnp
arpl
pop
int
out
sbb
fsubs
mov
sbb
and
xchg
add
jnp
loope
add
pop
mov
popa
push
idiv
dec
jnp
sbb
dec
out
pop
mov
xchg
fwait
sbb
jns
adc
jae
jnp
cmp
scas
cltd
call
loop
xchg
xchg
adc
lahf
rorl
sbb
jnp
pop
daa
ffree
pop
aam
pushf
mov
xchg
sbbb
imul
es
ljmp
jae
jnp
shrl
loopne
outsl
int
jnp
jb
xchg
test
jnp
inc
dec
cmp
imul
out
push
jnp
roll
xor
mov
add
mov
pop
cld
bound
in
dec
stos
sbb
sub
std
mov
cmp
pop
jge
jnp
jbe
lods
jne
scas
jmp
sub
dec
jae
mov
cwtl
stos
cmp
mov
aam
and
or
mov
dec
arpl
cmpsb
rorb
pop
push
mov
pop
mov
mov
sub
out
dec
xchg
xchg
add
jnp
pop
inc
sbb
dec
out
std
jnp
in
stos
and
aad
xchg
cmp
repz
sbb
jnp
pop
push
pop
cmpsb
xlat
mov
jnp
sahf
fcoml
xor
jnp
fstp
repnz
int
mov
mov
jge
mov
jnp
test
xchg
add
mov
sub
cmp
daa
and
dec
scas
jmp
mov
or
out
sti
dec
fs
rorl
in
rclb
fucomp
sbb
test
fst
in
jnp
imul
inc
xchg
lock
pop
jnp
rorl
jl
mov
pop
xchg
call
add
ret
pop
shll
jne
xor
pop
push
into
xchg
inc
pop
outsb
ja
jbe
xor
sarl
imul
pop
sti
inc
pextrw
or
fdivl
jnp
mov
xchg
fstpl
jns
sbb
adc
mov
repz
lock
mov
jnp
mov
xchg
sub
pop
fcmovbe
mov
jg
push
add
in
imul
sbb
in
test
dec
inc
add
mov
shlb
movsb
and
loope
cmpsb
or
cmp
sti
shlb
movaps
pop
mov
or
rcrl
insl
out
test
test
mov
std
addr16
push
jnp
jns
test
inc
out
jnp
out
sub
inc
imul
mov
roll
dec
jnp
mov
lods
xchg
insb
out
movsl
out
clc
cmp
or
test
lahf
cld
jnp
sub
fcmovbe
sbb
loopne
sbb
data16
ret
jae
insl
fcomps
mov
negl
sarl
xchg
mov
sub
lcall
in
xchg
jnp
mov
inc
mov
sti
add
stos
mov
ja
les
push
jnp
test
lods
scas
mov
nop
push
pop
test
jl
jnp
sbb
push
es
sti
ret
lods
mov
sub
stos
sub
dec
loope
cld
inc
mov
fadds
xchg
push
dec
je
or
aad
repz
jmp
xor
mov
or
adc
mov
adc
sub
into
mov
push
jae
inc
pushf
fs
pushf
jp
in
lea
ret
pop
jnp
out
fidivrs
js
sahf
jnp
lock
pop
test
addr16
fwait
cwtl
loop
test
in
dec
popf
adc
aas
jnp
push
xchg
mov
enter
mov
mov
inc
lahf
popl
dec
adc
add
jnp
cmp
inc
cmp
imul
ficompl
sbb
mov
arpl
ja
jnp
and
shll
mov
pop
ds
jno
pop
cld
push
jnp
push
xor
jnp
in
out
mov
sub
movsb
sti
lock
test
out
aaa
nop
inc
jg
sti
cmp
cmp
dec
imul
scas
mov
cmpsl
mov
insb
fs
sub
jg
in
out
push
stc
adc
aad
daa
stos
add
jnp
push
cld
add
arpl
mov
mov
out
pop
imul
in
test
add
int3
mov
cltd
enter
push
adc
sti
lcall
addr16
test
sbb
and
arpl
ret
loope
push
inc
movsl
negb
repnz
dec
movsb
outsb
cltd
arpl
cmpb
lret
cmp
xchg
xlat
jno
pushw
jne
test
mov
jae
in
jns
test
and
stos
repnz
int3
jb
mov
sub
movsb
into
lods
push
insl
xchg
ret
xrelease
arpl
push
cmpsl
jecxz
fsubr
sub
stos
and
dec
pusha
jnp
jae
leave
add
sub
int3
xlat
lds
dec
dec
sbb
xor
xchg
loopne
push
xchg
adc
mov
repnz
mov
pop
jge
jno
pop
mov
jb
or
add
jecxz
push
mov
fwait
and
dec
lcall
sbb
or
mov
cs
ja
xor
jnp
cmp
in
sbb
insb
pop
push
mov
pop
sbb
sti
jae
xchg
ja
and
cld
dec
push
mov
mov
arpl
sti
xchg
fnsetpm(287
sub
jnp
add
push
cwtl
push
xchg
xchg
outsl
lret
mov
jmp
stos
int
mov
stos
xchg
mov
xchg
mov
jnp
je
ds
pop
mov
stos
lods
push
pop
pop
sbb
cmp
push
add
lds
jno
lds
xchg
leave
rorl
cmp
rorl
mov
jle,pn
sub
adc
enter
fsubrl
inc
or
mov
inc
enter
out
sti
outsb
dec
ret
test
or
push
push
cltd
and
arpl
jne
adc
xchg
insb
jno
mov
mov
jnp
or
test
adc
aad
std
rclb
andl
test
push
cmp
insl
jg
dec
in
cmp
adc
test
cltd
cmpsb
ja
sti
fstpl
mov
js
jnp
jno
xchg
fmuls
cld
mov
push
jnp
ret
push
add
test
enter
push
xor
gs
popa
cmp
and
stc
pushf
sahf
mov
or
les
je
nop
push
addb
jecxz
jae
lds
jnp
fisttps
jnp
push
add
test
mov
sti
pushf
mov
inc
or
inc
mov
ja
xchg
jnp
fs
pop
addr16
xchg
arpl
dec
push
jnp
jecxz
and
xlat
mov
outsb
mov
sahf
xor
or
loopne
pusha
jecxz
pop
mov
addr16
mov
xchg
int3
jnp
dec
ss
cmp
daa
jnp
in
xor
out
push
push
dec
pop
sub
mov
mov
sbb
or
test
xor
loop
hlt
add
add
fdivl
sti
cli
popa
gs
sbb
jnp
out
ror
sti
xor
test
pop
xor
movsl
dec
sti
ss
es
cli
idivb
fstpl
fmull
popa
or
adc
sub
xchg
insl
mov
add
pop
nop
fidivl
mov
xchg
push
ss
pop
pushf
cmp
fdivr
divb
shlb
jnp
shll
xor
push
gs
mov
xor
out
sbb
fnstsw
mov
or
bound
and
mov
mov
icebp
jnp
dec
js
daa
cli
aad
jnp
xor
fistps
test
stos
mov
jnp
lea
mov
push
push
mov
push
and
inc
stos
aas
mov
cmp
xor
xor
dec
push
mov
jnp
call
xchg
addr16
leave
push
inc
sbb
jnp
orb
pcmpgtb
jnp,pt
adc
insl
std
ret
scas
lahf
clc
jp
jnp
dec
shl
cs
fs
fiadds
sub
sbb
mov
shlb
mov
mov
es
les
arpl
dec
jo
scas
jno
and
mov
data16
mov
arpl
xlat
pusha
cmp
or
ja
jnp
mov
std
sbb
mov
fisubrs
test
jbe
jno
icebp
mov
into
mov
inc
outsl
jnp
out
outsb
loopne
movsl
and
popa
mov
shl
add
es
jns
xchg
scas
aad
test
lods
or
push
lret
in
stc
inc
jnp
inc
and
or
push
sti
sub
jns
sahf
jnp
jg
mov
xor
test
mov
popf
and
mov
idivl
dec
ja
in
jns
scas
jnp
fcmovnbe
pop
dec
ret
adc
lea
add
jne
lcall
or
scas
movsl
mov
stos
xchg
xchg
adc
and
jecxz
sbb
repnz
sbb
daa
xchg
adc
std
sti
push
pop
insl
cmc
testl
dec
mov
push
lahf
mov
xor
cld
std
jnp
stos
sub
mov
mov
ds
pop
imul
mov
enter
mov
scas
jg
fldenv
mov
and
xchg
loop
jnp
lahf
cli
cld
int
mov
cltd
inc
adc
sub
bound
mov
jl
lock
cmp
nop
push
mov
sti
pop
xchg
dec
cltd
xchg
repnz
jnp
ror
dec
adc
mov
scas
ja
push
xchg
jnp
stc
or
lods
mov
hlt
jnp
adc
xchg
gs
xlat
add
jbe
xor
jg
dec
shrb
test
adc
push
ss
xchg
xlat
pop
pop
mov
jmp
fisubrs
pop
pop
rcrb
mov
mov
bound
lahf
js
aas
loop
mov
movsl
sub
movsb
cltd
jl
popf
add
mov
jge
push
mov
cs
sub
js
xchg
inc
ret
inc
mov
pop
bswap
lahf
in
pop
cmp
das
and
mov
jnp
cld
fcoms
xchg
rcrb
pop
icebp
cltd
push
mov
jg
xchg
pop
xorb
sti
jle
stos
lds
jbe
dec
jns
outsb
mov
cmp
or
mov
jnp
loope
push
adc
pusha
leave
sbb
jnp
test
pushf
pushf
pop
or
mov
xchg
imul
and
xchg
das
out
addl
add
xchg
imul
das
sub
xor
arpl
cmp
mov
lret
inc
pusha
cmp
sub
push
mov
sbb
sti
into
jmp
cmp
and
sbb
icebp
jnp
mov
pop
jns
daa
fistpll
xchg
shl
gs
cld
insb
mov
lock
cmp
in
scas
out
mov
imul
push
mov
and
data16
mov
jo
bound
pop
daa
and
loope
into
lcall
xchg
mov
out
std
gs
adc
leave
mov
jg
dec
jmp
inc
and
scas
xchg
outsl
jge
imul
div
mov
in
mov
jnp
jecxz
aaa
std
jle
xchg
test
cmp
xor
js
push
aas
subb
mov
jno
in
xor
je
dec
or
hlt
lcall
xor
adc
mov
aad
cmpsb
in
jnp
arpl
or
imul
mov
sub
or
push
scas
test
jnp
inc
outsb
insl
call
xchg
filds
adc
inc
xchg
or
repnz
mov
and
cmc
lret
pop
inc
insb
cmp
mov
cwtl
js
rorl
lret
add
sbb
jnp
xor
adc
cmp
xchg
pop
inc
mov
inc
pushf
mov
jnp
mov
out
shll
aad
fstpl
mov
and
xchg
xor
fiaddl
out
das
cmp
and
mov
fwait
jb
filds
test
ss
cmp
in
fcomp
mov
fwait
xchg
inc
enter
mov
outsl
ja
scas
add
mov
pushf
mov
jnp
mov
or
nop
jnp
hlt
xchg
gs
push
loopne
cmp
xchg
scas
jnp
daa
mov
rclb
test
xchg
jp
testb
jg
jle
mov
inc
dec
dec
jnp
or
lea
and
jnp
cltd
adc
push
paddsw
sbb
jbe
push
xor
xor
add
inc
xchg
out
jle
inc
sbb
les
mov
dec
mov
loope
jle
pop
inc
xor
mov
mov
sub
loop
jmp
imulb
imul
js
dec
sub
or
adcb
mov
rcrb
add
push
mov
xchg
jno
jecxz
jg
out
movsb
dec
sbb
inc
sti
mov
test
pop
hlt
push
pop
test
loop
movsl
sti
or
mov
cmp
aam
lahf
sti
out
cs
rcr
sarb
daa
ret
inc
jnp
fimuls
imulb
jnp
mov
sub
aaa
mov
shl
subb
pushf
das
outsb
push
std
xchg
and
movsb
xor
popf
sub
arpl
mov
dec
xor
scas
adc
fwait
cmp
aaa
icebp
jne
test
jle
and
mov
dec
or
mov
daa
add
lret
push
and
jnp
les
xor
test
dec
jnp
and
pop
dec
dec
enter
mov
outsl
sub
pushf
push
js
dec
adc
mov
in
jns
roll
cs
jge
rclb
xchg
xchg
inc
push
mov
jnp
add
dec
jae
jmp
mov
orb
jns
xchg
cmc
adc
and
ljmp
sbbl
mov
sti
add
cld
cmp
stc
jo
inc
roll
dec
jno
faddp
stos
push
shll
mov
testl
imul
jno
sbb
xchg
outsb
je
push
or
int
stos
lret
cld
cwtl
inc
xchg
cmp
inc
stos
clc
jmp
data16
add
add
scas
subl
xchg
jns
lret
inc
dec
xchg
jecxz
fldt
jnp
adc
fcmovnb
mov
ja
xorb
ret
mov
call
mov
sub
push
icebp
jnp
lods
lahf
mov
int
mov
jnp
scas
mov
inc
movsb
fdivs
in
scas
stos
lret
jnp
arpl
push
jnp
xor
mov
loopne
dec
or
jne
push
pop
cmp
and
mov
stos
xor
lods
mov
or
jnp
mov
lock
add
fsubs
push
inc
dec
xchg
jnp
push
lea
sub
sbb
into
xor
cmp
jnp
and
sbb
sti
add
push
fildl
push
pop
jnp
neg
nop
lcall
or
insl
add
ds
jle
sub
add
cld
sbb
jnp
and
mov
repz
cmp
ja
pop
xchg
push
jnp
sub
push
add
inc
repz
adc
or
jnp
cwtl
cmp
ret
jnp
ret
pushf
imul
jle
mov
adc
or
xchg
cli
fwait
pushf
mov
scas
cwtl
mov
xchg
and
sbb
dec
outsb
arpl
jnp
pop
mov
inc
jg
add
pop
jp
sbb
jmp
insl
pop
sbb
jbe
in
push
xor
xchg
xchg
test
sub
mov
add
outsb
mov
sub
sbb
cld
pushf
cmp
loopne
cltd
jg
xchg
xchg
sbb
btr
lds
arpl
xor
sbb
jle
sbb
inc
outsl
push
cmp
mov
inc
push
js
sub
add
pop
inc
xchg
adc
out
add
outsb
sub
or
xchg
cmpsl
sbb
mov
xchg
int
xchg
cmp
and
inc
push
faddl
inc
add
dec
std
ja
jns
or
jmp
jnp
sub
fdivrl
incb
test
xchg
fwait
inc
lret
mov
test
jnp
push
sarl
stos
cmp
pushl
movsb
pop
mov
jnp
xor
ja
push
jnp
out
cld
dec
cmp
mov
arpl
adc
push
sbb
xchg
addb
cmp
mov
enter
jnp
mov
sub
fcoms
cltd
pop
test
or
in
lahf
sbb
jns
mov
cld
sbb
or
cmpl
jnp
pop
inc
add
lret
jb
xchg
lods
xchg
mov
adc
and
insb
cltd
xor
jl
cli
and
repnz
in
sbb
addr16
mov
cltd
jbe
pop
idiv
xor
push
mov
mov
dec
jnp
cmp
sarb
mov
mov
enter
push
pop
jnp
aad
stc
sahf
jnp
jno
jmp
stos
inc
loope
in
and
adc
flds
into
xchg
push
fwait
mov
adc
sbb
shl
jmp
sahf
test
and
sbb
stc
xchg
hlt
xchg
add
ror
out
jnp
inc
fs
add
cmp
cmp
adc
shl
ds
sbbl
dec
fstps
popa
aas
sub
ret
sbb
mov
sub
or
jecxz
gs
jmp
je
fstpt
scas
fdivrs
pop
lods
inc
and
mov
xchg
push
movb
arpl
push
enter
sahf
pop
lret
lea
pop
arpl
dec
jg
lock
fstps
cmp
mov
test
jg
xchg
arpl
vmovd
or
jp
adc
xlat
sarb
sti
js
out
xor
test
roll
jg
pop
cld
je
jnp
mov
fs
xchg
jno
or
fcomps
sbb
pop
jl
aam
jmp
or
enter
adc
cmpsb
jnp
test
mov
push
pop
lds
jnp
repz
xor
dec
daa
jmp
push
cmp
push
pop
jnp
pop
push
dec
jle
je
jnp
push
out
xchg
aad
inc
imul
push
mov
lcall
jnp
cmp
mov
xchg
dec
push
mov
jge
fists
rdmsr
jnp
aam
std
jecxz
cmp
stos
push
dec
in
jnp
bound
or
mov
and
or
leave
lea
andl
adc
popl
in
cmc
cmp
jnp
nop
scas
stos
fldcw
push
jmp
mov
ds
sub
test
test
enter
lea
jge
or
mov
ret
aam
test
dec
notl
jno
arpl
fnstsw
ljmp
mov
xchg
jno
jecxz
scas
mov
sbb
les
shll
rcl
fistpl
or
out
push
xchg
sahf
in
jnp
xor
fistl
dec
push
and
jle
mov
insl
push
inc
clc
cmp
or
xchg
sub
and
xchg
test
dec
ficoms
xchg
ds
enter
mov
jle
cmp
push
lea
scas
aam
adc
imul
outsb
lea
insl
or
xlat
int3
add
xchg
cs
push
jnp
cmp
dec
jae
lcall
dec
insb
fwait
mov
icebp
cwtl
stos
icebp
in
xchg
fnstenv
iret
jnp
fdiv
jns
pop
jg
xor
push
arpl
clc
add
xchg
pushf
mov
push
aad
jnp
outsl
fidivl
xchg
jno
rcrb
push
jmp
mov
rcrb
ret
sbb
ljmp
jnp
aad
out
cmp
inc
sub
mov
mov
xchg
xchg
cwtl
pop
imul
push
addr16
dec
cld
mov
shlb
push
mov
push
sub
loope
jg
mov
or
or
mov
pop
test
xchg
stc
insb
movsb
ret
inc
into
and
ret
push
test
sub
ficompl
not
fnsave
leave
in
shrl
movsl
aaa
rcl
roll
sub
fdivp
repz
inc
arpl
and
push
rclb
int3
clc
cmc
adc
mov
sbb
lcall
cli
roll
addl
inc
cmp
cwtl
fwait
add
fiaddl
dec
rorb
iret
push
push
mov
xchg
je
imul
stos
xchg
xchg
mov
ret
sbbb
mov
xor
loope
hlt
push
icebp
jg
cmp
mov
push
lea
adc
lret
or
movsl
xor
fstps
enter
jne
imul
notb
fcmovne
insb
jnp
dec
mov
in
fnstenv
mov
imul
loope
push
xchg
mov
jbe
test
pop
inc
scas
jnp
out
ljmp
inc
gs
pushf
sub
in
aam
mov
cli
jno
or
dec
ja
mov
mov
xor
imul
mov
or
test
shrb
or
push
sarl
test
pop
pop
jnp
hlt
mov
and
xlat
arpl
mov
lea
rolb
into
movsb
sbb
push
xchg
fs
test
imul
fidivrl
jb
and
mov
pop
sub
hlt
or
adc
in
cs
imul
mov
imul
sbb
cmp
cld
jnp
mov
push
xchg
jne
adc
pop
inc
or
popa
jnp
clc
hlt
cmp
mov
pop
lret
je
dec
jnp
jge
mov
test
movsl
or
push
inc
sub
add
addr16
lret
cli
jnp
lods
cmp
dec
movsb
pop
icebp
lret
sbb
subb
lds
sti
dec
test
lcall
call
fcmove
decb
out
xor
cmp
xchg
mov
stos
push
addb
test
jnp
lock
xor
push
jnp
xchg
cmp
dec
cmp
mov
push
mov
shrb
pop
jecxz
jnp
jmp
adc
fsqrt
pop
jnp
lret
outsb
pushf
add
out
jne
sbb
jnp
imul
xor
sub
lcall
cmp
mov
imul
dec
mov
clc
jae
ss
or
repnz
test
jbe
lods
pop
jns
mov
xor
pop
add
dec
lret
xchg
adc
subb
cld
scas
ficoml
xorl
xchg
int3
mov
fldcw
sub
jmp
arpl
imulb
test
inc
xor
sti
pop
lret
xchg
hlt
inc
lea
into
jno
adc
and
mov
pop
jl
xchg
add
pop
push
push
insl
vunpckhps
mov
fwait
int3
add
adc
cmp
jle
shrl
sbb
arpl
inc
shlb
or
xchg
popf
push
out
or
dec
push
fwait
jecxz
inc
data16
jmp
into
mov
in
push
stc
mov
cli
xchg
enter
mov
pop
cmp
dec
pop
xchg
cmp
mov
adc
scas
mov
adc
cmc
mov
rol
in
ds
dec
sbb
jecxz
enter
xchg
mov
xchg
xor
sti
mov
jns
shll
push
adc
adc
ret
mov
xorb
inc
mov
scas
inc
stos
lock
sbb
les
mov
mov
repz
arpl
insl
aad
test
mov
add
pop
jge
mov
test
test
xor
adc
out
dec
cmp
lea
sarb
arpl
xlat
daa
mov
inc
arpl
fstps
cmp
jnp
insl
mov
in
hlt
jnp
repnz
mov
mov
adc
jnp
rcr
cmp
ret
cmpl
int
loope
cmp
outsl
int3
add
lret
cltd
jnp
data16
xor
pop
movq
dec
cs
mov
pop
imul
mov
add
bnd
popf
nop
jae
xor
stos
jecxz
jnp
insl
and
dec
dec
inc
mov
rcll
popl
sub
popf
movsl
test
in
push
ja
rcl
daa
fincstp
or
ret
inc
sub
mov
inc
cmp
inc
pop
dec
imul
test
ret
ltr
mov
or
jge
mov
cmp
cmp
nop
in
jnp
pusha
call
push
mov
jo
into
mov
mov
jecxz
mov
out
push
jg
jnp
test
je
sbb
or
test
dec
cmp
movsb
mov
xor
into
fwait
xchg
jbe
jnp
mov
push
ds
insl
jnp
mov
call
mov
aam
cmp
sti
pop
push
mull
lcall
imul
scas
or
jnp
mov
adc
movsl
sbb
lcall
xchg
inc
dec
and
test
in
jmp
push
cmp
inc
mov
int3
mov
in
cmpsl
jae
cmp
arpl
mov
insl
dec
add
xor
test
xor
mov
sub
mov
add
out
mov
mov
int3
cmp
inc
xchg
lahf
add
xor
loope
mov
lret
mov
mov
pusha
inc
cli
mov
je
gs
arpl
cltd
mov
xlat
mov
mov
repnz
cmpsl
cmpsb
pop
cmp
fnstcw
pop
inc
popa
add
jmp
jnp
enter
lahf
test
jnp
scas
jle
xor
test
out
mov
pop
repz
test
rcrb
xor
cli
ss
jecxz
aaa
cltd
jno
sbb
xchg
daa
sbb
fcmovne
sti
icebp
and
or
test
sbb
sbb
add
push
outsb
cmp
outsl
jne
mov
dec
mov
insb
repz
je
pop
or
shlb
arpl
sti
push
enter
pop
mov
cli
xor
es
sub
dec
adc
adc
mov
mov
sbb
pop
cmpb
pushf
aad
out
js
jmp
cmpsl
pop
cmp
jnp
lods
mov
icebp
rcr
fcomi
sub
sub
cmp
dec
mov
fwait
leave
mov
or
sti
in
out
sti
mov
inc
or
lods
subb
jnp
xor
push
imull
xor
cmp
jle
jae
das
fisttpll
negb
lret
orb
jl
test
mov
pop
xchg
pop
sbb
and
cmpsb
sbb
cmp
test
dec
xor
sbbb
jae
int
and
jnp
unpcklps
inc
or
sub
sbb
jnp
mov
jmp
stc
nop
jnp
cmp
dec
mov
inc
jl
lock
lods
fnstcw
fldl
and
jnp
pusha
sbb
pushf
push
cmc
cld
cmp
cli
fistpl
jne
jmp
scas
lcall
push
push
dec
jae
stc
enter
stos
adc
mov
iret
and
xchg
mov
shl
jnp
pusha
jl
scas
pop
push
insb
jnp
adc
das
adc
adc
scas
mov
mov
xchg
std
clc
ret
inc
out
mov
dec
jmp
pop
xchg
outsb
jmp
pop
nop
std
jae
or
sbb
jecxz
icebp
add
push
xchg
jge
cmc
jae
xor
bound
imul
cmp
pop
jnp
add
jnp
dec
sbb
int3
cmp
push
lahf
pop
cmp
sti
xchg
loope
add
ror
add
test
sbb
fsincos
mov
add
outsb
push
arpl
or
sti
push
add
mov
test
test
jmp
loop
adc
add
push
inc
out
cmp
and
lret
lret
pop
add
sub
movsb
lahf
test
mov
jnp
mov
sahf
stos
inc
cmp
imul
data16
jnp
or
sub
xchg
pop
imul
mov
and
mov
call
bnd
out
fstp
add
pop
inc
jmp
outsb
push
pop
loopne
jne
xchg
xlat
cmpsl
xchg
fwait
mov
push
sub
jb
jnp
lods
mov
in
xchg
dec
outsb
cmp
dec
jmp
dec
ficomps
mov
sbb
lods
cmp
sub
ret
fsubrs
call
popf
outsb
dec
repnz
test
scas
fstpt
xor
cmp
das
or
loop
js
pop
mov
scas
cmp
or
jnp
dec
and
pop
aas
jo
mov
cld
mov
xchg
addr16
nop
iret
xchg
cmp
jns
ficomps
xor
adc
and
sub
sbb
ja
clc
rorl
and
and
cltd
fisubrl
mov
cltd
aad
filds
gs
pop
bnd
aam
sub
setge
data16
inc
ss
fnstcw
jnp
int3
cs
xor
and
jnp
xor
jnp
jle
or
jnp
xor
stos
mov
add
mov
ret
movsl
repnz
jnp
fiadds
xlat
fldl
dec
push
enter
stos
adc
pop
mov
imul
sub
jl
inc
jnp
scas
pop
pop
jns
cmp
jnp
push
outsl
sub
and
sub
or
jp
aad
jns
xlat
outsl
ds
mov
add
cmpl
xor
pushf
test
int
aaa
jl
push
push
adc
scas
arpl
fstps
fwait
orl
mov
out
mov
call
test
jne
cmp
mov
mov
cmp
xchg
fcomi
or
adc
and
jnp
int3
push
outsl
push
push
repnz
inc
test
lods
addr16
push
sbb
adc
idivb
sbb
jg
and
dec
mov
icebp
sub
xchg
push
sub
ss
sti
stos
cli
dec
stc
xor
xchg
fisubl
cs
sti
mov
mov
cmc
ss
shlb
pop
jnp
mov
je
jecxz
stos
jnp
xchg
and
loope
fdivl
xor
js
push
jnp
cld
inc
filds
push
jnp
lock
jnp
jmp
not
adc
jnp
stos
insb
mov
lahf
push
fs
ret
inc
roll
pop
sti
data16
ja
inc
out
scas
mov
mov
jo
adc
dec
repz
cmp
sbbl
fdivrl
lea
adc
push
rcrl
loopne
adc
push
adc
in
dec
dec
data16
dec
fucomp
lods
leave
pop
jne
pop
jecxz
clc
iret
sub
cmp
enter
dec
pop
dec
jnp
das
arpl
push
fcoms
adc
mov
or
xor
mov
or
pop
cmp
mov
mov
jnp
test
cli
jnp
adc
js
icebp
or
test
push
jo
outsl
mov
jnp
pop
push
in
lods
sub
pop
adc
cmp
mov
mov
stc
push
daa
jnp
enter
adc
jnp
fiaddl
test
ja
iret
pop
gs
decb
pop
cmp
movsb
int3
popf
jno
test
cmpb
loopne
inc
sti
mov
out
jnp
ret
mov
pusha
mov
sub
in
out
cmc
sbb
and
fsubrp
jnp
std
repz
jg
out
jnp
ds
sub
sub
mov
xor
mov
push
scas
push
cltd
cmp
cmpb
aad
shrb
repz
dec
sbb
fmull
add
mov
inc
movsb
popf
jne
jbe
lcall
mov
cmp
push
jnp
in
jp
xor
pop
jle
imul
movsl
jnp
mov
xchg
mov
add
lea
push
jnp
cld
inc
mov
scas
addb
push
test
cmp
mov
sub
fsubl
jnp
lods
cmp
je
mov
cwtl
mov
mov
arpl
and
push
pop
xchg
sbb
pop
popa
xor
movsb
jnp
pop
arpl
data16
jl
jnp
xchg
fnsave
pop
push
mov
push
adc
imul
add
cmp
sbb
adc
xor
jmp
jnp
out
jno,pn
xchg
cmp
or
out
mov
icebp
jg
add
jnp
cmc
lcall
add
jnp
insl
jae
jg
aam
repz
dec
cltd
shl
mov
dec
cwtl
push
test
lahf
sub
rolb
popf
dec
or
sti
or
insb
mov
mov
inc
xchg
push
jnp
dec
daa
xor
aam
std
jnp
int3
sti
dec
adc
insb
gs
pop
vpcmpeqb
nop
xchg
sti
xor
xchg
lahf
data16
inc
push
mov
clc
ret
nop
xchg
inc
push
sbb
mov
add
inc
fldt
push
mov
pop
xchg
pop
mov
mov
push
cld
mov
ret
push
xchg
cmp
mov
lds
fcompl
leave
adc
mov
mov
sbbl
pop
dec
test
mov
sub
mov
out
push
aas
imul
push
call
add
adc
jns
aad
shll
mov
mov
test
xor
cltd
fs
lret
inc
mov
mov
jnp
es
mov
jnp
push
xchg
pop
xor
insl
data16
lods
test
mov
shll
loopne
cld
test
jno
adc
pop
test
pop
rcll
out
sti
insb
loop
aam
inc
jnp
add
aad
jnp
mov
xchg
sbb
mov
popf
jns
lahf
jnp
aaa
test
inc
jnp
or
bound
sub
jnp
inc
outsb
aas
xor
mov
loope
inc
mov
cmp
lcall
adc
in
push
pop
fstpl
incl
jb
add
xchg
test
rcll
outsl
jnp,pt
xor
mov
popa
jbe
jnp
pop
add
pushf
jp
loopne
mov
jne
sub
int
cmp
and
repnz
adc
lods
imul
push
mov
mov
les
dec
jno
call
jnp
frstor
inc
outsl
in
cmc
ret
lock
xchg
jg
and
inc
mov
mov
and
dec
insb
cmpsb
xor
testb
xchg
loop
jg
sbb
scas
leave
mov
sbb
mov
mov
add
and
inc
aad
add
add
mov
add
std
inc
mov
test
mov
xchg
add
int3
mov
in
jle
cmp
xor
mov
icebp
xchg
or
mov
cmp
push
sbb
adc
jecxz
jmp
jne
jl
lds
bound
cltd
int
jns
mov
nop
popl
je
dec
mov
cmp
dec
add
mov
rcr
cmp
test
jns
xorb
sbb
sub
lret
lods
nop
inc
daa
mov
call
mov
push
mov
or
xlat
sub
mov
shrl
mov
and
mov
xchg
lret
rcll
jl
push
jne
jnp
xor
adc
mov
inc
scas
bound
pop
lahf
fsubl
jnp
xchg
jge
pop
scas
fbstp
jo
out
shrb
adc
int3
lods
loopne
push
clc
dec
pop
test
test
cmc
jnp
mov
sub
sbb
ljmp
cwtl
and
mov
in
xor
jnp
or
roll
mov
cmp
sbb
cmpsb
push
mov
mov
mov
repz
pushf
add
sbb
xchg
jnp
xlat
adc
push
pop
adc
sub
dec
gs
jge
jnp
fildll
or
or
adc
test
inc
movsb
pop
std
stc
jnp
cmp
cmp
movsl
and
jnp
popa
insb
jg
jb
lods
mov
mov
into
not
sub
test
adc
or
out
jge
fdivrs
pop
and
jno
les
mov
xor
dec
xchg
in
sub
sub
pop
mov
mov
mov
call
cmp
dec
lcall
sub
rcrb
mov
stos
fwait
pop
add
je
adc
insl
and
ljmp
push
pop
sbb
jnp
movsb
adc
xchg
sub
and
xchg
jmp
cld
or
repnz
xchg
lds
pop
nop
mov
or
or
jl
push
dec
mov
jnp
in
clc
aaa
aas
xlat
mov
xor
or
cmp
punpckhbw
ja
pop
lahf
mov
gs
mov
push
das
out
mov
les
and
int
mov
std
adc
sbb
inc
xorb
ror
sti
push
dec
js
xchg
adc
push
add
out
sub
mov
dec
push
add
cmp
sub
out
fwait
mov
or
or
shrb
roll
nop
loop
fdivs
xchg
push
enter
scas
jnp
enter
cs
xor
in
pusha
pop
popa
gs
jnp
into
xor
mov
pop
cmpsl
out
jno
syscall
jnp
fdiv
jne
mov
mov
dec
daa
jnp
shll
fwait
test
loopne
std
icebp
jb
jne,pt
mov
in
jns
stos
enter
jnp
dec
and
adc
xchg
into
rcrb
sbb
scas
xor
jnp
in
push
jmp
aam
mov
jnp
inc
mov
leave
mov
cwtl
addb
xchg
xchg
jnp
or
mov
popa
int3
shrb
inc
test
pop
jnp
jg
push
subl
pop
or
stc
cmp
mov
repz
xchg
test
mov
inc
mov
inc
pop
sti
mov
cmp
push
out
shlb
sti
outsb
mov
lods
pop
jnp
nop
je
fucomip
or
test
jo
je
adc
test
jl
mov
mov
pop
movsl
loop
xchg
and
or
or
lahf
rcrb
or
lea
enter
lds
push
mov
lcall
pop
mov
mov
mov
push
loopne
adc
sub
out
sbb
mov
jp
lret
int
jnp
push
inc
lock
pop
out
xor
nop
jbe
jmp
add
lahf
sbb
stos
cmc
icebp
and
xchg
arpl
jnp
mov
push
xor
ficompl
int
xchg
pop
sbb
xchg
ljmp
cli
sti
inc
jno
addl
outsl
cmpsl
int3
fwait
cmp
inc
mov
scas
xor
mov
push
lods
sbb
cmp
mov
mov
jnp
in
inc
pop
adc
cld
test
mov
push
in
aam
xchg
ret
loop
add
xor
rol
mov
push
inc
stos
push
cmpb
test
cmp
mov
imul
mov
jnp
inc
dec
lock
arpl
mov
addr16
push
sub
aad
pop
lahf
inc
jno
aas
std
fwait
jnp
adc
mov
sbb
pop
jnp
in
mov
loop
sub
xor
pushf
xor
fwait
daa
aad
and
mov
popf
cltd
mov
jecxz
in
in
inc
dec
fwait
xlat
dec
lahf
sahf
cmp
push
xchg
popf
mov
clc
jnp
pop
mov
mov
test
lods
or
aad
stos
inc
loopne
xchg
xor
hlt
dec
pop
xor
lcall
jl
sub
enter
push
mov
or
sti
sarb
pop
xchg
test
cld
mov
cmp
add
ret
cmp
shl
mov
jnp
scas
lcall
cmp
jmp
inc
mov
mov
bound
rcl
pop
loop
dec
call
fcomps
pop
jnp
scas
mov
cmc
inc
jae
insl
std
jnp
out
ficompl
pop
inc
pop
insb
in
or
sub
or
add
xchg
jnp
sbb
push
mov
and
mov
jnp
sbb
stos
ret
jns
aam
movsb
sbb
sahf
test
lahf
add
jg
mov
xchg
dec
call
ret
add
data16
mov
into
jnp
sub
lods
push
fs
inc
sub
xor
das
jnp
mov
mov
mov
inc
xor
jl
jnp
sti
jecxz
int
sub
test
icebp
hlt
mov
bnd
pushf
push
add
cmp
dec
mov
jnp
lcall
jnp
cmp
out
call
lahf
xchg
mov
mov
pusha
push
and
mov
dec
or
and
xor
int3
mov
mov
dec
mov
inc
inc
orl
and
push
test
movsb
jmp
insl
pop
xor
es
mov
cld
cmpsl
ljmp
jmp
addb
btr
setae
loope
leavew
mov
rolb
dec
and
test
push
mov
xchg
inc
jno
imul
je
scas
in
fnsave
lret
mov
pop
fidivs
push
mov
out
ret
cmp
push
jnp
int
jb
lock
mov
sbb
dec
loope
test
xchg
cld
in
addr16
rcll
gs
pushf
jae
mov
and
pop
or
std
push
sbb
mov
jnp
stos
and
roll
hlt
xchg
lock
jnp
xor
lea
xor
sbb
jmp
adc
cmp
cmp
mov
imul
popa
gs
adc
sbb
mov
mov
cmp
hlt
out
insl
or
mov
pop
pop
sub
pop
sub
in
sti
mov
xchg
mov
and
add
mov
pop
xchg
mov
lods
stos
pushf
add
ficoms
testb
dec
loop
addb
fadds
sbb
jmp
mov
mov
fcmovnbe
xchg
mov
pusha
imul
data16
add
push
xlat
bound
lahf
sbb
add
hlt
jl
sub
inc
orb
mov
test
jns
stos
addb
jnp
mov
dec
push
adc
jnp
fmulp
pop
xor
sti
xchg
xor
mov
jnp
fistps
push
cmpsl
arpl
mov
pop
sub
fcoms
push
xchg
xchg
sarl
roll
jnp
adc
pop
jnp
repz
loope
xchg
push
add
icebp
jecxz
xchg
pop
cmpsb
iret
pop
addr16
mov
jnp
int3
shrl
inc
jbe
jnp
sar
arpl
sahf
outsb
mov
xchg
push
xchg
shll
ss
mov
jle
push
int
mov
xchg
aad
pusha
sahf
xlat
mov
mov
hlt
inc
jg
and
mov
or
cmp
stos
mov
cmp
test
mov
mov
add
jnp
fwait
jl
pop
sub
jbe
cs
jnp
movsb
pushf
mov
xchg
outsb
xor
push
gs
dec
and
ror
cs
out
faddl
or
mov
xor
pop
sub
sti
push
xchg
in
in
xchg
cmpb
movsb
and
sti
sbb
bound
sti
dec
and
jnp
dec
ret
faddl
sbb
into
pushf
jle
ret
dec
arpl
cld
rolb
mov
mov
sub
and
or
test
int
push
mov
mov
xchg
cmc
cmpsb
sahf
addr16
aad
insl
fisubs
stos
arpl
jmp
mov
daa
sub
sub
mov
ja
ret
inc
in
in
int
rcrb
xchg
fwait
cmp
jnp
mov
stos
pop
xchg
div
jnp
outsb
fnsave
jnp
sbb
lahf
test
fnstenv
jb
push
fidivrl
loope
lahf
movsb
mov
xchg
xor
fwait
add
jnp
inc
shll
insb
jmp
jnp
arpl
sbb
dec
jle
shrl
cmp
mov
adc
sbb
push
jnp
push
stos
sbb
es
cmpsb
cld
int
jge
or
jnp
subl
adc
jnp
inc
xchg
lods
push
xor
sub
cmp
mov
outsb
je
inc
mov
lods
ds
cltd
or
or
mov
pop
test
sub
pop
add
xchg
mov
mov
sbb
outsb
hlt
lret
orl
ret
xchg
mov
mov
jns
je
arpl
test
ret
pop
pop
inc
xchg
shrb
stos
cwtl
lcall
rorb
push
out
jg
inc
add
jle
dec
and
sbb
jl
xor
sbb
xlat
mov
xchg
mov
movsl
pop
fisubs
rcl
mov
mov
je
jnp
mov
in
mov
hlt
test
insl
xchg
or
movsl
mov
sub
cli
inc
imul
lret
jg
js
dec
cld
scas
bnd
and
xchg
outsb
fildl
mov
xor
outsl
sarl
mov
mov
jp
pop
xchg
mov
cmp
andl
pop
cmpsl
imul
inc
iret
out
jb
idivb
cmp
pop
dec
stc
xchg
fiadds
push
dec
mov
andl
jnp
or
push
adc
cmpb
jnp
icebp
xor
nop
mov
push
cmp
dec
pushf
xor
gs
in
cmp
add
outsb
pusha
daa
sbb
lock
mov
push
adc
jnp
sahf
sbb
xor
repz
jnp
sub
and
add
stc
push
leave
loopne
sub
sarb
je
sbb
mov
xchg
addr16
std
add
stc
mov
hlt
cltd
inc
sub
xchg
jmp
sbb
icebp
cli
in
jnp
je
add
ja
jnp
xor
in
in
jnp
popf
sbb
xchg
jl
pop
cltd
call
inc
arpl
mov
mov
dec
repz
leave
pop
cmp
xchg
lds
aam
push
imul
lock
pop
xchg
scas
push
mov
dec
add
cmp
lcall
xchg
inc
mov
mov
push
mov
fwait
mov
arpl
jnp
lret
xchg
icebp
dec
out
xor
cmpsb
inc
adc
enter
sbb
cmpsl
jnp
push
lret
mov
mov
xor
popf
stc
pop
jnp
add
jbe
jnp
xchg
dec
lock
adc
cs
cmp
rorl
pop
jb
cmp
in
jnp
pop
pusha
test
mov
jb
sti
mov
mov
loop,pt
jnp
lret
lahf
cmc
and
jnp
mov
mov
sub
scas
mov
jnp
mov
cltd
jae
cli
jnp
out
fs
arpl
jnp
aas
mov
xor
lret
sar
addb
ret
push
pop
sub
mov
mov
rcr
dec
jnp
mov
mov
jnp
pop
data16
push
xor
jmp
cmpb
lret
and
sbb
mov
push
insl
push
test
mov
or
pop
jge
jnp
jb
xchg
cmp
aad
jnp
movl
stos
out
jnp
add
fisubrs
int3
jnp
xor
imul
mov
push
lock
pop
pop
cmp
jnp
pop
pop
adc
and
mov
outsl
int
mov
xchg
add
int3
gs
stc
or
pop
adc
cld
cmpsl
jnp
pop
and
push
adc
inc
xchg
inc
aad
ds
dec
pop
sub
mov
pop
scas
add
ret
sbb
push
inc
fisttpl
incl
repnz
sbb
or
cmp
cmp
rcll
mov
fnstcw
ja
jnp
call
mulb
lcall
test
xchg
or
or
mov
add
pop
test
jnp
movsl
shll
xchg
aam
out
xchg
and
inc
pop
test
lahf
jl
mov
stos
stc
outsb
lcall
out
lahf
mov
cs
xor
xlat
lods
test
repnz
je
jnp
adc
jns
jnp
repnz
xor
mov
dec
jnp
leave
xor
ret
cwtl
jg
xchg
sahf
loop
dec
aas
jnp
cld
jbe
int
stos
jnp
add
ljmp
orl
xchg
sbb
mov
rcrb
jmp
ljmp
dec
and
es
or
mov
push
dec
je
imulb
repz
cmp
push
gs
cmp
test
movsl
jecxz
movsb
dec
mov
push
mov
xchg
dec
aam
or
out
xchg
outsb
xchg
movsb
xchg
fistpl
cmp
jg
xor
push
fwait
cmp
cmpb
test
stos
xor
imul
adc
mov
dec
clc
jne
inc
fwait
lock
outsb
mov
jecxz
shlb
jp
fisttpl
jnp
xchg
mov
inc
pushf
rcl
sti
pop
aam
sub
jnp
cld
out
mov
repnz
jmp
test
jecxz
cmp
ja
lret
pop
imul
inc
adc
mov
popf
cmpsl
ja
shlb
fs
rcll
mov
scas
or
pushf
xchg
out
jno
adc
jmp
jmp
sub
dec
jp
sub
lock
and
ss
xor
sti
jle
sahf
jge
jnp
dec
mov
lahf
jnp
outsl
arpl
imul
inc
add
mov
mov
pushf
jge
repz
push
popf
jmp
inc
test
insb
or
push
shll
jbe
inc
inc
out
jnp
mov
inc
sti
cmp
repz
sbb
mov
test
mov
test
jmp
dec
test
cmc
fstpt
sbb
movl
push
jnp
mov
ret
std
gs
mov
jnp
jmp
rorb
push
mov
add
dec
push
adc
fidivrs
add
jmp
jnp
lods
movsl
ret
cmpsl
jo
inc
jnp
add
ds
jl
mov
mov
daa
inc
mov
jmp
push
jnp
cmp
cmp
jnp
mov
jns
popf
outsl
mov
xor
clc
add
inc
jnp
mov
rcrb
adc
dec
dec
mov
popa
lock
mov
mov
mov
push
jnp
loopne
mov
xchg
adc
iret
fsubr
outsl
ljmp
jnp
sbb
clc
sub
jnp
or
sbb
int
mov
in
or
movsb
sbb
or
sub
jnp
loope
or
mov
sbb
jne
push
jnp
jle
sub
and
jnp
rol
or
out
or
sbb
aaa
jnp
leave
popa
std
sub
xchg
pop
cmp
jnp
adc
push
sbb
jnp
out
dec
fs
data16
ss
xor
mov
adc
push
mov
pop
gs
inc
jnp
jb
mov
dec
mov
int3
jno
push
mov
and
mov
loop
call
sub
dec
xchg
fsubr
data16
mov
aaa
mov
gs
addl
insb
fistpl
cmpsl
xchg
sti
mov
dec
mov
cmp
lcall
sti
daa
mov
mov
inc
in
sbb
cs
daa
lret
mov
aad
lcall
jnp
mov
inc
cwtl
jnp
or
add
cmp
adc
adc
out
push
dec
xchg
cmp
pop
repnz
jmp
xlat
mov
cltd
mov
dec
add
jnp
hlt
cmc
cwtl
xor
xchg
adc
adc
test
fstpl
ror
xchg
inc
ljmp
cmp
test
movsb
imul
jnp
enter
filds
out
fnstcw
nop
popf
arpl
cmpsl
jnp
cmp
fstl
push
loopne
jnp
add
sahf
outsb
inc
fsubrs
dec
mov
addr16
fcompl
fiaddl
clts
rclb
aam
push
arpl
inc
jnp
xor
cmp
scas
cmp
xchg
adc
outsb
ret
xlat
arpl
cmp
std
insl
jnp
push
jl
mov
das
popf
shll
xchg
outsl
ja
imul
dec
xchg
dec
pusha
inc
push
enter
xrelease
inc
imul
pop
inc
stos
inc
cmp
jnp
dec
pop
lahf
fsubrs
xlat
jnp
sbb
fiadds
adc
outsl
aam
jnp
ror
test
adc
xchg
xchg
or
clc
fs
xlat
mov
lds
or
daa
xchg
dec
cmp
push
mov
mov
out
xlat
or
xor
sbb
ja
jecxz
xchg
movsb
imul
jl
dec
lcall
mov
dec
insb
in
ret
xchg
inc
jnp
aaa
jecxz
outsl
sbb
fwait
mov
mov
std
pop
inc
sub
jnp
push
enter
imul
ret
sub
js
ds
dec
or
xchg
xor
mov
lds
mov
rorb
push
cltd
inc
pop
sahf
xchg
cmpl
sarb
rcl
jnp
ret
fisubrl
xor
outsb
lahf
pop
arpl
sub
push
and
dec
out
push
xchg
xor
je
jmp
xor
mov
mov
leave
jae
sub
mov
sarl
cmpsb
cmpsl
test
aas
xchg
adc
mov
movsb
inc
and
fistpll
mov
pusha
insl
cmp
xlat
sbb
push
mov
dec
push
dec
and
mov
subl
xchg
and
sub
mov
mov
mov
push
gs
pop
push
jl
dec
mov
mov
dec
or
xchg
xor
pop
xchg
jno
jae
jecxz
sbb
mov
sub
nop
stc
aam
mov
arpl
push
cmpsl
sti
lods
movsl
jae
cmp
pop
je
push
stos
adc
cwtl
inc
rol
jge
fcmovu
jb
adc
dec
adc
mov
js
popf
xchg
stc
mov
outsb
sub
leave
pop
xor
leave
jecxz
sarb
cmpsb
orl
mov
push
push
mov
test
cmp
xchg
test
shlb
pop
sub
xor
sti
mov
sbb
out
mov
lcall
mov
leave
jnp
gs
pop
jecxz
ss
aaa
sub
cmp
adc
mov
nop
fs
icebp
lcall
push
cmp
cmp
flds
insl
xchg
pop
jnp
jp
dec
cmp
hlt
leave
cmpsb
jnp
mov
cmpsb
add
xchg
jno
bound
aaa
subl
sub
pop
arpl
scas
das
xor
fsubrs
sbb
inc
pop
leave
xchg
jns
arpl
movsl
stos
mov
mov
repnz
pop
ja
or
dec
lcall
dec
fucomi
jae
dec
fwait
jecxz
xchg
jle
xchg
jmp
sub
popa
test
pop
test
adc
scas
adc
cwtl
outsb
mov
cmp
xchg
and
adc
mov
sub
mov
cs
pop
xchg
mov
dec
xchg
jbe
mov
mov
repnz
jnp
aaa
test
or
rorl
or
add
int
loop
rolb
lock
mov
sti
mov
jg
dec
addr16
jnp
je
fstl
jnp
test
es
cmp
repnz
test
mov
jnp
sub
pop
jnp
repz
adc
or
adc
in
jmp
inc
imul
test
xor
jp
adc
cltd
dec
into
std
jl
push
sbb
out
aas
imul
pop
scas
scas
fsts
adc
jnp
aaa
push
lret
pushf
add
mov
aaa
push
push
pusha
add
ficompl
in
outsl
cmp
inc
adcl
jg
cmp
lea
dec
push
ss
jae
pop
push
add
jmp
jns
pop
mov
mov
fldcw
push
add
jnp
jmp
sbbl
dec
adc
fnstenv
inc
mov
lods
sub
cmc
arpl
sub
or
mov
repnz
xor
sub
in
outsb
fnstsw
jnp
test
mov
pop
sub
xchg
nop
stos
popa
out
fwait
xlat
ret
jecxz
lock
out
fldt
bnd
pop
data16
push
mov
xor
pusha
lock
fcompl
in
or
movsl
or
test
cmp
repnz
jnp
daa
popf
je
pop
nop
mov
test
inc
fucompp
jns
mov
into
xchg
push
jle
jg
xor
sub
out
roll
ja
jns
push
xlat
xchg
out
loope
cltd
jnp
adc
fsub
ds
mov
push
test
ja
aaa
stc
pusha
pop
lahf
jnp
inc
or
pushf
lcall
mov
xor
sar
mov
idivb
jnp
dec
ss
shll
std
stos
fucom
jnp
jmp
xor
mov
cltd
sbb
mov
jbe
or
iret
stc
cli
leave
jnp
out
cs
jg
jnp
daa
mov
lcall
mov
cmp
in
test
movsl
pop
addr16
lods
mov
mov
jnp
das
cmp
mov
jnp
pop
popa
lahf
cltd
mov
jnp
push
pop
xor
out
in
adc
add
mov
inc
add
mov
sbb
xchg
sub
mov
mov
leave
cmp
add
aam
xor
sahf
push
mov
stc
pop
mov
sbb
mov
daa
mov
mov
call
inc
sbb
dec
cli
mov
cmpsb
or
aad
inc
inc
gs
or
lods
movsl
insl
push
or
fdivp
jp
pop
mov
repz
adc
xchg
inc
push
pop
imul
gs
jnp
mov
adc
pop
xchg
jae
push
iret
mov
js
mov
mov
jae
jae
jnp
jg
mov
jnp
add
repnz
pop
and
aas
mov
stos
pop
rorb
adc
mov
popa
aaa
jnp
movsl
in
sti
aad
dec
popf
jnp
mov
inc
bound
push
repz
das
add
jo
in
push
int
rcr
push
leave
sbb
lea
and
shl
mov
fistl
mov
jge
mov
jnp
jp
adc
in
dec
cmp
sahf
or
mov
rcr
adc
inc
and
pushf
or
aad
outsb
push
cmp
sub
jl
fdivs
in
sbb
xchg
add
ret
cmpl
mulb
or
xor
dec
nop
sbb
dec
jnp
mov
or
add
jmp
pop
or
cmc
jns
jb
jnp
add
push
sbb
xor
adcb
sbb
bound
add
adc
jnp
cmp
pop
mov
mov
pop
mov
cltd
dec
xchg
lock
loope
imul
movsl
mov
jnp
inc
adc
sbb
cmpsb
lret
rorb
sub
mov
scas
test
idiv
or
pop
repz
sub
fmulp
scas
pop
xchg
mov
lret
jnp
xor
std
xlat
imul
xchg
inc
out
fistpll
pusha
push
mov
mov
sarb
and
mov
mov
daa
leave
arpl
jmp
dec
inc
sbb
pushf
repnz
adcb
lds
aas
mov
fstpt
cmc
insl
test
push
or
in
mov
fldcw
lea
cmc
pushf
hlt
xor
xor
int3
adc
jae
jbe
mov
jo
pop
nop
rep
adc
jnp
das
push
and
xchg
mov
push
test
hlt
and
jmp
xor
pop
mov
jnp
loopne
movsb
in
insb
inc
jnp
or
inc
lods
pop
stc
mov
fbstp
pushf
mov
ja
dec
dec
xchg
inc
inc
lods
push
rorb
push
cli
imul
mov
xlat
push
cmp
gs
lds
scas
push
jno
jge
rcll
jnp
dec
stc
sub
jae
pop
xor
negb
js
mov
jne
je
nop
aaa
outsb
subb
sti
push
cld
mov
jno
cmc
cwtl
jl
rorb
dec
mov
mov
sub
inc
mov
inc
mov
or
test
sbb
cmp
test
mov
push
mov
cmp
adc
popa
insl
mov
je
adc
jnp
or
movsl
adc
mov
xchg
inc
mulb
add
mov
ret
adc
jnp
mov
stc
or
mov
mov
les
add
xor
jnp
cmp
loop
jnp
push
hlt
mov
jnp
adc
bnd
mov
iret
jnp
ret
out
pop
outsb
jnp
stc
cwtl
jae
cltd
and
mov
call
and
jnp
push
cmpsb
fisubs
jmp
andb
daa
cmc
arpl
jnp
mov
sbb
mov
testb
loop
mov
mov
lods
add
ss
jnp
mov
mov
mov
jg
sbb
cmp
iret
pop
cmpb
scas
add
rcrl
xor
lods
into
jmp
jnp
jno
scas
call
cltd
out
loope
clc
xchg
sub
sbb
mov
adc
push
xchg
xor
test
jmp
adc
inc
orb
icebp
jnp
cmc
ret
inc
jb
mov
jns
adc
daa
test
mov
adc
outsb
push
fidivrs
and
sub
sti
mov
adc
sub
mov
cmpsl
jle
jp
fldcw
rcr
xchg
scas
pop
addb
bound
jge
lret
out
outsb
decl
xor
arpl
fistpl
pop
iret
xchg
mov
jnp
jmp
lods
in
jnp
push
test
cmp
sbb
cmp
sarb
and
std
iret
jnp
fs
aad
dec
mov
jnp
cld
push
andw
jge
mov
xor
sub
into
cmp
xor
daa
pushf
adc
ret
lods
je
test
dec
jne
xchg
pop
nop
out
sbb
pop
dec
inc
fbld
sub
ror
loope
mov
mov
xchg
pop
mov
icebp
xchg
lea
jne
xor
inc
outsb
out
mov
jl
cwtl
fwait
sub
jns
mov
mov
sti
jle
pop
ror
inc
mov
xchg
daa
orb
add
mov
out
lret
rcll
mov
test
mov
cli
dec
daa
imul
loop
push
adcl
adc
add
cmp
pop
mov
mov
sahf
sbb
mov
ffreep
mov
mov
fdivs
sub
dec
add
cltd
movsl
jnp
and
dec
rorb
fninit
adc
pop
xchg
hlt
out
inc
inc
repnz
nop
dec
std
loop
sti
cs
mov
aad
outsl
xchg
sarb
insl
stos
sbb
lock
mov
xchg
lahf
xor
mov
jnp
aad
pop
outsb
xchg
arpl
aaa
add
sbb
push
push
aaa
xchg
pop
pop
jl
cmp
inc
or
and
mov
xor
adc
imul
jbe
push
cltd
pop
jnp
ret
and
jb
imul
movsb
pop
xchg
add
pop
inc
sub
xor
arpl
cmp
subl
loop
add
xlat
mov
addr16
push
cmp
popf
sbb
je
daa
hlt
clc
sub
adc
inc
movsb
mov
inc
out
mov
xor
movsb
lret
aam
inc
ja
mov
jae
jns
cmp
call
jnp
sbbl
or
xor
jmp
out
lret
and
push
dec
or
jnp
ja
mov
dec
sbb
xchg
divl
loop
pushf
imul
les
and
add
push
mov
test
divb
stc
and
jnp
xor
or
jnp
lds
nop
shrl
mov
mov
gs
adc
pop
mov
adc
cmp
movsl
and
jnp
scas
pop
dec
or
cmc
lds
out
mov
add
call
clc
out
jle
fidivrl
inc
pop
jne
add
xchg
and
nop
or
xchg
pop
out
fstps
inc
fwait
loop
jnp
jo
mov
mov
xor
mov
out
pop
sub
mov
int
in
loop
mov
in
sub
xor
arpl
scas
mov
pop
inc
mov
out
pop
cltd
ret
repnz
cmpsl
jecxz
cmpsb
jnp
pop
movsb
add
in
ret
xor
cmp
ss
imul
pushf
jp
sub
mov
or
xor
insl
sub
jae
out
leave
test
test
inc
scas
test
test
shrb
xor
jno
push
pop
icebp
push
mov
xlat
xor
cmpsw
repnz
daa
adc
inc
repnz
pop
push
mov
call
mov
test
push
jnp
aam
mov
sbb
inc
or
dec
out
jnp
loopne
xchg
enter
jnp
add
clc
sub
ja
sbb
pop
jns
mov
add
ja
jnp
mov
repnz
pop
and
outsb
jnp
sub
or
repz
test
std
popa
fsubrp
jnp
incb
jae
enter
push
das
test
pop
push
ret
jno
out
pushf
push
int
push
lahf
mov
lcall
daa
xlat
xchg
push
test
lea
mov
mov
addr16
add
cmc
push
xchg
fs
pop
imul
cwtl
jnp
les
cmp
test
jmp
jnp
push
stos
sarb
ja
xor
mov
lock
cmc
lods
test
xchg
pop
push
dec
lret
jnp
adc
add
test
push
imul
mov
stc
ret
outsb
jnp
xor
testl
add
test
jbe
es
mov
push
mov
or
out
mov
sub
cli
xlat
jg
hlt
jbe
mov
xlat
add
push
out
shlb
cmp
ja
xchg
scas
outsb
pop
sub
insb
stos
or
jb
pop
sub
mov
out
in
out
or
jo
jno
insb
adc
movsb
arpl
mov
push
inc
sbb
xchg
stos
xchg
and
repnz
idivl
xor
xchg
xchg
push
jnp
orb
adc
sub
cmc
xchg
fdivrl
mov
dec
push
cmp
xlat
jnp
adc
js
mov
add
pop
xchg
jae
and
mov
xchg
sahf
mov
sbb
ret
cmpb
jl
sbb
cmpsl
xor
jnp
dec
pop
mov
mov
test
sarb
in
hlt
enter
ficomps
sbb
fiaddl
ret
cmpl
pop
adc
loopne
pop
and
push
push
dec
fwait
mov
mov
push
pop
cmpsb
sub
jecxz
nop
mov
push
pop
outsb
jg
test
fs
hlt
test
addl
fistps
mov
jle
push
inc
add
aam
inc
mov
jne
xchg
mov
roll
mov
inc
jae
shll
push
pushf
mov
or
jnp
fcoms
sti
icebp
fidivrl
ss
cmp
or
dec
or
jae
outsb
cltd
sbb
out
sti
andb
rcl
shl
or
jnp
lods
adc
mov
inc
shll
xchg
aas
and
jnp
in
icebp
out
push
sbb
insb
ds
sbb
outsl
sub
iret
test
loop
pushf
xchg
in
test
push
mov
pusha
add
lahf
jnp
std
int
xchg
pop
sti
jnp
cmp
cmp
call
nop
xchg
je
ret
fisubrs
dec
movsl
add
lcall
out
xor
in
push
hlt
cmpb
mov
leave
pop
test
inc
flds
stos
push
sub
mov
loope
jnp
in
imul
jnp
sub
mov
push
out
dec
adc
adcl
mov
jge
xor
pop
adc
and
scas
push
mov
mov
addr16
cmp
xor
jnp
jbe
jg
gs
fmuls
mov
mov
push
jg
adc
aam
in
jb
xchg
popa
or
add
outsl
gs
mov
or
cmp
jmp
test
rcr
dec
mov
dec
ljmp
jnp
xor
xchg
aaa
mov
push
cld
add
cmp
pushf
push
jnp
and
add
push
gs
mov
mov
dec
dec
and
cmp
enter
pop
outsb
jl
mov
cli
aad
and
lret
inc
mov
imull
sarl
adc
mov
sub
ret
jnp
ret
sbb
push
jnp
and
stc
int
push
xor
cmp
xor
cmpsl
loop
mov
mov
inc
dec
xor
xchg
inc
jecxz
xchg
mov
fistl
pop
and
jb
int3
aad
lds
loopne
push
jnp
fcompl
outsb
mov
mov
cli
xor
pushf
clc
rorb
or
jnp
test
mov
and
cwtl
popa
mov
outsl
jo
add
mov
lahf
enter
stos
nop
xchg
nop
push
outsl
loop
outsl
jnp
cmp
roll
stc
imul
or
cmp
mov
and
sarl
aas
inc
daa
repz
xchg
xchg
dec
mov
aaa
cmpsl
cmp
lcall
adc
test
mov
push
push
jle
adc
sub
iret
jg
jnp
repz
clc
cmp
or
insl
outsb
jo
sbb
sbb
push
loopne
and
ds
sub
xlat
cmpsb
cli
or
pop
inc
jno
adc
or
mov
out
mov
repnz
jnp
mov
lret
sub
mov
dec
xor
push
push
jnp
dec
inc
or
inc
mov
jnp
sbb
add
stc
sti
mov
icebp
xlat
mov
loopne
mov
cmp
xlat
test
xlat
or
jbe
stc
adc
inc
and
popf
arpl
pusha
stos
fildl
and
and
or
jo
ja
dec
shlb
loopne
adc
jnp
clc
dec
inc
jg
nop
push
sub
mov
pop
xchg
sub
sbb
jnp
and
out
xchg
jge
mov
jnp
dec
jecxz
fidivrl
pop
cmp
sbbl
jg
sbbl
sub
pushf
mov
sbb
imulb
cld
stos
test
test
mov
sub
dec
mov
sbb
push
jns
push
in
adc
jnp
xchg
dec
add
fbstp
jnp
outsb
mov
leave
xor
xchg
shrb
mov
jmp
or
in
addr16
outsb
xchg
rorb
es
rcr
clc
clc
jnp
jae
ss
adc
sbb
jnp
scas
mov
in
jnp
or
decb
or
jnp
jle
cmp
stc
daa
jnp
push
ret
aad
iret
mov
test
scas
or
or
and
xchg
shl
push
cmp
test
cmpsb
and
jnp
sbb
or
xchg
sti
hlt
out
jg
mov
aam
mov
jecxz
loopne
jnp
xor
jnp
repz
sub
inc
dec
jnp
or
loope
arpl
push
loop
sub
cmp
ret
popa
jg
leave
pop
jnp
push
fisubrl
fwait
jnp
out
pop
cld
pop
mov
push
jg
mov
imul
test
inc
lret
mov
xchg
cmp
test
mov
xor
mov
add
dec
push
fildl
scas
lock
jmp
push
js
mov
or
jmp
insl
push
sti
cmp
cld
int
and
jnp
nop
sub
jne
xor
jmp
jnp
and
fadd
or
stc
imul
jnp
int3
sub
subb
xor
out
shr
sub
mov
loop
lods
lret
add
dec
fwait
popa
adc
lret
nop
int
sti
outsb
aas
mov
mov
inc
push
in
jmp
jnp
xchg
ret
inc
add
loope
lahf
xor
sahf
xchg
loop
scas
push
call
aas
push
gs
clc
test
lret
jno
cmpb
cmp
aas
hlt
cs
xor
sti
fwait
jl
or
xchg
rolb
push
mov
pusha
adc
adc
and
mov
clc
leave
or
inc
into
xchg
push
out
jne
shll
hlt
pop
jp
popa
ficoml
ljmp
lds
dec
pop
mov
lahf
cld
mov
dec
mov
insw
fisubl
stos
dec
xchg
jno
outsb
adc
ficomps
jmp
adc
or
fcompl
arpl
aas
arpl
test
add
jns
movsl
sub
mov
fisubs
imul
xchg
fldt
in
mov
mov
sti
xchg
jge
into
cmpsb
cmc
mov
pop
cmp
jnp
out
dec
imul
push
ret
ja
jnp
shrl
mov
int3
loope
adc
iret
push
inc
dec
or
enter
arpl
rorl
ficoms
sub
shrb
cmp
mov
inc
jmp
mov
fwait
cmp
mov
jnp
xor
fstpl
pop
xchg
jp
loope
add
clc
push
xchg
sub
daa
arpl
jnp
lcall
jnp
sbb
jnp
shlb
mov
leave
cmpsb
mov
dec
jnp
lods
cmpsl
popf
mov
pop
pop
pop
stos
jmp
jmp
add
movsb
jp
jnp
lods
and
jnp
inc
mov
mov
inc
pop
push
addr16
cltd
mov
jbe
lds
fs
fsubl
jno
push
mov
or
nop
push
insb
mov
lcall
xchg
push
aas
mov
in
sti
or
test
imul
bound
out
clc
jnp
sub
mov
les
pop
push
ret
xchg
jnp
ds
pop
sbb
stc
pop
pushf
repz
inc
push
rcrl
fcmovne
int
mov
sub
test
sti
mov
in
jnp
pop
jg
rcl
mov
es
jnp
jecxz
repnz
mov
push
repz
sub
push
lods
inc
mov
xchg
push
fwait
loope
xchg
orb
icebp
jnp
in
pushf
push
sub
dec
gs
mov
shl
xor
dec
jnp
inc
orl
ljmp
pop
cwtl
cmp
dec
popa
mov
mov
imul
sub
loopne
dec
push
push
xchg
sub
lret
lock
fs
or
rol
fistpll
or
adc
fstps
add
pop
out
insb
jnp
test
sub
aaa
and
test
ret
out
hlt
roll
out
inc
inc
jnp
pop
xchg
mov
jnp
std
and
pop
adc
or
mov
jnp
pop
lock
into
add
cltd
jnp
iret
mov
test
mov
lcall
push
sti
cmp
inc
mov
out
arpl
lahf
cs
cmp
lea
pop
daa
sti
hlt
aaa
loope
push
ror
scas
bound
shrb
mov
insb
sti
loopne
jns
mov
mov
jp
fs
mov
std
cmp
cwtl
lds
adc
dec
aad
jnp
hlt
or
mov
out
stos
stos
pop
call
adc
adc
jl
dec
popf
repnz
mov
adc
push
jo
in
sbb
movsl
sub
inc
sti
inc
aad
add
cmpsl
pop
cmp
outsb
imul
xchg
int
ds
cli
jnp
cmp
out
outsb
ret
xchg
sub
jnp
clc
repz
fldenv
mov
lock
jns
mov
inc
stos
adc
mov
dec
pop
xchg
cwtl
mov
jnp
cmp
addl
call
data16
in
jnp
dec
xchg
enter
jmp
xor
idivl
xor
add
pop
cmp
or
mov
jnp
sub
out
loop
sbbl
adc
scas
or
aaa
stos
ret
aam
or
test
lea
cmp
aaa
shrl
sbb
sub
mov
repz
mov
jp
leave
fdivrl
adc
outsl
jnp
jne
xor
jnp
mov
fucomip
test
ret
jb
mov
addr16
sti
into
rclb
adc
add
jnp
dec
outsl
adc
jb
or
xchg
jnp
xchg
pop
mov
pop
jb
xor
movl
pop
lret
push
jnp
push
movsb
mov
mov
test
pop
push
stos
sub
jnp
sti
push
idivl
add
push
test
sti
mov
jmp
jnp
jb
scas
stos
cltd
sahf
mov
sub
or
enter
pcmpgtw
jg,pt
xchg
jnp
orb
repz
imul
sub
test
lods
data16
mov
jp
sbb
jns
mov
fidivs
jnp
dec
xchg
imull
mov
in
hlt
sub
int
or
fs
xchg
pop
in
in
add
rcr
lret
dec
cwtl
sti
fwait
les
jbe
and
cmp
loop
fwait
mov
pusha
rorb
mov
sbb
sbb
jl
inc
mov
push
stos
clc
inc
or
push
jnp
mov
adc
mov
loopne
sbb
or
xchg
outsb
pushf
arpl
inc
jmp
fisttpll
add
cmp
xlat
fldt
jl
imul
pop
daa
popa
xchg
outsb
sahf
dec
add
test
test
arpl
sub
mov
stos
cmpsl
jl
sbb
in
push
cmc
dec
in
or
lret
xchg
inc
rcl
or
adc
outsb
cmp
out
push
stc
mov
mov
cmp
jb
adcl
sbb
adc
inc
mov
jnp
pop
cmp
dec
push
add
pop
adc
lahf
lds
push
cmpsb
movsb
or
mov
pop
ss
outsl
cmpb
inc
cmp
mov
mov
sbb
xchg
dec
lahf
insb
fdivrl
push
and
inc
jnp
punpckhdq
pop
or
jg
mov
shll
jnp
rclb
and
and
inc
into
and
adc
jnp
imul
jg
adc
insb
and
push
lret
test
in
cmp
push
lods
or
jmp
jnp
sub
adc
pop
dec
adc
mov
outsb
mov
loopne
cmpsb
js
das
inc
mov
xchg
mov
mov
loope
inc
inc
adc
xchg
sbbb
push
push
shl
mov
das
inc
jnp
int
dec
in
cmp
dec
jnp
mov
pop
loopne
or
and
jnp
jl
into
and
jnp
outsl
inc
dec
dec
mov
xchg
xchg
sbb
adc
cld
rol
jnp
out
and
mov
out
fistps
repz
jae
fsubl
jge
inc
stc
push
jnp
jmp
ret
sub
adc
jnp
pop
add
test
mov
jp
call
je
fnstenv
push
ja
std
jnp
dec
inc
sti
inc
jecxz
push
fldt
call
pop
out
ficompl
testl
jle
outsb
stc
push
mov
jno
test
sub
push
mov
cmp
mov
ficomps
std
dec
hlt
loope
rcl
xor
leave
int3
mov
hlt
outsl
dec
add
jb
das
sti
out
shlb
adc
bound
dec
shrl
jnp
arpl
push
add
jnp
sub
adc
pop
sbb
mov
cli
jnp
pop
mov
aaa
clc
mov
cmp
dec
cs
test
clc
xor
cmp
pop
test
sarl
xor
pop
add
mov
sub
outsl
jnp
mov
mov
test
mov
xor
stc
add
scas
fnstsw
dec
mov
or
pop
sarl
cld
gs
and
jnp
aas
cmp
jns
pop
jb
inc
dec
pop
subb
sbb
call
inc
scas
imul
add
jne
sbb
mov
and
mov
ja
lret
jnp
out
cmp
addl
mov
lods
sahf
mov
mov
stos
sub
adc
inc
arpl
or
cld
jnp
sbb
dec
test
push
repnz
xchg
jmp
or
pop
out
lcall
into
push
mov
sub
jnp
fldcw
or
adc
mov
sbb
loopne
push
jnp
out
mov
jnp
int
pop
test
lret
inc
stos
sub
fsubs
push
pop
notl
jnp
xorl
adc
xchg
dec
sbb
sub
outsl
push
lods
pusha
fcoml
mov
push
stos
pop
mov
pushf
idivl
sarb
jge
cmp
shl
pop
fdivrl
ljmp
mov
roll
adc
lea
insl
test
mov
test
imul
mov
cmp
adc
mov
jnp
popf
fsubrs
out
cli
push
test
lcall
xchg
cmp
adc
jbe
out
push
jnp
enter
nop
adc
fistpl
pminsw
in
or
dec
xchg
cli
pop
outsl
inc
mov
cmpsl
mov
test
in
enter
arpl
outsl
shlb
call
andl
leave
jl
cmp
mov
xor
xchg
jp
jns
inc
push
sti
data16
sarb
cltd
inc
or
mov
jnp
pop
push
insb
inc
adc
jnp
gs
jae
lret
add
outsl
sub
sti
and
bound
daa
push
stos
mul
xchg
lds
sbb
lds
push
xrelease
adcl
jecxz
jmp
int
out
xchg
aad
icebp
xor
pop
nop
jle
sbb
jp
sbb
inc
push
jnp
add
push
pusha
jge
mov
jae
mov
mov
jnp
mov
inc
mov
ret
mov
jnp
aad
add
mov
mov
cmp
jnp
xor
out
mov
mov
aas
lret
mov
iret
inc
dec
in
jg
cmp
outsb
loopne
into
mov
add
inc
fisubl
mov
fstl
test
test
nop
ja
pop
xchg
addr16
or
fsubs
jns
jl
lds
and
scas
rol
add
jnp
push
test
aas
lahf
movswl
sti
int3
scas
or
sub
xchg
xchg
inc
mov
sti
adc
arpl
cmp
jmp
test
fisttps
nop
push
pop
mov
lods
stos
dec
ret
icebp
fistps
jnp
lahf
fnstsw
add
inc
out
in
mov
jbe,pt
mov
xchg
xor
sub
mov
jbe
cltd
xchg
pop
std
sbbl
push
dec
mov
mov
or
sti
push
inc
mov
fs
adc
jnp
jmp
mov
cmp
or
jl
jnp
cwtl
insb
cmp
jnp
fiaddl
sub
inc
outsb
mov
push
xchg
pop
push
xor
stc
mull
sub
stos
scas
jnp
inc
mov
pop
jnp
out
or
dec
jge
test
loopne
and
pop
arpl
fnstcw
pop
add
lods
fsts
daa
daa
push
push
mov
mov
jecxz
rolb
xor
sahf
sbb
adc
repnz
data16
popf
mov
lock
dec
mov
push
fistl
jg
mov
mov
or
arpl
outsb
subb
or
jbe
rcr
cmpsb
gs
inc
cmp
push
sahf
aam
add
bound
push
mov
ljmp
jle
jp
xchg
fwait
aam
push
fistps
ds
jno
inc
iret
mov
inc
mov
je
mov
pop
scas
and
fwait
mov
add
jp
pop
popa
jmp
inc
or
repnz
and
stos
adcl
push
cmp
adc
adc
push
lods
jnp
gs
mov
cmc
mov
fs
cltd
sbb
iret
pop
and
je
jmp
incl
repz
pop
mov
out
fisubs
cmpsl
mov
mov
push
push
repnz
daa
jo
enter
xlat
jnp
mov
add
inc
jbe
aam
movsb
ja
jnp
mov
aad
mov
loop
call
daa
sub
push
test
mov
jnp
or
pop
xor
bound
clc
and
fnstsw
stc
imul
in
ja
and
dec
clc
lock
negl
jp
xchg
xchg
outsl
arpl
idivl
into
hlt
inc
mov
iret
lret
sub
mov
gs
pop
fistps
jnp
into
clc
sbb
mov
jae
jnp
adc
sarl
sbb
btr
jnp
push
and
fs
and
je
xor
mov
xchg
in
mov
jg
cmp
pop
xchg
sti
adc
pop
push
leave
outsb
mov
test
mov
xchg
pop
jns
loopne
pop
xchg
mov
and
jl
or
int
adcl
stos
aas
jle
or
cli
jnp
lods
mov
mov
jnp,pn
or
mov
jnp
test
pop
int3
mov
stc
jnp
mov
inc
add
or
or
stos
in
jmp
mov
and
and
push
pop
jnp
mov
std
aad
xchg
add
lods
or
mov
jnp
jb
inc
bound
pop
in
scas
or
ja
cwtl
leave
das
and
jnp
add
pop
adcb
ret
insb
push
pop
movsl
cmpsl
and
xchg
icebp
mov
and
call
jno
pop
xor
inc
adc
ss
sti
xchg
jne
adc
lret
js
into
in
std
mov
sti
roll
push
pushf
pop
in
dec
mov
ret
xchg
addl
fistpl
je
cmpsl
aam
mov
jnp
lods
loopne
int3
jmp
xlat
cmp
dec
clc
jb
jp
int
test
adc
ds
js
sbb
ja
push
jnp
ret
mov
sbbl
scas
jnp
add
jp
imul
push
cmp
rolb
sbb
cmp
cltd
incl
test
jne
je
xchg
push
push
sbb
xor
xor
leave
dec
gs
mov
inc
ds
sub
js
roll
sbb
push
pop
cwtl
popf
or
mov
lret
mov
lods
idivb
mov
jg
cmc
pop
dec
in
testl
mov
int
add
pop
sbb
add
fildl
out
sub
adc
sbb
arpl
in
je
inc
xor
aam
or
and
inc
popa
push
jnp
mov
jl
pop
sarl
out
sub
int
iret
nop
je
and
push
jnp
arpl
mov
adc
xchg
xchg
sbb
dec
cmp
jbe
xor
xlat
jnp
adc
fwait
and
push
test
xor
jno
lds
lahf
imul
jnp
mov
adc
lahf
shll
xor
ficoms
cmp
push
rep
out
xchg
pop
cmp
movsl
add
arpl
mov
shrl
in
pusha
push
out
rclb
movq
mov
push
filds
stos
testb
add
aas
pop
pop
push
addr16
fcom
jmp
or
xchg
test
sti
popa
adc
jnp
aaa
daa
movsb
xor
sti
sbb
popa
insl
int3
mov
test
xlat
in
jecxz
mov
xchg
je
rcrl
lock
inc
sbb
and
xor
jbe
movsl
xor
sbb
test
jge
jle
dec
sahf
popa
cli
cmpb
adc
repz
leave
jnp
jp
cmp
cmc
and
imul
mov
aas
lahf
popa
dec
xchg
cmp
stos
lock
mov
mov
shlb
mov
pop
pop
out
xor
jge
cmp
jp
sti
mov
add
cs
fwait
adc
movsb
xlat
add
mov
mov
mov
andb
je
cmc
leave
cmp
popa
pop
scas
cmpsb
test
mov
ret
mov
aam
lods
push
arpl
icebp
lea
and
fs
insb
pop
add
aaa
in
inc
fsts
clc
sub
rcrb
inc
and
loop
repnz
mov
jno
lods
jecxz
scas
xchg
inc
jbe
repnz
jnp
cmpsb
mov
idivl
mov
mov
lock
and
fstpt
mov
sbb
mov
outsl
pop
xchg
or
mov
dec
fnstsw
sbb
stc
and
aas
repz
sbb
addr16
subl
out
popa
xlat
js
sbbl
mov
fstpt
cmpsb
loop
aaa
pop
nop
add
hlt
jmp
dec
mov
push
and
mov
jnp
cli
ret
in
fnstcw
cmpb
pop
adc
mov
xchg
loopne
inc
test
arpl
out
leave
cmp
std
cmp
mov
push
jno
inc
int3
adc
in
and
lret
jmp
pop
mov
lret
mov
push
gs
arpl
sbb
fninit
sahf
jno
inc
cmp
xor
adc
popl
jnp
rol
mov
jnp
dec
aam
icebp
push
xchg
jae
jae
vmwrite
pop
lret
sbb
jnp
push
push
xchg
inc
test
addr16
lcall
testb
or
pushf
test
or
jnp
dec
repz
sbb
jnp
rclb
in
add
jecxz
xchg
addr16
sarl
or
aam
mov
and
fmull
jnp
mov
ja
or
lods
add
jnp
aam
dec
mov
adc
mov
ja
jnp
pop
mov
inc
sub
xchg
outsb
mov
shr
fistpll
inc
cwtl
push
inc
mov
pop
packuswb
xchg
pop
dec
jnp
sti
incl
shll
aam
std
or
xchg
out
xchg
bound
addb
and
fdivrs
sti
aas
ficoms
and
scas
dec
mov
mov
lods
int3
and
or
pop
dec
jmp
xor
mov
push
pop
mov
clc
and
mov
leave
jnp
in
or
xchg
stos
jo
mov
mov
mov
sahf
arpl
pushf
jp
insl
add
mov
inc
xchg
mov
jnp
mov
jnp
mov
aas
sub
sub
push
loopne
test
bnd
dec
mov
addb
cli
cmp
sub
leave
adc
je
jne
mov
pop
sbb
pop
push
lcall
and
mov
cmp
int3
orb
aam
loopne
imul
jb
scas
iret
jge
and
xor
fisttpll
mov
in
jp
xor
std
mov
sti
cmpb
fstl
xchg
fisubrl
add
out
nop
int3
arpl
fldl
add
mov
rolb
push
scas
jmp
popa
js
add
jnp
sub
dec
inc
xor
jmp
jg
iret
fdivs
mov
adc
pushf
in
dec
add
push
insl
sbbl
hlt
ja
xor
icebp
orl
outsl
xor
mov
into
out
test
clc
ds
or
pop
or
adc
sahf
mov
jnp
or
mov
movsb
dec
lds
lcall
jle
dec
cli
sub
mov
stos
xchg
xchg
sbb
add
test
ret
rcll
imul
in
adc
xchg
push
adc
push
outsb
xchg
dec
jnp
and
out
cmpsb
in
clc
jnp
inc
loop
dec
inc
test
xchg
mov
lret
scas
fmull
arpl
push
sbbb
mov
xchg
xchg
xor
std
dec
mov
adc
mov
sbb
mov
shlb
cmp
fstps
mov
push
data16
ret
or
mov
push
ret
xchg
arpl
push
add
lahf
mov
adcb
xchg
jbe
cmp
loope
jnp
pop
outsb
cmpsl
sbb
testl
insb
mov
stos
xchg
rcr
xchg
aaa
js
shl
inc
jnp
cmp
rolb
mov
orl
ffreep
test
repnz
xchg
ret
sarl
repz
inc
repz
fstpl
jecxz
jnp
ss
in
adcb
test
mov
scas
mov
pusha
jnp
clc
sbb
cmc
fcmovne
sarb
cwtl
push
stc
jecxz
jnp
xor
test
je
rcrl
sti
add
in
and
sti
xlat
dec
pop
fiadds
or
jnp
repnz
jnp
lahf
mov
nop
pop
xchg
jnp
cli
rcrl
in
xlat
jnp
mov
inc
ret
loop
sbb
or
cld
inc
xlat
cmp
out
pusha
jnp
rcrl
aaa
das
fcoms
jnp
loop
call
jnp
mov
scas
imul
gs
cmp
test
adc
pop
mov
lock
pop
test
cwtl
jnp
sub
mov
loop
into
ds
xchg
in
push
jnp
jae
loopne
test
push
jnp
aam
lret
jnp
pop
push
pop
out
sbb
xchg
inc
and
das
cmp
cli
xor
mov
and
outsb
fbld
rorb
cmc
sbb
or
push
mov
shlb
jnp
mov
add
in
mov
cmp
xor
jl
jnp
ds
hlt
ret
push
and
sbb
daa
add
mov
xchg
jo
push
jne
lods
add
pop
ret
xor
dec
mov
pop
adc
cwtl
xchg
or
fistl
jle
sbb
decb
jno
out
fs
pop
push
and
cltd
scas
ljmp
mov
jae
xor
xchg
jnp
push
mov
sbb
adc
roll
jne
xchg
add
jnp
cmp
pushl
mov
cmp
fwait
leave
xchg
outsl
pop
mov
ss
mov
adc
pop
lea
pcmpeqb
mov
mov
aas
dec
jecxz
pop
std
jl
sbbl
jnp
das
push
aaa
je
pop
adc
mov
scas
jg
mov
jge
cwtl
ficomps
pop
jnp
xchg
in
jno
push
xchg
push
xchg
roll
xchg
daa
sbb
jnp
mov
mov
push
jg
and
dec
cmc
imull
fbld
insb
pop
jnp
or
cmp
inc
pop
jnp
out
mov
mov
pop
xchg
xchg
fwait
subl
outsl
jbe
jnp
test
mov
mov
pop
outsb
cltd
addb
shlb
jbe
leavew
les
jnp
xchg
mov
fldenv
and
xor
outsb
xor
lods
jae
push
aad
sub
jnp,pn
adc
jecxz
push
repnz
ds
es
out
or
pop
lea
cld
addr16
pop
push
test
outsl
inc
push
int3
popf
jp
in
pop
sbb
fwait
out
add
scas
aad
push
sti
pop
test
sbb
cmp
jae
sbb
out
cmpsl
mov
push
jnp
and
int3
shll
andb
push
icebp
jno
lock
inc
cli
sbb
jnp
jo
bound
into
xchg
pop
fsubp
jnp
pusha
imul
jae
jnp
inc
sbb
dec
and
jnp
mov
rclb
push
xor
mov
jnp
cwtl
jge
mov
xor
jo
mov
aad
rcll
in
aas
aas
sti
or
rcrb
testb
push
add
jnp
repnz
xchg
or
lcall
andl
shlb
mov
jg
clc
and
aam
and
mov
push
mov
cmp
jge
xchg
int3
mov
lods
out
into
call
push
fwait
cs
pusha
xchg
std
shr
mov
jmp
jbe
jecxz
xchg
xchg
repnz
cli
xchg
add
outsb
dec
dec
mov
mov
bound
mov
jle
hlt
shlb
mov
out
sbb
cltd
sbb
inc
pop
add
sahf
lea
pushf
jnp
std
adc
loope
insl
add
repz
fimull
or
out
popf
jnp
or
outsl
iret
mov
cltd
int
call
xor
cmpb
fidivrl
lcall
dec
insb
ss
xchg
mov
std
je
mov
jnp
in
cmpsb
inc
mov
dec
sub
nop
cmp
ja
fstpt
ret
jnp
push
out
es
dec
jnp
scas
aad
repz
jle
jnp
xlat
sub
cmp
jnp
add
cli
mov
jnp
repz
lock
jnp,pn
loop
pusha
jae
je
jnp
or
mov
shl
addb
divl
inc
pop
jns
test
outsl
scas
xchg
add
adc
jno
inc
pop
insl
outsl
cmp
in
cwtl
cld
xor
mov
jnp
std
pusha
out
push
lcall
ljmp
jnp
mov
fwait
std
shll
loopne
or
jbe
loope
stos
lahf
hlt
jnp
mov
gs
fmull
jg
adc
push
or
sbb
insb
jnp
out
arpl
jnp
cmp
mov
ret
jnp
imul
stc
sub
xchg
movsb
aad
jno
test
sub
sbb
sbb
ss
inc
sbb
outsb
pop
aam
or
jb
mov
mov
rcll
jnp
cmp
pop
push
jns
jnp
adc
jp
movsbl
jbe
pop
loopne
jnp
pop
xchg
lret
into
mov
xchg
sti
repz
push
inc
ja
add
iret
icebp
ss
inc
aad
jecxz
mov
fidivs
mov
test
dec
ja
loopne
aam
push
sahf
dec
mov
mov
mov
sub
xchg
pushf
push
mov
fstpt
or
sbb
ljmp
inc
mov
pop
mov
shlb
add
mov
lahf
out
fmuls
sub
xchg
xor
lods
shlb
xchg
gs
stc
jno
sti
pop
cmp
cmpsl
or
clc
jnp
decb
das
jnp
fdiv
test
lds
mov
and
mov
call
pop
mov
test
mov
xor
and
inc
or
pop
inc
jl
dec
pop
jnp
mov
nop
add
jnp
cmp
and
push
fistpll
mov
and
mov
sti
push
jae
fimuls
aam
fidivrl
mov
mov
jnp
test
adc
xor
arpl
mov
lock
lea
cwtl
aaa
pop
and
ror
les
out
sti
in
lods
mov
and
sarb
cwtl
lea
ja
add
loope
fs
xchg
lods
rclb
pop
fwait
sbb
sbb
stos
sbb
out
outsl
or
je
bound
sbb
jbe
push
mov
xchg
xor
jno
inc
xchg
aas
xor
cmc
jnp
sbb
cmp
outsb
adc
mov
hlt
dec
leave
iret
jge
dec
cwtl
fs
fidivl
cld
push
call
jnp
cmp
inc
lahf
xlat
jp
nop
stos
xchg
xor
cli
push
clc
fwait
cs
or
das
cmpsl
jno
iret
cmp
push
fidivrl
aad
pop
cmp
xchg
push
or
mov
mov
jmp
dec
adc
dec
xor
mov
aaa
ja
jnp,pt
or
cld
mov
in
mov
add
orb
cmc
pop
push
xchg
mov
cwtl
les
inc
mov
testl
and
mov
stos
mov
repnz
sbb
jl
inc
push
es
lret
xchg
xor
call
dec
call
movsl
scas
inc
mov
clc
push
jb
jnp
xchg
nop
xchg
insb
test
adc
push
add
mov
xor
fistps
pop
xor
jnp
mov
pop
push
lahf
adc
repnz
lock
fmull
mov
sti
ror
aaa
jb
push
test
out
add
imul
cmp
adc
push
aaa
insl
mov
mov
mov
and
popl
aam
jo
jecxz
jnp
scas
cmpl
and
inc
fwait
cmp
outsl
mov
jg
int3
jnp
jbe
sub
xlat
adc
jnp
int
loope
mov
insl
adc
int3
out
pop
jnp
inc
outsl
pop
psubusb
pop
and
mov
add
and
pop
cmp
inc
into
ficompl
sbb
fiadds
pushf
jne
jnp
rorl
or
jnp
not
arpl
inc
or
jnp
imul
notl
push
adc
jne
jle
jb
jnp
cmc
aas
fwait
xchg
fs
jnp
in
hlt
mov
jnp
into
jns
mov
lods
xchg
sbb
jecxz
jmp
sub
dec
sbb
or
cmpsb
mov
ja
stos
cmpsl
test
xor
mov
push
jnp
xor
add
cmp
aas
jnp
push
mov
loop
mov
mov
lcall
sub
aad
mov
into
inc
xor
dec
ficomps
pop
push
scas
fcomps
jnp
add
mov
jnp
cmp
stc
test
pop
imul
mov
idivb
add
stos
gs
cltd
xchg
data16
jo
test
mov
adc
xchg
daa
sti
and
jns
push
cmp
inc
in
xor
dec
loopne
popf
pop
jp
imul
mov
sbb
data16
cmp
jae
sbb
inc
jnp
mov
std
es
test
jecxz
ja
jnp
fs
test
inc
push
in
xchg
or
xchg
pop
add
jnp
pop
repz
push
cs
jge
or
cld
xchg
jo
cmp
cmp
test
jnp
or
lods
pop
popa
rcll
iret
inc
lret
test
iret
push
in
inc
gs
or
dec
jnp
and
out
sarb
aaa
xchg
addb
hlt
cmpsl
pop
mov
jnp
mov
mov
jo
xchg
sti
adc
loope
lret
test
lret
js
mov
mov
pusha
bound
dec
inc
adc
push
rcll
cmp
lds
or
arpl
nop
addr16
sti
sub
xor
cmp
jb
fldl2e
mov
sbb
pop
push
lock
es
pop
xor
jnp
lahf
loope
shl
outsl
mov
into
mov
gs
stc
cld
jnp
and
mov
jge
adc
push
push
dec
sbb
cmpsb
sarl
ljmp
mov
cmc
sbb
outsl
fdivrl
pop
out
inc
testb
add
push
mov
jnp
loope
jno
dec
push
out
push
test
lret
xchg
pop
jecxz
fisttpl
jnp
in
enter
mov
jnp
mov
rol
rorl
jno
jnp
add
xchg
push
jbe
jae
iret
and
mov
ret
cltd
or
push
push
fwait
xchg
outsb
inc
or
jne
adc
test
sbb
fsubrp
dec
repz
and
pop
stos
outsb
add
fdivr
movsl
arpl
jmp
push
push
inc
adc
aaa
sbb
pop
mov
dec
sbb
fidivrs
int3
imul
ljmp
adc
jnp
inc
gs
bound
lahf
lock
sti
or
pop
jnp
insl
mov
jnp
sub
dec
mov
adcl
cmp
jnp
arpl
and
test
pop
repnz
rol
mov
ljmp
mov
out
xor
test
lret
adc
xor
mov
es
out
insl
insb
sbb
xor
jp
cmp
cmp
and
jnp
jmp
ljmp
xchg
cmp
cmp
out
push
pop
lock
jae
mov
test
pop
into
fstpl
scas
jno
lcall
push
or
add
jnp
dec
nop
cmp
xchg
mov
popf
sbb
es
push
out
pop
dec
mov
dec
pop
sahf
pop
jae
les
jo,pn
mov
fs
jnp
adc
test
rolb
cmc
ret
inc
sbb
call
addb
fdivp
leave
inc
insl
fdivrl
sbb
jnp
arpl
push
jnp
fcomps
imul
cltd
mov
inc
jne
inc
mov
mov
jnp
sub
push
inc
push
imul
stos
std
adc
rcrb
jnp
cmp
inc
cli
sahf
lock
jg
stos
mov
test
cmp
cs
jnp
jmp
hlt
jnp
ss
dec
dec
scas
ret
into
in
and
xchg
jnp
mov
das
sti
jnp
mov
bound
mov
lret
xor
imul
daa
sti
cld
sub
mov
testb
sbb
fsubs
ret
rcrb
ficoml
mov
jnp
pop
dec
lds
and
stos
mov
pop
jnp
pushf
jecxz
pusha
fisttpl
scas
jnp
int3
cmp
jnp
mov
xchg
push
jnp
test
test
jge
jnp
mov
aad
rorl
fmuls
xchg
mov
cwtl
mov
fldt
ds
jnp
xlat
outsb
gs
mov
sub
jnp
lds
sub
in
icebp
jnp
push
adc
pusha
imul
inc
and
push
cltd
xor
leave
xor
in
and
fwait
add
mov
movsl
stos
mov
aam
icebp
jno
iret
pop
push
fsts
mov
scas
outsl
xchg
xchg
mov
xor
imul
xchg
cmp
fsts
push
outsb
sub
dec
xor
inc
mov
cmp
mov
jnp
aam
adcl
jnp
cmpsb
pushf
mov
test
scas
or
test
cmp
mov
sti
cmc
std
cmp
cmp
xor
jnp
add
push
cmp
imul
push
cmpsb
arpl
pushf
les
pop
jne
jnp
out
fwait
popa
pushl
jnp
aaa
scas
push
adc
sbb
outsl
lea
movsb
mov
enter
mov
imul
push
ds
push
movsl
out
mov
sub
and
pop
orl
dec
sub
push
xchg
lods
jnp
lahf
push
push
pop
repz
or
and
mov
fwait
test
into
sti
sub
popf
shrb
push
in
xrelease
and
xor
jecxz
in
pop
push
pop
jnp
fucomp
js
repz
jnp
add
or
ja
mov
pop
or
jno
icebp
out
addb
cmp
lds
add
mov
inc
sti
ljmp
mov
push
or
lcall
scas
fnstsw
pop
dec
sbb
loop
cmp
mov
jnp
and
sub
mov
ret
cltd
add
cld
lods
cmpsl
mov
mov
mov
cmp
sbb
mov
sti
jb
add
push
xchg
xchg
mov
xchg
push
ret
in
jnp
sub
scas
testb
jg
test
ss
jae
xor
clc
sbb
dec
adc
sub
pop
cwtl
sub
adc
psubsw
fistpll
jnp
push
sub
push
or
cmp
and
in
shll
mov
pop
jnp
jbe
fwait
xchg
or
ret
push
mov
inc
shr
jno
dec
enter
jnp
xor
scas
sahf
lret
mov
jnp
test
mov
loope
jnp
fcom
jmp
xorb
nop
add
jmp
mov
out
cmp
fdivrs
sbb
bound
xor
mov
jmp
icebp
aaa
jnp
test
lods
icebp
add
hlt
jnp
addr16
sbb
sbb
dec
mov
mov
pusha
out
mov
adc
dec
add
xchg
int
je
dec
mov
xchg
jae
roll
flds
jnp
jle
push
pushf
sahf
jl
mov
xchg
inc
pop
push
outsb
push
out
cmp
jg
jnp
xchg
stc
push
inc
and
mov
add
xchg
std
in
jnp
mov
sub
push
xchg
sbb
jmp
dec
xor
xor
mov
imul
push
jnp
ds
dec
or
sbb
adc
loop
outsl
fwait
mov
or
fmull
sbb
inc
cltd
xor
pop
add
xchg
mov
inc
fstl
jnp
mov
pop
xor
lcall
aam
lock
idivb
mov
stc
inc
in
icebp
add
sbb
mov
mov
lods
cmp
mov
popf
sub
pop
mov
in
dec
nop
shr
mov
or
addl
std
jbe
stc
jnp
mov
jecxz
jnp
adc
bound
jbe
stos
sbb
es
mov
xchg
hlt
lds
nop
jnp
inc
repnz
sbb
jnp
xchg
in
jnp
std
fiaddl
fmuls
mov
or
in
sti
mov
pop
insl
pop
jnp
int3
pop
es
scas
xchg
popa
hlt
dec
mov
std
mov
cmp
mov
mov
jge
lahf
dec
sti
imul
loopne
mov
mov
mov
jecxz
inc
aad
test
mov
cmc
inc
mov
mov
les
pop
or
jnp
pop
push
xchg
push
gs
ss
mov
adc
pusha
sti
push
fsts
loopne
lcall
jbe
xor
out
push
mov
fdivs
jnp
jecxz
cmp
pop
stos
and
sbb
jmp
mov
cmp
loope
adc
aas
mov
xchg
out
mov
jnp
mov
mov
test
mov
rcrb
fists
dec
jnp
mov
sub
mov
add
fwait
out
leave
cmp
je
xor
dec
jnp
pop
push
outsb
loopne
sti
test
aad
inc
xchg
xchg
sti
push
mov
or
flds
cmp
gs
dec
mov
loope
jl
and
bound
xor
imul
fwait
into
hlt
sarb
pop
and
mov
imul
stos
jge
jnp
mov
mov
sahf
stc
mov
movsl
xchg
aas
aaa
pusha
stc
test
sbb
scas
add
inc
js
dec
lea
ds
sti
test
mov
jnp
fwait
popf
add
shrb
jnp
bound
pop
jnp
push
out
loopne
mov
insl
sti
lahf
mov
inc
and
add
fsubrs
jmp
jnp
ds
rcl
call
adc
rcll
data16
jnp
push
shll
mov
and
xor
or
push
and
jp
test
or
cltd
jle
cwtl
mov
fs
fwait
mov
out
mov
push
jnp
gs
icebp
xchg
push
or
mov
cmpsl
pop
mov
mov
mov
in
and
lahf
mov
fadds
and
dec
xchg
jnp
mov
pushf
mov
stos
mov
xor
push
adc
adc
and
jne
jmp
jnp
aas
test
sub
cltd
jnp
iret
ss
shll
sub
pushf
std
push
cmc
jnp
xchg
icebp
sbb
add
shlb
divl
addb
cmp
das
xor
cmp
push
dec
and
sbbb
mov
and
je
mov
lret
clc
iret
loopne
xor
mov
pop
jnp
jl
shl
dec
jecxz
mov
pop
in
jnp
cmpsl
cmp
leave
ret
mov
lods
repnz
sti
mov
mov
adc
das
mov
and
pop
nop
test
insb
add
sti
xchg
mov
mov
loop
icebp
pop
lcall
cmp
roll
or
dec
dec
adc
cmp
add
in
insl
jl
pop
jnp
mov
cmp
cmp
in
xchg
pop
jne
bnd
lods
inc
ja
into
imul
ret
adc
and
inc
jnp
scas
ja
mov
push
dec
cs
push
fst
push
inc
addr16
je
add
lds
les
inc
add
cmp
mov
sbb
mov
pop
adc
jno
sahf
adc
fldl
test
cmp
adc
cmpsl
pop
and
cli
xorb
movb
fldcw
add
jbe
orl
ds
xor
sub
jnp
ss
mov
lahf
hlt
xchg
nop
mov
aaa
mov
dec
pop
pop
loope
pushf
mov
orb
mov
or
and
mov
loope
sbb
jnp
mov
aad
xchg
repnz
popa
repz
xchg
add
stos
mov
test
jnp
pop
fwait
sub
jnp
or
aaa
push
cmc
rorb
jnp
fs
add
mov
dec
lods
test
call
inc
data16
popf
pop
push
jnp
jns
mov
cmp
dec
push
lds
pushf
mov
and
dec
or
mov
pop
jno
jmp
cmpsl
imul
mov
inc
loop
out
mov
mov
and
lods
dec
sbb
cld
repz
mov
out
push
jnp
orl
xchg
pusha
fcoms
xor
out
mov
stos
fidivrs
mov
popa
mov
mov
xchg
dec
popf
xchg
mov
xchg
int3
pop
out
stos
test
gs
test
or
sbb
pushf
insb
push
cli
pop
jnp
sub
xchg
arpl
outsl
jo
cmp
or
test
int
test
jmp
dec
insb
fcomip
push
sbb
std
mov
sbb
or
sbb
mov
inc
popf
fisttpll
inc
outsb
pushf
pop
pop
or
imul
jge
jno
test
mov
sarb
daa
xor
and
xchg
rcrb
mov
jnp
pop
sub
arpl
jnp
xor
fidivrl
imull
movsb
jnp
hlt
cld
shlb
cmpsl
pop
sbb
add
jp
cmpsb
int
sub
and
mov
addr16
adc
adc
adc
add
jne
push
shrb
mov
ret
mov
enter
xor
jo
adcb
jnp
or
jnp
arpl
insl
jnp
test
xor
jnp
aam
mov
mov
jl
fwait
ret
mov
add
adc
fidivs
cli
or
mov
mov
lret
fmuls
stc
dec
jmp
ja
lahf
push
inc
cmp
sti
dec
push
mull
lret
add
mov
cmpsl
jl
in
inc
out
stos
jnp
mov
xor
jnp
dec
jmp
outsl
mov
xchg
push
cmp
mov
mov
outsl
lock
xor
mov
jnp
stc
into
sbb
sbb
cmp
jb
cmpsl
lock
cltd
repz
pop
out
sbb
and
call
cmp
out
mov
or
add
daa
xchg
iret
pop
stos
xchg
sbb
dec
jnp
fimull
fistps
jnp
jl
push
xor
arpl
dec
jb
gs
ss
mov
negb
cmp
lock
fldl
ret
out
or
dec
ret
mov
repz
lahf
jg
inc
pop
dec
jp
loop
mov
xorb
dec
test
lods
test
test
jle
cs
lret
push
fmul
loopnew
xchg
sub
imul
push
js
pop
jp
mov
push
rorl
cli
jmp
mov
arpl
fs
inc
shlb
mov
arpl
cmpsb
es
push
cltd
test
pop
jl
mov
add
aam
push
adc
or
pop
jmp
das
xchg
sub
jmp
lret
pushl
xchg
sbb
fdivs
rcll
xchg
xchg
push
in
sti
mov
jne
sarl
and
adc
jns
js
movsb
cmp
mov
popf
push
insl
loopne
jnp
mov
adc
push
imul
cmp
outsl
ficompl
push
sub
dec
xchg
insb
jle
add
jnp
adc
std
icebp
dec
and
cltd
cwtl
pop
sbb
in
das
addr16
cmp
and
std
sbb
or
cmp
mov
test
jle
or
cli
inc
push
push
xchg
jmp
or
data16
in
popa
clc
test
cmp
sti
cmp
pop
pop
xchg
jmp
jnp
rcr
xchg
mov
mov
inc
push
popa
jnp
fwait
ret
inc
xchg
cmpsl
test
and
scas
in
jnp
into
mov
cli
jnp
mov
aaa
lahf
mov
inc
fldcw
mov
mov
stos
adc
hlt
xchg
xchg
mov
cmpsb
addl
mov
lods
clc
sbb
adc
cmp
orb
data16
jnp
mov
pop
and
pusha
cmpb
pop
les
add
mov
negb
mov
pop
lret
outsb
loope
scas
int3
mov
jmp
push
jle
out
pop
aam
or
sbb
pop
pop
test
cltd
adc
adc
cmpsl
lods
xchg
cld
jnp
mov
jnp
notl
mov
clc
inc
adc
push
in
jmp
add
xchg
sti
mov
lahf
jno
pop
jae
imul
into
fldt
out
aas
int3
fdivrl
test
sahf
push
pop
pop
jge
insl
jno
dec
push
xor
jnp
test
daa
add
jge
jmp
clc
push
dec
xchg
jnp
das
test
mov
test
jmp
inc
call
cmpl
sub
cwtl
pop
in
cmp
outsb
and
or
jnp
add
sbb
adc
sub
inc
sub
xor
or
jnp
dec
pop
cwtl
mov
lret
mov
mov
xor
add
leave
jnp
jns
push
jb
push
jnp
test
sub
rcll
clc
jnp
and
sub
jecxz
movsb
jnp
and
inc
mov
sub
mov
scas
cltd
int3
mov
xor
shlb
sub
adc
and
and
lock
lods
sub
ljmp
int3
lahf
sub
push
or
push
push
xchg
dec
and
das
rolb
adc
icebp
push
fabs
or
mov
adc
add
xlat
add
push
xchg
sbb
imul
sub
lds
stos
fcoms
loope
jp
test
jbe
xor
movsl
cli
fwait
mov
cmc
mov
mov
and
das
mov
mov
je
xor
pop
jno
xchg
int
imul
push
sbbb
in
popa
mov
mov
cmp
xchg
sbb
jp
test
inc
sti
popf
ret
bound
push
push
xchg
loope
sub
lcall
aas
dec
loopne
icebp
jo
mov
cmpsb
scas
mov
mov
fldt
pop
jnp
sub
hlt
add
nop
jnp
scas
push
sbb
pop
sbb
loope
sbb
cltd
stc
jnp
adc
pop
rcl
xchg
xchg
lock
iret
out
jle
dec
push
cmp
fs
pop
outsl
dec
inc
test
outsb
fldcw
jnp
add
and
push
int3
push
test
jnp
or
and
fwait
pop
add
sub
xor
xchg
and
lcall
sub
stos
fcmove
push
jae
ficoml
in
mov
cmc
xchg
imul
push
inc
or
jnp
enter
call
test
pop
sub
jle
pop
sti
dec
mov
push
push
cmpl
lods
and
push
scas
mov
lret
jnp
mov
dec
inc
jnp
adc
faddp
test
inc
adc
xor
pop
adcb
stc
mov
add
mov
pop
cld
and
lds
mov
nop
push
mov
ljmp
rclb
call
add
pop
jno
rcrb
mov
fisttps
mov
sbb
insl
jnp
xorb
ds
add
sarb
jnp
or
testl
hlt
mov
cmc
mov
punpcklwd
fidivrs
ret
adc
cmp
addr16
push
push
loope
and
rol
rolb
shl
ljmp
jnp
or
icebp
xor
sbb
scas
lret
arpl
mov
ret
cld
aad
mov
call
mov
mov
pusha
into
outsl
out
push
dec
add
mov
jnp
rcrb
xor
popf
push
mov
pop
movsl
fmuls
roll
add
pop
mov
adc
xchg
andb
ss
push
sub
jnp
ljmp
pop
jge
fstpt
sbb
incb
outsb
mov
inc
xorl
fadds
lea
jno
xor
xchg
ds
pop
insb
and
pop
outsb
arpl
sub
sti
jge
arpl
cwtl
repz
test
sti
cmp
pusha
cs
push
and
jnp
ss
add
mov
xor
sub
cwtl
sbb
loop
test
adc
int3
lcall
mov
mov
shll
cltd
fnstcw
daa
aaa
stos
lds
test
mov
mov
jnp
cli
out
xchg
fistpl
icebp
sti
std
scas
lods
mov
mov
sbb
into
xchg
inc
fwait
xchg
xchg
jmp
dec
mov
shrl
jns
push
scas
repz
inc
insl
lcall
imul
clc
repnz
repz
xchg
push
mov
rcll
and
addr16
and
add
push
lock
jnp
ja
faddl
sub
fcomps
jnp
add
rclb
das
lret
arpl
xor
lcall
mov
test
rol
fwait
jb
lcall
lcall
daa
ret
in
xchg
in
cli
mov
lods
jnp
pop
pop
inc
ficompl
xchg
lea
mov
aaa
jnp
push
add
movl
out
xorl
push
or
push
or
aam
sti
cmp
lret
xor
repz
icebp
xchg
data16
jns
jnp
inc
xor
push
jnp
gs
int3
sub
pop
sbb
clc
or
xchg
push
cmp
les
and
leave
int
or
sti
paddusw
imul
into
pop
ret
adc
push
mov
movsl
das
jo
add
mov
sub
icebp
mov
ret
fcomps
mov
dec
xor
xchg
gs
leave
and
inc
sti
dec
int3
mov
test
xor
xchg
jnp
push
sub
std
pop
test
sbb
dec
sbb
jno
lea
push
aad
jnp
shll
xor
sub
jo
sub
in
xlat
dec
mov
mov
negb
add
out
and
cmp
pop
test
push
jns
push
xchg
jno
sti
jge
push
mov
jnp
arpl
faddl
adc
cmp
outsb
mov
notl
xor
push
push
andb
push
lahf
sbb
cld
out
xchg
jbe
mov
mov
add
xchg
out
rclb
fcoml
pop
je,pn
add
cld
push
xchg
outsb
mov
push
out
add
nop
sti
je
jnp
mov
add
ret
ret
fdivl
dec
xchg
add
cmp
jecxz
inc
dec
cmp
mov
ds
lea
jbe
sti
mov
fs
aas
or
mov
sub
ficomps
mov
push
outsl
cwtl
push
jns
hlt
xorl
cmp
movsb
sub
xchg
jno
mov
inc
int
sub
arpl
jecxz
mov
inc
dec
xchg
insl
and
daa
xchg
imul
popf
mov
or
mov
movsb
mov
in
shrb
cs
xlat
jno
mov
xor
add
cmp
jge
imul
adc
fnstcw
sub
cli
cmpsb
rorl
lret
pop
push
mov
xchg
out
jne
push
mov
cmp
sahf
cmp
xchg
jbe
imul
sub
pop
or
ret
mov
jnp
call
lcall
out
sahf
lods
pop
je
lret
inc
int3
pusha
xor
test
mov
xor
jle
jl
rolb
test
adc
dec
and
test
jae
adc
ret
dec
jne
mov
or
pop
jecxz
push
rol
and
lahf
imul
into
sbb
stc
cmp
gs
cli
mov
xor
outsb
into
out
push
xchg
pop
and
jb
jae
lea
daa
cmp
xchg
into
jnp
pop
addr16
mov
xchg
imul
in
xor
push
xchg
int
imull
jmp
dec
and
ret
sbb
ret
mov
cmp
pop
mov
dec
inc
stos
pop
mov
mov
add
jp
pop
leave
jnp
out
mov
pop
mov
adc
aas
icebp
xor
xchg
adc
std
or
cltd
test
cltd
sti
sbb
xor
sbb
cmp
movsl
js
push
sub
pop
mov
add
lcall
addr16
call
adc
test
fwait
loopne
inc
out
bound
jnp
mov
cmp
jnp
test
cli
je
pop
inc
mov
adc
mov
insb
jmp
mov
xor
cltd
inc
inc
adc
int3
jecxz
popa
jnp
pop
xchg
test
jnp
lret
push
outsb
xor
xchg
test
mov
mov
jno
sti
cs
pop
jns
outsl
scas
jnp
push
add
mov
jns
jnp
cmp
mov
pusha
iret
scas
ds
adc
jne
out
pop
clc
xor
sbb
inc
cmpsb
int
jnp
jg
add
sar
cld
sbb
push
mov
push
call
lahf
jnp
xor
mov
pop
int
mov
cltd
push
mov
test
imulb
or
cmp
push
lret
mov
aam
lcall
loop
test
enter
mov
jecxz
cmc
je
pop
pop
fisubs
aad
mov
xor
outsl
xor
jle
jnp
leave
les
ret
cld
out
xchg
out
push
sub
test
jnp
cmpsb
push
mov
pop
push
xchg
stos
cmp
pop
adc
inc
fisttpl
cmpsl
push
xchg
mull
jl
pop
cmpsb
adc
arpl
clc
jl
xchg
sub
mov
pop
insl
and
jo
mov
or
mov
fistpl
es
cmp
gs
pop
stos
or
fidivl
std
add
push
jge
shl
movsl
arpl
jne
cmpl
push
mov
loopne
cmp
rcll
jo
addb
and
lret
or
or
fadd
or
mov
fwait
aaa
xchg
lea
pop
mov
ljmp
test
cmp
mov
mov
sbb
test
jge
or
jno
arpl
jnp
push
dec
stc
xchg
xchg
xor
push
mov
fcomp
jnp
cmp
or
xlat
sub
daa
xchg
jbe,pt
and
andl
dec
inc
mov
and
add
mull
jbe
add
loopne
lea
mov
mov
jecxz
jns
xor
jl
jecxz
or
xchg
enter
sbb
jnp
out
jmp
lcall
sub
jp
in
jne
mov
push
ret
pushf
xchg
aas
aaa
cld
test
lock
adc
cmp
jnp
mov
dec
jnp
or
fldcw
mov
cs
add
or
cmp
mul
fsubrl
imul
fmuls
xchg
jo
jnp
in
mov
cwtl
sub
mov
mov
mov
xor
mov
mov
jo
jnp
push
test
js
insb
pop
and
mov
dec
ljmp
or
psrlw
gs
xchg
ja
sub
push
add
add
sbb
fisubl
xchg
sarl
mov
out
push
cltd
ljmp
pop
scas
data16
jnp
fdivr
mov
arpl
insl
andl
pop
push
sti
daa
aam
sbb
pop
decl
push
adc
xchg
sbb
dec
scas
pop
pop
bnd
and
jnp
ljmp
outsb
ja
cmp
pop
loope
mov
jnp
test
lret
in
scas
or
pop
mov
cli
fisttps
jnp
jmp
sbb
dec
ds
sub
inc
sub
sbb
test
test
sub
jnp
push
mov
jg
data16
push
fstps
repnz
adc
jl
nop
imulb
int3
push
das
mov
or
xor
sub
jmp
sbb
inc
jnp
jae
scas
pusha
push
or
movsl
mov
cmpb
loopne
push
test
cmc
jnp
dec
icebp
les
mov
into
cmp
adc
fwait
inc
jge
enter
jb
push
or
pop
inc
sarb
xchg
imul
es
xor
adc
push
mov
fdivs
xor
adc
decb
dec
mov
mov
or
push
cmpsb
dec
stos
jecxz
mov
adc
mov
mov
xor
jecxz
xchg
repz
ucomiss
jnp
cmp
mov
xchg
fsubrl
push
imul
add
out
aas
data16
pop
push
pop
insl
dec
sti
lret
mov
sbb
testb
push
aaa
hlt
push
in
mov
pop
popa
cmp
dec
arpl
jns
pop
mov
movsb
lret
movhps
cs
fldenv
or
jnp
sbb
inc
sbb
enter
fld
orb
jnp
or
shl
xor
push
jnp
mov
js
jnp
xchg
fsub
fldcw
mov
and
fstpl
data16
pop
inc
roll
dec
lcall
test
cmp
lret
jno
ljmp
xchg
inc
jnp
enter
or
rorb
mov
xchg
add
push
pop
add
mov
lock
sub
jnp
push
mov
jp
leave
popa
jae
mov
xchg
lea
xchg
cmp
or
ss
sti
rorl
jnp
mov
xchg
sbb
orb
jne
xlat
loopne
mov
dec
jnp
gs
out
jnp
jg
adc
xchg
sti
or
cmc
sbb
and
sbb
das
sbb
aam
xchg
sbb
jno
mov
fdivrs
push
lret
arpl
inc
fcmovu
int3
xchg
aam
loop
testl
jns
lcall
jne
test
fiaddl
jecxz
push
cmp
arpl
jmp
test
adc
loope
aad
adc
imul
inc
popfw
shlb
scas
arpl
cltd
sub
hlt
fwait
rcl
clc
ds
push
rcr
sti
cs
sti
loop
adc
jo
pop
inc
shll
sub
movsl
jnp
fwait
cmpsl
js
cmp
imul
addr16
cwtl
fisttps
jnp
out
hlt
icebp
push
sub
clc
orb
iret
cmp
xchg
leave
bnd
inc
lahf
pop
xor
xchg
mov
insb
std
test
into
imul
jecxz
loopne
loope
mov
fbstp
scas
add
arpl
pusha
push
inc
nop
fists
mov
sub
pop
sub
jb
roll
xchg
sti
testb
je
or
mov
ret
adcb
into
dec
mov
fadd
jmp
mov
inc
mov
xorl
call
or
mov
in
cmc
mov
popl
aas
cmp
cmp
jnp
dec
sbb
push
mov
or
jne
adc
lea
jo
cld
sbb
jecxz
inc
dec
cs
in
mov
cmp
sti
insl
xchg
pop
into
pop
sbb
jnp
mov
adc
cmp
sub
bound
pop
into
pop
push
lahf
push
xchg
inc
add
fwait
fwait
inc
jnp,pn
mov
nop
mov
in
ret
mov
pop
xchg
mov
pop
xor
cltd
popf
ror
notb
movsl
pop
jnp
ja
test
stos
lret
adc
and
or
inc
cltd
in
jo
into
mov
mov
jl
sahf
je
mov
jnp
testl
sub
inc
icebp
fidivrl
out
mov
stc
shlb
cmp
mov
aaa
inc
jnp
hlt
or
repz
outsb
hlt
mov
and
and
push
xchg
xchg
or
sub
mov
mov
arpl
mov
loopne
in
jne
jnp
inc
cmp
jnp
ljmp
mov
test
sub
mov
popl
adc
ret
nop
or
cmp
pop
in
mov
ds
ja
xor
aas
scas
xchg
xlat
dec
test
sbb
or
inc
mov
inc
ret
xor
sub
jnp
and
jp
jno
mov
push
cwtl
mov
outsl
lock
adc
les
roll
jne
jnp
sarb
mov
gs
pop
xchg
test
cmp
pop
lret
jecxz
test
push
dec
in
fs
jnp
fsubrl
sahf
clc
aam
xchg
nop
pop
shr
sub
dec
mov
bound
cli
and
imul
push
jne
pop
or
ret
enter
sbbb
pop
dec
std
add
movb
test
add
xchg
xchg
movsb
outsb
cwtl
mov
mov
push
int
lahf
mov
call
out
pop
pop
shlb
jnp
sti
adc
xchg
pop
std
jnp
loopne
jns
add
lret
mov
jmp
out
inc
fdivrs
or
aad
andl
push
data16
shl
pop
int
jnp
push
push
mov
jnp
and
adc
fnsave
and
dec
mov
inc
jnp
lock
cmpsb
insl
mov
sbb
and
scas
push
xchg
sbb
sbb
adc
jecxz
mov
add
cmp
sbb
push
rorb
sub
sbb
int
jp
cmp
push
jae
cmp
add
inc
sub
jns
or
daa
das
lahf
dec
push
inc
inc
inc
scas
jne
xorb
xor
inc
cmp
mov
xchg
into
cli
pushf
fbstp
cmp
pop
movsb
sub
xchg
adc
jnp
pop
pushf
stc
jp
ljmp
sbb
add
mov
cltd
fldcw
movsl
ficoml
mov
cld
lret
jg
push
es
xor
inc
fs
or
ja
fnsave
sub
mov
jnp
cli
or
mov
sub
jge
fwait
mov
std
push
enter
mov
sbb
je
stos
jnp
lock
push
mov
bound
adc
jnp
inc
shl
aaa
xor
push
cli
pop
xchg
loope
imul
or
xchg
jl
test
xchg
mov
push
jb
pop
dec
xor
pop
xchg
in
int
movsb
rorl
push
ret
xchg
test
mov
cmpsl
sbb
adc
mov
cmp
out
sub
fstpl
jnp
cwtl
xor
shrl
lahf
out
sbb
loope
xchg
enter
roll
rclb
add
sub
jle
sub
test
inc
invd
outsb
mov
cmp
cmp
cltd
jl
cmpl
in
pushf
xor
loop
cmp
xchg
jmp
aas
adc
jl
push
push
leave
jns
jnp
shll
cmpsb
or
adc
rolb
sub
pop
insb
and
les
cmpl
jl
jnp
xchg
and
and
push
test
lret
mov
popa
cwtl
sub
dec
adc
sbb
nop
jnp
cltd
shr
xchg
pop
outsb
or
mov
dec
lds
rcr
dec
popa
enter
mov
pop
pop
dec
and
or
push
fimull
nop
pop
ret
gs
insl
and
mov
inc
jae
addr16
pusha
mov
enter
loopne
bound
test
jnp,pt
jmp
sahf
mov
fwait
gs
ficomps
repnz
fs
mov
inc
push
jnp
sbb
mov
adc
pop
js
mov
jnp
inc
sbb
lcall
stos
pop
jae
jnp
sbb
andb
loopne,pn
ds
cmp
sbb
fnstsw
mov
jb
xchg
pop
jge
jnp
cmpsl
in
sbb
rol
hlt
dec
int
mov
les
popf
sub
jbe
inc
mov
xorl
pop
fcoms
or
push
out
shll
jmp
cmpsb
or
into
dec
xchg
dec
lahf
and
dec
adc
gs
jnp
mov
xchg
dec
stc
cmp
jnp
or
aad
sub
fstpl
ss
push
inc
sti
shll
jae
mov
ret
lds
jnp
scas
sbb
adc
mov
std
jnp
int
ss
stc
add
push
lahf
jnp
cltd
xchg
pop
xor
xor
and
cwtl
fs
lods
fistpl
cli
sbb
push
sub
cltd
movsl
mov
mov
dec
sub
movsb
mov
mov
cmp
jnp
mull
cmp
mov
orb
gs
dec
push
mov
mov
dec
imul
ljmp
es
hlt
add
sarb
aam
cmc
mov
or
cltd
mov
push
sti
mov
push
sub
movsl
lret
xor
xchg
or
cs
xchg
dec
xchg
and
inc
mov
scas
out
lgs
sarl
decb
adc
scas
sub
jbe
adc
inc
call
push
pusha
mov
repz
vmovlpd
add
dec
xchg
arpl
dec
lods
outsb
fisttpll
cmc
jno
cmp
pop
test
sub
jmp
jmp
add
sahf
pop
cmovno
xor
push
mov
inc
mov
xlat
aam
ret
or
into
insl
inc
test
lds
faddl
ljmp
lea
add
xor
js
xchg
addb
andb
stc
cmp
xchg
push
cmp
cwtl
jnp
sub
int
imul
fcomps
or
jnp
ss
jns
not
pop
sti
mov
xor
je
jnp
pushf
pusha
xchg
push
mov
sbb
test
das
sbb
and
cmp
cmpb
cmc
add
xchg
sarb
sub
adc
or
and
jnp
jl
cmp
inc
sbb
shrb
jnp
or
push
and
xor
jnp
je
pop
out
xor
cmpsl
mov
mov
or
xchg
cmpsb
xchg
in
dec
lret
frstor
addr16
add
imul
cmpsl
int
jnp
out
je
lods
popa
adc
rorb
mov
shlb
jnp
push
push
mov
out
in
addl
fldcw
insl
xor
cli
xchg
sbb
cmc
mov
xor
dec
sbb
and
insb
sub
xor
push
loop
and
out
sub
inc
test
or
mov
pushf
pop
sti
xchg
jg
jp
cmp
loopne
and
cmc
push
jnp
movsl
andb
or
xlat
add
ret
inc
in
xor
jnp
pusha
testb
add
push
xor
jnp
jne
std
push
pop
lret
xor
out
xor
adc
movsl
jne
adc
cmp
mov
adc
int
ljmp
sub
pop
mov
test
std
xlat
test
out
je
out
lret
jno
push
pushf
mov
mov
aam
xchg
negb
dec
xor
inc
xacquire
in
push
jns
push
add
lods
adc
cmp
pop
xchg
js
push
or
cmp
fsubrl
in
jnp
je
push
or
xlat
adc
mov
push
sub
stos
mov
flds
in
cmp
fwait
and
lcall
stos
loop
inc
xor
aaa
out
add
push
sbb
sarb
clc
lods
pop
repz
hlt
xchg
dec
out
xchg
inc
xor
int
push
mov
cmp
push
loope
jo
repnz
sbb
or
jl
mov
loop
dec
add
xchg
cmp
adc
sbb
cs
cmp
cmpsb
nop
rcll
out
mov
mov
test
xorl
xor
sub
test
pop
cld
jbe
xchg
sahf
push
jnp
testl
jnp
in
hlt
or
insl
pop
test
jnp
add
aad
call
xchg
jno
xor
cmp
ret
adc
test
loopne
add
out
jnp
dec
cld
xchg
rorb
repz
mov
insb
push
cmp
adc
jmp
clc
or
mov
call
sub
cld
lock
enter
ss
imul
dec
jns
mov
pop
sti
in
sbb
or
hlt
inc
push
fcompl
in
sarl
aam
add
or
add
push
push
js
aas
ss
shlb
jne
outsb
sub
sar
in
jmp
into
mov
test
jp
aam
cmpsl
mov
push
gs
arpl
cs
mov
push
mov
jbe
lods
push
nop
ret
mov
mov
jl
and
fwait
ljmp
push
inc
outsb
dec
aam
push
sbb
jnp
and
jnp
push
adc
push
outsb
aad
lcall
pop
jb
out
xchg
test
jg
cld
mov
fadd
lock
mov
add
test
inc
push
cmc
lret
pop
fdivrl
sub
mov
pop
lods
in
mov
int
gs
jnp
into
xchg
adc
xchg
roll
test
xor
decl
mov
inc
xchg
test
test
enter
mov
divb
mov
rolb
aad
adc
mov
imul
shrl
dec
xchg
addr16
dec
sub
outsb
xor
imul
pop
lods
idivl
mov
push
pop
dec
cmpsb
cmp
xlat
adc
xchg
cld
sti
movsl
je
jecxz
push
xchg
xchg
cmp
stc
js
jmp
xor
je
jne
in
xor
mov
inc
aaa
fsts
or
mov
pop
jp
adc
adc
or
sub
mov
test
push
fsubr
mov
xor
pop
imul
adcl
adc
jnp
or
push
cmpsl
xchg
jmp
mov
inc
pop
mov
dec
lret
jp
div
xchg
shlb
sahf
sti
lret
ljmp
mov
add
mov
push
mov
aas
xor
dec
push
pushf
into
lahf
sti
je
xchg
mov
jg
jnp,pn
add
paddb
or
jecxz
cmp
push
or
push
imul
jns
cmpsl
int3
mov
xchg
add
clc
xchg
xlat
int
cmpsb
pop
sub
ret
imul
insl
cmp
push
je
dec
jmp
mov
fstpl
pop
sti
push
inc
bound
inc
scas
mov
jnp
mov
jae
jnp
add
dec
pop
mov
jecxz
and
test
ljmp
dec
sbbb
popa
xchg
mov
mov
cmp
pushf
loopne
sub
pop
iret
pop
pop
ljmp
cltd
pop
insb
neg
xor
test
push
daa
mov
mov
adc
jp
ret
movsl
add
daa
lret
dec
mov
mov
jge
jae
push
inc
lahf
inc
repnz
mov
cmp
jnp
repz
jnp
mov
jl
in
outsb
jnp
and
jge
in
lahf
fisttps
in
mov
jns
push
out
jnp
mov
sbb
outsb
jnp
std
arpl
mov
icebp
pushf
add
cmp
jnp
mov
push
lods
lcall
das
and
xchg
dec
imul
arpl
mov
test
ds
push
sti
loopne
insb
ret
nop
mov
xchg
lcall
ss
mov
jecxz
jnp
es
and
cld
mov
mov
ljmp
add
int
pop
and
pop
sub
rolb
fwait
sub
mov
jnp
mov
pop
pop
rorb
test
pop
repz
repnz
push
jge
push
sub
cmp
add
lahf
aas
and
scas
adc
pushf
adc
jnp
xchg
psrlw
xchg
jnp
cltd
push
movsl
xchg
cmp
test
cld
jnp
xchg
arpl
adc
xchg
push
je
insb
dec
mov
mov
sbb
xor
std
add
sbb
mov
dec
xchg
jnp
es
pop
mov
lret
sbbb
adc
add
test
movl
xchg
xor
jae
sbb
sti
xchg
jno
dec
xor
jnp
js
scas
stc
mov
addl
jno
lods
jnp
filds
adc
jnp
movsb
jmp
cmp
pop
mov
loop
std
inc
loopne
jle
lahf
xchg
enter
mov
aas
out
jnp
lret
mov
sub
mov
inc
xchg
cmpsb
movsb
jnp
test
adc
jnp
aam
lods
xchg
cmpsl
cmp
sbb
sub
stos
ficomps
mov
bound
scas
fldcw
jge
lea
push
outsb
push
adc
adc
sahf
push
inc
push
pop
test
outsl
es
jnp
mov
jp
test
lcall
sarl
push
and
xlat
sub
jnp
out
aam
mov
movsb
xor
pusha
iret
pushf
ret
xlat
ja
push
mov
mov
jns
xor
jo,pt
sti
jae
shlb
lcall
ss
fs
rorb
sti
in
xchg
or
jnp
test
cs
sbb
adc
jnp
push
bound
lock
push
xchg
xor
jge
jnp
sarl
mov
mov
pop
jnp
lret
bound
in
push
fsubrs
mov
test
sbb
lahf
xorb
addl
pusha
mov
cmp
mov
mov
inc
adc
stos
fmuls
gs
ret
inc
jnp
xor
das
adc
jbe
dec
mov
pop
jns
lret
jnp
enter
push
xor
sub
push
mov
xor
lods
orb
pusha
sub
dec
jmp
in
mov
ja
ljmp
xchg
xor
popf
jnp
test
or
out
aad
xchg
testl
mov
jg
scas
std
and
int
inc
mov
dec
lahf
or
jb
sarl
sbb
jnp
xchg
fldcw
cli
mov
dec
jb
sti
mov
or
sbb
push
in
sbb
jnp,pt
fsub
xchg
cmc
test
fbstp
imul
cwtl
sub
cltd
cmp
ja
mov
lods
add
pop
pop
imul
loope
mull
bnd
jecxz
and
shll
jns
dec
add
mov
cmc
fstps
sub
push
pop
xchg
popa
lods
adc
xor
insl
push
sahf
mov
jnp
nopl
xchg
lds
test
in
xchg
sub
addr16
cmp
repnz
jle
movsl
mov
sub
jnp
sysenter
cli
sub
jb
sub
arpl
sbb
xchg
aaa
outsb
dec
xor
or
jne
xchg
push
mov
and
fildll
adcl
xchg
jmp
mov
add
jnp
outsl
imul
mov
adc
cmp
mov
jnp
iret
add
mov
xor
imul
pmuludq
and
adc
es
cmovs
pop
cmp
data16
jle
or
rorb
inc
popl
xchg
test
fcompl
fwait
int3
sbb
or
fst
push
sarb
aas
add
hlt
jecxz
jnp
popa
scas
repz
rcr
xchg
cmp
xor
test
es
cld
jnp
jmp
jecxz
iret
insl
les
sub
insl
and
mov
outsb
int3
lcall
xchg
xchg
out
add
movsb
mov
out
mov
outsb
inc
sub
negl
movsb
sub
jg
pop
rep
pushf
cmp
xchg
cmp
jnp
loopne
sahf
cli
stos
add
sti
push
fisttpl
dec
shlb
lods
test
inc
in
ja
and
andb
mov
push
xchg
push
leave
mov
and
int3
dec
jnp
xorl
daa
dec
lahf
cmc
lea
das
pop
jnp
sahf
inc
cmp
jae
mov
jbe
adc
in
sahf
push
sbb
stos
adc
add
fwait
jnp
cwtl
test
test
and
movsl
iret
xchg
xchg
mov
push
cwtl
gs
test
dec
and
int
arpl
cmp
mov
stos
xchg
add
dec
and
jl
push
or
mov
insl
xchg
xchg
mov
sti
adc
cwtl
cmp
std
sbb
dec
fisubrl
fs
rcr
mov
mov
jg
pop
pop
lret
mov
nop
and
fcmovu
sti
lock
lds
or
and
repz
adc
jns
push
dec
out
fldl
jnp
imul
inc
jnp
xor
out
es
mov
shrl
iret
ja
ud0
mov
pushf
push
mov
jl
or
out
neg
xchg
add
jg
sahf
sub
jnp
or
pop
ficoms
aad
loopne
mov
fistps
mov
mov
lods
sbb
movsb
or
ds
mov
movsb
jns
ja
jnp
fldl
in
pop
jnp
push
rcrl
fwait
jb
scas
push
gs
iret
repz
pop
loope,pt
arpl
push
pop
fsubs
dec
mov
dec
pop
jmp
jnp
cmp
scas
xchg
mov
pop
cmp
cmp
push
inc
inc
jns
ss
outsb
jnp
sbb
insb
jnp
addr16
push
jmp
xchg
adc
xchg
jecxz
xchg
fmulp
insl
stos
jmp
sub
push
lret
dec
jnp
and
sub
jp
and
jno
pushw
push
mov
pop
push
in
int3
xchg
add
or
xchg
push
pop
sub
cld
daa
sub
inc
outsb
sti
sbb
popa
adc
aas
push
dec
push
in
mov
fwait
mov
daa
inc
repz
mov
dec
arpl
orl
out
xor
cmp
scas
xchg
mov
daa
rorb
and
mov
lahf
add
inc
popa
daa
or
cmp
lds
ds
test
aas
dec
jnp
add
adc
fmull
add
push
sbb
hlt
pop
mov
xor
jnp
dec
jmp
out
xchg
in
or
nop
ja
addr16
or
cs
mov
pop
cltd
movsl
cmpl
push
ret
and
cld
xchg
sbb
pop
scas
adc
jnp
mov
xor
and
ret
inc
xorb
inc
jnp
jecxz
cmpl
add
lea
xor
xchg
push
outsb
hlt
jnp
jne
das
test
addr16
cmp
xor
rorl
pop
xlat
xor
sbb
and
lcall
leave
sbb
js
mov
sub
cmp
dec
jnp
sbb
ja
imul
int3
lahf
lods
mov
xorl
jnp
test
clc
adc
jnp
inc
fstpl
jnp
dec
sbb
xchg
pop
cltd
jnp
fnstenv
cwtl
ljmp
test
popf
mov
mov
stos
stos
xchg
push
cmp
pop
adc
inc
xchg
pop
inc
add
cmpsb
ret
arpl
xchg
cmp
xor
fnsave
movsb
in
cli
fucomi
lcall
test
mov
cmp
test
fcomi
xlat
out
or
dec
xchg
push
out
loopne
nop
sub
mov
push
js
cmc
movsb
sbb
dec
je
adc
jg
and
jno
jo
jbe
dec
sub
mov
not
loope
popa
and
adc
aas
rcl
ret
xchg
test
jl
fwait
decl
mov
nop
nop
add
dec
sbb
xor
adc
pop
insb
xchg
aad
arpl
je
push
jg
shrl
xor
loopne
cmp
shrl
andl
adc
jecxz
pop
lods
mov
xor
fs
movsl
pop
ret
mov
xchg
fwait
jns
or
inc
inc
pop
mov
out
scas
hlt
lock
mull
das
sub
loopne
dec
adc
add
adc
and
out
jnp
or
add
ljmp
jnp
push
push
mov
fstl
jnp
icebp
sub
mov
ret
popa
mov
jmp
mov
inc
pop
dec
sub
jbe
aaa
mov
test
jp
mov
mov
popf
scas
lds
adc
fldcw
cld
sbb
jnp
mov
xor
jnp
hlt
dec
loopne
jns
dec
mov
mov
repz
mov
xchg
loop
jnp
pusha
push
xchg
lods
mov
inc
jmp
aad
xlat
or
decl
fldcw
lock
jmp
push
es
and
pop
in
cmpsl
xor
jmp
inc
mov
adc
cmpsb
jnp
xchg
mov
aas
jnp
pushf
aad
lret
xor
aam
push
mov
push
mov
jb
mov
sbb
ror
sub
add
mov
icebp
push
and
xlat
and
lds
push
mov
cmp
push
rolb
repnz
jnp
in
lea
push
repz
jne
inc
jnp
pushf
dec
popa
jnp
jbe
add
mov
loopne
xchg
mov
insl
xchg
mov
sub
int3
icebp
xchg
cmp
mov
mov
mov
cmpsl
and
mov
inc
arpl
imul
inc
sbb
jo
push
aas
or
sub
test
sub
push
mov
aaa
outsb
xchg
jmp
or
mov
pop
repz
fiadds
je
push
and
jnp,pn
lahf
mov
lret
sbb
dec
lods
push
mov
jle
insl
addb
jmp
cmp
mov
data16
inc
jo
sahf
jp
mov
pop
jno
or
jnp
xchg
popf
mov
xchg
into
cld
ja
xor
sti
in
in
jnp
popw
pop
sbb
shll
pop
div
and
mov
jnp
adc
mov
pop
sbb
pop
incb
and
mov
sbb
add
test
cwtl
jnp
dec
fstl
xlat
inc
ret
mov
mov
jo
mov
jo
mov
test
aaa
rclb
addb
mov
xchg
jnp
mov
xchg
rclb
and
jne
popa
std
xor
scas
data16
test
push
addr16
jae
cmovp
sbb
jns,pt
push
jnp
popa
mov
add
adc
ret
enter
iret
cmpl
inc
sbb
jnp
daa
mov
mov
mov
stos
add
lret
sbb
bnd
mov
mov
jge
data16
test
movsl
mov
aas
push
jnp
mov
or
popf
jnp
jno
adc
push
cmp
jnp
mov
push
mov
xchg
aam
in
mov
xor
cli
iret
cmc
icebp
test
outsb
rolb
sti
in
push
jecxz
shll
popl
sub
sarb
and
jnp
call
push
mov
mov
xchg
and
ljmp
inc
and
fmuls
xchg
out
inc
mov
add
arpl
inc
repnz
cli
gs
pop
lods
push
jae
imulb
int
inc
cmpl
les
xor
js
add
pop
ja
daa
mov
out
push
outsb
mov
clc
mov
dec
push
enter
sbb
int3
add
std
xchg
adc
inc
dec
outsb
fidivrl
jb
test
pop
dec
or
xchg
aas
cmp
sbb
push
mov
jmp
jnp
aad
iret
sbb
test
jnp
cltd
stc
push
xor
jnp
inc
jmp
cmp
mov
jns
sub
pushf
add
dec
lahf
push
fimuls
cmp
mov
cs
jns
lahf
pop
mov
pusha
sbb
lret
add
pop
out
lds
or
xor
shll
xchg
mov
js
cld
mov
xor
mov
ss
jnp
ljmp
shlb
jnp
lret
cmp
jnp
dec
loop
dec
idivb
test
icebp
jnp
push
and
lods
imul
in
xor
mov
cmc
jnp
mov
sbb
jnp
cld
data16
cmovnp
jnp
shr
jle
dec
mov
loop
push
mov
sbb
mov
fsubrp
jmp
cmp
mov
outsb
out
add
sub
mov
fcmovnbe
fcmovbe
xchg
mov
test
jecxz
out
mov
mov
cmp
rorb
enter
dec
mov
mov
mov
sub
pop
dec
add
data16
inc
mov
cmc
cmp
ror
sub
in
in
pushf
jnp
lcall
mov
cltd
into
repnz
jnp
nop
test
mov
leave
sti
repnz
mov
js
jge
inc
sub
mov
jnp
xor
repnz
in
scas
into
ret
cmp
jnp
add
mov
test
dec
mov
jnp
lds
int3
jnp
pop
inc
into
lcall
nop
pop
test
jbe
jo
mov
push
in
mov
jp
sti
movsb
stos
movsb
push
jnp
and
popa
das
popf
imul
scas
dec
jnp
sbb
daa
adc
movsb
in
mov
cmpsb
fwait
cmpsl
lods
pop
jge
jnp
jno
mov
aad
mov
mov
push
jnp
cmp
out
lahf
shlb
mov
or
xchg
mov
jle
and
nop
fdivs
adc
sub
cli
jnp,pt
pop
sub
test
jmp
jle,pn
fcmove
cmp
sub
or
movsb
es
icebp
sub
jecxz
push
xor
jnp
dec
mov
shll
pop
sub
lods
in
pop
mov
popl
out
pop
mov
push
sub
pop
push
test
sub
test
inc
push
enter
movsb
fwait
or
cmp
push
psubq
sti
insl
addr16
push
xchg
sub
mov
js
pop
ret
sti
jle
mov
push
subl
int3
jp
stos
shlb
pusha
nop
xchg
xor
rcl
stos
jo
sub
ret
pop
sti
mov
xlat
std
add
cmpsl
mov
pop
sbb
ror
fmuls
jne
fistl
lock
push
hlt
imul
inc
mov
gs
in
jnp
jbe
sbb
sbb
int3
jnp
cmpsb
mov
fldz
jnp
fimull
mov
adc
movsb
scas
mov
in
test
daa
cmp
and
mov
mov
jmp
jnp
jp
cmp
or
inc
pop
out
jnp
mov
gs
cli
hlt
mov
in
add
jg
jnp
sub
inc
mov
mov
std
xor
adc
push
mov
jmp
mov
fisttps
lods
jnp
imul
insb
dec
dec
jl
jnp
test
cmp
and
in
into
add
pop
dec
jnp
inc
subb
add
sti
dec
aaa
dec
into
gs
ret
popa
decb
hlt
xchg
imul
ljmp
mov
mull
add
stos
fildll
jnp
push
pop
xchg
push
xchg
dec
pop
mov
xlat
cli
jnp
in
sub
and
imul
inc
insl
jnp
add
mov
jnp
mov
sbb
gs
jnp
mov
and
jmp
jae
xchg
loope
inc
push
sbb
test
or
dec
pop
jnp
out
insb
jg
mov
jns
mov
arpl
lods
mov
cmp
imul
call
mov
mov
fmulp
xchg
mov
scas
and
fmul
cld
ret
jnp
xor
add
out
jnp
fiadds
lcall
es
sti
mov
jnp
push
outsb
dec
aaa
insb
ret
pop
inc
pmaddwd
dec
test
imul
xor
fcmovne
add
insl
mov
pop
lea
sub
inc
mov
jnp
ss
mov
inc
cmpsl
or
sti
mov
ficompl
xchg
xor
xchg
dec
cwtl
mov
divb
repnz
add
and
cmp
in
xor
ja
jge
jnp
in
push
mov
loopne
xor
sbb
and
daa
xor
test
scas
aad
sub
fidivrl
ds
popa
mov
adc
fimull
sbb
jnp
int
test
mov
insb
cmp
pusha
xchg
xlat
mov
or
jl
dec
jnp
and
out
xchg
lea
fildl
xchg
sbb
inc
xchg
sub
push
fwait
mov
sub
jg
lcall
or
dec
push
lcall
lods
pop
cmp
pop
cmpsl
jnp
jecxz
fcomps
pop
jnp
xor
jmp
cltd
shlb
fmull
test
and
pop
mov
and
lds
push
push
lcall
sti
das
xchg
lcall
jnp
inc
in
add
mov
adcl
fwait
adc
stos
sbb
mov
aam
jle
jge
sub
mov
jl
outsl
fdivrs
mov
jnp
sbb
mov
xor
das
jnp
cwtl
mov
faddl
xor
fisubrl
aaa
lods
shlb
into
pop
xchg
jnp
in
mov
add
filds
push
xor
jnp
pop
lods
cmp
push
mov
dec
inc
call
xchg
mov
dec
imul
cmp
jnp
je
das
xor
jb
xorl
mov
sbb
scas
jo
adc
outsl
ja
adc
push
cli
or
adc
jns
sub
cld
in
es
xor
icebp
xchg
jno
and
mov
scas
jno
movsb
js
adc
cmp
or
aam
repz
sbb
rclb
mov
jns
jno
movsb
jmp
mov
mov
jnp
dec
mov
jecxz
fwait
cld
mov
adc
popa
outsb
mov
jmp
and
or
add
jnp
inc
or
mov
dec
cld
cmp
jnp
push
cmp
mov
ret
stos
popa
jnp
orb
xchg
jo
mov
out
loop
cmpsl
adc
insl
inc
add
inc
push
shll
mov
nop
adc
in
and
sbb
loopne
adc
repnz
jnp
jae
ror
mov
and
divl
cltd
jns
jnp
inc
or
push
jnp
mov
jge
jnp
arpl
dec
nop
imul
adc
jnp
fldenv
imul
push
cmpsb
xor
pop
gs
ret
push
adc
ljmp
push
inc
push
jnp
mov
xchg
lret
lock
lcall
fsubrl
lret
xchg
inc
and
mov
insb
dec
aaa
loopne
icebp
stos
jnp
lds
repnz
mov
mov
rorb
jp
and
sub
outsl
jecxz
mov
dec
and
inc
jnp
cmpl
mov
pop
pusha
les
lahf
jnp
jmp
pop
cmp
and
les
and
sub
sbb
sar
mov
and
cmp
cmp
jecxz
test
leave
call
js
adc
lods
adc
repnz
fistl
jecxz
sbb
int3
sub
cmc
popf
rolb
sti
aad
data16
mov
jno
mov
aaa
stos
and
and
jnp
mov
adc
rol
sti
lret
faddl
dec
jne
insb
jnp
and
sti
mov
push
call
cmp
fld
std
orb
jg
outsl
or
mov
jae
mov
ret
adc
imul
jnp
dec
aam
cmpl
cli
push
mov
inc
sub
and
outsl
stos
inc
mov
jmp
lds
xlat
sti
mov
sti
into
add
test
lock
dec
fcomi
daa
cmp
mov
xchg
mul
jge
mov
cmp
int
add
lcall
je
mov
mull
fistps
imul
dec
jge
cs
push
pop
xchg
sahf
hlt
push
cli
pop
mov
in
pop
test
leave
cmp
or
mov
push
stos
pop
adc
shlb
sbb
data16
jl
mov
ljmp
test
xchg
addl
ss
adc
jge
xor
mov
xchg
sarl
repz
cmc
inc
mov
sahf
es
cwtl
je
add
jb
push
je
mov
sbb
push
cmp
mov
jnp
mov
pop
je
dec
sbb
mov
xor
mov
loopne
add
ret
bound
add
es
xchg
jecxz
je
push
fcomi
mov
xlat
sarl
dec
les
or
jl
dec
jb
mov
testb
add
jnp
insb
popa
test
jnp
xchg
out
sbb
inc
jge
je
loope
mov
adc
and
jne
xchg
mov
fstpt
scas
and
jae
in
hlt
mov
shlb
mov
rcr
pop
push
or
dec
lahf
cmp
sub
insl
pop
repnz
cmp
jnp
aad
inc
shl
stos
lea
sub
xchg
mov
stc
negl
pop
mov
jecxz
cmp
sub
push
insb
pop
cbtw
jbe
movsb
lea
xor
xchg
sbb
adc
mov
lea
mov
jae
cmp
jecxz
xchg
push
cltd
ja
adc
cmp
mov
xor
sub
xchg
sbb
adc
stos
and
pop
jecxz
loopne
call
sbb
xchg
add
jg
fistpl
arpl
add
jno
xlat
cmp
sbb
inc
imul
xchg
add
sub
mov
imul
xchg
mov
test
sti
test
xchg
loope
jns
pop
outsb
dec
lds
jecxz
add
clc
fstpl
push
or
cwtl
test
xchg
das
add
adc
mov
cmp
add
arpl
loopne
cmp
adc
sahf
pop
pop
fwait
into
jmp
jnp
push
push
daa
addr16
stc
ds
xor
outsl
out
push
arpl
out
shll
cmp
pop
mov
pop
lock
mov
and
jo
cmpb
add
ljmp
hlt
and
cmp
fistl
xchg
xchg
xchg
aaa
dec
lret
je
xor
int3
test
sub
mov
jg
cmp
jae
jb
jnp
aaa
cmpsb
push
xchg
or
shl
pop
sub
xor
xor
xchg
mov
cltd
push
mov
jo
mul
jnp
outsl
push
mov
xchg
cmpsl
mov
add
das
negb
lcall
out
sbb
ja
jne
sahf
dec
mov
sbb
inc
jg
jnp
loop
pushf
in
andb
repz
loopne
test
mov
insl
xchg
shl
jnp
sbb
pop
jnp
sbb
mov
xor
lcall
popf
mulb
in
pop
repnz
sti
jmp
xor
mov
or
je
cmpb
not
push
mov
xchg
sarl
stos
fidivs
mov
lahf
es
adc
mov
xor
jnp
jecxz
test
movsl
popf
mov
shrb
mov
push
dec
fisttpl
jnp
aad
inc
mov
int3
dec
es
inc
dec
xor
jnp
jp
fiadds
dec
addr16
or
mov
push
jp
in
pop
movsb
loope
push
dec
popa
les
icebp
out
popfw
fldt
cmp
pop
jnp
or
pop
in
loope
add
stos
mov
mov
dec
xchg
pushf
or
popf
psubsw
lea
mov
ljmp
mov
inc
adc
mov
sbb
pop
push
jnp
inc
cmp
inc
scas
idivb
jbe
rcrl
pop
lret
cmc
in
cmp
mov
ret
cmp
aaa
outsb
mov
push
and
sub
sbb
inc
jnp
pushf
jmp
insl
lahf
out
xchg
mov
dec
jno
cmpb
and
jnp
adc
xchg
xor
lods
ljmp
out
mov
hlt
jnp
cmp
repnz
xor
sbb
divl
mov
inc
es
icebp
jl
adc
xchg
adc
ja
lret
jnp
clc
fwait
insb
xor
jnp
shl
add
mov
pop
in
sub
aaa
xor
iret
adc
imul
pop
inc
loope
scas
adc
xor
fwait
sbb
fcmovne
icebp
inc
aaa
mov
mov
bound
sub
jno
fwait
mov
mov
mov
cmp
mov
dec
pop
jo
xor
xchg
push
scas
pop
cltd
dec
inc
ljmp
xor
push
arpl
aaa
sbb
cmp
in
loop
mov
in
xchg
push
pusha
and
cmp
mov
fwait
addr16
fcmovnu
add
lds
sbb
mov
cli
leave
sbb
aaa
mov
mov
jecxz
jmp
dec
dec
pusha
pop
sub
test
sbb
lods
mov
cmpsl
aaa
bound
dec
jl
stos
jnp
adcl
xor
xchg
data16
and
cmc
jnp
inc
cmp
jnp
xor
fisubs
movsb
aad
aam
lock
dec
adc
arpl
cmp
push
in
mov
jnp
gs
lret
loope
inc
push
stos
mov
jecxz
in
mov
ja
sub
or
ret
xor
test
xchg
lahf
arpl
mov
pusha
lods
mov
push
test
in
or
push
fcoms
xor
movsb
outsb
jae
test
in
and
aaa
testl
movsl
out
xchg
pop
sub
mov
xchg
mov
call
pop
inc
in
dec
jl
pop
jg
adc
sub
or
cld
jecxz
jecxz
jbe
cli
in
int3
pop
cmpsb
addr16
cmc
dec
inc
pop
sbb
nop
fstl
das
pop
inc
cwtl
cmp
movsb
mov
jnp
push
mov
jnp
nop
cmp
mov
popf
jnp
test
movsb
jp
jge
push
leave
jl
push
inc
xor
pop
shll
push
adc
outsb
jne
scas
xchg
fcmovne
jge
repnz
push
jg
xchg
iret
cmp
jnp
inc
push
es
lods
mov
hlt
or
loope
movsb
adc
and
hlt
cmpsl
dec
sbb
mov
out
add
or
sbb
lret
sub
push
sbb
negl
aas
arpl
mov
or
pushf
dec
add
mov
daa
addr16
aad
mov
push
out
adc
pushl
xchg
inc
mov
aam
pop
dec
int3
mov
add
stos
sub
int
fcompl
push
addr16
test
mov
pop
js
xchg
hlt
fldt
in
dec
cmp
rcl
popl
or
cltd
dec
stos
adc
push
inc
mov
sub
int
jb
ja
mov
mov
cmp
sbb
jp
aaa
mov
inc
jecxz
xorl
add
std
ljmp
dec
lds
pushf
daa
and
jnp
lahf
call
fdivrl
aas
out
mov
cltd
mov
jmp
int3
push
mov
pop
push
sbb
jnp
mov
insb
arpl
adc
mov
fs
lahf
enter
and
scas
call
lcall
ja
int3
cmp
add
fisttps
jmp
ja
adc
xchg
add
fcomi
cwtl
pop
jnp
jecxz
mov
cmpsl
dec
xlat
jno
mov
mov
int
mov
pop
mov
add
mov
pop
jp
adc
cmpb
adc
insl
stos
mov
dec
and
jnp
push
lahf
mov
jnp
das
or
adc
dec
loope
clc
int3
lret
lahf
pusha
jae
xchg
cmp
clc
pop
lret
imul
push
pop
add
notl
mov
idivl
aas
je
shrl
mov
shlb
addb
mov
dec
iret
push
sbbl
jnp
xor
xor
cld
jp
fs
push
xchg
addr16
jae
outsb
cmp
jl
mov
outsb
push
dec
out
or
inc
out
sub
outsl
jno
fisttps
jnp
cmp
xchg
inc
cmc
jnp
je
cmp
mov
jo
pop
ljmp
es
fistps
rcrb
popw
adc
dec
std
arpl
push
mov
mov
mov
outsl
ja
adc
push
adcl
cmp
xor
popa
and
jae
call
pop
xchg
dec
pop
hlt
aad
jecxz
jecxz
rcrb
lret
mov
scas
xchg
loop
and
std
lods
cmc
pusha
outsl
cmp
outsb
pop
imul
jbe,pn
jnp
xlat
jns
idivb
inc
inc
test
cmp
add
xlat
out
sahf
test
insb
in
fninit
xorb
xchg
push
mov
mov
dec
xlat
fs
jl
test
sbb
push
sbb
push
loope
je
sub
xchg
sbb
push
push
and
cwtl
jnp
mov
jnp
adc
nopl
jnp
loop
andl
xchg
mov
fnsave
push
outsl
push
or
jl
outsb
popf
push
clc
inc
xchg
pop
movsl
shr
jnp
sahf
movsb
or
addb
clc
add
inc
pop
test
cmp
in
fsubrs
daa
fs
scas
aad
push
mov
repz
push
jnp
mov
xchg
push
mov
xor
hlt
adc
fs
ds
fwait
movsl
mov
sti
inc
int
and
arpl
mov
xchg
jnp
int3
inc
in
xor
fistpll
jb
add
daa
mov
lock
jnp
push
cmp
push
or
call
hlt
or
test
addb
xchg
cmp
lock
clc
in
cmp
inc
lds
jnp
add
pop
jnp
pop
adc
pop
xor
sahf
je
jns
jp
cli
leave
sbb
cmp
and
mov
jmp
imul
pop
mov
jnp
lcall
sarl
mov
jne
lods
fisttps
dec
sbb
jecxz
pmulhw
xlat
push
es
je
adc
out
mov
jnp
inc
xorl
imul
out
testl
es
xchg
andb
mov
adc
jnp
addb
mov
and
test
jmp
jnp
andl
mov
movb
jnp
mov
cli
mov
xchg
fistps
cmp
jmp
fstpt
fbstp
mov
xchg
lcall
clc
aam
add
mov
leave
repnz
adc
addl
cld
fs
push
xchg
mov
outsb
sbb
push
push
jno
daa
rorl
test
sti
cwtl
xor
or
movsb
test
pop
jbe
adc
pop
and
jnp
xor
xchg
push
inc
insl
cmp
mov
sahf
ja
cmp
xor
daa
ret
popf
adc
jnp
ficoms
fldcw
jno,pn
lret
pop
sbb
sbb
or
mov
xor
push
arpl
inc
sbb
fs
mov
sbb
idiv
pop
add
cmc
fistpll
cmpsl
add
xchg
jb
and
xchg
xchg
cld
add
mov
jb
pushf
insl
pop
outsb
out
push
xchg
data16
mov
add
ret
or
push
xchg
jnp
lahf
jnp
rcll
fxch
mov
sbbl
xchg
pop
fstl
jnp
fwait
mov
jb
mov
jnp
sub
push
xor
adc
jnp
sarb
pop
xchg
fwait
cwtl
cmpb
enter
sbb
cmp
sti
icebp
inc
inc
outsl
push
icebp
inc
jnp
hlt
out
push
lds
mov
jnp
cmpb
add
lret
out
cmp
sti
pop
mulb
mov
adc
idivl
sub
sub
pop
jo
test
ja
mov
or
std
lds
shll
pop
jno
das
jnp
or
mov
add
cltd
add
mov
dec
fnstcw
out
push
sub
mov
push
inc
bound
push
rcl
sarl
or
jecxz
cmpl
pop
push
shl
cwtl
jnp
int3
pop
xlat
rcll
mov
push
sbb
jnp
enter
jo
jnp
mov
jb
iret
jns
outsb
cli
jge
fmuls
repnz
arpl
xor
sti
ss
enter
xor
jp
mov
mov
and
test
dec
add
xchg
int3
testl
adc
add
aaa
pop
xchg
rolb
icebp
xchg
in
pushf
sub
jnp,pn
mov
pusha
jnp
inc
jne
lahf
repz
xchg
xorl
mov
rol
xor
imul
das
jg
add
sti
xor
cmpsb
hlt
in
xchg
das
dec
pop
jp
add
jnp
into
push
inc
jne
jnp
shrb
add
xchg
popa
pusha
pushf
loopne
sub
pop
add
adc
mov
inc
and
stc
nop
xchg
pop
jno
ja
mov
mov
je
add
jnp
push
pop
cld
mov
and
lea
mov
dec
jnp
sbb
cwtl
cmpsl
sar
mov
sbb
cltd
push
call
outsl
insl
sbb
cmc
mov
fdivrl
pop
and
mov
sti
or
gs
and
cmp
rorb
cmp
ret
dec
ficoml
jae
jnp
ljmp
jnp
enter
loopne
mov
jno
arpl
dec
inc
inc
inc
mov
notl
cli
xchg
repz
sub
clc
sti
mov
sub
jnp
jp
mov
mov
dec
jmp
rorl
inc
ret
pop
jp
jnp
jbe
jle
fdivs
in
xor
enter
ja
repnz
xchg
dec
add
jnp
int3
and
dec
sbb
xchg
fwait
xchg
imul
jnp
or
shl
mov
ror
push
or
stc
mov
addb
xor
sbb
jnp
out
push
xchg
scas
ljmp
or
les
outsb
lret
andl
dec
test
push
inc
mov
test
dec
loopne
dec
jnp
sub
cld
sbb
rcrb
inc
push
lods
inc
in
push
outsl
rolb
pop
jnp
cmp
mov
sub
in
adc
int3
xor
jnp
push
jne
into
mov
jl
daa
xor
outsb
lods
mov
ret
push
jle
sbb
ljmp
int3
jbe
call
cmc
xor
sbb
jecxz
fsubl
aaa
jge
jo
fwait
xor
adc
mov
jle
jecxz
mov
jp
icebp
fistpl
xor
je
mov
out
pop
sub
add
sbb
fimuls
repz
xchg
movsb
adc
in
cltd
sub
dec
mov
jg
addr16
outsb
xchg
sbb
xor
mov
lods
mov
push
mov
and
inc
lcall
outsl
ds
loopne
fwait
sub
pop
and
cmp
adc
mov
and
add
frstor
repnz
cmp
adc
lret
rcrb
sbb
sub
jmp
mov
sub
add
and
sbb
push
sti
cmp
mov
adc
idiv
mov
test
jg
push
jl
inc
mov
jnp
xchg
mov
imul
scas
and
add
xchg
ret
loopne
pushf
test
sbb
arpl
mov
inc
rorb
sub
and
adc
xor
cmp
inc
movb
and
xor
mov
jge
loopne
pop
sbb
clc
in
adc
jae
lcall
add
mov
pop
test
xchg
cmc
inc
push
push
adc
scas
mov
mov
pop
push
arpl
jg
jns
pop
xchg
divb
rorb
jge
fcoms
inc
loop
imul
notl
movd
add
ja
adc
adc
jecxz
xchg
adc
lods
stos
dec
add
inc
adc
inc
mov
inc
int3
arpl
pop
mov
xor
stos
inc
push
xchg
or
or
sub
daa
fidivrs
fsubrp
dec
xchg
jo
test
push
xchg
jbe
leave
sti
mov
movsl
jnp
js
dec
pop
leave
and
mov
jmp
les
cmpl
xchg
xor
mov
mov
cmp
dec
mov
jnp
std
mov
xor
out
test
in
mov
imul
xor
jnp
add
sub
popf
into
xor
inc
adc
mov
and
iret
and
jnp
push
sbb
mov
push
pop
inc
pop
push
xchg
pushf
cmp
push
or
fwait
mov
fistpl
fnstsw
and
js
jge
scas
cltd
lcall
and
loope
fidivrl
mov
std
push
sti
push
inc
pop
call
loop
ret
lret
mov
jge
mov
outsb
adc
xlat
jns
cli
pusha
lret
outsb
add
pop
mov
sbb
cltd
cwtl
cmpb
mov
cli
aad
mov
push
mov
rclb
adc
xchg
or
je
in
into
adc
mov
out
inc
xchg
mov
sbb
pop
mov
pop
jnp
rcl
xchg
rorl
loopne
mov
popf
rolb
dec
bnd
aas
jnp
push
aad
cmp
adc
cmpsl
fisubrl
sti
ljmp
mov
mov
push
pop
jb
xchg
rorb
dec
jnp
in
xchg
gs
xchg
icebp
jnp
or
inc
jo
push
test
adc
sar
sbb
cltd
cs
add
xchg
mov
xor
outsl
mov
addr16
sbb
xchg
jmp
dec
into
int3
shll
or
movsl
sbb
cmpsl
inc
jae
mov
jecxz
mov
mov
xlat
xchg
in
pop
push
call
mov
pop
jle
pop
mov
mov
pusha
pop
lods
sbb
jnp
sub
mov
push
xchg
je
sti
push
sub
xor
bound
sbb
jnp
pop
jo
mov
xchg
arpl
or
mov
and
jnp
sub
mov
adc
sarl
jo
jne
adc
in
cmp
paddsw
pop
mov
out
mov
repnz
leave
jae
movb
pusha
mov
sbb
or
fsubrp
mov
jg
pop
push
sub
inc
xchg
or
xchg
arpl
fwait
mov
ja
rcll
jnp
cmc
ucomiss
mov
jbe
data16
ljmp
lahf
and
cld
mov
shlb
mov
inc
jno
xor
stos
xchg
out
inc
lret
int
dec
decb
pop
lods
or
rcll
vmovaps
dec
push
pop
test
in
mov
es
jnp
fldenv
xchg
ja
xchg
xlat
cmpsb
inc
jnp
dec
xorb
mov
icebp
mov
scas
ljmp
aam
ret
adc
cmp
jae
add
scas
push
inc
out
add
sti
xor
cwtl
arpl
lods
jnp
cld
mov
cltd
mov
cmp
pop
jg
mov
sar
ret
aam
idiv
and
jnp
dec
push
mov
movsb
mov
out
sub
orb
shll
sahf
jge
cmpsl
xor
lods
xor
les
dec
adc
fnstcw
or
nop
jmp
addr16
mov
fistpl
cmp
enter
negb
and
je
data16
fstl
pop
std
adcl
aas
test
dec
mov
jae
pop
pop
gs
hlt
call
mov
jnp
jbe
add
and
pop
adc
out
pop
fiaddl
dec
aam
mov
mov
test
repnz
pop
sub
jnp
mov
inc
aad
sahf
imul
jnp
dec
fcomp
mov
push
rorl
mov
jnp
xchg
scas
pop
hlt
loopne
inc
add
loop
pop
sub
pop
mov
mov
sub
test
jnp
faddp
or
call
mov
xchg
jnp
ja
or
sahf
jecxz
jnp
pop
pop
jl
int3
mov
sub
push
and
mov
dec
and
pop
jnp
stc
pop
idivb
insl
push
inc
dec
fstp
jnp
int
test
repz
clc
mov
ds
ljmp
jnp
imul
ret
in
xchg
mov
jge
cmp
hlt
mov
cmp
sub
call
push
add
xchg
je
xchg
imul
outsl
lahf
lahf
arpl
cmp
pop
xchg
loop
sbb
cmpsl
dec
mov
sbb
pop
adc
jnp
stos
jge
xchg
fimuls
lods
test
cs
push
mov
loop
outsb
dec
idiv
sbb
insb
jae
icebp
arpl
test
or
adc
cli
dec
cld
pop
lods
xor
adc
inc
out
fistpl
pop
test
sbb
cltd
loop
sub
inc
jbe
sub
mov
push
push
xchg
leave
popf
cmp
mov
push
leave
movsb
jnp
stos
pop
push
xchg
scas
lds
mov
xchg
mov
lcall
dec
xchg
xor
xchg
cmpsl
lahf
dec
sbb
inc
mov
dec
xor
shll
stos
pusha
mov
mov
inc
ret
sub
mov
fiadds
nop
jle
jnp
mov
iret
fadd
sbb
mov
add
cli
in
add
shlb
icebp
cmp
insl
mov
jmp
scas
mov
mov
cltd
xchg
mov
test
subl
add
inc
adc
xor
ja
movsb
fidivl
repz
mov
pushf
jle
mov
inc
jo
int3
dec
jnp
pusha
fwait
or
bound
rorb
test
xor
stos
sbb
pop
jnp
push
sub
lahf
test
mov
call
das
jnp
and
or
in
sarl
loopne
sbb
pop
in
or
add
fndisi(8087
sarb
mov
hlt
pop
call
xchg
mov
push
iret
jnp
push
dec
xchg
xor
add
and
subl
and
movsl
mov
enter
in
dec
jnp
sub
call
inc
pop
out
cmp
sub
sbbl
pop
loop
jnp
sbb
cmpb
add
repnz
or
or
dec
cmpsb
jp
inc
mov
inc
jnp
dec
add
arpl
rolb
jns
sti
jnp
fnstsw
xor
mov
pop
call
cli
lcall
pop
and
sbb
inc
xchg
arpl
fimuls
jecxz
sub
enter
ljmp
push
loope
mov
pop
in
dec
gs
idivb
xchg
fists
out
push
jnp
cs
mov
cmc
loope
fcmovnbe
lods
jnp
cmp
fadds
mov
inc
jmp
sahf
pushf
bound
loopne
adc
and
pop
add
mov
in
sbb
dec
adc
mov
jnp
and
ret
fiaddl
push
push
cld
fucomi
pop
jnp
loop
push
mov
xor
jb
outsl
cmpsl
into
jne
leave
fdivrs
enter
or
jnp
popa
or
mov
xchg
outsb
mov
lds
add
adc
pop
jne
xchg
jmp
push
sti
xlat
clc
sub
pop
shlb
into
movsl
divb
jnp
sbb
faddp
dec
sbb
mov
insl
cmpb
jns
push
xlat
inc
inc
mov
imul
push
mov
mov
test
ljmp
adc
adc
lret
jnp
arpl
adc
mov
dec
push
pop
in
sarb
xor
gs
jnp
sbb
mov
dec
out
push
pop
sti
pop
ss
jnp
adc
sub
dec
test
andb
sub
insb
fs
pop
or
arpl
or
fbld
mov
and
sti
mov
push
stos
fildl
pop
fiaddl
xchg
popf
outsb
ss
pusha
sub
jae
xor
xchg
pop
inc
fidivrs
mov
dec
adc
sbbl
jmp
out
ret
mov
push
sbb
pusha
and
test
mov
mov
lret
sub
mov
jg
leave
incl
or
pop
push
fs
xchg
xlat
ret
sub
pop
and
mov
stos
jae
mov
xchg
daa
mov
je
cmp
add
jnp
push
iret
add
clc
roll
xchg
js
test
fsubs
fsub
xor
dec
sub
sbb
es
clc
bound
inc
ret
xor
dec
mov
mov
arpl
mov
cmp
push
adcl
insl
pop
lcall
pop
inc
jnp,pn
pusha
mov
cmpb
aas
mov
cmpsl
jae
push
inc
ret
jmp
sub
adcb
xor
jecxz
jnp
out
dec
cmp
inc
pop
jnp
into
xchg
fcompl
test
dec
mov
arpl
dec
das
mov
lahf
cmp
aam
add
dec
scas
sbb
xchg
leave
loop
imul
imul
push
pusha
cmp
fwait
mov
pusha
adc
fadds
xlat
jo
lock
jp
cmp
or
jae
dec
cmp
lods
xor
lret
jae
add
aas
mov
cs
and
hlt
stos
xchg
pop
rolb
cmp
sarl
cs
call
imul
cwtl
sub
sahf
pop
scas
repnz
mov
or
insb
push
iret
bound
xchg
int3
iret
jle
mov
mov
fucomi
icebp
jnp
popf
push
xchg
cmpsb
mov
jnp
xor
movsb
inc
lcall
cmp
leave
dec
jnp
sbb
add
lods
shlb
cltd
cmp
jno
push
xchg
movsb
jge
shll
push
mov
lds
fnstcw
inc
jnp
cmpsb
push
mov
xor
jnp
gs
and
or
add
nop
roll
dec
push
scas
test
adc
arpl
ljmp
jbe
pop
jnp
dec
xchg
js
mov
mul
movl
push
jecxz
dec
stc
outsb
add
mov
jae
xor
insb
jae
inc
dec
push
xor
bound
jge
sti
rcrl
push
ret
test
loope
pop
push
mov
pop
loopne
ret
push
outsb
jo
repz
mov
ljmp
icebp
js
mov
or
loop
inc
pusha
fwait
dec
push
mov
or
fmull
adc
sub
popl
stos
jnp
bound
xchg
movsl
aad
jnp
fs
mov
outsl
jno
iret
dec
jp
jo
mov
pushf
jl
fwait
or
aas
jae
jns
mov
jge
xchg
ds
jnp
inc
add
mov
js
jnp
add
add
rorl
sbb
push
es
inc
push
je
in
ret
adc
add
out
out
mov
adc
jge
repnz
xchg
movsb
xor
pop
mov
andl
adc
inc
daa
lea
sub
jg
mov
cltd
sahf
pop
jmp
adc
cmp
pop
and
rorb
dec
push
mov
scas
inc
or
jnp
cmp
sti
add
adc
lahf
or
xchg
dec
out
testb
cmp
cltd
jb
lock
pop
dec
inc
xchg
sub
sub
dec
stos
std
popf
call
sub
mov
mov
repz
inc
sub
jnp
or
pop
jnp
push
inc
push
add
pop
xor
xchg
mov
mov
lcall
adc
repnz
inc
mov
cli
mov
mov
jnp
cwtl
fcomps
sbb
sub
clts
pop
jbe
xchg
out
in
and
lret
push
or
or
addr16
loope
or
mov
or
dec
addr16
pop
inc
aaa
call
mov
ffreep
mov
xchg
outsb
das
xor
xor
lea
cltd
push
or
jp
addl
mov
or
sbb
cmp
sbb
cmp
outsb
cld
insl
jp
dec
mov
push
mov
pop
dec
mov
mov
xor
stos
outsb
mov
dec
push
test
sbb
cltd
lahf
pop
movsb
add
stc
jmp
mov
add
jne
out
or
jnp
in
in
add
lea
fiadds
sub
ja
xchg
test
xchg
popa
push
scas
dec
jnp
mov
jbe
jnp
adc
jnp
sbb
or
mov
mov
xchg
sbb
push
pop
imul
or
jnp
test
cmp
jnp
push
cltd
into
and
inc
dec
movswl
sub
out
jecxz
push
out
pop
test
mov
loope
mov
rcll
lcall
ja
adc
aas
lcall
xchg
push
xchg
dec
xchg
mov
sbb
cmp
jnp
add
leave
mov
jnp
cmp
pushf
mov
daa
add
into
jp
jnp
mov
xor
movsb
cmp
cmp
jb
adc
and
adc
test
fsqrt
mov
xchg
and
jnp
cld
push
xchg
pop
xor
sti
push
and
aas
lods
jmp
inc
jnp
cwtl
iret
or
xor
mov
test
pop
das
cmp
inc
mov
or
in
icebp
sub
inc
dec
push
inc
daa
or
push
sbbl
add
lock
mov
sahf
xor
jno
jnp
xor
cs
xchg
mov
adcl
popa
cmp
popf
ja
aam
cwtl
movl
sub
sub
xchg
mov
jnp
aas
rcrb
xlat
fildll
jg
and
xor
push
add
cmpb
jnp
push
lret
pop
add
mov
sti
mov
dec
push
jnp
dec
jle
and
aas
mov
mov
inc
xchg
sub
push
arpl
mov
icebp
or
jmp
in
add
stos
push
std
mov
clc
cmpsl
add
jmp
inc
jnp
mov
std
shrb
nop
aaa
xor
jnp
or
js
ret
jnp
sub
mov
mov
outsb
arpl
cmp
push
pusha
jnp
mov
jnp
loop
inc
fcmovnb
or
jnp
popf
scas
insl
mov
add
lahf
test
repnz
cwtl
insb
int
or
test
cmpsl
xor
pop
ss
sub
cmpsb
lods
mov
push
ss
std
outsl
scas
inc
seto
hlt
ja
jmp
xchg
nop
fwait
outsb
faddl
daa
pop
aam
xor
jp
loopne
ret
jecxz
jp
pop
lret
aam
pop
adc
xorb
xchg
addr16
jb
repnz
rcl
outsb
dec
mov
pop
je
incl
inc
mov
loop
cld
aaa
dec
mov
sbb
adc
dec
gs
jmp
pop
or
mov
adc
dec
shrb
cld
mov
mov
mov
mov
mov
adc
mov
or
jnp
pop
xchg
inc
int3
stc
stos
das
jnp
or
jge
clc
cwtl
test
sbb
psrld
flds
jbe
push
ficoms
movsb
adc
stos
sbb
push
xchg
mov
jnp
inc
in
jecxz
es
outsb
push
aad
scas
jnp
inc
loopne
add
insl
dec
xchg
call
mov
add
xchg
das
jge
movb
mov
xchg
push
dec
push
imul
add
jmp
gs
sbb
xchg
adc
push
mov
sahf
sti
sbb
mov
jnp
nop
pop
jae
lea
jnp
mov
adcb
shl
mov
jnp
sbb
jge
sbb
mov
shr
sbb
out
stos
cmp
mov
stc
xor
fcomip
xchg
in
push
or
jle
popa
cmp
lcall
sti
dec
out
test
pop
add
mov
xchg
pop
inc
outsl
jnp
mov
test
test
call
pop
data16
cld
mov
js
jmp
pop
sarl
lret
lcall
inc
xchg
cltd
es
xchg
jnp
outsl
adc
mov
leave
mov
fucom
add
cmc
int
mov
xor
mov
adc
lds
sub
pop
cmp
xor
xor
jnp
sbb
out
in
sarl
divb
fdivrl
mov
mov
movb
dec
rep
loope
pushf
xchg
lret
ret
addr16
les
lret
faddp
xchg
xchg
lret
leave
push
int3
sti
in
mov
xchg
sbbl
enter
stos
sub
jge
leave
push
jno
int3
cmp
fisttpl
shrb
or
or
jnp
std
jo
and
pusha
mov
addb
mov
in
add
ljmp
popa
pop
jnp
nop
pop
sub
mov
jnp
sbb
mov
add
push
xor
aam
mov
out
push
xchg
insl
test
xchg
push
xor
cmp
add
jmp
std
cmp
jp
adc
data16
fwait
into
sub
mov
ret
cmp
cmpsb
or
cmpl
sbb
jnp
xchg
push
cmp
pushf
mov
addr16
rclb
sti
insl
mulb
sahf
loop
clc
or
lds
or
pop
loopne
shr
imul
dec
cmp
jp
adc
pop
inc
loope
testb
lret
mov
mov
mov
jae
xchg
lret
stos
aam
push
jnp
out
in
jnp
jbe
cmp
movaps
loope
insb
cmp
xchg
leave
sbb
push
jnp
push
in
jo
xchg
das
cmpsl
xchg
mov
dec
pop
sub
push
push
jb
xor
xchg
dec
xor
ja
dec
std
clc
mov
jnp
in
int3
mov
jnp
mov
ss
xchg
mov
daa
in
stos
test
cmpsb
roll
mov
loope
mov
jle
arpl
xor
aas
aad
fmul
loopne
nop
gs
push
mul
mov
mov
enter
lahf
ja
pop
jge
xchg
push
ljmp
std
xlat
shll
mov
xor
cmp
pushl
movsb
add
mov
xchg
adc
outsb
xorb
and
mov
pop
adc
push
scas
outsb
adc
test
pop
std
or
adc
pusha
sub
mov
ljmp
inc
in
inc
das
xchg
mov
mov
les
arpl
cmove
add
jp
adc
stos
mov
xchg
outsb
lahf
adc
dec
into
jns
jnp
cmp
sbb
adc
push
jnp
push
out
fldcw
sub
imul
or
fsts
inc
cmp
imul
xor
xchg
inc
ja
cmc
movsl
shrl
lret
adcb
rorb
in
xor
xchg
inc
add
inc
mov
sti
or
rorl
into
jnp
outsb
cmp
xorl
xchg
jnp
and
push
pop
shlb
int
pop
cmp
icebp
xor
pop
cmp
jg
fldcw
jnp
mov
xlat
scas
xchg
leave
call
nop
mov
jns
jge
fdivrl
aaa
inc
cld
imul
loope
call
sbbl
jnp
push
inc
mov
fnstcw
decb
xchg
jnp
xchg
fistpll
jnp
push
dec
push
jecxz
aas
scas
mov
ss
out
lods
notl
jnp
out
mov
orb
add
xor
nop
in
pop
das
scas
jmp
hlt
leave
jecxz
mov
cmp
mull
out
mov
les
jnp
jl
mov
adc
mov
cmp
cmp
cwtl
mov
arpl
xchg
cmp
mov
movsb
push
subb
outsb
cld
cmp
mov
jo
fisttpl
push
xor
icebp
push
jnp
outsb
mov
and
loop
loope
in
mov
pop
int3
scas
mov
mov
cmp
jo
test
rcll
ds
dec
add
pusha
jnp
cs
pop
xor
outsl
aam
dec
je
jnp
xchg
loopne
lock
movl
adc
mov
cmp
cltd
mov
jnp
xchg
add
jnp
pop
mov
arpl
mov
daa
std
xchg
add
stos
test
out
lcall
imul
cmpsb
jbe
dec
in
jnp
fs
out
movsb
test
lea
sbb
xor
mov
test
pop
push
mov
jnp
pop
push
mov
cmp
mov
jbe
adc
icebp
repnz
push
pop
int3
leave
ds
cwtl
pop
adc
push
outsb
repnz
insl
cmp
push
xchg
jge
iret
sbbl
jnp
lock
or
xchg
xchg
mov
mov
add
int
repnz
mov
hlt
cmpsl
dec
or
jo
jg
xchg
mov
lods
fdivs
sbb
mov
cmp
ljmp
and
mov
mov
xchg
sti
adc
test
jnp
jne
inc
jmp
add
jnp
xchg
jnp
adc
gs
lods
mov
xor
cmp
mov
aad
mov
adc
imul
test
jno
stos
jo
jno
jnp
sub
sbb
sub
jnp
jecxz
shr
lock
fstps
cld
jb
cmpb
arpl
lahf
xor
pop
xchg
rcr
int
add
mov
inc
push
fildl
mov
pushw
sbb
mov
add
rcr
jnp
pop
or
fldcw
xor
icebp
push
repz
jne
fsubrl
fwait
pushl
leave
std
mov
cld
outsb
orl
xchg
sti
mov
mov
jnp
imul
std
daa
pop
aas
push
jnp
mov
orl
jnp
mov
add
lcall
icebp
xchg
das
add
nop
and
mov
cmc
fistps
shrd
jnp
push
aaa
xlat
cltd
fdivl
sbb
das
jnp
enter
repz
inc
jnp
ret
pmaxub
xor
js
imul
jnp
adc
jecxz
jnp
or
inc
xchg
push
xchg
std
ret
cs
jle
inc
cmp
sub
lret
popf
imul
nop
int3
es
and
cmpsl
int3
add
rolb
add
jae
lret
sub
cwtl
mov
cmp
push
push
mov
movsb
pop
out
jno
sti
inc
mov
insl
push
jae
xor
mov
aas
cmp
xor
jl
iret
jecxz
test
inc
jnp
loopne
les
jnp
mov
je
mov
iret
adc
sbb
mov
cmp
movsb
jl
inc
xor
std
stc
in
jnp
dec
test
mov
mov
and
imul
inc
out
jecxz
cmpsb
jnp
inc
adcl
repnz
test
dec
fisttpll
or
dec
jnp
loopne
cmp
add
mov
jns
rolb
inc
sub
call
imul
jne
mov
mov
mov
jo
add
mov
jne
cmp
cld
cs
mov
jnp
test
das
lods
xchg
sti
dec
mov
into
fwait
std
setl
xor
jno
inc
popf
outsl
xchg
fdivr
jnp
fsts
data16
push
fnstsw
jnp
bound
jg
xchg
ret
mov
popf
inc
xchg
and
adcl
push
stos
ljmp
mov
cmp
mov
inc
test
mov
das
addr16
shll
cld
xchg
mov
push
jnp
in
nop
in
mov
add
xchg
loope
stos
cmpsb
mov
daa
les
jb
lods
cmc
inc
pushf
fs
push
dec
js
sub
adc
cmpsb
pushl
sbb
add
imul
fdivrl
jns
adc
and
jnp
pop
jmp
fnsave
or
arpl
aaa
fwait
movsb
add
arpl
jb
mov
xchg
lods
mov
pushf
ret
clc
stc
jmp
push
push
jnp
test
idivb
sbb
loope
push
inc
aas
add
pop
test
call
or
fwait
jnp
daa
outsb
loopne
and
xchg
dec
pusha
pop
xor
hlt
fidivrl
adc
in
add
add
cmpsl
outsb
jnp
stos
mov
add
lds
arpl
lahf
cmp
push
jp
mov
inc
jnp
icebp
push
mov
jge
lods
jnp
dec
popa
mov
xchg
or
sub
loopne
add
hlt
jnp
and
mov
loop
mov
push
xor
stc
cmp
jge
add
cltd
gs
push
and
jnp
repz
icebp
cmp
pop
jl
sbb
cli
fnstcw
outsl
mov
mov
les
jnp
push
out
jnp
ss
imul
jnp
cmpxchg
lea
pop
pop
xorb
add
mov
mov
lds
ss
xchg
mov
mov
cwtl
sahf
jnp
leave
mov
popf
mov
xor
xor
iret
dec
imull
sbb
push
mov
pop
xchg
aad
jne
mov
push
jbe
xchg
popl
movsl
jecxz
mov
int
jmp
mov
xlat
inc
add
jb
inc
add
xchg
push
adcb
add
lret
pop
dec
and
mov
xchg
ret
lahf
notl
add
sbb
aaa
pop
test
dec
jnp
pop
and
xchg
pop
inc
inc
xchg
add
stc
cmp
ret
dec
movsb
icebp
faddp
pop
xor
pusha
jnp
mov
mov
jge
lahf
mov
mov
push
xchg
add
sub
ljmp
sti
adc
inc
sbb
ficoml
sti
pop
xchg
xchg
push
fdivrs
addr16
jo
mov
test
lock
int
cmp
leave
sarl
and
sub
fcmovb
arpl
jnp
push
sub
jnp
mov
jb
sarb
dec
and
push
bound
addr16
cmp
sbb
in
outsl
lea
jnp
mov
lcall
icebp
push
imul
sbbb
dec
in
jnp
pop
addl
jnp
inc
sbb
add
mov
in
cmp
jno
lahf
popf
jl
inc
pop
add
and
out
data16
fists
cld
repz
jnp
and
cmp
xchg
jge
cs
xchg
insb
outsb
jnp
or
jb
pop
cmpsl
adc
ret
xor
xchg
nop
loop
push
mov
js
push
gs
call
fucomi
or
lret
add
aad
pop
inc
xchg
adc
imul
dec
insl
pushf
hlt
pop
sbb
fdivl
dec
adc
jg
lcall
dec
data16
mov
cmp
aad
scas
jmp
pop
test
gs
test
out
dec
add
leave
sbb
push
xchg
inc
sbb
and
jae
jne
adc
out
xlat
add
lods
mov
ret
out
cmpsb
cwtl
xor
fld
mov
add
jnp
mov
mov
xchg
test
cwtl
aad
nop
mov
lcall
sbb
imul
adc
xor
lahf
jnp
lods
and
and
mov
je
add
jnp
imul
outsl
icebp
cmpsb
mov
mov
adc
cltd
imul
test
push
mov
jno
pop
jge
jnp
pop
adc
mov
pop
movsl
mov
out
jnp
lcall
mov
cmp
arpl
xchg
popf
jnp
jne
les
imul
ss
jnp
in
out
dec
fiaddl
mov
fldl2e
test
cmc
test
aaa
out
mov
and
daa
pop
stos
in
outsl
jnp
jno
lods
test
push
outsb
mov
jnp
mov
xor
jnp
loopne
cwtl
pop
push
icebp
jnp
mov
js
in
mov
test
or
inc
inc
sbb
stc
ljmp
or
jno
mov
xor
mov
push
in
loop
cmc
pop
int
cmp
jmp
outsb
add
xlat
stc
pop
jecxz
fs
movsb
xchg
dec
push
inc
pop
adc
in
orl
mov
jns
pop
sti
test
int3
cmp
jne
adc
cmp
jnp
adc
cmp
pop
or
xorb
mov
xchg
subb
mov
in
mov
jecxz
out
xchg
popa
aam
faddl
add
push
rcrl
inc
outsl
push
or
shrl
insl
mov
xchg
lods
pop
dec
psrld
adc
outsl
jnp
dec
inc
lahf
imul
jnp
and
test
enter
push
std
ljmp
int
imul
jmp
into
mov
inc
and
push
repnz
addr16
pop
addr16
outsb
sub
jae
ret
fwait
jmp
wrmsr
mov
jecxz
dec
daa
jmp
add
inc
adc
or
cmpsb
pusha
js
dec
outsb
jmp
cmp
mov
insl
xchg
mov
adc
fidivl
iret
cltd
sbb
jb
test
clc
enter
add
cld
fmull
jnp
testl
decl
jecxz
test
movsb
add
pop
push
xchg
test
xchg
push
add
dec
jecxz
rcr
sbb
jmp
scas
test
xchg
jg
pop
jnp
cmp
es
sbb
cmp
cmpsl
add
push
daa
add
sbbl
push
xor
sub
mov
adc
aam
push
shlb
jg
sbb
das
in
stos
aad
lea
mov
jo
out
mov
sti
test
iret
enter
loop
or
pushf
inc
jnp
lock
push
flds
dec
dec
jle
pop
in
pop
aaa
stos
movsl
lahf
mov
xchg
rcll
outsb
xchg
dec
out
inc
or
cmp
and
or
pop
pop
fmul
dec
jnp
dec
inc
cmp
jnp
insb
std
inc
jae
add
mov
mulb
jg
jnp
inc
adc
mov
push
sbb
dec
sbb
mov
mov
sti
sub
lds
lea
in
ja
les
push
mov
jo
xchg
aas
inc
into
add
test
push
and
popf
jnp
and
add
inc
xchg
jge
inc
sbb
sub
divl
sbb
mov
inc
in
sti
push
aas
sub
inc
or
dec
daa
mov
dec
inc
mov
mov
sahf
out
mov
pop
add
lods
repz
push
inc
xchg
test
xchg
jnp
mov
rolb
xor
mov
adc
or
mov
inc
jnp
xor
sub
aad
dec
xor
outsl
std
lret
test
or
outsl
jecxz
sub
sti
xor
push
mov
popa
or
lds
repnz
fildl
lret
xor
cltd
jne
dec
jg
in
jnp
hlt
enter
jg
int
push
sub
rolb
testl
sahf
stos
test
pop
jnp
sbb
mov
push
pusha
cmp
xchg
imul
cmp
aas
cmp
add
repnz
mov
stos
sti
stc
test
sub
aam
in
fdivr
push
mov
int3
aad
jae
adc
add
inc
or
jb
mov
pop
lods
cmpl
sub
fisttpl
jne
sbb
jecxz
mov
mov
pop
or
sub
or
loope
push
jmp
pop
pop
dec
test
arpl
sbb
xor
in
cwtl
stos
mov
jnp
data16
js
dec
roll
add
push
sbb
mov
stos
lret
lds
jg
mov
cwtl
cs
xchg
mov
dec
cmpl
lods
insb
dec
xor
jg
cmpl
cld
inc
addr16
jno
jmp
aaa
stc
mov
out
pop
push
mov
xor
jnp
in
scas
fadds
xchg
jnp
and
jmp
cmc
fs
xchg
aam
jle
outsb
call
into
sub
sti
push
mov
dec
mov
or
fdivrs
mov
jmp
mov
mov
mov
and
aad
add
jnp
xchg
xor
xchg
std
jmp
adc
in
jnp
dec
loop
bswap
sbb
mov
xor
out
jae
mov
and
pop
iret
sti
inc
xchg
add
xchg
adc
jb
stos
or
jnp
push
movsb
lds
aaa
insb
ds
outsl
add
loope
inc
mov
xchg
vmread
xchg
xchg
mov
jo
sti
inc
jmp
outsb
fistpll
mov
test
push
add
xor
jno
sarb
pop
and
loope
sbb
sarb
xor
cmp
dec
lahf
and
js
cmp
adc
mov
sti
xlat
jbe
neg
jnp
shlb
cltd
stos
mov
jnp
jno
or
cmp
mov
test
jns
lock
mov
fadd
add
jnp
shrb
cwtl
mov
xchg
jae
test
call
popf
fwait
push
mov
jnp
xchg
fxam
aad
ss
test
mov
test
loopne
dec
outsb
jge
fbstp
je
cmp
pop
test
out
sti
and
insl
rcrl
dec
test
mov
xchg
shlb
test
inc
jnp
push
dec
popf
rol
cs
insb
jnp
mov
mov
and
popf
fistpl
xor
add
mov
das
jnp
xlat
cmp
xchg
xchg
push
adc
and
cmc
test
mov
add
xchg
push
mov
adc
pusha
jae
sbb
sahf
inc
popa
xlat
fldl
or
fdivr
mov
xchg
jne
inc
adc
das
mov
sbb
repz
pop
sti
hlt
enter
push
in
lret
shl
jecxz
xchg
cmp
mov
imul
test
xchg
inc
mov
cs
mov
mov
test
test
pop
scas
mov
cmc
xchg
add
jne
loopne
xchg
jnp
mov
rclb
sbbl
insl
push
fwait
inc
inc
dec
xchg
cmp
push
sti
adc
push
jnp
bound
pop
popf
mov
in
and
xchg
sub
push
mov
leave
push
ds
jnp
test
rorl
lea
insb
jnp
dec
sbb
lcall
inc
into
mov
int
cwtl
andl
sti
lahf
lea
mov
mov
push
xchg
rolb
pop
mov
jnp
pop
fisubrs
cmpsb
cmpb
sti
sub
je
or
cmp
sti
jg
add
adc
cwtl
js
mov
xor
loopne
or
and
leave
clc
xchg
aam
ficomps
sub
mov
cmpsl
xchg
fnsave
cmc
dec
xchg
jecxz
andb
int
mov
mov
add
andl
adc
popf
fwait
inc
out
adc
and
pop
cmpsb
popf
orl
in
aad
jb
push
cmp
and
pop
ss
add
out
xchg
bound
or
xchg
pusha
les
mov
rorl
xchg
or
jnp
add
sti
cmp
js
mov
mov
fisttpll
dec
scas
sar
outsl
dec
test
int
imul
pop
mov
add
sbb
les
int3
inc
leave
sahf
loopne
stc
jnp
mov
xor
jae
xor
xlat
and
lahf
mov
jle
iret
pop
popa
js
jnp
pop
movsl
out
mov
and
mov
jnp
dec
in
gs
jns
testb
shll
jmp
sub
aaa
xchg
ret
in
ret
daa
mov
jnp
lock
mov
out
test
in
push
jnp
pop
mov
lcall
jle
mov
out
cli
sar
gs
push
imul
int3
jno
iret
and
jnp
adc
aaa
jnp
movsb
cltd
shrb
repnz
mov
jg
rcrb
sub
inc
mov
jnp
bound
sti
flds
mov
mov
and
fisubrl
imul
push
dec
mov
sub
outsb
insl
jmp
jecxz
data16
into
popf
fstpt
je
sbb
push
adc
add
scas
call
jb
push
int3
pop
or
stc
adc
lret
out
out
adc
jg,pn
sti
movsb
jle
gs
cs
insb
pop
sub
lock
mov
or
in
repnz
mov
fld
xor
or
subl
shrl
mov
cli
pop
push
dec
lahf
inc
jmp
aad
adc
enter
cmp
std
pop
jae
add
push
ret
roll
std
sbb
mov
or
loopne
ud0
pop
arpl
pop
in
sub
mov
ret
aad
and
jg
xchg
jae
mov
arpl
xchg
mov
add
arpl
mov
ret
sbb
push
adc
jae
lahf
inc
dec
loopne
mov
jnp
cmp
push
mov
sbb
adc
ja
jg
mov
test
cmp
aam
jmp
mull
jnp
push
jle
imul
and
jge
in
sub
push
les
cltd
sbb
rclb
fists
stos
popf
cmp
jmp
std
and
xorb
imul
js
push
jl
cmc
std
mov
xor
cmp
stos
push
push
mov
jnp
jge
add
stos
and
popa
push
test
lret
imull
jae
fnstcw
xchg
mov
xlat
cwtl
mov
cmp
or
cmc
push
imul
out
faddl
je
mov
repz
es
xchg
adc
and
outsl
mov
push
ljmp
nop
std
rorb
dec
cltd
sbb
push
in
mov
aaa
repnz
fimuls
lret
movsl
mov
xchg
mov
cmp
mov
mov
dec
lock
bound
in
xchg
push
fstl
jno
test
lret
imul
lcall
push
mov
lea
fdivs
push
jnp
xchg
mov
movsb
test
mov
dec
jp
jnp
cmp
cmp
jecxz
cmp
stos
ljmp
fnstsw
repz
xchg
fiadds
mov
jnp
test
add
jmp
in
xchg
pop
add
push
stc
cmp
ret
fcmovnbe
add
insb
jnp
inc
sub
test
pop
jnp
jl
into
je
jnp
adc
add
mov
or
mov
sub
int
jno
dec
aad
cli
popf
jnp
stc
pop
and
mov
and
loope
add
or
movsl
sbb
add
adc
imul
xorb
lods
mov
hlt
pop
or
mov
ds
jnp
stos
shr
aas
jnp
mov
ret
and
cwtl
shl
in
test
je
sbb
fistpl
jnp
cmp
pop
insl
cld
arpl
insl
jp
sub
dec
jnp
shl
aas
int3
enter
fisttpl
aaa
jmp
sbbb
mov
mov
mov
cld
lahf
pushf
cmp
mov
add
jnp
push
xchg
cmc
int3
repz
xchg
call
std
nop
pop
dec
cmp
jnp
xchg
movsl
les
xchg
int3
testb
jnp
pop
add
dec
and
or
and
stc
xchg
in
nop
lods
into
incl
jp
jno
jp
outsl
mov
loopne
sub
and
outsb
xchg
or
clc
test
int3
mov
adc
pop
hlt
cltd
mov
push
push
push
lahf
mov
push
push
jb
pop
jnp
lods
ja
rcll
pop
jnp
jno
or
add
jo
shrb
sub
adc
jns
dec
sbb
sub
fs
cmpsb
aas
das
negb
jp
movsb
adc
add
sarl
pusha
add
mov
fwait
popa
jb
xchg
jnp
mov
xor
icebp
mov
sbb
ret
fists
subl
xchg
xchg
inc
mov
jp
mov
sbb
in
fwait
pop
xchg
out
mov
jbe
aaa
das
pop
outsb
adc
adc
add
pop
ret
insl
xchg
test
xor
lods
jnp
push
call
cltd
std
shrl
dec
dec
leave
pop
jnp
cmp
pop
mov
inc
ss
pusha
sbb
jecxz
mov
and
adc
out
rorb
pop
xchg
mov
das
add
andb
mov
cwtl
jnp
insb
je
cld
mov
jl
pop
int3
mov
mov
mov
jno
push
mov
repz
sbb
loope
pop
aas
addl
loopne
pop
jae
ret
pushf
mov
mulb
popa
aas
lret
test
movsl
gs
or
jnp
and
repnz
xchg
jnp
jg
and
cld
shlb
imul
data16
mov
jl
sub
cli
dec
dec
mov
cmp
fs
or
imul
push
rolb
fimuls
inc
jecxz
jnp
popa
insl
in
add
stos
ret
lcall
push
xchg
imulb
push
jnp
cmp
pushf
jnp
mov
mov
out
gs
mov
cmp
and
mov
jle
and
mov
jmp
mov
dec
shl
jnp
or
inc
clc
push
jnp
movsl
push
scas
js
mov
xchg
cmp
mov
mov
leave
and
or
hlt
mov
mov
adc
in
jne
repnz
xor
test
or
jnp
sahf
outsb
hlt
mov
push
loope
je
or
mov
lret
in
test
jnp
push
mov
hlt
jnp
push
ror
pop
mov
mov
stos
jnp
inc
jno
leave
sub
mov
sub
shrb
xchg
lods
stos
jo
sti
cmp
jae
jnp
adc
rorl
mov
out
cltd
ss
ror
mulb
mov
movsb
and
clc
inc
mov
mov
stos
lds
sub
mov
or
int
jnp
js
fisttpll
jae
test
popa
outsb
dec
mov
inc
scas
mov
rcr
iret
adc
push
jno
jnp
xor
jns
mov
daa
lret
mov
pop
int3
scas
sbb
jnp
sbb
jl
add
xor
imul
jo
daa
push
arpl
setns
leave
aaa
stos
sbb
mov
inc
fbld
mull
or
test
ret
sti
jge
jnp
es
into
xchg
sbb
nop
stos
cwtl
call
mov
pusha
mov
mov
sbb
mov
xchg
mov
test
mov
into
jnp
aam
fmul
jnp
lahf
mov
daa
jnp
mov
mov
rcl
dec
jnp
hlt
jb
std
dec
pop
lods
lea
jnp
fimuls
cmp
dec
or
push
cmpb
cmc
dec
jo
xchg
xchg
pop
add
pop
mov
mov
push
in
jb
in
cs
movsb
sbb
xchg
cwtl
leave
pop
add
fistpll
icebp
repz
mov
cs
outsb
inc
jnp
xor
xchg
sub
mov
adc
fs
test
mov
jne
pop
and
lahf
loopne
fwait
sarl
iret
mov
testb
stos
in
repz
jnp
inc
xor
mov
mov
fbld
cvtps2pd
jo
xlat
pop
mov
mov
add
scas
jnp
dec
xor
mov
hlt
outsl
lock
pop
das
sub
push
mov
and
mov
jb
fnstcw
push
mov
mov
push
daa
mov
fists
js
pop
adc
insb
push
call
movsb
sub
lahf
jmp
int3
sub
fbstp
sbb
add
xchg
fistpl
int
inc
out
jl
adcb
sbb
repz
inc
arpl
fdivl
fcomi
mov
mov
push
mov
mov
popf
jg
std
insb
lret
dec
adc
jnp
test
imul
je
scas
cmp
test
jnp
pop
pop
das
test
leave
test
sbb
push
arpl
mov
sub
test
push
mov
jnp
mov
dec
enter
xchg
sti
xor
push
es
cmp
nop
mov
pop
jp
mov
in
je
jnp
popf
ja
mov
jg
stos
sbb
jnp
int3
cmp
adc
scas
xchg
lods
xorl
dec
lret
inc
pop
cmp
or
jnp
and
mov
lret
in
dec
sub
and
mov
sbb
jge
sub
push
loopne
out
jns
not
or
test
enter
ja
cmp
sub
aaa
pop
or
js
jnp
inc
and
dec
repnz
push
add
fildl
stc
outsb
les
fsubrs
imul
xor
lcall
jnp
icebp
lret
outsb
xor
nop
add
mov
mov
jno
enter
js
subl
add
movsb
xchg
and
je
mov
cmp
add
fidivs
and
jnp
jb
inc
outsb
and
jmp
mov
push
cmpb
jns
js
out
out
lods
pop
sub
adc
push
out
out
mov
outsb
aaa
cmp
dec
mov
jecxz
cwtl
cmp
in
xchg
push
out
outsl
add
xchg
imul
xlat
int
adc
popf
outsb
jge
sub
adc
decl
jle
fucomi
sbbb
fdivs
sub
dec
cmp
fbld
mov
jecxz
cmc
mov
out
cmp
sbb
adc
mov
leave
mov
cmp
adc
jo
jge
ret
pop
adc
adc
cmp
pop
mov
aad
lcall
les
xchg
sub
inc
fsubrl
rcll
jo
inc
outsb
sbb
sub
dec
arpl
cmp
mov
outsb
adc
ss
cwtl
mov
xchg
cmc
adc
fxch
jg
mov
mov
movsb
shll
std
jge
jb
cwtl
rcrl
jae
xchg
aas
mov
lahf
mov
inc
mov
stos
add
pop
int3
inc
mov
in
jnp
js
jg
inc
pop
sbb
mov
test
jb
enter
jge
jns
test
dec
pushf
mov
xchg
dec
xchg
sbb
out
mov
jae
mov
incl
cmp
mov
xor
into
dec
jecxz
and
hlt
lahf
dec
rcrl
xchg
inc
cmc
sbb
fidivrs
inc
cli
leave
jnp
pop
lods
jecxz
dec
jnp
cli
mov
jo
jno
jnp
cmpsb
scas
les
loope
push
push
inc
xor
mov
jnp
inc
loop
xchg
mov
or
adc
movsl
jbe
insb
inc
jl
cmp
int
sbb
jge
sub
mov
lcall
jnp
ljmp
inc
push
cmp
fdiv
test
add
jnp
inc
movsl
sub
loope
jnp
push
out
decl
xchg
fs
lahf
repz
or
jnp
es
cmc
in
test
jnp
loope
and
lret
push
inc
mov
and
inc
insl
fidivrl
lock
in
sahf
adc
jnp
outsl
push
inc
cmp
scas
inc
jnp
cmp
jnp
loope
inc
fwait
pushf
mov
xchg
fisubl
repz
jmp
jnp
test
pop
out
add
es
inc
adcb
sar
adc
add
sbb
jge
lods
jb
sti
in
je
fdivl
add
cmp
sub
sub
out
iret
cmpsb
imul
xchg
je
xchg
sbb
xlat
lds
xchg
outsb
cmpl
push
inc
in
push
leave
addr16
jbe
std
repz
mov
pop
dec
in
mov
mov
sub
mov
mov
sub
outsl
scas
push
jns
jmp
imul
lods
inc
dec
dec
pop
ret
jb
cmp
in
cli
loopne
xor
ret
in
incb
inc
sti
pop
xor
jb
sbb
mov
lds
mov
and
mov
gs
aam
jg
or
sbb
scas
jns
inc
adcl
adc
cmp
add
jnp
fwait
xor
mov
mov
dec
dec
adc
cmc
stos
cli
cmp
mov
mov
aad
inc
push
int
call
xchg
inc
sbb
cmp
jnp
adc
bound
mov
mov
jl
cli
sbb
aad
mov
test
fwait
cmp
mov
test
push
inc
jmp
data16
icebp
jae
stc
mov
shl
push
sbb
pop
push
xchg
mov
push
push
xor
sti
jno
jnp
stos
jge
sbb
jae
cmc
popa
jnp
dec
jns
adc
push
ret
add
jnp
mov
mov
mov
and
test
jnp
sbb
movsl
cli
stos
inc
jnp
xor
cmc
dec
jno
mov
jbe
negl
jnp
xchg
and
push
cltd
jnp
push
or
mov
xlat
in
faddl
add
lret
cmc
lahf
imul
push
jnp
inc
push
cmpsl
mov
dec
out
jnp
popf
pop
cmp
repnz
mov
pop
jnp
mov
adc
adc
or
pop
dec
sub
mov
inc
xchg
mov
push
jecxz
or
inc
adc
cmpsl
xchg
xchg
push
mov
push
push
in
cmp
out
scas
jecxz
shll
dec
cmp
aaa
sti
mov
test
stc
imul
pop
add
mov
mov
mov
test
hlt
cwtl
imull
aad
and
in
ret
push
xchg
rep
mov
out
or
sarl
ret
sub
cmpsb
xor
inc
mov
mov
fwait
sti
add
flds
movb
mov
inc
jnp
jp
sbbb
lret
stos
jnp
xor
cmpsl
ror
mov
js
push
jo
add
mov
shll
ljmp
popf
ds
test
mov
or
xchg
add
push
inc
and
addr16
icebp
lahf
mov
mov
sbb
in
pop
xchg
mov
pop
cwtl
pushf
ss
fs
jmp
add
jnp
sbb
subl
jnp
push
sbb
or
js,pn
and
sarb
test
xchg
pop
inc
pop
inc
into
cmpl
lret
jnp
movsl
inc
pusha
mov
roll
daa
ret
xchg
clc
xchg
pop
aad
mov
push
rcll
mov
mov
rcr
xchg
test
stos
add
xchg
add
addr16
xchg
mov
adc
push
lea
movsl
xchg
push
faddl
sahf
jnp
pop
dec
xchg
add
mov
in
sbb
iret
fstpt
adc
out
jle
sbb
mov
jnp
lret
mov
mov
push
push
popa
xor
pushf
andb
cmp
inc
xchg
xchg
mov
in
mov
dec
dec
mov
lea
or
jnp
dec
xor
es
jnp
ss
jbe
fmuls
mov
jb
or
insl
test
mov
rorb
data16
add
mov
mov
lods
sbb
mov
push
addr16
fsts
xor
or
mov
bound
mov
negb
jg
lds
dec
sub
inc
adc
mov
imul
inc
mov
push
and
clc
nop
std
test
xor
dec
push
xchg
sbb
enter
jnp
fcom
cmp
test
leave
mov
mov
push
out
jge
and
test
cltd
cmpps
sbb
lods
nop
cmp
push
jno
pop
mov
clc
sti
push
or
dec
pushf
fwait
push
mov
dec
test
fwait
xchg
mov
stos
xchg
addr16
inc
mov
out
cld
push
or
lahf
cmp
add
andl
imul
and
cmc
mov
xchg
jl
adc
xchg
cmpsb
es
aad
push
je
push
in
data16
cli
xchg
sub
repz
int3
jle
xor
sub
outsl
stos
push
pop
xchg
add
jno
sbb
jae
pandn
lock
inc
jno
jae
jnp
fsubl
jmp
jnp
mov
xchg
sub
cmpsb
mov
inc
cmp
cmpsl
pusha
cmp
dec
cmc
jnp
lret
xor
mov
jnp
jbe
sbb
xchg
clc
jno
mov
cmc
pop
mov
mov
testl
out
jg
fstps
xchg
jnp
outsb
fs
imul
outsl
daa
and
jnp
cmpsl
dec
sbb
jnp
or
test
sti
jnp
xchg
loop
js
pop
out
adc
jl
movsl
cltd
stos
mov
repz
mov
pop
dec
jmp
rcll
scas
xor
or
fs
xchg
adc
sub
or
mov
pop
jnp
les
stc
xchg
sar
jnp
fstpt
pop
stc
outsl
cmp
pop
dec
cmp
adc
push
cmp
xchg
jp
cmp
cmpsl
sarb
movl
addl
sbb
pop
lcall
adc
adc
cltd
rcl
sti
mov
dec
lret
or
jae
or
sarb
cltd
sbb
dec
out
lock
dec
mov
aad
mov
sbb
imul
pop
mov
adc
push
cmp
mov
mov
pop
jnp
jbe
jge
fisubrl
mov
dec
jnp
cmp
test
lods
jnp
outsb
mov
jbe
pop
mov
mov
loope
add
and
xchg
xchg
sub
ljmp
lcall
push
push
cltd
dec
mov
fwait
push
movnti
outsb
stos
sahf
cwtl
jle
sub
dec
xchg
mov
sbb
adc
jmp
push
jnp
out
sti
jbe
inc
pushl
jnp
or
in
stos
sbb
cmp
loop
popa
and
jnp
jecxz
in
pusha
push
push
lcall
xchg
pop
call
sti
inc
xorb
cmp
or
jnp
cwtl
push
shr
sbb
aad
dec
mov
cvtdq2ps
mov
cmp
jge
jnp
jecxz
jb
adc
iret
inc
cs
int3
icebp
mov
jle
mov
imul
adc
pop
icebp
rcrb
aad
xor
cmc
pushf
subb
push
mov
hlt
ds
jle
inc
lock
cmpsb
jnp
mov
cmp
mov
sarl
scas
add
or
cmpsl
mov
fwait
mov
cmp
jnp
sbb
and
out
jle
mov
sahf
popf
mov
mov
xchg
inc
mov
push
mov
inc
out
mov
ficompl
dec
push
cli
cmp
out
ret
repz
jnp
jg
popa
lcall
jae
sub
loope
nop
repz
fs
inc
xor
add
movsl
lods
dec
mov
jnp
dec
jo
test
stos
mov
dec
into
fcomip
jnp
push
addr16
loope
adc
aad
or
jnp
cmp
inc
push
cmc
dec
lods
jnp
enter
in
sbb
pop
jg
push
dec
test
aas
adc
int
cmp
fwait
cmp
or
movsb
loopne
adc
jno
xchg
dec
mov
lahf
cmp
pop
add
jnp
ss
mov
mov
xchg
ja
adc
data16
sti
jg
adc
insl
ffreep
add
popf
sbb
insb
out
addb
jo
jnp
and
cmp
xchg
je
push
push
js
test
int
jns
cmp
js
sbb
push
xchg
test
test
fistpll
push
dec
push
addl
loop
push
bound
lret
dec
jp
ljmp
xor
adc
mov
mov
das
shll
mov
sbb
inc
xchg
mov
sub
sbb
mov
dec
xchg
push
loop
xchg
cmp
fucomi
add
adc
scas
imul
in
fwait
xor
push
jno
cwtl
lret
mov
mov
mov
fimull
test
aad
sbb
arpl
mov
dec
mov
adc
call
fadd
idivb
xchg
int3
and
ljmp
nop
or
xchg
push
jnp
mov
jns
push
imul
jne
cmp
movsb
inc
inc
fs
mov
mov
xchg
stos
outsl
outsb
mov
cmpsb
test
insb
jl
enter
pushf
repnz
inc
and
test
mov
jmp
sub
adc
out
mov
addr16
inc
int
pop
cli
xlat
mov
push
sub
stc
repz
push
fs
cmp
clc
js
xlat
adc
fstps
je
ja
mov
sbb
mov
ror
out
fimull
jg
xlat
mov
out
test
pop
arpl
sub
ficompl
psubw
out
inc
mov
xchg
xor
or
cwtl
sub
xchg
or
xchg
addb
fwait
lcall
popa
xchg
popa
repz
les
js
sti
adc
and
pushf
mov
dec
add
dec
jne
fildl
add
fildl
xor
xchg
outsb
pop
in
and
sbb
mov
dec
jnp
push
jg
in
pop
enter
mov
pushl
lahf
xchg
int
jnp
jne
addl
sti
push
xchg
jmp
jnp
out
pop
jle
lcall
mov
cmp
mov
sub
fs
mov
les
shrb
pop
lcall
jl
cs
xchg
les
jne
lret
pop
adc
stos
add
lcall
xchg
jno
outsl
adcl
icebp
dec
and
jnp
mov
rcll
xchg
stos
jge
aas
rorb
adc
xor
xor
jmp
fisttps
lret
mov
pop
rcr
arpl
insb
sub
push
ljmp
andb
movsl
out
out
fistpl
jnp
jmp
je
insl
cmp
push
jnp
adc
add
xchg
jo
pop
movsl
push
lods
jg
gs
imul
cmp
jno
cmpb
inc
in
js
test
cwtl
cld
mov
inc
xor
iret
push
jae
insl
rorl
jnp
xor
inc
ds
or
rcrl
pop
mov
adc
cmp
xor
ljmp
lods
popa
and
mov
es
test
push
test
mov
jo
test
leave
pop
addr16
imul
outsl
xor
das
push
rolb
push
test
sti
and
icebp
loope
cli
je
ficompl
mov
dec
adc
jnp
test
cmpsb
xchg
mov
jbe
sti
movsl
push
jne
jmp
lret
scas
xor
aad
mov
mov
xchg
pop
inc
es
fidivs
lcall
mov
div
jnp
test
sbbl
sub
lcall
test
popa
mov
adc
sub
and
fstpt
lret
arpl
fmull
lcall
in
pop
popa
and
jnp
lods
dec
testl
pop
push
pop
cwtl
fimuls
jnp
sub
das
jae
jnp
sub
out
jnp
fisttpl
imul
into
cltd
mov
nop
loopne
pop
inc
cmpps
shll
ja
mov
test
push
push
mov
mov
xchg
jns
test
notb
adc
pop
adc
jnp
repz
and
loopne
mov
test
inc
or
xchg
int3
lods
sarl
jmp
add
or
das
outsl
inc
push
sbb
jecxz
and
movsl
outsb
rcrl
arpl
aas
adc
mov
insb
sub
in
test
roll
mov
lods
xchg
enter
sti
mov
dec
sbb
add
jnp
xchg
aas
jp
shll
jnp
movsb
cmpsl
inc
out
jmp
dec
ret
scas
jae
cmp
les
out
negb
cld
adc
mov
les
pusha
mov
test
xchg
adc
push
sub
fxam
ret
jnp
mov
rep
jnp
cld
dec
lret
les
xor
mov
jnp
mov
sub
jnp
push
jb
jp
and
jnp
sub
mov
or
mov
mov
jle
push
dec
xchg
sarb
rcrl
sbb
xchg
aad
jl
pop
ljmp
loopne
cmp
jnp
stc
xchg
lods
push
jnp
icebp
pop
jo
adc
or
repz
mov
xchg
outsl
repnz
imul
call
xchg
les
and
mov
stos
mov
stos
xor
sti
int3
mov
sbb
and
dec
xchg
mov
xchg
xchg
jp
ja
ficomps
aam
pushf
xchg
pop
into
cmpsb
add
push
pop
add
push
lock
es
loop
mov
stc
loopne
cwtl
sahf
cmp
aas
jbe
test
adc
jne
mov
outsb
xor
loope
inc
sbb
fstpt
testb
push
je
mov
ret
inc
test
ja
cmp
sahf
popa
push
xor
jb
push
daa
addl
shr
mov
shlb
loope
cmc
mov
add
add
popa
jnp
test
cwtl
xor
lock
mov
pop
sbb
adc
dec
jmp
rclb
orl
mov
movsl
stos
test
adc
clc
in
cs
in
out
gs
dec
faddl
jge
ficoms
and
stc
xrstor
adcl
xchg
add
or
hlt
xchg
lea
in
fwait
dec
out
fimull
jo
pop
mov
mov
test
ja
xchg
cmp
arpl
pushf
out
stos
shrl
insl
or
outsl
mov
lcall
cli
lods
cmp
addr16
jecxz
mov
jbe
fcoms
mov
int
xor
xchg
lret
adc
fistps
and
sbb
cli
pop
push
fstl
dec
sbb
cmc
rclb
sbb
jmp
jnp
repnz
xchg
call
dec
fnsave
cmpl
or
lret
jnp
sub
mov
fnstenv
jnp
pop
in
or
cmp
xlat
xchg
icebp
pop
jnp
xchg
inc
scas
fildl
and
jnp
or
adc
test
cmpb
je
mov
cmpsb
sti
pop
scas
jp
div
daa
jo
pop
ja
ss
clc
xor
insl
jnp
jecxz
inc
in
or
jp
add
push
popf
mov
mov
lods
outsl
push
xor
jnp
sub
ret
jb
int3
cmpsb
es
sti
stos
dec
pop
jnp
push
pop
jle
cmp
fisttps
jmp
xchg
cmp
dec
jb
jmp
xchg
fwait
sbb
sub
add
pop
pop
jnp
clc
ficompl
sbbb
jbe
je
std
jnp
xchg
insb
jle
mov
xor
and
jo
mov
movsb
sub
ret
jnp
push
cwtl
fs
iret
mov
adc
adcb
hlt
mov
roll
std
jnp
rcl
out
jbe
jnp
fidivrl
add
pop
xor
test
je
sbb
pop
imul
int3
cs
mov
jb
sti
mov
adc
cmp
orl
fbld
std
stc
scas
sti
inc
jg
dec
mov
orb
xchg
pushf
jnp
mov
sub
cmc
xor
mov
mov
jnp
in
stos
push
or
jnp
or
std
insb
inc
ljmp
sub
mov
or
jnp
xchg
lods
mov
ja
jge
cli
sti
jnp
subl
or
addl
lods
cmp
fwait
out
push
sbb
popa
cmpsb
cmp
js
cmpsl
scas
nop
jge
fmuls
sub
inc
leave
lods
bound
in
daa
addb
cmp
ja
mov
sub
rorb
adc
mov
sarb
fnstenv
xchg
or
push
mov
adc
iret
repz
outsb
xor
mov
loopne
movsb
lret
cmc
popf
mov
addr16
cwtl
in
add
mov
sub
movb
test
dec
dec
xorb
mov
jnp
mov
dec
test
cmp
or
gs
sub
arpl
jp
mov
adc
repnz
sub
repz
cmp
jns
jnp
pusha
push
mov
cltd
imul
xchg
jnp
pop
test
jg
lahf
add
mov
cwtl
mov
or
cmp
repz
fsubr
pop
jnp
aad
scas
lods
push
jno
jnp
sub
push
xchg
inc
call
outsl
fdivl
outsb
sub
inc
lods
and
jnp
ljmp
add
xor
mov
adc
mov
inc
cmpsl
adc
cmpsb
add
ret
ja
lds
lods
mov
push
pop
test
xor
test
out
jle
test
mov
jae
sub
jmp
clc
push
mov
lahf
sti
cltd
mov
jnp
or
setne
jnp
fsub
das
mulb
mov
pop
sti
adc
sbb
fidivs
lret
rcrl
hlt
mov
insl
mov
arpl
sti
std
fnstsw
das
cmp
jns
sti
inc
sbb
mov
cld
popa
mov
push
mov
push
lret
test
fsubrp
fdivl
jae
int
push
bound
cmc
movsb
cmpl
inc
push
test
dec
out
mov
cmp
es
xlat
sub
lcall
sti
mov
sbb
xchg
test
mov
clc
jnp
idivb
cmp
ja
mov
out
pop
sub
sbbl
gs
es
inc
pushf
jne
dec
inc
and
fstpt
outsl
adc
jnp
pop
aad
clc
hlt
imul
or
xor
lcall
data16
jnp
aad
test
xor
sti
dec
inc
aas
jge
mov
stos
insb
xor
stos
andb
xlat
jnp
test
aad
pop
cmp
subb
test
adc
test
or
lods
hlt
scas
sbb
mov
mov
add
jp
add
adc
dec
jnp
sti
arpl
mov
ret
iret
icebp
nop
jnp
xor
mov
pop
mov
cmp
addb
sbb
lock
jnp
add
out
jnp
xor
mov
mov
mov
pop
or
test
xchg
add
fisttps
push
dec
jns
push
lahf
mov
inc
jnp
andl
and
outsb
pushf
clc
jecxz
shlb
mov
lret
mov
cmpsl
xor
xor
pop
fst
in
or
clc
repz
sbb
sub
cmp
inc
arpl
jle
stos
push
xor
mov
fstps
jnp
mov
cmp
mov
mov
outsl
xchg
sbb
rcrb
cmpsl
pop
pop
xor
jnp
insb
mov
jle
or
add
orb
xor
ja
adc
fsubrl
in
pop
cmp
rcr
xchg
inc
and
push
fsubrl
pop
lods
daa
xchg
je
sbb
movsb
hlt
jnp
cs
cmc
insl
jae
jbe
and
or
push
movsl
mov
imul
lods
sbb
lcall
test
pop
jb
jp
push
rcrb
inc
es
cmp
pop
cmp
dec
adc
sahf
out
jp
les
sbb
dec
or
movsl
inc
xchg
insb
xor
comiss
lret
sarl
sbb
xchg
pusha
filds
jnp
mov
idivl
lcall
or
iret
imul
mov
insb
dec
sti
sbb
mov
pushf
aad
stos
mov
es
jl
sub
sti
xchg
outsb
frstor
mov
stos
in
rcr
cmp
lcallw
sbb
and
lods
push
dec
or
sbb
sbb
jg
jne
mov
ret
in
mov
enter
ss
cmp
sbb
jecxz
ja
cmp
mov
lds
das
or
jnp
mov
mov
xchg
xor
dec
xchg
sub
arpl
insb
scas
fcomi
movsl
out
push
mov
xchg
xchg
dec
adc
jnp
ror
mov
dec
jnp
and
or
mov
xor
sub
mov
stc
jnp
cmp
repnz
ja
sbb
dec
sbb
imul
adc
in
jg
inc
jnp
mov
psadbw
mov
popf
push
nop
mov
rolb
cmpsl
shrb
jnp
mov
bound
jnp
xchg
xor
mov
jmp
and
jae
pusha
mov
mov
pop
je
and
mov
jnp,pt
jbe
repz
sarl
xlat
mov
mov
cmp
pop
xor
adc
sti
ret
clc
xchg
mov
sub
mov
test
mov
mov
adc
test
xchg
movsb
cld
cmp
inc
mov
push
int3
push
shrb
sub
jo
mov
mov
jge
xchg
and
test
outsb
dec
mov
les
leave
mov
arpl
push
or
dec
mov
xor
xor
femms
sti
or
mov
or
pop
sub
push
movsl
inc
jno
cmp
mov
test
outsl
or
inc
lea
les
fmull
arpl
mov
xlat
sbb
fdivrp
xchg
jl
cmp
jnp
xchg
shlb
sbb
fnstsw
and
cs
mov
inc
in
jmp
fstpl
mov
mov
loope
jmp
bnd
xchg
push
xlat
jge
into
mov
imul
and
mov
mov
dec
cmp
lea
mov
repnz
loope
cltd
jnp
mov
outsb
xchg
popa
cmp
jnp
pop
inc
dec
clflush
push
arpl
aam
dec
mov
repz
popa
xor
lret
or
mov
aas
outsb
inc
int3
es
mov
sub
cmp
mov
idivb
fistps
mov
dec
imul
xor
mov
xchg
enter
push
arpl
cmpsl
out
xor
and
les
mov
or
xor
adc
mov
mov
jb
insb
pop
idivb
bound
cltd
xor
or
mov
sub
jg
push
mov
scas
shl
jnp
loope
daa
dec
push
mov
gs
sub
jnp,pt
cltd
jp
enter
jnp
out
xor
jle
push
mov
pushf
or
jmp
dec
subl
nop
rolb
mov
push
mov
inc
test
mov
popf
into
mov
push
xor
ja
cmc
pop
ljmp
daa
or
jns
adc
mov
jnp
aam
scas
xchg
into
sub
jnp
insl
fucom
outsb
mov
adc
xchg
cld
clc
idiv
or
stc
test
jnp
and
push
push
mov
inc
push
mov
fidivrl
addr16
mov
and
repnz
mov
test
subb
es
out
mul
sbb
pop
dec
sub
or
sub
insb
mov
imull
push
jnp
stos
push
cld
dec
shrl
int3
pop
xor
xorps
cmp
cmp
in
sub
mov
add
repnz
pop
jnp
aas
xchg
call
test
inc
addr16
punpckhdq
jnp
movb
lea
mov
mov
stc
mov
test
lret
cmc
mov
jg
sbb
shlb
sbb
fcmovnu
mov
xchg
fiaddl
jae
jl
sub
inc
decl
leave
or
cmp
enter
scas
cmpb
mov
ror
cmp
inc
mov
jo,pn
imul
jno
sub
mov
dec
mov
out
and
cli
mov
enter
lods
sub
sub
jae
mov
pushf
mov
arpl
pusha
add
add
mov
sub
cld
sub
cmp
mov
bound
sarl
lcall
stos
fwait
sbb
dec
add
inc
call
sahf
dec
jno
call
ja
jle
mov
fs
cmp
jne
xchg
pusha
mov
inc
js
push
loop
dec
sub
enter
js
dec
xchg
push
sbb
or
xor
stc
sbb
mov
test
enter
je
stos
or
arpl
data16
dec
inc
outsb
call
cmpl
lea
movsl
popa
add
jnp
inc
cmp
xor
std
rorb
push
sub
in
inc
jnp
shrb
sbb
push
jnp
aad
testl
xchg
sti
dec
jecxz
mov
sub
shrl
and
cmp
ss
into
jnp
sbb
test
test
dec
cmp
or
push
mov
push
cmpsb
jne
out
outsl
arpl
out
test
xor
jecxz
stos
xchg
jno
ret
jns
or
pop
shll
dec
adc
bound
fmull
and
test
push
cwtl
lods
add
cmp
stos
arpl
test
sub
inc
out
adc
pop
push
jno
xchg
xor
add
stos
rcl
xchg
sbbl
pinsrw
lret
mov
rclb
xor
mov
je
push
imul
out
test
arpl
lods
je,pt
push
outsb
fdivl
mov
add
test
scas
daa
hlt
jg
fninit
adc
sub
xor
into
jnp
repnz
imul
mov
scas
mov
rcr
mov
gs
pop
inc
xchg
pop
sbb
push
pop
inc
subl
mov
xor
pop
movsb
faddl
adc
mov
je
add
mov
dec
in
or
inc
mov
pop
jnp
outsl
lods
iret
and
adc
ret
jbe
xchg
xchg
and
leave
jecxz
sbb
ret
fsubl
test
mov
and
ret
adc
or
arpl
test
xchg
ret
mov
push
jnp
push
fcmovb
mov
es
push
jmp
push
cli
pop
jnp
cmp
sti
out
clc
cltd
or
jne
lcall
stc
mov
add
leave
sub
jnp
into
jg
js
jnp
mov
call
cwtl
push
sar
xchg
jnp
cmc
mov
popf
xchg
jnp
inc
shr
xchg
mov
test
jge
sbb
pop
rolb
pushw
test
mov
sbbl
movsb
xchg
les
push
ja
sti
cmp
xchg
call
sti
inc
incl
cmpb
dec
aas
dec
jmp
mov
cli
fs
inc
and
jnp
add
jb
lcall
test
sti
les
out
jns
sbbl
ret
jnp
enter
lahf
jnp
out
sbb
imul
add
stc
xor
insl
fsubl
pushf
sub
pop
jnp
xlat
es
add
clc
sub
or
aad
push
mov
mov
xchg
mov
inc
jnp
scas
mov
mov
popa
lret
mov
stos
aad
cmpsl
mov
or
xlat
imul
xchg
xchg
cli
mov
lret
sub
je
jmp
psadbw
jmp
lret
mov
je
or
lahf
dec
orb
fwait
mov
xchg
je
fcom
xor
insb
cli
mov
in
jmp
rcr
decl
je
mov
lret
scas
lcall
jmp
pop
mov
jnp
lock
xor
nop
adc
jg
jnp
test
rcrl
ret
dec
jnp
shll
adc
mov
sti
std
pop
push
jmp
fidivrl
aad
out
cwtl
cmp
jp
sbb
ficompl
xor
adc
movsl
inc
adc
mov
jge
jns
gs
and
pop
xchg
cmc
in
rcrb
fdivrs
pop
jecxz
enter
rol
imulb
dec
mov
cmpsl
rorl
mov
or
xchg
fnstenv
xchg
inc
arpl
ret
rol
push
outsb
adc
idiv
jnp
xor
lods
test
movsl
pop
daa
je
push
pop
and
aas
aad
in
sahf
out
icebp
not
sub
mov
jnp
lahf
fldt
pusha
jmp
aaa
sbb
aad
mov
mov
mov
mov
or
jnp
and
or
sbb
sti
mov
cmp
stos
pop
push
pop
in
lret
push
inc
fcomps
popf
xor
rolb
lods
lahf
sub
rcrb
mov
dec
jmp
scas
sahf
lock
sarl
inc
icebp
sbb
mov
pop
popa
or
sbb
decb
xor
inc
mov
and
cmpsl
ja
cmpsl
cs
aad
andb
lea
loopne
bound
jne
int
imul
jnp
cmp
sbb
or
xchg
outsl
addr16
stos
dec
pop
lock
jnp
in
jp
sbbb
cli
xorl
sahf
mov
mov
sbb
data16
pop
popa
mov
dec
ret
sbb
push
mov
pop
jmp
lods
push
movsl
jnp
fcomps
lcall
data16
xor
clc
cmpl
pop
leave
lahf
jnp
inc
out
push
mov
test
inc
int3
cs
inc
inc
repnz
xchg
and
leave
fs
push
lcall
loope
cmp
mov
loop
cmc
out
mov
jnp
dec
aad
and
out
inc
and
stos
call
inc
jo
mov
xor
nop
lea
dec
loop
jbe
lods
outsb
dec
clc
sbbb
sbb
push
pop
jg
lods
ficomps
xchg
mov
xor
pop
aam
scas
and
dec
sbb
pop
or
sub
adc
inc
ds
test
xor
outsb
adc
shll
popf
cmp
push
cld
add
xorb
in
and
mov
push
fsubrp
jbe
inc
inc
in
mov
or
fs
das
or
push
cmp
call
mov
mov
mov
adc
imul
insl
adc
or
xor
ja
std
lret
jnp
lock
mov
and
inc
or
jp
jnp
mov
xchg
jmp
iret
adc
sbb
lds
mov
push
mov
cli
pop
mov
into
insb
dec
test
jnp
scas
cmpsl
sbb
jge
xchg
mov
lcall
pop
arpl
push
js
nop
xor
sbb
movsb
decl
insb
rcl
cmp
cmp
loope
mov
rcr
mov
aad
out
fwait
xchg
sti
jbe
xor
jp
sbb
es
pop
pop
outsb
addl
mov
cmc
jae
cwtl
jnp
popa
inc
push
rclb
pop
mov
mov
lods
ds
jnp
cmp
jle
int
jnp
xor
push
inc
xchg
mov
popa
jnp
xchg
mov
fidivs
mov
test
inc
mov
jo
xlat
cld
repz
mov
jle
sub
arpl
xchg
pop
jnp
xchg
or
fstpt
jbe
add
cwtl
push
inc
jnp
adc
pushl
andl
jae
call
ret
jo
xchg
xchg
fidivrs
cltd
mov
xor
data16
mov
mov
xchg
outsb
xchg
ja
xchg
or
fistl
out
mov
jmp
mov
jo
jg
mov
mov
cmp
sub
arpl
sub
pop
cmp
mov
add
jno
or
push
and
jo
lods
or
stos
arpl
sti
mov
insl
mov
sahf
jnp
ret
dec
nop
cli
invd
xor
in
std
mov
or
aad
out
push
jnp
jno
add
mov
xchg
dec
push
cmpsl
pop
jnp
sti
cld
or
cwtl
add
xchg
or
sti
xor
and
mov
fstpt
int3
movsb
jae
dec
pop
sahf
jnp
pop
mov
mov
and
int
mov
lods
jne
jnp
insl
pop
addps
je
jnp
lods
lret
mov
push
leave
cmpw
or
cmpsb
mov
mov
adc
xchg
or
inc
rorb
sti
lcall
clc
pop
insl
test
sub
jmp
mov
rcll
sti
lret
outsb
push
insl
sbb
es
test
fisttpll
aad
mov
add
mov
fidivrs
ds
loopne
test
xor
inc
mov
scas
inc
cmpsl
arpl
sbb
out
cmp
or
out
nop
adc
push
call
dec
idivl
cld
inc
rclb
mov
and
js
fcomps
lret
sbb
pop
jae
mov
movsb
pop
mov
outsl
mov
sbb
jnp
imul
jnp
pop
rcrb
jne
jnp
mov
repnz
jnp
and
push
test
mov
cmp
test
mov
push
mov
jnp
dec
add
je
inc
in
push
dec
xchg
incl
or
jnp
xorb
and
addr16
in
rcrl
mov
sub
ja
jb
dec
mov
inc
push
sub
mov
cmp
xchg
aad
lods
and
test
fimuls
mov
hlt
notl
into
sub
stos
add
jp
xchg
xlat
xchg
adc
push
outsb
stos
fisttps
mov
out
xchg
repnz
popf
jnp
xchg
loope
daa
or
xor
int3
cmp
and
sub
lcall
cli
aad
jle
jecxz
je
or
mov
inc
mov
cli
data16
cld
dec
xor
orl
fcmovbe
arpl
xchg
in
jmp
into
sbb
shrl
mov
lret
test
insl
adc
imul
push
mov
cmp
fwait
mov
pop
lods
test
in
mov
popa
xchg
movsl
xlat
int
das
mov
loopne
xchg
aad
scas
dec
mov
cs
or
xchg
mov
or
sub
arpl
incl
xchg
shrb
push
mov
nop
inc
outsb
xchg
mov
cwtl
adc
push
ds
cmpsb
les
shlb
mov
xchg
xor
mov
sub
cmp
outsl
mov
mov
pop
mov
in
cmp
sbb
scas
push
jp
shr
dec
pop
repz
imul
xchg
sub
jnp
cltd
repz
es
fs
push
mov
das
sub
pop
adc
or
iret
jnp
sub
cmpb
imul
xlat
repz
and
add
sub
adc
cld
mov
sbb
xchg
cmp
orl
out
sarl
sbb
rcll
test
lret
out
mov
stc
jnp
insb
add
adc
adc
jmp
enter
data16
adc
in
jnp
mov
or
subb
arpl
loope
in
add
idivl
or
es
dec
mov
lock
inc
push
out
cmp
lods
sti
pop
adc
mov
lcall
fsubl
sti
subb
jbe
test
icebp
add
leave
out
jnp
bound
jmp
mov
sub
loopne
sarb
out
jae
add
xor
clc
jno
call
lcall
rorb
lret
push
sub
push
cmp
stos
sub
sub
and
sub
in
xchg
mov
pop
outsl
or
xor
add
or
pop
in
loop,pt
das
jno
pop
out
mov
mov
mov
movsb
and
jnp
jp
mov
fwait
jbe
jnp
out
mov
int3
jnp
ds
cmp
sbb
not
jmp
inc
mov
jg
sti
cli
cmpsl
jno
shlb
pop
push
xchg
cmpsb
pop
cmp
gs
int3
jge
jp
imul
test
mov
mov
mul
fsubs
jnp
into
inc
inc
dec
cmp
fwait
imul
jns
lahf
cld
or
sahf
out
dec
dec
stos
jno
icebp
and
xor
jnp
das
mov
std
inc
fs
lcall
fs
mov
fsubrp
lret
xchg
add
and
push
push
dec
cmpsl
mov
pushf
mov
test
aad
fbld
inc
sbb
mov
jecxz
push
movsb
mov
adc
jnp
lcall
lods
pop
xor
loop
pop
mov
pop
pop
cmp
push
lret
inc
mov
push
jno
subl
je
mov
mov
jnp
rcll
pushf
mov
push
test
push
pushl
mov
lret
jnp
out
dec
scas
sbb
cmpl
jge
and
lahf
adc
in
xchg
jecxz
lcall
mov
ficoml
push
movsb
jnp
xchg
inc
adc
xorb
shll
shl
inc
in
aaa
jne
jnp
sbbb
mov
adc
imul
sbb
jo
mov
pop
jbe
cmp
mov
mov
cmp
shll
inc
jnp
lcall
jnp
cmp
test
outsl
xor
cmc
inc
cmpb
gs
out
jnp
mov
xchg
sar
out
lahf
and
xchg
push
test
push
cmpb
sbb
jle
jp
jnp
movsl
jb
test
add
dec
jle
dec
mov
test
adc
or
mov
cld
lods
push
enter
mov
jecxz
cld
dec
mov
cmp
cwtl
jge
inc
addl
push
lods
aas
pushf
mov
push
mov
sub
mov
je
cwtl
xor
mulb
scas
cld
fldt
les
mov
sbb
test
repnz
adc
rcrb
mov
movsl
xchg
ds
leave
lds
stos
jnp
jno
cmp
mov
and
jnp
pop
sahf
push
subb
test
push
sbb
push
stos
pusha
sub
xchg
rorl
push
test
ja
pop
cmpb
jns
jnp
sbb
mov
jnp
cmp
dec
and
dec
mov
lods
cld
pop
jecxz
sbb
mov
in
sub
jnp
ja
xchg
fwait
lcall
push
adc
int
fstpt
in
pop
inc
in
pop
sub
ja
out
test
sbb
clc
rorb
mov
fs
add
jnp
pop
pop
aas
inc
hlt
sbb
jnp
push
adc
xchg
cltd
rorb
scas
or
lcall
pushl
imul
dec
mov
xchg
mov
popf
sahf
dec
xchg
mov
das
jnp
lret
cmc
repnz
sti
and
cmpsb
movsb
cld
sub
fwait
loope
cmp
mov
pop
push
scas
inc
sub
mov
mov
mov
lods
jnp
mov
mov
mov
in
loopne
pop
sub
xchg
push
jb
jp
xor
lcall
ds
jmp
pusha
sub
repz
or
imul
push
cltd
add
lods
add
mov
fwait
jb
in
jnp
decl
mov
add
mov
mov
fisubrl
fwait
das
std
jnp
xor
push
jnp
pop
data16
fists
je
loope
or
in
xor
xor
xchg
int3
loop
or
push
sub
in
and
stos
arpl
fsubl
lahf
push
push
sbb
mov
push
loop
xchg
add
test
cmc
jae
pushf
mov
jno
mov
jecxz
js
loope
push
js
les
push
push
sarb
popa
mov
sbb
mov
sub
hlt
cmp
sbb
arpl
jecxz
test
sub
xor
xchg
stos
cmp
pop
jno
mov
or
cmp
icebp
in
inc
out
and
sti
mov
fwait
xor
jns
xor
mov
adc
mov
sbb
movsb
es
sti
jge
mov
iret
add
js
out
add
add
mov
add
add
push
imul
clc
mov
xor
arpl
push
jg
push
push
ds
stos
adc
sub
adc
fsubrs
push
in
cmp
addb
mov
ret
shlb
arpl
adc
sub
outsb
leave
xchg
sbb
add
mov
nop
sub
or
mov
xor
adc
mov
inc
fldl
xchg
or
mov
adc
mov
and
sbb
pop
and
dec
dec
mov
stc
push
pop
inc
sti
jb
add
fidivrs
cmp
shll
pop
lret
scas
and
dec
hlt
loopne
test
sbbl
aas
and
jnp
jns
xchg
xchg
in
dec
jnp
mul
or
inc
mov
push
mov
and
dec
push
es
pop
push
or
mov
jnp
or
xchg
add
mov
fwait
enter
icebp
clc
xlat
jnp
sbb
sub
insl
in
jnp
pop
add
xchg
jle
shrl
mov
lret
xorl
sbb
inc
ljmp
sbb
mov
loopne
mov
sbb
jnp
push
fisubl
or
push
cs
sbb
pushf
dec
sti
mov
or
mov
shl
xchg
sti
and
int
mov
arpl
test
mov
sti
lods
xor
ret
addl
pop
outsb
or
xor
insl
mov
mov
test
sub
mov
mov
mull
or
jecxz
pop
push
sbb
adc
outsb
pop
mov
icebp
xchg
out
arpl
jae
int
dec
orl
xor
jbe
nop
adc
je
mov
test
mov
mov
jb
push
imul
repz
xchg
out
aam
mov
push
pop
dec
jne
fiadds
rcl
aad
xor
gs
or
andl
dec
xchg
outsb
fcoml
add
xor
pop
in
lcall
jo
sbb
cltd
ds
stos
mov
lods
cmp
mov
arpl
and
mov
lahf
clc
sub
or
jns
inc
nop
xor
scas
push
sti
call
lea
xchg
cmpsl
add
cmp
orb
sbbb
inc
aaa
push
mov
ds
pop
es
and
jge
mov
rolb
inc
scas
jnp
adc
xor
cmp
out
test
loop
push
or
xchg
xchg
sub
jne
xor
in
ja
orl
pop
add
sbb
jnp
xchg
cmpsl
mov
jnp
inc
inc
mov
xchg
out
mov
jnp
xchg
ds
andl
aas
addb
mov
cmpsl
cmp
jnp
jmp
rcl
mov
cli
adc
hlt
mov
loopne
insb
inc
push
scas
pop
pop
push
fldl2t
and
push
das
push
inc
add
cmp
mov
dec
jae
sbb
pop
jecxz
arpl
loop
push
push
lcall
pusha
std
add
dec
cs
dec
inc
arpl
cwtl
xor
mov
in
daa
outsl
lock
and
or
mov
lahf
jecxz
or
jle
shr
cmp
sbb
xlat
fwait
xchg
pop
punpckhdq
add
outsl
insb
pop
iret
insl
and
sbb
inc
outsb
in
subb
out
xchg
sbb
xchg
xchg
push
dec
cmp
jno
xchg
push
xchg
dec
mov
sub
arpl
mov
sub
outsl
xor
mov
ret
add
mov
jno
outsb
mov
jle
or
cmpb
inc
mov
aam
jmp
in
sti
add
stos
xchg
jecxz
sbb
fwait
pop
ss
xchg
lods
push
adc
test
icebp
mov
mov
ljmp
add
mov
je
movsl
mov
push
stos
xchg
dec
jnp
or
cmpxchg
subl
mov
icebp
sbb
and
fcoms
faddl
adc
add
je
jnp
cmp
out
jp
xchg
mov
nop
cmc
dec
test
jge
iret
rep
xchg
out
dec
aas
push
fucomi
jnp
fs
push
inc
in
mov
ret
mov
push
test
insl
inc
jb
add
jnp
std
enter
fucomip
jnp
imul
inc
sub
lea
fwait
nop
call
loope
mov
cmp
xchg
push
test
test
popf
pop
rorb
movsl
ret
arpl
jnp
pushaw
vcvtpd2dqy
jns
jnp
lods
mov
xchg
pop
add
les
sub
sub
in
jns
pop
jnp
inc
sub
mov
test
jp
mov
sub
std
xor
shll
sahf
je
or
jle
jg
jecxz
fcoml
xchg
or
xchg
xlat
insb
jmp
dec
je
xchg
inc
mov
inc
and
jnp
add
add
fadds
test
outsb
les
mov
dec
test
inc
cmp
movsb
lret
inc
das
cmp
sbb
jp
andb
or
xchg
xchg
mov
addr16
mov
xchg
xchg
mov
jns
push
scas
xchg
mov
clc
inc
pop
out
and
jl
dec
das
test
xchg
adc
jmp
sbb
mov
mov
jnp
and
test
mov
fcoml
out
mull
adc
inc
mov
xchg
lods
jnp
fnstenv
lock
jnp
add
ret
cmpsl
jnp
push
in
jp
jmp
pop
xor
mov
dec
jnp
push
dec
jae
lret
movsl
iret
dec
push
pushf
sbb
cmp
daa
es
outsl
mov
xchg
dec
add
pop
mov
std
inc
jnp
stos
pop
or
sti
jnp
cmp
jnp
xor
pop
xchg
stos
inc
movsl
jnp
leave
shl
cmc
or
jnp
in
cmp
cwtl
or
or
and
insb
mov
aas
jmp
mov
lahf
mov
shr
pop
cmp
mov
cmp
mov
jg
stos
sub
cmpsb
mov
cli
dec
pushf
xlat
sti
jnp
repz
mov
inc
sahf
adc
adc
pop
push
pop
jnp
xor
pop
aas
or
mov
inc
dec
cltd
jno
push
xchg
in
icebp
dec
test
into
or
pop
pop
out
inc
push
fimuls
sub
mov
mov
add
mov
pop
popl
adc
leave
test
jnp
jmp
xor
and
lds
into
push
push
pop
scas
inc
ja
loope
jge
jmp
int
push
adc
mov
stos
sahf
stc
lret
inc
rol
xor
in
xchg
pop
jnp
add
xchg
int3
jnp
sub
fadds
inc
imull
test
ror
mov
inc
and
stos
mov
mov
call
jnp
jp
push
jnp
adc
jg
loop
push
dec
mov
mov
cltd
int
int3
sti
mov
addr16
iret
das
mov
pmuludq
mov
inc
push
jnp
jbe
std
sbb
jns
mov
xchg
cli
movsb
sbb
and
push
ss
mov
jl
out
jae
jb
and
and
addb
call
xchg
insb
das
push
mov
lock
enter
cmp
xchg
or
jnp
mov
xchg
push
cmc
scas
pop
test
mov
lea
jnp
inc
inc
adc
mov
dec
cmp
lds
outsb
lods
les
jle
jnp
mov
push
inc
mov
mov
jg
sbb
addb
insb
jnp
imul
xor
paddsb
push
xchg
lds
data16
inc
addr16
jne
rorb
int
rcrb
movsl
push
jbe
pop
stos
loope
in
imul
jns
mov
push
in
xchg
in
push
loope
mov
in
shlb
push
popa
mov
xor
xchg
outsb
xor
dec
stos
pop
mov
mov
shrl
jnp
dec
jno
cmp
loope
pop
ja
push
hlt
cmp
cmpl
cmc
stos
pop
pop
jge
jo
faddl
pop
sbb
push
pop
mov
into
int3
mov
mov
jbe
lret
sbb
je
mov
orl
ss
arpl
cli
jnp
cs
push
xchg
cmp
or
aas
lahf
inc
arpl
dec
inc
ja
jnp
and
imul
pop
jge
scas
cli
xchg
aam
inc
xor
andl
jb
mov
sbb
mov
inc
mov
ja
and
movsb
jge
into
cmp
xlat
add
imul
inc
rcll
sti
jne
and
inc
push
aas
xchg
imul
es
mov
pop
daa
jno
push
scas
adc
fistl
dec
out
bound
int3
in
push
and
test
jnp
pop
fmuls
cmc
mov
mov
imul
rorb
inc
repnz
insb
mov
sti
cmp
out
sub
push
jecxz
pop
inc
and
stos
cwtl
or
scas
dec
or
js
std
sbbl
xchg
outsb
cmp
stos
mov
mov
repnz
in
adc
xchg
jns
flds
cmpsb
xchg
leave
and
jo
pop
sti
push
mov
sbb
and
inc
fs
mov
mov
mov
fstpt
mov
mov
xchg
in
rcll
aad
xchg
and
xchg
fisubl
fs
xchg
outsb
mov
pop
add
rorb
cmp
test
add
ja
psubusb
cmp
xchg
jnp
test
or
ljmp
sub
enter
push
mov
repz
and
aaa
mov
popa
jnp
loope
ds
adc
movsl
sti
lock
push
cmpl
jbe
dec
jnp
aad
loop
adc
adc
mov
sbb
dec
add
mov
loop
mov
outsl
and
jmp
jecxz
jnp
push
inc
pop
fsub
pop
pushf
jnp
lock
mov
lea
mov
mov
icebp
leave
jnp
movsbl
fcomi
mov
scas
adc
jle
cltd
or
jnp
fs
mov
cmp
xchg
inc
lock
mov
stc
mov
pop
std
sti
mov
lock
mov
inc
push
push
inc
movsb
adcb
iret
mov
shlb
adc
sbb
xchg
pop
push
mov
xchg
mov
jnp
mov
and
push
adc
dec
inc
cmp
or
jnp
and
aas
adc
testl
sbb
push
jnp
sbb
cmp
xchg
ss
dec
jnp
mov
jo
out
jnp
rol
mov
jnp
mov
or
jnp
outsb
jp
jne
adc
xor
jnp
or
mov
push
cmp
jnp
cld
idivl
mov
fildl
xchg
ss
xchg
and
jnp
dec
jl
mov
sub
xor
jnp
ficompl
cs
mov
outsb
xchg
dec
ja
adc
jae
jge
xchg
push
mov
lcall
push
jnp
loop
rolb
int3
mov
test
dec
ds
and
gs
arpl
lea
adc
mov
jno
loopne
out
test
inc
inc
jecxz
mov
rcr
fildl
inc
add
or
mov
daa
test
inc
test
xchg
scas
mulb
sarb
jmp
leave
scas
sub
insb
xchg
mov
or
or
xor
mov
outsb
rorb
xor
insb
jmp
push
ret
mov
xchg
or
test
and
subl
mov
movsb
mov
stc
mov
push
jg
jnp
lea
mov
testl
cmp
pop
shl
nop
sbb
inc
push
jns
sarb
dec
outsb
sub
inc
inc
aam
mov
xchg
test
nop
in
cmc
jecxz
cmp
pop
or
cmp
adc
fcmovnb
and
push
loope
jnp
fsubl
outsl
mov
ja
shlb
jb
ds
je
and
lret
sti
std
jns
push
movsb
sar
add
cmp
gs
out
xor
insl
outsb
sub
adc
xor
adc
jnp
sbb
into
mov
mov
jnp
dec
xor
and
mov
mov
incl
icebp
cwtl
popa
adc
cmpsl
pop
out
mov
push
lods
dec
sub
cmp
jmp
call
jnp
mov
fistps
lsl
jle
scas
jl
dec
xor
xchg
fwait
mov
sarb
or
pop
cwtd
ret
cmp
inc
jl
pop
sub
pop
ret
outsl
adc
jnp
dec
dec
movsb
mov
outsb
fcompl
xor
addr16
push
or
adc
into
imul
sti
test
sub
cbtw
lods
xor
pop
arpl
xor
and
pop
or
mov
insb
movsl
loopne
lds
add
mov
pop
adc
ja
andl
sti
iret
xor
dec
sbb
cltd
shll
jnp
dec
cmp
test
js
or
xchg
sub
inc
xor
ret
stos
stos
jle
pushf
sti
push
imul
into
mov
or
inc
jo
outsl
mov
mov
push
push
pop
pop
clc
es
jnp
adc
jl
cmp
push
add
int3
dec
inc
cmp
pop
lcall
test
addb
jg
jg
mov
enter
mov
frstor
pop
push
es
jnp
pop
and
sbb
xchg
ret
or
push
add
jnp
and
popf
into
mov
push
addr16
xor
sub
mov
sbb
mov
nop
add
gs
xor
jnp
js
loop
mov
sub
fnsave
inc
aad
xchg
inc
and
test
cmp
jge
jae
fs
adc
sbb
mov
jnp
shrb
ds
jnp
xlat
lea
jnp
push
mov
inc
xchg
push
ret
loop
adc
insl
or
sbbb
cmp
pop
push
fxch
add
push
xchg
repz
mov
arpl
mov
loope
add
inc
jne
jnp
inc
mov
push
add
lea
push
xchg
imul
inc
cs
mov
and
pop
cmp
aad
in
inc
sti
call
stos
iret
jnp
hlt
in
push
xchg
xchg
mov
test
arpl
in
das
push
sti
clc
sbb
or
idivb
stos
lods
xchg
jo
outsl
fs
xchg
mov
mov
fistps
mov
lret
jno
lds
sbb
aad
pop
mov
stos
std
inc
les
mov
sub
inc
jnp
aam
out
call
int3
dec
outsb
cmc
pop
aas
adc
jmp
xchg
add
push
scas
mov
add
mov
or
loop
cmp
pushf
cmpsb
mov
dec
mov
sub
and
mov
jnp
pushf
sbb
cli
lcall
stos
mov
clc
pop
jg
mov
in
imul
lret
je
xorl
add
sub
test
popf
jbe
mov
push
out
add
cmp
popf
pop
fidivrl
jnp
daa
es
out
push
arpl
mov
sbb
cltd
gs
cmp
iret
pop
cmp
mov
push
push
in
ret
jnp
out
adc
mov
pop
pop
add
jo
adc
das
ljmp
fstpt
jnp
aad
dec
js
mov
cmp
jbe
adc
pop
inc
imul
jnp
std
or
mov
ret
push
rol
mov
xor
loop
call
and
fstpt
xchg
pop
push
popa
sub
mov
mov
shrl
leave
lahf
jnp
movsb
scas
out
sbb
or
lahf
jmp
fdivl
aaa
scas
mov
shrb
lea
adc
or
jmp
ljmp
das
mov
jnp
movl
jnp
stos
jne
test
push
jge
ja
fidivrl
push
sbb
cmp
mov
jne
aam
sbb
cmp
fcomps
xchg
inc
ja
jnp
sbb
push
jnp
push
bound
jns
jnp
xchg
push
or
xor
pusha
push
popl
jnp
ret
cmpsl
fistps
or
mov
lds
jo
mov
in
push
sub
cmp
fimuls
mov
and
sti
cmpsb
jp
in
nop
mov
or
add
mov
ds
jnp
leave
add
or
jnp
jb
inc
xlat
in
outsl
jno
arpl
cli
jnp
loopne
mov
jnp
sahf
mov
jp
je
jnp
cmc
repnz
sbbl
jnp
sub
cwtl
jnp
sarl
xchg
ss
push
or
pop
xchg
jns
mov
mov
mov
jbe
xchg
data16
jae
movsb
xorb
lret
mov
inc
pop
jnp
lock
jb
ffree
aam
jp
pushf
jecxz
test
hlt
mov
test
mov
inc
jnp
adc
je
mov
mov
cmc
imul
jb
cwtl
mov
cmp
jmp
outsb
shr
sub
cs
int
sbb
dec
jo
xchg
ja
or
lds
xchg
movsb
or
out
int
and
lock
int
pop
aad
stc
fnstcw
call
movsb
pop
or
in
arpl
out
mov
fstpt
mov
jecxz
xchg
cwtl
lret
es
inc
jne
jnp
xchg
insb
cli
aas
repnz
cwtl
mov
inc
xor
jnp,pn
or
gs
add
ss
adc
mov
push
jge
pop
sbbl
int
aad
mov
nop
push
adc
mov
ror
xchg
adc
leave
lea
mov
and
mov
repnz
sub
pop
jmp
mov
pop
insb
cmp
inc
sti
xchg
pop
out
fwait
out
push
push
mov
std
test
fildl
loopne
xchg
and
add
rorb
sub
fstpt
pop
mov
push
adc
push
adc
cltd
fdiv
adc
add
aaa
aad
ja
call
insl
jnp
mov
jnp
je
fldenv
dec
cmp
mov
cmpb
mov
sbb
adc
inc
lret
jp
fildl
push
jnp
nop
and
cmp
cmp
mov
insl
mov
pop
std
cmpsl
cmpl
fwait
mov
push
inc
movsl
dec
popa
popf
lods
jnp
or
sub
dec
or
mov
jp
mov
sub
xchg
ja
dec
in
pop
pushf
test
pusha
cmp
inc
sbb
jnp
jg
rolb
daa
jnp
in
push
insl
shlb
xor
jb
jle
cld
les
jnp
js
sub
clc
stos
subb
mov
loope
push
xchg
mov
lea
mov
and
fidivrs
push
subb
jl
imul
call
xchg
imul
add
out
xlat
lret
lock
lcall
cmc
insl
jnp,pn
mov
cmpsb
pop
adc
mov
out
fwait
loopne
bound
jnp
or
inc
xlat
jnp
mov
push
dec
in
pushf
xor
dec
cltd
jecxz
sbb
and
gs
push
decb
jp
jnp
lods
sub
pop
mov
cmpb
fwait
call
mov
mov
into
repnz
daa
filds
mov
push
add
outsb
sbb
cmpsb
decl
mov
mul
jge
insb
mov
dec
sbb
push
lds
aaa
repz
jmp
mov
sub
test
or
jnp
lods
lahf
mov
xor
stc
jnp
dec
jne
iret
ret
jnp
pusha
or
outsl
sub
sub
icebp
jmp
inc
inc
insb
out
adc
jnp
int3
cmp
outsb
xchg
push
pop
int
std
jnp
xor
sbb
scas
in
mov
jnp
call
xchg
cmpl
in
sbb
add
loopne
loop
rorl
int3
cmp
inc
jmp
lcall
pushf
dec
fincstp
push
pusha
jnp
fbld
ret
arpl
mov
cmp
pop
jae
aad
neg
jno
es
lret
xchg
add
clc
cmp
insb
push
into
arpl
idivb
fimull
addb
in
inc
or
mov
mov
jnp
out
arpl
and
ja
cmp
cld
or
es
mov
ljmp
mov
in
mov
notb
jle
cmp
jnp
push
sub
sbb
jno
mov
pop
push
xrelease
iret
jmp
push
mov
addb
xchg
mov
push
jle
int
mov
imul
cmpsb
ss
loope
sub
push
jnp
ljmp
xchg
mov
gs
jnp
mov
sbb
scas
push
aad
cmp
sbb
std
mov
je
mov
cltd
fiaddl
pop
push
add
lods
mov
xchg
mov
adc
adc
subl
push
out
sub
fdivr
xlat
fldt
dec
mov
clc
xchg
mov
xchg
out
call
sub
mov
mov
xchg
fdivrl
mov
in
lds
mov
inc
loop
ljmp
lahf
outsb
adc
add
das
pop
popa
test
mov
nop
mov
fadds
es
mov
mov
iret
mov
or
mov
cmp
stos
jnp
inc
adc
aad
jnp
in
xchg
pop
mov
sahf
cwtl
xchg
mov
or
clc
fwait
pusha
or
jo
cmp
sub
add
js
pop
outsl
out
jnp
mov
fdivrl
jmp
pop
movsb
loop
imul
fs
jnp
addr16
xchg
js
and
gs
leave
adc
mov
mov
or
pop
dec
mov
outsl
std
aad
xchg
push
xchg
mov
test
jnp
xchg
inc
pop
xor
mov
int3
lods
mov
ljmp
std
mov
and
imul
nop
gs
sti
inc
fstl
mov
test
insb
sti
cmp
jnp
cmp
cs
das
dec
pop
jnp
add
cwtl
mov
jecxz
pusha
sbb
cmp
pop
call
faddl
arpl
inc
dec
pop
jne
mov
shlb
mov
sti
pop
add
sti
sbb
mov
shlb
mov
mov
dec
xlat
mov
or
test
inc
sub
cld
adc
out
sbb
mov
call
jnp
mov
aas
xchg
jo
sbb
cltd
repz
xchg
popa
cwtl
pop
mov
jnp
int
sub
aad
data16
cmpsb
sbb
adc
cwtl
loope
sub
adc
es
cwtl
sub
enter
mov
je
mov
push
jmp
jnp
pusha
shl
in
stc
popa
jnp
jns
xor
std
movsb
push
mov
mov
in
int
dec
mov
cltd
mov
cmc
mov
mov
xchg
je
pop
push
jge
sbb
stc
mov
test
imul
push
sti
dec
jge
in
xchg
jnp
mov
test
or
jg
mov
dec
pop
jnp
daa
dec
sbb
insl
fidivrs
xlat
sub
mov
insb
inc
mov
negb
xchg
or
dec
fisttpl
insl
mov
sbb
dec
fwait
imul
into
stc
sbb
cmpsl
insl
jns
jnp
push
cmpxchg
sbb
sub
rcr
jnp
or
xchg
ja
fwait
imul
mov
mov
mov
stos
mov
push
cs
xor
gs
ljmp
lret
sbb
adc
sbb
jns
pop
test
imul
dec
sub
arpl
es
outsb
mov
pop
ret
mov
mov
jb
cmp
sub
je
lahf
movntq
js
xor
mov
cmpsl
int
fiaddl
pop
mov
sub
cmp
mov
sbb
mov
rcrb
or
cmp
stos
jnp
xchg
ret
pop
sub
outsl
pop
loopne
jae
cld
scas
jnp
outsb
cmpsl
enter
push
jg
jnp
mov
add
lds
mov
mov
cmc
mov
xchg
xor
dec
sub
test
hlt
sti
and
cld
xor
lahf
jns
and
xor
loopne
add
fwait
sub
jnp
les
cmp
cltd
int3
stos
inc
lahf
insb
mov
xor
pop
push
incl
jmp
xor
push
fadds
inc
xor
mov
mov
or
repnz
push
xchg
testb
dec
adc
movsb
mov
pop
xor
mov
mov
sbb
mov
or
pop
js
xor
idivb
ret
ficoms
aad
ljmp
dec
sbb
push
out
insl
sarb
push
or
jg
shll
inc
mov
mov
ret
sub
push
jnp
imul
push
jnp
cmpsl
mov
inc
jnp
inc
push
xchg
push
pop
das
jnp
cmp
or
jnp
xchg
rcrb
push
ret
jno
insl
lds
outsl
mov
dec
and
outsb
inc
adc
jno
sbbl
push
mov
add
push
push
mov
xchg
sub
add
cmp
jecxz
filds
jl
aad
rorb
mov
xchg
push
push
mov
mov
push
dec
mov
jnp
dec
push
adc
jmp
jno
pop
xchg
mov
mov
fnstcw
lea
and
jnp
pop
stc
push
or
jbe
sti
sub
cmc
out
bound
cmc
gs
jb
movsb
mov
shr
or
pushf
sti
scas
mov
jns
push
mov
dec
lret
arpl
xchg
repz
cmpsb
pop
and
push
xchg
xor
jnp
pop
rolb
cmp
jnp
jns
std
shlb
sub
mov
pushf
mov
push
or
movsb
insb
sub
rcl
push
lea
cltd
push
std
push
daa
dec
adc
xchg
jmp
xchg
out
jbe
not
cmp
stc
jnp
xchg
xor
je
scas
jnp
pop
movsl
xor
inc
xchg
imul
rolb
loope
xchg
jg
mov
ljmp
es
imul
xchg
xlat
jnp
sbb
cmpb
jne
jnp
cmpl
pusha
mov
jno
push
push
arpl
sbb
cwtl
fwait
dec
xchg
into
cld
int
adc
test
xchg
mov
les
inc
xchg
cmpsl
cmp
pop
xchg
push
sub
movsb
push
and
in
insb
jnp
xor
rorb
bound
inc
pop
outsl
outsb
xchg
xchg
push
lea
stc
arpl
jnp
loope
ds
sahf
xlat
in
mov
inc
jnp
pop
fmul
pop
imul
outsb
jo
dec
repz
jl
xchg
sub
or
jnp
pop
cli
lcall
aaa
repz
out
bound
jnp
call
lods
jle
cmp
mov
adc
inc
jnp
sub
rcl
sub
pop
ja
dec
add
popa
pop
arpl
leave
test
out
pop
and
in
lret
inc
sub
mov
dec
stc
sbb
jnp
data16
sti
dec
mov
push
mov
test
lods
jne
aam
cmp
sarl
mov
lcall
fisubl
clc
inc
push
mov
mov
mov
in
imul
sub
out
sbb
jnp
add
xor
fwait
push
jg
inc
mov
jnp
mov
jo
jnp
pop
mov
push
push
adc
sbb
dec
push
xchg
push
in
ds
mov
scas
jnp
fwait
jne
dec
psubb
inc
adc
xchg
mov
popf
fucomi
fnstsw
leave
cmp
xor
ja
cmp
cmp
xchg
sub
and
adc
dec
jnp
dec
loope
hlt
sbb
jnp
pusha
fwait
ret
rol
jnp
dec
dec
cmp
jnp
xor
xchg
shrb
fs
mov
push
jnp
push
ret
cmp
lcall
aas
push
scas
jb
inc
jne
jnp
int
pop
add
fiaddl
out
inc
std
inc
jae
nop
shrl
ljmp
mov
xor
mov
movb
cmp
mov
adc
dec
stc
cmp
mov
mov
std
sbb
inc
test
pop
les
jb
mov
jnp
add
jnp
cmp
cld
xchg
xchg
out
xchg
push
pop
xchg
imul
stos
push
inc
push
mov
ja
cmp
and
mov
testb
mov
sbb
mov
mov
or
fnstenv
push
add
popf
ret
outsb
fs
xchg
arpl
sbb
jae
jnp
loope
push
push
jnp
push
sbb
ja
jbe
andl
roll
jecxz
pop
push
call
sti
sub
mov
mov
popa
dec
dec
js
ret
cmp
jnp
shlb
rolb
cs
jmp
in
jae
cmp
cltd
or
fisubrs
andl
adc
adc
mov
cli
jnp
mov
mov
lock
xchg
dec
je
inc
out
fnclex
cwtl
das
aas
jnp
dec
cmpsb
mov
cltd
or
out
ss
jnp
loopne
orb
or
jno
push
in
sti
add
nop
fdivr
in
test
add
out
cmp
cmp
xchg
ljmp
cmp
mov
pop
mov
jnp
aad
fbstp
sub
xchg
and
jge
inc
or
xchg
inc
lcall
lea
add
bnd
mov
jnp
jbe
je
iret
mov
stc
imul
ja
lds
outsl
aas
jnp
cld
out
sub
pop
mov
inc
adc
fstpt
insl
or
jnp
stos
inc
push
push
aas
in
jnp
pop
decl
add
xor
jbe
scas
or
adc
scas
push
or
fsubrl
dec
cmpsb
jnp
aas
bnd
dec
scas
add
xor
mov
jl
jae
pusha
pop
cmp
jp
mov
xor
test
mov
loop
jae
jmp
jnp
inc
push
std
xchg
mov
in
imul
push
ret
stos
push
idivb
add
ss
sti
scas
lock
mov
pop
inc
sub
arpl
jmp
mov
sbb
cmp
sub
xchg
add
sbb
pushf
aaa
subb
jnp
push
test
scas
jnp
cmpsl
out
mov
gs
cwtl
lret
adc
xor
outsl
cs
stc
rorb
xchg
sbb
pop
inc
out
xchg
xor
cmp
sub
push
sti
outsb
shl
lea
popf
cmc
fiaddl
jb
pop
cmp
inc
lea
jnp
xor
mov
push
aam
mov
jnp
sub
fnstsw
lahf
or
lock
mov
out
jnp
xchg
jecxz
add
sub
jb
xor
mov
test
pop
adc
lret
nop
jnp
cli
push
cmc
and
mov
jnp
shlb
mov
sub
sbb
data16
mov
jmp
aam
cmp
sahf
mov
sub
sti
sub
es
repz
stc
jnp
fisubl
scas
xchg
xchg
mov
jnp
lret
jno
nop
mov
daa
inc
and
in
fistpl
push
pop
imul
pop
jae
jnp
test
mov
jl
cwtl
cli
ss
or
ljmp
sub
xor
cmpb
sbb
decb
xchg
out
jnp
mov
cltd
fcmovbe
mov
push
mov
dec
subb
mov
cmp
sbb
mov
jnp
int
mov
test
sbb
orb
mov
call
pop
je
repz
mov
fs
mov
push
cmpsb
mov
lock
push
sahf
subl
xor
mov
insb
jg
loop
sub
jmp
js
pop
outsb
xchg
and
mov
fcoml
cmp
punpckhwd
lret
mov
and
jnp
sub
jmp
push
pushf
push
aam
jnp
idivb
outsl
cmp
cmpsl
jnp
push
mov
or
incl
and
jnp
lahf
mov
enter
ds
push
add
mov
and
pop
loope
push
mov
push
pop
or
or
ss
or
mov
popf
and
jnp
jl
dec
stc
jne
mov
cld
xor
pushf
hlt
sahf
ljmp
ja
ss
sbb
imul
sub
jnp
pop
push
push
les
jnp
out
mov
jnp
pop
cwtl
orb
pop
insb
jnp
adc
xor
test
nop
cltd
push
mov
xchg
pop
mov
mov
dec
pop
lcall
sbb
jnp
and
xchg
xchg
popa
scas
jnp
pop
cmpsb
mov
fdivrl
fmulp
fistl
push
pop
push
pop
lahf
and
push
dec
and
jmp
test
push
cmp
push
mov
dec
adc
test
mov
dec
push
mov
jnp
shlb
push
lahf
pushf
dec
jne
cmp
sbb
jno
pop
xorl
jnp
fcomps
xacquire
and
pop
das
jne
test
adc
cmp
jge
xchg
fstl
or
xchg
push
xor
in
jae
mov
ds
sub
and
loopne
into
es
sti
lods
sub
daa
xor
xchg
sbb
jecxz
jnp
push
aaa
aad
loope
fidivrs
cmp
cmp
repz
mov
jne
inc
mov
sti
icebp
xor
test
push
xchg
fsubrp
adc
sub
mov
jnp
adc
cmp
jae,pt
jnp
add
dec
filds
mov
roll
scas
mov
fdivs
mov
mov
add
mov
mov
cmpsl
mov
shlb
adc
jnp
mov
jnp
inc
sub
movsb
fs
test
xor
jae
jne
jnp
mov
ss
jmp
cmc
push
mov
std
enter
pop
pop
jnp
mov
loopne
push
test
xchg
sti
fcmove
outsb
ljmp
fisubrl
and
es
xchg
mov
cmp
std
mov
cmpsl
test
mov
sahf
aad
pcmpeqb
call
int3
outsb
loopne
cmp
cmpsb
adc
inc
xchg
mov
add
mov
inc
jp
pushf
cmpl
cmp
loope
push
push
popa
and
jmp
mov
stc
add
sub
fbstp
fcmovnbe
lret
mov
push
iret
std
stos
sbb
xor
mov
daa
adc
push
jg
cmp
inc
sahf
pushf
and
add
popa
jnp,pt
pop
rep
sbb
and
frstor
push
jnp
mov
lods
fwait
mov
inc
pushf
stos
sbb
rclb
cwtl
ficoml
insb
dec
xchg
lods
out
jmp
sub
in
jp
xchg
mov
jmp
or
loop
repz
cwtl
xchg
fcoms
call
stos
pop
adc
jae
jne
xchg
insb
iret
sahf
adc
out
mov
jns
cmp
cmp
das
dec
inc
pop
inc
ret
cmp
leave
mulb
jl
data16
pop
pop
ss
and
xor
lods
mov
sbb
subb
mov
mov
mov
sti
sbb
in
nop
test
lcall
mov
pop
sub
nop
std
leave
xchg
pusha
jnp
insl
cmp
test
jecxz
pop
dec
clc
popa
push
jns
das
int
je
ljmp
sti
inc
out
mov
push
jg
xchg
scas
jnp
hlt
ficomps
movsl
fs
jne
xchg
jnp
notl
js
push
jnp
jno
test
pop
pop
jg
and
adc
mov
push
dec
sub
aad
popa
cmpsl
push
jnp
mov
sub
jnp
pop
loopne
mov
fstps
xor
sar
and
jnp
lcall
jnp
xchg
gs
sbb
and
sbb
adc
push
push
in
jmp
mov
mov
xor
insl
mov
cmc
imul
sbb
pop
imul
and
lods
outsl
jnp
fldt
jg
pop
js
pusha
stc
ja
std
xorl
pop
mov
repz
imul
jnp
push
fcompl
out
xor
std
es
lret
lods
adc
mov
rcrb
mov
push
gs
addr16
popf
out
pop
testl
xchg
xchg
sub
jne
jnp
lahf
sbb
jnp
mov
push
popa
jnp
sar
cltd
inc
inc
lret
cwtl
jmp
in
dec
addb
xor
imulb
aas
sarl
sbb
dec
imul
test
sbb
jecxz
adc
pop
inc
mov
jnp
movsb
xchg
loop
push
jnp
dec
in
lret
lds
mov
pop
xor
repz
jae
or
xor
sub
mov
cmpsl
mov
dec
pop
sub
jnp
cmp
movsb
jbe
push
xchg
jnp
adc
loop
jnp
imul
test
dec
adcl
and
int
pop
cwtl
mov
jnp
and
sahf
inc
sarb
scas
xor
push
int3
rol
rcll
cmpsb
testl
rcr
jb
jg
ja
gs
sahf
jmp
dec
lods
movsl
subb
mov
ret
lret
cli
mov
repz
enter
lret
jnp
rcl
pop
stos
sbb
jnp
lods
mov
rcrl
divl
jge
add
mov
sbb
cmp
jnp
adc
cmp
pop
fcmovnu
or
xorb
mov
outsb
push
xchg
push
inc
lock
pop
xor
mov
xor
fldenv
iret
mov
mov
int
jno
outsb
cld
cwtl
fstps
push
lret
test
adc
in
jl
popf
and
xchg
mov
loope
arpl
jecxz
xchg
mov
mov
je
jmp
cmp
nop
scas
push
pushf
and
shrb
mov
sti
add
mov
mov
call
adc
and
ljmp
mov
adc
test
scas
sbb
push
xchg
pop
mov
lcall
sti
sub
pushf
xchg
mov
jo
repz
cld
ret
les
inc
imul
push
jno
jnp
shrl
stc
dec
mov
jbe
add
arpl
jnp
push
push
repnz
sub
mov
cmp
into
cmpsb
mov
aas
jnp
mov
lahf
cmp
and
pop
call
jnp
insl
add
xchg
jle
test
loopne
adc
xchg
sbb
sub
mov
in
cwtl
orl
lret
sti
fs
mov
mov
pushf
cwtl
mov
jg
scas
xlat
push
lods
adc
aad
and
test
pop
jnp
sub
movsb
mov
jb
or
cmp
jnp
xchg
mov
add
shlb
jae
adc
in
pop
rcrl
sti
dec
xor
jnp
cmp
xchg
cmpsb
lret
bound
ret
fwait
cld
xchg
ss
cmpsb
cmp
cmp
push
sbb
fistpl
shrl
ljmp
lock
cmp
add
jbe
pop
xchg
clc
jp
jnp
xchg
sub
jnp
andb
in
mov
jnp
lret
push
mov
sarl
dec
ret
test
jnp
pop
sbb
push
sub
add
pop
and
jnp
test
adcb
out
clc
jge
int
loop
push
jecxz
mov
inc
inc
pop
pop
sti
outsb
jne
adc
sbb
sub
int
ss
fisttpl
dec
and
dec
scas
stos
add
push
pop
rorb
xchg
dec
addb
mov
push
push
pop
lahf
arpl
dec
pop
lods
jecxz
pop
mov
scas
ret
xchg
stos
outsb
orl
test
call
jno
inc
jmp
jl
fnstsw
cmpb
jnp
mov
jne
into
aad
jnp
and
pop
loope
xorl
add
arpl
lahf
jbe
cli
sarb
sti
adc
rcll
rolb
es
cmp
add
jnp
inc
arpl
stos
add
jns
pop
xchg
inc
dec
mov
xchg
jnp
dec
scas
hlt
pop
cmp
addr16
xchg
imul
loopne
dec
das
data16
mov
subl
lret
and
mov
sahf
stc
cs
and
int3
insb
or
jge
iret
pushf
or
adc
inc
lret
jnp
push
lods
and
jb
jnp
xor
cmp
repnz
jnp
push
out
push
repz
fsubp
mov
fcompl
mov
xchg
test
mov
push
mov
aam
rol
arpl
mov
mov
out
gs
ret
ret
adc
sti
add
sbb
mov
xchg
ja
scas
cld
add
cmpsb
pushf
push
jno
dec
and
mov
out
outsb
gs
mov
or
mov
nop
xchg
incl
jb
ret
bound
jg
inc
mov
clc
jnp
cwtl
jecxz
sti
jp
xchg
jge
sub
sub
sarb
fldt
cli
and
enter
into
or
jbe
test
push
mov
dec
sti
scas
cltd
add
xchg
mov
pop
repnz
dec
lock
arpl
fnstsw
mov
jae
adc
mov
int3
cs
jb
cli
sti
dec
sahf
cmp
loope
mov
in
fldt
jnp
xchg
cli
in
stos
ja
call
mov
xchg
aas
push
imul
xor
add
outsb
xchg
jne
xchg
shrb
sbb
xchg
sbb
lcall
cmp
mov
lods
fldcw
xor
bound
adc
jnp
mov
mov
test
xchg
sbb
add
push
push
mov
sub
arpl
jnp
movsb
xchg
xor
mov
jo
cli
cmp
adc
test
shr
add
test
test
xchg
das
lock
pop
cmp
imul
lcall
adc
and
mov
rcrl
jnp
rol
xchg
push
or
shll
adc
sbb
adc
push
cs
jmp
xchg
test
outsb
daa
test
test
and
mov
xchg
dec
lahf
fldcw
cmp
lcall
lea
dec
cmc
mov
stos
push
inc
sbb
lret
jno
das
fisttpll
add
iret
mov
mov
mov
shl
jbe
sub
jnp
mov
mov
jle
sti
fstpl
jns
test
xchg
lods
mov
decb
outsl
in
cltd
mov
gs
jnp
mov
repz
inc
sbb
and
insb
int3
or
add
jnp
ss
mov
leave
xrelease
xchg
dec
inc
test
mov
iret
jns
pop
aam
popa
mov
hlt
lea
mov
js
ret
imul
sbb
in
mov
xchg
fucomi
fwait
or
push
fisttps
icebp
add
call
add
mov
pop
jae
cwtl
mov
adc
push
icebp
mov
push
push
sub
jge
sub
xor
outsb
jae
mov
and
and
in
mov
popa
insb
jecxz
arpl
lds
sahf
stos
jg
cmc
sti
arpl
xchg
jp
xor
dec
aam
add
jns
stc
fldcw
mov
lret
in
pusha
fisubl
pop
rclb
or
push
cmp
or
lcall
mov
cmp
ret
hlt
jle
add
pop
jge
xchg
inc
xor
arpl
mov
in
mov
mov
fcomp
push
mov
outsl
cmp
shll
jnp
mov
push
mov
scas
jnp
xchg
arpl
pushf
cld
mov
xchg
add
inc
roll
jnp
les
out
inc
cmp
inc
sbb
xor
and
push
jo
sarb
sub
inc
adc
add
adc
adc
jnp
mov
stos
xchg
sub
outsb
mov
sub
cmp
sub
ja
fdivrl
repz
push
cmc
or
sub
xchg
into
lods
xchg
int3
xlat
sbbb
pushf
xor
push
iret
add
jnp
jp
imul
jnp
loopne
mov
cmp
xor
sub
int3
jnp
loop
fsts
lcall
mov
jnp
iret
aad
adc
jae
dec
sbb
ja
das
ljmp
jmp
xor
loopne
jge
adc
add
fisubrs
or
out
je
jb
push
mov
movsl
scas
xor
cmc
cmp
ret
jnp
push
fmulp
arpl
fisubs
movsl
and
add
outsb
test
jmp
mov
imul
mov
jns
jnp
lret
das
sbb
mov
or
test
jle
xchg
mov
sahf
jmp
ljmp
sub
pop
and
lods
test
out
cmp
das
sub
and
push
push
movsl
fwait
jnp
pop
pop
cli
es
scas
mov
mov
js
fwait
dec
jne
xlat
pusha
pop
lock
push
mov
fsubrl
addb
lods
dec
push
movsb
cmp
gs
or
push
dec
cmpsb
push
iret
mov
stos
or
xchg
fistl
mov
mov
jae
sarb
sbb
dec
lcall
adc
pusha
mov
jg
sahf
leave
add
jnp
pop
sub
jle
mov
jno
mov
cs
aas
jnp
call
adc
jle
xor
inc
push
sahf
xchg
jp
das
xchg
jmp
aas
adc
rorl
push
addr16
jnp
sub
add
movsl
fisubrl
xchg
outsl
jnp
jl
mov
pop
mov
out
xchg
cld
pushf
daa
or
push
das
sbb
or
movsb
add
pop
jg
xchg
cmp
stos
dec
inc
lock
pusha
mov
psrad
stos
push
add
cltd
sar
or
aaa
xlat
jnp
mov
push
sub
jmp
pop
clc
xchg
cmp
xchg
mov
pop
leave
pop
imul
shrb
cmp
pop
dec
push
xchg
jnp
pop
movsl
adc
pusha
push
mov
mov
or
xchg
sbb
mov
inc
push
mov
fcmovnu
adc
into
aas
shlb
pop
scas
jecxz
pop
jmp
outsb
aas
push
mov
add
cmc
jnp
adc
mov
jae
jnp
mov
adc
sarl
mov
jp
ds
jle
gs
xchg
scas
and
stc
iret
movsl
lea
lods
jnp
add
mov
cmpsb
rcrl
jnp
push
nop
push
mov
hlt
lcall
sbb
lret
jge
ret
movsl
rorl
xchg
mov
cwtl
mov
pop
and
xchg
xlat
pop
movsl
dec
jnp
subl
scas
mov
dec
into
clc
test
int
in
scas
adc
daa
mov
push
or
jnp
pushf
pusha
bswap
xchg
cs
dec
sub
aas
repz
or
aam
std
sti
stc
pop
jae
icebp
pop
mov
ds
add
push
pop
sti
adc
inc
mov
push
sbb
mov
shrl
call
add
adc
je
cmpsb
jl
or
dec
sub
add
jnp
xchg
mov
pop
mov
scas
mov
push
outsl
pop
jnp
pop
pop
inc
push
rolb
repz
sub
lcall
xchg
outsb
mov
jl
pop
xchg
sti
inc
dec
lahf
imul
sbb
jmp
pusha
push
xchg
int
jnp
sub
and
pushf
les
push
movsb
shrl
cmp
loop
inc
xlat
or
adc
jnp
pop
insb
scas
dec
jno
sbb
jnp
adc
das
pop
jnp
loope
rclb
adc
hlt
jp
mov
icebp
jg
ret
pop
scas
jmp
data16
adc
inc
mov
insb
push
imul
adc
lock
push
mov
int
test
repnz
sti
push
or
fs
mov
lcall
add
mov
sti
test
jo
mov
imul
pusha
stc
aam
stos
jb
ffreep
jnp
popf
mov
jle
sbb
loopne
scas
cmpsl
stc
leave
or
jnp
sub
mov
imul
mov
jnp
xchg
sub
shl
xchg
inc
imul
xchg
mov
negb
jg
fsubrl
call
jbe
and
lcall
pop
fwait
popa
testl
outsl
icebp
dec
sarb
insl
or
int3
sub
and
jnp
or
hlt
jnp
je
sti
jp
add
orl
lods
mov
push
rolb
jnp
add
pop
mov
repz
test
jnp
ja
xchg
mov
aas
and
jnp
and
add
repz
fldl
ficoml
add
dec
jae
popf
push
loope
mov
sub
push
push
pushf
pop
sti
jl
adc
push
xchg
mov
push
sub
sbb
mov
mov
mov
jnp
rcrb
test
jnp
fisubs
push
jnp
pushf
xor
out
push
add
aam
in
mov
mov
mov
dec
fs
cmp
dec
test
push
jne
out
jnp
pusha
popa
aad
das
popl
mull
ret
int
test
xor
cmp
inc
mov
div
push
xchg
mov
sahf
or
cmp
mov
xchg
pop
pop
pushf
mov
xchg
inc
adc
scas
out
mov
stos
sub
or
out
jne
xchg
push
xchg
scas
stc
inc
and
jg
pop
mov
pushl
and
mov
rolb
lds
xlat
repz
jnp
into
pop
lret
inc
jle
fdivrs
cmc
stos
aam
pop
stos
cli
jnp
sahf
orl
mov
das
jg
je
fists
sti
leave
mov
rorl
fnstcw
bound
jp
sarl
and
xchg
dec
ds
cmp
jnp
push
adc
adc
pop
out
jo
jnp
sbb
jle
and
das
test
repz
jnp
mov
gs
aaa
lcall
pop
nop
inc
insb
xchg
fdivrs
xchg
sbb
jnp
or
es
dec
ror
mov
dec
cmpsl
lea
sahf
scas
push
ljmp
sub
call
out
jnp
pop
sbb
out
jnp
and
sub
mov
xchg
mov
sub
xchg
jnp
sbb
push
test
cltd
in
pop
push
mov
inc
cmpsb
sbb
lret
xchg
mov
push
pushf
or
mov
and
out
mov
lcall
fbstp
arpl
sbb
daa
scas
cmp
and
adc
mov
push
lret
sbb
push
ret
hlt
sub
mov
sbb
push
pop
jnp
ret
popl
pop
or
jnp
push
std
mov
fisttpl
into
arpl
outsb
imul
cmp
lret
int
sub
sub
pop
int3
and
mov
mov
inc
sbb
fs
ljmp
dec
mov
pop
pop
jnp
lret
sbb
mov
pop
sub
decb
add
push
xor
jnp
iret
pop
sub
mov
cmpsl
das
cmp
cwtl
dec
jp
mov
bnd
fiaddl
or
mov
lds
loop
and
mov
test
jnp
or
stc
daa
das
pop
imul
lahf
js
mov
movl
leave
jge
rcrl
sarl
lcall
xor
pushf
jnp
out
ljmp
aaa
movsl
jns
xchg
cld
out
testb
push
jb
adc
cmp
adc
mov
sbb
pop
cli
add
add
jle
inc
adc
xor
lods
mov
cwtl
mov
sbb
outsb
mov
cmp
test
in
arpl
jge
jmp
ret
mov
sbbb
push
mov
mov
push
xchg
in
arpl
stos
enter
shl
daa
stc
xlat
repnz
mov
push
les
mov
shll
xchg
dec
sbb
dec
rolb
cwtl
mov
fbstp
imul
jmp
cli
jnp
push
in
sbb
pop
adcb
jnp
repz
int
sub
es
fs
xor
clc
out
xorl
inc
sub
adc
cmp
jb
stos
lret
mov
test
jns
sbb
xchg
push
sbb
mov
cmp
push
movsb
or
or
fsubs
into
jb
xchg
bound
adc
test
pusha
aam
repz
movsl
scas
push
xchg
arpl
lahf
jb
test
jbe
inc
fldenv
aad
scas
mov
das
nop
es
adc
imul
fsubrs
imul
mov
adc
or
sti
add
cld
test
cmp
loop
mov
cmpb
mov
pop
jnp
popf
lcall
cwtl
jno
pop
mov
ja
dec
pop
xlat
setbe
jnp
fwait
aas
sarl
pop
cs
cmp
sarb
bound
mov
test
sti
push
aam
push
jnp
fildll
jae
jnp
pop
cs
enter
cli
stc
jnp
pop
jbe
mov
loopne
jnp
fidivl
mov
or
mov
push
leave
negl
jnp
xor
aad
mov
sarl
cmp
mov
mov
filds
adc
push
adc
ja
mov
lahf
fstps
lods
repz
decb
fdivr
push
mov
adcl
jnp
std
adc
loop
nop
xchg
mov
push
jnp
cmpsl
xlat
hlt
mov
xchg
lret
xor
or
add
jmp
push
mov
push
test
in
pop
jno
aad
ror
cmc
mov
add
or
mov
into
jmp
popf
jle
lock
leave
cld
xor
rclb
insb
clc
mov
fninit
cmp
movsl
sub
cmpsl
orb
pop
add
jnp
adc
push
sub
fisttpl
jmp
mov
push
and
mov
pop
sbb
jnp
jns
addr16
jb
cmp
nop
push
sbb
jnp
shl
push
ret
mov
dec
and
mov
xchg
xchg
jge
pushf
mov
push
mov
fmuls
shrl
nop
jnp
jge
jecxz
je
call
jo
dec
pop
bound
cmp
cmpsb
adc
je
aaa
push
dec
fs
mov
inc
mov
jnp
or
fs
in
sahf
inc
xchg
lcall
scas
fistpl
push
fbstp
pop
inc
or
push
lods
and
ret
xchg
xchg
mov
jo
lock
icebp
add
jnp
push
cltd
bound
xchg
mov
pusha
inc
out
mov
mov
cmp
sarb
movsb
push
lds
adcb
mov
in
sti
iret
fcmovbe
xchg
in
fidivs
xchg
rcll
jecxz
jmp
cmp
xchg
test
rol
mov
inc
dec
mov
je
mov
dec
iret
gs
dec
adc
ds
in
xchg
add
ljmp
loopne
and
adc
clc
and
es
sbbb
or
rcrl
jp
xchg
insb
mov
pop
leave
jg
jno
pop
dec
adc
jnp
jb
xchg
fdivr
stos
pop
xor
ret
cs
sbbb
mov
jnp
in
daa
imul
jnp
lods
mov
sbb
jnp
pusha
out
inc
inc
lcall
cmp
push
adc
lahf
mov
pop
add
sti
fs
movswl
push
das
push
sti
push
cmp
push
pop
add
insb
sub
stos
adc
mov
adc
stos
lcall
loop
or
mov
cs
out
jnp
lods
and
jnp
lods
iret
or
jnp
xor
cmp
jge
lea
sti
popf
sub
xor
or
lcall
jnp
ja
dec
and
scas
pop
pop
mov
inc
mov
jnp
add
mov
in
mov
je
mov
insl
jl
pop
cmpsb
movsb
sahf
and
push
inc
push
fnsave
and
cli
lods
jnp
in
testb
mov
push
cmp
pop
mov
xor
sub
push
out
inc
jo
inc
jns
jae
fwait
icebp
push
cwtl
outsb
scas
daa
clc
movsl
mov
mov
xchg
aam
mov
daa
mov
mov
sub
jge
das
push
push
cmp
jp
bound
jae
fisttpl
fwait
push
mov
xchg
loop
cwtl
push
data16
mov
xchg
aas
inc
mov
xchg
jle
repz
clc
aaa
sbb
sub
cmp
jbe
mov
pop
sti
jecxz
fdivl
nop
add
sub
jge
clc
inc
test
jns
pop
mov
fdivp
aas
and
xor
add
adc
adc
add
les
test
mov
outsb
jp
leave
sub
movsl
adc
inc
sub
lcall
dec
sbb
test
aaa
pop
repz
cmp
mov
fmulp
test
cmp
loopne
jle
pop
mul
xchg
push
enter
jne
nop
inc
hlt
ret
cmpsb
dec
sti
add
imul
sub
push
clc
add
and
adc
xchg
or
fs
fisttpl
scas
nop
test
xchg
mov
mov
iret
xchg
aam
arpl
cs
filds
je
lcall
lods
lcall
add
push
call
cld
test
dec
cld
jnp
and
sbb
insb
repz
repnz
and
xchg
jns
or
ss
fimull
jnp
ret
or
dec
jae
jnp
and
jnp
xor
sub
mov
jg
fcmovnu
add
xchg
ret
jnp
into
dec
popa
add
sti
insb
inc
lea
daa
mov
sbb
mull
jnp
outsl
jg
dec
cwtl
push
aam
inc
repz
pusha
xlat
lods
stos
lret
inc
test
adc
scas
leave
push
mov
pop
scas
insl
jnp
push
stos
nop
dec
and
sub
and
roll
scas
mov
add
xor
sub
pop
mov
mov
movsl
pop
stc
mov
sbb
fiadds
ljmp
push
mov
add
popa
dec
mov
dec
mov
scas
or
lret
mov
mov
out
push
add
sbb
pop
faddp
mov
ds
incb
addr16
xchg
push
jecxz
sti
jnp
ret
xor
xchg
or
inc
out
push
add
mov
sahf
adc
jnp
lods
mov
mov
leave
enter
jae
sub
mov
xchg
testl
test
pop
jge
mov
sti
out
fcomps
loopw
mov
or
enter
sbb
pop
jnp
mov
leave
mov
push
jnp
mov
pop
stos
stos
xlat
cmpl
inc
scas
sarl
std
lret
and
push
cmp
repz
fwait
mov
popf
jnp
or
std
addl
jnp
sub
adcl
lahf
cmpsl
push
shlb
inc
jge
movsb
mov
xor
loope
mov
test
dec
jnp
xor
lahf
push
scas
repnz
xchg
cmp
sub
add
addr16
jo
or
int
into
add
fiaddl
movsb
sti
mov
sub
call
push
jnp
xchg
notl
loopne
inc
mul
out
mov
mov
push
and
lahf
dec
dec
cmp
sbb
fidivl
jnp
pop
gs
repnz
shrb
mov
es
aad
add
nop
cmp
rcrb
push
cmc
cmpsb
outsl
addl
jne
push
sbb
mov
push
sti
pop
jns
jnp
movsb
mov
sbb
or
lock
jle
xchg
jnp
pop
je
mov
or
push
mov
ficoms
sbb
jnp
fcoml
adc
repz
mov
leave
mov
test
popf
fs
jnp
sub
ror
sarb
pop
pop
sbb
in
adc
test
aad
loopne
inc
incb
daa
in
test
nop
mov
jl
jnp
shl
xor
dec
lahf
pop
inc
or
sub
ja
and
pop
cli
pop
and
mov
fcompl
icebp
cmp
adcl
cmc
adc
sbb
call
sbb
popf
cmp
jmp
sub
and
or
sbb
int
in
pop
jnp
jne
push
sub
nop
lcall
and
add
aad
xor
sub
gs
scas
xor
dec
sub
fstps
jp
sbb
sub
sahf
mov
xchg
mov
add
iret
je
mov
outsl
inc
lds
fiaddl
jnp
inc
clc
stc
popf
cmp
jle
stos
jnp
and
xchg
mov
movsb
xorb
jnp
std
hlt
in
loope
cltd
mov
xor
pusha
cmc
adc
mov
or
mov
jnp
add
hlt
mov
in
jnp
out
sbb
in
mov
push
or
inc
jnp
int3
mov
lahf
cmp
jnp
aad
inc
lds
orb
dec
or
lods
cmp
add
insl
push
cmc
cwtl
mov
orb
ljmp
xor
arpl
xor
jnp
mov
xor
lcall
push
sub
jge
jnp
jae
jmp
fwait
jnp
jns
cmp
test
scas
test
fsubrl
subb
inc
mov
inc
rcrl
push
dec
mov
ret
mov
imulb
cwtl
aaa
and
and
leave
push
imul
jb
mov
push
jp
js
cmp
and
add
adc
cwtl
or
pushl
fsubrl
push
fcmovnbe
cld
lds
jl
jl
adc
imul
mov
int
sub
orb
pop
mov
shll
sahf
push
test
add
push
mov
or
pop
sub
adc
bound
js
pushf
loopne
cmp
mov
mov
clc
adc
imul
insb
je
xchg
outsb
movsl
movsb
imul
inc
arpl
cltd
pop
or
repnz
loop
mov
outsb
das
test
pop
out
xor
mov
and
and
add
int
sub
sbb
mov
fucomi
aam
pop
out
lods
js
cmpsb
popa
icebp
add
xchg
jb
add
bound
or
dec
lds
jne
fdivl
fstps
sbb
lahf
sti
mov
ret
pop
xlat
in
lods
mov
jnp
iret
ror
dec
mov
mov
mov
sub
jnp
call
xor
jnp
lods
sbb
jb
push
dec
jnp
cmp
mov
jnp
das
pop
lret
je
jnp
add
and
cltd
sbb
push
inc
jnp
fidivl
fnsave
push
and
dec
daa
clc
fadds
cld
add
push
jp
sbb
mov
sti
daa
jne
mov
push
mov
sub
nop
jmp
inc
das
pop
xor
jnp
mov
inc
mov
xchg
lds
cmp
pop
scas
pop
pop
imul
stos
or
jnp
pop
cs
jp
jnp
loopne
ljmp
mov
xor
in
inc
sbb
adc
dec
push
cmp
jns
sahf
clc
and
data16
dec
xchg
xchg
in
fldenv
mov
sub
fsubrp
out
nop
xlat
add
shl
pop
xchg
mov
bnd
adc
faddl
sahf
cmp
sti
call
pop
cltd
lock
add
xchg
adc
adc
pop
outsb
fwait
sub
inc
ljmp
sbb
xchg
clc
adc
mov
jl
dec
or
jmp
mov
dec
mov
das
imul
cmc
xchg
jnp
mov
sub
gs
jnp
xchg
mov
jae
jnp
popf
pop
das
call
sbb
pop
cltd
jnp
mov
dec
hlt
test
jecxz
add
shll
lcall
mov
pop
dec
lea
lcall
adc
stos
push
inc
cmp
mov
jnp
fidivs
jmp
sbb
cs
mov
dec
repnz
sub
push
outsl
pop
jge
popa
sbb
in
mov
sahf
rcll
jnp
mov
inc
mov
bound
pusha
testl
mov
cmp
mov
inc
ret
enter
sti
jge
pop
daa
arpl
jp
xchg
mov
mov
shrb
mov
ja
orb
gs
jnp
bound
pop
sbb
das
jecxz
es
loopne
inc
cltd
leave
add
add
orl
or
clc
xchg
mul
jnp
jbe
rep
push
jnp
rorl
mov
pop
out
movsb
add
xchg
xchg
jnp
insb
pop
mov
mov
jecxz
repnz
xchg
sub
mov
xchg
xchg
adc
and
xchg
push
daa
cld
out
testl
xor
mov
pop
jnp
int3
lcall
push
nop
mov
out
push
icebp
lock
fwait
rcr
orl
jnp
and
mov
das
and
lock
mov
orb
mov
outsb
adc
adc
ss
int3
sbb
pop
inc
fadd
ja
in
jge
subb
cltd
sti
adc
aam
nop
popf
shlb
jle
mov
mov
mov
xor
cmp
lea
fnstcw
sbb
je
or
push
shlb
in
xor
lds
jge
inc
and
cmp
mov
xlat
sub
jo
mov
jnp
adc
cmpsb
sub
hlt
xor
sub
fidivrs
in
cltd
std
jp
repnz
xchg
xchg
cmp
scas
mov
cmpb
aaa
sub
cmp
arpl
decb
insb
jnp
or
xor
add
popf
xchg
adc
cmp
jne
hlt
imul
sbb
add
lods
movsl
xchg
and
movl
add
mov
xchg
movsb
jae
stc
push
xchg
pop
adc
jg
addr16
and
shlb
popl
adc
xchg
xor
pop
or
adc
xchg
inc
rcl
jnp
sbb
out
xor
jnp
mov
test
jnp
rcrl
js
mov
dec
mov
imul
pop
mov
mov
fists
call
mov
in
std
fwait
incb
into
and
cltd
outsb
scas
cmp
or
jnp
sub
jnp
xchg
sbb
aaa
inc
cmpsl
imul
lods
adc
lds
imul
jo
and
add
outsl
jnp
sahf
and
rolb
jnp
and
inc
cs
dec
imul
mov
dec
cmpsb
fwait
mov
jnp
imul
mov
cmpl
ljmp
das
adc
mov
mov
sti
jae
cmp
adc
jnp
mov
sub
xor
xchg
jnp
cwtl
fmull
cmc
test
jns
cmpsl
sbb
or
pop
xor
adc
jnp
ljmp
mov
sarb
push
rep
cmp
popa
jnp
mov
pusha
pop
lret
lods
mov
sti
js
sub
call
aad
xchg
pushf
jge
jnp
ds
iret
fbstp
sarb
movsb
test
fstpl
fcoml
dec
mov
sub
mov
mulb
fidivl
cmp
clc
sarl
into
shrb
xchg
pop
and
xchg
pop
rcrb
jnp
cltd
xorl
add
lcall
dec
iret
ret
sub
and
or
shlb
orb
pusha
pop
lods
cmp
xchg
cli
test
imul
pop
jb
jbe
adc
nop
stc
xchg
scas
dec
shrb
jb
push
mov
shrb
jnp
xor
jnp
mov
pop
sahf
jnp
or
shl
dec
ja
fwait
cmp
negl
in
sbb
push
xor
add
adc
pop
ss
aaa
mov
inc
rol
repnz
lret
hlt
or
or
and
add
xor
push
cmp
mov
sub
or
lods
or
cmpb
imul
repnz
nop
xchg
stos
xchg
xchg
jbe
lahf
dec
sti
cld
push
mov
mov
and
in
sbb
jg
pushf
imul
sbb
mov
mov
lcall
or
cmpsb
es
pop
inc
data16
imul
xchg
pop
test
outsb
adc
outsb
arpl
mov
mov
pop
add
int3
test
xchg
sahf
in
pushf
mov
jno
dec
out
leave
lahf
out
push
stc
jns
jnp
ret
adc
sbbl
push
jnp
pushf
push
sub
pop
repz
sti
jge
jl
mov
mov
dec
mov
jmp
jnp
or
imul
sbb
mov
dec
jecxz
sub
pop
rorl
or
push
mov
inc
adc
and
xchg
or
imul
repz
iret
call
lahf
movsb
cmp
mov
adc
dec
push
xchg
es
mov
jge
aad
jnp
mov
jno,pt
addr16
cld
mov
add
or
add
add
jl
jo
pusha
cmp
inc
pop
adc
sbb
test
hlt
adc
ret
notb
scas
add
xor
mov
and
adc
push
scas
jnp
dec
mov
cld
jnp
lock
and
cmp
dec
mov
sar
jnp
pop
mov
cmp
cs
push
lea
mov
hlt
subb
push
decb
mov
mov
lds
int
or
jnp
loope
fnstsw
sbbl
das
pop
lret
jp
jnp
arpl
mov
mov
adc
in
adc
dec
aas
insl
jnp
add
inc
fs
lods
jnp
outsl
sbb
rcll
jbe
movsb
and
pop
fidivrl
and
xchg
xor
inc
jnp
sbb
jecxz
iret
mov
fcomip
cmpsb
aaa
stc
imul
mov
cmp
test
pop
pop
mov
test
lea
arpl
fldl
mov
mov
mov
fldt
xor
out
cmpsl
pop
or
xchg
aas
mov
stc
xchg
mov
outsl
pop
or
mov
cmpb
test
jnp
das
pushf
xlat
xchg
dec
sbb
repz
jmp
jnp
je
dec
cmp
xchg
mov
xor
inc
jns
mov
sub
add
pop
jmp
xchg
nop
push
inc
subb
mov
adc
fimuls
jge
loopne
fs
sbb
mov
xchg
in
inc
jns
and
xor
call
jne
jecxz
adc
aam
out
pop
outsb
test
jge
stos
xchg
jge
mov
ja
and
stos
bnd
or
pop
adc
std
arpl
push
mov
fwait
xor
or
mov
inc
flds
mov
mov
sub
and
cmp
mov
movsb
sbb
mov
mov
nop
cmp
cli
inc
out
xchg
lds
lds
fstpt
cmpsl
js
pop
xchg
or
inc
imul
aad
mov
aaa
mov
arpl
pop
pop
pop
push
lds
sub
jp
cli
xchg
inc
jno
jns
mov
mov
int
adc
sahf
sub
shlb
xor
mov
clc
mov
or
lret
ret
and
jns
es
enter
adc
loope
adc
push
es
mov
sti
mov
xchg
sbb
iret
test
add
aam
or
fdivrl
sbb
mov
jnp
jp
sub
test
add
inc
data16
movsb
frstor
std
in
outsl
imul
xor
mov
jp
adcl
jno
lock
jnp
in
test
jnp
rcrb
mov
lods
mov
xchg
mov
sar
xor
pop
mov
pop
mov
sarb
mov
repz
dec
pop
idivb
in
mov
jnp
pop
jmp
cli
jnp
aaa
cmpsl
push
sbb
cmp
insl
out
sbb
cmp
imul
xchg
xor
bound
pop
pop
cmp
popf
jnp
pushf
push
sbb
jnp
jge
add
or
jne
jnp
pushf
mov
adc
xchg
fistpl
lahf
cmp
jl
gs
sub
setl
jnp
jne
ret
sbbb
mov
loope
adc
fcoml
mov
insl
cli
ret
xchg
xorb
bound
mov
daa
popf
stos
pop
lahf
jle
pop
adc
rcll
movsb
xchg
aad
ret
sbb
cmp
movsb
xor
test
xchg
dec
cmp
je
ds
mov
jecxz
aam
fdivr
push
mov
lret
inc
sbb
xchg
xchg
add
mov
mov
repnz
leave
leave
data16
jbe
in
push
or
test
mov
test
and
xchg
outsb
nop
pusha
jnp
xchg
mov
ja
push
test
push
loope
mov
dec
fadds
clc
pop
in
jnp
dec
adc
daa
addr16
jbe
lods
pop
bound
out
dec
je
jnp
div
mov
mov
xor
test
jae
cwtl
inc
xchg
cmc
addr16
fwait
jnp
out
clc
jns
inc
mov
lahf
inc
cmp
subb
stos
imul
jns
jbe
sti
jmp
cmp
scas
adc
jnp
cli
pop
ficompl
inc
jae
jnp
pop
xchg
dec
scas
cmp
jnp
xor
das
mov
hlt
repz
lret
ffree
jnp
sbb
pushf
stos
ss
cmp
cld
call
rcrl
in
jnp
cs
add
lods
cltd
inc
jnp
sub
mov
mov
mov
fnstenv
sub
push
in
cmp
or
sbb
mov
push
push
jl
loop
stos
pop
xchg
xlat
aaa
rolb
notb
adc
pushw
ljmp
mov
mov
movsb
jnp
inc
out
in
pop
lods
nop
mov
mov
jo
jnp
dec
das
movnti
aas
xor
fbld
sbb
mov
fcomps
popf
or
push
fimuls
mov
pop
outsl
enter
ds
xchg
fstpt
lock
push
mov
pop
jnp
cld
pop
inc
cmp
out
sti
sbb
and
lret
jnp
jmp
or
popa
pop
jnp
fists
popf
std
xor
mov
pushf
pop
ss
jg
popa
jnp
pop
cmpsl
andl
cli
cmp
mov
jne
sbb
push
lods
in
pop
jbe
pop
sbbb
imul
push
addr16
jnp
sub
addr16
repnz
repz
std
gs
xchg
mov
mov
cli
xchg
xor
or
jns
jp
int
pop
push
cmp
cmp
mov
jae
push
pushf
pop
test
and
or
pop
sbb
aam
pop
mov
sti
jge
jae
mov
cltd
fwait
sti
sti
or
jnp
mov
clc
rorb
jge
mov
shlb
mov
inc
sub
inc
stos
imul
mov
nop
push
and
sub
or
pop
cmp
xchg
loope
jp
sti
and
out
mov
add
rol
inc
add
push
in
jnp
call
lahf
pop
std
or
lds
into
loopne
insl
addr16
aad
pusha
push
jns
imul
adc
sub
xor
push
jnp
icebp
pop
ja
lea
jmp
cld
imul
sbb
mov
jp
jnp
or
cltd
orl
jmp
jnp
insb
or
adc
dec
mov
cmp
into
mov
test
outsb
push
mov
jge
push
rorb
mov
pop
mov
inc
mov
jnp
lods
mov
aas
jecxz
mov
sub
jmp
enter
and
gs
dec
popl
shrb
fs
insb
sbb
bound
pop
lret
jle
in
shrl
jnp
repnz
ss
cltd
and
mov
nop
jae
mov
mov
cltd
mov
jo
push
movl
jne
cmp
jp
rcll
or
ficompl
fstpl
inc
and
std
add
lret
and
int
push
arpl
fs
roll
sub
adc
jb
cmpsb
push
lock
jno
jnp
ljmp
das
jle
flds
lea
lret
adc
jno
jno
mov
push
cmc
loope
dec
mov
xor
mov
scas
xor
int
xor
mov
jnp
sarb
clc
pop
mov
or
dec
lea
movsb
mov
push
xor
add
aaa
push
sbb
add
or
fisubs
out
jnp
test
lret
mov
mov
add
inc
jno
ss
jnp
jne
inc
jae
loop
xchg
mov
pop
push
jnp
dec
fldenv
lahf
sub
and
loope
clc
jmp
out
aaa
arpl
and
sbb
imul
faddp
lcall
jb
inc
xchg
dec
jnp
or
movsl
cmpsl
in
jnp
fimull
imul
mov
bound
mov
dec
push
mov
lods
mov
int3
mov
sub
sub
or
jecxz
mov
pop
or
jnp
js
mov
jnp
ret
xchg
repnz
lahf
adc
movsl
jnp
adc
jnp
cmp
sbb
orl
in
mov
and
stos
or
aaa
jnp
das
pop
pop
inc
mov
sbbb
jle
fsubrl
fstpt
xorl
es
ret
pop
xchg
imul
ds
jnp
hlt
xor
dec
lea
daa
inc
jnp
insb
in
jecxz
cwtl
shll
cmp
test
arpl
xor
stos
jle
repz
aam
fwait
cld
cmp
rolb
pushf
mov
imul
adc
leave
ja
xchg
xchg
aam
jg
pushf
jnp
jmp
xor
xchg
xlat
ret
sti
int3
dec
or
jge
cli
sub
repz
insb
lret
pop
movsl
and
gs
ret
fiadds
cli
fcmovb
fdivs
jnp
es
mov
mov
enter
jnp
pop
push
xchg
and
cmp
sub
testl
sbb
and
cmp
xor
and
jl
pushf
int3
fisubl
fnsave
test
jg
sbb
pop
mov
scas
jnp
inc
loop
and
or
sbb
enter
out
gs
lret
cmp
mov
shrb
gs
lcall
and
mov
cmp
rcr
jnp
xor
fdivs
mov
push
inc
movl
mov
sti
xor
ret
adc
jnp
jne
and
mov
notl
cmpb
mov
mov
xor
jnp
and
leave
push
mov
clc
lock
and
out
int3
cmp
push
jnp
jecxz
mov
jbe
adc
push
ljmp
out
fcompl
fisttpll
cmp
out
mov
or
inc
repnz
outsl
mov
dec
mov
arpl
out
stos
jnp
fbstp
loopne
repnz
jnp
mov
loope
xchg
mov
in
sbb
jnp
and
push
xchg
cmp
dec
cmpl
test
icebp
in
jnp
cmp
jno
jo
mov
sbb
jnp
add
mov
xor
mov
and
in
dec
stos
imul
mov
jnp
xchg
cmc
dec
add
arpl
pop
mov
jnp
sbb
jg
repz
andb
out
icebp
cmpsl
mov
mov
cmp
sbb
fstpt
int
adc
addl
or
gs
push
stos
sbb
lret
fists
cmpsb
nop
loope
push
lds
scas
outsl
xor
mov
test
ss
adc
mov
mov
ss
dec
mov
xchg
ror
imul
push
repz
jnp
rolb
jnp
lods
and
dec
inc
jnp
imul
add
push
stos
xchg
mov
jnp
sub
jnp
aas
mov
aad
fisubl
xchg
dec
mov
sub
sti
xor
jnp
out
push
test
pop
dec
xchg
test
shl
adc
lock
and
or
into
jnp
sbb
pop
mov
mov
jecxz
cmpsb
aad
rorl
out
pop
stos
and
lods
jnp
inc
mov
or
inc
loope
jge
push
or
aad
lods
int3
jnp
data16
frstor
mov
and
imul
icebp
test
or
lahf
sub
mov
push
add
jnp
pop
mov
fs
or
loop
dec
lret
sbb
push
adc
pop
imul
cwtl
or
mov
xchg
sbb
sub
jp
ret
push
icebp
jnp
iret
clc
or
xchg
xlat
sub
sbb
lahf
ja
data16
scas
rcll
int3
add
xor
call
xchg
lret
jb
stc
pop
fnstsw
cltd
mov
mov
adc
arpl
js
mov
push
js
mov
jnp
push
scas
lahf
in
repnz
test
mov
push
jne
mov
mov
pop
out
jnp
shll
and
lods
xchg
and
jbe
sti
movsb
lods
imul
xchg
mov
mov
outsb
mov
jecxz
dec
leave
pop
dec
pop
cmp
pushf
inc
das
mov
js
sub
xchg
pop
outsb
xchg
cmp
lods
pop
cld
dec
jne
sbb
jnp
stc
lea
adc
sub
hlt
roll
mov
push
mov
dec
or
pop
jae
cli
jmp
or
outsb
std
in
fcomip
call
inc
popa
mulb
sub
jnp
xchg
fsubl
xchg
or
imul
mov
mov
insb
mov
xchg
outsb
push
or
cmp
outsl
xchg
pop
jnp
push
sbb
sbb
push
std
test
cs
mov
jnp
cmp
mov
cmp
xchg
sbb
pop
outsl
cld
pop
mov
aam
mov
mov
mov
jnp
mov
loop
fists
mov
mov
ss
dec
es
jnp
cmc
jmp
in
and
dec
add
cmp
cmp
mov
or
mov
jae
inc
mov
xor
sbb
xor
sbb
or
ret
popf
in
adc
or
pushf
dec
jnp
or
inc
mov
sti
rorb
pop
leave
pop
daa
xchg
sub
lret
rcrb
test
mov
mov
xor
sub
test
arpl
xchg
xchg
jg
mov
or
lahf
dec
loopne
in
cmp
mov
fstl
sbbb
push
dec
inc
mov
push
jg
add
jmp
pop
loope
lret
adc
jnp
sub
dec
xor
popf
mov
movsb
dec
cmp
push
mov
ret
cmp
xchg
sarb
inc
insl
adc
mov
xchg
mov
shll
dec
movsl
pop
dec
arpl
ljmp
xchg
pop
adc
ret
ljmp
sar
xor
test
in
xor
out
mov
repnz
test
or
dec
jb
push
call
std
scas
loop
sub
mov
mov
pop
sub
lds
and
rcrl
mov
cmc
andb
lods
mov
mov
dec
je,pn
movsb
call
jnp
pop
sub
outsb
jmp
mov
sbb
fcomi
mov
pop
xor
jnp
shll
repz
mov
lret
or
cmpsb
je
push
mov
enter
sub
mov
pop
xchg
mov
jne
cmp
xlat
xchg
rol
inc
inc
jp
xchg
jne
mov
jnp
push
faddp
cld
into
xchg
inc
jnp
sbb
add
outsl
mov
scas
mov
xchg
lret
and
enter
xchg
sbb
test
mov
aaa
inc
sub
pusha
adc
clc
sbb
add
add
lds
shlb
loop
mov
fsubp
int3
js
pop
daa
jnp
out
popf
xchg
push
jle
stos
mov
dec
jnp
dec
and
mov
sbb
push
jnp
xor
jnp
insb
call
das
mov
test
dec
pop
sahf
mov
aad
mov
leave
ret
xchg
pushf
mov
fcmovu
lret
sub
aad
jns
jnp
xchg
dec
adc
imul
pushf
lret
mov
jnp
add
lcall
push
xor
mov
mov
out
sahf
pop
lods
jb
jnp
jno
fcompl
push
xchg
xchg
sti
cmc
sub
jnp
popa
aas
imul
sub
xchg
les
dec
push
jnp
inc
xchg
cmp
sbbb
clc
add
fwait
jnp
aad
out
jmp
adc
xchg
jp
adcl
push
imul
scas
jnp
adc
or
or
jnp
xor
fidivrs
outsl
dec
xchg
movsb
rorl
inc
mov
jnp
ja
adc
mov
xchg
sbb
xchg
fdivrl
pop
shlb
jnp
daa
dec
sub
mov
jnp
imul
mov
xchg
jnp
mov
sbb
pop
inc
rcl
jg
adc
jnp
lods
xchg
and
lock
jnp
mov
enter
pop
sti
inc
pop
sbb
jge
jnp
popf
imul
xchg
dec
push
jnp
movsb
outsb
mov
lahf
insb
cmp
or
xchg
imul
add
nop
push
fs
dec
jg
int
dec
ljmp
mov
pop
lret
je
sub
mov
cmp
cli
inc
jmp
pop
add
add
push
imul
sti
mov
repz
push
jnp
xor
imul
dec
scas
adc
mov
aas
jmp
mov
cmp
std
cmpsl
mov
cli
sti
loope
inc
mov
mov
fdivrs
pop
rclb
mov
pop
xor
lret
adc
jo
mov
sbb
iret
jae
sbb
jecxz
ja
and
rol
and
jb
xchg
clc
jno
xchg
sahf
jge
xchg
inc
popf
jg
add
loopne
arpl
push
dec
int3
ja
jnp
cmp
mov
cmpsl
sub
jnp
cld
cltd
adc
cltd
cmp
sbb
cltd
test
jno
mov
nopl
daa
push
stc
adc
mov
into
daa
mov
insl
jnp
sahf
pusha
fldcw
mov
jae
not
jnp
hlt
pop
lret
mov
test
mov
lock
cltd
add
lods
sti
xchg
mov
jge
xchg
inc
mov
cmpsl
add
ucomiss
cmp
idiv
and
call
lahf
or
shrb
inc
and
lock
sbb
mov
aam
xchg
rcl
hlt
fwait
test
jbe
mov
insl
fwait
mov
fwait
cmp
jnp
push
jno
mov
fwait
shrb
xor
repnz
jecxz
inc
add
cmp
lock
in
jle
jnp
jecxz
not
fsub
sbb
cmpl
mov
push
or
xchg
dec
mov
jnp
xchg
imul
sahf
arpl
jmp
sub
fsts
lret
out
cmp
cwtl
sbb
arpl
jge
adc
shl
dec
mov
gs
jmp
test
fwait
sub
jecxz
jnp
and
shl
idivl
mov
mov
cwtl
outsl
xchg
add
mov
jnp
mov
sarl
lahf
ret
xor
push
and
shlb
push
dec
imul
lods
jnp
sti
cmp
inc
das
jns
rol
xchg
and
sbb
stos
lret
pusha
fs
dec
mov
push
movsl
xchg
adc
arpl
les
sbb
test
fwait
push
xor
insl
mov
and
xor
cmp
pop
test
lock
js
xchg
lahf
loop
das
mov
fs
jo
rcll
jg
adc
cli
mov
ljmp
fs
notb
sub
inc
mov
jg
clc
push
add
or
mov
std
lret
dec
prefetcht2
daa
jle
pop
sahf
jnp
in
in
fcmove
mov
adc
aas
pop
push
jnp
add
ljmp
add
sbb
inc
mov
insb
xchg
aam
sub
test
push
jnp
dec
adc
inc
xchg
pop
cmpsb
jnp
dec
inc
or
mov
push
sub
jmp
bound
cmp
icebp
nop
jnp
repnz
mov
int
pop
cli
lahf
inc
aad
mov
inc
mov
pop
mov
xchg
or
jae
loopne
dec
lock
test
rclb
das
cmc
cmp
mov
sti
or
mov
sub
std
jnp
mov
nop
sub
movsb
pop
je
sub
js
or
cmp
repnz
mov
cwtl
mov
mov
mov
jnp
add
and
lds
push
lret
clc
push
dec
jnp
fisubl
jle
mov
or
sbb
pop
xchg
shlb
mov
xchg
sub
mulb
js
pop
jnp
xor
mov
jnp
jg
xor
out
mov
gs
dec
or
jns,pn
dec
shrl
mov
aaa
cwtl
imul
jnp
jae
adc
cltd
cmp
jnp
inc
push
dec
xchg
daa
jnp
push
and
inc
xor
addr16
mov
or
imul
adc
fcomp
and
xor
adc
xchg
inc
dec
xchg
test
xor
jb
jnp
jne
add
pushf
ss
jnp
movsb
mov
test
int3
test
mov
push
sti
sbb
outsl
scas
jnp
mov
xchg
mov
out
jnp
shll
add
mov
cmc
sarl
sbb
push
mov
popa
jg
shrl
insb
lds
push
jnp
or
mov
mov
int
xor
sti
mov
mov
rcrl
outsb
or
jo
popf
xchg
jnp
lods
push
es
daa
das
cmp
and
lods
scas
push
clc
mov
xor
xchg
cmp
cwtl
sub
sbb
mov
lcall
jbe
xor
adc
out
inc
mov
frstor
pop
xchg
jnp
cmpsl
xchg
scas
out
push
jmp
mov
jnp
mov
xlat
out
test
jp
xchg
cmp
mov
pop
push
mov
xor
enter
pop
mov
sub
js
inc
and
fwait
xchg
cmpsb
scas
sar
jne
push
jae
clc
sub
jnp
xchg
xor
dec
xor
iret
xchg
sbb
icebp
fisttps
fstpl
mov
xor
cwtl
cld
cmp
fmuls
lods
mov
cmp
push
adc
adc
xchg
in
xor
adc
xchg
data16
ljmp
dec
jnp
lahf
loopne
jo
jecxz
jnp
sbb
cmpsl
orl
rol
testb
dec
inc
stos
jb
jnp
or
int3
jnp
mov
andl
sub
jge
jge
xchg
sbb
push
pop
dec
mov
pop
mov
pop
ljmp
int3
negb
and
sbb
fdivrs
lret
mov
aad
lahf
cli
fdivrs
mov
cmp
jnp
and
pop
pop
loopne
out
scas
xor
mov
jnp
repnz
out
inc
xor
gs
mov
mov
mov
jnp
aad
sbb
clc
fists
lcall
adc
xchg
rolb
dec
out
ficompl
sti
insb
mov
pop
arpl
lahf
jnp
dec
imul
jnp
pop
ror
pop
xor
push
arpl
mov
xor
addr16
in
lock
jl
cmp
mov
stos
mov
xchg
scas
jnp
stos
icebp
dec
push
loop
int3
jnp
sub
cmpsb
in
jnp
lods
out
cli
daa
ljmp
inc
jl
jae
test
cmp
dec
sarb
sub
and
std
cmp
inc
inc
sbb
cwtd
cs
ret
sti
sub
daa
sarl
cltd
mov
and
or
cmp
cmp
xchg
mov
stos
mov
jl
jae
fcompl
movsl
mov
shrl
jnp
pop
xchg
outsb
arpl
and
addr16
sbb
ljmp
jno
and
outsb
pushf
rorb
inc
dec
test
lods
mov
or
xor
xlat
scas
int3
mov
out
sbb
in
shr
push
je
jnp
adc
jb
xchg
mov
pop
dec
sbb
andb
jnp
or
out
lock
mov
dec
orl
mov
mov
push
das
dec
inc
adc
fstpt
adcl
xlat
sbb
and
xchg
or
icebp
shll
mov
jle
sub
push
jnp
mov
ret
xchg
jnp
sub
shrb
lret
xor
pop
jle
push
pop
or
xor
js
sarb
and
sub
push
das
mov
or
jb
fs
mov
add
jle
jnp
mov
push
and
lods
ljmp
jp
and
xlat
or
add
push
cmc
pop
fsubrs
aad
movsl
jg
std
stos
clc
mov
mov
les
adc
lock
movsb
jno
pushf
sti
push
push
fisubl
icebp
push
sti
sub
loopne
out
jnp
or
test
sub
rcll
mov
and
mul
outsl
inc
jne
in
std
maskmovq
testl
jae
popf
mov
stc
adc
out
pop
and
cmpb
adc
xchg
mov
pop
sbb
mov
rcr
sbb
push
push
arpl
lcall
ljmp
outsb
jp
sbb
pop
or
jnp
in
in
mov
icebp
and
int3
cmp
test
dec
pop
data16
jbe
inc
mov
clc
cmp
jle
cmp
fbld
inc
jnp
inc
dec
bound
aad
xor
push
sbb
enter
out
cld
xor
cmp
aad
cs
dec
ds
and
mov
adc
lcall
jnp
aad
jo
push
jnp
or
push
fistpl
idivl
lds
pop
std
jmp
sbb
repnz
cwtl
jnp
sub
jge
inc
jl
adc
mov
testb
mov
jnp
xchg
out
adc
ja
jnp
jge
pop
push
sbb
icebp
jnp
cmp
add
sub
lret
fcoml
add
data16
add
test
repnz
jnp
jmp
mov
in
mov
pusha
and
cli
xchg
or
sub
popf
or
nop
arpl
cmp
cmpsb
push
fsubrs
clc
push
cmp
int3
or
leave
cmpsl
jnp
pop
pusha
ret
xchg
pop
orb
mov
cmp
push
fs
aaa
mov
test
sub
in
jmp
add
cmp
sub
xlat
pop
jo
jge
or
inc
cmp
clc
fdivrs
xchg
mov
adc
arpl
mov
imul
int3
sbb
inc
test
sbb
jnp
dec
fimuls
push
mov
mov
movsb
sbb
mov
aad
xchg
xchg
sbb
ljmp
pop
jnp
sbb
cld
popa
stos
int
adcb
mov
lods
out
and
imul
jp
fistpl
push
aad
cmp
dec
ret
mov
add
pop
bound
aad
shll
pop
movsb
cmp
xor
adc
mov
arpl
inc
add
lcall
sbb
aaa
pop
pushf
addb
iret
loope
jnp
stc
test
lahf
hlt
add
aad
jnp
out
dec
xchg
dec
jnp
mov
ja
int
aaa
jnp
arpl
fdivrl
jo
int3
movsb
and
psubd
sbb
repz
push
add
jnp
mov
sti
jbe
xor
adc
or
aam
dec
adc
xor
sbb
pop
jp
test
jnp
jae
cmpsl
popa
out
lcall
sub
scas
rorb
xor
aas
lcall
lock
mov
cmp
jp
cltd
sahf
push
adc
ljmp
pop
daa
pop
mov
push
push
mov
cli
sub
mov
jnp
cmp
pop
mov
mov
mov
adc
lds
jnp
imul
dec
test
mov
push
jns
push
icebp
test
jecxz
ret
notb
hlt
ror
sbb
xlat
into
mov
ficomps
or
or
adc
add
cmp
or
jnp
scas
fwait
pop
mov
or
int3
call
out
loope
mov
mov
xchg
mov
dec
fistpll
arpl
adc
jnp
inc
cmp
fiaddl
pop
xor
and
idivl
push
cmp
lods
mov
xlat
cmp
scas
push
shlb
dec
xor
jl
lret
dec
jne
xor
jbe
or
fsubrl
push
faddl
mov
icebp
jge
add
shrl
inc
scas
add
lods
cs
dec
aas
xchg
arpl
cmp
xchg
dec
jnp
push
je
fiaddl
das
shr
inc
jnp
jp
js
pop
mov
test
push
cmpsl
mov
mov
add
sub
lret
push
xlat
cmp
push
fnstsw
fwait
orb
sub
adc
sahf
add
stos
jno
push
mov
jecxz
aam
cli
lods
repnz
add
or
addl
ljmp
pop
mov
test
dec
inc
add
dec
stc
jl
mov
scas
lods
cs
xlat
xchg
sahf
cwtl
popf
jnp
and
stos
jnp
xchg
mov
cs
or
into
rcrl
jnp
das
push
add
mov
or
xchg
adc
jnp
sub
mov
sub
jg
in
xchg
push
cmp
push
enter
pop
mov
filds
sub
sub
aaa
jnp
stos
mov
hlt
pop
popa
test
xor
fistps
dec
ljmp
push
jne
fstpt
clc
test
inc
push
push
lea
imul
test
cmpsl
in
add
push
jnp
jge
mov
pop
dec
mov
leave
dec
lret
jnp
out
repnz
adc
sub
jecxz
jnp
ret
push
int
shrb
iret
add
adc
mov
push
inc
or
loop
cmp
or
cmp
xchg
lods
negb
push
in
das
stos
xchg
inc
es
pop
sti
aam
jge
jne
stc
mov
repz
leave
and
jnp
loop
fwait
push
call
dec
fidivs
ja
push
mov
and
xchg
mov
sub
ljmp
fsubs
or
lock
incb
xchg
iret
push
cmp
jae
pop
jnp
mov
pop
inc
cwtl
in
push
rolb
push
mov
addr16
xchg
mulb
pop
cmc
jnp
out
inc
bound
sub
or
pop
adcb
clc
cmp
sub
or
mov
adc
mov
mov
push
push
jg
inc
adc
ret
jns
insl
in
jnp
outsl
inc
dec
jge
and
push
inc
xchg
dec
ds
xchg
cmpsb
jnp
mul
xchg
mov
mov
sub
pop
add
pop
scas
gs
sub
popa
sti
jnp
xor
mov
jmp
imul
xlat
jnp
mov
inc
sbb
mov
addr16
nop
in
ret
leave
add
mov
mov
jecxz
xchg
and
or
fdivrs
aam
sbb
push
sub
lahf
ss
sti
fs
inc
inc
clc
or
sbb
cmp
sbb
je
rcrl
pop
aad
pop
arpl
test
lcall
sub
push
cs
addr16
lahf
bswap
jo
repz
lods
pop
xchg
jnp
cld
popf
adc
xlat
xchg
push
cmc
icebp
inc
or
std
adc
adc
mov
int
pop
cmp
daa
mov
xor
jl
jle
add
lods
sbb
ja
jae
mov
push
test
mov
stos
mov
pop
call
fcomps
pop
arpl
pop
cli
inc
sbb
outsb
push
add
mov
aad
pop
lea
aam
iret
popf
outsb
inc
add
rcr
xor
cmp
fcoms
inc
jbe
jle
ss
jl
out
mov
pop
stos
dec
adc
int3
jecxz
xchg
mov
mov
jmp
fstpt
test
fstpt
paddusw
mov
fsubs
pushf
cmp
lahf
push
subl
inc
movsl
ret
int
ja
iret
int
xchg
js
test
xchg
cmp
icebp
jnp
jno
push
js
int3
jge
mov
xchg
cld
test
hlt
mov
sbb
mov
imul
jnp
mov
fs
push
jl
clc
pop
lahf
push
xchg
jmp
push
jnp
daa
aaa
jae
icebp
cmpsl
adc
or
adc
xchg
jnp
cmpsb
mov
mov
test
mov
js
jnp
or
enter
insb
xchg
cmp
xchg
xor
movsl
jnp
sbb
pop
arpl
push
lcall
daa
mov
insb
sub
dec
gs
xchg
stc
jnp
jb
pop
iret
enter
jle
icebp
inc
push
push
jmp
xor
mov
sub
add
adc
cwtl
out
mov
push
int3
nop
adc
push
jbe
int
jno
cwtl
jnp
movsb
in
aam
out
jle
mov
jmp
or
lcall
sbb
cmp
orb
xor
sub
mov
jnp
mov
adc
out
pop
arpl
xor
in
add
out
cmp
lds
dec
jnp
repnz
or
outsb
or
push
jmp
jae
jle
repz
sbb
data16
jl
lock
xor
or
jnp
dec
jg
leave
push
sub
enter
pop
mov
addr16
jnp
lahf
xchg
imul
loop
cltd
xor
out
jnp
push
fadd
fidivl
mov
iret
icebp
or
push
xor
mov
test
inc
push
inc
sbb
mov
imul
fmul
inc
sbb
mov
dec
gs
shrb
jp
outsb
xchg
sub
or
js
lock
inc
rep
dec
lea
sbb
pop
bnd
sbb
movsb
pop
lahf
test
mov
fmull
imul
sbb
adc
push
sbb
outsl
inc
mov
ret
imul
xchg
leave
jbe
test
pop
jg
test
mov
mov
sti
stos
inc
mov
in
sbbb
lea
lret
jnp
ss
and
mov
cmpsl
inc
sti
sub
lods
xchg
jnp
dec
push
movsb
ds
test
sub
fsubl
shrb
gs
lahf
jnp
ret
hlt
inc
sbb
lods
out
sbb
fidivrl
outsb
mov
iret
out
scas
adc
in
bound
push
pop
arpl
orl
pop
or
fadd
test
and
cmp
xorl
push
jnp
xor
push
xchg
adc
jb
mov
lods
es
out
push
jg
adc
xchg
dec
lret
imul
int
add
push
mov
mov
lods
lret
or
cwtl
call
shll
inc
int3
mov
not
test
mov
jmp
jmp
out
cmc
xchg
inc
test
push
dec
dec
and
jne
scas
ficoml
test
xchg
ds
push
dec
jnp
pop
daa
jmp
mov
mov
nop
js
and
jnp
or
xchg
jno
mov
fst
ljmp
pop
jecxz
xchg
pop
test
movsb
xchg
pop
push
imul
movsl
jnp
test
sub
mov
in
ljmp
jo
shlb
dec
out
lcall
xor
or
cltd
mov
lods
shlb
dec
jnp
fistpl
xchg
shll
sarb
test
les
adc
xchg
in
fs
out
adc
fwait
adc
cwtl
jnp
enter
lcall
shl
les
lea
repz
mov
icebp
xchg
or
and
out
sbb
aam
in
xchg
addl
mov
repz
repnz
flds
sahf
scas
pop
imul
or
pusha
cwtl
test
jl
fs
xchg
jbe
sbb
jnp
insl
push
jge
push
jnp
sbb
aaa
mov
out
pop
enter
arpl
jnp
pop
pop
fcmovnu
sub
dec
jnp
fsubl
mov
rcrl
lea
adc
inc
sbb
scas
sub
push
sahf
addr16
stos
cmc
inc
mov
jnp
pop
inc
mov
pop
cld
fldenv
lahf
fidivrs
sti
movsl
and
aad
js
xor
insb
xchg
mov
test
mov
adc
pop
ret
lds
dec
cs
adc
xchg
push
pop
cwtl
jnp
pop
hlt
das
mov
jecxz
jnp
cs
mov
cmp
pop
stos
or
jnp
scas
fiadds
push
clc
jno
nop
adc
cmp
fisubrl
mov
repz
or
add
xchg
cmpl
jp
pop
mov
ret
xchg
cmpsl
pop
aas
movsb
mov
sbb
rcrb
in
jle
jne
iret
xchg
out
xchg
sbb
jnp
outsl
lahf
lods
cmp
or
jnp
xor
sub
test
pusha
adc
xor
inc
mov
cmpsl
rclb
jecxz
mov
gs
movsl
enter
add
inc
inc
dec
hlt
cmpsb
rcrb
push
push
loop
mov
pop
pop
push
xchg
sub
arpl
outsb
push
jnp
nop
sbb
cmp
mov
pop
lcall
mov
test
cmc
fidivrs
out
mov
mov
sarb
and
adc
mov
mov
lret
jnp
cmp
adc
ja
lcall
out
push
xchg
jnp
fcmovbe
sub
into
hlt
sbb
jnp
sbb
out
call
dec
sti
cmp
imul
movsb
sahf
fistpl
sbb
sub
jp
imul
inc
push
int3
xchg
inc
and
je
jae
jne
test
cmp
mov
lcall
les
mov
cmp
dec
call
xchg
popa
out
or
stos
shll
mov
test
movsl
xchg
test
scas
dec
test
add
jnp
jge
leave
xchg
lods
mov
scas
stos
test
orl
cmc
jl
xchg
mov
shll
leave
call
inc
int
cmpsl
and
test
fstpt
inc
sub
repz
popf
sub
adc
xchg
js
mov
pop
jg
mov
cmp
xchg
dec
std
push
jnp
lods
and
outsl
nop
scas
nop
movsl
push
inc
push
jp
sbb
jnp
pop
pusha
not
jns
cmp
push
or
shrl
sub
dec
test
outsb
imul
fst
sub
add
jnp
pop
repnz
subb
xchg
cmp
cltd
std
xor
push
cmp
adc
stos
stc
enter
jnp
lret
fnstenv
shlb
jnp
jge
xorb
sbb
add
push
ret
insl
test
sti
jo
imul
call
out
sbb
pop
push
mov
pop
pop
cmpsb
dec
call
adc
negl
sbb
add
lods
add
adc
xor
xor
ret
dec
sarb
cmpb
add
add
fsubr
in
xchg
imull
lock
repnz
pusha
mov
mov
movsb
adc
and
mov
mulb
lahf
push
in
and
xchg
mov
push
out
fwait
cld
idivl
and
mov
and
mov
fdivrl
sub
jne
hlt
push
cmpsb
sub
in
popa
sbb
jb
adc
sti
xor
test
loope
sub
jnp
sbbl
jnp
inc
push
mov
fisttpl
adc
scas
arpl
test
add
inc
mov
jno
lds
jnp
mov
enter
cmpsl
xchg
in
xor
xchg
enter
push
popa
pop
sti
xchg
pop
lret
iret
pop
lods
test
jb
pop
jecxz
xchg
imul
mov
jns
cmc
sbb
xor
sub
mov
lea
loopne
and
pop
inc
adc
and
sbbb
pop
sub
mov
jl
jnp
shl
mov
jnp
scas
cld
mov
jnp
push
add
xchg
shll
test
dec
mov
mov
cwtl
xchg
lret
divl
mov
mov
ret
fadd
xorl
lods
push
dec
rclb
ds
scas
xchg
jbe
jnp
dec
inc
mov
es
mov
lcall
inc
ds
inc
sub
out
stos
ja
out
test
adc
cmp
inc
outsl
divb
pusha
dec
mov
lea
add
mov
or
sub
loope
cmpsb
stc
mov
jnp
inc
cs
mov
ds
cli
dec
test
jno
fiaddl
outsl
cmpsl
addr16
pop
test
pop
jl
out
jnp
pusha
cli
andl
bndldx
sbb
bnd
mov
test
xor
add
sbb
sbb
mov
movsl
inc
jnp
jns
sbb
mov
jnp
push
lds
mov
xor
pop
jnp
add
scas
insl
repnz
int3
inc
push
stos
or
jnp
xlat
hlt
adc
lcall
stos
push
xchg
adc
jno
xor
push
add
cwtl
adc
or
bound
call
jle
push
push
in
cs
inc
push
daa
movsl
stos
or
xchg
xor
in
cmp
mov
std
hlt
pop
out
lea
pop
push
jnp
pop
adc
or
mov
lods
cmp
xchg
mov
lahf
lret
pop
fneni(8087
fidivrs
jae
sbb
push
and
out
hlt
dec
sub
je
cld
daa
stc
xor
dec
andb
jnp
scas
loop
inc
aaa
jo
jnp
ret
cwtl
repz
dec
shl
xchg
mov
cmp
cmpsb
int
aaa
push
lcall
xor
and
arpl
mov
sbb
jge
andl
hlt
movsl
pop
shr
cmp
jnp,pt
xor
repnz
sbb
imul
ret
or
pop
icebp
bound
daa
lcall
mov
jbe
xchg
cmp
fwait
jb
adc
pop
aaa
pop
push
scas
jl
xchg
les
jnp
roll
jnp
mov
rcrb
jnp
out
andb
sbb
cmc
mov
push
add
lods
rcl
mov
add
fdivrl
pop
int
or
enter
mov
sti
xor
and
pop
lods
jecxz
jge
mov
andl
pop
jne
mov
or
pop
push
cmp
mov
outsl
testb
jge
lea
sar
and
mov
pop
xchg
aam
xor
fidivl
gs
jno
or
jne
outsb
or
push
roll
out
arpl
dec
mov
sar
movsb
ror
loope
jecxz
fmull
adc
ficomps
pop
adc
push
mov
adc
jae
outsb
mov
inc
mov
xor
mov
sub
jb
mov
and
push
jae
cld
mov
mov
sti
aas
jg
fst
xchg
push
or
hlt
and
ja
nop
mov
jl
lds
pop
cmp
fdivrs
ss
xchg
aas
data16
xor
mov
push
lahf
jl
cs
sbb
je
aas
or
fcomps
cmc
adc
gs
lds
inc
jnp
mov
out
jnp
sbb
int3
adc
jmp
fs
jg
or
lods
xlat
lahf
jnp
lret
or
fwait
outsl
jnp
lods
iret
inc
cwtl
sub
mov
sbb
xor
loope
iret
lea
stos
pop
lcall
repnz
js
mov
jp
push
push
inc
jnp,pn
popa
xchg
adc
jnp
add
fsub
mov
pop
xchg
pop
incl
out
jnp
mov
or
out
loop
xchg
jecxz
int3
push
mov
push
mov
push
mov
mov
jp
mov
and
rorb
adc
lods
cmc
push
xchg
adc
fcmovnbe
das
jnp
cmp
push
shll
stc
mov
sbb
clc
not
push
sub
loopne
addl
lock
mov
dec
sbb
sub
xchg
xor
cmc
rorb
xchg
nop
mov
sti
jl
jnp
ss
insl
daa
adc
adc
verw
movsl
push
xchg
jge
fnstsw
mov
jnp
jno
mov
loopne
lods
jnp
fwait
dec
iret
sub
sbb
aas
pop
adc
jnp
dec
leave
orb
push
hlt
inc
jnp
xlat
sub
cmp
jae
xor
iret
mov
mull
ret
into
push
mov
fs
sbb
mov
sbb
test
or
dec
and
jnp,pt
push
mov
loopew
dec
jnp
mov
add
test
xchg
scas
lret
addr16
test
adc
js
hlt
gs
notb
sarl
pop
cli
out
xlat
roll
mov
and
pop
mov
adc
stos
dec
adc
mov
push
icebp
jnp
fisubrl
sbb
insl
or
jmp
in
xchg
push
cmp
pop
sbb
outsb
mov
hlt
mov
mov
jnp
mov
shrl
xorw
divb
mov
ljmp
pop
mov
adc
jnp
inc
lods
call
push
in
sti
mov
outsb
movsb
cmp
data16
mov
ja
inc
mov
xchg
mov
mov
aam
scas
adc
shl
add
lods
jle
pop
pop
nop
add
nop
mov
jno
cwtl
fcmovnbe
jo
sbb
mov
std
xchg
mov
xor
inc
jnp
in
xlat
and
or
test
mov
sti
push
or
pop
nop
insl
jnp
and
std
sti
sbb
jns
add
adc
dec
dec
loopne
inc
jno,pt
jnp
push
hlt
sar
push
das
bound
test
xchg
mov
cmp
aas
dec
call
mov
mov
dec
inc
incl
sub
adc
jnp
rcll
lahf
int3
dec
nop
sti
jno
insl
xor
mul
jnp
pop
or
sub
test
inc
or
sub
test
push
pop
mov
bound
xchg
dec
ds
lea
into
jnp
cmp
imul
addr16
incl
jnp
add
lahf
test
sbbb
fistpl
mov
and
jnp
cld
pop
int
mov
pop
dec
sub
cwtl
nop
out
push
pcmpgtw
data16
push
dec
pop
sub
sub
lea
or
push
fwait
pop
ja
lock
jnp
pop
js
pop
push
mov
adc
aad
xchg
es
cmp
jnp
test
test
xchg
cmp
shrb
xorb
jns
insl
pop
xor
dec
sbb
nop
lahf
outsb
jmp
aam
cs
fcmovne
sub
mov
gs
cld
jne
inc
leave
rorl
xor
cmp
or
add
inc
pop
sbb
test
aaa
mov
cld
or
fdivrs
xchg
fs
jl
jae
jl
fidivrs
lods
shl
movsl
leave
outsl
cmp
arpl
push
lret
sahf
outsb
icebp
scas
out
mov
inc
nop
arpl
insl
test
jnp
jecxz
or
inc
adc
es
fsts
sbb
add
jo
cmc
lahf
into
pop
shll
jns
adc
fnstenv
sahf
loopne
jecxz
xchg
call
sbb
jne
fcom
test
rcr
xlat
imul
movsl
xchg
mov
jo
xor
sti
xor
sub
push
and
or
pop
lods
and
adc
das
test
xor
sti
idivl
xchg
ja
int
and
pushf
xchg
adcb
pop
jnp
dec
and
dec
scas
jnp
mov
push
adc
nop
in
insb
orb
cmp
add
mov
dec
je
jecxz
inc
adc
push
jnp
mov
sub
push
or
in
gs
repz
adc
dec
imul
lcall
lret
mov
mov
mov
roll
mov
int
and
dec
add
adc
lea
out
jo
push
movsb
xor
fidivl
icebp
or
gs
fiadds
adc
outsb
into
cld
pop
mov
lret
xor
or
or
adc
push
jecxz
imul
stos
jae
aad
push
xchg
pop
clc
sbb
xchg
push
icebp
jae
xlat
jnp
pop
out
add
mov
cld
testb
mov
in
adc
xor
cmp
imul
jnp
xor
sub
mov
xor
popf
jg
iret
test
out
mov
mov
jo
cmp
test
ret
jnp
adc
subl
mov
bound
add
mov
es
repz
dec
mov
leave
add
sti
adc
aaa
sub
dec
idivl
sti
pop
mov
lahf
mov
and
test
push
inc
cmp
jnp
into
pop
cmp
add
in
call
inc
adc
outsl
lock
lahf
rcll
jmp
mov
or
inc
inc
cmp
es
int3
sub
test
movb
push
inc
jnp
jmp
lea
rclb
sub
addr16
shll
clc
rol
movsl
mov
in
cli
push
jnp,pt
cwtl
push
fwait
or
jg
jmp
adc
loope
imul
or
mov
sbb
fistps
xchg
les
mov
dec
dec
push
jnp
sbb
push
fisubs
test
ret
dec
add
add
sti
cld
push
push
cwtl
cmp
aad
sti
and
emms
std
jnp
aam
call
rcrb
adc
jmp
or
inc
jo
pushf
dec
jl
clc
push
test
or
aam
adc
mov
sub
dec
shll
mov
xchg
mov
mov
jmp
inc
mov
aam
movsb
pop
or
cmp
rcrl
mov
enter
lret
fadds
movsl
fs
add
fistps
lcall
cmp
repnz
sbb
xor
mov
push
dec
cld
push
mov
xchg
sbb
lds
out
mov
xchg
mov
mov
xchg
pop
sbb
inc
sbb
and
dec
xchg
addb
mov
add
in
mov
je
dec
jge
imul
test
cld
lods
std
cmc
stc
ficomps
jnp
dec
dec
cmp
cmp
rolb
jnp
pop
es
mov
test
sbb
stos
pusha
in
leave
jnp
pop
lret
insl
stos
fidivrs
jle
in
push
imul
pushf
jnp
push
mov
adc
cltd
shll
lea
shl
push
jnp
incl
jp
xchg
mov
fwait
xor
mov
lock
icebp
cmp
subb
mov
rclb
mov
xchg
inc
add
adc
shll
jne
jnp
ficompl
jnp
std
rol
sbb
inc
lea
jns
sub
xchg
sub
jl
int3
mov
add
shlb
cli
jnp
xor
and
mov
adc
rorb
cltd
adc
mov
test
jns
addb
popa
pop
xor
test
jp
test
repnz
add
jb
sub
mulb
jg
cs
lret
mov
jnp
sub
jle
mov
pusha
jecxz
xchg
mov
dec
xlat
daa
or
cltd
jnp
mov
jno
cld
fistl
mov
pusha
add
jae
pop
pop
aam
push
push
fldcw
outsb
in
jbe
dec
xlat
outsl
sub
fwait
fwait
xchg
imul
cmpl
mov
and
sub
mov
and
add
jl
push
xchg
arpl
and
sbb
push
xchg
inc
jnp
sti
popl
jnp
addr16
clc
push
cli
push
in
popa
or
insl
xor
xlat
dec
adcb
mov
imul
inc
pop
mov
jnp
jne
or
loope
mov
xchg
xchg
sti
ret
movl
adc
lods
insl
dec
xchg
add
mov
out
and
test
rcll
xchg
xchg
fdivrl
test
shrl
mov
ret
lahf
loope
daa
or
stos
int
cltd
fcomi
jb
mov
jmp
in
or
xchg
pusha
pop
cmp
mov
movsb
subl
push
jnp
test
adc
jo
movb
int
hlt
stc
popf
in
xchg
push
mov
movsb
xor
sarl
mov
push
jecxz
push
je
or
dec
pop
mov
leave
shrl
jbe
pop
mov
cmp
fwait
xchg
sbb
cli
inc
mov
testb
jmp
xor
repnz
sbb
add
outsb
pop
fcomps
popf
lahf
jge
repz
ret
mov
add
jnp
fisttps
lahf
aaa
xor
jnp
mov
cmpsl
insl
out
aas
mov
or
mov
orb
mov
iret
or
aad
jno
jmp
cs
jnp
movups
mov
dec
mov
xor
xchg
cmp
aam
es
push
sysenter
jnp
xlat
js
scas
cld
outsb
iret
jnp
orl
jnp
repnz
mov
inc
jnp
mov
jge
rcrl
fldl2e
dec
jnp
sbb
mov
pop
sbb
inc
fwait
fs
cltd
sti
and
out
jnp
mov
and
sti
stc
stc
lcall
xor
ret
jl
fistl
sbb
mov
icebp
push
mov
in
arpl
fldcw
dec
inc
loop
mov
insl
pop
dec
jns
mov
push
jmp
pop
fcomi
ret
imul
js
pop
aas
cmp
popa
push
das
cltd
jnp
mov
mov
inc
outsb
jnp
jns
sbb
mov
outsl
mov
pop
lret
pop
mov
jl
mov
pusha
test
or
ret
scas
xor
cmp
out
sub
sti
xor
sti
jp
xchg
mov
sti
nop
mov
and
lea
loopne
test
sub
rorl
jns
sbb
jnp
jecxz
or
loope
inc
jnp
and
adc
xchg
sub
pop
arpl
aam
inc
orb
add
mov
scas
push
test
add
mov
jnp
mov
and
test
lcall
mov
jge
mov
mov
data16
xor
add
stos
push
jnp
es
ljmp
inc
jb
mov
lea
adc
xchg
pop
test
cmp
outsb
jnp
push
in
arpl
xchg
fstpl
fwait
dec
vpmaddwd
ss
mov
stos
out
lahf
xchg
xchg
push
sarb
aam
jnp
mov
inc
popf
test
pop
mov
mov
jnp
mov
sub
jo
mov
test
loope
rcrb
dec
sbb
jb
push
js
jnp
std
rol
sub
cld
jnp
ret
add
dec
jp
mov
js
or
mov
clc
imul
mov
xchg
cmp
lahf
lret
cmp
adc
mov
xor
pop
int
sti
cld
fsub
out
and
jb
push
pop
pusha
push
fdivl
dec
cltd
setl
inc
push
fidivrl
jnp
sub
pop
fs
outsl
cmp
xchg
pop
inc
hlt
adc
mov
mov
pop
xchg
sbb
loop
lret
cld
xor
imul
and
cs
jb
cmpsb
add
aas
xor
fwait
mov
bound
cmp
shll
outsb
jnp
in
pop
xchg
add
es
cwtl
mov
cmc
sbb
gs
icebp
data16
repnz
in
rorl
add
xor
jge
and
jnp
fidivrl
cmp
or
mov
scas
push
xchg
inc
push
std
jnp
mov
dec
in
popf
insl
ffreep
pop
decb
pop
adc
stc
or
push
sub
daa
jb
out
inc
pusha
push
mov
fstpt
fwait
arpl
cltd
repz
jne
imul
clc
idivb
pop
pushf
cmpsb
sub
jle
imul
ret
cld
adc
popf
btc
ret
out
jnp
adc
jnp
pop
mov
lea
jmp
mov
pushf
and
sub
inc
lods
sti
add
stc
xchg
pop
adc
jne
pop
jge
add
sbb
es
jle
movsbl
mov
inc
xchg
jbe
xchg
loop
cmp
pop
mov
lret
in
push
jnp
mov
loop
pushf
dec
cmp
fmuls
or
outsl
xchg
das
je
addr16
jnp
test
sub
scas
sti
mov
jge
xchg
jnp
pop
iret
cld
jbe
ds
cli
sub
aad
mov
sti
adc
jmp
clc
mov
and
inc
add
int
mov
test
mov
sahf
sbb
mov
jge
test
js
lea
inc
or
cmpsl
addl
sahf
lods
xor
xor
pop
data16
jnp
jae
roll
fdivrp
cmp
mov
stc
jns
or
inc
mov
scas
adcl
loop
push
lods
pop
ficompl
xchg
jle
cs
fstpt
and
mov
ja
jecxz
mov
or
out
fwait
sti
xchg
adc
push
push
xor
ss
jne
adc
mov
xlat
add
dec
lret
in
aaa
ljmp
mov
fs
movsl
cmp
nop
add
jle
fs
pop
push
jnp
sbb
ds
jno
jnp
or
push
insb
mov
sub
pop
aam
xlat
jo
nop
hlt
or
push
jmp
mul
sbb
lea
push
aas
push
or
testl
mov
lret
dec
or
xchg
out
mov
xchg
inc
sbb
jno
jnp
test
push
mov
mov
xor
stc
cmp
sub
ljmp
cli
sub
dec
cmp
popl
aas
inc
sti
push
scas
popa
aad
inc
xor
imul
lahf
pop
orb
ret
inc
inc
lea
mov
sbb
add
push
fbstp
pop
lea
sti
mov
mov
mov
adc
pushf
fs
xchg
sbbb
adc
sub
jge
enter
adc
ljmp
lea
in
loopne
mov
aad
fisttpll
mov
imul
mov
dec
je
mov
mov
xchg
lret
push
roll
inc
outsl
mov
fisttpl
outsb
fdivs
nop
js
dec
dec
xlat
jnp
xchg
inc
jnp
fstl
cltd
ds
fcompl
xchg
jge
mov
into
adc
rep
jbe
push
mov
and
cmp
fisubl
add
mov
fdivrs
and
mov
sbb
cli
pop
jnp
and
outsl
cmpl
in
xchg
loop
addr16
cmp
pusha
stos
add
adc
jnp
and
jnp
les
clc
test
xchg
ficompl
xchg
dec
jnp
gs
es
jnp
fnstenv
hlt
mov
add
jnp
insb
sbbb
stos
lret
dec
push
rcl
push
neg
jnp
xor
repz
xor
mov
scas
jmp
and
fld
or
mov
aad
fdivl
jnp
adc
ds
int
jnp
lahf
popf
mov
insb
aam
mov
pop
xchg
mov
pop
psllq
jnp
ss
stos
mov
mov
out
mov
sbb
or
adc
inc
jnp
scas
jg
sbb
pushf
test
fldl
mov
or
sub
xchg
iret
gs
cmp
shll
add
es
jnp
push
push
sbb
or
sarl
xchg
je
mov
pop
loopne
xchg
jno
sbb
cmp
dec
in
test
xor
mov
lret
icebp
and
sbb
sahf
js
cmp
stos
sub
jns
sti
jbe,pt
out
add
mov
pop
outsb
push
xor
imul
aam
dec
pop
xor
rorb
sbb
in
jg
cmp
shrl
scas
add
jecxz
xor
daa
mov
mul
inc
ficomps
pop
cmpsb
mov
neg
pop
insl
sbb
mov
sbb
into
mov
dec
in
rcll
xchg
arpl
lret
cmp
sbb
test
in
sbb
sbb
in
mov
dec
dec
xor
adc
jno
lea
mov
jmp
into
pop
mov
dec
test
rep
mov
mov
sbb
xor
jnp
shrl
jp
jno
pop
cld
lret
mov
sub
dec
movsb
aad
cmp
std
test
mov
mov
arpl
int
xchg
sub
jnp
mov
lods
mov
mov
or
mov
lea
leave
daa
pop
jnp
adc
adc
cmp
imul
cmp
push
out
push
and
jnp
pop
mov
lods
cwtl
push
jne
jnp
gs
cmp
mov
xchg
inc
xchg
enter
pop
jnp
in
jb
hlt
and
mov
scas
and
movsb
dec
mov
cli
or
sbb
adcb
inc
mov
xchg
jnp
outsb
scas
or
pushf
add
jo
or
jnp
add
cmp
out
sub
negb
cmp
mov
and
addr16
jl
jecxz
cmp
aad
mov
leave
xchg
or
pop
xor
bound
stos
adc
xchg
sarb
fwait
ja
jnp
jne
inc
add
inc
sub
adc
popa
out
les
shr
pusha
sub
sti
or
sbb
pop
bound
mov
ret
jnp
hlt
pop
jmp
jnp
push
fnstsw
jnp
leave
fwait
mov
jb
cmpl
push
test
popa
xor
inc
push
jg
jno
xchg
push
ficompl
popf
lea
push
icebp
fistps
nop
out
cmp
jg
xchg
xchg
into
and
and
out
mov
adc
arpl
arpl
add
mov
shlb
and
das
dec
popa
jnp
pop
fnstcw
cwtl
mov
out
lock
cltd
scas
add
xchg
nop
stos
jnp
sub
lcall
cmp
imul
sub
fiadds
dec
adc
clc
jbe
jnp
mov
cmp
call
cmp
jmp
mov
mov
mov
and
push
mov
ljmp
push
imul
jle
sub
xchg
out
sub
fildl
add
inc
cli
rorl
js
mov
inc
outsl
fwait
mov
add
dec
adc
mov
inc
xor
ret
dec
add
cmp
outsb
les
sar
and
adc
mov
jb
call
clc
outsl
fistl
lahf
out
scas
inc
xchg
scas
and
mov
push
push
sub
pop
push
inc
insb
push
push
jmp
out
es
mov
mov
lcall
xor
sub
loopew
mov
dec
icebp
outsb
fsubrl
sahf
filds
xchg
jnp
sbb
inc
fsubrs
mov
pop
push
jo
xchg
pop
or
mov
addr16
jl
stos
sahf
test
sbb
imul
data16
or
mov
imul
jnp
jbe
dec
aam
dec
in
shr
int
jge
fbld
jp
jae
push
xchg
dec
ret
outsb
imul
xchg
lock
les
and
jbe
jnp
and
mov
jnp
jge
fisubs
addr16
cld
sub
cs
ja
out
cmp
std
pusha
jp
rcrl
es
adc
mov
shlb
lret
push
cwtl
dec
sbb
je
mov
es
mov
test
cmp
mov
dec
and
jge
sub
in
loop
enter
and
xlat
rcpps
cmpsl
lret
lcall
les
jnp
sbb
icebp
xlat
xor
dec
add
int3
data16
jp
dec
imul
insb
and
mov
xor
dec
rcrb
jb
pop
rolb
gs
fnsave
aam
mov
mov
and
xchg
sbbl
icebp
cmp
lret
jecxz
aas
cs
fisubrs
mov
test
iret
mov
repz
lods
fistps
lods
outsb
mov
pushf
adc
jbe
adc
add
push
add
fs
test
add
xor
mov
outsb
adc
sti
xchg
jne
leave
pop
jno
xorb
inc
jbe
movsl
loope
xchg
fstpt
mov
popa
mov
cmp
jae
jnp
mov
lods
cmp
movsl
sbb
test
js
sub
jns
in
add
push
pusha
dec
inc
jnp
addl
insl
ror
out
dec
or
jl
dec
out
clc
jnp
ror
sbb
sbb
mov
mov
mov
in
aas
dec
addr16
push
rcrl
jnp
shrb
scas
loope
inc
xor
push
pop
push
js
jnp
ss
mov
mov
lods
mov
mov
addw
xor
or
jl
mov
pop
out
lds
lock
fdivp
fucomi
dec
mov
movsl
gs
stos
push
cmpsb
inc
loop
sti
pop
insb
push
out
cld
add
js
fmull
insl
jae
rclb
jnp
jp
adc
into
mov
or
or
pusha
aaa
mov
fnsave
xchg
jnp
in
xor
jne
jnp
sub
lret
ret
mov
dec
mov
fwait
mov
mov
mov
mov
push
mov
jnp
out
int
jmp
mov
cmp
mov
lcall
ljmp
icebp
sti
rclb
fldl
push
loop
ja
mov
imul
lock
jnp
lahf
dec
mov
int3
push
in
jno
jl
dec
xor
xchg
and
stos
stos
cmp
mov
push
jnp
cs
cmc
mov
mov
mov
ljmp
lcall
ret
jg
jnp
es
iret
sub
xor
xor
fs
dec
dec
pop
ss
dec
in
aaa
test
cmp
pop
and
mov
es
call
pushl
sbb
popa
push
xchg
jg
push
cmp
adc
xor
int
mov
lahf
or
mov
push
dec
jbe
data16
xchg
xchg
outsb
mov
fisttpll
lods
arpl
nop
xor
out
out
xor
sarb
mov
shlb
jle,pt
pop
arpl
outsb
push
add
inc
arpl
pop
out
in
pop
stos
jnp
lret
out
cmp
mov
filds
inc
fwait
lods
nop
inc
cmpsl
mov
and
cmpsb
in
std
fsts
daa
push
cli
enter
or
mov
loope
push
cmpsl
push
and
mov
dec
jo
scas
bsf
cmpsl
fwait
sti
mov
mov
lds
in
in
jl
cmpsl
aaa
sub
hlt
sbb
sub
ljmp
cltd
clc
xchg
roll
cmpsl
jo
cmp
xorb
pop
dec
jb
mov
jnp
pop
adc
add
gs
jg
inc
add
jno
xlat
add
jnp
mov
inc
and
cld
jne
gs
test
fildl
cld
decl
mov
imul
lahf
mov
data16
into
xchg
xor
bound
mov
jmp
test
jnp
pop
push
es
inc
jnp
movsl
call
int3
jnp
in
out
mov
jbe
mov
sbb
push
adc
shlb
sbb
sar
in
add
jnp
jae
pop
out
sbb
imul
lds
add
mov
int3
nop
cmp
sbb
mov
dec
xchg
fndisi(8087
call
sbb
xor
add
insb
xor
outsl
mov
test
mov
jno
jg
cld
insl
mov
mov
mov
push
jnp
mov
data16
cltd
sub
cmp
sbb
lret
orb
lahf
int
inc
mov
sbb
fistpl
in
fdivrs
repz
jnp
adc
pop
xor
out
ret
jnp
mulb
lock
aaa
mov
add
xchg
push
inc
insb
sarl
and
aam
out
mov
ficomps
add
frstor
jnp
out
addb
repz
gs
das
cmc
jo
outsl
dec
mov
or
repz
adc
jnp
das
test
jmp
sub
or
ret
mov
shlb
sub
test
mov
jmp
sbb
or
add
and
mov
and
xchg
mov
jp
inc
push
mov
sbb
insl
pop
test
adc
lods
lret
clc
mov
dec
xor
adc
xor
jnp
push
out
fisttps
fnstcw
mov
pushf
icebp
cmp
in
aad
mov
clc
lea
movsbl
cs
ret
or
pop
push
jnp
mov
lahf
das
push
repz
jge
xchg
aam
fstpt
mov
gs
xor
and
or
std
pop
jnp
cltd
into
push
mov
xor
mov
adc
mov
lods
ljmp
pop
jnp
cmp
loope
fistl
and
icebp
cwtl
in
jnp
jns
jno
out
sbb
dec
push
je
xor
popa
cs
roll
jnp
mov
dec
test
or
jo,pn
push
jnp
jne
xor
lahf
imul
adc
jae
jnp
pop
push
mov
mov
push
idiv
jno
into
std
jg
repz
or
mov
ret
mov
push
cmp
sbb
inc
pop
out
sbb
pop
hlt
daa
and
adc
lds
fimuls
test
dec
and
lahf
leave
insl
jge
out
addr16
cmpsl
lock
jb
pop
push
outsl
adc
scas
pusha
push
mov
xor
add
lods
cltd
adc
jbe
cmpsb
lock
mov
dec
nop
xor
jecxz
ficompl
outsb
mov
mov
test
adc
push
mov
adc
inc
rcrl
adc
nop
cwtl
lahf
jno
dec
out
loopne
aas
aaa
int
inc
pop
jecxz
xchg
cli
es
xor
outsb
or
out
or
pop
pop
mov
mov
je
mov
push
xor
fs
pop
dec
push
popf
iret
mov
mov
and
in
jns
inc
int3
test
fildll
stos
mov
rol
decl
mov
lret
push
push
adc
outsb
nop
gs
mov
sub
mov
js
mov
addr16
cmp
cltd
mov
fdivrl
jnp
adc
in
jecxz
daa
add
idivb
add
mov
add
dec
jnp
lahf
sti
sub
xor
add
sbb
imul
pop
mov
ss
sub
loopne
nop
pop
xchg
in
clc
jmp
call
mov
xchg
les
push
test
ret
inc
lahf
and
mov
and
jecxz
pop
es
std
jnp
inc
pop
or
lods
adc
int3
stc
ficompl
sub
xchg
mov
cmpsb
loop
iret
scas
adc
lock
leave
xor
rcrl
cmp
mov
je
mov
bound
in
std
jle
xchg
add
cli
xchg
cmp
pushf
mov
cltd
add
sbb
pop
dec
das
mov
push
xchg
and
jmp
jnp
pop
mov
sub
bnd
pop
lds
mov
clc
pusha
negb
jnp
xchg
xlat
add
mov
and
ja
std
pop
mov
jnp
cmpb
sbb
mov
aaa
mov
sub
add
jnp
mov
jne
sbbb
mov
sbb
mov
outsl
stc
jnp
adcl
add
and
mov
repz
jnp
jo
dec
arpl
dec
pop
sub
push
cmc
jo
sub
or
arpl
jnp
fidivs
stos
movsl
gs
add
imul
xchg
sbb
lahf
jns
xchg
add
bound
sbb
jle
imul
mov
cmp
jnp
and
shll
mov
inc
xor
adcb
ret
jnp
adc
jnp
mov
out
jnp
mov
and
lahf
cmovp
inc
decb
inc
fwait
sbb
outsb
xorl
sub
andb
test
mov
xchg
jb
lds
cwtl
pusha
push
cli
jo
pop
aam
jne
sbb
inc
sti
call
xor
aas
nop
mov
jmp
mov
js
xor
push
jb
mov
outsl
or
jno
add
pop
data16
stc
xchg
and
leave
hlt
pop
pushf
mov
mov
sti
xchg
and
add
orl
push
inc
sti
xchg
dec
cmp
fsubs
pop
sbb
push
test
pop
stos
jb
jnp
mov
xor
cmp
xchg
aam
push
xchg
pop
rcr
sbb
cld
stos
div
in
out
jmp
lods
nop
lock
add
mov
push
hlt
pusha
or
pop
dec
jnp
inc
sbb
jecxz
std
xor
sar
mov
aaa
mov
xor
mov
push
in
inc
loop
jnp
iret
pop
or
mov
outsl
mov
xchg
sti
inc
sub
mov
mov
ja
inc
pop
sub
jnp
lret
and
mov
out
jnp
sbb
pop
arpl
jnp
hlt
lds
mov
jecxz
cmp
lock
adc
cmpsl
ja
or
push
push
or
jnp
in
out
outsl
xchg
mov
pop
std
insb
xchg
pop
adc
repz
pop
arpl
adc
fisttpll
movsb
mov
jnp
jmp
sbb
jnp
roll
sub
fwait
xchg
inc
mov
dec
xchg
mov
mov
jl
loopne
xor
lret
data16
shll
cmpsl
cli
xacquire
mov
lods
mov
push
aas
out
clc
dec
mov
pop
test
sbbb
aaa
and
scas
pushf
inc
mov
xchg
cli
movsb
jnp
sub
jnp
inc
sub
mov
idiv
mov
test
loope
dec
cltd
dec
pop
jae
xchg
lcall
fbld
xchg
mov
popa
sub
push
push
mov
mov
sbb
adc
add
or
jmp
arpl
inc
pushf
idivl
inc
or
loopne
imul
xchg
cmpb
test
jo
sbb
pop
sbb
sub
jnp
cs
mov
jnp
popf
or
cmpsb
pop
sbb
rcl
das
mov
jnp
cwtl
test
testb
xchg
xor
fstl
xor
fisubrs
mov
jnp
jns
test
push
lret
sub
add
and
loopne
xchg
out
jnp
jae
mov
xchg
push
loope
cli
repnz
push
jle
jnp
leave
add
dec
xorl
js
inc
rcrb
or
jnp
sub
dec
mov
cmpsl
arpl
lret
inc
and
jnp
in
bound
inc
sahf
insb
sub
iret
int3
dec
repz
lret
mov
fwait
popa
pop
fcomps
outsl
add
repz
push
push
sub
push
jmp
sbb
aaa
or
fnsave
outsl
mov
out
lea
mov
rorl
ret
iret
add
sub
addr16
cwtl
sbb
add
xchg
imul
cltd
ja
jnp
inc
lods
mov
mov
or
dec
sbb
inc
sbb
out
lea
lcall
jnp
mov
arpl
in
fucomi
inc
ret
or
push
int
xorl
xchg
mov
cmp
int
pop
outsb
jle
adc
loop
addr16
adc
jns
dec
jle
pop
stc
outsb
in
jnp
pop
push
call
popf
xor
mov
fcompl
jle
pop
lock
xor
add
inc
dec
xor
mov
adc
popf
mov
and
dec
sub
pusha
lods
xor
sub
in
jnp
imul
insb
xchg
cmp
imul
sub
mov
aad
das
pusha
bound
mov
dec
mov
mov
adc
test
fnstsw
inc
pushf
int
push
push
push
and
sub
xchg
sub
inc
mov
cmc
lret
je
jnp
aam
jecxz
or
jnp
push
pop
add
xchg
arpl
jo
inc
jl
jmp
xchg
test
push
das
fcmovbe
xor
xchg
lahf
xchg
pop
push
and
int3
stos
sub
scas
faddl
fistl
adcl
pop
cmp
sbb
jmp
hlt
add
in
das
pop
or
mov
leave
outsb
ficoml
xchg
jecxz
jle
cmp
fsubrl
in
popa
jnp
mov
inc
jnp
xchg
insl
dec
jmp
imul
lea
lds
adc
jns
jle
or
xchg
cmp
aad
push
jg
adc
mov
or
clc
ret
test
add
jnp
sbb
in
add
std
imul
adc
mov
les
jnp
rol
clc
dec
sti
repz
mov
and
push
enter
daa
fwait
mov
loopne
iret
jp
cmpsb
ret
mov
popa
lds
ret
test
scas
cwtl
push
mov
mov
or
fidivs
jnp
rcrb
mov
dec
and
cmp
sbb
stos
dec
inc
mov
mov
or
sub
scas
cmpsb
jnp
cmpb
dec
jecxz
jle
lret
sub
jnp
mov
jnp
mov
jmp
aam
sub
mov
shrb
mov
fwait
outsb
xchg
jnp
cwtl
mov
dec
lea
adc
insb
sbb
add
icebp
push
inc
sbb
and
add
lahf
idivb
out
inc
or
sahf
fwait
pop
pop
rcrb
cmpsb
pop
pop
stc
add
pop
ret
jne
jecxz
jno
sbb
pop
outsl
push
jae
jnp
std
addr16
mov
mov
mov
adcb
ss
mov
pop
jno
dec
adc
mov
pop
xlat
xor
das
inc
aad
push
mov
dec
fwait
add
fmull
inc
jo
decl
sbb
inc
jae
lea
scas
adc
xchg
xor
pop
mov
lret
xchg
test
add
or
lock
sub
jnp
sti
push
testb
push
jmp
sbb
mov
xchg
dec
jmp
xor
xchg
pushf
test
outsl
lea
jnp
push
push
sub
imul
lcall
aam
xchg
out
jmp
push
jnp
imul
push
cmp
pushf
scas
pop
mov
lcall
mov
pop
cltd
gs
lods
jnp
sbb
outsb
xchg
scas
ds
imul
xchg
pause
jecxz
push
popf
xchg
mov
pushf
mov
imul
sar
push
inc
jnp
or
les
test
cmp
xchg
jne
adc
shr
scas
xchg
popa
call
dec
das
add
stos
and
push
outsl
in
iret
xchg
sub
out
pop
jae
jmp
push
jnp
jmp
mov
jnp
scas
push
xchg
jle
sub
enter
add
addb
xor
mov
jnp
test
ljmp
jnp
dec
jge
xchg
dec
insl
lcall
adc
jnp
pop
loopne
sub
xor
cwtl
ja
test
dec
out
mov
test
lcall
push
push
cwtl
subl
mov
push
jp
mov
or
bound
jnp
scas
rorl
add
mov
lahf
xor
iret
cmp
jno
lods
fdivrs
mov
xor
mov
push
int
inc
mov
shlb
mov
sarl
shrb
fldl
aad
dec
loopne
das
loope
es
jnp
mov
stc
mov
mov
cs
fcom
jbe
cwtl
daa
repz
arpl
data16
push
sti
cmpsl
xlat
sub
insb
cli
loope
inc
int3
push
sub
add
jg
scas
setle
pop
je
ds
add
xchg
pop
outsb
jg
mov
xor
and
jnp
inc
cli
pop
and
cltd
sbb
sti
push
mov
pop
cmp
xor
cmp
jne
cmp
xchg
sar
lea
jecxz
push
sarb
jnp
push
sub
mov
mov
test
sbb
mov
jecxz
jnp
jge
aaa
lea
aas
push
iret
jle
stos
sahf
jnp
lahf
inc
mov
cli
cmpsb
jnp
loopne
fwait
outsw
imul
xor
int3
les
mov
push
insb
insw
mov
mov
or
and
pop
inc
inc
test
arpl
repnz
bound
jg
cwtl
xchg
xchg
outsb
push
out
jge
fsubrp
xor
xchg
das
ss
sbb
sti
fwait
adcl
int3
cmp
xchg
cld
push
data16
jl
xchg
fldenv
mov
jmp
jb
mov
movsb
hlt
sub
adc
jle
imul
jp
jnp
xchg
pop
adc
adc
mov
mov
test
adc
jae
add
add
mov
scas
inc
xor
cmp
mov
mov
das
aad
mov
stc
mov
add
mov
lret
outsb
mov
jnp
cmp
mov
xor
fcom
mov
movsb
or
jnp
adc
push
outsl
sbb
jnp
cmp
imulb
daa
pusha
jae
xchg
jnp
pop
into
div
movsl
xchg
mov
lahf
mov
aad
dec
roll
and
inc
mov
jnp
arpl
xchg
cmc
mov
mov
bound
adc
and
inc
dec
sets
les
cmp
loopne
or
cwtl
movsl
mov
test
xorb
lahf
les
inc
cmp
mov
jns
fdivrs
xchg
test
mov
fwait
sub
dec
fildll
aam
jle
cli
adc
jp
mov
nop
mov
or
cs
adc
mov
jne
jnp
lcall
dec
add
xor
pslld
ret
stc
outsl
xchg
pop
mov
jnp
pushf
test
or
test
ss
dec
mov
int
mov
xor
jnp
loope
cmc
adc
in
push
mov
je
xor
outsl
mov
ja
mov
ss
mov
jae
je
dec
pop
and
cmpsb
pop
inc
xchg
iret
testb
mov
pop
sbb
mov
popa
enter
daa
ss
mov
jae
arpl
ret
test
pop
add
out
cltd
dec
push
addr16
mov
push
xchg
inc
or
jecxz
mov
unpcklps
stos
bound
mov
mov
fsubrs
mov
and
cmp
and
mov
shlb
pop
imul
test
xchg
push
jp
mov
pop
jnp
les
cmpl
push
lea
aaa
cltd
jecxz
hlt
dec
test
sti
arpl
addr16
mov
pop
out
or
lret
mov
mov
ret
je
pop
xchg
aad
sub
add
mov
cmp
lds
fxch
push
lret
xchg
mov
int
and
inc
in
mov
lea
inc
into
rorb
adc
es
push
pop
or
xor
cmp
test
push
or
add
add
rolb
fwait
cld
imulb
js
mov
addb
xlat
scas
dec
fildl
pop
pop
pop
sti
mov
lcall
xlat
inc
sbb
in
fldenv
stc
leave
lret
jo
xor
push
mov
mov
adc
popa
sar
jnp
pop
pop
pop
xor
in
mov
daa
or
je
jnp
and
sahf
xchg
and
nop
fstl
nop
pop
jnp
outsb
inc
cwtl
xor
inc
jg
cmp
sbb
pop
call
dec
bnd
inc
mov
loope
subb
cmc
pop
dec
idivl
jecxz
cmpsl
push
bound
jbe
add
jnp
mov
sbb
lods
or
mov
xor
scas
and
outsb
stos
pop
inc
hlt
mov
sti
jg
push
sti
add
jbe
mov
cltd
and
movsl
xor
xchg
xorl
jnp
push
mov
mov
cmp
adcl
fcmovu
out
pop
pop
xchg
jae
aas
or
lds
arpl
lea
and
rorb
out
mov
sbb
into
xlat
lock
cmpsl
fcmovnbe
mov
stos
adc
out
jb
xor
mov
mov
test
bound
ja
pop
jg
mov
popf
pop
orl
aas
movl
int
add
incb
int3
sbb
lcall
mov
cmp
jbe
pop
jnp
push
or
int
inc
jnp
dec
orb
xchg
fcomip
jnp
cltd
xchg
add
xchg
jnp
in
hlt
scas
enter
cli
scas
jnp
xchg
jl
insb
pop
jle
mov
cmp
mov
fsubrs
int3
loop
dec
jg
and
test
cmp
lcall
add
sub
jnp
fdiv
xchg
pop
out
jge
jmp
jnp
mov
jnp
jp
sbb
jnp
mov
ljmp
pusha
inc
jnp
std
ficomps
inc
addr16
jg
mov
xor
hlt
jnp
mov
sub
jnp
xchg
fisubs
fisttps
lret
repz
mov
cmc
clc
dec
jnp
leave
outsb
fwait
adc
xor
loop
dec
jge
mov
popf
jmp
iret
in
xchg
fisttps
mov
test
inc
jno
jnp
add
loope
sbb
lea
mov
jnp
inc
push
cli
jge
fidivrl
and
jmp
cmp
dec
fs
add
jnp
and
andl
mov
jge
scas
mov
aaa
fadd
in
push
ljmp
nop
jbe
inc
sbb
lcall
movsb
xchg
iret
add
and
rclb
push
jnp
mov
sbb
sub
rcll
cmp
aaa
fcomi
inc
loop
mov
mov
in
sbb
xchg
push
push
scas
imul
dec
hlt
xchg
vmaxps
mov
jnp
xor
jns
jnp
adc
add
sbbl
and
push
pushf
and
dec
mov
jnp
lcall
sbb
sarl
jnp
push
nop
gs
insl
mov
lea
pop
into
mov
inc
xchg
loopne
cmp
ds
arpl
cmp
imul
dec
cld
push
xor
push
mov
and
repz
mov
daa
mov
and
sar
xchg
pop
lock
mov
cmpsl
xchg
rcll
insl
repnz
pshufw
jnp
push
dec
xchg
das
add
xchg
js
sub
mov
jmp
jnp
sub
dec
adc
mov
jae
and
sbb
aas
retw
lock
jb
jns
std
sub
nopl
out
arpl
or
mov
or
sub
xchg
std
cwtl
jnp
pop
xchg
loopne
mov
in
add
stc
pop
push
sub
aad
scas
mov
test
push
mov
xorl
pop
jl
dec
test
jns
xchg
adc
aad
jne
mov
mov
mov
imul
sbb
sbb
scas
outsb
popf
fldt
fists
sarb
lock
in
js
dec
add
sbb
roll
test
mov
cmp
enter
enter
fsubrl
arpl
and
jb
xchg
outsb
int
ret
adc
inc
dec
pop
jecxz
xor
fisttpl
iret
outsb
movsb
or
push
cld
xlat
push
push
aam
pop
jns
jnp
push
lcall
sub
in
adc
cmpsb
mov
sub
sahf
push
cmp
scas
ja
cmp
stos
lahf
into
test
insl
and
sub
ficompl
call
xor
ret
add
mov
jnp
loopne
push
mov
mov
and
mov
jnp
mov
push
jg
fmul
mov
ret
loope
mov
pop
mov
std
mov
out
push
push
jnp
inc
adc
jae
mov
jnp
dec
pushf
lock
sub
shlb
jb
adc
nop
dec
add
frstor
push
and
int
xlat
negb
scas
jae
mov
loope
rcr
xor
push
das
ja
pop
add
jno
or
pop
cmp
mov
test
add
arpl
cmp
inc
mov
cmp
pop
or
pop
or
repz
push
mov
bnd
cmp
subl
bound
icebp
xlat
out
out
mov
pop
js
sbb
and
pusha
out
lea
mov
xchg
pop
fistpll
sub
imul
cld
das
lods
add
jg
lea
mov
icebp
lret
loopne
jnp
lret
negl
stos
mov
stos
mov
add
inc
adc
adc
adc
lret
incl
adcl
jnp
add
pop
mov
pop
test
lret
push
xor
pushf
mov
imul
inc
jnp
adc
cmp
jno
xchg
xchg
or
aaa
jnp
sahf
out
mov
sbb
mov
test
xor
cmpsb
cmc
testl
jmp
add
les
lods
fdivrs
xchg
mov
xchg
and
push
cmp
scas
shll
lock
call
pop
and
xchg
loopne
int3
cmp
fldt
aam
and
cltd
outsl
adc
inc
mov
rorl
jnp
jmp
dec
xchg
cmp
adc
dec
jne
cltd
sub
aad
xchg
out
inc
cmpb
hlt
add
adc
sti
out
cs
xchg
jnp
xchg
sub
push
pushf
dec
mov
test
push
dec
jmp
lret
push
add
jne
jnp
adc
cwtl
xchg
test
jge
fcompl
cld
mov
test
xchg
lret
and
dec
push
ss
push
pop
add
mov
pop
mov
addr16
jg
jnp
cwtl
push
fdivl
sub
cld
jnp
repz
push
mov
and
mull
movsb
rorl
dec
dec
jo
or
add
cld
mov
mov
sbb
and
sub
dec
std
rorl
mov
lret
ja
test
xchg
ds
sar
lds
push
sbb
pop
int3
jnp
ss
xlat
jg
jnp
cmp
lret
lahf
bswap
cld
popa
jmp
jo
jbe
sbb
imul
add
dec
adc
arpl
shll
mov
fcomp
gs
pop
sbb
ja
nop
insb
jb
cmp
jmp
rcll
mov
jno
mov
outsl
sbb
dec
xor
jno
imul
adc
mov
cltd
scas
out
mov
mov
push
stos
cmc
mov
sbb
pop
stos
inc
jmp
mov
mov
dec
inc
mov
notl
or
scas
loope
jl
jle
sbb
and
in
loop
pop
mov
inc
jne
cmp
mov
sub
xor
jnp
push
stos
leave
mov
pop
int3
mov
daa
jecxz
rclb
ljmp
xor
pop
jle
sub
jne
test
in
in
jnp
nop
adc
fdivrs
jg
icebp
jmp
in
addr16
adc
jnp
add
aaa
loop
push
pusha
shl
jnp
sbb
mov
jle
xlat
fmull
lcall
dec
cmp
inc
jl
mov
jg
cltd
pop
adc
inc
orb
out
sub
and
shrb
rorb
cmp
pop
nop
mov
xor
add
jnp
pop
rcll
ret
dec
xor
int3
mov
sarb
pop
inc
lret
adc
pop
sti
jne
js
cmp
fwait
ret
rcrb
icebp
jecxz
sub
arpl
inc
xlat
std
push
pop
mov
jo
test
mov
sahf
stos
mov
les
jl
cmp
out
sbb
leave
xchg
cmc
sar
adcl
jne
incb
cld
jnp
cmp
mov
jp
sbb
jnp
icebp
test
and
push
cmpb
out
mov
jb
pop
mov
mov
pop
and
bound
xchg
jmp
cld
lret
cltd
mov
push
sti
sbb
in
jb
pop
xchg
mov
sub
add
or
movsb
mov
sbb
es
lret
pop
jle
adc
jno
cld
bnd
xlat
mov
int3
pop
cmpl
movsl
mov
cltd
and
adc
jns
dec
push
in
movsb
outsl
jg
xlat
push
pop
xchg
jnp
call
dec
jnp
pop
inc
sbb
xor
mov
out
out
cmc
in
pop
or
addr16
mov
ret
insb
int3
out
cmp
jge
jnp
sbbb
orl
addl
cmp
adc
sar
mov
cmp
mov
xchg
imul
inc
dec
out
or
jns
inc
xchg
mov
sarl
repz
and
jnp
push
jge
mov
fisubl
jnp
xchg
sub
cmp
das
dec
fwait
add
xor
cmp
or
sbb
les
xchg
xor
pusha
cmpsb
sbb
popa
test
inc
bound
push
mov
xor
test
jnp
pusha
outsl
or
jnp
mov
mov
xchg
pushf
repnz
xchg
and
lret
sbb
addr16
mov
loop
jns
mov
jecxz
sbb
outsb
scas
sbb
mov
dec
call
add
insl
mov
rclb
adc
int3
jne
push
cmp
movsb
mov
and
lret
mov
notl
sti
jecxz
mov
insl
xor
mov
prefetch
cwtl
nop
aas
mov
lret
dec
sub
gs
xchg
cmp
mov
bound
mov
push
stos
loop
arpl
sbb
outsw
cmp
add
sbbl
jnp
or
push
mov
jnp
push
sbb
filds
xor
enter
idiv
xchg
inc
cwtl
movsb
jnp
daa
rorl
sahf
notl
mov
rcrl
fwait
imul
pop
sub
adc
inc
arpl
cmp
fwait
lret
sub
jns
lcall
adc
sbb
jnp
divl
addr16
xor
xchg
shll
test
out
jnp
jg
insl
pushf
and
push
test
int
mov
sti
fstpt
or
jle
xchg
mov
jno
dec
pop
adc
dec
and
push
imul
inc
xchg
and
test
fistpl
arpl
out
cmp
jnp
jbe
adc
rorb
mov
sbb
ja
aaa
add
pop
xor
lahf
jmp
pop
test
mov
jl
jo
xor
shr
xchg
lcall
js
cmc
sti
nop
aaa
pop
inc
imul
cld
insl
adc
push
mov
lahf
hlt
stc
popa
mov
add
jnp
aad
cmp
and
flds
mov
push
lahf
jnp
pop
pop
data16
xlat
jnp
mov
aaa
push
scas
aas
cmp
enter
xor
mov
lcall
push
xorl
cmp
stos
outsl
outsb
sub
jp
jnp
push
out
test
xchg
mov
les
jnp
sub
sub
arpl
loop
int
jbe
push
ja
cltd
out
and
dec
sub
mov
fildll
dec
mov
pop
int
dec
out
pop
nop
xchg
jnp
lahf
rcl
jno
mov
pop
iret
lods
out
fwait
inc
stos
sub
dec
sbb
push
lcall
mov
sti
test
enter
mov
test
jmp
mov
xlat
cs
adc
cld
jb
jge
add
or
inc
and
insb
mov
push
loop,pt
mov
ja
jp
jnp
fldenv
push
adc
fcmovnbe
pop
mov
scas
sbb
ret
test
adc
cli
out
sub
sub
xchg
rcl
hlt
inc
or
fldt
and
fwait
xor
mov
cmp
arpl
icebp
dec
xchg
test
fwait
push
or
cmc
ds
test
adc
test
clc
bound
jnp
inc
hlt
addb
mov
enter
xchg
jnp
lret
mov
test
push
les
imul
add
out
xchg
push
mov
bound
stos
mov
mov
cmp
xor
les
mov
pop
and
insb
cli
xchg
push
dec
and
lods
pop
xor
notl
or
xchg
icebp
push
lcall
nop
notl
sti
outsl
fwait
stos
mov
jnp
inc
jbe
or
cmp
sti
or
sbb
fildll
mov
fidivs
fsubrs
inc
jmp
addr16
negl
jnp
pop
push
mov
cltd
pop
stc
mov
ljmp
adc
cs
or
jl
repnz
mov
cmpsl
aam
cmp
mov
fcmovnu
pop
cmp
test
fwait
mov
jmp
sbb
jnp
push
nop
cmp
mov
mov
xchg
dec
std
jnp
push
mov
stos
xor
xor
insl
add
push
or
je
and
bound
add
aam
pop
or
imul
clc
pop
or
aaa
iret
imul
es
add
outsb
popf
inc
cmp
fisubrl
repz
pushf
cmp
mov
scas
mov
jnp
mov
sahf
int
mov
inc
add
cmp
outsb
ljmp
dec
xor
mov
rol
cwtl
mov
movsl
jge
mov
push
and
loop
movsb
push
inc
or
test
pop
arpl
inc
in
outsb
test
add
add
in
jb
dec
mov
loope
jmp
andl
pop
dec
xchg
mov
sub
xor
sbb
jns
rcrb
pusha
into
jnp
xorb
or
jo
fwait
push
test
pop
aaa
adcl
mov
std
in
jnp
sbb
jbe
decl
mov
enter
test
js
inc
loop
sbb
push
inc
bnd
cmp
ss
sbb
aaa
addr16
mov
dec
xor
cmp
sub
test
into
cwtl
outsl
cmpsb
dec
das
lahf
jno
jnp
dec
mov
jmp
jg
jnp
xchg
cmpsl
js
cmp
mov
shrl
fidivs
stc
mov
rol
xchg
or
jnp
sub
cld
cltd
daa
jnp
adc
push
clc
sahf
mov
test
fidivs
dec
test
mull
jnp
insl
push
movsb
mov
or
xchg
and
mov
mov
mov
loop
int3
jnp
aam
es
push
pop
inc
jnp
in
cltd
or
idivl
je
mov
cmp
rcrl
sti
cwtl
pusha
mov
sbb
jnp
rolb
push
divps
pop
test
sub
jnp
pop
xchg
call
sbb
sar
stos
cmp
mov
rorb
jnp
adcl
lds
mov
fcmovnb
add
incb
into
pop
mov
cld
pushf
dec
sarl
mov
adc
lahf
lret
mov
pop
jl
gs
lcall
fisubl
add
test
sbb
jbe
xchg
xor
adc
out
mov
call
imul
lcall
fsts
mov
testb
push
mull
jne
jnp
inc
rcll
adc
and
xchg
iret
mov
mov
call
xlat
jo
push
or
and
lea
cmp
es
addr16
inc
fs
cmpsb
xlat
push
push
push
cmc
inc
jnp
enter
push
push
jnp
mov
adcl
hlt
xor
sahf
repnz
cmp
jnp
inc
push
adc
xor
pop
jnp
mov
mov
jnp
push
xchg
test
jbe
pop
sahf
mov
jle
xchg
scas
clc
cltd
xchg
sti
popf
or
jge
clc
sarl
stos
adc
jnp
jmp
jl
sbb
test
rol
mov
jns
imul
dec
xchg
lods
fimull
mov
aad
mov
movsl
inc
jnp
xlat
dec
pop
inc
test
das
mov
xchg
pop
fs
out
jnp
and
pusha
lods
mov
jnp
mov
xchg
pop
dec
stc
lret
mov
jns
nop
pop
arpl
jmp
bound
cmp
outsb
iret
enter
outsb
xchg
rclb
arpl
add
das
dec
movsb
add
out
jmp
clc
andl
cmp
mov
test
pop
pop
sti
sbb
fstp
jae
sti
jns
stos
ss
arpl
dec
dec
pcmpgtw
mov
and
cmpsl
jmp
stc
jo
mov
add
lahf
cmp
xor
lret
jge
jnp
das
pop
leave
push
mov
xchg
sub
imul
sub
das
std
pop
dec
cmc
mov
jns
imul
in
mov
test
in
sbb
sbb
mov
jnp
mov
loopne
aas
pusha
jnp
stos
xchg
or
shr
cmc
jo
adc
cli
pop
jne
jnp
das
push
dec
js
mov
adc
into
and
jecxz
cmc
mov
mov
scas
add
and
sub
jnp
push
aam
lds
loopne
imul
jg
sbbl
or
shlb
cmp
jb
jl
push
add
jno
arpl
jle
inc
jnp
call
dec
sarl
push
stos
rcrl
mov
hlt
nop
mov
mov
aas
pop
cmp
xchg
addb
sti
inc
lahf
push
jnp
loop
adc
pushf
dec
xchg
outsl
jmp
arpl
dec
sbb
sub
cmpsl
or
outsl
pop
push
and
dec
jnp
sbb
jae
repz
jecxz
push
idivl
jnp
dec
mov
outsb
lret
and
mull
fimuls
push
dec
imul
push
pushf
and
fwait
dec
jb
ss
lret
mov
push
dec
add
lock
sahf
scas
mov
xchg
fsubs
out
repnz
insb
cltd
rcll
jnp
jl
mov
jb
out
xorb
and
dec
mov
repnz
adc
addl
cmp
daa
dec
cltd
les
test
fucomi
outsb
in
int3
jae
jge
hlt
out
aam
fs
jp
mov
hlt
into
dec
inc
inc
mov
adc
xchg
push
mov
in
aaa
xor
xchg
fimull
lds
arpl
int
aaa
and
out
fcompl
pop
sbb
mov
adc
aaa
jnp
mov
add
and
sub
add
mov
xchg
jnp
out
dec
jo
and
movsl
fiadds
sbb
loop
fldenv
aad
cmp
mov
es
xchg
mov
push
and
fsubrl
cltd
xchg
int3
fidivrs
jnp
cmpb
scas
mov
mov
xchg
xchg
push
ja
jmp
xchg
jnp
imul
shr
sub
arpl
test
insl
push
mov
cmp
lcall
test
mov
xor
daa
push
add
out
jnp
fninit
mov
outsb
xchg
fwait
ret
pop
sbb
nop
and
push
jle
stc
mov
xchg
mov
out
jl
cmp
add
arpl
nop
push
mov
inc
lea
lock
dec
rcl
outsb
cs
inc
lods
in
call
repnz
jnp
ss
mov
popa
les
push
clc
jnp
loop,pn
loopne
icebp
ss
notl
test
dec
adc
js
inc
sub
xor
and
mov
les
fisttpl
cmpsb
jae
jnp
imulb
into
xor
loop
fscale
cmpsl
dec
ficompl
dec
add
les
sub
xlat
mov
call
test
adc
xchg
fldl
inc
xchg
and
arpl
jmp
mov
dec
lret
mov
jae
or
imul
sarl
inc
and
jnp
cmp
mov
leave
loopne
test
lds
rcrb
or
invd
lea
cmp
xor
mov
cmpsb
jl
or
push
ja
fdivrp
mov
dec
fstpl
pop
fwait
pop
xchg
imul
sahf
mov
add
mov
mov
and
std
iret
cmp
int
pushf
or
sbb
xchg
adc
xor
jnp
out
cld
ret
pop
jg
jnp
xchg
in
arpl
mov
adc
jmp
xlat
mov
scas
bound
ret
cwtl
jnp,pt
jp
aaa
loope
push
cltd
mov
mov
add
mul
push
dec
jle
jnp
xor
cmp
sub
push
xchg
test
arpl
jmp
jg
je
xchg
mov
push
mov
cmp
push
sbb
das
mov
push
aaa
lock
int3
inc
push
jnp
nop
ret
and
js
xrelease
dec
jp
add
out
adc
aaa
jnp
push
mov
popa
insb
and
ljmp
mov
imul
pop
jecxz
xchg
push
arpl
inc
push
je
sub
cli
inc
cwtl
xor
sub
xlat
ja
mov
mov
jnp
mov
outsl
jle
lahf
push
jmp
jg
lret
enter
pop
dec
fs
int3
jnp
inc
int
xor
shlb
mov
jge
mov
lea
ffreep
sti
popa
push
pop
adc
jnp
daa
dec
xor
and
mov
xlat
push
fdivl
jnp
xchg
jg
jb
fstpl
sbb
jnp
stos
lahf
dec
rcrb
xlat
std
ss
repz
bound
xchg
dec
lods
outsb
ret
sbb
lock
lcall
jnp
scas
mov
jnp
loope
lret
mov
xlat
cmp
std
xchg
lcall
out
mov
aas
dec
test
add
mov
insb
mov
push
push
pop
orl
outsb
lods
jmp
cwtl
arpl
aad
movb
pop
adc
fwait
and
outsb
cmc
jp
rolb
cmp
xor
xchg
mov
pop
addb
adc
dec
sub
cmp
xchg
inc
call
push
inc
push
clc
inc
inc
push
mov
mov
aas
pop
mov
shl
movl
add
mov
jb
pop
das
mov
mov
lods
aas
lcall
jl
jnp
cmc
push
adc
ja
cmp
xchg
sbb
pushf
fsubrl
or
sbb
xchg
xchg
lea
bnd
rcl
popf
jmp
push
lods
ljmp
dec
xchg
repz
fdivrs
repnz
inc
sbb
jae
dec
gs
jmp
jnp
das
daa
pop
inc
outsb
adc
jnp
es
mov
pop
inc
jnp
push
add
xor
loope
pop
gs
sub
cmp
mov
icebp
outsl
aas
scas
jnp
add
jo
mov
sbb
dec
sub
jl
cmpsb
daa
in
outsl
out
or
push
mov
cmpsl
adc
fcoms
jl
jmp
bound
mov
mov
sti
cmp
pop
mov
push
mov
adc
mov
jnp
mov
dec
call
mov
ret
xor
lret
xor
mov
movsb
imul
sbb
ss
jnp
dec
dec
pop
daa
mov
imul
lcall
jae
xchg
pop
mull
mov
push
jae
arpl
cmpsl
flds
imul
fidivrl
leave
orl
xchg
xchg
push
popf
fldl
add
repz
mov
jb
mov
aam
cmp
stc
inc
outsb
mov
cmp
push
cmp
or
stos
jnp
lret
gs
dec
sarl
jg
push
push
inc
mov
cmp
xchg
mov
out
sub
movsb
stc
jp
sbbb
mov
mov
push
rol
sti
sub
jmp
int
lcall
enter
mov
dec
sti
cs
cmp
scas
jnp
outsb
lods
pop
ljmp
lods
pop
adc
mov
imul
sub
push
push
jle
lock
mov
call
jnp
wbinvd
sub
adc
scas
das
test
insl
jnp
add
lcall
sub
mov
pushf
mov
sti
xchg
jae
insl
addr16
out
inc
out
sti
lret
nop
imul
jnp
shrb
hlt
xchg
jnp
xchg
in
ret
js
cmc
repz
jnp
xor
sub
addr16
add
call
cmp
aas
test
je
clc
sub
sub
jnp
test
out
nop
push
pop
jnp
ljmp
cmp
mov
cs
aaa
lds
jnp
pop
dec
push
and
inc
add
xchg
icebp
mov
mov
jne
and
lea
incl
pop
sbb
xor
addb
outsl
dec
in
test
mov
or
setl
cmp
xchg
jl
std
iret
test
js
cmp
stos
imul
cmpsb
jnp
adc
dec
iret
jo
fdivrs
popa
mov
cs
cli
sbbl
cmp
lods
aam
jle
call
push
or
fucompp
dec
jnp
push
pop
add
xchg
jb
sbb
dec
les
or
mov
push
xchg
lods
std
in
insb
add
lahf
jb
sbb
xchg
xchg
pop
jbe
xchg
cmp
jo
jb
cmp
pop
jnp
icebp
push
mov
mov
adc
jae
cmp
or
jnp
fnsave
repz
in
movsl
and
sti
add
lods
mov
loopne
aaa
aad
jnp
scas
inc
or
cltd
test
jae
iret
cmpb
lret
mov
or
mov
xchg
call
jnp
lcall
jnp
and
push
outsl
std
push
xchg
imul
mov
add
leave
add
cs
fdiv
inc
cmpl
and
sbb
scas
insl
cwtl
loope
adc
das
icebp
insb
jnp
sbb
xchg
jnp
nop
sti
jecxz
xor
lock
test
js
cmp
mov
jnp
push
ret
push
imul
xor
pop
cli
pop
gs
mov
mov
movsl
int
rorb
or
mov
mov
xchg
mov
fdivr
popa
adc
imul
jnp
es
popf
out
jnp
pusha
mov
negb
or
sub
mov
pop
mov
xchg
in
adcl
add
cmp
cmp
push
loopne
jp
jecxz
mov
fsubs
pop
stc
or
movsb
out
std
cmpl
dec
jnp
fwait
scas
pop
xchg
imul
or
std
adc
arpl
xlat
lds
sarl
or
jnp
mov
cmp
fadds
arpl
push
pop
pop
cltd
jnp
ljmp
out
adc
pop
mov
sbb
xchg
push
and
inc
inc
data16
aam
jmp
insl
dec
jnp
and
pop
jnp
ficomps
pop
std
outsl
jae
pop
inc
movsb
pushaw
adc
aam
out
jnp
notb
xor
mov
inc
pusha
push
clc
sub
jnp
pop
push
jnp
gs
or
and
jnp
jns
mov
ficompl
pop
add
int3
xlat
pop
es
pop
inc
jp
fists
mov
dec
add
aad
in
jnp
loopne
inc
or
in
cld
push
cld
ret
xchg
int
or
mov
cltd
cwtl
and
mov
dec
xor
pushf
dec
outsl
mov
cmpsl
or
js
sti
and
jno
mov
mov
sub
jb
xchg
rolb
outsb
sarb
lods
and
ret
pop
mulb
shll
adc
hlt
stos
sub
jbe
test
jg
fisttpl
jp
out
inc
sub
arpl
fwait
mov
jecxz
sti
popf
xor
lahf
fnclex
xorl
mov
mov
xor
addr16
test
cli
fcomi
sub
cmp
cltd
lcall
movsl
lahf
mov
cld
adc
lahf
popa
ss
mov
shld
sub
lret
jne
jnp
fldl
xor
pop
xor
jnp
inc
inc
add
mov
jg
sti
adc
stos
mov
cmc
leave
sub
mov
sub
popa
in
pusha
out
lcall
stc
xor
and
xor
imul
sahf
in
add
loop,pn
jge
pop
cmp
xchg
cli
pop
cmp
push
inc
and
cmp
out
xchg
outsb
test
out
sub
jnp
in
shrl
mov
mov
div
sbb
cmpsb
js
jge
lcall
pop
jnp
or
add
jnp
lea
in
adc
cltd
mov
jle
test
cmpsl
mov
mov
roll
das
mov
xor
jnp
sub
test
inc
idivb
mov
xchg
cmp
cmpb
cmp
jne
mov
inc
das
rcrb
jne
xchg
sub
xchg
daa
jnp
push
insb
cmp
addb
inc
jb
out
in
xor
out
jge
push
xchg
add
push
jle
push
sub
jnp
scas
inc
fwait
pop
or
xchg
push
cmp
xchg
xchg
jnp
mov
pop
insl
mov
inc
es
jo
sub
loope
ret
ret
stos
ljmp
arpl
push
xchg
adc
xchg
sub
fs
xchg
sarl
insl
outsl
xchg
sti
fcoms
mov
in
stos
sub
push
xchg
jo
ret
mov
inc
ret
jno
repnz
dec
push
push
out
add
jmp
adc
xor
loopne
cmp
pop
nop
inc
dec
push
pop
testb
ret
fnclex
fldenv
push
js
test
lods
outsb
test
jg
cmp
jb
imull
fwait
or
lea
push
adc
lret
insb
lods
and
xor
add
sbb
mov
jae
ja
cmp
jmp
sub
adc
push
call
sahf
jae
cmp
rorb
inc
cmpsl
pop
outsb
je
push
add
jo
push
and
pushf
fistpl
jnp
movsl
and
scas
cmp
bnd
mov
jnp
lds
pop
test
push
hlt
aam
jge
out
clc
cmp
mov
add
test
or
xchg
mov
xor
shll
dec
stc
fsubl
jmp
jnp
sahf
fucomp
insl
cmp
jnp
lods
outsb
cmp
sahf
jnp
fsts
arpl
in
int3
add
shll
cmp
cmp
pushf
rcl
subl
shlb
inc
mov
dec
lock
and
popf
cmpsl
cwtl
sbb
imul
int
daa
xchg
outsl
add
jnp
xor
sub
lcall
insl
jecxz
outsb
ror
mov
sti
out
mov
sarl
pop
insb
xrelease
dec
sti
daa
pushf
lods
imull
xchg
mov
sub
jno
ja
les
or
lahf
dec
pop
adc
int3
jnp
mov
sub
inc
pop
jp
xchg
lret
xor
xchg
cltd
jnp
or
fnstsw
aas
pop
jns
xchg
pop
xor
ret
stos
push
shrb
push
nop
add
sahf
mov
iret
mov
mov
mov
dec
shll
jnp
mov
popf
xchg
inc
dec
inc
out
sti
pop
jae
push
and
ja
xor
adc
sbb
shl
je
mov
fstp
mov
fists
dec
push
fcmovne
fistl
adc
and
sub
aad
pushf
mov
push
inc
in
mov
rcrl
scas
call
test
fcmovnbe
pop
lret
jnp
ficoml
pop
jnp
inc
das
push
int
add
pop
mov
mov
stos
clc
mov
jnp
adc
dec
repz
sbb
and
lret
test
mov
jnp
xchg
ss
in
movsb
mov
fiadds
jmp
mov
mov
in
fs
jnp
fistl
fisubl
daa
testl
sub
sti
add
cwtl
inc
jnp
xchg
mov
jle
jmp
aas
jno
and
xchg
xchg
jbe
dec
stos
test
pop
xor
mov
rolb
push
jne
jnp
fsts
sbbb
and
enter
out
mov
push
rcrl
outsb
cmpl
jbe
push
jge
stos
and
mov
mov
mov
mov
dec
cltd
dec
mov
js
adc
cmp
sbb
push
arpl
in
popf
in
or
enter
add
mov
mov
or
je
scas
jp
sub
jl
cwtl
mov
xchg
jecxz
ds
in
mov
enter
ret
das
xchg
data16
jns
mov
jae
outsb
mov
mov
adc
add
addr16
mov
dec
fwait
mov
jl
xchg
jnp
mov
adc
jnp
cmp
repz
ljmp
lcall
jb
xchg
cwtl
addr16
int3
add
les
in
jge
cwtl
flds
shll
cltd
dec
sbb
es
icebp
jnp
mov
jno
cmpsb
sbb
call
xorl
gs
fcoml
jge
js
mov
add
fisubs
cli
fwait
and
sti
jecxz
mov
addb
mov
xor
pop
xchg
dec
outsb
mov
and
pop
inc
xlat
push
jecxz
jle
mov
rolb
je
outsb
or
outsl
test
sbb
mov
pop
testb
movsl
and
mov
xor
imul
push
xchg
push
pop
sbb
hlt
stos
and
sbb
lods
xor
and
imul
jnp,pn
aas
cmc
in
rorb
and
inc
lea
xchg
lods
dec
dec
shll
jnp
pop
and
mov
test
sub
inc
cmp
xchg
xor
fldenv
jnp
lea
add
xchg
jns
xchg
lds
stc
mov
pop
lret
ss
andb
mov
jnp
xchg
jno
leave
dec
ja
test
add
cmp
xchg
test
shlb
arpl
mov
mov
sbb
scas
inc
push
fs
movsb
xchg
mov
xchg
leave
shll
test
push
movsl
mov
mov
data16
mov
jnp
push
jo
fildll
shlb
test
xor
and
jnp
mov
cld
dec
jge
lods
ja
jnp
pop
lret
leave
jae
popa
fwait
jnp
mov
sub
das
mov
ja
lcall
lods
push
adc
inc
jnp
xor
and
jnp
sbb
lahf
fwait
mov
aas
lcall
mov
add
aas
out
sbb
in
jb
inc
jne
ljmp
and
arpl
lods
cmp
fisubs
lods
das
addl
push
mov
out
push
call
jecxz
mov
inc
jnp
jmp
add
sbb
mov
pop
mov
jb
lcall
scas
insb
mov
nop
push
test
sbb
xorl
inc
pop
popa
sbb
sbb
mov
incl
jns
adc
xor
lock
pusha
insl
mov
sub
inc
jnp
jae
insb
or
dec
mov
popa
iret
pop
push
jbe
dec
jnp
inc
mov
and
dec
daa
jle
and
cmp
dec
fs
jno
cmc
test
inc
dec
rorb
xlat
lahf
fisubrl
push
fsubrs
shrb
push
out
push
add
pop
mov
int
sub
mov
aam
scas
fwait
stos
repz
push
psrlq
and
mov
mov
dec
xchg
repz
fwait
sub
mov
clc
gs
nop
movsl
sbb
movsb
add
adc
xor
pop
js
into
xchg
lahf
arpl
push
lods
repnz
push
sbb
mov
repnz
cld
dec
jnp
sbb
push
cmp
nop
aam
dec
adc
cmp
xor
push
sti
pop
pop
icebp
cwtl
mov
push
jnp
lds
pop
jnp
jne
push
or
ror
cs
in
sub
mov
icebp
mov
cmpsb
lock
repz
jnp
rcrb
xor
test
movsb
in
dec
test
and
scas
add
adc
pushf
push
dec
push
mov
cmp
mov
xlat
int
jb
hlt
sti
fwait
jmp
push
push
mov
sti
jecxz
or
outsb
stos
push
pop
jnp
sahf
sub
mov
ljmp
cmp
dec
sti
dec
xor
rclb
jnp
sub
insb
iret
push
arpl
leave
lods
int
cmpsl
pusha
jnp
push
cmp
push
das
jnp
mov
lcall
sti
loop
mov
jae
fimuls
jnp
arpl
sub
hlt
pop
mov
mov
mov
cld
int3
xchg
cmp
in
jmp
sbb
push
xchg
mov
jnp
cmpsb
fs
fisubrs
rcrb
xor
ja
mov
jnp
inc
imul
movsl
sbb
push
jnp
addr16
mov
scas
popa
daa
jnp
dec
inc
xchg
outsl
add
jnp
cld
sub
adc
mov
ret
pop
jp
imul
pop
mov
and
pop
mov
nop
mov
imul
inc
jmp
or
mov
add
repnz
jb
repz
test
mov
dec
jne
cmpl
outsb
lcall
xchg
jns
pmaddwd
loope
mov
pop
repnz
jmp
test
repz
pop
mov
dec
mov
inc
fdiv
test
add
xchg
lea
jnp
shlb
sub
push
dec
mov
enter
and
pop
pusha
jae
add
cmpsb
addr16
adcl
daa
or
out
jne
jnp
addr16
outsl
push
cmp
or
dec
push
jl
arpl
shlb
lret
lods
fwait
mov
mov
int3
cmp
lock
ret
pop
xor
test
movb
push
mov
xor
stos
inc
test
pushf
in
std
mov
mov
pop
out
push
test
jmp
xchg
dec
outsb
push
mov
jns
sub
lock
fbstp
and
sbbl
pop
inc
dec
mov
mov
sub
lret
outsb
es
jne
into
lock
jnp
lods
mov
xor
outsl
and
ljmp
mov
xorb
mov
inc
popf
jne
test
stc
adc
jnp
or
pop
mov
cmp
mov
das
pop
inc
pop
pop
xor
mov
leave
mov
jmp
test
fwait
test
sub
or
push
jp
xor
ret
sbb
icebp
xchg
mov
je
idivl
pop
nop
push
xchg
out
adc
push
push
jnp
dec
cmp
pop
rcll
test
or
mov
jnp
push
repnz
mov
jnp
loop
xor
and
pop
mov
scas
lret
outsl
cmp
sub
add
adc
jnp
mov
pusha
ss
mov
mov
mov
inc
add
fwait
pushf
mov
test
pop
mov
out
out
stos
les
out
rcrl
sbb
sbb
aam
and
xchg
sti
outsb
push
push
adc
xchg
push
std
jb
outsb
xchg
mov
mov
mov
jnp
sahf
shrb
or
xor
sbb
xor
dec
es
aaa
sbb
lods
call
push
sarl
adc
aas
mov
out
imul
add
sub
jnp
sti
gs
cmp
cmp
jg
adc
lret
mov
imul
movsb
push
lds
inc
push
lods
pop
test
jnp
adc
sbb
sub
cmp
lea
mul
outsb
cmp
jae
movb
repz
in
mov
ljmp
ret
adc
leave
jmp
aam
fdivl
jno
jnp
pop
fisubs
mov
mov
jg
outsb
or
push
or
insb
pusha
inc
je
test
push
push
test
push
in
cmp
push
jecxz
jnp
ffree
xor
adc
mov
out
or
aas
inc
inc
dec
cmpsl
jle
inc
or
js
mov
dec
jb
jmp
jle
cmp
cmp
mov
mov
push
pop
das
adc
out
push
jge
add
jnp
mov
sub
jnp
or
lret
jnp
in
hlt
inc
mov
ja
or
and
push
lock
adc
insl
add
mov
out
jbe
in
nopl
sbb
std
sub
mov
or
cmp
dec
or
cwtl
fiadds
jnp
jge
inc
xchg
pushf
jnp
test
clc
jnp
addb
xchg
xchg
and
xchg
cmpsl
hlt
gs
lret
mov
orb
int
cs
pop
push
sbb
or
stos
push
xlat
dec
lods
push
lock
adc
fadd
dec
xor
movsb
mov
lahf
cmp
jl
pop
jle
mov
pusha
sti
jnp
inc
dec
lahf
jbe
fsubl
test
pop
pop
les
push
push
add
mov
mov
pop
sub
mov
aas
mov
ljmp
mov
int3
sahf
push
jnp
or
xor
sub
dec
fists
mov
lret
pop
movsl
test
lahf
sub
lret
hlt
pop
mov
mov
js
jne
jnp
arpl
pushf
roll
or
inc
xchg
inc
into
sub
enter
pop
sbb
hlt
aaa
xchg
loope
jnp
add
mov
and
xor
mov
out
mov
insl
addr16
ret
push
jnp
sbb
ss
mov
push
int
addb
popf
mov
sub
sti
movsb
sub
jnp
jns
lret
out
addr16
adc
mov
sub
xor
outsb
vpunpckhqdq
sar
nop
shrl
sti
pop
adc
cli
or
cwtl
xor
push
outsl
insl
jmp
sub
mov
cmp
and
icebp
fnstsw
shll
notl
mov
jp
out
mov
mov
jns
jnp
cmp
out
bnd
sahf
mov
mov
mov
lahf
mov
fcoms
arpl
outsl
iret
add
sbb
jnp
rcl
movsl
pop
add
pop
cmp
popf
mov
dec
add
mov
and
jnp
shlb
jnp
scas
data16
xchg
sbb
jnp
add
jnp
in
and
inc
test
jnp
or
jecxz
dec
movsb
mov
mov
jle
iret
jnp
inc
pop
adc
push
ror
test
jb
pop
pop
les
mov
mov
push
cltd
cld
or
xlat
push
sub
jb
jecxz
std
out
sub
jnp
pop
add
andl
loope
popf
jnp
adc
mov
jbe
sub
jnp
shlb
mov
cwtl
sub
outsl
pop
ret
shrb
sbb
xchg
sub
hlt
add
popa
inc
jmp
out
pusha
add
ret
out
xchg
int
jae
out
fdivrs
cmp
mov
jle
mov
add
jae
test
addr16
sbb
in
pushf
fistpll
scas
inc
xchg
pop
push
push
add
lret
in
scas
sub
sti
enter
cmpsl
call
push
adc
sarl
repz
test
js
push
lahf
rorb
sti
jo
stos
lods
xchg
ja
das
push
dec
inc
mov
push
xchg
fisubs
mov
jb
mov
jnp
or
cwtl
mov
loopne
clc
loop
jge
pusha
jnp
insb
mov
cld
inc
xchg
aas
pop
fnstenv
les
arpl
shll
cmpsl
cmp
mov
jg
pop
arpl
rol
sti
test
lcall
repnz
mov
mov
popf
and
rorl
scas
jns
sub
xor
dec
clc
and
inc
icebp
xor
xchg
jp
push
aam
outsl
imul
lods
aaa
and
dec
sarb
imul
cmc
fcompl
cmp
gs
aas
jnp
jecxz
inc
subb
jnp
ljmp
jnp
clc
movsb
sbb
sbb
jg
cmpsb
roll
xchg
mov
and
xchg
push
inc
lock
dec
dec
xor
push
mov
insl
cs
negl
arpl
addb
mov
pop
cwtl
daa
cmp
dec
jnp
aaa
ret
rcrb
int3
or
inc
xorb
jnp
dec
stos
js
adc
jnp
outsb
inc
loopne
out
jmp
jp
fucomip
sub
cmpsb
sbb
pop
or
push
xlat
sub
dec
nopl
sarl
test
jnp
rcll
xchg
xor
mov
jnp
cwtl
outsb
aaa
sub
repnz
stc
add
push
jbe
pop
sub
out
inc
add
jnp
mov
arpl
test
cmp
mov
call
std
in
push
shlb
mov
and
jnp
adc
mov
push
jnp
loopne
or
lea
jnp
loop
repnz
add
xchg
dec
sub
jg
sub
jl
push
mov
outsb
subb
cltd
adc
aas
xlat
push
int3
lahf
fisttps
sbbb
mov
bound
or
movsl
and
cli
sub
cmp
rorl
int
push
int
insb
icebp
in
cmpsb
stos
scas
mov
mov
add
ljmp
icebp
push
or
push
pop
inc
and
fsubrl
jle
and
out
iret
enter
sub
sarl
ret
ret
cmpl
pop
xor
add
sub
jp
ja
jbe
mov
mov
mov
or
jnp
pop
daa
add
jnp
and
pop
push
out
int3
jnp
push
jl
and
mov
inc
push
stos
cli
mov
repz
icebp
fistps
in
xchg
rorb
data16
pop
add
sarb
sti
xchg
cmp
push
or
enter
jnp
sub
lods
mov
aad
cmpsl
outsl
dec
daa
mov
jmp
mov
imul
dec
es
in
jbe
jl
jp
sbb
loop
in
bound
test
insl
ret
cltd
dec
pop
imul
aaa
nop
add
jnp
in
inc
sbb
xor
imul
mov
repz
roll
or
jnp
ljmp
jnp
xchg
mov
cmp
cli
adcb
inc
cmp
dec
jnp
mov
fidivs
popf
and
lcall
addl
das
fidivs
jb
push
repnz
jnp
cmc
repz
dec
testb
ljmp
xchg
enter
dec
jnp
icebp
cmp
mov
jnp,pt
sbb
sub
jnp
mov
mov
jnp
dec
je
cld
test
xchg
adc
js
lcall
pusha
fidivrs
or
and
jno
jnp,pt
xchg
add
mov
inc
dec
and
lahf
mov
cmpsl
push
mov
popa
jnp
scas
ja
dec
push
mov
mov
jnp
shll
mov
mov
es
loopne
jnp
dec
push
mov
xor
mov
and
loope
lret
jnp
xchg
jnp
adc
enter
aad
lea
sub
and
insb
shlb
test
dec
sahf
testl
fwait
or
sub
ljmp
mov
pop
jb
sub
adc
in
outsb
cmc
lock
pop
sub
push
dec
pop
incb
movsb
stos
mov
adc
xchg
jnp
in
mov
movsb
jl
push
imul
cmp
push
testl
outsb
inc
std
fwait
sub
mov
movsb
lock
dec
xchg
addl
add
inc
outsb
into
pop
and
xchg
sti
jns
es
push
mov
out
xor
jp
out
add
cmp
loope
cmc
mov
loop
orb
jmp
lcall
xchg
jecxz
sahf
dec
jne
mov
push
xchg
push
out
js
inc
mov
dec
emms
xor
lret
arpl
jnp
and
xchg
loop
add
std
out
jge
shlb
jnp
in
jp
in
dec
push
xchg
lcall
cmpsl
jno
stc
dec
inc
jnp
and
fimull
push
adc
sub
add
add
fcompl
mov
leave
dec
push
testb
test
push
cmp
call
repnz
outsb
inc
lret
les
aad
arpl
arpl
out
cmp
sub
jnp
push
je
push
hlt
ljmp
jl
cmp
fistl
push
dec
mov
stc
gs
nop
fstl
test
pop
imul
movsb
jno
or
cltd
push
mov
inc
cmp
inc
in
sbb
test
fisttpl
xor
add
fwait
jae
push
mov
jno
bound
stos
mov
push
jnp
cmpsb
adc
sarl
daa
mov
sub
mov
push
jnp
fwait
cmc
jle
sbb
jno
mov
xchg
fcomps
jnp
xchg
cmpsb
mov
push
xchg
pushl
jnp
call
jnp
sub
mov
aad
inc
lcall
mov
or
mov
sti
lea
mov
ljmp
pushf
js
pusha
inc
jg
xchg
and
pop
fdivr
fwait
jnp
push
sbb
jnp
test
addl
or
jbe
xchg
xlat
jnp
and
out
mov
std
cmp
push
aam
pop
jg
cmc
jns
jnp
testb
inc
mov
cmp
fisttps
xchg
dec
lret
dec
xor
popf
jnp
mov
sub
subb
les
sub
jnp
dec
xchg
fcoml
in
jae
and
mov
jmp
mov
dec
or
fwait
xchg
jl
int
pushf
test
sarb
sbb
and
mov
jnp
mov
and
fcmovu
and
test
or
lahf
stos
incl
sti
xchg
push
in
xchg
jnp
xor
loop
fidivrl
jnp
push
push
call
icebp
repnz
dec
mov
pop
jnp
pop
or
gs
xor
test
psllq
cld
and
adc
mov
jnp
aam
test
xchg
mov
mov
cmp
jnp
dec
adc
mov
push
jmp
jnp
and
mov
jnp
push
cld
jp
dec
dec
jnp
push
adc
pop
iret
jnp
lods
ja
xor
inc
adc
fimull
push
pop
pop
out
call
mov
mov
jnp
les
jnp
xchg
jge
aad
scas
adc
jnp
loope
adc
jnp
cwtl
mov
xchg
divl
cmp
fs
push
jb
icebp
jnp
outsl
shll
pushf
xor
jnp
rcll
pop
lahf
ja
js
pop
jle
mov
outsl
rclb
nop
xchg
push
mov
push
mov
dec
cltd
dec
pop
addr16
add
xchg
clc
mov
cmp
rcll
mov
ret
jns
cmc
xor
xor
mov
dec
push
sti
sti
dec
stos
jb
jnp
xlat
loopne
mov
sub
lods
mov
inc
xchg
loop
sar
sbb
xchg
in
mov
add
and
loop
pop
inc
jl
rcrb
insl
dec
mov
cmp
pop
pop
jnp
push
das
daa
xchg
adc
sub
mov
out
or
dec
dec
je
pop
mov
pop
pop
dec
insb
popf
arpl
dec
xchg
flds
jmp
addr16
enter
xor
jnp
pop
or
call
sti
xor
repnz
cmp
xchg
repz
loopne
insl
pusha
and
sarb
sbb
ds
dec
in
out
mov
jnp
jo
dec
or
cld
or
pop
xchg
outsl
test
fmull
mov
push
mov
xchg
sub
or
pop
outsl
stc
mov
jecxz
lret
jnp
jo
sbb
jnp
jge
lcall
jmp
jnp
out
test
imul
fnstcw
push
pusha
subl
mov
enter
sahf
push
movsb
mov
jnp
mov
data16
imul
mov
fisubrl
jnp
pusha
mov
sarb
aad
xchg
mov
insl
add
xor
jnp
xchg
dec
test
sti
inc
mov
hlt
icebp
fdivrs
stc
or
lahf
push
mov
mov
jae
jnp
lcall
into
je
push
cwtl
testl
dec
jnp
cmp
sbb
roll
sti
std
leave
sbb
dec
movsb
jecxz
jle
inc
add
stos
inc
sbb
xor
sbb
jnp
xlat
icebp
cmp
int
jnp
sbb
mov
ja
xchg
dec
setl
inc
addr16
jp
jnp
js
adc
orb
xchg
xchg
fiadds
jno
out
mov
sub
inc
mov
jnp
and
out
adc
jl
sbb
or
ret
aas
xchg
or
mov
nop
test
mov
fisttpll
add
xchg
fwait
jno
js
jnp
lcall
jnp
jp
xchg
fldpi
dec
std
push
mov
sbb
subb
mov
aam
xchg
es
hlt
outsl
aas
outsl
mov
sti
sub
loopne
jae
mov
test
pop
push
sahf
pushf
jnp
xor
jae
dec
inc
test
ljmp
adc
or
adc
jns
mov
pop
jp
andl
lds
jnp
imul
popf
sub
test
sbb
std
add
popa
jmp
push
sahf
pop
cmc
mov
mov
fsubs
idiv
mov
sub
test
xlat
inc
pop
jbe
cmp
cwtl
and
dec
inc
mov
jnp
ret
xchg
sub
fnstsw
sahf
xchg
cmp
mov
mov
js
add
jne
stc
movsl
fnsave
cmp
sti
and
movsl
cmp
jp
lods
outsb
jae
sbb
adc
les
or
cmp
lahf
jno
aas
mov
pop
pop
outsb
xor
test
sbb
out
and
dec
inc
mov
jae
or
fisttps
add
pop
gs
notl
cmp
mov
cmp
outsb
mov
adc
fcmovb
sub
arpl
push
mov
jnp
ret
add
mov
inc
push
out
sbb
addr16
mov
mov
jnp
rolb
repnz
or
enter
fwait
shlb
push
dec
xlat
lret
shrb
mov
mov
mov
lock
aam
xchg
lret
xor
adcl
and
stos
imul
iret
inc
mull
pop
lds
mov
cmpsb
ja
jo
pusha
mov
mov
lahf
or
addr16
dec
insl
lret
xchg
mov
jnp
push
aas
push
test
push
push
push
sub
fcmovnu
xor
jnp
iret
ds
lods
leave
mov
adc
icebp
xor
in
jmp
push
inc
or
int3
jecxz
out
std
xchg
push
push
fwait
add
fstpt
loope
fwait
mov
pop
inc
inc
movsl
pop
jne
mov
shl
pop
out
out
push
cld
in
loope
ret
test
lods
lahf
ljmp
shll
cmpsl
popf
lret
leave
out
xlat
jp
xor
outsb
std
cwtl
ret
push
xchg
addl
test
out
lods
repnz
addr16
xchg
ja
mov
xchg
and
pop
mov
data16
xor
out
lcall
mov
jle
and
push
lods
das
mov
pop
fidivrl
jne
idiv
inc
jae
ds
movsl
andb
ljmp
or
add
pop
in
sbbb
jmp
stos
mov
pop
mov
push
inc
cmp
cmp
fs
movsb
dec
fstpt
and
in
xor
arpl
stos
rorl
cmp
xchg
repnz
imul
inc
lods
xchg
add
push
sti
lock
adc
rcrb
xchg
imul
adc
jecxz
mov
sbb
adc
inc
sti
xchg
ret
pushf
pop
and
jle
ds
gs
xchg
loope
adc
inc
fwait
jno
xchg
les
sbb
jno
fs
xor
idivl
pop
les
adc
sub
addr16
ljmp
pusha
add
push
fwait
cli
sub
int3
arpl
jnp
lahf
pop
adc
fs
sbb
dec
ds
fwait
mov
inc
add
imul
jnp
fdiv
jns
faddp
lods
sti
cmc
ljmp
mov
xchg
cmp
sub
lock
push
mov
mov
test
jnp
sub
leave
iret
mov
sbb
pop
dec
pop
inc
cmp
mov
lret
std
xchg
or
mov
sub
movsl
push
lea
sti
lret
cmc
lods
dec
mov
stos
add
or
xchg
xor
inc
push
pop
jnp
outsl
rcrl
lock
xor
scas
sub
mov
jnp
dec
xchg
jecxz
mov
cld
pushf
jnp
addr16
clc
mov
lods
out
aam
pop
sbb
adc
addr16
loopne
adcl
imul
mov
test
aad
arpl
ds
mov
adc
pushf
jnp
push
jnp
mov
test
arpl
jnp
pop
es
ljmp
cld
sub
push
cmp
mov
mov
fisubl
jnp
ret
pushf
aad
div
scas
jnp
cwtl
inc
inc
aas
cs
xchg
mov
test
lret
das
jnp
mov
sahf
xchg
xchg
lret
and
mov
stos
pop
movsb
pop
pop
mov
inc
jne
push
jns
call
add
jp
mov
std
sub
dec
out
cs
lods
push
fisttps
clc
repz
mov
mov
cwtl
sub
fstpt
cmp
popa
push
push
repz
cs
cli
xor
fbstp
adc
stos
mov
cmpsl
xchg
add
push
add
mov
lods
push
arpl
sub
arpl
jo
jecxz
xor
or
lahf
mov
pop
and
mov
inc
sub
cmp
adc
lods
push
jnp
jb
fcmovnb
jmp
jnp
sbb
mov
jnp
fsubrp
mov
shlb
sahf
and
cmp
push
imulb
mov
stc
sahf
cmp
repnz
nop
ja
push
incb
push
out
out
push
iret
mov
xor
ljmp
jnp
cwtl
xor
dec
mov
mov
dec
sub
clc
jp
mov
add
mov
int
adc
mov
mov
or
push
jnp
inc
popf
xchg
mov
push
jb
test
or
nop
inc
sbb
add
push
stc
sbb
movsb
mov
jnp,pt
xchg
pop
add
jnp
arpl
outsb
cmp
cmp
mov
ja
into
btsl
jnp
sub
sbb
out
jle
out
movl
stos
insl
jnp
adcb
loope
jne
push
jnp
lret
xchg
jnp
scas
xor
mov
cmp
sub
cmpsl
adcb
bound
and
adc
fnsave
dec
mov
fsubr
insb
aad
mov
pop
pop
mov
sbb
cmp
iret
bound
insl
jnp
xchg
sub
pop
jecxz
loop
insb
sbb
arpl
sbb
loop
mov
push
or
out
flds
sbb
pop
and
int
xor
mov
cmc
cmp
jbe
arpl
lds
repnz
fidivrs
jns
xor
jnp,pn
repz
ror
outsl
sbb
mov
mov
xchg
test
repnz
arpl
push
scas
xchg
rcrl
mov
xchg
insl
sti
lea
aad
lret
mov
jnp
gs
shr
push
pushf
cmpl
fwait
jl
pushf
lea
jnp
inc
and
or
loopne
test
shrb
push
adc
neg
adcl
mov
in
jnp
arpl
sbb
aas
jge
jnp
cmpsb
add
jnp
cmp
jae
daa
adc
ss
enter
sub
and
cmpsb
jecxz
sub
push
and
roll
call
mov
rcll
sub
pop
push
adc
mov
add
js
clc
xchg
jns
jnp
fildl
jne
mov
std
jmp
hlt
jnp
xor
enter
jnp
jmp
cmp
jp
push
sbb
loop
call
or
jge
mov
dec
scas
sub
xor
add
xchg
dec
fucomp
push
sti
js
out
push
xchg
push
ja
lret
lea
add
ljmp
inc
jnp
push
pop
mov
mov
popa
ss
add
mov
mov
push
stos
and
scas
push
inc
cmp
icebp
dec
mov
push
ret
in
mov
adc
idivl
out
jecxz
or
add
jmp
in
insl
jnp
add
or
xchg
mov
outsl
mov
ret
sub
js
adc
add
xor
mov
sbbl
idivb
in
pop
or
inc
and
shll
xor
cmp
jnp
lret
cmp
inc
fstpt
sbb
icebp
add
aaa
xor
mov
sub
std
add
outsb
xchg
call
push
imul
addl
xor
mov
aam
sub
jnp
stc
rolb
cmc
mov
mov
call
adcb
jnp
mov
leave
xor
in
dec
xchg
int
sub
xor
mov
jnp
cmpsb
dec
mov
and
jnp
test
ficomps
cltd
test
cli
jnp
movsl
fs
push
imul
dec
sarb
sbbl
mov
cmp
mov
in
in
dec
test
mov
sub
pushf
int3
xchg
iret
into
popf
cmc
mov
push
imul
shlb
jecxz
jecxz
cwtl
xor
pushl
mov
movsb
adc
movsb
mov
sub
dec
fcomps
xor
dec
xchg
out
lods
stos
sbb
cmp
mov
outsb
jecxz
lea
sbb
and
cmp
mov
ss
fisttps
xor
sub
stc
push
int
mov
inc
clc
mov
mov
lret
xchg
xchg
jno
adc
ret
lret
push
js
lahf
loope
mov
or
int3
fstp
jno
popf
and
pop
sbb
imul
sub
addl
jge
pop
mov
test
xchg
aam
inc
cli
ret
sbb
loopne
xchg
sbb
mov
dec
mov
pushf
jecxz
pop
lret
sub
pusha
dec
mov
arpl
lret
adc
dec
leave
inc
stc
loop,pt
jo
adc
dec
imul
rol
aam
and
dec
cmp
pop
mov
push
xor
dec
jp
mov
push
or
aam
into
fwait
mov
jns
pop
mov
push
fadds
dec
adc
sbb
movsb
das
ret
cli
cmp
jno
insb
in
loop
jle
push
stc
outsl
loopne
mov
jnp
dec
add
push
mov
cld
sub
adc
notl
lds
cld
push
test
mov
push
adc
jge
aad
cmp
cmp
fldt
add
leave
fstpt
jbe
insl
je
inc
outsb
lds
sub
jnp
xor
or
cmp
adc
and
insb
and
jnp
or
adc
push
mov
cltd
jne
lahf
out
fidivrs
mov
inc
mov
ja
cmp
roll
jno
fsubrs
mov
dec
mov
ret
mov
mov
adc
jnp
imul
pop
push
fcomp
sbb
out
enter
pusha
xor
imul
inc
lahf
icebp
cmpl
jo
push
jns
sub
mov
sbb
adc
add
jnp
rol
and
decb
or
mov
pop
sahf
mov
test
mov
mov
or
pop
mov
push
mov
jae
call
mov
ret
xchg
imul
cmp
mov
nop
test
xchg
aam
pusha
lret
fisubs
jno
jnp
sbb
adc
xchg
test
movsb
pop
xchg
fcmovnbe
cmp
cmpsb
adc
enter
xchg
xor
fcmovu
pop
mov
sub
xchg
pop
dec
inc
mov
mov
adc
xor
in
cmp
mov
add
or
jnp
inc
aaa
aam
mov
sahf
mov
inc
add
stos
jnp
and
icebp
shrb
sub
dec
and
sbb
mov
mov
cld
ds
decb
rep
sub
adc
mov
jnp
cltd
mov
push
xor
xchg
insb
and
jmp
push
dec
jnp
cmpsl
repz
pop
fnstcw
daa
movsl
pop
and
sbb
cltd
imul
xchg
add
aam
ror
data16
rcrl
xchg
cmp
xor
sub
sti
lods
xor
jnp
cmp
lock
inc
dec
inc
scas
sub
je
sub
mov
lods
inc
in
ss
std
cmp
das
ljmp
dec
test
jbe
lods
add
lret
into
jge
mov
jge
std
rorb
jno
gs
pop
jle
push
lahf
test
cmp
ret
add
lahf
jp
mov
jnp
mov
jnp
pop
or
inc
shlb
push
jb
popa
push
cmp
lods
mov
jp
gs
cltd
bound
jbe
dec
fnsave
sti
add
cmp
repz
imul
push
mov
or
cmc
jnp
dec
xlat
stc
lret
mov
in
stos
test
mov
xchg
rcl
cld
and
jnp
mov
and
stc
in
sti
int
xor
imul
mov
icebp
and
test
lods
adc
adc
or
jnp
ret
roll
in
pop
cltd
xorl
mov
cltd
jle
je
mov
push
jnp
dec
push
push
mov
adc
push
push
mov
pop
push
inc
inc
arpl
mov
dec
or
fldt
xchg
in
push
loopne
enter
fucomp
das
cli
mov
push
stos
jo
inc
jge
jnp
push
push
out
mov
mov
sub
lahf
outsl
js
das
mov
push
fcmovnb
test
pop
xchg
add
loop
jns
or
cmp
jb
pop
jg
loope
lea
test
fucomi
mov
push
scas
jnp
fwait
dec
in
stos
addl
xchg
xchg
sbb
imul
addl
aaa
imul
xchg
arpl
or
repnz
push
dec
test
mov
subb
dec
cmp
int3
sbb
mov
in
rolb
pop
jecxz
notrack
push
arpl
adc
sbb
je
adc
mov
in
jns
stos
out
adc
mov
or
and
test
ds
jnp
pop
scas
insl
lods
mov
xor
sub
push
hlt
xchg
sub
cld
stc
jnp
mov
xor
jnp
mov
cmp
ret
aad
ljmp
xchg
pop
mov
jno
or
cltd
aas
cmp
jbe
cmp
enterw
sub
mov
insl
lds
pop
mov
xchg
push
ret
fsubrl
adc
test
in
pop
pushf
xor
jle
cltd
xor
push
xchg
mov
fwait
mov
int
mov
fisubrs
jno
inc
cs
sub
jb
lea
nop
cli
push
js
in
lds
repz
shrl
xchg
cld
icebp
cmp
xor
cmp
xor
cli
fptan
cmp
lods
jl
jg
movsb
ror
out
xlat
jb
outsb
mov
xchg
mov
arpl
xchg
daa
mov
pop
mov
fs
lcall
mov
ret
push
ds
imul
jae
stos
inc
out
test
stos
ss
sti
pop
jp
bound
movsb
cmp
sub
es
test
xchg
pop
rorl
sbb
icebp
cmp
cmp
out
ljmp
pop
jne
jnp
fwait
xorl
dec
and
cltd
mov
cmp
mov
cli
into
lret
movsl
pop
lds
gs
mov
xchg
dec
add
cmp
push
xchg
adc
cmp
repz
bound
sbb
jmp
xor
test
and
dec
loop
pusha
outsl
popf
push
insl
sub
std
frstor
jo
sti
popf
stos
mov
and
fisttpll
sbb
pusha
out
gs
lods
pushf
jnp
cmp
in
aam
cltd
addr16
adc
iret
neg
ret
dec
xchg
test
insl
jnp
xor
aam
mov
cmp
les
lock
pop
in
inc
and
mov
or
sti
or
shlb
dec
push
test
scas
outsl
push
cld
imul
sub
jnp
jecxz
cmc
das
adc
mov
push
lds
push
mov
xchg
cltd
in
push
stc
orb
mov
stos
mov
cmp
sub
sahf
out
in
test
mov
jg
mov
adc
lcall
pop
mull
add
ja
nop
push
and
les
mov
adc
sub
mov
insb
jnp
dec
les
xchg
sub
add
lahf
outsb
pushf
subl
fs
push
adc
inc
testl
outsb
into
popa
inc
nop
jno
fisttpll
mov
sub
mov
cmpsb
inc
das
test
or
cmpsl
std
xchg
xlat
jecxz
fistl
xor
pushf
fnstcw
lret
ret
or
mov
lods
and
arpl
push
sbb
sti
mov
cmc
loop
mov
xchg
leave
repnz
push
pop
push
dec
jnp
ret
lcall
xchg
pop
iret
sarl
insl
xchg
inc
leave
insb
stc
lcall
sbbl
ljmp
jbe
leave
push
or
sub
addb
aam
lea
or
fsts
mov
and
mov
jnp
dec
jecxz
cs
mov
mov
enter
imul
jnp
sbb
pop
jnp
movsl
aaa
aad
sar
jp
xchg
dec
popf
sub
sbb
mov
mov
sbb
jnp
lods
enter
jnp
aas
pop
sub
roll
daa
and
jle
sti
sub
mov
xlat
inc
or
pop
xor
jbe
movaps
jnp
mov
push
es
add
loop
xor
lcall
imul
imul
jne
or
icebp
jnp
jecxz
loop
mov
jnp
cmp
ror
adc
jnp
popf
rorb
outsl
out
jnp
out
jbe
insl
mov
pop
into
xchg
aam
shll
clc
das
data16
cmp
hlt
jnp
movl
ret
pop
xchg
lret
pop
add
jno
inc
push
dec
mov
push
and
mov
cmp
add
imul
dec
mov
pop
outsb
lret
mov
mov
xlat
cld
nop
cmp
icebp
sbb
xor
lods
push
loop
je
stc
sti
adc
sti
xchg
mov
outsb
mov
or
push
and
ficoml
jl
add
push
jo
test
sub
int3
stc
bound
pop
loopne
ds
mov
add
test
jecxz
add
and
movsb
fiaddl
push
dec
les
in
inc
push
add
das
mov
shrb
jne
mov
idivl
sbb
mov
pop
or
xchg
jle
fisubrs
mov
mov
cmp
jnp
pop
cmp
mov
xchg
push
jp
jnp
shrb
sarb
pushf
jecxz
mov
add
sbb
sbb
js
gs
jnp
rol
cmpsl
xchg
mov
sbb
pop
mov
push
cmpsb
out
orb
or
cmp
arpl
cmp
fnsave
rcll
mov
mov
inc
jecxz
or
test
mov
outsb
cmp
aas
jns
push
stos
and
lods
push
inc
xchg
push
fwait
add
or
test
je
icebp
sub
mov
xchg
cmp
cmp
add
and
fisubl
fadds
cmp
pop
jecxz
xor
and
sti
mov
mov
mov
insb
lret
xor
shrl
loopne
cmp
push
jne
mov
adc
pop
xchg
bound
fsubp
lret
push
ffreep
into
xchg
mov
jnp
dec
push
in
cld
jns
jnp
dec
shlb
and
jnp
loopne
jp
push
fidivrl
fsubp
insb
jb
int
cltd
mov
jnp
ret
lds
in
ret
mov
push
js
fsubl
mov
sub
jnp
notl
adc
jnp
mov
xor
loopne
mov
lret
lock
sbb
xchg
shr
dec
pop
sti
repnz
and
jnp
lods
pop
adc
incb
sub
daa
lcall
push
roll
jno
cmp
movsl
outsl
fwait
mov
xor
int3
jnp
sbb
pop
xchg
jnp
and
mov
mov
push
js
fcomp
popf
jnp
scas
idivl
pop
cwtl
jnp
pop
imul
and
mov
jno
add
cmp
arpl
repnz
clc
mov
push
pushf
ret
pop
mov
outsb
cmp
sti
sbb
lahf
ljmp
sub
or
jnp
insl
das
into
inc
aaa
gs
sub
stos
jnp
jecxz
lret
insl
sarl
andb
hlt
das
sarb
insb
inc
dec
cwtl
rorl
and
mov
xchg
cmp
jge
xor
sbb
loop
add
push
mov
jge
sbb
mov
dec
xchg
mov
fstp
dec
cmp
dec
shr
insl
cmp
xchg
fldcw
icebp
pop
loop
je
xchg
cltd
adc
in
jnp
lcall
dec
mov
mov
std
and
xchg
sti
or
sbb
int
mov
jb
adc
mov
jae
inc
xlat
out
cmp
pop
jp
sahf
fsts
fstpt
jns
leave
out
jne
mov
adc
cmp
inc
inc
lods
test
add
popf
testb
or
cmpb
fwait
sub
adc
out
cmp
sti
jne
xor
rorb
dec
xchg
cmc
or
ret
xor
daa
dec
jnp
fldl
loop
push
adc
call
pop
jnp
cmp
dec
push
fcomip
addl
mov
sti
sbb
jnp
or
jmp
arpl
pop
xor
aam
add
mov
movsl
in
add
jne
lods
lcall
or
ss
mov
dec
out
adc
mov
loope
mov
fisubrs
mov
mov
lret
scas
test
jnp
stc
add
data16
js
out
push
rcl
out
rcll
scas
xor
inc
xchg
fcomps
ja
xchg
movsb
xlat
imull
ret
daa
xchg
xor
cmpsl
jg
in
lods
mov
cmp
test
or
and
rolb
fadds
call
sub
inc
mov
mov
out
ret
shll
icebp
fstp
pop
stc
pop
jnp
push
xor
adc
mov
fldt
adc
cmp
aaa
mov
cmpsl
sbb
sub
mov
jge,pn
dec
gs
test
fdivl
push
arpl
shll
fistpl
aam
jnp
pop
cmpsb
nop
jae
orl
mov
add
and
push
scas
test
sbb
xor
xor
mov
inc
aaa
repnz
xor
push
mov
sub
clc
or
aam
dec
ficompl
jnp
xchg
hlt
xor
or
sbb
pusha
sbb
xchg
lahf
add
jbe
test
in
out
or
jmp
push
popa
data16
mov
push
pop
jbe
es
lret
add
jl
ljmp
fimull
decb
mov
dec
sub
mov
insl
cmp
jne
js
cld
adc
xor
mov
jnp
hlt
mov
jmp
push
stos
orb
add
cwtl
jnp
pop
shrl
xchg
pushf
mov
jnp
push
pusha
stos
push
je
jnp
sti
cmp
aad
jnp
inc
ja
push
les
mov
add
sub
and
inc
gs
hlt
cmpl
divl
jnp
sarb
test
and
fdivs
sti
push
mov
push
aaa
xchg
arpl
jo
cmc
jp
xchg
mov
or
fldt
icebp
nop
adc
or
push
in
jb
inc
fwait
sub
cwtl
out
fidivs
rcrb
icebp
stc
mov
das
rcrb
leave
mov
jl
orb
lret
adc
outsb
sbb
mov
rorl
jnp
mov
popa
mov
filds
mov
cwtl
xchg
pop
xor
mov
jecxz
sbb
data16
rcrb
jns
pusha
jnp
push
inc
insb
push
ret
jge
mov
cltd
aas
mov
push
or
fwait
sti
mov
cld
jbe
push
sarl
xlat
addb
and
jnp
or
pop
pop
mov
mov
sub
sub
xor
xchg
stc
sbbb
push
scas
pop
repz
lods
test
cli
popa
add
xlat
jne
sti
xchg
cmc
orl
pop
jb
fisubl
adc
pop
sub
cmpsb
jle
add
arpl
lods
sbb
ficoml
bound
sarl
dec
mov
lea
iret
push
dec
jnp
adc
mov
sbb
sbb
adc
mov
mov
cmp
sub
mov
add
cmp
mov
jnp
jae
cmpsb
ficomps
cmpl
rcr
aas
je
sbb
dec
xor
jnp
mov
add
pusha
test
dec
ja
rorb
pop
lds
mov
nop
jnp
cwtl
mov
mov
pop
pop
frstor
or
sub
xor
push
push
cld
add
stos
jae
mov
test
xor
sti
jg
mov
nop
loope
sbb
cli
cmp
push
sub
clc
movsl
jnp
das
dec
lret
mov
test
adc
cmp
aas
fst
jnp
mov
shll
sub
ljmp
xchg
andb
jbe
pop
jp
jb
arpl
lods
sub
repz
pop
popf
xchg
adc
xchg
cli
sti
mov
jle
loopne
outsl
jnp
mov
pop
jne
dec
mov
pop
jbe
pop
scas
cltd
gs
jnp
pop
test
push
sub
mov
aaa
mov
ss
and
nopl
cltd
out
mov
test
lret
jnp
cmp
dec
sub
cmc
push
jnp
dec
mov
adc
mov
or
xor
jne
xor
mov
fidivrs
add
push
xchg
jnp
pop
into
mov
cwtl
jnp
jl
mov
and
jnp
mov
and
mov
lret
or
test
mov
ret
or
pop
push
mov
xorl
xorb
xorl
mov
pop
sub
cli
icebp
pop
dec
popa
mov
rorb
push
lahf
mov
aam
cli
and
nop
push
icebp
fistl
or
xchg
movsb
pushf
dec
sub
int
jnp
cmp
arpl
or
data16
adc
xor
jnp
and
cmc
std
hlt
push
fdivrl
lea
jns
imul
dec
add
xchg
pop
out
mov
repz
jnp
mov
insb
push
sbb
adc
pop
xlat
jnp
int
cld
hlt
mov
jnp
daa
out
adcb
cmp
sarl
xchg
mov
jle
imul
cli
push
jnp
jo
mov
bound
pop
xchg
xor
mov
mov
lock
nop
lret
mov
mov
adc
xor
fisttpl
rclb
jnp
or
add
leave
arpl
push
mov
mov
inc
insb
xchg
and
test
mov
ret
mov
scas
ret
pop
fsts
lock
jmp
in
bound
lret
xchg
sub
and
arpl
mov
or
lahf
in
bound
xchg
cmpsb
sti
mov
arpl
sub
xchg
lcall
push
jl
test
mov
ja
add
sbb
fidivrl
mov
xor
sbb
sub
cmpsb
jge
jnp
loope
ljmp
jnp
cmp
daa
push
iret
mov
stos
xchg
jnp
sub
add
fwait
mov
push
sub
add
cltd
mov
push
jnp
sarl
sub
arpl
movsb
in
out
xabort
jmp
fs
jnp
scas
add
xchg
jnp
sub
fildll
outsl
insl
daa
jnp
out
repnz
popa
jmp
jnp
in
icebp
bswap
outsl
mov
jnp
out
mov
pop
xchg
xor
jnp
mov
cmp
les
pushf
cld
cmpl
add
pop
jnp
hlt
cmp
jnp
adc
xchg
gs
movsb
ss
and
dec
scas
std
outsl
dec
pop
jle
cmpsl
shlb
leave
mov
out
mov
xchg
push
push
cmp
push
mov
fcompl
es
push
arpl
cld
into
jmp
enter
lcall
pop
pop
nop
popa
jnp
xchg
mov
jnp
xchg
mov
push
jnp
mov
lds
in
push
xchg
dec
push
andl
cmp
fs
stc
lcall
imul
pop
adc
mov
inc
fmuls
out
repz
mov
cmc
pop
jecxz
cwtl
push
out
js
cmpsl
add
sti
sub
jb
inc
int
ja
loope
mov
incl
mov
in
int3
fstpt
flds
pop
ja
popa
enter
mov
repnz
roll
inc
test
clc
dec
jno
mov
int
xchg
nop
xor
outsb
roll
insl
shl
cmp
push
ret
sub
das
xchg
inc
add
bound
mov
pop
fstl
fwait
jnp
fisubrl
sub
imul
xchg
mov
lahf
cmpsl
cltd
add
or
mov
cs
mov
jecxz
ret
daa
fsubs
cmp
add
mov
pop
out
xchg
in
test
leave
lret
lods
imul
je
test
sub
push
jno
dec
fisubl
jae
mov
xchg
sub
loope
xchg
lret
insb
cli
aam
stos
imul
loop
lods
popa
cmp
dec
cmpsl
pop
stos
ja
jnp
jno
pop
xor
in
shrl
xor
mov
push
sti
jno
xchg
icebp
jecxz
pop
sahf
jmp
in
loop
xchg
fidivl
std
movsb
jno
push
sub
hlt
push
mov
popl
dec
mov
mov
pop
test
int
test
mov
gs
mov
xor
fdivrs
pop
test
stos
push
aas
sarl
cmp
mov
fimuls
mov
dec
and
add
cmpsl
into
ficomps
ret
xchg
insl
xor
pop
and
mov
rclb
sbb
mov
cltd
sub
mov
in
jnp
call
dec
bswap
xchg
mov
icebp
sbb
test
or
jnp
out
dec
mov
sub
loopne
push
sbb
jnp
movsb
insb
sub
adc
pop
jae
mov
add
ret
push
lods
cmp
mov
push
int3
mov
cmpsl
mov
mov
addr16
cmp
jnp
inc
push
iret
repnz
sarb
push
or
pop
adcl
mov
cmp
fs
mov
test
dec
pop
cmp
and
mov
mov
inc
push
jnp
out
mov
loope
push
mov
jo
and
je
push
es
fistps
xor
jno
mov
push
ds
lea
insb
jnp
xchg
icebp
std
cmp
call
in
imul
pop
scas
testl
xchg
inc
loopne
and
mov
jb
je
xor
test
lret
fucomi
jo
stos
scas
out
inc
mov
sarl
mov
mov
mov
inc
inc
sbb
mov
and
push
mov
daa
jnp
or
mov
cmp
mov
cmp
enter
test
imul
jae
rcl
sub
pop
dec
sub
push
inc
pop
mov
cmp
xchg
roll
lret
mov
dec
int
xor
inc
dec
cmp
add
mov
lcall
movsl
fcmovnbe
pop
loope
jl
in
outsb
rcrl
jg
xchg
xchg
xor
fwait
adc
pop
mov
call
and
add
movsb
mov
jns
ret
xchg
mov
pop
sbb
movsb
mov
js
sub
adc
push
ds
sbb
mov
jnp
scas
add
test
jno
mov
je
jnp
aad
out
pusha
or
add
stos
ljmp
xchg
xchg
mov
cmc
mov
dec
mov
dec
adc
popa
mov
movsl
push
pop
mov
xchg
jnp
shl
lods
push
xchg
test
pop
mov
pop
lods
jnp
adc
push
icebp
fdivrs
add
pop
add
pop
and
mov
mov
or
xor
popa
shrb
addr16
adc
push
xor
out
mov
pop
jnp,pt
fs
scas
js
mov
mov
cld
jnp
cmc
ljmp
scas
jmp
faddp
dec
xchg
sbb
xchg
inc
adc
adc
lock
mov
sub
jle
jecxz
cli
pop
adc
sbb
and
adc
xchg
cmpsl
stc
movsb
cmc
xchg
adc
and
mov
mov
mov
inc
lea
adc
stos
sbb
xor
xchg
mov
sub
xchg
jb
lcall
mov
cwtl
mov
fildll
mov
fadd
mov
filds
push
sub
xor
stos
xchg
imul
jae
add
hlt
jle
lret
sub
ja
and
pop
mov
push
lea
fwait
sbb
hlt
test
xchg
aad
adc
mov
js
mov
adc
out
dec
decb
xchg
jecxz
outsl
add
dec
stos
cmp
sbb
andl
adc
sahf
sarl
mov
into
daa
sub
or
divl
cmpl
fistps
jnp
push
cmp
mov
insb
repz
add
mov
scas
testl
jnp
aaa
pop
orb
push
sub
shlb
jge
int3
sub
jnp
cmp
movsbl
test
xor
mov
jnp
push
mov
fsubrs
clc
adc
jnp
pop
sub
arpl
hlt
lods
inc
mov
cmpsl
cmp
jecxz
stos
pop
push
adc
mov
xlat
movsl
std
mov
sbb
lret
in
xchg
cmp
pop
lret
fists
adc
jg
jg
mov
aad
test
dec
js
mov
dec
sub
scas
cmc
test
xlat
out
xor
pop
stc
aad
inc
icebp
into
xchg
aas
scas
imul
repz
ljmp
jnp
dec
pop
addb
dec
imul
mov
adc
test
sbb
jnp
or
mov
popa
sbb
fsubp
push
add
movsl
xor
jnp
inc
dec
bound
push
out
ret
and
pop
repnz
mov
mov
push
ja
mov
xor
jnp
in
sub
mov
pushf
aas
leave
and
dec
inc
sbb
jnp
add
pop
sbb
xchg
aam
int
shl
jg
jp
stos
mov
loopne
mov
aam
ss
adc
movsl
imul
sub
lcall
mov
and
push
pop
pop
shr
out
adc
nop
sub
cli
push
mov
sub
call
mov
cltd
rcr
pop
xor
enter
xor
jnp
mov
into
mov
sub
roll
fcoml
lds
push
xchg
pop
ficoml
ret
mov
jnp
cltd
jmp
int3
mov
jbe
aam
popa
pop
xor
inc
arpl
cmp
ret
mov
cmp
jnp
nop
lods
dec
jge
jnp
pop
lcall
mov
jl
mov
mov
cmp
jnp
int3
fsubrl
iret
xchg
arpl
jmp
fstl
popf
std
cmc
sbb
fildl
sahf
dec
push
inc
cmp
xchg
cwtl
sti
ret
clc
fwait
sub
add
js
stos
adcl
mov
mov
int3
dec
cltd
lods
into
aas
xchg
mov
lods
fs
stc
test
inc
arpl
adc
lret
mov
xchg
fstpl
pop
mov
movsl
and
adc
pop
imul
nop
stos
xchg
pusha
pop
mov
movnti
xor
jge
add
test
sub
insl
mov
mov
imul
lock
aas
xor
jnp
cmp
or
outsl
popf
mov
or
xchg
dec
test
pop
jnp
add
lods
add
pop
xchg
pop
pop
cmp
mov
int
loopne
jnp
jne
jb
outsb
lds
jnp
pop
pop
dec
adc
stc
xchg
add
xchg
jnp
dec
add
mov
movsl
nop
mov
pop
dec
jl
push
movsl
sbbb
jnp
sahf
sub
fnstenv
frstpm(287
add
cwtl
lods
jle
sti
ret
sbb
pusha
xor
ja
sarb
jno
push
or
mov
xchg
addr16
lods
mov
xor
stos
dec
xorl
test
insb
scas
cmp
xchg
fsubrs
jnp
mov
mov
fs
hlt
adc
sti
shrb
xchg
iret
add
jge
gs
lds
js
mov
sti
add
test
pop
cmpsb
jns
jnp
dec
ljmp
and
addr16
inc
sarb
mov
jnp
add
mov
lret
sub
cwtl
fadd
pop
and
lret
or
sub
mov
jnp
xor
sbb
shr
pop
xchg
mov
aad
mov
nop
shll
jnp
push
inc
adc
xchg
jns
mov
insb
inc
popf
pop
cli
inc
lds
aam
adc
jnp
sub
lods
shlb
das
dec
or
adc
sub
mov
lahf
jae
das
or
icebp
scas
jnp
int
lret
ljmp
sahf
inc
or
adc
cwtl
leave
pop
jnp
lret
mov
or
test
sarb
cmp
sti
cs
cli
add
cwtl
push
xor
jnp
cmp
and
xor
cwtl
jae
push
jnp
pop
inc
loopne
and
jnp
xchg
lods
jg
xor
jg
lahf
int3
and
mov
add
and
ret
and
les
test
fdiv
xchg
lret
sbb
mov
out
nop
xor
sbb
mov
jnp
icebp
ficoml
xchg
shll
inc
inc
fildl
nop
xchg
add
jnp
pusha
xor
pop
mov
mov
mov
ja
mov
dec
in
push
hlt
idivl
jne
pop
mov
sti
and
mov
adc
push
lods
add
xor
data16
andb
push
loopne
xchg
xchg
arpl
imulb
arpl
or
pop
aam
mov
int
cmp
dec
outsb
mov
cld
mov
adc
sti
outsl
inc
pop
daa
jnp
int3
arpl
or
dec
jg
test
lret
repnz
push
lock
mov
out
insb
adc
mov
pushf
jecxz
arpl
mov
dec
test
xchg
dec
lahf
imul
mov
inc
ret
cmpsl
pop
stos
jnp
fcoms
mov
jnp
movsl
in
pop
jno
add
test
les
jmp
sbb
fstpt
push
inc
mov
jbe
cli
jnp
jge
enter
or
hlt
jnp
inc
repz
imul
sub
in
xchg
jnp
jne
call
jnp
xchg
jb
popf
mov
xor
dec
pushf
jnp
xlat
jg
adc
xor
add
dec
jb
iret
aas
sbb
mov
xchg
cld
testb
mov
and
fistl
fdivrs
cwtl
aam
push
and
lcall
fisubrl
cmp
pusha
stos
jnp
scas
repnz
mov
adc
xor
in
lcall
jl
and
lret
dec
jmp
mov
xlat
xor
mov
imul
sarb
nop
add
jne
mov
xor
or
sbb
pop
dec
sub
mov
ljmp
js
or
push
xchg
and
adc
popa
push
dec
sar
mov
dec
out
cwtl
rclb
ret
jnp
cmp
sub
in
flds
cmc
inc
arpl
imul
outsb
sub
add
mov
popf
adc
lcall
push
mov
jecxz
hlt
subl
or
sbb
dec
dec
add
add
dec
arpl
sbbl
dec
stc
xor
pop
mov
divb
mov
int3
xor
xchg
insl
jg
sti
mov
and
mov
and
adc
and
xlat
mov
addr16
xor
fisttpll
test
lock
dec
mov
xchg
pop
fsubrs
js
xor
mov
in
jle
mov
inc
and
xchg
push
jbe
sahf
pop
push
mov
or
stc
or
pop
push
pusha
arpl
int3
rolb
pop
inc
add
sbb
test
pushf
jno
mov
mov
dec
jnp
repz
and
mov
imul
xchg
inc
ds
test
push
or
loope
and
sbb
test
cli
cmp
jnp
rorb
mov
jnp
jne
sub
cwtl
jp
fisubl
inc
fisttpl
decb
negb
ror
les
loope
adc
xor
shrb
jo
repnz
mov
xchg
pop
add
mov
pop
lock
xor
xchg
movsl
mov
push
out
push
jnp
sbb
push
and
jp
je
leave
enter
cmp
test
aaa
push
sub
jnp
imul
ja
mov
sbb
pusha
mov
sti
mov
mov
mov
dec
jno
shr
cmp
jnp
mov
push
out
pop
sbb
cld
dec
sub
stc
nop
cmp
gs
imul
push
cld
arpl
fsts
xchg
mov
loopne
adcl
or
out
in
cmp
repnz
pop
icebp
cwtl
jle
mov
or
pop
popf
mov
clc
cmp
mov
adc
jnp
xor
xchg
cmp
mov
test
es
cwtl
ss
mov
inc
ror
mov
jnp
mov
jae
lcall
cmc
out
inc
ds
ja
shll
inc
cmp
lods
lcall
mov
ror
add
sub
xchg
lahf
fs
push
cmp
ja
cmc
test
imull
dec
adc
int
push
cmp
cmp
push
adc
fsub
mov
imul
jnp
inc
dec
cmp
cmp
shll
xchg
mov
insb
mov
inc
pop
ss
imul
in
jnp
pop
lock
cli
jl
jnp
push
sbb
mov
push
or
test
pop
cmp
lea
imul
inc
xchg
sbb
clc
imul
sbb
outsb
xor
ret
or
jnp
mov
pop
out
mov
std
xchg
cmp
jnp
mov
or
les
out
add
xchg
pop
xchg
cmpb
or
add
sub
addr16
mov
mov
sbb
pop
jnp
fldl
ss
mov
mov
loop
or
pop
cmpsl
jnp
jg
addr16
into
std
mov
mov
es
mov
repnz
out
xchg
xchg
repz
scas
pop
pop
mov
test
xchg
mov
or
stc
xor
out
xchg
fsubrp
sti
test
fwait
je
add
xchg
fs
and
push
idivl
xchg
sub
jnp
xor
push
jp
ja
outsl
jmp
jnp
or
insb
pop
fdivp
jnp
aaa
lea
scas
ljmp
inc
test
out
es
mov
mov
jns
out
out
jnp
notb
jnp
dec
imul
fdivl
cmp
insb
add
outsb
jnp
cwtl
sbb
nop
mov
jo
or
or
mov
jl
sub
inc
packuswb
sub
sbb
mov
jnp
inc
repz
lahf
lods
addr16
jg
adcb
mov
xchg
cmp
mov
call
cmpsl
adc
enter
mov
adc
fstpl
cmp
add
loope
or
mov
icebp
mov
add
sbbl
jns
sbb
sub
xlat
dec
inc
cmp
movntps
inc
imul
scas
mov
push
fwait
je
mov
loope
js
mov
add
lret
inc
mov
sbb
sub
jnp
sar
mov
nop
pop
mov
test
fidivl
scas
xchg
jb
call
pop
clc
jbe
jno
arpl
je
cmc
push
xor
xor
in
out
jae
jnp
cmc
dec
test
jnp
sbb
push
jo
sbb
jno
cmp
fdivrs
push
inc
push
mov
add
outsb
jnp
jge
iret
shll
mov
push
fucompp
aaa
pop
jnp
mov
or
call
push
mov
jp
inc
xor
fstps
leave
jae
jnp
bound
jnp
dec
aaa
cmp
mov
sbb
push
movsb
sbb
bound
sbb
sub
and
cmp
pop
mov
mov
outsb
inc
cli
adc
or
mov
jnp
push
icebp
xchg
lret
in
jnp
jno
repz
les
adc
cmpl
outsb
fldenv
and
jnp
mov
jecxz
and
xchg
test
gs
mov
outsb
jnp
test
cmp
jnp
lods
xchg
sbb
jne
dec
test
xor
mov
aas
sub
pop
mov
jae
pushf
mov
mov
fistpll
sbbb
sti
xchg
jg
ret
cltd
jns
adc
inc
out
iret
sub
test
adc
aaa
push
test
inc
movsl
fidivs
nop
cmp
mov
rorb
sbb
pop
mov
adc
icebp
inc
cwtl
adc
dec
mov
jnp
xor
jae
cmp
lds
pushf
les
ret
mov
test
test
fwait
jb
cmp
movsl
adc
pop
push
outsl
test
mov
inc
sahf
loope
outsb
xchg
dec
test
into
rolb
inc
ja
data16
cmp
jg
test
aaa
sbb
sbb
pop
sbbb
cmp
dec
cwtl
ds
push
test
mov
jbe
jmp
sbb
arpl
shlb
push
cmp
out
sti
xchg
ds
xchg
dec
daa
or
fcomps
into
rcrl
pop
push
jnp
fs
addr16
test
test
repz
je
inc
jl
and
scas
std
adc
stos
jnp
rolb
adc
adc
jnp
pop
mov
inc
mov
stos
iret
std
jmp
lods
jnp
mov
fidivrs
add
pushf
cmc
push
fadd
lcall
sahf
add
lods
jnp
xor
push
imul
pop
imul
jb
fcompl
jmp
cmc
mov
fldl
mov
ja
sbb
inc
int3
outsl
imul
jnp
mov
jl
cmp
pop
mov
sbb
xchg
cmp
jb
jns
jnp
daa
mov
cmp
je
mov
mov
cwtl
adc
jnp
insl
aam
scas
jnp
xchg
or
jge
sbb
roll
add
adc
adc
jecxz
aas
imul
mov
dec
jnp
push
add
dec
sbb
mov
testb
add
jnp
or
ret
nop
xchg
adc
cmpl
push
jnp
adc
loop
mov
ret
or
int
dec
call
jnp
mov
sbb
into
cmp
setle
int3
push
ret
inc
add
jnp
jae
out
loopne
cmpb
mov
orb
inc
cmp
and
dec
pop
adc
mov
push
lcall
jnp
cmp
push
mov
loope
xchg
jnp
mulb
adc
add
xchg
testl
fdivrs
inc
sub
mov
cmp
inc
cmpsb
jnp
fs
mov
inc
das
add
xor
test
aad
je
insl
dec
imull
push
pop
rcrl
icebp
mov
sbb
pop
and
jnp
or
sub
out
pop
xchg
jnp
addb
cwtl
dec
push
jmp
adc
jbe
mov
jnp
scas
sbb
jmp
call
pop
ja
flds
movsb
cmp
xchg
pusha
hlt
call
add
xor
jnp
mov
imul
hlt
fdivs
xor
push
xchg
dec
test
fwait
cwtl
dec
mov
bound
mov
cmp
lds
cmp
test
repz
mov
xchg
insb
bound
jge
mov
dec
sti
and
mov
jnp
or
sbb
pop
push
out
sti
jns
fs
leave
jnp
jno
sbb
add
sbb
jmp
fisttpl
movsb
push
imul
add
push
lahf
inc
jl
push
inc
jnp
xchg
add
testb
fistl
jnp
out
add
repnz
mov
cmp
xchg
sub
jge
jnp
push
gs
lcall
lret
aaa
dec
jnp
int3
adc
outsb
stos
test
enter
push
sbb
dec
xchg
call
imul
icebp
hlt
daa
dec
jnp
ja
mov
sub
push
add
cmp
xor
mov
or
cmp
jnp
jle
add
or
sub
push
dec
je
jnp
jp
xor
mov
sarb
lds
sarb
jb
xchg
pop
in
add
push
jnp
add
pop
push
fisttpll
lods
jns
movsb
dec
aas
jnp
ret
lret
or
xor
das
pop
mov
rclb
jnp
dec
std
jle
pusha
cwtl
dec
xchg
andb
je
popf
ret
cli
arpl
mov
inc
cmp
montmul
cmpsb
les
or
add
aaa
cld
jnp
pop
rorl
push
mov
shrb
adc
mov
loope
ljmp
ds
insb
sti
clc
jnp
push
push
aam
mov
pop
sbb
mov
cmc
jne
mov
dec
data16
pop
jns
mov
mov
jnp
outsb
jmp
and
pusha
icebp
jnp
dec
lea
and
lahf
mov
popa
inc
mov
aas
int
lcall
xor
ret
inc
xchg
pusha
dec
jb
dec
jnp
jno
jae
movsl
and
repz
rcll
aas
cmp
movaps
mov
ja
out
mov
js
lods
cwtl
lret
popa
icebp
sub
in
fidivrs
out
fsubrl
inc
cwtl
xchg
mov
in
dec
lods
or
jnp
sub
add
es
sahf
inc
insl
test
or
dec
scas
mov
arpl
aas
mov
packsswb
sub
jle
ja
sub
push
jecxz
out
xchg
aam
cli
jnp
xor
mov
sbb
sti
xchg
push
xor
shlb
pop
cmp
cmp
mov
add
sbb
scas
fnstcw
frstor
rclb
xor
sub
in
xchg
cmpsl
gs
mov
stc
dec
push
pop
add
xchg
mov
adc
push
jno
mov
repz
add
push
cmp
sub
jecxz
cmp
insl
dec
sahf
test
cmp
xchg
adc
xor
xchg
mov
jmp
pop
add
push
shrb
test
cmp
jge
fdivrs
std
pusha
jae
jb
xchg
loopne
fsubrl
mov
add
fistpll
lods
mov
jl
test
push
mov
insb
loope
enter
cmp
or
jnp
push
xchg
xchg
mov
je
cmc
fdivrl
xor
jnp
push
inc
std
sti
mov
int3
fistpl
jbe
ljmp
dec
jmp
fld
shrb
add
jnp
pop
imul
dec
mov
stos
jle
pop
mov
cwtl
mov
adc
mov
jmp
jnp
lock
jecxz
test
sahf
enter
xchg
pop
jnp
cmc
arpl
jge
fdivp
jnp
lods
clc
cs
or
mov
incl
jnp
mov
aas
repnz
scas
movsl
xchg
daa
cli
add
mov
fildl
cmp
jecxz
fwait
mov
ret
lcall
push
mov
leave
pop
imul
sub
test
scas
scas
push
cltd
jnp
push
inc
lcall
cwtl
fisttpll
mov
sti
add
insl
jnp
mov
mov
orb
pop
aad
bnd
mov
out
mov
inc
sti
cltd
xchg
mov
mov
push
pop
mov
lea
xchg
loopne
enter
addb
stos
ret
jne
hlt
adc
rolb
or
out
sbb
inc
jnp
mov
or
jmp
loop
filds
add
clc
jno
xlat
or
or
fcoml
ja
jp
pop
jge
jnp
jmp
pop
rorb
mov
hlt
filds
lret
in
pop
ret
sbb
mov
mov
cltd
dec
push
repnz
jnp
cmpsb
pop
lock
out
pusha
dec
aad
xchg
iret
lcall
aas
into
xchg
in
mov
scas
es
in
xor
mov
mov
inc
addl
sub
sbb
mov
pop
nop
mov
ror
enter
lcall
test
add
neg
dec
mov
in
insl
jo
mov
fisubrl
mov
jae
js
inc
cmp
push
inc
pop
xchg
mov
inc
pop
cmpb
jnp
mov
lcall
jns
sti
sub
enter
cmp
inc
jnp
mov
cltd
adc
sti
cmpb
mov
pop
jns
gs
inc
sub
xchg
jnp
xorb
stc
cmp
out
es
mov
testl
xor
shrl
addb
dec
jl
outsb
andl
adc
pusha
in
jnp
adc
mov
fucomip
cmp
jnp
les
add
pop
jnp
loopne
lock
mov
jnp
jge
dec
out
pop
imul
cmpsb
fstl
xchg
mov
repz
leave
add
arpl
scas
jmp
fsubr
fwait
inc
mov
and
mov
push
les
lds
movsl
push
dec
xor
mov
jnp
test
fcoml
xor
mov
lds
or
hlt
les
outsl
xchg
jnp
push
adc
dec
inc
or
push
cwtl
pushf
imul
push
cmp
data16
dec
lods
mov
out
jecxz
xchg
mov
mov
or
cld
xor
pop
cltd
dec
xchg
mov
loop
rol
stos
cwtl
sbb
scas
xor
jmp
jne
lcall
mov
cmp
ret
inc
or
cltd
lret
pushf
cmp
mov
push
dec
hlt
movsl
mov
mov
inc
daa
push
jnp
fidivs
in
sti
test
cmp
sti
loop
xchg
xor
jnp
jle
and
shll
aas
es
mov
xchg
or
jnp
sbb
lods
push
ffreep
mov
push
inc
sub
dec
and
nop
mov
imul
sti
jp
jo
int3
mov
inc
sbb
out
xchg
in
leave
in
jae
jnp
mov
push
xchg
or
orb
pop
push
xchg
pop
pushf
push
and
inc
xchg
icebp
mov
jns
pusha
dec
dec
jnp
lret
jecxz
add
pop
test
clc
pop
jno
push
dec
dec
cltd
cmp
cmp
jnp
or
xor
cmc
jnp
cmp
mov
loopne
cmp
inc
xchg
sahf
sub
jo
dec
or
jmp
fmul
es
jg
lods
movsb
rclb
scas
cltd
push
stos
imul
imul
fisttpl
outsb
movsb
push
in
ja
push
sub
jg
mov
add
in
xchg
movsl
jg
repnz
adc
sti
jge
lret
lret
mov
jb
or
xchg
inc
outsb
dec
adc
jnp
repz
mov
stc
xchg
bnd
push
xchg
cmpsl
lods
dec
mov
mov
adc
repz
mov
jnp
mov
in
dec
movsl
lock
imul
std
xchg
or
sbb
stos
hlt
push
dec
shlb
bound
loopne
sti
mov
lret
adc
push
das
xchg
adc
dec
jle
xchg
int
in
paddusb
push
js
mov
xchg
cmp
xorb
je
inc
jbe
and
mov
out
mov
mov
les
test
dec
das
enter
mov
or
lret
mov
jae
leave
out
scas
sub
pop
mov
jl
call
jnp
cwtl
inc
into
jbe
outsb
jle
outsl
mov
or
jge
jecxz
xchg
arpl
popf
xor
xchg
fs
sbb
cltd
sti
pop
gs
cmp
int3
sti
dec
fnstcw
mov
sbb
or
adc
das
mov
cmp
add
mov
jmp
add
std
fildl
xchg
lea
inc
jnp
stos
adc
jnp
loope
imul
mov
dec
xchg
jnp
inc
xor
shlb
js
or
imul
inc
sahf
stos
mov
in
cmpsb
adc
cmp
xchg
movsl
or
cmp
lea
mov
call
test
jnp
stos
sbb
fists
jmp
test
mov
into
enter
ror
andb
jnp
aad
push
lods
mov
push
cmp
mov
fwait
jb
jl
sub
xor
xchg
lret
ljmp
cmp
outsl
or
orb
cmp
sti
cmp
push
aaa
jmp
push
mov
shrb
dec
sbb
xor
dec
pop
mov
stos
jae
pop
or
std
mov
loope
clc
jnp
mov
jo
jnp
es
out
mov
repnz
rcl
sarb
inc
cmc
popf
jnp
pusha
test
xrelease
dec
sbb
mov
jp
mov
mov
mov
imul
jnp
fsubp
push
aad
into
xor
xchg
cld
arpl
loopne
js
push
int
mov
or
mov
sti
into
outsb
jns
movsb
sub
rcll
sub
cs
jne
fucom
daa
loope
int
imul
pushf
loopne
or
mov
xchg
lock
jo
and
or
push
fcomps
mov
repz
lods
jb
ds
and
mov
mov
lds
add
imul
or
cmp
cmp
sub
jnp
lret
jg
int3
or
xchg
jge
xor
mov
call
or
inc
pop
inc
push
ret
jnp
and
sahf
mov
xchg
mov
sbb
or
mov
mov
stos
sbb
jbe
lds
mov
push
movsb
adc
inc
jge
inc
mov
xchg
rclb
add
mov
cmp
pop
test
inc
fucomi
push
lea
push
sar
dec
inc
ljmp
xchg
int
sbb
jnp
lds
shrb
sti
push
adc
cmp
out
in
pop
stos
repnz
xchg
xchg
sti
pop
lock
mov
pusha
insl
cwtl
out
jnp
push
and
add
jnp
fnstcw
jns
dec
lea
jb
imul
adcl
xchg
push
mov
mov
jnp
bound
inc
jnp
movsb
add
inc
cltd
pop
or
jno
out
xchg
les
icebp
xlat
xchg
or
fcmovnb
outsb
sub
xor
jb
cmp
mov
pop
sub
shlb
test
outsb
insl
nop
and
ret
sbb
or
lods
adc
and
test
push
xor
movsl
pop
push
mov
xchg
outsl
adc
xchg
gs
mov
and
imul
jge
jge
xchg
sub
inc
cmp
fcmovnu
push
test
cmp
popf
out
outsb
mov
sub
arpl
cmpl
test
jne
add
js
outsb
jg
gs
lods
nop
push
xor
xchg
neg
pop
sbbl
push
ja,pn
and
xchg
xchg
out
xchg
jo
cmpb
mov
xchg
fbld
xchg
pop
mov
xchg
cmp
lret
sub
mov
pop
loopne
sti
insb
and
aam
jnp
mov
adc
jnp
adc
loopne
aaa
ret
test
dec
cmp
iret
mov
inc
or
xchg
sub
addb
xor
jnp
push
lahf
int3
cmp
jnp
rorb
xor
stos
aas
pop
mov
loop
inc
adc
aas
mov
lret
inc
cmp
inc
fldcw
incb
mov
push
mov
mov
mov
mov
sbb
add
stos
cmp
xchg
inc
subl
push
in
or
and
aam
push
jle
arpl
int3
jnp
inc
mov
fisubrl
aas
ret
fs
test
xor
popa
jnp
mov
in
adc
lahf
jnp
mov
push
mov
or
mov
lcall
pop
ret
add
jnp
dec
sbb
movsb
mov
aas
adc
cs
arpl
loope
inc
jnp
fistpl
add
aam
aas
stos
jmp
int
adcl
push
hlt
gs
inc
xchg
push
push
and
pop
sbb
pushf
sbb
inc
mov
outsl
cld
loop
lahf
adc
jnp
scas
popl
loopne
jnp
aaa
or
ret
cmp
lock
in
sti
test
popa
aaa
icebp
pop
inc
jbe
fdivrp
shrb
jnp
adc
mov
push
ret
mov
mov
adc
jbe
sub
xchg
cmpsl
cmp
je
rolb
sbbb
popf
adc
sti
lcall
push
jbe
hlt
sti
mov
cltd
add
aad
iret
in
jnp
and
and
adcb
mov
jo
icebp
inc
sbb
xor
pop
fnstcw
rorl
add
test
cwtl
xchg
loope
jb
mov
fwait
dec
pushf
jnp
jmp
int
pop
push
daa
jnp
mov
je
jnp
lods
dec
mov
jnp
scas
jb
sub
daa
gs
push
je
or
arpl
es
sbb
or
cmp
adc
in
jnp
push
adc
and
mov
sub
aam
jne
xor
ss
rorb
jg
sbbb
mov
push
mov
adc
jns
mov
mov
add
lahf
add
sbb
mov
fidivs
sub
pop
loope
test
jnp
and
cwtl
daa
jbe
repz
ss
pop
or
mov
mov
popa
lahf
arpl
scas
xor
or
push
xchg
rclb
jnp
add
dec
pop
jo
push
in
mov
ljmp
cld
and
jo
lahf
es
shrb
jnp
pop
jno
dec
stos
push
mov
addr16
lods
and
xchg
incl
sbb
or
fldenv
pusha
xchg
sarb
test
sub
add
dec
push
inc
xchg
mov
jg
fwait
sti
xlat
dec
lcall
cwtl
push
lahf
pop
mov
jnp
pop
adc
hlt
and
aam
test
jnp
mov
pop
sub
cli
xchg
jp
outsb
sti
jge
ret
or
sbb
test
jp
cli
ljmp
and
cmpsb
mov
jge
ljmp
xor
push
sub
icebp
fisubs
mov
mov
jno
xor
and
sub
sub
call
imull
test
push
dec
adc
dec
sub
sbb
xchg
and
cmp
xchg
pop
adc
out
adc
or
push
les
mull
xchg
pmaxub
or
mov
mov
lock
push
add
cmp
aaa
stc
and
add
mov
mov
dec
or
scas
pop
or
xchg
movsl
push
xchg
subb
sbb
out
stc
jnp
pop
add
out
push
mov
fnstenv
dec
sti
xor
and
jnp
xor
mov
push
mov
daa
jnp
add
mov
xor
cld
iret
pop
xor
clc
add
xor
icebp
or
fld1
jno
mov
jnp
jp
mov
cld
cmpsl
lret
jnp
mov
hlt
ja
sbb
cltd
cmp
loope
jnp
pop
sbb
dec
or
or
sub
pop
jnp
enter
adc
nop
pop
pop
popf
ret
sti
cmp
lcall
inc
push
repz
mov
dec
jno
jnp
xchg
hlt
sbb
jmp
addr16
into
test
xorb
inc
sti
js
sbb
out
mov
xor
fldenv
inc
cmp
test
xchg
bound
push
out
mov
jne
test
cmp
sarb
push
mov
mov
sahf
outsl
xor
cltd
sbb
xor
lret
cmp
push
sbb
and
fstpt
push
or
jno
orb
and
aam
test
and
mov
pop
psllq
xor
adc
jnp
mov
stc
dec
xor
cltd
jnp
lods
fcoms
jnp
cmp
imulb
push
sbb
mov
pop
mov
add
xor
xchg
cli
inc
mov
std
mov
jnp
out
or
stc
add
sub
mov
imul
jecxz
idiv
jp
xchg
aas
loope
test
into
push
insb
and
test
sbb
lock
or
pop
lods
leave
jae
jnp
fisubrl
xchg
andl
mov
outsb
mov
lods
inc
jbe
cmp
jnp
fisubs
push
lahf
xor
xor
jecxz
cmp
pop
stc
aad
mov
roll
push
sbb
push
iret
adc
adc
sbb
loop
xor
cmpl
mov
jecxz
or
daa
xchg
pushf
sbb
and
jns
fldt
jecxz
rolb
dec
aaa
enter
xor
fwait
cli
mov
cmp
xor
or
imul
xor
mov
mov
push
cli
shrb
push
jnp
fmul
xchg
push
xor
jnp
pusha
sub
movsl
mov
inc
xchg
cld
out
scas
jnp
lcall
mov
dec
outsl
ds
leave
mov
mov
call
and
sbb
add
xchg
pop
jnp
inc
scas
repz
adc
jbe
and
sbb
and
dec
jnp
rcrb
iret
jnp
test
loop
or
test
mov
jnp
addr16
leave
mov
stc
ffree
sbb
push
and
xor
jnp
fnsave
or
push
xor
sub
jnp
sarl
sbb
jo
jnp
or
fcompl
nop
stos
mov
push
or
sub
pop
push
pop
xlat
shl
int
pop
sbbl
icebp
jae
jbe
xchg
mov
jnp
add
or
jnp
test
outsl
lahf
shlb
dec
pop
add
sub
out
xchg
cmp
xchg
clc
mov
ja
inc
jnp
and
add
or
jge
xchg
bound
imul
xor
mov
mov
ja
mov
sbb
and
jns
inc
mov
inc
jnp
mov
or
cmp
mov
dec
std
xor
aaa
xlat
mov
movsl
flds
xor
mov
mov
mov
loope
xorb
test
test
leave
push
aad
ficomps
shll
sbb
lret
cmp
cs
shll
push
sti
das
dec
pop
mov
pusha
js
cmp
dec
push
or
orl
xor
arpl
xchg
test
mov
or
jg
inc
jle
jecxz
mov
ss
jl
push
xlat
mov
xor
pusha
push
in
lahf
jnp
ret
sbb
repnz
mov
jle
jnp
mov
mov
or
xchg
inc
pop
popa
je
xlat
mov
jecxz
and
pushf
in
mov
aad
pop
lcall
jnp
aas
sahf
pop
jg
mov
or
jecxz
add
lahf
xchg
mov
mov
mov
mov
imul
jnp
add
lret
cmp
pop
inc
cld
mov
sbb
sub
in
xchg
mov
mov
cmp
sti
jnp
sub
inc
mov
idiv
popa
lret
roll
packuswb
jnp
jg
or
dec
pop
mov
and
lds
adc
add
out
cltd
fwait
push
add
mov
mov
push
test
dec
das
out
sub
orb
jo
push
mov
push
sbb
jnp
or
xor
jnp
mov
push
jnp
aaa
push
loope
adc
rcrl
cwtl
jecxz
outsl
and
push
cltd
loope
lods
jnp
mov
mov
sarl
add
rolb
lahf
dec
jnp
cmpsb
push
mov
cmc
dec
push
mov
arpl
out
dec
sbb
in
cmpsb
mov
jnp
push
cmp
adc
jnp
or
xor
xchg
ficomps
pop
mov
and
addr16
push
push
sbb
out
fimull
loopne
bnd
inc
sbb
lret
jg
int
daa
or
add
jnp
or
push
cmp
and
pop
cmpsl
inc
pop
loop
pop
repz
cmp
hlt
lcall
adc
dec
jp
in
xchg
popa
jge
jno
mov
mov
mov
mov
call
mov
lret
outsl
orl
push
xchg
add
or
cli
rcrl
pop
dec
lods
push
insl
or
scas
sbb
fs
cmp
ret
and
adcb
test
xor
or
jnp
enter
sbb
jne
and
and
jnp
in
cmc
repz
sahf
jmp
push
clc
mov
stos
lds
sub
dec
jmp
insb
ds
les
sbb
or
xor
pop
or
cwtl
inc
mov
out
mov
loopew
jns
mov
dec
jg
mov
int3
jo
jae
jb
cwtl
sarl
scas
lahf
mov
or
mov
push
xchg
jp
arpl
xchg
push
mov
shr
aam
outsb
call
jb
or
in
push
cli
jnp
sub
jo
jl
add
cmpb
cld
mov
push
mov
xchg
ja
xor
cs
push
stc
or
das
int3
inc
jnp
in
xlat
mov
imull
xchg
int
mov
mov
in
test
xlat
mov
pusha
dec
jnp
mov
mov
test
xor
mov
aaa
mov
adc
xchg
and
mov
fwait
loope
jnp
call
scas
xchg
jnp
int3
outsb
xchg
subl
loop
inc
cmpsl
xchg
jb
es
jnp
decb
aaa
mov
cmp
add
mov
cltd
sbb
push
xor
sub
leave
jnp
shlb
xor
pop
mov
jnp
mov
xchg
stos
mov
pop
jmp
xchg
adc
out
shll
fadds
mov
popf
xor
insl
enter
test
pop
xchg
add
in
sbb
cmc
imul
sbb
scas
mov
adc
fbld
cli
ret
push
xchg
loope
xor
jle
stos
mov
sub
jg
jnp
inc
mov
insb
jnp
loopne
ss
sahf
in
push
movsl
fdivrs
jnp
pop
popl
jge
jnp
xor
and
pop
mov
xchg
popw
outsl
pop
fstpt
add
cwtl
scas
or
fnstenv
mov
cmp
dec
gs
lahf
adc
cmpsl
lcall
cmc
rorb
add
scas
mov
jg
jno
jp
pushf
jbe
mov
addr16
or
and
sarb
or
cmp
hlt
jae
jnp
dec
adc
lock
push
mov
nop
mov
jnp
adc
leave
int3
in
sarl
jnp
rorb
testb
xor
push
mov
dec
pop
mov
imul
ficoml
cli
orl
dec
cmp
gs
xchg
jl
dec
push
inc
enter
insl
aaa
jnp
xchg
lds
shrb
add
test
and
cmc
es
jno
push
or
test
cmpxchg
pushf
xlat
sub
mov
les
nop
arpl
inc
cmp
jl
fldl
fwait
jnp
pop
xchg
xchg
push
add
pop
out
dec
jns
cmpsl
mov
jo
outsl
leave
int
mov
stos
aad
mov
xor
inc
add
insb
hlt
imul
sti
pop
dec
mov
lahf
bound
jnp
sub
icebp
mov
dec
mov
fistpl
inc
ljmp
jno
push
loop
inc
int3
jmp
inc
cs
and
dec
in
scas
inc
jnp
les
mov
or
dec
sub
out
jnp
in
xchg
mov
jnp
psllw
js
and
xchg
fnstsw
push
jl
inc
jnp
push
test
aas
test
cwtl
addr16
fcmovnb
pushf
jl
add
xor
test
mov
jp
rcrb
jbe
add
xor
push
or
test
fstps
lahf
or
lock
ds
dec
sub
mov
nop
push
xor
xchg
sti
pop
in
pop
leave
or
inc
fwait
add
arpl
imul
adc
cmpsb
movsl
mov
add
lret
test
jae
out
outsl
fstpt
lret
adc
cmc
sbb
aaa
arpl
mov
mov
inc
sti
adc
outsl
outsb
hlt
test
mov
fsubs
mov
aam
mov
inc
lahf
jmp
adc
enter
ret
xchg
cmp
push
jns
insb
aas
dec
gs
inc
cmp
out
outsl
ja
dec
cmp
fstp
xor
imul
dec
jmp
add
cmp
mov
icebp
jnp
stc
mov
scas
xorl
mov
stos
jnp
loope
push
stos
sub
or
or
mov
sahf
popa
fidivrs
outsl
push
sub
jl
lock
sbb
lahf
repnz
mov
ret
and
inc
lcall
fdivr
icebp
lock
jp
out
push
cmp
fsub
insb
aas
pop
inc
shl
push
dec
mov
pushf
test
sbb
cld
adc
push
xor
jge
ret
xchg
loopne
jns
lds
mov
jae
jb
xchg
xchg
cmpsl
rcll
fistpl
inc
lahf
nop
sbbl
mov
jnp
or
dec
pop
ss
ret
movsb
mov
or
loopne
arpl
test
push
cwtl
fcmovb
inc
mov
es
dec
and
pop
jnp
mulb
out
in
mov
xchg
jmp
dec
int3
cmp
inc
push
adc
jmp
bound
cmpb
jg
or
sti
ds
iret
stc
add
mov
add
xor
test
inc
cmp
lahf
or
arpl
sti
cli
jnp
xor
add
sbb
gs
pusha
sarb
fwait
movsb
fs
or
test
ret
or
js
mov
pushf
bound
xchg
cmpsb
lods
in
jae
jl
or
pop
jnp
rclb
mov
lods
fisubs
sti
test
shrl
adc
xchg
push
dec
pushf
sahf
add
pop
loope
xor
test
mov
dec
mov
test
inc
or
pop
jnp
jl
ss
xchg
mov
pop
imul
je
sti
fwait
inc
sub
hlt
enter
ljmp
or
sbb
sbbb
xchg
movsl
cmc
lods
jnp
push
dec
out
test
outsl
or
push
cld
arpl
xchg
xchg
fildl
fildl
notb
ret
lods
scas
jl
test
xor
pop
mov
sbb
push
xor
sub
mov
stos
push
push
mov
cmc
popf
fidivrs
fsubrl
cs
mov
dec
test
cwtl
jnp
mov
test
call
cmp
xchg
inc
jnp
jge
jle
adc
outsb
test
repnz
repz
add
fwait
jmp
lret
add
mull
jnp
jmp
shrl
decb
iret
or
cmp
jnp
rcrl
push
jnp
sub
fnstenv
cli
jnp
mov
imul
push
ljmp
aad
popf
push
inc
scas
add
fwait
shlb
movsl
mov
test
sub
push
jge
cli
das
imul
insb
fidivrl
js,pn
sbb
xchg
sub
lret
or
insl
cwtl
popf
push
in
cld
inc
jnp
stos
push
inc
xchg
fiadds
inc
pushf
loope
mov
enter
sub
scas
or
inc
xchg
test
test
lret
sub
sbb
xor
idivb
add
add
rolb
sbb
hlt
xor
push
sbb
jecxz
cmp
jmp
inc
adc
push
jnp
xchg
inc
insl
lahf
mov
rcr
in
inc
and
xor
call
rcrb
enter
push
pop
popf
xlat
mov
daa
nop
arpl
jnp
je
aas
and
stc
adc
adc
jnp
jne
or
push
rorb
inc
outsb
and
test
pop
xchg
jnp
js
out
int3
ss
add
cmp
lods
mov
sub
push
mov
outsb
jb
jne
dec
stc
push
inc
mov
pop
ss
sub
call
daa
jnp
or
es
scas
popf
stc
xchg
gs
mov
jae
sbb
mov
cli
mov
fisubs
stos
out
mov
je
lea
or
test
mov
iret
xchg
aad
sti
adc
add
cmp
add
ret
push
xchg
aas
cmp
jecxz
stos
or
notb
jmp
mov
imul
enter
aam
jnp
jg
test
mov
mov
dec
icebp
xor
js
repz
xchg
shlb
sarl
jo
lea
pop
adc
incl
pop
sbb
dec
mov
inc
push
push
xchg
sub
ss
jbe
test
jnp
aad
rcr
dec
jmp
jge
cmc
adc
mov
out
iret
adc
sbb
and
add
mov
imul
lret
stos
jmp
sbb
jnp
imul
cmp
imul
movsl
shlb
push
xchg
test
in
mov
mov
ljmp
push
test
iret
xchg
in
jnp,pt
xchg
outsb
sti
sbb
mov
xor
push
jae
jl
inc
cmp
adc
add
scas
xchg
jecxz
cmpsb
aad
fsubr
out
jge
jnp
adc
or
lcall
je
xchg
enter
dec
xchg
inc
andl
pop
inc
add
mov
jns
sti
inc
hlt
aas
pushf
xor
jnp
sbb
dec
xchg
push
jp
enter
adc
lret
jnp
aam
sti
repz
or
pop
in
repnz
lret
mov
mov
mov
or
lret
rcll
sahf
lret
popf
cmp
jnp
rclb
dec
push
cli
jnp
cmc
lret
icebp
pop
mov
cmp
cmp
lock
jnp
and
mov
cld
fs
xchg
leave
pop
or
punpckhbw
mov
lcall
or
pop
jle
xchg
sbbl
pushf
xchg
popl
mov
jge
cld
ja
xchg
loope
and
icebp
xchg
dec
sbb
mov
mov
clc
mov
cli
loop
jnp
xchg
or
add
out
xor
mov
jnp
stc
dec
testb
jnp
sbb
add
in
sub
in
jnp
pop
cmpsb
sahf
or
rcrl
bound
pop
stos
jnp
fildll
pop
jnp
rorl
push
jnp
adc
lcall
inc
rdmsr
ret
jnp
imul
or
movsb
je
fldt
cmp
icebp
mov
js
loope
or
jns
mov
stos
dec
movsl
out
jnp
pop
dec
dec
dec
scas
ret
jmp
in
fidivrl
sti
push
mov
xchg
mov
push
pop
adc
sti
push
lock
or
cs
int
cltd
add
dec
cli
dec
fsubr
cmpsl
or
lds
data16
mov
pushf
dec
mov
ret
int3
mov
push
ret
mov
mov
movsb
pop
sub
sub
mov
push
sbb
enter
push
in
je
fstpl
in
fprem
gs
and
je
aaa
pop
jnp
inc
jb
sub
add
jnp
dec
cld
and
jg
mov
or
pop
add
mov
movsb
add
loope
jnp
pop
pop
push
sbb
jo
inc
mov
outsl
adc
mov
inc
jbe
xchg
jp
jns
call
mov
or
jl
std
or
xchg
pop
ret
shrb
pop
pop
mov
jb
and
fiadds
cmp
sarb
mov
mov
mov
leave
decb
pushf
movsl
xor
lcall
shrl
dec
pop
sub
adc
mov
xor
rcrb
pop
sbb
mov
mov
iret
bnd
ficoml
cmp
mov
mov
clc
jnp
mov
sbb
ret
hlt
cmpsb
outsl
mov
xchg
fs
fstpl
jnp
in
inc
jae
add
fsubl
pop
jnp
dec
in
push
cmp
xchg
xorb
imul
pop
enter
sub
orl
and
xchg
or
data16
xchg
and
icebp
push
arpl
cwtl
mov
lcall
inc
sub
and
jmp
dec
xchg
and
std
jp
cmpsb
pop
rorl
adc
rorl
mov
mov
and
sarl
fucomip
mov
sub
sbb
xchg
sti
clc
jb
lods
pop
mov
or
push
lcall
adcb
pop
mov
sti
push
cmp
adc
sahf
push
aaa
inc
test
iret
cltd
sbb
stos
pusha
pop
mov
scas
inc
jnp
leave
arpl
sbb
sbb
inc
jge
lahf
jmp
repnz
and
in
out
jnp
imul
pop
jne
jnp
push
jno
pusha
andl
lret
mov
fdivrs
mov
or
lret
and
jnp
mov
jnp
adc
jne
adc
in
inc
xchg
pop
jnp
pop
push
clc
int3
cmp
sarl
mov
pop
push
shlb
rcl
adc
jnp
lea
xor
xorl
cld
data16
pop
or
xlat
mov
mov
stos
add
jecxz,pn
lock
addr16
xchg
subb
or
fldenv
pop
cwtl
out
shl
ret
stc
push
dec
push
add
inc
adc
int
aaa
jg
jl
jnp
jge
pop
inc
xor
nop
mov
pop
jmp
jp
xchg
pushf
movsb
insl
push
movsb
inc
or
cwtl
dec
cmp
aam
in
cmp
fsubr
push
nop
ja
add
and
cmp
sub
dec
adc
nop
scas
decb
sti
mov
push
push
sarl
popa
or
ds
mov
cli
stos
notb
adc
mov
jl
shlb
jns
add
outsl
pop
daa
adc
or
jmp
cs
mov
imul
xchg
jno
fdivrl
mov
mov
jnp
fadds
repnz
pop
sti
test
imul
mov
dec
pop
mov
or
fmull
or
xor
mov
je
xor
xchg
sbb
pop
xchg
shrl
test
cs
jp
lret
stos
or
es
cli
xchg
lahf
jnp
fidivrl
push
add
xchg
mulb
mov
push
shrb
fsubr
imulb
fistl
jo
int3
mov
jnp
push
lret
and
ss
ret
xor
cmp
push
inc
movsl
gs
idivl
dec
sbb
mov
jnp
inc
adc
out
jl
xor
mov
push
imul
cmp
push
in
sbb
jp
adc
clc
iret
jnp
xor
jmp
inc
pushf
jnp
clc
jbe
lds
dec
jnp
je
sbb
into
jno
mov
in
testb
inc
js
mov
sub
nop
mov
jnp
stos
loope
xchg
jmp
pop
xchg
loopne
out
popf
stc
pushf
xor
mov
loope
cmp
ja
lods
ljmp
mov
jnp
in
dec
cli
sbb
outsb
sarb
aas
repnz
jno
push
mov
les
and
cltd
pop
xor
mov
mov
add
cmpsb
jnp
stos
and
pop
pop
jecxz
hlt
fwait
loopne
jg
push
cltd
fmull
jg
add
mov
hlt
sbb
test
aaa
inc
mov
add
mov
mov
jno
test
outsl
lods
adc
cwtl
fs
dec
xchg
lods
test
mov
shlb
sub
loop
arpl
inc
adc
sub
cmp
dec
arpl
rorl
add
mov
les
insb
aam
mov
and
mov
add
jnp
adc
in
cltd
aas
add
inc
smsw
pop
push
scas
mov
xchg
incl
shll
addr16
lods
adc
popl
imul
adc
cmp
ja
inc
mov
out
mov
sti
lcall
mov
dec
icebp
mov
pop
push
movsb
mov
cmpsl
jnp
das
adc
mov
sub
movsb
mov
stos
nop
lods
jnp
mov
ret
cli
pop
daa
jnp
sub
mov
lret
dec
scas
stos
sub
pop
dec
mov
shll
rcr
jnp
inc
cmp
pop
lret
aaa
jnp
dec
inc
jl
scas
mov
data16
outsb
pop
jnp
std
fisubrs
outsl
stos
add
mov
js
inc
inc
push
jnp
pop
sbb
cli
add
mov
mov
xchg
into
insb
mov
dec
sub
fsubs
test
sub
bound
pop
daa
dec
cmp
orl
jnp
push
fldenv
or
jnp
mov
es
xchg
clc
inc
pop
adc
dec
mov
stos
xor
out
xchg
xor
pop
adc
mov
mov
loopne
rcr
sub
jns
push
mov
pop
dec
leave
add
jmp
add
cmp
arpl
xchg
inc
mov
mov
test
lahf
out
adc
insl
mov
push
xor
adc
test
mov
inc
xchg
dec
arpl
nop
xchg
push
pop
cmpsl
je
dec
mov
in
jmp
lret
setae
mov
sub
sub
inc
mov
xor
mov
mov
add
les
mov
add
aam
jecxz
aaa
jns
jnp
repnz
js
iret
push
stos
nop
fldenv
fidivs
jle
jnp
into
std
cmpsl
scas
lahf
ljmp
and
jae
jnp
xlat
jns
dec
stc
mov
dec
sbb
pop
and
ss
xchg
mov
mov
jnp
inc
ljmp
cmp
jg
cld
xor
mov
rcll
mov
jnp
pusha
sub
mov
imul
fistps
cmp
clc
or
or
mov
lret
sub
lock
mov
push
lret
out
xlat
mov
mov
push
jp
jnp
jl
jle
pop
mov
jnp
stos
inc
idivl
push
adc
mov
aam
mov
insl
test
xchg
pop
mov
and
cmp
int
lds
lods
lock
xchg
inc
arpl
push
or
int3
shlb
mov
xchg
popa
jo
xor
stos
jmp
and
jl
into
das
int3
nop
jnp
jge
pop
xlat
jg
scas
jnp
aas
mov
push
jnp
popa
call
add
xchg
pop
stos
orb
sub
pushf
jl
in
cmp
sbb
xchg
mov
arpl
push
xchg
jp
xchg
pop
cmpb
sbb
les
lret
orl
add
gs
lea
add
xchg
gs
add
fistpll
or
xlat
mov
int3
pushf
daa
hlt
sub
xchg
outsl
cmp
movsl
flds
cmpsb
pop
pop
add
setg
jns
sub
xchg
movsb
ljmp
movsl
jno
adc
inc
test
jns
xor
test
xchg
js
push
cmp
in
xor
jb
jmp
mov
fcmovne
shlb
or
stc
pop
xchg
aam
push
or
mov
jecxz
sub
repnz
dec
and
mov
ret
aas
sub
rcrb
mov
lret
aam
stos
mov
outsb
adc
sbb
arpl
stc
push
fwait
jecxz
xor
fldt
jmp
neg
pop
ja
push
test
sub
pop
xchg
in
jnp
popa
inc
or
outsl
xor
pushf
push
adc
mov
movsl
add
mov
jnp
cwtl
pop
lock
mov
daa
dec
es
lods
adc
jle
pop
jno
jnp
mov
mov
in
cmp
mov
cld
mov
xchg
jnp
add
lods
jge
mov
fdivrl
addr16
xor
push
adc
cli
shlb
push
dec
repz
adc
pop
or
jb
arpl
sub
sti
dec
shld
jnp
jne
fdivrl
adc
insb
push
mov
sub
and
cmp
fcomi
xchg
or
push
scas
in
sub
sub
pop
add
sbb
xchg
add
int3
dec
addr16
jnp
lea
nop
cmp
jnp
sub
ret
xchg
xor
test
sub
mov
addr16
fidivrl
notl
sbb
sarb
pop
lret
lret
jnp
push
add
dec
mov
mov
or
es
icebp
iret
imul
jl
lea
mov
sub
stos
mov
out
or
js
popf
adc
dec
and
pop
sbb
aaa
stc
loope
sahf
fs
iret
pop
inc
cmc
sub
push
mov
idivl
jae
xchg
cmp
icebp
push
pop
in
xchg
lret
repnz
and
rcll
sub
or
icebp
repz
cmp
lea
cli
in
jnp
cmpsb
push
sub
xchg
pop
cwtl
push
mov
iret
arpl
push
cli
xor
bound
movb
jnp
lds
movsb
ljmp
fs
xchg
out
xor
jnp
jecxz
pop
cltd
int3
xor
push
movsb
rcll
rcll
inc
adc
clc
adc
mov
add
jmp
icebp
jbe
sti
xlat
loop
leave
adcb
and
pop
int3
idivb
pop
dec
mov
jnp
sbb
fwait
sarb
jnp
push
push
inc
xchg
dec
cmc
jae
dec
pop
dec
fidivrs
add
out
fisttpll
fwait
push
and
sub
mov
loopne
jl
out
pop
xchg
stc
add
lret
jg
push
jnp
cmp
test
jnp
xchg
fwait
aad
pop
xor
arpl
dec
lahf
test
inc
and
loop
ds
adc
mov
sub
dec
fwait
sub
cmpsl
xchg
cmpsb
rolb
fwait
inc
aam
lods
pop
pop
jge
push
dec
daa
lea
fwait
xchg
ret
jecxz
push
mov
jmp
outsl
arpl
lock
cmp
push
mov
mov
ret
cltd
or
je
or
mov
out
stos
xor
lret
cmp
mov
fcmovnbe
in
mov
jp
not
inc
cli
sbb
arpl
cmp
fcmovbe
pop
js
and
jnp
mov
ss
jnp
inc
or
jnp
adc
je
jnp
cmp
rcl
fists
xchg
cmp
mov
loope
lret
xchg
jmp
xchg
sti
bound
inc
push
inc
add
jnp
cmp
popl
sbb
adc
std
cmp
cld
jmp
out
jnp
iret
test
mov
cs
repz
aad
jnp
mov
pop
push
or
or
aas
loope
cmc
mov
mov
bound
add
pop
shlb
imul
push
cmpb
xchg
rcrb
push
js
add
xor
fwait
loope
jp
adc
nop
div
sti
push
mov
sahf
out
jecxz
ss
mov
lds
fldcw
imul
push
xchg
push
jb
rcrl
jnp
lcall
jno
xor
or
pop
mov
mov
pop
cmp
orb
popa
add
pop
xchg
sarb
fcmovu
aam
xchg
jecxz
adcl
mov
jns
mov
bnd
adc
push
sub
orl
adc
fildl
and
out
xchg
pop
arpl
lods
sti
inc
jb
movsb
push
and
mov
sbb
sbb
out
popf
add
mov
pop
sbb
mov
pop
add
sbb
in
push
paddsw
sbb
test
xchg
jecxz
jae
mov
mov
cltd
pop
xlat
sbb
int
stos
mov
arpl
lcall
xchg
daa
dec
cmp
in
aad
jecxz
sbb
and
aam
cli
or
mov
fildl
mov
jnp
ds
cs
lea
cmp
lret
out
xchg
sti
or
inc
jge
xchg
gs
ret
mov
loope
insb
ja
call
jecxz
xor
bnd
rcll
insb
jne
jo
ud1
sbb
sub
lahf
pop
push
dec
mov
sub
xchg
cwtl
es
xchg
std
sub
or
cmc
mov
testb
dec
lahf
mov
out
xchg
js
adc
cmpsl
in
pop
stos
mov
jo
jl
lds
rolb
arpl
lret
add
push
movsl
mov
test
jns
sub
jnp
xlat
xor
fstp
mov
mov
jnp
stc
or
adc
dec
ret
jnp
idiv
fsubrs
nop
jnp
dec
mov
ret
shll
jnp
xchg
test
loopne
rcll
jnp
mov
mov
out
cmc
test
sbb
jnp
rcrl
cwtl
arpl
jnp
into
lret
popf
aas
push
inc
xchg
push
pop
and
jnp
xchg
mov
mov
pop
fisttps
mov
and
mov
add
mov
jb
fld
pop
mov
leave
into
rcrb
in
fwait
jne
subb
lret
arpl
lcall
sbb
jnp
mov
rorb
js
mov
sub
push
jnp
mov
push
jnp
in
push
bound
jnp
cmp
add
repnz
enter
inc
cmp
call
push
fdivs
xchg
pusha
add
insb
pop
out
jnp
sbb
and
add
dec
fs
enter
iret
mov
dec
cmpsb
arpl
xchg
ss
jnp
push
mov
sarb
mov
sbb
jnp
fisttpl
scas
lahf
cmpsb
jne
jnp
pop
and
jp
jnp
cli
jmp
inc
mov
xchg
cs
orb
adc
mov
fistps
imul
pop
push
jnp
sub
inc
sarb
in
dec
xchg
or
jge
dec
jnp
sub
xor
inc
jnp
and
aad
pop
ss
push
mov
xor
in
jnp
nop
sar
jecxz
lret
and
mov
fs
iret
stos
pop
lods
popa
and
div
test
pop
sub
arpl
inc
jno
jge
pop
icebp
sbb
mov
or
mov
mov
dec
fs
flds
aad
fistpl
repz
call
adc
jl
stos
add
cmpsb
mov
lock
or
sti
cld
into
loop
cltd
xchg
jmp
jns
push
cmpl
pop
idivb
lock
cmpsl
fwait
add
loope
cmp
fadds
sub
jnp
mov
test
in
push
mov
cmp
push
popa
sub
movsl
hlt
ja
sti
jnp
pusha
imul
incl
pop
lds
arpl
xchg
lcall
mov
push
or
cmpsb
repz
push
mov
adc
ljmp
mov
xor
jo
mov
sbb
arpl
gs
xchg
pop
mov
jo
inc
ret
xor
and
test
cltd
leave
repz
jnp
dec
pop
xchg
push
pop
adc
jecxz
jnp
arpl
test
mov
mov
push
jnp
arpl
test
movsb
inc
mov
push
mov
ja
jnp
and
cwtl
mov
mov
fcomp
mov
inc
test
imul
or
pop
push
sbb
jnp
aad
ja
dec
dec
fnstenv
cmp
gs
test
lds
inc
inc
sbb
loope
sub
cmpsl
test
add
push
lock
jnp
and
jae
xor
mov
aam
xor
in
cmc
loopne
stc
and
repz
mov
jle
jnp
cmp
xchg
sbb
sti
jnp
in
push
jnp
mov
cmp
xchg
pop
mov
jbe
jp
push
sub
jnp
je
test
sahf
xor
mov
cld
jbe
jnp
in
lret
out
jnp
iret
repnz
call
push
sti
ja
mov
mov
add
dec
push
mov
fwait
sub
mov
xor
pop
and
mov
push
stc
out
mov
xor
es
mov
inc
jo
sar
xchg
mov
in
jg
cmp
repz
xor
sbb
and
test
jg
cld
ja
inc
cli
pop
adcb
mov
add
fninit
dec
shrl
sbb
lods
pop
out
jnp
inc
and
xchg
ret
test
jbe
cwtl
fcoms
call
cs
mov
loop
xchg
xor
mov
aam
or
mov
test
dec
leave
mov
lds
jnp
sbb
push
cld
bnd
outsb
scas
insl
shlb
test
push
dec
or
testl
add
push
adc
push
jecxz
fwait
inc
mov
lret
ss
push
cmp
jns
and
pop
dec
ret
out
jnp
aas
mov
add
enter
movl
jnp
mov
sbb
loop
jnp
cmp
fbld
test
lods
jnp
push
lods
sbb
test
xor
mov
xchg
icebp
sti
jne
mov
movsb
cmp
inc
push
fsub
lret
jnp
push
push
jecxz
fisubl
jnp
sbb
adc
adc
and
pop
in
js
pop
mov
cli
imul
xor
test
fstpl
xchg
stos
jnp
das
cwtl
pusha
push
ficoml
andl
fsub
fwait
mov
jb
dec
mov
mov
pushf
add
jns
aad
mov
call
daa
test
test
lret
xchg
fldenv
jle
push
mov
jnp
in
inc
inc
push
movsl
mov
push
outsb
push
repnz
jb
or
cmc
leave
fwait
add
pop
or
repnz
dec
ret
xor
sbb
lods
arpl
and
sbb
in
mov
repz
adc
mov
aas
jb
push
loope
cwtl
mov
fdecstp
mov
cmp
and
popf
les
adc
pop
pop
sub
mov
out
jl
xchg
repnz
adc
scas
arpl
or
dec
jecxz
in
mov
mov
pop
push
push
jbe
imul
outsl
arpl
jnp
movsb
sub
and
jecxz
sbb
add
loope
jle
add
aaa
mov
or
outsb
sbb
arpl
mov
lret
jecxz
fsubrl
andb
jno
arpl
loope
lea
mov
xchg
aad
pop
fldl
xor
shlb
mov
je
popa
pop
dec
leave
xchg
fninit
sub
inc
shr
xor
cmp
cmp
das
pushf
mov
jecxz
lock
in
ds
cmp
in
xchg
andl
das
jnp
bound
mov
mov
or
rolb
jle
cmp
and
enter
push
mov
jno
mov
cmc
jecxz
aas
add
sbb
fildl
inc
xor
andb
shrl
and
jne
insb
mov
pop
inc
xchg
mov
and
cmp
and
lods
cmp
sahf
xchg
cmp
pop
jo
xchg
dec
jp
lds
in
cmp
pop
aaa
icebp
adc
ret
leave
add
dec
push
jnp
sahf
divb
jnp
pop
push
pusha
ja
and
jnp
pop
mov
mov
loopne
jnp
pop
mov
mov
add
mov
push
adc
icebp
sub
decb
push
and
leave
pop
jl
mov
push
movsl
cld
jnp
sbb
jnp
shlb
fstpl
mov
dec
adc
cmp
or
pushf
addr16
stos
jg
xchg
std
jl
jnp
out
inc
jo
pop
cmp
mov
jmp
pop
sub
add
or
dec
mov
std
repz
inc
cmp
adc
lcall
dec
test
pop
aam
sahf
stos
pusha
xchg
jno
divb
inc
or
inc
fcoml
mov
loop
xchg
lods
testb
jnp
aaa
insl
xor
sbb
fstpt
mov
mov
in
pop
jnp
fstpl
dec
cmc
lahf
imul
sti
fmuls
lret
pusha
shll
cmp
pushf
jg
mov
insl
pop
dec
jnp
push
mov
or
adc
cltd
ljmp
jne
sbb
xor
cmp
dec
mov
xor
in
cmpb
jae
ss
sbbl
in
fs
out
lahf
pop
and
adc
rcl
sahf
in
push
in
fs
idivb
mov
add
lret
xchg
notb
je
fldpi
fistpll
in
lret
mov
xchg
sub
push
cli
roll
jl
jb
popfw
stos
dec
fistpl
dec
incb
mov
cmp
mov
sub
jp
inc
pop
add
movsb
rcll
sbb
scas
add
sbb
jnp
inc
pop
sub
inc
mov
jno
cmp
add
js
or
pop
sbb
les
xor
add
arpl
sarb
jb
call
fldt
gs
xorb
in
cmp
mov
mov
inc
or
cmpsl
aas
sbb
pop
or
popa
pop
aad
outsb
bound
mov
outsl
and
lds
pop
jle
lods
outsb
lret
jge
jecxz
cwtl
test
mov
test
cli
xchg
add
mov
adc
popa
mov
pop
idivl
mov
sub
cwtl
push
push
pop
insl
cmpsb
fisubs
inc
jnp
dec
ret
cmp
test
push
jecxz
xchg
repz
pop
and
dec
mov
inc
cmp
stos
incl
jbe
lret
fisttpl
push
aas
jae
mov
test
sub
adcl
xor
test
sbbb
shlb
test
mov
ficoml
or
jmp
jns
or
jnp
pusha
lret
pushf
cmpsb
sub
jge
push
mov
jmp
fs
lcall
push
add
outsb
xor
ss
mov
fdivs
dec
insl
push
stc
jnp
cmp
sub
lahf
jno
cltd
mov
mov
cmpsb
sub
mov
dec
or
lcall
pop
sti
leave
adc
into
paddb
xchg
movsb
cmc
cmp
aaa
ja
cmp
push
aam
adc
mov
test
lds
aaa
pusha
adc
sub
rorb
mov
mov
jle
mov
mov
test
push
je
jmp
test
sub
lret
aam
pop
add
fcomp
jnp
dec
dec
sub
sub
jnp
and
out
mov
cmp
insl
cmpsb
fs
scas
mov
push
and
fsubrl
jnp
add
push
adc
fimull
jne
stos
xchg
ja
jnp
sbb
inc
ficoms
jnp
cltd
movsl
lods
push
fnsave
lcall
mov
shrl
loopne
sub
push
mov
sti
stos
mov
movsl
cmp
adc
ret
in
mov
push
sub
jno
mov
add
add
push
mov
cmp
orl
adc
inc
rcll
push
sti
jnp
dec
icebp
and
mov
sarl
stc
aaa
call
stc
xor
xor
and
stos
out
sub
and
fnstsw
fisubs
mov
xchg
je
sbb
aad
insb
movsl
cmp
fisubrl
cmp
bsr
xchg
pushf
xor
arpl
mov
outsb
and
cs
xchg
sti
lea
jecxz
jle
cli
lret
xlat
push
jno
mov
icebp
outsl
sbb
sahf
xchg
pop
and
orl
int
inc
xor
lock
hlt
daa
scas
cmc
cmp
cmpsl
sbb
pop
mov
lahf
shlb
in
mov
or
jnp
or
mov
xchg
adc
aaa
jnp
cmp
or
xor
dec
stc
outsb
jnp
stos
xor
jnp
sbb
gs
mov
mov
cmc
adc
pop
push
mov
jnp
jle
cmp
and
push
jg
iret
addb
outsb
jne
icebp
bnd
lret
inc
int3
pop
add
mov
test
xchg
insl
mov
jno
sbb
loope
adc
jnp
in
popa
jnp
lea
and
into
mov
push
test
sub
imul
jnp
mov
mov
loop
daa
sbb
jnp
push
shll
mov
add
movsl
out
jnp
push
or
ds
movsb
jnp
out
or
mov
icebp
loopne
xor
inc
movsl
jg
pop
xchg
bound
lock
test
fstpl
mov
jle
jnp
jae
nop
into
ja
mov
fwait
xchg
add
jge
pop
adc
int
xor
test
sti
jl
mov
mov
xchg
lods
lcall
fldcw
popa
sbb
clc
jle
ret
xchg
xchg
mov
fdivrs
mov
ss
dec
pop
mov
jnp
mov
cltd
enter
pop
sti
clc
shll
sub
mov
jnp
ss
fldenv
insl
je
mov
aaa
mov
inc
dec
mov
add
jnp
out
imul
mov
ds
sbb
in
pop
leave
jnp
out
sub
repz
cmp
ljmp
test
inc
data16
jnp
fsubs
hlt
jnp
mov
jo
jnp
loopne
dec
cmovno
mov
mov
insb
test
jb
repz
js
test
lea
or
jnp
mov
lret
mov
jnp
dec
mov
hlt
mov
add
pusha
movsb
xchg
lods
push
jo
cmpsl
xchg
cmp
in
stos
mov
pop
sub
fldenv
insb
sbb
and
aam
pop
ss
mov
inc
outsl
mov
cmp
sub
push
xchg
xchg
fcmovnbe
dec
dec
or
rorb
jnp
inc
jmp
mov
aad
inc
push
pop
fistl
and
dec
add
dec
aad
into
cmp
repz
sarb
pop
aaa
cmpsl
mov
pop
ret
mov
call
scas
fsubl
jmp
push
and
and
rcll
sbbl
dec
xchg
outsb
lea
imul
ficompl
fwait
loopne
insl
and
ds
cmpl
mov
bound
into
clc
rorb
push
cmp
fisttpll
data16
bound
mov
scas
movsb
jmp
repnz
fwait
jp
mov
dec
faddl
arpl
test
xchg
mov
push
mov
and
xchg
sub
jp
jne
jnp
loop
js
das
sbb
aad
lods
loope
in
xchg
jno,pn
jnp
sbb
push
pusha
iret
mov
mov
jg
or
test
inc
mov
push
jnp
sub
sahf
fwait
ret
jnp
xchg
xor
jnp
add
stc
dec
jnp
or
addr16
jnp
std
mov
and
xchg
push
repnz
jno
jae
test
jnp
cli
cltd
pop
or
ljmp
adc
inc
mov
scas
and
das
out
test
imul
lods
mov
lret
filds
push
ljmp
mov
dec
cld
ja
jb
shr
test
sub
je
and
cli
mov
imul
hlt
and
inc
cmp
nop
mov
push
pop
inc
push
into
mov
cmp
sbb
or
pushf
pop
push
xchg
addb
xchg
dec
movsl
jecxz
aad
arpl
push
add
jle
lahf
daa
add
xor
push
pop
outsb
in
mov
fisubl
mov
adc
int
loop
jp
lock
pop
dec
pop
or
inc
jne
jnp
in
aas
inc
sar
aad
cli
nop
mov
pop
cmp
xchg
stos
jae
dec
jnp
sti
pop
mov
imul
dec
jb
sahf
jnp
insl
adc
lds
jnp
scas
xchg
stos
jmp
ret
cmp
jg
mov
sahf
jnp
icebp
jmp
dec
cmp
pop
shr
rcrb
or
aaa
xchg
pop
inc
sub
sub
sbb
lods
aas
js
cwtl
adc
xchg
xlat
leave
xchg
pop
nop
mov
jae
stos
roll
xor
sbb
pop
adc
dec
lea
fisttpll
and
xchg
sbb
pop
cmpsb
lahf
adc
rcrb
int
movsb
xor
jb
mov
and
jle
outsb
fbstp
stos
popa
mov
lea
xlat
sub
sub
xor
jnp
aam
outsl
fbld
dec
jmp
test
cli
and
iret
fdivrl
sub
mov
inc
cmp
mov
aam
mov
jl
mov
xor
inc
ja
mov
push
xchg
clc
cmp
jnp
outsb
pop
xchg
sbb
xchg
push
xchg
repnz
push
in
jnp
inc
sbbb
add
sbb
sbb
xchg
jp
jmp
push
dec
xchg
aas
aad
ret
repz
cltd
xor
push
addl
inc
mov
mov
sub
inc
js
jne
clc
xor
mov
or
dec
stos
xlat
jne
jnp
push
je
cmp
jle
xchg
jno
cmp
loope
adc
add
jno
push
out
or
mov
pop
mov
js
int
bnd
sub
sbb
enter
inc
fsts
fmulp
push
les
rolb
movsb
mov
lods
dec
popa
in
jle
sbb
inc
inc
loope
adc
inc
nop
hlt
push
mov
add
rcl
fidivl
add
mov
jecxz
jg
xor
arpl
je
sbb
xchg
jno
cmc
shrb
jno
out
push
movsb
nop
xchg
imul
jbe
insl
mov
movsb
jne
xchg
jnp
mov
leave
hlt
jnp
lcall
jnp
out
add
mov
adc
xor
test
jbe
jnp
ret
mov
rorl
test
mov
pop
mov
push
pop
rolb
or
nop
inc
jnp
pop
pop
pop
mov
add
rorb
push
sbb
mov
adc
or
stc
jns
out
rcrb
testl
xchg
ror
push
mov
jge
xchg
or
inc
xchg
mov
or
pop
cmp
test
adc
xchg
inc
divl
in
cmp
cs
imul
mull
xor
sbb
fistpl
adc
fs
jnp
mov
jno
icebp
orl
rolb
pop
jne
dec
dec
outsl
jnp
pop
les
into
lret
cld
jnp
repnz
pop
or
imul
mov
test
mov
insl
jno
aas
push
jnp
xor
xlat
jle
fldl
in
js
lea
out
inc
mov
mov
mov
jnp
pop
jg
out
cld
mov
outsb
ret
xor
out
fisubrl
psrlq
dec
les
int3
add
pop
dec
gs
mov
mov
lods
xchg
fcoms
in
sbb
dec
cmpsb
cmp
loope
mov
sbb
jle
dec
jnp
test
sahf
and
movsl
jnp
jb
int3
fcoms
sti
cmp
fwait
push
aam
rorb
xchg
inc
xchg
inc
adc
cmp
xchg
jnp
mov
mov
test
mov
loope
movsl
mov
xchg
mov
mov
mov
pop
pop
stos
imul
test
jnp
lock
xor
cmp
pop
cmp
jmp
and
cmp
mov
push
xchg
mov
ret
popf
cmp
dec
xor
jnp
shlb
jnp
xchg
xlat
test
hlt
sub
lcall
notb
je
repnz
fildll
jle
and
jge
xor
pushf
mov
xlat
ret
mov
cmc
pop
cmp
fcoml
test
dec
jnp
testb
jmp
loope
sub
add
pusha
inc
pop
fcom
addr16
jnp
sub
pop
or
mov
repz
popf
inc
in
movsl
notl
notb
mov
jae
jnp
jl
in
outsb
das
addl
scas
mov
jae
mov
test
test
sbb
inc
pushf
clc
fwait
xchg
mov
add
mov
and
das
sbbl
xchg
cld
pop
mov
lods
cmpsl
adc
xor
enter
jns
push
push
xchg
add
js
xchg
inc
xor
test
cltd
ret
sti
push
pop
cmp
jo
jnp
mov
sub
jb
sti
repz
xchg
fdivr
mov
dec
mov
shrb
add
negb
jg
ret
pushf
pop
fcoml
inc
cltd
in
xchg
cmp
and
fisttps
stos
es
daa
inc
mov
jno
call
push
inc
xchg
adc
arpl
pop
les
outsl
into
jp
psrlw
push
jns
adc
pop
mov
adc
dec
mul
popa
aam
cmp
js
jmp
gs
arpl
jb
lcall
rolb
fildl
xchg
or
push
xchg
arpl
and
loopne
aas
int
daa
jecxz
xor
popa
push
cs
cli
icebp
add
sbb
cmpsl
test
ss
jle
adc
iret
stos
push
or
jnp
or
xchg
push
dec
dec
mov
arpl
xlat
add
and
jnp
jle
ds
mov
cs
lods
pop
mov
pushf
pushl
jnp
decb
push
jnp
stos
xchg
fisttpll
xchg
lcall
lret
mov
inc
ss
pop
sbb
repz
and
inc
jnp
lret
shr
or
sbb
dec
shrb
test
int
out
cmp
ljmp
pop
dec
addl
mov
mov
rcll
pop
ja
not
jnp
push
js
dec
sbb
jp
sbbl
or
cmc
inc
insl
mov
push
and
cltd
mov
and
xchg
fwait
push
std
and
xor
push
sbb
hlt
push
mov
xlat
adcb
inc
push
jbe
inc
or
lods
xchg
push
jle
fiadds
xrelease
bound
ret
mov
and
scas
jbe
or
and
cld
or
daa
les
adc
jnp
sub
inc
cmp
push
ja
in
aad
pushf
jnp
pop
add
test
lahf
push
popa
push
popf
cmp
into
jnp
sub
sub
int3
push
xchg
mov
add
cmp
xchg
imul
rcll
inc
jnp
xorl
add
scas
fsubl
je
movsb
xchg
adc
and
mov
jg
push
push
daa
jb
addr16
xor
gs
push
lock
fstps
adc
mov
push
fists
jnp
sbb
xchg
les
or
jae
pushf
xchg
in
lret
jmp
push
xchg
hlt
add
mov
into
push
and
lcall
es
rclb
jmp
jge
sub
test
sbb
sti
mov
aam
xorl
int
push
xchg
into
jl
shrb
test
cmp
add
pushf
pop
nop
out
inc
imul
lcall
sbb
add
es
imul
adc
mov
pop
xchg
xchg
in
fs
mov
cmpl
dec
sbb
adc
inc
test
jno
fmulp
fwait
cmp
cmp
in
or
jns
mov
jle
ja
pop
jae
and
cwtl
inc
pop
pop
jnp
cwtl
sub
jno
mov
cld
mov
mov
sbb
dec
pusha
push
push
fnstcw
je
jecxz
subl
push
mov
cs
dec
inc
xlat
dec
insb
out
pushf
mov
and
sar
call
movsb
inc
xchg
je
jns
out
push
push
ja
rorl
jnp
xchg
nop
scas
cmp
fs
fxch
jnp
stos
sti
in
xchg
out
cld
jnp
ljmp
mov
push
lea
test
xchg
insl
or
add
stos
jecxz
cwtl
mov
mov
mov
outsb
add
pop
or
daa
and
mov
outsl
outsb
xchg
add
cmp
xlat
xor
jecxz
insb
movsb
aaa
imul
or
mov
lea
out
and
mov
scas
jmp
inc
xchg
sti
movsb
jge
pop
mov
jmp
cltd
xor
xor
sub
sbb
inc
cmp
dec
ja
cltd
stos
aam
cmp
fnstcw
jb
or
fs
into
jnp
enter
jmp
jne
cmp
cmp
mov
xchg
jae
sub
xchg
jge
mov
pop
jno
pop
and
sub
mov
jnp
rcrl
dec
jnp
insl
lods
ficoms
cmp
sbb
jle
xchg
dec
sahf
stos
mov
fbld
inc
std
mov
jnp
xor
addr16
pop
int
sbb
mov
lahf
flds
pop
adc
sbbl
xchg
popa
dec
dec
push
dec
dec
xor
shlb
lret
aad
xor
sti
mov
pop
mov
sti
dec
or
jge
test
daa
in
loopne,pn
sub
cmp
mov
sbb
or
mov
lret
fs
add
lds
sbb
sub
mov
jl
jmp
xor
stos
lea
addr16
outsb
xchg
sbb
movsl
mov
or
daa
cli
fwait
imul
lds
add
repnz
cmp
or
xchg
inc
cmp
rcr
test
jecxz
add
push
sub
push
add
sti
xchg
adc
cmp
je
cltd
mov
imul
pop
mov
loopne
outsb
gs
mov
xchg
push
or
mov
dec
pop
add
subl
cmp
repz
out
xor
push
fwait
aam
sub
gs
and
pop
pop
xchg
inc
mov
xchg
push
jl
dec
pop
sbbl
sub
xor
ja
in
xor
test
cmp
xchg
jbe
in
sbb
jnp
dec
push
and
ljmp
xchg
dec
fs
jns
add
dec
shr
in
pop
cld
outsl
push
jnp
sbb
push
imul
pop
aaa
lahf
add
xor
leave
adc
jb
enter
fdivrl
jmp
lahf
and
sar
push
sub
fsubl
sub
lret
repnz
cmpb
pop
fwait
hlt
cmp
fmul
pop
sarw
in
shrb
test
xchg
cmpsb
inc
jmp
icebp
sbb
push
test
daa
push
dec
mov
sbb
mov
js
pop
xchg
mov
dec
mov
test
adc
jnp
push
aaa
dec
adc
sbb
cltd
js
loopne
and
push
ds
addr16
mov
gs
inc
jmp
jnp
mov
pop
sbbb
inc
dec
xchg
bound
fcmovnbe
add
dec
jns
mov
out
nop
cmp
adc
lea
cli
pop
lods
mov
cmp
jg
arpl
pop
mov
xchg
outsb
shll
out
dec
popf
out
adc
adc
push
lcall
xchg
fstps
lret
outsb
vcvttsd2si
icebp
mov
sub
dec
fbld
jge
jns
lock
iret
mov
push
jecxz
or
je
mov
rolb
inc
pop
test
push
outsb
int3
aaa
jp
fsts
jb
shll
test
hlt
xor
mov
xchg
cmp
inc
jle
jns
lock
bswap
lret
daa
cmp
jbe
jp
shlb
cmpsb
loop
arpl
iret
andb
sbb
sub
repnz
int
sub
pop
mov
sti
mov
test
aad
scas
pusha
jmp
xchg
mov
jp
cltd
adcb
xor
xchg
dec
dec
xchg
xchg
ds
push
jnp
pop
divb
test
mov
ucomiss
imul
cmc
push
jnp
les
cmpsl
or
stc
xor
and
and
test
clc
lock
pusha
dec
mov
xchg
push
sub
jne
ss
fists
xchg
mov
lods
iret
pop
scas
addb
ret
jo
lods
jnp
ret
add
adc
and
jnp
imul
pushf
out
cwtl
mov
aaa
mov
add
idivb
enter
shll
shrl
jae
jno
inc
adc
loope
shlb
outsb
mov
mov
push
js
stc
cs
shr
outsb
out
xchg
mov
mov
jg
add
mov
nop
mov
fistpll
jnp
push
or
add
movsb
jnp
aam
mov
and
pop
jnp
mov
push
push
sti
mov
sbb
jo
fdivrs
mov
das
jnp
jo
dec
pop
cltd
jnp
lahf
xor
dec
out
jnp
fucomip
in
sti
cld
sbb
mov
mov
pop
adc
daa
stos
popa
gs
jnp
shr
mov
jnp
popf
fwait
sti
stos
outsb
leave
mov
test
arpl
sbbb
lret
js
mov
mov
jnp
and
xor
test
arpl
jnp
repnz
adc
jnp
pop
lahf
rcll
inc
mov
gs
fisubs
sbb
xor
pop
enter
dec
sub
je
mov
xchg
nop
mov
rol
popa
lods
fstl
lea
xchg
jnp
adcb
ja
and
or
jnp
mov
imul
jnp
in
test
push
sbb
dec
jb
push
idivb
test
ss
mov
fwait
mov
out
jnp
das
push
test
fnstsw
jnp
pop
and
lock
scas
xchg
pop
int3
mov
mov
add
fidivrs
test
and
cmp
int
negb
lods
fsubrl
jnp
or
xchg
cwtl
jnp
mov
or
pop
sahf
outsb
and
insl
jnp
pushf
daa
add
cld
jl
xchg
sub
mov
pop
inc
adcl
out
out
fidivs
mull
jnp
daa
inc
int
test
fnstcw
dec
pop
jnp
imul
js
xor
jnp
scas
jp
xchg
pop
push
inc
jnp
mov
mov
jbe
mov
arpl
icebp
fwait
push
jnp
lock
and
idivl
jnp
movsl
and
jnp
xor
jnp
cmp
pushf
addr16
testb
aad
rolb
mov
push
and
cmpsb
and
sbb
inc
pusha
iret
out
add
pop
or
pop
xorb
sub
roll
in
dec
jnp
ss
jge
imul
cmp
repz
jmpw
mov
and
js
imul
sub
aad
clc
pushf
mov
or
cmc
jnp
sbb
test
add
pushf
jnp
xchg
fadd
in
push
push
arpl
leave
sar
fs
cmp
jnp
data16
fucom
jno
sub
xchg
push
faddl
nop
nop
push
dec
cs
call
stos
fstpl
jnp
adc
test
cmp
jae
fsubs
cmp
movsl
mov
fs
push
mov
popa
dec
sbb
mov
inc
rclb
lea
mov
pop
rcr
addr16
outsb
je
insb
flds
sub
pop
pushf
push
orl
jnp
stos
cs
shlb
jne
sarb
ret
ljmp
mov
jno
cmpb
shr
inc
rorl
push
dec
out
mov
inc
jnp
sub
jnp
cmpsb
or
mov
lods
imul
sbb
sti
shrb
sti
inc
jl
inc
loopne
das
adc
pop
test
dec
and
jnp
pop
jne
gs
data16
repz
add
xchg
pop
jnp
push
push
jbe
jecxz
test
clc
sub
lahf
adc
int3
addb
or
mov
lcall
cmp
insb
jnp,pn
sbb
lret
cmc
dec
adc
icebp
shlb
jnp
xor
cs
cmpl
and
jmp
addr16
add
pop
mov
jnp
xorb
mov
mov
mov
sub
test
mov
jbe
or
jnp
mov
fiadds
pusha
test
rorb
aam
fmuls
in
shr
xchg
inc
repnz
xor
int
cmp
xchg
int3
jnp
stos
xchg
xlat
out
lods
popf
xchg
jnp
mov
or
push
js
test
jmp
aaa
inc
inc
test
or
adc
pop
fldl
mov
xchg
dec
movsb
scas
cmc
xchg
mov
scas
sti
cwtl
mov
lods
and
cli
mov
hlt
loop
xchg
ja
adc
inc
inc
dec
inc
pop
invd
jnp
jns
ja
lods
cmpsb
bnd
aas
xor
mov
clc
xor
faddl
test
inc
mov
sub
jno
or
mov
add
stos
ret
pusha
mov
push
scas
das
ja
std
ss
xchg
int
push
cltd
loope
adc
jnp
bound
das
les
jnp
or
pop
sub
fs
jnp
pop
xchg
pop
mov
iret
xchg
cwtl
cli
dec
sub
inc
not
mov
jns
jnp
inc
scas
in
add
jnp
mov
mov
jg
rcrl
xlat
lock
imul
push
orb
sbb
cli
mov
mov
in
int
inc
add
std
jo
jnp
pop
mov
pop
mov
xor
pushf
jnp
push
std
icebp
xlat
shl
ss
loop
int
push
dec
jnp
cwtl
gs
lock
push
mov
scas
or
jnp
jge
inc
jne
lds
outsl
dec
pusha
push
xor
mov
sub
dec
push
ficoms
out
sbb
aas
testb
imul
jnp
cltd
sahf
xchg
std
push
xor
jnp
sarb
jecxz
fisttpll
jnp
aas
psubd
dec
out
xor
cmp
ja
jnp
push
imul
cltd
roll
outsb
jnp
cmp
and
jbe
imul
ss
push
sbb
pop
cltd
ljmp
and
xorb
inc
push
pop
xor
test
sub
lcall
fcmove
jns
mov
andb
mov
arpl
xchg
jl
jns
ja
and
push
xorb
jo
movsb
sbb
fisubrs
test
fdivrl
mov
push
jp
xchg
arpl
sbb
aaa
imul
mov
jecxz
pushf
roll
mov
mov
scas
arpl
jbe
outsb
xor
lea
leave
mov
dec
aad
sti
dec
jbe
push
mov
xor
scas
push
xorl
jno
scas
mov
cmpl
and
inc
scas
adc
std
cmp
or
or
loop
pop
xchg
test
dec
hlt
push
xchg
movsl
mov
je
jecxz
xchg
or
pop
popa
cmp
cli
and
cmp
xchg
ja
jnp
xchg
out
mov
loop
mov
push
scas
cmp
add
dec
jp
jnp
or
or
xor
adc
std
movl
sahf
imul
ds
mov
xchg
aam
pop
fldenv
arpl
pop
jnp
mov
dec
cmp
sub
xchg
dec
sub
cmc
stc
movsb
jnp
inc
fwait
pop
nop
repz
xor
sbb
inc
pop
pop
scas
lahf
xchg
fdivr
mov
filds
jmp
xchg
cltd
pop
jnp
in
cmpb
arpl
jae
inc
bound
jae
cmp
aam
stos
movsb
rorb
fildll
dec
das
sarb
fwait
mov
ja
push
cmp
fisubl
sahf
cmp
popa
mov
jbe
jnp
dec
adc
pop
stos
sbb
push
jg
mov
outsb
mov
cli
adc
dec
insb
xchg
sub
sub
jl
adc
into
and
mov
jge
daa
lret
dec
sti
fisttpll
inc
jnp
pop
adc
loop
test
add
hlt
mov
pop
sti
in
push
mov
and
cmove
cmp
mov
out
xchg
xchg
loope
sti
scas
jnp
cmp
iret
and
test
inc
mov
jle
stos
stos
xchg
push
sub
sub
mov
jnp
push
sbb
mov
adc
jns
sbb
sub
jo
inc
mov
inc
imul
rolb
pop
and
adc
test
decb
popa
lea
nop
pop
jnp
cmp
push
sub
inc
cmp
dec
shlb
mov
bound
jnp
push
mov
jmp
int
ficompl
pusha
aam
xchg
xor
sub
imul
mov
and
movsb
loope
jnp
insb
xchg
xor
mov
test
jnp
repz
pop
loope
push
mov
lahf
data16
xor
pop
incl
fiaddl
add
sbb
xor
outsl
repnz
leave
mov
ss
pop
jae
sbb
fisubs
push
pop
test
mov
jnp
movsb
or
sub
push
cld
or
and
sbb
xor
gs
test
add
test
shll
mov
or
shlb
in
pop
pop
cmp
jg
jl
push
loop
push
add
insl
sbbb
js
or
adc
add
into
leave
aam
sbb
loopne
cld
hlt
jnp
push
fdivr
pop
cmp
sarb
mov
mov
mov
lret
int
mov
fdivrp
enter
scas
jb
sbbl
jnp
adc
xlat
orl
sbb
outsl
inc
inc
jnp
mov
ljmp
leave
mov
lret
cltd
jb
sti
mov
aaa
jnp
std
aad
xor
sbb
pusha
mov
jge
mov
add
push
jnp
imul
pop
and
xor
addr16
and
mov
add
inc
jmp
xchg
mov
mov
mov
js
pusha
and
mov
es
jns
sti
iret
inc
mov
add
fistpl
push
mov
repz
nopl
pop
bound
jnp
les
and
or
adc
rorb
mov
loope
mov
mov
mov
mov
jnp
jbe
pop
and
pop
xchg
xchg
xor
jl
or
mov
arpl
or
pop
jnp
dec
cmpsb
out
iret
xchg
jnp
sahf
push
cmp
mov
jae
nop
scas
data16
push
enter
loope
int
inc
lcall
jmp
mov
add
and
add
adc
jle
mov
jnp
sub
jnp
js
or
test
and
andb
outsb
jge
adc
adc
xor
xor
push
int
xor
sti
mov
lret
pop
cmp
mov
mov
imul
mov
sti
lods
or
gs
seto
push
add
adc
in
ret
into
in
mulb
arpl
imul
test
push
xchg
xor
mov
outsl
jl
js
idivb
movsl
dec
test
push
xchg
sahf
mov
loopne
mov
into
push
xor
push
push
adc
outsl
out
xchg
adc
jne
mov
sub
popa
cwtl
cmpsb
inc
lcall
dec
sbb
jne
adc
mov
std
je
shl
push
ljmp
and
jge
lock
xlat
sub
imul
jnp
mov
mov
xchg
or
out
inc
pop
xchg
in
ja
nop
ret
jnp
arpl
test
mov
movq
aam
dec
sub
out
xchg
incb
jnp
fisttps
nop
or
push
cmp
enter
jne
xchg
sahf
or
jnp
lock
and
push
jnp
loopne
cmp
test
sub
aad
or
xchg
jnp
push
leave
adc
mov
nop
int
pop
sahf
lods
cmpl
jge
in
gs
or
test
in
xor
jle
in
inc
andb
sub
jmp
or
mov
jnp
negb
daa
ret
cld
jnp
and
hlt
and
dec
or
out
ret
shll
add
mov
shrl
sub
rolb
cmpsl
jnp
in
mov
addr16
repnz
xchg
les
call
push
std
push
xchg
outsb
daa
mov
jnp
add
push
nop
xlat
jnp
fsubr
aam
pop
pop
lods
mov
out
xor
orl
and
jnp
mov
movsl
jne
xchg
push
or
sub
mov
push
sub
insl
imulb
aam
int3
ja
pop
pop
pushf
addl
jnp
std
jno
sti
gs
jnp
push
cmp
push
icebp
ret
ds
clc
xchg
cltd
mov
mov
lods
pop
xor
insb
data16
jecxz
cs
mov
ja
fldt
hlt
test
movsl
sbb
push
stc
add
mov
dec
loope
add
push
xchg
add
jp
sbb
test
pusha
pop
jne
push
dec
jbe
popa
xchg
sbb
jae
inc
sbb
cmp
out
ja
push
xchg
mov
or
push
fildl
push
mov
dec
test
adc
dec
mov
mov
jp
clc
jbe
iret
insb
xchg
arpl
mov
adc
lods
jge
je
rcr
ljmp
inc
mov
xchg
or
movsl
xchg
loopne
inc
outsb
insl
decl
aam
jnp
iret
mov
sti
dec
adc
scas
sbb
push
and
adc
int3
fcompl
pop
and
jnp
sub
xchg
shrb
jnp
mov
jnp
sahf
mov
sub
sti
push
mov
jnp
subb
xchg
ficoml
cmpsl
mov
out
enter
ja
xchg
cmp
jmp
dec
outsl
jnp,pn
shlb
mov
add
std
mov
inc
repz
pop
add
xor
xchg
in
adcl
jnp
cmp
stos
lods
ss
xchg
jnp
jmp
shrl
sub
pop
icebp
lret
adc
js
pop
imul
sahf
mov
sbbl
jle
fbstp
mov
pop
jnp
mov
test
jo
cwtl
dec
and
jnp
popa
rorb
adc
adc
pop
add
js
bnd
mov
mov
mov
xor
xor
ljmp
fbstp
xor
mov
scas
push
pop
or
mov
jnp
xchg
xchg
sbb
sahf
pop
jnp
leave
fsubs
bound
inc
sub
adc
fwait
mov
arpl
inc
inc
cwtl
scas
mov
jo
cmpsb
into
pop
pop
jnp
adc
lds
mov
mov
cmp
shll
je
jnp
pushf
fwait
xor
sbbl
lods
or
xchg
iret
int
jnp
shlb
pushf
xor
xchg
sti
icebp
mov
and
mov
sub
mov
sti
data16
push
or
push
popa
adc
or
mov
fcos
in
cli
jnp
jge
inc
test
xchg
in
push
aam
inc
add
mov
push
sub
bound
cmc
xor
push
les
push
pushf
sti
in
adc
cld
jp
sbb
mov
test
add
push
mov
adc
scas
mov
daa
test
lcall
jb
xlat
in
lods
xchg
mov
pop
lds
adcl
in
xor
test
out
cwtl
pop
pop
stc
xor
xchg
fnstenv
insl
imul
popf
push
in
xor
jnp
cmpl
jnp
jp
cmpsl
xchg
sbb
mov
mov
mov
and
jg
inc
sbb
mov
xchg
cltd
fdivrs
adcl
jnp
fildl
std
imul
mov
daa
sti
ljmp
sub
jnp
sbb
sub
xchg
mov
enter
inc
loope
add
scas
xchg
add
fisttps
and
vmovntpd
lcall
sub
pushf
jnp
sub
sub
add
xchg
mov
cmpsb
pop
lods
push
popa
mov
mov
inc
mov
jmp
repnz
stos
sbb
cmp
mov
outsb
mov
jnp
dec
mov
xchg
loop
outsl
call
jo
xchg
xchg
paddsw
scas
in
clc
test
mov
or
sbb
mov
lods
jecxz
jl
mov
add
cmpsb
cmp
je
jnp
jp
add
data16
pop
sub
loopne
cltd
jmp
xchg
jnp
cmp
test
mov
push
aad
mov
out
cwtl
std
jnp
jbe
pusha
dec
inc
jnp
jo
shrb
rcrl
cwtl
repz
out
call
cmp
js
adc
jnp
inc
push
imul
dec
test
cld
inc
pushf
adc
or
push
fdivp
sti
cmpsl
rcll
pop
jnp
mov
mov
jnp
out
rorl
pop
lret
inc
push
pushf
fisttps
sub
movsl
dec
sbb
xchg
lds
test
jg
ss
cmp
xchg
into
push
push
adc
jnp
and
mov
lods
mov
lods
sub
add
add
inc
mov
cmpsl
fs
xchg
je
aas
pop
jnp
outsb
call
xchg
lea
icebp
dec
pop
push
movsl
jnp
mov
pop
xchg
test
sub
jl
jns
and
sbb
fcoms
or
insb
arpl
jle
adcb
sbb
mov
jne
sbb
adc
bound
or
xor
or
mov
lods
xchg
jnp
xchg
cmp
aas
pop
xor
lock
cmc
mov
xchg
cmpsl
not
test
jnp
or
adc
push
nop
push
stos
mov
jnp
outsb
cmp
jnp
cmp
add
jnp
sub
and
into
icebp
dec
jnp
clc
sbb
repz
xchg
fdivrs
aas
mov
test
call
and
lea
xchg
sbb
rolb
jb
test
insb
scas
xor
sti
mov
push
jle
xchg
je
mov
xor
mov
cmp
cmp
inc
push
jnp
mov
addb
jno
les
jmp
test
sbb
xor
adc
int
mov
pushl
fwait
pop
call
dec
jnp
sbb
clc
leave
stos
jnp,pt
xchg
jge
cmc
out
cmp
imul
cmpsb
xchg
jnp
das
popf
adc
dec
cs
inc
mov
imul
sub
out
lods
pop
pop
loop
test
pop
mov
sbb
aas
sub
ret
push
xchg
mov
dec
iret
jg
adc
jb
adc
jnp
adc
jge
xchg
jne
and
push
or
inc
pop
dec
sub
fsubl
fnstsw
xor
aad
inc
sub
mov
std
je
cs
and
xchg
dec
and
loopne
data16
xchg
adc
xchg
cmpsl
sbb
pop
popa
mov
out
xchg
cmp
andl
jmp
dec
xchg
pushf
test
out
pop
dec
cli
stc
idivb
andl
xchg
cld
movsl
jnp
cmc
out
mov
test
xchg
inc
lds
imul
push
xchg
xlat
ja
jnp
add
sbb
cmpb
pop
pop
addr16
jp
jnp
mov
popa
adc
jno
stos
dec
mov
leave
cld
jl
aas
and
sbb
cmp
jnp
xor
into
mov
mov
inc
cmp
mov
scas
jae
cmpsl
cli
sti
subb
jnp
mov
jp
das
int3
jl
out
enter
cmp
daa
dec
data16
insl
xchg
pop
loopne
lods
xchg
int
sub
sbb
mov
push
jnp
mov
imul
add
pop
and
pop
test
into
lods
and
cmpsl
dec
test
jbe
mov
lret
pushf
and
xor
aam
in
adc
mov
shrb
xchg
sbbl
push
mov
xchg
mov
dec
add
mov
std
xchg
fstp
mov
adc
stc
and
movsb
push
out
or
fs
mov
xchg
ret
scas
loope
inc
jb
or
pop
iret
aam
out
pop
push
aas
jnp
jmp
or
movsb
subl
leave
jl
pusha
mov
add
push
mov
push
cmpl
xor
loop
jo
inc
xchg
and
fcoml
pusha
test
fucompp
daa
fadd
sub
aaa
mov
dec
data16
pop
mov
aad
jg
and
hlt
sbb
jg
pop
rclb
loop
pop
xor
in
jl
cld
je
mov
inc
in
test
push
fcmove
outsb
jo
jge
adc
sub
lret
sub
sub
ror
mov
mov
inc
out
add
xchg
das
dec
jp
js
lds
xchg
push
xchg
dec
push
fildl
xchg
dec
add
mov
pop
sub
cltd
sub
adcl
mov
xchg
or
out
push
xchg
xor
jecxz
out
mov
shr
inc
jb
outsl
jecxz
mov
mov
mov
adc
or
int
adc
mov
clc
rclb
jg
in
pop
das
pop
stos
lcall
mov
adc
iret
sub
sbb
cwtl
add
imul
push
mov
mov
daa
test
filds
adc
mov
xchg
dec
add
call
fwait
mov
jnp
add
jb
test
fstpt
inc
lea
mov
sbb
test
cli
cmp
pushf
pusha
lahf
ja
clc
cmp
jnp
cmpl
or
test
xchg
mov
outsl
into
call
pop
jmp
adc
test
loopne
test
jnp
push
add
mov
test
sbb
pop
jnp
sub
cwtl
outsb
mov
jnp
les
bnd
or
imul
ljmp
test
inc
scas
mov
or
mov
daa
lock
dec
jge
test
add
jnp
test
xchg
pop
pop
jnp
es
cs
push
out
xchg
lahf
mov
mov
cmp
insb
pop
repz
cmp
arpl
add
stos
mov
jge
stos
mov
jecxz
stc
sub
pop
or
je
add
push
fsubs
mov
pop
xchg
lods
sti
gs
cmc
stos
call
mov
rolb
mov
adc
pop
pop
stos
sbb
popa
movsb
add
out
scas
shll
mov
push
pop
repz
mov
sbb
fwait
fwait
inc
jno
cmp
cmpsb
mov
fstpt
xor
jnp
jge
sbb
adc
xchg
sti
xchg
hlt
lock
jl
aad
test
fwait
xor
sub
jmp
or
mov
cmpsb
push
mov
jnp
rcll
movsl
xchg
pushf
fsubl
outsl
adc
jnp
shr
test
jnp
inc
mov
add
push
cmpsb
jnp
icebp
int
ds
sub
aaa
lds
iret
xchg
ret
clc
mov
das
inc
sti
jno,pn
mov
test
lret
push
and
push
or
adc
lret
push
inc
fcomi
xchg
dec
cltd
cmp
fs
jnp
cmp
mov
dec
je
jnp
mov
insl
fstpt
setne
mov
aaa
jnp
dec
mov
jae
mov
mov
mov
out
fwait
inc
mov
dec
test
push
jno
jnp
lret
xchg
jnp
push
push
sub
les
xor
scas
vpavgb
fcomps
xchg
jmp
rolb
lret
in
testl
mov
in
push
fnstsw
cmp
and
dec
mov
mov
subl
mov
outsl
jg
cmpsb
pushf
xorb
jmp
jnp
add
popf
aam
cmpsb
cmp
add
mov
sbb
xchg
js
sti
nop
xor
outsb
lahf
imul
jnp
mov
inc
cmp
rcrb
pop
stos
out
clc
xchg
scas
xchg
jno
inc
jnp
fimull
push
cmp
stos
jnp
lcall
addr16
test
mov
jg
pop
mov
jnp
leave
mov
not
test
psubw
mov
addb
or
or
sbb
and
lods
jnp
cmp
adc
push
xlat
orl
add
dec
or
aaa
xchg
leave
loop
lret
jnp
pushf
jmp
ljmp
add
cwtl
mov
hlt
popa
or
mov
or
insb
lret
sahf
jecxz
xchg
sbbb
sbb
mov
adc
and
jae
test
pop
sti
out
inc
in
add
ss
hlt
das
aas
jnp
lea
jnp
in
mov
loope
jnp
push
repz
push
jbe
mov
and
in
in
movsl
sub
xor
push
jnp
jg
daa
test
into
movsl
out
jmp
addr16
push
jbe
cmpsl
ja
lock
test
sub
fwait
sbb
jne
dec
adc
jbe
lods
bound
cmp
jnp
push
mov
sub
mov
fnstsw
out
nop
sbb
add
arpl
fmuls
pop
cltd
insb
and
push
mov
mov
jbe
ret
movsb
aad
push
sbb
icebp
mov
jg
and
movsb
push
sub
orl
push
ja
add
xor
test
xchg
push
inc
dec
mov
push
push
jb
cmpsb
popf
in
lcall
xchg
cli
xor
mov
adc
pop
mov
pop
jecxz
xlat
xchg
outsb
sub
push
push
xchg
mov
mov
push
pushf
test
mov
hlt
xchg
aad
sub
test
xor
pushf
jnp
sbb
mov
fists
pop
fnsave
jmp
idivb
std
or
sbb
xchg
jmp
je
pusha
xchg
fs
adc
jne
dec
mov
pop
test
xor
xor
adc
jb
jnp
mov
dec
sarl
cmp
addl
data16
xchg
and
xchg
insl
sbb
cli
jnp
or
jb
push
mov
stos
lret
andb
pushf
hlt
dec
je
jns
push
mov
or
out
sbb
jg
inc
test
movsb
mov
std
jnp
or
lahf
xchg
jnp
lock
and
add
jnp
imul
xchg
gs
hlt
mov
cmp
pop
jle
sbbb
test
nop
jnp
inc
adc
jnp
fdiv
call
icebp
push
push
sarb
xchg
ret
jnp
std
dec
pop
pop
sbb
jge
int
jb
push
push
mov
pop
imul
shlb
or
stc
pop
fldt
lret
enter
gs
mov
dec
inc
stc
pop
jnp
shr
mov
movq
lahf
ja
popa
mov
sub
roll
dec
sbb
push
lahf
jbe
popf
jnp
or
dec
mov
mov
dec
inc
cltd
scas
add
xchg
xor
adc
dec
call
loop
mov
out
inc
jnp
push
ret
cwtl
jnp
fdivp
and
inc
pop
test
cmp
mov
lret
aad
inc
mov
sbb
mov
push
fs
dec
stos
mov
pop
cmovle
daa
jnp
iret
into
imul
lret
xor
in
sti
xchg
lock
fsubrl
repz
stos
out
outsl
add
icebp
jnp
push
jge
inc
jl
mov
sub
hlt
push
or
ret
cmpsl
and
lahf
xchg
xor
mov
xor
adc
test
or
and
dec
test
push
insb
shlb
add
xor
movsb
cs
push
lods
jg
adc
pop
mov
aaa
icebp
loope
inc
inc
mov
insb
in
jge
aam
testb
mov
in
sub
outsb
jp
push
pop
push
push
cmp
mov
jecxz
jmp
sub
test
push
mov
xchg
je
xchg
jp
sbbb
xor
cmc
xchg
js
sti
mov
cmp
or
aas
add
std
mov
mov
pop
mov
push
inc
outsb
sti
jle
jns
stc
repz
cmp
jnp
pushf
pop
push
sub
xor
repz
test
jns
jnp
aad
jne
hlt
cmc
lret
jnp
cltd
enter
jecxz
mov
cs
dec
lcall
push
jnp
xchg
scas
hlt
mov
aas
cmp
adc
cltd
sbb
add
xchg
bswap
sbb
test
mov
lahf
subl
dec
push
es
xor
cltd
jnp
arpl
cmp
pop
mov
scas
insb
stos
inc
mov
inc
push
pop
dec
push
test
roll
or
nop
insl
das
mov
mov
cmp
nop
mov
push
sti
jns
xor
sarb
ds
and
movsl
xchg
outsl
std
add
jnp
sub
aas
fwait
adcb
sbb
dec
sub
repnz
nop
in
and
jns
jb
mov
fwait
lcall
mov
push
pusha
push
cltd
add
jo
and
sbb
jg
in
std
mov
sahf
daa
sub
test
mov
push
jnp
ficomps
push
xchg
cmp
inc
jnp
stos
jmp
shlb
aad
lahf
bound
cwtl
mov
cmpsb
pop
imul
fcoms
jne
popf
std
or
push
add
shrb
stc
pop
xchg
sahf
arpl
jl
daa
stos
fistpll
int
or
adc
aaa
movsb
jecxz
lds
mov
jl
aas
popl
add
sbb
stos
out
int3
cltd
jb
inc
push
jecxz
pop
das
in
aaa
add
ret
lods
jnp
fsubrl
test
jbe
or
lret
repnz
pop
in
cmp
inc
test
jno
xchg
push
sahf
in
retw
mov
add
cmpsl
fimull
aad
jns
cmp
clc
mov
pop
lcall
fcomps
inc
jae
jnp
xchg
insb
sahf
lds
fcmovbe
xor
pop
jle
xchg
sbb
pushl
adc
mov
push
cmp
popf
jns
pop
jmp
jg
pop
jnp
adc
and
testl
jmp
xchg
lcall
cmp
das
in
test
xchg
inc
and
imull
jle
aas
rolb
dec
xchg
test
js
and
insb
jnp
int
leave
mov
aad
fldenv
cmp
cmp
enter
jl
je
xlat
mov
or
jnp
rorl
dec
xchg
int
lods
jnp
jp
sub
in
cwtl
push
ficompl
icebp
jb
test
cwtl
lahf
sti
adc
mov
in
aad
jno
push
pop
ret
and
mov
mov
dec
mov
inc
jmp
insl
push
iret
fwait
call
ret
push
leave
fnstcw
dec
fmull
jnp
and
cmp
fisubl
sub
sahf
inc
jnp
scas
dec
lahf
loopne
les
and
sbb
lret
lods
xchg
inc
mov
push
adc
daa
or
pushf
stos
mov
cmp
push
xor
shlb
and
mov
dec
add
xchg
pop
pop
stc
repnz
icebp
mov
jnp
add
imul
push
in
pop
pushf
ret
lahf
xchg
jne
sbb
stos
cmpb
add
and
loopne
xor
jnp
sbb
pop
mov
sub
and
jbe
jmp
and
orb
mov
jge
jbe
cmpsb
jnp
insl
jns
pusha
outsl
setns
pop
test
dec
add
push
enter
sbb
movsb
lcall
lea
xchg
mov
inc
loopne
xchg
lret
dec
push
sti
inc
jns
in
add
mov
cmp
dec
sarl
sbb
loopne
lcall
jno
into
pop
mov
mov
out
dec
dec
or
loopne
jnp
stc
push
or
adc
mov
or
adc
xchg
insl
pop
ljmp
mov
cmc
jg
scas
adc
daa
lcallw
test
adc
mov
push
mov
test
test
and
in
fbstp
jmp
repz
jnp
dec
insb
mov
xchg
mov
sub
mov
lret
sbb
hlt
sbb
adc
dec
jnp
mov
lock
push
mov
lds
sbb
daa
cmp
sub
xchg
sub
repz
mov
adc
mov
int
inc
xchg
cli
add
fsubrl
sub
jmp
mov
fnsave
loopne
lcall
lods
call
fsubrl
js
rcr
mov
pop
mov
mov
les
add
test
out
jp
sub
icebp
mov
inc
add
sub
cmp
imul
stc
dec
sbb
xchg
push
xchg
data16
xchg
icebp
bound
out
add
rol
add
pop
jg
lea
loopne
out
xchg
scas
test
cli
or
fidivl
sbb
fistpl
mov
shlb
jle
jo
cmp
sub
cmp
orb
stos
xor
fnstcw
pop
cld
mov
add
jp
ret
mov
out
repnz
pop
adc
movsb
leave
enter
sarb
or
jnp
movsl
xor
pop
cs
jnp
push
push
dec
bound
or
push
pop
cli
sti
mov
xor
ds
jnp
ss
jnp
shlb
lods
jno
insl
fiaddl
inc
scas
xor
adc
adc
shlb
mov
jnp
fidivs
lds
rcrl
xchg
nop
mov
jnp
or
mov
mov
push
sbb
cmp
sbb
and
test
mov
rcrl
jge
jnp
jmp
scas
lea
or
cmp
ja
add
arpl
inc
jnp
movl
mov
or
leave
lock
outsb
mov
cmc
jno
dec
jne
mov
mov
push
mov
jnp
lahf
icebp
sub
jbe
mov
xchg
mov
and
in
fildll
cmpsb
jnp
and
adc
xor
jnp
mov
sarl
fxch
je
cmp
cltd
lcall
xor
rcrb
inc
and
shl
add
or
into
movsl
pusha
mov
sub
xchg
scas
lret
fwait
jnp
je
push
shrb
jecxz
jne
sub
mov
mov
inc
es
push
movsl
mov
inc
push
les
pop
out
xchg
call
enter
clc
cmp
fldcw
mov
xchg
and
in
sub
repnz
pop
jnp
push
push
mov
cmp
fistps
in
lcall
shrl
mov
sti
fnstenv
test
iret
add
stos
or
fldenv
ror
stos
inc
rcr
jns
sub
lret
xchg
sbbb
gs
xor
lods
call
repz
imul
iret
out
jnp
test
les
adc
and
gs
mov
inc
and
cmp
scas
mov
mov
xor
xor
push
inc
mov
add
push
nop
data16
cmp
mov
jns
jnp
and
fimuls
inc
mov
int
cld
jnp
mov
xor
repz
adcb
test
adc
and
sti
jecxz
iret
pop
test
adc
push
pop
adc
jnp
sti
cwtl
cmp
xchg
fisttpl
add
sub
cld
das
mov
test
mov
pop
push
ficompl
and
push
cmp
aas
inc
aam
jnp
cmp
push
jnp
push
or
xorl
fsubrp
pop
fcoml
inc
xor
leave
dec
lea
xchg
notl
dec
inc
and
ret
sbb
cli
sbb
lods
shrl
pushf
push
arpl
xchg
test
jb
js
clc
mov
sbb
les
shr
aas
fisttpll
mov
std
cld
outsb
fwait
sub
int3
jecxz
call
mov
xor
and
and
mov
pusha
daa
imul
lea
iret
add
addr16
dec
jnp
addb
jnp
and
xlat
mov
test
lcall
test
out
pop
inc
cs
and
fmuls
int3
bnd
sub
inc
cwtl
jecxz
sarb
xchg
loope
cmp
mov
mov
sti
fmuls
xor
inc
add
mov
es
mov
cmp
inc
or
test
pop
outsl
dec
xor
imul
addl
movsb
jne
pop
sub
cmp
mov
lods
sbb
jp
inc
xlat
cwtl
scas
push
cmpsl
mov
insl
pushf
dec
lahf
iret
add
fwait
mov
sbb
pop
pop
cmp
int
jns
mov
xchg
xchg
jnp
xchg
pop
pop
jle
push
movsb
fidivrs
cmc
fldt
inc
aad
push
and
mov
cmp
dec
mov
in
int
cmpsl
testb
fdivrs
cmpsb
outsb
xor
fwait
mov
mov
imul
cld
or
je
repnz
add
push
setg
stc
dec
xlat
sbb
jmp
jne
sbb
mov
negl
mov
insb
subb
jle
push
push
pop
aas
cmp
loope
push
movsb
xchg
or
out
mov
xor
pop
jle
fwait
test
loopne
movsb
sbb
imul
subl
addl
in
sarb
nop
adc
push
fldt
sbb
mul
movb
adc
add
mov
ljmp
mov
ljmp
jecxz
mov
leave
lock
mov
gs
pop
jp
stos
testl
mov
sub
sbb
outsb
ja
call
jnp
popa
xchg
cmp
ja
pushf
fisttps
fistl
fwait
mov
enter
push
mov
icebp
loop
sbb
jnp
or
xor
add
jns
in
scas
cli
jnp
mov
ror
jnp
mov
std
xor
mov
cmp
nop
pop
dec
test
or
stc
xchg
fildll
adc
mov
jmp
cmp
mov
adc
into
pop
insl
je
mov
test
sub
or
inc
or
jl
cltd
mov
jecxz
add
jns
popf
test
jecxz
jl
sbb
jmp
int
pushf
or
adc
jmp
test
in
sub
xchg
jecxz
jnp
lret
mov
test
cmc
in
lahf
push
rorb
leave
jnp
les
fwait
arpl
mov
insb
inc
pop
out
popa
xor
jnp
pop
pop
aaa
jg
and
xchg
jp
mov
cmp
dec
gs
ja
mov
add
cli
pop
pop
cmp
lahf
pop
mov
addr16
pop
sub
sbb
cmp
enter
mov
test
push
icebp
mov
sub
std
cmp
popa
jne
jns
xchg
test
jmp
push
xor
mov
mov
test
arpl
outsl
cmpsb
mov
xchg
repnz
or
jp
test
jnp
jg
in
outsl
mov
fadds
rorb
inc
or
sbb
cmp
clc
add
mov
fs
inc
jnp
call
mov
jnp
sahf
or
sub
in
jmp
jnp
imul
xchg
xchg
cmp
xor
or
loopne
sti
lcall
dec
sahf
out
jnp
fwait
push
insb
and
jnp
mov
cmpsl
fs
dec
aas
filds
mov
pop
addr16
mov
popa
call
mov
enter
cmp
pop
jmp
adc
push
sarl
jl
pop
push
outsb
mov
in
push
and
pop
mov
arpl
movl
data16
nop
or
add
sub
lods
cs
test
mov
xchg
mov
arpl
out
sub
fwait
xchg
jnp
xor
jne
outsl
cmc
mov
add
or
test
mov
adc
cwtl
xor
data16
dec
jae
sarb
bnd
loopne
dec
popf
mov
stos
jnp
fdiv
mov
cmpsl
add
mov
popw
cmp
push
push
insl
xor
mov
loop
dec
and
pop
std
push
jbe
ficompl
cwtl
or
and
mov
data16
mov
fiaddl
fs
imul
cmc
inc
adc
push
cltd
inc
cmp
arpl
icebp
sub
dec
push
lods
and
jmp
jecxz
inc
mov
cmp
addl
bound
out
in
mov
jnp
cmp
push
or
enter
adc
test
and
xchg
sti
push
cmp
imul
mov
jnp
xorb
jnp
and
xchg
inc
xor
leave
lea
add
loopne
ret
lret
pop
mov
in
jns
xchg
mov
push
movsl
adc
mov
jae
out
add
addb
fbstp
popa
mov
sbb
jbe
daa
xor
mov
push
lea
enter
dec
lahf
rolb
jg
lret
lret
jnp
jno
jge
call
aam
repz
cmpsl
or
xor
xor
fcomi
dec
dec
and
inc
push
in
mov
insl
out
popa
dec
jnp
mov
mov
mov
movsl
daa
jae
or
jnp
in
sbb
and
shlb
adc
lret
and
in
jnp
cmpsb
and
mov
sub
cmp
cmp
mov
inc
fiaddl
cli
fcmovnbe
lret
loopne
pop
mov
adc
sub
or
mov
jnp
dec
data16
pop
sti
and
int3
imul
jnp
out
lcall
jae
cltd
aam
push
sti
and
filds
cmp
insb
xchg
inc
jp
fdivr
icebp
sub
xlat
imul
rcll
xor
adc
cmp
inc
fisubs
pushf
shlb
mov
shrb
ds
andb
jnp
pop
cld
and
test
mov
and
add
mov
mov
xor
sub
call
add
xchg
jnp
mulb
cmpl
jo
out
ds
mov
mov
mov
push
xchg
jge
ss
sbb
jg
and
push
or
mov
adc
fiadds
sti
add
jecxz
pushf
mov
fmuls
sbb
loopne
pop
push
aaa
nop
jnp
cmp
dec
jnp
mov
pop
xchg
jnp
cli
call
mov
xor
stos
out
das
scas
outsl
jnp
lret
push
movsl
xchg
push
nop
pop
or
imul
push
cmc
es
jp
sub
mov
hlt
repnz
push
cmc
mov
push
sub
adc
test
push
jnp
jl
sbb
fsubrl
shlb
aas
dec
es
mov
outsl
pop
cmp
jmp
mov
add
cmp
or
in
imul
scas
mov
iret
call
lahf
lahf
insb
push
jae
aad
cmp
dec
fimull
jnp
xchg
repnz
adc
jnp
test
es
push
pusha
sarl
jns
jecxz
dec
pushf
jne
push
fiadds
xchg
mov
aas
mov
push
loope
flds
mov
rcrl
ss
repnz
jnp
xor
sbb
jnp
xor
emms
xchg
mov
loope
jnp
dec
sub
mov
cmp
sbb
int3
and
dec
pushf
sbb
xor
sti
fninit
mov
cmp
sub
jmp
sub
icebp
test
in
add
push
sub
xor
push
stos
out
adc
and
push
sbb
les
add
iret
sub
push
test
jnp
dec
stos
jl
add
jnp
jae
fists
in
mov
test
push
int
rcrb
sbbl
jecxz
push
pop
jnp
mov
push
gs
jnp
jb
cmp
jle
mov
mov
lods
stos
pop
and
add
jl
sbb
jno
mov
and
xchg
sub
jno
sbb
ds
pop
cmpb
out
mov
fsts
filds
divl
xor
aaa
icebp
sub
mov
addr16
or
cmc
add
cmpsl
mov
out
mov
scas
data16
sti
add
daa
xchg
pop
push
lods
shrb
sub
cs
jle
xor
dec
jge
jecxz
fcompl
and
cmp
outsb
insb
lods
loop
pop
bound
mov
sti
pop
rorb
cld
ret
jnp
pop
fstpt
mov
fiadds
push
in
scas
shll
mov
xor
xchg
dec
enter
sub
pop
test
test
push
pop
xor
int3
push
or
jnp
xor
sub
stc
jnp
not
int3
xchg
mov
inc
test
sbb
js
dec
jnp
out
inc
pusha
js
push
test
sbbl
cmp
adc
aaa
push
xor
or
and
cmp
add
jnp
rcll
mov
outsb
sti
mov
cmpsl
jnp
rolb
xchg
mov
mov
test
jns
mov
rcr
xor
cmpsl
fstps
lods
jnp
enter
pop
inc
xchg
jnp
mov
pop
add
repnz
sub
jnp
insl
lcall
inc
mov
mov
jne
pushf
mov
sub
fsubl
cmc
es
sar
ds
test
pop
and
outsl
rcr
cmp
nop
pop
push
sti
and
adc
mov
int3
mov
push
fs
test
fimull
shll
es
pop
jnp
std
popa
jecxz
out
sbb
jnp
icebp
or
xchg
test
dec
ds
pop
mov
in
out
push
mov
ja
jmp
stc
int3
clc
mov
adc
sti
rcrb
jecxz
cwtl
push
adc
mov
test
jp
scas
mov
adc
mov
addr16
test
out
sbb
dec
inc
fwait
pop
pop
jnp
mov
mov
pushf
or
aad
imul
ret
imul
sbb
adc
xchg
add
ret
mov
test
mov
adc
nop
cmp
pop
and
test
sub
mov
sbb
jnp
jge
mov
jnp
out
in
js
dec
insb
or
jae
mov
cltd
jno
mov
mov
inc
inc
jnp
cli
loope
leave
jo
fdiv
scas
jnp
xlat
cmp
mov
xchg
jle
loope
jnp
push
or
mov
int3
and
fwait
insl
jnp
popf
dec
dec
pusha
pop
push
push
xchg
stos
pop
lret
aam
jmp
xchg
and
sbb
sarl
sub
fstpl
jnp
and
push
mov
push
mov
cmp
test
cltd
add
sub
xor
jno,pn
jae
jnp
xor
shll
inc
stos
aam
cmc
inc
lahf
lret
sti
shll
adc
mov
add
fbld
mov
cltd
push
pop
movsl
pop
jnp
fidivrs
inc
rcr
aam
xor
popa
out
cs
cli
push
sahf
fldcw
jnp
fildl
sub
int
mov
lods
or
or
out
dec
stos
in
mov
idivb
lret
mov
scas
mov
mov
push
sub
push
iret
lods
je
imul
jnp
add
and
mov
enter
jle
pop
inc
adc
pop
inc
jnp
mov
pop
stc
jnp
add
mov
pop
inc
jnp
dec
dec
in
and
fidivrl
mov
add
dec
and
cli
lods
aas
mov
add
stos
pop
jae
jnp
sbb
je
or
and
loop
adc
push
jnp
sub
mov
sti
ret
movsl
idivb
insl
pop
test
dec
addr16
int
ds
lret
ret
stos
xor
mov
jnp
cmp
adc
mov
fnstenv
addl
loopne
jle
pop
rolb
call
push
cmp
dec
mov
out
and
rcl
sub
cmpsl
cmpsl
sbb
pop
jnp
cmp
popf
xchg
ljmp
loopne
jl
shrl
and
int3
add
xchg
add
push
xor
imul
mov
xor
fadds
ljmp
xor
mov
gs
and
shl
leave
mov
cmpsb
nop
aad
lods
cmp
inc
mov
jae
outsb
cmp
rcrb
jae
test
and
mov
in
lock
decb
jnp
push
cmpsb
push
push
jno
mov
addps
jnp
in
add
jnp
jp
js
pop
daa
sahf
jmp
cltd
fadds
push
nop
pop
or
sbb
shll
sub
loope
mov
push
jnp
icebp
cmc
push
xor
outsb
push
mulb
jnp
push
insb
repz
xchg
in
cmp
cmovae
pop
cmp
lcall
push
decl
jne
pop
add
mov
imul
push
xchg
stc
push
add
ret
sti
je
xchg
xor
push
leave
rolb
adc
pop
aaa
add
mov
das
out
frstor
in
jae
in
xlat
daa
mov
push
jbe
sbb
cld
sub
pop
ret
aad
mov
mov
pop
or
mov
or
jb
shrb
cmp
ret
jnp
inc
xor
in
sub
loop
arpl
and
in
mov
cli
fidivrl
mov
insb
jnp
dec
repz
jnp
cwtl
ja
sub
loopne
jnp
sub
in
jnp
pusha
sub
jnp
jne
enter
pop
jnp
int3
or
cmp
fnstcw
lahf
outsl
test
adc
mov
inc
sarl
test
jnp
mov
stc
pop
jnp
xchg
pop
cmp
insb
jnp
cmp
jnp
outsb
add
repnz
jnp
xor
mov
cmc
sub
xchg
push
sub
jae
adc
jnp
sarb
or
inc
mov
sbb
mov
fstpl
push
jns
jnp
xchg
stos
and
repnz
out
test
jns
inc
lods
xchg
sub
jg
or
out
adc
jmp
pop
inc
cmp
stc
dec
dec
mov
scas
mov
pop
flds
sub
in
sti
sbb
ret
mov
loope
xor
std
jno
pop
cmp
dec
xchg
jg
repz
dec
icebp
outsl
pop
cmc
sahf
jnp
and
mov
into
fidivrs
jno
das
out
jnp
mov
mov
xchg
or
out
ljmp
stc
pminub
inc
js
popf
dec
test
sti
push
leave
xor
outsb
add
jbe
mov
cmp
and
loope
inc
aad
cs
out
xorb
add
jno
mov
dec
je
arpl
leave
mov
add
jecxz
xchg
cmp
faddl
sub
in
movsb
rclb
ror
outsb
push
mov
loope
push
jnp
mov
ret
mov
pop
dec
inc
push
jbe
or
dec
cli
lret
popf
js
add
popf
ret
ljmp
iret
loope
jecxz
jbe
sbb
inc
push
sti
pop
pop
jae
movsb
xchg
jmp
xlat
xchg
mov
add
mov
inc
fdivrl
fdivrs
mov
xor
cmp
push
pop
mov
arpl
lahf
inc
pop
dec
cmp
add
rorl
xor
sub
outsl
mov
sarl
ljmp
mov
jecxz
inc
imulb
add
jnp
in
jecxz
sub
xchg
sub
sbbb
inc
stc
add
fwait
test
jmp
mov
cmp
jnp
or
dec
add
cwtl
mov
mov
aas
sub
jmp
psubd
in
std
test
les
mov
outsb
sub
xlat
jnp
mov
and
jnp
rorl
inc
mov
adc
test
xchg
cmpsb
push
inc
sti
mov
jnp
pushl
in
xchg
pushf
pop
jno
int3
aad
sti
jl
push
popa
mov
fmulp
sti
dec
pop
arpl
xchg
push
arpl
jnp
ljmp
cmpsb
mov
mov
xchg
jmp
popf
nop
into
cmp
jb
push
jnp
sub
int3
in
cs
jno
jnp
repz
mov
fmull
pop
push
sbb
jne
clc
cld
test
sti
adc
mov
dec
cs
inc
les
rol
pop
ljmp
sbb
imulb
test
and
nop
sbbb
aaa
hlt
sub
inc
inc
pop
jnp
push
push
or
icebp
jnp
adc
mov
and
jnp
sarb
xchg
and
fwait
jnp
and
mov
int3
lods
dec
add
jnp
jecxz
mov
out
dec
jnp
test
and
addr16
jnp
push
xchg
shrb
or
lret
pop
hlt
push
pushf
lahf
ret
mov
cmp
and
mov
leave
in
push
push
iret
jnp
mov
push
cmpb
adc
faddp
fwait
int
lds
mov
fcoml
jnp
xor
inc
push
mov
xor
rcl
add
int3
in
mov
scas
mov
mov
cmpsb
push
push
in
and
data16
fiaddl
sub
dec
jnp
stos
fadds
ret
jp
lahf
inc
daa
sub
adc
pop
mov
push
out
fisttpl
pusha
push
lcall
inc
cmp
in
fcoms
jno
aad
test
inc
fldt
loop
gs
mov
test
frstor
lret
mov
dec
mov
imul
hlt
sub
jnp
shrb
pop
in
xchg
test
inc
inc
mov
jl
cmp
cli
xchg
cmp
divl
pop
lret
inc
or
repnz
out
scas
pop
inc
xchg
cwtl
outsb
inc
lret
aaa
shll
fnsave
repnz
shll
sbb
cmp
sub
jnp
fldenv
cmp
notb
mov
mov
xor
sub
in
sahf
xchg
mov
test
mov
xchg
dec
jns
mov
mov
dec
dec
adc
add
sub
stos
repnz
mov
mov
movsb
insl
stc
lahf
rcll
mov
test
dec
insl
cmp
nop
repnz
xchg
cmp
daa
or
fstpt
stos
dec
mov
shr
gs
loop
xor
mov
into
mov
cli
sti
sbb
mov
out
fwait
imul
cmc
addb
cmpb
inc
call
pop
jne
shlb
fistl
jb
xchg
adc
fildll
pop
jge
das
lods
push
je
aas
rcrb
adc
mov
in
cmpsb
sti
push
xchg
mov
leave
sbb
mov
out
sub
js
push
cmp
outsl
fidivl
xor
cmp
movsb
jge
cmc
out
es
loope
stos
add
in
jnp
mov
aaa
fisttpll
aas
cmp
mov
outsl
dec
pop
adc
outsb
inc
or
fidivrs
aam
sbb
orb
push
sbb
ljmp
mov
inc
insl
mov
adc
or
mov
sub
xor
pusha
mov
jbe
pop
lods
xchg
push
iret
out
jnp
cmpsb
fimull
jo
out
adc
jb
outsb
inc
call
in
enter
pusha
pop
cmp
inc
jl
pop
xor
cwtl
fistl
jb
movsb
ret
mov
jle
mov
int
gs
lcall
pop
mov
mov
mov
cmpsb
inc
lock
or
sub
mov
inc
lods
int
cmp
jnp
mov
clc
inc
pop
je
jnp
jmp
and
outsb
jno
mov
jns
in
pop
ret
popf
jne
sahf
mov
clc
mov
fmull
jnp
or
je
outsb
mov
lret
xor
sti
pop
and
arpl
jnp
enter
dec
push
mov
cmp
std
dec
sti
push
movsb
xchg
in
jnp
jmp
adc
or
lcall
xchg
outsl
loope
jae
cli
popf
stc
push
mov
pop
movsl
outsb
xor
arpl
xor
test
mov
dec
fs
pop
scas
mov
mov
in
mov
pop
dec
sub
mov
jbe
out
stc
lods
mov
mov
testl
sub
mov
push
add
cmp
sti
and
mov
or
jnp
inc
sbb
xor
into
xchg
enter
das
hlt
mov
je
mov
jbe
jmp
icebp
dec
sbb
jo
push
xchg
and
cmp
lds
lcall
inc
lcall
add
cmpsb
outsl
popa
xchg
rorb
and
aam
mov
add
imul
mov
mov
aas
or
pushf
mov
test
sub
bnd
cwtl
andl
xlat
jo
pop
push
and
add
mov
fadd
call
arpl
je
scas
xchg
push
jnp
int
stos
in
iret
adc
or
out
clc
or
das
add
adc
push
xchg
mov
movsl
jnp
enter
mov
xchg
nop
adc
cmp
icebp
push
dec
adc
jnp
ficoml
stc
inc
addr16
cwtl
rcl
adc
push
or
insb
js
push
mov
xchg
push
insl
jnp
pusha
mov
daa
ja
jnp
push
insl
inc
add
and
in
mov
and
lds
jnp
inc
mov
mov
cwtl
jne
dec
xor
mov
adc
nopl
subl
dec
cmpl
imul
and
imul
push
insb
sti
jp
and
fistpl
jnp
lods
jae
ljmp
test
icebp
or
insb
test
leave
cmp
negb
inc
mov
or
cltd
cltd
andb
insb
insl
push
lret
movsb
push
iret
jnp
ficoml
xchg
push
mov
push
hlt
das
aaa
xchg
jnp
es
cmp
jnp
mov
lcall
ror
jcxz
mov
xchg
orb
mov
dec
jnp
and
inc
outsb
clc
ljmp
push
aam
jl
mov
adc
adc
jnp
cmp
sub
cmpsb
and
cmpl
pop
loope
push
adc
leave
pop
imul
je
pop
xlat
andl
out
fwait
out
sub
jnp
decl
xchg
jnp
sub
test
xor
mov
nop
inc
sub
adc
insb
adc
sbb
jmp
push
aaa
add
sub
sbb
xchg
xor
arpl
mov
int
push
jnp
or
ret
xchg
pushf
mov
jno
lahf
push
jnp
iret
add
jnp
outsb
gs
sub
test
rolb
ljmp
push
cld
sbb
aam
outsl
inc
pushf
jo
mov
das
out
sbb
dec
dec
jmp
jnp
mov
iret
lock
mov
in
mov
fidivrl
out
js
test
lcall
mov
pop
pushf
jnp
add
add
shlb
popf
int3
icebp
push
lds
shll
mov
test
cmp
int
lret
mov
jae
push
enter
or
push
pop
outsb
pushf
xchg
adc
lods
fisubrs
mov
into
ret
dec
cltd
outsl
adc
sbb
adc
jne
aas
fisttpl
add
lods
sahf
es
mov
sbb
test
push
mov
scas
test
pop
sbb
iret
adc
adcb
adc
daa
iret
loopne
xchg
cmpsl
or
in
jmp
stos
adcb
inc
xor
fiaddl
das
mov
ret
ret
stc
pop
adc
test
jnp
inc
cmp
pop
fnstsw
push
sahf
lds
xor
pop
dec
adc
movsb
pop
push
cmc
rep
movsb
pusha
sub
inc
inc
mov
inc
ret
out
lods
dec
jmp
mov
and
jns
jnp
test
push
mov
sarl
jnp
or
scas
inc
jnp
or
or
inc
sbb
cmp
and
test
out
int
jnp
mov
dec
adc
pop
xchg
jmp
cmc
jnp
add
jnp
inc
or
xor
bound
gs
inc
test
fnsave
ret
and
mov
outsl
mov
xchg
js
mov
jnp
frstor
cwtl
or
ja
adc
lock
in
sbb
mov
jle
add
push
or
xorb
inc
mov
mov
cltd
mov
sti
sbb
xlat
add
jnp
pop
iret
fwait
call
insb
pop
cli
sub
mov
arpl
jnp
sub
mov
pop
pushl
jnp
mov
xchg
outsb
idivl
jnp
inc
addb
cmpl
xchg
or
push
loop
movsl
scas
repnz
jnp
into
repz
dec
hlt
mov
jne
sbb
pop
fwait
adc
xchg
jo
lea
mov
pop
fcompl
ror
pusha
mov
cwtl
mov
xchg
jnp
dec
jge
xchg
in
fidivrs
roll
into
or
clc
mov
gs
pop
pop
jnp
outsb
ljmp
mov
inc
or
bound
ret
mov
mov
jnp
pop
loope
jae
flds
bound
loop
rorb
lds
push
pop
jnp
inc
pop
mov
jnp
pop
xchg
jb
movsb
dec
std
jnp
mov
jp
cmp
xchg
jnp
xchg
cmpsb
repz
lds
jnp
xor
sub
push
addl
out
dec
int
xor
in
dec
ja
movb
pop
lahf
dec
enter
mov
lcall
rol
lret
or
jbe
jmp
mov
repz
xchg
xchg
sub
lods
adc
fwait
ds
int3
jnp
and
lahf
adc
xchg
iret
adc
pop
dec
jg
jns
mov
aad
jnp
sub
jae
shll
mov
cwtl
scas
fidivrs
inc
aam
popa
xchg
adc
jnp
dec
jne
shll
and
and
dec
or
iret
and
mov
cmpb
mov
and
jl
dec
xor
test
shll
mov
adc
push
call
incb
aad
cmp
mov
pop
into
ret
es
adc
inc
out
pop
mov
push
out
bnd
loop
mov
orl
add
sti
dec
pop
div
jnp
jg
fstpt
test
jb
xchg
test
imul
xchg
sub
push
arpl
stos
lock
rcr
mov
push
dec
xchg
xchg
stos
iret
jg
in
pushf
jnp
mov
lea
xchg
mov
jnp
je
jecxz
adc
fld
jmp
and
fwait
push
mov
sub
or
xchg
pop
jnp
fnstenv
xchg
cmp
test
inc
sub
dec
adc
cwtl
arpl
dec
adc
inc
mov
sbb
loope
xchg
sti
push
lds
mov
or
in
mov
jbe
lods
imul
test
cmp
add
dec
adc
xor
mov
mov
push
sub
cmpsb
push
inc
subb
outsb
jmp
lock
arpl
movsb
mov
cmp
scas
aas
push
inc
sub
jg
jnp
dec
shll
pop
xchg
jnp
push
mov
sbb
cli
ret
xor
andb
or
and
inc
nop
mov
popa
stc
inc
fwait
cmp
in
stos
push
jno
es
adc
xlat
pushf
pusha
mov
enter
xor
fsubl
cmp
add
adc
jbe
repnz
mov
sbb
adc
scas
mull
lods
lds
xlat
xor
arpl
into
pop
nop
add
fildll
jnp
inc
dec
pop
or
jnp
push
lcall
nop
push
xchg
mov
cmpl
mov
mov
mov
inc
jnp
sbb
rcl
add
adc
mov
mov
pushl
or
ret
jne
mov
mov
dec
gs
cmpsl
insl
adc
inc
cmp
jnp
add
aas
xchg
mov
movsl
jnp
lcall
xchg
mov
cwtl
pop
jnp
imul
jnp
inc
dec
stos
insl
in
pop
lcall
pop
jno
test
mov
dec
jl
mov
dec
jnp
mov
pop
in
ljmp
test
sbb
lret
test
xchg
xchg
mov
xchg
inc
addb
test
ror
rolb
mov
pop
hlt
in
popa
xchg
pushf
sbb
imul
sbb
jmp
ds
jnp
cmc
mov
sahf
test
push
fadds
mov
aad
mov
mov
jnp
lret
jae
stos
xchg
cmp
lcall
lcall
lods
popf
shr
fcmovne
outsb
outsl
ret
mov
adc
jle
scas
pop
cmp
jnp
jp
mov
dec
or
test
or
cltd
mov
cltd
cli
mov
pop
out
imul
push
jnp
in
xor
sbb
mov
and
inc
mov
push
xchg
add
jmp
xor
es
in
xchg
or
jnp
leave
pop
adc
sbb
jnp
push
movlps
jns
jnp
cmp
and
cmpsl
or
insb
jnp
mov
das
xor
cli
ljmp
xchg
dec
mov
fists
fstpt
arpl
or
mov
sub
rorb
adc
ret
test
lock
std
add
dec
cltd
popf
or
mov
insl
loopne
int
add
inc
sub
mov
sbb
mov
fsubs
push
enter
movsb
lods
or
mov
inc
adc
jnp
cs
dec
mov
popa
fidivrs
add
xor
je
rol
sub
jecxz
jnp
dec
and
cmc
mov
les
fnstsw
gs
ds
sbb
dec
test
jnp
and
jnp
push
aad
loopne
jbe
and
jno
or
aad
cmp
gs
test
sub
xchg
arpl
bnd
fdivl
inc
push
lds
lea
out
fwait
scas
frstor
dec
jnp
pop
sub
test
pusha
gs
mov
jp
dec
cmpsb
sarl
lcall
jnp
cmp
popf
mov
add
gs
orl
sti
pop
sbb
hlt
ret
shrb
popa
shrl
stc
push
adc
lods
xor
pusha
andl
fnstcw
add
mov
cli
push
insb
pop
fadd
cmp
inc
or
cmpsl
add
int
inc
imulb
jnp
or
nop
or
jnp
cmp
pop
mov
ja
sub
mov
dec
int
stos
add
fwait
dec
test
das
add
sbb
xor
pop
cmp
mov
ljmp
mov
xchg
dec
negb
jnp
imul
lret
pop
int
lods
jnp
mov
aas
xchg
std
lea
ret
ljmp
icebp
mov
adc
aad
mov
push
mov
push
mov
scas
lret
jnp
add
test
add
std
in
sub
mov
jmp
inc
pop
and
jg
loopne
bound
scas
jl
mov
mov
lahf
insb
adcb
cmp
sti
sbb
mov
into
xor
clts
jnp
xor
aaa
test
adc
xchg
je
jle
fildl
mov
or
insl
or
test
jg
dec
inc
and
fldl
jnp
xchg
fimuls
xchg
sbb
lahf
movsl
dec
push
inc
sub
ja
test
inc
ljmp
dec
mov
xlat
add
pop
push
imul
mov
cld
arpl
inc
inc
sbb
cmp
or
add
sysenter
aaa
mov
pop
cli
inc
inc
xor
loop
movsb
js
push
lea
test
popa
ja
cmp
leave
xor
adc
repnz
cs
push
pusha
lods
addr16
or
aam
imul
adc
imul
cltd
xchg
outsl
adc
mov
sarb
addr16
adc
jns
mov
ss
mov
add
loop
cmp
jnp
cwtl
js
ja
rcr
mov
mov
add
fdivrl
adc
sbb
jae
mov
lods
in
cmp
loop
adc
xchg
xchg
jne
mov
fs
scas
push
jno
test
mov
out
test
mov
mov
jne
shrb
out
dec
xlat
jecxz
hlt
mov
lock
add
jae
js
pop
inc
jo
jge
mov
push
jae
aas
mov
cmp
sbb
mov
xchg
aam
aas
mov
cmp
xchg
pop
add
adc
adc
mov
out
or
sti
pop
int3
cli
push
sbb
or
lock
xchg
xchg
in
mov
fistpll
jnp
and
sbb
das
bound
nop
sbb
arpl
cmpsb
jnp
push
cmp
repz
jnp
inc
mov
xchg
sub
jecxz
dec
dec
movsl
sbb
arpl
xchg
xlat
imul
stos
fistpl
xchg
jnp
push
cltd
arpl
js
mov
aaa
rolb
sub
loopne
cmc
jg
cmp
push
outsl
hlt
jnp
mov
xchg
into
adc
jnp
nop
pop
mov
movq
xchg
or
mov
dec
andl
outsl
das
push
in
fincstp
mov
int
jb
jnp
imul
pusha
test
push
int3
mov
in
add
xor
jno
int3
sti
jnp
mov
fcmovbe
std
xchg
movb
gs
push
mov
aaa
xor
inc
cmc
xor
jecxz
xchg
flds
leave
jmp
cmp
int
mov
pop
mov
mov
fstps
nop
pop
xor
test
mov
sub
popf
arpl
xchg
sarb
mov
inc
sti
sub
jmp
arpl
pop
cmc
fs
je
xchg
outsb
adc
cltd
add
frstor
pop
mov
push
das
repz
int3
add
sub
and
pusha
mov
movsb
push
lods
xchg
pop
jecxz
dec
mov
mov
xchg
jnp
xchg
mov
jmp
sbb
pop
mov
inc
pop
xor
sar
imul
int3
scas
mov
cmc
pop
ds
cld
mov
rcrl
inc
jnp
xor
mov
outsb
xchg
jecxz
or
push
pop
dec
cmp
movsb
mov
mov
sar
xchg
jno
hlt
lret
repnz
lahf
pushf
sub
or
lcall
jnp
fwait
or
dec
jnp
cmpl
mov
jbe
pop
jnp
sbb
sbb
mov
test
mov
fistpll
and
fcmovbe
or
movsl
fdivrs
jnp
lret
fxch
push
cmpsb
push
decl
inc
sti
add
pop
sbb
or
in
lahf
fcompl
push
loopne
jnp,pn
inc
or
test
ret
xchg
lea
hlt
scas
or
mov
imul
jnp
inc
ficoms
push
std
sub
inc
xchg
xchg
jmp
sbb
in
xchg
ja
pop
mov
insb
push
jb
outsl
jle
jnp
xchg
mov
or
sar
jnp
sbb
inc
mov
ficoms
je
push
jae
scas
mov
lret
pop
leave
jge
push
lahf
pop
test
sub
jne
idiv
test
adc
add
das
repnz
and
stos
lods
insl
test
add
mov
mov
movsl
aas
sbbl
cli
mov
lcall
ror
mov
mov
jnp
cmpsb
add
cmc
mov
stos
mov
push
inc
test
sti
sbb
fs
dec
lret
popl
popa
jbe
jg
jnp
roll
aaa
lods
sti
jnp
movsl
push
sub
stos
roll
mov
pop
lcall
iret
jl
jnp
lret
popa
fstl
ficoms
dec
divl
ret
jnp
loopne
sub
jnp
pushf
sbb
rolb
outsb
rorl
jo
scas
bound
jg
mov
xor
jnp
cmpsl
cmp
ret
test
push
lods
mov
jnp
cmp
fidivl
fadds
mov
dec
pushf
xor
xchg
pop
or
jl
mov
push
mov
jg
push
pop
in
js
dec
test
nop
into
jnp
mov
mov
scas
cmp
xchg
push
dec
jnp
xchg
mov
mov
push
dec
repnz
je
add
xor
dec
mov
pop
inc
mov
or
xor
jnp
xchg
and
or
sbb
aad
rep
add
push
xchg
fstl
push
jnp
adc
pop
cmpsl
jnp
imul
jmp
push
cmp
scas
movsl
dec
mov
jb
sbb
xchg
jne
test
jo
add
mov
inc
fnstcw
mov
icebp
addr16
test
mov
pop
lods
imul
push
jnp
addr16
fwait
adc
lahf
cmpsb
mov
mov
sub
jle
mov
pop
mov
dec
inc
clc
cmp
sub
pop
lcall
lock
lcall
out
jp
stos
jmp
jnp
je
lret
mov
add
jnp
leave
add
fs
lahf
mov
aad
nop
shl
mov
xchg
mov
jnp
mov
xchg
enter
jnp
add
xor
sub
jnp
data16
fmuls
cmp
outsl
jnp
cli
push
add
out
imul
mov
hlt
adc
mov
dec
push
fbld
jge
jnp
sub
or
inc
adc
pop
mov
ficoms
popf
jnp
and
cli
sub
int
in
add
push
mov
mov
lret
push
mov
in
jns
xchg
pop
jmp
lods
jno
repz
leave
arpl
mov
sti
fstp
stos
xor
mov
mov
sbb
push
xlat
gs
shrl
movsb
cmp
stos
xor
add
cmp
scas
dec
xchg
mov
jo
cmpsb
mov
cmp
jns
xchg
inc
dec
insl
xchg
arpl
push
call
jnp
aad
add
mov
jp
pop
jnp
in
cli
inc
std
icebp
or
fisubrl
rcrl
cmp
outsb
jl
outsl
movsb
xchg
test
and
int
stos
jnp
dec
orb
cmpsb
xchg
mov
js
das
arpl
jmp
sub
cli
test
jnp
adc
xchg
lods
test
adc
dec
mov
pop
jnp
jmp
mov
mov
xor
int
sub
xchg
pop
imul
idiv
pushf
jae
mov
stc
or
sub
pop
das
aas
imul
cs
fdivrs
push
jnp
inc
pop
dec
mov
nop
or
test
dec
clts
lock
pop
sti
inc
mov
sbb
jnp
mov
and
cmp
jae
lret
adc
cmpsl
pop
sbb
jnp
std
enter
loopne
jnp
clc
imul
ja
mov
sbb
xchg
je
jnp
or
xchg
cmpsl
clc
sbb
loopne
sub
cld
dec
fldl
mov
in
int3
xchg
mov
dec
or
jnp
xor
cwtl
mov
xchg
sub
cmp
cltd
adc
test
mov
out
mov
lahf
dec
xor
or
test
arpl
loope
jp
cmp
int3
nop
fwait
repnz
iret
sub
sbb
arpl
or
insl
pop
add
test
sub
mov
xor
js
rcll
mov
pop
jg
es
jnp
push
and
outsb
stc
daa
add
push
sbb
enter
jg
jnp
sbb
lods
iret
cld
pop
xchg
lahf
mov
cwtl
sub
sub
inc
mov
or
gs
dec
or
xchg
scas
xchg
icebp
inc
mov
jnp
adc
jge
jb
lds
cmp
sub
jnp
sub
sbb
jno
fnstcw
jnp
fstl
pop
in
adc
dec
lahf
jne
or
lcall
sbb
jno
sbb
repz
mov
mov
push
push
aas
jg
jle
mov
mov
gs
fidivrs
push
mov
xchg
stc
cltd
aam
jnp
pop
into
jns
mov
popf
ss
mov
fcoml
hlt
sti
xchg
inc
push
ljmp
sub
js
sub
xchg
in
cwtl
mov
cmp
fldt
add
sbb
mov
sti
push
in
dec
loope
fisttpll
pop
cmp
jmp
test
adc
cmp
mov
and
inc
cli
mov
aam
jecxz
rolb
fcmovnu
jmp
mov
fistpll
xchg
repz
mov
ret
push
lret
xchg
aaa
gs
inc
shlb
psraw
xchg
out
jge
jbe
xchg
inc
dec
mov
scas
mov
mov
rorl
cmp
das
push
stc
jno
jnp
sbb
add
std
dec
jnp
icebp
mov
xchg
andb
mov
test
stos
pop
stos
jbe
xchg
or
repz
int
mov
lock
mov
les
jmp
arpl
add
cmpsb
mov
rcll
test
xor
jnp
push
add
jne
add
addr16
in
in
push
shrb
mov
sarb
pop
fcompl
mov
inc
xchg
aaa
out
stos
dec
in
sarb
mov
cwtl
clc
aam
adc
das
sbb
sub
sarl
arpl
push
dec
loop
insl
scas
jnp
pop
xchg
mov
sahf
add
adc
cs
add
sub
outsb
push
stc
dec
jnp
lds
aaa
jnp
fsubrs
das
lcall
push
push
or
and
add
shlb
xlat
ficompl
lret
lcall
mov
in
push
cs
shr
loope
add
fstps
mov
fildl
dec
test
jno
test
or
xchg
jp
test
cmp
mov
aas
outsb
lock
cmpl
or
dec
jmp
cmp
neg
adc
pop
les
mov
jmp
sbb
mov
addl
mov
adc
das
push
adc
jns
sbbb
push
jecxz
jnp
shl
aas
cltd
or
ret
mov
dec
enter
ss
fldl
mov
mov
pop
cmpb
adc
jnp
mov
or
jnp
stc
stos
imul
test
call
adc
ljmp
jae
mov
push
out
sub
dec
sarb
call
sbb
repnz
cmp
cltd
cmc
out
out
cmp
and
addr16
aam
add
xor
and
rorb
lcall
ja
arpl
pop
jnp
test
mov
sub
cltd
sarl
lcall
sahf
movsl
repz
stos
sbb
jnp
idivl
out
mov
dec
mov
pushf
push
adc
ds
mov
loopne
mov
out
add
jnp
add
daa
movsb
lahf
inc
jnp
push
in
xchg
lods
insl
and
pop
repz
add
push
jnp
mov
adc
and
xchg
mov
cld
fcomps
jecxz
out
repz
mov
xchg
je
sti
cmp
push
lods
fs
popf
push
dec
inc
sbb
mov
or
std
xor
lahf
xlat
pop
push
pop
jbe
pop
daa
test
jge
sub
rolb
pop
and
sbb
aam
je
dec
les
push
push
xor
jnp
pop
xchg
test
rclb
jnp
filds
mov
jecxz
pop
int
negb
dec
bt
dec
mov
jmp
jnp
test
push
adc
jnp
xchg
mov
jnp
loope
rcrl
das
test
jnp
hlt
mov
ja
jae
pushl
loope
pusha
mov
std
sbb
cmp
xchg
sti
dec
insb
lock
dec
mov
mov
shll
ficoms
sub
gs
sbb
xor
xchg
pop
xor
movsb
mov
push
data16
add
aas
sub
hlt
mov
je
jbe
sbb
dec
fdivrl
clc
int
jmp
cmp
mov
mov
jnp
pop
jp
sub
mov
add
sub
pop
mov
jnp
icebp
bound
adc
xchg
jo
xlat
adc
pop
jnp
insl
clc
aas
cmovns
jnp
in
adc
mov
sahf
lret
leave
sti
ljmp
jnp
add
pop
inc
int3
icebp
insl
lret
ja
cld
sub
add
in
mov
pop
cmp
mov
cmc
jae
cmpsl
xchg
jmp
xor
mov
jnp
inc
mov
and
cltd
xchg
out
mov
rorb
in
mov
test
and
jle
adc
mov
jl
pop
jmp
jb
cmp
insb
and
clc
scas
decl
lea
lret
test
jo
pop
call
cmp
fs
sub
jnp
push
or
jg
xchg
sbb
xchg
adc
pushl
fbld
rol
ss
sbbb
roll
cmpsl
mov
mov
aaa
xor
test
andl
bound
aad
cld
jg
cli
add
cmp
push
sti
xlat
push
xlat
mov
rcrb
sarb
xor
test
push
or
das
xchg
rcll
repnz
aam
stc
sti
loope
iret
jnp,pt
mov
cmp
cltd
divl
jnp
gs
add
jp
cmpsl
jnp
aad
xchg
fcmovb
mov
jnp
std
scas
mov
jnp
test
push
imul
cld
rolb
pop
cli
mov
pop
mov
jae
imul
adc
lock
jno
popf
jo
out
out
sbb
cmp
rclb
add
fldenv
xchg
orl
sbb
lcall
mov
lds
xor
cmp
ja
jnp
dec
and
push
sahf
hlt
add
inc
cld
loope
test
and
push
rcll
or
outsl
cmp
lret
jnp
inc
in
clc
aad
jns
jnp
xor
lds
ficoms
cli
xchg
jl
mov
decl
mull
hlt
jnp
jbe
add
jmp
jb
xchg
int
rclb
jmp
mov
mov
and
lcall
sahf
outsb
sub
and
mov
sbb
pop
cmc
jnp
stos
xchg
dec
inc
jnp
push
ret
sub
dec
test
cmp
rcrl
sti
outsl
je
mov
loopne
ja
movsb
jo
imul
iret
fstpt
jecxz
xchg
mov
scas
addl
inc
ljmp
stc
das
jne
adc
repnz
outsb
inc
xchg
insl
push
cmp
sub
add
and
iret
arpl
aas
repnz
subb
std
xchg
xchg
or
popa
lcall
outsb
lret
mov
add
jnp
push
inc
xor
push
mov
adc
and
add
pop
jnp
xchg
push
pushf
add
pop
adc
shrl
sub
out
push
cmpsl
xchg
sahf
lds
mov
mov
addr16
sarb
shrl
adc
jnp
jbe
or
mov
cmpl
in
insl
jnp
es
gs
bound
jne
or
fcoms
ret
push
aas
fldt
jge
outsb
mov
pop
sbb
jnp
int
lcall
orl
mov
cmpsl
xchg
leave
int3
imul
sbb
negl
xchg
xor
int
lret
or
pusha
and
mov
inc
or
jg
mov
xchg
addr16
fchs
adc
movq
mov
add
jg
mov
das
xchg
mov
mov
rorb
in
adc
inc
xchg
xchg
push
cmpb
testb
inc
dec
mov
jo
mov
adc
insl
packssdw
and
xchg
iret
jo
ja
or
mov
cwtl
into
sarb
scas
insb
xchg
mov
dec
or
jno
adc
pop
mov
jmp
cmp
xchg
or
xor
and
dec
testb
mov
outsl
scas
pushf
sbb
sti
out
adc
cmp
cli
mov
add
dec
mov
jge
rcl
jnp
adcl
iret
cmp
cmp
sub
scas
in
xor
inc
jle
in
sbb
push
fists
dec
jg
xor
jl
push
out
mov
mov
negl
jg
jnp
int
jne
or
dec
and
adc
xchg
mov
fsubl
stos
jl
iret
jle
push
in
inc
jnp
lret
bound
cmc
xchg
jp
jnp
xor
outsb
shll
addr16
mov
loopne
push
or
inc
xor
jnp
filds
push
jnp
rclb
jnp
adc
or
xlat
jnp
cld
dec
data16
mov
scas
jmp
mov
and
js
inc
xchg
rcr
xchg
sti
negb
int
lea
lahf
inc
cmp
pop
mov
dec
mov
leave
cmpsl
push
orb
jl
jnp
push
fwait
xor
arpl
mov
jb
inc
in
xchg
add
jns
mov
mov
xor
adc
xchg
mov
stc
mov
sti
fwait
xor
insb
mov
mov
std
arpl
xchg
jmp
or
dec
pop
cmpsl
into
add
aad
lret
fldcw
pop
adc
inc
out
icebp
or
pop
jo
ficoml
jb
arpl
add
jnp
int
sbb
sub
mov
pop
mov
test
sbb
test
ja
inc
jnp
cmpsb
inc
ss
push
dec
xor
inc
or
xchg
test
pushf
stos
aas
dec
jge
sbb
jnp
out
inc
in
cltd
lods
adc
hlt
rolb
xchg
xor
aad
lahf
jg
or
add
jno
jnp
xchg
jge,pt
mov
jnp
xorl
in
jle
sbb
daa
and
testb
movsb
fdivrl
or
andl
in
in
jnp
cmp
xorb
movsl
stos
mov
sub
push
stc
loop
and
insl
push
and
pusha
xchg
cwtl
iret
push
push
pop
jnp
es
fdiv
pop
jnp
out
std
mov
jne
mov
sarl
or
jo
mov
jecxz
jnp
stos
mov
jnp
push
loope
mov
mov
dec
mov
insl
rcl
lret
test
pop
psllq
in
cmpsl
jnp
pusha
mov
rol
push
jge
dec
outsb
out
mov
xorb
hlt
in
out
popf
jle
adc
cld
in
push
sub
pusha
jmp
and
jnp
popa
inc
adc
out
imul
mov
loopne
scas
test
lahf
pusha
pop
jae
mov
or
adc
rclb
dec
movsl
out
mov
xchg
pushf
fbld
mov
enter
gs
sub
outsb
test
xor
rcrb
jge
adc
out
shlb
inc
inc
jae
xchg
pop
and
ffreep
popf
imul
mov
test
or
mov
cmp
js
inc
repz
outsl
inc
jnp
nop
mov
stos
lods
arpl
mov
and
xchg
sbb
insl
mov
fcmovnbe
ljmp
jecxz
push
test
cltd
imul
arpl
iret
push
xchg
jnp
aaa
xor
adcl
add
stos
jnp
movsl
fstpl
jnp
sarb
jnp
or
ficoml
outsl
fidivrs
jne
adc
mov
dec
sub
jnp
cmp
jl
mov
mov
push
mov
ja
andl
mov
les
cmp
arpl
jecxz
xor
popa
push
jnp
jmp
xor
xchg
dec
jnp
mov
test
jg
pop
xchg
adc
dec
out
xchg
jg
int
pop
or
daa
jnp
sahf
push
outsb
and
movsl
mov
cltd
ljmp
jnp
sub
sbb
push
add
cs
fwait
testb
test
jnp
push
flds
cmp
jnp
xorl
cltd
jnp
sbb
xchg
insb
or
daa
jnp
sbb
adcb
jnp
enter
pushf
mov
sub
cltd
or
mov
and
adcl
lods
xor
in
mov
xchg
xchg
push
or
add
jge
fisubs
outsl
jle
xchg
arpl
stos
mov
dec
jnp
xor
push
sub
adc
jnp
mov
mov
jns
jnp
pop
orb
jecxz
aaa
lea
fcmovb
std
in
fisttpl
cmp
and
cwtl
outsb
xor
add
jmp
or
sbb
adc
iret
adc
shlb
stos
push
dec
inc
dec
mov
adc
call
and
xlat
cmp
insb
lahf
push
mov
mov
clc
sbb
dec
addr16
cmp
inc
jnp
lock
push
jne
pop
nop
push
loope
mull
jnp
divl
js
jle
and
in
je
cmp
arpl
mov
addr16
data16
daa
mov
push
xor
jmp
clc
jno
jb
in
cmp
stos
add
mov
adc
fdiv
jnp
xchg
divb
mov
or
insl
aam
pop
mov
jnp
xchg
sarb
mov
arpl
enter
lret
fwait
sub
sar
xlat
fcomps
or
cmp
jbe
popa
mov
jnp
adc
pop
push
inc
fistpll
push
xchg
rcl
enter
adc
or
jnp
jg
rcll
fdivr
cltd
push
sub
dec
sbb
jnp
or
push
xor
adc
sub
fistl
fstpt
es
xchg
xchg
outsb
shll
mov
std
loope
call
and
adc
push
jnp
insb
imul
mov
iret
stos
inc
cmp
xchg
sub
lret
imul
icebp
fucomi
pop
imul
mov
push
jnp
fsubl
jnp
push
pushl
daa
push
les
roll
fstpt
mov
jnp
inc
dec
int3
testl
push
insb
cmpsb
or
dec
cmpsl
ret
cmp
cmpsl
das
push
sti
gs
sub
sub
out
jnp
jg
movsl
dec
cmp
jno
mov
inc
push
clc
movsl
cld
mov
cmp
mov
pop
add
and
pushf
iret
mov
adc
js
xor
inc
jb
inc
rclb
mov
dec
lea
sarb
xchg
iret
push
push
mov
sti
inc
out
sbb
mov
cld
lret
sub
adc
pop
mov
xchg
jb
out
arpl
mov
fistl
push
adc
push
adc
idivb
push
imul
dec
mov
sbb
sub
push
cmp
jnp
bound
out
jnp
decb
jnp
setns
lret
xchg
xchg
cmc
jnp
inc
jno
mov
daa
rcll
jmp
sub
xor
jae
cwtl
jnp
dec
test
rorb
push
jb
add
fidivs
inc
mov
lahf
push
rol
outsl
jmp
test
fimuls
jp
jnp
leave
cld
xor
cmp
add
push
fidivrs
lods
jg
dec
jnp
dec
inc
push
xchg
jo
mov
movsb
in
iret
dec
jns
add
lcall
cmp
mov
rcrl
shlb
stc
pop
ror
mov
mov
xchg
mov
pusha
jno
or
xchg
idivl
jnp
mov
dec
adc
das
scas
dec
push
cmp
inc
xor
jmp
inc
lea
mov
pop
popa
or
jnp
js
jno
xor
push
and
mov
scas
xchg
mov
or
xchg
repnz
inc
pop
sbb
aad
cmp
jnp
xchg
pop
les
orl
sbb
stos
sbb
jl
push
int3
fsubl
sub
jnp
dec
push
pop
leave
dec
sbb
mov
xchg
les
inc
arpl
xor
dec
js
fisubrs
pop
jnp
hlt
xchg
lds
outsl
imul
push
shrb
push
add
pop
sbb
test
movl
jnp
cmp
fisttpll
movsb
out
cld
pop
jmp
adc
enter
lods
push
test
add
iret
rcrb
push
cmc
sti
and
test
mov
push
test
mov
rcl
xchg
adc
mov
fst
jne
xchg
movsl
stos
xor
push
or
sbb
xor
shrb
xlat
arpl
xor
inc
cmp
lds
outsb
adc
mov
or
pop
add
loope
jnp
mov
jae
ret
cwtl
dec
mov
jnp
add
pop
or
jnp
decl
fldl
mov
lret
mov
test
and
scas
inc
or
sbb
pop
and
loop
aad
in
out
jnp
loopne
cmp
xlat
xchg
or
stc
pop
outsl
je
popa
push
mov
js
outsb
pop
pop
jnp
mov
lcall
mov
sbb
push
push
mov
pop
xor
je
push
sub
jmp
sar
hlt
mov
mov
mov
stc
mov
sti
push
hlt
jecxz
popa
stos
fsubl
jbe
jnp,pt
xor
out
fsubp
cmp
je
or
addb
popl
jle
xchg
addl
xchg
stc
loope
movsb
clc
push
mov
jecxz
adc
jl
mov
mov
in
out
sub
pusha
xchg
out
sti
mov
add
pop
xor
int3
lcall
je
mov
mov
jnp
pop
and
shrl
fwait
in
je
lea
push
fists
cmpb
mov
cmpsl
pop
aam
xchg
fildl
gs
inc
jnp
outsb
ss
xchg
nop
mov
add
mov
dec
push
add
lods
loopne
insl
sub
fldl
stos
jb
arpl
mov
test
cli
outsb
inc
jnp
stos
xchg
mov
dec
jnp
negb
repz
mov
jmp
test
push
cmp
add
sti
mov
adc
fprem
cld
enter
out
scas
push
mov
and
jnp
mov
fisttps
push
out
sbb
xchg
jnp
lock
leave
mov
scas
in
adc
pop
jnp
lret
dec
inc
mov
clc
jp
sub
dec
in
mov
popl
sbb
jle
jo
mov
cli
add
push
add
movsl
xor
imul
loope
fcompl
jno
cltd
and
movsl
cmp
add
or
jne
sbb
int
jne
jnp
xchg
imul
cmp
xchg
dec
inc
test
cmp
loopne
lea
xor
xor
xlat
imul
jg
and
jecxz
xchg
lret
imul
inc
mov
femms
popa
jno
and
lea
outsb
clc
mov
pandn
lahf
outsb
pusha
lods
jno
dec
rolb
mov
push
arpl
aaa
jne
pop
cmp
clc
dec
adc
popa
cld
in
test
adc
rclb
push
cld
push
lods
jle
in
aas
pop
cmc
lret
icebp
arpl
lahf
push
stos
shlb
jmp
lds
clc
mov
test
jecxz
int3
mov
jnp
in
mov
jne
lahf
insb
push
mov
loop
imul
cmp
dec
ja,pt
lcall
fcoms
mov
mov
add
add
movsl
xchg
pop
cmp
dec
dec
add
ficoms
jnp
push
in
mov
or
push
xchg
jnp
or
jnp
jns
and
lds
in
pop
pop
mov
jnp
xor
jnp
popa
mov
lods
push
sbb
mov
dec
shr
mov
xorl
pop
int3
xor
xlat
add
xor
orb
push
mov
sub
jnp
addr16
jecxz
cwtl
stos
das
aam
popa
adc
stos
sbb
stc
dec
sbbl
jbe
mov
jnp
mov
jnp
ja
mov
jnp
cld
outsl
jl
insl
arpl
jnp
fdivrs
pop
es
testb
jo
pop
cmc
shr
mov
sti
pop
popa
mov
jnp
orl
jecxz
mov
les
mov
test
cmp
in
test
arpl
mov
mov
sub
test
clc
and
xchg
mov
dec
cmp
adc
shrl
dec
test
bound
inc
ss
mov
insl
pop
and
add
mov
mov
loope
cmp
cmpsl
fisttps
aad
lret
aaa
mov
shlb
pop
jbe
fdivrl
xor
dec
outsb
dec
cwtl
mov
sbb
ss
inc
popf
incl
mov
test
loop
iret
int
add
jnp
jbe
mov
lods
mov
cmpsl
and
jnp
xor
inc
jnp
jae
xchg
insl
jbe
test
inc
dec
cmp
lods
inc
pop
outsl
xchg
pop
fwait
lsl
push
jnp
rolb
test
or
stos
sub
add
jnp
fldt
jmp
jnp
or
call
jne
inc
lds
mov
fcmovnbe
hlt
xor
push
incb
mov
into
popa
xchg
iret
jle
mov
dec
mov
sarb
or
loop
fiadds
sbb
mov
cmpl
in
dec
inc
cmp
shlb
mov
out
mov
loopne
xor
enter
add
scas
fs
push
jnp
gs
shll
test
mov
push
mov
xor
jg
addr16
jnp
add
in
mov
push
adc
xchg
imul
jnp
insb
jne
pop
cmp
iret
jnp
and
outsb
or
jno
or
jnp
aad
add
adc
jnp
mov
mov
ret
call
jnp
cmpb
test
push
xchg
mov
das
cs
inc
adc
mov
push
mov
mov
mov
mov
and
fsub
xchg
pop
inc
jl
out
mov
pop
js
ret
test
lret
add
outsl
fdivrs
pop
call
iret
pop
lock
jnp
stos
loope
sbb
jnp
xchg
cwtl
clc
or
push
shrb
iret
jbe
mov
xchg
cmp
or
push
aas
out
psllw
jmp
dec
and
push
out
mov
inc
jp
int3
fistps
jnp
cld
clc
inc
push
adc
pop
or
outsl
cmp
mov
or
xor
repz
setnp
inc
and
mov
scas
xchg
ja
jge
add
outsl
lea
pushf
mov
jnp
in
xchg
mov
pop
sbb
test
cwtl
mov
xchg
sbb
call
outsb
in
inc
pop
lret
xchg
fistpll
jg
lahf
imul
cli
aaa
sub
sbb
stc
sarb
ljmp
jnp
pop
cmp
push
xchg
je
jnp
mov
dec
or
sub
lcall
arpl
enter
push
loopne
ficoms
ds
dec
xchg
mov
jnp
add
into
mov
pop
push
jnp
mov
xlat
rorl
push
sub
and
mov
inc
xchg
fists
movsb
adc
mov
into
fnstsw
cmp
sti
aam
lds
movsb
cmp
sbb
sub
jnp
outsb
out
leave
lret
cmpsl
add
aam
test
fistl
add
add
jnp
pop
test
sbb
mov
push
inc
mov
loope
inc
loop
out
adc
adc
movsl
scas
lret
jnp
lahf
pop
enter
fs
xor
je
ja
std
jnp
pop
xchg
dec
dec
insb
stos
mov
test
cmc
test
outsl
imul
sti
pop
add
sarb
xchg
cmpsl
lods
push
dec
inc
pop
insl
pop
lea
jnp
mov
jnp
adc
mov
mov
cmpb
popa
jnp
adc
adc
mov
jnp
jne
add
sti
jnp
ret
dec
cmp
xchg
cmpsl
jecxz
jmp
aam
and
cmp
pop
test
cmpsl
adcl
pusha
stos
xchg
mov
add
pop
sbb
inc
cmp
push
out
shl
push
and
cwtl
sti
mov
dec
adc
movsl
pop
xchg
cltd
pop
rorl
jnp
push
inc
sub
or
push
in
out
pop
mov
add
xchg
xchg
in
pop
int
pop
xchg
push
nop
int
push
ret
repnz
add
pop
pop
xor
or
pop
push
pop
dec
jnp
es
mov
xchg
rcl
sub
int3
and
pop
cmc
push
je
or
pop
sub
sahf
add
push
aaa
gs
mov
rcrl
fdivrl
sbb
pop
mov
mov
iret
cli
xchg
cmc
ds
mov
fsubr
add
int
and
jnp
pop
idivb
int3
cmpsl
rcll
and
repnz
fs
mov
into
sti
test
xchg
pop
xchg
add
jnp
out
aaa
xlat
inc
add
test
adc
inc
fldt
pop
dec
xchg
mov
lea
bound
xlat
pop
cmp
xor
stos
fimuls
arpl
or
mov
push
mov
sbb
pushf
mov
rcrb
and
repnz
test
lds
pop
int3
add
aaa
roll
jnp
rcr
inc
cmp
dec
movsl
jecxz
mov
sbbb
int
jecxz
fwait
scas
cmpsl
add
loop
pop
jo
sub
test
popa
push
jnp
cmp
jns
in
and
xchg
add
xchg
daa
xlat
ret
pop
dec
rcr
xchg
cmc
mov
jnp
push
ret
pop
sub
jnp
or
movsb
cmpb
mov
jecxz
lods
imul
fimuls
cmp
cmc
and
jnp
add
sahf
or
push
jnp
out
cltd
cmpsl
imul
push
das
incl
pop
sbb
xchg
test
jnp
lret
addr16
sbb
test
pop
jp
xor
dec
aaa
dec
pushf
loopne
test
repz
jnp,pn
mov
mov
or
int
push
fimull
out
movb
push
adc
jg
bound
cs
rorl
mov
out
fstpt
pop
mov
test
lock
pop
rolb
sbb
push
sbb
lcall
cmp
ja
cltd
sti
rcrl
enter
cmp
jnp
aaa
sbb
jnp
imul
int3
adc
hlt
add
or
lods
loope
mov
aam
mov
push
xchg
mov
jns
pop
dec
cmpb
cmc
and
popa
cmpsl
stos
test
pop
sub
inc
add
fstps
pop
cmc
mov
xchg
jp
call
out
out
sub
negb
adcb
ret
sbb
in
sbb
test
scas
mov
js
dec
lods
xchg
xor
sbb
movsl
jno
lods
xor
and
jnp
icebp
jae
das
jnp
dec
outsl
outsb
mov
enter
lahf
jb
movb
adc
pop
mov
lahf
jle
ds
pop
jnp
sub
test
and
ret
xchg
das
mov
dec
movsl
fs
ljmp
pop
xor
push
xor
mov
shlb
jae
shrb
aam
leave
adcl
or
movsb
sbb
xchg
ljmp
sbb
test
jnp
mov
jnp
jmp
shr
or
sbb
jnp
ret
jp
mov
cmp
xlat
mov
test
jnp
movsl
pop
cwtl
popa
dec
jnp
call
mov
pop
cmc
inc
lea
jnp
lret
fcomp
stos
out
jnp
xor
cltd
pop
addr16
clc
std
and
dec
and
push
xchg
xor
add
mov
cmpsl
dec
jg
pop
inc
std
lods
mov
int3
jnp
mov
pusha
mov
orl
xchg
sti
xchg
divl
mov
cs
jnp
enter
pop
xchg
out
mov
xchg
add
jle
cmpb
cmpsb
xor
inc
cwtl
cmp
aam
xchg
push
int3
sti
push
jnp
fcomps
into
jae
jne
jl
sub
adcl
mov
push
xchg
pop
lcall
ret
cmp
push
int
and
xchg
mov
xchg
aam
push
inc
xchg
imul
gs
xchg
mov
mov
xchg
adc
test
jmp
shr
in
dec
clc
cmpsb
adc
sbb
cmp
mov
notl
cmpsl
mov
lods
jns
daa
dec
sbb
push
test
adc
add
mov
fwait
xchg
insb
jnp
mov
and
sbbb
mov
jo
pushf
clc
sti
pop
xchg
dec
jnp
imul
clc
sub
aam
sbb
or
cmpsl
push
add
xor
cmp
xchg
in
cmc
jns
leave
and
xchg
mov
adc
cwtl
aas
pop
cmp
push
jnp
or
mov
arpl
jnp
push
sti
inc
inc
xlat
rcrl
pushf
data16
push
or
cmpsl
mov
fcomps
jnp
in
cmc
imul
jb
repz
enter
fdivrs
unpckhps
jnp
adc
add
or
enter
push
sbb
sbb
mov
mov
imul
mov
push
cmp
xchg
loope
cli
jnp
scas
in
cmp
outsb
fisubs
mov
mov
scas
push
arpl
divb
test
or
jnp
dec
xor
test
xchg
aad
dec
jnp,pn
or
insb
sbb
cmp
mov
jmp
repz
out
xchg
xchg
orb
add
cmpsl
jnp
xchg
scas
mov
arpl
jnp
dec
lods
daa
mov
and
pusha
cmpsb
push
xchg
mov
in
add
gs
hlt
jae
int
test
out
push
dec
mov
sbb
es
cld
jge
or
cmp
jae
mov
inc
mov
xchg
out
fwait
sti
and
fs
pop
ret
cmp
push
repz
shrl
rcrl
jl
syscall
mov
jo
mov
or
or
push
lods
sti
mov
in
xor
ret
andb
repnz
sti
mov
faddl
or
sub
push
jnp
lahf
or
int
inc
test
xchg
call
xor
push
ret
test
mov
popf
pop
mov
insl
push
jnp
test
inc
jecxz
sub
mov
movsb
adc
mov
sahf
test
sub
and
push
jnp
mov
xor
stos
pop
inc
js
push
fsubrs
out
mov
aad
lea
iret
sub
jnp
cmpsl
push
rcrl
imul
adc
sub
sti
inc
aaa
sbb
cltd
xchg
je
repz
sub
xchg
jnp
mov
sbb
ret
iret
push
jnp
aas
xor
stos
fsubrl
sub
or
jnp
xchg
pop
dec
xor
jnp
fsubrs
sub
movsl
test
push
cmp
mov
pop
test
mov
adc
rcrb
or
add
pop
mov
ds
jnp
jo
ret
enter
or
lcall
cmp
xor
test
popa
add
sbb
mov
cmp
sbb
lahf
into
int
movsb
jmp
cltd
scas
dec
scas
data16
cmpsl
insl
xchg
cmp
data16
jnp
or
ja
mov
dec
call
mov
mov
lret
or
fwait
orl
gs
ds
data16
insb
cltd
jnp
je
mov
fwait
and
lds
mov
arpl
jbe
cmp
lods
addr16
lods
lcall
pusha
lods
push
xchg
sub
cmp
stc
xchg
inc
pop
outsl
mov
and
ret
shrl
lock
jge
jnp
pop
add
jle
in
xchg
push
cmpl
jecxz
imul
add
push
xor
jnp
and
pop
jecxz
push
dec
cld
int
inc
fdivl
mov
adc
or
lret
ret
fwait
or
mov
cmp
or
mov
sbb
adc
call
fistpl
lahf
cmp
pop
adc
ljmp
call
xorl
jnp
int3
data16
jae
lods
jnp
add
push
cmp
cwtl
jnp
outsb
pop
sarb
jnp
mov
sti
test
and
scas
pop
loope
test
call
and
hlt
xchg
xchg
cmp
jae
pushf
jbe
fdivp
lahf
test
jnp
lods
out
aad
int3
lcall
mov
cmpsl
inc
aaa
mov
xchg
xchg
adc
pushl
sbb
ljmp
repnz
jnp
repz
or
push
jno
dec
ret
xchg
fsubl
xchg
sub
xchg
outsl
cld
push
popl
cmpsl
add
pop
add
jo
aad
push
jnp
dec
lret
mov
push
or
sti
and
jbe
movsl
iret
pop
jnp
sbb
fs
sub
mov
imul
loopne
mov
sbb
jne
aam
fstpt
idiv
xchg
call
push
imul
mov
stos
jb
add
cmpb
inc
leave
pop
or
pop
or
loop
and
cmp
mov
mov
ds
adc
fnstenv
mov
sbb
mov
clc
movsb
aas
les
add
iret
movsb
fcmovb
in
ljmp
mov
dec
addr16
outsb
pop
jb
jge
pop
pop
movsb
xchg
les
stos
dec
test
jg
jg
jg
jg
jg
jg
jmp
loope
and
pop
mov
pop
jge
sarl
push
shlb
mov
mov
pop
sbb
lcall
in
add
xchg
mov
mov
stos
xchg
sbb
sbb
int3
testb
xor
inc
dec
pop
dec
dec
push
mov
movsb
cmp
dec
icebp
pop
or
js
js
imul
leave
outsl
lock
or
jg
mov
shlb
jg
test
xchg
dec
popf
mov
dec
mov
mov
dec
fmuls
call
dec
cli
dec
or
adc
xor
dec
mov
inc
sub
arpl
outsl
fisubrl
imul
ljmp
mov
sbb
lcall
rolb
or
es
mov
aas
sti
and
sbb
icebp
jg
mov
xchg
mov
xor
inc
icebp
dec
repz
std
outsl
or
pop
repz
outsb
adc
jle
jle
jle
jle
addb
orl
cmpsl
pop
mov
jbe
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jae
mov
negl
int3
iret
or
push
jmp
rorl
sbb
mov
push
xchg
mov
lret
mov
fistpll
or
fs
test
sbb
stos
adcl
push
mov
notb
ret
xchg
das
mov
mov
leave
dec
push
inc
aad
mov
or
jmp
rorl
inc
mov
mov
enter
push
cmp
xchg
jbe
mov
jp
cmpl
cld
sti
sahf
stos
sbb
mov
fwait
std
xchg
mov
mov
add
inc
dec
dec
fwait
lods
or
lret
xor
iret
adc
cmp
lods
clc
fwait
and
mov
enter
mov
mov
add
lahf
stos
xchg
xchg
cmpsl
jb
mov
push
add
mov
and
and
mov
ret
xchg
mov
mov
lahf
mov
cs
daa
xchg
and
xor
mov
loopne
and
mov
mov
mov
mov
mov
subl
mov
lahf
push
add
mov
xchg
or
push
data16
push
mov
mov
in
jmp
adc
test
or
mov
dec
mov
jno
inc
fwait
test
lret
sarl
outsl
xor
push
cmpsl
jle
out
mov
mov
and
lahf
lea
mov
push
push
jnp
mov
shl
lahf
into
mov
xchg
pop
cmpsl
jmp
mov
pop
rcrb
sti
mov
cmp
mov
mov
mov
outsl
rorl
movnti
inc
ds
mov
dec
scas
fists
mov
mov
mov
xchg
mov
mov
cmpsl
adc
add
setg
into
dec
das
ja
push
loop
out
fwait
ret
mov
lcall
xchg
pushf
mov
mov
test
add
mov
ret
dec
ret
repz
pushf
xchg
cltd
mov
xor
nop
lds
orl
add
mov
push
sub
add
pusha
mov
push
or
and
nop
xor
cwtl
aad
mov
sahf
adc
scas
add
fldt
mov
mov
shl
pop
or
jnp
mov
mov
cmc
sbb
jge
test
aaa
mov
test
pop
mov
addr16
mov
mov
xchg
sub
push
adc
add
push
inc
add
xchg
dec
ret
out
mov
lds
mov
pop
xchg
imul
xchg
mov
mov
bound
iret
mov
xchg
arpl
mov
xchg
pop
stos
xor
push
dec
lret
mov
mov
test
stc
cmpb
xchg
sbb
stc
mov
jg
roll
mov
pop
scas
lret
stos
test
mov
mov
mov
mov
shlb
lret
mov
sahf
mov
mov
lea
sub
dec
lret
cmp
jg
mov
fisubrs
mov
rcr
gs
jno
and
clc
dec
push
rcr
not
test
push
dec
movsbw
push
dec
xchg
push
movsbl
bsr
shrd
mov
movzbw
rcl
bsf
mov
rcr
mov
rcr
xor
seto
pusha
jmp
mov
push
lea
ja
jmp
jl
dec
cwtl
rcr
mov
ret
add
jl
aam
loop
out
dec
adc
sbb
pop
sbb
scas
test
cmp
sbb
out
xorl
std
adc
push
loop
lahf
mov
cmp
hlt
dec
lods
push
rcr
lcall
sub
insl
and
xor
out
mov
ja
adc
jns
cmp
push
dec
fistpll
rcll
add
sbb
lods
and
adc
outsb
insb
push
xchg
inc
roll
mov
lret
sub
adc
gs
adc
pop
xchg
dec
sub
sbb
push
mov
add
outsb
adc
adc
mov
add
ficoml
cmpl
in
add
shrl
mov
sti
or
repnz
test
lcall
jecxz
pop
dec
fisubrs
cmp
loop
cmp
inc
jle
push
add
stos
repz
ja
incb
aaa
rclb
ja
mov
test
adc
add
or
add
setne
lea
pushf
mov
call
lea
ja
push
lea
jb
clc
cmp
pusha
cmpb
pusha
call
push
lea
je
clc
mov
clc
shld
call
rorb
cli
orl
sbb
ret
mov
jo
lretw
data16
cmp
addl
jg
addb
xchg
push
mov
testl
in
lret
mov
out
mull
movsb
stos
adcl
xor
mov
mov
mov
or
out
mov
or
inc
or
cmpsb
mov
xchg
mov
sbb
in
jl
nop
jmp
xchg
mov
es
jmp
lret
or
adc
jno
ret
sub
popa
ljmpw
and
xchg
or
push
in
lret
or
enter
fsubs
das
mov
imul
sbb
and
test
pop
lea
sti
dec
or
int3
ret
lret
ret
inc
inc
add
pop
xchg
jae
or
insb
lods
add
sti
popf
andl
movb
mov
or
xchg
mov
sub
into
mov
shr
mov
psubusb
out
jnp
test
movsl
push
movb
sbb
stos
movb
test
xchg
movb
arpl
movsb
and
push
lea
xchg
and
or
xchg
or
pop
xor
sbb
imul
fwait
imul
cs
adc
jmp
pop
imul
ja
pop
adc
in
dec
xor
jnp
jg
int
shl
repz
add
mulb
aam
adc
or
iret
stos
and
lods
and
dec
imul
arpl
pop
movsl
mov
push
test
lret
xchg
xchg
jne
dec
je
loope
mov
pop
ret
frstpm(287
xor
ret
xchg
mov
xchg
je
mov
lret
pop
sbb
enter
sbb
fwait
jp
sub
out
xor
adc
lods
cmpsl
repz
mov
xor
xchg
fsubrs
inc
lret
and
pop
popa
ret
sahf
mov
int3
xchg
lds
push
add
aas
cmpsb
cmp
inc
push
inc
lods
pop
adcb
outsl
roll
arpl
iret
lahf
dec
pop
enter
or
aas
xchg
cmp
or
popf
hlt
dec
mov
lods
subl
aaa
xchg
testl
jl
adc
mov
push
rol
popa
mov
jmp
andl
xor
lret
xchg
das
test
loop
xor
xchg
shrb
xchg
int
jnp
scas
arpl
outsl
inc
imul
cmc
arpl
ja
out
addr16
scas
das
lret
das
xor
out
mov
dec
or
in
pop
xchg
push
outsl
daa
push
xchg
fcom
aam
pop
loop
imul
arpl
lahf
loop
imul
outsb
inc
popf
xchg
bound
dec
xchg
lcall
add
test
jmp
inc
pop
nopl
addl
dec
or
out
outsb
jns
mov
mov
jmp
inc
rcll
sbb
loope
dec
jb
pushf
cmp
mov
movsl
leave
xchg
aad
rcrl
inc
inc
jecxz
int3
scas
incl
popa
xchg
push
pop
ds
mov
add
pop
fisttpl
fwait
mov
fbld
mov
xlat
or
mov
inc
lret
aad
sub
mov
jns
jb
sub
jl
lret
or
inc
or
push
pushf
int
jne
mov
jl
xor
jbe
push
rol
stos
cmp
pop
cltd
push
pop
arpl
dec
popa
add
sbb
push
out
xchg
inc
fimull
fistl
sub
mov
mov
bound
aaa
mov
scas
jb
push
iret
lods
push
dec
sbb
jns
xlat
adc
mov
xchg
aas
xchg
push
pop
push
push
pop
fimuls
cmp
jno
push
adc
mov
jecxz
cmpsl
daa
adc
popa
popf
sti
push
xchg
imul
mov
push
or
inc
ret
mov
bound
pop
or
add
pop
rdpmc
in
sub
loop
mov
iret
xchg
outsb
sbb
xchg
subl
test
sub
fchs
mov
cmp
push
lahf
test
mov
daa
pop
push
cmc
test
and
arpl
jo
lea
ss
mov
xchg
andl
lds
push
push
fwait
jl
cmpsl
or
fimuls
cmpsl
in
pop
addl
add
add
or
pop
sub
ret
sub
int
daa
sub
jg
add
das
xchg
jecxz
and
mov
ret
add
lods
mov
cltd
cmp
daa
sub
outsb
jp
mov
push
mov
mov
xchg
mov
leave
sub
lret
out
xchg
add
divb
loop
mov
stos
enter
mov
int3
sbb
xchg
push
cmp
je
ret
push
jmp
cmp
inc
aas
pop
das
leave
sbb
stos
dec
jae
mov
or
outsb
test
xchg
cmp
outsl
and
and
dec
push
xorl
pop
mov
movsl
mov
mov
cwtl
xlat
pop
lds
outsb
ror
out
jo
sbb
push
aam
call
xchg
popa
xchg
push
cmpsl
cmp
movsl
and
daa
and
cmp
xchg
hlt
jno
dec
xchg
jecxz
lea
les
pop
push
adc
push
pop
mov
xchg
mov
sbb
stos
sbb
je
jae
and
push
and
mov
sar
xchg
xchg
lods
or
inc
adc
fs
sbb
scas
mov
jno
jle
jecxz
adc
mov
cmp
sti
jl
mov
dec
rorl
jl
mov
sub
mov
aaa
lea
xchg
jle
pop
mov
push
add
jecxz
test
mov
aas
roll
mov
cld
ret
cs
lret
fmull
and
cmp
push
mov
int
jns
dec
dec
scas
push
sub
pop
in
ret
incl
adc
fdivs
mov
dec
xchg
push
sar
jbe
roll
nop
cmp
scas
pop
pcmpeqb
lahf
jno
nop
aam
test
lret
jle
and
push
inc
or
mov
jns
and
cs
movsb
jp
adc
inc
mov
mov
inc
mov
mov
push
loope
mov
outsb
icebp
xor
rol
jge
popl
cmpsl
jge
xchg
data16
les
outsb
fwait
jbe
lret
sti
cmpsl
jg
pop
mov
out
adc
cmpsl
mov
das
sbb
push
or
jmp
in
mov
outsb
out
test
fwait
test
ret
outsl
fisttpl
or
add
lods
and
subl
or
xchg
mov
outsb
ret
fsubrs
mov
arpl
or
scas
andl
mov
ja
mov
cmp
arpl
jecxz
xchg
mov
in
xor
jle
jbe
int
sti
jge
pop
xor
or
mov
push
jb
sbb
fldt
or
inc
daa
push
push
sub
popf
ja
insl
ret
sti
repnz
mov
out
movsl
shlb
fcompl
stos
cltd
push
xchg
adc
nop
mov
add
cmp
xlat
jecxz
lea
fisttps
inc
push
mov
cs
mov
roll
inc
jae
xchg
cmc
nop
sbb
xchg
pop
ds
jo
mov
dec
adcb
sub
xchg
add
and
dec
pop
mov
fmuls
jno
mov
scas
jmp
in
push
mov
pop
aad
iret
push
inc
xlat
dec
and
mov
test
mov
mov
iret
sbb
jbe
pop
mov
arpl
sbb
stos
je
jne
into
dec
dec
out
out
fadds
popf
outsb
out
cmpsl
lods
outsl
push
xchg
arpl
add
into
mov
ja
movsl
insb
xor
jecxz
push
inc
xchg
jp
into
test
pop
pop
rcl
in
dec
cmp
ficompl
jno
add
ret
push
lea
fcoml
or
pop
popa
mov
inc
jp
flds
mov
lock
cmp
push
sbb
inc
subl
das
rcrb
mov
les
scas
mov
stos
test
jb
or
mov
sbb
jg
mov
movsb
dec
and
out
jle
cwtl
insl
adc
popf
jl
inc
sbb
and
pop
sbb
mov
idivl
incl
xchg
movlps
add
adc
jg
loope
jns
repnz
stos
xchg
jb
xchg
and
cwtl
jg
filds
mov
or
or
sbb
loopne
fdivl
pop
or
or
sbb
sub
daa
mov
pop
pop
loopne
cmpsb
jae
int3
xchg
aaa
add
pop
cwtl
xorl
add
outsl
sbbb
gs
push
mov
test
jmp
sbb
inc
lahf
adc
or
scas
cmp
repz
adc
mov
xchg
sub
pop
or
jbe
jae
dec
adc
imul
mov
data16
ds
xchg
jae
sbb
rorl
in
insb
sub
xchg
outsb
dec
inc
add
iret
xchg
aad
hlt
mov
xchg
adc
movsl
ret
push
jcxz
add
test
jecxz
mov
movsl
jecxz
push
xlat
mov
arpl
lods
mov
add
rorb
repnz
daa
cmp
out
out
push
mov
inc
movl
addb
repnz
fs
and
pop
mov
ffree
in
ret
jl
int
and
sbb
test
call
lret
bound
popl
and
mov
repnz
or
loope
and
push
mov
imul
outsl
sub
xor
adcb
xchg
int
ret
das
and
movl
jmp
xchg
rcll
aaa
lds
dec
push
lret
decb
arpl
xchg
add
out
or
jecxz
xlat
inc
inc
rorb
and
or
mov
add
sbb
cmp
xchg
cwtl
cmpsl
popf
test
dec
fucom
aad
and
lea
cmp
mov
test
mov
sub
mov
in
mov
adc
addl
xchg
mov
xchg
mov
jge
add
into
sub
data16
mov
xchg
inc
mov
pop
mov
jl
xor
daa
push
out
lahf
aad
sub
pushf
sahf
jns
out
neg
pop
mov
mov
fwait
lret
xchg
inc
mov
fmuls
dec
adc
mov
and
push
cmp
push
xchg
imul
enter
out
imul
adc
mov
mov
les
mov
je
and
mov
and
jl
push
shlb
arpl
sar
cli
inc
cmpsb
jg
call
jo
mov
jae
jmp
xchg
xchg
call
xchg
cmp
inc
add
push
data16
sub
iret
rcll
and
mul
scas
add
faddl
pushf
dec
repnz
cmpsb
popa
jmp
xchg
sbb
cmp
jnp
mov
xchg
shrb
xchg
shl
fwait
das
fadd
cmp
xchg
dec
stos
clc
pop
push
call
movsb
adc
lods
mov
loope
lret
int
dec
clc
push
jb
mov
stos
ret
inc
cmpsb
jo
lret
pusha
out
repnz
cmpsl
sarb
ret
cmp
mov
mov
jo
outsb
into
jmp
addr16
mov
jg
fcom
or
jae
nop
sub
push
push
or
mov
fwait
push
add
push
cmc
popa
mov
pushf
rcrb
inc
jne
push
xlat
pushf
pop
rcl
lret
fwait
mov
lds
out
fistpl
scas
adc
test
and
cmp
popf
popl
jnp
push
fbstp
adc
stos
jecxz
fidivrs
les
testl
and
mov
xchg
scas
or
fmul
jo
in
leave
or
notl
movb
jno
push
orl
jecxz
sub
shll
push
add
add
filds
hlt
inc
lahf
xchg
dec
jnp
dec
pop
mov
arpl
cmpsl
xor
cmpsb
mov
push
andb
push
movsl
dec
mov
jne
sarl
xlat
xchg
or
enter
call
rep
lret
and
in
mov
arpl
fidivrl
dec
test
sub
addr16
aad
mov
xchg
push
sub
ja
push
in
mov
lret
jecxz
xchg
cld
mov
jns
sti
mov
mov
mov
shl
popf
outsb
adc
sbb
cmp
pop
aam
lret
mov
fwait
test
jne
xchg
orb
lret
add
addl
inc
cmpl
jecxz
push
test
stos
cli
in
adc
xchg
mov
je
sbb
or
mov
mov
pop
add
mov
inc
test
lock
push
sti
jns
mov
adc
push
pop
or
xchg
jg
jae
adc
jp
imul
mov
cmp
dec
mov
or
out
sti
nop
jle
pop
push
lds
fwait
jg
sub
loope
push
outsb
mov
ja
adc
jecxz
clc
dec
lret
int
sub
addr16
xchg
cli
xor
push
sahf
js
jae
fsubp
dec
sbb
push
sbbb
popf
arpl
sbb
mov
outsb
xchg
lock
xchg
pop
adc
dec
sti
popf
insb
xor
jecxz
out
arpl
push
test
in
pop
mov
mov
mov
xlat
xchg
movsl
pop
mov
je
pop
sti
stos
sub
stos
xchg
pop
pop
lds
pop
dec
mov
xchg
and
push
scas
push
sti
mov
inc
adc
or
mov
jmp
dec
lret
lret
mov
subb
sbb
test
adc
jg
lock
xchg
aas
cltd
int
mov
push
cltd
daa
dec
fwait
push
loope
aam
dec
sbbl
dec
lea
in
into
cltd
jmp
add
imul
fisttpl
std
dec
push
add
lcall
lret
rorl
add
add
lahf
mov
mov
lods
fcmovne
mov
fsts
fcmovnu
xchg
movsl
insl
inc
pop
iret
ret
add
or
cmpsb
inc
arpl
aas
scas
fcmovnb
shl
fwait
test
aas
scas
push
imul
jnp
push
pop
pop
ds
mov
mov
adc
push
insl
nop
inc
lds
out
cmpsb
pop
push
sbb
cmpsl
fwait
mov
mov
popa
mov
nop
xchg
jecxz
mov
xchg
adc
movsb
sets
inc
mov
xchg
dec
sbbl
in
lahf
into
push
addr16
int
movsl
pop
mov
add
xchg
aaa
mov
jge
add
scas
lea
jns
mov
sub
jnp
inc
mov
cmp
xchg
cmp
xchg
xchg
xor
add
adc
xlat
mov
cltd
lods
shr
fstpl
or
fbld
daa
test
subb
sarl
clc
pushf
pop
jmp
lds
inc
movl
push
mov
push
or
push
mov
ret
inc
mov
ror
adc
cmp
repz
mov
in
mov
pop
xchg
or
inc
mov
lret
sbb
scas
mov
fsubrs
rcr
pop
aaa
and
das
mov
jmp
mov
jge
fisttpll
nop
iret
outsl
sahf
inc
mov
popf
aaa
out
fwait
xlat
push
popf
jbe
stos
pop
inc
and
sti
push
adc
jo
test
repz
in
push
mov
adc
adc
fwait
sub
rol
das
adc
jecxz
xor
jae
inc
mov
push
and
sub
das
xchg
and
cmpsl
in
outsl
adc
lods
int3
jg
or
jb
test
imul
mov
pop
das
leave
or
arpl
test
sub
pushl
psrld
das
dec
int3
and
push
or
lods
inc
add
bswap
dec
shlb
mov
fistl
stos
and
scas
ret
jecxz
xchg
or
xchg
sarl
rclb
xor
shll
lea
sti
out
nop
scas
xor
leave
xchg
or
je
or
xor
leave
or
ss
mov
scas
rcrb
jecxz
xchg
or
lds
push
in
movsl
bswap
adc
push
leave
or
movsl
xchg
xchg
or
movsl
daa
arpl
notb
jp
daa
cmpsb
outsl
div
iret
test
xchg
enter
daa
imul
aaa
into
add
ja
inc
test
cltd
cwtl
jno
adc
daa
xor
and
cmp
sbb
dec
push
daa
divb
fsts
dec
shlb
or
inc
xor
in
xchg
mov
ret
jne
stos
fimull
or
stos
test
xchg
xlat
test
ret
daa
ds
adc
push
xcrypt-cbc
cmpsl
shlb
push
test
inc
sbbb
bswap
xchg
test
add
jge,pn
enter
test
adc
or
mov
cs
imul
stos
push
lods
ffree
packsswb
daa
negb
test
ds
outsl
xor
mov
insb
push
movsl
daa
cmp
test
in
daa
cmpsb
push
div
iret
test
xchg
iret
lods
or
leave
test
lds
or
dec
add
add
in
nop
push
and
inc
shrl
lods
ljmp
or
mov
fildl
daa
inc
xchg
stos
test
insl
cmp
daa
cmpps
daa
xor
subb
pop
rcl
seta
daa
xor
test
fcmovnbe
inc
cwtl
test
inc
cs
test
aas
cmp
cmp
cmpsb
icebp
shlb
or
stc
and
pop
call
es
bswap
xor
test
stos
lods
insb
push
sldt
push
daa
negb
add
xchg
rol
dec
daa
xor
je
mov
pop
xchg
xchg
push
test
bound
pusha
popa
movsl
daa
cmpsb
arpl
aaa
iret
test
xchg
jmp
outsl
push
and
daa
daa
cmp
movsl
scas
add
push
and
test
imul
scas
repz
and
pop
xor
mov
outsl
pusha
and
test
daa
inc
mov
test
fsubp
shl
pop
shlb
or
dec
or
bswap
imul
stos
cli
ja
insb
in
xsha1
cmpsb
mov
daa
or
fiaddl
add
psrld
push
daa
mulb
iret
test
xchg
stc
and
bswap
mov
add
and
daa
inc
fldt
shrb
xsha1
cmpsb
mov
daa
or
xchg
or
bswap
outsl
push
daa
negb
stc
fdivs
inc
xchg
xorl
jne
cmp
lds
push
adc
lods
nopl
xchg
pop
add
daa
pop
add
cmpsl
test
test
cmp
mov
je
into
addr16
mov
cltd
dec
fwait
push
inc
jp
jmp
or
arpl
fstps
xchg
bswap
xorb
leave
shll
iret
ret
mov
xchg
push
cwtl
push
dec
daa
xchg
sahf
inc
mov
xchg
js
xor
xor
xchg
out
lds
iret
movsb
or
in
push
adc
pop
sti
mov
insl
subl
mov
push
cmp
gs
or
aad
lret
or
rcrb
inc
scas
outsb
xchg
lret
jo
fisubrs
add
mov
mov
mov
push
jnp
jo
xor
es
test
sub
aad
lahf
jecxz
jmp
data16
pusha
in
icebp
in
outsl
lret
mov
xchg
in
add
cmpsb
fcmovu
cmp
lret
or
test
inc
or
push
lds
xchg
dec
mov
pop
jecxz
pop
sub
out
jo
ret
or
mov
jl
xchg
inc
fbstp
popf
sub
dec
sub
mov
mov
bound
dec
or
dec
dec
adc
vmovlps
or
aad
adc
ret
shrl
mov
int
jbe
in
je
lods
cmc
add
or
push
xchg
fcoml
lret
adc
mov
jp
lods
les
popa
xchg
pop
loope
outsl
dec
dec
and
movsb
bound
movsl
mov
out
dec
cmpsl
outsl
cmp
hlt
cltd
adc
imul
cmpsl
xchg
mov
test
mov
lods
mov
push
mov
xchg
or
inc
jmp
int3
or
es
cmc
dec
or
inc
push
pop
out
dec
sub
mov
outsb
mov
sbb
mov
jecxz
fwait
ror
call
cmpsb
xchg
sbb
lods
movups
mov
add
test
int3
shll
sbb
pushf
test
jae
push
cli
pop
jmp
or
fcoml
imul
push
loopne
jns
jb
ror
test
lea
ja
test
inc
mov
or
arpl
dec
adcl
inc
dec
push
pop
ficompl
enter
lgs
mov
xor
lret
mov
in
mov
les
mov
mov
fcom
xor
mov
mov
repnz
mov
arpl
adc
inc
dec
mov
and
push
push
xor
scas
push
mov
and
das
jecxz
ret
adc
push
imul
xchg
mov
push
xlat
mov
je
jecxz
ret
mov
mov
imul
push
bnd
xchg
clc
shlb
push
lret
or
mov
push
nop
out
jb
cmp
mov
adcl
or
xchg
aad
jb
xor
pop
inc
imul
mov
sub
or
pop
rcr
daa
inc
push
sub
lret
or
mov
dec
js
or
aad
lret
jae
xchg
test
movsl
inc
enter
mov
iret
mov
adc
mull
fwait
and
xchg
xchg
xchg
sub
movsw
insb
les
mov
fistpll
push
xchg
mov
xor
cmp
jns
sub
mov
push
push
push
xchg
test
arpl
test
roll
aad
stc
arpl
cs
shll
jbe
roll
divb
rorb
in
stc
aad
xchg
push
int
inc
mov
sbb
and
sub
movsb
shl
sbb
add
or
lret
add
lock
cli
mov
fwait
ret
or
mulw
adc
movsb
xchg
enter
imul
fidivrs
stc
dec
lea
xchg
inc
xchg
pop
dec
imul
sbb
jno
insl
or
jmp
or
or
dec
outsb
sub
arpl
outsl
js
mov
cmp
xchg
mov
fcompl
mov
mov
mov
imul
pop
xor
or
arpl
pop
mov
fidivs
in
mov
mov
es
jg
lods
xor
xchg
enter
lock
or
andl
mov
jb
pop
xor
fnsave
fnstcw
and
outsb
mov
sbb
pop
adc
fimull
repz
popa
test
int3
leave
or
je
mov
ret
fimull
xchg
xor
mov
test
test
mull
mov
ja
test
dec
lods
cmp
add
adc
adc
xor
xchg
inc
fsubl
mov
cwtl
gs
gs
dec
test
and
imul
sbb
dec
add
cmp
sub
or
jecxz
rcrl
lret
add
iret
faddp
fldcw
inc
not
dec
xchg
mov
xor
mov
or
aas
lret
push
lods
mov
out
fisttps
inc
mov
out
cld
out
stos
test
icebp
mov
push
xlat
adc
iret
inc
out
jo
xchg
adc
arpl
inc
adc
push
xchg
mov
rcrl
jle
sub
test
fistl
push
jne
pushf
xchg
arpl
jecxz
fidivrs
add
cwtl
scas
popf
test
movsl
out
mov
pop
arpl
addr16
push
mov
scas
mov
or
push
arpl
outsb
mov
lahf
lret
test
jp
push
push
mov
xor
jne
outsb
push
rolb
int
pop
in
xchg
int3
or
mov
cltd
mov
push
sti
jno
fs
push
inc
jg
or
lea
pop
pop
xlat
pop
add
xor
and
inc
leave
mov
mov
add
mov
adc
loope
mov
or
or
inc
mov
push
popa
sbb
mov
push
jae
cwtl
inc
fwait
jno
test
cmp
ret
int3
push
mov
mov
push
push
xor
cld
sahf
xor
nop
jae
and
mov
pop
mov
and
fdivrp
dec
mov
popf
mov
push
loope
fwait
popf
lret
iret
fdivr
xchg
ljmp
out
daa
inc
in
push
ljmp
add
movsb
jne
fiaddl
out
cmp
jmp
stc
rol
repnz
push
shlb
stos
xchg
outsb
xor
jnp
imul
or
mov
test
js
je
aam
mov
daa
fdivrl
sbb
mov
mov
xchg
sti
and
incl
mov
loopne
scas
lods
outsb
out
and
add
sti
lock
lret
enter
lock
or
imull
sti
pop
jo
add
mov
xor
popf
arpl
iret
xchg
sbb
sahf
popf
je
adc
xorl
adc
push
lods
mov
xchg
push
lods
outsb
sub
repnz
mov
mov
cld
lea
pop
pop
hlt
test
xchg
imull
cmp
sbb
jmp
push
push
adc
jnp
iret
cmpsl
xorl
mov
dec
nop
daa
dec
mov
cmpsb
test
aaa
lds
inc
adc
sbb
scas
pop
sub
adc
dec
into
notb
xchg
mov
mov
cmpsb
mov
cmpl
xchg
arpl
xor
enter
das
xchg
or
pop
aam
push
sub
push
addl
fsubs
mov
pop
in
push
faddl
dec
xchg
lcall
inc
mov
dec
push
xchg
jmp
push
add
in
mov
movsl
pop
es
add
mov
in
xchg
fisubrs
scas
jecxz
adc
inc
xchg
xchg
or
inc
into
pusha
ret
fisttps
movb
or
dec
dec
inc
std
cmpsl
dec
call
ret
mov
push
das
and
cmpsl
dec
popa
out
orl
mov
aaa
mov
jbe
jecxz
es
jne
jae
int3
aaa
inc
dec
jecxz
ja
icebp
xchg
dec
inc
and
loopne
std
inc
lock
jmp
xor
in
in
data16
dec
adc
mov
notl
rcrb
xchg
and
push
and
jecxz
cmpsb
mov
sub
mov
nop
shrb
imul
scas
out
xor
adcl
shlb
jecxz
arpl
mov
clc
inc
dec
and
shll
scas
addr16
cmp
rolb
fiadds
or
jns
jbe
jae
mov
mov
ja
sbb
out
fldl
nop
mov
mov
rol
mov
lret
ret
repnz
mov
xchg
pop
inc
adc
movsb
xchg
sub
mov
xchg
sub
testb
adcl
mov
mov
mov
cltd
orl
lds
cmp
sub
dec
jnp
push
cmp
aam
push
sbbl
ret
cmp
icebp
sub
addl
stos
add
out
mov
inc
xchg
arpl
je
loopne
pop
fcmovu
decb
inc
adc
push
orb
or
lds
push
push
mov
test
jle
jno
loop
movsl
repz
enter
test
aam
leave
lahf
popa
mov
pop
aaa
test
nop
adc
fcmovne
rcrl
sub
repnz
enter
xor
das
bound
rorb
sub
mov
xchg
push
int
pop
movsb
ja
popf
cmp
cmp
int3
xor
add
xchg
mov
inc
pop
mov
gs
pushl
mov
fldcw
stc
adc
mov
sti
in
fwait
xchg
movsb
mov
dec
adc
add
cltd
cmp
xchg
pop
pushf
xchg
mov
dec
inc
jbe
pop
jecxz
push
xchg
xor
jbe
inc
jae
lret
and
sbb
dec
out
sub
jl
sti
test
outsl
mov
fistpl
outsb
inc
loopne
fistpll
mov
push
dec
or
mov
pop
pop
not
ret
xor
scas
xchg
subb
cmp
test
mov
shll
and
pop
arpl
xchg
xor
or
sub
push
enter
cltd
push
xchg
add
add
cltd
int
add
cmpsb
add
dec
mov
inc
jne
scas
int
pop
xchg
testb
or
lea
sub
push
arpl
sub
jecxz
push
les
arpl
push
push
mov
dec
outsb
lcall
cmp
mov
xchg
ret
pop
pusha
adc
dec
lods
lcall
jae
pop
lds
test
outsb
movsl
adc
mov
xlat
mov
int
mov
adc
pop
inc
jecxz
adcl
dec
xor
sub
movsl
sub
jp
xchg
clc
lea
mov
cmp
lea
jbe
pushf
lea
jae
cmp
pushf
cmc
cmp
cmp
movl
pusha
jmp
bt
test
pushf
pusha
lea
je
cmp
sub
bt
call
adc
push
das
fstpl
adc
rcrl
jle
adc
xchg
das
mov
xlat
dec
push
dec
mov
fstpl
scas
test
ror
add
add
push
lcall
aam
xor
sbb
iret
pop
jp
adc
mov
ret
sub
std
or
sti
adc
lea
popa
mov
movsl
xlat
lods
shlb
mov
adcb
mov
inc
inc
adc
je
and
jb
stos
pop
and
idivb
addl
sbb
dec
xor
push
lea
jne
jmp
movl
call
outsl
insb
xor
cs
insb
add
lock
add
adc
aam
sbb
mov
pop
and
mov
fimuls
out
test
xlat
iret
mov
insl
push
notb
sbb
hlt
mov
imul
mov
insb
pop
xchg
std
adc
rcll
xchg
pushf
pusha
lea
call
jb
push
pushf
adc
mov
call
lea
jne
call
lea
je
stc
bt
pushf
cmp
jmp
dec
insl
lods
adc
sub
mov
imul
dec
pop
inc
sbb
xchg
inc
push
jnp
add
mov
fistpll
xchg
jp
mov
add
scas
addl
xchg
cmp
fcoms
loop
lret
sbb
xchg
sbb
mov
fsubs
jmp
or
xor
js
or
mov
or
pop
cwtl
out
lods
pop
gs
xchg
mov
push
gs
lods
pushf
xorb
mov
mov
adc
iret
aam
in
movsl
inc
icebp
pop
adc
mov
sbb
mov
mov
call
in
jno
pop
xor
scas
scas
in
loop
jnp
rolb
sti
xor
shll
aaa
xlat
dec
out
mov
mov
lahf
add
inc
jb
pop
insl
addr16
xor
test
pop
xchg
xor
lds
fisttpll
push
imul
in
sbb
cmp
decb
out
cltd
fisubs
arpl
jae
in
loope
in
std
adc
cwtl
mov
inc
call
bt
cmp
call
cmp
call
fwait
or
inc
aaa
mov
fnstcw
mov
xchg
or
in
aas
inc
hlt
out
and
in
sarl
jnp
mov
adc
xchg
fstps
push
push
mov
jae
push
add
cmpsb
adc
jmp
jo
pop
adc
imul
mov
cmc
mov
xor
test
sarl
int
mov
lock
and
lret
cld
adc
gs
mov
sub
xchg
inc
add
lret
sub
fsubrs
pushf
pushf
push
rep
lea
push
pushf
not
mov
pushl
pushl
pushf
lea
jmp
movb
lea
je
push
add
cmc
call
mov
pushf
cmp
stc
test
jmp
rcl
mov
cmp
call
jmp
test
call
jmp
jmp
call
cmp
or
pushf
movb
pushl
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
inc
and
cmp
and
push
lea
jmp
lea
jne
shr
pushf
shl
or
mov
test
add
call
call
test
call
pushf
jmp
jb
cmp
and
xor
in
mov
mov
mov
xor
movsl
dec
stc
outsl
ljmp
data16
mov
in
fs
hlt
sub
sahf
ret
rcr
pop
stos
adc
mov
in
nop
cmp
sbb
loope
xchg
std
adc
shlb
arpl
inc
jb
add
movsb
fisttpll
ret
movsbw
lea
mov
setle
cwtl
pushf
lea
lea
call
lods
push
not
pusha
push
not
not
inc
inc
inc
sbb
shl
mov
test
xor
call
lea
je
stc
cmc
cmp
add
cmc
call
push
jmp
xchg
pop
mov
jmp
movsb
loope
mov
jns
out
icebp
bound
sahf
push
lret
dec
pop
inc
xor
push
stos
jo
movsl
mov
insl
push
push
dec
aad
in
push
xor
lret
iret
jnp
jmp
pop
and
outsb
inc
ret
mov
in
mov
push
inc
jge
mov
jmp
inc
push
push
push
outsb
jmp
pop
sti
movsl
sub
into
iret
xchg
cwtl
push
pusha
cmp
loop
push
rorb
mov
cmpsl
dec
xchg
or
adc
nop
popa
push
lea
jb
push
jmp
or
pushf
mov
lea
je
pusha
pusha
call
mov
test
xchg
xor
data16
std
jb
daa
mov
dec
mov
cmp
inc
sub
add
pop
jno
inc
xor
inc
fadds
loop
std
xchg
pop
dec
std
add
sub
out
push
cmp
fnstcw
sahf
mov
out
jo
and
ss
sub
dec
or
sti
push
pop
mov
into
jb
mov
push
pushl
lea
jne
sets
push
pushfw
popw
not
call
mull
cwtl
mov
cmp
imul
mul
push
inc
mov
dec
mov
or
int
and
lcall
xor
inc
inc
mov
out
les
mov
into
push
test
pop
sbb
cld
sbb
ret
out
js
inc
lcall
cmc
addl
and
shlb
enter
push
fldl
icebp
leave
enter
sar
std
adc
mov
adc
loopne
add
test
add
and
movw
inc
movb
mov
pushf
lea
jmp
dec
popa
subl
and
das
testl
and
jg
adc
add
fstps
data16
sub
jl
xchg
inc
or
pop
dec
xorl
pop
mov
jne
outsl
mov
mov
jo
leave
mov
cmpb
cmpl
adcl
xchg
movsb
add
xor
fisubrl
xchg
lret
dec
pop
mov
lock
ds
or
xchg
xor
movb
fidivrs
lds
adc
test
andb
mov
lcall
aad
roll
pop
push
push
lahf
pop
push
iret
jge
aad
dec
adc
push
cmpl
outsb
pop
jmp
xor
adc
enter
mov
push
sub
cmp
push
shr
sub
jge
sbb
out
sbb
popa
push
insb
cli
mov
sub
mov
lcall
lahf
int3
add
rclb
sbb
aas
out
dec
aas
gs
pop
test
sub
lret
les
addr16
in
sub
std
inc
outsl
mov
adc
and
popl
add
mov
rorb
add
add
decl
push
add
pushf
lea
jmp
pushf
add
push
call
sbb
mov
lret
aam
testb
stc
push
xor
cmovnp
rcr
aad
loopne
sbb
mov
xchg
cltd
sbb
mov
repnz
inc
and
jb
les
inc
daa
js
xor
lret
sub
jp
loopne
push
shrd
jle
aas
or
pop
aaa
lret
xlat
cmpsb
xlat
iret
mov
lahf
dec
insb
pop
js
xchg
add
iret
lret
adc
out
add
out
ret
and
jle
outsl
and
sub
adc
outsb
call
and
push
lea
jo
movzbw
push
lea
mov
mov
mov
pushf
pushf
movzbw
movl
movzbw
call
call
cmp
call
cld
cmpsl
scas
and
cmpsl
xor
daa
push
movsb
cltd
sti
shll
mov
test
lock
insb
xchg
push
jg
adc
push
out
mov
inc
sub
and
pop
clc
int
jnp
lea
scas
inc
stos
inc
mov
les
out
icebp
std
imul
xor
lahf
loopne
movsb
push
cmp
inc
sarb
lods
fwait
or
adc
push
adc
addl
je
dec
pop
in
shrl
cltd
sbb
dec
and
mov
out
outsl
or
sbb
add
and
mov
sub
and
or
mov
lods
popa
adc
out
adc
xor
arpl
insl
fsts
dec
cmp
das
xor
push
sbb
cmp
bound
or
push
xor
loop
pushf
or
push
pushf
xor
and
push
mov
pop
loope
jg
push
int3
sub
shr
adc
subb
imulb
popa
out
ret
add
dec
add
test
xor
cmp
adc
and
sbb
add
inc
scas
sbb
shl
hlt
xchg
cmp
xorl
call
xlat
inc
ss
cmp
lcall
inc
sti
rcll
inc
jne
fsubrs
ret
sti
sub
lahf
lahf
jmp
popa
cld
out
adc
ficoml
adc
aam
mov
test
movsb
mov
dec
sbb
int3
je
inc
rsm
lret
jae
sbb
pop
insl
sbbb
movsb
mov
inc
out
inc
test
xchg
sarl
nop
mov
pop
mov
imul
es
adc
lret
xchg
jl
xchg
loope
pop
or
lock
rorl
enter
add
cmp
std
adc
add
cmp
pusha
add
pushf
movl
movb
lea
jmp
lea
jb
test
bt
cmp
push
pushf
pushf
pushf
lea
jae
pusha
sbb
mov
lea
mov
rcr
pop
btr
not
mov
stc
xor
movb
movw
repnz
pusha
mov
lea
jne
xor
test
bsf
mov
pusha
jmp
pushf
mov
pushf
movl
call
add
cmp
movzwl
or
not
clc
mov
call
test
bswap
mov
not
btr
bsr
btr
mov
movb
bt
pushf
xor
pushf
cmp
repnz
jmp
call
test
mov
test
cmc
push
test
jmp
and
test
shrd
mov
cmc
add
movsbw
bsr
movl
setle
rol
mov
pushf
cmc
pusha
cmp
pushf
pushl
jmp
lea
ja
cmc
stc
push
clc
imul
cmc
test
cmp
clc
add
push
pushf
push
push
lea
jmp
pusha
pushf
movzwl
shld
mov
test
add
push
test
bt
mov
call
add
stc
mov
bt
lea
jg
stc
bt
test
pusha
call
mov
pushf
pusha
mov
mov
pushf
dec
cmp
not
stc
stc
add
test
not
clc
pushl
call
mov
add
js
push
addr16
adc
daa
rcll
ret
inc
sbb
les
push
mov
jmp
mov
add
std
dec
addr16
clc
xchg
pop
lock
pop
adc
je
pop
pop
std
cwtl
dec
stos
cmp
xorl
lahf
insb
scas
jns
pop
pop
ljmp
sbb
sub
mov
aam
test
jnp
or
imul
pop
clc
jmp
pushf
mov
stc
sar
bts
bswap
mov
clc
cmp
pushf
lea
js
push
lea
jbe
sbb
dec
cmp
mov
movsbw
bswap
add
movsbl
push
rol
mov
sbb
clc
pushf
add
shl
movl
lea
not
shr
mov
sub
pusha
cmp
pusha
push
mov
lea
jbe
rol
shld
sub
cmp
clc
ror
movsbw
mov
sbb
xadd
mov
xor
bts
add
cmp
bsr
shr
xor
shrd
sub
clc
mov
shr
jmp
mov
mov
pop
dec
mov
or
cwtl
inc
sbb
cli
lret
push
add
icebp
mov
lds
adc
popf
mov
nop
xchg
subb
push
push
lcall
iret
std
mov
cltd
repz
xchg
sbb
add
rcrb
subl
mov
fsubrs
aas
or
lods
jge
mov
inc
jbe
fidivs
inc
mov
into
jb
xchg
into
push
outsl
mov
jno
sub
pushf
push
not
mov
inc
cmc
clc
pushf
cmp
cmp
lea
pop
movzbw
movsbw
lea
lea
movsbw
lahf
mov
call
movl
call
lea
je
cmc
call
mov
and
cltd
aad
mov
je
std
jae
out
scas
jo
or
icebp
lret
std
sub
dec
test
push
das
insl
jae
cltd
in
jg
mov
and
fnstsw
sti
nop
out
mov
and
pop
in
out
cmp
inc
fmulp
xchg
popa
inc
lcall
fsub
xorl
add
adc
add
adc
add
add
add
add
adc
add
aaa
popl
call
jmp
clc
jmp
push
lea
jb
pushf
cmpb
pusha
push
movb
lea
jne
bswap
inc
mov
cmp
pusha
add
test
test
movzwl
bswap
mov
test
stc
cmc
push
add
mov
clc
test
pusha
mov
push
mov
bt
bt
test
pushf
call
pushl
popl
pop
mov
not
push
jmp
mov
pushf
call
lea
ja
rcr
ror
neg
dec
sub
btc
btc
clc
add
sar
not
neg
mov
bt
cmp
mov
clc
pushf
bt
clc
repnz
pusha
movw
movl
lea
jne
call
test
xchg
push
loop
sti
push
xchg
cli
lahf
mov
pop
push
and
je
mov
nop
add
bound
inc
adc
pop
int3
call
and
sbb
xchg
dec
test
push
sub
mov
rclb
mov
repnz
mov
add
mov
add
dec
cmp
inc
jae
cmpsb
ret
jo
mov
cmp
mov
xchg
xor
adc
push
push
push
call
jmp
lea
jne
sar
movzbl
mov
jmp
inc
pushf
mov
adc
lea
push
pusha
pushf
pushl
ret
jmp
lea
jne
rcr
shl
add
movsbw
mov
cmc
add
pusha
mov
pushl
jmp
mov
pushf
clc
pusha
cmp
sub
pushf
pushf
push
push
lea
jmp
pop
push
adc
cmovne
cmpl
or
pmullw
gs
ds
bound
adc
scas
xchg
sbb
out
in
sub
inc
repnz
lcall
mov
push
in
jae
xchg
imul
lods
in
mov
movb
je
mov
jecxz
adc
out
sub
addr16
dec
std
adc
aaa
pop
and
shrb
cmc
xchg
pushf
ja
stos
cli
inc
sbbb
fadd
mov
andl
aam
jns
mov
enter
dec
fidivrs
stos
addr16
hlt
pop
bound
adc
repnz
adc
lcall
loop
inc
fcmovb
ret
or
mov
adc
std
adc
push
adc
push
mov
push
jbe
loope
loope
jmp
daa
dec
mov
sub
sahf
xlat
inc
and
pop
dec
adc
in
nop
cs
popf
xor
push
mov
inc
cmp
inc
add
es
arpl
nop
mov
out
test
fdivp
es
adc
xor
dec
or
or
cld
fcmovb
mov
cs
xorl
test
cmp
mov
lods
mov
xchg
push
fistpl
mov
pop
andb
jns
sti
lds
dec
negb
jmp
add
daa
adc
mov
mov
mov
test
pushf
jbe
stos
mov
roll
ljmp
into
fsubs
pop
inc
add
pop
inc
add
push
jne
loop
sbb
bound
jle
sbb
sbb
adc
jg
scas
loope
xor
dec
push
sahf
out
push
mov
pop
dec
push
or
mov
ljmp
sub
testb
push
mov
and
pop
dec
mov
fmulp
adc
mov
mov
imul
lret
imul
inc
adc
pop
into
mov
jb
push
xchg
dec
push
lods
jmp
or
stos
mov
mov
dec
pop
daa
jmp
xchg
xchg
mov
inc
push
ss
mov
xorl
and
ret
xchg
in
push
cmpsl
les
fnsave
sbb
movzwl
rcr
xor
sar
btc
mov
cmc
bt
pushf
add
mov
pusha
test
mov
bt
jmp
lret
lock
add
mov
js
fdivs
lds
sbb
mov
sub
notl
adc
addl
loop
fimull
dec
bound
fidivs
pushf
stc
pop
lods
xchg
es
fs
inc
mov
cli
nop
mov
aas
push
adc
roll
mov
adc
or
orb
dec
pop
popf
out
leave
lcall
rcl
lret
or
pop
out
jp
push
sbb
clc
enter
inc
cli
popa
shlb
aad
testl
mov
imul
faddl
clc
adc
jb
scas
test
arpl
frstor
sub
xchg
mov
mov
jle
lds
mov
mov
adc
jns
inc
out
jae
jl
adc
and
push
daa
jmp
pop
xor
pop
test
repz
out
adc
imul
popf
and
jle
push
and
std
adc
repz
clc
push
xchg
inc
loop
fldenv
cmp
mov
cli
pop
pop
data16
dec
rcrb
fwait
test
out
repz
or
aas
adc
xchg
clc
mov
movsb
jne
jno
sbb
cld
pusha
imul
rolb
lahf
jns
jecxz
arpl
or
pop
xchg
inc
add
adc
adc
nop
pop
add
dec
gs
popa
addr16
outsl
js
add
jns
stos
add
mov
push
inc
jno
fidivl
add
xchg
sub
push
leave
xrelease
mov
fmull
mov
dec
xchg
popa
jnp
and
inc
pop
pop
pop
sub
mull
or
outsl
mov
repz
pop
clc
push
sarl
cltd
sbb
adc
dec
or
loop
test
rcll
sbb
mull
sub
or
inc
adc
mov
xchg
mov
in
test
fldt
dec
shl
imul
sub
jns
sbb
jo
negl
push
nopl
imul
lret
shlb
icebp
fcompl
pop
std
adc
cmp
popf
insb
jmp
cmp
add
mov
and
jne
mov
mov
cmc
sub
push
pushf
pushf
lea
jmp
movl
call
call
setle
mov
pop
mov
bswap
mov
call
lea
call
stc
push
call
sbb
or
add
add
push
and
add
xchg
das
add
add
add
add
add
addb
add
mov
add
add
leave
or
add
add
push
mov
add
add
add
or
leave
repnz
rcl
or
fisubs
or
scas
orl
add
add
lea
jb
push
pushl
ret
pushf
movl
pusha
pushl
push
jmp
dec
je
push
fcomip
and
aam
std
dec
or
pop
pop
int
rcr
repz
mov
fnsave
push
and
cmp
jbe
add
insl
cmp
xor
pop
sbb
into
mov
mov
sti
ss
popa
insl
or
xor
cmp
add
sbbb
insb
lea
fisubs
sub
sbb
inc
push
xchg
add
cwtl
push
dec
mov
ret
rcll
mov
inc
push
cli
jl
dec
test
inc
test
jbe
std
adc
cmp
ret
stc
clc
stc
bt
cmpb
pusha
pushf
jmp
pop
mov
mov
pushl
pushf
mov
not
call
pushf
sub
mov
movb
jmp
dec
push
jne
in
test
push
push
mov
lock
test
mov
push
ret
xchg
orb
sub
mov
mov
push
cmp
outsl
iret
xor
jnp
subl
ficoml
cmp
bound
dec
aaa
scas
jg
aam
in
xor
cmp
inc
ret
mov
rclb
rcrb
dec
into
stc
xchg
or
int3
sbb
jp
call
arpl
jge
scas
jbe
sub
inc
bound
test
scas
lret
fldcw
ljmp
in
inc
lahf
pop
fcompl
mov
outsb
pop
push
mov
xchg
jl
inc
and
mov
lret
mov
fst
xor
sbb
std
sbb
cmp
and
negb
cmp
cmpsb
mov
push
outsb
mov
call
aad
repnz
stos
sbb
mov
inc
xchg
xchg
lods
add
cmp
shrl
loop
inc
loope
jg
pusha
or
mov
lret
fwait
push
push
mov
repz
in
dec
pusha
pop
stos
adc
push
outsb
or
jae
arpl
movsb
outsl
imul
cmc
sub
shrb
imull
gs
pushf
dec
outsb
pop
in
movsb
push
cmp
cld
out
sub
aam
lcall
cmp
lret
adc
mov
les
adc
das
sub
insl
call
jb
fucomp
ljmp
dec
sub
frstor
xchg
push
xor
insl
ljmp
out
fwait
xchg
mov
in
movsl
push
in
mov
bound
pushf
nop
xor
fs
adc
or
mov
mov
enter
dec
repnz
dec
sahf
or
dec
mov
jg
test
bnd
sub
insl
jne
addr16
gs
and
stc
cmc
addr16
xchg
sub
or
pop
pop
enter
pusha
mov
jg
ja
push
mov
lea
fiaddl
lds
aad
mul
xchg
cmp
mov
mov
or
cwtl
int
adc
push
jbe
mov
pusha
clc
pop
arpl
push
push
sub
xchg
loop
loopne
mov
sub
jb
xor
movsb
pusha
mov
pop
rcll
lods
xchg
sbb
addr16
notb
in
jae
or
pop
imul
xchg
mov
sarb
adc
or
ljmp
mov
or
movsb
lods
push
mov
adc
std
rolb
add
adc
mov
lahf
cmpsl
cwtl
push
jge
xchg
movsl
jl
imul
push
xchg
xchg
mov
cmovb
push
cmp
into
add
cmp
outsl
adc
push
push
arpl
pushf
dec
fmull
lds
jne
jne
jl
pop
ret
adc
stos
inc
call
popa
ret
xchg
ss
popa
into
jle
ds
nop
jmp
and
adc
adc
mov
in
and
outsl
arpl
add
inc
push
push
add
in
add
mov
daa
xlat
addr16
xor
movsb
pusha
mov
sarl
mov
mov
xchg
out
icebp
ret
xor
and
cld
inc
jbe
xchg
cs
scas
outsl
mov
sarl
popa
jb
push
sub
into
lahf
lock
flds
and
sbb
fdivrs
lahf
imul
cwtl
inc
xor
call
and
cmp
cmpsb
push
rcrl
mov
lret
aas
mov
push
xor
nop
imul
jno
mov
push
mov
mov
shlb
in
clc
popf
in
push
ljmp
inc
sbb
or
loope
xor
cmp
addl
mov
sbb
fdivl
jg
mov
int
mov
and
in
inc
mov
mov
dec
mov
or
inc
nop
insl
jmp
cmp
ds
lcall
mov
ficoms
stc
xchg
pop
mov
xor
shr
and
xlat
sub
stos
push
clc
mov
sbb
lcall
notb
les
rcl
sub
pop
ss
sbb
movb
cmpsl
cmp
mov
shlb
push
test
cmpl
sbb
fs
pop
les
mov
fisttps
iret
mov
mov
sbb
push
repnz
out
in
sahf
call
cmp
xchg
subb
mov
dec
stos
fsubl
fdivs
push
inc
sahf
lods
mov
push
out
push
and
mov
pop
std
pop
lods
pop
xchg
dec
and
test
adc
pop
leave
mov
mov
jmp
ret
or
cmpsl
xor
cmp
mov
js,pn
adc
mov
xchg
xchg
les
dec
stc
repz
jae
pop
dec
fsubp
jp
js
in
out
inc
jp
outsb
negb
sahf
add
and
or
fsubl
cwtl
out
or
repnz
push
push
add
jb
push
test
in
mov
pop
mov
or
mov
push
test
sahf
xchg
dec
mov
scas
or
jbe
rcrb
mov
sub
popa
jae
flds
loopne
inc
mov
push
cmp
and
dec
stos
hlt
sub
int
cmp
sbb
sbb
leave
fcoms
xchg
add
adc
shr
dec
shl
push
pop
fs
cmp
inc
jno
add
adc
xor
test
inc
jl
negb
push
pop
mov
icebp
cmp
pop
cs
push
repnz
les
movsb
xlat
sbb
cmp
pop
sub
push
inc
jge
jle
gs
dec
sahf
insb
jbe
sbb
cmc
lods
jmp
adc
cmp
xlat
xor
cmp
xchg
out
enter
cmp
xor
adc
mov
int3
or
sti
lods
add
jp
lahf
ds
cmp
add
mov
and
xchg
out
popa
xchg
sbb
mov
mov
jno
mov
hlt
psubb
sti
test
dec
xorb
ss
pop
pop
mov
outsb
fistps
sbb
cmp
jecxz
hlt
ret
into
aas
aas
jp
jbe
mov
daa
push
test
adc
mov
in
jnp
jnp
loopne
lcall
xor
mov
push
scas
outsb
icebp
jb
cli
adc
adc
daa
xor
lds
daa
lock
dec
xchg
mov
insl
mov
pop
add
jo
popf
cmp
sub
jbe
or
mov
cmp
addl
cmp
dec
jae
sub
pop
fists
adc
adc
cwtl
pusha
adc
notb
add
int
xchg
add
dec
cmpsb
fstpl
adc
ss
sbb
sbb
cmc
mov
mov
in
lods
hlt
movsl
mov
scas
lcall
in
mov
cmp
fldt
out
jo
icebp
mov
xchg
into
insl
out
add
dec
outsl
fmull
fs
jbe
out
test
push
and
inc
lea
pop
mov
mov
inc
push
mov
push
xchg
enter
inc
vpmaxsw
sbb
jbe
fdivrs
cli
dec
jecxz
push
loopne
ret
enter
and
ret
xchg
cld
sti
or
sbb
xchg
xor
into
aam
dec
call
out
sub
lahf
cmp
push
jbe
push
cmpsl
outsl
and
cmp
xor
pop
mov
mov
or
push
mov
push
pop
cmp
scas
mov
mov
sbb
pop
and
jne
cmpsb
sbb
cmp
xchg
pop
loopne
push
insl
xor
jb
int3
aam
addr16
dec
cmc
mov
or
addl
add
test
push
xchg
mov
xchg
mov
in
cmp
addr16
ja
mov
test
add
inc
scas
sub
mov
or
stos
push
mov
pop
sub
and
hlt
xor
cmp
push
jno
loopne
aam
dec
cld
mov
push
dec
test
fldcw
stos
cmpsl
inc
xchg
shrl
sahf
call
dec
es
stc
jbe
es
inc
js
cmpsl
js
sar
push
enter
frstor
xchg
xlat
ja
mov
test
clc
xor
ja
ja
hlt
sub
aaa
xlat
cmp
or
hlt
dec
sub
sbb
fistps
adc
add
or
xor
sub
mov
ds
adc
xchg
lahf
popa
int
aad
popa
rcrl
cmp
mov
jmp
or
pop
data16
push
aad
lea
jge
les
popf
add
adc
fnstsw
pop
test
loop
and
jp
loope
addr16
inc
inc
popf
jbe
mov
push
jno
pop
push
pusha
sti
ds
mov
dec
addr16
push
in
sub
cs
je
fstps
sbb
add
ja
jae
mov
icebp
or
imull
cwtl
aaa
xchg
lahf
jns
int
sub
sub
out
pop
outsb
sub
sbb
inc
nopl
mov
push
sbb
jg
loop
dec
das
pop
bound
stos
jmp
mov
std
adc
and
not
jmp
jmp
addr16
dec
popa
jo
fcompl
inc
fnstenv
or
addl
cmp
mov
mov
pop
mulb
mov
cli
notb
sub
xchg
pusha
test
pop
loope
popf
lret
cmp
push
add
loope
lods
mov
push
fwait
arpl
sbbl
lahf
sahf
cld
mov
mov
out
cld
cmp
jno
inc
ja
xchg
pusha
add
adc
pop
or
pusha
lea
ja
test
jl
add
pusha
jmp
jmp
pushf
lea
je
setle
jmp
call
pushl
popl
push
mov
mov
mov
pushl
ret
cmpb
push
pusha
movb
lea
jne
pushf
dec
mov
call
lea
jne
clc
daa
shl
cmc
sub
seto
mov
inc
add
not
mov
cmc
bt
bt
jmp
mov
lea
lea
pushl
jmp
sub
cmp
std
dec
sbb
inc
cmpb
shrb
cltd
mov
enter
mov
addr16
in
xchg
mov
dec
out
into
pop
jno
mov
mov
ja
jg
jg
es
rclb
rcrb
int3
repz
js
lds
lea
xor
imull
clc
push
pop
add
testb
fcomps
inc
enter
sbb
jbe
loopne
das
fsubrl
and
xchg
scas
test
fcompl
jmp
xchg
fisubl
cmc
mov
xchg
fs
addr16
hlt
loopne
cmp
cwtl
call
push
ret
jp
mov
jo
sbb
incb
adc
xchg
add
mov
inc
or
lcall
cs
out
pop
insb
test
dec
or
jne
insb
xchg
mov
inc
mov
std
std
adc
fwait
int3
add
mov
stc
je
test
add
jnp
xchg
push
cmp
xlat
mov
and
adc
inc
lds
inc
out
inc
out
inc
out
mov
mov
stos
mov
mov
add
test
mov
push
sbb
test
in
test
mov
adc
int3
mov
test
lods
push
test
cli
fsub
cltd
mov
xchg
or
pop
pushf
xchg
or
fstps
fwait
push
lret
popf
mov
lds
and
fdivrl
cmpsl
xlat
shll
nop
add
mov
psadbw
fwait
addr16
jo
or
ror
rorb
mov
nop
add
push
enter
in
jmp
into
rclb
imul
rcl
sbb
pop
in
es
int
repz
stos
leave
adc
cmpsl
push
mov
mov
adc
jmp
jne
leave
adc
imul
inc
mov
jne
cmpsb
adc
int
jae
in
adc
cmpsl
aad
push
ret
or
mov
ja
out
mov
and
dec
xlat
daa
scas
sub
mov
lret
mov
into
leave
mov
rcrl
rorl
and
ja
call
inc
mov
call
das
xor
pop
jb
add
aad
filds
loop
fcompl
mov
jge
rcr
stos
iret
xchg
pop
dec
repnz
frstor
fnsave
repnz
sub
out
insl
push
out
xor
in
out
jecxz
fstpl
outsl
outsb
rol
pop
repz
dec
sbb
out
dec
inc
inc
pusha
push
test
dec
cmc
adc
adc
push
clc
xor
cwtl
clc
fisubrs
sbb
xor
lods
mov
pop
cwtl
mov
xor
shr
in
int
mov
ret
jg
jg
sub
cwtl
xchg
push
sbb
mov
movb
popf
ret
add
in
jl
fs
mov
sub
stos
lret
int3
jo
js
je
cmp
arpl
push
adc
cmp
push
and
ja
adc
fidivrs
in
adc
adc
je
xor
mov
add
pusha
lea
ja
setge
not
jmp
pusha
lea
call
pusha
push
lea
jae
clc
bt
push
jmp
rcl
mov
iret
rcl
loope
rorl
mov
fcmovnbe
mov
loope
rorb
rorl
rcl
mov
fimull
in
int
aad
mov
aad
xlat
mov
aad
fmulp
fsubp
mov
sub
cmpb
clc
jp
add
iret
inc
test
sub
fcompl
inc
and
cmp
mov
loope
push
repnz
in
mov
jo
sub
dec
orl
jecxz
mov
jmp
or
mov
les
loop
add
stos
mov
rcl
pushl
in
cli
and
cs
jg
xchg
insb
jmp
sahf
mov
or
imul
enter
mov
shr
imul
cmp
rcrb
cwtl
or
aaa
jecxz
repz
mov
repnz
push
lea
pusha
pushl
movl
jmp
call
adc
push
lea
xchg
sahf
ds
cmp
add
rclb
inc
mov
loopne
rorl
sbb
iret
ja
mov
push
sub
and
scas
adc
pop
arpl
lcall
push
xor
adcl
pop
inc
pop
push
and
pop
mov
add
int
cmp
movsl
divb
mov
xchg
jmp
repnz
jle
jne
cmpsb
sbb
xlat
sub
aas
js
jecxz
fsts
mov
cmpsb
fldt
mov
fs
ror
in
mov
arpl
sbb
xchg
sub
pop
sub
and
cmp
ret
lods
and
negb
popa
fcmovb
fmull
gs
sbb
aam
pop
xchg
xbegin
movl
or
adc
call
test
out
xchg
xchg
push
sbb
sub
gs
in
dec
cmpsl
cmp
inc
sbb
sbb
mov
lock
sbb
fisubrl
add
pushl
aas
aad
jmp
ss
leave
into
nop
push
nop
mov
ret
xor
inc
mov
leave
stos
aad
or
add
jnp
push
mov
frstor
in
test
push
mov
push
std
adc
sti
insb
mov
add
xor
into
mov
mov
push
push
mov
push
lea
mov
mov
pushl
ret
push
pushf
lea
jb
call
pushf
lea
ja
rol
call
lea
jae
call
pushf
pushl
mov
lea
call
pushf
pushf
lea
jb
push
mov
pushf
pushl
ret
lea
jne
movsbw
push
mov
call
les
popf
and
pop
das
daa
in
inc
test
rorb
test
mov
jno
add
outsl
xchg
jae
into
jns
xor
inc
jo
adc
dec
cmpsb
mov
imul
adc
xor
gs
addb
xchg
pusha
fdivrp
lcall
mov
shlb
sub
mov
repz
adc
push
dec
sub
or
lock
adc
arpl
pusha
add
pop
gs
gs
pop
push
gs
pop
arpl
insl
outsl
outsb
add
xchg
add
not
inc
not
inc
sbb
ror
xchg
jmp
shld
shld
mov
bt
sub
pushf
pusha
call
mov
lea
jmp
adc
xchg
sbb
or
fmuls
push
dec
jne
cmp
and
cmc
mov
mov
inc
int3
mov
repnz
cmp
adc
dec
jae
sarl
aas
fstpl
les
out
pushf
sbb
jl
lds
ds
or
inc
daa
fnsave
lock
pop
cmp
dec
int
push
mov
mov
xchg
mov
scas
mov
sbb
out
pop
hlt
dec
jp
push
scas
bound
mov
es
out
and
cs
paddw
cmc
mov
insb
pushf
mov
mov
pusha
pushl
ret
push
cmc
mov
or
movb
pusha
jmp
jmp
pushf
or
pusha
pushf
pushf
lea
je
bt
pusha
stc
cmp
movb
pusha
lea
jne
pushf
pusha
inc
pusha
inc
pushf
pushl
push
movw
lea
jmp
mov
mov
add
jae
sub
pushf
repnz
pushf
pushl
mov
lea
jne
xor
bts
adc
bsr
mov
cmc
call
inc
jmp
jmp
pushf
inc
pushf
stc
xor
pusha
inc
call
push
mov
call
pushl
popl
pushf
mov
pushf
push
pushl
ret
pusha
mov
clc
cmc
call
movl
movl
pushl
mov
lea
jmp
pushf
pushf
pusha
pushf
lea
jae
cmp
test
cmp
cmc
cmp
push
push
movb
lea
jae
jmp
jmp
bswap
mov
pusha
cwtl
bswap
pushf
lea
jmp
clc
mov
and
cs
xor
imul
mov
sti
in
mov
lahf
adc
jb
out
fildl
jp
lock
adc
fnstenv
pop
pop
xlat
or
insl
push
add
lea
lock
sub
js
and
std
in
jb
sub
pop
lret
js
add
shl
into
inc
cld
pop
sbb
inc
cmc
pop
lea
jo
mov
cmpsb
dec
insb
loop
lret
test
fstps
and
push
sub
test
loope
xor
lods
std
cwtl
xchg
dec
pop
jle
cmp
fwait
out
jmp
cmpsb
mov
ret
push
out
xor
out
imul
bound
adcb
jbe
into
add
aad
xor
xorl
test
repz
pop
xor
mov
xor
mov
and
xchg
mov
push
xchg
xchg
fstpt
outsb
jb
rclb
sub
mov
lret
sub
add
mov
clc
test
shrl
clc
xchg
ljmp
gs
push
push
sahf
mov
jg
xchg
daa
fcmovu
fdivl
or
cwtl
pushf
mov
and
out
nop
aad
das
aas
xchg
jns
fcmovnu
inc
push
cwtl
mov
lret
test
pop
loop
pop
aaa
cmpsb
mov
stos
push
mov
cmpsb
jle
cmc
in
clc
push
jne
xchg
mov
std
adc
mov
pushl
jmp
pusha
push
lea
jbe
rcr
sbb
bts
movsbw
mov
clc
jo
add
jmp
movzwl
call
push
clc
add
sub
call
str
call
xor
xor
fidivl
leave
scas
adc
sub
and
enter
pop
mov
scas
mov
fcmovbe
jo
insl
mov
ljmp
push
popf
js
or
ss
pop
cmp
stc
push
push
andl
scas
adc
adc
jae
push
xchg
mov
int
mov
cwtl
mov
pop
sbb
stc
mov
pop
sti
pushl
into
gs
mov
clc
pop
leave
adc
lods
mov
cmpsl
jge
push
mov
imul
mov
xchg
cmp
push
ret
outsl
in
mov
dec
pushf
addb
ds
stos
and
hlt
rolb
inc
xchg
adc
sub
insb
inc
sar
rclb
loop
dec
push
mov
dec
pop
cmpl
lret
subb
cli
fists
dec
daa
cmpsb
jle
xorl
and
pusha
cmp
cmp
int
fimuls
std
adc
jbe
push
push
push
xchg
std
jg
mov
bound
cmp
dec
bound
jecxz
call
stc
out
push
push
or
in
loopne
mov
test
or
cmpb
jbe
rorb
fisubrs
push
repnz
ds
or
cmp
sub
adc
xor
sbb
xchg
inc
lds
outsb
dec
push
add
adc
or
int
ret
in
xlat
and
testl
call
sub
out
jg
inc
into
pop
addl
es
dec
cmpsl
and
mov
push
mov
inc
rolb
mov
sbb
int
mov
inc
aam
xchg
fistl
dec
or
mov
pop
pop
ja
in
sbb
sub
in
xor
faddl
push
insb
or
sbb
lods
shlb
xchg
mov
jns
lahf
in
fisubl
in
loopne
imul
shl
rclb
push
addl
add
sbb
daa
cmp
bsr
push
sub
or
mov
jmp
pusha
movw
push
movl
movb
pusha
pushl
mov
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lea
je
test
test
push
cmp
mov
push
lea
jne
call
sub
shl
cmc
lea
cmp
sub
add
neg
mov
cmp
mov
test
repnz
pushf
pushl
lea
jne
jmp
lea
ja
and
ror
sub
clc
lea
add
shrd
rcr
bsr
mov
mov
dec
push
rol
rcl
mov
pushf
repnz
push
lea
jne
mov
movb
jmp
call
clc
jmp
xchg
bswap
pop
setb
push
movl
jmp
lea
jne
lea
xadd
mov
btc
sub
not
mov
cmc
cmc
call
jmp
pusha
mov
stos
pushf
lea
jmp
repz
push
pushf
movl
jmp
rcl
mov
stc
pusha
add
call
call
ds
xor
adc
pop
cmp
sub
dec
or
aas
push
fnstenv
out
fmuls
aas
imul
sbb
ljmp
cs
cmp
mov
add
push
add
std
adc
push
pop
out
shr
push
add
sub
pushf
pusha
movb
lea
jmp
pushf
bt
pusha
cmp
sub
lea
pusha
or
pushf
movw
lea
je
mov
push
call
jmp
pusha
or
call
call
inc
scas
or
icebp
iret
mov
mov
cmp
ljmp
pop
pop
mov
mov
mov
fs
stc
cli
push
mov
jl
inc
mov
sbb
mov
adc
sub
into
mov
sti
arpl
cli
arpl
cltd
sub
or
je
pop
push
out
mov
aad
or
mov
fwait
rorl
lret
inc
xlat
rcrl
push
xchg
dec
mov
and
adc
jbe
test
and
stos
mov
jecxz
sahf
lock
mov
mov
mov
pushl
cmp
pushf
push
lea
ja
pushf
lea
jmp
lea
call
push
pushf
mov
mov
lea
jne
pusha
movzbl
setae
pushf
mov
push
mov
pushl
pushf
lea
jmp
call
push
or
pushf
pushl
lea
je
call
scas
idivb
inc
testl
or
jmp
cmp
fisubl
mov
cmp
lahf
imul
mov
and
inc
push
adc
or
cli
and
pop
test
out
scas
xchg
call
xor
dec
adc
and
shl
fs
bound
mov
or
fwait
push
lret
mov
sub
insl
jae
xorl
and
or
dec
push
insl
push
jl
adc
adc
xchg
aam
cmp
decl
test
add
xor
call
pusha
sub
pushl
push
call
mov
lea
jae
pusha
pusha
call
shl
daa
jo
mov
inc
pop
into
cmp
in
and
xor
add
les
fcmove
mov
leave
fs
mov
lods
jmp
sbb
movsb
dec
int
adc
lret
sbb
jae
push
sub
out
ret
and
movsb
aad
or
std
adc
inc
adc
loop
inc
mov
push
js
sub
mov
loop
les
fildl
cld
lock
push
mov
inc
sub
push
and
push
xor
ds
cmpsl
mov
sbb
fidivl
in
insb
pop
sahf
aam
xchg
adc
mov
mov
adc
jae
fsubs
jnp
stos
mov
stc
sti
addb
inc
jae
inc
mov
sub
ja
sbb
inc
mov
xchg
cmpsb
pop
sub
incb
push
dec
loopne
or
mov
lods
leave
and
xor
std
xchg
pop
popa
xor
nop
mov
dec
inc
mov
add
shll
in
mov
clc
movsl
or
ror
push
adc
push
subb
and
lret
fistpll
sub
pop
sahf
std
adc
cli
insl
je
fs
jne
pushf
push
setg
movsbw
mov
push
push
pushf
lea
jmp
and
stos
mov
pop
fs
add
pop
scas
orl
mov
add
pop
fidivl
fiadds
add
dec
shll
mulb
mov
pop
xor
push
in
in
hlt
and
das
addr16
mov
std
adc
in
add
das
loopne
std
stos
cmpsl
pop
fdivrs
jo
sub
test
mov
into
jae
loope
imul
jne
fiaddl
push
adc
push
xor
lcall
out
imull
lds
xchg
out
xchg
aad
fstpt
pop
cmp
leavew
sub
push
cmp
std
adc
icebp
imul
or
mov
mov
jmp
jne
mov
es
jb
mov
int3
adc
add
scas
loop
xchg
sbb
int
repz
add
or
subb
les
push
xor
mov
sar
hlt
xchg
adc
sbb
popf
and
pop
fisttpll
lret
iretw
pusha
jbe
or
mov
ds
push
jne
lcall
lcall
popa
cmpl
lret
jge
inc
mov
movsl
mov
andl
xor
xor
iret
idiv
adc
mov
call
pusha
push
lea
je
cmc
push
test
pusha
or
pushl
mov
call
bt
pushf
call
lea
ja
rcl
sub
mov
neg
add
btr
bsf
call
pusha
pusha
push
pushl
inc
movb
pushf
mov
pushf
lea
jmp
inc
push
scas
jo
xchg
ret
push
insl
jno
and
dec
cltd
adc
leave
popf
shll
or
bound
and
xchg
push
imulb
pushf
sub
push
fwait
jnp
inc
out
aam
js
add
adc
or
jb
mov
addr16
mov
inc
orb
in
dec
push
pop
sub
outsl
mov
jae
std
adc
rcll
and
lea
je
jmp
pushf
movl
jmp
lea
je
cmp
cmc
pusha
stc
cmp
lea
pushf
pusha
pushl
ret
test
clc
cmp
pushf
jmp
cli
pop
bound
adc
jne
add
pop
or
or
lret
mov
ljmp
jne
mov
aad
jl
sub
mov
clc
xor
mov
mov
ror
movsb
xor
and
or
nop
pusha
jg
sub
mov
int3
fcompl
jns
cmpsl
xor
flds
mov
shl
jb
inc
enter
dec
dec
and
mov
scas
int3
ret
stos
roll
mov
jne
les
xchg
pop
sbb
add
inc
fdivrl
and
xor
dec
mov
adc
push
push
jb
cmp
mov
add
aaa
xlat
jns
movsl
xor
sub
ss
cmc
aaa
sbb
sub
lock
les
jmp
pop
lods
nop
jmp
push
pop
roll
testl
pop
cs
add
or
ljmp
push
stos
es
push
shl
or
adc
shl
out
pushf
cmp
data16
rcr
rorl
outsl
stc
and
jge
inc
loop
dec
int
cmp
pop
sub
inc
jno
xchg
fsubrl
jl
pop
aam
jnp
jo
lock
test
push
hlt
cmpsl
out
std
adc
iret
adc
cwtl
sti
xchg
in
in
das
mov
push
fdivp
loope
mov
mov
into
sahf
call
inc
xor
fwait
push
pop
and
mov
pop
std
adc
xchg
rorb
push
movl
mov
pushf
mov
movb
pushl
popl
push
pushf
mov
pushl
ret
stos
cmp
jae
cltd
add
jmp
mov
out
test
cmp
mov
leave
cltd
jge
xorl
and
leave
mov
xchg
jbe
add
std
adc
fs
je
push
add
call
cmp
dec
push
imul
mov
pusha
lods
stos
lds
inc
jo
or
insb
push
push
xchg
inc
into
xchg
imul
dec
and
jge
cmp
jl
inc
imul
stc
insb
ja
mov
xor
jns
addr16
push
jns
inc
sar
cmp
mov
pushf
xor
arpl
inc
push
pop
ficompl
cmpl
xchg
ret
rorl
pop
das
adc
outsl
std
adc
push
inc
fisttpl
add
fwait
ss
ds
sbb
ja
enter
add
aad
ret
mov
xor
xchg
cmp
mov
push
in
fs
and
sub
jp
faddl
into
pop
sbb
subl
ret
lock
outsb
adc
or
dec
cmp
push
sbb
outsl
lea
cwtl
mov
mov
jmp
test
ret
jecxz
enter
adc
sub
adc
xchg
lcall
xchg
mov
cltd
xor
aad
cwtl
cli
sub
fwait
mov
pop
push
cmpsl
arpl
push
sbb
loop
subl
push
adcl
stos
leave
xor
test
cmp
aas
rolb
mov
ss
and
cmpb
es
pop
std
push
ret
clc
les
mov
or
or
adc
imul
pop
cmpb
pusha
call
test
jae
scas
mov
fadds
cltd
stos
repnz
sbb
inc
int
dec
inc
aad
call
mov
adc
and
out
xchg
jg
adc
lock
rorl
int3
cwtl
push
repz
xchg
fsubrs
push
arpl
mov
xor
shl
mov
and
aad
add
jb
jb
fs
cmc
inc
sbb
in
cltd
xorl
and
into
sarb
pop
jnp
imul
or
js
jmp
orl
xchg
pop
cmpsl
aam
xor
enter
mov
sub
inc
push
shl
arpl
insb
testl
test
add
lahf
push
xor
inc
orb
inc
sti
adc
dec
mov
mov
xchg
loopne
inc
xor
insb
stc
mov
out
inc
xor
imul
dec
lods
nop
mov
aam
das
in
scas
addr16
dec
cli
pop
lds
mov
and
cmp
jno
pop
lcall
sbb
jne
inc
fldl
cmp
out
repnz
punpckldq
pop
mov
jbe
int3
std
adc
mov
add
xchg
mov
call
popf
rdtsc
nop
pushf
movl
jmp
pushf
bt
jmp
shl
mov
btr
bsr
xor
mov
ror
pusha
and
add
test
shr
dec
shr
lea
mov
bt
sub
sbb
add
call
xchg
add
xchg
arpl
orl
jbe
cld
pop
adc
inc
add
mov
cmp
add
int
sub
clc
push
cmp
fstp
popa
insl
mov
int
out
push
jne
outsb
pop
fwait
icebp
cmp
mov
fwait
xchg
das
repz
inc
outsl
cmp
das
push
rorb
mov
cltd
movsl
imul
cltd
inc
push
jecxz
ljmp
jg
aad
mov
paddsw
jno
add
dec
mov
arpl
std
adc
sahf
mov
jle
cltd
add
pop
fwait
or
or
mov
das
incb
jno
add
pop
pop
dec
enter
cmpsb
or
aam
sub
je
addl
das
cli
dec
daa
adc
data16
sbb
aam
lods
imul
imul
leave
fldt
xchg
jge
repz
jno
push
dec
je
or
pop
testb
in
clc
std
adc
leave
cli
es
pop
dec
or
xchg
add
jecxz
mov
jmp
mov
lods
cltd
adcl
cmp
popa
push
rolb
dec
mov
sahf
cld
cld
mov
daa
ret
leave
jno
mov
icebp
in
mov
aad
mov
push
xchg
pop
sub
aad
push
sub
jne
cmpsb
outsl
and
notl
ficomps
mov
daa
push
ss
enter
cmp
rolb
arpl
aaa
jl
mov
fldl
xchg
dec
xchg
pop
cwtl
arpl
std
jae
mov
int
cmp
lcall
pop
jno
mov
nop
lds
mov
mov
pop
xchg
mov
xor
jge
mov
or
and
and
mov
lea
call
push
pushf
mov
pusha
lea
jmp
lea
jne
bts
movzbw
cmc
mov
bt
clc
sub
pushf
push
pusha
movb
lea
jmp
mov
pusha
pushf
lea
movb
jmp
lea
enter
mov
test
jns
pop
mov
lds
cmp
jo
sub
xlat
ljmp
and
cmpsl
clc
loopne
jb
inc
inc
shlb
bound
dec
std
adc
dec
push
jg
jmp
push
call
add
not
mov
bsr
mov
sub
shl
btr
pushf
mov
call
pop
xlat
ret
stos
mov
xor
data16
jle
mov
pop
inc
dec
rorb
add
notl
out
call
nop
ljmp
das
pop
inc
dec
test
repz
ret
mov
add
dec
popf
addr16
in
adc
idiv
pop
pop
mov
push
test
ret
mov
subl
cmp
add
loopne
repnz
inc
xlat
dec
xlat
adc
adc
into
aas
jp
dec
ficomps
and
xchg
rep
add
popa
cltd
xor
ljmp
test
repz
rcrb
ljmp
jle
scas
das
or
aad
and
jb
inc
popf
push
mov
xchg
adc
sti
test
inc
stos
cmc
dec
xor
mov
add
imul
xchg
outsl
cmp
pop
mov
cmp
pop
call
cmp
xor
fs
es
adc
adc
ja
idiv
mov
xchg
shrb
std
push
adc
jbe
push
push
sub
push
mov
xor
mov
in
test
pop
and
scas
jecxz
mov
sbb
loope
push
enter
and
pop
jg
mov
inc
insb
xor
mov
dec
and
sbb
add
mov
iret
push
or
mov
mov
cld
cmp
out
or
mov
std
adc
fdivl
cmp
sub
pop
lahf
jmp
pusha
inc
push
inc
pushf
not
stos
pushf
jmp
push
lea
jb
pushf
pusha
pushl
ret
bt
cmpb
jmp
jmp
xor
push
lea
call
pushf
call
sub
clc
cmp
pusha
jmp
pushf
push
pushf
pushf
movl
movb
jmp
or
pushf
movb
lea
je
clc
jmp
movb
adc
pusha
push
lea
jae
push
pushl
pusha
pushf
lea
jne
pushf
push
mov
pusha
stos
movb
pushf
pushf
lea
jmp
mov
into
or
sub
jne
jp
mov
pop
pop
js
push
cmp
xchg
aas
inc
and
dec
sbb
adc
out
mov
push
les
mov
in
cmpsl
div
mov
fmuls
fsub
arpl
mov
cmp
fdivrp
jb
pop
aam
ret
aam
loope
xchg
mov
test
and
push
sub
out
sub
cmc
out
jae
shrl
or
pop
mov
add
cmp
pop
ljmp
mov
cmc
test
pushl
lea
je
test
test
add
add
clc
call
stos
movb
lea
jmp
test
bt
stc
cmpb
pushf
call
xor
mov
cltd
jle
jnp
push
push
lock
sar
inc
cmp
fstpl
fistps
aas
in
fxch
jae
push
sbb
scas
mov
bound
loopne
psubq
xor
pop
cmpsb
js
ja
push
repz
addr16
and
aam
or
xchg
mov
or
aam
dec
hlt
repnz
adc
fucomp
out
sbb
jecxz
loop
outsl
fdivrl
mov
lahf
mov
sbb
lods
mov
popl
push
mov
cmpsl
in
and
fidivl
pop
cwtl
loop
or
daa
cmp
xchg
insl
mov
data16
ljmp
sbb
scas
mov
pop
lahf
jae
fmul
mov
mov
fs
jns
dec
mov
cwtl
insb
sbb
pop
in
outsl
cmp
clc
xor
or
out
sbb
in
std
adc
stos
mov
xor
in
scas
pop
popf
xor
cltd
icebp
icebp
mov
pusha
insb
inc
inc
jecxz
push
rcl
pushf
adc
fcmovnbe
test
js
mov
fisubrl
call
xor
xor
gs
lea
mov
scas
push
cmp
pop
inc
fucomip
pop
loop
inc
adc
xchg
test
adc
add
jo
cmpb
std
das
xor
xor
mov
sbb
ret
loopne
bound
or
lret
jno
iret
inc
out
cmp
popa
or
or
and
pop
test
jns
clc
dec
leave
cmp
in
nop
jecxz
push
mov
nop
shrl
sub
mov
subb
dec
xor
adc
xor
fwait
adc
adc
js
test
testb
cmc
or
out
pop
dec
ljmp
iret
aam
add
into
xor
insb
outsl
loopne
std
push
scas
nop
and
fiaddl
mov
mov
adc
ret
xor
ret
mov
stos
ja
dec
inc
mov
cmp
xchg
mov
or
std
adc
xor
sar
sub
mov
bt
pushl
cmp
pushf
call
jmp
push
lock
mov
inc
les
inc
mov
jbe
mov
push
mov
inc
mulb
xor
cld
jp
icebp
add
add
es
nop
mov
lcall
loop
out
pushf
sub
inc
or
pushf
int
xor
or
stos
enter
rclw
js
mov
mov
cmp
stos
jno
pop
insb
fmull
xchg
shl
cmpsb
or
in
call
adc
dec
xor
jmp
cmc
cmp
push
movsbw
bswap
jmp
mov
lea
je
rcr
adc
xor
not
movsbl
mov
xadd
mov
dec
inc
bsr
push
shr
not
inc
mov
mov
clc
or
call
push
movb
setp
mov
lea
lea
mov
pusha
movb
pushf
movl
movb
mov
mov
pusha
mov
push
pushl
ret
push
in
or
mov
add
mov
das
xchg
icebp
cmp
fmulp
and
popf
scas
loopne
cmpsb
ja
jb
stos
push
ds
mov
fistpll
mov
cs
pop
repnz
pop
rcrb
dec
xor
and
repz
gs
cmp
mov
xchg
mov
gs
mov
xchg
xchg
gs
addr16
xchg
mov
aas
stc
das
pusha
xor
lea
jmp
inc
negl
in
ret
std
adc
mov
imul
add
pusha
pushf
movb
lea
ja
inc
inc
inc
call
pushl
popl
pushf
mov
mov
pushl
ret
movb
lea
jbe
bts
adc
sub
shl
stc
mov
bswap
mov
shr
shld
btc
add
pusha
shr
pusha
rcl
lea
ja
mov
xor
movzbw
add
pushf
mov
movw
mov
pushf
lods
stc
pushf
call
pusha
pusha
movl
call
add
push
gs
outsb
push
gs
js
gs
imul
gs
cwtl
cmp
adc
push
cld
pop
xor
mov
pop
andb
pushf
sbbb
sub
inc
gs
sub
into
out
popa
pop
dec
in
mov
insl
push
mov
push
mov
fsts
in
jb
jne
sub
mov
pop
cmp
sbb
std
adc
daa
les
movb
mov
lea
jmp
pop
shrb
dec
mov
mov
out
adc
add
xor
jbe
outsb
cmp
repz
test
pop
sbb
lcall
and
subb
dec
cmp
jno
insb
pop
cs
push
mull
dec
popf
data16
push
icebp
sbb
addr16
lcall
pop
imul
cltd
add
mov
xor
adc
sbb
shll
filds
mulb
xor
or
cmp
adc
add
add
rolb
in
mov
or
mov
and
lea
aaa
das
push
cmp
call
call
shr
mov
shl
stc
neg
mov
push
bt
bt
push
repnz
movb
lea
jne
mov
movzbw
bswap
movb
pusha
jmp
push
or
insl
mov
adc
mov
jae
cmp
mov
addr16
stc
ret
mov
jle
lock
add
pop
fs
in
shr
repz
sbb
adc
arpl
hlt
sbb
xor
mov
out
test
pop
mov
mov
push
sbb
int
sub
or
sbb
xor
pop
std
adc
inc
push
sbb
jmp
mov
outsb
xchg
xchg
jne
jp
xchg
aad
pop
insl
rcl
mov
jae
sub
sbb
and
dec
jl
imul
mov
sbb
adc
ljmp
cmp
enter
add
punpckhbw
iret
lods
bnd
ljmp
xor
adc
adc
loop
push
divl
ret
sti
ret
xchg
sar
adc
enter
cmp
add
jg
jbe
and
xadd
bsf
movzbw
mov
xchg
not
rcl
btc
add
dec
bt
mov
ror
shl
shr
add
inc
shrd
bswap
pusha
movl
shl
not
mov
test
cmp
mov
jmp
neg
add
call
movl
inc
cmp
clc
clc
pushw
popfw
mov
jmp
call
mov
push
cmp
cmp
call
lea
jae
jmp
iret
xor
add
mov
int
movsl
lcall
jg
dec
call
pushf
cwtl
xchg
push
mov
inc
mulb
mov
sahf
outsl
mov
dec
cli
xor
dec
dec
bound
stos
je
mov
pop
fs
push
xchg
cwtl
lcall
movsl
pop
or
mov
sbb
stos
mov
or
cld
cmp
aam
aam
insl
xchg
push
pop
push
je
jmp
std
adc
outsl
out
add
inc
mov
add
or
dec
mov
add
adc
or
push
mov
add
jg
add
or
sbb
or
bound
add
add
add
and
or
push
or
dec
cmp
add
or
jb
or
arpl
add
or
jp
or
pop
adc
or
xorb
add
add
add
or
add
addl
add
lods
fisttps
lret
pushf
shr
mov
shl
pushl
jmp
movsbw
cmc
bsf
push
jmp
mov
movb
mov
call
add
pushl
pushl
cmp
jmp
mov
pusha
not
mov
call
pushf
lea
jae
test
cmp
jmp
loope
mov
xchg
jae
fildl
jg
mov
sub
mov
stos
xor
fistpll
popa
or
xlat
roll
push
sti
int
push
inc
imul
icebp
popa
mov
push
fidivrl
jle
arpl
or
xchg
test
mov
xchg
jnp
arpl
adc
lcall
adc
or
rolb
or
or
dec
mov
jg
mov
cmpsb
xor
shll
xchg
fisubrl
lea
or
jnp
jecxz
out
pushf
mov
jg
xor
and
enter
mov
jns
lahf
repnz
cmp
xlat
dec
mov
xor
mov
xchg
adc
add
je
aad
mov
dec
mov
dec
ror
mov
shrb
or
pop
inc
mov
es
dec
loop
iret
inc
xchg
int3
clc
jne
inc
push
stos
outsb
imul
push
adc
popf
pop
jecxz
sub
cltd
dec
shll
cltd
lret
out
das
push
cmp
xor
aas
lds
or
popa
add
in
icebp
daa
repnz
aad
dec
mov
aam
outsb
inc
fwait
mov
sub
push
cmpsb
mov
xorb
shlb
stos
add
rorb
jno
fs
cmp
mov
mov
sub
lret
frstor
cltd
xchg
push
mov
je
mov
outsb
mov
mov
or
jnp
jbe
outsb
xchg
or
mov
clc
dec
fldt
stos
mov
pop
mov
or
pop
loope
lods
sbbb
scas
cltd
bnd
cmp
hlt
mov
pop
jle
mov
mov
xor
das
xchg
rcr
outsb
mov
sti
pushw
clc
dec
jbe
dec
add
daa
xchg
lret
dec
xor
mov
sarl
jle
adc
insb
pushf
inc
ret
imul
outsb
mov
push
bound
fwait
cmp
ja
jle
mov
mov
pop
jl
fwait
jae
outsb
out
xchg
mov
arpl
jns
fwait
cmp
mov
and
int
xchg
inc
jle
outsl
and
ret
inc
popf
cli
mov
lahf
daa
adc
mov
add
pushf
addr16
mov
and
and
xor
pop
add
iret
xchg
mov
test
out
cmp
fstpl
xlat
dec
in
jge
adc
test
mov
iret
or
push
ret
cmpl
xor
mov
jns
inc
jno
xor
xchg
bound
mov
xchg
pop
mov
dec
sbb
fimuls
xorb
jg
dec
push
jb
push
mov
mov
cs
arpl
push
fcmovnb
jb
push
nop
fbstp
mov
rcrl
lods
mov
jp
loope
sub
notb
mov
cmpsl
inc
iret
push
cwtl
sub
jnp
pop
sti
mov
xchg
xchg
mov
cmpsl
mov
or
or
loop
imul
and
pop
mov
sahf
cld
sbbl
leave
mov
push
inc
mov
add
ss
xchg
sti
jnp
sbb
add
pusha
jmp
mov
mov
adc
or
push
ljmp
dec
cmp
jmp
cmp
add
sbb
fadd
in
jl
daa
lea
add
adc
and
inc
lds
and
pop
sbb
leave
fwait
sbb
pop
dec
xor
imul
dec
je
push
jb
sub
sbb
cmp
cmp
jp
push
push
xorl
movsl
and
loopne
xor
mov
dec
lods
repnz
adc
cmp
cmpb
pushf
lea
jne
call
call
jl
insl
mov
lret
or
in
rorl
dec
pushf
loop
cmp
test
mov
inc
adc
cmc
push
lods
js
and
out
or
imul
add
std
adc
fs
js
pushf
inc
inc
setae
call
add
dec
outsl
popa
fs
imul
add
stc
ds
fidivrl
es
arpl
and
mov
mov
mov
loope
fisttps
jne
mov
fimull
mov
mov
jne
ret
popa
or
jo
test
sub
push
mov
in
jae
sbb
inc
popf
mov
incl
pop
mov
js
sbb
jl
stos
mov
mov
push
scas
mov
test
adc
mov
std
pusha
lea
jae
or
bsr
mov
adc
and
mov
ror
mov
pushf
pushf
sub
stc
cmc
repnz
mov
pusha
jmp
mov
cmp
sub
push
mov
sti
mov
decl
add
imul
jnp
add
popa
pop
jnp
and
ret
adc
nop
mov
jmp
add
mov
das
mov
mov
js
lds
pop
mov
mov
xor
jnp
ds
inc
jnp
and
push
out
xor
lahf
fdivrp
xor
mov
cmp
sub
xchg
inc
scas
into
xchg
fdivrp
mov
out
arpl
pop
sub
mov
cmp
je
imul
or
sbb
scas
es
adc
mov
push
sbb
movsb
ds
sub
jno
mov
pop
scas
out
mov
xor
dec
jg
jmp
inc
mov
mov
xchg
jmp
mov
inc
pop
aas
xchg
in
lret
xorb
sbb
pop
jnp
filds
or
mov
into
cltd
mov
mov
add
jp
ja
dec
sub
aas
jnp
lret
stc
cmpsl
scas
mov
fnstcw
push
cltd
add
dec
push
pop
jnp
cmp
xchg
std
test
push
cmp
inc
js
cld
mov
mov
test
out
fsubs
mov
insl
or
test
inc
sti
xchg
xchg
pop
jmp
sbb
ja
jns
inc
xor
test
sti
xchg
fdivrl
inc
mov
inc
sub
jnp
scas
fwait
mov
mov
push
dec
dec
mov
add
lahf
sbb
mov
push
jecxz
sahf
xchg
cmc
mov
leave
movl
in
out
fwait
imul
mov
out
shr
scas
mov
xlat
mov
pop
mov
push
sahf
sahf
lret
mov
scas
pop
xlat
cmovae
mov
imul
scas
sbbl
cs
jmp
dec
and
in
test
iret
sub
mov
clc
jmp
sbb
ret
xlat
lret
lret
scas
in
mov
div
lret
inc
ljmp
in
hlt
clc
jl
int3
pop
in
xchg
call
xchg
dec
test
dec
mov
xchg
xchg
shrl
loope
xchg
dec
jmp
shr
cmc
push
xor
pop
fs
mov
loop
pop
out
outsl
test
loopne
mov
xor
cmp
xor
mov
adc
add
ljmp
repz
mov
sarl
test
lret
stos
rol
imul
sub
stos
dec
sbb
jle
mov
repnz
imul
ret
int3
aam
and
cs
inc
aad
outsb
ja
fdivrs
lret
xlat
enter
enter
jmp
lods
gs
imul
loope
test
jg
div
call
imul
mov
cmc
loop
mov
mov
loop
xchg
clc
dec
jnp
fadd
fcmovbe
leave
xchg
enter
ret
or
dec
push
and
and
mov
xor
and
inc
imul
adc
dec
cmpsb
lea
mov
cmp
mov
data16
hlt
outsl
iret
aaa
les
mov
aad
mov
fs
fwait
ret
cmp
sar
scas
lds
and
filds
xchg
mov
in
mov
ret
repnz
fldpi
in
jmp
lret
addr16
lea
xchg
sbb
cmp
jbe
xchg
push
daa
adc
xchg
shlb
push
sub
jo
xchg
xchg
inc
out
mov
jbe
scas
push
cmp
jnp
subb
movsb
int
imul
std
jne
jnp
loopne
or
mov
scas
xchg
dec
push
es
fidivrs
pop
shrl
adc
add
add
lahf
aad
sti
outsb
nop
out
clc
cmp
rcrb
lahf
sti
stos
call
mov
insl
shrb
rcr
icebp
repz
adc
mov
mull
xchg
jbe
clc
jl
dec
sbb
jmp
in
imul
dec
cmpl
scas
sahf
fwait
xchg
lahf
jl
mov
mov
mov
or
insl
mov
pop
jnp
imul
jns
xor
insl
pop
mov
fst
xchg
iret
cmpl
rorb
mov
mov
sbbl
rol
movsl
sbbb
movl
fwait
xchg
daa
mov
lret
pop
out
lcall
dec
dec
and
addb
dec
sub
movsl
xchg
pushl
ret
sub
ret
add
shrl
mov
and
sbb
into
adc
push
xchg
mull
sub
stos
into
fwait
cltd
mov
mov
adc
mov
jmp
fcmovne
into
mov
mov
std
xchg
add
mov
adc
pop
out
or
adc
xchg
test
xchg
shll
pop
mov
mov
sbb
fcmovnbe
imul
xlat
jbe
aas
mov
xchg
mov
cmpsl
paddsb
dec
add
xchg
test
inc
cmp
daa
jnp
pop
adc
jo
out
jnp
cmp
rorb
xor
bound
arpl
add
cli
addr16
or
and
out
jno
bound
mov
daa
ds
push
jnp
add
sarb
and
std
lods
test
jp
push
stc
pop
jnp
pop
cltd
dec
fmul
out
jnp
sub
cld
sub
insl
scas
pop
mov
dec
push
jnp
cmp
lock
outsb
mov
pop
xchg
mov
leave
xor
mov
ret
push
fistl
sbb
sub
push
jne
test
xchg
test
dec
ret
aas
push
and
xlat
push
mov
fwait
cmpsl
mov
test
outsl
out
ror
test
mov
xchg
add
add
mov
repz
fwait
xchg
out
mov
mov
in
mov
adc
jecxz
leave
mov
push
or
ret
sub
pop
popa
push
jno
xchg
orl
mov
push
ret
xchg
shll
adc
push
dec
xchg
push
cmpsl
popa
ret
ja
xchg
push
mov
xor
mov
orl
into
mull
cmp
rol
stos
add
nopl
cli
push
mov
movsl
mov
insl
daa
push
or
fdiv
sbb
in
cmpsl
popa
fiaddl
loope
mov
mov
cli
mov
sbbl
aam
lret
dec
icebp
xor
jae
pop
hlt
sarb
and
push
or
mov
dec
test
dec
fwait
push
xor
pop
jnp
and
cld
mov
das
sub
sarl
clc
imul
pop
sub
jnp
sbb
int
and
mov
push
jnp
cmp
push
add
mov
lea
lahf
lahf
push
rorl
add
jle
push
jnp
adc
add
jnp
jle
sbb
xor
ret
sbb
inc
xchg
test
test
sbb
push
jnp
sub
sub
cli
and
jnp
in
test
xor
xor
mov
insl
cmc
jle
cmpsb
gs
or
jnp
shlb
mov
imul
mov
ljmp
pop
aam
push
xchg
sbb
repnz
mov
fisttpl
imul
lock
imul
pusha
push
fadd
dec
in
das
jnp
pushf
inc
int
shlb
jnp
xor
adc
dec
mov
sub
fildl
ja
shr
stos
mov
call
sub
repnz
test
popa
gs
scas
into
fistps
adc
pushf
xchg
jge
imul
jnp
repz
ret
bound
push
jge
adc
xchg
or
scas
jmp
iret
cltd
mov
aaa
das
inc
jmp
sti
cmp
jns
inc
pop
sti
cli
xor
cld
xchg
jnp
cs
test
ja
repz
in
cli
adc
dec
sarl
pushf
sub
jge
cmp
mov
mov
mov
jae
mov
pushf
push
mov
icebp
std
jnp
rorb
jecxz
mov
xchg
div
xor
inc
cli
cwtl
jnp
in
mov
mov
cmp
stos
dec
fdiv
stos
jnp
les
mov
pop
jnp
std
pop
test
add
aad
mov
sarl
clc
pop
test
xor
cmp
push
imulb
sarl
inc
nop
xchg
icebp
mov
pop
mov
jnp
enter
sub
leave
inc
pop
jge
xlat
sub
or
loopne
jnp
movsl
fidivrs
cmc
and
xchg
mov
mov
xchg
pusha
or
dec
mov
cltd
sub
iret
cli
dec
in
loopne
mov
jnp
cld
and
stos
jl
mov
sub
aas
in
adc
jnp
fsubrl
fistpll
daa
mov
adc
xor
jnp
jo
in
cmpsw
mov
fistpll
jle
inc
popa
js
or
addb
sti
call
mov
das
clc
hlt
adc
cli
ja
mov
testb
inc
cwtl
mov
jnp
xchg
pop
mov
scas
jnp
jmp
pop
stc
mov
repnz
ret
sbb
cli
add
out
push
pop
pop
dec
sub
xchg
mov
adc
dec
cmpl
dec
jo
sub
jl
push
int3
test
fisttps
fnstcw
sbb
adc
or
pop
dec
test
add
add
test
jecxz
test
dec
mov
testl
movsb
data16
xor
cmp
into
jnp
inc
dec
test
jnp
int3
dec
jns
loop
xchg
hlt
push
jnp
mov
cs
in
dec
and
sbb
push
pop
gs
aad
flds
jnp,pn
arpl
je
pusha
pop
jnp
daa
push
jns
ja
push
dec
dec
adc
bound
aaa
xchg
lahf
xor
mov
xchg
add
add
hlt
clc
xchg
inc
lods
push
or
cmp
sbb
mov
outsl
mov
mov
lret
or
adc
push
jnp
bound
idivl
adc
ret
xor
jnp
mov
mov
stc
std
xchg
cwtl
rcrb
jecxz
sti
lahf
add
repnz
mov
pop
mov
jg
mov
cmp
scas
mov
leave
mov
lret
mov
sub
jnp
push
into
dec
test
loop
test
dec
or
in
pop
jnp
or
jecxz
lcall
add
jge
sti
pusha
int
mov
pop
test
inc
insl
mov
cmp
inc
repnz
jnp
xor
or
inc
jg
test
mov
xchg
push
mov
enter
jno
pop
in
lahf
xchg
sub
sbb
push
inc
jnp
and
int3
nop
loope
mov
push
mov
push
inc
add
jnp
adc
es
jb
cli
jnp
out
xchg
mov
jnp
cmp
shlb
cltd
fiaddl
popa
movb
xlat
pop
fwait
nop
pop
fbld
xchg
sbb
cmp
dec
lea
push
xor
stc
xor
les
pusha
mov
mov
jne
or
gs
xchg
jnp
xor
xor
test
push
fsubrs
and
popf
mov
outsb
and
lea
sub
push
bound
mov
pop
aaa
or
mov
adc
inc
fwait
incl
jnp
fdivs
es
popl
jae
mov
jnp
dec
dec
mov
pushf
sbb
pop
cmp
add
ljmp
adc
movsb
popa
jnp
in
icebp
pop
fimuls
jnp
adc
sbb
inc
mov
cmp
xchg
fdivrl
pop
adcb
and
sbb
jl
jae
addr16
fwait
ud1
pop
add
daa
mov
jnp
adc
sahf
add
push
ret
gs
sub
jnp
mov
and
sbb
mov
cmp
xorl
lret
lea
sbb
push
mov
jnp
ss
lcall
bnd
push
test
push
test
mov
lahf
adc
daa
jnp
push
mov
scas
dec
clc
cmp
mov
aas
push
sti
add
mov
fsubp
and
push
mov
cmc
sub
pop
movsb
pop
jnp
rclb
pop
inc
cmpsb
loopne
cmp
lods
add
mov
ret
outsl
repnz
mov
daa
fisttpl
add
jnp
imulb
mov
lcall
enter
les
mov
xchg
imul
mov
imul
call
test
idivb
or
jnp
sahf
ficoml
jnp
and
cltd
mov
xchg
sbb
outsl
mov
shlb
ljmp
pop
lds
cmc
pop
andb
push
mov
mov
jnp
and
mov
or
fwait
cmp
adc
mov
test
test
loop
mov
aas
test
pop
fbld
loope
sub
mov
les
call
jno
rorb
inc
mov
adc
add
iret
scas
movsl
lahf
fwait
mov
jnp
cs
push
add
ds
or
in
inc
jnp
addr16
pop
cmp
sub
and
xchg
repz
lahf
sub
jnp
stc
jmp
int
stos
push
lods
mov
lahf
jmp
test
inc
out
fs
in
mov
xchg
jmp
jno
jnp
mov
movsb
insl
pop
and
imul
insb
leave
enter
inc
cmp
outsl
cmp
jnp
nop
add
xor
add
lock
arpl
shlb
cli
mov
fimull
and
jae
jnp
inc
popa
jo
adc
sbb
fsqrt
in
fs
mov
sahf
inc
push
gs
in
jmp
jnp
notb
add
test
cmpsl
sbb
imul
and
inc
jnp
sbb
inc
mov
jnp
fnsave
cs
test
loop
sub
add
test
test
test
jmp
popf
cli
std
jno
jnp
inc
push
mov
jnp
lret
aad
jecxz
jg
xchg
mov
jl
jnp
mov
or
and
adc
mov
jnp
imul
and
mov
stos
test
jnp
leave
add
dec
push
xorb
icebp
cmp
xchg
cmp
add
lahf
jg
mov
mov
out
jnp
adc
add
fwait
push
mov
jnp
xchg
mov
push
mov
in
jg
ret
jbe
jnp
in
dec
lcall
xchg
cli
in
clc
fisubl
mov
cmp
jp
jno
adc
imul
out
imul
mov
je
cmp
popf
subb
mov
fs
in
pusha
dec
jnp
mov
jmp
lods
es
cmpsl
cmp
jnp
sbb
ljmp
insb
adc
sub
lock
xor
mov
pop
scas
out
mov
cli
pop
adc
sub
out
or
sti
loopne
mov
movsb
add
mov
mov
fisubrl
xchg
xor
jae
dec
clc
jecxz
out
pop
add
push
pushfw
iret
pop
je
call
cmp
lcall
ret
test
dec
insl
mov
jp
xchg
jg
cmp
movsl
or
dec
inc
sti
clc
sub
mov
jnp
ljmp
jnp
in
jns
outsb
push
xchg
loop
add
and
dec
jnp
sbb
les
jnp
xchg
ds
inc
cmp
pop
pop
jae
scas
xchg
and
adc
xor
sub
jae
cmp
xchg
adc
ja
pushf
test
es
add
xchg
dec
mov
jmp
fistps
cmp
mov
inc
lahf
jns
ss
sbb
into
sbb
jnp
insb
mov
mov
xor
movsl
push
test
mov
lea
lods
aad
mov
jnp
sarl
jnp
cli
or
xor
mov
gs
xchg
jle
jne
xchg
fiadds
push
sti
mov
ret
enter
es
fildl
fistl
mov
sub
cltd
or
jle
sub
lret
pop
or
pop
push
les
imul
push
push
movsb
insb
aam
cld
ja
mov
ret
pop
sub
xor
repz
into
jg
aad
jns
xchg
push
dec
push
inc
lods
imul
xchg
jnp
and
dec
inc
xor
dec
cmc
std
int
sub
jnp
mov
popa
push
jnp
xor
sbb
ds
fcmovne
xchg
push
movsb
mov
xor
jnp
xchg
ret
out
sbb
daa
adc
jnp
dec
scas
insb
addr16
mov
jae
sbb
test
imul
push
jg
push
les
ja
ret
jnp
out
adc
mov
inc
jl
fcmovu
cmpb
test
repnz
mov
xchg
sbb
cmc
iret
jg
jnp
sbb
and
repz
test
cld
jnp
stc
outsb
fs
dec
insl
jnp
out
add
dec
jo
jnp
aas
stc
mov
pop
mov
or
mov
dec
jnp
push
repnz
rcrl
jmp
and
sti
add
xor
call
jmp
pushf
lea
call
push
movw
jmp
add
add
jmp
iret
cmp
sub
sbb
js
or
clc
fcoms
jno
out
pop
jo
pop
add
out
cmc
add
pusha
jns
cmp
mov
xchg
sbb
push
fs
dec
add
cmc
dec
fcoml
jns
sahf
lds
jo
inc
xchg
mov
xlat
adc
jne
cli
cld
jmp
xor
loop
xlat
or
in
and
imul
sub
mov
cmc
jg
push
cmp
sarb
mov
jl
push
mov
pop
jl
sarl
fadds
lods
movsl
cmp
in
adc
clc
mov
inc
aas
pop
popf
push
cmp
xchg
rolb
packssdw
les
mov
arpl
sbb
fidivrl
in
out
mov
test
mov
and
dec
cmp
jle
ss
sub
divl
push
ret
shrl
sbb
in
scas
loopne
and
jns
or
into
sub
outsb
out
aad
in
mov
lahf
cltd
sbb
sbb
or
inc
sbb
lcall
and
adc
sub
dec
aas
pusha
mov
imul
test
idivb
movsl
xchg
add
or
mov
fisttpll
adc
mov
imul
sbb
fnstsw
js
int3
test
or
ret
in
sub
enter
lods
jns
inc
jns
gs
pop
jnp
repz
add
daa
push
push
out
scas
push
push
fsubrl
mov
jo,pn
ss
xchg
sbb
sti
dec
lock
cld
inc
mov
fadds
stc
push
mov
repz
insb
pop
fwait
mov
lret
pushf
shlb
outsl
add
xchg
mov
xchg
std
adc
push
popf
xchg
xchg
jno
test
lcall
pop
popf
lods
jg
outsb
stos
fbstp
stos
in
cmpb
push
and
test
js
ret
sti
pop
pop
mov
test
mov
std
adc
jno
test
mov
lea
je
cmp
pushf
add
cmp
test
pusha
jmp
lods
lock
repz
pop
mov
out
xchg
add
mov
les
comiss
jb
add
cmpsb
sbb
jge
and
jbe
jno
or
mov
cmp
add
nop
add
add
in
jl
test
push
loop
scas
xchg
xchg
mov
push
mov
mov
ja
adc
decl
xlat
mov
xchg
ret
aad
xchg
cmc
fs
add
mov
test
pop
pop
dec
push
loopne
test
xor
lea
push
cmp
fbstp
out
addb
xchg
enter
inc
push
cmp
mov
cmp
lcall
addb
addr16
sub
lahf
mov
rol
addl
into
xchg
adc
xrelease
add
loopne
dec
jnp
bound
aas
dec
jge
and
sub
pop
arpl
push
and
dec
xor
and
aad
je
add
inc
and
mov
push
push
pushf
pushl
ret
movl
pusha
mov
pushl
movb
lea
jmp
out
xor
loopne
pusha
pop
ret
push
std
mov
fldcw
adcl
sbb
xchg
adc
mov
imul
test
xor
cmp
cltd
xchg
popa
push
jmp
cmp
orl
js
sbb
jle
add
cs
cmc
sbbl
sub
repz
cwtl
xor
or
or
stc
mov
xchg
adc
adc
stos
not
not
mov
pushl
mov
lea
jmp
pushf
lea
jne
call
call
jmp
push
lea
call
jmp
mov
cmp
push
call
pop
inc
inc
or
shlb
sbb
cmp
push
hlt
not
mov
outsb
data16
push
mov
fdecstp
fs
aam
jge
sahf
js
stos
dec
daa
add
xchg
and
stos
jb
adc
ljmp
iret
pop
fs
in
jb
sub
inc
inc
jno
jb
pop
sbb
mov
loop
jnp
cmpsl
loopne
sbb
pandn
jbe
daa
test
push
and
arpl
mov
mov
push
std
adc
mov
inc
and
mov
setnp
setno
movl
mov
lea
call
push
stc
clc
sub
call
jmp
lea
jae
jmp
movb
lea
jne
inc
bsf
mov
call
movb
jne
cwtl
bswap
push
pusha
pop
pusha
lea
mov
movl
jmp
jmp
or
lret
cmp
loope
xor
and
decl
insb
mov
push
push
shl
push
adc
cmp
in
mov
pop
lahf
mov
inc
in
subl
push
inc
test
adc
adc
scas
bts
ror
mov
call
jmp
adc
push
call
push
pushf
movl
jmp
pushl
lea
ja
pushf
inc
setl
seta
setbe
setne
inc
shl
sub
add
xchg
adc
sub
mov
stc
mov
clc
test
test
bt
mov
shl
rol
rcr
dec
mov
call
dec
cmp
mov
pusha
bt
bt
and
cmc
pusha
add
add
pusha
pusha
add
pushf
call
movb
pushl
popl
pushf
push
push
pushl
pushl
ret
lea
je
bt
cmc
bt
add
jmp
mov
movw
lea
jmp
cmp
pusha
cmp
pushf
movw
movl
lea
jae
inc
add
mov
shl
bswap
sub
mov
or
shl
and
shl
mov
pushf
cmc
test
pusha
sub
cmc
repnz
pushf
movb
call
pushf
mov
lea
je
bt
pusha
bt
cmp
pusha
pushf
lea
je
pusha
pushf
pusha
pushf
lea
jmp
movb
jmp
movb
jmp
pushf
jmp
lea
ja
pusha
call
aam
mov
sub
stos
mov
cmp
aas
sti
cmp
test
push
mov
aas
cmp
fs
nop
arpl
mov
lret
loope
lock
cmpsb
lret
inc
repz
rcr
in
and
ret
inc
sub
imul
andb
push
leave
sub
add
mov
std
adc
xchg
sarb
add
hlt
loope
dec
inc
pop
test
int3
mov
push
jecxz
xchg
xor
shl
dec
rcl
push
pushw
rcrb
xchg
sti
test
cmp
or
mov
fisttpl
movsb
mov
pushf
cmp
shlb
roll
sub
jne
pop
popa
xor
lods
and
inc
adc
and
icebp
movsl
cmp
ljmp
cmp
arpl
add
test
stc
bt
stc
pushf
add
push
pushl
push
lea
jmp
jno
push
movw
lea
jb
test
cmpb
pushf
mov
push
pusha
lea
jne
bt
bsr
bsf
rcl
mov
bt
jmp
jmp
jmp
push
pusha
movl
push
movb
movb
lea
jmp
lea
push
jl
sub
xchg
or
xchg
pop
add
pushf
cmp
xchg
or
inc
shr
dec
subl
jbe
mov
jecxz
testl
mov
jmp
or
insl
push
jb
or
mov
ret
adc
mov
mov
mov
jge
rorl
sub
xor
adc
or
mov
std
je
xor
mov
out
in
js
mov
and
fnstcw
xchg
push
add
dec
cld
outsb
dec
inc
inc
fucomi
mov
xchg
es
or
adc
leave
lods
xor
imul
fcomp
adc
or
add
pusha
shrb
mov
sbb
pop
pop
push
es
jns
add
xor
push
rcrl
mov
sti
mov
add
inc
les
sub
in
push
mov
outsb
ss
xor
mov
clc
ds
std
adc
inc
pop
das
cs
cltd
aaa
lods
loopne
pop
mov
ljmp
sbb
lds
loop
xchg
adc
jb
inc
insb
iret
mov
mov
dec
out
dec
add
ljmp
lret
add
loop
xchg
jnp
xchg
pop
fsts
and
sub
sbb
call
cmpsb
cmc
movb
cmp
call
ja
in
cld
inc
mov
push
dec
fucomi
pop
in
fsubs
adc
xchg
and
aas
stos
jmp
mov
jnp
push
mov
add
jo
dec
pusha
ret
jno
sbb
imul
dec
push
jge
jo
mov
pop
dec
or
addr16
out
push
cmp
je
push
outsl
outsb
outsb
push
xor
lds
cs
adc
add
add
faddl
jmp
xchg
call
mov
jg
push
jle
dec
xor
stos
mov
lds
sbb
jae
jno
mov
cli
mov
cmp
int3
push
xchg
push
pop
fldcw
inc
and
mov
pop
nop
ret
inc
fwait
mov
jecxz
adc
popa
jmp
jbe
stos
xchg
ja
aam
bound
jmp
stc
mov
and
pusha
fdivrp
jmp
addb
jg
mov
mov
cwtl
pop
lea
jmp
bt
pusha
cmc
sub
push
repnz
call
jmp
mov
cs
jo
cli
cmp
shlb
jnp
dec
dec
jge
lods
xchg
pop
adc
dec
dec
mov
negl
jl
cmpsb
ljmp
jmp
mov
out
push
jno
std
adc
rcll
fdivr
decl
add
mov
mov
test
test
jmp
xadd
shld
mov
or
btr
add
or
mov
shr
neg
mov
pusha
pusha
stc
test
movw
mov
movb
lea
je
and
bsr
add
clc
bsr
mov
pusha
call
dec
xor
cltd
cmp
xchg
adc
xor
lret
fcomps
int
jl
xchg
inc
add
add
and
xor
jbe
mov
pop
daa
and
std
repz
mov
pop
std
adc
es
faddp
inc
and
or
movl
and
lea
jmp
seta
pusha
call
pusha
movw
lea
jae
mov
setl
inc
mov
inc
call
call
jmp
mov
lea
jne
btr
bsf
shrd
and
mov
jmp
int3
popf
call
call
push
push
inc
push
xor
cs
insb
add
inc
and
jno
add
pushf
movb
pushf
lea
jmp
mov
not
push
push
movb
push
inc
cmc
cmp
movsbw
movsbl
lea
movw
lahf
pop
mov
jmp
xchg
push
push
call
call
mov
inc
inc
pushf
popa
inc
pop
jmp
divb
cmpsb
cltd
jae
mov
sub
sub
and
test
adc
push
into
and
push
pop
pop
in
mov
pusha
mov
dec
mov
jmp
iret
xor
sub
rorl
int
sub
repz
xor
mov
les
mov
stos
loop
icebp
bound
inc
inc
sbb
or
and
fldt
xchg
pop
sbb
push
inc
mov
cmpsb
mov
push
movl
call
jmp
push
lea
pop
mov
movl
pushf
lea
ja
pushf
call
jmp
test
cmp
cmp
movw
pushf
lea
ja
add
xor
sub
shl
bswap
add
sbb
mov
xor
mov
test
repnz
call
call
jmp
sti
inc
int
xchg
scas
scas
lcall
lret
jg
shlb
das
cld
ljmp
push
xchg
mov
bound
cli
lods
lcall
cmp
inc
orb
icebp
loopne
mov
mov
lock
inc
push
shr
orb
pop
sub
xchg
shll
lcall
push
and
mov
lahf
scas
pop
xchg
daa
js
jl
or
xchg
stc
push
std
adc
jg
loope
gs
mov
aas
pop
sub
loopne
dec
mov
ljmp
sub
and
pop
cmp
cmc
int
cvttps2pi
in
fsubrs
not
cmp
cs
inc
cld
push
nop
outsb
add
movsl
popa
mov
fcoml
fisubrl
dec
push
inc
push
enter
jbe
cmp
ret
adc
inc
ret
clc
std
adc
mov
sti
jmp
loopne
bt
sub
push
inc
lea
pusha
lea
call
jmp
lea
jne
dec
stc
jle
shr
mov
call
xlat
ficoml
mov
shll
lds
sub
rclb
lret
daa
jp
sahf
jne
mov
xchg
mov
stos
cmp
push
loope
lds
addr16
and
push
enter
and
daa
fwait
test
insb
mov
mov
mov
pushf
push
ret
aad
add
push
test
ret
add
mov
mov
and
ljmp
xlat
sbb
xchg
mov
xor
scas
pop
ret
ja
std
adc
mov
stc
sub
cmp
shl
test
rcr
push
daa
cwtl
push
not
aas
push
adc
movsbl
push
sar
mov
cmp
test
test
jbe
jmp
lea
je
and
push
adc
xor
neg
rcl
rcl
mov
setl
cmc
bsr
mov
lea
not
shl
shr
lea
add
mov
test
cmc
or
pusha
lea
je
pushf
seta
rol
btc
add
dec
shrd
sub
stc
bsf
shr
btr
shl
mov
sbb
bsf
add
shrd
movzbw
push
add
lea
mov
bts
mov
pusha
call
shr
jmp
call
push
ja
int3
stc
adc
push
lods
jge
and
sub
dec
shrl
push
out
mov
xchg
outsl
orl
aad
and
movsl
mov
or
xchg
fstps
push
cs
inc
mov
shlb
xchg
jb
xor
in
inc
icebp
loope
pop
mov
dec
pop
xchg
or
mov
xchg
scas
lahf
mov
sbb
xor
pop
jg
aam
xorl
and
loop
mov
xchg
aam
adc
imul
pop
push
jno
cmp
xor
inc
es
push
in
mov
inc
and
mov
in
jnp
das
and
lret
ljmp
cmp
dec
jle
in
mov
stc
add
stos
loope,pt
inc
cmp
insb
sbb
jns
sar
js
test
fxch
and
cld
cmp
mov
daa
xchg
xchg
ficompl
stos
addr16
xorb
sub
enter
ja
sahf
xlat
and
push
test
xchg
lock
cld
mov
cmp
add
xor
imul
cs
inc
int3
stc
sub
pop
mov
outsb
rol
loope
add
pusha
sub
mov
lods
push
js
and
pop
adc
aas
and
out
out
or
jbe
dec
inc
xchg
std
mov
incb
mov
sahf
jecxz
ja
xor
or
ljmp
sbb
out
push
ret
std
adc
push
inc
cltd
cli
cmp
cwtl
repz
pop
adc
mov
fstl
lods
or
out
loopne
out
rcrl
xor
sbb
mov
nop
push
sub
pop
icebp
sub
sbb
imul
dec
adc
inc
push
jmp
cmp
cltd
je
mov
cwtl
add
mov
loope
lds
sbb
or
push
test
popf
fdivrp
adc
pushf
fcompl
cmpsl
sub
inc
inc
and
outsb
lret
insl
sbb
in
in
add
rorl
mov
or
or
ret
faddp
out
dec
imul
and
jmp
mov
xchg
or
jnp
cltd
sub
mov
rcrb
std
adc
add
lock
std
std
mov
push
mov
ret
jae
inc
pusha
into
iret
dec
jge
bound
mov
pop
and
xor
in
sub
jge
or
and
dec
test
push
into
add
jecxz
and
test
or
sub
call
xchg
adc
xchg
push
push
mov
mov
pusha
push
jnp
enter
aam
lea
jbe
dec
sub
sbb
sar
jmp
cmp
repnz
pop
pop
test
fcmove
cmp
leave
mov
call
jo
popf
mov
pop
cwtl
sbb
lods
and
inc
push
test
mov
in
enter
xchg
sbb
xchg
imul
lods
push
cwtl
xlat
pop
inc
mov
out
into
or
leave
adc
xor
jo
lahf
out
mov
scas
movsl
insl
cmpsb
std
adc
fs
pushf
lea
call
jmp
mov
js
or
pop
or
sbbl
scas
rcl
jne
and
lahf
jecxz
and
mov
mov
leave
adc
orb
outsb
fwait
neg
outsl
mov
testl
addr16
dec
dec
cmp
les
xchg
fmuls
shll
and
xor
dec
out
sbb
adcl
or
mov
mov
xchg
icebp
and
and
aaa
xorl
and
sarl
gs
push
xchg
std
adc
push
int3
xor
mov
add
inc
dec
sub
repnz
pop
fmul
mov
mov
loop
fs
sbb
xor
mov
lret
push
int
idivl
in
push
mov
or
cmc
xchg
insb
cli
mov
mov
pop
fstp
mov
fsubrl
cmc
and
movsb
std
adc
xchg
hlt
push
popf
movb
or
pop
sub
cmp
int3
cmp
and
xor
mov
dec
xchg
push
pop
dec
pop
test
aad
pop
pop
lret
adc
ficomps
int
test
pop
fwait
popf
sahf
imul
push
stos
xorl
push
mov
push
lods
test
xchg
and
lret
cmp
mov
loopne
push
mov
sbb
jbe
sbb
xlat
loop
out
xchg
daa
pop
push
pop
jo
sbb
cs
dec
sub
and
stc
jmp
lea
jb
cmc
cmc
cmc
cmpb
jmp
pushf
pushf
movl
call
lea
je
rcl
add
or
sub
bts
pusha
and
bt
shr
sbb
bts
cmc
mov
shld
dec
shl
add
btr
bt
neg
add
shld
bts
btr
sbb
mov
call
xor
cmp
js
jecxz
mov
nop
lcallw
inc
and
jle
add
add
and
and
adc
and
xor
fisubrl
fiaddl
mov
sti
sub
jp
adc
out
mov
add
mov
sbb
les
lahf
xchg
jns
repnz
xchg
mov
and
adc
das
int3
insl
sbb
adc
pop
mov
scas
inc
stos
into
ds
packuswb
and
hlt
or
je
push
insl
adcl
int
das
fcoms
xor
shl
addr16
je
jbe
into
xchg
andb
jmp
lods
and
incl
fcmovb
xor
insl
lods
mov
jbe
pop
xchg
std
adc
movsl
popa
loope
mov
push
lods
fisttps
mov
mov
inc
xor
stos
sub
pop
jo
ja
out
sub
xchg
xor
mov
mov
lods
in
lods
mov
arpl
fsubs
jle
pop
jnp
jmp
mov
out
rorb
ret
ljmp
dec
jae
pop
cmpb
adc
pop
les
icebp
ds
nop
cltd
push
xacquire
or
aaa
std
adc
push
out
lea
jae
bt
cmp
jmp
pushf
shr
add
mov
call
add
call
mov
inc
hlt
and
mov
inc
jg
mov
xchg
lock
mov
xchg
pop
into
add
test
sbb
out
push
shr
je
adc
movsb
gs
adc
sub
icebp
add
imul
adc
xchg
inc
mov
clc
fcmovne
jmp
xchg
or
outsl
sub
in
jl
negl
xlat
insl
sahf
lahf
pushf
ret
cmc
mov
pop
pop
subb
sar
stc
add
pop
movl
pop
sub
cli
fbstp
insl
scas
mov
xchg
pusha
mov
jbe
movsl
sbb
dec
sbb
xor
cmp
add
std
adc
add
shrb
cwtl
lds
out
daa
gs
sbbb
cmp
xchg
in
or
stc
sarb
stc
inc
xchg
pop
mov
and
ds
ljmp
gs
or
adc
icebp
cmp
fwait
test
cmpsb
add
hlt
xchg
icebp
ret
lret
mov
mov
xchg
out
test
addr16
jae
add
test
xlat
add
mov
scas
mov
xchg
xchg
and
mov
fsubrl
cmpsl
stos
xlat
std
adc
jno
test
sti
incl
pushl
pusha
lea
jmp
movb
call
mov
lret
scas
int
xor
das
imul
daa
clc
and
jmp
dec
imul
or
lock
add
pop
stos
xor
test
lcall
dec
ds
sbb
das
mov
icebp
mov
inc
adc
push
call
aas
mov
inc
mov
pop
jno
mov
pop
pop
jle
xchg
nop
and
movsl
and
out
xor
pop
mov
loope
mov
xorl
and
imul
mov
sahf
std
adc
lahf
mov
mov
cmc
cmc
cmpb
call
sub
call
mov
setae
stc
add
adc
mov
call
pusha
call
push
pusha
lea
jmp
pushl
push
lea
jb
bt
pusha
cmpb
pushf
lea
jne
btr
bts
mov
stc
add
stc
stc
call
test
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
or
pop
jbe
cmp
push
je
decb
lcall
insb
push
test
push
add
dec
push
add
out
rorl
push
ja
push
pushf
jo
xor
shrl
jl
rclb
add
ret
rol
jno
xorb
sub
out
pop
inc
push
dec
dec
mov
sti
jmp
mov
mov
push
adc
lret
lret
addr16
fdivr
adc
lahf
test
sub
add
je
push
stc
bt
cmp
pusha
call
lea
je
jmp
call
call
push
jp
cltd
sub
jnp
adc
mov
push
mov
mov
ja
stos
iret
test
add
or
xor
pop
lods
xor
mov
xor
not
inc
fwait
pop
mov
shl
add
movsb
xlat
jg
sarl
out
outsb
or
lds
dec
test
sub
mov
call
cmc
je
add
fwait
lahf
test
cmc
cmp
sub
pushf
cmp
pusha
lea
jae
pusha
pusha
pushl
lea
jmp
shl
push
add
lea
movzbw
pusha
movsbl
mov
lea
jmp
inc
xchg
pushf
adc
inc
fdivp
dec
inc
xchg
mov
add
sbb
add
sub
jmp
adc
cmp
pop
cld
dec
and
or
jecxz
mov
add
sub
xor
pop
and
fsubr
mov
add
sbb
mov
xor
xor
pop
sarl
sti
lods
lock
mov
jns
in
add
add
fsubs
clc
les
lcall
mul
xchg
xor
jb
or
movsb
sbb
ljmp
daa
push
dec
jge
add
jns
xchg
mov
dec
cmp
add
jmp
xor
sub
pop
jne
test
pushf
js
int
mov
adc
icebp
dec
mov
xor
dec
aad
mov
jl
push
fiadds
stc
out
jle
mov
cwtl
and
jne
aas
outsb
aaa
popa
xor
loopne
push
cli
cmp
fisubl
dec
imul
mov
out
sbb
mov
xor
cld
test
xchg
nop
ja
fcomps
mov
pop
push
sub
or
into
add
lods
jnp
push
adc
es
jmp
ficoms
or
jmp
cmp
mov
lea
jb
stc
pushf
cmp
push
pusha
pushf
jmp
pushf
jmp
push
call
cltd
jmp
mov
dec
hlt
xchg
mov
addr16
push
std
js
mov
imul
pop
cmpsl
or
jge
mov
jg
cld
movsb
jg
xor
jae
cmpsl
and
jmp
int3
mov
pop
ds
daa
mov
dec
test
adc
push
jns
popa
push
sbb
stos
in
int3
icebp
lds
nop
rcrl
rorb
jns
inc
and
out
aas
sbb
test
push
mov
mov
insl
mov
iret
cli
cmp
adc
xchg
dec
cmpsl
mov
push
daa
mov
aam
or
xchg
stos
lods
or
inc
popf
es
sar
sahf
mul
dec
scas
mov
cmpsb
mov
mov
addr16
xor
push
or
mov
mov
repz
pushf
lahf
pushf
rclb
in
xchg
outsl
xor
ds
mov
pop
stc
xchg
call
popf
pop
test
sbb
femms
adc
out
xchg
sahf
aaa
xor
aam
in
pop
pop
dec
jns
mov
ja
loopne
adc
push
out
push
insb
rcrb
iret
mov
mov
fisttps
mov
jmp
mov
mov
jbe
inc
mov
jecxz
and
sbb
cmp
and
outsl
jg
adc
xchg
pop
neg
jbe
decl
sbb
sbb
arpl
popf
adc
scas
shr
test
adc
inc
xor
fstps
lcall
push
push
repnz
push
int3
cli
call
push
sbb
test
lods
xor
xor
hlt
push
ror
xchg
std
jmp
sar
shll
lock
inc
sbb
or
xor
pop
rcrl
test
mov
cmpsl
jb
cltd
pop
push
repnz
fnstsw
testb
mov
and
sbb
mov
fsts
xchg
andl
adc
fs
stc
mov
fbld
sarb
aas
lods
aam
inc
or
cmpsl
lsl
or
mov
ret
insb
pop
dec
inc
jle
push
addr16
addr16
clc
xor
cmp
mov
pop
arpl
push
jbe
repnz
sub
mov
dec
sbb
sub
test
mov
lea
clc
pusha
cmp
clc
sub
clc
pusha
stc
pushl
popl
stc
cmp
pushf
pushf
call
sbb
fistps
repnz
out
mov
mov
aad
push
mov
bound
dec
jmp
fwait
jno
shlb
mov
cltd
ds
scas
dec
out
jmp
aam
sbb
pop
xchg
scas
mov
lret
stc
cmpsl
inc
inc
cmp
xchg
jb
sbb
jl
and
pop
fstpt
shlb
fildll
lods
pop
mov
std
adc
movsl
xor
bt
repnz
call
pushf
movw
pushf
movb
lea
jae
pushf
call
bsf
xadd
xor
setne
push
mov
mov
call
movl
push
pushf
movl
mov
pusha
pusha
lea
jmp
scas
push
outsl
cwtl
push
jle
ja
jb
xor
movsl
lds
sbb
sbb
loopne
push
cmp
lcall
pop
outsl
pop
jle
cmp
fldenv
xchg
nop
ret
push
sbb
push
xchg
pop
cld
cld
dec
jle
cmpsl
es
and
movsl
add
add
add
adc
lock
addb
shrl
adc
add
cwtl
inc
and
cwtl
jmp
mov
lock
and
ud0
sub
add
sbb
or
adc
fwait
in
pop
cmp
inc
mov
pushf
mov
xchg
fs
xchg
fimuls
mov
sub
sub
jb
insl
jno
imulb
cmp
es
add
push
sbb
adc
sbb
xor
fwait
ljmp
xor
stos
pusha
cmp
dec
and
sub
and
jle
inc
adc
popa
fcompl
mov
addl
pop
repz
push
stos
xchg
mov
scas
adc
stos
iret
call
rcl
bswap
mov
stc
test
clc
push
cmpb
lea
jne
push
lea
jne
pusha
lea
jmp
push
movl
movb
movl
lea
jmp
call
jmp
movb
pushf
call
stos
pusha
lea
jmp
idivb
ds
pop
and
xchg
pop
pop
gs
lret
jno
lods
mov
cld
rolb
cmp
sbb
pop
xchg
popf
cltd
sbb
add
popf
arpl
outsb
ljmp
pop
xchg
xchg
xchg
sbb
mov
jmp
repz
mov
add
pop
mov
jno
loop
dec
sub
mov
js
out
xlat
roll
sbbb
dec
mov
mov
adc
imul
in
xchg
aaa
fwait
mov
adc
mov
call
cltd
push
in
inc
test
subb
out
mov
cmpsb
scas
xchg
cmp
pusha
dec
mov
sub
ljmp
xor
add
adc
ret
adc
rorb
shr
jmp
call
lea
je
clc
bt
stc
stc
sub
test
pusha
cmp
pushf
movb
lea
ja
pushf
lea
jmp
or
jle
inc
jp
into
mov
pop
cs
imul
or
sahf
cmp
xchg
mov
pop
dec
das
cltd
call
mov
mov
xchg
jp
mov
push
pop
icebp
movlps
daa
adc
cs
stos
fildl
cmp
cmpl
xchg
xlat
cmp
lods
sub
test
fwait
dec
push
cmpsl
ss
lods
ss
inc
jge
cwtl
cwtl
mov
xchg
push
sub
xchg
sbb
and
jmp
jmp
in
data16
mov
std
lahf
sbb
xor
inc
dec
into
fiadds
lds
dec
lods
mov
jg
shll
fsubrs
lds
push
jge
sub
imul
sahf
jbe
adc
call
cwtl
xor
and
inc
pop
mov
scas
pop
lcall
shll
or
ret
sti
or
add
shl
push
fs
pop
movsl
movsb
push
cli
xor
mov
jne
ss
std
adc
mov
cmpsl
fs
repnz
push
inc
stc
cmp
bt
clc
xor
push
mov
push
inc
cmp
shr
pushf
lea
je
pushf
push
pushf
jmp
test
mov
mov
mov
push
or
inc
mov
dec
cmp
imul
mov
pop
sbb
movsl
clc
adc
fs
cwtl
adc
sub
ficompl
mov
inc
pop
mov
add
inc
add
sub
xor
mov
xchg
sub
cmc
push
inc
out
das
add
mov
xchg
pop
inc
jnp
pop
pop
mov
xor
and
fstps
and
mov
mov
shrl
mov
pop
popa
out
adc
push
jne
scas
jge
enter
mov
and
in
push
dec
mov
adc
pop
es
add
call
enter
loop
adc
push
or
inc
test
jno
jp
insb
mov
shlb
das
lea
sbb
or
jbe
outsl
xchg
xor
mov
push
pop
fiadds
dec
or
cs
out
leave
xchg
xchg
xor
xchg
add
pop
mov
mov
xor
pop
repz
adc
add
aad
dec
push
dec
mov
div
and
rcll
sbb
pop
adc
mov
push
dec
sar
fcoml
jbe
insl
cltd
xchg
mov
xchg
add
push
jp
add
icebp
clc
xor
mov
xorl
mov
dec
pushf
subl
lret
push
test
mov
adc
cmpl
mov
sti
or
fbld
mov
mov
and
daa
fsubl
jl
out
or
lock
mov
pushf
loope,pt
sbb
jecxz
cmp
rcrb
xor
imul
push
roll
lret
xor
btr
call
xchg
and
adc
orl
cltd
jnp
ja
test
pushf
ja
test
mov
xchg
mov
lods
mov
xchg
jnp
push
adc
push
xor
xchg
push
hlt
fbld
jmp
jge
fmuls
cmp
sbbb
shlb
out
jl
xchg
shll
xlat
fwait
in
adc
pop
push
adc
and
push
sub
fs
jmp
jns
pop
movsb
xchg
ljmp
inc
mov
inc
cmp
arpl
jno
sub
dec
xchg
sbbl
jne
bound
xor
xchg
cmpsb
push
jb
idiv
adc
out
push
pushl
movl
pusha
call
imul
mov
or
lods
sbb
stc
int3
addr16
jp
pop
sub
cld
rcrb
xchg
pushf
sbb
mov
inc
dec
mov
mov
lahf
cmpsl
sub
cvtpi2ps
add
fmulp
out
jb
imul
into
xor
add
cmc
mov
mov
std
adc
js
dec
rorl
aaa
add
fsubs
fs
dec
fmuls
lret
add
mov
xor
cs
test
push
jg
cltd
daa
add
fisubrl
adc
jnp
mov
subb
movsl
ljmp
pop
rorl
push
imul
jmp
inc
jae
inc
jmp
jb
dec
xor
fwait
push
sbb
lods
inc
lret
pop
pop
mov
aad
jmp
mov
xor
adc
dec
jmp
pop
pushl
lea
ja
stc
jmp
pusha
lea
je
call
je
xor
popa
bound
js
xchg
mov
xor
in
mov
xchg
cwtl
adc
popf
add
icebp
xor
jne
jne
repz
pop
stos
or
lea
sbb
adc
or
shll
sub
decb
aaa
ret
repnz
cmpsl
in
sub
dec
sbb
stos
in
pop
je
sub
mov
std
adc
lods
push
setbe
sub
call
in
adc
popf
inc
inc
mov
adc
mov
in
push
or
sbbb
xchg
cmp
ret
inc
ret
scas
call
cmpsb
adc
loope
imul
loopne
dec
dec
fildl
das
push
mov
xor
push
inc
imul
insl
mov
mov
pop
stc
leave
xchg
nop
mov
out
movnti
in
and
addr16
fcomps
pop
xor
or
adc
cmp
sbb
xchg
repz
mov
xchg
mov
mov
scas
mov
je
mov
roll
and
aaa
push
je
inc
movsl
jns
test
test
and
sbb
cmp
cmp
pop
mov
mov
pop
jo
adc
lods
aam
mov
jo
clc
xor
jmp
or
mov
mov
dec
jmp
push
cmp
lea
jmp
lea
ja
jmp
lea
jne
btc
mov
jmp
mov
lea
jne
shrd
btr
neg
mov
xor
lea
rcr
sub
stc
mov
neg
add
mov
pushf
pushf
sub
pushf
call
fs
cmp
xlat
or
xlat
mov
movsl
repz
orb
pop
cli
loopne
jp
es
add
sub
imul
out
into
adc
and
lcall
adc
imul
cld
inc
jbe
pusha
pop
dec
mov
xor
fildl
outsb
push
dec
clc
jecxz
loop
adc
les
fs
jne
jmp
pushf
pusha
cmc
test
pusha
lea
je
jmp
adc
mov
jmp
call
pushf
movl
pushl
pusha
lea
jmp
pushf
mov
cmc
pushf
cmpb
pushf
lea
jne
aas
bts
xor
bsr
cwtl
mov
pushf
stc
add
sbb
sbb
not
not
mov
pushl
clc
test
call
int3
xchg
xchg
insl
mov
push
jle
movsb
call
fwait
imul
xor
popf
or
dec
mov
int3
fdivrl
lcall
or
sub
xchg
into
or
xor
lock
mov
jne
lods
ficoms
popa
hlt
fisttps
xchg
icebp
inc
inc
lds
pop
in
insb
xor
jecxz
rol
sbb
xchg
cltd
data16
xlat
jge
mov
push
mov
xchg
or
adc
or
shr
fimuls
mov
cmp
push
daa
clc
cltd
sbb
hlt
movsb
loope
stc
mov
loop
sarb
mov
loop
cmp
push
mov
xor
enter
adc
stos
jbe
and
adc
ja
cmp
cmp
and
rcrb
push
jmp
pop
ja
addl
lods
jb
pop
popf
jno
insl
outsl
push
xor
xchg
jns
inc
mov
mov
adcl
daa
xchg
cmp
bound
out
mov
jmp
xlat
and
mov
xchg
fidivrs
mov
adc
repnz
push
and
stc
movsb
test
push
xchg
arpl
pop
adc
xchg
shr
dec
in
notb
lock
hlt
aas
test
pop
mov
jecxz
cli
and
idivb
hlt
inc
insl
aam
loope
adc
mov
xor
clc
stos
fs
pop
clc
lret
jns
add
lods
push
aas
inc
pop
jg
dec
arpl
movsb
push
adc
sarl
mov
mov
sub
sahf
add
sbbl
pop
add
sahf
xchg
jg
xor
insl
arpl
push
pop
mov
jb
mov
test
jp
mov
aad
inc
sub
mov
pop
andl
sub
inc
cmp
iret
dec
push
sahf
push
stc
popf
hlt
scas
imulb
std
adc
out
jno
mov
and
xchg
je
loopne
sahf
rcr
mov
nop
xchg
test
aas
mov
push
lock
xor
sub
mov
sub
popa
push
mov
lahf
shrb
push
and
mov
inc
mov
adc
push
jl
movl
jmp
inc
push
lea
jmp
sub
int3
insb
out
add
push
lcall
orl
fwait
ret
cli
out
mov
jmp
inc
dec
nop
jecxz
mov
jl
cmc
xchg
int
dec
fs
mov
test
xchg
adc
xchg
and
xchg
and
xchg
sub
leave
push
lea
je
bswap
lea
pushf
mov
movsbl
movzbl
movzwl
lea
pushl
lea
pushf
bswap
mov
call
jecxz
inc
mov
ja
leave
je
dec
int3
aad
adc
lods
push
sub
sbb
in
mov
inc
repnz
lods
adcl
xchg
adcl
in
lcall
leave
cmp
fldcw
int3
push
push
clc
filds
ret
xor
jno
mov
pop
andb
outsb
aas
push
mov
sub
and
dec
inc
mov
jmp
pop
adc
and
add
test
scas
mov
cmc
stos
popl
in
jg
std
adc
and
or
daa
shrl
jge
sub
cmp
pop
push
addb
std
adc
icebp
ljmp
movsb
rolb
lret
bound
sahf
mov
ljmp
rcrl
ja
dec
pop
push
into
lret
cmp
lock
pop
xchg
and
fstp
and
push
mov
stc
fucomi
sarb
adc
pushf
call
lea
pushf
mov
pushf
jmp
in
sbb
jns
in
ds
pop
mov
xchg
inc
popf
inc
xchg
in
stos
cmp
cltd
movsl
cltd
lcall
add
cmp
cmc
lods
pop
lods
sub
jno
sub
aad
cs
adc
std
pop
call
jmp
lea
jae
cmp
pusha
cmp
xor
call
lea
ja
pusha
pushf
inc
call
setns
bswap
lea
jmp
xchg
lods
lahf
negb
lods
shl
sbb
adc
das
or
jae
outsl
das
mov
les
sahf
push
pop
xchg
stos
jo
mov
mov
mov
mov
adc
mov
dec
jmp
test
lods
cmp
inc
mov
and
xchg
roll
add
lcall
add
pop
xor
mov
int
rorl
testl
xchg
push
xchg
push
xlat
es
dec
or
je
leave
cmpsl
scas
outsb
cld
mov
adcb
inc
xor
cmp
cs
jno
rolb
dec
test
lcall
lcall
lahf
in
sti
lods
fisttpl
xchg
pop
or
or
cmp
pop
add
js
or
ljmp
jnp
adc
pop
sub
push
inc
push
cmp
cs
insb
add
inc
hlt
push
or
or
mov
imul
and
ja
shll
es
push
cwtl
bound
and
cmp
cli
cld
jne
xchg
xlat
je
xchg
jmp
out
inc
sub
outsb
mov
cmpsb
jp
jp
and
add
inc
lods
adc
jns
mov
ja
test
ljmp
mov
lods
loop
add
jmp
pop
sbb
push
xchg
js
jge
add
push
cli
cltd
std
adc
jno
call
clc
sub
push
pushl
lea
jne
jmp
call
testl
test
pop
pop
jecxz
movsl
jne
arpl
andl
push
add
fcoml
xchg
ret
pushf
jns
iret
push
nop
lock
pop
jae
fbld
aad
inc
dec
in
mull
test
jl
dec
shll
cld
sbb
lods
jmp
jbe
dec
sub
push
test
fwait
dec
stos
xchg
cmpsl
jnp
in
fcoms
xchg
movsl
test
lock
sbb
imul
addl
inc
jge
push
lods
mov
push
std
adc
adc
xchg
icebp
pushf
pushl
popl
bt
clc
call
jmp
jmp
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
or
test
xor
add
flds
add
movb
jmp
lea
jb
push
cmc
clc
cmpb
call
rcr
pusha
adc
call
rcr
mov
bt
sub
movw
pusha
bt
repnz
pushf
call
sbb
xchg
in
push
arpl
jp
mov
test
fs
into
enter
int
mov
cmp
iret
cmpsb
jbe
adc
add
sbb
sub
or
into
jmp
mov
clc
or
mov
test
js
mov
xor
aad
dec
ret
dec
jle
xchg
jg
cmp
jl
imul
movsb
or
cmpsb
movsl
cmpxchg
shrl
xor
pushf
xchg
std
adc
fidivl
movsbw
push
pushf
bswap
setl
lea
mov
push
pushf
movl
movb
pushl
popl
movb
pusha
pusha
pushl
ret
jge
out
rolb
push
sub
cmpsl
pop
fdivrl
in
inc
outsb
pop
jns
jae
test
int3
mov
sub
adc
in
xor
cmpsl
addr16
mov
push
jbe
rcll
mov
sti
aad
in
enter
cmp
cltd
push
ret
out
xchg
std
adc
jl
adcl
in
fwait
out
mov
push
cmp
adc
jbe
dec
sbb
std
adc
pop
out
fs
jne
lahf
movb
call
lea
bswap
call
clc
or
jmp
pushf
inc
cmp
xor
jmp
cmpsl
xchg
fists
adc
es
adc
mov
mov
clc
enter
ljmp
test
outsl
loope
mov
fs
mov
push
movsl
cs
lcall
test
xchg
mov
and
jl
jp
cmp
scas
push
xorb
sbb
insl
mov
pop
push
push
add
push
dec
inc
adc
xchg
imul
sub
mov
dec
adc
in
mov
cmp
gs
scas
clc
out
ret
mov
adc
imulb
jle
xchg
test
hlt
xor
mov
out
xchg
out
sahf
popf
sbb
scas
jnp
scas
and
cmp
dec
mov
sbb
inc
mov
imulb
icebp
inc
pop
aas
adc
insl
inc
vcvtss2sd
rorl
push
mov
sub
mov
push
sbb
idivb
cmpsb
les
loope
repnz
mov
jb
jmp
push
jo
popf
mov
dec
sub
adc
cmp
adc
add
mov
sub
pushf
not
push
inc
jmp
lea
jb
push
pusha
lea
ja
jmp
call
cmp
cwtl
lea
pop
lea
lea
pushf
mov
call
cmp
pushl
lea
jb
stc
test
cmc
stc
cmp
pushf
mov
jmp
test
mov
roll
cmp
dec
sti
push
dec
jne
int
cmc
lods
xchg
cmc
sti
push
sbb
sar
movsb
jle
movsl
add
jns
cld
insl
inc
cltd
sbb
outsl
push
pop
aas
stos
lret
cld
fcompl
add
xchg
roll
popa
push
ret
sub
cmp
adcl
dec
insl
sub
sbb
sub
out
test
std
adc
sahf
movsl
sub
out
in
aam
call
ret
rcr
lret
cmp
lcall
mov
push
dec
pop
jle
xorb
adc
ret
and
push
js
mov
jbe
loop
push
shl
loopne
movsl
dec
call
cmpsb
adc
pop
mov
fidivs
jno
jecxz
les
shlb
ds
add
test
popf
daa
jle
mov
aas
mov
decl
pop
mov
inc
cmp
cmp
sub
sub
sahf
and
push
and
and
xchg
dec
jg
cli
sub
adc
add
push
jmp
mov
pushl
pushf
pushl
lea
pushl
popl
pushl
movsbw
mov
not
movl
lahf
pop
lahf
lea
call
rcl
mov
aad
int
mov
loope
rorb
rorl
rcl
mov
fimull
in
int
aad
mov
aad
xlat
mov
aad
fmulp
fsubp
mov
mov
clc
and
cmp
jo
pusha
test
add
pushf
pushl
lea
jmp
jl
ficoms
testb
lea
cltd
mov
dec
xchg
xor
adc
mov
into
mov
into
jbe
sbb
and
xchg
cli
or
icebp
decb
mov
in
mov
jbe
ret
and
in
les
add
or
data16
adc
and
cld
inc
in
push
mov
aad
mov
mov
nop
out
adc
aas
mov
je
call
jmp
lret
mov
iret
push
pop
sbb
cwtl
hlt
sbb
push
cwtl
aam
lea
loop
mov
inc
imul
jb
imul
aad
insl
mov
xchg
sbb
rcr
cli
mov
lods
nop
pop
mov
sub
xchg
imul
and
ds
sahf
mov
cs
adcl
xchg
enter
in
out
in
test
cmp
lahf
scas
shl
pop
fistpll
fidivrs
adc
adc
insl
xchg
mov
js
cwtl
cmpb
push
hlt
or
dec
popa
sbb
push
sbb
in
sub
in
test
pop
sub
js
shrl
in
mov
xor
fcmovne
psubw
ret
popf
bound
pop
pop
sbb
jne
cmpsl
arpl
or
and
leave
popf
stos
sbb
cmp
mov
imul
stc
es
adc
in
pushf
call
idivb
xlat
inc
sbbb
inc
aad
idiv
cld
popl
insb
mov
data16
rcl
stos
lfs
mov
aad
mov
or
int
cltd
dec
into
adc
les
inc
test
inc
pop
cltd
jl
in
pop
and
inc
mov
adc
mov
push
xchg
and
iret
popa
adcl
stos
jne
imul
mov
in
lret
cmp
adc
ja
jmp
jmp
popf
cpuid
nop
pushf
call
cmc
not
test
call
pusha
lea
call
call
lea
jne
push
lea
jmp
mulb
dec
cmp
adc
loope
inc
cwtl
cs
ljmp
cs
xchg
int3
lods
mov
cltd
or
mov
ljmp
sub
repnz
pop
or
scas
jmp
cmp
frstor
aaa
xor
outsl
and
loope
jmp
sarb
mov
inc
repnz
inc
mov
mov
cmp
jg
cmpsl
call
jae
jns
fwait
and
xorl
aam
call
mov
arpl
in
inc
cmpsb
dec
or
loope
loope
xor
in
rcr
call
inc
lcall
inc
cmp
cmc
std
adc
testl
les
sar
call
lea
je
cmp
cmp
clc
add
cmp
push
jmp
pusha
inc
pushf
call
push
dec
inc
dec
dec
xor
cs
insb
add
pop
outsl
decl
test
jmp
mov
mov
stc
test
add
cmc
cmp
clc
pushf
movzwl
rcl
adc
mov
cmp
add
cmc
cmc
bt
bt
mov
stc
pushl
clc
clc
test
pusha
push
jmp
movl
jmp
pushf
lea
jne
aam
sbb
adc
shr
xor
shr
mov
call
add
pushf
or
push
call
pushf
pushf
adc
lea
jo
pushf
push
movl
lea
call
pushf
jmp
setge
sar
bt
add
add
push
shrd
lea
mov
neg
cmp
seto
sar
mov
push
bt
pushf
repnz
pushf
pusha
push
lea
jne
pusha
movb
movzbw
pusha
movsbw
mov
lahf
pop
pushf
mov
lea
call
call
inc
test
cmp
not
lea
setae
mov
pushl
push
mov
jmp
pushf
jmp
cmc
or
call
movl
jmp
cmp
jmp
mov
jmp
scas
dec
leave
incb
out
adc
adc
cmp
push
pandn
pop
out
cmp
mov
mov
pop
and
cmp
outsl
lods
pop
ret
inc
je
xchg
push
ret
es
mov
imul
mov
leave
push
ret
add
lret
movsl
data16
adc
pop
rorl
pop
cmpsl
dec
lahf
lea
inc
push
mov
mov
rcrl
iret
insb
inc
pop
mov
jnp
test
inc
lods
js
dec
sbb
fcompl
std
adc
sti
mov
fcmovne
adc
out
jl
and
or
rorl
jne
xchg
xchg
mov
mov
xor
inc
fisttpll
iret
loopne
mov
loope
outsb
add
std
push
filds
sub
xlat
ret
cli
dec
adc
addl
lret
push
jb
dec
mov
jge
mov
jns
cmp
pop
push
std
adc
mov
int
cltd
outsb
mov
cmp
push
push
mov
jge
lahf
movntq
push
sub
sub
int
xor
in
les
mov
pop
stos
add
pop
dec
add
in
xchg
test
push
fiadds
in
mov
jae
les
pop
lret
add
inc
xchg
mov
sub
adc
cmp
lahf
mov
push
cmp
mov
lock
mov
lret
aam
rcl
ret
and
cmp
jnp
cmp
pusha
xor
lds
dec
xor
clc
sub
or
cmp
cld
enter
inc
mov
mov
into
pushl
jo
or
cmp
inc
out
add
adc
lods
fdivrs
xchg
int
pop
push
cmp
std
adc
pop
push
pushl
popl
pushf
pushf
pushl
ret
pushf
pusha
jmp
jmp
insl
add
testb
insb
jae
push
sahf
jge
sbbl
cmp
mov
rcr
lret
add
test
bound
xor
adc
arpl
mov
cmpsl
pop
call
nop
sbb
clc
pop
mov
cld
fldcw
mov
sbb
test
cwtl
ds
cmpsl
mov
fcoml
push
out
push
jle
push
dec
mov
pop
ja
leave
orb
sub
loop
xor
push
mov
push
inc
out
mov
popa
aam
inc
jl
adc
add
jge
movsb
adc
test
arpl
dec
or
adc
aad
add
adc
dec
insl
add
pop
ljmp
dec
ljmp
rclb
or
sub
pop
stc
mov
aam
dec
leave
push
arpl
sbb
in
cli
cmp
inc
or
push
lret
insl
mov
push
inc
and
xchg
sbb
cmp
mov
inc
sahf
movsl
cmp
ret
and
neg
es
dec
es
imul
idiv
lret
mov
pop
jle
lret
rcll
mov
in
repnz
incl
pop
aaa
sub
push
xor
sub
jge
xor
push
rclb
movsb
pusha
add
lcall
adc
xchg
rcpps
ds
xchg
ljmp
add
mov
inc
pop
mov
fsubrl
cld
mov
sbb
les
test
dec
mov
mov
lds
in
xchg
and
cmp
lds
add
mov
aaa
inc
test
shlb
loopne
rorl
push
test
jns
mov
ss
push
xor
jg
or
cmp
inc
repnz
xor
rcrl
lret
mov
cld
sub
fisttpl
aad
xchg
pop
lods
rorb
pushf
into
add
sub
lods
add
lods
jle
in
cmc
cmp
mov
push
cli
lea
xchg
add
push
add
inc
movsb
xchg
mov
mov
and
add
push
rorb
jg
push
cmp
cmpsb
mov
dec
in
jmp
jg
in
std
fidivs
aaa
into
pop
sub
jle
or
inc
call
adc
xchg
repz
add
nop
add
mov
stc
and
xchg
das
imul
sub
dec
ljmp
and
xor
xor
or
and
imul
and
adc
mull
repnz
outsl
sbb
insl
inc
sub
mov
into
push
mov
dec
int3
addr16
test
mov
pop
outsl
ljmp
sub
jno
mov
sub
std
adc
sub
cmpb
pusha
pusha
jmp
shl
pushf
lea
je
pusha
mov
call
call
inc
pushf
jmp
lea
mov
bswap
mov
push
movb
lea
call
pushf
jmp
stc
cmp
pushf
lea
jbe
dec
shl
sub
jmp
inc
dec
mov
sub
push
pop
and
popf
int
pop
adc
pop
mov
and
cltd
arpl
fsubr
adc
mov
rcrb
cli
syscall
imul
repz
mov
test
push
das
outsl
cs
mov
push
lock
push
cmp
iret
and
dec
popa
fsts
pavgb
dec
fwait
mov
pop
call
std
push
cmpsb
bound
inc
insl
std
dec
ret
adc
push
mov
inc
xlat
sub
adc
adc
filds
pop
push
sbb
add
clc
mov
bt
clc
test
push
movb
pusha
call
movl
mov
pusha
pushl
ret
jmp
dec
push
push
inc
push
cmp
cs
insb
add
fdivr
push
mov
mov
sub
cmp
mov
cld
icebp
fldt
adc
popf
add
mov
mov
sub
jo
pop
sub
mov
mov
movsb
sub
repz
outsb
push
pushf
mov
add
cmp
mov
cld
bound
cli
jb
adc
into
sti
lcall
mov
and
leave
popa
nop
cs
iret
call
cmp
add
flds
or
std
adc
or
into
jbe
and
or
sahf
mov
jl
xor
and
cmp
or
in
or
lcall
push
ljmp
dec
xchg
and
fucomp
fs
loope
xor
repnz
fs
std
adc
pop
adc
xchg
sub
shrd
shrd
mov
ror
movsbl
mov
adc
rcr
add
cmp
sbb
clc
shr
lea
mov
sub
sub
add
not
mov
jmp
lea
jb
pushf
call
cmp
lea
jnp
pusha
mov
lea
jae
call
lea
je
pusha
pusha
pushf
mov
pushf
push
call
adc
mov
stc
stc
pushf
shl
mov
call
lea
ja
pusha
jmp
setp
lods
test
pushf
not
cmp
cmc
movb
push
sub
pushf
jmp
call
pushf
mov
imul
lds
push
jnp
xchg
jo
stos
lret
jo
aas
push
aaa
leave
push
or
push
jmp
push
paddusw
shll
ss
repnz
sahf
xor
arpl
xor
in
sbb
ds
pop
sub
push
repnz
mov
in
sub
dec
push
rcl
rcl
loope
inc
push
je
aad
mov
mov
pusha
xchg
pop
or
pop
mov
mov
pushf
sahf
dec
inc
xor
push
aaa
std
mov
add
loopne
pop
sub
mov
push
jbe
rorb
imull
pop
js
andb
sti
xchg
outsl
aam
add
inc
insl
ds
xchg
push
shrl
mov
pop
std
adc
ss
jmp
jmp
pusha
mov
movl
jmp
loop
mov
scas
xchg
divl
vmaxss
mov
jmp
xchg
sahf
jl
dec
sbb
adc
mov
std
mov
cmp
inc
in
jns
mov
push
mov
decl
or
faddl
xchg
sarl
test
mov
ja
in
in
aaa
sbb
or
into
sub
mov
es
sbb
nop
pop
lret
xchg
sbb
dec
sub
jp
insl
out
stc
mov
cmp
dec
xchg
cmpsl
rol
mov
adc
cli
cmp
add
mov
int3
xchg
js,pn
imul
fistpll
push
mov
push
mov
in
mov
cmp
pop
adc
es
lahf
or
mov
or
cmpsb
aad
fwait
je
std
rol
sti
xchg
movsl
inc
ss
xlat
sbb
push
subb
dec
xchg
gs
adc
xchg
decl
out
cmp
adc
adc
sub
cmp
fidivl
popf
push
movsl
pop
dec
ja
lcall
dec
add
jg
in
lods
sub
pop
or
mov
shlb
orl
pop
orl
sbb
cld
xchg
popa
je
lods
test
enter
sbb
xchg
jne
mov
ja
adc
icebp
mov
jmp
adc
scas
mov
lea
not
mov
movsbl
pop
setg
movzbl
pop
mov
pop
push
mov
push
jmp
movb
inc
bt
cmp
clc
movb
cmp
lea
jmp
mov
call
outsl
jne
fistl
call
xor
mov
jmp
idivb
mov
sahf
imul
push
mulb
test
dec
stos
enter
mov
fcompl
adc
mov
add
out
dec
insl
jnp
jge
lcall
mov
aas
pop
or
leave
mov
sarl
pop
movb
mov
sbb
ja
std
adc
cwtl
int3
sti
pcmpgtd
push
daa
xchg
xchg
add
or
fisttpl
lret
mov
mov
gs
push
sahf
sbb
jne
jbe
es
cmc
out
fnstenv
mov
test
push
mov
imul
add
lahf
xlat
cmp
fs
out
push
push
mov
pop
adc
cmpsl
stos
test
sub
out
cmp
sti
pop
stc
add
test
cmp
mov
lea
jb
test
cmp
pushf
pushl
pusha
lea
jae
xchg
mov
xadd
bsf
shrd
jmp
and
icebp
inc
jmp
ljmp
pop
cmp
sub
shll
out
rorb
dec
cmp
std
cmp
js
in
jp
sbb
icebp
in
xchg
ds
or
inc
popf
mov
out
sbb
and
cmc
data16
sbb
push
ja
or
repz
jo
xchg
inc
test
jo
in
mov
cli
rcr
fidivrl
rcrb
out
jne
ljmp
or
int
aam
inc
push
sub
mov
jle
repz
test
sarb
sbb
out
jne
scas
adc
out
push
jle
aam
jp
cmc
ja
rorb
mov
nop
sbb
fstpl
jb
sbb
imul
xchg
xor
cmpsl
imul
test
push
jno
mov
movsl
rorl
repz
adc
aad
movl
mov
movl
pushl
lea
jmp
dec
pusha
mov
lea
inc
call
push
movl
jmp
mov
aad
aad
fcom
out
loopne
fcmovnu
mov
fcmovnu
mov
jae
sbb
pusha
mov
movw
lea
je
adc
call
call
mov
lea
jb
cmp
cmc
cmc
bt
cmp
jmp
movw
push
dec
test
stc
movw
bt
shl
not
not
lea
ja
lods
push
jmp
pop
jmp
rolb
dec
xor
adcb
push
fcmovu
mov
push
pushf
and
jmp
clc
pop
cmc
std
and
subl
daa
cmp
test
and
jmp
cmp
push
jne
test
ret
out
out
sub
pop
fstps
pop
dec
cmp
sub
mov
sbb
mov
test
dec
jo
mov
mov
adc
movb
movl
pusha
movl
movl
push
push
lea
jmp
test
outsb
pop
push
cwtl
mov
lds
lock
out
ds
loop
outsl
dec
leave
jne
xchg
pop
mov
testb
out
or
sub
cmp
mov
loop
jl
jns
and
test
jge
xchg
jne
nop
scas
sbb
cmc
jb
lods
popf
mov
imul
ficomps
mov
icebp
mov
sub
jb
stos
je
xchg
push
push
push
push
pop
xchg
addr16
mov
dec
push
cs
jl
imul
cmpl
andb
hlt
mov
rorb
cltd
jl
or
and
sub
push
pop
push
scas
pop
mull
sbb
mov
mov
inc
fnstcw
int3
fdivp
mov
mov
inc
push
mov
mov
mov
inc
outsb
sbb
pop
or
rorb
lret
jne
mov
lcall
push
cmp
mov
mov
mov
sahf
xorl
test
and
or
inc
cmp
and
jb
lea
mov
lea
movzbw
jmp
pusha
pusha
lea
je
not
setg
lea
mov
pushf
lea
lea
jno
push
push
pushl
xchg
bswap
movsbw
lahf
call
lea
jae
cmc
push
sub
call
jmp
in
pusha
lea
jns
push
movl
jmp
call
sub
mov
lea
jmp
cmc
jmp
movl
push
push
pushf
mov
lea
jmp
inc
inc
mov
mov
mov
lea
jmp
js
push
pushl
push
movl
pushf
movl
pusha
pushl
movl
lea
jmp
call
lea
bswap
mov
push
jmp
push
lock
std
std
mov
xchg
pusha
cmp
dec
repnz
int3
vhsubps
add
ss
dec
scas
fsubrl
jnp
in
sub
inc
and
aam
pop
roll
aad
adc
test
mov
in
je
ss
xchg
push
push
stos
push
xor
add
daa
add
or
dec
adc
dec
call
cltd
int
cmpsb
fisttps
gs
push
inc
xchg
fs
stos
hlt
imul
bnd
sbb
sub
fwait
push
jg
add
hlt
pusha
sti
in
loopne
jp
and
mov
dec
stc
xchg
adc
ljmp
cwtl
andl
pop
cltd
cmp
push
mov
pop
sub
hlt
jecxz
data16
mov
and
movl
call
add
push
pushf
clc
mov
cmc
bswap
mov
push
cmp
bt
call
cmc
jmp
call
pushl
inc
push
movb
lea
jmp
shrb
or
dec
or
mov
pop
test
inc
jno
dec
es
or
cli
addr16
cmp
in
test
xchg
popf
mov
jle
sub
xorl
mov
jmp
jmp
pop
scas
outsb
xlat
sbb
inc
mov
xor
ljmp
call
pop
jmp
jmp
dec
mov
test
orl
mov
lahf
test
idiv
jmp
faddl
cltd
test
popa
lret
inc
ss
cmp
scas
jl
xor
mov
mov
addr16
rcr
ret
push
fsubr
in
ljmp
adc
xchg
movzbw
movzwl
push
pop
pop
pushl
lea
jmp
adc
movw
pushf
mov
lea
jne
jae
call
cmp
movw
push
lea
jae
rcl
ror
mov
shl
cmc
sub
mov
bswap
mov
jmp
lea
je
lea
push
mov
call
setg
dec
inc
not
rcl
xchg
sar
dec
daa
mov
pusha
test
neg
mov
push
mov
btc
mov
pusha
sub
mov
pushf
movw
pushf
rep
pushl
mov
mov
mov
mov
lea
jmp
movl
pusha
pusha
push
lea
jmp
push
movl
push
pushf
pushf
pushf
mov
mov
push
mov
movb
pushl
ret
mov
pushf
dec
pushf
jmp
push
pushl
mov
pusha
mov
lea
jbe
pushf
lea
call
pushf
call
sbb
es
lock
fs
outsl
adc
shll
std
lock
stos
clc
iret
in
xor
and
inc
iret
xor
add
stos
mov
ja
imul
adc
mov
movl
push
pusha
pusha
lea
jmp
movl
pusha
push
mov
lea
jmp
jmp
call
in
cmp
fisubrs
insl
xor
in
aad
iret
mov
lods
cmpsl
inc
push
jmp
mov
movzbl
sub
jno
lods
js
loopne
outsb
sti
arpl
int3
nop
mov
xchg
gs
adc
repnz
pop
pop
test
scas
jb
js
clc
mov
or
bound
jmp
nop
mov
testl
mov
in
imul
and
adc
sbb
and
mov
pusha
dec
and
popf
rol
xor
cli
nop
fstpl
ja
shr
test
mov
or
out
aad
jle
push
xchg
xchg
mov
dec
aam
adc
cmpsb
lret
shrb
sbb
pop
mov
adc
jns
inc
loop
xorb
jns
aad
and
mov
and
adc
cmpsl
xor
lcall
pop
push
pop
mov
mov
shll
mov
popa
mov
aam
sbb
gs
fs
ret
inc
sub
adc
dec
sbb
cmp
call
call
pushl
sub
pusha
lea
jmp
inc
cmc
xor
call
shl
sub
rol
mov
and
pusha
add
btc
add
mov
shrd
movl
shld
dec
mov
pusha
call
shl
stc
mov
stc
call
jmp
cmc
bt
sub
jmp
add
cmp
test
ss
ss
in
lret
mov
xchg
imul
mov
int3
cmpsb
mov
stos
jecxz
inc
popf
lds
fsts
adc
data16
mov
sbbl
lods
add
push
sbb
test
mov
mov
lret
xor
aas
inc
stos
out
xor
bound
xchg
xorl
les
fcompl
sbb
adc
test
bswap
mov
pusha
pusha
lea
jmp
add
int3
lds
add
daa
jmp
je
icebp
aad
cltd
sbb
push
insb
loope
into
shl
dec
push
aas
cmp
jne
sub
pop
and
mov
add
enter
push
mov
jle
out
mov
jecxz
add
jae
int3
mov
sbb
in
data16
repz
cltd
hlt
mov
cmc
push
sub
out
inc
cmp
xchg
stos
xchg
andl
in
arpl
push
lret
push
rorl
repnz
adc
add
call
inc
data16
sbb
fdivr
mov
xchg
mov
in
jns
pandn
mov
sub
inc
sbb
out
dec
xlat
mov
arpl
cmpsb
or
inc
or
mov
push
into
or
les
mov
and
xchg
push
mov
lret
sti
call
in
xchg
cmp
pop
pushf
push
mov
out
xchg
or
xor
movsl
in
dec
mov
mov
ret
sbb
shrl
cmc
cmovle
add
ja
xchg
jg
push
loop
aam
adc
mov
stos
mov
mov
mov
jecxz
mov
dec
xor
adc
loop
jge
das
xchg
jae
fadd
imul
pop
xchg
ja
imul
mov
add
andl
push
mov
testb
repnz
dec
or
dec
std
imul
pop
xor
jno
inc
xchg
iret
je
cmp
dec
xor
lret
in
mov
repz
xchg
mov
cmpsb
adc
push
sbb
xchg
mov
out
dec
or
add
les
push
movsb
filds
push
test
xchg
stos
test
out
lahf
enter
inc
lahf
cmp
sub
dec
sbb
mov
pusha
movb
mov
not
lods
call
shlb
cmp
lods
into
dec
int3
addl
jno
push
mov
cmp
xchg
xor
adc
mov
cmc
stos
shll
cmp
mov
jmp
xchg
jge
mov
aas
popa
xchg
push
xor
mov
shl
fwait
out
mov
mov
mov
iret
lahf
inc
and
and
and
aas
rcrl
cwtl
push
adc
mov
xorl
and
add
mov
jnp
mov
mov
mov
xchg
add
arpl
int3
mov
mov
jge
icebp
aad
and
adc
out
sbb
aad
cmpsl
add
dec
cmp
lock
pusha
clc
sub
shll
mov
xchg
mov
pop
sbb
xor
xor
aas
and
pop
jne
ss
dec
mov
xor
out
aaa
popf
fcmove
mov
jge
and
xor
ret
ja
sbbb
xorl
imul
mul
sbb
loopne
dec
std
adc
inc
or
iret
lods
gs
ljmp
mov
cmp
mov
arpl
movsb
or
add
jg
jg
mov
and
inc
push
inc
jno
xlat
mov
cld
mov
inc
outsl
dec
jne
aaa
mov
out
or
mov
testl
notl
sub
push
fs
data16
popa
inc
inc
scas
push
mov
std
std
adc
sbbb
add
bt
cmp
push
lea
jb
clc
pusha
pushf
stc
cmp
movb
pusha
lea
jae
xadd
not
mov
xadd
mov
lea
movsbl
mov
btr
bts
setbe
bsf
mov
jmp
pushf
pushf
call
mov
stc
mov
mov
add
jge
cmp
or
jmp
out
fisttpll
mov
xchg
add
popf
dec
inc
sbb
icebp
add
sub
cmp
mov
or
sbb
outsl
or
lahf
sti
or
inc
inc
out
fwait
dec
mov
cli
push
inc
cmpsl
jg
notb
lret
cmp
jg
cmovl
mov
and
popa
loop
fidivrs
into
mov
jo
jle
lret
test
rcrb
dec
popa
iret
xlat
imul
mov
xor
mov
nop
inc
sbb
inc
add
xor
jno
or
cmp
pop
jle
xor
std
xlat
cmp
cs
inc
adc
ja
jp
sbb
mov
iret
sti
pop
jne
cmp
out
jno
in
sarl
mov
inc
jb
push
sbb
cmp
pop
mov
je
iret
mov
fisttps
popf
rol
outsb
pop
dec
std
adc
mov
mov
cmpb
jle
movl
call
movl
pusha
movw
push
lea
jmp
pushl
popl
movb
push
pushl
ret
jmp
ds
mov
sarb
addr16
xor
cmp
add
sub
jge
mov
jne
int3
mov
mov
movsl
fcompl
pop
bound
and
add
jb
mov
ja
repz
dec
sbb
movswl
mov
jo
xchg
inc
push
jns
aas
inc
add
xchg
das
sbb
xlat
popf
pop
ds
adc
inc
and
xchg
jne
adc
cmc
mov
insl
xlat
xor
testb
daa
lock
mov
dec
lcall
mov
adc
push
imul
push
and
xor
mov
mov
lret
pushf
test
push
mov
shld
add
sub
nop
loop
add
mov
gs
xor
pop
add
aam
xchg
out
adc
jo
movsb
cmp
push
mov
arpl
sub
push
or
inc
das
add
cwtl
pushf
popa
lods
dec
jne
ja
xchg
dec
outsl
pusha
lock
pop
xchg
rcll
ret
sub
into
xchg
or
mov
std
dec
mov
adc
gs
pop
nop
inc
xchg
adcb
fnsave
btc
jb
stc
xor
pop
sahf
iret
loope
sub
test
mov
push
incl
xlat
jnp
insl
sti
das
fisubrl
push
xor
pop
dec
jns
daa
sbbb
dec
in
jo
inc
jae
sbb
sub
mov
push
subb
out
fisubrs
sub
lods
fnstcw
pop
mov
inc
jl
pop
aad
lahf
mov
cmpb
mov
ja
push
mov
jnp
sub
shrl
shl
dec
lcall
xchg
xchg
inc
push
dec
push
mov
aas
push
cmpsb
lods
jae
xor
std
adc
mov
inc
jl
xor
lcall
testl
das
cmp
xchg
add
in
aad
jg
in
xlat
or
cmc
jnp
pop
mov
out
stos
sbb
lahf
lods
adc
test
test
addr16
and
arpl
cmp
subl
jb
pop
jecxz
cmp
pop
into
adc
adc
add
test
jmp
mov
jmp
outsb
add
fisttpll
into
mov
aaa
xchg
repnz
inc
sahf
inc
das
movsl
push
mov
sub
les
dec
inc
icebp
add
add
jle
popf
xchg
push
sarl
jnp
sub
pop
mov
mov
aaa
jp
mov
out
sahf
lds
lods
inc
sbb
sbb
mov
test
ds
addr16
notb
insb
mov
add
scas
icebp
std
adc
call
fidivl
cmp
iret
imul
or
dec
sti
xchg
push
sub
mov
cmp
xor
fs
and
dec
out
mov
or
cld
fdivr
or
xchg
enter
fs
orb
inc
subl
cmp
mov
xor
adc
mov
stos
imul
jl
cld
sub
outsl
outsb
inc
in
push
jbe
add
das
std
adc
inc
and
push
add
cmp
inc
and
adc
dec
loope
ljmp
shlb
add
mov
fs
jmp
sub
and
xor
mov
dec
cmp
outsl
sbb
adc
ljmp
mov
loope
test
enter
push
mov
fisttpll
xor
mov
sbb
add
pop
movsb
adc
in
cmp
fisubs
cmp
mov
jne
push
jno
lret
lret
out
dec
mov
mov
mov
jle
pop
fs
cwtl
into
xchg
xor
aas
jl
jl
stc
outsb
addr16
std
adc
fld1
stos
fdivrp
call
pushf
setae
mov
jmp
stc
cmp
sub
push
pushf
repnz
movw
push
lea
jne
clc
cmp
call
pushf
mov
pushl
mov
pushf
not
pushf
lods
stc
jmp
hlt
fcompl
insl
and
jne
gs
sub
lahf
movsl
jg
cmp
mov
push
sbb
inc
roll
sub
ja
fs
fnstsw
and
outsb
shr
mov
xlat
and
cld
in
jo
inc
gs
bound
xchg
int3
pop
ds
repnz
xchg
pop
mov
sbb
mov
fwait
into
fnsaves
push
lret
test
insb
sbb
push
cmp
imul
add
push
popf
testl
add
adc
xor
jo
int3
out
pop
sub
sub
bound
adc
or
lcall
aad
mov
ret
aaa
push
out
ret
mov
addr16
sub
cmp
enter
push
test
sub
rol
sahf
sub
sbb
pushf
and
inc
sbb
sbb
fimuls
sub
pop
pop
js
push
stos
out
sbb
mov
rol
jbe
xchg
sub
jl
sar
adc
cmp
sub
or
mov
jg
cmpb
pusha
lea
jne
lahf
bts
test
xor
aas
mov
jmp
pushf
push
movb
lea
call
jmp
pushl
popl
pusha
pushf
pushf
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
jb
mov
repnz
push
mov
outsb
fs
jl
or
loope
fnstsw
cld
addr16
das
lret
cmpsb
mov
dec
push
xor
mov
mov
divl
test
loope
nop
push
sub
std
out
std
or
xor
push
sahf
push
push
pop
cmp
mov
cmp
insb
dec
cmp
fmull
lds
ds
lcall
xchg
outsl
inc
sub
outsb
in
adc
xor
das
cmc
inc
cs
inc
pop
aam
pop
lods
or
aaa
inc
cli
push
push
out
mov
fbld
movsl
push
jne
and
push
cmp
mov
int3
cmp
imul
addb
test
pop
out
js
adc
mov
je
lahf
adc
cs
mov
repz
and
mov
popa
and
inc
xchg
pop
lds
pop
daa
shl
clc
stos
cltd
and
or
inc
mov
rcll
lods
dec
xchg
repz
sarl
pop
push
mov
or
mov
test
mov
xchg
push
mov
fidivs
mov
inc
pop
fdivs
addr16
loopne
call
filds
lock
inc
bound
add
inc
mov
push
ja
sbb
testb
mov
hlt
lahf
fcomip
clc
lods
es
les
adc
js
pop
inc
pop
in
mov
sti
xchg
lock
scas
mov
mulb
lret
in
xchg
enter
shll
cs
cmpsl
jg
pop
xchg
dec
xchg
out
shrb
lock
out
cld
sahf
fldcw
cmc
sahf
sub
inc
sbb
nop
scas
ljmp
dec
xor
inc
fists
jne
cmp
mov
ret
pop
pop
pusha
out
in
rolb
cmpb
cmp
lock
outsl
imul
repz
push
jb
cmp
ror
les
jl
stos
ljmp
cmp
push
popf
out
dec
shrl
fidivrl
xchg
xor
cwtl
out
cltd
xchg
aad
sub
dec
pop
push
pop
outsl
xor
pop
hlt
and
push
lods
leave
xor
in
test
mov
cltd
dec
add
adc
add
or
sti
imul
call
test
test
and
std
xchg
jb
fdivrl
fdivrl
adc
icebp
xor
loop
xchg
xchg
cmpl
ja
mov
popa
and
mov
addr16
out
jae
rep
test
cmc
jecxz
lods
icebp
cmp
scas
mov
and
and
cwtl
out
stos
daa
adc
bound
ret
stos
adcb
lcall
adc
cmpsl
icebp
pop
test
sbb
mov
outsb
dec
adc
loopne
lds
and
bnd
sarl
pop
in
mov
movsb
loop
mov
aad
push
loope
adc
adc
pop
and
fcmovnbe
repz
pusha
xchg
mov
imul
loop
sahf
aas
xchg
push
xor
loop
jo
adc
test
or
and
cmc
test
bt
jmp
push
push
pushl
mov
pushf
pushl
pushl
lea
jmp
push
jmp
bsf
neg
mov
bts
push
adc
movzbl
push
shr
setg
add
push
rcr
inc
push
btc
push
shr
xchg
mov
call
cmp
pusha
lea
je
push
lea
jmp
pusha
jmp
call
push
movl
movb
push
jmp
not
clc
call
jnp
std
sbb
loop
xchg
mov
dec
fbstp
mov
cmpsb
movsb
pop
sbb
mov
into
add
inc
lds
sub
pushl
mov
dec
jae
adc
movzwl
or
mov
bt
add
stc
call
lea
jne
lea
inc
shrd
shl
mov
cmp
sub
stc
shl
shrd
mov
cmp
sub
pusha
test
pusha
pushl
popl
mov
bt
pushf
cmp
pushf
push
movw
mov
lea
ja
or
sbb
sbb
call
add
rol
rcr
dec
mov
clc
cmc
pushf
and
call
pusha
xchg
movsbw
jmp
dec
inc
sub
ror
sar
shl
xchg
rcr
mov
adc
inc
push
mov
add
jmp
jb
pusha
not
pushf
lods
pushf
pushf
push
not
movb
inc
push
xor
jmp
pushf
std
enter
mov
xchg
xor
inc
mov
in
stos
cli
inc
inc
dec
fs
gs
mov
mov
adc
fldenv
lahf
call
shrb
or
lret
inc
push
xchg
lods
fistpll
xchg
js
sahf
outsb
sti
in
mov
dec
cs
mov
shr
or
or
cld
push
movsb
mov
addl
int3
inc
add
adc
sub
sahf
xor
std
adc
shlb
jp
push
add
jmp
jmp
pop
mov
dec
je
pusha
inc
cwtl
ds
rcll
push
pop
outsl
sbb
movsb
fistps
scas
fsubr
ret
inc
idivb
sbb
outsb
mov
xchg
lret
mul
xor
inc
fadds
pop
sub
shrl
test
das
sbb
mov
push
outsl
add
xchg
sub
cmp
in
in
sub
adc
add
leave
out
decl
andl
decl
xchg
ret
not
xchg
mov
setg
jmp
call
jmp
jmp
es
lret
push
xor
out
lea
push
dec
imul
sbb
pop
into
stos
test
push
jbe
mov
mov
pop
xlat
leave
inc
xchg
jmp
pop
push
pop
pop
and
aaa
pushf
and
leavew
add
inc
rorl
cmp
push
jmp
fisttpl
divl
and
push
mov
arpl
inc
gs
or
adc
push
inc
xchg
xchg
sahf
adc
loopne
and
add
pop
pop
mov
pop
push
sbb
iret
xchg
pop
sbb
cmp
movsl
dec
or
push
dec
sub
cmpl
call
int
add
add
or
movsl
dec
jg
out
xchg
adc
cmp
hlt
and
pop
push
ja
inc
enter
js
std
adc
inc
incl
sti
push
dec
neg
sbb
xchg
shld
or
bsr
mov
inc
ror
xor
ror
mov
stc
mov
btc
movzbw
mov
cmc
cmc
test
jmp
pusha
pushf
lea
je
pusha
sub
bt
call
pop
pushf
push
pushf
call
mov
xor
add
shl
stc
mov
stc
cmp
test
pushf
pushf
call
lea
jne
pushf
stos
mov
mov
pushl
lea
jmp
rclb
icebp
sbb
cmp
xchg
adc
cmc
sub
das
pop
sbb
jns
sti
clc
push
aaa
popa
jo
mov
cmp
lock
ret
mov
enter
cwtl
inc
call
fildl
jno
daa
cmp
sub
adc
jno
sar
cmpsl
sub
pop
cmp
in
div
jmp
enter
adc
in
mov
rcl
cmpsl
or
aaa
stc
xchg
pusha
out
pusha
adc
mov
mov
fistps
jne
int3
int3
ss
fwait
xchg
mov
test
hlt
std
adc
mov
jmp
loope
addr16
push
jmp
loope
dec
adc
sub
sbb
cmp
fs
aad
std
jnp
dec
mov
cmp
dec
sbb
xchg
sbb
dec
jge
jecxz
sbb
jge
ror
gs
sbb
movsl
jp
mov
std
inc
pop
icebp
mov
mov
sbb
cmpsl
aam
imul
mov
inc
lret
adc
sahf
xor
cmpsb
rep
push
lea
mov
mov
pushf
pushf
push
lea
jmp
pushf
jmp
out
wrmsr
push
fadds
ret
cmpsl
jb
mov
jno
mov
xchg
fdivrs
or
mov
cwtl
or
daa
inc
lods
loop
xor
push
mov
pop
cmp
std
adc
jecxz
adc
cmc
lahf
cmpsl
aam
mov
and
aad
lods
pop
idivl
nop
jge
fadd
mov
rcll
cs
xchg
lcall
add
fistpll
std
sub
xchg
and
mov
mov
push
arpl
or
lahf
pop
ja
sub
aad
jmp
mov
mov
cmpsl
call
and
inc
mov
mov
test
xchg
mov
movsl
cmpsb
cmp
mov
add
jbe
rol
push
std
adc
dec
or
movl
pushl
lea
jmp
mov
cwtl
imul
dec
and
push
sub
xchg
xor
outsl
jp
lea
gs
leave
shrl
shll
inc
cld
enter
adc
in
clc
pop
or
rcrl
xor
test
jge
mov
ja
mov
sarl
gs
sahf
out
fiaddl
fimull
stc
test
fdivl
outsl
cmpsl
addr16
add
pop
xchg
inc
cmp
fcoms
out
inc
hlt
sbbl
mov
dec
mov
pushf
mov
push
xchg
in
jae
add
push
cmp
shll
push
std
adc
or
call
movb
movl
pushf
pusha
call
stc
jmp
in
pusha
test
jle
mov
pop
mov
daa
or
rorl
pop
repz
ss
sub
jl
or
ljmp
push
sub
out
fidivs
cltd
sub
cmp
xor
sbb
fnstsw
roll
push
outsb
data16
pop
push
mov
fwait
sbb
or
jecxz
dec
popa
arpl
jle
mov
cwtl
rcl
pop
jne
or
adc
fs
jbe
bts
mov
shr
add
dec
movzbl
mov
movsbw
mov
test
add
bt
shl
movl
call
lea
je
movzbw
movzbl
mov
lea
not
movzwl
movsbw
push
pushl
not
lea
pushf
movsbw
pusha
mov
pushl
lea
call
pusha
movb
pusha
lea
jne
mov
mov
push
pushf
pushf
mov
lea
jmp
iret
jno
xchg
mov
mov
or
or
sbb
int3
dec
mov
adc
push
enter
xlat
clc
sbb
fcoml
push
and
imul
jecxz
inc
pop
cmpsl
rol
notl
or
out
dec
sti
push
mov
fildl
inc
sbbb
js
sbb
pop
in
cli
aam
mov
mov
fwait
mov
cmp
lret
test
ret
daa
pop
pop
push
std
adc
fs
jb
bt
jmp
jmp
add
mov
movsbl
mov
rcr
sar
lea
add
btc
bsr
mov
shr
bsf
mov
bsr
add
jmp
test
jmp
sub
dec
test
cmp
lea
pusha
sub
cmp
clc
cmc
call
push
pushf
movl
mov
movb
pushl
pusha
lea
jmp
add
movw
movzwl
movzbw
neg
pop
mov
cmp
pushf
add
call
rcl
mov
pusha
cmp
pushf
cmc
sub
mov
jmp
inc
pusha
popf
add
push
pop
mov
pop
pop
cmpb
dec
push
jecxz
dec
xchg
outsl
cwtl
lock
xor
or
repz
inc
movsb
or
and
adc
or
xlat
inc
shl
and
rcll
xor
xlat
mov
add
cmpsb
mul
test
scas
repnz
dec
je
xor
xchg
pop
int
inc
pusha
push
sub
and
xor
out
mov
std
rcrl
and
dec
cmpsb
pop
imul
arpl
pusha
mov
ljmp
mov
and
std
dec
jmp
pop
mov
mov
test
cmp
xchg
xchg
mov
int
fs
loopne
jbe
bound
test
xlat
mov
lods
or
xor
sub
xor
popa
pop
xchg
fs
cmpsb
xor
mov
ds
cltd
test
repnz
scas
das
inc
jbe
xchg
mov
inc
mov
adc
rorb
xchg
psrad
jns
iret
xchg
test
repz
push
mov
dec
fdivl
loopne
hlt
imul
or
or
adc
push
icebp
push
adc
add
int
sub
mov
pop
movsl
jne
push
xor
inc
sbb
scas
adc
sub
add
out
mov
or
add
shrb
jg
das
inc
rcrb
das
mov
in
pusha
push
lods
daa
xchg
sbb
lods
mov
mov
lret
mov
ret
cld
mov
nop
rcrl
or
rcrb
cld
pushf
push
in
test
sbb
adc
dec
stc
cmp
xchg
xchg
lock
aas
scas
xchg
add
icebp
push
lods
cltd
add
rcrb
lret
out
jle
pushf
xchg
lea
cli
cmp
int3
mull
jmp
ss
hlt
push
sahf
mov
fdivrl
adc
mov
inc
divl
cs
push
and
daa
ds
xor
loopne
loope
pop
imul
dec
shrl
aaa
xchg
dec
shlb
loop
testl
fists
xor
fisttpl
fimull
stos
xor
enter
test
fwait
xchg
shll
test
xchg
jae
inc
shll
cmp
add
and
inc
sub
push
push
pop
lcall
mov
pop
sub
dec
mov
cli
xchg
jge
or
scas
cvttps2pi
dec
dec
jbe
adc
xchg
inc
xchg
fwait
lea
jge
push
bswap
lea
pusha
jmp
call
push
std
cmpsb
sti
pop
xor
rol
lds
test
adc
ficoml
push
ret
adc
aad
sti
in
orl
xlat
mov
sbb
push
loope
adc
bound
daa
xchg
sub
mov
stc
and
mov
jmp
idivb
sbb
fisttps
aam
mov
call
sub
or
lea
jbe
lods
stc
jle
not
bt
pushf
test
sub
push
not
pushf
inc
bt
test
cmp
push
cmp
pushf
lea
jmp
lea
jne
pushf
movzbl
mov
pusha
movw
lea
jmp
jmp
mov
movl
pusha
pusha
lea
jmp
rep
pusha
mov
mov
jmp
lea
mov
push
pushf
pusha
pushl
ret
lea
call
jmp
xchg
clc
rol
bsf
add
mov
pusha
test
mov
pushl
sub
pushf
pushl
rep
lea
pop
not
mov
movw
pushf
pushf
lea
jmp
call
jmp
stc
cmp
or
movb
pushf
jmp
cmp
pushf
push
add
pusha
pushf
pushl
mov
pushf
pushf
pushf
lea
jmp
mov
xchg
cltd
fildl
rolb
mov
fcoml
jg
xchg
lds
ficompl
dec
or
ficompl
sti
js
in
push
jae
push
repz
repnz
lret
sub
fadds
loop
mov
daa
inc
pop
insb
pop
and
inc
cld
clc
adc
push
es
push
fldcw
mov
nop
cld
push
pop
sub
or
lcall
into
jmp
fdivp
push
lret
mov
mov
pop
fdiv
cltd
sbb
push
cmp
pop
pushl
push
lea
je
stc
cmp
stc
add
test
call
not
push
cwtl
lea
push
movl
push
mov
pusha
pusha
mov
push
pushl
ret
jmp
push
repz
out
scas
fst
rep
les
fisubl
sarb
cld
addr16
and
inc
rcrb
fwait
les
inc
icebp
pop
daa
loopne
push
loopne
fbld
insl
mov
dec
add
xor
inc
lret
push
pop
test
push
xchg
mov
fs
jbe
inc
aas
sbb
push
jae
sti
jmp
stos
push
add
std
adc
xlat
movsb
mov
pop
jne
push
or
mov
cmp
pop
and
dec
rcl
cmpsl
jno
or
xor
adc
or
mov
popa
in
cli
rol
mov
out
sahf
inc
adc
pop
loop
clc
cmp
test
rcll
sbb
jge
dec
std
adc
push
xchg
or
or
pop
inc
sub
int3
test
fwait
imul
mov
or
xchg
jge
xchg
decl
fldlg2
cmp
sub
fsubrs
fcmovnu
in
pop
test
lret
into
mov
xor
jmp
enter
fstpl
aaa
dec
ficoml
add
iret
lahf
pop
fsts
out
or
cltd
sbb
fnstenv
jbe
insl
bound
xchg
xchg
and
ret
leave
lcall
std
adc
jmp
add
push
and
add
xchg
das
add
add
add
add
add
addb
add
mov
add
add
leave
or
add
add
push
mov
add
add
add
or
leave
repnz
rcl
or
fisubs
or
scas
orl
add
add
add
add
pop
mov
je
inc
pop
imul
gs
shr
push
mov
add
mulb
jmp
push
loop
jge
int
and
pop
xchg
xorl
out
dec
addr16
fstpl
inc
mov
sub
jmp
cs
addr16
scas
cmp
mov
dec
add
testb
loopne
mov
jo
in
sub
mov
out
lahf
jmp
data16
aam
and
in
xorb
enter
adc
movzbl
pop
pop
pushf
push
movsbw
pop
mov
xchg
push
mov
push
mov
jmp
pushf
movb
pushf
lea
jb
test
jb
cmc
bt
cmp
pushf
lea
ja
ja
call
jmp
pushl
popl
pushf
pushf
movb
pushl
ret
mov
cmc
push
clc
call
loope
xchg
test
icebp
or
loop
mov
xor
jmp
xchg
mov
mov
and
leave
jecxz
loopne
jecxz
push
xchg
loop
fcoml
fiaddl
pop
stc
ljmp
jmp
sahf
test
sbb
call
mov
in
xchg
aad
std
adc
rclb
out
pushf
call
js
inc
mov
jge
inc
std
push
jbe
dec
or
out
sti
lock
xchg
stos
movhps
and
add
dec
push
in
loopne
mov
pushf
andb
or
daa
loop
stc
enter
test
arpl
mov
sbb
cmc
jno
mov
into
add
jp
mov
dec
mov
add
adc
movsb
addr16
push
jecxz
in
jecxz
mov
mov
mov
or
pop
insb
and
cwtl
pop
call
adc
adc
and
inc
mov
cmp
mov
and
jmp
mov
loopne
mov
sub
sbb
jbe
jne
sub
sub
push
adc
addr16
dec
adc
into
jg
std
bound
test
pop
dec
imul
int3
xchg
loope
addr16
xchg
cmc
int
xchg
mov
scas
mov
dec
test
sbb
pop
jae
int3
shr
cmpsb
jne
cmp
lea
pusha
mov
xchg
xor
cmp
push
movsb
stc
loope
imulb
lods
inc
push
sbb
jne
popl
pushl
lahf
mov
pusha
movl
bswap
pushl
push
push
lea
pushl
movl
jmp
cmp
jb
cmp
xor
test
xlat
mov
aaa
add
add
add
call
add
sub
add
in
in
aam
xor
mov
mov
mov
mov
shlb
push
loop
xor
js
loopne
mov
xchg
push
int3
ds
aad
std
dec
lcall
mov
sub
scas
stos
mov
gs
inc
js
adc
cmp
mov
sub
mov
aaa
addr16
sbb
stos
jo
scas
aam
or
loop
sti
jo
xorb
push
sbb
mov
ljmp
mov
adc
shlb
arpl
test
popf
lahf
daa
stos
pop
xchg
lret
aam
push
sahf
aad
jp
and
cmp
xor
ret
fwait
pop
pop
dec
fidivl
or
lods
out
xor
and
nop
mov
hlt
sub
pop
cmp
lods
fdivr
adc
add
imul
jae
jmp
dec
clc
cmc
loop
std
adc
test
mov
cmpsb
stos
mov
push
mov
lcall
hlt
mov
stc
sahf
jns
jae
push
xchg
call
mov
add
mov
daa
insb
mov
xlat
jne
sub
and
xor
imul
fwait
jb
shll
enter
stos
cmp
or
xlat
or
adc
mov
sub
pushf
pushf
xchg
movsbw
cmc
mov
rcl
ror
btc
push
neg
shr
xor
push
rcr
shr
sar
adc
push
dec
bswap
lea
bsr
push
sub
push
ror
bt
pushf
inc
pushl
popl
cmp
shr
sar
adc
push
bsr
cmp
shl
lea
mov
cmp
call
jmp
add
jmp
movsbw
inc
movzbl
not
dec
shl
pusha
shld
mov
clc
jmp
cmpl
jmp
sar
mov
pusha
xor
mov
pushl
pusha
bswap
mov
pushl
dec
pushf
lea
jmp
movb
pushf
pusha
add
pushf
pushf
popl
pushf
pushl
popl
pushl
pushf
lea
jmp
movb
clc
add
push
call
pushl
popf
push
pushf
lea
jmp
pushf
bsf
rcr
movzbw
mov
cmp
sub
call
cmp
cmp
clc
add
push
lea
jmp
call
pusha
pushf
call
bt
cmp
mov
stc
stc
jmp
repz
popl
pushf
mov
movb
cmc
xchg
call
add
pushf
mov
pusha
push
lea
jmp
neg
mov
xor
mov
jmp
pushf
bt
mov
test
test
shr
rcl
mov
neg
rol
push
mov
sar
push
pusha
mov
sub
shr
and
and
mov
push
mov
shl
cmp
btc
pushf
pushl
popl
shr
inc
clc
jmp
pusha
call
rol
mov
test
add
push
push
mov
pusha
lea
jmp
jmp
mov
movw
call
push
call
pushl
popl
movb
push
pushf
lea
jmp
call
call
test
shr
jmp
pusha
push
jmp
jmp
xor
pushf
push
call
bt
stc
cmc
push
clc
jmp
jmp
pushf
jmp
das
push
btc
add
jge
notl
bswap
mov
movzbw
mov
cmc
sub
push
cmc
and
pushf
pushf
popl
call
jmp
add
pushf
aaa
mov
pushf
pusha
pushf
xchg
stc
pushf
add
stc
push
push
call
call
sub
pushf
push
pushf
dec
movw
call
pushl
popf
pushl
lea
jmp
mov
pushl
jmp
cmc
sub
jmp
cmp
xor
call
mov
jmp
pushl
mov
jmp
call
shl
shrd
btr
mov
inc
cmc
mov
push
stc
add
pushf
push
mov
mov
push
push
pusha
lea
jmp
call
pushl
popl
pushf
pushl
pushl
movl
lea
jmp
stc
shl
pushf
shl
mov
bt
cmp
clc
xor
pusha
pushf
xor
push
pushl
dec
push
ror
jmp
pusha
dec
mov
pushf
mov
pushl
lea
jmp
test
btr
mov
ror
cmp
sub
jmp
pushf
cld
jmp
add
pusha
mov
movw
pushl
mov
pushf
mov
pushf
pushl
lea
jmp
jmp
call
mov
bswap
add
mov
test
add
pushf
pushl
lea
jmp
mov
movw
mov
movl
mov
lea
jmp
btr
movsbw
rol
shr
bt
add
bsr
bswap
push
bt
xor
rcl
rcr
rol
shrd
and
neg
rol
rol
mov
cmc
stc
test
add
pushl
call
movb
mov
mov
push
pushf
call
mov
pushf
lea
jmp
pushl
popl
or
movl
ror
stc
test
mov
pusha
xor
pushf
call
xchg
mov
mov
cld
mov
movsbl
push
mov
lea
pusha
call
jmp
pushl
movw
pushf
popl
pusha
call
pushf
popl
jmp
shrd
mov
cmp
call
stc
ror
and
neg
or
sub
movsbl
movsbw
mov
movzbl
mov
pushf
movzbl
mov
call
not
dec
add
push
and
clc
shld
push
xor
push
ror
push
xor
rcr
push
push
shrd
and
pushl
popl
lea
push
call
mov
stc
clc
mov
add
or
cmc
mov
rol
movsbw
adc
call
dec
pushf
movb
lea
jmp
call
sub
push
rcl
movzbl
clc
bswap
push
shld
cmp
push
shr
push
cmc
pop
push
cmc
inc
push
lea
and
btc
pushl
movsbw
stc
bswap
push
bswap
shr
adc
mov
clc
pusha
cmc
test
xor
jmp
movb
test
add
push
bt
add
jnp
add
call
pushl
mov
push
movb
lea
jmp
push
pushf
mov
pushf
mov
call
mov
cmp
cmc
xor
push
bswap
pushf
pushf
dec
pushl
pushf
pushf
push
lea
jmp
pushf
pushf
pushl
popl
movb
movw
mov
mov
lea
jmp
pushf
pushl
mov
pushf
lea
jmp
sub
lea
clc
cmc
cmp
cmp
push
movl
lea
ja
shl
mov
sbb
lea
xchg
neg
bsr
not
sub
adc
btr
bsr
movsbw
lea
bts
jmp
push
mov
repz
popl
call
call
sbb
mov
movsbw
dec
rol
inc
mov
clc
push
call
pushf
popl
movb
pushl
popl
pusha
pushf
push
pushl
lea
jmp
push
jmp
push
test
cmc
mov
jmp
dec
pushf
lea
jmp
call
jmp
pushf
call
mov
push
mov
stc
call
sub
push
btc
movzbl
btr
ror
stc
xor
stc
and
inc
xor
movzbw
call
call
jmp
pushf
mov
pushf
pushf
lea
jmp
or
mov
stc
sub
rcr
add
movsbw
movsbw
rol
pusha
inc
bsr
xor
cmp
add
bswap
rcr
bsr
shr
add
movzbw
movzbw
sub
not
mov
pusha
add
jmp
mov
pop
pushf
sar
add
push
dec
push
neg
mov
bswap
btc
push
not
push
and
bt
push
push
sar
pushl
popl
shld
call
cmp
push
pushf
xchg
pusha
sar
ror
shl
mov
bsf
pushf
sub
push
sbb
movzbw
push
bswap
stc
cmc
push
cmp
movsbl
btr
lea
push
shld
sub
push
pushf
shl
stc
pushl
popl
rcl
ror
push
push
rol
sar
mov
call
call
pusha
pushf
lea
jge
mov
push
pusha
lea
jmp
not
sbb
rdtsc
movw
sub
call
pushf
pusha
jmp
mov
pushf
pushl
ret
cmp
setp
movzbl
sbb
xor
stc
add
sub
test
neg
not
shl
bts
add
shr
shld
movzbw
xor
btr
shr
bswap
xor
rol
stc
mov
jmp
jmp
rol
bts
mov
and
add
pusha
mov
jmp
call
mov
push
pushl
ret
bt
mov
bts
shl
movsbw
mov
push
adc
call
dec
pushl
movb
pushf
movb
lea
jmp
call
pushl
jmp
push
dec
pushf
pushf
pushl
pusha
lea
jmp
call
movb
pushf
divl
pushl
call
pushf
pushl
popl
movb
mov
lea
jmp
pushl
popl
movw
push
pushf
mov
lea
jmp
jmp
seto
mov
cmp
pushf
jmp
seto
pushf
call
call
dec
mov
mov
movw
lea
jmp
pushf
push
pusha
idivl
movw
call
mov
pushl
popl
movl
movw
movb
lea
jmp
bt
stc
rol
push
inc
clc
cmp
cmp
push
xor
pushl
stc
add
pusha
bt
movb
mov
stc
call
pusha
shrd
pushf
jmp
bswap
pushf
call
call
pushf
xchg
bt
dec
shld
rcr
mov
sub
lea
push
cmp
movsbw
push
mov
clc
bswap
shld
push
and
xor
push
btr
sar
pushf
mov
shl
btc
pushl
add
pushf
xor
movl
jmp
call
mov
jmp
pushf
bswap
call
pusha
movb
sub
pusha
call
movb
pushf
popl
pusha
pushl
popl
push
movb
pushl
lea
jmp
repz
popl
push
pushl
call
mov
mov
pusha
pushf
call
push
bswap
jmp
stc
jmp
pushf
push
dec
call
dec
push
mov
pushf
movl
lea
jmp
push
pushl
popl
movl
pusha
lea
jmp
clc
or
rcl
rol
mov
neg
rcl
mov
cmp
stc
pusha
cmp
sub
push
shr
call
mov
pushf
add
push
jmp
pushf
popl
mov
pushl
popl
pushf
pushf
mov
lea
jmp
push
bts
btr
movzbw
pushl
call
movb
pushf
repz
popl
push
stc
call
clc
mov
sets
push
or
mov
cmp
cmc
add
push
mov
pushf
push
push
lea
jmp
call
mov
call
clc
xor
pusha
lea
jb
pusha
bswap
pusha
dec
movb
lea
jmp
jmp
call
sub
mov
push
jmp
shr
mov
mov
push
pushf
pushf
pushf
popl
jmp
lea
pusha
movsbw
mov
pusha
push
movw
lea
pushf
pushf
lea
jp
pusha
mov
push
pushf
lea
jmp
mov
stc
clc
stc
xchg
clc
mov
bsr
pusha
lea
push
movzbl
shl
test
sar
push
btc
and
inc
test
push
shl
push
shld
push
pushf
clc
pushl
popl
sub
shl
push
mov
shld
pushf
movsbw
mov
call
pushf
xchg
call
call
sub
pushl
mov
mov
movb
pushf
mov
lea
jmp
bswap
dec
dec
add
bswap
xor
test
shrd
mov
shld
sub
cmp
stc
bsr
mov
seto
mov
or
bts
pushf
lea
add
lea
bt
neg
cmp
mov
bsr
test
bts
sbb
add
push
pusha
dec
dec
not
not
setno
ror
bswap
xor
bsf
and
movzbl
bswap
add
movzbl
jmp
pushf
popl
push
pushl
pushl
popl
movl
pushl
pushl
pushl
lea
jmp
lea
lea
mov
clc
jmp
cmc
sub
cmp
bt
call
sub
pushf
stc
pushf
shl
call
dec
movb
movb
lea
jmp
jmp
call
mov
bswap
mov
dec
mov
pushl
lea
jmp
rcr
pusha
sbb
mov
rcr
bsr
test
adc
mov
call
movb
bswap
pusha
call
pushf
pushf
jmp
pushl
mov
mov
pushf
pusha
mov
pushf
pushl
movl
push
lea
jmp
rcl
rcr
sete
notl
and
mov
push
sub
stc
test
test
clc
and
pushf
pusha
jmp
shld
mov
cmc
add
pusha
mov
pushf
push
lea
jmp
jmp
pushf
clc
pushl
popl
cmc
stc
test
test
add
bt
jno
popf
pushf
push
lea
jmp
pushf
pusha
xor
pushf
bswap
push
pushf
dec
push
push
pushf
lea
jmp
pushf
shld
aad
mov
test
clc
xchg
jmp
jmp
shr
movl
btr
ror
mov
cmc
pusha
xor
pusha
bswap
jmp
pushf
push
bswap
pusha
jmp
neg
push
cmp
mov
bt
bt
stc
jmp
mov
pushf
lea
jmp
jne
repz
clc
push
pushf
mov
btr
jmp
call
pushf
call
jmp
bt
push
clc
pushl
movsbw
push
sar
mov
cmc
jmp
bt
call
mov
pusha
pushf
pushl
ret
mov
test
xor
movw
pusha
bswap
movw
pushf
mov
dec
push
movb
pushf
mov
lea
jmp
call
jmp
pushf
add
jmp
call
and
pusha
call
call
call
call
call
cmp
mov
cwtl
das
aad
btr
mov
stc
test
cmp
cmp
sub
bt
imul
pusha
jmp
pushf
mov
bt
pushl
pusha
sub
lea
jbe
pusha
clc
add
pushf
call
mov
dec
pushf
pushl
lea
jmp
mov
jmp
pushf
popl
jmp
pusha
call
stc
cmc
pushf
shl
mov
add
das
aaa
pop
lea
pop
shld
shl
sar
lahf
pop
ror
pop
movzbw
not
bsr
or
pop
bswap
bsr
rcl
pop
bswap
xadd
not
adc
pop
pushf
mov
pushl
inc
test
test
mov
mov
rcr
ror
btc
mov
test
clc
pusha
pushl
pushl
popf
pushf
pushl
ret
dec
pushf
movb
movb
lea
jmp
or
mov
lea
je
push
xor
cmp
xchg
stc
mov
cmp
cmc
pusha
stc
sub
pushf
pusha
mov
jmp
pushf
pushf
cmc
sub
cmc
push
call
pushl
popl
pushf
pushf
mov
pushf
lea
jmp
and
neg
adc
shrd
mov
setg
dec
mov
cmp
not
cmc
not
push
and
pushf
mov
pusha
call
mov
mov
mov
jmp
pusha
xchg
ror
shrd
stc
and
mov
xor
add
push
bt
stc
push
add
push
shrd
sub
sar
push
cmc
sub
inc
push
and
bsf
xor
pushl
stc
add
dec
push
test
push
pushl
jmp
call
pushl
popl
push
lea
jmp
stc
add
clc
sub
pushf
jmp
test
bt
xor
pushf
bswap
lea
jg
pusha
dec
push
lea
jmp
mov
mov
add
pushf
jmp
clc
xchg
push
shl
mov
shld
shl
lea
push
pushf
push
btc
mov
inc
bsr
mov
not
push
xor
btc
cmc
push
movsbw
bsr
sar
rcl
pushl
sar
bsr
push
rcl
rcl
movzbw
mov
push
movb
test
clc
xor
call
pushl
mov
pusha
cmc
mov
movsbw
adc
ror
mov
call
dec
pushl
lea
jmp
bsf
bswap
push
inc
xor
not
movsbw
push
sar
rcl
stc
sar
push
bsf
push
shl
push
rcl
stc
push
mov
pushl
bsr
adc
rcl
btc
push
push
btc
btr
rcr
mov
cmp
bt
xor
pusha
push
jmp
pushf
pusha
mov
mov
pushl
pushf
pushl
lea
jmp
cmc
std
cmc
popf
pusha
mov
mov
lea
jmp
cmp
mov
pushf
clc
pusha
xchg
movw
add
btc
movzbl
mov
shrd
sub
push
inc
push
mov
rcl
shr
pushf
mov
dec
btc
adc
stc
push
test
push
adc
pushl
call
add
pushf
mov
movl
pushl
movb
movb
lea
jmp
pusha
jmp
call
mov
jmp
xadd
cmc
movsbw
adc
mov
cmc
bt
mov
cmc
clc
not
clc
not
test
sub
jmp
movl
movsbw
mov
mov
clc
cmc
xor
jmp
pusha
pushf
repz
popl
cmp
stc
mov
test
cmc
xchg
cmc
adc
mov
cmp
btr
add
push
movzbw
bt
add
shl
push
bt
push
rcr
movzbw
jmp
mov
push
pusha
mov
pushf
lea
jmp
mov
pushf
stc
cmp
jmp
mov
pushl
pushf
popl
call
das
shld
call
cwtl
pushf
push
push
mov
pushf
pushl
push
call
call
lea
jnp
mov
push
push
pushf
popl
push
call
mov
stc
cmp
mov
test
mov
not
push
inc
neg
push
jmp
pushf
jmp
xor
movb
call
push
inc
mov
test
and
pusha
pushf
cmp
cmp
pushf
lea
jne
xor
xorb
movsbl
pop
pusha
pusha
pushf
pushf
lea
jmp
aam
call
aad
daa
bts
mov
cmp
sub
pushf
call
push
dec
push
lea
jmp
lea
mov
push
jmp
jmp
push
and
clc
stc
pusha
mov
xor
jmp
pushf
popl
call
pushf
rep
pushf
stc
std
mov
shld
neg
mov
call
pushf
mov
pushf
push
pusha
pushf
popl
mov
jmp
rol
stc
mov
sub
jmp
pushf
mov
pusha
pushl
movb
pushf
lea
jmp
push
repz
popl
stc
call
jmp
mov
mov
or
pusha
cmc
shr
mov
call
sar
pushl
popl
movsbw
shrd
inc
bt
push
lea
pushf
rol
mov
stc
mov
xor
call
pushf
call
rol
shl
setge
add
lea
push
dec
sar
xor
btr
adc
xor
rol
and
adc
bts
mov
pushf
clc
sub
pusha
call
mov
pushf
push
call
pushf
pushf
mov
mov
push
lea
jmp
push
push
push
pushf
popl
pushf
movw
jmp
mov
jmp
mov
shld
sub
push
stc
push
mov
shr
call
push
mov
push
pushf
mov
movb
lea
jmp
aaa
mov
call
aaa
mov
dec
mov
jmp
call
push
lea
cpuid
cmc
pusha
push
sub
jmp
mov
pushl
pushf
popl
movw
call
sub
mov
pushf
mov
pushl
push
lea
jmp
pushf
push
call
mov
pushf
jmp
bt
mov
test
pushl
test
push
mov
rcl
or
mov
sbb
btr
sbb
and
sub
push
xor
push
shr
push
bswap
rcl
push
ror
push
rol
add
or
cmc
pushl
and
push
bts
cmc
shl
jmp
or
mov
pusha
add
jmp
adc
rcl
and
aaa
mov
movzbw
xadd
bsf
stc
mov
pushf
adc
mov
call
mov
jmp
dec
stc
cmc
test
pushl
bswap
pushf
call
xor
jmp
mov
mov
stc
sub
pushf
pusha
mov
pusha
lea
jmp
btr
mov
jmp
lea
jne
jmp
and
push
mov
rol
shrd
push
movsbl
shr
bt
push
bt
pushf
mov
lea
bswap
shl
push
adc
bsr
movzbl
push
test
bsr
call
pusha
mov
movl
repz
popl
stc
mov
jmp
call
dec
mov
dec
bswap
rcr
lea
rcl
ror
clc
not
or
sub
rol
pusha
movsbw
bsr
xor
adc
rcl
rol
movzbl
cmp
test
bt
mov
movb
test
jmp
add
jmp
adc
cmc
das
shld
mov
add
push
movb
mov
bt
cmc
call
jmp
pushf
sub
test
neg
cmp
clc
stc
sub
test
add
jmp
pushl
xor
cmc
sub
pushl
dec
movl
pushf
pushl
mov
movw
push
pushf
push
lea
jmp
pushl
popl
pushf
pushf
lea
jmp
pushl
popl
push
lea
jmp
sub
sbb
pusha
movzbl
clc
push
test
movb
add
mov
stc
add
push
lea
jb
cmc
cmc
rol
push
mov
inc
clc
mov
xor
pusha
test
cmc
add
pushf
cmc
mov
cmc
mov
stc
clc
mov
pushl
sub
jmp
push
pusha
bswap
mov
pushf
dec
movb
lea
jmp
bswap
pushl
pushf
pushl
jmp
jmp
rcr
movzbl
stc
stc
bt
pusha
xor
test
bt
xor
jmp
push
push
pusha
repz
popl
jmp
jmp
mov
mov
pushf
movb
mov
pushf
mov
pushf
popl
mov
pushl
popl
movw
lea
jmp
add
pushf
add
call
mov
mov
pushf
pushf
mov
lea
jmp
pushl
ror
push
bt
test
xor
pushf
test
cmc
bt
cbtw
push
clc
cmp
test
cwtl
test
stc
call
bswap
push
push
push
dec
movl
mov
mov
movb
lea
jmp
pushl
pushl
repz
popl
jmp
call
mov
pushf
lea
jmp
jmp
bswap
pushl
dec
push
lea
jmp
lea
jo
pusha
pushl
popl
pushf
pushf
mov
lea
jmp
xor
or
mov
bt
call
pusha
repz
popl
call
movl
dec
pushl
xor
clc
cmp
clc
stc
mov
mov
cmp
call
cmp
sub
mov
mov
push
mov
pushl
lea
jmp
cwtl
cmp
call
jmp
mov
bswap
mov
call
shld
push
movb
mov
push
movb
call
bswap
push
jmp
pusha
call
repz
popl
test
mov
call
pushf
bswap
movb
movw
dec
mov
pushl
mov
lea
jmp
jmp
call
clc
movb
xchg
jmp
stc
push
xor
pusha
call
add
add
jmp
pushf
pushl
popl
pushf
lea
jmp
mov
movw
mov
lea
jmp
dec
movb
lea
jmp
pusha
pusha
pushf
dec
bt
push
test
pushf
xor
test
jmp
pushl
xor
pusha
call
sub
movzbw
mov
pusha
jmp
mov
ror
shr
bts
bt
push
test
xor
pusha
mov
bswap
and
or
add
mov
shr
mov
cmc
mov
neg
bsf
add
or
pushl
popl
bswap
or
movl
and
movsbw
mov
cmc
pushf
pusha
clc
xor
call
push
pushl
repz
popl
push
bt
pushf
test
mov
cmc
mov
bsr
add
mov
btc
movzbw
not
push
shrd
shld
test
push
bsr
shld
bsf
neg
push
movsbw
sbb
cmp
push
bswap
not
push
clc
push
pushl
popl
rcr
sar
clc
push
sbb
movzbw
bsf
mov
jmp
jmp
pushf
movl
call
test
mov
pusha
mov
jmp
rol
aaa
mov
setg
mov
pusha
push
add
jmp
clc
add
clc
jmp
pushf
pusha
bswap
call
movb
lea
jno
rep
test
cmp
pushf
bt
mov
std
not
and
mov
pushf
call
call
call
mov
pushf
lea
jmp
call
push
lea
jge
pusha
repz
popl
pusha
mov
stc
clc
pushf
xchg
shr
not
mov
lea
sbb
bsf
sub
push
shr
call
inc
movl
bt
pusha
sub
mov
jmp
bt
stc
mov
add
mov
bt
stc
add
call
pushf
push
pushf
mov
movb
pushf
push
lea
jmp
jmp
bswap
pushf
jmp
pushf
popl
pushl
jmp
call
mov
pushf
mov
push
push
pushl
lea
jmp
mov
pop
pusha
pushf
mov
jmp
lea
sub
rcl
mov
rcr
cmp
rcl
add
call
jmp
push
call
sbb
bt
mov
pushf
cmp
cmc
xor
stc
test
pushf
add
cmc
cmc
pusha
mov
neg
cmc
add
je
xor
call
lea
jne
test
xor
pushf
call
test
mov
bswap
push
not
movsbw
push
btc
not
mov
pushl
sub
shl
push
jmp
call
push
push
call
push
repz
popl
push
bt
bt
mov
test
pushf
pusha
pusha
xchg
bts
clc
mov
test
add
push
cmc
bsf
push
and
movsbl
dec
push
shl
bts
sar
rcl
push
jb
shl
inc
ror
push
shl
inc
shld
shl
pushl
dec
inc
not
push
rcl
bsr
mov
bt
xor
jmp
movl
bswap
pusha
pushl
call
push
shl
pushf
lea
jle
mov
call
ror
pushf
sub
pushf
neg
cmp
call
push
jmp
lea
mov
clc
push
cmp
shl
rcr
cmp
push
cmp
push
pusha
ror
pop
shl
pushl
popl
movl
movl
movzbw
rcl
mov
stc
jmp
mov
cmc
clc
pusha
cmc
sub
jmp
stc
add
jmp
call
dec
push
pushf
lea
jmp
lahf
mov
pusha
jmp
btc
push
mov
stc
lea
push
ror
shr
neg
push
inc
bt
bswap
call
pusha
jmp
rol
sar
call
stc
jmp
repz
popl
stc
clc
jmp
mov
pushf
mov
push
lea
jmp
movsbl
mov
movzbl
seto
movzbw
mov
call
jmp
pushl
call
movl
jmp
and
mov
shl
test
pushf
call
mov
mov
pushf
mov
lea
jmp
pushf
pusha
mov
pushf
lea
jmp
mov
jmp
mov
sub
bts
push
jmp
pusha
push
call
bt
bswap
clc
pushl
sub
call
xlat
rcrb
mov
fstpl
mov
xlat
sbb
inc
xlat
sbb
lahf
stc
sbb
xchg
rcrb
mov
call
sbb
mov
aad
mov
in
mov
fcompl
mov
jecxz
mov
out
mov
rcrl
mov
rcrl
mov
aad
mov
rcrb
mov
clc
sbb
jcxz
mov
call
sbb
mov
out
sbb
mov
sbb
cmc
ficomps
mov
into
sbb
pop
fistps
mov
iret
sbb
mov
stc
sbb
or
sbb
and
sbb
aas
rcrb
mov
in
sbb
rcrw
mov
rcrl
mov
sbb
jmp
iret
sbb
in
mov
xlat
sbb
rcrl
mov
rcrb
mov
call
sbb
loope
sbb
mov
sbb
ret
mov
loop
mov
fstpl
mov
xlat
sbb
cmc
in
mov
rcrl
mov
iret
sbb
mov
int
mov
aad
mov
out
mov
rcrl
mov
rcrl
mov
icebp
sbb
inc
in
mov
rcrl
mov
jecxz
mov
repnz
lret
mov
ficompl
mov
fstps
mov
into
sbb
add
sbb
sub
sbb
loope
sbb
fucom
sbb
into
icebp
sbb
daa
out
sbb
jmp
sbb
outsl
fistps
mov
into
sbb
rcrw
mov
rcrl
mov
in
mov
fstpl
mov
call
sbb
inc
fstpl
mov
xlat
sbb
lahf
stc
sbb
sub
fcompl
mov
call
sbb
lahf
stc
sbb
daa
out
sbb
sub
mov
ljmp
and
sbb
jcxz
mov
out
sbb
or
sbb
rcrl
mov
rcrl
mov
rcrl
mov
in
sbb
inc
in
mov
xlat
sbb
xlat
rcrb
mov
xlat
sbb
cld
in
mov
out
sbb
mov
sbb
cmc
ficomps
mov
fstpl
mov
in
sbb
mov
in
mov
in
sbb
fucom
sbb
mov
sbb
or
sbb
xlat
rcrb
mov
in
mov
fstpl
mov
rcrl
mov
rcrl
mov
fstpl
mov
aad
mov
in
mov
call
sbb
lret
mov
xlat
sbb
cld
in
mov
repnz
fucom
sbb
xor
sbb
pop
in
sbb
add
sbb
loope
sbb
cmc
ficomps
mov
call
sbb
inc
in
mov
out
sbb
cld
in
mov
rcrl
mov
rcrl
mov
ljmp
cmpsl
jmp
sbb
add
sbb
lret
mov
clc
sbb
mov
sbb
fs
sbb
cmp
sbb
adc
sbb
rcrl
mov
out
sbb
cmpsl
jmp
sbb
daa
out
sbb
in
mov
aam
mov
aad
mov
int
mov
rcrl
mov
rcrl
mov
iret
sbb
jo
sbb
mov
in
mov
xlat
sbb
mov
sbb
in
sbb
mov
sbb
decl
pushl
movl
lea
jmp
rol
rcl
mov
cmc
shrd
shrd
mov
pushf
sub
mov
adc
clc
add
pushl
popl
rol
lea
mov
movl
ror
inc
mov
stc
call
xor
pushf
bswap
call
push
repz
popl
cmc
push
clc
jb
pushf
movb
xchg
btc
sar
push
add
dec
bts
sbb
push
ror
bsr
call
sets
mov
pusha
jmp
pushf
pushl
mov
pushl
jmp
stc
mov
dec
rcr
mov
clc
stc
pushf
sub
pusha
mov
shl
pushf
pushf
mov
call
push
mov
pushf
mov
push
push
pushl
push
lea
jmp
mov
pushf
pushf
pushf
lea
jmp
repz
popl
bt
jmp
push
pushf
repz
popl
stc
pushl
pushf
mov
rol
pop
shld
mov
pusha
bsf
mov
shrd
pusha
lea
push
adc
bsf
pusha
mov
cmc
bswap
sar
mov
bt
adc
xchg
or
shr
mov
pushf
pushl
popl
btr
setne
movzbw
sar
movl
shl
and
rcr
adc
mov
xadd
movb
shr
xor
jmp
repz
popl
bt
mov
pushf
call
pushf
pushl
xchg
push
mov
movzbw
jmp
stc
add
pushf
pushf
pusha
movb
pushf
popl
movw
movw
pushl
popl
push
lea
jmp
pusha
movb
mov
pusha
pushl
lea
jmp
pushf
pushf
popl
movb
pushl
call
pusha
movb
xor
push
jmp
ror
mov
stc
jmp
jmp
pushl
popl
pushl
movb
mov
mov
lea
jmp
mov
pushf
pushf
lea
jmp
push
pushf
popl
mov
pushl
popl
pushf
pushf
lea
jmp
xor
pushf
mov
movb
pushf
bswap
jmp
repz
popl
bt
test
pushf
mov
pusha
clc
mov
jmp
not
mov
movzbw
clc
not
stc
mov
push
clc
add
call
sub
jmp
movb
repz
popl
jbe
cmc
push
call
mov
sub
push
movzbl
pushl
xor
push
mov
dec
mov
clc
push
xor
mov
pushf
pushf
movb
bswap
movb
dec
pushf
pushf
lea
jmp
add
add
add
xor
add
add
add
test
add
dec
add
or
add
add
lcall
add
add
add
sub
add
aaa
or
out
aaa
or
loop
or
jecxz
or
sbb
add
push
or
push
push
or
