add
or
add
add
push
add
addb
add
mov
add
loopne
add
and
add
pusha
push
add
pusha
or
orb
add
add
add
or
add
xchg
mov
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
xchg
mov
add
add
add
add
add
mov
add
fcoms
add
add
xchg
mov
add
add
add
add
add
fadds
add
or
adc
xor
add
xchg
mov
add
add
add
add
add
add
add
inc
push
adc
xor
add
xchg
mov
add
add
add
add
add
sub
add
je
adc
xor
add
xchg
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
fcoml
add
add
xchg
mov
add
add
add
add
add
mov
pop
adc
xor
add
xchg
mov
add
push
add
add
push
add
xor
add
cmp
add
dec
push
add
pop
push
add
insb
push
add
jle
add
mov
add
xchg
push
add
mov
add
subb
add
sub
adc
add
lock
add
push
sldt
adc
add
push
sldt
xor
add
inc
sldt
pop
sldt
jb
add
jp
add
add
add
xchg
mov
add
add
add
add
add
mov
add
inc
pop
adc
rolb
add
xchg
mov
add
add
add
add
add
mov
add
adc
adc
in
add
xchg
mov
add
add
add
add
add
fadds
add
clc
pop
adc
rolb
add
xchg
mov
add
add
add
add
add
add
add
enter
rolb
add
xchg
mov
add
add
add
add
add
sub
add
cwtl
pusha
adc
rolb
add
xchg
mov
add
add
add
add
add
push
add
add
adc
rolb
add
xchg
mov
add
add
add
add
add
js
add
cmp
rolb
add
xchg
mov
add
add
add
add
add
mov
data16
rolb
add
xchg
mov
add
add
add
add
add
enter
fsubs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
rolb
add
add
add
add
add
add
add
add
cmp
loopne
add
xchg
mov
add
add
add
add
add
push
insl
adc
loopne
add
xchg
mov
add
add
add
add
add
nop
add
add
insl
adc
loopne
add
xchg
mov
add
add
add
add
add
mov
outsb
adc
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
loopne
add
xchg
mov
add
add
add
add
add
xor
adc
rolb
add
add
add
add
add
add
add
add
clc
jno
add
add
add
add
add
add
add
add
add
jb
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
adc
loopne
add
xchg
mov
add
add
add
add
add
clc
add
add
xchg
mov
add
add
add
sbb
add
push
add
in
rclb
add
add
add
add
add
add
add
push
add
xchg
mov
add
add
add
add
add
push
push
add
dec
js
add
add
xchg
mov
add
add
adc
add
pop
add
inc
pop
add
push
sldt
nop
pop
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
xor
add
orb
xor
add
test
add
rorb
add
clc
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
xchg
mov
add
add
add
add
add
xor
add
pushf
js
add
add
xchg
mov
add
add
add
add
add
pop
pop
add
mov
adc
enter
xchg
mov
add
add
add
add
add
addb
add
adc
push
add
add
add
add
add
add
add
add
adcb
sub
add
xchg
mov
add
add
add
add
add
rolb
add
or
adc
dec
add
add
add
add
add
add
add
add
pop
add
pop
mov
add
add
add
add
add
add
add
add
add
or
add
adc
in
add
add
add
add
add
add
add
add
add
sbb
add
xchg
mov
add
add
add
add
add
jo
add
pushf
nop
adc
rolb
add
add
add
add
add
add
add
xchg
adc
add
add
xchg
mov
add
add
add
add
add
rorb
add
adc
push
add
add
add
add
add
add
add
add
or
add
xchg
adc
cwtl
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
or
add
fwait
adc
mov
add
add
add
add
add
add
add
add
add
jl
adc
sbb
add
add
add
add
add
add
add
mov
add
xchg
mov
add
add
add
add
add
mov
add
test
adc
in
add
xchg
mov
add
add
add
add
add
fmuls
add
mov
add
xchg
mov
add
add
add
add
add
add
add
fsubs
add
xchg
mov
add
add
add
add
add
sub
add
movsb
stos
adc
mov
add
xchg
mov
add
add
add
add
add
push
or
add
scas
adc
les
add
xchg
mov
add
or
add
stos
sldt
mov
add
rorb
sbbb
add
inc
or
sub
add
push
adc
adcb
add
cmp
add
bound
add
adcb
xorb
add
pop
or
addb
add
xchg
mov
add
add
add
sbb
add
or
add
mov
add
cmp
add
add
add
add
add
add
add
or
add
in
adc
adc
add
xchg
mov
add
add
add
add
add
xor
add
add
adc
mov
add
xchg
mov
add
add
add
add
add
pop
or
add
add
xchg
mov
add
add
add
add
add
orb
add
sbb
add
add
add
add
add
add
add
adc
add
add
xchg
mov
add
add
add
add
add
rorb
add
jl
adc
in
add
xchg
mov
add
add
add
add
add
clc
or
add
adc
sub
add
add
add
add
add
add
add
or
add
add
xchg
mov
add
add
add
add
add
dec
or
add
adc
or
add
xchg
mov
add
add
add
add
add
jo
add
push
and
add
push
add
xchg
mov
add
add
pop
add
jg
add
or
cmp
add
lock
cmp
add
sbb
add
inc
or
add
push
jg
add
jg
add
add
add
add
add
add
add
add
add
or
add
sub
add
add
xchg
mov
add
add
add
add
add
or
adc
adc
add
xchg
mov
add
add
add
add
add
xor
adc
adc
add
xchg
mov
add
add
add
add
add
pop
or
adc
adc
add
xchg
mov
add
add
add
add
add
orb
add
add
xchg
mov
add
add
add
add
add
test
add
je
adc
adc
add
xchg
mov
add
add
add
add
add
rorb
adc
adc
add
xchg
mov
add
add
add
adc
cmp
add
xchg
mov
add
add
add
sbb
add
push
add
fcom
adc
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
dec
add
add
dec
add
dec
add
push
add
inc
add
dec
add
or
inc
add
add
add
push
add
add
add
add
xor
xor
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
push
add
inc
add
dec
add
push
add
add
add
dec
add
push
add
add
inc
add
add
dec
add
push
add
add
dec
add
dec
add
dec
add
push
add
push
add
or
push
add
push
add
dec
add
dec
add
adc
push
add
push
add
push
add
push
add
inc
add
push
add
push
add
add
inc
add
lldt
add
dec
add
inc
add
add
push
add
push
add
push
add
add
add
dec
add
inc
add
add
inc
add
add
dec
add
pop
add
add
add
dec
add
push
add
push
add
inc
add
add
dec
add
push
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
pop
add
add
add
pop
add
jo
add
pop
add
jo
add
add
add
pop
add
add
add
add
add
add
jo
add
js
add
jo
jo
add
add
or
ja
ja
pop
add
add
add
incl
js
jo
add
add
add
mov
or
add
add
mov
mov
add
add
pop
ja
mov
ja
ja
jo
jo
or
mov
ja
pop
jg
add
add
add
add
ja
divl
add
or
popl
ja
jo
or
popl
xor
lock
testl
xor
xorb
ja
add
add
popl
mov
add
or
jo
add
or
js
push
or
add
add
or
ja
add
mov
add
add
add
mov
jo
jo
add
add
or
or
add
add
add
clc
js
jo
add
add
pop
or
or
xchg
jo
add
add
jo
add
mov
add
add
add
ja
jo
mov
add
add
add
pop
ja
add
add
add
add
pop
ja
ja
add
cld
ud0
cld
ud0
clc
ud0
clc
ud0
sbb
jg
add
clc
add
pop
clc
add
psubb
add
cld
add
pop
incb
add
loopne
add
rolb
add
add
add
add
add
add
pop
cld
add
pop
incb
add
cld
add
psubb
add
clc
add
pop
clc
add
aas
cld
sbb
cmp
clc
ud0
clc
ud0
clc
ud0
incl
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
jbe
out
or
sub
xchg
orl
xor
out
fistpl
imul
incb
sbb
mov
lahf
addb
mov
mov
xchg
and
push
fs
cli
cmp
jp
sub
mulb
int
fldl
out
pop
mov
arpl
or
outsl
in
or
in
and
push
mov
dec
fwait
inc
aam
pop
cltd
jle
dec
mov
or
mov
addr16
mov
add
mov
in
in
xchg
test
adc
lcall
pop
mov
jnp
fwait
or
popf
jae
insl
push
movsl
into
cmp
lahf
movsl
pop
jmp
cmpsb
inc
std
mov
test
pop
xor
jnp
ds
dec
movsb
shlb
addr16
fmull
or
xor
pop
inc
inc
std
cli
jmp
outsl
jns
mov
imul
scas
repz
push
dec
xchg
xlat
pop
das
xchg
jno
add
push
inc
push
in
dec
dec
add
push
outsb
jg
cmpsb
test
ds
cwtl
daa
stos
movsl
jp
movsl
add
or
xchg
out
pop
iret
pushf
in
push
mov
adc
push
sbb
pop
jl
push
roll
dec
addb
inc
cmp
mov
arpl
je
and
sub
inc
fiaddl
mov
out
jg
or
cmpsb
mov
push
hlt
in
mov
and
dec
sub
and
lds
sti
add
xchg
daa
pop
stos
test
ljmp
inc
fcoms
add
cmp
cli
jns
pop
ror
push
cmpsl
dec
jbe
mov
popa
out
dec
sub
and
adc
xlat
jle
into
dec
jnp
daa
test
and
sub
adc
pop
adc
in
jle
inc
lret
push
lcall
cmp
pop
sub
stos
jns
fcomps
je
push
pop
loopne
ret
mov
stc
sbb
and
je
or
sub
pusha
inc
testl
jp
mov
arpl
sahf
cltd
xor
pop
xchg
sub
loope
mov
mov
movsl
lods
stos
jp
mov
pop
push
mov
pop
dec
dec
mov
inc
lds
ljmp
push
orl
mov
xchg
sahf
cmpsl
jo
rclb
rorb
pop
add
sbb
push
adc
sbbl
insl
jg
iret
mov
pop
popf
sub
lods
scas
movb
test
insb
std
stc
scas
and
and
sub
lods
test
add
mov
push
inc
mov
mov
jns
xor
leave
push
cmp
loope
push
int
pop
jbe
arpl
mov
sub
shrl
ds
fistpl
push
or
ret
lods
jmp
push
lcall
sub
pop
adc
mov
xchg
aaa
outsb
inc
test
add
clc
sub
push
cmp
push
jmp
sbb
or
std
es
pop
dec
sub
push
outsb
pop
into
jle
or
sbb
pop
in
pop
pop
sahf
btr
xlat
xchg
xchg
in
lcall
sbb
outsb
mov
add
add
lock
mov
xchg
test
or
cli
pop
mov
add
cli
pop
bnd
inc
mov
repz
iret
std
xchg
mov
pop
adc
sub
mov
mov
pop
repz
dec
lods
jbe
push
and
out
es
add
lret
mov
inc
mov
outsl
sti
testb
dec
mov
out
cli
imul
pop
inc
fistps
or
cmc
xor
xor
mov
mov
movsb
mov
or
mov
mov
mov
dec
adcb
ljmp
pop
sbb
xchg
insl
icebp
and
mov
jmp
mov
pop
sub
rolb
shrb
inc
ljmp
mov
mov
fidivrs
sahf
mov
sbb
adc
inc
rolb
hlt
sti
xchg
lret
test
andb
mov
bound
fisttpll
lret
sbb
mov
mov
xchg
adc
ror
mov
loopne
sub
or
icebp
scas
mov
xchg
pop
out
test
sbb
out
inc
jne
mov
pop
add
cwtl
mov
jmp
sub
cltd
jo
inc
pop
repz
xchg
mov
stos
mov
scas
add
mov
rcr
pop
xchg
cltd
add
fildll
jl
sub
sbb
lahf
and
cmpsb
xor
sar
out
fndisi(8087
cmp
lret
add
cld
enter
cli
int
loopne
mov
cmp
add
out
cmpsl
push
dec
sbb
les
or
and
inc
fidivrl
xchg
inc
dec
or
ror
xlat
and
or
add
into
leave
lock
adc
push
xor
push
shlb
dec
aam
cltd
das
rorb
xor
aaa
or
and
out
neg
repnz
shl
shlb
leave
dec
dec
lret
pop
data16
ja
lahf
adc
push
and
enter
dec
dec
aad
es
jg
xlat
xor
dec
xor
mov
xchg
cmpsb
dec
jge
bound
or
aad
mov
fcomps
xchg
jne
add
test
sub
es
pop
mov
or
adc
ss
lret
movsb
fcoms
cs
xor
sbb
call
pushf
das
mov
jecxz
repz
xchg
mov
in
jb
xchg
jmp
jp
pop
call
cmpsb
cmp
mov
shlb
add
mov
inc
or
lods
inc
or
cmpb
dec
nop
mov
and
daa
mov
add
jle
push
out
repz
adc
jns
xor
les
inc
sbb
pop
js
es
orl
sub
xchg
pop
jmp
inc
xor
negl
inc
inc
pop
in
push
jl
aaa
push
aaa
jge
sub
add
sahf
add
add
cmp
movsl
and
xor
addr16
test
movsb
sbb
mov
xchg
stc
test
jp
mov
call
jmp
pop
xor
sbb
das
stos
dec
adc
rclb
aas
test
dec
es
adc
outsl
or
in
mov
xchg
aad
pop
dec
fwait
iretw
in
sti
mov
std
push
mov
out
fistpll
les
pop
repz
adc
flds
push
pusha
push
mov
mov
mov
sti
dec
loopne
loop
pop
sbb
dec
push
push
cmp
repz
dec
jb
jl
cmp
scas
mov
xor
loopne
hlt
push
mov
in
movsb
xor
sbb
enter
rcl
inc
cmp
inc
or
pop
jbe
mov
sbb
jmp
add
rcr
insb
dec
int3
xor
push
jno
hlt
mov
movsl
test
jmp
sahf
enter
or
xor
push
mov
mov
or
mov
mov
sub
pop
add
cmp
pslld
xchg
and
daa
pop
data16
mov
insl
inc
and
pop
and
fisubl
loope
jns
ja
or
arpl
add
pushf
adc
mov
das
dec
aam
out
test
or
push
icebp
xor
shr
mov
out
in
pop
std
ret
ret
out
add
xor
pusha
loope
mov
repz
jp
and
mov
test
inc
mov
add
jle
inc
andl
sbb
xchg
out
sarl
fisttps
cld
mov
popf
lea
dec
fldenv
shlb
test
fmull
pop
mov
sub
xor
cmpsb
pop
pop
sbbl
add
cmp
inc
cmpsb
loopne
sbb
jno
adc
inc
xchg
mov
popa
lods
mov
out
cmpl
lret
xchg
jmp
js
mov
inc
push
pushf
push
gs
push
je
and
jle
sbb
roll
arpl
icebp
jnp
mov
test
pop
push
je
sub
in
add
mov
js
loopne
fnsave
dec
xor
push
push
dec
and
xor
push
and
cld
mov
jae
int
inc
sub
xor
sbb
sbb
dec
pusha
dec
pop
jge
push
pop
mov
mov
and
adc
sub
jl
inc
xchg
cmp
aaa
sub
dec
push
mov
sbb
jns
pusha
xor
sbb
je
cwtl
sbb
out
subl
pusha
cmpsb
pop
fldl
cmp
mov
movsb
filds
es
and
or
jp
xor
testl
ret
mov
dec
inc
shlb
fcompl
push
add
pop
or
fdivs
mov
pop
mov
dec
test
subl
aad
push
lret
xor
out
inc
cs
and
pop
in
inc
popf
dec
pop
out
adc
repnz
fisubs
fstpl
js
out
mov
in
pop
in
stos
xchg
sahf
ja
das
fwait
xchg
fs
inc
xchg
js
cld
jmp
cmpsb
inc
inc
and
insb
jmp
xchg
inc
jno
xor
cmp
mov
stos
ss
cmc
jle
pop
arpl
lock
xchg
pushl
adc
push
out
ret
push
mov
testb
movl
xor
push
mov
test
adc
test
outsb
arpl
arpl
fdiv
and
stos
sbb
mov
scas
add
and
dec
in
insl
in
jae
mov
sahf
in
subl
sub
mov
mov
or
inc
inc
inc
and
xor
pushf
jbe
das
out
mov
sahf
ret
lahf
pop
adc
cli
xor
aad
mov
stos
xchg
sbb
sub
loop
outsb
inc
cli
test
xchg
jecxz
sarl
fisubs
cmp
sub
cmp
leave
mov
lcall
push
push
or
add
sbb
inc
pop
stos
rcrl
sub
mov
shll
repz
jle
and
ret
sub
dec
cmpb
sub
ret
sbb
repz
jno
push
test
inc
pop
shll
sti
fbld
ja
mov
lds
bound
xchg
cmpsl
cmp
pop
scas
jns
adcl
test
test
or
xchg
fisttpl
add
lcall
mov
cmp
pusha
pextrw
popf
fmuls
cmpsb
int3
jbe
sbb
std
xlat
push
sub
in
popf
mov
cltd
push
xor
xchg
dec
lock
jns
testb
out
dec
fnstcw
sbb
pop
not
sub
add
mov
mov
inc
cmp
sub
xor
dec
push
xchg
jle
test
sbb
sbbb
pop
test
outsb
dec
es
or
je
mov
cmp
mov
je
jmp
inc
and
jp
or
mov
sbb
sbb
or
popa
rclb
in
mov
or
insl
leave
movsb
push
push
into
iret
push
enter
pusha
sbb
out
pop
adc
sub
sti
mov
test
test
dec
jecxz
iret
pop
scas
xor
dec
int3
dec
ffree
gs
mov
into
pop
jb
sub
pop
lds
jecxz
movsb
xchg
repz
cmp
std
and
fs
jne
pushf
icebp
repz
sbb
jbe
scas
int
lods
pusha
lcall
or
sbb
fwait
cmp
cmp
xchg
cmp
cld
xchg
enter
call
xor
jnp
xchg
dec
addr16
inc
pop
mov
fldl
push
bound
insl
mov
lret
mov
push
push
push
cmp
fistl
test
jae
loopne
push
fisttps
out
aas
or
insb
pop
imul
dec
call
mov
pop
dec
jno
test
movsb
sarb
pusha
push
mov
jne
cld
jg
mov
jno
jge
jnp
xchg
popa
ret
lret
hlt
push
pop
clc
sbb
xor
mov
jp
dec
insb
enter
jo
cmp
cmp
adc
popa
enter
pop
sub
ret
int3
scas
loop
jl
mov
ret
add
scas
loope
insb
leave
fsubl
mov
ja
mov
lock
jne
sub
mov
jnp
rcll
dec
lret
jmp
push
mov
inc
xchg
test
lods
imul
mov
pop
sbb
adc
cmp
xor
dec
cmp
movsl
stc
push
dec
loope
shlb
subb
jmp
jne
in
inc
pop
inc
add
lahf
mov
gs
cmp
jg
and
push
repz
pop
aam
mov
cld
ficompl
jl
in
mov
leave
xchg
pop
in
pop
jmp
in
cs
stc
mov
xor
sub
or
sti
xor
mov
test
add
pop
sbb
or
sbbl
cmpsl
shl
adc
sarl
fnstenv
les
out
push
xchg
out
faddl
cwtl
sbb
ljmp
aaa
push
mov
push
jmp
out
pop
rcrb
sbb
dec
mov
testb
mov
sub
push
cltd
imul
add
inc
add
jecxz
int3
mov
lahf
mov
shrb
shrb
mov
pusha
add
dec
lods
cmp
mov
cmp
leave
xor
dec
hlt
pop
iret
pop
jmp
int3
dec
xor
mov
mov
ss
outsb
std
loop
addr16
fdivs
mov
jmp
pusha
push
and
pop
popa
jb
jo
cli
dec
jne
call
push
add
test
mov
cmp
push
inc
cmp
in
subl
mov
imul
mov
adc
ds
mov
pop
int3
cli
jnp
sub
inc
or
movzwl
imul
mov
rcrb
jmp
adc
scas
fidivl
addr16
clc
lret
fistpll
sub
fisttpll
jbe
inc
push
aas
cmp
lds
add
mov
dec
ret
data16
jno
mov
dec
clc
outsl
out
or
jae
dec
stos
cltd
xor
loopne
mov
xchg
aad
push
mov
jno
cld
inc
fstl
rclb
pop
movsl
pusha
jns
stos
data16
sub
cltd
pop
cmp
arpl
punpckhbw
jecxz
sbb
jl
subl
stc
icebp
mov
cld
jns
pushf
std
mov
cmpsl
cltd
mov
sbb
cli
andl
pop
or
inc
xchg
stos
outsb
jge
push
enter
or
adc
in
sub
cmpsb
lods
jmp
movsl
clc
dec
and
add
outsl
flds
sbb
call
lods
xchg
xchg
popa
jnp
dec
int
jae
inc
idivl
pop
mov
out
and
lret
in
jl
sbb
mov
scas
lahf
xchg
pop
push
in
pop
rclb
mov
rclb
ss
cmp
xchg
jnp
sbb
sbb
cmpsl
jb,pn
inc
inc
movsl
fs
mov
test
shlb
addb
mov
adc
mov
popf
jp
push
lds
adc
cvttps2pi
cmp
idivl
in
sbbb
pop
xchg
int
jg
xchg
hlt
xchg
sarl
addr16
test
xchg
sub
sub
and
cli
sub
enter
ds
pop
call
out
mov
fmulp
cwtl
mov
jnp
sti
or
adc
cmpsl
xchg
in
cmc
and
insb
jg
fstl
push
aam
xchg
ss
icebp
pop
test
pop
mov
loope
data16
add
mov
aas
clc
mov
ret
cmp
stc
cwtl
adc
push
jl
int
sbb
sbb
sahf
xchg
daa
xorl
clc
jnp
fildl
in
dec
adc
cmp
pop
mov
mov
push
sub
pop
test
xor
xor
imulb
iret
test
fisubrs
xchg
mov
jecxz
loop
mov
fisttpll
fcom
fldln2
ds
or
xchg
push
sbb
mov
popa
cmp
aam
pop
push
imul
aaa
xchg
dec
inc
sub
jne
cmp
jecxz
mov
scas
movsb
fidivrl
and
das
mov
jae
pop
shrl
jb
rolb
inc
pop
jle
add
or
xchg
inc
and
add
sub
inc
jbe
cld
and
loope
push
adc
out
cwtl
ljmp
incb
pop
or
divb
xor
mov
fs
cmpsb
or
push
bnd
cmp
inc
repnz
or
sub
in
sarl
ret
inc
jg
stos
insl
cmp
gs
pop
adc
test
mov
scas
daa
and
and
fwait
mov
pop
loop
adc
and
shl
jge
loopne
push
cmp
insb
or
or
sbb
mov
lret
stc
arpl
ret
pushf
push
add
loop
in
loopne
cwtl
dec
mov
ss
das
mov
mov
data16
mov
inc
repnz
xchg
je
cmp
sub
mov
mov
jbe
call
jno
frstor
jnp
adc
sbb
add
scas
pop
adc
inc
decb
out
add
int
adc
push
test
sbb
cmp
jb
lahf
fdivrl
pushf
mov
jg
rcrb
clc
out
imul
outsb
add
and
cmp
fs
jle
cmp
mov
sub
cltd
icebp
pop
jge
adc
lahf
mov
sbb
cmpsb
in
shll
stos
scas
adc
lock
sar
jne
adc
sub
sti
sti
push
dec
push
repz
divl
xchg
mov
idivb
pop
cli
cmc
or
repz
popf
out
fildll
incb
cltd
mov
push
lods
or
lcall
xlat
shrb
cmp
popf
cld
in
dec
push
imulb
fidivl
subl
scas
aam
dec
inc
push
sub
push
xchg
outsl
test
mov
mov
push
and
in
inc
shrb
mov
popa
jno
orl
cmpsl
ljmp
or
xor
xlat
jb
dec
mov
mov
bnd
sbb
mov
je
insl
mov
lods
daa
add
sub
push
test
mov
mov
jl
mov
shll
aas
inc
jo
into
or
and
jae
jmp
pop
out
lea
jecxz
stc
lahf
sbb
xchg
dec
jp
test
in
in
ret
mov
sub
popa
rcll
pop
divl
jbe
inc
push
fsubs
mov
je
jle
mov
or
dec
jge
inc
push
addr16
loop
push
cmpsb
dec
xchg
fcomp
push
xor
jp
pop
aad
movsl
cltd
iret
xchg
rolb
xor
dec
mov
adc
dec
add
push
ljmp
fisubrs
sub
inc
popf
or
and
lods
jmp
test
add
push
pop
arpl
push
out
pop
mov
jmp
and
iret
mov
arpl
push
xchg
jl
stos
jb
jae
stos
mov
loope
lea
push
mov
bound
insl
stos
adcl
dec
popa
mov
popf
inc
inc
notb
out
movsb
mov
adc
inc
push
or
test
add
pop
stos
lock
push
xchg
sbb
imul
fwait
and
push
lea
xchg
jno
mov
mov
out
cmp
jecxz
scas
roll
mov
xchg
fldl
les
and
sbb
loopne
xchg
sbb
push
or
sub
in
mov
loope
xchg
out
fiadds
dec
push
xor
mov
sub
nop
shll
sbb
dec
xor
mov
fwait
popf
fs
and
xchg
cmp
fldl
add
pop
push
cmp
in
xchg
sbb
call
popa
fcompl
fwait
sub
ja
mov
mov
fcomip
popa
pop
or
mov
jge
xchg
fs
push
adc
and
cmp
jbe
addr16
les
addr16
ljmp
sub
dec
cmp
xchg
jg
dec
pop
aas
xchg
ret
sub
xchg
scas
ds
out
and
cmp
sub
aad
sbb
movsb
cmp
loope
add
mov
fcmovu
push
sub
pop
das
xor
repnz
mov
fninit
shl
jmp
lahf
or
andb
dec
cmp
push
loop
cmp
mov
out
ret
mov
and
cmp
cmp
xchg
out
mov
es
je
cwtl
fldl
ds
and
sar
lock
in
sbb
lret
jb
aam
iret
sti
test
in
je
rorb
lea
push
jl
nop
aam
jo
out
fisubs
xor
scas
xchg
mov
xor
in
orb
inc
mov
xor
int3
int
mov
jo
or
xorps
ljmp
je
decb
mov
pop
sbb
outsl
push
nop
lea
lds
imul
loope
shrl
sbb
jge
inc
mov
mov
cmp
dec
sbb
or
outsl
movsl
test
push
jp
sub
repnz
lock
fwait
mov
adc
or
xchg
ret
cmp
dec
fs
inc
xchg
jg
sub
cwtl
cmp
mov
xlat
cmp
test
in
test
cli
push
es
mov
leave
cmc
in
cld
fucomp
cmpsb
mov
add
mov
sbb
pop
fcomip
xchg
in
lea
roll
sub
pop
cmp
mov
xor
or
cmp
push
std
ret
inc
stos
adc
scas
push
sbb
sbb
xor
sbb
in
adc
mov
lcall
cmpsl
rol
imul
rcrl
mov
xchg
movsl
sti
arpl
xchg
sub
push
cmpsb
cmp
stos
scas
cmpsl
repz
dec
into
ds
or
push
test
cmc
add
push
out
sbb
sbb
stos
push
ret
in
dec
stos
je
xchg
xchg
into
jb
xor
cmp
repz
xchg
xchg
lret
xchg
lock
jg
xor
or
pop
pop
push
call
dec
cmp
lret
or
call
in
push
cmp
cmp
and
lea
sbb
xchg
mov
mov
jp
cmovne
mov
mov
cmp
mov
jmp
pop
jecxz
push
add
dec
sub
mov
insl
imul
jmp
sbbl
insb
jnp
addr16
out
pop
xchg
lods
inc
out
sub
imul
test
lds
mov
cmp
or
out
repnz
inc
sbb
outsb
sub
gs
push
mov
lret
stc
test
adc
repnz
jo
out
les
iret
adc
add
and
jmp
js
fwait
ljmp
cmpsb
xor
jle
inc
fsts
mov
shl
dec
mov
xor
imul
xchg
push
test
cmpb
aas
rcl
icebp
int3
lahf
mov
pshufw
mov
adcb
outsb
nop
mov
or
lcall
mov
inc
pop
aam
lret
mov
jae
jae
call
roll
cwtl
sbb
push
push
aaa
rorl
and
push
and
push
fwait
in
sub
pop
rorl
fildll
dec
jle
mov
scas
dec
inc
dec
cmpsl
enter
sbb
movsl
pusha
xchg
push
addb
dec
subl
call
xchg
out
aas
xor
sti
sbbl
sbb
call
jae
pop
and
loop
in
sbb
fidivl
frstor
xchg
push
psrlw
call
add
cmpsb
mov
fs
cmp
out
fidivrl
cmc
fxch
call
sbb
xchg
dec
pop
mov
jl
mov
ret
sbb
add
push
mov
popf
and
imulb
ljmp
out
push
repnz
xor
aad
outsb
or
hlt
add
xchg
jg
push
xchg
inc
stc
inc
cmp
sub
mov
mov
outsl
int3
push
inc
cwtl
jmp
icebp
mov
cmp
push
stc
push
xor
negb
add
push
in
mov
outsl
sbb
mov
enter
stos
add
test
negb
and
out
out
mov
ds
mov
inc
iret
or
popa
mov
sti
cli
and
repz
inc
pop
mov
jmp
cmp
in
mov
aaa
mov
mov
lret
dec
test
addr16
or
dec
lds
mov
cmpsl
cwtl
ds
out
jne
lret
dec
aaa
into
dec
sbb
push
rolb
fst
pop
jbe
imul
sbb
push
jne
mov
push
push
mov
xorb
outsb
ret
mov
lahf
cltd
push
movsb
fidivl
jl
push
mull
sub
les
test
add
in
push
lds
repnz
lea
cs
in
in
icebp
fcoml
aaa
pop
jb
add
leave
xor
push
mov
sub
pushf
repnz
inc
orb
xor
or
stos
daa
clc
jnp
sub
cmp
subb
ds
push
icebp
inc
repnz
pop
les
mov
lods
add
and
nop
js
data16
sub
mulb
adc
movsb
or
sbb
sub
mov
loop
mov
mov
sbb
cmp
int3
mov
mov
fs
rolb
dec
test
mov
cld
mov
add
jne
in
sbb
icebp
push
pop
das
negb
add
inc
mov
lds
pop
pop
idivl
out
cmpsl
adc
sub
xchg
shlb
mov
dec
cwtl
jb
mov
jno
push
or
jae
cmp
popa
sub
xchg
dec
outsb
inc
testb
les
and
mov
lea
xor
rcrb
mov
aas
ljmp
cmp
add
ss
adc
dec
sub
cs
jno
btc
xor
push
out
stos
pop
mov
or
sbb
aas
mov
sub
mov
mov
sbbb
pushl
and
mov
enter
pop
lea
fwait
mov
ds
imull
inc
stc
loopne
sarl
test
xchg
lea
add
sub
inc
test
data16
pop
cmpsl
sbb
push
mov
lret
pushf
lea
imull
or
in
dec
inc
and
add
cli
ds
mov
and
jle
call
jl
mov
call
mov
push
jge
in
sahf
push
mov
push
pop
sbb
jle
mov
fidivl
in
jae
aam
adc
push
sbb
pop
leave
jno
fstp
aas
mov
jnp
push
dec
out
pushf
mov
jne
in
repz
mov
icebp
or
out
hlt
jp
inc
test
jnp
pop
scas
addb
mov
fiaddl
in
mov
rclb
rcr
andb
dec
inc
aad
or
pushf
mov
sbb
shlb
mov
inc
mov
push
lea
out
or
inc
out
aas
or
enter
sti
lret
popa
xor
xor
mov
jecxz
sub
icebp
or
dec
sub
adc
jns
xor
push
std
enter
ret
dec
outsl
jecxz
sbb
out
push
mov
int
mov
push
mov
mov
adc
bound
out
cmp
stc
data16
cmc
add
adc
jo
cmc
jle
pop
jmp
push
adc
add
sub
cmp
movsb
cmpsl
xchg
mov
out
test
xor
js
repz
data16
lret
dec
out
mov
push
aaa
lea
sub
pop
aad
dec
dec
lahf
pushl
mov
fistps
dec
dec
dec
lahf
lcall
mov
sbb
nop
jge
call
mov
ss
sbb
jecxz
call
or
push
in
mov
xchg
pop
cmpb
test
push
adc
and
cmp
push
mov
push
mov
pop
push
xor
mov
xchg
xchg
push
aad
pop
out
mov
push
arpl
inc
stos
push
outsb
sbbl
or
stos
ds
push
rorl
sub
shrl
ret
mov
bound
test
nop
pop
mov
addl
push
xchg
jae
mov
sub
stos
push
jmp
xor
test
fxch
out
mov
aaa
or
out
mov
das
out
ficompl
mov
orl
fisttpl
mov
pop
fbld
dec
cmpsl
inc
loopne
jle
aam
sbbb
or
and
adc
inc
push
and
int3
in
xchg
test
jbe
bound
jno
mov
das
cmp
add
mov
sub
jnp
stc
and
inc
mov
cs
and
mov
xor
mov
mov
stos
rol
stos
fstl
nop
xor
mov
in
jbe
jae
and
loope
mov
xor
sbb
xor
cmp
int3
push
sub
mov
sbbl
jmp
lea
cmp
mov
mov
or
rcr
mov
sub
icebp
subb
mov
sub
in
pop
sahf
negb
mov
bound
inc
pop
or
jbe
pop
and
dec
ficompl
loope
filds
sub
test
xchg
jb
push
sub
sahf
mov
in
jmp
add
fildll
or
popa
and
arpl
ret
lcall
mov
bound
fdivr
mov
fcmovne
mov
cld
cmp
js
imul
add
lods
xchg
xchg
orb
in
push
insl
aaa
stos
out
clc
cmpsl
pop
inc
decl
sub
mov
js
jno
and
fdivs
or
dec
jno
add
adc
cvtpi2ps
mov
sbb
cltd
jne
rcrb
sub
daa
scas
or
cs
sbb
and
cmpsb
dec
scas
xchg
cltd
and
jae
pop
cltd
stos
out
popf
lret
add
push
out
push
subl
xor
inc
cs
jb
arpl
sub
aas
nop
inc
cmp
jecxz
es
sbb
das
stos
fstpl
popa
in
push
out
xor
adc
mov
pop
xor
cmp
inc
dec
xchg
add
ljmp
xor
mov
push
mov
lcall
mov
test
bound
push
cwtl
aad
push
fmuls
cmpb
pop
sbb
add
adc
insb
pop
popa
sbb
leave
imul
xorb
inc
call
loop
lcall
int
arpl
pop
sbb
fadds
push
inc
pushf
or
sbb
add
fidivrs
call
shlb
mov
inc
mov
mov
imul
cmp
push
cs
popf
aas
mov
sub
jmp
jbe,pt
pop
lea
sbb
jmp
mulb
push
lods
out
dec
scas
push
ret
int3
outsb
mov
in
stos
js
xchg
ret
dec
inc
add
popa
out
pop
cwtl
xchg
cs
or
pushf
jb
sub
popf
cwtl
xchg
fistpll
xor
xchg
into
mov
fdivr
test
or
pop
std
imul
outsb
lret
cmp
mov
cmp
push
ret
cmp
into
or
cwtl
stos
mov
and
and
cmc
arpl
sbb
jne
std
lret
lods
cmp
cmpb
mov
shll
dec
xor
add
popf
or
roll
and
idivl
aaa
movsb
clc
gs
imul
jno
lock
lahf
ret
or
mov
mov
pop
repnz
push
inc
mov
mov
cmc
sub
mov
add
or
or
pop
sub
out
mov
add
scas
pop
adc
pop
mov
and
int3
add
pop
repz
scas
inc
inc
in
imul
cmpsl
lock
je
mov
dec
push
imul
lahf
vmovapd
lahf
dec
mov
fdivs
or
xor
add
stc
or
cwtl
sub
push
push
add
cmp
jb
out
jo
in
cmc
scas
dec
sub
jmp
addr16
adc
push
inc
daa
and
test
push
daa
lods
ret
lods
clc
adc
test
add
adc
mov
inc
sub
data16
adc
ret
push
rolb
ret
in
test
lds
jmp
pop
loop
or
enter
je
imul
fs
adc
dec
adc
push
outsl
mov
push
imul
pop
sbb
adc
inc
aaa
jmp
xor
mov
cmc
lods
or
sub
lods
push
inc
cli
lcall
cli
mov
cli
jle
add
ds
fildl
and
lret
xor
call
xor
movsl
lods
fcmovu
in
add
lret
sub
lcall
pop
add
push
or
mov
out
rorb
cmp
pushf
pop
and
fnstenv
jne
sbb
fs
lret
adc
dec
dec
xchg
lods
and
arpl
pushf
push
iret
mov
push
scas
sub
das
cmp
mov
lahf
mov
hlt
ret
hlt
pop
cmp
test
mov
mov
add
push
mov
lea
pop
mov
mov
mov
xchg
out
xchg
jns
cmp
neg
xorb
ja
xlat
sbb
pushf
xor
aam
lahf
jbe
mov
adc
cmc
pushf
imulb
xor
dec
jbe
lock
push
push
mov
daa
ret
and
aam
pop
stc
rorb
stos
je
lcall
filds
push
jae
out
cmp
pop
jb
mov
sub
gs
mull
ret
lea
or
mov
shl
push
add
iret
outsb
adc
cmp
push
out
int3
ja
mov
iret
or
pop
xchg
shlb
sub
sub
and
add
sbb
stos
andb
in
ljmp
imul
aam
push
repnz
push
das
push
xchg
inc
pop
jecxz
jp
jnp
cmpsl
fwait
sbb
mov
mov
loopne
addr16
adc
jb
add
adc
inc
push
jne
rcr
and
push
cmp
rolb
lret
stc
enter
aas
mov
or
adc
mov
inc
dec
pop
repz
add
orb
movsb
add
and
xlat
push
push
mov
cmp
lret
ja
sbb
xchg
sbb
mov
aam
les
outsb
pop
ss
outsb
je
ja
out
ja
cwtl
les
jmp
aaa
test
jns
adc
mov
pushf
mov
xchg
jns
pop
cmp
imul
imul
test
inc
aas
sbb
dec
sub
fldt
jecxz
fldz
jp
or
jmp
addr16
add
std
cmp
fxch
jle
arpl
sbb
popa
data16
cmp
mov
dec
mov
cmp
add
out
pop
sub
pop
imul
xchg
je
xchg
gs
popa
mov
fisubs
lods
in
out
cltd
loopne
pusha
push
pusha
outsb
pop
hlt
mov
xchg
js
or
cmpl
cmpsb
adc
loope
sub
push
add
popf
arpl
pop
lds
dec
dec
mov
sub
out
cli
xchg
pop
out
xchg
sub
pusha
lahf
cmpsl
xor
adc
loope
cmp
in
jo
inc
in
arpl
xchg
ret
cmp
sbb
aad
lahf
sbb
dec
adcl
rcrb
mov
adc
pop
or
into
xchg
movsb
and
mov
dec
mov
xor
ja
int
xchg
repz
adcl
aas
loopne
popf
xchg
jle
outsl
mov
mov
test
pop
xchg
scas
pop
test
repz
stos
push
adc
jg
imul
xchg
lods
xor
ret
xchg
jns
pop
mov
sub
test
sub
adc
js
xor
mov
jno
dec
pop
scas
lods
and
les
adc
cmp
fdivrs
xlat
std
cmp
sbb
xchg
repnz
bound
xchg
movsb
addr16
mov
js
jnp
fmuls
repnz
hlt
popf
xchg
cmp
out
push
cs
ss
ja
xor
mov
stc
popf
mov
les
aam
mov
add
adc
dec
fcomps
xor
jnp
insl
arpl
sub
test
xor
and
or
xorb
mov
mov
loopne
mov
xor
scas
adcl
int3
xchg
iret
sub
shlb
sub
sbb
cmpl
int3
mov
or
mov
nop
inc
daa
and
ret
sbb
outsb
xor
sbb
sbb
cli
and
testb
dec
xor
lahf
fadd
pop
std
cmp
xor
add
fwait
sti
add
jae
hlt
or
movq
leave
mov
mov
jecxz
add
adc
or
es
add
xor
pop
movl
sbb
fsubs
jns
aaa
ret
jp,pt
mov
arpl
jne
pop
je
or
sbb
jl
push
movsl
bound
mov
ljmp
cmp
cmpsl
fs
push
lret
mov
pop
push
mov
fmuls
mov
stos
xor
repnz
adc
lds
adc
and
cltd
xlat
ficompl
lock
adc
pop
adc
ret
movsb
addr16
mov
negl
lods
ljmp
fwait
bswap
inc
mov
mov
or
mov
ret
cmp
cmc
cmpsl
jge
or
mov
loop
mov
ss
mov
data16
inc
cmp
test
and
jmp
mov
ds
repnz
leave
popa
xor
mov
ret
test
fs
cmp
adc
sbb
mov
bound
pop
dec
movsl
ja
pushf
add
jl
xorl
jg
lods
mov
ret
rcll
pop
leave
mov
js
je
pop
cmpsb
sub
add
mov
sahf
in
in
outsb
cmp
pop
cmpsl
jmp
fiaddl
cmp
push
cmc
pusha
inc
sub
int3
out
cmpb
out
push
xchg
movsb
and
sahf
pop
fwait
xchg
in
mov
nop
pop
lds
sub
int
xor
fldenv
gs
nop
int3
mov
push
aam
ss
push
test
mov
or
out
push
add
sar
repnz
pop
mov
dec
cmc
iret
dec
mov
negl
std
test
sub
sbb
add
mov
nopl
xor
mov
mov
test
jp
insl
arpl
push
sbb
mov
lods
movsl
notl
and
dec
xor
push
ret
xchg
out
dec
xchg
loop
add
lahf
out
lock
pop
cmp
adc
and
in
xchg
sub
js
out
xor
shl
push
test
inc
cmp
inc
and
dec
mov
mov
sbbl
inc
inc
mov
mov
dec
and
cmp
or
lahf
mov
mov
mov
push
sarl
xchg
jae
inc
dec
out
pop
insb
stc
mov
or
push
mov
push
xchg
and
mov
jle
push
es
movsb
incl
fidivrl
imul
lea
insb
test
int3
jl
mov
dec
pop
in
in
movsl
fisubl
or
mov
adc
mov
decb
push
popa
xchg
loope
mov
mov
out
xlat
sbb
imul
std
rcl
adc
mov
jbe
ret
mov
cmpl
jae
xchg
inc
in
clc
xor
in
jecxz
mov
lret
addl
jbe
push
sub
popf
cmp
inc
dec
loopne
aaa
stos
dec
fdivrs
sahf
mov
sub
stos
aas
dec
cld
adc
cmp
push
jae
pop
arpl
sbb
cmp
and
push
inc
pop
adc
adc
icebp
jmp
cli
mov
or
mov
cmp
fnsave
scas
enter
xchg
shr
pop
out
xor
pop
jb
push
stos
add
dec
jecxz
push
jmp
add
dec
and
int
outsb
stos
int
popf
mov
push
test
sub
xor
xchg
fsubrl
mov
pop
sub
es
xchg
pop
xor
jne
cwtl
cmc
imul
out
jge
es
ds
pop
lods
xchg
and
popa
ljmp
aam
arpl
into
test
add
in
adcl
in
out
cs
je
stos
jg
mov
pop
test
jb
scas
sar
in
js
lea
pusha
xchg
gs
lds
xor
lods
inc
dec
or
pop
leave
out
inc
mov
sbb
fcomip
and
dec
inc
pop
mov
stos
and
or
scas
xchg
aaa
out
add
push
pop
and
and
dec
mov
sarb
mov
or
sub
sub
rcl
adc
fisttpl
push
scas
idivl
frstor
pop
sub
scas
push
adc
lret
push
pop
mov
pushf
setle
cmpl
addr16
aam
push
inc
and
or
mov
imul
xchg
test
sbb
fldcw
les
imul
mov
dec
clc
mov
pop
dec
jne
xorl
cmpsb
push
mov
pop
push
movsb
jns
out
cmp
mov
sbb
mull
rclb
inc
arpl
and
adc
lock
push
sub
nop
mov
jle
repnz
call
shrl
fisubrl
in
idivl
push
fidivrs
dec
dec
jmp
jecxz
cmp
andb
in
pop
divl
push
roll
jecxz
sti
cmc
cwtl
mov
sub
stos
xlat
js
push
sbb
dec
sbb
cld
test
js
orb
mov
popa
mov
xorl
and
cmc
mov
mov
mov
hlt
test
jl
js
mov
lret
outsl
ret
mov
add
mov
mov
xchg
ja
xor
jg
push
mov
sub
mov
pop
mov
dec
mov
movsb
fisubs
inc
cmp
fildl
aam
push
inc
jo
pop
into
imul
sbbl
lcall
add
sub
adc
add
sbb
iret
mov
cs
or
ljmp
adcl
popf
aaa
cld
sbb
pop
cmp
mov
nop
xor
sarb
call
rcrb
adc
xlat
test
xchg
leave
push
cmp
xor
incl
ljmp
outsl
adc
clc
imul
dec
pop
or
iret
dec
aaa
and
subl
cmp
jmp
mov
push
mov
outsl
aas
adc
std
lea
lret
icebp
cwtl
jo
push
dec
mov
and
sahf
mov
xor
sub
rol
jo
cmp
inc
add
cmp
hlt
js
fsubl
xor
mov
xchg
push
xlat
pop
shlb
push
dec
int
sbb
sbb
cli
jns
and
repz
push
daa
jb
insl
lahf
sbb
inc
jp
loopne
jl
cmp
xor
les
lret
mov
jmp
in
inc
js
inc
std
push
xchg
mov
in
sti
dec
stos
cmpl
lods
xor
push
paddusb
cltd
jbe
sbb
cmp
sub
in
xchg
and
js
push
in
cltd
xlat
mov
adc
mov
leave
outsl
fwait
lods
fdivl
add
in
out
not
push
mov
repz
push
test
popf
pmaxub
rolb
incb
mov
jne
test
test
arpl
jmp
sub
iret
imulb
jns
scas
daa
movsl
mov
in
loop
lods
arpl
jl
jmp
cmp
mov
add
aad
jp
fildll
test
jl
sub
cmp
or
adc
scas
jae
sbb
sub
add
mov
scas
mov
es
mov
repz
mov
sti
aad
and
mov
mov
iret
lods
and
inc
lss
xor
add
push
push
inc
mov
xor
pop
xlat
pop
bound
xchg
lods
test
inc
mov
jp
push
push
rcrb
cmp
pop
data16
jecxz
into
mov
sbb
iret
int
cmp
xchg
lcall
dec
pop
xlat
jmp
nop
adc
cld
enter
stos
rolb
in
jno
arpl
cltd
mull
mov
pop
shrb
insb
insb
mov
push
lds
movb
jg
xchg
sub
movsl
xchg
push
xlat
inc
enter
sub
imul
xchg
cld
mov
rcr
jnp
cmp
leave
add
orl
out
into
cmp
pop
add
repnz
aam
mov
hlt
and
cmc
jb
or
cli
and
inc
mov
pop
lea
xor
and
test
and
dec
or
shlb
and
repz
and
enter
add
in
test
imul
enter
aad
out
mov
out
and
adc
mov
or
mov
mov
movsb
sub
push
adc
mov
mov
add
mov
xchg
ss
xchg
cmp
rcll
adc
xchg
test
push
sbb
add
push
loopne
mov
mov
inc
push
and
aas
sub
je
leave
jns
cltd
sub
call
lcall
add
cmc
and
lods
fistps
inc
jae
inc
shrl
xchg
jle
xor
jns
imul
cmpsb
lret
push
ficompl
js
mov
xchg
daa
sbbl
loopne
jne
rcrl
popa
icebp
mov
inc
lahf
pushf
stc
cs
jns
testb
sbb
pop
loopne
out
and
add
shl
icebp
fldenv
out
ror
rol
clc
mov
iret
jp
movsb
mov
fs
mov
or
push
sahf
decb
cltd
add
mov
push
cmp
mov
cltd
jle
xor
inc
nop
mov
in
xor
dec
aaa
call
js
or
mov
cmpl
cltd
popa
pushf
or
mov
or
xchg
push
cmpsb
popf
pushl
cld
pop
or
into
movsb
int3
dec
lret
add
sub
sub
js
cmp
push
pop
in
mov
loopne
pop
push
mov
cmpl
mov
push
fdivrp
xchg
fucomi
pusha
inc
hlt
dec
cli
sub
push
fdivrs
adc
xchg
xchg
inc
jno
sub
call
or
xor
rorb
pop
add
movsb
cwtl
shlb
adcb
push
add
hlt
iret
push
movsb
jnp
jns
dec
imul
push
mov
idiv
fldl
mov
das
notb
mov
hlt
dec
cmp
mov
into
rcrl
dec
sub
push
aam
aam
sub
lcall
cmp
sbb
cmp
push
mov
imul
xchg
xor
rcrb
into
ret
push
repnz
movsb
lret
xchg
add
fwait
inc
inc
sarb
cmp
orb
in
outsl
ds
aas
mov
stc
mov
push
xor
add
lcall
idivb
rcrb
pop
dec
pop
inc
cli
int3
xchg
mov
dec
or
out
sbb
xchg
rcrb
fdecstp
repnz
fldl
mov
jle
pcmpgtd
jp
pop
out
in
ficoms
ror
lret
dec
fists
push
dec
lret
ja
jg
mov
inc
ja
pop
push
xor
jge
cmp
hlt
xchg
cmp
int3
inc
addb
in
and
sbb
rcrl
pop
inc
cmpsl
cmpsl
int
xor
dec
fs
fcoml
jecxz
cmc
sahf
in
mov
sub
push
inc
fs
ljmp
sub
or
inc
ffreep
or
mov
mov
push
xchg
inc
or
test
pop
sub
movsb
repnz
in
popa
cmp
mov
dec
in
mov
fcmovnbe
mov
lods
push
jnp
outsl
test
in
mov
pusha
lods
mov
sbb
xor
scas
sub
or
jns
jle
pop
mov
and
clc
lds
or
fcomip
repnz
mov
jmp
rcrb
push
cmpl
shlb
push
inc
jbe
cs
inc
cwtl
or
cmp
pop
cltd
aaa
in
test
dec
sarb
jbe
lea
pop
incl
fidivl
pop
sbb
sub
xorb
jb
cmp
pop
fs
inc
jb
aaa
popa
mov
ja
icebp
or
mov
cmp
jg
cmp
and
xchg
hlt
daa
test
out
push
loop
js
filds
mov
adc
xor
test
mov
cmpsl
dec
push
push
lea
jp
repnz
push
push
add
cli
cmp
and
sub
imulb
xor
push
and
imul
int3
jg
jl
lahf
add
fisttpl
mov
dec
mov
lahf
jb
xor
push
push
mov
add
jae
mov
ja
outsl
stos
mov
notl
cmpb
jecxz
rcrl
sub
rolb
dec
sbb
loop
rcr
mov
insb
push
lock
mov
fwait
das
aas
sbb
insb
xchg
cmc
mov
add
fwait
loopne
loop
dec
in
fsubl
mov
je
dec
pop
mov
sub
pop
mov
cmp
mov
inc
cmp
jg
cmp
je
lock
filds
cli
mov
dec
inc
mov
pusha
sahf
ss
hlt
out
inc
add
push
test
adc
add
mov
and
inc
add
testb
mov
fwait
sti
cmpsl
leave
mov
push
faddp
lods
inc
fmull
rcll
cmp
xlat
dec
pop
or
jno
pusha
add
jne
js
out
stos
dec
dec
or
movsl
out
loopne
int
add
mov
and
jge
fld
test
or
mov
xchg
test
or
xor
les
mov
pop
sbb
inc
jno
rclb
fdivl
pushf
arpl
out
imul
mov
adc
lcall
pop
pop
mov
xor
adc
mov
inc
ficoms
mov
gs
push
ficoms
xchg
cmpsl
dec
shll
gs
push
mov
in
adc
lret
dec
sahf
add
dec
jg
jns
inc
dec
aas
mov
sahf
fs
xor
mov
outsl
fistpl
xor
inc
cmp
rcr
cmp
sbb
lods
into
imull
leave
shlb
push
stos
jge
ja
fwait
test
je
or
push
cmp
cmc
mov
pop
pop
inc
mov
je
push
or
int3
arpl
xchg
nop
notb
fidivl
jg
lret
iret
push
mov
or
cmp
enter
inc
mov
inc
aad
jge
dec
outsb
stc
adc
leave
loope
push
jno
push
loopne
pop
test
loopne
lds
adc
out
scas
mov
pop
mov
mov
arpl
mov
push
fsubrs
sbb
cli
push
push
loop
xchg
aas
cltd
mov
aaa
outsl
fs
push
cmc
rolb
sub
mov
out
xor
cmpsb
inc
xor
imul
mov
fistpll
cltd
pop
inc
push
sbb
inc
adc
pop
sub
xchg
orl
pop
inc
pop
ljmp
xor
out
cmc
mov
jle
push
cmpsl
and
xlat
cmpsl
mov
xlat
mov
mov
and
cmpsl
sarb
int3
push
pop
pushf
int
sbb
test
adc
pop
dec
imul
cmpsb
mov
push
jecxz
lea
xchg
out
fwait
cmpsl
cmpb
loopne
adc
out
xchg
cmp
cmp
lcall
dec
inc
lcall
roll
jle
inc
dec
sub
mov
out
xchg
std
mov
or
fisttpll
das
sub
call
sahf
pusha
inc
in
in
loop
xchg
sbb
sub
rcrl
shr
out
out
in
out
jle
stos
data16
mov
pop
ja
or
arpl
xor
decb
mov
and
push
push
adcl
pop
add
push
push
push
pop
xchg
jo
call
mov
adc
mov
xchg
sub
mov
sahf
cmp
and
fld
insb
shl
or
inc
cld
sahf
ljmp
outsl
xchg
leave
xchg
fnstsw
stos
cmpsb
mov
push
insl
cmp
cmpsl
xlat
push
sub
xor
cli
test
inc
jmp
andb
add
mov
adc
pop
adc
data16
lcall
xchg
lret
add
int3
sbbb
sbb
dec
mov
cmp
int
movsl
push
psubusb
cltd
cli
dec
jmp
mov
jle
push
fst
mov
push
sub
arpl
xchg
sti
ss
mov
mov
outsb
jmp
push
cmp
arpl
fists
mov
imul
xchg
mov
xchg
and
test
fisttpl
mov
pop
js
sbb
push
loope
out
push
sbb
push
dec
cli
cmp
push
insb
pop
mov
push
or
pusha
jo
mov
les
mov
popf
mov
int
imul
jmp
jl
adc
cmp
dec
es
xchg
in
xchg
cmp
adc
mov
push
adc
ret
es
add
mov
in
shl
jmp
jo
mov
repnz
jge
pop
cs
push
cld
inc
and
cli
jl
sbb
dec
lret
inc
stos
lods
or
mov
fstps
adc
cld
push
and
pop
cmc
push
in
push
outsb
loopne
popf
jnp
inc
mov
cwtl
jl
fstpt
imul
adc
cmp
jp
jns
out
sti
loopne
or
push
repz
lcall
cli
pushf
mov
pop
icebp
mov
hlt
adc
mov
pop
sbb
int
pop
xchg
shlb
int3
mov
pop
pop
dec
xchg
loopne
pop
arpl
sub
arpl
jo
dec
cwtl
xor
popa
jmp
std
cmp
mov
cmpsl
jae
idivl
xor
jg
mov
rcrb
sub
loop
xchg
add
sahf
xor
pusha
push
sbb
imulb
jae
fidivrs
push
leave
sbbl
repnz
loope
fwait
cmp
lea
leave
sahf
scas
clc
jno
add
adc
dec
ljmp
ret
addl
dec
cs
cmp
mov
in
adc
pop
loop
ret
cs
push
fisttpl
jmp
xchg
inc
mov
mov
adc
adc
jg
mov
mov
lret
jbe
mov
xorl
or
cmpsl
jp
adc
push
adc
cs
xchg
mov
lret
pop
pop
mov
cld
sub
cmp
out
push
aaa
insb
sbb
cmp
inc
cmp
das
js
mov
hlt
push
loopne
push
sbb
daa
mov
lahf
or
inc
sahf
sbb
add
and
push
push
sbb
sahf
xchg
add
mov
ficoml
mov
das
sub
inc
jne
push
xor
push
aam
mov
imul
xchg
mov
or
je
scas
ret
mov
dec
nop
xor
outsb
lea
clc
mov
xchg
push
scas
xchg
sub
icebp
imul
and
pushf
leave
and
or
fiaddl
imul
push
mov
push
and
add
scas
inc
in
mov
aad
cmpl
lahf
inc
test
jne
jle
lret
cli
stc
jo
mov
push
je
rol
push
psrlq
cmpsb
add
cltd
pop
xchg
mov
movsl
js
inc
mov
fs
arpl
or
ds
and
lds
adc
test
sub
movsb
jnp
sub
push
sahf
inc
mov
sbb
lods
test
sbb
mov
mov
cmp
imul
scas
sbb
push
data16
icebp
jne
add
fistl
daa
pop
aas
pop
dec
xor
loopne
sbb
push
or
rolb
sub
fsts
add
mov
lds
sbb
xor
mov
jno
jae
xchg
push
and
pop
xchg
fisubs
dec
arpl
movsb
jp
xchg
push
xchg
call
pop
xor
cmp
sbb
arpl
inc
loop
lahf
int3
btr
out
dec
adc
mov
test
sub
pushf
pop
pop
insb
cmp
out
mov
jmp
jle
sub
xlat
jecxz
ljmp
fadds
fs
cwtl
in
pop
sub
xor
lcall
sub
ret
add
pop
mov
test
not
xor
inc
mov
or
in
sub
nop
cmp
inc
xor
add
dec
jp
aaa
js
data16
out
sub
xchg
mov
mov
imul
sbb
ret
inc
popa
mov
pusha
fdivr
jbe
dec
xor
dec
int3
jb
cmpsl
cmp
adc
jnp
and
jg
stos
xchg
sbb
iret
je
push
stc
jg
or
mov
hlt
mov
loopne
rcrl
or
shrb
xchg
xchg
pop
mov
dec
js
ret
fldl
jecxz
sub
dec
dec
test
pop
and
mov
fadds
and
pop
cmp
xchg
jns
mov
mov
sbb
mov
cmp
faddl
dec
incb
sbb
fs
xchg
adc
scas
stc
int
test
mov
js
pop
sbb
pop
jnp
sbb
or
jno
mov
sub
cmpl
jmp
lcall
popw
jge
cmpsl
jmp
aaa
sub
sbb
in
adc
sub
sti
rorb
jp
fs
mov
adc
jnp
jmp
push
sub
shrb
push
ja
pop
dec
ficomps
and
mov
inc
cmp
sub
stos
andl
cmpsl
push
pop
or
dec
jns
cmpsl
call
fmull
jbe
add
int3
call
leave
lds
pop
adc
and
test
inc
add
daa
pop
orl
dec
stc
mov
fisubrl
push
mov
out
movsl
fists
jg
mov
pop
xor
cmp
sbb
cmp
aad
push
hlt
mov
das
test
movsb
adc
sub
loop
ds
add
xor
frstor
adc
adc
or
aas
sub
cli
inc
add
cli
fisubl
int
sub
mov
xor
push
test
sub
je
js
xor
mov
jae
ss
arpl
pop
test
xor
scas
sbb
mov
fsubr
mov
and
sti
lahf
ja
pop
int
pop
and
dec
jle
xor
test
cwtl
mov
add
xor
int
push
fucomi
mov
scas
push
inc
int
xlat
jg
pop
aad
stc
xor
cmc
or
mov
sarb
cmp
dec
testb
add
pop
in
inc
xchg
or
pop
mov
adc
jbe
pop
lret
xchg
leave
cmp
imul
ljmp
rcr
stos
xor
mov
adc
fiaddl
mov
sub
push
mov
outsl
aad
mov
sarb
add
ret
jae
arpl
or
dec
cwtl
sbb
mov
aas
jecxz
cmp
adc
test
adc
scas
fisubrl
pushf
les
jmp
xchg
cmp
push
xchg
pushf
inc
cmp
jle
lret
xor
shlb
mov
add
iret
jnp
push
add
and
mov
mov
mov
loope
shr
jno
int
stos
add
cmp
mov
sub
test
xchg
jmp
sub
aam
sbb
push
dec
xchg
sub
int
mov
push
fwait
scas
and
icebp
repnz
imul
scas
mov
mov
xor
inc
pop
cmp
dec
inc
call
outsb
lcall
push
enter
pop
repnz
popf
xchg
mov
xchg
add
ror
lods
push
or
and
add
inc
or
xor
pusha
dec
loope
cmp
mov
popf
jnp
ds
sub
cmp
xlat
cltd
movsl
mov
sub
je
test
shll
lock
xor
lret
adc
mov
cmp
lret
inc
das
mov
lock
inc
inc
sahf
rolb
lret
ret
and
xchg
adc
out
imul
cwtl
stos
and
jl
sub
or
ret
xor
popf
adc
and
das
jl
insl
cmp
mov
sbb
adc
cmp
stos
sbbl
je
mov
sbb
cmc
mov
int3
lea
xchg
mov
xor
dec
sarl
loop
fstl
pop
add
cmpsl
and
mov
std
pop
sbb
ds
filds
arpl
rol
aaa
jmp
mov
fdiv
mov
mov
push
rcll
fisttps
js
adc
ja
jecxz
mov
mov
push
fdiv
pop
dec
mov
divl
push
xchg
aas
push
clc
and
test
pusha
sub
push
mov
ss
push
xorl
mov
rcll
outsl
aam
andl
es
sahf
out
mov
xchg
xchg
scas
and
daa
enter
int
popa
mov
or
xor
divb
add
stos
stc
aam
xor
pop
add
sub
mov
insb
stos
push
test
fisubrs
pop
mov
in
dec
and
pop
jmp
es
mov
stc
jno
xor
adc
xor
xchg
sub
sub
sbb
cltd
mov
mov
in
xchg
sbb
mov
sbb
cmp
in
cmp
mov
out
xchg
sub
in
push
por
mov
aaa
cmp
mov
call
xchg
adc
dec
fisttpl
mov
repz
icebp
lmsw
and
jmp
add
mov
dec
ds
fwait
popf
inc
int
test
xor
and
add
push
adc
jne
jno
gs
lahf
ljmp
loope
sub
repz
push
imul
cmp
mov
and
mov
in
out
mov
xchg
sarl
or
and
mov
fs
add
cmp
inc
pop
mov
adc
lret
xor
out
gs
dec
nop
or
jmp
mov
in
mov
imull
pop
or
dec
sbb
mov
lret
sub
mov
sub
icebp
icebp
int
mov
jne
pusha
inc
or
aad
dec
pop
cmp
movsb
cld
lret
insl
and
loopne
fldcw
ljmp
das
inc
mov
and
dec
xor
add
out
stos
shrl
push
repz
sub
mov
pop
movsb
cltd
test
popa
jg
pop
sub
stos
hlt
sub
aaa
in
sti
imulb
mov
add
push
test
daa
mov
push
xor
popa
sti
jmp
lea
mov
outsl
sub
inc
shl
push
lock
xor
stos
sub
imul
fmulp
add
xor
push
sarb
testb
and
cs
pop
pop
cmp
cmp
stos
sbb
xchg
mov
mov
orb
out
dec
inc
xchg
inc
dec
icebp
inc
mov
sbb
ss
lcall
lock
sti
cmp
jp
cmp
jb
sbb
movsl
dec
mov
cmpsb
iret
pushf
dec
shl
cwtl
add
cld
cmp
jne
or
sbbl
lock
fxch
in
inc
mov
adc
cwtl
out
sbb
dec
adc
ljmp
adc
mov
and
push
jecxz
leave
adc
xor
dec
loope
fdivs
test
fwait
test
lea
sub
cwtl
pop
mov
add
push
dec
jns
mov
jns
js
xchg
mov
in
or
mov
loop
push
mov
stc
in
sbb
pushf
add
adc
mov
sub
push
sub
cmp
sbb
jno
push
scas
imul
outsb
outsb
xchg
int
pop
xchg
push
cli
and
sbb
or
xor
dec
jb
pop
mov
inc
sbb
rorl
int3
cmc
push
xor
or
ja
cmp
mov
add
lods
ret
jle
pusha
cmp
xchg
pop
out
flds
aas
int3
and
adc
cld
int3
inc
dec
dec
cmc
xchg
xor
in
sbb
xchg
or
jmp
push
call
xchg
cmp
mov
push
mov
mov
push
dec
insl
adc
out
insb
inc
in
int
loopne
repz
mov
adc
mov
inc
pop
and
ret
or
dec
call
outsl
push
xchg
test
xchg
jns
add
mov
add
jbe
push
xchg
jns
add
sub
pusha
mov
mov
loope
sahf
enter
add
nop
insb
xor
xlat
xchg
cmp
or
or
jb
test
andl
and
mov
ja
jnp
push
popl
xchg
or
das
pop
fwait
rcrb
je
dec
cmp
jbe
pop
icebp
push
sub
or
rcr
in
test
mov
cmp
adc
pop
push
jb
shll
in
repnz
mov
cmpb
push
and
xrelease
sbb
xchg
aaa
push
stos
in
lock
push
cs
and
sub
arpl
cmc
int
pop
fldl
andb
sahf
add
dec
mov
or
xor
gs
fwait
inc
outsb
cltd
shll
daa
pushf
mov
dec
adc
or
into
outsb
leave
and
inc
pop
pop
and
aad
inc
insb
cmpsb
jns
mov
push
push
mov
xlat
mov
in
jmp
cld
push
dec
pop
sbb
scas
mov
repnz
out
daa
stos
mov
sti
js
repz
dec
cmp
jb
jbe
xor
mov
mov
sbb
shlb
mov
int3
out
mov
test
pop
rorl
fs
xchg
fldcw
shll
xchg
xlat
dec
lods
ftst
or
and
outsl
jae
push
loope
cmp
mulb
sub
mov
scas
add
push
mov
add
in
push
and
sbb
cmc
push
jae
inc
sti
adc
sub
mov
mov
add
xchg
jne
cmp
add
pop
stos
cmpsb
pop
lds
in
mov
xchg
rcll
xchg
in
dec
jno,pn
jl
scas
iret
mov
add
cmc
mov
mov
jnp
mov
xor
and
mov
cmpsb
cmp
leave
lods
pop
jne
dec
in
inc
fldt
jg
sub
jp
inc
mov
clc
add
lock
fwait
je
jg
test
and
jb
mov
and
in
lock
push
lock
outsb
sahf
mov
stos
mov
decb
pop
and
or
hlt
or
lods
bound
dec
fmuls
inc
push
mov
orb
sbb
mov
mov
pop
aad
jbe
and
sub
mov
je
push
cmp
push
stos
mov
add
iret
loop
dec
shlb
jb
sbb
dec
push
or
jo
imul
push
adc
inc
cmp
xor
mov
xchg
int3
mov
decl
add
rcll
cltd
push
pop
jle
sbb
push
jp
pop
stos
rcll
or
mov
xchg
pop
enter
pusha
loope
jmp
add
sub
test
imul
add
test
negb
xchg
push
out
jle
mov
icebp
nop
popf
pop
mov
je
sbb
gs
xor
aaa
mov
ja
cmp
mov
fwait
push
push
jae
movsb
pop
mov
jecxz
push
mov
cmp
in
aaa
dec
adc
push
fs
in
stos
es
out
cmp
ret
push
pushf
movsb
cmp
lcall
sbb
icebp
sahf
je
cmc
jge
adc
mov
or
daa
fstpl
das
dec
stos
or
jle
mov
popa
cs
lret
addr16
cs
mov
pop
shr
or
test
popa
ret
push
addr16
imul
pop
pop
push
bound
jg
inc
sbb
add
sarb
pop
aas
mov
fnstsw
into
pusha
int
jmp
mov
or
jge
aam
jg
mov
or
sub
ret
test
repz
adc
cmp
pop
mov
jmp
bound
push
and
mov
add
cltd
leave
icebp
hlt
cmp
jnp
or
cmp
jl
push
adc
lret
xor
pop
pop
aaa
inc
cmp
sub
rorb
shll
loopne
pop
push
das
dec
mov
inc
sbb
push
mov
ljmp
stos
repnz
dec
stos
jo
pop
inc
cld
shl
push
loop
mov
cmpb
ret
jge
push
push
ss
lock
test
into
add
inc
into
jno
or
or
cmc
or
clc
push
mov
sbb
movsl
xor
aas
pusha
std
adc
in
adc
arpl
sub
cmpsb
mov
rol
jecxz
rcrl
and
sub
pop
pop
idivl
mov
jl
ret
aaa
insl
xchg
les
dec
ds
dec
jnp
lret
lret
inc
lock
cld
add
inc
into
add
push
ret
dec
stc
add
idivb
dec
and
popa
jge
out
push
add
mov
push
ds
add
xor
inc
sub
xchg
push
mov
cmp
jns
fdivrs
sub
or
enter
pop
add
dec
fisubl
push
and
lock
scas
mov
and
out
test
ud0
lret
sub
pop
cltd
nop
popa
adc
fiadds
paddsw
fwait
mov
mov
push
xor
out
mov
dec
add
cmp
loopne
inc
push
cmpsb
pushf
pop
sub
mov
gs
inc
scas
daa
inc
adc
out
push
xchg
xchg
pop
push
adc
loope
int
divl
sbb
scas
xlat
cmp
sbbb
xchg
mov
lock
ret
cld
dec
leave
test
das
mov
or
imul
lcall
xchg
mov
push
div
lods
dec
in
push
ja
push
nop
std
mov
xchg
movsl
dec
imul
movsb
aam
out
jecxz
xchg
mov
lds
clc
push
or
sbb
dec
and
int3
mov
or
mov
arpl
test
aad
cli
inc
das
and
adcb
je
and
lods
jmp
negb
test
in
jns
cmp
stos
push
popf
add
call
sub
lret
subl
ds
and
dec
fisubrl
lret
pop
mov
shll
push
mov
and
subb
dec
ret
dec
in
mov
gs
stos
jg
pop
mov
daa
sbb
sub
inc
push
dec
cmp
mov
add
sahf
xchg
jge
ljmp
adc
or
cmp
adc
pop
or
mov
adc
in
bound
dec
scas
jecxz
jg
out
lahf
in
fwait
clc
enter
xchg
stc
out
xchg
clc
es
repnz
movsl
int
cmc
loop
mov
jmp
xor
push
mov
iret
lods
aam
fldenv
pop
adcl
imul
jmp
xor
lahf
xchg
insl
notl
lods
jmp
ret
sbb
adc
lods
inc
loopne
aad
mov
test
mov
lea
arpl
adc
mov
fs
lods
fstpt
call
or
pop
icebp
sbb
adc
sbbl
dec
xlat
push
jns
dec
rclb
lret
out
mov
mov
jnp
sti
xor
fcomi
fldl2e
int
xor
test
xlat
in
mov
dec
xor
push
mov
lahf
imul
cwtl
xor
sub
comiss
test
inc
arpl
and
xor
push
sbb
insl
sbb
mov
push
mov
ja
and
ljmp
push
loopne
cmp
and
push
push
je
mov
adc
cmp
out
dec
sbb
das
adc
lods
push
inc
mov
fs
jb
sbb
sub
insb
fisttpll
sti
adc
jno
arpl
and
jnp
mov
add
xchg
mov
add
push
xchg
pushf
out
popl
xchg
sbb
jbe
scas
mov
push
and
pop
cmp
loopne
aaa
test
ss
jno
arpl
icebp
adc
rcll
and
lods
lods
out
outsl
enter
test
mov
aam
add
xchg
mov
push
dec
cmpsl
xchg
inc
fisttpll
push
aas
sarl
mov
sti
aad
imul
xchg
gs
daa
test
movzbl
inc
imul
adcl
dec
imul
and
std
mov
push
or
or
call
jp
dec
fwait
testb
lcall
clc
adcl
insl
adc
in
sub
pop
sub
sbbl
stc
cli
ja
sbb
push
ljmp
popf
inc
adc
jl
cmpsl
shr
inc
or
mov
add
and
imul
xchg
adc
scas
ficomps
push
mov
add
mov
pop
cmp
fmuls
add
std
and
ret
mov
mov
in
jae
idiv
pop
clc
mov
and
cwtl
mov
or
add
adcl
jbe
sub
pop
out
aaa
out
or
push
adc
mov
fldenv
inc
fs
cmp
unpckhps
push
ds
or
push
aaa
cmpsl
imul
sub
xor
aas
rorb
inc
sbb
test
out
data16
mov
dec
push
lahf
nop
aas
xchg
into
jmp
popa
adcl
push
add
dec
arpl
repz
jae
push
test
out
xor
adc
mov
mov
or
es
loopne
pop
mov
add
and
add
xlat
sbb
mov
aad
test
lahf
jecxz
jae
fistl
add
lcall
jp
mov
cmp
xchg
xchg
or
jg
pop
std
in
clc
sahf
sbb
movsb
xchg
mov
jne
je
iret
stos
enter
mov
xor
cmp
and
sub
scas
dec
andb
mov
xor
mov
push
mov
repnz
pusha
aam
mov
adc
xchg
sbb
ror
stos
add
xor
hlt
jecxz
cpuid
jbe
ja
jns
xchg
sbb
xlat
cmc
jb
xor
sub
daa
lahf
jb
addb
loopne
cmp
out
shl
stos
jl
jmp
cld
out
jns
sbb
jnp
jmp
hlt
fwait
jnp
fildl
sub
insb
xchg
sub
fcomi
pop
or
cld
sub
cmp
mov
notb
xor
aas
sub
dec
xor
mov
testl
inc
adc
sbb
dec
dec
dec
daa
es
push
push
dec
out
dec
ljmp
xor
cltd
enter
bound
aam
inc
test
cld
fbstp
rcrl
shrb
popa
xchg
pop
mov
shlb
add
mov
mov
cmp
push
les
mov
xchg
sbb
loop
mov
sbbl
addr16
fisubrs
xor
sbb
cli
cli
xchg
repz
or
inc
enter
add
mov
mov
push
int
flds
out
push
rcl
push
inc
xor
dec
inc
xchg
push
movsl
sbb
in
dec
jecxz
jl
push
fisttps
mov
pushf
mov
and
xorb
fsts
xchg
mov
ja
xor
sahf
fdivs
and
jne
jmp
call
je
or
outsl
mov
and
daa
div
mov
outsb
jbe
dec
mov
int3
popa
jae
insb
add
insl
addr16
mov
xchg
push
dec
add
pop
aaa
ret
jnp
xor
aas
jnp
lret
ljmp
jmp
mov
jb
xor
into
adc
and
in
sbb
and
test
mov
xorb
daa
or
dec
stc
lods
lret
in
add
repnz
out
aas
xor
and
adc
rorb
out
adc
test
ljmp
adc
stos
sub
mov
push
mov
dec
or
fisubrs
jl
inc
rclb
sti
and
or
clc
pusha
and
out
sub
inc
jg
dec
push
addr16
jge
jge
or
lcall
xchg
mov
xchg
hlt
scas
mov
add
fsubrs
and
stos
push
rclb
xor
sub
mov
mov
cmp
pop
fnstsw
daa
fldt
mov
bound
lahf
bound
aaa
or
pop
mov
rcl
sub
iret
arpl
popa
xchg
mov
jae
xchg
test
stc
pop
push
addr16
sti
and
push
mov
xor
add
mov
pop
or
inc
cmc
shlb
jno
out
mov
sub
and
aad
xlat
jns
dec
jge
test
popf
pop
sbb
xchg
call
mov
xlat
scas
enter
push
rorb
adc
repnz
push
jle
leave
or
adc
cmp
std
mov
outsl
adc
fildl
inc
push
mov
pop
hlt
lea
mov
mov
out
pop
dec
push
push
xor
shl
add
dec
sub
fcmovbe
push
xlat
std
pop
ret
push
mov
ds
test
lds
jns
sbb
jb
icebp
push
cmp
lods
mov
cld
in
xchg
push
mov
pop
pop
pusha
lods
dec
cwtl
lods
xorl
jmp
fists
sbb
mov
adc
mov
addb
addb
jo
and
inc
adc
ds
aam
xor
cwtl
xor
mov
mov
aaa
push
dec
jg
aaa
shrb
aad
fprem
xchg
aad
mov
cmpsl
addl
or
xor
and
leave
loop
and
jno
or
icebp
daa
push
lds
jnp
mov
mov
mov
push
dec
inc
mull
fsubrl
dec
xchg
movsb
repz
flds
out
sbb
lahf
push
and
sbb
frstor
jg
jg
nop
and
push
mov
cmp
dec
and
pop
test
dec
cmp
pop
cmp
mov
add
dec
sarb
push
loopne
mov
sub
pop
xchg
mov
push
scas
cltd
movsl
insl
repnz
add
sbbl
popf
adc
or
push
sbb
dec
out
gs
jl
hlt
sbb
or
cmp
lds
cld
cmp
leave
inc
adc
mov
mov
or
daa
xchg
adc
dec
mov
inc
fs
mov
xchg
lock
or
jae
pop
test
sbb
call
adc
leave
in
stos
arpl
and
aaa
aam
adc
cmp
das
mov
fdivrs
add
imul
lock
in
stc
mov
cmp
iret
inc
pop
cwtl
orl
mov
push
jecxz
xchg
fnstcw
daa
dec
cli
int3
pop
call
sar
lds
jg
push
je
dec
pop
fcmovne
xor
and
clc
push
mov
inc
mov
sahf
arpl
out
push
shlb
arpl
loop
fcompl
fs
adc
add
hlt
out
mov
aaa
scas
dec
pop
scas
cmc
out
or
fildl
ds
mov
shl
sub
in
sbb
adc
push
inc
inc
xchg
iret
xchg
mov
jne
repnz
jl
mov
mov
shll
or
lahf
rclb
inc
cmp
subb
or
jns
xchg
cli
dec
nop
rcll
cmp
hlt
clc
std
popa
jge
xor
mov
cld
push
pop
xchg
inc
sahf
jae
mov
shlb
sahf
push
push
mov
outsb
xlat
add
add
sbb
pop
adc
adc
dec
cwtl
cwtl
push
cs
mov
sbb
pop
insl
dec
scas
xor
mov
clc
mov
jnp
cmp
aam
out
mov
loope
mov
hlt
out
pop
aad
push
jg
sahf
mov
or
jp
jns
imul
push
pop
ljmp
je
stc
mov
lret
dec
add
jmp
mov
lret
jns
mulb
xchg
mov
addr16
and
dec
sahf
int3
sti
imul
stc
fsubrp
mov
pop
xchg
inc
push
jns
fmull
std
mov
ficompl
lret
dec
mov
lea
lea
xor
jb
fwait
mov
in
jne
enter
call
fdiv
push
jmp
lea
loop
enter
lcall
test
mull
arpl
jo
testb
into
push
sub
xchg
test
jmp
jge
fnop
xchg
or
push
jo
sub
mov
test
aaa
fwait
cmpsl
sub
xchg
mov
mov
pop
rcrl
lds
push
insb
fcoms
xchg
jmp
sbb
loope
or
loopne
ljmp
bound
mov
vpmaddwd
xor
rclb
add
ret
push
cmp
inc
dec
mov
adc
aad
mov
aaa
in
incb
push
sub
scas
fcoms
loope
add
loope
fstl
push
clc
pop
roll
pop
mov
scas
mov
mov
sub
js
movsl
pop
divb
inc
sbb
test
aad
jmp
ja
sub
pop
and
adc
repnz
inc
cmp
inc
imul
into
dec
sbb
dec
push
and
jmp
xchg
mov
or
adc
jg
stos
add
xchg
fnstcw
out
mov
mov
inc
mov
lea
mov
cmp
xlat
popf
xor
cmp
aas
add
shll
or
cwtl
mov
mov
cmp
mov
sbb
or
sub
and
test
cmp
adc
int
push
cmp
pop
lcall
shrb
insl
fisubs
pop
dec
sbb
mov
jo
test
out
xor
sti
cmp
mov
sub
xchg
out
outsb
mov
popf
pop
and
xchg
sahf
es
jno
in
shl
int
push
stos
mov
push
xor
inc
xchg
ret
loopne
outsl
pop
jb
outsb
add
fnsave
dec
mov
aas
leave
mov
cwtl
shr
out
pushw
in
leave
mov
xlat
shl
shrl
cmp
lock
sub
mov
push
sub
arpl
hlt
out
or
xchg
outsb
ret
cmp
test
repz
push
leave
mov
bound
outsl
aaa
je
push
hlt
sarl
pop
adc
sbb
mov
fisttpl
daa
sbb
mov
and
cmp
aad
subb
push
outsb
ret
imul
out
jns
mov
mov
mov
inc
in
ficoms
add
jecxz
rorl
fs
in
cli
cwtl
or
adc
clc
loope
idivl
jmp
in
mov
clc
adc
loope
sub
movsb
jl
sbbb
mov
lea
fldl
ljmp
xor
mov
dec
push
clc
and
popa
repz
out
out
cmp
pop
cs
jmp
inc
aam
shlb
pop
or
mov
jle
cmp
mov
sbb
mov
inc
test
ret
in
in
clc
mov
jp
pop
and
call
pop
enter
pop
fbstp
jae
idiv
lret
sub
jecxz
imul
add
cmp
inc
dec
fldenv
sarl
jb
fmuls
lods
cld
scas
test
mov
cmp
mov
sub
pop
cltd
xchg
mov
addr16
xchg
stos
mov
mov
gs
jg
int3
adc
jo
js
sbb
iret
push
icebp
add
ljmp
mov
bound
cmpsl
mov
repz
add
repnz
aad
sti
fchs
cmc
jnp
xor
aam
pop
pop
sbb
xchg
and
add
stos
dec
sub
out
jae
popa
add
sub
jnp
xchg
imul
inc
sti
or
shlb
inc
jle
pop
out
test
dec
sub
jbe
xchg
mov
ljmp
lcall
lret
lcall
mov
add
push
insl
pop
dec
mov
jl
ds
sti
cli
push
fsubr
xorl
cmp
enter
or
ret
xchg
xchg
leave
sbb
js
stos
loop
cmp
inc
jge
dec
shr
add
testl
sbb
jbe
je
mov
ds
and
lahf
or
mov
pop
shll
mov
jae
lret
pop
mov
lock
mov
stos
test
fidivl
hlt
pop
addr16
inc
xchg
adc
outsl
std
inc
fisttpll
out
push
testl
add
popa
jmp
imul
das
shll
fsubp
cmp
pop
fxam
aam
hlt
jecxz
push
repnz
inc
adc
pop
fisubrl
hlt
mov
add
jmp
jo
mov
jo
add
jmp
insb
dec
xor
cmpsb
mov
push
add
push
cmc
pop
leave
xchg
inc
repnz
vpsllq
inc
push
test
dec
out
xor
aaa
sub
mov
rorl
push
jns
xchg
jle
pop
jp
pop
out
pop
inc
mov
xor
adc
push
cmp
adc
cmpl
sub
mov
mov
lret
call
add
daa
mul
out
and
test
jns
loop
in
cmp
or
aad
xlat
test
xchg
cmp
jmp
mov
adc
nop
int
pop
cwtl
fsubl
mov
shlb
jg
popa
mov
mov
sti
mov
iret
xor
xor
je
mov
lcall
pop
xchg
mov
xchg
daa
cmpsb
test
xlat
iret
xchg
add
xor
jp
sub
inc
clc
je
mov
test
xchg
cmp
das
xchg
dec
std
icebp
outsb
ret
mov
jbe
jl
xchg
fstp
mov
pusha
mov
movsb
jo
testb
mov
xchg
popa
mov
mov
inc
imul
stos
test
mov
mov
arpl
fwait
ljmp
and
shlb
jo
inc
inc
push
xlat
pop
in
icebp
es
inc
movsb
mov
lahf
dec
push
adc
jbe
pusha
aaa
xor
lret
xchg
mov
add
mov
imul
icebp
test
inc
jmp
jmp
push
xor
xor
fidivrl
movsb
mov
cli
mov
adc
jl
fdivrl
fildll
sub
adc
cmp
iret
inc
cmc
addl
cld
outsb
out
jb
rclb
adc
sub
inc
out
popf
inc
fldl
dec
outsb
loopne
jge
xchg
clc
adc
cmc
adc
ja
adc
jle
sub
call
movb
dec
mov
mov
fwait
adcl
dec
ret
mov
dec
addb
mov
sbb
insb
add
enter
xchg
or
push
loop
jbe
stc
movsl
addr16
movsl
aad
push
cltd
repnz
jecxz
push
orb
dec
insl
and
pop
add
mov
mov
jg
cld
xchg
lcall
out
mov
sub
sbb
data16
imul
cs
fs
aaa
repnz
cmpsb
cmp
sbb
pop
shlb
push
sub
scas
movsl
cmp
sarl
jmp
pop
fnsave
fs
lret
cld
adc
js
or
xchg
repz
push
or
negb
aas
pop
in
jne
inc
orl
psubusw
insb
outsl
insl
jbe
push
add
sbb
cmpsl
fwait
movl
mov
fbld
xor
jmp
lcall
aas
int
sub
out
cmp
xchg
adc
fwait
or
xchg
sarl
push
add
sub
sub
enter
loope
es
and
aas
in
pop
jecxz
addr16
int3
dec
mov
pop
ss
aam
js
add
xorl
inc
adc
push
mov
jno
push
mov
cmpsl
divl
sub
xchg
and
sbb
stos
out
sub
mov
adc
cmp
out
push
movl
push
mov
and
dec
pusha
jo
ret
test
pop
xchg
pusha
lret
jbe
in
xor
mov
fistl
push
out
out
lea
addr16
xchg
mov
push
inc
jno
fwait
xchg
add
fsubs
mov
cs
ljmp
fldt
xchg
stos
repz
sbb
fnstsw
sbb
ffreep
pop
or
jbe
xlat
xchg
mov
icebp
sbbl
xchg
test
mov
lcall
jg
or
into
insl
push
add
jns
cmp
cmp
leave
sahf
sti
icebp
sbb
daa
xor
and
adc
xchg
mov
push
xlat
scas
xlat
or
repz
iret
hlt
mov
fs
and
fucomi
jecxz
enter
sub
in
adc
mov
imul
ret
pop
movlhps
mov
xor
xchg
out
in
jo
sub
ja
jnp
ss
cmpsl
sahf
fwait
lds
or
xchg
sub
ljmp
mov
mov
nop
das
stc
mov
nop
lods
scas
movsb
mov
cmp
int3
daa
pop
add
push
xor
out
adc
adc
jo
mov
push
lods
mov
sbb
outsb
push
inc
lods
aam
xorl
inc
cmpsl
pop
jae
push
dec
imul
and
orb
jns
scas
cmpsb
dec
cmp
std
mov
iret
mov
mov
and
orb
pushf
clc
sahf
and
mov
ss
xchg
jo
pop
adc
or
mov
push
popf
ljmp
nop
fistl
jae
aas
jno
es
adc
cmpb
jg
fisubl
stos
ljmp
scas
clc
mov
imul
lret
loop
js
mov
in
sub
rcll
adcl
add
add
sbb
xchg
mov
add
mov
xchg
sahf
xor
in
jo
pop
stos
shlb
repnz
mov
pushf
lea
or
mov
stc
cld
and
pop
fstpl
in
jge
sbb
negb
into
out
rorl
rep
into
xchg
aaa
push
lds
bnd
adc
pushl
jecxz
out
mov
xchg
or
sti
mov
sbbl
xchg
pop
xorl
jnp
sti
or
clc
jmp
fucomi
sub
int3
or
mov
push
jle
or
insl
fs
fnsave
xchg
gs
das
jp
pop
and
in
fucompp
sub
fnsave
dec
sub
cmp
xchg
int
mov
and
inc
adc
daa
jecxz
inc
xchg
cmp
cmp
add
stos
sbb
xchg
lods
cmp
xchg
push
das
sbb
jo
rolb
jmp
pop
addl
xor
lret
fcmovnb
inc
mov
ds
xor
movsb
dec
sbb
test
pop
repnz
cmp
movsb
lock
fwait
or
jecxz
mov
pop
lods
or
mov
addr16
je
js
pusha
outsb
cmp
test
mov
lcall
and
dec
fdivs
dec
sbb
xor
push
jne
je
lea
mov
cltd
cmc
std
jle
dec
jp
inc
sbb
inc
jnp
lds
mov
shll
jns
cmp
dec
lds
out
push
cmp
xchg
fidivl
cld
loope
jge
in
aam
pusha
xor
call
imul
add
mov
loop
aas
xchg
lret
ljmp
push
xchg
fdivs
mov
mov
adc
scas
xor
sub
dec
pop
xchg
pop
sub
jp
mov
adcb
movsb
sbb
cmp
jne
cmp
mov
sub
jp
dec
and
bound
push
mov
popf
cwtl
ficomps
sbb
ja
in
cmp
push
test
hlt
icebp
repnz
sbb
imul
fmull
sbb
cmc
and
xor
add
push
push
sub
jae
addr16
pop
frstor
xlat
mov
cmp
sub
or
add
sub
fisubs
or
jno
fnop
mov
ljmp
mov
int
dec
lods
jbe
clc
jb
push
mov
mov
lret
jnp
or
inc
sbb
fisttps
hlt
adc
jle
mov
jno
fsubrp
sbb
mov
das
or
ja
outsl
push
pop
movsb
mov
cmp
in
and
mov
aas
or
into
or
pop
xor
mov
pop
sub
xchg
inc
addr16
nop
lea
inc
aaa
jnp
xor
jl
sub
cmc
out
dec
repz
cmp
adc
aas
clc
nop
lds
dec
ljmp
hlt
mov
and
ja
mov
mov
sub
pushl
rolb
leave
adc
pop
je
add
fildl
idivb
pop
fmuls
jl
cmp
mov
rcll
jno
mov
dec
add
dec
inc
or
push
stc
call
jo
mov
sbb
lret
cmpsl
out
fstpt
loop
jle
out
sti
scas
mov
jge
and
mov
test
jnp
mov
cmp
inc
out
cmp
dec
nop
cmp
mov
mov
rol
cmpsb
jp
popf
ret
dec
arpl
mulb
lods
std
mov
ss
or
inc
ffree
lea
sbb
sub
jnp
mov
mov
enter
xchg
jbe
sbb
fs
loop
cmpsl
in
pop
xchg
adcb
push
adc
loopne
bound
push
xchg
in
mov
out
mov
add
cmp
mov
xchg
movsl
add
dec
bound
push
setnp
add
sub
push
aas
or
cmp
adc
cmp
call
pop
push
dec
mov
notb
fisubl
fnstenv
bound
or
mov
fs
adc
in
bound
lds
fcmovnb
cmpsb
orb
inc
bnd
adcb
push
adc
mov
out
sbb
rcrl
rcrl
imul
pop
pop
test
sbb
jl
dec
or
hlt
mov
je
push
push
das
xor
ss
adc
fdivrs
loope
mov
in
adcb
sti
push
fidivs
mov
cmp
data16
aaa
adc
in
les
xchg
sbb
out
daa
lret
xor
push
pop
les
or
outsl
test
movsb
rolb
jle
sbb
hlt
adc
cs
jnp
mov
or
fmul
mov
sbb
into
in
insb
xchg
adc
inc
rcll
adc
mov
cltd
bound
or
inc
cmp
add
repz
mov
xlat
pop
dec
and
dec
adc
outsl
pusha
and
pop
in
incb
pushf
mov
sub
jo
mov
push
addb
in
fcoml
insl
das
mov
repz
repnz
scas
daa
push
inc
repnz
or
or
scas
decl
movsl
movsb
movsb
cwtl
xor
ja
scas
sbb
out
repz
clc
das
scas
mov
mov
mov
push
add
or
mov
daa
sub
or
xchg
cld
jb
scas
out
dec
jle
or
out
in
cli
jl
in
sar
insb
mov
pushf
push
hlt
push
test
jmp
adc
sub
aad
jnp
rolb
std
shl
lods
push
dec
hlt
mov
mov
mov
stos
or
mov
aam
push
mov
pop
fwait
movsl
jecxz
inc
cmpsl
mov
and
out
xchg
inc
jle
sub
push
push
fadd
ds
pop
jmp
jne
mov
xchg
push
or
xor
pop
rcrl
jo
cmpb
mov
dec
mov
int
pop
sahf
xor
sbb
pop
idivb
das
subb
and
xchg
dec
pop
xchg
and
sbb
pop
shr
push
cmp
mov
rcll
jns
ret
jp
mov
fisubrs
cmp
lret
loopne
lea
test
pop
popa
cli
mov
js
push
cmp
jo
pop
scas
add
fucomi
jae
push
xor
xor
push
fucomi
mov
add
shrl
pop
int
sub
mov
dec
or
mov
cmp
sub
xorl
fadds
jmp
aad
enter
fcmove
call
out
scas
je
movsl
mov
cmp
add
jl
mov
mov
mov
cmp
in
out
fcomps
stos
fisttpl
sbb
mov
in
or
pusha
add
mull
aam
xchg
sub
ret
aad
jnp
sub
icebp
or
mov
pop
or
in
adc
sub
push
cmovns
cmp
xlat
or
sbb
data16
loopne
sub
aad
insl
pop
stos
enter
xchg
insb
fs
test
mov
and
sub
inc
out
fistl
jno
cmp
in
hlt
or
cmp
loope
lods
mov
xor
clc
ret
adc
fs
sub
test
fldenv
pop
std
jl
notb
pop
add
jb
andb
jo
cli
add
push
enter
int3
in
leave
cmp
xor
and
mov
mov
and
jns
xchg
push
xchg
xchg
ljmp
cmpsb
jg
int
popa
add
lods
mov
cmp
add
or
movsb
add
cmpsb
inc
xchg
repnz
jmp
jae
frstor
adc
fs
ds
cmp
xchg
cwtl
cmp
pop
bound
divb
clc
sub
popa
jae
lea
xchg
xchg
lock
pop
fdivs
dec
loope
xor
dec
jg
jle
daa
int
ss
pop
add
cwtl
js
mov
mov
gs
mov
lcall
int3
cs
ret
pusha
cmpsl
stos
stos
push
adc
imul
incb
add
push
dec
int3
push
push
xlat
and
pop
int
and
add
in
pop
ljmp
sub
rcrl
dec
ret
stos
fistl
icebp
fistpll
bnd
ss
push
xchg
sbb
popa
aam
arpl
loope
mov
in
mov
mov
aad
je
lea
test
jg
mov
std
jb
addr16
cmp
or
adc
cmp
sti
sub
ret
inc
push
repnz
cmpsb
mov
repnz
pop
adc
insl
xor
ljmp
icebp
pop
repz
mov
movb
xchg
push
dec
sbb
imul
mov
jno
repz
in
adc
mov
clc
int3
pop
pop
cmp
push
dec
stos
sbb
test
or
cwtl
mov
inc
push
mov
cmp
xor
loopne
popa
ja
repz
push
stos
jb
mov
xchg
mov
xchg
push
fs
leave
ffreep
stos
sub
andl
ss
aaa
push
or
dec
pop
data16
push
add
cmpsl
repz
data16
jns
pop
add
aam
int3
dec
ret
iret
aad
daa
out
lock
test
fstl
pop
je
xlat
xchg
repz
fs
pop
popf
inc
inc
fs
cld
jge
lret
adc
mov
push
inc
and
lods
ret
rcl
les
cmpb
lahf
mov
xor
ja
dec
dec
add
jae
mov
negb
dec
mov
mov
pusha
fadd
mov
or
add
es
mov
pop
lret
out
cmc
loop
mov
xchg
movsb
cmpsl
into
int3
test
dec
je
movsl
cmp
sub
out
mov
or
bound
cmpsb
negb
jnp
aad
daa
mov
pop
mov
jle
pop
jmp
lret
push
popf
cwtl
dec
loope
push
mov
or
out
xchg
push
push
imul
mov
test
rorb
pop
dec
add
dec
xor
mov
pop
lret
addr16
fmull
xor
xor
int
add
jb
xchg
out
fwait
mov
inc
sbb
aaa
insb
repz
cmp
adc
push
jp
outsl
fistpl
inc
dec
bound
and
mov
lods
int
xor
iret
daa
dec
jmp
sbb
push
mov
push
push
or
dec
and
mov
or
cmc
jecxz
jb,pn
cld
iret
adc
jbe
mov
mov
out
or
stc
pop
mov
add
out
add
xchg
jmp
dec
xor
dec
xor
add
mov
mov
sarl
push
xchg
xchg
sets
in
outsb
xchg
or
ret
fstpl
dec
sub
incl
push
xchg
out
mov
mulb
dec
mov
xchg
jae
mov
dec
sbbb
mov
mov
jg
cmp
and
ds
push
ret
sarb
adc
subl
sub
pushf
push
push
pop
mov
inc
pushf
push
mov
in
fnstsw
jbe
mov
or
jns
xlat
xchg
jl
mov
jl
ret
mov
cli
xor
pop
mov
inc
rol
sbb
mov
negl
popa
sub
pop
hlt
sbb
jae
jge
add
sbb
push
fisttps
sbb
push
icebp
in
mov
inc
jl
adc
sub
shlb
and
mull
out
daa
in
adc
andl
dec
ret
ret
leave
lods
fs
lods
sbbl
sbb
sub
or
mov
shl
or
mov
test
int3
mov
test
or
lods
dec
sti
cmp
data16
sbb
sbb
call
lahf
lea
lret
inc
or
int
or
mov
inc
jecxz
gs
pop
pop
sbb
lods
cmp
xor
lret
and
mov
adc
cld
sarl
add
dec
scas
mov
stos
pop
push
out
stc
lods
lret
cmpsb
shl
ja
std
xchg
or
clc
mov
scas
push
testb
xchg
stos
adc
imul
or
fildll
sti
cpuid
mov
cltd
and
pop
lret
repz
ret
push
pop
cs
outsl
inc
hlt
ds
int
pop
loop
push
int
mov
mov
push
jne
sti
cmc
cmp
aad
lahf
lods
mov
sbb
add
shrb
mov
lcall
lock
mov
les
pop
inc
cld
xchg
imul
jge
jb
lock
mov
scas
pop
cltd
pusha
cld
mov
cmp
aaa
test
iret
add
out
pusha
test
push
xchg
push
adc
mov
daa
sub
mov
mov
pop
ret
outsb
mov
out
mov
testl
or
xchg
out
mov
ficomps
lods
push
xchg
sahf
shll
push
xor
cld
ret
push
push
add
rolb
add
mov
xor
lcall
cmp
test
mov
sbb
add
cmp
insb
sub
out
pop
out
icebp
inc
jp
jnp
call
mov
xchg
dec
mov
out
or
jns
sahf
fnstenv
popf
addr16
push
xchg
es
outsl
mov
fwait
sub
jl
call
inc
pusha
movsl
shll
adc
add
or
stc
sbb
fcmove
sbb
sahf
subl
inc
loope
and
sbb
or
rcrb
mov
repnz
xor
sbb
mov
sbb
shrl
pop
movsb
imul
sbb
pop
push
lock
cmp
ljmp
mov
test
jns
xchg
cmp
fildll
add
sbb
out
cmp
out
je
lods
xchg
pop
add
sbb
push
jl
push
lret
jno,pn
scas
add
ret
sbbb
xor
cmp
loope
add
and
jp
out
cmp
cs
and
outsb
mov
andb
mov
aas
jo
scas
xchg
outsb
dec
test
pop
jmp
jb
call
stos
stos
inc
insb
cmc
push
jae
mov
or
mov
addl
ret
dec
aam
sbb
int3
bound
scas
push
in
test
mov
jmp
mov
dec
push
ret
or
test
lock
cmpl
push
jbe
adc
xchg
fstp
inc
cs
js
adc
scas
pushf
fisubrs
jno
cwtl
into
gs
daa
mov
push
jl
mov
shrb
fs
into
cmp
mov
adc
movsb
sbb
cltd
shl
negb
jp
out
out
and
cmpsl
jp
mov
xor
inc
mov
es
popa
cwtl
xchg
fs
sahf
sahf
mov
ja
dec
imul
movsl
jecxz
jl
and
data16
push
push
addb
lea
inc
dec
cmp
pop
cmp
aam
jmp
scas
push
xchg
test
xchg
or
mov
pop
outsb
test
insl
xor
adc
sub
hlt
or
jbe
push
insl
ljmp
aaa
pop
lret
sti
cli
or
data16
mov
pop
call
jle
adc
xor
push
test
or
jno
ret
and
sbb
lea
mov
nop
lea
sarl
push
adc
loopne
repnz
mov
adcb
pop
and
pop
scas
pushf
xchg
adc
pop
cmc
in
cli
mov
decl
xchg
xor
frstpm(287
loop
xchg
sbb
lock
sub
cwtl
leave
mov
jbe
mov
lret
rolb
stc
mov
mov
ror
lcall
clc
adc
fsubrp
dec
lods
push
pop
inc
xorb
adc
fsubrs
dec
outsb
add
push
bound
sbb
imul
pop
ja
in
cwtl
add
sahf
mov
jle
inc
pop
jns
shll
shlb
mov
jae
in
mov
and
pop
shl
push
negl
je
mov
out
adc
stos
mov
or
data16
int3
call
cmp
xchg
mov
outsb
mov
sub
sub
mov
data16
gs
rcrl
in
jmp
call
xor
add
pop
ds
in
pop
push
js
sti
mov
push
mov
arpl
addr16
jns
dec
dec
mov
xchg
push
into
push
out
pop
ljmp
divb
jne
and
pop
insb
jbe
mov
es
add
mov
push
mov
test
movsl
jmp
push
push
subb
inc
adc
addr16
sub
fcmovne
mov
mov
rorl
cld
push
fistl
aaa
xor
punpckhbw
mov
or
add
iret
pop
pop
xchg
cmp
mov
int3
mov
mov
mov
sbb
stc
adc
jns
jb
sub
inc
fldenv
bound
ficoml
mov
push
or
push
cld
pop
push
aam
xor
mov
lret
push
bound
push
add
scas
add
push
xchg
fwait
or
shrb
cmc
iret
test
sbb
icebp
and
adc
push
in
mov
notb
aad
jle
sbb
adc
xor
imul
jle
jnp
enter
xchg
xchg
sub
or
outsl
ds
mov
push
movsl
xchg
mov
mov
cmpb
aad
loope
rolb
fistl
mov
jmp
push
inc
std
xchg
sub
mov
and
and
add
lea
jp
and
xchg
sbb
cli
sti
shrl
mov
push
je
sarb
loop
jns
mov
and
sub
sbb
xchg
shl
push
scas
dec
incb
lcall
push
add
push
outsl
arpl
push
xor
jecxz
ds
leave
xor
inc
insb
shl
push
shlb
push
jno
mov
inc
je
push
testl
imul
fiadds
cli
sub
mov
adc
popf
xchg
ret
add
sub
in
mov
mov
sub
lods
or
js
add
jmp
cli
push
cwtl
push
and
cmpsl
mov
das
sbb
stc
sub
out
and
das
sbb
outsl
pop
mov
push
and
adc
call
cmpsl
jge
cwtl
and
pop
lock
sub
or
adc
adc
sbb
fwait
dec
fistl
jmp
xlat
into
sbb
lods
ss
cmp
flds
outsl
dec
fs
cmpsl
mov
int
sbb
fisubrl
jg
sub
pop
sbb
pop
adc
enter
ret
out
xchg
jmp
rcr
xor
fcom
xlat
ja
aam
mov
enter
ret
test
mov
ret
inc
mov
cs
fucom
dec
lret
loopne
scas
mov
out
xlat
int
jo
add
and
js
test
outsb
adc
rdmsr
xor
inc
xchg
sbb
leave
loope
pop
in
ss
shlb
popa
mov
pop
imul
call
add
push
mov
inc
lea
mov
mov
cltd
lcall
or
pop
decb
sub
aaa
xor
nop
popf
xchg
add
cwtl
icebp
or
fildl
mov
or
pop
pop
and
and
jecxz
cmp
hlt
call
fimuls
mov
bound
cmp
pop
mov
mov
xor
nopl
mov
ljmp
sbb
mov
mov
cmp
ret
adc
and
cld
repnz
std
mov
mov
mov
rorl
cmpsb
lods
shlb
and
jmp
jge
fbld
lret
push
ljmp
movsb
mov
hlt
ljmp
pop
lahf
cmpl
jnp
fadds
bound
stos
or
lock
xor
cli
call
sub
outsl
out
fldl
cs
push
out
mov
mov
inc
xchg
lcall
dec
push
gs
sbb
cmp
arpl
jp
push
push
scas
push
lock
add
dec
inc
mov
pop
out
fwait
pop
sub
jnp
add
bound
sti
cli
xchg
lds
test
int
pusha
out
outsl
mov
outsl
lea
xchg
test
outsl
pop
and
lods
xchg
jmp
das
int3
fcoms
rolb
fwait
mov
push
cwtl
ljmp
adc
hlt
and
addr16
daa
adcb
lea
mov
sti
daa
dec
call
and
cwtl
andl
lret
adc
add
mov
mov
ret
mov
cmp
data16
shl
lock
pop
rcl
das
out
test
inc
pop
data16
mov
cld
pop
dec
or
rcrb
fwait
add
adc
add
xorb
mov
das
xchg
add
jge
xor
jg
rol
icebp
jb
cmp
aaa
inc
mov
imul
cs
in
imul
gs
push
wrmsr
jno
xchg
sbb
xchg
out
rcrb
jae
lcall
xchg
test
jae
mov
in
push
notb
test
and
es
or
sbb
dec
mov
inc
pop
add
push
jecxz
outsb
xor
dec
mov
pop
pop
adc
xor
push
nop
into
adc
and
gs
pusha
dec
bnd
xchg
inc
push
addr16
mov
cmp
jle
decl
dec
popl
imul
pop
pushf
push
dec
lret
xchg
xor
sub
mov
jnp
dec
in
add
mov
das
mov
ret
or
test
out
mov
out
lcall
pushf
cmp
dec
ret
aad
int
pop
mov
cmp
sbb
xchg
lahf
aaa
xchg
xor
sub
mov
bound
mov
and
jno
rol
dec
lahf
insl
adc
dec
in
das
std
cmp
jno
aaa
addr16
test
cmp
or
pop
pop
jge
popl
mov
std
fcomi
arpl
fbld
clc
divb
fsub
pop
jb
add
dec
sbb
inc
add
jmp
sub
and
push
in
push
jne
loopne,pt
test
test
mov
or
adc
ja
dec
mov
int3
mov
in
jae
sub
rclb
mov
adc
out
clc
or
lahf
mov
lret
xor
xor
jg
test
jno
aam
jecxz
int3
pop
data16
in
adc
sahf
push
push
stos
jno
sub
std
clc
push
adc
nop
xchg
mov
jmpw
inc
out
jecxz
incl
movsb
mov
inc
push
sub
dec
or
add
mov
push
jge
xorl
adc
aam
pop
pop
popa
scas
xor
add
out
or
mov
or
mov
adc
cmp
outsl
mov
call
sub
aam
cltd
dec
cmp
add
push
push
sbb
xchg
ja
bound
cwtl
cmpb
and
lock
xchg
je
cmc
aas
pop
sub
stc
loopne
cmp
ret
nop
mov
movsb
cmp
xchg
imul
gs
inc
pop
jge
cli
add
ret
mov
jp
aad
mov
mov
mov
shll
xor
cs
xchg
in
xlat
fbstp
into
pop
or
andb
add
cmpsb
into
fstl
stc
cwtl
lahf
push
mov
das
ds
hlt
addb
mov
repnz
aam
lods
jmp
sbb
sbb
xchg
cmpsl
mov
loop
leave
mov
and
xchg
adc
or
sub
mov
mov
jbe
sub
enter
inc
rol
cmp
jg
icebp
push
shrb
adc
dec
and
xor
lahf
stos
ljmp
frstor
data16
or
sahf
and
jnp
inc
push
insl
sbb
repnz
fcmovne
repz
inc
outsb
push
es
jl
pop
dec
inc
std
loop
es
movsb
aad
dec
or
das
in
and
pop
cld
push
sub
test
sub
test
mov
push
push
insl
xlat
or
loopne
repz
adc
testb
arpl
daa
mov
xor
mov
popa
je
fbld
mov
push
scas
fs
jecxz
stc
mov
out
cmpsb
into
adc
sub
mov
dec
into
fmull
ljmp
dec
push
test
cmp
dec
jnp
sub
lahf
mov
inc
inc
xchg
xor
mov
not
push
in
inc
mov
sbb
outsl
sar
sub
data16
pop
jmp
push
clc
xlat
incl
lcall
add
cmp
pushl
inc
loop
iret
adc
or
aas
pop
inc
inc
jmp
lock
fdivs
and
fildl
or
pop
jbe
sub
ja
lret
fistpl
dec
jecxz
dec
rclb
push
stc
hlt
cmpsb
jne
call
adc
xlat
pop
movsl
sbb
add
xor
mov
and
lcall
sub
fmuls
das
and
std
scas
lds
in
rcrb
mov
rep
xchg
mov
jle,pn
shrb
jmp
dec
pop
cmc
icebp
mov
sbb
inc
daa
aad
push
cltd
and
ds
dec
aam
enter
mov
movsb
icebp
nop
and
pop
mov
ljmp
call
sarb
faddl
test
xchg
outsl
lods
lahf
sbb
pop
popa
jne
jns
sub
add
inc
push
mov
test
data16
sub
mov
pop
inc
xchg
xor
mov
jns
xor
push
lret
jns
in
cmpsb
fcompl
std
pop
cmp
xchg
push
clc
lahf
or
cmp
ds
pop
lret
in
jno
lahf
dec
mov
pop
pop
cltd
nop
hlt
xchg
dec
cmp
fstpl
mov
xor
mov
push
or
jne
push
fwait
and
mov
inc
dec
push
jle
fcompl
xchg
sbb
push
jg
dec
shll
aad
andl
mov
xlat
in
push
lods
sbb
lret
pop
stos
cmp
pop
jns
hlt
jbe
rclb
mov
js
scas
aam
hlt
jg
jb
cmp
push
mov
aam
ror
lret
cmp
lock
cmp
and
pop
cltd
pop
mov
mov
leave
mov
jb
and
pop
insl
pop
pop
adc
pop
lods
lret
es
jb
cld
mov
inc
arpl
das
mov
cmp
xchg
dec
movsb
je
scas
jp
aas
bound
add
movsl
mov
adc
fimuls
stos
in
push
jg
and
ret
aaa
adc
or
fidivs
lock
fidivrs
xchg
jbe
outsb
push
insb
leave
mov
mov
mov
ret
and
lea
movb
or
xor
pushf
pushf
jae
xchg
dec
fst
adc
mov
push
adc
and
mov
fbstp
sbb
lahf
cmp
sub
dec
or
lret
lret
aaa
adc
adc
in
fiadds
mulb
push
test
dec
shl
popl
jg
adc
hlt
inc
xchg
sahf
add
dec
pusha
bound
push
sbb
repnz
jmp
ret
dec
fstl
adc
pop
in
loopne
aad
mov
cmp
and
rclb
adc
icebp
sub
or
xchg
mov
jne
aaa
je
jle
adc
sub
stc
into
out
xchg
in
mov
push
ljmp
xchg
dec
jg
push
push
mov
mov
xchg
sbb
lret
scas
and
mov
outsl
xchg
xchg
add
mull
and
pop
hlt
xchg
popa
test
fmuls
jmp
pusha
and
fadd
leave
enter
xor
jge
icebp
dec
call
sub
addr16
sti
lods
pop
notl
add
shr
dec
and
cmp
push
idiv
loop
add
dec
mov
cmp
mov
xchg
xorl
xchg
xchg
std
jp
dec
jbe
push
or
xor
dec
jno
sarl
pop
mov
nop
push
es
xor
sbb
gs
sub
movsl
xor
jno
aad
ljmp
xchg
dec
mov
jp
pop
movsl
cmp
repz
sub
loop
inc
xor
iret
jo
pop
push
push
xor
aam
mov
daa
mov
or
ficompl
add
gs
or
mov
enter
pop
cmp
cltd
insl
cli
cwtl
imul
cmp
push
sbb
daa
movsl
rclb
leave
out
push
cmp
dec
sar
cmp
test
cmp
mov
icebp
sbb
xor
cltd
cltd
rcr
dec
and
cltd
cmp
movsb
pop
scas
inc
lcall
sub
pop
dec
push
aaa
pusha
ljmp
cmc
jp
jmp
dec
xchg
mov
repnz
push
rol
jle
repz
pop
bound
dec
add
daa
xchg
icebp
xchg
mov
ret
js
packssdw
clc
add
aam
xor
aam
or
mov
push
push
xor
push
adc
push
repnz
push
sbb
sub
sarl
gs
addr16
push
adc
cs
cld
loop
sub
cwtl
xor
mov
mov
mov
notb
inc
sbb
fcomi
mov
mov
dec
xor
cmpb
sbb
sti
or
mov
pop
adc
ja
std
fistps
pushf
inc
into
mov
imul
aas
out
notl
shll
add
jle
cmp
push
lcall
pushf
mov
add
imul
in
into
sti
sub
mov
hlt
or
stc
xor
jmp
scas
repnz
cmp
lods
stc
and
or
cmpsl
mov
mov
js
mov
pop
arpl
jmp
add
xchg
pop
fs
xor
rclb
sub
das
jmp
test
mov
mov
arpl
rcrb
push
int3
and
cmpsb
cltd
mov
xor
and
and
loope
in
jl
mov
xchg
dec
inc
icebp
cmp
mov
inc
push
xor
cmc
popf
xchg
mov
fs
and
sahf
insb
in
js
lcall
imul
pushf
ss
push
aad
mov
movl
or
mov
cwtl
add
xchg
lcall
ljmp
sbb
pop
mov
jo
cmp
sub
movsl
leave
mov
pop
hlt
mov
dec
ret
jae
out
in
or
push
dec
adc
hlt
cltd
mov
andb
push
fs
mov
ds
clc
imul
xor
cmc
frstor
pop
cmp
cltd
inc
cmp
hlt
nop
cmp
lahf
jne
insb
cltd
sub
enter
rclb
hlt
xlat
in
lret
ljmp
ja
pop
ds
and
adc
daa
lret
jge
aas
jb
mov
icebp
add
lahf
jecxz
leave
mov
inc
or
mov
das
das
push
and
imul
dec
mov
aad
call
xchg
xchg
shl
fmull
xchg
add
je
lods
cltd
scas
add
xchg
insb
adc
cs
push
adc
pop
not
lret
test
mov
mov
out
jl
push
pushf
lock
sahf
adc
push
jns
ss
push
sti
sbb
sbb
adc
cmpsl
cmp
inc
cltd
loopne
mov
inc
pusha
sub
repz
cltd
stos
enter
rcrl
inc
cltd
dec
jge
add
ret
mov
icebp
cmc
leave
inc
push
fists
fildll
cmp
cmp
aam
or
push
jl
dec
pop
xor
inc
imul
mov
mov
inc
pop
fidivrs
mov
andl
mov
xchg
cmpsb
pop
and
inc
decl
or
and
cmp
repnz
test
inc
sub
popf
add
jo
mov
cmpsb
xor
out
sbb
sbb
scas
sbb
push
loopne
loope
xchg
add
cmp
test
andl
jns
push
or
imul
arpl
testb
pop
in
cmp
adc
and
daa
push
aam
mov
xchg
mov
add
aas
and
or
pop
rorb
mov
xor
loop
loope
in
mov
js
pop
pop
repnz
stc
idivb
xchg
add
sbb
jecxz
int
mov
inc
insl
rorl
mov
aam
aaa
fistpll
ror
push
std
fdivl
dec
enter
xor
dec
sbb
cmp
out
filds
jp
sub
sub
mov
lods
iret
xchg
in
xor
push
shll
sbb
dec
rsqrtps
aad
daa
push
hlt
mov
in
and
push
nop
out
push
mul
adc
orl
inc
shll
pushf
add
sbb
iret
jle
jmp
nop
mov
dec
fisttpll
out
pop
xchg
cmp
xchg
or
adc
and
ret
inc
aad
adc
loopne
call
add
jmp
rolb
out
shll
and
add
add
stc
jg
pop
mov
int
pop
adc
adc
das
mov
mov
adc
test
jbe
lock
ja
ret
dec
or
and
inc
mov
out
jno
ficoml
or
cmpsb
mov
test
and
adc
xor
lahf
add
flds
sbb
repnz
into
mov
xchg
stc
inc
push
mov
scas
fldenv
xorl
xorb
push
icebp
inc
pop
dec
hlt
adc
mov
imul
push
sub
xor
fcoml
xchg
push
sub
idivb
loopne
xor
dec
push
sub
adc
divb
mov
or
int3
or
mov
in
pop
les
dec
stos
cld
lods
push
mov
xchg
or
mov
icebp
jp
ljmp
test
scas
push
mov
mov
push
iret
adc
mov
push
shrl
int3
xor
jo
jno
movsl
or
mov
sbb
add
jo
xor
jmp
shr
aam
push
push
movsb
mov
aam
jle
out
push
sahf
shlb
mov
add
repnz
mov
in
aad
inc
test
xor
jmp
push
adc
mov
fcmovnbe
mov
cs
xchg
leave
fs
xchg
popf
inc
push
jo
lods
pop
cli
repnz
mov
xchg
jo
xchg
jbe
pop
pushf
repz
gs
stc
sub
pop
push
in
inc
stos
vcvttsd2si
jmp
call
out
jne
fldl
cmp
mov
push
adc
jecxz
mov
push
or
mov
ljmp
sub
dec
sti
mov
pop
pop
hlt
call
mov
hlt
jnp
test
mov
pop
cmp
mov
cmp
and
cmp
adc
push
xchg
mov
lock
out
popa
int
out
mov
or
and
ds
sub
test
ss
inc
sahf
inc
pop
imul
rol
pushf
cmpsl
adc
jae
loope
cmpsb
outsb
xchg
stc
pop
pop
add
in
ror
cmp
cmpsl
push
jne
lods
les
mov
fwait
dec
xor
or
jecxz
jns
lods
rorb
imul
insb
bound
repnz
in
movsb
jne
enter
push
outsb
rcrb
push
sbb
test
mov
mov
cmp
pop
aas
dec
imulb
rcl
mov
int
stc
or
ljmp
lea
sahf
adc
dec
jmp
shrl
xlat
dec
lds
jae
mov
xchg
bswap
pop
sub
fwait
aaa
sbb
cltd
pop
adc
sti
push
jecxz
sub
mov
inc
xor
bound
add
mov
jmp
xor
gs
imul
mov
xchg
sub
or
sbb
pusha
inc
das
icebp
fbld
sbb
xor
lods
sbb
xor
xor
xchg
dec
mov
repz
pop
mov
out
jecxz
aad
pop
in
pusha
push
outsb
xor
fwait
dec
mov
xor
or
mov
bound
inc
popa
call
jne
loop
dec
js
icebp
add
mov
push
or
jbe
lret
sarl
adc
scas
sub
testl
loope
je
adc
jnp
shl
mov
mov
mov
push
ficompl
ja
lods
push
mov
cmp
mov
inc
std
call
pop
cmpsb
enter
add
jbe
jns
adc
flds
dec
push
xchg
sub
test
mov
addr16
icebp
fsubrl
mov
mov
das
lret
mov
dec
bnd
test
in
cwtl
ja
add
inc
sbb
jns
dec
fs
jl
dec
addr16
repz
mov
ss
add
gs
mov
insb
ret
sarb
cltd
pop
negl
sti
cmc
adc
out
rcll
adc
sbb
mov
hlt
add
jno
in
or
std
add
push
ss
mov
pop
mov
gs
push
jne
xor
adc
cmp
inc
sub
jns
mov
sub
xchg
add
inc
push
add
fadd
jle
ret
addr16
ljmp
jbe
and
pop
enter
sub
lock
imul
xor
push
test
mov
stc
mov
or
push
push
addl
cmp
lods
rclb
cmp
lret
adc
out
pop
xchg
dec
push
fucomi
cmpsl
add
mov
add
push
outsb
in
jae
pushf
cmp
dec
aas
jge
lea
out
mov
lret
fs
nop
test
xchg
mov
stc
push
fidivrs
fisttps
out
adc
insb
push
pop
sar
inc
int3
out
sub
sbb
cs
data16
mov
mov
mov
add
push
or
jnp
mov
mov
or
in
fs
xchg
shr
fisubs
pop
out
pop
inc
repz
rolb
lret
dec
cltd
and
pop
or
clc
ret
mov
cmc
jge
or
aad
xor
push
xor
in
mov
ja
pop
leave
sahf
add
xor
pop
lcall
inc
pop
stos
mov
fcomi
adc
inc
or
dec
adc
int
pop
sub
jl
fisubrl
push
mov
pop
pop
inc
jecxz
fwait
xor
lods
test
sub
movsb
pop
scas
arpl
insl
lcall
fwait
daa
fadd
loope
insl
inc
mov
incl
lret
outsb
xor
fsubs
xor
cld
sbb
jle
push
pop
arpl
or
insb
and
lahf
cld
xchg
jecxz
and
xchg
mov
pop
dec
insl
lock
or
pop
int
cmp
mov
gs
xlat
inc
int
push
sbb
mov
cmp
hlt
nop
lods
into
scas
and
iret
aas
scas
in
pushf
outsb
nop
sti
inc
stos
loop
int
cmpsb
mov
push
in
sbb
jnp
add
cmpsl
or
loop
fcomps
sub
lret
stos
ss
mov
pop
lods
fadds
pop
mov
mov
mull
leave
lds
mov
cli
sarl
test
das
pop
insb
fsub
loope
cmpsb
ljmp
sbb
scas
xor
in
xchg
sbb
lahf
enter
sbb
jne
or
dec
jmp
pop
fs
in
imul
push
mov
pop
jp
dec
fsub
push
and
divl
test
stos
mov
test
adc
xor
outsl
outsl
sbb
loope
lret
push
movsl
sbb
pop
fimuls
int
push
xor
add
ret
pop
imul
popf
repnz
jne
adc
shrb
sub
add
outsb
sbbb
popa
sub
subb
daa
test
pop
movsb
arpl
cld
xor
int
cmpsb
add
jmp
sub
stc
and
jns
push
sbb
mov
sbb
inc
adc
pop
or
xor
fs
repz
pop
add
push
jecxz
adcb
cmp
mov
pop
mov
xchg
icebp
jg
out
ret
inc
cmpsl
jnp
mov
or
sbb
jmp
ss
jmp
in
les
loope
dec
xchg
nop
call
fwait
test
sbb
packuswb
add
pop
test
lods
xchg
subl
xchg
lahf
mov
jle
mov
vpcmpgtw
xlat
adc
pop
inc
mov
popf
xor
loope
dec
iret
popf
addr16
popa
stos
fisubrl
jmp
movsb
mov
movsb
push
sbb
mov
xchg
cmpsl
mov
addr16
pushf
addb
roll
or
addr16
push
jmp
fcmovnu
mov
sub
push
nop
stos
outsb
add
jg
sbb
dec
xchg
mov
lods
dec
vpslld
test
mov
jge
dec
cmp
push
std
mov
js
loope
push
sbb
insl
or
lods
xchg
loop
fs
into
inc
dec
push
cmp
orl
clc
fcoms
pop
mov
cli
sbb
mov
fidivl
push
mov
movsl
sahf
pop
lods
ficoml
or
mov
and
std
mov
ret
loopne
lods
pop
es
mov
pop
jecxz
ret
mov
jnp
rcrl
lret
xchg
pop
les
aas
push
mul
sub
jge
pop
sub
int
xchg
or
sbb
push
add
subb
pop
xchg
insb
iret
fwait
or
mov
ja
mov
js
cld
negl
imull
sub
das
hlt
pop
inc
sbb
dec
pusha
das
xor
stc
push
inc
sahf
cltd
repz
xchg
lcallw
fwait
repz
cltd
enter
cmp
jmp
std
mov
ljmp
push
dec
insl
pop
cmc
push
and
push
fdivrs
sti
lret
push
inc
xchg
xchg
jb
push
scas
and
mov
outsb
dec
aam
roll
dec
js
fldcw
mov
data16
or
push
sub
shl
lahf
adc
data16
dec
push
mov
xlat
rolb
cs
sbb
mov
push
xchg
in
add
stc
sbb
fsubl
ds
lahf
sarb
jb
adc
lods
call
mov
jge
pop
popf
mov
divb
ds
add
addr16
sub
sbb
pop
sub
add
xchg
mov
filds
push
addl
inc
add
lret
sub
push
mov
xchg
xlat
xlat
sub
stc
sbb
aam
test
pop
movsl
fcmovnb
test
jns
pop
fcomip
popa
jecxz
out
and
in
push
cmp
cmpsb
test
xor
js
xchg
push
ljmp
pusha
daa
inc
xchg
fucom
out
in
les
push
mov
fnstsw
push
fwait
cs
xchg
mov
fstl
sbb
pop
dec
jge
rorb
or
or
inc
aad
stc
jb
repz
and
mov
popa
sub
int3
mov
fimuls
mov
stos
inc
inc
fisubl
ja
sbb
pop
jnp
repnz
int
jmp
or
xor
cmp
push
roll
test
je
icebp
jne
sub
pushf
jmp
mov
in
adc
int3
cmp
icebp
lock
enter
in
dec
scas
fists
cmp
call
pop
push
xchg
pusha
inc
data16
sbb
xchg
sti
jne
fdivrs
xchg
dec
dec
aas
cmpsb
jge
scas
xor
clc
jns
fbld
sub
dec
pushf
leave
cli
fsubrl
rcll
pop
bound
push
mov
cmp
cmp
test
dec
and
ljmp
in
inc
loopne
xor
xor
movsl
sbb
and
pop
mov
pop
pop
adc
ss
adc
mov
mov
movsl
cltd
out
std
movsl
jbe
dec
mov
test
mov
rol
gs
mov
sbb
fimuls
enter
fildll
or
push
insb
mov
dec
jmp
lcall
dec
mov
test
subb
push
jp
and
dec
cmp
and
cwtl
lcall
push
loopne
loopne
sub
les
or
mov
loop
orb
cmp
and
mov
es
add
iret
inc
mov
cmp
pop
div
mov
pushf
in
outsb
sub
in
addr16
fwait
movsb
sub
enter
std
push
repnz
bound
es
int
or
stos
add
jbe
sub
das
pinsrw
cmc
mov
inc
lret
mov
pop
cmp
hlt
and
decl
shlb
dec
add
mov
orb
cmpsl
fimuls
loope
and
pop
sbb
lahf
test
shlb
dec
sbb
jnp
fst
ret
inc
aad
mov
mov
inc
mov
in
popf
mov
sti
cmp
sbb
pop
sbb
xlat
inc
jns
and
aas
xor
into
mov
inc
pop
pop
xchg
aas
fists
inc
lcall
push
adc
jge
push
shlb
call
in
ret
cmpsl
orb
aam
dec
cld
sbb
inc
sti
adc
and
jo
loopne
loopne
mov
add
xchg
in
sbb
inc
push
jge
insb
iret
mov
sub
stc
hlt
imul
movsl
adc
jnp
jle
sbb
mov
rclb
add
xor
dec
mov
ss
pxor
and
in
outsb
cmp
movsb
xchg
and
decb
into
dec
sub
mov
xor
mov
int
mov
mov
insl
push
lret
cmp
hlt
xlat
cmp
int
subb
sbb
mov
test
sbb
int3
arpl
mov
jl
jle
sub
inc
dec
fadds
pop
add
ret
jno
add
pop
mov
in
roll
gs
mov
pop
push
rcrl
pop
loope
ror
push
xchg
sti
repnz
pop
mov
xlat
jns
mov
mov
xor
int
mov
shl
and
sub
mov
push
xchg
mov
sti
lcall
push
xlat
sahf
mov
lea
dec
jns
test
ffreep
mov
subl
ljmp
call
sbb
mov
cld
add
dec
data16
movsl
call
mov
outsb
movsl
jno
push
sti
mov
sub
js
cmp
into
fsub
jne
jae
xor
mov
scas
cltd
cmp
bound
imulb
or
sbbb
mov
leave
loop
push
sbb
fisubl
jnp
out
xor
nop
push
pop
jne
in
sub
xchg
jecxz
mov
jge
push
and
adc
lret
out
xlat
subl
out
mov
dec
test
sahf
scas
jne
fldl
lods
xchg
out
enter
or
push
xor
in
pop
les
xchg
jg
lea
enter
push
and
fstpl
rorb
xchg
inc
imul
popf
popa
pop
ret
sbb
add
sbb
jb
or
add
lret
and
dec
mov
sbb
mov
sbb
mov
inc
pop
fisttpl
cmp
test
mov
rcrb
lret
ja
stos
cmp
or
je
in
xor
xor
movsl
stos
mov
iret
or
sahf
pop
imul
aam
mov
movsb
dec
inc
test
xchg
je
push
int3
jb
adc
sahf
pop
sbb
sbb
pop
lahf
push
jb
leave
mov
gs
scas
aam
mov
xor
sub
jne
mov
xchg
mov
xchg
fs
je
push
jne
icebp
aad
fimuls
sub
rcrl
and
push
add
jbe
pop
aad
sbb
aaa
addr16
js
nop
add
cld
push
push
push
addr16
or
mov
mov
inc
adc
jno
movl
addr16
xor
mov
dec
jg
mov
or
sub
les
pusha
inc
jmp
mov
aaa
fbld
cltd
call
mov
xchg
pop
xchg
ret
outsb
inc
jb
iret
mov
shrb
pop
aas
jecxz
cmc
fnstcw
sbb
adc
inc
leave
xchg
fiaddl
mov
mov
or
pop
mov
arpl
jnp
xchg
jns
sbb
mov
sbb
fsub
arpl
gs
iret
pop
jns
mov
adc
outsl
jmp
cmpsl
sub
test
jbe
ljmp
mov
and
mov
dec
pop
les
mov
loop
pop
xchg
jb
add
ret
jo
inc
iret
das
rorl
push
rolb
adc
in
sbb
clc
add
lock
sbb
pop
add
dec
leave
loopne
dec
sub
sahf
mov
inc
cld
lahf
ljmp
or
adc
inc
mov
pop
inc
movsb
lods
add
adc
sub
fcomp
lahf
dec
push
mov
out
jg
cs
pushf
in
cmc
fadds
inc
fisubs
enter
rolb
imul
cli
cmp
arpl
inc
push
sub
pusha
dec
movsl
cltd
push
cli
jmp
mov
mov
cwtl
daa
adcl
sub
lea
xor
ret
pop
fdivl
xor
shlb
add
xchg
cmpsl
pusha
mov
hlt
rolb
jne
enter
add
in
dec
andb
icebp
mov
dec
les
xchg
push
cmp
in
test
xchg
stos
ret
mov
mov
mov
data16
sub
jg
cld
ljmp
mov
jnp,pt
lods
stc
push
aad
frstor
mov
ljmp
mov
or
dec
nop
rcrl
mov
dec
icebp
cmp
fildl
cli
movsb
mov
cld
and
mov
adc
std
repnz
invd
pop
xchg
jo
nop
jno
adc
mov
adc
sub
jae
mov
jo
shrb
inc
shl
pop
inc
enter
jle
xchg
add
popa
cli
ds
loop
dec
mov
out
jno
fisttps
dec
dec
jnp
lcall
inc
push
push
fdiv
mov
cmp
push
mov
dec
subb
pop
jb
and
inc
xor
aad
lret
js
xor
dec
lahf
es
xchg
push
int
leave
cs
and
push
ljmp
mov
in
das
jo
push
push
outsl
inc
cld
sbb
add
je
mov
dec
jne
jle
in
shlb
cmpsb
jge
and
lcall
lods
sub
add
pop
xor
pop
inc
sbb
jae
cmp
vmread
xchg
das
fst
pop
xchg
rcrl
sti
outsl
test
shrl
push
pop
ret
or
xchg
pop
lods
call
push
cmp
jecxz
decb
dec
or
push
testb
pop
mov
int
aad
out
or
sbb
iret
popfw
pop
xor
in
mov
je
and
xchg
fld
jge
movsb
push
sbb
sbb
xor
loope
push
xchg
and
mov
test
mov
nop
cmpsb
imul
and
pushf
int3
cmpsl
cmp
sub
sbb
mov
lods
outsb
push
icebp
sarl
icebp
out
cmp
movsb
add
mov
test
js
cltd
imul
or
mov
stos
xchg
sti
adc
jl
mov
into
push
out
xchg
cmp
or
lret
jns
sbb
lea
and
push
adc
sub
dec
adc
sbb
jo
loop
cmp
xor
and
movsb
divb
push
movsb
cmp
lcall
inc
shrd
daa
dec
cwtl
insb
insb
fidivrl
sahf
scas
cmp
mov
adc
or
insb
sub
sub
inc
xchg
les
or
sbb
and
mov
xchg
xchg
ret
insl
mov
pushf
cmp
adc
scas
push
push
xchg
loop
or
cwtl
popf
mov
cmp
pop
pop
cmp
jl
push
ss
test
pop
mov
enter
mov
lods
ficomps
out
mov
std
add
ret
or
movsl
loope
adc
push
cmp
xor
dec
mov
iret
xchg
add
inc
push
jb
cld
in
xor
adc
adc
pushf
jl
or
mov
in
mov
arpl
inc
test
push
fistl
lock
xchg
lea
stos
adc
inc
int
cmpsb
inc
cmc
cmpsl
xchg
std
push
repz
fstpt
mov
je
or
or
ss
adc
and
movsl
xchg
inc
or
int3
mov
popf
lds
movsl
ror
add
add
fisttps
jb
or
fcomps
pop
je
in
or
mov
xchg
lahf
shll
fisubs
lret
push
or
fstps
push
loope
fwait
test
enter
sub
pop
mov
cli
hlt
popl
push
or
es
push
dec
call
stos
aam
sub
cmp
je
movsb
loopne
scas
lcall
xchg
sbb
test
test
test
gs
ja
incl
pop
cwtl
movsl
mov
cmc
hlt
and
dec
cmp
cltd
pop
fstpl
or
pop
or
sbb
out
mov
repz
scas
dec
lcall
test
mov
mov
push
stc
call
mov
notb
and
mov
mov
ret
lods
lret
iret
jmp
ret
fcompl
call
fdivrl
push
mov
sbb
jne
movsl
out
setb
adc
daa
mov
and
dec
jnp
pop
sbb
xlat
movsb
mov
es
dec
leave
adc
push
mov
lahf
lds
and
lret
sub
cmpsl
inc
xchg
in
xor
iret
pushl
in
mov
jge
mov
xchg
sbb
cltd
aam
data16
mov
cmc
dec
mov
mov
add
mulb
pop
sbb
pop
dec
lds
xchg
paddb
push
ret
imul
sbb
xchg
movsb
lods
jecxz
es
jmp
sub
sbb
outsl
pop
lds
scas
daa
add
cli
insl
xor
in
xorb
sbb
sbb
sub
aad
loop
push
adc
rcll
pop
ds
cmp
bound
inc
imul
mov
xchg
lods
mov
push
mov
xchg
cmpsl
lds
or
cmp
das
mov
in
dec
mov
jne
test
mov
xchg
daa
pop
push
sub
ret
repz
push
lret
fld
outsl
adc
fwait
or
out
cmp
sub
xchg
and
roll
lock
roll
jmp
loopne
mov
xlat
jp
mov
jecxz
and
repnz
sbbl
test
cmp
and
lods
sub
dec
daa
insl
push
jns
pop
or
ja
lahf
dec
negb
fwait
ja
loope
mov
mov
dec
repz
pop
add
cmpsb
cmpsl
adc
int
jo
pop
in
or
clts
js
ja
push
mov
aad
push
pop
into
sbb
pop
add
inc
jo
and
inc
loope
xchg
mov
test
inc
cmp
ret
xlat
cmc
shlb
push
cmp
hlt
dec
cs
xor
popa
or
out
movsb
addr16
cmp
gs
pop
adc
and
pop
xor
push
dec
lods
nop
jnp
out
inc
fs
xchg
pop
xor
ror
pop
push
outsb
arpl
mov
pop
cmp
pop
adc
mov
cmpsl
jle
cmp
inc
sbb
add
add
inc
push
jle
call
xor
mov
imul
pop
xchg
inc
cli
dec
popa
lods
cmp
push
sub
mov
sbb
push
dec
pop
das
dec
and
adc
push
xor
movsl
xor
sbb
in
mov
cmp
arpl
push
xchg
sub
test
ja
push
jno
clc
and
push
sbb
ret
sub
jnp
push
shr
pop
aam
pop
mov
inc
mov
and
dec
jle
sub
push
mov
xor
outsl
aad
rcrb
mov
mov
cmc
notb
fimull
cld
xchg
xor
pop
ficomps
xchg
xchg
sub
or
push
cs
imul
jns
mulb
inc
stos
push
fbld
loop
rorl
mov
jns,pn
mov
jb
cmp
arpl
cltd
cld
mov
push
aam
xorl
xor
ja
scas
lock
mov
pop
jne
pop
dec
fsubrl
cmovne
stos
xchg
pop
push
lods
arpl
inc
mov
lock
push
in
add
popf
test
ljmp
imul
ret
popf
mov
sub
fdivr
std
roll
adc
add
push
sbb
jb
arpl
push
pop
mov
incl
enter
ds
aam
dec
add
jnp
hlt
sub
mov
nop
sub
jecxz
add
or
outsl
mov
cmpl
or
jns
je
cmpsb
in
add
jo
add
les
scas
int3
cli
movsb
pop
rolb
loop
mov
xor
shrb
addr16
testl
scas
push
cmc
inc
roll
xor
push
outsl
insb
jns
add
hlt
push
js
xchg
cmp
je
inc
sub
fcmovne
test
sub
rolb
inc
xchg
loope
decl
or
adc
add
jo
testb
test
test
or
data16
cli
inc
sbb
add
out
popa
mov
mov
fucom
add
sahf
add
int3
or
stos
cmp
movsl
add
adc
jne
sarb
stc
and
cmp
mov
je
aaa
movsb
insb
sbb
adc
mov
aas
xor
bnd
mov
xlat
inc
cmpsb
aas
jmp
cmpsl
repz
jb
inc
gs
pop
inc
mov
xor
jnp
xor
lret
xchg
sub
fcomps
inc
out
inc
push
scas
xchg
xor
cld
leave
jle
and
arpl
inc
bound
push
sbb
adc
mov
mov
xor
mov
mov
scas
fwait
adc
xchg
cmpsb
adc
fbstp
test
xor
or
loopne
repz
test
cmp
xlat
xchg
inc
cmpsl
xchg
push
jecxz
scas
xor
sbb
int
sub
test
test
xchg
xorb
mov
mov
xor
mov
mov
imulb
lods
and
mov
inc
pop
test
pop
cmp
xor
xchg
push
xchg
dec
xor
jl
enter
cltd
lock
insl
and
pop
push
aam
or
sub
js
je
arpl
mov
rclb
test
mov
imul
movsl
pop
and
xchg
sub
push
mov
jl
je
gs
lret
out
adc
xchg
mov
cmp
sub
push
push
bndldx
xchg
adcl
lahf
sti
test
aam
frstor
push
jecxz
jnp
ljmp
sub
hlt
dec
fdivs
sbb
sbb
inc
add
jl
mov
cmc
mov
outsl
add
orb
xchg
xchg
add
mov
loope
push
sub
pop
jecxz
sub
cmc
loop
or
sbb
xchg
clc
and
mov
hlt
rcr
mov
sbb
adc
arpl
jae
fs
out
push
nop
push
aam
jp
lcall
cmpsb
in
xlat
and
jmp
xor
test
or
jne
hlt
test
sub
ja,pn
xchg
mov
adc
addl
ljmp
push
inc
jb
mov
sub
ficompl
sbb
leave
int3
pop
pop
rorl
mov
jb
popf
aad
ss
jecxz
js
mov
popa
pop
pop
stc
sbb
lret
xor
dec
dec
shl
jnp
lcall
ja
jne
or
lock
sub
in
test
push
jns
jecxz
repnz
dec
jo
faddl
pop
mov
popl
ss
mov
in
in
fsubl
adcb
mov
lds
push
bound
leave
push
xchg
out
sbb
sbb
adc
in
in
pop
mov
mov
lret
pop
xor
clc
imul
jbe
mov
sub
push
test
sub
stc
xor
pop
inc
sbb
cmp
mov
fldenv
dec
or
repz
shl
xor
push
movsl
aam
rorl
lds
push
sub
adc
movsl
scas
push
aad
popf
scas
notl
scas
add
outsl
mov
jno
and
daa
cmc
insl
imul
pop
and
leave
mov
decl
xchg
adc
in
inc
hlt
aaa
pop
mov
cwtl
sbb
into
jp
sub
pop
loopne
sub
dec
out
or
and
and
sbb
cmp
mov
dec
ret
xor
or
test
and
mov
sti
jb
xor
xor
jp
pop
fs
pop
jp
cmpsl
stos
movsl
pushf
sub
lret
xlat
js
fwait
adc
jge
xchg
dec
lods
xchg
lods
out
pop
dec
lret
inc
pop
mov
shrb
out
mov
cmp
sar
pop
and
and
ds
or
jl
jb
push
mov
dec
lahf
rcll
popf
add
jecxz
loopne
xor
xchg
cmp
xor
mov
std
add
add
mov
outsb
outsb
scas
idivb
and
pop
xchg
fbstp
and
insl
mov
jno
arpl
mov
inc
pushf
xchg
pushf
cmp
mov
bound
jno
mov
xor
xchg
insb
xlat
mov
add
xor
cli
xor
inc
xchg
mov
mov
push
rcll
or
ficomps
add
inc
outsb
add
xchg
xor
idivl
imul
icebp
lods
and
jbe
cld
hlt
popf
inc
mov
enter
inc
or
mov
mov
and
jnp
shl
sub
in
inc
push
mov
mov
std
xchg
and
rol
testl
test
in
mov
xor
stc
add
pop
lea
mov
fists
mov
or
xor
sub
inc
xchg
data16
lahf
nop
or
mov
clc
data16
push
subl
fwait
dec
std
or
aaa
sub
je
dec
test
push
and
dec
add
insl
xchg
add
pop
js
push
jmp
pop
or
pop
xorl
dec
mov
xchg
nop
nop
xor
push
out
cmpsb
movsb
adc
aam
les
mov
aad
jl
call
andb
push
lods
inc
inc
mov
inc
insb
add
je
xchg
inc
and
pop
divl
mov
cmp
fnstcw
mov
add
sub
cmp
add
jb
filds
or
xor
in
sarl
je
jg
outsb
jp
out
pop
cmpsb
sbb
adc
push
and
andl
jg
mov
push
call
push
mov
loop
fs
xchg
mov
jns
fisttpll
dec
fistpll
mov
xor
ljmp
cmp
in
adc
jmp
ss
add
cld
arpl
push
and
hlt
clc
cmp
stos
add
jne
dec
mov
xor
mov
enter
popf
stos
pop
push
mov
mov
push
cwtl
popl
fiadds
rcr
adc
sub
leave
and
adc
cmp
shll
cmp
dec
test
movsl
inc
adcb
xchg
sahf
dec
mov
mov
add
cmpsb
sub
sbb
sbb
pop
inc
ficomps
dec
shlb
js
fmull
push
out
mov
mov
jp
je
scas
xchg
adc
lret
out
xchg
push
lds
push
pop
xchg
mov
dec
loop
adc
cmp
inc
cmp
int
in
lock
mov
popf
push
adc
xor
lahf
aaa
test
popf
jecxz
push
jne
in
testb
cs
das
sbb
lahf
or
jae
js
out
jmp
push
mov
xchg
nop
imul
dec
decl
mov
push
je
inc
mov
lods
gs
arpl
pop
es
rolb
es
in
cmp
fldt
fisttps
negb
mov
shlb
cmc
cmp
push
push
xchg
pop
xor
sub
add
xchg
gs
das
jl
lds
adcb
dec
divl
pop
xchg
sub
add
nop
sbb
cmpsl
bound
mov
sub
movsb
push
adc
dec
pushf
daa
xlat
rorl
mov
push
pop
pop
fldt
out
xlat
scas
xor
pop
push
rcrl
scas
adc
pop
lods
mov
adc
je
insl
mov
jae
data16
pop
pop
ret
ds
add
rcrl
and
jg
push
cmpsl
push
pop
xchg
loop
sub
jge
roll
repz
inc
in
cmp
jb
push
adc
hlt
filds
fdecstp
fs
pusha
cmp
sahf
xchg
dec
mov
or
xchg
pop
xor
mov
ret
ljmp
xlat
mov
sub
mov
in
out
jnp
fistl
shll
int
and
mov
sub
sbb
divb
add
hlt
ja
jge
mov
add
or
dec
ljmp
sahf
rorb
cltd
sbb
sbb
fbld
cmp
mov
push
xchg
inc
pop
adc
xor
push
scas
testl
out
movsb
ss
loope
pop
fstpt
adc
std
leave
mov
les
push
inc
scas
cmp
mov
xor
insl
pop
pop
sub
sub
jl
cmp
notl
push
ret
and
cli
sbb
pop
inc
stos
imul
jge
int
cmp
xor
ljmp
scas
mov
iret
adc
data16
adc
or
xlat
jnp
lahf
sub
ss
xchg
dec
jge
cmp
stos
or
addb
push
orl
adc
mov
lds
negb
inc
push
xlat
add
pop
mov
mov
xchg
and
popa
into
cmp
out
jbe
pop
repnz
cld
jge
mov
sbb
mov
loopne
ss
dec
lahf
sbb
xor
scas
dec
sahf
pusha
inc
insl
jne
fcoml
dec
push
inc
push
push
push
jbe
mov
inc
cs
outsb
aas
xor
lret
jnp
lds
stos
orb
push
or
fstps
cwtl
loop
jo
or
outsl
fldenv
add
repnz
pop
outsb
xchg
and
insb
lahf
mov
scas
mov
mov
jae
rolb
push
repnz
or
sarb
mov
pop
cmpsb
pop
decl
jnp
or
lods
dec
jne
loopne
mov
sti
dec
cmpsb
or
hlt
xchg
incb
nop
mov
in
sub
xchg
sub
stc
inc
mov
les
mov
xor
rol
jnp
xor
outsl
out
cmp
pop
mov
dec
and
sub
mov
in
add
jbe
adcl
dec
test
fwait
inc
mov
fisttpll
sub
outsb
xchg
push
les
push
inc
xchg
pop
je
ret
call
dec
cmpsl
loop
xor
xor
lret
mov
or
shl
fdiv
mov
and
stos
inc
inc
xchg
int
loopne
cli
dec
data16
pop
dec
out
pushf
out
ret
fiadds
icebp
cmpsb
aad
movsl
adcb
pop
aas
jae
jnp
xchg
stc
push
mov
lds
popf
mov
xor
ret
push
pop
dec
les
das
hlt
inc
or
leave
aaa
cmp
adc
lds
sbb
aam
inc
aas
fimuls
adc
lds
xor
bound
outsl
pop
es
inc
jbe
stc
mov
decb
xor
mov
enter
aam
idivb
xchg
iret
lods
push
and
repnz
jno
jne
mov
mov
lcall
es
dec
mov
sbb
mov
push
mov
ss
mov
push
adc
cmpsl
js
dec
lock
mov
hlt
or
stc
mov
iret
int3
rcrl
sti
jo
xchg
subb
xor
data16
jle
in
add
icebp
push
pushf
jbe
sub
lods
scas
cs
aas
ss
push
adc
pop
xchg
jge
ret
lgs
mov
repz
pop
lods
int
and
pop
xchg
xor
shlb
into
cmp
shll
mov
sbbb
movl
inc
test
adc
push
ss
xor
fs
sahf
cmc
aas
jp
inc
sub
jge
sbb
pop
pop
mov
and
divb
pusha
xchg
push
sub
mov
xor
pop
cmp
cmpsb
inc
adc
mov
mov
push
dec
out
xchg
cmpsb
sbb
andl
nop
mov
stos
enter
aad
inc
das
dec
mov
pop
cltd
lods
nop
sahf
repnz
test
fsubl
cmpsb
mov
repz
sub
and
and
cmc
mov
mov
fldl
and
xchg
sub
add
imul
out
and
in
mov
adc
pop
arpl
xchg
push
rcrl
pop
clc
orb
popa
mov
cmp
mov
fistpll
rol
or
sub
lods
pop
call
stos
cmpb
or
xchg
jae
push
dec
mov
fwait
mov
fldl
aam
xor
pop
and
leave
ficoml
call
push
stc
push
sahf
lds
dec
das
nop
push
popa
push
sub
sub
mov
fs
adc
pop
mov
push
jge
pop
dec
xchg
loope
pop
sub
pop
imul
cmp
repnz
test
inc
aas
inc
dec
movsl
filds
add
xlat
jnp
das
push
push
mov
in
cs
pop
lea
inc
jne
mov
loope
xor
test
stos
mov
out
add
lret
inc
sbb
jge
out
mov
loope
enter
inc
sub
nop
jnp,pn
push
fsubrl
or
pusha
ret
ja
cmp
xchg
push
andl
dec
jl
adc
ret
fndisi(8087
shlb
aam
pop
push
dec
fldenv
out
jmp
inc
pop
ret
xchg
dec
sub
movsl
popa
inc
mov
adc
pop
or
test
fldl
test
sub
jge
cmp
mov
aas
dec
inc
fstl
mov
xchg
pushf
push
push
xlat
or
movsb
add
mov
shll
xchg
cltd
and
adc
outsb
xchg
loope
push
popf
or
test
je
mulb
cmpsl
out
jge
repz
mov
into
shrb
jb
in
mov
in
aam
scas
fists
push
sub
xchg
mov
out
sub
out
add
addr16
sbb
in
adc
test
cmp
ja
ret
cmc
push
dec
aad
and
iret
pop
jmp
mov
or
lock
xchg
sarb
mov
cltd
sbb
js
dec
ja
movsb
test
mov
in
mov
cmp
pop
adc
inc
and
inc
xchg
and
xchg
dec
or
and
cmp
clc
js
in
jnp
sbb
sub
inc
adc
cmp
fiaddl
mov
hlt
lret
rclb
clc
push
push
jns
test
insb
icebp
movsl
cmp
out
jmp
jp
add
ja
mov
arpl
repz
sbb
push
shll
jmp
jmp
cmc
mov
add
sub
cmpsb
mov
adc
sub
dec
inc
xchg
pop
mov
fdivrs
or
outsb
es
or
and
lcall
dec
adc
sbb
push
xchg
ja
ss
mov
fs
test
stos
inc
sahf
out
cli
popf
popf
ret
jle
mov
lock
stc
xor
pop
sub
xchg
pop
mov
sub
cmpsb
cwtl
in
jae
adc
into
mov
outsl
gs
xchg
outsb
movl
xor
repnz
js
dec
es
push
es
add
gs
cltd
pop
xchg
or
mov
mov
dec
das
adc
out
repz
jg
lret
pop
dec
fdivrs
aam
test
lret
cmc
mov
and
out
cltd
xor
leave
je
movsb
adc
sub
mov
test
std
rolb
xlat
jb
cmp
outsl
mov
or
cmp
sbb
cmpsb
addl
inc
or
aas
cmp
or
cltd
out
jno
popf
nop
stos
repz
out
aad
mov
xchg
cmpsl
scas
mov
sub
push
enter
outsb
xchg
dec
xlat
daa
imul
or
dec
ljmp
mov
or
mov
stos
mov
sub
mov
fistps
dec
inc
arpl
mov
int3
sbb
insl
imul
add
mov
jle
jle
add
mov
push
jp
mov
lahf
mov
insl
rcrl
dec
cmp
daa
movsl
sub
imul
sbb
ljmp
sub
cmp
fs
cmp
push
pushf
sti
cmpb
adc
jbe
cmpsb
addb
cmp
lods
iret
inc
pushf
mov
push
mov
fisubl
adc
sarl
das
mov
dec
dec
mov
outsl
jg
jnp
mov
fstl
cmp
loope
jne
add
aaa
outsb
mov
mov
sti
and
mov
jae
inc
xorl
stc
sub
repz
outsl
inc
lea
jb
jne
inc
nop
sbbl
js
nop
cmp
test
pop
push
xchg
jmp
adc
rcrl
pop
add
lds
cmpsb
std
test
dec
sti
push
push
xor
inc
xchg
mov
outsl
clc
daa
lods
sbb
push
pop
repz
aad
loop
xor
xchg
les
push
cltd
adc
lcall
lret
jne
sbb
inc
adc
arpl
xor
fldcw
pop
mov
loopne
pop
loop
movsl
pop
push
inc
mov
lret
movsl
jp
push
jae
mov
pushf
push
and
cmp
rorl
fistps
sbb
or
dec
xchg
repnz
jle
and
enter
push
mov
sub
mov
gs
or
mov
das
in
repz
add
inc
inc
pop
xchg
stos
callw
or
jg
mov
adc
mov
mov
pop
mov
cltd
lret
and
rolb
sub
xchg
sbbb
pop
jp
xchg
cli
and
nop
clc
add
sub
cmp
cs
sub
cmpsb
and
rcrl
add
push
mov
pop
fcomp
out
dec
add
jl
das
shlb
jnp
lahf
and
dec
xlat
mov
xor
push
jp
jo
cmp
inc
fs
and
cld
mov
cli
sbb
idivl
shll
getsec
adc
in
int
lret
mov
sbb
mov
push
shlb
std
xchg
jge
push
cmpsb
scas
adc
dec
push
jecxz
mov
pushf
les
jl
call
or
sub
lahf
aad
rcrb
cmc
jns
jecxz
push
dec
stos
sbbb
xor
movl
xlat
and
pushf
ja
mov
fcomps
ret
jo
cmpsb
dec
ljmp
pop
ljmp
rorl
fstp
les
or
rorb
cmpps
fcomps
int
hlt
lods
push
adc
mov
push
mov
repz
in
jle
or
enter
mov
mov
das
xorb
mov
orl
jbe
pop
lea
daa
loopne
xchg
xchg
fnstcw
es
mov
outsl
mov
adc
jb,pn
dec
pop
fucomip
aaa
inc
mov
bound
pop
inc
or
loop
adc
cmp
jne
imul
cmp
ss
push
shrl
scas
cmp
ficoms
aam
xorl
lcall
sti
add
add
and
cwtl
sbb
xchg
or
popa
and
fildl
mov
pop
hlt
push
pop
adc
addb
nop
sahf
leave
shll
and
and
nop
mov
dec
adc
or
mov
daa
sub
xlat
fisubs
icebp
pop
push
inc
cmp
popf
data16
addr16
loope
popf
lret
neg
pop
gs
dec
ja
sarb
ucomiss
mov
lods
imul
dec
sub
fs
xor
test
sub
mov
jp
ret
mov
sub
xor
push
sub
pusha
icebp
sti
sub
mov
das
push
pop
imul
push
lods
push
rcrl
sub
rcrb
mov
adc
mov
pop
jle
cmp
inc
psubw
dec
subl
push
out
mov
scas
and
popf
cli
addr16
cmpsl
add
adc
test
enter
dec
stos
inc
lret
xchg
pop
mov
push
rdmsr
ret
cld
xchg
pop
xchg
lret
sub
and
stos
push
jae
fcoml
lds
and
ljmp
icebp
cwtl
dec
sbb
sbbb
pop
sub
insb
popa
out
repnz
fldenv
cmp
scas
pop
sti
push
gs
adc
bound
dec
fs
sbb
or
movsl
push
cltd
add
pop
xchg
push
ss
pushf
xorl
cmc
pushf
stos
rcll
popf
pop
fimuls
push
pop
jnp
sbb
xchg
aas
inc
sbb
inc
xor
xchg
push
adc
ret
lahf
sub
jge
mov
fsubrl
popf
sub
in
ret
test
sub
enter
lret
fs
push
inc
inc
les
clc
cmp
aaa
xor
aas
xchg
xchg
lock
lock
imul
mov
in
iret
aaa
add
pop
out
sub
imul
xchg
ret
ret
int
xlat
xor
jmp
xacquire
mov
mov
pop
sbb
sbb
data16
jo
mov
inc
adc
lret
mov
adc
out
test
cmpsb
ss
dec
inc
lds
ja
fcoml
loopne
xchg
imul
xor
ljmp
inc
sub
and
les
jnp
inc
adc
mov
mov
xorl
fsubl
ret
mov
imul
jg
movsl
fcoml
clc
or
cmp
jp
push
adc
pop
inc
add
mov
mov
jb
scas
sbb
jg
icebp
mov
mov
jg
push
xor
adc
rcll
pop
cld
into
sbb
adc
int3
sbb
push
pop
cmpsb
pop
push
repz
adc
xchg
xchg
insl
push
xchg
in
ljmp
or
adc
sub
mov
imul
movsb
and
pop
std
lahf
imul
stos
frstor
sub
xchg
pop
pop
scas
mov
cmc
rorb
sbb
fchs
jl
jmp
mov
mov
mov
mov
ret
ret
mov
lcall
sub
and
jae
call
cmp
xchg
in
inc
sbb
and
int3
push
xchg
cli
mov
pop
sbb
filds
push
xchg
inc
paddw
or
and
sbb
pop
mov
inc
jle
cmc
icebp
mov
sub
mov
xchg
popf
pop
push
jecxz
push
es
sub
or
imul
shll
rcll
jmp
out
mov
lds
ret
push
fidivl
in
lods
push
push
xor
xchg
push
popf
xor
inc
lods
inc
xchg
lret
jns
or
pop
mov
sbb
iret
mov
test
lock
dec
or
xor
jne
not
mov
lea
stos
cli
jp
or
aad
push
popa
jmp
cmp
or
aas
mov
sbb
roll
addr16
cmc
mov
out
dec
out
cli
xchg
adc
daa
mov
push
inc
cmp
into
or
and
popa
test
aaa
insl
shll
sbb
mov
add
dec
lea
jae
push
orb
rorl
mov
incb
outsl
test
loop
or
decl
in
ja
ret
pop
rcrl
ja
mov
xchg
cmp
push
jbe,pt
das
adc
and
push
push
lcall
movsb
inc
sbb
mov
pop
leave
push
push
lds
and
insl
not
sahf
clc
pop
dec
inc
add
or
pushf
sarl
add
imul
shll
xchg
enter
in
aam
push
mov
xor
mov
test
dec
test
ss
mov
or
mov
or
dec
pop
push
sub
mov
or
mov
movsb
sbb
lea
add
xchg
mov
fsts
sub
inc
push
cmp
test
les
dec
inc
and
mov
or
ret
mov
das
out
mov
fs
out
mov
cmp
in
push
pop
dec
in
mov
icebp
xlat
push
sub
dec
dec
pusha
push
popa
arpl
mov
sbb
imul
mov
sbb
pop
repz
cs
enter
xor
sbb
mov
fwait
jb
xor
out
adc
pusha
fcoms
dec
or
outsb
mov
les
lds
in
add
sbbl
mov
sbb
dec
shll
les
cmp
mov
cmp
lds
dec
mov
dec
mov
inc
lcall
lahf
xor
fdivl
ret
xchg
xor
mov
xchg
mov
sub
cmp
ljmp
jp
inc
in
mov
pop
or
dec
add
std
ds
movsl
inc
pop
mov
cltd
imul
add
jb
cmpsl
adc
into
jle
jmp
or
add
or
andb
cmpsl
dec
ja
repnz
faddl
mov
mov
sbb
mov
dec
scas
cli
enter
mov
dec
adc
popf
sub
jns
cltd
dec
jmp
fsts
movl
lea
adc
bound
pop
sbb
xor
xchg
fildl
xchg
cmc
inc
inc
hlt
add
push
popf
aas
mov
bound
push
arpl
mov
add
mov
dec
xor
outsl
aaa
add
lds
jg
ret
jl
lcall
adc
mov
sarb
shrl
mov
dec
dec
shl
lea
pop
push
dec
adc
inc
mov
or
mov
lock
adc
aad
call
adc
cmpsb
mov
push
hlt
adc
inc
lods
sub
xor
fadd
xchg
or
call
xchg
nop
add
popa
or
mov
inc
jmp
mov
add
fsubrp
dec
sbb
jge
sti
shrl
pop
pop
mov
sub
mov
add
imull
out
cld
popf
ret
ss
repz
test
repnz
dec
pop
push
sbbb
and
ret
sub
test
insb
ljmp
fs
fninit
push
lret
push
jns
adc
inc
mov
mov
add
and
xor
mov
stc
push
test
push
stc
fsts
lcall
cmp
push
inc
push
pop
outsl
adc
xchg
push
inc
push
fcoml
jns
xor
shl
out
out
jp
adcl
daa
and
dec
movsl
neg
mov
xor
outsl
imul
cmp
push
xchg
subb
aaa
jns
fildl
pop
in
ficompl
inc
hlt
shl
xor
scas
stc
call
pop
mov
sub
lods
ret
push
dec
mov
mov
mov
mov
repz
adc
imul
push
xor
cmp
pop
stc
or
xchg
jl
pop
fdivrl
lods
jno
pop
orl
out
int
or
rorb
in
adc
fcomps
cmpsl
pop
add
push
aas
adc
test
repnz
dec
pop
add
sub
in
pop
add
inc
dec
xchg
xor
loope
add
test
mov
pop
imul
test
cmp
insl
dec
lods
lahf
mov
mov
imul
stos
mov
lods
mov
hlt
int
fcmovb
test
imul
dec
inc
xchg
adc
jne
arpl
hlt
stos
sub
loope
dec
imul
int3
dec
cli
movsl
les
out
add
xchg
incb
sub
xchg
sbb
push
mov
xchg
insb
ds
arpl
jge
jbe
mov
es
out
enter
jne
stos
adc
arpl
pop
mov
cmp
addb
arpl
mov
jl
sti
jp
push
hlt
into
cmp
aam
lods
xchg
hlt
sub
xchg
or
lds
iret
sub
pusha
outsb
jmp
pop
sbb
aam
addl
xchg
jo
daa
rorl
test
mov
push
lcall
and
bnd
sub
mov
shlb
fimull
mov
loope
adc
roll
pop
jnp
mov
xor
inc
movsb
cmp
test
dec
pop
mov
inc
mov
cs
mov
mov
je
adc
jns
jmp
out
mov
imul
mov
repz
xchg
insb
mov
mov
loopne
ljmp
push
push
jle
push
mov
xchg
fisubrl
and
pushf
xchg
jecxz
and
lahf
in
sahf
push
or
js
iret
xchg
xchg
sub
xchg
add
add
mov
xchg
mull
jp
cmp
ljmp
dec
cmpsb
inc
push
mov
testl
in
cmp
and
dec
fldenv
mov
adc
pop
dec
les
mov
nop
daa
ljmp
sbb
in
stc
mov
pusha
fwait
mov
add
fiaddl
sbb
jae
dec
scas
push
xchg
shr
mov
dec
mov
xchg
mov
jbe
cli
adc
in
cld
popa
gs
fmuls
cli
sbb
dec
and
test
sbb
inc
aad
pop
arpl
or
xchg
ret
mov
push
aas
ds
loopne
je
rolb
mov
js
lret
inc
sbb
and
arpl
mov
mov
or
mov
out
int
push
dec
gs
addb
dec
stos
mov
imul
mov
pushf
add
jo
fistpl
dec
movsl
jmp
ficoms
lret
pop
dec
shrl
xor
xlat
jo
repnz
mov
xchg
push
pop
push
sti
imul
sbb
add
dec
cld
or
cli
outsb
xchg
inc
cs
add
mov
and
mov
out
imul
sub
xchg
adcl
dec
adc
jecxz
sub
mov
mov
mov
fists
mov
pop
push
dec
fldl
imul
fisubs
mov
scas
pop
in
add
xlat
cwtl
and
adc
ffreep
jbe
sbb
aad
pop
mov
mov
das
adc
cmpsb
push
xor
push
push
xchg
mov
pop
cmc
in
aas
cmp
xor
adc
shr
cmp
daa
ljmp
sub
mov
jecxz
jo
and
pop
imul
fdivrl
mov
push
scas
popf
andl
jmp
xchg
lahf
pop
mov
lahf
imull
and
add
test
pop
xchg
fstps
or
ret
sbb
mov
xchg
sbb
pop
sub
loopne
mov
cmp
leave
pushl
mov
ret
cmc
add
cmpl
in
xchg
mov
mov
push
jge
adc
mov
xchg
iret
repz
cmp
scas
fnstsw
jge
in
mov
hlt
push
std
dec
idivb
ljmp
xorl
add
shlb
test
add
sbb
das
in
jbe
xchg
cmpsl
leave
dec
sbb
add
dec
dec
out
hlt
stos
movsl
dec
repz
fdivrl
aas
lcall
arpl
or
push
hlt
pusha
or
dec
mov
xchg
or
pop
cmp
rorb
adc
outsl
xchg
jp
fsubrl
jmp
decl
rcl
mov
addr16
pop
in
shl
es
ja
xchg
and
adc
nop
aam
stos
sar
lea
xchg
xchg
mov
push
lods
mov
bound
in
mov
adc
push
fcmove
push
or
fsubp
pop
dec
jmp
mov
mov
mov
mov
xor
lcall
jnp
leave
sbb
stos
push
subb
movsl
xor
dec
daa
sbb
sub
pop
stos
pop
sub
mov
popf
sub
cmp
push
pop
inc
mov
or
mov
in
out
sub
sub
adcl
in
lret
adc
repnz
push
pop
js
fisttpll
in
cmp
add
les
mov
mov
push
push
fisubrl
lods
inc
out
mov
lods
and
icebp
fildl
rorl
xchg
pop
lahf
leave
jno
scas
fildl
ds
cmpsl
xlat
and
dec
cmp
jl
sbb
loope
or
mov
push
jge
mov
mov
ficoms
xchg
aas
test
pop
cmp
adc
testb
bound
inc
orl
fsubp
mov
ljmp
sahf
sub
cmp
xchg
imul
test
xchg
xor
jnp
xor
fisttpl
jecxz
inc
push
inc
es
sbb
test
icebp
ds
push
push
dec
stc
add
pop
enter
mov
xor
or
mov
in
xor
xor
insb
adc
iret
add
fsubrs
cmpb
mov
fcom
push
adc
and
push
loop
sbb
scas
fisubl
or
aam
je
and
or
mov
jmp
xchg
ret
stos
jo
fbld
mov
sub
shll
lret
mov
and
cltd
adc
xchg
jno
out
add
loope
rcr
add
fimuls
popa
xorl
xchg
hlt
jge
xlat
jne
pop
mov
xchg
lret
rcrl
xchg
into
and
in
dec
sbb
xor
fisttpll
cmpsl
inc
dec
filds
adc
sub
jb
mov
sbb
or
cmp
or
sti
sbb
mov
adc
iret
inc
cmp
sahf
int3
es
cmp
xchg
push
int3
bound
jnp
pop
sub
pop
sti
xchg
jecxz
mov
fidivrl
xchg
scas
and
or
dec
xchg
ss
jp
shrl
push
mov
das
imulb
jbe
dec
clc
jne
pop
dec
xchg
mov
aaa
lea
or
test
xor
cld
pushf
inc
or
les
jecxz
xchg
cmc
push
add
mov
xchg
into
int
fbld
je
lret
adc
mov
and
inc
push
imul
pop
idivl
cmpsl
push
mov
or
inc
pusha
xchg
stc
mov
pop
leave
call
mov
ret
push
jb
fwait
dec
fisttpll
mov
add
mov
jne
adc
jmp
insl
mov
mov
push
int
or
pop
int3
push
lret
mov
xorl
xchg
and
xlat
xor
mov
sub
mov
dec
in
xorl
dec
addr16
sub
lret
cmp
aam
lahf
outsb
jl
mov
sub
aam
jge
stos
sahf
jnp
cltd
lods
xchg
je
cs
adc
stos
mov
jnp
jno
dec
cltd
aad
jbe
lret
scas
mov
adc
inc
lods
cmp
sub
lcallw
stos
inc
movsb
sub
das
lret
repz
fsubrs
push
lods
mov
inc
sub
enter
popf
mov
adc
and
inc
aad
mov
ret
adc
xor
cmc
ja
ja
fimull
arpl
jne
jbe
sbb
mov
push
jp
ds
movsl
dec
cmp
inc
inc
inc
cmpl
aam
testl
mov
push
pop
enter
lahf
mov
imul
ljmp
or
adc
adc
sbb
add
fimull
push
push
ja
or
mov
push
stos
faddp
mov
inc
fwait
aad
rorb
cmp
sbb
cmpsb
aam
sbb
int3
inc
mov
loop
rorb
jg
into
bound
ljmp
mov
fs
sahf
or
mov
jae
es
xor
std
shrl
jne
lea
push
insb
sbb
std
call
add
mov
pop
sbb
lahf
mov
push
pop
icebp
outsb
and
sub
push
pop
fsub
gs
stc
in
push
push
inc
sbb
dec
je
push
sti
loopne,pn
jp
mov
bswap
jle
sub
stos
mov
cmc
jb
inc
jno
ljmp
mov
test
test
jnp
clc
xor
sbb
hlt
add
cld
jne
pop
adc
jmp
lock
mov
and
xorl
jg
adc
pop
xor
dec
outsl
mov
cmp
xchg
cmpsl
mov
mov
fldenv
test
push
mov
loopne
int
lds
push
adc
xor
cld
insl
ret
sahf
push
lds
pop
or
mov
or
push
ja
gs
out
cmp
jg
daa
xlat
mov
in
xchg
filds
pusha
adc
cmp
pop
out
mov
ficompl
jo
bound
mov
jo
jl
addr16
shrb
stc
add
sub
or
cli
adc
lahf
mov
or
test
cs
inc
clc
and
pusha
fst
push
sub
sub
pop
lea
stc
arpl
mov
out
push
sbb
adc
push
ret
shl
push
sub
dec
nop
mov
cmpl
mov
mov
movsb
mov
std
hlt
daa
pop
fildl
cli
lahf
xor
or
repz
imul
add
lods
fidivrs
mov
mov
hlt
mov
subl
push
lods
pmuludq
mov
push
xchg
cmp
pop
dec
add
jge
dec
mov
add
cmpb
jp
sbb
cmpsl
shl
jecxz
inc
pop
mov
and
test
into
push
dec
push
jne
push
dec
xchg
mov
repz
aad
cmp
xor
inc
fdivl
push
inc
mov
ljmp
xchg
mov
jge
testb
xchg
stc
cmpsb
cld
pop
adc
popf
loop
jl
in
push
pop
push
lret
call
push
stc
fstps
or
pop
mov
inc
gs
cmp
mov
ds
fwait
xchg
mov
stos
ret
adc
jle
pop
cmc
xor
and
pusha
and
pop
mov
xorb
stos
stos
xchg
mov
push
xchg
jo
sub
cwtl
sbb
lock
inc
and
imul
sub
jno
call
repnz
cli
jnp
add
popl
loopne
and
out
fwait
out
insb
lcall
mov
out
adc
pop
mov
test
jb
inc
stos
and
xor
fimull
cmp
in
jno
cmp
xor
in
test
xchg
add
lahf
add
push
es
in
sbb
scas
push
lock
jg
pop
push
dec
xchg
push
push
ret
jl
insl
daa
aam
fdiv
test
or
sub
daa
xor
aaa
or
icebp
xchg
popf
mov
mov
jb
xchg
pop
mov
std
lret
icebp
fidivl
dec
inc
ss
sbb
popf
loop
push
scas
es
push
xlat
push
pop
xor
sbb
test
inc
cmp
pop
lcall
inc
adc
out
pop
ror
repz
mov
out
or
pop
rorb
dec
lahf
or
push
xlat
and
push
cwtl
imul
inc
imul
faddl
aaa
push
add
pushl
mov
pusha
inc
jmp
bound
sahf
cli
mov
outsl
pop
pusha
stc
inc
lea
mov
out
enter
jb
inc
cmp
stos
js
jle
cmpsl
mov
fcoms
jbe
fadds
ja
imul
int
in
ds
imul
push
push
lret
fiadds
pop
jns
jecxz
mov
push
mulb
xchg
xor
sti
jmp
pop
xchg
push
lods
gs
mov
jnp
mov
sub
sub
movsl
jno
xor
subl
nop
fs
aam
iret
into
add
sbb
std
cmpsb
mov
cwtl
xor
mov
inc
or
mov
imul
int
inc
mov
lds
arpl
clc
lock
sti
pop
or
aas
or
xchg
and
scas
cltd
pushf
sub
out
mov
mov
jbe
inc
ss
icebp
into
sub
add
gs
adc
int3
fldl
out
js
mov
out
es
leave
push
loope
xchg
jne
loope
adc
cwtl
dec
lret
push
pop
ja
pop
xchg
add
fs
in
in
sti
aas
mov
push
or
sub
mov
dec
repz
add
cmp
scas
psrad
pop
jb
pop
dec
mov
iret
sahf
leave
xor
insb
push
adc
inc
adc
scas
fidivrs
or
aas
or
jmp
inc
mov
stos
or
adc
cmp
rclb
out
stos
lods
adc
aas
dec
clc
and
push
dec
cld
pop
ficoml
xchg
jp
push
pop
test
in
aaa
test
pushf
mov
pop
insl
icebp
arpl
jnp
stc
into
jnp
push
pop
out
push
cli
push
push
mov
test
sbb
sarb
mov
pusha
int3
push
pop
inc
push
dec
enter
add
mov
out
int3
out
imul
test
movb
inc
inc
les
sub
pusha
out
jp
sub
pop
pop
les
rolb
xchg
subl
cmp
ret
test
das
push
add
sub
xchg
add
aas
sub
call
add
jle
mov
mov
test
fadds
sub
mov
inc
pop
scas
icebp
cs
ja
mov
idivb
ds
push
cmp
in
fmull
outsb
jecxz
or
jl
inc
hlt
push
sahf
mov
adc
pop
ret
jne
int
adc
ds
mov
ret
in
lret
cmp
test
shrl
shlb
pop
mov
in
xchg
push
mov
inc
pop
daa
repz
push
out
pop
fidivrl
inc
int
in
jb
pop
add
movsb
add
xor
fscale
movsb
lahf
adc
and
xor
mov
pop
xor
test
push
pop
jns
aam
and
fisubrs
scas
out
or
push
decb
pusha
cmpsb
push
mov
sbb
shlb
jge
mov
mov
xchg
jmp
push
ja
rcr
xchg
icebp
push
adc
das
jecxz
dec
imul
dec
mov
scas
mov
iret
aam
cltd
adc
sub
mov
faddl
sub
jne
shlb
mov
jns
in
or
in
add
sub
stc
xchg
fs
aam
leave
and
cmp
mov
pop
and
pop
insl
js
cmovb
movl
add
imul
lret
fldt
fistpl
dec
and
sbb
sub
xor
push
das
subb
push
ds
mov
test
ljmp
cmp
movsb
inc
int
sub
ficomps
or
ja
cli
movb
test
lcall
dec
imul
movsl
outsl
nop
fidivrs
out
subl
dec
dec
xor
cmp
jns
pop
xorb
mov
jo
inc
andl
sbb
sub
add
xlat
pusha
adc
jg
cmpb
and
sbb
xor
mov
sbb
imul
mov
and
lds
mov
gs
aaa
dec
xor
orl
cmp
cmp
inc
test
jnp
mov
insl
jp
scas
je
rolb
jbe
jne
testb
pushf
inc
scas
pushf
rolb
jg
imul
xchg
mov
je
add
rol
adc
loopne
subb
shl
test
adc
sbb
push
lret
dec
jmp
iret
orb
mov
cwtl
loope
fxch
dec
and
mov
ret
push
pop
outsb
jecxz
in
mov
popa
lret
popf
sbb
popa
insb
stos
mulb
jno
loopne
push
outsl
ret
loope
jmp
insl
push
cmp
dec
xor
add
data16
sub
mov
dec
test
hlt
sahf
rclb
cmpsb
arpl
xor
mov
fidivl
push
std
sbb
and
dec
add
and
es
sub
xor
clc
cwtl
pop
mov
push
or
jg
arpl
inc
repz
adc
pop
mov
imul
mov
inc
movsl
sete
add
data16
sub
cs
push
adc
imul
pop
xchg
xor
add
adc
push
imul
push
cmp
jnp
in
fistpl
jnp
in
or
jae
shl
into
in
xor
aaa
xchg
lret
hlt
dec
cmp
adc
flds
movb
push
jo
cld
pop
loop
adc
add
fs
lods
or
shl
scas
push
mov
jnp
dec
rolb
rsm
mov
mov
js
adc
out
lods
inc
insb
dec
pushf
lods
imulb
loop
aas
in
pop
or
xchg
les
imul
es
iret
cwtl
adc
jmp
jge
test
aas
xchg
pop
push
xor
cwtl
mov
pop
pop
add
adc
leave
or
cltd
nop
fdivp
je
mov
fstp
call
sbb
jle
or
and
aam
adc
jne
push
pop
in
lea
adc
imul
or
mov
sub
sbb
lret
xor
enter
fs
push
mov
js
and
ja
ja
les
push
clc
movsb
imul
add
and
mov
inc
das
xchg
js
cmpsb
inc
mov
pushf
addl
ficomps
xchg
mov
jbe
mov
out
inc
push
sbb
mov
mov
mov
or
out
ljmp
loope
lds
outsb
stos
cld
pusha
imul
add
mull
push
iret
ret
addr16
push
pop
sbb
push
cmp
gs
cmpsb
mov
sub
adc
mov
mov
dec
cmp
fists
aaa
popa
mov
mov
xchg
jne
inc
push
add
jae
js
jnp
aas
sub
push
add
add
mov
pop
mov
xor
pop
cmp
dec
addr16
xor
sbb
jbe
loope
push
enter
jns
push
int3
sbb
inc
jl
xor
push
sub
cmc
pop
mov
jae
mov
push
fidivrl
mov
jno
ja
adc
in
sbb
fdivrs
inc
insl
jo
jns
nop
mov
sbb
xor
movsl
cmc
xchg
pushf
add
xchg
pop
rcrb
js
sti
cld
or
stos
cli
lods
jnp
lahf
mov
mov
les
add
dec
dec
lret
popa
inc
sbb
out
cli
dec
pop
push
dec
ljmp
js
sbb
in
push
lock
mov
inc
add
adc
inc
mov
add
scas
data16
mov
pop
ret
aaa
rclb
jge
dec
or
shlb
sti
xchg
dec
cs
pushf
push
or
mov
ret
sub
xchg
les
pop
or
arpl
sahf
hlt
mov
add
test
mov
out
popa
xchg
cs
in
mov
repz
aas
adc
jbe
mov
xor
imul
daa
jle
cli
ljmp
loop
push
ljmp
pusha
mov
push
insl
xor
dec
mov
mov
or
mov
inc
xchg
mov
add
and
sbb
das
es
movsb
push
hlt
flds
pop
pushf
fadd
or
shll
js
sub
lea
jbe
popa
sub
pop
shll
sub
loope
xchg
mov
sub
xchg
sbb
push
inc
pop
insl
aam
inc
lea
popa
or
cltd
loope
dec
faddl
shll
jno
mov
icebp
imul
ror
ljmp
xor
push
sbb
neg
xchg
or
xchg
out
cmp
push
or
xchg
daa
dec
dec
or
in
scas
or
xchg
int
mov
insb
fucom
out
sbb
imull
pop
repnz
dec
mov
pmaxub
push
add
lret
cmp
shll
dec
xchg
push
adc
push
clc
dec
cmp
pop
lahf
cld
test
mov
mov
ret
xor
jg
mov
mov
cld
movsb
sub
xlat
mov
mov
xor
outsl
and
mov
jno
aas
in
push
ficoml
adc
adc
cmovbe
xchg
lods
in
pop
mov
test
cli
push
mov
pop
adc
loop
add
push
jno
inc
push
push
lret
sub
ds
int3
icebp
inc
xchg
mulb
mov
jle
add
lcall
bound
mov
loopne
pop
mov
cmp
lods
aaa
in
mov
test
adc
adc
pop
fcomi
pop
xor
aaa
push
sbb
pusha
xchg
loope
shrb
fcoml
or
jno
repnz
sahf
movsb
subb
cltd
out
adc
mov
mull
xlat
out
inc
insb
add
sbb
jmp
out
popf
inc
cld
imul
fcomps
and
cmpsb
adc
push
jmp
call
mov
xchg
xchg
xor
insl
dec
sub
inc
in
xchg
pop
push
xor
pop
add
cmp
je
pushf
dec
sub
inc
jns
dec
inc
int3
data16
je
sub
outsb
shlb
dec
jl
adc
cmp
push
shlb
mov
dec
jge
inc
pop
mov
shlb
and
cmpsb
hlt
mov
iret
or
sbb
or
xchg
sbb
das
xchg
nop
pop
xor
iret
cld
mov
mov
sub
pop
pop
lret
aad
cmc
cs
fcom
leave
add
pushf
push
dec
addr16
pop
adc
and
push
fs
jo
mov
lods
sahf
clc
add
mov
inc
or
loopne
outsb
lods
fcoms
lods
lods
mov
add
mov
out
sub
sbb
sbb
and
rol
mov
jmp
shll
testb
xchg
bnd
xor
int3
icebp
out
mov
lret
mov
stos
hlt
xor
push
jmp
cwtl
inc
outsb
mov
cs
pop
inc
sub
repz
arpl
dec
loopne
out
cmp
cltd
stos
sbb
lods
jo
jo
jb
inc
arpl
jle
jo
lret
mov
dec
out
jno
repnz
add
mov
jnp
outsb
cld
fisttps
lret
xchg
pop
mov
mov
sub
data16
imul
mov
orl
or
add
sub
bound
add
and
aas
lea
mov
and
ret
xlat
sub
imul
inc
inc
sahf
mov
fldenv
push
scas
pop
dec
fucomi
pop
outsb
inc
sahf
cmp
lock
test
dec
movsb
add
jmp
mov
stos
or
dec
test
mov
stos
dec
jmp
xchg
lcall
and
inc
or
push
xchg
shll
sub
mov
gs
xor
gs
jbe
ds
jmp
push
repz
in
inc
outsb
jns
movsb
adc
fcompl
addr16
dec
cli
jbe
in
mov
loop
sbb
ficoml
in
ret
pop
js
pop
inc
dec
mov
test
fucomip
in
xchg
jl
sub
push
add
fwait
jge
insl
mov
pop
imulb
lcall
or
mov
js
dec
lock
data16
jno
xchg
scas
pop
psllq
inc
xchg
xor
adcb
cmpsb
int3
hlt
cmp
push
xchg
fwait
add
jge
popa
cmp
sub
xadd
cmp
out
fwait
xchg
pop
jo
and
lret
add
inc
push
xor
dec
inc
arpl
inc
inc
sarl
sarb
dec
xor
dec
pop
mov
cld
fcmovnu
getsec
sbb
ljmp
or
jmp
outsb
test
lods
mov
lock
sub
leave
mov
push
xor
inc
dec
sahf
je
mov
adc
jg
xchg
jp
xchg
mov
iret
movsl
dec
sub
mov
imulb
xchg
mov
cmovno
mov
push
cmp
add
pop
les
pop
test
and
inc
add
repnz
addr16
daa
ficoml
mov
xchg
popl
aam
adc
jecxz
and
sarl
add
lds
pop
xor
dec
ljmp
xchg
rcll
mov
mov
test
mov
adc
inc
incb
sbb
inc
lret
fcoml
and
add
leave
push
loopne
mov
je
push
and
xor
xchg
rolb
in
push
cmp
aas
fstl
ljmp
insw
sub
imul
imull
add
adc
mov
imul
outsb
jnp
outsl
xchg
pop
andl
mov
js
ret
outsb
aas
dec
call
out
push
sbb
inc
daa
add
js
sub
xlat
lret
es
mov
push
cld
jg
mov
sub
movsb
test
or
xchg
jnp
and
dec
cmp
cmp
jecxz
lods
lret
mov
ret
inc
out
imul
dec
out
mov
xchg
inc
shlb
aad
pop
xchg
sub
ljmp
jl
push
sahf
in
call
cli
push
add
xchg
std
mov
mov
inc
lret
adc
mov
lods
jg
out
ds
notl
push
std
dec
cmp
out
in
mov
rdmsr
js
mov
sahf
cmp
stos
xor
clc
ret
outsb
xlat
loop
repz
push
jb
xor
mov
stos
pop
inc
movsl
sahf
or
movsl
clc
mov
fsts
sub
lret
imul
pop
or
fiaddl
cld
pushf
shlb
inc
jp
out
pop
and
push
fs
loopne
cmp
and
aam
jns
adc
sbb
bound
push
fwait
push
aam
or
push
insl
push
mov
movsl
jbe
incl
cmp
ret
or
and
das
aam
outsb
insl
adc
bound
loop
inc
dec
and
and
pop
lods
ljmp
dec
stc
fadds
out
inc
inc
iret
cmp
iret
sbb
jp
pop
xor
push
rorb
xchg
aaa
dec
dec
lea
mov
push
push
in
xor
sbb
ljmp
fisubrs
push
jl
mov
xor
aaa
mov
mov
sbb
dec
add
lods
pop
insb
dec
shll
pop
out
jbe
scas
jnp
or
gs
addr16
andb
test
dec
into
fwait
jbe
inc
push
clc
stos
int
sbb
rorl
jno
add
in
hlt
add
outsl
mov
jl
bound
js
add
ficoms
int3
dec
inc
add
jge
xchg
cmp
xchg
push
jbe
nop
leave
push
mov
out
sarb
lcall
push
test
fwait
pop
adc
push
mov
out
mov
stos
scas
or
in
loopne
aas
aas
lock
push
dec
add
push
push
cli
loope
fmull
shrb
enter
cmpsb
cli
push
cli
pop
xchg
jp
xchg
xor
sub
cs
aaa
loope
sub
ret
pop
aad
clc
push
ds
mov
fbld
dec
ljmp
or
faddl
stc
inc
mov
push
out
out
data16
std
insb
jmp
lcall
gs
adc
add
daa
push
mov
mov
popf
outsb
ficompl
lret
xor
xchg
cmp
jp
dec
ds
fs
pop
inc
repnz
xor
sbb
dec
pop
lods
leave
fcoms
cmpsb
std
pop
mov
dec
cs
pop
cli
ret
fidivrs
pop
mov
adc
int3
cmc
or
aaa
cmpsb
pop
push
in
mov
imul
stc
mov
pop
fwait
cld
ja
ds
xor
fidivs
push
es
xchg
repz
push
cmp
insb
inc
arpl
test
lds
lods
or
or
jecxz
pop
movsb
and
push
push
dec
orb
ds
out
inc
out
orl
shrb
mov
inc
jae
adc
mov
repnz
push
pop
bound
in
pushf
es
scas
mov
mov
std
push
sub
int3
pop
out
mov
sahf
ds
shrb
out
xchg
les
cmp
aaa
push
imul
ficoms
ret
jg
sbb
sbb
push
or
cmpsb
mov
and
pop
out
scas
jle
imul
aam
jg
and
dec
add
loopne
inc
add
ret
xchg
sbb
cmp
sub
mov
dec
clc
es
gs
insl
mov
mov
arpl
push
mov
dec
out
cwtl
incl
adc
cmpsb
popa
les
mov
push
movsb
push
iret
push
inc
iret
test
je
aam
ret
sti
out
jnp
dec
dec
sub
pop
gs
push
jmp
mov
mov
subl
sbb
push
ljmp
jno
xchg
dec
sarb
insl
jae
xchg
pusha
sbb
cmc
dec
sub
mov
mov
push
dec
mov
or
pcmpeqw
xchg
inc
mov
inc
pop
imulb
in
cs
je
call
popa
ror
bound
mov
setb
fdivr
out
mov
cmp
xchg
xchg
enter
mov
out
and
fidivs
std
jp
out
fstl
add
dec
movsl
mov
scas
loop
mov
mov
rcl
or
and
hlt
add
in
arpl
stos
mov
sbb
das
loope
lret
js
enter
mov
aas
jnp
es
jl
or
ds
mov
mov
lea
inc
subb
test
pop
mov
pusha
mov
scas
xor
stos
test
xchg
pop
mov
push
lods
dec
xchg
clc
jp
jmp
popa
jmp
outsl
nop
mov
jns
add
out
mov
cmp
in
jo
pop
fisttps
fidivs
jmp
add
popf
mov
mov
out
inc
mov
lds
push
lock
dec
sti
mov
shl
aas
xchg
nop
mov
jns
sub
sub
js
adc
sub
fmul
pop
mov
pop
push
aam
roll
sub
int3
xor
mov
xchg
push
hlt
xor
repz
inc
jle
fst
fimuls
out
or
mov
jp,pn
mov
fmuls
mov
xchg
dec
sub
pop
out
cmc
mov
adc
push
notb
ret
pusha
mov
ljmp
lcall
shl
shlb
shrb
mov
mov
add
aam
jecxz
jmp
inc
and
mov
loopne
push
in
repnz
pusha
sub
insl
fwait
jmp
imul
cmp
xor
lds
cmc
dec
bound
xchg
not
add
movsb
mov
leave
lds
ljmp
int3
push
sbb
or
push
cmp
jo
lds
and
and
test
and
cs
push
xor
or
pop
dec
mov
cmp
inc
ret
outsb
clc
jns
mov
adc
les
dec
or
mov
or
dec
pushl
fs
add
inc
jl
in
iret
pop
js
and
clc
fisubrl
adc
mov
mov
adc
xor
pop
bound
push
mov
fisttpll
sub
jno
lcall
fstpt
movsl
sub
popf
fsubrs
orb
pop
sbb
call
xor
xchg
inc
mov
cmp
loope
dec
addl
mov
js
inc
inc
xchg
lahf
ret
xorl
sti
sahf
inc
loop
sbb
into
stos
nop
add
xchg
je
sbb
clc
cmp
add
jb
cwtl
fdivrl
aam
imul
mov
or
in
pushl
sub
pusha
xchg
cmp
pop
rcrl
pop
pop
push
jae
and
jbe
mov
push
push
inc
repz
jnp
pop
inc
mov
or
cmpsb
into
ds
xchg
mov
imul
push
sbb
sahf
jno
jmp
cmp
in
jo
cli
xchg
push
lret
cmp
xor
push
fisubs
flds
shrl
das
jnp
fmul
mov
push
ficompl
add
vpcmpeqq
mov
mov
cltd
sub
addl
fnsave
movsl
es
jl
rorb
data16
add
push
sub
adc
sbb
lahf
fidivl
in
mov
adc
or
dec
mov
jg
iret
mov
out
jo
push
and
xchg
push
pop
pop
push
into
adc
jb
lret
cmp
or
sti
inc
xor
cld
adc
aad
add
add
test
push
sarl
xlat
sahf
lods
call
mov
xchg
or
mov
mov
sub
sbb
mov
stos
andb
mov
daa
jge
mov
add
insb
cmpsl
nop
add
std
mov
and
in
cltd
insl
fildll
pusha
xor
outsb
int3
ret
test
aad
cld
xlat
pop
adc
movsl
lret
and
inc
jo
jb
adc
sub
mov
mov
loop
inc
push
xorl
and
lock
mov
enter
add
fldcw
test
add
insb
adc
fisttps
dec
cld
xchg
stos
aaa
xor
push
push
dec
inc
xor
inc
std
lock
jle
pop
cmpsl
jae
inc
jns
jns
addl
bound
push
push
out
rcrl
nop
fistpl
push
std
fucom
add
push
inc
ret
sbb
lods
inc
inc
and
cli
jg
out
nop
push
dec
and
fdivrl
dec
pop
inc
dec
les
daa
dec
test
jl
sbb
cs
push
test
cmp
mov
xchg
pop
insb
into
pop
incl
or
xchg
ret
sbb
and
push
popl
jne
sbb
sub
lcall
pop
test
ljmp
pop
push
xchg
cld
mov
cmp
cmp
orb
test
xor
mov
call
arpl
movsl
test
test
lahf
jnp
das
lahf
mov
pop
gs
add
jp
pop
aad
adc
or
cmpsb
pop
inc
jb
and
out
fiadds
push
out
fistpll
pop
xor
sub
and
ds
and
mov
and
enter
inc
mov
std
and
js
call
sti
push
mov
rcrl
jg
cs
mov
insb
mov
lods
add
shll
jnp
jae
add
imul
lret
inc
sbb
add
out
jge
push
sub
popf
arpl
mov
jb
cmc
das
mov
push
mov
mov
jge
in
or
aaa
out
mov
rorb
inc
fdivs
xchg
fbstp
pop
pop
mov
adc
push
movsb
loop
or
fnsave
cmc
scas
pop
mov
dec
push
mov
ficoml
cwtl
mov
ret
xor
push
dec
push
enter
movsb
inc
push
xor
les
mov
cs
push
pusha
jnp
int
and
stos
sbb
and
ljmp
or
xlat
and
leave
cmp
lods
mov
in
enter
ret
lret
sti
je
ret
daa
cmpsb
fcoml
shll
pop
sahf
sbb
stos
mov
lds
mov
xchg
and
cmp
mov
aaa
add
and
mov
push
adc
ss
jle
outsl
enter
push
jecxz
dec
xorb
out
loope
cli
fwait
lret
call
jns
lods
pusha
call
xor
mov
outsl
rcrl
sahf
lret
jmp
push
les
dec
lods
cld
in
cmp
jno
pusha
pop
sub
add
in
or
xchg
mov
lret
clc
insl
xorl
push
mov
stos
adc
cs
out
iret
lock
call
fs
jnp
cmp
xor
adc
loope
inc
leave
jae
push
lret
jle
int
jae
cmpsl
out
testb
add
push
sbb
daa
cmp
cli
pusha
sbb
inc
sbb
add
ret
out
arpl
push
lcall
int3
xchg
pop
mov
jb
jb
dec
lea
pop
xor
xchg
push
fidivrs
mov
mov
in
lock
jecxz
sbb
xchg
xchg
loopne
jmp
aaa
push
fstps
mov
jno
sbb
or
decb
fildll
xor
jb
loop
jo
lret
xchg
loopne
or
jno
sub
jecxz
jae
insl
sub
dec
repz
dec
lret
and
add
leave
sarl
push
inc
lahf
cmpsb
mov
or
out
push
sbbb
pop
xor
notb
mov
lahf
adc
adc
test
aam
mov
repnz
stc
mov
out
fldenv
lret
fdivrs
je
cmp
call
jecxz
std
add
nop
das
xor
movsl
fimull
push
push
mov
popf
sbb
push
push
shlb
mov
fsubs
inc
mov
adc
fdivrs
inc
lret
insb
sbb
and
mov
add
xchg
adc
divb
test
lock
sub
dec
and
jge
imul
rolb
and
aas
mov
aam
int3
and
cs
fsubrs
aas
sbb
icebp
roll
mov
jno
fs
mov
mov
int3
mov
xchg
jnp
cmpsb
sbb
cmp
dec
cwtl
testb
sti
lock
dec
push
leave
jle
outsb
and
and
movsb
push
and
arpl
gs
sub
xlat
cltd
xor
insl
lods
rolb
insl
dec
insl
mov
rcl
nop
test
sbb
jnp
xchg
xor
lods
aaa
nop
jbe
adc
xchg
pop
cmpsb
iret
ja
push
pop
mov
xor
cltd
ljmp
adc
addb
jmp
ret
push
xchg
sahf
popf
in
pop
sbb
and
mov
lret
cmp
push
psrad
lea
int3
and
in
xor
cmp
fldt
inc
or
shrd
mov
add
and
loopne
cmpsb
adc
mov
mov
lods
pop
pop
out
ss
fwait
mov
into
fbld
sub
test
or
mov
repnz
std
cwtl
inc
pop
mov
dec
lods
dec
lea
lret
and
flds
xchg
xchg
into
dec
clc
add
loopne
dec
and
push
mov
and
adc
mov
rolb
jmp
and
push
addl
sub
add
cwtl
sbb
cmp
xchg
stc
insb
xchg
shll
cmp
cmpb
hlt
lds
pop
sbbb
adcb
cmp
outsb
add
lea
add
jge
cli
cmp
rclb
push
cmp
mov
mov
xchg
in
jl
call
sbb
adc
shll
fiaddl
mov
mov
dec
fists
xchg
cli
addr16
mov
aaa
jb
fmuls
push
rcl
mov
aaa
and
xchg
idivl
cmp
or
lcall
sub
clc
jnp
push
es
fistps
mov
and
insl
daa
mov
xchg
std
xchg
mov
mov
mov
mov
push
shrb
push
adc
loopne
aaa
clc
xchg
ds
in
aad
mov
xchg
push
push
adcb
push
aam
adc
adc
mov
dec
cltd
mov
ss
xchg
in
pop
add
mov
pop
das
gs
aam
xchg
das
xor
sub
mov
and
dec
push
mov
jne
rep
xor
pop
lahf
pop
add
inc
stos
add
sbb
mov
mov
ss
pop
inc
cwtl
fimull
xchg
pop
dec
xor
adc
mov
mov
xor
cli
push
push
mov
repz
mov
lret
inc
xor
int
cmp
jmp
pop
popf
fimuls
sbb
das
cmpsl
or
xchg
xchg
inc
bound
cmp
mov
mov
repz
pop
scas
xor
loope
mov
pushf
jle
add
dec
cmpl
mov
into
inc
and
hlt
pop
repnz
and
call
add
rcrb
leave
or
mov
std
in
jmp
stos
sub
sbb
jmp
pop
int
jp
and
movsb
dec
out
in
cmp
push
notb
xor
pop
inc
or
lods
xor
xor
clc
sub
stos
add
push
and
jb
out
jl
jns
adc
mov
mov
or
insb
mov
adc
orl
daa
and
add
jo
pop
jmp
lods
vsubpd
push
es
movsl
stc
stos
outsb
repnz
push
dec
push
add
jmp
sbb
adc
shl
inc
mov
iret
ljmp
loop
imul
push
mov
cmp
mov
sub
test
xchg
jp
adc
insb
negb
jmp
jge
xchg
fs
outsb
and
std
nop
xor
rcl
dec
sub
xchg
xchg
pop
arpl
jno
or
out
pop
in
xor
int3
sub
cld
sti
sarl
dec
jge
loope
les
jl
sbb
aaa
out
cmpsl
lods
lods
daa
lods
or
test
cltd
pusha
mov
push
mov
inc
test
out
test
add
sbb
inc
mov
popf
outsb
addr16
popa
dec
push
js
icebp
or
push
mov
sbb
in
mov
enter
and
dec
add
inc
jbe
mov
dec
add
pushf
push
cltd
add
adc
pusha
mov
push
out
mov
ficomps
pop
or
mov
inc
push
out
cmp
jns
movsl
pop
cld
add
mov
rolb
mov
shrb
jns
cmp
in
movsb
aaa
bound
pop
test
sarl
push
cmp
aaa
adcl
daa
lods
movsl
lahf
xchg
jno
cmp
push
mov
jl
into
gs
mov
mov
pushf
mull
mov
sub
ss
iret
pop
out
xor
testl
ror
xor
rolb
sub
loope
push
std
push
lret
scas
ret
cltd
test
daa
pop
add
arpl
das
push
cltd
fistl
pop
or
jg
dec
lretw
ss
sub
fidivl
jo
repnz
mov
fadds
in
fldenv
clc
xor
xor
pop
stos
add
loop,pt
int
jg
ror
sbb
adc
loopne
jmp
lcall
pop
xor
cs
daa
or
cmpsb
sub
pop
dec
js
sub
push
shlb
pop
aaa
iret
push
aaa
fisubl
cmc
and
pushf
cmc
mov
cli
imul
pop
xchg
notb
jecxz
inc
xchg
mov
cmp
ljmp
inc
add
push
js
orb
inc
mov
sarb
fdivrl
mov
inc
mov
sti
rcr
out
jns
mov
mov
jae
hlt
xor
adc
sbb
xchg
loop
data16
shll
xor
or
roll
sahf
cltd
jns
and
bound
mov
push
stos
cmp
fcmovne
ficoms
ds
ret
aas
sub
das
push
dec
mov
imulb
pop
push
adcb
out
fstpt
loope
xchg
mov
mov
mov
mov
es
cld
mov
pop
mov
out
cli
and
jbe
movsb
inc
push
into
cli
pop
inc
jge
iret
cmp
fidivrl
inc
xor
push
int
push
aam
adc
insl
and
rolb
or
leave
fldcw
push
add
push
lock
or
jp
dec
mov
iret
cmpsb
insl
in
sub
add
cmp
leave
mov
popf
or
push
mov
push
xor
pop
scas
jecxz
jmp
ja
xor
repnz
mov
clc
fisubl
jl
stos
cmp
jno
test
cwtl
adc
cmp
jg
call
std
test
pop
add
xlat
cmp
push
jl
pusha
sbb
push
inc
cs
roll
sti
arpl
aam
xor
sub
loop
js
xchg
mov
jnp
int3
arpl
push
jle
or
mov
push
mov
scas
outsl
or
push
cmpb
pop
call
push
adc
add
test
jmp
fcomi
stos
stos
cs
lahf
lcall
lahf
lods
arpl
mov
les
fldenv
pop
in
sub
xchg
into
jl
xchg
aad
out
cli
and
mov
adc
mov
lret
mov
push
outsb
cmp
test
nop
mov
and
int
fs
mov
fisubl
cmp
lea
lret
cmp
pop
loop
push
fldt
es
pop
sbbb
mov
mov
mov
bound
jo
lock
hlt
cmp
adc
rcll
ficomps
leave
pop
sub
mov
stos
sarl
outsl
andl
pushf
add
jle
xchg
fwait
cmp
pop
jmp
cli
shll
inc
mov
test
bnd
je
mov
cmp
dec
push
sbb
int3
test
xchg
mov
fs
push
mov
sbb
cmp
out
mov
sub
push
ja
ss
mov
mov
inc
sub
out
je
inc
lcall
ljmp
xchg
aam
movsb
dec
and
outsl
fisttpll
fucom
mov
mov
add
xor
pop
mov
ja
mov
push
cli
dec
outsl
lods
leave
flds
fildl
loope
rol
out
scas
and
sar
xchg
jnp
lea
mov
mov
loope
repz
mov
sbb
inc
or
fnstsw
and
dec
xor
fisubs
and
add
out
push
testb
cmpsl
gs
inc
out
js
mov
insb
enter
sahf
rcll
sub
sbb
dec
cltd
test
dec
daa
cld
jae
cmpsl
jbe
or
push
cmp
ja
mov
sub
loope
cmp
inc
stos
es
jle
and
and
or
notb
mov
iret
loop
mov
mov
pushf
test
cltd
add
dec
pusha
sti
fwait
adc
dec
jle
pop
mulb
or
cmp
outsb
dec
cmp
shrl
adc
pushf
mov
ljmp
mov
push
dec
push
adcb
in
mov
and
in
dec
mov
mov
inc
mov
stc
test
loope
mov
out
stos
and
mov
mov
xchg
cld
xchg
lods
pop
push
lock
jle
fisubrs
hlt
loop
loopne
cmp
push
stc
cmpsl
sub
dec
flds
sub
repnz
pop
mov
push
in
xchg
push
pop
rorb
inc
mov
popf
push
xchg
into
xchg
sub
xchg
pop
add
rcll
les
loop
jbe
push
aas
dec
cmp
mov
jae
or
dec
cs
adc
jns
jp
jl
pop
popf
dec
mov
fiaddl
or
jo
or
mov
mov
inc
mov
mov
or
int
jmp
pop
movsb
cwtl
pop
mov
out
sub
iret
enter
icebp
push
sbb
jmp
sub
insl
xor
movsb
int
sbb
loopne
inc
pop
nop
or
fsubl
pop
jecxz
adc
sbb
ljmp
cltd
adc
les
sbb
xchg
pop
insl
xchg
mov
leave
out
push
adc
and
or
in
imul
xor
es
stc
int3
cmp
aas
repz
mov
push
mov
add
mov
shll
pop
outsb
fdivl
arpl
push
push
push
arpl
sub
fstpt
jae
imul
cmpsl
repz
enter
push
aaa
seta
mov
scas
jo
jge
test
pushf
jg
in
sbb
and
cmc
insl
clc
orl
push
mov
jbe
pop
inc
ror
xchg
adc
and
lds
mov
in
sub
jns
lock
sbb
fiaddl
pusha
vpmacsdqh
and
add
cmp
adc
inc
int
out
push
sbbb
jl
mov
mov
sub
xlat
lcall
sub
enter
sar
push
pushf
ret
pop
push
sub
mov
gs
jl
data16
aam
jne
test
mov
test
dec
push
mov
push
add
pushf
push
stos
loop
and
xor
pushf
xchg
xor
dec
scas
cmp
dec
sarl
add
outsb
je
mov
sbb
fbstp
add
icebp
cmp
insl
cld
mov
jns
mov
mov
dec
jl
scas
pushl
push
adc
dec
pop
dec
ficompl
movsb
xchg
xor
aas
cld
mov
repz
int3
mov
ljmp
jl
mov
jg
mov
mov
push
xchg
movsl
mov
hlt
adc
mov
jge
or
jle
js
lret
sti
mov
cmc
pushf
leave
jl
jb
cli
mov
xlat
mov
mov
add
dec
ss
jbe
sbb
and
mov
cmpsl
push
call
dec
pop
popa
pop
and
imul
daa
ret
iret
movsb
cld
add
and
ret
or
adc
xchg
sti
adc
mov
popa
jno
adc
js
decl
mov
or
xchg
roll
xchg
xchg
mov
xchg
dec
add
push
loope
out
inc
and
scas
test
sub
insl
nop
lds
mov
lds
insl
aam
js
scas
pop
mov
mov
dec
mov
sbb
or
pop
jae
sub
aam
scas
xor
mov
pop
mov
dec
cmp
or
xor
jl
jp
outsb
push
popa
and
jbe
xchg
pop
push
outsb
sub
test
gs
mov
lret
shll
add
sbbl
fsubl
pop
xor
mov
push
fwait
lret
mov
or
add
inc
xor
pop
clc
cmp
repz
cmp
mov
gs
jae
push
and
pop
dec
ss
negb
push
sbb
cs
dec
scas
and
xchg
aas
dec
mov
je
negb
mov
mov
pop
inc
cmpsb
inc
sbb
mov
repz
fnstenv
jno
add
sti
daa
push
imul
push
lret
mov
cs
push
xor
cmp
jmp
fsubr
mov
xor
lcall
lods
push
sub
inc
mov
outsb
adc
insb
xor
je
add
add
xchg
mov
nop
push
pusha
sub
loop
negb
int3
mov
fcoml
and
mov
mov
and
mov
js
pushf
repz
mov
add
ljmp
cld
push
test
popa
sbb
inc
xchg
jp
ret
adc
arpl
and
test
xor
addr16
jae
pushf
add
push
fldl
aam
inc
idivb
rep
daa
add
bound
lods
stos
mov
inc
mov
or
lret
ljmp
fs
adc
mov
or
movq
cs
sahf
addl
mov
and
push
push
fnstsw
nop
outsb
inc
add
mov
nop
xchg
int3
aam
cld
pop
loop
in
les
shll
jp
sub
testl
cmp
xchg
mov
lret
push
jne
push
mov
sbb
push
sbb
add
arpl
add
sti
test
int3
inc
push
push
mov
push
lods
sbb
out
repnz
cmc
cld
jmp
push
sbb
xchg
rolb
aaa
jle
xor
jbe
jp
and
stos
and
sbb
cmpsb
je
adc
lods
push
adc
xor
push
pusha
loopne
and
xchg
rol
in
cmpsb
mov
push
mov
xchg
mov
imull
sbb
xchg
add
aam
out
push
cmc
repz
fistpl
pop
dec
or
mov
or
push
cmp
clc
inc
arpl
mov
bnd
lea
sub
xchg
lahf
outsb
sub
pop
or
push
inc
adc
jg
enter
xchg
and
mov
xchg
pushf
lds
push
rcrl
lods
jp
nop
out
ret
or
jne
dec
dec
mov
xchg
out
aad
sbb
int
push
cmpsl
push
sub
cld
in
iret
out
test
mov
push
outsl
out
cmp
or
insb
aaa
cmp
xchg
sub
aas
sub
xchg
rol
xchg
popf
rorl
inc
scas
iret
inc
outsb
push
scas
xor
dec
and
imul
loope
mov
dec
xor
xlat
push
cmpsl
or
sbb
pushl
stc
jne
jge
movsb
imul
jge
jnp
jecxz
stos
mov
inc
push
dec
movsl
mov
out
sbb
jmp
push
jl
add
sti
cmp
mulb
test
push
outsb
stos
leave
mov
pop
mov
loop
xchg
mov
test
js
mov
rorl
or
jb,pn
or
test
pop
xor
jbe
xor
sbb
jge
jne
or
mov
jo
cmp
int3
stos
icebp
iret
fildll
jecxz
pusha
mov
out
orl
cmpsl
cmp
rol
lds
inc
sub
xor
popa
lods
insl
into
clc
vpshlw
insl
sub
in
lds
mov
mov
orl
jg
movsl
jo
sub
adc
leave
mov
cmp
pop
sub
inc
cltd
push
lret
iret
and
dec
xchg
loopne
popf
lcall
flds
in
daa
aas
mov
xor
lcall
movsl
mov
xor
mov
cli
sbb
test
divb
inc
adc
pop
ret
inc
push
mov
xchg
imul
popf
out
daa
sbb
shr
fldcw
xor
mov
nop
mov
inc
sti
lret
cmp
push
arpl
push
lock
jb
pop
pop
div
mov
cmp
mov
scas
leave
xchg
andb
dec
test
inc
ljmp
lret
push
add
dec
out
jb
sub
repnz
je
adc
inc
sbb
pop
outsl
cmp
sbb
test
add
xor
lcall
out
sub
sti
gs
mov
je
cmp
mov
call
outsl
mov
stc
add
sbb
fwait
js
lock
cmpsl
movb
daa
jle
les
adc
xchg
daa
inc
cmp
push
xchg
adc
cli
lcall
sbbb
dec
nop
mov
jnp
cli
out
lret
jo
out
xchg
into
pusha
cs
dec
dec
popa
ret
test
cmpl
mov
sbbb
dec
pop
cmp
loopne
loopne
sbb
inc
idivl
xchg
out
sti
push
inc
mov
imul
pop
push
fidivl
adc
inc
jbe
xchg
and
mov
cltd
int3
add
pop
jl
nop
insl
jp
in
sub
mov
xor
cwtl
inc
movsb
enter
adc
sbb
imul
jb
jno
xor
stos
cmp
stos
daa
xor
mov
dec
aas
pop
push
outsb
adc
xor
ja
sbb
not
shl
add
shl
dec
or
int
aam
into
mul
fs
sub
jecxz
pop
dec
cmpl
sahf
ret
xor
pmaxub
out
pop
mov
inc
stos
xor
push
sbb
dec
or
in
aam
cmpsl
outsl
dec
test
mov
fcmovb
inc
out
and
xchg
push
cmp
and
fwait
cli
or
pusha
sbb
lret
cmp
pop
add
xor
mov
out
push
loope
mov
xchg
cmp
icebp
dec
mov
sub
outsb
inc
ljmp
fisubrs
mov
xchg
std
ret
gs
shlb
xor
xor
test
fadds
fdivl
scas
imul
dec
fdivs
xor
pop
sub
pop
dec
clc
bound
icebp
subb
jge
icebp
fmuls
xor
and
jno
xchg
jbe
xor
xchg
in
pop
bound
fcmovne
jbe
inc
sub
push
xchg
sbb
xor
xchg
loopne
jno
adc
push
pop
jae
bound
push
push
xor
cmp
pop
sti
push
xor
loope
js
jle
call
push
jecxz
call
xor
arpl
mov
xor
cmp
xor
jecxz
cmp
push
add
cmp
outsb
sub
sub
stc
and
popf
sub
fsubrl
push
fsts
and
into
cmpsl
jae
test
enter
ret
test
dec
in
gs
outsl
mov
inc
xchg
pop
mov
pop
and
shlb
xchg
or
sbb
clc
push
pushf
adc
mov
das
dec
cmp
or
and
jge
hlt
testb
nop
push
ss
sbb
sbb
and
dec
add
and
or
mov
stos
jmp
in
lahf
mov
xchg
and
ja
sbb
cltd
jecxz
inc
inc
and
push
cmp
adc
xor
adc
pop
faddp
xor
mov
out
das
add
test
mov
daa
inc
in
xor
ds
in
or
nop
xor
dec
lahf
dec
decb
jg
sbb
idivl
xchg
sub
adc
jns
daa
jnp
mov
pop
jo
ds
divl
jg
sbb
cmp
stos
xor
adc
xor
je
inc
sbb
or
nop
scas
cltd
lock
je
out
repnz
mov
and
shl
jbe
adc
enter
xchg
cmp
ja
loope
jne
and
cmp
call
shlb
fwait
pop
mov
xor
jle
adc
cmpsb
mov
sbb
mov
inc
cmp
sbb
sub
push
mov
inc
repz
xchg
nop
dec
lcall
and
jne
scas
sbb
stos
stos
push
cmc
cwtl
cmp
mov
xchg
sarb
sti
arpl
aad
scas
pop
mov
sahf
lock
mov
aam
orl
sub
and
inc
push
adc
fwait
sub
and
jb
aam
arpl
orl
stos
push
adc
out
test
lcall
outsb
mov
push
pop
cld
aam
in
aaa
xor
enter
adc
lret
dec
popa
in
cltd
push
adc
mov
push
cmpsl
add
sub
pop
dec
pusha
imull
fnsave
stos
add
dec
in
sbb
add
add
sahf
mov
inc
jo
sub
fldz
ss
adc
cld
jns
das
rcll
sub
pop
int
jmp
mov
cli
adc
xor
pop
push
lods
cwtl
inc
bnd
rcr
mov
dec
insb
inc
lds
loope
movsb
hlt
xchg
bnd
cmp
stos
imul
pop
jno
and
enter
xlat
pop
sbb
clc
ja
pushf
notb
sbb
add
stos
cmpsl
mov
sbb
sub
mov
imul
xor
test
out
mull
pop
or
lea
incb
pop
repz
dec
pop
lret
ror
les
mov
jnp
push
push
inc
sar
inc
daa
rcll
lahf
pusha
inc
push
ja
sarb
roll
pop
cmp
xor
addr16
xchg
push
xor
inc
stos
cmp
cmp
int3
push
jne
bound
clc
shll
or
mov
sti
ss
fs
add
push
inc
stos
inc
bound
je
pop
outsl
sbb
xor
pushl
pop
imul
sub
ret
loope
test
test
imul
aam
addr16
sar
lds
push
xlat
imul
mov
sub
xlat
roll
dec
lret
call
loopne
jnp
pusha
push
fsts
int
or
fdivs
mov
xor
jb
stos
bound
dec
lods
adc
loop
aam
or
add
sti
std
in
pop
stos
std
add
in
and
mov
or
jge
loope
cmpsl
push
fistps
out
mov
ret
lea
fisubs
leave
jge
cld
add
add
iret
xor
xchg
fwait
inc
es
jmp
sbb
notl
rclb
or
sbb
stc
inc
xchg
pop
xchg
pop
jne
mov
addr16
dec
shl
cwtl
daa
mov
pop
push
sbb
sbb
mov
int3
jno
inc
jno
mov
jmp
cwtl
out
sub
xor
stc
test
add
in
push
xor
and
mov
jne
rorb
call
insl
test
pop
add
mov
xchg
ljmp
cmc
popa
mov
mov
leave
fnstenv
inc
lods
mov
inc
or
mov
adcb
cmpsb
mov
add
lds
push
sti
pop
lret
cmp
imul
stc
rcr
sub
push
repz
movsl
mov
sbb
cmp
adc
inc
adc
popa
out
mov
test
in
push
test
fcoms
cmp
pop
pop
jo
or
mov
or
inc
mov
addr16
aaa
pop
jns
jmp
push
xor
and
push
aam
xorb
lods
pop
cli
clc
out
ds
push
mov
dec
xchg
push
bound
xor
fdiv
in
pop
mov
fistps
fstps
mov
mov
loopne
jo
inc
int3
pop
scas
cmc
es
xlat
jae
xor
jmp
icebp
pop
lcall
orb
push
out
push
and
xor
stos
loop
mov
call
xchg
mov
fwait
or
mov
inc
rcrb
and
push
sub
jmp
out
aam
cltd
movsb
add
jno
gs
ret
pop
cmp
push
or
outsl
stos
fnstsw
cmpl
inc
jg
icebp
add
fstpt
ss
and
in
xchg
xchg
jb
out
mov
mov
insl
add
insb
add
xlat
arpl
mov
pop
mov
ficoml
mov
mov
repnz
sbb
sbb
and
bound
emms
and
int3
mov
xchg
push
sub
dec
test
adc
cmp
or
in
adc
adc
iret
xor
pusha
sub
cs
es
mov
sub
dec
sbb
frstor
sub
ret
jo
dec
loopne
jo
xor
in
xlat
stos
push
dec
xor
and
in
jns
test
adc
jle
out
imul
push
aam
jb
and
andb
dec
in
dec
mov
xchg
mov
fs
xor
test
cmpsl
pop
ret
or
lret
in
push
xchg
xor
fidivs
mov
std
adc
adc
xchg
adc
adc
mov
or
loopne
xchg
dec
adc
fwait
daa
jbe
popa
push
xor
sbb
lea
xor
pop
notb
xchg
faddl
ss
pop
int
jg
pop
push
and
cmc
icebp
xchg
cltd
mov
scas
xchg
roll
dec
sbb
shll
jg
jns
sarb
enter
rorb
pop
push
gs
aas
dec
jo
repz
sbb
mov
xor
mov
and
test
push
cmp
std
lods
add
mov
xor
inc
aad
insl
sub
sub
das
iret
loopne
into
pop
or
and
dec
dec
rorl
pop
ret
fimuls
in
mov
mov
insl
popa
addr16
adc
cmp
mov
push
dec
out
mov
push
jmp
out
das
jle
lahf
lahf
or
jmp
push
cmc
pushf
dec
arpl
ja
inc
lcall
pop
insb
adc
dec
mov
sbb
jo
sub
stos
push
sub
mov
cmp
xchg
cmpsl
fwait
and
sub
mov
in
pushf
mov
mov
push
aad
ss
mov
and
mov
sahf
hlt
pushf
cmp
add
inc
add
pop
mov
test
and
mov
mov
aas
mov
test
and
xchg
int
and
sbb
and
mov
xchg
filds
int
imul
je
test
lcall
inc
or
inc
cmc
ss
out
xchg
lahf
jmp
aad
icebp
subl
xchg
loop
lcall
int
jle
inc
stos
je
movsl
ds
adc
les
ljmp
popa
xchg
jno
or
sbb
aam
mov
paddq
outsw
cld
xchg
imul
je
and
aas
cli
ss
fs
sub
xchg
sahf
xor
pop
and
sub
lret
lahf
xor
sub
ret
adc
mov
popf
mov
hlt
rclb
js
sbb
adc
pop
je
daa
mov
push
mov
fildl
lea
repnz
das
add
ffreep
inc
ret
or
or
imul
jo
out
xchg
shrb
push
sub
dec
mov
push
in
clc
test
lcall
push
jne
mov
push
mov
add
hlt
jb
mov
xor
mov
adc
pop
fwait
incb
scas
xchg
in
xor
inc
mov
adc
cmpsb
push
jl
cmp
xchg
roll
clc
fsubrl
les
jb
cmp
cmp
sub
les
nop
or
ficomps
push
lea
cli
jecxz
das
push
popf
pusha
or
jae
gs
loop
xchg
daa
daa
pop
leave
push
aam
mov
enter
jecxz
mov
pop
aad
xchg
popa
jg
xchg
and
fsub
cli
std
dec
mov
and
leave
pop
inc
lret
mov
inc
jle
xchg
adc
sbbb
sub
aas
imull
and
fstpt
lds
sub
cltd
fs
sbb
fidivrs
out
pushf
mov
lcall
sbb
outsl
sbb
pop
fdivrs
push
fwait
out
jg
mov
cltd
data16
into
lcall
adc
popf
mov
add
or
aaa
sarb
sarl
mov
xchg
jmp
jne
notb
loope
pop
jo
test
xor
cltd
aas
fwait
out
inc
mov
jge
or
outsb
mov
cmp
jbe
jl
inc
lret
sbb
ret
xor
call
dec
add
and
sbb
sub
daa
repnz
dec
or
jmp
xchg
mov
xchg
test
jb
pop
jp
and
sar
aaa
pop
and
xor
aaa
xchg
mov
adc
pop
push
inc
aas
sbb
jecxz
add
pop
ljmp
fs
or
pop
jae
pop
xor
xchg
cmc
push
inc
sub
jge
arpl
and
data16
sbb
data16
fimuls
pop
push
sbb
mov
imul
dec
dec
lret
popf
stos
add
test
sub
out
dec
sub
cmp
gs
inc
icebp
push
insb
arpl
or
pop
add
je
and
lret
mov
sub
jbe
adc
in
jbe
mov
cld
lods
push
lea
int3
lret
inc
dec
in
dec
xchg
dec
loope
add
into
and
cmp
lds
add
inc
adc
pop
mov
aad
sub
roll
jno
shlb
fdivrl
jb
idivb
pmaddwd
loop
mov
mov
adc
add
mov
add
int
mov
outsl
scas
add
out
lods
adc
cmp
lods
xchg
popf
sub
and
lea
pop
call
jle
inc
in
insb
shl
mov
in
nop
pop
fildll
sbb
ret
call
adc
fdivs
lret
ja
aaa
das
and
mov
fbld
jmp
pusha
fiaddl
jecxz
outsb
dec
in
les
sti
lock
andb
lods
sbb
mov
mov
popa
jno
mov
cmc
dec
test
sti
push
pushf
cmp
inc
jge
pop
or
dec
inc
push
push
xchg
push
nop
addps
or
in
dec
ret
or
das
pop
pop
xchg
xchg
mov
fnstsw
xchg
sbb
add
xchg
enter
jg
push
aaa
jecxz
pop
loopne
jmp
aad
sbb
arpl
adc
lea
cltd
adc
popf
mov
or
sti
cmp
mov
adc
in
daa
cmc
outsl
in
push
and
into
and
pusha
push
fiaddl
xor
stos
stos
fsubs
push
pop
mov
fdivrs
mov
jae
or
outsl
jb
mov
xor
cmp
aad
fsubrl
stos
sarb
pop
inc
addr16
rolb
out
aam
pushf
fwait
loop
inc
jp
lods
outsb
popf
rcrb
xchg
call
lods
jmp
sub
lret
out
loopne
rorl
testl
and
sbb
outsl
cmp
iret
pushf
pop
lds
loope
sbb
xor
icebp
loop
xchg
sub
mov
gs
insb
inc
mov
test
outsl
pop
mov
clc
mov
mov
dec
dec
stos
sub
aad
cli
cmp
mul
mov
pop
subl
add
pop
scas
lahf
xor
and
jg
cmp
stc
inc
jae
out
mov
sub
icebp
jae
dec
ljmp
pop
fwait
mov
mov
mov
cmp
icebp
int
sbb
xchg
mov
push
sar
jb
and
xchg
mov
xchg
push
and
mov
or
daa
adcl
icebp
sbb
cltd
mov
bound
sbb
pop
aas
and
mov
xor
sbb
lahf
in
enter
xor
jp
stos
mov
in
cld
data16
adc
fwait
dec
mov
pop
and
andl
pop
mov
inc
insl
mov
out
mov
call
and
shlb
xchg
pop
addr16
xchg
test
iret
or
cltd
xchg
pop
shl
xchg
cmp
cmp
adc
test
mov
hlt
dec
aas
aam
out
xchg
iret
push
adc
out
cmpsl
adc
stos
push
dec
add
dec
icebp
sbb
rorb
and
sub
and
insl
push
in
ret
pop
xchg
mov
pop
cmpsl
imul
nop
inc
mov
fisttpl
je
xchg
or
test
xchg
ret
stc
subl
pop
pusha
pushf
mov
cmp
sub
sbb
lcall
or
jge
stos
and
mov
cmp
mov
fcomp
xchg
shl
pop
les
sub
inc
fcmove
sub
mov
dec
or
adc
inc
stos
adc
test
xor
inc
mov
movsl
push
test
push
mov
popf
adc
xchg
pop
pushf
add
lahf
xor
test
push
jns
push
jp
mov
aas
sbb
push
sub
fs
neg
loop
cmpsl
xchg
sub
int3
imul
js
pop
shlb
push
repz
faddp
popa
loope
xchg
nop
push
cs
mov
jl
inc
mov
inc
roll
imul
fisttpll
or
in
subb
jmp
mov
inc
cld
push
xor
add
inc
or
int3
push
cmp
outsb
jle
mov
lahf
xor
cli
das
int
cld
xor
mov
xchg
pusha
lret
adcl
inc
ficoms
ret
mov
mov
pop
and
mov
inc
adc
and
imul
and
cwtl
and
push
test
sbb
jo
push
sbb
in
mov
in
das
sub
pop
xchg
rcr
xchg
mul
cmp
push
rclb
add
mov
xor
push
pop
enter
es
inc
imull
rorb
or
movsb
popa
sti
jbe
jle
in
xor
inc
les
call
mov
push
int3
mov
push
cmpsb
sahf
push
out
dec
imul
and
adc
arpl
xor
xchg
xchg
mov
push
xchg
outsb
dec
lds
adc
or
stos
inc
pop
enter
in
pushf
jle
sub
lea
pop
icebp
push
dec
sar
add
mov
gs
mov
or
sub
xchg
call
mov
lcall
xor
sbb
mov
add
sub
loop
jne
repnz
adcl
ret
inc
cmp
mov
mov
fisttpl
sbb
inc
lcall
in
add
mov
sbb
inc
and
int3
xchg
mov
xchg
sarl
inc
das
popf
xor
aas
push
pusha
out
mov
ja
frstor
cli
test
mov
daa
sahf
sub
mov
xchg
jle
dec
mov
cmp
adc
mov
inc
stos
hlt
jp
sbb
pop
dec
lahf
mov
and
or
hlt
icebp
inc
push
push
ret
cmp
mov
aas
lods
test
pop
cld
mov
mov
rorl
or
stc
stos
iret
dec
fsubr
cmpsl
mov
fstpl
mov
jecxz
in
fimull
adc
jo
push
fnstcw
inc
inc
push
mov
mov
or
add
add
loopne
les
fst
add
mov
ds
or
and
pop
inc
mov
jecxz
dec
pop
add
pop
aad
icebp
push
js
add
add
cmc
inc
loop
enter
lcall
cmpsb
push
in
sahf
push
fsts
push
xchg
pop
arpl
shlb
sbb
sub
sub
dec
lret
cmp
lret
jl
dec
sbb
fcoms
mov
mov
jmp
mov
dec
test
sbb
std
add
cmp
push
mov
in
daa
jno
and
aas
xor
mov
pop
add
pop
call
xchg
mov
nop
and
xchg
mov
sbb
iret
xor
push
push
mov
pop
aaa
add
stos
mov
sbb
xchg
mov
loop
pop
mov
in
stc
pop
stos
mov
xchg
jo
int3
popf
icebp
into
loope
or
jns
jae
xor
jge
ljmp
push
cmpl
xchg
mov
shrb
pop
out
leave
mov
out
aas
xchg
pop
lcall
pusha
insl
lahf
or
jb
lds
outsl
movsb
xor
fcompl
jp
outsb
ja
mov
mov
cs
mov
jge
dec
pop
push
sti
cmp
and
mov
testl
jmp
jb
sub
and
add
sti
xchg
or
or
fwait
xchg
push
decl
mov
xchg
outsb
mov
add
aam
stos
cmpsl
ja
addl
push
sub
and
sbb
call
push
cmc
mov
fs
mov
aaa
clc
insb
stc
and
push
xor
lods
arpl
push
xorl
shrl
cwtl
ds
push
orl
stc
int
cld
ret
in
dec
ja
movb
leave
mov
je
jb
mov
sub
ret
pop
add
test
cmc
pop
jl
push
pop
or
jmp
ss
mov
int3
xchg
pop
dec
mov
dec
or
ljmp
push
out
mov
push
mov
jl
arpl
cmpsl
mov
lds
jmp
sbb
jnp
shrb
lret
aas
dec
loope
sbb
pop
adc
lock
outsl
push
stos
pushf
andl
mov
into
sbbb
pusha
std
nop
testb
scas
add
negb
dec
ret
push
mov
hlt
icebp
mov
pusha
fstpt
sbb
outsl
cmpsb
pop
dec
and
call
aas
jl
in
ds
scas
in
push
arpl
or
xchg
test
std
cmpsl
adc
xchg
adc
mov
cltd
nop
mov
adc
call
mov
jno
mov
xchg
cmpsb
fcmovnbe
xor
fs
jns
cmp
test
mov
pushl
push
sub
repz
das
lahf
push
cmp
outsb
or
adc
add
call
cmp
jmp
xor
inc
mov
or
mov
jp
scas
jnp
sahf
sub
mov
push
cld
mov
fnstcw
and
xor
aam
out
inc
int3
adc
push
jmp
cmc
push
rcll
outsb
dec
cld
enter
jl
jnp
pop
in
jo
les
push
sbb
and
fbstp
pushf
add
pop
insb
pushf
std
ret
call
ja
popf
cld
cmp
mov
mov
sbb
stos
and
movsb
xchg
add
cmc
ficoml
mov
adc
add
or
mov
lods
ja
iret
lret
insl
mov
outsb
jmp
inc
cmp
pusha
pushf
test
cld
sbb
loop
jecxz
fstpl
or
sahf
aaa
popa
mov
out
sub
xchg
roll
adc
iret
insb
ret
scas
loop
sarb
and
xchg
jo
jecxz
mov
pop
adc
jbe
cmc
stos
arpl
aad
clc
xchg
xor
aaa
pop
inc
adc
xchg
and
and
std
dec
popa
xchg
pop
lods
mov
sarl
inc
scas
rcrb
jle
xchg
dec
add
sti
push
leave
push
scas
push
push
call
rcll
jbe
mov
fwait
sbb
es
inc
and
stc
jbe
dec
sbb
xchg
mov
fcompl
cmpsb
subb
dec
imul
ffree
movsl
aas
movsb
push
jnp
movsl
fcomps
jns
out
add
cltd
xchg
mov
popf
call
add
pop
daa
out
cmp
mov
or
in
out
shll
int3
or
cmp
inc
xchg
cmp
enter
cmc
repz
ret
push
adc
mov
lea
neg
pushw
dec
mov
dec
sbb
fldln2
xor
xchg
jno
sbb
fwait
mov
cmp
sbb
hlt
pop
or
mov
add
sub
pop
orl
jmp
cmp
in
sar
aaa
xchg
pop
xor
add
out
xchg
daa
mov
int3
adc
bound
movsl
int
je
insb
jge
jb
or
mov
jecxz
mov
xor
lahf
daa
bound
aaa
mov
inc
sbb
lods
xor
and
mov
mov
sbb
shr
mov
iret
xor
mov
mov
pop
out
shrb
jge
outsl
sbb
aad
add
stc
xor
push
out
loop
lods
add
mov
pop
test
add
add
fsubrs
fwait
ja
sub
xchg
add
fldcw
push
sub
xchg
mov
decl
dec
jnp
sbb
js
lods
push
jbe
jo
mov
or
fimull
mov
add
mov
popf
pop
inc
and
jno
leave
sahf
cmpb
ss
lods
mov
xor
adc
es
inc
pop
mov
in
je
jecxz
mov
clc
rcrb
imul
mov
cld
add
jno
pop
mov
pop
mov
hlt
cmp
adc
loop
in
fdivs
push
mov
pop
sarb
sub
and
sbb
mov
or
test
push
popf
mov
and
jne
cmp
mov
mov
and
sbb
push
js,pn
test
dec
repnz
dec
and
addr16
fcmovnu
mov
mov
sub
mov
outsl
aad
stc
and
in
stos
addr16
popa
pop
mov
notb
mov
out
sbb
mov
fmull
jo
enter
lds
add
and
sbb
mov
and
cmp
fadds
push
push
add
sbb
iret
push
popf
je
mov
std
xor
pushf
sti
pop
repnz
push
addr16
data16
fiadds
fistl
mov
int
adc
sbb
mov
sbb
mov
mov
jne
and
mov
xorl
jo
mov
aas
jle
cmc
add
pop
mov
pop
hlt
stc
adc
mov
sbb
cli
cmpsb
xor
dec
cli
fbstp
inc
int
add
add
push
stc
push
sub
xchg
ja
lds
push
lds
xchg
push
mov
js
fucomip
jl
imull
jmp
lret
lods
ja
mov
pop
cmp
lea
out
pop
cmp
pop
imul
addl
cmp
frstor
xor
or
jb
and
push
fldenv
mov
insb
es
sbb
push
push
testl
rorb
mov
in
cmp
mov
cltd
cli
mov
inc
adc
aad
and
or
xor
pop
xor
jnp
sub
into
cli
sbb
adc
ror
in
outsl
adc
inc
ljmp
arpl
push
adc
fidivrs
inc
mov
ret
lcall
pop
adc
dec
cmp
ffreep
jae
cmp
gs
lods
or
imul
iret
popa
sub
inc
jl
lret
test
pusha
ljmp
icebp
insb
push
pop
push
in
mov
ror
out
in
lcall
ds
es
test
ljmp
outsl
xor
pusha
xchg
cmc
add
add
fnsave
mov
lahf
scas
mov
mov
std
add
stos
sbb
lds
je
lea
push
mov
aad
mov
rorl
stos
jecxz
jns
out
mov
sbb
out
inc
fwait
mov
lods
jns
insl
ja
fwait
sbbb
pop
adc
inc
adc
xlat
inc
mov
jge
dec
movsl
cli
lods
mov
int3
dec
into
movsb
aaa
movsl
enter
std
xor
rcll
ja
icebp
int3
xor
jae
test
dec
dec
cmp
les
repnz
jbe
xchg
dec
or
xchg
andl
pop
inc
mov
xor
cmp
fsts
gs
mov
ret
mov
sub
call
or
repnz
sub
movsl
cmp
addr16
inc
ljmp
cmp
add
add
adc
lret
ds
cmp
adc
jns
stos
fcmovne
arpl
dec
imul
push
in
out
fdivrl
mov
nop
cmpsl
mov
and
xchg
and
mov
shr
repz
lea
lea
jmp
stos
sub
jae
push
xchg
add
fildll
push
ffreep
xchg
lcall
mov
gs
jo
sub
pop
mov
mov
rcrb
xchg
lods
insl
inc
mov
pop
bnd
int3
or
in
push
mov
mov
push
faddl
inc
add
mov
add
push
jecxz
pusha
leave
cmpsl
mov
roll
mov
decl
cmp
mov
out
in
cmpsb
iret
repz
cmp
shlb
cmpsb
imul
mov
in
fistl
testb
add
stos
cmp
jle
sub
sub
fyl2xp1
mov
mov
jmp
inc
pop
adcb
dec
adc
fldl2e
lds
inc
repz
mov
loopne
dec
push
adcb
and
repnz
cwtl
mov
xor
int3
call
and
jb
xor
test
adc
lods
bound
loopne
push
cmpsb
mov
push
sub
inc
movsl
inc
ret
ret
inc
add
cmpsb
out
loopne
aam
fcomps
mov
rolb
mov
dec
add
pop
jo
mov
repz
or
hlt
cmp
sbb
inc
or
inc
repz
cmp
and
pop
addl
cmc
add
and
mov
cmp
pushf
push
mov
arpl
test
lcall
push
rorl
mov
cmp
into
cmc
mov
fisttpl
repz
leave
daa
pop
mov
cld
xor
pop
lds
push
sub
mov
in
fidivs
jmp
fimull
aad
dec
mov
scas
pop
imul
jle
icebp
push
aas
mov
push
fcoml
lret
mov
jmp
es
shrb
popa
push
fmuls
cmp
cwtl
or
arpl
jbe
adc
xchg
stos
add
sub
outsb
scas
cwtl
pop
pop
mulb
outsl
and
je
jbe
jl
cld
lret
test
inc
shll
and
push
loopne
and
notl
sahf
enter
push
cmp
addl
jns
push
ret
sbb
pushf
jl
clc
adc
lods
ljmp
dec
iret
aas
jp
pop
inc
jle
jecxz
jbe
push
xor
add
jne
into
push
add
pushf
sub
xchg
mov
sbbl
arpl
adc
dec
es
jl
test
mov
adc
add
add
pop
outsb
fists
pop
lods
rcll
inc
add
sub
mov
mov
call
rclb
and
xor
dec
or
aad
cmpb
dec
popf
or
test
cmp
mov
call
xchg
xor
insl
test
jnp
imull
shll
ljmp
out
mov
loop
fcomps
or
pop
mov
mov
jae
mov
pop
xchg
cmp
test
call
jecxz
push
jns
imul
shll
inc
mov
fcoml
sub
push
jl
sub
movsb
ret
mov
add
sub
jle
or
push
in
test
pop
rcrb
cli
or
sub
mov
sub
dec
int3
mov
js
sbb
sbb
mov
stc
fst
popf
fadds
lods
mov
sbb
inc
out
xor
fs
mov
int3
or
mov
jo
sub
and
inc
leave
cmp
pop
push
mov
and
fdiv
cmp
add
stos
outsl
aas
mov
mov
das
cltd
and
and
lahf
je
and
icebp
pop
jecxz
mov
jne
jb,pn
jl
mov
orl
test
stc
mov
outsl
cmpsb
push
pop
mov
daa
addl
outsb
fnstenv
push
je
push
jnp
decl
adc
flds
cmp
or
pop
pop
mov
rolb
aaa
imul
enter
int3
push
js
leave
and
pushf
imul
and
inc
mov
pop
xor
xor
pop
or
roll
out
mov
add
xor
and
mov
push
daa
xchg
fiadds
adc
mov
mov
pop
ljmp
leave
loop
dec
push
inc
bound
lods
pop
pop
ljmp
rcr
jp
push
pop
add
popf
and
inc
inc
divl
ret
scas
clc
jb
fdivp
int3
notb
pushf
inc
or
push
cmp
or
mov
adc
jg
pop
pop
xchg
loop
pop
scas
sbbl
les
pop
dec
daa
rolb
sahf
mov
out
cmp
xor
pop
dec
pop
pop
mov
ja
pop
cld
xor
xor
sub
nop
mov
push
movsb
fstpl
mov
shll
sub
and
bound
mov
cwtl
and
inc
pop
insl
xor
sub
movsb
push
je
pop
ljmp
fdivs
and
icebp
insl
out
int3
xchg
icebp
jle
add
adc
pop
mulb
xor
jo
shl
push
cs
shrb
cmp
lahf
shrb
xchg
jb
sbb
arpl
shlb
adc
inc
sub
dec
and
sbb
pop
push
cltd
jne
das
test
adcb
jb
adc
ret
cmp
dec
scas
aas
cmpsb
test
mov
fstps
aaa
sarb
xor
mov
and
loope
dec
push
pop
sbb
inc
ljmp
mov
adc
and
dec
or
jno
fstpl
mov
aad
das
aad
cli
mov
and
fildll
mov
scas
ljmp
mov
lahf
and
repz
mov
cs
stc
add
dec
insl
inc
dec
in
pop
push
push
icebp
test
sub
in
mov
mov
jecxz
test
out
fsubs
add
or
mov
test
imul
xor
sub
scas
aaa
test
sub
enter
lods
mov
pop
imul
insb
inc
push
xor
pop
mov
aad
xor
repz
hlt
adc
pop
leave
cmpsl
data16
aam
cmp
lea
sahf
xchg
loopne
xchg
daa
jnp
inc
jg
subl
jle
cmc
inc
sbb
ficoml
out
mov
or
mov
jo
lods
call
adc
cwtl
xor
lock
adc
xchg
xor
rep
stc
or
sbb
mov
test
push
mov
test
and
xchg
push
arpl
push
cmp
dec
push
subw
add
es
add
cmpsb
push
stc
jle
cmp
in
dec
jmp
mov
cmp
sub
cmpl
xor
mov
mov
hlt
fstl
add
aad
push
cmp
push
inc
mov
cltd
add
xor
aad
cmpsl
scas
scas
sub
mov
sub
pop
inc
adc
pop
loop
dec
scas
mov
mov
mov
in
xchg
arpl
lahf
jle
push
mov
loop
aam
or
or
fnsave
sti
mov
cmp
adc
cs
call
mov
cmp
daa
fwait
xchg
sbb
shlb
jbe
jecxz
sub
push
orb
lods
pop
and
lds
xchg
movsb
xor
pop
stos
es
dec
shr
mov
ret
pushf
icebp
je
cmp
jl
or
xor
add
mov
pop
fldl
gs
xchg
xchg
xchg
push
fs
and
sbb
rcrl
scas
mov
dec
out
adc
dec
filds
mov
aam
nop
mov
mov
leave
dec
decl
add
cmpsb
fcomi
add
xchg
add
popa
mov
push
popa
mov
fcmovb
out
stos
push
iret
xor
push
es
and
mov
pop
lahf
fisubs
mov
lcall
xchg
jl
fldenv
fs
inc
inc
enter
xchg
aam
divl
stos
clc
out
cmp
or
insl
das
or
loop
rolb
adc
and
loope
outsl
mov
stos
jb
lahf
lds
outsl
stos
mov
add
adc
out
push
mov
fstps
jns
add
lock
das
nop
out
cwtl
push
jp
cmp
popf
xchg
mov
shlb
test
in
sbb
adc
xchg
lea
lods
lods
mov
adc
xchg
pop
ret
cwtl
inc
jg
pop
addr16
mov
push
in
loope
daa
inc
xchg
sbb
inc
mov
sbb
pusha
jb
mov
or
sti
pop
cmp
fdivrl
sub
in
loopne
inc
in
jne
sub
mov
fcomi
push
es
inc
push
icebp
stc
mov
les
sbb
insl
stos
sti
sbb
add
lret
add
aam
lret
jmp
lods
cmp
fs
mov
or
adc
dec
add
andps
jle
jo
push
test
pop
movsl
push
cmc
leave
adc
test
ss
adc
inc
jo
sub
adc
jnp
push
out
adc
int3
in
mov
xor
cmp
push
adc
call
sub
jb
dec
cltd
cmc
pop
dec
leave
sub
cmp
out
scas
nop
mov
mov
popf
push
std
call
cs
cmc
ds
nop
ss
sbb
popf
loope
mov
jbe
jno
neg
jbe
xor
shlb
subl
or
jecxz
jle
pop
enter
test
sub
out
pop
loopne
jl
xchg
ljmp
mov
mov
int
ss
mov
mov
in
mov
addb
mov
in
pop
cmp
dec
mov
ds
mov
in
xor
dec
xor
ds
cmp
out
out
lods
scas
dec
pop
sarb
and
mov
pop
cltd
out
push
dec
xchg
sbb
sbbl
xor
pushl
nop
sub
add
in
out
push
das
mov
sbb
movsl
inc
cmp
push
lock
xchg
shr
mov
aam
hlt
dec
inc
scas
or
xor
paddw
outsl
or
sub
mov
insb
mov
dec
add
lahf
fwait
insl
ljmp
mov
xchg
xchg
cmp
imul
cwtl
mov
les
shll
push
leave
mulb
inc
cli
jp
shlb
in
dec
inc
inc
xor
scas
xlat
xchg
insl
into
jns
subb
jle
inc
aas
xchg
fcomps
aaa
dec
xchg
leave
fiaddl
outsl
mov
fcmovbe
xlat
jo
mov
push
jns
pop
sbb
push
ret
mov
rcll
cmpl
in
daa
mov
sub
or
enterw
pop
into
fs
adc
add
cmp
adc
mov
mov
push
lcall
test
adc
clc
sbb
adcb
int
pop
outsl
jbe
jp
call
adc
rcll
pop
pop
cmp
cmp
sbb
push
out
sub
adc
sarl
icebp
jnp
cmp
roll
sub
out
xchg
les
call
mov
mov
ret
lcall
inc
rorl
iret
push
push
cmp
and
cmc
push
mov
push
mov
jmp
inc
xor
clc
test
sub
mov
stos
xor
add
sbb
push
mov
sahf
scas
data16
fsubs
mov
jmp
icebp
lock
mov
out
mov
dec
sub
or
adc
xor
sbb
adc
outsb
imul
dec
in
dec
add
push
sbb
pusha
sbb
inc
dec
mov
jb
add
adc
inc
push
jo
mov
gs
jae
push
jle
out
adc
push
cmp
cmp
adc
and
jmp
pop
jbe
pop
pop
rorb
fstps
adc
rol
sbb
test
push
mov
adcl
jnp,pt
insl
xor
dec
daa
or
fmull
add
mov
mov
int
jae
xchg
stos
xchg
sbb
xchg
adc
mov
in
or
xor
add
das
outsb
or
icebp
lock
jns
xor
sbb
hlt
dec
lret
inc
jmp
sub
sbb
push
arpl
xor
cs
inc
outsl
cmp
pusha
sbb
pushf
popa
jp
test
pusha
xor
pop
xchg
jne
xor
pop
xchg
push
mov
loop
pop
mov
xchg
cli
xchg
jns
loope
push
dec
dec
jge
in
xchg
sub
jp
fadd
cltd
pop
cmp
cmpl
dec
aas
iret
enter
mov
mov
cmc
shll
popa
imul
das
in
sbb
fcomps
icebp
jo
cs
in
adc
and
jb
fnstsw
jnp
push
push
stos
and
in
lods
jnp
shll
nop
outsl
sbb
in
mov
inc
hlt
sub
stos
sbb
sbb
iret
fists
sub
fsubr
ss
xlat
adc
bnd
and
int
movsb
lret
push
jae
bound
lahf
ret
xchg
pusha
into
mov
cmp
aaa
mov
les
stc
mov
cld
mov
repz
stos
loope
das
xlat
add
adc
out
add
imulb
bnd
jg
pushf
clc
inc
fidivs
adc
mov
dec
adc
in
and
sbb
les
popf
sbb
cmp
addb
jns
jg
push
je
adc
and
xchg
fwait
jg
push
push
push
jbe
insl
dec
ficomps
lds
js
mov
out
adc
sub
das
fists
ret
add
sbb
ljmp
mov
fs
push
ret
jmp
push
ds
std
add
add
mov
movsb
jle
and
push
push
loope
enter
add
xor
aam
mov
jle
push
mov
out
inc
xor
mov
inc
or
ds
jno
pop
pop
paddw
jp
call
in
out
sub
mov
cmp
adc
ds
jecxz
addb
pop
addr16
inc
ret
mov
inc
and
shlb
mov
std
insb
dec
sti
stos
jp
jge
call
xor
mov
sub
in
shll
push
or
xchg
mov
lods
test
ror
cmp
push
shll
imul
mov
out
mov
and
rclb
mov
dec
int3
fidivl
xor
mov
clc
imul
mov
ja
cmp
aad
test
pop
lret
mov
mov
ss
pop
sbb
inc
mov
rolb
cli
pop
into
test
aas
sub
stc
fbstp
jp
xor
outsl
sub
inc
sbb
sbb
divb
lret
shll
ds
xor
lea
inc
or
scas
imull
sub
push
pop
iret
mov
lods
dec
testl
les
push
xchg
or
es
inc
pop
mov
bound
inc
lods
mov
insb
mov
iret
cmp
jbe
mov
mov
mov
aam
ljmp
adc
inc
xchg
pop
xor
and
jecxz
xor
pop
adc
push
sbb
sub
js
jg
repnz
dec
rol
test
mov
jecxz
and
xor
add
shrl
mov
sbb
lods
fdivs
lods
jo
dec
push
push
pop
xchg
push
mov
insb
xchg
lret
adc
xor
fstps
pop
cmp
enter
rcl
and
inc
sbb
fdivl
ss
fcmovnb
insl
mov
fmulp
mov
ret
cmp
out
popl
mov
lret
addl
mov
or
xor
mov
jns
sbb
icebp
dec
aad
sub
test
int3
cmp
cli
xchg
testl
adc
jb
mov
std
jecxz
xor
and
adc
imull
cmp
and
outsb
mov
sti
loopne
xor
imulb
addl
hlt
add
or
nop
jne
dec
mov
mov
cmp
jge
xchg
push
int3
dec
xchg
aad
jae
mov
mov
sub
mov
addr16
lods
enter
idiv
movsb
jp
aaa
es
push
or
daa
mov
sbb
fiadds
daa
call
nop
pop
ljmp
test
push
adc
xchg
mov
jbe
repz
push
fstpl
notl
imul
cmp
xchg
push
push
add
add
sbb
inc
ss
and
and
mov
jne
repnz
mov
push
dec
mov
inc
mov
fcomip
inc
das
add
not
sbb
repnz
ficoms
dec
mov
pop
push
or
dec
stos
adc
enter
neg
leave
bnd
decb
scas
dec
jl
nop
or
xchg
sahf
mov
je
nop
std
sub
dec
dec
sub
cmp
insb
push
sbb
or
push
or
inc
inc
jnp
daa
aam
lcall
pop
pop
cmp
dec
mov
rclb
int3
or
mov
nop
stc
rclb
int
or
pop
std
aaa
sbb
ljmp
jnp
adc
scas
jecxz
repnz
or
addr16
and
clc
adc
jno
lret
andw
punpcklwd
add
arpl
cmc
iret
hlt
ret
mov
cmp
shlb
mov
xchg
xorl
cld
out
push
int
and
lahf
ja
mov
xlat
ja
fs
repz
insl
stc
neg
pop
lock
outsb
mov
cmp
jno
adc
push
repz
mov
push
jbe
insl
jecxz
push
cmp
rcrb
xchg
xchg
decl
dec
cli
mov
insl
ficoms
loop
pushf
xchg
js
mov
and
adc
test
xchg
xchg
pop
mov
clc
add
mov
imul
lahf
out
cmpsb
cmp
int
sub
pop
cmc
adc
or
push
jg
inc
or
xchg
xor
xchg
pop
jle
cmp
sti
cmp
jp
lea
aaa
add
mov
xor
test
leave
push
xor
or
lods
ret
push
ja
cmpsb
ds
add
aad
scas
mov
push
scas
insl
outsb
hlt
iret
shll
iret
xchg
jno
testb
cs
jge
or
xchg
mov
pop
aad
ficomps
push
mov
sbb
jp
ds
ds
push
fisubrl
std
faddl
xchg
popf
hlt
sub
jne
sti
sub
adc
into
push
xor
out
dec
enter
frstor
dec
mov
mov
cmp
out
add
adc
cli
sub
fwait
dec
mov
or
int3
pop
test
push
in
sub
fwait
push
in
jb
out
push
int
add
out
mov
mov
lods
daa
in
jae
adc
fs
xor
ds
push
cmp
gs
icebp
fwait
lds
fidivl
scas
in
sub
aaa
movb
shlb
push
bound
push
cmp
mov
lea
push
leave
dec
ret
dec
xchg
cs
mov
xor
jb
jge
cmc
jno
out
cmp
arpl
int3
push
cmp
and
xchg
push
es
shrb
add
lea
sti
stos
in
dec
jb
and
sbb
lock
xlat
lods
sbb
sub
lret
out
and
push
cwtl
adc
jmp
inc
popf
adc
push
push
jnp
inc
mov
mov
jmp
jae
xlat
sub
aam
stos
outsl
jno
call
xchg
nop
jl
jl
in
fstpl
ljmp
pop
aas
mov
adc
incb
cmc
add
loop
std
hlt
sbb
addr16
push
scas
and
stos
rol
sti
add
mov
fiadds
mov
xchg
jge
into
es
loopne
dec
add
aas
int3
fldl
je
pop
cmpsl
iret
xchg
dec
mov
nop
sbb
push
fdivs
insb
sub
jp
cmp
mov
cwtl
pop
movsl
loopne
xor
stc
mov
pop
int
dec
jg
clc
aas
pop
sub
in
add
mov
jg
cmc
lock
pop
into
pop
or
stos
jge
sub
ja
mov
dec
cmp
out
addr16
outsl
sub
mov
mov
imull
lahf
dec
mov
pop
les
inc
rorb
mov
push
ret
mov
jb
xor
push
sbb
lds
imul
cs
sahf
mov
pop
sbb
sti
fnstcw
hlt
pop
push
jp
rorb
jnp
rcll
fcoml
mov
test
cmp
aaa
rorb
outsl
lea
adc
aad
xchg
xchg
inc
mov
aad
shrl
enter
dec
and
or
lcall
popf
sub
insl
into
fsubrs
int3
shll
lcall
enter
mov
dec
cmpsb
out
adc
inc
jmp
aas
add
pop
int3
and
js
xchg
xor
repz
les
sbb
inc
ds
outsb
test
jge
out
sub
andb
xlat
jg
xor
sbb
xlat
mov
jl
scas
pop
xor
sub
push
stos
fucom
sub
popa
xchg
sbb
fstpt
rclb
inc
fistpll
movq
xor
xchg
scas
int
mov
out
add
xor
mov
fs
mov
mov
lds
shr
inc
fiaddl
fwait
loope
outsl
outsl
dec
pop
out
or
andl
mov
in
repz
cmp
cs
sbb
cli
mov
aas
cmp
cmp
ret
mov
add
sbb
sub
fmuls
leave
aaa
xchg
inc
bound
aas
movsl
mov
lahf
data16
push
mov
xchg
movsb
jo
jp
call
sub
lcall
rcrl
bnd
stc
insb
push
imul
cmc
jae
lods
inc
daa
inc
js
or
mov
mov
mov
mov
sub
cmp
sub
das
shl
dec
mov
add
cmp
call
xchg
adc
dec
cld
sbb
add
int
mov
and
stos
aad
inc
das
cwtl
cmp
cli
inc
repz
xor
xchg
pop
test
xchg
and
jle
lea
sarl
push
divl
inc
or
cld
mov
cmpb
stc
roll
leave
test
or
roll
lahf
push
dec
or
sbb
and
rorl
sbb
hlt
jno
push
fimuls
inc
jg
and
pop
cmpl
lea
getsec
push
xchg
aam
fildl
add
mov
push
movsl
out
jmp
bound
pminub
xor
dec
sub
push
fnstenv
xchg
adc
fsts
subb
add
enter
and
pushf
xchg
pop
js
cmc
mov
cmpl
mov
test
inc
icebp
add
movsb
push
in
mul
out
sub
test
mov
jge
jg
adc
and
pop
rclb
cmp
ja
sahf
mov
lds
push
aaa
sub
bound
fcomps
sbb
mov
and
sbb
jmp
sbb
mov
fisttpll
inc
cwtl
sbbb
fstps
sub
xor
cmp
mov
xchg
shl
push
scas
cld
iret
fnstsw
out
xor
std
and
adc
push
jbe
out
push
out
jp
xchg
push
mov
sub
dec
loope
sahf
js
cmp
jle
or
dec
mov
jns
cmp
ficoml
sbb
inc
lret
test
fidivs
lahf
push
sbb
je
shll
lock
pushf
and
push
lea
xlat
adc
shlb
add
sub
cmc
mov
aaa
lods
pop
mov
mov
add
dec
fidivrs
lea
repnz
and
aam
inc
lds
dec
data16
fisubrs
faddl
xchg
es
sbb
dec
and
push
subl
mov
daa
fisubrs
jecxz
push
pop
mov
int
movb
aad
push
push
test
insl
outsb
cwtl
pop
fnsave
jnp
jae
or
inc
fsts
jg
lret
mov
adcb
lret
addr16
add
call
addb
lock
sbb
sahf
jg
hlt
mov
rcr
outsb
bound
and
dec
aas
push
adc
dec
addr16
cmp
jge
and
pop
or
sbb
inc
std
ret
dec
movb
mov
sub
ret
cmp
push
fcomps
or
mov
pusha
into
aam
mov
cwtl
push
jecxz
and
in
cmp
shlb
pop
pop
shll
fsubrp
test
imul
fdiv
or
push
cs
ljmp
mov
sub
shrb
in
mov
bound
movsb
inc
pop
push
pushf
test
add
dec
int
cld
and
leave
scas
mov
cmp
pushf
lods
js
add
dec
sahf
daa
dec
pop
push
in
mov
sub
sub
dec
fsubl
and
or
insb
sarl
js
sbb
ret
popf
cmp
mov
imul
outsb
sub
call
mov
dec
out
scas
mov
or
pop
and
repnz
jmp
movsb
xor
add
xor
dec
xchg
adc
jae
pop
pushf
sub
mov
or
xor
pop
pop
aaa
adc
add
test
push
ljmp
mov
sbb
es
mov
push
sub
push
sub
jae
out
call
xchg
xchg
add
fs
mov
clc
std
aaa
inc
mov
loope
cmp
test
dec
cwtl
imul
lcall
sbb
or
stc
ret
adc
dec
test
lods
bound
cmp
cmp
push
lcall
insl
xlat
add
adc
pop
lods
andb
or
and
lea
out
out
push
test
lret
mov
aas
scas
xchg
inc
loopne
test
cltd
or
add
imul
lcall
fsts
mov
push
ret
lock
sub
mov
popa
add
xor
sub
scas
arpl
inc
out
jbe
mov
jo
enter
mov
shll
je
push
jecxz
in
idivl
cwtl
cwtl
out
push
inc
inc
or
xchg
es
xor
scas
out
divps
cltd
inc
aad
dec
in
push
rep
jb
stos
rolb
mov
in
hlt
jns
mov
inc
push
xor
mov
xchg
xchg
mov
fdivl
xchg
stos
and
cmp
sbb
lret
pushf
add
sbb
mov
inc
xchg
xor
aam
mov
jbe
cmp
push
insb
shlb
push
dec
clc
pushf
sub
cmpb
adc
mov
mov
add
pop
pop
es
sbb
andb
push
push
add
jb
cmp
ret
push
pushf
jnp
int3
push
loopne
cmp
leave
enter
popa
lds
dec
sub
dec
mov
loop
loopne
cmp
pop
rol
fistps
test
mov
inc
rcrb
xchg
into
ret
sbb
mov
pop
mov
mov
cmpsl
int3
mov
xor
xchg
sbb
stos
adc
in
loop
push
xchg
mov
adc
bound
xor
std
push
and
fiadds
aad
shr
add
insb
pop
pop
test
gs
repz
ja
sti
bound
movsb
jnp
fwait
lea
xchg
pop
mov
push
pop
repz
mov
addr16
mov
shl
push
mov
or
in
pop
sub
dec
ja
pop
test
push
mov
cmp
js
mov
xchg
mov
sbb
cmpb
sbb
or
adc
or
adc
push
fs
test
fptan
loopne
add
sub
mov
and
add
jno
pop
nop
mov
divl
add
mov
cmp
out
xor
sbb
jecxz
cwtl
push
dec
jae
mov
push
sub
iret
fwait
shr
bnd
rcll
xor
mov
push
mov
cmp
jecxz
icebp
cs
test
xchg
std
lock
sbb
fisttpll
sbb
shll
test
xlat
rcr
lods
lea
fdiv
into
cmp
push
stos
push
jae
adc
push
mov
scas
jo
inc
pop
and
cs
mov
cmp
fldenv
lods
mov
push
adc
add
repnz
lods
aad
test
fdivl
mov
mov
mov
lds
cmp
add
in
in
jmp
shr
xchg
add
sbb
push
js
push
int3
jecxz
pushf
je
or
dec
push
pusha
add
out
mov
or
pop
test
push
cmp
and
pop
mov
add
and
push
xchg
pop
sub
mov
xor
mov
jp
in
mov
jae
fsubrl
sub
pop
inc
in
pop
cmp
cmp
shll
jle
xchg
leave
bound
xchg
or
inc
mov
lcall
mov
hlt
jg
lcall
inc
cs
jns
ljmp
mov
out
sti
or
dec
inc
aas
jbe
push
fisubs
xor
repnz
sub
cmp
mov
push
pop
into
add
lahf
adc
shrl
sbb
and
sub
inc
sarb
xchg
add
test
addr16
call
adc
sbb
ffree
mul
mov
pop
insb
in
stc
xchg
std
xchg
jge
sbb
xchg
popa
stos
jge
or
ja
jbe
popa
stos
std
daa
xor
rorl
test
out
nop
shld
adc
xor
aas
dec
push
jge
pop
insb
or
xor
mov
fsubl
stos
or
testl
inc
icebp
sbb
adc
testb
xchg
inc
inc
sbb
inc
sub
cmp
cmp
add
mov
js
cmpsb
and
adc
dec
ffree
push
or
mov
popf
ja
jp
inc
mov
or
fisubrl
inc
inc
mov
dec
xchg
mov
xchg
divl
sbb
xchg
fildl
cmpsb
inc
inc
fcmovnb
gs
mov
setp
cltd
sub
mov
sub
cltd
inc
xor
sar
lds
outsl
jl
dec
dec
push
xchg
pop
lret
xchg
pop
cmp
push
rcl
and
xchg
or
push
iret
nop
jns
sbb
sbb
cmp
fsts
fmulp
jae
inc
imul
cmp
inc
cmp
icebp
xor
shlb
xchg
insl
pop
xchg
jnp
push
ror
pop
mov
int
fnstenv
push
cmp
jnp
add
fnstenv
dec
inc
jge
shrl
pop
adc
ret
xchg
stc
clc
loopne
jae
in
mov
push
mov
out
xor
sub
push
push
xor
in
add
repz
xchg
scas
or
push
mov
ja
inc
mov
cmp
cltd
xchg
in
lret
sub
fwait
push
lea
idivl
int3
mov
loope
mov
mov
xchg
jmp
out
push
dec
movntq
out
mov
inc
and
adc
int
pop
je
test
pushf
outsl
fldl
jg
pop
mov
jecxz
incb
test
leave
int
adc
xor
jo
push
je
adc
mov
daa
and
mov
aaa
aas
lods
xchg
pop
popf
popf
inc
mov
cmp
jb
pop
outsl
out
scas
mov
pop
sbb
loopne
push
movsl
mov
in
or
xchg
mov
in
bound
out
push
or
ljmp
or
clc
daa
cmp
mov
pop
out
test
scas
jae
mov
decl
xchg
cmp
pop
push
shrl
or
sub
into
sarl
les
int
aad
popf
mov
int
mov
push
add
jnp
hlt
dec
fldt
loopne
aaa
js
inc
xlat
jmp
xorl
cli
test
jne
lahf
imul
ret
xorb
test
mov
and
stos
fimuls
cli
arpl
jb
data16
jae
int3
jle
movsl
ret
and
xor
add
mov
call
movsl
cmp
mov
inc
test
xor
pop
pop
rorb
xchg
mov
imul
aam
imul
in
cltd
push
mov
jo
out
sbb
or
loop
fnstenv
addb
adc
add
adc
and
aam
sbb
leave
jmp
push
jnp
jne
aaa
adc
mov
push
vcvtdq2ps
mov
aaa
xchg
fbstp
out
test
outsb
fsubs
pushf
push
les
shr
xor
je
data16
cli
into
jne
adc
inc
ja
or
or
mov
jmp
shlb
inc
test
rcl
mov
xor
and
xchg
out
mov
cli
sub
xlat
rol
push
push
shlb
sub
loopne
pop
mov
addb
in
pop
push
xor
sbb
or
mov
xchg
js
xchg
add
and
dec
xchg
add
mov
decb
icebp
loop
icebp
lret
mov
push
mov
adc
mov
call
das
fnstcw
or
pop
jecxz
add
dec
cmp
loopne
xchg
or
push
cmp
repnz
cmc
dec
mov
xorb
push
cmpsb
mov
adc
xchg
jb
xchg
ljmp
ret
ret
mov
ret
outsl
fcmovnu
inc
xor
inc
fld
xchg
data16
call
or
hlt
std
sub
push
popa
dec
je
lahf
lret
popa
addr16
and
mov
sahf
stc
lods
mov
out
xor
repz
cltd
jns
fxch
cmp
or
icebp
and
inc
mov
xor
daa
int
jb
insl
pop
cltd
cli
jae
adc
ja
pop
pop
jb
scas
arpl
sbb
fmuls
loop
hlt
lcall
add
popf
pop
sbb
xor
jmp
lahf
pop
sub
idivl
dec
cltd
jno
movsl
pop
xchg
mov
dec
mov
loopne
sub
idivl
pop
outsb
lret
or
ljmp
add
inc
insl
mov
pop
dec
js
mov
adc
repnz
add
ror
sub
mov
insb
sbb
and
aas
xor
dec
xor
jmp
rsm
sbb
loop
dec
mov
mov
aas
jno
pushf
jb
lock
aas
fsubrl
shll
sub
add
scas
outsb
dec
dec
dec
or
js
call
rorl
sub
mov
sbb
jnp
push
lods
pop
and
stos
push
jo
mov
out
dec
ret
rcrl
call
stos
dec
testb
rolb
test
ror
sub
int3
je
pop
mov
xchg
test
mov
add
push
adc
pop
lock
enter
enter
cmp
popa
fnsave
rcl
push
repnz
sub
mov
jo
data16
scas
js
es
pop
std
dec
mov
push
call
imul
dec
push
outsb
jns
in
std
jb
pusha
push
movsl
sbb
mov
mov
inc
or
lea
out
fcomps
iret
dec
adc
mov
or
popf
or
lcall
jmp
std
add
xchg
mov
push
pusha
subb
mov
mov
repz
cmp
xchg
push
in
sbbl
adc
push
lock
into
and
xor
std
shl
lret
lret
rorb
fstpt
out
and
frstor
mov
pusha
adc
out
mov
pop
shl
xchg
adc
gs
mov
imul
inc
dec
mov
imul
jl
or
push
xor
mov
add
inc
adc
pop
je
das
xlat
jge
in
loope
mov
dec
cwtl
xchg
test
ret
add
call
mov
pop
or
or
cmc
xor
jl
jmp
push
adc
gs
test
push
les
and
push
push
xchg
testb
cmp
sub
cmp
mov
dec
addb
stos
pushf
and
xchg
mov
in
and
shll
cmp
and
fs
or
daa
icebp
pavgw
in
add
cli
pop
mov
fidivl
ja
push
jl
cmp
str
mov
mov
popa
dec
out
nop
push
iret
mov
cmpb
inc
ror
cmp
dec
gs
loopne
fwait
hlt
sub
inc
imul
adc
pushf
or
and
jle
inc
imul
and
repnz
mov
cmpsb
pop
and
repz
ja
out
mov
dec
lahf
lret
push
jno
jbe
xchg
push
cltd
sbb
lods
bound
ja
fnsave
loope
dec
movsl
mov
jbe
xchg
out
outsb
aas
jb
adc
ja
sbbl
inc
insb
push
lods
mov
test
xor
inc
push
jae
pop
testb
dec
push
fucomip
lret
or
or
push
xor
cmp
sub
pop
add
and
sbb
jg
arpl
xor
add
repz
fidivrl
lods
in
cmp
mov
daa
push
lods
mov
repz
mov
aaa
iret
push
pop
push
cltd
jne
popa
or
insl
pusha
ljmp
xchg
xor
aad
jmp
stc
inc
cltd
mov
jo
enter
dec
and
sub
pop
cmc
xor
outsb
fldl
cmp
scas
sbb
stc
lret
fadds
out
sub
out
xchg
jg
fs
mov
jmp
and
or
mov
shrl
bnd
outsl
rorb
aam
mov
jg
stc
lret
out
imul
xchg
mov
stc
lods
xchg
and
lahf
cmp
cwtl
jbe
fdivrl
repz
dec
mov
xchg
push
jle
adc
xchg
dec
mov
adc
ret
cmp
add
lods
sbb
add
xchg
std
rcrl
clts
fimuls
add
das
cwtl
out
into
movq
std
mov
enter
xor
jge
dec
lds
js
pop
inc
std
in
jle
inc
pop
shl
mov
and
fldcw
cld
js
mov
scas
jne
pop
pop
or
or
add
push
divl
xchg
out
cmpsl
test
mov
stos
test
xchg
mov
pop
jns
pop
mov
addr16
es
insb
mov
shlb
shl
mov
or
negl
orl
ljmp
ficomps
sbb
shlb
les
lahf
inc
aam
sub
and
repz
mov
dec
inc
in
mov
adc
jp
mov
repz
sub
sub
push
push
movsl
addr16
out
sbb
aam
fisubrl
aaa
or
sbb
push
js
int3
cld
mov
lret
push
andl
add
imul
mov
fs
mov
pop
lods
xchg
pushf
jmp
inc
and
jl
push
inc
pop
stos
adc
jne
shlb
repz
xchg
pusha
pop
inc
loopne
lret
sbb
imul
sub
xor
mov
push
push
test
cwtl
mov
outsl
jmp
sbb
imull
pop
insb
mov
pop
pop
inc
push
push
inc
fsubrp
je
loopne
bound
mov
dec
in
push
fnstcw
inc
test
jmp
or
jp
cmp
test
mov
xor
sbb
fldcw
and
push
loopne
jmp
adc
int3
sahf
rcll
outsb
push
test
jns
jbe
les
in
and
pop
in
cmp
lcall
lahf
mov
mov
mov
scas
adc
xor
lds
push
push
add
out
lret
mov
pop
pop
sbb
mov
lods
fcom
mov
aas
push
dec
mov
loope
xor
in
loop
iret
adc
add
mov
xchg
xchg
in
icebp
mov
pushf
leave
arpl
cmpl
sbb
ret
mov
aas
inc
fs
sahf
daa
cld
mov
dec
push
mov
mov
and
outsl
or
std
lods
or
cli
sub
or
push
sub
ja
test
lods
sub
pop
sub
xorb
pop
repnz
mov
lcall
push
push
sbb
insl
out
cmovl
mov
cmp
xchg
adc
push
pop
into
inc
jo
fildll
sbb
xchg
lret
cmp
adc
mov
mov
mov
shlb
pop
ljmp
mov
dec
int
fistpll
lods
push
jae
loop
mov
sbb
fstl
jge
ja
mov
mov
repz
and
pop
xchg
or
push
dec
aam
lods
out
fimuls
loop
add
jge
jno
dec
divl
nop
mov
gs
sbb
xor
xchg
repnz
sub
or
repz
adc
cmpsl
xrelease
or
add
jmp
bound
xchg
cmpsb
jp
stos
pop
or
scas
sub
dec
ds
mov
mov
int3
or
test
mov
mov
movsl
imul
push
jmp
lret
push
pop
pop
jl
dec
cmp
dec
outsb
push
lock
int
dec
inc
sub
adc
cmp
mov
divb
mov
out
clc
shll
mov
dec
adc
xor
or
dec
sub
push
pushf
pop
mov
cli
xchg
jecxz
dec
repnz
xor
dec
jle
cmp
mov
lea
push
rolb
mov
cmp
mov
xchg
adc
pop
stos
cmp
std
lret
loope
jns
sub
cmp
lods
rcrb
or
mov
loopne
gs
fcoms
push
or
or
clc
xor
mov
mov
mov
lret
sbb
out
cltd
sbb
xchg
mov
and
repnz
adc
sbbb
imul
leave
fstl
insl
movsl
out
dec
cwtl
shl
dec
into
and
fists
mov
dec
dec
nop
pop
pop
pop
fnstenv
js
into
out
fstpl
notl
jp
sarl
out
jecxz
js
leave
adc
add
mov
mov
push
pop
add
and
iret
jbe
lcall
push
call
jns
adc
push
pop
in
fistpl
cltd
sbb
xchg
les
in
jno
mov
hlt
mov
cmp
xchg
clc
movsl
jnp
cmp
mov
scas
das
test
xchg
jle
xchg
fldl
imul
scas
and
sbb
push
daa
lods
inc
dec
mov
pop
add
shl
mov
insb
xchg
dec
ja
mov
pop
push
xorb
jns
aam
mov
scas
dec
into
cmp
pop
cmp
aad
push
sbb
arpl
mov
jle
mov
push
lds
add
lahf
mov
inc
inc
mov
mov
rclb
jl
push
insl
pop
adc
aaa
mov
in
add
lret
mov
adc
add
adc
xchg
sub
push
and
pushf
jne
test
loop,pn
test
xchg
dec
fldl
cmpsl
inc
add
ja
ret
dec
rcrl
sbb
mov
into
or
rorb
sub
jge
inc
into
pop
mov
adc
pop
scas
cmp
iret
leave
sbb
add
push
mov
adc
sahf
ret
decl
popa
cwtl
arpl
pop
inc
stos
jne
push
xor
inc
inc
insl
fwait
push
repz
pop
inc
pusha
mov
mov
popf
xor
pushf
fwait
cmp
jge
dec
pop
lds
pop
cmp
mov
jno
and
lcall
dec
das
jg
jg
mov
loope
in
and
mov
lcall
xchg
shlb
rcll
scas
mov
cmc
push
les
lret
jns
xor
jecxz
xor
jo
or
cmpb
sub
push
cs
sub
sbb
xlat
dec
fcmovnu
cli
sub
dec
imul
sbbl
repz
lret
jp
push
bound
or
push
arpl
cmpsb
nop
je
jo,pt
jne
cmp
into
sbb
dec
mov
lcall
xorb
jno
adc
and
xlat
out
jmp
jge
mov
push
aas
mov
sub
push
sub
andb
mov
loope
adc
out
and
aaa
sub
out
adc
pop
add
xchg
in
sbb
cmp
std
lahf
in
aas
mov
pop
xor
sbb
mov
push
xor
cmpsb
je
adc
je
jmp
hlt
push
xchg
fsubrs
sbb
xor
dec
dec
scas
add
sbb
rcl
xchg
lahf
xchg
pop
xor
sahf
or
and
sti
xchg
mov
jg
int
and
stos
out
scas
popa
fisubrs
std
pop
inc
into
or
cld
test
movsl
push
sub
push
leave
pop
inc
xor
ret
cmc
test
mov
dec
xor
iret
enter
movsb
dec
xchg
xor
sbb
imul
sti
add
cmpsb
cmp
jae
cmc
sbbb
inc
sub
add
push
pop
adc
pop
hlt
fstpt
add
mov
mov
mov
sub
cli
mov
int
outsl
jge
orb
or
fstpl
mov
lcall
in
mov
mov
negl
mov
push
mov
xchg
sub
jae
mov
das
xor
pop
in
les
jp
fcmovbe
add
or
and
fisttpll
xor
dec
adc
mov
jb
out
inc
cmp
push
xchg
sbb
cmpl
adc
xor
movsl
dec
pop
pop
int3
call
scas
sbb
repz
fisttpl
and
add
adc
inc
fcmovb
or
cs
inc
dec
pop
imul
mov
shl
inc
scas
dec
outsb
sti
inc
loopne
push
sbb
rcl
push
and
pusha
jno
jl
cmp
in
and
rep
addl
xchg
mov
das
jno
sbb
scas
pop
mov
nop
add
dec
jno
jae
xor
test
pmuludq
dec
inc
icebp
dec
lcall
mov
cs
cmp
mov
cmc
stos
xchg
xor
aas
daa
sub
push
repnz
jno
jp
and
jmp
pop
aas
mov
xor
jns
lret
adc
xor
imul
bound
xchg
cld
jp
fs
popl
xchg
sub
pop
aas
jmp
int
xor
les
xchg
mov
imul
cmp
pop
jge
or
inc
adc
cld
pop
fmulp
cmp
mov
add
movsb
pop
in
push
pop
fldenv
jge
in
sub
push
sub
fyl2x
sbb
push
xor
and
jp
fisttps
xor
leave
inc
arpl
int
in
loop
mov
or
std
adc
out
cmpsb
pop
xor
adc
ljmpw
stos
cmpsb
lret
popf
jno
push
es
push
push
dec
mov
fldcw
insl
std
movsb
xor
and
xchg
adc
inc
gs
mov
rcrb
icebp
movsb
inc
sub
pop
subl
xor
int
mov
loopne
pop
sub
loop
inc
add
dec
ret
fcos
mov
dec
push
add
mov
insb
and
jb
test
and
out
xor
mov
enterw
inc
js
lods
movsb
add
add
and
xchg
push
sbb
fcmovb
aas
jno
mov
and
push
mov
dec
cli
push
aaa
cmp
and
in
sub
iret
mov
pop
fstps
dec
inc
mov
cmp
jb
pop
jbe
fstp
js
in
sub
sar
dec
ds
arpl
or
ljmp
xor
jne
mov
jae
cmpsb
xchg
push
push
imul
test
pusha
mov
icebp
lret
or
dec
push
sub
adc
or
push
jmp
lret
xchg
mov
push
out
lret
cmpsb
out
cli
pop
pop
adc
loop
aam
push
movd
jle
sahf
lahf
inc
sti
outsb
sar
add
popf
mov
sahf
jne
xchg
clc
jge
out
jne
in
test
loope
bnd
ja
leave
inc
repnz
mov
hlt
shlb
sub
mov
push
and
mov
xchg
pop
add
mov
das
loopne
push
out
push
jnp
mov
and
testl
les
addr16
into
xor
mov
popa
sbb
mulb
sub
xchg
arpl
ds
or
xlat
call
adc
in
jmp
cld
gs
sub
xlat
sub
sbb
popa
stc
ljmp
and
cmp
mov
daa
lcall
or
call
add
sbb
pop
dec
psubw
adc
add
or
inc
or
pop
inc
test
pop
mov
aad
ss
pop
jnp
cmp
in
sbb
dec
ficoml
ds
fldl
cwtl
push
icebp
jmp
cmp
insb
daa
add
ss
js
jno
sub
pop
lret
jnp
incl
cs
test
ljmp
jg
call
or
arpl
dec
push
mov
pop
cltd
xchg
mov
dec
jbe
stc
cltd
cmc
aad
scas
je
push
subb
mov
xchg
pop
pop
push
imul
sbb
or
pminub
lods
inc
mov
cmp
movsl
inc
add
xchg
rol
jmp
int3
lahf
in
and
xchg
test
sub
sub
movsl
adc
xchg
pop
sahf
pop
seto
and
sbb
inc
shl
jns
jp
lds
mov
into
lret
test
pop
into
pop
jp
mov
dec
adc
jecxz
or
loope
repnz
xchg
aam
sub
push
shlb
imul
mov
ja
ljmp
stos
adc
dec
mov
addr16
dec
mov
cltd
push
daa
shll
sbb
cmpsl
pop
xor
xlat
js
incl
jbe
xchg
stos
aaa
adc
test
icebp
jge
dec
aam
adc
leave
lahf
ds
into
fisubs
lahf
clc
pusha
push
mov
subl
in
les
mov
fcomp
clc
cli
sbb
pop
in
xor
mov
packssdw
xchg
sbb
imul
fldcw
xor
cwtl
push
jns
or
lock
movsb
es
pop
inc
cmp
mov
lea
push
mov
push
pop
jmp
mov
loop
pop
es
jo
xchg
xchg
cmp
jecxz
sbb
dec
int
mov
popf
cmpb
mov
test
sbb
loopne
mov
or
and
pop
mov
pop
rcr
xor
lahf
out
mov
jnp
push
icebp
mov
jns
fwait
cmp
pop
aam
sbb
cmp
pop
cmp
push
cmp
dec
inc
lds
sub
mov
sbb
cs
or
stos
xlat
mov
inc
jno
fadds
dec
dec
pushf
xor
in
dec
ret
and
mov
inc
jns
hlt
wbinvd
xchg
jmp
dec
dec
and
lret
sbb
jns
dec
test
or
jne
fsubs
ja
mov
cmpb
adc
push
xchg
xchg
inc
mov
pop
popa
sbb
sbb
cmp
jb
movsl
mov
xlat
push
and
scas
outsb
js
stos
sbb
into
pop
cmp
push
test
loopne
outsl
mov
push
rcrl
insb
icebp
add
xor
push
add
add
cld
sub
cli
mov
leave
scas
ds
inc
je
dec
mov
push
iret
cmc
into
jp
sbb
adc
dec
test
mov
popf
testb
sub
stos
aas
xchg
jbe
and
lahf
and
lods
pop
sti
cltd
and
aas
mov
jne
push
cmpl
push
adcb
jge
lahf
xor
repnz
es
cli
push
js
xor
jmp
sbb
inc
ffreep
shlb
and
jp
mov
scas
jne
popa
or
hlt
xor
rcll
fldl
or
sarb
jle
cltd
sub
leave
movsb
popa
jbe
jecxz
push
xor
imul
dec
cltd
push
sbb
jmp
xchg
push
bswap
xlat
fwait
sbb
adc
mov
sahf
pop
jno
push
jo
jnp
jmp
add
xchg
pop
jbe
cmpsl
pop
lahf
jp
pop
jo
pop
sbb
daa
push
jmp
roll
stos
jnp
push
imul
rorb
je
loopne
rcrb
leave
fs
push
pop
cmpsb
and
out
dec
dec
and
mov
arpl
xchg
adc
test
aas
mov
mov
cmpsl
cmp
call
daa
pop
imul
inc
loope
mov
fisubl
data16
sub
pop
hlt
es
mov
insb
loop
mov
rclb
sbb
cli
mov
out
adc
mov
outsb
fadd
xchg
lea
lock
divb
imul
mov
shrb
or
out
push
lock
es
mov
fs
add
xchg
jmp
xlat
int
mov
inc
push
adc
mov
ja
jnp
lds
or
add
pushf
adc
dec
ret
jnp
insb
push
sti
ds
sub
cli
bound
sub
xlat
je
sub
sarb
sbb
mov
test
push
or
mull
lods
pop
add
xlat
dec
xchg
mov
nop
mov
sbbl
pop
mov
xor
stos
cld
jecxz
xchg
jb
pushf
div
lods
rclb
lret
xchg
xor
or
lods
pop
mov
xchg
sti
adc
mov
leave
shrb
cmp
imul
lahf
loope
push
negl
std
std
in
lret
and
mov
jl
adc
arpl
mov
lret
dec
lcall
sub
fwait
fwait
mov
dec
scas
in
cs
mov
jno
popf
or
mov
stos
int3
xchg
fwait
movsl
cli
mov
mov
sub
enter
mov
sub
mov
movsl
test
in
pop
xlat
popf
mov
pop
aad
xor
sbb
cmpsl
mov
xor
sbb
dec
cmp
push
mov
enter
mov
dec
int3
je
mov
test
mov
cmp
call
sub
push
jnp
jmp
inc
xor
nop
ret
add
inc
push
icebp
and
xor
mov
lods
cmp
dec
das
mov
and
ljmp
inc
pop
xchg
andb
mov
and
mov
mov
push
int3
aaa
and
ljmp
mov
pop
insb
pusha
sbb
mov
mov
outsl
repnz
mov
enter
addr16
pop
imul
jns
fsts
inc
and
aaa
inc
repnz
jmp
xchg
sbb
inc
fildl
xor
cli
xchg
xor
faddl
and
arpl
outsb
mov
stos
jecxz
xchg
push
scas
ds
data16
dec
dec
sbb
insl
fsubl
xchg
in
adc
push
cmp
in
cmp
test
test
pop
push
mov
xor
mov
cltd
or
cmc
lods
xlat
and
cli
das
mov
adc
loop
test
jmp
mov
movsb
shl
in
mov
loope
pop
dec
int
js
test
or
into
mov
fdivs
and
xor
push
loope
jg
stos
jp
popa
insl
push
rcll
adc
call
sbb
call
sbb
sub
scas
sti
aam
push
lcall
pop
std
adcl
sub
jno
jmp
cmp
lock
aaa
out
cmp
stc
test
pop
les
mov
cltd
lcall
loope
push
outsb
push
xchg
inc
ds
inc
jnp
jno
xchg
or
ret
test
mov
pop
lods
into
cmp
pop
pop
es
scas
or
pop
arpl
rcl
fmul
sarl
fidivs
mov
jge
cmp
sub
pushf
add
adc
mov
xchg
jmp
clc
xchg
or
sarl
dec
call
add
push
sub
lahf
ss
xchg
cltd
mov
in
mov
pop
aas
cmp
inc
hlt
xchg
xchg
fsubs
icebp
fdivl
clc
or
pushf
decb
inc
xorb
mov
int3
fidivrs
inc
sub
cs
ret
sbb
dec
mov
or
testl
outsb
add
cmp
dec
push
and
lahf
js
inc
stos
mov
movsl
xlat
sbb
movsb
bound
mov
or
leave
repz
test
or
push
mov
xor
jl
lock
cmp
repnz
cli
xor
dec
aas
add
sbb
pop
andb
in
out
dec
xchg
sub
push
push
cmp
mov
gs
push
cli
repz
sbb
cmp
mov
xor
in
mov
mov
mov
inc
push
int
push
loope
sub
or
mov
stos
jge
jb
dec
out
pop
xchg
stc
push
jbe
push
fldenv
daa
xchg
fwait
pop
push
inc
in
ret
mov
push
scas
pop
dec
mov
or
add
xchg
sub
ljmp
mov
sub
cltd
das
sub
mov
or
rolb
add
sub
scas
lods
pop
cs
add
xchg
hlt
push
xor
out
cmp
leave
fldl
fmuls
lock
or
pop
pxor
lock
stos
mov
mov
insl
inc
ljmp
test
mov
jne
mov
pusha
out
push
call
sub
push
lret
daa
sbb
lahf
push
or
stos
mov
or
xchg
xor
xor
pop
pop
fcoms
push
push
sbb
nop
push
and
lods
aaa
cmpsb
jmp
pop
pop
stos
add
sub
and
add
ljmp
jae
or
clc
je
fisttpll
fs
sub
cli
enter
pop
shlb
xchg
mov
push
aad
pushf
test
pop
adc
and
xor
lcall
inc
lahf
push
dec
cmp
push
push
pop
xor
dec
mov
inc
aas
xor
mov
add
popa
nop
popa
dec
jp
bound
insl
inc
mov
iret
in
pop
ss
add
sub
test
cltd
pop
xor
xchg
cmc
loope
ror
daa
add
int
test
cmp
sub
pop
cmp
popa
xor
mov
pop
dec
adc
pop
and
jbe
fcomp
pop
arpl
imul
clc
pop
jmp
outsb
xchg
pusha
pop
xchg
dec
cmp
cmp
mov
mov
pop
pop
fcmovne
push
cmp
jp
lahf
repz
dec
xor
or
adc
push
out
dec
xor
xchg
test
outsl
add
push
jae
cmc
stos
inc
or
loopne
push
pop
insb
xor
aam
mov
mov
sar
mov
stc
and
mov
fistpl
lahf
lods
mov
sbb
add
out
movsl
in
mov
dec
data16
in
je
jmp
rorb
lock
or
popf
sub
js
jp
pop
cmp
cmpsb
fs
inc
outsl
inc
push
xchg
out
xchg
pop
push
popf
scas
lds
je
jmp
bound
das
push
ds
cmp
jae
shl
mov
test
dec
add
repnz
and
loopne
add
scas
lods
push
ja
cwtl
mov
cmp
int3
addr16
clc
mov
add
xchg
call
std
add
push
mov
and
nop
and
aam
pop
or
xchg
dec
sbb
xchg
push
adc
in
push
or
sbb
outsl
sbb
nop
pop
xchg
ror
mov
sbb
bound
jns
jp
ljmp
insb
inc
int
stos
xor
loop
into
dec
and
mov
fbld
scas
sarb
lds
dec
and
xor
dec
push
pusha
or
pop
push
inc
adc
sub
rep
out
xor
sub
add
out
js
push
lahf
xor
sarl
mov
lock
or
jb
mov
push
lds
ror
lcall
repz
nop
add
sub
add
js
cmp
xchg
jns
xchg
pusha
call
std
pop
push
mov
push
xlat
inc
enter
stos
adc
jp
jno
adc
jbe
mov
push
out
cmpsb
sbb
lret
aaa
aam
mov
cmp
inc
pop
sub
inc
jb
mov
mov
jnp
cmp
lods
lea
pop
pop
mov
xchg
mov
shll
jp
cmp
frstor
fwait
inc
mov
push
cwtl
xlat
xchg
xor
fisubrl
pop
mov
lahf
out
fs
test
movl
and
test
imul
add
and
xchg
pop
icebp
cmp
mov
mov
sti
sbb
xor
mov
sarb
outsb
pop
dec
add
sub
and
mov
push
push
and
rol
andb
test
subl
cld
addr16
xchg
scas
pop
test
cmp
adcb
lahf
je
lret
je
adc
aaa
xchg
loopne
lods
cmp
shlb
and
cmc
data16
imul
data16
lret
sub
mull
jg
rcrl
dec
mov
mov
loop
ret
mov
mov
adc
add
cmc
mov
mov
xchg
pop
sub
scas
dec
clc
aad
cltd
imul
stc
lcall
outsb
out
adc
pop
iret
pop
inc
insb
in
das
nop
push
fcomi
cmp
sahf
jg
cltd
sbb
call
xchg
cmp
popf
mov
mov
lock
cmpl
sbbb
ja
scas
dec
repnz
inc
loope
dec
or
xor
or
lds
dec
jle
ret
mov
add
cmpsb
xor
xchg
outsl
pop
call
ja
scas
lods
hlt
movsl
xor
sbb
pusha
add
cmp
je
inc
dec
data16
adc
ss
jmp
mov
push
sub
fwait
lock
aas
outsl
fs
cmp
jb
push
push
fdivr
xor
rcrl
jecxz
aas
mov
pusha
cmp
jmp
addr16
fcomp
inc
pop
jle
add
testl
loop
je
xchg
icebp
fsubr
xor
lret
add
and
push
out
mov
xchg
fcmovnbe
dec
rolb
mov
loopne
nop
int3
ja
mov
rclb
popf
xchg
loopne
xchg
push
cmp
dec
andl
adc
int3
or
jbe
movsl
loope
iret
gs
add
inc
call
sbb
loopne
cmpsl
push
push
mov
hlt
mov
imul
cmp
dec
filds
stos
cmpsl
mov
jle
push
pop
out
xlat
push
pushf
pop
aas
jns
jp
dec
pop
popa
inc
push
push
pop
xchg
adc
sub
lock
out
loope
sub
fidivl
xchg
ret
push
dec
leave
sarb
xchg
jnp
fistpll
rcll
adc
std
jno
cs
icebp
adc
mov
mov
xorb
cwtl
aam
arpl
fs
and
pop
mov
lds
xchg
and
pop
cwtl
insl
aas
add
clc
jb
mov
leave
fsubl
js
jbe
lret
cwtl
push
lea
enter
pop
and
in
push
cmp
lods
aad
sti
sub
div
scas
les
adc
cwtl
cmp
add
pop
imul
iret
pushf
mov
into
pop
mov
loope
sub
popf
out
mov
sti
clc
jecxz
ror
icebp
jnp
and
clc
ljmp
dec
ja
andl
je
cmp
stos
lret
stos
sub
out
mov
repz
cmp
pop
dec
lret
pop
aaa
sbb
fdivr
xor
pop
repz
fwait
jecxz
adc
sbb
add
rcrl
inc
and
jecxz
insb
xor
push
popa
in
pop
js
mov
icebp
push
xchg
and
pop
pop
inc
and
fisttpll
movsb
adc
xchg
jmp
inc
aas
iret
dec
sbb
std
xor
dec
cwtl
insb
sub
fs
js
mov
mov
jmp
sahf
test
icebp
imul
movsl
jne
rcr
ret
add
adc
pop
cmp
jae
jmp
mov
fwait
pop
stc
in
gs
test
idivl
lea
and
pop
dec
cld
pshuflw
push
bound
aaa
dec
dec
xor
cmpsb
lret
pop
add
shll
shrb
fidivs
cmpsb
dec
cmp
add
testl
fimuls
cld
sbb
inc
jo
pop
das
jno
mov
dec
and
es
out
jne
jge
je
cmpsb
loop
ficoms
fcomp
mov
shr
insl
addl
gs
inc
test
xor
dec
mov
loopne
lahf
jecxz
popf
imul
inc
xchg
data16
adc
fsubr
cmp
mov
das
test
out
jmp
ret
mov
dec
cmpsb
pop
frstor
call
cmp
jmp
lahf
dec
add
and
out
xchg
andl
xor
pop
mov
xor
jnp
sbb
push
add
fisttpll
pop
adc
mov
in
stos
mov
in
insl
xor
dec
ds
sbb
ss
std
fstps
rcl
and
xchg
sbb
dec
stos
push
imul
sahf
cmp
sbb
lods
or
cmp
cmp
mov
cmp
lods
fmuls
inc
subb
jl
ja
fwait
mov
dec
movsb
dec
movsb
fwait
aas
into
test
pop
dec
push
mov
and
icebp
pop
jl
les
arpl
leave
mov
imul
lea
addb
fildl
int
cs
or
dec
xor
cld
add
pop
data16
loope
mov
fwait
popf
mov
repnz
loope
call
call
movsb
fdivrs
adc
test
sbb
cmp
stos
stos
jns
aad
push
jnp
adc
xor
lods
push
imul
mov
test
inc
inc
daa
and
and
add
jmp
cld
and
sub
jl
cmpsl
and
add
test
or
xor
fs
mov
push
lds
dec
mov
adc
push
and
and
jne
adc
xchg
jo
mov
sub
fs
mov
dec
dec
xchg
push
add
sbb
push
in
mov
sub
xchg
imul
call
push
negb
outsb
dec
int
jbe
cmpsl
out
gs
jp
sbb
dec
repnz
lret
data16
sub
sbb
jmp
pop
or
xor
movsb
adc
push
movsl
adc
lods
clc
or
lea
or
pop
pop
sub
shl
and
xor
inc
pop
lret
rcll
inc
xor
mov
dec
jae
push
jge
xchg
jmp
es
dec
dec
ds
repnz
jmp
mov
dec
ja
or
and
pop
sbb
xor
rcrb
push
mov
inc
dec
dec
mov
sbb
into
xorl
mov
je
and
int3
cmp
push
adc
jo
cmp
icebp
cmp
insb
mull
jo
out
leave
and
stos
jle
fimuls
lods
fwait
xlat
loop
adc
fsubrs
xchg
cmp
xorl
outsb
das
xchg
pop
adcl
shld
xor
push
xchg
mov
bound
mov
fisttpll
sub
mov
jno
cmp
int
xchg
sti
out
test
jnp
inc
aas
xor
in
cmp
jae
mov
dec
sbb
mov
or
inc
push
scas
push
loopne
jno
in
sar
mov
adc
mov
inc
sbb
inc
aad
bound
lahf
pop
jge
mov
vmwrite
cmp
fsubrp
mov
sbb
and
arpl
jle
cmp
mov
lds
add
je
and
push
movsl
scas
mov
and
lods
idivb
je
xchg
int
shr
fwait
stos
loope
imul
rcrl
bnd
aaa
mov
dec
push
fstps
in
lods
or
icebp
js
int3
call
test
popf
xor
es
sbb
add
and
imul
mov
testl
adc
scas
lods
add
inc
pop
lcall
ds
aas
pop
mov
jb
imul
rorl
cmp
and
ficoms
lahf
shll
mov
cmpsl
movsb
outsb
xor
xchg
jge
je
or
cmc
shrb
mov
or
lds
xchg
or
les
shll
aam
sahf
js
ja
and
int
std
rclb
dec
lahf
imul
and
push
adc
and
adc
ds
jbe
int3
movsb
andl
jle
pop
dec
cld
mov
push
aam
and
stos
lds
mov
fsts
cmp
add
sbb
jnp
stc
mov
inc
cmp
movsl
jg
call
rcll
jmp
mov
push
enter
ja
movsb
cmp
add
cmp
or
fdivr
ds
mov
sub
ret
iret
into
sub
sub
and
sbb
stc
iret
inc
jmp
xchg
ret
pusha
pop
mov
leave
cmpsl
jg
ret
dec
sahf
or
pop
or
mov
fldcw
test
jle
leave
push
out
stos
pop
xchg
or
pop
in
sub
add
push
mov
pop
into
mov
loope
lock
lds
sahf
pop
sbb
int3
fadd
stos
jmp
cwtl
jns
or
mul
cmp
add
call
sbb
stos
dec
pop
xor
pop
mov
lret
mov
bound
jp
nop
bound
or
sbb
out
outsb
add
jecxz
inc
pop
or
jp
or
mov
pop
xor
data16
push
dec
and
xchg
mov
hlt
cmp
insb
xor
inc
mov
cmc
xchg
arpl
loopne
sbb
daa
fxch
or
sti
daa
add
jbe
inc
add
ja
insl
mov
pop
xor
dec
push
inc
cli
mov
test
fildl
and
pushf
xor
daa
mov
inc
insl
jae
jns
or
lock
in
dec
or
xlat
add
dec
sub
pop
sub
clc
mov
add
jg
mov
jo
jp
test
scas
lock
test
xchg
out
rorl
icebp
aam
lods
or
fldt
cmc
xchg
fbstp
adc
out
cltd
out
cmpsb
movsl
jne
mov
insl
loop
dec
popf
scas
setb
mov
test
out
ret
std
lock
je
mov
jbe
dec
jbe
xor
mov
pop
out
sti
mov
mov
scas
popf
xor
scas
fnstenv
dec
lods
push
sti
movsl
das
cmpsb
mov
aaa
sub
pop
std
xchg
inc
xlat
inc
jmp
mov
aas
int3
jl
in
adc
rclb
hlt
cmc
jb
push
lcall
outsl
xorl
std
inc
js
nop
call
scas
mov
pop
in
rclb
insl
cmpsl
dec
scas
idivb
push
pop
push
data16
mov
sub
mov
adcl
in
mov
inc
mov
lsl
cmp
test
jne
cmpsl
imul
js
push
lds
std
push
pop
jl
sbb
cltd
fidivs
fstpl
fwait
cmp
test
mov
mov
je
fsubrs
push
movsl
xchg
push
jp
cmp
xchg
ss
lods
aas
cmpl
inc
xchg
sahf
or
call
dec
xchg
lea
or
sub
cltd
negb
faddl
int3
sub
stos
sbb
sbb
outsl
sub
or
subb
cmp
push
into
pop
and
inc
cmp
bound
lahf
and
movsl
jae
mov
push
dec
imul
pop
mov
push
cmc
jb
push
pop
inc
lock
xor
jnp
jmp
push
xchg
cmp
in
adc
pop
fs
add
pop
ret
out
sub
sbb
pop
insb
rcrl
cmpsl
or
pop
fstp
mov
xor
adc
jbe
or
lret
jae
mov
pop
divl
xchg
stos
scas
imul
mov
sub
dec
fld1
pop
subb
mov
xchg
icebp
cmpl
push
jnp,pn
enter
mov
test
js
mov
inc
cmp
loop
push
emms
stc
sub
and
sbb
lea
mov
pextrw
jp
sbb
lea
fdivp
inc
adcb
subl
rcrb
sub
inc
clc
leave
repnz
push
movsl
addr16
clc
sub
cmc
jecxz
jo
pop
sbb
loop
in
xor
adc
fsts
repnz
ror
popf
repnz
imul
and
sbb
or
ret
adc
call
dec
jnp
mov
or
or
pop
adc
cs
lods
aad
sub
cld
into
out
add
lds
and
and
pusha
in
push
out
mov
cltd
lods
sbb
idivb
inc
iret
sbbb
loope
mov
sub
cmp
jb
sbb
jge
mov
incb
insb
arpl
ror
in
sub
xchg
lcall
mov
ja
pop
cwtl
mov
stos
insb
out
fcoms
dec
subl
rolb
rolb
fnstcw
dec
push
ja
out
out
dec
ffreep
jmp
imul
pusha
push
pop
push
popf
xchg
cmc
out
xchg
shl
movsb
sub
dec
ret
outsb
imulb
test
mov
xor
scas
mov
or
push
xorps
sbb
les
xlat
out
fiaddl
subl
daa
inc
js
out
xchg
mov
jns
in
test
jle
imul
loop
fsts
out
lods
inc
mull
scas
xor
add
jmp
std
int3
cwtl
jnp
xorl
shl
push
dec
aas
fnstenv
and
lods
ds
or
jl
sbb
sarb
aas
push
test
test
jp
test
andb
shrl
mov
xor
mov
add
xor
push
cmp
cmp
inc
sbb
popf
cmp
add
and
sub
cmpsl
test
imul
into
jns
outsb
mov
xchg
xchg
or
aas
aam
inc
aad
jo
jecxz
repnz
cmp
pop
into
jl
jns
and
xlat
rol
cmpl
dec
fs
into
pusha
loope
sub
aaa
lods
xchg
je
jl
mov
cmp
mov
out
or
dec
cs
xchg
clc
adc
xchg
xor
and
or
into
jae
imul
push
inc
mov
outsl
stos
and
fnstenv
es
or
jb
call
loopne
sbb
lds
and
sub
xchg
dec
es
inc
pop
cmp
mov
or
into
test
addr16
cwtl
cltd
adc
idiv
adc
cwtl
cli
lahf
je
cmp
das
pop
aaa
movsb
enter
mov
and
mov
xchg
xor
jmp
leave
jecxz
stos
dec
dec
inc
push
sub
jno
movd
xchg
filds
das
fwait
je,pn
pop
mov
fwait
mov
clc
rcrb
push
mov
movsl
adc
add
pop
lea
pop
dec
and
repz
pop
imul
inc
add
and
fs
icebp
mov
popa
push
movsl
aas
cmp
or
jnp
push
js
jo
imul
cmp
mov
pusha
pusha
jo
fwait
leave
cld
lock
xchg
nop
mov
loope
or
pop
les
dec
imul
cwtl
mov
sbb
arpl
addl
lds
sub
dec
pop
sub
popf
loopne
jnp
leave
in
sub
push
mov
jns
xor
sub
push
dec
or
push
sbb
pop
pop
cmpsl
and
out
pushf
add
xchg
cli
in
lods
les
or
sbb
repz
outsb
insb
int3
dec
out
mov
out
sbb
pop
ss
or
addr16
fcoml
cli
and
imul
push
inc
pop
push
xchg
call
xchg
pop
lret
add
xlat
cmp
push
shrb
xchg
dec
add
stos
xchg
adc
loopne
push
sub
enter
push
arpl
ja
outsl
jo
insb
mov
fisttpll
dec
stc
pop
mov
adc
jae
xor
aam
into
jmp
scas
or
int
addr16
lods
ror
mov
lds
inc
mov
insb
adc
enter
iret
sub
mov
push
pop
movsb
mov
mov
pop
test
in
cmp
xchg
mov
and
xlat
jno
bswap
sbb
pop
push
in
pop
pop
sub
add
and
sti
stc
inc
lods
push
popa
jl
in
or
cmp
xor
lds
inc
cmp
mov
fs
jecxz
fyl2xp1
cmp
loopne
arpl
rclb
pop
mov
pop
and
adc
adc
daa
aam
dec
jmp
lret
push
scas
subl
push
xor
pop
mov
pop
out
mov
scas
jo
shl
gs
cmp
jnp
and
into
push
xchg
push
jge
jmp
mov
test
mov
and
cmp
add
scas
ss
xchg
inc
mov
decl
mov
and
mov
sbb
push
xchg
xor
mov
shr
shll
jno
sbb
popa
call
and
imul
mov
xchg
mov
xor
and
js
repnz
and
cmpsl
shll
lret
movsb
cmp
dec
sahf
icebp
dec
add
sub
push
mov
mov
bound
sbb
cmp
adc
leave
mov
ret
add
xchg
push
ret
sbb
cld
add
mov
inc
xchg
push
test
imul
nop
mov
push
cs
or
rolb
sub
xchg
push
shl
add
cmp
jo
push
insl
in
mov
rclb
clc
dec
sbb
and
into
cmp
jbe
xchg
mov
mov
jmp
lret
or
or
data16
cmp
stos
sbb
dec
icebp
out
push
lret
arpl
push
jns
loopne
std
je
out
pop
cltd
push
les
add
inc
test
aas
add
xchg
xor
adc
add
sub
push
and
in
and
orb
pop
inc
insb
cmp
pop
fsubrl
mov
xchg
xchg
mov
cmp
call
js
out
repnz
cli
test
sub
adc
add
mov
daa
push
int
cld
push
outsb
sub
xchg
mov
cmp
dec
mov
das
popf
movsb
mov
pop
adc
scas
jg
imul
lods
nop
mov
xchg
cli
cwtl
mov
push
jno
mov
cmp
pop
loope
popf
pop
push
mov
test
mov
inc
fwait
jmp
cltd
test
lret
jp
sbb
into
sub
test
xor
cltd
pop
popa
sbbl
pop
and
push
jb
in
in
adc
or
mov
and
sahf
jno,pt
push
scas
stos
xchg
icebp
test
pop
or
sar
mov
pop
rep
pop
adc
popa
lds
in
fldl
or
pop
sbb
mov
lahf
loopne
mov
dec
lods
fs
std
jecxz
xchg
adcl
daa
dec
push
xor
pop
jl
xchg
fs
insl
push
cld
adc
cmpsl
jnp
mov
lahf
pushl
sub
cmp
xchg
mov
out
pushf
jne
pop
mov
es
test
adc
jb
ds
cwtl
mov
cmpsl
push
fcomp
aad
push
fisttps
lcall
stos
ja
ret
or
jp
xor
add
clc
mov
jp
popf
adc
imul
pop
loope
repz
jg
fcompl
pop
cmp
mov
xor
push
icebp
jl
out
add
sub
mov
dec
ret
je
sahf
sbb
rclb
push
mov
jp
lea
ja
mov
incb
in
in
lret
cltd
cmp
into
loope
addr16
ljmp
ret
cmp
and
sub
ja
gs
sub
js
es
dec
mov
pop
xchg
xchg
inc
sarb
fwait
xlat
push
xor
xchg
jg
push
or
lods
xchg
imul
xchg
mov
lcall
sbb
xor
mov
pop
dec
pop
xor
scas
mov
pop
fs
out
lcall
and
mov
lock
mov
loop
nop
ret
sub
sub
xor
sbb
aaa
mov
pop
adc
sub
push
js
push
repz
imull
in
icebp
jl
add
les
xchg
push
adc
sbb
push
cmc
daa
push
pop
add
push
adc
sub
out
das
and
jge
jns
sti
push
aaa
outsb
scas
fmull
cmp
push
test
cltd
mov
dec
pop
call
push
call
scas
xor
bts
inc
ja
ja
mov
mov
sbb
jb
mov
jge
inc
out
fcmovb
and
jmp
in
cmc
mov
lahf
ret
mov
jp
push
js
lods
mov
cmp
xchg
lock
dec
xor
push
arpl
pop
dec
jnp
insb
xor
rclb
cmp
mov
aaa
testl
jmp
fstps
push
inc
call
inc
dec
xor
xorb
adcl
lret
lret
repnz
xor
cmp
cwtl
cmpsb
push
stos
incb
sub
in
xchg
dec
dec
mov
jl
sbb
outsl
scas
adc
mov
mov
xor
out
int3
shl
jns
fsubrl
ret
mov
pop
dec
adc
fnsave
adc
pop
idivb
jnp
fs
mov
pop
enter
icebp
sbb
lds
lods
jecxz
out
mov
cmp
das
shll
out
adc
and
int3
stos
fdivrl
mov
xor
ljmp
xlat
mov
push
xor
lahf
into
insb
and
cmpsb
adc
dec
cmp
cmp
cmc
insb
cmp
repnz
loope
xchg
xor
inc
push
xlat
pop
aam
out
inc
shrl
mov
addl
cmpsl
fst
dec
scas
je
dec
add
lret
and
push
push
stc
pop
pop
sub
push
notl
sub
adc
stos
pop
jno
mov
jbe
lea
in
clc
xchg
push
fstpt
sahf
mov
fidivrs
push
pop
mov
arpl
mov
gs
clc
lods
xor
mov
rcrl
es
mov
cmp
xor
movsb
cmp
jp
add
cmp
leave
pop
fstpl
scas
adc
sarl
pop
outsb
in
add
xchg
add
cmp
sbb
daa
inc
pop
stc
mov
xchg
out
inc
jae
mov
and
out
sbb
sub
jl
xchg
popa
jns
mov
and
jo
sahf
pop
loopne
arpl
cmp
sub
pop
or
ficoml
push
js
pop
xor
jg
xchg
pop
shrl
clc
adcb
jp
jp
push
sub
jmp
mov
jmp
dec
setae
or
subb
fadds
xchg
add
xchg
xor
sub
xchg
jmp
push
sbb
int
inc
dec
xlat
lods
clc
js
inc
or
into
mov
add
ljmp
jmp
out
mov
jmp
fs
add
sbb
cld
orb
mov
loop
in
ss
mov
xor
loop
imul
inc
aas
insl
ret
push
out
mov
xor
divl
pop
mov
rcrb
or
dec
inc
jecxz
shl
dec
clc
push
out
lcall
sbb
add
sub
inc
and
mov
sbb
fsubs
shll
sub
xchg
rcrl
xchg
jle
jge
js
cld
popf
pop
dec
mov
push
or
or
push
dec
jae
sub
and
dec
xchg
lock
sahf
mov
mov
or
inc
decl
cld
stos
nop
pop
pop
call
mov
movsl
jo
dec
or
inc
cmp
out
rcll
fcomps
mov
push
lods
sbbl
jmp
ficompl
adc
ljmp
ljmp
inc
out
jnp
add
movsl
andl
mov
cmp
ret
lahf
lahf
mull
cltd
jg
into
xchg
stos
adc
sbb
stos
mov
xchg
shrl
lods
lret
fstpl
stos
hlt
inc
movsl
mov
dec
ja
pusha
inc
mov
int3
inc
and
cmp
pop
pop
scas
jne
sub
jp
or
mov
dec
pop
jmp
xchg
mov
sub
les
or
std
out
insb
test
and
stos
xor
push
jns
pop
jo
orl
adc
stc
rcll
shrl
jmp
fisttpl
testl
insb
fdivs
cmc
enter
xchg
sbb
enter
adc
push
xor
push
pop
aam
inc
xchg
sbb
lcall
out
or
movsb
jae
xchg
sub
or
sti
mov
inc
jo
inc
xor
dec
push
or
int3
enter
push
mov
inc
or
dec
lcall
xchg
movsl
lret
pop
bound
xor
loope
mov
mov
sbb
or
cmp
out
push
pop
add
dec
pop
gs
jb
popf
test
xchg
sbb
call
fnsave
negl
ficomps
inc
sbb
mov
in
leave
mov
lods
movsl
sub
imul
xchg
mov
and
mov
add
insl
fildll
shl
fcomps
jb
bound
fmul
sbb
or
pop
pusha
in
loope
pop
stc
ds
or
inc
jno
out
pop
or
push
icebp
mov
or
shrl
daa
xchg
pop
add
jle
shl
push
movsl
imul
sti
ret
movsl
and
aas
inc
cmp
push
push
or
iret
leave
mov
incl
ja
add
enter
je
push
pop
add
scas
std
cmp
rorb
mov
push
inc
mov
xchg
hlt
loope
pop
dec
inc
xor
ret
stos
lds
jge
fistl
std
xchg
cmpsl
xchg
loop
ret
push
dec
jp
out
mov
cmpsb
scas
stos
arpl
bound
stos
sti
mov
test
nop
inc
jge
int3
or
mov
sbb
adc
pop
adc
test
cmp
push
neg
and
add
not
xchg
jl
sbb
push
push
mov
mov
xchg
pop
push
popf
mov
aam
jno
jae
jmp
fdivr
jmp
rcr
dec
call
and
repz
scas
cmp
fnstcw
andl
jno
push
xchg
inc
mov
lret
push
fsubrl
jp
lahf
addb
loopne
daa
push
jne
mov
or
or
iret
inc
jmp
ss
std
and
scas
inc
stos
nop
in
out
lds
push
std
jnp
push
std
jle
hlt
test
fisttpll
sub
jg
shlb
aad
lcall
mulb
xchg
push
sahf
and
jne
insb
je
cmp
xchg
jno
ret
aad
mov
jmp
mov
fisttpll
in
mov
cli
in
shrl
lahf
adc
xchg
test
sbb
cmp
data16
iret
lret
lret
add
cmp
ss
mov
jl
adc
adc
cs
or
cli
mov
dec
push
imul
push
out
frstor
jno
imul
push
push
adc
stos
xor
push
outsl
cmp
mov
shrb
mov
xor
loopne
cmpsl
jns
push
inc
or
lods
dec
add
jg
adc
cmpsb
aam
sbb
pop
sbb
and
shlb
jge
fsubrs
lea
pop
jmp
push
fs
inc
fs
or
pop
into
cli
push
daa
add
scas
push
inc
sbb
lcall
xor
sbb
lea
mov
test
movsl
push
or
mov
enter
jmp
stc
loopne
push
test
jle
xchg
loop
es
jnp
dec
cmp
imul
mov
jl
mov
popf
jo
cmpsl
jl
adc
mov
xchg
push
and
pop
subl
sub
out
sbb
lods
notl
stos
mov
xchg
test
int
add
or
cmp
inc
test
inc
mov
mov
pop
jb
xchg
jno
dec
and
push
daa
dec
fidivrl
pop
xlat
mov
int3
add
lods
les
add
loopne
xchg
aam
dec
pop
xchg
incb
xchg
hlt
fstpt
pushf
mov
push
dec
mov
stos
out
mov
sub
scas
push
arpl
add
dec
add
adc
push
lcall
jecxz
mov
pop
or
icebp
xchg
jns
arpl
ret
mov
mov
fdivs
add
pusha
sti
sbb
negl
inc
inc
dec
into
test
dec
jecxz
or
repnz
and
jns
scas
xchg
mov
mov
sbb
hlt
and
loope
or
jmp
add
ret
add
ja
cmp
sub
test
xor
xor
sbb
in
adc
push
xchg
int
xor
test
xor
mov
fnstenv
cltd
dec
jmp
pop
outsb
inc
out
test
addr16
in
lret
dec
lahf
imul
pop
std
aaa
dec
mov
pop
and
xchg
jne
movl
fstpt
aad
jle
ret
pop
xchg
mov
push
in
imul
xor
cmp
insb
xchg
pop
mov
shrb
push
orl
inc
sub
outsb
jo
int3
popa
outsb
cs
in
data16
or
adc
mov
in
mov
push
jmp
add
push
pop
test
jae
enter
mov
jbe
insb
xor
loopne
in
inc
aas
fsubrs
cltd
mul
test
clc
inc
and
xchg
cmp
xor
dec
movsl
enter
pop
aas
aad
mov
add
dec
mov
fcmovnbe
pop
test
out
pushf
call
jns
aam
push
cmp
fcoml
sahf
pop
adcb
in
prefetchwt1
call
mov
imul
xor
and
and
xor
out
dec
or
mov
sarb
cmpsb
cld
sbb
flds
sub
ljmp
sub
pop
outsb
cmp
mov
arpl
cmc
adc
dec
rcr
add
mov
ja
sbb
cld
aaa
push
fdivrs
inc
pop
fcomp
bound
mov
movl
rcrb
les
ret
repz
in
icebp
inc
clc
dec
idivb
imul
dec
test
push
mov
add
out
push
sub
sub
mov
outsl
jno
mov
out
mov
lods
mov
ret
add
mov
jne
scas
cmp
orb
xchg
cmp
and
int3
iret
inc
loopne
ss
and
add
into
and
cli
cmp
inc
bound
lods
and
and
imul
inc
movsl
popa
inc
dec
jb
popa
dec
cmpsb
movsl
cmc
aas
ljmp
and
pushf
sbb
push
or
mov
outsl
les
push
iret
sti
jmp
cmp
int3
xor
dec
outsb
jecxz
call
and
dec
inc
push
mov
fsubrl
pop
pop
xor
xchg
test
mov
les
xchg
test
aad
les
loop
rcr
dec
test
jno
pop
inc
aad
add
and
push
rcll
push
in
xor
mov
dec
push
out
imul
ja
stc
mov
jecxz
dec
cli
push
loop
arpl
adc
in
loop
aad
sub
cmp
xchg
aam
dec
xor
adc
jmp
and
mov
mov
sub
mov
push
xor
jmp
popf
xorl
enter
mov
lds
fdivrl
add
shll
or
test
pop
out
xor
dec
xchg
ss
jp
xchg
in
add
test
jmp
out
stc
push
outsb
nop
push
dec
add
mov
mov
aaa
dec
dec
mov
pop
lods
push
pop
xlat
imul
adc
adc
bound
jle
xlat
test
pop
sbb
nop
or
mov
out
sub
call
gs
test
je
jo
inc
cmp
mov
jnp
cmp
rolb
xor
fs
aaa
pop
inc
mov
mov
xor
icebp
je
pop
sub
jne
es
inc
inc
mov
jnp
repz
sub
lea
dec
jge
xchg
jg
jle
fbld
imul
data16
lret
mov
orb
mov
jge
mov
xor
ja
and
jp
enter
mov
pop
adc
mov
mov
inc
mov
jbe
and
clc
cltd
sub
jnp
mov
dec
inc
popl
mov
pop
lock
push
inc
and
aam
cmp
loope
mov
and
test
out
mov
mov
stc
inc
ret
push
into
stos
pop
sub
loop
jnp
loope
xor
pop
daa
test
xchg
xchg
push
call
push
sahf
xlat
insl
test
push
hlt
inc
xchg
in
inc
xor
cmp
and
mov
lret
gs
ds
ljmp
inc
xchg
or
mov
mov
or
lea
jle
call
addr16
out
jle
jne
adc
xchg
mov
xor
or
xchg
inc
pop
mov
jbe
loopne
lds
in
add
shrl
push
fmull
lea
push
int
inc
xchg
push
inc
or
movsl
fstl
sbb
mov
int3
cmc
cmp
aam
outsl
add
or
pop
lea
insl
ret
std
cmp
fs
jecxz
adc
pop
aas
cs
sbb
and
push
iret
mov
pushf
or
imul
bound
cmp
push
aam
push
push
mov
sub
pushf
mov
cli
iret
test
int
clc
xor
push
adc
cltd
shrb
cmc
or
jp
addr16
popa
push
sbb
loopne
movsl
ljmp
shll
push
xor
xor
cmp
shrb
sbb
out
inc
push
adc
testb
push
jnp
std
sar
pop
shrb
leave
and
sbb
je
xlat
mov
fs
cltd
sbb
lea
in
cmpsb
daa
popa
inc
scas
subl
push
test
leave
sbb
icebp
dec
or
mov
es
sbb
pop
stos
test
fdivrl
negb
repnz
dec
sbb
icebp
mov
jbe
fldl
inc
mov
bound
in
pop
push
jno
test
fs
dec
cmpsl
vorps
rcll
and
xchg
or
pushl
mov
add
adc
sbb
in
gs
lock
inc
sub
mov
sahf
mov
enter
push
out
adc
mov
lods
pop
ss
inc
jmp
add
dec
xchg
pop
jae
xor
call
shl
jno
xchg
lret
rol
cltd
push
test
jge
test
repnz
adc
jno
cmpsl
fidivs
push
mov
pop
mov
data16
pop
fs
pop
cld
aam
xchg
inc
lret
sbb
mov
jle
inc
adcb
push
adc
scas
add
jne
and
imul
mov
add
out
inc
in
enterw
mov
neg
mov
scas
outsl
rolb
sub
pop
xchg
push
scas
mov
pop
sub
imul
pop
inc
mull
mov
jl
mov
inc
dec
and
dec
fbstp
pop
inc
rcll
push
pop
jno
arpl
bound
or
xlat
es
cmc
or
add
or
mov
jg
xchg
mov
addr16
mov
ss
mov
add
pop
movb
outsb
icebp
fidivrs
leave
sbb
sbb
testb
stos
push
das
push
jl
std
std
pop
leave
in
pop
mov
lods
push
mov
pop
mov
loop
pop
lcall
outsb
push
fwait
push
push
lea
push
imul
loopne
add
shrb
pop
call
adc
ja
call
lahf
sbb
lock
xchg
hlt
push
in
pop
push
add
jge
inc
js
inc
das
bound
mov
or
data16
sbb
jbe
repz
jns
insl
or
outsl
out
lock
and
arpl
shlb
mov
cs
pushf
sub
ret
insb
or
pusha
mov
push
pop
xchg
mov
sub
mov
push
sahf
adc
adc
pop
jbe
push
arpl
mov
xor
les
fsubs
jle
add
cmp
mov
movsl
push
xor
dec
leave
mov
mov
out
and
xchg
in
fsubr
ja
add
cli
cs
xchg
cmp
or
in
jecxz
fs
in
outsl
aam
dec
add
dec
pop
adc
sbb
pop
out
cmp
gs
sbb
sti
inc
and
shll
mov
imul
xlat
mov
scas
aaa
out
add
add
ds
push
push
mov
std
lret
mov
sbb
orb
inc
mov
clc
pop
lods
mov
cmp
inc
jmp
js
out
push
add
popl
ficomps
jns
lret
push
or
pop
push
push
mov
out
cmp
inc
ss
nop
push
sub
cltd
or
jns,pn
sbb
push
out
pusha
cltd
mov
out
insl
addb
sbb
imul
ret
rcl
into
pop
rcll
std
movsl
mov
sub
mov
fbstp
stos
lahf
mov
stos
jle
sub
jge
outsl
and
clc
push
dec
pop
sub
add
inc
jge
in
xchg
jmp
adc
iret
push
push
stos
cmpsb
fistl
dec
dec
arpl
push
icebp
inc
dec
lcall
dec
ficomps
or
jnp
mov
stc
pop
mov
jno
insb
aad
lea
ja
mov
sub
dec
mov
mov
imul
int
xor
dec
fisubrl
xor
fwait
sbb
pop
leave
lds
imul
jb
cmpsb
dec
mov
imul
lods
mov
adcw
scas
mov
add
sub
push
pcmpeqb
or
add
cmpsl
push
loop
bound
ret
mov
adc
icebp
pop
push
jnp
in
xlat
pop
dec
les
insb
fistpl
out
pop
lds
imul
leave
cli
pop
insb
pop
sahf
cltd
pop
leave
or
jb
data16
dec
sub
leave
fimuls
xchg
inc
jecxz
push
pop
mov
arpl
cmp
push
pop
stos
fs
inc
int
push
push
dec
into
pop
shrl
mov
sbbl
jno
pop
mov
mov
and
aam
das
out
push
mov
in
sbb
dec
fisubl
cmpsb
lock
add
loope
xchg
adc
dec
and
sub
gs
sub
add
in
mov
sti
or
jle
sub
pop
daa
mov
pop
imul
fwait
addb
sub
repnz
pop
adc
sbb
into
lcall
add
push
ss
push
insb
mov
loopne
xchg
mov
gs
sbb
lret
inc
sub
sub
adcl
bound
aaa
jle
inc
pop
inc
mov
ds
mov
gs
add
push
fadds
stos
sub
arpl
fcomp
dec
sub
insb
cmpsb
dec
bound
sub
add
cmpsb
add
pop
fcompl
mov
add
fists
push
daa
adc
mov
in
push
xchg
clc
dec
stos
mov
adc
xchg
pop
mov
add
in
insb
movsl
in
roll
and
mov
xchg
cmp
lea
insl
jne
out
add
lock
dec
enter
jns
push
or
adc
push
ret
loopne
mov
sbb
dec
dec
push
aad
mov
and
add
push
int3
xchg
adc
mov
out
mov
test
rorb
out
add
ljmp
jg
leave
fxtract
mov
ret
addr16
add
inc
ficoml
ljmp
fcoml
mov
mov
xchg
repnz
je
ret
or
jg
movsb
xchg
xchg
out
nop
leave
clc
test
sub
pop
xchg
jge
test
bound
xchg
xchg
aam
fstpl
mov
dec
out
pushf
mov
pop
xchg
mov
outsb
push
mov
inc
aas
mov
inc
scas
adc
fdivs
push
mov
adc
stc
sbb
mov
add
push
cmp
xlat
jae
inc
stc
push
int3
mov
adc
xchg
pop
hlt
push
lods
push
adc
lock
push
add
or
cmp
mov
call
bswap
leave
in
icebp
fcmovb
add
arpl
iret
iret
pop
fsubs
cmc
or
sbb
ret
insb
fdivr
ss
push
sub
add
dec
dec
sub
pushf
mov
push
cmp
data16
jg
notl
jge
sub
xor
xchg
out
insb
pop
push
or
or
cmpsb
pop
rcrl
loope
cmpsb
and
dec
clc
ret
fsubrl
xchg
sbb
push
add
pop
mov
lds
repnz
popa
mov
or
rclb
das
dec
push
inc
adc
ljmp
pop
cmpsl
cmp
mov
and
inc
mov
pop
fsub
fildl
cmp
out
mov
outsl
fildl
mov
sbb
pxor
stc
inc
cs
imul
cmp
xor
loopne
je
popf
sbbb
call
cmp
inc
push
subl
loope
mov
push
repz
xor
and
js
push
mov
jecxz
nop
xor
fildll
adc
loope
cltd
ds
fldl
dec
inc
das
pop
popa
clc
mov
pop
pop
ds
adc
sti
cmp
mov
mov
add
shll
add
in
adc
or
and
sbb
mov
or
js
mov
clc
aam
pop
jecxz
xor
mov
add
insl
decl
out
lahf
sub
and
imul
es
push
imulb
aaa
mov
add
sahf
xchg
sarb
out
or
jno
in
fbld
or
adc
mov
pop
imul
push
and
pop
xor
xorb
aas
mov
les
loop
pushf
inc
adc
sahf
ficompl
add
push
test
lret
sbb
and
int
xor
sbb
adc
movsb
and
push
mov
or
insl
test
cmpsl
js
aam
stos
lcall
adc
int
shr
mov
adc
mov
pop
inc
rorb
cmp
adc
xchg
ljmp
fdivrl
pop
popa
scas
or
pop
repz
add
out
push
mov
or
scas
cmp
stos
xchg
push
stos
jns
in
push
or
or
or
xorb
clc
mov
pop
mov
push
adc
mov
push
inc
cmc
push
iret
push
fstpt
sub
into
into
int3
cld
jg
mov
jg
xchg
xor
movl
inc
cltd
outsl
call
stos
or
repnz
lods
and
xchg
inc
movsb
sub
and
pop
in
lcall
stos
jge
ffree
pop
movsb
mov
pop
adc
cmpsb
mov
aad
sbb
xchg
sub
sbb
aad
pop
mov
add
sub
int
inc
add
je
push
popa
jecxz
nop
and
popf
adcl
repz
mov
mov
outsl
test
jmp
jl
jbe
cmp
inc
mov
stc
push
xlat
testb
push
mov
sub
push
jp
cltd
dec
and
jp
dec
jp
in
cli
dec
mov
mov
push
pop
jge
in
lea
xor
mov
push
test
push
or
push
fbld
xor
dec
inc
pop
lcall
jns
mov
lods
ds
fimull
scas
in
cmp
fcompl
inc
into
or
fistl
and
inc
outsb
movsb
test
xlat
insl
or
sub
sub
cmpsb
pop
adc
pop
addl
mov
fldl
fldl
mov
pop
adcb
pop
orl
shll
inc
ja
cli
or
inc
jo
fwait
insb
and
lods
adc
xor
cmc
pop
cwtl
std
inc
push
aam
xchg
insb
mov
xor
out
xor
push
lret
ja
addr16
scas
mov
out
add
movsb
cmp
mov
arpl
shl
scas
rolb
sbb
sub
adc
sub
push
pop
jge
stos
lret
dec
mov
or
add
out
sbb
pop
fwait
adc
rcll
add
repnz
adc
xchg
repz
call
push
out
jge
imul
add
rcrl
pop
mov
cmpsb
xchg
cmp
or
shll
ljmp
pop
push
aaa
jle
dec
ljmp
dec
adc
jge
test
sub
mov
xchg
movsl
addr16
pop
gs
loope
inc
movsl
adc
mov
call
adc
stos
pushw
lret
cltd
mov
in
out
in
fmul
in
pusha
ret
lea
or
ss
pop
mov
mov
jle
xor
cwtl
dec
mov
aas
test
pop
jbe
out
sbb
dec
xchg
gs
xchg
pop
sub
divb
mov
cmp
xor
pop
js
xor
xchg
dec
hlt
or
push
and
inc
cli
mov
ret
push
pop
or
cmp
sbb
call
in
sbb
int
fnstsw
fdivs
and
iret
mov
notb
pop
addr16
outsb
dec
mov
jne
cmc
xchg
mov
in
cld
mov
mov
xchg
cmpsb
inc
pop
jae
in
jnp
mov
mov
enter
dec
fcompl
jmp
or
sbb
shll
loop
xchg
stos
mov
imull
mov
rcrb
cmpsl
pusha
pushf
dec
fsubrl
push
int
vpperm
xchg
mov
imul
jnp
movsl
xor
dec
push
and
inc
ss
adc
pop
adc
add
cwtl
aam
or
add
jecxz
dec
rcl
xor
or
nop
and
mov
pop
pushf
lds
jno
loope
dec
inc
data16
cmpsb
test
les
xlat
lea
fisubl
fdivrl
inc
arpl
jmp
je
in
imul
add
xor
dec
mov
test
cmpsb
aam
mov
mov
adc
loop
scas
jge
pop
mov
cmp
lds
dec
jns
popa
and
arpl
cs
add
fs
je
bsr
cmc
add
add
push
mov
std
and
dec
cmp
cmovb
xchg
out
sbb
cltd
ja
push
cmpsb
rclb
imull
rorl
imul
sbb
add
dec
pop
imul
add
stos
cmp
fistl
mov
out
push
sqrtps
adcb
scas
imul
jge
and
cli
push
xor
push
pop
fnsave
mov
jns
push
push
cmc
dec
pop
mov
add
mov
iret
mov
out
scas
or
xchg
jbe
gs
xor
mov
loopne
push
cltd
mov
dec
stos
inc
push
jno
push
imul
adc
int
imul
xchg
adc
pushf
add
test
sarb
pop
scas
inc
pop
std
arpl
loopne
nop
imul
jg
adc
and
xchg
ljmp
jbe
jmp
mov
cmpsb
rorb
ljmp
ret
add
lds
imul
pop
loope
inc
mov
jmp
mov
rclb
jne
flds
xchg
outsb
mov
movsl
sbb
mov
mov
pop
add
sub
xchg
sbb
sbb
or
bound
test
dec
into
xor
idiv
xchg
and
hlt
mov
mov
adc
cs
sbbb
sbb
sub
lret
push
or
rcrb
adc
cmp
mov
lret
test
pushf
mov
sub
push
dec
testb
cmp
mov
adc
shrl
fs
pop
cmp
or
bound
cmpsl
inc
cmp
lods
push
les
mov
jbe
dec
and
add
leave
xor
outsl
es
dec
mov
cli
sub
fsubp
push
shl
xor
lock
int3
movsb
mov
cmp
push
and
mov
inc
cltd
sub
lods
inc
std
cmp
cli
stos
aas
das
ja
jae
arpl
xchg
or
cmc
cmpsb
dec
sub
cmp
add
mov
jo
sub
pop
xchg
and
cmp
pop
fwait
rcrb
pop
call
insb
enter
jb
mov
sub
pop
and
sahf
mov
push
out
mov
add
and
pop
push
or
push
add
and
scas
xchg
xchg
jecxz
nop
fistps
shr
push
insl
mov
movb
adc
ja
mov
xor
sub
movsb
sahf
pop
push
popf
bound
mov
loope
adc
aaa
add
into
jns
loopne,pt
push
aas
xor
pop
push
iret
lds
fdivs
mov
outsl
inc
jbe
cmpsl
cmpsb
sub
out
jp
mov
mov
pushf
in
sub
xor
lds
fdivrl
dec
mov
pushf
sub
out
and
addr16
mov
repz
jge
dec
ror
push
das
out
out
sbb
icebp
xor
pop
jmp
repz
sub
adc
add
or
mov
add
mov
lret
pop
xor
fisttps
sti
js
int3
jle
out
lret
insl
lea
loopne
push
xlat
jle
out
fs
into
shll
mov
roll
mov
dec
cmpl
cltd
pop
test
jmp
sarb
inc
adc
shrb
out
or
ljmp
cmp
in
jmp
jge
add
insb
inc
cmp
out
iret
jmp
imull
rcll
and
daa
sub
lret
add
ret
cltd
adc
ds
mov
test
orl
jne
cmp
out
jnp
add
jmp
mov
das
inc
mov
sbb
mov
jle
rolb
movsl
iret
negb
mov
mov
jne
pop
sub
or
cmpb
dec
js
xchg
fwait
sub
stos
xlat
adc
xor
jns
fcoml
mov
sbb
or
jbe
out
data16
push
out
fstps
outsb
xchg
nop
jmp
ret
xchg
add
orb
pop
cwtl
push
les
scas
xchg
adc
lock
mov
add
push
add
cmp
dec
push
mov
test
mov
mov
mov
xor
sub
mov
imull
mov
mov
sahf
jge
in
stc
mov
fld
cmpsl
dec
es
imul
insb
add
call
inc
dec
sbb
fldt
xchg
sbb
cmc
hlt
int3
aam
loop
mov
push
adc
test
jge
pop
and
xchg
test
rclb
pop
pushf
out
jle
cmc
pop
jbe
cmc
roll
xchg
add
cmp
cs
addr16
fs
jl
clc
lods
ljmp
sarl
xchg
and
out
cmp
add
cli
cwtl
xor
mov
cmpsb
lds
in
dec
sbb
dec
or
jns
ja
jns
fdivrl
sub
mov
xchg
mov
fsubs
jb
jge
int
mov
cmp
stc
or
adc
jp
inc
cmpsl
mov
out
add
es
ljmp
jecxz
mov
dec
jns
mov
pusha
fstpl
lcall
push
aas
push
jo
arpl
push
insb
ja
inc
cmp
xor
pop
in
mov
mov
jl
movsb
sub
mov
bound
xchg
mov
sbb
in
mov
js
add
mov
dec
test
arpl
and
cli
sub
sbb
movsl
test
roll
jmp
aad
cmp
mov
int3
pop
dec
mov
cmp
fidivrl
data16
out
shll
sub
lret
movsb
loop
js
ljmp
sub
dec
push
and
stc
cs
sub
or
adc
push
mov
into
in
add
cltd
ljmp
add
cvtpi2ps
ret
push
mov
out
jae
xchg
jne
sbb
in
outsb
test
arpl
xor
lods
push
mov
jnp
cmpsb
xorb
in
xchg
push
in
xor
sub
xchg
scas
pop
fldcw
ror
dec
push
outsl
cmpl
fdiv
push
push
pop
cld
push
xor
in
jle
insb
and
nop
push
divl
js
dec
inc
mov
sahf
xor
pop
jns
and
push
nop
add
or
xchg
stc
xchg
sub
jmp
mov
clc
stc
mov
sbb
xchg
cmp
lds
push
xor
mov
mov
add
sti
test
cli
push
jnp
loope
cmp
cmpsl
jae
cmpsb
lods
hlt
lods
jae
dec
cmpsb
cmp
jno
loopne
int
jmp
pop
push
arpl
xor
sub
adc
testl
jno
mov
mov
sbb
clc
xchg
into
movsb
movsb
adc
adc
jg
sarl
hlt
mov
aad
push
repnz
pushf
in
bound
cmpsb
addr16
fisttpl
mov
jecxz
and
pop
pop
mov
jmp
pop
fdivs
out
jl
cmc
push
cld
pop
jae
inc
pop
cmp
sbb
jp
shll
mov
xor
xor
xchg
push
xchg
bound
sahf
iret
outsl
push
rdpmc
aas
stos
pop
mov
arpl
fs
sbb
xchg
pop
mov
mov
inc
jo
dec
and
out
shlb
inc
mov
cmp
movsb
pop
mov
repz
push
ret
mov
addr16
aas
int
mov
outsb
test
xor
xchg
inc
imul
sub
sbb
imul
cs
mov
iret
bound
dec
xor
cs
insb
jne
or
das
jnp
adc
jmp
sub
add
sbbb
in
lods
fcoms
sub
popa
in
mov
icebp
test
xchg
pop
xchg
pop
mov
push
popa
mov
push
pop
addr16
and
mov
out
fcomps
jl
cmp
aad
xor
cmp
aad
dec
cltd
imul
imul
enter
dec
inc
icebp
rorb
cmpsb
inc
mul
push
xchg
cmc
incl
cs
lret
pop
mov
shrb
jb
adc
scas
icebp
or
lds
shlb
fwait
fwait
test
and
mov
sub
mov
xchg
or
bound
mov
lea
out
xchg
fcom
cld
xor
bnd
mov
fnstcw
out
bound
mov
adc
jno
fcmovu
in
aad
add
push
mov
sbb
push
xchg
daa
pop
push
test
fwait
dec
out
ficoms
sub
mov
lock
cmp
shl
sti
je
call
aam
mov
movsb
out
out
or
bswap
test
stos
lret
fstl
in
cmp
adcb
insl
inc
sbb
xchg
inc
adc
data16
cmp
pop
ret
mov
xlat
add
in
cmpsb
ret
daa
shrb
inc
mov
pop
mov
mov
mov
sub
dec
xchg
mov
and
and
scas
inc
jnp
les
test
inc
movsl
mov
je
pop
pop
jnp
xor
dec
into
out
push
sub
lret
out
inc
jno
inc
mov
jg
mov
jbe
inc
hlt
in
insl
ja
pushf
mov
sahf
mov
fisubrs
filds
enter
out
jnp
ja
lahf
lret
test
add
adc
js
push
js
test
mov
call
je
mov
inc
idiv
cli
sub
ficomps
out
outsl
test
ja
xchg
fwait
dec
into
inc
inc
lcall
and
push
call
push
sub
fiadds
cmp
dec
mul
add
popa
lret
lgs
popl
xchg
sub
adc
jmp
shll
ret
hlt
or
inc
mov
push
outsl
xchg
lock
mov
jg
or
or
lcall
outsb
pop
fwait
adc
lcall
js
int3
loope
push
push
inc
je
ds
inc
pop
lods
bsr
push
fistps
jp
pushl
cmp
or
add
insb
inc
sbbb
lds
or
add
mov
pop
pop
scas
push
sub
pop
cmc
sub
movsl
cmp
mov
lock
imul
int
mov
mov
insb
int3
jnp
lret
sbb
inc
ds
jnp
mov
lret
or
xchg
sub
outsl
jge
pop
adc
add
xchg
mov
mov
or
jno
stc
jmp
and
push
adc
pop
std
pop
add
sbb
inc
fcmovu
mov
pushf
mov
xchg
mov
xor
inc
add
mov
stos
mov
xor
sub
mov
sti
cs
mov
xchg
mov
mov
in
nop
inc
aam
andl
pop
popa
loopne
inc
jnp
enter
lret
out
insl
mov
adc
xchg
clc
add
add
adc
mov
push
outsl
jecxz
dec
jge
pop
nop
repz
cmpsl
repz
rcll
jecxz
mov
jnp
out
pop
cmp
lahf
cmc
pop
dec
icebp
mov
push
icebp
add
lods
or
in
adc
ja
es
jb
rolb
xor
dec
cmpsl
jl
and
push
pop
loopne
lret
pop
movsb
dec
stc
mov
dec
xor
cmc
repnz
xchg
gs
fs
push
or
fnstcw
ret
xchg
jb
shrb
pop
mov
lods
mov
add
es
mov
sbb
stc
imul
lods
jnp
inc
loopne
mov
leave
pop
mov
inc
mov
out
inc
test
jae
and
shl
jge
insl
fs
push
fdivr
lock
push
xor
cmpsb
inc
movsl
add
aam
push
add
adc
pop
inc
leave
pop
xor
arpl
fldl
test
gs
mov
ljmp
pop
dec
sub
lcall
xor
icebp
aam
and
mov
lods
movb
pop
dec
adc
or
jge
out
inc
add
jmp
rcll
xor
pop
xchg
xchg
mov
sbb
xchg
xor
int3
push
jge,pn
mov
inc
test
fdivl
sub
shlb
pop
les
adc
add
fwait
inc
lret
mov
outsb
dec
enter
xchg
bound
sbb
repnz
pop
jp,pn
sti
xchg
aas
mov
roll
push
inc
add
dec
jns
jns
jne
je
repz
pop
adc
fbstp
xchg
sub
xor
push
xor
fisubrl
or
jg
jb
jg
andps
dec
js
mov
mov
inc
mov
mov
mov
sbb
and
push
pop
fistpll
hlt
push
lds
xchg
jae
nop
and
dec
inc
jmp
out
pop
inc
aad
inc
jae
in
push
jecxz
inc
jne
aad
les
ror
dec
sub
push
mov
stos
or
dec
sbb
xchg
lret
add
test
ljmp
inc
repnz
lcall
mov
fisubl
out
mov
aam
clc
cld
dec
mov
shl
insl
stos
fsubl
xchg
call
mov
aas
daa
fs
inc
call
add
push
pop
inc
test
pop
cwtl
ljmp
data16
shlb
or
stos
xchg
mov
lret
add
inc
mov
jmp
dec
ss
outsl
pop
int3
sbb
inc
sub
repnz
int
pop
cmp
ds
mov
stc
mov
cli
clc
shlb
addr16
aam
popf
out
cli
sbb
dec
add
cmp
jo
pop
sub
inc
int3
daa
lods
sbb
fld
mov
ret
inc
negb
cmp
or
mov
pusha
add
mov
sti
loop
imul
cltd
mov
sub
mov
aad
mov
div
out
mov
insb
out
addr16
ja
popa
sub
jecxz
out
aas
stos
inc
inc
mov
dec
inc
movsb
jb
xlat
test
push
mov
add
and
aad
out
rcl
js
xor
in
cmp
punpcklbw
lods
test
xor
lods
sbb
loopne
lds
push
pop
lods
test
pop
cmp
das
sub
jle
or
stos
cmc
shll
cltd
xchg
mov
mov
pop
lret
mov
adc
cmpb
push
mov
loope
pop
fsubl
add
cmpl
int
mov
pusha
jp
xchg
cmp
mov
push
test
faddl
sti
insl
xchg
sbb
or
adc
pop
or
jns
adc
jge
loope
mov
xor
das
xor
inc
je
dec
das
lock
inc
lret
cmp
ljmp
lods
scas
cwtl
jl
popf
sbb
sbb
fdivrs
push
jne
sarl
pop
adc
mov
cwtl
mov
outsl
and
sbb
xor
push
or
pop
ds
inc
dec
adcl
ret
cmpsl
js
xchg
mov
dec
test
dec
lock
iret
xchg
push
mov
ret
outsb
aam
inc
scas
imul
push
push
test
je
jp
in
fstl
fbstp
in
sarb
jne
xchg
stc
xor
sbb
mov
or
xchg
fnsave
dec
xor
fistpl
pop
jl
das
in
scas
mov
cmpsl
jg
mov
outsl
sbb
ljmp
jae
xchg
call
adc
xor
mov
out
fs
push
fs
adc
cmpsl
cmp
mov
test
enter
dec
cmc
xor
lret
shll
xchg
movsl
aaa
lods
test
popf
fsub
xchg
dec
adc
xchg
in
add
xor
jns
int
rol
xchg
lea
sub
sarb
xchg
mov
movsl
mov
cmp
test
arpl
sub
add
or
popa
push
push
jecxz
push
lods
daa
xchg
add
aas
jg
insl
fs
add
push
sub
dec
out
add
mov
lret
aam
addr16
xor
mov
adc
pop
frstor
mov
rcr
cmp
or
and
dec
inc
dec
aas
gs
mov
fnsave
jnp
cmpsb
arpl
scas
das
loope
sbb
and
jnp
lock
fimull
outsl
jb
fwait
jo
push
mov
mov
fiaddl
mov
loope
inc
pop
out
xchg
shr
imul
push
push
cld
xchg
xor
cli
dec
pop
pop
mov
cld
popf
flds
jecxz
out
loopne
aam
add
dec
popf
int3
cmp
inc
sti
mov
loop
loop
and
or
inc
stc
jbe
shlb
test
in
mov
and
or
push
sub
cmc
cmp
and
jg
pop
xchg
icebp
push
sbb
fldenv
cmpsb
xor
mov
xchg
pop
sahf
out
mov
shr
inc
push
jl
mov
cmp
fsubp
mov
sub
mov
inc
add
xchg
pop
aad
mov
adc
mov
sbb
ret
push
pop
nop
lret
push
dec
sarb
cmc
xchg
enter
fstpt
arpl
add
lock
sub
les
push
shrb
mov
mov
xchg
mov
adc
in
mov
adc
mov
and
pop
aaa
add
dec
xchg
loop
lahf
je
xchg
xlat
adcb
sbb
or
insb
je
and
fmull
push
loopne
xchg
mov
add
popa
bound
inc
loope
mov
mov
pushf
jmp
test
sbb
stc
cmp
pushf
push
jbe
cmpsb
xchg
cwtl
sbb
xchg
sub
insb
dec
cmpsb
dec
in
push
sub
jne,pt
cmp
jle
add
dec
test
push
mov
fldl
sbb
mov
sahf
test
push
and
jp
es
in
mov
bound
pop
out
cmp
push
and
or
fsts
iret
in
jb
push
in
pop
cmp
std
jle
jp
push
insl
inc
mov
lcall
sbb
pop
aaa
and
in
scas
push
int3
add
lret
cmpsl
mov
enter
cmp
aas
mov
out
jne
nop
dec
inc
imul
int3
in
mov
bound
push
cwtl
shlb
jl
cwtl
ds
iret
sub
pop
lock
cmp
and
sbb
xchg
mov
sbb
lods
xor
and
in
sbb
in
cmp
popf
mov
idivl
movsl
lods
push
jp
out
lcall
jns
addl
add
adc
loop
in
loope
mov
push
lods
jns
adc
and
inc
mov
sti
imul
xor
push
insb
mov
hlt
fwait
pop
mov
jg
scas
lea
and
xor
cmpsb
movsl
dec
test
and
sbb
jae
adc
mov
mov
test
jb
stos
mov
or
dec
adc
sub
in
pop
fs
mov
inc
mov
stos
into
sbb
ds
fsubr
ret
in
inc
out
call
fisubrs
pop
rcrl
push
lahf
addr16
in
sbb
or
repz
sbb
xchg
js
add
inc
pop
jl
push
adc
scas
pop
inc
lret
xlat
mov
and
add
ja
cmp
xor
sbb
das
insb
idivb
jns
int
pop
fdivl
mov
sti
cmpsl
inc
sbb
clc
shll
fisttps
jae
push
add
ss
sar
mov
lahf
inc
adc
fisttpl
lret
scas
sbbl
mov
add
int3
sub
out
mov
mov
cmp
enter
dec
xchg
into
popa
sub
dec
xchg
leave
jle
pop
std
das
xchg
xchg
mov
push
push
mov
fwait
inc
adc
cmc
icebp
push
mov
fldz
sbb
dec
inc
add
xor
scas
cltd
movsb
cmpsl
mov
sar
mov
mov
push
xchg
pop
scas
insb
imul
or
dec
jecxz
cld
adc
and
scas
aad
lahf
cld
sub
iret
jecxz
pushf
repz
dec
aad
shlb
movsb
and
icebp
fidivrl
es
and
test
ret
inc
ret
push
fwait
rorl
inc
mov
shrb
outsb
cmp
jbe
and
mov
pop
or
adc
in
jns
mov
mov
cld
add
or
in
out
rolb
aad
shll
sti
and
push
loop
mov
add
in
mov
mov
repnz
mov
lret
mov
test
or
adc
daa
pop
loop
aam
mov
pop
cmpsl
jb
jns
xor
push
xchg
cmpsl
mov
popa
sub
iret
cmp
mov
xchg
jg
cmp
xchg
fisttpl
das
and
fdivrs
add
lods
decl
daa
mov
cmp
jl
lock
lea
fdivr
push
sbbb
xchg
jno,pn
imul
test
aam
call
adc
push
adc
sub
mov
mov
jmp
xor
loopne
cmp
ficoml
sarl
int
and
xchg
xchg
jmp
inc
out
rcll
andl
mov
fs
push
push
mov
pop
mov
repz
inc
or
cmpsl
sbb
inc
sub
push
adc
scas
mov
jp
rcr
and
xor
and
in
lods
js
lds
stc
repz
xchg
pop
fisubl
xchg
sub
sbb
stos
and
push
inc
add
and
lea
subl
xchg
mov
inc
jmp
imull
add
add
rcr
xchg
add
cmpsl
idivl
xchg
sub
nop
jb
xchg
sub
mov
mov
lret
xchg
stos
jns
mwaitx
cmp
inc
xchg
fisubrs
mov
xor
loope
mov
sbbb
mov
fwait
outsb
in
andl
imul
cwtl
pop
ljmp
loope
add
stos
ljmp
daa
out
sbb
add
mov
into
ja
jns
dec
test
mov
popa
jge
scas
inc
xor
fstl
lahf
jne
addl
mov
or
mov
pop
pop
pop
dec
out
jl
divl
xchg
push
xor
jg
adc
mov
adc
xor
out
rorb
adc
int3
mov
stos
imul
fdivrl
add
es
out
inc
adc
mov
xchg
icebp
mov
out
mov
fidivrl
fxch
mov
inc
jl
sti
sarl
lahf
xchg
mov
add
dec
std
xchg
dec
cs
push
or
lahf
push
jl,pt
adc
xchg
add
cld
inc
add
and
lods
movsl
cs
sub
mov
or
cltd
cmp
and
pop
xor
repz
mov
jg
cmp
xchg
and
and
xor
pop
push
and
mov
xor
out
lcall
stos
pushf
dec
push
pop
jnp
shr
popa
int3
cs
sub
add
leave
jge
scas
roll
add
out
jecxz
adcl
fisttpll
jno
xor
xchg
push
out
push
insb
cs
mov
add
in
fisttpl
repnz
mov
inc
test
xor
cmp
pop
cmpsl
enter
xlat
and
shr
adc
cmp
cmp
leave
shll
sbb
and
movsb
mov
pop
es
les
ljmp
ljmp
test
js
add
add
cmp
mov
aas
sbb
fwait
cmovae
incb
xlat
mov
sub
cli
sub
sqrtps
fs
aaa
push
cmp
mov
fstl
and
pop
es
iret
cld
adc
mov
jae
loop
lods
push
jmp
fwait
sbb
xor
cmpsl
sbb
mov
xchg
jge
inc
jae
adc
into
sub
test
and
mov
outsb
inc
pop
jns
add
jb,pn
inc
dec
test
pusha
ret
cwtl
sbb
loope
xlat
mov
xchg
xor
repnz
mov
stos
xchg
and
or
cmp
mov
in
adc
leave
cmp
jne
add
cmp
sahf
xor
mov
out
add
add
pop
fs
and
inc
int
hlt
js
sub
aas
dec
push
iret
sub
xor
lret
orl
divl
mov
imul
lea
test
pusha
add
add
push
xor
jmp
mov
bt
cmpsl
jge
pusha
stos
out
ja
insl
sub
ror
pushf
mov
mov
cmp
mov
out
int
hlt
mov
pop
rolb
xor
out
lret
push
add
mov
and
push
aam
rolb
push
sahf
dec
add
inc
fcoms
add
pushf
int
sbb
pushf
dec
add
lret
scas
jne
out
jnp
in
fs
scas
addr16
das
push
and
sub
out
in
leave
xchg
movsl
sub
adc
lea
call
inc
jb
fldcw
int3
clc
loop
push
repnz
test
or
or
mov
ror
lods
lret
rorl
cli
xchg
mov
dec
sub
jnp
mov
dec
icebp
insl
cmpsl
testb
or
mov
out
cld
add
ljmp
mov
sbb
ret
lea
jp
xor
insb
testl
push
js
push
add
arpl
mov
cmc
sti
xchg
mov
int3
mov
mov
inc
jo
divl
mov
xchg
stos
js
outsl
and
dec
jle
and
repnz
gs
xor
nop
push
call
mov
test
fiaddl
insl
push
lahf
mov
mov
and
or
jmp
iret
sbb
xchg
xchg
lods
and
iret
lret
xchg
xor
lods
daa
addl
inc
lods
jns
pop
or
pop
inc
dec
jg
and
mov
imull
pop
inc
xchg
fsubl
icebp
xchg
cltd
adcl
enter
dec
or
xchg
push
inc
inc
jmp
push
outsl
or
insb
xchg
insl
movsl
xchg
aam
bound
cs
push
aam
addl
inc
or
into
jo
ds
push
cmp
push
out
popa
or
cmpsl
cmp
inc
mov
cmp
mov
dec
mov
roll
out
dec
in
cs
orb
sbb
add
lods
bound
cmp
sbb
push
aad
add
jmp
fnstcw
rcll
arpl
dec
jmp
inc
xor
inc
icebp
mov
mov
test
stos
movsl
cltd
mull
or
jno
adcl
mov
jecxz
dec
outsl
fs
out
mov
mov
sahf
lock
dec
dec
sbb
pop
fs
jp
mov
mov
push
lods
jns
fs
mov
lods
aad
ret
and
sbb
mov
dec
movsl
dec
imul
inc
leave
addr16
sbb
push
into
in
sbb
popa
xchg
cmp
inc
pop
xchg
test
mov
dec
stos
xchg
or
cs
adc
popa
icebp
xchg
je
adc
mov
sbb
pushf
call
xor
in
test
dec
mov
push
enter
or
add
pop
xchg
rcrb
xor
dec
pop
pop
rep
mov
dec
dec
add
cmpsb
dec
and
xor
push
or
jne
std
sbb
cmp
out
mov
ret
xchg
sbb
fabs
jge
sbb
hlt
test
and
mov
ret
fdivrl
in
inc
cmp
aaa
lret
das
loop
jno
and
sbb
mov
mov
pop
daa
mov
test
pop
sub
add
pushf
mov
imul
insb
loopne
or
in
lods
sub
sub
lea
cmp
xchg
jecxz
lods
adc
sbb
mov
jecxz
repz
xchg
cmp
xchg
push
cmp
push
dec
scas
es
cmp
lret
jae
or
sti
das
repz
cli
lds
imul
mov
push
fs
shlb
ret
ret
push
repnz
popf
mov
imul
mov
mov
bound
lods
push
out
xchg
daa
sbb
cmp
pusha
mov
push
adc
out
fcoml
and
insb
mov
ja
push
jb
pop
test
add
mov
movsl
data16
mov
inc
mov
sub
jae
sbb
bound
loop
dec
push
ljmp
lret
pop
pop
cmp
dec
mov
loopne
adc
enter
push
in
mov
jbe
and
add
cmp
add
mov
and
add
gs
jnp
inc
lahf
push
add
adc
mov
sub
addr16
push
into
mov
addr16
dec
cmp
xor
or
jb
or
mov
push
scas
push
cmp
push
add
ja
cmp
outsl
sbb
clc
xor
scas
loope
jb
xor
ss
stos
xor
notb
gs
sbb
sbb
xchg
dec
fistl
inc
cmp
push
sbb
inc
ret
xchg
add
lods
dec
fisttpl
sbb
xchg
nop
adc
faddl
aas
int
inc
int
popf
pop
inc
push
in
mov
or
lret
jae
ljmp
std
push
loop
adc
mov
inc
mov
pop
or
pop
sarb
push
repnz
rorl
dec
nop
mov
pop
outsl
adc
leave
imul
mov
les
stos
lea
call
jg
adc
jmp
fdivrl
fmull
subl
jnp
jae
rcrl
sbb
and
xchg
mov
lods
fldl
mov
xor
in
jge
push
adc
cli
xor
inc
inc
xorl
int3
sbb
push
or
das
ss
xchg
sbb
gs
cmp
outsb
arpl
ficoms
ljmp
fxam
loope
lret
pop
fmulp
or
fadds
cld
inc
sub
push
cwtl
int
les
pusha
mov
adc
inc
iret
mov
repz
mov
pop
cli
scas
cmp
daa
ror
lret
sahf
cmpsb
jno
mov
sbb
ret
lcall
dec
leave
insb
push
jle
test
jo
ret
fldt
mov
mov
lcall
xor
adc
testl
mov
arpl
add
dec
repnz
mov
adc
test
mov
arpl
arpl
mul
nop
lcall
push
fstpt
data16
jp
aas
insl
mov
xor
gs
addl
int3
jb
xchg
mov
insb
xchg
and
lock
ja
inc
loope
cmpsb
pop
mov
mov
ret
jo
mov
jbe
inc
xchg
fcmovnu
dec
js
js
mov
push
pop
sub
cltd
fsubs
mov
xor
enter
out
push
sub
mov
cmpsl
test
mov
ret
cmp
lock
jecxz
mov
sub
addr16
loopne
jae
dec
lcall
hlt
mov
cwtl
xlat
adc
sbb
xchg
pop
stos
dec
shl
push
test
xchg
loop
xchg
popa
jns
sarb
and
fildl
cs
xchg
jecxz
mov
cltd
cltd
stos
scas
lret
nop
jno
xor
mov
push
out
fdivrl
das
sbb
shrb
loope
mov
push
mov
and
sub
add
lea
mov
or
cmp
mov
mov
xchg
mov
jae
sbb
loope
xchg
mov
das
movsb
adcl
dec
aam
jg
gs
adc
add
push
stos
cmp
or
push
mov
in
test
xor
adc
and
dec
inc
jns
sbb
dec
push
lret
sbb
or
imull
and
ja
sbb
sbb
add
adc
enter
mov
loopne
sarl
mov
adc
cmpsl
pop
add
cmpsb
lcall
mov
mov
add
iret
or
loopne
rcr
jns
inc
aaa
xor
out
dec
movsl
stos
xor
or
mov
or
or
imul
jle
jo
call
int
lcall
pop
xor
or
jecxz
stc
jbe
jg
decl
lods
pop
sbb
push
pop
jo
fimull
ret
test
and
dec
into
and
inc
fildll
imul
ret
scas
and
fldcw
xor
cmpsl
xchg
mov
hlt
mov
lods
push
data16
js
das
add
cltd
stos
lds
outsl
jae
xor
fdivs
insb
inc
or
sbb
outsl
inc
push
aam
add
push
mov
and
xor
in
xor
add
mov
cmp
in
xchg
xchg
shrb
cmc
push
cmp
push
and
xor
dec
xchg
dec
repnz
mov
and
cmp
fstpl
decb
adc
jecxz
fucomip
pop
aas
jo
or
fcmovbe
insl
enter
inc
pop
out
xor
sbb
call
add
or
shr
push
daa
or
nop
insb
outsl
xchg
fs
cld
cvtdq2ps
ds
lret
popf
mov
push
cmpsl
shll
adc
mov
mov
cmp
scas
sub
scas
in
sub
nop
nop
pop
and
adc
add
sub
pop
sub
jne
pop
lds
mov
push
outsb
leave
imul
mov
or
ljmp
dec
fistpl
cwtl
frstor
inc
and
xor
pop
xchg
xchg
das
imul
es
test
xchg
shlb
test
sub
shll
cmp
push
repnz
in
add
cli
je
xchg
imul
adc
mov
xor
leave
jbe
outsl
sub
xchg
into
jge
stc
int3
inc
sub
test
dec
neg
or
clc
addb
int3
lret
fcoms
inc
into
pop
repnz
mov
jmp
jns
dec
xor
sbb
pop
push
push
fstpl
je
dec
shll
in
push
loop
ds
stos
push
dec
jge
push
cmp
inc
xchg
test
je
pop
pop
adc
clc
les
add
repnz
mov
mov
cltd
into
out
push
push
setb
mov
adc
mov
repz
lea
test
out
inc
test
mov
test
into
or
ret
or
psubw
jecxz
and
cwtl
sub
add
inc
insl
and
out
inc
inc
pop
add
ja
stc
sbb
mov
xchg
xchg
cltd
mov
mov
lcall
fidivl
inc
test
dec
shll
adc
popa
test
mov
push
inc
adc
adcl
push
inc
test
mov
xchg
aad
jle
mov
fidivrl
push
xchg
das
xor
cwtl
push
and
les
jecxz
lcall
sti
jge
js
lea
sbb
test
pop
insb
outsl
enter
inc
lea
mov
test
xchg
mov
loop
and
lods
movsb
je
dec
or
loop
cs
dec
push
or
scas
push
lock
ret
jne
popf
out
popa
cmc
lret
mov
fwait
jle
add
fadds
imul
and
push
xchg
push
rcrl
stos
dec
push
ret
and
notb
jns
sahf
stos
sbbb
rorb
insl
outsb
outsl
sti
sbb
and
movsb
cmpsl
mov
sub
jae
push
dec
and
negl
jle
fisubl
sbb
cmp
mov
test
and
jb
bnd
xlat
lcall
call
mov
decl
push
dec
sub
into
imul
sub
in
add
outsb
inc
add
cmp
ret
ds
mov
test
call
js
add
adc
aad
mov
pushf
pop
cmc
shl
dec
es
xchg
adc
test
mov
xor
jno
arpl
mov
dec
es
repz
push
mov
notb
xchg
stos
scas
mov
jle
repz
inc
lock
lds
loop
filds
xchg
mov
jmp
xor
push
or
insb
in
mov
cwtl
imul
lret
shrb
loop
xchg
mov
lahf
aad
cmp
mov
mov
popf
ss
mov
inc
and
add
les
jne
pop
mov
mov
ja
xor
jmp
pushf
les
cmpsb
xchg
and
add
test
cli
test
fldenv
pop
enter
sbb
jne
aas
cmp
int
dec
pop
mov
mov
ja
lock
call
out
cmpsl
aad
call
xor
add
popa
pop
arpl
inc
int3
dec
pop
mov
pop
enter
adc
and
lcall
mov
fdivr
std
mov
push
or
shrb
lods
adc
jmp
testb
sub
xchg
mov
adc
lahf
xchg
cmp
mov
loopne
mov
jb
dec
jmp
push
cltd
mov
cmpsb
aaa
ljmp
xchg
inc
push
hlt
leave
test
add
adc
mov
call
fcmove
dec
xor
jmp
repnz
push
xchg
das
mov
xchg
push
stos
pop
dec
sahf
cltd
out
push
loop
fldcw
cmp
pop
add
ja
mov
imul
repz
mov
and
cmp
data16
mov
or
les
cli
repnz
adc
lods
pushf
xchg
cmc
ficompl
idiv
aaa
pop
adc
insl
mul
adc
cs
mov
data16
mov
mov
push
cmp
adc
lods
clc
mov
and
mov
pop
mov
inc
shrb
adc
mov
adc
push
adcb
pop
mov
movsb
mov
into
push
jecxz
or
pop
lahf
mov
pop
repnz
mov
addr16
sub
dec
dec
dec
jbe
xor
popa
movsl
adc
xchg
les
rcrb
and
or
or
repz
push
and
sub
das
inc
xchg
orl
scas
loopne
call
jg
sbb
hlt
outsl
out
pop
push
cmc
dec
stos
xchg
in
dec
loope
and
mov
in
and
or
leave
lcall
xchg
nop
rclb
cli
fistpll
mov
out
pusha
imul
call
mov
jb
cmp
lods
push
add
pop
inc
repz
push
out
or
sti
xlat
mov
lea
loopne
ds
insb
lret
icebp
lods
js
jg
sub
jbe
out
mov
ret
cmp
mov
mov
push
add
dec
test
add
pushf
mov
adc
cwtl
js
dec
loopne
stos
mov
add
cmpsl
std
shlb
aas
mov
scas
inc
pop
lret
xor
jecxz
lcall
je
or
push
fnsave
repnz
stos
fbld
and
push
mov
cwtl
mov
jo
and
ffreep
add
adc
divps
xchg
push
or
rolb
add
adc
cltd
lret
pop
decl
dec
lods
xor
dec
pop
popf
ljmp
jno
inc
out
sub
sub
cwtl
jb
inc
cmp
dec
into
mov
aas
leave
sub
and
mov
dec
jo,pn
mov
sbb
pop
cmp
dec
sub
inc
fisubrs
mov
test
jl
cwtl
pusha
adc
fsubr
arpl
nop
xor
or
roll
lea
inc
das
out
dec
mov
sbb
xor
mov
ffree
mov
repz
jae
stos
outsl
pop
outsb
ljmp
in
popf
and
adc
in
jns
in
dec
mov
push
lahf
rcrb
lods
ret
inc
dec
sub
add
orb
int
cli
neg
iret
sub
pop
inc
decl
cmpsb
and
rcrb
or
xchg
push
add
jmp
jmp
js
adc
push
leave
ds
das
out
dec
fucomp
clc
stos
test
idiv
les
out
gs
cltd
movsl
insl
addl
adc
add
mov
pop
dec
or
jle
rol
ret
test
push
push
sbb
out
rclb
and
imul
lret
out
add
test
ret
push
inc
std
cmp
outsb
repnz
shlb
mov
jns
stos
jne
cmp
sbb
shl
mov
push
lods
lcall
mov
push
lods
or
jne
mulb
pop
icebp
and
js
push
dec
daa
xor
add
sub
mov
lcall
inc
and
add
decl
xor
jecxz
pop
xor
adc
adc
sbb
arpl
fmuls
adc
push
pop
jo
pop
movsl
jg
pop
insb
dec
sub
aam
mov
adc
mov
shrb
adc
je
adc
and
pop
std
cltd
repnz
fcompl
addr16
mov
mov
xor
dec
or
adc
ficoml
mov
push
dec
xchg
mov
dec
imul
xchg
test
jne
negb
jg
iret
mov
je
cmpsb
fwait
sti
mov
hlt
in
xchg
inc
jbe
mov
rcrb
scas
mov
pop
cmpsl
in
cli
sbb
add
jecxz
fs
jecxz
into
jb
cmpsl
inc
sub
sbb
mov
dec
ret
xor
insl
fstl
fwait
pusha
cmp
sbb
lods
mov
lods
mov
lods
sti
gs
add
jae
loop
xchg
xchg
rorb
mov
and
shrl
into
lea
push
call
xchg
dec
xor
push
repnz
dec
mov
rolb
sahf
jb
shlb
or
cmp
dec
push
lahf
insl
test
hlt
pop
jno
add
sub
add
scas
jecxz
xchg
mov
xlat
pop
shlb
mov
sbb
jge
movl
test
jle
je
xchg
shlb
sbb
mov
or
in
mov
shll
shlb
std
icebp
in
pop
mov
fisttps
imul
lcall
mov
inc
push
inc
jb
pushf
std
sbb
scas
sbb
out
cwtl
mov
add
adc
or
cmp
dec
mov
lods
movsb
mov
jge
xor
sbb
fiaddl
and
iret
xchg
pop
mov
push
jnp
sub
test
cmp
sti
daa
inc
sti
loope
mov
imul
test
scas
in
mov
xchg
cmpsb
cmc
mov
std
mov
insl
lret
push
jnp
rorl
xor
nop
mov
dec
mov
mov
loope
das
jns
insb
lcall
xor
pop
sbb
and
push
aas
outsb
cmp
inc
idiv
xor
add
in
push
movl
aaa
dec
stos
adc
leave
lcall
shrl
dec
jbe
push
mov
lret
jnp
clc
sbb
sbb
mov
sub
pusha
xchg
pop
lcall
and
jo
leave
dec
sbb
aad
popf
in
roll
enter
bound
cmp
jmp
sub
pop
push
arpl
add
pop
mov
inc
enter
xchg
shrb
xor
fimull
in
jns
inc
ror
mov
fwait
out
inc
vpblendmb
roll
mov
push
pop
or
insl
cmp
icebp
mov
in
aad
mov
jo
jg
and
xchg
sbb
xor
dec
push
cmp
jb
sub
arpl
cmpsb
aaa
shlb
or
or
xchg
loopew
dec
loope,pn
addl
cmpsb
mov
cmpsl
das
push
adc
repnz
hlt
dec
lcall
xor
jmp
sub
jne
dec
popa
mov
pop
xchg
cmp
adc
inc
shll
popa
repz
sbb
dec
push
jno
push
lds
fisubrl
inc
and
push
cwtl
outsl
imul
fsubrl
arpl
bound
push
test
pop
in
test
xchg
inc
cmp
jle
orb
mov
and
push
mov
divb
jno
cli
sub
movsl
mov
add
nop
rcr
adc
add
lret
nop
hlt
inc
or
or
jle
inc
leave
popa
cmp
adc
mov
jae
pop
mov
clc
sub
jg
mov
push
pop
sbb
and
add
xchg
or
nop
sub
mov
out
inc
sbb
push
xor
push
jae
inc
xor
dec
push
cs
stc
cmp
cs
mov
leave
les
icebp
and
test
imul
insb
es
and
mov
js
sub
daa
sahf
cmp
push
imull
sub
js
sarb
inc
aas
cmp
dec
cmp
insb
or
les
mov
fs
mov
and
adc
aaa
mov
ja
sub
nop
mov
or
jb
fcompl
inc
mov
or
adc
inc
push
xor
xlat
push
and
sub
lea
pop
and
out
jle
dec
sarb
iret
sub
imul
sub
cmp
xchg
mov
ja
jnp
dec
out
pusha
dec
iret
ret
loopne
ja
xor
push
push
imul
outsl
in
pop
hlt
das
dec
adc
mov
ds
push
mov
xor
lret
jnp
lock
leave
rorb
shl
loope
and
scas
rorl
sub
sub
mov
ds
insb
mov
rclb
jns
cli
scas
pop
cld
xor
jae
push
jnp
outsb
in
inc
xchg
les
xlat
adcl
insl
sbb
inc
mov
cmp
inc
scas
mov
push
loop
or
mov
aam
adcb
pop
xchg
popf
fcomps
or
sub
ret
xchg
ret
push
adc
enter
sbb
lcall
adc
mov
jb
lods
outsl
jns
cmp
cmp
sbb
inc
push
xlat
aad
aas
mov
sub
out
in
int
shrb
aam
out
bnd
or
dec
push
ficompl
pusha
mov
jne
mov
sub
push
or
or
sub
scas
push
in
fisubl
shlb
cwtl
push
cmp
cs
imul
jo
mov
cmpsb
daa
int3
xor
sub
mov
mov
cmc
fwait
mov
in
mov
or
xor
push
das
fsubl
mov
cwtl
adc
shlb
test
aaa
add
pop
addr16
and
jmp
stos
nop
imul
adc
repnz
sti
push
cmp
ret
stos
jo
ss
sub
mov
in
in
xchg
in
aas
andl
inc
leave
jne
add
inc
pop
dec
xchg
xorb
lods
inc
sub
scas
dec
es
outsl
jbe
sub
loopne
xor
adc
jnp
pop
movsb
pusha
gs
xor
bound
push
scas
sbb
pop
cltd
fstpl
add
bound
cld
xchg
cli
bound
sub
or
popa
orb
adc
xor
or
repnz
sub
ret
pop
xor
sub
push
mov
loop
sbb
aam
jg
mov
pushf
sbb
push
add
push
mulb
nop
and
lds
sbb
adcl
push
fisubrs
popf
mov
xchg
sub
lock
mov
push
xor
mov
lahf
push
cs
xor
push
loopne
dec
idiv
divb
loopne
and
data16
xchg
pop
insl
or
pop
cmc
jle
imul
jns
sahf
sub
push
shll
dec
in
mov
inc
xchg
dec
loop
mov
xchg
notb
adc
dec
aaa
cwtl
jo
in
into
cmp
and
sub
or
push
xchg
jg
fld
aaa
sub
add
sub
pop
fists
mov
mov
ss
mov
fwait
sub
int3
test
pop
sub
dec
push
aaa
cmp
pop
outsb
ljmp
fldt
xchg
sahf
or
pop
push
repnz
push
pop
test
and
adc
stc
pop
add
loope
push
and
sub
adc
mov
jmp
add
adc
xor
and
pop
push
push
add
fdivrl
jg
pop
lret
lcall
sbbl
decb
scas
aam
dec
mov
mov
push
aas
or
lods
ds
mov
pop
lret
inc
mov
outsb
jns
lahf
ds
xchg
jg
cs
aad
leave
into
sarl
ret
fldl
jnp
dec
bound
frstor
cmpsb
xchg
imul
add
fsubrl
mov
pushf
and
repz
sbb
fdivrs
xlat
jl
fxch
pop
jns
fsubrl
clc
fsubrs
or
outsl
pop
sbb
call
addl
in
or
int3
sahf
ja
notb
and
addr16
jne
mov
test
dec
cmc
shlb
sbb
and
test
cs
in
aaa
test
ss
insl
cmovge
pop
lret
xchg
stos
and
or
and
arpl
mov
jno
insb
sub
hlt
stos
sub
into
xchg
movsb
mov
pop
mov
mov
mov
mov
mov
lret
ficoml
or
sub
popf
jmp
cmpsb
loopne
test
lcall
mov
xor
fstpt
lods
xchg
rcr
imull
jbe
out
mov
enter
sub
lcall
mov
xor
mov
and
fsubrs
mov
mov
dec
stc
shr
and
push
inc
pop
pop
push
mov
testl
or
mov
mov
lods
dec
push
ljmp
iret
cmp
or
pop
es
test
movsb
out
inc
scas
jbe
aam
ss
sarb
pop
nop
pop
aad
mov
sub
mov
sbb
push
into
in
divb
sub
adc
xor
inc
jb
add
orb
dec
xorl
repnz
push
data16
loope
mov
mov
pop
scas
test
push
out
add
mov
mov
call
std
test
jge
mov
std
fimull
push
scas
jne
movl
lret
ljmp
cmp
loop
xchg
adc
enter
inc
or
mov
aad
aad
push
leave
in
dec
fsubrl
pop
or
xchg
loop
push
inc
aas
sarb
adc
jle
mov
insb
push
mov
mov
cmpl
syscall
add
stos
mov
ret
pop
push
sub
loop
sbb
sbb
mov
fcmovb
sti
and
xchg
xchg
xlat
push
jge
fcmovnu
mov
xchg
dec
jb
scas
xchg
std
std
xchg
dec
fisubrl
fidivl
adc
mov
xor
fldenv
push
xor
sub
pop
mov
aam
inc
sub
pop
jl
bound
sbb
cmp
iret
imul
pop
out
and
sub
gs
mov
mov
faddp
idivl
adc
or
mov
movsbl
pop
xor
add
jns
cmp
ret
mov
std
pmuludq
daa
addr16
sub
ret
clc
or
hlt
add
dec
popf
jp
dec
fs
adc
dec
fiadds
inc
push
in
jne
mov
and
clc
subl
mov
adc
inc
insl
cwtl
imulb
jp
ljmp
jno
sbb
int
lock
scas
push
mov
loopne
stc
dec
aaa
pop
je
sbb
pop
jmp
xor
add
jno
dec
cmp
cwtl
mov
pop
inc
push
xchg
or
into
pop
ret
testl
xchg
insb
lret
dec
xchg
das
scas
push
fcompl
icebp
cs
sbb
sbb
insl
in
stos
push
dec
push
sbb
movb
mov
in
ret
out
inc
fsubrs
loopne
in
ljmp
mov
mov
mov
sbbl
cmp
sbb
test
sub
xor
add
test
push
cmp
dec
frstpm(287
sub
enter
in
xchg
test
mov
adc
and
inc
ss
pop
add
or
push
movq
es
sub
stos
cmp
or
out
pushf
gs
jecxz
shl
loop
stc
roll
mov
pop
out
cmp
mov
js
mov
aas
push
adc
sub
loop
push
inc
stos
add
push
cmpsl
xor
loopne
inc
sahf
mov
dec
mov
imul
push
mov
outsl
inc
aas
out
and
push
jns
les
pop
jmp
orb
aaa
pop
loopne
ja
dec
cmp
pushf
cmc
in
xchg
dec
lods
jno
mov
ljmp
lods
mov
out
in
sub
sahf
repz
insb
insl
loope
scas
jl
rcll
or
pop
inc
enter
mov
xor
xlat
arpl
xchg
js
cmpsb
jge
xor
or
loopne
jns
inc
daa
xor
sti
test
dec
xor
or
jbe
adc
sub
scas
xchg
adc
test
lret
sub
fs
and
mov
jo
insb
jne
in
mov
or
lock
in
test
lods
pop
ljmp
mov
ret
mov
aas
fmul
out
mov
add
jl
cmp
cmp
sti
push
das
aad
pop
jmp
loopne
push
dec
xchg
jl
bound
mov
cltd
testb
jno
mov
enter
and
push
imul
out
xchg
pop
in
cs
fbld
sub
jmp
out
repz
test
mov
fldcw
fistpl
scas
scas
scas
popa
mov
or
scas
sbb
sub
sbb
cmp
je
xorb
dec
dec
and
jl
call
js
mov
test
sti
jne
cmc
jecxz
test
std
insl
cmp
popa
fimull
pop
inc
pop
xchg
movsb
cs
daa
ja
out
adc
aas
push
pop
mov
add
sub
adc
mov
sbb
pop
cmp
jb
pop
sarl
jle
das
loop
cmp
push
imul
gs
xor
mov
movsb
jbe
sahf
stc
mov
add
aaa
mov
shr
mov
push
add
stos
inc
pop
test
inc
sar
adc
stos
sahf
mov
push
and
popa
pop
adc
ret
test
mov
aad
ja
push
xor
mov
in
repz
push
pop
or
jl
jg
pop
loop
jne
repz
xlat
imul
adc
mov
adc
dec
jecxz
jp
jle
add
xchg
scas
les
mov
mov
fs
and
add
cs
das
mov
cltd
cld
lldt
cmpsl
mul
lret
push
dec
mov
das
jb
dec
call
pusha
pop
cmp
scas
mov
xchg
lock
sbb
sbb
dec
and
cli
negl
dec
or
and
mov
xchg
cmp
dec
push
stc
xor
aad
and
sbb
insb
jg
mov
dec
or
inc
out
xchg
add
stos
inc
sbb
jge
scas
sbb
cmp
sahf
popf
gs
inc
cmp
adc
fists
cmpsl
xchg
call
push
cmp
fsubr
mov
icebp
push
ret
outsl
ljmp
inc
repnz
jle
xchg
testl
cmp
ds
and
mov
ja
insl
scas
rorb
push
icebp
decl
call
pop
mov
xlat
pop
mov
pushf
cmpb
cmp
int
je
jmp
mov
adcl
and
or
inc
mov
xchg
addr16
in
and
and
nop
cwtl
jl
add
hlt
icebp
xor
and
fs
cmp
aas
movsw
fnstenv
pop
sarl
es
mov
das
lds
mov
cmp
mov
sub
outsl
jg
pop
pop
test
lcall
mov
xor
jbe
out
scas
mov
jb
sbb
lret
das
or
jns
rcr
push
je
xor
jnp
inc
sbb
nop
rol
rorb
xchg
push
mov
xchg
lcall
and
adc
dec
mov
sbb
lret
mov
jle
adc
call
dec
sub
and
sbb
push
adc
lgdtl
test
and
sub
fldl
jbe
fs
lock
mov
rclb
mov
jns
jl
ficoms
fdivr
inc
sub
mov
inc
outsl
add
dec
std
xor
test
stc
pop
nop
repnz
dec
cmpl
mov
jns
scas
loope
mov
icebp
loope
cmp
add
push
out
sbb
fildll
xchg
loop
dec
popa
popa
adc
gs
aaa
ret
jecxz
es
mov
adc
sub
shl
hlt
or
add
xchg
jns
ret
sub
arpl
add
inc
frstor
pusha
leave
fisubrl
sub
outsl
xor
les
ljmp
aas
inc
push
arpl
rcl
icebp
and
fisttpl
shll
and
add
jl
mov
sub
movsl
into
test
mov
push
adc
outsb
cmpb
dec
dec
js
into
mov
cmc
mov
fcompl
add
mov
int3
fisttps
push
push
adc
add
loopne
mov
and
shr
or
lret
xor
test
mov
insl
push
push
xchg
lds
xlat
rcrb
lods
and
test
out
or
test
aam
xchg
pop
adc
jae
mov
or
mov
mov
mov
mov
addr16
or
sbbl
xlat
inc
popa
mov
add
sbb
xor
jno
xchg
gs
dec
cmp
out
jg
jp
repz
fmuls
scas
inc
enter
xor
call
ss
or
mov
fwait
loopne
js
bound
cld
mov
shll
arpl
add
es
cmpsb
push
cmp
pop
push
cmp
mov
ds
adc
popf
cli
ja
icebp
stos
incl
sub
dec
push
dec
enter
lds
push
out
cli
xor
xorl
lret
orl
inc
mov
rorb
pop
xchg
cmc
inc
in
lds
cli
dec
arpl
jmp
mov
dec
pop
pop
insl
daa
sbb
test
adcl
mov
mov
mov
add
in
daa
je
aas
out
aam
fists
xor
icebp
sub
push
push
mov
incl
xor
mov
jne
inc
outsb
sub
dec
mov
in
jne
stos
push
xchg
xchg
jbe
es
push
jle
mov
sbb
xchg
or
lock
repnz
dec
test
pop
adcb
test
aas
adc
mov
mov
push
jg
loop
add
inc
jbe
sub
out
outsb
cs
cmc
daa
or
xorb
mov
adc
cmp
inc
xlat
mov
int3
xchg
xorl
dec
pop
mov
cmc
in
sbb
outsb
int
or
je
fmuls
pop
sti
push
outsl
jo
mov
outsl
mov
mov
ret
stos
ficompl
cld
mov
jne
je
mov
pushf
jo
cmpl
pop
roll
pop
xchg
add
cs
ret
mov
fldt
inc
in
jp
add
popf
aam
out
jns
imul
push
bound
mov
jns
or
movsl
pop
mov
aad
push
lret
or
rclb
adc
test
xlat
jp
jle
cltd
mov
sub
sbb
fwait
sub
jbe,pt
enter
add
pop
xchg
pop
inc
dec
or
lret
repnz
xor
es
insl
sbb
cld
inc
movsl
ror
xchg
popf
mov
notl
adc
cs
std
jecxz
jae
notl
jl
and
testb
sub
mov
inc
fwait
nop
popf
mov
rol
sub
test
push
mov
mov
cwtl
mov
int
pop
push
add
cs
and
mov
inc
mov
add
test
ret
cmp
dec
mov
outsb
mov
cmp
outsb
adc
or
ja
notl
stos
mov
or
mov
cltd
adc
and
push
inc
sahf
ja
dec
inc
sub
inc
push
fstl
inc
clc
es
pop
dec
jge
and
gs
jne
xlat
fcompl
push
adc
cmp
pop
xor
lods
out
pop
dec
data16
scas
arpl
xchg
adc
js
in
fimuls
cmc
mov
testb
and
fildll
insb
sub
int
das
shl
pop
mov
mov
push
movsl
inc
xchg
stc
dec
out
jae
xchg
sbbb
mov
inc
insb
movsl
adc
call
inc
sbbl
pop
add
mov
shrl
int
nop
fs
rcrb
ja
pop
int3
and
xor
dec
mov
sbb
mov
bound
mov
lcall
arpl
and
sub
pop
and
cmp
push
add
jnp
subl
in
xchg
mov
sbb
sbb
fcoml
out
pop
iret
inc
pop
clc
fadd
decl
cld
sub
pop
pushf
push
jmp
clc
addr16
cltd
in
fucomip
inc
jmp
cmpsl
loopne
out
mov
scas
fisttpl
cmpsb
xor
fldt
push
cmpsb
fdivrp
xchg
mov
inc
adc
loope
xchg
mov
loope
or
dec
outsl
or
jns
or
inc
mov
xor
jge
mov
push
nop
outsb
aas
jbe
xor
shrb
jb
jo
jnp
loopne
bound
xchg
pop
aas
mov
fstpl
shll
sar
int
add
mov
rcll
mov
lock
imul
int
mov
mov
sbb
push
pop
in
mov
pop
daa
xchg
out
or
in
aad
xchg
mov
scas
jle
lret
adc
xchg
nop
add
jns
test
pushf
andb
push
enter
fwait
dec
or
out
cmc
jecxz
movl
loop
pop
fmuls
mov
cld
int
or
mov
xor
adc
leave
je
mov
aas
cld
add
mov
push
mov
cwtl
mov
jmp
xor
dec
mov
mov
ljmp
adc
mov
cltd
pushf
inc
lcall
test
or
addb
jmp
cs
xor
icebp
cmpsl
gs
jmp
jmp
or
add
xchg
jo
bound
pop
pop
dec
repnz
push
pushf
mov
mov
sub
mov
lock
inc
fnstcw
lods
mov
mov
cld
dec
daa
outsb
add
mov
iret
sub
cmpsb
ficoml
push
decl
fsubl
mov
in
push
jo
inc
inc
jle
sahf
lret
popl
pop
lret
pop
inc
sarb
jp
rcll
xlat
nop
pop
add
jmp
push
pop
in
xchg
stos
pop
iret
or
jl
test
mov
push
xor
rcll
aaa
sbb
imul
lods
jbe
mov
sbb
dec
pusha
out
loope
xchg
outsb
es
and
adc
jl
pop
lret
sbb
dec
inc
and
push
scas
sub
xchg
int
outsb
cmp
mov
std
dec
pop
sahf
inc
psadbw
lcall
sub
xor
mov
adcb
add
jne
cmpsl
and
push
cs
adcl
lods
mov
cmp
lcall
aad
add
jp
pop
jo
sbbl
rcl
push
rorb
aas
cld
dec
sub
gs
add
xlat
push
mov
orb
aam
cmp
xlat
push
jecxz
lret
cmp
ljmp
test
jge
xchg
dec
xor
loop
scas
jmp
inc
adc
mov
leave
mov
inc
incb
jae
fiaddl
inc
ror
and
enter
push
or
mov
xor
js
sub
repz
lock
mov
xchg
pop
cli
sbbb
inc
cmp
mov
jle
mov
outsb
mov
movsb
xchg
in
push
jmp
imul
dec
popf
cli
outsl
mov
in
js
lods
ss
and
cmpl
push
mov
outsl
or
test
jmp
popa
aam
popf
fisubrs
out
add
dec
xor
cmpsb
orb
cmc
mov
xchg
xchg
ja
inc
mov
mov
xchg
pop
int
adc
ja
dec
test
push
mov
aad
cwtl
js
testb
dec
xor
int
movsb
insb
movaps
sub
icebp
popa
mov
or
add
cmp
cmp
js
mov
xchg
decb
test
add
add
cli
add
out
insl
insb
scas
pop
add
std
add
in
cmp
push
daa
or
bound
dec
dec
jle
call
sarb
test
in
rclb
ljmp
mov
roll
xchg
pop
mov
xor
call
out
scas
lock
sbb
mov
hlt
or
adcl
jb
or
adc
cmp
ja
jnp
jo
gs
loope
push
add
xorb
add
jl
or
inc
jb
pop
lods
cmp
dec
cld
int
imul
xor
pop
mov
inc
addr16
adc
je
mov
mov
push
ret
jle
fldl
sbb
loopne
mov
std
int3
dec
mov
xchg
adc
xlat
jmp
ret
clc
jo
pop
cltd
sbb
js
test
and
aas
into
xchg
stos
mov
sbb
push
cmp
pop
js
std
lods
adc
repz
xchg
cs
fwait
call
add
mov
fs
cmp
fcom
mov
dec
out
aas
mov
shlb
pop
jne
xor
out
xchg
movsb
pop
pop
ret
dec
ljmp
inc
mov
mov
addl
daa
out
jg
jbe
pop
dec
adc
jmp
push
or
dec
adc
in
or
clc
mov
pmaxsw
mov
and
fldl
inc
ljmp
jno
xchg
sub
inc
jo
push
roll
fldl
jge
iret
lret
sub
push
inc
loope
mov
fisubrl
jge
mov
pop
or
arpl
add
test
in
movb
lcall
sbb
lahf
loope
jmp
imul
leave
mov
lea
std
lods
ss
xchg
pop
rcr
fbld
add
in
pop
fwait
mov
and
not
popa
dec
and
xchg
out
xchg
in
jb
and
cs
xchg
shl
xor
out
sbb
jns
add
and
lret
cmp
mov
sbb
lea
sbb
adc
mov
pop
sub
xor
cmpsb
lock
cwtl
stos
jg
xlat
dec
addr16
jp
xor
mov
dec
cmp
arpl
mov
ficoml
add
aad
cmp
jae
dec
pop
mov
repnz
daa
addr16
mov
lahf
testb
ret
sub
shl
sub
fwait
mov
test
adcb
pop
shrl
jne
in
test
mov
dec
and
nop/reserved
or
push
mov
mov
lcall
jl
mov
and
in
push
inc
idiv
lahf
add
jge
stos
jge
push
vpcmpgtd
jge
pop
or
sub
mov
scas
scas
xchg
pop
movsb
pop
and
xchg
stos
lret
push
dec
clc
add
call
inc
mov
repnz
mov
outsb
sub
mov
cmp
out
dec
ljmp
sbb
mov
push
add
test
sub
jecxz
lahf
ret
inc
or
pop
out
push
aad
adc
leave
pop
popf
pop
wrmsr
jo
inc
xchg
xchg
vmulpd
ljmp
push
sub
pop
add
fwait
insb
jne
negl
sbb
cmc
fstpl
add
test
call
lret
call
cmp
aaa
cmp
mov
mov
or
movb
sti
xchg
mov
repz
add
fs
test
pop
and
loop
ret
pop
mov
jae
fwait
movsl
push
cmp
out
push
and
xchg
xchg
gs
pop
jns
fisttpll
int
xchg
nop
popa
or
ret
ficomps
sub
ds
iret
push
mov
mov
cmp
jnp
sbb
adc
mov
rclb
pop
mov
dec
xor
lods
lods
out
fs
cmp
lock
push
mov
sti
xchg
pop
cs
sbb
push
call
popf
leave
lcall
mov
ret
popa
adc
mov
stos
leave
sti
adc
cmpsb
and
add
ret
andb
mov
sbb
sub
in
movsl
cmpsl
xor
push
add
xchg
xor
ret
cmp
sub
daa
jnp
adc
scas
mov
cmp
lahf
scas
les
mov
cmp
xor
lods
adc
vmulsd
cmp
xor
jae
fs
mov
sbb
pop
iret
cmp
int
mov
jecxz
xchg
mov
and
dec
arpl
xor
in
pop
push
dec
and
shlb
pop
xchg
loop
repnz
push
jg
je
cmpsb
mov
sbb
out
adc
mov
fwait
mov
int
lds
push
loopne
add
mov
mov
pop
cmp
mov
lock
cmc
xor
ja
aas
cltd
popa
mov
cmp
inc
sub
lods
jo
js
jg
std
mov
fstl
popf
out
inc
or
xchg
clc
add
xor
lods
test
pop
out
mov
dec
int3
out
or
inc
push
mov
adc
loop
leave
out
mov
addb
dec
hlt
push
out
inc
mov
dec
xor
into
inc
cmpsl
cmpsb
push
dec
lds
cld
sbb
push
in
test
aas
dec
mov
dec
fsubrl
xlat
xor
mov
mov
les
testb
and
das
jo
leave
adc
aam
fs
jmp
xchg
mov
adc
sbb
push
push
adc
out
mul
xchg
testl
and
lcall
stc
gs
add
nop
jae
mov
cltd
adc
and
dec
cmp
mov
call
xor
into
adc
pushf
inc
inc
xchg
sub
hlt
pusha
mov
pop
sub
data16
shr
push
dec
scas
cmc
jbe
push
icebp
mov
jmp
xchg
mov
mov
push
cmp
cmp
nop
ja
mov
jo
xlat
mov
mull
jge
fcomps
in
xlat
clc
jne
jg
lcall
stos
mov
loopne
loopne
roll
xchg
add
iret
push
shrl
insb
inc
sub
mov
push
fwait
lods
cmp
dec
mov
cmp
mov
hlt
dec
push
sub
outsb
aaa
add
aas
sti
dec
sbb
loop
pop
mov
mov
fnstsw
and
lahf
mov
xor
out
ret
in
call
lock
push
xchg
ret
or
cmc
pop
mov
gs
jp
jecxz
mov
cld
ja
call
loopne
movsl
pop
pop
cmpsb
addr16
pusha
rol
dec
into
loope
test
sub
push
shrl
scas
js
push
out
lret
lea
pop
inc
inc
dec
push
jp
sub
popf
dec
aas
and
mov
jle
xor
sub
pop
add
ficompl
test
insl
inc
addr16
mov
xor
inc
shrl
mov
repz
or
in
cs
add
push
pop
cmovg
adc
scas
lods
pushf
int
or
lret
out
xor
pusha
das
sbb
xchg
cli
loop
inc
push
cmp
push
add
mov
push
ficomps
push
xchg
pop
cmpsl
into
in
cmp
and
js
dec
movsb
dec
out
adc
jne
cmc
mov
dec
imul
test
xor
sub
rep
jmp
cmp
test
push
lahf
and
cmpsb
pop
lods
jmp
jnp
sub
call
adc
ljmp
jmp
subl
sbb
int3
rcrl
and
mov
jmp
out
pop
enter
imul
mull
in
xchg
jg
arpl
in
les
xchg
xor
mov
mov
dec
int
xchg
adc
hlt
dec
mov
inc
into
scas
add
dec
cmp
movsl
mov
cmp
into
push
das
inc
dec
bnd
mov
cmp
jle
or
mov
ds
idivl
or
jl
loop
mov
repz
xchg
cmp
pop
test
mov
ljmp
mov
mov
fwait
inc
jo
test
ja
mov
xchg
and
popl
xor
lcall
mov
aam
push
push
ss
mov
and
fdivp
lret
mov
add
cltd
mov
aam
inc
hlt
out
jno
cs
xchg
jo
xor
fdivr
lret
int3
orl
jae
jmp
scas
hlt
push
and
mov
adc
mov
xor
xchg
push
mov
sbb
ret
out
fs
sbbb
cmpb
ret
xor
in
shr
stos
cmp
jmp
add
lea
and
push
scas
and
sub
and
aam
add
inc
das
sub
jmp
ljmp
and
cmp
jb
sub
add
orl
shlb
test
rolb
inc
push
mov
dec
fdivs
movsl
mov
sub
aaa
add
call
push
add
xor
mov
rcrl
push
sbb
negb
inc
jns
sahf
xchg
mov
inc
adc
cwtl
leave
or
xor
mov
jno
jbe
mov
iret
in
les
dec
mov
dec
mov
add
shl
lahf
push
in
mov
popa
push
das
or
and
pushf
std
mov
in
repz
in
xchg
xor
scas
aas
out
popf
sub
je
movsl
adc
xchg
xchg
push
xchg
cmpsb
xchg
push
into
jecxz
in
push
add
fwait
pop
mov
hlt
mov
adc
inc
jns
mov
fisttpll
out
push
sbbb
sbb
inc
and
xchg
sti
jl
cmpsb
xchg
fiadds
inc
cmpsl
push
iret
inc
pop
push
icebp
and
ds
inc
loope
dec
test
and
dec
mov
call
cmp
nop
jbe
mov
mov
andl
add
push
dec
sub
and
lret
and
xchg
imul
hlt
cmpsb
or
or
xchg
shll
jmp
and
mov
adc
push
aas
push
inc
add
dec
jo
push
lds
and
jno
std
stos
nop
push
dec
mov
sub
mov
inc
iret
sbb
ds
mov
test
adc
mov
arpl
and
inc
push
jp
in
cld
mov
cmp
imul
call
inc
lret
xor
shl
daa
shll
mov
and
fidivs
sub
cmc
stos
pop
sbb
leave
mov
xchg
mov
jb
jne
adc
outsl
dec
imul
rorl
loop
pop
clc
cmp
dec
sarl
es
mov
pop
cmp
push
sbbb
add
in
insl
xchg
pop
dec
push
and
cmp
loop
jmp
out
jno
arpl
shrl
les
hlt
jbe
push
inc
sub
mov
ror
stos
mov
dec
int3
rcl
jecxz
movb
repnz
push
and
jg
cmp
mov
mov
pop
outsb
jb
sub
aaa
out
outsb
adc
fdivrs
fwait
mov
call
sub
jbe
sbb
jb
mov
lock
scas
negl
add
push
mov
pop
cltd
push
pop
dec
test
aas
pusha
sbb
es
stos
stc
aaa
je
clc
push
subb
sarb
jno
inc
xor
sub
loopne
lahf
loopne
stos
outsb
movsl
inc
ljmp
cmpsl
sti
in
subb
xor
ja
dec
mov
cmp
mov
pop
cs
sahf
repz
shrl
daa
inc
jns
call
xor
pop
sub
cmpsb
and
stos
mov
ss
int3
add
insb
jg
aas
in
dec
jg
or
fisttpl
xchg
cltd
push
jo
mov
scas
xlat
fstps
in
scas
mov
imul
cli
jle
push
aam
xchg
dec
mov
test
icebp
push
inc
cmp
sti
imul
int
mov
push
xchg
sbb
and
sub
fldl2t
ret
hlt
adc
push
popf
mov
push
and
and
xchg
les
mov
fisubrs
mov
loope
mov
fistl
stos
push
push
kmovb
stos
fdivs
test
ret
pop
in
adc
inc
jb
not
or
dec
inc
loopne
cmpsl
outsl
mov
adc
xor
inc
or
addb
inc
pcmpeqd
cmpsl
pop
push
jo
fiadds
shll
add
js
mov
cmp
repz
push
jecxz
push
dec
loope
pop
mov
adc
mov
dec
jb
fsts
jo
scas
mov
pop
test
out
call
pushf
rcr
mov
mov
rolb
subb
stos
in
jno
pop
lea
loop
sub
andb
sub
add
or
call
xchg
cmp
sahf
pop
in
mov
xor
insl
xchg
pop
adc
shll
mov
jp
imulb
add
push
movsb
xchg
push
into
sub
sub
sti
mov
imul
or
push
jle
mov
xor
cs
push
outsl
ret
mov
out
inc
addr16
pop
mov
loope
mov
cmpb
jns
sbb
sbb
push
adc
cli
jne
js
movsb
lret
pop
lret
test
xchg
aas
negl
cltd
cwtl
jl
je
ret
adc
pop
mov
stos
stos
mov
jbe
sbb
pushf
rclb
or
repnz
lret
repz
popa
je
mov
push
fwait
cmp
jb
data16
arpl
push
lret
ret
pop
xor
arpl
push
imul
movsl
add
sahf
repnz
std
cwtl
jns
enter
arpl
divb
stos
mov
and
fistl
out
jno
add
lds
or
xor
imul
nop
pushf
mov
fists
sbbl
sub
mov
pop
das
repz
jmp
adc
andb
jns,pt
jecxz
add
adc
aaa
repz
sbb
in
cwtl
out
leave
ljmp
js
clc
test
mov
or
add
xor
cmp
shll
pop
js
dec
jno
cmp
sub
jg
pop
jb
sub
out
cmpb
xor
cmp
jnp
aad
scas
ret
dec
add
int
cmp
cmpl
push
inc
hlt
jno
ja
in
dec
mov
jns
push
out
call
mov
dec
scas
jae
mov
push
loope
adcb
scas
xchg
clc
gs
lea
mov
pop
jmp
adc
mov
stc
mov
inc
outsb
insl
cmp
lods
sub
sbb
rol
pop
fsts
cmp
lds
loope
adc
arpl
mov
mov
inc
ret
or
mov
mov
push
pushf
sar
xchg
ds
cs
fwait
xor
test
mov
fs
cwtl
push
ficomps
dec
pop
jg
push
insb
push
sti
and
mov
test
push
cmpl
insl
sbb
aas
pop
cwtl
shlb
adc
xor
fidivl
int3
int
ja
lods
jbe
dec
js
int
lds
adc
ret
scas
push
sbb
jp
dec
mov
xchg
mov
adc
mov
imull
add
sahf
adcb
jmp
mov
je
shll
jp
push
add
decl
lcall
test
scas
mov
fwait
daa
lods
fs
sub
mov
sbb
mov
add
xchg
sub
mov
add
ds
rolb
mov
pusha
jge
push
or
std
sahf
testb
xor
insl
lds
sti
pop
pusha
mov
inc
adc
sub
pop
insb
jl
rclb
add
push
mov
sbb
scas
adcb
push
or
jl
sub
mov
in
subl
and
mov
rcrb
loopne
xchg
add
inc
or
rcl
lds
sub
lcall
cmp
pop
adc
shl
pcmpeqw
and
lods
sub
dec
sub
jne
xor
or
rclb
xor
pop
pusha
mov
cmp
or
push
or
jns
int
and
pop
cmp
xchg
sbb
scas
scas
lods
pop
dec
jl
in
std
cmp
addr16
cmp
sbb
push
andb
push
or
gs
arpl
fstpt
ret
loop
enter
or
sub
xchg
push
andb
das
test
outsb
cld
push
push
pop
cmpsb
loopne
loop
adc
fldcw
xor
xchg
or
imul
fabs
pop
lahf
sub
dec
out
cmp
rol
jmpw
jmp
std
bound
lahf
mul
xchg
jbe
mov
andb
xchg
fwait
adc
mov
lods
mov
inc
push
leave
mov
xchg
add
dec
cld
repz
lahf
sahf
cmp
and
inc
dec
bound
and
in
mov
adc
lock
sbb
icebp
add
fisubl
dec
cmpsl
cld
cmc
jbe
fstpt
ja
dec
jnp
jg
out
daa
mov
dec
pop
cltd
push
xor
outsb
std
fldl
das
push
jbe
outsl
mov
mov
adc
pop
mov
jb
arpl
popf
imul
dec
and
cmp
mov
in
test
lahf
shll
lods
pop
loope
pop
aam
sub
push
cmpsl
xchg
push
push
jle
sti
je
xlat
mov
sarl
pop
clc
cmp
lret
test
loop
into
outsb
nop
js
mov
out
pop
enter
dec
frstpm(287
jno
rorl
xchg
movsl
cmp
std
das
inc
fwait
outsb
int
es
lods
pop
ja
mov
stos
leave
test
sahf
jmp
xor
adc
sbb
roll
addps
mov
clc
aad
ljmp
adc
mov
adc
jae
or
jp
enter
sbb
xor
lret
ss
fsubl
add
sarb
inc
jg
mov
or
pop
cmp
dec
aad
les
jne
sarl
shll
in
ss
fildll
imul
sub
adc
cmp
and
decl
or
sub
cmp
adcl
pop
test
add
pop
iret
jo
rcll
mov
mov
hlt
mov
jne
lret
xchg
jle
cmc
add
adc
loope
jns
repz
add
insl
mov
in
mov
cmpsl
aam
jg
mov
out
xchg
or
call
iret
stc
jnp
sbb
mov
popa
scas
jle
fcmovne
xlat
push
fs
adc
in
jecxz
xor
mov
sar
mov
test
adc
and
js
xor
jl
dec
mov
addl
adc
xchg
popa
push
mov
scas
add
div
sub
lret
testb
push
and
sub
les
stos
sahf
push
dec
dec
arpl
add
jae
push
data16
xor
fiadds
jne
lods
movups
mov
add
ljmp
cmp
cli
dec
test
sub
stc
xchg
mov
cmp
jbe
lahf
inc
movsb
lea
popf
cmp
or
push
int
je
dec
lods
ror
imul
cmp
cld
xor
bound
sub
sbb
mov
mov
dec
dec
dec
mov
movsb
je
cmp
std
and
cwtl
aad
repz
movsl
jg
shlb
ret
push
mov
add
mov
mov
and
loop
pop
loopne,pn
incl
cli
lods
and
push
je
movsl
and
cmp
and
aas
popa
mov
pop
daa
je
insb
loop
insb
sbb
cmp
stc
int
jne
nop
imul
dec
in
lret
lcall
adc
movsb
stc
icebp
aam
or
clc
pop
xrelease
fildll
jbe
in
rolb
scas
xchg
mov
add
mov
out
ret
ljmp
jmp
sub
fwait
in
data16
mov
test
and
bound
pop
mov
dec
cmp
imul
imul
xchg
dec
aam
mov
outsl
adc
fsubl
adc
add
sbb
pop
shlb
adc
in
and
sub
xor
mov
cltd
pop
arpl
test
out
dec
or
rcrb
aad
mov
cmp
cmp
popa
out
xchg
je
mov
sbb
mov
push
jl
aad
add
adc
adc
repnz
sub
arpl
filds
inc
gs
shrl
loopne
jge
jae
jecxz
hlt
lock
incb
dec
daa
fstpt
sub
in
incl
jae
and
adc
pop
jne
loopne
cmp
pop
fs
adc
xor
or
xor
or
btc
rcll
mov
ret
idivb
or
inc
enter
popf
orb
pop
push
bound
cmp
lds
nop
sti
scas
and
in
mov
xor
mov
dec
fs
jb
sub
shrb
fistl
cmp
cli
dec
adc
call
sub
call
incl
or
mov
mov
divb
scas
xchg
outsb
dec
lods
xchg
mov
repz
clc
dec
add
mov
lods
mov
add
xchg
xlat
hlt
cmc
sub
scas
sbb
icebp
sbb
mov
stc
cld
xlat
pop
icebp
mov
mov
mov
sub
icebp
getsec
xchg
cmp
movsb
xchg
sub
cmp
sub
dec
repnz
testb
in
mov
inc
les
rcrl
add
arpl
xchg
inc
inc
fcomi
cmp
dec
xchg
mov
sub
cmpb
rorb
fstpt
inc
mov
stos
in
mov
xor
clc
sbb
jbe
js
das
loope
or
fsub
and
and
sbb
stos
popf
and
lcall
mov
ss
insw
mov
test
movsl
inc
sub
dec
cwtl
cmpsb
mulb
fisubrl
pop
outsb
mov
jl
mov
push
leave
mov
fidivrl
or
pop
add
mov
test
add
jmp
das
ret
jmp
stos
dec
sub
sub
ds
int
fsubrs
fildll
add
push
in
adc
std
push
lea
lcall
lods
mov
movsl
mov
push
mov
adc
enter
dec
fldcw
push
pop
imul
popf
dec
add
add
movsl
lods
jmp
loop
mov
aam
or
int3
leave
fwait
daa
inc
imul
and
xor
fs
stos
outsb
shr
push
inc
arpl
es
out
sbbb
fimuls
cli
mov
pop
inc
inc
jle
ja
and
sub
jl
add
add
movsl
jno
sti
scas
jne
sbb
imul
jb
lock
adc
enter
cltd
push
in
jg
fistpll
mov
rclb
enter
xchg
das
mov
pop
je
and
and
xchg
int
jns
iret
popa
lods
xor
mov
push
mov
xchg
fdivrl
lods
mov
xor
std
outsl
daa
repz
out
and
gs
mov
jg
add
mov
dec
sub
pop
inc
add
pop
xor
bound
rorb
jbe
mov
mov
daa
shlb
push
imul
xchg
mov
cmpsl
mov
mov
jne
sarb
popa
cwtl
enter
test
dec
pop
aam
dec
ja
int3
and
or
xchg
in
iret
fstpl
lods
mov
sbb
jae
mov
test
mov
jae
cmpsb
test
mov
movsl
xlat
mov
aam
inc
jae
push
jecxz
push
test
out
mov
ja
movb
scas
sahf
jp
pop
and
shlb
daa
cmc
stos
cmp
add
pop
or
xchg
mov
std
out
movsb
movsb
lret
cmp
push
or
jle
lock
call
clc
pop
lods
divl
dec
mov
adc
push
ds
das
adc
imul
xlat
stos
je
stos
xor
xchg
mov
aad
sub
fld
imul
clc
jecxz
push
mov
jae
daa
pop
push
cld
mov
pop
sbbl
push
jne
push
or
stos
pop
mov
and
jecxz
or
pop
xchg
rcrb
pushf
sub
mov
clc
rcl
les
int3
mov
or
out
daa
leave
xchg
cmc
jge
push
jmp
add
pusha
nop
pushf
add
dec
pop
sbb
test
fsubs
mov
add
sbb
ret
mov
and
xor
aaa
dec
or
push
dec
jnp
mov
sub
inc
adcl
pop
xchg
pop
nop
fwait
pop
or
mov
mov
sbb
sub
iret
xchg
ljmp
jnp
mov
xchg
repz
lea
add
popf
sbb
xchg
pop
cld
sub
in
push
stos
dec
out
xchg
imul
pop
clc
mov
add
mov
cli
xchg
jg
outsb
add
pop
and
mov
fucomp
iret
sub
test
test
mov
sbb
or
cmp
movsl
test
insl
rol
adc
mov
shlb
inc
aaa
mov
mov
mov
xchg
jb
xor
nop
js
cli
test
dec
out
inc
sti
movsl
sbb
xor
pop
sbb
lahf
mov
mov
dec
sbb
push
and
daa
and
in
push
and
daa
mov
jl
dec
sub
pop
ja
dec
cmp
cmp
pop
add
push
inc
inc
das
repnz
call
inc
or
negb
cmp
push
roll
movsb
mov
xor
rol
imul
into
aad
setne
adc
mov
lret
sti
or
adc
outsl
xchg
das
push
mov
xor
in
pop
nop
enter
add
lds
xchg
lock
fldl
cmpsb
inc
push
lock
out
scas
push
push
dec
jle
cmc
popf
sahf
dec
stc
sub
mov
pop
sub
jne,pn
jmp
sbbb
fs
nop
cmp
clc
jecxz
sti
ds
pop
inc
and
adc
stos
addr16
adc
sahf
sahf
lock
push
addl
add
insb
fistpll
adc
cmpsl
cmpl
pop
xor
divl
mov
addr16
sub
adc
ret
gs
and
rcll
pushf
cmp
adc
xchg
les
out
mull
mov
dec
xchg
sbb
push
int
xchg
and
lret
sbb
jl
inc
xor
stos
dec
cs
pop
rclb
ljmp
mov
dec
mov
nop
lret
outsb
dec
lods
jmp
pop
out
ret
push
sbb
mov
mov
pop
mov
lahf
push
mov
cli
inc
ljmp
or
addr16
insb
adc
mov
cmp
adc
pop
xlat
pop
arpl
bound
push
inc
push
push
in
in
mov
popa
imul
jb
popf
and
std
sbbb
sbbb
aaa
add
mov
lods
xchg
or
orl
xor
in
loop
out
mov
push
mov
or
or
int3
into
sbb
outsl
sub
jnp
jns
lea
push
push
insl
push
loopne
and
mov
lea
shrl
sub
fs
sub
dec
rcrb
ds
inc
dec
cmpsb
rorb
adc
sbb
arpl
and
adc
je
xchg
std
xchg
pusha
mov
out
pushf
push
mov
inc
fwait
lock
aad
subl
jnp
jae
iret
pop
push
sbb
add
shrl
daa
xor
pop
sbb
jmp
scas
mov
divl
or
cmp
rcrb
pop
inc
mov
and
ret
dec
inc
fimull
xchg
mov
xchg
bound
jg
icebp
pop
aad
xor
and
cwtd
fsubr
sbb
lds
cmp
cwtl
fbld
lret
mov
mov
sbbb
pop
mov
sub
lods
les
lret
mov
adc
into
inc
test
dec
mov
loope
addr16
mov
lock
cmp
out
mov
adc
push
cmp
leave
pushf
xor
in
mov
sbb
insl
jmp
leave
dec
and
jb
ret
inc
test
push
sti
sub
mull
cmp
mov
fwait
xlat
fs
inc
sub
mov
out
jecxz
sub
pusha
mov
cmpsb
mov
insl
das
cld
inc
sub
imul
gs
mov
pop
mov
aaa
test
pop
jbe
mov
jns
pop
cwtl
lea
inc
ljmp
add
into
aaa
mov
or
jbe
dec
mov
xchg
or
sub
mov
mov
ret
leave
lods
sub
iret
or
xchg
mov
icebp
test
cs
movsl
inc
sarl
sbb
push
in
mov
dec
xor
pop
repz
ret
shrb
int3
dec
or
sub
insb
ret
adc
test
sbb
pushf
jmp
cmpl
cld
je
in
add
rcrl
outsb
aad
or
repz
add
aad
pop
popa
dec
cwtl
inc
cmp
xchg
arpl
mov
add
mov
add
xchg
adc
jl
int3
mov
cmp
mov
xchg
mov
sbb
idivl
xor
adc
pop
mov
cmpsl
inc
ds
jp
call
pushf
and
out
xor
sbb
lret
adc
xchg
inc
push
dec
repz
mov
cmp
in
xchg
das
xor
mov
add
mov
in
das
ss
mov
mov
pop
testb
xchg
mov
movsb
sbb
and
inc
test
jns
sbb
add
test
pop
jnp
int
add
inc
cmpsb
mov
jmp
in
cli
xlat
imul
inc
scas
jl
jmp
mov
cmp
add
xor
lcall
mov
insl
dec
das
dec
rol
shrl
dec
jg
jno
clc
lds
movsb
push
jle
imul
inc
nop
sbb
in
call
sbb
adc
repz
mul
bound
bound
jno
push
daa
jecxz
das
cmpl
aam
and
mov
xchg
mov
push
jne
lods
inc
ds
out
jae
loopne
pop
mov
cmpsb
fdivrs
sti
cmc
dec
mov
mov
icebp
stos
arpl
ficoms
loop
ds
js
jle
lds
mov
add
adc
sahf
pop
and
mov
jno
inc
add
add
cmpsb
inc
cmpsl
dec
push
jecxz
test
push
adc
pop
mov
lods
xor
les
das
outsl
mov
adc
add
dec
out
hlt
daa
fnstsw
rorb
lret
cs
xor
es
loope
insl
ds
iret
lods
scas
dec
movq
test
add
adc
aad
ds
dec
fnstcw
cwtl
shlb
pop
or
mov
je
in
movsb
lcall
rcl
sbb
jno
mov
in
dec
jns
jmp
mov
test
cmp
cltd
inc
daa
mov
outsl
mov
push
push
jl
in
mov
rol
mov
int
sbb
pop
jo
leave
jp
mov
dec
test
or
ljmp
pop
jns
loop
sarb
fidivs
xchg
mov
cmc
mov
mov
in
sbb
jmp
js
jo
jns
rcrb
jno
and
add
pop
scas
mov
dec
mov
add
inc
jg
sbb
aad
fbld
xchg
in
insb
mov
insl
lods
push
inc
or
sbb
lods
dec
repnz
jae
dec
xchg
int3
in
adc
add
or
pushf
inc
ds
int
gs
in
in
add
sub
in
jnp
js
stos
movsb
lds
pop
pop
sub
daa
out
xorl
clc
cwtl
fcmove
push
loope
xor
xchg
xchg
mov
xlat
lock
mov
mov
loop
stos
movsb
inc
mov
aas
inc
stc
xchg
push
push
cmpsl
into
mov
mov
cmc
lea
mov
dec
xchg
cmp
jb
mov
and
les
and
jae
jmp
scas
cmp
mov
push
fisttpll
popf
push
icebp
push
lahf
pop
lret
add
mov
mov
push
cmp
xchg
cli
jle
sbb
cwtl
cmp
int3
push
dec
arpl
sub
xchg
cmpl
daa
jo
dec
mov
stos
mov
jo
stos
mov
sbbl
clc
sbb
inc
dec
aas
in
and
in
dec
popf
mov
scas
addl
inc
mov
rcr
push
inc
movsl
mov
loop
lock
and
je
lds
mov
and
stos
mov
dec
cmpsl
pop
adc
or
je
in
insb
or
imul
push
clc
test
test
xor
dec
or
push
jl
xor
clc
ja
popa
scas
xor
add
lcall
cmc
stos
mov
xor
je
test
and
jmp
pushl
add
or
dec
ds
imul
nop
inc
subl
outsl
adc
movsb
iret
fistpl
mov
mov
push
shl
lds
sahf
jns
test
cmp
pusha
mov
and
outsb
mov
cltd
mov
shll
lods
imul
cmp
and
push
fs
aad
lods
in
out
xchg
cmp
mov
add
jg
xor
imul
sti
inc
adc
gs
push
push
stc
and
cwtl
je
dec
daa
cmp
jmp
cmc
sbb
pushw
incb
pop
cmp
frstor
in
fisubrs
inc
adc
popl
pop
jl
lea
js
sti
in
movsb
mov
xor
outsl
sbb
cwtl
adc
push
mov
or
lea
cs
hlt
movsb
outsl
mov
mulb
xchg
ja
data16
pop
jle
daa
cmp
or
icebp
sbb
mov
mov
ss
les
loopne
pop
mov
loope
jmp
jecxz
mov
imul
sbbb
and
es
sbb
pop
xchg
pop
adc
mov
or
jge
arpl
xor
js
rcrb
sysexit
rcrb
sub
gs
addr16
xchg
mov
cli
lahf
jge
lds
fmull
lock
mov
xor
adc
iret
leave
pop
sub
loopne
sub
lods
ss
push
jp
jge
lcall
je
ljmp
jecxz
in
bound
orb
dec
dec
fsubs
movnti
cwtl
mov
mov
jecxz
rep
dec
push
mov
aaa
icebp
xor
jmp
outsl
xchg
sti
fsubrs
fists
out
inc
inc
test
and
ss
push
mov
dec
and
imul
push
push
jae
dec
outsb
sub
or
loop
pusha
lods
mov
push
sub
adc
jno
xchg
fstl
or
dec
mov
dec
movb
sub
cmp
cmc
cmp
push
loopne
push
stos
hlt
sub
add
aam
fisttpll
xchg
aam
div
jp
dec
mov
push
adc
ret
mov
mov
jecxz
mov
sub
mov
push
jnp
loopne,pt
aad
mov
in
lret
jnp
pop
adc
cmpsb
mov
cmp
adc
adc
add
xor
cmp
cld
es
and
scas
dec
jmp
sub
adc
add
pop
cmc
negb
psubsb
xchg
cwtl
mov
inc
mov
out
roll
and
out
jmp
add
sub
and
out
sbb
negb
push
adc
sti
xchg
sub
loope
add
push
std
ror
xor
pop
jg
cmc
clc
xor
ret
repnz
pop
push
ja
adc
in
cmp
shl
cmpsb
imul
pop
ds
ret
in
fistpll
aaa
lret
sti
inc
cmp
fdivl
sbb
mov
pushf
jbe
cmp
jmp
pusha
mov
cmp
movsb
int3
xor
cmpsl
outsl
fistps
test
out
or
add
pop
bound
adc
mov
sub
ret
iret
mov
lret
jmp
lcall
inc
cmp
inc
mov
int3
je
test
push
xor
gs
mov
addr16
es
fistpl
mov
lret
cmpsb
in
jo
xchg
push
ret
imul
test
fs
push
push
push
sub
fnstcw
mov
shlb
add
ss
xor
lret
push
push
shrb
orl
sbb
mov
jge
outsl
repz
out
scas
push
and
or
pop
loope
cmp
or
ffree
je
mov
adc
mov
stc
xor
nop
jg
pop
ljmp
cmp
out
cld
jg
pop
cs
adc
fdiv
cld
or
cmp
xchg
sub
lahf
repnz
jno
repz
adc
adc
in
outsb
jge
sbb
dec
loopne
pop
pop
repz
les
icebp
push
es
lcall
sbb
mov
popa
loopne
int
push
out
pop
push
xchg
pop
shrb
sbb
adc
stos
ss
and
sub
push
test
xchg
mov
sbb
jno
pop
sbb
cmp
imul
xchg
stos
fs
stos
sub
mov
es
std
ljmp
or
fwait
and
inc
arpl
add
mov
in
mov
fisubrl
nop
cmp
push
pop
jb
je
sbb
jl
dec
loopne
out
jnp
pop
push
shrl
daa
mov
in
ffreep
mov
ja
ss
mov
in
movsb
lock
and
jge
pop
je
into
lods
xor
popf
sub
pop
jb
sbb
pop
lea
jmp
imul
stc
sub
filds
popf
dec
imul
ficoms
and
jp
jo
insb
add
cmpsb
rcll
ss
jne
xor
jmp
fwait
cmp
pop
mov
in
aam
mov
mov
fwait
sub
inc
aaa
dec
arpl
rclb
xchg
mov
ljmp
mov
and
and
pop
add
xchg
fidivs
fsubrl
cs
sbb
outsl
or
shlb
jecxz
orb
imul
add
mov
adc
sub
pop
sbb
add
loop
arpl
imul
pop
call
xchg
jle
cmp
test
push
aam
adc
daa
div
jmp
lea
out
mov
xchg
and
xchg
mov
out
adc
imul
xchg
lods
or
notb
lahf
xor
and
icebp
int
mov
rorb
adc
fadds
adc
mov
enter
clc
sbb
out
xchg
add
in
ret
jmp
les
add
or
lock
and
fs
adc
lret
imul
add
cmp
pop
cmpsb
xchg
sti
dec
out
call
sub
xchg
ss
imul
fiadds
repz
pop
mov
rcrl
lock
mov
mov
das
out
lods
pop
shrb
xchg
cmp
das
mov
dec
stc
aam
mov
pop
push
int
lods
push
xor
push
jbe
mov
pushf
std
icebp
jl
jno
aas
xchg
rcrb
sub
ficomps
xor
fcmovu
scas
nop
jp
shrb
or
cmpsl
mov
dec
inc
pop
pop
dec
adc
loop
jmp
jg
xchg
aaa
adc
popf
jmp
sbbb
cltd
push
cwtl
sub
ja
xchg
leave
hlt
mov
pop
loop
inc
fnstsw
cltd
push
xor
or
mov
test
push
test
and
call
or
push
ret
jo,pt
xor
out
sbb
adc
cli
pop
std
jns
sbb
cwtl
cmp
ret
add
push
outsb
cmc
cmp
popf
sub
and
imul
mov
push
dec
leave
pop
mov
xor
push
xorl
pop
cmp
mov
es
dec
sub
in
xchg
xchg
pop
xchg
pushf
clc
sub
push
cli
ficoms
loop
scas
lahf
push
inc
fisubs
loopne
jp
xchg
repnz
cmp
push
stc
outsl
pop
adc
push
fisttpl
stos
add
shrb
inc
cld
sub
or
ja
mov
add
in
mov
cwtl
outsb
pop
int
lcall
sub
and
popf
stos
cli
sub
dec
add
sbb
adc
mov
mov
mov
das
dec
popf
movsl
lahf
orl
test
mov
jns
push
bound
pusha
mov
cmp
dec
xor
xchg
lahf
lods
lcall
into
mov
nop
push
mov
or
in
inc
or
outsb
add
mov
gs
xor
daa
xor
jno
stos
cs
xor
dec
inc
mov
movsl
out
out
inc
test
mov
lret
mov
xor
dec
aad
xchg
andb
push
stc
xchg
movsl
insl
push
lds
xchg
pusha
mov
mov
negb
sbb
jg
jne
std
int
and
jle
sub
lea
push
or
add
mov
cmp
ss
call
mov
inc
fsub
mov
xor
lcall
jnp
adc
mov
repnz
jg
outsb
aas
cmp
jmp
sub
jecxz
test
arpl
cmpb
aad
cwtl
sar
pop
cld
test
pop
dec
push
mov
ret
into
cmp
xor
sub
stos
dec
fimuls
arpl
push
mov
mov
cmp
dec
push
aaa
cmp
inc
ljmp
sbb
test
cmp
int
cltd
fwait
or
cld
inc
fldt
mov
das
mov
mov
les
out
jo
xchg
repz
scas
imul
xchg
mov
mov
ljmp
icebp
sbb
gs
bnd
mov
jle
xchg
js
mov
dec
frstor
pop
xchg
or
shll
sub
addb
sbb
adcl
add
ss
enter
stos
sub
jnp
inc
sub
or
dec
ss
pop
rclb
imul
hlt
or
ret
das
test
push
and
inc
jb
lahf
bound
data16
loopne
lcall
and
push
int
aaa
xchg
mov
or
mov
leave
pop
xchg
inc
or
add
adc
sub
mov
not
lods
pushf
mov
dec
inc
ja
or
xchg
xor
pop
aad
sub
mov
insl
fisttpl
and
push
xor
in
cmp
xchg
cmp
pop
jns
sahf
dec
mov
addr16
mov
cmp
repnz
cs
push
dec
inc
mov
and
ds
int3
hlt
je
xchg
xchg
and
test
jnp
mov
jle
ja
jno
ret
in
mov
inc
xchg
js
inc
xor
aad
das
in
jns,pn
or
push
and
sub
push
mov
dec
sub
pop
xchg
cwtl
mov
push
mov
insb
scas
adc
orl
cwtl
fistpll
mov
sbb
push
xchg
jle
mov
and
xchg
pop
mov
push
push
test
call
mov
mov
pop
mov
sub
inc
sahf
and
dec
rclb
push
je
sahf
cld
jp
push
les
cmp
imul
push
cmc
negl
loopne
leave
repnz
adc
fwait
dec
loope
mov
mov
fucomi
scas
cli
mov
loop
pop
xchg
ss
dec
mov
cmp
jmp
adc
inc
je
dec
outsl
in
mov
sub
scas
pop
vptestmb
inc
jb
pop
sbb
movsb
xor
shll
adc
aas
jp
lea
mov
mov
push
lock
imul
pop
dec
into
addl
lods
mov
cmp
stos
push
xor
repz
mov
jmp
add
cltd
pop
std
negb
scas
mov
xchg
call
bound
notl
fiadds
pop
ss
inc
out
cs
cld
xor
aam
in
mov
jbe
jbe
mov
dec
inc
aas
ja
loope
imul
negb
pop
adc
sti
jbe
aad
xchg
sub
lods
pop
fnsave
cmp
lret
addr16
cmp
dec
pop
pop
insb
repnz
sbb
mov
jae
cmpsl
into
sahf
jle
cmp
setb
arpl
das
add
movsl
outsb
adc
jno
xchg
sti
sahf
jne
mov
out
cmp
js
fcompl
adc
mov
fs
dec
sub
leave
inc
adc
jle
dec
jl
imull
inc
lret
or
imul
les
xchg
inc
cmc
test
ja
xchg
sbb
push
xchg
test
cmpsb
mov
add
adc
arpl
stc
mov
shlb
cmpsb
fildl
cltd
inc
pop
lock
sahf
cmp
jns
adc
jmp
xchg
repz
sub
inc
sub
dec
push
xchg
out
out
rcl
push
std
pop
cmc
xor
loopne
push
aaa
test
adc
lock
stos
loope
jmp
fistpll
sub
mov
sti
sub
outsl
outsl
pop
lods
xchg
sbb
in
rcll
cmp
ret
cmp
pop
inc
cmp
add
ds
push
sub
js
cli
push
fisttpl
push
scas
dec
ss
ja
dec
sti
add
pop
ljmp
outsb
pop
ljmp
sub
jae
adc
fmul
sbb
inc
je
jbe
pop
mov
pop
jle
movsl
dec
or
mov
and
inc
pusha
lahf
xor
iret
sbb
fnstcw
popf
loop
adc
js
movsb
clc
leave
mov
xorb
pop
jge
cltd
mov
mov
fstpt
sbb
mov
lcall
dec
int3
lret
mov
in
push
xchg
mov
add
dec
mov
jmp
xchg
rorb
xlat
jl
arpl
stos
xor
enter
leave
sarl
stc
shrb
pop
pop
mov
lret
and
pop
insb
fildll
pop
enter
ja
in
mov
mov
mov
xor
filds
cwtl
sarb
and
pop
jb
mov
mov
movsb
rcl
fwait
mov
cld
arpl
or
sbb
test
or
sbb
dec
lcall
add
shrb
sub
out
pop
pusha
xor
mov
push
adc
out
ljmp
popf
jnp
sti
fucomi
xchg
mov
xchg
scas
push
dec
test
adc
je
push
cmpl
and
mov
ss
mov
fucomip
jge
mov
mov
mov
in
popf
sub
mov
pop
pop
pop
jecxz
pop
or
je
cld
pop
inc
sub
jo
pop
nopl
pop
or
ja
and
cmpl
mov
dec
or
dec
xchg
push
test
mov
add
aam
lock
ret
nopl
pop
jnp,pn
rorb
pop
rorb
cmp
rcrl
inc
and
xor
mov
mov
sub
xchg
out
mov
iret
lds
cld
lds
sbb
rorl
and
mov
data16
mov
mov
stc
out
mov
ss
cmpsl
dec
cmp
pop
pop
sbb
lods
xor
xchg
incb
dec
fs
mov
push
pop
adc
movsl
mov
fldt
cmp
inc
ret
out
xchg
stos
in
jne
mov
divb
jmp
js
stos
dec
out
aam
inc
pop
mov
out
sub
mov
cmp
repz
mov
mov
inc
sub
inc
jo
das
pop
mov
inc
notl
mov
ds
xchg
data16
xchg
lds
decl
and
push
ljmp
mov
or
xlat
pushf
sub
dec
push
pop
mov
sub
mov
rcrl
xor
mov
ds
roll
xchg
xor
mov
out
cwtl
jns
pop
ret
mov
cmp
and
sub
stos
fcmove
scas
push
movsb
ds
aas
dec
sbb
test
imul
xor
sub
xchg
and
leave
lods
pop
or
xor
mov
aaa
aas
add
mov
mov
fwait
ret
ja
loopne
add
sbb
push
and
leave
jmp
jnp
mov
adc
push
cmp
fsubr
inc
pop
or
lahf
push
push
stc
mov
dec
or
push
sahf
out
iret
xchg
hlt
xchg
ret
rorb
hlt
cmc
jl
insl
or
inc
in
jmp
outsl
xor
pusha
fdivrs
or
adc
imul
fnstcw
push
inc
or
clc
cmp
test
movsb
out
cwtl
dec
push
negb
sub
loop
cld
mov
sbb
cmp
sub
pop
inc
mov
outsb
les
mov
insl
popf
cmp
sbb
ja
push
and
loope
cmpsl
ret
dec
pop
mov
jo
inc
fistpl
mov
or
xchg
aaa
stc
and
ljmp
push
enter
push
popaw
jo
cmp
aas
pop
dec
push
repz
adc
mov
lds
sbb
test
mov
add
pop
xchg
aam
insb
cs
iret
call
aaa
or
rcrl
popf
sti
fwait
mov
pop
aad
adc
inc
jl
lods
push
popa
xchg
inc
pop
icebp
mov
jns
sub
jae
and
stc
in
push
icebp
pushf
lock
mov
je
outsb
stos
xor
iret
lds
xchg
addb
adc
jp
add
adc
pop
sbb
jb
sbb
cs
scas
cmp
cmc
push
inc
dec
inc
mov
mov
dec
jmp
inc
test
push
inc
mov
cmp
fldenv
das
in
mov
cli
leave
cwtl
inc
imul
sbb
cltd
jmp
cmp
or
fs
enter
sbb
add
adc
ficoms
cmp
test
repz
mov
xchg
mov
std
lock
xor
jne
loop
lds
and
and
jmp
mov
add
sbb
pop
jo
adc
call
xchg
cmp
pushl
and
mov
test
push
rol
mov
pop
nop
xchg
cmp
int
sub
mov
jbe
add
push
lcall
xor
sub
dec
mov
xlat
adc
test
sbb
or
dec
cli
or
imul
fwait
mov
ljmp
sbb
xchg
push
mov
push
cmp
fiaddl
lcall
call
nop
fcmovne
out
push
lock
cmp
jl
fcompl
decb
nop
jmp
aas
xor
mov
aad
aas
fs
mov
ret
pop
inc
jl
jge
mov
jns
mov
inc
fmull
adc
xchg
push
ds
repnz
xchg
hlt
mov
inc
popa
jbe
jp
xor
rorl
fwait
adc
inc
jmp
pop
out
sti
les
push
mov
insb
cmp
out
inc
push
sub
jmp
xor
mov
stos
sbb
jno
roll
cmp
add
leave
mov
loop
mov
mov
push
clc
adc
cltd
aad
leave
lcall
shll
lret
cmp
mov
pop
lods
push
cmpl
movsb
inc
adc
and
cmp
jae
out
push
jmp
mov
out
mov
je
pop
jecxz
test
cld
idivb
jae
aam
inc
xor
int
mov
into
int
mov
insl
jnp
out
jg,pn
lea
xchg
in
add
stos
aad
jg
shl
mov
stc
inc
jge
xchg
sar
or
enter
pop
mov
aad
mov
inc
add
add
push
xorb
dec
leave
xchg
stc
out
cmp
adc
dec
arpl
leave
bound
gs
and
fsubr
mov
out
imul
mov
pop
call
pop
mov
push
xlat
ja
lret
imul
dec
mov
add
cltd
inc
je
mov
lods
mov
push
pushf
mov
dec
or
out
dec
jo
or
xchg
mov
rorb
bound
sarb
pop
or
nop
lret
mov
jbe,pn
or
iret
xlat
sbbb
cmp
cmp
popa
jecxz
or
push
or
pop
in
loopne
jl
pop
clc
xchg
or
popl
jge
daa
aaa
ficoml
jle
lret
movsb
xor
xchg
add
bound
push
mov
xchg
or
or
cmp
je
xchg
subb
jecxz
mov
test
adc
mov
bswap
rorl
mov
aas
dec
sbb
aas
leave
imul
mov
stc
sahf
lcall
push
jns
push
adc
jecxz
pop
unpcklps
popf
jl
pusha
jp
pop
enter
jbe
inc
int
test
cmp
xlat
sub
pop
jg
jae
xor
mov
cmc
or
dec
repnz
sti
jo
test
inc
push
add
loopne
fidivl
pop
mull
outsl
dec
sub
pop
jecxz
lret
and
push
xchg
mov
pop
adc
fcmovne
adc
push
sti
js
out
lret
sbb
mov
jg
out
inc
and
mov
mov
addr16
pop
std
add
gs
add
inc
insl
jne
das
or
and
mov
and
iret
movsb
mov
mov
in
fldcw
test
in
addl
mov
jle
push
pop
jmp
jno
dec
inc
sbb
icebp
sbb
fwait
lahf
jne
das
pop
outsb
popa
mov
cmpsb
sbb
inc
icebp
xor
push
fs
xchg
push
cmp
out
out
push
sbb
sarl
mov
lahf
mov
mov
ret
dec
sub
rcrl
sbb
imul
fcomps
sahf
in
jbe
imul
push
dec
mov
in
in
into
push
jnp
stc
adc
scas
and
bound
pop
mov
pop
gs
add
xchg
loopne
aad
xchg
cmpsb
jo
fcoml
pop
imul
ds
adc
mov
push
push
cmp
pop
insb
cmp
pop
push
push
negl
notl
xchg
cltd
pop
out
in
pop
push
sub
arpl
fs
xchg
lret
popf
lret
daa
lods
jnp
fistpll
push
mov
nop
test
insl
lods
clc
jmp
cltd
xor
inc
test
out
xor
add
fisttpl
jmp
ss
or
fcmove
inc
ss
test
xor
inc
lea
gs
dec
push
lods
jb
call
stc
cmp
xchg
fdivs
daa
fidivrl
cli
je
add
push
test
cmp
imul
mov
lods
mov
push
jo
jo
outsb
fwait
movlps
mov
push
das
mov
mov
push
xchg
xchg
movsb
push
and
add
fwait
cmp
imul
sbb
and
orb
orb
xchg
sbb
xchg
dec
xlat
pop
dec
sub
ret
faddl
xchg
sub
icebp
arpl
pop
pop
mov
and
and
xchg
in
inc
add
inc
xchg
or
xor
rclb
jg
fdivrl
movsb
push
xlat
dec
pop
aaa
rolb
jns
mov
shlb
nop
jno
cs
fdivl
mov
jne
inc
mov
daa
pop
jge
cmp
shlb
and
xor
orb
add
in
push
mov
adc
push
lods
test
dec
inc
into
fwait
pop
cld
mov
push
pop
js
in
test
in
cld
pushf
mov
mov
scas
or
lods
rorl
imul
mov
adcb
cmp
shlb
shl
xlat
inc
loop
mov
sahf
sub
push
cs
pop
xor
in
pop
mov
sub
sbb
mov
repnz
push
test
lock
fdivrl
mov
leave
rorl
push
rorb
cmp
inc
test
pop
pop
mov
push
sbbb
outsb
cmp
pop
mov
dec
jbe
fisubs
loope
jge
add
or
sbb
sbb
insl
xor
lret
and
mov
dec
adc
int
adc
in
xlat
or
mov
flds
push
imul
adcb
test
mov
mov
adc
mov
dec
je
mov
lret
cli
jno
adc
push
imul
ds
enter
pop
test
xorl
int3
lods
push
mov
sub
addr16
sbb
mov
fsub
add
and
data16
ficompl
dec
sub
sub
test
pop
pop
and
outsl
pushf
push
leave
or
xchg
push
mov
mov
inc
push
popa
xchg
dec
lds
outsl
xor
std
add
aam
and
and
lcall
xchg
adc
test
ret
ret
or
mov
and
cmp
cmpb
pop
dec
mov
pop
inc
add
int3
jbe
sub
pop
push
dec
lods
out
sahf
setae
xchg
xchg
stc
adc
adc
cld
xchg
jecxz
xchg
dec
es
jbe
movsb
sub
mov
orb
lods
outsl
cmp
out
call
fmull
out
imul
push
testb
out
pushf
and
nop
adc
jae
xchg
sub
imul
in
push
jp
fnsave
jecxz
push
insb
xchg
lea
push
aad
test
dec
pusha
mov
iret
and
sbb
jo
and
push
mov
mov
mov
test
outsb
bound
cmpsb
jecxz
cmp
andl
mull
repz
int
mov
popa
loope
and
jns
mov
cmp
cwtl
icebp
cmp
jno
shlb
push
jge
bswap
push
sbb
add
das
jb
inc
rcll
jae
mov
jge
sar
out
mov
lcall
fcomps
dec
dec
xchg
adc
loopne
fdivl
xchg
mov
lock
and
popf
into
inc
pop
mov
lret
mov
test
pop
fdivl
iret
mov
sti
test
in
push
inc
and
orb
sub
movsl
ret
insl
adc
sbb
xor
adc
out
pop
mov
mov
stos
push
aaa
push
adc
fs
pop
sbb
int
pusha
adc
jmp
push
cs
cmp
pop
or
movsl
pop
jae
xchg
sbb
lahf
mov
insb
shrb
pop
testb
sets
mov
lods
int
mov
and
xchg
clc
jae
popf
loop
push
popf
pop
sbb
mulb
int3
mov
mov
xor
or
mov
leave
inc
or
push
fildll
and
test
cmc
and
stos
mov
cmp
push
xor
arpl
divps
loope
push
nop
and
dec
mov
pop
jae
lock
inc
sbbb
dec
xlat
rep
mov
repz
sahf
scas
fcmovne
cs
jle
push
rcrb
data16
add
mov
negb
mov
bound
pop
fstl
call
fsubrl
dec
mov
negl
cmp
pop
or
fdivrl
mov
shl
outsb
fisttpl
jle
sar
cmp
jo
mov
mov
bnd
loope
movsb
cli
cmp
fidivrs
push
xor
shrl
push
inc
add
pop
fldcw
movsb
push
out
fwait
cs
push
cmc
adc
into
dec
inc
js
out
jl
pop
mov
test
mov
std
pop
inc
and
mov
jo
sub
mov
mov
pushf
pushf
cmpl
add
dec
loopne
mov
repz
and
movsb
cmpsb
pop
inc
in
jmp
and
je
pop
push
popf
filds
fbld
mov
adc
mov
dec
adc
int
outsl
add
es
stos
std
jl
jg
add
mov
test
cwtl
pop
in
push
inc
jg
out
cld
jo
cli
out
cmp
fidivl
jbe
inc
shlb
repz
adc
rolb
xchg
and
leave
dec
cli
inc
dec
sarb
cmp
cmp
and
testb
adcl
into
ret
mov
lods
lahf
push
inc
in
bound
mov
jmp
add
cmp
xorl
pop
cmp
add
xchg
xchg
daa
dec
push
test
arpl
mov
inc
xlat
sbb
sti
scas
loop
mov
lret
js
push
pop
and
mov
ljmp
add
repz
icebp
fs
cwtl
je
pop
jno
into
outsl
xchg
push
mov
or
dec
call
mov
push
lret
pop
daa
mov
imul
add
mov
cmp
rorl
or
and
bnd
int
cli
icebp
and
inc
jno
scas
lods
cmpsl
pmulhuw
aam
mov
js
mov
dec
xor
dec
cmp
mov
xchg
mov
xor
xchg
call
cld
test
jmp
push
cmpsb
lret
fstl
push
es
adc
ret
cmp
and
push
cmpsl
push
push
push
gs
nop
dec
fimuls
inc
ljmp
cs
test
mov
stos
call
or
jo
sbb
push
cltd
cmpsl
lret
es
xchg
sbb
dec
das
push
das
stos
ds
and
jne
les
mov
and
dec
aas
dec
pop
xor
int3
xor
jb
inc
inc
add
mov
fnsave
inc
ret
jno
cs
pop
std
aad
imul
adc
pusha
fildll
out
push
scas
fstl
test
jo
xor
mov
xchg
or
and
loope
aad
shlb
xor
sti
cli
loopne
xor
lcall
insb
sub
in
repz
lock
notl
cli
clc
push
add
jns
rcrl
pop
popf
add
mov
addr16
cmp
push
pop
sub
mov
lcall
dec
cltd
ss
ret
fwait
popf
shl
scas
push
inc
stos
fimull
icebp
jae
cmp
xor
xor
push
jae
ja
push
lock
std
iret
cmpsb
mov
repz
test
inc
sbb
mov
out
sbb
adc
cld
push
mov
cmpsb
mov
shr
incl
iret
pop
ror
into
pop
push
and
movl
jg
and
lret
push
and
jns
test
fnstcw
pop
aaa
test
mov
cwtl
push
clc
shll
mov
movsl
inc
or
lds
aad
or
adcl
orl
or
add
adc
ficompl
jp
xlat
popf
lret
ret
push
mov
mov
pop
adc
cmp
inc
dec
or
sub
mov
adc
fists
xchg
and
cmp
jp
inc
sahf
mov
mov
mov
add
loop
icebp
pusha
xchg
xchg
insl
lock
xor
push
pmaxsw
cmp
add
add
push
sub
nop
fidivrs
sub
call
pushf
jmp
pop
xor
mov
dec
push
popa
mov
mov
outsb
adc
dec
inc
out
mov
lcall
dec
int
push
mov
cmc
add
sti
push
adc
or
xchg
jge
mov
mov
jns
xor
jg
je
pushf
add
sar
in
test
loope
std
rcr
rclb
mov
fiadds
adc
stos
inc
cwtl
xchg
stos
sbb
movsb
or
int3
clc
fcompl
and
adc
in
stos
dec
pop
mov
jo
mov
pop
inc
sub
in
sbb
dec
adc
scas
test
dec
bts
push
sub
mov
je
cmp
fsubrl
fsubrp
mov
pop
jecxz
cmp
test
and
dec
push
push
or
inc
jbe
mov
xor
xchg
test
in
loopne
jp
loopne
loop
test
adc
lcall
scas
sub
push
lret
pop
sbb
idivl
pop
mov
sub
das
xchg
setg
iret
xlat
popa
leave
and
icebp
outsl
int3
add
outsl
mov
xchg
pop
fdiv
pop
jp
sub
mov
cltd
addl
jae
cmc
call
in
insl
push
aaa
mov
sbb
movsl
jp
sub
pop
and
lret
fwait
das
rcrb
mov
and
test
lds
hlt
popf
fdivr
je
dec
dec
sbb
loopne
sub
test
movsl
and
daa
sub
jb
lock
mov
mov
loop
pop
sbb
xorl
rol
faddl
sbb
outsl
insl
sbb
movsb
cmp
lods
xor
inc
imull
adc
or
sbb
aaa
loope
enter
sahf
outsl
ret
jge
sbbb
jmp
lods
jno
imul
sub
fnsave
dec
lret
sbb
cmp
cmp
loope
jmp
ret
sub
fs
dec
aad
stos
sahf
xchg
nop
cmp
int3
jne
xor
dec
pop
push
jg
mov
cli
mov
push
rorb
cmp
movsb
mov
push
jae
pop
aas
out
adc
pop
or
fcomps
lock
and
in
push
dec
dec
pop
and
lds
loope
xlat
or
inc
pop
enter
xchg
daa
mov
fcoml
jecxz
je
xor
ljmp
into
lock
jecxz
cmp
in
mov
and
jnp
xchg
inc
cmpsl
shlb
test
pop
sub
dec
sbb
dec
gs
in
mov
dec
popf
cmc
lea
hlt
sub
ss
out
gs
cs
andb
xor
clc
add
jnp
lea
adc
adc
push
adc
sbb
pop
call
fdivrs
out
js
int3
push
xor
out
adc
adc
and
ds
add
andb
pop
nop
add
sub
sbb
pusha
out
inc
fstpt
jle
adc
rclb
and
vcvtsi2sd
xchg
clc
jnp
xchg
test
push
pop
adc
insl
rorb
push
push
xor
movsl
mov
inc
add
push
pop
adc
icebp
push
sbb
sbb
dec
or
mov
xor
test
mov
xorl
add
inc
bound
lods
sbb
test
fs
gs
mov
stc
outsb
pop
or
pop
imul
stc
jge
cmpb
hlt
dec
pop
loopne
aad
jp
sbb
jecxz
mov
xor
sub
std
in
lea
xor
cmp
cld
aas
dec
imul
or
aad
into
aaa
mov
rol
or
push
stos
mov
popa
mov
das
rorl
call
inc
and
push
fs
mov
out
cltd
push
mov
sbb
test
incb
repnz
mov
sbb
je
in
stos
pop
es
mov
rolb
into
shl
iret
in
cmp
inc
mov
sub
adc
mov
push
inc
int
xor
add
aad
cs
sub
lds
fsubrl
adc
into
cld
outsb
int3
das
jo
aam
in
rep
and
into
in
adc
and
lods
and
push
inc
addr16
adc
inc
xlat
push
xchg
sbb
or
sub
loopne
adc
push
adc
push
cmp
push
popa
nop
jns
pop
in
nop
lret
sbb
and
inc
mov
xlat
sub
dec
insl
mov
xchg
sti
in
add
dec
sub
sbb
inc
mov
adc
push
iret
pop
add
loop
add
outsl
mov
jne
lock
and
rcr
sub
push
xor
or
insl
jb
shlb
shrb
push
lods
fs
dec
and
push
mov
lcall
and
in
lods
out
mov
xor
lock
test
ds
out
idivb
or
out
popa
fadds
shl
adc
mov
jnp
xchg
mov
push
out
mov
pop
lds
push
mov
iret
dec
fimull
pop
movsb
cmpsl
sarb
stc
or
fwait
sub
sub
xor
or
sbb
pop
pop
sahf
xor
stos
pop
pop
int3
stos
aas
test
xor
xlat
mov
and
lods
dec
mov
push
jne
mov
ret
mov
sahf
ds
js
xor
xchg
xor
inc
sbb
mov
repz
mov
lahf
idivb
or
hlt
mov
dec
push
jecxz
int3
sbb
or
sbb
and
scas
andb
in
stc
cmp
or
ja
fcmovnbe
mov
dec
mov
movsl
leave
push
push
stos
fisubl
dec
push
out
mov
std
xchg
adc
roll
into
or
in
scas
adc
repz
jge
sbbb
inc
je
movsb
into
cltd
add
push
shrl
xor
pop
sbb
jnp
dec
les
jl
mov
in
iret
or
out
in
push
dec
add
lods
mov
call
fiadds
jmp
push
push
sti
push
xchg
sub
mov
xchg
mov
test
cmp
sbb
ds
bound
popf
mov
jne
adc
lods
test
js
jns
mov
ss
xchg
subb
lahf
call
ljmp
lahf
mov
dec
mov
and
call
pop
pop
arpl
outsb
and
aam
neg
test
push
inc
std
push
stos
out
and
sub
daa
mulb
testl
sbbb
pop
je
add
push
mov
test
xor
jb
mov
sbb
fwait
inc
push
push
xchg
idiv
xchg
adc
push
hlt
jb
bound
imul
lds
or
jo
jns
in
mov
pop
cmp
and
aam
mov
cmp
or
stos
arpl
cmp
sarb
jbe
jo
aas
std
inc
pusha
cmp
cmpsl
pop
add
fsubrl
stos
jb
pushf
xor
inc
mov
and
das
jb
xchg
cmp
ljmp
jmp
fisubrs
jle
sub
icebp
mov
fst
cmp
sub
jp
mov
aad
incl
sbb
cmp
lahf
cld
add
std
pop
rolb
xchg
mov
mov
add
div
mov
sti
cmp
in
insl
cmpsl
inc
sbb
mov
mov
pop
cmp
push
cmp
inc
sbb
cwtl
data16
mov
and
pop
leave
cmp
scas
sbb
fldt
adc
adc
sub
jmp
cltd
bound
or
jecxz
fcmovu
xchg
and
jo
and
inc
lret
iret
outsb
pop
dec
out
hlt
fisubrl
or
mov
mov
pop
jmp
out
mov
sub
je
test
cmpsb
cmp
fs
jno
repz
and
inc
out
stos
cmpsb
data16
adcb
push
push
sbb
jno
pusha
lea
xchg
scas
xchg
pop
mov
pop
jp
arpl
mov
mov
adc
lcall
jmp
repnz
lcall
scas
inc
push
leave
lahf
mov
xchg
xchg
lock
inc
shlb
lock
stos
aad
adc
jecxz
test
sbb
sbb
pop
and
xchg
jno
iret
mov
or
cmp
xchg
cwtl
or
adc
jmp
xchg
fistl
and
jae
or
push
jo
sbb
add
cltd
or
shlb
jne
ret
inc
sarl
xchg
fsqrt
std
aaa
pop
sbb
pusha
inc
mov
out
inc
loope
jns
leave
pop
sub
sahf
jnp
or
push
lea
aaa
inc
ss
mov
and
loope
test
out
push
push
test
xor
and
cmp
dec
ds
fisttpl
mov
dec
mov
add
jge
sub
jnp
mov
xchg
mov
das
mov
jno
dec
push
or
inc
add
lcall
mov
sub
in
rcl
jge
dec
push
and
addl
mov
push
add
lods
xor
push
test
idivl
imul
dec
leave
test
stc
and
lcall
add
filds
xlat
movsb
add
mov
sbb
inc
cmc
mov
jge
sbb
adc
sbb
jns
push
dec
xor
cmpsb
adc
jno
loopne
xor
cmpsb
dec
mov
data16
xadd
or
negl
ds
push
ss
lret
adc
pop
lahf
ljmp
lds
cmp
and
jnp
loop
dec
and
sub
jae
xchg
test
imul
movsl
mov
fsub
lds
xlat
rcll
xchg
lods
mov
cmp
fldenv
fucomi
jmp
mov
in
sub
mov
adc
push
push
int
cwtl
test
xor
lock
cmp
aad
pop
aam
jmp
lock
xor
cld
mov
xchg
dec
or
lods
cmp
adc
mov
aad
add
movsl
sub
mov
imull
ss
outsb
jge
xchg
mov
push
shll
add
mov
dec
cld
movsb
mov
arpl
inc
cmpsb
pop
lret
das
pop
mov
lock
add
mov
push
fucomip
pop
scas
lods
push
es
aam
add
es
add
jns
mov
les
cmpsl
fsubs
mov
mov
ja
dec
mov
std
pop
pop
daa
shlb
jns
outsb
les
test
das
jp
dec
dec
dec
sub
mov
subb
xchg
xor
push
stc
popa
stos
jge
je
jge
nop
mov
cmp
jo
or
nop
jge
pop
fs
or
xchg
fcompl
outsl
mov
and
fldl
mov
popa
fwait
das
cmpb
add
inc
mov
mov
enter
cmpb
pop
mov
cmp
mov
arpl
and
movsb
lret
repnz
mov
inc
pop
sbb
pop
cmc
out
cmp
data16
stos
icebp
test
pop
iret
js
sub
gs
data16
mov
mov
shrl
mov
popf
insb
cmpb
cli
mov
in
psrad
iret
or
cmpsl
sub
jecxz
addr16
adc
enter
fwait
movsb
dec
cmp
push
mov
xchg
pusha
test
pop
shll
ja
andb
idivb
pop
insl
push
add
add
insl
ljmp
fidivs
dec
pop
lea
push
jmp
cs
and
daa
addr16
fmull
sub
lods
mov
cwtl
adc
push
int
lret
movsb
cmp
push
bound
testb
xor
out
cs
xchg
pop
insl
pop
pop
dec
imul
imul
dec
jne
shr
shlb
pop
push
push
rcr
lret
push
jp
dec
sbb
rorl
in
adc
xor
and
or
cmp
xor
xor
or
cmp
cmpsl
xchg
enter
xchg
das
outsl
loope
jbe
testl
pop
mov
sbb
in
xchg
scas
shr
add
fcomps
cmc
bound
mov
jns
pop
insb
and
into
out
mov
jno
inc
out
addb
js
add
test
sub
xor
aam
popf
mov
mov
les
js
arpl
adc
or
adc
push
or
cmpl
add
mov
call
pop
pop
mov
ret
inc
mov
jns
mov
outsb
pop
scas
cmp
rorl
xor
inc
in
cld
mov
das
popa
mov
cmp
add
fwait
sti
adc
xorl
inc
mov
mov
aaa
or
cmp
scas
xor
sbb
lcall
call
cmp
jmp
hlt
icebp
pavgb
outsb
push
dec
push
mov
sub
in
or
push
ret
imul
pop
pop
fs
push
subl
push
test
push
das
imul
leave
nop
shlb
rcrb
cmpsl
add
xchg
mov
aad
mov
pushf
ja,pt
and
enter
add
cli
cwtl
xchg
mov
out
iret
cwtd
push
pop
cmp
add
jmp
das
and
cltd
push
mulb
cwtl
cmp
push
mov
shl
leave
add
push
mov
mov
pop
negl
ja
sub
addl
hlt
dec
adc
xorl
ss
ss
sbb
inc
std
inc
inc
cli
ljmp
pop
sbb
push
nop
aaa
imul
xchg
jge
out
jge
push
mov
dec
fsubs
adc
dec
mov
je
movsl
mov
aaa
and
xor
adc
adc
inc
jae
sbbb
int
inc
lret
jnp
push
add
jmp
dec
fbstp
add
add
or
pop
insb
dec
mov
stc
push
dec
pop
call
jp
bound
pop
pop
mov
pop
cmp
scas
inc
jge
mov
iret
push
leave
cli
mov
ja
push
outsl
enter
out
in
mov
movsb
mov
mov
outsl
and
lods
mov
push
mov
xlat
mov
out
cvttps2pi
inc
inc
push
dec
psubb
imull
mov
inc
xor
fucomi
outsb
lret
hlt
aad
movsl
dec
inc
pop
clc
mov
jge
fnstenv
rorl
test
bound
test
cs
mov
mov
in
mov
cmp
lahf
add
pop
sbb
lods
aad
iret
sarb
push
pop
mov
sbb
mov
and
mov
sub
pop
pop
testb
sbb
sbb
popf
fmull
out
lds
jge
psubq
testb
xor
xchg
insb
sti
fidivrl
in
dec
daa
jae
dec
sarl
add
mov
pop
xor
xchg
test
xorl
xchg
leave
jb
xchg
inc
imul
mov
idivb
insl
sbb
dec
jae
mov
dec
dec
les
popf
cmp
insl
inc
and
pop
daa
mov
cmc
jge
incl
mov
movsl
jb
rcrb
lret
sub
add
scas
int3
xchg
orl
pop
cmpsb
xchg
sahf
jo
pop
add
and
outsb
inc
and
lea
mov
nop
xor
int3
add
jl
dec
xchg
push
repz
jl
and
xchg
scas
daa
push
gs
ja
and
and
inc
and
mov
jae
dec
test
xor
and
cmp
cld
fldl
mov
sbb
pop
xor
push
xchg
pop
popa
outsb
arpl
in
jno
inc
jmp
aas
pop
fiadds
leave
daa
repz
pushfw
popa
test
enter
dec
push
add
movb
add
lret
push
addr16
lret
es
xchg
fwait
mov
popa
dec
dec
mov
xchg
insb
daa
mov
pop
mov
and
lcall
add
outsl
jb
test
cltd
scas
aas
loop
sub
cmpsl
fsubrl
sti
js
dec
jne
fsubr
and
jmp
int
push
xor
or
fwait
inc
sub
cwtl
repnz
popa
inc
push
loopne
in
adc
jp
add
or
fidivrs
push
xlat
aad
pusha
nop
xor
push
cmpsl
sub
push
mov
dec
mov
sbb
iret
cmp
mov
clc
jnp,pn
sahf
movsb
cmp
or
jbe
pop
pop
shrl
loop
pop
adc
mov
mov
sub
adc
scas
js
mov
pop
fs
add
jo
xor
xor
push
push
xor
lahf
or
mov
test
cld
lea
add
xchg
mov
lahf
jae
test
fsubs
or
je
mov
std
in
xchg
sub
out
inc
push
inc
and
inc
shl
or
dec
xlat
jp
mov
cmc
mov
insl
ret
push
push
pop
pop
jo
sub
adc
cmc
in
lea
cmp
arpl
sub
xor
or
and
movsl
adc
std
out
cmp
jbe
sub
jbe
orb
sarb
xor
mov
in
ds
pushf
fadd
mov
sbb
lds
dec
jl
into
pop
fdivs
mov
push
xlat
lret
sti
mov
pop
fidivrs
add
repz
pop
arpl
cmp
add
imul
xor
push
cmpsl
fists
in
inc
fisttpll
icebp
sbb
jns
or
mov
imul
daa
jecxz
pop
test
push
add
stc
add
loopne
pop
cli
or
sbb
fsts
jbe
sbb
pop
mov
outsb
push
lock
add
or
shll
cld
mov
adc
mull
push
pop
mov
cld
outsl
lods
pop
ret
idivb
mov
loop
icebp
pop
ret
outsb
jecxz
les
fsts
dec
icebp
fstl
fwait
push
fldenv
mov
sbb
scas
mov
imul
dec
mov
xor
rolb
sbb
pushf
mov
cmc
add
inc
ret
fxch
lret
out
mov
sti
ja
pushl
pop
jg
mov
push
xchg
cmp
push
jle
out
fwait
movsb
adc
cli
in
jbe
sbb
enter
mov
push
xlat
sub
push
sbb
adc
aas
xchg
lea
mov
jae
xorb
and
lret
cs
into
gs
jg
sarl
jl
push
stc
sarl
cmpsb
popa
outsb
sub
test
push
push
xchg
out
cmp
mov
add
fisubrs
aas
mov
xchg
cwtl
mov
iret
xchg
clc
jbe
stos
inc
movsl
lret
cld
pop
lcall
or
mov
fdivl
pop
xchg
repz
jb
or
into
movsl
mov
push
ljmp
pop
and
divb
mov
ret
xor
test
shrb
cmp
fnstcw
jbe
faddl
test
and
daa
pushf
fistpl
and
xchg
out
mov
and
pop
add
dec
popa
pop
in
ljmp
and
rcrl
jne
hlt
dec
fidivrs
sub
test
addr16
bndldx
pushl
test
loope
insl
adc
add
push
out
out
add
loope
ret
pop
cmp
inc
cs
loop
lods
sti
xchg
fimuls
mov
cmp
adc
sub
das
sub
jmp
xchg
push
stos
mov
stc
pop
imul
jno
dec
movsl
xor
loopne
lods
mov
sarb
mov
pop
dec
ror
jmp
not
and
push
sbb
sub
dec
repz
insl
xor
pop
xor
mov
pop
outsb
sbb
pop
cltd
or
lret
sub
push
inc
xor
fldt
cmp
or
icebp
subl
and
push
inc
or
bound
mov
cmp
ds
mov
in
and
mov
xchg
xchg
nop
daa
or
sahf
mov
pop
push
adc
and
int
jb
test
or
je
out
mov
cmpl
cmpsl
mov
rcrl
rcrb
je
ficompl
mov
shr
nop
sbb
cmc
xchg
imul
push
dec
add
push
in
gs
out
jge
insb
ret
mov
call
ja
mov
cmp
mov
xor
add
add
or
or
xchg
js
cli
mov
insb
jo
cli
push
mov
dec
das
push
inc
jb
jnp
lcall
xchg
mov
rclb
cmp
inc
push
shl
xor
icebp
repnz
sahf
in
int3
pop
cmp
mov
test
scas
in
jle
mov
cmp
cmp
loopne
mov
cmc
test
cmc
lds
adc
ret
push
mov
add
mov
lods
xchg
pop
add
dec
sub
repz
xchg
les
jb
in
adc
mov
in
push
mov
cmp
jle
out
dec
push
xchg
mov
ret
and
lds
enter
mov
dec
jl
jge
mov
ss
leave
fwait
xchg
and
icebp
mov
adc
push
push
xor
jb
in
inc
adc
lret
fwait
loope
xor
and
fs
popa
insb
cmc
iret
push
mov
add
insb
jle
out
shl
pushf
fdivrl
xchg
jmp
int
add
cli
fprem
ds
loopne
pushf
cmpsb
xchg
cmpsb
lds
out
out
loopne
leave
push
jno
inc
adc
xor
push
lahf
or
jle
sub
xchg
jne
dec
call
sbb
cmp
push
jne
and
out
fs
les
add
cmpsl
adcb
ss
pushl
mov
call
mov
mov
mov
xor
adc
outsb
inc
xorl
xchg
das
pop
stos
and
add
and
out
sub
sti
cmpsl
int
orl
sub
xor
cs
and
pushf
xchg
inc
into
mov
dec
mov
repz
lock
test
jns
or
stc
int
jge
and
lds
add
out
jmp
sbb
xchg
mov
cmpl
jns
sbbb
inc
pop
test
imul
orb
xor
jo
mov
fsubrl
loopne
xor
jno
push
mov
lahf
jp
js
jmp
daa
inc
aas
or
pop
mov
ret
adc
arpl
out
idiv
ret
sbb
cwtl
das
jmp
rol
adc
pop
sahf
cwtl
cmpsl
xor
mov
ret
push
stos
jl
rorl
cwtl
cs
xchg
out
lahf
push
mov
int3
cmp
mov
cmp
stos
popa
imul
incl
out
mov
jle
and
or
and
pop
aas
addl
mov
hlt
in
scas
cmp
fdivl
xor
mov
lds
cmp
clc
pop
dec
ss
and
shll
jge
adc
inc
dec
mov
xchg
fld
adc
fs
out
xchg
adc
iret
test
mov
out
nop
mov
push
popa
xor
test
xchg
arpl
shlb
fwait
cmc
lods
scas
add
cmp
mov
adc
ljmp
dec
xchg
mov
fcomps
adc
cmp
fists
fidivrl
mov
cmp
lahf
fwait
mov
ds
rcl
jge
or
leave
fsubr
sbb
and
mov
ret
inc
dec
ret
inc
ficompl
out
or
add
lods
sahf
cmc
loop
xor
xlat
in
mov
mov
push
lcall
cmpsl
sbb
gs
cwtl
adc
mov
in
inc
inc
push
ffreep
mov
sti
jnp
pop
sbb
cmpl
jmp
cmp
das
jbe
movsb
scas
xchg
daa
js
xor
lea
jmp
je
sbb
fdivr
mov
nop
mov
fistpll
popa
sub
sub
in
or
dec
adc
enter
sub
aam
dec
sbb
sbb
cmpsl
push
pop
xor
roll
leave
aas
repz
mov
out
mov
cmpb
mov
adc
stos
ret
popf
nop
cmp
pop
adc
sub
pop
jge
in
inc
stos
push
iret
mov
lret
pop
mov
rorl
adc
dec
insl
pop
stc
stos
xchg
xchg
mov
mov
pop
push
and
scas
jbe
popa
fimuls
push
cmp
cmpsb
mov
xchg
addl
out
ret
out
cmc
and
sbb
out
repnz
int3
xor
lcall
aad
lds
gs
std
mov
aad
lods
and
and
and
cmpsb
pop
ret
push
repz
movsb
mov
mov
sub
cmp
pop
outsb
push
cmp
add
jae
ljmp
jno
sub
fwait
pop
out
pshufw
rcrl
leave
mov
and
pop
imul
add
pop
in
add
rorl
adc
fcoml
jae
mov
inc
fdiv
popf
adc
ret
sub
fs
xor
pop
jnp
pop
pop
call
pop
shrb
xchg
adc
add
inc
scas
test
fstl
xchg
pop
int
aaa
sti
insl
jle
shrb
sti
and
cmp
arpl
lock
or
add
inc
adc
sub
pop
cmp
es
fxch
adc
push
push
xor
xchg
stos
push
cmp
mov
and
or
xchg
iret
fsubr
cltd
sahf
iret
clc
pop
and
out
mov
mov
ljmp
fsubrs
mov
or
or
movsb
mov
jge
add
in
push
and
cmp
add
sti
jl
ficoml
enter
adc
fisubrs
iret
pop
mov
sbb
sub
sbb
xchg
sar
pop
add
addr16
push
jge
fistl
push
jp
cs
mov
mov
subb
lea
clc
inc
mov
or
jge
inc
sub
jge
popf
inc
add
pop
and
and
adc
shrb
in
testb
in
jmp
sti
or
lret
inc
adc
mov
pushf
sahf
or
push
ds
mov
cmp
scas
xorb
sti
cmp
jns
fldenv
cli
cwtl
in
or
mov
pop
mov
jmp
adc
loope
add
loope
xchg
xlat
dec
mov
test
movsb
outsl
je
and
mov
sbbb
cmp
or
aad
sbb
fnsave
and
dec
imul
jo
mov
subb
stc
test
mov
mov
cltd
pushf
lahf
mov
enter
xchg
test
inc
mov
out
testb
cmpb
repz
mov
subl
shll
jp
push
jl
icebp
stos
imul
pop
cs
fisttps
xor
daa
pop
sbb
in
divl
daa
lods
xchg
iret
insb
repnz
adc
adc
pusha
and
or
push
lret
enter
stc
pop
add
xchg
faddl
pop
enter
lahf
movsl
jno
dec
adc
mov
insb
jnp
adc
and
xchg
int
out
mov
mov
ljmp
mov
test
js
pop
push
shrl
push
inc
dec
fsubrl
sbb
sbb
call
xchg
xor
pop
test
pop
cs
mov
cli
popa
push
xor
inc
lods
mov
pusha
das
cli
inc
sti
je
rolb
mov
andb
lret
lret
xor
xorb
mov
arpl
mov
adc
inc
jne
shrb
push
mov
mov
jno
daa
xor
push
bound
loop
in
mov
push
push
int3
xor
dec
iret
fidivl
jo
push
test
pop
xchg
scas
push
je
mov
xchg
or
ds
inc
and
stc
cmp
sbb
scas
ret
cs
imul
inc
mov
ficomps
jmp
pop
xor
cmpsl
lahf
ds
repz
lea
xor
xor
sbb
fdivrs
lret
in
jno
xchg
lret
shll
rcrb
and
xlat
inc
jne
dec
xchg
pop
inc
sbb
sub
fdivrl
pushf
movsl
into
lcall
pop
xlat
jno
inc
mov
lea
pop
push
hlt
cmc
ret
mov
aad
or
imul
les
jge
or
mov
adc
push
ja
inc
mov
mov
out
das
add
andb
lds
sub
shl
hlt
jp
or
sub
and
jno
nop
call
xchg
or
jbe
jnp
ljmp
add
mov
dec
jmp
xchg
loope
pusha
mov
mov
or
sbb
fld
popa
xor
clc
push
jnp
mov
xor
scas
cmp
inc
ja
xor
push
pusha
mov
mov
mov
sahf
jecxz
xchg
xchg
xor
pusha
push
lds
add
push
in
mov
std
xorb
fcmovnb
sbb
hlt
cli
ss
stc
dec
pop
sub
adc
cmp
cmp
out
es
iret
mov
movl
jo
push
ret
int3
push
pop
mov
jns
lds
repnz
pop
pop
mov
out
imul
fisttpl
jae
inc
cmpl
daa
fists
aad
and
loop
mov
iret
inc
jmp
lret
ret
mov
cmc
inc
leave
sub
out
xor
in
mov
in
pushf
pop
or
roll
mov
imul
pop
or
js
fwait
pop
push
sub
pop
inc
lcall
aam
jmp
pushf
fwait
shrb
lods
bound
gs
je
nop
hlt
mov
xor
sub
andl
jge
and
jb
arpl
push
idivb
sbb
add
loopne
ja
dec
sub
shll
mov
jl
push
or
pop
insb
ret
fs
add
rcrl
test
push
popa
xchg
add
std
mov
dec
xchg
lods
jb
jl
and
inc
sub
leave
cs
sub
movsl
andl
add
jae
cwtl
dec
pop
ja
mov
sbb
cli
shlb
xchg
shrb
sub
cmp
fs
sbb
xlat
dec
and
push
ret
sub
and
mov
int
inc
mov
mov
fwait
insl
std
stos
cmp
clc
mov
into
pop
cltd
push
dec
fisubs
xchg
xchg
adc
sahf
xlat
jb
xchg
jp
clc
popa
pop
fnsave
scas
arpl
mov
mov
add
xchg
pop
pop
mov
push
incb
es
call
sbb
mov
shl
pushf
mov
pop
popa
popf
cmp
bound
int
int3
rol
repz
mov
push
iret
xlat
inc
mov
and
xchg
les
pop
or
rorb
mov
iret
repz
movsb
dec
add
or
jnp
imul
outsb
int
inc
imul
sub
push
inc
jle
or
inc
pop
jb
add
push
fs
mov
ds
add
mov
pop
gs
dec
aam
jo
pop
aas
bound
test
cmp
jle
inc
dec
idiv
xchg
push
cld
mov
pop
sub
mov
add
jae
daa
rorb
scas
fisubrl
sub
ret
pop
and
dec
mov
mov
push
push
cmp
xor
aad
scas
lock
pop
jno
add
mov
roll
push
dec
push
popf
pushf
jmp
popl
mov
dec
mov
out
push
lcall
push
push
repz
bound
jns
add
mov
push
and
ror
jp
out
bound
cwtl
jge
testb
sub
adc
scas
bnd
push
addr16
repnz
push
jp
jmp
dec
ret
dec
pop
mov
xor
arpl
mov
push
mov
push
dec
mov
xor
mov
xchg
pop
cmc
xor
loope
dec
fsubrs
fistpll
imul
mov
mov
pop
rcll
shrb
mov
xchg
in
cmp
add
lea
in
pop
xlat
lret
jno
jg
inc
rolb
adc
sub
cmp
sbb
and
xchg
inc
aam
mov
push
lret
or
rolb
inc
cmp
xor
repnz
mov
stos
sahf
fwait
cs
sahf
and
adc
out
cltd
iret
sbb
inc
mov
sub
lret
push
push
mov
fdiv
movsl
lret
xchg
jmp
int3
sub
les
test
cmpl
xchg
xor
and
inc
mov
cltd
idivl
mov
jne
cmp
lcall
pop
lds
push
dec
sbb
cmp
shll
add
pop
mov
pop
shll
pushf
cmp
sbb
jae
push
mov
pop
jns
push
pusha
dec
dec
xorl
xchg
cmp
dec
call
mov
fistpl
jle
push
addr16
or
mov
icebp
mov
jmp
fisubrl
cmp
and
mov
loope
fwait
ljmp
je
repz
daa
cld
fwait
push
jle
push
repz
out
mov
mov
and
dec
or
sub
dec
movsb
call
ja
outsl
push
jae
cld
mov
fsubrp
sti
mulb
or
gs
jg
outsl
int3
cltd
inc
mov
adc
fidivrl
dec
in
aad
cld
jecxz
sbb
and
push
cmp
call
sahf
xor
or
mov
sub
sbb
xor
call
scas
xchg
fldt
das
decb
movsl
faddl
inc
dec
dec
ret
das
jge
mov
aad
shll
inc
add
mov
xor
fdivl
insl
pusha
outsb
jne
jnp
test
pop
leave
and
hlt
rcrl
jne
push
xor
mov
sbb
xor
fwait
out
ret
scas
mov
testb
repz
mov
call
jnp
pusha
leave
sar
fsubrp
jb
es
mov
inc
xchg
push
sbb
mov
lods
lea
jb
push
dec
push
adc
ret
sub
mov
aaa
xor
bound
mov
lock
dec
ljmp
pop
pop
adc
xchg
xlat
mov
call
enter
pop
sub
cli
jmp
and
adc
ret
cs
push
xor
test
sbb
pop
orl
jl
or
mov
hlt
jbe
ds
cmp
push
push
in
pop
imul
xor
dec
pushf
xor
popa
mov
inc
dec
mov
cmp
rcrb
mov
pop
inc
pop
shlb
fwait
add
push
sbbl
lock
push
adc
fimull
leave
test
sub
data16
xlat
sbb
mov
sub
add
fdivrl
dec
rcr
enter
xchg
fs
push
cmp
int3
fdivrp
cmp
add
stos
ss
cmc
xchg
jno
test
fldl
or
cli
mov
adc
mov
add
mov
add
loopne
xor
ret
mov
xor
xchg
incl
cmp
mov
jle
inc
repnz
add
mov
sbb
pop
mov
pop
sbb
dec
stc
xchg
mov
push
push
jae
push
cmp
or
fisubrs
sbb
mov
cmp
add
mov
sbb
and
out
into
popf
mov
pusha
call
out
jo
adc
xchg
sub
xchg
and
dec
mov
popa
ljmp
loope
ds
jnp
loope
pop
sub
or
jbe
sbb
adc
sahf
mov
das
lds
add
xor
les
cmpsl
sbb
stos
fs
jg
cmp
dec
xlat
pop
repz
pop
cmp
roll
fcoml
pop
mov
je
test
or
daa
pop
add
pop
push
lahf
out
outsb
or
shll
push
dec
lret
cmp
and
push
dec
ret
jb
xchg
adc
mov
loopne
outsl
add
jne
fs
cmp
das
imul
or
jns
pop
arpl
outsl
jo
in
push
outsb
pop
mov
movsl
andb
jo
fiaddl
inc
scas
dec
sbb
mov
mov
gs
mov
dec
out
sbb
and
adc
mov
dec
xchg
js
loop
inc
cltd
bound
jg
nop
inc
outsb
bound
sbb
xchg
lods
push
test
and
rcr
into
clc
mov
mov
lds
inc
mov
aaa
jne
xchg
cmp
out
ds
insb
mov
test
sub
clc
pusha
or
mov
pop
jl
aad
inc
add
xchg
fisubrs
jnp
add
add
push
jge
arpl
cmp
rorl
sbb
dec
push
cmpsb
jne
mov
stos
dec
push
mov
cld
push
and
int3
pushf
sub
mov
xor
es
mov
dec
cwtl
or
mov
jno
ror
ret
ret
jns
inc
dec
fsubrl
int3
mov
mov
lock
scas
movzwl
call
push
xchg
push
pop
sub
jo
dec
sub
mov
sti
adc
push
mov
movsb
inc
in
push
test
mov
dec
jno
push
movl
mov
inc
orb
shrl
mov
movsl
xchg
lods
mov
mov
pop
clc
push
inc
mov
cld
lods
sbb
sub
pop
add
cmp
pop
xchg
inc
lods
cmpsl
cmp
cmp
imul
mov
nop
xor
je
sbb
fdivr
cmpsb
mov
add
pushf
jb
pop
test
fstps
addr16
pop
shl
pop
xlat
mov
dec
xchg
mov
stos
arpl
outsb
and
js
out
push
pop
jbe
in
cmp
push
nop
add
in
dec
and
imull
adcl
push
jne
aaa
push
std
and
nop
xor
fstps
xor
sbb
mov
into
xchg
lahf
pushf
add
mov
aad
cmp
xor
xchg
xchg
fs
insl
dec
pop
iret
hlt
inc
fwait
cwtl
jp
iret
inc
cltd
aas
adc
je
nop
push
imul
clc
xchg
adc
in
aad
outsl
imull
lods
and
lea
jbe
in
out
clc
outsl
lcall
cld
pop
inc
cmpsb
out
aas
xchg
std
inc
mov
sarl
jno
nop
lea
sbb
fs
xor
cmp
inc
jmp
repnz
leave
xbegin
aas
movsb
push
arpl
mov
pop
movsb
mov
inc
adc
or
cld
inc
imul
aas
cs
jnp
in
dec
pop
pop
int
mov
test
fs
pop
mov
xor
test
xchg
sbb
test
cld
jae
in
outsl
xchg
popf
imul
xor
test
jmp
mov
mov
lods
xlat
mov
cld
jb
pop
mov
xor
popf
inc
out
stc
mov
imul
jle
ds
push
mov
xor
jb
xor
adc
sbb
cld
or
sbb
fsubrp
adc
xchg
rcrl
inc
mov
adc
pop
pop
cmp
xchg
cmp
mov
xchg
and
shlb
lock
clc
pop
in
test
xchg
pop
int
dec
sbb
xorb
cmp
sbb
jle
push
pop
dec
je
test
lock
insl
movsl
rorb
cli
pop
les
dec
test
dec
stos
sub
mov
lea
dec
push
mov
add
cwtl
bound
adc
fsubrs
inc
xor
sub
cmp
test
sbb
jmp
push
push
aas
pop
pusha
jp
data16
shl
cmpsb
pop
aas
xchg
xor
lea
scas
dec
fucomi
adc
imul
pop
dec
int3
adc
jmp
cld
sti
jns
aad
test
sarb
fdivrp
push
in
iret
sub
outsb
scas
dec
or
incb
adc
adc
sahf
or
leave
lret
adc
out
cmp
rolb
xchg
je
mov
lcall
cmc
hlt
mov
pushf
push
and
and
and
or
or
push
fs
push
shl
cmp
mov
push
arpl
push
dec
sarl
lahf
movsb
jle
lcall
push
dec
stc
and
mov
fldt
pop
test
movsb
int3
fs
je
scas
pop
add
inc
jmp
vmaskmovdqu
stc
testl
mov
iret
xor
in
fcom
inc
notl
push
int
sub
cmp
inc
jae
repnz
pop
test
subb
ljmp
js
cmp
mov
out
rol
inc
mov
jae
adc
ret
mov
es
lds
movsb
or
and
push
ret
call
inc
adc
xchg
inc
adc
bound
dec
shr
sbb
jbe
adc
dec
or
jge
insl
icebp
and
jbe
or
mov
mov
addr16
sbb
bnd
rclb
sahf
int
test
jae
pop
aas
cli
mov
call
mov
mov
ret
pusha
push
imul
movsb
fldt
fwait
or
pop
imull
push
xchg
jns
popa
ja
and
out
mov
cwtl
adc
adc
in
arpl
or
xor
and
xor
xchg
das
loop
fstpl
pop
mov
pop
leave
add
push
sti
call
jge
outsb
jb
in
test
mov
jg
push
mov
cmp
es
cmp
mov
xor
and
cmp
dec
lcall
mov
cmpb
dec
in
leave
jne
mov
in
add
cmp
subb
xor
rcrl
aad
push
jmp
mov
add
test
jle
mov
mov
out
push
xlat
adc
pushf
test
imul
mov
leave
pop
jae
push
cwtl
outsb
bound
data16
and
cld
dec
out
scas
loope
pop
sbb
arpl
addr16
int3
cmp
or
or
mov
and
adc
mov
clc
cltd
out
test
mov
in
les
jg
inc
or
inc
test
add
sub
ret
push
and
test
loop
mov
sbb
pop
dec
push
js
stos
imul
scas
jle
xor
mov
push
setne
push
popf
and
inc
fyl2x
jnp
cmp
adc
loope
test
imul
push
inc
adc
gs
sub
inc
popa
cltd
lock
mov
faddl
xor
addr16
lcall
cmc
lds
add
and
adc
or
mov
mov
mov
lods
and
sub
ds
addb
popa
mov
pusha
or
pop
mov
ret
arpl
and
xor
lods
mov
shrl
insb
and
push
lahf
xor
outsl
cmpsl
stos
sahf
ret
mov
lahf
jbe
inc
popf
test
dec
cmp
jo
pop
mov
xchg
clc
out
push
jne
xor
mov
loopne
or
out
mov
mov
out
xchg
movd
jecxz
cmc
lret
sbb
cltd
mov
adc
dec
sahf
pop
cmp
inc
movsl
push
jns
scas
or
add
rol
pop
jle
sbb
pop
cmovl
out
sarl
hlt
daa
fwait
mov
pop
mov
sub
and
or
xchg
aaa
repz
out
jge
and
fmull
push
adc
pushf
rcl
enter
push
iret
push
adc
fwait
scas
add
push
in
sub
in
nop
rclb
xchg
notl
mov
das
adc
sub
lcall
subl
fstps
push
sub
cmpsl
xor
pusha
cmp
cs
mov
call
pop
data16
imul
jae
lcall
repnz
jge
and
and
aaa
dec
out
shl
cmpsl
in
aad
mov
push
dec
enter
pop
fmulp
mov
arpl
jne
in
in
scas
aaa
mov
inc
push
fadds
xchg
jbe
mov
ljmp
pop
cwtl
jae
es
xor
sub
sbb
lods
pop
jae
xchg
pop
mov
leave
cmp
xchg
xchg
cld
jbe
out
inc
in
inc
cltd
in
and
cmpsb
mov
jae
sub
imul
icebp
sub
test
inc
test
sub
pushf
add
and
mov
outsl
aaa
js
pop
scas
inc
sub
cmc
leave
mov
pop
xchg
movsl
shll
add
repz
insl
lcall
gs
js
dec
aad
loop
in
orb
scas
jle
scas
aas
mov
jle
jge
cmpb
pop
shl
mov
cld
sbb
loope
dec
and
lods
lea
mov
fs
sahf
jne
pop
rcr
pusha
es
jmp
pop
pusha
in
jl
clc
lcall
add
fnstenv
and
rcr
pop
sbb
mov
sbb
out
mov
pop
dec
fdivrl
mull
and
les
push
push
pop
pop
into
mov
push
sub
mov
inc
cli
test
xchg
imul
jbe
je
enter
dec
jmp
aas
out
ja
out
xor
xor
nop
sbb
inc
ja
add
mov
pop
insl
test
imul
lods
sub
leave
cmp
fstps
push
pushf
es
aas
pop
bound
shrl
pusha
jnp
sbb
jns
xor
xor
fs
ss
sub
xchg
es
sbb
nop
aad
or
inc
les
outsb
adc
jns
lea
or
test
into
push
insb
adc
stc
mov
enter
cmp
add
jo
sub
push
xchg
cli
out
pop
ds
inc
lret
add
adc
jb
and
push
call
cwtl
cmp
push
in
fsubl
xchg
aad
lds
lcall
loopne
push
pop
xchg
mov
scas
les
cmpsl
fdivl
iret
sub
movsl
out
sub
jbe
shl
sub
test
shlb
inc
add
popa
mov
mov
inc
movsl
mov
jne
lods
xchg
filds
mov
stos
xlat
add
cld
arpl
shll
or
stc
sahf
or
mov
cmpsb
lods
repnz
fwait
jno
shlb
dec
shlb
outsb
cmpsl
shlb
cmpsb
cmc
cmc
and
push
fsubs
enter
xor
cmc
test
push
dec
movsb
mov
scas
xlat
jecxz
jnp
mov
call
pop
dec
cmc
jo
daa
mov
sub
cmp
mov
fmuls
popf
pop
pusha
insb
xchg
push
into
pop
dec
inc
insb
dec
test
gs
and
mov
jle
cs
dec
mov
stc
dec
jecxz
out
insl
jmp
mov
lcall
popf
jnp
lods
call
hlt
outsb
push
mov
sti
ss
arpl
xchg
jge
loope
lret
add
pop
xor
out
out
xchg
inc
sbb
roll
loop
lods
std
test
push
ds
subb
hlt
stc
outsb
push
adc
adc
cld
inc
xor
daa
incb
xchg
les
je
sbb
xchg
fwait
adc
add
cmpsb
xor
ret
test
xchg
push
dec
int
out
inc
mov
xchg
leave
daa
jbe
ljmp
pop
push
je
mov
fisubrl
rcrl
jmp
mov
add
jo
and
test
mov
jle
xchg
sahf
sbb
push
imul
sub
ds
sbb
loope
popa
sbb
pop
shl
mov
rcl
jl
pop
push
jnp
orb
pop
orl
xchg
mov
cli
cltd
fdivrl
mov
arpl
jmp
pop
lretw
ret
out
pop
pop
and
rcr
outsl
adc
adc
mov
push
jnp
mov
mov
test
pop
xchg
imul
cmc
add
push
fildll
xor
pusha
outsb
pop
xchg
xor
or
mov
jle
jl
mov
repnz
push
fistps
push
or
sbb
xlat
jbe
push
mov
cmp
loope
into
fwait
jne
test
mov
mov
mov
cmpsl
decl
pop
in
mov
loopne
and
push
popf
mov
push
jecxz
in
sub
dec
or
fistpl
cmpl
lcall
mov
dec
adc
lahf
scas
adc
lcall
cmp
imul
xor
imul
jmp
shrl
das
es
push
insb
cmp
mov
in
in
leave
push
dec
imul
call
cmp
aas
jnp
mov
gs
cmp
es
out
and
add
add
sbb
sbb
std
xor
cmp
test
pushl
in
out
inc
mov
into
xor
fnsave
jb
in
mov
mov
iret
and
jge
adc
sbb
test
ljmp
sbb
clc
fildll
rcrl
xchg
daa
add
out
jb
xor
mov
pop
jb
pop
inc
cmp
leave
or
fbld
jb
outsl
dec
adc
dec
flds
jns
cltd
negl
pop
sbb
cmp
nop
call
hlt
call
fidivs
sub
arpl
or
stos
push
fists
iret
cmp
ljmp
xchg
adc
or
sub
dec
mov
and
xor
aas
push
pop
test
mov
xchg
pop
test
imul
aad
les
aaa
lcall
push
mov
outsb
mov
stos
add
jbe
dec
call
iret
popf
xlat
inc
jmp
clc
sub
aas
adc
push
add
ja
push
mov
fildll
mov
xchg
lahf
mov
les
cmp
sti
sub
jle
out
mov
popf
mov
jnp
fisubs
xor
ds
lods
and
movsl
inc
mov
jne
sti
xor
hlt
jl
dec
xchg
xor
out
mov
jb
push
jp
adc
movsb
lret
cltd
and
arpl
enter
ror
push
push
iret
cwtl
or
test
pop
push
call
in
and
gs
nop
lea
cmp
xchg
mov
sub
dec
daa
mov
out
addr16
pop
movsl
xchg
test
insb
imul
jno
arpl
cltd
xchg
inc
sub
roll
or
dec
adc
int
mov
xor
sub
daa
dec
cmc
std
nop
in
movsb
sbb
and
dec
mov
je
pop
out
scas
or
iret
mov
mov
fcmovne
imul
cmpsb
inc
jl
jmp
enter
sub
cwtl
test
adc
sbb
lcall
jbe
push
lods
inc
or
xchg
js
daa
dec
je
andb
dec
inc
xchg
sbbl
shlb
hlt
jo
jne
mov
adc
dec
xor
mov
lea
dec
cli
icebp
bound
je
js
and
sbb
adc
cmp
xchg
cmp
jmp
xor
push
dec
adcb
ss
mov
in
push
mov
inc
orl
jp
jb
cltd
cltd
fnstenv
or
xchg
and
popa
loop
or
xchg
outsb
pop
lods
les
push
add
test
cmpsb
sub
and
xorl
add
adc
rolb
scas
xchg
mov
xor
pop
mov
inc
ja
and
sub
mov
loop
inc
xchg
xchg
test
cltd
pop
mov
mov
pop
dec
mov
lret
lds
xchg
lret
sahf
in
out
mov
out
mov
jne
pop
jecxz
xchg
or
lahf
cmp
lcall
jl
dec
pop
sub
xchg
fiadds
mov
out
es
sbb
push
pop
stos
mov
je
jp
mov
xchg
sti
sar
fstl
hlt
mov
or
fndisi(8087
dec
fxch
or
push
or
test
pop
xor
fldl2e
mov
fstps
dec
add
negb
push
mov
xorl
sub
clc
lods
test
call
arpl
fisubrs
nop
out
pop
sub
faddl
push
int3
cmpsl
mov
adc
repz
lcall
add
ret
and
stc
loopew
fisubs
cmp
add
adc
adc
and
lahf
dec
scas
loope
ret
or
adc
out
jecxz
pusha
mov
xchg
daa
mov
lods
lcall
insb
inc
inc
jle
push
arpl
movsb
mov
xor
pop
push
mov
cmc
push
movsb
push
dec
sti
call
shl
xlat
lret
pusha
jns
sub
adc
mov
loope
outsb
or
push
inc
test
test
test
stos
movsb
pop
test
inc
push
xchg
imul
enter
stos
sbb
mov
test
test
adc
inc
sub
inc
jg
pop
out
cmp
and
xchg
xor
iret
je
or
mov
stos
push
jle
mov
aam
xchg
push
dec
je
bnd
ds
xorb
and
out
in
data16
sbb
cmp
nop
xchg
fisubrs
push
and
das
push
push
add
mov
and
xchg
pusha
cltd
andb
adc
fmul
test
addr16
leave
lret
mov
fmull
inc
pop
dec
jl
mov
ljmp
push
xor
ret
cld
push
sub
out
outsb
mov
mov
aam
cmc
mov
pushf
sub
leave
sti
lea
ror
call
xor
in
outsb
jge
pop
add
shrl
push
push
pop
loop
and
pop
movsl
iret
scas
push
loop
outsl
jns
dec
dec
test
mov
imul
or
jecxz
dec
sahf
pop
dec
xor
xor
shrl
movsl
ljmp
imul
jns
stos
sub
mov
push
rcrb
add
lea
nop
pop
sub
leave
dec
inc
lret
mov
in
dec
imul
mov
cmp
leave
mov
arpl
fs
addb
inc
inc
stos
lds
add
nop
mov
sub
ret
mov
sub
loope
or
mov
pusha
or
fcmovbe
inc
fstl
lea
xchg
jl
mov
and
ret
je
mov
subl
mov
jge
cmp
daa
or
inc
push
pop
or
rolb
mov
lock
pop
inc
dec
pop
fisttpl
aam
cmp
and
mov
movsl
dec
and
adc
dec
push
icebp
dec
lcall
out
fldt
test
pop
adc
adc
jbe
lods
lret
loopne
mov
sbb
push
sub
sbb
xor
mov
inc
js
xchg
sbb
rorl
stos
outsb
inc
or
daa
outsl
in
std
fcoms
pop
add
jo
or
popa
sbb
xor
or
stos
mov
mov
popa
add
dec
push
xchg
pop
inc
mov
jae
pop
xor
leave
imul
hlt
xor
pop
mov
mov
popa
dec
insb
push
mov
scas
xor
sahf
xchg
dec
gs
sbb
jmp
dec
mov
xchg
jmp
xchg
sbb
xchg
popa
lods
mov
dec
or
fwait
xlat
bound
enter
mov
mov
or
jns
add
sub
xchg
mov
dec
outsb
adc
xor
and
add
or
jl
addr16
sub
or
adc
outsb
testl
jo
inc
lock
xor
push
popf
mov
es
mov
pushf
or
loopne
int
ljmp
mov
xchg
insl
dec
adc
inc
push
push
sbb
lcall
int3
push
push
addr16
fstpt
js
popa
mov
push
fildll
mov
adc
out
cld
mov
mov
xor
arpl
in
lea
jmp
pushf
shlb
inc
aaa
loopne
mov
das
test
or
shrb
mov
pushf
jg
aaa
xchg
xchg
bound
hlt
sbb
mov
mov
fcompl
jne
inc
inc
sub
lds
lahf
pop
aam
adc
push
xchg
lods
push
lods
stos
sbb
add
mov
cmpsl
sub
or
add
nop
out
sbbl
inc
out
fnsave
rorb
lea
or
mov
push
push
inc
and
xorl
inc
xchg
jecxz
and
cmp
jb
stos
mov
pop
mov
cmp
in
lahf
and
inc
out
addb
pop
sbb
sub
insb
out
cmp
inc
test
mov
or
fcompl
push
mov
adc
and
lock
into
dec
addb
nop
jmp
dec
repnz
push
ja
cmpsl
mov
sub
mov
pop
push
insb
jmp
push
mov
adc
mov
inc
pop
push
rolb
push
popf
out
flds
rorl
movsb
add
scas
test
fs
mov
pop
add
in
and
inc
cs
jb
pushw
jbe
int
sub
cli
add
pop
sbb
and
bound
leave
int3
out
mov
lsl
lret
cmpl
or
pop
pop
pusha
jge
insb
nop
cld
out
lret
dec
mov
mov
push
jnp
loop
psrld
test
pop
movb
fwait
pop
pushf
in
lods
and
iret
test
loope
shll
push
or
es
mov
add
mov
lea
cmp
mov
roll
pop
data16
mov
push
push
test
repnz
imul
subl
jp
pushf
xchg
xlat
xor
cmpsl
stc
dec
arpl
jne
dec
jb
fwait
add
daa
mov
dec
cmp
pop
add
dec
outsl
addb
mov
mov
je
dec
mov
mov
jp
pop
repz
ret
imul
clc
dec
jmp
xchg
daa
das
hlt
movsb
out
sti
mov
cltd
xorl
outsl
push
mov
cld
sub
jo
lea
enter
sbb
leave
cmp
mov
testb
js
or
push
ja
in
in
mov
aaa
adc
sbb
sbb
scas
testb
test
rorb
cmp
pop
repz
cltd
out
mov
out
insl
iret
icebp
scas
enter
dec
fwait
jecxz
movsb
push
cmp
fsts
inc
dec
pop
or
jb
or
mov
rorl
ljmp
daa
ljmp
mov
js
push
movsl
cmp
test
jg
push
mov
mov
fmul
mov
out
imul
into
add
in
jl
cs
push
inc
adc
loope
cli
xor
les
leave
pop
insb
xor
sub
jecxz
dec
fdivr
je
test
or
sbb
scas
pusha
out
xchg
push
stc
js
or
aaa
in
popa
mov
push
pop
scas
add
sbb
mov
sub
jle
jmp
jg
mov
add
fisttpll
and
sti
out
pop
push
dec
jge
xlat
xchg
sub
mov
cmpsl
lds
leave
xchg
xor
bound
sbb
call
xor
xor
mov
sbb
sbb
mov
jno
cmp
jl
lret
or
dec
jp
and
addr16
test
fucomp
dec
dec
inc
test
inc
fmull
mov
call
movsl
idiv
mov
mov
add
jno
push
adc
and
add
mov
mov
insb
dec
dec
insl
add
nop
cmp
mov
mov
incl
test
mov
xchg
rcrb
add
mov
and
sti
mov
xor
adc
sbb
or
outsb
push
mov
pop
xorl
jg
pop
sbb
xorl
sahf
bswap
jbe
ret
ret
add
xchg
cmp
add
iret
jnp
pop
pusha
scas
xchg
xchg
xchg
adc
adc
pop
pushl
mov
stc
cmp
lods
add
gs
sub
pop
aam
test
dec
jns
loope
movl
push
testb
sbb
inc
inc
daa
fdivrl
ss
cmpsl
insb
in
mov
je
imul
push
iret
mov
add
fidivl
adc
ljmp
pop
push
mov
pop
arpl
fs
mov
inc
lds
push
mov
xchg
push
adc
push
sub
mov
cwtl
and
or
adc
les
loop
popa
pop
xor
mov
pusha
fsubrs
sub
adc
push
stos
sbb
inc
mov
or
pop
xchg
or
cltd
cmpl
call
in
xlat
add
mov
dec
xchg
out
and
mov
push
pop
stos
mov
movsl
or
repnz
xchg
mov
lods
or
jmp
mov
mov
sbb
test
push
push
fsubrs
test
and
ret
mov
push
push
jecxz
mov
out
xlat
lret
cld
sub
mov
or
pushf
and
mov
incl
loop
jae
xor
xor
xor
aas
hlt
add
ljmp
dec
pop
loope
clc
add
cmpsl
fsubs
ja
inc
mov
jl
mov
push
mov
cmp
rcll
movw
test
icebp
mov
and
ss
fld
in
push
insl
loope
fnstenv
dec
stos
or
ja
inc
jne
adc
bound
ret
sbb
sbb
sub
imul
lcall
sub
mov
cltd
mov
xor
fs
outsb
or
or
xor
push
imul
mov
mov
push
addb
or
ret
push
shr
shll
cmp
pop
ss
mov
cmp
rorb
jg
sub
jge
inc
aam
jp
xor
push
mov
out
nop
rcrl
fdivrp
mov
fstpt
push
fsts
push
lods
ja
xchg
add
jg
je
stos
mov
std
pop
adc
ret
aad
and
and
cld
jl
push
cmp
xor
and
add
and
xchg
inc
jmp
and
in
cmp
int3
adc
sti
imul
adc
pop
jecxz
mov
cmc
fs
nop
cwtl
xchg
cmpsl
in
fdiv
imul
sub
aaa
dec
lahf
ret
sbb
lods
dec
xor
divl
dec
push
cld
xchg
and
jno
pop
mov
mov
push
std
xchg
adc
inc
shrb
jnp
lock
xorb
cmp
insb
sbb
popa
stos
jle
adc
jnp
outsl
sub
es
dec
pusha
xchg
sub
fdiv
rorl
in
loop
into
in
dec
jno
jecxz
push
adc
lock
cmp
jmp
out
inc
sbb
pop
frstor
xchg
orb
or
aad
mov
mov
mov
xchg
cmp
mov
enter
scas
iret
adc
cmp
push
dec
pop
mov
out
test
jge
test
jle
jns
aad
rorb
pop
and
loop
test
je
sti
mov
lret
and
jg
stc
push
stc
mov
icebp
xor
fdivrl
mov
and
scas
jb
dec
call
jbe
add
movsl
mov
sub
in
mov
xchg
and
cmp
mov
pop
sti
jae
pushf
push
fisttpll
jp
push
push
add
inc
mov
sbb
repz
inc
mov
mov
aam
cltd
dec
cwtl
dec
clc
addr16
add
inc
mov
ror
or
fwait
sbb
mov
in
mov
mov
push
pop
add
lods
int3
mov
int
loop
negl
rorb
inc
sahf
inc
and
push
jg
push
lds
sbb
add
cwtl
push
subb
adc
or
inc
mov
not
push
mov
out
and
stos
mov
and
ja
inc
add
test
xchg
rcrb
lret
mov
xchg
rcr
std
fisubs
mov
leave
xor
dec
sbbb
xchg
cmp
dec
cmp
ljmp
cwtl
xor
daa
pop
inc
xor
inc
pop
aad
xchg
mov
fwait
arpl
cwtl
push
cmp
andb
movsb
stos
pusha
inc
sbb
in
mov
push
stos
sub
in
jp
xchg
or
fwait
sahf
fxch
adc
inc
lcall
out
xor
stos
add
icebp
scas
adc
iret
out
xchg
scas
aam
adc
stc
ret
out
dec
aaa
cmp
test
clc
push
ficomps
lret
fadds
repz
insl
add
jnp
push
push
mov
les
mov
out
xor
add
clc
add
cmp
xor
or
aas
mov
fwait
mov
cmp
js
mov
leave
mov
std
xchg
lods
cwtl
lret
ja
stos
mov
cmp
fmull
arpl
imul
sbb
out
shll
xlat
xor
mov
jmp
push
jae
test
adc
popa
int
push
or
push
xchg
faddp
les
orl
mov
fucom
mov
mov
pop
mov
sbb
and
mov
pop
or
pop
jle
add
sub
xor
popa
stos
cwtl
and
jg
rcll
mov
mov
mov
cs
jp
mov
fldl
fwait
sub
test
mov
add
sub
into
mov
jg
or
sbbl
cs
xlat
stc
sarb
fmuls
ret
jp
jp
jmp
push
ffreep
jae
inc
inc
mov
cwtl
std
inc
lods
sahf
or
sub
mov
push
mov
dec
sbb
rdpmc
mov
pop
push
decl
mov
mov
mov
into
mov
pop
xor
icebp
popf
stos
sub
xchg
mov
push
inc
imull
fcoms
popa
jp
jns
pop
xchg
rorl
pop
imulb
les
ficomps
jo
mov
or
ds
in
mov
movsw
hlt
rolb
nop
mov
into
stos
push
inc
push
add
fwait
scas
cmc
lahf
icebp
pop
jnp
imul
sbb
dec
lcall
les
push
fwait
sbbl
xor
jnp
loop
sub
popa
xor
sub
dec
and
mov
lahf
into
and
mov
jecxz,pt
sbb
lods
push
dec
movsb
push
push
pop
push
arpl
insl
mov
xchg
pop
fldt
idivl
or
or
sub
and
jnp
add
das
imul
mov
cmp
std
cmp
cmc
pusha
add
test
dec
push
mov
stos
sub
dec
xor
cli
xchg
fs
das
cmp
and
ljmp
cmp
nop
xchg
xor
push
cmp
lods
jo
xor
les
dec
and
sahf
sti
mov
or
outsl
mov
push
inc
and
xor
dec
add
pop
ficomps
mov
xor
andb
sahf
push
xchg
sbb
and
sbb
jg
pop
mov
pop
clc
sub
inc
stc
and
lods
in
mov
sub
xlat
mov
xchg
loop
push
push
adc
rcl
into
btr
push
xchg
or
bound
es
fisubrs
decl
xchg
mov
scas
cltd
cmp
es
xlat
sub
cmp
roll
idivb
decl
out
sub
mov
inc
testb
jge
dec
mov
jno
ljmp
fcoml
insl
cmpb
xchg
outsl
adc
inc
push
or
aaa
out
sbb
incl
fsubrl
or
xchg
sbb
add
icebp
xchg
jg
push
xor
push
repnz
push
jae
aad
pop
pop
dec
xchg
sub
push
cmc
pop
mov
cwtl
mov
orb
rcl
leave
stos
sahf
xchg
hlt
adc
dec
and
cmpsl
jnp
out
loope
xchg
push
jno
mov
test
add
test
or
data16
jno
iret
mov
push
das
mov
popa
adc
fstps
roll
aaa
push
push
mov
sbb
sub
push
cli
es
rclb
dec
cli
add
xchg
jno
dec
cmp
jnp
xchg
xor
push
fwait
mov
xor
lea
xor
addr16
loop
mov
sarb
inc
push
xor
dec
xchg
lcall
pop
adc
out
mov
cmp
xor
pop
aaa
add
inc
test
out
mov
xchg
xor
inc
pusha
dec
pop
sti
xchg
jg
lret
lea
fmull
push
das
insl
adc
vmread
cmp
bound
pop
sub
xchg
add
sub
les
jne
cmp
imul
mov
inc
je
mov
in
jne
dec
testb
test
mov
dec
lock
mov
push
and
stc
stc
js
loopne
and
shll
jno
cmp
xor
cld
out
xchg
mov
cvtpi2ps
pop
fnsave
or
mov
jmp
pop
inc
out
jecxz
rcr
sub
scas
subb
rclb
mov
mov
xchg
xchg
jae
scas
icebp
in
int
sub
pop
push
mov
arpl
ds
neg
xor
cltd
xchg
lcall
jnp
loope
in
ds
sub
nop
icebp
subb
in
push
jmp
cmpsl
clc
xchg
js
loop
cli
les
ret
cmc
or
xor
ljmp
mov
das
jnp
xchg
push
inc
das
test
pop
jecxz
sbb
les
mov
xor
push
cli
test
js
test
push
jle
jecxz
inc
push
rolb
mov
ret
js
ficoml
add
and
sbb
pushf
mov
insb
jb
add
loop
sbb
and
stos
sti
push
je
stos
clc
icebp
shrb
jbe
jge
arpl
jl
into
adc
cmc
push
movsl
stos
inc
adc
jb
ss
inc
insb
js
push
inc
cwtl
push
add
xor
bound
mov
pop
add
cmp
mov
ret
push
adc
pop
out
xchg
popf
cs
cmp
pop
sarb
push
leave
dec
shll
movsb
fcompl
out
shrb
fsubs
add
cs
ret
jge
xchg
insb
mov
out
jo
fiaddl
lds
mov
add
and
pop
dec
push
mov
push
push
inc
sbb
iret
mov
pop
mov
test
mov
cmc
jg
nop
xlat
and
imul
cmp
movsl
cld
dec
mov
jno
rcr
daa
lods
insb
imul
ret
sbb
movsl
jae
lahf
mov
sub
jmp
std
xchg
mov
rorl
int
icebp
lock
jmp
inc
mov
cmp
addr16
aaa
into
pop
iret
mov
cs
adc
fsubs
les
xorb
in
xchg
push
mov
repnz
sbb
cmp
push
push
enter
xor
cmpsb
mov
in
loope
out
jmp
lea
bound
xor
mov
lock
stos
mov
sub
jbe
xchg
test
mov
pop
pusha
cmpsl
inc
mov
popa
pop
stos
add
or
shr
adc
daa
lods
scas
or
add
mov
pusha
and
out
xchg
cltd
jmp
or
jp
add
push
popf
cmp
dec
push
sbb
int
inc
dec
push
push
jl
ficoml
outsb
xchg
mov
mov
push
das
in
into
hlt
push
and
adc
mov
jg
mov
sub
cltd
inc
sbb
push
mov
cli
push
jg
and
imul
xlat
push
orl
pop
cmc
adc
movsb
sahf
sbb
rcll
cmpsl
sbb
mov
jno
iret
clc
add
sub
leave
adc
cmp
sbb
ja
adc
xchg
loope
inc
mov
mov
inc
lods
xor
push
mov
mov
cmp
jns
jne
mov
fsub
mov
fisttps
adc
cmc
rorl
addr16
pushf
cmp
cmpsb
add
sbb
or
mov
jnp
fimuls
sbb
cmpsb
sahf
xchg
outsl
sub
dec
mov
xlat
pop
lahf
stos
adc
adc
add
pop
fwait
sbbl
icebp
pop
add
sti
fdivp
adc
xchg
or
push
std
test
push
incb
adc
int
jb
sub
incl
cs
imul
cwtl
or
rorl
mov
pusha
clc
mov
cmp
jmp
out
aad
adc
cld
loop
popa
bound
lahf
or
xchg
push
dec
shll
push
dec
add
jmp
scas
pop
dec
dec
fmul
rcll
aad
stos
xlat
xchg
push
sub
in
mull
mov
fneni(8087
jecxz
cs
call
push
mov
or
add
mov
clc
movsb
cmp
mov
cli
jecxz
rorb
add
loop
movsb
das
test
jne
add
push
fiadds
sub
lods
rcll
xorb
sub
add
xchg
inc
cmc
sub
mov
ljmp
sbb
rcll
cmpsb
sarb
push
xchg
xchg
in
in
lahf
sub
fs
orl
xor
pop
sbb
movl
sub
adc
dec
repnz
push
stc
mov
sub
or
sub
or
xorl
and
and
adc
int3
push
std
dec
mov
cmpsl
and
ja
hlt
shrb
mov
dec
aaa
rorl
and
lock
xchg
aad
dec
and
adc
inc
std
pop
ja
mov
or
push
aad
fsubrl
insl
outsb
push
cwtl
pop
or
ffreep
jl
cltd
push
cmp
out
add
mov
push
int
mov
dec
inc
aaa
and
ss
hlt
push
test
or
and
adc
adc
rolb
shll
cmp
out
mov
adc
add
scas
rcrb
cmp
fstpt
ja
xchg
roll
js
push
push
cmpsl
adc
jmp
dec
sbb
jg
xchg
daa
xor
fucomp
imul
fiaddl
ss
push
scas
ljmp
pop
sbb
pushf
mov
addr16
ds
out
ss
inc
fwait
and
sbb
js
jg
cld
or
les
aad
jb
dec
fisubrl
mov
push
push
pop
cmpsl
aaa
sbb
rcll
stc
and
bound
xchg
loop
rcll
icebp
clc
enter
pop
dec
outsl
jb
test
mov
insb
and
scas
jp
jmp
and
or
jbe
mov
aas
and
test
adc
xchg
icebp
cmp
pop
int
adc
ljmp
jmp
out
pushf
rcrb
cmpsb
inc
shlb
xor
test
std
data16
mov
out
xchg
adcb
into
cmpl
out
sbb
mov
adc
cmp
push
popf
and
jb
xor
ss
out
mov
mov
sbb
lret
enter
sarl
mov
fs
cld
mov
xchg
cmc
xchg
shrl
inc
clc
lods
cs
filds
outsb
adc
pop
dec
xlat
cmc
sbb
mov
xor
add
pop
cltd
mov
pushf
jb
jp
ljmp
sbb
bound
push
xor
cmpsb
push
test
add
sbb
or
je
in
sub
xchg
mov
add
sub
sub
mov
in
inc
into
mov
mov
xor
fiadds
cmp
iret
lods
pop
adc
incl
cmp
cs
cmc
mov
sub
mov
adc
mov
sbb
repz
mov
daa
enter
lahf
jmp
sbb
pop
or
outsb
imul
cmp
push
ret
and
int3
xchg
js
sbb
fs
sub
out
mov
testb
push
pop
or
icebp
iret
add
loop
fs
std
sahf
inc
movsl
scas
insl
ret
jns
cmp
cmp
out
ret
bound
cwtl
pop
adc
sub
in
and
mov
add
mov
addl
cwtl
mov
xchg
sahf
ret
inc
mov
pop
gs
int
dec
jg
xchg
jo
adc
enter
movsl
pushl
insb
mov
rcrl
out
adc
arpl
in
call
scas
add
pop
imul
or
push
inc
mov
mov
adc
nop
or
int3
aaa
dec
sub
rorb
xchg
sbb
test
and
mov
xchg
pop
inc
fimull
sbb
mov
mov
js
pop
xor
pop
dec
sbb
test
mov
pop
leave
mov
and
fs
in
mov
aad
jg
fwait
jns
into
call
outsl
add
adc
neg
xchg
sti
pop
call
data16
js
insb
fcoml
incl
in
subb
or
leave
int3
push
sbb
cmpsw
enter
pop
cltd
xchg
pop
dec
push
pop
loopne
jnp
inc
pop
adc
pop
shlb
cli
or
ss
mov
add
sbb
jge
jbe
fidivrl
testl
ds
lahf
fstpl
or
neg
ja
pop
xchg
out
int3
out
mov
jnp
call
daa
pop
jg
test
hlt
fcompl
push
gs
movsl
sub
arpl
and
sbb
jg
pop
gs
loopne
mov
korw
mov
pop
repnz
lea
or
xchg
and
push
ret
sti
dec
out
dec
cmp
or
push
and
inc
push
lods
and
mov
fdivl
mov
popa
inc
pop
pop
out
das
arpl
pop
push
mov
and
fucomp
pop
dec
ret
int
inc
push
nop
push
scas
call
scas
inc
sbb
inc
inc
cld
sub
mov
out
daa
aad
cmp
add
vshufps
xchg
lahf
or
lahf
xchg
push
rcll
mov
mov
xor
mov
int3
test
cmp
pop
mov
les
jle
mov
push
sub
xor
mov
mov
icebp
pop
inc
mov
cmpsw
data16
push
push
loopne
push
sbb
imul
inc
mov
addr16
fsubrp
jg
lods
aas
jge
jge
loope
sbb
or
fisubrl
shrl
insl
daa
mov
in
mov
clc
mov
push
jno
sbb
mov
jo
and
sbb
cmpsb
icebp
xchg
xchg
ret
or
xor
in
inc
test
sub
shrb
sbbl
enter
push
fldenv
pop
outsb
jb
outsl
test
sbb
ror
sub
add
test
xor
cmpsb
push
inc
mov
jmp
popa
mov
adc
xor
and
leave
add
lcall
jb
adc
test
adc
lret
sub
rorl
xchg
fsubl
inc
jae
inc
xchg
aaa
imul
mov
stos
push
sub
xchg
mov
lret
dec
aam
std
scas
out
add
lea
das
testb
push
jg
and
jae
in
jle
repz
mov
pop
out
xor
mov
xor
sbb
fsubs
lcall
adc
push
fwait
ss
jmp
mov
inc
addr16
out
mov
ja
repnz
insb
add
jg
lret
adc
jbe
jmp
adc
and
neg
fimuls
out
mov
leave
dec
bound
inc
inc
lea
lds
sub
iret
inc
dec
pop
mov
jmp
pop
outsb
and
adc
mov
dec
imul
cwtl
cmp
pop
jnp
fcmovne
xor
mov
add
push
icebp
repz
outsb
es
push
fwait
dec
jp
or
inc
loop
je
imul
adc
or
push
dec
and
and
mov
sub
call
add
add
cli
jns
je
pop
scas
xor
in
scas
inc
lcall
sub
cmp
jg
cs
jmp
sbb
push
mov
in
out
mov
enter
or
ljmp
cli
xorl
nop
mov
sub
pop
or
hlt
dec
stos
outsl
add
inc
imul
mov
and
inc
into
inc
push
jne
sbb
pushf
pop
insl
sub
lahf
dec
sub
and
push
es
cli
fcmovne
cmp
push
sub
loope
jecxz
inc
inc
aas
imul
inc
in
test
mov
sbb
jno
in
dec
in
push
jmp
into
shlw
repnz
or
lock
inc
mov
mov
mov
ret
repz
dec
and
inc
xor
fsts
hlt
push
jno
out
shrl
mov
cmc
sbb
cmp
mov
js
pushf
adc
sbb
dec
jnp
cmpsl
mov
add
adc
sti
mov
in
jb
fisttpl
cmp
mov
insl
aaa
imul
xor
pop
sbb
xor
int3
add
clc
cmp
into
jge
mov
xor
ds
push
mov
or
mov
cld
fidivs
mov
xor
inc
aam
icebp
cli
loop
movsl
test
out
pop
mov
and
les
or
cmp
and
pop
or
mov
xchg
pop
jnp
shlb
fxch
orb
out
sbb
inc
jmp
andb
jo
and
mov
mov
add
repnz
std
push
mov
cltd
lcall
jp
in
addr16
or
sti
ficomps
cs
das
rolb
imul
pop
movsb
or
add
push
int3
das
xchg
sar
ret
sbb
or
sbb
fcoms
sbb
inc
loopne
ljmp
mov
pop
int3
inc
mov
pop
mov
mov
call
dec
in
scas
cmp
push
sub
add
sub
lcall
test
lods
sbb
in
xor
sti
push
lods
sarl
outsl
mov
sub
in
loope
xchg
gs
or
pop
je
or
icebp
lret
jbe
sahf
ja
pop
mov
xchg
arpl
or
lcall
mov
sub
push
lcall
add
ficoms
aam
call
cli
cwtl
aam
pushf
sub
adc
sbb
call
adc
dec
cld
xchg
dec
mov
clc
repnz
rcrl
shrb
lret
scas
pop
stc
inc
add
or
aam
lahf
ja
mov
imul
call
outsl
ljmp
lret
sub
stos
jecxz
cwtl
aaa
ja
jns
leave
cmpsb
jne
insb
scas
je
push
lods
popa
insl
into
or
mov
jge
mov
lods
cwtl
jne
sbb
daa
ss
std
add
or
imul
sbb
mov
pop
dec
sti
inc
cltd
jne
lods
out
cmp
ljmp
fldt
add
mov
aaa
daa
idiv
notl
mov
test
dec
aad
movsl
lret
mov
hlt
xor
push
jp
sbb
dec
xchg
mov
and
adc
sub
adc
dec
imul
mov
pop
dec
push
sar
inc
ljmp
mov
rolb
inc
fstl
inc
outsl
pop
adc
ret
mov
imul
or
sub
repz
sbbb
sub
mov
add
sub
rorb
out
sahf
mov
shl
jae
rol
sub
jg
je
pop
mov
adc
leave
movsb
fildl
xchg
movsl
cli
mov
loop
cwtl
mov
data16
jecxz
adc
rclb
fisttps
lods
xor
mov
xor
inc
jnp
sbb
push
shlb
mov
fcoms
pop
stos
aad
cs
sbb
int3
xor
aad
push
popa
xchg
cmovo
add
add
ds
dec
sbb
mov
inc
xchg
bound
mov
cmp
bound
inc
pop
add
loopne
pop
ja
add
lahf
cli
jp
jg
jle
or
addr16
movb
cmc
mov
nop
jae
xor
sub
inc
sti
add
into
daa
stc
add
rcrl
aas
xlat
sub
mov
pop
out
pop
pop
outsb
int3
sub
aaa
sub
cmp
jp
movsb
enter
fs
gs
lds
xlat
sbb
repz
mov
adc
pop
push
push
mov
arpl
mov
inc
sbb
aaa
insb
mov
jno
cmpxchg
xlat
mov
iret
fwait
mov
push
test
sub
cltd
jbe
xchg
mov
or
jle
rcll
scas
in
std
pop
pop
add
int
fnstsw
pop
mov
fisubrl
mov
or
mov
sbb
stos
scas
and
dec
xor
and
cmpl
out
dec
stc
jae
xor
dec
jg
adc
lcall
and
idivb
dec
mov
jmp
je
pop
xlat
lcall
pusha
jnp
mov
and
icebp
loopne
adc
stc
dec
or
or
cmp
xchg
scas
jl
sub
dec
jmp
imul
cmpsb
aad
add
xchg
xor
push
mov
xchg
mov
xor
mov
lret
and
push
and
pop
lahf
pop
dec
mov
pop
rorl
jnp
jae
sahf
aam
cmp
inc
rorl
mov
repz
jno
pushf
mov
push
stos
imul
pop
inc
sbb
and
xor
pop
scas
les
xor
inc
icebp
and
mov
movsb
adc
movsl
jne
fisubs
pop
sub
xchg
pop
xchg
jnp
mov
lret
mov
mov
imul
out
roll
pusha
jo
cld
and
jge
jge
dec
mov
push
mov
mov
adc
adc
insb
test
mov
in
mov
rcrl
sub
loop
stos
push
dec
pop
andl
and
movsl
xor
js
cmpsl
outsb
and
sbb
cmpl
pop
jb
in
test
fwait
pop
xor
push
xlat
cmp
in
mov
or
inc
hlt
xor
inc
jo
rolb
pop
mov
mov
add
fs
gs
stos
call
xchg
sahf
push
fdivr
adc
scas
dec
lcall
addr16
sti
jns
bnd
bound
adc
xor
inc
or
push
fisttpl
sub
repnz
fdiv
je
fcoms
imull
push
loope
push
jbe
pop
fstpt
pusha
shrl
imul
rcrl
fs
xchg
into
outsl
ds
std
xchg
mov
pop
push
shrb
or
jo
mov
cwtl
out
int
loopne
jle
mov
sbb
sbb
dec
sbb
xchg
add
push
jae
movsl
mov
xchg
sarl
add
shl
dec
mov
xchg
nop
jmp
cmp
and
mov
out
cmp
aaa
or
mov
jl
sbb
or
jmp
in
outsb
sbbl
lea
pusha
sahf
add
aaa
cmp
xlat
jle
fsubl
mov
mov
andb
mov
stc
imul
or
mov
mov
push
aas
add
rep
clc
dec
in
mov
dec
lret
sbb
push
or
movsl
pop
pop
or
add
enter
mov
pop
popl
dec
cwtl
push
iret
dec
or
popf
mov
mov
sbb
out
and
fdivs
pushf
push
sub
fcmovbe
dec
test
mov
scas
test
fs
mov
and
push
shl
frstor
rcrb
test
lock
push
pop
dec
cmp
sbb
bound
insb
lahf
adc
roll
insl
arpl
sbb
iret
lods
xchg
out
cmc
cmp
mov
pop
xorl
aad
sub
inc
xchg
clc
jns
ret
xor
lods
adc
mov
pop
shll
js
jo
mov
sbb
sub
test
cld
inc
mov
inc
popf
rclb
scas
push
mov
xchg
jmp
or
mov
ljmp
popf
rol
cmp
xchg
divb
jecxz
fs
mov
xchg
fwait
mov
push
push
in
jno
in
push
jo
jnp
xchg
push
lret
test
adc
adc
dec
push
out
inc
stc
xchg
xchg
push
adc
pop
xor
mov
sub
imul
xchg
daa
adc
out
pop
cwtl
cmp
sbb
or
jne
pop
outsl
int3
decb
hlt
cwtl
scas
adc
cmc
fstpt
out
iret
lret
int
dec
insl
mov
xchg
aaa
ror
xchg
xor
jae
push
lret
xor
fstpt
mov
mov
inc
mov
xor
add
loopne
popf
insb
mov
idivl
fadd
stos
and
xor
mov
push
adc
je
insb
and
mov
xor
bound
bound
cmp
iret
push
lcall
mov
inc
and
sahf
aas
jmp
mov
pop
in
adc
cs
aaa
daa
loopne
in
fs
cmp
adc
cmc
scas
and
fcmovu
leave
dec
cmp
dec
sbb
test
adc
js
inc
movsl
arpl
push
loopne
xor
pop
cli
lcall
dec
aad
int
pop
push
sub
sub
cmp
mov
into
lret
xchg
sti
sti
cmp
iret
cmovg
and
add
push
nop
test
sarb
sub
cmp
jle
dec
xchg
cltd
les
lds
repz
add
outsb
call
jne
adc
jle
xchg
cmp
adc
addl
mov
mov
pop
fldenv
mov
mov
lret
push
jp
fildll
test
push
shl
add
adc
imul
test
mov
imul
jo
lods
enter
jo
fcmovnu
scas
sbb
mov
out
lahf
outsb
shrl
xor
cmpb
pop
sub
cwtl
mov
lods
push
inc
xor
test
mov
stos
xchg
and
int
lea
shrb
pushf
call
cs
icebp
sbb
and
stc
es
add
push
cmp
xor
and
js
cmpb
push
xchg
pop
bound
in
dec
ret
call
and
aam
hlt
xchg
pop
adcl
insb
xor
mov
pop
mov
and
outsb
rclb
cs
outsb
or
sbb
inc
pop
test
pop
cmc
fcos
pop
or
and
or
ror
aam
shll
leave
cmpsb
mov
xor
jnp
jns
xchg
sub
dec
inc
xchg
fucomi
nop
fisttpll
outsb
add
fxch
lret
dec
cmpsl
pop
int3
in
mov
hlt
mov
push
mov
sub
add
aam
mov
jge
imul
cmp
loop
add
rcl
popf
aas
add
sub
jbe
pop
adc
sub
jae
cmpsb
scas
mov
mov
inc
mov
lods
iret
and
mov
lds
ss
sbb
xor
cmpb
xor
cmp
jnp
mov
nop
xchg
inc
jne
cmc
add
adc
lcall
movsl
loop
mov
arpl
jns
enter
bound
cmpsl
movsl
popf
in
mov
mov
sub
jmp
mov
gs
aas
int
push
mov
adc
cmc
int
addr16
inc
aad
outsl
add
mov
sbb
in
popf
js
arpl
int
xor
sub
pusha
dec
cmp
es
cltd
ret
inc
and
pop
dec
cmc
ljmp
shl
push
dec
mov
pop
sbb
sahf
mov
jle
inc
jecxz
nop
cld
lret
repz
aam
push
sar
sub
dec
cltd
push
rcr
cmpl
xor
imul
mov
loopne
lea
dec
ret
xor
cmp
daa
and
rorb
push
sub
fistpll
pop
dec
or
gs
cld
dec
in
stos
push
push
jbe
gs
and
inc
pusha
sbb
or
stos
mov
arpl
adc
mov
push
mov
adcl
mov
push
jns
ds
or
dec
rcrb
daa
lret
ss
cmp
clc
stos
push
orb
cmp
or
xchg
push
adc
mov
mov
arpl
xor
movsb
loope
stc
inc
cmpsb
popf
stos
mov
imulb
add
lods
jmp
sbb
sbb
dec
lea
iret
movsb
stos
pop
adc
and
dec
adc
pushf
dec
jb
pcmpeqb
sub
dec
dec
xorl
pop
push
and
movsb
jmp
insb
fsubl
mov
int3
jnp
adc
inc
push
clc
ret
cltd
mov
int
mov
popf
loopne
cmp
aas
dec
pop
lret
fstl
mov
xor
pop
sub
sbb
mov
mov
xchg
repz
pop
and
mov
cmp
jno
aam
mov
insb
jae
push
add
inc
push
ja
insl
jge
daa
pop
mov
cmp
jl
repnz
sbb
and
mov
testl
rorb
insb
adc
lods
scas
mov
jno
mov
aad
jp
dec
daa
mov
jp
dec
out
add
sbb
cmc
outsb
xlat
adc
call
pop
mov
pop
and
adc
or
dec
cltd
das
aaa
mov
mov
mov
mov
push
pop
das
and
mov
cmpsb
pop
daa
mov
xchg
jnp
and
test
movsl
dec
in
incl
sbb
in
sub
sub
test
lret
sub
addr16
cmpsb
cmp
popa
adc
cs
les
or
inc
push
in
lcall
negb
adc
out
dec
sub
lds
mov
cltd
inc
jbe
test
mov
jnp
jmp
add
adc
mov
mov
dec
pushf
int
repz
bound
xchg
cs
int3
mov
jns
cmc
inc
or
pop
push
jne
ljmp
jo
in
fsts
add
mov
dec
adc
and
and
and
hlt
lods
mov
cmp
imul
test
or
dec
sbb
stc
movsb
inc
jae
js
jecxz
mov
mov
in
add
enter
xchg
xchg
fdivs
jl
test
jns
and
pop
or
cltd
cs
movsl
movsl
lahf
iret
jo
ret
lds
fdivrl
clc
ljmp
outsb
lcall
xchg
adc
or
mov
and
fadd
sub
add
cmp
cmpsl
mov
or
fstpt
push
xor
wbinvd
outsl
aaa
push
xorb
clc
mov
xacquire
hlt
mov
jp
xchg
push
sub
sbb
out
push
hlt
mov
pop
rorb
sbb
mov
scas
das
fcompl
adc
ret
popf
mov
in
idivl
adcl
idiv
cmp
cli
pop
lods
adc
xchg
mov
popa
jl
jl
loope
jp
mov
pop
cs
pop
jg
and
pop
push
mov
sub
dec
int3
out
cmp
test
mov
mov
loope
inc
cltd
mov
inc
push
cmp
and
sub
cld
sarl
jno
cmp
or
xchg
xor
lret
scas
imul
mov
cli
cmp
jecxz
and
out
cwtl
fidivl
fxch
jl
cmp
pop
iret
jb
ss
shlb
pushl
enter
dec
sti
ret
lock
pop
jo
cmp
push
std
cmc
mov
push
lods
rcll
repnz
roll
stos
cmc
mov
mov
in
jne
lea
hlt
js
adc
aas
cmpsb
mov
rcll
sub
pushf
inc
pop
jns
rorb
sti
lods
mov
and
cltd
mov
push
sub
incl
cs
loope
movsl
jae
out
push
mov
xchg
pop
xlat
rcrl
negb
push
inc
mov
test
xchg
cwtl
into
loope
cld
dec
mov
lret
xchg
scas
cltd
mov
jae
ss
push
pop
sbb
push
xor
cmc
push
or
loop
fwait
mov
pop
jmp
adc
mov
hlt
das
adc
and
dec
jbe
pusha
movsl
dec
test
rol
xor
cli
mov
mov
out
lret
enter
mov
dec
fs
sub
push
mov
inc
push
aaa
enter
mov
lods
insl
insb
pop
cmp
xchg
in
cmpl
sbb
outsl
je
add
jg
inc
mov
data16
sbb
mov
push
push
push
cmc
pop
popa
xchg
rcl
rcll
sti
dec
sbb
outsb
lcall
imul
std
shll
inc
push
repnz
lea
in
lahf
mov
jg
cli
outsl
cwtl
xchg
neg
add
adc
or
rcrb
xor
xchg
mov
iret
inc
push
xor
iret
repz
adc
adc
popf
into
loopne
xchg
cmpsb
movsl
sarb
rcrb
mov
mov
mov
xchg
fisubrl
jmp
in
jge
xor
add
rcrb
sub
jb
gs
nop
pop
xlat
in
sbb
add
flds
sub
popf
xlat
shr
adc
enter
inc
mov
fiaddl
or
pop
xlat
notb
xor
sbb
adc
jmp
push
fistpll
push
xchg
lret
dec
cmp
jmp
aas
cld
cmp
and
jnp
cld
dec
addr16
sbb
mov
xchg
test
cltd
jbe
nop
lcall
xor
sti
jg
cmp
mov
bnd
xchg
fs
lock
mov
mov
adc
vorps
or
rclb
movsb
pop
jne
into
dec
pop
dec
and
sub
call
or
fidivrs
jge
nop
dec
push
cmc
sub
mov
clc
sbb
inc
adc
dec
arpl
pop
ficoms
push
cmp
mov
mov
repz
or
mov
fcompl
int
push
push
rolb
addr16
int
sbb
jge
push
push
mov
xor
sbb
in
je
xor
sbb
pop
push
or
dec
jmp
enter
popf
popf
cld
outsb
divb
loopne
adc
movsb
jo
repnz
icebp
mov
shl
mov
lahf
pop
adc
dec
mov
inc
pop
dec
je
add
sub
lret
push
pop
lds
inc
out
mov
mov
cltd
pop
adc
xchg
movsl
inc
sarl
scas
sbb
lds
push
or
or
adc
inc
dec
dec
sbb
cmpsl
sbb
ss
in
ljmp
push
jno
out
or
cmpsl
sub
adc
dec
inc
pop
enter
cmpb
xchg
ror
leave
sub
sbbb
lods
fdivl
add
mov
sbb
mov
mov
lahf
mov
lret
xchg
pop
mov
xor
loop
or
dec
inc
mov
push
push
sahf
cmc
in
xor
mov
adc
cmpsl
sbb
int3
and
mov
xchg
lcall
dec
imul
jmp
inc
and
stos
arpl
repz
cmp
push
lahf
lret
xchg
adc
mov
sbb
cmpsl
cmp
jae
inc
mul
lret
fisttpl
das
adc
adc
dec
pop
mov
xlat
sbb
dec
xor
stos
mov
scas
mov
rolb
xor
push
dec
pushf
adc
mov
pop
xchg
adc
xchg
rorb
popa
mov
xor
push
notl
mov
lahf
push
es
sbb
dec
aad
sbb
cs
cmc
rep
cmp
insl
pop
fistl
ljmp
iret
shlb
mov
out
mov
inc
mov
rolb
xor
sbb
fwait
popf
ss
decl
mov
jns
out
jp
lret
cmpsb
movsl
xchg
xorl
jecxz
loop
aaa
dec
sub
mov
adc
jle
dec
pop
mov
dec
mov
daa
test
test
mov
sub
fwait
add
lcall
lods
shrb
cmpsb
add
sub
movsl
cwtl
pop
inc
test
dec
clc
adc
out
rcrb
js
repnz
gs
or
xor
leave
sahf
and
sarl
cmp
push
cmpsl
leave
int
fbld
xchg
into
inc
sbb
sub
bound
jbe
imul
loopne
jle
mov
xor
imul
xchg
nop
jmp
add
fisttpll
out
imul
or
dec
cli
mov
or
fwait
mov
add
mov
call
gs
out
lods
mov
fwait
add
jns
add
sbb
push
sub
ds
loope
cmp
divb
cmp
dec
cmp
adc
xchg
xchg
mov
mov
pusha
test
pop
lods
in
popf
adc
sub
dec
jle
pop
xor
inc
jb
jns
inc
and
xchg
jle
xchg
push
decl
lods
or
call
cmp
inc
xor
mov
mov
outsb
testb
cld
jle
scas
and
xor
push
outsb
ss
mov
mov
xchg
dec
fsubs
test
push
jmp
adc
outsb
push
std
fbld
pop
push
pop
popf
or
inc
push
and
xlat
pop
and
sub
pop
stos
movsb
imul
lea
fld
mov
repnz
cmp
pop
jecxz
ja
testl
push
mov
xchg
xlat
mov
imul
outsl
push
lods
cmp
subps
sub
iret
les
xor
loopne
mov
sti
push
and
lods
into
xor
mov
pushf
in
pop
fwait
mov
sahf
xchg
mov
rcrl
repnz
xor
ds
push
and
jo
mov
push
sbb
xor
in
xor
mov
imul
clc
popa
cmpsb
pop
aaa
hlt
shll
xchg
mov
mov
ds
pusha
inc
mov
shlb
pop
jg
adc
sbb
mov
repz
fildll
xchg
pop
pop
cmp
out
pop
les
stos
mov
adc
sub
push
data16
pop
aam
jmp
mov
cmp
xchg
mov
push
pop
stos
icebp
leave
ss
test
out
pop
jg
sbb
or
imul
mov
daa
lahf
add
and
ja
fstl
inc
push
jns
lods
clc
sub
mulb
ja,pt
out
repz
sub
add
mov
xor
lods
rcrl
xchg
mov
aam
add
call
into
push
add
add
push
mov
xor
sbb
hlt
fwait
std
or
in
rcl
ss
push
xor
push
cmpsl
icebp
pop
roll
cmp
push
daa
loop
testb
shrb
movsb
js
xchg
inc
lock
mov
adc
loopne
lahf
outsb
inc
cmpsb
js
add
popa
xchg
and
icebp
mov
pusha
and
jae
outsb
push
scas
lods
scas
fnstcw
jecxz
inc
cmp
xlat
scas
inc
cld
mov
lcall
sahf
and
shll
es
cmp
cmp
icebp
and
leave
jmp
jle
push
sbb
loopne
cs
fiaddl
lahf
sub
add
lods
pop
aas
push
xchg
sbb
ret
and
stos
hlt
jl
jo
lods
rolb
sub
dec
xchg
jp
popa
lds
mov
cmpsb
adc
pop
sbb
and
fisttps
adc
test
int
xchg
inc
into
inc
daa
mov
daa
cmc
mov
add
out
ficomps
and
lods
jge
popf
pushf
dec
sbb
pusha
inc
mov
xlat
dec
add
mov
int
or
jns
insb
mov
sub
cmpsl
push
out
cmp
andl
mov
xor
lcall
int3
ljmp
sub
jns
fnsave
mov
sahf
movsl
clc
lds
fucomp
add
xor
adc
push
test
dec
dec
mov
push
and
inc
mov
fwait
popa
sti
icebp
push
or
xor
jecxz
fdivrl
xor
pop
in
js
sbb
sub
mov
push
mov
test
inc
nop
xor
dec
fcomps
mov
lods
or
sbb
dec
cmp
shlb
fbld
mov
mov
sub
subl
pop
arpl
or
test
fstpl
inc
fnstenvs
stos
xchg
nop
sbb
mov
or
adc
cli
add
scas
xorb
out
leavew
cmp
pop
adc
bound
or
jmp
inc
xlat
jo
icebp
into
adc
push
mov
or
or
push
pop
dec
shll
mov
fadd
mov
push
mov
and
mov
mov
push
aaa
std
sub
roll
pop
xor
stos
cld
lret
sbbl
daa
mov
aaa
lods
jecxz
cwtl
fxch
and
sub
out
pop
or
addr16
mov
js
pusha
and
mov
cmpsl
mov
cmc
add
push
aam
cmp
xor
in
dec
nop
int
sahf
fwait
cmp
inc
shll
clc
sahf
mov
cmpsb
bndstx
xchg
adc
add
loop
or
nop
pop
and
pop
arpl
ljmp
popa
mov
add
add
or
stos
andb
outsl
cmp
lock
inc
ret
inc
scas
jp
dec
repz
les
daa
daa
mov
aaa
xor
mov
push
mov
xor
mov
or
movl
mov
vmwrite
les
inc
jl
cmp
loopne
leave
cli
add
lods
lret
in
lcall
sti
clc
xchg
sub
xchg
stc
dec
adc
addr16
in
sub
lods
pop
movsb
add
ret
sub
sbb
mov
dec
inc
mov
mov
jecxz
or
add
sub
lock
pop
fcmovb
lds
jecxz
mov
mov
mov
inc
sub
les
pop
cmpsl
aaa
pop
xchg
dec
sub
xchg
push
push
add
jp
mov
and
icebp
mov
pop
lock
insb
push
jmp
imul
inc
out
add
lods
push
inc
icebp
pusha
out
cmp
cmpsl
test
js
fiadds
jecxz
insb
xor
iret
rclb
aam
mov
decl
in
xor
xchg
fildll
xchg
mov
inc
add
popf
les
pop
push
mov
adc
in
pop
pop
pop
ja
xchg
faddl
stos
or
test
shrb
cmp
stos
fdivr
dec
push
adc
inc
xchg
push
out
repz
push
stc
clc
sub
addr16
fstl
stos
jno
pop
jmp
jnp
or
cmp
rcll
imul
int
add
pop
cmc
pop
and
jne
movsb
jnp
or
or
jmp
xchg
sub
ror
gs
loope
daa
fdivs
pop
sub
loop
inc
or
orb
lds
push
repz
adc
push
int3
mov
ja
sarl
adcl
fmuls
flds
daa
and
pusha
in
mull
outsb
jl
push
push
jg
sub
cwtl
pop
repz
mov
mov
push
sbb
pop
jbe
jns
and
outsb
out
dec
enter
pop
adc
mov
filds
icebp
inc
xchg
sbb
test
mov
adc
aas
and
shrb
add
sub
mov
outsl
mov
ljmp
lret
sub
mov
jb
pop
mov
jne
jbe
repz
cmp
lret
sti
js
xlat
mov
ret
dec
xchg
mov
and
dec
arpl
fstpl
pop
scas
sub
push
shr
das
scas
loop
imul
idivb
gs
adc
mov
pop
clc
stos
xchg
jecxz
pop
lret
test
cmpsb
in
xchg
stos
jmp
push
mov
je
sahf
divl
mov
test
scas
dec
idivl
cmpsl
push
loopne
adc
sbb
lods
test
fmul
addb
out
movsl
xor
les
cli
cmpl
pop
jp
test
cltd
sub
sub
popf
lahf
shll
mov
repnz
aaa
or
js
sub
mov
pusha
sub
das
out
int
inc
mov
xchg
mov
mov
bound
jle
les
addr16
in
lret
xlat
sub
push
rol
aas
repnz
mov
jne
or
lods
fbld
das
daa
mov
fld
nop
mov
xchg
xchg
lods
add
dec
test
xor
test
clc
ds
jl
fdivl
add
shlb
call
adc
inc
adc
aaa
sbb
mov
lret
add
out
loop
add
fidivrl
pop
add
aaa
mov
cmp
pusha
sub
leave
cmp
icebp
js
sbb
arpl
out
mov
inc
xchg
xchg
stc
imul
in
sbb
ds
pop
adcb
fistpll
les
sbb
stc
mov
cwtl
jo
ret
add
dec
gs
or
add
cmp
fwait
lret
outsb
stc
and
ret
mov
cmp
xchg
push
lock
adc
adc
xchg
addr16
sbb
or
outsb
lods
dec
movsl
popa
mov
arpl
xor
xlat
push
cmpsb
in
lret
fstps
inc
sbb
sub
fwait
sbb
mov
or
sub
inc
inc
mov
pushf
hlt
repnz
call
jae
cmp
jecxz
push
xorl
std
or
xor
mov
lret
dec
push
xor
data16
mov
bound
add
fwait
add
aaa
jecxz
clc
pop
xchg
clc
pop
mov
mov
pop
pop
sti
call
adc
inc
xor
out
inc
test
addr16
pop
ror
pusha
mov
rolb
lock
ret
gs
lahf
pop
mov
cmp
jb
mov
push
xorb
divb
jnp
xor
pop
mov
lods
cmp
stos
dec
fnsave
or
test
cmp
mov
add
loopne,pn
mov
mov
mov
xchg
xchg
mov
pop
xchg
out
negb
mov
add
mov
pop
inc
repnz
sbb
mov
push
mov
jge
jo
pop
ds
sahf
push
test
fidivl
push
mov
dec
push
pop
lods
dec
pop
mov
and
icebp
cs
cltd
jmp
mov
push
rcl
mov
xchg
pop
lahf
lds
pop
loopne
dec
adc
push
jmp
xchg
jl
pop
xchg
fnstsw
not
aas
fwait
and
xchg
jmp
rol
sarl
mov
xchg
push
movsl
pop
cmc
mov
popa
das
rorl
sbb
add
fsub
shlb
cmp
pop
pop
sub
mov
pop
stc
out
sbb
stos
add
pop
adc
mov
sub
outsl
inc
pop
jl
int3
dec
xor
xor
inc
out
jne
sahf
sub
lahf
mov
daa
lahf
inc
jno
fwait
in
cmc
loope
xor
adc
or
iret
ljmp
mov
pop
imul
add
gs
jb
dec
stc
mov
jmp
inc
lea
inc
push
daa
push
test
dec
je
mov
push
and
xor
mov
fstp
roll
mov
bound
jo
imul
add
xor
dec
push
inc
ljmp
push
add
pop
push
xchg
lock
pop
add
sti
lahf
push
sar
pop
push
lds
movsb
divb
cmp
xchg
inc
sub
ja
pop
mov
jg
xchg
xor
xchg
jg
xchg
je
mov
ss
orb
cmc
pusha
arpl
add
xchg
repz
ficoml
and
mov
dec
mov
iret
les
add
pop
adc
bound
adc
jge
test
dec
xchg
cmp
das
jle
orl
rorl
adc
jnp
cmp
mov
ret
mov
stos
pop
imul
out
push
pop
and
insl
movsl
mov
fdivrs
add
inc
xchg
xor
push
jmp
sub
cmp
rorl
push
lds
mov
sbb
adcl
mov
mov
sbb
ss
lods
cld
nop
jbe
dec
iret
add
add
pop
into
cmpsb
cmp
lcall
xor
out
scas
pusha
iret
sbb
in
jmp
and
dec
xlat
js
adc
imulb
shrb
ror
divl
iret
or
loope
dec
int
data16
ja
push
not
jnp
mov
cmp
mov
dec
fnstsw
mov
roll
xor
notb
xor
and
sbb
mov
out
shr
dec
push
inc
sub
adc
sbbl
xor
sub
mov
cmp
jle
ss
popa
fistps
pop
sub
dec
int3
adc
jns
sbb
cld
cmpsl
mov
push
sub
dec
sbb
mov
repz
push
fldenv
xor
aaa
jg
mov
andl
outsb
fidivrl
sbb
adc
xor
dec
or
cmp
clc
cwtl
pop
hlt
test
fsubrl
pushf
cwtl
mov
sbb
lret
imulb
sbb
nop
cmp
inc
and
jb
pop
push
dec
fcomp
adc
pop
or
dec
mov
dec
lods
and
jg
dec
jl
xchg
fimull
lods
es
mov
push
jnp
daa
scas
test
insl
dec
mov
insb
int
xchg
xchg
push
pop
pop
pusha
mov
jp
pop
push
ljmp
mov
jg
mov
enter
and
sbb
cmpsb
movsb
aas
loopne
jnp
adc
and
ret
out
scas
leave
jbe
pop
sti
jp
hlt
cmc
xchg
std
popa
dec
xlat
dec
xchg
daa
out
and
outsb
jmp
mov
ljmp
pop
into
imul
test
repz
aas
xlat
imul
rcr
pop
inc
adcl
lahf
mov
stc
out
idivl
jne
adcl
mov
pop
sub
mov
sbb
push
lcall
fdivl
dec
ss
lods
cmp
in
into
jb
xchg
cmc
add
jge
sbbb
adc
dec
push
lods
sahf
lahf
cld
adc
iret
xchg
es
pop
fldt
push
ret
hlt
fimuls
sbb
mov
filds
add
mov
xor
adc
addr16
dec
mov
fisubl
jle
ds
jae
cmpsl
mov
mov
shll
sbb
pop
push
iret
mov
sub
addb
xor
iret
cs
or
push
orb
sbb
push
sbb
aaa
jns
arpl
push
dec
mov
lods
cmp
and
sbb
push
stos
or
and
or
xor
loopne
loop
or
lret
push
iret
add
dec
xor
mov
add
inc
fstp
jle
mov
mov
hlt
mov
push
aaa
xchg
xchg
jg
aas
cs
test
fwait
and
in
jnp
inc
sub
stos
rcrl
mov
adc
jmp
pushf
adc
xor
push
out
movsl
std
add
cmp
mov
sbb
xor
jnp
push
andb
cld
and
or
rcrb
pop
inc
add
mov
mov
dec
fbld
xor
dec
pusha
daa
or
xor
inc
and
jp
clc
rcrl
stos
rorb
mov
push
lea
cmp
xchg
loope
xor
and
xor
cld
std
in
loop
popf
push
adc
mov
orl
in
adc
push
mov
inc
mov
and
in
jge
mov
pop
imul
outsl
gs
mov
xchg
sub
iret
cld
dec
pop
jns
lcall
push
jecxz
mov
call
xor
fnstcw
or
xchg
idiv
clc
pop
or
mov
push
pop
mov
mov
mov
rcll
sub
insl
jge
adc
cmp
xchg
in
std
xchg
das
je
mov
jb
scas
mov
mov
cmpsb
cmp
or
push
insl
inc
jge
mov
pop
sub
mov
mov
push
jge
dec
xchg
mov
fucomip
cmp
lock
mov
aaa
aam
bound
inc
sbb
imul
dec
aad
popf
enter
xchg
and
stc
mov
pop
dec
ret
mov
inc
mov
loop
insl
pusha
mov
xchg
ljmp
mov
xchg
sti
popf
push
xor
inc
cwtl
add
cmp
jb
sbb
fwait
mov
into
dec
xchg
push
out
repnz
test
add
hlt
orl
jne
in
sbb
xor
pop
int
xchg
mov
pushf
out
fmuls
jg
popf
es
sti
ja
mov
scas
inc
es
pop
inc
cmp
push
add
rorb
jnp
mov
mov
jecxz
pop
pop
dec
movsl
imul
rcll
push
pop
into
push
mov
sbb
or
gs
inc
push
sti
and
fistl
or
mov
fidivrl
scas
decl
rcrl
sub
mov
or
pop
sub
jno
xchg
adc
cmp
mov
cmp
dec
jns
mov
inc
xorl
insl
adc
out
xchg
jo
adc
jl
loop
jno
orb
adc
cld
sub
lea
aam
stc
xor
sbb
lret
inc
jns
mov
mov
and
xchg
lret
cmp
mov
outsl
out
jbe
xchg
orb
movsl
push
mov
hlt
call
fistl
add
cld
popf
lods
testl
fisttpll
notl
jmp
or
xchg
jge
ret
add
daa
and
push
sbb
aas
cli
stc
je
add
aad
dec
fs
mov
push
out
gs
into
dec
fadd
fcomps
jbe
imul
jae
ret
xchg
bound
xlat
xor
sub
push
int3
rol
mov
mov
repnz
xchg
fadds
adc
adc
fstl
xor
push
mov
push
sti
jl
jmp
lods
fs
mov
in
mov
push
inc
add
gs
jns
cmpsl
jo
xchg
test
aam
fs
cld
call
adc
jecxz
dec
mov
jb
cmc
lahf
cmpl
mov
fnstenv
pushf
jb
and
fs
fiaddl
sub
or
jle
dec
shl
jne
ficompl
or
ljmp
cmpsb
inc
rorl
sub
and
mov
push
loop
push
popa
sub
pop
mov
loope
sbb
push
push
jle
mov
mov
mov
mov
bound
call
fs
jno
push
mov
pop
xor
inc
cwtl
xor
jb
push
xchg
scas
jg
repz
shrl
in
jl
sbb
push
out
insb
mov
xor
popa
cli
cmp
pop
fbld
scas
stos
jns
push
mov
jne
enter
out
push
inc
and
cmpsl
sub
movsb
shrl
mov
and
and
jmp
dec
push
ret
jns
movl
test
std
aad
in
pop
mov
ret
mov
mov
xor
sub
mov
sbb
addr16
ds
push
push
sbb
imul
sub
call
ss
nop
daa
add
sbb
lret
fistpll
scas
jnp
pop
or
mov
add
ret
test
mov
mov
pop
xchg
aad
aas
xor
and
mov
mov
test
add
sub
push
daa
xor
mov
sbb
jno
aas
lea
mov
cmpsb
imul
sti
jmp
xchg
lds
ret
adc
adcl
jno
sbb
sub
aad
ss
mov
sub
int3
add
jns
jbe
cs
adc
loop
je
in
lret
das
cmp
popa
lock
pop
lods
mov
je
pop
repz
iret
arpl
enter
je
xor
test
ds
lock
dec
xchg
xchg
out
into
mov
into
mov
mov
inc
xchg
clc
call
stos
push
inc
fdivs
and
xor
dec
push
xor
outsl
sbb
xchg
cmp
sub
mov
cltd
pop
sbb
and
or
call
je
popa
cltd
inc
cmc
xor
es
imul
mov
stos
xchg
insb
mov
lock
cmc
lods
imul
dec
mov
aas
add
mov
mov
and
into
icebp
neg
adc
mov
insl
mov
jnp
ss
pop
shll
inc
mov
in
pop
sub
cmp
push
push
ljmp
sbb
xor
jnp
lods
pop
pop
call
adc
xchg
mov
mov
arpl
jge
mov
add
dec
inc
dec
jo
jo
lahf
mov
push
xchg
sbb
xlat
out
stos
in
arpl
mov
and
lods
mov
jae
cli
orb
roll
mov
push
orl
mov
mov
sbb
xor
or
stos
out
add
loopne
mov
clc
outsb
in
dec
pushf
lret
iret
jno
push
mov
or
cld
cli
call
mov
sub
leave
cltd
lods
enter
dec
xor
dec
shlb
adc
cmc
cmp
push
stc
push
aad
mov
cwtl
inc
cs
dec
mulb
adc
pop
dec
imul
outsl
rcr
or
icebp
xchg
jne
adc
fwait
mov
add
mov
cmp
push
and
dec
adc
fwait
lcall
ffree
mov
fs
pop
jecxz
dec
outsb
addr16
scas
mov
fdivp
lahf
add
and
cmp
lods
cltd
jp
cmp
push
add
pop
lret
inc
inc
adc
pop
fwait
inc
cmc
xlat
ret
ss
push
pop
adc
clc
in
mov
pop
jne
mov
mov
pop
cmc
out
mov
aaa
sti
pop
lret
cmc
aad
fmull
cwtl
jge
push
fldcw
add
cmp
gs
push
call
rclb
sahf
rcll
arpl
pop
ja
movsl
mov
push
xor
push
std
mov
inc
fidivs
or
jmp
lods
inc
pop
adc
ficompl
into
jmp
sub
jbe
adc
loop
push
das
push
ljmp
lahf
pop
jp
iret
roll
test
sti
in
in
pop
shll
pop
clc
cmp
lds
out
push
sbb
mov
pusha
lret
push
jbe
pushf
fisttps
jns
fwait
jbe
nop
xchg
inc
in
addr16
cmp
fs
adcb
add
and
jns
fcoms
jns
add
arpl
pop
int3
arpl
hlt
out
dec
mov
ljmp
leave
mov
jmp
out
add
sbb
or
out
jae
mov
and
mov
in
lcall
push
pop
test
js
in
sbb
adc
xchg
jg
pushf
loopne
xchg
incl
cmp
insl
neg
cli
push
ljmp
pop
test
and
ret
cltd
lods
cmp
gs
push
arpl
hlt
dec
rorb
out
mov
ret
lcall
int
lds
xor
add
pop
out
pop
pop
mov
jns
ror
rcrl
sbb
push
pop
out
xlat
mov
in
mov
push
jae
cmp
xchg
les
pop
or
inc
std
push
ss
in
inc
or
cmp
xchg
mov
rol
shlb
jmp
lock
into
rcrb
aad
sub
xchg
lea
cmp
xor
loop
jno
add
mov
mov
lret
cs
outsl
enter
inc
push
cltd
outsl
fistl
push
pusha
nop
jne
ret
dec
xchg
shrl
jmp
mov
jl
in
adc
je
call
js
or
xchg
dec
dec
in
adc
int
enter
stos
mov
mov
sub
ljmp
sub
push
fwait
int
jbe
add
inc
pop
dec
mov
adc
js
mov
sbb
xor
pop
repz
adc
subb
xchg
push
xchg
xchg
add
xorb
cmp
jnp
and
addr16
mov
push
sub
sbb
mov
push
inc
mov
lea
pushf
leave
shl
push
aaa
in
cltd
inc
outsb
cmpsb
roll
xorl
lock
mov
xchg
fwait
pop
adc
and
bound
cmp
sbb
pop
pop
add
cmp
out
mov
out
push
inc
iret
sbb
fstps
negl
xchg
pop
loopne
mov
xchg
xchg
out
mov
inc
rolb
int3
fldcw
mov
mov
xchg
pop
inc
and
dec
adc
cmp
xchg
lods
popa
and
outsl
push
aas
pop
and
mov
add
popf
leave
mov
sti
cmp
and
leave
push
mov
pop
and
xor
pushf
inc
fs
add
push
sbb
sub
jo
mov
jecxz
adc
push
dec
push
add
pop
pop
xchg
push
xor
cmc
and
aad
dec
aad
mov
cmpsb
sbb
adc
sbb
daa
xchg
and
xchg
gs
aad
testb
neg
mov
dec
jecxz
mov
outsl
cmc
scas
adc
sbb
pop
ss
jmp
mov
mov
fwait
aam
cmp
loope
cmpsw
jae
insl
scas
cmovp
pop
sub
mov
sub
rorl
jle
jb
clc
adcl
cwtl
insb
test
jae
dec
jno
popa
inc
push
jno
and
stos
cmp
ljmp
jns
dec
enter
xlat
inc
cmp
xorb
pop
dec
shl
mov
ja
adc
xchg
inc
outsb
int
pop
fstpt
jo
pushf
popa
fisttpl
mov
mov
das
push
stos
dec
or
movsl
lea
data16
outsl
shlb
add
cmp
jo
fwait
inc
add
inc
xchg
stos
mov
xchg
or
pusha
or
adc
mov
out
cmpsb
jne
sahf
rorl
add
cmc
mov
repz
xchg
inc
fsubs
fisttpl
adc
pushf
mov
add
insb
xor
xlat
adc
cmp
mov
aam
jecxz
ss
insb
shlb
scas
loope
loopne
addr16
pop
pop
shll
stc
out
bound
pop
imul
in
and
popa
dec
mov
xchg
outsb
aas
mov
js
in
ja
iret
daa
xchg
xchg
addl
out
stos
enter
lods
mov
or
leave
mov
mov
and
pop
dec
ret
xchg
mov
sahf
fidivl
out
cmp
pop
repz
inc
sbb
sub
jge
aaa
mov
insb
dec
into
ljmp
pop
push
test
push
cli
rcll
shll
mov
rcl
add
push
fcomps
and
or
lods
sbb
pop
cmp
lret
xchg
loop
je
and
add
xlat
sub
push
and
xchg
add
adc
mov
cli
cmp
push
arpl
inc
je
fidivs
push
mov
adc
push
ds
xchg
loopne
push
stc
pop
jp
hlt
fdivr
loop
mov
ret
insb
mov
inc
sub
adc
push
aas
push
xor
mov
add
or
fildl
pop
push
inc
lret
mov
mov
xchg
dec
dec
sbb
loopne
mov
jecxz
adc
pop
out
cltd
xchg
add
xorb
sub
cmp
loopne
mov
sbb
mov
sbb
dec
lods
scas
ret
lcall
add
sbb
test
imul
rolb
sub
jp
xchg
call
push
push
cwtl
sbb
popf
lods
xchg
mov
negb
jle
xchg
subl
lock
in
sbb
inc
push
shlb
cmc
adc
popa
inc
mov
push
imul
jb
jp
in
cmp
push
lret
mov
outsb
test
sahf
inc
cltd
push
and
mov
cmpl
lods
cmc
ss
int
sbb
mov
push
fwait
mov
lock
out
push
inc
inc
mov
or
fistpl
fs
pop
stos
pop
inc
pop
movsb
popf
inc
stos
scas
adcl
call
xchg
test
sbb
mov
lcall
add
or
push
mov
mov
mov
sbb
mov
xchg
rorb
cli
loope
mov
loopne
mov
inc
mov
or
xor
loopne
mov
adc
pop
in
cmp
cltd
rorb
mov
ds
cltd
addl
nop
das
inc
inc
and
loope
add
mov
flds
rorb
leave
daa
jne
lcall
nop
sbb
in
xor
insb
add
aam
adc
fsubrl
dec
ficoms
add
gs
xor
movsb
adc
xchg
mov
cs
mov
lock
or
filds
xchg
test
mov
repz
xchg
inc
gs
call
lahf
cmp
mov
xor
mov
divl
add
mov
jns
jp
push
and
lods
mov
in
xlat
pop
inc
in
or
dec
push
push
xor
inc
xor
push
dec
lcall
out
gs
add
xchg
jp
sub
sbb
mov
scas
dec
sbb
xor
das
add
adc
mulb
push
jo
lret
stc
lret
push
adc
les
into
push
cmp
out
js
imul
push
mov
aad
jbe
repnz
push
fists
sbb
or
jg
cmp
jge
or
imul
fs
iret
loop
cld
push
test
sub
iret
iret
jno
enter
dec
sub
xchg
xchg
push
inc
jae
add
jne
fadd
or
lret
sub
lahf
push
sub
leave
inc
jmp
imul
adc
xchg
test
movsl
mov
lret
aaa
out
es
stc
xor
fcomi
mov
sbb
lock
bound
mov
mov
repnz
push
outsb
xchg
adc
fstpt
aam
loopne
inc
sbb
xor
xchg
repnz
adcb
shrb
xchg
xor
rclb
mov
clc
shlb
cmpsb
xchg
iret
lods
lock
fsubl
mov
daa
dec
imul
xchg
and
aas
cmp
push
mov
or
pop
mov
test
aam
arpl
pop
clc
mov
in
mov
leave
je
in
addl
in
ret
dec
pop
jo
cbtw
je
fnstsw
cmp
sbb
outsb
cmp
les
adc
add
hlt
sbb
lret
imul
or
pop
test
fs
call
cmpsl
test
insl
xchg
lcall
xchg
pop
mov
inc
nop
xchg
sbb
movsb
dec
adc
lcall
testb
dec
gs
outsl
call
sub
aad
adc
insb
out
push
jne
jmp
cmp
int3
mov
push
je
es
test
sub
fwait
enter
fsubl
and
jb
lds
pop
addr16
pop
js
dec
outsb
stos
push
pop
inc
sub
cltd
and
or
into
lcall
popf
mov
mov
xchg
test
sbb
imul
and
pop
stc
pop
or
scas
adc
xor
outsl
mov
mov
mov
scas
sub
orl
rclb
mov
shlb
add
lahf
adc
repz
rcrb
mov
repz
out
jns
push
push
dec
push
arpl
cmp
int
lret
loope
mov
mov
jns
or
mov
cltd
mov
pop
inc
imull
inc
inc
fbld
xchg
pop
xor
mov
sbbl
push
rcr
pop
adc
adc
lock
iret
inc
mov
push
push
xor
test
pop
in
cwtl
in
push
pop
cli
sub
lcall
xorb
xor
std
ja
xor
sub
inc
lods
dec
mov
push
or
popa
call
test
je
cltd
enter
outsl
jnp
xchg
leave
inc
divb
mov
cld
int3
sbb
imul
int3
movsl
shrl
fisubrs
mov
jo
popf
pop
out
push
mov
mov
leave
scas
movsl
cmp
pop
sbb
inc
pop
xor
xchg
xor
lea
ret
sbb
pop
lret
jge
inc
xchg
addr16
gs
push
jl
xorb
adc
mov
adc
cmp
xchg
xchg
push
test
aas
das
fists
jmp
inc
out
push
stos
pop
orl
std
push
or
push
movsl
out
xchg
lea
insb
adc
and
test
mov
cmp
dec
mov
push
fs
ret
cli
or
mov
cs
aaa
out
xor
gs
shlb
add
mov
push
andl
jb
shll
test
dec
pop
jns
xchg
imul
sbb
stos
stos
loopne
mov
lods
jne
ret
idivl
loope
pop
and
stos
push
aad
inc
dec
js
push
inc
ret
xchg
aam
dec
jge
and
sbb
and
push
dec
add
imul
xchg
or
stc
insl
stc
mov
inc
scas
scas
push
mov
sub
and
sbb
inc
sbb
add
xchg
ret
lds
mov
inc
xor
jo
pop
inc
std
into
ja
push
mov
dec
cwtl
lock
inc
out
add
mov
ss
repz
sub
cmp
push
lods
inc
pop
add
out
cmpsl
daa
std
in
add
mov
mov
fisttpl
mov
mov
enter
sub
adc
mov
imull
lock
sub
xor
mov
mov
add
dec
pop
rclb
and
push
fcoml
cwtl
adc
mov
adcl
popa
pushf
mov
xor
xchg
lods
repnz
xchg
jo,pt
pop
sub
fmulp
lock
out
mov
mov
insb
bound
arpl
adc
jle
add
shrl
cs
adc
push
adc
pop
add
cmp
adc
jecxz
cmpsl
lea
add
mov
mov
add
daa
aaa
nop
dec
lret
out
push
imul
negb
pop
outsb
sbb
mov
int3
lcall
out
mov
or
push
pop
push
repz
int3
lods
nop
dec
insb
pmaddwd
std
xchg
xor
dec
dec
xor
inc
push
les
adc
js
nop
mov
inc
pop
daa
xor
out
shlb
frstor
pop
pop
scas
fidivrl
mov
stc
psubsw
popa
and
sahf
mov
cwtl
jl
mov
in
les
xlat
decb
loopne
mov
xor
pop
xchg
jle
push
jo
jl
dec
mov
daa
add
lds
mov
gs
push
jnp
cmp
insb
dec
lods
xchg
xchg
dec
dec
cmpsb
mov
sbb
ja
push
insl
test
data16
mov
test
xor
mov
sub
jno
bound
jl
jno
pop
jg
sbb
dec
mov
sarb
xor
scas
call
mov
mov
cmpsb
push
movsl
cmp
sahf
das
jecxz
cmp
mov
mov
clc
mov
out
sub
dec
inc
repz
mov
mov
xor
jmp
lcall
in
push
or
scas
or
xor
fdivrl
mov
xor
inc
cmp
fwait
arpl
test
pop
jge
dec
push
mov
sbb
dec
bound
sub
pop
push
call
jne
lret
lods
scas
mov
je
pop
scas
mov
std
and
pusha
mov
imul
pop
ds
jecxz
mov
fwait
jae
imul
lods
jo
cs
cmc
mov
mov
mov
and
push
stos
iret
jl
mov
add
mulb
adc
mov
outsb
aas
jp
aaa
fdivs
scas
mov
daa
jo
stc
aas
outsl
test
cmp
lods
mov
push
insb
jns
or
aas
test
outsl
adc
mov
jecxz
xor
aas
push
lods
inc
out
loope
and
fcmovnu
jecxz
jmp
loope
ja
les
dec
add
cld
pop
mov
mov
push
push
cmp
loopne
rcl
rorl
and
insb
scas
cs
cmpsl
mov
or
or
push
and
ret
xchg
mov
ror
push
pop
and
sahf
dec
cmpsb
repz
push
mov
inc
out
movsb
mov
or
cmp
or
stos
push
int3
jle
int
mov
or
mov
and
push
adc
mov
aas
add
push
jg
into
fmull
or
xchg
jae
cmc
jp
dec
xchg
mov
dec
into
jl
std
xor
push
outsb
or
add
sar
add
push
jle
and
in
xchg
cld
adc
mov
push
movsb
test
into
mov
aad
xchg
jae
cld
xor
ret
js
gs
xor
mov
lods
jnp
mov
int
cmc
and
jnp
sbb
cmp
sub
outsl
aad
mov
and
sub
pop
das
adc
imul
cltd
pop
shlb
adc
out
mov
xchg
loope
jb
out
xchg
jnp
inc
add
add
cltd
into
mov
and
shrb
and
jl
jp
add
scas
jg
cmp
add
jo
stos
aaa
mov
inc
push
pop
sbbb
cmp
or
imull
cmp
outsb
xlat
ret
lea
sub
push
pop
xchg
clc
mov
cmc
das
psubusw
cmp
cmp
pop
stc
sti
arpl
mov
sarl
inc
aaa
loopne
push
push
jae
cmpsl
mov
aam
xor
imul
jmp
sub
xchg
mov
enter
clc
int3
aas
push
xchg
inc
lcall
jp
fadds
cli
scas
mov
lods
or
xor
out
daa
and
pop
push
push
push
repnz
sti
ljmp
add
call
jmp
rcr
add
subb
inc
push
mov
int3
pop
push
fcomps
rorb
movsb
xor
adc
or
add
cmp
mov
cltd
test
mov
out
lret
add
adc
mov
rorl
loope
sub
jp
fwait
test
xchg
push
or
inc
add
inc
pop
test
mov
clc
mov
stc
adc
into
into
jne
insl
dec
rcrl
and
cmp
loop
dec
in
mov
lahf
push
popf
shr
cmp
inc
fs
loop
nop
fmulp
xchg
in
ja
jbe
jge
mov
aam
inc
sub
pusha
xchg
das
or
pop
xchg
mov
push
mov
cltd
rorl
and
scas
mov
stos
sub
ret
call
add
xchg
fists
mov
push
mov
rorb
fldenv
add
lret
push
cmpsl
jns
sbb
icebp
xchg
lret
cld
test
push
jge
inc
dec
lods
ret
sub
mov
xor
ljmp
push
or
or
add
cmc
xchg
mov
loopne
loopne
add
mov
pop
push
lcall
bsf
or
or
icebp
fistl
jmp
inc
cmp
out
and
sbb
xchg
movsb
stc
or
mov
pop
push
or
fdivrs
adcb
xchg
dec
sbb
cmpsl
or
jge
inc
addb
jge
and
nop
sub
mov
mov
sub
lret
imul
pop
push
rorl
ret
jp
scas
pushf
into
inc
pop
adc
pushl
jp
cmp
enter
sti
scas
cwtl
aad
mov
repz
adc
push
sbb
lods
arpl
popa
inc
cs
push
fadds
add
mov
jne
mov
xor
dec
in
push
mov
mov
rcll
in
das
inc
daa
das
inc
lods
repnz
pop
mov
push
popa
ljmp
pop
mov
adcb
adc
mov
sbb
xor
and
jle
xor
gs
rcrb
loop
mov
jo
scas
xchg
xchg
mov
adc
push
add
xchg
subl
mov
adc
out
xchg
roll
rolb
mov
xchg
add
shll
mov
js
les
add
popa
dec
pop
sub
shlb
push
mov
sub
int3
movsb
jae
test
les
sbb
xor
in
add
or
cmc
shll
mov
cs
xchg
push
mov
daa
repnz
outsb
add
push
pop
loop
push
test
sbb
sub
mov
inc
push
adc
repnz
sahf
jecxz
gs
sub
test
pop
lds
out
dec
imul
test
dec
movsb
adc
mov
iret
xchg
push
sub
out
icebp
or
nop
xchg
shrl
bound
adc
cs
mov
dec
flds
sub
add
cmp
into
lret
and
std
mov
pop
pop
addr16
mov
lret
mov
in
dec
push
pusha
nop
inc
aad
cmp
cmp
andl
jae
or
insl
cmp
icebp
nop
jmp
sbb
shr
rcrb
dec
dec
xchg
int
ljmp
std
movsl
insl
mov
rclb
xlat
fiadds
out
sub
cmp
shl
sub
add
loope
out
pop
push
adc
dec
cwtl
std
jge
das
sbb
and
or
subl
inc
outsb
pushf
dec
pusha
call
pusha
pop
jmp
sbb
imull
sub
repz
sti
push
cmpb
repnz
push
sti
aam
dec
outsl
adc
test
fdivrs
lret
stc
insb
sub
loope
neg
adc
bound
and
mov
inc
orb
fadd
cli
es
cmp
mull
mov
jns
mov
je
jnp
jno
push
out
jg
xchg
shrl
sti
in
xchg
out
test
jmp
cmp
or
pop
xor
fs
inc
push
push
and
and
test
and
cmp
jae
negl
rcll
dec
aaa
jmp
adc
mov
pop
outsl
bound
sbb
js
push
daa
mov
outsl
jl
addr16
pop
xchg
mov
sub
vzeroupper
push
outsl
dec
xchg
subl
cmpxchg
shlb
jae
push
hlt
dec
imul
pushf
sbb
icebp
mov
movsb
or
cwtl
jae
lahf
loope
xor
fstpl
lods
xor
outsl
cmp
movsb
fwait
cs
out
sbb
fsubs
xor
aaa
fsub
push
imul
aad
xchg
aaa
iret
aas
cltd
jae
cmpsb
mov
or
and
rcrl
jecxz
jns
dec
shlb
pop
cmpsl
out
sub
int
popa
pop
pushf
rolb
in
clc
fnsave
adc
mov
call
imul
rcl
xchg
mov
xor
in
sahf
xchg
jge
in
ret
test
bound
mov
sbb
fmul
inc
or
aam
mov
aad
dec
fwait
mov
and
rclb
int
lret
aam
sarl
stos
xchg
push
std
sub
dec
je
fmull
sti
int
cmc
loop
loop
pop
sbb
outsb
mov
or
ss
jecxz
and
imul
mov
pushf
cmp
pop
add
and
hlt
int
movsl
push
pop
std
into
mov
push
cmp
jb
push
dec
fld
dec
idivl
sti
in
cli
leave
mov
jmp
push
mov
fsubrl
sbb
fdivl
outsl
jmp
bswap
or
xlat
outsb
das
mov
xor
sub
gs
mov
sti
int3
xor
fisubl
fcompl
cs
fcoml
mov
lods
dec
imul
pushf
ljmp
mov
lret
cmp
int3
push
addl
mov
adcl
pushf
movsb
and
jb
mov
push
cmpsb
ss
or
mov
std
fs
jl
pushl
loop
xchg
imul
hlt
outsb
std
lahf
addr16
xchg
mov
movsb
cmp
aaa
mov
sti
push
add
and
mov
out
push
or
sub
adc
push
outsb
xor
lcall
pop
mov
dec
cs
lret
fcmovnb
sbbl
inc
stos
test
push
pop
jmp
stos
roll
xor
jge
es
pop
inc
ds
dec
cmpsb
scas
xchg
sub
test
ss
flds
cmp
repz
or
movups
jecxz
pushf
in
int3
clc
pop
loope
mov
mov
pop
jge
fdivrl
shll
and
pop
cmp
outsb
mov
mov
add
cmpsl
mov
loop
xchg
insb
dec
push
in
xlat
sbb
jmp
mov
addb
aaa
sub
xchg
push
mov
lret
sarl
bound
mov
sbb
and
pop
fwait
sub
pop
cwtl
cmp
fldcw
shll
cld
xchg
data16
testb
repnz
popf
repnz
repnz
andw
repz
dec
sbb
pop
jo
mov
cwtl
ret
cs
pop
pop
test
jecxz
cli
std
xchg
cmp
jns
jge
popa
out
out
pop
adc
xor
or
hlt
into
aaa
imul
push
movsl
int
imul
dec
in
mov
call
enter
addl
iret
ret
cmc
xchg
mov
mov
test
repnz
jno
cmc
movsb
inc
ja
loope
inc
ret
ret
insl
lret
xor
ret
inc
loopne
rcl
outsl
outsl
stos
pop
dec
jb
xor
out
and
cmp
mov
scas
popf
sbb
lock
jbe
add
jnp
stos
fimuls
es
lea
add
adc
sahf
adc
pop
mov
adc
and
inc
lock
aam
imul
shlb
and
int
movsb
repnz
sub
enter
jb
ja
and
xchg
dec
out
inc
jmp
dec
adcb
inc
jns
and
mov
or
cmp
js
lods
and
xor
aas
or
testl
jp
or
fs
repz
jne
ljmp
ret
inc
sti
jl
stos
inc
dec
and
lret
pop
jno
jge
mov
xchg
call
ret
adc
adc
js
sbbb
inc
push
sbb
out
inc
enter
inc
xor
push
in
iret
push
sbb
nop
sbb
outsb
xchg
aad
sbb
sub
and
stos
xchg
lret
ss
test
lret
fcomip
dec
sbb
les
adcl
sbb
mov
xchg
cmp
popf
ja
inc
stc
jns
lret
mov
rcl
add
fildll
aad
mov
add
std
jns
adc
mov
sarl
test
cmpb
push
pop
adc
mov
and
mov
pop
scas
dec
mov
dec
scas
mov
xchg
lret
pushf
fildl
mov
scas
pushf
sub
xchg
cltd
mov
push
mov
mov
jge
sbb
dec
jne
addr16
stos
sti
dec
add
push
mov
pusha
je
lods
es
fndisi(8087
outsl
fldt
xor
add
adc
jmp
out
fcomps
or
cmpsl
mov
inc
mov
and
test
cmpsb
clc
int
inc
lret
inc
jg
movsl
out
mov
rcrb
dec
test
hlt
lods
pop
andb
cmp
jp
test
mov
xor
jmp
sti
adc
adc
mov
sbb
mov
daa
inc
arpl
xchg
sti
pop
xor
mov
mov
mov
hlt
rolb
in
sub
stos
fidivl
sbb
push
shrb
popf
into
mov
cltd
ds
pushf
icebp
shll
xchg
pop
jae
sahf
sub
inc
jmp
and
lods
dec
cmp
icebp
mov
mov
mov
fs
or
in
testb
mov
negb
loopne
scas
jns
adc
mov
pop
enter
jae
sub
cmpsl
pop
bound
push
dec
or
cld
gs
lcall
jbe
sti
neg
jge
fsts
jnp
inc
push
add
ret
mov
mov
ret
xchg
mov
jae
inc
pushf
mov
or
xchg
jge
clc
cmp
pop
shll
inc
call
int
push
aas
fcomp
cmp
dec
cmpsb
leave
jg
insl
pushf
adc
xchg
jecxz
les
jmp
xor
outsb
cmc
pop
pop
mov
es
push
test
jle
push
movsl
xchg
cmp
data16
mov
pushf
enter
stos
add
mov
dec
or
mov
cltd
arpl
jo
in
dec
inc
adc
pusha
mov
ljmp
shrb
xor
xlat
into
std
dec
add
fistpl
and
push
mov
xchg
add
push
cmc
dec
pop
xchg
push
sub
int3
loopne
cmpsl
imul
jne
jle
push
ret
pop
pop
pusha
jl
sub
adcb
sub
test
call
stos
cs
out
pop
in
js
add
jbe
shrb
jo
call
push
add
fxch
in
or
push
fists
pop
inc
dec
adc
xchg
movsl
jns
add
mov
notb
test
subb
movups
imul
stc
cmp
jecxz
in
aaa
add
and
and
mov
inc
cmp
stc
lcall
fs
fldt
dec
lret
fwait
stc
lret
push
xchg
xor
mov
cmp
jns
or
xchg
cmp
addb
pop
xor
sub
sub
in
sbb
ss
adc
das
arpl
iret
xchg
into
xor
rorb
mov
mov
mov
jbe
jb
mov
pop
jbe
and
invd
pmaxub
fildl
sub
imul
out
jns
mov
aad
in
insl
test
sub
push
dec
jg
dec
adc
fwait
outsl
in
loope
sub
push
bound
pop
mov
faddl
dec
lea
or
repz
jno
mov
adc
std
cmp
inc
fisubrs
ret
rcrl
ficoml
fdiv
ror
pop
out
std
cwtl
lret
adc
jnp
faddl
xor
push
call
iret
fs
into
mov
mov
loopne
adc
jecxz
sub
inc
push
int
mov
rorb
fisttps
sbb
insb
shll
add
fimull
dec
cltd
imul
sbb
mov
xor
mov
aaa
rorb
stos
cmp
dec
mov
push
movsb
sub
xchg
cmp
mov
adc
pop
pop
shrl
scas
jecxz
mov
iret
xlat
jg
cli
jb
aaa
rorb
roll
insb
das
popf
push
lods
xlat
cmp
ljmp
sbb
cmp
ds
xchg
mov
movsl
push
mov
add
jbe
inc
jo
push
ds
inc
pop
xchg
aaa
push
dec
xchg
dec
int3
inc
jae
mov
cmpsb
push
xchg
jecxz
adcl
leave
imul
dec
and
adc
xchg
jo
mov
ret
sbb
cmp
loop
dec
cmp
dec
icebp
lahf
cwtl
stc
enter
sub
shl
aad
arpl
dec
xchg
fisubs
mov
out
pushf
mov
cwtl
movsb
test
jo
push
cmp
js
mov
mov
cmp
in
cwtl
inc
not
arpl
mov
dec
outsb
popf
push
bound
test
movsl
jle
cmpsb
fwait
in
fwait
dec
mov
inc
xchg
mov
sub
push
add
repnz
mov
and
inc
dec
xchg
cmp
aam
sbb
into
test
xchg
fisttpll
push
xor
push
out
test
pop
xchg
xchg
arpl
iret
popa
or
leave
mov
rcrl
je
scas
and
mov
sahf
push
cmp
cmp
sbb
lret
enter
fwait
mov
ss
xchg
adc
jecxz
lock
fimull
fcomps
popa
pop
xlat
adc
aam
jne
data16
pop
fistps
sub
arpl
out
pop
test
mov
push
idivl
sub
loopne
pop
gs
outsb
or
dec
shll
xchg
leave
pop
xchg
int
mov
int
pop
dec
lods
outsl
gs
movsb
xor
sti
and
pushf
pop
movsl
mov
push
jne
dec
scas
mov
or
insb
out
ja
push
add
and
add
stos
xchg
int3
mov
mov
test
loope
les
mov
push
mov
pop
xchg
push
ja
adc
stos
xor
movsb
jbe
js
inc
adc
mov
into
push
cli
popa
pop
push
fs
xor
jmp
cmp
push
jge
cld
jg
cmp
lock
lods
jg
fwait
fwait
sahf
and
dec
xor
divl
sbb
push
pop
rcrl
sub
int
sbb
out
into
popa
pop
inc
sub
and
popa
inc
xchg
stos
fisubrl
xchg
outsb
insb
pop
fs
pop
and
mov
cmp
push
dec
sbb
into
nop
cmpsl
loop
jmp
les
and
das
sbb
lret
mov
shr
loopne
ljmp
pop
iretw
cld
test
and
adc
lret
addr16
ja
inc
icebp
gs
cmp
xchg
movsl
dec
mov
add
lods
movsb
movsb
ja
jb
xchg
or
enter
push
add
movsb
inc
pop
jne
in
mov
bound
mov
mov
stc
inc
icebp
movsl
push
pop
fs
mov
pop
cmpsl
sahf
fimull
negb
ret
testb
dec
insb
jle
inc
mov
xor
cmp
arpl
mov
inc
jp
fcmovnb
add
pop
jae
pusha
mov
mov
push
cmp
adc
adc
mov
jbe
divb
fnop
sub
or
leave
jp
mov
cmpsl
pop
mov
adc
jbe
sti
dec
mov
test
mov
adc
stos
mov
in
xchg
jecxz
mov
sbb
cld
insb
cwtl
mov
or
rolb
movsb
jge
outsb
mov
pop
mov
pop
jmp
out
shl
mov
pop
int
ret
mov
pop
xchg
cltd
ret
mov
rolb
orb
pushf
les
push
jo
shll
in
loope
inc
xchg
ljmp
mov
push
adc
test
sahf
clc
pop
jp
fs
or
insb
inc
pop
scas
mov
mov
pusha
xor
loopne
push
sbb
dec
outsl
shlb
sub
mov
mov
scas
cmp
test
mov
mov
push
std
fistps
mov
aas
lret
pop
jo
fisubrl
outsb
addl
jnp
dec
mov
mov
popf
cld
out
cltd
cmp
and
add
inc
aaa
std
aas
sbb
aam
jmp
add
jns
fidivs
sub
sub
nop
sub
inc
loope
je
dec
pop
inc
sahf
jo
sub
in
dec
cltd
subl
clc
clc
lret
stos
mov
pop
jns
lret
push
test
jmp
pop
sti
adc
or
filds
icebp
rsqrtps
inc
add
inc
mov
das
int
push
shrb
pop
ljmp
daa
mov
adc
pop
popf
adc
insl
mov
or
out
cmpsb
test
cmp
mov
popf
cmp
sub
lret
lret
repnz
cld
sbb
lret
dec
cs
aad
icebp
ja
insb
mov
inc
stc
jmp
mov
sbb
lds
js
push
adc
out
jnp
push
xor
or
fadd
add
fucomip
clc
call
in
xchg
xor
cmp
inc
and
scas
pop
out
cmp
mov
inc
mov
sub
lock
and
mov
lret
mov
outsl
add
ficoml
aaa
in
test
mov
pop
cmpsb
push
ljmp
mov
shl
loop
fists
scas
push
imul
dec
adc
xchg
test
pop
lcall
mov
fs
mov
xor
sar
xchg
repz
push
or
addr16
or
mov
push
les
lcall
dec
in
sub
dec
mov
and
fsubs
xor
imul
shlb
outsl
pop
lret
ret
pop
adc
and
movsb
gs
jge
bound
jge
pop
push
mov
in
mov
sbb
fcomp
movsl
xchg
adcl
data16
pop
mov
cld
sbb
xchg
inc
sbb
sub
jmp
dec
in
push
addr16
bound
out
inc
mov
push
jno
call
pop
sarb
mov
mov
sahf
mov
and
and
mov
ficoms
btl
outsb
push
mov
push
pop
fcmovnu
xor
mov
add
fstpt
test
in
xlat
sbb
xchg
loopne
jnp
xchg
rorb
adc
scas
cmp
jl
ljmp
rolb
lds
cmpb
fdivl
int
in
pop
jno
rcrb
mov
in
cmp
call
dec
jge
jge
repnz
dec
push
imul
jg
dec
sbb
mov
movsb
int3
or
sub
out
cmpsb
lret
inc
clc
loope
inc
jl
int
push
push
ja
mov
sbb
iret
cli
mov
shll
mov
aam
sarb
sub
sbb
fisttps
out
iret
mov
xlat
cmp
movsl
mov
icebp
or
popa
psrlq
aas
or
int
cmp
add
adcb
leave
loop
push
sarb
mov
xchg
fdivrs
call
dec
dec
ficompl
imul
push
loop
mov
sub
fs
aaa
fcoml
or
mov
pop
dec
fcomps
stos
fiaddl
inc
outsl
imul
sahf
std
jmp
popa
nop
push
cmp
pop
rcll
popa
and
jbe
mov
mov
xor
lock
mov
sbb
mov
test
out
scas
sti
cmp
repz
iret
aas
lahf
ja
shll
and
aaa
dec
dec
adc
int3
sub
and
adc
pop
test
loope
fstps
aam
int
fcomp
jne
push
push
mov
push
sbb
push
and
xchg
andl
out
sub
cmp
cwtl
pop
lods
dec
shr
pushf
sub
push
mov
xchg
insl
jno
mov
push
rorb
mov
insb
inc
jae
cs
jns
mov
ret
sub
mov
mov
inc
xchg
push
daa
int
jmp
xor
pop
dec
aas
xor
pop
pop
gs
push
fsub
pushf
in
nop
jno
dec
test
jns
pop
ds
movl
cmpsl
add
cmp
jnp
mov
aas
push
pusha
test
insl
sbb
add
pop
mov
or
xchg
cmp
enter
sahf
pop
xchg
xchg
lret
lret
mov
sbb
push
mov
lcall
flds
or
ror
lret
mov
mov
mov
jnp
pop
dec
arpl
test
add
adc
scas
sbb
pop
dec
sahf
jmp
gs
test
sub
dec
inc
pop
cmp
mov
and
dec
pop
pop
and
push
or
std
out
fcoml
adc
adcb
es
mov
outsb
pop
and
adc
repz
repz
sub
inc
ret
lods
xchg
dec
inc
imul
jae
xchg
repnz
pop
ja
and
xchg
mov
jbe
xchg
lods
pop
popf
xchg
jnp
cmpb
jge
call
cmp
push
ret
jmp
loope
xchg
fnstsw
int
neg
lods
cmc
rolb
and
pushf
in
popf
stos
pop
loopne
sbb
data16
cmp
add
xor
adc
cmp
push
test
dec
fadd
mov
shl
cmp
adc
jns
dec
ljmp
xlat
pop
cld
jle
pop
add
mov
lock
adc
mov
sbb
pop
xchg
add
or
ror
jnp
pop
mov
js
out
and
cmpsb
mov
popf
and
push
push
js
decb
subl
jns
std
lret
popa
sub
aaa
ja
inc
and
movsb
pop
cmp
mov
imul
and
sub
push
dec
es
xchg
call
dec
and
pop
js
and
sbb
mov
lret
xor
adc
out
push
dec
das
push
cltd
dec
xor
push
lret
fnsave
inc
dec
adc
fiadds
jae
gs
shlb
orl
popa
sbb
cmpsl
push
aaa
lret
mov
fcmovb
nop
jge
and
data16
jbe
mov
out
mov
mov
int3
jge
add
mov
leave
leave
add
cmpsb
pop
les
enter
xchg
or
mov
push
cli
mov
sbb
push
dec
jle
sbb
and
push
daa
xchg
push
jecxz
mov
or
jae
les
shrl
mov
sete
mov
outsb
xchg
iret
cli
push
cmp
adc
pop
or
push
sbb
imul
in
stos
jmp
jo
push
fisubl
pop
add
inc
pushl
jle
pop
add
mov
inc
es
daa
fmuls
pop
nop
lcallw
sbb
pushf
lret
popl
in
cwtl
stos
fwait
aas
test
mov
add
mov
nop
mov
add
inc
adc
mov
cmp
stc
rcll
dec
sbb
xor
popa
int3
bound
push
pop
mov
lock
sub
scas
xchg
and
inc
mov
inc
pop
iret
mov
outsl
and
test
ret
fidivs
iret
and
in
mov
loopne
leave
push
cmp
icebp
dec
out
outsl
mov
lods
fwait
add
inc
loop
xor
sti
sub
mov
pop
pushf
pop
vexpandpd
shl
xchg
mov
add
pushf
jmp
push
add
repnz
popf
mov
rcr
rclb
push
sub
inc
mov
dec
je
arpl
test
and
xchg
cmpsl
jl
mov
scas
test
cmc
cwtl
jo
movsl
push
leave
lods
idivl
imul
aaa
aaa
or
sub
lret
into
repz
mov
pop
xchg
pusha
inc
shll
adc
popa
xor
in
mov
mov
sbbl
mov
fst
test
out
mov
clc
cmp
cmpsb
adc
push
pop
sub
cld
hlt
mov
cmp
shl
shll
mov
inc
push
sti
and
xor
push
loope
sbb
leave
shrl
dec
bound
mov
xor
mov
rclb
stc
int
std
iret
imul
icebp
mov
movsl
std
ljmp
fdivs
stc
adc
out
aaa
fstpt
out
cmpsb
std
outsb
das
push
add
popa
repz
sahf
mov
cli
push
nop
rorl
mov
dec
add
imul
pop
sub
and
out
in
jg
clc
std
in
stc
in
mov
add
sbb
mov
leave
cmp
call
sub
test
leave
mov
insb
xchg
sub
dec
push
cmc
lods
adc
les
cmp
push
sub
rcrb
mov
ss
mov
fcompp
stc
adcl
mov
push
shrd
movsl
or
roll
loope
jnp
cmp
cmp
test
int
dec
fmul
push
and
jbe
mov
pop
mov
ljmp
pop
and
lcall
lret
repnz
xor
add
pop
inc
pop
sub
cltd
push
outsb
shlb
stos
icebp
lret
pop
jae
gs
icebp
mov
xchg
repz
fistpll
sub
stc
jle
xchg
jecxz
lods
xor
pop
out
enter
add
loop
lret
jge
xlat
xchg
pop
stos
iret
aam
lods
fildll
add
xchg
mov
in
mov
add
pop
iret
in
add
cmpsl
ret
aad
in
int
sub
push
idivl
xchg
push
mov
scas
mov
ret
push
jg
cmp
fisubs
cmp
push
mov
scas
adc
scas
inc
jecxz
mov
sub
push
in
xchg
inc
lahf
pop
xchg
jecxz
push
lock
repnz
xor
dec
inc
imul
orb
clc
inc
sbb
ljmp
or
inc
mov
push
pop
sub
mov
test
jns
lods
pop
push
outsb
aas
xchg
push
cmpsl
jp
xor
shll
xchg
adc
cmp
xor
jno
xchg
fisttps
xlat
fwait
loopne
in
cs
jle
sub
daa
mov
xchg
loope
adc
test
fs
enter
ds
test
xchg
jge
lcall
inc
dec
mov
mov
xor
loope
aam
leave
xor
cmpl
fsubs
test
mov
test
jmp
or
xlat
mov
dec
subb
bound
pop
cmp
inc
xchg
mov
loope
setl
and
lcall
pop
loop
cmpsl
add
out
subb
mov
dec
sbb
sti
cmc
push
adc
adc
ret
pop
sbb
push
in
enter
sbb
mov
clc
cli
lds
cmpsb
cmp
dec
mov
fmul
test
add
jmp
clc
inc
xor
clc
les
cwtl
lret
int3
jnp
incb
mov
or
testl
std
mov
std
ja
outsb
fcmove
fldl
inc
in
pop
sub
jne
jmp
pop
fs
scas
ret
sti
mov
push
mov
lcall
jmp
push
mov
fsubr
sbb
push
imul
in
xchg
addr16
scas
inc
mov
jl
cmp
cwtl
inc
subb
adc
mov
popa
hlt
repnz
or
test
movq
dec
lcall
or
test
or
loop
cli
pop
pop
add
fwait
ret
inc
mov
pop
pop
scas
pop
mov
jno
jnp
pop
lahf
jo
push
cmc
mov
xor
push
push
imul
cmpsl
mov
jne
testl
sbb
popa
insl
cs
ljmp
sahf
pop
pop
nop
clc
dec
rorb
jmp
ret
and
jecxz
shr
add
insb
jl
lcall
daa
fisttpll
pop
lods
push
and
push
pop
mov
out
loop
out
cmp
cmp
mov
and
out
mov
ficoml
sub
sarb
add
sbb
sbb
xor
aas
stos
fidivrl
push
pop
in
bound
xor
into
pop
mov
adc
push
test
jmp
enter
nop
shll
sub
xchg
std
jno
jle
gs
pop
mov
idiv
not
add
incl
aam
and
jecxz
adc
cmpsl
mov
sbb
xchg
inc
movsl
sub
clc
loopne
jg
pop
jl
test
movsl
cmp
in
loop
inc
pushf
pop
pop
repnz
inc
dec
test
fmuls
push
dec
nop
scas
insl
adc
mov
cmp
ss
ljmp
test
xchg
jb
mov
xor
jge
sti
ds
adc
xchg
out
in
mov
lret
test
mov
mov
sbb
fadds
push
aad
lods
les
mov
pop
sub
sub
pop
dec
mov
ljmp
fsub
cmpsb
or
mov
sahf
sbb
dec
cmp
loope
pop
fidivrl
fisubrs
mov
fsubs
push
lcall
fldl
call
jb
sub
test
ds
fdivrp
dec
dec
pop
fwait
int3
inc
repz
mov
push
lds
jecxz
imul
lret
out
cmp
std
jne
mov
mov
cwtl
xchg
push
out
popf
adc
lods
scas
cmp
test
test
cs
or
dec
loop
ror
pushf
jge
out
decb
xchg
test
or
test
mov
fidivrs
imul
cmpsl
aas
inc
stos
pop
jle
inc
data16
mov
inc
scas
sbb
jle
inc
incl
cmpsl
ds
imul
inc
cmp
test
inc
cld
divps
adc
out
punpcklbw
outsl
mov
jns
repnz
fists
ret
pop
dec
pop
addr16
pop
in
in
adc
push
and
cmp
jle
cli
insb
jno
dec
popa
push
enter
xor
pop
or
ja
sub
xor
nop
scas
fmul
sbb
test
add
fstl
push
push
xor
jbe
into
add
ret
xchg
cld
iret
mov
mov
sbb
fsubl
push
stos
test
dec
aam
mov
incl
mov
mov
aad
imul
js
cmpsl
jae
lret
jb
decl
mov
inc
lea
out
adc
and
sahf
jp
mov
inc
dec
xchg
hlt
ljmp
dec
sbb
imul
les
jns
mov
sub
add
rol
lcall
sbb
xor
adc
xlat
addr16
lods
mov
lahf
and
sub
mov
sahf
fcomps
ss
aam
in
cmpsb
adc
cltd
mov
je
or
jno
mov
loope
fcom
jbe
xor
xchg
lcall
jge
test
stc
cmpsl
lock
arpl
ds
xor
sub
jle
push
adc
push
aam
jle
jl
push
ret
cmp
jp
cmpb
pop
mov
jb
push
out
leave
pop
mov
loopne
mov
jns
in
shll
inc
popa
jecxz
std
cmp
lods
jne
and
fadds
sbb
sbb
pop
xor
movsb
mov
out
imul
inc
leave
mov
adc
add
leave
mov
out
iret
and
ja
xor
jle
icebp
or
push
mov
test
xchg
dec
sub
aad
ljmp
adc
movsb
lods
shrb
xor
mov
ja
stos
jmp
push
mov
mov
pop
mov
sbb
mov
inc
mov
jle
icebp
xor
std
and
and
call
xor
jle
adc
cld
xor
lods
xor
cmp
pop
dec
test
in
lcall
dec
push
lcall
lock
sbb
lret
add
test
lahf
cmp
mov
inc
popa
mov
psadbw
cld
adcl
sbb
std
jmp
insl
inc
nop
mov
push
es
push
add
jl
movsb
and
and
inc
and
and
addl
jecxz
push
add
lret
bound
jb
push
out
xchg
sub
lods
cld
or
in
pop
add
out
add
scas
inc
out
pop
mov
cmp
movsb
loop
fiadds
xchg
shll
fidivl
dec
into
dec
inc
fcomip
pop
sub
mov
hlt
lcall
insl
ljmp
pop
jmp
sub
ret
xor
xchg
es
sahf
shlb
adc
lock
push
xchg
rol
dec
sbb
leave
pop
in
push
and
imul
jno
cmp
add
cmpsb
push
mov
sahf
mov
push
or
xchg
add
mov
lock
mov
mov
push
xchg
sub
dec
in
je
cltd
rorb
and
aam
dec
jns
sub
iret
or
stos
cs
stos
push
rcrb
in
cmp
repz
pop
stc
aam
daa
scas
and
add
fidivs
add
es
add
popa
imul
test
or
fistps
lock
jecxz
lcall
xchg
cmc
pusha
pushf
sahf
lds
add
sub
jne
imul
pop
or
loop
je
cli
cli
addl
jge
cmp
jge
pop
js
scas
int
push
cwtl
loop
fldl
shll
or
xor
cwtl
push
ret
es
jno
dec
jne
sbb
test
jmp
hlt
fdivrl
imul
mov
sub
mov
pushf
lahf
sahf
mov
add
icebp
and
into
add
repz
lret
mov
pop
scas
pop
mov
push
or
popa
push
mov
sbb
jmp
sbb
mov
cwtl
cmp
fisttps
iret
sti
mov
xchg
and
test
jle
pop
adcb
cmp
dec
push
fs
or
cwtl
add
inc
shlb
insl
lock
decl
dec
lods
lret
test
cltd
repnz
adc
scas
bnd
hlt
pop
into
xchg
aaa
ret
or
pop
vdivsd
sub
dec
xchg
push
scas
int
jno
icebp
mov
mov
add
ss
cmc
xchg
add
mov
test
test
cmp
sbb
cwtl
xor
inc
leave
push
int
xchg
out
adc
popw
cltd
jbe
sti
xchg
ret
add
loope
jp
inc
fdivs
insb
movsl
ljmp
lret
cmpsb
mov
cmp
fcmovb
push
or
sbb
iret
sahf
or
push
test
cwtl
aad
xchg
stos
mov
in
xlat
clc
cmp
jp
mov
clc
lcall
mov
lret
lcall
or
inc
and
ficoms
sahf
dec
lcall
int
lods
inc
sub
dec
mov
aas
or
std
pop
hlt
jecxz
inc
xchg
adc
push
and
das
in
subb
fcmovbe
mov
pushf
stc
cld
jle
dec
fs
mov
cltd
dec
mov
push
mov
add
dec
sahf
cmpsl
sbb
rorl
js
dec
add
xchg
gs
pop
add
orl
adc
dec
fnstenv
outsb
cli
xlat
and
fidivrl
neg
xor
nop
pop
repz
lods
outsl
into
daa
ds
xor
icebp
push
popf
cwtl
push
out
dec
sbb
imull
testb
sbb
std
mov
out
inc
mov
xor
in
xor
and
sub
incb
pop
cmpsl
xorb
jno
stc
xchg
push
push
pop
xlat
out
lret
mov
or
mov
pop
dec
aad
rcr
inc
into
clc
and
mov
scas
cmp
mov
pop
fwait
mov
sbb
mov
sbbb
sbbl
jecxz
sub
lea
fmul
mov
cmpl
loope
xchg
adc
sbb
inc
daa
jns
lret
mov
mov
outsl
testl
sub
add
fisubl
xor
jae
insl
adc
ficompl
dec
mov
dec
bound
arpl
dec
shlb
pop
in
sbb
shr
mov
pop
popf
test
cwtl
adc
dec
icebp
mov
lret
xor
dec
xchg
sbb
xor
int
mov
mov
xchg
cmp
shlb
rclb
ret
scas
pop
arpl
pop
cmp
aas
inc
adc
push
xchg
adc
cmp
add
test
cmpsl
jp
sahf
out
popf
testl
jno
pushf
rcrb
mov
xor
mov
test
addl
sti
inc
je
jecxz
call
int
dec
mov
test
data16
sti
popa
push
mov
test
test
aaa
ror
popf
ja
lods
fs
in
test
xchg
ds
jb
dec
movsb
dec
adc
dec
pop
mov
jg
or
sub
lcall
sahf
repz
in
inc
or
out
pop
ficompl
stc
lods
int3
mov
ds
mov
xor
mov
cmp
cmpsb
pop
xorl
ljmp
outsl
ficomps
push
in
dec
mov
stos
faddl
ficoms
cmp
daa
xchg
das
sub
or
sti
call
popa
jae
mov
pop
or
out
mov
pop
stos
adc
cmp
sarl
and
mov
ss
mov
cmp
dec
sbb
pop
nop
mov
xchg
cmpsl
dec
inc
out
inc
vdivpd
imul
mov
movsb
cmc
aad
in
mov
mov
fs
fucomi
or
inc
push
xor
int
jp
jb
cmpsb
flds
cmp
cmpsl
sar
xchg
inc
jl
and
pop
xchg
mov
jb
aas
test
sbb
cmpsb
test
int3
jecxz
repnz
enter
fistpl
jnp
dec
mov
das
add
divb
adc
les
cwtl
psadbw
mov
inc
das
ret
fmull
pop
add
add
jns
mov
and
stos
jg
xlat
icebp
pop
in
inc
mov
ja
xor
xor
test
cmpsl
sti
test
inc
cld
jle
ss
pop
push
jge
ds
dec
inc
out
ds
shr
in
test
and
xchg
push
jl
stos
add
cmp
test
sbb
and
aas
rcll
loope
clc
push
push
mov
pop
das
stos
inc
push
loope
or
mov
push
mov
inc
add
test
sub
mov
jmp
adc
vmovhpd
aam
js
push
add
cmp
das
js
pop
adc
pop
test
lds
shl
call
mov
leave
rclb
add
fdivl
lret
ja
push
imul
fadds
in
mov
xor
mov
mov
add
jae
pop
sbb
clc
lahf
lret
scas
jno
sbb
dec
leave
pop
mov
jle
sar
or
out
or
sbb
enter
sub
dec
arpl
dec
loop
popf
bound
cli
add
xchg
jle
mov
jae
out
pop
jb
xchg
repnz
enter
and
cmp
test
add
movsb
sub
jle
dec
imul
pushf
or
push
push
daa
mov
cmc
rcll
jmp
les
sub
sti
lcall
lock
loopne
cmp
sarl
rolb
and
fs
push
xchg
into
push
nop
in
movsb
out
and
paddsb
sbb
ja
push
repnz
and
out
incb
imul
loope
out
std
rclb
fsubrl
filds
mov
repnz
pop
call
repz
jg
int3
repz
dec
leave
jns
sahf
dec
movb
insl
lcall
add
mov
inc
cmp
jle
mov
or
paddd
sub
mov
mov
xor
and
xchg
rorl
cmp
sbb
inc
push
adc
inc
int3
adc
das
jmp
notb
sub
xor
add
xor
jne
cmp
jbe
jle
cmc
pusha
xor
or
shll
outsl
pop
jge
pop
or
sbb
jb
sbb
push
mov
shll
push
xchg
sahf
addr16
mov
ret
shrl
clc
aas
sbb
mov
in
loop
enter
and
mov
leave
mov
mov
and
repz
inc
fildl
std
cmp
dec
icebp
mov
dec
ret
jnp
fisttpll
hlt
mov
in
adc
leave
rorl
xchg
leave
mov
adc
movsl
sub
cmp
pusha
pop
cmc
out
mov
mov
push
sarb
cmp
push
pushf
rorb
mov
cmp
bnd
movsl
xor
fmull
repz
fwait
popa
add
or
inc
and
mov
mov
das
fcmovbe
ss
lcall
out
out
in
add
std
cs
mov
cwtl
mov
inc
mov
imul
shl
cmp
repz
imull
cmpb
dec
mov
cs
test
lea
sbb
sub
pop
pop
int
lds
dec
fstpl
movsl
push
cwtl
scas
mov
push
ror
and
dec
dec
jno
in
lock
jp
mov
or
call
dec
daa
lea
push
dec
arpl
rcrl
adc
popf
mov
stos
sub
lds
inc
mov
mov
and
inc
maskmovq
idivl
mov
adc
pop
test
mov
insl
xor
and
inc
lahf
adc
stos
inc
pop
test
cmp
divb
nop
dec
lock
ds
loope
sub
and
pusha
mov
out
jp
cmpsb
test
dec
insl
cmp
jmp
subl
pop
pop
jg
adc
data16
mov
adc
pop
movsb
sbb
ret
mov
data16
jmp
cmp
shlb
mov
loopne
fldcw
jge
and
cli
or
cmp
dec
fsubrl
pop
scas
add
insb
pop
push
into
fisubs
or
call
fsub
adc
jmp
movsb
test
lahf
jne
in
out
cld
sub
incb
cmp
dec
out
hlt
scas
repz
hlt
add
mov
pop
cmp
movsl
xchg
adc
pop
mov
sub
inc
sbb
dec
fldt
sbb
sub
bound
cwtl
mov
push
mov
hlt
loopne
mov
mov
or
xchg
cmp
push
out
andb
push
in
pop
dec
sahf
faddl
mov
dec
bndstx
or
or
iret
xchg
mov
cld
test
fisubl
and
xlat
mov
xchg
sbb
jne
ds
xor
add
cwtl
and
pop
or
loopne
flds
or
ret
push
cltd
fnstenv
sbb
dec
push
adc
xchg
into
clc
iret
stc
sub
fidivrl
mov
and
add
outsl
mov
fimuls
les
inc
pop
leave
shll
js
insl
sbb
in
pop
lcall
sub
inc
pop
mov
adcl
inc
push
sbb
jb
inc
into
les
sbb
aam
mov
jp
and
add
inc
jne
xchg
pop
pop
pop
jl
repz
sti
pop
and
jns
sarl
rclb
test
inc
out
stos
imul
jnp
shlb
call
mov
jle
leave
fildl
stos
mov
push
arpl
inc
inc
jae
je
hlt
or
sbb
out
and
jo
pop
adc
std
pop
fimull
jae
inc
je
in
cmc
sbb
pusha
jmp
dec
sub
sti
inc
ss
adc
je
jg
mov
jl
enter
fs
fcomi
outsb
movsl
sub
aam
lods
in
push
mov
sbb
sbb
adc
loope
mov
add
rcll
ljmp
das
scas
jge
repz
out
sbb
rcll
lahf
ret
popf
or
in
movsl
mov
loope
aaa
sbb
inc
aaa
js
mov
and
xchg
popa
mov
mov
add
loop
fcmovu
or
lock
xor
imul
in
mov
mov
popf
xlat
sub
dec
xor
fimuls
cmp
cs
inc
pop
jmp
in
dec
lret
push
aam
sahf
popa
pandn
add
popa
or
mov
jb
inc
jb
scas
push
sub
in
in
out
mov
or
push
frstor
clc
mov
or
sbb
fsubp
cmp
popa
mov
loopne
aaa
dec
fisubrl
cld
mov
pop
aaa
inc
sbb
imul
sbb
stc
and
xor
inc
xchg
loop
xor
adc
mov
jne
rcrb
mov
push
lcall
lret
aaa
mov
loopne
add
xchg
test
iret
mov
mov
fwait
in
cmp
push
jbe
mov
cltd
out
push
jp
xor
adc
adc
les
sub
rcr
outsb
out
jp
mulb
mov
es
dec
dec
mov
pusha
aas
mov
enter
in
cmpsl
enter
sbb
or
mov
sti
mov
pop
jecxz
cmp
outsb
push
int
lock
mov
in
jle
cmpsb
in
push
sub
cld
xor
mov
lods
arpl
add
pop
in
xor
xchg
repnz
fisttpl
mov
sbb
push
loope
pop
imul
pop
int3
xor
jne
arpl
loope
arpl
jmp
pop
addr16
mov
dec
lcall
outsl
xor
test
into
fs
insb
and
std
pop
pop
xchg
push
cltd
sub
xchg
jecxz
jnp
rcll
mov
ja
inc
into
addb
jge
enter
orb
inc
lahf
xchg
imul
popa
out
push
adc
aaa
je
sub
cli
stc
inc
push
repnz
or
and
int3
repnz
fsubl
sub
cmc
jge
mov
ret
insl
push
xchg
aas
jmp
into
stos
dec
mov
jmp
dec
pusha
push
sti
ja
int
lcall
or
aad
sbb
call
loopne
jl
lods
add
mov
cmpsb
sahf
mov
mov
fldenv
sbb
or
pop
popf
popf
stc
cmp
idivl
sbb
outsb
mov
lods
xlat
and
in
pop
adc
adc
jo,pt
pop
push
cmp
popw
hlt
call
and
and
cmp
dec
int
shlb
lods
inc
push
inc
and
shr
pop
sub
mov
stos
fwait
adc
lret
in
mov
insl
pop
add
outsb
pop
sbb
jne
xchg
test
outsl
add
ds
fisubrs
jge
dec
fldenv
xlat
repz
sbb
pop
ja
test
mov
mov
out
call
lea
mov
jle
jne
or
pusha
or
rcrl
sbb
inc
xor
outsl
dec
pusha
xor
adc
ja
gs
mov
push
adc
sub
call
imul
xor
cmp
jl
jae
cld
subb
add
das
sub
jbe
cltd
bound
mov
xchg
adc
mov
and
mov
loopne
lahf
dec
je
shr
push
jmp
jl
cmp
fsubrs
pop
jns
ja
fiaddl
dec
adc
dec
nop
in
rorb
hlt
mov
lods
pop
lcall
mov
les
and
jge
rorb
dec
sbb
dec
loopne
push
lods
cmp
mov
imul
mov
repz
push
int3
push
aas
xor
pop
mov
lods
fsubr
lods
sub
xchg
aam
mov
movsb
and
aad
test
and
call
push
out
mov
mov
dec
fsubl
loop
rol
jp
jo
push
fdivs
push
int3
inc
sbb
ds
cmp
push
jmp
filds
jb
jnp
ljmp
or
les
negb
push
pop
and
or
dec
mov
cmp
mov
or
fnstcw
or
pop
add
or
js
or
pusha
sub
outsb
movsb
inc
loopne
daa
jb
push
imul
pop
mov
cmpsl
les
ljmp
in
jno
ror
pusha
js
in
mov
xlat
pop
mov
mov
pop
add
cmp
fisubrs
add
ljmp
pop
test
gs
mov
jmp
fists
call
cld
adc
inc
xor
sub
lret
sbb
pop
jl
mov
cltd
sbb
loope
dec
cwtl
repnz
pusha
mov
dec
ret
movb
inc
mov
push
jge
lret
call
fidivl
jl
and
loope
push
jp
dec
mov
add
das
jb
cmpsb
add
daa
mov
out
cmpsb
cmp
stos
sbb
aad
ja
inc
mov
in
sub
popa
sub
add
push
cmc
fwait
dec
mov
adc
push
pushf
idiv
in
and
cltd
test
xchg
push
pop
into
addr16
or
dec
je
or
outsl
je
outsb
stc
dec
aad
sarl
lds
add
sub
mov
jae
pop
js
adc
push
xchg
jo
loop
out
mov
jp
shr
pushf
aaa
mov
cld
insb
pop
xchg
add
xlat
jb
xchg
xchg
call
popa
inc
lds
iret
mov
jge
aam
inc
jbe
mov
data16
fs
stc
out
xor
sub
xlat
addps
pop
mov
call
scas
cwtl
sbb
lcall
int3
xchg
outsb
inc
push
test
mov
mov
xor
pop
clc
push
test
mov
daa
mov
sti
fcoms
add
mov
inc
fs
in
cmpsb
push
add
orb
std
div
mov
hlt
xchg
es
fistpl
testl
stos
cmpsl
arpl
inc
ss
ss
ret
jl
std
adc
push
les
cmp
scas
pop
adc
insl
xchg
inc
lret
mov
arpl
ret
jne
mov
jle
and
fildll
lret
sub
or
repz
push
es
and
jle
sub
bound
cmc
sbb
test
mov
jno
dec
bound
bnd
aad
or
mov
scas
ret
sarl
mov
cmp
sbb
dec
hlt
push
mov
fs
and
aas
cmp
add
rcr
adc
ss
imul
stos
xor
popa
mov
dec
scas
fwait
rcrl
xchg
push
mov
xchg
lock
popf
leave
add
mov
mov
push
iret
push
cmp
add
test
aam
pop
jg
or
test
insl
lret
hlt
stc
and
pop
mov
outsl
cmpsl
es
shlb
or
arpl
mov
jg
int
push
jo
out
pop
and
cmp
xchg
push
ja
adc
sahf
scas
mov
inc
pop
mov
out
les
mov
fst
adc
cld
les
pop
push
pop
xchg
sbb
jg
imul
sbb
stc
xor
sbb
nop
sbb
fsubr
ret
pop
mov
xchg
adc
cld
adc
jb
jle
out
ja
pop
cmpsb
add
les
add
out
sub
loopne
sub
push
sub
sub
movsb
push
sarl
hlt
arpl
ficoms
mov
sarb
daa
out
das
mov
cmpsl
repz
inc
imul
cmp
jo
out
out
push
lcall
aam
imul
ficoml
adc
inc
adc
ds
or
outsb
xchg
outsl
dec
mov
sar
stos
int
mov
mov
int3
fstl
inc
rcrl
adc
xchg
icebp
inc
mov
loopne
jecxz
negb
subb
xchg
sarl
les
fidivl
mov
in
jno
push
dec
cmp
ret
xchg
nop
insb
sarb
outsb
mov
mov
popa
push
and
pop
outsl
cmpb
inc
pop
mov
nop
push
data16
inc
sbb
push
push
sub
mov
lds
out
dec
push
sub
pop
add
or
insb
lcall
inc
add
ficomps
out
sbb
mov
mov
push
cmp
sbb
xlat
xchg
pop
cmp
or
jne
sbbb
idiv
movsb
dec
cmc
adc
lods
stos
ret
cmc
pop
mov
or
popf
jg
dec
and
mov
push
mov
inc
push
push
sub
mov
and
push
cmc
imul
sahf
lea
subl
pop
xchg
xor
mov
jae
inc
clc
dec
mov
enter
outsl
inc
loopne
sub
lret
xor
push
add
aas
daa
inc
daa
mov
adc
cmpsl
dec
dec
fs
enter
adc
sarb
add
lahf
push
insl
jmp
mov
xor
sub
insl
xchg
pop
rcrl
inc
lcall
out
inc
mov
and
xchg
out
lods
mov
xor
inc
jle
push
dec
mov
cmpb
out
ficoms
xchg
popf
sahf
inc
stc
inc
or
dec
mov
fdivl
faddl
mov
out
movsb
push
lcall
aaa
or
lods
sub
xchg
roll
dec
leave
jo
sti
cwtl
xchg
jnp
repnz
cli
xlat
inc
divb
in
std
daa
fwait
repnz
lcall
cli
mov
dec
sub
insl
pop
rcll
add
js
std
mov
push
sbb
in
or
inc
test
jge
dec
adc
add
fiaddl
jne
dec
adcb
xor
popf
mov
mov
mov
jb
and
and
pop
sbb
jae
pop
jb
sub
and
outsb
loopne
and
pop
lret
lods
push
push
test
ljmp
aas
cli
fcompl
pop
mov
call
fnsave
out
aad
lock
aam
jle
or
fwait
mov
inc
add
cltd
fidivrs
outsl
cmp
mov
repnz
push
leave
out
sbb
inc
mov
dec
jmp
iret
and
repnz
xchg
jno
in
xchg
in
in
xchg
into
nop
call
pop
or
ja
sub
testb
pop
mov
pop
fcomps
xor
addr16
jl
jno
xchg
pop
mov
sub
sub
fdivp
pop
mov
add
inc
fisubrs
stc
enter
rcll
xchg
int
fbld
test
dec
cmp
pusha
inc
movsl
jg
push
cld
mov
jp
jns
adc
mov
xor
movb
sbb
mov
and
stos
or
cmc
adc
es
dec
lock
imull
and
shr
jmp
jns
in
scas
in
not
popf
fdivrl
mov
mov
push
fs
je
xor
imul
cmp
add
sub
inc
sbb
xor
cltd
cmp
ljmp
rcrl
push
shrb
push
lahf
mov
cmp
fwait
inc
sbb
mov
sbb
out
jnp
inc
sub
push
xchg
push
add
ret
das
fcompl
test
pop
sub
in
cli
mov
cmpsb
mov
mov
pop
dec
bound
cmp
stc
shl
fidivs
mov
and
add
data16
bound
in
fistpll
dec
pop
sub
aad
je
xchg
and
mulb
cli
mov
mov
andl
mov
leave
jnp
dec
in
inc
jne
adc
js
inc
scas
dec
and
mov
jp
cmpsb
lods
sbb
arpl
movsb
jns
adc
adc
dec
ret
sbb
cld
xor
cmpsb
adc
sbb
fcmove
lahf
js
das
or
pop
shl
repz
and
add
or
outsl
sub
cs
or
cmc
and
jp
or
mov
fcoml
stos
aaa
fs
sbb
movl
lea
lea
repz
imull
dec
pop
cmp
cmpsl
sbb
push
lret
enter
leave
sub
test
fwait
scas
or
push
cmp
xorb
repz
iret
pop
inc
sub
enter
js
pop
push
pop
lods
std
daa
inc
shl
sub
sbb
or
cmc
add
mov
ss
mov
mov
cs
iret
pop
and
mov
adcb
popa
or
jp
sbb
ja
aam
mov
jecxz
mov
xor
mov
cli
add
pop
icebp
mov
hlt
and
cmpsb
mov
dec
call
xchg
add
bound
jmp
fbld
mulb
pop
push
lret
mov
sti
pop
lret
cltd
aad
gs
adc
data16
and
and
arpl
dec
inc
mov
cld
imul
push
jle
jge
sbb
lret
and
add
enter
je
mov
or
fcomps
lcall
push
cmp
rclb
fcompp
out
insb
outsl
psubw
push
mov
jmp
pop
popa
jecxz
lock
pop
lock
lcall
syscall
push
mov
jl
fildll
xchg
fldcw
mov
mov
and
mov
sub
push
cmp
adc
dec
test
sahf
imul
or
sbb
or
je
push
enter
scas
fistpll
mov
daa
and
pusha
cld
sarl
cld
stos
pusha
mov
xchg
pop
add
fs
pop
push
jmp
leave
push
popf
sub
sbb
dec
aaa
add
in
shrb
push
aas
xchg
ds
mov
push
int3
cmpsb
div
sahf
or
leave
sub
xor
jg
sbb
or
cmpsl
test
fs
mov
sti
mov
sbb
je
xor
add
into
add
fstpl
push
cld
mov
mov
and
int
sbb
lods
enter
insl
aas
push
rcl
scas
mov
iret
mov
jecxz
mov
xor
lahf
idiv
data16
push
dec
in
inc
lret
xchg
out
push
jp
stc
arpl
push
jo
mov
outsb
jns
or
jle
roll
pop
inc
pop
inc
sbbb
dec
sahf
les
push
rorl
sbb
fwait
in
mov
fsubrp
xlat
dec
mov
add
scas
sub
cmpsl
push
test
icebp
pop
das
inc
test
push
cmc
lcall
sti
imul
mov
and
dec
pop
or
add
cmc
and
scas
add
mov
cmpsb
mov
xor
fidivrl
mov
not
xor
enter
aas
pop
in
cmp
mov
test
inc
xchg
rcrb
xor
fldl
scas
daa
mov
testb
sub
and
xchg
test
stc
mov
sub
sub
xor
adc
js
cltd
sub
movsl
pop
lret
sub
xchg
pop
push
jne
cmp
push
inc
add
negl
mov
mov
test
in
je
hlt
inc
rorl
fwait
mov
xchg
pop
mov
xor
js
push
and
jg
sbb
mov
push
ret
stos
fdivrs
cmp
fsts
shlb
ds
lea
cmp
push
bnd
cmc
sbb
jg
and
fcom
jg
loop
jb
jno
into
fimull
push
cmp
sbb
test
and
add
jle
sub
mov
sub
lahf
xor
loope
xorl
push
xor
aas
test
gs
fmul
cmpsl
add
cmp
js
subl
xor
jp
adc
push
jne
cmp
push
xor
fnstenv
hlt
mov
xchg
sbb
insb
pusha
icebp
daa
aam
in
frstor
jns
gs
sub
xor
push
sarb
stc
push
mov
cmpb
imul
fisubrl
pop
dec
loope
cmpsb
mov
pop
xchg
out
sarl
adc
je
neg
and
arpl
fisttps
adcb
xchg
es
dec
dec
clc
insl
ds
sbbl
cli
xlat
cmp
stc
movsl
mov
arpl
add
int
mov
into
inc
mov
add
lahf
aad
mov
pushf
test
repnz
xlat
add
sub
and
dec
iret
fs
ret
test
fdivrl
cmp
mov
or
aad
adc
test
jbe
xchg
in
cmpsl
pushf
pop
or
scas
inc
adc
pop
leave
lcall
xor
and
mov
mov
lcall
dec
lahf
int
or
fcompl
test
andl
imul
fs
mov
pop
sub
and
into
pop
shrb
imul
cli
jne
or
jae
fsts
scas
dec
fidivl
cld
mul
mov
fstpt
cwtl
pushf
hlt
adc
cmp
add
pop
ljmp
mov
es
lods
pop
cmp
loope
xchg
insl
add
sub
repnz
sarl
sbb
aas
in
dec
xorb
into
xchg
push
aas
and
imul
lock
subb
lds
cmp
jo
jne
into
aas
cmp
repz
pop
push
shr
dec
push
mov
out
push
jle
ret
rcr
dec
lods
cmp
cwtl
xchg
add
jl
dec
cmp
cmc
xlat
aaa
rorb
xchg
cmp
sub
js
sbb
out
scas
fcom
xor
dec
xorb
lret
xchg
cmp
sbb
and
iret
sub
sbb
cmpsb
mov
ljmp
out
jne
sbb
mov
cld
notl
enter
or
mov
pusha
xor
push
out
cmpb
push
add
jbe
test
stos
push
mov
imul
sarl
pop
data16
or
pusha
enter
xchg
mov
out
xlat
jecxz
test
outsb
outsb
jge
lock
std
scas
jnp
cmp
pmaxub
sahf
sbb
xchg
in
push
cmp
lock
mov
pop
push
lcall
dec
mov
fldl
dec
sub
xor
mov
push
out
and
xchg
mov
xor
or
cli
out
je
out
sub
test
inc
or
or
je
aam
push
cs
in
sub
xchg
cmp
int
aam
push
jae
push
mov
adc
and
cmp
jg
movsb
loop
cmp
xchg
shr
sub
xor
mov
jp
incb
aam
and
dec
xchg
imul
sub
call
mov
pop
jb
mov
ljmp
in
fiaddl
xlat
jge
sbb
pop
sti
mov
leave
pop
or
rep
idiv
sarb
mov
mov
f2xm1
lock
rorl
and
cmp
rorb
push
and
fidivrs
idivb
pop
pop
cmc
xchg
insb
fbld
push
jae
adc
cmc
jg
inc
dec
mov
int
cmp
jle
sbb
aas
jecxz
ret
add
inc
scas
mov
mov
sub
jp
xchg
jp
add
repz
cmpsb
cltd
mov
aad
fwait
pop
je
sub
sub
or
ret
outsl
fimull
cmc
rolb
pop
dec
push
repnz
dec
cmp
popf
mov
mov
sub
dec
jge
sub
jns
push
pusha
shl
ds
cmp
fwait
out
lcall
js
ss
cltd
les
mov
or
add
and
add
jo
sti
pop
dec
and
pop
lea
jmp
pop
cmp
pop
fwait
sub
add
adc
mov
js
ss
lret
out
lods
lock
adc
cmp
or
cmp
jne
xchg
or
popf
sbb
lock
fcoml
decb
xchg
jno
xchg
mov
jns
aad
movzbl
clc
pop
mov
xor
or
pop
xlat
hlt
subl
mov
jge
fidivs
into
pusha
cld
outsb
fldl
mov
stos
sub
mov
mov
xor
mov
mov
dec
jmp
sub
out
insl
call
fildl
fistpll
cmp
add
in
add
inc
sbb
scas
add
sbb
bound
sub
add
sbb
mov
cmpsb
das
jmp
adcl
test
subl
and
test
and
add
and
jg
xchg
fcompl
jle
push
fldt
xchg
ja
add
pop
popf
mov
push
sbb
xchg
mov
push
lods
mov
cmp
ds
adc
jbe
insl
xchg
mov
test
xchg
push
and
jmp
inc
cltd
add
es
gs
fisubl
xchg
sub
adc
jnp
ds
jne
movsb
lods
cmp
jbe
mov
mov
mov
fsub
leave
and
pop
mov
xchg
jne
repz
adcl
shlb
push
cmp
out
add
fdivl
mov
adc
lods
or
and
jnp
das
shlb
sahf
cwtl
or
pop
fdivrl
ljmp
rcl
sarb
imul
mov
mov
stos
ljmp
xchg
add
aas
mov
cld
stos
mov
rcr
push
lds
aad
cmc
add
stc
xor
je
data16
cmp
sub
cmc
mov
sahf
ffree
leave
lahf
push
mov
jnp
xor
das
adc
daa
add
or
push
xchg
out
int3
pushw
scas
gs
pop
ret
cmc
cmp
fstpt
sahf
mov
push
pusha
pop
sub
out
ljmp
dec
std
fwait
adc
xor
xor
popa
or
inc
sub
push
sub
cmp
lahf
cmp
mov
adcl
jne
xchg
adc
cwtl
dec
and
sbb
mov
fs
sbb
call
out
push
loop
sbb
ret
popf
push
sub
and
fsubrs
std
sub
div
cs
dec
adc
ljmp
out
ret
stos
lret
sub
adc
in
cmp
xor
jge
push
inc
sub
mov
mov
pop
movsb
xchg
sbbb
enter
or
pop
sahf
mov
inc
repz
dec
popf
shll
jae
stos
xlat
xor
pop
xchg
xorb
js
or
sub
ret
pop
test
cld
fs
cld
shlb
movsl
or
push
sub
fcoms
push
inc
test
frstor
mov
xchg
sub
fdiv
xchg
test
subb
cmp
adc
test
aaa
jecxz
push
push
lea
mov
rcr
adc
mov
repnz
cmp
dec
mov
cmpsb
bound
dec
mov
neg
ljmp
inc
pusha
cmp
in
icebp
and
cld
add
cmp
jmp
jle
shrb
fcoms
int
addr16
and
jl
jns
adc
fwait
mov
xor
push
rol
sub
daa
mov
and
xchg
in
rclb
cli
call
lahf
or
repz
mov
cld
push
pop
and
test
sarb
mov
mov
mov
scas
add
jns
xchg
pop
insb
inc
ds
pop
sub
mov
fs
pop
add
test
lret
gs
and
xor
jp
je
adc
xchg
pop
jl
lods
mov
imul
pop
mov
xlat
mov
mov
outsb
scas
arpl
cmp
inc
lock
repz
push
test
push
jecxz
mov
sbb
outsl
rolb
cmp
sbb
jge
sbb
loope
mov
out
test
jmp
mov
add
mov
jmp
leave
div
mov
dec
mov
xor
fwait
jno
lock
loop
push
scas
enter
das
in
fstpl
inc
out
sbb
cmc
pop
lock
clc
cld
push
sub
loope
inc
fdivrp
mov
mov
jne
jns
mov
and
mov
jae
or
mov
cmp
xorb
mov
mov
cmpsb
mov
cltd
ja
ror
sbb
test
imul
cld
andb
or
nop
and
repnz
inc
outsb
clc
arpl
mov
mov
push
mov
out
push
jo
into
push
loopne
movsl
pushl
out
inc
dec
movsb
adc
ss
mov
push
pop
mov
iret
jl
test
mov
lret
jne
pop
sbb
xchg
int3
leave
push
imul
or
dec
xchg
outsb
add
pop
xor
dec
shl
or
sub
xchg
shll
sbb
jb
sahf
inc
call
in
and
imul
icebp
insl
jne
push
sbb
stos
int
sarb
sahf
jb
mov
lahf
jmp
lret
lea
clc
pop
sub
mov
dec
stos
test
mov
fidivl
or
pop
or
lahf
into
mov
sbb
sbb
sbb
aaa
enter
push
addr16
repnz
xor
jo
fwait
pop
or
daa
adc
push
ret
loopne
xor
test
push
dec
insb
js
test
decl
cs
xchg
aam
pop
and
or
clc
sbb
je
out
int3
sbb
pop
daa
mov
dec
not
add
push
fnstsw
pop
push
sbb
data16
pop
push
into
or
add
lods
iret
add
cmp
les
xor
repnz
cwtl
pop
in
loope
stos
mov
jecxz
das
cmpsb
sub
movsb
test
clc
jl
mov
das
call
xchg
xchg
adc
xchg
test
pop
jmp
mov
add
lea
enter
push
ret
inc
and
mov
loope
pop
xor
hlt
outsb
jmp
int3
cmp
mov
orl
cs
insl
mov
cmc
jb
and
mov
rorl
inc
or
xchg
lds
and
stos
push
mull
add
popa
clc
xor
sbb
add
in
jno
mov
mov
sub
mov
gs
mov
je
push
mov
push
push
aam
mov
cmc
cmc
fsubs
dec
inc
pop
inc
jge
cmpsl
fisubrl
ljmp
mov
sbb
outsb
insl
jne
out
aam
cs
dec
repz
insb
push
inc
cmp
in
jle
mov
test
pop
push
int3
test
test
insl
into
mov
sbb
mov
adc
outsb
mov
xor
mov
jnp
imul
mov
faddl
inc
lret
adc
fisttps
out
ljmp
cmpsb
xorb
or
mov
jno
jae
sti
aam
mov
test
push
bound
subl
int3
lods
insl
movsb
mov
stc
rorb
andb
dec
xchg
fiadds
andl
ds
iret
outsl
fcompl
jle
jne
js
mov
lcall
mov
rorb
cmpxchg
hlt
iret
out
lahf
scas
jle
in
and
dec
xchg
pop
cmp
std
ret
mov
sbb
add
aad
loopne
mov
jne
inc
gs
cmp
jecxz
mov
pop
scas
inc
jmp
jbe
push
mov
mov
push
sub
jnp
imul
ficoms
lea
push
mov
inc
pop
leave
cmp
cld
into
ljmp
dec
pop
dec
sbb
scas
pop
mov
lods
enter
aad
das
xor
jmp
imul
cwtl
fsubrs
fwait
mov
mov
adc
mov
rorb
inc
inc
daa
pop
popf
cmp
cmp
xchg
xlat
pop
in
sub
in
jecxz
sbb
adc
push
fst
xchg
inc
dec
jle
jae
mov
inc
subb
adc
scas
mov
mov
push
pop
test
mov
cltd
push
mov
cli
ret
jge
jnp
pusha
add
xchg
mov
push
lcall
pop
cltd
xchg
je
ljmp
repnz
shll
adc
ja
add
popa
outsb
loopne
xor
lods
sbb
clc
xchg
inc
push
stc
adc
out
cmpl
and
movsb
adc
mov
mov
mov
cli
mov
adc
cwtl
xchg
std
pop
xor
loop
fbld
add
mov
imul
push
call
mov
jmp
push
dec
adc
and
pop
dec
and
sub
mov
jge
xchg
or
enter
mov
adc
jae
addr16
movb
xchg
push
in
sbb
and
pop
jae
sbb
push
jmp
inc
cld
jbe
and
sub
hlt
movsl
outsb
inc
es
jbe
sub
xchg
fwait
xorb
ss
cs
fidivl
gs
sets
insl
mulb
pop
les
addr16
jle
pop
ljmp
leave
adc
and
pop
imul
stos
clc
js
dec
xor
mov
mov
lods
aam
jecxz
outsb
std
lahf
xchg
mov
stos
inc
mov
cmp
jnp
jns
mov
inc
push
pop
sub
lret
sub
in
lret
jbe
lods
mov
push
pusha
jno
mov
sbb
daa
movsl
pushf
xchg
sbb
out
jae
enter
cmpsb
xchg
mov
pop
mov
xchg
jae
cli
add
add
jae
xchg
mov
shll
shll
scas
inc
mov
cmp
test
and
ljmp
mov
ss
mov
cmpl
shll
adc
lock
sub
nop
dec
addr16
xlat
lock
dec
push
push
mov
adc
mov
je
loopne
dec
fsubr
jb
insl
fs
jmp
cwtl
push
aad
pushf
sub
shlb
or
xchg
fiadds
ljmp
jmp
xor
cmp
pop
and
sub
shrb
int
inc
enter
mulb
and
pop
mov
scas
lods
rorb
mov
mov
and
lods
rorl
aam
aas
jno
adc
push
mov
fwait
ss
out
ds
xlat
fcmovu
loopne
in
fwait
and
pop
xchg
cwtl
fisubl
push
mov
or
pop
push
xor
pusha
adc
cmpsl
sub
scas
jno
dec
xor
fsubrp
adc
int
shlb
and
in
ljmp
push
xor
out
bnd
hlt
js
mov
cltd
mov
fistpl
aad
cli
gs
xchg
cmp
mov
sti
adc
or
and
fidivrl
jl
sti
mov
bound
mov
or
out
lcallw
xchg
add
or
inc
push
cmp
cwtl
xor
or
push
pop
decl
push
adc
pop
pop
lahf
popf
inc
mov
push
jne
in
out
xchg
cmp
not
daa
xchg
jne
and
dec
jp
pop
xlat
dec
sbb
subl
add
mov
addr16
mov
mov
fdivrs
test
into
mov
cmp
sub
loopne
pop
jae
push
pop
leave
and
lea
jnp
aas
leave
sub
jb
dec
xchg
jmp
xor
jo
std
xor
mov
pop
fidivs
mov
sbb
stos
and
xchg
add
hlt
cld
inc
pop
mov
jns
int
ja
js
and
aas
clc
sbb
mov
es
push
out
out
loopne,pt
scas
pop
mov
xchg
jecxz
xchg
mov
inc
jns
add
in
pop
cmp
fwait
scas
pop
daa
test
xor
mov
add
out
cmpsl
rorl
mov
mov
stos
push
dec
fisttpl
jbe
nop
xchg
pop
js
in
dec
pop
lods
aas
fs
mov
lahf
push
movsb
dec
inc
fs
mov
dec
xchg
xlat
es
mov
mov
jnp
mov
xorb
jb
xor
or
sbb
ljmp
dec
adc
dec
and
or
jecxz
xor
popf
mov
mov
gs
es
xor
lock
push
xchg
inc
inc
push
aad
xchg
shr
mov
jb
jno
sub
aaa
movsb
xchg
div
or
cs
sti
mov
lcall
adc
jae
sub
aaa
or
push
pop
add
or
cmp
push
imul
js
fistpll
xchg
enter
xchg
mov
les
cmc
lods
cmp
jae
add
ftst
stos
jmp
es
pusha
push
repnz
pop
scas
out
or
insb
daa
loop
cmp
jmp
icebp
add
jne
mov
out
mov
and
add
cmp
and
dec
ja
jno
js
jo
in
xor
xor
inc
add
cltd
lret
cld
icebp
push
push
neg
ret
in
les
cmp
in
xor
dec
addb
lds
inc
or
xor
je
imul
in
push
shll
es
add
add
cs
fildl
adc
sbb
fdivs
cmc
xorb
add
lods
repnz
ret
adc
std
mov
int3
xor
in
mov
or
mov
in
int
sbb
lahf
lds
cmpb
ja
fisubrs
out
repnz
scas
xchg
jge
mov
sbb
enter
jno
and
dec
stc
lahf
sub
cmp
das
or
sbb
sub
mov
loope
push
les
jo
dec
and
inc
ret
cwtl
mov
sarl
movsb
xlat
sub
pop
loopne
push
imul
sub
and
sub
add
jns
ret
jns
pop
sti
addl
lock
repz
push
daa
repnz
std
lret
cmp
mov
sbb
pop
mov
push
push
movsl
loop
push
js
data16
addr16
push
xorb
lea
stos
jge
jnp
cmp
xchg
add
leave
aad
jne
add
rorb
enter
fs
lret
ds
adc
scas
cmpsb
xor
jb
daa
cli
push
outsb
adc
fsubr
ds
pop
cs
mov
sbb
mov
loope
sbb
popa
dec
dec
addr16
hlt
adc
adc
lahf
ljmp
and
insl
push
cmpsb
pop
test
push
dec
arpl
sbb
sub
push
sub
mov
adc
mov
rorb
rcll
mov
push
lock
cli
pop
inc
dec
shr
push
jle
lea
jne
add
lret
xor
int3
outsl
dec
lods
cmp
popa
xchg
mov
fmuls
mov
jge
jmp
and
or
shll
mov
addr16
push
jo
in
jmp
jns
sub
fcomps
popa
repnz
pop
shrb
push
mov
ja
and
pop
clc
cmp
sub
ret
mov
add
sbb
outsb
cmp
adc
repz
xchg
sbb
daa
or
dec
ja
cmc
stc
xchg
rorl
lea
lea
jb
sar
mov
loopne
loope
daa
dec
add
test
aam
fxch
push
push
xlat
lret
or
in
jle
jbe
stos
insl
or
pop
into
inc
cli
adc
arpl
dec
rcll
sub
mov
cmpsl
adc
ret
cmp
sub
pop
daa
mov
sbb
movl
sub
pop
mov
cmc
mov
loope
dec
insb
daa
cmp
pop
xchg
dec
lods
mov
mov
lods
adc
cmpsb
sti
fwait
mov
cli
arpl
adc
cmp
and
insb
adcb
adc
pop
push
shrb
add
cmp
out
mov
push
adc
mov
sbb
lock
idivl
inc
push
xchg
jecxz
mov
xor
clc
mulb
and
add
inc
frstor
mov
into
idivb
jb
mov
mov
js
and
int3
mov
pop
xchg
jp
fincstp
loope
mov
adc
push
fstps
fcom
jle
or
push
jo
movsb
insb
mov
xchg
dec
out
bound
xchg
shll
cmp
xchg
scas
push
int3
clc
xchg
mov
repz
mov
ss
mov
scas
push
push
push
notl
inc
jle
dec
inc
jb
scas
sub
inc
cs
push
lods
mov
or
or
je
test
mov
push
cltd
pop
outsb
nop
mov
mov
mov
pop
dec
xchg
push
mov
imul
mov
sbb
mov
mov
jae
mov
mov
hlt
pop
dec
push
fidivrs
push
xchg
mov
cmc
pop
pop
cmp
xchg
ror
in
outsb
mov
imul
mov
pop
outsb
cmpsl
ja
repz
xchg
lods
adc
std
cmpsb
popa
cmp
ret
inc
popa
xor
sbb
inc
xor
sbb
fs
stos
into
cmpl
inc
push
mov
mov
stc
mov
shl
xor
repz
sti
cltd
push
dec
dec
cmp
inc
arpl
pop
xchg
mov
jge
sub
das
and
jo
xor
push
mov
or
pop
mov
mov
push
mov
mov
push
pop
or
sub
out
sub
mov
out
add
and
and
adc
leave
scas
mov
push
test
or
into
or
negb
in
lock
push
ljmp
and
divb
call
js
cmp
or
divl
sbb
frndint
into
cmc
push
sub
mov
call
in
push
mov
push
sarb
mov
mov
add
pop
push
mov
jmp
sti
pop
mov
mov
movsl
aad
int
adc
jp
es
call
js
fsub
js
push
lcall
sysexit
xorl
sbb
addb
and
sbb
adcl
in
mov
pop
bound
push
inc
pusha
push
dec
push
mov
cmpb
fists
xor
das
xor
push
ret
fcompl
mov
push
insb
cmp
mov
fcoml
xor
cs
jp
clc
test
sub
pop
inc
xor
daa
aad
xchg
leave
int3
or
cmp
call
rorb
imul
je
clc
pop
or
push
add
lahf
scas
pop
sbb
iret
test
pop
dec
and
inc
sub
push
test
outsl
mov
adc
insb
adc
aas
xchg
jbe
aam
mov
stos
push
cli
outsb
int
scas
test
pop
bound
scas
ss
adc
dec
pop
repz
in
es
or
adc
pop
xor
sti
xor
adc
mov
cmpsl
int3
jge
insl
cmp
and
mov
mov
mov
add
insb
nop
adc
jns
fnstenv
loopne
repz
mov
dec
scas
lods
fcmovbe
adc
xor
imul
inc
inc
jecxz
cs
cmp
mov
scas
scas
jbe
shrb
divl
push
loopne
inc
ret
pop
in
inc
cwtl
and
shll
popa
jb
ds
out
add
inc
xchg
pop
jb
and
mov
jae
mov
ds
xchg
mov
lret
adc
ret
inc
xor
adc
scas
xchg
mov
repz
fcomps
jg
jl
mov
xlat
mull
sbb
mov
mov
out
cmpl
and
jge
adc
mov
jo
js
sbb
jne
sbb
cmpsl
inc
jmp
jp
dec
mov
or
sahf
mov
push
pop
xchg
inc
fmuls
ret
push
adc
xchg
xor
popa
cli
sar
test
stos
test
xorb
in
adc
adc
shl
jl
adc
mov
mov
pop
leave
dec
jmp
add
lcall
jecxz
iret
loopne
sbb
and
mov
cmpsb
inc
pop
stos
mov
js
popa
jbe
inc
daa
bound
cmpsb
ret
mov
lcall
nop
pop
aad
enter
xorb
or
cmp
jb
mov
lahf
mov
cli
mov
mov
aam
lds
pushf
daa
adc
bound
push
je
fdivr
std
repz
mov
jecxz
cmp
sub
ljmp
stos
in
in
cwtl
adc
scas
clc
adc
adc
cmp
cmp
rorl
subl
in
aam
jb
lods
and
shrb
jbe
addr16
ds
aaa
cmp
leave
das
cmp
sarb
fsubrs
pop
lret
xor
jne
xchg
std
insb
push
mov
shll
movsb
sub
mov
and
sahf
jmp
js
fistpll
pop
rcrb
cmpb
jmp
out
dec
subb
arpl
inc
repz
dec
pop
cmpsb
popa
pop
cs
pop
add
jbe
in
adc
cmp
push
push
cltd
ljmp
dec
cmpsl
jge
adc
or
or
repnz
xchg
mov
xor
movsb
cmp
mov
lds
sub
mov
pop
int3
mov
pop
stc
pop
and
dec
xor
push
sub
popa
stc
or
stos
pop
aas
push
push
out
sarb
icebp
lret
fstps
mov
data16
add
into
bound
dec
lahf
mov
sbb
push
dec
loopne
pop
or
stos
shrl
inc
pop
std
sti
cltd
out
aaa
sub
jb
pop
leave
and
sti
or
mov
push
jle
out
mov
scas
repz
lods
in
ljmp
inc
test
fsubrl
xchg
xchg
add
ret
sbb
or
jno
xor
in
mov
pop
mov
adc
xchg
push
mov
sar
fwait
inc
repnz
add
inc
dec
loop
shlb
inc
clc
mov
jl
and
push
rolb
mov
adc
jns
fimuls
iret
push
fs
aas
and
insb
aas
leave
aaa
cmp
jle
jbe
xchg
push
jle
popa
inc
sarl
cmpl
fisubl
movsb
adc
mov
jns
imul
pop
imulb
jbe
mov
pop
inc
sub
or
mov
push
in
xchg
test
insb
inc
adc
pop
mov
test
push
push
add
mov
out
outsb
ja
mov
lcall
mov
repz
out
lcall
jnp
xor
xchg
sahf
cmp
dec
adc
xchg
add
stos
sti
xor
pop
stos
pop
xchg
aam
fwait
jge
pop
sbb
popf
imul
or
call
icebp
pushf
sbb
jno
out
inc
mov
mov
push
rolb
movsb
inc
xor
mov
dec
pop
pop
psraw
jae
xchg
dec
xor
inc
js
sub
out
dec
int3
push
ja
bound
lret
lret
pop
jle
divb
adcl
adc
and
add
inc
lods
add
out
dec
push
pop
jo
lods
mov
cltd
pushf
movsl
icebp
ret
cmp
xchg
mov
and
lods
sbb
pop
push
or
jecxz
sbb
pop
cmp
sub
or
xchg
push
insb
icebp
lods
mov
js
sbb
fnstcw
loope
pop
xchg
pop
lahf
adc
das
test
inc
ljmp
sbb
repnz
lret
inc
int
out
lcall
sbb
shl
or
jecxz
daa
jecxz
push
int3
sub
jecxz
ret
dec
dec
jle
int3
ret
imul
cs
pop
pop
loopne
andl
xchg
fistpll
push
pop
imulb
sbb
fcmovnb
mov
fstpl
das
adc
shl
cmp
insb
dec
pusha
xchg
xchg
les
dec
or
cmp
sub
xor
sti
cmp
add
into
scas
insb
in
ret
mov
sub
lods
enter
sub
incb
inc
jnp
xchg
sbb
cmp
sbb
mov
bound
cmp
jne
ljmp
jl
jb
pop
inc
js
div
cmp
xchg
insl
ret
push
lods
push
insl
test
repz
lods
mov
stos
mov
lods
ljmp
icebp
pop
movsl
jae
dec
mov
inc
ret
jecxz
sbb
nop
outsb
movsb
push
test
fs
ss
dec
xlat
cltd
scas
sub
fnstsw
mov
sub
popl
jno
cmp
ret
fimuls
or
stc
mov
jle
pop
push
push
fbstp
jns
in
popa
add
xor
push
in
fimull
push
sub
push
inc
sub
in
bound
insl
sbb
sbb
leave
and
sahf
jp
test
int
ds
call
fmull
out
pop
and
fdivr
dec
popf
pop
fisttps
imul
cmp
aad
or
fdivrl
popa
pop
cmp
bnd
icebp
outsb
xchg
xchg
inc
mov
jno
adc
into
adc
mov
es
xchg
adc
movsl
or
mov
mov
nop
fdivr
xor
iret
dec
test
inc
loopne
je
mov
imul
push
jl
into
gs
adc
out
scas
push
cmp
inc
dec
movsl
cmp
ljmp
dec
out
sbb
scas
or
sbb
xchg
or
xchg
jns
adc
sub
mov
and
push
aad
test
mov
sub
andb
sbb
imul
and
jmp
adc
sbb
mul
inc
test
movsl
mov
shll
lods
mov
xchg
push
xchg
pop
xchg
arpl
mov
pop
adc
push
sub
cmp
dec
cmc
mull
fiadds
out
cmpsb
mov
sbb
cmp
and
xchg
pop
push
iret
sbb
mov
outsl
cmp
mov
and
out
sub
adc
sbb
xchg
lcall
pop
dec
mov
jecxz
dec
test
leave
inc
scas
repnz
add
jecxz
mov
testl
push
mov
jmp
pop
adc
dec
pop
or
popa
or
mov
divps
pop
push
sahf
add
xchg
jnp
pop
mov
loopne,pn
clc
test
repnz
adc
fildl
xorb
mov
push
aam
rcll
aam
fstpt
sbb
sub
sub
sbb
mov
and
lret
adc
or
inc
repnz
cmp
mov
xchg
rolb
xor
scas
pusha
scas
iret
loop
jo
sub
jns
dec
pop
xor
and
xchg
push
hlt
xchg
jbe
dec
and
mov
jp
movaps
xor
jb
test
xchg
inc
lock
xchg
pop
rolb
movsb
mov
imul
ja
pusha
xchg
arpl
push
cmp
ljmp
push
sbb
cs
rcrb
add
divl
dec
subl
cli
mov
cld
cmpsl
xor
sub
bound
mov
xor
fidivs
mov
push
jns
bound
and
pop
mov
mov
fiaddl
xor
test
mov
out
xor
loope
jnp
dec
mov
sbb
outsb
test
adcl
jbe
dec
mov
mov
pop
inc
xchg
sub
popa
push
inc
lea
nop
sbb
cltd
inc
out
fcompl
enter
pop
pop
out
cli
jmp
pop
adc
add
dec
loopne
popf
loope
pop
xorps
mov
add
out
in
xchg
and
xor
pop
scas
push
dec
aad
repz
push
test
lgs
cld
ljmp
add
mov
cmpsb
jns
movzbl
xor
xor
sbb
sti
jle
xchg
cmp
test
fcoms
hlt
jno
psllw
aam
mov
in
aad
sub
xor
dec
imul
int3
scas
and
rorb
mov
shrb
mov
lret
loop
inc
lcall
sub
int
stos
xlat
lret
xchg
cmp
ss
ljmp
xchg
data16
jle
push
std
mov
popf
mov
fidivl
fwait
in
mov
push
shll
mov
inc
fxam
cld
sub
and
sahf
jnp
lret
fcoml
push
xor
sbb
addl
outsl
and
mov
bound
popf
out
dec
dec
mov
mov
leave
incb
data16
ret
std
dec
jmp
shlb
std
lods
popf
cmpsl
inc
jp
arpl
or
push
out
xor
mov
mov
mov
jnp
inc
ret
movsb
push
push
cmp
pop
mov
lret
dec
xchg
arpl
nop
inc
cli
into
lods
sbb
stos
adc
jns
sbb
cmc
xor
cld
pop
jae
add
ljmp
add
push
loope
les
and
dec
sti
leave
loopne
push
leave
ror
out
adc
ss
push
sarl
in
out
push
mov
cmp
and
mov
lret
xor
lock
mov
cmp
mov
xchg
jmp
dec
adcl
fimuls
mov
in
lcall
pop
sub
xchg
and
and
or
mov
mov
data16
or
adc
arpl
rcll
mov
cmp
add
ds
movsl
loope
incb
mov
xor
push
lods
aad
in
dec
sub
into
pop
and
stos
loop
jp
and
and
and
xchg
mov
dec
and
repz
add
testb
sbb
xchg
icebp
cmp
lcall
cli
rcl
popa
enter
lea
repnz
or
pushf
xchg
and
hlt
ljmp
enter
xor
lock
mulb
test
dec
cmp
fwait
shl
sbb
in
pop
pop
lcall
hlt
mov
test
mov
and
or
xor
xchg
sub
popa
jg
mov
xchg
jne
or
movsl
jae
cmp
jle
out
jecxz
out
outsl
outsb
lcall
mov
out
inc
inc
xchg
or
adc
sahf
mov
jl
jecxz
jno
aad
clc
pop
call
push
mov
pop
mov
add
cli
repnz
pusha
cmpsl
imul
push
cmp
lea
test
dec
out
or
jb
inc
cmpsb
mov
pop
lahf
cmp
adc
pop
push
sti
loop
sarl
fwait
test
es
shrl
mov
pop
aad
bound
pop
je
push
popa
xlat
shll
inc
add
icebp
sahf
xlat
imull
inc
lret
popa
lds
jle
pop
insb
mov
dec
jg
call
xchg
sbb
and
into
dec
pop
mov
push
and
mov
sti
mov
cld
fldl
and
jno
mov
adc
rcrb
and
sti
les
xor
das
cmp
or
jmp
and
ljmp
or
sbb
je
inc
sub
movsb
call
leave
push
mov
cs
divb
add
insb
adc
popf
sbb
ror
dec
movsb
fcompl
and
mov
loope
cmp
mov
popf
pop
enter
jg
pop
cld
sbb
dec
mov
in
adc
cmc
aam
inc
jae
lret
adc
ss
pop
call
sub
push
out
loop
push
ss
sbb
pop
jne
mov
adc
dec
in
clc
movsb
xchg
pop
pop
sbb
sbb
and
aam
dec
out
sbb
sub
aad
xchg
pop
stc
inc
inc
cmp
xor
jge
fwait
jge
push
shll
test
add
dec
cmp
hlt
cmp
mov
mov
inc
mov
xchg
mov
mov
and
mov
mov
mov
sti
je,pn
stos
lods
in
mov
jns
scas
hlt
xchg
imul
insl
push
sahf
mov
adcb
pop
push
es
fisttpl
xor
test
in
adc
lahf
xor
xor
ja,pt
nop
sub
xor
mov
xchg
push
xchg
and
clc
inc
lods
fwait
and
lcall
daa
push
mov
in
and
sub
lock
js
mov
int3
push
dec
out
das
test
pop
or
test
nop
xlat
mov
imull
call
jp
cmpsb
loope
imul
daa
ficoml
pusha
stos
xor
shrb
addr16
push
pop
sbb
in
scas
stos
jmp
faddl
test
lret
xor
cmp
loopnew
mov
outsl
sub
push
mov
xchg
add
inc
xchg
fcomp
aam
ret
or
call
mov
mov
dec
add
out
out
and
dec
int
lahf
push
xchg
fwait
mov
mov
es
fcompl
sub
inc
sub
sahf
lea
outsb
fildl
inc
add
push
lahf
push
adc
jmp
jge
int
mov
add
cmp
push
jl
pop
flds
mov
popf
dec
mov
and
push
jns
testb
xor
aaa
mov
popf
add
lahf
lret
mov
aam
in
xchg
push
mov
inc
test
cmp
xchg
cmp
aam
jb
andb
lock
sub
mov
pop
jnp
insb
aas
add
iret
sarb
movsl
jbe
lock
cltd
in
imul
push
and
cli
sbb
cs
mov
jns
cltd
mov
iret
lds
call
ljmp
pop
add
cmpsl
call
push
dec
pop
xor
mov
jae
sbb
inc
jnp
jae
insl
out
xor
test
jae
sbb
cmp
inc
mov
lcall
stos
add
sbb
ficoml
push
dec
cmpsb
cmpb
popa
or
dec
pusha
or
xor
decb
xchg
cltd
lds
add
in
sub
push
sub
cmp
cmpsb
pop
jno
cmovnp
dec
sub
pop
push
inc
insl
xchg
cmp
mov
test
and
faddl
pop
cmc
add
cmp
test
cmp
inc
shl
xor
add
push
lahf
lds
xchg
test
cmp
jne
jo
push
jl
insl
pop
fdiv
notl
repz
xchg
icebp
repz
or
mov
out
cmpsb
xor
movsl
cmc
jg
fcomps
data16
dec
push
fisttpll
outsl
or
mov
sub
loopne
not
nop
cli
mov
mov
inc
sarb
pop
or
push
cli
mov
cmp
cld
ret
aad
add
fadd
adc
sub
mov
adc
cs
xor
subl
aas
sub
std
into
int3
fistpl
mov
add
mov
or
xor
xchg
lret
out
push
sub
or
adc
dec
popl
andl
dec
push
sub
xchg
lea
std
loope
outsb
jmp
push
pusha
jns
aad
and
rorl
jmp
lea
in
xchg
bound
repnz
insb
je
jecxz
repz
test
mov
xor
leave
pop
mov
cmp
out
mov
mov
mov
or
sbb
dec
idivb
pop
fwait
xchg
lods
jne
xchg
inc
or
or
mov
mov
lea
std
aaa
das
in
aam
je
fists
and
repnz
mov
pop
lods
push
mov
add
test
outsl
xchg
movsl
xchg
fdivs
jns
jb
pop
fsubl
cmpsb
lret
hlt
andl
loop
jp
cs
arpl
pop
lret
pop
repz
jg
push
dec
popl
lret
mov
mov
mov
xor
xor
sub
in
aaa
xor
sbb
bound
or
mov
insl
or
inc
dec
adc
in
lret
es
lcall
decl
adc
into
pop
js
or
mov
daa
jmp
sbb
pop
inc
idivl
imul
loope
cmp
mov
push
push
je
dec
cmp
std
arpl
cmp
jp
xor
ljmp
push
rcrl
add
dec
xor
lret
pop
push
inc
push
pop
mov
sbb
push
ljmp
dec
adc
ss
mov
jb
mov
enter
fs
lock
shll
or
enter
or
and
lods
push
and
push
xor
loope
push
lahf
loope
xchg
cmp
dec
pop
iret
loopne
cli
xchg
push
dec
je
cmp
inc
or
mov
aaa
cmp
out
enter
sub
js
cmp
ss
push
mov
rcrb
outsl
out
leave
popf
inc
push
cld
nopl
fs
out
clc
xchg
rcl
ret
dec
aad
jl
sbb
xchg
pop
push
jmp
inc
movsb
push
pop
push
bound
push
stos
push
arpl
cmp
mov
cmp
fcoms
outsb
aam
fsts
enter
cmpsb
inc
cmpsl
dec
sbb
cmp
in
mov
push
cltd
and
add
mov
jnp
mov
jae
xor
xchg
cs
scas
mov
adc
pop
lret
cmpsl
cmp
push
cmp
cmp
inc
sub
test
sbbl
jns
loope
cmc
adc
inc
sahf
jo
xchg
test
inc
adc
arpl
jne
cmc
out
push
ficompl
decl
aas
jle
mov
ja
cmp
sahf
int3
aas
push
and
fnstsw
test
icebp
inc
fstpl
out
pop
loop
sti
cmp
enter
push
pop
nop
push
ja
inc
popa
sti
add
insl
shlb
cltd
hlt
and
gs
call
sbb
ja
xchg
shrb
xor
pop
fstps
insb
adc
mov
mov
aaa
cmp
outsb
dec
mov
mov
pusha
sbb
lock
dec
daa
sbb
inc
cltd
gs
lret
shll
aas
mov
stc
jae
push
inc
mov
add
pop
clc
xchg
mov
in
jle
enter
dec
mov
push
int
push
cmpsb
xchg
push
cmp
fisubs
popa
les
pop
or
roll
jns
adc
std
and
push
call
in
xchg
fs
roll
or
cmp
mul
in
arpl
es
and
jo
stos
decb
push
mov
inc
fcomps
xchg
jno,pn
add
jo
push
mov
dec
fsubrp
sub
das
shll
dec
jnp
popa
cltd
add
xchg
xchg
push
push
mov
cwtl
add
out
cwtl
mov
xchg
rclb
daa
inc
aas
fwait
add
in
jnp
xor
xor
adc
pop
aaa
xchg
cld
jno
sub
lret
and
jl
dec
add
xor
addl
adc
and
and
call
aaa
std
scas
mov
dec
mov
inc
or
pop
aas
rdmsr
stos
lret
shlb
pop
cmp
sbb
out
push
aad
push
xchg
mov
sub
xchg
adc
jb
sub
xor
jl
sbbb
ret
mov
cs
sbb
mov
inc
clc
sub
jg
and
adcl
out
sbb
add
adc
adc
int3
cmp
cs
push
jp
cmpb
jbe
and
loopne,pt
xlat
dec
xchg
mov
xchg
pop
and
inc
faddp
jle
mov
fiadds
fdivr
pop
mov
andb
lret
dec
std
dec
jp
test
stos
adc
mov
jns
arpl
test
decl
in
xor
xchg
lds
outsb
sbb
mov
push
mov
xchg
ss
jecxz
jle
mov
mov
call
jg
mov
negb
inc
add
push
les
fldt
add
pop
inc
mov
push
mov
mov
push
mov
xor
data16
nop
add
dec
scas
faddp
sarl
mov
jnp
jb
or
dec
dec
push
fsubrl
sub
fprem1
cmp
jo
rcrl
notb
xorl
sbb
int3
jg
lret
adc
pop
xor
xchg
xchg
pop
daa
cmp
jge
std
pusha
sti
in
les
cli
pushf
stc
push
jg
jmp
fxch
test
xchg
jmp
lret
sbb
loopne
inc
push
fdivl
imul
sub
xchg
mov
jbe
cwtl
add
sub
cmp
cs
mov
gs
shl
int
and
cmp
fs
sub
pop
sar
imul
add
xchg
lahf
sbb
cmpsb
dec
movsl
xor
xchg
jg
subb
shlb
adc
rcrb
push
mov
das
xor
cmc
xor
adc
lret
cmp
jge
faddl
sub
cltd
cmp
dec
jo
aam
ficomps
mov
in
mov
cmc
aas
pushf
mov
popf
repz
cld
lock
add
data16
xchg
in
cs
xor
cmp
mov
sub
fisttps
icebp
and
leave
pop
cmpsb
jp
xchg
ret
sub
in
adcl
fidivl
jnp
imul
jb
pop
xchg
sarb
shlb
loope
test
mov
cs
sub
dec
jle
mov
mov
xchg
js
dec
aam
and
loope
jmp
insl
xchg
sbb
scas
inc
push
punpckhdq
or
in
xchg
inc
and
mov
jge
in
jne
pop
movsl
mov
shll
fcomps
hlt
leave
inc
dec
inc
adcb
ljmp
push
cli
mov
sbb
stc
aaa
iret
sahf
adc
push
push
mov
mov
mov
sbb
insb
icebp
out
dec
push
shrb
icebp
jo
xchg
xor
xchg
lea
cmpsl
jne
fisubrl
mov
cmp
mov
pop
fst
mov
out
xchg
and
jne
not
xchg
inc
jae
mov
in
xchg
gs
cmp
lret
mov
mov
mov
mov
cmp
outsb
cmovb
push
dec
adc
sbb
pop
sub
inc
inc
test
mov
ret
jl
das
jno
push
dec
fstpt
test
jns
xor
mov
sub
test
sub
mov
push
pushf
aam
sub
pop
xchg
sub
jg
xchg
notl
sbb
pop
pop
out
inc
aad
enter
cmpl
cmp
data16
cmp
push
xchg
pop
inc
aam
inc
outsl
dec
adc
push
pop
mov
mov
loope
sub
dec
insb
xchg
fsub
xor
in
int
addb
pop
cmp
pop
test
adc
add
aam
and
jecxz
sbbl
jg
pop
aad
es
sbb
pop
sub
mov
jae
test
daa
nop
jno
push
pop
mov
push
cmpsb
dec
add
incl
jmp
lods
gs
loopne
in
mov
pop
sub
or
aas
pop
fists
dec
in
loopne
cmp
cmp
jmp
jnp
xchg
cli
hlt
inc
das
lcall
ficoms
xor
cmc
mov
jb
lret
jl
ret
test
out
sub
movsb
jecxz
dec
daa
mov
xor
mov
mov
imul
mov
and
jno
push
adc
jp
mov
inc
xor
int
sahf
xor
or
or
xchg
rcrb
out
xor
sar
and
outsl
inc
into
fwait
pusha
sar
cmpl
js
sti
lret
pop
fldenv
scas
cmp
sub
insl
mov
dec
fisubs
aas
adc
sbbb
mov
test
jns
adc
pop
sbb
adc
call
jle
inc
xor
pop
xchg
pop
cmp
or
pop
push
mov
add
push
rclb
adc
loopnew
add
push
outsl
xchg
pusha
push
fstps
jmp
loop
cmpsl
mov
push
shll
int
aas
insb
ret
and
call
and
out
stc
and
push
sub
nop
into
sbb
rolb
lret
out
hlt
mov
inc
jns
ficoms
popf
test
mov
insb
aam
mov
in
sbb
ret
ret
sbb
jge
fisubl
inc
out
hlt
mov
lahf
sub
sbb
dec
int3
arpl
mov
movsb
ret
jle
mov
push
mov
xchg
jnp
xor
test
inc
xor
xchg
gs
ret
cli
push
insl
push
cld
pavgw
xor
sar
jle
cmpsb
fldt
pop
xor
mov
xor
jb
movsb
rcrl
cmpxchg
pushf
int3
mov
lods
sarl
mov
out
inc
cld
andb
ja
fwait
mov
mov
or
clc
out
fs
xchg
pop
nop
mov
loope
imul
sbb
jo
mov
xchg
xor
in
int
jb
loopne
and
push
rorl
nop
mov
jge
dec
ja
icebp
add
test
loop
in
pop
push
push
into
fwait
add
sbb
addr16
sarb
out
xchg
inc
jmp
dec
push
xor
mov
mov
lds
mov
xchg
ret
sbb
inc
xor
mov
cmp
out
mov
jo
popl
lods
sbb
sbb
std
push
stos
and
mov
add
sub
movntq
out
adc
divl
inc
lea
mov
xchg
icebp
pop
movsl
xor
pop
push
pop
mov
addr16
aaa
imul
popw
sbb
and
fdivp
jb
imul
out
mov
movsb
or
arpl
notl
dec
movsb
lock
shrb
into
cwtl
jl
cltd
imul
cs
sbb
repz
fcoml
les
bound
mov
push
pop
push
pop
cmc
enter
addr16
cmpsb
push
lds
loopne,pn
adc
ret
inc
in
addr16
xchg
push
pmulhw
cli
sti
dec
push
adcl
push
adc
cwtl
movsb
adc
xchg
ret
dec
rol
sahf
out
imul
sub
mov
iret
out
shlb
jge
mov
pop
cltd
dec
mov
adc
push
ja
add
push
xor
popf
inc
lods
out
and
movsl
daa
ja
jno
mov
inc
les
ja
addr16
fdivrs
adc
in
cmp
cmp
jecxz
les
int
mov
incl
test
mov
test
mov
lods
ficompl
jae
mov
adc
imul
jge
clc
inc
push
je
inc
sub
mov
lea
in
int
stc
test
xchg
sub
mov
push
push
sub
shlb
mov
inc
cld
mov
xchg
jecxz
lods
ja
pop
dec
ja
popa
adc
pushf
xchg
test
roll
xlat
sbb
xor
test
lods
xor
xchg
inc
lods
and
daa
dec
fwait
loopne
or
cld
mov
jg
cmpsl
not
xchg
mov
repnz
inc
sub
xor
cmpsl
xchg
cmc
push
jno
and
test
add
jnp
push
inc
das
outsb
jp
xor
jno
push
mulb
fisttpll
aas
ljmp
or
std
std
push
lea
pop
test
push
je
fmull
mov
sub
jge
mov
and
fbstp
test
mov
fsubrl
imul
pusha
sbb
mov
ret
repnz
andb
jle
lea
sbb
dec
data16
push
push
pop
dec
jge
js
push
mov
mov
leave
mov
or
push
push
clc
jecxz
shll
fs
test
sbb
cmpsb
xchg
mov
pop
inc
cmp
jmp
hlt
dec
mov
dec
notb
and
mov
inc
aas
frstor
pop
xor
outsb
pop
jae
pushf
cmp
add
xor
imul
dec
sbb
add
imul
std
loopne
sbb
jle
outsb
adc
mov
jo
andl
inc
or
out
call
lds
repnz
in
popf
sub
jp
cmp
clc
fsubrl
addr16
mov
pop
cwtl
mov
aam
cmp
push
add
fdivrp
insl
add
mov
xor
push
push
lea
and
jo
xor
into
andb
hlt
das
arpl
icebp
cmp
movsb
lods
xchg
add
jae
push
push
loop
lock
mov
in
sbb
inc
and
pop
je
cmc
mov
lret
fcmovnb
outsb
aaa
adc
sbb
insb
in
inc
lds
jmp
shrl
pop
ljmp
int3
adc
aaa
sub
mov
mov
bound
lret
into
push
mov
sub
pop
fwait
inc
cmp
arpl
sti
jl
shll
repz
sub
mov
pop
cltd
xor
xor
pop
mov
mov
mov
movb
je
das
jg
jnp
sub
shlb
mov
mov
mov
or
jecxz
addr16
push
sub
add
rclb
push
cwtl
pop
icebp
jg
adc
pshufw
les
mov
and
cmc
inc
cmp
test
es
out
jbe
in
jmp
std
pop
rcrb
or
sub
inc
add
fidivs
cltd
xchg
or
je
cltd
sub
icebp
in
xchg
ljmp
cltd
xor
mov
fisubrs
es
jg
push
fsts
jns
inc
or
out
push
imul
mov
es
sub
or
nop
xchg
arpl
xchg
daa
aam
rcl
push
jecxz
and
xor
cmp
xorb
mov
add
sbb
dec
imul
inc
mov
inc
lds
scas
mov
inc
js
in
gs
std
add
pop
enter
aad
jnp
insl
mov
lods
mov
sahf
jecxz
fsts
dec
je
add
iret
jnp
cmp
push
cmpl
sub
mov
inc
or
subl
push
into
imul
fisubrl
mov
out
sbb
mov
bound
pop
enter
cmp
jnp
sub
cs
push
or
enter
adc
xchg
add
xchg
xchg
dec
mov
dec
push
cmpsb
jg
sub
push
shlb
xchg
stos
sub
fcompl
sti
int3
sbb
test
fistpll
or
xchg
aas
sbb
pushf
addl
push
pop
outsb
lods
xchg
stos
mov
fistps
pushf
out
cwtl
adcl
dec
xchg
sbb
das
in
inc
popf
adc
or
orl
push
sbb
jb
push
mov
adc
rcr
ja
and
call
out
outsl
cwtl
mov
lock
inc
pop
cmp
xchg
aam
fucomip
es
cmc
sbb
jbe
mov
repz
jmp
stos
mov
xchg
add
mov
adc
lods
mov
shlb
dec
jg
mov
lahf
into
rcrb
loope
cmpsb
and
dec
sub
mov
or
mov
cltd
shll
js
ja
xlat
dec
cmp
orl
ljmp
and
clc
lret
dec
scas
or
in
test
mov
mov
and
mov
fld
push
jo
mov
in
daa
add
cmp
push
cld
lret
mov
mov
inc
cwtl
into
scas
aaa
pop
std
int3
and
scas
jae
push
fsubl
in
scas
lock
jno
mov
ficoms
pop
xor
lahf
repnz
jg
jne
bound
add
call
loop
lret
call
mov
fildll
ja
daa
xchg
dec
ret
cltd
adc
sahf
or
lahf
mov
adc
ss
shrb
add
inc
lret
xor
je
and
std
js
cmp
mov
or
sub
jae
mov
loope
sti
ds
cmpsl
mov
xchg
mov
repz
xor
cmp
inc
or
ss
push
cld
es
inc
out
iret
inc
fwait
in
idivl
std
shll
adc
in
lcall
jmp
out
filds
and
mov
add
mov
pusha
leave
sti
add
sbb
adc
push
adc
out
repz
stos
lock
or
pop
mov
adc
cmp
out
cmpxchg
add
mov
inc
in
fistpll
addr16
ror
stc
fsubrp
aad
shrb
imul
jno
mov
add
das
out
sahf
or
mov
mov
scas
test
dec
test
pop
loopne
xchg
xchg
push
push
das
stc
in
jl
nop
push
aam
adc
cld
sbb
stc
and
fisttpl
loopne
inc
stos
ret
sub
cmp
adc
fldcw
lcall
adc
jnp
cs
je
jae
xchg
shll
stos
insb
push
daa
bound
outsl
outsl
in
lret
icebp
push
pusha
or
idivl
sub
add
jno
cmp
inc
add
les
clc
aas
outsl
sub
push
pop
jg
inc
aad
stc
test
add
lea
fsubrs
popf
sti
xchg
lcall
cmpsl
ret
jne
inc
dec
aam
xor
push
inc
leave
jo
jmp
xor
fwait
imul
lea
test
daa
jle
sub
leave
push
ds
mov
or
daa
loope
mov
or
shrl
jmp
sub
xor
jns
cmc
xor
scas
fs
jo
ja
ret
mov
jle
cmpsl
rorl
shll
or
pop
add
andl
cmp
fildl
test
packssdw
aaa
notb
sarb
sub
lcall
cwtl
push
push
rcrb
pop
cwtl
lret
out
sub
notb
and
roll
push
lret
imulb
mov
pop
pop
outsb
xchg
int
outsb
inc
lcall
fisubrl
or
test
or
inc
leave
movsl
in
outsb
mov
dec
mov
cld
imul
push
mov
test
insb
jg
fmuls
andl
repnz
jno
daa
xchg
jno
ljmp
or
lahf
std
fadds
mov
push
cs
pop
lea
mov
sbb
stos
arpl
aad
add
gs
pop
pop
aaa
ret
add
jg
sub
arpl
push
ljmp
in
out
sub
adcl
lcall
xchg
and
jne
xchg
or
jae
nop
push
push
xor
inc
mov
lods
pop
mov
and
sub
clc
and
dec
cli
mov
nop
test
in
js
scas
lock
adc
or
pop
les
lods
inc
jle
lds
add
iret
aam
dec
cmpsl
pusha
fucomp
rcll
sub
jecxz
cmpsb
mov
mov
sbb
clc
fbld
lret
clc
pop
sahf
les
cld
daa
arpl
dec
aaa
cwtl
dec
ret
repnz
arpl
jecxz
mov
and
jbe
sub
pop
jl
gs
push
fs
mov
and
xchg
push
sub
inc
mov
or
lods
shr
push
sti
push
test
clc
pop
sahf
in
outsl
iret
mov
push
inc
cltd
mov
sbb
jbe
cmp
lret
test
xchg
push
nop
mov
adc
lock
mov
rclb
out
addb
arpl
lods
xchg
addr16
rcl
pop
ja
add
add
fdivs
sarl
xor
xchg
and
movsl
push
jp
fwait
push
stc
call
insb
das
jp
jecxz
add
repnz
dec
icebp
jnp
xchg
nop
aas
cld
mov
nop
mov
mov
xchg
enter
mov
cmp
add
fwait
test
jnp
push
stos
inc
cld
xchg
jmp
clc
sub
xchg
stos
aam
jp
xor
fcoms
lcall
push
mov
cmpsl
dec
and
outsb
push
sarb
cmp
sarl
das
add
test
movsb
xchg
daa
or
dec
call
push
lcall
call
and
mov
fucomip
test
stos
pusha
loop
and
and
push
imul
pop
les
je
cmc
lods
in
cli
push
add
mov
adc
inc
cmpb
ja
rcl
loope
cmp
mov
fstpt
pop
jno
mov
jle
imul
pop
push
notb
cmp
iret
es
mov
cli
mov
data16
fs
lock
out
loopne
test
stc
xchg
cmp
fwait
stos
in
xchg
fldt
mov
out
rclb
shrl
xor
rorl
cmc
dec
imul
mov
int
roll
insl
inc
cmp
cld
pop
lea
sbb
and
lret
data16
mov
mov
mov
cmpsl
loop
lods
mov
insb
jg
mov
gs
ja
fmul
shr
bswap
dec
inc
mov
scas
fisttps
sub
push
jg
pop
adc
sarb
stos
xchg
push
sbb
jb
mov
int
adc
lcall
sbb
pop
dec
int
pop
xchg
adc
mov
xchg
inc
sarl
adc
fidivs
jmp
pop
lods
adc
and
roll
mov
dec
jle
xor
repz
mov
loop
pop
add
pop
sub
je
push
mov
push
mov
ljmp
outsl
push
add
fimull
xor
int
sub
std
sbb
mov
fs
insb
gs
or
popa
iret
repz
outsl
mov
dec
dec
push
cmp
lcall
mov
inc
in
test
adc
fstpl
jo
dec
mov
fsubl
into
imul
xchg
shrl
lock
loope
xlat
or
pop
cltd
xchg
cmp
and
cmp
cmp
mov
cmp
sub
mov
or
lret
jg
lds
icebp
loopne
jmp
mov
jbe
cmp
xchg
mov
inc
jl
pop
jl
outsl
jge
inc
adc
push
flds
xor
dec
dec
pop
das
pminub
mov
lsl
sbb
mov
or
or
or
rclb
mulb
xchg
cmp
sbb
mov
clc
scas
das
push
adc
lds
add
das
push
push
int
int
cmp
lods
jecxz
mov
sub
mov
push
loope,pt
add
dec
sub
adc
enter
pop
inc
mov
arpl
scas
mov
cmp
xchg
cmpl
je
into
pop
and
xchg
out
fucomi
pop
mov
pop
insl
jg
adc
pop
ja
test
cmp
push
rcrl
push
sbb
adc
push
stos
jbe
pop
cwtl
pop
jbe
mov
dec
roll
xchg
js
cli
mov
arpl
xor
pop
push
leave
adcl
movsb
in
sub
jo
divb
sbbl
push
cmp
pop
adc
ret
fiaddl
rol
mov
dec
repnz
fiadds
or
lahf
add
mov
mov
fs
sub
std
xor
sub
mov
lock
int
pop
mov
ds
jmp
jge
push
pop
add
sahf
incb
aas
mov
imul
mov
jmp
mov
rorl
leave
cmp
lods
mov
lret
mov
sbb
sbb
adc
sbb
imul
inc
loope
ficomps
sbb
or
enter
loop
adc
pop
out
into
test
test
or
not
es
ds
push
int3
add
sub
loopne
cmpsb
xor
push
cli
idivl
or
xchg
pop
repz
rorb
ja
testl
jl
ljmp
bound
pop
jg
std
push
mov
js
xor
and
pop
mov
jno
leave
mov
enter
lahf
cmp
xchg
pop
xchg
push
stos
push
aaa
or
dec
lea
test
cs
xchg
mov
mov
xchg
xchg
daa
xchg
in
push
pop
push
mov
arpl
jnp
loopne
sub
sub
fdivl
test
jle
jnp
icebp
loope
es
mov
sbb
mov
daa
cmp
sub
std
mov
inc
push
push
jmp
cwtl
gs
xchg
aam
fs
dec
and
repz
leave
mov
lods
lock
inc
movsl
rcrl
scas
pusha
out
pop
fstl
out
rcl
cs
adc
adc
sub
sub
mov
jge
test
mov
and
int3
test
mov
or
scas
cmp
or
sahf
sbb
mov
and
or
sub
andb
pop
fcomps
jnp
arpl
dec
enter
ds
push
xlat
sbb
clc
and
sbb
cwtl
sub
pop
icebp
mov
insl
push
popa
out
popf
mov
fildl
sub
idivb
test
out
cltd
ror
sbb
aam
add
gs
mov
test
push
outsl
outsb
lds
add
add
lods
fistps
sub
cld
xchg
scas
aas
adcb
in
pop
icebp
iret
bnd
push
mov
pop
sbb
cmpsl
lock
mov
sub
data16
fidivl
outsl
xor
int
arpl
pop
push
stos
outsb
mov
negb
fists
mov
insw
xchg
xor
stc
or
cmpsl
sbb
xchg
push
push
fdiv
dec
adc
aad
shrb
movsb
add
sbb
sbb
cmpsb
push
in
rcrl
or
jmp
test
push
pop
es
loope
push
fs
add
stos
je
mov
or
int
push
stc
cmpsb
cmpsb
sub
fnop
ss
les
clc
cmp
outsb
push
fstp
push
fstl
in
out
xor
jge
xor
mov
rcrl
jno
lock
cmp
gs
scas
ret
pop
cmc
inc
sub
cmp
sbb
testl
dec
pop
inc
cwtl
xchg
dec
ret
in
inc
mov
into
jp
jne
cli
in
rorb
pusha
loop
sbb
mov
scas
mov
or
cli
pusha
jmp
js
pushf
lret
outsl
mov
scas
mov
test
les
pop
or
popa
lret
aad
bound
sti
adc
and
jnp
rcrl
xchg
jl
insl
mov
das
mov
push
push
pop
push
push
pop
xor
sbb
fs
rorl
in
add
xchg
pop
mov
dec
popa
sbb
sub
repnz
mov
cs
jno
xchg
insb
sti
add
cmp
adc
in
lds
push
not
fdivrl
and
inc
xor
ds
pop
test
xchg
cmc
sub
mov
lea
ja
xor
mov
add
inc
cmp
pop
insb
cmp
fimull
inc
sbb
jne
xchg
and
sub
fwait
fs
mov
cmp
inc
daa
dec
test
and
dec
xor
xchg
mov
loopne
jge
cmp
and
push
mov
fucomi
pop
repz
std
mov
in
mov
je
add
mov
test
add
test
mov
daa
insb
mov
clc
pop
daa
and
mov
push
or
cs
mov
outsl
cmp
js
push
xchg
adc
test
mov
and
aaa
and
and
cs
jmp
sbb
js
stc
inc
rcrl
out
hlt
in
adc
lea
rolb
leave
cmp
mov
mov
andb
aas
mov
cmp
push
or
or
je
dec
test
fs
mov
fdivs
push
add
leave
repnz
push
fcompl
hlt
sti
mov
add
shr
pop
aad
out
push
inc
inc
push
xorl
roll
int3
ja
imul
in
clc
mov
push
fldl
dec
cwtl
call
setne
add
scas
add
out
push
inc
lret
insl
lahf
popa
add
arpl
das
icebp
push
jnp
pop
bound
roll
sbb
jl
insb
clc
ffree
sub
adc
jbe
insb
pushf
negb
xor
mov
lds
aam
movb
in
test
mov
dec
jl
and
inc
fcmove
lea
add
push
mov
jge
pop
xchg
aaa
jno
es
jmp
jmp
daa
xor
mov
sbb
cs
sahf
mov
pop
mov
mov
lahf
iret
iret
xor
popa
outsl
dec
aaa
sahf
out
cmc
scas
rclb
xor
cmp
cmp
mov
fadds
xor
addl
out
or
decl
testb
xlat
jns
inc
fiadds
into
dec
sbb
cwtl
jb
push
arpl
cltd
es
adc
sar
mov
sub
jb
out
fsub
jmp
dec
xchg
inc
jo
push
pop
mov
jnp
inc
aad
xchg
inc
sub
or
dec
push
imul
xchg
inc
ds
jg
xchg
dec
out
push
arpl
aam
push
test
int
jb
mov
lahf
mov
ss
fnstsw
mov
jbe
ret
or
pop
mov
cmp
ss
pop
leave
addr16
icebp
dec
in
add
aam
sti
das
rcll
fldcw
or
lds
stos
lods
subl
rolb
inc
push
mov
pop
stc
imul
lock
pop
pop
xlat
cmp
fisttps
inc
cmpsl
and
xchg
ja
mov
jne
hlt
cwtl
pop
ror
sub
mov
and
xchg
enter
insb
jge
gs
xchg
sub
and
bnd
mov
les
mov
int
xchg
sub
pop
cmp
inc
repz
jmp
mov
in
adc
stos
pop
test
dec
adc
lcall
fwait
negb
mov
xchg
mov
ss
scas
loop
sub
mov
jae
int
inc
add
jecxz
jnp
xchg
mov
addb
inc
jne
xchg
loop
jae
jno
shll
aad
xor
negb
jno
push
popl
shrl
xchg
in
shll
xchg
repz
pushf
shlb
movsl
sub
orb
dec
call
sub
push
mov
push
mov
stos
lea
or
fstps
lahf
into
cmp
es
sarb
pushf
adc
ret
mov
repnz
outsl
jnp
filds
jo
sti
inc
dec
addl
sub
mov
add
das
mov
les
push
imul
ljmp
cwtl
mov
inc
outsb
jno
test
mul
lods
dec
and
das
sub
mov
mov
sbb
addl
inc
or
insl
jns
jecxz
sar
mov
lret
out
fucomi
ret
stos
and
and
stc
stos
cmp
jns
pop
movsl
jle
xchg
or
adc
dec
cli
xchg
adc
call
sbb
ss
popf
mov
jns
lock
test
sbb
mov
sbb
jle
test
ret
cmp
in
adc
cmp
shl
adc
out
jmp
cwtl
push
cmpsl
cmp
jnp
ret
scas
mov
jnp,pn
shll
dec
in
rol
xor
jo
pop
fcmovb
testb
cmp
stos
pop
sub
movsl
push
lea
je
and
pop
scas
mov
push
int
mov
push
cmp
aam
jg
pop
sbb
int
lock
push
roll
out
jecxz
js
xlat
cmp
jne
ljmp
cmc
xor
icebp
lods
fimull
and
xor
mov
mov
or
repz
mov
lock
fdivrl
decb
inc
lcall
cmp
fnstenv
test
mov
or
imul
jno
lock
push
push
mov
popa
and
xor
lcallw
push
sbb
pushf
push
and
mov
sarl
mov
sbb
and
dec
or
fdivs
push
inc
rclb
ret
scas
cmpsb
cmp
jne
and
sub
jae
data16
cmp
test
ja
arpl
jnp
sarb
aad
and
out
push
adc
outsb
push
xor
xchg
daa
int
pop
jo
sahf
xor
xorb
jg
leave
les
push
cwtl
xor
test
sbb
in
inc
cmovno
add
nop
sub
cs
lods
mov
shr
jno
gs
outsb
dec
pop
and
adc
or
add
pushf
idivb
sub
ret
pusha
inc
es
outsl
pop
rorb
xchg
jo
in
jb
andb
push
cmp
shll
xor
mov
ret
jmp
mov
mull
mov
mov
mov
mov
xor
pusha
and
imul
add
push
dec
mov
jg
xor
movb
and
stos
xchg
xor
adc
iret
jnp
in
pop
mov
or
iret
daa
nop
mov
mov
sbb
jmp
sub
popf
fistpl
sahf
outsb
dec
sbb
int
cs
sti
data16
xchg
sbb
mov
push
hlt
mov
in
cmp
sub
movsl
xchg
mov
mov
or
mov
pop
pop
rcrl
std
inc
repnz
fdivs
call
sbb
dec
in
add
stc
dec
paddusb
add
pusha
iret
call
inc
mov
shrl
ljmp
rclb
xor
mov
out
dec
movsb
lock
pop
sub
dec
shrl
aaa
loope
lds
jmp
and
add
dec
push
sbbb
fmull
outsb
stos
popf
mov
lret
jns
mov
pop
add
push
inc
mov
inc
leave
pop
pop
cltd
imulb
cs
cmpsb
jl
js
xchg
ss
ret
ret
aaa
shrb
imul
js
or
jno
aad
movsl
sub
fcomps
mov
push
mov
cmp
mov
rcrl
stos
lds
jb
movb
inc
lock
and
imul
inc
xchg
pop
or
add
xor
popf
push
and
xor
cmpl
xchg
ja
test
repz
sahf
jle
xchg
jnp
sbb
add
in
pop
mov
rorb
jno
mov
push
inc
out
cmp
scas
and
dec
xchg
idivl
sti
push
and
sbb
sbb
shll
imul
dec
cli
sbb
jmp
in
jecxz
mov
cs
data16
add
pop
bound
out
cli
je
pop
push
fstl
sbb
les
dec
cltd
mov
lcall
mov
in
push
xchg
andl
adc
loopne
lea
dec
lcall
cmp
aad
out
mov
subb
daa
rorb
fxch
mov
add
test
mov
bound
and
iret
sbb
stc
xchg
xor
sti
dec
in
in
test
inc
mov
rclb
pusha
pop
cmp
and
pop
xchg
movsb
insl
shll
js
pop
pushf
fdivrp
cmpsl
jne
test
outsl
stos
or
in
xchg
mov
cmp
je
fsubr
mov
sub
inc
pop
inc
push
and
inc
push
std
cmp
xchg
push
dec
jp
pop
push
rorl
clc
test
mov
loop
pop
sub
add
dec
jp
jmp
xchg
pusha
add
sub
inc
dec
adc
add
stos
inc
inc
out
mov
sarb
pop
xchg
xor
mov
pop
mov
mov
pushf
movsb
jecxz
mov
mov
jnp
add
mov
adc
xor
data16
dec
insb
pop
push
lea
repz
jp
fs
or
test
add
sub
push
into
xlat
add
mov
cwtl
lods
xchg
lahf
gs
push
leave
sub
xchg
and
xor
arpl
enter
into
pop
movsl
xor
mov
xor
lret
or
pop
sbb
sub
mov
dec
nop
rol
sbb
ffreep
sti
xchg
and
lock
or
mov
inc
xor
and
xchg
fs
incl
aad
xchg
enter
in
mov
jge
mov
sbb
pop
mov
cli
adc
clc
insb
add
mov
push
cmp
cwtl
pop
push
cwtl
push
xchg
cmp
sub
xor
and
or
sub
cli
adc
das
aam
pop
pop
cmp
mov
stos
aad
dec
dec
sarl
jl
lret
sti
call
loop
in
rcrl
and
repnz
mov
xchg
outsl
rcll
xor
ret
jno
test
pop
ret
and
mov
aad
or
xchg
jns
cmpsl
jl
adc
lret
lahf
inc
aas
cmpsb
xor
mov
inc
or
and
push
fldcw
xchg
divl
cmp
fists
fldt
xchg
fs
mov
leave
in
mov
cmp
cmp
xor
imul
aad
add
hlt
cs
mov
into
loopne
lds
shlb
fldenv
mov
out
jp
repnz
dec
je,pn
dec
sub
int3
xchg
xor
cs
cmp
lret
and
cli
pop
int3
aam
fwait
xor
inc
insl
in
dec
sbb
movl
xor
mov
sbb
sbb
xor
icebp
pusha
inc
push
popa
pop
je
mov
lds
push
lcall
cmp
out
out
pop
psubq
pop
in
out
out
pusha
aam
scas
dec
push
push
das
ss
pop
xor
popf
adc
cmp
fwait
sub
mov
cwtl
mov
cmp
insb
dec
test
test
xchg
mov
sbb
mov
push
add
loop
adc
fsts
out
xorl
scas
dec
push
test
ret
mov
and
xor
popa
test
push
push
push
out
mov
sbb
mov
cmp
adc
mov
movl
mov
add
nop
cwtl
dec
ds
lods
mov
adc
push
lods
push
jl
pop
xchg
sbb
and
cltd
movsl
jne
jmp
nop
popf
mov
jo
or
jns
add
icebp
cwtl
sar
push
into
xor
shll
out
push
loop
push
mov
out
push
stos
icebp
mov
iret
mov
pop
ss
into
pop
pop
ljmp
cli
inc
sub
xchg
jp
fsubl
cld
sub
xchg
fnstsw
dec
lds
or
cs
pop
sbb
in
pushf
and
push
dec
lock
or
mov
pop
pop
mov
xor
sub
mov
lret
test
pusha
cmp
dec
push
lock
or
mov
xlat
jge
testb
lret
and
push
xchg
fstpt
mov
fwait
push
jno
cmp
cmp
mov
xchg
repnz
xor
sbb
push
neg
or
imul
outsb
or
mov
iret
push
xchg
push
pop
mov
outsl
cmpsb
xor
fwait
or
repnz
lcall
inc
sub
add
and
xor
cmpsl
fidivrs
rorl
js
fldt
dec
aaa
mov
pop
call
mov
adc
outsl
cmpsb
fldl
test
adc
push
adc
jno
inc
repnz
jb
imul
add
enter
jl
jle
mov
mov
fldcw
pop
test
dec
pop
aaa
dec
xchg
arpl
mov
cld
jge
and
push
or
mov
add
sbb
loope
imul
loopne
dec
dec
sub
jmp
jl
int
add
rolb
pop
sub
jge
lcall
mov
and
test
add
xchg
sub
outsl
mov
xchg
push
dec
mov
cmc
mov
gs
stos
and
and
or
in
enter
sbb
cmpsl
bound
sbb
push
and
dec
filds
movsl
pop
sub
lret
mov
lea
scas
or
pop
xchg
das
repz
movsl
pop
inc
push
or
pop
bound
push
enter
jne
mov
in
pop
jmp
arpl
nop
cmp
mov
cwtl
xchg
mov
rolb
imulb
and
in
ss
repz
mov
xchg
adc
dec
push
inc
mov
push
icebp
int
flds
pop
jno
xchg
push
adc
mov
jmp
push
outsl
add
js
xor
mov
lods
mov
mov
mov
xor
fisttpll
fistl
dec
dec
arpl
jnp
fmulp
mov
dec
push
ljmp
inc
jge
shll
sbb
cmc
or
inc
int
add
mov
add
iret
add
dec
mov
mov
test
and
xlat
aad
add
xor
xlat
adc
adc
out
fnsave
shll
je
dec
out
into
pusha
pop
cmp
fstpt
scas
dec
inc
mov
cmp
orb
in
sub
cmpsl
sbb
xlat
xchg
repnz
std
rorb
bound
mov
test
aaa
fisttpl
test
enter
stos
inc
gs
loop
inc
test
jnp
inc
sti
test
flds
loopne
and
les
fisubrs
jbe
push
or
mov
rcl
mov
push
rorl
scas
jno
out
mov
add
add
sbb
mov
mov
repnz
popf
stos
lds
fldcw
xor
mov
lcall
jg
repz
mov
adc
lret
xchg
test
pop
sahf
jmp
je
shlb
add
imul
pusha
dec
mov
xchg
pop
mov
aam
and
std
in
std
mov
xor
in
dec
lods
loope
sub
push
pop
adc
xchg
stos
inc
mov
xor
fsubrs
arpl
jp
add
lds
nop
insb
and
imul
sub
outsl
out
pop
movsb
xor
push
cmp
xchg
or
mov
in
data16
icebp
mov
addr16
hlt
cmp
push
in
call
jne
xchg
test
push
mov
xchg
test
pop
push
and
pushl
dec
call
mov
mov
mov
rorb
imul
je
xchg
cmp
es
jp
mov
pop
xchg
pop
testl
lea
xchg
jbe
call
dec
jb
and
outsl
cmp
jg
or
mov
imul
out
jle
aad
popa
pusha
lahf
cli
add
jns
jb
bnd
ds
sti
icebp
out
xor
xchg
adc
dec
sbb
mov
add
jecxz
sub
iret
sbb
push
jne
cmc
das
push
mov
call
dec
mov
lods
mov
mov
fidivs
xchg
dec
or
pop
negb
xchg
rcrl
movsl
sahf
sub
fwait
adc
cmp
add
into
adc
mov
out
scas
in
rolb
in
lcall
gs
mov
mov
add
sub
adc
imul
xchg
jl
test
adc
inc
popa
jb
fs
in
lea
push
sarb
fidivrs
push
sti
fadds
fisubrl
cli
sbb
xor
jmp
insb
mov
dec
push
dec
adc
pop
mov
fmul
and
mov
push
xchg
adcb
push
mov
rclb
inc
dec
mov
cmp
push
push
enter
mov
xlat
pop
mov
sahf
or
dec
mov
shrl
stc
loop
adc
sahf
or
pop
xor
xor
fisubs
nop
ret
cmc
cwtl
lret
or
xchg
mov
push
aad
xor
mov
sti
jae
pop
sub
scas
pop
in
data16
push
jnp
aam
mov
mov
lret
in
mov
call
add
iret
xchg
pop
std
rcl
es
adc
ret
popf
mov
movb
inc
arpl
dec
out
out
dec
adc
popa
mov
ss
sbb
lea
dec
gs
aad
negb
pusha
mov
xorl
aad
pop
jl
addl
lcall
test
dec
mov
cmp
push
mov
popa
divl
push
out
xchg
xchg
sbb
js
subl
cmpsl
stc
lods
dec
xor
xchg
inc
inc
push
pop
mov
mov
dec
and
sar
in
cmpsl
shll
adc
xor
xchg
sbb
pop
shll
mov
xor
js
or
adc
mov
scas
dec
std
popa
add
mov
cld
push
xchg
inc
cmc
cmp
mov
push
add
mov
xchg
cld
mov
lds
das
xrelease
insl
cmp
sahf
add
stc
cmp
and
loope
fldt
es
imul
addr16
sub
push
add
out
dec
ss
push
imull
dec
lahf
popf
inc
int
xchg
or
mov
xchg
adc
cmp
inc
xchg
sub
pop
mov
pop
push
cwtl
inc
add
add
dec
push
push
sub
jo
sbb
push
iret
ret
into
rep
add
sbb
pop
inc
mov
push
cmp
jae
or
push
loop
shl
out
jge
loope
roll
pop
in
out
sbb
mov
pop
adc
dec
pop
sub
popf
ljmp
ret
test
lahf
or
xor
nop
std
aaa
push
in
cmp
std
pop
pop
cmp
dec
lds
xor
dec
cs
xlat
or
je
adc
repz
push
push
sub
leave
mov
out
stc
xor
loopne
pop
mov
into
popf
fcmove
mov
pop
stc
les
and
jmp
xchg
xor
enter
int
push
and
movsb
mov
pop
out
test
roll
dec
es
loope
scas
push
out
cmp
adc
inc
add
into
cltd
mov
jns
stc
sbb
imull
and
dec
xor
pop
movsl
loope
cld
jecxz
cmp
inc
lahf
je
mov
out
and
jns
jno
sahf
std
aam
js
xor
in
pop
mov
pop
scas
sbb
xor
xor
mov
adc
mov
mov
and
push
mov
and
jb
lret
stos
sti
push
mov
push
xor
ljmp
cmc
pop
iret
mov
mov
fs
jmp
adc
add
incl
push
push
in
mov
dec
mov
or
popa
pop
pop
testl
or
xor
cli
dec
fdivrp
loope
outsb
xchg
sub
or
test
test
cmpsl
jno
cmp
xor
cmc
sbb
or
ficomps
add
pop
aad
call
repnz
es
and
push
je
xor
sbb
in
mov
sub
add
cmp
jmp
mov
xchg
pop
les
pop
fcmovnb
int
scas
fists
stos
int3
out
push
mov
adc
sub
mov
dec
mov
int3
ljmp
imul
mov
lds
and
dec
push
and
adc
daa
aas
fisttps
push
aam
sarl
jne
and
and
je
jp
or
dec
jl
inc
sub
insl
call
xchg
mov
fsubrl
jo
decl
sbb
or
test
push
cmp
pop
loopne
add
cmpsb
pop
xor
mov
test
or
mov
sti
pop
lret
mov
ljmp
and
test
or
push
insb
cmp
cmp
pop
mov
mov
test
push
les
mov
ss
movsb
fisttpll
sarl
test
gs
data16
or
add
fsubl
fldt
sbb
cmp
add
mov
push
outsb
and
gs
or
ja
fldcw
andl
fwait
mov
mov
sti
leave
call
mov
xchg
mov
adc
js
inc
mov
pop
hlt
mov
pop
sbb
mov
mov
in
dec
cmp
add
xchg
jg
sub
cwtl
pop
addl
push
or
test
mov
xor
and
mov
mov
lcall
outsl
sbb
jle
and
mov
dec
xlat
mul
push
cmp
xchg
xor
hlt
mov
mov
inc
dec
lcall
insb
sarb
push
and
mov
imul
add
decb
insb
jp
push
test
mov
lret
jmp
fstps
lret
out
das
dec
jnp
xchg
or
or
or
ljmp
push
xchg
fsubrl
pushf
mov
test
ret
mov
mov
xor
pop
xor
shll
rorl
cmp
cmp
pop
adc
sbb
cmp
bnd
cmp
sub
mov
les
pop
ss
addb
iret
imul
fwait
sbbl
shll
cld
outsl
mov
xor
es
mov
ljmp
es
dec
sub
sub
insl
roll
mov
cld
pusha
pop
xor
push
les
fwait
or
or
xchg
testl
inc
adc
packsswb
mov
mov
sarb
lea
imul
pop
out
push
pop
sub
ret
inc
insl
out
fiadds
mov
mov
gs
sti
int3
lret
jns
lds
and
mov
xlat
hlt
xchg
sbb
xchg
out
add
ror
push
push
ror
xlat
push
in
test
mov
pop
clc
icebp
movb
subl
adc
sbb
out
leave
das
sub
js
cwtl
sub
xchg
pop
sub
imul
or
mov
add
bound
dec
daa
mov
fnstsw
jbe
mov
cwtl
push
cmc
mov
xor
aad
dec
sahf
mov
movsb
int
mov
xlat
test
iret
and
jnp
pop
xchg
loop
insl
test
roll
mov
adc
push
dec
es
jge
jae
push
pop
inc
test
adc
cmpsl
cmp
js
cmpl
addl
xchg
test
sbb
cmp
lret
xchg
addr16
pop
dec
iret
mull
lea
xor
aaa
xchg
iret
rcll
adc
or
cli
movl
mov
loopne
out
xor
xchg
or
push
jle
or
clc
pop
push
imul
sub
push
mov
adc
out
adc
jle
jns
inc
in
add
mov
cwtl
out
aaa
sub
jmp
mov
xchg
and
xchg
cltd
push
jae
mov
lods
shll
or
add
inc
lods
sbb
xor
stos
add
push
push
call
mov
pop
scas
ss
stos
insl
mov
iret
cmpsl
sub
mov
push
push
rorb
and
push
neg
je
dec
pop
push
mov
push
xacquire
inc
fnsave
in
repz
inc
xor
fdivs
jge
int3
pop
sbb
xchg
push
push
xor
pop
js
aaa
loopne
mov
mov
add
push
test
cwtl
bound
shr
call
sbb
dec
ds
adc
and
stc
xor
js
push
add
jns
ss
pop
jp
aad
jge
addr16
int
ffreep
jbe
adc
push
mov
fcomps
pop
insb
sub
mov
xchg
mov
icebp
sub
mov
cmpsl
pop
adc
aas
mov
movsl
movl
push
fwait
out
lahf
mov
jg
fcoms
mov
push
aad
lret
mov
popf
outsl
inc
cmpsb
sbb
shufps
jnp
popa
enter
ljmp
imul
and
add
push
call
sbb
mov
add
js
and
xchg
repz
and
fidivl
xor
in
cmp
fisttpll
xchg
pop
in
mov
xor
jecxz
adc
fistpll
add
pop
sahf
cmp
cli
or
lea
in
push
ret
inc
mov
stos
mov
aad
test
loopne
pop
dec
inc
fdiv
test
test
sub
add
or
dec
cmp
cmpsb
xchg
in
mov
jno
jne
testb
bound
jae
loop
arpl
icebp
je
jl
mov
inc
out
jg
and
push
pop
mov
scas
xchg
mov
or
mov
das
xor
bound
mov
inc
add
cmpsl
push
fnsave
mov
lcall
cmpsb
pop
imull
outsb
mov
fnsave
cltd
notl
popf
fnsetpm(287
int
outsb
ficomps
jae
pop
mov
mov
xor
mov
add
xchg
mov
stos
dec
sub
out
lea
and
adc
jl
dec
push
sub
outsb
jp
sub
fwait
cmpsb
cmp
test
mov
test
lahf
stc
fcmovnbe
push
sbb
hlt
xchg
sbb
outsb
xchg
outsb
jo
addr16
dec
cltd
lea
out
xchg
mov
out
jno
popf
sbb
inc
cmc
in
lcall
adc
sub
mov
cld
dec
lret
or
pop
dec
ret
and
imul
clc
int
stos
and
ret
call
push
sub
dec
inc
xchg
or
lods
aas
jecxz
xor
xchg
xchg
xor
add
or
pop
mov
adc
and
scas
cld
xchg
or
mov
inc
cwtl
imul
iret
sbb
jmp
movsl
mov
jl
idiv
insl
aaa
popa
xchg
mov
les
enter
aam
xor
xor
xor
dec
pop
out
adc
es
clc
xor
or
push
push
mov
or
push
jge
loopne
cmp
cmpsl
add
inc
sub
pop
cmp
fcomip
les
pusha
lock
lret
xchg
leave
ret
fstpl
testb
lahf
ret
sbb
sbb
and
testb
xchg
or
test
ds
clc
leave
xchg
roll
pop
jns
stos
dec
scas
cmp
or
scas
lahf
pop
and
aas
lahf
cmp
clc
aas
and
pop
adc
or
cltd
dec
repz
jge
jle
xor
std
into
out
sbb
ja
test
mov
insb
mov
dec
filds
pop
rorb
sub
xchg
lods
mov
insb
push
pop
popa
xor
addr16
adc
mov
mov
pop
dec
cmp
icebp
cmpsb
adc
xor
in
mov
clc
test
mov
out
or
mov
jmp
stos
jno
sub
push
inc
inc
mulb
pop
sub
jo
sbb
or
inc
les
lea
inc
pop
jp
add
stos
cs
or
aaa
xor
mov
lods
mov
es
or
iret
test
aam
ret
lcall
sbb
fsubl
icebp
insl
xchg
push
pop
push
xchg
into
push
ret
push
push
ds
ljmp
jbe
jecxz
insl
movsl
jg
push
jge
cld
xchg
aaa
repz
test
enter
jmp
sti
pop
xchg
inc
and
sub
jg
push
lods
mov
jg
sbb
jb
pop
sbb
jae
sbb
cmp
push
sbb
cmp
mov
pop
outsb
stos
mov
fidivs
or
std
adc
hlt
pop
mov
mov
push
mov
push
rcrb
dec
mov
dec
inc
lret
or
out
mov
outsl
into
jbe
dec
insb
cmpsl
push
sub
mov
push
frstor
push
fsts
or
push
cld
scas
fistps
sbb
hlt
mov
test
inc
or
fwait
dec
lds
cmc
fcmovnu
mov
and
xor
add
ret
jle
xlat
ret
cmp
scas
and
jl
inc
push
pushf
mov
xchg
mov
push
sti
sub
cmp
test
mov
popl
add
or
mov
fmull
sti
cli
xor
stos
scas
mov
ljmp
jnp
sbb
lods
test
repnz
and
loopne
testl
lods
lds
les
neg
movsl
xor
loop
insb
sarl
cmp
ret
fwait
push
pusha
push
or
aad
sub
mov
and
xchg
mov
and
std
cld
mov
sbb
add
pop
adc
sub
repz
mov
mov
jle
add
mov
out
std
lret
and
test
xchg
out
inc
imul
sbb
incb
popf
ds
cmp
jmp
mov
int3
xchg
notl
mov
mov
pop
fucomip
stos
mov
mov
icebp
fimuls
lcall
xor
sub
ljmp
inc
rclb
stc
sahf
xor
shll
sub
ds
pop
lea
pop
dec
jle
bound
dec
mov
jb
aad
aaa
cmp
mov
dec
pop
gs
inc
mov
aam
movsl
pop
dec
shrl
into
pop
call
in
mov
mov
pusha
aas
add
mov
adc
xorl
xchg
and
fucomp
dec
ret
sahf
aad
dec
lret
jo
fucom
aad
in
popa
es
in
cmp
imul
fdivrs
adc
or
mov
pop
xchg
mov
or
lea
cmp
hlt
add
cwtl
in
inc
les
push
arpl
loope
jl
xchg
jae
shlb
add
mov
cmpsb
fldcw
cli
je
mov
fwait
lret
xlat
mov
out
shrb
aas
inc
jbe
repnz
push
push
int3
jle
in
mov
sbb
rcll
pushf
movsb
dec
add
push
jl
or
add
xor
test
test
loop
jmp
sbb
cmp
mov
jne
jle
sahf
mov
in
imul
cmp
cmp
lock
into
xchg
hlt
stos
xchg
mov
push
inc
xor
repz
fsub
jae
stc
addr16
sti
cmpsl
fsubl
cmpsl
insl
xlat
cwtl
sbb
pop
mov
add
sub
xor
bound
cmp
js
pop
push
imul
lods
pushf
lods
mov
mov
add
popa
mov
ret
dec
outsl
sub
sbb
sub
pop
data16
aas
sbb
testb
call
jo
xchg
jg
push
push
adc
xor
dec
mov
mov
jne
repnz
mov
pusha
pop
mul
lods
add
mov
inc
jle
dec
or
test
mov
and
movsb
mov
out
scas
dec
adc
dec
jecxz
cmp
sti
inc
daa
fisttps
insl
std
adc
pop
arpl
gs
sub
icebp
fbld
pusha
adc
dec
cmp
pop
dec
aam
orl
xor
insb
mov
mov
das
cli
je
jle
loopne
xchg
mov
stc
add
in
sub
mov
xor
mov
in
dec
sahf
ds
rcll
jecxz
loope
arpl
sbb
mov
jge
cmp
cmpsl
je
sbb
fdivl
pop
arpl
sub
sbb
incb
outsl
arpl
lods
addr16
cwtl
jno
push
push
pop
outsl
fbld
pushf
aam
push
inc
hlt
ficompl
lea
icebp
xchg
movsb
xchg
mov
sbb
mov
lock
adc
fisubl
out
xor
mov
in
xlat
sub
inc
fsubs
cltd
int
or
sub
ret
fyl2x
cmpsl
lret
jg
dec
pop
and
pop
inc
dec
rcll
dec
ds
jb
push
aam
fstl
shrb
ret
adc
adc
adc
push
mov
lods
clc
mov
flds
and
scas
dec
stos
and
loope
outsb
bound
movsl
dec
stc
lcall
mov
mov
or
pxor
pop
mov
dec
lock
and
and
or
ret
sbb
sti
inc
hlt
clc
daa
mov
inc
ds
outsb
aad
sub
jp
or
xor
xor
fsubl
mov
xchg
mov
mov
and
leave
ja
dec
mov
or
loop
in
cmp
adc
push
addr16
inc
mov
stc
or
inc
js
pop
and
outsb
push
inc
lret
jo
das
mov
popl
test
es
pop
sbbl
mov
or
orl
adc
insl
repz
inc
es
out
mov
out
push
hlt
xchg
int
add
addr16
lahf
push
and
inc
or
mov
mov
and
ret
sbb
adc
call
test
adc
mov
test
push
out
sub
xor
adcl
lods
fnstcw
mov
fists
and
mov
pusha
mov
int3
pop
push
jmp
jae
subl
test
decl
test
push
enter
jl
pop
sbb
lret
call
lcall
pop
int3
jl
daa
ret
push
push
ja
cltd
mov
adc
add
xchg
pop
push
paddq
fmul
mov
test
pop
adc
lods
mov
mov
inc
sbb
dec
xchg
xchg
je
cmp
jns
test
mov
std
sub
jmp
out
js
push
dec
out
xor
cmp
int
sbb
outsb
xchg
pop
pop
jae
dec
pop
adc
cmp
xchg
ss
pop
add
test
jns
xor
inc
repz
dec
xchg
jge
xor
cs
mov
sub
mov
inc
or
lock
cmp
test
push
xchg
fists
push
fs
mov
test
or
adcl
in
jns
mov
js
cmp
and
in
xor
mov
pop
push
ss
adc
mov
and
aaa
mov
and
hlt
fdivrs
aas
and
repnz
pop
sub
je
push
out
jecxz
mov
sti
xor
pop
popa
loope
mov
push
std
cmp
dec
dec
sbb
xchg
adc
dec
cwtl
xchg
xchg
daa
sarb
cmc
sahf
jecxz
push
xchg
div
repz
js
movsb
cmp
push
aam
cmp
jnp
push
pusha
pop
add
xchg
mov
cs
push
adc
cs
ret
fstpl
mov
add
ljmp
pop
xor
dec
out
mov
fcmovnu
ljmp
add
xchg
enter
pop
pop
pushf
sbb
lods
insl
and
mov
inc
fisubrl
adc
mov
lods
push
jg
incl
or
or
jl
pop
dec
outsl
int3
insb
in
xor
mov
or
cwtl
fisubl
sbb
dec
stc
pop
nop
clc
int
cmpsb
loopne
push
pushf
lret
movsb
cmp
and
adc
cs
addr16
mov
mov
dec
gs
cmp
inc
inc
dec
loopne
data16
add
cmp
imul
nop
mov
stos
and
lcall
mov
in
outsb
mov
mov
cmp
cwtl
ficomps
mov
rorb
iret
cwtl
add
test
out
inc
imul
and
jnp
sub
repnz
ss
ss
out
ror
jmp
shlb
les
mov
push
jae
jge
icebp
mov
testl
lods
mov
pop
mov
in
ja
or
inc
mov
xor
or
add
pop
and
adc
into
loopne
dec
cmpsb
arpl
mov
dec
mov
pop
mov
mov
insb
or
dec
lret
xchg
mov
adc
mov
fisttps
push
jno
rclb
iret
shll
mov
fxch
lahf
fs
xor
xor
mov
add
fs
inc
icebp
outsb
mov
sahf
sub
and
and
sbb
mov
stc
mov
ljmp
repz
push
stos
xchg
mov
add
or
mov
xchg
cmp
lea
xchg
loope
fistl
dec
dec
sbb
movl
sbb
lahf
std
mov
fs
sahf
sub
cmp
xchg
inc
add
jnp
mov
icebp
mov
inc
scas
add
jmp
mov
xchg
repz
movhps
mov
xchg
jbe
add
aas
por
mov
add
sub
xchg
test
adc
fisubl
inc
sbb
movhps
test
mov
pop
dec
adc
pop
shl
divl
ja
jp
add
cli
std
sbb
sub
fimull
xor
repz
mov
addr16
dec
test
xchg
sbb
repnz
add
mov
jae
xchg
push
and
pop
daa
lock
hlt
jne
sbb
push
cmpxchg
adc
jne
and
and
shlb
and
ret
and
out
incb
jb
xchg
jp
bound
inc
loopne
pop
repz
outsb
cmpsl
lret
mov
xchg
js
xchg
popa
mov
add
ficompl
das
inc
bound
mov
mov
scas
cli
or
aad
jne
xchg
iret
or
fimuls
imul
and
sbb
sahf
adc
and
es
inc
mov
or
stos
les
movsb
and
push
or
xor
inc
je
roll
xchg
pop
sarb
ss
jge
mov
insl
adc
les
inc
xor
mov
frstpm(287
ds
dec
jne
dec
sub
mov
mov
jno
popf
fwait
mov
mov
xchg
js
mov
pop
xor
mov
aam
cmpsl
lea
loopne
bound
xor
jl
jno
loope
leave
pop
test
out
stos
cmp
leave
cmc
popf
mov
and
scas
imul
outsb
sub
jnp
mov
adc
lcall
mov
out
pop
rorl
subb
cwtl
sti
addl
xor
mov
aaa
pop
adc
cmp
orb
test
js
lahf
mov
mov
lahf
xlat
lea
mov
mov
push
lcall
push
sub
xchg
inc
outsb
push
enter
xlat
flds
jl
xor
xchg
add
xchg
pop
jecxz
shrb
jmp
adc
popa
loopne
rcrl
inc
lret
inc
inc
popa
cmpsl
sub
cli
push
xor
xchg
push
or
das
pusha
and
inc
sbb
sbb
cwtl
and
xlat
dec
push
sbbl
shlb
bound
cld
movb
push
xor
jo
or
xchg
mov
mov
pop
push
sub
push
inc
adc
pop
aad
sbb
lods
ret
inc
and
pop
std
push
hlt
push
add
call
pop
and
mov
jge
inc
outsl
and
fmul
sbb
int
jge
lds
mov
lock
push
repz
jle
insl
rcrl
push
xchg
pop
jno
sbb
xchg
pop
aas
fildl
into
dec
icebp
mov
mov
jns
fnstenv
jp
sbb
mov
fst
push
sbb
testl
sahf
sub
or
imul
aas
xchg
or
xchg
dec
push
repz
ja
sbb
jb
push
sbb
inc
daa
cli
ret
push
cmp
pop
sbb
jne
add
cmpsl
xor
jp
pop
into
add
loopne
ret
aas
mov
cmp
jle
fwait
mov
adc
and
sbb
lods
sbb
in
cmpsb
sti
mov
icebp
mov
push
adc
inc
les
and
mov
fisubl
pop
add
sub
mov
js
mov
xor
loopne
in
dec
mov
lods
sbb
push
mov
call
repz
inc
fcoml
sub
xor
or
mov
call
aad
cmp
push
xchg
sahf
enter
pop
enter
loope
jne
sbb
les
aad
out
stos
and
jl
ftst
dec
stos
sti
or
mov
add
mov
out
pop
movsb
pop
int
sub
mov
jecxz
dec
aaa
ret
test
into
mov
fstpl
call
mov
push
test
or
adc
pop
call
push
xor
enter
jg
xchg
or
and
ss
or
jp
or
mov
mov
jg
test
imul
in
insb
pop
sti
jl
xor
cmp
mov
std
jge
popa
pop
leave
cs
add
and
notb
and
fs
add
pop
cmc
lret
jge
lods
xchg
add
aam
outsl
pop
jl
fildll
shl
pop
lea
pop
clc
add
lds
inc
pusha
pop
sub
int3
pop
fiadds
inc
add
lock
mov
inc
xor
adc
mov
xor
dec
xchg
xor
aas
nop
int
ret
fstl
or
mov
in
mov
outsl
fldt
bound
insl
out
ljmp
mov
jg
xchg
pop
out
pop
mov
mov
xchg
test
pop
out
cmp
mov
cmp
ds
lcall
xlat
or
testb
ljmp
movsb
dec
and
cmp
stc
test
mov
push
jne
mov
lret
sbb
cmc
movsb
jae
in
inc
push
out
aaa
scas
cwtl
xor
push
sarl
ds
movsb
and
leave
lods
dec
add
loope
gs
xchg
dec
add
sbb
es
sub
pop
add
dec
push
push
mov
mov
scas
push
jl
cmp
mov
or
insb
push
hlt
dec
sbb
popf
and
shr
js
icebp
lods
add
je
inc
andl
in
and
push
shrb
popf
or
xor
mov
cmp
push
sub
mov
pusha
dec
idivb
jl
lcall
pop
pop
sub
je
jno
out
incb
inc
cmpsb
je
and
int3
clc
lds
add
fsubs
push
mov
or
mov
adc
add
mov
xchg
pop
mov
fisubrs
rcl
jle
jbe
pop
or
cs
mull
adc
adc
xchg
sbb
mov
lahf
mov
push
mov
push
dec
dec
mov
insb
lods
mov
pop
test
rolb
sbb
aam
or
and
xlat
inc
push
shl
inc
lahf
mov
sbb
push
dec
pop
dec
inc
pop
push
lret
in
xchg
pop
loop
add
adc
iret
aad
imul
mov
xlat
pop
dec
jp
jecxz
jle
sub
push
shlb
push
mov
or
enter
cmpsb
pop
sub
and
cmp
sbb
mov
mov
jecxz
dec
notl
adc
pop
or
xchg
mov
mov
fldenv
add
mov
add
and
or
test
push
mov
bnd
mov
loope
bound
outsl
mov
adcb
jnp
fcomi
movsb
jb
testl
sbb
jns
fidivrl
mov
sahf
imul
pop
and
icebp
lods
mov
fistl
scas
jae
das
dec
enter
int
bnd
xchg
mov
in
push
aas
mov
cmp
inc
das
sub
inc
lods
lret
add
int
cmpsl
lds
jmp
ja
inc
scas
outsl
pop
pop
shrl
dec
pop
orb
mov
int
pop
ja
int
in
fstps
cmc
lret
int3
in
int
aad
rclb
jl
in
sti
cmpsl
jae
loop
pop
push
adc
mov
add
fnop
bound
lods
dec
add
dec
mov
jne
daa
sarl
ljmp
movsb
inc
inc
out
ret
xchg
ss
test
ja
loop
jae
mov
hlt
dec
mul
xchg
dec
mov
and
inc
push
pop
and
push
pushf
adc
adc
xchg
adc
push
adc
adc
mov
pop
jmp
jno
xchg
fwait
cmpsl
push
mov
inc
sbb
loopne
cmp
mov
cmp
or
push
cmp
aas
mov
test
mov
inc
iret
lcall
aaa
push
cli
jae
push
int
inc
push
subb
jg
jbe
fs
adc
xchg
sarl
sbb
fidivrl
xchg
fbld
xor
mov
mov
and
cld
enter
sub
aaa
jo
iret
cltd
push
mov
lahf
mov
pop
jp
xor
pusha
sbb
sub
cmp
xchg
mov
jle
or
cld
and
adcb
cmp
js
jecxz
sub
xor
cld
dec
stos
jp
test
int
add
stc
adcl
mov
mov
xchg
jmp
push
aas
fwait
maxps
mov
add
cli
jo
bound
cmp
or
out
das
aas
sbb
xor
rcll
adcl
xchg
and
lods
rcl
pop
ss
cmp
in
scas
mov
mov
sbb
xchg
in
or
fs
push
je
arpl
sbb
call
outsb
inc
and
or
fisttpll
push
dec
rolb
sbb
imul
xorl
and
ret
jle
mov
test
mov
rcl
cmp
or
cmpsb
loopne
fldl
cmp
aam
mov
xor
fwait
lret
ja
les
out
popl
rclb
lds
mov
sarl
rcrl
fsts
dec
aam
mov
ret
leave
mov
push
in
jl
stc
pop
inc
push
and
mov
mov
jae
mov
call
incl
xchg
fiaddl
stos
xchg
test
pop
andb
pop
inc
xchg
dec
test
mov
sahf
into
idivb
dec
out
adcl
add
and
mov
clc
and
cmp
mov
pop
leave
push
imul
imul
xchg
xor
mov
or
jnp
mov
mov
inc
mov
fwait
push
inc
outsb
mov
jle
sbb
mov
sub
lcall
out
outsb
arpl
or
in
sub
dec
rorb
mov
xchg
xchg
stc
insb
sub
frstpm(287
iret
xchg
lds
hlt
mov
add
scas
data16
mov
cmp
enter
or
scas
push
rorb
imul
pop
or
cli
and
and
push
sbb
adcb
cmp
and
cmpsl
mov
test
pop
int3
roll
sbb
cmpsb
pop
repz
cmp
mov
fstl
push
jl
adc
jecxz
xor
imul
test
icebp
inc
mov
adc
pushl
aas
mov
mov
mov
and
fs
js
mov
dec
sbb
hlt
mov
adc
fnstsw
lret
push
in
xor
and
jle
jnp
cltd
inc
adc
dec
hlt
int
dec
out
and
mov
adc
jge
mov
inc
cmp
orl
and
stos
int
cmp
mov
pop
dec
fst
pop
movsl
mov
mov
int3
rsqrtps
test
scas
js
push
int
xor
cmp
ja
int
gs
fisubrs
insb
inc
cmp
aam
jp,pn
int3
mov
or
aaa
fucom
pop
push
popf
or
popa
cmp
fcoml
psrad
lcall
notb
inc
imul
mov
push
adc
mov
cs
jb
cmp
aad
jo
cmpsb
int
hlt
daa
add
xchg
cmp
xor
or
cmp
dec
sti
int
xchg
rorb
jbe
pushf
adc
clc
push
sub
xor
popa
std
dec
popa
in
jae
mov
outsb
fs
call
jg
incb
inc
or
test
das
jne
sub
ljmp
and
lods
push
aas
inc
sub
call
inc
sbb
shlb
scas
mov
repnz
pop
fidivl
subb
subl
fwait
stos
xor
cmp
ja
add
fnsave
out
xor
pushf
lret
mov
sub
mov
fdivrs
repnz
sbb
lcall
adc
fimull
fsubl
and
outsl
rolb
mov
daa
sti
adcb
or
mov
fcom
push
pop
mov
xchg
jmp
ds
hlt
int3
jo
push
nop
mov
push
xchg
adc
loope
loope
testb
add
pop
ss
fnsave
sbb
jne
mov
jecxz
movsl
lock
pop
inc
sub
popf
aad
cmp
gs
aaa
mov
fs
aad
mov
and
in
cmc
leave
push
scas
sbb
push
adc
rorl
ja
addl
or
fiadds
dec
sbbb
out
jb
cs
add
xchg
pop
jbe
sti
inc
cmp
pop
repz
shrl
cmp
mov
out
mov
mov
cmp
shlb
mov
mov
dec
rorb
xlat
xchg
lds
and
sub
adc
pop
inc
xor
sbb
jnp
mov
loop
push
nop
mov
cmp
push
cmpsl
ss
loop
cltd
mov
push
jmp
push
or
lock
sub
mov
lret
cmp
into
jecxz
jo
iret
jle
mov
in
int
cmp
popa
aaa
mov
xchg
sbb
bnd
test
mov
and
sub
xchg
pop
push
push
daa
and
out
inc
mov
pop
xor
mov
or
imul
scas
fisubl
adc
adc
imul
scas
ret
or
outsb
test
inc
dec
pop
and
rcl
dec
jg
inc
shlb
lods
push
pushf
insl
mov
ds
lds
xchg
sub
push
ss
sub
insl
xchg
and
lds
jmp
and
push
mov
enter
outsl
fidivs
jno
push
inc
insb
mov
test
mov
sbb
lret
fcmovnb
out
pop
stc
push
movd
shl
adc
and
cli
pop
std
pop
xchg
cmc
into
adc
daa
stos
in
xsave
inc
mov
enter
test
xor
adc
decb
mov
loopne
jg
fildll
dec
pusha
and
cmp
inc
xchg
mov
xchg
mov
daa
sar
mov
dec
clc
push
pop
fisttpll
call
scas
pop
ljmp
insl
xor
test
lock
mov
dec
or
lea
enter
xor
xchg
mov
jmp
push
or
and
jo
daa
enter
fimull
sbb
sahf
lret
popf
test
xchg
data16
fsubl
test
push
xchg
mov
repz
ret
and
push
gs
arpl
sub
das
push
sbb
and
jl
daa
or
inc
and
xchg
sahf
scas
xor
pusha
adc
inc
sub
adc
loopne
mov
cmp
mov
inc
and
add
push
xor
ret
lock
adc
scas
sti
clc
mov
sub
or
clc
out
lds
and
in
imulb
iret
enter
pushf
push
pop
outsb
jae
fmull
out
cmp
push
xchg
xlat
pop
in
add
adc
je
inc
inc
cmc
aas
loop
das
test
fsubl
rcl
inc
cmp
mov
cmp
loope
jge
popl
xchg
mov
inc
dec
mov
push
rclb
adc
iret
cmp
adc
jecxz
ret
cs
fistl
pop
pop
in
ficompl
cmpl
into
jl
mov
addr16
cmp
mov
sub
mov
rorl
lret
cmp
jne
ret
cmp
dec
pop
inc
fsubrl
iret
push
gs
adc
gs
pusha
jmp
out
sub
sti
fisttpl
xchg
xchg
mov
mov
daa
mov
pop
stos
rorb
xor
test
or
inc
or
cwtl
xchg
je
outsb
ficoml
pop
sbb
adc
lock
int
int
int3
fst
inc
lea
rorl
outsl
cmpsl
aad
xchg
push
lret
insl
mov
mov
out
inc
jg
xchg
leave
sbb
outsl
push
scas
xchg
imul
jb
push
mov
fs
inc
arpl
loope
mov
sub
lds
xlat
add
flds
aas
add
mov
push
lds
pop
ljmp
cli
leave
out
in
push
sub
or
mov
push
or
xchg
jae
jns
fidivrs
lock
adc
push
jnp
add
adc
jbe
je
pusha
aaa
or
into
inc
cmpsl
or
sub
lret
dec
mov
popf
inc
fldt
aas
in
push
xor
mov
incb
mov
inc
inc
xchg
adc
or
or
cmove
lds
lods
out
mov
xor
pusha
cld
out
pop
js
fwait
add
out
sub
adc
jae
in
xchg
cmpsb
stos
lahf
movsl
mov
jbe
pop
xchg
sbbb
mov
push
addl
cwtl
sbb
fstl
mov
adc
push
push
cmp
int3
cmp
cmp
stc
inc
and
lret
dec
mov
rol
add
inc
push
and
inc
sub
fwait
movsb
out
int
int3
insb
mov
cmp
inc
fstpt
mov
jns
scas
lds
cmp
push
fwait
sub
int
dec
push
sbb
pushf
mov
xchg
pop
fldenv
xchg
loopne
sub
push
or
stos
sbb
or
jle
lret
push
out
cmc
xchg
sub
lods
bound
push
into
pop
imul
cmpsl
mov
cmpsl
xlat
imul
cmpsb
or
cmp
xor
inc
fdivrl
dec
or
das
mov
out
outsl
stos
out
cmp
mov
jl
jl
sbb
or
outsb
push
pop
lret
mov
jae
cmp
mov
gs
add
stc
loope
mov
jbe
cli
or
add
std
scas
fs
arpl
addl
bound
xor
jp
dec
lock
lcall
repnz
cltd
das
pusha
jne,pn
in
mov
bound
gs
adcl
push
sub
pusha
decb
or
mov
inc
xchg
arpl
lahf
adc
outsl
jmp
mov
xchg
push
push
fisttps
mov
rcll
insl
sub
mov
jbe
push
push
js
sbb
sbb
daa
mov
movsl
add
xor
das
dec
mov
scas
cltd
leave
pop
incl
mov
dec
sarl
inc
or
cltd
frstor
daa
sub
sarb
mov
stc
fidivrl
ret
mov
scas
dec
lret
pushl
pop
and
push
dec
ja
shufps
pop
mov
pop
loope
xor
xchg
push
and
add
cmpsl
icebp
pop
lret
icebp
push
addr16
or
jecxz
add
aas
ret
mov
mov
shrb
cmp
js,pt
repnz
sbb
mov
das
mov
dec
pop
std
lret
xchg
xor
mov
xchg
xchg
xor
xlat
sub
mull
lock
sbb
lret
fwait
cmp
jae
out
cmpsb
xor
pusha
push
jb
hlt
mov
in
push
lahf
pop
dec
fsubrs
enter
sahf
jns
iret
jo
jbe
decl
lret
add
fisubs
sub
lods
pop
lock
add
or
clc
pop
sti
daa
mov
add
cmp
xor
hlt
movsb
or
dec
add
mov
xchg
push
lods
cmp
nop
mov
mov
mov
fstpt
insl
sbb
in
cmpsb
inc
shlb
rcrl
xor
dec
sbb
dec
lret
push
andb
lahf
repnz
xorl
add
add
push
data16
mov
mov
lcall
jp
jecxz
sbb
pop
mov
andb
and
stc
xchg
jae
je
adc
pop
sarb
aam
xor
xorl
test
sbb
pop
mov
lcall
sub
adc
scas
js
les
add
les
pop
ficomps
xchg
jl
movsl
push
pushl
out
leave
rcrb
mov
into
sub
cs
mov
cmpsb
daa
mov
mov
mov
aad
ret
cmpsl
mov
jl
out
add
xchg
repz
jbe
inc
fdivs
or
cmpsl
jb
and
mov
das
shlb
pop
cmp
js
fiaddl
and
push
outsb
dec
pop
addr16
sbb
adc
sbb
add
add
mov
sar
nop
mov
movsl
out
imul
push
ljmp
cmp
loope
xor
and
or
pop
add
test
jmp
jae
sbb
pop
scas
dec
add
fwait
or
mov
movsb
xor
inc
sbb
rclb
sti
loope,pt
iret
cltd
loope
mov
addr16
pop
insb
sbb
add
inc
mov
inc
and
cmp
leave
popf
lcall
fdivrl
sub
lcall
imul
int
aam
aas
sahf
subb
cli
push
cmpsl
jl
out
int
inc
sub
inc
data16
xor
add
mov
adc
les
popf
insl
cli
mov
jmp
cmp
or
loop
ret
jge
jne
dec
add
sub
xorb
jne
jg
lcall
cmp
out
sbb
jb
pusha
icebp
inc
leave
clc
sbb
movsb
adc
idivb
mov
js,pn
mov
and
pop
pusha
out
or
hlt
adc
xchg
popf
sbb
ret
cmc
jno
or
mov
push
pop
push
mov
adc
and
xchg
ljmp
fbstp
test
and
xchg
hlt
jl
and
dec
jb
sub
push
and
pop
dec
xchg
sbb
pop
mov
cs
cmp
fildl
loope
cmp
and
and
lret
push
js
dec
loop
loop
orb
push
lret
and
repz
stc
mov
stos
testb
das
aad
inc
call
fbld
imul
scas
inc
push
sub
loop
lock
mov
lret
push
in
xor
xor
cmpsb
lods
add
adc
push
dec
stos
loop
outsl
mov
xor
xchg
mov
out
mov
rcrl
or
icebp
and
repnz
out
popf
inc
mov
std
outsb
rcrl
xchg
pop
clc
daa
xchg
nop
fists
movsb
bound
rcrl
or
jno
sub
mov
cmp
in
push
xchg
add
lds
in
cli
iret
jns
sti
dec
lret
xchg
arpl
dec
mov
xor
or
cli
movsl
add
jb
outsb
xchg
and
ret
cmp
movsb
repnz
stos
jno
sub
pusha
das
lock
mov
inc
and
sbb
or
cld
mov
faddp
repz
lock
repnz
mov
jle
mov
pop
push
or
and
adc
ret
dec
xchg
inc
mov
jp
xchg
cmp
rorb
cltd
repnz
mov
sub
adc
ret
imul
adc
jmp
or
or
popa
sub
mov
sub
test
insl
mov
pop
bound
das
mov
push
aad
shlb
rcl
jle
repnz
pop
sbb
mov
sub
cli
lret
dec
daa
test
push
mov
rorl
popa
push
add
mov
xchg
mov
fdivrs
mov
mov
adc
or
xchg
negb
add
in
aaa
int3
out
enter
cmp
push
mov
or
push
dec
outsb
inc
sbb
testl
test
addl
pop
sbb
shl
sar
icebp
jno
xchg
xchg
icebp
hlt
sbb
pop
idiv
push
fldl
daa
daa
adc
add
xor
in
call
cmpsl
push
sbb
popf
add
fcmovnb
inc
ljmp
sbb
pop
stc
adc
test
and
pop
pop
mov
bound
push
test
xchg
mov
push
shl
add
sbb
mov
pushf
rorl
and
arpl
ret
dec
stos
ffreep
inc
push
fwait
add
movsl
mov
int
mov
push
pushf
push
inc
out
jp
push
fisttpl
fs
ljmp
push
in
cmpsb
fsqrt
and
inc
xlat
or
shr
pop
pop
mov
outsb
xchg
mov
cs
jb
mov
outsl
loop
sub
add
push
orl
mov
lret
out
cmp
or
imul
nop
mov
outsl
jg
outsl
leave
pop
je
mov
call
aas
lret
outsl
dec
testl
mov
mov
stc
loope
movsl
pop
lret
ljmp
push
mov
lock
in
pop
sti
jl
test
jne
icebp
roll
lock
frstor
push
cli
mov
into
test
ss
loop
in
cld
int
loopne
mov
jecxz
inc
xchg
mov
adc
stc
shr
xor
mov
adc
add
loop
sub
shrl
imul
test
in
jecxz
sub
sub
jg
dec
sar
outsl
je
mov
lret
movsl
mov
in
xchg
jns
movsl
in
fists
sbb
sub
dec
sahf
adcb
mov
pusha
loopne
sti
ror
xchg
xchg
fildl
cmp
sti
lds
dec
cmp
loope
inc
inc
mov
xor
adc
mov
in
fiadds
jmp
sti
push
aad
jo
test
mov
lea
and
loope
lock
cmp
xor
mov
inc
sbb
movsl
mov
bnd
pop
in
xchg
xor
xor
dec
and
cmpsb
outsl
push
aaa
jnp
mov
rorl
jecxz
nop
mov
vmwrite
jae
rolb
inc
mov
push
add
mov
out
cld
cmp
xchg
sub
cmp
aas
js
aad
lock
xchg
inc
mov
popf
mov
and
shrl
add
nop
scas
shl
mov
aas
test
inc
and
syscall
orb
fsubp
cli
cs
or
aad
add
push
data16
stc
jp
cld
daa
mov
repz
aam
stc
out
jno
loopne
sbb
xchg
push
xchg
pop
sarl
ds
jnp
jns
sbb
jmp
or
icebp
iret
mov
mov
cmp
fsubrs
popa
lods
mov
lea
pusha
fiaddl
jg
sbb
dec
scas
mov
push
and
jae
shl
pop
inc
dec
movsl
dec
mov
mov
sbb
dec
add
lea
pop
cltd
fst
add
scas
es
and
xchg
test
push
cmp
out
shll
dec
mov
test
faddl
and
sub
dec
cwtl
xor
push
sub
in
jle
mov
cwtl
int
sbb
ret
xchg
stos
mov
cmp
into
divb
insl
push
lods
mov
jmp
jg
mov
das
pop
dec
sub
xor
shrl
cwtl
pushf
hlt
xchg
xchg
pop
data16
cmpsb
les
jg
mov
stos
int3
pop
lods
cmp
push
mov
sbb
gs
mov
lahf
xchg
arpl
jmp
fisubrl
push
mov
xchg
or
fs
jae
fsub
je
cmp
xchg
insl
push
pop
dec
add
and
sub
inc
int3
xor
pop
jns
cmpb
mov
jne
rcr
dec
mov
adc
or
in
insb
into
and
push
push
movsl
mov
popa
rorb
dec
jmp
dec
stos
dec
inc
pop
imul
lret
aaa
lahf
push
nop
mov
repnz
dec
pop
fisubs
shl
cmp
push
arpl
outsb
and
pop
push
arpl
inc
cmp
movsb
in
je
jne
lock
stos
cmp
es
repz
sarl
cwtl
jg
dec
repz
xor
insl
aad
movsb
sbb
push
insb
jg
fdivl
mov
xchg
push
push
push
mov
mov
mov
idivb
mov
push
shll
movl
xchg
in
sbb
stos
icebp
xchg
daa
bound
rorb
ljmp
add
jne
roll
flds
xor
dec
jbe
lods
sbb
mov
push
addr16
scas
add
int3
jp
mov
gs
lea
jns
pop
inc
push
ss
nop
xchg
addr16
xchg
or
xor
xchg
jno
fdivs
js
adc
cltd
sbb
scas
js
mov
leave
cwtl
mov
stos
aad
cmp
add
push
arpl
xor
loope
and
adc
cmpsb
xchg
lds
imul
pop
insl
cmc
jl,pt
test
nop
jmp
add
and
jbe
dec
in
mov
pop
mov
rcrl
mov
addl
hlt
pop
in
mov
call
mov
mov
inc
je
shrb
aad
inc
js
fiadds
mov
mov
sti
int3
cli
inc
clc
cmovle
aas
sbb
push
push
in
cltd
popa
int
pop
dec
mov
mov
scas
xchg
push
pop
xchg
in
pop
sarb
inc
push
mov
xor
mov
xchg
inc
call
jno
cmpsb
aad
addr16
out
adc
out
out
outsb
cltd
jmp
dec
inc
call
pop
punpckhbw
xor
fs
add
ret
aam
test
xor
out
cli
jmp
popf
jle
cmc
repz
ja
jecxz
out
mov
leave
in
xorl
call
cmp
cmp
ret
mov
push
or
dec
mov
add
loope
sub
xchg
icebp
testb
mov
js
test
pop
dec
mov
adc
mov
insb
and
jbe
pminsw
dec
icebp
mov
les
pop
pop
daa
jae
mov
jb
mov
push
adc
cs
das
sbb
mov
or
icebp
inc
insb
aam
jmp
jne
dec
je
stos
inc
xchg
sbb
rorl
stos
xor
dec
rcrb
mov
pop
loopne
test
jae
cld
cmp
sub
mov
add
sub
push
scas
xchg
dec
push
push
mov
frstor
imulb
bound
out
outsb
mov
cmp
jne
xchg
js
push
add
push
xor
mov
mov
iret
jns
arpl
nop
mov
adc
inc
call
enter
add
xchg
or
sub
adc
jo
sub
dec
inc
mov
sahf
std
mov
out
pop
rclb
sahf
or
pop
pop
inc
loop
xchg
push
mov
xchg
aad
jmp
loopne
cmp
jo
add
in
or
mov
mov
pop
fldcw
sbb
in
push
hlt
mov
pop
popf
mov
js
loope
add
ret
inc
imul
addb
add
pop
jmp
loopne
test
loope
insl
inc
mov
jns
mov
sbb
mov
sub
les
pushf
test
mov
sbb
lcall
ja
ret
sbb
mov
ret
jno
mov
shrb
push
in
pop
adc
pop
lods
sbb
mul
ret
popf
pop
into
jmp
jmp
imul
shl
jae
xchg
push
xchg
push
outsl
jne,pn
loop
insl
pop
add
in
out
lret
stc
mov
lea
lea
fnstenv
adc
and
adc
test
into
cmp
cmp
adc
fxtract
cmp
pushf
pushw
shl
mov
pop
call
outsl
cmp
cmpsl
inc
fcmovnu
push
std
jle
sbb
xor
ljmp
adc
cmpl
mov
sbb
cmp
hlt
and
pop
add
mov
ret
in
or
add
jmp
imul
dec
inc
adc
ficompl
mov
and
mov
or
push
pop
dec
outsl
negl
and
popf
pop
dec
mov
cmp
scas
pusha
mov
pop
jmp
out
push
sarl
push
push
dec
sub
aad
jns
stc
xor
push
dec
push
in
push
push
daa
xor
sarl
dec
mov
cwtl
push
sub
imul
mov
les
and
push
addr16
mov
sub
test
mov
jae
mull
test
jb
in
les
testl
pop
inc
pop
pushf
adc
jg
sub
add
pop
fnstenv
lahf
push
xchg
loop
jo
jge
fldcw
lret
iret
lahf
xor
push
lret
xor
pop
divb
cmpl
mov
push
rclb
jo
stc
xor
xor
std
xchg
sub
xor
cmp
out
mov
adc
sub
lods
and
xor
lods
sarb
xchg
and
cmp
shl
popf
into
js
into
std
into
aam
add
dec
inc
or
sbb
sbb
dec
or
sbb
inc
fnsave
in
shll
add
fisubl
shrl
mov
ret
std
push
push
add
mov
loop
sub
or
sub
jg
push
movsl
cmp
lret
cmp
js
cmp
cmp
sahf
and
inc
jnp
scas
add
xor
mov
fs
stos
mov
sub
sbb
mov
pushf
into
cmpsl
pop
clc
je
adc
pop
into
xor
mov
mov
test
lods
sbb
sbbb
movsb
or
adc
push
cmp
mov
pop
pop
inc
push
fs
icebp
es
and
jge
xchg
in
add
nop
movsb
test
mov
shl
mov
and
mov
int
sub
pusha
cltd
test
pop
dec
outsb
pop
insl
nop
cmp
aas
or
xor
cmp
orl
push
aam
mov
sbb
ljmp
hlt
mov
inc
sub
movsb
jb
pop
sub
lock
xchg
jge
or
andb
mov
cmp
push
xchg
sbb
scas
add
cmp
lret
nop
popa
jb
mov
out
dec
jl
inc
shl
mov
test
xchg
decb
lcall
jmp
dec
sub
cmp
out
mov
dec
icebp
fwait
add
mov
rcl
push
or
sbb
mov
and
push
ret
stc
out
cli
jne
jecxz
push
leave
pop
lahf
pop
xchg
call
push
sub
mov
out
mov
cmpsb
add
andl
repz
lcall
sub
jb
sbb
shll
movb
popa
lcall
mov
int
lods
arpl
loope
sbb
mov
fldl
mov
mov
add
xchg
xchg
xchg
mov
push
jl
cwtl
inc
adc
push
sti
imul
faddl
dec
sbb
cmp
mov
rcll
outsl
xlat
cmp
fldenv
testl
dec
mov
xor
add
push
mov
jb
inc
jmp
add
sbb
test
cwtl
lock
mov
cmpl
in
fdiv
out
jns
xchg
add
enter
or
mov
xchg
xor
inc
sbb
mov
xchg
xor
int
xor
clc
fcoms
lds
loop
push
subb
out
roll
mov
push
push
fadds
mov
ss
addr16
push
push
and
mov
mov
push
mov
sub
jbe
sar
mov
pushf
test
xlat
jecxz
out
cmc
dec
or
pop
push
dec
je
pop
adc
xchg
xor
mov
cmc
jb
add
xchg
test
sti
jge
es
mov
xchg
adcb
pop
mov
fcompl
lds
out
insb
sbb
lods
es
cwtl
xchg
or
inc
mov
push
imul
mov
stos
xchg
mov
push
mov
cs
sbb
test
and
outsb
sarl
shll
adc
push
sub
divb
or
ret
sti
push
xor
inc
imul
xor
xorb
xchg
popl
testl
stos
adc
push
out
mov
or
mov
leave
sbb
aas
lods
inc
pushf
sbb
outsl
std
iret
and
les
hlt
cmp
clc
repnz
lock
movsl
pop
sbb
js
adc
mov
mov
cltd
test
fnstenv
jmp
add
adc
add
fs
iret
add
dec
cmp
je
aad
xor
sbb
or
ss
ja
test
mov
inc
movsb
sar
scas
cmp
stc
cmpsl
xor
add
rolb
xchg
sar
loop
jo
call
test
dec
shlb
dec
push
adc
flds
mov
jnp
inc
and
xor
mov
push
shlb
aaa
gs
nop
xlat
dec
pop
out
bnd
push
push
repz
icebp
xchg
repnz
sbb
mov
mov
mov
add
ret
fildl
or
cwtl
xor
aad
adc
movsl
aaa
pop
fnstsw
cmpsb
dec
movsl
cmp
xor
adc
movsb
xchg
dec
inc
adc
je
push
mov
in
pop
pop
push
je
mov
jns
fldln2
and
int
mov
sub
stc
pop
or
dec
out
mov
mov
cmp
shl
mov
cmp
inc
das
or
daa
adc
adc
adc
xor
scas
addr16
add
shr
cmp
push
push
and
mov
or
xlat
addr16
aas
stc
outsl
jb
aas
ret
insb
sub
push
shrb
dec
jbe
jmp
push
ret
cmpsl
test
das
xchg
adc
or
in
cli
in
and
push
js
ret
cs
sti
imul
xchg
adc
dec
sbb
pop
ret
xchg
mov
mov
dec
stc
jb
mov
adc
cmpl
add
add
dec
push
inc
xlat
cld
add
mov
inc
daa
or
xor
xchg
mov
mov
ret
jo
ret
sub
and
jo
rcrl
sbb
das
mov
faddp
pop
cmpsl
in
stos
push
mov
shrb
and
cmp
mov
push
jmp
ja
test
dec
sti
cs
pop
out
dec
test
lds
imul
push
jnp
pop
pop
mov
es
push
sub
popa
fs
lods
fidivrl
int
push
xchg
pop
jne,pn
aad
pushf
xor
or
js
sti
lods
jl
xor
add
movsl
pop
cs
ja
sbb
lahf
mov
sbb
mov
mov
icebp
bound
imul
xor
mov
int3
adcl
std
nop
sarl
lret
add
andl
or
cmpsb
stos
ds
loop
sub
mov
cmpsb
pop
in
sub
lods
cmpsb
xchg
mov
hlt
imul
lds
adc
fsts
ret
std
packuswb
shl
stc
or
and
xor
jp
pop
call
jno
inc
pop
ljmp
rorb
adc
add
mov
jle
std
mov
test
push
hlt
lods
pop
cmc
pop
pop
out
push
ja
pop
icebp
sub
sbb
sti
gs
jb
xchg
ret
mov
push
scas
rcrb
in
adc
xor
orb
pusha
ss
pop
mov
mov
loopne
rclb
xchg
dec
mov
in
sbb
or
pop
add
xchg
or
xor
push
je
push
stos
out
pusha
enter
dec
lret
and
mov
cli
iret
cld
pop
inc
jns
cmpsb
push
in
fimuls
adc
xlat
push
lds
jne
pop
or
lods
xor
shll
lods
push
and
loope
or
enter
mov
jnp
fstpl
push
ficomps
mov
xorl
and
ret
mov
imul
or
loopne
xor
push
push
clc
adc
lods
mov
faddl
sub
sbb
cmp
mov
fcmovu
xor
sbb
rol
movsb
out
fs
xor
mov
sbb
push
sub
sbb
xchg
xor
inc
out
mov
jo
dec
dec
xchg
aas
lret
daa
dec
xchg
adc
insb
outsb
inc
test
movsl
jg
mov
clc
or
mov
jg
in
js
adc
mulb
stos
loop
dec
dec
cmp
jno
push
aaa
iret
push
shrb
pop
loopne
outsl
mov
pop
push
mov
mov
pop
cmpsb
jb
jle
sbb
je
imul
inc
pop
int3
sub
popa
pop
test
roll
ljmp
ja
andl
adc
jle
and
aam
mov
pop
sahf
les
pop
pop
lods
xchg
cli
adc
and
loope
dec
scas
cwtl
pop
sbb
nop
jne
mov
inc
dec
insl
insb
jns
jns
cmp
pop
pop
xchg
xor
pop
dec
pop
roll
bound
pop
add
mov
pop
cmp
and
out
xchg
jnp
imul
jb
scas
mov
jp
mov
cmpsl
mov
es
mov
sbb
lds
gs
and
pop
repnz
insb
cltd
mov
out
out
in
xor
imulb
dec
sarb
test
fs
call
and
cmp
cld
xchg
mov
or
pop
push
jae
xchg
adc
dec
mov
mov
mov
notb
or
push
add
cmpsb
push
sbb
mov
insl
imul
fstl
insb
jno
jg
pop
bound
mov
and
mov
cmpsb
outsb
arpl
shlb
ljmp
hlt
pop
dec
jbe
ret
add
dec
mov
imul
jp
dec
out
adc
dec
push
xchg
movsl
push
jmp
cwtl
sub
and
outsb
bound
add
pop
push
int3
sbb
dec
dec
lcall
sub
xor
xchg
add
clc
cmp
fcompl
cmpsb
movsb
loop
shlb
repz
fsubrs
inc
adc
inc
lahf
dec
repz
inc
xor
in
out
sub
lods
lock
mov
es
fsubrp
xchg
cmp
mov
jne
push
and
cwtl
das
push
enter
stos
mov
pop
and
aas
fisubrs
xor
rcll
enter
push
inc
bound
fisttpl
testb
inc
xor
push
sbb
mov
pushf
cmp
sbb
outsb
and
cwtl
xchg
mov
fwait
cmpsl
ljmp
mov
js
stos
hlt
push
inc
jp
mov
mov
and
jmp
sbb
adc
jge
lret
sub
sti
inc
jge
lock
cli
jmp
xorl
imul
lret
mov
push
test
cwtl
lods
fisttps
dec
jne
mov
cwtl
xchg
mov
dec
cmpsb
adcb
roll
inc
bound
es
xor
pop
jmp
aad
mov
push
mov
aas
fyl2xp1
adc
leave
pushf
cmpsb
add
push
sub
orb
repz
xor
adcb
dec
push
ret
idivb
jae
in
mov
mov
cmc
cmp
inc
inc
lahf
aaa
adc
hlt
stc
fisubrs
and
inc
testb
mov
stos
adc
addr16
cmp
pop
cli
jle
jne
adc
cmp
popf
and
pop
push
stc
insl
aam
mov
and
movsw
rol
loopne
popf
cltd
cmpl
xchg
lret
xchg
mov
xor
bound
hlt
sbb
jnp
not
jnp
adc
in
lcall
movsl
inc
cmpsb
cmp
pop
xchg
jo
iret
xchg
aad
dec
mov
mov
or
dec
sub
add
add
movsl
mov
sbb
adc
lods
and
cmp
cmpsb
mov
nop
jae
or
cmp
js
push
jl
jne
dec
sub
pop
data16
jbe
push
lret
cli
repnz
dec
and
jbe
mov
pushf
push
ljmp
xor
push
mov
loopne
cmp
adc
rclb
mov
jb
ret
jb
stc
or
adc
push
dec
out
pop
stos
mov
das
jp
iret
mov
dec
shl
and
lcall
aad
inc
cmp
xchg
lahf
sar
xor
and
aaa
add
cmc
and
inc
or
ficomps
test
popa
mov
ss
ss
adc
xchg
push
pop
out
pop
cmpsl
xchg
and
ja
inc
sub
mov
jb
cmp
pop
mov
push
shlb
dec
popf
in
sti
xchg
jno
sahf
sti
push
cmp
pop
das
aas
in
ss
jle
push
mov
push
inc
repnz
sub
ss
je
cmp
negl
out
jg
push
ss
adc
lahf
jmp
push
mov
sbb
dec
aas
icebp
in
or
jbe
mov
mov
incb
mov
jge
pop
xchg
xchg
jno
xchg
lods
mov
mov
push
mov
fwait
bound
iret
stos
adc
fwait
call
out
out
sbb
xchg
push
mov
scas
sti
inc
adc
jns
or
mov
loopne
in
xorl
gs
pushf
push
mov
or
jno
addb
push
scas
mov
loope
add
popf
push
mov
imul
out
jp
add
les
pop
xor
mov
lds
sbb
enter
js
push
popa
das
in
adc
dec
jmp
nop
nop
popf
fnstcw
test
in
add
cmp
test
lods
cmp
add
adc
rcrb
repnz
inc
sub
outsl
cltd
pop
mov
and
or
repnz
hlt
fsubr
push
sub
in
push
push
movsl
lods
mov
pop
sbb
xchg
pusha
fisubrs
push
out
push
inc
jbe
dec
fisubs
xchg
in
push
into
push
pop
stc
and
mov
enter
push
xor
push
sarb
lahf
cmpsl
mov
cmc
ret
and
cmp
mov
sub
fbld
hlt
mov
ficompl
dec
addr16
jno
cld
addr16
jle
les
mov
inc
loop
icebp
xor
ljmp
mov
push
rcll
loop
sub
inc
inc
shll
mov
mov
cmpsl
rorb
mov
movl
and
pop
stc
xlat
shlb
or
arpl
andl
js
int
push
sbb
adc
pop
jg
sbb
push
enter
xchg
fucom
sbb
and
pushf
aaa
cmp
mov
jno
aad
imul
pop
daa
jp
addb
shrb
test
fstpl
aad
clc
pushf
mov
jmp
test
and
sub
jbe
fistpll
add
mov
push
ljmp
shlb
push
inc
cmc
in
repnz
xchg
mov
mov
jl
add
lahf
enter
test
fxch
shr
in
out
in
jne
mov
popf
push
loop
xorl
int3
push
rcll
cli
mov
shr
inc
nop
lea
enter
cmp
movzwl
cld
and
or
xchg
or
mov
outsb
scas
or
ljmp
enter
js
out
sbb
fsubr
mov
sar
lea
je
jb
mov
cwtl
mov
and
or
jae
push
pop
insb
mov
aaa
push
enter
dec
lock
xlat
pop
aaa
dec
sbb
sbb
ret
cld
data16
xchg
jo
mov
jmp
and
test
adc
push
aas
out
aaa
jo
mov
jg
dec
fnstsw
shrl
in
mov
fs
popf
push
xlat
xor
fildll
subl
stos
pusha
lcall
cmp
sahf
pushf
adc
lret
loopne
into
inc
stos
xchg
je
insb
arpl
pop
mov
dec
and
or
sub
nop
fsts
lods
lock
dec
das
stc
cli
dec
stos
mov
rcll
mov
push
into
sub
div
pop
jns
mov
push
dec
jp
fisubs
inc
add
insl
test
add
enter
pop
jno
pushf
adc
je
and
jle
adc
push
stc
stos
popf
test
xor
adc
pop
fs
or
pop
outsl
push
adc
xchg
pop
adc
sbb
push
jo
mov
lock
fwait
mov
pop
lahf
and
xor
and
add
pop
hlt
or
sbb
dec
mov
xor
xor
shrl
mov
push
push
insb
push
out
or
mov
sbb
mov
and
sub
adc
xor
fistpll
pop
add
fisttpll
flds
leave
cltd
add
ds
outsl
push
add
out
dec
aaa
data16
mov
mov
push
jne
data16
dec
dec
push
lret
insb
or
mov
cmp
xchg
sbb
hlt
mov
cmp
das
jge
inc
add
mov
sbb
cmp
scas
in
mov
shrb
pop
xchg
ret
add
ret
ret
mov
aas
jg
jno
jecxz
loope
out
pop
dec
sub
or
inc
jl
stc
mov
mov
inc
push
sub
repnz
popa
cmp
fimull
rcl
jmp
xchg
out
lock
dec
cwtl
dec
push
addl
ficomps
divl
and
outsw
fistps
loope
mov
in
cmpsb
imul
mov
loope
cmpsl
fstpt
test
outsb
and
int3
xor
inc
loope
push
push
bound
pushf
int3
loop
js
subb
xchg
sti
fnstenv
ds
lods
jne
inc
shl
mov
cmp
xchg
adcb
or
out
sbb
in
popf
out
pop
push
arpl
prefetch
adc
cmp
jb
lods
in
popa
scas
out
dec
jmp
dec
test
xchg
sbb
test
pop
call
lods
xor
adc
jo
lret
cmp
pop
imul
dec
adc
cli
jno
mov
jg
repnz
mov
arpl
and
push
stos
fisttpll
notb
push
mov
jnp
inc
or
insl
pop
mov
shll
xor
cli
lcall
push
shlb
inc
xor
cld
jp
mov
mov
pushf
outsl
pop
repz
mov
push
lock
jge
gs
mov
pop
push
jmp
mov
insl
rclb
jne
push
or
mov
popf
jg
xor
les
pop
inc
insl
jno
xlat
popf
scas
jp
ret
pusha
jns
insb
dec
add
mov
rol
mov
sahf
cld
jnp
inc
ret
repz
push
dec
cmp
iret
jnp
mov
mov
in
mov
ret
enter
mov
mov
xor
or
pop
xchg
rclb
sbb
adc
adc
push
cwtl
xchg
xor
std
dec
jecxz
sbb
insb
repz
xor
notb
push
sbb
xchg
dec
push
or
stos
cmp
inc
lea
and
push
data16
cmp
mov
push
repz
pop
add
xor
in
aas
nop
cmpb
adc
nop
push
ljmp
cmp
and
mov
jmp
idivl
xor
sub
into
les
dec
sti
sub
xor
data16
test
or
dec
dec
push
mov
jb
call
sub
mov
lea
cmp
les
adc
mov
sti
jo
xchg
sbb
lcall
insb
mov
xor
cmp
push
gs
into
lods
cmp
cltd
inc
js
int
pop
dec
pop
fldt
hlt
rcr
jecxz
push
sbb
daa
dec
push
leave
into
xor
jae
call
std
jae
push
jmp
inc
xor
xchg
fdivp
mov
or
sbb
andl
push
rcrb
add
cmpsl
lods
dec
adc
push
xchg
and
and
jne
inc
lods
mov
xchg
outsl
cwtl
push
adc
mov
fisubrs
cmp
mov
add
add
inc
mov
dec
mov
pusha
xor
push
test
push
inc
inc
ficomps
rcr
pop
and
ret
lods
fsubs
and
pop
push
pop
xor
xchg
push
add
push
andb
loope
inc
fidivrl
mov
mov
add
sbb
xor
sbb
test
incb
test
loope
mov
fsub
adc
sub
mov
cli
stos
lods
in
sti
xchg
jo
ficoml
stc
sub
fildl
int3
adc
sub
and
mov
in
push
jp
sub
into
mov
fnstcw
sub
jl
dec
lds
and
cwtl
cmpsb
mov
insb
push
out
push
clc
or
cmp
loope
sub
adcb
add
decl
xlat
and
daa
mov
or
jo
fs
out
and
push
sbb
dec
add
sbb
outsl
sub
mov
and
sarl
cmp
inc
mov
jp
mov
mov
mov
adc
ljmp
icebp
pop
pop
arpl
movsl
ret
add
popf
xor
loop
jmp
push
sub
push
loope
jbe
push
pop
push
repz
cli
test
mov
cltd
jbe
loop
call
lods
ss
les
outsl
push
dec
lock
pop
lret
xlat
loope
daa
push
mov
adc
mov
insl
imul
dec
adc
mov
mov
rcrl
or
insl
data16
mov
lds
scas
ja
inc
movsl
leave
xchg
push
mov
mov
outsb
test
das
fs
es
in
fisubrs
shl
push
cmovg
add
shlb
mov
out
or
jl
rcrl
add
scas
mov
sar
jbe
pop
movsl
push
cwtl
xor
stos
stos
mov
xchg
adc
adc
testl
xchg
in
or
jno
clc
pusha
data16
das
push
cmpsb
pop
cmp
mov
xor
loope
loopne
mov
es
cmp
mov
nop
test
loope
stos
fcomip
sahf
inc
push
aad
enter
add
gs
push
dec
and
stos
lock
repnz
out
xor
xchg
jnp
cmp
cmp
sub
cltd
insb
out
movsl
xchg
and
dec
aaa
xchg
and
push
daa
xchg
mov
scas
ss
sahf
mov
mov
inc
mov
pushf
and
addb
ret
es
cmp
mov
test
mov
lods
xor
pop
cmp
subb
jno
or
adc
into
movsl
push
imul
pop
adc
clc
cmp
dec
add
mov
into
js
out
inc
lea
push
mov
in
mov
das
push
push
outsl
outsb
stos
mov
or
sub
dec
adc
out
mov
fildll
cmp
or
sbb
inc
into
adc
jmp
add
data16
sub
cmp
dec
inc
sub
xchg
mov
pop
mov
popf
pop
popf
lret
dec
repnz
add
shrb
test
jp
jb
pop
mov
imul
das
addr16
xchg
jge
repnz
pop
add
mov
mov
xchg
cli
xor
jecxz
lcall
cmp
ds
mov
dec
inc
xchg
aaa
ret
jns
cwtl
lahf
scas
mov
inc
aad
push
test
mov
push
mov
lods
jbe
int
push
jle
neg
push
dec
out
cmp
adc
inc
add
mov
jmp
loope
icebp
inc
mov
inc
mov
fsts
mov
nop
jmp
mov
and
repz
jae
int
in
add
ret
aad
push
in
and
rolb
out
fbld
inc
out
daa
test
int
daa
pop
imul
pusha
aaa
pop
sbb
mov
dec
inc
mov
ljmp
dec
xlat
je
xchg
fcomps
cld
mov
jecxz
push
xor
loope
adc
daa
in
push
in
lods
fwait
lea
sub
sub
das
and
cmp
adc
and
orl
cmp
xor
push
adc
sbb
in
shlb
add
in
cs
mov
pushf
enter
arpl
push
movsl
xor
insb
shlb
push
mov
loop
pop
jmp
cld
mov
add
test
movsb
pop
mov
sbb
dec
enter
loopne
cmp
aaa
clc
mov
sub
dec
scas
and
mov
mov
and
test
in
pop
jae
mov
imul
pop
insl
jb
in
mov
data16
add
stos
mov
push
aas
xor
mov
fstpl
ljmp
loope
mov
add
pop
loopne
sbb
icebp
add
sub
cmp
mov
push
fs
push
lret
test
shlb
xchg
or
enter
out
jmp
add
xchg
sets
or
mov
daa
inc
dec
test
pop
mov
xchg
sbb
or
or
stos
jae
in
int3
aam
mov
ds
hlt
pop
jae
lea
loopne
mov
aad
cmc
or
rorb
sahf
jp
cwtl
pop
scas
xchg
fisttpll
jge
and
push
jnp
rcrb
shlb
cld
dec
mov
xchg
sbb
xchg
notb
sahf
loop
rorb
or
cmpsb
andb
jbe
je
insl
lahf
add
int
pushf
test
xchg
sub
sbb
orl
iret
push
std
jb
push
jp
sub
in
fnsave
std
jo
dec
int3
adc
mov
or
ret
mov
pop
arpl
dec
sbb
cmp
ret
scas
mov
lahf
dec
pop
jge
push
and
xor
mov
fdivs
cmovp
jge
aas
or
decb
outsl
inc
and
movsb
or
ss
addb
aaa
pop
loopne
cmp
xchg
adcl
incb
sub
ds
sbb
bound
bound
fwait
aam
cmp
pop
aas
pop
inc
mov
inc
jns
xchg
cli
or
fistpll
mov
es
mov
inc
mov
xchg
pop
std
repnz
out
xchg
add
or
xchg
sti
mov
push
xchg
out
mov
ret
cwtl
pop
sub
or
lret
rcrb
pushf
mov
std
mov
inc
popf
dec
jl
mov
xor
add
cmp
int
leave
sub
into
scas
dec
dec
mov
dec
jl
imul
mov
push
bnd
dec
or
jno
andl
jne
jle
rorb
mov
xchg
and
sub
xchg
xchg
lret
add
mov
sbb
xchg
and
cmpsl
pushl
orb
adc
push
lods
nop
inc
flds
aam
pushf
mov
popf
and
call
int3
in
pushf
fdivs
scas
push
test
xor
xchg
mov
cmp
iret
jmp
sub
inc
inc
xchg
movsl
xorb
and
mov
js
sbb
call
imull
lret
lcall
mov
jns
sbb
fists
insl
sub
sbb
fwait
mov
xchg
cmp
mov
and
aad
sar
rol
or
lcall
popa
jb
cmp
js
adc
adc
mov
xchg
stc
fs
shll
jbe
lcall
mov
pop
or
insl
notl
jno
loope
xchg
popa
mov
in
dec
dec
xor
shufps
inc
inc
fidivl
stos
lods
lock
fsub
bound
test
pop
mov
ja
mov
repnz
push
data16
idivb
dec
gs
push
outsl
sub
fisttps
xchg
inc
adc
cmpsl
jmp
sbb
pop
mov
push
cmc
arpl
pop
fbld
pop
or
out
movsb
mov
test
mov
jnp
lret
call
jge
dec
mov
mov
mov
xor
aaa
aam
inc
test
pop
test
mov
pushf
jae
or
jne
cmc
clc
pop
sub
xlat
or
jl
ds
out
scas
loopne
mov
std
imul
movswl
in
dec
inc
popa
adc
xchg
inc
insb
cli
in
mov
fucomip
push
mov
arpl
sti
rcrl
imul
arpl
jnp
adc
jns
rorl
orb
or
imul
adc
and
push
jns
adc
lods
int3
imul
push
test
js
add
pusha
aad
icebp
outsb
dec
out
adc
ljmp
and
pop
je
or
dec
cmp
xor
loopne
popf
jb
loop
ffreep
lods
test
roll
push
fwait
in
xchg
icebp
or
add
ficoms
add
inc
push
lods
push
adc
ficomps
inc
add
push
das
cmp
add
in
cmp
pushl
jle
adc
cs
and
jno
push
cmpsb
cltd
shrl
leave
jl
das
dec
jl
sub
dec
rclb
out
les
scas
jo
mov
inc
out
xor
mov
into
xchg
add
movsb
jp
pop
sub
sbb
stc
cmpsb
xchg
pop
xor
lcall
cltd
xchg
pop
sub
xchg
pop
aad
jecxz
imull
mov
mov
insb
push
cs
inc
popa
xchg
test
mov
and
adc
pop
lods
xor
shl
inc
jge
ljmp
popa
int
sub
jg
and
xchg
dec
xchg
mov
cwtl
and
out
xor
call
push
push
in
imul
inc
jl
inc
mov
mov
shrl
fcomps
and
out
lods
in
das
je
pop
gs
or
pop
loop
repnz
mov
jbe
mov
add
pop
in
jecxz
leave
cmpsl
imul
add
xchg
cmp
inc
sub
sbb
aam
pop
lea
mov
inc
fistpll
cmpl
mov
cs
pop
es
stc
repnz
push
std
mov
hlt
inc
sub
push
mov
in
mov
test
sbb
push
xchg
scas
lea
cmp
pusha
jnp
movsl
dec
jae
xchg
dec
sahf
lods
inc
mov
ljmp
mov
and
int
jne
cmpsb
mov
lret
fwait
pop
enter
lcall
orb
mov
icebp
int
pop
insb
iret
aam
stos
push
jecxz
mov
inc
pop
aam
mov
push
push
ja
ror
add
out
mov
pop
pop
mov
stc
and
xchg
cmc
xchg
pop
cwtl
add
mov
sub
or
or
andb
xchg
push
jp
pop
mov
mov
inc
mov
repz
fnstenv
mov
pusha
push
insl
pop
adc
or
mull
dec
push
sub
lock
xchg
iret
push
pusha
bound
data16
leave
fistps
cmp
push
mov
rol
mov
adc
xor
rcll
out
cmp
stc
data16
sub
push
loop
shll
aam
sahf
add
cmpsb
aaa
dec
mov
push
inc
push
and
leave
into
cld
mov
add
jno
aad
je
push
pop
icebp
jl
or
call
test
pop
push
push
xor
xchg
lods
fldcw
or
or
sbb
sbb
sarl
pop
cld
nop
sbb
or
mov
mov
or
and
outsb
jge
mov
fcmovbe
movsl
cmp
jmp
jl
push
mov
jbe
pop
pop
push
mov
xor
add
popf
pop
inc
outsl
enter
pop
jg
mov
mov
fsubs
imull
pop
fildl
cmp
mov
das
and
adc
int
call
loop
loope
mov
clc
xchg
cs
and
jge
xor
push
mov
div
xchg
insb
cmc
add
cmc
aam
into
fidivrs
mov
shr
into
arpl
mov
push
fisubs
je
cmp
push
xchg
repnz
push
loope
sub
add
dec
push
pop
add
mov
adc
shlb
lock
jge
or
test
jl
enter
in
jb
andb
fistpll
lahf
std
lods
jp
enter
xchg
fsubrl
push
push
push
mov
shll
pop
data16
lret
test
and
xchg
push
fsubp
pop
jecxz
leave
mov
in
fisttpll
add
cmc
cwtl
push
jmp
in
sub
fmuls
scas
sbb
mov
push
adc
jmp
push
adc
je
jae
popa
push
jbe
mov
dec
aad
xlat
or
inc
rcl
cld
xor
icebp
inc
and
jle
mov
into
mov
in
dec
fstpl
mov
xchg
subb
jp
popf
andl
fbstp
xlat
fildll
cwtl
popl
mov
push
fldcw
dec
inc
adcl
fsubs
mov
inc
loopne
push
mov
in
push
xor
sbb
sub
mov
mov
pop
pushf
dec
push
mov
loope
mov
lahf
mov
fs
sub
lods
lret
ror
xchg
xchg
cwtl
orl
jmp
jnp
pop
sbb
jno
inc
subb
fwait
cmp
mov
xor
adc
pushf
mov
lds
mov
jns
leave
call
mov
cld
mov
stc
lock
repnz
jae
and
aas
sti
call
nop
in
inc
cmp
jnp
cli
mulb
pop
dec
fisubl
es
jnp
adc
jb
push
dec
cmpl
pop
in
add
das
and
cmc
lods
repnz
mov
es
and
repnz
cmp
fistpll
dec
outsb
lods
lds
cmp
adc
aas
rorl
jg
mov
in
sbb
ja
fiadds
and
outsl
jno
xchg
pop
pushf
je
add
sysenter
stc
jg
rolb
cmpsl
xor
cmp
daa
and
dec
les
scas
sub
cs
mov
lea
aas
mov
sub
dec
add
fcmovne
and
inc
subb
ret
push
repnz
sbb
pop
movsb
leave
cmp
xlat
push
push
mov
stc
and
mov
jge
push
push
out
jnp
call
mov
pop
lock
xchg
jp
sub
andl
mov
mov
and
aaa
mov
je
and
sub
mov
dec
adc
inc
dec
or
push
addb
mov
lods
fwait
hlt
jle
mov
fs
clc
or
cmp
xor
icebp
inc
dec
and
das
aas
loopne
clc
mov
andl
arpl
mov
std
pop
jecxz
fistl
sbb
push
sti
divl
jle
mov
test
call
bound
inc
cmc
mov
push
iret
jl
sahf
jecxz
out
pop
mov
fsub
push
add
test
stos
adcb
push
jmp
sbb
adc
rep
add
bound
bound
popf
xor
outsl
gs
cmp
mov
es
cli
xlat
pop
inc
ficomps
cs
cmc
mov
mov
cwtl
push
popf
ds
loope
mov
pushf
push
dec
in
das
xchg
pop
jmp
and
xchg
mov
sbb
lret
in
and
mov
ret
push
push
loop
sahf
scas
push
or
pushf
inc
into
xchg
lret
insl
test
loop
adcl
add
clc
xchg
add
hlt
popa
sub
test
shll
fsubr
outsb
lock
xlat
jne
roll
mov
movsl
or
mov
sub
and
add
dec
push
aam
imul
and
jmp
dec
stos
mov
cmp
pop
xrelease
mov
fists
sbbb
pop
testb
mov
arpl
lret
cmp
rcr
mov
or
and
jne
inc
sub
mov
fisubl
xchg
dec
loope
xchg
sub
push
add
fidivl
mov
mov
cwtl
xor
adc
imul
or
repz
mov
and
sbb
push
push
mov
mov
jne
ret
lock
loopne
mov
dec
inc
in
xor
cld
mov
cltd
shll
test
aaa
in
dec
or
mov
push
int3
movsl
movsl
and
mov
test
pusha
ds
rclb
sbb
mov
sub
shll
fldln2
jp
rclb
pop
enter
outsb
std
shlb
imul
nop
mov
rcrb
mov
sub
mov
mov
cmp
loopne
int3
cwtl
fidivrs
hlt
stc
push
sub
dec
call
les
xchg
push
xchg
inc
mov
jo
mov
or
int
adc
lcall
sbb
sarb
jns
shl
mov
push
add
stos
push
call
xor
shll
je
fisttpll
lret
sbb
and
out
jg
fiadds
dec
pop
push
push
out
push
mov
hlt
andl
inc
mov
push
lcall
sub
mov
fldenv
jb
mov
and
lods
rclb
je
rcl
xor
scas
rcr
sub
dec
pop
test
pusha
nopl
in
push
cltd
fists
push
hlt
inc
bound
fldenv
pop
mov
lods
push
xor
sub
out
clc
fnstenv
aas
or
cmpsl
popf
js
sbb
mov
in
les
xor
daa
cltd
mov
in
dec
addr16
subb
dec
mov
ret
ljmp
mov
jg
xor
jecxz
adc
cmp
ja
sbb
aaa
jne
arpl
repnz
mov
mov
lock
sbb
pop
mov
rcrl
dec
ffree
ds
cmpsb
jae
mov
shll
inc
jle
jnp
sbb
in
popa
sarl
enter
scas
mov
mov
adc
rcr
xor
cld
in
data16
cwtl
js
sti
mov
or
mov
mov
mov
dec
dec
rcl
mov
xchg
mov
dec
aaa
xchg
outsb
div
pushf
push
scas
out
pop
mov
mov
adc
enter
pushf
addr16
into
and
hlt
vshufpd
fwait
clc
insb
xor
popf
enter
dec
leave
mov
sbb
push
add
push
repnz
int3
hlt
enter
xor
add
cmp
sarb
push
mov
in
jne
and
mov
outsb
es
outsb
rorb
adc
pop
fists
fisttpll
inc
xacquire
sar
ror
test
int3
push
or
fisubrl
ds
stc
cmp
sub
mov
add
jnp
add
mov
sbb
cmc
inc
aaa
add
stos
or
ret
inc
leave
mov
xchg
jmp
cltd
jnp
jge
push
add
mov
mov
cmp
mov
dec
dec
mov
mov
repnz
in
je
mov
out
imul
out
mov
add
gs
sub
xor
cltd
mov
push
xor
movsl
lds
xchg
pop
mov
xchg
mov
nop
push
lahf
mov
mov
sbb
push
mov
cmp
jmp
jmp
lds
scas
cmc
or
jmp
mov
imul
push
adc
sub
dec
push
pop
cmp
rcrl
call
fdivrs
loopne
pop
mov
out
popa
mov
inc
imul
test
cli
repz
sub
add
or
adc
sub
cmp
xor
push
ret
lds
inc
mov
add
sbb
add
sbb
cld
dec
ficoms
lahf
sub
mov
mov
sub
insb
cld
test
out
push
jno
out
xchg
sahf
mov
clc
lods
test
mov
push
cs
ds
mov
int
fs
enter
bound
arpl
arpl
enter
fldenv
push
and
iret
adc
jp
xchg
xchg
cmpsb
stos
pop
mov
stos
xor
sbb
int3
add
dec
popa
into
notb
mov
fwait
and
xchg
nop
popf
inc
sarl
mov
add
addr16
sbb
sbb
or
loop
sbb
outsb
lock
out
xor
add
or
in
jmp
dec
xchg
insl
orl
out
xchg
jne
mov
sbb
pop
add
les
mov
sbb
movsb
mov
leave
mov
or
adcl
sbb
incb
cld
jmp
cmpsb
mov
xor
iret
dec
lahf
pop
ja
cwtl
repnz
ds
lods
mov
ret
cmp
rcrl
jne
std
xor
mov
aam
flds
stos
cmpsl
fsubs
cmpsl
cmp
adc
jmp
dec
cld
scas
add
rcl
in
in
repz
sub
push
or
add
stos
add
pop
fistpll
cmp
enter
stos
cmp
xchg
scas
pop
and
push
test
icebp
xor
ja
pop
out
mov
dec
insb
inc
std
xor
in
pusha
and
repz
cwtl
je
rorb
push
dec
xchg
ficomps
cmp
or
mov
lret
frstor
in
mov
ret
inc
dec
std
enter
jecxz
enter
push
notb
outsb
xor
jl
into
repz
pushf
push
adc
roll
pop
push
sbb
mov
or
jns
mov
jmp
repnz
popf
mov
xchg
je
iret
mov
fmuls
repnz
or
cs
pop
jne
push
add
pop
cmovno
adc
sbb
sbb
mov
xchg
cmpsl
sub
add
orl
movsb
les
push
xchg
cmpsb
hlt
mov
mov
out
shrb
sahf
push
mov
repnz
or
pop
bound
cld
adc
adcb
enter
pop
mov
xor
mov
dec
jp
es
mov
lcall
xor
add
adc
adc
push
sti
les
adc
mov
mov
jae
test
dec
icebp
adc
outsl
stos
sub
lock
repnz
adc
fcoms
cli
cld
fsts
out
rorb
daa
fldl
jae
sbb
jg
mov
xor
xchg
lods
jmp
mov
ret
inc
push
push
mov
pushf
sub
push
nop
and
add
mov
imul
mov
out
loope
push
cmp
fidivrl
sbbl
adc
cs
inc
cmp
aas
lods
pop
inc
push
push
cmc
jae
cmp
pop
mov
mov
jmp
sbb
call
pop
dec
add
adc
push
aaa
sub
ret
fcoms
shrl
dec
idivl
xchg
lea
sub
fdivr
push
rolb
xchg
push
jno
or
sbb
or
and
int
sub
dec
clc
push
test
jecxz
inc
or
aaa
push
adcb
aas
mov
or
loope
sub
sahf
pop
cltd
jl
mov
cmp
fwait
pop
test
jbe
or
mov
cmpsl
mov
enter
xchg
sbb
sub
xchg
inc
pop
shrb
dec
movsb
outsb
cmp
push
sti
pushf
std
jae
mov
pop
jge
test
and
inc
dec
lcall
mov
int3
and
pop
popa
pop
jge
lods
dec
mov
push
std
in
adc
ljmp
arpl
cwtl
push
subl
fsubl
outsb
loop
aas
push
fsts
jno
dec
shrb
mov
ds
cli
pop
leave
popa
call
sub
pop
mov
out
pop
mov
loop
sbb
addr16
jb
out
xor
out
subl
dec
dec
data16
jo
inc
orb
fst
xor
inc
add
ret
and
daa
sbb
mov
dec
xchg
xor
ja
popa
add
adc
jb
sbb
dec
mov
das
dec
pop
lret
in
in
aas
movsb
sub
pop
fwait
enter
jle
clc
cmp
out
scas
adcl
repz
sbb
jns
jg
repz
lods
sbb
add
ds
xor
push
mov
dec
das
vphaddubd
jg
mov
or
jp
pop
xchg
jae
out
dec
dec
sub
data16
pop
scas
jl
loopne
mov
stc
adc
popa
add
imul
mov
fwait
gs
inc
arpl
imul
push
int
rcrb
cmpsl
cmpsb
pop
jmp
sub
insl
sub
jnp
scas
mov
adc
cli
roll
testb
jbe
in
stos
in
fstpt
scas
or
lcall
mov
es
fbstp
insl
xchg
lds
inc
lds
mov
stc
mov
pushf
push
adc
roll
mov
icebp
jo
and
mov
inc
inc
and
push
negb
jnp
fcoms
push
sub
stos
jb
ret
pop
inc
fsubrl
fdivl
dec
mov
repz
add
dec
aas
xchg
pop
mov
jns
in
outsb
mov
mov
lcall
test
xor
fiadds
mov
insl
cmp
or
or
sbb
mov
ret
loopne
inc
xchg
dec
subb
dec
mov
or
js
mov
mov
pop
jge
dec
shll
mov
lods
fistpll
fsubrl
stos
pop
pop
mov
push
dec
aas
push
xchg
repz
scas
or
push
fldenv
test
xchg
dec
inc
orb
repnz
xor
or
add
mov
mov
outsb
mov
mov
mov
and
xchg
mov
xor
sbb
les
call
and
je
jle
inc
push
jae
jb,pn
lret
xchg
fstl
arpl
out
insl
add
movb
jecxz
cmp
jae
mov
pop
shll
sbb
xor
imul
adc
call
cmp
test
orb
fs
fcoml
adc
pop
mov
lea
pushf
and
push
icebp
ficomps
mov
or
outsl
pop
mov
sbb
pop
leave
push
aad
lods
cmpsl
mov
mov
incb
and
test
push
lock
fbstp
dec
in
call
rcrl
mov
mov
andl
or
sbbb
ret
adc
clc
mov
inc
and
ja
int3
int
xor
bound
iret
cmp
push
stc
enter
jg
mov
fs
aad
cwtl
mov
in
fsubs
in
fdivrs
ret
dec
roll
adc
sbbl
es
int3
loope
cmpl
les
mov
pop
mov
and
mov
xchg
idiv
dec
inc
mov
bound
loopne
cmp
jl
dec
push
cli
pushf
and
push
cmpsb
test
mov
pop
sub
in
pop
hlt
xor
loopne
mov
inc
outsl
cs
shlb
jno
pusha
pop
js
sub
pushf
lods
xchg
ljmp
jle
aas
jecxz
adc
mov
xchg
loopne
das
outsb
dec
notb
xor
adc
inc
and
sbb
test
xchg
sahf
push
inc
mov
cmp
jnp
jp
rorb
lahf
dec
mov
out
in
mov
cwtl
xchg
sub
push
cs
stos
adc
lods
mov
xlat
push
cld
arpl
loope
sbb
lea
push
sub
dec
jp
jno
cmp
jmp
add
bound
push
int3
and
cmp
sbb
repnz
adc
sub
shll
cmp
lea
cmp
mov
sub
mov
test
cmp
sti
dec
insl
nop
imul
mov
cmp
cmpsl
xor
sbb
cmp
andb
push
xor
push
scas
sbb
dec
out
mov
jg
mov
add
lea
and
dec
xchg
xchg
lds
clc
in
les
les
mov
and
loope
and
cltd
lcall
xor
out
loope
fwait
outsl
xchg
fwait
int
inc
inc
aad
shrl
inc
lret
leave
pop
in
in
push
outsb
in
aad
and
ljmp
out
add
stc
push
mov
push
enter
test
mov
es
add
adc
pop
in
fistl
or
pusha
jle
lods
in
insl
dec
pop
gs
iret
sub
lret
sbb
shrb
ja
icebp
xchg
rorl
xor
mov
das
jns
cmp
sub
ljmp
fmull
movsl
loop
cltd
jle
repz
hlt
addr16
outsl
push
imul
cmp
xlat
into
cmp
xor
add
sti
push
pop
sub
and
adc
jle
outsl
enter
fsubrs
rolb
subb
jecxz
scas
movsl
cmp
test
xlat
pop
inc
outsb
fs
and
and
xor
data16
pushf
mulb
mov
xchg
pop
aam
add
xchg
pop
sbb
subb
das
int
sub
mov
add
mov
lret
outsl
cmpsb
mov
popf
inc
dec
fwait
mov
ret
push
pop
push
jle
cmp
mov
fwait
les
push
cmp
sub
dec
or
fstpl
push
xchg
mov
dec
jle
pop
int3
jne
out
fcoml
dec
sbb
add
lret
adc
push
sbb
or
sub
sub
ret
lcall
mov
aaa
cmc
bound
cld
lahf
add
add
repnz
mov
push
xor
popa
cmp
sti
push
xchg
or
or
repnz
mov
jno
pop
or
add
xor
sti
frstor
mov
mov
and
je
jae
mov
inc
add
xchg
stc
mov
mov
in
imul
int3
inc
mov
test
sub
fs
sbb
add
leave
mov
cli
or
mov
pop
shrl
test
or
xlat
in
mov
adc
fs
rcll
das
int3
roll
pusha
pop
stos
ficoml
inc
divps
hlt
jp
adc
pop
cmp
sbb
add
and
std
jecxz
cmc
fs
jne
sbb
mov
lret
mov
loop
sub
dec
jnp
out
mov
in
dec
or
in
daa
fwait
outsb
lds
sbb
and
mov
push
lahf
push
jne
test
clc
push
xchg
push
jg
bswap
fwait
into
in
mov
sbb
adc
fsubs
in
repnz
outsb
or
mov
mov
pfsub
xchg
in
pop
mov
sbb
out
cmpb
cmp
mov
and
sbb
adc
ja
aad
push
xor
adc
aam
xor
test
pop
adc
mov
ret
lret
test
rcrb
mov
jnp
or
dec
scas
jmp
mov
sbb
rcll
sub
xor
pop
jg
adc
stc
shlb
jo
dec
loopne
xchg
push
jno
jp
adc
jmp
ret
mov
insl
push
aad
xchg
arpl
add
dec
jae
and
or
pop
addr16
ja
rorb
mov
lahf
cmp
sbb
cmp
push
ljmp
dec
sbb
ror
movsl
int3
mov
fwait
push
fisttpl
rcrl
pop
sbb
mov
into
dec
or
ror
and
jge
jl
push
loopne
cmp
xchg
pop
out
inc
popf
push
out
dec
add
push
pop
inc
pushf
js
sar
pop
xor
enter
jp
pop
and
ret
data16
aaa
mov
call
in
xor
shl
pop
outsb
sub
sbb
loop
or
mov
jmp
cmc
cs
sbb
fmull
pusha
mov
outsl
mov
and
icebp
mov
pusha
xor
js
jns
pop
cltd
xchg
add
mov
add
mov
out
hlt
mov
fs
sub
jp
add
push
adc
cmpsl
cmp
dec
sbb
xorl
jecxz
mov
sarl
bound
xchg
test
daa
push
ds
imul
inc
loopne
adc
xchg
push
sbb
push
jecxz
push
int3
outsb
negl
mov
je
mov
or
cmp
mov
mov
xor
inc
mov
xchg
cli
into
jmp
jns
testl
jne
lds
pop
pop
push
jbe
mov
stos
jae
sub
push
popf
cmp
int3
pop
pop
push
aas
add
inc
test
sarb
mov
sarb
xchg
js
fs
jnp
pop
out
arpl
dec
pop
cmp
insb
and
cld
pop
test
cli
add
mov
cmp
test
cltd
jge
dec
add
mov
in
pop
clc
rorl
jmp
cwtl
adc
sbb
add
jmp
inc
xchg
mov
mov
sub
iret
pop
xchg
test
mov
add
jmp
adc
pop
popa
dec
fsubrl
mov
rclb
jnp
fxch
and
adc
cmp
fucomi
sbb
lds
fsubrl
or
data16
scas
cld
xor
and
push
pop
aas
mov
lods
popa
jns
mov
jge
fdiv
pop
jb
inc
adc
adc
fsts
or
add
mov
lret
test
mov
loop
leave
dec
pop
data16
dec
sbb
mov
dec
adc
and
jbe
rcrb
addl
imul
into
dec
xlat
aad
dec
push
outsb
dec
and
xor
cmpsb
ja
shll
loope
xlat
movsl
jp
mov
lods
cmc
add
and
add
xchg
hlt
add
inc
sub
xor
sub
loop
mov
lds
stos
jo
ljmp
ret
adc
divl
mov
pop
sbb
roll
push
mov
jecxz
or
decb
mov
in
aaa
sbb
ret
or
mov
inc
xchg
outsb
or
test
fisubrl
push
scas
push
jnp
imul
loope
iretw
lcall
fldt
cmpsl
cmp
pop
mov
mov
and
in
fcompl
mov
pop
insl
jg
lods
jbe
cli
cmp
adc
pop
mov
mov
xor
les
test
fsubrs
rolb
sub
and
in
adc
in
xchg
iret
outsb
lods
cmp
aaa
scas
dec
pusha
or
mov
imul
push
loope
nop
sub
jmp
test
and
outsl
mov
inc
lock
xor
out
sbb
sub
shll
xor
rcrb
jecxz
dec
addl
mov
sub
add
xchg
inc
daa
cmpsb
mov
outsb
xlat
add
ret
sub
pop
lds
mov
xchg
outsl
sbb
or
addr16
movsb
cmp
pop
nop
xor
pop
jb
push
out
pop
pop
dec
xchg
aad
sahf
mov
mov
cltd
mov
sbb
cwtl
jbe
stc
out
mov
pop
dec
xchg
mov
mov
sub
enter
insb
pusha
cmp
pop
jmp
xchg
mov
repz
ffree
scas
call
enter
xor
ds
inc
outsb
iret
mov
jmp
xor
cwtl
movsl
sarl
sub
cmp
dec
pop
out
scas
aas
jno
lahf
mov
or
pop
push
addr16
fldt
pushf
or
cmpsl
jmp
and
dec
xchg
lret
and
sub
mov
fisttpll
jno
mov
iret
int3
out
out
xchg
pop
and
cwtl
scas
inc
rcrl
movsb
scas
jne
clc
stos
mov
jae
jl
and
pop
in
cmp
mov
or
mov
and
jnp
rclb
inc
add
in
sar
enter
pop
pop
outsl
pusha
and
xchg
dec
mov
pop
test
or
mov
int
popf
or
into
shlb
sub
xchg
push
test
cli
fcomp
pop
sti
enter
arpl
adc
and
jmp
out
lock
mov
adc
int3
add
push
mov
cltd
or
lods
push
lahf
cmc
or
sbbb
dec
jo
pop
cmpsl
out
adc
outsb
jmp
and
mov
gs
push
cs
out
aas
adc
es
dec
xchg
cmp
stos
inc
jge
mov
pop
stos
gs
sbb
mov
jne
aad
aas
aas
movsl
pop
jbe
fistpll
dec
imul
push
push
mov
xorb
aaa
mov
xor
sti
outsb
pop
mov
iret
mov
sar
cmp
jo
shlb
cmc
cltd
pop
cld
iret
hlt
inc
ror
xor
mov
notb
pop
fdivl
cmp
mov
fdivl
push
pop
cmp
mov
push
int
push
xor
insb
and
scas
mov
aas
dec
aam
mov
cwtl
pop
out
push
jbe
mov
jb
cmp
sub
adc
cmpb
and
cmpsb
flds
mov
add
lret
push
mov
and
in
loope
in
add
data16
mov
mov
sub
mov
mov
cmpsb
cs
cltd
gs
add
sbb
xor
repz
pop
cmp
cmpsl
push
leave
sahf
mov
sub
dec
jl
mov
popa
test
daa
stc
lret
xor
dec
push
inc
sti
cs
jl
dec
cmp
popa
mov
popa
add
jp
mov
adc
iret
or
and
std
dec
sbb
out
js
ljmp
mov
mov
push
add
orb
sti
inc
jo
aas
add
sbb
mov
lock
in
push
andl
cmp
popf
jmp
cmp
lcall
inc
and
dec
addr16
and
mov
cmp
dec
out
add
sub
pop
fs
arpl
push
cwtl
lods
jb
cld
push
push
mov
lods
and
ret
or
jne
fcompl
rclb
push
test
lea
repnz
ror
inc
mov
aaa
fdivrs
inc
test
push
inc
xor
out
inc
push
dec
call
or
mov
notb
movsb
orl
sub
das
push
sbb
xchg
sub
scas
ljmp
jmp
cmp
das
cmc
sti
jae
sub
mov
ljmp
ja
add
mov
add
out
fsubs
cmpsl
sbb
dec
pop
and
in
inc
hlt
xbegin
out
test
lcall
mov
jae
sti
or
add
cmc
pop
add
in
cwtl
test
xchg
jp
ds
xchg
cmc
shr
pushf
pop
leave
inc
mov
sbb
icebp
shr
sahf
les
inc
stc
fdivrs
bnd
test
cmp
out
popf
xchg
or
add
push
jg
scas
lods
dec
xor
inc
lcall
xor
shll
pop
inc
push
push
bound
jne
push
fsubrl
mov
stc
addr16
out
inc
sti
into
inc
xchg
pop
daa
lret
push
rcrb
ret
ljmp
cmp
pusha
ljmp
add
shlb
dec
clc
rorb
out
push
stos
outsl
sub
pop
sbb
mov
fcom
inc
lret
out
repz
push
jno
inc
sub
xor
ret
mov
cld
pop
mov
jns
mov
jo
push
xor
and
cmp
and
subl
test
dec
addr16
imul
or
repz
cmpsl
push
les
pop
imull
dec
xchg
sub
and
pop
add
add
cmp
push
shlb
aas
sub
movsl
hlt
ss
and
aam
gs
adc
jno
ret
in
push
dec
jnp
call
repz
sbbl
test
add
ret
add
lret
cmp
cmp
or
xchg
arpl
popf
jle
cmc
xlat
repnz
repz
mov
push
jno
xchg
mov
ret
jae
add
mov
call
adc
cld
inc
push
pusha
daa
cmp
xlat
sbb
or
mov
cli
icebp
mov
arpl
jbe
add
push
mov
std
cs
push
sti
loop
outsl
dec
pop
repz
mov
adc
rcrb
cs
push
or
mov
xchg
cmpb
jecxz
lret
hlt
out
push
cmp
pop
loopne
sahf
jb
je
mov
out
lea
fsubr
rorb
inc
push
mov
rcl
adc
in
mov
and
jge
sbb
add
pop
mov
int
jo
lods
mov
out
imulb
or
int
out
imul
daa
push
jnp
adc
cmp
pop
dec
add
scas
mov
adc
add
fidivs
add
out
cmp
dec
int
adc
stos
and
ret
cmc
push
adc
mov
shrl
jmp
push
popf
aaa
xchg
imul
jae
xor
sbb
cltd
orb
jne
sbb
mov
push
out
lahf
fsubl
dec
loop
sbb
fcoms
mov
pop
xlat
cmp
xchg
sub
cmpsb
enter
sbb
adc
cmpsl
dec
ret
sub
cmp
out
push
test
jecxz
mov
jno
pop
mov
push
adc
leave
sub
sbb
rorl
repz
iret
sub
cwtl
xor
adc
push
ror
into
mov
and
inc
cltd
adc
imul
dec
and
stos
sbb
sbb
or
popf
rcll
into
or
xchg
and
repnz
pop
stc
lods
push
lods
dec
jge
push
lret
sti
pusha
xor
cmpsb
sbb
test
adc
adc
jmp
out
jle
out
jge
pop
mov
rcr
icebp
fs
in
cmp
icebp
dec
inc
xchg
dec
pop
cmc
test
out
in
fidivrs
push
pop
mov
les
scas
mov
mov
lret
jmp
cmc
adc
shlb
ret
scas
je
or
shll
inc
lods
mov
cmp
jl
or
inc
mov
push
daa
dec
mov
pop
sarb
mov
fistps
rolw
scas
and
dec
jne
out
mov
adcb
loop
xchg
fcoms
sahf
lret
fs
push
sub
divl
jno
dec
fcmovnu
lea
inc
fidivrl
push
inc
aaa
ror
mov
out
data16
mov
mov
and
mov
ret
aad
add
pushf
and
out
aam
and
jmp
insb
add
fstps
dec
fs
ds
stos
hlt
hlt
negl
mov
xchg
mov
dec
sbb
ret
jecxz
test
movsl
bnd
sub
fsubrs
out
sub
gs
mov
push
adc
add
adc
nop
cld
add
shll
sahf
xor
mov
stos
inc
vhaddps
mov
scas
adc
cld
xchg
sti
outsl
sub
xchg
jmp
add
sub
sub
push
add
movsl
aaa
pop
pop
mov
mov
sbb
mov
subl
adc
and
or
inc
cmpsb
jns
fs
add
push
or
lret
push
jnp
popf
xor
decb
scas
jecxz
mov
neg
mov
stos
aad
jp
ds
dec
popf
loope
mov
inc
xor
popa
xchg
cmp
mov
xlat
out
and
xchg
pop
sbb
pusha
xlat
rolb
and
repnz
mov
sti
sbb
testb
mov
jne
pop
pop
das
aam
or
js
mov
adc
fwait
add
dec
inc
sub
inc
pop
sti
ljmp
xor
sub
cltd
xchg
test
aam
outsl
mov
and
xor
mov
dec
inc
add
es
and
insb
fwait
ret
js
addl
push
jge
pop
movsl
out
fucomi
cmp
lods
jle
inc
arpl
jle
or
jnp
popf
pop
lcall
fwait
jge
pop
out
mov
cli
mov
stc
add
lahf
and
mov
popa
out
loop
out
mov
or
out
cmpb
push
mov
push
mov
and
cwtl
add
xchg
dec
xchg
push
xor
jle
ret
in
and
dec
xor
out
lahf
icebp
into
add
dec
mov
or
aas
repnz
sbb
call
sbbl
push
xchg
sbb
sahf
mov
outsl
jae
aad
sahf
dec
nop
das
sbb
push
mov
xchg
je
push
and
ja
mov
scas
out
inc
mov
les
inc
cmpsl
adc
sahf
lea
fchs
in
pop
or
push
pop
mov
fsubrs
mov
outsb
inc
xchg
mov
adc
mulb
call
sub
xor
and
or
pop
mov
cs
cmp
jae
sub
mov
xlat
bound
pop
scas
sahf
idivl
shll
outsb
jge
adc
lea
nop
dec
dec
int
dec
dec
mov
imul
inc
xchg
bound
hlt
add
or
sub
pop
mov
lret
dec
ret
push
pop
push
cs
ja
cmp
and
mov
jle
call
jo
pop
jb
push
cs
add
jb
xor
inc
insl
fldl
rcl
insb
mov
cmpsb
ja
xor
mov
fs
inc
stc
jg
mov
cld
mov
jns
xchg
dec
icebp
idiv
and
pop
mov
pop
aaa
flds
cltd
xor
flds
insl
add
in
mov
enter
insl
or
je
test
add
dec
stos
cmpsl
push
in
dec
sub
stos
pop
clc
popf
xorb
dec
or
xlat
jne
dec
ljmp
aad
aas
rclb
ja
data16
cwtl
cli
or
jge
jae
in
inc
ficomps
jb
dec
xchg
push
outsb
adc
sarl
not
push
stos
in
rcrl
popa
sub
sub
mov
fwait
push
repnz
lret
or
and
add
inc
jecxz
dec
jno
int3
dec
imul
pushf
push
testb
pop
cmp
mov
jbe
iret
lods
pusha
and
add
sub
jnp
and
je
iret
adc
adc
mov
xchg
outsl
stos
mov
and
mov
stc
out
jbe
dec
mov
loope
rdtsc
cmc
cmp
notb
arpl
ror
notl
test
fldcw
testb
jge
inc
mov
lret
iret
push
inc
in
outsb
dec
push
gs
pop
inc
je
std
inc
xchg
loope
fwait
add
test
test
ss
xor
ss
inc
clc
add
mov
push
jae
fisttpll
xchg
sbb
cwtl
adc
out
or
mov
xor
mov
ds
imul
jmp
add
lods
jge
jecxz
push
xchg
xchg
pop
xor
ret
push
rcrb
dec
or
cmpb
mov
sub
daa
xor
or
mov
repnz
jg
push
push
add
dec
cmpsl
outsb
outsl
adc
roll
mov
xor
hlt
push
test
inc
or
fadds
movsb
mov
int3
addr16
lret
cmpsb
jno
mov
xchg
out
fsub
test
sarl
das
inc
in
movsl
push
push
pushf
add
arpl
das
dec
xlat
mov
lea
or
jb
idivl
inc
cwtl
push
add
movsl
sbb
jbe
cmp
test
cmp
xchg
js
aas
mov
orb
and
es
ljmp
push
or
jb
fwait
and
inc
and
and
push
dec
add
popf
pop
mov
std
sbb
out
les
mov
or
in
daa
inc
jmp
sub
ljmp
dec
add
fcmovnu
cmpsl
cmp
sbb
movsl
dec
loope
out
push
sbb
pop
call
insl
cmc
stc
xor
lahf
out
xor
add
lahf
or
lea
mov
out
or
arpl
jnp
mov
cli
out
fildl
jg
jno
pop
stos
cmp
insb
xchg
lcall
lahf
flds
pusha
cmp
inc
dec
aas
imulb
push
cmp
sbb
cld
or
sbb
int
data16
xchg
sbb
cmp
fs
pop
pop
loop
mov
hlt
pop
dec
pop
jae
cmp
sahf
das
mov
push
sub
jge
stc
jle
mov
mov
jl
fmuls
xchg
mov
push
jnp
and
outsl
mov
loope
popa
dec
jmp
xchg
into
clc
jnp
cld
adc
jo
ret
xorl
cmpl
jo
xor
jmp
jp
leave
jo
iret
pop
out
push
and
add
sbb
or
lds
clts
clc
outsl
cmc
outsl
stos
ret
fwait
and
scas
fsub
enter
jp
call
out
cmpsl
xor
iret
adc
scas
sbb
dec
loope
popa
out
mov
mov
lods
repz
icebp
inc
lahf
cli
xchg
stos
shlb
sub
fmuls
cmp
pop
pop
ljmp
xchg
fwait
sbb
pop
adc
cltd
std
mov
mov
movsl
sub
pop
lret
push
repz
incb
mov
andb
pop
pop
jp
push
in
or
pop
jmp
pop
imul
xchg
test
inc
out
cwtl
sub
cmpsl
mov
enter
ljmp
xor
and
scas
lret
lcall
cmc
lret
int3
mov
lock
or
mov
push
ja
jmp
mov
outsb
rcrb
fcomps
hlt
outsb
xchg
movsl
stc
jg
add
mov
mov
shr
shl
xchg
psrad
mov
mov
jb
jne
cmp
xchg
push
enter
lret
fldl
xchg
xlat
imul
mov
fdivrl
nop
inc
test
mov
int3
jbe
mov
je
adcl
das
subb
insb
iret
sub
mov
lret
pop
andb
lahf
mov
test
js
xor
divl
sub
cmpsl
cwtl
clc
negb
or
imul
ret
jbe
ljmp
aaa
repz
shl
sub
mov
js
push
gs
add
jae
lcall
push
out
lock
or
movsl
negb
ja
icebp
push
lahf
fwait
lahf
jnp
or
push
push
enter
ja
addr16
outsl
push
mov
aaa
icebp
adc
jge
iret
jge
jge
stos
jbe
xchg
inc
mov
popa
popf
ljmp
mov
jg
outsl
jle
sub
jge
fnsave
jnp
sub
mov
dec
mov
je
pop
xchg
push
mov
and
addr16
sbb
aaa
call
dec
mov
push
xor
ljmp
add
ja
daa
cmp
xchg
adc
push
int3
push
sbb
jo
fcomps
out
scas
push
les
ds
jmp
das
jne
push
jmp
jno
insb
je
inc
rorl
cld
push
addr16
push
xchg
xor
and
xchg
xor
int3
xor
xchg
es
out
or
ss
lret
or
dec
insb
wbinvd
ret
and
mov
lcall
cld
adc
cmp
sbb
xor
and
inc
cmpsl
dec
insb
je
and
mov
iret
loopne
pop
stc
sub
cmp
mov
repnz
add
lods
adc
in
push
ret
enter
xor
loop
push
mov
insb
push
jo
or
jmp
sbb
insb
jne
mov
sub
xor
xor
xor
inc
ficomps
jae
add
mov
repz
push
aas
imul
das
adc
in
in
jg
add
std
push
push
mov
aam
add
inc
cli
and
mov
mov
mov
push
pop
out
mov
mov
mov
push
and
or
jge
lods
fwait
ja
lds
ss
push
dec
xchg
pop
pop
sbb
sbb
adc
dec
push
daa
push
repnz
push
mov
rolb
repz
out
shl
sbb
adc
dec
pop
mov
imul
aas
dec
or
fmuls
aad
imul
dec
mov
fisubs
xor
test
ret
shlb
into
jge
fs
adc
repnz
mov
pop
out
adc
mov
dec
loopne
or
loope
mull
mov
push
scas
jae
pusha
fwait
lds
cltd
imul
and
mov
inc
int
add
pop
iret
fcomip
jmp
cmpsl
push
rcll
mov
shr
or
sbb
stos
int3
push
int3
xorb
repz
clc
aaa
loope
ror
lret
mov
shll
cmp
pop
jo
mov
stc
fldcw
cmpsl
repnz
sub
or
sub
jns
test
sbb
or
loopne
andb
xchg
mov
enter
lock
add
jg
nop
mov
sarl
leave
enter
pop
sub
and
filds
adcl
mov
xor
loope
in
andl
jmp
test
or
jb
ret
jecxz
and
jg
jmp
ror
shrl
sbb
add
testb
adc
or
sub
fldenv
inc
movsl
aas
mov
inc
dec
clc
pop
div
or
fcompp
inc
jecxz
pop
lcall
mov
sub
inc
xchg
fdivs
roll
jmp
cmpsb
repz
sti
jo
cltd
scas
movl
inc
in
pushf
stos
syscall
sbb
icebp
dec
dec
stos
jno
mov
add
dec
lock
and
dec
sbb
lods
xchg
ret
or
inc
mov
out
xchg
push
mov
scas
cmp
mov
pcmpeqb
lods
inc
scas
stos
push
xchg
push
in
outsl
data16
jne
lea
rorl
xchg
add
mov
roll
in
dec
sbb
stc
xchg
jle
dec
dec
jg
adc
add
or
es
ret
inc
imul
popa
filds
ljmp
data16
outsl
sub
push
stos
das
and
jnp
inc
rol
and
xor
lahf
adc
std
sarl
jne
adc
insl
and
pop
cmc
mov
cmp
leave
mov
lods
mov
jno
sbb
jne
cs
sahf
mov
jno
mov
int3
loopne
icebp
and
loopne
lea
pop
fpatan
mov
sub
fisubl
jp
rcrb
jno
cmp
and
test
dec
add
in
sti
inc
mov
fistl
shll
cmp
mov
fisubrl
hlt
outsb
mov
xchg
adc
jl
add
and
sbb
lahf
mov
xchg
cmpsl
pop
lds
fldt
jle
insb
ret
cmp
rorl
shll
cmp
lods
jge
sbb
lods
mov
lock
mov
xchg
pop
pop
sarl
scas
push
xchg
sbb
hlt
lods
xor
pop
mov
xor
rolb
cltd
pop
pop
mov
outsl
push
sub
xchg
test
mov
mov
addr16
fcmovnu
ss
pop
jecxz
cltd
push
sbb
cmp
popa
cli
jl
sbb
sbb
aas
icebp
dec
adc
popa
insl
push
or
jo
inc
orb
xor
xchg
lahf
jmp
pusha
popa
sub
shl
or
xor
cwtl
iret
inc
mov
jmp
jge
popf
sub
insl
xchg
adc
nop
les
xchg
mov
inc
cmp
cmpsb
stos
insb
out
jns
jbe
jl
insb
jne
insb
xchg
mov
outsb
ss
mov
popf
in
stos
sub
cmp
sbb
es
pop
std
cld
xchg
or
inc
dec
xlat
lret
jo
popf
inc
mov
dec
pop
cli
cmpsb
push
and
push
and
ljmp
sbb
dec
inc
data16
cltd
jl
insl
cmp
jbe
ss
ret
aam
mov
pop
cmp
sub
std
xchg
aas
jmp
cld
aad
or
sti
mov
into
roll
imul
adc
dec
in
pop
ficompl
fstp
pop
or
push
mov
punpckhbw
pop
pushf
jno
shlb
aaa
lret
loopne
cwtl
or
pushfw
stos
into
fwait
cli
jae
jle
into
dec
sub
jae
aas
mov
mov
or
push
int3
add
sti
mov
mov
aam
adc
pop
jle
pop
or
mov
imul
xor
rcl
std
jnp
sbb
or
mov
xchg
or
addl
xlat
in
std
lret
xor
daa
pop
mov
jg
mov
ja
outsl
sub
ror
mov
sahf
pushf
dec
add
test
cmp
aaa
jecxz
cmp
adc
in
pop
test
insl
fwait
aam
sbb
adc
fnstsw
or
fiaddl
xchg
push
or
sbb
mov
sub
popf
mov
lret
stc
lea
jecxz
sahf
and
popa
lea
mov
mov
cmp
cmpsb
or
in
fiaddl
jnp
outsb
jle
xor
hlt
imul
sbb
sbb
hlt
fsubrp
imul
gs
dec
arpl
mov
mov
iret
imulb
aaa
or
dec
out
in
xchg
adc
fnstenv
jle
aam
movsb
or
xchg
mov
daa
in
lret
adc
and
adc
fdivl
cmc
cwtl
sub
push
push
push
and
jo
mov
mov
jp
jp
into
ror
push
arpl
ret
or
or
mov
push
mov
cwtl
icebp
add
mov
outsl
sbb
cmp
mov
cmc
cmpsl
cs
mov
mov
mov
jbe
and
sub
cwtl
out
lds
pop
call
mov
les
mov
add
imul
xlat
xchg
add
sub
mov
iret
dec
lret
ret
inc
arpl
arpl
movsb
in
jnp
sbb
ljmp
mov
rcr
and
dec
or
inc
push
mov
jno
shrl
femms
cmp
mov
and
in
inc
fcomps
xchg
sbb
adc
inc
orb
inc
jp
fidivrl
xchg
test
push
adc
pop
mov
das
jp
xchg
les
into
pop
lahf
fildl
inc
push
sub
cmp
or
fisubrl
inc
sbb
xor
dec
call
fiaddl
leave
repz
xchg
ret
shlb
jecxz
mov
mov
dec
int3
cmp
cmc
pop
sti
jns
lea
cwtl
int3
fcmovbe
xor
lret
dec
mov
xchg
dec
sbb
sbb
cld
sbb
hlt
adc
mov
pop
cli
xchg
popa
orb
cmp
inc
test
in
fmull
out
jo
cmpsb
lea
xchg
daa
pop
fidivs
test
imul
inc
rclb
push
mov
outsl
pop
in
dec
daa
rcrl
mov
dec
scas
les
arpl
cmc
cmp
lahf
cmpl
adc
std
testb
scas
push
scas
xchg
cld
pop
movsl
cmpsb
mov
xchg
scas
test
mov
mov
mov
push
stos
es
hlt
out
mov
xor
push
stos
bound
aaa
pop
out
dec
ss
fcmovnb
and
sbb
mov
inc
scas
mov
jns
packuswb
cs
cmp
pop
inc
aaa
pusha
pop
pop
clc
cmpb
ret
test
dec
mov
es
fcoml
pop
das
push
push
mov
jbe
lods
insb
or
std
js
cmp
lds
or
rolb
pop
and
repnz
push
dec
and
jecxz
lret
add
out
xchg
fisttpl
sbb
cmp
pop
jbe
mov
repnz
fdivs
mov
fcmovb
and
sahf
pop
push
fstpt
lret
add
idivl
mov
sarl
sbb
adc
xor
nop
int3
and
add
in
push
mov
pop
pushl
lds
mov
or
shrl
xchg
daa
jmp
cs
in
pop
sbb
jmpw
enter
dec
cwtl
aaa
inc
call
aas
inc
or
div
outsl
ret
loopne
adc
and
push
adc
es
jbe
ds
push
jno
addl
lds
ja
push
jmp
sarl
jecxz
jne
popf
cmp
loopne
stos
cmp
aam
cmp
mov
cmpb
add
call
outsl
scas
inc
pushf
test
ds
mov
test
lret
adc
out
aas
cmp
cltd
in
movsl
push
add
mov
fdivl
in
out
aas
dec
ret
scas
adc
scas
add
insl
jo
les
icebp
mov
pop
leave
popa
xchg
jecxz
sti
xchg
pop
stc
les
mov
addr16
test
aaa
fmuls
scas
dec
incl
data16
xchg
imul
jne
addl
adc
adc
fdivrl
inc
pop
test
sahf
dec
mov
popa
xchg
mov
mov
fbld
pop
js
xor
std
cmp
and
and
insl
sti
in
popl
cli
gs
mov
stc
xor
push
push
lret
xchg
cld
mov
add
es
cmc
mov
int3
divb
out
xchg
out
jo
adc
sbb
out
fildl
push
or
rorl
loopne
arpl
mov
jbe
cltd
popf
cltd
jb
pop
jbe
xchg
xchg
lahf
sbb
push
insb
bnd
jne
repnz
inc
or
inc
mov
cmp
enter
jecxz
es
or
andb
mov
ret
adc
jmp
fnsave
inc
cmpsl
xchg
lret
or
stos
push
or
out
pop
out
in
cmp
push
fcoms
jmp
pusha
xchg
fsubrs
jbe
push
jbe
imul
divb
jmp
push
test
scas
fnstsw
dec
cmc
xor
push
jp
dec
aad
push
nop
pop
mov
mov
mov
out
xor
adc
dec
mov
push
lret
or
mov
push
push
add
insl
pop
in
adc
stos
or
scas
jge
mov
int
dec
dec
in
stos
pushf
push
jb
imul
je
pop
adc
imul
push
adc
cwtl
sarb
jl
les
dec
push
lea
jle
shll
pop
stos
ret
dec
test
je
je
pop
pop
inc
jnp
fiadds
adc
dec
inc
clc
bound
inc
outsl
cmp
mov
sti
testb
out
lret
mov
dec
das
jnp
loope
dec
mov
push
mov
ljmp
xchg
iret
data16
in
mov
push
inc
repnz
mov
pop
jbe
in
lods
add
aas
inc
dec
in
mov
add
negl
adc
out
mov
ljmp
insl
lods
shll
repnz
test
push
js
sub
dec
xchg
cwtl
mov
xchg
or
lret
add
mov
outsb
stos
jmp
jl
push
add
and
cmp
lea
jo
jnp
lods
xchg
or
add
dec
cmpsb
pop
push
jmp
xorl
jb
mov
aas
adc
xchg
or
lea
mov
test
aam
ds
jbe
adc
das
mov
sub
icebp
inc
sub
repnz
or
je
aaa
and
sahf
dec
and
sub
jp
sbb
std
push
cmpsl
xchg
push
out
mulb
iret
dec
test
pop
dec
fld
adc
into
les
rcrl
test
mov
push
push
ljmp
mov
sti
rcrl
xchg
inc
dec
dec
ret
cmp
inc
loope
es
out
in
iret
jmp
jmp
push
mov
in
sbb
outsb
cmp
loope
je
or
xlat
shll
add
xchg
pop
outsb
pusha
lods
push
inc
push
pop
adc
xor
movsb
jns
mov
mov
xchg
int
test
test
add
add
or
cmp
sbb
enter
lret
jb
es
dec
loop
fsubrl
sti
sbb
aas
mov
cld
jne
fadds
lock
shlb
sub
dec
loopew
int
fcompl
mulb
adc
xchg
dec
das
mov
xlat
ss
pushf
iret
pop
or
fcompl
bound
aad
mov
cmp
pop
dec
jnp
mov
mov
lods
jns
pushf
js
in
and
scas
mov
cli
ljmp
lods
xchg
sahf
xor
loope
xchg
ds
cmp
mov
stos
push
les
call
popl
inc
cli
or
shrl
jle
push
pushf
mov
sub
pop
scas
or
gs
rcll
add
test
inc
leave
aaa
ja
mov
es
dec
aad
cmp
addr16
jbe
xchg
fisttpl
pop
mov
sbb
and
ret
jg
jg
or
push
mov
push
sub
sub
mov
or
and
inc
ss
ret
inc
push
push
ss
jmp
cli
pop
add
and
add
jp
jecxz
ret
jmp
call
mov
hlt
jno
repnz
arpl
pop
in
aaa
insl
xchg
sub
xchg
movsl
xchg
filds
adc
xor
sbb
push
cld
add
sbb
add
gs
sub
add
out
push
sbb
std
adcb
add
ffree
inc
cmp
ret
scas
js
stos
ss
hlt
dec
stc
add
pop
orl
orb
inc
test
add
push
loope
sub
leave
cmp
daa
inc
sbb
and
xor
out
iret
mov
jno
xchg
mov
push
jl
jmp
loop
nop
out
jle
push
sbb
pop
mov
sbbb
xchg
hlt
outsl
dec
pop
and
inc
and
je
cmc
shr
or
mov
sahf
mov
clc
lods
loop
mov
inc
fwait
roll
mov
lods
adc
mov
jp
mov
lcall
testb
add
das
movsb
mov
xchg
bnd
sbbl
inc
test
or
ret
sub
pop
or
mov
sbb
das
adc
cmp
test
subb
cmp
jbe
outsl
int
or
jl
or
xor
ljmp
fstps
lods
rcll
rcrl
adc
mov
sub
loop
add
jne
mov
lret
mov
ja
in
js
pop
xlat
faddl
sbb
and
sbb
mov
les
fsubl
dec
mov
lahf
mov
inc
cmpsb
ret
in
imul
xor
bound
sbbb
orl
and
mov
dec
mov
xor
aaa
in
aas
ret
out
and
add
aas
push
jbe
imul
jns
ljmp
xchg
fistpl
sti
aam
cld
push
ror
decl
pop
rcll
ljmp
cmp
dec
pusha
cld
fistpl
out
in
sub
mov
xor
mulb
mov
out
xchg
or
mov
xchg
cmc
scas
sbb
ficompl
ss
jno
dec
ds
pop
test
or
xchg
fcmovu
sub
aas
ret
push
scas
lock
xchg
pushf
mov
gs
mov
xchg
ret
out
mov
mov
mov
mov
pop
mov
sub
fildl
pop
shrb
mov
pop
imul
daa
inc
or
cmp
lods
ret
xor
sub
in
je
sub
cltd
fbstp
mov
pop
mov
mov
sbb
mov
in
mov
pop
popf
xchg
jmp
in
xchg
outsl
aaa
jmp
imul
lock
mov
sub
in
inc
dec
pop
daa
decl
mov
mov
cmpsl
sbb
enter
sbb
lock
add
xchg
inc
faddl
ret
test
sub
pop
idiv
or
fsubr
scas
outsl
arpl
jbe
push
jnp
lcall
pop
pop
sub
xchg
and
mov
mov
cmc
mov
mulb
add
les
mov
push
pop
or
stos
scas
sub
insl
xor
ss
push
aam
adc
sbb
and
push
inc
mov
mov
sbb
outsl
sarl
dec
fwait
push
jp
xchg
or
int3
xor
jae
sbb
inc
and
mov
call
or
or
scas
aaa
xchg
adc
out
jno
add
dec
popl
iret
fmuls
cmp
inc
fsubrl
repnz
jmp
gs
out
popf
pushf
adc
push
pop
xor
aaa
sbb
jb
popf
xor
scas
mov
outsl
and
gs
sti
mov
mov
adc
cmc
jge
adc
imul
das
pusha
rcll
into
aas
push
adc
dec
or
fbstp
loopne
cli
popf
push
aad
mov
or
out
lock
iret
lret
push
inc
pop
xchg
xchg
sbbl
ja
dec
cltd
adc
rolb
ja
or
cmp
mov
or
cmc
push
popl
in
pop
mov
pop
aad
add
stc
or
std
es
mov
cmp
add
cld
popa
cmpsb
mov
test
push
jns
mov
int3
lds
push
mov
and
mov
push
add
inc
sub
rolb
xor
pop
cmp
inc
aas
xchg
sarl
jo
xchg
mov
add
pop
stos
mov
ljmp
jp
mov
xor
fwait
inc
test
out
cmp
js
xor
incb
or
sub
fadd
or
stos
stos
into
dec
adc
in
iret
xor
scas
mov
adc
pop
xor
insl
insb
adc
adc
dec
imul
cmp
and
pushf
shlb
orb
cmp
push
and
sbb
xorb
es
mov
add
inc
adc
jbe
jg
adc
rcr
scas
push
testb
push
aaa
enter
jb
mov
loopne
int3
or
push
push
jne
push
add
int
inc
adc
mov
xchg
sub
lock
dec
or
fcomps
xor
mov
out
sbb
inc
dec
fld
daa
xchg
cmpsb
xchg
or
or
adc
cli
mov
lds
outsb
inc
push
fs
xchg
in
int3
mov
mov
or
mov
push
fs
mov
repz
popa
repz
mov
jno
sbb
sbb
jecxz
in
leave
and
idivb
add
rol
mov
push
test
pop
shrb
movsl
int
stos
mov
arpl
push
pop
stos
pop
dec
xchg
lahf
movd
hlt
dec
xchg
xchg
push
lds
sbb
jns
jp
ret
inc
xorl
pop
xchg
pusha
adc
scas
mov
adc
lods
xor
xor
fdivrs
insl
cmp
xchg
andb
popf
sbb
lods
push
sbb
sbb
cmp
xchg
push
pop
loopne
adc
daa
mov
pop
jnp
popf
aad
lods
inc
xchg
xchg
mov
stos
adc
inc
into
out
loop
add
mov
push
xchg
ss
sub
mov
adc
jnp
stos
push
and
inc
fstp
cmp
decl
pop
sub
xor
add
xchg
mov
int3
test
cmp
test
insl
gs
jl
mov
aam
icebp
imul
jo
push
sbb
mov
sbb
inc
jecxz
inc
dec
aas
int3
dec
icebp
ret
mov
push
adc
adc
jae
fbld
inc
cmp
xchg
inc
test
jnp
fadd
enter
adc
fstpl
movsl
repz
stos
lret
mov
jge
mov
add
movsl
cmp
jge
insb
out
mov
test
or
dec
mov
mov
xor
jge
cmp
pop
xor
jge
sbb
call
insl
xchg
push
stos
sarb
imul
sti
inc
or
iret
in
leave
cmp
xchg
and
ds
pop
ds
adc
sbb
pop
adc
mov
jnp
aas
jb
cmp
clc
sbb
xlat
push
push
sub
movsl
jp
divl
mov
push
and
or
js
lcall
mov
sbb
add
mov
es
sub
jecxz
mov
inc
fildl
mov
ss
sbb
mov
inc
jp
push
inc
push
mov
mov
jle
or
xchg
adc
dec
or
in
or
jmp
and
sub
pop
out
fildl
cmp
negl
xchg
add
rorb
clc
lods
push
inc
jp
mov
es
pop
adc
adc
pusha
cmp
adc
lock
xchg
and
pop
sahf
jns
push
bound
jge
rorb
loopne
sarl
pop
iret
popf
push
in
addr16
inc
sbb
inc
clc
cmp
ljmp
fidivrl
lahf
push
or
addr16
testl
push
or
imulb
mov
shrd
cmp
inc
xor
mov
stos
mov
fisttps
cmp
pop
push
fsubrs
jbe
js
cmp
lods
mov
test
or
sbb
xor
add
mov
xlat
lret
xchg
and
icebp
repnz
js
lret
ds
into
lods
cmp
or
xor
mov
dec
stos
jmp
or
lea
inc
and
dec
jae
push
jns
sbb
dec
adc
imul
push
xor
pop
loope
xchg
sub
daa
cmpsb
jae
xor
cmpsl
xor
dec
ret
sbb
icebp
scas
xor
mov
shll
pop
dec
aas
pop
mov
dec
rcrb
xchg
movsb
add
sbb
insl
adcb
dec
negb
xchg
push
into
mov
cmpsl
jae
out
mov
sbb
jl
cmp
xchg
imul
xor
or
outsl
mov
cmc
jbe
mov
fsubl
pop
das
pop
rorl
pop
loope
call
fsubs
mov
lds
or
cmpsl
pop
sub
es
pop
loopne
jl
insb
insb
cmpsb
and
fs
ret
dec
cmp
cmp
mov
jl
jp
jae
pop
loopne
in
shll
pop
roll
cmp
fstpt
inc
mov
out
jb
cld
fs
imul
imul
js
das
fistpll
aam
jge
sbb
mov
mov
jge
popf
repz
out
repnz
mov
adc
lret
fsubrs
mov
negb
cmp
test
sbb
nop
xchg
test
mov
xchg
jbe
xchg
es
mov
pop
ja
int3
fmul
int3
jp
gs
cmp
cs
dec
ret
mov
aam
mov
jle
test
push
mov
cli
imul
ror
icebp
adc
cmp
ljmp
cmpsl
pop
dec
repnz
xchg
es
lcall
push
pop
or
aad
add
inc
pop
jo
adc
cli
ret
push
popf
pop
jg
sbb
mov
xchg
sbb
stos
sub
enter
jns
and
testl
das
mov
push
push
cmp
insb
call
mov
scas
mov
repnz
add
out
xchg
adc
push
xor
arpl
xchg
pushf
mov
aaa
das
adcb
lcall
imul
ss
mov
inc
mov
sbb
dec
or
bound
pop
iret
lret
mov
or
movsb
data16
jecxz
fists
mov
sub
pushf
out
cld
and
xchg
inc
subl
aas
mov
cmp
jae
xor
repnz
imul
fisubs
ja
aas
xchg
sub
loop
lea
xchg
mov
shlb
les
sbb
mov
outsb
fs
xor
inc
sub
fnop
dec
push
add
sbb
decl
cmpl
aad
jg
enter
and
lret
je
or
and
pop
cmp
xchg
ds
cmpsl
or
xchg
fstl
adc
clc
daa
shrl
add
pushf
lods
inc
jnp
clc
fnstsw
push
inc
pop
jne
ljmp
sbb
sbb
inc
push
out
pop
cwtl
cmp
pop
pop
dec
mov
movsl
rol
push
in
cmp
fidivs
adcl
jmp
mov
mov
push
sub
adc
cmp
fsubp
mov
jl
and
mov
xchg
push
cmp
pop
mov
mov
mov
cmp
add
xchg
fsubrp
imul
push
jl
and
and
fsubs
das
xchg
sub
xor
inc
or
repz
ds
dec
sahf
les
movsl
mov
xchg
xor
sarl
jae
repnz
fs
out
out
lods
into
stos
jmp
outsb
loop
jp
mov
sahf
and
cld
inc
or
jo
arpl
pop
sub
cmp
cmp
push
add
ret
xchg
negl
xor
icebp
lea
jno
pop
ret
xor
sbb
and
dec
add
mov
fs
ljmp
imul
aaa
jbe
ss
es
mov
js
dec
sub
mov
jle
notl
in
test
xchg
cltd
sub
or
imul
stos
movsl
sbb
pusha
les
pop
insl
mov
fs
adc
fnstsw
lea
addr16
sub
cwtl
jae
sbb
out
mov
xor
and
jle
aad
push
mov
mov
cmp
sbb
add
or
jo
insl
in
jo
orb
ss
mov
clc
push
cmpsl
inc
pop
push
sbb
jo
mov
lcall
dec
icebp
sbb
imul
jge
push
sti
loope
lods
ret
add
pop
jle
outsb
cmpsb
jg
xchg
dec
outsl
cmp
sub
loop
out
ss
in
incl
enter
adc
enter
cmp
aas
adc
adc
js
hlt
pop
dec
pop
fisubrl
int3
fldt
jae
mov
dec
push
rcrl
dec
fdivs
cli
insl
add
jbe
adc
lock
adc
out
dec
xor
or
and
mov
adc
repz
jmp
scas
adc
pushf
lods
lods
popa
scas
jg
shll
sub
mov
mov
sub
xchg
push
fwait
jb
sbb
popf
orl
mov
cmp
push
xchg
call
in
mov
push
gs
popa
aas
pop
pop
pushf
daa
push
mov
add
push
mov
jb
test
or
repnz
dec
jecxz
jne
fdivl
mov
mov
arpl
movsl
repz
pop
sub
adc
mov
scas
xor
xchg
js
out
les
push
add
jno
mov
test
enter
xchg
inc
push
xchg
out
push
jle
xor
inc
out
xchg
scas
hlt
mov
es
inc
test
mov
mov
inc
jns
lahf
jmp
fnstenv
mov
aas
mov
fbld
ss
jecxz
pop
add
jp
pop
pop
add
and
xor
xor
ljmp
les
std
sti
arpl
push
addl
xchg
push
sbb
cmp
jns
hlt
mov
fildll
stos
loop
xlat
fadd
mov
mov
ss
adc
mov
cmp
aas
cltd
fistl
and
jecxz
cmpsl
cmp
test
lahf
push
outsb
mov
iret
mov
int
int
xchg
aam
xor
cs
pop
cmpsl
mov
mov
jmp
sbb
lods
sbb
xlat
cmpsl
xlat
sti
scas
adc
outsb
sti
adc
push
jmp
mov
jno
mov
push
fmull
movsb
mov
dec
adc
int3
jne
sbb
imul
stc
mov
jmp
dec
scas
popf
sahf
jbe
stc
mov
sbb
loopne
int
add
adc
arpl
mov
std
jecxz
lds
loop
mov
div
inc
add
data16
addb
fistpl
jb
xor
push
jp
mov
xchg
dec
pop
jg
hlt
in
sbb
push
ss
cmp
mov
mov
pop
nop
xor
lods
sub
arpl
xchg
dec
adc
call
pop
imul
push
adc
orl
ljmp
test
in
sti
movsl
push
test
int
sbb
inc
fdivrs
adc
in
nop
pop
push
ljmp
cwtl
jmp
inc
adc
mov
outsb
andb
mov
mov
jg
mov
push
ja
adc
push
inc
mov
xor
and
xchg
fs
lock
xchg
pop
sahf
add
cmp
mov
mov
sub
clc
xchg
loope
testb
or
into
aaa
orb
push
adc
xor
in
outsl
xorb
jne
mov
pop
and
sbb
jo
xchg
outsb
cmpl
jns
push
push
xor
jb
and
mov
mov
adc
frstor
xchg
xchg
push
xor
call
or
push
mov
dec
add
sbb
inc
adc
lcall
sub
push
outsb
jl
sub
xlat
sbb
outsb
jns
mov
dec
and
sub
insb
jl
je
sbb
pop
fs
in
push
rorl
push
popf
dec
adc
ror
jle
push
aas
jo
mov
mov
jbe
mov
mov
sbb
mov
or
inc
xchg
pusha
out
and
jbe,pt
popa
push
inc
insl
mov
ss
dec
inc
addr16
or
mov
imul
lods
or
mov
pop
je
push
clc
popa
int
repnz
push
cli
xchg
mov
ja
jo
bound
pop
inc
mov
mov
push
adc
sarb
in
push
popf
jmp
test
pop
int
add
ja
pusha
lret
out
mov
shlb
loope
aad
mov
fbld
jb
test
mov
mov
inc
add
adc
shr
adc
pop
das
int3
jle
cld
lret
or
xchg
mov
cmp
add
mull
xchg
outsb
adc
inc
arpl
sarb
add
shlb
xchg
iret
xlat
mov
lods
jg
push
jp
mov
fildl
in
sub
stc
std
imul
sbb
subl
add
loopnew
lods
fisubrs
pop
push
js
shl
fs
sub
xchg
pop
lds
loopne
sub
push
and
inc
pop
mov
fs
repz
je
adc
dec
addl
aaa
jecxz
push
jns
lods
ja
add
outsb
inc
cwtl
test
inc
addr16
subb
sbb
bound
es
pop
cmp
shrl
call
repnz
das
inc
or
xchg
pop
sbbl
sbb
test
mov
dec
pop
xor
dec
and
divb
xor
mov
cmp
mov
je
daa
mov
sub
sti
sub
dec
test
cs
mov
cmc
jg
or
adc
fistps
lahf
or
fwait
push
bound
lahf
rcrl
fisttpl
mov
mov
hlt
xchg
add
je
repz
push
xor
push
into
je
mov
push
add
xorb
mov
mov
fnstcw
mov
cli
or
ror
inc
adc
xchg
in
and
pushfw
cmpb
dec
sbb
cmp
mov
lcall
stos
frstor
mov
aad
pop
ret
mov
xlat
lret
mov
out
sub
daa
xchg
cmpl
and
mov
adc
call
popl
mov
movsb
dec
mov
std
es
xor
fistl
push
add
cmp
jmp
sub
leave
out
pop
daa
cmpl
and
aam
inc
rcll
push
sbb
mov
jl
call
lret
sti
nop
add
sbb
jb
stos
or
sbb
shrl
inc
fadd
das
imull
mov
cmc
dec
mov
movsb
mov
add
rclb
fisubl
xchg
adc
shrb
hlt
sub
xchg
sti
pop
add
lcall
mov
and
je
xor
pushf
scas
sbb
dec
jb
add
fistps
fnstcw
and
sub
ljmp
inc
or
inc
pop
in
xchg
lcall
dec
adc
call
sub
nop
xlat
lods
fwait
pop
add
sbb
aaa
mov
add
jecxz
mov
sub
shr
lods
filds
sub
xor
cmp
inc
aas
in
lods
xchg
movsl
mov
adc
mov
daa
das
pop
mov
dec
ret
or
inc
fildl
cmpsb
and
push
xchg
mov
pop
shr
lcall
dec
mov
int
fstl
int
xchg
aam
sbb
or
stos
ja
push
sbb
xchg
popf
sub
push
ljmp
adc
xor
add
loop
inc
inc
sub
lock
dec
fsub
xchg
scas
leave
sahf
je
aad
mov
add
lods
out
mov
cld
jne
jmp
push
mov
lods
jg
mov
aas
fwait
sbb
dec
lock
js
sbb
xchg
push
test
mov
pop
pop
ds
enter
divl
ja
xchg
outsb
jae
xor
xor
xor
pop
jl
into
jno
aaa
push
loope
mov
scas
add
test
jecxz
mov
bound
aaa
adc
sub
mov
or
sub
add
das
jp
and
pop
dec
stc
inc
mov
test
and
iret
jge
jl
adc
dec
xor
movsl
into
cmp
in
pop
in
mov
ficompl
push
mov
icebp
iret
jecxz
sub
dec
lods
clc
in
xchg
or
jp
out
inc
mov
imul
inc
sub
mov
sarl
push
fdivl
cmpb
test
jge
ds
jo
movsl
dec
push
mov
fcmove
xchg
jp
jl
mov
lahf
daa
loope
fcoml
or
arpl
rorl
xchg
repz
out
push
movsl
enter
xchg
leave
mov
jmp
fsubp
leave
jns
out
sbb
adc
adc
out
add
pop
inc
and
mov
jne
and
fsubrs
jmp
jbe
mov
ret
sbb
repz
test
xor
rcrb
ss
shll
adc
xchg
sub
jb
xorl
xchg
lods
jg
into
adc
mov
xor
js
fsubrl
mov
daa
das
testl
mov
hlt
sti
xchg
dec
scas
fnstcw
xchg
mov
hlt
fmull
sub
jnp
insl
mov
add
fnstenv
push
out
ret
fnstcw
ja
in
mov
and
sub
pop
stos
mov
ljmp
fwait
cmpsl
mov
sti
shrb
int
cmp
cmp
pop
gs
mov
sahf
nop
dec
out
es
es
cmp
je
mov
adc
cs
push
lahf
sub
or
popa
and
and
imul
push
iret
ret
jmp
fstps
cmp
mov
add
push
je
movsb
fistpll
cmpsl
adc
and
dec
or
bswap
push
cld
mov
lcall
adc
xchg
lock
xor
push
cmp
push
push
in
sbb
sbb
inc
mov
sar
ss
cmp
push
jnp
cmp
xor
cld
icebp
lahf
addr16
jno
mov
sar
mov
adc
jnp
shl
out
and
mov
scas
pop
daa
cmpsb
dec
testl
stos
mov
in
sub
in
fidivl
push
mov
int3
or
and
sbb
jne
int
fiaddl
xchg
test
insl
cmp
jp
mov
xchg
pop
repnz
jb
mov
jg
jecxz
dec
lcall
mov
fstps
leave
test
shrl
inc
sbb
pop
popf
out
mov
add
jae
mov
sbb
sub
or
int
test
or
xor
jmp
or
add
int3
jmp
or
popf
mov
imul
sub
pusha
jno
mov
leave
push
fs
out
add
sti
xor
stos
push
xlat
int
mov
icebp
sbb
cmp
sub
fsubr
mov
inc
adc
hlt
jl
or
dec
mov
shll
pop
dec
xor
and
js
pop
cmpsb
mov
das
aas
std
lcall
xor
mov
scas
popw
sub
arpl
xchg
pushf
movb
push
lret
les
loopne
testb
addb
in
repz
test
popa
pop
dec
xchg
mov
pop
cmp
hlt
outsb
lods
and
mov
notb
xlat
addr16
orb
jbe
fwait
ljmp
mov
in
pop
xrelease
cmp
nop
cmp
pop
lods
rcll
push
mov
fildl
mov
ret
xchg
xor
sub
mov
sbb
pop
xor
sbb
fcoml
adc
xor
xlat
lds
mov
mov
arpl
cmpsl
cld
insl
dec
inc
repnz
dec
fsub
lods
dec
xchg
andb
mov
and
clc
add
flds
cmc
xchg
inc
ret
aad
test
enter
out
outsb
pushf
sahf
hlt
or
call
popa
rcl
movsb
sar
push
es
inc
mov
mov
xorb
rcrb
jns
mov
pushl
std
mov
andb
in
inc
rol
jbe
push
add
loopne
jg
aam
push
fmull
loop
sarl
inc
dec
adcb
inc
xchg
icebp
lret
lahf
test
clc
xchg
clc
xor
nop
jg
xchg
sub
pushl
aad
cmp
xchg
xor
lret
ljmp
sub
or
aam
cmp
mov
dec
cmp
in
arpl
in
jmp
fldcw
adc
leave
jmp
orb
jnp
jns
mov
cltd
sbb
and
in
sti
mov
lcall
or
or
push
js
test
push
daa
pusha
push
imul
sbb
dec
sub
xchg
ficompl
xlat
push
insl
xchg
test
or
or
inc
jmp
sbb
ja
decb
push
ret
sahf
repnz
mov
test
movq
sbb
cltd
cmpb
pop
add
mov
and
dec
push
mov
pop
push
insb
and
sub
fisubl
adc
xchg
cmp
in
lds
jae
and
inc
ret
stos
pushf
add
cli
sub
insl
xchg
push
movsb
fildl
and
adc
fwait
xchg
negb
inc
sbb
aad
pop
push
xchg
int3
ret
outsb
pushf
shll
push
popf
cmp
mov
dec
push
inc
cmp
pop
fwait
add
sub
mov
shll
xor
jp
ficoml
lret
push
and
in
mov
push
test
movsl
xchg
or
pop
push
pop
stos
jnp
add
rolb
inc
jbe
subl
insl
mov
jg
aam
xor
or
or
in
push
nop
cmpsl
fnstsw
mov
lock
mov
loope
add
out
fdivs
pop
fisttpl
ficompl
mov
pop
in
xlat
bnd
sti
outsl
and
inc
shrl
sub
mov
lods
adc
push
jbe
jecxz
add
xor
nop
in
pop
jle
scas
jb
in
stc
insb
xchg
cmpsl
adc
daa
stos
jbe
push
jl
in
xor
outsl
mov
fists
fwait
push
pop
push
hlt
mov
fisubl
pop
cmp
imul
adc
int3
in
and
pop
jecxz
imull
ljmp
fistps
cmpsl
jl
fsubs
fdivl
pop
sub
inc
mov
imul
lods
push
push
movsl
outsb
push
inc
mov
lods
push
jb
mov
cld
fidivrs
dec
jns
mov
mov
call
fstl
sub
sti
jbe
rorl
xchg
lahf
sub
xor
loop
dec
adc
repz
insl
jb
sbb
push
ss
sti
xor
mov
data16
outsb
or
aam
ss
adc
mov
aaa
add
mov
jb
mov
movsl
push
pop
inc
add
push
lsl
xchg
scas
sarb
push
sub
fsubrl
test
fdivrl
mov
cmp
orl
lods
inc
ret
cld
insl
sub
cmp
loope
adc
mov
push
pop
dec
or
xor
mov
in
in
aad
int
inc
in
jl
clc
push
sbb
mov
sbb
ret
fidivrs
inc
aad
testb
sbb
dec
pop
sti
push
pushf
xchg
xchg
jecxz
sub
mov
imul
or
in
xor
pushf
sbb
xchg
sub
fs
push
fidivs
add
scas
out
cltd
mov
add
and
pop
inc
inc
out
and
dec
mov
dec
push
cmp
arpl
sbb
mov
arpl
and
bound
lods
pop
mov
aaa
scas
sub
ret
jmp
aad
int3
xchg
mov
push
icebp
mov
hlt
and
mov
jecxz
pop
addr16
ss
adc
push
jle
out
mov
push
dec
out
lahf
mov
push
icebp
imul
jbe
and
cmp
jle
pop
in
shrl
add
sbb
dec
outsb
inc
cli
xchg
repz
ljmp
je
ljmp
mov
jno
adc
pop
add
arpl
je
sbb
fdivs
dec
adc
mov
and
mov
in
pop
filds
xchg
jmp
push
and
fldl
clc
mov
test
test
cmp
shlb
xchg
shll
lcall
jno
adc
jge
into
inc
push
ljmp
scas
jnp
xor
cli
jge
xor
movsl
bound
pop
add
movsb
das
lret
in
jb
ss
lods
lret
cli
fdivrp
imul
repnz
sub
stos
jns
fisubs
dec
cmc
dec
rcrb
cmpsl
inc
into
and
mov
jns
push
test
sub
out
sub
xchg
fnstcw
hlt
repz
mov
sbb
jne
lods
adc
adc
push
xlat
ss
les
ret
push
cli
pop
daa
jnp
adc
mov
jnp
jge
scas
mov
pusha
jle
pop
push
imul
outsl
insb
stc
or
and
lret
xor
iret
and
mov
push
scas
ret
cmc
repz
sarl
hlt
cmp
test
in
cmp
sti
xchg
dec
stos
mov
idivb
ficompl
fwait
stos
jno
aam
pop
test
push
stos
add
fdivrs
das
sti
sbb
lea
rclb
movsl
mov
pusha
dec
fisttpl
in
test
inc
les
gs
rclb
dec
sbbl
dec
sbbl
xchg
outsl
outsl
scas
sbb
sbb
test
or
or
xorb
stos
jmp
imul
or
push
pop
push
lds
lock
jle
dec
mov
test
cmp
sub
sub
mov
jo
mov
inc
popa
enter
or
and
mov
xor
pop
xchg
mov
sti
pop
push
aam
aas
pop
cmp
lods
pop
icebp
test
mov
xor
fbstp
xchg
mov
inc
pop
out
aam
mov
push
pop
loopne
mov
xlat
cs
add
pop
xchg
jp
cmp
cmp
popl
in
les
cmp
enter
cltd
jnp
inc
rcr
xchg
add
sti
or
mov
sub
or
mov
shrb
push
fistps
aam
xchg
and
pop
lcall
icebp
repz
aam
clc
lock
mov
mov
aas
sbbl
out
xor
dec
sarb
test
sti
or
mull
mov
sti
fstpt
dec
pusha
push
jge
add
popf
xor
aam
rorb
pop
outsl
lret
pop
or
pop
sahf
xor
jmp
and
sub
inc
mov
inc
mov
hlt
cltd
cwtl
das
pushf
sti
mov
xor
xor
add
adc
je
dec
mov
mov
insb
cwtl
push
mov
push
hlt
in
xchg
clc
inc
pushl
mov
add
sti
nop
les
xchg
out
push
or
fadd
sahf
aam
xchg
arpl
ss
fildl
cmp
sahf
lds
lret
mov
or
push
stos
mov
orb
notb
xchg
jle
and
xlat
cmpsb
pop
push
push
add
mov
je
cltd
adc
mov
cmp
cmp
ljmp
mov
mov
xchg
out
adc
push
icebp
jle
cld
xor
aam
mov
into
adcb
in
xchg
ja
jge
sub
dec
mov
cmpsb
dec
roll
xor
push
mov
or
dec
out
push
pop
adc
dec
xor
in
pusha
jb
pop
xor
add
pop
roll
lods
in
loopne
cmp
shll
cmp
lods
adc
ja
enter
dec
stos
sbb
sbb
add
inc
scas
or
inc
xchg
out
pusha
pop
jne
test
xchg
and
push
pop
mov
insb
cmp
rclb
hlt
jecxz
in
nop
sbb
fidivl
pop
pop
and
jns
jbe
cld
pop
loopne
cmp
push
adc
lods
push
sbb
cmpsb
push
outsb
mov
mov
inc
adc
enter
es
dec
pushf
mov
bound
inc
inc
cmp
sbb
outsl
mov
sub
cmp
jbe
push
mov
jnp
cmpsl
jg
or
xor
out
test
xlat
pop
xchg
fidivrl
xchg
xor
add
xor
sbb
mov
mov
cli
popf
int3
subb
adc
imulb
cmpsb
pop
pop
xchg
adcb
icebp
mov
jecxz
adc
sti
loopne
xor
push
and
rolb
cmp
sbb
rcll
inc
bound
xchg
mov
inc
pusha
adc
ljmp
test
cmpsl
cwtl
jae
inc
mov
xchg
and
insl
adc
scas
sub
cltd
sti
push
cmp
sbb
and
out
popa
sbb
out
outsl
dec
les
and
scas
enter
jne
ficoms
adc
in
ret
div
cli
sub
dec
push
mov
inc
jle
mov
push
sahf
dec
addb
stos
test
adc
in
xchg
jp
or
mov
pop
sbb
ljmp
ds
push
into
and
sbb
fildl
pop
out
and
repnz
push
push
or
or
cmp
aas
gs
sbb
hlt
adc
and
lods
fistps
push
jle
stos
outsl
clc
mov
rolb
test
iret
idivb
pusha
dec
insb
jp
enter
shlb
add
mov
jnp
shlb
cmp
mov
dec
and
push
dec
pop
or
adc
rorb
lea
loop
xor
outsl
test
flds
sub
scas
nop
and
add
adcl
or
in
fimull
ret
lret
js
into
xor
and
imul
clc
mov
pushf
push
aad
or
in
mull
imulb
test
rclb
pusha
in
cwtl
out
push
sahf
pop
aas
sbb
add
clc
mov
and
into
pop
test
pop
shll
push
fwait
stos
and
xor
in
adc
dec
aas
mov
icebp
popa
movsb
das
push
dec
and
imul
lods
xorb
or
ja
insb
jne
fwait
mov
nop
aad
dec
out
pop
pop
out
mov
call
call
sbb
in
sbb
mov
popf
aas
push
cmp
sbb
xor
lods
in
divb
ss
mov
in
repnz
dec
mov
stos
mov
mov
cmpsb
add
jbe
ret
mov
cmc
ds
or
stos
adcb
test
ror
sbb
push
mov
rorl
jno
dec
data16
stc
je
pop
mov
and
add
sbb
lret
inc
add
add
js
pop
nop
popa
orl
pop
xchg
arpl
test
popf
mov
cwtl
mov
std
xor
lods
mov
out
data16
xchg
pushf
test
xchg
dec
jnp
xchg
push
nop
pop
icebp
or
orl
push
mov
mov
scas
insl
pop
xchg
sbb
push
popf
or
mov
out
test
repnz
loope
std
test
pop
sub
scas
pop
out
mov
inc
cmp
cmp
mov
lods
push
jmp
sbb
pop
jo
jo
stos
jns
inc
cmp
xchg
inc
fsub
shl
or
adc
xor
fwait
mov
cld
hlt
cmpsl
push
stos
enter
nopl
cwtl
xor
inc
out
les
sub
into
or
and
rolb
icebp
xchg
mov
mov
aad
dec
mov
cmp
fwait
mov
push
xchg
mov
aam
nop
mov
xor
xchg
addb
add
data16
jae
mov
cmc
or
orl
jp
xor
or
add
or
add
pop
cwtl
les
aam
dec
inc
scas
add
out
sub
fistl
shl
add
subl
cmp
dec
inc
lods
lret
mov
pop
jmp
xchg
nop
xchg
fdivs
and
imul
shlb
inc
or
or
nop
jo
and
cvtdq2ps
leave
gs
inc
gs
fimuls
incl
sub
or
inc
outsb
inc
lock
jo
add
sbb
jns
lret
cli
dec
sub
push
cwtl
mov
movsb
pop
sahf
pop
fistpl
lock
popa
popf
add
add
or
into
shrl
jno
repnz
stos
xorb
stos
cmp
push
mov
mov
pop
sub
cwtl
xlat
stos
jae
mov
sub
fxch
dec
and
mov
inc
movsl
sarb
pop
lahf
dec
push
std
jle
xor
imul
mov
and
inc
mov
jge
add
lahf
popa
lds
enter
mov
iret
daa
or
cmc
lea
enter
push
xchg
jecxz
frstor
pop
sbb
into
cld
jae
sbb
mov
test
dec
xchg
pushf
pop
xchg
stos
xchg
int3
push
daa
adc
adc
or
mov
or
mov
mov
fists
or
addb
jne
fcoml
push
push
cs
push
vmovhps
popa
pop
in
and
pop
sub
mov
or
mov
shr
repnz
insl
int3
cmp
add
sbb
test
test
push
sbb
mov
outsl
test
data16
loope
scas
imul
enter
pushf
insb
cwtl
sub
ja
pop
pushf
in
adc
lret
adc
pop
aad
cmp
cltd
xadd
mov
sub
cmpb
xchg
or
xchg
je
add
cmp
popf
pop
hlt
xchg
int3
mov
push
xlat
shlb
shlb
imul
fwait
int
xchg
mov
jne
xor
push
xchg
mov
into
dec
imul
mov
jle
xor
cmpsb
sahf
mov
in
cmpsl
sti
pop
test
iret
sbb
mov
lahf
movb
pop
sub
dec
mov
and
xchg
push
push
xor
jg
fs
push
bound
push
call
mov
and
int3
mov
shr
mov
incb
push
insl
inc
mov
lock
mov
shl
in
cs
dec
mov
sbb
jmp
dec
pop
push
jmp
push
out
testb
popf
fucomip
out
rcll
data16
jl,pt
movsl
inc
idivl
fisttpll
dec
iret
aam
mov
pop
xlat
push
sub
pop
outsl
outsl
iret
fistps
jns
cwtl
in
clc
lods
push
pop
movsb
xchg
inc
or
push
shlb
and
mov
cltd
or
mov
in
shll
test
adc
pop
pop
mov
push
movl
subb
adc
lahf
dec
and
jnp
lret
fsubrl
jb
in
insb
cmpsl
imul
in
loopne
loop
data16
xchg
dec
dec
xor
mov
xchg
mov
sbb
cmpsb
es
mov
adc
test
or
fistpl
mov
stos
lock
hlt
loopne
xchg
mov
mov
loope
mov
xchg
add
xor
mov
pop
jmp
out
mov
je
mov
loop
in
ret
mov
inc
fs
stos
mov
mov
push
push
ret
adc
fsubs
dec
int
cmpsl
rorb
push
adc
stos
fwait
cli
aaa
dec
add
jns
mov
lcall
mov
out
jns
aam
and
loopne
std
mov
add
cmp
div
into
jle
xchg
ljmp
jb
sarb
xchg
sti
and
xchg
push
pop
sahf
int
sbb
in
roll
push
mov
repnz
push
pop
js
push
lret
cs
and
and
xor
sub
in
xor
push
mov
dec
cmp
jo
mov
mov
push
jns
pop
sub
inc
sbb
adc
xchg
xor
js
imul
jl
sbb
sub
into
xor
lds
xchg
jp
out
cmp
inc
daa
cmc
mov
xor
fimull
cmp
mov
mov
in
and
outsl
pop
outsb
ret
pop
jmp
lahf
js
jecxz
jg
das
sub
xor
xor
mov
nop
mov
jbe
call
xchg
adc
push
jl
dec
mov
add
in
insl
mov
bound
lret
xchg
cmc
pop
pop
out
jle
dec
cmc
in
shrl
inc
stc
arpl
icebp
ja
add
cmpsl
sbb
adc
dec
loop
push
xor
add
mov
sbb
inc
repz
inc
push
aaa
test
inc
pop
or
mov
adc
mov
jae
xorl
pop
push
shr
jno
inc
jae
adcb
rcrl
xchg
lods
aas
mov
dec
ret
adc
push
xor
adc
mov
pop
cmpsb
iret
inc
xchg
out
imul
pop
jecxz
out
inc
or
sahf
or
xor
inc
xchg
inc
shlb
imul
xchg
out
and
in
stos
pushf
xor
lahf
testl
cmpsb
jne
sti
test
test
sub
cmc
lcall
push
fstpt
mov
dec
xchg
divb
fsts
mov
sub
pop
jnp
xchg
imul
dec
aam
add
cs
fidivrl
jae
out
mov
pushf
sarl
fld1
push
enter
pusha
cmpb
std
inc
fistpll
icebp
cmp
sbb
or
and
sbb
and
mov
add
in
mov
add
sbb
daa
loope
and
ss
mov
cmpb
stos
dec
xchg
dec
js
shll
mov
repz
ljmp
std
jb
sbb
jae
mov
jo
test
xchg
inc
xchg
sti
mov
xchg
inc
aaa
mov
sub
jmp
jbe
testb
pop
fnstenv
iret
pop
adc
test
nop
add
repz
jg
out
gs
and
sub
ja
decb
push
xor
xchg
cmp
sbb
lock
xor
imul
dec
cld
sbb
cmp
pop
cmp
mov
jp
sbb
dec
pop
dec
cmc
cmpsb
push
fs
aad
push
push
push
sti
cmp
in
sarb
inc
lcall
adc
jns
loopne
xchg
and
mov
jbe
in
divb
jecxz
sbb
and
push
xchg
jo
call
sar
mov
pop
sub
cmp
pusha
repz
xchg
dec
fnstsw
inc
movsl
enter
jmp
imul
pop
or
movsl
xor
cmp
xchg
xor
jae
mov
mov
rorb
popf
popf
into
mov
sbb
or
and
fstl
inc
out
sub
fs
leave
fs
jne
addr16
out
pop
popf
iret
test
cltd
xor
lret
and
sub
imul
mov
in
mov
push
fsubs
ds
push
loop
maskmovq
imull
dec
sbb
lret
in
mov
push
stos
shrl
test
popf
aam
jne
imul
adc
push
movsb
sarb
cmpsb
lcall
fimull
xchg
xchg
pop
mov
std
fs
xchg
mov
xchg
popa
sub
iret
ss
xor
jmp
mov
inc
sub
cmp
sti
aaa
jp
mov
dec
rclb
or
push
add
and
movsl
shrl
jl
leave
mov
dec
clc
push
ds
test
in
sbb
dec
mov
adc
add
xor
or
jns
mov
std
mov
xchg
ret
int
outsb
repnz
mov
mov
jmp
xor
aaa
mov
mov
mov
aam
fldl
jmp
and
xorps
cmp
dec
or
cmp
sbb
push
or
mov
aam
popf
mov
sbb
sarl
inc
scas
jne
and
xchg
mov
icebp
xor
xchg
aas
jbe
fstpl
idivb
mov
push
xor
cmp
addr16
xchg
in
ret
outsb
fdivrp
add
jp
in
jbe
ret
andl
push
imul
jbe
push
cs
cwtl
mov
sti
les
cwtl
cli
cmp
nop
push
xor
insl
test
test
mov
jmp
jb
bound
jle
adc
jne
es
repnz
sbb
inc
hlt
pop
sub
xor
stc
xchg
and
xchg
scas
add
ds
cli
push
push
mov
in
sub
xchg
js
insl
and
xchg
into
aad
pop
gs
pushf
xor
movsb
mov
pushl
xchg
push
fsub
push
lock
sbb
sub
mov
mov
out
outsl
stos
inc
xchg
jne
lds
add
xlat
dec
or
lods
mov
and
arpl
lahf
outsb
test
jle
push
adc
in
push
jp
push
sbb
std
sub
or
pop
out
in
or
negl
cmc
xchg
xor
cmpsb
add
jecxz
cmc
and
addr16
mov
std
mov
xchg
cmp
ss
sbb
out
jge,pn
pop
xchg
insb
shrl
push
scas
roll
jp
push
sub
and
icebp
xchg
and
movsb
inc
add
imul
pop
mov
les
push
dec
cmp
inc
insb
ss
push
or
test
ret
or
dec
push
bnd
dec
and
test
mov
jle
movb
fwait
outsl
fs
and
insl
or
ficoms
inc
cmp
pop
fcoml
push
mov
push
push
das
insb
inc
imul
frstpm(287
mov
sub
lock
in
xor
jge
fs
and
enter
nop
inc
xor
or
lret
xor
test
ret
in
adc
insl
dec
imul
mov
cmp
inc
push
mov
test
insb
test
mov
mov
movsl
scas
pusha
in
inc
mov
pop
rolb
mov
adc
sbb
loop
bswap
xlat
shr
push
ficomps
mov
jmp
inc
xorl
sub
dec
mov
xor
lods
ss
out
stc
test
mov
popa
flds
mov
sub
ja
lds
movsb
jns
add
iret
add
je
pop
dec
movsl
lahf
mov
cmp
pop
pusha
in
xchg
sbb
scas
leave
iret
sub
push
push
xor
inc
lock
dec
add
pop
sub
xlat
je
lcall
cmp
lret
fisubrl
fwait
adc
and
out
mov
or
sub
add
push
push
jno
xchg
dec
lcall
fmul
cmp
xor
mov
jnp
pop
dec
cmp
inc
pop
scas
shlb
iret
leave
cwtl
das
push
mov
pop
les
sub
test
cmp
lods
push
fldl
or
pop
dec
mov
sub
push
mov
xadd
lods
mov
in
push
roll
cmc
fstl
or
mov
xchg
mov
add
dec
jne
cli
mov
pusha
pop
mov
lods
pop
jne
xchg
das
push
out
lret
lcall
push
dec
imul
mov
cs
lods
inc
cmp
cmp
mov
dec
decb
xor
ret
sbb
push
insb
fnstcw
outsb
dec
mov
lcall
es
mov
stc
or
cmp
adc
jae
add
jne
fldt
dec
ljmp
pop
dec
in
jge
and
fisttps
cmp
popa
inc
sbb
lret
sbb
adc
xchg
shlb
add
loopne
and
outsb
cwtl
int
fwait
les
clc
in
inc
sub
in
and
lods
shll
xchg
add
adc
sbbl
cmpl
xchg
imul
fadds
sub
bound
js
or
inc
jge
lcall
icebp
pop
mov
xor
repz
xor
sbb
xchg
and
jne
sub
mov
jmp
push
mov
sbb
andl
cmp
movsb
sahf
sub
mov
mov
or
pop
jecxz
and
js
push
cmp
sub
sub
ss
int3
pop
dec
cwtl
imul
sbb
lods
push
fsubrs
ds
iret
lock
pop
or
sbb
add
fucomi
adc
inc
das
xchg
frstor
push
shll
and
outsl
cli
stos
mov
or
aaa
sub
es
jne
push
pop
mov
mov
and
mov
jmp
add
jbe
into
mov
fdivrs
ficompl
sbb
pushf
mov
jns
loope
and
and
cmpsl
out
push
jbe
push
inc
arpl
mov
sahf
imul
test
lret
inc
jnp
ficoms
aaa
xchg
jo
mov
add
mov
lret
out
les
push
daa
fsubs
push
mov
or
jnp
into
ret
pop
and
cltd
push
push
pop
sub
loop
mov
xor
loop
stc
ret
mov
xor
es
jno
movsl
or
jmp
jns
inc
test
jne
scas
push
mov
jle
dec
pop
ds
and
pop
outsl
les
jp
pop
xchg
leave
mov
insb
mov
ds
xor
lock
inc
call
mov
test
cmpsl
int
push
cmc
xlat
inc
mov
stc
mov
enter
sub
scas
ss
cmp
dec
call
out
xchg
mov
and
cmp
xlat
lea
cmp
sbbb
call
sbb
mov
sbb
xlat
es
jnp
out
pop
aam
push
xchg
mov
mov
loope
cltd
mov
xor
mov
enter
dec
movsl
imul
add
mov
pusha
loopne
pop
sbb
sbb
mov
in
movups
cmp
in
iret
add
or
loope
add
dec
das
cmp
ss
pop
aas
in
movsb
fistl
fwait
daa
stos
inc
sbb
test
jmp
mov
lds
push
xacquire
cmc
outsl
pop
icebp
hlt
lret
ret
jne
push
jae
call
fcompl
fwait
adc
sti
rcrl
dec
arpl
rol
aam
cmc
mov
cmp
das
and
in
repnz
cwtl
ljmp
lcall
hlt
push
scas
mov
add
mov
ret
inc
sbb
call
cltd
out
cld
cmp
gs
pop
in
ja
xchg
pushf
ds
push
mov
lret
shlb
mov
mov
imul
leave
stos
lret
imul
stos
insb
rorl
sbb
inc
xchg
lret
aas
jo
call
jg
sbb
loopne
lock
push
hlt
jo
in
push
adc
lea
inc
stc
jbe
ljmp
outsb
inc
xor
out
repz
and
push
add
mov
popf
leave
insl
xchg
and
sub
in
mov
out
not
or
addr16
out
jbe
sub
inc
jne
cmc
jo
jnp
lods
xchg
jle
sbb
pop
jnp
movsb
and
pop
dec
outsb
jl
ss
popf
xor
lret
push
stos
mov
cmp
mov
inc
outsl
int
aas
jb
lret
cmp
push
sbb
clc
cmp
xor
xchg
jl
call
push
jg
scas
or
cmp
dec
cmp
lods
push
jl
sbb
mov
fcmove
out
cmp
les
testb
pop
lret
inc
dec
jp
call
icebp
stc
pop
sub
or
mov
and
cmpsb
dec
push
cmp
sbb
stc
inc
sbb
and
divb
das
lea
inc
jl
or
jb
xor
inc
sub
mov
sahf
jmp
hlt
shll
dec
outsl
sbb
jo
xchg
out
jg
shl
xchg
mov
mov
movsl
mov
scas
out
mov
cltd
or
push
mov
mov
pop
sub
pop
sub
mov
mov
fldl
pop
cmp
mov
imul
pop
push
xorb
lods
jmp
cmp
lcall
adc
xchg
flds
push
and
sub
push
add
mov
adc
xlat
fisubrs
insl
pop
mov
push
cmc
jecxz
ret
jmp
or
mov
cmp
popa
sub
mov
pop
push
push
sub
cld
pushl
add
mov
xor
mov
mov
push
sahf
pop
cmpsl
dec
xchg
xor
xchg
data16
int
std
mov
mov
out
pop
xchg
fwait
cmp
jmp
shl
cs
out
sub
xor
das
mov
sub
sub
dec
dec
inc
idiv
in
popf
in
mov
out
in
sub
outsl
xchg
mov
cmp
mov
push
pop
mov
pushf
mov
jp
cli
stos
xor
insl
pop
addr16
insl
fs
mov
adc
ret
push
shlb
out
out
inc
call
pop
jg
mov
shlb
pusha
out
popf
sub
cmp
or
imull
sti
fldcw
sbb
sub
fisubrs
pandn
imul
hlt
jp
mov
or
sbb
mov
movsl
cmp
mov
pop
inc
jae
sub
push
in
mov
xchg
xor
sub
xor
mov
pop
orb
or
sub
shlb
cmpsl
pop
hlt
jp
rep
call
jb
xchg
clc
sbb
hlt
scas
add
into
shll
lcall
fucomi
jecxz
mov
fsubl
mov
sub
xor
bound
mov
je
pop
fwait
push
mov
mov
test
test
push
jecxz
adc
ret
xor
stc
out
aam
into
sbb
fldenv
adc
and
push
or
jnp
jp
push
pop
addr16
xor
mov
inc
mov
les
aaa
jae
lea
mov
test
test
mov
mov
jo
movb
jle
lahf
inc
out
sbb
gs
add
pop
fwait
sub
and
xor
into
mov
int
and
cmp
sbb
daa
test
ret
dec
jns
fs
xchg
loopne
and
cmp
cmp
insb
int3
push
xor
shrl
mov
inc
icebp
push
push
in
lahf
leave
jp
xchg
lret
push
sarl
and
movsb
or
mov
dec
inc
arpl
xlat
mov
stos
cmp
xchg
pop
lock
lret
cmp
imul
pushf
sahf
movsl
adcl
hlt
add
cmp
call
insl
mov
loop
xchg
mov
mov
push
das
mov
xor
enter
aad
notl
and
fbld
sub
cmp
ffree
sahf
mov
lret
or
sub
jp
jb
pop
inc
mov
xchg
stc
and
xor
int
enter
jns
out
jmp
dec
pop
add
dec
std
movsl
mov
test
xor
pop
pushf
incl
daa
add
jecxz
fstp
sub
dec
pop
stc
mov
cmp
push
lret
push
fsubl
pop
jo
test
xchg
das
jmp
loop
loop
outsb
shll
outsb
test
outsb
xchg
in
leave
insb
les
xor
xchg
pop
mov
mull
sub
fwait
push
jp
sbb
fdiv
daa
pop
push
lock
lods
mov
pop
sbbl
outsl
arpl
aam
ret
xor
jecxz
mov
mov
and
repz
inc
leave
xchg
and
cmp
imul
jmp
rcrb
daa
in
xor
ret
push
into
std
mov
in
jno
stos
mul
lods
sti
inc
xchg
xlat
scas
mov
loop
push
xchg
or
ljmp
stc
ret
jne
ret
push
sbb
push
ret
gs
in
xor
int3
test
std
aad
mov
sbb
idiv
mov
pop
mov
mov
and
clc
in
push
mov
add
lahf
in
inc
push
push
pusha
inc
aam
inc
and
push
xor
repz
xor
hlt
das
mov
dec
push
mov
clc
adc
in
sbb
mov
xor
dec
and
leave
mov
cmc
std
add
cmp
popl
jbe
xor
pop
or
shll
leave
pop
xorl
negb
cmp
jle
mov
in
scas
flds
loopne
iret
loopne
arpl
nop
aad
not
shll
and
sbb
into
nop
mov
push
or
mov
or
and
pop
xchg
mov
cmc
cli
les
mov
enter
retw
inc
cmc
loop
push
jp
ret
adc
xchg
les
les
ljmp
jecxz
jb
in
mov
popa
cmp
and
xchg
pop
adc
sub
cltd
out
xchg
punpckhwd
jbe
stos
xor
and
sbb
sbb
pop
lods
call
dec
inc
inc
inc
jp
cs
push
mov
jp
sub
push
sbb
mov
enter
sbb
push
jns
pop
sti
xlat
ja
stos
mov
scas
pop
div
scas
jle
repz
divl
insb
cs
push
xchg
insb
cmp
in
jg
negb
adc
dec
ret
and
push
in
push
mov
imul
and
and
scas
repnz
mov
outsb
repnz
nop
sarl
mull
loope
bound
add
fcompl
sub
sbb
divl
xchg
mov
stc
cmp
mov
push
lret
sbbb
inc
sub
cmp
aam
pushf
push
outsl
bnd
int3
adc
jecxz
adc
shr
lret
push
mov
int3
push
dec
dec
adc
adc
xor
cmp
and
insb
loop
ja
dec
push
ljmp
adc
push
es
dec
mov
ror
jno
cmp
xor
add
aas
mov
test
mov
push
mov
jg
or
mov
pop
es
test
dec
dec
jp
in
shl
push
xor
xchg
pop
mov
sbb
mov
lock
sub
stos
lret
push
and
dec
cmp
dec
arpl
xor
mov
aam
fbld
inc
mov
pop
and
movsl
test
mov
cmp
outsl
shrb
and
push
adc
std
or
into
adc
cmp
sub
cmpl
popa
add
into
mov
int3
add
inc
add
daa
cs
enter
add
fs
xor
mov
lds
es
outsl
aas
in
stc
mov
sbb
leave
jmp
jmp
lret
pop
cmp
adc
clc
jl
ljmp
and
inc
bnd
jg
cmp
xor
mov
mov
push
mov
shll
out
ja
pop
shrb
scas
jmp
inc
mul
or
push
inc
mov
fwait
push
add
nop
lds
dec
dec
mov
fxch
xchg
aad
cmp
les
fnstenv
negl
jbe
not
shlb
cmp
sub
loopne
cld
cwtl
adc
fidivrs
decb
lea
xchg
mov
leave
sbb
xor
xchg
or
mov
jecxz
imul
pop
sbb
inc
lea
mov
les
clc
int3
push
jmp
imul
cli
pop
sarl
push
pop
shl
inc
cli
mov
addr16
inc
pop
inc
pop
push
pushf
xor
cmp
cmpsb
popa
mov
inc
cli
ja
mov
stos
ljmp
mov
push
fucomip
xlat
outsl
adc
rcll
movsb
mov
sahf
push
in
xor
add
inc
mov
and
pop
imul
pop
in
insl
push
jo
mov
pop
fidivrl
jg
subl
xchg
lods
daa
jecxz
mov
movsb
scas
adc
mov
jae
test
dec
es
xchg
imulb
xchg
in
neg
ljmp
dec
repnz
mov
inc
dec
mov
sub
sub
push
fsubrl
popa
into
or
cmp
mov
push
jecxz
jle
mov
js
xor
jnp
xchg
pop
xchg
ja
cmpsb
cli
jns
shl
fisttps
sub
lcall
enter
pop
pop
sub
mov
adc
or
scas
int
jo
out
test
mull
jnp
adc
or
inc
jecxz
inc
and
or
and
cmpsl
test
sahf
push
jno
loopne
cwtl
pusha
xchg
sub
repnz
sub
repz
cmp
out
mov
enter
data16
and
add
ds
xor
adc
aas
int3
cmp
sub
dec
es
cmp
xchg
inc
xchg
mov
movsl
testl
inc
mov
je
rcrb
and
sub
shll
add
fwait
cmp
xchg
adc
cwtl
push
dec
jl
mov
out
mov
xor
cmp
movsl
aad
lret
or
ds
int3
sbb
mov
inc
push
xlat
bound
cmp
cmpsl
dec
out
std
lea
nop
jmp
sub
inc
xchg
xchg
jno
lahf
push
sarb
pushf
xchg
sahf
lret
jmp
jbe
dec
shl
dec
fstl
xor
push
dec
xchg
and
mov
and
outsl
mov
cmpsl
mov
ds
shrb
push
cmpsl
push
xchg
stc
mov
jb
jbe
and
fisubl
add
mov
in
push
mov
xor
fucomi
fdivs
ret
push
push
xchg
jae
mov
adc
pop
dec
pop
adc
dec
push
fists
in
sub
mov
xor
sbb
or
inc
cmp
in
mov
inc
dec
daa
push
negb
pop
dec
push
scas
mov
popf
and
and
imul
je
mov
ret
jo
dec
push
or
test
jg
mov
mov
ja
jp
sub
xchg
cmp
push
or
arpl
arpl
mov
jns
stos
cmpsb
in
jns
sub
int3
insl
add
push
shll
pop
or
jnp
popf
in
adc
stos
sub
icebp
push
inc
jge
lock
dec
icebp
in
adc
dec
das
dec
jle
mov
or
dec
xor
and
pop
loope
insb
mov
data16
ja
inc
shlb
in
cs
mov
jo
test
xchg
sbb
int3
jp
shll
xor
add
xchg
sbb
out
fwait
lret
inc
sub
adc
popa
in
xchg
loope
ja
in
lcall
daa
mov
std
cld
bound
lahf
mov
lret
in
add
jg
push
pop
sti
sub
add
sub
jo
lcall
sbb
cmp
push
adc
cmp
sub
mov
addl
aam
sti
jo
push
aas
into
xor
je
sbb
xor
addb
push
adc
repnz
repnz
ljmp
xchg
clc
sbb
sub
push
mov
mov
orl
data16
lods
xchg
and
lods
adc
loope
pop
ss
shrl
jo
aaa
popa
imul
cli
mov
pop
and
xchg
jbe
add
mov
dec
sub
adc
je
jo
addb
cmpsl
sbb
data16
jae
aas
xor
push
mov
push
sbb
jl
push
dec
lds
pause
call
push
arpl
test
ret
jno
ljmp
jne
jg
pop
dec
test
cmp
cld
repnz
jno
mov
movsl
sbb
push
jp
sbb
arpl
test
es
cmp
add
jmp
shrl
pushl
dec
popa
ret
push
mov
out
cld
popf
rcll
xchg
cli
mov
ret
mov
mov
lds
hlt
push
imul
movsl
sub
adc
mov
push
ror
mov
insb
or
scas
jbe
ljmp
js
sbb
xchg
fsubrs
or
xor
push
f2xm1
lods
and
push
xlat
sub
repz
mov
ljmp
push
data16
xchg
outsb
ret
in
inc
mov
adc
add
fstp
stc
mov
and
jge
and
mov
jecxz
fnstenv
icebp
push
ficoml
add
std
sbb
sarl
mov
push
repnz
idiv
mov
insb
fsubr
adc
cli
lds
inc
sbb
popa
cmp
pop
xchg
ret
test
js
fcomps
aam
xlat
cmp
xor
cmpsb
imul
lods
jns
inc
fnstcw
cltd
icebp
das
lock
mov
inc
jl
and
add
lea
nop
std
es
add
pop
sub
mov
push
fcmovne
dec
xchg
test
fidivrl
dec
movsb
frstor
add
gs
sbb
mov
mov
sbb
mov
mov
and
aaa
andl
out
outsb
lea
lret
addr16
push
in
xor
push
jp
lods
pop
or
add
push
dec
inc
mov
jge
int3
lds
mov
lahf
or
dec
inc
flds
filds
iret
xor
ficompl
push
jmp
fwait
lock
daa
lcall
dec
inc
stos
dec
xchg
cltd
hlt
rcll
out
sbb
ss
jbe
inc
push
imul
test
stc
inc
outsb
mov
add
add
inc
mov
mov
stc
jnp
loop
add
call
cmp
push
push
mov
jno
push
pop
fbstp
add
fists
xchg
clc
sbb
push
ss
cmp
cwtl
adc
dec
jae
cmc
ja
dec
fists
andb
jg
or
rcrb
in
in
cmp
xchg
mov
mov
popf
mov
push
push
push
sbb
dec
push
pusha
and
add
dec
xchg
ja
push
mov
testb
sub
icebp
jnp
mov
adc
and
inc
das
add
lock
mov
out
xchg
jno
adc
jo
cmp
fcmovne
xchg
pop
jge
mov
jmp
inc
mov
popf
xor
push
lret
xor
dec
aas
fdivs
orb
mov
clc
xchg
pop
pop
inc
fiadds
jb
imul
data16
lcall
xchg
xchg
inc
fwait
lcall
loope
pop
das
imul
in
push
testl
nop
push
sbb
dec
or
mov
cmc
clc
sub
mov
sarb
mov
pop
movsl
fcomps
sbb
test
shll
inc
or
into
pop
nop
je
mov
shl
push
xlat
cmp
bound
jo
cmp
fisubrl
insl
lods
out
push
inc
xor
mov
cs
pushf
add
cmp
jmp
dec
ret
test
push
fcoms
xchg
lcall
jbe
pop
mov
jge
dec
jae
mov
pop
test
inc
cmpsb
push
push
dec
sbbb
push
lahf
push
xor
xchg
push
cld
jo
incb
cmp
decb
inc
out
sub
rol
mov
lods
xchg
ret
xorb
pusha
or
loope
lret
repnz
dec
ljmp
in
or
fs
int
popa
pop
mov
dec
fldt
xchg
and
or
jmp
sub
pop
rcpps
push
pop
mov
mov
sub
inc
inc
mov
sbb
scas
xchg
xchg
test
imul
add
adc
inc
out
ljmp
mov
jmp
xlat
bnd
cmpsb
loopne
pop
mov
test
or
lea
scas
mov
testl
push
pusha
cmc
leave
push
mull
test
pop
push
lds
jle
jae
into
rorb
cmp
xor
iret
inc
cmp
inc
dec
jnp
cmpsl
jno
hlt
in
inc
loope
lea
pop
jle
adc
cltd
rcr
inc
pushf
mov
cli
sub
fcoml
lcall
popf
inc
rcl
ret
jecxz
or
mov
test
pop
fcompl
mov
pop
adc
subb
mov
mov
sahf
xor
rcll
testb
cli
clc
test
mov
sub
mov
icebp
ss
and
movsl
daa
lcall
and
movsb
fcoml
fcmovnb
mov
adc
les
mov
pop
mov
es
jg
adc
jbe
and
push
insb
xor
es
pop
sub
addb
pushf
dec
test
sbb
fs
xchg
pop
into
repnz
loopne
sub
lcall
std
and
out
mov
mov
add
mov
in
xchg
lea
into
and
dec
jo
cmp
and
xchg
fidivrs
jl
dec
xchg
in
push
xor
sbbb
mov
fistpl
adc
pop
outsl
lcall
int3
cmp
ljmp
call
adcb
dec
call
push
orl
fsubrl
les
sahf
mov
loop
out
repz
aam
or
out
mov
shll
popf
aaa
sub
negl
mov
fsubl
xchg
xor
adc
pop
sbb
roll
dec
adcb
aaa
or
add
lcall
push
movsb
dec
aad
ds
repnz
mov
sbb
jg
sub
xlat
adc
loopne
scas
rol
filds
repz
xchg
leave
iret
jecxz
inc
negb
in
sbbl
xchg
aam
sbb
sub
pop
lret
decl
movsb
fwait
lods
cmp
out
jge
inc
rclb
sbb
pop
in
pop
imul
mov
nop
jle
pop
dec
addr16
cmp
xchg
pop
adc
sub
mov
inc
mov
adc
int3
or
sbb
pop
adc
daa
xchg
dec
clc
lods
sbb
rcl
aas
jae
jg
pusha
jae
push
lods
jg
std
ljmp
lock
jl
inc
pop
push
cmp
and
xor
test
cwtl
pushf
inc
cli
lods
int3
ljmp
popf
sbb
arpl
jae
sbb
rorl
ret
lcall
lcall
xor
mov
enter
mov
bound
add
cld
mov
cmp
dec
adc
mov
dec
adc
je
lahf
pop
aaa
lcall
xor
mov
jae
ja
xor
movsb
mov
ss
or
cmp
push
sub
mov
int
or
jle
jno
mov
enter
jmp
pop
iret
jns
lahf
jmp
andl
in
sbb
loope
scas
lret
test
lret
movsl
mov
xchg
clc
dec
fiadds
or
inc
fwait
es
add
mov
aas
rcl
sub
add
fisubrl
test
jp
adc
adc
mov
sbb
pop
popa
lcall
fildl
sub
mov
mull
adc
aad
imul
adcb
xchg
cmp
test
mov
adc
cli
cwtl
adcl
or
add
ja
mov
scas
out
int3
xchg
lods
sub
arpl
aam
in
xchg
cs
lods
inc
out
icebp
jge
lods
inc
xchg
shrl
dec
dec
popa
clc
or
data16
push
sub
jl
lods
push
sbb
fisttps
cld
loop
dec
subb
sbb
sbb
mov
push
xchg
fnstsw
xchg
fstpl
and
dec
dec
rcrb
dec
jge
mov
adc
lock
dec
dec
xchg
loop
fcoml
mov
imull
sti
jl
mov
add
push
fcmovnbe
mov
adc
insb
or
lahf
cmp
ljmp
fidivrl
sbb
in
adc
lock
mov
imul
pop
sub
dec
jmp
sub
fadd
cmp
xor
xor
sub
inc
dec
fisubl
xor
mov
cltd
dec
mov
mov
pop
enter
add
add
int3
sti
mov
sub
adc
pop
dec
in
mov
test
ljmp
or
or
inc
out
pop
repnz
push
enter
shll
and
fisubl
pop
push
jb
push
push
and
sub
cmp
popa
je
xchg
cmp
dec
mov
sbbl
push
lods
push
inc
clc
aas
scas
ljmp
notl
fs
ficompl
dec
aam
dec
cs
rolb
xor
lods
lds
loopw
mov
je
iret
sbb
mov
aad
add
pop
int
out
dec
rorb
icebp
mov
sub
jg
mov
pop
push
xor
in
mov
and
aam
xchg
in
xchg
xor
sahf
lcall
cli
nop
add
out
push
or
adc
pusha
xchg
pop
mov
mov
cli
bound
fdivp
or
pusha
push
jne
out
dec
xor
add
mov
insb
cli
cmp
cltd
lock
mov
lcall
mov
xor
xchg
sarb
in
mov
hlt
jne
and
int
push
cmp
cmp
cmp
inc
inc
and
test
pop
inc
push
sub
cmp
xchg
popa
aad
mov
or
or
jmp
stos
and
pop
repnz
fnstsw
and
lea
sub
aad
orl
mov
addr16
pop
ret
insl
mov
mov
rcrb
push
in
cwtl
in
mov
ret
cli
js
fsubl
cld
sbb
ds
std
add
loope
cs
inc
mov
and
jg
inc
sub
sahf
inc
push
test
push
scas
adc
dec
push
push
mov
cwtl
mov
mov
aam
dec
movsb
mov
jl
pop
clc
pop
adc
nop
out
dec
cwtl
and
repz
mov
push
lods
or
fisttps
adc
xchg
dec
lock
or
dec
pop
insb
jecxz
fs
lock
mov
repz
mov
mov
and
dec
jp
dec
adc
dec
mov
mov
sbb
insl
sti
es
ds
lock
in
ljmp
adc
cmpsl
iret
add
cmp
add
sahf
push
jge
std
rolb
jmp
push
adc
pop
mov
ret
out
insb
int3
adc
ret
in
push
hlt
jnp
and
xchg
sbbb
jb
into
test
cld
mov
into
sub
jle
add
pop
push
jp
mov
sbb
adc
xor
jnp
fldcw
xor
ljmp
inc
loope
sub
aas
cmp
bt
push
in
fistpl
stc
sub
sub
xor
cmpsl
jae
shr
or
cld
repz
movups
nop
inc
mov
in
out
aaa
shrb
mov
add
cmpsb
cmp
mov
add
mov
xchg
addr16
jmp
jle
lahf
jne
sub
sahf
jnp
fwait
testl
xchg
inc
mov
mov
cwtl
cmp
xchg
test
and
jecxz
sbb
fidivrs
xor
repz
adc
ffree
jb
ret
add
pop
pushf
inc
pop
sub
jo
mov
push
sub
adc
mov
clc
inc
and
or
fisubl
fistl
adc
jno
mov
std
xchg
jp
gs
xchg
loopne
out
lods
and
mov
add
cmp
shr
pop
cld
jmp
push
adc
stos
push
popf
sub
in
cmp
mov
push
movsl
iret
xchg
or
pop
faddl
inc
sbb
cmp
loope
inc
or
xchg
mov
jbe
cmp
lds
pop
repnz
push
mov
sbb
push
xor
and
push
bound
mov
sub
out
iret
cmp
push
jns
loop
pop
or
adc
sbbl
lret
dec
xchg
fimuls
and
stos
int
pop
and
icebp
mov
add
xchg
les
das
cmc
pop
push
mov
ret
ss
je
xchg
pusha
pop
push
sti
pop
out
daa
je
loop
cmp
mulb
in
add
mov
pop
jl
push
subb
scas
int
fsub
fsubr
negb
rcl
int3
adc
sbb
sbb
sub
pop
dec
fcoml
inc
cli
addl
adcl
sub
ja
imul
imul
daa
mov
jae
rcrb
cmp
xlat
mov
push
and
lds
mov
imul
bound
mov
fwait
idivl
lods
mov
sti
cltd
aaa
dec
mov
and
imul
or
mov
cmp
pop
push
mov
mov
ffreep
insl
inc
or
sbb
icebp
jp
jecxz
xchg
ret
scas
xchg
int3
fcmove
mov
imul
cs
pop
data16
jo
and
mov
mov
mov
test
ror
dec
scas
outsb
insl
push
add
pop
shl
arpl
pop
xor
lods
adc
jae
jl
ret
inc
fimull
rcll
test
jmp
data16
mov
inc
sub
imul
mov
sahf
insl
and
or
and
dec
fildll
ficoms
push
add
jno
enter
xchg
in
dec
add
dec
sahf
cmp
mov
jo
mov
stc
lods
stc
xlat
out
lahf
js
lock
dec
roll
adc
and
push
enter
loop
pusha
jle
mov
imul
dec
mov
xchg
cmp
dec
sbb
mov
adc
mov
test
in
mov
loopne
jbe
outsb
scas
xchg
insl
mov
jo
lret
scas
ret
repnz
push
repnz
lahf
sub
in
std
or
shr
mov
cmp
dec
inc
and
mov
add
dec
lds
sbb
stos
xchg
inc
sahf
cmpsb
outsl
push
sti
cmpb
stos
add
jl
sub
adc
mov
pop
pop
les
dec
orl
xchg
pop
and
mov
clc
lock
inc
xor
loopne
clc
loope
mov
les
xchg
notb
adc
dec
movsl
cmp
xchg
movsb
dec
lret
sbb
push
cmpl
sub
es
cmc
adc
cmc
fldpi
ds
imul
ljmp
mov
cli
or
shll
sbb
les
mov
jp
setne
div
outsb
mov
sbb
or
inc
jmp
insb
dec
into
inc
lret
gs
cmp
pop
dec
dec
sbbb
dec
pop
jge
enter
outsb
lods
in
in
dec
dec
dec
xor
bound
push
add
xor
popf
sbb
pop
test
inc
mov
mov
mov
cmc
jge
js
mov
lods
bound
inc
or
inc
cmp
jbe
mov
shrl
pushf
or
mov
std
dec
jns
enter
shl
xchg
mov
fstpl
mov
sub
dec
dec
add
bound
sbb
add
and
inc
ja
sub
lret
popa
fbld
and
iret
addl
jnp
popa
jae
popa
pop
mov
in
loopne
and
adc
jo
xor
popf
das
dec
or
xor
pop
outsb
das
mov
and
cmp
xchg
inc
popa
fidivl
inc
xor
aas
lret
sbb
push
les
sub
clc
iret
xor
push
das
out
cmp
xor
aaa
outsl
out
icebp
iret
push
inc
cmp
and
push
in
mov
xchg
daa
xor
cwtl
mov
cmpsl
aad
cmp
rep
les
mov
pop
out
cmp
inc
addr16
lods
cmp
imul
rcrl
mov
mov
mov
xchg
lock
shlb
out
push
mov
inc
jno
scas
lret
lock
sti
lods
test
insl
dec
mov
or
mov
jbe
or
lds
sysexit
jle
je
movsl
aaa
jp
movsl
pushf
dec
in
cmp
dec
pop
push
shrl
hlt
pop
and
mov
loopne
test
adc
xlat
mov
repz
push
sysret
jo
in
jl
les
fdivrl
imul
sub
dec
and
add
cmp
ljmp
jle
cmp
push
push
ret
cmpsl
aam
ds
rcll
jmp
push
jns
sbb
inc
adc
jecxz
repz
nop
pop
ss
cmpsl
lods
daa
sub
test
divb
lds
and
leave
ret
or
icebp
stos
stos
adc
jne
xchg
cmp
and
or
into
push
prefetch
add
jns
push
push
adc
push
lahf
loop
adc
pushf
push
inc
ljmp
clc
fimull
jg
in
mov
xchg
add
mov
cmpl
call
jnp
pop
sub
push
xor
fcoms
pop
mov
cs
and
and
dec
addr16
xor
mov
pop
mov
addb
je
imul
flds
add
arpl
jge
lahf
dec
push
add
dec
fstpt
xchg
dec
mov
pop
addr16
shlb
std
adc
lea
test
mov
adc
daa
sub
mov
mov
inc
outsb
aas
jle
mov
sub
sti
xchg
xchg
and
cmpsb
pop
insb
push
cmc
rol
jo
sub
cmp
adc
xchg
popf
xchg
or
insl
add
jb
in
mov
es
fmuls
fs
fadd
mov
push
inc
sbb
add
shl
sub
cltd
fistl
sub
inc
cwtl
pusha
mov
push
mov
mov
inc
aad
je
push
pop
popa
test
dec
mov
push
inc
mov
inc
cwtl
xchg
mov
dec
xchg
add
ljmp
xor
shlb
mov
cmpb
and
leave
ret
jbe
jecxz
sahf
jns
lods
adc
aam
inc
rclb
add
jns
push
xchg
and
cwtl
mov
sti
mov
jg
add
insb
cli
fdivrs
in
cli
dec
les
fwait
stos
mov
mov
sub
mov
outsb
out
aaa
adc
adc
in
test
pop
push
adc
fimuls
pop
icebp
push
lods
sbb
lock
or
adc
dec
mov
and
adc
pop
test
cmp
cmpsl
fldcw
repnz
bound
cwtl
mov
sbb
and
dec
add
fs
out
push
mov
mov
movsl
adc
loop
push
fadd
pop
aad
mov
cmp
xor
push
and
sahf
mov
out
mov
ret
adc
pop
xor
jne
push
mov
xor
mov
xor
push
sbb
pusha
jge
imul
sbb
ret
adc
insl
or
pushf
aad
lods
push
xor
xor
loopne
and
mov
lahf
mov
or
std
jo
daa
out
sbb
pop
outsl
rolb
mov
cmp
xor
popf
nop
divb
sbb
cmp
jae
fucomi
mov
sahf
rorb
jecxz
inc
insb
inc
cwtl
clc
pop
sub
mov
mov
jmp
fimuls
push
cmp
mov
jp
jp
fcomp
popf
mov
and
mov
or
push
sub
mov
or
lods
repnz
sub
pop
into
add
lods
stos
lods
ds
imul
adcb
pop
inc
xor
xlat
add
cmpsb
lahf
cmp
mov
push
mov
lcall
jno
sbb
pop
or
adc
mov
jg
jo
inc
adc
lret
aas
aaa
outsl
add
insl
stc
call
push
jecxz
or
sub
testb
mov
dec
cmp
pop
fcoms
xlat
lods
inc
cmp
stc
lret
outsl
adc
out
or
adc
push
das
ss
xchg
dec
fadds
xchg
adc
sbb
shlb
ret
add
cmp
cli
ja
xor
leave
jbe
inc
ja
movsl
out
fwait
dec
lret
fisubrs
push
pop
ljmp
push
dec
in
pop
rcl
lds
pop
add
and
fcomps
sbb
mov
divb
std
jnp
jp
pop
adc
lock
hlt
and
sbb
jg
cwtl
daa
decb
lea
jne
shrl
dec
mov
jb
stos
pop
sti
test
push
pusha
cs
xchg
dec
loopne
orb
mov
mov
push
push
add
enter
daa
iret
push
stos
scas
es
push
and
and
cmp
inc
pushf
and
out
push
lahf
into
lods
fs
in
xor
mov
fdivrs
repz
enter
jmp
sbb
jb
mov
test
test
sbb
dec
outsb
ds
cmp
fisubl
pop
aam
lahf
dec
nop
xlat
cmp
hlt
cmpsl
out
lret
push
and
pop
mov
or
nop
js
std
es
das
into
filds
jecxz
cmpsl
cmp
add
jg
movsb
mov
dec
fs
enter
ret
outsb
loop
xor
and
inc
xor
shll
dec
ret
and
or
xor
jno
or
aad
psraw
push
pop
jb
mov
shlb
mov
movsl
bound
jo
pop
push
icebp
ljmp
and
xchg
in
mov
int
stos
push
or
inc
pop
repz
mov
bound
sarb
psrld
loop
pop
pop
ret
push
xchg
mov
lds
xchg
fcomp
dec
popf
pop
mov
mov
orl
in
xchg
and
arpl
insb
and
neg
pusha
sub
mov
icebp
sbb
xor
pop
dec
adc
pushf
mov
jno
dec
cmc
cmp
dec
test
mov
inc
jne
outsl
jae
fdivr
js
ljmp
sbb
xor
xchg
or
pusha
and
std
out
daa
mov
or
fnstenv
pop
add
jmp
jbe
lcall
cmpsb
jae
mov
jns
data16
jns
xchg
fidivrs
ljmp
inc
mov
mov
stos
cmp
subl
das
inc
outsl
fldcw
xor
cmpsl
test
lods
adc
mov
or
push
fwait
sub
mov
jmp
cmpl
int3
cwtl
or
lea
sub
xchg
jne
push
xchg
push
lods
call
je
andb
leave
mul
sub
sbb
sahf
ficomps
mov
adc
inc
mov
pop
imul
push
into
mov
int
add
or
sbb
nop
sbb
cmpsl
add
jne
loopne
sbb
mov
gs
sti
std
clc
xlat
aad
xor
xchg
fstl
cmp
rcrl
jmp
push
mov
jnp
pop
hlt
daa
pop
and
insl
pusha
iret
push
or
push
and
mov
rolb
out
push
bound
mov
add
mov
xor
push
es
cmp
mov
int3
movsl
mov
sub
or
xchg
push
aas
xor
add
addl
sbb
xor
inc
cmpl
pop
push
fisubs
xchg
adc
fcmovb
jo
adc
nop
cmp
lods
stos
dec
push
je
stos
push
push
shrl
adc
mov
cmp
pop
xorb
push
pop
imul
fidivrs
mov
fdivs
test
les
push
and
outsb
cld
sbb
xchg
aam
cmp
aaa
dec
jmp
push
std
cld
inc
lret
mov
repz
jmp
ds
hlt
stos
xchg
xchg
or
fcomps
cmc
je
cld
or
jnp
mov
insl
test
in
mov
cmp
mov
dec
mov
aaa
push
movsl
test
int
jne
and
pop
jp
imul
sbb
int
mov
lret
pop
bound
sti
push
adc
loope
sub
jmp
xchg
test
cmovg
sti
dec
add
xlat
lods
pop
lret
push
or
pop
sub
dec
or
fidivrl
leave
ljmp
lods
outsb
mov
or
ffree
arpl
push
negl
nop
stos
mov
or
mov
scas
loopne
push
shl
fcmovb
adc
xor
rcr
cmpsb
leave
xchg
jle
sbbb
ljmp
test
dec
pop
repz
jmp
int
pusha
sub
dec
mov
pop
adc
mov
in
push
sub
mulb
shl
cmp
andb
sahf
std
ret
into
sub
xchg
out
mov
jl
push
jae
sub
sbb
lds
stc
pop
icebp
push
call
jae
dec
leave
arpl
clc
shrd
ds
mov
psrlq
aad
fcompl
xor
daa
stos
jge
jmp
dec
fmul
lret
shr
jns
stc
test
aas
mov
sbb
and
mov
mov
push
ja
dec
jae
jmp
sub
add
lods
jge
push
movsl
repz
cmp
mov
cltd
jne
cmp
add
loope
out
mov
pop
cwtl
js
popa
jecxz
add
add
push
xor
in
jle
sahf
and
push
sub
xor
movsl
in
jl
push
fldl
rcl
and
popf
int
insl
add
sub
mov
adc
imul
and
push
adc
push
dec
hlt
adc
jl
rorb
cmpsl
xchg
or
inc
push
mov
sbb
popf
mov
lcall
das
xchg
xorl
push
pop
clc
sub
mov
mov
add
out
mov
xchg
jmp
scas
in
jg
roll
and
ds
xor
loopne
jne
or
rolb
jge
sbb
jbe
dec
rol
js
inc
into
sub
mov
jno
stos
or
addb
sbb
inc
and
loope
lds
add
cwtl
mov
xor
mov
dec
sbb
ficoml
mov
mov
sub
and
jle
div
movsl
incl
dec
cmc
mov
adc
aaa
xor
ljmp
xchg
cmp
and
loopne
sub
inc
insb
loopne
add
mov
mov
insl
in
cwtl
test
sub
lcall
dec
jl
push
inc
cmp
addb
and
jge
mov
sarb
idiv
ret
cld
nop
cmp
rcrb
clc
xchg
sub
aaa
or
sbb
outsb
enter
shlb
adc
or
int3
fdivl
pop
xor
mov
icebp
fwait
cld
daa
mov
xor
xchg
inc
ja
lret
movsl
pushf
icebp
or
sarb
shrb
cwtl
fiaddl
inc
rcll
enter
or
or
jp
outsb
mov
cmovbe
idivl
sub
mov
mov
lret
sbb
imul
sbb
pop
sbb
cmpb
subl
mov
outsl
jl
sub
stc
std
ljmp
lds
jo
fwait
mov
sbb
cli
and
sub
pop
stos
rorb
sub
imul
notb
idiv
push
add
test
mov
scas
orl
push
jns
inc
dec
in
bswap
sti
mov
push
ds
mov
jno
and
xchg
jl
cmp
xor
imul
sbb
scas
or
jae
test
jecxz
mov
add
out
rol
add
ret
cmp
cltd
imull
movsl
loop
fadds
sub
push
arpl
sbb
aam
rolb
mov
mov
es
sbb
jb
lock
sbb
or
cmp
mov
cli
es
lahf
push
loopne
and
dec
xchg
movsl
jbe
fldl
add
out
mov
imul
jge
in
std
insb
lds
popl
jl
jl
sbb
mov
sub
out
jle
test
sahf
jno
pop
pop
and
xchg
ss
scas
pop
mov
or
or
test
mov
push
mulb
mov
scas
adc
and
push
sbb
push
xchg
aad
sbb
and
dec
or
pop
and
popa
movsl
or
sbb
imul
pushf
mov
lods
shl
pop
xchg
enter
dec
adc
or
int
sti
xlat
test
mov
ret
mov
cmpsb
and
mov
jl
mov
xor
or
lea
or
sub
shl
add
push
sti
out
cmpb
mov
out
arpl
push
jle
bound
outsl
mov
cmp
dec
jae
jno
out
add
arpl
xor
mov
or
loope
xchg
cmp
cs
std
sub
popa
jl
xor
cmp
or
stos
jp
pusha
xor
inc
mov
fwait
stos
sbb
add
stos
xor
mov
nop
fwait
jo
jmp
jo
cwtl
push
adc
sub
add
sbb
adc
in
mov
inc
sbb
adc
jb
inc
rorb
mov
mov
mov
bound
inc
jl
or
out
outsl
jp
stc
decb
cltd
movsl
push
scas
mov
jnp
xor
and
mov
xor
jge
push
sub
or
faddl
mov
cmc
bound
lods
mov
mov
xchg
push
cmpsb
jb
out
fstl
xchg
cli
mov
sbb
jp
mov
mov
jle
pop
push
xor
movsl
inc
push
inc
into
aam
arpl
lahf
repnz
sub
or
or
int
fwait
jmp
sbb
xor
popf
int
xor
jae
sbb
fwait
aam
test
mov
push
adc
jbe
loop
pop
pop
mov
gs
dec
ror
mov
icebp
int3
mov
push
sub
cltd
and
lods
fistpll
fstl
and
dec
pop
pop
xchg
jmp
sub
pop
or
mov
sub
or
shll
enter
or
inc
sbbb
and
pop
lahf
insl
mov
and
jg,pt
pop
push
fisttps
in
dec
movsb
loope
mov
aad
ret
xor
pop
sub
and
jl
sbb
push
ret
clc
xorb
xchg
js
push
nop
aaa
fimuls
push
inc
push
lret
jno
adc
sbb
inc
into
jp
repz
sub
xchg
mov
xchg
fistps
xor
pop
and
pop
push
mov
ret
inc
jg
or
mov
dec
outsl
lcall
xor
mov
int
lret
pop
xchg
divl
cmp
mov
insb
mov
xchg
add
or
repz
ds
mov
sti
adcb
sbb
pop
mov
testb
or
xchg
nop
out
js,pt
mov
mov
xor
xchg
pop
adc
xor
movsb
sbb
mov
xchg
out
and
pop
cld
and
cmp
xchg
xchg
std
shrb
sub
cmp
sbb
out
add
push
dec
adc
mov
jne
das
pop
cmp
insl
in
std
lods
jmp
pop
divl
sbb
insb
daa
and
loopne
mov
add
push
dec
imul
cmp
xorb
jmp
test
es
jbe
pushf
mov
cmp
inc
and
jae
or
mov
pop
mov
jle
sahf
fcmovbe
out
inc
mov
les
div
ret
fwait
mov
xorl
in
enter
mov
test
sub
lock
add
test
xor
jecxz
les
js
test
cwtl
stos
xor
lahf
cmp
outsl
push
mov
cld
enter
pop
mov
mov
push
push
aas
xchg
sahf
call
dec
push
pusha
enter
push
pop
sbb
into
in
lret
and
test
push
xor
ja
xor
in
movsb
lea
into
mov
pop
outsl
jmp
push
fisttpl
dec
or
sbb
rcr
mov
cmp
cwtl
call
outsl
mov
xchg
in
xchg
loope
repnz
popa
xchg
push
in
test
sub
mov
mov
shl
rclb
push
dec
mov
nop
aas
push
cltd
mov
shl
pop
inc
xor
xchg
jecxz
outsl
or
cltd
xor
cmp
jb
js
ret
jns
aam
aam
add
ret
paddw
xor
mov
add
xor
xor
idivb
loop
pop
inc
and
int
sbbl
lret
xchg
fnsave
popf
ds
js
dec
in
ljmp
push
xchg
push
jge
mov
daa
movsb
xor
sbb
mov
sbb
decb
and
mov
clc
data16
stos
lret
test
std
pop
cmova
mov
xchg
jmp
outsl
rclb
enter
pop
insb
xchg
cwtl
js
ficoms
adc
push
shl
leave
add
dec
jbe
jle
mov
jmp
xor
test
dec
cmp
jae
sti
pushf
outsl
fcomp
aam
jno
push
mov
dec
mov
ds
aam
sbb
push
dec
movsl
push
dec
ss
cmc
dec
scas
push
sub
dec
into
mov
ficoml
cmp
int3
push
and
sub
sbb
test
add
bound
adc
je
pushf
adc
inc
shlb
cmp
in
bound
push
xor
lret
cltd
sbb
sbb
and
push
into
xor
xchg
push
aam
lcall
daa
mov
out
out
in
push
dec
stos
mov
sub
cmpsb
pushf
int
ds
inc
ss
jle
mov
movsl
shll
inc
lods
sbb
or
xchg
cwtl
push
in
jb
icebp
cmpsl
icebp
cmp
out
add
mov
cmc
stos
pop
lods
dec
loope
lret
jge
pop
addr16
ljmp
test
out
pop
push
sarl
mov
and
pop
adc
cmp
push
mov
adc
es
dec
nop
xor
sbb
lods
jmp
test
xchg
pop
iret
mov
push
push
int3
pop
pop
rol
dec
in
fisubrs
fcmovbe
jns
xchg
js
mov
daa
jbe
jo
repnz
inc
add
push
add
xchg
inc
lea
call
cmp
ret
adc
popf
add
pop
adc
insb
popa
inc
cmp
sub
inc
or
les
inc
aad
dec
dec
dec
cwtl
es
daa
cmp
addr16
mov
repnz
cs
mov
xor
sarb
jle
mov
sbb
mov
or
cmp
dec
das
int3
andb
enter
lock
dec
sub
jg
mov
or
mov
cmc
jg
mov
stc
jnp
mov
leave
xchg
or
sub
aad
in
cltd
and
aas
mov
lcall
out
mov
pusha
pushf
fisubs
bound
push
aam
push
pop
xor
movb
inc
mov
andb
test
in
shlb
and
imul
jmp
jmp
aad
mov
sarb
jne
aaa
push
mov
cmp
cmp
push
jl
and
call
add
pop
ror
jnp
les
rcrb
xchg
ja
call
ret
dec
jmp
lcall
pop
dec
and
dec
mov
rcll
pop
shlb
stos
add
lcall
subb
xchg
pushf
push
lret
test
in
mov
xchg
ja
add
clc
or
and
stc
adc
xchg
stc
mov
xor
jnp
sar
orb
cltd
jge
inc
fisttpll
add
lret
shlb
mov
or
daa
sub
sti
pop
insb
loop
loopne
pop
lahf
inc
pinsrw
mov
mov
cmpb
xor
loope
cmpsb
out
test
notb
int3
ds
gs
pusha
dec
push
test
std
jno
mov
sbb
out
iret
mov
adc
mov
mov
inc
test
adc
push
mov
mov
mov
xchg
pop
cmp
decl
les
pop
add
jns
xchg
call
fmul
xchg
pop
rcll
filds
jp
loope
sti
int3
das
fbstp
lods
lds
mov
inc
pop
pop
gs
push
mov
pop
ja
stc
scas
rcl
lock
scas
fldenv
ja
leave
into
test
sub
fbld
in
mov
popa
ficomps
mov
stos
test
and
mov
insl
jno
mov
repz
mov
adc
in
imul
lods
sbbb
loope
pop
stos
repnz
sti
xchg
aas
mov
rcr
imul
push
or
dec
test
cmp
sbb
pop
in
in
xchg
insb
stc
insl
cmp
dec
and
push
std
ficomps
mov
fwait
pop
repnz
mov
inc
test
push
aam
sub
int
or
int3
out
lds
fistps
push
hlt
push
aas
pop
repnz
inc
and
or
sahf
push
mov
dec
es
insb
jp
lret
fs
push
mov
leave
cmp
pusha
add
sbb
add
adc
inc
sub
adc
outsl
in
pushf
mov
xor
inc
clc
push
popf
rolb
adc
fcmovb
sahf
add
mov
cmp
adc
xlat
cmp
mul
pop
add
xchg
dec
xlat
pop
or
iret
stc
or
cltd
pop
outsb
mov
out
cli
mov
cmp
or
push
stos
leave
icebp
fisubrs
jnp
jl
cmp
mov
cmpb
mov
jecxz
cmp
adc
adcl
cltd
sub
and
clc
cwtl
fwait
cmp
int3
cmp
xchg
push
movsl
subb
stc
mov
in
cltd
test
jae
lock
in
loopne
sbb
fs
jmp
int
and
fimuls
jecxz
pop
sti
pop
shll
pmullw
popf
cmp
insb
and
pusha
mulb
mov
fdiv
jl
aaa
mov
aam
mov
dec
out
sbb
xor
cmpb
stc
sub
dec
xlat
xchg
cmp
ret
out
movsb
int3
and
xlat
pusha
scas
mov
jne
mov
mov
push
ja
push
sub
sbb
mov
xor
nop
xor
xor
addb
jbe
pop
in
add
jae
call
fwait
lret
push
inc
fs
xlat
fisttpll
movsl
pop
jle
nop
push
mov
mov
imul
iret
push
pop
dec
or
outsb
push
mov
jbe
xor
imul
add
insl
dec
xor
sub
dec
popa
gs
mul
or
jo
jae
mov
push
pop
stos
clc
mov
push
xchg
jle
outsb
loop
jbe
mov
dec
pop
std
cmp
aad
xchg
bts
test
sahf
gs
jb
pop
repz
jo
cmp
mov
repnz
lcall
pushf
push
jb
stc
mov
push
push
mov
mov
seto
sbb
adc
sahf
mov
outsl
stc
and
out
stos
insb
insb
imul
fidivs
jae
xor
outsb
sub
dec
out
and
int
cmc
aas
je
cwtl
idivb
dec
adc
test
xor
sub
push
mov
pop
xchg
mov
inc
add
test
int
jl
sub
aas
sbb
or
xchg
in
sub
inc
sbb
xor
jbe
outsl
lock
inc
dec
loope
sub
jae
sub
leave
daa
sbb
push
popf
jb
adc
xchg
js
jns
jg
lret
mov
test
jg
ds
lods
inc
sub
mov
enter
es
or
mov
adc
in
mov
mov
xchg
cmp
mov
shrl
icebp
enter
add
stc
stos
sub
aad
xor
push
test
adc
lods
out
xchg
jbe
icebp
sbb
mov
add
bound
xchg
subl
sbb
xor
pop
jmp
das
dec
nop
mov
or
push
out
jge
fidivrs
fmuls
iret
aaa
out
neg
mov
sbb
push
cmp
jp
xchg
xchg
shrl
mov
sbb
xor
mov
cltd
lds
jg
jb
adc
inc
movl
stos
out
mov
sti
lods
test
fs
in
aaa
pop
mov
dec
enter
cmp
adc
lahf
mov
mov
xchg
pop
pop
repz
inc
mov
mov
fneni(8087
mov
cmp
and
push
js
scas
fstl
fnsave
pop
std
cmp
inc
dec
btr
js
mov
mov
push
mov
mov
iret
call
add
stc
pop
mov
inc
pop
xor
jle
add
out
mov
push
cli
rcll
inc
test
call
lods
jg
mov
das
es
arpl
mov
mov
jae
cmpl
popf
add
dec
and
push
inc
pop
in
mov
sub
pusha
int3
add
inc
mov
lcall
or
xor
test
jle
out
push
dec
adc
and
lock
or
xlat
xchg
in
dec
adc
inc
ja
jno
or
addb
popf
cltd
adc
dec
ds
es
imul
xor
fs
push
icebp
xchg
insb
test
jg
cmp
stos
sub
jae
loopne
popa
ret
push
dec
sbb
inc
mov
push
dec
add
sbb
cmp
std
dec
xchg
mov
mov
add
push
dec
popa
aas
add
jne
ljmp
in
inc
pop
add
imul
dec
stos
dec
xchg
ret
repnz
lea
lods
mov
pop
ja
cmpsb
sbb
xchg
mov
jp
loop
leave
jmp
loopne
rclb
lcall
pop
add
mov
cli
sub
push
and
or
hlt
add
popf
mov
push
sbbb
ss
mov
or
dec
jno
add
cmp
imul
jns
add
leave
test
pop
lods
daa
or
sub
fcompl
stos
mov
add
imul
rclb
roll
dec
xchg
dec
push
jns
in
imul
sbb
call
push
test
jp
mov
inc
adc
test
mov
aad
push
pop
sub
shlb
sub
push
aas
or
lahf
scas
and
lret
add
mov
pop
pop
and
push
fwait
jg
les
dec
stc
popa
lods
fistpll
push
or
into
loop
data16
and
sbb
fmul
cmp
inc
and
inc
adc
push
mov
mov
pop
push
sub
stc
call
lret
scas
int
inc
mov
jne
pop
cmp
jb
mov
sbb
mov
lods
sub
sub
push
mov
ljmp
mov
in
loop
dec
mov
mov
sbb
push
es
dec
movl
adc
pop
ret
xlat
add
fidivl
cmpsb
or
sub
sub
push
ret
hlt
push
xchg
fisubrl
mov
loope
push
aad
loopne
imul
pop
cli
cmp
loope
mov
jae
loope
insl
sbb
jae
stc
imul
pop
sti
fiaddl
push
repz
mov
jb
addb
enter
aaa
inc
shl
and
jns
mov
pop
das
gs
pop
loopew
int3
mov
loop
adc
in
mov
mov
inc
mov
dec
xchg
adc
pop
stos
mov
sbb
shrl
hlt
aaa
xchg
jge
mov
xor
test
or
out
pop
cwtl
sbb
call
hlt
sbb
lcall
jge
movb
movsb
sub
xor
pop
std
cmp
fldenv
push
fildl
jecxz
js
adc
pop
xor
pop
idivl
or
mov
ss
arpl
push
xchg
lret
and
in
push
mov
or
cmpsb
xlat
jnp
psubd
dec
xor
cmp
mulb
ja
add
scas
stos
adc
arpl
popa
jae
push
sub
xchg
cmp
cltd
and
data16
cltd
jbe
pop
out
or
cli
jmp
bound
sbb
shl
pop
xchg
rclb
loop
std
ret
sbb
ds
mov
mov
xor
or
add
bound
pushl
jecxz
pop
cmp
pusha
arpl
dec
mov
dec
std
pop
das
xchg
sarb
loopne
cmp
cmp
sub
scas
shr
mov
loopne
aad
mov
fstps
icebp
cld
pop
dec
outsb
ss
popa
popa
dec
inc
sub
sahf
out
ffree
test
out
cmp
jo
testl
jb
aas
pop
aas
pop
mov
std
mov
sub
push
scas
lcall
push
mov
fisttpll
xchg
iret
cmpb
je
jg
and
shr
xor
jno
dec
fsts
setno
js
mov
inc
rcrb
je
dec
notl
dec
mov
bound
xor
mov
fadds
scas
add
sbb
mov
fwait
sarb
mov
lods
jne
fildl
mov
cmpb
lods
cld
inc
xchg
xchg
shrb
mov
or
dec
out
adc
dec
inc
nop
jb
or
xchg
inc
inc
jle
pop
sahf
push
xchg
movb
out
lea
aam
andl
jae
cmp
call
lret
push
inc
inc
shl
push
test
and
in
fadds
cwtl
outsl
imul
mov
cld
sbb
inc
out
lods
xchg
movsb
mov
and
pop
or
rclb
dec
mov
push
movsl
rol
and
push
lcall
sub
sub
nop
dec
lcall
bnd
movsl
xchg
negb
cmpb
jns
scas
push
jbe,pt
into
cwtl
fistl
adc
testl
stc
fs
roll
push
pop
mov
cmpsb
scas
cli
cmp
mov
cmp
pop
nop
fisttps
stc
and
dec
jbe
into
or
pmullw
ret
adc
movsl
ja
xor
movb
mov
adc
xchg
ror
jmp
pop
xchg
jp
sbb
mov
aaa
faddp
pushf
aam
insl
loop
pop
inc
xchg
jecxz
and
test
in
pushf
xchg
data16
xor
inc
add
mov
mov
jnp
out
sub
add
cmp
mov
lods
dec
lea
leave
das
fwait
jg
inc
and
dec
cwtl
scas
stos
repz
cmc
jecxz
add
fildl
push
sub
jmp
shlb
dec
pushf
push
imul
mov
pop
out
push
push
shll
ja
fidivrl
cmp
fst
icebp
xlat
mov
and
mov
xchg
lods
in
xchg
push
cmp
pusha
mov
cmp
mov
out
add
cltd
scas
add
ljmp
aad
pop
jge
leave
xor
aas
ret
inc
jecxz
mov
push
pushf
pop
aad
push
loope
sub
leave
sub
repnz
aad
and
nop
push
inc
mov
ds
sub
mov
pop
or
popf
test
push
pop
ja
jno
sub
jmp
jge
adc
movsb
dec
or
popf
mov
dec
enter
rorl
jbe,pn
stos
push
and
and
cmp
fcomps
gs
push
dec
xlat
sbb
in
jns
cmpl
rol
cmp
scas
xchg
adc
sub
in
adc
xchg
jne
xchg
cs
leave
aam
mov
sub
imul
fistpl
push
sub
xchg
add
mov
add
mov
sub
sub
dec
mov
xorl
imul
nop
push
lds
icebp
dec
add
stc
push
ret
in
ja
mov
cmc
rcrb
mov
push
xchg
sub
sub
fninit
adc
xchg
cmp
inc
push
sbb
lds
loope
xchg
jl
dec
out
mov
stos
in
pop
adc
adc
fistpll
lcall
push
sti
lret
movsb
hlt
sbb
sub
inc
or
or
sbb
sbb
xor
or
dec
test
add
fstl
adc
xchg
pcmpgtd
fsubl
pop
pop
push
int
out
xor
fs
outsl
pop
rcll
push
xchg
dec
addr16
fistl
push
sbb
mov
loop
ds
dec
iret
je
scas
hlt
roll
shlb
je
test
fwait
lcall
and
aas
cmpsl
or
xor
mov
inc
xor
out
cs
pusha
ret
jb
dec
adc
sbb
adc
das
cmp
xchg
fcmovb
lea
aad
lods
inc
mov
popf
scas
insl
andb
faddl
mov
cld
mov
mov
pushf
dec
lea
xor
cltd
ss
xchg
and
mov
lods
int
pushf
mov
test
mull
pop
aam
je
or
jecxz
in
xchg
aam
inc
and
sub
pop
mov
in
fdivrl
loope
push
lock
mov
mov
test
fld
jnp
repz
and
xchg
push
sbb
popa
cwtl
and
cmp
pop
add
sbb
scas
xchg
push
popa
xor
push
push
lret
mov
mov
enter
dec
lods
icebp
or
or
lods
cld
inc
iret
arpl
adc
mov
or
and
out
dec
repnz
xlat
push
stos
mov
adc
in
ret
adc
xor
ss
mov
ror
bound
inc
adc
lcall
mov
sub
int
icebp
icebp
dec
inc
aad
xchg
xlat
nop
sbb
inc
je
daa
loopne
xchg
adc
mov
sub
push
movb
cmpsb
inc
repz
arpl
push
jb
stos
dec
xchg
pop
faddl
aam
ret
loopne
sbb
adcb
jp
clc
or
jg
cmpb
sbb
lods
dec
test
sbb
jmp
mov
sbb
lea
movsb
dec
push
flds
xchg
cmp
iret
xchg
adc
dec
clc
aam
je
call
pshufw
xchg
add
idivb
dec
add
pop
mov
sbb
call
add
cs
adc
cmp
mov
pop
dec
sbb
pop
ret
dec
inc
or
xchg
outsl
test
sbb
push
or
ret
sbb
addr16
mov
push
mov
ja
repz
xchg
inc
jmp
out
lods
icebp
lret
ljmp
jbe
lcall
sub
xchg
pop
shrl
dec
jle
push
cmp
popf
loop
adc
pop
inc
mov
iret
mov
jle
xor
testb
insb
mov
and
xlat
addb
xor
dec
insl
xor
or
cmp
mov
and
fistl
imul
mov
cmc
arpl
fs
pop
js
out
add
repz
jle
shlb
mov
mov
and
jae
pop
mov
icebp
push
xchg
testb
ret
sub
xorb
jnp
or
sbb
mov
push
or
jmp
jns
or
adc
cwtl
leave
mov
daa
mov
shll
fsub
xchg
outsb
rol
aas
hlt
js
leave
icebp
rolb
mov
and
out
pop
mov
xor
sar
ja
ret
inc
loope
lret
scas
stc
xor
icebp
and
push
push
cli
or
sub
cmp
imul
mov
and
pop
in
push
rclb
mov
sti
ret
mov
inc
jns
dec
jmp
cmp
rcl
fwait
int
jae
xor
xchg
pop
xor
adc
aam
push
les
mov
flds
mov
mov
testl
scas
jb
cmp
mov
cli
mov
inc
xchg
push
adc
inc
push
std
dec
call
ss
mov
xor
out
outsb
sti
adc
add
out
xchg
ficompl
pop
test
in
lods
insb
mov
test
sub
dec
mov
xlat
mov
mov
shrb
or
sbb
or
adc
subl
je
daa
lods
je
or
pop
cmp
testl
scas
or
lret
loope
and
shl
mov
lods
jne
cmpsl
mov
fildll
mov
sub
mov
sub
mov
inc
inc
neg
cmpsb
lea
pop
or
shr
mov
jbe
mov
pop
inc
jmp
clc
xchg
xchg
xchg
mov
shlb
fistpl
fcompl
leave
sahf
fdivs
jge
pop
fwait
add
xor
cmpsb
xchg
nop
dec
lods
and
out
fs
sub
out
outsb
out
adc
or
loop
and
data16
xchg
pop
imul
jnp
jge
iret
scas
xorb
ljmp
push
int3
push
lods
or
push
and
insl
inc
sarl
sbb
sub
xchg
and
dec
mov
mov
dec
sub
mov
jnp
addr16
aaa
mov
scas
int
xor
adc
mov
lahf
sti
fistpll
popa
pop
scas
daa
lods
rolb
xlat
inc
push
data16
dec
andb
or
sbb
xchg
aam
adc
add
ss
idivl
sub
je
push
add
add
pop
push
lds
lods
imulb
xchg
mov
mov
mov
rorb
movsl
ljmp
cmp
andb
fs
push
cmp
push
push
arpl
pop
subl
add
lods
mov
xchg
sbb
icebp
ret
jnp
mov
aam
mov
pop
lock
cmp
cwtl
pop
and
jae
daa
sbb
sbb
xchg
int
xchg
jl
ret
cltd
addr16
hlt
cld
loopne
cmc
stos
or
ja
jl
and
xor
cmpsb
sub
lcall
loope
iret
out
jge
push
aas
hlt
sub
pop
pushf
ja
nop
int3
mov
lods
icebp
icebp
pop
cmp
outsl
test
add
lock
movsl
jge
cmp
shlb
xchg
or
test
loop
jmp
cs
inc
mov
xlat
imul
mov
ljmp
jp
dec
cmp
xchg
fnstsw
or
fidivrs
lds
out
dec
add
mov
dec
mov
cmp
cld
pop
jnp
fildl
fists
mov
dec
sub
and
scas
inc
mov
in
leave
jmp
adc
ret
mov
cmp
mov
mov
pop
adc
insl
clc
push
push
xchg
test
sbb
add
and
out
out
mov
enter
pop
enter
js
cmp
cmp
test
fninit
mov
mov
mov
add
cmc
lahf
xor
sub
dec
stc
je
pop
stos
sbb
mul
mov
push
sub
push
push
lock
outsl
inc
imul
mov
sbb
dec
adc
nop
cltd
cmp
pop
push
sarl
ffree
jnp
or
or
adc
js
pop
out
arpl
dec
jecxz
mov
pop
jb
pop
je
mov
jp
sub
popa
or
jbe
rcll
and
add
aas
mov
xchg
add
gs
pop
ja
and
lods
std
and
or
jmp
xor
lock
mov
rcrl
fildl
jl
sahf
pop
repz
sbb
pop
mov
push
or
inc
inc
mov
cltd
jecxz
and
jbe
push
dec
mov
add
dec
xchg
jo
mull
data16
in
sub
sub
inc
mov
xor
lock
imull
mov
dec
jl
and
or
add
jp
mov
mov
stos
mov
jle
enter
cs
xchg
cmp
sbb
dec
xor
ds
neg
pusha
int
mov
div
fnstenv
imul
xor
rorl
push
ret
sti
sub
adc
enter
pusha
push
ljmp
into
or
sub
je
sbb
test
fisubrs
jne
inc
push
push
orl
mov
push
call
inc
stos
aad
push
or
fldenv
in
cmc
out
mov
and
out
das
std
sub
outsl
dec
inc
pop
cli
mov
xchg
dec
mov
mov
mov
add
adc
rorl
mov
fisubs
in
push
jae
cmp
leave
adc
fwait
push
les
and
ljmp
aas
xchg
outsb
shr
out
movsl
fwait
dec
jmp
imul
out
sbb
and
and
pushf
push
cmp
aad
mov
sbb
jb
jbe
mov
mov
imul
pushf
or
jl
mov
push
adc
xchg
or
pop
aad
stos
sub
jae
jno
inc
insl
add
inc
into
mov
in
mov
shll
das
das
aas
pop
cmp
pusha
push
jge
mov
aam
sahf
jo
xor
fsubl
repz
inc
sbb
call
xchg
jmp
cmp
repnz
cltd
dec
push
mov
mov
push
adc
cmp
enter
sbb
sahf
sti
add
sarb
add
loop
and
dec
les
hlt
fsubl
xchg
add
notl
fisttps
popa
inc
xchg
enter
sub
add
ret
xchg
stos
dec
sbb
test
cmp
cmpsl
jmp
pop
rorb
sub
adc
jmp
xor
loope
adc
and
lea
adc
mov
xlat
iret
lahf
adc
add
xor
cmp
pop
daa
mov
inc
ret
jge
into
mov
cmp
and
xchg
out
jp
pop
sub
add
dec
dec
xchg
mov
or
test
sti
out
sub
out
mov
pop
loop
cmp
bound
sbb
pusha
jns
loopne
dec
push
out
pop
push
mov
and
add
iret
inc
mov
ja
xor
fwait
cmpsb
dec
fwait
seta
test
add
mov
cmpsl
test
jb
fisubrs
ljmp
sub
mov
stos
push
fwait
aam
fidivl
daa
ds
push
int3
or
mov
jo
insb
push
fmulp
fisubrs
xchg
dec
add
cmp
scas
fsub
pusha
scas
jbe
push
popf
mov
cwtl
lret
lock
andl
mov
mov
push
nop
lock
jl
fs
push
arpl
popf
cmp
imul
inc
pop
insl
movl
loope
in
fwait
shll
sbb
sub
aas
aas
pop
fdivs
add
aas
out
dec
addr16
xchg
xor
pop
jl
lret
xor
popf
mov
dec
push
arpl
lret
aas
mov
repnz
bound
cmpb
icebp
iret
pop
and
sub
jnp
in
inc
fs
scas
dec
and
jb
push
into
xlat
pop
jo
mov
mov
dec
hlt
jmp
hlt
fsubs
sbb
mov
lcall
movsl
iret
add
mov
dec
sahf
jle
add
mov
cmpsb
ret
xor
mov
mov
xchg
jae
add
stc
insl
mov
loop
pop
and
aad
pop
jno
in
push
js
inc
sahf
add
pop
stos
adc
xchg
and
jb
scas
push
jne
rorb
add
test
add
out
jne
dec
dec
les
xchg
adc
sub
in
pop
sbb
sarl
jge
dec
cmpsb
stos
cmc
mov
sahf
cmpsb
andb
fwait
pop
sub
push
xorb
ja
jns
lods
mov
and
xchg
out
pop
imul
aam
cmpsl
sbb
inc
sbb
lods
push
lods
rol
add
add
fwait
ja
xlat
mov
xor
outsb
fwait
pop
dec
xchg
js
push
rol
push
mov
arpl
repz
ljmp
sahf
sub
scas
in
shll
inc
cmp
jmp
stc
test
add
std
pop
push
dec
push
pop
pop
cmc
push
mov
cs
mov
dec
pop
andb
fiadds
jns
cs
call
mov
inc
js
fldl
xor
mov
mov
mov
nop
dec
outsb
rorb
les
adc
outsl
dec
lock
add
movsb
fistl
insb
push
mov
jp
outsb
notl
pop
mov
stc
adc
inc
lcall
stc
push
xlat
inc
leave
sub
pusha
in
dec
push
bnd
lea
fnstenv
repnz
pop
jg
sbb
jno
dec
inc
pop
mov
lock
cmp
cmpsl
mov
aam
adc
pop
insb
sahf
mov
jecxz
out
xchg
inc
adc
sbb
std
int
jl
xchg
pop
cli
unpckhps
pusha
loopne
adc
mov
and
dec
mov
xchg
push
inc
and
test
pop
in
movsl
jbe
je
add
mov
dec
push
bound
xlat
cwtl
gs
xor
xor
mov
fldz
or
push
divl
clc
jmp
data16
cmp
inc
int3
lahf
sbb
sbb
or
push
out
inc
movsb
mov
mov
ror
inc
push
mov
pop
xchg
cld
sbb
push
mov
fwait
js
xorl
insl
sarl
push
stc
mov
in
inc
iret
sub
pop
push
aaa
pop
push
cmp
adc
cmp
popf
inc
mov
xor
mov
xor
divb
dec
jbe
pusha
adc
fmuls
hlt
shrb
sti
fs
jne
lahf
lea
clc
in
cmp
cmc
mov
push
lret
fbstp
addb
push
mov
dec
mov
inc
sbb
adc
inc
jno
jmp
das
cs
std
ljmp
xchg
dec
jecxz
out
push
lea
rcrb
testb
scas
xchg
pop
jb
mov
push
cmp
fs
add
and
adc
outsb
andb
jl
mov
pop
cs
cltd
or
mov
xchg
dec
pop
sarb
mov
imul
pop
push
push
sub
test
cld
cmp
mov
lret
sti
and
test
sbb
loope
mov
ds
lret
gs
jae
adcl
fld
or
insl
xchg
aad
xchg
aam
sahf
inc
lret
mov
xchg
mov
inc
outsl
pop
lret
inc
mov
fidivl
jg
mov
jne
in
inc
lock
cmp
pop
mov
lret
or
sbb
out
mov
dec
insb
jmp
sbb
out
lret
add
inc
xchg
lahf
sbb
mov
and
add
pop
lds
cmp
and
mov
cmp
inc
mov
pusha
adcl
test
mov
and
stos
sbb
sub
adc
inc
addr16
xor
imul
jo
movb
sbb
xchg
scas
sub
xchg
rclb
into
xorb
repz
js
dec
mov
inc
fcomp
dec
imul
jg
pop
xor
xor
jno
stc
push
out
sbb
in
arpl
xchg
sbb
xchg
mov
jge
fisubrl
cwtl
fldl
shlb
fmuls
mov
xchg
loope
cmpsb
and
jne
inc
jnp
clc
mov
out
loopne
leave
cmp
dec
mov
or
or
jecxz
mov
rcll
pop
inc
push
and
and
rorb
adc
int3
mov
mov
sub
enter
aas
pop
mov
pop
push
and
outsl
int
mov
cmp
mov
stc
xchg
sbb
outsb
outsl
out
imul
icebp
sbb
dec
jle
mov
or
in
push
bound
sub
cltd
xchg
push
ljmp
fcoms
call
xchg
aam
iret
adc
shrl
cmp
push
sub
loopne
jp
fisttpll
lcall
xor
add
adc
push
scas
aas
pop
pop
push
ret
mov
stos
imul
sbb
in
shrb
xorb
js
aaa
xchg
imul
in
loop
adc
dec
filds
push
mov
aad
or
loope
push
dec
add
outsl
jae
cmp
insl
aad
out
jg
in
or
mov
mov
and
pop
jge
mov
int3
cmp
rclb
test
js
jb
lea
or
inc
jp
roll
push
mov
xor
loopne
testb
aas
addr16
pop
out
clc
adc
push
mov
inc
xchg
dec
sub
popf
nop
insl
lea
imul
and
loope
or
sub
mov
xor
xchg
lcall
xlat
push
mov
mov
and
insl
mov
push
pushf
or
and
rcl
testb
lret
mov
xchg
enter
xchg
clc
cmc
nop
mov
add
inc
scas
xchg
ja
cmp
mov
repnz
pop
adc
stos
dec
push
xor
test
dec
jecxz
and
jge
test
jns
scas
dec
or
pushf
dec
pop
scas
das
lcall
out
in
xchg
pop
jnp
and
into
pusha
push
lret
xor
mov
mov
mov
idivb
aas
in
roll
push
ror
cmp
popa
add
scas
sub
sti
stos
inc
mov
mov
xorb
push
pop
add
or
shll
lret
mov
xchg
adc
and
dec
pop
out
popf
into
dec
and
add
js
mov
mov
dec
mov
jbe
call
fstl
inc
js
scas
aad
imulb
cmp
mov
ja
mov
sar
dec
mov
mov
xchg
out
dec
cltd
lods
ret
scas
loopne
fimull
mov
aad
lock
inc
sbb
sarl
insl
cld
dec
aad
aas
jp
jnp
insl
xlat
cmc
inc
mov
jnp
jecxz
inc
repnz
int
pop
pop
ljmp
cltd
jecxz
nop
pop
je
cmpsl
mov
mov
push
pop
and
fsubl
mov
js
inc
fiaddl
mov
sahf
das
inc
cld
mov
lds
addr16
mov
jmp
notl
inc
sub
xchg
push
cwtl
xchg
sub
repz
xor
pop
add
sbb
adc
xchg
cmc
hlt
push
gs
frstpm(287
xchg
test
inc
not
xor
add
lret
push
fisubl
cld
and
add
pop
xor
stos
sub
lods
xchg
mov
out
pop
dec
fcoml
je
dec
mov
xchg
sbb
icebp
sub
rorl
aam
mov
sbb
data16
fidivrl
sbb
adc
movsl
pop
ss
push
js
and
fdivl
jbe
xchg
pop
push
sbb
popf
in
add
loope
mov
pop
adc
mov
and
push
jp
rcrl
sbb
sub
push
filds
mov
jl
arpl
xor
pop
imul
inc
jecxz
add
adc
xchg
or
mov
test
xchg
mov
insb
jns
fisttpll
sbb
stos
mov
lcall
mov
out
inc
inc
imul
arpl
xchg
mov
push
fstps
mov
es
mov
lahf
push
addl
mov
pop
sti
scas
jp
out
jo
fmul
push
push
aad
cmp
outsl
sbb
pop
xchg
enter
lahf
fdivs
sbb
aas
cmpsb
ret
inc
and
dec
out
repnz
test
mov
pop
xchg
fcompl
insl
data16
pop
cmc
test
cltd
insl
sub
cmpsl
pop
or
icebp
push
into
sub
outsl
test
fwait
sarb
inc
rcl
or
xchg
sti
push
movsb
jecxz
fstpl
adc
lret
les
sub
hlt
push
push
mov
daa
mov
leave
xchg
adc
cs
out
sub
or
cmp
dec
add
in
pop
inc
and
push
cmpsl
jnp
cmpb
inc
mov
sub
mov
movsl
inc
je
repnz
push
and
jg
pop
int
popa
add
adc
lahf
push
bound
adc
inc
lahf
jmp
sub
ds
xchg
xor
mov
data16
subb
outsl
push
and
push
mov
pop
loop
into
loop
xchg
mov
adc
sbb
rorb
lcall
test
jl
jp
scas
sbb
nop
xchg
jge
mov
push
ss
sti
sti
or
sub
push
push
es
rcl
xchg
sbb
movsl
hlt
ss
insb
jle
hlt
and
lds
pusha
push
ja
mov
dec
sub
jecxz
mov
and
les
shr
xchg
pop
out
sbb
movsb
push
add
int
lods
cmp
or
mov
sbb
xchg
int3
pop
dec
sub
movsb
push
out
pop
out
lret
sbb
das
lcall
icebp
ret
ret
call
pop
cli
push
test
jge
rclb
test
fists
cmp
ds
ret
in
out
and
mov
test
lods
inc
mov
in
mov
testb
jp
in
sbb
fs
or
mov
cli
push
cmpsl
jl
jg
repnz
addb
repz
cwtl
adc
jne
and
mov
movsb
rorb
lods
enter
shr
sbb
lods
js
dec
jecxz
push
jae
jne
cltd
icebp
sbb
lret
fidivrl
hlt
xchg
aas
orb
mov
enter
ficoms
mov
nop
jmp
out
rep
mov
inc
xchg
or
pop
ljmp
push
cmp
xchg
pop
jp
push
call
push
test
adc
jnp
int
fcoml
ret
mov
mov
inc
rcr
in
flds
loopne
or
xchg
pop
outsb
mov
ja
jecxz
cmp
fs
daa
stc
dec
dec
sti
adc
in
sub
push
addb
ds
in
shll
lret
cs
fisttpll
jecxz
into
sbb
inc
inc
push
cs
xchg
mov
iret
add
cld
xorl
jns
fiaddl
and
adc
or
fincstp
jo
outsl
cmp
in
mov
jle
mov
mov
repz
stos
mov
rcrl
imul
adc
mov
sub
jp
jmp
xchg
cmc
add
mov
imul
ret
mov
push
and
test
in
xchg
bnd
add
sbb
cs
dec
movsb
hlt
mov
pop
scas
and
fdivl
sbb
aam
fistps
stos
mov
out
pop
mov
cli
inc
add
mov
and
aas
adc
mov
jg
dec
insb
loopne
dec
repnz
mov
lods
int
aaa
push
jae
sub
loop
decb
jae
popf
or
arpl
lahf
mov
push
cli
aad
xor
adc
ljmp
lahf
sbbl
cmp
jmp
ja
es
pop
cli
jae
or
in
add
fwait
outsl
pusha
adc
adc
addb
addb
divl
push
or
or
dec
data16
pop
stc
loop
lods
mov
outsb
inc
mov
loop
mov
bnd
cmpsl
imul
push
loop
pop
sbb
adc
stos
mov
lock
jp
cmpsb
pop
pop
cmp
push
out
imul
jp
mov
scas
add
std
inc
in
lds
ljmp
push
sahf
in
loope
cmp
mov
mov
xor
pop
out
jbe
or
inc
jp
sub
movsl
xor
lds
imul
dec
push
arpl
inc
sbb
push
xorl
inc
out
into
mov
mov
std
mov
fwait
add
out
cmp
in
and
adc
cwtl
rcll
sahf
push
clc
inc
ljmp
jne
add
in
mov
leave
mov
rolb
lahf
test
repz
pop
mov
loop
adc
adc
jge
insl
std
and
add
sub
sub
nop
dec
push
pop
cmpsb
dec
aad
js
adc
mov
test
xchg
cmp
lret
mov
xchg
jle
and
addb
inc
stos
test
leave
orl
cmp
or
jb
mov
mov
jb
daa
cmpb
push
adc
dec
sbb
lds
inc
add
adc
jg
popf
setno
sub
mov
mov
cs
or
dec
inc
inc
push
cmp
mov
cmp
push
ret
add
shlb
mov
lahf
into
jmp
imul
pop
jns
jo
jnp
inc
lea
pop
enter
orl
out
sbb
popa
mov
jns
sti
mov
enter
xor
ret
fwait
dec
movsl
outsl
and
add
stos
out
sbb
push
movsb
mov
lcall
jg
shll
data16
scas
xlat
jns
sub
movsb
xchg
or
cmp
push
fcom
adc
repnz
imul
ret
xchg
adc
pusha
in
xchg
lahf
pop
imul
push
push
push
bndstx
xor
sbb
push
inc
scas
pop
fsubp
out
mov
ds
xor
gs
jle
popa
push
outsb
lahf
clc
xchg
adc
cmp
fwait
mov
mov
mov
pop
xchg
push
jns
jle
jecxz
jge
dec
fsubrs
lock
ss
iret
shlb
fbstp
fwait
psllw
mov
mov
inc
cmp
mov
cmp
pop
mov
mov
loop
in
insb
loopne
stos
pushf
adc
xor
xchg
mov
out
stos
das
test
pop
jge
add
je
mov
out
call
js
in
push
in
cmp
xor
sarb
arpl
imul
mov
fsubrl
pop
mov
xor
cmc
mov
lods
hlt
mov
mov
jae
mov
lcall
call
int
xchg
cmpsl
pop
insb
mov
lods
ror
outsl
mov
push
test
orb
push
ljmp
out
data16
insl
add
cltd
out
sub
fisubrs
mov
mov
shll
icebp
popa
mov
lea
ret
movsb
notl
or
mov
loopne
das
aad
cmc
repz
mov
mov
imul
filds
in
fldcw
sub
xchg
mov
dec
lret
mov
int3
sub
sahf
or
push
mov
xchg
stos
mov
mov
sub
push
cli
inc
clc
ljmp
and
xor
push
pop
xchg
movq
jnp
fisubrs
test
mov
xor
addb
sbb
test
sbb
lcall
test
iret
lret
pop
addr16
mov
push
xchg
dec
mov
mov
out
mulb
out
gs
xchg
test
out
aaa
xchg
lods
cmp
adc
adc
mov
fmul
test
jns
adc
jge
sbb
add
dec
xor
add
fstpl
movsb
std
pop
jge
push
mov
repz
aam
rclb
test
xchg
add
mov
cmp
shrb
pop
in
leave
hlt
or
mov
dec
xor
pop
call
push
cmp
pop
push
dec
mov
pop
cmp
pop
mov
inc
cmpsb
cs
setge
mov
loopne
xchg
xchg
shrl
lock
loopne
icebp
decb
xor
jg
push
jno
jne
push
adc
push
pop
les
sarb
popa
inc
mov
sbb
jl
mov
pop
adc
mov
movsb
aaa
inc
sti
out
imul
imul
push
mov
ficoml
aaa
inc
ffree
popf
push
and
mov
or
pop
pop
lcall
in
cmp
outsl
sub
andb
gs
hlt
call
mov
andl
jle
sbb
inc
mov
repz
adc
fidivrl
jno
scas
scas
int
jle
in
add
lret
test
popf
mov
loop
mov
fmuls
and
add
dec
adc
pop
rorb
popf
inc
mov
xchg
cmp
shlb
fwait
push
xchg
in
cld
xorb
aam
mov
je
test
cmp
jg
xchg
sbb
adc
lcall
add
hlt
mov
inc
ja
cld
imul
test
testb
idivb
repz
test
mov
ljmp
out
dec
and
adcb
cli
into
mov
mov
adc
jp
add
stos
mov
popf
mov
inc
mov
adc
xchg
idivl
out
js
push
insb
lock
jge
shlb
xor
orb
andl
adc
jns
xchg
and
mov
adc
inc
iret
push
mov
and
pop
gs
stos
loop
je
in
and
push
adc
xchg
fcmovnu
xor
pop
cmp
imul
xorl
and
aam
fs
push
fcomps
sti
test
out
enter
push
fidivl
sub
push
cmp
ss
loope
mov
or
lahf
pop
mov
mov
dec
push
outsl
lds
and
jno
test
mov
sbb
cld
adc
lcall
mov
mov
stos
add
es
add
addr16
mov
ret
out
ljmp
stc
add
jecxz
repnz
jns
pushf
cmpb
out
inc
jno
mov
push
sahf
mov
cmp
mov
mov
mov
test
or
enter
stos
repz
sub
and
sbb
sahf
repz
cwtl
cmp
mov
or
cmp
xchg
adcl
add
xchg
mov
xchg
sbb
mov
inc
mov
je
ret
aas
jo
sbb
call
insb
in
in
pop
and
xchg
mov
or
pop
stc
dec
xor
xchg
inc
cmp
mov
fstpt
pop
xchg
mov
stos
mov
xchg
pop
pop
xchg
push
push
lret
fs
test
imul
fldcw
ffreep
mov
xlat
lock
mov
adc
loopne
cmpsl
jg
stos
lock
call
leave
inc
icebp
pop
into
out
cmp
mov
dec
jp
adc
dec
lret
lods
or
mov
pop
jecxz
mov
cmp
dec
xchg
lock
out
cmp
xor
scas
adc
call
mov
punpckldq
sbb
push
xchg
inc
xchg
ja
jbe
xor
and
in
in
push
call
dec
mov
mov
into
xchg
sbb
stos
push
arpl
dec
mov
movsb
xchg
mov
dec
ffreep
xor
add
jb
add
or
or
repnz
nop
clc
cltd
jl
mov
add
inc
addb
xor
adcb
mov
test
cld
mov
imul
pop
aad
ficoml
inc
movsl
sbb
cmp
pop
mov
mov
adc
adc
sar
add
leave
jae
lcall
mov
push
mov
sub
sbb
cwtl
mov
cmc
push
mov
fldcw
lret
out
mov
je
lcall
mov
pop
mov
pop
in
fstps
xor
xchg
pusha
dec
cmpsb
sub
js
add
and
sub
jnp
repz
popa
test
inc
cli
addr16
pop
sub
or
cwtl
daa
cmpsb
mov
fst
sub
ss
jge
frstor
pushf
popf
sub
sub
repnz
test
sbb
and
mov
mov
out
dec
sbb
stos
pop
xor
jmp
lcall
lods
test
stos
xchg
stos
and
push
outsb
and
stc
xchg
mov
lods
cmc
cwtl
lock
jno
fwait
fwait
popf
pop
xchg
lea
and
test
pusha
out
cwtl
aad
add
push
push
hlt
cmpsl
xor
add
mov
fdivrs
xchg
lock
mov
xor
push
psubw
inc
lret
std
mov
fnsave
push
push
sahf
mov
or
mov
sti
inc
mov
cmc
and
out
divl
mov
out
xchg
jae
jb
lahf
pop
lea
pop
adc
leave
out
stos
jb
pop
out
push
repz
or
scas
ss
xor
imul
inc
jae
loop
cmp
data16
fcmove
sub
mov
hlt
les
cmpsb
and
jle
push
cmp
shlb
dec
enter
mov
cmp
sub
push
int
add
in
mov
pushf
jbe
inc
sub
or
xchg
cmpsl
pop
and
sub
sub
adc
mov
mov
xor
clc
in
pop
sbb
sahf
push
repz
push
mov
sbb
mov
dec
pusha
push
pop
mov
or
inc
lret
xchg
aas
mov
xchg
push
pusha
sbb
ss
repnz
mov
ret
fldcw
inc
pop
out
cld
dec
or
mov
neg
add
sbb
mov
jb
les
pop
pop
data16
push
les
mov
sbb
scas
imul
jno
inc
adc
mov
sub
mov
lcall
daa
and
dec
lods
int
pop
jne
sbb
and
test
mov
pop
aaa
call
xchg
inc
lods
push
mov
mov
xchg
scas
mov
mov
push
aas
mov
ds
fnsave
add
rcl
jae
fwait
inc
and
lcall
lods
pop
and
mov
pushf
inc
adc
jl
fisttps
lahf
movd
fucomip
sbb
popa
mov
cmpsl
mov
dec
lods
bound
test
in
xor
sahf
fisubrl
je
jl
xor
mov
pop
lods
jbe
andl
xchg
pop
inc
cmp
in
dec
hlt
xor
ret
pop
stos
adc
pop
jg
mov
sub
add
test
les
out
mov
cmp
mov
dec
and
lods
hlt
aaa
push
sub
pop
xchg
dec
imul
xor
fwait
adc
cmc
mov
loopne
repnz
xchg
ficoms
lcall
xor
mov
subl
fidivl
mov
push
stos
pop
dec
add
loope
and
fnstenv
pop
sbb
pop
test
scas
adc
dec
xor
ss
push
data16
in
mov
movsb
jo
shl
fisttps
lret
and
xor
cmpsb
adc
push
dec
jl
fwait
and
outsl
sub
mov
std
xchg
js
movsb
adc
push
shll
sbb
loopne
cmp
cmpsb
pop
push
and
std
adc
sub
scas
out
xchg
jle
xor
jno
xor
sbb
cmpsb
std
inc
lahf
inc
hlt
inc
fsubs
mov
adc
xchg
sbb
divl
fwait
lcall
lods
rcrb
jo
dec
clc
add
movsb
mov
daa
ljmp
scas
popa
or
fistl
jae
jge
insl
stc
cld
mov
das
dec
or
mov
mov
mov
push
loope
repnz
lcall
pop
insb
cld
cmp
mov
pop
push
imul
test
sbb
pop
jae
mov
inc
push
add
mov
lcall
and
sbb
jl
pusha
xor
mov
xchg
xchg
push
test
es
pop
clc
xchg
cmp
pop
in
faddp
pusha
nop
lea
nop
mov
fs
pop
cmpsl
xor
test
pop
cmp
dec
and
cmp
and
jno
pop
sahf
add
movb
xchg
dec
aas
shl
jbe
dec
push
nop
add
adc
les
std
lds
push
inc
pop
lahf
hlt
adc
dec
les
cmp
cmpsl
inc
aas
lods
pop
lods
cwtl
xor
test
push
and
es
sub
fs
jno
les
aam
test
adc
ss
cltd
pop
call
sbb
cmp
inc
fsubrl
orb
mov
stos
stos
push
jb
jg
out
xchg
stos
sbb
sbb
fwait
in
imul
mov
dec
iret
cli
dec
imull
xor
mov
or
xor
xlat
es
mov
and
adc
push
cmpsl
xlat
xchg
mov
cmc
out
mov
pop
icebp
and
lcall
loop
xchg
pop
sbb
jmp
fnsave
dec
loope
ds
cmp
dec
jle
mulb
adc
in
cmpsl
inc
imul
cmpsb
xor
mov
idivb
in
mov
xchg
mov
rcll
ss
mov
inc
sbb
icebp
sub
addl
daa
mov
pop
fs
sti
rorl
cmp
xlat
lds
test
mov
shll
fcomip
mov
retw
mov
insl
cmpl
adc
pop
movsl
icebp
mov
pop
xor
lock
data16
pop
loopne
cs
mov
movsb
in
cli
in
bound
sbb
xchg
mov
fdivrl
ret
loope
das
je
sahf
cs
out
repz
adc
jnp
and
lods
rol
jle
fstps
fsubl
les
popa
insl
or
pop
lret
inc
pandn
popf
inc
pop
sbb
mov
sbb
mov
fdivr
lret
xchg
xor
out
or
sbb
mov
pop
int
xor
inc
bound
mov
pop
out
sub
cmp
stos
outsb
jmp
inc
cmp
add
test
test
insl
cmp
psllw
sub
sub
push
lea
leave
ss
push
xchg
sbb
xor
cmc
jle
imul
out
in
add
insb
repz
push
stos
mov
jmp
mulb
dec
les
cmp
aas
jecxz
test
daa
loopne
mov
mov
jmp
aad
sarb
test
xchg
testb
movsl
sub
mov
addr16
je
cs
dec
icebp
fistpll
pop
inc
cwtl
addb
pop
mov
dec
mov
pop
fiaddl
hlt
nop
jnp
in
int3
cmpsl
loope
pop
lods
lock
cltd
xchg
fisttpll
cmp
divb
xchg
fiadds
mov
mov
mov
out
shrl
stos
repz
subl
loopne
imul
enter
nop
loop
mov
adc
pop
xor
sub
mov
sbb
jg
xor
or
mov
mov
jnp
jle
mov
pop
imul
push
inc
scas
jl
jne
call
or
orl
pop
xchg
dec
add
lods
xchg
repz
and
ret
adc
ret
and
int
sub
and
cmpsb
out
std
orl
outsb
aas
mov
fsubrs
test
mov
shl
leave
xor
test
into
add
push
xchg
inc
and
push
xlat
push
sbb
aad
mov
iret
fnstcw
ret
add
pushf
xor
fnstenv
gs
cmp
decl
cmpb
pop
add
xchg
mov
lea
add
sub
cmp
mov
jge
ret
xchg
mov
push
ficoms
pusha
fnstenv
cmc
cmp
pop
and
jo
mov
pop
dec
lahf
mov
xchg
and
jmp
lret
in
pop
je
mov
dec
xchg
test
cmp
adc
adc
sbb
test
ljmp
loopne
out
inc
pop
mov
es
mov
icebp
mov
scas
test
sub
stc
movsl
add
push
mov
popf
ret
jmp
addl
loop
xor
mov
sbbl
mov
adc
js
gs
mov
and
lret
test
add
mov
les
mov
hlt
call
jne
pop
mov
pop
lahf
push
pusha
mov
mov
lea
mov
dec
mov
sbb
sbb
jecxz
scas
rcrl
jno
fldenv
in
inc
mov
lahf
addb
add
inc
inc
cmc
jp
std
js
hlt
mov
loop
mov
mov
or
jb
and
imul
xchg
xlat
push
inc
mov
sbb
mov
pop
adc
xor
cmp
pop
stos
mov
pop
stos
or
lock
mov
push
sbb
xchg
mov
mov
or
xchg
outsl
pushf
or
daa
shll
imul
add
repz
jl
xor
imul
iret
push
inc
xchg
das
and
stos
imul
cmpl
mov
fwait
outsb
jae
inc
pop
data16
jg
loop
mov
sti
or
and
jp
addr16
jg
inc
out
cld
leave
cmp
add
std
lret
mov
xchg
notl
lret
sbb
xor
push
enter
fs
in
ficomps
enter
and
jb
push
xor
mov
push
and
push
add
cmp
cmp
push
insl
xor
cwtl
cmp
data16
in
pop
inc
stc
aaa
add
cld
das
adc
mov
imul
pop
push
pop
dec
add
jne
dec
leave
jo
insb
lret
cli
mov
lock
cmp
xor
xchg
xor
xor
and
sahf
loop
mov
daa
cmp
addb
je
adc
mov
jae
movsb
sub
sub
adc
je
sahf
sub
js
xchg
imul
fmulp
lret
push
jns
jno
mov
cmc
and
mov
orb
inc
rolb
inc
loopne
sahf
jae
push
test
sub
iret
mov
adc
or
and
sub
call
aam
pop
aas
add
push
idivl
fwait
nop
dec
xchg
hlt
fistps
pop
xor
mov
popl
rcrl
add
lahf
sarl
xchg
pop
cmpsb
inc
js
mov
scas
pop
test
and
movntps
mov
adc
add
add
or
sub
mov
hlt
fwait
sti
loopne
outsb
pusha
aaa
xor
call
add
mov
out
mulb
test
or
and
incl
adc
out
or
pop
or
jp
lea
sub
xchg
les
add
incl
out
das
jnp
xchg
aaa
push
push
or
inc
sbb
jns
sub
out
pop
pop
jmp
in
sub
incb
ret
sub
lret
pusha
pop
ljmp
pop
xchg
inc
adc
pop
sbb
mov
out
and
lock
data16
or
adc
push
les
dec
pop
inc
outsl
dec
movsl
dec
loope
or
outsl
mov
lret
andb
inc
pusha
ret
lahf
scas
xchg
xor
mov
or
cmp
add
push
inc
pop
mov
pop
cmp
test
stc
pushf
sbb
jmp
in
mov
in
ds
out
inc
mov
sub
mov
xor
call
adc
pop
dec
imul
insl
jl
int
testl
xor
sub
or
and
adc
inc
adc
loope
fisubrl
pop
fiadds
popf
fs
pushf
add
div
push
lea
jae
jcxz
lcall
cmp
dec
es
imul
jl
lds
mov
shlb
in
sub
scas
incb
fidivs
cmp
vpunpckhbw
sub
jae
xor
fdivr
add
fistps
mov
subb
lcall
jbe
or
lods
jb
decb
mov
jmp
in
mov
cmp
inc
dec
insl
mov
xor
nop
js
xorb
adc
mov
add
pushf
lahf
pop
es
ljmp
mov
push
xchg
xchg
inc
jecxz
fisubl
call
sub
sub
hlt
dec
sbb
sbb
fsubs
jo
mov
sti
dec
adc
ja
dec
adc
jge
test
out
rcl
mov
gs
pop
mov
pop
loope
cwtl
jge
dec
xchg
xchg
js
cmc
push
cmp
pop
in
pop
jg
jnp
pop
sbb
popf
and
mov
fwait
mov
pop
imul
leave
test
sub
inc
nop
lds
cmp
add
add
bnd
push
outsb
sbb
outsl
adc
shlb
jbe
push
add
inc
jns
add
mov
jmp
adc
in
sbb
or
fsubl
pxor
mov
cmp
mov
fwait
mov
lret
jo
repz
test
or
aad
mov
push
sar
cli
jle
push
and
idivb
push
sahf
pop
cli
lcall
xchg
faddl
cmp
movsl
adc
and
xchg
xor
pusha
sbb
divl
pop
jbe
xchg
add
and
xor
adc
jl
mov
sbb
jmp
mov
jno
jo
adcl
or
lods
xchg
mov
dec
data16
lret
stos
xchg
add
add
les
pop
inc
pop
icebp
inc
add
push
mov
push
sbb
aad
outsl
jmp
pop
inc
cltd
adc
repnz
fimull
push
loop
or
nop
pop
cmpsb
adc
shll
mov
int
xchg
mov
adc
mov
negl
sbb
xchg
adc
aas
sbb
xchg
pop
sub
jne
sbb
xor
jmp
xchg
lahf
lret
add
cmp
repz
push
sub
lahf
das
sub
es
nop
cmp
sbb
push
ljmp
fidivrl
bound
jecxz
sbb
shl
dec
int3
in
movsl
bound
int3
test
popa
inc
push
dec
push
repnz
cli
mov
repz
xchg
pop
daa
cmp
cltd
popa
shrb
xchg
or
cmp
xchg
fdivl
test
in
mov
fidivrs
inc
inc
xlat
ja
mov
adc
lcall
add
cmp
repz
mov
insb
jno
nop
fldl
sub
or
cld
jmp
ffreep
xchg
js
jno
sbb
jle
add
je
cmpb
push
and
dec
jecxz
sub
rcl
call
pop
add
inc
int
enter
popf
push
cmp
int
je
xor
imul
mov
pusha
adc
or
or
fs
mov
nop
test
lods
jg
add
jns
pop
out
dec
ficoml
jae
or
negl
fistl
sub
out
repnz
mov
inc
mov
fdivrl
dec
and
dec
in
call
or
sbb
lret
pop
inc
dec
mov
or
repz
sbb
ja
jge
mov
test
daa
loop
jne
push
cmpsl
enter
sahf
sub
out
daa
xchg
lods
aad
cld
adc
push
std
es
sbb
icebp
or
and
or
ljmp
cmp
xchg
sub
pop
adc
dec
mov
inc
mov
cmp
inc
xchg
inc
jno
xchg
xlat
cwtl
movsb
xor
addr16
push
stos
fisubrl
fs
dec
int
dec
mov
adc
loop
jns
out
cmp
lock
jns
sbb
inc
push
jne
push
leave
scas
lret
jo
mov
jb
jmp
sbb
push
scas
sbb
scas
dec
ljmp
xchg
ret
imulb
dec
mov
xchg
cmp
push
test
or
mov
int
stos
cs
lock
push
mov
and
mov
xchg
sti
adc
into
test
cmp
add
scas
std
stos
xor
jbe
sub
push
out
xchg
dec
js
jnp
dec
mov
stos
dec
mov
popf
sbb
jnp
adc
nop
xor
mov
cs
ds
sahf
add
jnp
xor
and
dec
outsl
test
pand
mov
movsl
outsb
sbb
adc
lret
ljmp
pop
xor
sub
mov
jo
xor
dec
imul
fcmovne
ror
arpl
gs
pop
sar
or
adcl
enter
ja
mov
lret
jp
movsb
das
jge
inc
ja
push
xor
mov
pop
inc
mov
leave
jno
pop
mov
sbb
loope
jmp
xor
or
xchg
popa
std
ficoms
dec
or
push
adc
cli
jp
xchg
xchg
adc
cli
daa
idiv
sub
es
push
into
imul
jle
fcomp
dec
scas
and
nop
pop
xchg
into
lret
lods
or
roll
mov
icebp
cld
out
popf
stc
mulb
add
sub
je
sbb
fsubs
arpl
mov
fdivrs
xchg
mov
mov
xchg
and
add
popa
cmp
jg
aas
mov
jae
scas
inc
inc
fucomp
sahf
cmp
les
dec
fmuls
in
mov
cmp
stc
test
sbb
push
or
enter
cmp
int3
jle
inc
int3
gs
das
cmp
inc
cmp
mov
mov
jg
out
cmp
sbb
cmp
mov
popl
mov
xchg
xchg
fisubrs
test
sbb
sahf
adc
mov
test
aas
pushf
and
sbb
cwtl
pop
icebp
sub
iret
or
mov
or
cmp
outsl
cltd
loope
shl
pop
xorb
pop
mov
stos
mov
xor
inc
pop
or
sti
mov
sub
loopne
push
xchg
dec
pop
mov
mov
add
cwtl
bound
aaa
jge
mov
je
cwtl
mov
out
js
xor
jp
mov
ds
lods
es
jbe
jmp
rclb
js
hlt
inc
xchg
filds
inc
push
stc
stc
lret
repz
inc
mov
arpl
movsl
xchg
add
xchg
inc
lea
lods
mov
stc
push
push
adc
xor
jge
add
jnp
scas
xchg
sub
adc
add
mov
dec
lock
xorl
out
js
fs
xchg
das
jp
pop
xchg
cmpsl
dec
pop
push
leave
xor
adc
sbb
rol
stos
inc
and
ltr
and
fs
fisttps
je
jo
shlb
xor
xor
insb
and
cltd
inc
inc
sub
inc
je
mov
cltd
mov
js
mov
mov
lcall
mov
cltd
mov
push
mov
xchg
mov
stos
push
and
inc
stos
xor
dec
fisubl
inc
jg
cmpsl
mov
idivb
inc
ljmp
rclb
sbb
js
fcmovu
inc
mov
ja
mov
movsl
int3
jle
push
push
enter
rcr
ljmp
adcb
xor
mov
lods
scas
cmp
pop
les
pop
dec
push
nop
das
pop
rcll
adc
jbe
cmpsb
mov
cmp
xor
pop
in
jo
inc
mov
std
cmc
add
jle
loope
xchg
mov
or
fcmovnb
sub
int
ds
repz
ss
push
jg
sarl
fldl
dec
inc
jge
xchg
pop
data16
fdivrs
add
stos
mov
js
push
ljmp
inc
cltd
scas
loopne
cld
push
inc
popf
fxch
mov
repnz
xchg
and
add
insl
or
nop
mov
aam
push
pop
add
stos
dec
sub
dec
xchg
repz
lea
sbb
mov
push
movsb
repnz
out
js
lds
rolb
lcall
lock
mov
pushl
lds
inc
and
jl
push
ja
in
xchg
mov
arpl
fstpl
loopne
push
call
fldl
pop
test
mov
push
add
out
fisubl
dec
push
xor
mov
jle
add
xchg
sbb
pop
decl
xchg
test
jge
push
jle
ret
lock
mov
and
jmp
orb
mov
aam
cmp
add
jbe
fnsave
xor
aaa
call
sahf
int
popa
pop
stos
jge
test
cmc
xor
les
add
js
pop
push
jbe
fisubrs
push
loopw
in
cltd
jne
or
cs
xor
or
adc
adc
nop
int
imul
pop
or
add
mov
pop
gs
data16
outsb
lahf
nop
movsb
outsb
xor
in
adc
imul
push
xchg
push
stos
pusha
in
int
mov
mov
cmp
adc
out
adc
loop
adc
ret
inc
cmp
pop
sbb
inc
dec
ss
jmp
inc
pop
mov
aam
addb
inc
imul
test
in
cmp
rcrb
push
pop
and
jb
xor
mov
xor
mov
test
shlb
xchg
stos
pop
and
add
fnstenv
imul
cwtl
add
fcoml
mov
notb
adc
sbb
inc
lods
or
adc
mov
pop
jae
clc
xchg
sub
in
ljmp
jmp
jecxz
ficomps
add
xor
or
cmp
xchg
push
cwtl
push
pcmpeqw
xor
pop
inc
adc
lcall
jle
mov
icebp
popa
shrb
ss
into
pop
adcl
sti
adc
repz
decl
or
push
je
cmp
add
jmp
arpl
or
icebp
mov
mov
out
adc
pop
inc
test
je
out
add
adc
xchg
sbb
push
call
mov
xchg
int3
xchg
sbbb
xchg
cmpsb
bound
mov
adc
arpl
and
loope
add
push
and
and
mov
rolb
mov
or
loopne
lods
mov
add
sub
ja
in
shll
or
idivl
test
sub
aam
lret
fwait
lret
popf
pop
clc
dec
repz
scas
aam
mov
jmp
stos
imul
shrb
pushf
gs
push
mov
enter
insb
xor
movl
xor
jne
adcb
jbe
push
in
push
repnz
jmp
sbb
adc
jno
cmc
loopew
aas
popa
dec
outsl
or
fstpt
sub
fisubs
xor
ljmp
dec
xchg
cmp
push
sub
in
push
pop
push
test
pushf
arpl
iret
pop
sbb
and
mov
adc
add
lahf
push
sti
mov
ds
dec
rcrl
and
adc
cmp
add
lea
popf
gs
lcall
push
mov
dec
das
cwtl
pop
sarb
inc
pop
pusha
in
js
bound
xchg
mov
test
addr16
and
inc
lods
imul
stos
lea
cli
inc
rolb
ja
mov
mov
pop
pop
or
sahf
cmpsb
xor
jecxz
mov
roll
pop
imul
iret
mov
out
inc
dec
inc
std
dec
pop
pushl
imul
push
mov
cmp
sbb
mov
lea
addr16
mov
inc
and
nop
pusha
sub
fdivs
add
pop
dec
rcrl
push
mov
xor
sbb
jno
cmpsb
mov
mov
sahf
sbb
push
sbb
or
pushf
push
cmc
or
lods
fnsave
rep
lret
xlat
mov
and
xor
xchg
add
cmpsb
ds
sbb
cmp
scas
or
push
push
add
xor
pop
or
sub
outsb
in
sbb
pop
ret
push
cmpsb
aaa
push
mov
adc
mov
insb
mov
dec
cmp
insb
je
fwait
test
out
test
pop
jecxz
add
movsl
pop
pop
imul
or
divl
into
sbb
mov
in
mov
rorl
lods
sbbb
cmp
mov
outsb
jmp
jl
pop
mov
movsl
lret
mov
cld
cmp
fnstenv
arpl
sbb
in
loop
mov
add
cmp
out
pop
loope
mov
je
adc
mov
aam
rcl
mov
xorb
mov
lock
sbbl
sbbb
xchg
mov
dec
popa
dec
mov
or
and
add
js
cmp
add
ffreep
push
add
add
mov
fs
or
inc
cmp
dec
sahf
popa
cld
pop
mov
loope
add
pushf
push
jge
xchg
bound
sbb
and
or
xchg
xchg
and
lods
rcl
pop
mov
in
ss
out
mov
es
subb
inc
mov
aam
pop
or
xor
xorb
bound
outsb
adc
insb
jp
jno
stc
dec
nop
sti
xchg
mov
sbb
popa
xchg
push
add
sbb
addl
pusha
sbb
int3
jnp
mov
dec
and
mov
sub
xor
nop
clc
add
dec
xor
mov
xor
push
lret
or
loope
dec
int3
data16
rorb
dec
or
in
ret
and
ret
inc
cmc
add
idiv
xor
xor
jmp
mov
dec
out
push
pop
outsb
adc
pop
cmp
push
xchg
les
pusha
jo
or
jmp
clc
adc
xor
xchg
mov
xlat
and
enter
rorl
push
adc
gs
ret
mov
movsb
mov
loopnew
inc
xor
pop
ja
push
mov
shll
jbe,pn
movsb
loopne
sbb
ja
push
outsb
pop
sbb
in
sbb
mov
add
outsb
aad
sbb
scas
out
push
pop
popf
stos
pop
inc
pop
fs
fcoml
pop
mov
fnstcw
push
loop
das
pushf
xchg
arpl
sub
mov
inc
test
mov
dec
insb
add
adc
mov
mov
jne
inc
xor
faddl
jb
lods
adc
out
cmp
inc
push
scas
popa
jns
repnz
jbe
adc
cld
inc
mov
mov
cmp
or
cmpsb
xchg
jns
or
sbb
mov
shlb
psrad
mov
lahf
mov
xchg
add
jno
inc
repnz
out
or
mov
mov
test
pop
nop
mov
clc
mov
or
leave
fs
ret
ljmp
ljmp
subl
ss
in
out
xchg
sbb
push
push
bound
mov
mov
in
stos
mov
pop
cld
inc
inc
fwait
aad
test
and
and
aam
ds
sbb
cwtl
pusha
lcall
or
jno
xor
cmp
cmpsb
loopne
inc
pop
dec
mov
push
inc
shlb
out
movsl
and
pop
out
inc
sahf
push
shll
outsl
sbb
jl
inc
data16
mov
xchg
xor
xchg
sub
and
push
push
lods
mov
mov
call
and
inc
ds
jnp
mov
mov
mov
xlat
push
cmp
out
mov
jge
mov
sub
xchg
sbb
xor
adc
sbb
call
idivl
out
clc
imul
sti
insb
or
mov
adc
push
dec
or
xlat
repnz
or
inc
mov
cld
sub
inc
lahf
mov
lret
xchg
mov
inc
dec
add
cmpsl
insb
sar
or
rolb
dec
pop
faddl
or
mov
dec
jbe
sti
adc
sti
cmp
xchg
cmpsb
jp
loope
mov
fs
sbb
test
pop
mov
lret
inc
mov
stc
cmp
jo
push
pushfw
mov
push
jnp
jbe
imul
sub
add
out
stc
mov
or
test
jle
std
jo
mov
mov
out
or
fs
xchg
xchg
into
repnz
lods
jmp
sbb
add
pop
inc
fbstp
jns
inc
mov
in
and
sbb
sub
js
inc
in
mov
push
xchg
loop
push
mov
sub
aam
ret
xor
push
add
aam
push
mov
test
mov
jae
cmp
pop
mov
mov
fcomip
movsl
sub
cmp
shrl
push
xchg
movsb
jae
cli
test
addr16
test
add
aas
test
mov
jmp
pop
xchg
sbb
sub
out
or
dec
xor
leave
fwait
mov
sub
cli
mov
data16
mov
adc
xor
add
es
cwtl
mov
push
inc
cli
dec
cmp
loope
aas
lods
or
cmp
ljmp
xchg
bnd
cwtl
cmp
sbb
ret
mov
inc
inc
stos
sbb
xchg
mov
sbbb
sub
loop
stc
lahf
xchg
and
inc
xor
lds
adcl
test
gs
jno
add
cmp
xchg
push
dec
xor
into
add
push
lahf
or
cmc
inc
repnz
std
pop
outsl
sub
push
xchg
mov
mov
sti
outsl
es
subl
pop
das
xchg
pop
pusha
cmpsl
inc
inc
cmp
or
dec
dec
inc
stos
mov
ret
cmp
stos
cs
jns
jns
dec
dec
jge
cld
out
cs
psubsw
xchg
out
lods
mov
and
sbb
add
dec
lea
jl
movsl
xchg
inc
scas
xor
ds
sub
arpl
sub
bound
enter
cmpb
xchg
in
adc
subb
fisttpl
mov
call
aad
add
xor
scas
inc
daa
dec
jmp
fstl
inc
lret
and
rcrb
inc
xor
pushf
add
mov
mov
jns
push
loopne
add
imul
dec
ja
aas
sub
es
movsb
lock
adc
dec
in
push
or
xlat
xorb
dec
enter
and
leave
mov
in
cmp
add
sarl
xchg
jecxz
sub
cs
xchg
adc
mov
and
movsb
push
ja
ficomps
popa
mov
je
mov
xchg
mov
ret
xchg
jecxz
inc
lret
mov
pop
subb
outsl
sub
jno
scas
and
rorb
icebp
push
adc
lcall
int
jo,pn
xchg
sbb
repnz
lahf
cmp
jns
shrb
inc
pop
push
in
mov
bound
jnp
gs
aaa
mov
adc
lock
add
in
and
aad
imul
fstps
sbb
sahf
mov
imul
mov
call
xchg
sbb
xchg
jno
push
and
and
enter
mov
mov
jo
inc
cmp
lock
sbb
pop
or
mov
push
xor
daa
lods
mov
push
lock
test
scas
test
mov
inc
adc
mov
rorl
or
rorl
std
mov
loopw
fs
leave
loop
xor
jmp
sar
adc
stos
fiaddl
addl
mov
out
cltd
push
inc
mov
inc
aad
jnp
cmp
aas
xor
mov
mov
cwtl
iret
jno
xlat
jb
je
mov
xchg
xor
add
push
sbb
mov
insl
lea
and
pop
cli
or
dec
ss
and
sub
sub
pop
and
xchg
mov
mov
inc
hlt
adc
icebp
xor
lods
lahf
mov
cmp
cmp
pop
and
mov
inc
in
loop
xor
imul
mov
adc
ret
jne
push
inc
std
sub
push
call
in
inc
rolb
jae
rep
add
subl
stos
lahf
dec
stc
fdiv
mov
pop
add
outsb
mov
lahf
sub
lods
mov
and
fisttps
shlb
ret
repz
shlb
aaa
cmp
inc
les
loopne
push
add
xchg
mov
dec
inc
xchg
jne
test
loop
mov
inc
mov
push
movsl
fsubl
sbb
ljmp
dec
aaa
ljmp
cmp
ss
loopne
mov
test
stos
ficoml
pusha
pop
movsl
sbb
pop
pop
insb
pop
clc
das
push
xchg
cmp
lock
inc
push
and
ja
cltd
movsb
fldcw
int
idivb
lret
xor
sti
insl
lock
adc
and
daa
inc
into
lret
sbb
out
in
sahf
in
mov
adc
inc
ret
aam
dec
iret
and
or
icebp
xchg
push
mov
or
pop
lds
adc
rcrb
loopne
mov
arpl
or
arpl
arpl
mov
push
xor
mov
aas
or
insb
pop
sbbl
cld
jbe
neg
mov
repz
cli
dec
cmc
mov
or
jge
outsl
aam
addb
imul
xor
lods
dec
push
xchg
mov
fsts
push
flds
pop
in
fwait
call
sub
lea
lds
call
sbb
movb
fcoms
cmp
push
out
adc
pusha
push
sub
sub
outsb
pop
addl
cltd
xor
adc
popf
mov
xlat
sub
mov
clc
mov
and
add
shr
dec
sub
xchg
xchg
jg
stos
pushl
xchg
sbb
and
insb
in
imul
das
cmp
into
rcr
fld
cmp
movsl
adcl
fimull
pop
movsb
xchg
inc
lock
mov
sub
cmp
cmpsl
movsb
test
stos
mov
adc
xorb
ficoms
out
inc
push
pop
jge
out
shll
sbb
test
push
sub
adc
xchg
std
sbbb
test
iret
dec
pop
sub
cmpsl
arpl
clc
lds
push
outsl
mov
xchg
xchg
mov
and
inc
adc
lcall
nop
mov
into
and
xchg
lods
adc
std
notb
loop
dec
cmovl
mov
adc
data16
sti
movsl
fimuls
and
jl
fsts
add
lret
xchg
adc
inc
out
std
nop
enter
push
inc
and
fxch
jo
xchg
repnz
and
jle
or
jns
push
xor
xor
enter
aam
call
aaa
pop
sti
out
aam
and
imul
je
sub
insl
adc
mov
gs
je
and
mov
xor
cmpsl
lds
bswap
sbb
push
movsb
or
lret
dec
sbb
sbb
push
lret
cltd
popa
stc
pushf
pop
jmp
inc
or
adc
sub
mov
xor
cld
cltd
fidivs
jge
in
arpl
jl
add
xchg
je
inc
movsl
xlat
shrl
ss
idivb
adc
pushf
in
dec
outsb
cs
mov
in
insb
in
outsl
add
mov
lret
mov
sbb
pop
out
and
aaa
and
arpl
or
stc
lahf
inc
cmp
fxch
xchg
stc
and
mov
adc
and
jns
xorb
mov
cmp
cwtl
push
pop
arpl
mov
push
lcall
jecxz
sbb
imul
repz
or
push
jno
orb
leave
cmpl
lea
inc
jle
adc
xor
sub
inc
jl
sub
popa
push
rcr
inc
insl
cmp
jbe
xor
movsb
mov
mov
nop
popf
out
push
add
dec
xor
mov
mov
pusha
gs
std
std
xchg
cmp
nop
inc
jmp
in
xchg
add
ret
dec
lcall
inc
in
or
sbb
cmpsb
call
fcompl
movsb
fdiv
lock
sub
cld
in
cmp
sub
movb
add
jl
test
cmpl
out
cmpsl
mov
push
mov
pop
push
mov
leave
cli
fadds
adc
add
dec
lahf
icebp
ds
or
dec
push
jnp
into
or
fcoml
or
mov
jnp
clc
leave
test
inc
out
mov
sbb
pop
dec
fisubl
jg
adc
call
and
dec
es
fisttpll
push
test
bound
imul
sti
push
or
pop
push
sahf
inc
xchg
and
lods
push
pop
mov
fwait
in
xchg
mov
dec
mov
sub
popa
jnp,pt
push
xchg
pop
or
hlt
mov
cmp
das
inc
call
sub
dec
jno
sbb
lea
xchg
mov
ds
dec
jne
xchg
cmpsb
mov
repz
push
cld
inc
leave
push
mov
mov
gs
imul
sub
pop
push
push
xor
sbb
dec
insb
shll
std
aam
xchg
or
scas
hlt
cld
xor
lret
jno
pusha
pusha
shr
rep
or
dec
lods
fisubrs
mov
xor
ja
or
andb
in
jg
cmp
ds
xchg
push
popf
mov
mov
gs
scas
popf
mov
jne
dec
xor
movsb
scas
push
lods
ret
out
repz
fisttpl
fidivrl
imul
popa
in
cli
cmpsb
mov
inc
aam
in
xor
dec
popf
imul
aaa
int
in
jecxz
jb
fimull
sbb
cmpsb
cmp
pop
mov
inc
mov
inc
jl
jle
pop
adc
push
mov
xchg
jns
out
mov
mov
push
insl
pop
jns
mov
mov
push
push
lock
repnz
cmp
enter
push
cmpsl
mov
frstor
inc
fs
pop
xor
cmpl
and
sub
mov
bound
dec
inc
dec
mov
rcrl
outsl
push
mov
push
or
fs
notb
pop
test
adc
fldenv
or
mov
cwtl
cmpxchg
xorb
push
aaa
or
popf
mov
sbb
in
mov
test
adcl
pusha
inc
pop
sbb
test
pop
inc
push
jo
cli
sbb
xchg
int3
cltd
insb
test
das
cld
pop
jecxz
add
sub
mov
movsl
mov
jo
or
inc
fldcw
fwait
test
stc
cs
jge
jg,pt
scas
xor
jge
add
rcll
push
mov
cmp
gs
inc
inc
jnp
sub
shl
int3
pop
out
jne
inc
sbb
rorl
pushf
rclb
push
sbb
sub
adc
inc
xor
inc
pop
popfw
out
mov
insl
jno
cld
sbbb
xchg
or
fldcw
loope
lock
push
mov
or
iret
mov
pop
stc
push
roll
loope
insl
add
repz
pop
push
pop
push
rcl
fmull
xchg
in
pop
and
div
in
and
push
adc
xchg
add
add
in
pop
sbbl
dec
sti
dec
push
int3
mov
imul
cmc
fdivs
pop
jp
daa
mov
lds
and
daa
xchg
dec
dec
stc
lods
outsb
xchg
ficompl
push
popa
mov
mov
outsl
add
repnz
ss
add
loop
gs
jbe
cmp
inc
jcxz
fsub
adc
dec
fistl
cmp
das
mov
pop
bnd
sub
movsb
mov
cs
sbb
sbb
sti
jnp
repnz
add
mov
push
add
push
div
or
gs
pop
cmpsb
add
fildl
xchg
insb
outsb
xchg
scas
cmp
dec
cwtl
testl
popa
loop
in
jge
testb
jne
fwait
cmpsl
xchg
xchg
add
add
push
push
sub
add
xchg
sahf
xchg
cmp
jmp
and
stos
clc
ss
in
push
mov
test
aaa
mov
pop
inc
arpl
cmpsl
in
js
push
nop
cwtl
push
cmpsl
xor
sbb
and
leave
xlat
adc
jbe
mov
cmp
aas
xlat
sub
mov
push
mov
rorb
lret
jg
push
push
sbb
inc
pop
sar
mov
clc
aas
push
cmpsl
int3
incl
xchg
mov
sahf
subl
xor
test
sbb
aaa
add
cld
push
adc
repz
dec
or
xchg
inc
xor
inc
inc
jecxz
pop
imulb
add
sti
test
aad
outsl
fstpt
pop
out
pop
lret
xor
test
jmp
add
mov
xchg
cmpsl
xlat
es
cmpsl
scas
js
dec
push
lcall
enter
or
pop
in
cmp
cmpsl
frstor
scas
insl
fwait
hlt
in
lock
imul
shl
cltd
jne
ja
lahf
push
mov
iret
lods
incl
neg
ss
cmpsb
jno
jl
pop
cmpsb
mov
shlb
cmpsb
add
mov
inc
das
xchg
bound
xchg
push
mov
mov
idiv
pop
mov
jno
sbb
jo
out
xchg
gs
arpl
stc
dec
cmp
or
mov
mov
fstl
rorb
pop
mov
rorb
adc
or
and
repz
mov
mov
cmpsl
ret
das
xchg
add
sub
jbe
sub
add
js
faddp
cmp
adc
shlb
sub
iret
rcll
ljmp
out
cmpl
dec
jbe
shll
rorl
int3
xor
jl
jp
in
or
test
fsubr
mov
jns
movsb
mov
mov
lret
push
mov
jae
cmpl
xchg
lods
cmp
lahf
push
repnz
bound
mov
mov
pop
in
inc
leave
cmp
xor
sarl
addl
cmp
adc
xchg
fidivl
rolb
sbb
jbe
aad
dec
fisttpl
xchg
call
sbb
scas
inc
insb
cld
neg
adc
popa
mov
and
add
ljmp
ficoml
sbb
jg
mov
lret
sbb
addr16
push
mov
shlb
nop
jl
inc
pop
lds
pop
and
push
and
out
fxch
mov
and
or
sti
dec
inc
jno
add
loope
add
dec
inc
cmp
sub
cmp
lea
movsb
aam
sub
push
pop
add
insb
stos
adc
jl
lahf
fs
push
xchg
jecxz
dec
push
sti
mov
jle
pop
or
ljmp
in
push
add
push
addr16
mov
dec
test
lods
mov
clc
out
fnstenv
pusha
dec
shrl
cmp
insb
fsubp
stc
dec
cmp
pop
push
out
xchg
xchg
std
pop
neg
stos
loop
adc
jle
fs
in
pushf
ds
test
bnd
add
cmp
gs
lret
dec
and
push
and
pop
jo
mov
and
xchg
and
pop
test
test
daa
cli
popf
data16
iret
bound
sahf
add
js
mov
adc
insb
pop
push
push
sub
out
cmp
out
and
shll
cmp
mov
and
adc
dec
mov
xchg
sahf
pop
lcall
test
enter
enter
cltd
adc
cmc
negl
sub
test
jns
int
mov
and
lods
subl
fcomip
jb
cld
pushf
mov
rcl
repnz
jecxz
pop
nop
ljmp
xor
add
jl
nop
popf
dec
cltd
pop
mov
les
adc
sti
jge
push
add
outsb
nop
xchg
cli
data16
lea
insl
dec
pusha
jbe
les
pop
out
xchg
jbe
and
sub
add
xlat
push
push
add
sbb
aas
pop
insl
inc
mov
aas
enter
orl
xchg
mov
mov
outsb
xor
test
fmul
hlt
es
sbb
xchg
fdivs
in
mov
cwtl
mov
cmpsl
add
cltd
movsl
loopne
or
push
movsb
fs
fs
mov
popf
ret
inc
loopne
push
jmp
mov
imul
xchg
cmp
and
jbe
cmp
rclb
xor
mov
add
mov
sbb
push
xchg
sti
add
sbb
dec
add
mov
add
dec
dec
adc
inc
or
pavgw
enter
dec
jle
lcall
jle
into
adc
loopne
cld
sbb
mov
or
dec
cmp
outsl
pop
xor
xlat
xchg
repnz
inc
icebp
pop
movsl
ss
jmp
and
jge
cmp
movsl
cld
test
and
cmp
sbb
pop
jno
jbe
cmp
inc
pop
jmp
mov
add
outsb
jg
dec
popf
js
cwtl
mov
movsb
dec
push
jb
fwait
popf
repz
or
add
in
mov
and
sub
shrl
add
arpl
cmp
dec
or
push
cmp
lea
jl
cmp
pusha
dec
daa
jg
add
mov
out
push
inc
daa
loopne
jmp
and
repz
push
jecxz
mov
lret
push
cmp
push
and
sti
pop
sbb
fidivrl
adc
cltd
mull
cmpb
or
gs
mov
cwtl
out
pop
dec
gs
jle
fimull
test
pop
test
nop
sub
into
sahf
jmp
mov
push
xor
loope
inc
adc
fists
mov
adc
sub
pop
jecxz
popa
push
or
dec
into
imul
cmpsb
jge
fdivrl
in
je
add
xchg
jg
cmc
sbbb
inc
sbb
movsb
jno
pushf
cmp
pop
popf
sub
stos
xor
pop
and
orb
in
sub
aas
mov
mov
imul
sti
cwtl
xor
mov
push
sbb
test
sbb
sbb
stc
bound
push
pop
mov
inc
sub
pop
daa
aas
jo
jmp
pushf
imul
xchg
hlt
mov
push
jge
sbb
xchg
xor
out
lret
add
lahf
jbe
cmp
sbb
push
jo
fmul
loop
cmp
adc
roll
adc
fiadds
hlt
pop
or
pushf
mov
pop
sub
xchg
aam
fcmovnbe
nop
lahf
sbb
arpl
insb
cmpl
xchg
sbb
jecxz
je
dec
jne
movsl
cwtl
pop
jge
inc
cmpsb
sub
pusha
lock
mov
push
int3
pop
adc
jle
mov
es
dec
xchg
sub
push
sbb
mull
pop
and
cli
and
or
push
fbstp
repz
pop
mov
inc
inc
mov
ficoms
jne
mov
repz
bound
loop
sbb
add
jge
cltd
movb
mov
xchg
daa
clc
out
rcl
xchg
std
dec
fnstsw
cmp
test
cmc
psubd
outsb
jne
sbb
ss
cmp
push
movsb
push
test
xchg
jl
mov
adc
ret
ds
cmp
sbb
rcrb
int
jp
sub
add
jb
pop
lock
outsl
sbb
sbbl
lret
std
popa
nop
test
jmp
push
ja
ficomps
pop
mov
movl
mov
push
stc
stos
imul
enter
dec
mov
inc
sbb
mov
dec
mov
mov
or
das
xor
xchg
clc
mov
and
rorl
pop
push
leave
xor
mov
cmp
lahf
push
inc
sub
ja
sti
pushf
aaa
les
xchg
loopne
std
mov
pusha
in
cmp
pop
xchg
out
sub
daa
mov
fwait
or
push
xlat
imull
xor
call
test
bound
xchg
mov
xchg
mov
lods
xor
scas
lea
cmp
push
cmpsl
add
scas
out
ret
dec
mov
test
xor
or
add
jmp
add
jbe
fdivrl
cmp
mov
aas
add
push
cmp
lahf
add
out
decb
cmp
cmp
mulb
xor
push
aaa
aaa
xlat
or
push
iret
dec
jg
stc
push
add
push
cmp
lods
mov
pushf
fsubr
xor
sbb
or
lods
f2xm1
dec
inc
cli
push
data16
cmp
dec
jnp
cmpsl
jl
jge
mov
adc
mov
je
stos
add
sub
jge
loop,pn
fistpll
out
shrb
mov
or
jmp
pop
hlt
scas
pop
stos
lock
fwait
iret
mov
pop
jns
push
mov
adc
xor
sbb
sbb
rol
push
sti
test
scas
mov
pop
dec
cmpsl
sub
cltd
xor
mov
call
jg
je
adc
pop
popf
rcr
jae
dec
loop
mov
dec
jne
inc
push
adc
cmp
jl
ds
je
adc
dec
pop
pop
and
mov
sub
scas
jp
adc
shld
out
rcll
nop
lret
xchg
push
popf
int
int3
dec
dec
sbb
and
dec
int3
mov
leave
bound
xchg
movsl
push
into
xchg
ds
lea
sub
xchg
cmpsl
xchg
ffree
mov
mov
mov
cmpsl
out
sbb
mov
mov
lahf
and
test
add
cli
xchg
xchg
scas
shll
ds
pusha
in
or
call
sbbb
js
push
movsl
iret
es
sbb
movb
push
lods
inc
mov
cmpsl
outsl
xchg
sbb
aaa
iret
arpl
popa
cmp
int
mov
sarl
push
pop
es
cmp
mov
and
fwait
fdivrl
loop
ss
loope
cmpsl
cmp
jl
jb
xchg
cltd
std
pop
das
add
aas
mov
jmp
jo
mov
xchg
or
sub
xor
test
add
sub
xchg
mov
mov
movsb
xchg
dec
test
jecxz
jmp
push
cwtl
adc
xchg
mov
int
xlat
xchg
push
and
repz
mov
aam
sub
mov
hlt
jle
pop
mov
sub
rol
stc
cmp
call
mov
mov
loop
push
mov
xchg
hlt
adc
scas
dec
xchg
aaa
sbb
fcoml
adc
je
into
rclb
jbe
sub
rcr
loopne
ljmp
jmp
push
imul
jp
mov
ss
xor
sub
cmc
and
pop
mov
jns
cmp
jno
dec
lock
xlat
inc
scas
inc
or
fisubl
stos
ret
xor
pop
lock
imul
call
stos
out
lods
lret
pusha
sub
dec
mov
stos
mov
les
in
hlt
rcrb
nop
cmp
and
xor
andl
into
aaa
std
xchg
ret
xchg
add
adc
mov
jmp
dec
dec
imul
fucomip
jnp
xchg
push
lret
imul
xchg
pop
lods
push
jo
out
fmuls
jle
xor
aad
es
jo
lar
sub
xchg
shl
inc
jmp
inc
mov
add
cltd
and
push
or
fimuls
inc
push
or
popf
dec
repz
addr16
imul
pop
sbb
movsl
mov
fsubrl
lahf
out
repnz
jg
shr
inc
push
pop
pop
imul
sbbl
lret
mov
scas
aaa
scas
lods
cmp
std
xchg
std
xchg
and
adc
xchg
xor
dec
into
sahf
mov
mov
clc
push
fs
push
mov
shlb
scas
ret
movsl
and
out
and
aam
cmp
or
inc
ret
and
sub
fisttps
jmp
push
mov
pusha
adc
testl
xor
mov
fdivr
adc
jnp
pushf
fcomps
xchg
es
push
scas
xchg
dec
add
xlat
inc
mov
push
dec
jne
mov
mov
in
call
clc
xchg
push
inc
dec
movsb
in
mov
cld
pop
pop
and
outsl
mov
out
sbb
int
mov
sbb
dec
cld
lods
cwtl
pop
repz
stos
push
cli
je
inc
notl
jbe
mov
fs
stc
xor
test
jle
mov
jg
dec
adc
addb
subb
call
sub
shll
sub
int3
movsb
mov
mov
adc
dec
or
xchg
lcall
inc
test
out
cwtl
inc
jno
sub
jle
jecxz
mov
lods
fcompl
dec
sbb
clc
test
push
pop
outsb
shlb
out
ss
je
stos
jno
fsubr
insb
movsb
xor
pop
adc
dec
fnsave
mov
lods
test
popa
stc
push
ficoms
mov
inc
mov
mov
addr16
push
fwait
cmp
dec
hlt
pop
mov
les
jg
push
clc
orl
cmp
dec
jno
dec
push
lods
daa
jle
clc
je
aad
int
out
xchg
sbb
or
xchg
mov
jp
xchg
enter
dec
clc
insb
xor
mov
mov
cld
lea
or
cld
sbb
adc
mov
aam
popa
inc
xchg
mov
pop
inc
test
dec
aam
into
outsb
arpl
cmp
lods
pop
mov
xor
adc
xchg
jne
cld
bnd
cli
sbb
pusha
lahf
sar
idivl
xor
push
mov
mov
add
mov
jno
xor
lahf
or
jp
rcrb
push
push
jbe
sub
test
or
xchg
cmp
sar
imul
jmp
mov
push
dec
ljmp
popa
lds
ret
xchg
scas
inc
xor
dec
data16
jns
jae
icebp
mov
into
cmp
sub
rclb
add
pop
push
sarl
pop
ja
out
jne
cmp
pop
add
loopne
jno
pop
adc
sbb
ss
sub
scas
test
cmp
mov
rorb
add
subb
sub
leave
lea
les
xor
sub
sahf
push
loope
push
push
sahf
gs
add
mov
leave
push
mov
je
stos
sbb
bound
jnp
jbe
xchg
test
cmp
nop
or
mov
adc
jb
popf
loop
push
insb
sbb
xchg
bound
fiaddl
inc
inc
jl
imul
sar
mov
enter
aaa
sti
sub
bound
push
jnp
and
xor
sbb
jae
pop
xor
repz
outsb
scas
cmp
rorb
cmp
outsl
out
mov
rep
sbb
sbb
mov
mov
jp
push
xlat
popf
das
loopne
and
push
cli
add
mov
aaa
lock
jle
hlt
and
hlt
fisttps
hlt
inc
mov
or
pusha
add
lret
push
iret
enter
mov
sbb
lret
shlb
push
pop
adcl
push
into
mov
mov
mov
dec
sub
adc
dec
js
fndisi(8087
lcall
mov
lods
sbb
sub
add
nop
jmp
lods
stos
mov
pop
mov
out
and
jmp
xchg
int3
or
dec
outsb
cltd
in
int
adc
push
idivl
andb
cmpsb
mov
mov
in
mov
mov
cmpsb
data16
hlt
and
je
or
fcomps
lods
pop
xorb
ljmp
push
or
xchg
repz
push
outsb
decl
lret
mov
pusha
mov
in
dec
add
xchg
mov
test
xor
data16
stc
cmc
sub
push
jmp
mov
std
stos
xor
add
jmp
cmpb
inc
pushf
add
jmp
inc
cmp
mull
ja
dec
mulb
push
push
xor
dec
push
js
adc
cmp
cmp
push
sub
inc
cld
pop
xlat
fmul
mov
cmp
and
jl
stos
in
lcall
bound
mov
stos
adc
aas
daa
mov
popf
and
pop
lods
push
lret
xchg
and
es
inc
aaa
mov
stos
adc
mov
pushf
js
pusha
cmp
push
add
dec
cli
pop
inc
stos
add
sti
inc
add
adc
popf
addr16
gs
fcoml
stc
jb
or
xchg
pop
cmp
xchg
xor
adc
subb
scas
xorl
lods
sbb
jae
movsl
lods
and
test
ja
test
mov
mov
ss
outsl
andb
push
call
inc
imul
xchg
mov
push
popf
sahf
seto
cmp
outsb
pop
pushf
xlat
mov
adc
shll
cmp
daa
cltd
adcl
mov
clc
jns
push
add
push
push
in
aam
pop
fstp
mov
push
aas
test
add
push
nop
ret
bound
jle
rcll
shrl
lret
ljmp
sub
in
loop
add
popa
fs
pop
inc
imul
andl
lret
jno
fisttpl
sbb
lret
mov
cwtl
icebp
xchg
add
fdivrp
mov
out
mov
xchg
sbb
xchg
mov
repz
sub
call
sbb
jo
addl
out
loope
mov
jg
dec
cli
dec
in
pop
mov
xchg
out
loope
insl
dec
adc
aam
inc
loop
sub
aam
push
xchg
sbb
sbb
jle
sub
js
xchg
push
and
out
mov
into
inc
mov
shrl
xor
mov
pop
and
mov
jns
outsb
popa
outsl
sahf
inc
mov
mov
cmpsl
mov
outsb
cmp
test
sbb
adc
push
imul
adc
add
fdivrs
ficomps
insl
das
in
xacquire
test
frstor
jl
in
xor
cmc
sub
out
pop
dec
sbb
push
es
xor
enter
jo
insl
xchg
arpl
jecxz
or
sbb
add
mov
jae,pt
cmp
pop
xor
push
out
and
adc
sbb
jbe
dec
lods
mov
ja
ss
add
mov
push
cltd
pusha
sbb
lds
mov
in
out
jne
test
pusha
rorl
sbb
pop
hlt
cli
ficompl
cmp
fisttps
notb
fisttps
mov
cmp
mov
imul
aad
dec
cwtl
and
jns
scas
nop
cltd
add
jb
rcll
add
fwait
push
mov
cmp
loope
lea
call
negb
push
add
hlt
lea
adc
or
out
sub
sub
icebp
mov
mov
push
icebp
outsl
scas
pop
pop
adcl
inc
push
insb
fadd
mov
or
popf
idivl
xor
addr16
xor
pop
mov
sbb
fdivr
les
out
jmp
imul
xor
mov
push
cmp
mov
jne
add
jo
or
scas
or
test
pop
fbstp
xor
les
pop
fwait
bextr
or
aam
incb
mov
ficoms
jae
mov
xor
sbb
in
iret
rorb
dec
dec
imul
pop
sahf
jp
inc
pop
push
push
popf
jp
outsl
xchg
decl
gs
lods
xchg
in
jp
je
sub
imul
mov
jle
ja
sub
movl
mov
sbb
inc
dec
add
lahf
addb
jmp
dec
xor
xor
inc
xor
bound
sbb
out
mov
mov
lret
lahf
jae
sti
in
icebp
mov
mov
xchg
mov
popa
mov
fs
scas
lahf
jns
test
inc
inc
xchg
ss
rorb
jne
xchg
out
pop
mov
movsb
ret
js
inc
xchg
int3
adc
nop
and
xchg
sti
mov
mov
pop
in
or
loopne
push
sub
mov
scas
xchg
test
movsl
test
pop
in
fbld
mov
aas
ja
push
roll
adc
fadds
pop
and
icebp
or
xchg
out
and
pushw
lret
daa
in
cmp
jne
inc
bnd
mov
in
inc
jbe
inc
inc
lret
int
add
test
mov
inc
inc
hlt
pop
mov
mov
ret
movl
xor
out
shlb
es
movsb
pusha
xchg
movsl
mov
ss
mov
pushf
pop
mov
cwtl
add
mov
iret
test
cmpsl
inc
and
xchg
lcall
sbb
js
push
aaa
movsl
clc
and
mov
rolb
jmp
lahf
enter
mov
in
xor
call
dec
mov
dec
divl
push
sbb
jb
inc
dec
dec
mov
and
mov
ret
and
sahf
inc
fidivrs
jecxz
mov
xlat
adc
mov
push
mov
xlat
ljmp
aad
dec
out
pop
or
daa
xchg
push
adc
ss
lods
sahf
bound
sub
jne
call
pushf
or
sub
mov
push
jns
cwtl
sub
jg
aas
enter
loopne
dec
inc
aam
data16
push
cld
push
outsl
mov
dec
jg
int
xor
mov
sbb
mov
sub
jge
dec
xor
or
in
inc
add
std
mov
and
dec
pop
lret
cmp
pop
out
inc
push
add
sub
fists
inc
andl
rcr
xchg
lret
jne
mov
inc
push
repz
sub
imul
sub
pop
mov
cwtl
mov
data16
enter
pop
xchg
fwait
push
lock
mov
ror
push
das
cmp
leave
in
add
dec
lret
xor
sub
pop
aas
pop
cmp
aaa
cs
xor
scas
or
in
test
dec
jmp
iret
mov
ja
inc
and
enter
cmc
cmp
cld
in
wrmsr
sbb
pop
jae,pt
push
fadds
in
ret
fstl
mov
push
clc
fwait
inc
sahf
inc
xchg
mov
xorb
out
out
inc
mov
movsb
push
pop
or
and
rcrb
pop
mov
movsl
push
jbe
jno
mov
ret
adc
lret
mov
push
lret
ror
out
dec
cmp
popa
lods
mov
jno
push
jge
pop
cmc
push
fnsave
fldenv
nop
in
dec
lods
dec
std
sub
cmpl
adc
rcl
lcall
outsb
repz
imul
sub
cld
dec
sbb
mov
pop
les
ljmp
push
sbb
push
stos
int3
mov
cli
scas
xchg
push
cld
shlb
sbb
aam
or
addl
ljmp
push
cmp
adc
inc
mov
mov
rorb
sbb
and
add
pop
push
jle
mov
jg
popf
add
sarl
mov
loope
stc
andl
pop
dec
push
inc
mov
jmp
mov
sub
add
cvtpd2ps
mov
push
popf
aaa
daa
into
sti
hlt
xchg
mov
fistps
aaa
icebp
jae
mov
nop
adc
mov
pusha
mov
aaa
add
testl
add
inc
pusha
jne
xor
jo
fnstcw
cmp
gs
mov
out
incb
leave
lahf
push
sub
xor
pop
dec
fisubl
lret
lahf
adc
cltd
fbld
scas
xchg
shrb
fnstsw
iret
cmp
sub
pop
fwait
mov
mov
xchg
inc
dec
dec
push
mov
icebp
push
mov
push
pop
movsl
jp
fs
push
pop
jge
sahf
or
xor
xchg
lea
or
sbb
dec
jne
jl
and
sbb
or
push
bound
mov
mov
add
xchg
int3
pushf
push
aaa
adc
mov
ljmp
fimull
adc
mov
add
lock
data16
testl
pushf
mov
xchg
add
jl
bound
add
pusha
dec
loope
xchg
dec
lds
insl
cli
pop
cli
or
cmp
jge
out
aaa
pop
cmpsb
lahf
andl
movsl
mov
jp
ret
popf
imul
testb
push
push
cld
inc
lret
int
outsl
push
and
sbbl
adcw
mov
pusha
iret
leave
pop
loopne
mov
wrpkru
xchg
fwait
dec
cltd
pop
mov
lret
std
movsl
jno
dec
sbb
jae
mov
or
je
out
jb
push
js,pn
cs
scas
enter
dec
out
inc
ret
push
ret
or
fnstsw
loopne
je
jecxz
push
pop
sub
xor
into
enter
xchg
jno
sub
iret
negb
push
pusha
loop
push
mov
jbe
mov
add
test
push
cmpsb
pusha
shrl
ljmp
and
repnz
pop
insb
incb
or
mov
and
aas
imul
push
in
add
gs
lock
aas
cmpsb
jnp
mov
in
pop
in
inc
shrb
mov
loope
test
aad
cs
cltd
lods
pop
mulb
sub
inc
dec
dec
pop
push
xchg
adc
push
push
or
aad
xor
daa
mov
movsb
xor
lret
adc
gs
cmp
mov
sarl
bsf
sub
mov
sub
cmp
dec
xchg
js
jnp
insl
ja
adc
mov
pop
clc
pop
lea
or
popa
cmp
subb
push
inc
jecxz
fcmovu
in
lock
scas
ret
ljmp
pop
adc
enter
mov
lods
mov
push
movsb
ret
add
jp
lcall
out
cmp
mov
pop
mov
call
and
add
inc
jmp
and
test
into
jmp
dec
dec
or
push
push
cs
cwtl
std
lea
fiadds
outsl
push
push
clc
mov
xor
adc
jmp
push
call
int3
pop
lret
pop
cmc
inc
dec
or
leave
in
out
es
cmp
mov
mov
sbb
pop
fisubs
lret
int3
pushl
or
enter
stc
stos
insl
je
insl
sub
int
jecxz
push
outsb
push
es
ror
rclb
adc
nop
jg
inc
fmull
arpl
ljmp
ljmp
cli
out
pusha
mov
data16
test
add
push
mov
dec
jmp
inc
sbb
pop
mov
into
daa
ud0
or
sub
mov
scas
cmp
and
dec
movsb
inc
inc
imul
popf
add
popf
testl
dec
add
jb
inc
or
jnp
xor
cmp
adc
xchg
popa
sbb
pop
scas
and
rolb
and
in
mov
xchg
jbe
imul
cld
lock
fistpl
std
stos
in
mov
in
xor
inc
jmp
jnp
aam
mov
and
call
outsl
xchg
lods
mov
or
mov
mov
std
push
mov
push
jmp
or
aam
cmpsl
int3
sub
mov
jbe
push
push
adc
pusha
and
inc
mov
cmpsb
test
xor
cmpsl
mov
jnp,pn
dec
xchg
pop
xor
jle
push
sub
aam
mov
jno
mov
lahf
push
mov
outsb
push
mov
dec
jmp
push
cmp
pop
push
iret
inc
popa
pop
mov
xchg
movsb
repnz
fnstcw
scas
addr16
dec
fsubr
add
clc
mov
rolb
add
push
rcrb
push
mov
add
mov
sbb
pop
pop
aaa
lcall
pop
enter
and
movsl
lret
cmpsb
add
mull
sub
mov
test
into
push
rclb
xchg
push
adc
push
iret
jg
or
xor
pop
mov
test
cs
sar
xor
pusha
ret
push
fistpll
shlb
hlt
add
gs
orl
pop
nop
rol
xor
xor
loope
xor
sahf
aaa
bound
andl
or
ja
inc
shll
pop
add
mov
arpl
xchg
ret
pop
lods
sbb
cmpsb
push
adc
in
gs
mov
jge
lcall
bound
std
mov
add
loop
and
xor
loop
mov
inc
xor
pop
addr16
in
mov
movsl
test
mov
cmp
xor
xchg
hlt
test
nop
test
call
push
or
and
andb
mov
push
aad
jg
add
mov
test
sbb
ret
repz
sub
dec
inc
sub
scas
inc
cmc
cwtl
movsb
dec
sub
add
out
shl
jns
stos
ljmp
push
xchg
mov
dec
pop
dec
out
clc
lock
jg
xor
out
xchg
inc
ret
imul
arpl
or
icebp
inc
pop
pop
or
rolb
loope
pop
addl
or
lcall
ret
xchg
in
stos
pop
and
in
jp
rcll
jns
dec
and
movsl
mov
mov
into
aas
xor
aas
cmp
cs
std
inc
inc
sub
cwtl
pop
mov
inc
push
inc
cmp
ds
cmp
mov
fs
inc
in
mov
ljmp
adc
data16
sahf
dec
push
mov
imull
in
dec
out
aam
mov
add
and
push
decl
stos
addr16
pop
cmp
pop
mov
cmp
sti
jmp
test
push
xor
xchg
push
int
addr16
pusha
sbb
adc
and
inc
sbb
wrmsr
repz
cmp
aaa
xor
dec
jle
call
xor
xchg
jnp
outsb
leave
cmp
pop
sarb
cmpsb
lea
imul
push
mov
pop
add
push
or
lds
test
jp
enter
jg
pop
jge
jge
mov
cld
push
sub
mov
enter
dec
mov
test
mov
mov
sbbl
and
addr16
adc
pop
dec
imul
jno
mov
mov
jae
and
pop
fwait
lods
adc
push
cmp
dec
aad
push
cmpsb
push
comiss
xor
jl
sbb
insl
sti
lods
jne
dec
add
mov
arpl
or
lea
pop
scas
and
add
int
lods
add
xor
dec
and
lock
scas
xchg
std
in
jae
daa
addb
fnsave
push
int
jb
repz
mov
jg
jl
arpl
cmp
jb
pop
fs
rcrb
mov
add
loope
into
jno
lret
xlat
out
and
pop
or
ret
inc
adc
and
mov
sahf
dec
xor
hlt
outsl
sub
lret
and
sar
mov
shr
or
pusha
push
repz
cltd
jp
adc
addb
dec
add
pop
fisubrl
push
xor
mov
test
out
movups
pop
sbb
in
jg
jp
mov
shll
ret
mov
fbld
xor
lods
push
mov
or
pop
jmp
add
or
imul
and
xchg
sub
bound
xor
aad
xchg
pmaxub
hlt
mov
cmp
dec
aas
in
setne
push
dec
out
out
mov
adcb
cmpb
imul
lds
mov
pop
sti
jno
cmp
adc
or
jge
cmp
mov
call
cmp
dec
das
es
mov
jg
jg
aas
mov
fucom
push
mov
popf
paddw
inc
loop
test
xchg
std
jo
nop
adc
mov
inc
and
push
stos
xor
shl
ds
mov
and
out
dec
push
clc
out
inc
lock
nop
fs
mov
sub
xor
cltd
xor
push
gs
pop
dec
out
mov
add
scas
and
mov
fidivs
cmp
dec
ret
dec
stos
les
mov
xchg
pop
sub
lds
push
ss
mov
fs
sub
ds
cmp
cwtl
out
dec
xchg
repnz
sub
lods
sysexit
movsl
inc
ficoml
mov
dec
in
rcrl
push
ret
cltd
jns
xor
lret
or
xor
mov
inc
cmp
push
fisubl
and
subb
pop
add
jmp
xor
push
cmp
loop
in
xor
cs
js
mov
ss
leave
in
insl
lret
in
enter
dec
jns
bound
loopne
sbb
dec
out
push
dec
imul
lea
push
testb
ss
cwtl
test
test
push
mov
sbb
pop
pop
dec
inc
sbb
fiadds
mov
xchg
xchg
push
jg
int
and
sbb
xor
jns
outsb
sti
aas
scas
mov
out
mov
mov
aad
jg
subl
out
and
imul
jecxz
jmp
mov
in
pop
fbstp
mov
cmc
data16
int3
fldcw
jbe
sub
xlat
pop
xor
mov
jg
ja
adc
xchg
cli
xor
mov
mov
test
in
push
repnz
jbe
dec
ret
sbb
jmp
mov
xchg
pop
mov
cld
fistl
mov
es
out
lcall
int
adc
in
pop
jns
cmp
mov
push
pop
xchg
cmp
arpl
cmpsl
mov
and
das
cmp
std
lds
inc
dec
sub
jg
sti
shlb
mov
das
and
popa
mov
fcomps
add
inc
add
mov
mov
out
push
or
xchg
nop
cltd
lret
cwtl
pop
jmp
mov
popf
das
xchg
adc
inc
xchg
add
xchg
add
push
pop
add
add
pop
mov
mov
or
pop
ret
cmpsb
ficoms
dec
pop
cld
insb
xlat
pop
call
dec
xor
push
lea
imul
imul
movsb
cmpsb
inc
push
mov
and
mulb
movsb
push
mov
stos
sbb
xor
imul
and
clc
jno
ds
and
popf
add
mov
pusha
fiaddl
xchg
ljmp
add
insl
xlat
cld
fists
insl
jmp
mov
xchg
or
insl
adc
fstpt
push
lret
lret
or
iret
das
call
inc
jmp
pop
add
adc
lock
lret
in
jnp
ja
ret
pop
add
pop
mov
xchg
or
add
sahf
xchg
adc
jns
add
mov
lods
test
mov
je
cwtl
dec
mov
mov
inc
imull
cmc
push
shrl
mov
in
in
insl
mov
ja
std
shlb
jmp
push
xchg
push
adc
cmp
mov
push
cmpsb
sbb
xchg
jmp
test
mov
in
mov
fldcw
ds
pop
pusha
xlat
xchg
data16
dec
inc
xor
movsb
adc
aaa
xor
inc
sbb
rcll
push
sbb
sub
sub
mov
xor
inc
or
jne
cli
sub
out
fsubrl
dec
mov
mov
lods
aas
dec
pop
dec
data16
leave
mov
or
out
ja
jmp
fstp
pop
rcrl
les
inc
or
aaa
dec
xchg
std
inc
sarb
xor
test
es
jns
sti
sbb
test
in
testl
outsl
test
jbe
lds
xor
insb
jae
mov
arpl
inc
adc
cmp
je
popa
lods
and
sbb
add
jae
mov
pop
xor
mov
xchg
pop
pop
jp
iret
mov
adcb
pusha
pop
fbstp
rcll
cmp
xlat
sbb
push
das
mov
cmp
lahf
rol
movsl
jp
jg
rcr
mov
jns
fidivrs
scas
mov
inc
cmp
push
dec
or
mov
pusha
add
pop
push
stos
addr16
loope
pop
ja
outsw
xchg
xchg
mov
fisttps
lret
cli
setnp
mov
push
mov
in
clc
repnz
call
lods
or
fnstcw
xor
les
ja
pushf
bswap
sti
fwait
mov
xchg
negb
add
repnz
test
pop
sub
sarl
xor
cltd
xor
add
in
mov
pop
or
aas
xor
lods
adc
xchg
xchg
push
into
popf
push
popa
xchg
pop
xchg
leave
sub
jae
notl
mov
jb
dec
stos
addr16
inc
out
jmp
in
aaa
inc
push
mov
push
dec
mov
xchg
fsubrl
mov
mov
jmp
fistpl
adc
mov
in
jno
xor
cmp
pop
imul
or
aam
fmull
repz
mov
imul
push
mov
or
inc
std
mov
subb
cmp
pop
lods
sbb
movsb
fistl
sbb
lcall
fbld
les
shr
shll
jp
adc
cltd
and
push
sub
xchg
es
test
inc
add
enter
cltd
add
imul
add
jns
sbb
adc
cmpsb
imul
je
lret
test
jmp
outsb
das
fcomps
mov
dec
cmp
and
loope
and
xchg
xchg
sub
cmpl
jbe
mov
push
movsl
das
arpl
mov
mov
cmp
rcrb
or
les
adc
sub
xor
mov
sbb
xchg
lds
pop
and
fnstsw
mov
bound
lahf
in
inc
les
xor
cmc
out
imul
inc
inc
dec
das
and
scas
getsec
loope
in
and
push
cmp
xchg
lea
insl
movsb
cmpsb
test
out
dec
cmp
push
xchg
sarl
enter
cmpsl
nop
dec
call
xor
adc
aaa
fstpl
xchg
jnp
jbe
dec
sbb
notl
stc
loope
mov
sbb
loope
stos
push
jl
daa
jno
fistpl
inc
lea
stc
push
and
xor
rorb
or
mov
push
add
xor
out
push
and
mov
lea
cmp
stos
dec
cwtl
es
xor
push
lret
push
popf
test
jle
arpl
int
push
es
rcrl
dec
popf
lock
dec
push
sub
les
fwait
xor
dec
mov
cld
mov
and
aaa
scas
mov
push
ja
into
aaa
or
call
cmp
and
aas
add
mov
cmp
lods
rcrb
push
mov
sarb
test
sub
jmp
les
xor
or
sarl
hlt
mov
out
xchg
aaa
pop
lahf
ds
inc
shl
xor
ss
fwait
push
adc
and
mov
ljmp
mov
fnstenv
sbb
cmpsb
or
lea
mov
in
or
aaa
das
push
out
int3
jnp
ret
xor
push
gs
test
mov
cmc
imul
sbb
xchg
sub
xchg
dec
aam
dec
add
lret
mov
scas
test
movsl
cmp
fdivl
push
scas
mov
aas
rorl
and
out
pop
mov
cmp
mov
mov
pop
stos
int3
fcompl
xor
xor
fdivrp
inc
mov
pop
inc
xchg
repz
mov
stc
or
adc
js
rcrb
adc
pushf
mov
jbe
gs
xor
hlt
dec
lahf
xor
sbb
sbb
add
pushl
sbb
movsl
sbb
out
movsl
pop
xor
dec
fs
xchg
push
pop
stc
jle
mov
imul
insb
imul
std
add
fisttpl
daa
sbb
les
mov
lea
test
data16
out
mov
inc
push
insb
imul
xchg
mov
dec
xchg
jne
adc
push
pusha
or
dec
xor
lret
cmp
movsl
fldt
mov
rcr
mov
mov
mov
inc
or
fsts
pop
jg
insb
in
or
inc
lahf
mov
jnp
and
scas
jb
pop
inc
setge
inc
hlt
push
adc
cmpsl
adc
sub
iret
out
movsb
jle
pusha
fimull
rorb
or
stc
fldenv
fs
jno
mov
std
add
arpl
data16
xor
jmp
sbb
movsl
add
sbb
sbbb
clc
lds
and
repz
and
and
or
xchg
orb
xchg
pop
push
mov
imul
outsb
clc
pusha
inc
push
mov
xchg
jp
lods
cmc
add
or
sbb
in
cmp
in
xor
sarb
sub
bound
iret
sub
rorb
xchg
lcall
inc
shrb
xchg
push
mov
sbb
nop
cltd
push
pop
jmp
cmc
inc
push
cmp
push
xchg
jo
fbstp
into
push
sub
pop
push
or
into
loopne
push
loope
sub
pop
mov
sbb
stos
inc
dec
shll
out
cmc
mov
xchg
fdecstp
ja
scas
xorl
outsl
xchg
pop
pop
cmc
add
test
aas
out
repnz
cmpb
sarl
pusha
push
inc
cmp
insb
jmp
sub
xchg
lds
push
mov
add
or
mov
xor
cmpsb
fcmovbe
dec
adc
push
in
sub
push
sbb
cmpsb
scas
mov
js
das
mov
jno
cwtl
or
jno
roll
adc
dec
pop
mov
jle
pop
fidivl
mov
rcll
pusha
adc
gs
push
pop
stos
mov
sbb
xchg
adc
jb
fadd
dec
jnp
sbb
lahf
arpl
arpl
cmc
and
and
dec
fucom
mov
jl
js
rcr
fisubl
mov
rcr
inc
sti
jns
jne
fisttps
hlt
xor
sub
test
lods
xchg
sbb
inc
test
jle
push
shrl
xchg
imul
sar
loopne
cmc
cmpsl
je
xor
les
pop
adc
mov
test
ljmp
scas
dec
sub
mov
add
cld
or
cmp
gs
jle
mov
push
pushf
mov
jne
push
negb
adc
push
int
notl
cmp
push
jae
sub
divl
dec
adc
push
mov
sbb
push
ret
mov
jno
sub
pop
cli
adc
fldenv
mov
jecxz
cmpl
and
xchg
arpl
out
jnp
push
stos
push
jl
sti
push
jbe
push
pop
pop
fwait
sbb
adc
into
and
push
test
test
mov
movsl
test
jl
mulb
nop
popl
hlt
xchg
rcrl
xchg
jmp
xchg
cmp
push
mov
lret
test
mov
js
sbbb
rcrb
cwtl
or
dec
mov
xor
and
js
loope
cmpsb
or
jge
xchg
lods
inc
mov
push
and
mov
int
or
pop
jb
jg
flds
xchg
sarb
inc
cmovb
xlat
repnz
dec
test
stos
lret
xchg
mov
adc
xchg
gs
jnp
dec
aas
mov
pop
cmp
add
jl
lahf
gs
cmpsb
insl
loop
repz
xchg
mov
cmp
enter
xchg
outsb
cmpsb
negb
testl
movsb
sub
mov
dec
dec
add
dec
cmp
mov
xor
xchg
dec
cmc
sub
ret
aam
jl
xor
push
mov
jnp
movsl
rcll
js
in
shrb
jecxz
shlb
mov
popf
cmc
imul
jne
adc
mov
xchg
xor
push
xor
push
out
lahf
lret
push
out
addr16
pop
mov
andl
pop
fwait
cmp
mov
fadd
mov
pop
xchg
dec
xchg
test
dec
jne
or
mov
pop
pop
mov
sbb
push
mov
sti
mov
insb
adc
fimuls
adc
les
cmp
sub
push
adc
jnp
adc
push
das
adc
sahf
or
cmp
cmc
mov
xchg
movsb
call
cmpl
mov
dec
ja
inc
inc
pushf
pop
push
insl
sarl
movsl
movsb
sub
std
push
inc
sbb
lcall
mov
orl
push
jno
lods
sub
repnz
mov
and
ljmp
adc
aad
pusha
xor
xor
mov
add
cmp
mov
pop
testb
pop
lock
rclb
loope
mov
mov
int3
cli
idivb
mulb
jl
ret
addr16
or
movsl
outsl
test
shr
lahf
inc
push
repz
mov
mov
cltd
daa
repnz
sub
lcall
dec
adc
push
xchg
std
push
cmp
mov
xlat
ja
mov
ret
movsb
jo
out
aaa
ret
fsubl
pop
dec
xchg
cltd
popf
subl
push
xor
in
and
and
xchg
mov
scas
xchg
jbe
or
enter
mov
test
sbb
jns
outsb
xchg
xchg
imul
test
test
cmp
outsb
or
repz
fdivs
add
in
lret
mov
mov
lcall
mov
enter
sub
dec
add
pop
movb
cmp
xchg
test
mov
push
loope
xor
and
sti
aaa
jbe
pop
jle
add
repz
push
mul
sub
and
ret
lds
mov
mov
repnz
cmp
mov
in
dec
and
lea
xor
adc
or
mov
jecxz
and
sub
mov
pop
pop
mov
movl
ds
sbb
sub
xchg
lahf
movsb
jae
dec
ss
out
das
ljmp
mov
les
aad
sbb
push
inc
pop
jns
jne
lcall
stos
lret
ret
inc
clc
inc
jg
rorb
cmpsl
aas
adc
xchg
sub
lods
cltd
into
ss
add
cli
insl
and
adc
push
lret
stos
jl
pop
cli
ss
dec
sub
fst
lcall
in
mov
mov
out
mov
mull
ds
decl
out
ret
daa
dec
xchg
pushf
push
sub
and
test
mov
mov
cwtl
imul
shl
inc
fwait
pop
fsts
lock
xchg
mov
packssdw
mov
movsb
jo
daa
lahf
jae
mov
add
push
push
out
jo
ret
loopne
jl
ss
push
mov
inc
mov
jecxz
std
dec
cmc
mov
xchg
in
test
jge
xor
xor
sbb
pop
mov
rorl
push
fadd
scas
adc
or
pop
int3
mov
push
je
mov
repnz
inc
cld
inc
les
cmc
cmp
push
std
jnp
xchg
mov
fsubl
pop
mov
jecxz
sbb
inc
gs
add
dec
loopne
and
mov
aas
and
fstpl
or
mov
in
shrl
and
pushf
subb
push
cmp
lods
jo
mov
fucom
lret
je
dec
adcb
fsubrs
dec
das
xchg
push
outsl
int
bound
int
inc
outsl
xchg
sbb
xchg
lret
jne
xor
insl
scas
ret
push
push
cmc
out
inc
stc
xchg
sub
aas
pop
popf
pop
add
push
and
jb
pop
pop
jb
pop
sti
mov
insl
insb
inc
mov
int
sub
jle
scas
xlat
or
leave
or
test
aam
fstpt
mov
or
lahf
clc
call
mov
fsub
cs
outsl
xchg
fidivrs
mov
push
loope
xchg
imul
pop
in
pop
sti
lods
call
out
sahf
dec
shl
cmp
dec
push
fdivl
or
inc
xchg
cltd
cmp
cmpsb
pop
mov
adc
jae
xor
fstps
in
js
mov
mov
fisubs
aad
inc
xor
xchg
jp
ret
dec
stos
push
sbb
adcb
jbe
aas
clc
inc
or
out
fcompl
bound
push
rorb
jb
pop
sti
push
inc
inc
sbbl
shrl
stos
out
push
or
adc
int
enter
in
imul
ret
lods
cmovle
pop
jne
mov
test
mov
add
inc
test
imul
inc
nopl
dec
add
aam
xchg
lods
movsl
scas
cltd
push
push
fstpt
push
pop
lods
std
jecxz
pushf
mov
stc
sub
inc
loopne
pop
dec
test
fs
pop
mov
leave
adc
mov
cmc
out
pop
add
xor
insl
or
jnp
ss
cmp
adc
outsl
fwait
not
lock
jo
das
test
pop
es
ss
bound
scas
fldcw
inc
xor
andl
jecxz
scas
fmull
cmc
or
pop
lcall
ret
inc
mov
xchg
or
xchg
cmp
inc
andl
mov
inc
sbb
adc
aam
insb
sbb
xor
aaa
xor
push
lret
and
lds
lds
test
sub
aas
rorl
std
dec
sti
xchg
xchg
push
dec
out
xchg
jb
mov
lcall
mov
test
aad
cmp
inc
scas
or
pop
jb
jmp
jo
ret
dec
rcrb
ret
adc
mov
ret
dec
fucomip
outsl
lods
arpl
adc
xor
movsl
shlb
pop
push
jo
xchg
jo
or
lds
adcl
inc
sbb
inc
in
jle
sbb
aaa
xchg
add
iret
xchg
push
add
cmpsb
pop
jne
sub
stos
stos
xor
test
call
lret
jl
fisubs
insl
jae
and
mov
cmp
loope
xor
mov
jle
ljmp
lret
sub
xor
and
aas
pusha
popf
ret
mov
out
bound
pushf
scas
pop
cmp
pop
jecxz
pop
ret
cmpsb
shrb
xchg
scas
out
push
mov
shll
fwait
sti
mov
lret
xchg
xchg
mov
xchg
repnz
jnp
stos
incb
and
ljmp
rcl
add
cmpsl
popa
adc
push
dec
sub
shlb
test
sbb
ds
push
mov
loop,pn
sbb
movsl
repnz
rcrb
pop
cmpsl
pop
hlt
popa
in
jne
insb
push
out
rcll
call
mov
jae
xchg
mov
test
push
and
lret
pop
fstp
xor
outsl
pop
ss
iret
vsubpd
into
sub
mov
cmp
dec
mov
lds
and
dec
lahf
clc
dec
ds
pinsrw
int
inc
jnp
fldcw
movsb
dec
call
into
in
pusha
xor
ret
mov
xor
or
and
and
fisubrl
mov
mov
movsl
imul
inc
pause
adc
or
lds
sbb
in
inc
sarb
std
adc
fcomi
mov
sahf
out
dec
fs
loop
cmp
inc
cmp
cmpsb
movsl
dec
dec
gs
xchg
dec
dec
pusha
mov
and
push
xlat
push
bt
push
push
pop
mov
jno
test
jmp
inc
inc
jge
inc
imul
inc
ds
fnstsw
add
dec
cmp
and
insb
das
ljmp
cmc
loopne
xchg
cmpsb
aam
shll
cmp
dec
sub
lret
into
pop
xchg
add
repz
xchg
pop
cmp
int
mov
sahf
test
mov
out
enter
movsb
shr
jg
xchg
mov
add
inc
into
orl
fldl
out
fstl
ja
or
insb
std
xor
or
arpl
scas
dec
je
repnz
nop
lret
addr16
and
cltd
inc
xor
dec
lds
adc
shlb
sbb
in
mov
mov
or
pop
out
mov
and
mov
add
push
adc
sahf
jne
xchg
fcoms
mov
push
adc
pushf
pushf
jmp
xchg
cmp
lahf
das
pop
inc
xlat
adc
dec
pop
sub
mov
sub
ficoml
xchg
adc
test
rorb
inc
jp
adc
enter
sahf
push
fcmovnu
das
dec
hlt
hlt
ljmp
xor
push
push
icebp
rcll
push
int3
mov
push
xor
mov
push
shlb
xchg
xor
push
push
fbld
inc
mov
das
xchg
mov
jp
xchg
adc
push
daa
mov
push
or
in
xorb
pop
add
xchg
pop
stos
sub
repz
je
adc
jne
nop
mov
stos
xchg
mov
out
imulb
mov
fdivrl
mov
pop
push
push
test
dec
inc
mov
cmp
cmp
push
mov
out
push
pop
jle
scas
das
pop
jnp
scas
iret
xlat
mov
inc
mov
mov
inc
cltd
gs
test
pop
sbb
lret
pusha
es
hlt
shl
cli
jmp
jbe
aaa
loop
mov
jg
push
pop
ljmp
out
imul
push
xchg
cmc
or
sbb
pop
and
insb
sahf
mov
mov
setb
lcall
imul
mov
xchg
int
fildl
xchg
les
fs
loope
push
je
test
cltd
stc
mov
shl
into
sub
das
pop
mov
adc
or
adc
fcomip
cmpsb
testl
sbb
and
cltd
insl
mov
shrb
pop
jmp
cs
cld
mov
sbb
or
and
popa
stos
mov
fiadds
jecxz
xchg
pop
jbe
cmp
pop
lahf
pop
push
xchg
imul
jl
popf
jb
nop
lds
lock
repnz
push
xchg
push
sbb
nop
lret
shlb
dec
dec
add
gs
ret
adc
push
cltd
mov
loopne
cmp
mov
icebp
ret
cltd
popa
negl
lret
and
push
dec
push
cmp
mov
and
mov
pop
out
inc
push
pop
jg
enter
movsl
pop
jb
loope
mov
in
leave
xlat
cmpl
xlat
enter
sub
mov
mov
lock
shll
fsts
xchg
filds
sbb
sbb
mov
xchg
adc
mov
rcrl
mov
mov
inc
pop
dec
in
loope
mov
and
sbb
pop
incl
daa
mov
mov
cmpsb
jp
cmp
mov
add
ljmp
jg
fnsave
ds
and
mov
jo,pt
pop
inc
cmp
xchg
mov
jo
fwait
sub
xchg
cmpsb
js
cmpsb
lret
roll
dec
lods
jns
pop
sbb
and
sub
ror
mov
stos
bsf
xor
mov
mov
mov
shl
loope
dec
repnz
mov
lods
xchg
dec
pop
pop
cld
cmc
cmp
enter
std
cs
sbb
loopne
jno
imul
cs
xchg
movsb
jmp
fs
lods
mov
mov
imul
push
jae
xchg
add
dec
ficoms
in
sbb
jbe
scas
jg
dec
inc
add
cs
loope
ja
mov
inc
shrl
sub
jmp
out
rorl
ds
or
inc
xor
arpl
pop
clc
rol
xor
mov
push
test
dec
jns
and
lock
incl
add
aam
or
or
add
xchg
shrl
sbb
and
push
or
xor
test
mov
or
push
dec
lock
mov
ljmp
shlb
jp
iret
mov
push
pop
enter
outsl
or
jno
push
cmp
es
mov
cmp
add
test
xchg
into
xchg
icebp
test
sbb
jns
pop
scas
dec
dec
inc
or
gs
push
push
cmp
std
test
mov
sbb
out
fistpl
stos
jns
cmp
cli
push
test
fcomip
loop
jnp
movsb
cld
jecxz
fdivrs
rol
and
rorb
out
dec
pop
out
out
or
and
and
loopne
mov
xor
loopne
xchg
lahf
loop
jp
mov
and
and
and
mov
push
popa
and
pop
mov
add
test
adc
pusha
aad
jecxz
mov
fdivl
fcmovnb
lods
leave
ficoml
add
mov
xor
or
push
loop
push
ret
xchg
fcmovbe
sbb
pop
scas
scas
test
scas
push
lock
or
and
xchg
mov
shll
jecxz
pop
scas
and
arpl
mov
js
in
lea
ljmp
adc
pop
lcall
or
sub
sbb
add
inc
jns
xchg
repnz
xor
mov
push
repnz
enter
pusha
pop
push
push
loop
push
cmp
imul
push
out
inc
push
in
loope
mov
xlat
ss
gs
jge
jae
xor
lea
push
fxch
outsl
out
cld
xor
adc
inc
cmpsl
daa
std
mov
push
xchg
mov
lret
push
imul
mov
pop
pop
insl
and
test
filds
lahf
lret
jmp
ret
or
cmpl
in
int
xchg
fldl
outsb
rcrb
jns
int
mov
add
push
mov
int
sbb
push
inc
adc
shll
or
jl
or
mov
je
ja
cltd
mov
cmpsl
mov
cmp
into
inc
mov
add
jns
mov
cmp
xor
dec
test
in
and
fidivrl
mov
movsl
mov
addl
in
mov
ret
stc
shll
and
outsb
test
add
adc
shrb
pop
loope
add
pop
pop
push
sbb
jae,pt
adc
loope
cwtl
mov
cwtl
pop
mov
jae
adc
dec
xchg
std
pop
mov
push
cltd
mov
lret
cwtl
inc
out
push
fcoml
jmp
ljmp
cld
ljmp
out
test
sub
aaa
or
fcompl
cmp
and
pop
or
lods
and
sub
out
lods
xchg
fstl
arpl
dec
push
ljmp
out
jecxz
dec
inc
adc
fnsetpm(287
fnstsw
pop
mov
bound
mov
sahf
leave
shll
orb
mov
sar
mov
fisubrs
addr16
sub
pop
stc
scas
sbb
jae
mov
dec
mov
sub
or
ss
adc
xchg
push
lret
addr16
mov
out
daa
mov
sub
and
out
sti
sub
les
push
sti
movsb
push
icebp
sahf
cmc
jp
mov
sbb
mov
scas
jbe
push
xchg
push
popa
imul
das
and
arpl
cmpl
cwtl
cmc
adc
mov
out
shlb
xor
cmp
jae
out
fisttps
cmp
fxch
cmpsb
or
cli
cmp
push
out
lea
inc
add
fimuls
test
lret
cmpsb
push
js
dec
test
cmpsb
xor
pop
arpl
jle
add
outsl
mov
ds
xor
js
mov
push
rcrl
jge
inc
ss
lods
loope
adc
dec
cmpsl
ljmp
pop
or
push
mov
add
cwtl
repz
loope
shll
cmpl
adc
mov
lret
aam
pop
repz
inc
movsl
cmpsl
rolb
mov
les
cli
dec
hlt
add
shrl
sbb
sub
dec
insb
adc
push
and
das
jo
add
int3
outsl
jnp
and
adc
shll
push
xchg
imul
dec
mov
or
pop
std
push
lahf
push
clc
jp
movsl
jb
add
sub
push
mov
mov
lret
cmp
clc
fwait
xorb
std
loope
fdiv
mov
mov
xchg
adc
xor
in
cli
scas
insl
in
shrl
popf
push
popa
mov
aad
mov
ror
mov
into
fwait
and
fisubrl
out
jnp
and
popa
aad
scas
mov
lock
pop
cmc
add
inc
mov
jb
scas
popa
test
cs
adc
lods
cmp
loope
adc
dec
test
setno
stos
mov
aad
pop
popf
cwtl
sbb
sub
jg
lahf
les
fildll
and
mov
jp
les
xchg
adc
out
xchg
or
loopne
fidivs
hlt
notl
cld
mov
push
inc
lret
ja
sbb
jl
adc
and
movsl
pop
and
mov
loope
sub
adc
ds
xor
adc
mov
scas
mov
jg
loope
cmp
pop
outsb
pslld
outsl
ss
jb
sbb
jb
shll
int3
test
sbb
sub
xchg
sti
inc
mov
jge
inc
mov
or
mov
test
sbb
push
push
bound
mov
imul
and
ss
mov
stos
ds
ficoml
cmp
push
dec
inc
aas
inc
imul
xchg
jmp
ffreep
cmp
inc
and
pop
sub
stos
pusha
inc
and
stc
xchg
bound
add
push
adc
push
filds
inc
popf
cld
loopne
and
loop
or
orb
jl
mov
fstl
outsb
xchg
es
and
dec
push
and
inc
dec
and
icebp
js
push
xchg
and
fmul
push
sub
popa
push
adc
pop
data16
std
push
imul
dec
cltd
dec
cmp
mov
gs
scas
mov
mov
mov
rcl
hlt
inc
xor
aad
sub
sub
add
xor
mov
xlat
mov
cmp
push
imul
add
andl
and
mov
jp
lods
out
into
mov
arpl
in
sbbb
mov
popf
mov
mov
imul
inc
and
pop
cmp
test
std
jle
int3
sub
push
mov
dec
nop
inc
inc
xor
adc
in
ljmp
mov
xlat
loopne
push
loope
notb
mov
mov
lock
mov
out
push
loope
loop
push
jge
sbb
fisttpll
jnp
inc
insb
ret
out
fldl
mov
data16
lret
iret
jg
add
das
adc
loop
push
shlb
stc
popf
stc
lcall
jns
notl
mov
push
fucomi
pop
cmp
mov
es
daa
dec
shlb
and
movsl
mov
gs
jp
iret
int
fsub
lods
cmp
test
adc
je
mov
xor
cmpb
mov
push
aad
stc
stc
xor
dec
or
jo
jne
mov
jmp
mov
mulb
imull
pop
or
mov
cmp
aad
mov
int
cmpsb
out
push
pop
loopne
mov
lahf
lods
shrb
addr16
inc
out
fistps
movsl
sahf
jo
fmuls
lahf
fcmovnbe
push
or
std
testl
xchg
mov
fwait
jp
mull
lcall
xor
or
jecxz
sub
push
adc
mov
movsl
sub
ret
mov
in
mov
repnz
jo
push
add
add
xchg
sub
out
aaa
adc
xchg
data16
lock
inc
es
mov
mov
sti
adc
inc
fxch
loop
std
mov
mov
in
inc
repz
cmp
xchg
mov
or
xor
arpl
pop
lcall
jl
subl
arpl
imul
xor
jp
and
ffree
jp
and
clc
pop
es
subb
and
xor
enter
or
fcomps
mov
mov
mov
out
lret
inc
adc
cli
sbb
sbb
push
push
dec
std
xchg
push
stos
aad
cwtl
mov
pop
icebp
xor
jo
push
lret
lahf
dec
push
pop
mov
rcr
inc
adc
xlat
or
iret
inc
mov
mov
mov
sbb
jecxz,pn
inc
movsb
stc
dec
xchg
xor
int3
xor
lods
jae
jae
lretw
add
shlb
dec
xchg
fs
out
lret
imul
or
pop
cwtl
call
adc
ret
mov
ss
xor
in
mov
sub
cmp
cmp
shlb
mov
jno
pop
xchg
cltd
or
inc
fidivrl
out
sbb
and
jle
in
sahf
arpl
pxor
sub
push
icebp
lret
aad
mov
repnz
les
or
sbb
loopne
dec
shl
push
push
pop
in
or
stc
jg
jb
sub
fidivs
sub
cltd
dec
push
shrl
cmp
ss
arpl
jecxz
imul
mov
in
push
pop
sub
dec
inc
inc
and
sbb
sub
pop
aas
mov
adc
and
in
mov
xor
cmpsb
loopne
pop
adc
insl
push
push
mov
add
pop
fdivr
xlat
xor
mov
jo
cmp
mov
cmp
mov
mov
mov
pop
adc
xchg
movsb
push
pusha
in
gs
outsb
pop
jne
inc
jns
mov
mov
ret
sbbb
fists
loop
pusha
dec
jno
dec
xchg
add
sub
fsubs
pop
aad
leave
repnz
mov
pop
pusha
fsubrl
push
jecxz
and
inc
cmpsb
ljmp
xchg
ds
mov
stc
fwait
shll
ja
push
sub
lret
sbbl
icebp
adc
nop
mov
jg
cmp
test
mov
or
ret
cs
adc
cltd
sub
push
dec
inc
std
aam
and
jge
or
divb
out
lret
aas
fidivrs
jb
dec
int
das
fcoml
mov
lahf
mov
imul
pop
xor
shl
popa
cmc
jg
hlt
fdivrp
hlt
sub
nop
mov
pop
mov
addr16
ret
movsb
and
mov
mov
in
mov
pop
daa
in
lods
cmp
pop
addb
pushf
pop
outsl
xchg
and
or
pop
mov
in
popa
cmp
enter
add
jno
push
jae
gs
push
sbb
in
sub
pop
xchg
mulb
iret
cld
lahf
fcmovne
clc
and
outsb
dec
jbe
popf
lods
push
lret
mov
leave
lods
scas
pop
mov
mov
fwait
lods
into
repnz
shrb
inc
lret
repz
js
sbb
sbb
movsb
mov
jb
lds
aas
je
sbb
in
mov
ja
sub
data16
imul
cli
push
imulb
cmp
icebp
xchg
pop
lret
lcall
sbb
xlat
push
mov
mov
inc
mov
sbb
sbb
xor
mov
add
lods
and
mov
xorl
fwait
dec
aas
lcall
stos
sub
lds
cmp
dec
dec
adc
cmp
mov
jne
mov
sbb
xor
mov
or
insb
dec
add
testl
mov
lods
int3
sbb
stos
in
shlb
les
adc
mov
jle
mov
int
or
in
in
adc
mov
mov
or
dec
test
scas
loopne
aas
addb
imul
mov
aad
push
leave
inc
and
inc
fcmovnu
xor
xchg
inc
dec
push
shll
lcall
add
inc
sub
call
pop
cmc
push
jno
sbb
mov
pop
lds
fmuls
lret
js
xor
in
pop
jecxz
std
xlat
fadds
fisubs
or
lret
adc
jbe
jne
jb
scas
jle
jbe
test
in
inc
notb
mov
xchg
fnstcw
sbb
jge
push
push
dec
dec
sbb
test
jne
and
and
pop
mov
out
jbe
mov
jecxz
mov
test
cmp
movsl
stos
loope
inc
sbb
int3
mov
shrb
adc
pushf
pop
stc
cltd
jo
jle
or
and
jns
xchg
inc
sbb
xchg
mov
sbb
out
loop
push
in
jne
shl
push
mov
mov
xor
and
xorb
xchg
cmp
pop
xor
inc
mov
xchg
add
sbb
loop
xor
mov
adc
into
pop
pop
flds
and
xor
cmp
repnz
sbb
scas
cmp
stos
jmp
rorl
insb
repz
inc
or
mov
rorl
ret
xchg
adc
push
imul
or
mov
mov
push
add
pop
js
insb
pushf
and
push
mov
and
xchg
xor
shll
mov
sti
pushf
fistps
lods
fdivrp
ret
je
xor
xor
push
xor
pop
xchg
lret
or
cltd
movsl
pop
hlt
mov
pop
xor
dec
sub
or
xlat
outsb
sbb
xchg
pop
dec
das
xchg
stos
scas
data16
mov
fmuls
lret
xchg
adc
ss
xchg
xchg
shl
and
nop
iret
push
fcmovne
lret
leave
push
into
inc
push
xchg
test
pop
sbb
pop
popl
or
inc
cmp
mov
fistl
pushw
popf
push
scas
or
lret
xchg
divl
data16
test
imull
or
cld
and
clc
stos
jecxz
sti
sub
xor
pop
jnp
mov
out
push
dec
jb
add
pop
inc
add
sub
inc
dec
cmp
insb
jb
out
jl
inc
xchg
pop
push
xor
mov
jecxz
pop
test
in
sti
into
ljmp
inc
shl
dec
lret
pop
cmpsb
pop
mov
jg
pop
outsb
lahf
jne
sub
and
mov
adc
jge
gs
inc
jmp
add
enter
inc
jp
les
inc
pop
jbe
mov
fldenv
ret
cwtl
jno
mov
inc
pop
xlat
fwait
xchg
outsl
push
rcll
add
in
xchg
ss
test
pushf
cmpsb
addr16
jo
sarb
jno
push
enter
adc
fcmovb
ficoms
inc
arpl
dec
aas
adc
or
jg
pusha
adc
cmp
push
mov
sub
clc
jp
push
pop
mov
xor
push
and
sub
loope
hlt
imul
repnz
mov
cmc
pop
cld
lahf
into
xchg
iret
inc
xchg
xchg
push
sub
and
add
jb
sub
xor
jns
aaa
jbe
movsl
xlat
push
lods
dec
aad
mov
je
xchg
cmp
or
ljmp
adc
repnz
in
cli
xchg
add
cmp
jle
xchg
sbb
push
ficoms
sbbl
in
xor
scas
cmp
lock
xchg
cmp
pop
mov
xchg
pop
cmp
aas
fdivrs
pop
jge
push
pushf
add
mov
loope
outsl
btc
pop
dec
fwait
jae
pop
push
push
loop
and
pop
shrl
arpl
jae
sub
test
hlt
push
fmull
jle
inc
sbb
add
fs
jnp
cli
mov
loopne
mov
xchg
dec
xlat
int3
cmp
ret
outsl
repz
inc
pop
pop
push
add
mov
lea
adc
mov
push
sub
in
pop
xchg
pop
push
sbb
push
sbb
shrb
or
mov
in
push
dec
cmp
cs
stos
ja
inc
push
dec
mov
loopne
sub
mov
dec
pop
sub
mov
dec
testb
xlat
fbld
pushf
cmpsl
jp
xchg
push
enter
mov
mov
mov
addb
push
frstor
or
idivl
sub
sub
dec
sbb
or
enter
xor
stc
fwait
cltd
inc
and
je
mov
dec
pop
in
sbb
xchg
aaa
fcompl
gs
repnz
push
adc
jl
aam
mov
mov
jno
pop
sub
andb
into
mov
push
dec
cli
neg
inc
out
daa
and
mov
lods
je
xchg
fs
jae
mov
testl
ljmp
jb
push
mov
add
into
push
fildl
lcall
push
adc
sub
pop
cmpsl
movsl
xchg
je
pushf
lret
cmp
std
insl
int3
in
imul
mov
jmp
fnstcw
adc
sbb
sbb
jmp
and
or
xor
pop
pop
push
or
stos
push
repnz
fs
mov
mov
jb
popf
cmp
mov
lret
xchg
in
fsts
or
jne
out
scas
icebp
jb
jb
xor
push
cmp
in
outsl
adc
lret
ret
aam
roll
aas
pop
jecxz
sti
push
mov
jno
inc
mov
sub
fadds
cs
enter
or
std
push
add
icebp
sub
int
pop
hlt
inc
sub
mov
adc
dec
sub
fistpl
fwait
sbb
xchg
cwtl
xchg
sub
ss
cmp
test
andl
mov
aad
inc
aad
mov
jae
in
rcrl
inc
popf
mov
add
aaa
and
or
adc
bnd
jbe
xlat
xorb
roll
push
popf
push
push
pop
xchg
sub
xchg
push
and
or
xor
fdivl
mov
xor
pop
or
push
testl
rcrl
cmp
xlat
xchg
sub
add
mov
stos
jle
ret
push
test
ss
xchg
aaa
mov
dec
pop
gs
mov
pop
cmc
outsl
mov
xchg
mov
mov
sar
mov
in
mov
sti
xor
jecxz
sbb
pop
mov
inc
xor
lods
xchg
mov
testl
fistl
jge
je
pop
insl
sbb
repz
cmpsl
xor
arpl
incl
mov
mov
or
or
inc
push
inc
xor
int
or
cmp
jae
add
js
mov
out
dec
jl
lock
aaa
mov
das
sub
cmp
push
adc
in
push
ja
adc
adc
add
or
cmp
test
notl
jbe
mov
xchg
sub
and
and
fs
inc
cmp
dec
fdivs
insb
push
adc
cmovae
jno
int
divb
rorl
mov
push
sahf
cltd
sbb
cmp
icebp
addl
movsl
push
mov
in
inc
aam
mov
xor
int
jecxz
arpl
pop
gs
daa
shll
push
xor
repnz
mov
inc
push
mov
sub
add
sub
lret
fistpl
push
jno
fdivr
sbb
ret
in
repnz
cmpb
jle
jle
js
inc
mov
push
jl
cmc
shlb
inc
sub
push
mov
dec
pusha
out
clc
xor
mov
jb
jae
add
testl
fstps
ss
xor
stos
popf
mov
aaa
fs
fildll
stc
jno
test
fmull
fucomi
add
repz
mov
dec
push
sbb
loop
dec
xor
leave
rorb
lods
out
shll
repnz
inc
pop
jb
test
mov
fimuls
pushf
in
aaa
mov
movsb
sub
popf
xchg
pop
mull
lret
lock
add
push
je
adcb
mov
fmul
mulb
out
repnz
in
pusha
add
repnz
sub
or
push
pop
xor
mov
adc
jae
inc
imul
test
in
dec
xchg
notl
add
mov
push
enter
mov
incb
out
add
sbb
xchg
fucomp
inc
clc
mov
stc
sbb
stc
pusha
and
push
jbe
push
pop
mov
mov
or
xchg
push
outsl
addr16
int
popa
xchg
or
push
mov
dec
mov
mov
aam
es
adc
xor
subl
data16
test
out
mov
nop
cmpsb
pop
push
dec
divl
dec
and
inc
pop
mov
cld
test
pop
movsb
sbb
ds
inc
out
std
xor
sahf
xor
mov
mov
popa
fnsave
cmp
mov
imul
ss
sub
mov
aaa
xor
imul
fidivrl
cmp
cmpsb
mov
movsb
xchg
rcl
or
push
xor
imul
xlat
pop
lock
outsl
mov
push
data16
cmpsb
rcr
dec
repz
and
pop
sub
cli
and
and
inc
dec
loop
push
xchg
pop
mov
push
call
test
aaa
add
and
dec
jge
ret
pop
in
popa
dec
xor
jnp
sbb
cmp
int
loopne
daa
or
xorb
decb
jae
aaa
cmp
rorl
outsl
cli
cmpsb
fisttpl
dec
arpl
add
inc
xor
pop
jno
sbb
les
fsubl
pop
movsb
dec
fwait
pushf
mov
hlt
shrb
mov
daa
test
jg
pusha
sbb
cwtl
repz
pushl
inc
sti
and
scas
outsb
arpl
out
imul
dec
sahf
out
das
mov
decl
mov
xchg
imul
sub
jmp
leave
xchg
lret
sbb
int3
repnz
in
dec
mov
jle
aad
jne
push
dec
vmread
loopne
out
stos
sti
cmp
gs
rclb
dec
leave
lock
data16
fimull
cmp
sub
cmp
adc
divl
cmp
inc
sub
mov
mov
push
iret
hlt
fmull
mov
inc
popa
mov
adc
in
es
dec
xchg
jp
mov
xchg
jne
test
jecxz
and
fdivs
add
out
in
xor
nop
andb
bound
test
loopne
pop
ds
pop
loope
jl
sarb
rcrb
jo
leave
push
jno
push
jnp
and
cmpl
rol
dec
clc
bound
test
or
fdivrp
mov
ret
push
rcrl
insb
sti
jne
cs
adc
jecxz
fmull
scas
sti
cmp
lods
popa
movsl
jns
mov
popf
jae
pop
xor
mov
stos
xor
inc
sub
sbb
fisttpll
inc
or
mov
sarb
mov
push
xchg
jmp
sub
stos
test
in
push
stc
lea
xchg
sub
dec
mov
or
jbe
xchg
mov
aaa
repz
sub
jae
add
int
nop
notl
fildll
inc
clc
enter
or
adc
out
jae
push
pop
xchg
push
das
mov
sahf
enter
pop
mov
mov
cmp
adc
rorb
test
movsb
cmp
adc
jp
jge
cld
in
aaa
pop
mov
pop
movsl
xchg
sbb
xlat
or
push
sbb
clc
or
int3
fucomip
mov
lea
arpl
pop
and
shr
cmp
fs
pop
mov
fidivrs
adc
push
shll
jno
or
cmpsb
dec
pushf
jo
mov
insl
lahf
push
ja
inc
xchg
pop
outsl
icebp
and
or
dec
call
or
call
out
or
mov
and
arpl
and
push
and
mov
inc
mov
gs
or
ficoms
les
into
sub
pop
sub
xor
jle
inc
or
sbb
outsl
xchg
xor
popl
sub
mov
xchg
sub
fs
mov
xor
fs
addl
mov
daa
xchg
add
pop
in
outsb
push
sbb
cmp
iret
cmp
scas
fisttps
scas
xlat
mov
out
cmc
jns
push
aad
jp
xor
xor
sbb
andb
pop
xchg
push
sub
stos
enter
sahf
xchg
movsl
or
imul
pop
mov
insl
and
cmp
add
dec
pusha
xchg
das
icebp
lods
xchg
outsl
sub
fdivrl
mov
js
sub
push
mov
int3
shlb
mov
movsl
cmp
fsubl
in
push
sub
js
and
daa
mov
clc
sti
sub
dec
pop
jl
or
sbb
inc
sub
scas
xlat
pop
push
or
mov
xor
push
clc
mov
pop
outsl
lods
fildll
xchg
dec
push
jo
sbb
ret
adc
or
pushf
sub
cmp
mov
pop
imul
out
shlb
mov
mov
xor
scas
adc
push
aas
repz
in
das
shrb
xchg
decb
repz
inc
popl
fsubl
pop
push
sti
test
push
jge
cmp
aam
add
lock
fsubl
lds
adc
sbb
fucom
cmc
mov
inc
adc
loop
adc
push
dec
cmc
out
in
lcall
dec
adc
mov
data16
in
jns
mov
pop
push
repnz
push
push
mov
out
stos
bound
je
add
fsubp
push
pop
mov
pushf
call
lret
ficompl
hlt
arpl
add
add
fdivs
mov
pop
lock
push
mov
cmp
dec
dec
aaa
stc
adc
lcall
out
test
int3
add
or
dec
sbb
into
out
sub
orl
jge
daa
jo
dec
repnz
fldt
push
jg
xchg
sub
sub
int
or
and
push
xchg
jae
inc
lods
sbb
add
enter
sbb
rcrb
adc
mov
inc
loop
ret
cmp
inc
mov
lods
repz
adc
mov
jmp
cmpsb
pop
setae
mov
mov
and
mov
add
jb
dec
shr
mov
lret
arpl
mov
loop
hlt
jne
xchg
out
dec
inc
xchg
adc
dec
xchg
jecxz
js
add
mov
pop
call
xor
jge
aam
jno
pop
repnz
inc
mov
mov
outsb
xchg
xchg
int3
outsb
aas
ret
cwtl
decb
repz
icebp
fnstsw
or
imul
das
lock
inc
mov
idiv
push
jp
into
adc
sti
sti
push
dec
inc
movsb
push
mov
stos
jno
imul
push
or
mov
in
iret
js
pop
sbb
push
lods
stos
xor
arpl
sbb
hlt
and
mov
bound
dec
mov
dec
pop
inc
inc
push
out
xchg
decb
mov
div
out
inc
inc
dec
jns
repnz
push
lock
or
cs
mov
cld
add
test
shl
sub
sbb
lahf
or
cmpsl
adc
fcmovne
mov
push
daa
out
push
roll
jecxz
mov
sub
clc
pop
pop
jge
jbe
pop
push
pushf
mov
inc
cmp
lahf
mov
and
cmpsl
jl
push
aaa
xchg
cs
mov
enter
jo
mov
out
xlat
push
mov
lcall
lds
cld
xchg
shlb
fdivrl
je
xor
or
mov
imulb
loopne
cmpsl
push
mov
pop
fildll
dec
cmp
push
mov
adc
dec
push
sub
cmp
test
loop
mov
rcrl
iret
pop
push
insl
dec
out
test
cld
and
jmp
repnz
fmuls
fadd
sahf
jg
jne
push
or
sarb
sti
jmp
ds
pop
xchg
xor
ror
roll
orb
sub
sub
cli
sub
xor
scas
mov
mov
and
movb
adc
xor
into
push
int
aas
lods
and
sub
cld
cli
xchg
cmp
js
cwtl
arpl
adcb
dec
fmuls
inc
inc
fdivr
lcall
push
jp
mov
les
repnz
cltd
xchg
jl
pusha
xor
lcall
mov
fildll
sahf
jecxz
xor
ljmp
pop
and
xor
lock
push
sub
cli
jae
inc
cltd
sti
aad
das
or
push
stc
ret
sbb
jmp
cmc
cld
mov
fistps
daa
aas
clc
cld
dec
dec
inc
pushf
jo
add
mov
or
push
arpl
xchg
fildll
push
xorb
add
or
pop
subb
scas
dec
fprem
shll
inc
pop
cmpsl
sub
es
push
pop
dec
into
pop
push
mov
loope
jge
cld
mov
fsubr
pop
int3
cmp
xchg
test
mov
loopne
lock
test
sub
ds
cs
nop
pop
pop
fnstenv
outsl
outsb
into
outsl
ret
sub
dec
xor
pop
outsb
fsts
out
movsb
arpl
mov
dec
addr16
sar
imul
out
cmp
and
xchg
sub
cs
stc
pushf
add
lods
rorb
je
insl
and
xchg
repnz
outsl
lods
int3
mov
dec
cmpsl
fiaddl
icebp
cmpl
ss
aam
flds
js
rolb
mov
imul
sarb
shrl
lock
mov
cwtl
lret
sbb
insb
xchg
mov
adc
pushf
push
call
mov
xor
cmp
add
in
mov
xchg
mov
or
aaa
lds
add
mov
cs
lcall
jg
push
xchg
adc
pushf
test
sbb
clc
out
fcmovb
add
xchg
push
push
mov
jge
mov
fildl
fdivrl
mov
push
pop
hlt
cs
clc
rcrb
out
or
add
jecxz
push
test
mov
rolb
clc
push
xor
out
adc
cmp
xor
inc
ret
mov
cwtl
sbb
mov
sbb
fcoml
xchg
mov
mov
iret
xchg
lods
pushw
mov
fists
cwtl
sti
inc
pop
lods
jmp
jno
lret
inc
inc
sub
xor
and
or
iret
ror
push
mov
cmc
inc
lcall
and
adc
jmp
and
stos
je
mov
push
test
jg
sti
std
inc
inc
push
dec
mov
mov
jae
jge
inc
sub
aas
xlat
or
mov
lods
add
lret
dec
inc
mov
mov
xchg
scas
cmp
scas
push
cli
cmp
dec
pop
test
push
imull
pop
mov
rcrl
fwait
or
call
lock
pop
inc
fldenv
and
ljmp
push
sbb
leave
daa
out
cmp
dec
mov
out
xchg
or
mov
inc
and
push
fldl
aad
fistps
push
js
and
outsl
loopne
mov
jmp
leavew
push
movsl
dec
cmpsb
pop
popa
sbb
hlt
test
arpl
add
enter
sub
and
int3
inc
push
pop
cmpsl
jae
incl
jnp
inc
adc
push
test
push
pushf
lock
mov
push
push
clc
cmp
or
jg
lret
test
out
push
mov
mov
push
pusha
sbb
dec
cmp
aaa
es
das
je
icebp
fwait
sti
lods
loop
leave
fsubrs
push
xor
and
bound
arpl
nop
push
xchg
mov
in
xor
imul
mov
dec
xchg
inc
sub
xor
imul
ret
sub
jb
pusha
leave
adc
inc
shl
pop
jg
int3
push
xchg
inc
inc
jo
in
test
repz
cmp
add
mov
jae
out
adc
adc
push
jnp
aad
jo
sbb
cld
dec
xchg
xchg
lret
popf
push
xchg
pop
pop
dec
mov
cld
push
dec
or
or
or
ret
ret
mov
mov
mov
mov
shlb
xor
and
pushf
push
dec
push
sub
inc
stos
push
int
inc
daa
xor
hlt
mov
outsb
dec
sub
sahf
cmp
frstor
addr16
ret
jg
ret
or
dec
or
add
inc
add
in
inc
adc
or
nop
std
adc
xchg
add
add
gs
adc
mov
in
das
push
addr16
pushf
pusha
mov
cld
fisubs
shll
xchg
sub
sbb
stc
mov
filds
and
push
add
or
mov
je
lods
or
lods
shll
ss
pusha
pop
inc
mov
jecxz
adc
add
lods
leave
mov
test
dec
xchg
jmp
out
jo
ret
popa
mov
jo
icebp
and
fwait
sbb
add
mov
loopne
cmp
outsl
repz
cmp
pop
mov
jbe
pop
sub
jne
bound
jl
dec
push
into
xchg
movsb
pop
fldl
es
mov
incb
cmp
cwtl
mov
ss
arpl
xchg
fs
cltd
fcoms
mov
mov
nop
xor
or
and
xchg
adc
pop
adc
addr16
insl
inc
test
mov
jns
lods
in
xchg
sub
push
mov
mov
adc
loopne
insl
adc
push
mov
push
fs
cmpsl
dec
jbe
addr16
out
jbe
mov
sbb
fcmovnb
jge
push
stc
rcr
pop
mov
dec
repnz
ss
out
pop
das
push
mov
fcomp
mov
inc
lahf
cmp
jl
scas
call
outsb
jle
sub
ror
outsb
loopne
out
and
ret
fistps
lret
xchg
jno
lret
and
xor
cwtl
jg
sub
scas
mov
push
jb
in
jnp
jmp
dec
inc
outsl
cmc
push
xor
push
mov
sbb
imul
xlat
and
add
rcll
sarl
cs
mov
pop
or
mov
stos
pop
call
lcall
cmpsl
pop
addr16
mov
fnstsw
iret
pushf
icebp
lret
mov
sub
jle
leave
inc
sub
fidivs
or
punpcklwd
jno
daa
pop
push
cmpb
or
imul
mov
mov
lahf
jnp
lea
enter
sub
mov
or
adc
neg
xor
inc
jmp
stos
adc
ret
sub
sahf
dec
add
insl
lahf
lods
mov
enter
loope
adc
pop
in
mov
inc
ret
mov
jns
pop
lcall
std
mov
cmp
shrl
xchg
je
sbb
test
cmp
ror
or
pusha
and
cmp
movsl
xchg
ss
mov
clc
sar
aam
xor
add
inc
mov
jle
mov
ss
stc
push
lds
mov
add
mov
daa
jp
cmp
mov
push
lahf
jbe
repz
roll
loop
outsl
popa
sub
popf
sti
mov
cmp
mov
sbb
scas
mul
repz
leave
in
pop
shll
int3
mov
out
push
xor
and
stos
mov
jp
xor
xor
out
mov
pop
jne
mov
jo
mov
int3
hlt
rorl
gs
shll
subl
or
adc
insl
and
jb
aas
mov
and
ffreep
xor
sbb
fneni(8087
test
cmp
test
fldcw
and
inc
hlt
push
inc
cmpsl
lds
jo
mov
add
pop
lcall
adc
jno
pusha
ja
push
mov
out
mov
or
mov
jns
mov
cmpsb
orb
dec
test
add
jno
stc
shlb
dec
dec
outsb
adc
sbbb
icebp
and
cld
roll
mov
lock
push
dec
push
xlat
dec
and
ljmp
cmp
push
mov
mov
mov
dec
mov
cwtl
loop
pop
pop
xchg
nop
mov
into
fiadds
jg
ss
stc
cmp
sar
xchg
repz
jae
pop
mov
out
inc
mov
fwait
jp
cmp
adc
mov
ret
cmp
add
jns
lods
mov
lahf
and
test
cmp
jge
aam
cmp
out
lea
inc
mov
inc
push
bound
xchg
or
sub
push
jg
jge
sti
push
xor
jecxz
xor
out
xchg
lahf
cmp
lds
xchg
call
push
shrl
mov
movsl
arpl
inc
mov
and
ds
xor
and
imul
jp
jbe
jo
adc
and
cmpb
jp
icebp
je
dec
mov
inc
jns
jae
or
xchg
cmpsb
scas
mov
ficoms
std
dec
add
cs
subb
or
inc
push
aam
pop
and
sbbl
sub
pop
add
lods
push
sub
sbb
outsb
outsb
fmuls
addl
clc
xchg
and
add
ljmp
sub
pop
push
pop
pop
adc
and
fs
aad
sbb
hlt
or
mov
stos
or
pop
or
pop
cs
dec
or
sbb
adc
aaa
mov
dec
shrb
lret
xlat
in
fwait
dec
inc
sub
lcall
sti
ficomps
shl
jmp
sti
push
fsts
and
addr16
rcrl
mull
imul
xlat
icebp
cld
sbb
push
pop
xorb
xchg
push
or
aaa
test
xor
dec
ret
out
sbb
leave
fcmovnu
lahf
stc
sub
push
in
cmpsb
aam
xchg
std
dec
or
arpl
jecxz
xchg
shrb
jmp
addr16
xlat
cmp
cs
hlt
mov
mov
in
inc
dec
cmp
dec
pushl
decb
cltd
push
gs
inc
les
insl
into
inc
add
sub
jbe
flds
out
xor
or
andb
or
in
xor
int
mov
rcrb
push
rcll
push
dec
jbe
mov
das
ret
pop
loop
inc
mov
sbb
mov
pop
insl
mov
sbb
call
loope
or
loopne
rcr
mov
or
push
shrb
add
sbb
scas
into
ljmp
lcall
ja
int3
pop
add
loopne
dec
inc
nop
mov
mov
or
in
mov
pusha
hlt
pusha
imul
call
sti
fcmovnu
mov
adc
fiaddl
cmp
aam
movsl
out
outsb
addl
lret
sarb
mov
mov
jle
jmp
xor
xor
dec
neg
mov
add
mov
scas
inc
mov
cmp
cmpsl
and
jnp
adc
gs
lret
inc
stos
stos
xchg
push
push
jbe
or
xor
in
push
jmp
repz
cmc
mov
les
imul
lock
pop
mov
xor
inc
xlat
adc
enter
cmp
insb
xor
push
ret
ja
sub
cs
xor
add
pop
adc
push
sbb
pop
ss
leave
dec
mov
or
sbb
jmp
daa
mov
push
xchg
das
out
xchg
mov
fidivrl
sbb
mov
shll
sbb
sahf
mov
popf
xor
jg
and
mov
push
movsb
lcall
pop
sbb
jmp
das
xor
inc
mov
pop
test
icebp
adc
fwait
jns
jb
xor
adc
test
pop
cmpsl
call
dec
fildll
in
pop
mov
mov
push
cmp
subb
dec
or
or
lds
and
cwtl
push
sub
inc
push
mov
incb
mov
push
lods
adc
inc
mov
pop
pop
in
cmp
mov
cmp
dec
dec
mov
and
mov
sbb
inc
pop
rorl
test
fiadds
je
sti
aas
dec
rcll
jo
inc
sbbb
or
xorb
dec
fisubrs
inc
movsb
cltd
out
xchg
push
stos
div
jno
mov
cmp
aad
xchg
adc
mov
add
scas
mov
push
stos
mov
insb
xchg
cmp
lods
cld
cwtl
loopne
push
jns
sub
push
pop
insl
lret
mov
add
repz
lahf
inc
test
sbb
mov
aam
mov
dec
mov
lahf
out
jl
jge
cs
xchg
push
mov
jl
mov
icebp
inc
jmp
arpl
es
sbb
mov
scas
xor
push
pop
add
xor
fisttpl
xchg
insl
ret
sbb
jg
int3
cs
add
inc
test
mov
dec
mov
pop
bnd
xlat
dec
mov
or
sahf
adc
je
cmp
aam
inc
dec
ret
sub
insl
push
ss
dec
es
fwait
push
sti
and
pop
sbb
jge
sub
fldcw
mov
sbb
das
xor
cmc
mov
adc
outsb
mov
fldenv
mov
pusha
or
and
ud2
push
jo
mov
test
lock
mov
sbb
push
sub
test
add
negb
ss
xor
push
pop
out
fs
addb
mov
add
int3
icebp
mov
dec
inc
pop
add
inc
push
or
jle
mov
fidivrl
das
cltd
sub
pop
sub
scas
add
out
push
xchg
stc
dec
jge
repnz
sub
or
imul
mov
imul
xchg
adc
push
sahf
xchg
mov
adc
xchg
mov
arpl
jb
daa
sub
stos
jnp
icebp
xchg
aaa
jmp
jl
mov
mov
mov
mov
repz
or
xchg
or
aad
jecxz
sahf
ljmp
pop
rcrb
xchg
mov
xchg
xor
or
push
aaa
int
push
sub
ret
mov
jns
test
test
in
scas
dec
popf
and
mov
add
incl
aam
out
clc
ss
ret
dec
lret
out
fwait
enter
jne
imul
cwtl
ds
jmp
jb
aaa
lahf
roll
dec
dec
sbb
rorb
test
xor
stc
cmp
hlt
cld
xchg
mov
lds
pop
sbb
or
mov
scas
or
out
fsubs
movsb
mov
repz
pop
mov
jmp
bound
in
cmp
test
rcrb
jmp
fdivrs
mov
mull
inc
daa
shrl
std
add
pushf
or
lahf
pop
sub
test
pop
xchg
mov
inc
sbb
push
or
in
jl
sbb
adc
mov
cmp
in
xchg
pop
and
daa
mov
pop
int
pop
lods
push
andb
mov
gs
xchg
cmc
test
sbb
lcall
das
inc
cmp
and
in
xor
xor
or
mov
jmp
xchg
jno
lcall
or
mov
ror
scas
and
inc
jb
shlb
adc
mov
sub
lcall
push
mov
dec
push
iret
stos
imul
push
fisttps
loopne
arpl
inc
enter
add
adc
and
mov
adc
push
push
push
push
aas
xchg
xchg
push
lcall
sub
and
mov
mov
mov
jne
pop
inc
and
out
cld
pop
sar
jl
push
pop
jae
js
cli
jb
test
cltd
push
dec
jbe
add
imul
test
cmp
out
lret
nop
into
hlt
stos
outsl
xchg
mov
bound
shrb
mov
icebp
mov
inc
inc
pop
pop
out
test
faddl
pop
mov
push
add
inc
mov
sub
add
daa
inc
movsl
test
int3
xchg
pushf
fsubs
lea
mov
sahf
inc
movsl
popf
outsl
pop
lahf
cmpsl
ret
unpcklps
mov
mov
decb
int
inc
mov
fwait
inc
mov
inc
push
ret
and
loope
sbb
jae
out
xchg
dec
mov
cmp
sahf
cmp
xorb
sub
icebp
ja
pop
sarb
push
mov
jns
stos
daa
rolb
cmp
stc
or
in
pushw
sbb
cmp
les
fdiv
cli
inc
push
sub
add
std
inc
jmp
inc
std
pop
dec
in
fs
mov
and
sbb
xchg
sti
rcl
ds
scas
test
pop
lahf
dec
and
call
out
mov
repnz
sar
out
ret
in
pop
jns
push
dec
jno
lret
sti
jno
mov
psrad
ffree
jg
cli
fadds
xchg
sbb
dec
es
xor
mov
pusha
call
les
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
add
push
add
push
add
add
add
add
add
add
add
push
sbb
