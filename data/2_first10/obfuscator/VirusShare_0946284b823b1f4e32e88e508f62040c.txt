pusha
jmp
sub
repnz
and
imul
sub
movw
push
dec
pop
push
cld
pop
decl
jmp
xchg
insl
inc
frndint
mov
es
or
sbb
add
or
dec
movl
and
add
add
push
sahf
pop
jne
sub
add
shr
xor
jns
cmc
movl
adc
shl
adc
js
sbb
or
sbb
push
inc
pop
shl
or
push
lahf
pop
xor
push
dec
pop
xor
jmp
dec
sti
adc
popa
leave
mov
xchg
pop
jge
push
dec
pop
sub
add
jmp
sub
add
lock
sub
push
xchg
pop
jb
or
sub
movl
rcr
or
and
jns
sbb
jae
sbb
sbb
sub
jmp
jne
ljmp
pop
andl
and
jmp
shrb
scas
in
jno
xor
je
movb
ror
xor
push
cmc
pop
adc
sbb
and
ror
push
aaa
pop
sub
movw
sbb
push
cwtl
pop
sbb
push
inc
pop
add
jne
sub
push
dec
pop
jmp
xchg
nop
mov
mov
mov
adc
push
xchg
pop
and
sbb
adc
rcr
push
xchg
pop
xor
push
xchg
pop
sub
sub
push
xchg
pop
imul
jno
sub
movl
jmp
or
movsb
dec
xchg
mov
js
adc
adc
push
stc
pop
rol
jmp
jl
cwtl
cmpsb
out
xor
dec
insl
xor
push
inc
add
iret
jns
rcl
jnp
and
jmp
fdivl
out
and
rcl
cmpl
jne
add
push
ret
pop
jecxz
mov
in
jb
dec
fwait
push
test
jo
push
fs
in
movswl
movswl
int
push
in
sbb
popf
stc
mov
push
gs
mov
in
mov
inc
xlat
outsl
in
mov
mov
out
das
pusha
shrb
in
icebp
inc
mov
mov
out
das
aaa
inc
insl
stc
mov
inc
adc
mov
mov
in
cwtl
stos
lods
lock
repz
mov
in
dec
xchg
stos
lods
lock
lcall
adc
mov
mov
imul
inc
cmpsl
lods
lock
mov
in
rolb
insb
enter
jno
mov
ljmp
xor
out
rcrb
lret
or
lods
lock
out
lock
xlat
xlat
in
mov
in
lock
test
jo
in
cwtl
inc
push
in
lock
cmp
mov
mov
and
inc
add
call
in
add
inc
mov
lods
lock
nop
aam
cmp
ror
push
in
add
sarb
fwait
loopne
mov
xchg
in
call
mov
subb
cmp
lret
jl
xor
in
cwtl
inc
mov
adc
lret
js
xor
repz
out
addr16
jle
jnp
xor
jae
out
loopw
jl
xor
lcall
mov
cmp
fdiv
inc
mov
in
and
addr16
lret
dec
or
push
jle
nop
aam
mov
jno
inc
in
lock
loope
mov
pop
mov
cld
repz
adc
fwait
call
xor
addr16
andl
jle
nop
aam
andl
ret
jg
jnp
mov
in
lock
mov
or
push
repz
lock
addr16
adc
test
lret
outsl
mov
cwtl
xchg
lret
out
cld
repz
call
outsl
lret
cmpsb
mov
xor
mov
in
mov
push
into
repz
repnz
inc
cmp
hlt
jmp
lret
in
mov
push
ljmp
in
adc
sbb
imul
ret
jge
sbb
loopne
xor
cld
inc
lret
lret
ja
xor
repz
xor
jnp
mov
jle
cwtl
aam
jl
into
lret
mov
cwtl
bound
in
lock
xor
cwtl
outsl
stos
lods
lock
push
pop
lock
mov
call
lock
push
aaa
lock
mov
call
lock
push
daa
lock
mov
call
mov
call
in
jns
cmp
hlt
adc
mov
add
in
jnp
xlat
and
mov
in
lock
mov
das
fwait
and
mov
fisubs
xor
sahf
test
fimull
test
roll
xchg
and
test
add
sahf
lahf
and
mov
rcrl
xchg
sub
in
mov
and
mov
xchg
adc
popl
lret
xor
lret
xor
test
xor
cltd
xchg
xor
movsl
sahf
rcrb
lahf
cs
sahf
lahf
and
lahf
addl
xchg
dec
fucomp
lock
lock
in
pcmpgtw
add
add
lock
add
add
add
mov
add
add
add
add
add
loop
add
sub
dec
pop
xchg
jne
mov
add
add
call
roll
add
add
mov
mov
add
lea
add
add
out
add
cld
add
fiaddl
add
add
add
inc
loopne
add
add
add
add
aas
add
add
add
add
jae
add
add
add
add
add
add
testb
add
jecxz
add
add
sbb
sbb
add
rolb
add
rolb
add
add
add
testb
add
xor
add
add
incb
add
add
mov
add
mov
je
add
add
add
ret
add
das
lods
add
ret
add
add
add
aad
add
sub
add
add
add
add
add
add
add
push
add
insb
shll
pop
mov
push
push
test
and
mov
jmp
lret
mov
dec
jmp
cmp
jecxz
sub
mov
mov
xchg
push
xlat
xor
leave
nop
push
test
fs
pop
push
mov
xor
repz
rcll
nop
fnstcw
repz
repnz
sbb
shlb
movsl
cmpsl
mov
lods
vminsd
adc
pop
xchg
jg
mov
leave
xor
push
into
dec
xor
cmpl
pop
fdivrp
lret
sub
mov
out
lds
cmc
hlt
movsb
es
int
jno
jg
fnstsw
stos
inc
and
icebp
cmpsl
data16
data16
lret
xchg
clc
add
cli
adc
popf
mulb
push
jl
outsl
ljmp
push
or
xabort
insb
stos
mov
and
out
hlt
fs
sbb
hlt
repz
popa
cld
push
dec
dec
dec
ljmp
fnstcw
mov
dec
mov
jno
sub
push
fcmovnbe
sbb
pushf
push
push
movsb
sbb
xor
ror
scas
sahf
ja
scas
test
imul
out
int3
je
cmp
out
and
aaa
jmp
out
outsl
test
push
mov
mov
pop
mov
sbb
aas
push
xchg
fiadds
adc
push
or
incb
jbe
jo
test
mov
orl
les
scas
rclb
inc
add
subb
lods
out
sub
sarb
ljmp
ret
adc
mov
mov
mov
fcmovbe
into
jb
mov
arpl
jl
pop
inc
dec
shll
cmpsl
lods
into
mov
sub
iret
and
inc
xlat
mov
cld
cltd
push
sbb
push
pop
test
jno
fiadds
inc
add
xchg
lahf
fs
mov
shrb
fisubrl
fcomi
sub
nop
std
push
fiaddl
push
negb
and
and
lcall
inc
pop
aam
xor
shl
iret
pop
jle,pt
jo
xor
adc
push
sub
jnp
dec
jge
xlat
sub
mov
stos
adc
popa
jge
xor
cmc
loopne
pop
xchg
or
in
cs
push
test
inc
mov
daa
test
loop
jge
cltd
mov
fisubrs
sbb
mov
xor
rorb
mov
jno
pushf
jge
inc
fcoml
je
scas
cld
inc
je
mov
scas
daa
sub
enter
fs
ljmp
push
add
cmpsb
aad
dec
in
push
dec
enter
je
xor
lea
jb
xchg
movsl
into
in
iret
dec
mov
dec
in
pop
loop
stc
xchg
hlt
insb
arpl
sub
push
and
pop
jbe
push
fs
mov
fnstsw
mov
adc
mov
ret
mov
aaa
gs
je
sub
jmp
subl
jp
clc
fisubrs
mov
sub
das
xor
push
mov
jns
sbb
push
xchg
movsl
push
lret
dec
data16
sub
hlt
and
xor
xor
and
push
pop
bound
xchg
out
xchg
pop
xchg
in
rcr
cmp
and
mov
and
adc
push
in
mov
hlt
loopne
add
push
mov
das
cmp
adc
mov
inc
pop
push
jl
xchg
sbb
stc
jae
dec
dec
sub
xor
cmp
popf
aad
or
ljmp
pop
sbb
lock
mov
inc
popf
xor
or
mov
adc
jno
pusha
lods
icebp
push
cltd
aaa
mov
mov
loopne
xchg
inc
inc
int
dec
pop
daa
frstor
sub
add
shr
cltd
inc
cmp
dec
not
mov
hlt
mov
bound
pop
jno
dec
stc
pop
and
insl
or
adc
into
jbe
daa
mov
dec
daa
ficomps
rcrl
imul
jbe
sbb
jne
movsl
push
pop
mov
mov
add
push
loope
add
jmp
cmp
and
xor
iret
pop
dec
mov
mov
mov
ljmp
dec
sbb
testb
out
aam
shlb
or
mov
iret
stos
fld
in
gs
xchg
nop
bnd
jb
subb
mov
mov
mov
int3
xor
pop
adc
test
ficomps
movsl
xor
adc
xchg
mov
scas
clc
mov
xchg
test
xor
test
leave
sbb
repz
repnz
dec
repz
mov
or
stos
je
fidivl
into
addr16
stc
pushf
xchg
sahf
and
aad
sbb
fidivrl
popl
movsl
xor
leave
imul
lds
pop
int
cwtl
xchg
push
inc
out
sbb
je
movsl
xchg
xor
call
sub
push
inc
sbb
repz
cmpsl
add
mov
bound
outsb
in
js
lea
inc
testb
add
push
pop
sahf
push
icebp
iret
jle
push
ljmp
jecxz
mov
dec
or
popf
sbb
int
fimull
push
inc
push
jmp
add
lret
or
push
sbb
int3
cmc
mov
in
pop
js
outsl
jmp
jbe
xor
mov
add
sarb
inc
adc
cmc
dec
jle
sub
inc
shrl
sbb
and
cmpsb
inc
lods
mov
pop
dec
out
aaa
push
push
popf
xlat
dec
sbb
jae
push
fisubs
out
sub
xchg
mov
sbb
sbb
mov
xchg
fmul
and
mov
xor
jle
loope
icebp
xor
stc
clc
int3
fwait
dec
cmp
dec
ja
test
scas
and
pop
test
leave
scas
in
sub
into
out
push
loope
clc
dec
mov
adc
ds
push
xchg
or
movsb
lods
jb
xchg
xchg
mov
xchg
sub
ret
inc
sbb
sbb
jg
push
or
test
pop
mov
sub
xchg
pop
in
mov
cmp
jae
repz
aas
repz
out
jge
movb
pop
shll
mov
pop
je
xchg
lret
pop
je
lret
imul
jo
push
loope
mov
fcmove
pop
int3
and
fsub
lahf
and
mov
popa
adc
cmp
enter
push
aaa
pop
daa
dec
jnp
enter
fildll
or
cmp
cld
arpl
adc
cs
jle
dec
xchg
mov
cmpsb
jl
xchg
pop
mov
push
mov
jbe
ljmp
jns
xchg
mov
mov
pop
sahf
xchg
adcl
lock
mov
dec
lock
movsl
adc
push
mov
adc
sti
mov
xlat
dec
outsl
dec
es
jae
xor
mov
cmp
rdpmc
mov
out
lods
dec
mov
jae
adc
mov
iret
dec
popa
test
imul
stos
mov
scas
jecxz
rcl
xor
shl
fsts
lahf
push
jbe
push
lods
and
addr16
mov
sub
jle
sti
sub
repnz
push
ds
mov
xor
pop
sub
pop
repz
inc
xchg
dec
fcom
adc
mov
push
int
mov
lret
divl
shlb
jecxz
ficompl
shlb
enter
sub
push
nop
jp
xchg
lds
scas
mov
sub
ret
or
mov
adc
or
pop
dec
mov
mov
lock
or
lret
iret
andb
stc
fiadds
adc
sbb
mov
mov
out
andl
mov
sarb
add
in
dec
test
cmp
icebp
cs
adc
mov
int3
outsb
fchs
pop
loopne
daa
ret
ret
sbb
clc
loopne
push
jno
aaa
xor
ret
pop
call
xor
push
fsubl
out
jae
in
outsb
arpl
xchg
jo
pop
cmp
inc
fcoms
jb
sub
sub
mov
jae
scas
lea
scas
and
cmova
jge
inc
enter
lods
ror
adc
out
inc
loopne
sbb
push
sub
jp
fistpl
push
stos
xchg
mov
je
aaa
push
stc
jns
inc
push
mov
jno
lret
jo
cs
mov
pop
jno
mov
inc
mov
lock
fcmovnbe
lret
clc
shrb
mov
mov
orl
loop
mov
cmp
in
out
sub
cmc
in
sbb
pop
cmp
xchg
test
mov
jnp
jle
pop
js
enter
dec
fnstsw
mov
sub
jns
rcrl
pop
arpl
mov
loopne
lret
or
out
sbb
jbe
std
lods
mulb
push
mov
mov
mov
and
pop
dec
cmp
out
call
or
push
adc
mov
inc
lods
mov
cli
cli
into
mov
decl
daa
or
movhps
es
jae
lcall
cmpsl
dec
lret
sub
sbb
enter
xchg
loopne
xchg
push
into
in
pop
xor
cmp
xor
xchg
int3
ret
pop
xchg
cmp
add
iret
std
pop
cmpsb
inc
push
test
add
push
jmp
repz
test
repnz
addr16
inc
sub
das
cwtl
adc
bound
push
in
cmp
add
into
stos
cs
xchg
decl
xchg
data16
mov
in
rcll
in
mov
mov
push
push
xorb
das
jle
aad
xlat
lret
cmpsb
stc
rorl
jae
and
pop
ja
jmp
pop
mov
mov
xor
mov
mul
fwait
xor
movl
pushf
adc
stos
fcoms
ss
mov
push
pop
rcrb
add
idiv
daa
popf
xchg
xor
adc
jb
les
cmpl
daa
push
imulb
xor
outsl
bound
loopne
jle
xchg
dec
sub
dec
sub
aas
jb
scas
cltd
add
and
add
mov
xor
jno
cltd
sub
mov
add
sbb
dec
inc
stc
sbb
sub
or
sub
mov
in
stos
iret
lods
push
cmp
repz
mov
divl
inc
sbb
mov
mov
dec
or
and
xchg
test
cmp
sub
mov
push
xor
loopne
bound
into
and
push
pushf
and
stos
imulb
cmp
inc
sbb
les
xchg
dec
jp
sbb
dec
movsb
sbb
repz
inc
arpl
pop
cmp
xchg
pop
push
mov
je
pop
inc
pop
aas
adc
jge
imul
fstps
ss
decl
arpl
jns
xchg
sub
mov
out
mov
xlat
jbe
cwtl
cltd
aaa
jge
lret
pop
inc
gs
dec
adc
push
cltd
rcrb
jns
repnz
lods
je
shll
loop
push
mov
je
adc
lcall
mov
cmp
push
and
or
pop
fldl
mov
fdivrs
sbb
mov
xor
adc
int3
mov
out
xor
stos
mov
cmc
sub
popf
pop
popf
sbb
popa
loope
rcl
pop
xor
cmp
jns
xor
add
jle
mov
lret
xchg
sbb
adc
jae
add
push
fs
jno
ret
and
xor
repnz
push
clc
push
mov
jae
pop
xchg
ljmp
or
cmp
cld
pop
test
add
or
push
inc
fs
mov
push
rorb
xor
mov
inc
push
xchg
xor
std
icebp
push
mov
adc
and
cli
inc
in
sub
cld
jns
xor
lods
enter
into
mov
pop
das
mov
push
mov
push
int
js
es
and
scas
or
inc
divl
mov
push
ljmp
push
push
jge
adc
sub
sub
clc
xor
cmp
lahf
sbb
cmp
cmp
adcb
adc
mov
push
js
lret
rolb
sbb
mov
fstpl
push
test
cld
sbbl
outsb
mov
es
pop
mov
fs
xorb
jmp
jecxz
aas
and
data16
push
sti
mov
sub
es
repnz
xor
push
inc
ds
mul
rorb
sub
adc
cwtl
xor
repz
mov
ret
push
xor
ljmp
mov
fwait
loop
sbb
stos
addl
and
mov
fwait
andb
push
mov
jns
pop
mov
ror
sub
push
dec
mov
ljmp
cld
mov
or
insl
cmpsl
or
gs
push
mov
imul
xchg
test
ds
jge
mull
test
dec
ja
inc
js
cmp
mov
mov
push
lcall
dec
clc
aas
lret
loopne
clc
add
cwtl
jmp
jae
imul
push
lods
outsl
push
repz
outsb
scas
lret
or
flds
fcompl
mov
push
dec
in
cs
arpl
pop
push
push
mov
push
mov
std
insl
scas
push
xchg
push
dec
arpl
sub
filds
inc
out
or
filds
repnz
and
xchg
clc
lret
mov
xor
xor
push
jl
outsl
jns
imul
dec
sti
call
testb
addr16
push
sahf
mov
and
mov
filds
adcl
out
push
lea
int
mov
mov
pop
movsb
arpl
ret
mov
inc
lret
out
xor
ljmp
mov
jg
arpl
add
xchg
xlat
lret
inc
sub
add
ja
push
pop
data16
mov
jp
mov
mov
pop
cmp
ficoms
in
pop
cmp
cld
bound
ds
mov
adc
pop
fwait
or
pusha
repnz
adc
and
mov
cmpb
mov
ret
fwait
inc
aad
div
shrl
in
arpl
aad
push
and
addb
pushf
lds
in
aaa
fisttpll
push
pop
out
mov
jp
cmp
out
ficomps
xchg
xchg
dec
cltd
shrl
mov
push
lock
fsts
fmull
outsb
mov
int3
loopne
sbb
mov
push
sub
in
push
adc
mov
mov
dec
adc
cwtl
adc
stc
lcall
aad
adc
xor
xor
out
pop
xchg
aam
jle
mov
cmp
xor
loopne
cmp
add
repnz
inc
rcpps
mov
pop
call
or
xor
addr16
xor
jge
movsb
hlt
adc
scas
fsubl
lds
xor
mov
cwtl
ljmp
pop
lds
dec
repnz
lods
ficompl
pop
mov
outsb
sub
int
adc
clc
jp
ret
pop
xchg
cmp
incb
jbe
icebp
sub
insl
cmp
fsubr
jbe
movsl
cltd
aas
notb
xchg
add
in
ds
pop
mov
inc
icebp
iret
xlat
mov
pop
add
fstps
jb
push
fstl
and
rcrb
push
aas
scas
hlt
sbb
and
dec
xlat
mov
out
outsb
mov
mov
out
mov
mov
test
loope
cmp
jns
xchg
pop
daa
aaa
cmp
pop
add
adc
mov
jl
ret
mov
lahf
xor
jle
in
gs
icebp
loopne
aas
es
xor
daa
cmp
rcl
adc
stos
imul
sub
and
push
gs
xchg
shlb
mov
mov
mov
xchg
dec
ja
or
dec
jae
dec
pop
cli
mov
cwtl
jp
add
jg
xlat
daa
add
dec
xor
sti
cmc
adc
cwtl
mov
xor
xchg
sti
movl
stos
sbb
xchg
inc
daa
data16
inc
scas
dec
fcomi
int3
push
in
into
mov
test
jecxz
ja
jne
jmp
rclb
mov
or
sti
fldt
clc
out
js
out
in
adc
sbb
test
enter
cmp
dec
push
das
nop
ficoml
mov
push
movsl
mov
sub
cmp
mov
pop
out
xlat
sarb
insl
sti
push
in
in
mov
outsl
mov
bound
fcmovu
inc
xor
mov
fcomip
jne
loopne
mov
push
scas
mov
xchg
cmc
out
test
lret
mov
inc
jae
cmp
fildll
mov
popa
mov
dec
fldl
push
and
nopl
popa
dec
dec
xchg
pop
jae
add
ficomps
adc
jge
ljmp
aas
push
jbe
jge
jmp
test
orb
push
mov
lea
stc
pusha
inc
shlb
hlt
ret
nop
dec
or
jmp
lock
xor
mov
stos
enter
scas
push
pop
mov
pop
ljmp
dec
cmpsl
aam
and
add
lds
fnstcw
shrb
jmp
jge
dec
lret
loopne
fsubrl
mov
jnp
stos
jnp
inc
jns
mov
sbb
pop
mov
pushf
shr
das
js
in
and
notb
sarl
push
jmp
mov
repnz
and
sub
xchg
int
negb
sub
adc
orl
sbb
mov
mov
mov
fs
into
daa
je
mov
scas
das
mov
int3
jmp
jae
jno
addb
push
add
mov
mov
lea
fwait
daa
dec
cltd
cmp
cmpsb
pop
jmp
aad
bound
repz
repnz
mov
js
repz
dec
jo
cmp
mov
mov
and
mov
push
faddl
push
lcall
cmp
ret
jb
ror
inc
mov
inc
int
ficoml
lahf
and
out
xor
ret
xchg
xchg
flds
outsl
pop
dec
sbbb
je
jae
in
int3
pop
loopne
mov
gs
pop
and
ss
cltd
out
shl
sbb
push
sub
sahf
cmc
leave
imul
sbb
adc
pop
lods
aaa
insl
out
jae
mov
mov
fstl
les
arpl
test
cld
jmp
dec
loop
mov
xchg
add
jg
jae
adc
jg
arpl
and
adc
je
mov
test
fs
mov
add
insl
cmp
rorb
dec
addb
mov
cmpsb
js
cmp
daa
mov
xor
iret
sti
dec
fdivl
fistpll
inc
das
pop
mov
pop
jmp
xchg
cmp
cmp
rclb
out
xor
es
ret
and
nop
sarb
clc
aad
mov
mov
pop
mov
sub
mov
sbb
stc
mov
mov
add
adc
cli
mov
sbb
movsb
push
sbb
cs
iret
in
ds
push
dec
add
add
sub
in
sub
jb
repz
cld
and
das
sbb
mov
ret
aad
adc
mov
stc
mov
sbb
jp
test
sub
adc
jg
mov
mov
inc
jb
sub
jg
int3
push
or
aaa
inc
jg
call
outsl
scas
adc
or
out
mov
xor
push
jecxz
sub
insl
mov
dec
test
test
mov
add
ficoml
fwait
sub
je
aas
fdivrs
mov
movsl
mov
insw
jae
aam
dec
ret
push
dec
cmp
push
xchg
mov
or
cmp
stc
fstpl
push
imulb
lea
dec
sbb
jne
in
mov
mov
mov
out
shlb
stos
outsb
sahf
cltd
pop
dec
fimull
stos
imul
stc
daa
movsl
lret
sub
cmp
xchg
push
xchg
xchg
ret
xchg
xor
sub
pop
add
inc
dec
pop
pusha
xor
sub
push
and
mov
hlt
out
ja
xlat
dec
mov
xchg
sarb
pop
vmread
jne
or
xor
pop
fcomi
xchg
test
lret
cmp
inc
ds
inc
clc
jb
shrl
lods
ret
xlat
sub
jnp
xlat
or
and
stos
pop
and
dec
fwait
jne
jae
xchg
inc
pop
or
dec
sahf
sub
push
shl
popf
inc
sub
fisttpll
sahf
insl
cmp
add
add
ret
fildl
push
data16
mov
xchg
sahf
and
arpl
sub
xchg
sti
sub
pop
hlt
xor
mov
pop
ret
xor
ds
mov
pop
or
pop
xchg
cld
jle
imul
lret
or
jmp
imull
mov
sbb
cmpsb
fldcw
rolb
push
out
outsl
aad
sub
out
push
mov
loop,pt
nop
dec
jmp
pop
jnp
pop
mov
sbb
xor
addr16
fistpll
rcrb
ljmp
push
dec
sarb
les
pop
mov
mov
addr16
aad
insl
imul
test
scas
dec
mov
cmp
mov
repz
adcl
je
mov
xchg
ds
lods
mov
inc
inc
or
add
lcall
mov
dec
pop
or
movsb
and
xchg
sti
jno
xor
pop
sbb
leave
enter
unpckhps
outsb
repnz
mov
stos
add
rorl
pop
xor
imul
mov
movsl
movsl
jmp
sarb
popf
jmp
inc
or
mov
fcompl
stos
cld
loopne
movsl
sbb
mull
nop
stos
pusha
inc
adc
pop
lods
mov
insb
mov
icebp
loopne
xor
icebp
imul
test
mov
push
push
out
pop
adc
sub
mov
sbb
inc
test
push
pop
pusha
scas
and
mov
inc
sbb
pop
and
movsl
shlb
mov
out
adc
aas
hlt
lret
insl
sbb
cmp
or
inc
dec
sub
subl
mov
lcall
mov
adc
ss
je
cwtl
lds
out
and
mov
push
test
adc
push
js
in
or
push
aam
push
outsl
mov
xor
das
outsb
mov
jns
ljmp
mov
mov
lcall
sub
adc
test
push
shll
mov
sbb
inc
jge
aad
cld
lret
sbb
lods
xchg
mov
sub
dec
cmp
clc
sub
push
fs
sbb
xor
inc
push
jnp
sub
out
or
imul
nop
and
pop
int3
je
stc
in
sub
movsl
test
and
jmp
popf
push
imul
and
call
out
xor
mov
lret
insb
push
jge
sahf
jg
nop
jp
lret
mov
sarl
inc
inc
adc
ror
lods
outsl
sub
sbb
in
pop
jno
ljmp
gs
mov
lcall
pop
mov
incb
sbb
arpl
into
ret
sub
sbb
xor
xchg
mov
cmp
or
lahf
jmp
cmp
adc
sub
cmp
xlat
sbb
fwait
movsb
scas
xorb
aas
icebp
repz
cld
or
xchg
xchg
add
icebp
stos
hlt
stc
lods
lahf
cmpsl
mov
jns
push
sbbl
mov
lock
inc
and
sarl
icebp
test
ret
jb
adc
mov
iret
jbe
mov
and
es
cmovle
xor
push
push
cwtl
arpl
push
sub
lret
test
jbe
pop
push
sahf
jns
lret
pushf
add
je
ja
cs
in
in
mov
xchg
push
andl
repnz
idivb
dec
call
dec
lret
ss
cmovle
mov
fldcw
inc
sbb
push
ror
pop
mov
in
or
insl
enter
cwtl
bnd
mov
jle
popf
scas
cmp
ret
ljmp
lcall
or
jle
ficoml
mov
xlat
mov
movsl
jo
mov
ja
loopne
orl
xchg
add
mov
jle
inc
lret
jg
shl
or
ja
dec
mov
dec
sbb
sbb
mov
cmp
test
shll
sahf
jmp
ficoms
pop
notl
adc
sbb
test
fmul
lcall
call
push
das
jmp
push
mov
scas
add
shr
gs
fsubr
outsl
aas
adc
inc
out
or
inc
ja
aam
mov
pushf
leave
clc
ret
es
mov
jmp
cmc
ja
push
std
add
dec
cmp
aaa
and
jge
and
js
xchg
insb
sub
xchg
scas
sti
scas
cmp
pop
cmp
xchg
out
lds
outsl
push
push
inc
dec
into
fidivl
int
pop
mov
pop
aad
fisttpl
add
pop
jno
les
sbb
inc
fs
cmc
push
pop
bound
xbegin
jb
inc
fdivrp
nop
pop
aas
mov
icebp
imul
or
outsb
add
inc
sbb
fwait
cmpsb
ss
clc
sub
cmp
cmp
lea
mov
cwtl
jbe
xchg
dec
sub
push
clc
cmp
or
scas
xorl
and
adcl
adc
ficoml
or
fisttpll
add
ds
int
add
jb
repnz
sbb
mov
jg
int
outsb
add
cmp
inc
add
inc
mov
insl
mov
inc
pop
cmp
push
pop
xor
or
jge
dec
jnp
popa
dec
cld
int
inc
jns
sbb
inc
mov
test
mov
daa
dec
and
bound
pop
lret
sub
or
aaa
test
jno
mov
inc
in
xor
and
mov
inc
aam
pop
stos
push
enter
stos
cmpsl
pop
push
mov
mov
adc
jne
in
add
div
sbb
pop
add
iret
stos
xchg
ljmp
repnz
int
pop
and
mov
sub
mov
inc
xchg
out
dec
push
in
and
int3
lahf
aas
test
inc
sti
inc
xor
movsl
mov
mov
mov
int3
jnp
inc
lods
jl
addb
adcb
mov
fldt
dec
sub
sub
xchg
shl
pop
jmp
xchg
jl
lcall
and
pushl
lcall
adc
lods
xchg
xor
lret
xlat
incb
mov
ss
dec
int
adc
inc
lea
test
ja
fbstp
sub
adcl
dec
int3
clc
rorb
loop
xor
pop
lret
cmpsl
xor
addr16
push
nop
xchg
lahf
push
sbb
add
xchg
add
cmc
jecxz
inc
in
inc
and
fdivrp
rcl
insb
imul
int
and
lcall
ficompl
mov
cbtw
adc
mov
push
adc
jmp
push
jl
jnp
inc
xchg
and
sti
mov
popa
mov
adc
jmp
je
mov
insb
int3
jmp
jmp
mov
popa
and
hlt
aas
xchg
imul
and
add
and
pop
int
pop
pop
mov
xor
insb
in
les
and
outsb
in
add
cmpsl
mov
arpl
fidivrs
int
subl
lods
idiv
dec
jge
mov
out
jg
inc
int3
jns
mov
lds
xor
jns
shlb
push
lock
cli
scas
jecxz
mov
push
aaa
pop
pop
test
inc
dec
and
cmc
sub
ret
xchg
jo
std
xchg
repz
mov
mov
add
pop
pop
or
mov
fstpt
out
pop
inc
inc
inc
cmpsb
mov
aam
xor
and
jp
xor
sub
pop
ja
cmpsb
sbb
ljmp
cmpsb
decb
inc
lahf
mov
sub
add
ljmp
dec
push
std
sbbb
xchg
jno
arpl
fs
es
mov
es
insl
movsb
popa
mov
cmp
and
roll
adc
addr16
mov
or
sbb
or
mov
andb
sub
out
js
pop
mov
or
and
and
jl
jno
inc
xor
adc
sbb
jl
dec
or
jne
std
imul
mov
pop
divb
push
lds
bound
cmc
insb
insb
mov
lds
repz
lea
gs
ficoms
jno
in
jne
xchg
lea
dec
aaa
pop
mov
cmp
xchg
mov
out
pop
xor
push
call
xchg
sub
xchg
imul
lcall
flds
sub
je
inc
mov
in
cmp
sub
int3
xchg
sub
orl
push
sub
cld
push
out
mov
imul
cmp
dec
repnz
adc
call
cltd
out
ret
or
jmp
push
push
ret
bound
inc
adc
and
fisubrl
dec
mov
popa
dec
fisttpll
sbb
or
adc
imull
outsb
sar
mov
fdivrl
test
mov
mov
mov
cmpsb
daa
xchg
jge
lret
adc
outsb
and
inc
imull
gs
add
sarl
push
xchg
lods
mov
dec
or
xchg
nop
shl
negl
xchg
dec
cmp
mov
repz
xor
divl
pop
fdivp
popa
cmpsl
in
dec
sbb
mov
sub
cwtl
sub
cmpsb
sbb
mov
scas
fs
fimull
ljmp
js
add
xchg
test
lock
test
movsl
dec
sbb
in
and
xlat
xor
out
stos
sub
and
mov
aas
popa
pop
icebp
icebp
inc
push
in
mov
jno
sbb
inc
outsl
xor
push
dec
popf
int
dec
lods
xor
das
stc
or
push
iret
ss
dec
test
fisubrs
ror
cmpsl
or
int
addr16
sarb
rorb
ret
mov
sub
inc
stos
xchg
shll
das
xor
push
cs
sub
pop
add
icebp
rcl
mov
xchg
outsl
daa
mov
add
in
cli
cmpsb
or
hlt
ja
dec
pop
dec
idiv
mov
jno
push
fists
mov
cmp
scas
iret
insb
or
mov
std
gs
inc
sub
pop
mov
push
in
cmp
shl
stc
xchg
rorl
hlt
pop
das
sub
xor
cmp
sub
jns
fstl
push
add
or
cltd
mov
rorb
sarb
sti
dec
pushl
jmp
adc
enter
ja
ret
popa
sbb
aam
sahf
outsl
cmp
pop
push
cli
pop
adc
xor
imulb
fists
push
or
sbb
shll
inc
xchg
clc
jmp
clc
jmp
gs
mov
cmp
mov
test
xchg
std
xchg
mov
in
pop
or
fcomps
xchg
pop
push
insb
int3
lods
ljmp
outsb
jg
inc
adc
xor
fisubs
jno
mov
xor
outsb
imul
addr16
dec
adc
mov
sbb
in
out
gs
into
sar
outsb
dec
mov
mov
mov
pop
movsb
call
dec
and
jne
icebp
xchg
movsb
push
sub
or
push
push
pop
xchg
pop
xor
push
push
shll
dec
ret
xchg
or
out
sub
lea
insl
in
dec
ss
call
les
push
sub
ja
repz
sub
ss
outsb
daa
cwtl
mov
xor
jmp
scas
cli
or
stos
adc
mov
cmp
mov
incl
jle
hlt
es
je
and
test
lods
outsb
fndisi(8087
pushf
lods
sbb
sub
pop
and
and
sbb
test
cmp
mov
movsl
gs
aam
dec
mov
mov
jns
jno
fsubrs
push
fs
fistpl
and
jno
dec
loop
mov
jmp
dec
aad
xchg
dec
inc
xchg
out
xor
clc
icebp
roll
cmp
dec
sbbb
jne
adcb
movsb
xor
push
call
push
cld
aam
mov
rorl
pop
fbld
lods
addb
adc
repnz
in
mov
jns
push
cs
jb
inc
or
xchg
int
adcb
mov
cmp
lret
xchg
pop
outsl
adc
push
push
mov
push
or
inc
mov
dec
xchg
lcallw
cmpsb
xchg
xchg
mov
lahf
fwait
outsl
lea
jae
dec
movsl
ds
pop
mov
aam
jle
jmp
daa
imul
rorb
xor
into
das
jne
ret
pop
lock
adc
add
and
sub
sub
add
test
xchg
sub
bound
sti
loope
push
inc
mov
mov
mov
adc
adc
loope
or
scas
sbb
xlat
in
push
pop
jmp
ljmp
ret
add
mov
xlat
arpl
sbb
pop
mov
ret
repz
adc
scas
jns
mov
push
pop
inc
adc
rorb
addb
sub
push
xchg
or
sub
sbb
jecxz
in
mov
test
stc
lcall
dec
insl
stc
sarl
xlat
fdivrl
inc
sbb
inc
rcl
das
addb
lock
fldt
jmp
inc
jnp
fimuls
stos
daa
mov
jnp
outsl
add
add
mov
int
inc
js
add
lahf
call
fsub
jae
sbb
mov
push
push
lcall
cmp
pop
lock
push
jle
xchg
dec
sbb
out
dec
sbb
hlt
dec
jno
pop
mov
xor
cmp
pop
inc
fs
sbb
stos
pop
sub
push
pop
movsb
cld
mov
pop
dec
into
lret
aaa
bound
add
jnp
adc
stos
cmc
mov
repnz
fcompl
test
push
sbb
mov
jne
pop
popf
ja
popf
cmp
call
pop
dec
fwait
ret
xor
mov
pop
clc
clc
pop
repnz
movsb
push
jne
inc
testb
xchg
loop
stos
out
add
test
pop
mov
mov
and
inc
scas
loop
jle
xor
add
arpl
pop
insl
mov
xor
or
adc
push
dec
add
popa
mov
sbb
mov
xor
ret
pushf
stos
aas
insb
mov
icebp
and
push
call
in
leave
jg
mov
shrb
pop
shl
dec
in
mov
les
pop
add
xor
cmc
mov
mov
sub
mov
fwait
in
mov
xchg
push
notl
jns
pop
popa
fisubrl
outsl
pop
pop
push
dec
xchg
push
inc
mov
push
cmpsl
enter
lds
dec
loopne
mov
adc
aaa
sbb
outsb
cmc
dec
sbb
mov
inc
dec
data16
pushf
movsb
add
push
fcomps
inc
testb
sub
dec
push
adc
adc
xor
fcomip
cmp
sti
imul
mov
xor
sar
rolb
dec
xchg
outsl
cmpsb
daa
cld
test
dec
mov
push
pop
icebp
sbb
mov
aad
xor
std
imul
aas
cli
sub
std
sub
jae
aam
inc
scas
fwait
scas
xchg
imulb
sbb
pop
stos
cmp
cmp
aad
fimull
repnz
in
or
or
or
mov
jo
rolb
test
jb
mov
imul
lret
pop
mov
cwtl
movsb
sti
shlb
mov
ljmp
test
std
inc
adc
das
pop
jp
dec
and
or
jns
or
dec
out
out
push
dec
mov
xor
arpl
mov
ljmp
das
or
xor
ror
sbb
adc
insb
std
popaw
sub
addr16
in
jp
dec
add
push
push
insb
sub
stc
stos
mov
sbb
cwtl
int
pop
mov
xchg
pop
or
test
sbb
xchg
lahf
adc
inc
and
mov
mov
dec
mov
pushw
jb
jbe
aas
jg
js
ljmp
or
jb
pop
daa
or
fsts
test
out
out
les
dec
rcl
movsl
xchg
push
lods
mov
and
cli
fildl
scas
lret
adcl
in
arpl
inc
stc
sti
add
or
movsb
and
add
mov
js
xor
or
fbstp
push
mov
mov
inc
out
ja
add
cs
push
dec
fldenv
pop
cmpb
push
jge
pop
pop
call
es
adcb
pop
inc
cmp
adc
pop
popa
fstp
mov
lock
xchg
push
pop
mov
push
lock
adc
leave
mov
sti
pop
insb
cmp
jge
dec
jb
mov
xor
fwait
xchg
jp
mov
ljmp
scas
push
sub
fcmovne
lret
lcall
inc
lret
xchg
xchg
lahf
xchg
jl
mov
xor
or
sub
popf
inc
ret
lahf
call
ficoml
pop
and
outsl
sbb
sub
dec
dec
sub
sub
cmp
enter
out
mov
dec
xor
mov
and
psrlw
pusha
and
xor
adc
ret
dec
ds
repnz
add
into
sbb
mov
lock
xor
in
jle
aam
cli
xor
cmpsl
push
mov
sub
cwtl
hlt
mov
pop
cli
loopne
push
xor
lahf
std
dec
cmc
outsb
adc
test
add
jns
sbb
into
pop
lcall
push
mov
cmp
call
xchg
pop
test
loope
add
push
xchg
mov
push
iret
idivl
mov
mov
push
adc
repnz
add
add
mov
inc
xor
and
push
movsl
inc
setge
jns
pop
int3
call
dec
adc
aas
push
and
test
jp
xchg
push
jns
cmpl
lods
xchg
and
and
loope
mov
cs
cmp
push
aad
shrl
sub
mov
arpl
xor
inc
lds
fld
lahf
push
mov
pop
out
sub
pop
inc
pop
out
in
pop
add
pop
cmp
loopne
fcoml
cmp
inc
fs
scas
inc
dec
cmp
movsl
mov
scas
ss
mov
inc
sbb
dec
xchg
jl
jp,pt
mov
ljmp
and
mov
lods
push
jbe
popa
and
sbb
stc
imul
mov
pop
out
pop
lret
pusha
sbb
aad
inc
lock
xchg
push
loop
mov
popa
lds
or
leave
daa
in
pop
in
in
mov
fidivl
insb
push
stos
outsb
dec
pop
in
add
or
cmp
ds
fwait
cs
or
push
pusha
adcl
jne
push
aas
cltd
dec
add
dec
rclb
sbb
test
scas
sub
scas
lods
mov
notl
jo
sbb
xor
dec
pop
lods
xchg
pusha
sahf
mov
xor
jae
rolb
mov
dec
sbb
or
add
xor
sarb
add
rcr
pusha
mov
or
inc
fwait
lds
das
lds
lods
les
in
pop
inc
dec
out
add
add
call
xor
shrb
out
ret
xor
cli
and
add
cmpsb
data16
fcompl
rclb
mov
sub
stos
mov
mov
in
mov
lret
and
sub
rcll
loope
lahf
jae
xor
mov
xlat
jle
ljmp
aas
out
into
inc
and
fnsave
mov
jne
outsb
insl
mov
mov
or
das
outsl
jecxz
and
pop
ljmp
sahf
test
rcl
arpl
xchg
jle
add
cltd
cltd
inc
fcmovu
call
lahf
cmp
insb
sub
dec
lock
cmc
mov
cmp
cmpsb
mov
add
xlat
inc
sub
mov
and
loope
pop
iret
xlat
cmp
adc
in
push
push
sub
push
inc
xor
cmc
fidivrl
push
aad
les
mov
or
mov
jmp
out
orl
and
mov
stc
in
out
out
iret
sbb
addr16
std
mov
loop
mov
fisubs
dec
pop
andb
dec
iret
sub
fbld
dec
mov
mov
sbbb
out
into
sti
and
testl
je
jno
in
scas
pop
or
loope
jb
pop
nop
cltd
and
loop
das
pop
aam
ss
sbb
ja
dec
stos
xlat
movsb
enter
sahf
enter
dec
mov
push
gs
fistl
enter
fistpl
jae
xor
fbstp
mov
mov
mov
adc
iret
inc
jb
xor
lret
aaa
adc
push
lea
jo
pop
inc
aam
ret
xor
adc
cmp
arpl
jno
fnsave
shlb
jns
and
movsb
fidivrs
dec
xchg
push
popf
xchg
aam
mov
test
in
enter
sbb
je
push
outsb
xor
mov
jmp
dec
in
insl
jbe
mov
ljmp
mov
sub
mov
mov
insb
adc
push
jg
sbb
arpl
dec
int3
add
xor
dec
sbb
mov
inc
leave
sub
mov
push
in
cmp
imul
lahf
pop
adc
in
or
xor
mov
test
lea
xchg
xor
adc
push
pushf
psllw
pop
outsl
loope
sub
mov
testb
in
adc
cmp
mov
adc
ljmp
subl
loope
ja
ret
loope
cwtl
dec
incb
xor
cmpsb
int
dec
int
xchg
sbb
mov
mov
adc
movsl
lea
add
xchg
pop
out
cmp
iret
xor
stc
xchg
or
jl
or
jns
pop
jb
rclb
dec
jmp
sbb
call
add
in
cmc
push
in
mov
inc
dec
in
mov
imul
imul
loopne
loop
and
in
mov
adc
shrb
shll
cmp
bound
dec
test
mov
push
daa
and
insl
test
test
scas
dec
adc
push
int3
mov
out
mov
add
pop
jns
pop
mov
cmc
fptan
fwait
test
std
mov
sahf
xor
push
dec
push
jae
int
fcmovb
mov
sahf
mov
and
test
ljmp
stc
dec
jl
cmp
out
inc
inc
xchg
pop
push
add
sbb
lahf
and
mov
lahf
imul
inc
cmp
imulb
scas
cwtl
decl
xchg
or
add
ljmp
cmpsb
fisttpll
dec
frstor
outsb
fs
or
sarl
fsubrs
jg
dec
mov
add
mov
imul
and
sbb
shl
inc
sub
pop
roll
jl
pxor
mov
cs
cmovge
call
int3
andl
push
xchg
lcall
sub
xor
in
loop
jbe
clc
test
sub
xor
repnz
int3
mov
dec
call
lods
jge
xchg
test
or
push
cmp
fisttps
or
in
cmp
sbb
inc
mov
push
fistpll
test
adc
mov
push
mov
imul
pop
xor
arpl
fcoml
mov
es
dec
mov
xor
mov
sbb
gs
jmp
iret
fadds
stos
js
pop
int
mulb
mov
icebp
pop
shll
sti
push
cmp
dec
or
das
fsubrl
push
xchg
jge
inc
fisubl
sub
fsubrl
lret
out
and
aaa
jmp
orl
lahf
mov
cltd
jae
pop
mov
movsb
loope
push
sti
dec
ds
cmc
stos
cltd
daa
mov
xlat
add
add
or
das
in
inc
nop
dec
pop
sub
add
pop
imul
bound
inc
mov
scas
push
cmpsb
inc
add
sub
pop
lock
add
pushf
push
adc
shll
lahf
and
push
inc
xchg
out
loopne
mov
mov
or
inc
jne
test
ret
stc
mov
sub
push
out
cltd
sub
jmp
xchg
add
add
xor
movsb
push
sarb
mov
fcoms
adc
lods
and
jb
push
adc
and
jecxz
repnz
into
daa
adc
xchg
mov
sbb
testl
push
jns
xor
lcall
adc
test
arpl
mov
jno
sbb
jmp
jl
data16
fistpl
xchg
push
dec
mov
inc
push
lds
scas
movsb
fs
sub
jne
sub
xor
adc
imul
out
cld
fdivrs
dec
repz
repz
lea
test
jne
push
stc
xor
jge
sub
push
pushf
fisttpl
cmp
pop
xor
or
unpckhps
shl
pop
xor
xchg
out
add
into
add
and
pop
cmp
xor
and
or
test
pop
push
loop
pop
pop
and
adc
stc
mov
mov
xor
enter
jmp
push
fisttpll
imull
and
shlb
icebp
push
pop
xor
scas
push
es
pop
xchg
cmp
and
and
pop
push
lret
dec
xor
inc
mov
sbb
xor
add
dec
das
sar
add
in
sahf
fistpl
jne
rcrb
mov
adc
pop
das
stos
test
imul
aad
push
and
je
sub
sub
mov
sbb
adc
xchg
mov
aam
daa
and
sub
cli
mov
and
mov
xchg
jmp
push
les
mov
cmpsb
aaa
imul
mov
ss
movl
add
dec
pop
xchg
in
lret
dec
ffree
lds
add
es
mov
ror
adc
sti
sub
cmp
xchg
and
cmp
mov
fs
addr16
and
scas
call
rorb
in
stc
push
cltd
je
clc
incb
cwtl
aaa
sbb
jne
sub
jns
in
loopne
jl
sub
xor
cmc
cmc
icebp
mov
jmpw
push
push
and
push
faddl
pusha
push
lods
outsb
mov
adc
cmp
dec
push
rcrb
outsl
mov
inc
xchg
jmp
jle
pop
rcl
movsl
arpl
jne
repz
out
dec
and
stos
adc
mov
xor
adc
mov
scas
repz
xchg
sbb
sbb
repnz
xor
mov
jo
jmp
pop
jae
xlat
aaa
lar
mov
sbb
fnstcw
or
lahf
movsb
sbb
xor
mov
mov
mov
xchg
fucomip
js
add
mov
loopne
and
jmp
xchg
cwtl
xchg
out
push
call
sub
jecxz
xlat
xchg
cmp
fidivl
pop
jns
js
and
imul
mov
je
std
fiadds
lods
shl
mov
mov
in
xchg
fwait
xor
fnstcw
adc
out
pop
sbb
lea
or
fs
ret
shlb
cmp
fstps
bound
leave
dec
mulb
imul
xchg
es
out
loopne
mov
inc
add
movsb
roll
repnz
leave
sub
neg
xchg
mov
fmull
and
xor
je
mov
ds
repz
jl
ljmp
pushf
jo
cs
pop
scas
inc
inc
mov
cltd
sti
xchg
cs
shlb
push
rorl
hlt
das
orl
test
add
dec
jo
jnp
imul
icebp
cmp
rcll
repnz
inc
xchg
push
add
sub
shr
dec
sub
ret
pop
sub
xchg
cmp
ret
push
sbb
inc
pop
cmp
jno
or
icebp
sub
cmp
test
lods
cmpsl
inc
mov
loop
adc
fsubrs
add
push
push
and
shr
les
push
adc
incl
sub
mov
stc
mov
ds
insl
in
sub
mov
cli
pop
gs
mov
lods
icebp
out
cmpl
out
cmp
mov
jecxz
pop
insl
js
jg
dec
push
inc
jae
fnsetpm(287
ret
mov
cmp
push
dec
inc
subl
xchg
aas
push
add
mov
add
ds
iret
divb
scas
sub
orb
pop
std
mov
jecxz
aam
fisubrl
dec
jl
push
in
mov
jb
inc
sbb
loope,pt
test
add
scas
dec
insb
xor
int3
nop
mov
hlt
xchg
mov
push
out
shrl
cmpsl
xor
jecxz
outsl
mov
inc
add
idivb
jg
pop
pop
ss
aaa
mov
cli
rclb
jno
jno
in
xchg
dec
jmp
push
hlt
push
jno
out
ds
xor
cmp
or
mov
inc
sub
jmp
std
or
sub
adc
mov
scas
push
mov
push
test
inc
dec
push
or
cwtl
loopne
push
cmpl
jb
dec
add
or
cld
mov
sub
pop
sarl
fldz
pop
xchg
xor
lock
mov
push
jo
out
popl
out
orb
pop
xchg
int3
pop
push
mov
sti
lret
adc
cmpsl
popf
push
test
cmp
push
mov
add
loope
jg
push
aas
je
mov
in
or
mov
shlb
xor
icebp
iret
les
xor
xor
lret
mov
jle
outsl
cmp
cmpsl
mov
or
inc
outsb
loop
test
mov
push
cmp
or
pop
or
pusha
push
pop
lret
xchg
sub
test
imul
sahf
mov
or
testb
enter
lcall
inc
xchg
pop
stc
sar
sub
mov
lods
or
repz
push
mov
pusha
jg
cmp
into
daa
sbb
inc
ja
scas
xchg
push
sbb
or
repnz
mov
dec
adc
test
sub
mov
push
cli
jge
shrl
sti
push
sub
je
sarb
bound
add
cwtl
adc
sub
jns
sub
mov
iret
and
mov
inc
test
lahf
shlb
shll
or
adc
aam
ds
adc
das
sti
inc
jbe
rclb
sbb
mov
xor
mov
lods
cwtl
fildl
xlat
add
sarl
sbb
and
rorb
scas
out
outsb
lods
movsb
xchg
movsb
test
lcall
mov
xor
xor
dec
test
in
arpl
ds
sahf
rcrb
push
jb
jb
cltd
mov
or
dec
shl
and
sub
iret
loop
bound
outsl
or
mov
inc
fistpl
jno
and
movsl
shrb
jno
jb
ficoms
int3
inc
sti
test
stos
je
sub
iret
jg
out
pop
pop
mov
xchg
inc
adc
in
test
jl
cltd
mov
dec
cmpsb
mov
lock
mov
mov
clc
push
or
mov
loopne
call
cmpsl
jbe
cli
pop
sub
adc
outsl
fidivs
addr16
push
sbb
aaa
dec
pop
cmp
dec
call
add
add
push
inc
xor
insl
fisttpll
mov
or
xchg
adc
icebp
push
sub
out
pop
hlt
je
repnz
shl
push
rcll
nop
jmp
xlat
sub
jno
cmp
loopne
cmp
push
sbb
fstps
xor
int3
movsl
hlt
popf
xor
adc
pop
sti
inc
repz
push
aas
movsl
xchg
je
add
daa
xchg
in
inc
sbb
fcoml
or
inc
fsubs
hlt
shll
cmp
testl
add
pop
and
ficomps
mov
lods
mov
mov
cmp
mov
mov
mov
xor
push
xchg
mov
sti
cmp
inc
outsb
and
out
mov
dec
dec
movsb
pop
or
repz
xchg
lahf
adcb
outsb
sub
push
dec
xchg
faddp
aad
lret
loopne
cmp
or
out
pop
sbb
lock
pushf
sti
or
push
sub
xchg
add
jmp
mov
adc
pop
enter
gs
add
sbb
lret
or
inc
cmp
mov
dec
test
js
inc
or
ror
inc
or
lea
adc
decl
lock
enter
ret
xchg
push
mov
imul
int
loop
aas
andb
sarb
xchg
sbb
fwait
cmpsl
lea
gs
and
das
sub
ficomps
pop
les
mov
xchg
pop
mov
inc
enter
pop
rolb
add
imul
adc
loopne
aam
lock
xchg
mov
cmp
adc
push
ss
stos
arpl
push
inc
call
jns
adc
lret
xchg
fwait
jns
mov
out
mov
pop
por
or
dec
mov
push
cwtl
xlat
sbb
dec
push
je
in
jae
and
ret
cmp
je
xchg
add
fs
sbb
and
adc
xchg
xchg
or
loopne
rolb
push
enter
int
or
aam
cmp
jg
or
mov
nop
cmpsb
fmuls
and
addl
cwtl
and
pushf
pop
push
cs
pop
ret
sbb
js
mov
mov
js
leave
js
sti
sub
shll
test
mov
push
xchg
jb
cmp
sbb
aas
push
push
in
mov
loopne
or
lret
fbld
xlat
jmp
js
fsubrs
xor
in
notb
aaa
mov
xchg
push
or
push
mov
lret
sarl
xchg
loopne
adc
xor
inc
mov
dec
push
mov
aad
and
lods
cmp
inc
xchg
sub
inc
pop
std
sbb
jp
fidivs
mov
xor
daa
and
bound
sbb
dec
adc
aas
sub
mov
push
jbe
push
sbb
ss
mov
jge
pop
jne
mov
dec
jnp
shl
jle
out
rorl
mov
cmpsb
add
xchg
mov
jno
cwtl
mov
idivb
dec
sub
sub
in
push
filds
scas
pop
and
cmpl
movsl
or
fimull
in
inc
jbe
adc
mov
sahf
pop
sbb
jge
aad
xchg
je
cmp
mov
lds
int
lret
insb
cmp
sbb
mov
fdivr
lock
pop
jmp
leave
sbb
fidivrl
mov
xlat
xlat
jmp
js
mov
mov
lods
arpl
and
sub
jle
adc
cmp
int
movsl
arpl
or
lea
daa
cmpsb
mov
stos
cmp
cs
push
cmpsl
mov
out
loop
push
gs
or
xor
aaa
data16
xchg
cmp
insb
push
lds
adc
fists
adcl
xor
ljmp
xchg
adc
inc
lock
ljmp
in
fisttpl
pushl
and
sbb
cwtl
sbb
sti
sub
adc
adc
into
test
cltd
rclb
jmp
rep
mov
icebp
scas
mov
pop
and
lea
loop
pop
and
add
lods
and
add
cmp
add
loop
mov
sub
shr
xchg
es
push
mov
sub
inc
out
sbb
adc
sub
scas
outsb
xor
in
stos
mov
add
or
mov
pusha
je
loope
ja
and
mov
je
pop
push
sub
push
dec
jg
dec
jnp
jo
cld
jae
jb
out
ret
test
addr16
test
out
lock
stos
popa
xor
pop
scas
ret
out
pusha
outsl
jl
loope
in
and
cmp
jae
fdivl
pop
cmp
xor
and
mov
xchg
arpl
lods
jae
dec
or
scas
sbbb
ss
nop
jb
pop
jae
dec
cmpsl
mov
test
xchg
mov
sub
mov
dec
mov
xchg
dec
shll
mov
aam
sarl
int
call
push
push
mov
xor
inc
xor
addr16
or
pop
in
ficomps
aad
sbbl
movsb
fldcw
shufps
adc
mov
push
les
popf
mul
icebp
dec
test
lahf
or
mov
inc
lahf
jae
dec
sahf
jnp
das
sbb
jne
mov
inc
jnp
pop
lods
jmp
xchg
jae
insl
adc
mov
cwtl
or
sub
xor
outsb
test
jno
mov
mov
jns
mov
ret
add
daa
or
pop
pop
ljmp
insb
add
mov
or
cmp
ja
jbe
jl
xor
cmpsb
insb
or
cmovae
xor
lcall
call
push
pop
mov
cltd
rcll
jge
or
sbb
jp
xchg
bnd
cmp
and
popa
jb
cmp
or
pop
int
push
jb
mov
mov
and
dec
sti
pop
jge
inc
or
add
pushf
repnz
shl
ret
push
lock
dec
test
clc
jns
dec
sbb
shlb
aad
mov
mov
jle
push
out
nop
jbe
das
mov
jp
neg
ja
mulb
aam
push
xor
mov
or
fnsave
sub
pop
sbb
in
ljmp
jl
cmpsl
pusha
sbb
xor
inc
incb
ja
outsb
hlt
sarl
mov
das
cmp
repz
fneni(8087
cltd
stc
fnsave
test
in
aam
inc
fxch
je
insb
pop
xchg
mov
std
xchg
movsb
fs
jmp
sub
mov
addl
sub
das
mov
and
daa
xchg
push
mov
and
inc
icebp
lea
std
push
xor
sbb
lret
pop
cmp
ss
jmp
aam
rcrb
pop
or
mov
fidivs
cs
and
repnz
cli
lock
test
pop
mov
fdivp
xchg
mov
ffreep
add
icebp
in
and
test
mov
cwtl
inc
sub
mov
jns
sub
jecxz
xchg
repz
add
pop
test
lahf
sahf
mov
std
jnp
mov
ss
ds
aam
cmpsl
sbb
test
ss
lret
sub
dec
pop
out
pop
adc
push
fistpll
dec
scas
cmp
cmp
lcall
pop
cmp
cmpb
imul
ss
lahf
mov
sar
rol
jl
lcall
xor
stc
xlat
xchg
lock
pop
shll
stc
movsb
int
out
pop
imul
or
jp
sub
add
mov
arpl
insl
and
pop
dec
call
leave
adc
int
ror
jo
clc
sub
js
xor
inc
shlb
push
ja
mov
fbld
sbb
sahf
clc
jg
jb
idivl
scas
add
sub
arpl
pop
sub
fnstcw
cmc
jmp
pop
dec
inc
pop
fisttpl
sbb
mov
push
adc
inc
std
arpl
sub
movsl
push
rcrl
adc
cmp
xor
pop
iret
mov
inc
shl
aam
mov
or
psrad
loopne
test
icebp
and
divb
jl
xchg
add
in
enter
add
pop
pop
jp
outsl
test
or
icebp
in
pop
dec
ds
push
imul
sbb
xchg
mov
ljmp
bound
cmp
mov
sahf
mov
mov
mov
mov
sbb
sbb
lods
xor
int3
xchg
mov
ja
imul
sbb
ds
jg
cmp
je
lds
mov
or
adc
xor
movsl
iret
jmp
pop
fisttps
and
sbb
rcrb
mov
jbe,pn
subb
ss
lcall
cmp
shl
sub
std
ds
jbe
rcrb
mov
and
arpl
in
add
jmp
sbb
push
and
cli
outsb
in
sbbl
fs
popf
dec
jb
cmc
push
dec
jb
repnz
dec
adc
rcll
fisubs
loope
jnp
test
and
int
jp
sbb
jmp
cli
in
outsb
popf
fs
dec
jnp
packsswb
leave
fs
scas
push
sti
mov
lods
mov
inc
or
inc
jo
daa
mov
xlat
inc
arpl
pusha
add
sti
xor
aas
mov
test
mov
popw
lock
insb
out
jo
xchg
cmpsl
mov
ficoml
inc
or
and
aaa
mov
into
daa
cmp
ljmp
fidivrl
ds
cld
mov
fstps
stc
es
cmp
and
push
sti
sbb
xchg
and
in
pop
int3
mov
std
nop
imul
cli
out
in
xor
imul
dec
add
mov
lock
mov
lahf
sub
popa
adc
lds
cmpsb
xchg
loope
int3
cwtl
jmp
add
icebp
jle
dec
dec
xchg
jne
pop
jmp
or
int
pop
add
stc
arpl
dec
add
push
mov
mov
push
in
nop
sub
mov
mov
cld
push
movsl
mov
cmp
sub
adc
cmpsl
es
pop
push
sbb
ret
mov
arpl
sub
and
fwait
stos
lret
xchg
das
dec
lods
rolb
aas
jns
jno
mul
dec
es
pusha
pushf
pop
ficompl
sbb
cs
or
dec
or
sub
pop
sbb
mov
incb
mov
cwtl
and
loop
fdivr
clc
jmp
sub
out
fmull
leave
add
mov
ljmp
in
adc
xchg
mov
cmp
sbb
sarl
into
dec
mov
pusha
cmp
xor
xor
mov
push
sub
mov
ret
sub
lcall
adc
incb
imul
clc
and
xor
jo
fbstp
sbb
mov
pop
lea
gs
ja
or
clc
push
add
test
or
mov
fcmove
loop
sti
loopne
jge
shlb
jns
shrl
mov
ret
pop
xor
jno
cld
roll
mov
test
jecxz
sti
dec
arpl
xchg
call
sbb
fdivrl
cltd
push
mov
rcrb
push
std
adc
add
inc
sti
scas
subb
mov
fisubl
jg
daa
sbb
xchg
nop
push
xor
mov
push
jne
ja
inc
jno
cwtl
lds
ja
mov
inc
insb
enter
push
and
mov
sbb
sbb
iret
out
push
cwtl
adc
int
inc
inc
adc
cs
std
mov
push
mov
xchg
je
lods
jbe
push
fidivrl
lods
adc
pop
mov
ss
aaa
inc
in
mov
sbb
dec
clc
movsb
sbbb
cmp
jb
sub
xchg
jle
stc
icebp
push
sbb
jo
inc
xchg
or
cltd
outsl
jbe
out
fwait
push
inc
adc
int3
xchg
and
cwtl
shlb
aaa
mov
sub
push
cmc
cltd
popa
lods
push
outsl
pop
sub
pusha
inc
ja
ret
addr16
pop
int3
shll
insb
sub
out
aam
jp
leave
and
mov
or
fdivrl
icebp
lahf
enter
mov
lret
xlat
mov
push
lds
jnp
jb
out
lret
out
scas
test
or
lahf
cmp
movsb
les
pusha
dec
dec
mov
adc
jecxz
sti
sub
xor
pop
mov
data16
cmp
lcall
icebp
sbb
fldt
jne
fdivrl
popf
cltd
xchg
sbb
mov
jo
dec
in
add
mov
stc
sahf
sub
xchg
fwait
pop
pop
xchg
in
mov
repz
push
ds
mov
push
cmp
cmp
pop
pavgw
push
or
cmc
ret
or
sub
movsl
xor
out
adc
mov
je
mov
mov
mov
test
add
in
stos
mov
fsts
in
push
xchg
sbb
or
push
es
fldcw
fcom
sar
into
mov
jo
cli
sbb
xchg
xlat
cmpsb
ljmp
pop
mov
lret
mov
pop
fldenv
test
out
cs
pop
sub
push
test
mov
sbb
jl
insb
lret
and
in
dec
adc
lcall
mov
adc
stos
icebp
testl
add
mov
daa
nop
rcrb
movsb
push
mov
outsl
imul
cmpsb
into
daa
int
les
adc
or
mov
add
push
add
fsubs
push
sti
lea
dec
aas
adc
dec
and
iret
es
xchg
lret
addl
movsb
ss
cs
cld
and
mov
imul
sbb
or
or
push
scas
jmp
dec
pusha
mov
dec
out
pop
xor
repz
add
fdivrs
pop
je
subl
inc
jle
xchg
xor
rcr
hlt
daa
stos
into
push
and
gs
ljmp
mov
jno
fs
jns
jle
add
add
jb
out
insb
lret
lock
mov
loope
mov
std
dec
loop
aad
into
roll
test
in
cs
xchg
rcll
mov
dec
jp
rolb
sub
push
add
cmc
cmp
mov
adc
fmuls
aam
add
out
cmp
sub
inc
adc
cmpsb
fwait
bound
pop
inc
jp
sub
les
or
mov
in
icebp
leave
mov
push
insl
rorl
mov
test
jnp
call
jo
push
mov
xchg
loop
mov
jmp
fcoml
imul
lods
sub
add
push
sbb
mov
jnp
leave
xchg
faddl
pop
mov
dec
pop
ret
and
mov
dec
inc
xor
lcall
push
je
mov
sub
lock
xchg
getsec
ds
xor
test
cmp
inc
aaa
xchg
ds
and
jecxz
push
sub
fwait
sbb
push
test
sbb
faddl
dec
je
sbb
xchg
mov
rcrl
inc
andb
inc
std
sub
in
fisubrs
loopne
or
fs
icebp
cltd
fstpt
pop
fstpt
add
mov
cmp
sbb
xor
data16
push
mov
into
loope
mov
xor
mov
mov
mov
pop
popf
sti
xor
add
rcl
mov
jns
and
push
mov
lcall
movsb
inc
js
lahf
adcl
jo
push
pop
push
js
pop
push
lds
push
xchg
inc
insl
stos
scas
xor
test
dec
push
daa
push
add
push
aad
pop
int
add
xor
push
pop
mov
sti
adc
imul
adc
push
arpl
jg
lcall
xchg
xor
mov
dec
lock
repnz
inc
cmp
mov
jp
sub
loop
pop
pop
jl
fists
xor
and
pop
enter
stos
call
sahf
sarb
sub
cmp
mov
mov
jno
rclb
pusha
inc
mov
sbb
into
stos
xlat
jg
aas
popf
arpl
push
jae
sarl
gs
or
pushf
test
sbbl
mov
xchg
mov
ss
ss
test
cwtl
sahf
lret
inc
js
add
stos
les
xchg
jp
mov
pop
push
div
sub
pop
xorl
sub
in
or
mov
in
jg
cmp
in
and
inc
leave
mov
imul
push
in
pop
cmp
sbb
sbb
in
cltd
out
sub
shlb
js
mov
mov
testb
je
flds
cli
push
je
inc
pop
jne
daa
imul
rolb
out
cmc
adcb
repnz
lds
inc
cmpsb
inc
jb
and
sbb
mov
jp
pusha
das
ljmp
push
adc
mov
in
xchg
inc
insl
push
outsl
popf
movsb
cmp
mov
inc
lods
mov
inc
inc
fildl
jecxz
xchg
add
out
cmp
xchg
xchg
jb
movsb
push
sbbb
das
push
and
in
add
sub
jb
mov
sbb
jp
pop
pop
add
jp
pushf
ret
mov
or
iret
mov
flds
mov
xchg
shrd
mov
stos
mov
fwait
sub
xchg
pop
xor
out
pushf
add
pushf
sbb
std
mov
mov
and
mov
jae
sub
std
je
leave
lods
jmp
push
xor
sbbb
mov
xchg
mov
inc
outsb
or
mov
dec
inc
or
notb
leave
mov
mov
add
push
mov
lea
mov
or
ja
out
shl
int
mov
int
xor
lock
xor
lret
inc
and
cmp
pop
lds
jecxz
jbe
sub
sahf
or
fisubrl
adc
aad
stc
lret
pop
cmpsb
cmpsl
adc
cltd
pop
pop
out
cmpsb
inc
mov
inc
lret
mulb
sbb
sti
push
cmp
stos
pop
add
or
add
jl
mov
popf
push
dec
xchg
stos
or
adc
cltd
add
xchg
ss
add
icebp
adc
js
out
shlb
dec
xchg
aaa
dec
incl
enter
pop
dec
jbe
into
jbe
sbb
int3
or
pop
xchg
repz
and
std
xor
dec
ja
jae
subl
repz
pop
push
rorb
sbb
call
jg
xor
jg
mov
enter
inc
sbb
xchg
subb
cmp
stos
pop
ds
das
scas
insb
cmp
ljmp
push
sbb
dec
sahf
cmp
stc
jg
add
insb
mov
push
sbb
test
out
repnz
mov
inc
clc
pop
xorl
insb
or
mov
xchg
push
pop
insl
repnz
aaa
pushf
dec
aas
cltd
fnsave
mov
xchg
sahf
lahf
or
jge
dec
ljmp
ret
lea
xchg
pop
adc
shl
imul
sahf
mov
and
jae
clc
rclb
add
insl
jecxz
lret
mov
nop
pushf
call
cmp
push
mov
loope
cmp
jae
repz
leave
add
test
aam
add
mov
sbb
call
in
sti
pusha
into
inc
aam
cmpsb
cmpb
jnp
imul
and
mov
fsubrl
sbb
lea
movsb
mov
dec
sbb
leave
mov
jb
jmp
ss
pop
fdivs
and
pushf
sbb
mov
outsl
std
or
adc
repz
stos
or
idivl
pusha
pop
push
rcrb
pushf
out
aas
xor
push
sub
mov
jecxz
cs
dec
xor
mov
mov
mov
mov
dec
push
arpl
in
int
mov
stos
mov
cmp
sub
or
mov
push
das
xchg
outsl
pushf
push
outsb
mov
inc
cli
or
lahf
out
aad
repnz
dec
or
int
xorl
jg
data16
test
push
nop
daa
inc
inc
adc
imul
test
mov
scas
jg
xorb
into
adc
movsb
loope
aas
insb
dec
fisttpl
push
adc
pop
sub
mov
js
fadd
lds
sub
cmp
loopne
fwait
rol
out
and
sbb
mov
mov
cltd
or
lret
das
pop
aad
insl
aaa
out
cld
out
fsubrs
lea
inc
jno
pop
addr16
mov
mov
scas
xchg
push
jne
fwait
or
bound
adc
fdivl
sti
cmp
push
sbb
sub
test
sarb
out
leave
gs
sbb
ficoms
xchg
mov
jb
cmp
or
imul
insb
cwtl
or
mov
adc
xor
stc
xchg
inc
pop
aad
add
ret
add
int
sti
shlb
into
xor
fdivl
movsl
adc
pause
mov
arpl
fcoml
cli
insl
cld
sub
cwtl
mov
sbb
mov
pop
sbb
xor
pop
xor
and
int
rcrb
lds
push
lds
movb
sarb
pop
call
dec
dec
xchg
mov
and
out
jecxz
sti
loop
jle
xchg
es
jp
icebp
int
push
sub
sti
mov
dec
clc
lds
mov
jns
rclb
add
je
jmp
pop
mov
inc
stc
je
dec
push
cmc
out
mov
cmc
and
lret
repnz
sahf
lock
push
inc
jecxz
xchg
push
fs
push
and
aam
les
push
fnstsw
imul
xor
pop
scas
xor
adc
sbb
into
loopne
jae
push
pop
add
or
jmp
hlt
test
push
push
push
xchg
loopne
ds
and
adc
inc
cmp
push
icebp
mov
in
incb
out
dec
je
push
jne
shrb
xor
fsubs
ret
jge
jnp
mov
or
fstpl
scas
lods
sbb
cli
pushf
iret
fs
adc
sbbb
push
scas
push
jb
dec
mov
xor
dec
insl
adc
es
cmp
mov
adc
outsl
push
pop
addb
cmp
fs
dec
rorl
fstps
into
mov
jmp
gs
mov
into
arpl
push
mov
pop
jl
mov
jle
pop
sub
xchg
push
mov
daa
lcall
test
aam
daa
jmp
sahf
adc
mov
inc
out
fs
sub
mov
cmp
xlat
insb
mov
xchg
icebp
lods
test
aas
lahf
ret
mov
adc
jnp
out
lcall
jne
pop
divl
ret
jl
mov
stos
shrl
sub
adc
icebp
int3
pop
adc
or
loope
stos
push
fbstp
loop
jg
xchg
insl
rcl
mov
mov
adc
and
inc
and
std
mov
or
js
push
test
fsubrl
fdivrs
mov
add
dec
cwtl
push
mov
or
sub
popf
jb
stos
jge
mov
pop
mov
xchg
sub
or
cld
cwtl
add
push
test
hlt
jl
and
dec
flds
dec
test
in
je
xchg
push
test
test
loopne
add
mov
hlt
cltd
rcrl
clc
push
idivb
jmp
lods
lcall
jp
or
adc
or
inc
jp
imul
pop
int
add
adc
ret
pop
add
cwtl
jae
jbe
mov
in
xchg
xor
xorb
cmp
push
outsl
pushf
xchg
mov
ret
icebp
or
adc
push
pop
fmuls
inc
xchg
jge
inc
js
hlt
in
sbb
push
push
jo
outsb
and
mov
xor
pop
faddl
and
sti
stos
dec
test
cmp
out
sahf
ljmp
and
loopne
pop
and
jbe
andb
xchg
sbb
sbb
inc
push
andb
sub
and
mov
stos
sahf
repnz
mov
daa
xor
inc
mov
into
fidivs
aaa
push
cmp
sbb
lret
lret
cmovge
xor
std
lret
xchg
push
dec
cld
ljmp
in
cli
inc
mov
or
push
je
sbbb
and
mov
jecxz
push
dec
in
fadds
xor
int
jo
jmp
mov
fiadds
xchg
fisttps
shlb
push
cmp
test
out
sarl
leave
mov
rcrl
xchg
xchg
fsubl
dec
mov
sbb
jecxz
cmp
push
jnp
rorb
aad
mov
lock
xor
and
xchg
ret
int3
dec
lods
insb
pushf
test
mov
aas
into
notb
push
jbe
push
pop
xor
dec
in
cwtl
pop
add
push
loopne
inc
cmp
fisubs
xor
sbb
mov
repnz
call
jne
and
xor
sbb
ja
sarl
hlt
mov
pop
hlt
push
pop
adc
mov
mov
imul
mov
stc
dec
popa
lea
movsl
ror
sahf
repnz
mov
out
ljmp
movsb
scas
and
push
loop
enter
andl
inc
push
aad
adc
fstps
push
js
les
push
add
sbb
stos
fbld
out
inc
dec
fisttps
mov
xchg
gs
popa
test
mov
dec
mov
mov
sbb
dec
in
mov
fs
jmp
xorl
mov
fidivrs
push
cmc
push
insb
jbe
not
mov
mov
mov
jo
adc
jns
loope
push
mov
lods
jl
ds
arpl
jbe
test
mov
cld
sub
movsl
cmpsb
test
mov
and
and
and
cmp
push
mov
xchg
stc
je
daa
inc
dec
sbb
ficoms
inc
std
cmc
push
lods
scas
jae
mov
xor
gs
rolb
pop
cmp
xor
push
push
leave
iret
inc
pop
jp
cli
aam
adc
scas
xor
jb
and
icebp
bound
test
jg
add
xor
push
xor
cmp
sti
and
fwait
jle
call
sub
loop
xchg
outsb
or
sub
sub
push
xor
cli
push
mov
jb
pop
dec
gs
dec
mov
shll
or
mov
or
rcr
cmpsb
rcrl
into
repz
inc
notl
mov
into
mov
inc
mov
dec
jae
xchg
pop
mov
sub
and
mov
ja
adc
stos
inc
xchg
jmp
xchg
or
jae
push
mov
jb
enter
pop
loope
rorb
jmp
call
pop
mov
iret
adc
push
test
push
lret
andl
pop
out
scas
lret
sub
xorl
pop
xchg
ret
insl
shrb
push
mov
sub
pusha
sbb
in
loop
std
bound
std
cmp
cs
mov
inc
cmp
xchg
sub
jnp
es
mov
mov
lret
cmpsb
lods
lcall
xchg
incb
sbb
mov
loope
rcl
xchg
cwtl
push
ss
sbb
jno
or
jg
pop
push
sqrtps
insb
xchg
sbb
push
cmp
sti
inc
lahf
das
not
ds
stc
das
sub
pop
jge
popa
enter
filds
sub
int
mov
ss
sub
movsb
loop
adc
lds
subb
gs
out
mov
rcll
test
inc
repz
pop
data16
out
aaa
test
xchg
sbb
push
rorb
pushf
mov
lods
dec
loope
lret
jl
pop
mov
aad
push
and
inc
jne
jbe
test
cli
fs
stc
bound
jmp
or
mov
pop
mov
pop
orl
jl
call
sbb
push
xor
xor
call
out
outsl
nop
sbb
ljmp
ja
fdivrs
cli
ret
add
inc
test
add
wrmsr
pop
cltd
jne
jge
sbb
fwait
mov
loopne
xor
mov
adc
outsl
sbb
or
outsb
inc
mov
rcrl
xchg
sbb
out
mov
fcomip
and
jne
movsl
js
inc
lock
sub
mov
xor
mov
mov
fstps
jle
lds
push
xchg
bound
div
mov
jb
cltd
jb
call
sbb
in
sysexit
call
out
mov
mov
mov
inc
pop
ret
sbb
push
and
out
pop
xor
sbb
fdivrl
inc
mov
test
jae
into
addr16
jmp
jl
pop
mov
mov
cmp
mov
test
and
and
jnp
fistpl
outsb
jle
adc
inc
lcall
into
push
mov
push
ja
push
cmp
lods
pop
jecxz
xchg
enter
fadds
mov
push
adc
or
cmp
and
out
aaa
mov
inc
addr16
xchg
inc
jle
ss
dec
mov
jae
mov
jno
mov
cmp
in
daa
or
or
fiaddl
pop
lret
mov
repnz
jle
aas
out
enter
cmp
cmp
pop
fucomp
xlat
out
mov
push
out
mov
dec
mov
ss
lods
out
inc
mov
push
inc
leave
and
notl
jecxz
lahf
mov
push
pop
icebp
push
jno
ret
icebp
adc
ret
and
push
rcrb
movsl
frstor
sub
rcrl
sbb
dec
ljmp
xor
cltd
notl
pop
scas
mov
aam
xchg
imul
call
lret
jae
cs
add
lcall
leave
and
insl
std
mov
rcll
xor
mov
adc
mov
push
dec
insb
xchg
and
cmp
adc
push
imul
fisttps
repnz
test
ret
mov
push
fidivrl
shll
pushf
push
test
sti
sar
test
mov
lret
fadd
push
dec
popa
jl
jg
xchg
and
jp
dec
sub
dec
cmp
imul
fcmovu
push
ja
adc
cmpsb
jmp
fstpl
call
fmul
sbb
jecxz
bound
into
inc
mov
scas
imul
mov
mov
xor
adc
out
test
push
and
xor
xchg
insl
mov
clc
push
mov
cmpsb
fildll
ss
fcompl
int3
outsl
lcall
out
ficoms
cld
pop
pusha
popa
xorl
xchg
rcl
in
inc
xor
aam
cmpsb
jo
out
hlt
pop
in
dec
jmp
std
mov
arpl
xor
fnstcw
test
and
push
imulb
add
or
pop
and
mov
xor
lock
mov
sbb
cmp
add
mov
mov
mov
lea
cwtl
jg
nop
xchg
scas
jne
addr16
popf
adc
dec
cs
out
stos
sub
sbb
lods
jb
mov
and
ja
jne
dec
loope
popf
xor
lea
dec
jle
lahf
or
xchg
xlat
jbe
pop
mov
inc
outsl
fisttpll
outsb
test
clc
enter
mov
sub
mov
clc
xchg
ss
jl
mov
in
add
push
lods
pusha
cli
lcall
shl
mov
pop
icebp
lahf
mov
movsb
scas
mov
es
daa
adc
call
xor
jo
lods
fs
mov
aam
in
xchg
rcrb
jmp
jp
lods
and
cmp
cld
pusha
fldcw
sbb
add
int3
test
mov
push
stos
jecxz
cs
xchg
and
xor
stos
pushf
sub
add
aas
and
hlt
movsb
or
test
push
std
push
leave
aas
push
aam
jmp
rorl
idiv
mov
cmp
sbb
pop
adc
les
add
jp
push
mov
test
mov
test
jns
cli
mov
dec
pop
sub
sbb
jecxz
pushf
fstpl
sbbl
in
mov
mov
jnp
xchg
out
xchg
aaa
fstpt
xor
addr16
dec
call
cmp
enter
scas
and
mov
je
jmp
sarl
aad
js
es
mov
stc
pop
bound
push
xchg
adcb
pop
cmc
in
jae
test
int3
pop
xlat
into
stos
jbe
jno
insl
cmc
and
insl
push
dec
push
into
test
sbb
dec
mull
adc
inc
push
pop
into
loopne
dec
fdivr
sbb
es
stos
dec
lock
frstor
cld
lret
adc
sbb
and
push
push
shrl
fidivrl
mov
mov
ficoml
dec
lods
mov
call
and
push
mov
and
push
lea
add
movsl
jg
xchg
je
mov
push
push
jo
pop
insb
sub
pop
incl
ja
mov
pop
push
pop
mov
fldt
sub
or
ss
xor
mov
dec
imul
loop
rcl
jg
jno
or
jbe
fnclex
push
push
fwait
fs
and
test
daa
leave
outsb
mov
out
jnp
sub
cli
and
aam
xchg
mov
add
data16
sbb
dec
lret
aas
repnz
fldl
popf
adc
fwait
pop
mov
or
jmp
mov
inc
push
jle
in
mov
cmp
jb
fimuls
cmc
adc
inc
sbbl
pop
outsl
jmp
xchg
rclb
xorl
in
loopne
addr16
mov
insb
into
lds
bound
ficomps
xor
push
rcl
sbb
pop
std
pop
vcvtdq2ps
filds
inc
sbb
cmpsb
xor
sub
int3
addr16
test
test
mov
push
dec
cmc
adc
mov
iret
insl
xchg
out
loopne
imul
xchg
lock
mov
faddp
aas
in
pop
and
cmpb
in
lods
xor
enter
dec
adc
pop
clc
push
shlb
orb
push
xchg
mov
dec
xchg
into
or
lcall
and
scas
ret
inc
sti
sub
lcall
insb
cmp
or
adc
iret
aad
xorl
rcll
pop
lods
pop
mov
inc
sub
js
clc
mov
out
pop
cli
mov
inc
pop
xor
aas
fcomp
das
pop
int
arpl
pusha
xor
cmp
rcll
gs
push
mov
pop
jp
cmc
out
loope
mov
loop
test
push
in
xchg
xchg
mov
adc
lods
scas
outsl
enter
fs
nop
mov
stos
fisttpl
loope
sub
repz
shlb
cmp
mov
aas
add
enter
adc
push
out
or
adc
mov
jbe
shll
popf
xor
scas
xor
or
insl
shrl
push
inc
dec
inc
sbb
and
mov
lret
mov
in
mov
lret
pop
icebp
add
sbb
lret
push
arpl
sahf
mov
pop
frstor
dec
sbb
sub
jae
add
pop
filds
adc
outsl
sar
adc
jmp
xor
cmovnp
gs
inc
xor
ljmp
jle
pop
js
add
cld
sbb
lcall
dec
orb
std
jecxz
xor
and
or
in
xchg
cs
shrl
ss
loop
push
dec
push
ret
cmp
inc
aaa
cmpsl
fisubrs
fwait
xchg
sub
xor
cmp
jge
mov
push
xorl
fstl
xchg
sahf
push
cmpsb
test
ljmp
jecxz
int
add
pop
or
and
addr16
mov
es
jno
lds
push
es
arpl
push
ljmp
mov
das
mov
lods
jno
or
pop
and
iret
icebp
jb
out
lds
rcr
hlt
mov
lret
sub
ret
andl
gs
rcll
mov
mov
les
les
and
aam
add
call
fimuls
lods
stos
addr16
sub
insl
adc
inc
adc
lock
cmp
sub
aam
stos
inc
sbb
jnp
mov
push
inc
loop
pop
sti
in
hlt
jg
imul
fsubrl
add
mov
pop
mov
incl
jg
adc
dec
mov
inc
stos
mov
movsl
int3
pop
stc
lock
jne
pop
cmp
mov
fs
push
xor
int
cmp
sbb
fcompl
mov
test
dec
mov
mov
mov
roll
int
and
and
jno
mov
push
hlt
mov
mov
mov
popf
popf
rcr
mov
or
push
mov
xchg
fs
test
enter
mov
inc
arpl
sbb
dec
fnsave
mov
cmp
xor
lret
mov
pop
in
in
xor
and
inc
adc
cli
loopne
pop
jae
adc
pop
das
into
aas
cwtl
push
or
out
jb
test
adc
ljmp
lret
jns
pop
pop
adc
fnstsw
ret
adc
or
mov
mov
mov
inc
cltd
or
fildll
das
in
rep
test
das
xchg
xor
ljmp
pop
aam
add
push
push
mov
adc
or
inc
repz
cmp
pop
fsubs
mov
mov
add
subl
pop
test
lods
adc
or
shlb
sub
or
loope
je
ja
xchg
jns
fs
push
movb
lea
xchg
mov
aad
sub
or
ss
push
fwait
xor
sub
jb
jb
sbb
and
pop
sahf
mov
movsl
or
enter
xchg
add
sbb
and
shl
xchg
or
pop
outsb
inc
inc
sbb
or
inc
add
in
or
test
push
lahf
pop
cwtl
arpl
inc
mov
insl
xchg
cmp
inc
inc
lret
sbb
push
lret
fidivrl
sbb
inc
data16
mov
das
jb
test
popf
leave
sar
andl
cmp
add
sub
mov
xchg
mov
call
fwait
mov
or
mov
stos
push
les
adc
cmp
hlt
into
xor
push
div
pusha
std
push
inc
test
mov
dec
sbb
adc
xchg
lea
push
aam
dec
loopne
push
iret
push
inc
sbb
dec
adc
insl
in
inc
push
mulb
mov
xchg
loope
cli
rorb
mov
testl
movsl
testb
mov
mov
lods
loope
mov
pop
jg
loope
or
dec
sbb
rolb
sahf
movsb
pop
notl
lds
jae
sub
adc
in
insl
xchg
push
dec
std
add
test
jp
imul
add
mov
sbb
cmp
push
outsl
in
ljmp
popf
stos
and
movsl
fsubr
sbb
mov
addr16
in
push
xchg
daa
iret
iret
adc
push
sub
sbb
push
cwtl
lock
mov
roll
rorl
mov
cmp
push
mov
cmp
mov
jb
jle
mov
sbb
hlt
jecxz
ja
jl
or
lret
pop
cmc
mov
ja
movsb
pop
jge
mov
cld
es
mov
in
test
and
add
mov
xchg
cmp
insb
lock
fldcw
aad
mov
iret
xor
fimuls
mov
pop
and
mov
mov
mov
mov
test
and
out
jb
mull
cwtl
ds
or
out
mov
pop
gs
das
ljmp
loop
jmp
add
cwtl
mov
xchg
sub
iret
xor
sbb
mov
in
xchg
ljmp
cmp
sbb
push
sarl
cs
lahf
lret
inc
fldl
jecxz
sbb
pop
adc
daa
or
inc
bound
xchg
mul
inc
fisttpll
pop
dec
lods
or
cmp
mov
into
mov
xchg
jl
popf
pop
and
test
ds
cmp
sbb
push
dec
jb
xchg
jnp
cltd
cmp
or
add
aaa
hlt
sub
cmp
mov
int3
push
xor
pop
xchg
or
mov
shrb
addr16
mov
int
lock
add
pusha
pop
gs
pop
xchg
movl
xchg
fsts
xchg
dec
push
and
mov
loope
add
in
jl
pop
aas
popa
pop
popa
xor
xorb
test
in
je
js
cwtl
sbb
ljmp
adc
mov
xor
cltd
cld
xchg
insl
mov
arpl
lock
rclb
in
mov
in
and
popf
cmp
dec
call
adc
int3
pop
jecxz
add
mov
aad
sarb
inc
adc
add
inc
icebp
mov
cmpsl
jge
push
jecxz
lock
sbb
mov
sbb
and
iret
push
lods
stc
ret
movsl
cltd
into
jg
icebp
fists
mov
ss
scas
sub
mov
sbb
bound
sbb
pop
lds
pop
jecxz
and
js
adc
inc
sub
xor
aas
sub
hlt
dec
ret
cmpxchg
push
sub
insb
push
pusha
lds
sti
fdivrp
mov
movsl
fsts
xlat
rorl
stc
out
orl
jp
iret
insl
xchg
or
loope
mov
sbb
and
shrl
adc
sub
cwtl
push
sub
inc
dec
xor
fs
pop
sbb
pushf
loopne
jo
sbb
jne
inc
adcl
mov
out
xchg
sub
shrb
mov
lods
dec
mov
sub
xlat
or
and
xor
mov
lock
pop
xchg
mov
xchg
mov
jp
cltd
push
push
repnz
enter
mov
pusha
cmp
mov
dec
aas
mov
iret
dec
push
adc
sub
xor
subl
sub
adc
bswap
mov
out
jne
int
xor
pop
push
mov
shll
pop
mov
icebp
imull
andl
rorl
dec
dec
mov
test
imul
movsb
jl
ja
and
insl
mov
lods
adc
mov
push
gs
test
out
fwait
shlb
mov
mov
dec
pop
and
mov
stos
popa
cmp
push
inc
pop
insb
push
inc
lcall
iret
in
ds
in
xchg
xorl
ljmp
xor
mov
in
in
adcl
pop
push
dec
shr
fstl
ja
fcomps
ret
jg
lret
jb
inc
push
ret
push
mov
out
ffree
mov
or
push
movsl
ja
call
fsub
jno
mov
mov
mov
cmp
sub
xchg
inc
rcl
inc
iret
inc
jo
push
xchg
jl
fisttpl
stos
rcrl
aad
loope
jo
or
xor
outsl
mov
pop
cli
push
outsb
bound
rclb
jmp
mov
insb
fsub
adc
sbb
dec
xor
fadds
or
inc
and
xchg
xchg
sbb
enter
imul
mov
mov
dec
lea
ret
retw
pop
push
xchg
push
cmp
adc
mov
mov
gs
aad
ficoml
out
dec
adc
in
jmp
xchg
ret
mov
rolb
mov
fidivrl
inc
test
sbb
cmp
aad
andb
fnstcw
pop
dec
decb
push
mov
lcall
insb
cs
je
sbb
pop
mov
cmp
adc
adc
xchg
jge
fwait
xor
or
cmp
dec
movsl
push
push
fidivrs
xchg
mov
outsl
mov
cs
fs
cmp
fcomps
pop
or
push
outsl
add
ljmp
fiaddl
out
xchg
dec
inc
cmp
lock
imul
clc
jmp
dec
pop
mov
mov
arpl
pop
add
mov
sarl
mov
fs
inc
les
popf
jb
mov
xor
mov
das
sbb
repz
pop
pop
arpl
and
pop
pusha
clc
insb
popf
dec
aad
mov
add
sbb
addr16
dec
adc
push
push
es
xchg
scas
js
sub
shl
jno
les
fst
stos
sub
rcll
push
xchg
aam
mov
sub
mov
add
sahf
cmp
popf
xchg
adc
lods
jl
icebp
pusha
pop
or
inc
pusha
fiadds
jge
fiaddl
fwait
in
inc
or
addr16
xor
aad
xlat
shll
test
insb
popf
jg
js
pop
sbb
cmp
mov
sti
pop
inc
cmp
sahf
rcrl
add
and
shl
pop
out
movsl
xlat
pop
cmp
sbb
lock
dec
xorb
xchg
adc
iret
mov
outsl
cmpsb
clc
sbb
test
arpl
outsl
mov
push
fcompl
push
out
adc
in
rcll
mov
es
cmc
push
sub
and
add
jle
outsb
mov
rep
mov
sahf
cltd
je
sahf
jne
jbe
inc
mov
sub
and
das
movsl
pop
jmp
shll
cmpl
cmp
push
cmpsl
nop
ja
mov
pop
xor
push
lods
sbb
stos
sbb
sub
push
aas
testb
fsubrp
dec
xchg
sub
pop
and
js
mov
int3
cmpsb
sbb
lret
or
inc
movsb
fwait
sub
int
mov
fdivrs
sbb
push
mov
inc
insl
xor
jae
jno
add
loopne
cli
xchg
fld
test
outsl
loopne
sub
xchg
leave
out
pop
mov
lea
adc
leave
pop
ds
mov
dec
cli
jmp
lock
jbe
add
popf
jbe
addr16
add
push
adc
dec
test
mov
mov
pop
mov
in
pop
or
pop
pusha
pop
imul
cli
jb
or
rorl
test
shlb
cmpsb
add
lea
iret
jnp
push
mov
rclb
test
cs
addl
shrl
lods
aaa
lahf
call
adc
xor
pushf
mov
aad
jb
stos
mov
popa
mov
add
leave
mov
mov
repnz
dec
cld
dec
gs
icebp
lret
dec
jecxz
inc
je
in
repz
aas
adc
sub
in
sbb
mov
push
sub
call
je
mov
inc
fldcw
sahf
push
cli
notb
rep
push
fimuls
sbb
gs
sub
cmpsb
jecxz
add
jne
fcoml
aam
jl
xor
mov
ds
mov
inc
mov
andb
lods
scas
cmp
sbb
imul
popf
xchg
popf
xchg
xchg
dec
cmp
popf
cmc
into
gs
addl
int3
push
xchg
xchg
pop
inc
or
movb
shr
pop
cmc
fisubl
pusha
in
dec
and
inc
enter
sbb
sbb
pop
xor
cs
std
xchg
jmp
filds
pop
mov
inc
or
subb
xchg
ss
popl
out
push
mov
loop
xor
into
cmp
mov
aaa
mov
pusha
xchg
out
pop
xchg
imul
and
je
xbegin
sub
xchg
and
xor
je
cmp
ljmp
nop
nop
aad
in
adc
data16
arpl
int
mov
std
cwtl
dec
push
rcrb
dec
pop
inc
fs
filds
movsb
scas
mov
and
sbb
pop
aam
gs
mov
sbb
sbb
adc
rcr
pop
adc
aaa
popa
jb
jp
jbe
rcrb
push
lods
pop
lcall
mulb
or
mov
xor
lods
mov
nop
cmpsb
test
loop
adc
popf
jmp
cld
or
imull
mov
cmp
shrb
adc
jg
jmp
lcall
jae
sbb
in
adc
in
sbb
add
mov
cld
out
xlat
add
inc
adc
push
and
jg
daa
clc
test
insl
mov
out
icebp
movb
mov
mov
push
std
scas
jle
int3
rcll
push
xor
popf
jecxz
aas
adc
xor
xchg
adc
xchg
test
xchg
push
inc
syscall
xchg
in
jg
cmp
test
mov
mov
xorb
push
push
mov
repz
jmp
push
insl
xchg
xchg
xchg
jns
daa
push
sub
inc
push
push
jmp
lahf
xchg
rcl
xorl
jmp
push
and
xor
pop
mov
fsts
xlat
push
movsl
repz
xchg
test
jle
orb
movsl
inc
nop
adc
pop
xchg
mov
rcrb
dec
jle
sti
scas
cli
and
inc
das
movl
stc
stos
popa
movsb
cmp
pushf
sub
aam
scas
stos
movsb
mov
mov
movb
shl
dec
das
into
sbb
andl
cli
mov
fdivl
push
push
cmp
lds
arpl
int3
jl
mov
outsl
jmp
pop
add
mov
lds
mov
jge
fbld
ja
js
insb
scas
sbb
stos
out
sbb
scas
xchg
sub
mov
mov
icebp
movsl
andl
loopne
das
ljmp
inc
mov
fs
cmp
mov
imul
xchg
and
mov
movsl
stc
fdivs
sbb
jbe
std
cld
mov
and
ret
lock
dec
in
mov
pusha
gs
outsb
and
subl
jmp
xchg
movl
sbb
loope
dec
mov
mov
hlt
test
sti
divb
aas
jmp
mov
sub
sub
mov
lods
rorl
dec
cs
scas
pop
pop
push
jbe
cmp
inc
push
addr16
hlt
aas
outsl
dec
jle
pop
test
add
loope
push
cmpsl
xchg
repz
enter
mov
cmpsb
push
adc
idiv
cmp
mov
push
xchg
mov
adc
dec
jl
ret
mov
and
cmp
data16
xchg
arpl
out
in
lret
movsl
sub
xchg
push
cmpsl
jl
notb
notb
cmpsl
mov
sbb
imul
mov
in
dec
daa
or
sub
xchg
inc
push
or
std
add
mov
jge
into
je
or
sbb
xor
and
lea
in
mov
mov
xor
loope
int
sbb
or
and
in
popa
fcmovb
into
loop
push
adc
and
das
cltd
lds
cli
and
cmpl
call
and
das
std
pop
sub
std
mov
jne
stc
mov
dec
push
mov
shll
and
push
push
mov
mov
dec
mov
mov
insl
dec
sahf
jmp
mov
lret
mov
ret
inc
sbbb
mov
jecxz
mov
mov
cli
or
xor
sub
xchg
sbb
fwait
inc
mov
clc
out
cmp
xor
lcall
mov
mov
xchg
arpl
cwtl
and
push
push
jmp
inc
fsubrp
shrl
xor
divl
pop
mov
mov
dec
in
movsb
shrl
adc
xchg
sarb
fimuls
cltd
out
jno
mov
cltd
gs
mov
pusha
jbe
add
adc
lahf
mov
dec
and
int3
mov
andb
xor
pop
je
mov
or
push
repz
bound
cli
shl
call
cmp
jp
jnp
xor
add
cmp
rcrl
stos
clc
cmp
xor
jb
ljmp
test
push
sarl
lcall
ss
ss
xchg
adc
cs
jnp
dec
test
xchg
inc
out
lahf
bound
sbb
push
xchg
andb
mov
arpl
pop
aad
pop
stos
or
fucomi
lcall
mov
ret
scas
xchg
xor
push
lret
pop
dec
mov
sbb
sbb
popa
mov
mov
clc
jnp
pop
jnp
inc
mov
filds
out
imul
insl
insb
test
mov
xlat
and
jge
cmp
inc
es
and
sbb
call
pusha
jl
in
decl
pop
call
jge
mov
pop
cmp
dec
or
mov
push
jo
or
dec
push
iret
shrb
jb
imul
mov
icebp
pop
mov
xchg
xchg
inc
rcll
mov
fcoml
into
pop
lahf
je
mov
xor
sub
fs
cli
push
adc
push
js
pop
mov
enter
cmp
xchg
pusha
push
loop
push
cmp
and
icebp
rorb
inc
inc
push
rorb
rcl
and
daa
adc
lahf
adc
les
inc
add
cmpsb
inc
adc
adc
je
sbb
hlt
cmpsb
fldcw
rcrl
imul
scas
lds
mov
shlb
movsl
and
mov
dec
outsl
mov
fdivrl
add
sub
outsb
roll
movsb
les
vdivss
mov
cmp
sbb
js
stc
xchg
filds
hlt
cmp
push
push
xchg
sbb
jmp
push
dec
mov
cmpb
jnp
std
ret
cmc
mov
popf
mov
mov
out
bswap
mov
sbb
or
xlat
cli
mov
and
cwtl
jmp
mov
xchg
dec
mov
mov
mov
mov
arpl
test
pop
inc
inc
jle
dec
repnz
mov
mov
xor
mov
xchg
sub
add
xchg
addr16
pop
inc
outsb
jmp
cs
sbb
mov
and
xor
loopne
lea
pop
mov
cmc
cmp
bound
stos
mov
xlat
push
inc
sbb
lret
ret
adc
scas
fidivl
fistl
leave
dec
sbb
mov
ja
adc
aam
test
mov
and
lea
in
shll
sub
cmpsl
mov
mov
jnp
mov
cmpsl
js
xor
mov
adc
push
movsl
rorb
lds
and
adc
lods
add
lahf
repnz
xchg
lcall
addr16
mov
mov
add
xor
lods
sub
cmp
ja
test
sbb
jb
mov
into
ja
cmp
lods
pop
lds
daa
fdivl
mov
mov
test
mov
call
inc
stos
cld
or
jne
inc
and
scas
mov
lods
icebp
test
insb
mov
pop
cmpsb
mov
pop
sub
push
test
icebp
sbbb
les
lods
insl
cltd
pop
mov
loope
or
xor
cs
lds
adc
jne
jae
clc
sbb
push
fadds
lret
inc
dec
xchg
jno
cmp
enter
test
jmp
stos
cmp
and
mov
enter
push
push
jmp
inc
icebp
add
pop
xchg
pop
inc
std
ja
mov
xchg
xlat
cmpsl
in
movsb
out
add
imul
pusha
dec
out
jbe
adc
or
lahf
out
xchg
ljmp
insl
xchg
add
adc
enter
xchg
aad
maskmovq
fcmovne
mov
stc
xor
out
lahf
and
test
cli
shl
inc
mov
cmpsb
mov
xor
mov
mov
or
cmc
add
test
xchg
add
lock
lods
jle
lds
lret
jns
je
into
or
dec
jp
out
ds
in
lahf
mov
adc
subl
or
sti
sub
xor
mov
pop
subl
pop
push
testl
dec
mov
lds
into
pop
daa
fs
adc
scas
pop
lahf
lods
push
popa
fldcw
and
cmc
aam
nop
cwtl
sbb
test
shrb
push
je
xchg
inc
out
test
push
bound
xchg
mov
in
jl
in
subl
rcll
jbe
add
sti
cmpsb
or
test
jge
mov
subb
and
addb
or
aaa
packuswb
icebp
inc
divb
xor
lock
lret
movsb
lds
and
mov
out
loop
mov
xchg
js
rcl
divb
pusha
iret
hlt
sbb
dec
or
xor
fs
ret
repnz
es
or
loop
loopne
push
push
movsb
dec
test
loope
adc
sub
das
push
outsl
nop
push
jmp
mov
inc
and
push
cmp
jb
mov
or
aaa
iret
rorb
adc
mov
lcall
loope
fcoml
gs
xchg
pop
pushf
push
mov
jecxz
ljmp
aad
xor
adc
addr16
add
pop
pop
pop
lahf
and
xor
ds
rcll
clc
repz
lock
ret
mov
rorl
cmpsb
mov
jbe
sub
cmp
sub
push
rcll
or
inc
pop
xor
int
xor
mov
add
inc
ljmp
pop
loop
add
sahf
test
mov
fisubs
adc
test
ljmp
mov
es
mov
lods
mov
iret
xchg
inc
cmpsl
xchg
shufps
jp
sub
int
dec
adc
cmp
stos
aaa
repz
xchg
adc
fwait
stos
repz
cmp
xchg
jle
and
fwait
popf
jg
inc
pop
fisubrl
ret
fs
sbb
and
mov
and
test
decb
push
mov
sbb
iret
adc
testl
out
adc
fs
add
dec
idiv
js
inc
cmp
imul
cs
jg
mov
mov
sub
jle
lret
lcall
aam
sub
pop
add
rcr
paddq
pop
and
loope
xchg
ret
ret
push
aad
mov
jmp
out
mov
gs
lock
sarb
xchg
push
loopne
jge
push
fmul
inc
sbb
push
shll
mov
shr
cmpsb
cmpsl
aad
inc
xchg
mov
mov
ja
pop
push
bound
cld
fwait
cmpsl
or
sbb
pop
ficoml
int
ljmp
lret
addr16
inc
ficoms
gs
lea
xor
es
pushl
ficoml
scas
xor
dec
inc
enter
out
sub
mov
push
orl
les
sbb
mov
jge
push
mov
cld
and
call
outsb
mov
push
mov
adcl
or
dec
cmp
jle
fimuls
jbe
add
mov
in
mov
dec
leave
dec
cmp
int
imul
xchg
push
stos
adc
mov
push
push
sub
jo
xor
jne
aaa
pop
movsb
js
cmpsb
jmp
sti
fnstcw
adc
adc
mov
mov
push
in
sbb
cmpl
ss
rcrb
in
stos
xchg
cmpsb
pop
and
in
in
pushf
fcmovnbe
and
ss
xchg
inc
sbb
std
outsb
pop
jmp
cmp
mov
lret
icebp
mov
je
sbb
loopne
lret
out
xchg
push
jae
divl
clc
add
xor
pop
lock
jbe
inc
int3
ffreep
dec
or
out
mov
movl
ja
sub
lret
lock
dec
outsl
jg
dec
jle
das
out
xchg
fs
in
jb
mov
xor
dec
ret
cli
lahf
push
jmp
mov
mov
xlat
mov
jg
sbbb
or
jae
call
rep
push
aam
js
iret
call
xchg
adc
fcmovnb
jecxz
stos
jo
dec
sar
mov
pop
sub
sbb
jbe
sahf
jecxz
cli
shlb
movsb
negl
push
fidivs
and
test
xchg
roll
add
int
pop
adcb
test
xchg
clc
pop
cmp
mov
ja
mov
push
adc
inc
cmp
xor
inc
lods
clc
ret
or
mov
shll
fdivrs
std
or
cmpsb
in
mov
jecxz
out
popa
sbb
xchg
cwtl
loopne
insb
out
cltd
jno
rcrb
xchg
pop
cmp
icebp
jae
sbb
cltd
or
mov
adc
pusha
fistps
mov
lahf
sub
out
cmpsl
js
push
inc
and
aaa
loopne
adc
lods
push
and
cmc
stos
iret
mov
repnz
push
mov
jecxz
xchg
inc
fincstp
jecxz
push
or
fildll
lea
int
sbb
in
dec
mov
clc
in
jmp
xor
cmp
sub
icebp
mov
sti
inc
sub
xchg
xor
cmp
jmp
in
jb
sbb
add
sahf
xor
push
xor
aam
outsb
js
ja
iret
enter
adc
out
je
jmp
icebp
sub
cs
and
aam
sub
ds
inc
frstors
es
aam
les
push
xchg
xor
or
or
jno
push
xchg
fimuls
xchg
dec
popf
notl
mov
shll
out
mov
icebp
jp
xchg
pop
mov
mov
add
sub
inc
push
and
sub
rorl
cmp
cmp
neg
imul
cld
xor
push
xlat
pusha
fs
shrb
lods
push
scas
mov
add
cs
push
or
daa
jbe
jne
dec
inc
inc
stc
jo
and
cs
dec
push
adc
jecxz
arpl
inc
hlt
fldcw
inc
or
mov
jno
and
insb
mov
lret
popf
loope
int3
inc
ds
pop
incb
jge
push
and
sub
jns
stos
clc
icebp
cmp
mov
js
fsts
add
cmp
pop
pop
movb
in
pop
jmp
jp
stos
and
sbb
cs
dec
mov
pop
or
lea
mov
pushf
mov
out
lods
lods
ss
xor
and
push
sub
iret
mov
mov
faddp
sub
fistpl
js
sahf
add
js
mov
push
xchg
insb
cmp
xor
in
pop
inc
imul
or
lahf
shlb
xchg
sahf
aas
lahf
bound
jbe
jle
jno
je
fs
sub
js
cli
imul
fisubrl
inc
sub
roll
inc
cmp
aaa
fcoms
adc
pop
inc
lods
pop
inc
stos
jle
test
or
subb
loop
jae
sbb
pop
sbb
and
jmp
pop
mov
arpl
out
divl
js
lods
loope
lds
pop
sbb
insl
dec
sub
insb
lds
xor
icebp
xchg
cmp
push
or
cmp
in
rclb
mov
mov
icebp
out
lcall
cmpsb
dec
rcr
mov
push
jno
jp
les
test
cmpsb
imul
pop
movsl
pop
and
fdivr
rcrl
fbstp
adc
mov
jp
xchg
or
xchg
pop
cmp
mov
adc
add
fists
and
out
js
aas
add
sub
cmpsl
mov
mov
mov
mov
jmp
pop
out
dec
xchg
jb
lock
bnd
sub
mov
call
lret
sbb
ss
cld
or
stos
jae
mov
sub
xor
adc
dec
mov
mov
imul
mov
xor
lea
das
test
in
inc
push
xor
jmp
gs
xorl
jmp
mov
push
fmull
add
mov
shll
imul
aaa
out
loopne
sub
mov
add
test
int3
add
add
int3
sub
adc
sahf
jg
addr16
mov
push
pop
mov
and
mov
xchg
movsl
into
jbe
iret
sti
add
mov
inc
pusha
jle
lret
xchg
pop
jmp
lods
lods
fidivrs
mov
adc
nop
and
mov
fdivrl
lret
xor
cs
sub
gs
pop
xlat
shr
adc
into
andl
xlat
outsl
or
sbb
push
in
add
jg
pop
dec
mov
cmp
int
fwait
jb
xchg
call
addr16
les
out
roll
or
and
test
sub
lods
sbb
loop
sbbl
and
sbb
inc
push
dec
fstpl
leave
cltd
shll
xchg
adc
mov
jae
fistpl
mov
or
and
aam
cmp
xor
adc
jecxz
sbb
pushf
inc
pop
jno
jl
ret
movsb
push
aam
mov
stos
pop
adcl
mov
fnstcw
cmpsl
and
das
fiadds
jo
inc
inc
clc
cmc
add
jge
aaa
mov
iret
push
dec
icebp
arpl
rol
mov
jnp
xor
push
xorl
or
imulb
movsl
stos
pushf
das
aaa
xor
lea
mov
testb
out
lods
fs
outsb
test
movsw
pop
icebp
and
addr16
jo
pop
mov
outsl
inc
cld
xor
or
scas
movsl
or
lods
and
in
dec
clc
mov
and
insl
jbe
or
call
cwtl
or
in
adc
sub
std
icebp
push
std
imul
test
or
or
fadd
std
xor
daa
inc
into
testb
push
dec
cmp
mov
mov
and
push
jge
mull
scas
add
das
add
jns
and
push
mov
mov
cmp
outsl
push
jp
jae
xchg
cmc
fidivs
outsl
stos
test
es
insl
sarl
sar
pop
and
mov
enter
add
int3
mov
xorb
pop
shlb
out
fdivrp
add
mov
bound
add
pop
out
in
xchg
movsl
sbb
test
mov
inc
mov
mull
ds
mov
inc
es
inc
add
or
mov
cltd
push
scas
push
lret
pop
jo
jecxz
cwtl
ds
and
cmp
imul
xor
jbe,pn
cwtl
lret
and
outsl
inc
aas
inc
aam
cmc
iret
xor
xor
scas
imul
xor
in
aam
movsb
stc
xor
lcall
cmc
pop
shlb
mov
sub
push
rcl
xor
push
faddl
pop
and
add
adc
xchg
mov
in
jmp
pop
adc
dec
mov
jmp
and
mov
mov
push
jp
lds
mov
movsl
push
clc
faddl
test
mov
icebp
jge
sbb
stc
in
mov
mov
dec
sbb
jg
xchg
loopne
mov
es
or
push
icebp
aas
push
cmp
or
dec
xchg
mov
addr16
xchg
jmp
cwtl
inc
sub
in
dec
and
int
jns
aam
les
inc
imul
mov
int
sbb
scas
popf
adc
in
push
mov
jl
xchg
insl
int
test
cltd
adc
mov
add
std
movl
outsb
push
in
sbb
out
xlat
shr
out
xlat
outsl
mov
hlt
push
idivl
daa
aad
aad
testl
jo
and
push
sbb
push
adc
scas
inc
lcall
fldl
adc
jo
push
adc
js
loop
mov
push
dec
mov
lea
rorl
repz
shll
add
mov
jno
jb
add
out
das
pop
cmpsb
lcall
pop
dec
pop
ret
mov
shl
xchg
push
sti
jne
sbb
jo
push
dec
pop
testb
adc
scas
pop
insl
jecxz
loopne
jp
xor
movsb
cmpsl
inc
jo
in
arpl
insb
in
or
test
pop
push
lock
out
jl
add
mov
xchg
or
outsl
inc
sbb
mov
fcoml
and
cmp
pop
lea
mov
enter
and
rcll
mov
mov
cmp
cmp
sbb
aas
fs
jne
jmp
xchg
stos
add
in
mov
jnp
mov
bnd
add
sbb
ljmp
loope
stos
clc
out
mov
inc
loop
jnp
pop
sub
cmc
xchg
xchg
inc
into
sbb
add
call
sub
cmp
enter
pop
test
daa
aad
jnp
clc
cmpsl
sbb
mov
movsl
bound
stos
add
cmpsl
or
pop
lahf
and
cmpsb
es
jae
aam
and
out
push
and
xor
jbe
mov
test
test
jge
sub
fstl
sbb
dec
je
dec
into
out
xchg
insl
cmp
or
sti
loopne
lods
inc
repz
jle
rol
test
fildl
daa
push
dec
jge
out
gs
jle
hlt
insb
pop
imul
push
add
std
mov
or
or
or
dec
xchg
iret
enter
adc
sbbb
sbb
mov
addb
xchg
aad
mov
lahf
mov
pop
mul
push
sub
cmp
dec
aas
inc
dec
out
pop
adcb
sbb
cltd
jns
cmp
testl
ja
push
sbb
jle
int
paddb
data16
and
pop
cmpsb
add
jmp
or
push
mov
inc
fcomps
inc
dec
jno
pop
clc
test
fimuls
ljmp
cmp
loop
dec
lods
and
dec
mov
nop
into
xchg
adc
cmp
add
icebp
mov
xchg
ficompl
adc
out
inc
cmp
loopne
xor
push
add
in
inc
shrl
and
es
mov
aas
mov
sbb
jno
js
bnd
xor
test
scas
shll
sbb
xacquire
out
mov
enter
jle
shll
add
daa
sub
aam
rcrl
mov
adc
arpl
jo
and
and
add
add
cmp
imul
test
pop
mov
bound
mov
negl
mov
cs
popa
dec
jl
fisttpl
and
daa
out
in
shlb
push
in
xchg
pop
and
xchg
pop
mov
dec
xchg
out
and
jl,pn
rolb
inc
pop
cld
fcompl
push
push
inc
loopne
adc
ljmp
and
lods
test
daa
adc
shl
lret
out
idiv
test
xchg
jae
or
in
out
outsb
xlat
inc
sub
sbb
cld
bound
out
arpl
pop
or
adc
dec
out
cs
jnp
or
call
adcb
sarl
mov
ja,pn
jp
and
mov
xor
roll
xchg
inc
sbbb
and
jl
xchg
arpl
sti
mov
add
sahf
insl
movsb
or
add
sub
push
jne
scas
negl
mov
clc
ja
xchg
outsl
mov
mov
mov
pushf
cld
mov
inc
mov
pop
cmp
add
mov
or
sbb
ljmp
scas
and
push
xor
lret
adc
mov
test
std
repnz
sub
fstpt
leave
cmpsl
dec
dec
int
or
or
cs
outsb
iret
push
scas
mov
hlt
pop
xor
push
cs
call
pop
iret
fisttpll
jb
push
mov
aad
mov
idiv
cmp
sbb
dec
inc
mov
inc
and
jb
mov
dec
jb
out
pusha
sub
dec
sub
cwtl
adc
imul
xchg
pop
hlt
cld
mov
add
scas
lcall
xor
mov
mov
sbb
mov
xor
add
push
mov
mov
add
dec
repnz
in
inc
int
outsb
jae
std
cli
xor
hlt
push
jns
int
ds
int
cmp
pop
dec
fwait
arpl
mov
inc
outsl
pop
mov
test
repnz
sub
iret
cltd
push
dec
dec
pop
dec
adc
xlat
mov
sub
and
fldcw
jnp
outsb
add
mov
das
repnz
and
imul
pop
cmp
ficomps
sub
mov
leave
andl
mov
js
test
outsb
pop
push
dec
cmpsb
or
in
xor
dec
stc
fnstcw
adc
das
jl
sub
inc
cld
push
inc
sub
bnd
mov
insb
mov
stos
pop
mov
pop
and
fidivl
push
andl
iret
push
sub
pop
push
or
mov
fcmovnu
popf
jecxz
cmp
mov
xchg
mov
out
add
shlb
rcll
sub
arpl
sbb
repnz
shlb
jge
iret
cmpb
dec
jo
mov
inc
push
lahf
ret
sarb
hlt
mov
ret
out
push
sbb
dec
dec
scas
movsl
ljmp
mov
int3
popa
out
out
ret
les
cmp
in
shlb
lock
mov
ficomps
mov
cli
in
movl
add
fmul
in
lret
pop
roll
cmpsl
test
outsb
adc
xchg
sub
push
mov
dec
mov
nop
je,pn
call
mov
call
mov
and
xchg
sbb
std
push
push
sar
cmp
repz
cmpsl
xor
xchg
enter
shlb
fnstenv
sahf
xor
xchg
sub
or
lock
mov
xor
jno
pushf
stos
add
mov
inc
cmpsl
mov
iret
fwait
divb
and
sub
lcall
jae
pop
rcrb
std
xor
dec
iret
mov
dec
enter
jno
imul
pop
jno
lahf
repz
dec
into
adc
cmpl
pop
cmp
aad
pop
lods
hlt
bound
fidivs
xlat
push
pop
cmp
test
dec
pop
inc
or
mov
dec
sarb
imul
shrl
and
pop
imul
insb
mov
scas
add
aam
int
pop
mov
and
aas
push
cmp
testb
in
sbb
pop
xor
mov
add
xchg
cmp
mov
add
test
pop
adc
addr16
jmp
pushfw
aam
mov
mov
mov
loop
mov
mov
cmp
out
sbb
in
into
popa
jg
dec
mov
xorl
sbbb
pusha
scas
add
push
dec
fcomp
pop
rorb
sub
aad
jo
mov
push
arpl
fists
mov
cmc
sbb
outsb
out
pushf
divl
xchg
cmpsb
aad
or
loop
outsb
push
fildl
and
cmp
cwtl
std
lds
xchg
push
xlat
jns
cmpsb
clc
cmc
popa
lcall
adc
repz
ret
es
mov
push
sub
iret
in
aam
test
sti
cmp
lods
jne
cmpsb
jnp
ror
cmp
lea
mov
lret
fmuls
or
in
bound
inc
movl
jg
mov
mov
data16
sub
pop
dec
add
psubq
inc
xchg
mov
sub
cmpsl
pop
push
out
push
cmp
and
mov
cli
or
pop
addr16
scas
pop
js
aas
xor
jbe
push
push
mov
add
clc
mov
loope
fucomi
test
fsts
xchg
inc
and
mov
scas
xchg
das
inc
clc
add
dec
xchg
ds
add
test
or
adc
mov
sub
imul
movsb
pushf
add
jns
jp
sub
addr16
std
jl
js
mov
push
sub
out
dec
and
call
pop
aad
pop
dec
pusha
mov
jecxz
hlt
lret
rcll
dec
pop
cltd
xor
pop
jns
sbbb
mov
int3
sbb
sbb
pop
push
jno
lods
dec
jp
lahf
aam
push
out
xor
shlb
cmpsl
inc
push
arpl
lcall
test
popa
xorl
clc
scas
add
xchg
inc
inc
ja
sub
or
and
jbe
mov
flds
and
dec
out
mov
sub
pop
push
pop
pop
decb
pop
lret
pop
mov
jne
out
mov
pop
sub
sarb
or
sbb
add
loopne
mov
inc
mov
jo
mov
and
sar
mov
add
test
pop
shl
leave
cmpsd
sti
or
mov
adc
mov
je
mov
mov
ret
pop
repnz
mov
lock
adc
out
loop
lcall
stc
lret
dec
fisttpll
iret
imul
insb
outsb
add
test
push
pop
dec
xchg
fucomp
and
loopne
mov
cmp
fcoml
ret
int
push
mov
adc
outsb
popf
xchg
enter
lret
mov
pop
push
inc
outsl
repz
negb
rcrb
push
outsb
icebp
dec
lods
mov
mov
jns
xlat
jmp
jmp
loope
scas
in
sub
sbb
in
sti
ficomps
cltd
push
loope
js
lret
pop
out
xor
mov
enter
push
sub
mov
bound
divl
or
in
adc
imul
inc
mov
pop
pop
mov
fwait
or
stc
addr16
adc
jmp
fmul
pusha
jp
lods
push
rclb
iret
pop
mov
divl
pop
ret
inc
bound
paddusb
fnstenv
enter
sbb
stos
ss
jg
nop
lahf
dec
jmp
in
sub
cli
out
jbe
pop
or
addl
test
dec
push
dec
out
pop
es
dec
mov
mov
xchg
iret
adc
jmp
cmpsb
sbb
rcrb
cmp
cmpb
push
dec
jb
and
arpl
and
cmpb
and
jne
fs
add
add
bswap
rolb
pop
popa
inc
iret
out
shrl
insb
mov
add
mov
jnp
rclb
stos
pop
ret
inc
mov
imul
add
cld
popl
add
cmp
dec
xor
clc
xchg
ret
jae
loopne
shll
add
nop
es
jecxz
lahf
shlb
mov
cmp
mov
aaa
pop
ret
inc
testl
mov
add
add
add
add
in
xor
imul
loope
fsubs
adc
xchg
fcomp
xor
cltd
ds
sub
adc
mov
lahf
add
add
cmp
pop
arpl
lods
and
in
fcompl
fists
addr16
outsl
xchg
mov
add
add
sbb
sahf
repz
lock
out
push
sbb
pop
xlat
pop
xor
das
add
in
notb
enter
sbb
lcall
out
das
outsb
sbb
popf
cmp
push
sahf
sbb
lcall
in
dec
andb
pop
push
gs
or
outsl
scas
mov
lock
jmp
cmp
xlat
fisttps
cmp
inc
mov
inc
cmc
sbb
push
jnp
xchg
stos
out
and
push
xor
out
pushf
adc
jns
cmp
lods
sbb
lods
call
push
mov
int3
lret
jg
cltd
jno
hlt
or
inc
pop
mov
lret
xchg
lods
shlb
xchg
xchg
xor
cli
jno
pop
cmp
push
aas
sub
shl
cmp
iret
mov
cmp
pop
xchg
xlat
mov
inc
mov
out
mov
pop
cmpsl
in
xchg
adc
les
fistpl
jp
mov
lods
aaa
cmpsb
xor
loope
lret
fxch
xchg
xorb
xchg
cmp
mov
test
push
sbb
push
cmp
add
inc
or
cmp
insb
es
and
xchg
dec
add
lret
cmpsl
test
mov
insl
lock
jns
arpl
sub
mov
leave
inc
mov
push
and
clc
mov
and
dec
in
sbb
ss
add
adc
shll
arpl
push
push
dec
out
cld
push
mov
cmc
pop
add
outsl
mov
jo
ljmp
scas
cwtl
sub
mov
bound
jg
cmc
sub
fstpl
pusha
loop
fadds
adc
cmp
mov
call
divb
cs
stos
jmp
push
lds
push
pop
pop
push
es
pop
mov
in
test
out
xor
jbe
rclb
sahf
es
push
xchg
leave
sbb
sahf
mov
push
int
rorl
ret
mov
leave
inc
ret
mov
pop
in
sbb
push
push
mov
cli
jo
push
repz
pop
pop
call
sub
clc
int3
mov
dec
popl
adc
xchg
pusha
std
fs
jo
rcll
out
mov
and
and
and
pop
nop
add
cli
in
cmc
cmp
dec
leave
sbb
jmp
cmc
add
adc
add
adc
jg
mov
lods
jo
bound
dec
cmpb
jmp
int3
or
es
fidivl
out
dec
dec
adc
icebp
sbb
push
sbb
int3
mov
aam
sahf
and
testb
das
add
sbb
xor
add
add
jae
lret
mov
outsl
outsl
jns
shll
in
int
sub
sbb
pop
push
push
pusha
negl
in
and
int
push
add
cmp
or
rcrb
xor
insb
sbb
mov
push
add
cmp
add
add
loop
divb
js
mov
and
lahf
push
push
rcr
fst
push
push
cwtl
fs
xchg
mov
push
mov
shr
xchg
xor
cmc
sbb
dec
addl
orb
scas
and
shr
sbb
rcrl
ss
pop
sbb
mov
mov
inc
repnz
jecxz,pt
arpl
ss
or
cld
pop
xor
xsavec
inc
scas
pushf
dec
jns
pushf
mov
push
fistps
xchg
add
mov
pop
pop
mov
movsb
and
xor
out
iret
and
inc
cmp
jne
mov
daa
clc
es
jge
sbb
xchg
xchg
sti
jae
xor
push
sbb
mov
mov
es
call
lcall
pop
xlat
push
adc
jmp
test
sbb
pop
out
das
rcrl
stos
sub
aam
sub
dec
xchg
mov
repz
mov
xor
imul
ficoms
mov
mov
jnp
xchg
imul
add
or
out
shlb
push
cmp
or
es
repz
xchg
push
mov
ror
imul
out
jge
pushf
cmp
fs
js
hlt
dec
movsl
shlb
loopne
call
jb
out
cmpb
fmull
cli
sbb
mov
rclb
fs
mov
adc
sub
sarl
stos
test
sbb
stos
daa
dec
mov
and
xlat
call
repnz
in
jmp
cmp
rorl
push
jmp
enter
addr16
rolb
es
push
repz
loop
adc
xchg
imul
jl
aad
and
int
lea
mov
out
push
nop
sbb
icebp
cmp
mov
lea
pop
test
daa
scas
cwtl
aaa
xchg
or
add
sub
xchg
push
pop
xor
push
xchg
cmp
sub
sar
pop
and
mov
inc
jbe
rorl
es
cmpsl
adc
fsubl
mov
inc
pop
rcr
dec
mov
xchg
stc
jne
test
push
pop
push
jb
or
out
push
enter
aad
cmp
cmpsl
ret
mov
cmp
push
xor
in
test
jecxz
cwtl
jne
pop
sbb
adc
cmp
xchg
xor
mov
inc
lods
mov
lcall
jnp
sub
bound
xlat
dec
mov
adc
movsb
dec
sbb
cld
pop
movsl
sub
mov
push
insl
inc
sub
adc
cmp
inc
xchg
dec
outsl
pop
dec
dec
mov
adc
mov
cwtl
and
jno
test
push
or
jmp
je
and
cmpb
mov
clc
loope
cmp
frndint
adc
lcall
data16
add
adc
jns
jmp
adc
shlb
mov
ds
and
sub
loop
or
cmpsl
mov
nop
out
pop
je
clc
shrb
aaa
xchg
pop
pop
pop
xor
jecxz
xor
ja
aam
mov
cmp
pushf
jo
lock
pushf
push
add
pushw
aaa
cmpsb
frstor
and
lahf
xchg
push
iret
mov
sbb
jb
mov
cmpl
nop
cld
mov
loope
pop
dec
ds
push
mov
testl
jg
fnstsw
test
jb
jle
dec
shll
ja
mov
inc
out
test
lcall
shrl
xor
into
and
mov
dec
dec
sbb
adc
mov
cmp
hlt
shlb
or
aaa
xchg
cmp
cltd
push
jno
jbe
movsb
cld
push
aad
push
inc
imul
cli
pop
daa
pop
push
aam
les
and
in
jecxz
xor
ret
push
jno
cld
or
sub
scas
cmp
xor
mov
ja
sti
mov
push
dec
imul
adc
call
aam
repnz
add
ss
lret
daa
xor
fwait
mov
pop
movsl
ficoml
xchg
sbb
mov
sbb
xchg
mov
jle
mov
aas
cmp
fiadds
and
add
and
push
xor
pusha
das
std
lea
jbe
aam
sub
addr16
xchg
fwait
add
or
gs
pop
mov
loop
inc
pop
inc
sub
aad
or
mov
inc
sti
rcl
pusha
insb
mov
mov
push
lahf
xor
ss
cmc
cmpsb
pop
add
aam
push
clc
ficoml
pop
movsb
data16
jne
inc
push
ds
fisttps
xor
mov
ror
cmp
out
ret
in
mov
sub
jns
jp
sub
inc
jne
stc
in
test
mov
or
inc
pop
pop
movsl
lret
fadd
sbbb
jmp
pop
mov
sub
inc
xor
mov
xchg
lea
stos
mov
jnp
xchg
mov
and
xchg
jbe
out
jp
mov
cmp
add
int
rcll
sbb
lret
xor
ja
push
imul
mov
push
cmc
es
inc
push
pop
movsb
ds
push
adcb
lea
mov
and
js
adc
sbb
mov
cmc
push
fdivl
fldenv
js
add
and
test
push
xorl
fstpl
add
jmp
pop
ret
stc
sbb
pop
mov
dec
dec
jae
inc
jl
fadd
and
mov
xor
jl
jno
push
lcall
mov
xchg
cmpsl
push
icebp
cmpsl
adc
cmp
filds
lock
fmuls
dec
mulb
or
andl
push
repz
adc
mov
mov
cmp
pusha
and
fwait
xchg
cmc
jb
jo
mov
jno
mov
dec
fidivs
jne
roll
pop
cmp
ret
xor
add
andl
pop
inc
and
mov
sbb
mov
push
int
cmp
stc
cmp
jp
sub
scas
daa
arpl
imul
addr16
lods
cmp
rorb
subb
into
loop
lcall
clc
xchg
cwtl
fst
sbb
jmp
jae
add
repz
mov
cld
into
jns
hlt
movsl
xchg
in
enter
inc
sarb
loope
aaa
jbe
in
jle
repnz
sub
jo
xchg
xor
jmp
dec
mov
popf
or
sub
jae
mov
mov
pop
inc
xor
push
cld
adc
jl
shrb
jmp
cmp
cs
ljmp
aaa
pop
mov
dec
popf
shll
xor
push
insb
dec
test
imul
push
dec
nop
scas
jnp
sti
jecxz
rolb
gs
push
mov
jne
pop
jbe
mov
or
mov
outsb
mov
push
jge
mov
andl
jle
jne
inc
or
fcmovbe
cmc
or
insl
stos
lds
mov
aam
push
aaa
push
fnstcw
rorl
int
aam
loope
dec
cwtl
xchg
insb
mov
cltd
int
mov
mov
clc
mov
sub
leave
ss
mov
xor
push
push
or
jl
sbb
push
pop
lods
nop
lods
cmp
ret
or
loopne
cmp
cmpsl
lahf
xor
xchg
fdivs
nop
aaa
jo
aad
adc
push
add
cs
dec
cmp
je
or
pop
sarl
movsb
mov
out
sub
out
mov
pop
push
and
adcl
mov
rcl
frstor
jae
insb
pusha
push
inc
jge
sbb
and
sub
adc
cmp
push
mov
adc
pop
sahf
add
or
lds
sub
cmc
jne
loop
mov
cmp
dec
sti
shrl
in
or
push
lea
mov
inc
cmp
outsb
out
out
xor
push
insb
push
out
in
jge
or
lcall
idivb
dec
sub
sahf
test
in
and
jmp
mov
cmp
xor
cld
adc
inc
sub
fs
xchg
cmpsb
sbb
mov
cwtl
loope
adc
fs
aas
xor
std
xchg
mov
mov
mov
and
cwtl
cld
stc
call
stos
movsb
cld
dec
cmp
lods
xor
mov
and
das
into
adc
mov
mov
imul
stos
xchg
jle
outsl
xchg
fildll
loopne
jns
lahf
lea
negl
mov
push
cmp
popf
push
test
mov
sub
mov
loop
mov
cmp
stc
cmp
jne
ja
js
xor
icebp
arpl
ja
rcl
push
cmp
cli
pop
mov
shll
add
fs
outsl
dec
jmp
call
sub
pop
fwait
outsb
bound
cmp
pop
test
movsl
movsb
add
aad
icebp
mov
cmp
fs
out
outsl
inc
jne
mov
or
aam
mov
adc
call
push
aas
mov
in
xor
pop
mov
xor
mov
popa
cmpsl
data16
or
xor
imul
pop
out
jle
add
out
fsub
dec
pop
cltd
loop
in
mov
popf
imul
mov
ret
psrld
arpl
enter
push
or
mov
negl
or
pusha
cs
push
je
outsl
push
rclb
sarl
mov
int
pop
pop
mov
sbb
jmp
inc
mov
hlt
idiv
mov
xor
and
dec
add
clc
inc
in
in
mov
ret
jge
andb
stos
xor
lret
sbb
add
jne
push
arpl
cwtl
aas
gs
adc
aam
in
cmpsl
xchg
and
sub
pop
in
pop
in
mov
push
inc
push
push
xchg
movsb
jle
or
dec
xchg
jb
cld
and
jecxz
add
dec
fcoms
stos
add
and
sbb
pop
pop
insb
shr
not
mov
or
ret
and
test
stc
fdivrs
jb
out
movsb
sub
xor
jne
cmp
jns
xchg
pop
jno
xlat
shr
push
push
xchg
std
or
pusha
mov
bnd
lahf
adcb
int
outsb
pop
sub
and
mov
push
sbb
dec
and
add
cmp
ficoml
test
xchg
mov
jle
pop
pop
repz
or
js
movd
mov
test
lret
sbb
je
dec
repz
mov
jl
sbb
cmpsl
or
pushf
or
scas
sub
mov
sbb
leave
dec
loopne
jne
fiadds
dec
gs
dec
jb
jl
mov
adc
add
cmpsb
imul
dec
ja
cli
mov
push
test
xor
mov
cmp
loope
insl
fchs
xchg
xchg
fnstcw
mov
push
lods
or
or
mov
ss
jg
lods
jne
addr16
jg
in
lds
pop
push
fists
mov
mov
jp
xlat
in
pushf
add
enter
les
xor
insl
js
aas
in
repz
movsb
fwait
sbb
pop
jp
jns
fstpt
cltd
jne
je
xchg
call
xor
pop
ret
popf
adc
mov
sbb
pop
xor
shl
jo
push
push
pop
lock
adc
aaa
nop
movsb
jb
in
jnp
mov
add
test
loope
lods
xor
ficoml
pop
cwtl
repnz
in
sti
sbb
fnstsw
sbb
scas
push
push
mov
and
jno
hlt
add
cs
mov
nop
mov
pop
call
pop
push
cmp
pop
xchg
in
je
movhps
pop
dec
pop
popa
shl
push
jo
xor
mov
dec
into
xchg
xor
pop
mov
mov
movhlps
imul
sbb
or
in
aam
sti
pop
mov
ds
adc
sbb
sbb
or
sbb
iret
mov
repnz
pusha
aam
jp
mov
xchg
movsb
xchg
insl
mov
or
xchg
sub
sbb
inc
xlat
cmpsb
out
test
lcall
add
adc
addr16
push
adc
lods
cmp
or
mov
dec
mov
stos
mov
iret
insb
mov
mov
lds
in
out
jle
punpckhwd
jne
les
dec
xor
mov
mov
cmp
xor
xor
mov
loop
pop
out
lods
jnp
jg
arpl
into
adc
push
add
pop
popf
mov
xor
aaa
idivb
pusha
jl
add
mov
sar
sub
adc
push
out
pop
and
repnz
jle
jmp
inc
aaa
mov
add
sbb
test
outsl
jo
mov
mov
or
clc
inc
test
stc
andb
out
inc
stos
imull
or
sub
call
stc
push
shrl
push
sub
imul
mov
mov
inc
dec
push
repz
insl
sub
ret
shlb
mov
cmp
jns
push
mov
mov
mov
lods
and
xor
mov
mov
outsl
cld
in
out
jg
push
push
push
push
sahf
or
daa
mov
mov
inc
fildl
int
fists
clc
insl
out
out
jge
adc
ficompl
cltd
pusha
mov
cmpsb
pop
das
adc
pop
xchg
std
int
outsb
imul
add
mov
pop
adc
call
ret
or
loope
adc
pusha
push
xchg
mov
and
and
jo
test
add
xchg
loope
xchg
out
jbe
rcrb
cmc
fs
or
push
addl
adc
jno
mov
or
adc
lret
gs
inc
push
dec
sbb
test
push
inc
push
loopne
imul
push
sub
jmp
jno
add
xor
pop
movsl
mov
cmpsl
sub
in
popa
push
jbe
and
lret
mov
loop
sbb
sub
sub
pushf
test
jmp
mov
subl
into
stos
mov
jl
cmc
dec
les
icebp
pop
and
mov
dec
push
xchg
outsb
pop
cli
jns
xor
mov
outsl
pop
xor
aam
repnz
int3
out
lods
add
mov
lods
aam
insl
jo
mov
fs
int
insb
inc
pop
imul
in
lds
inc
jns
setne
ljmp
pushf
fstps
xchg
shl
dec
cmp
in
cmp
int3
sub
adc
popa
add
push
inc
adc
fdiv
lea
sbb
test
test
xor
dec
daa
pusha
mov
and
add
jmp
pop
mov
sub
stc
adc
add
mov
in
out
fwait
lret
and
push
icebp
pusha
movsl
cmp
fs
mov
in
jno
outsl
xor
sub
xlat
mov
movsb
das
into
xor
adc
fnstenv
mov
pop
inc
mov
pop
mov
lret
xor
xor
xchg
push
pop
push
ja
sbb
cs
inc
pushf
push
dec
and
jmp
jnp
shl
inc
or
add
stos
jae
dec
mov
adc
fstpt
aas
stos
dec
imul
cmp
adc
add
add
add
shll
sbb
pushf
add
out
dec
sti
push
add
add
add
add
add
mov
add
pop
movb
push
stos
add
clc
add
das
rolb
stc
cltd
add
fs
add
add
add
dec
roll
sti
std
add
xor
add
add
add
add
add
inc
mov
add
add
in
scas
add
jns
popa
mov
mov
shl
jns
repz
add
repnz
add
add
and
aad
add
fs
add
imul
inc
push
call
add
add
add
sbb
mov
pop
add
mov
or
mov
dec
mov
roll
add
jb
in
xchg
add
add
add
add
test
jl
adc
lret
sub
add
dec
pop
add
pop
popa
add
aaa
push
add
add
add
add
add
imulb
cmp
or
repnz
inc
add
add
movsb
fwait
mov
pop
jp
outsb
add
add
daa
xorl
mov
adc
cmp
xor
roll
andb
jbe
loop
jmp
add
arpl
mov
cld
mov
add
aaa
sahf
mov
adc
imul
add
cld
das
mov
je
xor
dec
mov
notb
or
add
add
mov
cld
xor
xchg
outsl
insb
movsb
es
add
add
enter
stos
push
lods
xchg
aad
int
xlat
fadds
add
add
push
xor
stc
fwait
mov
add
add
push
mov
add
cmp
fcmovnu
test
inc
add
add
stos
and
and
out
stos
jo
add
call
mov
add
cmc
xor
sub
push
inc
filds
add
add
imul
pop
push
movsl
fwait
pop
and
add
sti
in
test
cmp
fs
movsl
inc
jno
arpl
dec
add
add
aam
push
insb
add
aas
adc
add
add
es
pushf
loope
je
add
add
in
add
add
add
fimull
mov
cmp
push
xor
xchg
mov
add
add
xchg
fs
cmpl
cmp
add
add
ret
fsubrp
xor
sbb
ja
icebp
pop
leave
xor
jl
mov
add
add
add
add
add
add
add
jmp
add
add
nop
add
add
sub
add
add
sub
add
add
add
push
add
add
add
add
sahf
add
add
add
add
add
add
add
inc
push
inc
add
leave
inc
add
add
add
add
add
add
xchg
scas
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
addb
add
movsl
add
add
add
cmp
xor
roll
loop
mov
add
add
add
add
aas
add
add
test
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
cmp
pop
add
add
add
loop
insb
add
add
add
and
scas
add
add
add
add
add
add
add
loope
xchg
mov
push
add
cmp
std
add
add
add
add
add
add
add
add
xchg
add
add
aam
mov
add
aaa
add
add
push
add
add
add
add
xchg
add
icebp
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
dec
add
mov
fs
add
add
add
mov
add
add
add
add
add
add
add
lods
add
add
hlt
add
add
add
jg
sub
icebp
add
add
add
add
add
add
add
stos
add
add
add
out
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
ret
add
add
add
add
add
repz
adc
add
stc
mov
jne
mov
jnp
add
cld
movsl
dec
cmpsl
pop
notl
add
outsb
push
sbb
xchg
pop
lret
jg
lahf
xchg
mov
jo
cld
pop
aam
xchg
push
shrd
xchg
out
gs
lock
xor
loope
ljmp
gs
notb
out
and
push
or
sbb
push
jecxz
call
push
pop
in
movsl
