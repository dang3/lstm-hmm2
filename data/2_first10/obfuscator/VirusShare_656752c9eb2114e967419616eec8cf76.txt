cmpsb
jnp
jne
in
into
jp
pop
out
cltd
mov
push
sub
cmpl
mov
add
adc
jbe
mov
pop
pop
lret
ret
mov
adc
scas
sahf
adc
es
in
scas
mov
les
les
stos
popf
shrl
or
imul
scas
fiaddl
dec
fisubs
in
mov
jmp
adc
mov
xchg
mov
test
add
inc
movsb
inc
xor
iret
sbbl
xchg
insl
jge
lods
dec
mov
fistpll
int3
mov
in
xorb
int
cs
testl
add
xor
cli
and
xchg
pop
lods
ljmp
ret
lea
imul
add
push
cld
in
mov
add
cmp
ljmp
andb
in
fsubrs
mov
adc
mov
lods
and
xchg
fwait
lods
stos
insb
xor
in
add
push
lock
test
test
out
loope
stos
nop
mov
movsb
imul
popa
jmp
and
icebp
add
arpl
jg
in
push
mov
ficoml
fwait
jne
std
and
push
lods
sbb
mov
push
jnp
jp
push
inc
sub
decb
jge
push
cltd
cmp
or
fs
ficoms
dec
sub
scas
lods
sub
and
orb
lods
inc
cmp
pop
xchg
adc
pop
decl
in
cs
push
mov
mov
call
addr16
pop
cltd
jne
lds
bound
sbb
pusha
inc
xchg
repz
sub
movsb
insb
cmp
mov
push
cmp
insl
mov
mov
int3
sbb
aam
mov
nop
sub
sbb
pop
mov
imul
mov
or
jl
mov
fimull
inc
push
fsubr
aad
inc
sarb
stos
push
add
xchg
in
popf
nop
pusha
sub
jb
pushf
cmp
sub
pop
sub
jo
add
sahf
add
fisubrl
mov
das
enter
and
les
sub
or
imul
add
mov
icebp
jo
push
jl
xchg
push
pop
push
pop
fstps
pop
and
pusha
pop
lahf
movb
lea
pusha
call
adc
cltd
inc
rorb
mov
mov
mov
test
lock
les
outsb
pop
jmp
jmp
enter
and
js
jbe
xor
inc
mov
in
pop
xchg
mov
adc
fstpt
xchg
sub
push
mov
pop
mov
push
jb
xor
dec
sub
push
cld
rcll
mov
or
or
xchg
add
jnp
dec
mov
and
mov
mov
mov
pusha
call
pop
xchg
or
ret
cs
mov
push
pusha
xchg
push
and
fdivl
push
jmp
repz
sarb
aaa
or
pop
iret
inc
aad
xchg
sub
xchg
pop
iret
mov
insl
add
jle
inc
cld
inc
jp
push
and
stos
nop
sbb
mov
rclb
test
xchg
xor
mov
std
stc
clc
sub
test
pushf
cmc
movb
repnz
call
adc
xlat
scas
data16
mov
mov
pushw
xchg
add
stos
push
jle
jmp
jl
lods
mov
scas
pushf
jl
negl
int3
or
daa
cmpsb
stc
ds
xchg
jle
jp
addr16
mov
xchg
ret
or
sahf
insl
xor
pop
out
adc
pusha
gs
data16
sub
shr
leave
xlat
sbb
push
bound
test
jnp
test
dec
mov
sbb
test
popl
cmpsl
mov
popa
jge
fdivrs
mov
aad
sbbl
test
xchg
pop
loope
daa
jg
xchg
mov
mov
aad
push
pop
jbe
fucomp
fwait
les
add
loop
push
mov
sbb
movsb
dec
aam
mov
nopl
rorl
or
add
insl
std
push
jo
lea
int3
cmpsl
mov
jb
push
mov
adc
jae
scas
and
das
dec
mov
mov
sub
mov
scas
test
sahf
imulb
or
mov
mov
push
jae
jl
push
dec
nop
shll
cmp
jle
inc
jmp
in
push
popf
xor
aam
push
pop
jne
dec
jmp
adc
xor
or
movzbw
mov
sbb
mov
and
cmc
add
not
call
movw
xchg
pushl
pushl
movl
mov
movsbw
pushf
lea
lea
push
jmp
push
lods
inc
cmp
wrmsr
pop
in
jl
pushf
xor
xor
pop
in
push
outsl
std
lahf
aam
jmp
cmp
push
stos
dec
das
inc
lahf
sbb
xor
add
jle
test
dec
xor
xor
and
ds
jns,pt
pop
aaa
rorb
inc
cwtl
mov
insb
aam
adc
add
add
scas
dec
test
int
sti
mov
insb
shll
shll
int
mov
sbb
sbb
mov
pushf
cmp
cmpb
jmp
pusha
jmp
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
movb
jmp
mov
dec
cmp
push
and
int3
push
in
je
sbb
subl
test
xchg
inc
fdivrp
sub
jb
icebp
outsl
notb
and
in
fbld
mov
push
arpl
movl
push
call
mov
call
clc
cmp
push
pushf
call
mov
pushf
movsbw
movzbl
lea
push
movw
push
mov
movl
jmp
cmc
add
push
mov
rcll
mov
adc
frstor
enter
pop
jbe
jecxz
and
push
in
dec
inc
mov
leave
into
push
jg
pop
decb
and
hlt
imul
test
xchg
dec
ficompl
scas
and
imul
out
out
rol
insb
aam
cmp
inc
jle
ret
dec
or
imul
jmp
pop
aaa
inc
stos
lea
call
rcr
sub
xor
sub
add
mov
jmp
push
pusha
lea
jp
je
btc
sar
shl
shl
add
cmc
movsbw
push
mov
call
push
lea
jne
mov
mov
jmp
lea
je
shld
btc
cmp
lea
mov
rol
bsr
bsr
btc
add
movsbw
shld
bsr
or
mov
jmp
lock
iret
shll
xchg
sbbl
or
xlat
arpl
and
jecxz
push
in
cmp
fst
mov
out
pop
jb
stc
mov
repz
push
sarb
mov
sbb
fdiv
dec
leave
je
jnp
aad
stos
loop
or
andl
lcall
insb
sub
adc
inc
xchg
test
loop
ret
lret
sub
hlt
pop
into
jno
xchg
mov
in
popf
rdtsc
nop
pushf
jmp
push
movb
call
fisttpll
lcall
aad
push
ljmp
mov
and
fs
out
mov
push
sub
adc
enter
lret
mov
or
mov
out
xor
cmp
fnstcw
int
xchg
into
and
push
btc
shlb
jno
sub
lcall
insb
fmuls
xchg
idivl
addr16
mov
and
xor
decl
or
push
jnp
bt
cmp
mov
pusha
pushf
lea
jb
test
jmp
lea
jmp
pushf
call
movzbw
mov
sar
test
pusha
inc
mov
lea
dec
mov
clc
call
xor
repz
out
mov
out
mov
mov
inc
mov
mov
test
stc
divb
adc
add
ds
ret
sub
cmpsl
es
lret
xchg
in
dec
jae
sti
sub
cli
xchg
cs
roll
aad
xchg
jg
jl
lahf
movsb
xchg
ss
jns
faddl
insl
inc
mov
ret
dec
push
mov
and
out
fbld
dec
testl
or
movsl
decb
out
shl
jl
push
fwait
outsl
cli
inc
into
or
xchg
daa
fidivrs
aaa
and
decl
ficomps
ret
inc
dec
je
mov
enter
push
bound
cmp
lea
adc
movb
lea
ja
jmp
add
push
xor
adc
out
pop
inc
mov
lods
sub
pusha
enter
push
push
xchg
xorl
xor
mov
jno
repz
xchg
test
clc
pop
fbstp
adc
push
and
inc
mov
or
pop
add
adc
mov
jbe
add
call
test
pop
ficomps
inc
cmpsb
and
mov
sub
xor
pushf
jnp
int3
push
pop
fcmovne
pop
xchg
adc
push
fildl
daa
sub
and
dec
mov
sub
xchg
aad
push
ret
pand
xor
mov
data16
jmp
mov
adc
std
test
sbb
sbb
pop
lods
movsl
inc
add
ret
ret
sbb
xor
dec
mov
fcomps
mov
or
sub
lock
mov
inc
jb
call
mov
shld
bsr
test
sbb
add
not
movzbl
mov
call
pop
push
aad
push
dec
jmp
out
arpl
stos
inc
iret
push
xlat
jae
outsl
cmp
aaa
pop
shr
sub
popa
pop
pop
pop
dec
pop
or
ffreep
mov
mov
dec
shr
in
pop
stos
movsb
std
out
pop
or
jbe
into
pusha
add
cmovg
cli
loop
cmp
es
loope
jns
mov
adc
shll
jnp
xlat
sub
sub
xchg
shlb
adc
and
sbb
pop
mov
mov
fdivs
mov
arpl
dec
outsb
hlt
jmp
insb
add
xor
lock
clc
pusha
mov
sub
aaa
pop
repnz
loopne
hlt
add
mov
ljmp
xor
mov
xchg
sarb
push
loopne
jns
mov
cli
das
arpl
and
push
jge
mov
cmp
or
lcall
sahf
add
sub
push
testb
sbb
rorl
out
pusha
pop
lar
ljmp
out
daa
pusha
jno
cmp
aad
lcall
sbb
icebp
aad
loope
mov
aaa
fwait
xchg
pop
xchg
mov
je
mov
jne
fwait
adc
fstp
adc
push
into
dec
dec
mov
push
test
jae
jns
sti
mov
pop
push
pushl
pusha
shl
stc
test
clc
mov
clc
jmp
imul
call
jmp
outsb
adc
mov
hlt
push
out
jns
cmp
iret
popa
pop
hlt
and
pop
into
int
fwait
test
pop
pop
aad
ja
inc
popf
movsl
or
icebp
daa
mov
push
cmpsl
rcll
daa
cmp
lret
ret
fsub
inc
push
imul
mov
and
jb
pop
dec
xor
and
nop
adc
jg
mov
sbb
xchg
leave
mov
in
jb
mov
pop
outsl
push
dec
sbb
out
ljmp
xchg
push
xchg
ret
push
mov
js
int
dec
cmp
leave
push
or
mov
mov
insl
jnp
lahf
inc
adc
push
imul
aad
dec
add
lret
repz
dec
insl
push
repz
or
fildll
mov
arpl
sbb
dec
pop
sbb
inc
mov
pop
sbb
fwait
outsl
xor
gs
xchg
inc
loop
jne
xchg
cld
test
loop
push
xor
sti
lahf
adc
jg
pop
cld
push
insl
lret
fildll
test
out
mov
cmpsl
mov
in
ret
shll
push
outsb
jne
mov
adc
or
insb
and
jmp
outsl
inc
into
in
aas
repz
xchg
fists
and
sub
sbb
in
xchg
fistpll
mov
mov
xchg
lods
clc
dec
pop
idiv
out
sub
add
sbb
jg
shrl
stc
push
test
fadd
push
out
sbb
adc
mov
lahf
adc
xlat
sti
aas
xor
pop
sbb
daa
lret
cmp
cmp
dec
xchg
mov
mov
jecxz
xchg
mov
mov
aad
in
dec
xchg
push
mov
loopne
lds
pop
insb
cld
cmp
lods
jle
test
xor
fnstenv
mov
dec
sahf
leave
inc
cs
add
sti
outsb
or
and
jns
js
xchg
jle
out
nop
add
ss
inc
hlt
daa
fstpl
xorl
sub
imul
push
and
push
dec
cld
mov
call
mov
sahf
sbb
adc
xchg
inc
jl
or
jmp
ss
sbb
stos
sbbl
add
pop
loop
adc
fiadds
sbb
jbe
pushf
pop
out
rcrl
ficoms
pusha
dec
cltd
lahf
fwait
lds
inc
jns
repz
pop
mov
outsl
cmp
pusha
add
dec
or
rcr
xchg
xor
arpl
jg
jmp
test
xor
add
cmp
fisttps
or
mov
mov
fstpl
lods
or
popf
mov
repz
fcomip
test
setb
scas
xlat
scas
fsubr
xor
lcall
sbb
sub
in
fsubl
push
adc
adc
lret
test
adc
sbb
pop
mov
xchg
jge
js
gs
inc
ret
xchg
mov
rorl
jl
scas
mov
cs
dec
enter
movsb
in
xor
sbb
mov
push
inc
int3
pushw
xor
xor
and
orb
push
adc
pop
mov
sbb
rcrl
jge
jecxz
push
inc
push
xchg
or
adc
loopne
adc
dec
mov
ja
in
ds
mov
ficompl
aas
mov
mov
push
xchg
js
mov
adc
and
jecxz
mov
inc
cld
jmp
icebp
in
aad
xchg
lret
stc
cmc
addr16
pop
movsb
aas
mov
je
mov
subl
cmp
lods
hlt
push
mov
stos
push
loop
jp
sbb
mov
sbb
jb
insb
dec
into
daa
mov
pop
xor
insb
test
mov
push
sbb
insl
mov
popa
and
ljmp
xchg
loope
cmp
push
or
mov
in
lret
xor
icebp
fcoml
fisubl
push
jnp
pop
insl
or
dec
mov
in
jge
push
mov
leave
pop
cmp
jg
rcll
dec
outsb
mov
aad
int3
insl
aad
rol
mov
xchg
fldt
stc
sub
and
xorb
rorl
jo
daa
in
aad
sub
roll
enter
mov
nop
cmp
repz
lds
stc
and
incb
scas
fwait
outsl
inc
adc
dec
xchg
inc
adc
mov
movsl
pop
repnz
int
fisubs
rcl
stos
sub
inc
xor
int
pop
aaa
insl
ret
stos
cmp
aad
mov
rclb
or
cs
inc
arpl
push
movsl
cmpsl
xor
jbe
dec
inc
xor
sbb
sub
and
dec
jnp
xchg
pop
decl
mull
mov
jnp
pop
sbb
cltd
jno
rolb
adc
pop
and
ret
xchg
sbb
sbb
in
sbb
sarl
into
inc
dec
idivl
add
xchg
fsubs
aad
cmc
in
aas
lret
xchg
aas
iret
loope
cmp
sti
push
sbbl
push
cmp
daa
add
add
adc
push
das
pop
scas
mov
sbb
ficoml
dec
lods
push
sub
mov
cmp
cwtl
adc
xor
call
mov
ss
pop
sub
push
insb
enter
push
dec
dec
and
adc
or
les
or
stc
push
daa
adcl
stos
fcompl
ret
fildll
pop
mov
push
notl
pop
and
fwait
add
adc
xor
imul
movl
xchg
add
sub
or
mov
addb
cmp
cwtl
pop
adc
iret
rcrl
imul
enter
mov
repnz
ja
mov
mov
pop
lea
inc
or
test
fs
ja
loopne
imul
xchg
outsl
shll
inc
es
xchg
push
sub
lds
pop
adcb
int3
mov
lea
pop
ds
pusha
and
into
cwtl
cli
push
lds
ret
push
xor
or
mov
pop
movsl
lds
cmpsb
or
mov
mov
ljmp
sbb
fildl
sbb
xchg
adc
sahf
in
int
mov
rol
int
dec
in
xchg
or
xchg
negb
das
inc
orb
shrl
loopne
jae
jb
shrb
fisttps
inc
das
stc
add
idivb
sbb
xchg
std
dec
mov
inc
cmc
pop
js
sub
add
mov
xor
test
pop
and
sub
inc
inc
and
cmpsb
mov
xlat
adc
repnz
xchg
inc
out
fistpll
mov
cmp
add
or
add
iret
add
mov
push
cmpsb
mov
iret
push
and
fwait
lret
xchg
cwtl
addr16
xchg
out
add
push
popa
adc
push
xchg
pop
je
mov
and
stos
xor
add
xchg
mov
dec
xchg
sub
negl
dec
mov
cld
mov
push
pop
dec
aad
pop
adcl
and
ret
call
xchg
movsl
adcl
mov
add
aaa
pop
or
out
xor
ret
mov
dec
or
mov
imul
loope
cmp
mov
inc
das
sbb
inc
ret
in
inc
xlat
sbb
cmc
rcrb
pop
scas
call
call
mov
xchg
sbb
int3
sbb
data16
inc
rcrw
add
push
test
movsb
test
out
in
sti
fdivl
in
decb
cwtl
pop
xchg
cmp
mov
mov
jp
cmpsl
pop
sbb
pop
and
jnp
jb
mov
add
pushf
sbb
jmp
mov
in
test
xor
lret
jnp
jp
aam
cwtl
or
pusha
jae
add
test
pusha
add
push
mov
dec
aaa
mov
dec
fmull
nop
xor
cmp
jecxz
andb
pusha
jge
inc
push
in
imul
mov
and
rolb
jge
pop
js
xchg
movsl
fsubrl
std
lea
push
fstpt
mov
test
adcl
push
inc
mov
cmp
sub
mov
or
arpl
sub
fcmovnu
jp
mov
ret
ret
sub
push
fisttpl
jo
loopne
mov
pop
xor
pop
aam
sub
jae
and
jbe
outsl
enter
xor
pop
sub
push
pusha
cmpsl
imul
mov
push
mov
test
push
mov
lret
gs
mov
pop
inc
jle
lods
sub
lahf
mov
cmc
jae
jl
lock
pusha
leave
lea
push
roll
cmp
pop
pop
imul
xchg
mov
adc
adc
dec
jb
push
test
pop
fistpll
mov
aad
je
cmpsl
pop
in
loop
std
je
popf
lcall
jno
ljmp
xor
mov
dec
scas
enter
in
mov
jp
jmp
xor
mov
cs
out
cmp
int3
out
sub
inc
push
les
jns
mov
int3
push
jo
sub
mov
or
mov
div
jl
push
loopne
xchg
test
je
sbb
insb
sub
xchg
cwtl
unpcklps
inc
roll
pop
push
nop
addr16
sub
fwait
mov
lret
scas
xchg
lahf
sub
repz
cmpsb
int3
add
xor
cmp
aas
icebp
ret
pop
add
sub
fstpl
jg
mov
sbb
iret
pushf
enter
jmp
jo
sbb
mov
daa
push
or
rcrl
lret
lret
inc
sbb
adc
sbb
mov
push
mov
iret
jp
loopne
pop
insb
test
xchg
mov
cmp
cmp
push
outsl
jo
leave
add
jb
repnz
data16
movsb
repnz
push
mov
gs
or
inc
cmp
jns
fildll
ljmp
or
sub
mov
push
adc
jecxz
mov
adc
mov
shl
sub
push
mov
and
outsl
mov
cltd
fdivl
jle
data16
mov
movsb
insb
xchg
push
mov
or
pop
jo
dec
mov
dec
push
aas
jg
push
adc
cs
iret
out
mov
sub
add
pop
cld
mov
shrl
pop
pop
mov
fsubp
cmpsl
xchg
nop
dec
notl
add
sbbb
test
pusha
xlat
jo
es
bound
dec
clc
sbb
fwait
arpl
jecxz
xor
test
in
iret
jae
inc
jnp
lret
leave
test
mov
cs
push
sub
mov
push
mov
push
les
out
jg
imul
mov
jg
pop
lds
js
push
sar
ljmp
xlat
fidivs
testb
jo
in
imul
push
cmpl
outsl
mov
mov
sub
sbb
or
jne
or
leave
xchg
shrl
shl
mov
test
mov
out
enter
into
mov
adcb
icebp
and
aas
mov
add
repnz
loope
outsl
lret
out
adc
mov
int
ds
mov
push
lods
dec
popf
fisttps
sbb
inc
jnp
xor
mov
pop
std
loope
xabort
ds
mov
mov
push
pop
xlat
mov
and
pop
ja
movsb
std
pop
add
mov
pop
fistl
push
add
repnz
mov
dec
pop
mov
cld
cmpsl
adc
lret
pop
push
gs
adc
push
out
add
xor
addr16
lcall
add
insl
testb
xor
out
lock
inc
call
enter
cmpsl
adc
lret
mov
mov
ret
and
sub
sarl
dec
test
lahf
and
sbb
rcr
adc
stos
popa
or
jnp
cmp
nop
idiv
push
xor
std
lock
mov
dec
xor
push
leave
or
daa
out
roll
mov
out
add
insb
push
enter
in
aad
and
jne
jle
mov
push
pop
out
cmp
jmp
adc
jae
xor
testl
mov
mov
addr16
dec
and
test
sbb
push
xchg
test
cmp
jmp
out
cmp
inc
and
sbb
les
inc
sub
sbb
rcrl
mov
ss
mov
pop
push
pcmpgtd
mov
push
xor
js
adc
iret
mov
mov
mov
add
add
sbb
xor
orb
out
dec
js
pop
sub
pop
movsl
cwtl
loopne
pop
rcrl
or
aaa
xchg
in
mov
jnp
jecxz
lcall
sub
or
mov
or
pop
push
add
mov
inc
inc
mov
lret
inc
inc
push
push
test
xor
mov
mov
dec
imul
fisubrl
pop
jmp
xchg
fsubs
imul
inc
sbb
fadds
in
cld
dec
in
jl
push
push
loope
jnp
xchg
outsb
sbb
push
xor
rolb
repnz
lcall
pop
mov
pushf
in
lret
cld
jno
into
cwtl
nop
push
hlt
jne
pop
aam
mov
push
out
enter
pop
jb
push
xchg
fsubs
sbb
outsb
in
inc
push
mov
push
into
jnp
sarb
rcrb
xchg
int3
xchg
adc
popf
hlt
outsl
lcall
dec
outsb
xchg
or
push
mov
or
sbbl
fadds
cmc
cmp
ds
and
mov
stos
push
inc
aad
and
out
xlat
loopne
into
xchg
push
shr
lock
pushf
out
and
pop
popa
cmp
mov
sbb
ljmp
mov
lahf
sub
aas
idivb
loope
push
fwait
sub
sbb
jmp
fists
mov
cmp
mov
push
mov
adc
cmpsl
add
add
les
jle
mov
jo
xchg
insl
xor
nop
dec
imul
xchg
xchg
adcb
cmp
push
mov
sti
pop
mov
push
push
movsl
inc
inc
and
cmp
cmpl
and
mov
stos
jb
inc
lods
xor
imul
mov
es
inc
jmp
add
fcom
pushf
jnp
pop
cmp
addb
hlt
insl
mov
mov
call
inc
sbb
mov
test
or
out
ds
movsl
adc
jnp
dec
mov
and
stos
out
or
push
adc
mov
lcall
and
das
shlb
shrb
pop
inc
ja
push
inc
add
lods
fmul
and
cmp
sub
popf
xchg
outsb
out
dec
addr16
out
cltd
iret
or
cmp
ljmp
add
pusha
fcomp
scas
ja
mov
gs
pop
add
cltd
stos
jge
and
jbe
int
xlat
push
push
jecxz
out
lea
aas
nop
mov
adc
imul
sbb
leave
mov
dec
nop
loope
shrl
add
xchg
jle
call
lea
ret
xor
data16
pusha
cmpsb
andl
mov
add
dec
adc
cmc
cltd
and
xor
shlb
stos
inc
mov
hlt
gs
lret
sub
jmp
fisubrs
jge
jne
sub
xchg
adc
loope
mov
mov
xor
jno
fimull
popa
dec
cwtl
lds
dec
xor
or
in
mov
and
lret
lds
mov
rclb
xchg
es
mov
pop
pop
dec
sbb
ucomiss
clc
fdiv
add
lcall
ret
icebp
cmp
sbb
ret
sbb
out
cld
ret
mov
dec
adc
loopne
xchg
xor
add
or
aas
mov
pop
mov
int3
in
mov
cmp
bswap
scas
mov
ret
inc
add
pop
and
pop
push
mov
jl
aaa
lods
in
or
pop
jns
inc
mov
push
or
faddp
scas
imulb
dec
jne
push
jl
sub
sbb
dec
stos
fsubrl
add
hlt
push
subl
xchg
rcr
xor
push
adc
pop
nop
and
add
lret
icebp
nop
push
fldcw
mov
dec
in
fdivl
xlat
pop
iret
aas
repz
mov
mov
clc
rol
sti
jns
arpl
xor
mov
pop
pop
shrl
lret
xor
pop
jp
sti
jle
and
mov
sarl
fsubl
dec
sarb
cs
testb
lds
and
les
ja
out
ret
lea
mov
addr16
int3
mov
dec
sar
mov
add
mov
out
sub
sbbb
stos
out
dec
sub
imul
cmp
push
pop
iret
mov
popa
bound
inc
movsb
arpl
mov
push
mov
lock
cmp
sbb
and
sbb
pop
cmp
les
adc
call
subl
inc
mov
jp
pop
lret
outsb
cwtl
xor
lcall
loopne
mov
xchg
and
outsb
ja
push
xchg
xchg
inc
and
aam
mov
and
cmp
mov
xor
lret
dec
cmpsb
cs
stos
mov
push
mov
loopne
cmp
addr16
add
adcb
das
loop
inc
int3
loopne
imul
adc
and
test
push
add
es
sahf
push
push
ja
leave
in
pop
sub
out
xor
push
xchg
cmp
push
scas
out
fwait
js
test
popa
outsl
test
xchg
mov
leave
pop
pop
aas
cmpsl
call
out
mov
fildll
cli
mov
fs
sbb
adc
cltd
jmp
inc
iret
inc
add
or
les
sbb
mulb
dec
push
lock
iret
lods
mov
mov
xor
mov
sub
adc
xchg
xor
fcompl
sub
imul
movsl
lret
cmp
shl
pop
inc
gs
stos
xchg
inc
jp
cli
popa
lret
fisubrs
mov
jg
mov
jae
jnp
inc
stos
nop
ficoms
out
sbb
retw
and
pop
aas
add
loop
sbb
push
es
push
adc
and
or
xchg
dec
stc
in
dec
mov
ja
fisubs
xchg
orl
in
mov
shrl
jle
mov
push
jno
inc
or
fdivp
xchg
out
ret
mov
outsb
ret
jl
xchg
push
jbe
sub
dec
jge
mov
sbb
xor
jo
cmpl
and
sbb
adc
mov
ror
adc
push
pop
mov
aad
pop
fidivrs
mov
inc
out
pop
mov
cld
es
inc
ljmp
add
nop
test
aad
cmp
mov
jge
into
fs
subl
sub
xchg
cmpsb
add
and
xchg
or
ljmp
and
add
fcompl
in
push
push
sub
mov
mov
addb
xor
in
or
cwtl
lret
mov
dec
rsm
mov
lock
xor
mov
scas
xchg
push
orl
lcall
int
rcrl
fstl
mov
and
cmpsb
pop
popf
inc
add
mov
out
cli
jge
inc
xor
xchg
lcall
movsl
out
push
or
and
in
adc
das
cmp
ret
add
mov
xor
jnp
pushf
mov
mov
sub
in
add
fwait
lret
dec
inc
add
and
jbe
shll
cli
or
mov
js
fcoml
xor
in
jns
lock
sbb
add
repnz
lea
pop
push
push
adc
inc
test
lock
sub
push
subl
iret
fistps
leave
jp
sub
cmp
inc
ds
insl
fldenv
adc
in
add
mov
push
xchg
dec
xlat
pop
cmp
inc
out
and
scas
popa
push
sub
jmp
jae
call
stos
mov
xor
cmp
adc
jb
dec
adc
ds
xor
aad
cmp
leave
or
xchg
bswap
cwtl
lret
push
jmp
push
inc
dec
and
pop
arpl
dec
push
push
popa
dec
sti
cmpl
jno
pop
inc
cmp
rcll
imul
inc
cld
xchg
mov
outsl
sub
pop
flds
jle
sbb
xor
xchg
pop
mov
ljmp
mov
mov
mov
repz
testl
pop
fsts
mov
xchg
enter
cs
lock
in
mov
imul
jae
ja
sahf
cmp
shlb
je
data16
or
jns,pn
push
cmp
cmpsb
fwait
test
pop
cmp
mov
mov
mov
decb
mov
scas
pop
add
cmp
jno
addr16
lret
js
inc
mov
fstpl
push
dec
push
or
inc
add
and
mov
xchg
mov
inc
lds
enter
call
dec
xlat
pop
repz
mov
cmp
pop
je
and
sbb
test
inc
orb
adc
or
insb
lahf
xchg
lret
stos
mov
inc
pushf
insl
ret
or
mov
inc
jnp
das
iret
outsl
or
jb
sub
out
fcmovnu
xor
adc
stos
cmp
fisubrl
lods
mov
out
inc
sbb
inc
rorb
cli
jmp
pop
push
fcoms
andl
push
js
dec
sub
daa
out
or
mov
mov
das
push
jp
jbe
mov
stc
add
clc
imul
inc
xor
sbb
rclb
add
test
add
xchg
cmovnp
jb
aam
cmpsb
pop
cs
pop
into
shll
pop
cmpsl
adc
rolb
add
hlt
mov
jge
mov
sbb
xor
lea
stos
mov
add
fisubl
and
enter
or
cmc
xchg
add
rolb
out
fwait
or
mov
nop
dec
jmp
out
fwait
js
popa
fstps
mov
xchg
cmp
out
jae
and
imul
dec
dec
sbb
or
xchg
dec
jbe
negl
shrl
fdivrl
int
add
dec
inc
xchg
push
dec
sahf
aam
shlb
sbb
dec
pop
push
adc
pop
push
fstpt
and
jbe
cmp
rcrb
jl
cmc
or
inc
add
ja
daa
add
sub
sub
dec
xchg
pop
fidivrs
push
fistps
adc
test
bound
js
aaa
sub
inc
push
ss
push
jns
adc
pop
cli
push
jne
mov
imul
stc
jae
inc
pop
and
pop
mov
and
jns
pushf
fmull
xor
xor
js
ror
xchg
or
adc
xchg
outsl
pop
push
in
fisttpll
fimull
fmull
test
movsb
adc
out
pop
push
insb
rcll
mov
xchg
cmpsl
ss
cmp
xchg
iret
imul
imul
cld
std
ljmp
push
dec
in
das
pop
inc
or
iret
mov
push
mov
fldcw
inc
imul
imul
in
inc
aam
push
lods
std
fimull
fs
mov
add
ds
and
xor
push
data16
movsb
out
outsb
les
cmpsb
aad
pop
lret
std
aam
in
mov
pop
add
sbb
xor
mov
lods
test
mov
jle
inc
lods
and
add
ror
popa
addl
ja
xor
dec
test
push
dec
dec
add
jecxz
inc
test
push
cwtl
in
lcall
cmpsb
push
xchg
jmp
scas
inc
xor
out
ljmp
xchg
mov
mov
addr16
cwtl
push
repnz
roll
iret
aas
in
lahf
cmpsb
mov
shll
leave
xlat
and
push
xorl
adc
scas
push
outsb
or
pop
movb
leave
sbb
sbb
mov
push
aaa
push
dec
sbb
in
adc
incb
xor
sahf
mov
addr16
add
inc
xor
dec
mov
mov
or
sbb
dec
jo
in
stc
mov
test
xorb
or
pop
call
jnp
push
fcmovnb
cmpsb
rdmsr
dec
les
jp
push
or
jne
push
test
loope
test
popf
addl
mov
imul
and
push
jle
mov
aas
mov
cs
cmp
out
stc
cmpsb
jle
inc
cli
and
and
int3
push
xchg
ret
into
inc
scas
jbe
push
sbb
add
mov
testl
or
mov
sbb
scas
xor
adc
or
ret
imul
test
test
je
xchg
mov
mov
dec
pop
lods
add
cmp
and
rorl
push
fiaddl
out
sub
cltd
cld
mov
add
nop
jnp
aam
enter
test
and
inc
adc
sbb
mov
call
icebp
mov
scas
insb
add
mov
das
aaa
jg
adcl
aad
push
mov
add
dec
stc
push
not
ja
jecxz
jmp
push
push
ja
shrl
jl
dec
leave
in
les
stc
adc
pop
mov
inc
inc
jle
or
xchg
cli
movsl
sub
mov
push
jbe
pop
ds
pushl
add
sahf
xor
jb
push
lahf
jg
pushf
leave
push
sbb
int
fbstp
pop
jge
push
imul
ds
cmpsb
mov
cmp
sub
je
push
cmp
rorb
jno
out
xchg
out
push
mov
fs
icebp
cmpsl
sbb
mov
imul
dec
inc
out
in
das
icebp
in
inc
cmp
outsb
loop
dec
push
sti
xor
pop
xchg
jg
jbe
lcall
ss
cmp
leave
leave
add
adc
cmp
or
ror
sbb
mov
sub
bound
fiaddl
jmp
jnp
add
mov
outsl
push
ss
lea
stc
into
xchg
xor
and
mov
mov
sub
dec
stos
mov
pop
push
rorb
mov
addr16
addb
loop
jno
xor
idivl
xchg
mov
pop
imul
cmp
negb
cmpsb
push
mov
ret
sub
lea
jae
xchg
add
adc
out
inc
mov
popf
or
mov
inc
jne
sahf
sbb
test
xor
mov
ljmp
xor
sti
dec
or
mov
lods
int
push
mov
inc
mov
mov
xchg
push
ds
pop
cmpsl
push
cwtl
jg
scas
int3
shll
xorb
repz
movsl
les
jmp
mov
mov
sbb
or
fildll
xchg
cmpsb
sti
jmp
lock
stos
sub
lret
jp
das
and
cmp
stos
repz
je
fcmovnb
sub
mov
into
cmp
jne
call
xchg
mov
popa
mov
outsb
xor
add
mov
in
sbb
mov
aas
in
pusha
pop
xchg
fnstsw
movsl
mov
cli
jmp
clc
ljmp
lret
cmp
jle
inc
insb
xchg
fdivr
ja
add
addr16
stos
sub
jge
add
cmp
fidivrs
shr
and
int3
cmp
jmp
pop
inc
data16
mov
pop
mov
cld
xor
jge
xchg
bound
data16
jmp
int3
jbe
xchg
xchg
cmc
push
jno
xor
out
mov
xchg
cmp
mov
xor
fsubs
and
mov
and
jno
repz
insb
aas
popa
das
mov
cmp
andl
sbbl
push
xor
jmp
mov
imul
cmpb
mov
aad
out
aas
mov
inc
xor
idivl
and
adc
mul
cwtl
sahf
and
push
outsb
xor
bound
jp
cltd
les
xchg
aaa
gs
dec
pop
into
fists
sbb
or
add
js
ss
stos
cli
mov
mov
pop
adc
rorb
mov
adc
dec
jns
imul
sbb
cmp
stos
push
xchg
cld
xor
xchg
dec
xchg
push
imul
stos
fdivrs
cmp
xchg
sub
outsb
scas
push
cmp
test
adc
inc
cmp
add
pushf
xor
ror
mov
mov
std
push
inc
xchg
mov
mov
mov
pop
in
push
lahf
mov
dec
mov
push
ret
out
pop
or
mov
sub
and
pop
mov
sbb
sarl
insb
or
xchg
inc
stos
xor
adc
cmpb
les
mov
mov
or
outsl
sti
sub
and
inc
dec
jb
mov
xor
lds
xchg
ret
mov
add
lahf
or
popa
xchg
loop
xor
adc
xchg
test
push
add
rcrb
pop
jae
enter
xor
sbb
iret
mov
roll
sbbl
push
ds
dec
lret
and
pop
and
sub
lods
scas
inc
pop
gs
pop
sahf
int
lcall
xor
fisttps
adc
in
jp
sbb
or
test
cmpsb
aad
decl
mov
mov
insl
mov
sbb
rcll
jmp
lahf
test
aam
insl
sbb
dec
imul
dec
inc
out
and
ja
pop
xchg
push
test
repz
cli
push
lcall
dec
dec
out
and
test
inc
sub
push
adc
fdivrl
xor
sbb
cmp
js
ficompl
mov
inc
jg
dec
dec
je
push
or
lahf
ret
into
sahf
pusha
or
push
mov
push
mov
or
loop
pop
pop
ret
sarb
fisubrl
stos
pop
jle
stc
lcall
xchg
mov
xor
int
push
push
and
aad
inc
and
push
xchg
sub
fcoml
mov
sahf
xor
push
in
shlb
dec
fstl
cmp
insb
lret
jae
daa
lea
mov
lahf
mov
movsb
pop
cli
enter
loope
cli
stc
and
xchg
xchg
test
sbb
push
js
arpl
push
shlb
push
push
jmp
push
xor
stos
fsubl
jmp
test
adcl
xchg
jns
and
fidivl
aad
cwtl
sub
sbb
adc
xor
pop
sub
dec
inc
mov
in
dec
push
test
popf
cmpsl
mov
popf
insb
rclb
mov
fsubs
sub
mov
lret
cmp
into
pop
mov
fwait
aam
mov
jnp
insl
xor
push
testl
les
ret
in
in
mov
das
ret
cld
adc
pop
aaa
fsubrl
call
push
ja
dec
jg
fmul
dec
add
mov
jle
pop
jmp
in
mov
cmpsl
hlt
mov
lock
dec
arpl
pop
adc
ss
or
sbb
cld
jmp
mov
dec
add
mov
xchg
cmpsl
pop
cmpsl
into
cmp
sbb
data16
or
xchg
jb
push
jl
frstor
shll
mov
mov
or
jno
inc
xchg
ljmp
lods
push
addr16
fbstp
mov
xlat
lret
jecxz
jb
shll
adc
iret
push
pop
or
jnp
mov
sub
cmp
cmp
push
sbbb
add
sbbl
fistpll
popl
pop
icebp
and
jnp
ret
cmc
aad
sub
pop
jg
movsb
stc
aaa
out
add
mov
mov
aaa
cwtl
adc
push
aad
mov
dec
and
out
adcb
dec
imul
jb
aad
loope
inc
cmp
lods
xchg
xor
mov
sub
jbe
dec
mov
inc
test
clc
shll
stos
movsb
and
insb
scas
lahf
mov
push
cwtl
sub
jecxz
xchg
cmp
push
aaa
mov
push
sub
mov
rcl
push
jle
loope
dec
mov
mov
test
test
test
push
imul
lods
out
mov
fsubp
add
jecxz
push
or
mov
div
add
mov
das
lods
xchg
or
enter
loopne
pop
adc
cld
sbb
add
mov
mov
add
clc
mov
fdivl
mov
push
sub
pop
cmc
loope
enter
mov
test
or
push
pop
fwait
xchg
dec
ret
cmp
cmp
aaa
popa
loope
cmp
shrb
and
xchg
add
mov
sbb
fs
mov
daa
add
inc
ficomps
push
push
dec
inc
mov
dec
dec
shlb
ja
fldt
cmc
js
add
add
inc
adc
ss
pop
jnp
cli
sti
addr16
lcall
mov
fmulp
rsm
scas
ss
jbe
mov
jmp
mov
jb
loopne
insb
add
sub
ret
add
mov
add
movb
sub
loope
sbb
sbb
add
fimull
pop
sbb
aas
jg
pop
mov
inc
push
insl
adc
std
je,pn
movsl
scas
inc
inc
imul
mov
mov
lret
sbb
outsl
loopne
pop
xchg
ret
and
xor
or
pop
pop
mov
jecxz
push
and
and
and
sbb
xchg
sar
push
movsb
cmp
cli
xchg
nop
popf
inc
xchg
pop
sbb
outsl
cmp
pushf
leave
cmp
daa
inc
arpl
adc
push
enter
ret
fwait
cmp
xchg
clc
pushf
dec
mov
aad
cmp
sti
icebp
fs
rolb
stos
sub
cli
jmp
lret
mov
fwait
ret
jecxz
fldenv
dec
jne
cltd
add
mov
je
inc
dec
je
ds
jno
sbb
gs
push
push
xor
mov
test
fdivl
xchg
mov
xchg
push
mov
xchg
mov
pop
xor
jne
jno
fbstp
xchg
mov
xchg
sti
fstpt
dec
aas
mov
push
ret
push
push
in
mov
mov
scas
push
outsb
dec
test
ret
insl
scas
pop
pop
jnp
jno
jp
cld
jp
mov
stos
ret
inc
daa
daa
pop
in
jge
or
xor
scas
sahf
push
in
xlat
jns
push
pop
mov
int3
push
dec
xchg
cmp
ss
sbb
inc
js
sub
push
stos
mov
mov
xchg
mov
scas
in
fxch
ds
data16
sarb
jo
insl
lds
sti
mov
dec
daa
cmpsl
aam
jg
outsl
test
or
sub
xchg
jg
inc
mov
cld
inc
cltd
dec
jbe
and
inc
lea
mov
xchg
mov
cmc
add
cltd
inc
sub
mov
jg
dec
inc
xor
jmp
xchg
aas
fwait
mov
jmp
xlat
xor
nop
pushf
add
jl
xor
outsl
jae
jg
xor
in
mov
jp
test
pop
pop
or
aas
lea
or
cmp
jmp
shll
loop
mov
mov
pop
movsl
fisubrl
pop
cmpb
xchg
xor
xbegin
push
out
movsl
mov
int
in
cmp
inc
stos
pop
test
xchg
inc
fmull
mov
xor
mov
xchg
xor
xchg
nop
push
mov
push
and
sub
and
add
shrb
jnp
test
iret
add
or
jecxz
jae
jo
jb
dec
pop
sbb
daa
shll
lahf
test
test
push
ret
xchg
out
xor
lret
divb
or
test
ret
aaa
leave
fsub
sub
lds
addr16
xor
or
push
leave
and
jbe
xor
xor
cld
push
mov
sub
repnz
pusha
inc
xchg
dec
cli
xchg
mov
fbld
jo
mov
adc
int
xchg
add
jp
popa
movsb
rclb
push
fldenv
into
std
test
hlt
mov
shlb
call
jno
stc
mov
mov
fisubl
sbbl
mov
sbb
std
mov
aas
pop
push
push
ljmp
push
mov
xlat
enter
mov
cmpsb
sub
cmp
sub
xor
cmc
push
addr16
enter
mov
xchg
test
xchg
in
int
lea
enter
push
push
xchg
pop
jno
mov
insb
ds
dec
adc
add
add
jmp
insb
stc
mov
dec
mov
push
inc
dec
inc
jle
mov
mov
xor
fsub
stc
lods
inc
cmp
hlt
adc
dec
mov
xchg
shll
cmpsb
lea
cs
call
loop
push
push
push
rorl
cmp
std
add
es
hlt
xchg
cmpsl
repz
popa
popf
jnp
icebp
cmp
push
dec
sarb
movsb
xlat
xor
cmp
les
cmpsl
and
stos
add
push
push
mulps
nop
shlb
ds
fmull
js
mov
jecxz
lods
xor
aam
pop
dec
mov
xchg
adc
add
nop
out
aam
push
mov
push
jp
push
inc
and
jle
inc
rcrl
cmp
mov
popa
jg
sub
xchg
push
xor
xchg
push
xorb
or
jb
and
mov
jmp
xor
imul
sub
dec
sub
stc
and
inc
fwait
lahf
cmp
push
negb
mov
in
pop
adc
mov
ss
and
lcall
mov
push
lods
mov
sbb
mov
stos
pop
add
ficoms
leave
push
add
je
lds
shlb
and
pop
jl
cmpl
insb
sub
rclb
jp
icebp
repnz
lods
push
arpl
mov
adc
dec
or
dec
push
enter
addl
test
into
in
pusha
lahf
movsb
and
out
adc
jo
in
mov
sti
cmpsb
push
pop
pusha
out
out
insb
ror
leave
jno
pop
fwait
js
mov
adc
aad
subl
mov
lods
cld
mov
inc
inc
sub
xchg
push
pop
das
mov
inc
pop
hlt
mov
sub
jmp
or
ffree
pop
pop
mov
iret
inc
outsl
imul
loopne
es
ss
push
sub
add
dec
jmp
push
bound
mov
je
es
mov
jnp
dec
and
imul
bound
jb
loopne
outsb
or
jno
loopne
loope
xor
sahf
fisttpl
filds
mov
adc
jl
add
dec
sbb
sub
cmpsb
pusha
rolb
and
mov
push
jmp
adc
movsb
outsl
push
scas
data16
dec
inc
pop
jmp
loopne
gs
pop
stos
push
fdivr
in
sahf
dec
bound
jbe
cwtl
cwtl
iret
sbb
loopne
shlb
cmp
inc
ret
xor
push
sti
inc
mov
jne
mov
popf
mov
mov
xchg
ds
sub
js
mov
sub
xchg
aam
cmp
out
jp
or
adc
xchg
sub
jp
and
dec
jp
jmp
xchg
push
mov
push
pop
cmpsb
bound
mov
mov
mov
insl
push
pop
and
inc
filds
rol
hlt
imul
ljmp
xchg
jge
fbld
inc
sahf
fxch
leave
xchg
or
pop
jmp
dec
insb
call
mov
xor
dec
aam
jne
stc
cmp
fsubl
dec
xlat
das
xor
mov
loope
cwtl
push
push
imul
fildl
pop
lods
ficoml
loopne
inc
popa
mov
and
inc
cmp
sbb
xchg
pop
aad
and
jl
xchg
sbb
dec
inc
sub
lock
xchg
or
cmp
movsb
sbb
sahf
mov
movsl
sub
shll
add
xor
cmc
add
cmp
in
dec
cmpsb
fwait
rcrb
call
and
adc
loopne
inc
jle
sbb
inc
rorl
or
adc
repz
repz
add
add
jbe
sbb
and
insb
jo
cmp
adc
roll
call
inc
sar
addr16
adc
inc
pop
mov
and
lahf
les
push
jge
scas
insb
pop
push
mov
pop
cmp
mov
imul
sub
xchg
ret
js
ret
repz
pop
jne
inc
addb
fidivs
jo
and
loop
pop
std
aam
ret
dec
mov
stos
cmp
mov
push
mov
insb
add
out
dec
push
testl
inc
sbb
inc
dec
jp
int3
mov
mov
inc
or
frstor
les
decl
cld
xor
cmp
jge
cmp
mov
in
sti
inc
xchg
mov
dec
and
dec
jbe
iret
push
lds
addb
jo
fwait
repnz
imul
loope
popa
negb
inc
ljmp
dec
jg
add
aad
dec
shrb
in
mov
shll
ss
or
inc
fldt
add
jmp
pop
clc
push
popa
adc
repnz
outsb
int
cli
out
dec
daa
out
cli
push
pop
push
xlat
add
mov
pop
imul
push
test
es
jecxz
cmpb
push
std
ss
sbb
sub
cld
inc
adc
loope
mov
or
jle
iret
add
mov
lods
mov
movsb
and
adc
or
addr16
insl
pop
mov
lock
mov
and
push
bound
or
pop
insl
sub
or
xor
insb
mov
dec
int
idivl
fidivrs
pop
ret
dec
add
and
fcomip
push
cmc
inc
ret
push
dec
mov
inc
jp
icebp
fs
and
pusha
cli
cmp
jl
pop
aas
fidivrl
mov
in
cmp
xchg
sbb
dec
xchg
xchg
or
xor
cld
dec
daa
jae
in
or
sti
shrl
pop
in
cmc
xchg
int3
or
ja
add
inc
adc
or
cltd
nop
rorl
gs
push
fsubp
mov
popf
std
sub
mov
shl
daa
sahf
lcall
sub
push
xchg
inc
cmpsb
je
lret
jecxz
psubw
fdivl
mov
lock
cmp
push
bnd
cmp
nop
mov
std
mov
ret
std
jb
int3
fisttpl
sub
ficomps
popaw
loope
repnz
push
and
jge
arpl
sub
or
pushf
int3
loope
lds
test
stos
mov
pop
jl
add
adc
fsubl
push
jge
push
fimuls
loopne
mov
test
dec
cmpsb
lahf
push
cmp
outsl
pop
xchg
or
leave
cmp
aam
cmc
add
lret
sub
sub
adc
dec
int
repnz
inc
pushf
xchg
cltd
mov
fildll
fstp
adc
pop
push
sub
mov
sub
xchg
xchg
and
sbb
repnz
xchg
fistl
cmp
add
loope
add
jle
xchg
imul
aaa
lahf
add
or
xlat
sub
popa
vmovshdup
mov
call
dec
cli
pop
xchg
mov
outsb
mov
xchg
mov
push
into
out
hlt
cmpsl
icebp
cmp
pop
mov
adc
stos
lods
add
loope
lcall
dec
inc
aas
cmc
add
jae
adc
xchg
inc
jg
testl
imul
xor
mov
loope
rcrw
addr16
cmp
vhsubps
adc
inc
xchg
fsubrl
xor
xor
call
dec
fadds
sbb
sbb
mov
xor
pop
inc
push
pop
mov
aas
jnp
jns
out
dec
enter
fcmovb
loop
sbb
mov
push
mov
mov
and
xor
mov
xchg
addl
mov
push
in
fisubs
bound
mov
inc
jno
and
push
jb
and
cmp
xor
scas
aad
add
repz
xchg
in
lds
sub
or
outsb
push
test
sub
sub
imul
cld
cs
arpl
mov
add
mov
jnp
sbb
out
mov
sub
ret
fistps
addl
insl
out
inc
cmpsl
jns
push
dec
inc
mov
xor
xor
xchg
rorl
xor
mov
int3
cmp
gs
inc
sub
and
xchg
insb
lahf
pusha
push
cmp
pop
add
dec
mov
cmc
pop
in
push
scas
xchg
iret
pop
sbb
das
fwait
mov
adc
out
push
adcb
push
lods
jge
punpcklbw
enter
popa
aam
sub
popa
insb
lock
cmp
sbb
clc
ja
adc
dec
pop
iret
mov
hlt
xchg
xchg
mov
ret
test
insl
imul
loopne
int3
mov
cmp
xor
jno
out
es
mov
das
push
popf
pop
hlt
adc
mov
icebp
arpl
test
lea
jge
jno
stos
cwtl
mov
pusha
push
fsubs
outsl
arpl
mov
pop
movsl
hlt
fsubs
xchg
popf
cs
idivb
push
mov
inc
dec
xchg
bound
pop
rolb
jl
xor
lock
jne
xor
xor
std
xor
cmc
inc
inc
repnz
mov
xchg
cltd
rorl
int3
cmp
push
jb
sti
xchg
dec
push
push
sti
cmp
lret
cmp
nop
hlt
sbb
mov
insb
jae
imul
lods
inc
push
push
test
popf
stc
jb
outsl
and
aam
out
int3
sub
jle
std
in
es
bound
fdivl
and
aas
in
adc
test
fcmovnb
xor
outsl
aad
mov
dec
popa
inc
imul
popf
inc
pushf
push
sarb
jmp
je
push
add
mov
test
and
inc
inc
xchg
or
rclb
insl
mov
shlb
mov
push
dec
or
pop
js
js
jle
hlt
std
cmpsb
jae
adc
xchg
in
fmul
jnp
mov
push
jno
mov
or
imul
out
xor
lret
lahf
cld
outsl
loop
or
and
inc
ljmp
imul
test
lcall
fsubrl
dec
jmp
adc
and
pop
mov
out
mov
nop
inc
cmpl
das
mov
jmp
js
inc
pop
mov
ja
ret
mov
sub
cmp
push
dec
add
imul
loopne
mov
das
mov
aas
loope
test
mov
leave
in
in
cmp
add
sub
xchg
scas
lods
sub
mov
add
sti
sbb
mov
pop
sub
clc
or
je
dec
pop
mov
mov
and
push
adc
jne
jg
xorl
test
aam
jo
sub
push
add
sbb
ret
inc
cmp
cvtpi2ps
mov
roll
sbb
mov
inc
cmpsl
int3
cs
jbe
arpl
cmc
sbb
or
loope
push
addb
inc
fsubrl
pop
or
ucomiss
mov
push
int3
push
cmpsb
mov
das
aam
stos
addr16
addl
pusha
stc
int
lret
push
sti
fcmove
jns
mov
sbb
xchg
movsl
mov
sub
jnp
inc
dec
dec
push
fcompl
and
xor
push
jl
adc
jns
cmpsb
sub
mov
repnz
mov
sbb
test
nop
dec
mov
or
push
pop
pushl
test
clc
lret
push
cmp
mov
fstpl
push
inc
stos
cmpsl
out
shl
sbb
pop
mov
add
cmp
into
inc
or
outsl
jne
insb
mov
cmp
xor
test
out
push
xchg
pusha
jb
call
ja
call
ja
sbbl
std
mov
mov
pop
adc
dec
ror
mov
or
mov
ret
cld
data16
mov
cmp
ret
popf
add
cmp
imul
xchg
leave
insb
montmul
cmpsb
adc
insb
pop
stos
xor
pop
mov
and
cmpsb
mov
sbb
std
stos
jp
xor
das
pop
iret
xor
insl
hlt
inc
cmp
shlb
bound
push
call
sbb
xor
mov
in
cwtl
and
ja
lds
pop
dec
or
stc
push
ljmp
adc
pusha
cs
inc
mov
dec
into
xor
aaa
shll
ret
jmp
adcb
pop
in
sbb
mov
and
adc
sub
cmp
fiadds
inc
push
add
fsubl
test
or
outsl
jl
xlat
cmpsl
sbb
insl
push
rcr
push
stos
fcoms
cmp
xlat
xchg
decl
cli
out
adc
js
call
sub
mov
inc
or
sub
leave
std
adc
test
daa
jge
lock
cmp
test
ja
sbb
sub
jge
mov
dec
jl
stos
inc
testb
jnp
out
shr
xchg
mov
mov
pop
sub
mov
test
dec
iret
pop
push
lret
add
sbb
popf
or
cmp
gs
sbb
jae
test
mov
and
fimuls
sub
adc
push
iret
sbb
xchg
adc
outsl
ss
movsl
imul
sbb
cmp
aaa
push
push
fdivr
jns
or
and
cmp
pop
pop
pusha
add
fcoms
mov
dec
mov
test
lfs
aad
pop
xor
test
loop
rcll
mov
mov
ret
test
push
cmpsl
mov
shlb
or
ds
jl
adc
xchg
inc
xor
inc
test
jg
movsb
js
inc
jl
push
jl
mov
jecxz
std
insl
js
adc
mov
pop
sahf
sub
sbb
int
iret
nop
push
stos
fsub
and
loop
scas
ja
popa
std
mov
mov
movb
repz
fwait
pop
add
dec
sub
and
fldt
test
adc
mov
push
jmp
fcmovu
imul
sti
xor
mov
and
pop
in
dec
stos
lock
mov
es
jmp
sti
cmp
jb
ret
cs
sbb
fs
cld
iret
or
dec
pop
inc
ja
shlb
int
inc
shlb
dec
movsl
dec
nop
cmpsl
daa
cwtl
subl
int
fdivrl
out
inc
popf
mov
into
xor
xchg
mov
sbb
or
aaa
cmc
mov
mov
cwtl
shll
push
jb
popf
xchg
imul
mov
inc
sub
scas
pushf
xchg
xchg
mov
mov
push
sbb
inc
jne
pop
fiadds
cmc
lock
mov
mov
out
sbb
ja
repz
xchg
add
xchg
js
jno
in
test
inc
mov
out
jmp
popf
fldt
sub
cld
mov
jne
cmp
mov
sub
pop
jmp
mov
jmp
jns
push
pusha
test
mov
jbe
mov
jae
movsb
mov
sub
sub
inc
pop
pop
jge
cmp
add
out
rolb
enter
loop
inc
movsl
push
stc
test
lods
std
mov
sahf
xchg
nop
sub
xor
out
jmp
scas
mov
sbb
divb
xchg
mov
mov
cmp
std
mov
xchg
pop
nop
mov
mov
mov
leave
xchg
mov
inc
xchg
mov
fcompl
pop
sarb
jle
js
push
jg
push
ficoml
lods
testb
iret
push
insl
sbb
mov
xlat
fnstenv
push
lahf
into
sarb
out
sub
inc
sti
pop
mov
adc
movsb
lahf
fildl
in
fwait
loop
and
les
lods
dec
dec
daa
out
cmp
or
push
add
xchg
loop
fimull
xchg
nop
and
cmp
mov
pop
aam
lcall
mov
ljmp
js
aas
inc
imul
pop
push
rcr
sub
push
scas
js
mov
mov
cmpsb
sub
cmp
cmp
xchg
xchg
cmc
addr16
add
call
inc
jae
mov
dec
shl
jp
lcallw
sbb
inc
mov
sbb
aaa
fstl
stos
leave
test
ja
lahf
lock
test
repz
in
or
push
sarb
xor
into
pop
jl
sbb
int3
xchg
sbb
dec
in
fisubl
leave
lods
int3
push
cmp
ja
test
xchg
inc
inc
repz
sub
icebp
pop
nop
fdivl
mov
xchg
mov
cmc
push
hlt
dec
inc
dec
mov
sbb
inc
jbe
xchg
fadd
add
push
cmpl
jae
push
repz
jg
push
xlat
or
cmpsb
jge
push
data16
jbe
adc
jno
and
sub
fnstsw
rcrb
push
or
adc
adc
jns
stos
lret
nop
pop
jge
and
testl
sub
cmpsb
push
pop
shl
mov
xor
decb
outsl
das
mov
and
pop
jmp
jge
dec
cmpsb
sbb
fst
shrb
dec
subl
dec
and
pusha
xchg
push
xchg
mov
and
hlt
mov
adc
xor
adcl
mov
lods
sub
pop
pop
fldenv
jle
push
fs
mov
cltd
test
leave
cmp
nop
push
push
push
call
ret
cmpsl
and
xlat
subl
jle
xchg
ret
lret
mov
pop
xchg
sbb
inc
sub
jb
test
fcompl
fistpll
popa
add
cmp
pushf
scas
dec
pop
repnz
mov
cmc
ss
dec
les
sti
sbb
jno
push
cmp
xchg
push
dec
inc
nop
scas
insb
mov
je
inc
sbb
and
push
lahf
mov
stc
jge
aam
adc
xchg
and
jno
ljmp
mov
add
test
cs
hlt
hlt
repnz
popf
and
std
shl
cmpsl
xchg
ret
jne
pop
into
or
xchg
push
jg
inc
xchg
hlt
mov
lcall
ljmp
mov
negl
pop
cmp
mov
mov
sub
test
jnp
sub
jge
stos
bound
mov
mov
inc
inc
xor
aad
scas
xchg
push
mov
loopne
mov
sub
test
adc
or
imul
sbb
push
je
push
out
js
aaa
add
adc
fistpl
lcall
pop
pop
pop
fwait
mov
out
mov
jg
cs
sbb
cmp
adc
mov
in
insb
cmp
dec
or
into
xor
in
mov
sbb
mov
mov
jle
sub
dec
and
xchg
rcll
ds
movsl
sub
adc
stc
lods
ds
imul
mov
mov
adc
jns
xor
roll
out
xor
mov
ret
mov
rolb
adc
push
popa
orl
or
test
xchg
add
fsubp
ljmp
pusha
dec
sub
lahf
cmp
test
and
mov
lcall
xor
adc
rcll
push
add
pushf
aaa
ja
xor
sbb
dec
test
jns
adc
ljmp
shl
pop
inc
out
loop
pop
jge
inc
xchg
fdivrs
jbe
sub
cld
ss
dec
cmp
in
pop
fstpl
xor
aas
jno
ret
loope
inc
push
pop
fnstenv
nop
clc
ror
in
dec
dec
fst
andb
dec
and
ljmp
add
sbb
jae
pop
sub
imul
and
movsb
and
jo
push
and
sbb
cmp
std
fiadds
mov
cmp
push
pop
inc
aas
ds
add
cmp
xchg
inc
jno
add
jno
aad
cmpsb
xchg
into
lods
dec
and
adc
cmp
jecxz
repnz
xchg
cmp
frstor
cmp
sub
dec
fistpll
and
enter
imul
into
sub
ficomps
das
xchg
add
mov
mov
inc
rcrb
xchg
mov
xor
xchg
lret
jns
outsl
xlat
insb
xor
enter
mov
into
aad
dec
jnp
daa
insl
orb
icebp
int
mov
sub
nop
cli
jnp
mov
mov
sahf
sub
mov
aaa
mov
mov
xor
pushf
inc
jno
xor
sahf
aaa
jno
stc
cli
xchg
mov
cltd
lods
jp
adc
mov
add
sbb
repnz
mov
or
aad
or
mov
inc
fists
adc
cmp
flds
mov
push
repz
lock
add
mov
in
cmp
fwait
outsb
lret
lock
mov
mov
add
mov
jne
push
pop
nop
push
repnz
pop
fstps
push
dec
cld
push
jmp
cmp
jns
pop
loope
push
inc
sbb
test
jb
arpl
jbe
jb
jne
xchg
arpl
push
ret
sub
jnp
adc
jb
lret
testl
push
pusha
adc
pop
fidivrl
pop
lcall
mov
sbb
std
inc
dec
lret
rcrb
leave
mov
fisttps
les
xchg
xchg
fists
and
inc
pusha
mov
inc
push
push
adc
or
or
jp
push
sarl
std
sub
cmp
cltd
dec
mov
fsubp
dec
or
test
xchg
xor
dec
in
in
fnsave
pushf
aam
push
push
insb
mov
push
mov
xor
stc
jl
pusha
iret
add
jecxz
inc
movsb
push
fs
int
bswap
jb
popa
cli
xor
fwait
mov
ss
lahf
or
loope
repz
sub
loope
orl
mov
xor
cli
jo
xchg
jno
push
shll
cld
in
enter
mov
xchg
arpl
daa
and
mov
xchg
inc
inc
xor
and
cmp
sub
mov
into
inc
and
push
pop
in
aam
mov
loope
inc
mov
and
cmc
sub
out
xor
ret
mov
sub
ror
enter
jp
add
call
movsb
mov
mov
imulb
gs
mov
and
add
adc
dec
xor
pop
xchg
int
cmpsl
cmp
cmpl
and
jecxz
gs
mov
mov
xchg
mov
out
out
push
fimuls
sub
ficomps
lds
adcb
jmp
xor
push
sar
pop
xor
mov
or
adc
dec
jl
stos
addr16
enter
int
fwait
sbb
js
lahf
mov
loopne
mov
add
outsb
or
loopne
outsb
cmpsl
les
subb
or
fmuls
jbe
dec
and
cmp
cmp
inc
sbb
or
push
mov
inc
cs
rorb
push
dec
fnstsw
pop
mov
mov
dec
loopne
lds
pop
sub
out
outsl
std
pop
int3
cmp
or
aad
lock
and
push
sub
fucomi
mov
cmp
mov
fisttpll
fsubl
dec
mov
sub
or
stos
mov
lock
movsb
mov
mov
cs
xor
popf
dec
pop
cltd
lret
test
mov
lcall
mov
je
inc
or
sub
jo
push
and
jmp
jmp
in
lret
sbb
idivl
mov
fnstsw
in
je
push
jg
xchg
sub
cmpb
les
inc
aas
inc
setl
push
mov
lock
mov
je
mov
insb
sbb
push
iret
push
sub
push
repnz
into
adc
push
clc
pop
aam
in
outsb
leave
xlat
and
in
outsl
cmp
into
movl
ljmp
push
je
lock
pop
hlt
mov
mov
bound
mov
insl
enter
mov
outsb
jb
cmp
pop
aaa
test
lock
movsb
jl
pop
dec
fcoml
icebp
push
hlt
loope
push
popa
dec
ret
lock
mov
lea
lds
inc
nop
divl
push
cmp
in
insb
idivb
mulb
xor
mov
pop
outsl
push
rorl
push
pop
pushf
rolb
xchg
sbb
push
sbb
in
mov
add
lea
dec
mov
mov
ja
call
loope
out
je
pop
and
orb
xchg
jmp
xor
mov
push
lea
lods
ja
inc
ret
cmp
add
divl
iret
xchg
cmp
hlt
sbb
pop
mov
ficompl
push
pop
push
xor
jns
jno
in
outsb
ficompl
and
aas
fildll
in
imul
push
fbld
popf
sbb
xchg
imul
jb
sbb
inc
sub
icebp
adc
sub
cmpsl
jl
jl
jno
push
cmp
mov
test
bound
clc
movsb
push
data16
movsl
jge
dec
sub
jne
sbb
mulb
push
or
lock
iret
xor
call
add
or
sbb
js
scas
push
cli
aam
and
mov
mov
jecxz
adc
ret
mov
add
pop
lds
cs
int
lret
lods
mov
lods
je
pop
call
jp
inc
sbb
sub
fstp
gs
inc
pop
mov
and
cmp
scas
rolb
lcall
dec
leave
xchg
sbb
cmp
mov
insb
inc
loop
jge
mov
inc
loope
inc
sbb
sub
xchg
sbb
mov
cmpsb
ljmp
push
mov
shrb
ja
xor
or
push
mov
dec
mov
push
pop
sbb
jecxz
repnz
arpl
and
mov
mov
inc
into
imul
jnp
lahf
push
dec
and
push
mov
sahf
jg
mov
sub
test
sbb
jae
xor
xor
push
push
and
daa
icebp
jge
addb
adc
in
dec
enter
sub
push
cmp
repnz
mov
inc
mov
mov
aam
incl
jns
in
fnstenv
jo
insl
adc
mov
mov
xor
aas
cwtl
dec
mov
adc
sub
inc
xchg
xchg
std
mulps
add
inc
lea
out
sub
jne
dec
add
and
pusha
adc
adc
mov
jge
mov
add
call
repz
mov
lock
mov
dec
loope
in
icebp
cmc
enter
mov
movl
xchg
mov
xor
xor
js
inc
and
call
xor
std
test
cld
dec
sub
xor
fistps
xor
loop
xchg
add
add
fs
xchg
and
adc
push
shrl
jge
add
cmp
mov
pushf
lds
jecxz
mov
loop
cmpsb
sbb
andl
push
arpl
in
dec
fidivrs
flds
fdivrl
out
jecxz
jmp
mov
fstl
movsl
int3
inc
cmp
cmp
xor
out
sbb
jle
fsts
lods
imul
pop
outsb
jo
fdivrl
fs
aas
scas
mov
inc
stc
es
shlb
push
cli
fwait
push
outsl
push
xor
lahf
loopne
cmpsl
lock
sub
dec
sbb
sbbl
mov
mov
cmp
adc
lods
outsb
bound
xor
jle
xchg
jno
daa
cmp
and
fwait
mov
stc
adc
pusha
inc
dec
loope
push
and
fdivr
xor
sub
sbb
notl
push
xchg
mov
and
mov
cmpsl
lahf
jb
add
pop
cmp
add
imul
data16
jp
arpl
xchg
dec
adc
xor
jne
adc
jbe
sub
imul
movsb
in
rolb
aaa
mov
les
xlat
es
rol
mov
sub
add
aas
or
add
test
mov
sarl
pusha
mov
lock
std
daa
stos
leave
jp
cmp
lcall
andl
add
push
rcll
lret
das
add
or
es
dec
xchg
xlat
int3
xor
adc
fwait
movsl
xor
pop
pop
outsb
xchg
mov
lcall
mov
jl
lods
pop
cmp
mov
dec
adc
dec
or
mov
and
loope
mov
rcrb
cmpsl
clc
mov
mov
push
rcr
test
mov
or
cmc
rclb
adc
jne
sbb
inc
push
pop
mov
shll
sub
push
jg
dec
pop
mov
notb
ret
loope
dec
fwait
popf
je
in
xchg
lcall
cwtl
xlat
out
dec
lret
stc
sbb
insb
dec
out
cmp
inc
add
imul
addr16
dec
test
repnz
pop
mov
add
and
mov
lods
leave
clc
mov
pushf
jb
pop
add
xchg
push
sbb
mov
inc
addl
or
out
pusha
mov
cmpsl
mov
aam
addb
mov
xchg
cmc
dec
fs
push
test
dec
mov
or
or
inc
test
pmulhw
scas
jo
hlt
jl
sbb
jno
pop
dec
sbbl
jecxz
cmp
test
xchg
in
mov
stc
inc
int3
mov
or
das
push
pushf
sahf
lods
lods
rcll
mov
sub
int3
dec
mov
adc
stos
adc
enter
adc
pop
out
xchg
bound
jp
outsb
out
mov
mov
sbb
test
movsb
push
pop
ljmp
xor
stos
mov
mov
sub
mov
cmp
adcl
mov
cwtl
loop
mov
jnp
loope
into
rcrl
adc
daa
cwtl
sarl
and
loop
jle
in
or
push
aad
jecxz
and
mov
out
inc
xorb
push
push
std
sahf
data16
inc
push
add
jns
ror
inc
pusha
lcall
mov
mov
jbe
xchg
add
add
sbb
icebp
nop
sub
jno
jnp
pop
insb
test
sub
mov
aas
lea
fsubrs
xchg
mov
jle
inc
loopne
in
test
jle
sub
inc
fnstsw
pushf
dec
add
in
jp
mov
mov
out
cmc
adc
in
divl
sarb
xchg
rol
scas
sub
mov
lahf
pusha
int
les
xchg
pop
cmp
lds
mov
lock
ficoms
pop
inc
inc
xchg
cld
mov
leave
popf
mov
or
pop
pop
in
jns
lret
repnz
push
mov
movb
jle
stc
mov
sbbl
hlt
cmp
mov
cmpsb
pop
xor
cmp
mov
out
jns
xlat
dec
mov
dec
add
pop
and
mov
mov
jecxz
xor
pop
mov
lret
int3
inc
lcall
adc
fcompl
mov
xchg
das
ret
sarl
loop
adc
hlt
mov
jl
pusha
icebp
mov
xchg
mov
in
mov
add
pop
jnp
mov
insb
hlt
adc
call
mov
cmpsb
insl
mov
das
arpl
lods
into
cmp
into
rolb
f2xm1
adc
cltd
jge
dec
cwtl
pop
arpl
dec
lcall
mov
adc
shr
cmp
sub
int
repnz
jl
push
inc
inc
test
enter
ret
hlt
das
popf
dec
cltd
mov
pop
jge
sub
push
xchg
push
jg
or
jmp
xchg
jge
mov
inc
aam
cld
fdivrs
faddp
in
sub
fnstenv
sbb
fadds
mov
pusha
sbb
stos
xchg
lcall
or
push
or
add
inc
mov
imul
xor
stc
jmp
pop
into
les
js
imul
inc
pop
mov
xchg
enter
adc
adc
cmpsl
cld
fidivs
jmp
push
jl
mov
adc
out
div
aas
mov
shll
into
sbb
aas
bound
pop
sahf
push
test
jp
nop
dec
adc
xchg
mov
xchg
add
scas
mov
gs
cmp
pop
and
xor
lock
lods
sahf
cmp
aas
loop
pop
pop
mov
pop
js
xor
scas
and
sbb
insb
push
adc
or
out
ljmp
test
cmc
jb
popf
jle
push
xor
inc
and
sarb
nop
mov
cli
and
loopne
mov
rcr
and
xor
mov
xchg
rcrb
push
pop
cs
mov
cmpsl
pop
adc
mov
jle
sub
je,pt
cs
sarb
sbb
js
dec
add
xchg
outsl
or
idivl
sahf
in
repnz
mov
push
inc
aam
fsubs
adc
ret
leave
dec
dec
mov
push
sti
cmp
loopne
jmp
mov
push
adc
mov
jae
jmp
mov
jle
call
sbb
push
inc
xlat
fs
sub
out
cmp
sub
push
mov
int
pop
dec
or
sub
call
jne
enter
push
lea
mov
jle
add
cwtl
aas
fildll
add
sub
dec
outsb
mov
xor
jmp
test
mov
jo
jle
xchg
jle
cmp
enter
outsl
fildll
push
xchg
dec
push
xor
cmp
cmp
mov
fmul
dec
dec
xchg
mov
adc
xor
sub
push
fsubs
cmp
add
das
daa
push
lret
adc
xor
sub
mov
arpl
or
and
sete
pop
sub
adc
add
cmp
push
fstl
movsb
and
inc
leave
negl
or
mov
ds
movsb
arpl
push
fxsave
sbb
pop
insl
rorl
add
dec
paddb
dec
and
sub
cmpsb
popa
mov
jecxz
mov
clc
data16
das
pop
call
or
bound
rolb
mov
xchg
test
jne
lods
fnstsw
lock
or
push
inc
out
int
dec
or
sub
cwtl
push
out
pop
inc
insb
clc
test
hlt
inc
leave
loopne
sub
fs
pop
fistpll
arpl
sub
cmp
adc
or
xor
jle
sbb
pusha
mov
notb
mov
nop
sarl
bound
jg
jae
push
jns
dec
push
sub
fisubl
ljmp
mov
xor
pop
mov
lock
aad
imul
rclb
xchg
lret
cmpsl
sahf
mov
pop
lahf
dec
push
mov
xchg
xchg
mov
mov
sbb
sub
std
adc
jmp
mov
cmpsb
sub
imul
sbb
adc
mov
test
adc
test
xchg
mov
fwait
push
lds
fs
or
mov
popf
call
out
xchg
fistl
es
mov
pop
lods
ss
mov
int
lret
fbstp
addb
jl
inc
les
fsubrs
aaa
outsl
xor
mov
aaa
scas
insb
callw
testb
pop
lret
cltd
dec
lock
mov
sets
dec
jne
mov
jnp
jae
dec
shrb
jbe
gs
fcomp
mov
mov
je
jbe
xchg
frstor
mov
dec
pop
dec
orl
xor
test
add
in
sub
xchg
mov
sarb
or
add
test
jle
add
push
jne
ret
shr
or
xchg
pop
inc
mov
ljmp
icebp
jbe
outsb
xchg
hlt
pop
xchg
ds
or
shll
cmpb
iret
imul
repnz
dec
out
xchg
mov
xor
jo
jae
fisttpl
sub
mov
xchg
and
mov
mov
xchg
movsb
cld
out
stc
pop
daa
sti
dec
testb
outsb
fadds
jg
pop
aad
sti
inc
push
cs
insb
dec
dec
mov
jge
pop
bnd
or
push
fbstp
xor
sti
jnp
int
mov
mov
push
inc
sti
dec
int3
mov
dec
jge
add
nop
fcompl
hlt
cmp
push
insl
ljmp
in
or
cmp
xchg
lea
inc
add
mov
and
push
or
and
lcall
das
pop
cmp
imul
xor
adc
xor
fwait
sub
or
push
das
fcomps
stc
mov
insb
sbb
stc
or
inc
mov
push
jns
arpl
rclb
jae
mov
mov
adc
rcll
fimull
push
pop
fwait
sahf
sbb
pop
jnp
sub
jns
js
jmp
push
aaa
rorb
inc
pop
outsb
in
push
sub
xchg
aas
xchg
in
pop
mov
xchg
mov
leave
jmp
sbb
push
das
add
jb
lods
push
cwtl
push
adc
pop
in
mov
rcrl
cmpsl
and
fists
sbb
sbb
sbb
int
fs
xchg
xchg
mov
cmc
adc
mov
xor
add
js,pn
ljmp
mov
push
lds
popa
repz
fbld
insb
les
test
inc
inc
push
cli
rolb
mov
and
sbb
mov
sahf
es
daa
mov
test
jae
dec
outsl
int3
sti
push
or
cmpsb
mov
or
scas
loope
fld
xlat
orl
in
sbb
cmp
sub
dec
call
cmp
xor
xor
cmp
out
jmp
jle
xor
dec
pop
std
in
sbb
ucomiss
dec
push
shlb
inc
dec
incb
xchg
lods
rcll
inc
addr16
mov
sbb
rcrl
adc
jnp
mov
mov
ds
add
scas
cmp
pop
pop
mov
mov
push
lods
adc
sub
aam
add
cmp
fistpl
jno
aam
inc
call
es
imul
pusha
and
add
mov
call
loope
js
jl
andl
icebp
mov
lock
mov
mov
int3
inc
bound
xor
dec
jnp
and
dec
cmp
xchg
push
lahf
xor
cmp
push
decl
adc
mov
les
mov
jmp
mov
lret
subb
and
inc
adc
inc
cmp
and
ds
int3
add
fisubs
push
repz
jmp
adc
xor
and
lock
subb
cs
pop
and
in
mov
cs
xchg
fadds
jae
ds
xchg
cmp
sub
mov
mov
clc
mov
add
enter
das
insb
sub
lret
push
addr16
inc
push
shlb
xor
fidivrs
sbb
rolb
inc
scas
dec
lock
fs
sub
cld
cmc
ret
aas
cmc
nop
fldenv
push
test
lret
ficoms
sub
jmp
mov
push
repnz
push
loop
in
repnz
lods
aad
dec
notl
mov
cmc
imul
pop
jle
xchg
or
push
lods
pop
add
mov
mulb
lahf
scas
push
ss
outsl
mov
fs
in
xchg
sub
pusha
pop
aas
fcomp
mov
jo
sub
jbe
shlb
push
imul
js
stc
idivb
test
mull
sub
sub
cli
in
push
mov
inc
icebp
arpl
out
or
cli
sbb
push
xchg
pop
scas
clc
fsub
jo
pop
sub
popa
sub
sbb
mov
jmp
sub
repnz
ljmp
movsb
out
out
cmp
sub
push
out
cmc
mov
adc
pop
adc
adc
jns
sub
push
jbe
test
mov
outsl
jnp
out
push
inc
fs
and
or
ds
jecxz
ds
lods
loop
call
int
jae
xor
lods
cmp
mov
nop
xchg
cmp
mov
xchg
test
ds
lock
insl
adc
jnp
inc
xor
ja
lcall
out
aaa
call
and
pop
shl
push
pop
lock
mov
repz
cmpsl
fdivrp
dec
shll
aad
lret
fs
mov
mov
idivb
push
int
adc
add
nop
pop
xchg
xor
test
inc
mov
pop
loopne
jno
mov
or
aaa
mov
pusha
mov
in
fbstp
aam
cmpsb
mov
into
hlt
jae
or
leave
insl
inc
call
push
rcrb
stc
dec
push
push
test
pop
push
test
fs
insl
inc
clc
dec
shl
cld
dec
divb
cmc
and
loop
test
cwtl
mov
enter
jmp
pop
andl
pop
sub
inc
ss
cmc
jg
xlat
adc
add
imulb
sbb
je
repz
and
cs
adc
ljmp
popf
hlt
dec
fisubl
imul
leave
mov
nop
rcrb
jecxz
rorl
iret
mov
dec
sahf
inc
add
arpl
movsb
sti
fbstp
sub
push
adc
repnz
push
adc
dec
dec
test
jg,pt
ret
outsb
jmp
test
daa
shld
inc
inc
out
and
sub
dec
daa
lds
sti
xchg
lea
inc
lea
add
cmp
jnp
jp
xor
xchg
xor
xor
inc
sbb
sub
and
loopne
ret
cmpsl
push
add
and
lods
push
test
pop
xor
adc
mov
jne
pushf
aaa
cmp
add
daa
pop
data16
lcall
cmp
jg
inc
stos
sbb
adc
fs
mov
ss
fs
mov
xchg
and
insl
cld
push
adc
ret
xchg
stos
andb
mov
cltd
loopne
mov
scas
cmpsb
shrb
sbb
out
lcall
int3
test
add
ret
sub
jb
stc
xchg
inc
pop
xor
lret
mov
xchg
or
xchg
and
xchg
movsb
xor
jnp
sbb
loop,pt
mov
vpsubsb
sbb
jge
or
dec
aad
mov
push
mov
mov
ret
pop
shrl
xor
jp
mov
mov
ds
add
sbb
popa
cmp
loope
sti
insb
push
jns
lahf
in
shll
or
adc
dec
xchg
lods
jmp
xor
sbb
xor
mov
cmpsb
loopne
mov
lods
xchg
or
mov
xchg
lret
dec
sub
mov
add
push
adc
lock
cwtl
dec
or
hlt
imul
shr
out
inc
xchg
dec
sbb
jp
std
outsb
fwait
mov
push
lods
addl
push
or
or
dec
mov
leave
push
push
cli
fidivrs
pop
inc
sbb
xchg
sbb
repnz
mov
add
andnps
and
add
dec
xor
sbb
dec
pop
stos
adc
xor
mov
cli
inc
inc
nop
xchg
mov
outsb
mov
insl
cwtl
mov
and
sbb
adc
pop
mov
inc
imul
loope
sbb
mov
push
jne
jp
xlat
pop
inc
sub
cwtl
mov
scas
add
std
cli
sahf
fs
mov
push
aad
jmpw
dec
mov
and
jg
out
or
push
outsl
shll
testl
pop
jle
and
jno
cmc
in
aad
addr16
sub
mov
sub
rorb
arpl
adc
cmpsl
arpl
lods
imul
mov
insl
std
mov
jo
jl
aaa
cmp
or
mov
jmp
ja
loop
cmpb
pop
mov
push
mov
cmp
in
ljmp
rclb
xchg
lret
stc
shl
and
fs
test
sbb
les
ja
outsl
mov
sub
or
jae
xor
lods
mov
je
in
addl
lea
in
cli
inc
lret
jne
lcall
mov
leave
popa
out
lahf
pop
je
xor
lods
lret
push
inc
cmc
jmp
jns
subl
or
xchg
insb
nop
insb
xor
inc
in
xchg
sub
mov
cmpsb
and
out
imul
jae
clc
or
adcb
and
xchg
pop
xor
sbb
xchg
aam
test
xchg
sbb
nop
and
in
mov
fs
adc
xchg
je
movsb
pop
sbb
jl
imul
cmp
mov
cmp
xor
adcl
sbb
test
xor
dec
sbb
bswap
and
ficoms
mov
xchg
pop
rcll
mov
sbb
hlt
cmpsl
in
es
das
cmc
test
mov
clc
jno
cmc
ss
mov
loope
incl
cmp
mov
rorb
out
adc
or
daa
fidivs
add
pop
xor
popa
clc
fsubrl
adc
lods
lret
lret
fs
inc
fadds
iret
sub
iret
inc
out
call
and
fcmovnu
sbbb
cmc
les
arpl
add
jae
sub
dec
loop
jl
out
loope
dec
imul
mov
mov
mov
mov
jo
sbb
sahf
add
dec
scas
dec
int
mov
or
or
aas
loope
cmp
imul
pop
insl
sub
jg
push
cmp
mov
popa
or
outsl
das
lock
mov
imul
adc
imul
shrb
sbb
pop
dec
xor
xlat
inc
flds
out
push
push
and
pop
xchg
stos
popa
mov
push
xor
pop
push
cmp
les
mov
cs
scas
mov
pop
dec
mov
mov
mov
and
aaa
mov
lea
cmpsb
aad
inc
aam
hlt
jecxz
sbb
jns
or
shlb
daa
pop
xchg
push
repz
out
mov
leave
sub
inc
jb
push
mov
adc
ds
fdivl
fbld
push
enter
mov
lret
mov
je
lahf
fstpt
pop
sbb
xor
mov
repz
pop
pushf
cmp
inc
aam
push
stos
mov
fld
jae
xchg
stos
add
ret
daa
jne
push
dec
es
int3
in
push
push
lret
jae
out
stos
jne
pop
test
or
cmp
dec
lahf
imul
mov
pop
xchg
push
push
cmc
sub
cmp
cmp
repz
cmp
orl
mov
xor
mov
jg
gs
sub
push
movsl
test
xor
sarb
ret
xchg
aam
lret
int3
data16
pop
int
mov
sbb
jb
sahf
test
push
ljmp
loope
outsb
adc
xchg
xchg
xchg
fists
sbb
xchg
pop
repz
pop
sbbb
shr
sub
pop
je
xchg
outsb
mov
data16
inc
jo
inc
mov
test
arpl
xchg
jns
popa
push
daa
add
mov
shrl
and
jae
test
out
push
loope
roll
mov
sub
or
xchg
incb
stos
imul
in
lret
sub
mov
mov
je
out
mov
fsubrl
or
stc
pop
xchg
adcb
jb
cmp
pop
and
xor
lret
jns
das
xor
ret
and
sbb
xchg
out
mov
push
call
mov
mov
aas
xor
in
dec
cmp
in
cltd
xchg
in
sti
and
lock
lret
xor
iret
add
js
orb
fidivs
sub
insl
rclb
add
jae
or
dec
loopne
sbb
sub
cli
add
je
push
pop
mov
dec
int
shll
daa
cwtl
cmpsb
pop
das
dec
outsb
dec
push
scas
insb
lods
or
lea
or
faddl
and
pop
arpl
mov
fildl
cmc
mov
outsb
das
ret
mov
pop
mov
icebp
push
fneni(8087
les
sub
sbb
arpl
mov
cld
jmp
mov
mov
mov
dec
and
pop
movl
es
pop
dec
pop
cmp
inc
insl
xchg
xor
push
insb
adc
cmp
jno
jl
loopne
inc
movsl
or
iretw
cli
add
movsb
xor
xor
or
sub
sbb
sahf
jmp
jo
rcll
mov
mov
mov
pop
pop
sahf
shlb
call
pop
jnp
int3
jg
add
xchg
xchg
or
je
cld
pop
adc
jne
bound
pop
test
sub
fbstp
fs
add
sub
ret
xchg
mov
sbb
addr16
pop
xor
jno
in
or
jecxz
fmul
jns
pop
outsl
add
push
jle
mov
stos
inc
lahf
push
push
pop
clc
movsb
popa
xchg
lahf
scas
adc
cltd
xlat
std
sub
lret
jg
jecxz
mov
adc
sub
addr16
sub
xor
mov
pop
dec
jno
bound
int
mov
aad
hlt
jne
push
dec
rcrb
adc
xchg
adc
or
xchg
fwait
push
jp
ja
pushw
testb
push
jge
sbb
and
fstps
cmove
in
dec
inc
lods
pop
in
ret
cli
loope
mov
stos
pop
pop
jmp
sahf
xchg
mov
bound
jnp
lods
sbb
mov
div
bound
xor
adc
sbb
push
pop
es
or
into
in
outsl
mov
pop
fwait
das
jne
test
sub
add
cmp
pushf
inc
fwait
sar
std
push
and
mov
mov
ss
push
bound
mov
pushf
mov
sbb
xchg
std
outsl
sbb
push
or
rolb
push
push
fwait
aam
lcall
les
or
je
mov
in
loop
es
push
or
and
or
imul
cmp
mov
mov
test
insb
pop
sub
sahf
cli
jne
jne
sbbl
nop
add
sub
or
insb
sbb
lret
lods
pop
stos
push
pop
jo
jge
pop
inc
movsb
js
mov
jmp
sub
loop
je
xlat
mov
pop
push
mov
mov
sub
outsl
sbb
nop
out
sbb
js
xchg
out
push
cmove
xorb
test
test
cs
mov
dec
inc
sbb
lods
add
mov
idivb
rclb
jnp
loopne
pop
and
lock
ret
adcl
cltd
push
cmpsl
das
jge
les
test
adc
add
int
inc
sahf
aaa
in
jle
mov
adc
push
lods
xor
in
outsl
ja
mov
and
in
pop
outsb
addr16
jp
add
add
movsb
iret
vmptrld
push
jl
xor
out
test
jb
adc
adc
fcmovnu
out
stos
sub
pop
or
imul
shl
cmp
jb
mov
stos
fwait
dec
dec
push
das
inc
imul
jl
fxtract
lods
das
bound
xchg
dec
adc
pushf
jp
out
int3
out
sbb
lahf
add
testb
cld
in
xchg
imulb
lds
sub
out
ret
inc
nop
int
push
insl
push
push
dec
push
push
dec
loope
pop
psllw
cmp
push
lods
cmp
push
pop
jg
jl,pt
add
adc
lds
or
add
pop
subl
jecxz
sahf
xchg
mov
out
subb
inc
or
add
xchg
sbbl
pop
and
mov
mov
jnp
neg
stc
adc
fisttpll
dec
mov
outsl
pop
xor
imul
scas
sub
pop
daa
sti
jae
loop
push
mov
jbe
and
jne
imul
pop
iret
push
cmc
xorl
adc
lea
pop
push
mov
sbb
mov
fdivl
ss
icebp
sbb
inc
int
cmp
in
sbb
jb
arpl
mov
mov
mov
mov
xlat
mov
adcl
cld
outsl
sti
ds
jo
xor
int3
out
call
pop
or
lods
mov
jnp
jge
adc
mov
lret
in
sub
test
or
lock
fsubl
cmpsl
sbb
ljmp
jmp
test
mov
inc
sbb
add
mov
sbb
mov
mov
lds
in
xchg
adc
cs
std
jne
mov
sbb
pop
cmpsb
sar
lea
repnz
jae
jecxz
cld
add
lret
outsl
dec
mov
aad
and
mov
xchg
lcall
jno
sub
roll
rcll
aam
ljmp
cmp
xchg
pushf
ficoml
cltd
pop
aaa
mov
je
rorb
xchg
out
lods
jb
sbb
mov
push
push
es
jg
mov
popa
and
mov
dec
push
es
mov
out
or
push
insl
add
loop
sahf
shr
or
adc
or
dec
jmp
mov
inc
fsubs
rorl
add
mov
push
enter
fistps
int
daa
mov
jge
inc
test
rcll
ret
lods
cmpsl
push
adc
das
popf
mov
xchg
hlt
test
or
fisttps
sbbb
mov
std
mov
inc
cmp
xor
jae
mov
and
mov
into
jecxz
push
notb
outsl
lahf
pop
or
cmpsl
and
mov
lahf
loope
pop
aam
movsl
popf
jle
adc
or
and
mov
fwait
fwait
stos
js
popf
in
dec
test
inc
insl
xchg
push
cli
shll
mov
rorb
hlt
push
dec
add
sbb
and
xchg
rcrb
push
je
stos
int3
adc
popa
push
lahf
imul
sbb
mov
mov
or
dec
repnz
pop
mov
sbb
or
outsb
inc
pop
shrb
ja
jl
mov
jns
loope
fucom
pop
cwtl
vpunpckldq
flds
dec
aad
jns
sbb
mov
xor
ret
test
pop
inc
insl
mov
mov
stos
cmc
stos
and
mov
inc
xchg
xor
stos
mov
add
sahf
push
pop
sti
xchg
jno
rorb
popf
cli
jecxz
adc
cmpsl
dec
mov
test
insl
ljmp
rolb
xor
hlt
xchg
xor
cmpsl
inc
aam
xor
test
push
sub
xchg
cmpsb
dec
push
jno
cmpsl
or
adc
mov
sarl
mov
ret
out
jns
sbb
pop
mov
mov
das
pushf
test
pop
jp
aam
push
xchg
jo
inc
cs
push
and
inc
and
and
jno
xor
mov
inc
fs
xlat
iret
mov
mov
push
bound
inc
sub
mov
loope
cmp
and
push
mov
mov
push
clc
outsl
cmpb
xchg
mov
add
addr16
dec
in
push
rcrb
int
cmpl
xchg
pop
cmpsl
cmp
sub
mov
sahf
inc
and
jecxz
push
xchg
mov
aas
aad
in
dec
mov
cmpsl
jne
dec
testl
incl
mov
adc
xchg
sub
sub
movsb
cltd
push
je
negb
aaa
push
popl
sahf
lods
inc
fisubl
xorb
fidivl
xlat
pusha
mov
sub
or
jp
shlb
fsubrl
pop
add
push
testl
jge
lahf
cmp
imul
scas
mov
shlb
in
cltd
das
adc
mov
loopne
jb
adc
dec
mov
mov
les
dec
mov
jle
out
mov
mov
sbb
aad
inc
rcll
xor
sub
sub
inc
gs
cwtl
das
jae
pop
cmp
sbb
sbb
inc
jp
pop
inc
push
pop
stc
dec
mov
mov
lds
inc
fisttpll
out
pop
push
das
xchg
lret
inc
pushf
fyl2x
mov
call
xchg
test
inc
lret
movsb
dec
or
lds
dec
mov
sbb
push
push
push
in
js
mov
mov
push
test
cltd
add
rcl
out
mov
cmc
push
mov
outsl
leave
out
jae
xchg
outsl
adc
addl
push
or
jbe
mov
in
sbb
mov
into
pop
outsb
in
add
test
xorb
js
mov
jae
out
loop
jp
sbb
inc
push
nop
or
push
mov
jle
dec
add
cltd
and
jmp
mov
movsl
rorb
xchg
mov
imul
rclb
or
or
xchg
sbb
ss
leave
imul
sbb
pop
les
adc
inc
outsb
je
sarb
xor
bound
mov
out
mov
mov
out
sub
stc
rorb
mov
and
mov
testb
mov
dec
mov
xor
jae
xchg
mov
mov
enter
jnp,pn
mov
xchg
pop
pop
mov
mov
std
fldl
stc
adc
xchg
aad
dec
add
and
jo
popa
xchg
sahf
and
cs
fcoms
rcl
cld
dec
inc
mov
jp
cmp
pop
test
rorl
es
and
ficompl
dec
push
mov
mov
push
sub
pop
mov
movsb
pop
int
fsubs
inc
fstpl
inc
aas
dec
mov
lods
outsl
test
inc
loope
orb
mov
adc
ret
or
ss
stos
mov
in
shl
js
fisttpll
adc
or
loope
add
out
cld
test
or
bound
pop
cmp
aad
testl
mov
scas
mov
mov
pop
ljmp
icebp
cltd
rorb
aas
xchg
xchg
pusha
push
mov
iret
lea
inc
adc
dec
mov
outsl
pop
push
pop
xlat
or
xchg
out
xor
sub
cwtl
in
stos
or
sti
xchg
test
sahf
lret
push
push
inc
fmuls
lahf
ljmp
call
jle
xor
push
and
sti
cmp
cmpsb
xor
data16
jmp
add
dec
sarl
and
cmp
in
cmpsl
mov
xchg
push
outsb
xor
add
rcrb
sbb
aad
hlt
cmp
xchg
dec
cli
outsl
loopne
push
push
jle
dec
arpl
aad
cmp
stc
cmp
mov
cmp
jo
or
rcr
dec
adcl
pusha
push
cmpl
push
test
jb
test
int3
iret
cmpsl
mov
cmc
fistps
xchg
push
lahf
mov
push
xor
push
dec
call
mov
xchg
dec
xchg
pop
sub
lcall
sahf
xor
xchg
test
stc
loop
daa
push
fstpt
mov
jmp
js
cmp
pop
mov
lret
inc
les
mov
jecxz
js
push
pushf
jge
pop
sbb
test
cli
insb
lret
sbb
mov
mov
jnp
sbb
add
cmp
xor
jb
das
aam
les
pop
xor
sub
mov
cmp
jmp
mov
adc
mov
shrb
xchg
movsb
xchg
fstp
xor
xor
pusha
hlt
pop
inc
mov
inc
jb
add
clc
add
mov
stos
pop
or
loope
ljmp
push
nop
mov
pop
push
dec
stc
cld
inc
fidivl
or
add
sbb
out
and
mov
and
jae
pop
mov
leave
sub
dec
pop
cmp
inc
or
mov
xchg
xchg
insl
adc
push
adcb
mov
push
cli
or
das
jl
mov
inc
jle
push
pop
es
rcll
inc
xchg
lcall
pop
cmp
std
dec
and
sbb
cmpsb
enter
mov
mov
inc
fucom
mov
jo
push
jno
adc
xor
and
sbb
test
cli
fmuls
cltd
out
stos
push
cmp
scas
cmp
in
nop
adc
movsl
dec
and
pop
mov
repnz
mov
xchg
sub
push
lds
or
jle
les
out
push
adc
add
arpl
inc
sub
out
mov
arpl
lock
ja
nop
push
adc
call
movsb
sti
dec
pop
imul
push
sbb
and
jns
adc
loope
and
pop
nop
fnstsw
lcall
xchg
je
popf
jo
adc
adc
lds
mov
mov
aaa
popf
shlb
mov
cmpsl
and
repz
iret
inc
jle
lods
cmp
xchg
xchg
cltd
push
sub
dec
pop
mov
push
jge
in
and
or
pop
inc
ljmp
imul
pop
bound
std
xor
jnp
loop
imul
rcr
mov
out
dec
scas
xor
adc
xor
hlt
int3
mov
ja
or
daa
insb
and
out
jg
repnz
aad
fwait
bound
jae
popf
dec
jnp
and
fwait
xor
sub
adc
adcb
hlt
in
inc
int3
xchg
add
aaa
pop
inc
xlat
out
test
mov
mov
leave
scas
inc
jmp
jo
outsl
or
mov
jo
cmpsl
lock
stc
jo
push
push
repz
into
pop
rcrl
jmp
addr16
lret
jl
push
inc
inc
imul
test
xlat
push
lods
mov
sbb
inc
out
mov
xor
ret
jg
xor
lahf
mov
push
mov
and
xor
xchg
idivl
and
xchg
pop
das
rcr
inc
pushf
dec
mov
push
mov
es
stos
dec
loop
mov
mov
xor
dec
and
mov
pop
push
lret
insl
pop
stos
xchg
arpl
jne
sub
rclb
or
insb
in
cltd
movsb
pop
pop
sub
out
cmpsl
js
mov
mov
ja
or
pop
inc
dec
push
js
out
mov
jb
or
cltd
adc
in
ljmp
push
xchg
shrl
or
aaa
cmp
leave
movsl
push
rcrl
aaa
or
inc
lcall
enter
cmp
xchg
movsb
or
push
push
data16
push
fwait
adc
inc
inc
pop
and
xor
mov
test
mov
cwtl
and
stc
in
sbb
ja
imul
leave
dec
ja
inc
test
jae
test
stc
sbb
xor
sub
xchg
fs
je
call
je
cmp
pop
cmp
push
in
sarb
adc
lahf
repz
call
xchg
sub
xor
pop
cmp
data16
push
xor
adc
mov
or
jl
out
jo
add
mov
frstor
sub
cwtl
mov
adc
test
mov
pushf
sbb
or
test
ret
and
roll
mov
cmp
pop
push
fsubrs
xchg
aaa
insb
in
inc
fisubrs
mov
cmpb
ds
push
push
std
push
cmp
ficomps
inc
cli
sbb
arpl
out
mov
xchg
pop
adc
sub
testl
jno
outsb
mov
cld
add
pop
mov
outsb
data16
popf
inc
imul
daa
jbe
sub
xchg
jg
insb
mov
into
jmp
bound
adc
inc
xchg
jle
mov
popa
mov
jmp
jne
jo
pop
aaa
lret
xchg
test
xchg
iret
pop
out
std
mov
and
sub
jl
test
in
push
rolb
in
popf
ret
xor
flds
das
sbb
cmp
inc
dec
jmp
iret
incb
mov
and
les
or
add
aaa
mov
dec
mov
movsb
mov
aas
outsl
xchg
test
mov
out
rorb
or
sbb
loopne
cmp
sub
jb
inc
cmp
in
add
cwtl
mov
fbstp
add
sub
cmp
sbb
stc
sahf
divb
mov
fsts
and
out
sub
pop
inc
xchg
mov
mov
js
test
call
nop
arpl
inc
jo
mov
mov
pop
push
sub
outsb
int
push
fs
sub
aad
add
mov
jns
andb
andb
leave
repz
push
lret
nop
cmpsl
pushf
aam
lods
addr16
mov
addl
push
sbb
mov
dec
scas
xchg
clc
xchg
movl
push
cmp
inc
mov
xor
or
xchg
je
dec
xchg
and
mov
scas
lcall
std
xchg
insb
push
dec
xchg
mov
and
cmp
cmc
aas
sub
sahf
rorb
pop
adc
adc
inc
je
mov
test
rcrl
dec
mov
adc
inc
and
cmpsb
out
adc
sti
daa
jnp
cmp
mov
mov
lret
sbb
mov
inc
sub
in
inc
outsb
mov
inc
das
out
or
dec
mov
xchg
test
andb
push
jp
pop
jns
push
xchg
cmp
jp
add
in
sub
lcall
push
inc
iret
mov
test
pop
pop
jmp
cmp
mov
or
mov
xor
flds
pop
lods
in
push
rclb
gs
loope
ja
inc
push
dec
decl
aaa
and
pop
jmp
sub
ds
sahf
mov
mov
or
jnp
fisttpll
ror
out
mov
xchg
push
add
insl
movsb
xchg
ror
dec
and
pop
and
outsb
sar
mov
jne
xchg
into
pop
mov
jns
scas
jns
scas
out
enter
data16
inc
test
sbb
lret
bound
loope
jg
pop
mov
add
movaps
pop
xchg
rcrl
clc
inc
xlat
adcl
rolb
xor
fdiv
and
jnp
inc
lahf
clc
fs
adc
inc
imul
fcmove
jmp
sbb
jae
pop
fimuls
cmp
fwait
cmp
into
cmpsl
adc
mov
jo
stos
xlat
or
fsts
sbb
mov
push
jmp
fwait
ss
inc
add
lods
jnp
cwtl
mov
out
push
fs
and
push
data16
faddl
push
sbb
inc
inc
adc
mov
cmpsb
icebp
fdivp
test
sbb
inc
xor
leave
decl
push
movsb
call
push
rcll
jne
xchg
test
movsb
rorl
jle
adc
mov
inc
icebp
or
jae
jbe
pusha
dec
lods
out
notl
popa
lahf
dec
pushf
ds
adc
daa
in
in
pop
insl
xlat
jmp
shrl
fnsave
pop
jg
xor
test
jno
xchg
push
sbb
jns
add
push
aad
inc
lret
inc
xchg
and
repz
xchg
push
stc
dec
popf
loope
imul
xor
inc
mov
sub
push
je
lret
popf
scas
jns
mov
and
in
push
jmp
dec
xchg
mov
mov
mov
daa
inc
out
in
add
or
ja
out
stc
dec
add
scas
lcall
mov
sbb
push
ljmp
sahf
imul
idivb
stos
adc
sbb
fbstp
dec
jg
inc
in
lds
mov
and
call
loope
or
sti
bound
mov
jnp
call
hlt
cwtl
jmp
jbe
jno,pn
mov
stos
in
xor
mov
pop
xchg
inc
aaa
fwait
pop
stos
mov
lret
ljmp
jge
push
outsb
inc
frstor
lods
xor
inc
jge
aam
cltd
std
addr16
nop
pop
jmp
lret
push
mov
lret
mov
sub
push
test
mov
jp
inc
into
sar
stos
pop
popf
les
or
dec
lods
add
lea
cltd
sbb
or
inc
icebp
inc
lret
and
rcrb
or
pop
jns
dec
mov
xchg
push
xchg
xor
xor
movsl
dec
sub
rcrb
sub
and
sar
out
cmp
subb
add
xlat
xchg
lods
aam
cmpsb
xchg
push
lods
hlt
fistpll
mov
ja
cld
lock
sbb
pop
enter
out
out
inc
mov
adc
jp
cmc
repnz
int3
sub
push
mov
push
push
sub
xchg
loopne
cmp
pop
adc
add
mov
jmp
ja
scas
and
pop
inc
fwait
outsb
lods
inc
dec
mov
cmp
jno
shl
pop
imul
and
mov
divb
or
ja
jns
imul
xor
sarb
pusha
cmp
arpl
in
xchg
shlb
cmpsb
mov
xor
dec
in
adc
leave
test
sbb
fldz
xor
jp
les
rorb
movb
mov
sub
jg
pop
mov
ljmp
xchg
or
mov
pop
shlb
movsb
xor
ja
icebp
fcmove
test
ss
mov
sub
aad
ds
sub
movsb
jmp
mov
dec
fidivrl
inc
int
ret
lcall
mov
sub
jle
pop
mov
xchg
jl
fwait
notl
inc
pop
lock
enter
xorl
sbb
mov
mull
mov
outsb
addb
pop
adc
rolb
ficomps
loope
repz
xchg
aad
push
pop
push
pop
lret
xchg
aas
and
mov
movsl
sbb
push
mov
xchg
lahf
hlt
inc
xchg
es
pop
jmp
cwtl
xor
je
mov
fldenv
xlat
dec
cmpsb
int3
sbb
daa
xchg
pop
pop
lods
std
dec
lea
mov
rcrl
mov
mov
imul
cmpsb
pop
lcall
mov
pop
or
sub
ds
in
in
push
cmp
pop
xchg
pushf
imul
xchg
dec
mov
or
jg
rcll
adc
inc
adc
adcb
outsl
push
add
mov
push
divl
or
xor
sbb
push
inc
jg
pop
lods
inc
adc
push
nop
mov
insl
sahf
outsl
data16
and
roll
sbb
jg
sbbb
enter
sbb
xor
xor
sub
movsb
adc
gs
mov
in
mov
mov
lret
sbb
bound
mov
filds
and
lds
cmpsb
mov
jmp
nop
jbe
push
mov
sub
mov
mov
ficompl
movsl
mov
xchg
inc
movsl
mov
dec
ja
es
rolb
loope
adc
daa
cli
cmp
mov
cmc
mov
jae
es
fcmovnb
sub
jmp
lret
and
fldl
jns
jg
scas
mov
into
inc
arpl
in
popa
ds
lods
mov
xor
push
outsb
push
mov
push
add
notl
add
pusha
pop
inc
jae
stos
push
adc
mov
test
xor
sbb
cld
adc
mov
adc
addr16
pop
imulb
leave
sbb
dec
pop
pop
mov
pop
jno
mov
bound
fists
aaa
loope
test
clc
push
mov
add
loop
mov
and
sbb
shl
adc
sti
sbb
inc
push
jb
and
insb
or
dec
ss
inc
pop
inc
hlt
sbb
add
shlb
fsubs
pop
movsb
pop
movsl
cmpb
jge
ss
inc
sbb
cmp
add
or
bound
inc
jle
jmp
cmpsb
mov
jecxz
jl
ret
cwtl
mov
and
push
push
xor
adc
fbld
dec
push
addl
mov
pop
cs
in
sti
insl
js
in
mov
int
pop
int
mov
daa
vcmpsd
loop
jmpw
sub
cmp
les
mov
lcall
jns
inc
rclb
lret
mov
mov
jo
test
dec
and
jg
push
mov
rcr
aad
call
das
or
and
ja
pop
xor
add
push
clc
add
es
in
outsb
test
cmp
mov
enter
jle
sarb
lock
cmp
xchg
or
incl
mov
or
xchg
xchg
mov
inc
rcrb
std
test
sarb
enter
lods
fcom
add
out
into
dec
inc
jmp
push
fs
mov
jmp
push
sti
outsb
lods
mov
shl
jno
out
scas
rorb
and
push
mov
sbb
dec
xor
xchg
or
std
mov
cmp
inc
stos
pop
xchg
test
loope
add
pavgb
xchg
or
mov
test
or
aas
outsb
fnstsw
insb
push
sub
mov
xchg
cmpl
push
xor
stc
mov
aam
shr
outsl
out
movsb
neg
mov
insb
dec
leave
xchg
jg
cvtpi2ps
lock
or
sahf
loop
pop
inc
lods
xor
push
in
stos
sub
movsb
xchg
xchg
push
popf
xchg
decb
xchg
mov
adc
movb
into
lahf
out
sub
sub
and
mov
or
out
js
dec
movsl
fistpll
mov
jnp
in
sub
je
xchg
mov
pop
inc
dec
jne
fld
lret
add
icebp
pop
mov
mov
jno
jg
sbb
inc
adc
or
push
scas
xchg
fcomps
or
loop
in
mov
sub
dec
mov
ljmp
mov
ds
loop
leave
rclb
inc
jb
js
fnstenv
add
stos
clc
dec
mov
repnz
xchg
enter
mov
aad
jmp
fistl
mov
repnz
test
xchg
mov
mov
ljmp
movsl
imul
imul
push
push
rcrl
or
outsl
add
fcom
xchg
cltd
divl
lret
mov
inc
mov
lret
mov
jmp
mov
pop
lods
bound
frstor
jecxz
scas
or
loop
loope
mov
subl
pusha
xchg
jmp
test
add
popl
jns
aad
pop
inc
mov
ret
dec
xlat
cli
adcl
gs
outsb
std
xchg
jno
sub
dec
ret
pop
nop
mov
mov
pop
xchg
xchg
ds
outsl
jae
int3
mov
aad
ficompl
xor
or
dec
add
and
jns
xchg
out
add
sub
sti
in
daa
insb
dec
bndstx
hlt
mov
sbb
scas
xor
add
mov
mov
daa
xchg
jno
lods
cld
ja
xchg
jge
bound
jno
dec
lds
mov
mov
xchg
and
adc
mov
mov
push
call
push
ds
add
jae
sti
jae
jo
iret
mov
movsb
inc
push
dec
into
jns
lea
sahf
shl
sbb
sub
lahf
add
push
nop
rorb
jbe
ret
push
inc
call
mov
cmpsl
call
lods
mov
jbe
xchg
mov
adc
and
jne
and
or
mov
repz
shlb
jmp
push
add
addr16
push
xor
clc
jo
cltd
and
sti
cmp
pop
test
lea
sti
xorb
sub
into
mov
scas
fs
mov
add
cmp
xor
adc
cmp
shlb
insb
shl
xor
iret
repz
in
js
dec
clc
sub
and
sub
push
or
cli
adcl
insb
pop
sub
int3
ss
push
jmp
leave
loope
or
and
scas
adc
pop
hlt
sub
pop
xchg
cltd
pop
pop
mov
adcb
scas
pop
or
jmp
or
test
inc
divb
call
mov
jmp
sbb
adc
ret
pop
mov
and
jbe
and
xchg
pushf
cwtl
repz
sub
outsl
jle
add
jae
mov
mov
jbe
cmp
and
inc
sub
or
mov
popaw
jl
adc
pmulhuw
xor
mov
xor
and
adc
sahf
into
incl
jns
pop
inc
sub
xchg
test
fsubrl
push
or
cld
or
dec
add
jge
jns
dec
xchg
pop
dec
push
push
push
fiaddl
punpckhdq
push
sub
cld
pop
push
sbb
hlt
outsb
xchg
cld
pop
cmp
lret
arpl
or
mov
jmp
fdivrs
mov
mov
xlat
mov
mov
daa
cmpsl
mov
into
adc
add
incb
jns
pop
dec
into
dec
cmpsl
fmul
cmp
mov
adc
mov
fsub
movb
jp
xchg
inc
lret
and
cs
xchg
mov
and
pop
xor
add
adc
dec
inc
leave
sub
stos
dec
fistpl
inc
jb
pushf
mov
rcr
dec
push
std
nop
popf
iret
add
mull
pusha
sbb
mov
enter
mov
or
jge
mov
rorl
push
sahf
lcall
mov
adcl
scas
leave
lahf
mov
ret
dec
imul
sub
es
ror
sbb
cmpsl
adc
addr16
xor
xor
stc
push
dec
jge
jb
xor
dec
jmp
jecxz
pop
lds
or
cli
ficoms
call
and
mov
push
ds
xchg
add
test
repnz
cli
popa
sbb
test
inc
sub
push
jb
lret
pop
mov
in
je
dec
sub
outsb
stos
imul
enter
lcall
out
and
into
aaa
popf
mov
dec
xchg
jno
fnstsw
stos
les
pop
xchg
pusha
xchg
and
cli
mov
pushl
cmp
sbb
imul
bts
sub
addb
adc
and
dec
mov
push
cs
push
push
add
das
das
insb
flds
shl
repnz
in
jle
in
xchg
js
push
adcl
mov
mov
stos
vmovntps
repnz
xchg
ds
js
mov
lcall
sbb
jnp
mov
mov
orl
or
inc
xchg
sub
fmuls
mov
mov
dec
popa
inc
jmp
dec
mov
je
jp
xchg
adc
jb
push
adc
int
in
add
into
rcrb
add
ror
and
fcmovnbe
xchg
cltd
enter
mov
subb
pop
or
xchg
cmp
mov
jmp
movsl
mov
pop
outsl
mov
iret
fcomps
andl
lds
lock
jle
jp
pop
push
adc
dec
sub
xchg
aaa
lahf
nop
das
push
stos
xchg
jae
es
jge
lahf
iret
add
incb
mov
mov
out
or
xor
lcall
insb
jge
pop
test
cmp
push
cmc
xor
fcom
cmp
xchg
fnstenv
sahf
enter
insb
call
push
add
fiadds
mov
call
mov
xchg
inc
imul
xor
xchg
ds
dec
lret
push
test
jg
lret
pop
jno
popf
adcl
xchg
jb
push
lock
jg
pop
pop
les
js
jno
mov
push
popf
int
loop
sbb
lods
in
cmp
outsb
sub
dec
push
lret
in
or
in
xor
pop
sub
insb
dec
mov
fwait
push
adcl
je
or
dec
sbb
addr16
jmp
pop
mov
mov
cmpsb
lret
test
dec
xor
cmc
mov
arpl
data16
test
fwait
sbb
add
adc
adc
cmp
loope
js
mov
mov
ja
ljmp
std
inc
dec
inc
cld
mov
inc
pop
push
xor
inc
daa
aas
ret
aaa
add
div
js
dec
jmp
jecxz
test
cmp
pop
out
pop
cltd
js
mov
add
ds
sbb
push
mov
cmp
test
jmp
mov
std
pop
popf
jno
jo
dec
into
fildl
add
pop
xorb
stos
stos
push
xchg
jecxz
xor
sub
push
pop
neg
add
out
jne
pop
leave
push
inc
mov
rcll
sarb
cltd
adc
jno
mov
mov
loop
ret
addb
mov
mov
inc
lods
xor
jp
fwait
movsb
hlt
scas
push
xor
scas
repz
hlt
cli
cmp
adc
add
add
out
mov
xchg
out
mov
cld
loop
push
into
ss
popa
push
fwait
pop
or
xchg
test
dec
rcl
push
stc
xchg
ds
jae
sbb
pop
into
push
sti
int3
lock
out
pop
xor
sub
ljmp
sarb
popf
mov
cmc
jmp
nop
sub
or
dec
jge
test
jno
loopne
pop
push
mov
push
sub
insb
lea
jns
and
mov
push
and
sub
jbe
adc
jl
popf
clc
mov
sub
inc
out
fwait
outsb
jl
push
inc
or
rol
xor
rcll
dec
into
xor
ss
out
xchg
adc
test
pusha
pop
cmp
or
xor
mov
cmp
jns
sbb
dec
push
or
lods
repz
push
faddl
and
push
shll
arpl
and
lods
or
cmp
icebp
rorl
inc
jb
dec
mov
andl
adc
cs
xchg
or
adc
and
pop
jnp
sahf
hlt
insl
loopne
ret
in
fldcw
mov
pusha
mov
jbe
xchg
mov
or
mov
mov
jnp
mov
mov
mov
add
mov
push
adc
mov
xchg
test
jno
sbb
mov
jb
add
movsl
or
je
push
shrl
neg
sbb
pop
sbb
jnp
pop
cltd
mov
daa
mov
mov
mov
jnp
pop
pop
sbb
ds
cmpsl
mov
cmpsl
mov
lcall
jae
call
mov
cmp
fs
shr
cmp
pop
jl
inc
mov
dec
and
mov
je
mov
mov
std
sub
test
sub
sbb
mul
dec
int
aaa
adc
ret
fcmovnbe
lret
lods
add
inc
mov
cmp
and
movsl
dec
sub
js
xor
ja
jb
sahf
aad
adc
ja
jp
and
mov
arpl
xor
loope
jnp
cld
xlat
cli
jge
and
addr16
pushl
push
scas
push
dec
push
cmpsb
add
push
into
mov
and
cmpsb
adc
aas
add
dec
sbb
imul
in
sub
mov
out
test
lahf
xchg
scas
stos
loope
dec
push
jae
gs
lds
mov
adc
test
leave
xchg
pop
in
dec
cmpsb
hlt
sub
lds
pop
pop
fisubrs
adc
mov
cmp
pop
sub
fdivr
je
xchg
mov
movsb
adc
repz
push
das
sub
jg
and
inc
cmp
cmp
movsb
std
hlt
push
repz
call
and
insl
mov
mov
stos
test
mov
xor
rclb
push
ss
adc
or
in
sub
mov
stos
lahf
xchg
shrb
fsubr
les
aas
lret
inc
sub
or
xchg
ret
bound
mov
addr16
addr16
and
pop
cs
std
fildll
mulps
jle
arpl
xchg
lea
fmulp
stos
pop
jmp
adc
aad
jnp
or
pop
mov
ret
mov
push
inc
sahf
or
add
stc
in
pop
xchg
xchg
in
dec
shl
jg
and
mov
mov
mov
gs
pop
flds
mov
aaa
shr
or
iret
xor
lods
hlt
arpl
xchg
sbb
repnz
nop
cli
pop
or
sub
sub
add
aam
ret
rolb
jmp
dec
mov
icebp
fisttpll
clc
pop
outsl
lret
push
jmp
pop
shlb
mov
dec
stc
loopne
test
xor
xchg
jb
jnp
and
in
cwtl
push
push
xor
lret
stc
imul
mov
mov
out
inc
inc
nop
adc
inc
pop
inc
jne
xchg
cs
pop
pop
aas
int3
sarl
adc
jmp
or
leave
inc
pop
jle
inc
mov
shr
pop
xchg
dec
inc
xor
jge
jnp
mov
lret
push
mov
loope
bound
jp
push
cmp
call
cmp
jo
jmp
adc
fwait
adc
mov
hlt
mov
jns
mov
lret
out
or
inc
cmp
push
jne
mov
dec
add
es
and
lods
add
jle
inc
add
push
andl
fldcw
adc
push
test
adc
inc
das
mov
push
insb
sub
rcl
xchg
mov
add
popa
nop
jnp
mov
or
sub
cmpsl
repz
sahf
fisubl
jb
sub
mov
dec
sbb
std
dec
push
mov
add
sub
inc
push
scas
mov
adc
frstor
adc
arpl
jae
adc
int3
andb
outsl
mov
sub
push
rorb
mov
mov
sub
je
sub
xlat
cs
stos
xor
sbb
outsb
xor
jmp
lret
fiadds
mov
jp
in
mov
or
adc
xchg
rol
xchg
mov
imul
ret
outsb
pop
or
fstpl
xchg
ret
add
movsb
cmp
cwtl
mov
fcoms
add
imul
pop
lods
jmp
adc
inc
pop
and
jb
jno
jl
bound
mov
inc
sarl
push
xor
push
jb
mov
jl
and
add
enter
pop
adc
fwait
push
mov
or
fistps
nop
pusha
xor
cmp
in
add
aam
repz
and
mov
sbb
call
test
xchg
ds
cmp
dec
dec
xchg
stos
xor
inc
out
adc
pop
dec
jae
jle
xor
pop
or
and
call
add
xor
pop
mov
lock
mov
mov
in
lock
out
stos
cli
sub
adc
ret
out
mov
idiv
sbb
xchg
bound
rcll
out
lcall
out
sbb
or
gs
scas
or
xor
outsl
mov
inc
fs
in
mov
sbb
push
repnz
int3
hlt
loopne
aas
jp
ret
mov
push
lock
xchg
stos
test
push
cmpsb
push
jns
sti
outsl
push
mov
push
mov
les
aas
js
jb
pop
int3
push
xlat
imull
out
int3
imul
testb
into
and
dec
jmp
sbb
loop
mov
ret
les
andl
and
repnz
in
test
ret
mov
mov
in
je
dec
gs
aaa
jmp
sub
loope
mov
mov
orb
xchg
mov
xchg
lcall
mov
std
jne
out
fsubrl
push
add
lods
lock
call
movsl
fsubs
stc
loope
popf
movsl
sub
pop
movsb
ret
cwtl
fcomp
xor
inc
pop
rcl
inc
enter
push
cmp
xchg
rcl
pop
cmp
pushf
in
out
ret
roll
xchg
fiaddl
add
test
in
fsubs
inc
and
fsubs
pop
sub
stos
xor
push
sbbb
scas
cmp
and
fsub
shlb
sub
inc
adc
shl
jecxz
cld
ret
movsb
push
mov
or
sub
imull
jno
dec
mov
inc
out
nop
imul
js
icebp
dec
mov
mov
xor
and
sub
call
sub
push
cmovnp
dec
clc
or
out
mov
and
stos
push
jl
mov
adc
rcrb
repz
jne
xchg
sbb
sub
xor
insl
inc
arpl
inc
mov
outsl
aas
repz
mov
les
cltd
sahf
inc
ja
popf
or
loope
sbb
ficoms
add
gs
cmp
loop
daa
test
cmpsl
roll
sbb
add
ficomps
fs
sub
aad
in
sahf
or
push
shr
mov
or
aas
lea
cmpb
mov
cmp
mov
stos
sbb
pop
into
cli
cmpl
push
cs
cwtl
jns
shlb
push
mov
push
lods
test
arpl
movsl
test
pop
sbb
rcll
xchg
out
fsubrs
xchg
xor
in
add
lret
test
add
das
push
pop
sub
scas
or
mov
add
ja
mov
sarl
sbb
nop
pop
push
mov
inc
insb
sub
pop
test
int
jno
cmc
adc
mov
lret
rol
pop
into
fistps
xchg
loopne
bound
repnz
xchg
mov
dec
pop
pop
ret
ret
imul
ror
arpl
xchg
mov
xor
and
aad
test
sbb
mov
and
repnz
ret
sbb
sahf
mov
scas
nop
cmp
mov
xor
or
or
add
repz
test
cmpsb
push
sbb
dec
out
xchg
cmp
push
mov
test
sbb
lcall
adc
xchg
xchg
fsubs
movsb
mov
fistpl
ss
icebp
pop
int3
jl
ss
or
rorl
std
jnp
aaa
in
rorb
stos
xchg
dec
fs
jo
xchg
ret
arpl
test
sti
jne
mov
out
jg
sub
and
inc
pop
and
push
add
xchg
mov
or
jno
mov
ja
cmp
xchg
sbb
movsb
cs
iret
mov
xchg
dec
scas
xor
adc
ficoms
mov
and
pop
cld
push
mov
sub
xchg
scas
stc
dec
loop
fs
sbb
mov
push
xlat
repz
jno
or
add
or
push
jl
flds
mov
xchg
cmpb
scas
test
mov
fdivr
and
xor
inc
mov
xchg
in
lcall
shlb
push
mov
lret
adc
test
xchg
push
fbld
pop
call
sub
fs
test
jo
ljmp
and
lods
adc
fwait
cmp
jbe
mov
jne
mov
movsl
out
dec
fs
insb
loopne
aad
les
pop
jle
sbb
fistpll
sub
adcb
mov
js
sarl
cmp
jle
jb
jmp
es
mov
movsl
push
cmc
cmp
out
dec
test
xchg
aas
dec
pop
and
daa
inc
movsl
inc
jmp
push
cmp
sarb
fwait
adc
rcll
jb
sarl
push
push
dec
outsb
les
mov
aaa
std
cld
jae
cltd
ror
and
cmpsb
jmp
xchg
add
jne
cld
jge
aas
xchg
push
push
loop
dec
cmpsb
sti
insl
movsb
cli
icebp
out
inc
adc
div
fnsave
mov
pusha
sbb
mov
negl
loope
test
and
cmovp
jecxz
inc
jbe
testb
lret
cmp
je
loop
adc
inc
data16
xor
pop
jle
xchg
repz
je
push
mov
mov
shr
fsubl
movsl
leave
xchg
inc
loopne
or
lret
mull
loope
hlt
insl
jmp
push
cmp
jb
or
adc
mov
ja
dec
cmp
adc
addr16
mov
lods
pop
jge
or
fiaddl
add
jbe
call
and
rcrb
pushf
aaa
pusha
xchg
shrl
icebp
sbb
loopne
sarb
mov
add
mov
cld
int
push
in
sub
repnz
mov
fsubs
out
and
jl
loop
stos
mov
pop
out
stc
pop
xor
jmp
test
push
add
xlat
mov
push
cltd
inc
jmp
lcall
mov
in
inc
fidivrl
xchg
xor
jp
ficoms
loope
test
cmpsl
or
jecxz
addr16
mov
es
mov
sbb
sbb
sbb
xlat
repz
pop
pop
lret
sub
stc
mov
fisttpll
mov
insl
pop
movsb
out
xchg
aam
insl
xlat
xchg
push
adc
movsl
cmp
imul
jo
mov
sub
insb
movsl
push
fisubrs
sub
pop
mov
popf
xchg
addr16
dec
nop
sub
jle
scas
ds
mov
and
ja
fwait
sub
mov
arpl
in
sbb
std
mov
sbb
sub
fwait
mov
in
mov
and
push
jg
nop
decl
mov
inc
jp
mov
subl
aas
std
cs
aad
and
push
mov
mov
jno
out
aam
jecxz
into
mov
xor
sub
insb
jb
in
cmp
cmp
adc
shr
mov
adc
fwait
inc
int
mov
pushl
pop
adc
dec
mov
mulb
lahf
aam
or
mov
and
pop
xchg
fdivrp
andl
dec
imul
test
enter
stos
sub
lcall
mov
mov
cltd
push
mov
pop
xchg
icebp
sbb
pop
sahf
or
or
mov
pop
xchg
dec
adc
sbb
mov
leave
loop
into
fisubs
rclb
add
roll
or
mov
sbb
std
out
mov
jo
push
inc
mov
lock
daa
shlb
ds
fsubs
test
out
adc
stos
mov
das
xchg
and
cs
clc
test
push
out
rcrl
push
negb
and
cld
dec
or
ja
lea
jecxz
je
or
push
adc
sub
cmp
xchg
fwait
push
jp
jecxz
mov
pop
and
loop
and
or
das
push
adc
jmp
mov
notl
test
ds
xchg
push
sahf
daa
stos
push
mov
sbb
add
sti
out
js
jl
lds
scas
or
pop
push
sub
cmp
mov
aam
jne
cli
pusha
mov
sub
dec
and
push
adc
and
in
jp
push
add
icebp
mov
cld
jp
sub
pop
nop
and
das
aaa
xchg
leave
movsb
inc
mov
data16
aas
cmp
xor
cmp
cld
into
dec
ret
sti
sbb
sub
ficoms
or
adc
and
xchg
adc
icebp
enter
dec
add
jg
pusha
mov
mov
pushf
fwait
jg
mov
in
mov
pop
adc
xchg
stos
scas
nop
outsb
xlat
and
dec
out
es
jno
pop
xchg
jg
cmp
ret
fwait
roll
je
sbb
popf
popa
xor
jl
gs
or
pop
pop
popa
push
jge
cmp
leave
mov
call
mov
or
mov
repnz
cmpl
lret
aas
inc
xchg
push
pusha
sbb
xor
and
mov
pop
xor
ljmp
andb
ret
mov
pop
outsb
outsb
add
push
and
fcomip
pop
pop
icebp
shr
add
les
dec
cmp
mov
cmp
call
jnp
cmpsb
pop
xor
cld
adc
push
movsl
mov
fnstsw
iret
mov
sti
xor
stos
sbb
fidivrs
mov
cs
loope
xchg
push
scas
ss
xchg
jns
in
cmp
loope
mov
scas
dec
out
xor
jg
sub
cmp
ds
cmp
mov
outsb
jg
jecxz
dec
pop
push
or
pop
mov
int3
arpl
rolb
lcall
outsl
sti
jge
cld
jnp
inc
cwtl
das
out
into
push
lahf
les
add
mov
js
pop
pop
xor
shrl
clc
cld
dec
fcmovb
xchg
icebp
mov
das
dec
test
push
push
mov
jno
out
push
je
test
mov
leave
stc
enter
cmp
cld
mov
jbe
popa
fdiv
imul
fadd
js
arpl
loope
jecxz
mov
in
and
outsl
jge
sub
mov
cmpsb
sarl
leave
push
aaa
fwait
mov
bound
dec
test
mov
cmc
inc
lods
sub
adc
shll
shrb
mov
push
cmp
mov
push
loopne
lret
mov
in
jp
push
int3
outsb
pop
mov
add
lds
mov
int3
lret
fistps
aas
dec
stc
ja
cmp
int
xchg
jae
push
lods
aam
mov
mul
jnp
adcl
lock
push
lea
rcll
or
fs
cmp
push
jecxz
push
cmp
xchg
push
cli
or
imul
leave
mov
idiv
insl
data16
mov
push
push
bound
in
or
push
clc
scas
mov
xchg
call
xchg
sti
mov
or
cmp
sbb
cld
inc
das
pop
push
adc
or
add
or
xor
inc
testb
lock
shrl
mov
fisttpl
sub
int
out
lods
mov
jne
mov
xor
in
xor
or
ficoms
ljmp
sbb
mov
mov
jb
nop
loop
es
or
fldl
lock
sub
mov
push
adc
xchg
les
sub
adc
icebp
add
sbb
das
inc
lahf
sbb
icebp
pop
push
mov
xchg
jbe
repz
das
jne
mov
dec
pop
jmp
enter
push
cwtl
notl
fmul
jns
and
jmp
mov
outsl
flds
scas
and
pop
sub
mov
mov
mov
cs
adc
notb
push
mov
aas
push
jp
enter
pop
nop
cmp
jno
iret
mov
lock
es
out
jp
shlb
mov
daa
std
pop
loop
in
es
or
mov
adcl
movsl
xchg
ror
aaa
stos
daa
xchg
enter
cmpsb
inc
cld
jbe
test
in
and
shr
add
or
mov
dec
leave
cmp
rcrl
and
mov
cmp
xor
mov
dec
insb
lods
mov
test
mov
aaa
mov
xlat
in
xchg
inc
and
jg
jno
mov
imul
insb
dec
ss
add
mov
daa
push
jge
push
mov
cmp
movsb
jmp
add
sbb
inc
pop
pop
in
into
dec
je
xchg
and
mov
insb
rorl
push
mov
pop
cmp
repnz
push
sbb
pmaxsw
je
jge
in
sbb
or
xchg
test
push
jge
push
ret
add
lret
loopne
sub
jne
xchg
mov
sub
sbb
mov
sbb
mov
xchg
cmpsl
xchg
into
lods
test
fptan
in
sbb
popf
mov
cltd
jno
cld
outsl
add
out
jl
mov
lahf
iret
subl
inc
or
dec
pop
add
cmpsb
mov
jne
lret
jno
jnp
inc
cs
push
push
add
aam
jno
ret
out
jge,pn
mov
pop
ret
push
mov
xor
dec
cmp
or
out
adc
jmp
and
fisttpl
daa
pop
imul
mov
inc
cs
dec
enter
or
popa
sbb
lods
les
sahf
or
mov
inc
xor
push
xchg
xchg
pop
sbb
pop
stc
jo
mov
jle
fcoml
add
int3
inc
sub
les
jns
pop
ret
repnz
rcll
adc
push
adc
mov
stos
test
inc
mov
fsubl
decb
pop
in
int3
sahf
dec
add
cmp
push
pop
lock
lock
mov
ss
in
fsubs
cmpsb
mov
out
ja
jb
btc
cld
movsb
jns
jmp
cmp
imul
mov
jg
sub
repnz
lcall
mov
lahf
sbb
mov
aam
dec
mov
push
push
xchg
pop
arpl
push
outsb
jge
les
cmpb
insl
loopne
mov
adc
punpckhbw
aas
push
cmpsl
dec
mov
or
aad
mov
es
sahf
outsb
add
in
jmp
or
pop
jle
sub
cmp
roll
jo
inc
sbb
aaa
imull
dec
push
ret
add
aad
pop
adc
notb
and
shlb
aas
mov
fdivrl
arpl
ljmp
pop
dec
mov
push
sti
test
cmpl
jmp
sub
push
push
out
adc
call
add
or
out
lret
dec
in
pusha
mov
popf
enter
xor
in
push
dec
xchg
push
xor
and
arpl
stos
mov
mov
jl
xorl
pop
test
pop
pusha
loopne
adc
and
lret
add
or
add
leave
pop
mov
jne
dec
pop
cmp
pop
lcall
inc
or
pop
ds
sub
ss
or
stc
pop
ret
jge
in
mov
xchg
dec
int
fdiv
std
fildll
stos
jge
in
add
jmp
mov
push
stos
cmp
adc
sbb
sub
cmpsb
inc
imul
in
in
mov
sbb
mov
xlat
shrb
cmpsl
or
fbstp
scas
out
xchg
and
push
inc
leave
mov
lcall
mov
and
repnz
data16
add
push
push
xor
das
imul
mov
push
mov
cmpsl
mov
push
mov
addl
fistpll
pop
aam
iret
sub
add
pop
ljmp
cwtl
andb
sti
data16
movsl
mov
adc
pop
clc
call
dec
push
jmp
sti
test
push
mov
lock
ficoml
addr16
imul
jp
cmpsb
mov
pop
or
daa
jmp
nop
jne
cmc
jl
jge
pop
das
jle
lods
mov
push
or
test
dec
sbb
xor
push
adcb
stos
xor
mov
cmp
outsb
jecxz
push
hlt
cwtl
cmpsb
xor
int3
sbbb
jbe
inc
or
push
push
loopne
loope
cmpsl
jg
xchg
jno
xor
fiaddl
sbb
ds
inc
out
sub
push
popa
xchg
mov
push
xor
xor
fsubrp
xchg
fldt
jg
inc
and
jmp
jb
in
pop
dec
mov
mov
test
ds
fsubp
jge
rcrl
push
pop
test
cltd
dec
cmpsl
je
mov
mov
insb
lea
pop
or
xchg
pop
bound
cmp
pop
repz
or
jns
xor
mov
or
clc
ljmp
inc
cli
cmp
sub
out
push
int
arpl
pop
mov
js
ret
mov
loopne
jp
sbb
fisttps
mov
or
adc
shlb
es
into
add
xchg
mov
out
paddq
loop
xchg
into
outsl
pop
fnsave
inc
pop
push
sub
dec
loope
push
and
jp
out
popf
icebp
xor
pop
mov
mov
in
jmp
insl
into
out
xchg
pop
mov
fdivl
enter
push
jmp
inc
clc
ljmp
test
lcall
cmpsl
pop
out
mov
or
out
daa
fs
fbstp
dec
sarb
push
sbb
dec
sbb
outsl
sub
ret
or
notb
into
pop
inc
and
xor
mov
jnp
iret
jne
adc
idivb
jecxz
iret
je
sbb
inc
xor
daa
das
stos
pop
or
lock
xor
or
outsb
insl
jne
je
fs
xor
cmpsb
push
mov
sub
cmp
mov
stos
repnz
jns
out
jns
mov
mov
adc
mov
inc
movl
popa
jo
testl
jbe
jg
in
jb
ljmp
mov
sbb
xchg
mov
lock
sub
or
xor
lret
clc
in
xor
push
dec
adc
xor
xlat
xchg
push
scas
push
ss
aaa
in
inc
lahf
dec
sbb
xchg
pop
push
sbb
gs
cmpsl
sub
ja
loop
loop
and
sub
test
or
lret
xchg
iret
cmp
stc
inc
bound
adc
loopne
scas
inc
mov
leave
add
cmp
cs
inc
inc
mov
hlt
dec
mov
pop
jle
shrl
xor
nop
sbb
jo
inc
cwtl
cmp
inc
adc
lods
imulb
xor
test
inc
stos
setp
shlb
mov
psubd
loopne
jecxz
jecxz
xchg
xor
add
and
repnz
xchg
mov
mov
mov
stos
pop
ss
stc
sub
sub
loopne
rcll
cmp
inc
and
iret
sub
xor
jae
inc
cmc
or
sahf
xor
jg
dec
push
cli
dec
mov
mov
adc
and
lods
repz
ss
in
fs
pop
fiadds
sub
fisttpl
cwtl
test
xchg
xchg
jnp
rcrb
leave
xor
dec
xchg
scas
mov
test
jae
aaa
insb
movsb
xor
xchg
stos
data16
inc
lcall
and
mov
jns
icebp
ja
mov
mov
adc
mov
cmp
sbb
xor
sahf
cmp
mov
add
mov
loop
push
popa
push
mov
xchg
loope
jg
cmp
negb
jl
fisttpl
push
jg
sti
hlt
out
adc
shrl
lods
xchg
sbb
in
lahf
mov
add
jne
out
fwait
in
mov
outsb
lock
frstor
cmpsl
mov
sub
sti
dec
inc
and
lods
fcmovnbe
mov
divb
movsb
or
loopne
nop
lods
dec
test
sbb
sbb
xor
adc
push
int
push
mov
je
pop
xor
popf
insb
rol
pop
rorb
imul
daa
inc
insb
out
loop
xchg
bound
inc
jo
subl
push
jb
xor
jno
and
mov
js
xchg
mov
call
inc
jg
mov
mov
jge
jnp
xchg
jae
jecxz
ljmp
mov
int
xchg
sahf
lcall
insb
mov
cmpsl
popf
xlat
sub
mov
add
pop
outsb
rcll
inc
lods
push
jmp
das
imull
xor
add
fnstcw
sbb
ljmp
cmp
and
xor
lcall
pop
rol
aam
stos
add
test
insl
jp
hlt
adc
sbb
xor
out
test
push
inc
push
std
or
pushf
jg
xchg
cli
cltd
mov
mov
mov
sub
push
jle
loopne
cld
or
push
scas
popa
call
call
addb
insb
jge
ret
push
xlat
iret
mov
jge
clc
and
pop
ljmp
inc
and
sub
loopne
xor
bound
adc
mov
adc
fdivr
ret
das
adc
loope
jns
subb
add
dec
bound
jb
dec
ja
or
add
out
sbb
jp
enter
fs
xchg
insb
outsl
xlat
fadd
rcrb
and
sub
add
es
mov
mov
xor
inc
mov
push
fbld
push
jb
cmp
daa
adc
xor
hlt
negl
testl
xlat
add
dec
and
jae
jg
pop
add
fimull
es
clc
in
and
out
arpl
sti
cmp
fsts
rcr
xor
clc
or
pop
mov
hlt
jmp
loopne
jne
push
jmp
mov
mov
daa
das
movsl
in
or
cmp
jno
and
cli
xorb
clc
xor
add
dec
xor
mov
fwait
mov
fwait
cmp
cmc
clc
jecxz
push
mov
adc
sbb
inc
cmp
das
shrb
sbb
add
and
push
pusha
mov
sbb
leave
out
movsb
adc
xchg
xorl
add
repnz
mov
cli
adc
lcall
aas
bound
cmp
inc
dec
xchg
add
push
add
or
push
out
sbb
adc
int3
jno
pop
cmp
loopne
das
mov
sbb
push
and
pop
out
sbb
aas
and
push
mov
mov
mov
inc
out
in
jnp
and
xchg
pop
push
sbb
ss
or
cmp
jmp
enter
popl
push
push
push
push
mov
push
imul
mov
lds
insl
mov
or
icebp
and
and
sbb
push
mov
cli
lahf
add
lds
jp
push
lods
in
push
sub
xchg
push
adcb
outsb
sbb
in
call
mov
adc
jg
test
fbstp
sbb
adc
clc
sub
mov
push
or
adc
pop
cmp
loop
and
prefetch
out
jle
xor
shl
sub
add
cmp
add
adc
sbb
mov
mov
cmpsb
lret
pop
pop
add
clc
sub
imul
push
pop
lea
dec
insb
ja
jbe
fbld
lcall
and
xchg
idivb
dec
sub
cmp
pop
xor
mov
push
std
ljmp
imul
std
xor
dec
stos
outsb
jmp
inc
dec
push
fadds
dec
pushf
ljmp
cs
js
ss
xchg
popa
cmp
ljmp
add
pop
add
xchg
insl
pop
push
es
mov
insl
mov
ficomps
push
jnp,pn
mov
cmpsl
movsl
into
clc
mov
inc
pop
and
mov
ljmp
inc
ficomps
jp
push
sub
push
push
or
lcall
das
int
mov
mov
push
mov
mov
mov
jno
shrl
push
lret
push
les
inc
xor
addr16
sbb
outsb
test
roll
fldcw
fxch
mov
xchg
xchg
or
jl
std
add
or
cmpsl
jne
xlat
shlb
sbb
shrl
sbb
cmp
sbb
pop
loop
cwtl
or
dec
xor
cld
imul
mov
cmp
fildl
push
das
aas
imul
or
push
adc
cmp
enter
xor
sahf
mov
lret
cmp
mov
test
insl
outsb
push
sbb
xchg
pop
xor
negb
cmp
cmp
aas
and
and
inc
jge
jp
jp
pop
rcll
mov
nop
xlat
sub
and
or
ljmp
jnp
call
push
xor
sub
inc
sub
insl
les
out
negb
orb
mov
mov
stc
fnstenv
xlat
xor
jg
es
aaa
jecxz
add
mov
in
and
inc
lcall
push
stc
cmp
sub
mov
or
mov
outsl
or
mov
sarb
test
mov
stc
dec
or
dec
add
add
lock
adc
popf
stos
adc
xor
jle
pop
sub
mov
fmul
fildl
and
pop
or
fwait
scas
sub
paddq
popf
in
xorl
hlt
sub
mov
pop
cmp
int
popf
push
sbb
shll
scas
inc
xorb
rorl
stc
sbb
lods
mov
inc
cld
jnp
test
out
pushf
arpl
and
imul
mov
mov
into
dec
fwait
cmp
imul
cmc
push
testb
lods
aam
sbbl
mov
ret
inc
shlb
sub
cmp
dec
mov
jecxz
cmc
test
mov
xor
stc
sti
movsl
mov
xor
push
push
cmp
lret
lods
int3
int
lcall
mov
adc
test
cmc
xor
mov
sti
adc
jno
outsl
out
xor
adc
xchg
jne
jne
nop
or
popa
out
ds
adc
or
cmp
loopne
pop
cmpl
mov
and
rcrl
cmp
imull
mov
pop
enter
cmpsb
sbb
loopne
or
cmp
pop
inc
arpl
testl
jo
xlat
scas
cli
mov
hlt
push
jae
pop
xorl
fcomps
mov
mov
or
push
pop
mov
push
es
jle
push
dec
xchg
adc
lret
push
sbb
push
jns
jne
std
out
dec
push
sub
cli
adc
pop
cmpsl
jp
push
sbb
mov
int3
mov
rclb
popf
lret
mov
adc
mov
dec
mov
and
dec
aam
mov
mov
popf
pop
or
test
frstor
mov
jo
rcll
lock
or
jnp
jmp
aaa
pop
mov
negb
dec
out
push
inc
xlat
pop
cmp
xor
roll
mov
xchg
inc
mov
and
push
push
ja
push
faddl
subb
push
fadds
andb
adc
into
popa
mov
es
call
sub
clc
stos
mov
repz
stos
lea
cmp
int3
or
adcl
orl
or
sub
dec
pop
dec
movsl
push
in
cmp
sub
std
loop
fs
mov
add
mov
dec
mov
fwait
in
rorl
xor
cmp
or
lret
orl
lods
push
movsl
mov
mov
pusha
and
lret
dec
scas
pushf
xor
push
cld
pop
or
invlpg
or
idivb
je
inc
das
sbb
xchg
add
shlb
sbb
into
xchg
aas
ficompl
mov
shlb
add
mov
adc
js
rolb
adc
adc
add
add
and
inc
ret
jecxz
push
jmp
and
test
pop
cmp
aaa
xor
xchg
sti
int
mov
js
imul
xchg
fldcw
jl
sub
or
jns
mov
xor
lret
cmp
mov
ficoml
fs
sbb
ljmp
test
inc
adc
insl
clc
stc
mov
fdivs
into
xchg
stos
in
adc
mov
dec
or
and
cmp
iret
in
lahf
jnp
push
xchg
fmuls
sbb
xchg
cmp
std
dec
jmp
mov
idivl
nop
lcall
in
add
adc
xchg
push
das
shlb
push
scas
mov
sbb
xchg
sarl
inc
clc
mov
adc
inc
xchg
inc
fisubrl
aad
ljmp
jno
sbb
adc
xchg
xchg
or
jmp
iret
push
setle
mov
push
dec
mov
lcall
inc
jl
xor
cmovb
enter
ret
sub
push
xchg
xor
imul
xchg
in
or
jne
aaa
mulb
mov
mov
push
gs
lods
pop
sbb
lret
clc
pop
jg
mov
pop
sub
cmp
jp
jp
xchg
push
sbbl
jne
xchg
add
jl
sbb
mov
rcrl
cmpsb
pusha
gs
mov
shlb
imul
inc
enter
push
pop
inc
sbbb
xorl
aam
mov
movsb
dec
lret
add
and
outsl
or
adc
pop
xor
fcmovb
add
cwtl
and
mov
dec
mov
cmp
add
fisttps
jns
dec
pop
or
xor
inc
out
or
mov
add
hlt
bound
xor
out
cmpsl
bound
pop
daa
aam
adc
pusha
adcl
dec
lcall
push
cmp
mov
add
in
and
nop
lods
or
add
xchg
jno
fistl
push
cld
idivb
pop
push
pushf
jns
jmp
mov
sbb
jnp
push
push
aas
cs
mov
jge
jno
and
adc
fdivr
enter
dec
mov
and
ds
pop
xor
fwait
push
xchg
xchg
dec
sub
add
sub
vcvtsd2ss
rcrb
cmp
dec
jl
insl
cltd
push
mov
insb
out
sub
fnstcw
nop
push
fnstcw
jle
jb
out
and
mov
enter
adc
mov
inc
jecxz
fwait
loope
cmc
jno,pn
ja
xchg
sub
jl
arpl
xor
in
dec
ret
aad
adcl
mov
gs
pop
cld
outsb
repz
jecxz
sarb
inc
lods
and
or
aam
mov
les
loopew
stos
add
fisubl
sbb
jns
push
dec
stos
popa
xlat
cmc
out
inc
stc
and
sbb
mov
fs
mov
loope
stos
leave
test
or
adc
xchg
xchg
push
pop
cmp
xorb
stc
sbb
cmpsb
std
jmp
into
shl
jge
outsb
out
mov
lock
test
stc
faddp
or
pop
stos
cmpsl
stos
mov
ret
lcall
cmpsb
out
push
loopne
loop
or
and
pop
loope
insb
loopne
ficomps
out
pop
adc
lods
inc
out
xchg
ljmp
popf
test
aad
hlt
out
aam
jecxz
add
lret
repnz
inc
fs
out
jmp
mov
into
aam
mov
ja
dec
mov
dec
cmp
xlat
mov
pop
call
add
push
add
das
xchg
cmp
lret
jnp
jmp
push
dec
push
test
popf
push
adc
pop
fistpll
fstpt
cmp
out
mov
push
push
pop
or
dec
adc
sbb
rorl
dec
push
jg
cmp
jbe
ljmp
inc
sbb
in
ror
aas
mov
add
sub
mov
and
lods
xchg
test
xchg
or
les
int
frstor
pusha
icebp
mov
mov
cmp
xor
or
xchg
clc
test
test
mov
dec
cmp
popa
mov
dec
add
out
adc
or
lea
mov
sub
cmp
jbe
les
sub
loop
lahf
mov
mov
pop
arpl
jg
mulps
push
rcll
or
mov
aas
and
xor
sbb
jno
shrl
ds
daa
pusha
cld
xor
incl
dec
cmp
lds
dec
jl
mov
divl
mov
inc
mov
cwtl
mov
mov
out
pop
push
pop
push
adc
push
imul
add
fisubrs
outsl
and
scas
or
lcall
mov
mov
inc
push
scas
push
cld
add
out
push
arpl
push
clc
pop
lret
js
inc
cmp
test
mov
xchg
mov
jno
rorb
sbb
jnp
and
subl
mov
je
adc
fistps
ja
dec
dec
sbb
outsl
test
xor
stos
ljmp
fiadds
mov
mov
out
das
stos
icebp
xchg
cwtl
xchg
pop
xor
push
int3
push
adc
mov
or
pop
es
ds
fcmovnb
nop
and
popa
pop
popa
ret
mov
cmp
xor
mov
rcrb
in
cmpsb
and
aas
loop
js
mov
cmp
pop
adc
dec
dec
ljmp
mov
cmpsb
loopne
dec
or
add
inc
lds
sbb
int
sbb
pop
push
outsb
sbbl
dec
pusha
rorl
sbb
add
pop
repnz
aas
mov
adc
adc
lock
jmp
mov
mov
ret
dec
in
stc
and
jecxz
rcrl
mov
jmp
ret
jle
and
imul
int
jle
pop
xlat
adc
mov
xchg
arpl
icebp
mov
repz
ret
cmp
popa
push
lcall
or
cltd
into
mov
xchg
outsb
mov
jl
fbld
in
inc
out
insl
cld
mov
inc
jmp
pmaddwd
pop
les
dec
jg
movsb
adc
xor
and
adc
xlat
jmp
jbe
cmpsb
out
aaa
sub
popa
push
in
inc
or
mov
in
in
jmp
jmp
dec
push
mov
icebp
and
lods
in
test
rorb
dec
repz
loop
int
add
or
and
negl
fwait
jne
pop
in
push
scas
sub
cmp
sub
sbb
hlt
fdivl
sub
jmp
sti
mov
fidivl
mov
pop
xor
push
stc
lods
mov
mov
mov
outsb
xor
sbbl
dec
mov
push
aaa
sbb
call
pop
jmp
ret
pop
mov
mov
mov
loopne
push
jg
xor
jns
or
mov
or
movsb
push
sbb
sub
inc
and
xor
mov
outsl
adc
shlb
push
sbb
iret
mov
outsl
jo
inc
sbb
or
adcl
mov
ds
sbb
jg
dec
loop
add
jle
fucomi
jns
out
hlt
cmp
or
les
jl
fidivrl
and
pop
int3
test
aam
out
jge
loop
fildll
xlat
lods
popf
dec
jge
bound
or
fsub
dec
roll
cli
pop
sub
loope
call
and
icebp
mov
loop
hlt
push
and
aaa
jecxz
daa
scas
fistpll
pop
inc
mov
mov
xor
or
test
inc
sub
adcb
or
imul
dec
jno
jl
ficomps
inc
icebp
shlb
xor
add
push
or
fcmovnbe
pop
js
fmul
add
movsl
xchg
mov
pusha
mov
loopne
jmp
sahf
push
pop
pop
dec
add
lods
sbb
dec
add
jle
pop
inc
shlb
iret
cmp
out
mov
ret
and
icebp
in
push
sub
cmp
and
jmp
ror
lahf
js
rorl
xlat
shrl
sbb
out
lahf
test
push
add
xchg
mov
mov
dec
inc
pop
jnp
icebp
xchg
jle
or
mov
test
loope
decl
in
ds
mov
mov
imull
mov
add
add
jns
sub
lods
dec
or
iret
pop
stc
mov
sub
out
inc
dec
jg
mov
adc
das
sbb
pop
dec
movsl
or
xor
sti
ja
inc
mov
std
ret
lcall
into
pop
cmpsl
scas
adc
test
xchg
lods
pushf
lret
cmp
jne
aad
jns
ljmp
rcr
addl
sbb
or
shlb
daa
jne
insb
xchg
xor
movsl
cmp
mov
cmp
insl
mov
loopne
pop
xor
push
dec
stos
fbstp
inc
imul
lcall
xlat
imul
sbb
stos
inc
mov
and
imul
push
mov
fwait
jg
xchg
inc
decb
mov
enter
out
out
cmpsl
jg
pop
repz
cltd
pop
xchg
call
mov
outsb
cmc
dec
push
xor
jne
mov
cmp
sbb
std
lret
scas
add
outsb
mov
add
arpl
addr16
icebp
pop
xchg
or
mov
stos
int3
into
rcl
aas
pop
or
shll
xchg
out
aam
cmp
scas
xchg
pop
aaa
jmp
cltd
mov
inc
jp
ret
ljmp
jno
in
scas
jmp
inc
adcb
das
inc
scas
sub
lods
out
xchg
add
xlat
aaa
ror
lret
cmpl
push
and
sbb
movsl
cmc
out
fcmovnu
stos
mov
daa
dec
and
enter
xor
push
insl
adc
fldl
pop
outsl
sbb
sbb
pop
aas
sub
add
ds
mov
xor
sub
adc
inc
pop
pop
leave
test
pop
xchg
test
out
pop
and
lods
adc
js
in
mov
leave
and
dec
lahf
shrl
test
imul
push
mov
mov
xor
push
adc
shrl
sbb
xchg
jp
mov
test
popf
mov
hlt
add
mov
fldt
jmp
shrl
aas
test
mov
repz
inc
cld
and
les
xchg
jge
addl
mov
lahf
cmc
icebp
inc
sbb
ficoms
pop
outsl
adc
push
xchg
movsb
pop
fnsave
test
or
insl
sub
pop
mov
xor
or
cmpsl
iret
dec
arpl
sti
cmc
xor
jle
leave
push
aad
jae
test
dec
pop
jns
mov
popa
test
or
cmp
into
and
and
lods
pop
or
stos
jge
xlat
jbe
pop
mov
fcoml
adcl
outsl
jnp
add
xor
mov
das
mov
or
mov
loopne
dec
and
movsl
mov
out
jae
sub
insb
cmp
and
push
push
pop
lods
mov
sub
cmc
cmp
pop
pop
xor
cmc
popa
cmpl
jnp
pop
xchg
or
stc
jecxz
jle
fdivrs
out
mov
push
mov
sti
lahf
inc
adc
cmp
das
mov
sti
sub
test
sbb
adc
xor
xchg
lcall
daa
call
fdivrl
mov
jg
pop
push
cmp
scas
jp
fldenv
jle
add
jge
jno
pop
mov
cwtl
mov
inc
add
popa
stos
adc
mov
sbb
fadds
xlat
xor
addr16
je
leave
ret
pop
subl
in
xchg
rol
rclb
popf
rolb
ret
push
xchg
mov
ja
mov
or
mov
sbb
mov
mov
lret
mov
dec
or
cmpb
sbb
outsb
add
jne
dec
ret
dec
inc
and
adc
mov
jne
add
dec
jp
or
fmuls
cmp
inc
ret
cmp
aaa
xor
rcl
enter
pop
addr16
jns
cmpsl
sub
cmpsl
mov
mov
pop
jmp
sbbl
xchg
mov
icebp
insb
orb
jl
xchg
pop
loopne
mov
add
mov
in
lcall
sbb
insb
cmp
inc
pop
ret
movsl
cmp
fprem1
aaa
xor
int
dec
punpckldq
rorl
nop
sar
enter
adc
xor
push
adc
inc
data16
mov
stos
jle
ds
or
push
mov
aam
mov
or
ret
mov
iret
inc
fmul
sbb
push
sub
shrl
and
sarl
mov
cltd
outsl
int
lock
and
mov
in
lods
out
repz
adcl
and
sub
xor
sbb
push
xor
in
aaa
js
sbb
enter
lret
subps
ret
jne
xor
dec
aam
hlt
jge
fsubs
xor
in
dec
cwtl
jg
pushf
mov
nop
pop
jae
das
fstpl
lahf
mov
cmpsb
loopne
sub
dec
xor
mov
cmp
jge
adc
ss
cmpsl
sub
jg
xchg
jae
dec
loopne
or
push
or
mov
sub
jge
pop
pusha
pop
lods
push
sar
js
mov
jle
jge
pop
fistps
outsb
inc
pusha
and
mov
mov
imul
mov
stc
push
add
inc
pop
rcrl
scas
iret
inc
sbb
fs
in
and
push
sti
xor
pusha
subb
jne
es
fsubrl
repz
out
jg
sar
pop
mov
std
shl
leave
imul
cmpsl
aam
mov
dec
outsl
test
pop
lods
sub
flds
and
pop
push
lret
into
sti
subl
dec
test
call
cmp
dec
or
xlat
push
and
and
mov
pop
xor
push
adc
push
aam
std
fidivrs
push
daa
mov
or
push
and
lds
pop
jb
mov
arpl
push
dec
imul
lahf
loop
fmull
imull
jae
xchg
in
or
in
outsb
or
push
push
and
inc
std
ja
jns
leave
les
mov
fs
das
push
pop
test
mov
xchg
int
mov
cmp
xchg
shl
xorb
push
dec
jl
in
xchg
inc
enter
in
out
push
clc
je
push
sbb
aaa
jne
push
cmc
sbb
daa
dec
pusha
cmp
fdivl
fisubs
mov
std
rcrb
lret
xlat
cmpsl
sbb
pop
add
push
add
dec
aaa
sar
mov
clc
mov
push
sub
cmpb
mov
leave
add
mov
call
jmp
xorl
mov
pop
jb
xchg
mov
push
fistps
imul
out
cmp
or
icebp
mov
fidivs
xlat
push
push
add
adcb
push
fidivrs
xchg
fidivs
clc
jp
inc
push
sbb
adc
xchg
and
ret
cmpb
xchg
pushf
aad
ficoml
pop
cmp
shrb
loop
fsubl
and
inc
cmp
imulb
aam
push
xchg
mov
jns
insl
fsubrs
fisttps
xchg
call
pop
loopne
xchg
hlt
ficompl
ljmp
lock
in
sti
mov
mov
outsl
fsubp
adc
sbb
arpl
mov
adc
mov
loopne
pop
rorb
sbb
jnp
adc
sbb
mov
pop
mov
pop
pop
loop
sub
push
nop
push
sub
lret
xchg
test
insl
lret
mov
cvtdq2ps
push
scas
dec
iret
mov
sbb
out
xor
inc
stos
cltd
jns
mov
inc
push
jae
xor
ffree
sti
xor
mov
out
cmp
sub
and
fwait
adc
pop
xlat
push
add
out
sbb
xchg
xchg
sbb
push
pop
cmpsl
call
jae
ljmp
aad
jl
imul
test
mov
xchg
mov
sbb
les
aas
ret
jl
or
sbb
dec
fiaddl
mov
in
mov
pushf
pop
mov
mov
scas
pop
and
mov
cltd
cmp
mov
je
rcrl
jbe
dec
mov
and
es
cmp
xlat
shll
sarb
dec
int
adc
loop
jb
leave
adc
xlat
inc
mov
xchg
daa
fdivrs
mov
adc
sbb
stc
or
mov
mov
jo
ljmp
push
mov
xchg
lods
cmpsb
rorb
je
out
xchg
mov
hlt
adcb
sahf
aas
adc
rcr
andb
das
mov
cmp
cmp
loop
fimuls
fisttps
and
es
mov
pand
fildl
jmp
loope
add
pop
call
or
inc
cmpb
push
cli
lock
js
cmpsl
adc
dec
ljmp
mov
pop
xor
jnp
out
shll
and
sarl
sbb
addr16
sub
out
adc
aas
sub
cmp
nop
lret
rcl
xchg
sar
sub
out
popf
ja
xor
mov
movsl
add
fxch
inc
jmp
cli
xlat
loopne
sub
jge
iret
mov
lcall
adc
push
jge
enter
add
pop
cmc
mov
cwtl
cmp
and
stos
fmul
sub
sub
or
in
lret
xchg
andb
pop
arpl
jo
int3
and
dec
xchg
lds
fs
sbb
cmc
push
cmpsb
je
aad
lods
lock
mov
xor
loopne
sub
not
test
cmp
leave
sbb
out
ret
add
inc
test
or
icebp
xorb
xorb
iret
sub
jp
imul
and
or
ljmp
scas
mov
lret
sbb
mov
insb
das
dec
imul
push
pop
cmpsb
test
mov
inc
lahf
pop
insl
xchg
loopne
iret
icebp
addb
movsb
inc
addl
pop
stos
cmp
inc
pop
imul
out
stos
mov
cld
das
cmc
int3
jae
and
or
cwtl
out
xchg
inc
xchg
add
mov
shll
xchg
jg
sbb
xchg
test
dec
fucomi
iret
rcr
bound
mov
push
mov
sbb
adc
clc
testb
lret
or
xchg
popf
mov
push
jne
adc
stc
out
insb
inc
xchg
sub
push
mov
test
sbb
xchg
jmp
xor
pop
or
or
aam
and
in
ss
mov
dec
std
jne
pushf
push
jb
int
xchg
push
xor
mov
insb
loopne
dec
jnp
das
push
inc
js
adc
xor
xchg
mov
jb
mov
lahf
pop
adc
fidivs
pop
xchg
push
out
ss
pop
sbb
push
push
cmp
mov
cmp
dec
jp
dec
scas
test
nop
xor
js
inc
stos
cs
lds
inc
xchg
sub
nop
arpl
jl
add
or
imul
push
insb
pop
jp
sbb
scas
mov
out
aam
pop
es
popf
frstor
movsl
loopne
dec
lahf
leave
pop
in
mov
imul
sub
add
ss
pushf
sbb
fwait
jae
js
loope
xchg
clc
push
add
inc
inc
lods
cmp
enter
add
cmpsb
jbe
lods
shlb
inc
dec
sbb
push
and
fnsave
xchg
push
pop
scas
pop
out
xchg
pop
adc
addl
add
cmp
jmp
adc
mov
add
test
sbb
sub
pop
pop
cs
xor
xor
clc
aam
mov
mov
or
mov
inc
dec
cmpsl
and
pop
cmp
pop
out
jmp
adc
pop
add
ja
insb
add
dec
adc
scas
insb
data16
or
lcall
adc
lock
ret
daa
pop
mov
outsl
pop
push
adc
inc
mov
bound
lods
ljmp
push
int
dec
sub
mov
negb
mov
mov
xorb
call
jbe
lods
sbb
push
lock
inc
lret
pop
or
or
scas
leave
popf
scas
sahf
roll
push
test
out
lahf
xor
mov
and
mov
fcoms
sbb
jg
shll
mov
call
and
movsb
lahf
mov
lods
enter
scas
inc
enter
jb
jecxz
sbb
shlb
fwait
sub
leave
subb
dec
bound
into
lahf
jp
push
ljmp
fisttpl
xchg
fnstsw
movsl
jge
dec
outsb
jne
bound
adc
popa
pop
daa
xchg
dec
push
dec
out
pushf
mov
mov
cs
jnp
imul
int3
mov
data16
mov
mov
pop
pop
call
loop
push
cmp
fcomp
pop
imul
or
jg
adc
ret
cli
add
mov
jbe
repz
push
push
cld
adc
dec
cmp
scas
flds
loopne
cmp
jae
xor
jmp
push
sbb
ret
push
js
pop
and
cli
xchg
mov
cmp
add
xchg
mov
pusha
mov
loop
add
test
mov
popa
xchg
ror
test
in
adc
shl
addr16
fcmovnbe
jbe
push
loopne
mov
insb
inc
mov
mov
cmp
push
enter
insb
jne
sbb
and
mov
sbbb
inc
xchg
int3
clc
xlat
pop
insb
xchg
outsl
in
xor
std
xchg
mov
daa
je
leave
cli
cmp
cmp
push
dec
lods
adc
pop
xor
pop
ret
fisttpll
insl
stc
adc
cmp
movsl
push
or
in
xor
mov
andl
das
dec
push
sub
int3
aad
test
push
inc
xor
inc
dec
or
mov
sub
cmpsb
bound
lea
sub
dec
bnd
adc
test
aaa
insl
int
sarl
pop
mov
mov
xchg
std
mov
push
out
lods
mov
or
xchg
mov
mov
or
std
nop
xor
loop
ja
insb
push
cmc
shlb
icebp
or
push
sbb
xlat
mov
xor
popf
push
push
out
jmp
push
and
scas
sbb
add
push
inc
mov
arpl
or
adc
adc
movsb
test
shr
lods
sahf
ret
aad
or
test
mov
add
mov
pop
mov
lret
js
cmpl
push
int
fcmovb
es
orl
xchg
sarb
sbb
mov
icebp
sub
popf
out
dec
mov
lret
fwait
push
add
pusha
into
adc
mov
in
pop
mov
mov
out
add
loop
loopne
nop
leave
lret
mov
or
lahf
loop
adc
pop
mov
out
repnz
outsl
jno
lahf
jge
push
inc
lret
aam
mov
jg
ret
mov
xor
mov
mov
pop
in
daa
lcall
xchg
js
cld
xchg
push
mov
call
mov
imul
xchg
les
popf
dec
sub
add
adc
je
xchg
add
lods
jns
lahf
mov
xor
dec
sbb
popf
daa
add
dec
stos
and
cmc
pushf
stos
out
shrb
lahf
pop
push
or
cmp
cmpsb
leave
orb
xchg
test
fldcw
sbb
int3
inc
xor
hlt
les
jge
enter
xor
mov
iret
outsl
push
jp
shlb
gs
rcrb
and
sbb
hlt
xchg
rclb
in
xor
adc
sar
push
imul
jmp
sbb
mov
adc
repnz
mov
push
pusha
jge
imul
repz
daa
adcl
cmp
lahf
in
and
pop
sbb
fldt
in
shll
rdmsr
clc
fiadds
inc
or
xor
das
movsl
ljmp
leave
enter
add
subb
stos
mov
push
int
pop
stos
shlb
xlat
fbstp
dec
aad
mov
iret
push
xchg
xchg
bound
ljmp
test
jg
dec
push
orl
pusha
mov
or
dec
inc
push
sub
jle
pop
pop
sbb
subb
aad
ret
fwait
sub
lock
cmpsl
cmp
jne
in
jns
mov
sarl
iret
mov
mov
push
loop
xchg
ja
dec
insl
test
out
push
fisttps
mov
push
inc
ds
mov
fbld
pop
sti
sbb
push
ja
rolb
cmp
test
jb
test
es
imull
rcll
mov
mov
add
jne
cmpsl
leave
insb
sub
imul
shr
sahf
dec
bswap
inc
or
fs
mov
subb
leave
mov
aam
jl
dec
mov
jmp
push
xor
mov
mov
lds
das
inc
fisttps
mov
rcr
mov
nop
or
jno
int
or
lea
pop
lret
xlat
xor
in
mov
jno
mov
lahf
mov
sub
sbb
xchg
imul
lcall
dec
or
ret
out
loop
sub
addr16
cmpb
fucomi
sti
jg
addr16
andb
out
mov
icebp
into
loop
addr16
push
pushf
sbbl
jmp
fldenv
not
fwait
jne
pushf
sub
stos
jle
push
dec
cltd
xchg
xor
rcl
dec
scas
fs
loope
addb
push
das
jg
push
lea
xor
nop
dec
sbb
and
adc
clc
or
repz
mov
add
outsb
jns
cld
icebp
js
mov
push
stc
das
shlb
inc
imul
sub
notb
dec
test
loope
and
inc
aam
mov
jg
lods
ror
aad
mov
enter
sbb
iret
lret
cwtl
popa
xchg
ljmp
sub
and
test
ds
mov
or
ficomps
movsb
pop
sbb
insl
jecxz
xor
jp
lock
in
jnp
sub
ja
sbb
arpl
push
push
mov
push
mov
mov
repnz
shlb
out
arpl
mov
popf
xchg
mov
test
lock
in
loopne
and
sti
or
xchg
outsl
adc
lahf
and
inc
inc
pusha
mov
cmpl
mov
movsl
scas
jge
js
xor
js
popa
lcallw
pop
sahf
call
push
sub
in
xchg
pop
mov
insb
xchg
jge
aas
stos
inc
es
fdivp
jo
loopne
or
sbb
dec
in
out
insl
mov
jge
sbb
lods
mov
xchg
dec
test
or
mov
jp
or
into
sub
xor
or
dec
cmp
jg
repz
lret
shlb
xchg
add
and
mov
sti
inc
and
sti
adc
enter
fisubrl
and
int
sub
jns
ret
and
out
lods
sahf
pop
xor
dec
loop
mov
pop
dec
sbb
xor
jge
xchg
fidivrl
aam
shr
jl
mov
cltd
cmp
lcall
jecxz
addr16
push
fsubl
inc
mov
add
adcb
sub
cmpsl
push
push
mov
inc
push
dec
push
sahf
leave
imul
push
inc
xor
jne
dec
div
mul
pop
out
aad
adc
add
mov
sbb
lret
xchg
adc
out
shrb
clc
mull
add
loopne
cmp
push
dec
push
inc
cmpsl
inc
or
pop
cmp
jb
mov
shlb
mov
inc
mov
mov
out
inc
ss
xor
or
inc
sti
lahf
pop
cwtl
push
jb
cld
or
jns
push
loop
out
icebp
movsb
cmp
xchg
add
jno
dec
and
cs
xor
inc
dec
sub
or
push
leave
xchg
aam
push
xchg
iret
lgdtl
ss
push
outsb
addr16
mov
sti
mov
lcall
pushf
psubusw
scas
lods
pop
xor
xor
pusha
adc
mov
fcoml
fdivl
shl
jmp
in
sbbl
or
xchg
dec
rcrl
sbb
ss
lds
xchg
leave
mov
fldenv
stos
dec
jmp
pop
sbb
add
lods
fidivl
cmpsl
pop
push
stc
int3
jle
dec
jp
hlt
xchg
xchg
push
xor
sub
xor
notl
scas
cmp
out
push
adc
xor
loopne
icebp
mov
test
and
or
mov
jmp
movl
mov
lds
or
dec
push
in
loop
in
repnz
or
dec
mov
add
hlt
pushf
xlat
cli
leave
in
call
xchg
and
jne
ret
bnd
jmp
mov
js
push
out
shll
movsl
adc
xor
jne
dec
mov
or
cmp
cmpsl
dec
nop
xor
pop
cmpb
adc
test
or
loopne
push
xor
fdivl
ja
rorb
in
inc
subb
inc
sahf
inc
mov
ljmp
aaa
movl
pop
xchg
and
mov
or
divb
aam
stos
and
add
leave
cmpsb
cmpsb
pop
fisubl
jg
mov
lahf
ret
in
xchg
incl
loopne
cmpl
xor
fists
out
iret
mov
test
pop
lahf
adcb
mov
or
mov
into
arpl
sbb
in
movsl
mov
sbb
cmp
sbb
xchg
push
jmp
rorb
or
inc
ljmp
stc
xor
adc
xchg
push
jg
jge
je
mov
shrb
arpl
pop
and
push
out
lahf
les
add
xor
cwtl
popa
mov
and
mov
or
xor
stos
and
aam
popa
mov
adc
cmp
xor
mov
sub
xor
dec
aaa
icebp
popf
push
in
jp
mov
sub
lcall
jbe,pt
add
add
loopne
pop
bound
incb
or
mov
add
daa
lcall
insl
aas
jg
ffreep
inc
mov
lret
adc
pop
scas
jecxz
negb
mov
dec
je
in
adc
sbb
mov
nop
adc
mov
ja
jecxz
lods
mov
pop
push
mov
cltd
mov
push
lret
inc
jns
sub
push
mov
fldt
addr16
negb
push
push
test
and
js
mov
xchg
nop
xor
push
or
clc
int
cmp
push
jg
sbb
inc
mov
jp
nop
pushf
push
inc
inc
fwait
cmp
add
mov
leave
mov
ficompl
mov
mov
clc
lock
cld
push
cmpb
cs
out
sbb
dec
sarb
sub
cwtl
es
aas
mov
sub
repz
scas
rorl
cmpsb
jnp
or
xor
dec
aam
aam
mov
xchg
les
sbb
les
cld
push
movsl
je
roll
aas
add
fiaddl
xchg
sub
pop
iret
cld
sbb
or
mov
insl
enter
in
ss
mov
push
and
mov
push
jb
adc
xchg
mov
scas
xchg
add
sbb
icebp
push
test
cld
adc
jmp
jge
or
mov
sbb
sbb
mov
jnp
ficoms
xor
push
mov
sbbl
inc
adc
addb
test
or
lea
movl
fisubl
mov
xchg
js
adc
xchg
mov
xor
cmp
mov
mov
mov
cmp
nop
test
repz
xor
pop
mov
insb
pop
aad
inc
pusha
inc
xchg
test
dec
jge
sbb
clc
cmp
jbe
inc
add
jle
popf
mov
repnz
ret
lock
aas
ds
inc
mov
in
in
je
inc
add
out
call
mov
jae
fldcw
into
xchg
push
popa
testb
mov
inc
adc
stos
cmc
addr16
jg
push
int3
push
jbe
pop
pop
clc
inc
xchg
cli
adc
sbb
fcmove
jge
fstps
mov
adc
or
insl
cs
data16
out
pop
mov
call
dec
mov
jle
fldt
gs
or
pushf
push
cwtl
insb
sbb
dec
jbe
out
sbb
mov
mov
mov
addb
push
test
test
lret
push
aaa
push
sbb
sahf
jno
lea
out
gs
loopne
mov
popf
push
js
bound
shlb
cltd
mov
pop
call
mov
adc
mov
mov
jp
jb
es
in
lahf
inc
shll
sub
pushf
into
add
sub
xor
int3
shlb
jno
dec
js
sbb
pop
sbb
xchg
lock
orl
xor
testl
lock
ret
add
mov
or
xor
adc
inc
shlb
add
dec
nop
movsl
dec
jo
cltd
xchg
ljmp
lret
fldcw
inc
fisubs
adcl
mov
jle
cmc
add
sub
jp
outsl
clc
shrl
loopne
pop
mov
push
jmp
out
mov
clc
movl
lret
xor
lret
shlb
movsl
sub
cmp
sub
adc
mov
in
adc
imul
mov
ljmp
and
cmc
lcall
cmp
adc
jmp
push
lods
std
adcl
lahf
outsl
push
push
cmp
mov
mov
pop
in
sub
jnp
or
or
in
mov
dec
popa
cmp
adc
cwtl
mov
movsl
add
cmpl
mov
std
in
arpl
test
pop
cmp
shll
sti
jo
mov
mov
mov
sub
mov
test
mov
sbb
test
ljmp
cli
iret
and
dec
lcall
xor
mov
push
test
repz
pop
jge
dec
les
pop
push
and
iret
out
outsb
nop
mov
or
ret
xlat
lds
jle
sbb
inc
ds
scas
push
cmc
fucomi
inc
fists
push
and
sti
mov
adc
inc
mov
cmp
into
lret
out
mov
pusha
pop
cmp
cmp
xlat
popf
jb
push
iret
push
ret
xor
inc
xor
jo
in
in
pop
fldcw
mov
out
xor
pop
fsub
xchg
xchg
cli
push
dec
pop
fsubs
cmp
or
shl
int3
bound
jne
sarb
inc
into
test
les
mov
xlat
jnp
add
mov
iret
cmp
adc
in
and
aad
loope
jecxz
mov
out
jge
popa
jg
sub
js
xchg
or
or
leave
mov
mov
cwtl
pop
out
adc
mov
test
mov
aas
inc
xchg
xchg
adc
mulb
and
mov
push
push
add
adc
xchg
push
inc
out
add
or
andl
dec
repz
jns
ja
jp
push
xchg
xchg
lret
shl
bnd
cmp
adc
pop
adc
mov
pusha
test
pusha
inc
jle
xchg
sbb
test
and
repz
cmp
cltd
pop
test
fstpl
pusha
lahf
gs
lea
je
mov
cmp
movsl
pop
sbb
inc
cmp
mov
mov
and
pop
out
jnp
orl
ret
in
xchg
mov
in
imul
ja
mov
pop
lds
mov
js
sub
push
mov
repnz
mov
sbb
hlt
push
jns
jmp
ss
inc
cmpsl
and
shlb
and
into
and
push
sarb
inc
mov
xor
inc
and
push
cmc
sbb
divl
sti
sub
divb
push
out
out
mov
mov
sbb
repz
icebp
adc
sarl
sbb
mov
in
xor
sbb
sbb
jne
and
out
push
cmc
in
cmp
jp
adc
or
pop
stos
ja
in
jge
pop
mov
or
imul
lcall
push
test
lret
adc
shll
es
insb
scas
shll
fwait
adc
enter
arpl
out
jge
mov
lds
lds
imull
fistps
int3
jae
dec
lods
xchg
les
shrl
aam
xor
inc
inc
push
out
lret
dec
movsl
pop
testl
movsb
pusha
das
shll
pop
add
sahf
sub
mull
xchg
cmp
lret
mov
push
push
fdivr
hlt
sbbb
ljmp
or
adc
cmc
imul
and
xchg
roll
aam
sub
aad
test
add
jl
fcmovne
mov
addr16
xchg
leave
imul
lahf
pop
movsb
inc
ljmp
enter
loopne
ljmp
test
pop
gs
dec
push
aam
rorb
jae
rcrb
arpl
xchg
iret
movsl
pop
into
jmp
push
mov
cli
sarb
jmp
xchg
cwtl
mov
out
and
pop
mov
je
mov
inc
push
in
call
push
in
lret
inc
cs
js
jle
cs
or
dec
fistps
leave
stos
in
mov
lods
addr16
ret
mov
dec
add
jge
dec
fwait
mov
movsl
inc
cmpsl
cmpb
addr16
popa
repnz
lods
jno
fnsave
mov
inc
fnsave
movsb
or
mov
lret
and
add
mov
test
and
add
adc
or
negl
pusha
mov
stc
add
xor
sub
in
popa
cwtl
mov
xchg
mov
cmp
mov
andb
dec
xlat
insb
iret
xchg
sbb
mov
outsb
scas
daa
loope
out
xchg
xchg
repnz
jbe
scas
dec
pop
push
jo
sbb
sub
sahf
pop
sbb
cmp
gs
ljmp
out
push
mov
xchg
ja
test
jne
ja
dec
pop
inc
adc
jne
lahf
lea
test
cmpsl
loope
xchg
inc
cld
adc
bound
sub
mov
pop
xchg
mov
pop
xchg
arpl
lods
addb
inc
call
insb
cmp
mov
cld
mov
in
rcl
clc
add
xor
inc
cmpsl
call
out
xor
cmpsl
sub
jo
xchg
xchg
or
repnz
insl
pop
hlt
inc
push
push
xor
insl
setnp
insb
repnz
in
xchg
push
out
test
xor
add
rcrb
xchg
push
sti
sub
inc
inc
in
pop
fwait
inc
mov
dec
repz
loope
repnz
mov
jmp
rclb
idivl
fbld
sbb
jmp
lcall
ficomps
xchg
mov
pop
inc
or
xor
ds
aaa
negl
ljmp
or
sbb
xchg
pop
adc
arpl
mov
scas
or
cltd
push
cmpsl
add
mov
scas
arpl
stc
adc
inc
je
sub
cmp
pop
adcl
ss
dec
outsl
lds
xadd
dec
pop
out
dec
mov
bound
sbb
test
xchg
mov
sbb
add
jns
pop
and
clc
mov
mov
js
je
xlat
add
cmpl
aam
outsb
mov
ds
cwtl
aas
jecxz
inc
add
sbb
in
mov
sbb
iret
inc
int
mov
mov
pop
gs
sub
sbb
pop
jl
andl
test
cmpsb
cmp
jp
ret
lret
test
fwait
mov
mov
repnz
jo
nop
scas
mov
lea
fildl
adc
cwtl
dec
test
lret
mov
xchg
lret
xchg
insb
jecxz
and
jbe
xchg
add
sub
pop
jl
cli
idivl
mov
mov
fsubrs
push
or
shll
daa
popf
or
mov
jp
xchg
int
pop
jp
push
insb
xchg
gs
cltd
jae
pop
negl
push
mov
xchg
dec
jnp
xor
aam
inc
sahf
movsl
in
inc
inc
fisttps
arpl
mov
mov
jno
les
push
sbb
scas
xchg
bound
sub
jmp
adc
aas
or
dec
push
pop
pop
cmp
sub
lret
fwait
cmp
adc
and
cmp
pop
in
inc
icebp
mov
mov
sub
mov
test
iret
sbb
jg
out
cmp
loope
jge
adc
fs
xor
mov
stc
fiadds
mov
sub
pop
inc
mov
sub
dec
cs
frstor
cli
push
ret
ror
loope
sbb
sbb
test
adcb
aas
lds
std
aaa
adc
cmc
jo
dec
mov
shlb
insl
fiaddl
add
add
pushf
push
dec
ljmp
mov
mov
data16
mov
and
iret
mov
movsb
mov
movsb
jo
cmp
push
pop
add
push
sub
les
inc
add
inc
call
test
pop
mov
jge
add
lret
repz
call
lret
int
sub
imul
push
cwtl
fsts
shll
mov
sub
dec
xor
gs
xchg
jns
jecxz
movsl
movsl
jmp
je
adc
mov
jg
xchg
or
jo
enter
repz
cmp
addr16
inc
sub
jb
pop
mov
mov
and
les
add
mov
ljmp
mov
push
loop
popa
xor
fcmove
pop
cmp
or
jns
fistpll
lods
cmp
jno
pushf
pop
cmpsb
aaa
popf
lds
test
mov
and
movsl
sub
adc
mov
scas
mov
jle
test
push
push
or
xchg
adc
int
push
mov
inc
dec
test
mov
int3
mov
and
stos
pmuludq
xchg
outsl
icebp
sti
ss
adc
xor
add
jmp
sub
push
inc
in
jbe
in
subb
lods
ret
imul
dec
xchg
add
aam
or
dec
orl
xchg
pop
push
pop
movsl
push
mov
xor
push
jns
push
jo
int3
sbb
dec
fistpl
int3
shll
out
xchg
inc
mov
int3
and
push
sti
icebp
mov
mov
ficoml
int3
test
pop
insb
inc
add
jnp
in
imul
and
fwait
xchg
pop
pop
inc
lcall
fldt
insl
xor
xchg
push
cli
aas
movsb
push
test
data16
push
repz
shll
dec
pop
jo
jle
inc
pop
test
pushf
mov
cmp
arpl
ret
aad
add
pop
push
sbb
push
test
xor
mov
scas
out
shl
mov
cmp
ljmp
enter
xorb
cmp
roll
mov
inc
and
pop
add
xor
aas
cmpsb
push
aas
cs
out
dec
push
ds
cli
in
into
xchg
xor
rorb
cmp
or
push
add
shll
jns
pop
test
jb
test
xchg
daa
test
sti
jo
xchg
push
push
test
jnp
cli
ret
dec
or
in
jmp
fwait
leave
push
daa
or
out
lods
je
mov
arpl
out
add
in
es
cld
add
jns
mov
sbb
les
scas
cmp
mov
pop
xchg
arpl
xchg
shlb
jnp
or
roll
sub
mov
es
xor
fs
push
cmpsb
lea
mulb
and
dec
mov
daa
lcall
pop
lods
cmc
dec
fists
fdivp
fadds
cmp
subb
adc
cmpl
and
stc
ret
rcrl
stos
enter
adc
cmp
mov
enter
xchg
ds
sbb
sub
push
adc
pop
mov
or
pusha
sbb
sbb
cmc
cmp
xchg
ror
decl
movsb
mov
ljmp
jecxz
outsl
add
addb
jne
pop
mov
sahf
scas
add
or
sub
and
dec
sbb
push
imul
insl
sti
push
jle
push
rorl
xlat
loope,pt
ljmp
and
mov
mov
mulb
shl
mov
fstpl
jg
sarl
push
xchg
out
adc
sub
xor
test
mov
or
xor
sbb
shlb
xchg
scas
dec
rcl
adc
or
ss
pop
mov
addr16
gs
sub
test
fwait
insl
notb
aaa
adcl
mov
es
dec
test
stos
in
xchg
add
ja
adc
sub
inc
mov
pusha
inc
ret
mov
shrl
fs
sub
pop
dec
daa
xor
nop
aaa
sub
sbb
pushf
sbb
test
adc
lret
pop
popl
mov
out
ja
aas
es
jl
adcl
jbe
loop
mov
xor
or
je
sbb
mov
adc
sub
movsb
loopne
fcomip
testl
fildll
cmp
addb
cmp
mov
sbb
sub
cmpb
cmp
cli
xchg
je
nop
movsb
mov
cld
xchg
in
push
dec
outsl
js
orb
loopne
insb
dec
decl
mov
das
fnstenv
sbb
mulb
jle
and
mov
push
sbbb
insl
lar
jecxz
xchg
es
pmullw
popa
das
rcrl
int
and
dec
pop
inc
push
loope
out
icebp
pop
pmaxub
push
sub
mov
fucomi
jle
dec
fistps
cmp
mov
andb
add
push
sub
sbb
shlb
subb
jmp
dec
mov
jmp
sbbl
arpl
rcll
rcr
and
lret
cli
shrl
call
xor
add
xor
lcall
push
insl
jecxz
cmp
add
icebp
adc
pusha
add
cmpsb
pop
stc
cwtl
test
mov
dec
xchg
sub
std
test
xor
outsl
lods
adcb
mov
test
fidivrs
push
imul
pop
or
jns
in
lret
jbe
gs
adc
or
and
data16
jae
dec
xor
push
mov
and
cs
ds
or
xchg
lds
movsb
adc
xchg
movsl
dec
sti
in
dec
fs
lods
rcrb
adc
test
je
inc
mov
ss
mov
mov
sbb
pop
enter
sub
jle
insl
lcall
mov
mov
xchg
cmp
loope
jnp
jle
pop
movsl
arpl
fistpl
in
arpl
xorl
dec
mov
xor
or
ljmp
daa
dec
pusha
jp
push
stc
xlat
mov
das
dec
and
rclb
pop
mov
push
mul
dec
les
mov
in
cld
push
mov
or
cltd
xchg
and
aas
or
or
adc
cmpsb
sbb
sbb
sbb
push
push
in
sub
jge
or
push
rorb
cmpsb
mov
cmpsl
or
mov
je
cltd
clc
ficoms
mov
test
sub
adc
push
xchg
xlat
cmc
mov
xchg
test
adc
mov
pop
mov
sbb
cld
push
enter
shl
mov
ds
mov
jl
test
icebp
cmp
hlt
add
push
xchg
enter
and
movsb
loopne
push
mov
jg
xor
push
or
or
xchg
gs
inc
ret
or
add
clc
jecxz
outsl
xor
pop
test
and
test
push
pop
aaa
dec
cmp
pusha
xlat
sti
cmpsb
push
std
or
push
and
sbb
sbb
jbe
sub
cwtl
bound
mov
sub
test
shl
adc
pop
data16
mov
in
and
push
adc
pop
mov
push
cli
sub
leave
jbe
jns
jns
jno
loop
scas
lds
les
mov
fsubrs
mov
mov
scas
js
test
xor
pusha
mov
add
push
test
lods
popa
inc
fldcw
jg
fwait
sbb
mov
outsl
stos
inc
or
add
call
in
mov
js
lahf
scas
xor
xchg
stc
mov
push
mov
out
cwtl
xchg
sbb
xor
pop
push
mov
cli
adc
pop
clc
xor
dec
pause
ret
fsubrl
dec
mov
and
add
xchg
addl
arpl
lods
sub
xlat
andl
push
dec
fucomi
rcl
sar
mov
clc
push
fiaddl
mov
inc
inc
jmp
jecxz
ret
xchg
pop
cmpsl
fbstp
push
pop
in
rorb
je
insb
repnz
mov
sub
jo
push
lahf
mov
dec
push
pop
pop
arpl
pushf
rcrl
jp
inc
push
pop
out
sbb
sub
xchg
sub
out
cld
loop
xchg
cs
dec
push
sahf
ljmp
push
lods
inc
mov
mov
jl
testl
pop
hlt
pop
sbb
test
sub
stos
aas
dec
pop
inc
bound
scas
mov
stc
ficomps
and
cmpsl
fcmovu
sub
push
mull
xchg
cmp
sub
dec
xor
mov
adc
and
push
out
xor
stos
fidivs
lea
int3
ja
pop
sbb
sub
ljmp
push
jmp
cmc
add
xchg
xchg
or
insb
iret
testl
arpl
dec
push
adc
jle
or
fildl
in
out
dec
cmp
mov
cmp
loopne
push
ds
ficompl
lea
jp
or
mov
xchg
jnp
iret
dec
stos
xlat
sub
pop
xchg
mov
add
fsubl
xor
ds
xor
push
insl
xor
pop
mov
movl
divl
push
fmuls
shrb
mov
sub
push
add
push
orl
inc
daa
lret
bound
int
push
or
lret
push
pop
sbb
incb
cwtl
dec
out
js
fildll
cmc
add
push
insl
adc
jecxz
popf
or
and
adc
sbb
insb
push
and
pop
icebp
jne
jnp
mov
jno
ficoml
lods
sub
cs
adc
aam
adc
push
xor
push
push
aaa
icebp
jnp
fucomp
icebp
bound
icebp
xchg
dec
pop
int3
test
mov
push
in
sub
aaa
push
mov
cli
jae
outsl
mov
loope
mov
push
lahf
mov
and
mov
adc
pop
dec
jmp
mov
xchg
out
loopne
push
notb
lahf
rcr
aas
les
cmp
mov
loop
pushf
in
mov
mov
fwait
cmpsl
out
ja
xor
or
in
scas
add
fwait
push
int
leave
xchg
push
scas
mov
sahf
push
scas
xchg
sbb
inc
scas
je
or
enter
test
lds
mov
xor
outsl
push
rcrl
leave
js
lret
add
inc
and
cmp
cmpsl
cltd
dec
rorl
repnz
pushf
std
jmp
xor
nop
lea
cmc
popf
cmpsb
ret
jno
aas
repz
dec
in
cmp
push
loope
push
out
add
stc
xlat
xchg
movsb
test
call
es
xor
inc
pop
lcall
push
jo
mov
push
ffree
loop
or
shrl
int3
jp
mov
cwtl
movsl
adc
xchg
adc
mov
jle
mov
jbe
cmp
xchg
or
pop
pop
insb
sub
xchg
and
sbb
aam
nop
sub
pop
popa
jl
mov
xlat
adc
pop
outsb
and
ja
sarl
jmp
pop
jne
dec
fdiv
adc
push
repz
cmp
pushf
jecxz
mov
adc
lods
sbb
je
icebp
daa
loop
and
pop
jo
mov
adc
mov
and
cmp
adc
sub
pushf
and
mov
in
mov
dec
cli
jae
add
xorb
rorl
or
mov
lea
xchg
adcl
into
js
push
ds
mov
jne
push
in
pop
xchg
aas
in
push
xchg
movsl
fistl
inc
dec
dec
repz
adc
mov
out
hlt
mov
out
pop
and
xchg
xor
push
adc
shll
mov
adc
or
add
jle
sub
push
lea
jo
scas
inc
xor
aam
loopne
loop
lods
sti
std
cmp
cwtl
sbb
mov
and
rcll
scas
jp
push
sub
test
fists
adc
jne
pop
mov
dec
dec
pop
aas
xchg
jno
mov
sub
push
cmp
jbe
sub
ds
and
dec
mov
push
ret
stos
mov
push
popa
insl
jle
inc
cmpl
daa
sbbl
add
aad
sbb
cmpsl
fs
in
inc
popf
adc
cmp
dec
or
sub
push
cmp
popf
test
lds
add
popa
or
nop
iret
xchg
testb
out
push
scas
imul
stos
in
add
push
and
inc
cmp
push
imul
int3
jp
daa
clc
dec
dec
add
out
inc
mov
inc
or
jl
or
mov
nop
add
pop
mov
lcall
mov
mov
incl
or
jp
cmp
cmp
test
add
inc
xchg
dec
shrb
shr
or
jno
jns
xchg
cmp
loope
inc
sbb
repz
inc
mov
test
xor
std
xorl
lds
cs
push
cmp
jl
loopne
and
dec
mov
out
xchg
fbld
scas
outsl
in
cmp
jl
int3
dec
sub
push
dec
out
xchg
jns
inc
mov
or
out
pop
adc
and
in
mov
enter
in
in
jmp
loope
cwtl
push
gs
shl
or
lcall
inc
inc
xor
dec
jecxz
push
test
lea
fidivrl
dec
mov
lret
repz
arpl
and
mov
data16
jecxz
jle
test
insb
fdiv
sbb
push
push
jp
fsts
add
push
inc
ret
inc
mov
int
dec
jb
ret
cmp
in
xchg
insb
push
inc
rorl
push
push
hlt
roll
mov
stc
xor
sbbb
dec
insl
sub
insb
xor
cs
jbe
push
xchg
cmp
dec
rorl
imul
jg
mov
jg
and
insl
inc
stc
data16
call
mov
aaa
icebp
and
mov
sbb
div
jp
mov
popa
or
outsl
xor
enter
in
arpl
pop
addb
xor
inc
gs
jae
mov
repnz
push
add
or
jg
inc
data16
sbb
in
stos
mov
mov
shlb
not
sub
sar
jnp
cwtl
in
lock
inc
fs
pop
aas
stos
pusha
jle
cmc
or
std
xchg
jns
ds
aas
sub
push
or
outsb
lods
test
std
pop
adc
imul
jmp
mov
or
std
out
mov
jb
xor
jl
sub
sbb
int
mov
pushf
test
fbld
nop
push
pop
daa
xchg
mov
addr16
jmp
shrb
dec
jae
pop
pop
sarb
mov
push
pop
out
dec
stos
lea
bnd
mov
leave
mov
add
mov
mov
ljmp
mov
push
mov
imull
sub
xlat
jne
mov
push
mov
mov
adcl
sbb
xchg
cltd
cld
push
adc
sub
cs
jmp
test
cs
add
fwait
loopne
mov
cmpsl
pop
gs
call
sub
add
loop
mov
mov
add
insl
lret
push
lahf
xor
mov
dec
insl
sub
pop
mov
xor
scas
std
jo
out
int3
sub
call
inc
pop
in
xchg
lret
and
pop
data16
xor
or
inc
pop
outsl
mov
push
out
testl
inc
hlt
and
arpl
in
fs
mov
sub
pop
mov
scas
int3
sbb
and
ret
das
imul
xor
aaa
push
imul
cli
lahf
and
xor
cmpsb
mov
inc
mov
or
mov
mov
sub
int3
or
mov
lret
in
xor
insb
push
dec
fmuls
adc
repnz
xchg
xchg
je
scas
xchg
cli
leave
xor
aam
in
lsl
in
and
and
sbb
out
pop
xchg
inc
daa
mov
int
pop
das
jp
fdivs
cmc
ret
inc
outsl
test
aas
mov
xchg
out
cmpsb
inc
mov
stos
and
sub
push
jg
pop
cld
outsl
cwtl
lods
mov
mov
insl
mov
dec
js
push
mov
ljmp
shr
loop
les
data16
aad
arpl
cmp
cld
jmp
mov
inc
cs
sbb
and
fidivrs
fldt
and
mul
test
and
lcall
mov
mov
add
inc
enter
mov
adc
outsb
sahf
shrl
enter
jns
cwtl
add
shlb
je
lods
lret
xlat
sti
and
aam
add
mov
jmp
sub
add
jb
scas
scas
mov
or
repnz
clc
mov
xchg
fwait
dec
inc
jnp
bswap
ret
fcoms
mov
dec
push
and
fwait
or
mov
lcall
add
sbb
ret
sbb
or
xchg
mov
fsubrs
dec
dec
std
out
rolb
andl
push
lds
out
jne
adc
or
out
lahf
arpl
insl
sbb
ss
movsb
pop
outsl
icebp
clc
mov
and
scas
or
or
inc
mov
mov
jo
std
adc
mov
ffreep
mov
addr16
sub
xor
pop
pop
cmp
lret
fucomp
adc
cmp
stos
or
idivb
jnp
aad
mov
aaa
xchg
leave
adc
cld
xchg
or
in
sbb
pop
fstpt
scas
mov
test
push
call
dec
xor
cmp
fstpl
add
aam
jle
sub
push
inc
into
loope
repnz
jno
in
roll
dec
subl
rcl
sub
xchg
repnz
test
loop
shrl
sbb
cmp
adc
dec
jno
es
push
rolb
mov
push
aas
mov
push
jns
mov
loopne
jne
test
mov
outsl
xchg
in
insl
jle
or
mov
arpl
push
movsb
cmp
rcr
push
jl
sbb
pop
inc
lea
adc
mov
movsl
popa
cs
in
xor
mov
sbb
push
jae
dec
das
out
in
cmpsl
ret
jl
sub
hlt
push
pop
clc
pop
in
dec
testl
or
ss
and
pop
pop
scas
adc
addr16
ret
mov
mov
rorb
mov
sub
pop
insb
in
test
cli
add
push
or
mov
jnp
daa
cmp
iret
adc
adc
and
and
jns
mov
icebp
push
fiadds
xchg
fistpll
sub
sub
mov
int3
sub
pusha
enter
ret
inc
imul
mov
push
sahf
jnp
add
cmp
loop
mov
dec
stc
ss
xchg
lods
mov
or
icebp
pop
sbb
pushf
ds
or
xorl
call
enter
mov
add
stos
mov
xchg
fmul
mov
shl
mov
push
or
cmc
adc
sbb
push
imul
xor
dec
daa
out
xor
iret
lds
xchg
cmpsl
es
lods
shll
push
cli
inc
shrb
sub
push
push
push
and
ret
pushf
cltd
mov
rorb
mov
inc
xchg
imul
xchg
mov
or
push
or
ss
out
jno
dec
jl
hlt
inc
je
lret
imul
clc
sarl
idivl
pop
enter
mov
cmpsb
popa
bound
mov
lds
je
cmp
inc
rcll
jmp
mov
mov
pop
lds
xor
pop
test
adc
sub
mov
gs
nop
mov
cld
lds
fwait
mov
popa
nop
xorb
push
insb
mov
fisubrs
popf
mov
imul
fidivs
sbb
pop
jg
pop
cmp
test
and
std
mov
hlt
jo
adc
inc
ret
or
incl
inc
pop
mov
cmp
daa
or
in
mov
mov
loope
test
loop
mov
and
loopne
loope
and
stos
aas
sub
cwtl
add
outsb
mov
fwait
cmp
add
mov
inc
mov
xchg
fwait
jb
fdivrl
roll
or
aaa
mov
into
adc
das
mov
push
push
push
cmp
add
in
mov
imul
mov
es
push
in
in
push
pushf
push
jl
lods
aaa
ret
out
rorl
fstp
movsb
subb
lret
mov
inc
cmp
insl
cmp
jmp
xor
adc
mov
cmp
add
cmp
and
ret
cmpl
iret
xor
jns,pt
and
test
push
shrl
or
xorb
xchg
push
jb
add
in
xlat
sbb
shlb
mov
or
xorb
std
ljmp
xor
mov
sub
push
fsin
add
ljmp
mov
lcall
addr16
pop
mov
arpl
bound
jnp
mov
push
fwait
movsb
jb
mov
scas
adc
sbb
enter
imul
es
test
mov
mov
daa
std
bound
sbb
pop
and
pushf
dec
push
jmp
movsb
test
jns
sti
xor
push
mov
filds
sarb
popf
roll
sub
cmp
push
imul
push
pushf
test
mov
mov
hlt
add
dec
filds
mov
stc
adc
push
mov
int
pusha
add
insb
push
in
or
addr16
lods
into
test
or
js
inc
dec
pusha
jnp
inc
adc
and
idiv
into
cmp
xchg
dec
enter
leave
mov
or
adc
push
lods
adc
je
into
pop
ja
or
sub
addl
cwtl
or
repz
cwtl
add
stc
cmp
loop
pushf
xchg
test
in
aad
add
sub
and
imul
xchg
sti
xor
cmp
scas
std
aas
je
cmpsb
push
rclb
xor
testb
xchg
mov
mov
mov
outsl
ror
sub
push
in
adc
aas
mov
dec
js
lea
xchg
ret
rclb
cmpsl
push
push
sub
int3
jp
dec
push
sar
mov
divb
push
hlt
push
sbb
mov
cmpsl
push
inc
aaa
mov
dec
cmp
mov
out
mov
ja
mov
mov
rorb
in
or
jne
scas
arpl
pop
lods
stc
test
jge
into
push
fbstp
xorb
shll
fcmove
and
arpl
lahf
cs
push
popa
test
dec
or
mov
stos
pop
sub
add
adc
or
add
pop
test
xor
lret
outsb
and
test
and
mov
inc
stos
mov
mov
aad
fcmovb
push
mov
std
mov
jl
stos
add
in
rolb
mov
mov
popa
inc
call
gs
bound
lea
and
outsb
push
jbe
mov
cs
les
icebp
pusha
imul
or
push
gs
into
sub
push
cmp
and
std
lcall
or
out
adc
outsl
hlt
sahf
clc
xchg
pop
int
mov
addr16
dec
cmpsb
and
lcall
add
out
rol
add
out
fs
out
xlat
icebp
jecxz
arpl
popf
frstor
push
loope
ret
adc
das
dec
and
mov
arpl
pushf
sbb
bound
and
jmp
pop
inc
jne
mov
dec
add
lock
movsl
cld
rolb
movsb
cmpsl
xor
in
aam
cmpsb
add
repz
mov
jne
inc
fbld
repz
popa
fbstp
xchg
mov
sahf
subb
and
mov
push
mov
test
rcrb
cmp
cmp
push
dec
jne
inc
mov
or
popa
arpl
push
push
adc
sub
and
pop
and
add
pop
es
fsts
sub
call
mov
push
fldenv
mov
lahf
loop
shrl
out
xchg
adc
dec
jo
gs
jns
sbb
jmp
xor
jp
mov
and
pop
xchg
stos
ret
lret
push
push
adc
pop
pop
pop
lds
icebp
ss
adc
repnz
and
test
aas
rclb
mov
jmpw
pop
mov
mov
lods
icebp
repnz
iret
cltd
ljmp
jns
xor
fs
mov
xor
inc
faddl
pop
insl
sub
cltd
mov
aaa
lods
xchg
inc
sub
cmp
lds
jp
sub
add
out
jnp
xor
std
negb
int3
pop
and
mov
stc
out
mov
pop
call
loope
repz
pop
mov
ds
add
and
lods
or
mov
test
mov
jg
mov
movsb
dec
pop
adc
test
movsb
jne
cmc
jg
adc
cli
mov
imul
and
fidivl
adcl
loop
pusha
fidivrs
movsb
les
into
ja
les
cmp
lods
decl
dec
push
xor
xlat
inc
or
loop
inc
mov
xlat
xchg
out
out
iret
into
cld
rorb
dec
jb
mov
mov
pushf
dec
pop
ret
inc
sbb
je
mov
ret
push
lret
mov
push
adc
fwait
jp
jb
xor
push
push
ss
fdivl
sahf
dec
std
scas
das
test
or
xlat
pop
dec
cltd
sti
fs
mov
sub
into
mov
int3
or
xor
in
cltd
or
leave
dec
and
or
fcomi
bswap
mov
xor
or
stos
ljmp
pop
dec
add
aam
cmp
es
cmp
add
sub
sahf
and
dec
mov
idiv
pop
xchg
xor
cli
mov
fwait
inc
mov
cmc
and
xchg
mov
movsb
jo
hlt
pop
loopne
xor
mov
outsl
in
mov
stos
xchg
xchg
dec
repz
sbbl
jle
push
mov
int3
das
jl
clc
mov
mov
out
fldt
test
and
pop
jae
dec
xchg
xchg
cld
rep
xchg
lret
inc
mov
mov
out
jno
push
xchg
stc
fmull
sbb
cmp
jbe
sbb
iret
dec
cmp
cmp
sbbl
adc
pop
fstl
test
mov
xchg
cwtl
cs
xchg
xlat
pop
fdivrl
testl
ss
sub
jno
push
and
mov
repnz
dec
lock
mul
push
rcrl
cmp
jno
pop
out
inc
imul
movsl
mov
mov
xor
push
dec
test
inc
and
add
push
mov
xchg
jns
movaps
dec
inc
mov
sbb
inc
ljmp
ficoms
sub
jns
jno
aas
test
jno
push
lods
in
cmpsb
orb
ret
and
xchg
inc
xchg
cmp
mov
push
gs
xchg
je
negl
mov
cmpsl
in
sti
loopne
mov
jne
lret
and
repz
lods
pop
mov
iret
jbe
sub
sbb
jns
push
and
cld
dec
ret
int3
in
ret
xchg
mov
sub
lahf
inc
pushf
ret
cmp
xchg
mov
std
jmp
rorl
mov
lcall
in
stc
stc
stc
out
ja
xchg
adc
ret
mov
bnd
loope
mull
jecxz
cmp
sbb
mov
sbb
fsubrs
hlt
dec
jne
mov
xchg
fimull
rcrl
mov
push
jno
mov
divb
ret
xchg
and
movsl
arpl
xor
js
inc
dec
sbb
into
ja
mov
jae
push
sbb
dec
imul
stos
decb
cmp
scas
js
jnp
nop
jmp
bound
xorb
subb
rcrb
ljmp
push
jg
pop
jae
lret
jns
dec
dec
cmp
clc
jae
mov
xor
aas
sbb
test
push
mov
jno
mov
mov
decb
nop
daa
hlt
pop
std
pop
scas
popl
sbb
lock
sub
xor
pop
dec
adc
aad
daa
add
lds
cmp
dec
xor
sub
adc
pop
jp
adc
cmp
mov
push
or
sub
dec
cmpsl
pop
repnz
popf
add
adc
imul
and
andl
dec
bound
adc
int
push
outsl
mov
shrl
rcll
iret
pop
pop
inc
inc
mov
into
enter
push
decl
das
adc
test
inc
pop
cmp
dec
xchg
clc
aas
push
adc
inc
cltd
jno
into
and
sbb
in
aas
lods
popa
cmpsl
enter
push
xchg
lods
fsubrp
sub
sub
ljmp
in
sbb
inc
out
sbb
add
push
inc
lock
mov
adc
push
subb
jb
into
fs
add
popf
sbb
shrl
ret
xor
hlt
xor
scas
mov
daa
xchg
xchg
rorb
test
sahf
xchg
adc
inc
mov
mov
lret
lret
repnz
mov
jb
jmp
mov
inc
out
movsb
mov
cmp
jecxz
cli
jo
loop
pushf
arpl
popf
scas
dec
fadds
int3
nop
sub
sub
inc
jp
jge
fbstp
add
sub
lods
mov
mov
pushf
mov
push
popf
mov
xor
sub
xchg
xor
mov
dec
lcall
xchg
lock
pop
ljmp
lcall
adc
aam
lret
and
test
imul
addr16
pushf
or
imul
mov
mov
mov
mov
mov
ret
movsl
movsl
mov
jp
sti
jnp
rcrl
dec
and
sbb
xchg
mov
adc
xor
call
add
jp
cmpb
lahf
cmp
fldl
jae
pop
stc
out
or
ret
call
outsl
jl
ret
cmp
pop
push
imul
int
mov
dec
inc
inc
push
mov
inc
pop
lcall
in
test
sub
clc
outsl
sarb
fs
dec
repz
shrl
test
jno
jmp
pusha
jbe
scas
loope
movb
mov
das
lods
xchg
ljmp
imulb
add
sub
scas
push
push
fs
faddl
add
xchg
dec
faddl
push
movsl
adc
push
cmp
lods
ror
inc
pop
mov
sarb
xchg
jecxz
jge
rclb
std
adc
adc
shll
aaa
cmp
repz
mov
aad
jae
adc
dec
xlat
pop
int
push
sbb
jmp
add
data16
sbb
enter
sub
sti
sub
sahf
inc
cld
push
push
fcmovnbe
cmc
scas
mov
and
push
loopne
jno
fstl
lds
hlt
sbbb
bound
fimuls
into
jb
imul
fisubrs
cmp
int
xchg
repz
sbb
pop
mov
mov
test
xchg
or
mov
loop
jbe
push
lods
dec
js
jnp
mov
mov
dec
inc
cmc
sub
aad
in
mov
jo
aad
xor
fsubp
fidivrs
lahf
mov
or
cmp
sar
push
xlat
ret
add
test
inc
mov
jp
push
mov
shl
or
shlb
push
push
cmpl
dec
jae
repnz
clc
and
xchg
shrb
xchg
sub
call
jae
fcmovu
shl
js
loopne
push
dec
outsb
rcr
mov
fs
movsb
inc
push
adc
inc
je
mov
test
mov
gs
sub
sbb
mov
pshufw
adc
xchg
push
cwtl
cli
movsb
cmpl
cmp
fisubs
rcrl
xorl
add
or
dec
push
dec
outsb
daa
lds
shl
jg
xchg
iret
cld
mov
mov
in
mov
sbb
iret
sbb
sbb
add
arpl
jge
pop
lahf
pusha
out
les
roll
int3
mov
lods
mov
scas
mov
lock
lock
and
mov
xor
ljmp
hlt
mov
or
cmpsl
xor
xchg
hlt
outsl
pop
mov
popa
sbb
sub
lods
adc
repnz
insb
inc
jge
dec
jo
xor
jnp
icebp
mov
jge
negb
stc
testb
xlat
popf
dec
pushf
or
dec
xor
jns
and
fdivl
mov
xor
sti
dec
mov
mov
mov
daa
cmpsb
pop
inc
mov
cs
inc
negl
pand
in
or
cmp
jmp
jns
es
lods
fidivl
out
inc
aas
stos
jo
push
pop
cmpb
aas
sti
sbb
and
insb
push
pop
shlb
inc
cmp
cmpsb
dec
xchg
repz
add
mov
cmpsb
fstp
ljmp
jmp
insl
adc
mov
insb
cmc
rolb
aam
loope
addr16
gs
lretw
test
push
cmp
mov
xor
mov
mov
mov
pushf
xor
cmp
inc
xchg
and
xchg
cwtl
inc
stos
jne
cmpsl
paddsb
aam
dec
inc
mov
inc
and
arpl
push
inc
dec
icebp
shlb
mov
ja
add
les
dec
sbb
pushf
mov
dec
test
scas
mov
pop
and
xor
pop
mov
push
mov
jno
mov
inc
aad
and
mov
and
mov
cs
and
jl
loop
mov
lret
rcr
adc
mov
jae
mov
pop
rorl
mov
rclb
mov
dec
pusha
lods
ljmp
and
pop
lcall
filds
and
mov
xor
adc
test
cmc
pop
std
movsb
mov
pop
xor
pop
fcoml
push
mov
cmp
cmp
arpl
dec
loop
daa
shrb
test
push
arpl
int3
cmp
mov
int
xor
shlb
movsb
jmp
jb
rcr
pop
mov
cmpsl
adc
push
mov
addr16
mov
js
es
fimuls
int
cltd
fdivr
sarl
mov
mov
arpl
popa
xor
or
sbb
push
ljmp
adc
test
or
cmp
cltd
sti
dec
mov
mov
adc
in
addr16
mov
cmp
js
jecxz
test
popa
xor
push
add
aaa
cli
push
jmp
sti
push
scas
ficoms
push
pop
idivb
pop
ljmp
xchg
imul
shr
dec
test
cmp
ret
lds
popf
add
push
sbb
xchg
push
mov
mov
jbe
add
push
addr16
outsb
in
sbb
mov
pop
inc
dec
fstps
fwait
or
lret
mov
icebp
pop
pop
inc
mov
cmc
push
decl
mov
push
test
add
pop
xchg
fisttpl
pop
ja
inc
cmp
ljmp
push
test
test
adcl
subb
or
cs
mov
dec
int3
push
lahf
ljmp
mov
hlt
mov
lods
xchg
push
adc
decb
mov
mov
in
inc
and
sub
pop
jg
xor
in
jmp
or
push
xchg
das
dec
stc
aam
and
xchg
icebp
push
leave
stc
insl
push
mov
cwtl
aas
or
cli
std
mov
mov
cmpl
test
popf
sub
jb
cmp
xabort
in
push
test
test
iret
add
dec
icebp
bound
push
test
mov
dec
sti
and
jo
mov
fwait
test
adc
movsl
or
jo
out
sub
xor
mov
leave
sub
cmp
and
ja
lahf
push
lds
push
add
into
mov
jns
xor
dec
jns
das
dec
mov
push
aas
outsb
mov
shrb
imul
rclb
push
inc
roll
xor
add
push
dec
dec
or
pop
inc
jae
loop
subb
movups
pop
roll
into
push
add
mov
stc
dec
popf
scas
cmc
pop
mov
aas
xchg
ja
lret
int3
and
dec
xor
fstpl
xorl
pop
aas
sahf
leave
fisubrs
push
out
mov
mov
cvtps2pd
cmp
mov
aas
mov
ret
mov
arpl
xor
add
icebp
jmp
xchg
shlb
push
or
hlt
push
loopne
dec
fldl
out
cmp
stos
mov
outsb
orl
add
stc
test
mov
jnp
fnstenv
jns
push
rcll
lock
inc
lret
or
daa
cs
incb
adc
aaa
lret
adc
ret
xchg
int
cmp
push
pop
xor
mov
sbb
mov
and
xchg
je
xor
and
sbb
pop
push
or
dec
push
or
sub
je
aad
mov
fcoml
dec
jle
js
mov
into
aad
cmpb
mov
arpl
or
mov
cmp
adc
sub
push
sub
aad
push
xchg
mov
pop
jae
mov
inc
mov
mov
xor
cmp
push
rorb
int
add
sbb
aam
pop
stos
rcr
lea
cmp
xchg
enter
fistl
lock
enter
jl
int3
hlt
mov
push
sub
roll
scas
test
subl
cmpsl
jae
xor
jbe
sub
fisttps
inc
fsubr
add
scas
sub
push
arpl
clc
sarb
cmp
adc
xchg
push
xchg
push
movsb
cmp
pop
mov
incb
xchg
lea
lock
inc
adc
mov
pop
mov
pop
pop
out
sbb
daa
mov
rcll
leave
sahf
push
inc
mov
andl
movb
mov
stos
leave
xor
sub
mov
subb
cmp
pop
jbe
jle
int
loope
push
bound
imul
jecxz
iret
loop
pop
xor
and
dec
sub
insb
mov
mov
iret
push
addr16
inc
shlb
imulb
push
rolb
and
sub
rcrl
or
inc
shll
push
inc
xchg
xlat
lcall
push
ja
sahf
xchg
fmull
pop
push
int3
dec
mov
inc
dec
lret
push
les
push
scas
or
push
mov
scas
xor
adc
mov
mov
inc
stos
dec
cmpsb
loopne
incb
scas
inc
push
sub
and
mov
xchg
nop
adc
mov
lret
insb
js
cmovb
xor
stos
or
mov
adc
iret
jns
pop
loope
int3
xchg
icebp
add
xlat
mov
adc
push
fnstsw
mov
in
pushf
fs
push
or
addr16
push
out
fiadds
mov
mov
cmovnp
xchg
xchg
fimuls
lret
cmpl
fidivs
sbb
sbb
mov
or
cwtl
or
mov
outsl
xchg
aaa
rclb
sti
stos
add
dec
inc
call
scas
jl
mov
pop
ret
xor
iret
pop
jle
jbe
adc
sti
insb
xchg
lds
cmpsl
xor
in
popf
mov
sbb
mov
mov
or
lods
and
adc
mov
mov
pushf
cwtl
movsl
add
or
add
fists
aad
iret
cwtl
or
or
xor
pop
xor
jae
sub
hlt
jecxz
pushf
test
loopne
sbb
sti
sub
out
fcom
sbb
jecxz
ret
scas
xchg
xor
lods
pop
adc
fwait
jl
out
or
or
or
add
adc
sar
pop
fisubs
repz
hlt
clc
lock
pusha
pop
dec
xor
pop
push
cltd
cs
sbb
rcl
out
fwait
cli
scas
push
pop
xchg
movsb
cmpsl
xchg
inc
mov
mov
loop
pop
xor
add
nop
ljmp
lret
loopne
mov
and
imull
xchg
outsb
push
imul
and
pop
ss
jecxz
pop
xchg
adc
adc
mov
dec
ss
mov
sti
fwait
cmp
shld
lret
push
xor
cwtl
mov
repz
and
bound
mov
gs
jp
test
insl
jbe
jb
adc
nop
lcall
push
xchg
cmp
pop
dec
std
pop
jmp
sahf
sbb
pop
mov
sub
popf
xchg
xchg
cmp
jne
imul
or
cli
icebp
lret
lods
jecxz
mov
cmp
mov
ret
xor
mov
jne
mov
mov
mov
mov
sbb
fimull
stc
jle
cld
comiss
xor
pop
adc
xchg
popf
js
adc
lds
out
fidivs
adc
adcl
sarb
cmp
push
call
xchg
insl
push
loope
sbbl
js
mov
lea
and
fldl2t
mov
pop
add
ret
push
inc
xchg
scas
movsl
inc
mov
pop
dec
pop
jae
ret
xchg
sub
sbb
dec
jno
jp
sbb
xchg
mov
imul
mov
aam
inc
imul
xor
cmc
sub
movsb
mov
mov
add
loope
sub
pusha
stc
and
mov
mov
mov
jne
add
test
out
jne
push
std
pop
pop
sahf
into
jge
jne
inc
in
out
xchg
fstpt
test
and
js
xchg
repz
mov
shr
scas
popf
push
and
cmp
add
xchg
jecxz
idivl
bound
rclb
inc
sbb
sarb
add
add
add
sub
in
push
pop
and
pop
loopne
lcall
inc
xor
fdivrl
lcall
imul
cmp
test
push
les
sti
push
rcll
pop
push
popa
stos
push
jp
sub
iret
loope
jmp
shll
adc
push
jns
dec
sbb
test
cld
cmp
daa
dec
ds
bound
dec
cmpsb
leave
in
fldt
loop
push
loopne
xor
repnz
xchg
pushf
sbb
out
sbb
bound
pop
movsl
dec
lea
mov
fsubrp
cld
in
mov
and
xchg
call
dec
xchg
mov
in
test
or
cmp
sti
aad
and
sbb
idivl
insb
lock
push
cmpsb
mov
cmp
imul
lods
scas
cmpsl
jecxz
ja
lods
add
loop
fidivs
and
jg
lret
mov
das
test
pop
test
adc
out
or
sub
or
mov
inc
add
and
mov
jge
iret
pop
aas
inc
shrd
mov
push
inc
loopne
inc
dec
sub
inc
int
pop
inc
pusha
lcall
sahf
cwtl
ljmp
push
adcl
arpl
fistps
jae
imul
push
movsl
fwait
aad
pop
fstl
mov
push
sbb
enter
inc
push
inc
lds
aaa
int
jo
or
loopne
add
jnp
aas
aaa
or
cmp
out
sub
pushf
pop
or
popf
ja
pushf
jecxz
pushl
mov
or
stc
lahf
loopne
sub
xchg
je
sti
aas
cmpsb
cmp
xchg
pop
jae
cmp
mov
rorb
or
pop
jo
sub
mov
adc
sbbb
movsb
push
or
loopne
arpl
add
jmp
pop
out
fnstenv
pop
sbb
xor
mov
mov
cli
std
aas
add
xchg
sub
pusha
push
ret
xchg
add
das
dec
adc
subl
ret
add
aaa
xchg
stos
pushf
test
lahf
push
pop
pop
fbld
pop
xor
dec
dec
fildl
jle
inc
negl
ret
pop
mov
sub
jg
sub
mov
xor
lret
int3
add
es
sarl
gs
dec
cmpsb
cld
dec
jge
xor
mov
xchg
mul
pop
and
out
cltd
mov
dec
cltd
lods
mov
xor
cmp
rcrl
fsubr
adc
dec
mov
stos
add
sbb
cmp
and
inc
adc
push
cld
mul
inc
bound
and
imul
daa
into
shlb
mov
sub
sahf
jl
ss
push
popa
lcall
scas
cmp
test
pop
jl
addr16
and
mov
pushf
loopne
xor
push
mov
inc
and
icebp
xchg
mov
rcrb
std
fs
clc
xor
icebp
out
mov
cmpsb
daa
xor
jg
int3
xchg
sarb
dec
sbb
popf
cmp
out
lret
xchg
mov
sahf
cmp
xchg
pop
xor
icebp
adc
pop
mov
mov
rcr
aad
fdivl
xchg
sbb
sub
pushf
scas
shl
movsl
ja
cmpsb
bound
pop
aam
divl
mov
std
flds
xchg
movsl
imul
popf
stc
cmp
sahf
sbb
es
mov
lcall
dec
sub
jmp
hlt
inc
test
push
xchg
mov
ss
sti
add
fs
pop
mov
cmp
sbb
enter
adc
cmp
jg
sti
cmp
mov
mov
pop
insl
or
sbb
xchg
scas
mov
sub
lods
push
xchg
dec
into
xchg
cmp
sahf
sub
je
jp
xor
repz
and
push
inc
cmp
xchg
int
lods
pusha
mov
add
int3
xchg
es
jle
cltd
and
mov
pop
mov
and
sarl
out
sbb
inc
bswap
cs
popa
adc
test
icebp
mov
pop
jnp
or
dec
sbb
mov
fsubr
popf
and
outsl
mov
sbb
jl
mov
xchg
cmc
pop
aad
fildl
mov
gs
pop
loop
add
lods
rorb
mov
push
daa
cmp
bound
mov
cmp
lret
cld
outsl
xor
cmc
mov
bound
js
shll
clc
call
push
jns
xchg
cmp
fld
fsubs
mov
imul
fwait
gs
es
pushf
call
jae
std
mov
push
in
inc
orb
notb
test
lock
or
jae
add
jnp
sub
subl
aaa
sub
loope
cli
xor
enter
out
fidivs
xlat
xchg
pop
sub
pop
cld
mov
push
fs
mov
jnp
outsb
pop
lahf
mov
push
lock
js
pusha
js
ret
sbb
mov
mov
cmc
test
pop
scas
pop
pop
push
cmp
pushf
cmovns
loopne
lods
and
gs
push
push
adc
shlb
fs
pop
into
jb
imul
cltd
aaa
rol
sbb
and
pop
test
into
inc
cmp
test
add
cmp
rorl
cld
sbb
xchg
sub
lahf
mov
into
jbe
xor
imul
xchg
jmp
or
insl
loopne
ja
inc
dec
popa
cmp
jecxz
addr16
add
mov
out
mov
sub
pushl
and
xchg
push
xor
insb
lds
sub
scas
lock
clc
mov
jle
pop
push
sbbl
lds
leave
mov
movsb
jb
mov
hlt
xchg
loope
and
push
mov
popa
popf
or
xchg
es
mov
dec
out
cli
stc
push
ds
es
pop
cmc
in
jns
lahf
push
pusha
imul
push
mov
aam
sarb
add
and
dec
mov
pusha
fidivrs
imul
cmp
imul
dec
or
sahf
adc
mov
subl
pop
cmp
fdivrl
repz
mov
lock
scas
in
cld
aad
imul
lcall
andl
cmp
lea
sbb
aaa
push
and
enter
jp
xor
jge
insl
aas
dec
rorb
aad
stos
or
add
mov
pop
outsl
mov
push
mov
cmp
xchg
mov
or
aaa
sbb
in
repz
fcmovne
dec
pop
inc
xor
xchg
mov
and
int3
dec
daa
imul
inc
in
lds
push
fnstenv
test
ret
fcoms
cmp
scas
jo
sarb
mov
andb
popa
je
clc
jle
jge
lods
pop
dec
jne
or
jne
xor
mov
jge
js
inc
or
fildl
add
add
sub
mov
and
inc
scas
pop
pop
mov
pop
and
shl
ficoms
pop
xorl
or
mov
aaa
in
aaa
bound
mov
out
inc
cld
clc
std
ss
in
lods
sub
pop
pop
es
sub
lret
nop
ret
jecxz
sub
mov
aaa
xor
mull
icebp
push
dec
mov
xchg
loope
rorb
movsb
inc
mov
sbb
xchg
lahf
pop
scas
push
ret
mov
adc
adcl
js
stc
add
arpl
lds
cli
mov
stos
push
inc
xor
inc
test
in
popl
ss
mov
inc
xchg
lds
call
push
inc
fcoml
push
insb
adc
cmpsl
lret
test
jo
jns
xor
xchg
outsb
lret
les
insl
xchg
movsl
mov
cmp
data16
imul
or
clc
jl
shlb
sbb
mov
imul
push
jno
arpl
add
popf
cmpsb
and
adc
inc
sub
cmp
xor
inc
in
xchg
push
push
or
jne
xorb
wbinvd
sub
push
jns
add
push
jns
add
inc
xchg
mov
add
mov
jo
ljmp
or
out
mov
dec
iret
cmp
in
cmc
shll
daa
fcoml
dec
mov
std
pop
add
jg
and
lahf
call
loop
lahf
jle
mov
and
lods
hlt
cmc
movsb
ljmp
cltd
and
mov
dec
in
cmp
nopl
adc
popf
int3
sti
push
aas
or
adc
jle
lret
jns
add
add
jmp
iret
aad
or
and
repz
cwtl
cld
lcall
das
mov
in
fsub
push
aas
lods
loop
inc
add
les
sub
mov
shrb
les
mov
sbb
scas
xchg
lock
inc
gs
xchg
cltd
push
into
lods
arpl
outsb
sti
not
mov
popf
fidivrs
mov
inc
pushf
call
lcall
adc
lds
lds
aaa
dec
mov
fidivl
insb
xchg
mov
mov
lods
adc
scas
pop
out
or
test
mov
mov
lods
leave
mov
outsb
leave
sub
popf
add
and
or
scas
loopne
rcrl
aad
test
ret
in
aaa
das
rorb
cmc
push
test
fisttpll
ds
xchg
rcll
mov
and
inc
cmp
mov
or
cmp
outsl
out
jnp
pop
jg
xchg
int3
ja
int3
aaa
mov
out
jle
adc
pop
cli
dec
jb
fdiv
push
ljmp
daa
in
cwtl
cwtl
push
nop
cmpl
lret
aas
or
lods
push
mov
mov
dec
js
mov
mov
jmp
cmp
or
xchg
inc
push
test
sub
mov
notb
jp
movsb
mov
in
lods
mov
or
add
inc
dec
cmp
inc
cmp
xchg
outsl
sbb
push
test
dec
jno
dec
lock
pop
xlat
or
out
push
jp
cltd
and
and
js
int
xor
xor
dec
push
lcall
fadds
rcr
daa
lock
cwtl
je
divl
out
ret
sbb
push
fucomip
jmp
and
inc
inc
push
js
mov
cmp
sub
pusha
mov
dec
cmc
rcrb
push
pop
inc
pop
pop
sub
pop
add
popf
in
cli
movsl
xchg
adc
mov
jae
test
outsl
lods
xchg
testl
dec
insl
add
cmp
addr16
mov
ficoms
lock
sub
dec
sbb
jmp
inc
lahf
mov
testl
ds
cmp
enter
sbb
cmp
int
sti
out
and
push
xchg
inc
mov
jo
cmp
mov
pushf
push
mov
inc
push
dec
inc
mov
xorl
xor
pop
adcb
lds
mov
pusha
pop
or
stos
daa
mov
cmc
jmp
out
shrb
push
add
leave
lahf
xchg
popa
hlt
add
out
in
sub
push
das
inc
cld
jp
stos
xchg
dec
mov
daa
push
sbb
cmpsl
sub
popa
hlt
jb
ret
pop
cmp
cmc
popf
mov
jecxz
dec
dec
leave
dec
mov
jp
stos
mov
cmc
into
into
xor
xchg
idiv
or
lret
mov
adc
adc
or
or
cmpsl
mov
aaa
lret
xor
push
cmpsl
out
dec
cs
push
cmp
es
sub
je
fxch
sub
fidivrs
xchg
dec
jmp
adc
out
push
sub
outsb
push
rcrb
adc
or
jnp
pop
add
sbb
jno
adc
repnz
lahf
sub
jb
mov
dec
nop
inc
je
repz
ja
mov
popf
add
les
pop
ss
mov
ljmp
movsl
xor
mov
sub
imul
movsb
fcmovbe
and
pop
pop
jno
xchg
adc
lret
push
adc
jns
adc
hlt
mov
aam
insl
and
xor
mov
cmp
std
scas
adc
mov
cs
cwtl
js
pop
dec
xchg
orb
xchg
and
rcrl
xor
les
int3
shl
std
sar
lret
push
pop
jne
or
loop
ljmp
cmp
int
mov
mov
xchg
mov
mov
iret
or
das
aam
mov
out
or
sti
cmp
jae
push
sub
push
mov
ljmp
mov
cmpsl
dec
jae
push
xor
js
js
lock
ja
lret
sbb
fstpl
mov
sbbl
inc
jg
inc
mov
inc
sub
gs
stos
test
cmp
xor
inc
icebp
dec
loop
and
mov
inc
aaa
adc
shll
and
adc
cli
mov
and
jle
cmp
sbbl
cmp
cmp
xor
aad
test
sar
imul
rorl
enter
pop
push
fisubl
xchg
movsb
ficomps
xor
fs
or
and
mov
jmp
out
aas
xchg
push
lahf
lret
js
push
mov
fidivs
jbe
cmp
sarb
adc
or
pop
enter
add
sbb
xor
jp
inc
loop
lcall
dec
or
xchg
aas
in
ficoms
jno
notb
fsubrl
je
mov
in
cmp
xor
rcll
xor
test
dec
or
jle
and
pop
movsb
jecxz
arpl
xchg
int
repnz
push
push
test
mov
mov
pop
adc
xchg
and
das
imul
scas
jl
sbb
push
xor
or
pop
push
add
pop
incb
jno
adc
push
rclb
cmp
inc
cmpsb
clc
call
pop
imull
push
sbb
inc
fisttpll
mov
aad
adc
xor
xchg
in
mov
test
data16
out
xchg
imul
lahf
in
add
xchg
fisubs
loope
cmp
mov
pop
jmp
aad
loopne
pop
inc
ljmp
jne
mulb
call
add
mov
lahf
mov
mov
or
inc
cmpb
mov
incl
fldl
dec
ret
mov
jmp
mov
movsl
jmp
bound
rcl
xchg
clc
or
outsl
or
lahf
stc
add
test
cmp
leave
sbb
lcall
shlb
iret
lock
add
pop
imulb
pushf
inc
mov
sub
outsl
imul
cmpsl
or
sub
jg
xchg
xchg
xchg
cwtl
lock
popf
ret
push
mov
movb
mov
icebp
sub
xchg
push
or
lock
adcb
fadd
pop
loopne
sub
adc
ljmp
pop
frstor
mov
push
xlat
insb
sbb
mov
mov
loop
fs
sub
jbe
icebp
xor
push
add
orl
in
jns
loop
rclb
adc
xor
sub
mov
sub
std
push
xchg
jp
adc
jge
int
xor
add
into
xor
loopne
lock
pusha
call
fidivrl
or
sbb
xlat
mov
dec
lret
addb
movsb
sbbl
xchg
out
xchg
mov
pop
dec
jnp
jl
jb
adc
aaa
jnp
add
and
cmp
nop
enter
test
push
nop
jbe
cmp
xor
subl
das
jno
out
gs
pop
in
lea
rcrb
cmp
daa
mov
fadd
dec
das
xor
fwait
xor
push
les
and
popa
and
daa
jbe
inc
pop
jne
gs
ja
fstpt
out
stos
pop
movsb
insb
jno
psubq
mov
mov
fnstcw
test
fmull
pop
fiaddl
call
dec
scas
mov
ret
les
rorl
mov
dec
arpl
ror
or
push
xorb
imul
ljmp
popf
xchg
mov
push
jle
loop
jl
push
sti
cmp
shlb
pusha
jp
dec
xchg
insl
insb
mov
push
mov
pushf
dec
pop
popf
aaa
movsb
pop
xor
sub
lock
add
ret
ret
imul
sbb
aam
jmp
stos
inc
dec
ljmp
mov
inc
std
inc
push
dec
jo
inc
bound
push
imul
xor
ljmp
jle
xchg
ror
inc
orl
std
pop
fsubl
xchg
push
pop
cmpsb
xor
mov
pusha
pop
lcall
in
out
sub
cmp
out
and
inc
xchg
dec
aam
dec
mov
dec
shll
aas
iret
repz
jno
popf
mov
inc
jb
sub
repz
ja
jge
xor
dec
mov
shlb
sar
pop
xor
int3
fst
ljmp
rclb
loop
incb
nop
sti
xchg
aas
test
out
push
add
and
jbe
mov
jecxz
imul
loope
xlat
fsubrs
loop
mov
testl
lea
pop
dec
mov
into
add
je
mov
popf
cmp
popl
xor
fs
adc
sbb
fnsave
inc
pop
mov
sbb
inc
arpl
pop
adc
inc
push
loopne
pop
push
fistps
mov
adc
pop
and
dec
push
push
sub
and
jle
subl
xchg
sahf
fwait
sub
cmp
pop
jno
jmp
orb
and
xchg
mov
je
push
inc
push
dec
rorb
lret
push
pop
add
pop
iret
and
xchg
or
stos
test
push
pop
mov
dec
sti
shlb
xchg
ds
pop
cmp
cmp
int3
mov
cwtl
jmp
decb
dec
sub
and
xchg
jp
pop
add
cmpsl
add
sub
fwait
inc
dec
jmp
mov
ds
jb
imul
repnz
mov
adc
repnz
mov
mov
ret
pop
shrb
aaa
adc
movsb
cmp
cmpsb
mov
pop
test
andl
aaa
jg
repz
pop
jmp
popf
cmpl
jbe
ds
mov
adc
inc
test
xchg
in
aaa
and
loop
and
push
ja
jecxz
mov
adc
pop
data16
dec
out
js
adc
xor
lret
fcoml
adc
cmpsb
adc
cwtl
sbb
aaa
fbld
jecxz
adc
jns
das
or
jno
bound
pop
cld
pop
lcall
sub
jbe
aas
xor
shlb
pushf
add
xchg
pop
and
sub
pop
jno
adc
adc
xchg
sub
mov
and
mov
xor
add
pop
test
add
aam
inc
sbb
mov
cmp
xor
sahf
dec
call
jae
out
add
cmp
insb
sub
aaa
mov
cmp
js
jnp
pushf
mov
aad
lea
cltd
scas
lret
js
cmp
daa
sti
jp
sbb
idivl
xchg
les
and
jg
pop
jo
mov
push
shll
cltd
sub
jno
add
cmp
jns
xchg
inc
mov
rclb
repz
lea
pop
push
sbb
lds
int3
xchg
out
loop
xchg
jnp
fidivs
inc
sbb
es
inc
incb
sbb
icebp
cmp
fdivs
loope
popf
insb
test
adc
or
sbb
jbe
insb
nop
or
test
add
push
adc
shlb
adc
push
mov
test
test
aaa
inc
je
lcall
inc
shl
mov
stos
jno
and
ja
inc
mov
xchg
dec
dec
cmp
jo
jnp
pop
add
jge
cmpsb
mov
cmp
sub
cmp
dec
push
jle
leave
in
xchg
push
adc
imul
inc
in
sub
xchg
mov
out
outsb
adcl
loop
xor
pop
sbb
jnp
sub
dec
or
xchg
cmp
add
fidivl
fcomps
jo,pn
xor
sub
das
mov
in
add
dec
or
aam
clc
gs
dec
add
xor
jg
rorl
push
sbb
and
addr16
dec
inc
jnp
test
mov
xchg
add
jns
xor
push
jno
adc
movsb
push
adc
push
fs
and
inc
jge
insb
inc
mov
aaa
lahf
cltd
testl
test
out
out
adc
ljmp
pop
stos
pop
xchg
call
inc
rorl
or
jmp
inc
shll
out
dec
push
mov
rclb
sti
or
mov
fisubrs
and
and
loop
pusha
xchg
aas
or
imul
cld
xor
push
mov
imul
leave
nop
add
mov
idivl
xor
xchg
cltd
fsubrs
inc
shl
movsb
movsb
fimuls
xchg
cmc
sub
dec
jnp
lret
out
fbld
cmp
add
imul
out
out
jns
sub
rcll
inc
inc
sbb
or
mov
in
sbb
push
aam
mov
leave
dec
pop
fadds
dec
cmp
outsb
jns
loope
jle
fwait
in
dec
xchg
cmpsl
mov
aaa
jbe
popa
pop
outsb
insb
fdivs
lcall
pop
jns
rorb
xlat
into
fs
cld
das
cmp
push
cld
xor
mov
mov
pop
int3
cld
pop
pop
idiv
inc
jb
stos
rcrb
rorb
sti
xor
inc
inc
cmp
sti
sar
push
cmp
add
popf
std
rorb
mov
andl
addr16
shrb
cmp
push
hlt
dec
push
outsb
sarl
mov
ss
cmp
ljmp
daa
push
ret
roll
out
lock
pop
jb
mov
je
sub
jns
imull
fwait
jle
pop
and
subb
push
jno
cmp
push
imul
jmp
adc
lds
pop
stos
cli
or
xlat
cli
fimull
shll
push
dec
fnstsw
mov
or
pop
idivl
adc
aas
insb
ficomps
inc
pop
sbb
xor
pop
add
or
jno
push
xor
test
hlt
fwait
add
repz
adc
cmp
enter
push
xchg
xor
test
aas
repnz
lgs
add
cmp
out
data16
movsl
mov
lods
cmpl
aas
cmpb
jmp
jp
jle
out
fbld
mov
inc
xlat
inc
fcmovbe
mov
inc
ficompl
outsb
mov
clc
outsb
ljmp
sbb
filds
in
and
dec
in
xchg
cmpsb
adc
push
and
scas
add
dec
fsubrl
jo
push
cwtl
inc
pushf
and
lods
push
sar
cmp
scas
jns
jbe
mov
clc
inc
push
into
sub
rcl
stc
fstpt
push
cmp
mov
fcomps
dec
lret
xor
inc
dec
aad
loopne
pop
sbb
inc
stc
mov
fisttpl
mov
das
mov
mov
cli
cmpl
cmp
xlat
xor
lds
pop
lods
inc
fidivrl
cmp
ret
cmc
fidivl
cli
jmp
cld
pop
sarb
sub
rol
shr
cli
sbb
jae
push
push
and
sub
xchg
sbb
imulb
mov
ret
push
jg
dec
hlt
test
stos
xor
xor
inc
les
repz
mov
repnz
mov
push
add
cwtl
cmp
jb
xchg
pusha
push
xchg
scas
add
jecxz
jg
xchg
mov
movsl
push
sahf
mov
mov
add
cmovge
test
inc
jle
in
sbb
lcall
in
mov
inc
movsl
mov
dec
xor
imul
jg
js
pop
iret
cmpsb
test
out
rorb
insl
stos
cmp
gs
mov
sbb
or
lcall
nop
mov
cmp
cli
pop
icebp
sti
clc
xchg
push
adcl
andb
jne
out
std
in
jle
fidivrs
sahf
sbb
ds
scas
subl
cwtl
and
fildll
xchg
shll
out
fbstp
in
sub
shll
add
xor
movb
add
lods
fadd
outsl
pop
push
sub
outsb
ds
cmp
fdivrl
pop
cwtl
cmc
and
stos
push
or
xchg
je
cmpsl
xlat
mov
pop
push
out
and
push
pop
inc
push
lcall
push
cld
js
subb
cmp
imul
push
mov
popa
jae
data16
jbe
cmp
cmovno
icebp
mov
dec
data16
cmp
pop
cmc
shrl
mov
or
xor
jb
jno
mov
push
pop
divl
pop
leave
xchg
gs
inc
jl
jae
jl
pop
xchg
pop
arpl
push
dec
clc
jae
in
lds
xchg
sbb
sbb
mov
cltd
aam
pop
mov
and
lods
inc
les
bound
rolb
jns
inc
ret
adcb
sub
mov
cmc
inc
hlt
rcrl
scas
inc
subb
jbe
jl
sbb
xor
pop
repz
and
stos
jp
or
push
sbb
lock
mov
cmpsl
cs
mov
or
lahf
push
and
mov
jnp
outsb
dec
leave
les
pushf
nop
mov
lods
xor
jno
aaa
aaa
adc
nop
aam
cld
inc
adc
xchg
lret
and
mov
inc
scas
xchg
mov
pop
pop
or
cmpsb
lock
lods
aas
mov
add
push
mov
out
pop
cmc
imul
add
cmp
mov
lcall
add
and
mov
ja
jnp
icebp
dec
icebp
ja
lret
sbb
jp
in
sub
adc
dec
mov
mov
movb
dec
js
lock
mov
pusha
sub
add
lret
jmp
test
push
scas
jle
xlat
je
mulb
fidivl
mov
push
rorl
xlat
add
xor
test
jle
addl
out
sub
dec
fcoms
adc
or
inc
add
arpl
and
cmp
push
std
imulb
je
ret
cmp
sbb
mov
fdiv
jo
push
pop
jns
xor
jno
inc
push
sub
cmc
add
mov
push
fwait
pop
ljmp
add
push
ljmp
mov
imul
cli
adc
push
dec
jae
sub
pop
mov
lods
xor
cld
fdivrs
mov
adc
xchg
jbe
out
cmp
into
aaa
stos
add
sub
test
pop
cs
inc
cltd
jnp
repnz
jbe
mov
aad
mov
and
pop
loope
arpl
dec
push
fidivl
jle
add
pop
scas
push
jo
xchg
adc
inc
push
jle
mov
mov
mov
xchg
xchg
xor
mov
cmp
adc
and
int3
or
gs
adc
mov
jo
cmp
and
pushf
bound
and
mov
inc
mov
insl
lret
mov
xchg
sti
movsl
ficompl
fs
bound
int3
jae
shrw
pop
adc
push
mov
or
dec
pop
or
mov
cwtl
sbb
out
cmp
lcall
mov
adc
sbb
rorb
jp
mov
into
movsl
xchg
jnp
jmp
mov
sbb
xchg
je
adc
push
xchg
stc
xchg
or
notb
stc
stc
pop
jb
cld
mov
inc
dec
rcl
add
int3
adc
mov
test
mov
pop
jle
adc
and
inc
int
add
dec
cmp
nop
or
jne
jp
mov
push
inc
push
or
das
inc
jb
std
pushf
cmp
xor
jp
xchg
out
push
bound
outsb
mov
jns
push
hlt
push
and
push
pop
xchg
or
jo
jnp
adc
cmpsl
fistl
inc
mov
cs
jb
xor
out
ljmp
pop
incb
sti
sub
popa
fnstenv
lds
mov
cltd
int3
mov
addr16
mov
dec
aam
sbb
lret
jbe
adc
adcb
add
test
lret
loope
out
add
push
cmc
jecxz
sbb
in
aad
cmp
jnp
pop
repz
jge
jb
fs
cmpsl
mov
cmp
mov
mov
or
mov
mov
mov
pop
mov
mov
imul
mov
xor
cli
lods
xchg
arpl
aad
sub
sub
hlt
push
scas
cmp
push
repz
jl
xorl
dec
fiaddl
sbb
out
xor
test
mov
add
sbb
cmp
jo
sub
sbb
jb
test
in
mov
stos
lahf
call
xchg
mov
inc
mov
adc
test
sbb
cltd
jl
cmp
bound
outsb
scas
sub
fiadds
int3
ljmp
or
and
cs
jno
repz
push
jmp
push
xor
push
inc
jge
lret
jne
mov
and
xor
xor
dec
js
mov
pop
stos
lods
push
movsb
lods
outsb
push
inc
pop
lcall
xor
adc
mov
call
aaa
in
xchg
sti
jg
push
jne
adc
test
daa
es
add
push
shrb
scas
imul
push
je
pop
repnz
xchg
cmc
jge
stos
pop
mov
cli
orb
sti
jecxz
mov
js
ret
push
pop
ret
xchg
fstpt
mov
lods
inc
pop
and
adc
jbe
shr
push
int
pop
dec
idivl
adc
fisttpll
stos
cmp
les
outsb
dec
les
xchg
repz
in
rorb
mov
enter
push
shll
mov
adc
or
lods
into
bound
cmp
and
imul
fsubrs
xchg
je
je
mov
push
mov
jbe
js
fistl
or
or
loop
js
outsb
mov
rorb
sbb
mov
aaa
xchg
cld
sub
mov
and
push
sub
xchg
shll
cmpsb
int3
hlt
out
mov
outsb
stos
rolb
fdivs
inc
dec
cmp
testb
push
mov
scas
arpl
stc
cmpsb
cmp
mov
ret
bswap
aas
mov
int
stos
and
into
out
sbb
outsb
add
out
cs
sub
xchg
jb
es
fldenv
arpl
ret
pushf
mov
xchg
mov
dec
mov
cld
mov
call
pop
jnp
and
daa
lret
filds
loope
js
dec
dec
push
pop
lret
insb
adc
mov
add
push
pop
fwait
add
or
xchg
sbb
pop
int3
or
iret
ficoml
cmp
addr16
inc
subb
outsb
xor
pop
mov
mov
cld
pop
jle
loope
sub
xor
je
fistl
sub
add
divb
mov
cmpsb
jnp
sub
roll
pop
hlt
mov
xchg
shlb
mov
xor
enter
push
sbb
pop
bound
push
xchg
adc
inc
mov
das
jle
mov
cmp
xchg
mov
fcoms
sti
out
mov
rolb
mov
jle
in
lcall
lock
fdivs
xor
jge
icebp
inc
movsl
push
mov
int
aaa
mov
push
cmpsl
lock
xchg
push
pop
iret
int
adc
daa
mov
jle
repnz
cmp
xor
icebp
mov
aad
mov
push
psrlq
mov
aad
sar
loop
sub
push
jmp
aaa
push
int3
dec
aas
xchg
jg
fsubrl
jne
or
imul
and
repz
ljmp
push
xchg
dec
xchg
xchg
push
xchg
aaa
push
adc
repz
jbe
cmpsb
push
enter
push
push
ds
sbb
xor
mov
dec
add
fs
sarl
mov
fcmovu
outsl
or
lcall
loopne
adc
push
cwtl
pusha
sbb
in
inc
hlt
sub
cmp
std
or
pop
inc
shll
xlat
sub
or
cld
fcoml
pushf
neg
scas
dec
mov
aam
push
xorb
mov
push
mov
jne
inc
dec
mov
sbb
jmp
jmp
movnti
sbb
jmp
cmc
mov
lock
clc
xor
repz
mov
ljmp
mov
mov
add
mov
jne
jl
pop
and
jo
shl
lahf
xorl
repz
rorl
cs
mov
sbb
pop
or
jle
cmp
jle
repnz
mov
jge
popa
popa
sub
xor
fdivs
and
ja
clc
and
lods
int
aad
cmp
xor
gs
xchg
or
jecxz
das
lea
inc
das
pop
xchg
leave
and
cmpsl
psubusb
jmp
pop
mov
xor
sub
push
add
jno
mov
ds
mov
lods
popf
addr16
mov
cmp
pusha
test
mov
loopne
mov
xchg
jno
mov
cmc
mul
mov
sub
cmp
mov
jle
adcl
sub
sub
inc
inc
bound
test
mov
jecxz
push
jae
sbb
mov
cmp
and
pop
sbb
pop
sbb
push
ds
push
and
pop
mov
pop
jno
test
ret
test
movsl
inc
cli
test
test
xchg
inc
andb
dec
test
vmovd
mov
lods
pop
ja
add
jg
nop
and
mov
lcall
out
sahf
dec
sahf
and
aad
dec
mov
lock
or
sbb
inc
inc
bnd
movsb
stos
lea
xchg
xchg
scas
call
pop
insl
lds
cld
ficoms
jbe
adc
xchg
adc
addr16
rcrl
mov
adc
fimull
push
pop
mov
dec
dec
in
lret
dec
add
daa
jmp
ja
sub
sbb
insl
jbe
cltd
ror
cltd
scas
idivb
ds
imul
pop
mov
or
sbb
add
mov
cmp
dec
or
add
cmp
mov
adc
jg
mov
jecxz
dec
bound
pop
and
adc
mov
pop
pop
and
or
addb
cmp
insb
in
mov
addb
xchg
fnstcw
inc
addr16
ljmp
daa
inc
data16
movsl
loope
test
mov
int3
push
mov
cmp
or
jbe
leave
mov
jg
xchg
cld
dec
dec
xor
xchg
subb
mov
rol
in
cld
repnz
into
lret
jns
add
jnp
pop
sbb
xorb
in
repnz
insl
dec
mov
movsl
sub
jns
in
fisubl
ss
and
fsubl
jp
inc
mov
push
shll
cli
prefetch
clc
and
pop
and
stos
mov
out
jl
iret
test
loope
add
aad
idivl
pusha
mov
adc
leave
adc
lret
imul
adc
es
shlb
inc
icebp
mov
fimull
lods
data16
jl
mov
cmp
out
xchg
xchg
push
inc
pop
sahf
inc
mov
cmp
call
mov
outsl
aaa
iret
jmp
sub
stos
xor
or
mov
inc
cmp
dec
cmp
cmp
xor
mov
rcrb
sbb
fidivl
insl
dec
lock
dec
jge
mov
popf
and
jp
imul
shl
in
jne
ffree
jg
xchg
inc
imul
cmp
jns
cmpl
push
jle
jl
mov
pop
push
fwait
adc
lret
fcomps
ret
js
mov
daa
enter
xchg
inc
dec
pusha
jle
mov
pushf
mov
mov
les
inc
rorb
jns
inc
stos
enter
cmp
lahf
leave
pop
mov
cmp
fwait
out
jmp
aad
mov
in
adc
pop
mov
sbb
dec
lcall
fcoml
sbb
test
sub
xor
mov
imull
ret
sbb
lods
xor
nop
or
mov
jnp
cs
iret
aaa
pushf
sarb
lahf
stos
aaa
pusha
dec
cmp
jmp
and
or
push
pushf
xchg
inc
lods
or
add
and
hlt
fld
jno
mov
das
lock
gs
mov
push
loop
in
ja
notl
mov
jmp
push
push
andb
adc
jne
push
stos
add
clc
mov
cltd
sarb
mov
add
out
ds
inc
sbb
mov
addb
pop
pop
int
ror
punpcklbw
lahf
pop
loop
arpl
push
adc
iret
in
std
sub
mov
pop
push
xchg
imul
mov
sub
mov
fidivrs
dec
nop
scas
cli
mov
adc
push
stc
mov
cmp
dec
dec
dec
and
cmp
sub
es
sub
insl
addr16
push
adc
mov
test
adc
es
fnstenv
add
lret
lret
rcrl
cmp
cmp
inc
ret
enter
rcll
mov
fcompl
out
cmc
cmpsl
adc
pop
clc
jp
jmp
pushf
pusha
aas
inc
mov
sub
xor
inc
push
out
mov
pop
mov
inc
out
inc
std
xchg
out
dec
cmpsl
call
lock
add
adc
xchg
inc
dec
jae
jle
jae
push
orb
les
mov
mov
fidivs
xlat
out
imul
mov
jo
cmp
repz
imulb
mov
int
into
fcmovnb
pop
mov
fwait
ds
and
jecxz
scas
xchg
cwtl
mov
mov
cmp
pop
leave
lea
pop
sub
loope
and
cmc
inc
adc
lods
negl
xchg
jae
iret
test
mov
xor
cli
sbbb
faddl
push
inc
cld
lea
je
mov
movswl
sbbl
scas
and
pop
stos
push
jnp
and
lds
hlt
mov
cmc
hlt
addr16
je
scas
repz
or
adc
aas
aaa
sbb
push
ss
outsl
ja
inc
jmp
js
or
repz
xor
fists
mov
push
fistpl
jmp
jmp
pop
xchg
push
faddl
call
mov
dec
mov
aad
outsb
dec
pop
cmp
lret
je
jmp
dec
push
mov
lret
mov
lret
mov
sub
popa
mov
notl
cmpsb
adc
test
add
cltd
movsl
test
lds
popf
sub
inc
add
das
mov
fimuls
mov
ja
xchg
mov
xchg
push
mov
stc
xchg
push
test
mov
adc
sarl
xchg
fcmovnb
mov
xor
and
sahf
mov
inc
andl
cwtl
mov
stc
jnp
jb
dec
and
insb
cmp
mov
inc
ds
imul
mov
bound
in
scas
hlt
stos
in
jge
stos
or
jno
pop
fnsave
test
xchg
xchg
sub
adcb
jl
cmp
mov
in
subl
lock
rorb
ror
in
movsb
aaa
dec
mov
xchg
cld
jmp
mov
xor
mov
xchg
pop
outsl
mov
movsl
adc
mov
sub
in
or
call
xchg
pop
or
sub
lret
jno
and
jle
push
xchg
and
aaa
mov
xchg
and
dec
xchg
scas
add
ret
in
das
push
in
imul
out
icebp
es
inc
mov
mov
ror
pusha
pop
mov
cli
or
add
out
icebp
ds
jp
lret
cmpsl
xor
aas
mov
jae
mov
adc
test
xchg
and
sbb
mov
fst
adc
aaa
loope
pushf
fwait
xchg
cld
push
test
sbb
add
lcall
mov
loope
aas
mov
jns
sbb
mov
inc
aad
push
mov
nop
jl
loopne
inc
push
cmp
cmpsb
iret
push
stos
shll
repz
dec
mov
je
push
es
js
repz
fdivs
lds
cmp
fdivrs
and
jae
xlat
mov
test
addr16
ret
lahf
fwait
push
call
mov
stos
mov
ja
dec
jo
cmpb
rcl
lcall
mov
shl
or
and
sbb
test
cwtl
and
jnp
cmpb
dec
sbb
lds
sub
xor
jno
inc
mov
mov
ficomps
mov
icebp
or
sti
rorb
mov
lock
mov
scas
sub
fnstenv
fisubl
les
sbb
in
dec
outsl
pop
std
mov
scas
lock
pop
pop
test
out
adc
stos
icebp
adc
clc
sbb
adc
mov
daa
xor
and
mov
sbb
sti
stos
and
sbb
fsubl
lcall
in
mov
loopne
xchg
fwait
jp
into
addr16
cld
outsl
out
jl
cmpsl
and
fmuls
adc
pusha
sub
sub
in
cmp
mov
mov
sub
leave
out
sbb
sbb
hlt
lock
pop
push
pushl
pop
xor
pop
cmp
mov
inc
mov
loop
mov
mov
popf
js
xchg
sbb
movl
scas
jnp
push
and
ret
lock
gs
mov
xor
movsl
imul
out
pop
into
lds
mov
mov
xor
out
inc
xor
lcall
call
shrl
push
shrl
lods
push
insb
cmpb
mov
dec
mov
and
daa
mov
jne
add
push
cmp
cvtpi2ps
jns
sbb
je
inc
jmp
add
jl
push
in
jmp
inc
xchg
das
mov
repnz
inc
sbb
cli
add
ja
or
mov
outsb
pop
cmp
int
mov
inc
fwait
mov
mov
xor
sbb
adc
adc
add
and
enter
fmul
lock
xchg
lahf
das
cltd
lahf
push
orb
stc
insl
aam
les
sub
mov
into
aas
xor
adc
cmp
notl
xor
sti
jecxz
dec
cmp
imul
xor
pusha
std
jp
cmp
rcll
push
repz
jb
mov
and
cwtl
out
xchg
or
jb
shrl
or
iret
cmpsl
jge
cmp
int3
cli
lret
fdivrs
inc
cmp
xlat
and
in
imulb
das
mul
mov
xchg
int3
lds
test
test
out
lahf
in
cmp
das
fistps
jne
fsts
jno
xchg
out
jbe
je
pop
scas
bound
sub
insb
es
cmpsl
pushf
push
inc
test
pop
into
push
pop
jecxz
and
daa
inc
cwtl
mov
jne
aam
and
cltd
std
cmp
lods
and
outsb
shll
pusha
xchg
and
pop
push
pop
js
mov
shrl
push
mov
jno
push
imul
in
rcrb
test
xor
aaa
adc
add
lahf
pop
jecxz
sub
adc
bound
ret
enter
xor
cmp
loop
xchg
jbe
ja
xchg
aaa
dec
add
sbb
test
sbb
out
push
loope
dec
dec
adc
call
jbe
pushf
aam
jecxz
lcall
test
pop
nop
clc
xchg
xor
sub
out
and
test
cmp
mov
loop
and
out
cmovno
in
mov
cmp
inc
xor
hlt
sub
mov
sbb
and
bound
mov
mov
xchg
loop
mov
orl
vpsubd
arpl
push
es
test
mov
lods
sub
fidivrl
test
mov
in
xchg
adc
push
cltd
inc
dec
push
inc
cmc
push
aas
lods
push
loopne
cwtl
pop
test
out
jne
mov
mov
mov
lcall
inc
cmp
jle
inc
mov
adc
or
jae
pop
push
fsts
inc
fsubp
sarl
stos
stos
push
push
push
jns
push
clc
ret
jbe
sbb
les
aam
test
pop
js
jmp
imul
out
jbe
cmp
xor
lods
xor
sbb
or
repnz
rcll
inc
in
and
pop
arpl
xor
xlat
jnp
push
pop
stos
sbb
or
iret
xchg
mov
pop
shlb
pop
lcall
iret
dec
adc
or
push
and
inc
jg
leave
bound
push
enter
jo
mov
ret
test
xchg
das
cld
insl
arpl
xor
mov
rorl
imulb
push
cmp
add
pop
sub
insl
xchg
clc
xchg
fs
jnp
push
and
aam
or
xchg
mov
sahf
dec
fmull
and
incb
aam
test
or
xchg
add
xchg
fmul
ljmp
dec
mov
push
lcall
lock
jle
pop
test
push
lcall
mov
mov
sahf
in
or
frstor
jne
jne
push
and
mov
xchg
sbb
or
xchg
mov
jle
test
pop
jp
gs
les
lods
ljmp
aaa
add
inc
push
jae
jns
stc
loopne
jbe
jbe
mov
andl
sbb
and
inc
jge
mov
mov
jge
sub
imul
cld
jbe
push
dec
out
pop
or
or
adc
adc
or
cmp
cwtl
inc
int3
cmp
outsb
mov
xchg
fisubs
mov
outsb
dec
xchg
add
or
jmp
test
push
inc
adc
pop
dec
xor
rcrb
dec
sub
fsubr
ds
mov
rcrb
repnz
mov
out
adc
dec
scas
daa
xchg
jb
push
pop
push
mov
or
jns
xor
gs
hlt
jl
fstp
mov
inc
divl
pop
pop
cmpsl
sub
mov
lret
or
stc
in
insl
pop
mov
aaa
mov
xor
adcb
into
pop
push
pop
push
xchg
loopne
mov
scas
and
or
mov
push
adc
xlat
shll
cmp
ret
xchg
jle
andl
sub
insb
jle
or
inc
decb
mov
adc
adc
pop
xchg
mov
push
pop
xchg
fdivrs
test
aaa
dec
imul
in
inc
into
xchg
and
ret
cmp
leave
xchg
or
inc
mov
scas
xlat
jge
mov
sub
cld
push
sbb
loop
adc
push
xor
xor
pushf
and
lret
cmp
xor
fdivrl
repz
inc
adc
pop
popa
xor
pop
sub
jmp
fisubrl
sub
adc
cs
cmp
mov
xchg
pop
aam
jbe
das
sub
inc
jo
pushf
push
or
mov
mov
dec
cwtl
addr16
loopne
jne
repz
nop
data16
jo
jp
sbb
jmp
and
add
aam
in
out
pop
jb
stos
push
test
or
fcompl
mov
mov
push
leave
enter
cmp
dec
cltd
xchg
cmpsb
test
sahf
xchg
or
je
lret
sti
xlat
cmpsb
add
jno
into
or
sahf
mov
adc
sarl
xlat
andb
xchg
inc
push
loop
mov
jl
mov
jge
divb
fstl
push
jae
ret
iret
orl
aad
mov
sbb
mov
xor
sub
les
and
push
movsl
cmc
jp
xchg
stos
sarl
cmpsl
pop
pop
popf
cld
rol
outsl
ja
setnp
insb
in
adc
jle
xor
sbb
cmpsb
mov
pop
out
jae
stos
in
ret
and
mov
ficoml
jmp
inc
xchg
lret
or
dec
sub
xor
rcrb
sub
lret
xchg
std
cmp
xor
lock
jge
fadd
sbb
outsb
fcom
push
jg
mov
cs
mov
stos
mov
pop
pop
bound
xor
add
jecxz,pn
cmp
mov
dec
cmc
and
addb
jecxz
out
aas
in
or
sbb
push
jne
imul
jl
mov
xchg
adc
mov
sub
lcall
int3
mov
pop
dec
sbb
pop
cmpsl
pop
jnp
pop
ja
xor
out
mov
adc
stos
aam
das
jp
pop
lods
sub
mov
sub
or
insl
mov
push
mov
and
les
add
mov
cmp
mov
fmull
cmp
and
dec
lds
repnz
outsl
in
and
leave
movsl
dec
loop
jle
dec
iret
ret
stos
xchg
mov
sbb
jl
into
aam
cli
jle
cmpsb
dec
int3
imul
ror
es
add
shll
aam
fdivrl
mov
and
ret
aam
xchg
cmp
inc
add
lods
mov
lods
pushf
dec
mov
sahf
out
push
xchg
js
jne
mov
rcr
or
lods
mull
xor
aam
out
push
push
mov
nop
jne
inc
mov
mov
cmp
adc
insl
jge
fcomps
xor
pop
aaa
ss
shrb
adc
inc
stos
out
pusha
or
mov
call
addl
xor
daa
je
ret
pop
adc
nop
cli
in
daa
mov
push
dec
push
and
sbb
int3
daa
xor
fisubl
push
js
pop
mov
decl
mov
mov
dec
cwtl
sub
jmp
nop
xor
pusha
nop
movsl
mov
jl
imul
xlat
decb
sbb
add
in
and
lret
inc
pop
jp
loope
mov
into
and
sbb
cld
mov
adc
jecxz
inc
xlat
leave
outsl
add
adc
mov
rcr
lret
pop
into
and
jge
dec
xor
into
sbb
roll
fimull
mov
pop
push
dec
jo
mov
lcall
js
pop
leave
out
inc
and
adc
cld
cld
stos
outsb
cmp
lds
aad
mov
shll
mov
mov
sbb
ds
dec
xor
stc
movsb
addr16
jo
stos
pusha
lsl
into
xor
leave
xor
ja
fistpll
inc
adc
add
mov
hlt
dec
ret
int
out
les
je
adc
sbb
mov
xchg
xchg
xchg
das
dec
in
mov
push
into
xor
bound
insl
sarl
fdivl
mov
pop
fsubs
mov
icebp
mov
mov
out
shlb
repz
dec
mov
mov
sub
iret
add
popf
test
cmp
clc
gs
movsb
mov
and
sub
jecxz
fs
adc
jge
jbe
aam
inc
mov
adc
xor
arpl
push
or
lahf
pop
popf
mov
and
je
scas
js
cmpsb
pop
sbbl
mov
or
jbe
inc
mov
je
loop
lods
push
les
mov
into
fidivrs
or
and
stos
popf
dec
repz
repnz
xor
dec
iret
repz
pop
xorl
pop
jb
insl
aam
int
xchg
leave
mov
fdivrl
dec
add
lret
jnp
add
jns
inc
xor
xor
push
lods
mov
sub
mov
daa
or
inc
shlb
jle
cmp
pushf
push
push
lcall
mov
push
jp
mov
jne
repnz
in
sti
jne
bound
mov
dec
push
pushf
cmp
jnp
movsb
mov
cmpsb
xchg
movl
insb
push
xchg
mov
in
fs
bound
shll
inc
insb
push
fs
xor
jbe
mov
mov
in
dec
pop
jle
mov
lods
xchg
jmp
jno
push
push
repz
jbe
mov
in
jno
sbb
jo
out
cmp
push
add
adc
ljmp
pop
sti
andl
rolb
clc
cwtl
sti
jp
jns
mov
cwtl
mov
dec
or
loop
incb
add
xchg
lret
daa
dec
mov
sub
ret
jl
cmc
push
stos
cmpsb
sbb
nop
inc
push
mov
mov
dec
or
sbb
lods
sub
gs
jl
cmpsb
call
sub
cmp
test
call
sub
cmp
sbb
popa
sbb
imul
mov
xor
or
pop
je
test
stos
inc
pop
push
lds
inc
xchg
mov
inc
inc
rcrb
cmpb
fidivl
mov
cmp
cld
and
iret
rol
xor
jae
jl
cmp
les
mov
hlt
sub
cltd
lods
cld
lea
xor
popa
cld
mov
scas
pushf
and
movsb
lahf
sbb
pop
cmp
scas
and
cmp
cmpsb
jle
cmpsl
out
or
xor
popf
adc
pop
test
cmp
cmp
push
loop
push
lods
pop
mov
orl
fstps
ja
arpl
mov
add
sbb
ret
fcomi
fildl
popl
ret
sub
jge
in
xchg
lcall
lock
std
add
shlb
imul
xor
pusha
push
gs
ljmp
xchg
sti
dec
sub
hlt
push
bound
push
mov
arpl
pop
scas
adc
cmp
mov
orb
jnp
cltd
xor
jno
mull
dec
fdivs
mov
sbb
jp
test
movsl
jae
mov
push
mov
scas
sbb
pushf
pushf
dec
out
inc
pop
push
push
cld
std
mull
mov
mov
cmp
jbe
jo
bound
mov
push
mov
lock
mov
xchg
sub
clc
xchg
repnz
cmp
xor
pop
scas
adc
rol
lcall
in
mov
cmp
xor
push
jno
mov
aam
testl
mov
pop
sbb
push
xchg
push
fstpl
arpl
sub
stos
rorb
inc
cmpsl
inc
loope
xor
mov
fadds
fdivrl
fsubrp
xor
in
scas
cmpsb
sbb
add
xlat
sahf
movsb
stos
jmp
outsl
in
mov
add
cwtl
addr16
inc
dec
dec
mov
scas
das
add
xchg
fstpt
fistl
xor
adc
jge
and
push
lcall
inc
push
pop
test
sbb
pop
cmpsb
and
push
gs
jp
xor
lods
dec
xchg
xor
out
xchg
push
aam
sbb
adc
ss
sub
test
xchg
mov
dec
mov
lcall
ss
icebp
fildll
rep
pop
outsl
add
lea
daa
dec
imul
inc
dec
enter
xchg
test
xchg
ret
mov
add
aas
xor
mov
fsubl
es
sahf
sti
jecxz
push
cmp
and
mov
jae
pop
cmp
ret
fsubrl
jnp
dec
pop
sbb
adc
aas
pop
sbb
xchg
cwtl
mov
enter
sub
test
fs
pop
stos
jae
in
sbb
cld
call
cmp
and
stos
sub
sub
inc
push
mov
int
mov
mov
cmp
and
rolb
jg
outsl
inc
imul
sub
scas
pop
fsts
lea
dec
push
cld
imul
fwait
xchg
or
fistl
and
xlat
iret
lds
jle
call
loope
dec
sub
xchg
call
cltd
cmpb
cmpsl
ljmp
pop
and
xor
test
sub
cmc
outsb
sbb
mov
inc
jbe,pn
out
pop
cmp
enter
test
push
sahf
mov
cmp
jl
or
mov
inc
jns
mov
or
mov
cmp
not
sarb
xor
int3
xchg
pop
hlt
xchg
add
bound
jne
outsb
xchg
adc
sahf
cld
pushf
add
testl
bound
fistl
sub
test
and
mov
fldenv
int
cmp
adcb
ret
xchg
test
lods
mov
push
imul
arpl
ljmp
xor
dec
add
mov
mov
pusha
inc
in
mov
outsb
pop
inc
ss
push
add
inc
xchg
int
lds
mov
repnz
xchg
das
stc
test
jmpw
lods
vpsubq
fsubrs
dec
mov
mov
and
pop
push
sbb
out
push
iret
insb
sub
fmull
fld
xor
sub
insl
fdivrl
jns
inc
out
mov
fnstsw
adc
int
cmp
rolb
sarl
out
mov
mov
lods
fsubrl
jge
jl
mov
xchg
fldenv
or
jp
or
pop
push
mov
mov
fisttpl
xchg
jno
and
adcl
test
xor
stos
lahf
xor
fildll
in
shlb
fs
sarb
gs
js
mov
icebp
std
adcw
jb
hlt
aad
mov
adc
lret
sar
jae
mov
push
hlt
mov
subb
jae
ds
jg
je
lods
jb
adc
or
std
jmp
test
inc
pop
sub
scas
mov
jo
daa
xor
cwtl
movsb
xor
out
aas
and
sub
les
stos
xor
addl
decb
fcoms
or
xor
int3
xor
icebp
das
and
dec
out
inc
daa
outsl
testb
leave
in
sub
insl
push
mov
lahf
push
xchg
leave
lods
xchg
dec
push
mov
cmp
fisubrs
sar
ret
and
sbb
aaa
add
sahf
inc
and
mov
in
shl
ret
sub
sub
mov
inc
push
aad
clc
das
ret
roll
bound
adc
sub
aas
xor
js
pop
inc
out
repz
outsb
mov
push
mov
nop
pop
lcall
pushf
outsl
cmp
ja
pop
sub
pop
mov
cli
pop
xor
dec
and
sbb
ds
in
ret
mov
push
sub
add
lret
push
into
fsts
push
mov
cmp
je
xor
addr16
xor
stos
nop
adc
mov
sub
mov
or
les
lea
jb
cwtl
xor
mov
adc
or
int3
jne
fs
testb
push
les
mov
popa
int
push
lea
daa
jns
int3
push
xor
xchg
into
aam
jecxz
cmp
push
mov
idivb
jns
xchg
sbb
push
sahf
sub
popa
lahf
call
cli
cmp
push
je
and
hlt
pop
mov
and
scas
lds
and
stc
mov
test
mov
push
xchg
hlt
cmp
fs
repz
adc
pop
sub
subl
and
push
jnp
pushf
adc
movsb
add
push
mov
mov
fistps
scas
movsl
outsb
in
int
ss
insl
mov
pop
in
push
mov
fwait
idivl
scas
ljmp
lret
xlat
push
fsts
mov
lods
out
add
inc
jecxz
xor
cmp
stc
mov
jmp
lret
adc
pop
mov
imul
push
outsl
adc
push
pop
outsl
mov
adc
jo
notb
xor
cmpsb
test
in
add
jp
sbb
fwait
cmp
dec
inc
fldt
xchg
dec
dec
shll
sbb
test
popa
in
xchg
sbb
dec
roll
cmp
dec
leave
pop
incb
sub
dec
scas
flds
lret
jecxz
push
mov
add
sub
add
cmp
push
lret
fdivs
xchg
xlat
pop
push
int
ds
sub
mov
scas
fxch
jmp
pop
rorb
lcall
sbb
cmp
aam
mov
addl
dec
and
enter
mov
xchg
or
test
aad
fsub
and
out
cltd
sti
mov
mov
lret
pop
mov
push
pushl
mov
loop
push
mov
movsl
std
sbb
push
imull
adc
loope
mov
rcr
test
mov
or
mov
and
mov
dec
xchg
divb
out
call
sbb
shlb
js
cmp
shrb
xchg
push
sarl
sub
enter
sub
add
insb
cmp
stos
push
pop
push
imull
aam
repnz
lea
enter
mov
dec
cltd
mov
clc
jmp
sub
sub
jp
insb
dec
add
shlb
cmp
out
mov
pop
loope
pop
mov
pop
xor
jnp
leave
jle
popf
jnp
das
call
pop
loop
cmpl
xchg
mov
out
mov
jecxz
jo
inc
movsb
inc
dec
outsl
and
in
movntsd
cmpsl
cmpsb
hlt
jecxz
imul
inc
mov
js
or
mov
imul
inc
popf
orl
xchg
testl
aaa
inc
mov
cld
movsb
popa
xchg
mov
fldenv
sub
push
inc
sub
cltd
in
ret
movsb
push
mov
push
test
outsb
jmp
add
adc
movsb
sub
xor
sbb
push
pop
test
mov
add
test
lods
aas
xor
lods
imul
push
xchg
sub
mov
xchg
pop
dec
pusha
test
push
lock
stc
scas
add
xchg
mov
adc
mov
mov
jns
aad
ret
push
push
call
mov
xchg
jnp
ljmp
xlat
sbb
dec
out
xor
mov
cmp
cmc
test
xchg
mov
prefetcht1
nop
mov
push
leave
fistps
hlt
push
jo
addr16
rolb
xor
aam
mov
lcall
xor
stos
mov
add
test
xchg
mov
movsb
in
pusha
push
aad
fprem1
jp
xchg
mov
test
jno
xor
sbb
lcall
roll
mov
jo
es
xlat
mov
pop
lcall
and
sbb
clc
push
mov
push
in
inc
in
and
in
mov
push
shlb
and
mov
xchg
mov
add
out
xabort
subb
sub
not
jo
decl
mov
or
lret
inc
sub
daa
int3
in
xchg
jns
call
scas
jne
clc
fwait
sbb
fnstsw
pop
mov
imul
add
imul
je
pop
mov
stc
mov
imul
dec
cwtl
xor
out
fldl
orl
push
ucomiss
inc
icebp
outsb
in
mov
fiaddl
data16
mov
sarb
inc
xchg
cwtl
loope
push
cltd
mov
mov
call
jle
insb
nop
sub
in
stos
push
mov
mov
inc
adc
arpl
and
outsb
ret
xor
aad
arpl
sbb
in
xchg
loope
fwait
js
aam
cli
fistpl
mov
movsl
and
insb
sbb
inc
stos
call
sbb
pop
lret
pushf
mov
clc
or
mov
imul
cmc
dec
push
iret
lcall
jae
gs
xor
jae
push
cmp
mov
stc
push
xor
cmc
mov
stc
mov
in
rclb
fnstenv
fldcw
out
xor
and
dec
sbb
xchg
mull
cmpsl
lock
in
fcompl
enter
scas
sub
xor
ljmp
cmp
arpl
and
sbb
dec
lret
lock
pushf
mov
jne
push
jae
or
fildl
inc
push
pop
and
xor
jne
scas
nop
pop
mov
mov
gs
sbb
dec
in
add
sub
fwait
jge
push
ficompl
sub
les
sbb
cmp
in
ret
dec
scas
out
cmp
sub
xchg
ljmp
imul
mov
adc
inc
xchg
dec
push
nop
mov
ds
sub
jno
inc
out
lret
pop
mov
and
mov
insb
jns
into
adc
sti
adc
mov
cltd
xchg
pop
test
dec
fstl
fdivs
xchg
dec
sahf
lret
push
push
add
sti
ret
subb
insl
lcall
movsb
jp
leave
pop
adc
pop
push
mov
imul
dec
scas
xchg
mov
dec
jno
idivb
test
dec
adc
mov
addl
inc
cmc
inc
mov
aad
fwait
ljmp
mov
out
sub
or
push
push
xlat
adc
pusha
push
in
xchg
mov
pop
cmp
cmpl
push
push
mov
icebp
inc
pop
xlat
xchg
imul
cmp
inc
jne
fs
add
les
out
repz
rolb
fildll
enter
aad
inc
jno
inc
pop
in
sbb
cs
and
testl
loop
mov
and
js
pop
adc
sar
mov
mov
jg
add
mov
cwtl
add
push
xchg
mov
out
inc
out
pop
inc
push
mov
cmp
adc
ret
and
sti
sbb
call
mov
iret
cmp
xor
fldl
out
iret
or
mov
adc
frstor
insb
mov
dec
push
fcompl
iret
pop
scas
fs
outsl
mov
cmpsl
fs
mov
cmp
xchg
jge
movsl
jae
int
push
pop
or
add
add
jnp
jno
shlb
imul
mov
mov
movntps
pop
mov
xchg
add
sub
imul
mov
loop
cmpsb
scas
jns
mov
shll
cmpsw
add
cltd
out
jp
bound
in
adc
and
test
pop
nop
pusha
lods
mov
lcall
test
pop
cmc
int3
notl
mov
jae
xlat
pop
jns
or
bound
lcall
add
aaa
mov
xchg
outsl
mov
imul
setl
dec
and
jle
mov
ficoml
mov
cmp
ret
cmp
mov
sbb
adc
pop
mov
icebp
pop
mov
scas
and
fcomps
outsb
xor
cmp
adc
fcomi
imulb
inc
adc
mov
mov
pop
lea
add
add
jb
and
repz
es
mov
in
pop
testb
daa
lret
stos
mov
cmp
pop
outsl
mov
mov
hlt
sarb
mov
and
mov
negb
sbb
mov
pop
std
adcl
aam
mov
or
jnp
pop
jae
ret
xchg
cmp
scas
push
xor
or
in
popa
jl
xor
or
sti
and
adc
dec
int3
std
imul
aaa
out
out
pusha
test
pop
xor
rclb
mov
mov
adc
xchg
idiv
add
pop
and
aas
push
sbb
push
adc
xchg
loope
fimuls
ja
in
mov
mov
enter
loope
lock
shl
and
jmp
mov
push
mov
out
ss
lcall
cmp
icebp
add
push
insl
push
lods
xchg
push
fwait
dec
push
loopne
sub
fidivs
addr16
int
adc
daa
jne
or
stos
xchg
in
cmp
cmpsb
pop
push
test
mov
jmp
stos
nop
icebp
movsl
mov
fs
jb
push
mov
inc
aas
std
test
inc
or
sub
js
and
pmovmskb
into
mov
push
mov
dec
ret
insl
scas
jae
cmpl
in
cmc
sub
pop
cmp
push
jne
pop
xchg
test
xorb
mov
xchg
cmp
mov
loope
rclb
xor
repnz
nop
call
jge
out
lea
pop
in
or
adc
jmp
adc
hlt
jne
icebp
sahf
std
in
out
lds
outsl
sarb
mov
hlt
repz
jp
and
pop
addr16
decb
clc
ss
inc
lds
testl
fwait
pop
daa
iret
insl
pop
daa
xchg
xchg
pop
and
or
rcrb
add
fldt
adc
rorb
push
bnd
lcall
sbb
xchg
addr16
and
jbe
daa
xchg
das
pusha
scas
sbb
jb
mov
out
cmp
add
test
lret
mov
jnp
into
lods
sti
push
enter
and
cld
aaa
xchg
popf
push
fmull
loope
xchg
or
in
fldl
jo
xchg
sti
outsl
repnz
loopne
mov
scas
icebp
ja
fsub
pop
push
shll
jge
sarb
scas
lods
and
sub
and
jb
xchg
mov
fstpl
push
call
adc
xchg
ja
sbb
sbb
add
test
xor
adc
mov
mov
in
push
stos
lahf
push
cltd
cmpsl
add
mov
repz
xchg
and
jmp
rcrl
pop
mov
inc
and
fs
and
sbb
xor
in
sahf
xor
imull
xchg
or
enter
mov
fnsave
sbb
icebp
cmp
decl
lods
mov
or
push
dec
out
lret
repnz
sarb
jnp
mov
cmp
jecxz
cmp
enter
cmpsl
stos
mov
pop
push
rcrl
push
pop
pop
push
in
loop
jns,pt
pop
out
jns
shrl
shlb
movsl
shrb
and
repnz
scas
pop
or
xchg
jb
inc
mov
pusha
stc
add
mov
mov
fstpt
notb
adc
je
ss
xchg
xor
push
lahf
mov
pop
rolb
dec
mov
push
adc
in
enter
mov
jmp
mov
adc
mov
pop
xchg
sub
mov
frstor
pop
or
or
jnp
es
imul
mov
stc
ds
push
fiaddl
cli
inc
add
and
popa
xor
mov
or
nop
test
shrb
sub
mov
fcmovnbe
and
dec
or
scas
ja
push
vpackssdw
pop
mov
xchg
out
lret
lds
jmp
xchg
enter
std
mov
out
jbe
pushf
cmp
jg
mov
insl
jno
lret
and
repz
mov
fwait
rcrb
aam
push
xchg
cmp
lods
lock
mov
push
loopne
imul
repnz
jns
inc
icebp
scas
push
mov
ret
pop
ret
add
mov
call
adc
in
es
mov
push
outsb
fldl2e
push
std
cltd
test
lods
push
push
lods
xorl
subl
outsl
sub
lret
lret
sub
jno
jae
dec
push
sbb
aam
adc
xor
and
xor
push
std
jns
inc
or
push
loop
enter
inc
sbbb
test
loopne
divl
mov
xor
xchg
fbld
es
mov
ror
movsb
pop
inc
loopne
xchg
dec
iret
adc
pop
mov
mov
fwait
cmpsl
mov
call
mov
out
xor
mov
fstps
imul
and
lahf
jg
mov
mov
sub
xchg
insb
cltd
enter
outsb
mov
popf
xchg
imul
idivb
fdivl
fistpl
out
fldt
popf
sbb
jp
pop
popf
pop
xchg
ss
das
push
sub
xchg
fldcw
test
push
sti
or
and
sub
push
sbb
add
lcall
push
test
nop
mov
or
fdivl
and
scas
cmpsb
and
sub
jp
cli
push
mov
pop
xlat
stos
ficompl
pop
mov
and
mov
shll
pop
mov
mov
mov
xchg
xchg
scas
pusha
sbb
rcrl
xor
add
inc
repz
mov
xchg
inc
fildll
mov
mov
bound
sbb
xor
rclb
data16
mov
movsb
xor
sbbl
dec
loopne
ror
imulb
sbb
jmp
insl
and
jmp
loope
sarb
leave
mov
cmp
mov
jl
in
shr
dec
ret
cltd
cmp
jge
add
xchg
dec
rcrb
rolb
stc
push
mov
call
pop
or
jno
push
jbe
imul
rol
clc
aas
mov
fwait
sub
gs
push
jbe
pop
xadd
inc
je
out
fwait
inc
sub
cmp
add
movsl
dec
inc
cld
mov
ja
cld
es
sub
or
mov
sbb
ret
adc
pusha
ret
lret
pop
add
inc
aad
mov
or
or
scas
out
jb
mov
cs
jns
mov
push
push
push
mov
fdivrl
cmpsb
mov
push
mov
insl
mov
mov
mov
inc
push
jbe
jne
inc
out
mov
fwait
shll
xor
nop
popf
sbb
imulb
iret
imul
scas
shl
dec
mov
sub
cld
push
inc
add
out
ret
stos
inc
xlat
lods
pusha
cmpl
sbb
test
adc
in
inc
xchg
loope
scas
add
xchg
gs
pop
lock
cwtl
mov
imul
aaa
roll
lods
jnp
cli
push
test
scas
cltd
insb
pusha
movsl
flds
dec
cmp
in
shlb
lds
rolb
mov
pop
movsb
movups
add
mov
and
mov
out
jnp
fcmovu
cmp
push
aas
mov
jl
adc
or
call
mov
scas
loopne
scas
jae
adc
jle
inc
movsl
push
stc
add
aaa
push
pop
inc
dec
jb
ds
add
push
mov
mov
jae
adc
jno
movsb
iret
and
mov
xchg
icebp
or
fwait
mov
pop
and
in
dec
out
sbb
dec
je
and
insb
dec
xor
enter
ficompl
stos
iret
gs
in
aam
fmuls
xor
pop
sti
ljmp
pop
jmp
xchg
insl
push
aaa
insb
test
or
pop
mov
clc
sub
or
lods
or
movsl
inc
lahf
outsb
sahf
je
call
jge
mov
lods
lods
jmp
pop
das
mov
adc
jg
dec
rep
pop
push
pop
sub
or
mov
mov
out
fwait
inc
lods
filds
mov
cs
pop
das
jae
push
lret
jecxz
jl
aam
das
mov
push
insb
cmp
add
int3
in
in
outsl
xchg
mov
mov
addr16
pop
adc
sub
lcall
or
fwait
push
push
push
jb
xchg
addr16
sbb
aaa
and
rorb
mov
lds
add
mov
ljmp
arpl
out
pop
cmp
add
push
pop
pop
jmp
int3
gs
aam
jg
out
dec
or
jge
imul
xor
sbb
push
add
imul
or
xlat
mov
pop
dec
dec
into
mov
out
insl
pop
dec
xchg
pop
adc
fwait
pop
push
push
int3
shll
mov
pop
mov
adc
int
sbb
add
mov
xchg
push
add
aaa
adc
test
add
push
sti
push
cmp
inc
dec
push
dec
cmpsl
adc
loope
cmpsl
mov
cltd
aaa
ret
loopne
adc
icebp
aaa
sub
es
xchg
pop
lods
jne
mov
jno
mov
mov
stos
inc
enter
mov
cltd
cmp
adc
jne
fnsave
xchg
push
cmp
jne
test
jb
jl
xor
xchg
or
out
mov
je
dec
jnp
sbb
aam
mov
adc
fs
cmp
shrb
dec
std
mov
aas
push
pop
push
sbb
fmull
jg
cmpsb
loopne
and
lcall
mov
rep
cli
mov
stc
pop
test
mov
movsl
int3
dec
xor
cltd
xor
in
mov
cmpb
fmull
roll
ja
xor
inc
out
push
mov
cmp
in
cmp
push
sub
sub
je
shrb
xor
adc
sub
push
fdivr
xchg
adc
rorl
pop
pop
cmc
in
pop
fnsave
lahf
cmc
stc
mov
lods
fcmovu
cmpl
aam
and
pop
and
in
add
cmpsl
xchg
cmpsb
out
aaa
imul
xchg
aas
inc
pop
dec
push
shrl
jns
mov
cmp
adc
mov
adc
xchg
pop
scas
mov
sbbl
and
repz
data16
inc
ljmp
sar
mov
dec
xor
mov
outsb
cld
xor
movsb
test
dec
jno
lods
into
test
std
xchg
out
call
pop
cmp
pop
mov
xor
mov
cmpsb
shll
push
adc
jo
mov
ss
call
mov
add
dec
fdivrl
sahf
inc
sarb
push
inc
jne
inc
cld
mov
cli
push
pusha
out
pop
pop
push
lock
xor
mov
repz
jl
adc
dec
mov
fwait
popa
mov
in
adc
cmp
popa
repnz
mov
push
repz
push
and
xor
xchg
stos
dec
fcmovne
cmp
xlat
jnp
iret
xchg
push
adc
push
negl
or
mov
pop
sarb
and
adc
dec
push
mov
cltd
aad
lea
sbb
movsb
leave
xchg
cmp
test
cmc
ret
or
fsubrs
js
das
rcrb
hlt
flds
in
out
into
xor
xor
lea
sub
ja
cli
lds
inc
inc
outsl
rorl
mov
insb
push
lcall
pop
dec
push
cmp
sbbl
dec
dec
mov
dec
mov
popf
cmp
mov
xor
jb
ret
bound
leave
or
repz
and
pop
rcll
xchg
xchg
push
mov
push
outsl
lods
movb
pusha
sbb
test
jns
pushf
lret
insl
leave
inc
in
loop
pop
adc
test
jne
inc
push
std
adc
loope
pop
repz
or
cltd
and
int
bound
mov
pop
dec
mov
cmc
fsubrp
loope
add
jne
push
stc
jp
and
cmpsb
test
fmuls
mov
icebp
mov
loopne
fildl
sub
call
and
or
testb
push
test
sub
cmpl
cmp
popf
cmp
mov
dec
cmp
roll
dec
mov
outsl
loopne
das
mov
and
leave
and
adc
sub
fisubrs
pushf
insb
ret
jo
pop
or
pop
sub
in
sarb
pusha
fadds
rolb
lret
loope
xor
push
inc
push
inc
xor
inc
aaa
push
lds
in
fildl
or
xchg
adc
cmp
int
out
leave
mov
shll
push
dec
inc
mov
mov
xchg
sbb
lahf
sub
test
jne
xchg
insl
lret
mov
mov
mov
cld
lahf
and
lock
popa
movsl
leave
mov
inc
mov
sarl
lock
jp
inc
cmp
pop
jg
fdiv
iret
lea
stos
orl
sbb
inc
hlt
push
add
mov
mov
sbb
lcall
test
stos
dec
lds
pushf
adc
mov
pop
and
stos
ljmp
movsb
pop
and
rcrb
rolb
ljmp
dec
dec
movsb
or
out
shll
xchg
mov
mov
jno
add
xchg
xchg
mov
nop
icebp
jo
xchg
int
fisubrl
mov
jmp
mov
inc
and
inc
pushf
lret
cwtl
ffree
push
dec
pusha
arpl
xchg
inc
int3
and
or
sbb
pop
sbbl
pop
fadds
inc
add
cmc
movsb
nop
mov
stos
xchg
and
call
push
loopne
aaa
clc
into
hlt
fmuls
cmp
test
cmp
stc
adc
or
loope
mov
adc
inc
enter
movsl
or
ficompl
sbb
out
sbb
test
jno
add
fnstsw
or
pop
inc
mov
ds
sub
xor
movsl
xchg
adc
sbb
or
lea
xor
and
pop
sbb
stos
add
sbb
adc
sbb
mov
add
repz
fstps
dec
adc
dec
lcall
jb
outsl
pop
dec
xchg
mov
jae
adc
push
rcrl
out
lods
icebp
scas
arpl
stc
ret
fidivrl
nop
shr
arpl
mov
stos
xchg
sarl
mov
mov
jecxz
lcall
repnz
packssdw
mov
and
sbb
jecxz
aad
lods
pusha
in
lcall
mov
xor
cmp
scas
adc
push
pop
cld
ret
mov
inc
or
sub
dec
stc
pop
or
push
pop
mov
jle
jo
fnstcw
test
popf
mov
fcoms
or
jmp
in
movsl
cmpsl
mov
dec
pop
es
movsb
mov
jmp
aam
mov
out
lret
int
jmp
movsl
inc
dec
dec
call
sbb
or
mov
jl
setle
and
stos
in
addr16
shrb
add
movsl
cld
cmpsb
pop
jg
mov
or
inc
push
pop
pop
int3
loope
sbb
push
xor
enter
sbb
or
push
in
inc
and
nop
dec
arpl
fs
cmp
or
cwtl
outsl
int
inc
inc
or
sub
mov
cltd
xchg
scas
loop
out
push
testb
jg
add
loop
fnstsw
or
fdivs
add
or
or
faddl
cmp
adc
xchg
call
dec
in
push
pop
pusha
mov
sbb
popf
cmp
enter
adc
pop
mov
icebp
insb
lods
sbb
ficoml
cmp
aad
mov
int
mov
and
and
int3
push
xchg
fidivrs
pop
ja
test
outsl
lahf
xchg
loope
aad
das
adc
stos
incb
stos
jo
rcrb
cmp
jecxz
hlt
inc
lods
pushf
adc
mov
sti
ss
mov
mov
mov
sub
in
mov
pop
cmc
lods
test
mov
cmp
and
aas
cmp
push
dec
or
dec
push
outsl
fstpt
sbb
dec
rcrb
dec
jae
rorl
fwait
lcall
insb
dec
into
ret
rcr
sub
cmpsb
xchg
in
dec
pusha
mov
and
or
ss
cmpsl
imul
sbb
jb
sti
int3
scas
aas
pop
ret
mov
push
mov
ds
push
mov
fucom
lods
sbb
stos
push
pop
inc
rol
xchg
cli
push
or
push
insb
aas
xor
lret
mov
adc
and
dec
jb
jle
adc
stos
push
pop
js
jae
into
std
mov
xchg
mov
push
fstps
push
mov
roll
pop
push
mov
push
repz
daa
lock
mov
ret
sub
stos
mov
in
movsl
cmp
dec
stc
mov
xchg
loopne
push
ret
test
or
inc
mov
leave
ficoml
call
wbinvd
sub
repnz
icebp
test
cmpsb
les
sahf
lret
mov
shll
dec
jge
jmp
outsl
sub
inc
scas
scas
cld
or
std
pop
xlat
data16
mov
push
sbb
inc
jns
mov
js
outsb
popf
aam
add
push
push
xor
dec
inc
icebp
loopne
fwait
dec
sti
jp
pop
in
lret
je
stc
adc
idivb
mov
sbb
dec
leave
jns
call
jle
lods
fisubs
data16
mov
mov
cltd
pop
pop
pop
in
data16
shl
in
adc
cmp
rolb
pop
cltd
xchg
js
pshufw
mov
cltd
cmp
bound
ja
nop
out
xor
ljmp
or
xchg
or
shrl
icebp
or
fdivrs
dec
pop
imul
sbb
push
dec
sahf
mov
sub
andl
mov
inc
lcall
cmp
aaa
sub
mov
xchg
les
sbb
pop
xchg
xchg
imul
insl
and
rcr
inc
xchg
mov
add
mov
xor
xor
jg
sub
not
call
mov
xchg
bound
lds
and
xchg
lods
cwtl
mov
add
dec
inc
add
mov
push
daa
fistpl
mov
arpl
or
in
pop
sti
add
or
into
sahf
rcl
and
jg
sbb
xchg
mov
call
out
scas
push
fimuls
outsb
out
mov
inc
mov
push
sub
push
shl
test
gs
push
faddl
rorb
arpl
sub
dec
lret
and
sti
fiadds
or
push
rcl
xor
in
bnd
mov
push
xor
or
das
add
pop
xchg
loopne
ret
mov
adc
pop
enter
xchg
push
jne
push
xchg
out
push
dec
jl
jb
jns
outsb
xchg
ja
mov
arpl
enter
cmp
movsl
lds
add
cwtl
xor
mov
pushf
loope
es
xchg
pop
add
shrl
lahf
push
rol
add
pop
flds
imul
loopne
imul
pop
popa
mov
add
adc
in
std
jno
xor
sub
mov
adc
stc
push
mov
xchg
fmull
aad
je
or
shll
ret
and
inc
jnp
mov
mov
pushf
dec
ror
push
pushf
negl
stos
xchg
aas
inc
jno
xor
mov
xor
movsl
fildl
jle
sbb
enter
inc
mov
xor
mov
cwtl
adcl
push
sbb
out
mov
cmpsl
mov
ficoml
or
stc
das
in
push
aaa
add
aaa
cmp
mov
jp
aaa
popf
movsb
push
in
je
ret
cmp
dec
jp
loope
sub
mov
negl
sar
shrl
les
fbld
pusha
repz
xor
std
mov
ret
pop
shl
add
popf
and
leave
fmull
sbb
scas
xchg
and
push
call
push
ja
jne
push
cmp
xchg
scas
mov
loope
jae
cli
fs
sub
cmp
fidivrs
es
mov
and
push
add
dec
gs
dec
das
out
and
sbb
test
mov
push
imul
and
insl
xchg
arpl
push
xor
es
jge
push
add
lods
push
int
inc
mov
xchg
clc
in
int3
lods
xor
nop
int
mov
test
pop
inc
imulb
cli
push
ret
adc
insb
sub
sahf
add
and
aam
outsl
push
sti
in
cmpsl
js
sub
into
or
out
xor
adc
mov
or
js
adc
ljmp
or
push
dec
loop
jno
push
jb
lock
xchg
loope
dec
sub
clc
loop
aaa
xchg
insb
xlat
mov
cmp
out
jbe
jecxz
and
das
xor
cmp
aaa
data16
mov
in
bound
sbb
mov
jns
xor
pop
and
cmpsl
and
repnz
cmpsb
fbld
call
test
stos
imul
mov
dec
fiadds
cmp
iret
cmpb
ss
xchg
stos
or
mov
adc
and
ss
push
shrl
js
jno
xchg
popl
incb
ljmp
cmp
roll
pop
std
enter
std
out
xor
shrb
inc
out
lret
loopne
sbb
pop
mov
jge
push
mov
lret
cmc
jge
xor
inc
lods
jbe
inc
stc
xchg
jmp
bound
stc
out
pop
pusha
js
in
ds
push
mov
cmp
pop
sbbl
jno
jbe
testb
mov
add
xor
xchg
sub
out
xchg
mov
cmp
mov
fildll
fs
shll
pop
and
and
cwtl
decl
lock
sahf
pcmpeqb
pop
inc
out
inc
pop
push
loop
out
mov
adc
xor
mov
xchg
fs
movsl
cwtl
cmp
sub
adc
cmp
fistps
or
mov
jns
inc
lock
movsl
outsl
pop
ljmp
jecxz
outsb
jbe
pop
dec
mov
xor
and
cmp
mov
cmp
jecxz
push
std
leave
jle
xchg
ja
xchg
push
pop
les
cmp
xor
in
or
push
lock
outsb
enter
shrb
ljmp
ss
fcmovbe
int3
int
pushf
dec
pop
jp
sub
enter
pop
adc
cli
cmc
xchg
outsl
fimuls
cwtl
adc
xor
mov
dec
loope
popf
mov
xlat
pop
es
pop
and
xchg
or
mov
aam
dec
nop
into
cmpsb
imul
std
mov
sbb
push
in
or
insb
pop
iret
outsb
mov
mov
in
xor
stc
push
lods
imull
movsb
ss
add
lret
sub
icebp
jo
cs
lea
out
ja
rcl
add
xchg
sti
les
pop
mov
mov
xorb
mov
cmp
rclb
out
test
mov
cmpsl
adc
mov
cmc
scas
adc
testb
fidivl
add
dec
adc
or
inc
mov
lret
lahf
fistpl
fstps
xchg
aam
dec
cld
in
and
adcb
or
movlhps
movsl
inc
adc
jno
or
jl
hlt
rcll
flds
push
je
jmp
dec
jmp
add
clc
loope
outsb
int
mov
adc
xchg
sub
xor
insb
hlt
lds
pop
mov
loop
xor
xor
lds
jne
fnstcw
sub
gs
sbb
neg
dec
lea
xor
je
divb
pop
lock
cwtl
inc
mov
in
ss
jg
lahf
sbb
add
mov
jmp
ret
js
jb
pop
push
push
dec
call
arpl
outsl
jnp
in
ficoms
stos
js
mov
xchg
fwait
imul
es
popf
pop
push
dec
jg
adc
movsb
mov
fcomps
es
xor
rorb
push
jne
divl
sahf
sbb
dec
and
int
or
mov
cs
pushf
fldt
sub
add
icebp
shll
add
xchg
pop
dec
xorl
xchg
es
xor
mov
xor
sbb
jo
sbb
mov
push
test
mov
mov
mov
testl
mov
xor
push
mov
push
and
loope
rclb
inc
stc
lret
sbb
fs
inc
inc
sbb
ret
cwtl
leave
and
ret
in
dec
add
inc
cmp
jp
sbb
lea
push
invd
xchg
and
sarb
xchg
addr16
xchg
inc
cmp
jecxz
pop
mov
cwtl
popf
xor
sbb
mov
lock
adc
inc
mov
cmpsb
lret
call
and
jecxz
sub
or
xchg
andb
call
mov
std
jnp
jnp
adc
xor
pop
mov
ljmp
aad
ds
fsubrs
mov
adc
sbb
out
movsb
mov
test
sbb
lea
stos
sbb
fildll
ljmp
fmuls
mov
push
push
sbb
gs
sub
je
fsubrs
and
jb
repz
mov
fdivp
fnstsw
dec
lahf
jae
jne
repz
jo
jge
aaa
sbb
rcll
imul
dec
fimuls
jle
int3
or
mov
shlb
mov
aas
ljmp
sub
enter
jns
push
cmpsb
mov
pop
and
pushf
stos
inc
into
movsl
pop
or
in
adc
ja
imul
dec
or
sbb
jmp
cmpb
dec
push
jne
push
dec
scas
sub
push
and
add
dec
out
lahf
xchg
inc
mov
vcvtsi2sdl
pushf
gs
jb
fistpll
inc
jnp
popf
cmpsb
hlt
loope
out
out
pop
fistl
or
cmp
outsl
mov
fisttpl
scas
push
sbb
sub
pop
dec
mov
out
jne
test
sbb
push
pop
loopne
add
shufps
cmpsb
mov
out
push
mov
and
cmp
in
pop
clc
je
icebp
mov
dec
sbb
pushl
int3
imul
adc
xor
cmp
sti
jge
leave
pop
fimull
xor
mov
add
or
adc
pop
daa
xchg
cld
xor
inc
inc
adc
fsubrs
sub
and
in
inc
push
daa
int
fisttps
jmp
adc
out
add
ss
xlat
stos
jae
xchg
mov
pushf
sub
andl
mov
inc
les
mov
mul
jg
cmp
or
mov
sbb
xchg
imul
sub
daa
mov
xor
add
imul
fbld
adc
fdivl
xor
sbb
push
ret
add
outsl
fsubrp
jbe
mov
sahf
lock
and
cmpsb
aas
adc
popa
popf
sbb
push
sbb
add
inc
sbb
xchg
pop
mov
mov
rolb
imul
orb
adc
and
fwait
lea
loope
std
bound
xor
xchg
xchg
enter
xor
iret
or
data16
and
push
rep
shrb
mov
roll
dec
sub
pop
lods
cs
sub
xor
mov
push
mov
enter
jg
into
cmpsb
mov
mov
sub
ffree
sbb
jmp
push
ret
ljmp
gs
out
xchg
pop
retw
cld
pop
cli
dec
mov
xchg
dec
popf
add
add
dec
js
jg
ja
scas
mov
cs
scas
ret
push
addr16
jmp
pop
jb
add
mov
push
or
mov
ds
mov
mov
jl
push
push
lods
loop
jbe
subb
sti
iret
push
xor
cmpsl
sub
xlat
cwtl
and
push
cmp
aaa
test
sub
jge
ret
jns
add
mov
ss
and
iret
sarb
pop
daa
fdivs
push
sbb
in
das
gs
dec
add
fcoms
scas
es
mov
repnz
call
cli
mov
push
pop
je,pn
jle
scas
xchg
pusha
jbe
push
outsb
rorl
les
mov
ret
in
stos
nop
add
in
push
arpl
push
adc
sahf
repnz
testl
push
jne
lcall
mov
jl
fildl
adc
jmp
cmp
dec
ret
sbb
popf
aas
ficoms
fwait
adc
push
mov
mov
inc
shll
add
ret
mov
out
es
outsw
lods
or
fcmovne
mov
or
fsubrs
push
mov
jbe
mov
jne
or
inc
jle
test
cmpl
lods
sbb
xor
ljmp
testb
gs
jo
mov
sub
mov
cmp
push
mov
loopne
lods
mov
jb
pop
popl
cmpsb
cltd
inc
aaa
sub
jno
stc
inc
mov
push
pop
xlat
push
push
mov
lods
inc
rcrl
push
cmp
sbb
xchg
das
jae
sub
jns
iret
mov
mov
mov
adc
int
inc
dec
adc
cmc
jl
push
sbb
or
mov
xchg
mov
sbb
dec
fsubl
add
stc
jmp
fildl
jo
cmpsl
or
popf
nop
and
dec
addr16
push
fidivl
and
jae
outsl
out
mov
inc
and
ds
into
xlat
ret
push
jb
fdivrl
cmp
or
rcll
mov
in
add
bound
push
mov
pop
or
rclb
xor
iret
push
fnstsw
sar
jo
xor
fdivrp
lds
fcmovne
push
not
stos
mov
add
in
shl
scas
dec
sahf
inc
insl
jne
adc
add
sahf
sbb
jnp
xchg
ret
and
ss
icebp
add
int
mov
aad
mov
sub
mov
pop
inc
cli
gs
movsb
lea
out
loope
cmp
lock
xchg
daa
out
nop
jne
sarb
lahf
dec
cmp
nop
jle
arpl
jge
push
xor
es
notl
or
dec
ficomps
outsl
mov
dec
sub
aaa
out
mov
clc
in
ficoml
adc
xchg
mov
mov
sahf
push
loopne
jb
cld
movsl
xchg
adc
or
aam
and
icebp
mov
and
push
sarb
lcall
aam
imul
dec
sub
fcoml
jnp
ja
pop
xor
test
pop
fstp
clc
mov
mov
lods
add
xor
xor
inc
adc
loop,pn
ds
and
push
xor
cli
cwtl
push
xchg
jle
sahf
pop
lods
std
stos
push
std
dec
add
and
or
mov
pop
outsl
nop
popf
sbb
or
pop
mov
pusha
push
test
cmc
add
cld
mov
and
scas
pop
in
push
jg
push
mov
aas
aam
arpl
clc
mov
test
mov
xchg
mov
jne
mov
jl
sbb
je
xchg
inc
scas
xor
or
sbb
negb
aaa
arpl
mov
leave
push
ds
repz
test
xor
mov
mov
cwtl
and
lods
jns
lods
cmp
nop
xor
adc
mov
test
int3
inc
out
pop
and
ficomps
mov
xor
mov
mov
pop
lods
mov
adc
je
lret
push
shlb
mov
sti
sub
fmuls
mov
out
clc
add
pop
cmp
jo
ss
inc
inc
inc
mov
sbb
ja
pop
xorb
insl
inc
push
ret
jns
fisubrl
jg
push
adc
xor
adc
xor
rolb
daa
xchg
aam
xor
push
mov
fwait
bnd
xchg
aaa
fldz
fcomps
inc
adc
loope
sahf
inc
sarl
pop
addr16
cmp
cmc
sbb
out
inc
adc
xchg
mov
pop
xor
sti
pop
jecxz
jno
xor
xor
add
je
aam
mov
aaa
cs
jb
mov
popf
and
loopne
push
mov
pop
mov
adc
loope
mov
lahf
inc
mov
xor
int3
dec
sbb
or
lds
xchg
or
sub
pop
movsb
xchg
imul
sub
push
cmp
imul
and
lods
std
or
push
pop
and
xor
xor
cs
and
shll
bound
push
xor
imul
cmp
loope
dec
jnp
adc
xchg
cmp
scas
push
sbb
xor
jge
jl
and
jb
xlat
mov
or
test
pop
stc
jmp
and
xor
in
aas
into
jno
movl
cmpsb
repz
lret
daa
jl
pop
or
dec
xchg
or
mov
inc
das
aaa
call
in
cmp
pop
adc
jmp
data16
test
lcall
rcr
mov
sub
out
lcall
jo
push
cmp
and
inc
das
std
scas
iret
jne
and
cltd
or
pop
icebp
mov
mov
sub
repz
shll
scas
sbb
shl
pop
int3
mov
inc
push
push
dec
xchg
imul
out
dec
pop
cld
push
jle
ja
cld
add
add
inc
movsl
enter
push
cwtd
jge
or
cmpsl
push
in
adc
jnp
push
into
add
jge
mov
sahf
mov
xchg
sub
mov
mov
das
sbb
lahf
lret
repz
daa
and
sub
data16
mov
sbb
movsl
cmpsb
es
imul
xchg
je
sbb
test
nop
adc
mov
out
add
mov
or
inc
lret
popa
in
dec
mov
xchg
xchg
movsl
sbb
mov
mov
mov
ret
mov
imul
or
std
shr
inc
ss
mov
int
mov
in
test
fstpt
cmpsb
ljmp
in
cld
adc
ljmp
lea
flds
mov
jp
scas
inc
mov
or
out
push
aad
stos
neg
sbb
mov
lods
or
popa
repnz
rorb
pop
in
xchg
mov
and
pop
pushf
pop
inc
pop
lret
cmp
arpl
mov
fwait
and
push
jecxz
lret
xchg
sarb
xor
je
ret
or
dec
inc
dec
les
shlb
sbb
or
xchg
lcall
adc
movl
mov
mov
or
fistpl
sub
test
cmc
ja
push
mov
push
jne
push
xor
stos
adc
mov
dec
aam
das
xor
xlat
inc
lcall
ret
cld
sub
dec
enter
fisttps
imull
int3
out
mov
jmp
aaa
std
pushf
xchg
jae
push
mov
add
int
add
mov
lret
mov
add
xchg
lds
cmp
stc
js
ret
push
jo
les
jge
mov
inc
adc
jo
mov
movsl
pop
xor
mov
ds
jbe
jp
mov
add
xchg
mov
lret
and
fwait
sbb
inc
mov
xchg
movsb
inc
xchg
push
frstor
rcl
pop
push
scas
bound
push
xor
jp
and
pop
lret
adc
and
mov
mov
imul
xor
xchg
icebp
mov
adc
ss
and
inc
sbb
test
movsb
cmp
sub
incb
mov
gs
dec
testb
stc
dec
xchg
inc
or
imul
sbb
xor
add
sbb
in
push
je
and
lret
xchg
stos
xchg
es
jne
fcmovnbe
fbld
lahf
int
out
inc
ret
repz
mov
jg
add
jb
push
movl
sahf
jae
mov
add
subb
mov
cltd
fsubrp
js
jne
test
popf
fdivl
dec
mov
shlb
fidivs
repz
ret
bound
push
imul
adc
and
call
mov
jl
fdivr
cmp
popa
jno
pop
pop
jecxz
push
bts
movsl
sub
repnz
mov
adc
or
mov
jbe
cmp
jns
add
std
adc
lds
adc
sbb
mov
xchg
xor
cmp
outsl
fidivrs
cmp
jle
push
lock
add
add
lods
lock
fidivrl
sub
jnp
adc
push
rorb
cld
add
dec
lds
pop
icebp
mov
repnz
sub
flds
xchg
mov
pop
dec
pop
xchg
mov
xchg
negb
mov
or
and
inc
mov
xchg
sbb
xor
pop
sub
or
fistl
and
into
repnz
subb
jle
push
pusha
ret
cmc
shl
xor
lods
and
dec
xchg
sbb
mov
faddl
hlt
hlt
or
fisttpl
jno
pop
ss
cmp
stos
push
jnp
lods
ja
inc
or
cwtl
dec
dec
aam
mov
imul
adc
pushl
xchg
stc
inc
enter
int
sub
addl
jb
adc
mov
pushf
fsubs
out
xor
mov
pop
push
iret
sbb
sbb
sbb
and
cs
sub
add
push
ss
mov
xchg
push
insl
int
pushf
push
pop
lret
repnz
mov
push
outsl
fwait
pusha
mov
leave
fistps
nop
xor
lret
mov
sub
scas
dec
fdivl
mov
fstpl
mov
xchg
cs
jne
fstl
mov
imul
or
aad
fwait
xor
imul
cmpsl
xchg
mov
addr16
fsub
pop
and
inc
mov
fnstsw
rcrl
inc
sbb
nop
cld
data16
out
test
xor
sub
mov
push
xor
sarb
mov
lret
sub
and
inc
push
sbb
xchg
lcall
inc
xchg
fisttpll
push
jbe
ds
daa
das
cmp
mov
cltd
rcll
mov
inc
adc
jle
add
cmp
adc
movsl
movsl
cmc
lahf
shrl
xchg
push
inc
jno
decb
std
push
dec
xor
push
lcall
int
push
inc
imul
lds
pop
pop
imul
xor
mov
push
push
loop
lahf
fnstsw
sub
pop
mov
cmpsb
movsl
xor
les
out
and
lds
inc
aam
mov
push
and
dec
and
stos
cmp
sub
aaa
loope
leave
aaa
inc
ds
gs
test
sub
mov
push
fcmovnu
clc
hlt
xchg
or
cmpsl
imul
ljmp
and
outsb
sub
into
insl
cmp
xchg
in
out
mov
mov
xchg
icebp
xchg
mov
out
mov
jns
cmpsl
add
dec
xor
push
rolb
cmp
fdiv
in
leave
add
adc
cld
and
jmp
repz
mov
loope
add
xchg
test
or
std
stos
inc
cs
xchg
inc
jnp
int
popa
cmp
sahf
add
scas
and
adc
add
jo
pop
push
mov
jne
pop
rcrb
outsb
mov
lcall
xchg
xchg
and
mov
cs
mov
push
push
sub
push
xor
mov
or
fld
mov
or
push
sub
repz
add
fadds
adc
dec
aas
stos
push
and
and
and
push
push
js
jno
cltd
pop
les
dec
sub
rcrb
ror
sbb
add
jno
loope
inc
rcrb
push
or
and
mov
mov
or
cmpsl
ss
lods
rorb
test
loope
popa
push
notl
mov
cwtl
push
xlat
and
pop
jbe
shrb
test
test
push
lret
ljmp
cmpsl
mov
pusha
lods
sub
inc
jno
mov
mov
out
insl
imul
pusha
xor
inc
lods
lock
cld
lcall
mov
shll
out
xor
icebp
mov
aaa
cmp
and
cmc
mov
out
cmpsl
je
xor
sub
cld
and
cltd
scas
pop
mov
es
nop
mov
es
pushf
pop
je
sbb
mov
pop
cs
xchg
cwtl
mov
insl
dec
mov
adc
sub
jns
dec
call
ljmp
inc
sbb
pop
cmp
or
pop
pop
cmp
mov
jmp
test
jb
jne
inc
ja
or
adc
cwtl
movl
jns
jmp
pop
xchg
add
fsubrp
mov
jno
add
adc
mov
dec
mov
lods
popa
sbb
lods
orb
push
aaa
imul
jbe
cwtl
jno
xchg
not
dec
sub
pop
sti
mov
push
lock
jle
ret
xchg
dec
add
ss
je
add
xchg
shlb
add
and
and
jno
xor
sbb
mov
mov
bound
adc
push
sub
inc
dec
loope
sahf
or
pop
pushf
xchg
or
mov
addb
jae
jbe
and
mov
pop
ds
add
shll
jl
adc
mov
in
sbb
or
insb
movl
aas
int
repz
push
push
iret
lret
inc
aad
jo
test
imull
data16
scas
inc
pop
dec
ficompl
cmp
mov
jge
mov
adc
adc
ljmp
jns
or
mov
mov
dec
sahf
add
push
push
xor
sbb
mov
repnz
xchg
xor
dec
cli
or
xchg
pop
or
cwtl
jno
scas
jle
iret
shlb
inc
push
ss
dec
push
in
out
loopne
or
xor
pop
or
mov
and
fmull
in
pop
cmp
dec
test
and
mov
jle
dec
fucomp
cmp
arpl
sahf
imul
mov
add
ret
cmp
push
mov
loopne
dec
sbb
mov
orw
repz
mov
lock
sbb
push
lret
adc
subl
movl
rorb
je
mov
movsb
cltd
adc
xchg
mov
mov
mov
in
xor
add
sub
inc
cmpsb
mov
jmp
jnp
jp
push
daa
std
jnp
cmp
push
and
mov
outsl
push
ja
push
icebp
rolb
add
das
pop
sbb
sarl
sub
xor
inc
stos
into
pop
data16
fwait
or
xchg
pop
pop
cltd
mov
test
xchg
pushf
mov
jecxz
jmp
xor
push
pop
stos
insb
xor
movsb
sub
loopne
loopne
jge
lahf
icebp
jle
fcomps
mov
lds
stos
test
push
cmc
icebp
loop
aad
add
cmp
sahf
xor
lds
push
pop
mov
mov
loopne
xor
add
push
call
jg
jp
pop
xor
cmp
out
push
add
sarb
pop
cmp
mov
insl
push
push
adc
mov
fisttps
or
shll
adc
push
mov
loope
outsb
sahf
ret
jae
aad
mov
push
inc
lea
adc
inc
adcb
push
cmp
imul
inc
lret
cmp
insb
dec
std
cld
xchg
push
mov
adc
push
jae
push
and
sahf
popf
mov
mov
jle
push
rcll
test
or
xchg
push
insl
inc
and
outsb
test
mov
neg
dec
sbb
adc
sbb
enter
pusha
call
adc
sub
popf
test
or
sahf
movb
pop
mov
cld
imull
mov
add
std
xchg
js
in
sbb
repnz
lds
xchg
fwait
add
xchg
mov
xchg
ret
mov
mov
sahf
aas
sub
subl
outsl
or
xor
mov
loop
inc
and
sbb
aad
jle
adc
repnz
insl
xchg
add
add
imul
pop
cmp
jmp
int3
push
sub
fwait
popa
shrl
sbb
hlt
repnz
out
xchg
jne
xor
jb
daa
sub
lods
sarb
repnz
popa
imul
arpl
mov
pop
pushf
sbb
pop
leave
push
movsl
mov
xor
enter
cmp
sub
mov
imul
data16
shlb
je
popa
xor
out
out
stos
adc
cmpb
jb
jno
xor
sub
loope
jae
push
sub
insb
fdiv
arpl
pop
addr16
mov
ror
push
add
xchg
into
out
mov
mov
ss
adc
jbe
aad
and
add
loopne
add
incb
sub
or
inc
cmp
pop
xchg
adc
aas
ja
push
jg
lods
push
loop
inc
mov
pushf
mov
push
je
mov
jl
jge
out
nop
les
fldl
dec
fdivl
insl
mov
jo
scas
xchg
xchg
add
adc
dec
int3
adc
cmpsl
mov
push
push
fs
mov
testb
inc
pop
lds
fisubl
push
jle
mov
push
sub
jp
inc
mov
or
adc
push
hlt
inc
outsb
roll
jg
lods
sub
shr
inc
test
mov
pop
ror
shlb
in
jne
shr
pushf
push
jl
stos
cwtl
fisttps
sub
adc
mov
or
mov
xor
adc
jo
inc
popa
add
imul
es
sub
jl
xchg
mov
loope
movsl
ss
or
mov
loope
xchg
fnstcw
hlt
lods
inc
pop
cwtl
mov
xchg
jne
fisttps
dec
std
jle
test
aas
loope
popf
jg
loop
inc
out
test
push
inc
lea
rcl
inc
push
sarb
sub
pop
rorl
into
mov
lods
and
popa
push
cltd
xchg
out
ja
test
add
push
shr
and
stc
xchg
xchg
mov
jno
and
ds
aaa
fcmovnb
mov
cwtl
jno,pt
icebp
mov
test
adc
dec
push
aaa
cmp
sbb
fidivl
mov
icebp
outsl
mov
sub
cld
pushf
xor
and
imul
or
loope
out
enter
stos
scas
dec
mov
ljmp
cmc
rorb
dec
sahf
frstor
adc
jmp
int3
jo
jge
pop
push
sbb
or
icebp
outsb
mov
lret
jg
push
sti
mov
sbb
cs
stc
divb
push
andl
lcall
push
add
sub
cltd
cmp
rorb
in
pop
mov
cmpsl
mov
dec
dec
ds
cmp
out
test
xor
loopne
xor
cmp
inc
push
les
pop
inc
sbbb
and
sahf
es
int
jmp
mov
cmp
push
pusha
into
out
sub
nop
xchg
ret
sub
sbb
ss
inc
adc
es
les
inc
and
jp
inc
push
lcall
lret
shrb
sub
jge
sahf
xchg
in
fimuls
decl
pusha
stos
fcmovbe
or
fisubs
outsb
xchg
cmp
mov
fcoms
arpl
xor
into
lahf
push
clc
adc
xchg
sub
cmp
inc
movsb
adc
ret
xor
shl
fisubrs
ja
fistps
repnz
sbb
mov
cmp
inc
and
xor
jmp
xchg
add
dec
or
subb
mov
jmp
inc
sahf
inc
hlt
fptan
shr
enter
nop
imul
imul
into
pop
aaa
les
jbe
add
bound
fmuls
mov
or
test
mov
sub
enter
outsb
sub
bound
mov
enter
xchg
push
imul
jg
outsb
scas
dec
cmp
sbb
rorl
imul
imul
repnz
sbb
shl
push
idivb
xor
sbb
add
sub
dec
adc
xor
adc
cmc
aas
mov
test
sub
sarb
fstl
shr
inc
dec
in
in
jae
mov
dec
cmc
dec
and
movsl
mov
cmp
adc
push
mov
ficomps
cltd
pop
mov
sub
out
rol
dec
inc
add
adc
movsb
push
cltd
fbld
movsb
movsb
ficomps
adc
test
xchg
push
lds
out
aam
cmc
int3
xchg
fs
xchg
in
mov
inc
orb
pop
sbb
movsl
stos
mov
lahf
or
scas
mov
es
repz
sbb
xor
dec
cwtl
inc
outsb
loop
and
pop
add
mov
test
lods
or
test
cmp
mov
mov
mov
add
fisttpll
ds
inc
icebp
rcr
xchg
push
mov
add
cmp
or
sub
sub
loopne
dec
adc
cmpsb
enter
sahf
and
jg
sub
dec
xor
inc
xchg
push
cmpsb
jns
sarb
pop
pop
pop
bound
or
addr16
fs
or
add
fcoml
cmp
pop
cmp
cli
shl
repnz
iret
mov
jp
jns
jmp
xchg
mov
cmpsl
cmpsl
fidivl
out
jecxz
dec
adc
mov
jae
int3
bswap
inc
aaa
xor
xchg
int
inc
iret
jmp
test
pop
xor
jno
mov
mov
mov
fs
enter
sar
in
jmp
mov
mov
jecxz
mov
xor
xor
adc
test
popf
int3
das
mov
cmp
cmp
adc
mov
dec
pop
sub
gs
add
mov
insb
jae
cltd
neg
ljmp
js
insl
xchg
bound
repz
mov
push
mov
xchg
fmul
push
mov
push
mov
mov
je
imul
dec
sub
aaa
ds
hlt
scas
int
inc
movsl
xchg
das
add
push
insl
movsl
pop
frstor
fisubrl
in
dec
leave
iret
daa
pop
stos
dec
into
out
inc
lods
pop
mov
in
pop
xchg
int
fiadds
bound
push
enter
pushf
mov
mov
aad
sub
mov
cmpl
rorb
mov
pop
add
mov
fisubrl
test
pop
out
dec
cmp
lods
ficompl
xor
arpl
stos
push
pop
add
repnz
add
enter
adc
ja
cmp
sbb
cmpsl
pop
sbbl
mov
scas
mov
fldt
rclb
dec
jmp
ljmp
pop
fstpl
sub
xor
stos
mov
push
loope
mov
inc
repz
xor
xchg
shrl
xchg
mov
cld
jbe
daa
mov
repnz
rorl
lods
mov
mov
mov
sahf
pusha
xchg
shll
xchg
add
cmpb
mov
imul
loop
push
push
mov
and
sbb
movsl
in
cmp
ror
adc
xchg
mov
nop
sti
add
ds
dec
insl
sub
add
mov
mov
pop
fs
pop
in
adc
out
int
add
xchg
fs
push
mov
cs
fists
mov
xor
sub
mov
and
mov
mov
outsb
mov
leave
sbb
lret
int
inc
pushf
cmpsb
outsb
push
inc
and
jecxz
mov
lock
jb
sti
lock
test
pop
mov
leave
dec
verw
roll
ss
lods
jle
aam
movsl
jb
sbb
push
fbstp
jnp
daa
xchg
loop
cmpsl
xchg
in
arpl
or
in
arpl
jno
rorl
outsb
cmc
test
outsb
and
je
xor
mov
xchg
or
jae
aam
fmull
bound
dec
jle
or
sti
xchg
dec
rcrb
sub
cmp
dec
adc
stos
aam
mov
cmpsb
ds
and
insl
mov
bound
jl
repz
out
scas
xchg
fcoms
push
daa
sub
inc
outsl
xor
and
fs
shlb
or
jl
sahf
jecxz
ffreep
inc
inc
xchg
cwtl
jno
jmp
cs
dec
xchg
gs
lea
xchg
lcall
jne
mov
xchg
cmp
cmc
rcll
test
xchg
mov
mov
data16
int
out
dec
jge
pop
fwait
jbe
add
xchg
jae
insb
push
lret
mov
push
imul
xor
int3
out
adc
fwait
push
stc
pop
or
or
xchg
jmp
jns
jl
sbb
out
movsl
adc
sbb
test
pop
test
in
in
fwait
icebp
mul
repnz
push
aaa
mov
rcl
jnp
out
jmp
xchg
out
imul
jne
inc
xor
lods
push
dec
pop
pop
mov
daa
jecxz
call
lds
jecxz
outsl
pop
xor
jg
popf
adc
mov
aad
mov
mov
xchg
mov
shl
sbb
mov
or
inc
out
push
push
ds
cli
push
call
repz
es
cltd
add
jle
in
test
lahf
mov
inc
adc
mov
sub
dec
add
mov
data16
lods
imul
out
shl
push
jge
jge
jle
mov
test
xor
sbb
mov
cmp
xchg
or
test
movsl
xor
stc
push
jo
addr16
lods
insl
sub
cmp
xor
mov
pop
and
pop
or
mov
pop
fistpll
adc
and
negl
push
incb
out
lods
xor
das
xor
pop
outsb
sbb
cld
fcomp
mov
mov
sbb
neg
jmp
mov
and
inc
ficompl
lret
mov
pop
sbb
pop
inc
push
mov
popa
addr16
sub
xorb
repz
jo
cmc
jge
std
insl
xchg
cmc
lods
push
mov
xchg
pop
les
xor
push
pop
and
inc
push
movsb
add
jle
and
mov
call
lahf
int3
mov
cmc
xor
lcall
jecxz
xlat
cmc
rcl
insl
scas
pop
push
popf
inc
dec
insl
pop
lods
pop
loopne
adc
inc
repz
std
jecxz
and
nop
rorb
xlat
addr16
sbb
in
rcrl
mov
outsb
mov
lcall
shr
out
push
lea
pushf
int
push
jp
out
out
sub
insl
fildl
adc
add
xor
pop
jle
popf
je
scas
or
mov
mov
jb
xchg
mov
add
ret
jbe
loop,pn
mov
loop
add
popa
pop
ja
xchg
in
xor
mov
cmp
jg
inc
cmpb
fcmovb
push
lcall
into
mov
mov
ds
add
and
push
mov
pop
stos
lds
icebp
push
mov
out
inc
int3
shlb
inc
add
and
mov
in
rcll
or
popf
cmp
xchg
xchg
daa
aam
gs
dec
cmp
stos
cmp
xchg
xchg
rorl
sbb
lods
pop
fiadds
js
push
clc
or
xchg
xlat
and
xor
fisubrl
aad
xchg
sahf
xchg
fiaddl
loop
sbb
add
jg
pushf
sub
rep
popl
test
pop
test
ficoml
adc
test
add
shr
mov
je
test
int
jecxz
sub
call
sub
sti
in
std
mov
jle
nop
out
inc
outsb
pop
dec
in
push
ja
subl
shlb
push
outsb
movsl
insl
mov
mov
sbb
mov
sbb
push
fdivrs
jl
pop
aas
xchg
or
adc
xchg
cmp
xor
jge
test
and
lds
push
sub
push
sbb
push
jl
ror
mov
and
imul
fdivrl
pop
dec
data16
bound
xchg
jns
dec
popf
cwtl
cmp
pop
pop
xchg
xor
push
xchg
ret
xchg
stc
xor
or
ljmp
cmp
mov
inc
into
and
mov
push
push
xchg
fists
mov
ror
mov
shrb
dec
add
enter
add
mov
cmpsl
lods
lds
xchg
xabort
xor
out
es
insb
push
lock
jnp
sub
adc
hlt
push
pusha
mov
xlat
fwait
lahf
xchg
mov
inc
daa
sbb
int3
shl
nop
out
pop
inc
mov
jnp
xchg
ror
stos
sbb
xor
xlat
dec
add
dec
mov
push
lods
mov
rclb
adc
xor
add
ljmp
sti
insb
and
negl
push
jmp
push
sub
push
and
out
aam
movsl
mov
addr16
xchg
adc
cmpl
sub
and
xchg
and
pop
xor
or
mov
cmpsl
mov
add
sti
cmp
dec
fcmovnu
or
pop
sbb
pop
cltd
push
fmuls
inc
imulb
or
scas
rcrl
clc
cmpsb
pop
loop
mov
sbb
and
scas
xor
cli
aam
out
mov
test
scas
fidivrs
jle
sub
xchg
lret
mov
mov
cmpsb
sub
mov
mov
or
dec
jmp
std
push
xchg
or
sar
push
sub
sub
aaa
mov
rorb
leave
ret
pop
push
test
aaa
aas
cmp
sti
push
insb
mov
cs
add
pushf
pop
jmp
jbe
cmp
stos
in
cmp
std
cltd
and
jo
orb
xchg
push
mov
ret
aad
add
mov
lock
lahf
movsb
ret
sbb
and
sbb
daa
dec
fbstp
xor
cwtl
xchg
sbb
jno
or
or
jno
xorl
mov
je
iret
xchg
pusha
jg
add
dec
pop
int
xchg
sbb
scas
inc
lods
imul
inc
xchg
inc
stos
scas
insl
out
imul
enter
jecxz
cmpsb
xchg
mov
orb
push
push
call
pop
jg
mov
ljmp
cmp
scas
les
push
outsl
mov
sar
mov
sbb
popa
adc
xchg
pop
sbb
xchg
mov
push
orl
stos
pop
xchg
add
fld
cli
mov
mov
in
popf
xor
mov
inc
mov
cmpsb
sub
lds
icebp
in
xlat
sub
cmc
jo
pop
mov
mov
dec
cmpsb
mov
inc
mov
inc
fdivr
cmp
push
adc
dec
jno
in
shlb
sub
imul
test
and
mov
imulb
fdiv
or
fstpt
stos
push
fwait
or
add
mov
jg
mov
jecxz
mov
ljmp
add
mov
and
cmp
mov
dec
in
push
jb
jae
dec
gs
xor
bound
or
test
sti
arpl
cmpsb
loope
sti
lock
iret
mov
cmp
mov
in
xchg
popa
mov
push
inc
aas
sub
xor
pop
xchg
jae
xor
fsubl
roll
fs
hlt
xchg
mov
mov
cmc
lea
pop
cmp
pop
mov
lods
repz
clc
lret
mov
jb
lret
push
sbb
mov
ror
pop
pop
add
xor
out
fs
jns
mov
enter
xchg
adc
cmp
pushf
ret
mov
ds
repz
pop
ss
fcmovnbe
xor
clc
push
loopne
dec
mov
int
mov
clc
imul
sub
fcmovb
inc
cmp
lahf
orl
jmp
int
sbb
insb
pop
dec
jmp
out
xor
sbb
cmc
adc
sti
dec
test
js
cmpsb
mov
adc
lods
jae
movsb
ret
popf
insb
jmp
fbld
pop
scas
inc
stc
pop
outsb
pop
sbb
cmpsb
jp
cmp
es
xor
pop
cltd
les
cli
xchg
scas
and
adc
pushf
adc
xchg
jg
rcrb
cmp
inc
rcr
sbbl
mov
in
aas
xlat
mov
mov
in
or
mov
xor
xchg
shll
out
hlt
sahf
adc
mov
or
sub
stos
push
sbb
pusha
clc
and
fwait
aas
rcll
imul
jge
rorb
out
std
sub
fs
add
push
and
pop
scas
mov
jp
inc
xor
add
adc
xchg
or
ss
push
sub
sti
stos
incb
xchg
push
mov
lcall
xor
cmpsb
jns
mov
test
mov
popa
jns
xor
mov
pushl
push
mov
push
lret
test
mov
cltd
adc
xor
mov
repnz
sti
cwtl
lahf
and
push
push
pop
push
fistpll
push
fdivl
outsb
ss
loope
xor
in
add
inc
iret
cmp
les
clc
xor
fistps
push
adc
cmpsl
in
pop
negl
dec
rorl
scas
jge
mov
rcrl
ja
imul
jl
scas
pop
int3
add
push
sub
push
lret
repnz
and
mov
add
ljmp
fwait
mov
jg
or
inc
jns
adc
in
sub
sarb
repnz
xor
sbb
and
sub
div
mov
mov
mov
xor
fsts
cld
jns
lahf
in
ss
mov
subl
jle
push
jle
jg
sub
pop
sbb
imul
and
repnz
loop
out
push
decb
out
loop
fsubr
imul
fcmovnb
call
mov
jns
cmpsb
push
fildll
jl
sbb
mov
cwtl
mov
lcall
push
xchg
jecxz
mov
jecxz
mov
int3
fisttpl
rcr
fcmovu
imul
cmp
imul
addr16
rclb
add
jecxz
push
xor
jmp
adc
pop
mov
rcrb
pop
loopne
mov
out
xchg
xchg
xor
arpl
mov
push
sub
ja
xchg
jg
gs
jmp
sahf
mov
cmp
pushf
jp
inc
sub
aas
pop
sub
jge
ror
aam
aam
hlt
int3
sbb
mov
pop
xorl
loope
jbe
mov
aas
nop
test
vmovq
or
cltd
scas
cli
pop
sbb
lds
aas
dec
orl
sub
mov
jp
outsl
sub
mulb
leave
and
cwtl
outsl
or
pop
in
mov
cmc
popf
or
cmpsl
std
sub
xchg
in
and
sbb
clc
push
jge
seta
insl
cltd
and
and
xor
and
in
scas
sbb
or
stos
aad
sbb
popa
into
ss
mov
push
xchg
out
pop
das
aad
in
jge
xchg
in
fstp
outsl
mov
dec
repnz
ljmp
push
add
xlat
jae
pop
jns
scas
add
or
sar
lret
pushf
out
pop
arpl
mov
sbb
mov
rcll
hlt
fcom
and
dec
push
pop
loopne,pn
lcallw
faddl
orb
in
push
fcoms
inc
pop
nop
mov
push
seta
jg
in
inc
inc
movsb
and
dec
pop
shrl
push
jns
add
push
test
push
adc
push
and
cli
xchg
dec
aam
push
rclb
ficomps
dec
mov
jb
cs
mov
fldl
repnz
adc
std
das
repz
push
pop
shrb
test
inc
jmp
jmp
dec
xchg
xchg
in
fwait
mov
cld
lcall
insl
pop
rolb
fadds
dec
in
jmp
and
xor
push
cmp
sbb
push
pop
ret
leave
mov
cs
cmp
les
aam
jbe
test
push
popa
inc
jae
dec
adc
push
cmpsl
pusha
sbb
push
cmp
jmp
fiaddl
jnp
adc
ds
aas
cmp
je
in
or
bound
push
sub
sbb
adc
sti
fcompl
aad
sahf
cmc
ss
add
mov
add
decl
mov
aaa
pop
mov
add
mov
jmp
add
sub
xchg
stc
mov
sub
pop
fsubr
or
xchg
push
test
jb
mov
mov
mov
mov
rol
fistpll
sahf
cmp
pop
out
push
and
movsl
lcall
xchg
clc
mov
jne
ss
add
daa
lret
loop
inc
outsb
inc
xchg
sbb
es
jns
stos
popa
arpl
cmpsb
xor
scas
inc
repz
rorb
movsl
lret
pusha
sbb
or
testl
sub
les
jle
cld
ljmp
and
gs
lods
fistps
jns
icebp
add
lock
sbb
inc
sub
push
mov
dec
mov
jnp
mov
push
ss
roll
icebp
lret
movsl
mov
xchg
movsb
xor
push
dec
les
sbb
mov
mov
and
inc
add
cmp
or
out
or
inc
test
aam
push
inc
lods
xchg
jne,pn
mov
jl
adc
push
pop
daa
fisttpl
and
push
mov
gs
popf
dec
rolb
sar
sahf
adc
and
std
push
pop
insl
lret
cli
mov
mov
sub
loope
adc
pop
dec
cmp
call
or
adc
xchg
je
xor
sbb
adc
push
in
lods
imul
in
in
push
in
or
cmpb
and
pop
addr16
mov
sub
outsl
dec
mov
cmp
mov
adc
stos
cli
push
add
jmp
int
mov
dec
push
stos
neg
hlt
in
and
inc
cmpsb
add
or
adc
lret
cmp
mov
mov
orl
xor
loop
shl
fwait
pop
hlt
jmp
ds
enter
mov
xchg
inc
ss
pop
test
push
fcoms
fidivl
test
decl
lea
jp
lods
push
dec
jg
les
cs
addr16
cmpsb
insb
mov
scas
std
aas
into
push
outsb
dec
pop
xor
push
inc
dec
xchg
sub
xchg
and
and
pop
cmp
imul
dec
daa
pop
mov
repz
pop
cwtl
xor
dec
cmc
mov
jbe
bound
out
push
mov
out
push
mov
pop
cmp
icebp
jg
shlb
clc
mov
gs
and
push
push
sbb
lret
fstpt
mov
mov
into
cmp
roll
je
cmp
pusha
out
ljmp
sub
jne
jmp
pop
adc
lock
ljmp
fildl
jo
out
les
inc
addl
pop
jp
cmpsb
das
fmuls
je
jb
add
pop
clc
lock
rolb
leave
imul
sarb
cmp
popa
pop
shl
or
add
rclb
push
cmp
in
inc
inc
sbb
gs
adc
movsb
les
addr16
or
outsl
push
in
cli
rol
popf
and
mov
or
out
aad
aad
sbbb
push
push
adc
cmp
imul
lock
mov
ret
inc
mov
fnstcw
nop
inc
xchg
pop
pop
ficoms
adc
push
test
sbb
int
les
pop
cmp
pushl
sarl
movsl
xchg
xchg
rcl
movsb
push
jb
adc
lret
pushf
in
cltd
jmp
fs
sahf
rclb
push
push
movsl
insl
icebp
mov
pop
pop
or
mov
push
mov
jle
jl
xchg
mov
xor
and
inc
jg
jno
hlt
stos
bound
or
adc
cmove
notl
std
mov
out
out
xor
cmc
out
sbb
inc
adc
bound
mov
mov
fs
dec
ja
lcall
sub
je
test
test
xchg
adc
int3
add
push
dec
fstps
add
mulps
sbb
test
outsl
dec
cmpsl
jmp
mov
or
or
test
mov
mov
cmp
arpl
push
ljmp
stos
sub
cmc
repnz
les
inc
or
mov
movsb
lods
pop
js
sbb
rorl
insl
mov
ffree
cmpsl
jge
pop
mov
or
cmp
lahf
adc
out
jno
add
clc
and
hlt
test
ss
es
shll
dec
mov
das
iret
bound
cmp
subl
push
mov
repnz
pop
pop
jae
imul
and
lods
shll
lods
fimuls
out
lods
pusha
or
mov
arpl
int
dec
leave
mov
stos
mov
lret
mov
je
mov
adc
pop
mov
addr16
cmp
fldt
adc
xchg
sub
add
jge
test
icebp
inc
imul
jns
es
ljmp
mov
mov
jmp
es
mov
js
xor
hlt
aaa
iret
iret
push
cli
mov
cmc
notl
aas
mov
adc
add
fadd
add
pop
lods
fs
jecxz
das
ja
push
inc
dec
out
int
repnz
lock
sbb
xor
mov
imul
scas
vpaddusw
jae
pop
mov
mov
or
pop
addr16
repz
mov
shlb
xchg
imulb
push
loope
xchg
push
in
xor
cwtl
pop
mov
fcoms
test
mov
mov
out
ljmp
repz
testb
sahf
cmp
fcompl
shrl
ret
jbe
xor
out
inc
or
es
mov
jp
testl
adc
jbe
test
ret
and
xchg
aam
scas
cwtl
cmp
inc
jns
test
les
mov
cmp
jge
mov
js
lods
fs
xchg
sub
inc
sbb
add
cmp
inc
or
popf
leave
cli
fisubrs
dec
inc
fdivl
jne
xor
shrb
mov
sarl
jnp
faddp
aam
xor
cmp
js
or
lds
push
call
daa
fadds
imul
cmp
dec
or
ds
and
nop
mov
outsb
sbb
mov
jbe
mov
stos
lahf
fwait
mov
outsb
scas
xchg
dec
pushf
in
pop
xor
xor
and
pop
ret
idivb
dec
pop
add
sbb
mov
pusha
jmp
pop
pop
cmpsb
mov
cmp
jnp
pop
mov
mov
push
lea
mov
andb
ficoml
pop
mov
pushf
jl
pop
jb
inc
das
inc
mov
insb
push
lahf
in
mov
and
cmp
inc
inc
stc
mov
push
inc
mov
push
stos
cmp
idivb
pop
fstl
in
inc
test
dec
adc
xor
in
or
lock
mov
sub
or
shll
sbb
mov
aas
int
pop
mov
cmp
mov
pop
jae
mov
scas
cli
push
lcall
insb
rclb
xlat
daa
ljmp
insl
rorb
dec
mov
sbb
mov
add
insl
fisttps
pop
or
movsb
addr16
mov
insb
test
adc
int3
inc
fsubrs
cmpsb
bound
push
lods
push
add
or
add
lea
adc
dec
xchg
adc
mov
cwtl
enter
test
and
outsl
inc
mov
push
aad
ret
je
movsb
inc
mov
mov
sub
ds
repnz
cmp
mov
dec
mov
or
add
mov
or
add
lcall
jb
dec
pop
data16
aad
test
jbe
ret
arpl
push
pop
sbb
inc
inc
adc
xchg
xor
and
fbstp
cmc
and
cmp
sarb
lahf
push
cmpsl
enter
es
out
stc
push
pop
xlat
cmovne
shll
js
sbb
fnstenv
mov
ret
and
mov
sub
pop
ljmp
rolb
mov
mov
test
bswap
lea
mov
pusha
pushl
ret
stc
cmc
movw
xor
pusha
sub
pushf
bt
stc
stc
not
clc
clc
push
add
bt
call
movsbw
push
movzbw
mov
push
mov
jmp
jnp
rcrb
xor
sbb
cmp
mov
mov
fcmovu
pushf
cmp
pop
lret
div
fiaddl
int
pusha
mov
adc
loopne
out
cltd
xor
jne
dec
mov
outsl
popa
call
enter
dec
stc
scas
xor
lcall
sub
fnstcw
mov
sbb
inc
jmp
cli
sub
add
test
and
jae
into
push
fwait
cmp
lret
stos
idiv
ret
push
js
add
pop
std
sub
fwait
fwait
inc
int
mov
push
bnd
out
cmp
and
push
sub
test
imul
mov
sbb
cs
neg
add
push
pushf
movsbw
mov
lea
ja
push
pusha
setbe
setle
lods
jmp
mov
bswap
lea
pusha
call
cmp
push
pusha
jmp
fidivrs
push
lret
xorb
mov
cmp
lahf
rol
push
loop
inc
ret
shlb
mov
leave
sub
movsb
jne
in
out
jb
jb
sub
enter
loope
movsb
in
dec
inc
jne
enter
push
insb
pop
movsb
add
jmp
sarb
arpl
jno
push
scas
cmc
push
mov
pop
ret
mov
int3
xor
setg
dec
xlat
jg
scas
inc
jecxz
sbb
jb
mov
mov
pop
cmc
mov
movb
jecxz
inc
jg
js
mov
call
mov
cmp
repz
pop
jp
movsl
mov
jge
idiv
and
scas
pop
mov
lds
xchg
pop
lds
es
and
mov
push
jb
mov
lret
dec
lret
daa
sarb
mov
add
test
call
pushf
call
pushf
pushf
mov
pusha
test
add
bt
mov
cmc
test
clc
test
jmp
mov
pushf
movb
pushl
lea
jmp
cmp
neg
bt
jmp
subl
jno
push
popf
sbb
add
inc
dec
pop
je
lods
pop
push
out
lret
sbb
fnsave
loopne
mov
call
xor
in
pushf
enter
dec
push
outsl
sbb
in
push
leave
cmpsb
inc
add
add
adc
or
bnd
mov
mov
sbbl
in
repz
mov
cs
xchg
mov
add
mov
test
push
lea
je
clc
clc
call
lea
jae
bsr
movsbw
jmp
imul
test
push
pushf
add
pusha
pushl
mov
lea
jmp
bt
test
push
jmp
movw
movb
adc
jmp
jmp
mov
call
pushf
not
xchg
lea
jmp
xchg
or
in
stos
mov
mov
ljmp
fwait
lock
pop
and
cmp
cmp
pop
sub
adc
rol
loopne
out
jb
movsb
aaa
mov
mov
push
push
xor
dec
cmc
adc
inc
inc
and
pop
adc
sahf
clc
fwait
and
daa
btc
xchg
shld
push
test
btr
mov
shld
shrd
rcr
mov
inc
pushf
mov
call
pushl
jmp
call
lea
call
cmc
call
lea
jne
shl
shl
neg
cmp
mov
clc
cmp
clc
cmp
call
push
orl
outsl
scas
sub
jmp
mov
jns
and
in
jle
adc
inc
aam
and
fnstenv
mov
rol
sub
push
mov
xlat
xchg
lea
daa
icebp
jge
outsb
inc
push
rorl
mov
cmc
dec
fwait
adc
imul
outsl
adc
jmp
mov
and
mov
insl
mov
enter
aam
out
add
movsl
mov
or
call
mov
mov
jmp
jp
into
jns
sarl
cltd
jae
mov
pop
out
divl
push
jmp
lds
dec
inc
pop
inc
push
mov
popf
decb
les
popa
push
test
jbe
movb
pop
out
imul
bound
and
or
mov
or
jecxz
stos
or
mov
sahf
jmp
ljmp
out
jne
mov
cmp
popf
mov
lea
jb
cltd
setbe
lahf
movzbl
sar
lea
shr
movsbw
btc
movzbw
btr
imul
shrd
bswap
btr
mov
lea
jge
push
neg
sar
jmp
aaa
jp
idivb
push
jge
mov
add
aad
std
xlat
mov
movsb
sub
out
orb
cld
sbb
and
xchg
cli
fimuls
lar
mov
adc
mov
cli
sti
mov
andb
aad
lea
adc
repnz
or
std
dec
pop
mov
xchg
bsf
sub
xor
dec
insl
inc
xchg
movl
xchg
adc
call
and
fcomps
pusha
lea
push
jmp
shl
test
call
rcl
or
jb
mov
shr
inc
xor
add
call
adc
mov
insl
inc
adc
rclb
cmpsb
cmp
orb
ret
jns
pop
push
jne
stc
cmp
mul
dec
add
or
and
or
imull
lret
arpl
pop
xor
xor
mov
jns
outsl
add
pop
insl
out
jmp
lods
push
pushf
dec
pushf
pushl
not
push
pushl
dec
cmp
stc
call
lods
lock
sub
arpl
jg
mov
push
xor
mov
ds
xor
push
push
cmp
xchg
add
movsl
sbb
sbb
inc
fstps
push
mov
add
jno
xchg
mov
sub
mov
dec
jle
call
sub
ret
sbb
fldt
mov
pop
mov
mov
scas
jmp
in
fnstenv
addr16
lret
dec
dec
aad
lcall
xchg
mov
out
imull
mov
rclb
mov
and
jno
pusha
mov
jg
pop
cmp
rolb
out
popa
sbbb
xchg
or
pop
cmp
aas
lret
adc
repz
mov
nop
daa
dec
mov
mov
mov
insl
dec
movsl
out
sub
adc
adc
sbb
and
dec
dec
pop
and
inc
das
and
push
arpl
enter
push
push
pushf
cmpsb
enter
jne
add
xor
sub
xchg
mov
in
notb
loop
mov
jl
cltd
std
loop
lret
cmp
popa
imul
or
sub
mov
mov
xor
ja
or
outsb
les
dec
repnz
add
fistpll
mov
adc
fstps
adc
push
and
and
xor
out
inc
in
movsb
mov
movsl
add
fldl
or
pop
add
lcall
insb
into
inc
das
les
add
stos
popf
aas
add
xchg
xlat
enter
leave
call
arpl
scas
pop
sbb
and
lock
ficoms
je
cli
pop
mov
sbb
sub
out
push
mov
or
fbstp
test
imul
dec
and
call
stos
mov
sarb
mov
xchg
data16
xchg
mov
in
mov
push
push
loop
dec
or
mov
popf
push
sbb
das
iret
fwait
loop
add
adc
fistpll
add
jns
pop
dec
jl
es
leave
jbe
jp
int
jle
lea
pop
mov
imul
ret
out
adc
mov
fcomps
and
outsl
decb
dec
push
mov
sub
test
cmp
insl
mov
lea
mov
xadd
movzbw
not
mov
not
shr
shr
bswap
dec
mov
call
mov
bt
mov
sub
mov
sub
das
bsr
and
neg
pop
mov
stc
call
pusha
push
lea
jne
aad
btr
rcl
test
sub
cwtl
jmp
bt
pushf
cmp
call
fs
adcb
push
mov
aam
sbb
test
fdivrl
fwait
fs
shrl
sbb
loopne
scas
add
imul
push
call
adc
dec
sahf
cld
outsl
sbb
mov
fmull
fcmovne
dec
data16
insb
les
out
xor
dec
pushf
lcall
inc
call
cmpsl
or
cmp
xor
mov
mov
push
loopne
into
test
dec
mov
cwtl
cmp
js
mov
arpl
sti
and
mov
sarb
dec
hlt
lds
jge
mov
jb
ss
dec
adc
pop
xchg
icebp
jae
pop
sbb
sbb
mov
insb
add
fs
mov
out
data16
mov
mov
das
ljmp
ds
leave
jmp
in
add
lea
lods
dec
push
rcrb
jb
dec
xlat
jle
fdivrs
push
pushf
push
mov
pusha
jmp
cmc
test
or
pushf
push
lea
je
clc
pushf
cmp
or
call
add
add
add
add
addb
add
mov
add
add
or
add
add
jle
or
add
add
inc
pop
or
add
add
jmp
or
add
add
mov
add
add
add
add
push
or
add
add
mov
add
add
add
add
add
addb
add
loop
or
add
add
xchg
or
mov
or
lods
add
add
or
dec
or
add
add
add
add
sahf
rol
btc
cmc
pop
call
pushl
popl
pushf
pushl
ret
push
lea
jae
call
ds
xor
lea
in
or
fldl
clc
mov
xlat
leave
outsl
addr16
out
sahf
pusha
fnstcw
out
ljmpw
pop
add
test
inc
lock
add
sbb
sbb
xor
sbb
mov
test
dec
cld
xchg
icebp
push
call
and
shrl
jmp
das
mov
inc
mov
cmpsl
ret
lret
cmp
clc
mov
pushf
pop
jl
mov
fucom
mov
adc
xchg
clc
ret
adc
sbb
mov
arpl
fildl
fists
push
es
inc
les
out
sbb
add
xor
or
pop
aas
dec
sti
stos
bound
arpl
iret
push
fisubrl
push
mov
inc
inc
movsl
xor
cmpsl
lret
sbb
lods
movsl
into
jmp
pushf
pop
mov
or
mov
repz
or
push
push
out
lahf
xchg
push
mov
sub
loope
add
jg
mov
xor
loope
mov
mov
cltd
push
test
shll
out
jae
loope
cmpb
xor
mov
aaa
fadd
jae
push
sub
movsl
mov
push
mov
and
scas
dec
es
xor
pop
loop
test
imul
mov
cli
jmp
je
pop
lret
xor
or
cmp
mov
andb
inc
pop
mov
mov
adc
in
pop
in
jae
sbb
cmpsl
mov
or
jmp
movzbw
lea
call
dec
dec
iret
out
insl
push
and
ljmp
daa
scas
push
bt
iret
cmp
sub
subl
xchg
cmp
cmpsl
pop
jo
xor
or
shrb
xchg
enter
ss
out
rcrl
or
pop
fisubl
dec
mov
mov
push
lea
sub
jg
daa
lahf
and
pop
lahf
mov
cmp
adc
wbinvd
add
dec
mov
jae
addb
neg
sbb
cmpsb
pop
jbe
mov
cmp
sbb
scas
ret
outsb
pop
outsl
xchg
stos
adc
xchg
out
adc
push
test
sbb
mov
popf
imul
jb
in
mov
in
imul
rcrb
xor
sub
rcrl
sub
test
lret
cmp
push
pushf
movb
lea
je
bt
push
cmp
pushf
call
add
jmp
mov
movb
push
lea
je
movzbw
xchg
add
movzbw
sub
mov
bswap
shr
xor
push
mov
sar
add
sar
and
stc
add
add
dec
mov
bt
add
jno
stc
pushf
shr
bt
test
cmp
movb
lea
jg
je
call
movl
jmp
leave
decb
arpl
push
sub
mov
mov
pop
popf
stc
adc
push
into
std
cmc
cmpb
pop
dec
adc
cmp
sbb
and
mov
cltd
imul
xor
jge
xor
rorb
leave
cmc
ljmp
scas
jne
scas
mov
enter
outsb
jno
or
push
mov
das
mov
inc
jmp
clc
jmp
add
call
pusha
ror
imul
btr
lea
shl
mov
sar
cmc
movsbl
not
xchg
movsbw
adc
sbb
call
add
mov
call
add
pop
ret
call
setne
test
clc
pusha
mov
pushf
xor
bt
add
jmp
pushf
movl
jmp
jb
clc
bt
stc
cmpb
pusha
jmp
xor
pushf
call
movsbw
pusha
push
jmp
add
dec
outsl
arpl
inc
jb
add
and
lea
je
test
pusha
pusha
clc
cmp
call
cmp
xor
clc
pushf
sub
cmc
movb
jmp
test
or
jmp
shld
neg
btr
bsf
rol
clc
sub
push
neg
neg
and
rcl
bsr
xor
xchg
mov
pop
xchg
push
mov
push
not
pusha
mov
lods
stc
call
lock
rcrl
test
cli
daa
rcrl
xchg
cmp
inc
roll
xchg
mov
cmp
bound
push
fistpll
stos
ficoms
mov
movb
jne
xchg
ja
add
popf
adc
push
inc
into
push
scas
insl
mov
xor
pop
and
jns
adc
lret
ss
sbb
ret
xchg
mov
std
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
roll
mov
cltd
ja
ss
iret
jnp
stos
negl
aas
mov
std
fidivs
jg
jle
cmpsb
mov
loop
mov
xchg
mov
sti
pop
sarb
xchg
outsb
add
mov
int
add
pop
mov
sarb
and
imul
pop
out
mov
out
mov
enter
roll
sbb
loop
mov
mov
xchg
pop
add
call
jmp
mov
movb
lea
jmp
jmp
jae
jmp
call
not
jmp
scas
int3
pusha
fs
loopne
dec
sub
scas
movsb
sbb
cmp
jo
sub
dec
push
iret
mov
repnz
add
adc
push
fmul
inc
push
cmp
push
and
sbb
inc
mov
adc
pop
dec
test
add
les
mov
inc
mov
jg
mov
sub
mov
push
ds
sbb
mov
mov
add
pushf
mov
movb
pushl
ret
das
mov
or
adc
into
es
adc
stos
sub
mov
mov
xchg
sarb
fmulp
pop
je
adc
jecxz
fdivp
ljmp
jnp
xor
lcall
jp
rcll
ret
aas
test
fldenv
cmpsb
sbb
add
cwtl
push
lock
pop
jge
pushf
fs
bound
sub
push
test
cmp
mov
test
add
jmp
mov
pushl
pusha
push
call
xchg
test
scas
mov
movsb
loope
scas
mov
mov
scas
mov
in
loope
scas
mov
movsl
loope
scas
mov
mov
mov
loope
scas
loope
test
scas
mov
lods
test
stos
loope
test
mov
mov
loope
mov
pushf
lea
jb
call
lea
jne
jmp
lea
jl
mov
pusha
pushf
push
lea
jmp
jmp
and
bsf
lahf
mov
jmp
call
clc
test
cmc
sub
pushf
jmp
pusha
call
inc
mov
sub
loop
inc
xor
test
xor
inc
mov
add
out
sbb
mov
test
sub
into
add
pop
pop
movsb
jae
int3
xchg
xchg
rclb
lods
xchg
shrb
mov
bound
or
jg
bound
les
lahf
mov
lods
addr16
imul
sti
stos
rorl
clc
pop
out
cltd
cmp
push
aad
lret
cmp
jecxz
lea
jne
movzbw
sub
bt
shr
das
mov
shl
call
lea
jae
push
pusha
lea
jmp
pop
rcrl
dec
std
rcrl
int3
cmp
fs
lods
add
hlt
add
mov
pop
push
aaa
cmp
lods
jae
ret
lods
ds
mov
mov
add
and
js
les
xchg
sub
or
cmp
mov
les
aad
notb
fs
mov
or
test
arpl
push
mov
push
shrl
movsb
adc
shrl
xor
out
lahf
xor
out
testb
out
jge
and
ret
test
push
mov
mov
notl
add
fbstp
add
pushf
pushf
lods
pushf
pushl
movw
dec
pushl
pushl
movb
pushl
not
push
dec
push
xor
pushl
push
movb
cmp
lahf
not
movsbw
jmp
sub
pusha
stc
repnz
pushl
pushf
lea
jne
rcl
movsbl
mov
xor
stc
btc
jmp
add
inc
js
je
jb
arpl
jae
mov
pushf
mov
push
fsubrl
add
mov
in
jae
jp
pop
jp
test
aad
dec
xchg
push
or
dec
pushf
sbb
repz
dec
cmp
decb
pop
pop
pop
dec
fsubrl
lds
xchg
or
outsl
enter
fbld
ja
imul
cmp
popf
cld
xchg
push
jne
dec
into
pop
fadds
xchg
lea
mov
pushf
pushf
jmp
push
push
inc
push
dec
cs
dec
dec
add
inc
and
cwtl
mov
jmp
push
xorl
add
js
pop
in
int3
cmp
adc
inc
push
mov
adcl
mov
leave
xchg
push
jns
sbb
sub
or
pop
mov
jmp
das
in
enter
leave
pop
ljmp
subb
pop
lret
inc
mov
push
data16
xchg
mov
mov
ljmp
movsb
and
js
push
xor
push
scas
inc
xchg
in
aas
and
aam
xchg
adc
adc
andl
dec
mov
inc
sbb
and
inc
ja
rclb
fmul
aaa
cmp
mov
mov
data16
in
push
pushf
mov
xchg
adc
scas
dec
repnz
lahf
imul
in
lods
pop
in
pop
mov
cmp
xchg
jbe
mov
mov
jge
jg
xchg
xor
jp
imul
jmp
stc
bt
cmc
add
pusha
cmp
pusha
lea
jb
clc
cmp
pusha
push
mov
lea
jae
rol
mov
xor
xor
rcl
mov
cmp
shl
bswap
mov
mov
pushf
cmp
sub
pushf
repnz
call
call
pushf
adc
pushf
test
sub
cmc
sub
jno
cmc
shl
jmp
add
in
dec
inc
mov
sbb
repz
lret
inc
mov
stos
daa
mov
es
jnp
or
mov
xlat
mov
loop
mov
mov
ror
mov
shrl
lods
mov
pushf
mov
scas
pop
in
inc
das
adc
js
mov
int
jno
in
sbb
mov
add
push
xchg
mov
les
ret
es
dec
xchg
inc
rcll
pop
fistpll
mov
and
or
jb
enter
mov
in
mov
cmpsb
jbe
xor
bound
pop
arpl
lock
aad
jecxz
leave
pop
fs
movsl
adc
jno
aaa
adc
fcmovne
push
sub
outsl
arpl
xchg
pushf
add
fcmovnu
dec
dec
bound
xor
push
xor
push
sahf
mov
divl
cs
mov
or
inc
xchg
push
sahf
xchg
sbb
push
sti
xor
stc
into
lret
loopne
insl
pop
add
insl
jb
jl
fnstenv
int
mov
popl
jnp
mov
jg
or
das
fsts
mov
pop
mov
pop
sbb
inc
jg
add
test
fbld
lods
sub
ffreep
outsb
sti
push
dec
mov
fstpl
in
popf
ljmp
adc
or
xchg
mov
shlb
inc
and
pushl
call
add
out
mov
fldcw
adc
in
pop
in
jne
insl
in
jno
shr
pop
clc
jne
ror
sahf
nop
dec
add
lock
pop
jo
or
mov
repz
dec
popf
test
rolb
aam
outsb
loope
sub
popa
cld
outsb
mov
mov
daa
shll
cmpsb
mov
adc
imul
testl
in
adc
mov
mov
inc
jmp
ds
xor
sub
shrl
xchg
add
not
mov
lea
adc
xor
lahf
jo
stos
or
fwait
cmc
mov
sub
imul
xchg
pusha
les
int3
and
aas
mov
icebp
inc
mov
ret
es
lret
es
add
jne
mov
cmpsl
daa
mov
push
pushf
movb
lea
ja
pusha
push
pusha
movb
lea
jb
push
clc
cmpb
movw
lea
jne
mov
bt
movzbw
mov
clc
cmp
add
clc
movzwl
movzbl
rol
add
mov
push
pusha
add
call
push
push
movl
mov
push
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
decl
popf
out
lcall
ret
addl
repz
jmp
or
lahf
cwtl
sbb
xchg
xor
sbbb
and
icebp
pop
sti
popf
or
mov
mov
cli
inc
add
jns
aaa
movsl
mov
push
test
and
mov
lret
das
push
push
call
mov
mov
inc
scas
call
mov
cmp
mov
je
adc
shrl
pusha
out
jbe
cmp
cmp
mov
adcl
pop
scas
das
lahf
das
mov
cmpsl
jg
push
aas
int
mov
ja
adc
jmp
ret
aad
and
dec
scas
fwait
negb
sbb
test
xor
popa
cld
push
dec
stos
div
add
daa
into
jg
or
fsubrl
xchg
sti
pop
dec
fadds
js
dec
cmpsl
and
popa
pop
loopne
adc
out
push
add
push
jnp
mov
sub
cmp
lcall
sub
cli
push
test
mov
jmp
bound
movsb
jnp
add
nop
lods
in
add
dec
inc
adc
dec
jo
pop
aaa
jl
repnz
add
fwait
out
addr16
jno
pop
mov
loopne
xor
shrl
int3
xor
iret
aam
mov
das
push
test
mov
je
sbb
cmp
in
jae
lret
pop
jecxz
sbb
mov
nop
js
pop
adc
jge
xor
pop
in
jo
mov
mov
bound
daa
decb
xchg
repz
lret
enter
bound
adc
pop
xchg
outsb
sarl
and
cmp
std
subl
mov
dec
in
mov
cmpsl
shll
in
sub
and
sub
daa
test
sbb
xor
idivb
insb
lods
mov
mov
outsb
or
fistpl
outsb
sub
xor
cmc
add
lods
in
stos
push
or
stos
mov
and
mov
pushf
pushf
pushl
ret
test
stc
shl
movb
cmp
push
add
jmp
cmp
mov
cld
and
dec
stc
test
pop
in
mov
stc
ljmp
test
hlt
cmc
pop
lock
mov
scas
sub
or
int
mov
mov
xorl
loop
movsl
repz
jle
mov
fistpll
repz
iret
les
ds
lods
pop
popa
aas
jge
inc
pop
lret
sbb
adc
add
add
sbb
and
je
cmp
bt
add
jmp
cmp
stc
push
test
jmp
lea
pushf
call
call
loop
lds
or
rolb
and
sub
mov
mov
out
insb
xlat
repnz
test
sbb
scas
ss
mov
cmp
push
pop
adc
cltd
inc
mov
dec
popf
adc
sti
fcmove
repnz
mov
sbb
mov
add
ss
and
adc
adc
lahf
pop
andl
add
into
cmp
int3
aaa
out
mov
je
add
add
add
je
outsl
fs
gs
imul
add
test
push
add
xadd
shl
stc
mov
bt
mov
add
cmp
rcr
sub
clc
bsf
setge
mov
btr
mov
xor
sub
bt
mov
bts
or
shld
mov
shrd
pusha
call
test
jmp
push
lea
jb
test
pushf
mov
setg
sbb
stc
push
not
dec
rcl
dec
sub
mov
lea
call
fdivrs
xlat
xlat
xchg
rclb
cmp
mov
sub
mov
jbe
sub
mov
jae
subb
lds
sub
js
jg
in
movsb
faddl
pusha
fildl
cmp
fistpll
jns
pop
adc
test
adc
mov
loope
inc
sub
mov
ljmp
inc
sbb
movsb
daa
outsb
shrl
adc
push
cmp
xor
pop
add
xor
daa
add
fs
push
sub
mov
dec
cmpsl
xor
orl
fdivrs
jg
stos
sbb
mov
call
aad
add
jmp
jle
loopne
pusha
or
xor
xor
xchg
divb
adc
push
mov
loop
add
pop
push
inc
cmp
inc
push
filds
push
sti
jle
mov
mov
inc
not
sub
add
shr
sbb
mov
clc
mov
cmp
cmp
push
push
repnz
lea
jno
jne
pusha
movzbw
mov
movb
not
cwtl
bswap
lahf
mov
cwtl
bswap
movsbw
lea
push
movb
movl
pushf
mov
pusha
pushl
pushl
ret
call
add
movzbw
setb
lea
movzbw
bswap
push
lea
mov
lea
call
call
pushf
clc
movw
cmp
pusha
lea
jb
call
add
pusha
push
mov
pusha
dec
pushf
call
call
mov
jne
cmp
aas
fldcw
sbb
fsubs
add
or
mov
loopne
loopne
jge
enter
or
mov
dec
imul
mov
insb
div
in
mov
pop
jg
inc
xchg
fwait
push
mov
test
cltd
adc
jae
sbb
dec
and
lret
das
lret
and
cli
call
outsl
out
jbe
pop
popf
sub
lret
inc
xor
dec
rcll
jno
ja
cmp
xor
call
inc
loopne
lea
push
pusha
jmp
lea
movzbw
jmp
jmp
dec
fs
icebp
and
ja
dec
in
dec
fldcw
dec
popf
in
add
mov
cmp
xor
inc
mov
bound
cmc
loop
cmp
cmp
and
mulb
and
pop
xchg
aaa
lcall
outsb
idivb
arpl
sub
xor
cld
rclb
sbb
xchg
and
add
pusha
out
or
mov
out
cmp
daa
pop
aas
cmc
pop
pusha
bsf
rcr
daa
mov
shrd
aad
das
mov
cmc
rcr
aam
mov
stc
pop
xor
add
mov
pop
pushf
pusha
push
pushl
pushl
ret
cmp
movw
jmp
pushf
jmp
je
cmp
xchg
ja
test
mov
rcll
lahf
repnz
inc
hlt
arpl
out
fdivrl
adc
cmp
loope
pop
pop
repz
in
outsb
ficoms
pop
xor
jnp
lock
pusha
add
iret
adc
cmpb
in
pop
call
cmpb
inc
xchg
scas
pop
fstl
pop
aad
jg
cmp
jnp
mov
sbb
dec
xor
cs
insb
add
jg
rorl
mov
idivb
pop
mov
pop
jmp
lret
jecxz
jl
pop
int3
and
ret
sarl
pop
mov
ret
ret
cmp
and
out
fsubrl
insl
enter
jae
or
inc
fildl
adc
xchg
ds
out
adc
jg
jne
sub
cmp
bound
mov
call
arpl
test
cli
inc
les
mov
int
frstor
xlat
fstpl
in
sub
xchg
and
lea
inc
push
cld
pop
xor
aas
xor
add
aad
leave
push
shll
sahf
and
add
bound
inc
test
scas
xchg
mov
inc
scas
sbb
push
cmp
mov
sub
mov
push
jg
repnz
jge
js
mov
inc
mov
loop
inc
test
pop
leave
dec
mov
pop
mov
jmp
call
lea
jae
bt
pushf
cmp
movb
add
mov
call
push
xchg
add
inc
ret
ret
jle
sahf
jne
xchg
mov
adc
outsl
idivl
mov
mov
pop
or
xchg
mov
nop
jmp
add
pop
add
repz
adc
cmp
std
pop
xchg
pop
les
push
aad
mov
pop
dec
frstpm(287
inc
mov
push
in
sti
sahf
inc
mov
pop
jp
mov
cmc
not
setb
lods
movw
dec
call
mov
outsb
cmp
sbb
adc
xor
or
pop
dec
cmp
lods
ja
call
in
xor
xorl
movsb
mov
ljmp
sub
push
jl
dec
imul
lahf
repz
repnz
fdivl
and
sbb
insb
push
ss
je
in
add
dec
inc
or
daa
shlb
pop
ljmp
adc
cmp
test
lcall
and
sbb
mov
jg
aaa
mov
inc
cmc
pop
or
leave
inc
mov
in
cltd
out
inc
dec
dec
xchg
call
lds
lods
negl
pusha
inc
mov
shll
push
xchg
fldcw
fidivl
lcall
mov
sbb
mov
push
dec
add
add
cmpsl
iret
or
mov
scas
sarl
lret
movsl
or
inc
ljmp
ljmp
pop
sahf
imul
dec
mov
bsf
dec
mov
pushf
sub
mov
call
push
push
pusha
movb
movl
push
pushf
lea
jmp
pushf
pushf
pushf
pusha
lea
call
pushf
bsf
shl
add
shl
cwtl
mov
lea
mov
clc
call
adc
rorl
and
adc
in
adc
xchg
sub
or
pop
add
jge
out
push
or
mov
cmpb
or
cmp
xchg
inc
and
push
jl
mov
adc
mov
in
jge
filds
xor
jecxz
mov
dec
adc
orl
dec
mov
test
mov
lret
enter
in
les
test
cmpsb
or
push
ljmp
mov
sub
test
push
test
fwait
mov
adc
sti
add
xor
jmp
lock
sbb
or
cmp
mov
add
lds
inc
xor
lret
pop
jno
xor
loop
sbb
mov
xchg
stc
push
pop
lret
pop
ja
adc
pop
sbb
mov
and
popf
cmc
push
push
bound
call
stc
cmp
mov
push
push
pop
pop
inc
outsl
and
pushf
mov
sub
je
jb
inc
out
jp
js
lods
mov
mov
mov
pushl
mov
pushf
lea
jmp
repz
jl
or
sbb
push
fimull
push
sbbl
imul
sahf
scas
nop
je
push
sbb
pushf
loope
push
test
xchg
loope
pop
in
test
jb
popf
fistpll
les
popf
ficoms
adc
push
push
xor
pop
insl
cld
imul
cmp
sub
xor
inc
lea
je
test
bt
add
push
test
cmp
cmp
pusha
movb
jmp
push
movsbw
shr
push
sar
shl
bsr
push
rcr
add
bt
jae
push
call
pushf
jmp
add
movb
pushf
mov
pusha
lea
jmp
clc
pushf
cmp
jmp
push
pop
int3
shlb
jge
dec
sbb
notb
xor
mov
inc
xor
adc
aad
xchg
frstor
loopne
mov
test
jnp
loope
ret
mov
movsb
jg
dec
inc
cmp
xor
in
pop
rclb
in
jmp
jne
and
adc
mov
adc
inc
mov
add
fdiv
mov
int3
and
les
inc
adcb
popa
cltd
jmp
popl
push
inc
out
les
mov
add
clc
sarl
dec
pop
les
and
mov
jae
push
rcrl
jg
xchg
mov
iret
push
cli
mov
jle
fistps
ret
adc
mov
fsts
stc
pop
push
inc
lcall
iret
inc
iret
push
and
stc
lahf
push
ds
outsb
in
xchg
test
shrb
inc
call
rcr
xchg
sbb
mov
jle
xor
sub
inc
ja
fimull
pushf
pushl
pushl
ret
jmp
mov
shrb
lods
xchg
jbe
lcall
push
xor
dec
sub
xor
stos
mov
pop
adc
rol
out
mov
pop
sbb
fistps
mov
add
jle
xchg
enter
mov
push
movsb
pop
jbe
gs
out
jo
ds
in
into
mov
icebp
add
mov
loop
and
sub
movsb
pop
mov
fsubs
hlt
cmp
push
aad
iret
cmp
inc
add
push
inc
sub
mov
mov
mov
and
inc
in
xor
jnp
outsb
cwtl
daa
test
adc
pop
cmp
fdivs
inc
mov
sub
pop
sbb
out
mov
jb
jl
sub
fwait
test
rcr
jns
pop
pop
je
cli
enter
adc
aam
adc
dec
movsb
outsl
in
out
loop
cs
ljmp
mov
jle
push
rcrl
insb
mov
out
mov
add
movl
call
movsbl
pop
lea
pushf
movw
movl
jmp
jne
jo
pop
push
mov
pusha
daa
add
lret
pop
out
pop
das
pop
jecxz
jle
mov
adc
gs
xor
cmp
loop
jae
fcmovu
mov
jnp
sub
outsl
pusha
push
adc
repz
jp
jae
out
adc
in
icebp
pushf
testb
add
inc
push
in
mov
add
jl
aam
pusha
mov
fwait
push
sub
in
mov
xor
sbb
mov
fwait
cmc
and
add
pusha
mov
mov
clc
bt
pushl
test
mov
pushf
call
pusha
lea
je
clc
cmp
cmp
pushf
pushf
pushf
lea
je
pusha
clc
stc
cmp
push
pushf
lea
je
pusha
pusha
pushf
push
lea
jmp
xchg
mov
jo
repnz
rorb
dec
mov
mov
sahf
and
notl
pop
test
push
push
adcb
cmp
fidivl
adc
repz
mov
out
mov
sbb
cli
into
sbb
fisubs
sub
mov
cmp
and
mov
lret
cmp
je
sahf
sbb
mov
push
add
pusha
cmp
call
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
sub
outsl
imull
arpl
aaa
cmp
bound
aad
xorl
and
out
mov
pop
push
cs
imul
in
xchg
cltd
dec
cmp
mov
iret
clc
cmp
setb
pop
not
lea
movsbw
mov
mov
jmp
pop
imul
jne
dec
and
cmpsl
aaa
stos
repz
sbb
xcrypt-cfb
cmpsl
cmpsl
xor
push
lds
jl
insb
cwtl
nop
sbbl
inc
lret
inc
inc
imul
xchg
inc
mov
mov
inc
pop
adc
sub
and
adcl
pop
adc
sub
aaa
rclb
dec
test
outsb
repnz
mov
jmp
int
push
push
sub
push
jbe
push
pop
ret
jnp
test
shll
fs
jne
rcl
rcl
rol
ror
mov
rol
sub
stc
dec
push
bsf
lea
test
bt
cmc
sub
pushf
cmp
pushl
popl
bt
cmp
pusha
lea
ja
inc
call
cwtl
rorl
xchg
push
movlps
fbld
ja
cmpsl
aas
pop
push
and
dec
ljmp
dec
push
xchg
cs
lods
mov
rorb
repz
dec
sub
movl
inc
jo
cwtl
test
xchg
xchg
sub
mov
jl
pusha
shll
popf
jmp
inc
repz
pushf
call
jp
lret
scas
adc
mov
scas
imul
shll
pusha
mov
fidivs
xchg
push
xchg
add
gs
mov
js
imul
cmp
div
xor
testb
jmp
jns
js
push
imul
cltd
pop
rorl
test
sub
and
fwait
rcrb
cmpb
dec
mov
aam
xchg
push
in
push
ret
cmp
xchg
test
or
hlt
sbb
and
lock
fnstenv
sbb
dec
in
push
xchg
sahf
cld
loopne
into
mov
or
lods
jns
out
aad
mov
pop
cwtl
mov
insl
scas
pop
xlat
xchg
mov
aas
ds
lods
push
cli
and
or
inc
adc
mov
ret
push
in
adc
pop
mov
add
out
push
inc
shll
ret
xchg
gs
xor
cmp
adc
jo
into
xlat
mov
mov
add
sub
add
pop
push
xorb
dec
cs
dec
pop
mov
stos
push
push
lret
jle
cmpsb
push
add
pop
out
sbb
popa
dec
mov
sub
int
cmp
push
ds
mov
sbb
in
stos
adc
add
or
aam
and
xchg
or
adc
filds
cmc
lea
mov
mov
dec
stc
shll
aas
sub
push
lret
sub
or
push
push
mov
fnstenv
and
das
adc
aaa
lods
cmc
cmpsl
mov
add
nop
popa
mov
sbb
dec
or
popa
ljmp
cs
dec
stc
andb
lea
arpl
xchg
fcomps
imul
data16
mov
aam
pop
pop
dec
out
and
call
mull
cmp
jb
mov
lret
inc
xchg
ret
orl
scas
mov
mov
nop
mov
outsb
xor
jle
negl
shll
lods
or
jl
jle
divl
out
jbe
jnp
cltd
out
jmp
mov
jno
into
lahf
mov
fs
push
ljmp
int3
push
les
insl
push
mov
aad
icebp
out
sbb
jb
aas
leave
mov
loope
sti
rorb
pop
rorb
pop
sbb
jae
call
xor
stos
jns
xor
push
cmp
shll
push
cli
adc
add
aam
jmp
xchg
test
mov
and
mov
xor
xlat
mov
lods
out
and
or
out
mov
fsubs
jmp
dec
lcall
fsubl
push
pop
movsl
in
add
mov
add
pop
in
in
and
pop
fadd
shlb
dec
push
add
aas
mov
pushf
fwait
or
sbb
cmp
cmp
outsl
int
gs
shrl
cmp
fmuls
push
pop
outsb
jnp
mov
xchg
or
xor
fmulp
mov
fnop
adc
push
shrl
push
push
lret
push
test
data16
not
repnz
incb
sub
mov
xchg
mov
push
cmp
jmp
push
std
iret
mov
adc
jae
cmpl
icebp
adc
xchg
aaa
mov
or
movsb
jne
pop
lods
out
cmpsl
int3
cmp
add
mov
cmp
scas
cmp
insl
push
cmc
stos
push
fwait
add
mov
push
dec
push
mov
test
in
adc
fldcw
insb
lods
pop
add
test
fcom
jno
mov
mov
sbb
jg
mov
jo
push
movsb
dec
adcb
mov
pop
stc
into
cmp
mov
mov
lahf
mov
in
adc
sahf
sahf
loop
cli
sbb
mov
push
mov
push
adc
cmp
xorb
sbb
in
mov
inc
daa
je
cmp
movsb
push
negb
cli
sbb
mov
jnp
leave
lods
ret
inc
dec
jle
fnstenv
mov
dec
jb
mov
aad
call
mov
rorb
and
jb
arpl
scas
jbe
cmpsb
mov
mov
xor
cmp
adc
or
pop
push
mov
pop
fdiv
pusha
call
dec
jnp
cmc
xchg
imul
mov
fcoml
jp
arpl
mov
mov
jle
fdivl
cmp
pop
xor
leave
push
psrld
adc
mov
jg
scas
fcompl
pop
mov
pop
nop
jmp
mov
movsb
inc
jo
sar
jnp
pop
add
leave
mov
mov
cli
sti
sub
pop
sub
adc
bound
sarl
sub
sbb
shlb
fcomps
adc
xchg
push
mov
sarb
push
fstpt
test
shl
and
push
cmp
fwait
mov
mov
pop
jl
test
mov
repz
fldl
test
arpl
mov
push
js
out
aam
or
das
mov
fstps
sbb
loop
js
and
add
fwait
in
lcall
out
stc
mov
xchg
xor
movsb
add
call
mov
add
out
pusha
faddl
xor
or
and
mulb
or
je
jle
or
outsl
mov
aad
dec
mov
jbe
or
mov
sbbb
push
mov
leave
scas
sahf
or
jle
and
ss
mov
int
adc
cmc
pop
mov
dec
push
or
mov
mov
in
sti
sbb
push
xor
mov
shl
jo
sub
aam
mov
gs
ja
sbbl
mov
and
insl
push
sti
aas
and
test
ss
stos
push
mov
loopne
jmp
int
add
aam
xlat
and
jl
xchg
loop
push
jge
repnz
and
xchg
jb
sbb
leave
repnz
int
lahf
outsl
rcrl
rcll
loopne
xchg
jns
xor
movsl
mov
mov
lods
xor
fnsave
icebp
jne
call
movsb
and
and
pop
adc
addr16
mov
test
or
pop
xchg
adc
aaa
xchg
push
inc
jne
sbb
jo
and
push
xchg
std
or
inc
pop
mov
or
xchg
jbe
int3
cmc
mov
mov
aam
ficoml
push
jo
dec
lret
cmc
je
sbb
mov
push
movsl
dec
enter
jae,pn
jns,pt
adc
faddp
lds
cmpsl
cltd
jmp
cmp
and
jl
inc
enter
sahf
movsb
leave
dec
nop
pusha
push
out
test
mov
cmc
inc
inc
movsb
dec
xor
test
add
cmc
sbb
pop
or
mov
jne
and
scas
xchg
pop
or
pop
out
cmp
imul
pop
popf
or
push
adcb
and
loop
dec
sbb
mov
loopne
loopne
xor
push
pop
rclb
add
sub
push
push
jle
push
nop
lret
ds
xchg
stos
xchg
mov
mov
jb
mov
push
sbb
sbb
orb
cs
jnp
mov
jecxz
js
xor
jnp
mov
stos
int3
jle
ljmp
or
fs
pop
in
pop
call
mov
mov
and
cmc
mov
repnz
xchg
jbe
sub
addl
xor
outsl
cmp
pusha
and
jno
xlat
fisubs
cltd
ret
popa
adc
cmc
aad
mov
arpl
pop
add
bound
test
xchg
cmpb
data16
cs
fs
xchg
movsl
inc
dec
jmp
sub
mov
cwtl
jecxz
stos
mov
push
xor
mov
std
dec
outsb
lock
fs
sahf
lcall
rorb
out
sbb
xchg
mov
pop
les
jo
sbb
or
xchg
xorb
jae
rcrl
lock
hlt
jns
outsl
fstl
jge
pusha
pop
ja
add
test
mov
mov
hlt
das
xor
cmp
das
adc
mov
inc
adc
cwtl
subl
pusha
std
dec
or
iret
push
dec
cs
fsubrs
inc
movlps
aam
jmp
sbb
arpl
es
int
xchg
cmpsb
je
add
clc
fisubrl
inc
leave
add
movsb
jb
cmp
out
popa
test
fwait
adc
je
aam
clc
arpl
das
stc
imull
cwtl
sti
jb
and
pop
mov
add
mov
hlt
mov
cmp
sub
rorb
push
imul
test
and
dec
mov
push
adc
in
and
sub
and
outsb
cmp
lock
adc
and
fbld
sbb
in
lret
call
leave
push
rolb
sub
test
imul
test
mov
loopne
mov
and
xchg
fmull
stc
xor
jmp
roll
or
xchg
lea
push
orb
sub
adc
push
addl
iret
ret
jmp
xlat
xor
jo
arpl
pusha
mov
push
jmp
insl
or
test
nop
mov
lret
mov
lds
cs
lret
push
cmp
leave
xchg
or
into
mov
aas
aaa
lret
add
lock
cwtl
push
aam
dec
mov
adc
and
sbb
xchg
insl
pop
insl
iret
ret
jle
lea
and
inc
insl
popf
jecxz
sbb
test
mov
insl
mov
xchg
scas
or
jecxz
dec
js
mov
lcall
les
push
xor
cmp
xchg
outsb
out
cmp
xchg
pop
insl
mov
adc
sub
sbb
ret
movsb
sub
adc
fistpll
testb
andl
movsl
xchg
movsb
lcallw
xor
jae
aaa
jae
sub
sbb
pushf
or
arpl
mov
push
push
out
adc
cmp
add
sbb
scas
cmp
jmp
std
add
xchg
jb
pop
outsl
sub
sub
mov
mov
insb
ss
scas
stc
xchg
enter
sarl
pop
adc
xchg
decb
or
xor
add
mov
mov
xchg
dec
pusha
or
mov
inc
dec
xorl
movsl
lret
xchg
adc
enter
testl
adc
adc
filds
or
xor
sahf
sbb
add
push
imul
push
mov
in
loop
ja
xchg
rolb
mov
sub
pusha
not
in
jne
push
pop
inc
stc
hlt
arpl
lahf
dec
mov
pop
and
cmp
jns
hlt
xchg
jmp
test
cmpsb
fcomps
ss
fs
cmp
and
fldl
insb
psllw
jb
popf
incb
insl
bswap
iret
sahf
aam
xor
in
xor
mov
scas
mov
mov
notb
adcb
push
dec
xchg
rcl
jns
sti
popa
xchg
dec
or
pop
lret
cmp
sbb
dec
test
js
mov
pop
insb
inc
lds
call
mov
sub
mov
stos
ret
mov
ret
clc
aam
mov
mov
dec
pop
jmp
int
cld
incl
ss
add
mov
and
pop
mov
xor
pusha
xchg
pop
xchg
das
ja
das
push
ss
and
inc
fwait
mov
test
or
or
cmp
jo
or
push
loopne
mov
add
mov
jo
jecxz
or
dec
push
pop
leave
adc
mov
out
mov
inc
dec
das
aam
dec
or
mov
pop
repz
pop
cmp
sahf
in
adc
sti
adc
jne
push
inc
cmp
sub
jmp
stc
xor
test
mov
pop
and
push
jg
aad
jle
iret
test
jae
loop
mov
xchg
jl
loop
test
sbb
outsl
xchg
in
or
xchg
add
sbb
sub
into
aam
adc
cmp
inc
cmp
sbb
in
arpl
dec
xchg
push
movsl
fsubrl
cmp
rcll
les
stos
cmp
sbb
insl
pop
in
sbb
stos
stc
enter
int
pop
push
push
xchg
mov
leave
lds
jecxz
push
push
push
lods
lahf
push
in
aam
inc
mov
cmp
sbb
adc
and
enter
lea
push
inc
mov
or
sbb
pop
in
cmp
fsubs
daa
fistps
out
ret
sti
lods
jle
insl
stc
leave
and
push
jno
daa
xchg
pop
shlb
adc
out
dec
sbb
shl
iret
call
and
pop
bound
dec
xchg
test
xchg
clc
loopne
cmp
je
adc
mov
xchg
sbb
pop
cmp
pop
sahf
scas
shlb
xchg
dec
pop
adc
mov
jmp
popa
pushf
aam
sub
mov
dec
adc
sbb
mov
addl
jne
push
cld
xor
test
lcall
out
mov
stos
and
ret
cwtl
leave
mov
sahf
dec
xchg
in
mov
add
mov
dec
xchg
pop
pusha
inc
jmp
xchg
xchg
pop
cli
popa
xor
pop
xor
test
jecxz
dec
dec
cmpsb
shl
pushf
push
mov
shll
dec
mov
xor
popf
outsb
outsb
outsl
stc
jae
add
test
mov
mov
xchg
pop
xor
imul
and
jl
pop
sbb
aad
and
cli
mov
mov
mov
jmp
jg
gs
dec
negl
xorl
xor
insl
out
movsb
jnp
push
stc
gs
stos
fldt
enter
xor
leave
sbb
rcr
xor
lcall
lret
cwtl
movsl
cmp
and
stc
test
sti
shl
sbb
sub
xchg
into
js,pn
mov
mov
inc
xor
loop
popa
lock
mov
mov
jo
jb
jae
sbb
xlat
jecxz
and
mov
pop
push
js
pop
insb
add
test
dec
sub
hlt
stc
fildll
mov
shlb
imul
test
pop
xchg
mov
insb
nop
psubusb
aad
inc
adc
mov
call
lods
fistpl
pop
mov
pop
stos
mov
jns
imul
enter
and
xor
cmp
mov
push
clc
mov
add
hlt
aad
push
lds
xchg
pop
movsl
stc
and
pusha
sub
pushf
aaa
sbb
mov
outsl
cmpsb
aam
sarl
pop
roll
cwtl
outsb
cli
dec
sub
mov
cmp
enter
push
push
lret
push
rcrl
mov
or
outsb
pop
cld
js
aad
into
push
imul
repz
sbb
jae
popa
cmp
inc
pusha
dec
cmp
shll
jg
ss
ds
add
data16
inc
pop
or
xchg
scas
dec
into
test
xor
push
je
inc
fidivrs
cmpsb
inc
xchg
adc
xor
cltd
fldcw
sbb
sbb
mov
mov
mov
int
aaa
int3
je
scas
stos
mov
cmp
sbb
push
nop
lret
adc
jbe
mov
ds
clc
push
push
push
and
xor
rorb
sub
mov
notl
bound
jnp
add
ds
leave
das
in
scas
sbb
stos
lret
xchg
and
in
pop
jae
fimull
xchg
inc
shlb
cld
ds
sbbb
dec
fucomip
int3
push
and
icebp
ds
ss
nop
xor
mov
push
add
js
push
nop
cmp
in
outsb
sahf
cmp
clc
fdivrl
out
jno
cltd
test
cmc
dec
lret
loop
pop
xor
mov
push
test
pop
lods
dec
push
leave
xchg
pusha
or
mov
data16
pop
xchg
jnp
out
lret
adc
xor
push
add
lds
adc
push
mov
sbb
das
les
inc
aas
leave
addr16
cmp
or
xchg
shlb
jbe
adcb
insb
loopne
out
pause
nop
pop
jp,pn
cmp
sub
in
dec
push
adc
insb
sbb
and
je
iret
incl
cmp
lret
mov
jl
mov
jg
mov
dec
inc
movsb
push
sbb
lods
insb
xchg
nop
push
jns
ds
jbe
out
lea
ss
and
in
ljmp
cmpl
icebp
dec
pop
sbb
andl
xchg
mov
pop
in
inc
sub
inc
xor
push
mov
rclb
jne
cmpb
pop
sub
jle
jbe
mov
insl
divb
mov
push
shr
std
lods
mov
mov
cmp
cmc
mov
mov
jae,pn
mov
sub
cmc
imul
lds
fnstenv
adc
daa
lahf
std
inc
stos
out
out
pop
flds
fists
xchg
aad
pushf
andb
jns
adc
mov
es
adc
loope
pop
pop
lds
mov
out
add
enter
ret
pop
pop
pop
inc
pusha
nop
pop
jmp
out
es
adc
or
pushf
fdivs
outsl
add
lods
lcall
or
fcmovu
in
aas
pop
scas
lock
fwait
iret
insl
fistpl
imul
ljmp
in
fnstsw
adc
pop
mov
push
lret
imul
aad
movl
test
nopl
adc
dec
inc
rcl
out
mov
jae
adc
movsl
loope
sbb
cwtl
cltd
inc
mov
cltd
sub
in
shlb
testl
xor
xchg
hlt
mov
cli
pop
addr16
imul
lods
dec
xor
mov
jno
jnp
jae
adc
sub
fcmovb
push
xor
add
gs
arpl
andl
jle
jg
and
sbb
loop
xlat
jae
push
bound
pop
rorb
dec
out
int3
das
jne
jle
fdivrl
pop
inc
add
xchg
cltd
xor
mov
jb
jl
repz
mov
out
mov
fisttpll
sub
adc
cmp
sti
or
outsl
popl
imul
mov
in
shrb
xor
imul
pop
dec
mov
fbld
pop
jg
in
add
xchg
cmp
mov
mov
jb
fisttps
mov
inc
fisubs
pop
inc
in
out
js
insb
cmp
lock
xchg
mov
sti
cmpsb
xchg
shr
mov
lock
ljmp
js
andb
push
and
and
je
pusha
insb
inc
mov
insb
and
and
cld
lods
stos
push
add
push
icebp
sahf
inc
jae
fnstcw
inc
pop
leave
dec
add
push
mov
dec
inc
popf
add
inc
cmpl
cwtl
xchg
fcmovnbe
jl
adc
repz
aas
pop
pop
outsl
mov
das
ljmp
iret
and
nop
xchg
lock
add
dec
mov
lret
in
test
mov
sub
test
push
insb
out
jnp
jl
arpl
enter
xchg
adc
pop
mov
insb
cmp
clc
jae
add
push
test
scas
jno
mov
aam
pop
das
jp
insl
mov
xor
out
je
pushf
out
and
inc
adc
add
dec
addr16
je
pop
popa
add
mov
scas
add
sar
movsl
js
xchg
repnz
sbb
aad
xor
stos
mov
cmp
out
pusha
mov
dec
enter
in
cmp
popf
test
xchg
cmp
adc
or
cmp
es
movb
pop
sbb
inc
push
mov
jmp
cwtl
xchg
mov
lahf
dec
push
cs
fidivrl
in
or
dec
ret
mov
dec
shll
or
inc
push
data16
mov
cmovle
push
cmp
push
sbb
bound
rorl
jp
jmp
mov
xor
push
pop
dec
sub
inc
jp
jae
call
jge
jno
sbb
jle
pop
cld
mov
mov
repnz
and
add
daa
subb
jne
sahf
sbb
sbbl
mov
or
sbb
ficoml
jnp
mov
adc
cli
and
and
adc
jnp
fwait
inc
sub
test
cmp
sub
add
jecxz
mov
sbb
sbb
adc
flds
add
test
int
bound
test
mov
mov
jno
mov
inc
inc
lea
sbb
bound
fwait
imul
call
jae
inc
pop
xor
arpl
cmp
sbb
fcmove
hlt
add
pop
adc
mov
add
and
loopne
orb
popf
mov
xchg
ja,pn
popa
popa
fsubrl
xchg
mov
fxch
xchg
dec
arpl
aas
fldt
cwtl
jmp
out
repnz
dec
sbb
xor
rcrb
pop
mov
sbb
pop
fiaddl
scas
out
xor
mov
cld
movl
pop
dec
out
dec
aam
loopne
pop
les
add
aaa
dec
add
inc
repnz
add
stos
mov
imul
movsl
call
bound
insl
and
mulb
push
xchg
jecxz
cmp
std
mov
jno
shll
dec
mov
shlb
mov
push
cmp
mov
mov
ror
push
inc
aad
mov
arpl
adc
pusha
push
ljmp
lahf
dec
mov
pushf
pop
in
ud1
mov
daa
and
add
inc
or
out
pop
mov
push
sbb
jg
loope
fidivl
mov
sub
inc
stos
insl
pop
and
push
adc
jne
in
fnstsw
rorl
push
or
xlat
mov
subl
mov
repz
mov
sub
xor
add
mov
ljmp
push
adc
and
fistpl
sbb
fcompl
je
mov
and
mov
shl
mov
negl
aaa
xor
iret
push
and
js
mov
mov
push
sub
call
mov
insb
sbb
iret
or
in
aaa
popa
cld
and
pop
push
sub
clc
pop
fsub
decb
sub
fcom
mov
lret
scas
scas
mov
mov
aam
std
push
ret
add
jae
roll
bound
mov
jp
push
fld
push
cmpl
lods
jne
inc
in
cmpsb
xorl
mov
pop
sbb
push
leave
or
cld
cwtl
test
inc
loopne
add
add
jge
movsb
jle
out
aam
mov
add
jle
pop
lds
dec
adc
test
jp
loop
nop
test
aad
mov
in
push
xlat
adc
mov
jmp
fimull
je
pop
orb
mov
mov
mov
xchg
pusha
jecxz
pop
adc
cwtl
sub
cmpsb
jne
mov
lret
sahf
test
jp
fwait
push
repz
fimuls
addb
jle
mov
faddp
jl
repnz
cmp
mov
jecxz
xor
jnp
push
push
mov
xchg
mov
test
imul
cmpsb
dec
inc
mov
imul
push
adc
aas
jne
aad
insl
push
adc
pop
xor
mov
sbb
sbb
int
add
enter
clc
lret
add
loop
fsub
adc
jae
sahf
ja
and
add
add
stos
inc
cwtl
je
push
pop
addr16
or
xchg
daa
dec
ds
push
out
push
loope
mov
jno
xor
mov
ljmp
mov
push
and
sbb
mov
jl
push
inc
xchg
orb
pop
push
lock
testl
push
inc
and
mov
xor
lods
sub
lock
ja
int3
adc
lock
es
push
pop
xor
mov
adc
in
aam
loop
movsb
mov
repz
cmpsl
pop
cmpb
dec
insl
das
push
or
lds
push
xor
call
add
cs
repnz
mov
sbb
xchg
xchg
jae
fildll
adc
mov
adc
cmp
fisubs
sub
mov
std
gs
xchg
cmc
rcll
xor
popf
jb
sbb
ss
push
xor
ret
inc
shr
or
addr16
mov
fcomp
int
in
sbb
lahf
pushf
aas
pop
cmp
loope
cli
into
cmp
cmp
lcall
sub
shll
xor
xchg
ds
std
loop
dec
movsb
cli
sub
inc
lret
xchg
sbb
adc
jg
or
pop
xchg
ret
mov
mov
jo
sub
sbb
inc
adc
push
call
mov
push
sub
pop
stc
pop
out
push
loopne
push
mov
roll
xchg
mov
or
int
adc
lock
inc
or
cmp
pushf
pop
mov
cmp
stos
cmpsl
mov
mov
sub
jbe
ljmp
or
sub
fwait
mov
add
jp
data16
pop
push
add
roll
push
jl
aas
rolb
test
dec
inc
mov
and
xor
jo
hlt
mov
cmp
push
in
and
push
dec
repz
push
popf
addr16
sub
popf
fucomip
fstl
sahf
mov
into
insl
jb
fstl
push
xchg
out
xor
cmp
xchg
mov
ret
jecxz
sarl
xor
mov
iret
add
add
pushf
enter
jne
inc
mov
and
cli
test
scas
repz
lock
sub
inc
add
add
insl
popa
cmp
andl
loopne
jl
mov
xchg
dec
fnsave
xchg
arpl
jle
push
push
ds
mov
push
jnp
pop
scas
out
test
movsb
je
mov
mov
mov
push
out
inc
jge
mov
jbe
mov
stos
out
les
hlt
stos
test
inc
aad
int
in
inc
arpl
xor
xchg
dec
sub
ret
out
xchg
xorl
imull
and
jp
push
rcrl
mov
sub
dec
ret
jns
mov
shll
insl
jno
mov
pop
into
mov
dec
inc
lcall
mov
push
adc
shlb
stos
push
jle
fcomps
jnp
cs
lret
mov
in
pop
cmova
aaa
faddl
insl
stos
aaa
loop
sub
sti
shlb
fld
rclb
dec
mov
xchg
addr16
in
adc
sbb
jne
and
outsb
inc
test
mov
notl
popf
push
filds
dec
mov
inc
stos
xchg
out
mov
add
sub
sbb
mov
sbbb
subl
or
push
xor
dec
clc
out
jp
adcl
xor
jecxz
adc
leave
inc
repz
hlt
data16
push
in
push
mov
pop
sahf
repz
addb
addl
incb
repz
and
cltd
adc
in
jg
inc
pop
mov
mov
lret
mov
aaa
cltd
sbb
fsub
inc
inc
popf
jbe
test
mov
xchg
mov
test
pop
mov
add
cmpl
jns
push
add
std
jne
dec
test
xchg
jge
mov
push
ret
in
mov
cmp
out
aam
lea
or
mov
jl
dec
fs
adc
mov
xor
mov
loop
cli
in
lcall
inc
inc
adc
cld
xchg
pop
test
xchg
sbb
mov
sahf
adc
cmpsl
lret
mov
out
lret
push
or
int3
lock
scas
pop
sbb
cli
cmc
gs
push
mov
imul
lahf
pop
in
popf
vcvttps2dq
data16
or
jne
push
add
cmpsb
sbb
loope
adc
pop
repnz
jb,pt
jle
and
xchg
sbb
gs
lods
outsl
rolb
lcall
fwait
xchg
jne
xor
arpl
xor
mov
cwtl
adc
inc
pop
xlat
jns
lcall
jo
sti
mov
xchg
lcall
in
mov
cmpsb
arpl
loop
mov
fwait
mov
aaa
cmpsb
int
ds
shl
out
lods
les
pop
imul
lcall
jle
fsubrl
push
push
ret
and
pop
or
into
ja
xchg
insb
dec
lret
mov
push
xor
mov
xor
cwtl
cmp
push
hlt
jns
xor
jmp
mov
push
xor
fs
sti
sbb
int
out
movsl
les
adc
sti
dec
cld
inc
cmp
sub
clc
fcoms
jns
mov
or
loope
cmpsl
rcrb
rcll
stos
cld
mov
test
pop
pop
pop
mov
or
pop
outsb
stc
push
scas
adc
jp
mov
sub
cmp
mov
mov
mov
jp
or
insb
js
lods
jecxz
inc
dec
inc
push
cld
cli
lods
leave
sbb
mov
dec
mov
popa
jmp
mov
out
xor
cmpl
loop
push
xor
sbb
add
imul
mov
outsl
push
and
pop
xchg
aam
daa
out
fdivrl
nop
xor
out
xor
jmp
mov
add
test
sbb
adc
shl
sbb
rclb
inc
mov
dec
subb
cmp
jle
sbb
and
test
or
cmp
jb
cmp
add
push
sahf
mov
rorb
adc
pop
pop
push
or
mov
nop
xchg
lock
leave
mov
pop
jne
sub
sbb
inc
xchg
sbb
ljmp
adc
dec
enter
cs
add
sbb
mov
stos
stos
mov
adc
mov
add
imul
lret
scas
inc
bound
incl
jbe
mov
stos
xor
xchg
jp
mov
mov
or
out
jge
push
lahf
and
mov
mov
shll
shll
inc
loopne
dec
push
arpl
pop
xlat
je
mov
ss
imul
xor
add
int
mov
sarb
fs
cld
add
fldl
popf
imul
cmp
jne
rorb
pop
push
jp
xchg
jge
lret
mov
mov
int3
inc
fcoml
dec
inc
mov
lods
lahf
mov
jp
jl
mov
in
orb
outsb
inc
dec
mov
lea
ja
adc
sub
pushf
shrd
lea
add
shrd
shl
clc
not
mov
shl
push
rcr
mov
stc
push
pusha
repnz
push
movb
mov
jmp
xor
jmp
cmp
jmp
rdtsc
pop
sets
rcr
pop
neg
sub
not
pop
sub
pop
inc
or
ror
pop
sub
aas
aaa
pop
shld
inc
add
lea
push
mov
pushf
push
pushl
ret
test
fildll
les
push
loopne
pushf
clc
jo
adc
inc
xorl
ret
push
xlat
inc
sub
int
out
mov
mov
sahf
fcmovbe
jle
out
loopne
in
rorb
lods
and
nop
les
cmpsl
cld
popa
int3
iret
add
mov
jne
mov
or
arpl
orl
mov
out
pop
outsb
shr
leave
leave
push
jmp
int
jge
rcrl
es
hlt
int3
lods
mov
repnz
mov
scas
lret
xchg
inc
mov
mov
incb
fnsave
scas
lods
cmp
pop
sbb
scas
popf
mov
nop
hlt
pusha
jne
jne
das
mov
lret
adc
and
push
popa
in
sub
repz
cmp
push
sub
and
in
add
shrb
lds
or
and
push
jo
adc
and
leave
mov
out
inc
fistpl
pop
push
idivb
scas
cmp
xchg
inc
xor
xchg
cld
push
in
imul
mov
xor
flds
mov
mov
mov
fnstcw
or
sub
or
mov
xchg
pop
inc
hlt
dec
out
jge
movsb
xor
stc
popf
cmp
test
pop
rclb
mov
jmp
aam
jnp
and
mov
and
sbb
cmp
push
cmp
jbe
loope
out
ret
das
mov
or
push
jo
or
pop
cmpsl
mov
repnz
pop
ljmp
movsb
hlt
insb
call
dec
test
mov
xchg
cmpsb
arpl
movsl
inc
push
push
add
aam
xor
jp
cmp
push
lret
fidivl
andb
jns
and
xor
das
push
loope
sbb
addr16
outsl
repz
mov
int
and
adc
testb
fcoms
cmp
jne
add
push
jo
push
fwait
call
lea
jb
bsr
ror
xor
cmp
bswap
jle
pusha
sbb
setae
lea
lea
jle
not
lea
lea
seta
mov
jns
not
call
lea
jne
rcl
mov
bts
movsbw
test
btc
sub
shld
mov
jmp
pushf
movb
lea
jne
movzbw
movb
sets
not
setp
push
pusha
pushl
bswap
not
lea
pusha
push
push
pushf
movl
pushf
jmp
mov
sub
sub
mov
test
pushf
cmp
clc
cmp
pushf
lea
jbe
cmc
mov
inc
btc
dec
bsf
add
shl
mov
call
arpl
lock
sbb
popa
out
loop
push
fistl
outsl
jmp
mov
pop
jnp
sub
data16
rcll
enter
sub
rcrb
mov
cld
lock
push
jno
xor
aam
add
call
push
aam
inc
mov
je
jmp
mov
xchg
pusha
mov
sbb
pop
in
mov
shlw
and
xor
xchg
rorb
ret
jmp
push
lea
pushl
lea
jmp
lea
jne
pusha
bswap
mov
test
pushl
cmp
test
add
push
push
cmc
movzwl
stc
not
mov
mov
test
jmp
scas
push
bound
fistpl
adc
pop
loope
aad
xor
test
ficompl
mov
sti
call
jmp
inc
dec
adc
fst
ss
dec
sbb
xor
pop
int
ret
mov
daa
xchg
mov
fidivl
pop
out
dec
xchg
lret
cmp
mov
movsb
addr16
and
fcoml
imul
mov
push
insb
xlat
adcl
rorb
repnz
adc
lret
dec
pop
ljmp
icebp
adc
and
and
push
cltd
orl
imul
jge
stc
ds
xor
jg
cmp
cmc
outsl
dec
sub
bound
mov
xchg
inc
sbb
outsb
lret
bound
xor
mov
scas
daa
sub
add
push
mov
imul
push
call
xchg
mov
push
mov
cmpsb
jge
mov
lcall
ljmp
test
sbb
call
cmp
leave
pop
cmpsl
sar
into
loopne
data16
sub
xor
sub
jecxz
imul
ja
hlt
cmp
mov
dec
stc
popf
pop
aaa
inc
or
addr16
btc
pop
das
mov
outsb
mov
int
cmp
mov
orb
test
cld
ja
cltd
lock
mov
shll
mov
decb
stc
pushf
cmc
test
jmp
mov
pop
ss
arpl
rcr
scas
ds
mov
jbe
push
into
jb
mov
xor
fwait
les
in
dec
popa
loopne
adc
inc
cmp
outsb
repnz
add
mov
mov
cmp
in
leave
xor
mov
or
xchg
in
out
add
xor
jbe
xor
ljmp
jge
mov
inc
cmp
xchg
push
test
sar
ret
aas
das
xchg
dec
jecxz
add
shrb
mov
mov
mov
cmp
shlb
scas
sub
xor
or
fcomi
sbb
mov
cmc
scas
jmp
sub
push
inc
lds
dec
adc
ds
loop
dec
dec
cli
addr16
sbb
ljmp
add
out
inc
mov
mov
out
ss
jne
call
push
decb
not
cmp
dec
mov
mov
arpl
stos
test
into
cmp
jnp
js
roll
rorl
fdivl
add
sub
add
jns
nop
fbld
cs
mov
adc
fimull
pop
add
jne
hlt
push
push
sahf
jno,pn
in
rolb
out
gs
xchg
or
mov
in
jnp
loope
rol
aam
pop
into
push
pushf
pop
clc
test
movsb
cmp
mov
xchg
push
insl
rorl
mov
mov
mov
jp
xchg
mov
jbe
sbb
lcall
or
add
mov
dec
enter
add
movl
call
lea
jne
jmp
inc
add
not
inc
mov
stc
call
test
jmp
mov
cmc
test
or
sets
mov
test
cmc
repnz
pusha
call
std
sbb
ja
mov
addr16
outsl
and
inc
lret
mov
mov
in
in
adc
in
pop
rol
inc
repz
lds
adc
mov
mov
xor
mov
mov
ss
pop
adc
jbe
leave
add
add
and
ret
icebp
sub
clc
negb
mov
jmp
dec
sbb
les
inc
imul
mov
fldcw
inc
pop
ljmp
mov
jno
push
ja
adc
mov
outsl
xlat
jae
pop
jmp
out
inc
aas
sub
outsb
repz
fcomp
add
mov
in
pop
bound
xchg
int3
call
out
jl
cld
insb
test
rorl
into
mov
pop
xchg
loope
mov
lea
xlat
adc
adc
out
push
mov
add
mov
mov
cmp
ljmp
jnp
addb
lahf
adc
mov
insb
fcmovb
test
lock
inc
pusha
sub
outsl
mov
jo
add
mov
mov
mov
imul
and
mov
jmp
mov
push
lea
jmp
call
call
pusha
call
call
btc
btc
bsr
not
sub
xchg
pop
call
in
push
mov
push
jmp
test
mov
iret
mov
mov
cli
jb
ja
xchg
sarl
xchg
lock
mov
jbe
mov
or
pop
or
insb
bound
pop
xor
lret
repnz
sub
flds
lods
xchg
fdivs
bound
insb
mov
pop
cmpl
adcl
loope
fsubr
clc
out
and
comiss
leave
sahf
popa
push
movsl
sub
add
or
popa
inc
mov
or
rcr
pop
repz
addb
enter
aam
test
mov
fmul
sub
pop
pop
or
pandn
and
pusha
xor
mov
lcall
sbb
popf
inc
out
test
jno
shlb
iret
sbb
cltd
inc
call
mov
inc
scas
cs
insl
and
add
jns
inc
lahf
movsl
cmovge
sub
in
lret
jle
test
jb
insb
fxrstor
mov
or
test
pushf
cmpb
movb
jmp
xchg
add
inc
mov
dec
cmpsb
sbb
stos
lret
je
sub
out
add
in
mov
mov
mov
push
rorl
fs
jecxz
mov
cmc
mov
add
test
js
mov
jmp
cmp
lock
idivb
and
jae
roll
sti
jp
mov
pop
test
shlb
push
jns
frstor
insb
xor
cs
insb
add
push
sbb
add
add
pushf
cmc
mov
bts
shr
mov
pusha
pushf
stc
cmp
pushf
lea
jbe
adc
rol
mov
push
add
add
not
bts
mov
setg
shl
call
imul
xor
pop
cmp
pop
mov
cmpsl
sub
popa
or
inc
std
sbb
clc
out
cmpsl
inc
das
mov
cmp
fisubrl
mov
xlat
aam
outsb
fs
mov
scas
pop
sbb
icebp
in
imul
mov
jle
push
xor
cmpsb
adc
or
mov
shlb
call
xchg
adc
mov
repz
jo
pop
scas
xchg
push
jge
xchg
and
mov
inc
fisubs
stos
inc
lods
or
xor
jnp
xor
not
mov
call
mov
pushf
pushf
pushf
pusha
stos
lea
jnp
pushf
pushl
mov
movb
lea
jmp
pushf
lea
jne
pusha
or
mov
shld
movzbw
sub
lea
movsbw
bts
lea
bt
cmp
sub
cmp
push
pushl
popl
call
add
inc
push
inc
outsl
outsb
je
add
enter
add
lea
je
test
push
pushl
cmp
call
cmp
mov
sub
pop
pushf
lea
pusha
jmp
not
mov
pushf
stos
pushf
pushf
lea
jmp
insl
loopne
jl
xchg
sti
shrb
jmp
sti
pop
fists
loope
sti
sub
ret
mov
std
inc
inc
jg
jl,pn
in
mov
mov
dec
mov
in
xchg
adc
fisttpl
test
sub
jg
jl
cmpsb
ficoms
das
push
decl
cmp
rcrl
sbb
mov
les
push
imul
push
mov
ja
cmp
shlb
mov
mov
push
jl
insb
fsubrl
loope
imul
add
test
loope
setle
btc
or
add
btr
dec
dec
call
push
lock
std
std
mov
pusha
jl
push
ret
jns
jb
mov
insl
sub
pushf
mov
pop
out
ss
rorl
lods
jge
cmp
xor
dec
dec
andb
mov
fcoms
icebp
mov
aam
loop
and
push
stos
jecxz
xchg
push
push
mov
dec
roll
mov
aam
push
inc
pusha
stc
mov
push
cmc
stc
clc
add
pushf
jmp
or
call
sets
mov
call
jg
mov
pop
repnz
xor
cmpsl
or
iret
jnp
xchg
xchg
cmp
cld
mov
movsb
iret
sbb
ret
sub
and
aad
xorb
push
pop
cld
ss
lcall
xor
jb
int
fists
sbb
cmp
mov
mov
es
int3
inc
push
sar
cmp
outsb
outsl
jno
test
inc
sbb
cmpsl
or
das
xchg
mov
cld
mov
push
fcoms
xor
fwait
movsl
and
adcl
movl
pushf
push
pushl
lea
jmp
pushf
lea
je
bt
jmp
call
dec
cwtl
in
in
iret
das
loop
inc
pop
test
xchg
xor
jae
fwait
daa
stos
das
sub
scas
fisttps
inc
mov
out
faddl
mov
ret
mov
fsubr
dec
test
flds
aaa
or
mov
inc
mov
inc
push
sarl
dec
ljmp
xchg
xor
jb
dec
mov
add
add
repnz
sbb
enter
fsubrs
push
mov
push
jle
stos
push
jmp
lea
into
push
sub
mov
pop
mov
sahf
push
inc
fxtract
sbb
mov
popf
cmc
jecxz
test
xor
cmp
faddl
out
adc
les
or
sbb
jp
test
cld
outsb
ret
mov
xor
andl
pop
jne
mov
cmp
xor
lock
xchg
aam
outsl
dec
xor
xchg
sbb
sbb
sbb
pusha
xchg
xor
xchg
add
xchg
popf
inc
repz
push
jg
and
push
mov
pop
or
jns
mov
jno
adc
push
xor
sarb
das
dec
jne
std
add
lahf
and
jecxz
mov
adc
push
mov
sub
mov
jl
inc
xchg
pop
mov
sahf
push
mov
pop
push
jmp
scas
shlb
xor
push
fwait
sub
cmpsb
push
je
addr16
mov
lods
xchg
adc
lds
mov
outsl
cmp
icebp
jge
jg
dec
ja,pt
push
popa
fdivrs
pop
xchg
test
pop
mov
sbb
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
int
push
incl
jnp
cmp
adc
cltd
sbb
jge
leave
push
gs
rcl
ss
fmull
sti
repz
dec
ljmp
subl
pop
dec
fdivl
xor
jae
fisubs
or
flds
mov
dec
jb
jne
fwait
int
or
outsl
cmp
xchg
and
add
cli
je
push
adcb
sbb
dec
and
mov
push
mov
mov
repnz
cmp
insl
addr16
push
test
mov
dec
lret
daa
fistps
das
and
mov
pop
fisubrl
aaa
loop
rorl
ljmp
scas
mov
outsl
je
pop
out
jp
jns
std
jae
mov
cs
test
lock
xchg
add
mov
orl
in
dec
mov
push
push
icebp
int
xchg
insb
jne
lds
sbb
mov
js
push
push
stos
pop
jno
addr16
aam
lock
mov
mov
dec
mov
clc
out
pop
iret
dec
rcrl
xchg
sub
in
adc
mov
dec
pop
xchg
cmc
fcomps
mov
loopne
xor
inc
jge
pushf
mov
add
shll
dec
int3
mov
xor
lds
int3
and
testb
sub
int
out
sbb
scas
sbb
test
mov
mov
lea
jb
pusha
jmp
mov
mov
jmp
imul
adc
das
xchg
setg
mov
stc
jno
mov
jmp
mov
adc
js
outsl
sbb
adc
or
cmpsb
adc
push
adc
enter
cmp
push
mov
rcll
pop
repz
push
lods
aaa
insl
loop
xor
adc
push
or
test
cmp
jo
jb
les
cmp
mov
fs
pushf
clc
cmc
shr
movw
jmp
jmp
imul
bswap
lea
or
pop
mov
shr
shl
push
btc
shl
mov
sar
rcl
mov
pusha
cmp
pusha
call
lea
ja
jmp
pusha
call
xor
call
call
jmp
jnp
lods
xor
xor
adc
pop
inc
aam
xor
mov
add
push
push
add
push
or
push
add
cld
shll
xor
sbb
pop
inc
int3
out
add
mov
imul
gs
daa
add
and
mov
es
push
test
ror
push
add
pusha
movzwl
shr
stc
mov
mov
add
jmp
movsbw
shld
movl
bt
cmc
mov
lea
cmc
jmp
sub
sub
push
xor
lret
xchg
inc
dec
lods
shr
mov
sbb
cltd
and
xor
daa
je
xor
mov
je
push
push
packssdw
jg
dec
mov
xor
push
jo
push
add
pusha
into
int3
icebp
mov
dec
aas
ficoms
mov
push
js
jle
push
sub
and
xchg
std
insb
out
fisttpll
inc
lods
mov
call
int3
out
adc
fs
pushf
adc
mov
adc
mov
mov
repnz
dec
ret
mov
pop
jmp
xor
push
ljmp
jg
fidivs
enter
mov
dec
push
int3
in
add
push
out
sub
fldl
add
xor
ljmp
push
lock
scas
sub
cld
ja
mov
cmpsb
pop
mov
push
mov
test
std
insl
flds
mov
xchg
mov
jge
call
and
add
imul
xchg
xor
int3
cmp
shl
mov
add
mov
or
jp
nop
inc
stos
js
jg
sbb
aaa
xchg
in
pop
mov
jp
mov
mov
xlat
call
aas
xchg
push
add
popf
mov
leave
and
gs
movsl
fcmovnu
push
jmp
ret
dec
stc
jecxz
jo
push
push
xor
movl
adc
sbb
and
pop
sub
into
leave
add
cmpl
mov
out
xchg
rcrb
adc
sbb
mov
jmp
enter
je
jb
jle
in
inc
add
scas
xchg
ja
popa
add
xor
aas
mov
adc
and
popf
jge
add
sub
jge
popf
cmp
inc
mov
xchg
and
lret
fsubrs
stos
sahf
jnp
ret
icebp
popf
xchg
sbb
push
leave
aad
test
into
or
divl
add
jg
inc
in
inc
cwtl
cli
loope
dec
in
lret
jmp
les
inc
test
aam
or
inc
sub
pop
lahf
sbb
adc
mov
pop
in
push
idivb
shll
test
pushf
lea
jmp
ja
fadd
push
push
jmp
nop
and
jl
nop
xor
sbb
inc
and
gs
xor
or
lds
stos
mov
dec
test
adc
dec
into
inc
jge
push
cmpsb
mov
xchg
push
cmc
pop
mov
cmp
and
pop
pop
inc
cmc
adc
cwtl
pop
mov
push
sub
sahf
test
call
call
rcrl
mov
add
lods
sub
dec
shll
or
lods
xor
pop
je
xor
lds
jne
clc
mov
pop
mov
inc
clc
addr16
add
mov
nop
push
mov
xchg
in
insl
inc
scas
fisubs
or
cmpl
repz
mov
sbb
ja
mov
sbb
rcrl
add
jmp
pop
into
dec
cs
sbb
scas
cltd
mov
mov
insl
icebp
adc
popa
fs
push
mov
sti
ret
inc
out
sti
sbb
dec
fstps
test
clc
push
gs
xorl
sub
fld1
mov
pop
push
xor
fdivs
pushf
lods
sbb
jge
imul
adc
es
insb
mov
sarl
or
jae
dec
ss
mov
pop
outsl
pop
ret
sub
mov
imul
insl
pop
call
sbb
loopne
dec
fisubrs
xor
mov
cmpsb
mov
aad
in
bound
mov
sub
and
loope
sti
repz
call
jns
loopne
andl
add
jmpw
imul
jnp
sbb
sbb
xor
lret
out
bound
insl
dec
mov
push
cmp
scas
jecxz
pop
xchg
cmpsb
mov
pop
and
pop
lret
loop
cmpsb
or
pop
repz
push
mov
and
mov
cmp
fldcw
jo
dec
les
nop
add
mov
js
or
sub
aas
adc
cs
cmp
stos
push
and
loope
in
push
dec
sbb
lret
ja
xchg
jmp
cld
mov
lahf
outsl
into
cmp
pushf
sti
outsb
sbb
mov
sub
mov
push
stos
pushf
mov
movw
lea
jmp
lea
jne
call
pushl
lea
jne
pushf
jmp
bswap
mov
call
pushf
call
mov
mov
pop
sbb
cld
jl
mov
lock
xor
rolb
or
pop
jl
fs
lock
push
jl
scas
sbb
ljmp
movsl
adc
dec
mov
mov
mov
loopne
cmp
shl
fidivrs
lods
sti
insl
push
mov
jge
stc
mov
loope
mov
or
gs
push
pop
sbb
insb
test
cld
subl
lahf
mov
ja
and
stos
xchg
jns
in
and
test
ret
xor
add
ss
or
mov
and
add
cld
nop
lods
mov
std
sbbl
xchg
fnsave
mov
sub
loope
cmp
sbb
icebp
sub
jbe
cmp
inc
iret
jns,pt
stos
outsl
sub
xchg
xor
push
std
popf
lods
inc
loop
cmp
cmp
nop
shlb
test
test
dec
mov
xchg
pop
test
mov
or
lock
cmp
push
mov
loop
jmp
lea
push
call
roll
test
or
adc
int
lds
xchg
add
scas
shll
jnp
dec
inc
sar
imul
gs
cmp
and
outsl
stc
cmp
dec
int3
mov
loopne
fmulp
or
hlt
jmp
lock
loopne
int
sbb
xor
jbe
out
lret
pop
xor
mov
lds
sar
data16
int3
out
sub
dec
xor
xchg
pusha
pushf
insb
rcl
imul
test
push
push
xlat
push
shll
mov
ljmp
int3
cmp
mov
mov
pushl
ret
mov
jmp
push
nop
sahf
xchg
das
cmpsl
and
cmp
out
hlt
push
mov
sbb
mov
shrl
sub
popf
out
adc
ret
dec
lahf
lds
sbb
icebp
cmp
sub
push
jb
inc
push
push
lahf
sbb
adc
js
sbb
pop
mov
mov
lret
cmp
jns
sub
mov
dec
incl
adcl
cwtl
das
popa
adc
sub
pop
out
mov
push
mov
mov
call
cmp
mov
loop
and
jbe
ficoms
pop
aaa
mov
mov
sub
dec
mov
not
pushf
mov
xor
lods
addr16
pusha
cmp
rcl
push
sbb
gs
sub
sete
shll
push
sahf
jmp
dec
cmp
call
xchg
sbb
out
push
std
xor
mov
pop
push
or
mov
sahf
jle
push
xchg
adcl
jle
cwtl
cmp
cmp
add
mov
pop
push
sub
add
push
lcall
xchg
hlt
jg
cltd
hlt
stos
mov
arpl
sbb
bound
pop
aas
sub
mov
sub
xchg
cmpsl
jno
adc
push
mov
xor
out
stos
push
adc
arpl
xor
lcall
adc
dec
sub
divb
push
adc
in
jge
cwtl
mov
mov
sahf
cmp
adc
inc
push
push
xor
cs
insb
add
mov
or
xchg
or
imul
and
pop
ss
sub
outsb
xchg
cwtl
mov
lods
lea
aad
mov
scas
mov
stc
cmpb
mov
repz
pop
in
xchg
cmp
fnsave
mov
lock
idivl
cwtl
test
scas
orb
jp
push
shr
pop
and
cmp
mov
inc
and
xor
dec
sub
inc
scas
leave
shll
jle
or
dec
inc
pop
test
mov
push
pop
jecxz
lret
das
scas
xor
mov
xchg
pop
xor
hlt
push
push
pushf
mov
lea
jmp
nop
test
mov
sbb
hlt
imul
cwtl
push
xor
outsb
std
push
repz
inc
cmp
adc
pushf
outsb
jae
loopne
pop
es
cmpb
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
in
inc
cltd
rep
movzbw
lea
ja
not
mov
not
pusha
not
pushf
lods
or
xor
shrd
sub
shr
not
mov
shl
xchg
add
sub
jns
rol
or
neg
mov
sub
shr
shrd
bsr
adc
neg
pushf
movzbl
rcr
xor
pushf
push
lea
not
mov
pop
movb
pushf
mov
lea
setb
call
call
scas
mov
sbb
das
pushf
dec
mov
aad
add
popa
lds
sarb
out
cld
hlt
loope
clc
push
or
push
lods
into
shlb
inc
mov
sbb
xchg
mov
hlt
daa
test
xchg
lahf
icebp
pop
inc
mov
adc
inc
in
insl
dec
or
addr16
push
das
xchg
sub
das
pushf
clc
hlt
pusha
sti
xchg
cmp
pop
shrl
push
popf
or
inc
leave
lds
iret
cmp
dec
daa
xchg
movq
xchg
xchg
out
ja
push
pop
loop
int
fbstp
xchg
xchg
xchg
sahf
movsb
das
mov
fcmovnb
and
mov
jg
test
mov
adc
fcoms
js
mov
outsb
push
inc
cmp
in
hlt
sbb
mov
call
push
sub
mov
sbb
mov
int3
dec
ret
das
add
orb
or
call
push
mov
jmp
es
adc
inc
xor
psubsb
test
pushf
or
add
pop
sbb
daa
xchg
test
std
je
testl
sti
jae
fcmovb
in
add
dec
stos
pop
adc
popf
dec
sbb
push
or
aas
push
lea
sbb
jl
loope
hlt
dec
rcr
movsb
shlb
clc
test
mov
fimull
mov
dec
int3
mov
sbb
gs
fiadds
push
jb
out
pop
dec
aad
pop
sbb
adc
mov
inc
call
adc
mov
insl
out
lcall
add
push
int
mov
cmp
lea
cli
or
xchg
data16
push
dec
dec
imulb
repnz
jno
aaa
nop
cmp
sarb
mov
loop
mov
mov
jnp
inc
scas
xchg
repz
imul
sub
fldl
pop
and
test
sar
mov
cld
jmp
ja
rol
test
call
pop
movsl
inc
pop
int3
inc
ret
jg
mov
clc
mov
stc
stc
cmp
test
jmp
clc
repnz
pushf
jmp
jmp
movl
mov
pushf
pusha
stos
push
movb
pushf
mov
pushf
lea
jmp
adc
sbb
sub
cli
lcall
or
mov
fcom
mov
mov
and
jl
pop
lahf
mov
rcll
mov
sbb
lahf
out
sbb
sbb
xchg
adc
stos
push
lds
lods
repnz
nop
cmp
push
mov
cmp
std
fwait
mov
lds
jns
pusha
aam
mov
scas
addr16
xchg
push
adcb
xor
shlb
inc
add
mov
rcr
cltd
mov
icebp
popf
inc
mov
jne
test
jg
lret
pop
lahf
lcall
xchg
call
inc
push
cmpsb
aam
ss
scas
aas
stos
add
js
cmp
push
dec
mov
adc
mov
lret
call
das
insb
lret
cltd
loope
mov
cs
dec
sub
jp
fmull
imul
xchg
imul
mov
add
sbb
lahf
loop
clc
outsl
loop
fadds
mov
pop
pushl
movb
mov
movb
pushf
pushf
pushl
ret
lea
jb
jmp
mov
bts
aam
shl
cmp
cmp
mov
mov
lahf
mov
push
lea
jb
sbb
call
lea
call
call
movzwl
add
test
bts
xor
mov
cmc
add
cmc
test
stc
jmp
xchg
push
mov
mov
pop
sbb
divl
xchg
fildll
daa
scas
test
scas
dec
xor
mov
and
fisubl
in
mov
mov
push
sub
mov
cltd
sub
push
adc
lock
cs
out
sub
cmp
outsl
popf
push
jb
lock
leave
push
fidivrs
out
ret
call
inc
outsb
mov
adc
mov
xchg
in
mov
test
push
mov
js
inc
test
push
xchg
mov
loope
ja
cltd
inc
lds
jnp
jg
lahf
adc
jnp
hlt
stos
cmp
adc
movq
mov
sbb
insb
push
adc
inc
cmp
xchg
out
xor
popf
mov
dec
hlt
lds
stos
scas
and
inc
cmp
jb
loop
loopne
mov
inc
mov
popa
fisubl
rorb
rcll
mov
into
push
int3
cmp
inc
mov
mov
icebp
rclb
mov
sub
adc
inc
loopne
add
dec
aam
rol
pop
loopne
xchg
jne
jns
jg
pop
cmp
add
pop
sub
lea
lock
mov
jnp
imul
popa
les
xchg
cmp
push
mov
push
xchg
push
jge
fcoml
pop
out
inc
sub
addr16
pop
out
outsb
into
pop
push
xchg
cli
dec
mov
fwait
imulb
outsb
imul
out
fdivrs
inc
ficoms
mov
xchg
add
push
sbb
pop
test
sub
mov
int
ja
cmp
adc
les
add
repz
add
in
pop
xor
sbb
push
mov
push
sbb
push
xchg
adc
test
lea
call
pusha
call
out
sti
push
pop
shrb
jbe
push
add
cs
leave
scas
movsb
cltd
adc
nop
test
in
popa
push
int
jmp
mov
int
jns
movsl
xchg
push
ret
jnp
loopne
and
mov
stc
mov
push
pop
je
pop
xlat
out
imul
lret
sub
xor
sahf
jmp
addb
push
mov
mov
pop
lea
je
call
movzbw
bswap
mov
movzbw
push
lea
mov
pusha
pushf
mov
pushf
push
push
mov
mov
pusha
push
mov
push
pushl
ret
mov
lea
jno
lods
test
imul
sbb
or
mov
out
lcall
sbb
dec
jg
fs
sbb
inc
jl
test
cltd
inc
or
adc
arpl
outsl
pop
xchg
xlat
cmp
icebp
lret
mov
xor
xchg
and
push
test
clc
xchg
jbe
push
xchg
insl
jp
add
push
gs
arpl
outsb
je
jns
punpckhdq
faddp
fs
mov
and
pop
xlat
dec
jecxz
mov
xor
jg
sub
sbb
mov
in
repnz
aad
enter
leave
decl
hlt
ss
dec
push
std
xor
dec
sbb
jge
mov
push
fcoml
and
bound
inc
mov
dec
in
and
pop
xchg
sbb
mov
xchg
sub
xchg
cmpb
pushl
pusha
pushf
lea
jne
xor
rcl
mov
jmp
inc
test
shll
ljmp
cmp
push
aad
mov
test
mov
in
pusha
icebp
pop
add
iret
data16
adc
ret
pop
cmp
popf
mov
dec
jmp
mov
insl
fwait
icebp
jmp
cmpsl
adc
jne
outsl
pop
in
xchg
sub
lods
push
fidivl
imul
or
popf
pop
mov
sub
pop
pop
ret
xchg
jecxz
fmuls
pop
clc
cwtl
sbb
lock
pop
jl
jnp
in
mov
mov
or
pop
and
inc
or
jb
xchg
pusha
call
push
dec
jg
mov
push
mov
jp
adc
das
mov
std
out
test
pushf
sti
sub
lods
pop
clc
jbe
push
mov
sub
fs
lock
imul
fisttpl
push
addl
gs
push
fsts
int
iret
pop
lds
pop
cmp
mov
inc
bswap
bswap
setbe
sbb
pusha
lea
setnp
lahf
setbe
setg
mov
call
shl
bt
lea
btr
push
adc
ror
test
test
mov
shl
bsr
push
jmp
mov
pop
lea
lahf
mov
call
aam
adc
cltd
sub
sbb
sub
sbb
mov
into
mov
adc
in
mov
rcll
lahf
leave
pop
fsub
ds
adc
stos
repnz
mov
add
mov
pop
jne
cmc
orl
pop
mov
jp
je
sahf
dec
fcomps
dec
int3
inc
push
mov
test
jge
roll
insl
jecxz
dec
and
xchg
jmp
mov
cld
stc
repz
dec
cmp
dec
into
pop
shrb
mov
add
and
mull
dec
xchg
arpl
hlt
sub
mov
pusha
cwtl
jbe
call
test
data16
call
push
mov
sbb
out
xor
mov
mov
add
mov
decl
mov
pushl
pusha
movl
pushf
mov
pushf
lea
jmp
and
dec
sub
mov
pop
stos
jae
fwait
jg
dec
popa
jbe
and
dec
mov
incl
loop
xchg
mov
push
addr16
sub
and
out
sub
jp
enter
mov
mov
fs
addb
loop
mov
dec
mov
test
mov
scas
cmp
sub
adc
add
iret
push
fsubrp
dec
adc
aam
mov
mov
test
xchg
sbb
loopne
loopne
sbb
in
add
pop
addr16
inc
cltd
adc
xor
rcll
cmc
rcr
jp
pushw
mov
push
fdivr
loop
div
aam
sbb
dec
outsl
xchg
inc
cltd
ja
addb
jecxz
ljmp
shrb
xchg
or
mov
pop
push
addl
shrb
into
xor
xor
sub
dec
in
adc
aam
xlat
cmp
jg
cmpsb
into
scas
cwtl
add
dec
aas
lods
mov
dec
cmp
into
jb
mov
test
leave
lea
lret
in
xchg
dec
sub
out
push
lods
daa
mov
in
xchg
mov
fcoml
adc
cmpsb
testb
xchg
loop
mov
jae
pop
call
add
fsubrl
mov
xchg
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
repnz
jmp
lea
jae
pushf
call
pop
push
rcr
dec
dec
mov
push
xchg
sbb
xchg
cmp
sahf
push
cs
vpmaskmovd
adcl
fxam
sahf
mov
inc
std
faddl
lret
sbb
push
mov
and
pop
aas
imul
or
orb
pushf
dec
test
xchg
outsb
repz
adc
out
daa
fiadds
in
pop
jne
dec
ret
arpl
lea
cmpsl
dec
in
mov
xor
mov
aam
in
inc
int
std
push
mov
and
lods
mov
cltd
jmp
repnz
pop
xchg
push
aas
int
inc
cs
mov
pushf
loop
scas
push
andl
xchg
sar
mov
movsl
add
push
mov
aas
mov
lret
mov
outsb
subb
lods
aaa
adc
push
insb
push
loope
aaa
jmp
outsl
ljmp
jae
xor
fwait
pop
push
call
ror
inc
dec
push
pop
fdivrs
out
sbb
dec
into
sub
dec
fs
adc
in
rcl
mov
sbb
ja
ret
dec
mov
dec
cmc
inc
lods
in
into
lahf
dec
adc
sbb
rcrb
push
faddp
outsb
mov
dec
mov
call
xchg
pcmpeqd
xlat
outsb
std
jl
jle
mov
mov
adc
add
add
add
push
clc
mov
bt
pushl
test
jmp
add
mov
or
mov
shlb
push
ljmp
sarb
xchg
cmp
mov
and
clc
adc
ss
lods
xchg
jl
lea
cmpxchg
nop
mov
pop
mov
je
leave
andl
cmp
paddq
sub
inc
push
sub
mov
or
adc
js
arpl
jno
aas
scas
sbb
fstpt
push
push
sbb
adc
jb
je
xor
push
pushf
imul
xor
subb
add
and
clc
cmp
movb
lea
jg
pusha
movb
lea
jae
pushf
pop
mov
call
mov
movb
mov
pusha
pushl
ret
dec
fs
adc
add
or
adc
pop
enter
add
xchg
cwtl
mov
rolb
clc
lock
icebp
add
ja
je
push
push
rclb
push
rcll
xchg
push
dec
cmpsb
sbb
push
lods
cmc
pop
mov
push
and
ret
pop
inc
mov
inc
outsb
aam
cld
mov
jecxz
loopne
pop
adc
sti
bound
aam
ficoms
jb
push
popf
or
stos
mov
shl
mov
and
sub
call
aaa
not
pop
rcr
lahf
shl
xchg
pop
lea
daa
not
pop
bt
pop
cmc
rol
sar
xor
pop
btr
inc
pop
pusha
not
add
pusha
pop
jmp
iret
hlt
jl
neg
xchg
mov
test
xchg
push
jb
jb
sahf
es
ds
in
pop
xchg
mov
imulb
cmc
in
push
xor
xor
cmc
call
mov
in
popa
insb
xchg
lcall
jne
push
nop
sbb
cmp
mull
imul
scas
les
fidivrl
in
cmpsl
lret
incl
fwait
ret
mov
sub
add
in
lock
pop
idivb
ret
xor
and
dec
mov
popa
addr16
imul
insb
popa
arpl
arpl
add
pop
idivl
jnp
push
add
test
idivl
arpl
xlat
add
push
xchg
iret
jecxz
or
jb
cmp
out
mov
movsb
sbb
jae
gs
push
cmp
cld
jmp
popf
cs
add
sub
xchg
mov
sbb
fs
jne
cwtl
setp
mov
movb
call
lea
jne
jmp
call
mov
lea
jae
add
rcr
shl
mov
movzbw
ror
mov
bswap
mov
test
pusha
pushf
xor
pusha
mov
repnz
jmp
mov
lea
ja
pusha
sub
or
lea
add
push
clc
mov
shr
add
jmp
add
inc
gs
outsl
fs
gs
imul
js
add
repz
cmpsl
cmp
add
add
push
push
mov
pushf
lea
jb
stc
mov
ror
bswap
bsr
mov
jae
clc
shr
call
xor
mov
arpl
add
push
jecxz
pop
mov
sub
adc
dec
push
clc
add
pop
sbb
xchg
cmp
mov
push
les
cmp
fs
int3
testb
stos
or
adcb
mov
pop
in
jns
mov
push
adc
mov
leave
in
jmp
or
jge
xchg
rcll
jmp
mov
cmp
ljmp
bt
pushf
not
stc
add
cmc
jmp
pusha
mov
lea
bswap
not
lea
mov
movl
jmp
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
scas
jge
add
mov
jl
jl
mov
sbb
push
xchg
jl
mov
pmuludq
sub
jo
cli
add
pop
push
jg
jno
sub
test
push
les
push
stos
xchg
pushf
imul
fidivl
cwtl
arpl
jle
cmp
aad
popa
and
cmpsl
mov
mov
jne
sbb
mov
sub
mov
mov
push
test
in
enter
loop
loop
push
testb
pop
aam
into
and
push
mov
stc
test
call
lods
aad
and
xor
shll
sub
loopne
int3
inc
mov
or
nop
xor
popa
dec
jbe
xor
insl
imul
pop
test
push
mov
xlat
into
ucomiss
mov
fnstsw
xchg
sbb
push
xor
push
push
lds
nop
lds
arpl
jne
das
or
test
sbb
push
cmp
push
test
mov
nop
js
mov
dec
mov
dec
dec
call
jo
jo
lods
aam
adcl
inc
mov
xor
add
push
addb
js
pop
lock
mov
outsl
fmuls
mov
lock
mov
je
sub
cmp
push
fcmove
pop
xor
iret
mov
mov
pop
mov
mov
fwait
btc
push
movsbw
bsf
bsr
mov
dec
and
rcr
mov
pushf
cmp
jmp
movzbw
movsbw
jmp
xchg
cmc
xchg
mov
jge
push
leave
sub
and
inc
sbb
sub
sbb
cmp
dec
cltd
or
jno
mov
sbb
xor
not
pop
hlt
mov
inc
add
and
sbb
fistpll
daa
iret
or
xchg
xor
cmp
xor
inc
xchg
or
sbb
xor
cmp
mov
sub
stos
lahf
cmpsl
scas
stos
and
inc
pop
es
sub
addr16
sub
in
shlb
jecxz
push
icebp
cmc
call
stc
sbbl
jnp
insl
gs
shll
imul
out
jno
fdivl
gs
pop
fistpll
and
out
sub
pusha
and
fmul
aas
ret
cmp
int3
inc
in
mov
push
bound
ficoms
jmp
inc
pop
mov
inc
int3
cmp
mov
scas
dec
jge
std
aam
xchg
cmp
mov
inc
mov
sbb
cmp
in
push
repz
mov
mov
mov
mov
push
stos
sbb
mov
test
inc
pop
mov
mov
sub
add
ljmp
or
imul
sub
cmpsb
les
popf
adc
cmp
mov
loope
cmp
mov
sbb
sbb
aam
and
inc
mov
stc
test
inc
movsl
scas
aaa
pop
into
mov
gs
jl
into
inc
mov
in
inc
pop
nop
jne
xchg
jnp
fwait
ja
or
pop
or
testb
sbb
lock
jbe
daa
mov
adc
mov
test
pop
mov
movsb
adc
lahf
movsl
adc
fcoms
pusha
mulb
loop
scas
adc
push
into
xor
out
call
sub
inc
insb
lea
dec
xchg
aad
jb
add
mov
dec
cwtl
or
stc
movsb
sbb
sbb
mov
fldenvs
xor
or
dec
pop
xchg
and
jo
inc
loope
mov
jge
adc
je
or
inc
and
in
jmp
push
dec
lret
mov
idivb
adc
mov
dec
xlat
push
ret
inc
lret
scas
cli
movaps
jle
mov
rcll
out
repz
pop
cs
mov
add
imul
das
jge
pusha
sbb
mov
sarb
in
rcrl
push
jg
rsm
push
popa
ret
sti
push
cmp
mov
out
aad
imul
inc
and
sarl
push
xchg
or
and
mov
cmpsb
add
mov
xlat
inc
lret
dec
mov
stos
sub
mov
cmp
cmp
das
adc
and
fmuls
sub
repnz
sub
xor
cli
adc
lods
aas
fs
sbb
pushf
xor
sub
outsl
fidivrs
xchg
jnp
call
dec
mov
hlt
das
push
or
mov
repnz
nop
fstps
adc
cmpsl
inc
int
stos
push
addl
push
movsl
movsl
scas
xor
and
movl
movl
pusha
lea
jmp
lea
call
pusha
jmp
not
mov
movb
call
call
sbb
fldcw
rol
sub
push
push
fimull
adc
xchg
jne
bound
cmc
sub
inc
mov
aaa
or
pusha
mov
adc
adc
pop
push
cmp
adc
xchg
test
jbe
push
ds
int
or
and
lea
ja
clc
push
call
test
jg
mov
insl
push
ja
jg
aas
lret
inc
mov
cld
pop
inc
fdivs
or
xlat
fs
mov
or
or
adc
test
adc
cli
pushf
lods
out
cmp
addr16
sub
mov
push
cmpsb
lods
rclb
fs
jbe
btr
sub
stc
mov
and
xor
btr
clc
mov
movsbl
inc
add
sbb
shr
bts
mov
js
sbb
push
bsr
add
lea
lea
push
mov
lea
push
lea
jp
push
mov
push
pusha
lods
jmp
push
pushf
pushl
pushf
mov
pusha
lea
jmp
dec
push
lcall
mov
sahf
push
jb
push
repnz
push
jb
sub
sub
mov
mov
into
arpl
pop
call
adcb
in
aad
sub
push
push
into
xor
jne
repz
inc
dec
stos
pop
mov
clc
add
test
xchg
adc
push
int
mov
push
test
lods
ss
lea
call
push
pusha
lea
jae
pushf
call
jns
into
mov
push
mov
lods
adc
dec
lock
cmp
dec
enter
xchg
sub
mov
adc
test
pop
cmp
not
ljmp
es
dec
mov
cmp
lcall
scas
sub
scas
fcmovbe
lds
lahf
in
cli
arpl
and
cltd
cmp
cs
sub
add
test
mov
shl
lea
mov
sub
push
pusha
pushf
xchg
lahf
pop
mov
not
lahf
pop
mov
movsbw
pushl
lea
movzbw
mov
not
mov
pusha
mov
not
cwtl
not
push
mov
movb
lahf
movzbw
mov
movzbw
sets
lea
pushf
pushf
pushf
xchg
setne
bswap
lea
movl
movsbw
not
call
pop
test
cmp
test
xchg
js
inc
dec
shrb
ret
push
mov
cli
in
push
jne
test
or
or
fnstcw
add
ds
add
rorb
fs
adc
push
daa
cmp
mov
in
aas
ret
int
jns
xchg
ret
add
in
test
in
dec
inc
cld
fildl
sbb
xor
ss
inc
mov
out
call
fisubrs
jae
int3
shll
pop
or
pop
mov
jnp
repnz
iret
cmp
iret
inc
xor
inc
lret
in
dec
cmpsl
addl
push
cmp
aas
cli
xchg
std
pop
std
jge
adc
loopne
push
lahf
cmpsl
adc
mov
mov
in
push
nop
inc
movsb
scas
xchg
cmpsb
mov
cmc
inc
rcll
push
jl
pop
leave
sub
roll
push
test
scas
mov
pop
and
mov
je
repnz
pushf
popf
mov
adc
push
pop
push
jne
fucomip
push
dec
fcmovbe
sbb
adc
imul
roll
mov
out
fstl
fldz
or
or
filds
push
add
shr
repz
sub
shl
pop
xchg
push
pushf
inc
add
test
sbb
push
test
fnsave
fwait
jne
cld
jecxz
xchg
gs
lret
sub
out
cmp
jge
sub
je
mov
int
lods
cwtl
jbe
pushf
mov
cmpb
mov
mov
sub
test
outsb
fcomps
repnz
inc
adc
cmp
push
xor
test
mov
frstor
cmp
mov
out
mov
mov
shll
lret
mov
ja
mov
fwait
idivb
insl
jp
lahf
pop
iret
pusha
arpl
daa
adc
mov
loopne
stc
xorb
xor
pop
mov
popa
pop
xchg
mov
out
into
mov
sub
roll
orb
movsb
int
stos
xchg
stos
enter
and
mov
inc
mov
hlt
mov
je
mov
std
mov
add
xchg
in
outsl
mov
jl
mov
dec
inc
mov
aaa
jp
mov
ret
cmp
stos
fwait
pop
sub
or
xchg
addr16
insl
push
aam
icebp
insl
call
imul
mov
outsb
cli
fildll
adc
jne
or
or
cmp
and
add
pop
call
test
lcall
fimuls
call
pusha
cli
ss
mov
bound
in
inc
rolb
out
push
lahf
sahf
enter
lcall
out
daa
bound
mov
repnz
idivb
fdivrs
xor
sahf
lret
hlt
aad
mov
jecxz
inc
imul
leave
inc
dec
in
shlb
jbe
dec
xchg
mov
jp
icebp
push
pop
lods
ss
fisttpl
popa
xor
test
or
insb
mov
insl
test
in
or
mov
test
imulb
xchg
je
mov
push
fcompl
lock
lock
pusha
fs
xor
lret
stos
in
mov
add
push
pop
lahf
imul
sar
mov
aad
jecxz
fistps
lcall
dec
dec
sti
mov
loope
jo
ss
add
and
in
sarb
sahf
inc
movsl
mov
movsb
fbld
mov
stc
shr
xor
int
push
fcompl
loope
dec
nop
adc
push
jb
out
movsb
outsl
sahf
test
push
bound
imul
mov
int
fstpt
rorb
aam
fs
xor
fs
xor
bound
aaa
mov
pop
movsb
sahf
or
daa
addr16
incb
push
in
adc
and
mov
mov
mov
out
xchg
lea
faddl
loope
fisubs
je,pn
jb
push
fs
push
mov
fmulp
in
push
push
and
mov
leave
adc
xor
cmp
push
dec
xchg
add
xchg
iret
mov
cltd
cmpsl
xor
xchg
dec
cmc
mov
xchg
push
sbb
cmp
or
sbb
enter
cmp
arpl
mov
cmp
push
data16
push
xor
scas
insb
mov
in
testl
and
jno
call
rcll
inc
not
xorl
int
movsb
mov
cmpsl
adc
out
enter
aam
sbb
data16
sub
lret
xchg
adc
xlat
push
out
jl
or
mov
xor
cs
sbb
or
roll
lret
repz
and
stos
mov
test
lea
repz
je
push
mov
icebp
enter
pushf
mov
repz
dec
mov
into
dec
jnp
bound
loope
movsl
sbb
or
clc
loopne
mov
cmp
mov
cmp
mov
and
dec
pusha
stos
jmpw
in
or
cmpsb
bound
jo
outsl
xor
jg
or
notb
or
shrl
rcll
pop
push
mov
cmp
xchg
dec
lret
or
and
lods
mov
sub
fildll
lds
mov
addl
xor
int3
stos
mov
roll
push
lds
sub
push
cmp
cs
in
add
loope
aam
sbb
ja
loop
mov
outsl
xor
jmp
dec
dec
es
add
sub
int
and
int
lahf
shl
int
add
xchg
outsl
or
jnp
lods
add
movsb
icebp
inc
sbb
repz
ds
and
add
jmp
mov
xchg
mov
test
ja
lea
xor
ss
das
inc
jo
test
inc
lea
fwait
jae
and
in
in
imul
jp
inc
repnz
out
and
inc
adc
dec
mov
sub
loope
cltd
cmp
pop
cs
mov
sbb
mov
push
xchg
pop
inc
test
cmc
lods
in
mov
push
in
std
cmp
xchg
outsb
inc
push
ret
sub
pmulhw
cs
iret
stc
loop
jbe
mov
gs
pop
hlt
xchg
adc
fiadds
push
out
and
es
sti
cmp
rclb
movsl
dec
insb
or
adc
sub
xchg
icebp
or
cmc
sub
xchg
loop
pop
out
aaa
mov
cs
cmp
push
iret
mov
xchg
and
outsb
dec
pusha
subb
inc
arpl
cmc
icebp
sub
test
push
pop
out
icebp
js
and
movsb
popa
daa
jmp
fcmove
mov
out
xchg
jo
xor
jb
into
cmp
lret
xorb
xor
pop
fsubl
adc
rcrl
icebp
mov
out
out
xchg
ss
push
into
rorl
pop
xchg
or
mov
mov
sar
les
cmc
cli
dec
lods
push
test
mov
mov
inc
fcomps
jns
inc
mov
sbb
ja
js
xor
cmp
pop
idiv
xor
js
add
mov
push
pop
out
and
fisttps
push
push
add
fists
pushf
bt
stc
sub
cmp
pushl
popl
cmc
stc
stc
cmp
cmp
jmp
jae
push
sub
stos
xor
mov
gs
roll
cltd
jnp
or
aam
cmc
in
push
push
cmpsb
mov
mov
insl
sbb
sahf
mov
jae
pop
inc
fwait
add
adc
lahf
inc
or
fmull
test
cwtl
jns
push
sbb
das
out
stc
clc
inc
movsb
xchg
adc
push
cltd
xchg
pop
enter
lret
mov
pop
xchg
fimull
inc
lahf
std
sarb
mov
cmpsb
sub
dec
fidivl
add
lea
je
inc
stc
test
bt
mov
bt
call
test
or
cwtl
and
fdivs
cmp
mov
or
call
iret
imul
push
repz
dec
sbb
aam
jl
xor
fisttps
fnstenv
jnp
ret
xchg
mov
mov
cmpb
les
ja
jg
pop
mov
ret
popa
adc
jne
or
xor
jo
push
mov
add
loopne
push
les
add
mov
add
pop
or
into
int3
jmp
mov
xor
loope,pt
xlat
push
mov
mov
and
pop
xchg
decl
pushf
ret
insb
inc
lea
jmp
je
stos
and
jmp
outsl
inc
dec
jmp
lret
push
pop
jnp
das
mov
jmp
xchg
pop
pop
jo
push
cmpb
sbb
mov
mov
outsb
pop
mov
popf
cli
insb
pop
cli
cltd
cmp
cmpsl
mov
xor
inc
jmp
jnp
inc
add
push
jle
mov
add
test
push
popf
sub
ljmp
push
mov
decb
jo
imull
in
inc
mov
nop
sbb
mov
cmp
popa
ljmp
sbb
fcoml
mov
sub
pop
shl
rorl
cmpsl
fsubr
jno
data16
fsubs
jle
xchg
insb
imul
add
sbb
push
and
inc
inc
cwtl
cltd
adc
xchg
add
cmpl
sub
leave
jmp
dec
cmp
aad
push
lret
xchg
iret
push
xchg
cwtl
jns
xor
inc
cmc
testl
stos
rcrb
icebp
inc
inc
inc
push
mov
sub
jno
cmp
cltd
lock
mov
jb
xchg
fisubrs
push
bound
cmp
and
dec
pop
out
push
sbb
xchg
sbb
aaa
je
xchg
lods
sub
rolb
aaa
cmp
add
in
insl
data16
pop
inc
xchg
mov
movhps
fisubs
out
pop
mov
fs
mov
mov
pushf
lret
aad
call
mov
xchg
jae
push
mov
and
out
bound
in
test
fst
inc
loop
pushf
int3
adc
aam
pop
fbld
lcall
lods
sbb
jbe
or
loopne
mov
sub
push
add
dec
and
jnp
aaa
movsb
outsl
sarl
pop
in
dec
xorb
int
nop
stos
cli
lahf
outsl
push
xlat
xchg
cmc
push
push
and
and
lahf
lea
out
mov
in
enter
sub
pop
fimull
xchg
pop
inc
int3
test
shrb
insb
jns
repnz
push
negb
jecxz
fcom
sbb
cmp
cmp
xor
nop
xor
sub
mov
sbb
repnz
add
sbb
in
inc
fdivrl
imul
mov
xchg
mov
mov
xor
mov
call
movsl
sub
mov
sbb
fcomps
test
cwtl
adc
call
xchg
jp
mov
jge
and
push
sti
fisubrl
mov
cmpsb
sbb
fistl
dec
xor
jmp
push
test
test
imul
pop
iret
jbe
lock
jns
push
or
pop
jbe
btc
les
xchg
pop
iret
xchg
sub
jp
mov
rorl
sub
in
addb
cmp
jae
mov
pop
pop
bsr
pop
aam
add
jmp
inc
jmp
lea
jne
push
sets
pop
movb
mov
movsbw
push
movzbw
movsbw
lea
pusha
push
movl
call
mov
not
mov
setae
mov
bswap
mov
pusha
pop
setne
lea
mov
push
mov
jmp
call
outsb
mov
mov
and
fsts
test
add
js
arpl
pop
les
and
test
loop
push
add
sub
mov
test
pop
cltd
call
or
cmp
cs
jg
mov
adc
add
test
add
pushf
sub
jmp
jle
or
inc
mov
in
outsb
dec
lahf
repz
lret
xor
ja
repnz
mov
sbb
ror
aaa
inc
adc
push
nop
jp
enter
daa
and
pop
fisttpll
enter
addl
fbstp
mov
pop
fsubrs
push
and
push
mov
add
push
add
test
femms
aas
push
testb
jae
popa
mov
mov
scas
lea
je
pushf
pushf
lea
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
in
push
add
pusha
mov
push
pushl
push
pushl
ret
jbe
fcmovnbe
xor
pop
aaa
xchg
pop
mov
mov
xchg
lret
ja
mov
pop
xor
mov
inc
jb
jno
xor
dec
push
cmp
sarl
arpl
add
push
push
scas
jmp
cmpsb
dec
rolb
cmp
push
cs
lock
xchg
repnz
fcoml
mov
push
adc
mov
adc
push
xchg
and
jle
pop
pop
out
mov
cmp
or
or
jecxz
stos
loopne
inc
sub
mov
sub
mov
lret
mov
mov
int
sbb
sahf
pop
adc
adc
cwtl
rorb
je
mov
jge
movsl
in
push
lods
or
jmp
ds
popa
imul
jle
fwait
movsl
dec
cmpsl
jno
ret
jmp
jnp
jge
mov
push
aad
mov
cld
lea
call
cmp
jmp
add
push
push
js
arpl
gs
add
sub
and
lea
ja
xor
sub
adc
bsf
add
add
bts
stc
shr
mov
mov
setle
mov
pusha
bt
bt
call
call
sbb
stc
mov
hlt
test
jae
inc
ret
cmp
xchg
shll
push
xor
push
test
cmp
mov
mov
sub
sahf
jge
hlt
addr16
xor
enter
lret
sbb
mov
adc
sbb
pop
jo
and
and
jecxz
mov
cmpsb
es
insb
hlt
jae
aas
in
pop
jecxz
inc
jb
lods
adc
out
jecxz
sbb
fildl
and
push
popf
dec
cs
mov
test
ret
cs
xor
push
mov
and
push
jmp
call
jmp
in
out
inc
sub
sarb
mov
jle
lcall
idivb
cmp
xchg
test
or
pop
sbbb
out
shll
mov
call
dec
scas
jp
repz
fsts
xor
ficompl
add
pop
pop
stos
dec
test
sbb
stos
lods
mov
sbb
les
dec
xchg
and
mov
pop
cmpsl
loope
lcall
rorb
dec
mov
test
xor
push
mov
xchg
xchg
mov
xlat
sar
bsr
sub
shld
xchg
mov
adc
mov
shl
mov
lea
add
bts
shr
call
pusha
clc
add
bt
test
push
call
sbb
lds
and
dec
roll
mov
jne
insl
shll
int
lcall
jge
ret
ret
ljmp
mov
push
leave
iret
into
lds
enter
in
lret
pop
adc
out
xchg
adc
inc
mov
push
xor
jp
lret
mov
les
pop
lahf
adc
jp
in
test
cld
loop
add
insb
out
stc
pusha
mov
mov
ret
push
mov
jno
icebp
inc
and
jge
dec
loope
cmp
inc
mov
hlt
out
in
xor
sub
nop
sbb
in
movsl
daa
ljmp
xlat
inc
loope
mov
dec
lcall
mov
test
hlt
push
sub
mov
jg
adc
mov
andb
cmp
sbb
mov
dec
pop
pop
jb
add
enter
aaa
fs
pop
dec
push
pop
pop
idiv
lea
ljmp
pop
cmc
mov
mov
fst
scas
aad
not
mov
pushl
dec
stc
xor
pushf
pushf
cmp
mov
lea
bswap
mov
push
pushf
pushf
lea
ja
pusha
jmp
mov
fistps
aas
inc
sbb
loope
leave
dec
mov
leave
cmp
test
dec
adc
popa
dec
mov
in
ja
pushf
sti
xchg
or
flds
jle
sub
imul
add
mov
jno
push
shlb
fwait
stc
mov
and
sahf
lret
test
mov
sub
push
ljmp
cmp
mov
fs
jb
daa
daa
mov
neg
cmc
rcl
mov
not
bt
mov
xor
add
mov
push
pusha
pusha
setb
movb
mov
pushl
lea
jmp
push
lock
std
std
xchg
cs
jo
lcall
imul
addr16
cs
scas
outsl
pop
cmp
and
dec
dec
mov
aam
push
lret
add
loop
das
adc
test
jge
fwait
adc
mov
arpl
xchg
push
es
out
push
and
adc
mov
jo
xchg
dec
mov
movb
movl
push
jmp
mov
mov
jmp
call
pushf
call
mov
movl
push
mov
mov
pushf
pushl
ret
fwait
repnz
push
sub
test
sbb
imul
xchg
push
int3
adc
pop
loop
subl
mov
sub
xlat
sub
push
scas
stos
sbb
and
or
into
inc
xor
lcall
xchg
sub
sbb
daa
ljmp
push
mov
jae
cmp
popa
xor
xchg
pop
push
in
repz
and
sub
mov
pop
sbb
mov
jmp
push
pusha
lea
jne
pusha
mov
push
add
test
pushf
movzwl
not
add
mov
stc
jmp
call
jb
test
pushf
mov
cmpb
call
or
jmp
test
pop
lret
jbe
ds
inc
test
inc
aad
pop
scas
jbe
push
cs
fmuls
ret
and
popf
push
sbb
sbb
loope
push
lods
lods
notb
stc
push
sbb
mov
add
repnz
mov
daa
aam
mov
outsl
arpl
or
cs
mov
cmp
roll
gs
xchg
stc
add
imul
fdecstp
cli
adc
inc
jp
jnp
and
xlat
hlt
mov
jnp
lahf
push
in
or
cltd
loop
lods
inc
and
add
mov
imul
xor
add
mov
push
jmp
and
cmpsb
sbb
push
mov
push
xor
xor
fs
insb
add
xchg
fildl
add
push
loop
lea
insb
xor
adc
lods
and
pop
jne
xor
inc
mov
and
xchg
pop
xchg
or
lea
pop
sarb
lds
xchg
mov
outsb
or
aas
xchg
jne
outsb
jne
in
pop
iret
xchg
pushf
cli
cmpsb
hlt
lret
stos
inc
or
push
jl
push
mov
push
mov
shr
sti
mov
and
jbe
bt
ror
inc
sub
movsbw
sar
mov
cmp
xor
mov
not
mov
or
lea
push
add
dec
shr
mov
rol
adc
xadd
mov
bsf
pusha
add
movsbw
mov
push
pop
mov
movb
movl
pushf
mov
seta
pushl
sete
call
pushf
push
mov
pushf
lea
jmp
aam
leave
dec
test
sub
add
lods
mov
scas
inc
leave
xor
mov
and
lcall
cmc
mov
lcall
cwtl
adc
add
stos
mov
call
push
pusha
pusha
mov
push
pushf
pushf
movb
lea
jmp
movb
movl
push
lea
jmp
xchg
mov
pop
sbb
stos
daa
xchg
sub
dec
aas
lahf
add
movsl
sahf
ja
jnp
insb
pusha
jl
or
fbstp
clc
int3
sub
les
add
or
stos
out
out
das
sub
test
mov
enter
out
rclb
jge
mov
imul
sarb
mov
scas
es
xchg
pop
cltd
lret
mov
cmp
stos
mov
or
cli
push
lds
mov
push
iret
xchg
mov
lcall
inc
loopne
mov
jne
adc
std
test
xchg
xchg
sub
stos
shlb
cmp
cmp
dec
mov
es
or
mov
xor
into
mov
lock
add
xchg
in
stos
sub
push
sbb
scas
push
stos
and
cmpsb
es
jns
jae
dec
cmp
mov
push
push
clc
sbb
xor
cmp
add
dec
sub
mov
cmp
mov
dec
cmp
movl
movb
call
call
push
inc
iret
mov
push
cmc
push
lcall
push
mov
jle
xor
popw
sbb
sarl
fdivrs
mov
lock
add
fnstcw
js
or
or
and
add
ret
mov
lock
xchg
in
test
and
and
int3
inc
fdivrl
xor
jle
cmp
jnp
nop
push
pop
shrb
or
adc
adc
adc
sub
loop
jle
test
test
adc
xor
lcall
sbb
test
lock
add
fnstcw
or
mov
mov
inc
adc
ret
push
xor
push
repnz
test
les
or
sbb
push
lock
in
loop
lret
loope
dec
sbb
addr16
fstpt
int3
sub
scas
jae
aaa
xchg
push
mov
addb
jg
push
mov
pop
insl
lcall
inc
jae
jmp
lods
xchg
and
arpl
enter
test
push
mov
adc
add
xchg
daa
icebp
dec
les
push
jno
dec
cmpsb
sbb
mov
cmp
mov
bt
shrd
push
mov
pushf
cmpb
jmp
jmp
movl
call
hlt
add
movsl
adc
fists
inc
testl
adc
scas
mov
dec
sbb
inc
cmp
shll
sub
scas
sbb
add
es
lahf
cmp
cmc
mov
push
mov
aaa
xchg
cmp
cmp
add
mov
imul
mov
sarb
shlb
mov
and
call
call
lea
jne
bsf
neg
mov
shr
mov
stc
pusha
sub
add
btc
movzbw
lea
mov
bt
pushl
sub
cmc
test
pushl
popl
stc
clc
cmp
pusha
jmp
neg
pushf
cmc
mov
mov
sub
movw
neg
clc
pushf
bt
jmp
cmc
pusha
clc
sbb
mov
mov
pushf
adc
call
push
dec
jne
rcrb
ja
mov
push
mov
push
hlt
sbb
in
iret
mov
call
sbb
fadds
popf
lock
sub
push
movsl
add
add
and
sbb
jo
out
dec
lea
ret
inc
stos
das
stos
and
push
dec
in
xorl
adc
adc
or
add
stos
and
inc
fistps
xchg
mov
into
push
mov
xchg
pushf
xchg
and
repnz
mov
je
push
lds
mov
mov
clc
pushf
movb
cmc
cmpb
push
mov
pushf
mov
lea
jne
not
dec
add
bsr
xor
bswap
mov
push
mov
lea
jmp
inc
inc
xchg
insl
lret
mov
pop
xchg
xor
jg
iret
aaa
popl
mov
and
mov
loopne
dec
loopne
sub
ds
adc
repnz
sub
fucomp
push
xchg
mov
sub
mov
scas
mov
cmp
sahf
sti
dec
push
mov
sub
pop
rolb
mov
bound
nop
sub
inc
mov
push
movb
mov
pusha
mov
clc
cmp
pushf
call
or
faddl
mov
dec
push
repnz
cmp
test
pop
jmp
mov
cltd
jns
repz
xchg
push
repz
pop
add
mov
push
jmp
mov
out
mov
sbb
push
in
inc
dec
jmp
cmp
sub
pop
stos
popa
mov
rcrl
sub
cmp
mov
mov
mov
idivl
mov
adc
cwtl
adc
sub
jo
jo
mov
or
sub
fldcw
adc
sbb
sbb
lret
pop
pop
mov
sub
xchg
push
cld
insl
shll
lcall
mov
pop
or
xor
movsb
scas
outsl
mov
inc
aam
mov
iret
sub
and
jnp
fidivrl
fwait
push
popa
call
aaa
push
mov
push
mov
insl
inc
sub
int
mov
icebp
cmp
mov
adc
into
movsl
in
hlt
lea
mov
xchg
cmc
insl
test
test
aas
lcall
adc
xchg
int3
lcall
sbb
jbe
sub
sbb
mov
rorb
push
cmp
sbb
fisubl
aas
mov
jl
fbld
icebp
mov
bsf
btc
btc
bsf
sub
jmp
movw
pushf
lahf
mov
lea
not
mov
lea
pushf
mov
pop
call
cmpb
call
jmp
pushf
movl
push
pushf
push
movl
push
pusha
lea
jmp
call
jo
and
xchg
insb
aas
mov
push
jbe
jb
cli
lcall
inc
iret
cmp
sarb
mov
inc
xor
test
mov
daa
dec
cwtl
add
mov
sub
jmp
lret
cmpsb
mov
push
sub
pop
stos
fs
pusha
insb
pop
push
sub
mov
cli
ds
shl
push
clc
xchg
std
adc
data16
scas
pop
sbb
sub
dec
sub
mov
or
test
scas
cmp
jl
lcall
push
enter
push
adc
pusha
push
pushf
lea
jb
stc
bt
jmp
pushf
sub
pushf
neg
jmp
jmp
inc
inc
sarl
ffreep
and
fcoms
pop
clc
xor
fs
aad
aad
xchg
fwait
cld
adc
shlb
orb
cmp
bnd
mov
es
inc
add
cmp
test
scas
insl
inc
pop
cltd
push
mov
mov
mov
mov
aad
jns
test
push
cmp
jns
inc
push
push
rorl
ret
push
adc
loop
mov
mov
lock
out
and
and
add
popf
inc
inc
push
xchg
xchg
cmc
pop
andl
stc
rcrb
insb
cmp
jge
xor
mov
rcrb
daa
adc
inc
push
ds
aas
mov
lahf
ret
mov
sbb
jbe
adc
ss
dec
mov
inc
sub
sahf
jg
push
push
in
jmp
stos
outsb
pop
and
in
push
add
jp
jnp
iret
xor
pushf
aad
in
repz
imul
sbb
cmp
outsl
enter
jns
sub
dec
mov
cmpsb
adc
stos
pushf
cli
test
cmc
hlt
pop
in
sbb
mov
jp
dec
mov
loopne
jno
sbbb
mov
lret
mov
mov
cmp
test
push
lock
data16
cmp
in
out
push
loop
mov
aaa
cmp
aam
jae
lods
xor
cmp
xor
push
lret
xchg
add
jmp
mov
fld
xchg
mov
fldl
inc
mov
lods
out
push
clc
lahf
jb
in
mov
adc
push
jp
sbb
xchg
mov
pop
mov
movsb
sub
daa
ds
xlat
aas
pop
mov
cmc
aad
fs
in
emms
scas
or
pop
in
mov
and
test
inc
dec
fs
pop
shr
mov
repz
xor
int3
sbb
mov
and
cmpsb
adc
pushf
outsb
mov
xchg
pop
push
push
and
adc
insl
add
stos
pop
out
pop
push
decb
inc
cltd
add
mov
frstor
and
push
cmp
and
es
out
idiv
movsb
push
cmp
lods
push
mov
leave
add
pop
jae
mov
mov
mov
mov
mov
loop
lcall
pop
bswap
lea
mov
movzbw
lea
mov
pushf
mov
pushf
lea
ja
jmp
pushf
lea
mov
push
movl
pusha
call
call
lea
ja
pusha
pushf
imul
movb
mov
add
pushl
movb
lea
jmp
mov
not
pushf
movsbw
movsbw
mov
jmp
data16
shll
jge
jge
mov
movsl
adc
popa
insl
cld
or
fsubl
jg
lds
sbb
cld
insb
pop
ret
lahf
cmpsl
xchg
jge
add
ljmp
insb
mov
mov
adc
jp
ficoml
fninit
lods
xor
pop
fimuls
rcrl
loope
scas
addps
add
pop
push
test
mov
mov
add
in
in
mov
call
cmp
and
mov
push
pusha
pushl
call
clc
push
fcmovne
and
out
lahf
sti
mov
mov
xor
fistl
push
test
mov
movsl
cli
shll
lret
jne
sub
clc
enter
pop
icebp
pop
jle
in
rol
addb
cmpsb
push
xchg
xchg
inc
imul
fcoml
movsl
add
insb
jmp
adc
ss
push
xchg
mov
scas
mov
cwtl
fistl
lods
das
cmpsb
cmp
addr16
mov
dec
mov
pushf
lea
jmp
xor
fnstenv
out
adc
jp
xchg
dec
dec
leave
cmpsb
mov
jg
leave
loope
jne
xchg
jmp
imul
push
pop
das
rorl
test
dec
lcall
xchg
outsl
or
or
mov
fdivrl
mov
mov
stos
jle
jne
rcll
add
cmpsl
adc
test
lcall
xchg
daa
xchg
adc
jp
push
imul
and
xor
je
or
je
add
lea
jmp
adc
rolb
arpl
pop
fisttps
mov
in
popf
sub
xor
stc
jmp
andb
movsb
mov
mov
push
or
push
xcrypt-ctr
cmpsl
lahf
push
mov
popf
jg
pop
arpl
in
lret
divb
pusha
adc
mov
and
push
dec
mov
jne
push
jne
sti
js
xor
dec
cs
pop
adc
scas
and
enter
test
movsl
mov
lods
pushf
add
clc
bt
sub
pushl
push
pushf
lea
jne
bts
lea
ror
mov
setge
add
bsr
movzbl
mov
neg
sub
sbb
btc
mov
bt
shl
pusha
mov
sete
inc
mov
movzbw
btr
or
mov
rol
dec
movzbw
mov
add
dec
setp
mov
adc
sub
jmp
pushf
cmp
call
push
mov
pushl
pushl
popl
push
movb
pushl
ret
movsl
scas
push
out
mov
mov
adc
add
xor
stc
cli
std
jbe
mov
sbb
mov
iret
xor
add
jnp
jo
jl
outsb
mov
inc
daa
pop
cmp
add
push
icebp
jmp
xchg
jp
sahf
and
testb
inc
pcmpeqb
lea
in
ficompl
aad
and
cli
pop
in
clc
sbb
int
shlb
test
add
dec
inc
mov
xchg
mov
ds
and
push
fidivl
loop
jle
mov
outsb
jp
sbb
fstl
das
or
dec
mov
xchg
out
mov
pop
loop
push
fldl
mov
push
stc
bound
loop
sbb
xchg
fs
mov
mov
stos
mov
sub
cmp
mov
or
cmp
xor
aaa
str
push
movl
jmp
clc
stc
cmpl
pusha
lea
jne
pushf
xchg
mov
setge
push
seta
mov
pop
call
and
in
out
loope
sahf
add
and
mov
scas
push
mov
es
fnstsw
mov
scas
pop
in
pop
mov
add
dec
imul
mov
mov
push
movl
ljmp
sahf
mov
in
inc
std
xchg
push
lret
or
cmp
push
sbb
int3
int
push
pop
movsb
pop
sahf
sbb
mov
mov
add
enter
add
movb
movl
dec
movb
not
push
dec
clc
pusha
cmp
xor
clc
jmp
pushl
lea
jb
lahf
lea
add
cmp
mov
btr
not
shr
pushf
mov
mov
shl
call
out
xchg
outsb
xor
pop
gs
lea
mov
popf
mov
lcall
imul
lds
sti
test
xor
cmc
dec
push
dec
inc
out
mov
call
cmp
push
add
enter
fidivl
fwait
push
jmp
into
inc
fmull
aam
mov
lods
adc
inc
in
mov
push
and
mov
or
lock
mov
mov
dec
sub
shll
push
push
jns
adc
aam
add
xchg
ficompl
and
insb
stos
hlt
fnstenv
push
or
out
pop
pop
je
and
pop
cmpsb
and
icebp
xchg
sub
pop
stc
mov
xchg
xchg
mov
and
or
es
or
cmp
cmp
call
cmpsl
cs
in
inc
cli
mov
js
mov
xchg
xor
mov
and
cmp
ja
iret
mov
mov
cmp
adc
lea
outsl
xchg
inc
fsubs
inc
leave
jg
adc
mov
std
push
xor
and
dec
push
in
cmp
dec
mov
dec
cmp
or
insb
sbb
sbb
loopne
inc
pop
ds
fs
cmovg
sub
mov
jno
mov
adc
push
pop
shlb
outsl
icebp
mov
in
fs
jbe
clc
scas
cmpsl
test
stos
shl
xchg
sti
add
lahf
push
fldl
fs
cmp
pop
inc
fistpl
lret
xor
popf
ficomps
mov
mov
fsubrl
adc
jge
adc
dec
clc
imul
lahf
xchg
pop
sbb
push
xor
js
cmp
pushl
aaa
add
lock
adc
mov
cwtl
cmp
dec
test
sbb
push
add
pop
xor
lods
test
or
sbb
sbb
arpl
mov
adcb
dec
repz
scas
sahf
pusha
push
clc
or
jns
xchg
mov
dec
push
add
hlt
xor
jae
shl
mov
repz
add
or
pop
scas
mov
xchg
mov
sbb
cld
mov
mov
jae
std
pop
sbb
dec
pop
inc
mov
mov
jle
ss
jg
enter
std
movsl
mov
pop
cli
orb
pop
xchg
jno
push
cmp
xchg
out
mov
xchg
sbb
sbbl
push
ret
aam
xchg
xchg
pop
push
int
xchg
aad
out
jecxz
insl
push
push
dec
sub
mov
add
add
ds
or
xlat
adc
int
dec
in
jle
push
es
xor
sbb
push
cmovns
sbb
imul
push
fdivp
stos
jmp
adc
jbe
push
push
sbb
dec
or
dec
jno
push
out
push
lods
add
sahf
mov
lods
test
lea
pop
data16
hlt
aas
inc
and
icebp
pop
sbb
fldl
pusha
dec
dec
int
pusha
jle
dec
xor
jg
lret
pop
int
add
enter
sbb
mov
jae
jmp
jno
testl
sbb
shlb
fisubrl
add
ljmp
call
jno
pop
jne
lret
aas
rorb
cmc
mov
jmp
inc
inc
sub
cmp
and
xor
sub
dec
rorb
jecxz
lds
mov
stos
xchg
jb
outsb
addl
test
inc
pop
jle
mov
add
pop
pushf
jle
mov
dec
sub
xchg
lea
push
icebp
xchg
roll
sbb
ss
mov
fcomps
std
in
inc
jne
bound
bound
inc
popa
push
or
push
decb
mov
mov
dec
adc
lcall
and
mov
cmp
sahf
adc
mov
pop
push
cmp
mov
push
inc
pop
mov
arpl
inc
and
cmp
pushf
aaa
lds
xor
jecxz
sub
pop
lahf
mov
aas
daa
or
int3
leave
lea
inc
ret
lahf
adc
pop
sub
sub
out
test
sbb
jo
push
mov
push
xchg
sub
pop
mov
and
or
fbld
ret
cmp
xchg
sub
adc
and
cmc
sbb
mov
dec
push
and
lret
lret
mov
fisubl
xor
fwait
ja
or
jl
sub
pop
add
mov
fmull
fldl
push
jg
jo
xor
sub
xor
sub
xor
aas
prefetcht1
push
xchg
pop
cmp
pop
jmp
add
push
add
pushf
jbe
fisubrs
push
sub
dec
adc
sbb
add
mov
dec
shrl
or
jp
xchg
mov
stc
adc
insb
lret
les
mov
mov
shr
outsb
test
xor
push
add
mov
or
stos
xor
imull
fs
push
cli
lods
popw
inc
push
stc
pop
lea
shl
mov
es
mov
cli
outsb
add
and
fwait
dec
daa
outsb
mov
fmull
fnstcw
lods
sub
repz
jne
inc
js
push
call
dec
cmp
push
dec
loopne
pop
pop
mov
fmulp
jno
xor
mov
sti
sbb
andl
pop
push
test
inc
sbb
aad
imul
arpl
arpl
cmp
adc
sbb
decl
or
xchg
pop
mov
add
cmc
push
jne
neg
popf
popf
stc
dec
and
jg
pause
pop
lods
push
add
inc
ja
in
jae
mov
xchg
xchg
inc
insb
bound
ss
add
ds
jb
cmp
sahf
dec
sbb
pop
dec
sti
adc
mov
mov
std
mov
cmpsl
out
out
xor
or
mov
push
push
insb
pop
xor
and
sahf
out
mov
movsl
mov
xor
push
test
fcoml
movsb
pop
shrb
fistpll
out
sub
push
mov
sub
pop
sarl
mov
mov
jbe
call
aas
rcrl
add
xchg
ja
sbb
je
aas
insb
test
cmpsl
loopne
and
xor
add
mov
andl
mov
xor
scas
sbb
stos
inc
inc
jns
pop
sbb
mov
mov
and
in
and
in
inc
in
add
mov
push
out
in
mov
andl
mov
mov
adc
pop
aaa
sub
into
jg
ret
pop
ss
push
cmp
cwtl
dec
test
cmp
push
xchg
mov
lds
std
jecxz
gs
leave
inc
btr
xchg
inc
sti
sbb
fdivl
clc
cmp
push
jge
mov
cmp
or
test
adc
inc
xlat
push
xor
and
mov
rorb
repnz
mov
aad
adc
stc
in
lods
add
push
scas
inc
jmp
and
cli
jg
add
push
rcll
stos
into
pop
data16
cs
int3
jp
or
pop
push
out
inc
sbb
sbb
fs
mov
lcall
cwtl
pusha
scas
cmp
xor
jecxz
pop
adc
adc
sbb
adc
jmp
jl
sti
lret
cli
pop
add
pushf
cmp
mov
xor
js
call
mov
adc
push
and
mov
daa
fwait
ja,pn
inc
mov
js
imul
daa
and
mov
dec
or
repz
pop
sbb
pop
lahf
inc
and
movsb
leave
fwait
lcall
mull
mov
add
imul
icebp
xchg
sarl
in
fs
lret
push
imulb
movsb
mov
add
push
movsb
cs
fmull
in
pop
ss
dec
insb
or
nop
and
inc
xlat
dec
and
sbb
inc
xlat
cmc
pop
add
ja
and
or
mov
adc
or
les
mov
xlat
lahf
mov
loop
inc
or
mov
mov
mov
leave
push
mov
add
pop
mov
jp
or
mov
adc
ret
inc
lret
cmovae
test
je
mov
xor
fs
cmp
ljmp
push
cwtl
and
dec
cmpb
in
idivl
cltd
repz
bound
and
or
pop
cmp
pop
shl
out
enter
leave
leave
stos
outsl
out
add
dec
out
jnp
xchg
imul
add
fcmovnu
xchg
cmp
jbe
dec
mov
addr16
jge
divl
daa
xchg
pop
sbb
push
sbbl
or
push
and
jmp
aaa
xor
loopne
mov
negb
testb
pop
push
dec
sub
cmp
in
jecxz
dec
popf
mov
lock
mov
add
mov
dec
xchg
js
and
dec
stc
loopne
arpl
or
rcrl
jb
in
aaa
mov
push
adcl
mov
and
insl
mov
cmpl
out
pop
out
inc
sub
imul
insb
leave
push
xor
cmpsl
mov
pop
dec
sahf
stos
ret
je
roll
lods
je
adc
movsl
xchg
gs
lret
rorb
insb
push
repz
out
in
imul
out
adc
or
shlb
ret
sbb
pop
dec
mov
cltd
push
xor
mov
pop
mov
xor
aam
lods
xor
and
fcoms
lret
or
jl
push
xchg
cmp
rclb
cmp
aad
int
in
mov
mov
dec
ss
pusha
ljmp
std
daa
test
push
xchg
pop
jmp
in
outsb
pop
jge
cmp
and
rclb
cmp
xchg
pop
cmp
cld
pushf
lret
mov
push
js
je
in
fsts
aaa
adc
cmpb
pop
cmpsb
lods
jnp
sub
push
sub
lcall
inc
push
and
sbb
test
cwtl
cli
mov
jne
jns
push
jmp
mov
loopne
add
xchg
mov
mov
push
arpl
shl
icebp
xor
sbb
shlb
call
xchg
iret
enter
xchg
pop
mov
and
stos
stos
xor
mov
test
lods
or
cld
xchg
int3
in
roll
sahf
into
mov
ja
jg
mov
mov
icebp
fs
and
pusha
jbe
xchg
or
jmp
arpl
es
push
imul
in
inc
push
cmp
pop
inc
arpl
insb
sahf
xor
mov
scas
xchg
clc
mov
sub
in
popa
xor
xchg
ljmp
inc
mov
mov
lret
cwtl
mov
cmp
xchg
ljmp
jge
push
lret
shlb
inc
sbb
cmp
sub
into
fnstcw
jbe
out
jns
outsl
xlat
test
loope
push
pop
pop
repz
cmp
int3
mov
dec
mov
test
push
adc
sub
in
aas
sahf
push
bound
loopne
ret
insb
lahf
repnz
dec
es
scas
out
adc
xchg
push
add
in
ret
sub
pop
int3
std
mov
mov
inc
mov
lds
fmull
popa
jp
ret
or
and
adc
pushf
pop
inc
stos
or
and
lret
stc
adc
aam
cmpl
add
sahf
mov
sbb
adc
enter
pushf
rclb
sbb
call
add
pusha
lret
pop
sahf
inc
es
mov
clc
pop
pop
movsl
jmp
enter
add
jg
dec
push
pop
xchg
addr16
insl
aaa
mov
aaa
test
movsl
mov
push
negl
lcall
fs
movsb
mov
into
fs
insb
and
insb
dec
mov
mov
mov
dec
in
adcl
sub
adc
mov
lcall
in
sarl
ret
icebp
dec
sahf
pop
add
push
sub
mov
fs
add
pop
pusha
xor
push
popf
xor
gs
cmpsl
and
jnp
notb
insl
sub
push
jmp
lock
rorl
movsb
dec
adc
inc
mov
and
mov
pop
xchg
dec
xor
mov
ldmxcsr
add
into
mov
xlat
add
andl
out
mov
mov
inc
jmp
lret
orb
cmpsl
sbb
ja
fadds
sub
jbe
or
or
adc
aas
lahf
sub
in
push
lcall
sbb
adc
aad
data16
mov
and
data16
out
xor
dec
hlt
pushf
xchg
cld
aaa
and
adc
pop
mov
js
lahf
test
je
out
sub
test
stc
incl
mov
mov
js
imul
jl
ja
stos
jnp
push
pop
lret
je
jl
xlat
push
add
sbb
mov
xchg
cmp
or
in
lods
adc
arpl
mov
xchg
xlat
cmpsb
repnz
or
cmpsl
inc
push
scas
je
jno
pop
mov
pop
add
roll
fidivrl
dec
pop
pop
cmpsl
jno
push
cmp
cwtl
jno
gs
pop
popa
ds
inc
mov
mov
lcall
pop
jno
pop
outsl
leave
xchg
aas
nop
mov
cli
inc
xchg
call
add
lock
nop
out
hlt
dec
pop
cmp
dec
bound
ret
cmp
dec
cmp
sub
xor
cmc
jge
push
push
and
jl
dec
xchg
jo
ds
xchg
in
dec
pop
or
pusha
sub
js
flds
mov
lcall
je
divb
inc
cmpsl
push
pop
sub
and
ds
xor
and
add
es
jne
dec
shll
and
sbb
pushf
leave
mov
push
test
mov
add
xchg
jge
lcall
clc
loope
in
fldl
movsl
pop
push
mov
das
movl
pop
call
or
dec
xchg
adc
fscale
pusha
sbb
sub
mov
xor
mov
mov
push
mov
cmp
mov
adc
gs
jno
into
jp
mov
or
shl
cmpsb
jno
push
stos
loopne
mov
loopne
ds
dec
rol
dec
xor
cmp
sahf
sub
pop
cld
jno
pop
fidivrs
outsb
mov
mov
stos
mov
push
fcmovnu
inc
adc
jne
in
fldcw
icebp
xlat
nop
push
sub
add
add
hlt
subl
aam
ljmp
dec
repz
xadd
mov
push
icebp
es
and
mov
pop
or
or
sbb
jb
cmpsb
rclb
testl
push
push
fwait
cmp
outsl
xchg
dec
xchg
pop
mov
xchg
stos
lcall
jb
std
push
sub
aam
lods
ja
pop
outsb
test
addr16
out
fldln2
in
pop
call
ficomps
mov
mov
pop
sti
mov
xchg
pop
jo
sbb
adc
push
jne
or
jl
pop
push
and
xchg
mov
inc
jmp
adc
leave
int3
je
dec
inc
jne
fdivrs
push
sub
jg
jl
dec
sub
mov
ljmp
test
popf
loop
xchg
mov
out
arpl
jle
dec
rcr
test
clc
pop
lock
fwait
mov
mov
jns
xor
sbb
ljmp
mov
pushf
daa
push
xor
push
in
sub
add
cmp
out
lods
out
and
testb
nop
pop
loopne
dec
addr16
ss
sub
dec
in
rorl
jmp
pop
ds
test
imul
loopne
outsb
sbb
mov
mov
mov
push
jne
ss
testb
sub
mov
aad
or
dec
push
arpl
jmp
jle
dec
fisttpl
int3
popa
aas
js
jae
int
jp
jno
popa
mov
sbbb
scas
decb
in
sub
clc
jmp
jo
inc
lret
mov
or
daa
dec
push
hlt
mov
out
push
push
xor
mov
imul
mov
gs
jmp
mov
popf
push
enter
imul
mov
bound
dec
movb
aam
xchg
add
addr16
shrl
sbb
inc
push
fidivs
add
out
aaa
outsl
dec
push
or
test
jmp
jl
ljmp
stc
mov
les
mov
int
push
and
ret
outsl
hlt
outsb
and
pop
jnp
sub
push
push
pop
mov
pop
cmp
lahf
dec
pop
test
data16
mov
inc
fcom
adc
xchg
mov
loopne
aaa
inc
loopne
in
call
out
lea
xor
insl
sbb
mov
hlt
sti
mov
test
das
icebp
and
test
dec
mov
iret
inc
cwtl
cmp
clc
lods
daa
int3
push
jbe
popf
add
mov
xor
mov
push
call
ffreep
xor
sbb
gs
call
lcall
cmp
cld
mov
add
hlt
jmp
cli
xchg
mov
mov
push
or
mov
cmpsb
data16
movsb
cwtl
pop
outsb
in
in
arpl
int
or
out
and
sub
sbb
shlb
fs
adc
pushf
add
push
add
hlt
movsl
fsubr
test
jne
mov
xchg
push
das
lock
and
xchg
das
ljmp
mov
sub
inc
mov
out
cmp
push
push
xchg
inc
dec
or
into
inc
push
in
pop
xor
jg
ljmp
cli
adc
fidivrs
xor
xchg
int
mov
out
fstl
xchg
adc
push
and
mov
ja
push
cltd
inc
pop
xchg
sbbl
gs
dec
jb
aas
mov
sti
jl
jnp
popf
ret
popa
lods
cmp
inc
fxch
mov
adcb
jle
out
out
pushf
inc
or
test
sub
inc
imulb
add
push
jg
sbb
adc
scas
fiadds
adc
mov
dec
sub
cmp
push
cmp
cmp
cwtl
loope
dec
fxch
ljmp
and
movsb
adc
clc
push
andl
xchg
popa
sbb
push
xchg
push
add
adc
xor
fucomi
mov
sub
jmp
in
add
lret
sbb
sbb
int3
and
loop
cmp
cmp
dec
pushf
stc
sub
sbb
orb
xchg
pop
mov
test
and
jns
push
sbb
jb
out
out
movsb
sub
test
mov
arpl
mull
and
pop
mov
mov
push
inc
loop
ret
cmp
fisttps
nop
or
outsl
hlt
scas
push
pop
sbb
xchg
xchg
dec
mull
push
dec
lock
and
mov
sbb
jge
add
rcr
gs
pushf
sub
push
lcall
xorl
mov
xlat
xchg
jo
or
pop
xor
out
movl
mov
shrl
mov
add
out
aam
and
loop
sbb
std
push
jns
and
xor
push
aam
mov
shl
test
and
push
xchg
jge
adc
stos
push
movsl
pop
push
out
sub
aam
push
ror
hlt
adcw
fs
mov
mov
mov
ds
lcall
fildll
ret
inc
idivb
cs
sbb
jne
xor
hlt
lods
fadds
lods
inc
pop
xor
inc
dec
xlat
cwtl
push
popf
rolb
cmc
pushf
pop
and
repnz
cmp
or
inc
pop
movsb
inc
mov
dec
imul
ss
pop
inc
loopne
inc
ljmp
fdivrs
fsts
dec
and
jmp
push
xchg
out
ja
ss
cli
push
fstpt
inc
gs
outsl
bound
push
cs
fstpl
aaa
incb
jmp
xchg
dec
pop
pop
subb
bound
or
xor
scas
or
push
push
ffree
mov
in
mov
data16
out
mov
cltd
shll
cli
repz
inc
ret
and
mov
adc
cmp
lock
es
xor
adc
sbb
je
scas
repz
lods
push
in
mov
jno
pop
mov
cmp
ret
xchg
adc
ret
add
clc
sahf
fisubrl
fs
ss
fpatan
cmpsl
cmp
dec
dec
cmp
sti
push
xor
mov
push
aas
mov
adc
bswap
imul
movl
popf
lret
add
arpl
mov
push
loopne
mov
in
cmp
and
data16
into
shld
mov
inc
lods
mov
shlb
out
and
dec
sub
psraw
sbb
les
mov
xor
mov
out
les
add
cltd
cmp
mov
sbb
hlt
lahf
mov
cs
dec
jl
lahf
push
ljmp
ds
std
pop
jp
scas
push
pop
enter
xorl
dec
push
imul
xchg
mov
push
mov
jecxz
inc
dec
pop
push
outsb
sub
cmp
mov
jo
cli
xor
or
jne
add
cmp
ret
pusha
xchg
jae
xchg
mov
enter
sbb
xor
push
scas
arpl
mov
adc
push
mov
mov
cli
out
mov
je
repnz
mov
inc
or
in
stos
mov
cmpsl
lret
in
mov
fmuls
push
fiadds
jnp
test
xchg
sub
dec
lahf
in
es
sbb
sti
call
jl
int3
pop
sub
jno
cmp
mov
sub
lahf
gs
loopne
xchg
sbb
cmpsl
ds
pop
pop
xchg
pop
push
mov
jne
and
mov
inc
lahf
loopne
sub
jnp
and
push
daa
cltd
and
and
insl
inc
mov
ficompl
ret
ret
popf
cmp
or
adc
xchg
call
dec
stos
inc
add
push
pusha
ljmp
rol
sub
cmp
add
ret
dec
or
jecxz
inc
inc
lea
in
jl
mov
add
xor
mov
ret
jp
xchg
pusha
xchg
push
mov
sbb
sub
rclb
mov
daa
cmp
cwtl
pop
xchg
frstor
mov
adc
out
daa
sahf
pusha
scas
inc
loopne
mov
sbb
push
in
mov
lock
cmp
test
or
lods
inc
scas
pop
test
sub
add
pusha
inc
sub
rolb
je
adc
push
jno
ljmp
test
ljmp
stos
xchg
js
sub
mov
sub
push
lock
inc
out
pop
mov
mov
sub
pop
insb
and
xchg
mov
pusha
xor
test
inc
leave
out
push
in
es
mov
iret
mov
leave
mov
ret
in
testl
push
inc
dec
and
inc
mov
mov
xor
push
outsl
xor
dec
movsb
lret
lcall
xlat
je
pop
es
insb
push
outsl
stos
hlt
xor
and
sbb
adc
push
lret
mov
adc
sbb
lea
jmp
fisubrl
out
dec
sarb
out
adc
mov
ret
sub
into
pop
mov
xor
std
or
push
out
mov
lahf
aaa
dec
fldcw
mov
adc
sub
jno
out
mov
mov
or
std
aam
lock
scas
or
in
je
push
test
mov
addr16
fidivl
data16
cmc
jp
cmp
push
int
inc
mov
lods
dec
sar
repz
aad
xor
in
mov
popa
das
jo
leave
sahf
and
xchg
mov
mov
movsb
test
fcomps
out
pop
ljmp
jle
xchg
push
jg
mov
aam
lods
aaa
pop
fdivrp
jns
popa
xor
pop
loopne
std
into
jbe
pop
cmpsb
add
mov
dec
cmp
cli
movsb
pop
mov
mov
imulb
mov
inc
lods
jbe
aas
ja
inc
mov
shlb
ret
push
testb
pop
add
test
mov
jnp
mov
pusha
mov
aam
sbb
mov
jnp
test
pop
in
mov
sub
xchg
lods
jle
enter
ret
lcall
push
xor
sbb
and
push
add
insl
mov
mov
sahf
sti
cmp
ja
xchg
mov
push
aam
pop
and
or
push
mov
lods
pop
insl
xchg
pushf
cmpsl
repz
fldl
outsl
push
test
enter
icebp
lea
sahf
and
pop
stos
pop
pop
xor
jne
mov
sbb
out
inc
test
adc
mov
jno
fs
ds
ret
andl
adc
mov
xlat
shrb
rcrb
xchg
cli
outsb
adc
mov
outsl
loopne
add
dec
and
pop
fs
xchg
ret
pop
out
hlt
push
jae
xor
andl
pop
pop
jmp
insb
inc
iret
pop
and
loopne
in
push
cmp
into
mov
addb
adc
dec
fs
push
fmull
mov
mov
roll
jmp
or
fmul
int3
lcall
mov
popa
sub
out
insl
dec
call
jp
sbb
mov
das
dec
push
add
jbe
test
mov
dec
outsb
mov
fwait
pop
push
jle
stos
fdiv
xchg
bound
stos
push
inc
pop
sub
ljmp
xchg
je
jne
pop
jecxz
sahf
adc
adc
jae
test
sub
and
push
fcomp
or
dec
mov
insl
popf
arpl
jl
mov
jae
insl
aas
mov
inc
xchg
sub
push
xchg
ds
sbb
arpl
pop
lret
dec
and
xchg
xchg
jnp
sbb
lea
pop
pop
je
xlat
lcall
sub
ret
jb
lret
stc
pushf
cmpl
mov
scas
test
adc
pusha
sbb
int
push
out
mov
cltd
mov
pop
cmpsb
hlt
ljmp
or
aam
daa
sub
push
mov
mov
jmp
mov
mov
mov
loope
mov
iret
inc
out
dec
add
jno
rcr
cmp
into
push
or
in
out
stos
xchg
shr
dec
xchg
inc
imul
xchg
outsb
mov
scas
jp
mov
into
inc
pop
fisttpll
lods
xchg
push
pop
pop
lock
adc
loop
cmpsl
and
add
pop
sub
push
movsl
jge
sbb
cltd
shrb
inc
lret
iret
or
cmpsl
lods
push
jge
jmp
sbb
nop
pop
fldln2
adc
dec
andb
pop
jmp
andl
icebp
xor
jbe
ss
push
xor
test
daa
push
scas
lds
sti
addr16
lods
xchg
stc
sub
push
sub
insb
mov
xchg
les
aam
les
mov
add
xchg
imul
mov
int3
push
and
jo
xor
cmp
add
outsb
mov
scas
pop
push
cmp
in
jmp
ret
xlat
pop
sbb
loopne
into
scas
mov
js
inc
pop
push
in
repz
stc
out
jecxz
int
mov
pop
shl
xor
jg
xchg
push
pop
push
aas
mov
mov
sub
dec
std
inc
mov
call
cmp
clc
stc
sbbb
mov
pop
in
cmpsl
and
hlt
sti
add
add
mov
mov
out
cmp
aad
gs
loopne
dec
lret
cmp
lahf
rcll
mov
mov
pop
cli
dec
mov
cmc
clc
jb
negl
repnz
daa
loop
push
lea
mov
aad
test
mov
rorb
sbb
xchg
xor
imul
aam
test
dec
ficomps
jb
jbe
sub
loopne
jbe
jne
mov
and
push
mov
xorb
call
or
adc
shl
sbb
push
mull
out
cld
ds
pop
aad
aas
dec
repz
testl
dec
adc
out
or
jecxz
sub
mov
fdivs
push
or
sbb
inc
in
in
imul
add
push
outsb
dec
push
push
pop
sub
mov
scas
gs
fdivrp
call
push
add
outsb
fcompl
stc
lret
lcall
aas
dec
xlat
mov
sbb
pcmpeqb
xor
insb
ret
stos
lahf
es
jle
insl
xor
dec
jne
adc
movsb
xor
movsb
mov
std
aam
nop
and
ja
pop
pop
rolb
push
js
and
add
jae
push
mov
sub
pop
in
mov
scas
jmp
enter
movq
out
jnp
cmp
aam
cwtl
mov
test
jnp
mov
push
cld
jne
cmp
or
mov
es
push
mov
adc
xchg
inc
int
mov
mov
and
aam
cli
or
pop
xor
hlt
inc
push
das
or
cmpsb
into
iret
adc
xchg
and
adc
das
aaa
out
loop
popf
push
mov
stos
data16
xor
add
fisubrs
call
or
add
xchg
jge
loop
xchg
shrb
mov
loop
mov
jne
movsb
sar
fbld
xor
push
ss
pop
dec
rorl
xchg
xchg
inc
je
add
xchg
adc
and
add
pop
pop
lea
jbe
ret
and
dec
inc
push
jmp
mulb
icebp
leave
js
dec
in
arpl
lcall
mov
sub
movsl
pop
push
sahf
jp
clc
ja
dec
aas
ss
popf
pushl
cmc
pop
stos
sbb
push
add
mov
inc
cmp
sti
stc
loope
in
call
push
lods
int3
leave
in
jmp
movsl
or
out
sub
mov
mov
pop
out
pop
repz
adc
scas
xor
mov
push
push
add
sbb
leave
pop
or
fs
std
js
outsl
push
shr
movsl
lret
mov
and
dec
js
and
sbb
sub
mov
dec
cli
add
xor
dec
stos
arpl
jae
xchg
or
cmp
daa
jge
pop
jp,pt
lods
es
test
xchg
sbb
aas
lods
ljmp
aas
cmp
outsl
xchg
xlat
mov
dec
jns
jmp
dec
xchg
mov
jne
dec
jo
sbb
pop
pop
mov
rdtsc
stc
in
or
xchg
mov
mov
fstl
sub
es
sbb
inc
stos
out
and
xor
ljmp
push
data16
iret
jb
in
pop
pusha
or
adcl
inc
repnz
jns
push
scas
pop
cmpsl
icebp
jno
add
or
or
insl
adc
jbe
add
and
lock
ret
in
xor
or
cmp
pop
sti
xchg
mov
push
arpl
out
mov
out
out
sub
fcomps
xchg
pusha
lods
pop
dec
in
push
repnz
cmp
mov
imul
mov
lds
mov
and
push
mov
addr16
cmp
gs
int
lock
cmpl
daa
jmp
sbb
sub
cmpsb
stos
dec
sahf
mov
inc
adc
mov
mov
push
and
lods
es
sub
and
push
stos
pop
fwait
mov
popa
imul
in
rolb
sub
shlb
or
xchg
jae
push
xchg
repz
pop
sbb
leave
int3
jecxz
aaa
jge
cltd
add
repnz
pop
push
shr
xor
in
jnp
add
mov
outsl
or
test
sub
fiaddl
test
icebp
and
mov
sub
sbb
stos
jo
pushf
inc
cli
loop
decl
jg
test
cwtl
cmpsb
scas
enter
rcrl
lods
mov
jle
out
mov
stos
push
cltd
mov
daa
pusha
push
mov
and
inc
push
fsubs
mov
sbb
rolb
dec
fists
lods
mov
mov
mov
pop
push
lods
mov
add
scas
push
out
mov
jae
push
cmp
xor
pop
cli
bound
int3
pushf
jb
sub
mov
lcall
popa
mov
in
and
xchg
aaa
sub
ret
rcrb
pop
jae
sub
sbb
call
pop
mov
cmp
cltd
mov
je
sti
lods
dec
mov
fstl
or
jmp
sub
adc
inc
xlat
cmp
imulb
dec
lods
fistl
jge
scas
shll
fcomps
rcrl
test
or
sub
cli
xor
pop
push
inc
ljmp
jg
and
adcl
mov
xor
dec
insb
mov
jmp
scas
mov
fistl
aad
mov
xchg
mov
jo
mov
adc
mov
aas
cmp
sbb
push
inc
jmp
js
mov
pop
push
jl
xchg
dec
dec
clc
rcrl
push
pop
and
adc
cmp
lcall
xor
sbb
mov
push
daa
cmp
test
bound
jne
out
jnp
dec
lods
movsb
andl
dec
mov
sub
lcall
gs
ja
or
dec
das
fs
xor
xchg
mov
mov
call
xlat
ljmp
cmp
js
or
dec
mov
sarl
lret
sbb
or
lea
stos
call
or
pop
das
mov
mov
test
mov
mov
push
and
push
fwait
ja
cmc
xchg
ficomps
push
push
xor
in
sub
xchg
xor
loop
shl
outsl
ret
scas
push
push
test
aaa
subl
add
push
xchg
stos
lock
sbb
pop
out
pop
xchg
ljmp
lcall
popf
inc
negl
cmp
ret
pop
int
imull
jecxz
push
mull
inc
enter
cmp
xor
add
adc
mov
or
es
cwtl
jno
arpl
daa
adc
and
cltd
jmp
fwait
in
js
ficoms
mov
aad
add
test
xchg
sbb
je
fisubrl
in
out
fwait
aaa
sbb
sub
adc
and
cmpsl
out
cmp
dec
call
add
sete
bnd
push
mov
sarb
stos
lods
lcall
adc
in
push
stos
shlb
mov
add
dec
aad
les
in
mov
mov
enter
js
ret
andb
push
jae
mov
cli
in
daa
inc
xlat
jb
mov
jo
pop
lahf
mov
mov
stos
sarl
cli
push
nop
xchg
add
arpl
dec
repz
dec
shrb
popa
jmp
jo
and
loope
imul
cmp
pop
test
xor
rcl
or
insl
xor
insl
adc
mov
cmc
cmp
movsb
lret
sub
mov
push
out
incb
mov
daa
or
leave
xchg
aaa
jecxz
jbe
jne
ja
sub
push
pop
sbbl
icebp
mov
mov
cwtl
insb
inc
test
imul
sti
lds
cmp
repz
or
scas
jns
loopne
lret
cmpsl
adcb
jnp
mov
cmp
aad
ret
das
inc
cs
call
sbbb
lds
adc
ret
xchg
negb
insb
mov
rcrl
movsl
jae
loop
xchg
addr16
imul
cmpsb
jp
out
movsb
push
aaa
inc
mov
sbb
adc
sbb
mov
cmpl
jecxz
popa
mov
daa
push
pop
movsl
dec
shll
inc
popa
enter
imul
jnp
push
test
pop
movsl
adc
xchg
adc
mov
in
lahf
fisttpl
cli
push
sub
mov
out
icebp
sarb
test
mov
cmp
lock
dec
adc
in
jp
and
rclb
popf
into
add
xchg
dec
cmp
jae
pop
xchg
pop
sub
mov
dec
or
cmc
rdtsc
hlt
call
jne
cli
xor
out
inc
push
adc
cmpsb
insl
jo
mov
clc
or
or
fcompl
test
cwtl
iret
ret
cli
fs
mov
decb
sbb
cmc
sbb
fmull
insl
or
test
or
push
fs
jo
in
add
in
sub
in
fdivp
nop
dec
subb
jmp
dec
sub
and
loopne
out
sahf
jbe
aam
adc
decl
add
outsl
cs
fucomp
push
mov
sbb
pop
push
push
and
inc
iret
xor
sub
loop
or
cs
cmp
test
call
inc
leave
stos
mov
mov
and
inc
push
push
sbb
gs
enter
gs
or
cmp
sub
ficoml
daa
jnp
xchg
or
xchg
fs
sub
xchg
lret
add
inc
in
sbb
or
mov
icebp
ret
pop
enter
mov
pop
std
and
jmp
xor
aas
insb
and
sub
jp
clc
inc
sbb
push
into
adc
lea
xchg
adc
push
mov
adc
jl
push
out
fcomps
or
xor
clc
mov
push
repz
mov
sbb
lds
repnz
cmp
sti
aas
test
jnp
shlb
pop
sbb
and
or
test
gs
and
sbb
xor
inc
pop
xor
lods
pop
jge
push
clc
pop
or
mov
inc
pop
sub
dec
movsl
cmp
enter
jno
cltd
and
in
inc
lret
lods
andb
shr
sub
cmpsl
fwait
mov
push
xlat
mov
bound
iret
adc
add
dec
test
hlt
sbb
mov
adc
xchg
mov
pop
ret
jg
pusha
pop
cli
jecxz
pop
mov
movsb
xchg
popl
or
in
dec
fnstsw
in
mov
xchg
push
xchg
sub
ljmp
pop
jmp
in
in
jns
and
in
fstps
xor
jp
xor
dec
push
ds
inc
test
pop
lahf
fucomip
add
jmp
adc
adc
mov
pop
repnz
push
testl
dec
test
sbb
inc
and
sbb
imul
or
add
xchg
add
dec
cmc
jp
mov
es
cmp
divb
repz
aas
cmp
inc
fidivl
sub
push
movsb
cmp
bndldx
stos
call
jne
dec
xchg
stos
dec
xor
bound
inc
fcmovnb
lods
mov
sbb
outsb
mov
push
and
sbb
push
and
test
cltd
fidivrl
cmc
cmp
fsubrs
xor
jbe
in
and
shlb
pop
cmp
mov
out
rorl
lret
lret
xchg
inc
jecxz
dec
outsb
xor
push
js
sbb
nop
test
sbb
cmp
push
shrb
nop
and
lods
sbb
imul
jne
stos
ljmp
shl
pop
mov
pop
pop
mov
ljmp
sub
xor
jo
push
inc
mov
add
pop
cld
iret
or
out
sub
add
data16
inc
or
ss
stos
jl
or
popl
sarl
cmp
inc
ret
sub
cmp
mov
and
cltd
in
mov
fiaddl
mov
lods
shlb
and
subb
sub
cmp
filds
cmp
popf
nop
push
mov
or
pop
test
nop
iret
lret
pop
xlat
lds
adc
dec
mov
std
sbb
jp
mov
pop
movsl
rcrl
arpl
or
lahf
push
inc
cs
mov
mov
repnz
push
xchg
push
imul
out
xchg
dec
out
cld
mov
jle
sbb
adc
and
rclb
sti
out
sub
pop
sbb
jnp
mov
jmp
mov
and
ds
mov
int3
xor
nop
rorb
push
pop
fldenv
scas
rep
out
mul
in
mov
jmp
adc
pop
pop
mov
dec
push
jb
push
pop
lret
cmpb
in
je
jb
jge
mov
jae
fcmovne
loope
in
fbld
fs
push
arpl
into
fbstp
xorl
inc
dec
loop
xor
addr16
mov
push
aaa
inc
push
pop
jno
push
or
int3
mov
sbb
dec
adc
ss
xorl
imul
dec
repnz
pop
jno
orl
dec
fidivrl
andl
add
inc
cmc
test
movsl
mov
or
iret
push
mov
aam
xchg
scas
dec
loope
sarl
addb
and
jp
insl
out
dec
js
daa
aam
mov
in
addr16
int
out
inc
xor
dec
lods
mov
iret
jg
loopne
sub
js
adc
push
fldpi
cmpl
xlat
add
add
pop
rcl
mov
mov
mov
outsb
push
inc
inc
lcall
test
mov
push
pop
shlb
and
pop
out
nop
arpl
mov
dec
inc
enter
lcall
add
inc
cli
xchg
sub
in
xchg
mov
push
lea
cmc
daa
bound
adc
xorb
push
jne
in
pop
add
rcrb
sarb
in
cmp
loope
add
lock
icebp
es
sub
cmpsb
xor
rolb
adcl
mov
and
xchg
jle
ljmp
sti
pop
xchg
mov
mov
or
faddl
fwait
aad
cmp
mov
pop
pop
adc
cmp
or
jne
mov
popf
and
inc
or
ret
ret
adc
add
imul
pop
pop
or
cmp
int3
insb
lds
xorl
inc
jne
ljmp
dec
xchg
mov
rcrb
loopne
stos
sub
clc
lods
cs
cmp
dec
or
outsb
int3
mov
cmp
stos
popa
jo
jno
aad
sbb
rcl
sub
enter
mov
daa
inc
jns
push
cli
and
sub
xor
push
mov
into
add
pop
sbb
iret
insb
shlb
dec
mov
push
adc
sub
mov
sub
stc
push
jnp
rcl
push
xchg
movl
and
cmp
les
mov
in
and
push
push
test
xchg
faddl
jb
pop
jb
mov
xlat
out
pop
inc
adc
dec
sti
and
lods
and
sti
jge
or
push
lret
adc
push
lcall
xor
lods
les
push
mov
std
insb
hlt
mov
mov
cmp
addr16
and
nop
mov
out
pop
fidivl
pop
sub
inc
jmp
leave
mov
xchg
inc
push
mov
and
xchg
outsl
negb
popf
movsl
iret
shrl
xchg
cmp
mov
movsb
lcall
and
int
xchg
xorl
movsb
adc
iret
icebp
pop
test
aas
push
or
rcll
loope
push
test
mov
insb
loopne
xchg
cltd
sbb
or
sub
and
rolb
mov
push
add
loopne
inc
shl
mov
lret
insl
testl
jg
cltd
dec
and
negb
adc
int
dec
adc
fisttps
inc
repz
mov
mov
jl
aad
inc
inc
dec
ss
das
cs
jge
jg
fwait
stc
arpl
nop
push
stos
je
inc
shlb
mov
jp
addr16
jmp
daa
jp
lods
arpl
mov
jns
out
lcall
es
imul
clc
faddl
fcompl
pop
mov
outsl
mov
or
and
aam
loope
aas
icebp
out
cmpsl
rclb
mov
push
mov
mov
das
cwtl
sub
push
pop
bound
jge
je
sti
push
out
lcall
push
add
inc
pop
pop
cmp
mul
add
mov
stc
sbb
xchg
or
aad
sbb
movsl
test
jg
inc
push
sub
repnz
xchg
inc
enter
cmp
fsts
push
push
sub
adc
je
jo
mov
call
addr16
stos
pusha
mov
pop
in
push
cltd
sarb
pop
arpl
pop
adc
sub
mov
ret
popf
bound
pop
mov
sbb
ljmp
ja
stc
lahf
in
mov
mov
dec
jne
push
or
cmp
pop
into
clc
xchg
inc
test
int
inc
add
aas
sbb
pusha
add
imul
loop
ljmp
add
ss
lods
pusha
mov
ss
loop
stos
lcall
imul
imul
pop
inc
lods
sub
loopne
mov
sbb
mov
cmpsl
mov
pop
stc
in
push
sbb
xchg
ret
repz
xor
pop
fs
ss
int
es
jmp
test
lcall
mov
outsl
and
pushf
cld
sarl
cmp
ret
push
adc
ljmp
sbb
and
dec
lods
mov
mov
inc
std
outsl
cmp
cwtl
xor
shlb
xlat
in
icebp
mov
scas
xor
dec
inc
cmpsl
pop
and
mov
jecxz
inc
repnz
popa
adc
pop
inc
dec
mov
add
jns
xlat
ljmp
pop
pop
stc
cltd
xor
mov
pop
mov
push
add
out
fs
adc
stc
mov
push
add
pop
mov
bound
inc
adc
xchg
jnp
inc
mov
xor
xor
hlt
cmpsl
and
fyl2x
aaa
repz
push
into
mov
sbb
fistps
aad
adc
push
push
jnp
jge
je
imull
dec
shl
mov
insb
test
cmp
ljmp
push
fidivs
je
mov
xor
sbb
or
lea
movsl
pop
clc
and
pop
bound
mov
dec
dec
adc
inc
sahf
lcall
jg
leave
cmp
sbb
add
or
out
add
cmp
xor
icebp
inc
call
add
sbb
sub
xchg
mov
jl
je
xchg
dec
or
push
shlb
sar
jecxz
lahf
mov
push
jae
and
push
sarl
int
stc
cli
repnz
cmp
cs
sarl
xchg
add
sti
mov
jo
add
mul
inc
cli
ret
imul
xor
add
mov
and
cmpsl
and
or
mov
stos
sbb
aaa
pop
jmp
cmpsb
ud2
fwait
and
bound
sbb
lret
mov
sbb
aad
enter
test
mov
test
mov
out
mov
mov
xor
lret
aas
push
cmpl
outsb
les
xchg
jl
ret
scas
mov
inc
add
cmpsl
pop
and
in
aam
pop
or
scas
stc
sub
xlat
ja
xchg
ljmp
insl
gs
sbb
iret
out
std
add
or
dec
loopne
lods
push
mov
mov
cld
mov
inc
cmp
adc
repz
sub
andb
gs
jg
jnp
xor
or
sub
adc
sbbb
cmp
or
xor
xchg
dec
xorb
dec
jnp
push
pop
orl
das
adcl
xchg
imul
sbb
mov
ret
sarl
add
cmpl
ja
mov
subl
mov
pop
add
mov
addl
sbb
jl
test
js
adc
out
mov
jecxz
sbb
mov
lods
cmp
test
lahf
push
movsl
mov
ret
mov
test
push
jns
popf
data16
mov
push
ret
mov
adc
stos
push
sub
pop
cmp
out
pop
jbe
das
xchg
dec
jno
lahf
adc
add
inc
jp
lahf
arpl
lock
scas
in
adc
xor
xchg
jno
inc
push
push
std
in
repz
jns
aaa
nop
shl
pop
rol
cmp
lret
out
add
les
pop
popf
iret
into
mov
test
repz
aaa
hlt
push
loopne
mov
dec
jno
nop
jae
push
sbb
test
and
lcall
mov
lahf
stc
or
fmull
ja
push
js
adc
mov
outsl
ja
sbb
fs
repz
idivb
mov
lock
jae
jns
cmp
mov
lea
or
pop
and
jecxz
in
add
jae
inc
je
inc
add
inc
pop
push
je
mov
mov
push
ja
mov
jb
fwait
adc
lea
stos
out
lret
jl
aad
or
fimull
pop
xor
xor
jns
cmpsb
ljmp
imul
daa
sub
dec
repnz
jmp
cmp
stos
mov
aad
ja
pushf
cwtl
jae
repz
in
into
jns
push
dec
out
sub
loop
add
test
enter
push
outsl
push
lcall
jmp
mov
scas
push
ror
imul
cld
fwait
mov
sub
xchg
jne,pt
subb
lahf
mov
xor
sbb
or
jp
icebp
jge
imul
out
jo
jns
cs
pop
inc
aas
sub
shr
imul
ja
aaa
out
sbb
repnz
pop
mov
fcomps
aaa
jge
repnz
sub
jmp
nop
jle
dec
stos
jle
subb
xchg
dec
push
push
daa
inc
es
cmp
adc
cmpsb
outsl
add
cmp
dec
dec
pushf
cs
push
scas
sar
inc
adc
sbb
aad
aad
js
sbb
lea
hlt
cmp
and
push
call
data16
aad
lock
fsubr
daa
shlb
ss
ds
shrb
cmc
or
rcl
das
rcrl
aam
jecxz
jo
test
push
popf
sub
clc
pop
imul
jne
jmp
or
stos
scas
sbb
jnp
dec
pop
fstl
lret
push
mov
mov
add
sub
jae
inc
movsb
xor
int3
bound
or
pop
outsb
repz
adc
imul
in
inc
push
push
or
dec
loop
leave
xchg
mov
imulb
int
shlb
xchg
test
lods
adc
int3
dec
pushf
pop
pop
xor
pushf
push
xor
mov
push
mov
out
imul
cwtl
mov
ret
stos
add
push
mov
data16
push
sarb
pop
sbb
ret
inc
mov
mov
scas
inc
mov
pop
xor
test
out
nop
and
and
jecxz
sub
testb
pop
dec
mov
lock
insb
pop
nop
movsl
push
enter
jns
pop
mov
movsb
mov
mov
xchg
sub
je
xchg
xorl
mov
or
sbb
cwtl
incl
sbb
jno
xor
pop
popa
dec
adc
jle
xor
add
mov
aas
nop
sbb
add
rorb
jno
lret
arpl
push
mov
jo
inc
ret
fs
jnp
dec
int3
mov
sahf
pushf
jnp
lcall
inc
xchg
jb
push
emms
jne
xchg
mov
and
std
test
push
sub
insl
push
jl
or
add
ljmp
in
ret
les
es
mov
dec
and
lock
dec
mov
lods
imul
popf
or
push
bound
ds
sbb
xor
shrb
es
das
fists
mov
dec
xchg
lret
jge
sbb
push
int
pop
outsl
jnp
int
loop
mov
xor
nop
push
cmp
and
testb
icebp
xor
mov
mov
loope
ljmp
repnz
jb
lret
jmp
mov
jns
idivb
in
cmc
testb
inc
loope
loopne
iret
xchg
stos
or
out
fs
adc
pushf
cmp
jae
xlat
in
fldt
loope
jo
vpcmpeqw
jo
notl
dec
lret
test
mov
clc
adc
in
test
mov
inc
jl
test
cltd
daa
lret
es
dec
in
sub
mov
add
mov
mov
xchg
ja
push
jo
cs
xchg
xor
xor
andb
jg
testl
xchg
sub
ds
lret
std
outsl
mov
mov
test
bound
out
adc
mov
js
dec
aad
cltd
inc
xlat
ret
mov
push
inc
xchg
ljmp
and
test
jb
lret
fldenv
pop
add
push
cmp
push
aas
movsb
imul
enter
push
outsl
loope
or
mov
or
scas
sub
push
mov
jl
mov
jb
xchg
mov
mov
bound
xor
mov
iret
insb
int3
mov
je
jae
fs
mov
lods
push
nop
inc
xchg
mov
xchg
repz
inc
aad
or
imul
es
pop
push
jo
push
push
clc
fistpll
scas
out
mov
pop
popa
out
popl
add
sbb
or
fidivs
xor
stos
lock
pusha
imul
cmp
cltd
push
sbb
fidivrl
les
mov
lock
out
pop
loopne
push
insl
or
pop
jmp
sbb
inc
pop
or
cmp
repz
cmp
mov
sbb
xchg
pushf
ds
pop
pop
loope
mov
jne
add
jecxz
cs
andb
enter
and
in
dec
mov
int3
movsb
xor
add
pop
mov
fdivl
or
push
and
and
pop
fs
ljmp
pop
hlt
bound
mov
dec
sbb
push
bound
repnz
cmpsb
pusha
lock
xor
dec
jno
inc
xchg
enter
sbb
lds
dec
and
rcr
aam
and
popf
jno
int
and
xor
inc
adc
adc
sub
outsb
out
cmpsb
mov
orb
pop
test
in
mov
in
aam
ss
push
jmp
push
pop
fisubs
adc
popa
or
lret
xchg
jb
incb
adc
xor
mov
xchg
and
test
mov
hlt
mov
mov
jecxz
stc
sub
push
fwait
xchg
mov
sbb
aad
lds
fwait
adc
aas
dec
insl
dec
xor
es
cmp
mov
es
sbb
or
jp
int
daa
stos
insl
or
fdivr
aam
cmp
or
push
xchg
or
jno
xorl
pop
pop
mov
cwtl
into
popf
bswap
ds
mov
push
scas
or
push
sub
xchg
idivb
stos
insl
pop
lcall
bound
mov
call
pop
lds
jmp
jne
icebp
movsb
lock
mov
mov
inc
hlt
cltd
cmp
dec
das
ja
inc
fdivs
sub
flds
mov
inc
mov
jge
imul
pop
sahf
dec
push
jmp
test
repnz
sbbb
lods
jmp
xchg
mov
clc
xchg
ljmp
xor
sbb
jns
jmp
das
hlt
cmp
add
jbe
dec
stos
mov
push
jg
and
sub
jge
aam
push
add
push
push
shrb
jnp
mov
bnd
out
fildll
movl
in
or
mov
into
lahf
out
adc
fisubrl
dec
ds
jbe
dec
mov
xchg
out
sub
add
in
aad
movsl
push
add
xchg
out
scas
hlt
dec
call
iret
add
shlb
nop
outsb
xchg
and
inc
inc
push
es
cmp
adc
or
std
xchg
roll
xlat
imul
add
fildll
loop
mov
fisttpll
cmpsb
adc
sbb
bound
sub
adc
cmp
xor
jo
mov
adc
mov
repz
bound
xchg
test
dec
push
imul
pop
jo
add
cmp
je
stos
mov
adc
insl
xor
das
xchg
shlb
push
scas
iret
aaa
xor
xchg
inc
test
pop
das
jge
inc
push
adc
daa
mov
sub
dec
pop
mov
popf
pop
inc
xlat
and
adc
pusha
fidivs
mov
loope
mov
sar
inc
sbb
cmp
fstpt
xacquire
sbb
pop
and
bnd
gs
stos
mov
push
idiv
and
sarl
mov
test
leave
dec
test
adc
add
push
xor
jae
mov
xchg
mov
fcoms
and
jns
das
data16
sahf
push
out
and
rcll
dec
outsl
fidivs
fs
std
enter
outsb
cmpsb
xchg
add
out
xchg
dec
mov
insl
dec
cmc
scas
mov
movsl
adc
popa
setle
icebp
loop
sbb
ficoml
dec
or
cmp
adc
jbe
cmp
test
push
lods
or
dec
add
sub
out
sub
aam
aas
sub
in
loop
cmp
lahf
mov
jle
fwait
sbbb
das
test
int
lahf
cmp
addb
mov
jae
mov
sbb
mov
daa
mov
ljmp
push
lahf
call
adc
dec
scas
sti
push
jne
xor
lods
ljmp
xchg
aas
lods
lods
je
out
sbb
mov
add
lock
xchg
movsb
dec
es
mov
scas
sarb
lcall
xor
cmp
xchg
mov
cmc
ss
sub
stos
ljmp
lods
in
jl
call
ljmp
test
popa
cli
jp
lcall
inc
int
pop
movsb
and
sbb
fdivs
lods
divb
jg
movsl
lret
jg
iret
pop
ficomps
scas
shrb
sbb
pop
xor
dec
lea
mov
mov
imul
pop
sub
jb
mov
insl
js
inc
scas
dec
or
xchg
sub
and
mov
bound
add
jno
xor
inc
mov
lret
or
cmpsl
cwtl
jb
dec
lock
sub
add
mov
pop
adc
test
dec
push
sub
clc
movsb
and
and
mov
jge
test
mov
xchg
out
int
scas
shll
jl
mov
mov
imul
push
nop
jmp
mov
sub
xchg
cmc
cmpsb
icebp
sbb
and
imul
jge
sbb
in
xlat
mov
push
stos
jecxz
mov
dec
push
xor
mov
sub
movsl
setae
cmc
cmp
add
xchg
rcrb
adc
mov
mov
icebp
cmp
xchg
leave
leave
jmp
sub
or
pop
daa
or
orb
in
sahf
lock
sbb
sub
add
addr16
sbb
sbb
add
inc
scas
add
sub
jecxz
xorps
jecxz
cmp
scas
mov
pop
inc
nop
aad
mov
and
fs
push
jb
cwtl
nop
push
or
shll
or
inc
imul
insl
inc
jns
sub
in
xchg
sbbl
loopne
rol
test
mov
mov
lret
xor
sar
mov
xchg
lahf
jecxz
loopne
ds
add
or
lret
cwtl
out
pop
or
xchg
push
fcmovne
enter
shlb
pusha
xor
loopne
pop
ss
mov
push
or
sbb
and
adc
pop
push
pop
icebp
pop
repnz
xor
aad
repnz
xor
push
xchg
adc
loop
jmp
test
add
jmp
lea
jb
rcl
mov
test
cmc
shl
call
add
mov
dec
and
je
js
mov
fcomps
jl
out
in
cld
mov
jge
fsub
stc
adc
dec
mov
fs
lods
and
insb
and
push
jl
lods
pushl
inc
and
popf
xor
jle
rolb
std
lods
dec
sbb
je
les
iret
les
dec
ret
insl
and
ds
lods
inc
ret
sub
mov
bound
sub
rorl
fbstp
jmp
leave
push
andl
mov
es
pop
ret
inc
test
test
xor
jmp
sbb
std
mov
mov
or
shl
out
jb
cmpb
or
popf
xorb
sbb
pop
mov
hlt
jg
lods
add
dec
pushf
dec
mov
frstor
mov
rcr
bsf
mov
lea
pushf
lea
jae
cmpb
pusha
pushf
pusha
lea
jne
xor
and
sub
movsbw
sbb
stc
lea
mov
or
cmp
add
pusha
rcr
dec
mov
pusha
test
push
lea
je
cmc
pusha
sub
stc
pusha
jmp
seta
lods
jmp
pushf
call
in
pusha
add
mov
mov
in
imul
push
rcll
icebp
xorb
jnp
sbb
shlb
adc
je
scas
jmp
xor
xor
xor
xchg
fdivrl
popa
int3
stos
movsb
pop
mov
sbb
xchg
add
scas
addb
decb
add
outsl
ret
adc
or
inc
mov
mov
sub
adc
mov
add
mov
ret
push
std
insb
loope
mov
imul
cmp
test
shrl
ja
adc
pop
push
loopne
push
xor
fistpll
jb
js
subps
push
ffreep
fwait
into
lret
fbstp
adc
gs
fsub
out
mov
enter
shrl
xor
sbb
subl
mov
stc
in
movb
fisubrl
push
stos
loopne
dec
dec
les
aaa
cltd
xchg
outsl
out
pop
movsl
pop
mov
shl
inc
shlb
repnz
sub
fisubrl
jl
mov
xchg
or
popa
add
xchg
aam
xor
insb
pop
dec
lcall
mov
mov
fadds
pop
outsb
xor
mov
das
lret
test
xchg
inc
or
ret
data16
nop
in
push
jle
sbb
je
cmpsl
or
push
lods
cmpsb
inc
jno
mov
lea
clc
cmp
sbb
adc
and
outsb
jae
mov
mov
shrb
cmp
mov
popa
jecxz
pusha
jno
pusha
loop
movsl
sti
jae
add
std
std
fmulp
lock
std
in
mov
xchg
hlt
mov
daa
js
jae
mov
dec
ds
dec
sub
orl
dec
repz
lock
push
arpl
push
mov
mov
jmp
icebp
je
xchg
mov
into
rorb
xor
mov
and
dec
mov
jae
test
xor
sub
cmpsl
push
xorb
loop
cmp
mov
adcb
jge
push
xor
add
mov
or
push
insl
cmc
and
lock
xchg
aad
lretw
xor
and
push
mov
and
jo
and
pop
push
in
les
sahf
sar
mov
jmp
pop
dec
in
shll
insb
inc
xchg
dec
xchg
stos
mov
xchg
loop
mov
cmp
sub
and
xchg
or
xor
sbb
jae
cmp
sahf
mov
ljmp
add
push
ljmp
subps
scas
sbb
cmp
out
arpl
loope
push
jae
xor
mov
shll
mov
cmp
rolb
lods
in
push
xor
arpl
es
in
cmp
inc
fld
sub
dec
out
xorl
bnd
loope
sbb
add
pop
inc
mov
call
aas
scas
ret
jecxz
xchg
inc
mov
cmp
int
fldcw
push
into
mov
int3
stos
mov
cwtl
in
call
imulb
mov
push
fld
test
jecxz
cmpsl
push
inc
and
xchg
add
in
cmc
movsl
xlat
test
adc
int
fstl
or
and
jne
mov
xchg
and
add
ljmp
movsl
jnp
adc
sub
inc
call
mov
scas
loope
leave
je
lods
add
xor
xor
push
test
popf
fildl
mov
lea
xchg
inc
dec
je
popf
xchg
movsl
lret
jbe
push
jmp
jae
scas
sbb
es
push
pop
bound
jp
stos
in
ljmp
in
or
mov
loopne
pop
mov
out
mov
fdivs
pushf
mov
aas
scas
mov
addb
mov
lret
ret
add
into
xor
outsl
cli
inc
push
or
xor
cmp
mov
jno
pop
push
ss
mov
xadd
xor
fistpll
or
inc
negl
pop
cmp
inc
movsb
push
pop
lock
sarb
sbb
out
ja
rol
adc
add
jmp
jmp
out
jbe
mov
bound
scas
push
push
mov
aad
mov
aam
sub
dec
cmc
push
lahf
cs
sub
xchg
and
jae
movsb
lds
sbb
push
test
jb
and
mov
inc
push
xor
jl
mov
out
xlat
and
xchg
or
pushf
gs
out
popf
fisubl
xchg
inc
add
add
or
repz
sub
and
mulb
and
dec
stc
aaa
cli
push
in
mov
sub
out
jmp
icebp
or
pop
ffreep
push
xchg
iret
add
inc
xor
xchg
mov
pop
push
add
pop
test
mov
test
dec
mov
inc
push
jecxz
mov
jmp
mov
stc
test
outsl
push
mov
scas
xor
cmpb
mov
pusha
or
lcall
adc
dec
sub
into
imul
mov
ds
or
dec
ret
test
xchg
sub
insl
jl
in
mov
in
push
mov
mov
jmp
mov
movsl
pop
sahf
cmp
jmp
mov
add
adc
mov
insl
sbb
ljmp
mov
rol
fildll
sub
adc
notb
int
mov
gs
gs
mov
pop
mov
ret
sti
into
push
arpl
sarb
dec
dec
cmp
jmp
fdivs
fistpl
fbld
jno
or
in
pop
lds
xchg
and
insb
adc
sbb
xchg
and
imul
xlat
scas
clc
and
sbb
sub
inc
push
in
mov
imul
mov
cmp
cmp
dec
lcall
mov
adc
pop
xor
pop
mov
pop
mov
ljmp
les
nop
mov
daa
push
loop
cs
ljmp
jg
test
fdivrl
aaa
mov
push
pop
dec
fwait
cli
push
jae
sbb
sarb
pushf
jb
in
sub
jne
clc
jp
sahf
je
pop
insb
test
jb
push
inc
aaa
pop
add
xchg
dec
dec
pop
lock
sub
and
data16
pop
dec
outsl
sbb
inc
push
imul
inc
je
or
xor
jo
inc
stos
pop
rcl
cwtl
pop
sahf
inc
sbb
aam
mov
lcall
cld
out
jae
xorb
jo
leave
mov
and
imul
popf
scas
ret
push
test
aas
stos
mov
xor
or
ret
sbb
lock
push
fstl
mov
lods
mov
dec
mov
mov
out
pop
xchg
sbb
je
rorl
mov
inc
addb
loopne
gs
inc
hlt
dec
inc
sub
out
pop
cmp
outsl
and
shlb
jno,pt
jb
adc
and
mov
in
pop
popa
rclb
and
outsb
mov
jno
ficoml
sub
jmp
and
dec
jnp
pushf
cmp
arpl
sub
xor
mov
jno
lahf
dec
lods
xor
jg
in
dec
push
mov
add
rorb
shrb
add
mov
dec
add
mov
pop
insb
loop
incl
or
push
mov
scas
mov
rcll
enter
fs
lods
ja
out
pop
pop
fsts
cmp
push
inc
xor
inc
pop
imul
gs
cmp
and
xor
sbb
aam
adc
pusha
aas
cld
adc
loope
loopne
scas
sbb
add
jl
popa
mov
call
add
cmc
pop
sbb
out
inc
test
filds
pop
inc
mov
icebp
fdivs
dec
mov
mov
clc
mov
icebp
js
lock
shlb
stc
cmp
out
into
cmp
xchg
adc
or
mov
mov
jg
rcrb
mov
xlat
cmp
cmpsl
int
clc
lcall
data16
sahf
es
fucomi
jb
or
cwtl
in
repnz
out
shl
in
es
fisubl
mov
jns
andl
rolb
add
inc
cwtl
dec
cmpsl
jb
cmpsb
sub
jbe
sub
lret
dec
shrb
es
jne
repnz
mov
push
pop
mov
das
lea
in
fists
aas
xchg
push
fmull
outsl
fldenv
push
or
adc
xor
cs
pop
outsl
xchg
aaa
jno
sub
stos
sbb
dec
dec
pop
mov
inc
addr16
mov
repnz
ret
fdivrs
mov
aas
add
test
inc
popf
filds
cmc
popa
jb
cmp
sbb
or
or
xor
xchg
push
into
and
out
imul
std
push
fsubl
adc
xor
cmpsb
xchg
imul
mulb
shll
push
mov
mov
mov
data16
pop
cmp
repz
pusha
fdivrl
jmp
movsl
ss
xchg
out
and
xor
mov
fstps
sbb
cmpl
mov
and
lret
mov
ljmp
add
ljmp
xchg
out
cmp
das
mov
mov
or
inc
mov
stc
int
jle
xor
aas
pushf
sbb
xor
sti
insl
ljmp
and
mov
enter
add
mov
push
lret
mov
jo
and
mov
bound
aaa
arpl
xor
mov
xchg
out
mov
icebp
sbb
movsb
dec
xlat
sbb
shlb
mov
fistps
test
psadbw
std
cmp
addl
sbb
insl
xor
push
mov
and
or
incl
jo
add
mov
xlat
jbe
out
mov
arpl
pop
in
pop
hlt
insl
stos
out
jo
push
pop
mov
cmpsb
stc
mov
fadds
adc
cmpsl
or
and
pop
add
adc
cmp
pop
stc
lret
aaa
xor
lret
xor
jbe
jp
push
cmp
inc
loope
dec
add
test
jge
movsl
rclb
inc
or
pop
fmuls
jne
pop
jg
push
push
addb
hlt
mov
add
pop
or
out
xchg
imul
into
and
or
imul
adcl
sbb
xor
test
insl
or
push
addb
ljmp
xchg
ljmp
je
push
stos
jne
or
jns
mov
xor
or
pushf
and
out
int
out
scas
cmc
out
push
push
adc
flds
xchg
cmp
int3
push
jge
pusha
mov
pop
call
jbe
ja
out
push
lcall
and
scas
and
sub
jbe
stos
testl
pushl
ljmp
inc
fldt
push
mov
cmp
cmp
bound
jns
jp
cmp
fisttps
nop
sbb
cmpsb
jb
pop
dec
jb
push
ret
aas
pusha
push
sahf
pop
int
lock
rcrb
or
cli
cmpsl
clc
fs
adc
inc
adc
xchg
jg
lds
mov
lcall
adc
push
cmp
xchg
out
das
xchg
imul
mov
mov
scas
mov
das
xchg
call
mov
push
or
es
adc
jecxz
xor
push
dec
mov
dec
xorl
cmpsb
sbb
jns
bound
pop
fs
inc
sub
lds
push
mov
in
and
push
inc
sub
lock
inc
inc
cmp
in
sub
add
sbb
dec
mov
and
or
cmc
jne
sub
ja
mov
aam
std
shlb
out
push
in
add
mov
sbb
shrb
mov
pop
call
mov
das
imul
mov
inc
insl
inc
cs
push
icebp
mov
or
cmpsl
das
and
aas
jmp
and
pop
push
mov
xchg
mov
rcl
mov
push
inc
fs
mov
ret
push
stos
pop
or
xor
icebp
push
stos
xchg
dec
adc
fnsave
push
push
aam
xchg
pushf
mov
loope
sahf
popa
mov
xlat
adc
pusha
shrb
pop
push
stc
jo
cs
sahf
and
mov
sub
xchg
push
xor
movsl
xor
push
in
inc
xor
xor
leave
mov
mov
cmp
out
rcrl
xchg
jl
fmull
rcrb
data16
adc
sbb
jnp
and
cltd
inc
push
mov
inc
mov
or
cmp
cmp
xlat
into
push
out
push
mov
rclb
fisttpll
sbb
sbb
addl
sbb
push
orl
push
into
push
dec
popf
xchg
addr16
jle
call
xchg
lahf
stc
lret
in
adc
movsl
xlat
cmp
dec
sti
aaa
into
xchg
ret
mov
ficomps
test
jo
imul
mov
sbbl
fdiv
jl
mov
popa
sahf
filds
cmp
daa
filds
emms
fisubrl
incb
sub
icebp
sub
cwtl
ja
mov
icebp
dec
cmpsb
mov
ss
fists
orb
mov
es
js
icebp
jnp
dec
mov
test
jb
dec
insb
cmpsl
xchg
in
ret
jbe
push
lods
mov
jmp
jbe
push
test
push
popf
rcrb
jl
cmc
aaa
fwait
jp
cmp
inc
add
or
in
cmp
cmpsb
out
decl
pop
sbb
mov
lcall
inc
hlt
mov
push
mov
insb
pop
push
loopne
or
stos
scas
sub
fcompl
mov
jmp
mov
imul
mov
popa
loope
sub
std
jns
mov
inc
mov
push
cmc
imul
loop
addr16
push
push
in
lock
sarl
js
dec
push
mov
sbb
fsubs
mov
jns
push
mov
jg
pop
aas
js
pop
stos
jmp
daa
and
gs
insb
es
mov
cmpsl
add
sbb
cmc
dec
and
jecxz
mov
faddl
jge
sub
or
adc
and
xor
pop
out
mov
mov
ljmp
idivb
lods
scas
lret
sarl
cmp
and
aaa
jae
dec
iret
add
jle
fisttpll
push
xor
mov
or
sbb
xchg
into
adc
ja
cmp
dec
mov
divb
in
loopne
xchg
add
jmp
sbb
pusha
mov
sbb
lcall
or
repz
jnp
lea
ds
mov
out
or
xchg
rorl
roll
insb
aaa
test
nop
sahf
arpl
xchg
leave
push
jl
cmc
movsb
lds
hlt
mov
out
xchg
imul
out
fsubrl
pop
mov
cld
or
xchg
cs
or
jne
mov
fwait
clc
xor
sub
mov
arpl
cmp
jno
stos
popa
xchg
pop
dec
mov
in
mov
mov
sub
xor
or
aas
push
nop
add
popa
lret
iret
inc
push
sub
add
cmp
mov
push
cwtl
sub
lock
push
cwtl
notl
mov
mov
repz
cmp
jae
sahf
mov
data16
adc
cmp
negl
daa
lods
cs
in
cmc
inc
push
xchg
jl
ret
push
outsl
and
inc
adc
cld
or
out
mov
mov
ds
in
fnsave
loop
pop
fwait
dec
sub
and
add
adc
fistpl
pushf
dec
pushf
lods
sbb
aad
ficoml
mov
cmc
stos
out
mull
xchg
sub
xchg
inc
adc
cmp
shll
add
test
repz
jp
fwait
repz
xor
aad
mov
dec
sbbb
dec
mov
ja
adc
pop
add
pop
in
mov
daa
xchg
add
stos
mov
cwtl
mov
out
mov
push
pop
xor
mov
imul
fisubrs
into
mov
mov
out
mov
roll
sub
cmp
adc
enter
push
jmp
sbb
aad
movsl
jo
xor
je
mov
loope
xchg
mov
stos
xchg
and
pop
inc
test
dec
and
jae
loopne
mov
int
cmc
call
stos
fsubl
lahf
push
aas
ljmp
enter
inc
jbe
jmp
inc
popa
mov
gs
mov
jl
out
int3
ret
lds
xor
mov
sub
mov
pop
ret
in
fnsave
and
repz
sub
sbb
imul
fildll
jmp
sub
incl
xchg
and
movsl
xchg
fcmovu
out
dec
test
into
pop
jg
int
jp
or
addr16
notb
and
fisttps
and
inc
dec
loopne
sbb
insb
pop
inc
clc
push
bound
jmp
lret
les
leave
ficoml
xchg
and
xchg
cmp
fcmovb
and
sbb
and
cli
pop
pushf
add
es
shll
scas
push
lsl
push
mov
sub
sub
inc
sub
push
xchg
sub
and
leave
jle
movsb
cmp
movsl
aad
mul
popf
and
inc
mov
xchg
and
sub
fcompl
pop
adc
jp
xor
sub
xchg
stc
add
lods
add
stc
popl
xor
lahf
pop
sbb
subb
bound
dec
add
mov
sbb
cmp
mov
jecxz
and
or
sbb
fisubs
mov
push
xchg
push
out
add
dec
xchg
jno
inc
ficoml
lods
popl
sub
mov
pop
or
xor
jmp
dec
sbb
divb
xchg
imul
stos
xchg
lods
push
mov
mov
pop
inc
and
dec
scas
lock
fidivrl
inc
shl
fldt
jge
daa
dec
xchg
retw
add
dec
outsl
xorl
dec
loopne
imul
sbb
enter
xlat
inc
ret
adc
jo
xchg
jmp
cmp
stc
pusha
into
xchg
inc
sbb
inc
dec
jp
inc
adc
test
jecxz
int3
and
subb
xor
loop
dec
jbe,pn
aaa
aam
inc
fldln2
xchg
es
jns
sbb
push
orb
sbb
sbb
daa
jp
lea
or
inc
jp
sbb
xchg
je
jmp
dec
jns
xor
xor
bound
mov
push
jmpw
xchg
jle
sub
mov
test
dec
imul
pop
pop
cmc
or
inc
dec
jbe
stos
or
jo
mov
std
in
sbb
es
clc
imul
mov
rcll
inc
in
addr16
inc
dec
jecxz
outsb
and
loope
xor
int3
mov
jb
cmc
mov
push
ret
les
ja
loope
jnp
aaa
js
loopne
inc
addr16
int3
dec
lock
mov
and
xchg
push
xchg
xchg
movsl
leave
add
mov
lahf
add
pop
popa
fnstsw
out
jge
fsts
pop
das
out
in
pop
fiaddl
rcll
and
push
xchg
sahf
loop
xor
xchg
pop
mov
xchg
cmp
dec
pop
fs
punpckhbw
dec
sub
jbe
xchg
cmc
mov
xchg
xchg
cmp
inc
pop
icebp
mov
add
sub
dec
shrb
xor
xorl
jb
or
scas
dec
xor
mov
mov
mov
sbb
mov
mov
xchg
lds
xor
dec
sub
jnp
shrl
jecxz
scas
in
mov
xor
movlps
pushf
dec
int3
mov
xor
iret
scas
push
push
popa
xchg
fisttpll
sub
adc
xchg
ljmp
mov
test
fs
dec
scas
mov
bound
movsb
shl
push
push
mov
rclb
mov
or
sar
cwtl
jb
add
pop
jae
xor
scas
mov
pusha
jo
lds
jge
imul
add
popa
jno
mov
jmp
sbb
or
ret
repz
clc
xchg
inc
stos
pop
mov
sarl
pusha
xor
aas
inc
jp
jns
sti
mov
dec
std
mov
inc
fwait
jle
dec
arpl
mov
mov
sti
movsl
pop
jns
in
popf
mov
enter
sub
jecxz
into
cwtl
xor
push
xchg
push
xchg
sub
fs
and
mov
stos
dec
jg
add
addr16
out
xor
call
xchg
xlat
jl
sub
stos
sub
jno
dec
in
aas
testb
fcomps
das
push
aam
xor
inc
lahf
fdivl
xchg
daa
cmpsb
xchg
adc
into
scas
ja
inc
inc
ret
mov
xor
in
cmpsl
adc
daa
test
lds
loop
fldenv
or
cmp
sarb
cmp
add
popa
mov
inc
cmpsb
mov
enter
or
dec
fwait
insl
mov
std
test
add
add
icebp
lret
mov
hlt
ret
dec
jbe
stos
out
mov
jg
fdivl
stos
inc
fdivrl
mov
sub
enter
add
add
ss
add
pop
bswap
lds
jb
xchg
loop,pt
push
cmpsb
push
data16
cli
inc
lcall
sub
push
mov
fsubr
xchg
mov
adcl
sarb
in
mov
call
jnp
das
xor
mulb
notb
pop
test
xor
push
mov
xlat
and
ja
ret
or
pop
repz
inc
loop
hlt
pop
fimull
xor
xor
add
inc
and
movsl
out
mov
jmp
imulb
stos
mov
mov
adc
adc
mov
dec
push
addr16
xor
fwait
xchg
sub
pop
enter
lret
inc
jl
sub
and
mull
in
outsl
jge
dec
outsb
sub
pop
mov
in
or
push
pusha
fwait
std
in
pop
and
int
cld
out
imul
fsubs
jae
push
mov
lahf
jno
and
dec
shll
ja
push
xor
and
popa
int
nop
fidivs
pushf
dec
loopne
mov
pusha
fcoms
movsb
sti
push
push
rep
fsubr
mov
mov
stos
push
mov
in
push
sub
cmp
sub
imul
sub
out
pop
rolb
lods
pop
das
pop
in
push
stos
add
pop
inc
fucomip
shlb
jo
lea
shrb
xchg
add
jp
sbb
inc
lods
das
cmpsb
std
push
cmp
push
mov
push
xor
roll
sbb
mov
jmp
lea
call
pusha
mov
pushf
pusha
mov
pushf
stc
mov
call
jmp
pop
pop
jmp
push
dec
loope
cli
sarl
and
inc
mov
and
iret
pop
test
stos
pop
sbb
push
mov
add
pop
adc
aaa
leave
fadds
cmp
mov
dec
shrb
jne
loope
mov
test
jl
frstor
xor
xchg
adc
divb
pop
mov
jle
es
sub
pop
push
cs
adcb
xchg
hlt
pop
int3
push
loopne
jl
lret
mov
sbbl
sti
and
test
jge
xchg
pop
ret
lods
test
shl
push
mov
xor
scas
addr16
push
test
test
cmpsb
lcallw
ja
cmp
xor
push
cmp
pushf
push
xchg
insb
les
out
mov
enter
nop
jb
jg
sub
or
push
pop
cmpsb
adc
mov
xor
scas
jb
arpl
and
xor
xorb
push
dec
inc
daa
sub
fnstcw
cmp
sahf
out
xor
sahf
icebp
in
sahf
mov
mov
xor
push
jle
dec
sub
sub
dec
lcall
cmp
popa
cltd
pop
les
xchg
fistl
xchg
lods
cli
stos
adc
lods
inc
push
bound
cli
push
lods
sbb
push
add
movsb
mov
mov
movsbw
push
clc
sar
cwtl
mov
shld
shrd
pusha
sub
shl
sbb
push
mov
push
bsf
shrd
push
not
push
cwtl
mov
jmp
push
sub
stc
clc
pushl
popl
clc
cmp
jmp
inc
push
shl
btr
and
push
btr
dec
shld
mov
shl
test
mov
test
clc
stc
push
cmp
push
pushf
jmp
add
dec
gs
popa
addr16
outsl
js
add
movw
cmc
cmc
stc
mov
call
outsb
lods
and
lahf
movsb
jnp
test
mov
pushf
or
in
pop
adc
out
push
fs
and
enter
jbe
push
lret
imulb
fldl
enter
sahf
inc
mov
int
rolb
stos
lods
push
pop
cmc
lcall
test
jp,pn
pusha
ljmp
ret
xor
cmpsb
testb
add
xchg
lahf
cli
insl
hlt
outsl
add
hlt
aas
out
mov
mov
inc
out
mov
or
sbb
inc
mov
push
cli
push
dec
pop
mov
repnz
and
gs
mov
incl
test
mov
imull
arpl
notb
xor
sub
je,pn
push
les
mov
lret
cmpsl
inc
popf
dec
dec
aam
push
xor
shrb
lcall
push
mov
inc
call
rcl
sub
in
test
or
fldcw
stc
pop
dec
arpl
test
mov
stos
sbb
sbb
pop
leave
lods
repnz
sub
orb
loop,pn
out
das
xchg
cmp
mov
scas
inc
mov
pop
lret
adc
aaa
cli
lret
jbe
pop
mov
xor
jmp
mov
inc
popf
mov
xchg
and
dec
int
jns
cli
push
dec
or
dec
rcrb
mov
loop
mov
aaa
mov
add
hlt
or
and
xchg
add
fisubrl
rcrl
insb
lcall
jg
sti
pop
push
sub
lret
mov
outsb
adc
lock
ss
fnstcw
inc
inc
sarl
mov
xor
mov
xor
movsb
mov
sub
imul
fwait
jns
push
mov
inc
lock
jmp
jge
or
std
add
orl
pop
mov
xor
lods
insb
rorb
pop
sarl
fnstenv
es
xchg
mov
stos
mov
cwtl
xor
in
sub
int3
mov
dec
in
aad
aad
adcb
cmp
fcoms
aas
lahf
jae
ljmp
inc
test
mov
jne
fbstp
test
push
ljmp
mov
shll
cld
cmp
xchg
icebp
pop
sub
loop
add
ljmp
fistpl
pusha
ret
adc
xchg
push
jne
jg
push
cmp
or
xchg
pushf
lea
jmp
sar
mov
stc
stc
jmp
lea
call
pushf
imul
cmp
jmp
push
mov
push
adc
pop
cmpsl
pop
addr16
mov
inc
dec
dec
mov
lock
mov
pop
test
mov
mov
adcb
lods
jmp
xor
jb
xor
xchg
dec
xchg
in
dec
scas
xor
cld
jg
int
cwtl
fs
push
icebp
lea
sar
faddp
cltd
pop
js
mov
jg
inc
pop
sub
jecxz
push
scas
xor
test
ljmp
push
push
push
inc
cmp
cmc
or
sahf
jb
into
dec
inc
inc
into
es
lret
pop
in
sbb
enter
mov
fsubl
add
stos
sub
cwtl
mov
fcmovnu
xchg
je
insb
inc
dec
ret
inc
xor
in
cmp
inc
add
clc
adcl
mov
xchg
cltd
and
lods
cmpsb
notl
add
add
int
adc
icebp
movsb
mov
cmp
call
fstp
cmp
or
sahf
pop
xor
leave
insl
and
mov
stos
mov
mov
xlat
rorb
push
adc
insl
pop
mov
inc
xchg
imul
aam
xchg
cmp
or
mov
loopne
int
sbb
repz
pop
add
ss
loop
movsl
push
orl
fiaddl
sbb
pop
adc
int3
arpl
movsl
je
push
cmp
loop
inc
and
jbe
mov
lea
jnp
push
movl
push
lea
jmp
js
dec
insl
dec
js
ja
xor
call
push
mov
or
enter
sbb
pop
out
add
in
lods
and
or
xchg
leave
mov
movsb
loopne
les
cwtl
stos
in
pop
dec
inc
std
mov
xchg
fs
dec
hlt
cwtl
pop
or
enter
insb
cmp
xor
les
add
push
mov
pop
popf
inc
push
dec
or
mov
outsl
loop
test
mov
push
cmp
add
adc
mov
imull
adc
shrl
jno
leave
jno
or
sub
cmpb
loope
lods
in
in
inc
cmp
xor
inc
push
mov
fxch
add
inc
mov
rorb
inc
popf
jmp
les
fistpll
loope
ret
pushf
test
jbe
pusha
repz
lods
cmp
adc
dec
pop
test
xchg
cmc
pop
jmp
loope
ret
jbe
inc
scas
push
fdivrl
add
shl
mov
bt
cmpb
pusha
lea
jne
movzbw
movsbl
xor
ror
shld
neg
movzbw
mov
shl
rcl
rcr
add
push
adc
add
mov
cmp
test
call
inc
cwtl
and
jb
xor
mov
dec
dec
shlb
sbb
push
mov
std
js
adc
jmp
xchg
dec
fsubl
jno
push
jl
fcomi
mov
lcall
mov
lods
mov
lds
aad
adc
loop
mov
lods
sbb
in
pusha
fildll
pop
negl
cmp
xor
call
mov
mov
cmpsb
ds
push
cmpsb
and
test
imul
cmp
pop
psllq
std
xchg
mov
xor
jne
js
sbb
mov
jae
mov
mov
dec
xchg
in
pop
or
ss
inc
rcrl
xlat
dec
jns
movsw
psadbw
iret
xor
or
stc
mov
pusha
rcll
add
out
aam
cli
mov
roll
xchg
in
jmp
aas
lahf
and
adc
dec
jge
push
mov
jmp
dec
std
ficoms
imul
popa
pop
mov
ljmp
push
aad
add
mov
test
inc
dec
stc
jns
cs
jne
push
pusha
ja
xchg
or
jbe
jmp
add
push
aam
push
mov
mov
loopne
mov
xchg
or
jle
jb
loop
and
outsb
repnz
aam
mov
stos
clc
in
jne
pushf
sbb
adc
xchg
xor
mov
popa
mov
popa
push
into
adc
xchg
dec
adc
push
mov
mov
nop
out
lock
or
mov
mov
dec
sbb
sahf
into
jne
inc
lcall
daa
ret
push
mov
jo
lods
sub
jl
cmp
test
lahf
movsl
cwtl
pushf
pop
cmc
xor
push
dec
mov
mov
push
lret
pusha
divb
mov
mov
in
outsb
inc
xchg
orb
jb
jl
push
adc
mov
inc
mov
call
jmp
dec
out
into
fmul
movsl
frstor
cmp
push
cli
insb
stos
sub
leave
dec
push
pushl
xchg
mov
cmpsl
push
insl
int3
sbb
xor
mov
movb
test
pusha
cmp
pushf
movzwl
neg
mov
pushf
test
add
stc
pushf
cmp
mov
cmp
test
mov
jmp
cmpb
jne
shll
shll
push
lods
xor
sub
not
add
neg
sub
neg
mov
pop
ret
enter
out
jecxz
testl
push
mov
cmp
test
pop
test
pop
sbb
into
div
fstl
add
pop
cmpsb
adc
push
cltd
xor
dec
mov
push
aas
test
incl
aas
xchg
jb
nop
mov
pop
loop
xor
mov
mov
xchg
push
call
or
je
xorb
int
or
outsb
test
gs
mov
in
sarb
je
pop
scas
call
lods
pop
loopne
pop
mov
stos
xchg
sahf
cmp
in
jae
mov
int3
push
xor
push
add
pop
out
ret
xor
or
fcmovnu
cs
add
lea
stos
lds
and
enter
and
ret
bts
pushl
movl
stc
bsf
mov
stc
clc
cmp
pusha
pushf
jmp
mov
lea
je
cmc
add
clc
cmc
cmp
push
pushf
pushf
lea
jb
jmp
inc
pop
cld
and
ss
jecxz
mov
cmp
pop
dec
int
idiv
add
test
xchg
add
call
aad
subb
cmp
mov
addr16
xchg
popa
std
fdivs
lret
xchg
lret
cmpsl
mov
sub
push
jge
jecxz
jne
xor
push
cld
push
sub
outsl
cmc
icebp
shll
cmp
inc
fcoms
fcoml
sahf
jb
pop
iret
ss
xchg
push
jmp
adc
bswap
lods
bts
xchg
and
pop
xor
setbe
shrd
pusha
sub
movzbw
test
or
stc
not
inc
add
or
xchg
ror
neg
not
neg
sub
xor
neg
sbb
rcr
sub
movsbw
push
mov
lea
jmp
call
mov
arpl
add
mov
jle
mov
cmpsb
add
adc
ds
sbb
jmp
test
mov
ss
cmp
inc
movsl
or
sbb
out
sbb
pop
add
outsb
push
mov
sub
stc
js
sahf
xor
iret
mov
iret
xchg
mov
insl
adc
sbb
cmc
push
fldl
jns
mov
popa
xorb
out
inc
pop
negl
ja
fimuls
frstor
mov
xchg
fidivrl
push
or
shll
mov
xor
xchg
jo
mov
inc
mov
inc
lcall
inc
orb
in
cwtl
adc
pop
aam
mov
js
adc
fldcw
mov
cld
lods
xor
hlt
jae
sahf
mov
jne
call
je
ja
xor
or
fmuls
jp
dec
test
inc
pusha
int3
test
add
outsb
fnstcw
decb
inc
testl
add
test
bsf
or
xchg
shl
add
sbb
pusha
sub
dec
sub
setge
or
pop
sub
shr
cmp
rcl
stc
mov
btr
add
jmp
push
lea
jne
movsbw
movb
movsbw
push
call
lea
jb
btr
cmp
aad
shrd
movzbl
clc
not
inc
shr
mov
jmp
pushl
pusha
movl
mov
pushf
pushf
push
lea
jmp
dec
push
shl
pop
dec
lea
cld
roll
jne
lea
dec
stos
sbb
and
lods
add
sub
or
fisubrs
addr16
in
xchg
fbld
sbb
lret
or
lock
andb
shlb
repz
daa
int3
push
cmpsb
pop
pop
les
shlb
pop
ficompl
dec
mov
leave
aad
fildl
fs
scas
xor
arpl
mov
je
test
pusha
test
cmp
pusha
lea
jp
je
pusha
lea
jmp
and
aam
icebp
std
jne
test
inc
mov
in
js
lret
repz
fstl
mov
fsub
sahf
mov
insb
rcll
xchg
mov
sub
mov
jmp
mov
mov
xor
mov
into
icebp
sahf
ret
scas
pop
lahf
jbe
and
aas
sbb
ljmp
pop
pop
inc
repz
daa
mov
pop
mov
daa
jge
push
inc
push
sub
adc
push
popf
xor
sbb
pop
jbe
mov
jecxz
pop
push
jb
enter
clc
cli
out
rcr
fstps
ud1
push
lahf
adc
leave
orb
xor
aad
lret
sbb
ja
fwait
popf
in
push
push
mov
mov
dec
rorb
adc
je
sub
adc
out
pop
lods
cmp
es
out
lds
mov
pop
pushf
jmp
inc
test
rolb
shlb
adc
add
in
sbb
cmp
cmp
je
add
out
std
sbb
and
jnp
popa
fadd
pop
or
repz
out
insl
push
mov
sbb
out
xchg
cli
in
push
stos
lock
mov
adc
dec
xlat
lcall
sahf
and
cld
or
leave
shrb
insb
mov
les
mov
cmp
inc
daa
jno
cmp
cmp
xor
mull
movsb
aaa
sahf
sbb
push
inc
dec
push
scas
push
pushf
lea
ja
mov
sub
bsr
add
and
mov
rol
and
cmc
mov
clc
stc
push
repnz
push
pusha
jmp
imul
aas
or
shl
imul
jg
addr16
pop
adc
xchg
loop
pop
nop/reserved
ds
mov
jne
in
std
leave
loopne
in
mov
jne
in
leave
dec
adc
cmp
pop
xor
pushf
sbb
add
mov
mov
jne
dec
mov
ss
push
xchg
and
js
stos
pop
mov
xor
les
fidivrs
mov
decl
mov
mov
lea
je
pusha
call
movl
pusha
jmp
mov
cmp
pop
lds
jno
xor
and
add
test
and
cmp
mov
add
insl
popf
nop
inc
fcmovb
stos
sbb
es
adc
or
or
adc
outsl
int
mov
mov
push
adc
dec
std
sbb
ds
jmp
mov
lahf
xchg
inc
ljmp
lret
inc
mov
jmp
mov
or
jmp
add
dec
outsl
popa
fs
imul
add
push
rorl
lock
insb
in
inc
mov
push
loop
xor
cmp
enter
aad
xor
jecxz
push
fldenv
sub
outsl
inc
jmp
add
scas
push
xchg
mov
sahf
iret
gs
cwtl
add
cmpsl
mov
lret
sub
mov
mov
call
cmp
outsb
in
pusha
lret
dec
fstps
sarb
push
mov
jl
ret
jne
mov
inc
rcll
dec
and
xchg
cmpsb
jb
fisttpll
insl
push
lods
test
cmp
out
dec
shll
sub
mov
inc
popf
repz
inc
inc
jmp
enter
ret
test
mov
les
rol
das
xchg
cmp
push
lret
inc
xor
stc
fs
cmp
loopne
rorb
mov
in
mov
xor
xchg
xchg
add
inc
faddl
xor
insb
add
xchg
aad
pop
sbb
xor
add
and
cmpsl
or
ja
arpl
and
sahf
testb
je
inc
sbb
sub
loop
mov
nop
cmp
cmp
xchg
mov
and
dec
popa
adc
je
add
stc
xchg
lret
popf
insb
pushf
pop
jbe
lret
inc
mov
fisttps
mov
push
dec
sbb
xchg
test
call
jmp
lea
lea
jmp
mov
test
or
mov
jp
push
lcall
inc
sbb
bnd
test
stos
insl
jl
add
dec
and
add
subb
mov
fnsave
mov
ficoml
fnstcw
jbe
outsl
rorb
push
in
sbb
mov
sub
cltd
push
repz
push
orb
adc
pop
mov
stos
jmp
out
mov
mov
pop
leave
pop
loop
push
dec
jnp
adc
call
lods
lock
aaa
bound
jmp
cmp
push
fcoms
es
mov
xchg
sub
das
push
mov
lock
scas
sbb
ret
in
cmp
imul
fistpl
invlpg
scas
insb
or
jne
xchg
mov
jecxz
add
hlt
dec
roll
or
gs
sub
xchg
pushf
js
cwtl
imul
adc
icebp
inc
test
cmp
inc
dec
aad
push
xchg
outsb
inc
and
cwtl
fimuls
stc
jecxz
cld
testl
sarl
xor
add
and
cmp
xlat
mov
inc
pusha
addb
out
sarl
fwait
les
dec
jmp
pop
addb
jge
add
dec
add
clc
scas
addl
xchg
es
sub
push
xchg
sarl
sahf
adc
xchg
aad
push
mov
xchg
sub
dec
sbb
dec
insl
ja
outsl
add
and
pop
arpl
ficoms
call
pop
call
rol
jmp
stc
adc
or
shrb
lds
cmp
mov
shrb
and
sbb
data16
pop
stos
mov
sti
sbb
ror
std
shlb
dec
clc
andb
insl
ret
sbb
jl
inc
push
iret
adc
xchg
add
loop
call
sbb
test
xchg
or
xor
cmpsl
push
insl
mov
rol
or
insb
rclb
push
in
mov
pusha
enter
add
sub
mov
jg
mov
xor
test
jp
in
fimull
xlat
sbb
cmp
stos
jmp
idiv
add
sub
fnstenv
dec
pop
fnstenv
mov
out
mov
add
pop
in
sub
out
sub
xor
movb
mov
bound
gs
out
roll
adc
adc
in
and
mov
xor
cmp
cld
mov
imul
cltd
subl
out
mov
push
repz
test
cs
mov
or
mov
fwait
adc
jae
sbb
addr16
mov
jb
enter
adc
push
mov
fwait
push
or
push
loopne
insb
dec
shlb
adc
nop
add
stos
xchg
pop
mov
rol
sbb
ds
cld
ja
mov
mov
sub
in
jo
sbb
mov
imul
in
int
pop
xlat
shlb
or
inc
cmp
jp
adc
pop
xchg
fistl
xor
cmpsl
pushf
pusha
sub
insb
fisttps
repz
out
mov
in
pop
mov
jmp
in
mov
cmpsb
push
pop
stos
je
push
sbb
aas
mov
ja
insl
sbb
sbb
push
dec
popf
pusha
jae
xchg
cmp
pop
mov
arpl
repz
pop
jnp
addr16
fcmovnu
push
adc
rcll
cmovae
out
das
add
and
fs
lds
add
jo
out
sarb
cs
mov
bound
popf
mov
sbb
jmp
bound
add
adcb
mov
movsb
das
inc
push
sti
pop
jne
jge
ja
pop
and
clc
int3
scas
cmp
cld
sbb
ds
hlt
outsl
inc
mov
fdiv
rorl
pop
bswap
mov
push
pushf
pushl
lea
jmp
insl
outsb
lret
fldcw
add
jns
jns
leave
inc
lods
xor
scas
xor
inc
mov
or
mov
mov
and
pop
and
pop
jmp
cmp
cltd
push
mov
jnp
inc
enter
or
popa
aam
or
jbe
movsbl
mov
lea
pusha
movb
lea
mov
push
pushf
lea
call
clc
cmp
pusha
sbb
test
test
bt
stc
lea
add
cmc
bt
push
mov
sub
sub
push
pushf
pushf
bt
lea
btr
shld
mov
and
and
dec
not
dec
adc
rcr
add
not
mov
setle
pushf
rep
not
movsbw
movsbl
mov
jmp
mov
mov
add
popa
shll
jne
cmp
mov
out
out
cmp
inc
nop
outsl
inc
pop
xchg
xchg
fs
push
cmp
pop
out
jnp
imul
fnstenv
cmp
mov
jge
inc
pop
xchg
inc
les
arpl
or
into
test
mov
jne
dec
mov
je
inc
xchg
add
xor
mov
jle
or
cltd
jmp
clc
sub
push
cmp
jmp
movsbl
pushf
lea
pushl
pushf
mov
mov
lea
call
push
call
jnp
int3
test
lock
fwait
lods
cmp
dec
clc
cwtl
adc
push
pop
pop
mov
mov
arpl
jmp
pop
dec
jge
in
icebp
or
sbb
xchg
into
and
mov
lea
lcall
inc
cmpsb
lock
pushf
mov
in
and
les
icebp
mov
mov
sbb
vandpd
into
mov
jno
pop
outsb
jmp
mov
push
xor
xor
jae
cmpsl
cmp
aas
xchg
jmp
xchg
cld
pop
inc
jl
stc
sub
or
adc
pop
or
pusha
pop
in
icebp
or
push
dec
add
mov
cmp
sub
enter
loop
pop
mov
lds
lahf
xchg
mov
and
xor
sbb
mov
dec
jmp
push
dec
xor
sahf
nop
sub
inc
sub
in
int3
push
inc
lret
int3
ret
fmull
mov
inc
mov
fldl
aaa
loopne
fsubs
add
in
push
jo
aas
ljmp
add
add
fwait
push
es
pop
xchg
inc
jmp
inc
pop
mov
rcrl
cmpps
push
pop
or
mov
cli
test
fmull
nop
sbb
jno
cmp
adc
insl
or
movsl
std
push
xor
test
sarb
leave
ss
xor
in
dec
mov
or
cmc
popa
cltd
xlat
lcall
int
mov
xchg
jb
push
dec
repz
jns
push
pop
lret
js
in
pop
mov
xor
les
das
inc
mov
adc
inc
sti
pop
add
pop
cld
hlt
dec
lcall
lahf
push
mov
mov
fmuls
data16
shlb
das
sub
rep
pop
xchg
sti
xlat
dec
cmp
clc
adc
or
and
mov
dec
int3
cs
xchg
and
mov
pop
mov
cwtl
fsubrl
inc
not
add
in
mov
mov
push
ret
aaa
lea
aaa
sti
fdivrl
mov
lret
push
js
xchg
mov
popa
ss
pop
dec
loop
jo
scas
push
fnstenv
loope
out
mov
imul
lea
jg
pusha
lea
je
bt
clc
add
test
call
sub
mov
inc
inc
mov
dec
mov
mov
scas
mov
mov
inc
adc
pushf
xchg
test
shll
mov
inc
aad
in
mulb
sbb
rcrb
pushf
mov
xlat
sub
les
xchg
mov
lea
pop
sahf
rcrb
scas
sti
push
xchg
or
inc
mov
push
push
xchg
mov
inc
fsin
inc
inc
and
xor
pushf
pushf
lea
jmp
pushf
pushf
jmp
or
jne
out
inc
das
sub
leave
popa
or
jno
call
in
pop
push
push
pop
mov
adc
xor
mov
hlt
shl
xchg
das
sahf
jae
add
popa
xor
adc
and
jmp
mov
nop
add
aad
out
insb
loopne
pop
push
add
icebp
imul
enter
rclb
lcall
mov
pop
mov
dec
mov
movsl
movsl
sub
fidivrs
mov
push
push
ja
fdivrl
lahf
popf
cmpsl
and
adc
sbbl
ficomps
popf
jle
pop
jle
sub
dec
stc
jl
xchg
or
mov
pop
dec
jle
hlt
xchg
jge
sbb
test
popf
push
sbbl
cmc
cltd
popf
dec
sbb
pop
out
popf
outsl
sahf
popf
jle
pop
jle
push
stos
es
sbb
push
xor
jle
pop
jle
push
cmp
sbb
das
jge
inc
mov
jle
pop
jle
sub
cmp
sbb
popf
ds
pop
xchg
dec
mov
sbb
std
mov
and
or
dec
lea
popf
jle
pop
jle
adc
lods
mov
pop
jle
in
mov
jle
pop
jle
ljmp
push
and
mov
dec
out
pushf
pop
pop
pop
inc
imul
popf
mov
xor
mov
and
mov
or
inc
sbb
pusha
ret
or
and
adc
ret
int
sbbl
popf
mov
popf
and
out
pusha
jne
or
jge
stc
pushf
push
push
pop
jle
or
mov
jl
jle
pop
dec
pop
sub
dec
into
stc
pushf
mov
sub
inc
mov
jle
pop
jle
ret
dec
dec
mov
jle
pop
jle
jle
xor
ds
jle
pop
jle
jb
aaa
sbb
and
lock
les
mov
jo
popf
inc
sbb
or
dec
and
testl
popf
dec
push
pop
outsb
mov
mov
popf
outsb
sbb
test
or
push
pop
jle
mov
nop
popf
jbe
pop
push
cwtl
xchg
ja
lcall
iret
lock
mov
popf
sahf
pop
pop
sahf
xchg
outsb
lea
popf
jle
pop
jle
cwtl
xor
sbb
sub
sbb
sbb
sub
and
jno
out
mov
pop
xchg
and
mov
jle
pop
jle
mov
xor
aas
mov
jle
pop
jle
xor
xor
sbb
or
cmp
pop
jle
pusha
or
sub
and
adc
dec
sub
sbb
jp
or
test
mov
mov
cmpsl
cmp
addr16
mov
push
lcall
push
cs
push
mov
cli
xlat
scas
rorb
lods
mov
call
xchg
inc
mov
push
dec
ljmp
xchg
xchg
add
add
push
cmp
inc
std
push
or
push
xchg
mov
mov
mov
imul
push
push
push
xchg
js
pushf
dec
mov
aaa
adc
in
or
and
rcl
mov
vcvtsi2sdl
mov
pop
mov
lret
les
aas
mov
mov
aaa
inc
maskmovq
mov
lret
and
jns
xlat
sub
push
mov
push
imul
int
push
data16
scas
out
sbb
js
jg
incb
push
arpl
dec
dec
in
lahf
jbe
insl
jg
iret
lds
stc
mov
inc
into
inc
fmull
mov
push
push
out
clc
insl
jmp
mov
sbb
mov
fidivs
ficomps
pop
fidivl
xchg
jp
cli
add
jb
rclb
repnz
xchg
rorl
jbe
mov
or
dec
das
jmp
jl
add
scas
inc
cmp
mov
mov
xlat
and
imul
std
out
enter
mov
pop
xchg
loop
out
push
mov
je
into
arpl
fmull
cmpsl
xchg
sbb
test
roll
mov
xor
test
mov
movsl
sbb
mov
inc
movsb
leave
push
inc
clc
pop
out
out
push
daa
add
je
movsb
sub
cmp
cmp
mov
rol
mov
das
mov
jne
cld
adc
lods
lret
repnz
add
lret
add
cmp
nopl
out
sbb
mov
stc
mov
cmp
dec
and
stos
push
lea
jg
sub
mov
sahf
mov
bswap
lea
call
pushf
pushf
pushf
pushf
movl
pusha
pushf
lea
jmp
arpl
sub
sbbl
xor
jnp
pop
lahf
jns
mov
shrb
insl
ljmp
sarb
and
mov
sbb
out
pop
push
bsf
pop
mov
xor
mov
xchg
mov
popf
pop
scas
sbb
aas
mov
push
fidivl
fstl
pushl
popf
dec
mov
dec
xor
cltd
mulb
cmpsl
aad
pop
or
lods
pop
leave
movsl
sub
icebp
mov
mov
lods
cpuid
cmp
mov
jo
test
cmp
inc
out
add
add
mov
mov
dec
push
xchg
adc
insl
ja
dec
mov
cmp
dec
mov
imul
lds
std
fs
adc
add
out
fcompl
pshufw
jp
ds
mov
jp
gs
pop
mov
cmpsl
test
xor
popf
testl
enter
mov
or
adc
jns
jnp
push
shlb
gs
pop
insl
sti
pop
jne
fwait
lahf
adc
and
add
pusha
mov
orb
sub
dec
loopne
sti
ret
push
inc
sub
push
pop
jne
ljmp
add
dec
cmpsb
xchg
pop
push
pop
out
push
shrb
xchg
outsb
push
mov
xchg
rcrb
icebp
mov
push
in
push
pop
test
push
jecxz
into
add
jp
adc
ficoml
hlt
cmpsl
ss
mov
push
push
jmp
test
loop
inc
stc
in
in
xchg
adc
sbb
mov
add
clc
or
sbb
leave
mov
sbb
jl
push
rclb
fistpll
pop
jno
cmc
push
scas
jno
rorb
addb
jns
fucomip
mov
pop
mov
and
call
push
inc
loope
rclb
jne
pop
xchg
push
mov
mov
enter
movsb
aas
mov
push
pop
es
push
cmc
cmp
mov
cmc
cmp
jmp
lea
push
jmp
jmp
movsbw
setg
lahf
lea
call
not
seta
mov
pushf
lea
jmp
movb
lea
je
pushf
movw
lea
jmp
lea
call
ja
clc
pusha
clc
add
cmp
cmpl
pusha
lea
js
pushf
pusha
lea
jne
sete
mov
pop
call
mov
mov
movsbw
not
lea
call
push
push
idivb
mov
push
xchg
pop
adc
out
loop
in
movsl
scas
adc
mov
mov
movsb
mov
rolb
inc
pusha
ss
sbb
fs
aaa
dec
pop
fnstsw
cmp
sub
dec
mov
jnp
cltd
cmp
sti
loopne
negb
pop
xchg
cmpsb
loop
inc
cmc
adc
daa
repnz
ret
outsb
push
jle
sbb
push
lea
jae
jns
xor
xor
cmc
ffree
mov
mov
push
add
ret
dec
mov
iret
mov
inc
jb
repz
dec
popf
aaa
or
iret
push
jecxz
aas
out
fldt
mov
neg
xlat
jle
inc
std
jae
mov
lret
sub
fisttpl
mov
mov
lods
adc
mov
inc
or
popa
pop
xchg
pusha
sbb
rolb
pop
les
ljmp
iret
sub
lds
add
js
outsl
adc
inc
push
lods
fs
iret
mov
mov
sub
inc
mov
pop
repz
push
into
push
mov
scas
mov
cli
mov
outsb
lret
sbb
fwait
out
add
adc
data16
xor
inc
dec
test
mull
cmc
int3
cld
fstpl
mov
insl
sbb
push
sbb
xchg
and
cli
xchg
inc
test
lock
rcrb
push
and
fdivs
mov
xchg
cmp
pusha
fisttps
pop
jmp
sarl
cmp
dec
jmp
mov
pop
pop
test
outsl
and
or
jge
sub
test
inc
popa
jnp
inc
aam
jns
xor
add
insb
les
or
shr
add
ret
fmuls
stos
inc
mov
mov
in
enter
js
inc
shrl
jp
push
daa
mov
mov
push
dec
and
xchg
xchg
repnz
inc
mov
sub
adc
ja
xor
inc
ja
clc
lret
leave
xor
sbb
repnz
add
mov
jl
add
mov
mov
mov
in
cmp
add
pop
iret
lea
hlt
xchg
std
push
jo
shrb
xlat
jge
roll
loopne
xor
add
loopne
mov
test
pop
in
test
stos
add
mov
ss
push
sete
mov
pushf
pusha
pushf
mov
lea
je
lahf
lea
push
lea
call
push
jmp
push
push
pushf
lea
jae
mov
shr
rcl
mov
add
mov
movsbw
mov
dec
bsr
pusha
rcr
mov
pusha
cmp
test
test
xor
clc
pushf
pushf
repnz
push
call
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
in
pop
dec
int3
jg
inc
sbb
add
inc
sahf
repnz
ret
loope
mov
xchg
dec
faddl
test
fildll
lea
fmull
lock
pop
push
jecxz
push
fwait
or
sub
add
js
or
and
add
iret
test
outsl
shrl
and
add
stos
push
mov
ljmp
xor
and
jg
mov
pop
pop
repz
cmp
fldl
movsb
xchg
xchg
mov
pop
cld
or
leave
fucomp
push
mov
ljmp
scas
add
mov
or
xchg
out
xchg
test
dec
fistl
xchg
aam
sahf
ds
xchg
jae
enter
and
xor
movsb
subb
sbb
adc
out
and
scas
xor
push
mov
leave
push
arpl
int3
arpl
shll
bnd
ljmp
mov
in
mov
fldcw
in
movsb
add
cmp
inc
mov
cs
jbe
inc
daa
decl
cs
xchg
loope
lock
cltd
pop
lret
popf
adc
stc
push
cwtl
in
mov
xchg
sbb
and
xor
and
popa
push
pusha
pusha
lea
je
cmc
push
call
lea
jb
push
bt
cmp
push
push
lea
jae
pusha
pusha
mov
mov
movsbw
movsbw
push
mov
push
movb
lea
jmp
sbb
lea
cmpsb
adc
mov
and
cmpsl
adc
jle
aaa
sub
pop
jo
and
gs
pop
mov
mov
lods
and
mov
vpmacssdql
jmp
fisubl
mov
outsl
cmp
jmp
jae
adc
ds
lock
fldenv
or
pop
push
loopew
dec
scas
or
mov
movsl
xor
inc
push
int3
sbbl
cmc
mov
jmp
sti
cwtl
push
xor
and
shrl
and
rorb
fxch
sbb
push
jnp
mov
mov
ss
adc
jmp
test
bound
divb
jge
xor
les
jnp
mov
xor
repz
cmpb
out
arpl
scas
mov
je
rcr
and
jge
mov
lock
rorb
dec
jmp
mov
push
cli
iret
push
mov
jmp
push
int3
in
repnz
sub
scas
sbb
out
cmp
push
push
mov
push
and
xchg
pusha
pop
iret
repz
dec
enter
and
lret
cmp
sub
rol
xchg
jb
jp
sub
pushf
mov
enter
sub
and
push
sbb
lock
or
leave
out
aaa
je
cmc
pushf
pop
add
sbb
movb
inc
fcmovnb
inc
jno
xchg
in
push
insb
mov
and
sbb
popa
push
sbb
add
mov
dec
out
mov
outsb
out
out
fisubrl
and
or
adc
aad
test
addr16
movb
bound
test
scas
or
pop
and
dec
enter
jle
ror
out
repz
sub
imul
pop
inc
fwait
sbb
insl
adc
cwtl
enter
sahf
or
or
xlat
mov
fnsave
rolb
mov
sub
bound
jmp
mov
inc
sbb
mov
shlb
jbe
pop
iret
dec
test
mov
push
pusha
stos
mov
js
pop
xor
loop
cmpsl
inc
mov
sbb
inc
in
jnp
push
les
lock
mov
or
jge
pop
or
lcall
mov
lock
mov
push
push
push
inc
push
xor
cs
insb
add
cmp
mov
jmp
mov
shll
cwtl
cmc
cmp
jge
mov
fsubp
push
mov
sbb
add
ljmp
xchg
lea
clc
cmp
std
sub
xor
repnz
sbb
and
pop
popa
add
dec
mov
out
movsb
cltd
xor
les
sub
inc
fidivrs
sbb
xor
test
mov
loopne
repnz
aaa
mov
jo
mov
sarl
push
adc
xchg
ret
jae
lret
push
sti
cmpsl
dec
lret
push
iret
aas
jecxz
dec
into
fcos
outsl
pop
mov
pop
xor
add
xchg
push
and
or
inc
scas
in
jae
dec
inc
sbb
ret
sarb
jbe
mov
mov
ja
cmp
aas
lcall
jle
int3
mov
repz
cli
in
add
sub
jbe
or
jne
sub
fs
add
test
jecxz
dec
mov
iret
jmp
int3
arpl
dec
rclb
mov
cwtl
adc
stos
mov
sbb
jl
pop
fcoml
xchg
xchg
xchg
xchg
test
mov
xor
sub
and
inc
adc
pusha
mov
sbb
and
xchg
mov
lcall
cmpsb
mov
xchg
mov
jge
add
enter
xchg
fcoml
pop
inc
push
mov
fwait
xor
cmp
jae
xor
sbb
iret
add
pop
inc
push
aaa
cmpsl
mov
mov
dec
jecxz
loope
push
mov
and
jnp
sarl
cmp
and
adc
mov
mov
out
inc
mov
add
or
dec
xor
sub
in
mov
pop
mov
sbb
fimull
pop
aaa
mov
cli
mov
fmull
outsl
into
and
repnz
adc
pushf
mov
test
filds
hlt
dec
mov
and
pushf
scas
push
jg
aas
mov
push
loopne
inc
mov
pushf
adc
cwtl
sti
aam
scas
push
je
sbb
push
jne
inc
cltd
or
pop
pop
addr16
out
jp
push
mov
lea
rep
and
jl
xchg
pusha
into
pop
pop
push
pop
pushf
mov
popf
xor
and
push
xchg
add
mov
divl
jmp
push
mov
mov
pushl
popl
mov
pushl
ret
xchg
xchg
jmp
dec
pop
sbb
lea
leave
sub
sub
es
insb
je
xchg
adc
clc
xchg
cmc
and
ret
dec
mov
out
lcall
inc
sahf
je
add
add
mov
jg
add
pushf
inc
push
scas
push
mov
cmp
in
lret
dec
aad
jmp
adc
pusha
mov
mov
jne
xor
lea
movsbl
lea
mov
cmp
cmc
clc
add
pusha
stc
call
test
cmp
call
jnp
push
ljmp
lret
imul
aas
fildll
ja
outsl
push
mov
in
lea
bound
mov
push
push
loop
mov
lar
mov
std
dec
ret
dec
das
pop
pop
xchg
in
ds
mov
les
and
sub
ja
shll
mov
or
push
mov
xorl
push
jecxz
sbb
mov
jo
add
int
jge
pop
in
aad
int
jmp
fnsave
test
jno
insl
imul
and
cmpb
add
bound
cwtl
dec
push
rcrl
sbb
hlt
xor
test
ret
flds
pop
stc
xor
mov
es
add
mov
jnp
lock
mov
mov
add
mov
test
mov
loope
scas
mov
movsl
loope
scas
mov
mov
mov
loope
scas
loope
test
scas
mov
lods
test
stos
loope
test
mov
mov
loope
mov
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pop
lahf
mov
call
call
pushf
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
enter
jmp
mov
jle
mov
out
ljmp
add
or
stc
jmp
push
add
cli
cmpsl
inc
jmp
sahf
dec
mov
addb
add
pop
scas
je
outsl
int3
mov
sub
mov
xor
outsl
fisubl
push
ret
pop
mov
inc
mov
push
es
decb
ljmp
cli
fiaddl
call
xchg
cli
xchg
and
xchg
push
add
push
pop
test
xor
push
pop
adc
pusha
push
dec
sbb
mov
or
movsl
stos
lds
stos
or
ss
enter
inc
mov
inc
shl
int3
lea
dec
or
cmp
mov
mov
inc
lock
inc
mov
mov
aaa
add
bt
cmp
mov
and
sub
mov
test
push
movb
cmp
movw
pusha
pushf
lea
jbe
bt
cmp
dec
mov
shrd
bswap
btc
setns
add
cmp
xor
call
add
loop
int
push
pop
mov
lea
jo
mov
jno
push
bound
test
sti
fstp
mov
repnz
xchg
clc
add
push
fimull
mov
push
cltd
loope
add
movsb
sub
xor
ret
cmp
inc
jne
ret
test
xchg
add
shrb
sub
mov
xchg
xchg
jo
add
decl
and
sbb
cmp
scas
push
mov
adc
lret
pop
jp
mov
adc
movl
jmp
ja
sub
sbb
adc
sbb
add
pop
aas
and
negb
push
jp
loope
dec
scas
nop
push
insl
popa
lock
pushf
or
rorb
fs
pop
mov
push
stos
push
inc
inc
xchg
inc
repz
rorl
add
les
and
int
iret
and
dec
test
movsb
gs
inc
sbb
inc
aaa
cmp
std
fstps
add
and
nop
or
pop
test
mov
sbb
aaa
cmp
mov
rolb
popa
push
jmp
xchg
int3
mov
inc
push
in
pop
jmp
inc
xchg
lret
cmp
scas
add
pop
ljmp
movntq
int
dec
out
push
fs
and
arpl
push
inc
stos
repz
shrb
add
push
outsb
and
mov
pop
pop
push
pop
mov
lret
jp
and
repz
adc
inc
fmull
fisttps
cli
pusha
pop
mov
aas
xchg
sub
jecxz
jl
jp
mov
ret
inc
mov
mov
dec
lea
call
jle
inc
or
rol
mov
push
mov
shl
cmp
pushl
pusha
add
not
cwtl
call
repz
mov
enter
test
lock
add
fsubs
mov
fs
jge
mov
xchg
fwait
orl
mov
outsb
add
and
rorb
xorl
jb
mov
pop
and
pop
pop
xor
xchg
adc
into
dec
mov
lret
lea
call
adc
ds
sbb
push
jnp
pop
dec
movsl
movsb
inc
dec
es
stc
adc
outsl
add
mov
mov
dec
call
pushf
pushf
mov
lea
call
call
cmp
sbb
call
cltd
sub
aad
sub
push
sbb
cld
hlt
in
cmp
mov
push
mov
cs
mov
es
test
mov
movsl
mov
rol
popf
out
or
das
imul
popa
add
xchg
lret
mov
in
ja
push
adc
orb
mov
dec
pop
shrl
xchg
hlt
ja
pop
faddl
jno
cmp
mov
stos
fldcw
clc
iret
les
mov
mov
in
or
jo
inc
jne
imul
dec
add
in
inc
pop
mov
out
push
xchg
add
out
imul
or
push
mov
js
cmp
cmp
dec
xor
cs
insb
add
and
out
mov
call
mov
shl
lea
call
pop
ret
call
jae
inc
and
ljmp
out
fwait
out
pop
iret
pop
call
stc
testb
mov
sub
stos
lret
test
mov
es
repz
xchg
in
dec
sti
iret
or
ret
or
push
test
leave
dec
mov
lea
jp
lret
shlb
std
cmpsl
push
sti
addr16
xchg
js
add
inc
sub
mov
decl
xchg
sbb
push
and
or
sub
sub
scas
out
idiv
mov
scas
aaa
imul
pop
sub
cmp
out
test
and
sbb
test
cmp
or
mov
adc
mov
xor
jg
mov
sbb
pop
inc
jne
arpl
xor
lret
js
scas
mov
test
aad
divb
inc
mulb
mov
sbb
inc
xchg
push
push
mov
lods
xchg
gs
call
or
fwait
dec
cli
movsl
xor
xor
js
out
fnstsw
std
test
scas
sbb
adc
popa
mov
push
imul
mov
incb
insl
les
mov
test
xchg
and
cmpsl
cmc
rcrl
ror
gs
cmp
in
test
es
inc
mov
xchg
cmpsl
jae
aaa
or
outsl
xor
pop
push
in
nop
call
ret
lcall
mov
sub
mov
or
int
mov
pop
jbe
add
int
xor
or
pop
add
sub
and
mov
xchg
push
mov
sbb
inc
lock
jmp
fiaddl
fnstsw
mov
stos
xor
sbb
rol
mov
test
adc
les
aas
fcmove
stc
out
adcl
mov
lcall
sub
ja
popf
inc
lret
and
and
in
pop
data16
add
outsl
sbb
fwait
lsl
mov
mov
xor
rorb
adcl
call
sahf
lahf
jmp
stos
idiv
scas
popf
shrb
xchg
push
sarb
push
cmp
push
arpl
and
sub
xchg
xchg
daa
or
aad
sub
aas
mov
sub
fwait
sbb
rolb
xchg
dec
adc
pop
push
cld
rorb
sub
mov
jle
cwtl
pop
lds
add
pusha
test
out
mov
pop
mov
faddl
adc
sbb
mov
inc
mov
lods
test
mov
loope
mov
scas
mov
in
out
rcr
fucom
nop
or
loopne
mov
sub
je
je
adc
iret
popa
loope
rcrb
in
in
adc
fwait
inc
test
add
push
and
enter
adc
xor
jbe
xchg
adc
xor
ja
rorl
jno
cmp
dec
ficompl
test
mov
imul
insl
and
jbe
outsb
add
lcall
ds
xlat
inc
inc
out
or
out
imul
imul
ficompl
popa
roll
add
movsl
cmc
sub
push
outsl
inc
dec
loopne
pop
test
shll
sarb
lret
pushf
popa
roll
jl
lret
int3
ret
dec
lret
push
out
push
in
push
fisttpl
in
js
sub
scas
scas
sar
cmp
lods
pushf
mov
mov
or
cmc
mov
pop
outsb
push
out
arpl
in
fisubl
outsb
ljmp
sar
mov
sahf
xorb
pushf
dec
sub
int
and
sub
ss
xchg
xor
icebp
cmp
mov
mov
loopne
cltd
movsl
dec
es
roll
cli
das
mov
pop
sbb
push
jo
and
lea
setbe
call
fisttpll
movsb
or
mov
sahf
les
es
out
push
xchg
adc
lods
mov
stos
and
cli
jnp
jmp
lock
add
pop
je
xchg
lods
ja
pop
mov
push
sarl
stc
push
fdivs
sub
lock
jns
adc
xchg
push
pop
xchg
std
gs
jecxz
push
push
fidivs
pushf
adc
sub
bswap
inc
adc
jo
pop
pop
nop
or
imull
xlat
cmpb
push
push
iret
inc
fnstsw
lret
pop
imul
dec
scas
mov
in
test
xchg
in
dec
shll
xor
and
test
cmp
ljmp
dec
pushf
sub
int3
cmp
push
sub
imul
xchg
push
int
adc
mov
mov
icebp
mov
xchg
sbb
sub
push
xor
xor
cltd
std
mov
stos
and
jecxz
daa
ror
ss
popf
outsb
mov
arpl
and
pop
sub
push
xor
mov
push
xchg
add
je
xchg
mov
pop
push
out
xchg
push
xorb
xchg
pop
pop
sub
xchg
and
add
jp
scas
lcall
mov
shll
xchg
or
jle
mov
in
push
pusha
jmp
cmc
cmp
jmp
lea
je
pusha
bt
jmp
cmp
in
mov
test
jl
test
nop
inc
rclb
xor
enter
push
dec
xor
xchg
sub
mov
push
dec
add
fwait
aas
aad
ljmp
mov
movsb
jl
stc
popa
rorb
mov
jbe
or
mov
sub
adcl
cwtl
mov
add
inc
xchg
sub
aas
rcll
arpl
cmp
scas
or
jb
xor
or
add
call
mov
sbb
mov
pop
or
push
addb
sub
xchg
lods
inc
mov
scas
lret
mov
andb
mov
out
into
cwtl
pushf
mov
mov
pop
divb
addr16
jnp
fnstcw
ds
dec
enter
stos
inc
jno
out
and
mov
jl
repz
or
jae
jmp
cmp
decb
mov
jg
dec
push
sbb
addb
outsl
jno
jbe
inc
mov
dec
loop
cmp
inc
cmp
hlt
sti
cs
or
jle
test
cld
shlb
loop
dec
cmpsb
cwtl
xchg
dec
andl
cmp
fwait
jmp
lcall
adc
add
push
push
outsb
and
pushf
mov
cmc
push
push
mov
and
call
add
ljmp
add
popf
cmp
add
aad
jns
dec
imul
es
std
movsl
mov
out
push
inc
pushf
mov
stos
lahf
scas
cmpsb
sub
jecxz
xchg
mov
cli
cs
scas
xor
mov
outsl
mov
xchg
cmc
mov
popf
pusha
lods
out
dec
lret
mov
sub
sbb
pop
shrb
push
mov
loop
add
sub
jne
fs
ja
jmp
cmp
xor
test
arpl
pop
add
jge
adc
sub
push
and
cwtl
sahf
js
inc
xor
sbbl
icebp
pop
out
pop
fbstp
mov
xchg
into
divl
sub
mov
sbb
dec
xchg
cltd
mov
push
test
cld
mov
ss
loope
jl
testb
cmp
jbe,pt
cmp
aas
sbb
lock
in
cmc
mov
jbe
testl
add
sub
dec
xor
test
sbb
ret
inc
add
lea
lea
insl
jle
or
mov
int3
cmp
cltd
cmpsb
sub
mov
pusha
sete
movzbl
movsbw
mov
pushf
mov
push
lea
jmp
mov
xchg
ds
out
mov
ficoms
ljmp
lahf
mov
gs
ret
jno
fs
aad
fdivr
and
jo
ja
jae
movl
xor
lods
pop
xor
push
or
pop
push
push
jge
sub
and
and
test
adc
insl
sub
jns
push
fimuls
adc
jne
xor
sbb
dec
fwait
cld
ljmp
mov
jb
add
mov
popa
xor
mov
rol
fstl
cwtl
in
cmp
stos
cmc
in
daa
roll
and
aad
or
cs
jle
jl,pt
loope
or
adc
pop
mov
dec
xchg
xchg
dec
fnsave
mov
adc
inc
xchg
fwait
inc
mov
dec
xchg
bound
fiaddl
sub
add
cs
cmp
ljmp
push
mov
dec
mov
test
xchg
and
xor
in
inc
shl
scas
or
test
push
outsb
add
lret
call
cwtl
nop
jne
sub
lods
xor
push
cli
push
in
mov
call
sub
rolb
shrl
aaa
lock
pushf
push
jp
inc
push
mov
addr16
aad
and
scas
lods
xchg
iret
add
jp
mov
mov
jo
dec
call
icebp
cmp
cli
jae
mov
adc
adc
add
jns
stos
add
or
push
jbe
jae
pusha
xchg
sub
dec
les
mov
xor
mov
lea
mov
mov
mov
sarb
rdpmc
xor
pop
test
sbb
push
cmc
mov
push
add
addl
inc
stc
push
jbe
shl
out
imul
lcall
call
cmpsl
xor
addr16
and
push
shlb
dec
and
xchg
cmp
std
mov
cwtl
xor
into
mov
ss
sahf
stos
iret
imul
inc
sbb
fidivrs
mov
dec
and
cmp
adc
shrl
mov
or
cmp
out
sub
popa
adc
enter
push
mov
and
nop
repz
shrl
mov
mov
icebp
xor
adc
or
pushf
test
cmp
fsubr
outsl
xorl
sub
and
mov
mov
pop
movsb
adc
jecxz
out
push
ret
mov
loopne
lret
subb
inc
cmpsb
jo
dec
adc
mov
xchg
or
or
mov
xchg
shr
jae
incl
ret
stc
call
sbb
mov
nop
ja
push
sbb
jp
jbe
bound
lds
dec
add
xor
adcl
push
inc
lds
mov
rcrl
push
sbb
fcoms
pop
fcoml
rcll
test
fstpt
pop
add
shrb
es
or
movsl
dec
jno
xchg
and
and
std
pop
and
push
call
aas
lcall
mov
push
shl
jmp
add
pushf
lea
jmp
mov
call
pusha
pusha
lea
jb
push
push
push
cmpb
pusha
call
pushf
pushl
popl
mov
pushl
ret
popa
mov
mov
pop
scas
and
ja
dec
aas
mov
xchg
jns
push
jl
nop
xchg
push
adc
movsl
ss
jp
adc
pop
inc
jbe
cld
insb
outsb
aad
mov
sahf
add
xor
cmp
mov
rorb
popa
ss
je
xor
rclb
add
movsbl
popa
fadds
pop
mov
push
sarl
xchg
mov
rorl
mov
rol
bts
mov
shl
bsf
shr
mov
movsbl
shld
add
mov
pushf
rcr
not
sub
test
btc
btc
mov
or
mov
xor
inc
cwtl
lahf
sub
jmp
lea
jb
call
add
inc
outsl
outsb
jbe
jb
push
imul
outsb
addr16
imul
lods
cwtl
xchg
push
inc
popa
add
or
jmp
and
gs
push
dec
cmp
pop
clc
cld
push
jg
sarb
add
ljmp
aad
out
std
push
leave
sbb
mov
or
jne
lret
push
mov
xchg
jbe
fiadds
iret
push
dec
fwait
repnz
mov
mov
insb
int3
shrb
repz
xor
push
and
out
shrb
scas
cmpsl
sub
push
cli
lods
subl
andl
test
sub
iret
stos
arpl
mov
icebp
push
sub
roll
sbb
and
mov
jp
jge
sbb
das
stos
ret
movsb
jo
data16
shll
fsincos
cmp
arpl
mov
ja
cmp
dec
jecxz
or
aam
out
mov
pop
lea
ja
call
pop
sub
mov
pop
fldt
mov
mov
mov
arpl
ror
mov
dec
inc
cmpsb
mov
shll
shr
lret
pop
xor
fs
sub
pop
fldenv
out
fmulp
mov
mov
mov
adc
mov
jae
pusha
sti
fwait
and
mov
push
mov
push
into
andb
mov
xchg
or
dec
lret
mov
in
bt
add
pusha
lea
pusha
lea
call
call
jne
inc
pop
lret
adc
mov
xchg
hlt
jl
je
nop
add
dec
inc
xor
js
inc
int3
mov
mov
push
adcb
mov
rol
rcl
cmp
pop
je
cmp
fiadds
dec
out
mov
outsl
inc
in
adc
int3
sub
dec
sub
pop
cmp
pop
xchg
icebp
mov
mov
lret
aad
cwtl
bswap
mov
bswap
call
jmp
push
leave
mov
pop
xor
mov
dec
jmp
popa
rcr
ret
fimull
add
std
and
add
rorl
sti
push
rcrl
and
inc
and
and
mov
mov
es
popf
push
mov
in
mov
mov
push
or
inc
mov
jns
mov
fdivrs
div
add
push
xor
add
loopne
and
int3
push
push
shr
icebp
sub
inc
xor
mov
aaa
arpl
sti
into
jbe
hlt
shrl
fld
sarb
add
jne
outsb
mov
loope
cmp
addr16
add
shrb
loop
sbb
mov
sub
aam
xor
dec
daa
mov
test
mov
mov
mov
push
movsbw
call
push
cmp
movsbw
setne
lea
pop
mov
lahf
pushf
mov
push
pushf
pushf
lea
ja
call
movb
mov
push
lea
call
jmp
mov
xor
mov
dec
and
mov
xchg
dec
push
pop
loop
xor
jmp
lret
push
inc
stos
mov
push
dec
sub
inc
fdiv
fiaddl
mov
pop
push
fistl
mov
jo
int3
push
cli
xor
adc
xor
cmp
xchg
ds
adcb
jae
and
push
inc
lods
and
sarb
test
js
call
and
pop
dec
mov
js
fadds
jns
aas
lcall
mov
data16
sub
adc
mov
push
mov
dec
dec
xor
fsubrs
cmc
push
xor
cmp
je
mov
add
dec
dec
adc
push
lods
sbb
inc
jnp
mov
cmp
and
pop
mov
inc
subl
cld
xchg
repz
enter
mov
mov
arpl
pop
inc
ret
iret
pop
sub
push
jmp
sub
xchg
enter
xchg
sti
inc
jo
lcall
incl
push
jle
mov
xor
pusha
cmc
cmp
pushf
pushl
mov
lea
jb
test
cmp
jmp
sti
dec
xor
dec
lret
lret
sahf
jne
add
cs
sbb
mov
sbb
lcall
cmc
mov
adc
idivl
stos
adc
xor
fistpl
jg
fmuls
addb
pop
fmuls
pop
mov
jmp
enter
xor
dec
pusha
insb
push
mov
cmp
pop
sub
or
in
adc
outsb
cs
mov
repnz
ficoms
pushf
in
cmpsb
ret
or
stos
cmpsl
mov
jg
pop
or
xchg
dec
ss
add
sbb
mov
div
divl
jmp
xchg
push
adc
jmp
lahf
not
cmp
popa
or
hlt
addb
in
cltd
adc
movsl
loope
imul
add
mov
scas
dec
adc
test
jge
mov
xchg
xor
movswl
dec
mov
mov
xor
push
test
dec
cli
test
call
nop
fistl
fs
cmc
jl
mov
push
call
adc
stos
mov
lcall
adc
or
outsb
jae
jne
jp
je
inc
les
gs
xor
adc
dec
inc
add
insb
sahf
add
mov
popf
add
insl
mov
cmp
movsb
xchg
dec
mov
packuswb
callw
dec
out
aaa
xchg
jecxz
ja
scas
daa
int3
fsubrl
jo
arpl
insl
shrb
sub
int3
lret
iret
jb
mov
mov
pop
push
lea
cmc
mov
add
pusha
jo
mov
sbb
js
and
sub
popf
mov
bound
in
push
pushl
and
mov
xlat
xor
xchg
stos
or
adc
das
mov
cmp
pop
push
adc
cmp
and
mov
jb
jmp
ljmp
jp
mov
scas
cld
pushf
faddp
push
mov
sub
in
imul
shrb
mov
js
cs
cmpb
jmp
pushf
movl
pusha
pushf
lea
jl
push
movl
pusha
pushf
lea
jmp
not
clc
add
clc
mov
call
jmp
cmp
call
adc
lea
out
aam
push
cmc
insl
lds
jns
jno
in
js
mov
daa
mov
les
xchg
fwait
or
fucomip
ret
cmp
dec
test
mov
mov
lret
jecxz
xchg
mov
jmp
add
mov
fnstsw
mov
aas
inc
fs
adc
outsb
pop
das
cmp
insb
fcomps
mov
sbb
jge
mov
or
add
scas
cmpb
push
adc
icebp
cmp
sbb
xchg
or
pop
fidivl
imul
sbb
mov
mov
add
insb
je
inc
jns
gs
outsl
push
imul
outsl
addb
jmp
mov
int
in
in
xchg
sbb
xor
pop
dec
shr
icebp
negl
xchg
fsubr
imul
inc
imull
js
jno
dec
fcmovnb
lock
jno
mov
add
test
iret
dec
lea
aam
out
mov
fdiv
clc
add
ss
aam
ss
mov
xchg
cmp
or
jle
and
pushf
or
lds
leave
push
jl
push
daa
push
mov
xchg
mov
xchg
out
mov
jb
nop
push
mov
sub
inc
push
mov
movw
push
lea
jb
aad
clc
bsf
movzbl
cmp
shr
pusha
clc
push
pusha
imul
pushf
pushl
jmp
movzbw
mov
pusha
pushf
movb
push
lea
jmp
not
cmp
shr
movzbw
lea
call
call
in
cli
jle
xor
mov
lods
xor
stc
xchg
dec
add
int3
pop
aam
mov
sbb
pop
dec
cmp
sar
lods
aaa
repnz
pop
pop
cs
lea
rorb
into
testl
fstpt
xchg
cmc
imul
addl
xlat
jb
mov
xchg
mov
sbb
sbb
arpl
mov
test
pop
fdivl
push
mov
fs
jle
scas
pop
aas
dec
pop
sub
shl
cld
imul
mov
enter
mov
or
fsubrs
inc
mov
addl
cmpsl
lods
mov
popf
stc
and
test
inc
or
std
mov
jecxz
or
xor
cmp
das
stos
xor
orb
rclb
inc
push
repz
cmp
shlb
jae
insb
mov
test
movb
movl
pushf
push
pushf
pusha
lea
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
roll
rcl
mov
bt
pushf
shl
stc
test
jmp
lret
push
mov
inc
and
lods
add
in
cmp
add
fsubr
dec
imul
xchg
lahf
lods
pop
mov
mov
loop
dec
push
mov
rcll
fisubrs
adc
in
shll
jne
lods
js
and
jmp
insl
stos
cld
cmp
jbe
pop
mov
lret
imul
dec
fwait
pop
aam
daa
sub
in
inc
dec
inc
aas
push
sub
jl
or
jbe
ret
add
or
push
cld
orl
xor
push
test
cmp
mov
mov
push
call
sub
jg
in
sbbb
aam
jo
push
clc
jo
add
pop
imul
mov
mov
test
and
movsl
lahf
push
push
lock
addr16
out
fcmovu
dec
and
icebp
pushf
push
dec
pop
pop
movsb
and
adc
inc
mov
jo
cmp
out
mov
add
inc
push
push
fistps
cmp
push
jns
pop
xchg
mov
sbb
movl
and
jne
sbb
mov
movsbw
mov
bt
adc
xor
mov
btc
btc
setg
mov
rcl
and
clc
mov
jmp
lea
jb
rol
cwtl
mov
neg
test
not
jmp
jae
sbb
mov
jae
das
mov
push
ret
xor
lcall
push
std
scas
aad
sbb
mov
mov
mov
sub
sahf
add
pop
push
sub
sbb
rorl
sbb
stc
push
sbb
pusha
out
cs
mov
push
lcall
ds
icebp
push
mov
adcb
dec
mov
loopw
aam
fnstsw
pop
lea
jae
jmp
adc
or
imul
jae
jae
imul
das
xchg
or
mov
int
jmp
lahf
jl
insl
mov
hlt
fldenv
fs
rcl
cmp
loop
ret
aas
cli
or
sub
sub
in
mov
fistl
cmpsb
out
rorl
mov
cli
popf
inc
ret
and
sub
xchg
add
inc
and
pushf
pushl
ret
mov
inc
addr16
out
dec
dec
xor
or
add
iret
and
pop
adc
lret
push
mov
add
or
enter
cwtl
cmp
and
mov
mov
mov
in
xchg
cmp
stos
mov
push
lds
mov
cli
and
out
dec
mov
out
pop
fists
aaa
xchg
jae
pop
xchg
sub
cmp
sbb
and
outsl
mov
rol
xchg
mov
and
jmp
mov
les
inc
into
mov
scas
out
pop
in
and
push
xchg
cmp
lahf
pop
stos
xor
inc
add
jbe
popf
add
add
inc
mov
xor
fldt
fsubrl
jbe
popa
fxch
inc
popf
std
lea
jge
inc
lock
pop
sbb
daa
jmp
fdiv
cmc
jnp
pop
add
movsl
and
add
ficomps
push
adc
movsl
pusha
adc
mov
loope
lea
in
leave
in
sbb
dec
jmp
mov
sub
mov
std
sub
mov
jp
sarl
jae
add
or
mov
les
mov
or
dec
mov
fmuls
inc
mov
jb
das
daa
pop
adc
sub
mov
add
push
scas
and
lahf
mov
pop
mov
jge
dec
lahf
pop
test
shrl
stc
xor
pop
add
loopne
and
mov
sbb
fbstp
out
shrl
ret
jle
testb
push
mov
aaa
test
outsl
sub
repz
dec
rorl
push
aad
jmpw
push
mov
mov
cmp
jmp
mov
movzbl
call
pop
ja
inc
aad
in
sbb
std
stc
imul
mov
jno
inc
sub
xor
nop
fucomip
call
inc
jnp
stos
subl
cmp
lock
push
xor
and
test
sti
xchg
xor
ficoms
jb
xchg
test
and
lds
lret
jnp
lea
mov
jne
mov
sbb
subl
decl
incl
shl
mov
bts
movsbw
call
inc
mov
clc
cmpb
pushf
lea
jne
or
inc
shr
xor
not
pusha
mov
lea
pushf
pushf
lea
jmp
lea
call
stc
add
push
mov
cmp
cmpl
mov
pushl
lea
jne
setae
pusha
pushf
movzbl
mov
jmp
popa
mov
cmp
mov
leave
cmp
inc
mov
loopne
jecxz
ds
sti
repz
xor
push
cmp
sar
gs
in
imul
xchg
insl
push
jmp
add
push
mov
test
lods
mov
int3
lahf
int
sub
xor
adc
imul
mov
stc
test
scas
adc
scas
cld
push
scas
adc
loope
sti
pop
aad
testl
mov
mov
call
test
add
push
add
addb
add
mov
add
add
or
add
add
jle
or
add
add
inc
pop
or
add
add
jmp
or
add
add
mov
add
add
add
add
push
or
add
add
mov
add
add
add
add
add
addb
add
loop
or
add
add
xchg
or
mov
or
lods
add
add
or
dec
or
add
add
add
cmpl
leave
mov
cmc
add
lea
mov
mov
cmc
mov
cmp
jmp
into
fistps
ljmp
lret
ds
mov
pop
push
mov
jns,pn
in
adc
add
or
jle
push
js
testl
xchg
xchg
jg
dec
out
jl
pop
in
jae
adc
mov
pop
fldcw
arpl
rcrb
dec
inc
push
int
cmp
ljmp
loope
stos
outsl
pop
inc
cwtl
push
sahf
popa
nop
repnz
inc
dec
mov
fiaddl
call
pop
and
je
stc
push
test
stc
sub
cmp
clc
cmp
pushf
jmp
insl
xchg
sbb
insb
sub
mov
les
mov
mov
lods
fdivl
jp
notb
mov
mov
sbb
push
pop
dec
mov
lcall
jl
or
cmp
fisttps
fcmovnb
sbb
mov
jl
fs
pop
les
test
xor
fidivrl
and
and
mov
mov
dec
cmc
xadd
mov
bswap
test
mov
setle
or
mov
cmp
mov
push
clc
xor
pushl
push
inc
pushl
push
pushf
not
call
mov
sub
nop
in
shll
jge
jge
pop
movsl
adc
int
fmuls
push
stos
mov
fs
flds
sahf
xchg
test
jge
and
test
pushf
or
fsubs
je
mov
ja
adc
imul
dec
pop
or
ret
mov
fdivs
movsl
jl
in
mov
sbbl
outsl
mov
inc
sbb
sub
addr16
xchg
inc
cmp
sub
in
push
fldt
mov
mov
add
jmp
add
add
hlt
push
mov
fstps
mov
cmp
cltd
lcall
xchg
call
jo
out
sbb
int
arpl
sarb
push
cwtl
pop
ret
push
cwtl
loope
fisttpl
mov
or
or
in
mov
insb
je
lahf
sarb
mov
nop
adc
mov
xchg
jnp
mov
ja
lods
cmp
cli
jno
aas
push
mov
nop
popf
cpuid
nop
jmp
cmp
mov
lahf
and
movsbw
mov
btr
cmp
sub
shld
sub
pop
cmc
and
jmp
pushf
pushf
call
add
inc
outsl
dec
outsb
imul
add
scas
mov
xor
aas
xchg
stc
mov
mov
pushl
cmp
das
scas
dec
dec
scas
fwait
mov
scas
shll
push
pop
inc
shr
mov
xor
or
pop
jmp
les
dec
adc
enter
xor
arpl
test
testb
cli
add
div
inc
push
fsubrs
adc
or
inc
jbe
fisttpl
psllq
mov
and
xor
add
mov
pushf
movb
pushl
ret
pop
pushf
push
mov
pushf
pushl
ret
popa
mov
push
add
inc
sbb
xor
xchg
sbb
xorb
lods
mov
add
jmp
or
xchg
lret
cmp
sbb
pop
stos
and
xor
lcall
testl
pop
out
xchg
aaa
jmp
pop
ret
cld
push
fwait
dec
cmp
mov
xor
test
scas
jg
jle
xchg
mov
icebp
popa
xlat
addr16
sti
movb
jge
jbe
divb
pusha
cwtl
idivb
inc
dec
popf
mov
sbb
pop
cli
stc
loope
dec
rorl
dec
jae
cmpsl
xor
cmp
scas
adc
pop
lds
dec
mov
jmp
sbb
fs
xlat
lahf
pop
shl
sbb
dec
movsl
jmp
rolb
loopne
mov
adc
push
nop
or
lea
jne
not
movb
pusha
pop
movsbw
mov
pusha
setbe
movw
lea
pushf
movl
pushf
mov
pushf
push
pushl
pushl
ret
mov
movb
not
setae
mov
jmp
dec
enter
lods
xor
incl
orb
jl
pusha
mov
je
and
fdecstp
ret
mov
int3
mov
xchg
cmp
mov
ror
adc
imul
test
insb
cmp
add
jg
jo
mov
pop
iret
push
and
lcall
ss
pusha
pushf
nop
cmpsb
movd
movsl
dec
lahf
jns
pushf
lahf
mov
jge
das
mov
push
notl
mov
sub
add
lea
ja
jmp
jmp
neg
pop
btr
inc
lahf
pop
clc
shld
stc
shrd
pop
aas
neg
das
movzbw
pop
movzbw
pop
aaa
pop
jmp
call
stos
or
add
push
lcall
sub
out
jne
ret
dec
mov
adc
lods
fwait
jecxz
sub
mov
mov
in
in
setns
arpl
xchg
gs
inc
out
push
imull
dec
cmpsb
and
or
push
pop
sub
pop
mov
push
ja
cmp
mov
lods
inc
rclb
pop
push
mov
cmpsl
mov
cmp
movzbw
bswap
lahf
mov
lea
not
movzbl
mov
jmp
jle
lea
ret
and
fstps
dec
shll
sbb
dec
lock
and
popa
pop
and
testl
or
xor
repz
and
cltd
aad
or
mov
mov
xor
jb
mov
sub
xchg
leave
jmp
cmp
add
xor
xchg
adc
ja
sahf
clc
les
pop
clc
arpl
dec
rorb
jno
jle
push
xchg
pop
sub
jae
dec
test
in
fdiv
rcl
cmp
dec
in
sub
sub
loopne
dec
repz
inc
and
ror
mov
add
out
ja
dec
arpl
out
out
cmpsb
scas
xorb
pop
push
repz
xor
cmp
out
ret
out
into
inc
scas
stos
cltd
xor
mov
pushf
inc
sub
lods
pop
scas
and
les
or
mov
add
call
pusha
push
pusha
call
inc
mov
repnz
gs
aas
fists
jg
fildll
mov
or
fwait
rcrb
mov
sbb
xchg
xchg
mov
inc
cwtl
imul
in
xchg
add
sbb
stos
and
mov
dec
call
xchg
mov
cs
sub
rcrb
mov
cwtl
lock
mov
pop
addb
test
lock
stos
and
shlb
arpl
adc
jb
xchg
mov
mov
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
or
inc
sbb
int
fmul
enter
cmp
cmp
stos
pop
repz
jno
push
dec
aam
inc
lcall
outsl
xchg
pusha
dec
jle
fiaddl
and
dec
dec
dec
add
ljmp
adc
cmp
xor
fcoms
dec
test
int3
fnstsw
add
push
sub
xchg
inc
das
push
jo
ljmp
cmp
add
lock
xor
inc
xchg
repnz
mov
pop
sub
ja
or
push
int
mov
dec
sub
jl
mov
dec
jle
in
mov
movsl
or
scas
mov
outsl
and
movsb
mov
fsub
push
mov
int
imul
push
cmc
pop
mov
cmp
movsb
push
xchg
or
loope
cs
lods
fdivr
xorb
push
iret
cmp
xor
rolb
int
xchg
je
call
hlt
int3
aas
shll
sub
add
outsl
ljmp
cli
push
mov
mov
push
repz
mov
adc
push
cmpsl
xchg
add
mov
ret
scas
js
adc
mov
push
cmp
mov
push
leave
inc
popa
in
movsl
pop
cmp
popa
inc
mov
cmc
jae
inc
sub
ljmp
in
push
repz
cmp
mov
and
inc
loop
inc
inc
leave
fimuls
out
push
les
sbb
mov
pop
jns
xchg
or
sti
pop
jge
cltd
fbstp
pop
mov
xor
mov
les
loopne
fnsave
hlt
jmp
pushl
pusha
jmp
sub
clc
shl
rcl
mov
test
stc
test
push
sub
clc
cmc
clc
pushl
popl
jmp
pushf
cmp
call
jmp
imul
arpl
shrb
xchg
adc
sbb
inc
stos
lods
xchg
sub
or
inc
push
mov
lock
push
negb
dec
mov
fwait
sbb
aam
out
lcall
lcall
or
mov
cmp
push
lahf
jge
push
pop
dec
mov
shll
pushf
loope
aam
repz
std
fbld
adc
popf
jmp
mov
cli
popf
adc
push
jno
sbb
mov
gs
jae
mov
in
sbbl
xor
lods
xor
cltd
mov
aas
mov
or
pop
xchg
and
cmp
jp
out
int
aad
push
scas
and
xor
pop
inc
mov
pusha
in
or
les
insb
das
pop
ficompl
jg
popf
call
test
loopne
repnz
jnp
shll
dec
mov
bound
push
xchg
push
pusha
shr
rorl
inc
inc
and
test
add
test
bt
shr
mov
stc
add
bt
movzwl
call
sub
pop
and
clc
rcl
je
test
mov
mov
jo
adc
les
push
mov
movsl
scas
inc
and
mov
pushf
in
stos
fcoms
mov
mov
and
jg
test
in
mov
pop
pop
cmp
cs
mov
fidivl
int
hlt
out
pop
inc
or
xor
mov
in
aam
push
xchg
lret
fsubs
push
jno
fsubl
test
movsb
cld
test
in
mov
cwtl
or
das
dec
cmp
imull
imul
das
pop
adc
test
int
inc
xchg
popa
xchg
and
add
jae
in
push
shrl
mov
lahf
xlat
aam
xor
add
loope
mov
or
push
adc
xor
mov
or
data16
cmp
dec
shlb
cmpsl
mov
mov
cmc
clc
add
jmp
lea
push
mov
lea
jmp
lea
je
push
or
pusha
lea
je
pushf
lahf
xor
sub
shld
daa
pusha
mov
dec
mov
shld
shld
pushf
shr
add
shl
mov
test
cmp
or
pushf
jmp
mov
dec
dec
pop
out
arpl
stc
lods
push
add
adc
fnstsw
cmp
js
data16
andl
rolb
shrl
mov
lds
xor
push
cwtl
inc
push
mov
rol
sti
push
mov
test
and
test
jmp
pushf
lea
jae
shrd
aad
jmp
mov
inc
pop
fstp
add
int3
sahf
jae
fwait
xor
out
addr16
ror
pop
xchg
jnp
fs
in
popa
dec
idivb
sub
jb
gs
push
adc
mov
aam
cmpsb
aas
movsb
fmull
jo
xor
xor
mov
push
out
mov
imul
call
push
add
enter
xchg
xchg
sbb
sbb
xor
test
cmpsb
push
lock
movb
push
cwtl
repz
call
mov
dec
add
dec
fnstsw
add
fcmovnb
cmp
sub
fs
lock
push
jl
out
loop
mov
mov
jb
mov
dec
mov
and
sub
movl
add
sbb
sbbl
add
adc
xchg
rorl
shlb
push
ljmp
outsl
add
pop
scas
inc
les
jle
xchg
mov
add
es
xlat
adc
push
sub
cmpsb
ss
push
mov
cmp
mov
shl
xchg
mov
repz
sbb
mov
cmp
test
push
push
loopne
or
inc
in
xchg
jl
repnz
rcr
fdivs
lret
add
dec
cmpsb
xchg
pushf
shl
xchg
push
jmp
push
aad
pop
fmull
dec
daa
popf
enter
jnp
test
repnz
mov
dec
inc
iret
add
xchg
fcmove
push
bound
loopne
xor
repz
test
outsl
bound
rcl
int
push
std
adc
xchg
pushf
mov
xor
xor
in
pop
mov
push
jb
sahf
punpckhbw
out
dec
mov
xor
cli
mov
out
mov
dec
cmc
and
jnp
pop
fcoms
mov
out
rol
mov
bt
pushf
xor
test
repnz
jmp
lea
jae
bts
btc
mov
sar
xor
mov
rcr
sub
mov
call
sbb
insb
ret
insb
or
ficoml
es
jbe
xchg
or
insl
imul
sbb
xchg
push
repnz
movsl
xlat
xor
scas
mov
sbb
lret
shll
mov
int3
pop
imul
xor
mov
sarb
inc
adc
dec
lods
scas
adc
scas
inc
cmp
into
repnz
leave
cli
pop
icebp
repnz
out
mov
popa
aas
mov
insl
lods
add
movsl
inc
mov
cmpsb
xor
pop
ds
xchg
test
cmp
nop
adc
fsubs
push
adc
daa
add
hlt
pushl
scas
lret
mov
in
push
loop
not
xchg
jb
sbb
mov
ljmp
mov
inc
out
push
call
cli
jge
jo
sub
fldl2t
or
pop
dec
lds
gs
popf
lea
mov
stos
addr16
fld
dec
hlt
faddl
clc
xchg
ljmp
js
push
sbb
xor
bound
push
mov
shlb
cltd
push
add
mov
je
mov
xchg
sub
xchg
bound
mov
adc
pop
push
mov
jb
ss
push
sarl
xor
dec
and
test
stos
pop
lock
mov
push
fwait
je
inc
push
daa
inc
push
pop
jg
mov
cmc
xor
jae
mov
fmuls
test
push
add
push
lea
setge
lea
mov
mov
bswap
pusha
mov
movb
cwtl
mov
movzbw
setne
bswap
pushf
lea
call
jne
xor
inc
dec
add
mov
jge
pop
movsl
mov
adc
aad
push
push
or
test
cmp
xchg
test
call
mov
jmp
shlb
scas
and
aam
fwait
cwtd
clc
cltd
out
sub
cmc
lods
sbb
push
leave
cmp
subl
or
dec
out
popa
xchg
addr16
insb
jne
js
ljmp
xor
scas
jmp
mov
stos
cmp
xchg
popf
pop
imul
ret
bt
stc
mov
add
cmc
sub
push
lea
jne
add
shld
or
mov
shrd
shl
bt
rcl
mov
bts
not
bt
shrd
xor
inc
mov
shrd
inc
mov
xor
shrd
rcr
rcr
mov
stc
add
mov
neg
shl
shrd
mov
rcr
shrd
dec
shl
mov
pushf
shld
movsbl
sub
rcl
and
pop
inc
mov
rcr
cwtl
pushf
bswap
mov
movsbw
mov
sub
bsf
pop
pusha
and
and
setb
bsr
mov
push
shl
cmc
cmc
movb
add
call
jmp
mov
inc
sub
dec
testb
cmpsb
sbb
icebp
out
out
pushf
in
sbb
xchg
and
addb
push
or
mov
mov
xchg
lret
jp
pushf
sti
rcrl
adc
mov
sub
insl
pop
sub
inc
push
test
mov
jb
inc
pop
fimuls
or
xorl
das
repz
lcall
xor
in
sub
lea
adc
or
jo
mov
dec
dec
dec
pop
rcrl
adc
jle
mov
out
sub
pop
in
jmp
ret
sbb
addl
imul
or
and
mov
xchg
fidivs
into
out
push
dec
pusha
pop
in
das
cwtl
sub
push
sbb
fistl
aad
mov
jbe
mov
jbe
jmp
cs
in
cld
sub
dec
mov
pop
stc
cmp
push
in
mov
mov
shl
jl
mov
jl
push
lds
lock
mov
rclb
push
int3
inc
mov
push
lahf
dec
push
flds
in
lret
pusha
dec
setnp
mov
call
mov
test
mov
sub
imul
and
into
mov
stos
and
jmp
push
cmp
movsl
loope
push
aaa
ds
sti
stos
ljmp
inc
lret
lods
xchg
pop
in
std
outsb
adc
xchg
jecxz
add
in
inc
jp
push
xchg
nop
cmp
dec
or
cmp
call
call
jae
mov
mov
sahf
pop
mov
sub
int3
jae
push
shlb
mov
jg
push
mov
and
and
sbb
add
cs
dec
loop
data16
out
out
idivl
adc
adc
cmp
adc
ja
add
movsl
std
addr16
mov
icebp
cmp
hlt
out
rsm
imul
fdivl
andb
aad
fnstenv
push
insb
xchg
or
push
fcmovne
sub
cmpsl
sbb
pop
push
sbbl
mov
loop
enter
push
mov
inc
leave
cmp
pop
leave
aas
mov
inc
lea
jb
aam
bsf
not
mov
cmc
neg
shl
not
rcr
mov
add
push
rcl
add
not
setg
mov
pushf
setb
mov
lea
jmp
xchg
call
movl
push
lea
ja
push
pusha
imul
cmp
cmc
push
add
pushl
movb
pushf
pushl
lea
jmp
cmpb
call
repnz
jmp
push
pusha
movl
pushf
movw
lea
jmp
shl
pusha
add
pushl
push
pushf
call
jmp
pushl
mov
clc
cmp
movb
movw
lea
jae
push
pushf
stc
sub
cwtl
movzbl
lea
jmp
add
mov
movl
pusha
pushf
clc
neg
mov
cmp
cmp
cmp
pushf
pushf
jmp
loopne
repz
inc
icebp
and
push
xlat
das
stos
dec
incl
jle
cmpl
mov
fcomps
lret
iret
mov
jecxz
mov
sub
lcall
cmp
add
cmp
fwait
xchg
cmp
jo
or
cmp
cmc
in
mov
jp
stc
pushf
pop
xchg
adc
push
mov
mov
cmpsl
and
rorb
shlb
shrb
je
lods
inc
les
addl
sbb
xor
push
out
mov
lahf
sub
and
mov
sub
jne
inc
mov
adc
cmp
aaa
rclb
js
aad
mov
in
sbb
adc
push
popa
lods
sub
inc
pushf
add
cwtl
and
mov
bound
gs
inc
aas
imul
aas
iret
inc
lahf
sbb
jmp
and
push
in
sub
inc
test
dec
cli
in
add
sbb
inc
aaa
repnz
push
lds
imul
cmp
into
imul
outsl
cwtl
xor
xor
sub
sub
xchg
outsb
neg
xor
add
xchg
mov
icebp
push
jno
int
aam
mov
cwtl
jb
adc
inc
mov
cli
mov
mov
adc
dec
cmp
cmp
xchg
mov
fxch
sub
bound
minps
xor
cmp
and
std
jno
cli
int
add
adc
inc
mov
pop
mov
sarl
gs
adc
cmc
jo
ret
xchg
push
and
pop
mov
push
das
lret
xchg
fs
push
or
ret
mov
xchg
in
cmpsb
cmp
jle
lret
push
xchg
jbe
test
aad
cmp
push
sub
cmp
push
popf
sub
adc
mov
nop
pushf
lea
jb
aad
sar
dec
mov
clc
bt
pusha
sub
call
jmp
lea
jne
rcr
mov
bt
sub
test
shl
mov
bt
sub
test
pushl
push
pushl
cmp
movb
mov
movl
lea
jnp
ja
sbb
clc
bt
inc
sub
inc
add
lea
bsf
add
stc
mov
shl
mov
pusha
repnz
movw
lea
jne
lahf
movb
lea
pusha
mov
jmp
bt
shr
mov
cmp
pusha
lea
je
pushf
lea
je
pusha
clc
test
cmp
call
leave
fisubrl
pop
cltd
test
gs
inc
scas
inc
mov
rcrl
jg
fildl
xor
xor
mov
ss
scas
adc
inc
dec
sub
fwait
jg
sbb
adc
mov
std
cmp
and
in
pop
dec
jb
push
je
mov
repnz
xchg
jo
dec
dec
dec
les
mov
orl
and
sbb
jp
je
test
xchg
imul
push
mov
popf
mov
int3
sbb
cmp
dec
mov
mov
adc
arpl
adc
and
imul
mov
call
add
cmp
push
imul
icebp
aam
inc
mov
and
imul
jne
sti
clc
mov
lds
js
repnz
outsb
or
cmp
add
push
xchg
xor
ret
add
mov
xor
ret
add
mov
inc
add
cmp
lods
mov
push
pushf
mov
push
xchg
pusha
lea
jae
setge
jmp
lea
ja
pusha
pushl
lea
jb
test
pusha
clc
cmpb
call
int
mov
sbbb
fs
sub
mov
ret
sbb
aad
int
mov
call
sub
pop
std
scas
cmc
rorl
aam
and
addl
xchg
and
scas
jmp
aas
pop
mov
xchg
outsl
outsl
mov
insl
adc
jp
add
sahf
and
rolb
mov
push
imul
xchg
jno
loopne
mov
aad
adcl
sub
xchg
pop
rol
add
daa
repnz
fiaddl
dec
xchg
lea
je
pop
aaa
mov
aas
jg
pop
int3
inc
inc
pop
cmp
ret
setbe
arpl
outsb
inc
adc
sbb
popa
add
mov
sbb
js
inc
sub
pop
or
adc
cmpsb
lock
mov
push
jl
sbb
pushf
inc
push
out
xchg
cli
xchg
push
cltd
lea
mov
sbb
xchg
les
enter
and
out
enter
ret
pop
mov
push
sbb
imul
pushf
inc
aam
repnz
and
adc
lcall
in
mov
push
push
sub
stc
cmp
popf
adcl
xor
icebp
push
jne
rcrb
add
jl
adcl
lods
aam
inc
lods
sbb
cmp
jne
mov
push
stos
pop
pop
out
mov
dec
ss
push
jge
mov
jne
mull
jg
enter
xor
js
cmc
push
cmp
mov
bound
mov
outsb
push
or
in
fwait
adc
xor
std
mov
hlt
mov
jmp
test
movsb
push
and
fst
scas
mov
das
call
jge
and
repnz
or
insl
add
jno
inc
dec
scas
into
dec
adc
adc
cmpsl
jle
adcb
daa
leave
arpl
outsb
push
add
mov
pop
adcl
lahf
fmull
decl
out
mov
cltd
in
adc
adcl
loopne
testl
xor
inc
and
outsb
jne
inc
lock
enter
xor
xchg
sbb
add
adc
pop
cmp
jne
jae
pusha
jle
mov
mov
fidivl
inc
adc
push
frstor
js
cs
mov
jp
and
cmpsb
stos
in
and
sbb
out
shrl
sahf
pop
dec
push
fcompl
aas
cs
jo
pusha
inc
lahf
idivb
mov
clc
aas
ret
pusha
addb
cmp
dec
mov
dec
out
xchg
or
dec
or
sub
xor
in
out
shll
add
lods
cltd
ret
cmp
or
xor
xchg
mov
pushf
les
sahf
mov
lods
mov
and
and
jno
jle
inc
idivl
pop
jmp
sahf
jmp
ds
add
ds
cmc
pop
pushw
dec
rcll
or
outsb
mov
sub
leave
adc
mov
jge
xchg
xor
popa
popa
imul
outsl
int
adc
cmpb
xor
adc
cmp
jno
in
dec
sbb
into
mov
cmp
push
je
stos
sub
loop
mov
xor
movsb
mov
push
add
push
sub
dec
decb
cltd
mov
roll
sti
xlat
repz
xchg
out
lds
lret
xchg
or
dec
loop
sbb
push
mov
js
sbb
cmp
sub
cld
frstor
inc
xchg
out
int3
push
and
pusha
or
sub
sub
rclb
dec
int3
mov
mov
fdivs
dec
popf
push
aaa
cld
insb
movsb
test
outsl
popa
jno
lods
dec
outsl
iret
lahf
jmp
lock
cltd
cltd
xor
mov
lods
pop
xchg
cltd
int3
mov
in
xchg
popa
jecxz
inc
rorb
cmc
inc
push
push
stc
stos
mov
add
fcomps
outsl
jge
adc
out
push
mov
fdiv
inc
adc
inc
iret
sbb
mov
out
pop
sub
in
jae
or
mov
sbbb
jge,pt
stos
rol
call
orl
out
sub
les
dec
push
mov
add
adc
mov
cld
sub
imul
and
das
cmp
and
add
cmp
sbbb
lods
pop
jb
or
dec
push
lcall
popf
outsb
call
js
sbb
xchg
ficoms
lret
mov
jmp
push
cli
inc
ja
sahf
cltd
test
adc
and
in
shll
aam
cwtl
adc
out
hlt
push
mov
sti
int3
xchg
pop
dec
push
adcl
cli
push
inc
addl
or
int3
je
das
loop
push
rcrl
mov
jno
mov
data16
push
outsb
jne
loop
imul
xor
ljmp
scas
adc
push
es
and
cmp
bswap
inc
add
mov
fnstcw
xor
mov
leave
dec
sub
mov
and
ret
push
shrl
decb
enter
or
push
shlb
out
outsl
add
pop
lahf
mov
into
or
or
xor
aad
loopne
xchg
xor
pop
and
cmpsb
or
roll
jl
xorb
push
inc
mov
popf
clc
das
mov
dec
iret
pop
mov
xchg
fs
jg
xchg
or
inc
pop
mov
outsl
test
sbb
fstpl
pop
pop
jnp
sub
jne
je
push
sbb
mov
leave
out
mov
pop
sub
push
aam
xchg
loop
dec
dec
loop
pop
popf
into
mov
pusha
dec
outsl
lods
adc
push
mov
pextrw
add
rcrb
lret
das
and
orb
inc
subb
sub
lods
jbe
dec
in
or
jo
xchg
mov
dec
mov
mov
fdivrl
inc
dec
dec
push
jecxz
cli
pop
add
shrl
fwait
movsb
gs
sarb
out
jne
xor
jecxz
inc
fistps
in
shll
imul
lds
je
aam
mov
sub
in
mov
xor
test
push
xor
xchg
in
sub
insl
orb
mov
inc
or
mov
movsb
cwtl
mov
ljmp
pop
inc
sarl
xchg
dec
mov
mov
daa
fucomip
jecxz
xlat
sub
cwtl
push
lds
lcall
sub
mov
and
loope
sub
jl
fucomi
mov
and
daa
ret
clc
repz
lea
pop
rclb
xlat
movsl
aaa
sar
sbb
xchg
cld
add
cmp
cmp
movsl
test
test
test
pop
push
mov
shlb
and
or
lret
addr16
das
lock
test
pop
test
mov
in
xor
scas
jge
add
les
dec
ss
icebp
xor
jecxz
fistps
fiadds
std
lcall
mov
fs
insb
sbb
sahf
mov
push
aad
sub
fwait
mov
jnp
andb
jmp
sbb
mov
jp
adc
orb
sub
xor
mov
sbb
or
add
stc
stos
push
out
inc
stc
movsb
call
mov
sbb
push
sbb
inc
push
cmp
lar
pop
daa
jne
cs
inc
mov
xchg
dec
push
or
xchg
dec
sahf
stos
sbb
inc
inc
dec
xor
inc
scas
insb
hlt
add
pop
mov
flds
aam
flds
mov
and
push
sbbl
jns
scas
sub
lods
lds
push
out
push
call
fwait
nop
xor
rolb
cmp
ljmp
js
mov
adc
mov
mov
shll
push
push
ds
clc
inc
mov
xchg
mov
out
pop
push
xor
test
ss
enter
push
push
xchg
mov
adc
mov
dec
add
dec
xchg
dec
pop
xor
mov
inc
ljmp
jbe
mov
in
rcl
cmp
sub
out
push
sub
xor
inc
hlt
inc
xor
adc
popa
pop
das
cli
cmp
jle
js
jnp
sbb
mov
inc
fadds
sbb
mov
daa
adc
js
push
shlb
inc
mov
lahf
dec
jns
xchg
repnz
cltd
push
shlb
jmp
movsl
je
fsts
sti
rol
mov
repnz
sti
xchg
out
or
es
sbb
inc
pop
mov
adc
dec
ficoml
jns
jb
mov
pop
loope
or
pop
pusha
lds
divb
loopne
pop
popf
das
hlt
and
lret
imul
aas
and
or
xchg
in
fldl
sbb
in
testb
repnz
dec
in
mov
sbb
xor
lds
lcall
shrb
lods
out
in
xchg
inc
mov
cmp
jne
shlb
adc
pop
mov
push
or
lods
in
adc
push
adc
cli
push
outsb
in
jmp
loop
aad
lret
sbb
pop
xor
scas
sbb
or
mov
inc
test
adc
sbb
xchg
in
xchg
push
js
shld
inc
sbb
push
inc
jb
inc
sbb
rolb
adc
xchg
jne
js
jno
mov
jecxz
stos
or
cli
pop
inc
adc
mov
fs
adcb
push
push
adc
jno
rcl
push
orb
pop
movsb
sub
scas
and
jne
jae
add
stc
fisttpll
sbb
pop
pop
xor
cmp
cld
or
ljmp
inc
lret
dec
rcrl
hlt
jne
or
sbb
mov
sbb
or
imul
adc
rcrl
mov
push
pusha
test
jp
pop
dec
test
adc
pop
adc
pop
jae
lock
enter
cli
and
stos
jmp
mov
or
aas
pop
or
pop
jmp
fucom
xor
lods
xchg
pop
add
cmp
add
adc
cmc
call
push
ficoms
aaa
aam
stc
lahf
xchg
cmp
push
mov
cld
dec
mov
adc
aam
cwtl
adc
neg
cmp
test
dec
ds
jle
pop
in
bnd
dec
shll
mov
int3
inc
push
aam
sub
in
inc
scas
fistpl
mov
sti
aas
and
stc
js
or
loop
fisubrs
mov
lods
pusha
adcl
lret
lea
cmpsl
mov
xor
jnp
cs
cmp
sub
fnstenv
fiaddl
xor
out
fildl
enter
pushf
lahf
out
adc
mov
mov
xchg
loopne
inc
jle
and
xchg
xchg
mov
lea
mov
adc
push
xor
outsl
daa
fdivrs
rcrl
cmc
ficomps
insb
xorb
int
sarl
cwtl
mov
mov
xchg
jbe
sub
push
add
jecxz
inc
popf
sbb
int
aas
cmc
jl
jge
xor
xchg
push
int
cmpsb
jns
mov
xor
std
sbb
push
repz
mov
es
or
stos
adcb
and
test
int3
lods
cmc
xchg
mov
mov
dec
test
scas
mov
outsl
inc
mov
out
ljmp
sbb
notl
repnz
fimuls
mov
shr
xchg
cmc
daa
pop
imul
sbb
in
aaa
inc
jb
outsb
mov
adc
cmp
dec
fucom
and
mov
sbb
and
xchg
xchg
sahf
or
add
inc
inc
xchg
mov
iret
or
sbb
add
iret
adc
pop
mov
xchg
pusha
int3
push
push
movsl
daa
jno
sti
pop
xchg
aad
test
shrb
stos
jge
or
or
dec
sbb
lods
pop
cmp
inc
push
into
ret
bound
repz
call
add
addl
xchg
fdivs
mov
pop
add
add
outsb
insl
lds
mov
lods
mov
sub
cmpsb
sub
push
jecxz
cld
push
sub
sub
mov
jne
cld
adc
insl
cld
adc
scas
movsl
mov
cs
lea
push
pop
jne
inc
sbb
incb
jno
sbb
test
inc
xchg
push
int
aas
lcall
push
movsb
out
ret
or
fsubrl
ss
cmp
dec
mov
and
stc
pop
scas
cs
imul
icebp
mov
mov
push
inc
push
and
outsl
mov
out
es
je
dec
or
outsl
bound
lcall
xor
lret
addr16
scas
inc
adc
sbb
loop
jg
inc
shl
and
pop
in
rcll
sub
sub
xchg
incb
and
sub
enter
add
cld
or
mov
movsb
mov
or
int
xchg
mov
cmpsl
mov
lret
ja
ret
mov
loop
jl
test
push
repz
mov
push
jg
imul
lods
nop
cli
ror
push
dec
and
lret
pop
jmp
daa
in
dec
call
xchg
jecxz
jbe
sub
sarb
js
mov
pop
rorb
mov
push
mov
lret
js
pop
aas
jp
ds
sub
lahf
xchg
fcoml
push
jnp
sti
lea
fst
sub
dec
jo
mov
lods
ds
js
or
adc
add
sbb
fcoml
pop
shl
push
out
repz
sbb
jmp
pop
mov
dec
push
leave
xchg
jmp
xor
push
and
pop
pop
jns
inc
mov
imull
pop
xchg
jecxz
jae
stc
je
inc
jne
cmpsb
inc
inc
adc
sub
jae
cmp
adc
sbb
pop
cmpsl
movsb
mov
mov
imul
ficomps
fsubr
and
sti
xchg
mov
pop
mov
sbb
push
mov
mov
mov
repnz
orl
cld
push
xor
hlt
push
mov
or
fs
sti
cmp
add
nop
inc
int3
push
es
mov
mov
mov
dec
and
lahf
outsl
shlb
mov
push
sbb
mov
inc
dec
imul
mov
xchg
sub
fnstcw
mov
fucomi
outsb
inc
jbe
mov
xchg
in
mov
ret
bnd
mov
jl
clc
mov
scas
push
fcoml
into
inc
mov
repz
push
add
sbb
xor
insl
dec
pop
lods
sub
bnd
dec
dec
jg
rcrb
sbb
out
lahf
insl
filds
scas
addr16
push
mov
push
movsl
cmp
rorl
out
inc
push
jmp
cmp
mov
or
jecxz
jb
sbb
mov
mov
push
icebp
sbb
mov
stos
pop
ds
inc
loopne
cmc
mov
push
add
xor
inc
add
popa
dec
sbb
cli
nop
inc
cmp
shlb
jmp
push
pop
je
fnstsw
xorb
mov
in
cmp
addr16
mov
pop
sub
test
int3
aas
add
mov
lret
add
push
pop
lret
out
scas
adcb
jl
inc
push
sbb
insl
pop
mov
cmpsl
pop
push
les
and
ss
mov
scas
test
jbe
les
mov
push
js
ret
lds
pop
out
sbb
jle
out
inc
push
jne
outsl
cmp
fsubl
lds
nop
fwait
fwait
out
das
daa
mov
subb
test
or
jp
add
mov
sbb
mov
adc
insb
cld
loopne
shlb
jne
lods
movsl
ja
cmp
push
shl
jae
xor
pop
in
int
out
in
cvttps2pi
and
lds
sar
int3
pop
aam
mov
mov
inc
xor
xor
pop
pop
ljmp
jns
es
lret
fisubrs
sti
out
push
adc
stos
inc
int
mov
inc
jg
int3
loope
cmp
fwait
xchg
aad
aam
jmp
inc
jnp
fwait
cmp
lds
js
lods
xchg
mov
adc
lea
pop
std
fisttps
clc
dec
negb
cwtl
cmpsb
bound
mov
sbb
jge
jno
push
or
dec
xchg
not
mov
in
pop
cmp
adc
scas
jg
pop
sub
lock
ror
push
jo
lcall
mov
fstpl
aad
cs
ja
sub
les
adc
mov
inc
mov
push
add
mov
sti
fisubrs
fildl
xchg
stos
xchg
mov
pushf
int
and
jno
push
xorl
add
pop
xchg
and
xchg
test
sbb
xchg
inc
std
mov
jmp
divl
sub
push
jns
sahf
popf
jbe
imul
mov
cmpsl
inc
ss
push
dec
pop
dec
add
cltd
lea
mov
jmp
jnp
imul
jbe
cmc
and
mov
lods
clc
stc
cmp
aad
adc
adc
push
adc
adc
push
xchg
add
cmpsl
pop
in
dec
and
jecxz
aad
xchg
or
cltd
mov
pop
rcrl
orl
scas
pusha
arpl
addl
cld
mov
aad
pop
das
popa
imul
lahf
push
jbe
mov
dec
popf
pushf
inc
mov
outsl
stc
fdivl
mov
jns
out
cmp
inc
std
call
out
sbbl
sub
jmp
xor
out
dec
cltd
xor
in
or
and
dec
mov
or
repz
lret
daa
dec
movsl
dec
sbb
mov
jae
dec
or
lfs
lret
xor
mov
add
aam
mov
pop
lret
cmp
mov
data16
xchg
jae
or
cmp
lahf
into
dec
rcr
xor
adc
pop
add
xor
mov
sti
aas
sbb
ret
fcompl
shlb
add
cltd
cmp
stos
je
jge
loope
add
hlt
in
das
xor
ja
out
mov
jmp
lcall
and
clc
test
leave
aam
insl
shl
pusha
ljmp
mov
jmp
mov
in
cmp
cmp
xchg
mov
scas
push
pop
jg
movsb
sub
cmp
testl
dec
les
mov
ret
ret
pop
mov
mov
push
xchg
in
sub
in
cs
pusha
out
adc
inc
ja
cli
sub
jns
in
mov
pop
fisttpll
add
cmp
cmp
sbbb
fs
adc
mov
add
jecxz
xor
sbb
pop
daa
test
sbb
ss
mov
sub
loop
and
mov
xor
cli
test
repz
push
inc
and
jle
cmp
mov
fadds
push
jno
adc
test
mov
mov
jge
outsl
and
and
jnp
adc
mov
jbe
es
inc
out
mov
clc
jg
push
ret
sbb
pop
or
or
fcmovb
out
andb
xor
outsb
mov
cmp
sbb
out
cmp
sarl
sbb
test
mov
xor
pop
sub
icebp
xor
pop
fcmovnu
call
or
push
adc
inc
jnp
sbbb
cmpsl
mov
jp
jle
aas
xchg
adc
jbe
sub
fnstenv
and
cmp
leave
and
cwtl
jnp,pn
push
fldpi
xchg
int
shll
or
addr16
pusha
pop
movsb
add
and
sbb
sarl
and
or
xor
xor
loop,pn
sub
push
and
nop
push
in
addb
imul
or
cltd
add
insl
insb
test
fsubl
add
sbb
aad
add
push
into
out
jg
xor
icebp
repz
mov
cmp
xor
loopne
lea
sbb
testb
mov
jg
jmp
imul
push
pop
xor
mov
push
mov
icebp
fst
and
sti
out
or
xchg
jge
mov
pop
or
xchg
inc
xchg
jno
adc
cs
leave
notb
cmc
adc
aaa
sbb
mov
cli
mov
cs
into
ret
mov
pop
out
repz
jg
mov
aad
xlat
push
pop
js
packsswb
inc
mov
jns
mov
mov
xchg
jecxz
mov
sbbl
xor
repz
lret
sub
andl
stc
ror
stos
jl
jle
xchg
movsl
and
adc
push
inc
xchg
jns
dec
jmp
imul
hlt
pop
adc
cltd
test
adc
xchg
imul
inc
xlat
xlat
and
test
xor
loope
pop
mov
pop
xchg
sub
push
fsubs
sbb
cmp
iret
jb
stc
fucomip
push
adc
lea
adc
andb
push
mov
xor
push
pushf
or
and
push
test
and
test
das
bound
aam
sarl
add
fs
adc
cli
cmpsl
loope
dec
aaa
sbb
lret
dec
lahf
mov
push
mov
jg
push
inc
and
idiv
pop
test
mov
push
clc
insl
push
mov
ret
dec
in
inc
push
mov
push
jo
das
hlt
jno
adc
lret
fwait
ljmp
cli
push
and
mov
movsl
cmp
aaa
mov
outsl
xchg
lds
sbb
mov
mov
mov
mov
pop
orb
and
in
cmp
xor
jg
sbb
push
ds
out
mov
cmp
xchg
je
and
es
shr
push
test
pop
push
fstpl
inc
ljmp
pop
mov
mov
xor
push
xchg
insb
dec
or
daa
in
add
jmp
fucomi
xchg
lcall
int
loopne
cmp
cmp
shl
lds
push
mov
mov
xchg
in
mov
out
mov
orb
fimull
fldenv
mov
pop
and
cmp
aaa
ss
or
sub
add
fwait
sub
sbb
inc
and
cmp
inc
xor
dec
rep
mov
mov
gs
mov
sub
fwait
enter
cwtl
or
js
adcb
sbbb
pop
addr16
shrl
sbb
cmp
sub
stos
mov
cmp
stos
or
xchg
lahf
fbstp
xchg
test
jmp
push
pop
andb
pop
adc
or
pop
xor
mov
mov
adc
ljmp
add
popa
cmc
cmc
sahf
xor
call
lret
mov
mov
mov
pop
das
jbe
jb
shlb
ret
push
xlat
mov
dec
mov
push
cmp
xorl
pop
je
and
ja
sub
sbb
out
dec
add
out
cld
fs
sti
les
sub
xchg
andl
adc
add
mov
jnp
cmc
dec
cmp
mov
dec
or
fdivr
sub
lret
out
shlb
mov
data16
test
outsb
in
push
fcompl
lods
inc
cmpb
add
dec
daa
push
inc
das
jno
jb
outsb
insb
cmp
ror
call
icebp
inc
in
iret
jg
jmp
ret
sub
sbb
pop
cltd
sbb
pop
rorl
addr16
es
jl
or
pop
insb
sbb
shrb
mov
out
stos
mov
aam
ja
js
add
and
mov
lods
cmpsl
insb
mov
dec
or
das
shll
lods
cmpb
les
xchg
add
jg
mov
push
out
and
ja
popf
inc
mov
les
daa
sbb
movsl
cli
pop
mov
das
mov
push
mov
mov
cmp
jne
lods
insb
jge
fcmove
push
or
sti
call
out
mov
aad
mov
fcoms
push
movsb
movsl
sub
movsl
notl
int
dec
mov
xor
cmp
mov
sti
or
cwtl
jo
jle
aas
arpl
pop
jp
iret
cmp
or
jno
repz
movsb
out
adc
mov
xchg
inc
decb
test
lock
mov
pusha
jb
and
mov
jmp
mov
popa
pop
fnstsw
sbb
not
jg
or
cmpsb
sbb
push
xchg
sahf
mov
loope
and
mov
gs
int3
adc
pop
pop
cmpsb
sbb
inc
cld
or
scas
es
sti
push
vmovd
loope
scas
loop
mov
fdivrl
and
adc
xchg
mov
adc
sbb
sbb
mov
mov
out
and
push
ret
loop
iret
ret
pusha
inc
jmp
dec
ljmp
jnp
leave
xor
cwtl
jb
test
fildl
add
fists
push
fcmovnbe
jge
sub
jo
dec
inc
fmul
add
aas
xchg
out
fs
push
xor
test
cmpl
sbb
imul
pop
cmpsb
add
ret
and
sbb
pop
test
aas
outsb
push
in
mov
jno
jle
fnsave
outsl
push
jnp
sarb
aas
pop
lods
pop
or
in
std
sub
ljmp
sbb
popa
jecxz
test
adc
mov
push
pop
dec
inc
int3
repnz
mov
subb
jo
inc
sbbl
mov
in
pop
subb
orl
inc
mov
mov
inc
add
mov
add
lret
lock
mov
cmc
pop
mov
mov
push
cmpb
dec
sbb
dec
jge
or
lret
pop
repz
and
lahf
outsb
mov
sti
dec
fstpl
xchg
fdivr
sti
jb
rorb
add
ds
inc
add
stos
imul
jl
push
gs
push
loop
mov
add
sub
sti
cltd
test
jnp
insb
pop
cmpsl
lds
in
es
jge
les
and
ss
ja
cli
test
jl
sub
adc
subl
mov
stc
test
pop
sahf
sar
and
pop
sbb
dec
sub
sahf
cwtl
xchg
loop
mov
xor
lret
sbb
or
pop
out
cmp
adc
and
push
sbb
and
adc
pop
xor
inc
cwtl
jne
dec
sahf
xor
popf
cwtl
sbb
les
out
push
pop
loopew
push
loope,pt
stos
jp
lahf
mov
lret
adc
lea
push
cmp
pop
scas
pushf
ss
adc
lcall
and
cmp
add
sbb
jecxz
adc
xlat
add
adc
mov
fwait
ret
lods
jl
dec
push
add
jp
dec
mov
adc
into
sbb
xor
pop
lret
fs
push
xor
mov
xorb
inc
pop
jno
cmc
inc
jae
popfw
cmc
outsb
add
pop
mull
jmp
xor
xor
into
jge
ret
mov
push
das
aas
test
adc
xor
inc
movzwl
ss
mov
shlb
outsl
arpl
jl
scas
mov
xchg
sahf
inc
dec
ja
pusha
lods
sbb
add
jne
xor
mov
clc
sub
filds
pop
push
loope
or
popa
sbb
fldenv
aas
dec
xor
dec
adc
adc
movsl
push
mov
lret
out
cmp
add
push
movsl
xchg
inc
pop
jnp
iret
inc
fstpl
aad
mov
leave
ret
outsb
and
jg
movd
push
iret
inc
inc
push
and
fs
pop
fstpl
and
pushf
cmpsb
scas
lcall
ljmp
lret
out
les
jbe
js
insl
shrl
jne
js
lahf
js
js
xorb
fdivl
addb
sarb
les
pusha
and
add
jl
push
shll
push
sub
xor
das
push
in
or
imul
pop
inc
and
cmpsb
and
pop
test
ja
cmpsl
pop
push
fisttps
jae
pop
inc
orb
je
mov
add
clc
inc
sti
arpl
cmp
repz
rcrb
mov
aaa
add
or
and
pop
push
cwtl
push
loop
movsl
dec
in
in
aam
mov
mov
mov
sub
cld
add
lock
scas
adc
lods
xchg
push
and
push
fsubl
orb
cmpl
test
pop
push
jnp
ss
sbb
sub
jmp
in
mov
fmul
lods
rcl
push
inc
cltd
clc
bound
lock
nop
orl
mov
jnp
gs
push
pop
pop
imul
fadds
mov
mov
xchg
mov
aad
fldln2
add
daa
jg
enter
push
jns
jl
lock
scas
je
outsl
fisttpll
loope
jp
pop
outsb
mov
inc
sub
cwtl
andl
loope
pop
loopne
stos
out
adc
call
mov
std
mov
pushf
out
lret
jp
pop
and
jb
push
je
ret
mov
push
incb
ja
cli
mov
not
cltd
xchg
cmpsb
mov
scas
sbb
inc
pop
dec
out
sahf
into
xor
sub
insl
fwait
mov
imul
iret
push
loope
dec
inc
sub
gs
xor
or
push
push
jnp
and
lods
call
add
xchg
out
mov
int3
jnp
out
lcall
pop
stos
negl
lods
mov
sbb
jle
jmp
mov
daa
dec
sti
lods
dec
jne
xorb
pop
es
adc
mov
mov
movsb
addl
xchg
mov
pop
inc
fisttps
call
jecxz
pop
clc
adc
mov
fdivrl
dec
jo
push
xchg
insl
popf
jge
mov
test
in
cmp
cmc
cmp
ret
pushf
xor
test
iret
ret
popa
sub
jb
mov
mov
ss
adc
lock
je
lds
or
xor
push
cmp
dec
aam
insb
iret
mov
mov
ds
scas
lods
push
in
ljmp
inc
stc
lahf
dec
mov
jno
mov
scas
hlt
jb
add
stc
cmp
xor
lret
mov
mov
xchg
ja
test
mov
int3
xchg
jo
and
or
std
mov
push
mov
pushf
dec
jle
leave
sub
lret
scas
popa
fsub
clc
and
push
dec
mov
mov
test
push
ds
stos
mov
test
pop
inc
cmp
adc
notb
rclb
mov
jno
fldl
enter
aaa
stos
cld
fmuls
and
or
add
idivb
fimull
push
outsl
adc
mov
repz
push
out
rol
pop
lret
lock
cmpsl
bound
pop
js
mov
xor
mov
subb
jmp
mov
and
xor
vmovddup
sbb
push
fiaddl
sbb
shrl
or
inc
adc
add
sub
sbb
inc
rorb
inc
adc
and
int
in
xor
loop
stos
mov
and
mov
orl
stc
push
ljmp
jg
push
xor
jecxz
fs
sti
pushf
dec
cmpsl
and
ss
cmc
mov
dec
adc
xor
rorl
adc
jmp
adc
lret
mov
or
dec
add
xchg
gs
lret
movsl
or
lds
cmc
sbb
and
insb
sarb
pusha
popa
dec
std
pop
xchg
loopne
cmp
fistps
sbb
in
cmp
repz
mov
push
inc
mov
je
lds
es
rclb
xlat
xor
rclb
mov
shlb
xor
add
orb
cld
xchg
ljmp
mov
inc
fiaddl
or
mov
dec
hlt
loop
jnp
in
mov
mov
push
mov
push
cmc
scas
pop
sbb
pop
cwtl
pop
mov
arpl
in
push
push
daa
adc
push
add
sbb
dec
sub
das
orl
fidivs
int3
ja
fcomps
push
xor
sbb
stos
inc
xchg
inc
pop
and
clc
and
dec
das
jae
inc
dec
imul
pushf
jecxz
ret
push
mov
cs
lret
arpl
jl
push
or
gs
cmpsb
in
jle
or
lods
jg
scas
js
mov
ss
popa
cmp
mov
iret
sub
fwait
cmp
mov
movsl
or
pop
fldl
jns
jmp
rcrl
jmp
sub
xlat
cmpsb
sub
cli
orb
not
rcrb
int
jecxz
fcoml
lret
mov
inc
insl
stos
bound
mov
mov
lret
dec
sbb
jecxz
es
push
jns
lea
pop
enter
inc
cld
add
lock
xchg
push
jg
mov
mov
fldt
std
push
pushl
dec
adc
jecxz
push
popa
insb
popa
xchg
mov
or
mov
push
xor
sub
pop
decb
ljmp
out
scas
adc
fs
mov
xor
inc
adc
sub
popf
pop
sub
jge
insl
add
xacquire
adcb
sub
add
call
into
jle
push
mov
pop
inc
push
push
lret
inc
popl
pop
mov
mov
jg
out
inc
sbb
cmp
sub
daa
je
ret
repz
daa
addr16
sub
adc
inc
test
mov
mov
out
sbb
enter
dec
inc
sub
imul
in
int3
gs
sbb
into
ret
push
cmp
adc
dec
fstl
scas
imul
fwait
ret
rorl
sbb
fbstp
dec
dec
std
xchg
cld
or
pop
add
xor
js
imul
inc
mov
sarl
pop
ret
repz
popf
sub
cmp
out
lret
cs
mov
inc
int3
dec
insl
inc
popf
fbld
sahf
pop
push
jne
ret
rcll
inc
cmp
mov
xchg
mov
aam
test
sbb
daa
ficompl
clc
pop
and
xor
push
movsb
insb
mov
mov
jne
std
and
and
dec
mov
dec
out
mov
sbb
or
in
inc
cs
gs
sbb
es
arpl
sub
mov
arpl
cmpsl
adc
in
iret
push
mov
popa
and
mov
inc
pusha
lret
jmp
cltd
in
imul
test
cli
call
test
mov
push
adc
mov
mov
cld
xchg
notl
push
push
and
pop
lods
mov
jae
nop
mov
sub
push
ljmp
adc
mov
push
pushf
mov
in
sub
ds
cmp
nop
in
xor
cli
push
mov
out
loopne
js
lcall
mov
mov
fs
push
jae
push
push
mov
xchg
or
jmp
fwait
bnd
iret
or
sti
repz
ds
add
mov
pop
gs
fs
repz
les
decl
lahf
bound
fadd
xor
out
bound
aas
lods
jb
add
add
pop
and
int
pop
fwait
mov
addr16
dec
outsb
aas
jl
pop
data16
decl
push
xor
dec
arpl
jae
loope
pop
push
movsl
pusha
or
sbb
xchg
add
out
outsb
cmp
mov
icebp
inc
in
ja
and
sbb
mov
sbb
insb
loopne
fld
dec
leave
sub
cmpsb
inc
pusha
in
add
rclb
pusha
jae
push
xor
adc
cmp
adc
lea
dec
icebp
lds
fwait
cmp
mov
ljmp
aam
mov
cwtl
and
push
jns
mov
nop
dec
lds
or
data16
icebp
out
out
pop
jl
lahf
sub
fwait
in
dec
mov
stos
enter
daa
mov
call
loopne
fstl
mov
fdivrl
or
faddl
add
mov
stos
inc
pop
xor
repnz
js
and
divl
fldenv
loopne
push
sub
movhps
adc
movsb
into
and
lds
inc
scas
out
adc
sbb
xchg
aad
addr16
cmp
lret
cmp
aad
sub
imul
push
loope
inc
pop
scas
rcr
xorl
jmp
mov
into
lret
adc
fs
imul
adc
push
xchg
scas
add
mov
xchg
lret
test
sbb
clc
insl
in
mov
ds
pop
in
movsb
dec
jns
jle
std
mov
shl
cltd
sub
or
daa
adc
lods
ds
arpl
dec
xor
dec
lret
imul
mov
mov
inc
mov
hlt
fidivs
roll
jl
nop
cltd
mov
clc
jecxz
add
out
lock
mov
cmpsb
notl
xchg
data16
and
add
aaa
scas
push
mov
fistpl
sub
cmpsb
cmp
add
fisubl
jle
mov
xchg
pop
dec
cmpsb
dec
mov
aas
in
jne
lret
fstpt
ud2
jae
add
shlb
jle
sahf
push
cwtl
jle
das
rcrl
sub
ja
mov
cmp
adc
cmpsb
dec
inc
adc
cwtl
in
xchg
push
xchg
mulb
mov
xor
pusha
and
mov
xchg
push
sti
movl
hlt
repnz
inc
adc
daa
push
dec
stc
or
and
or
inc
pop
inc
xor
sbb
nop
dec
repz
std
roll
arpl
scas
and
xchg
cs
mov
adc
add
outsl
notl
or
int
add
mov
in
sbb
cmp
cmpsl
xchg
data16
push
jo
dec
mov
mov
mov
push
mov
dec
das
insl
sarl
shlb
xor
addl
cmp
pop
push
mov
sub
enter
push
lret
lcall
sbb
jbe
dec
nop
cld
or
jge
repz
pop
std
stc
movsl
test
xchg
jb
pop
lret
xchg
dec
adc
cltd
adc
lcall
lahf
adc
out
xor
call
push
mov
aaa
lea
lcall
dec
in
pop
jl
idivb
mov
aaa
jb
je
push
jae
mov
push
xchg
pop
and
mov
jo
movsb
data16
cld
out
xor
sub
ficoml
popf
lods
js
mov
cmp
sahf
dec
sub
mov
arpl
push
ljmp
out
nop
fs
pop
leave
mov
dec
cmp
inc
sti
mov
jmp
bound
cmpsb
dec
xor
repnz
inc
jns
sbbb
cmp
add
loop
push
loopne
xchg
cli
inc
repnz
sbb
adcb
loop
out
arpl
adc
cmp
jecxz
pop
xor
fwait
xor
inc
pop
jb
in
aas
or
inc
pop
xor
sub
dec
enter
test
aas
test
into
icebp
and
cmp
or
in
mov
lock
add
addr16
mov
or
fnop
xor
loop
or
adc
fs
jp
hlt
and
inc
jb
les
test
movsl
test
inc
add
daa
mov
loope
int
aad
inc
dec
cli
adc
psllq
cmp
push
lahf
inc
arpl
add
and
jnp
push
fiaddl
push
sbb
mov
ret
pop
sarl
dec
inc
call
jo
pusha
cmp
outsl
repz
push
add
dec
cmp
mov
in
mov
adc
xchg
pop
je
jmp
xchg
and
adc
pusha
xchg
lock
inc
lret
in
jmp
inc
cmpsl
push
pusha
fnstenv
scas
inc
add
mov
inc
inc
inc
sarb
sub
cli
leave
cmp
mov
xchg
out
cwtl
in
das
fcmove
xor
push
sbb
stos
mov
daa
fsubrs
sbb
outsl
adc
sbb
jnp
jmp
imul
push
and
mov
mov
jecxz
push
iret
test
fdivrl
pop
add
cltd
enter
jmp
jl
ret
xchg
mov
xchg
dec
call
popf
xor
xlat
sub
pusha
jecxz
popa
inc
and
add
ret
es
and
lods
xchg
push
aad
scas
js,pt
ret
mov
andl
mov
mov
mov
aas
add
add
cmp
iret
mov
xor
insb
inc
arpl
cmpsl
jmp
adcb
rol
jbe
or
mov
sahf
addl
jno
out
cs
mov
movsb
push
lods
sbb
cmp
inc
leave
cmp
enter
aas
jg
sbb
sub
dec
jbe
adc
lret
inc
inc
daa
aad
and
scas
or
or
movsb
push
cmp
push
and
push
and
push
mov
cmp
mov
xor
int
mov
jmp
jno
inc
xchg
in
test
decl
out
cmp
mov
fdivl
sar
push
xchg
enter
inc
inc
mov
in
rorl
les
inc
jae
add
add
jae
in
dec
test
mov
sbb
jle
and
inc
push
cwtl
rolb
mov
mov
popl
dec
popa
push
inc
mov
mov
std
out
sti
and
jns
movsl
jge
insb
jl
sbb
mov
xor
add
int3
sbb
inc
push
push
imul
jmp
xor
mov
sub
call
out
popf
sub
movsb
es
adc
bound
jge
shlb
popf
cwtl
xchg
and
mov
popf
push
jg
cld
dec
jne
stos
xor
imul
lock
mov
dec
sbb
mov
xchg
xor
lahf
fldlg2
mov
or
push
ror
lods
push
jne
les
sti
dec
movb
rclb
or
pop
sar
push
xorl
cmp
pop
popa
stos
in
add
insl
mov
pop
xor
popa
pop
cmp
adc
mov
icebp
dec
xlat
push
sbb
mov
imul
mov
out
iret
ret
pop
sbb
imul
adc
push
testl
and
add
pop
shrl
movsb
cmp
xchg
or
imulb
push
repnz
push
pop
ljmp
pop
mov
ds
sbb
pop
sub
cli
pusha
lds
nop
xorl
fucom
jecxz
ds
sahf
loope
mov
pop
mov
inc
in
icebp
add
xchg
mov
mov
adc
pop
rclb
bound
cltd
dec
repz
sub
mov
aaa
nop
jge
fs
daa
adc
mov
push
sbb
dec
sbb
and
addr16
addb
jb
hlt
movsl
loop
and
test
mov
les
cltd
std
sbb
xchg
rorb
call
pshufw
dec
add
es
roll
or
mov
adc
inc
mov
loope
xlat
xor
je
call
add
cs
in
sbb
or
sbb
mov
and
outsl
das
addr16
repnz
fdivp
add
mov
mov
push
pop
push
fadd
out
lods
add
icebp
mov
cs
call
test
cwtl
jmp
addl
xchg
sbb
push
addr16
ret
shll
add
xchg
push
aam
xchg
ret
scas
mov
sub
adc
clc
xchg
jbe
xlat
movsb
or
jecxz
add
xor
xor
out
xchg
addr16
mov
test
cwtl
push
cwtl
inc
cmp
push
ret
and
movsl
push
ret
jle
out
lret
sub
inc
enter
lods
gs
add
jmp
cwtl
sub
jge
pop
mov
mov
inc
mov
loop
and
cmc
push
add
pop
add
jmp
cmp
or
sbb
inc
pop
pop
roll
push
test
or
or
and
push
jnp
not
ljmp
out
cmp
and
cmp
lahf
iret
and
mov
sbb
xchg
test
rcrb
es
jl
idivl
cmp
stc
jle
pop
das
std
adc
shll
loopne
dec
mov
lret
mov
jp
aas
cmpsb
pushf
pop
adc
dec
jae
dec
xchg
sbb
jp
out
sti
push
pop
rorb
jl
std
push
mov
in
cmp
mov
mov
imul
cli
add
into
and
negb
insb
sbb
int3
mov
cltd
imul
cmp
in
loop
orl
push
pop
jg
adc
xchg
jns
xlat
xchg
mov
xor
outsb
jg
xchg
iret
shl
aaa
fsub
sbb
arpl
xor
sahf
mov
clc
inc
push
inc
and
aaa
mov
jns
shll
in
cmp
mov
cld
mov
pop
aaa
sub
xorb
fldl
fsubrl
leave
jmp
inc
jp
pop
icebp
adc
pop
loop
test
pop
mov
jmp
in
fimull
or
fdivs
xor
jo
lds
push
jecxz
out
pop
mov
sbb
xor
out
jne
or
jae
dec
add
and
nop
ja
imul
push
and
mov
push
mov
dec
xchg
mov
and
popa
lret
nop
push
fimuls
xchg
sti
sub
and
mov
fdecstp
fwait
cmp
cs
jae
adc
lret
cmp
sti
mov
stc
adc
cld
shrl
pop
pop
in
arpl
jo
retw
sbb
adc
xchg
inc
in
div
mov
daa
test
insl
in
xchg
sbb
and
ds
sub
loop
rcrb
jecxz
flds
mov
ret
jb
mov
mov
in
imul
orps
jnp
and
jle
pusha
dec
jne
mov
xchg
pop
jecxz
fwait
mov
gs
push
pop
loope
sti
aaa
rol
pop
es
ficompl
inc
sub
lret
movsl
enter
mov
mov
dec
cltd
icebp
cli
xchg
xchg
push
xchg
loopne
push
ret
stc
iret
pop
imul
xlat
sub
rcrb
loope
jno
je
inc
mov
loopne
sahf
repz
jge
xor
aaa
push
xor
mov
jmp
leave
loop
lahf
lcall
imul
cmp
jno
jecxz
ficoms
int
mov
rorl
and
inc
stc
repnz
loope
xchg
cmp
xor
gs
jge
das
sbb
test
leave
jno
jne
inc
sbb
xchg
insl
sbb
popa
dec
inc
stos
mov
inc
jb
cmc
pop
add
hlt
clc
add
sbb
arpl
movsl
stos
or
or
xchg
out
jmp
pop
pushf
mov
sarb
add
cmp
jp
in
push
lret
out
es
push
insl
adc
popl
push
mov
sbb
stos
push
dec
std
shl
adc
mov
xchg
test
jbe
aam
divps
test
jne
dec
lock
rclb
lcall
in
lds
mov
ja
js
xor
mov
jmp
and
mov
dec
cmp
push
or
dec
divl
mov
faddl
xor
cmpsl
repz
outsb
arpl
sub
mov
xchg
xchg
adc
rolb
push
push
outsl
lds
and
sbb
mov
mov
mov
pop
clc
mov
push
bound
mov
sub
rorb
mov
fstpl
jnp
and
out
imul
lds
adc
cli
lret
push
mov
dec
pusha
lcall
aam
xchg
sub
and
adc
cmpsb
mov
ret
pop
pop
push
gs
sub
mov
clc
xchg
mov
sahf
or
dec
xor
mov
fdivl
and
push
adcb
sahf
mov
xchg
lret
scas
xchg
fsubrl
in
push
int
jne
add
sbb
or
jbe
jg
sbb
hlt
jnp
rcll
lret
mov
lds
sub
lahf
in
jne
adc
xor
push
push
rclb
jne
lahf
mov
fisubl
in
jl
cmp
popa
das
pop
mov
das
aaa
out
insb
sbb
mov
sbbb
add
push
xor
xor
and
push
add
add
pop
mov
adc
loopne
stos
pop
and
aaa
mov
jnp
sub
sbb
mov
mov
mov
cmpb
call
mov
hlt
jg
xchg
push
hlt
fwait
lods
stos
rcrb
push
pop
lret
in
push
in
jl
sub
mov
in
dec
xchg
jge
sbbl
ret
sbb
cltd
fcmovne
dec
test
pop
mov
mov
outsb
arpl
lcall
jae
pusha
mov
adc
shll
jle
cmp
stos
gs
ja
mov
pushaw
xchg
lahf
or
cli
pusha
sarb
cld
inc
imul
aad
sbb
pop
sahf
pushf
in
jmp
push
cmp
arpl
enter
or
ds
push
and
std
repnz
and
mov
clc
pop
sub
test
mov
dec
fildll
aad
push
in
sub
mov
push
pop
popf
sub
adc
repz
pop
imul
jecxz
jno
shlb
adc
or
aam
movl
cmp
dec
leave
lds
arpl
cltd
inc
movsl
imul
test
repnz
add
mov
arpl
outsb
xorl
leave
cld
clc
scas
pusha
popl
pop
jle,pt
mov
filds
lea
and
aad
sub
jle
aaa
cmc
mov
mov
out
cmp
es
mov
mov
jns
imul
mov
es
jl
in
add
and
nop
pop
in
jne
fwait
cwtl
call
or
push
mov
pop
cli
or
imul
adc
pop
push
pop
clc
imul
orl
sbb
popf
fwait
sub
shl
movsl
gs
dec
fs
iret
andb
dec
insb
jge
xor
movsb
mov
sbb
into
shll
leave
jp
inc
andb
xor
pop
cmp
dec
repz
push
cli
cmpl
sbb
leave
xchg
incb
lea
add
jbe
push
jmp
sub
xlat
xchg
int
pop
mov
sbb
pop
mov
mov
xor
lret
xor
sub
xchg
xchg
and
sbb
mov
fiadds
push
adc
lret
push
xor
fdivs
popf
and
in
dec
adc
xchg
cmc
ljmp
int3
les
add
dec
mov
addb
rolb
nop
popf
mov
sub
bound
sbb
enter
pusha
mov
clc
mov
fcmovnbe
iret
lcall
jmp
into
mov
cmpsl
push
lret
jp
lock
flds
add
jne
xor
ficoms
add
mov
movsl
jle
and
dec
mov
loopne
es
mov
ds
add
mov
divb
popf
push
sub
xor
mov
inc
cmp
jns
fs
adc
mov
mov
imul
mov
and
shrb
push
and
lods
mov
int
cltd
out
bound
enter
cmp
sub
insl
scas
xor
jb
and
into
mov
jbe
add
dec
jle
pop
fs
js
arpl
aam
jno
add
es
xor
aad
rclb
sbb
lret
xchg
xchg
cmp
jbe
dec
push
cmp
out
inc
orl
mov
cs
sub
sub
adc
test
iret
out
push
inc
rol
sub
push
inc
lods
iret
pop
mov
mov
subb
pop
rcl
std
pop
loopne
cs
xchg
xor
mov
push
push
pop
sbb
idiv
icebp
fldl2t
pop
xor
push
je
cmp
mov
mov
xchg
scas
xlat
push
lcall
sbb
hlt
loope
ds
cmp
xchg
arpl
mov
push
popf
fadd
xor
dec
add
add
xchg
sbb
test
add
jle
dec
xchg
cli
cmp
sahf
sbb
sbb
ret
in
pop
mov
in
sbb
adc
icebp
push
and
push
sub
dec
mov
push
mov
out
or
xor
ret
mov
push
std
scas
pop
fdivrl
sub
adc
push
add
inc
add
out
pop
lret
pop
adc
pop
and
out
dec
movsb
ss
and
jle
xchg
out
pop
arpl
cmpsl
ds
es
sbb
lock
lcall
repnz
mov
test
push
push
fsubrs
adc
subl
sahf
pop
mov
and
out
sbb
fnstsw
nop
out
cwtl
pusha
adc
aas
test
dec
pop
shll
jg
cltd
fisubrl
outsb
pop
mov
cli
movsl
repz
sub
sti
dec
enter
sub
inc
mov
mov
stos
lret
sub
in
test
inc
jecxz
popf
clc
jmp
mov
imul
mov
mov
dec
cmp
out
xchg
push
sbbb
ljmp
cmpsl
test
inc
or
insb
test
mov
cld
mov
or
jecxz
icebp
dec
mov
mov
add
pop
cmp
fcompl
cwtl
pushf
push
pop
mov
xchg
mov
stc
add
loop
jecxz
into
clc
push
int3
mov
xlat
je
shl
pushf
sbb
fdivs
push
rcl
xchg
cli
test
and
mov
pop
pop
dec
mov
sub
adc
adc
push
fldl
out
mov
stos
dec
ret
pusha
mov
push
xchg
pusha
pusha
popf
xchg
cmc
mov
pop
inc
cmp
mov
and
addb
testb
mov
test
fmuls
mov
je
andl
clc
scas
mov
cmpsl
jle
push
cld
and
fisubrs
pop
jmp
adc
mov
xor
mov
jecxz
pop
cli
addr16
call
stos
sub
jl
aam
imul
jl
iret
faddl
ret
and
stos
scas
inc
outsl
and
outsl
push
add
xchg
adcl
push
pop
sbb
in
mov
repz
out
push
cs
ds
loope,pn
stc
lret
cmp
sub
sub
push
push
ret
sub
mov
je
imul
mov
outsl
inc
jno
lahf
cmp
outsl
mov
repnz
stc
daa
lods
pop
cltd
adc
das
lahf
push
notl
mov
andl
xchg
ss
popf
je
mov
adc
aad
inc
cmpl
push
cmc
push
fwait
mov
popf
cs
jecxz
pop
mov
xor
dec
hlt
inc
sub
insl
mov
mov
sub
sub
hlt
jge
adc
sbb
and
push
dec
pop
stos
and
mov
mov
cli
and
cld
mov
movsl
ret
in
pop
jp
ds
test
add
shl
cmp
clc
or
cld
jmp
repnz
jle
sub
push
jb
loop
sub
pushf
pop
mov
adc
adcb
add
imul
add
jge
cmp
fwait
enter
loopne
adc
sub
add
sub
cs
mov
and
setb
jl
in
xchg
adc
daa
ja
mov
mov
jg
mov
lods
jno
aad
mov
push
mov
inc
sub
dec
fsts
test
imul
lahf
inc
das
add
xchg
mov
xchg
fcoml
dec
stos
push
jbe
xor
dec
mov
insl
mov
mov
push
pop
mov
cmp
or
popa
jge
pop
xchg
jne
sahf
inc
xor
xchg
xor
call
std
js
mov
int3
cltd
mov
dec
jno
test
xchg
or
icebp
push
pusha
or
xchg
and
mov
loop
sbb
sbb
test
pop
lds
push
jmp
adc
divb
push
mov
notb
int3
inc
pop
and
push
fwait
push
lcall
popf
sub
dec
and
sbb
sub
mov
jp
xchg
neg
sbbl
rorl
inc
loope
and
out
inc
inc
insl
mov
in
sub
mov
repnz
xor
imul
inc
push
repz
cmc
stos
jo
cli
mov
mov
nop
dec
lret
daa
xor
mov
rorl
shlb
stos
mov
popf
ss
pop
fsubl
jae
and
inc
adc
mov
and
orl
insl
or
rolb
dec
test
loopne
adc
jp
outsb
xchg
push
es
lret
mov
dec
pusha
xor
test
mov
dec
push
dec
adc
gs
cld
and
and
xor
xor
pop
dec
rol
mov
adc
sub
out
and
outsb
ret
sbb
jmp
stos
cltd
ja
nop
pop
push
in
dec
mov
jg
pop
sbb
jae
rorb
aas
inc
jno
gs
or
lds
aaa
xchg
cmp
pop
adc
sbb
test
sbb
scas
adc
or
adc
xorl
xor
push
mov
add
movsb
out
or
jecxz
cmpsl
lock
mov
adc
cmp
push
mov
push
movsb
out
pop
push
mov
xchg
orb
push
int3
jg
movsb
stos
add
xor
mov
add
inc
fcompl
xchg
dec
mov
jmp
mov
ficoms
sbb
or
mov
enter
clc
dec
clc
out
or
stc
or
in
sbb
sub
jl
mov
movsl
dec
xor
idivb
xor
xchg
int3
add
je
xchg
subb
dec
sub
inc
cmp
sub
pop
aad
ljmp
mov
adc
daa
sahf
fidivl
pop
ret
sbb
daa
in
jbe
andb
xchg
and
aaa
jns
icebp
imul
call
aam
into
popa
adc
fnstcw
add
popf
frstor
lahf
push
out
mov
lcall
sbb
jb
loop
fs
es
in
ret
in
movsb
sub
testl
enter
sahf
lods
inc
dec
mov
push
xchg
xchg
and
leave
ret
cltd
mov
lods
push
push
lds
aad
mov
lret
rolb
add
test
in
jp
outsl
or
xor
sahf
adc
pop
mov
lock
in
or
mov
xor
lret
nop
xchg
imul
in
lcall
xchg
rclb
idiv
xor
xlat
xchg
inc
sub
pushf
inc
adc
xchg
lods
mov
mov
lret
inc
sbb
ss
sbb
pop
add
es
sbb
test
jecxz
jecxz
jns
mov
aam
or
int
push
mov
fcmovu
jle
lock
cmc
stc
add
push
call
push
cmp
adcl
mov
loop
mov
addb
aaa
aas
push
insb
sbb
popf
in
rolb
cmc
sti
dec
pop
outsb
push
cltd
cmp
xchg
or
inc
test
mov
and
dec
push
ror
aaa
loope
mov
xchg
dec
cmp
or
or
inc
pop
or
pop
mov
jmp
adc
aad
sub
cmp
lods
jnp
divl
push
cli
fidivrs
daa
dec
outsl
repz
xor
mov
push
ret
dec
ret
xor
divb
mov
jns
sub
jl
les
stos
js
mov
xchg
loope
call
mov
cltd
jle
cmp
jecxz
ja
mov
inc
bound
pusha
sub
push
dec
cmp
and
pop
pop
mov
jmp
mov
xchg
adc
lret
mov
lahf
shr
out
lods
mov
and
pop
xchg
jp
mov
xchg
mov
dec
cmp
sub
fiadds
add
fwait
push
call
fdiv
test
aas
or
push
clc
dec
insb
mov
nop
jno
pop
cmpsb
arpl
mov
push
daa
jne
rcll
fistps
aam
mov
xor
lret
xor
push
std
repz
cltd
sbb
mov
in
and
xchg
push
adc
cmp
adc
pushf
mov
or
jecxz
mov
rolb
dec
sub
mov
rcrb
arpl
sbbl
pusha
ud1
jg
aas
push
imull
arpl
aaa
sub
iret
out
inc
cmp
xchg
jae
dec
imul
movsb
sbb
ds
add
cmpsb
test
cmovb
adc
mov
fwait
inc
jmp
push
sbb
cmp
lods
or
adc
cmpb
in
lock
adc
push
les
pusha
mov
aas
jp
bound
push
es
insb
shll
pop
sub
mov
cmp
adc
adc
nop
or
xor
rcrl
and
hlt
pusha
lea
jl
xorl
in
mov
ror
pop
xchg
sub
fwait
dec
adc
sub
ds
mov
mov
sbb
pop
jl
pop
xchg
test
dec
mov
or
jl
rol
inc
mov
clc
xchg
dec
repnz
mov
jns
call
pop
cld
pop
jl
mov
cmc
mov
mov
adc
outsb
cmpsl
adc
stos
popf
dec
test
jge
scas
push
jg
stc
xlat
mov
mov
idivb
pop
sbb
sbb
dec
hlt
dec
icebp
xor
mov
mov
xchg
adc
out
inc
adcl
add
aaa
add
out
push
shl
xor
lret
push
das
xchg
das
xchg
pop
push
sbb
enter
sbb
add
pop
aad
leave
and
push
cmp
xchg
dec
adc
xchg
clc
arpl
jb
jecxz
bound
dec
aam
lcall
sahf
pop
fs
lds
pop
cmp
mov
adc
add
pop
cld
cmpsl
shlb
push
push
aas
xor
push
cmp
insl
pop
mov
sub
sub
aam
xor
add
fidivs
xor
jnp
sahf
das
into
in
fwait
add
es
stos
cs
sbb
pop
repnz
cmp
sub
cmp
xor
test
and
out
cmp
outsl
ds
test
js
push
fcomps
mov
push
pop
mov
inc
xchg
sub
movsb
jge
lea
dec
mov
movsb
mov
lock
bnd
dec
and
push
imul
mov
adc
prefetch
wbinvd
comiss
adcl
ret
pop
and
inc
subl
mov
into
pushf
push
xorb
jne
xor
ret
jnp
dec
outsb
test
repz
xor
inc
loopne
jge
jnp
ja,pn
insb
mov
aad
mov
xor
dec
int3
add
dec
cmovae
push
mov
inc
sbb
out
xchg
pusha
les
cmpsb
ret
sbb
jmp
std
xlat
sahf
inc
mov
shrl
aas
mull
aad
cld
push
lods
jnp
ret
es
xchg
add
push
pop
xor
fldenv
cli
data16
mov
movsb
punpcklwd
sub
pop
or
push
jbe
mov
push
scas
rolb
call
movsb
bound
outsb
add
jle
loopne
dec
lret
jmp
decb
jns
mov
pop
sahf
mov
push
movsl
jno
jae
nop
cmc
and
xchg
cs
andb
cltd
mov
add
dec
xor
xchg
leave
mov
hlt
fcmovne
dec
inc
stos
clc
inc
in
push
fwait
shlb
out
sub
sub
cwtl
mov
push
jecxz
cmpsb
dec
lock
or
pop
mov
loopne
cwtl
push
inc
icebp
dec
xchg
lahf
push
sub
sub
pop
pop
and
xor
dec
or
mov
add
lcall
push
pop
lcall
lret
jne
in
lret
jmp
call
inc
jge
lds
pop
xchg
jnp
das
fidivrs
xchg
push
push
sub
xchg
push
imul
adc
jne
adc
rorb
cmpsb
pop
flds
js
push
push
jne
popa
leave
jns
add
push
test
in
mov
insl
out
loop
das
dec
outsb
movsb
or
cmpsl
cmpb
pop
in
adc
xchg
adc
xchg
jb
jecxz
mov
mov
int
jae
das
les
imul
cmovle
push
out
lock
mov
test
adc
scas
mov
shl
lods
dec
int3
xchg
fcoms
cmp
cmpsb
push
iret
les
mov
mov
leave
repnz
mov
mov
jp
ljmp
popf
adc
cmp
mull
add
or
shll
out
mov
mov
xor
jo
insl
dec
idivb
es
cmpsb
push
cwtl
adc
fstps
cmp
ljmp
inc
sbb
pop
jecxz
lahf
popf
inc
jnp
cmpsb
outsb
rclb
sti
decb
pop
push
mov
dec
int
cmc
pop
pop
jnp
or
jo
shr
cmpsl
push
jg
push
loope
mov
mov
add
inc
pop
pop
fdivs
ror
iret
cld
daa
lret
sub
aad
or
sub
scas
dec
bound
iret
pop
loopne
or
mov
mov
aam
cmpsb
fmul
roll
and
arpl
cmp
lods
jge
bound
or
inc
mov
scas
xchg
mov
adc
lock
dec
lret
inc
ljmp
mov
test
mov
jae
jb
inc
jo
jb
dec
mov
cltd
enter
loope
xchg
mov
mov
add
sbbb
xor
inc
inc
jmp
or
push
jb
rcll
lcall
dec
test
jl
gs
xchg
mov
and
or
fildll
fwait
mov
mov
ret
sbb
cmp
adc
test
mov
loop
xchg
jge
arpl
jg
ds
push
and
mov
mov
lods
in
mov
gs
jns
or
in
dec
mov
sarb
mov
ljmp
jb
loopne
jae
pop
cmp
push
mov
mov
or
lret
into
arpl
sub
dec
cmp
daa
mull
movsl
leave
ret
cmp
sbb
inc
icebp
jbe
popf
xchg
xchg
es
filds
ret
idivl
sbb
mov
or
pop
cmp
pop
faddl
jg
jo
dec
and
les
outsb
daa
flds
jmp
test
stc
sub
lcall
adc
repz
imul
xor
pop
pop
add
jnp
mov
cwtl
xorb
test
cmp
pusha
adc
clc
mov
cmp
and
jnp
les
mov
xchg
jnp
add
push
cmp
pop
fsub
je
je
in
cwtl
cmpsb
fs
gs
jecxz
cmp
fnstcw
xchg
ss
inc
jmp
or
and
je
adc
xor
mov
sub
push
dec
out
mov
mov
out
add
jb
lds
pop
xchg
push
sti
fbld
mov
jge
in
pop
out
pop
ret
add
addr16
std
xor
fwait
dec
aas
je
repz
popf
mov
jne
leave
imulb
dec
ret
push
xchg
ljmp
cmc
xchg
jo
xorl
dec
data16
lcall
and
lods
aad
adc
lret
mov
sbb
mov
dec
push
mov
ret
lods
out
je
mov
cmp
repnz
xlat
lods
pop
pop
insl
add
push
and
lods
add
mov
fs
cmp
ret
mov
jl
in
fwait
cmpsl
data16
es
jecxz
mov
push
mov
and
ja
scas
mov
nop
jecxz
fst
insb
imul
iret
xchg
mov
jbe
mov
mov
mov
test
fcoml
jp
mov
and
sub
gs
inc
add
ret
fstps
hlt
lock
mov
sub
push
xchg
jg
dec
lcall
orb
pop
dec
movsb
lret
sub
xchg
inc
test
xchg
mov
add
mov
test
xchg
pusha
xchg
and
inc
std
xchg
xchg
inc
sbb
sar
lds
mov
mov
adc
pop
clc
pop
hlt
bound
cmp
xchg
mov
movsl
testl
add
cmp
adc
cmp
adc
sub
pop
mov
repnz
pop
inc
push
inc
call
lret
mov
aad
jp
push
negb
mov
xchg
repnz
pop
rcrl
push
nop
jmp
push
scas
sub
dec
cli
cmp
dec
sbb
xchg
out
push
rcll
dec
repz
lcall
push
cmp
in
and
stc
mov
out
into
mov
jo
sbb
test
lods
cmp
inc
cltd
push
into
push
xchg
jle
arpl
out
xchg
cmp
fs
pop
roll
hlt
sub
bound
adc
cltd
lahf
mov
jg
xchg
jl
loope
pop
push
jb
pop
and
ret
int
fisubl
test
repz
xchg
jg
lcall
mov
testl
add
mov
mov
or
stos
xchg
imul
push
adc
icebp
out
divl
fsub
and
fmull
pop
pop
repnz
pushf
mov
int3
flds
enter
enter
rolb
jle
pop
in
aad
and
inc
ret
shlb
cld
cmp
pop
stc
sbb
jae
jp
pmaxub
push
xchg
stos
push
mov
adc
cmp
cmpsl
xor
stos
mov
jae
rclb
and
fcmovne
push
fisubs
jae
or
fcmove
mov
sub
push
sub
imul
sbb
pop
pshufw
pop
shrl
push
mov
lods
aad
or
inc
rorl
push
mov
or
inc
jmp
add
inc
movsb
out
lahf
push
shlb
sbb
add
fwait
idivb
mov
jle
outsb
jmp
ss
lods
hlt
push
mov
xor
test
not
lret
ret
push
xchg
cmc
push
mov
repz
xchg
and
push
xchg
ljmp
xor
push
cwtl
rorb
test
sbb
cmp
pop
leave
sbb
jle
iret
pop
or
inc
sbb
mov
mov
lret
popa
xlat
daa
sbb
clc
in
lcall
xchg
mov
push
jp
adc
cwtl
gs
mov
mov
inc
mov
xchg
sub
mov
into
xor
lock
pop
lods
repz
and
andl
scas
ret
loop
adc
cmp
in
dec
jnp
push
lea
pop
mov
inc
push
jle
pop
mov
popa
mov
icebp
subb
and
sub
adc
mov
cmp
repnz
mov
clc
jae
push
or
push
cmpsl
sbb
push
cs
cltd
add
xchg
scas
fisubl
inc
dec
jo
xor
pop
jo
aaa
adc
mov
lods
cmpsb
xor
jno
loop
rorb
stc
push
or
out
sub
jnp
inc
adcb
fbstp
jns
rcrb
mov
mov
jae
mov
ljmp
mov
jge
scas
mov
or
mov
xorb
aaa
push
jbe
fdivrl
shrb
and
stos
sub
sub
sarb
fnsave
in
bound
sbb
dec
adc
lods
nop
testl
xchg
movsl
ret
into
push
xor
xchg
pop
gs
mov
call
movsl
adc
jae
addr16
lcall
xchg
lods
out
sbb
push
ret
mov
jge
in
jns
xchg
cmpsl
call
pop
sub
sbb
mov
cwtl
gs
xchg
cmc
in
lahf
pop
je
xchg
jg
push
add
mov
push
loope
mov
idivl
inc
cli
mov
pop
xor
or
ret
rolb
ljmp
xchg
fwait
out
jno
jecxz
adc
in
xor
ljmp
sbb
pop
adc
into
push
inc
push
test
xchg
icebp
push
sti
xchg
push
mov
push
pop
inc
cmp
sub
outsl
push
xchg
popf
mov
mov
mov
daa
test
or
decb
xchg
cmp
data16
fldl
lret
mov
cmp
inc
mov
test
rcll
mov
jg
fcoml
fwait
xchg
dec
jnp
popa
mov
mov
in
in
paddb
das
mov
jmp
pop
inc
sbb
bound
jmp
iret
xchg
push
icebp
adc
xor
dec
enter
imul
push
jp
bnd
sub
jg
xlat
fisubs
push
xchg
add
addb
movsl
imulb
inc
sub
stos
scas
test
push
cmp
mov
mov
mov
insl
cmpsl
jmp
addr16
js
pop
roll
enter
arpl
push
push
adc
jno
push
mov
and
fistpl
push
sbb
faddl
cltd
aas
pop
xchg
adc
stos
shlb
pop
sub
lods
lcall
dec
inc
rcll
push
call
sub
dec
subb
hlt
cmpsl
push
push
ret
lods
adc
sub
lds
jecxz
js
fiadds
punpckhwd
lea
pop
sbb
pusha
cmp
mov
ror
mov
ret
shlb
mov
jns
inc
rcr
and
or
cmc
or
inc
push
fwait
sub
in
sub
mov
adc
jecxz
lret
sarb
sub
dec
clc
fwait
ss
mov
pop
push
aam
xchg
jno
test
dec
fwait
inc
mov
clc
jecxz
push
jmp
pop
or
ljmp
dec
imulb
cmp
divb
inc
inc
punpckhbw
xchg
adc
or
dec
scas
ret
push
imul
pop
dec
gs
in
mov
sbb
nop
jg
scas
mov
iret
xor
jnp
repnz
fwait
test
or
shl
xor
adc
cmp
cs
xor
arpl
in
sub
cmpsl
test
popa
or
adc
push
or
and
loope
add
cltd
out
or
test
cwtl
fdivl
fadds
bound
mov
mov
xor
xchg
daa
jmp
xor
inc
aaa
lcall
outsb
imul
xchg
nop
and
and
mov
js
outsl
pop
mov
loope
bound
fisubrs
iret
int3
jl
sub
xchg
pop
outsb
xor
push
cmpsl
xlat
push
push
lds
push
lret
xor
movsb
iret
adc
popa
out
sti
adc
pushf
shr
repz
ja
push
jmp
ss
jns
mov
into
fcom
add
int3
mov
jmp
in
jne
lods
cmp
iret
les
jns
imul
fcompl
iret
std
andl
jo
mov
mov
out
mov
jnp
add
push
nop
shlb
cmp
inc
leave
lods
cmpb
scas
stos
shll
mov
jecxz
loopne
xchg
popa
adc
pusha
icebp
mov
push
mov
or
inc
xchg
inc
xchg
test
fiaddl
inc
sub
fisttpl
lcall
sbb
lock
cmp
repnz
mov
xlat
xor
pop
add
lret
andl
addr16
pop
or
mov
fs
jne
cmpl
push
xor
jns
dec
test
test
sub
nop
inc
mov
push
lds
cmp
jge
mov
inc
test
cmp
movsl
jne
jbe
mov
lock
mov
stos
ljmp
movsl
or
xlat
fcompl
adc
sbb
mov
or
das
mov
es
jo
mov
adc
or
mov
fs
pop
inc
sbbb
cmpl
or
push
adc
xlat
dec
and
ljmp
movsb
mov
pop
pop
lret
mov
xchg
orl
test
inc
aam
cltd
xchg
frstor
adc
pop
in
jl
dec
js
push
sbb
pop
clc
icebp
sbb
xor
es
inc
dec
loope
cwtl
cmpsb
leave
out
jp
pop
jb
cltd
pop
js
xchg
in
leave
pop
ror
pop
int
addr16
sbb
mov
xor
addr16
and
jno
adc
insb
test
fdivl
push
pop
and
fcomps
jb
jge
insb
aaa
mov
hlt
adc
xchg
inc
iret
sbb
or
xchg
xchg
and
lret
lods
bswap
pop
mulb
mov
cmpsb
sbb
mov
popf
mov
mov
clc
sbb
dec
int3
dec
test
push
push
stos
cmp
popf
jl
lods
data16
je
das
xchg
nop
fisubs
jb
jmp
ret
das
cli
jb
add
or
hlt
inc
pop
push
jns
and
cmpsl
sub
push
loop
cmp
xor
sub
lock
jmp
inc
add
je
push
xor
mov
pusha
fnstenv
stc
jge
test
sub
loop
push
daa
pop
xchg
cmp
out
jo
stc
in
xor
and
push
aaa
jno
mull
js
dec
push
mov
lock
add
dec
rcll
lahf
popf
dec
outsl
pop
xor
or
int
adc
mov
bound
and
jns
cmpsl
and
shlb
nop
pushf
insl
faddp
rcrl
xor
adc
cmp
xchg
scas
inc
jmp
xor
or
imul
push
decb
jge
fdiv
push
movsb
sbb
int
stc
icebp
sarl
dec
nop
or
in
jmp
test
shrl
ret
jg
in
cvtps2pi
mov
andb
jp
aad
jno
fldl
add
or
arpl
pop
aad
jecxz
ret
cltd
les
cmpsb
adc
insb
cmc
sub
add
stos
mov
xor
rclb
xor
lods
inc
clc
pop
xor
fsubrs
in
xor
cld
inc
pusha
add
stos
popa
cmp
daa
lret
sti
jb
adcb
fildl
jl
test
in
dec
cld
adc
xchg
fists
ds
sub
mov
push
sbb
lret
jmp
xchg
xor
xchg
lds
test
ljmp
push
inc
add
mov
adc
jle
and
int3
roll
jecxz
mov
jecxz
adc
jnp
pushf
xchg
mov
std
adc
cld
ss
xlat
cli
sarl
ds
loope
arpl
inc
lahf
in
int
dec
movsb
pop
dec
cmp
inc
flds
int3
test
rolb
cmc
adcl
ror
jmp
xor
inc
cmp
outsb
adc
jbe
test
xor
out
mov
adc
jo
and
or
cli
lahf
cmp
jne
mov
sahf
sub
adc
ja
pop
pop
inc
push
stc
or
or
cmc
outsb
jnp
sbb
mov
adc
push
loopne
add
inc
xor
adc
fildll
jl
xchg
int3
scas
mov
lock
sbb
lahf
mov
pop
xchg
enter
fcomp
neg
mov
bound
out
test
jno
adc
push
mov
fistpl
out
push
jecxz
lock
xchg
pop
shrl
icebp
push
mov
cld
imul
adc
add
aam
popa
out
mov
dec
lahf
mov
jne
pop
push
mov
add
push
js
insl
pop
and
out
ss
icebp
sbb
xor
add
mov
cwtl
mov
outsb
jnp
lock
sbb
jnp
iret
add
mov
sub
test
inc
popa
int3
jge
daa
scas
pop
int3
popa
jp
fistl
lea
mov
sub
pushf
mov
cli
jmp
leave
cmp
fmuls
es
and
movsl
or
jecxz
shlb
pop
aam
ret
repnz
jle
test
sbb
int3
outsl
mov
push
repnz
cmc
lret
push
fistpll
adcb
dec
mov
hlt
scas
shrl
test
jnp
mov
mov
jo
jmp
xor
mov
dec
sbb
ss
jp
or
or
les
ficoms
das
jne
mov
jecxz
jne
jge
pop
test
js
mov
iret
xchg
pop
jecxz
in
outsb
cmp
inc
mov
cmp
and
inc
nop
mov
and
fisttps
hlt
repz
adc
mov
lds
sbb
das
or
daa
bound
jno
xlat
push
mov
mov
mov
ds
popa
outsb
cmc
xchg
mov
adc
jns
add
std
stos
shl
push
movsl
dec
push
fcomi
out
xchg
jno
push
mov
push
push
cmp
xchg
cld
popl
aas
pop
pop
mov
xor
jge
push
cmp
imul
xchg
ljmp
inc
fstl
test
sub
inc
enter
cmc
fs
jle
fiaddl
stc
mov
push
lods
loope
lods
outsl
inc
shlb
add
aam
fstpl
dec
jne
push
jno
pushf
jl
daa
jmp
je
in
out
lods
adc
mov
and
movsb
mov
out
xchg
in
daa
loopne
push
mov
sbb
sarb
inc
ja
mov
xor
mov
jnp
rol
xchg
sbbb
lods
lods
out
cld
inc
add
lcall
xchg
lods
outsl
shrl
mov
sub
int3
or
sub
mov
mov
insb
or
dec
mov
out
lods
popf
cltd
push
cmp
or
xor
dec
stos
add
test
jecxz
ja
jno
lahf
add
lcall
es
testb
test
shll
mov
aaa
aam
mov
pop
dec
scas
jns
sahf
popa
mov
pop
hlt
aaa
cmp
xchg
or
push
mov
testb
xchg
inc
inc
out
jmp
push
insl
or
xor
xchg
lods
jo
mov
aam
pop
cmp
test
sub
cmpsl
imul
test
push
cs
push
cmp
xchg
andb
and
fwait
movsl
hlt
or
push
and
dec
repz
mov
adc
cmp
test
inc
sbb
pop
add
adc
mov
mov
test
add
cmp
mov
scas
mov
pop
or
and
sbbb
xchg
mov
xchg
jnp
mov
mov
sbb
mov
jno
mov
push
bound
popf
aas
jnp
dec
and
mov
xlat
cwtl
aaa
mov
mov
sti
mov
int3
sbb
and
insl
or
shll
fwait
push
lods
adc
vcvtps2dq
push
cwtl
mov
inc
pop
mov
mov
add
out
int
dec
mov
cmp
xor
mov
xor
mov
test
and
pop
xor
outsl
inc
cmp
loope
pop
mov
xchg
test
jae
cmp
add
icebp
dec
mov
adc
je
stc
mov
nop
scas
and
je
lret
add
lahf
mov
mov
push
and
sbb
movsl
std
bnd
test
pushl
inc
sarb
notb
mov
jno
xor
or
or
lahf
push
addr16
fildll
cmc
fidivl
pop
dec
jno
push
rolb
adc
out
pop
in
push
test
or
push
jno
add
sti
add
cmc
lret
cld
test
addb
es
or
xor
push
ss
jo
addr16
and
daa
mov
mov
sbb
and
test
test
adcl
and
leave
jecxz
nop
nop
sub
sbb
adc
jmp
inc
je
fnsave
out
in
push
shll
mov
dec
out
cld
ja
push
lcall
lahf
daa
ljmp
js
dec
sti
sub
outsl
je
pop
lret
lahf
mov
push
xlat
cmpsl
ret
mov
add
sub
cwtl
ret
or
clc
call
lock
aas
lret
xchg
push
mov
push
data16
cmp
and
xchg
push
adc
and
pushw
jnp
and
js
inc
rcr
and
cmp
std
sahf
adc
cmpsb
sub
adc
dec
test
cmpsb
push
pusha
shl
mov
fimuls
xor
mov
mov
pop
push
jo
out
push
sarl
adc
fbld
loop
int3
mov
add
out
loope
mov
adc
push
dec
push
nop
pop
stos
or
lods
sbb
xchg
bound
lahf
das
jl
fldenv
daa
mov
or
and
mov
mov
push
ret
push
fldl
aaa
fwait
push
lds
push
mov
cmp
mov
sbb
xor
int
or
mov
imul
sbb
int
sbbb
andb
int3
rcl
push
lods
sbb
dec
add
sbb
mov
jecxz
or
rclb
lods
cmp
adc
inc
pop
jp
mov
pop
test
push
push
jge
cmp
out
jb
jae
mov
push
or
imull
cmpsb
call
add
stos
fucomi
popf
and
fwait
stos
sub
call
aas
add
adc
xchg
add
lods
xchg
outsb
push
lahf
aad
insl
ret
add
mov
das
pusha
jne
orb
xchg
dec
pop
cli
rolb
mov
or
fbld
jl
mov
in
jo
adc
in
jle
in
popa
sbb
add
ret
sbb
mov
push
dec
out
sub
test
inc
shll
leave
stc
cmc
ret
dec
je
aad
enter
xor
or
and
sti
test
xchg
fistps
mov
pop
or
cmc
pusha
cmp
or
inc
inc
das
outsb
jecxz
mov
repz
cmp
in
popf
inc
xchg
push
sbb
and
jb,pt
inc
mov
outsl
out
inc
out
xlat
mov
xlat
movsl
lcall
enter
dec
dec
sub
add
fidivl
cmpl
dec
idivl
adc
mov
or
sbb
enter
aam
jl
test
push
mov
dec
mov
sub
arpl
fdecstp
test
seta
cmp
pop
mov
and
testb
add
mov
leave
cld
add
adc
dec
iret
fdivrs
mov
imull
inc
xchg
xor
lds
mov
sbb
pop
xor
mov
movsl
mov
dec
in
push
js
xor
jne
mov
std
pushf
scas
outsb
lea
jo
hlt
cmpsl
cmp
inc
movsb
xlat
in
pop
pusha
dec
negl
mov
inc
dec
popw
ret
xchg
xchg
mov
daa
ud1
imul
or
movsb
or
imul
imul
lahf
stc
test
jae
inc
arpl
hlt
xor
enter
jl
inc
or
dec
aam
or
ret
fdivrl
clc
imul
push
insb
shl
arpl
pushf
push
dec
jecxz
fcmovne
nop
xchg
pop
inc
mulb
js
xstore-rng
cmpsl
test
jns
sbb
pop
push
sbbl
test
inc
or
es
inc
dec
and
movb
push
aad
sbb
shrl
sbb
add
icebp
cmp
stc
aad
cmpsb
imul
cmc
sbb
jge
jae
dec
scas
stc
iret
cli
ret
xchg
push
test
add
ret
sbb
mov
hlt
fwait
jle
pop
fs
stos
mov
mov
jb
stos
sbb
jo
insl
out
ljmp
xorl
addr16
mov
shll
ss
out
loop
mov
mov
xchg
daa
test
pop
loop
sbb
ret
jge
stc
mov
enter
lcall
aad
daa
shrb
or
dec
ret
js
add
in
iret
xor
nop
sub
rorb
cmc
call
into
jno
mov
push
xorb
sti
cmp
mov
into
push
popa
fwait
mov
dec
xor
je
sub
test
or
stos
ret
les
aas
negl
push
jmp
imul
scas
filds
jp
ss
imul
mov
sub
mov
mov
lcall
mull
addr16
lahf
aad
add
int3
pop
stc
jne
adc
cld
or
xor
popf
hlt
bound
mov
mov
sysret
es
scas
fcoms
xor
or
jb
int
and
or
int
jo
and
adc
xor
inc
adcl
pop
mov
mov
pop
jmp
pop
ja
mov
mov
test
fistpll
sub
jb
sbbb
xchg
lock
jl
jbe
mov
xchg
jle
nop
push
mov
stc
js
push
mov
push
cltd
fs
pop
out
lea
cmp
or
pminub
mov
pop
xor
jno
arpl
xor
mov
sbb
int
popf
and
cmp
pushf
pop
mov
aam
jg
pop
jnp
adc
mov
movsb
in
dec
ret
stc
js
push
sarb
mov
test
das
pusha
ds
adc
pop
push
popf
js
mov
sbbl
push
es
test
sbb
add
mov
cmp
mov
fdivl
out
inc
aas
and
adc
mov
xchg
lahf
filds
les
std
fldt
aas
call
mov
push
int3
cmp
into
roll
add
jnp
hlt
pop
xchg
pop
aad
push
cmpsb
adc
mov
adc
sub
xor
mov
repnz
jns
jmp
jecxz
les
adcb
inc
mov
dec
sbb
and
jl
rcrl
lds
pop
out
in
dec
jns
mov
es
sub
aaa
xor
std
inc
dec
xchg
jae
sbbb
pop
mov
out
xchg
stos
sbb
adc
clc
aad
or
xchg
ja
cmpsb
xchg
pop
fdivrs
sti
jns
sbb
movsb
jae
das
in
pop
lahf
inc
test
mov
out
nop
xor
inc
mov
scas
jo
cltd
test
adc
adc
dec
mov
or
pop
dec
popa
aad
popfw
std
pop
jp
adc
cwtl
dec
scas
mov
mov
or
in
inc
into
int3
and
call
scas
cmp
add
jle
adc
sbb
sbb
cld
jmp
jns
std
sub
icebp
dec
imul
sub
movsl
cwtl
jp
popl
jl
dec
outsb
or
addl
add
cltd
mov
scas
insb
inc
into
stc
inc
mov
lods
fld
inc
jo
sbb
xchg
mov
sbb
aad
push
inc
out
and
lock
icebp
pushf
imul
mov
pushf
or
or
fcomps
adc
lods
mov
push
shl
aas
data16
call
cmpsl
dec
push
push
clc
rcl
jge
jle
adc
mov
scas
pop
mov
sub
jp
dec
lret
cmp
lds
lods
sahf
pop
jnp
dec
xchg
xchg
inc
jge
sub
sub
sbbb
sub
pop
ror
push
mov
dec
adc
out
xor
fsubrs
xchg
fimull
stos
fcomps
test
nop
xor
add
jecxz
aam
inc
ficoml
sbb
test
xchg
push
int3
or
mov
cmp
jecxz
mov
inc
cmc
mov
fmull
loopne
jns
scas
cld
jmp
lcall
or
iret
jbe
pop
fwait
addr16
mov
cmp
lret
fdiv
das
fiaddl
pushf
imul
mov
mov
adc
inc
pop
add
cmpsl
jne
or
hlt
dec
addr16
cmp
adc
sbb
syscall
xchg
cmp
inc
in
xchg
dec
repz
sub
or
and
loope
cmp
daa
mov
mov
int3
mov
dec
pop
mov
ja
addr16
aaa
cmp
pop
mov
sbbl
push
push
push
push
sbb
pop
imull
push
lods
adc
ret
lock
call
roll
sbbb
aaa
scas
stos
outsl
sub
mov
sub
loop
push
fnstsw
addr16
add
loopne
divl
jbe
enter
popa
hlt
lock
mov
pop
and
or
xchg
mov
pop
addr16
sbbl
and
test
fbld
or
jg
jl
cmp
sub
xchg
fwait
lcall
in
mov
in
xor
add
sbb
dec
add
rorl
cmp
pop
xchg
and
ret
pop
addr16
faddl
add
scas
and
les
sarb
adc
out
rorb
add
push
sti
pop
sub
ret
mov
xchg
pop
jge
faddl
fs
subl
or
push
out
cmp
imull
ja
loope
sti
or
mov
lcall
out
lods
or
out
test
es
mov
rorl
daa
sub
mov
je
xchg
adc
xlat
in
mov
mov
fdivs
lahf
jle
xchg
pop
jns
or
fwait
enter
push
adc
adc
xor
popa
sbb
or
pop
rorl
cmp
jp
iret
jge
mov
sub
stos
into
and
sbb
imul
mov
hlt
aas
sbbb
loope
aad
jle
jo
orl
ja
fdivs
inc
cmp
and
es
mov
arpl
pop
mov
mov
push
lea
fiadds
cmpsl
add
mov
push
arpl
mov
jge
sbb
ljmp
inc
lds
adc
insb
aad
adc
mov
cmp
sarl
dec
inc
pop
test
mov
adc
mov
xor
cmp
dec
xchg
ljmp
xor
xchg
jg
add
shr
xor
rorb
js
fdivrl
imul
mov
xchg
and
and
sbb
test
push
mov
insl
inc
cli
adc
dec
mov
or
fisubrs
push
xor
dec
pop
sub
loope
push
mov
cwtl
mov
sbbl
pusha
stc
fldenv
subl
outsb
fsubs
fmulp
sub
rclb
pop
push
dec
jbe
pop
mov
dec
bound
insb
push
xchg
std
shll
fidivrl
jl
pand
sub
out
cltd
xchg
xchg
mov
jmp
ret
jmp
xlat
xor
push
mov
std
pop
pop
push
and
and
jb
xchg
pusha
xchg
enter
jge
ss
jno
mov
jbe
mov
and
ljmp
daa
lcall
or
dec
or
pop
adc
insl
dec
cwtl
pop
mov
xchg
shll
ljmp
mov
pop
and
cmp
jg
xchg
and
cli
lret
mov
ds
and
movsl
cmc
adc
ss
pop
inc
pop
or
or
clc
lahf
aad
pop
and
es
jns
clc
int
jb
mov
lcall
aad
je
lods
push
or
mov
sti
pop
jnp
dec
fnstcw
shlb
call
sti
jb
cmpsb
shll
stos
imul
jge
cs
std
push
adc
pop
scas
add
test
loopne
add
test
push
push
adc
pop
das
inc
in
cli
popa
xor
repnz
lahf
dec
aas
add
arpl
stc
test
cli
pop
decb
dec
push
mov
in
mov
mov
xor
or
push
in
jp
ret
mov
test
or
push
ret
adc
dec
push
shll
daa
mov
inc
sbb
mov
jnp
pop
in
mov
insl
fsubrs
push
fs
adc
add
cld
inc
das
sbb
pop
fdivs
adc
movsb
in
mov
gs
jmp
push
psrld
movsl
outsb
mov
shl
insl
int3
test
xlat
jo
pop
jne
and
sbb
xor
xchg
push
test
mov
push
jge
fcoms
in
repz
jecxz
lcall
test
jnp
cmc
cmp
push
cwtl
mov
sub
sub
lds
push
push
scas
pop
fdiv
sbb
cmp
shlb
mov
fwait
jo
xchg
pop
xor
adc
loop
mov
adc
xor
pop
and
sti
xchg
push
mov
sub
sahf
xchg
cwtl
cwtl
test
test
and
lcall
push
ret
test
cmp
xchg
addr16
mov
sbb
popf
push
cs
das
mov
jmp
mov
int
jge
aam
repz
sbb
pop
add
mov
in
and
mov
xchg
fisubs
fcoms
adc
scas
lret
and
jbe
jmp
dec
shrb
mov
xchg
lret
aad
jle
dec
ficompl
add
scas
mov
and
and
mov
jns
mov
shll
fisttpl
data16
dec
pushf
sbb
imul
testl
push
leave
insb
lods
or
mov
shl
cli
add
stos
push
dec
inc
out
ds
sbb
sub
fcomps
adc
into
xchg
inc
out
mov
lret
push
adc
fwait
cmp
cmp
int3
xor
dec
adc
fsubp
xchg
cmpsb
add
cmc
sub
mov
lcall
mov
test
push
movsb
xor
adc
add
cmp
fcmovbe
inc
pusha
into
nop
cld
sbb
add
mov
shlb
xchg
loope
push
or
sub
mov
mov
jecxz
xchg
jge
mov
inc
cmc
pusha
fwait
arpl
fs
mov
add
pop
mov
mov
inc
lods
mov
jnp
mov
ss
xchg
mov
getsec
outsl
js
jbe
push
pop
pop
ljmp
cli
stos
cwtl
pop
in
mov
cli
mov
dec
lret
xchg
stc
or
cld
lea
xchg
movsb
out
pushl
shll
outsl
ret
inc
stos
repz
rcl
ss
movsl
mov
push
pop
insb
jb
cmpsb
adc
aas
fdiv
insl
vpackuswb
xor
lret
lcall
push
adc
lods
jne
lods
lods
test
mov
ljmp
bound
mov
adc
insb
daa
xchg
inc
add
jne
push
test
sarl
jo
push
movsl
add
add
cwtl
test
cmp
jecxz
divl
enter
mov
in
das
pop
ret
imul
arpl
xlat
in
push
jne
jbe
cld
mov
fmull
cmp
push
mov
mov
movb
add
jb
mov
lcall
xor
jbe
fsts
sub
inc
inc
xchg
cmp
inc
sbb
stos
push
aam
add
inc
mov
nop
xchg
or
or
mov
jp
mov
or
aas
lds
mov
jbe
in
jne
xor
pop
pop
and
mov
jo
adc
adc
xchg
pop
jge
mov
popf
cmp
mov
mov
add
mov
pop
hlt
push
mov
mov
jbe
roll
mov
mov
ss
jbe
fwait
cltd
lret
nop
lret
fldenv
mov
sti
clc
cmp
leave
mov
out
xchg
test
lods
jnp
push
inc
fldenv
push
cmp
movsl
xor
int
jnp
dec
ficompl
subb
ja
xchg
push
pop
imul
and
lahf
xor
inc
lock
call
in
sbb
push
jge
xor
daa
cmp
and
pop
push
repz
jae
push
mov
mov
nop
enter
outsb
ficoms
repz
cld
dec
jp
jle
adc
mov
addr16
shrb
mov
cmp
push
je
jmp
adc
mov
dec
mov
cli
sub
mov
ret
and
out
mov
xor
inc
xor
and
sahf
stc
pop
inc
lcall
adc
sti
lods
jle
fs
xlat
mov
adc
fsubrs
jp
adc
push
mov
imul
pop
xchg
stc
insb
je
imul
notb
js
pop
xchg
rol
loop
cmp
shll
mov
jnp
testb
stos
dec
cli
faddl
aad
ja
inc
push
and
sub
movntps
leave
loopne
test
pop
cmpsb
stos
cli
xchg
add
fdivl
mov
xchg
aam
das
sbb
arpl
jge
repz
fwait
push
jp
jl
mov
sbb
out
rcl
mov
repz
jo
movsb
mov
mov
fwait
mov
or
mov
loope
testl
jg
inc
out
sarb
push
xor
mov
jae
imul
popw
loopne
add
pop
xor
xor
jo
out
mov
lret
add
xchg
std
cmc
or
ds
pop
sbb
cmpsb
jle
fsubs
js
cli
les
sahf
xchg
inc
gs
inc
fadd
push
int
and
outsl
repz
lret
loop
inc
pusha
or
sti
shl
inc
pop
mov
cmc
loop
cmpsl
cltd
scas
and
jmp
adcb
sbb
shl
sahf
cmp
mov
sbb
jo
jne
or
pop
stos
arpl
movl
addl
mov
jge
pop
pop
add
out
lret
jns
dec
dec
movsb
jg
cld
ret
test
or
leave
aas
push
mov
into
mov
mov
and
pop
mov
mov
iret
insb
out
test
fmull
pop
aad
mov
mov
ja
lods
adc
xchg
adc
out
jp
dec
insl
mov
and
xchg
push
inc
push
ror
jbe
testb
fsts
mov
push
add
adc
in
lret
jo
repnz
inc
fucomp
mov
dec
loope
repz
sti
ret
pop
cmp
fmull
xchg
push
and
rcll
and
or
add
mov
in
aad
sbb
mov
xor
inc
mov
int3
sbb
fidivs
fdiv
jge
add
subl
lahf
inc
and
push
sub
lea
adc
push
jle
nop
jae
das
pop
add
adc
inc
push
ror
mov
out
imul
mov
ja
jmp
xorb
jno
inc
mov
outsb
gs
sub
loope
cmpsl
cltd
inc
clc
scas
mov
sahf
pop
add
movsl
ret
lea
insl
in
add
lods
gs
into
int3
xchg
sarb
test
aaa
push
jge
cwtl
icebp
sarl
mov
or
xchg
ds
inc
fld
push
cmp
movsb
sahf
int
movsb
movsb
popa
daa
fld
cmpsl
movsl
pop
aad
mov
in
ds
push
or
popa
xor
in
pop
add
enter
stc
dec
sub
add
subb
push
xchg
cwtl
fmul
mov
cmpsb
cld
adcl
jae
inc
jl
ss
sub
sarb
dec
mov
mov
lcall
lock
cmp
add
xchg
test
push
pop
push
jno
push
push
dec
push
adc
push
test
adc
aas
adc
ret
push
fistpl
icebp
dec
xchg
adc
mov
xchg
das
cs
cmpl
lods
jle
jo
outsl
fistpl
imul
push
jp
mov
inc
mov
and
in
sbb
jno
int3
out
push
aam
fildll
mov
add
das
and
fldcw
icebp
test
mov
jb
sahf
cmc
scas
sbb
mov
jae
sub
inc
addl
out
out
aas
hlt
inc
push
mov
scas
shlb
sub
shlb
pushf
cwtl
inc
aas
in
stos
push
mov
out
xor
add
ja
cmc
inc
fcomp
jle
and
push
and
mov
fistl
push
add
out
fmul
in
cmp
jg
and
jp
inc
mov
aas
enter
std
fdivr
mov
aaa
jns
mov
cmpsl
push
push
pop
push
int3
repz
sub
push
cld
jg
or
inc
sbb
add
mov
sub
mov
sbb
test
xchg
mov
adc
jmp
pop
mov
cwtl
pop
pusha
xchg
rcrl
dec
mov
jo
xor
sar
mov
xor
add
dec
jne
fs
pop
or
test
push
cli
xchg
lds
jnp
pop
mov
lods
cmp
and
fsubs
lret
pop
rolb
mov
out
out
lret
fs
sub
cmp
sbb
fstl
lret
inc
shl
cmpl
jmp
cmp
addb
or
jae
pop
cmpsb
daa
jb
mov
ds
cmp
add
out
ss
shlb
push
xor
es
or
or
push
push
adc
lea
mov
out
pop
je
ljmp
mov
roll
pop
aas
push
and
test
add
and
sbb
inc
mov
arpl
lea
loope
int
mov
imul
and
enter
inc
add
stos
imul
pop
iret
inc
mov
lods
or
stos
pop
cwtl
sbb
or
pop
sti
nop
ret
add
xor
pusha
sahf
mov
sub
pop
xchg
pusha
jnp
cmp
xchg
aaa
adc
adc
mov
gs
loopne
jle
testl
inc
pusha
addr16
sbb
call
mov
add
sub
emms
test
outsl
jmp
push
sbb
mov
orb
xorb
loop
ja
fists
jb
jle
jge
xor
out
mov
mov
ds
pop
mov
test
ror
inc
js
ret
idivl
xchg
dec
mul
jge
loop
mov
lret
jmp
clc
cmp
pop
pcmpeqd
dec
ss
fbld
sbb
ret
mov
xor
sub
cmp
inc
es
rcl
mov
jns
cmp
imul
and
sub
push
xchg
sbb
dec
mov
xchg
sti
mov
jae
or
fdivr
nop
repz
aad
sbb
push
push
add
daa
and
mov
pop
mov
lcall
mov
mov
or
inc
xor
and
ljmp
cmpsb
fisubl
in
push
daa
sbb
dec
movb
test
cmp
call
data16
fstpl
pop
inc
xchg
pop
addb
push
xchg
dec
in
lea
xor
inc
lret
fsubrl
cmpb
pop
fmulp
rclb
fwait
outsl
xchg
push
and
test
adc
jle
xor
and
xor
adc
out
jge
push
cld
jmp
add
pop
cmpb
and
out
incb
jnp
ret
fisubl
add
xchg
inc
lret
cmp
sub
aad
rorl
outsb
dec
loope
out
stos
push
sar
hlt
aas
dec
vcvtsd2ss
mov
or
jo
call
shrl
fadds
outsl
and
dec
jle
iret
adc
jmp
and
mov
leave
cmp
inc
push
adcl
jp
data16
xchg
call
arpl
lret
add
stos
xchg
or
movsb
adc
idiv
into
bound
mov
js
test
pop
jo
sbb
sbb
mov
subl
mov
test
cltd
xor
je
fdivs
add
mov
push
rorl
lahf
xchg
jmp
inc
fdivrs
inc
push
jmp
scas
mov
loopne
mov
repz
pop
sbb
cld
leave
dec
mov
dec
xchg
fwait
pop
xchg
inc
ret
fwait
shlb
mov
into
adc
cs
add
sbbl
mov
gs
push
mov
faddl
lret
fistpll
sahf
cld
imul
xlat
pusha
jns
add
dec
mov
fistl
push
sbb
mov
dec
das
incb
xchg
xor
ficomps
adc
jecxz
inc
insb
xchg
sub
push
testb
mov
xchg
cmpsb
insb
mov
loope
jbe
scas
xor
imul
out
test
stos
pop
inc
into
pop
mov
mov
pusha
cwtl
mov
int
pop
std
dec
imul
lret
lahf
sbb
ja
jb
mov
addb
sub
adc
leave
int3
dec
jge
push
sub
jmp
adc
test
out
cld
ret
xchg
pop
add
or
or
inc
in
shlb
andb
leave
stc
rorb
das
clc
sub
cwtl
mov
fbstp
add
mov
mov
fisttpl
pusha
pop
nop
pop
push
icebp
arpl
pop
neg
ds
adc
mov
push
ret
and
adc
pop
iret
lret
xchg
sbb
xor
inc
lea
imul
push
add
sub
int3
inc
jl
sub
or
sbb
mov
fcomps
mov
pop
iret
in
lds
arpl
mov
mov
xchg
pop
cwtl
mov
hlt
daa
mov
push
in
cmc
jmp
xchg
xlat
cmc
mov
lahf
test
xchg
outsb
add
outsl
daa
mov
xchg
cs
push
push
push
cld
orb
push
rclb
lock
ja
and
sar
hlt
and
jno
cmp
jge
popf
cwtl
scas
mov
nop
scas
xor
mov
int
xchg
ds
xchg
xor
mov
xchg
inc
adcl
lcall
dec
sbb
loope
aaa
push
xor
movsb
jno
jno
adc
mov
movsb
pop
enter
pop
cmpl
xchg
lahf
pop
shlb
push
popf
inc
push
cmp
in
sub
cwtl
push
jmp
mov
or
xor
xor
jbe
adc
ret
push
sbb
stos
push
fadd
icebp
mov
mov
sbb
push
int
out
cmp
jbe
icebp
fwait
fwait
push
xor
mov
rorb
outsl
sub
adcb
shlb
incl
gs
insb
pusha
inc
enter
inc
stc
or
xchg
push
notb
mov
push
ret
fstp
push
lcall
lods
sahf
call
add
xchg
imul
xchg
push
call
gs
mov
push
jge
or
les
pop
movsb
push
push
dec
ds
xor
sbb
inc
stc
dec
insl
inc
xchg
jmp
inc
pushf
call
jecxz
gs
aam
mov
push
mov
jne
mov
ss
xchg
dec
faddl
lock
xchg
aas
mov
mov
or
jl
es
mov
xor
jge
inc
outsb
rclb
adc
xor
iret
stos
sub
ret
je
mov
push
add
jl
and
repz
xor
pop
aam
dec
in
and
mov
addr16
mov
jbe
pop
sbb
pop
dec
ja
cld
sbb
icebp
mov
addr16
stos
cs
mov
push
out
int3
ret
ficoml
cmpsb
push
test
push
cmp
mov
cmp
dec
push
mov
add
adc
xchg
aam
xchg
mov
mov
inc
out
stc
pop
cmpsl
add
pushf
ficoml
dec
mov
adc
sub
mull
fmull
jb
push
or
inc
lea
pop
lret
pop
jecxz
jnp
aaa
push
test
push
xchg
add
mov
jmp
ret
sbb
adc
hlt
test
jg
int
bound
xor
mov
lahf
or
push
pop
divw
int
stos
loope
jb
fidivrl
aaa
jns
in
pop
and
loopne
cmp
ss
lods
ficomps
call
jg
push
into
outsl
stos
stos
repz
outsl
jp
xchg
inc
out
lods
sbb
ficoms
xor
xor
out
repnz
and
sbb
push
out
xor
int3
lsl
cwtl
jp
stc
lahf
cmp
dec
dec
jmp
test
gs
inc
inc
dec
mov
cld
push
mov
adc
outsl
xor
mov
je
adc
and
nop
icebp
fwait
xchg
pop
adc
lds
aaa
hlt
xchg
mov
sahf
sahf
adc
outsl
imul
or
jbe
cld
lds
cmpsb
sti
repz
shrl
sub
sbb
scas
movsl
fimull
fcompl
jl
pushf
pushf
or
out
push
rorl
and
mov
xlat
mov
daa
pop
fs
xchg
inc
hlt
push
into
cmp
ss
lea
adc
sub
mov
test
dec
mov
cmpsl
sub
or
lds
mov
pop
inc
clc
mov
hlt
lea
jp
xchg
test
push
dec
lret
hlt
mov
sub
xor
hlt
out
pop
cli
arpl
and
repz
cwtl
mov
ret
and
cmpsb
movsb
lret
add
push
jle
pop
mov
mov
lds
lahf
daa
pushf
push
into
xor
das
inc
lods
adc
data16
xchg
lds
ret
insl
in
jmp
movsb
sub
push
xchg
add
sub
adc
adcb
jne
jno
push
inc
es
sbb
stos
xchg
adc
mov
sub
pusha
jns
les
cmp
lods
push
xchg
aaa
push
cmp
inc
repz
subb
loopne
loopne
cmp
jo
xchg
in
cmp
lahf
shlb
xchg
or
jecxz
popa
addr16
jle
lods
add
dec
movsl
sbb
sub
in
inc
mov
hlt
and
or
insb
xor
fstl
or
fisubrl
pop
shll
mov
int
cs
fcmovne
mov
arpl
jo
xchg
out
push
mov
jo
xchg
mov
das
scas
dec
sub
cmp
js
cmpsl
lods
mov
cli
mov
push
or
js
fistps
loopne
sbb
inc
popf
call
test
lret
mov
js
movsl
or
or
inc
testl
mov
or
dec
xor
imul
mov
and
xchg
rorl
xor
or
fidivrl
or
add
imul
es
sub
sti
add
and
and
out
jo
sub
sbb
mov
outsb
sub
in
cmc
push
mov
or
les
push
gs
ret
ret
pushf
mov
insl
punpcklwd
sub
add
bnd
ds
imul
mov
cmp
adc
or
in
xor
and
fiadds
imull
movsl
cmc
std
or
cmp
push
mov
cmp
cmc
scas
jae
pop
lods
mov
mov
test
mov
rcr
pop
jg
int3
lods
popa
dec
fmul
fidivrl
sbbb
daa
nop
sub
aad
pusha
sub
es
test
push
jae
clc
mov
add
xor
dec
dec
mov
mov
data16
test
stos
sub
xchg
pop
and
sti
cs
aas
addr16
cltd
mov
or
incl
int3
jg
adc
fidivrl
add
sti
fldt
negb
mov
xchg
cmp
ret
fildl
mov
mov
and
jbe
jecxz
outsl
inc
xor
pushf
out
or
add
dec
test
or
out
aaa
jne
roll
test
pop
xchg
gs
les
mov
mov
in
xor
dec
insb
and
push
jge
jbe
mov
sbbl
or
xchg
xchg
lods
stos
sbb
mov
notb
sub
insl
mov
iret
jno
clc
ret
lahf
sbb
fisttpll
sbb
sarb
lods
int3
push
shl
and
inc
mov
leave
add
lock
add
mov
cmp
lea
ret
fstpl
mov
test
inc
sahf
les
pop
fiadds
stos
sbbl
cmpps
lods
insb
jp
clc
cli
push
sub
xchg
add
xor
lea
rcrl
inc
pop
xchg
pop
push
loop
js
enter
pop
int3
bound
out
stos
xchg
mov
outsl
xor
xchg
and
or
xor
or
jl,pt
and
inc
dec
arpl
cs
mov
test
out
in
pusha
sub
jae
push
mov
cld
sub
cmpsb
out
cltd
jo
mov
out
jecxz
xorb
pop
cmpsl
dec
adc
popa
push
pusha
cwtl
mov
xchg
mov
mov
dec
pop
push
cmp
xchg
jl
aad
dec
dec
loope
das
jp
sub
inc
lock
in
pop
aaa
or
sub
das
adc
xchg
outsb
lahf
cmp
add
les
dec
dec
sbb
lock
gs
bound
inc
ret
xchg
iret
out
mov
ja
clc
inc
pushf
adc
repz
popf
push
cs
pop
outsb
jle
in
bound
js
clc
push
mov
jge
fsubl
fwait
xchg
out
inc
dec
cmp
jmp
cli
sub
in
in
mov
cwtl
adc
push
enter
mov
push
and
mov
jg
in
outsb
addr16
xor
add
hlt
push
je
iret
in
sbb
push
rcll
cltd
push
test
adc
andb
rcll
and
rcll
xor
scas
hlt
out
clc
jle
sub
xlat
inc
inc
lret
rclb
adc
popf
scas
mov
pop
rorl
outsl
fldl
sbb
sbb
adc
cmp
xor
add
iret
jno
push
cmp
mov
or
mov
push
lds
mov
call
cmpsl
and
push
inc
push
dec
xchg
push
dec
cli
in
insl
adc
bsf
in
jae
add
lods
sub
pop
scas
sub
shlb
pop
xor
fwait
xor
inc
mov
push
addr16
stos
jns
icebp
movsb
or
xor
insl
popf
dec
or
fwait
sub
jne
in
add
sbb
lcall
lahf
dec
stos
nop
sub
adc
jno
mov
sub
mov
pop
sub
cmp
stos
inc
sub
jb
xorb
test
xchg
xchg
ret
jo
fists
fidivs
das
js
lahf
pop
out
inc
jmp
sub
repnz
cmp
xor
js
mov
mov
jo
jo
inc
fists
fdivl
xor
pop
sti
sub
subl
mov
cmc
dec
adc
in
jne
pop
sub
push
rorb
loopne
gs
push
adc
pop
subl
sub
sbb
mov
shlb
jmp
notb
mov
or
pop
inc
enter
cltd
push
push
push
cwtl
bound
test
out
leave
fwait
pop
xchg
push
in
sbb
pushf
repz
mov
sbb
les
mov
aas
gs
xchg
xchg
gs
arpl
pop
push
mov
sub
ja
pop
scas
mov
addr16
addr16
xchg
push
insl
cmp
inc
push
mov
jle
add
push
jge
cmp
loope
es
cmp
repz
ljmp
mov
es
das
jge
sub
mov
cwtl
outsl
clc
insl
push
jge
mov
shrb
aad
cwtl
jmp
out
pop
xor
mov
mov
inc
sbb
in
jae
sbb
fs
scas
sub
sbb
mov
test
test
fs
inc
sub
dec
add
das
xchg
mov
fstps
add
mov
mov
xor
xor
ja
inc
rol
jae
add
adc
addr16
mov
xchg
jge
xor
fistpll
dec
repz
and
insb
jb
mov
cltd
lds
push
jle
push
mov
outsb
ja
and
cmpsb
sahf
cmp
ret
sbb
cmc
lds
imul
pop
xor
in
sub
iret
loopne,pn
pop
xor
sbb
add
lods
xchg
add
cmp
sub
testb
xor
and
ret
rorl
push
adc
aad
scas
loop
mov
adc
loop
adc
sbb
iret
mov
ds
icebp
sbb
xchg
jo
lcall
lock
pop
rcrb
jne
mov
daa
push
out
aam
adc
in
insb
xor
and
shlb
shl
and
outsl
push
test
in
sub
in
or
xchg
out
subl
xlat
cwtl
lret
and
inc
fisubrl
xchg
mov
mov
xchg
jbe
dec
jae
les
sub
int3
aad
scas
popf
and
orl
mov
int
aas
pop
fnsave
jecxz
xchg
mov
repz
clc
std
and
and
cwtl
outsl
mov
es
mov
mov
mov
jo
test
outsb
lahf
add
and
cmp
pop
jns
stos
dec
push
mov
arpl
cwtl
pop
xor
rorb
stc
mov
gs
popa
in
jbe
sti
jp
lret
pop
out
xor
dec
nop
notl
mov
pop
mov
jge
sub
iret
adc
or
data16
jle
les
arpl
das
es
and
add
bound
shlb
enter
lret
xor
test
int
outsl
outsb
mov
fisubl
rorl
pop
outsl
test
mov
sub
fsts
cwtl
lret
sti
push
int3
lret
and
mov
and
pop
xor
adc
aaa
roll
int3
jnp
and
mov
sub
sbb
xchg
xor
int3
add
sub
aas
fwait
adc
and
mov
xor
aam
jl
inc
pushf
ljmp
and
cwtl
mov
mov
insl
outsb
jl
cs
arpl
int3
pop
and
dec
ja
insb
aad
aaa
scas
sub
repz
adc
mov
ret
mov
pop
and
xchg
or
xchg
test
add
rol
push
dec
into
xlat
push
push
les
lret
in
lahf
fimuls
push
leave
mov
mov
lods
shl
jno
sub
xor
cmp
out
int3
mov
insb
aam
xor
test
inc
notl
mov
xchg
push
fstps
pop
pusha
out
filds
push
idivl
cmc
and
adc
jle
mov
ret
gs
pop
adc
fisubl
ret
push
add
push
lea
sarb
out
mulb
ljmp
inc
scas
inc
jg
shr
lret
sub
das
pop
sahf
mov
push
ja
into
mov
mov
into
pop
jns
inc
jecxz
aas
sbb
loope
imul
ss
lods
dec
fistps
rep
and
cli
xchg
lret
scas
inc
in
or
jmp
ret
xchg
jl
pusha
loop
filds
sbb
cli
jge
jg
sub
and
scas
inc
push
out
add
stc
stos
pop
ret
loop
jbe
jg
mov
stc
stos
out
and
or
cmpsw
xchg
test
in
call
lock
lahf
pop
xchg
mov
sub
and
pop
pop
cmp
xchg
loopne
cmp
stos
mov
jmp
out
jb
adc
jne
jb
add
stos
divb
addr16
push
leave
inc
adc
pop
cmp
push
mov
xchg
fldl
test
sub
inc
cmpl
loop
add
fstpl
push
mov
xlat
lods
mov
sar
cmp
mov
mov
xchg
ds
sub
jbe
or
mov
mov
in
xchg
fstpl
out
bound
in
mov
xlat
in
and
loope
dec
inc
fs
imul
jne
xchg
push
sbb
andb
xor
lock
mov
and
inc
scas
mov
je
bound
jns
out
adc
mov
xchg
add
push
in
in
xor
mov
push
push
mov
into
cs
cmpsl
xchg
int3
cmpsl
xor
push
loopne
stos
cmpsb
pusha
xchg
lods
xchg
xchg
sbb
jno
popa
negl
xchg
jo
pop
movsb
popa
clc
rclb
xlat
mov
inc
outsb
push
inc
lds
sub
rcrl
leave
inc
bound
jmp
fdivs
out
push
gs
mov
shlb
mov
xorps
adc
enter
aam
jg
lock
inc
inc
sbb
push
and
sub
xchg
pushf
cmp
out
cmpsl
dec
dec
popf
cmp
cs
jl
arpl
sbb
push
jmp
mov
ja
mov
dec
lea
mov
jle
aaa
jo
mov
push
les
and
insl
jecxz
lret
subl
mov
mov
cmc
mov
push
push
push
popl
enter
mov
fldenv
xor
jp
adc
or
cmpsl
or
mov
xor
outsl
stos
xchg
pushf
sub
pushf
fdivrl
arpl
lds
int3
mov
js
fiaddl
mov
repz
shlb
sahf
nop
cld
out
mov
leave
xor
push
push
adc
mov
push
mov
ret
aaa
movsl
fcoms
mov
mov
movsl
fnstcw
mov
jno
inc
xor
test
xor
sbbl
stos
arpl
dec
push
xor
xchg
mul
insb
push
mov
mov
and
test
sahf
and
in
fsubs
jmp
mov
aad
mov
mov
lock
sbb
push
jb
js
mov
ljmp
mov
test
pop
clc
inc
cmp
jl
enter
sar
mov
and
ror
daa
lcall
fnstenv
in
rorb
sbb
xchg
imul
xorb
pop
pop
fdivrs
push
or
lea
bound
push
ret
cs
xchg
dec
cmp
mov
xchg
out
mov
aad
xor
rep
dec
jne
push
cld
bsr
int
xor
imul
idivb
out
cld
ret
xor
xor
push
xchg
test
in
scas
inc
xor
jmp
sti
scas
mov
mov
nop
mov
rcrl
push
mov
popf
inc
test
and
lret
xchg
mov
xchg
sar
loopne
dec
mov
test
movsb
fwait
push
push
mov
mov
cmp
mov
sbb
xor
out
push
and
es
in
mov
lods
addb
sti
fnstenv
xchg
pop
clc
xchg
pusha
add
pop
push
fisttps
add
out
add
mov
jnp
pushf
ja
cmpsl
mov
mov
ja
xor
push
xor
repnz
imul
in
into
xor
mov
in
mov
arpl
sub
pop
insl
nop
inc
pop
sbb
cmp
pop
xchg
cltd
adc
add
jmp
xor
sub
mov
mov
clc
xorl
cli
cmp
int3
adcb
pop
sub
mov
scas
mov
shl
mov
sub
pop
adc
jns
push
loop
adc
or
lret
ss
fcoml
ss
popa
xorl
and
loopne
pop
inc
pop
or
cli
cmpsl
inc
adc
negl
cmp
arpl
in
filds
mov
mov
shll
mov
mov
loope
icebp
outsb
push
push
data16
outsl
sbb
adc
mov
add
jno
arpl
popa
or
cmp
push
push
pop
or
scas
push
mov
jb
and
adc
repnz
jnp
jb
jbe
jne
mov
jle
mov
push
mov
push
loope
add
mov
ljmp
sbb
or
add
mov
mov
mov
pop
mov
stc
test
sub
repnz
outsb
hlt
sbb
add
xchg
push
ljmp
dec
ret
ds
mov
fcmovne
mov
xchg
scas
outsb
pushf
fdivp
lds
add
jle
in
cmp
sbb
and
sahf
imul
xchg
pop
push
push
inc
in
stos
cmp
mov
call
inc
aaa
sbb
pop
push
and
mov
push
or
mov
push
sub
idivb
decl
jle
lret
mov
inc
sbb
scas
mov
popf
cmc
push
fdivrl
jge
mov
or
push
inc
push
mov
mov
rcrl
pop
into
adc
xchg
stc
xchg
mov
jbe
inc
aam
mov
and
mov
popa
insl
imulb
or
jmp
add
rsqrtps
jmp
mov
pop
mov
cmpsb
lds
push
cmpsl
loope
push
or
fstpl
loope
sub
loop
fnstcw
aad
nop
add
fs
gs
push
sub
push
fwait
bound
or
test
addr16
in
push
adc
nop
aam
imul
mov
lds
add
cmp
test
sarb
adc
mov
aam
adc
in
dec
cmp
in
mov
inc
movl
pop
adc
and
das
push
cmc
mov
in
mov
ret
ja
sub
outsl
arpl
int
je
pop
pop
jnp
inc
addr16
mov
pop
outsl
cmpsb
das
adc
mov
adc
adc
dec
cld
sbb
arpl
lret
pop
loop
mov
popf
xchg
cld
add
add
stc
outsb
pusha
sahf
repnz
mov
push
and
fwait
lret
popa
pop
mov
pusha
test
pop
mov
insl
cmp
adc
cltd
js
cs
lcall
and
into
pop
shll
fcomi
ret
or
mov
gs
mov
jmp
and
pusha
scas
out
mov
daa
dec
loop
jl
mov
dec
and
sbb
mov
cmp
out
loop
xchg
cli
loop
sbb
dec
pop
rolb
cs
negl
dec
and
sub
dec
xchg
shrb
pop
fs
adc
mov
imul
sbb
jmp
es
jl
xor
jae
rcll
dec
int3
push
sbb
mov
pop
push
sub
aad
outsb
pop
sbb
jl
sub
imul
add
push
and
add
sub
pop
mov
push
xchg
pop
in
bnd
jae
inc
xchg
and
fstl
inc
push
test
xchg
jg
or
inc
mov
gs
mov
lods
xchg
push
and
pop
xchg
jbe
faddp
or
dec
loope
add
xor
cmpsl
xchg
jp
ljmp
int3
jno
inc
test
pop
xor
jp
je
ja
jecxz
fistpl
push
bound
xor
in
addr16
movsl
mov
pop
jl
pop
shrl
sbb
jbe
stos
mov
test
movl
mov
clc
dec
aaa
fstps
je
push
dec
mov
mov
add
dec
and
pop
adc
outsl
dec
jg
lds
aam
loope
pop
sbb
or
sub
adc
dec
adcl
in
mov
data16
data16
and
add
jb
pop
adc
jno
sbb
add
cmpsl
popa
clc
mov
adc
stc
xchg
imul
sbb
hlt
mov
leave
push
loop
stos
rcrl
stc
popf
out
push
dec
pop
mov
fs
cmp
arpl
xchg
cmp
mov
sbb
icebp
in
pop
or
sbb
mov
out
adc
ror
test
fwait
iret
repnz
fcoml
cmp
xorb
adc
je
hlt
nop
aad
aad
daa
or
in
call
int
and
dec
inc
xor
dec
cmp
inc
je
bound
push
xor
xor
mov
aaa
cmpsb
or
pop
pop
adc
jge
lea
mov
xor
jg
daa
sbb
sbb
push
push
xchg
jns
rorl
pop
xorb
ja
mov
es
fwait
aad
test
mov
adc
push
fwait
mov
xor
gs
je
call
xor
jne
jne
dec
icebp
add
das
inc
sub
out
fldenv
lret
jbe
xlat
dec
int
sub
adc
or
mov
mov
loopne
xchg
rcll
dec
add
iret
cmpsb
mov
call
mov
push
repnz
jmp
stos
cmp
nop
in
and
out
dec
int
fcompl
stos
mov
icebp
add
ret
mov
roll
sub
mov
ja
and
popf
inc
xchg
jl
lret
mov
pop
mov
push
dec
dec
lds
insb
dec
mov
pop
dec
aam
cmpsb
cmpsb
pushf
mov
addr16
pushf
sbb
cld
push
xlat
xor
mov
xchg
dec
lds
push
sbb
dec
fxch
mov
cmp
cld
shrb
cmp
jno
decl
xchg
push
movd
jns
push
in
push
and
xor
ja
call
inc
mov
xor
fsub
fimull
mov
xchg
into
mov
xorb
xor
jno
sub
addr16
ds
pop
dec
cmp
bswap
xchg
cmp
xchg
cmp
rcrl
pop
cmp
stos
and
mov
sbb
cmp
sarb
addr16
jmp
xchg
sub
xor
and
loopne
lahf
cmp
push
test
movsb
addl
push
dec
push
test
sub
adc
fisubl
or
loope
insb
xchg
je
jmp
jg
xchg
dec
sbb
divl
int
jns
xor
inc
in
mov
pop
ret
dec
pop
enter
ss
test
pop
pop
ja
jecxz
pop
out
mov
js
cmpsb
jle
hlt
jno,pt
pop
adc
stos
xor
out
dec
mov
inc
in
pop
pop
inc
test
fs
nop
cmp
cmp
lret
or
mov
inc
jns
mov
sub
inc
fistpl
mov
shrl
adc
scas
sbb
popa
xchg
aad
pop
orb
int3
lcall
mov
adc
out
jno
or
and
jnp
popf
mov
ficomps
nop
cmp
popf
rol
sub
or
xlat
add
jecxz
jecxz
ss
je
jnp
push
lcall
sub
std
out
adc
pop
cmc
mov
rcrb
push
xchg
xchg
adc
mov
cmp
es
cmp
sub
push
mov
mov
loopne,pn
sbbl
add
sbb
sbb
jmp
xchg
popa
je
mov
mov
mov
es
or
repz
mov
add
out
dec
adc
call
push
fstl
cmp
in
and
aas
enter
pop
add
pop
lahf
or
and
jge
dec
es
ret
mov
lret
push
movsl
and
les
mov
pusha
out
pmovmskb
and
imul
icebp
movsb
inc
sbb
xor
cltd
es
int3
inc
adc
mov
sub
jmp
lahf
dec
iret
add
jbe
inc
out
mov
mov
icebp
adc
int
dec
lahf
cmc
mov
xchg
out
outsb
test
aaa
mov
sqrtps
pop
or
clc
pop
dec
call
jecxz
test
lods
imul
or
cli
cmp
bound
mov
or
hlt
icebp
dec
icebp
dec
sbb
and
or
inc
incb
push
fsubp
loop
cld
into
cwtl
orl
inc
xchg
pop
mov
pop
loop
shrb
fwait
std
int
ds
jnp
icebp
dec
adc
dec
sub
xchg
leave
jnp
fldenv
repnz
and
cld
mov
das
cld
jbe
dec
pushf
and
xor
das
loop
int3
push
inc
icebp
cmp
jle
das
stos
filds
les
or
and
leave
data16
test
jb
or
movsl
xchg
test
je
sarb
mov
dec
cli
mov
loopne
fnstsw
pop
jb
mov
lock
pop
popf
and
push
or
fisttpl
and
mov
push
rcll
or
loope
sbb
cwtl
in
jne
and
test
or
mov
jmp
mov
add
stos
mov
scas
mov
jmp
dec
lds
stos
and
jg
and
fs
flds
cli
xchg
ficomps
sub
rcrb
pop
push
pop
out
nop
das
test
pusha
adc
fwait
mov
mov
jle
push
mov
add
cmc
dec
out
lahf
push
ss
and
shlb
push
rcr
movsb
mov
dec
mov
lret
repnz
jbe
cmp
dec
cli
push
xlat
out
push
std
add
out
xor
sbb
cmpb
lods
dec
sub
iret
mov
mov
lret
aaa
scas
xchg
adc
shl
sarl
or
xor
in
add
mov
mov
sbb
call
mov
ret
sahf
pop
int3
push
bound
outsl
add
in
push
jmp
popa
xchg
std
icebp
mov
imul
mov
xor
sbb
je
roll
lahf
popf
push
xchg
push
push
js
jb
ret
ja
outsl
movsb
jae
out
mov
lods
bound
out
mov
or
ja
lds
xchg
sub
adc
imul
pop
fbld
addr16
lret
jne
pop
inc
mov
loope
jbe
sbb
daa
cmp
mov
lock
add
jecxz
adc
idivl
scas
ret
jb
fiaddl
mov
push
jmp
sub
jb
push
out
add
push
pop
mov
sbb
pop
mov
cwtl
jecxz
loopne
dec
add
outsl
into
add
dec
inc
fwait
xchg
and
sbb
cmp
ficoml
popf
fsubrs
sbb
xchg
pop
fwait
jge
dec
dec
xchg
mov
shlb
dec
iret
cld
es
fbstp
subb
sbb
push
mov
js
jns
cld
xchg
push
sub
fucomip
inc
add
aas
sbb
ss
mov
shr
vmovhps
icebp
jnp
arpl
sahf
mov
mov
jl
and
int3
aaa
ror
adc
pop
add
jb
adc
mov
push
les
arpl
pop
xor
stc
jl
cmpsb
scas
in
push
aas
ss
pop
insb
pushf
sbb
or
jns
push
add
aas
lcall
out
push
push
push
lret
add
dec
jbe
addr16
out
mov
mov
test
into
outsl
aas
popa
leave
push
adc
mov
cmpsl
loopne
add
mov
dec
iret
movsl
mov
sbb
jne
cmp
add
lret
out
outsb
je
mov
pushf
or
pop
push
pop
cmp
cs
adc
roll
adc
call
pop
adc
sub
les
mov
and
pop
jle
cmc
dec
push
add
sbb
inc
popa
shlb
stc
mov
push
xchg
int3
cmovnp
push
push
sub
sbb
test
enter
dec
cmc
imul
mov
addl
pop
nop
pushw
js
aas
scas
mov
pushf
rclb
jo
out
pop
sub
loope
aaa
in
fwait
xorl
or
out
fwait
pop
loope
push
pop
test
fcomps
fmuls
xlat
faddp
sub
mov
cmp
adcb
cli
mov
mov
js
and
fsqrt
jbe
xchg
lahf
sub
add
pop
pop
mov
sbb
out
daa
in
shll
loopne
push
push
lea
mov
bound
cmp
xchg
jg
movsb
fmull
sahf
mov
lcall
pop
jmp
xor
pusha
mov
lods
mov
inc
insb
xor
sbb
xor
and
push
pop
mov
int3
xchg
fisttpl
lret
fwait
push
rclb
dec
inc
outsl
pop
out
adcb
dec
das
cmp
enter
or
fcoms
adc
mov
dec
and
ss
pop
mov
cmc
stc
stos
loop
arpl
sti
inc
push
jp
outsl
addb
xchg
ss
inc
sub
js
mov
jne
pop
stos
dec
mov
call
cmp
inc
es
movsb
ds
push
clc
test
inc
imul
pushf
xlat
sub
popf
dec
scas
sub
arpl
inc
xor
fidivl
mov
out
dec
cmp
jbe
cmp
push
insl
jnp
fwait
stc
clc
mov
test
cmp
mov
fwait
and
jb
xchg
fcmove
pop
rcll
in
or
push
in
imul
sbb
add
or
js
lods
pop
xchg
cli
jle
adc
scas
mov
int
popa
pop
lret
add
notb
pop
inc
lds
cmp
add
and
mov
mov
mov
mov
xor
mov
ret
xchg
inc
jg
inc
int3
xor
sti
aam
pop
jp
lea
sti
int3
in
xor
dec
imul
cmp
jno
adc
dec
lds
or
rcr
mov
xchg
loopne
cmp
mov
xor
pop
push
fwait
jae
xchg
inc
ljmp
shrb
mov
cmp
je
cwtl
mov
pop
cmp
or
scas
and
clc
ja
and
roll
inc
cmp
cmp
cwtl
xchg
xor
lods
scas
mov
lds
flds
mov
mov
xor
xchg
notb
incb
lods
add
bound
test
mov
aam
or
mov
imul
rcll
push
inc
sti
dec
push
mov
xor
sbb
ja
leave
push
shlb
mov
push
push
inc
fidivrs
jae
lret
faddp
out
outsl
inc
loopne
cmp
sub
or
sbb
out
insl
add
pop
mov
mov
inc
pushf
cmp
mov
mov
dec
lds
jmp
adc
enter
mov
xchg
hlt
xchg
dec
add
mov
es
sbb
nop
mov
inc
mov
mov
inc
lret
mov
pop
sbb
ret
dec
ss
loopne
xchg
inc
xchg
mov
jge
inc
jge
adc
dec
iret
lahf
or
mov
aam
cmp
cmp
dec
inc
icebp
push
xor
and
and
stos
sbb
mov
inc
adc
dec
push
outsl
lds
cmpsl
sbb
dec
sub
out
adc
and
push
mov
loope
fnop
fcomi
mov
mov
daa
pop
or
sbb
mov
fisubl
dec
cmpsl
jo
and
add
and
add
or
add
fbstp
leave
and
movsb
test
cmc
push
into
dec
push
dec
inc
mov
or
push
cli
mov
into
cmp
jecxz
sub
and
cli
mov
and
mov
jl
push
outsb
cwtl
in
inc
mov
jg
clc
add
cmp
jl
pop
inc
rol
out
jp
pop
faddl
jl
lahf
jp
and
fisubrs
jg
stc
in
inc
or
push
inc
leave
cmpsb
pop
cmpsb
mov
psubusb
or
lret
sbb
aam
push
adc
loopne
hlt
movsl
pop
push
pop
add
repz
out
cli
ja
xchg
cwtl
fisttpll
push
mov
lahf
sub
push
fadds
lahf
jmp
stos
inc
ret
push
imul
orl
fcmovnb
push
jg
mov
out
push
popa
xchg
push
ds
mov
mov
sub
sbb
or
cli
dec
mov
adc
jl
push
in
add
jns
ljmp
sub
cltd
dec
loop
loop
push
push
mov
pushf
adc
push
xchg
adc
inc
iret
or
adc
pop
sti
sbb
into
jae
xor
movsl
lret
test
mov
popa
lock
aad
sar
dec
out
or
sbb
adc
mov
push
jb
push
cmp
or
ficoml
push
sub
popf
and
ss
lret
aas
test
xor
lahf
sahf
xchg
adc
adc
shll
cmp
out
lea
push
jle
aas
mul
sbb
popl
or
rclb
inc
imul
pop
movsb
mov
cmc
stos
cmp
push
sub
add
mov
mov
dec
call
sbb
push
loop
pop
in
pop
cli
scas
and
ds
in
xchg
jle
pop
mov
xchg
jns
pushf
add
imul
jmp
lock
mov
insb
sub
dec
xchg
loope
in
push
or
test
aas
sbb
sarl
shlb
js
add
jmp
or
jp
fidivs
movsl
mov
push
lock
xor
andb
in
mov
out
or
push
pop
mov
dec
sub
outsl
fsubp
ss
and
int3
fimull
or
xchg
out
xlat
es
stos
xlat
into
cwtl
mov
inc
lods
and
sub
pop
adc
push
cmp
mov
je
mov
pop
mov
mov
jae
sbb
hlt
dec
sbb
gs
pop
lret
jno
mov
loope
and
pop
jmp
out
jae
inc
shlb
cmp
fadds
sbb
jb
xor
fldl
or
js
and
xor
das
xlat
sahf
and
jmp
mov
mov
repnz
cmc
cmc
jb
mov
mov
mov
mov
xor
insb
adc
arpl
daa
stos
xor
out
mov
mov
sbb
sub
sbb
jne
testl
lods
in
cmp
jg
stos
add
scas
ss
pushf
push
cmp
fs
pop
ret
fdivrl
push
jg
inc
add
shl
aas
mov
xor
mov
lea
ret
in
sbb
pop
jmp
mov
push
jmp
push
jmp
push
add
and
mov
push
in
stos
pop
sahf
adc
xchg
dec
stos
xor
nop
xor
mov
and
pop
sbb
xor
filds
lcall
push
inc
xchg
insb
repnz
cld
inc
ljmp
inc
jno
xlat
out
scas
cwtl
adc
jae
sub
fwait
push
jo
mov
xchg
push
jecxz
dec
addr16
addb
sub
sbbb
subl
and
test
mov
je
mov
mov
inc
stos
inc
sbbl
fisubs
jp
mov
mov
les
mov
dec
clc
out
cs
cld
lock
in
inc
xor
into
fwait
mov
popf
inc
and
jbe
xor
and
in
xchg
ja
lock
clc
inc
xchg
cmp
sbb
je
out
lock
arpl
cli
push
sti
loopne
out
sbb
std
xor
iret
cmp
imul
cwtl
sbb
mov
adcb
mov
jp
cld
inc
lret
xor
xor
fists
sbb
sbb
out
jl
adc
push
mov
roll
pop
pop
sub
xchg
dec
xor
imul
mov
xchg
xchg
in
ja
addr16
out
jge
sub
add
mov
cmp
subl
dec
out
into
int3
sbb
scas
push
jo
cmp
out
xor
mov
jnp
call
xor
xchg
mov
sub
orl
and
add
inc
mov
sub
add
jmp
clc
jb
das
mov
fucomi
lret
fldt
movsb
mov
ret
xchg
jo
std
popa
mov
mov
jno
xlat
inc
add
in
pop
notb
lds
push
fdivrs
movsb
das
dec
adc
rcrl
icebp
mov
xchg
subl
pop
ret
loopne
out
dec
mov
mov
mov
mov
sub
push
push
push
cmp
shl
inc
push
jbe
xchg
in
cld
out
or
push
enter
jb
jg
sbb
test
enter
shl
fwait
xchg
xor
and
leave
inc
cmp
mov
inc
inc
mov
fucomip
and
test
push
and
pop
mov
daa
pushf
jle
outsl
cmp
repz
cltd
ja
test
xchg
sub
dec
fdivrs
popf
imul
mov
jp
shlb
fcomp
orb
sbb
popf
fs
fidivs
xorl
xor
pop
push
jo
iret
ret
xor
cmp
in
pop
cmp
call
lcall
lds
in
pushf
adc
and
sub
ljmp
sub
mov
jmp
popf
sub
mov
pop
cs
pop
mov
sti
dec
stc
fbld
lds
lea
pop
mov
push
cmp
mov
cmpl
xchg
inc
out
imul
out
pop
jbe
jae
adc
rorl
out
out
negl
adcb
sbb
push
add
arpl
and
xchg
rcrl
imul
and
xor
imul
repz
sarb
pop
imul
flds
add
push
push
test
ds
test
xchg
mov
repnz
pop
dec
jns
lea
mov
ljmp
pop
loope
stc
in
rcl
sub
ror
mov
mov
xor
dec
out
and
jle
xor
xchg
lret
dec
push
mov
idivl
test
fsts
mov
aad
pop
mov
test
dec
icebp
sarb
and
testl
xor
dec
aaa
into
xchg
sub
adc
mov
andb
sbb
xor
ds
clc
stos
int3
je
mov
fwait
mov
mov
pop
outsl
xor
bound
and
dec
lret
mov
repnz
inc
mov
test
cmpsl
push
jno
loopne
lds
sub
inc
mov
test
shl
sbb
and
andl
cmp
in
pop
sub
sbb
pop
or
dec
jno
fsubl
xchg
fdiv
push
lock
cmp
mov
mov
mov
pop
and
insl
xchg
repz
ret
jg
lret
adc
loop
daa
ret
mov
push
xchg
rorl
push
add
push
test
in
sub
push
push
int
mull
sub
in
xor
jl
xor
loope
ret
xchg
cwtl
push
jp
dec
xor
pop
sbb
pusha
into
add
pop
dec
sub
dec
test
addr16
sbb
xor
in
pop
dec
push
cmc
mov
popa
test
mov
icebp
xor
and
jnp
mov
jne
stc
lret
call
stos
dec
mov
decl
dec
adc
xchg
xchg
push
add
dec
and
mov
adc
movsb
clc
imul
in
jne
out
mov
fwait
cmp
xor
in
pop
hlt
in
or
push
aam
gs
mov
aas
gs
out
aaa
mov
cmp
loope
push
jo
jp
cltd
mov
mov
and
mov
out
and
lret
outsb
mov
adc
ljmp
lock
mov
inc
push
in
xlat
out
mov
mov
jne
adc
and
repnz
js
pop
dec
inc
in
enter
lret
push
lock
idiv
out
mov
sbb
xor
dec
orb
xor
fimull
insl
cltd
xchg
push
jne
cld
mov
and
cmp
pop
int
add
jmp
aaa
push
mov
cwtl
cs
rorb
dec
pushf
pop
pop
sbb
sbb
pusha
inc
in
sarl
adc
jo
adc
or
fstpt
in
lock
mov
mov
sub
dec
lods
sti
mov
das
and
imul
dec
lods
fstl
dec
hlt
outsl
mov
imul
add
sahf
cmc
adc
adc
out
adcl
fisubs
pop
cmp
xor
ret
loop
inc
xor
sub
adc
sahf
loopne
sbb
pop
sti
add
dec
stc
mov
sub
push
jne
popf
dec
repnz
push
test
in
ljmp
sbb
add
int3
outsl
and
stc
push
pop
loopne
push
iret
adc
dec
inc
xchg
push
add
insl
sarl
call
pop
adc
cmp
mov
and
ret
test
and
ret
out
push
icebp
cld
inc
jg
loop
test
sbbb
sbb
nop
fisubs
and
adc
std
mov
lahf
lock
and
xchg
es
push
hlt
pop
addl
lret
je
dec
call
testl
xor
repnz
cmp
mov
cs
jne
sbb
aas
popa
adc
sbb
in
xor
mov
pop
stos
add
or
jnp,pn
std
mov
add
iret
jge
frstor
mov
aaa
pop
outsl
outsb
js
cld
std
jbe
lret
xor
push
cmpl
std
hlt
sbb
xchg
inc
es
mov
mov
jns
mov
inc
je
sub
cmpsl
mov
jo
popf
popf
adc
outsb
arpl
pop
push
mov
mov
cs
xchg
jb
cmpsb
lock
dec
into
enter
xchg
lret
fdivs
mov
jo
adc
in
push
jns
jne
xor
ret
shlb
fdivrl
sub
fstpl
dec
test
adc
jns
sbb
ljmp
mov
pop
cmc
not
mov
sbb
mov
aaa
jno
loope
pop
idivb
int
popa
mov
clc
cmc
jmp
push
ret
aad
and
js
xorb
shl
nop
jno
xchg
push
das
leave
and
inc
jmp
jp
pop
xchg
dec
add
dec
and
mov
out
insl
dec
ljmp
jge
mov
push
in
ret
lcall
mov
sub
cmp
mov
or
xchg
outsl
mov
jmp
sub
scas
sbb
aam
jbe
pop
cmc
bound
pop
jb
mov
mov
add
mul
pop
mov
adc
out
xlat
testl
jl
mov
ja
mov
push
xchg
mov
pop
sbb
sbb
jne
loopne
push
movsb
ret
je
scas
cld
cmp
loop
ja
lret
sub
je
ret
mov
fistpl
or
sbbb
insb
jbe
test
xor
outsb
scas
add
mov
inc
sub
xchg
sbbb
add
xchg
es
icebp
adc
int
ret
pop
loopne
sbb
cltd
adc
xor
ja
mov
or
pop
adc
add
mov
pop
pop
inc
shl
cmp
iret
jae
in
shlb
test
into
std
rclb
out
gs
insb
pop
repz
rorb
push
test
sub
enter
mov
lds
dec
fwait
mov
pop
paddusw
xchg
xor
inc
jp
push
insl
push
pop
sahf
push
aas
dec
divb
ds
enter
inc
fimull
repnz
sub
push
sahf
push
jbe,pt
cmp
leave
orb
mov
jb
int3
outsb
stos
aas
shlb
push
movsl
push
popf
ret
into
xlat
imul
pop
or
dec
outsb
das
bound
pop
cli
push
test
iret
pop
aas
mov
jae
loope
mov
lret
test
sbb
dec
scas
sub
inc
movb
push
mov
dec
sub
push
dec
aam
and
dec
xor
dec
jle
nop
nop
jmp
mov
call
sbb
leave
push
cli
and
pushf
ja
das
lock
frstor
test
pushf
iret
arpl
jmp
and
and
push
je
mov
std
rol
adc
fcomp
sbb
and
ret
popa
mov
xor
sahf
icebp
inc
dec
sub
call
and
arpl
or
in
pushl
sbb
xchg
imul
out
test
cli
pop
xchg
lret
xor
out
movsl
and
cltd
inc
pop
pop
aas
pop
sbb
mov
dec
out
pop
jge
jno
ret
add
aas
cwtl
dec
sbb
mov
pop
cltd
repnz
jle
lcall
pusha
or
add
lock
outsl
enter
lods
test
imul
insb
mov
testl
repz
in
bound
les
int3
sbb
lds
cs
lock
sbb
popa
repnz
xchg
mov
cwtl
xor
sub
push
data16
ljmp
dec
or
sbb
cmpsl
lea
ds
cmp
js
sub
insl
aas
stos
pop
or
push
in
inc
sbb
sahf
push
icebp
je
jno
pop
jecxz
or
push
mov
push
mul
jge
aad
mov
repnz
in
imul
and
cmp
fcmovnbe
jmp
rcl
fs
pusha
ds
int3
repnz
push
sub
sbb
je
xchg
mov
stos
adc
mov
xchg
fildl
cmpsb
sub
jle
sbb
je
or
mov
test
test
rcr
scas
cld
mov
inc
adc
jbe
mov
stos
mov
pushf
icebp
mov
sbb
addr16
cmpl
imul
fistpl
int
int3
inc
sbb
dec
and
iret
call
ljmp
or
pusha
jle
add
xchg
repnz
iret
and
xchg
xor
mov
in
loopne
push
in
std
inc
mov
cltd
jno
popf
cmc
cmove
and
pop
pop
out
bound
sbb
gs
shl
movsl
cmpsb
cld
adc
cld
jecxz
pop
and
pusha
in
scas
outsl
xchg
or
lock
lods
ror
add
push
cmp
movsb
dec
jp
into
rcll
push
mov
scas
rcrl
mov
faddl
lea
stos
nop
mov
xchg
in
out
and
cwtl
mov
in
jl
dec
xchg
out
mov
mov
xchg
add
mov
in
adcl
xor
mov
jb
scas
lret
rcrw
fwait
and
fadds
adc
aaa
dec
insb
imul
add
lret
insb
jo
jo
cmp
iret
bound
fisubrl
lahf
sti
push
arpl
in
popf
xchg
xchg
leave
adc
rcrl
jge
pop
clc
xchg
cld
loopne
pop
enter
cli
xor
faddl
fisubl
adc
testb
xchg
inc
sub
push
dec
dec
xchg
outsb
dec
dec
jbe
jnp
in
outsl
pop
xchg
cmpl
aas
fs
pop
cmp
xor
xor
push
xlat
inc
mov
das
js
into
mov
jnp
addr16
pop
mov
stos
jg
sbb
jno
fwait
jg
add
pop
xchg
cmpsl
lea
sbb
or
jecxz
scas
dec
jno
call
mov
lds
icebp
dec
cs
add
push
rol
jle
adc
ljmp
mov
xor
shll
jnp
rolb
out
in
mov
jg
xchg
loop
sub
jg
and
jne
int
lret
lahf
out
mov
in
loop
jne
pop
mov
dec
sub
adc
aam
mov
add
subb
in
pop
inc
and
movsl
jg
jno
jno
stc
cmp
iret
pop
cwtl
dec
syscall
sub
cmp
les
push
repz
ficoml
mov
inc
in
sbb
xchg
fidivrl
icebp
dec
out
fisubrl
test
testb
iret
or
fnstcw
aaa
push
lods
or
aad
imul
mov
xor
xchg
stos
add
xchg
hlt
cltd
pop
int3
jmp
mov
sahf
push
cltd
or
insb
mov
sbb
push
and
pop
scas
int3
adc
jge
inc
add
shl
xchg
ficoml
inc
adc
jp
push
lea
js
icebp
mov
leave
fistl
mov
jp
xchg
xchg
jl
dec
mov
dec
add
and
lcall
inc
xchg
jbe
in
cmc
cmp
cld
out
iret
mov
jns
sbb
jo
pop
mov
mov
or
mov
rclb
test
call
shrl
pop
mov
sbb
add
lahf
movsb
iret
daa
pop
jge
xchg
in
lret
int3
adc
lahf
psadbw
mov
faddl
jmp
jnp
lods
pop
add
mov
rcll
ds
adc
lods
jmp
push
jle
xchg
aas
sbb
cltd
pop
out
ret
cmpsl
inc
add
test
in
push
fstl
add
je
push
sub
push
fildll
adc
cmp
fs
mov
fldz
sub
ret
rcrl
cmp
pop
icebp
or
pop
into
jecxz
inc
stc
std
push
addb
or
ds
mov
push
mov
ljmp
aas
adc
hlt
ljmp
mov
arpl
or
pop
mov
sarl
adc
xchg
push
push
or
insb
lock
test
iret
mov
mov
mov
sub
push
mov
mov
in
jns
js
cli
mov
test
cld
inc
sbb
push
arpl
aam
jg
aaa
cli
adc
add
mov
sbb
sub
ret
pop
xor
push
pop
xchg
sbb
inc
mov
cmp
add
dec
fistpl
repnz
cmp
push
aad
mov
ret
lahf
imul
mov
adc
ret
mov
cmpsb
sub
xchg
ljmp
mov
jle
mov
mov
fnsave
mov
mov
mov
imul
stos
fndisi(8087
xchg
cmp
test
idiv
add
cmpsl
test
aad
dec
fistpl
sub
hlt
rolb
adc
divb
imul
or
call
popa
mov
or
int3
jns
jp
insb
cmp
push
sbb
fwait
jo
cmp
jae
fidivs
je
sahf
or
add
pushf
cmp
adc
dec
addr16
rcrb
imul
pop
sti
popf
lea
stc
add
mov
or
shrl
xchg
xor
scas
xchg
jb
inc
xchg
push
cmp
mov
jp
and
call
pushf
mov
cmpl
aad
mov
out
roll
or
mov
xchg
mov
pop
push
mov
into
cmp
lods
mov
movsb
ss
int3
sub
mov
xchg
scas
dec
push
mov
sbbb
push
mov
popa
pop
jbe
comiss
mov
aad
lock
jl
cmpsb
mov
ret
lods
inc
adc
xchg
clc
hlt
das
xor
mov
cld
xchg
mov
xor
dec
cmp
test
dec
adc
aas
dec
sub
cld
outsl
sbb
shl
lret
out
pop
movsb
repz
xor
xor
pop
cmp
lcall
xor
pop
push
pushf
prefetcht2
movsb
fstl
push
add
lods
std
clc
enter
mov
inc
repz
cmpsb
pop
pop
pop
or
or
dec
push
sub
lret
popf
andl
pop
dec
pop
enter
fmuls
xor
rcr
lea
and
fldl
push
lret
lock
jle
mov
inc
dec
dec
fsubp
icebp
jb
test
dec
xchg
sub
dec
mov
dec
jecxz
jns
mov
mov
jne
fdivrl
or
xor
pop
xor
push
sub
cltd
and
inc
rcrl
cmp
inc
jle
lock
mov
dec
or
int
fsubl
sub
ljmp
imul
aad
mov
imul
test
dec
aam
jge
push
or
cmpsb
fcmovnbe
in
push
mov
aaa
xchg
inc
hlt
in
pop
imul
cmp
outsl
mov
inc
je
mov
jo
push
xchg
cli
cmp
xchg
push
lret
cmovs
outsb
jns
adc
cmc
sub
push
inc
cmp
jne
bound
mov
orb
jg
shlb
cld
hlt
mov
jle
cmpsb
arpl
push
mov
in
sbb
adc
sbb
xor
stc
ret
xchg
pushf
and
mov
jno
shl
je
cs
push
mov
pop
jmp
and
fcomps
xchg
xor
js
inc
cmpsl
cmp
pop
fwait
cmpsl
scas
outsb
shll
fidivl
mov
pushf
frstor
dec
leave
repnz
mov
test
imul
xor
cmp
arpl
test
repz
out
add
push
call
std
aad
aam
cmp
jbe
fadds
jge
push
je
adc
nop
xchg
mov
push
outsl
pushf
repz
cmc
push
jnp
repz
ret
xor
sbb
mov
das
int
orb
xchg
add
inc
shll
inc
movsl
sbb
and
aaa
cmp
lds
repnz
sbb
cld
pop
dec
jne
push
loopne
jo
push
repnz
sti
adc
pop
daa
lret
gs
add
leave
cli
adc
sub
cli
mov
int3
and
and
sub
outsw
nop
xor
jge
jle
lds
or
std
into
pusha
mov
xchg
xchg
push
pop
lret
adc
dec
ja
arpl
aaa
mov
cmp
lea
test
lcall
shll
cmc
ds
cs
xor
mov
repnz
adc
lds
pop
xor
cmp
adc
jmp
sbb
jbe
ja
xor
test
test
push
dec
je
pop
sub
jo
not
mov
sub
inc
add
ss
sarl
iret
std
fldcw
mov
xchg
push
sub
cltd
dec
aam
pop
aam
mov
lods
outsb
mov
fs
imul
xor
mov
push
inc
ja
jns
adc
push
ds
xchg
rclb
sub
sbb
imul
int3
cli
insl
idivb
mov
sub
js
cmpsl
movsl
inc
repnz
xor
aad
iret
inc
xchg
xor
xor
jae
inc
repnz
orl
je
pop
cmp
das
lods
pop
pushf
shrl
push
cmp
jp
cmpb
inc
lahf
mov
xor
shlb
fwait
push
test
jle
push
mov
outsl
cmpsb
mov
sub
mov
or
test
daa
and
outsb
mov
mov
or
jae
mov
push
sub
lret
lods
test
mov
cmc
xchg
lret
mov
lds
repz
jg
call
lret
xchg
and
lahf
jnp
inc
fidivs
aaa
add
xor
scas
jbe
adc
repnz
mov
inc
mov
push
jp
sti
mov
xor
xor
pop
in
addb
and
js
dec
bound
mov
shll
jo
das
push
out
or
std
jecxz
out
pop
push
inc
mov
test
mov
das
mov
aam
push
add
dec
dec
mov
out
scas
and
dec
pushl
xchg
std
mov
mov
imul
sbb
mov
stos
mov
sbb
stos
cli
xor
and
push
push
aad
push
sub
cwtl
cwtl
push
cmp
push
les
aas
and
adc
nop
ljmp
jg
das
mov
jl
add
push
lods
jecxz
mov
pop
gs
icebp
mov
inc
inc
add
pop
inc
cmpsl
mov
ss
ds
cmp
or
cld
fwait
push
pop
add
cmp
hlt
add
jno
mov
jae
fs
into
and
test
imul
out
call
insb
xchg
add
xor
xchg
std
fsincos
mov
aas
inc
stos
test
push
outsb
mov
inc
xor
nop
cmpsb
outsl
daa
pop
arpl
push
add
add
cld
dec
jg
nop
jno
dec
sti
lods
dec
adc
mov
xchg
xchg
jmp
rcr
pop
dec
adc
ds
jmp
mov
test
outsb
mov
xchg
out
incb
or
adc
or
dec
out
loope
mov
sbb
notl
and
aas
push
push
shrl
pop
and
xchg
aaa
jbe
loopne
mov
fwait
icebp
or
add
or
scas
xchg
adc
fisttps
and
pop
mov
sbb
js
or
lahf
push
or
add
dec
inc
aaa
cmp
mov
jo
pop
and
out
ror
or
mull
push
sar
es
jp
inc
jo
sub
loop
mov
mov
out
mov
test
mov
cmp
loope
or
cltd
ss
or
add
jg
and
push
fsubrl
in
inc
jmp
loop
pop
xchg
or
clc
cltd
mov
push
jbe
stos
mov
push
fbstp
mov
lods
js
push
cmpsl
sbb
loope
int3
adc
adc
add
xlat
imul
imul
add
inc
pushf
int3
icebp
test
lcall
add
iret
repz
loopne
dec
icebp
cs
add
jbe
cmp
xor
test
aad
cmp
lcall
das
adcb
pushf
loop
shl
leave
xor
nop
and
mov
stos
inc
sets
or
mov
adc
sahf
sahf
pop
adc
cmpsb
mov
dec
fdivs
mov
mov
xchg
xchg
pusha
repnz
jb
xor
and
mov
and
jg
adc
sahf
ja
cld
shlb
and
jmp
jo
jecxz
push
stos
sbb
je
repnz
shlb
inc
pop
push
ljmp
scas
stos
cltd
data16
in
mov
out
mov
lods
lcall
mov
decb
mov
std
lods
je
jno
pop
stos
movsb
ljmp
imul
push
out
xor
js
mov
pop
aam
shr
or
mov
adc
add
je
sbb
adc
jne
xor
pop
fwait
mov
adc
cmp
mov
mov
xchg
xorb
push
in
test
popa
mov
je
outsl
cmpsb
sar
aam
idivb
lods
test
mov
xchg
jmp
ret
push
mov
xor
insb
lods
mov
mov
xchg
jae
repz
cmp
xor
mov
add
and
mov
inc
ret
cmpl
xor
pop
scas
jae
test
mov
arpl
push
pop
mov
push
cmp
mov
lock
cmpsb
js
mov
ds
andb
daa
sbb
add
add
cmp
dec
pop
out
std
xor
push
jo
push
jp
lods
stos
inc
cs
adc
pop
mov
ret
jnp
jg
lods
in
lret
adc
or
dec
xorb
push
in
stos
add
cld
sub
in
hlt
push
int
xchg
xor
push
sub
jnp
je
mov
ss
sbbb
inc
mov
dec
shll
jns
mov
jne
dec
and
sbb
loope
push
and
or
sbb
call
mov
mov
js
repz
inc
jg
push
cltd
bound
iret
outsb
xor
mov
daa
das
fcmovb
mov
sarl
dec
cs
scas
int3
repz
pop
popa
fnsave
or
push
jne
add
dec
lds
pop
xchg
inc
mov
xor
mov
mov
fistpl
jmp
push
fsubr
pop
lret
jp
adc
cltd
push
dec
imul
rcr
xchg
cltd
jecxz
or
jecxz
xchg
insl
bound
xor
mov
and
lds
lds
or
inc
cmpb
cmpsb
sahf
aam
ds
dec
divl
cmp
xor
cmp
fldcw
js
movsl
dec
pop
pop
mov
mov
fstl
xchg
mov
dec
ficoms
fdivl
xlat
inc
in
dec
sub
in
pushf
call
sbb
xchg
adc
loope
insb
cmpsl
adc
dec
lods
jbe
mov
pop
pop
rorl
int
cmp
inc
add
jno
xchg
fsubrl
iret
mov
jnp
dec
or
aaa
fsts
or
sbb
mov
sahf
cmp
cld
repnz
cmpsb
mov
insb
and
xchg
mov
xor
movsb
ds
sub
push
sbb
sbb
jb
test
pop
cltd
push
mov
cmp
adc
inc
inc
ds
loope
rcrb
push
inc
jp
adc
cmp
cmp
leave
es
jp
lahf
jmp
xchg
sub
loopne
mov
xchg
inc
ljmp
sbb
popa
pop
jno
jecxz
push
or
mov
mov
mov
repnz
cmpsl
rorl
push
lock
or
or
push
or
push
mov
repnz
into
inc
cwtl
ror
xchg
jo
adc
imul
inc
push
std
pop
jl
loope
lret
inc
movsb
ss
mov
mov
push
imul
adc
pushw
mov
xchg
push
sub
add
mov
rcrb
loopne
neg
adc
and
das
loop
mov
mov
repnz
popa
mov
cld
push
mov
sbb
sar
cmp
bound
enter
imul
and
imul
js
xchg
sub
or
adc
pushl
xor
rcl
repnz
dec
push
xlat
xorl
and
push
xchg
sti
xor
in
rolb
aas
cmpsl
inc
add
jmp
inc
shrl
jbe
xor
adc
mov
pop
xchg
and
adc
push
loopne
sahf
loope
and
mov
and
pushf
insb
test
out
push
negl
push
ss
mov
and
loopne
or
mov
push
fdivrl
jecxz
push
sub
jmp
repz
lea
jl
fisubrs
imull
cmp
shl
ret
pusha
neg
xchg
mov
sbb
aaa
sbb
es
adc
jecxz
dec
or
leave
aam
pop
insl
call
push
inc
orb
rorb
xor
adc
push
jnp
cmp
cmp
scas
nop
add
mov
sbb
mov
cmpsl
push
cs
mov
jge
add
cmp
mov
adc
data16
insb
insb
adc
das
xchg
loop
add
loopne
push
inc
arpl
mov
adc
push
inc
pextrw
out
icebp
outsb
aas
scas
test
dec
adc
xchg
adc
loopne
fimuls
jge
push
adc
pop
mov
frstor
xor
cmp
aaa
int
js
sub
sbb
rclb
add
lahf
push
test
sbb
xlat
or
xor
cwtl
cwtl
xor
add
xchg
fdivrs
pop
lret
and
in
or
mov
add
sub
mov
push
popf
xlat
pop
xchg
stos
cmp
dec
outsb
leave
inc
cli
cli
push
leave
outsl
sbb
sti
cmp
push
inc
ret
inc
xchg
pusha
int3
and
lahf
inc
xchg
in
daa
mov
aad
inc
shl
xchg
xchg
loopne
mov
mov
lds
inc
sub
shll
fildll
sub
jbe
js
pop
push
cmpsl
dec
push
cmc
jg
cwtl
and
sub
pop
popa
xrelease
sbb
call
stos
sar
loopne
pushf
sti
pop
hlt
cmpsl
sti
test
mov
scas
cltd
sub
jnp
lea
repnz
lds
jnp
lods
rcrl
pop
push
test
negb
push
leave
adc
pusha
enter
xor
sub
stos
jge
iret
loop
stc
shrl
cmpsb
and
push
in
fimull
cmp
jae
pushf
aad
rcl
sub
das
fwait
pop
fsubrl
cwtl
xlat
sub
aaa
stc
ss
sti
pop
repz
iret
push
push
push
sahf
jb
stos
dec
mov
push
rolb
xor
nop
mov
lret
mov
dec
adc
pop
dec
out
mov
cmc
lcall
lock
and
push
push
xor
dec
pop
je
xor
push
test
or
jle
aam
rdmsr
pop
les
movsb
pop
mov
mov
out
pop
scas
sahf
push
idivb
lret
and
and
ret
and
mov
lock
xor
jecxz
xchg
mov
ja
mov
scas
jns
adc
sub
sub
fyl2x
fidivl
pop
push
xchg
into
inc
test
mov
enter
incl
lods
xlat
sub
imul
inc
bound
add
mov
and
out
in
xor
lahf
pop
add
mov
mov
or
test
imul
jno
sahf
popa
jb
xchg
cmp
movups
xor
dec
out
sub
sti
inc
dec
or
push
idivl
inc
add
dec
in
jns
cmp
jle
sbb
dec
adc
mov
pop
sahf
cmpsb
xchg
xchg
ret
xor
or
xor
pop
pop
cli
mov
push
int3
cld
mov
popa
shrb
fstpl
idivb
das
sbb
fidivrl
loopne
inc
mov
xor
pushf
lcall
jns
mov
addr16
pop
fsts
mov
jge
xchg
and
mov
ret
sahf
sbb
ret
mov
push
mov
and
repz
in
pop
mov
rol
mov
mov
or
mov
inc
cmp
mov
pop
fs
daa
sbb
push
sub
clc
push
inc
mov
xor
data16
jmp
jne
push
pop
xchg
aas
pop
arpl
ret
pop
imul
sub
add
out
popa
daa
insb
addr16
push
outsb
fsts
push
cmp
test
aaa
fidivl
andb
cmp
mov
jbe
lock
test
outsb
dec
sahf
dec
jbe
ja
sbb
xlat
jle
std
test
xor
js
das
incb
je
mov
xor
fstl
or
test
inc
xor
adc
divb
mov
outsb
pop
inc
jmp
jle
adc
out
es
in
fwait
jns
xchg
push
jno
mov
int
or
dec
mov
inc
arpl
mov
lods
out
jns
xor
xor
inc
add
negb
push
adc
lock
insl
dec
sub
movsl
jae
int
fsubr
ja
pop
sarb
aad
adc
imull
pop
push
push
dec
sbb
lahf
xchg
pop
sbb
mov
fimuls
mov
jo
decb
mov
stos
jne
sbb
mov
stc
mov
jp
lret
cmp
pop
add
ss
jecxz
repz
icebp
aad
inc
stos
and
sbb
cmp
jo
push
mov
out
mov
add
push
jbe
movsb
jg
push
test
xchg
data16
xor
push
dec
sbb
xchg
mov
repz
mov
adc
ja
mov
icebp
cwtl
jle
lea
in
out
repz
cli
outsb
sahf
rol
sbb
cs
js
enter
out
cmc
ret
mov
push
xor
xor
dec
stos
mov
cltd
pushf
adc
ficoml
push
xchg
stc
repz
data16
mov
add
out
xchg
add
mov
ds
pop
jb
or
addr16
std
adc
test
dec
jecxz
mov
jne
xchg
in
or
or
lahf
repz
bound
inc
sbb
lock
adc
add
xchg
clc
mov
push
or
pop
lock
xchg
add
sbb
push
jp
sub
rcrb
sbb
aad
nop
pushl
push
pop
and
std
pusha
jecxz
aad
xchg
xchg
push
daa
js
popa
sbb
sub
outsb
jge
leave
cwtl
stos
aaa
imul
lock
mov
es
std
lret
movsw
sahf
cmpsl
xchg
movsb
xchg
ret
ja
xor
mov
insl
push
aas
test
xchg
xchg
dec
mov
push
jne
mov
aaa
call
or
cmc
add
adc
add
mov
fwait
pusha
jb
clc
push
jb
xor
jb
cmp
rcrl
pop
jb
cmp
imull
cmpsl
rorl
sbb
push
roll
std
cmpsb
fstl
pushf
add
loop
test
mov
xchg
adc
cld
mov
in
shlb
mov
loopne
cmp
in
xchg
sub
xchg
jnp
jo
sub
inc
or
jp
fnstenv
aad
js
adc
push
xorb
xchg
ret
and
or
pop
fwait
mov
adc
fbstp
mov
mov
push
mov
sub
cltd
adc
leave
rolb
jae
jne
mov
jbe
inc
inc
out
fisubrs
andl
lods
aam
cli
pop
out
or
xlat
xorps
xlat
out
nop
shrl
hlt
test
sub
stc
lahf
dec
push
pop
js
push
add
insl
popa
cmpsl
lcall
and
mov
out
ljmp
iret
dec
mov
sbb
jns
lods
scas
jno
int
lahf
ja
mov
adc
and
lods
sbb
out
dec
push
js
pushf
sub
popf
xlat
xor
cmpsl
xchg
push
clc
cmovle
movsb
aas
dec
outsl
xlat
mov
xor
loope
insb
imul
cmp
sbb
adc
sub
xor
js
dec
cs
lahf
test
jg
neg
fsubs
jbe
popa
cltd
xor
mov
cli
lds
iret
ds
add
out
pop
or
out
ljmp
jo
popf
mov
pop
int
push
mov
push
pop
icebp
mov
cltd
xchg
es
aas
dec
out
dec
popf
push
pop
aad
push
xor
loopne
inc
lods
in
ror
add
mulb
mov
jb
jns
int
repz
cs
sbb
lea
push
stc
xor
bound
shlb
call
mov
and
ljmp
cli
js
pop
mov
stos
das
test
xchg
pop
xor
mov
test
mov
das
dec
adc
cld
fadd
js
sti
lahf
fstpl
xchg
ss
out
shrl
pop
loop
rcl
or
pop
test
xchg
xor
ja
loop
cmp
and
icebp
test
push
jle
pop
fiaddl
inc
pop
xchg
icebp
lret
daa
xor
out
mov
jecxz
mov
loopne
daa
imul
mov
push
mov
loopne
or
adc
pop
adc
lcall
les
sbb
and
andb
movups
cli
add
nop
pop
cli
cmp
enter
sub
mov
cmp
adc
push
jp
push
into
mov
bound
testl
dec
imul
arpl
mov
enter
ret
xor
mov
or
stc
xor
subb
in
push
xchg
dec
test
and
xchg
cmp
fisttps
and
imul
mov
shlb
add
sti
dec
sti
ja
in
mov
iret
xchg
xor
addr16
movsl
mov
ss
adc
lcall
movsb
jb
ja
sub
pop
mov
sbb
jp
idivl
mov
pusha
in
cmpsl
popf
push
sbbl
jecxz
and
aaa
aam
imul
xchg
and
mov
mov
aas
xchg
test
add
lahf
cmp
ret
mov
aam
pop
cltd
sub
mov
test
adc
leave
adc
lds
inc
lahf
mov
add
shlb
cltd
cmp
mov
into
or
lahf
fildl
mov
pop
mov
aad
xlat
add
fwait
inc
jecxz
test
shrl
xchg
push
cmc
pop
mov
cmp
xor
or
into
push
pop
mov
mov
jo
pop
mov
ficompl
ficoms
mov
sbb
scas
cmp
test
stc
fcom
jmp
addl
lcall
cmpsb
dec
lcall
push
pop
nop
test
fdivrs
andb
cmpsb
push
or
test
arpl
adc
ljmp
movsl
cs
sub
cmp
mov
aas
xchg
cmp
adc
stos
cmc
inc
mov
mov
aaa
xchg
imul
sbb
xchg
push
push
jg
push
jge
aaa
sub
test
inc
push
sub
cwtl
ss
jno
jae
cs
bound
fwait
and
mov
cmp
test
mov
push
mov
bound
lret
ret
pop
cltd
jns
mov
fs
lock
imul
dec
mov
add
cld
dec
xor
sub
sahf
scas
aaa
cmp
dec
add
mov
mov
xchg
mov
int3
jg
data16
fiadds
dec
xlat
add
cmp
dec
jne
sbb
xor
int
cld
test
push
dec
and
insb
and
lahf
or
in
pushf
and
or
mov
push
mov
test
rol
int3
or
lahf
xor
jae
add
sti
push
mov
mov
stos
jg
or
std
jnp
aaa
fbld
repz
pusha
outsl
push
or
insb
fwait
ja
mov
pushf
mov
mov
jp
orb
repz
mov
pop
test
xchg
lds
mov
shlb
call
nop
mov
jp
sbb
mov
jecxz
ljmp
outsb
iret
jl
insb
cmp
and
flds
mov
inc
nop
pop
inc
in
lret
xor
pop
pop
mov
je
push
loop
les
test
push
xchg
jecxz
adc
and
scas
rcrb
cld
xor
ret
or
jo
cmp
and
pop
popf
lock
pop
ds
xchg
ficoml
pop
mov
aaa
call
or
pop
outsl
or
xor
ss
xor
out
pushf
pushf
jae
out
scas
aas
arpl
push
aad
ret
add
or
lret
cld
ss
lea
mov
mov
shrb
push
sbb
fwait
push
add
and
cmp
fxam
jae
lods
push
add
jmp
mov
sub
jns
push
test
stc
divb
fmull
or
loopne
ss
jo
jecxz
fwait
dec
rolb
push
sar
xchg
mov
mov
fmull
fwait
jle
mov
xchg
jle
mov
jae
pop
cs
cmp
pop
into
mov
mov
sub
sub
enter
push
lret
jns
dec
mov
mov
fmull
adc
push
les
adcl
cmpsl
rol
rcr
in
sub
in
pusha
jle
lret
mov
pop
or
dec
daa
jno
outsb
imul
repz
repz
lods
outsb
inc
and
pop
push
mov
pop
shl
out
pop
jl
or
dec
dec
pop
and
pushf
loop
stc
stc
jl
lock
push
mov
je
add
daa
stos
fstps
iret
cltd
or
test
sub
inc
enter
cli
out
ljmp
sbb
hlt
jecxz
add
xchg
add
mov
ss
cmpsl
xor
lds
xor
enter
xchg
mov
outsb
in
mov
sub
mov
ret
dec
fwait
loopne
fwait
sub
pushf
into
push
pop
dec
push
jnp
jbe
jae
lods
mov
sbb
inc
rorb
std
push
jo
fisttpl
movsb
subl
mov
cmp
sbb
lods
push
xchg
xor
mov
movsl
sbb
xchg
adc
or
xchg
mov
call
imulb
xchg
in
out
jae
loope
xor
xchg
les
sub
icebp
fwait
rcrb
mov
dec
and
out
add
call
cmp
ret
es
xchg
out
rorl
pop
mov
clc
pop
roll
inc
sbb
inc
and
adc
sbb
es
sahf
ret
adc
jl
jb
cs
loope
sub
loop
inc
and
push
and
mov
sahf
mov
repz
dec
inc
popf
test
cltd
sahf
mov
rclb
adc
xor
ljmp
clc
and
jmp
divb
xorb
push
dec
popa
jge
fsubs
mov
jns
in
or
pop
mov
dec
push
or
or
into
xlat
lock
flds
pop
jns
pop
push
lods
mov
sub
adc
jg
and
sub
iret
lret
jecxz
push
andb
mov
or
sarl
scas
jp
add
or
pop
mov
pop
xor
xchg
lea
insb
push
add
jne
js
lret
cmp
jg
inc
jecxz
pop
icebp
and
pusha
dec
pop
cs
loope
xlat
mov
cmp
testb
adc
mov
inc
push
sbb
add
inc
fwait
aaa
fwait
or
sarl
xchg
and
mov
xchg
clc
inc
sbb
aas
mov
dec
rcll
es
inc
xor
popa
addr16
inc
jb
jecxz
dec
roll
dec
popf
lcall
andb
inc
fiaddl
pusha
push
xchg
mov
scas
repz
aad
push
sahf
push
cmp
adc
mov
int
mov
dec
jb
push
fistl
out
aam
pusha
popf
jg
sub
inc
xor
sbb
das
and
xchg
in
xor
cmp
mov
jp
out
pushf
scas
jne
mov
cmc
in
push
push
fwait
stos
popf
push
dec
cmpsb
rorl
lret
jmp
andb
push
in
comiss
xchg
jae
mov
pop
jne
and
out
xchg
push
lods
add
mov
jecxz
repz
cmp
push
sbb
outsl
xor
jp
add
cmp
popa
pop
in
pop
int
nop
repnz
adc
push
out
jp
dec
or
hlt
lods
and
xchg
inc
sub
nop
lret
loopne
jb
test
in
xchg
push
adc
pop
out
mov
adc
sti
das
sub
dec
ret
adc
jge
pop
and
xchg
push
push
std
addr16
push
sub
movsb
jns
pop
mov
aam
xor
lds
pop
push
add
push
in
adc
jns
mov
jp
xchg
adc
ficoml
notl
ljmp
out
push
out
loope
pop
sub
stos
jle
cmp
dec
dec
mov
xor
stos
jne
in
sahf
inc
adc
ljmp
lret
cmp
jnp
xchg
fisubs
fldenv
out
mov
jg
movsb
lods
sbb
adc
inc
sahf
inc
pop
mov
loope
inc
xor
jo
movsl
pop
fwait
add
sub
mov
xchg
cltd
mov
sbbb
add
and
add
sbb
dec
mov
test
push
push
cltd
push
sbb
cmpps
out
xor
push
ja
das
add
lock
cmp
bound
hlt
aad
inc
test
dec
sbb
xchg
cmp
jb
test
rcll
fisttpl
push
dec
loopne
mov
rorb
sbb
jnp
mov
push
rcr
push
test
push
shll
push
test
pop
sbb
push
cmp
lahf
jnp
jle
fbld
movsl
iret
push
push
shrb
das
inc
push
mov
mov
pop
mov
loop
mov
add
xchg
mov
mov
xchg
push
push
int3
fbld
ficoml
cmp
les
lahf
or
sbb
mov
push
mov
popf
es
or
repnz
mov
dec
jp
inc
sub
dec
jne
pop
mov
fstpl
xchg
ret
leave
daa
inc
or
dec
movsb
fwait
inc
scas
jmp
xchg
pop
decl
stc
int
orl
loopne
imul
sbb
mov
xor
out
inc
push
rclb
ss
push
test
sbb
xchg
popa
fwait
js
adc
xchg
outsl
mov
outsb
sahf
inc
inc
jecxz
sbb
adcb
pop
inc
mov
lods
add
pop
push
daa
cmp
cmc
aaa
add
pop
out
addr16
and
sbb
outsb
push
sub
jp
add
das
mov
mov
fstps
add
lods
repnz
sbb
aaa
ds
cmc
insl
push
push
sarb
xor
in
scas
test
add
sbb
dec
or
push
push
pop
ss
nop
push
lcall
fwait
xchg
adc
cmp
inc
faddl
or
push
enter
mov
scas
inc
stc
int
addb
cmp
mov
call
xchg
jmp
push
jbe
add
cmpps
add
arpl
sub
push
fsubr
lcall
pusha
mov
pop
jl
sbb
ret
out
xchg
dec
loop
xchg
add
lock
out
dec
cld
hlt
jmp
test
pop
loope
lcall
iret
pop
jp
inc
and
sbbl
dec
lcall
addl
jo
lcall
or
into
in
push
pop
mov
aad
mov
inc
fcmovnb
int
xchg
cmpsb
xorb
icebp
push
scas
add
enter
mov
cmp
jbe
xor
je
fdivl
sub
xchg
js
lock
pop
rclb
lret
add
fcoml
clc
inc
lea
jne
lcall
lcall
fsubrs
daa
movsl
psubsb
jmp
push
aam
adc
add
inc
outsl
push
jl
imul
sbb
js
lock
cmp
pop
inc
mov
cmp
push
jne
pop
dec
sub
sub
inc
xchg
push
xchg
xor
fdiv
add
sbb
sub
xchg
inc
daa
in
fidivs
sub
lods
push
jae
stc
xchg
mov
sub
sub
cmpsb
inc
cmpxchg
push
in
adc
fidivl
sbb
jbe
xor
mov
mov
cmp
popa
fwait
mov
icebp
stc
cld
pop
addb
scas
adc
lret
dec
cld
jl
mov
iret
or
pop
fisttpl
cwtl
push
jmp
out
ja
adc
in
push
pop
and
insl
stc
mov
inc
pop
xor
imul
test
inc
fdivs
mov
dec
inc
repz
out
jmp
lds
shr
sbb
arpl
lods
idiv
dec
mov
pop
cli
or
add
mov
or
call
adcb
cmp
out
sbb
dec
pushl
out
nop
cmc
mov
jg
ja
jp
aas
scas
lods
jb
push
jmp
push
lea
int3
nop
enter
or
popf
insb
add
movl
mov
ljmp
cmp
adc
imul
pop
lods
sub
shr
testl
clc
xor
outsb
and
daa
mov
mov
icebp
fmuls
push
ds
jl
enter
mov
stc
push
sub
bnd
add
scas
sahf
cmpsl
sbb
mov
out
popa
dec
mov
lret
cwtl
sbb
mov
mov
xchg
jns
sub
scas
loope
adc
bound
outsl
or
sti
xor
lret
mov
xor
cmp
repnz
fists
sarl
and
cmp
mov
cld
iret
jl
das
bound
cmpsb
mov
out
inc
xor
addr16
insb
mov
pop
and
push
cmp
mov
xchg
loope
lcall
ss
cmp
addr16
dec
movsb
jnp
inc
lods
movsl
das
sbb
loop
outsl
sahf
mov
xchg
movsb
movb
inc
jmp
xchg
xlat
xor
test
xor
mov
fistpl
sub
std
lock
push
dec
stos
shr
lret
ret
in
into
pop
dec
dec
push
lahf
and
stos
outsl
je
push
fs
dec
incl
clc
rcr
shll
push
pop
fdivs
test
aas
testl
and
aam
mov
aas
adc
pop
repnz
nop
shll
xor
mov
insb
gs
dec
in
icebp
sahf
push
xor
mov
pushf
push
jne
mov
push
sub
pop
addr16
cmp
adc
xlat
mov
scas
imul
stc
lret
sbb
dec
test
xor
cmp
sub
xorb
inc
ficompl
nop
loop
and
sbb
orl
bound
in
mov
out
and
ljmp
cmp
add
jle
or
addb
out
test
fwait
dec
test
addb
daa
icebp
jbe
pop
inc
or
inc
lret
lret
push
adc
sub
sarl
or
mov
je
lock
push
repz
daa
jae
pop
adc
sbbl
cwtl
sub
mov
cmp
mov
stos
jns
flds
outsb
popf
sbb
outsl
or
adc
inc
inc
add
outsb
and
or
in
insb
int
cmp
jg
mov
adc
pop
pop
push
mov
sub
outsb
cmc
stos
xlat
jb
jnp
loope
jae
add
mov
sub
arpl
pop
nop
outsb
insb
mov
aas
mov
fnstenv
xchg
outsb
outsb
int3
mov
jo
in
lods
mov
sub
dec
push
jb
push
sub
cltd
out
dec
cmc
jge
aas
mov
fmuls
jp
push
pop
sbb
push
xor
xor
push
and
out
jb
inc
ss
xor
jg
loope
mov
insb
lods
ret
fcompl
sbb
add
in
sub
and
outsb
cmp
les
out
push
pop
xor
sahf
out
fwait
push
add
jl
inc
or
das
sbb
imul
fwait
out
adc
lds
fstpt
iret
pop
jmp
cmc
pop
pop
popf
push
xor
flds
mov
or
pop
scas
mov
sbb
mov
and
mov
scas
mov
dec
pushf
push
mov
jl
cld
mov
jge
mov
arpl
test
shl
xor
into
adc
and
pop
mov
sbb
seta
sub
icebp
scas
loopne
jmp
pop
leave
les
dec
dec
cmpsl
jo
dec
mov
enter
fwait
es
enter
nop
sqrtps
rcr
mov
dec
adc
iret
cmpb
or
sub
xchg
in
or
mov
dec
push
insb
sub
test
dec
mov
outsb
rcrb
ss
leave
jmp
add
test
push
mov
sahf
cmp
cmp
xchg
je
jno
mov
inc
mov
dec
loopne
push
shll
insb
aam
pop
jle
fwait
xchg
sbb
cld
inc
bound
jne
pop
shl
scas
mov
scas
lcall
mov
pushf
enter
lret
sub
sti
dec
mov
cmpsb
adc
test
xor
mov
mov
and
xor
xchg
mov
bound
mov
xlat
jnp
stos
incb
lcall
push
imul
sbb
lahf
jg
fmul
fs
arpl
movsb
mov
arpl
lret
and
lret
movsb
inc
cld
mov
jmp
mov
js
lea
mov
pop
mov
jmp
or
adc
cmp
std
xchg
dec
repz
pop
mov
cmp
mov
push
clc
mov
mov
adc
dec
sbb
inc
cmp
push
or
or
pop
dec
clc
mov
xor
mov
mov
loope
stos
movsb
ficomps
aaa
or
insb
adcl
outsb
mov
jae
movsb
outsl
push
test
gs
and
into
or
subb
add
dec
mov
and
cli
loop
aas
pop
iret
jl
mov
sbb
jle
push
pop
test
xor
out
lret
or
jg
add
scas
pusha
cmpsb
adc
inc
ss
jno
cltd
nop
lea
mov
pop
arpl
and
mov
fs
cmp
andb
outsl
and
data16
stos
repz
mov
sbb
mov
cli
push
cmpsl
add
pop
mov
inc
into
push
cli
nop
lods
push
push
add
cmpsb
xorb
in
popa
dec
push
cli
loope
xlat
iret
insl
test
cmp
and
xchg
and
xlat
jo
in
pop
fs
fistl
std
jo
loop
sbb
sbb
int3
jl
lea
cltd
dec
andl
jge
mov
or
movsl
rcrl
sbb
mov
iret
xor
outsb
fcomps
loop
stc
and
aad
fnstenv
arpl
dec
les
push
push
int
pop
outsb
adc
jmp
lahf
fisttps
mov
xchg
sbb
sti
pop
mov
inc
pcmpgtw
pushf
repz
cmp
pop
add
mov
rclb
mov
mov
int3
int3
popf
out
cmp
or
popf
sbb
pop
in
mov
mov
sub
adcb
push
sub
in
scas
in
push
cmp
mov
lds
sti
xchg
sub
mov
out
xlat
out
gs
mov
outsb
mov
and
mov
and
adc
lea
mov
in
adc
dec
xchg
int3
mov
push
mov
rorl
call
fst
rcrb
cmp
adc
pop
push
pusha
out
xchg
pop
sub
and
daa
xchg
adc
jno
push
fcompl
addr16
loopne
push
loop
add
call
add
xor
fsubrs
addl
or
sub
add
mov
outsl
shufps
jno
outsb
sub
jmp
inc
movsl
inc
in
and
or
les
nop
jnp
cmpsb
sub
outsl
jecxz
mov
lahf
enter
xchg
cmc
insl
mov
lds
mov
pushf
vpsubusb
lds
je
das
gs
in
aas
lahf
mov
dec
dec
adc
dec
and
int3
inc
cli
cld
jg
mov
arpl
lcall
aam
mov
fstpl
jl
push
adc
out
or
loope
jl
mov
mov
dec
cmp
xor
mov
aam
bound
sub
mov
call
mov
and
and
or
hlt
xchg
js
cmp
xlat
sub
dec
or
mov
jb
cmc
fbstp
mov
ret
popa
mov
iret
jae
cmp
les
fwait
or
pop
cmp
inc
in
ljmp
mov
iret
push
cmp
inc
add
icebp
popa
test
loopne
push
xchg
inc
or
push
pop
pop
mov
push
inc
jg
sbb
push
ljmp
daa
dec
fsubrs
jae
fldcw
mov
pushw
in
or
test
addl
daa
inc
fsubrp
or
shlb
inc
aas
aad
jno
call
dec
scas
call
aad
add
fsubrs
repz
cmpsb
push
nop
in
mov
loop
lret
and
jl
jg
or
mov
push
in
iret
push
inc
rcrb
sub
and
add
push
std
gs
bound
push
mov
iret
mov
lcall
pop
sti
xchg
int
cmpsb
pushf
stos
push
inc
or
cld
sarb
scas
shl
xchg
repnz
aam
mov
outsb
gs
and
in
fwait
stos
cmc
pusha
mov
jo
xchg
push
push
test
aad
push
jnp
jns
lret
xorb
inc
scas
ret
ss
adc
mov
out
xchg
sbb
and
imul
and
bound
sbbl
adc
sbb
mov
in
std
fucomip
fmul
lret
popa
and
sub
jno
out
call
lret
adc
adc
std
mov
mov
xchg
in
fisubl
mov
lret
ljmp
test
dec
add
out
mov
mov
push
cmp
imul
hlt
mov
ret
and
loopne
jo
call
push
adc
cld
ja
adcl
cwtl
out
push
es
out
cltd
jmp
in
cmp
or
ficoms
pop
or
or
jl
mov
inc
ret
adc
jp
test
loopne
shlb
mov
xor
fsubs
xor
add
xor
loope
rolb
cld
cmc
mov
push
push
cmc
test
pop
mov
fs
xor
lahf
cli
loop
lods
jge
sti
or
iret
or
cmp
cld
enter
in
addb
pop
cmp
xchg
sbb
rclb
xor
cmp
mov
fwait
mov
mov
jle
int3
bound
mov
jge
sub
or
outsb
mov
jno
xorb
mov
push
sub
xchg
push
mov
mov
and
or
mov
rclb
clc
daa
or
fdivr
aaa
mov
ss
mov
add
fldl
jg
test
icebp
mov
leave
sub
adc
insb
jp,pn
sbb
push
iret
enter
fidivs
cmpsb
jmp
mov
pusha
xchg
int3
inc
es
loop
fidivrl
shrl
fistpl
dec
hlt
mov
cld
das
adc
in
icebp
lea
push
mov
scas
or
mov
inc
adc
sbb
push
loope
mov
data16
push
std
or
lret
adc
mov
or
rcll
inc
mov
dec
mov
div
and
stc
roll
pop
clc
ljmp
lret
aad
mov
xchg
out
xor
je
mov
pop
test
lock
lret
xchg
and
fcoms
test
mov
in
faddl
push
fdivrs
mov
mov
clc
sbb
jbe
pop
in
inc
fistpl
and
fisttps
pop
cli
mov
mov
xor
inc
outsb
cmpsl
or
dec
lods
mov
xlat
inc
sahf
or
add
push
movsb
addl
adc
push
mov
in
mov
je
fimull
cs
xor
leave
push
or
add
pop
dec
xor
sbb
push
sbb
mov
mov
inc
lret
repz
sub
sub
jns
fnstenv
call
jno
push
push
push
lock
or
movsl
dec
sahf
stos
flds
cs
push
inc
hlt
mov
or
test
icebp
lahf
cmp
dec
repz
je
jns
outsl
pop
in
pop
mov
enter
xchg
dec
jecxz
lods
pop
mov
test
mov
sbbl
push
leave
cmpsb
sar
jns
add
lret
outsl
arpl
dec
shrl
js
lret
xchg
sub
lods
or
test
jge
and
add
jmp
mov
inc
fdivs
test
mov
adcl
add
mov
cs
fdivp
and
in
insb
aad
inc
int3
add
ds
cmp
pop
adc
pop
cmpl
lcall
loopne
and
aas
inc
push
ret
bound
jnp
stc
or
sub
sbb
push
push
in
sahf
push
jns
mov
sbb
lcall
jae
and
es
cmpsb
cmp
mov
xor
cmc
les
mov
cltd
or
jo
adc
sbb
incb
push
outsl
mov
ds
and
cld
inc
or
rcrb
jge
dec
popa
repz
cmp
aad
mov
shrl
lcall
hlt
dec
fs
test
movsb
xchg
mov
bts
loope
lret
and
mov
pop
push
sub
push
sub
outsb
fdiv
fistpll
aad
pop
stos
inc
test
popf
add
and
xchg
cmp
mov
movsb
cmpsl
mov
add
into
ljmp
push
aas
mov
mov
lock
mov
sub
ja
popa
mov
test
cmc
int
dec
loop
aam
ja
test
adc
loope
xchg
push
pop
lret
cmp
cmp
adc
addr16
subb
mov
cmp
lret
inc
stos
rcrl
and
stc
je
outsb
jle
xchg
or
jns
xchg
push
xor
repnz
mov
push
mov
rcrl
xor
gs
push
movsl
adcb
test
xor
lahf
push
inc
mov
add
stc
hlt
cmp
cmpsl
dec
gs
addr16
inc
cmp
xor
mov
mov
push
outsb
fcompl
mov
xchg
stos
shrb
mov
pop
xlat
cmp
xor
iret
mov
arpl
adc
jno
pop
into
jmp
xchg
icebp
sahf
mov
aas
dec
lock
xor
out
movsb
push
add
ja
loopne
cld
mov
int3
and
mov
and
jl
pusha
fwait
xor
pop
cltd
imul
dec
xchg
mov
popa
add
xor
mov
cltd
lcall
adc
call
daa
sahf
outsb
jb
pop
push
jl
sti
fsubs
aaa
pop
sbb
xor
jnp
mov
or
mov
mov
scas
outsb
aad
aad
cmpsl
sti
stc
nop
inc
fsubrs
fsin
push
or
scas
sar
cltd
mov
movsb
add
push
icebp
int
cmp
push
sbb
push
mov
xchg
aas
iret
icebp
xchg
rcl
movsb
scas
cltd
aad
out
adc
sbb
inc
aam
pop
push
subps
cld
mov
or
jb
out
in
mov
repnz
and
add
inc
int3
push
jnp
dec
mov
hlt
push
out
mov
ds
and
pushf
lods
cld
cmp
xchg
jmp
push
sbb
mul
imul
xchg
jns
fucomi
push
push
fwait
mov
subl
jp
out
orl
fisubs
push
test
jns
lea
adc
loopne
cmp
dec
pop
and
incl
sub
imul
daa
sub
stc
xchg
loop
pop
imul
rorb
test
push
mov
sub
add
or
mov
xchg
mov
add
scas
jbe
push
sub
adc
inc
cmpsb
data16
in
xchg
add
loope
mov
add
leave
cmp
inc
xchg
ret
scas
pop
test
pop
push
sub
sti
or
insb
dec
out
test
pop
xchg
cmpsl
repz
xor
adc
rorb
dec
shlb
cli
fwait
dec
cmc
sbb
aas
imul
data16
rol
mov
test
mov
jecxz
and
cmp
addb
cmp
push
and
std
xchg
jns
dec
movsbl
xchg
jmp
pop
in
cmpsb
outsl
cmp
cs
iret
add
inc
popa
in
mov
and
add
cs
clc
jl
pop
push
push
pushf
fs
mov
cmpsl
mov
nop
and
scas
js
stos
shll
repnz
inc
lea
ljmp
adc
and
fwait
xchg
and
ss
or
add
out
sbb
or
stos
sub
pop
mov
push
movsb
cmpsl
or
sbb
in
ret
xor
imul
aam
test
pop
ja
inc
cmp
js
mov
ret
cld
pop
ljmp
push
cli
push
xchg
push
mov
push
es
cs
adc
add
test
inc
lcall
fdivl
and
inc
and
xchg
movsb
add
mov
in
enter
xor
rol
aaa
ret
push
pop
ret
jae
xchg
or
shl
pushf
xchg
fdivp
xchg
rcrl
mov
mov
pop
ret
rcrb
and
push
pop
fiaddl
inc
xchg
rorl
cmpb
addb
bound
cmp
sahf
sti
in
shll
add
push
xchg
fidivs
hlt
sub
repnz
pop
mov
cmc
loopne
sub
sub
cli
test
int
leave
pop
cmp
ljmp
jg
fisubrs
aam
jb
bound
lcall
add
mov
xchg
xchg
jge
xchg
notl
mov
xchg
push
cmc
or
push
mov
scas
icebp
popa
in
jmp
inc
test
xor
lea
loop
jle
mov
sar
dec
dec
int
mov
rcll
adc
outsb
or
rcll
mov
hlt
int
jbe
mov
jns
pop
xchg
fsubl
jge
inc
sub
or
inc
insl
fcmovne
addl
push
mov
daa
cmp
mov
xchg
push
loop
repz
xchg
lcall
pop
sbb
and
daa
loope
dec
mov
mov
aas
rcr
inc
stos
mov
or
xchg
in
sbb
fnstsw
xchg
lret
repz
loop
xor
leave
mov
loopne
xor
jl
xchg
cmpsl
sub
mov
jmp
fidivrl
or
mov
push
pushf
loopne
pusha
loop
xchg
sub
push
xor
fisubs
mov
hlt
outsb
push
dec
ret
fists
in
sbb
icebp
xorl
xchg
mov
or
pop
lret
mov
std
cmpsl
cmp
incl
dec
int
cmpsb
push
mov
lea
scas
adc
mov
jo
or
pushf
inc
adc
or
inc
adc
dec
mov
xor
iret
movsb
clc
inc
adc
pop
sti
in
mov
ret
jnp
lahf
lret
or
rcl
in
loope
test
sbb
dec
lea
insb
fcomp
inc
fstpl
mov
jnp
clc
jnp
add
aad
mov
mov
setne
jns
push
push
sbb
sbb
iret
and
mov
lret
push
lods
xchg
shrl
add
mov
xchg
xor
sbb
pop
or
pop
test
cld
movsb
push
cltd
fiaddl
sbb
fcmovnb
jle
ja
dec
imul
mov
test
mov
test
popa
lods
mov
fldt
jbe
mov
aaa
jge
add
xor
xchg
mov
rcll
test
inc
leave
stc
jecxz
mov
loopne
dec
lret
dec
pop
push
pop
in
je
dec
cld
mov
mov
xchg
dec
and
push
clc
or
xchg
jo
ss
mov
shll
dec
jle
movsb
ljmp
stc
cmpsb
fsts
into
insb
mov
sub
mov
je
test
xlat
adc
mov
gs
popa
mov
jmp
test
test
adc
in
mov
mov
jne
and
std
dec
cmovge
adc
mov
enter
xchg
dec
push
lret
gs
push
mov
pop
fistpl
jge
fwait
xchg
in
test
pop
mov
std
bound
out
pop
stos
ja
out
xchg
and
xlat
iret
bound
es
lock
cli
aaa
jp
xor
push
and
mov
shlb
pop
ds
push
bound
cmpl
movsb
push
xor
sbb
call
dec
xchg
mov
mov
xchg
scas
dec
mov
cmpl
inc
stos
fucomp
sbb
cwtd
test
aad
outsb
sub
fildl
ret
mov
push
mov
call
popa
jns
sub
sbb
aas
out
or
mov
into
mov
scas
or
xor
ffreep
aad
cli
hlt
add
and
dec
daa
xchg
in
cmpsb
repz
mov
mov
das
je
pop
push
rclb
sahf
lock
jno
fdivp
lock
dec
test
or
mov
mov
js
lea
pop
cmc
sbb
call
or
popf
addr16
jno
popa
mov
in
fwait
nop
imul
dec
test
xlat
push
movsl
sub
mov
jno
cmp
sbb
dec
lods
std
test
psubsw
mov
outsl
adc
pop
in
lods
pop
bnd
add
insl
negl
push
rcrb
test
in
out
sbb
jne
ljmp
ret
das
fidivs
stos
jl
ja
push
inc
xchg
sbb
jl
test
stos
xchg
stc
test
cmp
xchg
push
mov
stos
pop
pop
or
in
cmpsb
dec
dec
jns
inc
and
mull
xor
loop
and
in
notb
cmp
push
xchg
dec
outsl
xor
mov
jb
lahf
jmp
sbb
fstpl
or
ret
icebp
and
pop
cmpsb
push
adc
das
pop
xchg
xchg
popa
inc
cmpsb
xor
mov
jne
call
mov
inc
fiaddl
mov
jne
into
bound
icebp
xchg
lds
pop
hlt
sub
and
push
rolb
stos
dec
lret
add
std
cmc
xchg
rcll
and
dec
lret
push
adc
cs
enter
inc
jne
enter
cli
jge
je
xchg
cmc
loopne
xchg
or
loope
movsb
lret
sbb
ds
pop
mov
out
hlt
in
inc
lods
mul
mov
mov
push
nop
pop
test
fwait
mull
mov
add
jno
aad
inc
cmc
add
lods
jg
push
sbb
loope
adc
fdivrl
shlb
movsb
adc
adc
adc
out
scas
ficoms
and
sbb
clc
xlat
xchg
pop
inc
jle
scas
cltd
fadds
pop
dec
jp
or
mov
out
mov
cmp
adc
popf
lods
pop
sub
pop
les
sahf
hlt
test
adc
jns
jecxz
fisttpl
jne
jp
gs
mov
add
add
les
jg
nop
add
nop
xor
add
jle
or
loop
out
and
fwait
jo
popa
xor
loop
lea
sbb
mov
add
push
stos
pop
data16
add
jno
xchg
mov
into
xlat
mov
push
ljmp
lods
jmp
push
outsb
ds
out
mov
aaa
out
jno
ljmp
outsb
test
mov
in
es
and
pop
mov
cmp
xor
repnz
push
and
test
inc
jle
jo
stc
data16
inc
mov
sub
or
mov
mov
insl
repnz
mov
bound
test
xchg
jno
jno
and
imul
dec
mov
cmc
sbb
xor
xor
adc
jg
mov
jge
call
mov
and
mov
sub
adc
inc
dec
push
dec
stc
test
shrl
arpl
test
pushf
sub
imul
fisttpll
push
das
dec
xor
push
sbb
cmc
mov
aas
add
in
test
rorb
push
cli
std
cmp
out
in
adc
repz
das
xor
lods
sub
mov
shlb
rol
clc
add
xchg
mov
pop
inc
mov
push
movl
mov
push
aad
fistpll
dec
bound
add
xor
adc
jae
mov
xchg
xor
mov
jp
aam
inc
out
fsts
sti
adc
mov
leave
test
sbb
sahf
adc
insb
xchg
divb
loop
fwait
mov
cmp
mov
in
sbb
pusha
pop
mov
sti
out
mov
pop
cli
into
imul
int
sub
adc
mov
lods
mov
in
xchg
icebp
ljmp
mov
mov
push
mov
cmc
cmpsb
std
pop
notl
sahf
push
into
or
imul
insb
popf
ss
xor
ret
andl
jg
std
repz
mov
mov
adc
xchg
adc
clc
jl
sbb
mov
inc
lcall
cmc
pop
pop
push
lods
mov
mov
push
add
dec
mov
mov
arpl
ljmp
ss
loopne
insl
imul
lret
mov
aam
jne
cmp
adc
lret
xor
icebp
fldl
jb
mov
adc
arpl
mov
ret
mov
pushf
adc
sbb
aas
iret
push
outsl
mov
xchg
imull
xor
enter
repz
mov
cmp
loopne
aad
outsl
lods
insb
jno
xor
int
ds
mov
cmp
sub
das
outsb
cmp
sub
js
fiaddl
cld
sub
hlt
mov
jne
mov
arpl
pop
pusha
adc
fs
add
jno
popf
inc
dec
lcall
les
not
out
aam
xchg
pop
into
jnp
cmp
and
ljmp
repz
jmp
sub
test
adc
dec
cld
cltd
mov
dec
test
enter
push
push
add
dec
addr16
mov
orb
push
add
sbb
out
lahf
das
or
mov
stos
aam
rcrl
mov
je
loopne
inc
jge
mov
cmp
mov
adc
jle
stc
pop
cmp
pop
inc
loop
jg
mov
mov
xor
lahf
xor
cwtl
mov
add
adc
lea
mov
xor
repnz
rolb
repnz
and
add
test
into
out
adc
movsl
iret
lcall
imull
push
sbb
out
das
popf
ret
sub
xchg
jg
mov
fscale
shr
addr16
cmp
out
lock
gs
push
leave
test
scas
jmp
nop
cmpsb
test
popa
mov
jb
sarb
xchg
shlb
fstpl
xchg
jge
ret
mov
adc
mov
dec
gs
push
or
adc
mov
pop
inc
mov
push
stos
lahf
mov
push
and
dec
xchg
or
stos
insl
mov
xchg
mov
jp
sub
xorb
call
pop
dec
sahf
into
dec
jmp
subl
sub
xor
stc
mov
arpl
cmp
mov
mov
jns
xor
dec
mov
ljmp
inc
shl
pextrw
mov
sbb
mov
add
and
mov
ret
mov
xor
int
add
lahf
push
rclb
cld
dec
pop
mov
or
insb
mov
insb
out
leave
movsb
jns
cld
or
jno
dec
lea
and
adc
jbe
dec
in
xor
xlat
stc
test
rolb
lock
sub
xor
lret
sbb
outsl
les
aas
popf
lcall
sub
or
imul
xor
mov
sahf
jge
pop
jns
cmpsb
cwtl
push
push
xlat
ds
xchg
cmp
dec
push
mov
mov
mov
pop
cmp
adc
jp
scas
dec
inc
pop
xor
jno
mov
dec
cmp
mov
pusha
sub
sbb
sub
lds
repnz
addr16
rolb
adc
and
hlt
mov
mov
cld
mov
pop
xor
fidivl
or
pushl
pop
pop
rcl
sti
inc
mov
push
jmp
jge
jl
and
push
sahf
inc
pop
leave
dec
test
add
push
dec
shll
or
lds
inc
out
lods
mov
test
jns
inc
js
mov
pusha
cmpsb
ljmp
andl
idivl
add
xchg
push
xor
jle
scas
push
sti
addl
test
into
xchg
jecxz
out
xor
adc
mov
mov
lret
lods
arpl
ja
xor
push
xchg
and
ret
jge
jge
mov
jge
sub
in
lods
xlat
jne
enter
jmp
insb
repz
mov
rorl
dec
xlat
pop
mov
jg
fbstp
or
mov
gs
icebp
mov
fbstp
push
fistpll
mov
mov
push
push
add
iret
test
sbb
in
scas
pop
addr16
push
sbb
lret
xchg
inc
and
loope
imul
into
inc
popa
and
cmp
int
call
stc
jo
cltd
xor
sbb
lret
xchg
pop
popl
cmc
daa
fisubrs
daa
ljmp
jno
lcall
dec
fadd
scas
aam
lds
mov
test
imull
pop
mov
mov
mov
jnp
push
shrl
inc
cwtl
dec
ficoml
pushf
sub
cs
adc
daa
push
pop
mov
lods
add
lcall
add
stos
aam
xchg
inc
jae
jb
mov
sub
fnstsw
dec
jns
idivb
pop
mov
xchg
out
add
pop
js
push
inc
out
dec
jo
pop
add
movsb
out
outsb
push
fiaddl
call
mov
jge
cltd
mov
shll
cmp
leave
outsl
mov
ret
movsb
sub
mov
ret
outsb
inc
adc
adc
dec
iret
incl
inc
dec
inc
cs
mov
andl
lret
lcall
lock
addr16
jo
mov
sbb
ljmp
cmp
test
rcr
cmp
repz
cld
adc
shrl
mov
xchg
dec
insl
pop
insl
sub
ds
out
mov
or
popfw
push
and
jo
mov
mov
test
rclb
inc
stc
ret
cmpsb
jmp
xchg
in
jbe
pop
or
outsb
jnp
mov
jno,pn
iret
stos
cmp
data16
enter
cmc
mov
pop
cmp
decb
cmp
shl
mov
decl
cwtl
fnstsw
addb
loopne
imul
mov
or
cmp
and
test
add
mov
xor
push
cld
jg
lahf
lea
xor
pop
inc
pusha
outsl
mov
mov
clc
daa
lret
out
jns
sbb
sub
and
je
mov
fistl
push
rorl
or
and
cli
xor
fadds
lcall
add
or
push
daa
jo
fwait
jmp
ss
or
cmpsb
dec
pop
and
mov
push
or
inc
les
stos
pusha
mov
pop
push
push
push
push
lea
addl
cmp
xor
test
cwtl
and
repnz
pop
int3
xchg
mov
fiadds
repz
insb
mov
adc
imul
xchg
shr
nop
push
lods
int
pop
inc
frstor
jno
sbb
loopne
mov
pop
cmp
push
std
lock
adc
jl
mov
jno
and
fwait
in
ror
mov
fcomi
push
mov
lahf
jnp
pop
shrb
dec
cmp
fnstcw
fdivl
lahf
xchg
rorl
jp
repz
test
pop
cmp
fcomps
fisubs
add
scas
and
sub
sub
push
fucomip
int3
shlb
add
fcompp
sub
sahf
adc
and
ljmp
dec
inc
and
xor
push
subb
xlat
or
or
push
mov
mov
dec
idivb
out
inc
inc
loopne
cmp
insl
inc
inc
push
movsb
xlat
inc
pop
aad
jns
rorb
icebp
xor
mov
lock
or
out
scas
push
addb
pop
push
inc
cmp
jae
in
call
cmp
ret
stc
repz
push
movsb
jno
mov
lods
popa
mov
rorb
out
sub
pushf
xchg
sbb
fcomps
fdivrs
stos
pop
mov
aam
cmc
push
pop
mov
xchg
pop
dec
jno
jmp
push
mov
mov
into
aaa
out
pusha
jbe
xor
xor
mov
stc
insb
jecxz
scas
push
cltd
xchg
add
mov
fmuls
cmpsb
jge
cmp
jle
xchg
push
fbld
ljmp
cmp
popf
push
push
mov
jg
and
mov
iret
enter
mov
or
std
rorl
arpl
inc
sahf
add
cmpsb
sbb
idiv
mov
popa
xchg
aaa
mov
inc
xchg
mov
cli
div
sarb
inc
movsl
fnstcw
inc
addr16
or
push
lret
das
fs
xor
bound
shll
add
movsl
subl
rcl
imul
mov
sub
pop
pop
sub
mov
popf
adc
mov
call
in
xor
clc
fs
sbb
ja
mov
aam
add
mov
leave
inc
cmc
cmp
in
xchg
sub
push
je
stos
inc
push
xchg
hlt
jbe
xchg
dec
fcoml
imul
clc
jp
pop
jo
out
in
js
in
xor
out
pop
inc
pop
adc
sub
int
insl
repz
and
add
aaa
xor
outsl
outsl
sahf
pop
mov
mov
and
clc
jbe
xor
mov
mov
inc
mov
in
sub
pop
xchg
dec
orb
or
add
aam
test
scas
add
inc
mov
mov
pop
push
xor
add
stos
push
sub
arpl
rclb
sbb
xchg
sti
cmp
es
push
sub
loopne
repz
mov
sub
sahf
xchg
sbb
and
jns
sbb
xor
xor
shr
and
popa
or
enter
pop
add
pop
gs
add
sbb
sbb
adc
xor
dec
lods
pop
in
outsl
lock
push
sub
mov
das
hlt
je
jbe
adc
add
loope
jns
mov
adc
aad
fsubl
xchg
push
dec
or
adc
mov
xlat
stos
mov
int
add
je
push
sbb
aad
or
mov
arpl
fiadds
push
outsb
inc
sub
adc
mov
and
cmp
sbb
cmpsb
add
mov
dec
sub
mov
aam
add
jmp
outsb
mov
pop
mov
xchg
add
jbe,pn
fistl
cmp
mov
inc
push
pop
xchg
daa
idivl
jb
test
jmp
std
adc
push
and
add
xchg
push
push
mov
mov
repz
mov
inc
cld
int3
int
andl
ljmp
sbbb
cmc
outsl
cmp
mov
add
ja
xchg
movsl
leave
adc
xor
mov
lods
fsubr
fisubs
adc
out
inc
out
mov
dec
icebp
jg
adc
inc
fwait
lret
sub
flds
mov
push
shrl
inc
jge
sbb
hlt
mov
mov
shr
iret
mov
cmp
dec
add
orl
sbb
test
popa
sbb
clc
mov
andl
lods
lcall
aaa
or
cwtl
sub
lahf
popf
insl
ds
fimull
mov
lds
insl
stos
imul
cs
hlt
cmc
mov
jnp
ds
fwait
mov
orb
loopne
les
nop
push
jmp
aas
lods
lret
xchg
jno
fidivs
xor
imul
dec
pop
lock
popf
lea
popa
iret
lret
mov
and
jb
lcall
mov
mov
cmc
scas
lahf
sub
push
jg
mov
sub
loope
and
sub
pop
push
mov
push
mov
in
or
fsubrs
push
add
xchg
ret
adc
cmp
movsl
add
sbb
xchg
or
test
fdivl
add
push
adc
ss
adc
xor
cmp
mulb
loopne
mov
mov
push
popf
jge
xchg
sub
in
sbb
imul
std
mov
or
aaa
in
mov
mov
pop
insl
add
dec
mov
mov
xchg
jp
inc
dec
or
lods
fcmovnbe
cmp
daa
sub
pusha
mov
jb
cmp
xor
pop
sbb
xor
xchg
lock
int
divb
std
jae
dec
lahf
inc
lret
cmp
cmp
mov
test
imul
sar
test
add
cmp
test
enter
sbb
ret
and
outsb
fdivrs
test
inc
dec
xor
pop
imul
mov
inc
out
jno
fildl
inc
jle
insb
fwait
or
clc
fisttpll
cmp
pushf
leave
adc
daa
adc
push
inc
jecxz
mov
adc
jmp
sub
mov
dec
mov
subl
adc
sub
inc
push
mov
fistl
and
cmc
loope
sub
aas
outsl
out
mov
mov
repz
hlt
sbb
push
or
jg
xor
fwait
outsl
jne
pop
test
mov
sbb
pop
fmul
mov
sbb
push
mov
popa
imul
add
cmp
lret
call
jne
lods
jae
jg
and
cmp
cwtl
in
pop
and
xchg
or
or
frstor
outsb
cli
cltd
or
ja
test
inc
sti
inc
idivl
sbb
add
outsl
aaa
rorb
popa
mov
lret
mov
pushf
jg
fwait
pop
fadd
mov
dec
shrd
push
jo
inc
movsl
push
outsb
fbld
sub
inc
fs
fcoml
xor
sti
cmp
cmp
adc
sub
dec
ret
cli
and
stos
stos
inc
in
cli
leave
inc
inc
cmp
pop
dec
add
jae
adc
rclb
mov
cmc
mov
mov
lea
arpl
inc
inc
xor
lds
nop
fs
or
lods
xchg
lea
cwtl
push
lahf
cmp
dec
test
inc
imul
int
or
push
cmp
clc
lahf
mov
dec
aaa
pop
pop
mov
rol
les
push
out
fildl
sbb
jge
dec
gs
arpl
data16
sbb
das
inc
pop
rcrb
iret
dec
les
movsb
add
cltd
xor
sub
ljmp
imul
pop
mov
mov
ds
jbe
jnp
mov
enter
nop
mov
icebp
clc
mov
cmp
xchg
add
ret
es
push
jns
outsb
xorb
nop
in
and
iret
xor
xchg
mov
enter
insb
mov
sti
pop
xlat
ss
rcl
into
inc
mov
dec
mov
inc
out
jg
sub
imull
ljmp
add
call
lods
dec
adcl
pusha
jnp
cmp
or
sbb
lds
lahf
enter
jp
popa
sbb
es
xlat
adc
repz
lahf
sbb
aam
add
add
fs
or
mov
lahf
shll
xor
insb
arpl
sub
in
sub
push
bound
lret
sub
in
in
xor
cmpsb
test
mov
xor
and
xchg
iret
mov
sbb
cmp
cmp
pop
das
adc
sahf
inc
fsubrl
cmp
sbb
xchg
sbb
jae
stos
mov
and
add
push
push
lcall
loopne
fldenv
push
sub
rcl
inc
fmul
or
push
and
dec
xchg
decb
rol
sarb
dec
add
or
dec
sub
inc
adc
dec
jns
ss
ja
jmp
fisubrl
cmp
mov
xchg
jmp
xor
aad
bound
mov
sub
daa
test
fwait
nop
cmpsb
or
and
cli
pushf
jnp
and
and
in
mov
inc
shrb
dec
lret
mov
test
xchg
add
dec
inc
mov
push
arpl
cmp
or
incl
lcall
mov
rorl
push
pushf
ds
in
lret
repz
cmp
andl
js
push
outsb
int3
mov
pusha
inc
mov
mov
pop
push
sub
xchg
pop
push
add
cmpsb
xor
xor
fxch
ret
jne
push
lahf
jl
repz
xor
pop
cmp
and
xchg
fistpl
xor
arpl
test
lods
in
push
and
sub
mov
and
pushf
into
mov
push
imul
dec
cmpsl
cmp
push
test
pop
jae
aam
xchg
mov
jno
push
pop
fisttpll
cltd
mov
pop
inc
hlt
dec
pop
into
inc
mov
xchg
lds
sbb
mov
in
xchg
jo
mov
and
sbb
add
cld
aam
in
pop
aaa
xchg
xchg
fists
and
dec
les
mov
mov
jns
mov
pop
and
in
sbb
leave
lcall
xor
cmp
add
int
cmp
mov
cli
sub
mov
in
push
lret
scas
and
and
dec
in
push
cltd
mov
dec
data16
push
fiadds
or
push
ret
and
popa
cltd
clc
cltd
sbb
pop
js
popa
outsb
push
mov
ret
mov
mov
and
jns
insl
popf
addr16
leave
xchg
cltd
jmp
cmc
jbe
enter
push
and
xchg
out
and
ret
mov
fisubl
pop
outsl
cmpsl
xor
cmp
inc
xchg
repnz
mov
lock
pusha
dec
cmp
xorb
gs
subl
add
test
movsb
call
insb
mov
std
sub
aas
cmpsl
jne
cmp
imul
sbb
pop
repz
xlat
mov
inc
mov
sub
bound
jg
push
mov
leave
pop
inc
xor
mov
adc
pop
dec
mov
pop
mov
cwtl
cmpsl
jge
je
out
cmp
outsl
int
adc
in
and
jmp
ja
inc
data16
call
in
jmp
or
xchg
int3
fnstenv
aam
ljmp
mov
call
and
mov
sbb
mov
adc
stos
stc
in
cmp
pop
gs
mov
neg
mov
sbb
or
adc
or
lods
add
repz
mov
stos
xor
cmpsl
sahf
mov
lahf
cmp
or
adc
test
sahf
mov
ret
jl
repz
adc
insl
add
jb
mov
jmp
enter
push
cmp
adc
xchg
mov
les
mov
cwtl
sbb
inc
ret
push
int3
insb
out
loop
in
adc
out
cld
stc
lds
push
adc
in
divb
cmpsl
mov
lds
jge
stos
inc
mov
adc
xchg
mov
jns
sub
add
lret
cmp
out
mov
jbe
push
mov
cld
jge
nop
xor
push
stos
pop
stos
push
fadd
mov
and
xchg
aaa
loope
adc
rcr
outsb
int3
or
lahf
pop
ljmp
inc
push
xchg
adc
stos
cmp
int3
int3
inc
jns
test
in
stos
mov
addl
aad
mov
fildll
mov
insb
sbb
xor
out
aad
in
fcomps
xor
jnp
push
mov
push
sub
in
mov
xchg
jle
xlat
mov
clc
daa
xor
inc
jle
clc
push
shrb
add
dec
std
push
cmp
imul
lds
jb
loopne
xor
out
out
add
and
sbb
call
mov
dec
stos
inc
in
add
mov
add
pop
xor
mov
cltd
in
dec
push
jmp
dec
bound
repnz
in
stos
cltd
dec
scas
aam
hlt
cmp
scas
mov
cmpsb
jae
je
leave
sahf
aam
inc
dec
cmp
xchg
pop
xchg
lods
push
xor
ret
ret
adc
test
cmpl
cmc
leave
inc
mov
sbb
push
and
int
popa
jbe
dec
call
sbb
std
ret
push
jb
cwtl
jns
out
aam
test
and
push
push
inc
xor
std
inc
loopne
test
push
jbe
gs
adc
test
cmp
pop
fbstp
arpl
push
inc
shlb
ljmp
push
sbb
rolb
test
dec
inc
insl
mov
pop
in
add
xor
mov
arpl
ss
imul
xor
jecxz
ljmp
jle
gs
iret
das
xor
jnp
mov
ljmp
fcoml
xchg
ffree
mov
test
jmp
mov
jae
push
push
aad
inc
xchg
andb
rorb
dec
lea
cltd
or
int
mov
mov
ss
das
in
test
mov
mov
stc
sbb
pop
xor
into
stos
or
ret
cld
inc
stos
idivb
lds
jns
test
dec
arpl
rcrb
dec
test
adc
and
xchg
ss
std
mov
int
xchg
sub
pushf
push
rolb
sbb
inc
es
sbb
idiv
sbb
jge
cmp
cmp
ret
pop
xor
insb
pop
sbb
popa
ja
popf
adc
leave
push
mov
dec
or
push
stos
inc
or
sbb
addr16
pushf
dec
jne
pop
adc
sub
sbb
or
pop
cltd
push
lock
popa
mov
sti
adc
push
subl
js
outsl
cmpsl
fldenv
mov
sub
jns
and
dec
mov
xchg
jecxz
ljmp
push
push
pop
adc
test
mov
dec
cld
aad
mov
pop
fimull
and
or
mov
es
inc
mov
pop
mov
jle
and
outsl
ret
fsubrl
mov
jmp
and
push
and
add
rcrl
sbb
xchg
roll
imul
push
cmp
test
lret
xchg
pandn
outsb
add
into
or
movsl
movsl
pop
xlat
iret
inc
repz
cmc
lods
je
push
lret
leave
mov
movsb
pop
jmp
hlt
insb
hlt
or
arpl
insl
jae
call
into
add
in
mov
vmulps
dec
adc
aas
adc
cmc
push
aaa
aaa
add
das
xchg
sub
or
lods
js
adc
sub
mov
ds
cmp
pushf
inc
mov
in
push
mov
jns
mov
xor
pop
xchg
lods
mov
adc
cli
movsb
movsb
lock
lret
adc
dec
ss
lret
inc
out
xor
filds
sbb
xlat
mov
and
add
jge
xchg
cltd
cmc
je
ljmp
lret
lret
jmp
pop
in
out
xchg
loope
punpckhwd
outsl
mov
cltd
xor
sbb
add
loope
mov
mov
stos
call
iret
test
lods
ror
mov
lds
add
sub
dec
inc
inc
icebp
ret
or
pop
pop
fs
add
pop
pop
sub
std
enter
mov
mov
gs
aas
insb
fs
lea
mov
outsl
test
pusha
movsl
sub
fistps
popf
in
push
int
sbb
xor
lods
jmp
pusha
pop
add
pop
jmp
js
xor
mov
xor
jle
test
shlb
ror
addr16
pop
adc
stc
aas
jae
inc
xchg
iret
inc
lds
movsl
or
scas
cli
out
sbb
stc
and
dec
pop
sahf
push
ret
int
adc
lahf
outsb
push
aad
mov
ret
adc
xor
cmpsb
push
popf
enter
jbe
cltd
mov
sub
fistpl
sbbl
xor
stc
push
adc
or
push
lods
repnz
mov
add
nop
mov
mov
sbb
cmp
loop
fisubrs
cmp
pop
icebp
popf
sahf
pop
ficoms
mov
hlt
iret
aam
jecxz
rorb
test
adc
sbb
pop
sub
out
cmp
outsl
add
xor
imull
shlb
popf
insb
xor
lret
aam
test
mov
and
push
leave
fcmovne
sbb
add
outsl
leave
adcb
ljmp
rorb
lret
jns
xorl
jb
xchg
fists
fisttps
sbb
adc
push
in
jbe
and
frstor
mov
ljmp
mov
ss
mov
icebp
add
es
insb
leave
dec
sahf
cwtl
xlat
enter
repz
mov
xchg
fistl
test
stos
xor
push
and
jp
rorb
mov
in
xor
xchg
cmpsb
sub
cltd
adc
ja
out
mov
ljmp
in
lock
pop
dec
mov
pop
sbb
mov
stc
imul
movsl
jp
outsb
outsb
cmp
push
inc
inc
xor
lods
sub
push
adc
adc
leave
rcrl
hlt
scas
les
push
loop
divl
mov
and
data16
cmp
cli
and
gs
adc
pusha
cmp
shll
insl
insl
push
int3
push
mov
xchg
add
push
pusha
and
ja
daa
imul
rcll
mov
mov
repnz
mov
movsl
adc
mov
int
cmp
pop
mov
push
cmp
icebp
rclb
inc
insb
lods
fiaddl
pop
inc
iret
xchg
dec
psrlq
sti
aad
adc
dec
leave
xchg
xor
sub
dec
mov
cli
testb
andb
stos
sahf
cs
xchg
xchg
mov
jbe
push
push
arpl
inc
cmp
push
mov
test
pushf
inc
fnstcw
xchg
sbb
insb
and
cmp
je
ret
pop
xor
pop
adc
mov
cwtl
ret
and
pusha
lret
test
adc
aam
add
loop
lret
sub
sahf
aad
int
and
scas
rcrl
and
lahf
arpl
sub
cmp
jle
mov
mov
ljmp
inc
lock
jnp
sbb
cwtl
fidivrl
xor
add
fs
mov
jo
jo
icebp
stos
test
push
shlb
inc
pop
jg
inc
imulb
inc
dec
sbb
mov
xor
stc
push
ja
xor
dec
add
les
mov
mov
push
dec
aam
ljmp
idivb
jle
jo
lods
lret
pop
popa
inc
mov
loop
das
xchg
pop
sar
pop
mov
xchg
sar
sahf
push
cmp
or
mov
out
mov
repnz
push
jns
sub
sub
in
ja
test
dec
inc
dec
lock
jp
xchg
mov
push
rcrl
popf
jecxz
mov
dec
and
mov
inc
loope
push
scas
scas
in
cld
xchg
jne
ret
adc
flds
pusha
mov
ja
push
push
cmc
inc
sub
push
fadds
lock
add
cmp
mov
dec
pop
ss
add
daa
mov
ljmp
pusha
jg
jmp
popa
dec
enter
out
inc
inc
inc
push
pop
sub
insl
test
repnz
rolb
nop
pop
orl
push
movsl
pushf
add
mov
xor
loop
notl
jmp
or
or
mov
cmp
mov
int3
push
out
jns
jb,pn
in
mov
sub
sbb
rcll
icebp
ficoms
mov
cmc
fimull
hlt
movsl
mov
std
lahf
fldl
insb
into
inc
clc
mov
xchg
sub
cmp
clc
jno
mov
std
mov
push
je
icebp
adc
int3
xchg
jge
pop
dec
dec
mov
in
sub
jae
inc
fsts
in
mov
lods
mov
idivl
jne
imul
push
sahf
adc
xor
pusha
mov
xchg
jbe
mov
incb
pop
or
into
cmp
sub
mov
push
sar
repz
repz
mov
xchg
dec
or
mov
cs
out
outsb
pop
into
cmp
in
pop
mov
xor
fimuls
sub
cmp
aam
int
mov
and
icebp
pop
mov
push
mov
outsl
inc
pop
loopne
frstor
pop
mov
jnp
inc
clc
adc
mov
jno
mov
mov
cmpsl
cmp
in
test
test
sub
jle
pop
mov
out
repz
stos
fs
pop
ja
push
and
shrl
or
scas
sub
mov
sahf
fs
xor
loopne
lcall
scas
sub
insl
ja
pushf
repnz
push
out
daa
mov
sbb
push
cltd
mov
out
push
xchg
lock
inc
dec
movsb
int
lcall
call
addr16
mov
and
icebp
push
icebp
xchg
addr16
movsl
popa
shll
dec
sbb
lods
data16
out
lret
xchg
add
mov
imul
push
divb
cmp
or
or
sbb
adc
sub
out
push
pop
mov
mov
shll
jne
cmc
sub
or
xchg
jl
rcll
lods
cmp
mov
cmp
aaa
xchg
push
mov
cmp
fidivs
lods
cmp
xchg
jle
pop
xor
iret
dec
cwtl
ljmp
mov
adc
mov
cld
das
mov
icebp
inc
adc
insl
xor
js
sti
and
xor
mov
rcr
jne
xor
and
add
mov
inc
popa
adc
into
jle
imul
and
fmul
add
mov
stc
sub
cmp
jae
inc
and
inc
mov
xlat
or
sbb
dec
pop
mov
sub
icebp
pop
mov
add
popa
xor
add
cmovns
stc
dec
ljmp
jl
mov
cli
push
mov
adc
fiaddl
out
cmp
rclb
sub
dec
loope
hlt
fbld
jnp
negb
mov
int
imul
leave
jle
jnp
insb
mov
out
sarb
xchg
dec
adc
pop
xor
cmp
repz
mov
add
or
sub
dec
lahf
push
pop
leave
aam
mov
jle
push
stos
adcl
js
jg
repz
dec
in
mov
jmp
fwait
lock
negb
mov
add
iret
test
fdivs
cmp
push
mov
lcall
repz
testb
xchg
or
mov
sbb
outsl
imul
popa
ds
test
ljmp
and
push
loope
jle
out
push
push
pop
orl
rcr
faddp
ds
int
inc
xor
jmp
inc
mov
out
xchg
mov
xlat
jo
sub
dec
dec
lret
addr16
loope
shll
inc
sub
fmulp
pop
cs
cltd
adc
mov
incb
add
fstl
xor
and
mov
lock
in
cmp
jbe
adc
add
and
dec
data16
mov
push
pop
sbb
inc
lods
push
add
loope
cmp
and
push
jno
cmp
popf
sti
pop
shrd
and
fisttps
in
bound
sti
xor
mov
or
ret
mov
xor
fcos
mov
sbb
shll
ret
adc
push
aaa
mov
enter
dec
mov
loop
cmp
and
subb
mov
xor
cwtl
push
test
cmp
cmp
and
xchg
xchg
orl
pushf
push
and
aas
popf
sub
and
mov
jae
inc
cli
mov
mov
test
push
cli
or
test
cmp
outsb
leave
sbb
xor
cmovo
sti
nop
inc
or
jl
cmp
mov
jp
orl
add
adc
dec
cmovae
inc
inc
adc
pop
push
mov
clc
push
cmpsl
push
inc
into
sti
test
addr16
popa
hlt
lahf
xor
adc
and
dec
aad
bound
cmp
sbbl
adc
lcall
adc
lcall
ss
pop
adc
inc
xchg
pop
ret
sub
xchg
sub
dec
inc
add
dec
adc
outsl
mov
inc
push
inc
aam
sbb
mov
push
push
cld
dec
jge
jecxz
inc
js
and
add
mov
mov
pusha
jg
das
sbb
push
test
mov
not
test
imul
jnp
lret
iret
xchg
lods
jecxz
loopne
in
fst
push
pusha
and
adc
jmp
cli
adc
xchg
or
add
enter
movsb
dec
insb
jl
push
ret
pop
sbb
xchg
clc
dec
dec
pop
daa
fwait
addr16
mov
repnz
pushf
or
popf
mov
icebp
gs
xor
sub
loopne
sbb
pushf
ljmp
sbb
lahf
arpl
pop
push
nop
inc
lods
and
sets
xlat
cli
jo
mov
aaa
repz
ret
enter
shlb
and
adc
xchg
imul
lea
inc
jg
movsl
adc
cmp
sbb
ret
jae
adc
pop
adc
shlb
shl
mov
pop
sbb
mov
xor
iret
lock
pop
dec
aas
sahf
adc
loopw
fs
or
hlt
cmp
cld
movsb
push
sbb
push
sub
mov
rcll
or
pop
or
lahf
lahf
dec
push
imul
inc
shll
icebp
out
add
push
jo
inc
test
xchg
pop
mov
mov
cmc
gs
aam
ljmp
xor
lds
mov
test
mov
inc
mov
cmp
jbe
shlb
fs
idiv
int3
pop
xchg
addr16
call
cltd
jle
in
mov
idivl
and
mov
fnstenv
add
cmpsb
ja
daa
in
inc
mov
icebp
push
sub
push
out
and
test
lea
shll
sbbb
outsl
mov
jns
adc
popf
shl
push
int
mov
xor
mov
sbb
pushf
fwait
stos
setns
je
fidivs
jle
nop
stc
mov
sbb
push
pop
add
push
cli
cltd
pop
rcl
jnp
mov
mov
mov
sbb
fadds
lret
mov
sbb
lods
mov
into
sub
subl
int
cld
cs
xchg
in
or
out
jbe
add
out
jae
pusha
jg
fsub
lds
cmpsb
jbe
push
in
mov
mov
addr16
jge
int3
leave
dec
pusha
int3
fcomps
jne
outsl
movsb
cld
repnz
adc
pop
pop
sub
xor
xchg
loope
mov
popa
orb
loop
dec
popf
add
mov
add
nop
jns
or
cmp
push
hlt
cld
pushf
les
testl
mov
sbb
es
dec
test
push
push
sbb
dec
mov
pop
adc
dec
clc
clc
sub
pop
int
push
and
jp
rcr
data16
inc
popa
icebp
ret
pop
push
in
popf
pop
test
add
cmp
push
xchg
pop
xor
xor
repnz
pop
sub
push
addr16
mov
push
xchg
cwtl
sahf
pop
mov
pop
clc
lock
js
jne
dec
inc
and
ds
adc
push
into
xorb
lret
addb
inc
xchg
mov
movsl
aad
adc
das
stos
jge
fsubrl
out
pop
and
inc
out
xchg
clc
test
inc
mov
jnp
mov
push
popa
fst
xchg
dec
push
lea
sub
das
add
popl
out
dec
pop
sbb
mov
loopne
es
jb
mov
pop
adc
cmp
mov
sub
sbb
popf
mov
jne
js
out
fisubl
out
jmp
cmc
add
ljmp
ret
pop
pop
arpl
cmp
sbb
xor
mov
aaa
lods
cmpsl
das
andb
into
xchg
jbe
jmp
pop
icebp
cmp
dec
inc
out
pop
loop
xchg
or
adc
movsl
dec
hlt
pop
pop
push
cltd
ret
js
xchg
xchg
enter
and
fists
mov
and
in
adc
loopne
sub
mov
out
inc
lret
loopne
xor
aaa
adc
sub
jb
sub
idivb
ljmp
jg
imul
fldt
dec
call
sbb
hlt
or
mov
push
pop
cmp
fcmovb
add
sub
and
scas
out
cmp
flds
add
outsb
into
imul
adc
xchg
push
hlt
xchg
insb
and
je
icebp
cmp
mov
inc
inc
test
pusha
mov
std
inc
cmpb
insb
dec
ljmp
in
pop
nop
jbe
and
push
shll
xlat
push
shrb
add
cmc
imul
mov
push
std
outsb
cld
cmp
scas
dec
push
enter
popf
fnsetpm(287
push
pop
and
sahf
xor
sbb
xchg
inc
or
fwait
push
push
mov
adc
out
adc
scas
aas
inc
cmpsb
ret
ret
adc
ret
pop
repz
subb
pop
sub
aad
imul
pop
push
mov
inc
push
fs
js
dec
in
xor
test
repz
stos
adc
repnz
xor
stos
adc
pop
sti
imull
leave
out
xchg
ja
imulb
imul
or
jle
not
test
pop
xlat
adc
inc
adc
das
iret
and
pop
out
in
lds
add
call
jge
xchg
sbb
outsl
xor
push
and
ret
pop
sbb
into
cmp
and
jmp
or
xchg
pushf
pop
aaa
loopne
jnp
inc
aas
rolb
ret
stos
mov
push
mov
aam
fbstp
mov
mov
lret
jnp
xor
enter
push
outsl
cwtl
ss
cmp
xchg
repz
adc
rol
popa
cmp
mov
movsl
mov
adc
arpl
pop
fwait
xor
push
sahf
lods
in
in
dec
rcpps
adc
call
insl
icebp
scas
nop
sti
lret
sbb
loopne
mov
ss
mov
xlat
mov
jbe
adc
popa
fs
mov
dec
fcompl
xchg
mov
popf
in
imul
adc
imul
test
pusha
jne
jno
push
sub
jmp
pop
and
cmp
pop
inc
arpl
xchg
loop
push
jne
or
stos
pop
push
or
push
inc
cmp
out
xor
mov
cltd
scas
mov
loop
mov
call
addr16
xlat
lcall
inc
xor
adc
jnp
and
xor
js
jecxz,pt
dec
cmp
mov
cltd
mov
inc
jmp
shrb
repz
scas
mov
dec
and
add
push
xor
add
cwtl
sub
loopne
daa
add
ret
out
aaa
hlt
dec
mov
push
sub
icebp
dec
fiadds
int3
cltd
cmc
scas
test
fstps
mov
lidtl
aad
aaa
jmp
xchg
dec
mov
push
jmp
in
inc
mov
add
pop
sahf
add
inc
jmp
push
aaa
sbb
orb
pop
cmp
and
mov
push
xchg
dec
sub
inc
rcrb
mov
or
dec
cmp
xor
outsl
js
ljmp
pusha
pop
fists
jbe
push
or
xor
pop
and
pop
rorl
shrb
clc
data16
sahf
mov
enter
xlat
xor
adc
out
push
jge
negb
xor
fisubl
out
lcall
mov
fidivl
mov
into
cmpsl
push
scas
nop
rol
push
fidivrs
fsubr
hlt
inc
enter
push
insb
imul
arpl
shll
mov
ret
inc
addr16
test
mov
call
mov
jo
out
cmpsb
add
js
inc
imul
mov
pop
xor
mov
orb
push
jo
mov
xor
bound
movsl
and
dec
std
inc
dec
insb
pusha
out
xchg
mov
cmp
inc
out
mov
mov
int
cltd
data16
sub
dec
and
mov
mov
shll
xchg
jl
dec
mov
or
sub
jb
mov
enter
push
inc
mov
jae
pop
scas
sbb
adc
push
clc
sbb
pand
stos
ret
pop
mov
scas
bound
cmp
dec
xchg
mov
mov
mov
inc
scas
cld
mov
dec
negl
adc
out
pushf
js
mov
jge
sbb
sbb
jmp
clc
pusha
js
or
cmpsl
mov
jne
decl
out
pop
inc
mov
sbb
add
test
xchg
jmp
in
adc
popf
loopne
jns
cmp
dec
popf
imul
hlt
dec
and
repz
insb
int3
jge
mov
or
or
in
aam
repz
jo
mov
and
fisubl
ja
out
les
xchg
push
lcall
sahf
dec
shlb
dec
mov
sub
dec
adc
clc
out
mov
and
mov
mov
imul
xchg
dec
and
mov
clc
insl
jne
ror
mov
es
lahf
xlat
lahf
ret
xchg
jnp
sub
adc
lods
push
jno
xchg
inc
movsb
inc
adc
mov
int
jnp
pop
pop
and
xor
dec
xchg
outsb
push
insb
sub
sbb
fnsave
mov
add
repz
pop
dec
iret
xchg
add
mov
ret
pop
push
inc
xchg
mov
popa
jp
ficompl
into
outsl
sub
ret
sub
push
add
pop
mov
jnp
jecxz
or
mov
insl
negl
lcall
jg
dec
lods
and
int
movsl
clc
stos
adc
xor
ss
mov
ds
out
and
pop
mov
test
sbbb
rorl
lock
movsb
sub
icebp
adc
repz
sbb
dec
mov
aas
jmp
movsl
cmp
cmp
mov
and
mov
fs
sub
sub
sarb
adc
add
cmp
xchg
repnz
jb
and
addr16
icebp
mov
mov
add
pop
ficoml
insb
mov
lock
stos
push
fs
push
xlat
xchg
pop
jmp
mov
lock
xor
add
add
xchg
xor
mov
mov
cmp
rcl
add
sbb
mov
sbb
jle
js
jns
sub
push
cmp
push
fisubs
or
dec
jne
fdivrs
mov
mov
mov
dec
inc
lea
xor
inc
es
and
rclb
jb
xchg
mov
jns
or
je
mov
int
es
mov
nop
push
xor
enter
leave
mov
popf
aad
inc
push
sbb
sub
inc
inc
mov
dec
mov
cmp
cmp
sub
enter
mov
lcall
jmp
jmp
loop
xchg
jb
movsl
jns
xchg
imul
scas
xor
pop
jg
jnp
and
pop
mov
push
sub
mov
jp
ds
pop
loope
jno
add
rcr
gs
jmp
mov
pop
jo
mov
or
out
push
mov
add
pop
pusha
movsb
add
or
cmp
mov
in
xchg
xlat
xchg
cmc
sub
sub
stc
push
loopne
pop
xchg
ret
mov
xchg
sub
cmpl
adc
mov
lcall
cltd
or
ds
imul
ret
popa
test
push
add
test
xor
sub
mov
out
call
push
mov
stc
mov
sub
stc
jbe
xchg
xor
and
jmp
lahf
rclb
mov
mov
pop
lahf
push
sbbb
pop
int
mov
pop
popa
lcall
movsb
lock
push
repnz
aad
into
xchg
daa
mul
push
dec
xchg
or
pop
in
mov
fisttps
ljmp
ljmp
sbb
xchg
lret
fwait
shlb
gs
and
aam
jge
movsb
xchg
jecxz
dec
mov
iret
call
sub
pop
test
lcall
inc
sti
stos
mov
jo
daa
jmp
push
jnp
push
vmread
xchg
xchg
fld
jle
cwtl
cmpsb
stos
add
xchg
mov
mov
add
aad
decb
pop
popa
out
adc
pop
enter
adc
sub
cld
movsl
ss
xchg
stos
jne
mov
mov
pop
sub
dec
and
stc
mov
inc
mov
rorb
jecxz
fs
dec
iret
cmp
dec
xchg
and
xor
adc
jns
pop
repnz
sarb
ds
push
sub
cltd
inc
and
rolb
or
popl
xchg
pushf
repz
xchg
lods
inc
adc
mov
call
dec
fsincos
out
or
imul
loopne
js
cmp
adcb
and
jecxz
sub
sbb
fildl
scas
inc
pop
in
inc
je
enter
dec
adc
out
lret
push
or
adc
pusha
xor
jle
repnz
mov
ret
jp
cmp
mov
cli
ret
mov
fidivrl
out
iret
dec
cmpl
mov
ljmp
sub
or
ja
loopne
mov
or
sub
aas
sbb
or
cmp
add
push
popf
push
add
dec
ss
and
leave
inc
push
xchg
sti
dec
xor
ficomps
bsr
cmp
movsb
jo
lods
aad
xchg
test
cli
dec
push
xchg
sub
mov
fcom
imull
jbe
stc
pushf
sub
pop
lahf
stos
push
movsb
xchg
sti
push
outsb
mov
xchg
mov
jg
testb
jno
clc
clc
jle
dec
pop
das
imul
dec
mov
sbb
je
fisubl
frstor
jle
inc
ljmp
push
inc
pusha
pusha
sarl
cli
pop
xchg
repnz
loop
aaa
adc
mov
ds
jg
adc
push
pusha
pop
pop
movaps
hlt
jne
mov
js
adc
pop
lret
adc
dec
shlb
in
insl
mov
mov
cmp
js
mov
sub
mov
in
cwtl
orb
pop
dec
sbb
push
or
mov
scas
in
mov
mov
mov
dec
stos
cs
int
data16
das
mov
aam
xor
pop
addr16
fwait
mov
cmpsl
cmp
out
lock
decb
js
sbb
mov
xor
sbb
repz
push
nop
dec
and
mov
mov
dec
sub
dec
cmpsl
int3
sbb
pop
loop
popa
out
roll
test
out
dec
sub
adc
pop
scas
sahf
jg
inc
xchg
lahf
enter
incl
lods
scas
in
cwtl
in
loop
lea
adc
shrb
repnz
mov
loope
push
fs
sub
jno
ja
cld
adc
cmp
jo
lret
outsb
ja
mov
stc
sbb
dec
add
rcrl
repnz
sahf
pop
lds
sub
push
cmpl
inc
ds
mov
pop
pop
ret
outsb
scas
jmp
and
mov
xor
test
aam
push
ss
inc
arpl
pop
fs
nop
xchg
lret
data16
sub
movsl
cmp
mov
push
loop
ret
fcoms
jge
hlt
das
fstp
stos
mov
xchg
xor
mov
and
jecxz
sbb
jae
pop
ret
ficoml
sbb
sub
decl
lcall
pop
ljmp
faddl
out
cld
mov
push
jmp
shl
push
sub
mov
hlt
xchg
cmc
in
int
jmp
pop
mov
in
repz
cmp
fildl
add
jne
cld
outsb
test
xlat
cmp
std
enter
lahf
mov
sub
arpl
inc
loop
cli
lret
js
jle
sub
mov
and
jno
shll
add
fistpll
fisubl
add
or
into
ss
cbtw
imul
lret
lret
scas
popf
push
dec
adc
gs
mov
insl
cmp
jmp
inc
xor
data16
inc
dec
mov
mov
ret
inc
cmpsb
inc
out
push
sbb
jnp
out
add
jb
pop
loope
sti
subl
aas
xorl
out
pop
and
sti
dec
sahf
leave
paddsw
insb
mov
mov
push
mov
pushf
fsubp
push
ret
aam
pop
xlat
mov
mov
cmpsb
and
sub
mov
xchg
sub
out
adc
lcall
xor
mov
loop
mov
mov
sbb
sub
or
out
les
out
rcr
cmp
test
lock
rorl
jne
jle
xor
dec
jns
ljmp
mov
ss
lock
in
cmp
lock
mov
mov
in
nop
daa
pop
outsl
and
out
icebp
mov
pop
mov
int
sbb
mov
xchg
sarl
sub
sub
aam
xor
cmp
loopne
fwait
testb
imul
sub
movsl
mov
dec
ret
enter
xor
inc
gs
jecxz
test
fisubs
pop
or
leave
pop
clc
movsl
cmc
inc
mov
xchg
cmp
out
mov
lods
mov
jo
inc
popf
fcomps
pushf
ss
cmp
clc
repz
cmp
std
idiv
sbb
in
jns
lret
cmp
push
ss
push
nop
cmpsl
sbb
out
jno
sub
jmp
movsl
and
fst
jl
stos
and
xchg
popa
add
mov
std
push
cld
cmp
sbb
test
or
into
xchg
jp
dec
hlt
mov
loope
in
mulb
jg
xor
mov
push
movsb
aad
mov
fdivrs
test
xor
pop
sbb
shrl
loope
xor
push
call
nop
iret
sar
xchg
repz
push
xor
inc
mov
adc
cld
mov
rcrb
sub
jo
mov
xchg
sahf
out
dec
adc
lea
mov
dec
stos
popa
cmp
loop
out
jp
mov
fisttpl
das
dec
hlt
rorl
jb
xor
pop
shr
popa
push
add
in
add
jecxz
add
mov
aam
push
addr16
mov
lret
leave
pop
das
clc
jecxz
test
inc
or
sub
cmp
add
push
stos
pushw
or
or
enter
xchg
pop
pop
cmp
repz
push
cs
mov
les
out
xor
lea
in
mov
and
push
xchg
cmp
xchg
pop
pop
sbb
pop
minps
addr16
mov
clc
jp
dec
pop
mov
jb
xor
lret
cmpsb
or
mov
pop
les
cmpsl
nop
mov
adc
nop
jp
mov
test
mov
sbb
icebp
enter
dec
jnp
dec
xor
je
mov
pop
fwait
mov
mov
imul
pop
out
scas
inc
pop
push
xor
mov
loop
push
lods
xlat
lcall
sahf
ss
ljmp
icebp
jbe
mov
cltd
cmc
xor
ljmp
sahf
sbb
test
mov
mov
inc
add
mov
rcrl
in
or
mov
inc
stc
data16
je
sbb
jbe
pop
xor
mov
mov
lea
dec
or
loop
jmp
cwtl
insl
clc
test
mov
ret
add
lret
inc
adc
push
mov
enter
adc
cli
decl
dec
test
adc
inc
mov
xor
adc
jae
xor
rcrb
sbb
jo
int3
insb
push
xchg
lahf
mov
push
mov
out
adc
ret
aam
inc
stos
mov
aaa
add
sub
fwait
nop
or
ss
cld
pop
pop
cmp
and
dec
jno
add
sar
mov
mov
mov
mov
sar
es
sub
repz
xor
adc
call
push
inc
jae
adc
pop
sub
jno
enter
cli
mov
stos
pop
rorb
mov
mov
dec
daa
cmpsb
adc
pushf
pop
mov
sbbl
push
push
mov
lods
cwtl
jns
imul
mov
xchg
arpl
cmp
and
and
ret
movsb
pop
lods
imul
in
in
cmp
pushf
sti
int
lock
push
inc
lret
inc
sbb
test
test
push
testl
outsl
jp
jae
mov
jge
xchg
push
sti
pop
mov
pop
ret
cmp
sti
in
adc
loopne
cwtl
push
adc
mov
push
sbb
test
push
push
jg
daa
out
mov
iret
repz
xor
lods
in
mov
fadds
ja
mov
outsb
outsb
addr16
sahf
jmp
pop
mov
or
jbe
and
mov
call
or
ret
ss
pop
cmp
pop
jne,pn
sub
int
fisubrl
movlhps
addr16
adc
into
dec
sahf
xchg
repz
shlb
fs
int3
mov
icebp
add
fistps
push
cld
popf
or
inc
push
mov
xlat
jl
cmp
mov
pushf
out
dec
pop
inc
mov
cltd
xchg
fildll
imulb
push
lods
fnstcw
notb
and
mov
mov
sub
jg
inc
mov
loope
outsl
lock
popf
shrl
clc
frstors
or
bound
stc
cmp
or
cmp
gs
rolb
stc
add
cld
repz
call
sbb
scas
mov
sti
in
test
clc
pusha
mov
cmp
push
repz
mov
pop
xor
jbe
adc
lods
mov
fmull
das
clc
inc
bound
adc
cmp
jl
mov
or
ja
scas
cmpsb
and
push
call
stos
and
aad
in
xchg
adc
mov
mov
pop
lahf
push
inc
mov
adc
repz
cld
jge
inc
add
andl
mov
aam
es
sbb
xchg
ret
movsl
mov
ja
insl
xchg
pop
into
or
je
push
outsl
filds
fsubrs
sbb
hlt
pop
push
repz
out
mov
jo
dec
sub
lahf
cs
gs
jmp
js
out
aaa
lahf
mov
les
cs
notb
mov
sub
ljmp
xor
mov
or
repz
loop
pop
jle
cld
xlat
cmp
hlt
dec
and
dec
mov
test
or
inc
sub
mov
in
lcall
sub
addr16
cmp
subb
idiv
add
xor
xor
xor
pop
mov
stos
cs
mov
dec
xor
test
int
repnz
scas
dec
cmp
cmp
test
cld
push
jecxz
mov
js
imul
and
mov
add
fldl
and
add
cmc
cmp
ja
cmpl
loopne
or
lret
das
xchg
and
mov
scas
ss
xlat
out
outsb
test
aam
js
inc
and
push
decb
les
cmpsb
push
mov
mov
ficomps
mov
mov
fwait
stos
mov
lea
adc
addr16
mov
mov
lret
push
sbb
inc
or
push
lcall
scas
mov
mov
aad
insl
push
mov
in
lcall
jge
add
push
pop
xchg
mov
sbb
and
fsub
cmpsl
loop
pinsrw
mov
adc
lret
fiadds
fcompl
pop
outsl
test
shl
jne
pop
mov
dec
bound
xchg
lods
pop
mov
mov
cmc
push
mov
stc
inc
in
cli
xor
lds
adc
stos
ror
push
ja
pop
cs
jp
test
lret
mov
lea
fs
sti
cltd
xchg
mov
xchg
sbb
popa
sbb
aam
lods
and
push
mov
add
neg
lret
adc
adc
jmp
in
call
sub
outsl
jle
xchg
xchg
mov
movsl
cmp
and
dec
mov
cmc
out
pop
dec
mov
add
push
les
xor
and
je
stos
and
adc
scas
lcall
xor
nop
push
cmpsl
loope
pop
out
js
xor
xchg
push
test
cmp
xchg
arpl
sub
scas
xchg
icebp
out
sub
push
pop
int
inc
ljmp
out
adc
sbb
mov
cmc
adc
pusha
sbb
inc
pop
jno
jecxz
push
pop
repz
arpl
jmp
bnd
sarl
push
xchg
xchg
or
mov
rolb
lods
popf
or
dec
add
int
les
adc
dec
loop
dec
js
mov
adc
push
mov
insl
dec
into
in
addb
jae
pop
dec
inc
bnd
pop
adc
shrl
xlat
mul
pop
outsb
inc
mov
push
lcall
jl
popa
mov
lds
pop
jae
mov
xor
popf
sahf
cmp
jmp
lret
inc
push
xchg
aaa
mov
xchg
cmp
repnz
pop
push
mov
dec
cs
inc
test
cmp
xchg
cwtl
cmp
mov
xlat
mov
sbb
and
jge
dec
cmp
push
cmc
lods
adc
fsubs
mov
fstpl
mov
cld
roll
repz
mov
mov
ret
popf
aaa
ds
dec
sarl
mov
sub
push
pop
subl
mov
aad
test
mov
lds
test
xor
push
das
ret
push
nop
notb
and
cli
cpuid
in
imul
arpl
pop
mov
std
pop
cmp
push
imul
idiv
int3
xchg
in
insl
sarb
push
dec
cmp
adc
repz
mov
mov
or
or
cmp
sub
icebp
add
stos
fidivl
movsb
pop
iret
jo
in
xchg
or
into
fs
xor
test
movsb
sbb
jmp
dec
xchg
sub
xor
out
dec
stc
shlb
pop
dec
mov
out
repnz
ret
das
lea
xchg
loop
jge
in
cmp
cmc
out
dec
push
mov
enter
xor
mov
add
xor
cmc
mov
lret
fsts
gs
ja
je
xchg
and
jge
add
lods
mov
mov
aam
or
pop
mov
mov
inc
gs
xchg
mov
mov
push
leave
mov
xchg
aaa
cmp
push
icebp
xchg
push
mov
push
jp
sub
scas
mov
out
repnz
mov
cmpsb
jg
adc
dec
inc
xchg
xor
add
jae
daa
add
push
or
data16
sub
sub
lods
sbb
fists
scas
call
mov
dec
lret
xchg
sub
xor
lcall
cmc
cwtl
cmpsb
push
inc
fidivrs
enter
inc
cld
push
inc
mov
ror
out
xor
xchg
pop
ljmp
xchg
mov
xor
lods
xor
andl
sub
xor
aaa
push
mov
mov
adc
imul
ljmp
lds
cld
adc
pop
bound
cmpsb
push
cmp
bound
insb
lea
das
pop
mov
cmp
or
loop
sub
xorl
jge
and
jge
clc
xchg
push
xor
add
nop
out
rcll
js
cmp
rcll
aas
test
pop
and
or
repnz
mov
shlb
mov
aaa
cli
cmpsl
mov
outsl
mov
xchg
and
arpl
and
jl
shll
mov
subl
and
mov
cld
jmp
mov
mov
mov
or
rclb
jle
sbb
pop
fcoms
in
aam
add
add
arpl
xchg
push
sbb
pusha
test
sti
push
cmp
bound
insb
mov
outsl
push
pop
and
popf
fildl
popf
sahf
data16
dec
popf
cmp
mov
push
and
aam
add
lods
mov
in
repz
xlat
mov
bound
push
and
fs
idiv
pop
jecxz
insl
movsl
sbb
xchg
daa
mov
dec
pop
mov
xor
fsubl
loope
insb
mov
pop
or
pop
add
mov
adc
test
mov
aas
lods
aaa
test
fiadds
adcb
or
dec
pop
sar
dec
mov
rol
dec
jp
xchg
lods
dec
std
ret
or
add
add
pusha
lcall
dec
imul
stos
ffreep
movsb
daa
clc
aad
mov
sbb
jbe
jbe
mov
rorl
imul
dec
mov
adc
rol
repnz
test
mov
mov
orb
dec
iret
int3
cmp
movsl
dec
mov
dec
loop
out
cmp
mov
mov
lret
cmp
xor
xchg
sbb
addr16
fcmovne
aad
loop
scas
adc
xor
mov
mov
adc
xchg
pusha
and
das
jbe
or
jle
mov
jb
fwait
shll
push
dec
addr16
jb
xchg
addr16
jbe
dec
cwtl
test
add
lret
or
xchg
lods
popa
push
int
cmp
pop
mov
mov
cwtl
loopne
inc
loope
out
lret
pop
add
sub
xor
adc
sbb
int3
cmp
fisubrl
xor
cmp
pop
cli
lods
loopne
lret
mov
or
cld
mov
movsb
stc
pop
push
dec
ret
jns
pop
icebp
es
push
pop
mov
fldenv
or
aad
insl
adc
shrb
fwait
xchg
or
mov
fimuls
adc
cmp
xor
mov
repz
loop
pop
lret
cltd
in
ret
ja
inc
xor
cmp
inc
or
mov
xchg
jle
fnstsw
scas
shl
test
cmp
jnp
mov
pop
js
movsl
test
adc
lods
loopne
xorb
jns
mov
and
movsl
jae
cld
popf
shl
dec
jb
jns
adc
pop
fwait
daa
jnp
and
xor
loope
out
mov
pop
test
pop
ffree
jo
pop
mov
inc
in
popf
sarb
mov
lcall
add
clc
cmp
xchg
divb
call
pop
inc
sub
movsl
fstpt
mov
add
jns
lahf
fistpl
hlt
add
mov
std
aad
and
into
sarl
push
jo
out
xchg
scas
outsl
xchg
jb
cmp
xor
stos
nop
push
push
test
sub
jnp
fistpl
push
scas
mov
bound
fs
fmul
aad
mov
adc
or
subl
and
fisubrl
inc
push
clc
out
out
adc
lret
or
bnd
sub
mov
fldl2t
outsl
out
ficoml
aaa
in
mov
mov
inc
xor
fisubs
pop
adc
insb
sbb
repnz
lock
jg
sbb
in
xchg
mov
aad
stos
call
xchg
scas
js
cmp
out
jecxz
out
push
push
mov
pop
js
int3
push
bswap
outsb
pop
push
dec
wrmsr
ss
dec
in
xchg
inc
in
lods
lret
js
sbb
test
push
lods
mov
mov
xor
xor
inc
shlb
jmp
ret
lods
dec
mov
inc
mov
fbld
dec
mov
out
rcrb
mov
lds
xchg
je
inc
pop
repnz
mov
dec
movsb
dec
enter
jl
add
mov
pop
cltd
add
aas
in
sahf
repz
insl
and
pop
fucomip
stc
mov
pop
fdivl
cmpsb
divl
push
shrl
das
cmp
mov
pop
aaa
push
push
jnp
aaa
shr
sbb
push
gs
rcrb
sbb
push
stos
jnp
or
push
call
test
lret
mov
push
roll
fmuls
decl
add
fs
adc
sti
inc
sub
jns
daa
bound
mov
xor
and
pop
dec
cwtl
push
bound
mov
mov
popf
inc
ljmp
or
mov
add
pushf
ret
xor
test
add
pusha
ret
fstp
lds
mov
cwtl
cmp
popa
mov
test
inc
hlt
ret
cmpsl
cmp
mov
repnz
jns
ds
mov
and
mov
mov
jle
xchg
ja
insl
and
jno
xchg
sbb
iret
jecxz
fwait
xchg
mov
dec
loopne
sbb
dec
sti
ljmp
popf
jge
adc
or
data16
pop
jnp
mov
or
jl
out
aas
stos
leave
mov
jo
mov
mov
fs
out
fcoms
xor
das
in
pop
xchg
aas
xchg
xlat
add
cmp
jp
push
xor
mov
pop
cmp
sub
dec
pop
mov
int
pop
add
xor
dec
rorb
jbe
int3
add
adc
mov
adc
xor
xchg
mov
repnz
add
dec
lret
scas
imul
in
icebp
mov
sub
nop
insb
rclb
out
fs
jg
inc
add
call
pop
in
negl
push
ja
inc
outsb
add
pop
cmp
mov
lods
mov
out
out
push
xor
nop
dec
call
bound
aam
lods
mov
inc
mov
push
push
mov
add
sbb
jl
xor
lock
xor
add
sbb
aas
fwait
xchg
iret
push
and
jp
jae
pop
xchg
outsb
inc
jge
add
sti
dec
aas
inc
xchg
sbb
jp
test
mov
fisttpl
sbb
rolb
pop
add
jge
rcll
popf
fisubrl
mov
cmpsl
push
mov
push
sahf
sbb
cmp
outsb
jl
outsb
in
dec
aad
jmp
lods
test
mov
ljmp
sbb
jns
mov
sub
mov
popa
ljmp
popf
xlat
int3
imul
pusha
mov
shrb
lea
sub
imul
bound
cmp
dec
or
add
mov
cmp
xor
aas
stos
fnsave
rcrl
sub
repz
push
loopne
lds
lods
xorb
adc
imul
adc
pop
sub
mov
mov
adc
and
imulb
out
mov
arpl
nop
push
mov
push
std
mov
adc
xchg
jno
sub
adc
stc
adc
and
ffreep
push
xchg
ss
sahf
push
and
sti
adc
std
scas
int
incl
aam
aas
or
or
in
cmp
dec
sbb
add
lods
rclb
daa
xor
push
push
cmc
xchg
mov
cld
js
movsl
int3
jmp
sbb
inc
rcrb
sub
cmp
jl
add
mov
shll
mov
lret
adc
test
add
enter
dec
out
int3
mov
lret
sbb
scas
cmpsb
xchg
icebp
jle
jp
jecxz
add
shlb
inc
jb
fiaddl
ljmp
and
out
lret
xlat
mov
ljmp
cmc
insb
dec
in
dec
neg
inc
jb
mov
xchg
jle
rclb
shll
scas
aaa
mov
out
lods
insb
lret
sub
int
cmpsb
out
jge
jp
arpl
leave
out
ror
imul
push
aad
xor
stc
out
jg
scas
xchg
xor
out
lret
leave
loope
sbb
int3
in
daa
adcb
orb
scas
notb
out
loope
mov
repnz
inc
dec
and
cmp
out
lds
push
cli
arpl
in
cld
stos
mov
icebp
or
clc
call
mov
and
mov
jl
push
mov
pop
iret
incb
push
sbb
or
xor
adc
mov
xor
jb
push
andb
and
imul
sub
and
inc
loope
jle
jns
in
ds
scas
xor
call
push
lret
shrb
jge
pop
mov
mov
xchg
and
pop
dec
daa
orl
emms
push
movsl
sahf
sbb
stos
mov
sbb
sbb
stc
push
or
and
sbb
jne
in
sbb
push
fdivrs
xchg
jg
xchg
stc
in
loope
adc
aad
sti
adc
or
dec
mov
jle
jp
pop
mov
push
aam
cld
int
stos
or
add
cmc
adc
jno
imull
add
les
mull
lock
xchg
mov
and
or
fwait
mov
vminsd
bnd
lods
sub
cwtl
cld
loope
jbe
inc
adcb
lcall
push
jns
sub
ficoms
push
inc
int3
sbb
shll
xchg
pop
mov
push
mov
mov
dec
pop
sub
xlat
mov
fcom
iret
into
xchg
mov
sbb
ds
andps
inc
loopne
in
andl
xchg
or
mov
scas
dec
pop
push
mov
mov
cmp
lcall
xrelease
es
shlb
movsb
cmp
pop
enter
fnstcw
jle
insl
imul
pop
mov
cmp
xchg
hlt
gs
add
and
xor
jecxz
push
adc
popa
xor
fistpll
xchg
int3
or
mov
fs
loope
repnz
sub
mov
outsb
mov
addr16
cmp
call
in
mov
mov
scas
mov
ja
xchg
adc
inc
sbbb
cmp
sbb
pop
in
and
outsl
cmpsl
inc
sbb
jp
xchg
out
jge
xlat
sub
daa
cmpl
lods
xchg
pop
inc
mov
cmp
push
lret
jmp
pop
add
sahf
fs
mov
xlat
shrl
lds
in
aaa
mulb
xor
test
movsb
out
cwtl
jmp
jmp
lods
sub
mov
sbb
inc
xchg
mov
and
sbb
jmp
shlb
hlt
daa
mov
pop
leave
mov
cmpsb
loop
mov
popa
mov
pop
js
cwtl
loopne
je
cli
jnp
push
xor
or
jl
bound
add
das
dec
lcall
adc
pop
testl
push
and
and
jmp
dec
push
mov
outsb
pop
sub
jg
and
xchg
andb
mov
shl
jnp
adc
insb
jmp
cli
subb
dec
jge
in
fs
sahf
pusha
outsb
push
add
xor
push
adc
jl
inc
fmul
clc
adc
lahf
mov
pop
jae
movsl
xlat
dec
cmc
popf
fmuls
lods
xchg
jnp
loope
xchg
jp
push
mov
mov
lods
cmp
jae
xchg
iret
out
call
lar
mov
adc
js
in
mov
push
sbb
popf
xlat
adc
iret
sbb
iret
sti
pop
xorb
sar
orl
nop
int3
xchg
in
pop
mov
dec
xor
push
mov
mov
ja
lret
mov
js
mov
mov
out
jae
push
mov
and
xor
mov
jmp
adc
push
lret
cwtl
repnz
and
mov
popf
loope
aad
inc
mov
loope
mov
lahf
cmp
push
sbb
ret
pop
ret
adc
mulb
xor
mov
sti
jb
sbb
add
je
movsl
cmc
call
shlb
mov
sahf
sub
dec
mov
push
ud1
inc
sub
je
xor
test
and
and
jmp
scas
das
jecxz
add
cmc
mov
xchg
mov
int
inc
add
sub
jno
and
rcr
xchg
mov
roll
adc
std
sub
movups
sub
incl
int
cmp
out
into
lock
leave
test
cmp
mov
jl
adc
or
popa
and
fiadds
add
push
movhps
fsts
leave
rcrl
scas
fwait
mov
ds
cld
dec
ljmp
lods
adc
adc
lock
push
and
jae
aaa
push
jmp
pop
push
leave
mov
ret
and
repnz
ret
cmp
shrb
aam
and
adc
pop
cmp
mov
mov
scas
leave
sbb
or
and
xor
pop
movsb
cmp
xchg
in
popa
into
mov
sbb
std
out
test
daa
xchg
or
ds
out
fisttpl
std
pop
stc
aas
cmp
daa
mov
out
lret
outsb
mov
lret
ret
in
jmp
sub
das
sbb
cmp
out
cltd
dec
xor
mov
rcrl
add
insb
mov
mov
aas
jecxz
dec
iret
shl
imul
arpl
outsb
lock
cwtl
dec
fiadds
dec
test
jno
test
mov
inc
add
clc
stos
pop
mov
ficompl
repz
fnstcw
sub
adc
inc
mov
sub
mov
rcll
cmpsb
test
outsl
cmp
xor
mov
jbe
out
sbb
and
cmc
es
sbb
push
adc
cwtl
sub
aad
in
ja
fdivl
push
notb
incl
pop
dec
pusha
repnz
cmpsl
shl
add
jle
cmp
adc
lods
mov
push
fmulp
or
pushw
in
dec
test
inc
aas
adc
fildl
xchg
cs
sub
inc
xor
out
imul
dec
movsl
push
xchg
jne,pt
cmp
xlat
jae
add
insb
push
sar
daa
cmp
pusha
repz
popf
ss
cmpsl
fnsave
loopne
rorl
mov
iret
js
xchg
push
xchg
jmp
dec
mov
pop
mov
jb
ja
outsb
or
xchg
xchg
jle
pop
cmpsb
xlat
push
push
lods
mov
adc
shlb
mov
xchg
sub
fisubrs
xor
daa
mov
push
stc
mov
loopne
jae
mov
movsl
lret
sahf
fstps
pop
andb
jo
mov
jnp
movsl
repz
adc
push
mov
mov
xor
mov
pop
push
data16
std
mov
xlat
fisttpll
shl
cmp
enter
imul
cmovne
pop
les
push
ret
add
mov
xchg
adc
sbb
dec
lock
cmp
jnp
lods
out
out
mov
ja
outsl
mov
int
pop
testb
sub
add
sar
mov
inc
mov
stos
push
pop
incb
add
pop
jg
cltd
lods
dec
jno
rcll
xor
adc
add
and
iret
mov
int
and
data16
sbb
clc
mov
jo
ja
inc
push
mov
xchg
mov
lret
je
das
rclb
std
das
dec
inc
repz
jbe
aas
dec
or
pop
ret
inc
fcomip
xchg
cli
cltd
xor
mov
or
push
cltd
push
mov
or
fmuls
cmp
sbb
cli
mov
popaw
xchg
bound
enter
aaa
mov
xchg
adc
into
lret
ret
pop
cli
fdiv
jb
xchg
pop
jle
outsl
sub
cmpb
inc
stos
or
mov
jne
xor
jns
adc
cwtl
imul
jne
xorb
inc
pop
sub
outsl
test
adc
xor
dec
call
push
jle
insb
leave
mov
mov
pop
fildl
int
mov
mov
scas
daa
pop
shll
push
xchg
popf
pop
inc
rclb
inc
adc
add
rorb
js
or
pop
out
jb
xchg
pushf
test
or
cmpsb
xor
aad
inc
cmc
cld
push
cli
sbb
leave
mov
inc
aaa
sti
mov
jmp
dec
ret
clc
sub
clc
and
flds
cs
push
cwtl
psrlq
xor
xchg
dec
mov
adc
insb
fcomps
ret
js
aas
ljmp
lret
sbb
mov
xor
xor
dec
mov
add
scas
testb
xchg
lods
aad
mov
push
aaa
sarb
lret
mov
popa
ljmp
push
and
test
mov
push
loop
jns
add
into
notb
lret
mov
jbe
stc
std
fld
adc
mov
xchg
mov
push
mov
push
sbb
pop
cmp
push
aam
mov
jge
sbb
clc
repz
fisubs
in
mov
sbb
lcall
pop
dec
movsl
iret
xchg
mov
movsl
and
idivb
hlt
mov
testb
stos
and
add
push
push
mov
add
hlt
fidivrl
inc
or
jae
jae
cmc
into
jl
arpl
dec
mov
fwait
test
inc
jl
popf
shll
mov
pop
add
arpl
cmp
mov
pop
inc
push
dec
dec
mov
sbb
insl
mov
mov
test
xchg
mov
mov
in
inc
cmc
xchg
jbe
lods
das
in
jno
aad
or
add
iret
jnp
mov
mov
jle
lock
and
add
mov
call
negl
arpl
mov
fwait
jg
adc
lcall
and
dec
test
enter
movsb
adc
rcrb
stos
pushf
adc
call
jb
aam
fidivs
cmp
movsl
xchg
aam
lret
jnp
mov
push
dec
inc
cmp
scas
fnstsw
pop
ljmp
xor
lret
pop
xchg
or
inc
sbb
sbb
push
fistpll
in
sbb
sar
sub
icebp
jno
xchg
daa
into
xor
jae
add
stc
xor
ja
pop
add
lahf
add
ja
ret
fwait
xor
xchg
shrb
lea
stos
lds
mov
push
test
rorb
lds
out
lods
ficompl
and
icebp
cld
popf
outsl
add
fimuls
fdivrs
sub
dec
jmp
mov
cmp
and
pop
sub
xor
repnz
mov
inc
and
fstl
out
imul
add
xorb
fldenv
imul
adc
sub
mov
dec
scas
xlat
pop
test
mov
out
mov
adc
fs
xor
leave
mov
data16
fwait
addr16
mov
mov
mov
inc
cwtl
ljmp
ds
sbb
std
xchg
push
mov
adc
mov
pop
push
hlt
mov
popf
fidivs
mov
dec
xor
inc
sbb
dec
xor
int
stc
loop
mov
fistl
es
in
pop
adc
mov
cmpsl
fwait
out
mov
cmp
push
rolb
mov
xor
arpl
jecxz
test
fnsave
and
xchg
or
xlat
cmp
in
push
or
ja
js
cli
push
stos
notl
adc
shrb
mov
icebp
gs
idivb
jnp
shlb
mov
sub
sti
pusha
mov
xor
fwait
push
mov
jno
bound
pushf
cwtl
or
test
jmp
or
scas
hlt
into
loop
push
mov
out
addr16
inc
iret
addr16
shlb
cmpsb
inc
jge
mov
mov
mov
call
xor
fsubl
push
clc
das
dec
les
lds
call
cmpb
mov
test
push
fcomip
loop
sbb
mov
lcallw
push
jnp
or
std
cmp
test
xchg
and
push
lahf
cld
adc
inc
lock
test
cltd
jbe
in
ret
dec
loope
test
shll
jl
cld
or
mov
inc
in
lret
repnz
mov
sti
stos
jns
leave
dec
scas
popa
sub
stos
xor
fnsave
xchg
push
popa
addl
xor
arpl
xor
mov
sbbl
push
push
or
or
or
ss
pop
out
popf
std
subl
jbe
mov
mov
sahf
clc
mov
loope
gs
jmp
sbb
ds
stos
push
sub
xor
imul
add
xor
outsl
call
cmp
clc
hlt
pop
adc
jecxz
add
cld
pop
add
xchg
mov
lock
sbb
mov
adc
sahf
dec
xor
and
ds
imul
ljmp
pop
out
jno
add
dec
or
out
int
push
xchg
scas
jo
dec
fisubl
andl
xor
pop
lock
adc
into
pop
or
add
sbb
in
hlt
jae
mov
movsb
pop
push
xchg
jne
pop
data16
fistpl
mov
out
mov
negb
inc
dec
push
lods
sub
cli
pushf
fwait
hlt
lea
xchg
aam
inc
xchg
pop
fwait
aas
rolb
pushf
fsubrp
aam
adc
inc
in
lret
fsts
lret
lcall
loop
cmp
icebp
mov
inc
or
mov
sub
test
das
push
mov
testb
std
mov
in
jnp
xor
scas
pop
stos
dec
or
imul
pop
dec
shl
icebp
mov
jbe
adc
stos
pop
test
xor
push
cli
inc
xchg
dec
imul
mov
push
and
sub
out
inc
popa
inc
add
fdivl
gs
pop
lea
push
scas
les
call
mov
xchg
mov
daa
ljmp
fstpl
shll
stc
aas
fimull
sub
jne
push
orps
call
repz
adc
xor
mov
and
mov
or
sarb
imul
pop
cmp
fcomip
mov
xor
orl
xor
xchg
push
cltd
cmp
jae
repz
int
mov
push
je
jp
or
inc
out
ficompl
fidivrs
sbb
lcall
push
ljmp
push
mov
loopne
cmc
sbbl
and
cs
sub
lea
jg
xchg
mov
xorl
in
outsl
adc
aas
jo
leave
andb
das
fisubrl
repnz
dec
jbe
fstps
lods
icebp
and
stos
daa
and
pop
mov
shrl
das
repnz
add
out
jle
enter
push
ljmp
sarb
and
fisubrl
out
fisttpl
inc
outsb
lahf
cltd
addr16
cmp
iret
test
sbb
lret
shl
inc
ljmp
xchg
lahf
xchg
aam
cwtl
int3
jae
adc
or
enter
enter
loope
ret
inc
push
insb
adc
ret
loop
gs
xor
pop
xchg
test
pop
lret
lds
inc
roll
fs
mov
aad
inc
sub
cltd
cmp
lock
push
pop
pushl
sahf
in
movl
repnz
jno
movsl
mov
pushf
pop
js
sub
mov
xlat
fdivr
int
fimull
mov
leave
imul
movsl
fwait
xchg
lods
inc
adc
pop
dec
add
jne
sti
push
out
push
imul
pushf
lahf
popa
xor
cs
ljmp
mov
loope
push
ret
andb
push
shll
in
cmp
push
icebp
je
aas
stc
push
repz
fdivrs
mov
call
jge
inc
out
out
faddp
pop
bound
jae
jl
lret
cmp
and
mov
test
aaa
les
pop
sti
sub
loope
adcb
or
pushf
sub
popf
xchg
or
cltd
or
mov
push
jbe
arpl
stos
clc
sub
call
ja
cmp
js
lea
jle
mov
xchg
pop
sbb
dec
test
sbb
cmp
aam
insb
insb
lds
mov
cli
push
mov
scas
imul
xor
stos
in
jb
jl
and
xor
nop
dec
rorl
ret
rcrl
mov
outsl
cltd
insb
test
outsl
cld
mov
mov
push
inc
pop
jecxz
insb
adc
aad
pop
lahf
jb
dec
lods
push
movsl
mov
stos
test
fbstp
push
dec
sbbl
outsl
or
inc
inc
adc
out
jnp
cmp
xchg
or
call
cmpsl
xor
repnz
pop
or
sub
sti
xchg
sub
mov
ficoms
push
push
pop
shl
inc
int
sti
mov
icebp
insl
lahf
test
xchg
dec
int3
lcall
xchg
mov
xor
add
fstl
pop
shlb
jo
ret
arpl
outsb
into
loopne
arpl
mov
enter
cwtl
clc
pushf
sbb
sub
push
xchg
pop
push
sbb
pop
mov
call
out
mov
loopne
mov
bound
inc
add
lock
inc
insl
sub
cmp
inc
add
mov
insb
arpl
and
jne
outsb
sbb
mov
add
lret
in
cmp
or
mov
jo
inc
in
cmp
rorl
dec
mov
jecxz
cld
int3
xchg
inc
mov
jo
pop
call
xor
mov
mov
scas
ret
arpl
leave
jp
adc
add
pop
imul
mov
push
pop
pop
xchg
in
pop
pop
out
lods
cli
pushf
inc
aam
mov
ret
into
fsubl
mov
add
hlt
and
pop
dec
outsl
mov
mov
imul
outsl
insb
popf
dec
push
mov
adc
sbb
lds
jl
out
mov
inc
cmp
or
push
data16
dec
lret
ret
xchg
inc
shrb
je
in
mov
fsubrp
inc
icebp
fsts
mov
shll
out
enter
mov
test
mov
adc
xchg
mov
pop
movups
mov
push
repz
loopne
pushf
mov
cmpsl
and
mov
push
adc
aas
mov
imulb
hlt
in
sar
mov
xor
loop
fcmovnbe
inc
jle
es
inc
jp
push
lret
insl
in
mov
mov
pop
inc
leave
jae
mov
jno
es
movsl
add
add
mov
enter
adc
adc
ret
or
or
dec
or
jge
repz
jp
push
cld
outsl
lea
inc
ljmp
addr16
pop
aam
insb
enter
cmp
mov
test
sub
xchg
inc
dec
mov
xchg
cmpsb
int
inc
mov
aas
jecxz
cwtl
rcll
push
or
loope
lcall
cmc
icebp
pop
and
push
add
fs
dec
jle
in
ja
popf
int
push
sti
ret
lods
inc
roll
jecxz
fs
dec
rorb
ret
jnp
xor
pop
stc
cmp
sahf
sti
aaa
mov
mov
out
mov
std
mov
inc
push
mov
call
jb
sub
in
adcl
fisttpll
cwtl
pop
ljmp
rol
dec
push
jmp
jg
outsl
popa
inc
inc
pop
xchg
inc
ret
stos
pop
xchg
sub
and
fiadds
je
xor
out
out
sub
enter
into
mov
dec
andb
je
cmp
pop
movsb
add
insl
into
mov
movsb
inc
insb
push
shrl
cwtl
sbb
or
enter
loope
fldt
push
inc
push
imul
outsb
pushf
in
into
sub
jbe
xor
ficomps
in
mov
jg
mov
icebp
mov
sub
test
mov
movb
mov
rclb
add
rcr
sbb
lock
in
pop
inc
mov
pop
dec
jo
inc
dec
cwtl
xor
mov
push
insl
sub
jbe
out
jmp
idivl
std
ja
push
xchg
dec
loopne
cmp
push
pop
iret
sahf
lea
xchg
cmp
cmp
mov
insb
or
mov
setge
dec
mov
push
fldcw
stos
movsb
push
mov
xor
inc
movsl
cwtl
mov
jnp
add
sub
popa
mov
inc
push
or
into
xchg
fnsave
jns
xchg
mov
pop
leave
or
les
loope
or
leave
test
push
pop
cmp
and
aam
loope
inc
loop
add
xchg
imul
sbb
sbb
notl
inc
push
pushf
lods
shlb
sbb
sub
aam
js
mov
pop
repnz
cmp
lds
outsb
and
rolb
sbbl
mov
divl
lea
scas
lods
arpl
daa
ret
dec
xchg
xor
cmp
cmp
fsubs
arpl
stos
enter
mov
inc
testb
imull
call
jnp
inc
ljmp
out
es
xor
pop
rorl
cmp
je
les
mov
pop
or
es
shll
out
ret
xlat
sub
push
ret
cmp
icebp
lods
aaa
jns
call
push
mov
pushf
sbb
popa
pop
sbb
pop
shll
scas
add
add
xchg
aas
lret
movsl
jbe
sbb
loop
sub
loope
xchg
out
data16
insb
lock
cmp
call
ret
sub
mov
lock
jge
inc
aas
adc
mov
push
sub
inc
fcmovnu
mov
mov
pop
sbb
mov
mov
xchg
pop
bnd
pop
lods
jg
mov
sarb
test
pop
mov
test
enter
mov
xor
adc
enter
es
push
pop
test
mov
fnstsw
cmp
outsb
fnstsw
cltd
push
mov
shl
aad
xchg
adcb
insl
rclb
int3
fidivrl
mov
data16
fistps
aam
call
push
xchg
nop
mov
dec
call
jmp
int
stos
ss
mov
add
push
xchg
mov
xor
pop
mov
sti
mov
fdivr
mov
cli
les
call
movb
aam
mov
or
lcall
push
sti
lods
cmc
or
jle
fdivl
cmpsb
xlat
push
inc
pop
sub
out
lcall
adc
sub
out
fnstcw
orb
mov
jecxz
imull
jge
lcall
ljmp
lods
xor
push
push
lcall
shr
aad
js
shrb
jb
stos
lret
pushf
cwtl
cmp
bound
and
and
divl
or
dec
out
es
sbb
pop
repnz
punpckhdq
dec
dec
pop
sbb
les
stos
dec
inc
lock
mov
test
push
add
and
cmp
je
cmp
sub
dec
xor
dec
jb
inc
jl
sub
movsb
repz
imul
sbb
xor
aaa
cli
inc
jb
xchg
lock
negb
mov
sub
scas
popf
sbb
orb
js
push
mov
nop
andb
mov
sbb
test
dec
or
movsl
or
loopne
xchg
int
inc
adc
push
jl
sbb
hlt
jmp
xlat
xor
test
cmp
xor
or
add
ret
leave
xchg
les
sbb
aad
out
cmpsl
mov
fisttpl
jbe
out
stos
inc
out
adc
mov
mov
xchg
cmp
inc
jl,pn
push
mov
dec
cmp
pop
and
xchg
pop
ficompl
mov
mov
lret
jecxz
mov
rorb
je
data16
andb
out
adc
lea
mov
mov
xor
mov
out
dec
fst
roll
shll
push
lds
cld
sub
insb
mov
shlb
lahf
dec
fcmovbe
mov
jmp
pop
stc
fisubs
push
jbe
jo
jmp
mov
push
dec
mov
xor
xorb
jle
mov
adc
lret
je
imul
arpl
in
sbb
sub
hlt
stc
imul
xchg
test
ss
nop
mov
mov
fsubs
jae
scas
dec
rclb
gs
mov
xor
lock
into
sub
lahf
test
icebp
jecxz
push
mov
and
xorb
inc
imul
xchg
or
sub
test
push
push
pop
pop
xlat
cld
fs
mov
aad
xor
jb
call
mov
sbb
jne
popf
adc
push
lock
fimuls
fiaddl
pop
add
dec
js
mov
sarl
dec
pusha
mov
ljmp
xor
enter
sub
push
adc
ss
jae
adc
outsb
ljmp
bound
push
aaa
int3
pop
jmp
pop
inc
mov
sbb
xchg
test
xor
nop
lea
add
aad
push
push
jnp
fiadds
jae
pop
insb
jne
push
clc
mov
lods
dec
cmp
popf
xchg
or
xor
cmp
insl
sub
mov
mov
pushf
shrl
xchg
add
out
lods
add
out
popf
icebp
or
jne
lea
dec
mov
ja
jno
mov
aam
rorl
mov
mov
jmp
rcrl
xchg
ljmp
ja
cmp
out
std
ffreep
dec
outsb
mov
shl
fcomps
mov
pop
sub
lock
fs
cmp
dec
cs
dec
mov
repz
outsb
push
adc
hlt
cmp
stos
fs
mov
inc
popl
sbb
push
jge
xchg
inc
outsl
cmpsb
sbb
jnp
mov
inc
rolb
testb
jge
inc
iret
pop
bound
dec
jmp
fadds
inc
mov
sub
pop
lds
scas
out
ret
call
call
das
jne
sbb
add
jge
loope
adc
mov
cmc
xor
gs
test
rolb
lods
sbb
push
jne
aaa
lds
xchg
mov
push
pop
in
mov
inc
push
fyl2xp1
xor
and
pop
cwtl
cmp
jmp
and
and
xchg
mov
sub
sub
or
stos
pusha
mov
xlat
test
jae
in
mov
int3
xchg
mov
mov
mov
lret
cmpsb
and
in
xchg
cmpb
jg
xchg
jg
sub
sbb
js
or
cmp
push
push
sub
lcall
mov
mov
mov
jmp
dec
adcb
arpl
pop
xchg
mov
or
push
cld
cmp
out
lock
push
cli
ja
cmp
les
pop
xchg
inc
mov
fs
sbb
inc
jl
or
ja
es
ds
push
dec
cmp
push
es
push
xlat
or
incl
popa
cmp
dec
rclb
pop
dec
and
lods
loop
dec
adc
loopne
sub
into
dec
inc
xor
sahf
adc
stos
lahf
push
mov
pop
aaa
push
cwtl
add
or
push
das
inc
jb
sbb
sub
out
out
xchg
dec
sub
xor
cmp
pop
cs
lahf
add
xor
jecxz
in
xor
inc
daa
addl
push
add
cmpsl
in
aas
test
stos
cwtl
dec
jno
mov
imul
mov
cmc
xchg
push
movsb
stos
fistpll
loop
decb
enter
fstps
ja
movsb
jae
sub
push
mov
inc
jmp
jle
mov
dec
adc
and
mov
jb
mov
cmc
jg
xchg
xchg
xor
loop
shll
mov
stos
pop
lock
lods
cmpsb
jne
test
and
das
adc
shlb
leave
inc
lret
mov
out
sti
jo
imul
cmp
add
xchg
or
or
enter
xor
or
jle
mov
mov
sarl
std
fimuls
jbe
push
push
sbb
test
xchg
inc
add
lds
pop
xor
ss
mov
adc
pop
fwait
pop
xor
nop
jo
xchg
xlat
inc
push
sub
cmp
add
add
and
aaa
aam
outsl
rcrl
call
mov
push
sbb
mov
stos
sbb
ljmp
cmp
bound
into
les
outsb
daa
stc
dec
lods
mov
mov
js
or
or
fadds
in
cmp
mov
push
dec
mov
mov
jb
mov
lret
aas
mov
les
cmp
js
jnp
dec
push
cmp
pop
cltd
mov
in
jns
and
jmp
dec
mov
cmp
fcomps
push
iret
test
inc
fldcw
pop
insb
xchg
div
in
test
add
inc
mov
sbb
in
loopne
fcmovnu
jecxz
xchg
scas
inc
pcmpgtb
xchg
mov
mov
int3
test
arpl
mov
movq
sub
arpl
js
add
repnz
mov
sbb
mov
mov
fdivrs
andb
push
mov
push
xor
inc
push
push
cwtl
in
movsb
push
dec
int
lock
pop
push
sub
rorb
jb
fwait
popf
cmp
cmp
jne
mov
mov
or
pop
aaa
push
or
mull
out
jg
push
fldt
dec
les
jns
inc
ss
sbb
es
push
fildll
hlt
pop
or
sub
lock
insb
cmp
sub
sub
aas
inc
jmp
fistl
pop
lahf
add
mov
pop
ljmp
mov
mov
or
arpl
pop
jge
add
adc
jne
and
int3
xchg
push
and
into
inc
mov
and
cmpsb
mov
es
mov
or
adc
jp
les
lahf
sbb
movsb
sub
ret
les
and
out
in
pop
imul
xorl
cmp
in
jne
cmp
or
mov
jbe
sahf
inc
outsl
mov
xor
sarl
in
xor
xor
jle
insl
or
ds
int
movsl
mov
addr16
mov
outsl
rcll
gs
das
adc
addr16
mov
nop
fwait
and
lahf
xchg
pop
icebp
xor
outsb
cltd
lock
mov
inc
bound
or
cltd
inc
pop
push
lret
pop
cld
mov
push
push
lock
les
cmpsl
dec
mov
mov
add
aaa
enter
inc
fwait
rorb
in
addl
mov
fs
test
mov
stos
loopne
fs
repnz
add
test
cmc
mov
dec
dec
jg
mov
xor
nop
stos
inc
inc
sub
gs
pushf
testl
jecxz
push
mov
or
mov
fstps
stos
pop
push
imull
es
jl
js
scas
insb
sbb
fildl
pop
cmc
mov
popa
test
ds
int
popa
ja
sub
ficomps
adc
push
in
repnz
outsb
xchg
shl
push
xchg
movsb
pop
pop
shrl
push
rcll
cli
hlt
pop
xor
test
push
aam
jmp
addl
ror
push
pushf
cmp
orl
mov
pop
fidivrs
or
push
jnp
leave
popf
stos
imul
int
add
pop
orb
loope
dec
in
aaa
or
pop
or
mov
das
fists
mov
outsb
js
fdivs
sbb
add
shll
sti
adc
add
xchg
inc
dec
or
outsl
fwait
xchg
sub
aas
sub
sub
fsubrp
lret
fstpl
mov
jo
out
ja
mov
addr16
in
ret
dec
xor
jge
jo
fiaddl
ds
jl
push
pop
loop
repnz
push
jnp
repz
mov
dec
add
ljmp
push
std
jg
mov
cmp
loopne
fistps
dec
decl
cmpsl
scas
jg
aam
fmuls
outsl
mov
mov
push
sti
out
sub
xchg
dec
xchg
imul
push
or
bound
sbb
xchg
dec
stos
sti
int3
sub
inc
and
and
movsb
fdivrl
lea
add
push
rorb
div
inc
fildll
inc
jge
sbb
inc
pop
fs
sbb
xor
lret
mov
cmpsl
jb
push
jnp
jle
dec
ds
pop
incb
mov
sbb
mov
mov
sub
mov
loop
mov
mov
or
and
mulb
cld
and
in
xchg
in
pop
mov
mov
es
outsb
xchg
int3
imul
std
lahf
dec
rorl
mov
jne
mov
shr
inc
sbb
pop
add
mov
lcall
mov
mov
daa
sub
int
in
sub
out
mov
or
inc
xor
out
xchg
mov
rcl
sbb
push
addr16
ds
xchg
dec
dec
adc
popf
loope
cli
or
mov
aad
cmpsl
aam
cmp
ljmp
pop
jg
cmc
mov
inc
shl
mov
dec
cli
ret
mov
push
insb
jg
outsl
cmc
mov
xorb
dec
rorb
ljmp
adc
mov
pop
mov
cmpsl
mov
rcll
fisubl
dec
push
loope
stc
cmpsl
mov
es
rorl
push
jp
rolb
andb
nop
data16
xchg
xchg
dec
add
lods
clc
push
leave
test
mov
mov
push
jp
mov
addr16
push
test
and
cmp
jge
mov
sbb
push
adcl
ss
xlat
outsb
mov
scas
daa
rcl
mov
pop
fiaddl
adc
aas
insb
sbb
push
test
imul
mov
sub
inc
mov
mov
push
xlat
mov
lods
pop
push
shll
mov
dec
xchg
xchg
ds
push
cs
dec
lds
sbb
mov
je
jne
dec
test
cmpsl
loop
cmp
loop
mov
jmp
xchg
mov
nop
sbb
jnp
mov
fwait
popa
mov
mov
mov
ret
and
outsl
in
add
out
loope
imul
mov
addl
rorb
xor
mov
sbb
and
inc
test
xchg
and
pop
cmp
das
fbstp
dec
fildl
or
movsl
popa
pusha
nop
std
mov
mov
gs
out
popf
xlat
xchg
jno
out
xchg
or
mov
clc
xlat
aaa
lods
jmp
pop
cmp
sti
in
push
mov
cmpb
and
dec
cs
xor
scas
ret
test
loope
push
arpl
ljmp
lock
and
hlt
roll
push
rorb
lret
movsl
lret
repz
sbb
pop
aaa
jge
ds
insb
sbb
and
clc
sbbb
sbb
cmp
jmp
std
out
das
fimuls
scas
fwait
jne
dec
jg
add
clc
les
cmp
mov
mov
inc
ret
xlat
js
fucomi
mov
rolb
and
mov
jae
push
out
outsb
insb
inc
inc
cmp
mov
xor
mov
das
stc
shlb
jno
out
dec
js
in
rclb
cmp
inc
sub
pusha
pop
and
xchg
mov
or
mov
mov
xchg
xchg
mov
call
ficompl
out
push
dec
ljmp
pop
sub
pop
mov
xor
jge
mov
sub
push
sbb
fwait
and
pusha
xor
lds
ficompl
mov
and
mov
sbb
adc
push
mov
xor
or
or
xor
rorl
in
das
fwait
jno
ror
decb
adc
push
imul
mov
mov
test
mov
ds
cmp
sbb
repnz
enter
movsb
filds
jge
std
lods
inc
or
jle
faddl
sbb
pop
mov
lds
pop
cmp
cltd
lret
ljmp
adc
fsts
and
push
fstpt
ss
inc
xchg
lea
xchg
jle
addl
aas
loope
lds
and
inc
jmp
pop
jo
xor
scas
mov
sub
jno
loopne
iret
call
rolb
repz
lret
pop
shrb
rclb
dec
push
cmp
xor
dec
divl
push
stc
daa
mov
pop
inc
pop
adc
pop
mov
pop
add
or
daa
adc
mov
push
push
sbb
pop
ljmp
in
jae
adc
adc
sarb
jo
popa
jno
adc
sahf
pushf
rolb
repz
jnp
movsl
aas
inc
leave
sti
jecxz
inc
xchg
adc
rcl
pop
jo
inc
lret
sub
shrl
cmp
test
pop
cltd
pop
xchg
sbb
pusha
out
inc
or
aaa
sub
sbb
cmp
adc
xchg
dec
dec
mov
pop
push
cmpsb
adc
je
cmp
into
into
fstl
inc
sub
roll
in
cld
mov
je
addb
jl
arpl
xor
aam
ss
imul
ss
inc
xor
ret
loop
push
sub
sbb
inc
aad
lods
jg
inc
add
out
dec
xlat
pop
mov
pop
mov
outsb
xor
jns
jecxz
inc
push
inc
addb
loopne
adc
pop
and
mov
and
sub
divl
jnp
fbld
lret
sbb
idiv
dec
or
mov
mov
adc
loope
sbb
mov
and
or
call
gs
insl
xchg
xchg
push
inc
jge
cmp
mov
mov
xchg
jecxz
popf
xlat
xorl
leave
ret
or
or
mov
fimuls
loope
fsubs
pop
jbe
mov
cmp
ret
mov
stos
lret
mov
or
or
in
pop
out
xor
nop
stos
fneni(8087
pop
sub
push
pop
mov
or
sbb
in
enter
add
mov
mov
adc
mov
clc
pop
fsubr
mov
insl
pop
mov
pushf
push
cltd
mov
jbe
push
icebp
push
scas
aas
clc
xchg
dec
sub
xor
rcl
lods
into
jl
nop
sub
cli
mov
push
add
aaa
aam
loopne
in
lcall
cmp
adc
shrl
scas
outsl
mov
lahf
mov
xor
ss
stc
sub
test
jp
mov
pop
into
mov
dec
adc
call
xchg
nop
or
cmp
sub
add
pop
mov
and
outsb
insl
sub
adc
stc
das
sub
leave
mov
test
nop
fcomps
ja
or
stos
add
dec
int
scas
out
scas
mov
push
aas
outsb
das
call
test
xchg
inc
imul
mov
ja
pushf
mov
mov
jb
idivb
xor
pop
mov
dec
cwtl
push
push
jae
sub
inc
nop
mov
bound
and
das
loopne
lea
mov
inc
jmp
mov
cmc
lds
mov
pop
or
jge
jo
xor
fisttpll
jnp
lods
adc
cld
pop
sub
icebp
dec
pushf
ret
call
shrl
ss
loope
pop
cli
push
and
ret
loope
cwtl
pop
jmp
incl
ljmp
test
sbb
stos
fmuls
cmp
sarl
mov
xchg
in
sub
lea
xchg
scas
lds
xchg
sti
mov
push
inc
movsb
mov
nopl
scas
sub
pop
outsl
mov
cmp
lods
test
xchg
out
daa
aas
out
add
clc
insl
xorl
or
xor
popf
mov
fsubrs
pusha
cmc
xchg
out
pop
mov
xchg
pop
cmpb
push
orb
shr
or
xlat
sbbl
push
jns
nop
jecxz
cmc
mov
cltd
in
cmp
outsb
pop
sahf
mov
aas
bound
or
push
enter
or
sbb
sbb
inc
xlat
mov
xchg
jae
pop
cmp
and
loop
mov
fldenv
gs
lret
cmp
cmp
and
lock
xor
sub
test
add
lret
mov
pop
sbb
mov
pop
xor
mov
pop
jp
lret
loopne
mov
lgs
mov
scas
lods
pop
aas
test
mov
sub
lods
into
mov
cmpsl
rorb
arpl
lahf
or
mov
jo
out
xchg
cmc
aaa
out
lods
sbb
mov
lock
jg
fisttpl
test
push
jecxz
pop
xchg
test
bound
xor
fstpt
or
in
cmp
mov
js
iret
ds
in
stos
mov
and
into
cmpsl
jle
push
mov
enter
les
sbb
mov
je
adc
or
mov
mov
mov
arpl
dec
nop
jb
mov
lahf
cmp
mov
jns
mov
aam
insl
in
xchg
aaa
and
fimuls
lds
stos
xor
push
sti
xorl
fwait
sub
shll
dec
pop
pop
je
push
stos
fstps
addr16
out
hlt
add
in
js
cli
rorb
sbb
xor
incb
pop
int3
call
pushf
inc
sahf
inc
jle
dec
insl
std
mov
adc
and
mov
rorl
mov
jae
sbb
adcb
test
or
andb
in
jns
cwtl
cmp
js
addr16
cli
mov
in
inc
test
repnz
sub
hlt
mov
jb
push
mov
inc
out
popa
adc
and
xchg
jmp
mov
loop
popf
mov
scas
push
aad
insb
adc
subb
dec
inc
and
dec
lret
adc
cmp
mov
out
icebp
ret
dec
push
sbb
std
add
arpl
cmp
xor
or
cmp
cmp
std
mov
xchg
into
aaa
lods
sbb
ljmp
scas
fwait
add
repnz
mov
push
ret
mov
xor
inc
scas
mov
outsl
fiadds
clc
xlat
xrelease
sub
cld
xchg
test
mov
aaa
ret
push
add
xor
jbe
xor
mov
ja
xor
loope
popa
sti
adc
test
dec
popa
mov
icebp
jo
loop,pt
jge
xchg
adc
mov
xor
loop
mov
xchg
out
and
push
pop
cmp
and
and
mov
lret
fadd
mov
sub
ror
data16
leave
push
scas
dec
es
fbld
icebp
mov
in
or
sahf
ljmp
cmp
pop
cmc
std
lods
shlb
stos
sub
addr16
test
gs
in
sbb
leave
mov
add
inc
loope
xchg
push
dec
jne
push
xor
xor
adc
out
jb
mulb
cmp
in
jmp
mov
repnz
not
mov
mov
push
out
pop
iret
xchg
adc
mov
xor
or
data16
xor
ss
xchg
push
sahf
inc
sub
push
stos
dec
add
dec
pop
adc
mov
pop
mov
mov
push
addl
xchg
push
mov
fstps
xor
cmp
and
dec
inc
imul
mov
mov
inc
fs
fwait
lods
jne
sub
rolb
mov
cmp
scas
or
sbb
pop
sbb
push
nop
cwtl
dec
cmp
push
lret
mov
push
mov
loopne
dec
outsb
sub
test
nop
aas
fistl
pushf
mov
adc
sti
push
lret
dec
jo
push
aad
or
xchg
sbbl
imul
fnsave
xchg
scas
push
mov
popa
out
pop
or
mov
mov
jb
mov
les
es
lods
test
fisttpl
fwait
sbb
shlb
xchg
lods
mov
fstpl
mov
ds
orb
lds
xor
fisubrl
je
es
pmaxub
adc
in
jle
or
add
mov
pop
pop
mov
inc
mov
jnp
xor
inc
call
hlt
and
pushf
push
jae
fs
xchg
cmp
pop
and
inc
fwait
lahf
std
mov
or
xor
or
jns
cmpsl
out
aam
cmp
adc
adc
inc
add
add
lcall
aas
sbb
push
xchg
imul
pop
adc
pop
icebp
mov
cmp
sub
mov
xchg
push
jg
fimuls
nop
shl
loop
int3
mov
movd
lcall
enter
inc
dec
jns
fwait
adc
mov
jo
testb
add
cmp
stos
int
mov
jbe
jb
add
mov
mov
dec
pop
and
and
sbb
xchg
pop
push
insb
dec
js
push
adc
jl
dec
dec
in
in
sub
inc
mov
imull
addr16
fwait
insl
cmp
fildll
xchg
aas
faddl
ret
scas
pop
sbbl
pop
or
or
inc
jmp
sbb
stc
frstor
in
cmpsl
jo
mov
xor
mov
inc
jp
cmp
fldenv
rclb
adc
stos
ret
xor
pop
pop
int3
add
cwtl
faddl
scas
mov
cli
dec
addr16
mov
lret
add
pop
pop
inc
or
scas
gs
scas
mov
callw
dec
push
stos
pop
cmc
push
inc
imul
pushf
shll
lods
pushf
les
add
cmp
outsb
jecxz
push
xchg
add
es
setge
xchg
adc
adc
stc
repz
sbb
scas
sbb
jle
jl
or
mov
inc
test
mov
mov
mov
nop
lcall
cmp
xlat
mov
push
jge
lock
addr16
mov
xchg
and
cmp
mov
adcb
sbb
imul
mov
in
ret
mov
je
jb
dec
pop
cmp
mov
xchg
mov
dec
jo
dec
addr16
lea
addl
cmp
ret
mov
lods
pop
insl
cmp
dec
add
hlt
mov
mov
lock
mov
pop
pop
repz
adc
loopne
or
pushf
jl
jge
mov
cmp
xor
cmp
jns
das
imul
clc
flds
inc
pop
call
dec
cmp
inc
adc
and
js
addr16
sub
bound
mov
jae
ss
ret
mov
jp
or
outsl
add
adc
gs
shlb
push
push
push
add
out
pusha
or
les
or
jl
pop
pop
jne
mov
mov
test
mov
adc
jg
in
adc
cltd
mov
pop
imul
enter
jbe
cmp
push
mov
cmp
inc
jle
mov
imul
outsb
lods
inc
sbb
push
outsl
mov
sub
call
inc
mov
mov
dec
pushf
cmp
aaa
out
cmp
hlt
cmp
inc
push
push
clc
into
mov
popf
sbb
mov
sub
inc
or
jne
out
jp
pop
mov
dec
jge
cwtl
lcall
xchg
out
xchg
imul
jno
xor
aas
add
cmpl
pop
mov
dec
scas
sbb
aas
daa
pop
leave
add
movsb
jle
dec
lock
add
lcall
out
push
std
outsb
stos
mov
pop
sbb
orl
sub
cmp
and
dec
push
jne
sub
adc
push
add
pop
xchg
mov
push
sub
adcb
cmpb
fildll
push
lods
ret
mov
jl
add
pop
mov
lret
xor
jmp
xchg
inc
popa
mov
or
test
sub
adc
pop
push
jne
jbe
int3
xor
idivl
shrl
out
aam
test
xor
add
lock
popf
arpl
jle
pop
bswap
sub
adc
cmpsb
in
nop
mov
push
aam
clc
push
sbb
adc
je
das
add
pop
shrb
rorl
test
outsl
loopne
xchg
out
out
dec
sbb
dec
ss
loop
jbe
lock
dec
mov
sub
mov
shl
add
mov
push
push
lods
mov
jmp
sbb
jo
sbb
xchg
in
mov
jo
insb
push
cmp
mov
adc
sbb
arpl
and
inc
shll
repnz
adc
xor
pop
addr16
jmp
mov
loop
cwtl
xchg
cmp
lea
add
in
mov
mov
repnz
aam
dec
sbb
sub
xchg
push
mov
ret
adc
scas
pushf
addr16
test
push
sahf
lds
or
adcb
push
iret
dec
negb
es
push
dec
iret
lea
pushf
stos
mov
push
xor
out
ret
mov
aam
outsb
lods
mov
xchg
adc
fimull
push
daa
fmuls
pop
cwtl
add
sbb
rol
pusha
inc
ljmp
add
lods
frstpm(287
fdivl
inc
sbb
popf
loop
or
inc
mov
das
fs
xor
sti
pop
shrb
xor
imul
leave
adcl
jp,pt
xor
aaa
and
js
sub
pop
pushf
les
ja
sub
mov
sbb
setns
sub
pop
pushf
orl
xlat
clc
jb
adc
mov
mov
jge
cmc
push
cmpsb
fadd
dec
sti
sbb
inc
movsl
xchg
js
adc
mov
pop
cs
adc
gs
mov
mov
sub
or
outsb
mov
cli
sub
aad
ja
xchg
orl
mov
jae
stos
leave
into
ret
push
pop
and
or
mov
data16
mov
or
or
jne
das
jp
rcrb
repz
mov
sub
in
jns
outsb
cmp
cmp
mov
cli
push
jmp
cmp
fsub
push
jbe
sbb
dec
insb
push
mov
leave
xor
leave
nop
loope
and
sti
mov
xchg
xchg
pop
insl
or
insb
or
daa
xor
sahf
in
subb
inc
cmpsl
inc
adc
xor
and
inc
out
jbe
cwtl
fisubrs
jo
shrb
imul
cmp
js
inc
jbe
stos
je
cld
sbb
stos
in
lea
daa
lcall
mov
lods
mov
xchg
inc
loope
bound
cld
stos
pop
add
jmp
out
scas
jg
adc
pop
loop
orl
in
lret
push
lds
mov
outsl
push
adc
imul
jl
mov
add
js
xor
bound
sub
mov
xchg
les
aaa
mov
aam
call
add
outsb
mov
leave
mov
shl
xor
cld
adc
xchg
xchg
mov
push
pop
push
or
push
or
imul
sahf
sbb
sarl
sub
movsb
mov
jg
cmp
or
mov
xchg
jl
cld
fst
aam
test
int
int
mov
sbb
repnz
jp
test
test
aas
ljmp
ds
xchg
call
stc
ds
adc
xor
std
mov
jnp
iret
rcrl
ljmp
mov
inc
ss
cmp
mov
cmp
mov
mov
xor
xchg
pop
in
inc
pop
push
popa
arpl
bound
adcl
jne
jo
mov
test
dec
or
add
or
add
sub
in
jb
pop
adc
mov
clc
cwtl
rcll
icebp
pop
push
and
inc
mov
mov
test
sbb
lds
adc
mov
pop
cmpsb
loope
mov
xor
mov
inc
xchg
je
lret
fcmovnb
mov
test
xor
ficoml
in
in
cli
lock
pop
out
fwait
out
push
mov
pop
fstpt
xchg
mov
movsb
fs
mov
cmpsl
nop
cmp
in
mov
sbb
xchg
out
or
rclb
adcl
fdivrs
cmp
sub
add
or
and
movl
cltd
lds
xchg
pmulhw
xchg
xor
bound
mov
xchg
xchg
dec
test
cmp
inc
scas
mov
loope
xor
loop
aas
into
inc
mov
sbb
aaa
leave
xchg
xchg
jge
mov
or
and
mov
dec
hlt
jne
add
jnp
cmp
xor
stos
fidivs
stc
in
imul
sbb
test
dec
outsl
jno
mov
xchg
cmp
adc
jecxz
push
jnp
mov
out
cmp
add
enter
dec
ds
pop
dec
pop
pusha
mov
adc
rolb
add
daa
clc
fs
cmp
mov
subl
push
ja
nop
xchg
xchg
movsl
sbb
or
inc
aas
xchg
pop
scas
sub
into
ja
xor
int
outsl
lret
test
repz
fiaddl
lret
mov
jnp
jo
jnp
adc
xchg
test
orb
dec
adc
cmp
push
inc
mov
mov
ds
outsb
cmp
adc
mov
sub
loopne
test
leave
je
pop
xchg
inc
pop
jae
xchg
add
jecxz
push
adc
fcmovu
mov
mov
mov
mov
jns
pop
out
ljmp
loopne
adc
add
pop
pop
sub
push
mov
mov
test
ffreep
imul
and
push
sub
xchg
negl
jecxz
fimuls
out
mov
mov
or
mov
shrl
rcr
cmc
pop
push
rcrb
mov
sbb
jg
xchg
cmp
mov
adc
gs
jl
cmp
sbb
cmp
sub
or
adc
jge
scas
sbb
adc
imul
fisttpll
nop
ja
pop
sbb
push
or
clc
jge
fsubrs
into
dec
cmp
sub
loope
ret
orps
pop
popf
mov
sub
push
and
sbb
es
icebp
xchg
subb
inc
push
adc
or
or
lods
int
or
data16
push
mov
jp
es
mov
pop
dec
and
addr16
lock
sbb
add
xchg
sbb
jge
addb
mov
and
test
pop
pushf
mov
in
in
xor
mov
push
incb
mov
or
mov
pop
ret
cmpb
cmp
out
jle
addr16
aas
xor
cmp
push
dec
ss
cmc
rcr
add
cli
cmpsb
rorb
cmp
add
cltd
and
cmc
fwait
or
pop
lcall
ret
outsb
sbb
jno
add
nop
faddl
pushf
jl
fadds
xchg
outsl
pop
push
repz
std
add
orb
popf
ror
add
pop
pop
or
arpl
mov
jg
fcompl
out
dec
mov
cld
sub
repnz
mov
add
in
addr16
push
jo
cmp
lods
push
fwait
cmc
cmp
xor
loopne
pop
cmp
lahf
ljmp
aas
xor
xchg
adc
add
sub
repz
test
add
pop
push
dec
push
add
je
jbe
scas
or
push
push
jne
adcl
push
fcoml
aas
stc
and
adc
cmp
fs
out
leave
sbbl
rcrb
lea
mov
loop
clc
xlat
repz
inc
aad
dec
jmp
scas
in
dec
stos
and
insl
inc
in
xor
add
les
push
inc
sub
xlat
push
push
ret
push
in
leave
jne
lods
mov
xchg
jo
jl
cwtl
jno
mov
xchg
sbbl
and
pop
int3
xchg
aas
loop
push
pop
pop
dec
ja
sti
pop
mov
int3
jl
mov
icebp
enter
inc
dec
aaa
stos
adc
faddl
dec
sub
jo
lret
fstl
pop
les
mov
cwtl
inc
add
mov
scas
out
aaa
or
adc
and
mov
cltd
je
adc
lcall
cmp
cli
push
outsl
sbb
dec
outsb
xor
inc
cmp
call
scas
ljmp
and
movb
aad
jmp
fisubs
and
out
xor
pop
sti
inc
cmpsb
lea
dec
dec
sub
rcrl
in
mov
in
inc
mov
push
loop
stos
cltd
fists
addr16
sub
xchg
sub
xor
enter
dec
scas
xchg
push
push
pop
dec
cmp
cmpsb
rcrl
ss
call
sub
cmc
js
out
aad
test
dec
ja
ljmp
adc
sarl
fcmove
popf
dec
aad
test
pop
shrb
fidivl
xchg
pop
mov
pop
test
test
xlat
push
in
fsubr
jp
pop
pop
dec
incb
test
add
in
pop
adc
loope
add
and
es
icebp
push
or
adcl
testl
js
jbe
push
add
mov
jge
pop
and
xchg
jnp
inc
add
push
orl
mov
ds
ss
mov
cmp
inc
int
pop
mov
xchg
xor
push
add
sub
shll
or
jg
clc
filds
stc
mov
int3
std
orl
pop
push
js
push
sbb
cmp
sub
add
mov
push
cmp
jl
inc
or
in
imul
adc
adc
pop
shrb
sub
les
test
loope
mov
fst
xor
shr
lahf
int
mov
mov
fdiv
sarl
jmp
aas
rcr
loopne
dec
lock
xchg
mov
call
xor
daa
lcall
cmp
sbb
nop
jge
inc
fsubrl
mov
pop
mov
ljmp
inc
dec
lret
lcall
test
pop
push
aaa
popf
push
push
jg
mov
adc
or
pop
fwait
lods
cmpsb
cmp
push
jb
jge
out
sbb
push
push
mov
or
jl
lcall
cmp
fs
inc
xor
rclb
mov
lods
popf
int3
mov
lea
nop
fldl
and
sub
ret
sub
stos
pop
jno
shrb
mov
xorl
adc
xlat
push
sbb
lods
push
imull
das
inc
mov
mov
mov
shlb
subps
cmp
fldcw
cmp
pop
xor
aaa
aas
mov
lret
insl
mov
bound
inc
mov
lret
mov
push
pop
jb
mov
cmp
sub
xchg
mov
xor
scas
aam
push
lcall
sbb
or
adc
cmp
pop
leave
addr16
and
pop
pop
push
cs
mov
and
sbb
in
xchg
aam
cmp
scas
ret
mov
insb
inc
ret
adc
jo
xchg
pop
cmp
push
loopne
xor
nop
stos
mov
cli
fiadds
dec
mov
cmp
adc
lds
sahf
push
adc
aas
dec
aad
lret
out
nop
js
add
insb
int
pop
stos
xor
sar
int
rolb
mov
cmpl
and
lcall
cmp
sbb
dec
stos
dec
xor
jbe
jns
push
push
mov
das
sub
xchg
xchg
das
push
or
mov
es
jb
mov
push
test
sahf
mov
cs
mov
jno
fimull
cs
add
movsl
mov
js
fwait
jmp
xchg
add
lahf
inc
out
out
sub
psubb
mov
dec
aam
adc
push
rcll
out
test
xchg
subb
pminsw
imul
mov
push
fs
icebp
mov
lret
sti
cmp
es
pop
pop
stc
test
sahf
or
in
adc
dec
xorl
pusha
push
iret
sub
mov
fcomps
ljmp
xlat
cmc
mov
jae
add
icebp
sbb
push
jb
dec
bound
dec
mov
movsl
pop
mov
jecxz
pop
lcall
test
loope
mov
xchg
loope
aaa
cmpsb
stc
ss
mov
inc
cmp
xor
mov
shlb
cld
fdivl
ds
popf
and
inc
daa
cwtl
pop
push
xor
jns
pop
mov
cwtl
adc
ret
mov
dec
stc
lods
dec
add
cmpsb
adc
rorl
jo
cmp
push
xchg
sbb
shll
push
add
sahf
movsl
push
nop
stos
adc
inc
movsb
sarl
xchg
mov
xchg
xorl
mov
push
stos
inc
repz
ljmp
sbb
cmp
push
out
popf
inc
dec
xchg
stos
push
testb
cmpsl
fcoms
dec
into
mov
or
fisubs
rolb
push
out
lods
movsb
std
repz
and
in
stos
inc
in
shl
stc
mov
imul
xchg
in
add
fnstcw
cmp
xor
mov
dec
adc
inc
popf
aaa
loopne
jbe
jnp
adc
jmp
iret
ss
lods
daa
lcall
or
mov
scas
dec
into
fimull
das
stos
mov
adc
das
das
lret
aaa
jne
dec
cmp
cmc
inc
out
jp
mov
mov
test
nop
clc
xchg
lahf
mov
xlat
push
sbb
pop
fldl
jbe,pt
sub
dec
imul
je
ja
push
jns
into
iret
data16
sahf
inc
int
sbb
ret
test
imul
mov
inc
dec
hlt
inc
xchg
inc
and
test
mov
cmp
and
lds
stos
adc
mov
sbb
dec
sub
mov
sahf
mov
sbb
ror
inc
xchg
outsb
sbbl
ljmp
push
cmp
add
jo
inc
jecxz
pop
fwait
mov
int3
dec
or
xchg
jno
xlat
push
and
cmp
repnz
and
std
sbb
pop
and
mov
jne,pt
cmp
ds
cmp
or
xor
into
sub
jae
and
les
aaa
cmpl
lcall
out
pop
test
out
add
lods
dec
in
aas
add
dec
out
in
iret
cmp
sub
mov
cmc
push
enter
mov
ljmp
add
adc
data16
pop
outsb
or
jle
sahf
test
ret
mov
mov
push
int3
movsb
fidivrs
dec
xlat
jb
lock
aaa
mov
lods
adc
and
push
lea
mov
fiadds
dec
add
push
add
leave
or
cwtl
cltd
int
push
in
call
pop
data16
push
in
movsb
shlb
jge
and
das
clc
cmp
pop
or
stos
jnp
pop
mov
mov
mov
or
repz
ret
bound
or
and
into
xor
sbb
adcb
dec
pop
mov
ret
shll
xor
pop
sub
pop
adc
sti
ret
or
imul
mov
mov
and
in
inc
fstp
test
inc
fstps
aas
rcrl
sub
repz
ja
jae
lods
inc
xchg
cmp
or
mov
lret
or
and
pop
dec
cmp
cmp
sbbl
pushf
pop
dec
int
and
xchg
aad
inc
mov
scas
loop
mov
inc
das
and
lret
ret
inc
jbe
rcr
push
cmp
xchg
xor
sti
inc
popf
lret
out
xor
lods
int3
jge
sbb
cld
outsb
xchg
adc
ja
test
aad
jno
sub
inc
or
mov
push
adc
shrl
rcrl
and
bswap
pushf
push
cmp
lods
gs
xchg
in
adc
ljmp
in
dec
es
popf
mov
adc
lahf
mov
and
fadds
loope
and
fs
sbb
xchg
dec
rcrb
sub
loop
ret
sub
iret
ror
xchg
push
std
pop
pop
decl
out
pop
aad
pop
and
xor
adc
lcall
xchg
rorb
sub
mov
xchg
or
into
mov
jl
in
fstp
or
imul
ds
outsb
lds
mov
xchg
es
xchg
mov
push
inc
shr
lods
jge
dec
lret
fwait
loope
subl
insl
pop
or
or
mov
push
sbb
imul
dec
loope
daa
pop
cwtl
in
mov
aaa
in
jge
push
sahf
test
aas
pop
leave
mov
cs
das
sarl
and
pop
or
inc
in
fldl
mov
or
inc
xchg
scas
cmc
add
rcr
mov
or
pop
xor
jl
loopne
cmpsb
jp
adc
repz
pop
icebp
lea
pop
lret
into
or
cmp
lret
cltd
xchg
test
push
dec
cld
call
lock
outsl
lahf
mov
inc
and
je
cmp
mov
in
pop
pop
and
loopne
arpl
mov
test
or
arpl
pop
ja
divl
mov
or
outsl
pop
sub
test
inc
cmp
fwait
xlat
out
adcl
mov
fadd
in
or
xor
mov
add
into
out
icebp
lahf
inc
mov
mov
cmp
inc
sbb
jg
pop
dec
cmp
into
std
mov
adc
push
jecxz
mov
or
mov
pop
inc
movzwl
jmp
out
ja
add
xchg
pop
fldcw
add
and
insb
in
sbb
je
mov
pop
out
or
jg
test
outsb
neg
sti
fldt
fsubr
rcrb
js
inc
or
and
jle
mov
movsb
add
inc
xchg
lock
cmpsb
dec
mov
popa
or
adc
in
inc
ja
dec
enter
out
mov
and
ljmp
mov
and
sarl
insb
pop
or
or
icebp
repz
movsl
pop
push
filds
cmpsb
test
rorb
clc
js
fildll
sub
popa
mov
loope
sarl
jne
popa
inc
das
pop
jg
test
sahf
adc
lahf
mov
sahf
jns
mov
stos
push
ljmp
and
cmp
xchg
xor
xchg
movsb
clc
jecxz
scas
pop
test
cld
ret
addb
in
in
inc
imul
ja
inc
jl
push
clc
stos
mov
mov
cmp
mov
test
or
in
lea
in
lcall
xchg
dec
xor
enter
and
pop
mov
repnz
call
sbb
push
pusha
call
enter
in
insb
cmp
aas
das
lret
jne
in
mov
arpl
or
cmp
add
inc
enter
ljmp
xor
pushf
outsl
adcl
cmp
push
dec
je
shll
adc
and
scas
pop
dec
cmpsl
xor
adc
sbb
jle
mov
out
pop
pushl
jno
ljmp
nop
add
sub
sbb
lret
mov
stc
push
jmp
inc
mov
out
inc
jno
repz
jg
dec
or
and
lock
movsb
adc
add
loopne
sub
adc
test
les
imul
out
jmp
imul
mov
sub
in
adc
sbb
pop
out
pop
je
lret
mov
aad
sub
mov
mov
or
ss
pop
push
mov
xchg
js
bound
xchg
jg
movl
dec
fldt
adc
jmp
inc
das
in
xchg
call
adc
roll
scas
nop
mov
popf
or
ds
ss
inc
push
mov
dec
push
push
inc
arpl
mov
jnp
sub
fldenv
mov
mov
jg
test
les
daa
popf
out
add
rolb
stos
mov
dec
jbe
sub
xor
adc
push
sbb
mov
and
inc
jbe
cmc
pop
xchg
mov
insb
pop
outsb
push
dec
mov
add
sbb
xchg
sbb
push
dec
dec
or
add
xchg
dec
lock
sub
addr16
jne
push
xchg
lock
into
xchg
push
mov
cmp
sub
mov
mov
call
je
add
jbe
jle
add
subb
xchg
hlt
jmp
jnp
sahf
call
mov
sarl
rcl
or
sub
or
popf
dec
dec
pop
xchg
cld
sbb
mov
cmp
dec
mov
cli
sti
dec
in
sub
sbb
jecxz
enter
pop
mov
hlt
mov
cmp
jp
test
xchg
cld
ja
scas
stos
inc
mov
push
repnz
cmp
jo
xor
jb
push
lock
inc
xchg
and
lcall
mov
in
sub
lock
jne
xor
pop
xchg
hlt
jns
push
mov
mov
dec
aam
dec
dec
sub
mov
xor
xor
mov
push
pop
mov
cmpsl
mov
inc
lods
jbe
or
push
jmp
inc
movsl
les
cmp
lcall
les
add
aam
loopne
jl
cmp
faddl
adc
movsb
xor
clc
sbb
adc
shl
lods
inc
pop
fs
mov
mov
cmpsb
fisubl
xor
dec
pop
mov
dec
stc
dec
aad
pushf
push
call
aad
xor
lea
aad
in
dec
mov
xor
icebp
push
stos
fldl
pop
or
ljmp
mov
push
push
or
ja
jb
stos
pop
dec
jg
mov
movsb
add
loopne
xor
lods
adc
cmc
outsb
and
cmp
and
repz
add
or
and
arpl
mov
jbe
lock
test
int3
mov
cmp
insl
jl
and
aas
mov
sbb
ficomps
and
aam
inc
repnz
cmpsb
faddl
and
dec
movsl
and
movsl
push
or
sbb
mov
fists
jmp
pop
mov
mov
xchg
cmp
adc
bound
das
fs
rcrl
call
xor
repz
pop
dec
js
push
cmpsb
aas
sub
inc
pop
fcoml
mov
popa
and
dec
cs
xchg
mov
push
test
xchg
inc
clc
jmp
cltd
mov
movsb
xor
test
inc
jmp
mov
in
push
fsubl
popf
or
ret
push
fwait
gs
int3
fisubl
cmp
push
jns
adc
cltd
mov
sub
mov
int3
push
je
jns
lods
insl
or
std
pop
fdivrs
dec
and
inc
movsl
fwait
xchg
mov
xchg
jb
wbinvd
sub
cmpsl
lret
nop
scas
dec
pop
stos
mov
jae
shll
gs
push
bound
ds
adc
fimuls
daa
and
loop
pop
add
fnsave
mov
aas
sbb
pop
inc
jge
mov
shll
inc
pop
xlat
sbb
and
mov
add
jns
xor
xchg
or
xchg
inc
arpl
sbb
lret
xchg
xor
fadds
jmp
inc
mov
arpl
or
mov
cli
xlat
in
push
pushf
mov
cmpsl
jle
inc
test
clc
cs
mov
out
lods
imul
sub
mov
test
out
mov
cmp
add
movsl
pop
lret
and
in
outsb
lods
cld
dec
imul
push
lret
push
mov
sti
xchg
sub
sbb
outsl
xchg
shll
push
stc
fisubrl
xchg
and
mov
xor
or
jecxz
leave
fstpt
jp
xchg
pop
dec
arpl
and
cmpsl
mov
dec
movsb
sbb
je
movsl
addb
xor
jbe
outsl
loope
cld
cmpsb
dec
scas
sbb
rol
push
stos
pop
and
cld
mov
push
ret
test
ss
shlb
out
xor
les
out
call
das
mov
cmp
js
inc
sub
mov
push
lret
mov
jge
cltd
fs
stc
jl
push
lahf
pop
or
adc
mov
fcomps
sahf
lea
test
pop
das
cmp
pop
inc
and
pushf
leave
mov
adc
imul
dec
inc
clc
jae
ret
mov
popf
lea
cwtl
jg
cmp
sbb
loop
cli
sbb
push
or
xorl
ret
mov
dec
or
push
clc
cmp
xchg
dec
iret
sarl
call
pusha
adc
mov
cmp
mov
pop
ror
loope
mov
mov
lret
cltd
movsl
sbb
mov
cltd
ret
leave
mov
idiv
loopne
mull
adc
int3
dec
cmpsb
sub
imul
lods
dec
adc
dec
sub
rcl
aaa
out
loope
cmp
leave
mov
ljmp
or
lret
xor
jecxz
inc
dec
jne
das
lret
hlt
push
mov
loop
mov
in
adc
xchg
lcall
fdivrs
lods
pop
jmp
scas
and
pop
pushf
pop
mov
sub
inc
inc
ja
jge
inc
fsubrs
jb
fbld
into
test
aad
jp
and
push
pop
jnp
jecxz
cmp
lea
push
push
icebp
pop
push
adc
push
fiadds
xor
sbb
popf
mov
loope
jo
inc
je
cmc
sub
fmulp
jne
ficoms
mov
mov
adc
pop
dec
fucomip
mov
test
cmp
in
push
sti
pop
cltd
gs
dec
ficoms
mov
fsts
mov
mov
push
jnp
mov
fsts
mov
gs
out
inc
xchg
dec
jp
add
jmp
xchg
mov
push
outsb
push
push
outsb
lahf
sub
adc
push
in
jo
mov
enter
ja
mov
or
push
sub
jb
fstps
imul
lock
aas
cmp
add
stos
cmp
nop
or
mov
ret
cld
daa
add
cli
maxps
xor
mov
js
cmp
add
add
outsb
loope
xchg
and
out
addl
adc
popa
cmp
pop
pop
cmp
in
push
add
cmp
xor
movb
pusha
push
ljmp
sub
dec
repnz
in
or
icebp
push
mov
xchg
mov
gs
sbb
dec
sbb
imul
mov
push
out
loop
xchg
mov
jnp
and
mov
jg
das
outsl
jno
pop
add
sti
imulb
popa
cmp
fldl
adc
push
clc
outsl
and
lcall
cmp
mov
in
cmp
ss
and
neg
dec
cmp
cltd
repz
leave
inc
scas
sub
pushf
sahf
movsb
gs
jae
push
sub
push
lea
ja
sar
pop
cmpsl
push
cmp
jbe
imul
jl
bound
cmpsb
jge
cmp
and
test
dec
mov
sub
movsl
rcrl
mul
rcrl
lock
mov
sbbl
xchg
cs
insb
imul
into
push
or
mov
and
shlb
loope
fisubrl
pop
adc
lret
int3
xor
dec
pop
ret
shlb
xchg
mov
notl
in
mov
imul
std
scas
fidivs
xchg
stos
xchg
pop
movsl
addr16
decl
std
cld
adc
or
pop
jo
das
int
lahf
lret
adc
mov
or
imull
jnp
pop
pop
mov
lock
mov
jg
mov
fisubl
and
inc
pop
jno
aas
imul
insb
aas
jnp
dec
popf
mov
mov
xlat
les
adc
jmp
int
sub
xchg
cld
ljmp
cmp
pusha
in
cmp
sbb
imulb
loope
jp
out
dec
scas
daa
out
imul
in
lret
or
pop
xchg
xchg
inc
ret
xchg
or
iret
mov
add
push
in
sub
test
xorl
xchg
dec
mov
dec
nop
roll
cld
daa
jb
mov
mov
imul
mov
sub
pop
push
in
pushf
xor
dec
adc
adc
aam
shl
xchg
xbegin
sub
hlt
jecxz
sbb
mov
lret
mov
mov
call
iret
dec
adc
aas
ds
cmp
xchg
icebp
jg
jo
dec
cmp
jb
movsl
movsb
add
bound
aam
in
inc
loopne
jns
mov
lds
cld
scas
shl
jbe
mov
out
adc
es
inc
aas
pop
cmp
xor
and
add
stc
jle
mov
aad
dec
push
out
pusha
filds
adc
push
add
dec
repz
sub
xor
jmp
dec
pop
adc
inc
sub
inc
sub
pop
jp
int
ljmp
enter
push
adc
or
fs
push
mov
cwtl
xlat
loop
jnp
in
popf
cmp
mov
cmpl
loop
push
fsubs
hlt
pop
mov
mov
mov
dec
les
xchg
stos
mov
pop
mov
mov
push
test
jae
cmp
mov
jno
xchg
shlb
aam
loop
xchg
sbbl
int3
mov
mov
xchg
add
jecxz
mov
dec
dec
enter
fisubl
push
sahf
push
shlb
mov
movsl
push
and
xchg
jns
mov
movsl
xchg
mov
xor
push
repnz
sahf
ret
push
or
adc
pusha
arpl
cmp
mov
es
ljmp
imul
or
les
xchg
inc
mov
or
pop
ss
ret
mov
rorb
adc
inc
xchg
in
iret
xlat
ret
movsb
inc
addr16
repz
icebp
cmp
adc
lock
shll
cltd
xor
push
test
addr16
ljmp
xor
add
notb
or
xchg
gs
scas
pop
ds
mov
fnstcw
leave
test
aam
mov
jg
dec
sub
ror
mov
shlb
mov
cwtl
outsb
jo
imul
sti
addr16
std
test
nop
push
pusha
and
arpl
push
test
inc
add
pop
mov
or
push
inc
lret
divb
jmp
cmpsb
pop
sub
xchg
add
mov
hlt
call
pop
adc
mov
xor
es
fs
je
data16
and
sti
or
adc
sbbl
cmp
pop
xorl
adc
lock
xlat
cmpsb
jne
sub
push
cmp
xlat
int3
shrb
loopne
orl
push
out
push
mov
jno
js
xchg
lock
adc
int
rcl
or
mov
pop
repnz
fldcw
adc
cld
inc
out
mov
inc
lock
dec
fs
cltd
sbbb
dec
cld
ret
and
sbb
push
rorb
addr16
testb
fs
loop
stos
or
fwait
andl
mov
cmp
repnz
jp
repz
mov
xor
jb
xchg
jge
push
mov
pop
adc
jl
adc
cmpl
xchg
out
ds
mov
and
outsl
xchg
or
mov
adc
aas
nop
in
mov
mov
imul
lods
inc
mov
inc
and
mov
dec
imulb
adc
leave
test
movl
dec
testb
leave
xor
in
mov
mov
lea
in
je
in
enter
xor
pop
jp
das
repnz
xchg
insl
push
and
xor
pop
gs
inc
int3
and
gs
leave
or
adc
pop
xchg
jge
fistps
sahf
das
fdivs
xor
cld
adc
cmp
popf
sti
enter
mov
hlt
dec
loopne
cmp
cltd
pop
cmpsl
pop
pop
out
mov
push
mov
negl
mov
adc
xchg
dec
cmp
xor
mov
xchg
inc
loop
imul
aas
cmpb
xchg
adc
pop
mov
jle
fiaddl
iret
ds
test
loope
into
in
fldenv
rcr
push
add
ror
loop
inc
xchg
mov
hlt
xchg
jo
xor
or
xchg
sub
shrb
mov
xchg
push
fdivs
shrl
adc
in
xor
lea
std
jnp
push
daa
pop
sbb
mov
aas
lods
mov
add
or
mov
andl
jl
adc
mov
pop
sbb
add
and
mulb
inc
jb
fcomps
dec
into
jecxz
enter
hlt
pop
out
push
xor
mov
mov
int
sbb
pushf
push
xchg
lds
or
or
cs
jge
int
xor
inc
cwtl
sbb
cmc
popa
imul
adc
mov
push
ss
cs
push
into
and
mov
pop
mov
push
push
jg
insl
mov
pusha
outsl
out
push
push
and
pop
mov
or
mov
cmp
jp
nop
mov
lea
imul
push
outsb
test
movsb
pop
mov
shll
jbe
xor
fisubrs
out
mov
fs
cmpl
pop
push
dec
inc
sub
and
dec
or
imul
or
cmp
dec
mov
mov
in
cli
popa
cmpsl
aas
das
imul
cmp
test
sub
lods
cmp
dec
pushf
aam
mov
and
pusha
fcomps
mov
cmpsl
iret
adc
inc
cmp
sbb
ljmp
stos
movsb
cmp
icebp
push
push
sbb
je
mov
movsl
test
jne
loop
sbb
pop
pop
leave
lcall
jae
out
mov
movsb
je
jo
push
out
adc
ret
sti
cld
pop
fisubs
ja
movsb
pushf
fadds
in
popa
test
fbld
mov
adc
dec
inc
ljmp
scas
ret
mov
aaa
dec
aad
popa
loop
mov
mov
lea
mov
pop
and
push
les
and
xchg
xor
out
jmp
test
cmp
mov
inc
ret
jns
sar
bnd
mov
ds
out
or
or
out
je
fsubl
test
dec
sub
and
mov
jecxz
cwtl
push
dec
jle
enter
or
je
inc
pop
or
lea
mov
insl
dec
aad
push
mov
ret
fidivs
stc
mov
movsl
fisubl
test
cmp
jnp
insl
out
int3
das
xlat
fs
test
mov
and
mov
dec
das
movb
sub
inc
in
jl
sub
das
jno
and
shlb
cmp
push
adc
imul
sub
xchg
movsb
cmp
ret
pop
outsl
out
cmc
xor
mov
rcr
mov
and
incl
in
cmp
aas
shl
push
in
cmpps
pop
loopne
and
mov
je
icebp
dec
aaa
pop
ja
lock
outsb
int
into
mov
jnp
sub
ret
mov
mov
nop
ficomps
out
mov
sub
pop
call
jnp
les
dec
ljmp
dec
test
xor
xchg
and
mov
add
xor
inc
mov
lock
hlt
adc
jecxz
add
fcomps
mov
sub
test
xchg
inc
sbb
shrb
or
add
leave
sbb
mov
mov
out
adc
adc
out
popf
roll
inc
cmp
sarb
mov
lcall
xchg
mov
mov
mov
and
cmp
add
rorb
xchg
scas
loop
test
xor
inc
sub
fwait
hlt
iret
into
or
sti
mov
into
and
adc
enter
andl
fs
sub
xchg
in
dec
fsubs
imul
adc
lods
or
in
sub
xor
test
int3
pop
push
xor
out
xchg
pop
sub
adc
popa
repnz
push
and
jg
loope
mov
fildll
mov
scas
aaa
addl
aad
jnp
not
test
inc
dec
or
loop
jmp
dec
nop
push
add
inc
sub
mov
dec
sbb
pop
jb
scas
outsl
xor
cwtl
cwtl
sub
fdivrs
test
repnz
enter
test
insl
mov
stos
test
xlat
xor
lcall
or
mov
outsb
adc
sub
push
in
fwait
movb
mov
ret
jl
xor
iret
xor
xor
push
pop
rcr
jecxz
and
push
pop
insb
fisttpll
leave
add
pushf
mov
adc
div
push
jbe
pusha
fisttpl
push
push
cmpsl
and
call
fistpl
stc
mov
popf
mov
iret
mov
xchg
pop
or
arpl
scas
push
xchg
int
pop
leave
pusha
inc
sbb
dec
push
pop
lea
add
ror
inc
jo
aaa
inc
cmp
orb
xchg
inc
sub
and
fstl
jns
test
call
insl
stos
test
sub
movsl
or
inc
mov
jg
cmc
mov
push
jle
adc
pop
in
imul
push
cmc
imul
inc
cmp
xor
mov
xchg
sub
imul
ds
decl
mov
mov
and
cmpsb
in
nop
inc
dec
cwtl
scas
cmpl
movsl
push
enter
sbb
mov
es
jns
std
or
mov
mul
dec
xor
fcmovnb
pop
adc
arpl
inc
xchg
jbe
int
in
xchg
in
mov
xchg
test
mov
ja
sub
pop
sbb
dec
cmp
jns
cmp
cmp
outsl
and
mov
xchg
lods
sbb
sub
pop
push
mov
subl
in
lock
std
je
jnp
xchg
scas
cmp
into
mov
loopne
lods
or
dec
in
xchg
push
loope
jns
pop
test
repz
repz
pop
sub
je
lock
xchg
xchg
sub
lcall
fnstsw
jmp
insl
sub
inc
rorl
shr
into
popf
popa
or
or
rcrb
shll
and
cmc
dec
xchg
mov
pop
les
mov
mov
sub
push
ret
sbb
stos
movsb
sbb
dec
jb
mov
push
add
cmp
cmp
jmp
lahf
in
repnz
and
stos
shll
pop
es
outsb
lock
cmp
xchg
pop
dec
xchg
mov
ja
icebp
shl
scas
xor
sarb
mov
xchg
popf
mov
mov
sbb
xlat
xor
pop
cmpsb
xchg
mov
ret
mov
and
sbb
mov
push
sub
iret
in
pop
cmp
loopne
mov
push
push
add
mov
int3
dec
jno
mov
lret
push
cmc
jle
dec
in
popf
xchg
xchg
mov
ljmp
dec
mov
mov
push
fildl
push
xor
add
lcall
es
fs
pop
or
movsl
jle
cli
cmp
ror
xlat
shrl
jno
mov
xlat
mov
xchg
push
pop
add
mov
clc
sub
enter
cs
mov
add
cwtl
mov
out
mov
xchg
xor
out
mov
loopne
int3
pop
loopne
arpl
int3
ja
sbb
push
mov
into
ss
mov
or
and
lods
xchg
jmp
fimuls
loope
or
cmp
inc
adc
mov
lcall
jo
in
fmul
push
lcall
and
lock
mov
rol
stos
das
mov
or
inc
lcall
pop
pop
mov
push
dec
pop
mov
repz
sti
pusha
icebp
cs
popa
and
inc
mov
mov
icebp
rorb
inc
jecxz
sbb
das
pop
or
cmp
inc
pop
jge
cmpsb
sbb
push
in
push
pop
gs
rcll
jo
jmp
cmc
imul
adc
orb
dec
clc
rol
incl
ljmp
ret
xchg
call
mov
sbb
xor
push
jp
and
xchg
icebp
fiaddl
jbe
fsts
mov
jne
add
aaa
in
xor
int3
inc
sbb
sbb
jmp
mov
je
xor
xlat
add
or
ljmp
inc
enter
xchg
jo
cmc
jbe
jecxz
xchg
push
repnz
pop
cltd
loopne
js
mov
cwtl
jle
dec
jo
ficompl
aas
mov
cli
bnd
jle
ss
mov
cltd
lcall
jo
dec
sbb
loope
fsubl
enter
mov
push
push
cld
pop
cli
or
mov
dec
push
mov
insl
sbb
inc
and
xor
cltd
xor
mov
cmpsb
setno
mov
or
loopne
imul
mov
imul
add
shll
out
cmpsb
jno
insl
jb
loop
addr16
lahf
lea
les
fs
loope
popa
inc
ljmp
inc
xchg
sbb
fidivl
in
bound
pop
push
int3
pop
arpl
pop
mov
popl
insb
nop
inc
stos
loope
push
out
stc
jns
sbb
sarl
insl
xor
cmp
dec
sub
cwtl
jl
subb
push
call
adc
adc
sbb
sub
pop
mov
pop
pop
divb
pop
dec
mov
mov
and
sub
or
in
pop
out
int3
pushf
pop
aaa
xchg
das
sbb
push
andl
jns
lea
sub
push
mov
inc
aam
jae
jge
jns
ljmp
sbb
inc
aam
cmpb
push
add
pop
mov
cld
jle
je
fidivs
mov
and
out
and
in
xchg
and
add
lds
popa
mov
roll
jno
mov
cmpsb
repnz
out
sahf
outsl
daa
or
test
test
imul
xchg
das
ds
mov
dec
xchg
inc
leave
aad
mov
daa
mov
ror
jbe
repnz
cmp
iret
and
int
iret
mov
test
stos
mov
mulb
jno
in
icebp
adc
jecxz
push
jmp
fmull
inc
xchg
into
call
xchg
stc
outsb
and
nop
xorl
pushf
add
pop
sub
inc
mov
repnz
test
lea
pop
push
or
jb
rcll
jle
add
cmc
xchg
cmp
mov
xlat
andb
insb
or
xor
dec
cltd
mull
push
or
scas
addr16
push
flds
inc
hlt
sbb
sahf
call
sbb
rolb
push
pop
xorb
divl
enter
adc
icebp
sbb
cld
jmp
cmp
pop
push
or
jle
shll
iret
in
lock
adc
push
ds
push
insl
add
pop
jns
jbe
rep
jb
test
fisttpll
shl
push
jl
cmp
in
mov
push
cmp
dec
test
repz
inc
adc
xchg
and
ffreep
push
jecxz
jb
pop
push
mov
adc
mov
jo
mov
rcr
movsb
dec
inc
adc
popa
adc
fchs
shlb
push
xchg
std
out
pop
and
into
cmpsl
jge
popa
fs
and
iret
mov
push
shll
cli
add
cli
pushl
and
lret
mov
push
out
repz
pop
fwait
nop
cmp
jb
and
pop
jae
sbb
imul
and
aam
fidivs
xchg
aad
lods
lret
mov
jecxz
push
mov
mov
loop
jno
mov
mov
setno
rcr
in
rorb
mov
xor
mov
add
inc
ds
pop
dec
mov
jns
adc
add
dec
push
es
repz
jno
hlt
movsb
inc
adc
cmp
ss
std
fidivrs
or
dec
pop
stc
loop
repz
rcll
rcll
sti
lret
jle
movsl
out
popf
xor
or
adc
mov
push
mov
mov
jge
out
shlb
pop
cvtps2pd
sbb
test
xchg
repz
mov
sbb
push
lds
cmp
jbe
cli
add
ds
jge
ljmp
or
movd
subb
mov
dec
pop
in
xor
out
dec
daa
xor
sub
fcompl
jmp
jbe
xor
inc
mov
jg
cmp
mov
add
and
sbb
fs
dec
xor
aas
pop
pop
jb
mov
mov
jae
sbb
jae
fs
mov
andl
sbb
jmp
ja
jns
pop
in
adc
dec
stos
shlb
mov
cmpsb
bound
cld
inc
sub
hlt
adc
stc
stos
mov
pusha
clc
cs
pop
sub
mov
ljmp
lock
cmpsb
xor
jo
mov
mov
cltd
ss
lds
aad
in
cmp
push
hlt
lods
mov
addr16
cmp
mov
jo
xchg
inc
addl
jp
sbb
movsb
xchg
xor
and
jmp
cs
xchg
inc
sbb
add
jne
or
push
iret
adc
jnp
imul
adc
and
dec
and
xor
cli
daa
cwtd
sub
movsl
xchg
sub
add
push
add
fiadds
iret
divl
cs
outsl
inc
and
aad
add
sbb
jno
mov
scas
jbe
enter
aad
push
imul
bound
mov
and
adc
stc
dec
mov
dec
jg
cmpsl
je
cmpsl
push
pop
pop
and
frstor
into
inc
dec
cs
jl
cmp
jl
test
gs
cmp
or
shl
jmp
loope
xor
jo
add
adc
mov
test
fdivl
gs
xor
mov
mov
xchg
and
pop
pushf
insl
xchg
inc
cli
gs
cmp
cmp
ja
pop
je
xor
cmp
sub
movsl
mov
mov
insb
out
inc
paddb
daa
adc
ds
scas
and
cmpsl
dec
xor
push
mov
mov
mov
cli
aad
cmpsl
gs
pop
orl
daa
xor
mov
mov
jge
push
sub
mov
andb
pop
sub
pop
pop
push
jo
inc
data16
cmp
xor
in
popa
pop
cmp
fs
loope
adcb
xchg
mov
les
mov
jo
scas
aaa
cmc
xor
adc
fistpll
popa
ror
jge
xor
cs
xchg
gs
mov
pop
lret
sub
xchg
je
outsl
fnstsw
add
jle
test
dec
or
push
fiadds
lods
cwtl
mov
subl
cli
add
mov
int
pop
shlb
mov
testb
jmp
mov
call
inc
mov
shrb
mov
adc
xor
jb
sub
pop
cmp
into
dec
rol
pop
pop
jp
daa
outsb
xor
aas
cmp
stos
push
sahf
iret
and
jge
sarb
dec
lods
scas
test
push
jg
icebp
mov
mov
imul
sahf
jo
lcall
xor
mov
adc
and
test
lds
lret
mov
pop
pop
xchg
in
inc
stos
fdivrp
xchg
into
cmp
icebp
or
sub
push
xchg
push
or
add
outsl
jo
mov
cltd
sbb
xor
hlt
movhlps
dec
mov
pop
aas
fistpll
aas
cli
mov
cmp
mov
pop
nop
adc
hlt
insl
xchg
push
sbb
leave
leave
sbb
andb
xchg
pushl
push
sbb
sbb
insb
and
rcrb
iret
or
inc
inc
mov
les
add
and
push
adc
pushf
out
fcoms
enter
or
out
roll
xchg
xor
dec
clc
sub
jnp
mov
add
loop
iret
sub
fidivs
dec
inc
mov
push
push
jg
cmp
lds
mov
out
and
loopne
adc
mov
cmp
ret
cld
mov
test
sbb
sbb
neg
test
repz
out
addr16
outsl
aas
fidivrs
push
mov
cltd
inc
push
testb
jo
icebp
inc
fwait
pop
out
inc
adc
aam
sub
lods
stos
aad
xor
ret
cltd
shlb
dec
cmp
xor
dec
fisttpll
mov
fsubs
mov
mov
push
stos
fiaddl
fcoml
sub
xchg
and
cmpb
iret
fdivrp
std
mov
mov
cmc
cli
fcmove
cmpl
arpl
sbb
pushf
gs
pop
and
adc
lcall
xlat
je
xor
push
push
lret
adc
xchg
test
std
lret
add
push
ret
lahf
ja
dec
call
aas
add
divb
push
and
and
test
jo
pop
call
int3
xchg
rolb
xlat
cmpsl
sub
fcoms
ljmp
cmp
pop
inc
pop
inc
inc
xchg
out
mov
push
sbb
sub
int
cmc
push
or
test
aad
push
js
loop
xchg
pop
mov
je
std
inc
jmp
xor
sti
inc
les
mov
ss
fistps
mov
push
test
fiadds
sub
rcrb
ret
sbb
int
or
leave
jno
or
int3
xor
pop
lock
fldenv
mov
out
xor
out
movsl
sarl
andl
inc
or
sahf
loop
lret
push
mov
sbb
gs
mov
inc
insl
jae
testb
jno
mov
xchg
jge
lods
dec
xor
lea
xchg
sti
loop
and
sbb
and
popa
stos
dec
loop
and
push
movsl
dec
sbb
sub
or
push
fimull
pop
cmp
mov
push
mov
mov
jae
mov
jae
addb
xchg
add
sbb
lahf
repnz
mov
addr16
je
fnstsw
jmp
loope
mov
or
stos
gs
xor
pop
push
adc
push
mov
scas
int
jnp
xchg
and
js
movsb
sub
repnz
cmpl
fs
push
jp
push
add
out
addr16
push
adc
stos
shll
ds
movsb
stc
mov
dec
pushf
mov
jge
jns
jge
jae
mov
loopne
inc
xchg
int
mov
sub
and
lretw
repnz
push
push
mov
pop
mov
popf
dec
addb
pop
in
outsl
add
gs
mov
cli
cmpsl
mov
sbb
xchg
and
lds
sbb
clc
xchg
or
cltd
mov
rcrb
xchg
pop
mov
jae
inc
cltd
mov
filds
adc
cwtl
mov
outsl
push
cmp
popa
jl
push
pop
out
aad
xchg
jns
jp
xor
ds
call
out
es
lods
sbb
mov
xchg
stos
inc
dec
inc
adc
js
cltd
dec
bound
cmp
mov
dec
push
data16
xchg
inc
lahf
andl
lahf
enter
sbb
jmp
aad
sahf
xchg
adc
fwait
pop
sbb
xlat
aaa
loope
cmp
jno
ret
mov
ret
ljmp
adc
data16
add
fbld
stos
test
out
nop
add
pop
in
xor
mov
mov
push
out
xchg
pop
or
aad
push
enter
or
shr
push
lret
pop
into
into
xor
cmp
test
adc
movl
cmp
mov
xor
stos
fldt
mov
cwtl
add
dec
into
cli
push
xchg
cli
or
loopne
add
inc
loopne
xchg
rcl
pop
sub
jp
cmp
and
add
push
cltd
dec
add
popf
add
pushf
cmp
and
call
clc
cmp
sbb
sbb
or
sbb
jb
aas
fidivrs
repz
rorl
mov
sub
lds
ljmp
mov
outsb
or
dec
pop
mov
loop
addr16
inc
outsl
dec
add
xor
imul
rolb
loop
mov
pusha
sub
jecxz
jo
and
cltd
dec
mov
testb
pop
out
mov
pop
dec
loopne
inc
scas
sub
bnd
jb
cmp
cmp
in
mov
adc
popa
stos
mov
xchg
sub
mov
xchg
rcr
cmp
js
cmp
fmull
adcb
je
sub
mov
ljmp
sahf
lods
mov
lods
inc
mov
imul
mov
cmp
out
jb
adc
jnp
in
adc
icebp
fucomp
out
sbb
pusha
addb
adc
out
jne
cmp
cwtl
dec
js
sahf
stc
or
xor
xor
dec
test
or
aaa
dec
imul
imul
sub
and
sub
std
jecxz
fisttpll
addr16
jge
sbb
fnstcw
add
dec
adc
call
push
adc
jb
fsubrl
sbb
mov
add
fcoms
fisubrs
add
fdivl
cmp
pop
shlb
cmp
ljmp
sbb
sahf
pop
cmp
add
pop
mov
leave
mov
jbe
pop
shlb
jns
in
rolb
jp
fstpt
fstpl
fdivr
loopne
adc
xchg
fsubrl
repz
jg
je
cltd
or
movl
movsl
cmp
pop
fdivr
push
js
cltd
mov
out
and
fs
cld
sbb
sub
pushl
js
adc
les
xchg
mov
ret
inc
jmp
sbb
mov
push
cmpl
test
push
dec
cli
js
sub
and
sbb
xchg
int3
ret
dec
movl
pop
iret
mov
imul
sbb
es
insl
loopne
ljmp
inc
xor
les
xor
cmp
dec
inc
fnsave
fcmove
pop
decl
shll
adc
fwait
movsl
xlat
add
mov
cmp
or
mov
or
in
jmp
cmp
dec
daa
scas
xchg
das
subb
out
and
adc
cltd
pop
addl
daa
xchg
pushf
in
mov
pop
push
mov
inc
mov
xor
out
sbb
gs
int3
sbb
icebp
movl
jl
jmp
xlat
jne
cmpb
mov
push
icebp
mov
outsl
popf
imul
cmp
sub
mov
repnz
inc
scas
push
repnz
sub
push
ss
out
out
jnp
fstpt
cli
mov
js
or
pop
aad
or
loope
std
rol
or
test
pop
pop
insl
outsb
imul
fcmove
shlb
add
rorl
push
push
push
lret
push
inc
jno
jmp
cwtl
push
dec
cmp
iret
je
and
add
dec
les
cmpl
adc
jns
mov
leave
stc
mov
mov
xor
popa
das
cmpsl
inc
pop
movsl
clc
test
jnp
mov
cmp
mov
neg
int
pop
cmp
xchg
mov
sub
xor
xor
lret
xchg
push
sbb
test
push
mov
add
out
mov
push
mov
mov
pop
sub
pop
adc
adc
or
int3
and
in
jmp
mov
mov
repnz
mov
push
mov
je
roll
or
or
dec
std
icebp
movl
xor
cld
or
xabort
adc
xchg
mov
in
jle
add
sub
jle
or
push
mov
sub
shlb
xor
dec
dec
gs
rorb
pop
or
push
les
imul
imul
mov
push
outsb
mov
jge
sub
cmppd
out
mov
in
popf
daa
push
daa
incb
mov
movsb
in
push
and
push
xlat
mov
adc
sbb
bsf
mov
iret
aam
imull
hlt
sbb
xchg
push
lock
or
mov
sbb
inc
out
fmuls
sahf
mov
jbe
sahf
insl
push
and
test
jno
xchg
movsb
arpl
ja
mov
mov
inc
out
loope
pop
sti
or
push
fdiv
jecxz
mov
inc
mov
cs
aad
mov
je
cmp
push
loopne
mov
jns
div
aaa
or
sbb
xchg
test
shl
data16
les
ss
fbstp
pushf
cwtl
data16
fdivs
cmp
js
jmp
mov
xor
xchg
mov
mov
add
xchg
xor
fwait
imul
clc
add
cmp
test
xor
lods
cltd
stc
sub
call
jns
xor
fwait
sbbl
jle
adc
pop
inc
test
jb
data16
adc
sbb
shl
sub
test
stos
mov
ljmp
dec
flds
mov
jmp
lahf
out
cwtl
jnp
mov
orb
push
mov
shlb
mov
mov
iret
push
fsts
jns
pop
xor
mov
lret
mov
cmpb
jl
adcb
pop
sbb
loope
add
mov
pop
or
mov
mov
repz
bound
out
jmp
inc
test
jecxz
sbb
vcvttsd2si
into
xchg
push
inc
loope
cmp
mov
loop
xor
movsl
repnz
hlt
insb
adc
add
mov
pusha
jecxz
adc
inc
mov
fsubs
mov
lods
or
mov
mov
mov
enter
imul
std
mov
fstpl
scas
jl
fisttpll
lock
call
lock
out
loope
adc
fwait
stos
mov
pop
adc
icebp
cwtl
lret
sub
xor
movsl
test
fisubs
idivl
jo
and
add
iret
sub
andb
sahf
sti
mov
add
bound
or
add
cli
sbb
into
scas
xchg
subb
xor
arpl
push
xchg
in
mov
ds
jmp
cli
shrl
sbbl
push
test
xchg
std
or
popa
pop
stos
or
loopne
lret
and
xor
mov
sbb
fcmovnb
add
jno
mov
or
add
jns
gs
push
add
in
jnp
dec
call
sub
adc
xor
mov
mov
and
push
outsb
cmp
mov
fadds
lahf
pop
ds
or
js
dec
add
mov
mov
aam
lret
or
sub
test
add
adc
outsl
in
leave
push
or
pushf
dec
push
fsub
notb
sahf
cs
mov
cmp
add
movsl
mov
push
inc
jb
pusha
fs
cli
test
xlat
sar
xchg
jl
lock
and
jmp
ffreep
add
and
push
sbb
xchg
sub
mov
inc
cmp
int
outsb
or
mov
xchg
shlb
addr16
outsl
pop
jns
xlat
ljmp
test
xchg
sbb
dec
inc
sbb
repz
xor
and
dec
jl
sub
mov
sbbl
imul
fldenvs
out
adc
fldl
push
out
push
jmp
adc
or
insb
sub
lock
jge
leave
mov
xor
loope
xor
inc
inc
dec
popa
cmc
and
mov
mov
mov
cld
loopne
and
das
xchg
mov
mov
inc
dec
lret
lods
test
mov
or
xlat
xchg
adc
fwait
sbb
xor
inc
inc
out
mov
xchg
scas
xor
cltd
fadds
test
add
stos
sub
mov
imul
lock
dec
orl
repnz
and
icebp
jne
inc
mov
sbb
out
popa
pop
sti
pusha
repz
xor
dec
out
lret
adc
enter
cmp
cmp
mov
cwtl
loop
std
dec
movsl
sbb
daa
and
xchg
pop
dec
arpl
test
shll
das
cmpsb
pop
lds
mov
inc
lcall
add
mov
jp
push
test
and
lods
cmp
and
adc
jge
cmpsl
xchg
xlat
fcoms
fidivrl
pushf
fcomip
test
scas
mov
out
sub
ljmp
scas
push
jmp
aaa
in
sub
movb
push
stc
sub
cmpsl
dec
xchg
or
inc
jmp
shr
iret
decb
or
inc
or
mov
and
mov
rcr
cmp
popf
xchg
xchg
fbld
or
outsl
imul
lock
cltd
sub
push
das
xor
fsub
adc
shll
dec
insl
addr16
rcr
sub
nop
push
stos
popf
pop
jge
mov
jmp
push
dec
aas
jl
mov
les
lods
xchg
jbe
fstl
jbe
jecxz
mov
sub
xchg
sub
cli
cmp
arpl
daa
sbb
push
sahf
adcl
adc
pop
push
ds
mov
cli
xor
adc
jne
pop
mov
nop
mov
jl
outsl
pop
xchg
cmp
sti
jne
sub
imul
stos
mov
lods
dec
xor
enter
jb
mov
adc
or
add
sub
or
out
sbb
add
sub
pop
sub
pushf
and
jecxz
roll
mov
push
jg
sbb
dec
jp
add
pop
sbb
lods
test
mov
sbb
in
cmp
aad
and
inc
sbb
push
loop
xor
pusha
xlat
jge
jecxz
dec
mov
aad
pop
xchg
xor
popf
sub
xchg
dec
xchg
notl
mov
add
xchg
scas
aam
mov
sub
test
jecxz
or
leave
pop
sub
mov
cmp
jne
mov
push
cmp
cmp
rol
loope
cli
mov
mov
cmpsl
mov
push
insl
std
notb
leave
sarl
mov
mov
sbb
stos
sahf
std
out
cmpsb
jle
fisttpl
jno
or
mov
sbb
pop
mov
cmc
dec
xchg
add
dec
push
in
pop
mov
push
pop
pop
sub
popf
jb
aaa
cmp
nop
pop
sbb
stos
faddl
xchg
mov
inc
pop
into
loop
jmp
inc
dec
xchg
in
pushw
mov
jle
or
dec
mov
cwtl
data16
sbb
test
mov
pop
scas
pop
iret
mov
loopne
mov
adc
mov
xor
xchg
ds
jp
mov
or
jae
push
rcl
adc
movntq
sbb
out
push
dec
cmpsb
jno
cli
jbe
in
pop
mov
and
mov
cmp
adc
repz
xorl
push
out
sbb
js
mov
fisttpl
sbb
cmp
pop
insb
fcoms
jp
push
cld
pusha
lret
adc
dec
pop
ss
xchg
dec
jle
add
cld
push
push
add
cmp
adc
inc
je
mov
mov
scas
add
imul
js
movsl
out
lahf
xor
mov
imulb
xor
mov
xor
xchg
xchg
xor
mov
dec
jp
dec
fcoml
inc
jle
std
leave
fsubrp
nop
es
imul
xlat
cmpsl
sub
hlt
out
es
xchg
mov
call
cmpsl
xchg
stc
test
in
mov
ficoms
cmpb
inc
pop
lret
aas
mov
andl
imul
push
popf
out
testl
leave
or
xchg
xor
cs
mov
jae
loop
and
dec
fbld
popa
mov
mov
enter
mov
clc
repnz
fbstp
push
xchg
cmp
pop
mov
push
subb
mov
mov
jne
int
into
inc
insb
imul
rorb
call
inc
in
stos
repnz
xor
inc
mov
ja
push
test
mov
jge
mov
aam
dec
test
xchg
pop
push
sarl
loop
scas
cmp
mov
adc
test
adc
and
pop
or
sub
push
aas
add
movl
jg
dec
outsb
pop
ljmp
cltd
xchg
mov
mov
xchg
fdiv
cmpsb
pop
hlt
cmp
scas
inc
imul
shlb
sub
aam
add
sub
dec
rcl
sub
push
cltd
and
push
fwait
mov
sub
mov
xchg
repnz
pop
imul
cmovge
lods
jl
out
cmp
push
lock
test
push
lcall
fisttpll
dec
dec
jg
xchg
repnz
push
mov
cwtl
outsl
nop
scas
xchg
mov
mov
daa
mov
enter
inc
inc
lock
addb
jno
inc
icebp
into
inc
sbb
jp
stos
push
scas
push
iret
jno
jb
cmc
lock
and
insb
imul
lock
push
es
inc
push
jne
fcoml
mov
fsts
js
repz
cwtl
xor
and
ret
sbb
loopne
addr16
push
pop
cmp
cmc
or
jmp
inc
incb
ss
in
cltd
sbb
lock
sti
pop
push
mov
cs
lock
and
dec
push
cwtl
sub
cmp
add
cmp
out
pop
aas
ret
xchg
cmpsl
enter
add
clc
xor
sbb
sbb
mov
mulps
into
mov
or
in
shlb
jb
loop
jns
pop
sbb
and
inc
sbb
loope
sbb
xlat
inc
sbb
jb
fwait
xor
sub
stos
jecxz
xchg
je
mov
cmpsb
mov
jno
push
nop
dec
mov
cmpsb
fadds
nop
push
dec
outsl
outsl
cli
dec
cli
push
int
xchg
sub
mov
leave
jb
dec
dec
clc
insl
mov
popf
insb
xor
adcb
iret
insl
pop
outsl
out
jl
or
lods
xor
or
jmp
xchg
test
xchg
sbbb
sbb
xor
fldcw
pushf
jmp
add
shrb
and
aaa
and
xor
mov
ret
enter
push
mov
or
aas
int
cmpsb
in
ss
fwait
and
int3
adc
push
push
xchg
in
cmp
xchg
lea
js
adc
jae
pop
push
xor
hlt
jmp
lea
insb
xchg
or
xchg
mov
cmp
les
jecxz
shll
dec
stos
mov
pop
in
inc
fstpt
push
dec
pop
adc
pop
jne
lret
xchg
dec
push
inc
pop
ja
pushf
lods
push
cwtl
sub
test
mov
cmpsb
push
lods
jbe
and
imul
int3
mov
repnz
cs
gs
jo
movsl
loop
jno
daa
adc
sub
jne
xlat
push
dec
jg
lods
rol
sbb
jae
outsb
pop
push
xchg
lock
push
xor
aam
jo
dec
cli
test
pop
insb
divl
inc
in
mov
xor
sub
mov
lods
inc
fsubr
pop
test
push
cmpsb
jecxz
xor
fmul
aad
outsl
xchg
arpl
mov
scas
clc
stos
cltd
dec
daa
add
dec
mov
aad
ljmp
std
and
inc
das
pushf
xchg
pop
iret
cmp
push
mov
xchg
or
lods
or
unpcklps
ds
fwait
iret
leave
lahf
cmpsb
cli
and
jae
xchg
cli
cmp
pop
ljmp
jbe
dec
ja
or
lcall
fcoms
cld
into
adc
js
inc
movsb
sub
mov
nop
dec
ficoms
testb
std
fcompl
push
xor
add
int
ret
notl
push
adc
or
mov
int
mov
jne
es
fldt
cmp
jl
dec
aam
fistpll
sti
fmuls
add
cmpsl
jne
iret
stos
popl
lahf
adc
lret
pop
adc
lahf
mov
cmp
data16
push
int
sahf
lods
call
dec
push
sub
jle
insb
xchg
sbb
call
cltd
mov
xor
jmp
mov
cmp
cmpl
and
cmpsl
add
rcl
lahf
mov
add
pop
cmp
or
lods
add
sarb
pop
out
or
sub
or
lods
lret
in
sbb
or
popf
push
sub
popa
in
mov
fiaddl
pop
sbbb
lret
adc
std
subl
xchg
sti
ss
cmp
and
inc
or
arpl
adc
sub
sub
call
mov
sbb
inc
ss
lret
mov
lret
dec
lds
or
sbb
loopne
popa
lods
ds
mov
push
daa
and
sub
mov
mov
popa
mov
aam
in
dec
mov
jge
rcl
dec
ror
mov
xchg
enter
mov
ljmp
cmp
or
lods
ss
cmp
xchg
mov
clc
insl
cltd
jecxz
push
xchg
push
lret
push
add
mov
test
xchg
sub
arpl
mov
xorl
out
pop
pop
jle
scas
sbb
lret
data16
stc
data16
f2xm1
lds
jno
aas
fdiv
sbb
pop
xchg
add
and
mov
adcb
lret
jecxz
pop
xor
jne
fdivrl
out
pop
hlt
rolb
sbb
adc
out
pop
mov
pop
add
iret
mov
jmp
jl
aaa
add
out
shrl
bound
jg
test
ror
loope
fucomp
inc
jle
js
nop
mov
adc
popw
cmp
fs
addl
cmp
xor
push
pushf
iret
fwait
pop
lods
mov
arpl
negl
inc
inc
cmpl
outsl
je
and
jmp
in
lods
push
or
or
int3
or
cltd
jnp
lcall
data16
std
stc
xor
inc
rorb
mov
lock
cmp
stc
mov
inc
ror
sbb
cwtl
mov
fstp
sbb
pop
cmc
cmp
into
dec
add
add
add
ja
cmp
inc
cwtl
inc
sbb
sbbl
flds
sub
dec
int3
and
add
inc
aas
add
pop
jae
inc
pop
sbb
mov
mov
fwait
out
es
ljmp
test
dec
pop
sub
lret
outsb
add
fstps
popa
bound
mov
mov
bound
push
dec
pop
and
cmp
dec
ficoms
dec
xor
jp
lock
jbe
bound
jecxz
mov
mov
sub
in
fnstsw
jb
cltd
lcall
sbbb
scas
push
push
inc
xchg
divl
movsl
pop
fisttps
ror
jle
loop
dec
outsl
and
inc
mov
imul
icebp
in
das
jp
cmp
dec
cmp
sbbl
fwait
mov
fbstp
call
test
aad
out
lock
sub
xchg
xor
xchg
xor
cmp
jne
ss
cmp
rorl
icebp
ret
test
or
push
sub
arpl
dec
mov
imul
int3
or
mov
adc
mov
lock
fsubrl
ror
dec
nop
jb
and
push
jo
jno
push
les
inc
mov
je
jns
cs
test
lock
cmp
movb
frstor
or
enter
sbb
pop
lods
add
iret
ret
and
xor
sub
jb
lea
jge
outsb
movsl
inc
fsubrs
sarl
add
call
push
sbb
jecxz
jnp
ljmp
addr16
mov
mov
add
mov
test
int3
pop
inc
cmpsb
insb
jnp
or
pop
sbb
adc
cli
pop
fs
xchg
xchg
test
stc
in
lahf
dec
inc
mov
out
xchg
shlb
add
ja
mov
stos
insl
xrelease
dec
loopne
mov
mov
mov
aas
xor
dec
stc
add
mov
dec
in
arpl
mov
dec
pop
inc
pop
mov
dec
mov
xor
mov
divl
xchg
push
cmp
jo
ss
jg
subl
fadd
add
jne
inc
cmp
sbb
jp
cs
mov
push
xchg
or
movsb
or
sbb
push
jl
sub
scas
out
inc
jp
sbb
inc
mov
mov
fnsave
cld
imul
inc
cmp
loopne
cwtl
jle
or
adc
inc
aaa
mov
jl
push
icebp
xchg
stos
in
fistps
popf
in
rcl
scas
dec
mov
mov
adc
sub
fisubl
sub
lds
or
mov
stos
subl
movsb
pop
mov
pop
mov
push
mov
sbb
adc
cmpsb
push
xchg
mov
clc
add
and
adc
loop
or
fsubl
xor
roll
imul
sahf
cli
lret
gs
sbb
mov
insb
fisttpll
psubq
sub
jb
jae
push
adc
stc
mov
fnstenv
das
xchg
mov
push
dec
loop
adc
pushf
xor
iret
sahf
js
mov
faddl
pop
pop
icebp
pop
iret
xor
ja
xchg
jmp
lds
dec
or
idivb
xlat
sbb
fs
xchg
enter
or
jno
movsl
adc
add
sarb
nop
jbe
ljmp
pop
fs
ljmp
insb
lock
mov
push
jno
jle
shrb
push
mov
cltd
sti
repnz
or
shrl
add
lds
cwtl
ljmp
rorb
rorb
rorb
test
push
rolb
push
pop
sub
xchg
in
inc
aam
cmpsb
and
mov
jne
xor
mov
xchg
jmp
cmp
aam
sub
add
sub
mov
add
sahf
loop
add
stos
popa
cmp
in
test
sub
ret
fs
pushf
and
push
adc
cmc
inc
dec
fsubrl
adc
popa
cmova
orb
jmp
cld
jp
and
mov
pop
jp
into
jb
lds
xlat
cmp
mov
push
inc
loope
pop
out
out
mov
xor
out
push
es
xor
adc
adc
mov
fmull
pushf
push
and
ds
sbb
xor
iret
cmpsb
int
push
addr16
in
lds
mov
dec
xchg
and
cli
sbbb
push
sbb
mov
mov
mov
mov
push
lret
lret
cmp
add
push
out
adc
lds
sub
ljmp
scas
xlat
inc
mov
arpl
adc
jg
arpl
in
loopne
push
sahf
mov
push
jno
mov
pop
stos
ss
inc
jmp
iret
and
pop
xlat
scas
mov
and
add
inc
push
sub
mov
lods
pop
xchg
mov
mov
idiv
dec
push
movsb
mov
pop
stos
xor
popf
ret
jp
out
and
push
mov
and
lock
push
jecxz
stc
push
push
jg
fadd
adc
push
xlat
inc
movsb
pop
lods
adc
xchg
shrb
enter
movsb
ja
sub
mov
push
movsl
mov
jg
daa
mov
lahf
dec
je
mov
adc
adc
inc
xor
ror
mov
fwait
cmp
adc
lahf
pop
push
movsb
test
mov
xchg
test
mov
inc
xchg
sub
jp
xchg
sub
mov
cld
mov
mov
bound
icebp
lea
dec
add
mov
lds
cmp
pop
dec
jecxz
push
sbb
sbb
inc
mov
mov
ss
sbbb
adc
mov
sahf
dec
jg
ljmp
jge
pop
hlt
jae
ret
cmpsl
fdivrs
or
stos
lock
push
imul
mov
dec
outsb
add
aas
mul
cmp
xchg
mov
repnz
dec
pop
or
inc
jge
sbb
push
imul
jb
stos
jge
pop
jecxz
stos
dec
jnp
in
inc
cmp
pop
popa
shll
jnp
cwtl
and
fistpll
lcall
mov
cmp
jae
outsb
xchg
adc
adcl
out
xchg
jmp
mov
aad
push
add
push
push
inc
and
and
push
mov
out
cmp
and
mov
icebp
movsl
mov
lods
mov
outsl
pop
loope
push
jns
mov
sbb
loope
enter
xchg
and
xlat
dec
jp
jae
jg
push
cmp
shl
test
jns
mov
xchg
or
adc
mov
dec
adc
jg
jmp
call
lods
movlps
push
imul
pushf
pop
mov
fcomps
jb
jecxz
lahf
nop
inc
imul
mov
shrb
pop
cmp
jmp
jmp
es
xchg
cli
into
pop
and
test
cmp
pop
xchg
iret
cmp
mov
dec
sbb
mov
aaa
inc
out
inc
cmp
enter
sbb
cmp
jbe
pusha
out
jp
js
fidivs
ds
mov
fimull
test
lods
add
fs
popf
loop
add
jb
dec
adc
inc
mov
or
dec
adc
and
rorb
in
or
or
xchg
je
imul
scas
mov
cld
ds
aam
jb
enter
mov
dec
mov
mov
fcmovnu
test
lock
imul
clc
lcall
add
call
daa
and
cwtl
shrb
aas
ficompl
addr16
or
pop
stos
pop
inc
shrl
cmp
or
in
and
adc
imul
mov
cmp
ds
repz
cld
mov
inc
in
sbb
mov
or
xchg
iret
add
lret
pop
les
sub
push
in
add
test
jae
inc
pop
pusha
sbb
push
jmp
dec
xchg
lods
jbe
cmp
mov
imul
mov
movsl
ds
dec
test
or
pop
ljmp
mov
orb
vsqrtss
fisubl
push
xor
mov
insb
pop
into
leave
and
scas
or
add
fisubrs
pop
jne
sbbb
cmp
out
xor
xor
ljmp
in
mov
mov
mov
pop
pop
sti
aad
xorb
push
in
clc
sbbb
mov
mov
out
popa
inc
mov
divl
push
xor
mov
icebp
push
cmp
outsl
popa
lock
aad
xchg
cs
ljmp
mov
leave
and
jle
mov
test
dec
push
arpl
jne
xor
xchg
push
sarl
jne
mov
cli
inc
cmp
dec
jns
and
insl
mov
push
sub
and
mov
mov
xchg
in
push
cmp
jle
decb
pop
adc
xchg
je
jno
pop
or
inc
int
add
gs
add
sti
mov
cltd
cli
xor
mov
std
call
into
js
and
jg
inc
cmp
mov
jmp
jl
inc
adc
fmul
mov
imul
rolb
mov
cwtl
mov
cli
in
fisttpll
pop
lret
sub
mov
pop
xchg
mov
mov
sbb
lahf
adc
mov
popf
pop
mov
push
setns
cmp
mov
stos
sbb
jecxz
insb
add
out
arpl
loop
aam
and
pop
and
add
pop
clc
divb
test
outsb
or
pop
les
mov
jnp
out
or
or
loop
clc
xchg
arpl
jecxz
mov
enter
pop
jns
stos
gs
ret
insb
jno
sti
dec
sub
leave
das
mov
repz
stos
movsb
pop
push
ret
push
cltd
std
mov
popa
jb
jl
ja
js
jge
stc
adc
hlt
xchg
xchg
mov
outsl
sub
lahf
iret
aam
cmp
fldl2e
mov
shll
or
mov
jno
sbb
fldl
js
lock
pushf
mov
test
and
mov
inc
notb
cwtl
jl,pn
fldcw
pop
pop
repnz
data16
jmp
mov
sahf
mov
roll
mov
leave
js
js
mov
in
pop
filds
call
push
pusha
cmc
repnz
pop
and
mov
repnz
xchg
and
sahf
dec
mov
mov
fnstsw
fldt
lret
xchg
dec
subb
mov
xor
addr16
jg
cltd
mov
dec
adc
cmp
pop
add
adc
lea
mov
jns
jo
ds
negb
jl
xchg
outsl
jns
inc
push
scas
aam
jle
not
push
sar
addr16
mov
into
lahf
xor
sbbb
dec
xor
mov
fimuls
or
out
jmp
pop
nop
fdivrp
mov
inc
dec
sub
test
sbb
sbb
dec
lock
in
mov
jl
pop
dec
and
leave
pop
mov
adcb
push
adc
push
push
out
jg
xchg
inc
roll
ss
clc
and
xor
aad
addr16
pop
xchg
sub
popa
in
clc
mov
mov
pop
mov
imul
movsl
sub
and
rclb
push
xor
push
push
outsl
xlat
mov
insb
je
nop
cmp
mov
mov
cmp
out
cld
out
sbb
pop
inc
shrl
pushf
mov
pop
lcall
scas
mov
gs
pop
xrelease
rcrb
jns
pop
aam
psubq
add
mov
cmpsb
les
pushf
ficoml
and
ret
fcomps
lret
sahf
push
sbb
pop
jl
push
jno
adc
sub
sbb
xor
mov
test
movsl
es
lock
mov
mov
adc
push
mov
addr16
jbe
repz
sbb
js
and
rcll
fwait
cmp
xor
mov
je
lret
fisubl
rolb
js
xor
clc
inc
shlb
pop
pop
cmp
add
push
mov
stc
push
xchg
push
xchg
cs
in
leave
iret
sbb
adc
addr16
lahf
push
dec
cmp
sub
add
sub
add
imul
orb
sbb
sti
cli
push
insb
call
adc
shr
cmp
pop
mov
ss
or
mov
mov
in
stc
push
cli
push
fldcw
mov
sbb
jno
sub
xchg
xchg
cmp
jo
adc
mov
add
push
fnstsw
sub
jno
pop
push
and
pop
pop
mov
mov
push
add
sbb
xchg
jl
fiaddl
jmp
sub
push
dec
fdivr
rorl
fwait
pop
popf
dec
adc
fnsave
xchg
lods
loop
sub
mov
add
adcb
fwait
rorl
jp
test
loop
mov
sbb
out
sub
out
or
lods
test
jo
lock
adc
rclb
push
mov
xor
mov
shlb
fwait
sti
enter
stc
aam
fisttpl
into
shll
pop
popf
scas
push
out
sbb
sub
jp
xor
sahf
mov
or
xchg
fists
inc
cmp
push
push
mov
xchg
loope
in
cmpsb
pop
insb
jbe
aas
rcll
testl
out
add
xchg
cwtl
xchg
push
or
push
into
repnz
pop
add
inc
enter
add
push
xchg
int3
stc
adc
add
push
or
and
stc
cwtl
scas
test
les
ficompl
mov
adc
scas
xlat
inc
xchg
or
int
ljmp
pop
xchg
out
je
pop
loopne
shll
jg
mov
scas
sub
sub
andl
repnz
test
push
dec
adc
pop
fs
adc
add
sub
mov
ds
jle
data16
jp
lods
sub
sub
pop
lret
sbb
sbb
cld
fwait
icebp
mov
push
lock
cli
mov
stc
jle
mov
push
dec
mov
rorb
push
adc
xor
and
icebp
jne
mov
cmp
fwait
or
push
mov
cwtd
leave
and
addl
mov
mov
push
push
jo
xor
lods
shrb
in
rorb
pop
loopne
cli
push
push
sbb
std
es
pop
shr
pop
lods
out
shr
gs
cmpsl
insb
or
pop
xlat
imul
into
jp
add
fsts
sbb
clc
shr
or
shll
enter
jmp
mov
jno
jnp
fsubrl
test
mov
mov
scas
xor
outsb
movsl
ret
sbb
ds
test
out
ss
jge
mov
mov
out
std
fwait
jo
jo
sub
xor
movsb
clc
mov
out
push
push
scas
xchg
lahf
pop
pop
adc
lret
cmpsl
jbe
inc
loope
sbb
jb
jmp
fwait
ret
arpl
mov
addr16
mov
push
clc
insl
dec
sub
ja
fs
clts
jne
inc
mov
mov
das
cmpsl
push
xorl
mov
jbe
xorb
push
rorl
mov
mov
outsb
fs
and
xor
loope
mov
mov
iret
cmpsb
dec
das
dec
test
sub
add
push
xchg
hlt
xchg
int3
push
insl
or
xor
ret
push
lock
pop
mov
test
std
sbb
into
mov
or
dec
les
xor
and
and
aaa
jp
std
scas
push
jo
sub
std
jp
div
in
bound
mov
mov
ss
cwtl
push
into
addl
sahf
test
jb
test
xor
xor
leave
addr16
outsb
dec
aam
fmull
pop
add
ds
mov
sub
or
push
dec
mov
adc
adc
rolb
loopne
lock
decb
mov
adc
stc
pop
fwait
jg
dec
mov
add
bound
aas
lcall
rcl
daa
fistpl
ja
in
nop
push
sub
cmp
inc
mov
gs
pusha
aad
pop
shl
sub
jmp
sbb
jg
mov
or
xor
mov
cld
adcb
push
int
pop
cmp
mov
popa
mov
rol
mov
jge
in
xor
jne
imul
dec
sub
jo
push
ret
sar
pop
xor
mov
dec
jnp
icebp
xchg
loope
outsl
test
loop
into
lea
lods
outsb
fs
loopne
shll
jp
ret
jns
testl
jnp
cltd
les
jecxz
lds
adc
inc
mov
ficoml
bnd
icebp
xor
xor
xchg
and
mov
dec
hlt
pop
maskmovq
notl
or
inc
and
fsubrs
popa
or
fistpll
pop
cmc
mov
push
negb
es
es
orl
jg
jecxz
push
xchg
call
lahf
mov
scas
push
adc
loope
outsl
iret
xchg
rcrb
xor
mov
scas
int3
gs
inc
andb
xchg
xor
mulb
bound
lock
in
andl
or
ds
sbb
sub
mov
lcall
push
sbb
sti
pop
push
idiv
fstpl
mov
movsl
test
cmpsl
push
adc
loopne
inc
mov
aam
daa
xor
add
test
je
lret
outsb
push
outsb
push
xchg
int3
out
dec
mov
aam
pop
jnp
mov
addr16
push
jne
pop
andl
jo
adc
into
pop
in
or
outsl
mov
fs
stos
push
xor
and
fdivr
jae
cmp
hlt
shlb
into
or
loope
leave
sbb
int3
neg
jne
imul
push
cld
mov
sbb
in
xor
xchg
xor
test
xor
push
mov
movnti
xchg
mov
into
jo
push
sbb
sub
lea
call
cmp
outsb
stos
outsb
mov
loop
and
mull
scas
mov
out
push
jo
jno
in
adc
dec
ja
pop
fmuls
cltd
sub
and
dec
add
popa
sub
pop
shlb
cld
sub
arpl
push
jnp
dec
rcll
lea
lcall
mov
js
ret
mov
add
jmp
push
lret
movsb
mov
jb
loopne
mov
iret
mov
pop
push
add
imul
mov
pop
lock
xor
jo
xor
mov
push
dec
movsl
pop
sbb
pop
dec
mov
mov
jo
ret
lods
test
aaa
ret
xor
pop
rcll
scas
sub
leave
je
xor
push
call
out
xchg
fs
sti
push
xor
icebp
mov
bound
jge
and
leave
sti
decl
in
pop
sub
jne
lods
in
pushf
fidivs
clc
scas
enter
les
cmp
pop
cmpsl
jmp
out
and
stos
push
leave
pop
inc
leave
xchg
fadds
in
pusha
imul
lock
sti
adc
in
mov
int
stos
jne
pop
test
int3
jns
pop
icebp
xor
add
adc
lea
into
nop
mov
pop
inc
dec
inc
stos
sarb
pop
adc
mov
cltd
fadd
es
sti
leave
push
cmpsb
adc
pop
aad
and
hlt
mov
stos
movsl
sub
repz
jne
pop
stos
xchg
sub
out
jl
nop
out
cs
stos
mov
mov
subb
adc
inc
cmp
jecxz
mov
fadds
inc
rcrl
outsb
andl
dec
pop
mov
arpl
push
call
push
sbb
aad
mov
test
and
fcom
xor
lahf
in
std
jb
or
ret
int
mov
push
xchg
stos
insl
push
lcall
clc
movl
xchg
mov
add
push
je
add
in
xchg
cmp
les
addr16
mov
popa
mov
or
pushl
movsl
cld
mov
xor
arpl
push
daa
mov
push
pusha
and
fbstp
mov
inc
popa
pop
ljmp
mov
ja
out
mov
aad
pop
outsb
test
insl
adc
in
sbb
popf
push
cmc
adc
mov
add
ljmp
lods
clc
fcoms
add
int
rcll
sbb
cmc
mov
jge
mov
aam
subb
mov
call
test
mov
cmp
stc
pop
int
stc
test
dec
jnp
clc
loopne
lds
mov
popf
js
clc
sbb
popa
mov
std
sub
cmp
xor
in
or
pop
lea
mov
in
fstl
out
ljmp
inc
sub
mov
daa
ret
adc
out
cmp
inc
jp
mov
inc
add
lods
js
fadds
lret
xor
cmp
ret
lret
cwtl
ss
scas
out
inc
mov
iret
movsl
int3
mov
int3
divb
adc
lret
lcall
jmp
mov
fnstenv
scas
das
mov
mov
ja
xchg
ss
xchg
enter
clc
sub
sub
cs
gs
movsb
out
push
in
out
scas
or
cmc
cwtl
std
xchg
int3
pop
vpandn
adc
cmp
add
icebp
gs
jmp
lods
mov
enter
les
cmpsb
jp,pn
add
dec
mov
popa
pop
jne
sub
mov
and
imul
insl
sti
and
jle
jmp
ss
mov
add
sub
imul
jle
nop
mov
xchg
sti
or
jle
add
xor
scas
dec
mov
icebp
push
ja
call
xor
and
add
xchg
out
jnp
data16
inc
out
jmp
or
std
inc
je
int
sbb
jne
ret
or
mov
jmp
add
test
rcrb
adc
sub
push
repz
push
xor
daa
or
add
inc
or
add
sub
bound
lret
in
mov
inc
mov
xor
or
sub
inc
xor
xchg
in
sahf
shr
shrb
mov
icebp
add
mov
mov
test
push
test
adc
sbb
cmp
outsl
push
pop
std
out
sbb
pop
push
inc
int3
pop
dec
rorb
je
subb
xor
sbb
test
cs
shrl
leave
sbb
test
leave
mov
mov
test
add
dec
sub
dec
sbb
jge
ret
insb
js
xchg
sbbl
call
jnp
aas
lret
push
jne
cld
push
call
adcb
es
in
outsb
arpl
dec
cmp
push
jns
aad
add
mov
ja
lea
xor
imul
adc
pop
xchg
mov
test
lcall
xlat
sub
jns
fdivs
fwait
dec
cmpsb
rcll
and
outsb
lds
cmp
jnp
test
and
aam
mov
in
pusha
pop
es
shlb
loopne
xchg
repz
inc
adcb
mov
pushf
fwait
aas
inc
sbb
orb
dec
mov
mov
or
cmp
inc
dec
movsb
and
dec
sub
ja
and
ret
xchg
test
mov
std
push
sub
sbb
cmpb
inc
xor
cmp
sbb
arpl
pop
in
xchg
in
add
and
rcll
sub
cmp
add
add
or
popa
pop
hlt
sub
test
push
jne
jle
fs
in
cmp
adc
mov
nop
pop
loope
ds
loop
inc
movsl
mov
sub
and
push
push
add
sub
dec
mov
adc
shrb
sarb
adc
and
adc
pusha
movb
or
lcall
js
xchg
popa
add
pop
in
cli
sbb
cltd
dec
jge
insb
mov
cs
mov
pushf
xorl
cmp
test
rorl
xchg
jno
xchg
add
pop
loop
push
mov
pop
insb
test
mull
in
pushf
lcall
mov
gs
sarl
add
push
jae
in
filds
movl
xchg
lret
inc
mov
mov
subb
rorb
cs
pop
js
div
jns
sub
hlt
xchg
mov
int
fdivs
sbb
sub
rorb
dec
sbb
lret
lahf
ljmp
cmp
xchg
sub
cmpb
add
loop
stos
out
stc
mov
inc
mov
hlt
jecxz
push
sbb
sbb
movsb
sbb
iret
aam
jl
movsl
sub
add
clc
sub
pop
repz
sti
mov
push
sti
ret
nop
mov
movsl
clc
adc
std
popa
or
mov
mov
lods
inc
cld
pusha
lahf
cltd
mov
sbb
popf
push
mov
cmpb
jno
jb
iret
jae
mov
arpl
addb
movsl
inc
sbb
xor
aad
inc
into
add
jle
lret
out
sahf
xchg
sti
call
mov
add
popfw
jb
ret
jae
adc
outsl
es
dec
leave
adc
testl
jno
inc
mov
sahf
shl
fs
xlat
mulb
fxtract
push
push
cmp
cmpsl
mov
mov
sbb
call
fwait
adc
and
popf
loope
das
or
fidivrs
push
xchg
es
jnp
ret
add
scas
inc
insb
in
sbb
jp
jno
inc
popa
jge
push
movsl
das
ss
mov
xor
mov
adc
or
and
xlat
dec
idiv
and
gs
sbb
push
add
mov
cmp
inc
sbb
arpl
push
sbb
sarb
mov
sahf
test
mov
pushf
out
repz
loope
jge
jl
add
enter
pop
lret
test
cmp
sbbb
pop
jp
push
sti
add
cmp
sub
out
aas
pop
mov
es
loop
mov
inc
test
push
inc
stos
fidivl
gs
and
aas
icebp
or
cmp
mov
push
es
data16
mov
std
push
jge
push
dec
push
mov
cwtl
testl
int3
and
hlt
stos
imul
cmp
xor
popaw
iret
and
mov
mov
out
mov
cmp
xchg
push
dec
xlat
push
sti
or
pop
aaa
xor
outsl
in
dec
test
mov
into
pop
dec
jge
stos
inc
push
ss
xor
mov
xchg
test
jne
jne
mov
cmp
cmp
push
inc
mov
nop
ret
aam
xchg
lahf
jmp
adc
int
add
call
data16
jl
xchg
fadds
pop
imul
and
adc
xchg
jno
and
sbb
fists
and
movsl
push
pop
adc
add
test
stc
call
xchg
adc
and
decb
mov
xor
sti
xlat
push
jne
and
mov
fidivl
lock
push
test
dec
mov
jge,pn
mov
adc
mov
jne
jle
mov
push
sub
mulb
cltd
arpl
xchg
xlat
push
enter
mov
jle
fldt
das
push
out
sub
std
je
les
xlat
icebp
scas
rcll
out
insl
mov
adc
aas
mov
and
dec
mov
cmpb
ja
in
mov
push
pushl
push
push
xor
lret
sbb
mov
iret
ret
sub
in
add
aam
fisubrs
mov
inc
xchg
cmp
stos
jle
insb
lahf
cmpsl
in
sbb
pop
nop
mov
inc
mov
xchg
int
mov
repnz
out
jae
mov
sti
lahf
jmp
cli
xchg
jl
outsb
fwait
fwait
imul
sbb
xchg
add
push
mov
je
mov
mov
mov
push
push
mov
add
hlt
adc
hlt
fnstenv
je
mov
jp
ja
mov
fstl
stc
mov
lahf
mov
fldenv
addb
jbe
repnz
test
inc
mov
sbb
push
xchg
cld
jmp
push
stos
xor
mov
mov
icebp
sbb
dec
fcompl
pop
mov
push
inc
mov
decb
loopne
data16
jb
lret
push
fld
mov
push
cli
jecxz
inc
add
xor
mov
jge
leave
out
lea
xchg
incl
add
aam
dec
out
mov
mov
aaa
dec
dec
cmp
scas
out
and
je
adcb
xchg
xor
mov
mov
pop
and
push
mov
jl
add
add
rcll
xlat
insl
xchg
add
sub
push
fwait
repnz
push
or
mov
mov
cmp
sbb
sub
shr
inc
and
iret
imul
fsts
push
xor
sbb
das
push
xchg
cwtl
rcrb
push
sarl
jl
outsb
push
test
jg
adcb
or
sti
pushl
stos
jl
inc
mov
in
sbb
std
mov
cmp
xchg
or
in
xor
ss
addr16
aaa
cmpsl
lods
xor
into
sti
jbe
xchg
out
outsb
inc
inc
dec
push
int
sub
xor
ret
and
fldcw
cmp
mov
iret
pusha
jge
push
inc
test
mov
and
fsubrs
adc
insb
pop
cmpsl
repnz
mov
jecxz
inc
adc
xchg
fbld
jmp
lcall
dec
cmpsb
mov
push
sbb
decb
adc
cmp
push
adc
push
inc
push
negb
mov
cmp
mov
xor
mov
push
inc
push
xchg
mov
xchg
roll
addr16
jb
mov
mov
xor
sbb
mov
mov
mov
mov
mov
mov
sbb
xchg
adc
and
cld
jge
js
arpl
dec
or
icebp
cmp
fmuls
lcall
movsl
jo
push
cli
stos
inc
xor
mov
push
dec
clc
mov
push
xlat
shll
cwtl
mov
adc
arpl
int
pop
aad
lods
in
inc
jae
movl
shl
or
push
sahf
and
movsb
popa
and
or
push
jp
sub
cld
mov
pop
jle
lcall
cmpsb
sar
popf
sarb
or
int
mov
sahf
inc
notl
jge
aam
fsubrs
cmp
in
out
fisttps
pop
push
test
mov
pop
das
pushf
stos
in
int
and
and
lds
ret
je
push
stc
push
mov
aam
aas
jg
aaa
push
inc
inc
loopne
jnp
data16
mov
sti
in
lods
dec
adc
pop
ds
fstps
ret
xchg
pop
mov
sbb
or
xchg
out
xor
mov
insb
mov
push
les
mov
mov
mov
sbb
and
and
jmp
lock
xchg
or
fsubrs
je
add
xor
lret
jecxz
mov
imul
fs
push
sahf
ror
insl
rcll
mov
mov
jle
stc
mov
stos
cmpsb
lret
cmc
in
scas
add
leave
imul
icebp
sbb
push
xchg
flds
fstl
jmp
or
lcall
jl
ret
movsb
xchg
fwait
add
std
add
daa
imul
xchg
or
stos
les
pop
aad
and
or
cltd
inc
cmp
xlat
xor
addl
inc
std
jno
ficomps
insl
sbb
jl
mov
jmp
hlt
or
sub
ret
in
cs
cmc
mov
sub
mov
lods
pop
loope
icebp
stos
popf
mov
std
pop
test
mov
mov
sub
push
call
pushf
jbe
mov
mov
dec
shl
jnp
cs
shrl
fcoms
lods
cmpsl
adc
fisttpll
xor
cmc
sbb
loopne
push
and
pop
jae
add
pop
je
lret
adc
and
mov
test
std
sub
icebp
outsl
dec
adc
mov
aam
dec
cmp
pop
lahf
adcl
dec
xchg
fcoml
dec
sahf
hlt
xchg
push
cmpsb
dec
xchg
imulb
xor
push
repz
mov
lods
lds
mov
int3
adc
and
popf
jecxz
or
enter
popa
and
xchg
jmp
sahf
jb
push
and
push
adc
lods
test
jle
sahf
mov
cs
bound
dec
xchg
adc
cld
mov
movsb
sbbl
or
and
test
or
sbb
bound
or
jg
fisttpll
divl
fidivs
jbe
pop
loopne
pop
outsb
sub
xorb
pop
sub
sbb
rcrb
es
adc
and
ds
mov
inc
mov
mov
gs
mov
xor
mov
movsb
pushf
or
aas
call
stos
sub
cld
cmp
pop
mov
mov
dec
pusha
add
es
jmp
mov
repnz
adc
jbe
mov
out
xchg
imul
in
dec
das
aam
inc
scas
in
cvttps2pi
adc
subl
push
loope
ljmp
insb
fistpll
out
sub
and
dec
mov
pushf
ss
jle
imul
cmpb
pop
rorl
outsb
das
xchg
cmp
push
insl
mov
loop
mov
cmp
ja
pop
in
cli
xor
movsb
lahf
adcb
scas
sub
dec
mov
push
push
sbb
sarl
xchg
adc
in
clc
xchg
lods
jle
enter
sahf
rclb
mov
cmp
jbe
dec
int3
mov
in
adc
scas
adc
pop
test
orb
xor
mov
testb
dec
jb
cmp
loope
xlat
xacquire
inc
xor
jl
sbb
jae
ret
in
pop
add
mov
inc
andb
xor
fisubrl
xchg
xchg
cli
xchg
pushf
bound
in
nop
sub
arpl
out
lret
sarl
cltd
jb
pop
aaa
jmp
pushf
xchg
sti
call
aad
mov
loopne
xlat
imul
adcl
sbbl
aam
pop
ret
xor
idiv
in
dec
cmp
sub
aad
sub
jge
bound
scas
and
popf
or
sarl
xlat
test
adc
jp
pop
xchg
mov
aaa
dec
push
ret
adc
mov
daa
xor
mov
mov
js
lods
shl
cwtl
cs
outsl
pop
les
mov
int
mov
pop
mov
add
mov
loope
xor
lcall
rolb
gs
decl
movsl
xchg
test
push
and
push
imul
pusha
push
lret
mov
out
xchg
cwtl
test
and
add
mov
js
inc
or
rcrl
jle
xor
mov
rorb
fmul
jmp
popa
jno
dec
enter
out
das
pop
push
es
lea
loop
in
push
push
lock
dec
cmpsb
outsl
cmp
push
clc
repz
mov
into
daa
lods
fistl
cmp
cmp
xchg
and
cmp
fwait
push
push
xchg
sarb
imul
lcall
pop
dec
add
xlat
and
and
mov
js
jle
repz
pop
sbb
xchg
inc
dec
sbb
movsb
jmp
js
sub
jo
dec
jecxz
adc
mov
mov
pushf
xchg
mov
cmp
mov
ds
push
movsb
sub
sub
jns
add
pop
test
pop
hlt
mov
inc
subb
mov
daa
sbb
std
loope
dec
xor
test
mov
out
cmp
loopne
xchg
test
mov
in
scas
insl
ret
aad
xchg
add
xchg
dec
imul
clc
jne
dec
add
jl
cmp
fdivrl
loop
or
cmp
cwtl
outsb
gs
add
jo
scas
pop
jge
add
repnz
cld
jo
mov
repz
lret
push
jbe
xchg
nop
jmp
xor
fdivl
es
mov
into
dec
scas
and
bound
loopne
icebp
mov
jne
fcomip
es
and
fisttpl
and
sub
jge
outsb
repnz
jbe
inc
cmp
daa
sbb
insl
sbb
rsm
add
dec
ljmp
lcall
jnp
cmp
scas
mov
in
pop
adc
cmc
lret
scas
mov
out
adc
ljmp
pmaxub
repnz
icebp
push
cmpsb
ja
sbb
and
popf
add
imul
aaa
pushf
mov
ror
mov
loope
rorl
sbb
lock
dec
daa
out
inc
int3
cmpsb
cmp
pop
jo
xchg
mov
lcall
push
ret
xor
pop
outsb
aam
js
ret
ds
lds
out
fmuls
bound
cmp
xchg
loop
xchg
mov
or
mov
add
jp
aas
fisubrl
mov
or
rorl
in
repz
cltd
cmp
mov
jns
daa
xchg
cmpsb
repz
addr16
scas
ss
out
sahf
fimull
leave
pop
adcb
push
mov
mov
dec
sbb
mov
roll
push
sub
lods
xor
test
mov
add
jb
xor
fs
arpl
aas
imul
adcl
mov
lcall
movsb
lret
mov
call
rorl
cmp
or
sub
jno
sbb
jne
lret
out
jecxz
dec
rcrl
stos
mov
lret
loopne
scas
cwtl
cmp
push
repnz
xchg
stc
add
out
popa
jp
sub
jecxz
xor
into
cld
ss
jmp
sbb
ret
inc
in
cmp
daa
into
in
dec
add
dec
sub
loopne
leave
lcall
and
or
hlt
cmp
ss
lea
rclb
addr16
lods
leave
sahf
and
insl
mov
test
mov
cltd
lcall
loopne
leave
sbb
sti
rcr
xor
jge
stc
xchg
jbe
out
movsl
jle
push
in
daa
jg
mov
sbb
mov
ds
stos
movsb
mov
adc
arpl
in
jns
jb
stc
cmp
sub
loope
xchg
and
out
fmuls
testb
shlb
mov
out
or
push
pusha
pop
sbb
push
clc
ds
cmpsl
adc
cmpsl
jnp
inc
sub
add
insb
out
add
fstpl
arpl
sbb
pop
push
mov
rorl
dec
add
out
jp
xchg
push
and
xchg
jle
fstpl
iret
push
jo
sarb
mov
cmp
in
cwtl
lods
jo
cli
movsb
ja,pn
lea
dec
repnz
mov
lret
jl
pop
pop
lret
sub
pop
pop
cmp
and
or
movsb
jmp
loopne
out
imul
mov
inc
fdivl
popa
mov
into
test
cmc
sub
aaa
push
cwtl
clc
int
inc
jns
jnp
pop
mov
out
in
aam
sub
adc
push
push
cmp
jge
lahf
pop
or
ret
pop
lods
push
or
les
lods
out
pop
xchg
insl
fs
mov
enter
adc
cmp
incl
dec
imul
es
push
mov
arpl
sub
loopne
sub
push
xchg
bound
or
sub
aas
cmp
or
mov
scas
jno
sar
adc
mov
dec
xlat
cwtl
dec
pop
rcll
mov
inc
xor
inc
xor
and
dec
data16
imul
in
adc
mov
cmp
loope
mov
dec
in
sub
in
cwtl
jmp
jecxz
dec
sbb
jae
push
mov
in
dec
mov
test
cmp
dec
add
jo
subl
lods
sbb
add
mov
cmp
outsl
ja
icebp
aaa
iret
add
aam
adc
xchg
stos
and
insl
push
or
xchg
idivl
imul
test
jl
or
and
cli
adcl
inc
outsl
jge
jo
outsl
int
ss
dec
sbb
pop
nop
mov
adc
decl
call
xchg
sub
xchg
ljmp
xchg
push
mov
push
sbb
repnz
pusha
inc
and
sbb
aaa
sbb
jne
imul
pushf
xchg
test
out
jmp
fisubrl
pop
hlt
and
mov
pusha
idivb
dec
cmp
cmp
out
hlt
gs
addl
lcall
push
dec
mov
adc
sbb
pop
scas
in
out
inc
jg
daa
sub
cld
addr16
pop
inc
pusha
jmp
push
out
xchg
pop
xlat
int
adc
loopne
jmp
cltd
and
ds
addr16
inc
out
clc
cmc
push
add
dec
leave
adc
adc
data16
cmp
imul
mov
lods
fistpll
and
push
in
adc
mov
test
xchg
out
mov
faddl
das
xor
pop
fcom
sahf
ret
pushf
mov
push
adc
cli
add
mov
test
int
jmp
lea
je
push
lea
jmp
fsubs
jae
in
fnstenv
xor
add
push
std
stc
push
cmp
jne
ljmp
add
into
popf
push
add
or
call
pusha
roll
out
dec
mov
mov
xor
jne
cmp
nop
lcall
mov
jg
int3
dec
cwtl
lock
cld
mov
mov
add
sbb
push
push
push
scas
les
mov
rcl
fildl
or
fwait
pop
jg
insb
cmc
xor
int
jno
out
dec
xor
mov
mov
mov
shlb
xchg
push
adc
xor
xor
mov
sub
jl
out
xor
icebp
adc
adc
sub
sbb
sbb
pop
sti
icebp
and
arpl
xor
xchg
pusha
ja
xor
test
into
lret
xchg
out
xor
sub
add
rolb
popa
lock
int3
dec
sahf
jg
cmpsl
es
and
ljmp
inc
dec
mov
adc
clc
mov
xchg
xor
lea
je
stc
stc
pushf
sub
pushf
cmc
mov
cmp
call
je
jae
cs
xlat
shrb
shll
test
fldcw
push
iret
in
fwait
aad
sbb
and
inc
adc
sbb
and
lock
pop
rcrl
or
or
dec
mov
into
jmp
lret
cmp
shlb
cmp
inc
int3
aas
cmpsb
cmp
andl
inc
inc
cmp
pop
in
jp
sbb
cwtl
pop
mov
in
notl
in
nop
aas
arpl
jecxz
scas
sub
lahf
adc
pop
dec
xor
aas
rol
fimull
out
movntq
repz
sbb
pop
movb
pusha
mov
cmp
jno,pt
pop
mov
iret
stos
jg
mov
sub
negl
mov
rcr
int
push
or
loope
dec
jmp
xchg
mov
cltd
jmp
stos
icebp
insl
cltd
jl
ret
mov
add
sahf
push
fimull
xor
mov
or
xchg
mov
and
test
add
loope
test
es
aas
fwait
in
movsb
shrb
lds
cwtl
add
inc
sub
mov
sbb
jl
inc
int
hlt
bound
pop
les
je
push
popa
movl
arpl
out
jbe
test
data16
je
mov
sub
icebp
lea
cmp
cld
mov
sub
dec
movsb
mov
inc
push
arpl
jns
add
or
push
cmpsb
sti
jmp
sbb
or
lret
adc
xor
pop
jo
ljmp
xchg
mov
nop
add
xchg
and
lahf
xor
shlb
mov
shrb
js
inc
fnstenv
push
loope
aaa
mov
mov
popa
mov
cmp
ss
push
ds
adc
push
loopne
mov
mov
mov
xchg
jo
out
fdivr
mov
pop
popa
sbb
add
sub
mov
ficoml
cmp
f2xm1
push
mov
mov
lods
notl
cld
enter
cld
xor
mov
rorl
xchg
cmp
cltd
mov
pop
sub
mov
call
movsl
idivl
xchg
nop
pop
hlt
add
xchg
insb
cmc
mov
imulb
adc
push
xchg
sbb
and
cmpsl
sbb
rorb
xchg
in
xchg
inc
repnz
fdivs
test
subb
sahf
in
xlat
repnz
push
jp
inc
pop
imul
mov
fdivrl
lret
test
dec
sbbl
cmp
push
xchg
sti
fucom
jbe
mov
fisttpll
andb
and
and
popf
fs
mov
push
push
cwtl
test
dec
push
mov
cs
or
icebp
repnz
mov
jecxz
es
std
out
mov
out
daa
and
sti
repnz
dec
daa
push
ljmp
les
sub
fstpt
loope
mov
add
cmc
pop
aam
sti
cmpsb
out
or
jne
jb
out
fiaddl
sbb
jne
mov
cmp
hlt
pop
mov
jb
movl
jmp
aad
nop
cwtl
or
sub
test
rorb
cwtl
out
mov
mov
loopne
xor
cmpl
inc
pop
sbb
add
cli
adc
xor
dec
es
pushf
rcrl
shlb
xor
hlt
jmp
cmpb
ficomps
fidivrs
inc
sbb
dec
ret
cwtl
js
xchg
adc
xchg
mull
jo
mov
ljmp
clc
sub
jmp
call
ret
sbb
mov
js
sub
in
push
mov
imul
sbb
push
neg
mov
inc
adc
fcompl
add
mov
inc
xchg
dec
lods
rcrb
mov
mov
test
cld
push
sub
xchg
add
jae
add
je
les
mov
mov
adc
test
sar
call
cmc
pushf
cmp
pusha
mov
lea
ja
dec
or
sub
sub
shrd
cmp
add
shr
bt
mov
sbb
sub
and
mov
bt
stc
test
test
repnz
pushf
pusha
pushf
lea
jne
movzbw
pushf
lea
movb
movsbw
cwtl
call
movw
neg
clc
sub
push
push
bt
neg
call
add
mov
mov
call
outsb
aad
xchg
adc
ljmp
jae
push
lret
ja
outsl
out
andl
xor
sub
xchg
test
xor
sub
pusha
jmp
mov
dec
fcoml
jne
outsb
outsl
cwtl
adc
jmp
or
add
push
or
jae
and
lcall
pusha
pop
out
in
mov
fwait
pop
adc
call
adc
jo
cmc
outsl
xorl
push
in
adc
inc
sub
imul
cmp
cmc
pop
lahf
dec
dec
mov
dec
dec
jecxz
loop
xor
sbb
fmul
xchg
rorb
clc
stc
pop
scas
jg
pop
push
gs
in
ret
inc
fcmovnu
loop
out
arpl
lea
mov
jle
push
pop
jmp
cmpsb
inc
xor
imul
outsb
orl
sub
and
test
outsl
stc
popf
movsl
or
shrl
cmp
adc
loopne
in
lret
test
jg
adc
shll
rclb
push
pop
rcl
out
test
sbb
shll
xchg
scas
popa
in
adc
push
pushf
inc
and
outsb
mov
jl
cltd
sub
sbbl
mov
aam
sub
push
loopne
popf
sahf
xchg
or
xchg
loopne
inc
ds
xor
pop
sub
lea
dec
mov
aad
xchg
push
mov
mov
not
pushf
mov
mov
movb
pushf
stos
pusha
call
lea
call
bsf
cmp
add
shld
pop
jp
bswap
bsf
pop
push
test
cmp
pusha
sbb
pusha
push
movb
jmp
sub
repz
add
ja
je
sub
sbb
rorb
dec
mov
mov
adc
inc
inc
fcmovne
mov
sarb
inc
sub
lock
xchg
sub
dec
js
scas
push
pop
pop
dec
and
jo
repnz
mov
scas
xorb
adc
dec
xchg
sbb
jmp
push
in
dec
mov
je
jge
scas
dec
aam
pop
lahf
adc
mov
mov
psubb
and
push
fdivp
pop
sub
jmp
ja
cmp
inc
cmpsb
jno
adc
or
adc
out
hlt
mov
mov
test
push
call
adc
ljmp
std
stc
pop
ret
call
lea
call
shr
add
xor
shl
xchg
pusha
mov
shl
aaa
seto
mov
test
call
add
cmc
jmp
movl
pushf
pusha
mov
lea
jmp
cmp
call
jmp
pusha
pusha
jmp
pop
ret
in
inc
adc
xchg
psllq
ret
arpl
pop
out
push
sub
jmp
mov
jae
dec
pop
inc
movsb
sahf
mov
adc
xchg
inc
sti
popa
jmp
push
repnz
inc
mov
and
into
outsb
fsubrl
jl
xchg
or
fwait
sub
inc
push
lods
cmp
mov
sbb
mov
sub
dec
mov
movq
pop
or
dec
lret
mov
xor
mov
push
sbb
sbb
xchg
imul
lods
adc
mov
mov
and
rorl
jne
xlat
pop
jb
es
aas
lea
in
movsb
lret
cmc
jge
in
out
dec
mov
mov
js
mov
mov
mov
shl
push
bt
add
bt
sub
js
sub
jmp
aas
mov
sbb
jo
mov
add
add
aad
sub
mov
inc
dec
add
bound
cmpsl
and
dec
adc
dec
arpl
inc
inc
lcall
push
xchg
jo
cmp
xchg
add
mov
pop
push
inc
push
push
dec
dec
dec
cs
insb
add
mov
or
pusha
movzwl
cmp
shrd
mov
call
in
sbb
lret
int
mov
jne
lods
cmc
dec
mov
pop
or
fcmovnbe
into
ljmp
out
xchg
add
lock
push
mov
mov
cmpsb
add
or
jbe
orb
stc
test
push
mov
sub
push
pusha
pusha
call
movsbw
inc
dec
cmp
mov
push
and
stc
add
pusha
pusha
movb
lea
jmp
xlat
and
add
jno
cmp
int
dec
aam
stc
or
xchg
scas
rolb
push
or
sbb
sbb
inc
rcll
sbb
inc
mov
adc
sub
les
jae
push
inc
ret
filds
push
mov
pmaxsw
dec
enter
imul
fcoml
aas
xchg
icebp
dec
mov
mov
ljmp
push
sub
push
cs
jle
mov
lcall
jge
les
movsl
push
adc
jae
into
add
push
mov
rcll
aaa
loop
jo
add
sub
mov
xor
aad
das
movsb
adc
fdivs
out
cmp
lret
fnsave
xchg
add
popa
les
mov
mov
pop
pushf
xchg
pushf
pusha
jmp
push
sbb
jmp
add
arpl
add
xchg
or
add
arpl
add
decb
add
arpl
add
or
push
decb
add
arpl
add
or
pop
decb
add
arpl
add
or
add
or
arpl
add
pushf
or
add
or
push
cmp
add
or
dec
arpl
add
inc
or
js
or
push
arpl
add
decb
add
or
mov
decb
add
or
ljmp
add
or
cmp
add
arpl
add
or
mov
arpl
add
cmp
add
arpl
add
pushf
or
add
add
enter
ret
push
xor
pushf
stc
jmp
cmp
mov
pushf
mov
sbb
pushl
push
pushf
pushl
lea
mov
movb
pusha
push
lea
jmp
leave
adc
xor
add
inc
xchg
add
jge
lea
cmp
out
pop
cmp
jnp
and
mov
xor
pushf
rcl
stos
xor
or
cmp
pushf
sub
outsb
xor
pop
ficoms
shrb
and
repnz
dec
mov
mov
mov
xor
scas
mov
lret
rcrl
inc
jae
imul
fwait
xchg
xor
mov
outsb
cs
repnz
daa
addb
push
cld
insl
lods
xchg
sbb
mov
mov
loope
iret
movsl
xchg
jns
push
mov
cld
inc
scas
xor
sbb
mov
daa
push
mov
adc
mov
loopne
push
rcl
jb
cmpsl
call
pusha
pushf
movw
lea
pushf
pushf
movw
lea
jmp
lret
lea
sub
jl
mov
mov
sahf
xor
dec
stos
es
xchg
add
lret
in
mov
dec
inc
xor
mov
movsb
jecxz,pn
fmuls
mov
sbb
bound
cmc
push
ret
jbe
sbb
and
add
or
mov
lds
sub
loopne
les
and
ss
inc
negl
pushf
lock
mov
push
in
pusha
stos
xor
jo
mov
cs
jb
xchg
fnstenv
lea
dec
in
lea
mov
dec
shlb
std
fimuls
cwtl
aam
adc
xchg
js
daa
xor
repnz
xchg
stos
adc
mov
or
mov
push
cmp
fmuls
push
mov
dec
mov
jle
movzbl
pusha
movsbw
mov
pusha
xchg
jmp
mov
lea
jne
not
lea
movb
jmp
jmp
fwait
cwtl
in
hlt
jp
cmp
shrb
mov
sbb
sbb
dec
xor
or
mov
call
mov
aam
cltd
mov
push
mov
ja
mov
xchg
mov
fmull
sbb
popa
jns
dec
filds
xchg
dec
cld
inc
into
pop
xorl
sub
testb
push
ret
push
lods
call
push
pop
addl
mov
mov
fidivrl
push
into
ljmp
pop
add
test
aaa
mov
xchg
int
scas
cwtl
in
sahf
shll
inc
cmpsl
ror
addr16
lcall
cld
sarl
sbb
inc
jmp
stos
jp
jne
push
push
pusha
mov
push
jp
popl
scas
xor
add
inc
push
fimull
js
inc
xchg
jae
repnz
das
stos
or
push
ret
ds
lret
setb
push
lea
jmp
adc
test
pusha
bt
pusha
sub
stc
stc
call
cmc
sub
movzbl
setge
lahf
pusha
lea
lea
jp
pushf
pushf
lea
call
rol
push
rcl
sar
add
btr
movsbl
mov
btr
cmp
btr
bts
mov
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cmp
movl
pusha
push
pushf
pushl
lea
jmp
aam
cmp
loope
fs
in
jne
jns
insl
shll
imul
xor
in
into
out
or
or
add
sbb
jle
add
jecxz
leave
nop
push
adc
pushf
ficoms
dec
cli
sbb
push
or
jnp
sbb
aam
das
ror
add
aaa
mov
dec
xor
shrl
push
cmpsl
sbb
add
push
aam
push
les
hlt
push
popf
scas
sub
cmp
adc
dec
jnp
repz
inc
push
push
or
mov
sub
test
or
pusha
call
or
push
push
jg
mov
pop
mov
cmp
pop
arpl
loope
xor
and
les
jo
insb
aad
repnz
lods
cli
lods
fcom
jmp
in
les
movsl
cmp
dec
cltd
in
add
mov
sbbb
loope
pushl
mov
pusha
lea
jmp
test
inc
popa
inc
mov
int3
push
fcomps
add
sub
push
enter
call
jnp
pop
jae
test
daa
aad
daa
cmp
stos
mov
shlb
cmp
push
mov
hlt
jg
jns
mov
fwait
inc
aaa
inc
pop
clc
mov
add
jne
mov
cmc
cmp
pushf
lea
ja
clc
cmc
pusha
sub
call
pusha
bt
push
shr
test
pusha
test
call
call
call
mov
pushf
pushl
push
lea
jmp
jmp
into
and
pop
push
push
icebp
pop
int
in
mov
imul
stos
add
ds
arpl
orl
mov
dec
int3
cmp
pushf
and
xor
push
mov
jns
shrl
mov
icebp
sub
xlat
jb
adc
fwait
mov
add
mov
sbb
aas
movsb
sbb
addl
fists
push
fldt
test
mov
jo
dec
mov
mov
frstor
ljmp
clc
cbtw
das
mov
clc
pushf
stc
sub
movw
add
push
pushf
call
mov
pushf
lea
jmp
pusha
btr
clc
movzbl
mov
and
add
jmp
cmp
add
stc
bt
pusha
pushl
popf
movw
lea
jmp
xchg
not
mov
jmp
pusha
test
pushl
not
mov
movw
pushf
sub
clc
and
jmp
mov
push
lea
jmp
pushf
mov
jno
push
mov
call
jmp
push
pushf
pushl
jmp
dec
movb
cmc
cmc
clc
ror
clc
clc
test
stc
xor
jmp
mov
pushf
lea
jp
pusha
pushf
popl
jmp
pushf
mov
pushf
pushf
popl
call
dec
shl
neg
movzbw
inc
add
and
shr
shr
lea
and
rol
neg
sub
btr
btr
mov
shl
sar
sar
bsf
mov
movzbw
pusha
shld
rol
add
call
lea
jbe
pushf
pushf
mov
movw
movb
pusha
lea
jmp
mov
push
pusha
lea
jmp
shl
mov
rcl
cmp
mov
pushf
clc
clc
add
movb
push
pusha
pushf
mov
movw
mov
movb
lea
jmp
pushf
mov
pushf
pushf
pushf
mov
jmp
mov
pusha
call
mov
pushf
lea
jmp
cmp
mov
mov
call
call
jmp
call
sub
movzbl
pop
bsf
push
add
mov
pushl
cmc
movb
call
movw
call
pusha
mov
pushl
pushl
jmp
pusha
mov
sub
call
inc
mov
ror
mov
clc
sub
test
call
mov
lea
jb
mov
jmp
mov
movb
pushf
lea
jmp
movb
pushf
mov
pusha
mov
push
lea
jmp
push
pop
push
aam
mov
clc
jmp
cmp
pusha
sub
cmp
cmp
jmp
mov
call
push
pushf
lea
jmp
jmp
shl
rcr
mov
test
stc
push
movb
sub
jmp
pushf
clc
clc
test
pushl
popl
call
cmc
pusha
or
pushf
jmp
pushf
popl
call
pushl
mov
pushf
mov
movb
pushf
movb
mov
lea
jmp
aam
btc
test
mov
jmp
mov
aam
aaa
aaa
mov
jmp
mov
pushf
mov
lea
jmp
pushl
popl
pusha
lea
jmp
setl
movzbl
cmc
push
xor
sar
sub
mov
ror
sar
sub
ror
rcl
rcr
btr
neg
setp
ror
ror
sub
jne
stc
rcr
add
bswap
bt
bts
sub
not
rcr
pushf
movzbl
pushf
call
pushf
cmc
add
call
stc
sub
jmp
call
mov
test
bt
cmc
add
pushf
call
lahf
mov
xor
neg
btc
mov
call
pushf
popl
call
mov
call
mov
pushf
pushl
mov
lea
jmp
xchg
pushf
jmp
daa
shl
mov
pusha
mov
bt
sub
jmp
call
not
movsbl
call
pusha
call
mov
cwtl
push
call
pusha
mov
jmp
jmp
shld
cmp
neg
push
not
seto
movzbw
dec
mov
inc
or
sub
inc
not
adc
add
shld
movzbw
bswap
dec
mov
pushf
add
pushf
pusha
movw
pushl
mov
push
movb
pushf
lea
jmp
call
mov
pushf
movb
pushf
pushf
lea
jmp
push
mov
pushl
pushl
lea
jmp
pushl
rep
xor
or
xadd
sub
mov
and
mov
cmp
cmc
std
pushl
popf
push
push
lea
jmp
mov
jmp
push
movzbl
pushf
pushf
pushl
dec
jmp
shl
call
not
test
push
cmc
stc
not
test
push
clc
cmc
and
pushf
pushf
mov
pushf
call
mov
stc
clc
add
jmp
clc
and
shr
notl
bsf
aam
clc
jmp
mov
pushf
mov
pushf
movb
lea
jmp
cwtl
sar
rdtsc
cmp
clc
bt
pushf
sub
pushl
mov
pushl
lea
jbe
mov
push
lea
jg
mov
push
pusha
pusha
mov
lea
jmp
ror
movzbw
mov
not
xor
stc
mov
cmp
jmp
neg
call
push
mov
movb
lea
jmp
jmp
jmp
sbb
shld
aam
mov
bt
test
stc
test
add
pusha
pusha
pushf
popl
pushf
call
sbb
rcr
push
rol
mov
cmc
setnp
xadd
btr
pop
test
pop
pusha
add
btr
mov
ror
mov
and
shr
sar
add
pushl
popf
cwtl
lahf
bswap
movsbw
mov
pop
pushf
mov
lahf
mov
setne
movsbw
movsbw
mov
mov
jmp
add
mov
call
bt
jmp
pushf
pushl
popl
mov
mov
mov
lea
jmp
add
movl
push
pushl
mov
lea
jmp
mov
mov
push
pusha
jmp
jmp
pushl
xchg
pushl
call
add
inc
not
and
lea
btc
mov
pushf
pushf
add
pushf
mov
pushf
push
lea
jmp
pusha
mov
push
pushf
push
lea
jmp
mov
stc
jmp
jmp
pushf
pushl
dec
call
pushf
mov
movb
call
clc
stc
pushl
popf
push
movb
mov
pushl
lea
jmp
cmc
push
mov
push
stc
jmp
movb
pushf
mov
mov
mov
pushl
pushl
mov
pushf
movb
movb
push
lea
jmp
pushl
popl
pushf
movb
pushf
lea
jmp
jmp
pushf
jmp
clc
mov
test
sub
movb
mov
mov
pushf
lea
jne
jmp
cwtl
jmp
jmp
call
push
call
lea
ja
shld
mov
shl
stc
bsf
lea
pusha
sets
lea
jle
sub
push
sar
lea
sar
shrd
adc
and
shl
dec
xor
sub
bswap
mov
movzbw
mov
call
call
xor
stc
call
jmp
pushl
jmp
xchg
pushl
lea
jg
pushf
movl
call
clc
ror
bswap
mov
xor
movsbw
rol
add
push
bswap
pusha
inc
rcl
bsr
adc
sub
neg
jmp
push
pushf
jmp
pushl
popl
pushl
lea
jmp
push
call
mov
push
pushl
mov
pushf
pushl
lea
jmp
btc
bts
rol
jbe
and
movsbw
cmp
adc
lea
mov
clc
pusha
add
pusha
push
mov
pushf
mov
pushf
movb
lea
jmp
pushf
mov
pusha
pusha
jmp
push
pushf
pushl
popl
pushl
pushf
lea
jmp
add
pusha
jmp
mov
movb
mov
pushf
lea
jmp
clc
sub
call
push
pusha
pusha
lea
jno
push
push
call
call
pushf
pushf
mov
pushf
mov
call
sub
call
push
pushl
popl
push
mov
movb
lea
jmp
push
mov
cld
cld
call
call
test
pusha
cmp
test
not
pusha
clc
bt
pushf
not
call
pusha
or
cmp
xor
mov
pushf
push
inc
pushf
push
call
mov
mov
movzbw
mov
pushf
call
push
movw
mov
call
mov
mov
push
mov
call
add
movl
pushf
mov
pushf
mov
mov
lea
jmp
mov
cmp
jmp
pusha
push
mov
xchg
movsbw
mov
movb
movzbl
mov
push
bswap
mov
lea
jmp
pushf
popl
pushl
pushl
pushf
pushl
popl
push
lea
jmp
not
mov
xor
neg
add
adc
neg
movzbw
or
xor
inc
pusha
mov
movl
sub
jnp
shl
push
stc
shr
cmc
pushf
jmp
shl
btc
mov
add
rcr
stc
sub
lea
movzbl
jmp
call
push
pushf
pusha
pushl
popl
movb
mov
pushf
lea
jmp
add
add
lea
movsbw
mov
jmp
mov
cmc
bt
jmp
pusha
lea
je
push
mov
mov
jmp
pushl
popl
pushf
movb
lea
jmp
inc
inc
das
mov
mov
mov
sub
mov
pushf
movw
bt
add
pushf
clc
pushl
shld
jmp
mov
movl
mov
pushf
lea
jle
push
pusha
pusha
pushl
lea
jmp
mov
movb
push
pushf
movw
lea
jmp
ror
bts
rcr
sar
neg
push
push
not
dec
pusha
setne
inc
stc
sub
movsbw
setnp
jmp
jmp
pushl
popl
pushl
pushl
mov
pushl
lea
jmp
test
setnp
mov
sbb
stc
not
mov
bt
sub
stc
shr
call
cmc
cmp
sub
jmp
movzbw
push
call
mov
push
pushf
pushl
mov
lea
jmp
jmp
push
sub
test
movw
call
pusha
movb
pushf
mov
call
rcr
test
mov
not
mov
bt
mov
bt
pushf
stc
call
pushf
mov
mov
pusha
mov
movb
lea
jmp
pushf
pusha
pushl
mov
push
jmp
mov
movb
mov
lea
jmp
jmp
pusha
mov
pushf
popl
pushl
jmp
stc
clc
cmp
stc
add
push
call
pusha
pusha
jmp
mov
pushf
jmp
call
call
mov
pushl
lea
cpuid
cmp
clc
sub
clc
cmp
cmpl
pushf
mov
pushl
mov
mov
mov
mov
pushf
mov
pusha
pushf
lea
jne
push
mov
pusha
test
movb
and
push
bt
cmp
mov
lea
jne
btc
xorb
setl
pop
pushf
movl
pushf
lea
jmp
sub
jmp
movzbl
jmp
mov
movl
mov
lea
jmp
mov
push
pushf
jmp
pusha
push
rep
movzbw
not
mov
rcl
adc
mov
jmp
mov
pushf
mov
mov
lea
jmp
lea
jl
mov
pushf
movb
pusha
pusha
lea
jmp
jmp
inc
pushl
pushl
decl
jmp
mov
pushf
mov
pushf
pusha
lea
jmp
pushf
mov
mov
mov
lea
jmp
mov
movb
pushl
push
lea
jmp
pop
std
lea
lea
cld
jmp
cmc
bt
add
call
pushf
popl
jmp
pushf
popl
movl
push
movb
call
mov
std
mov
cld
lea
jle
push
pusha
rep
cmp
mov
btc
dec
movsbw
mov
cmp
pushl
popf
push
lea
jmp
btc
mov
rol
inc
sub
sub
mov
ror
pop
push
bts
neg
pushf
pushf
pop
pushf
dec
call
movb
mov
pushf
pusha
lea
jmp
movb
mov
pusha
pushl
ret
xor
rcr
sub
mov
pusha
add
call
call
clc
clc
add
movb
pusha
lea
jmp
pusha
mov
mov
pusha
push
movb
lea
jmp
das
mov
rcl
lea
mov
call
decl
push
lea
jne
jmp
push
mov
pusha
cmp
call
jmp
mov
jmp
flds
adc
cli
add
call
cmc
add
mov
add
fiaddl
adc
add
lock
add
sbb
add
or
add
jae
add
aam
add
ret
adc
add
jae
add
mov
lock
filds
adc
out
adc
faddl
adc
out
adc
add
ret
adc
in
adc
fadds
adc
flds
adc
repnz
inc
faddl
adc
add
or
add
call
fiaddl
adc
add
flds
adc
fadds
adc
cli
add
cli
add
fiaddl
adc
lock
pop
in
adc
cli
add
jae
add
fiaddl
adc
add
push
out
adc
out
adc
out
adc
fildl
adc
out
add
pop
fldl
adc
icebp
add
or
add
sub
add
fadds
adc
jmp
adc
flds
adc
out
adc
fadds
adc
loop
adc
lock
mov
icebp
add
sbb
add
xor
add
fprem1
add
mov
add
or
add
cli
add
pop
in
adc
fildl
adc
add
xor
add
fprem1
add
popa
flds
adc
fldl
adc
add
neg
add
pop
in
adc
add
xor
add
fprem1
add
lcall
adc
flds
adc
out
adc
faddl
adc
add
xor
add
fprem1
add
lock
xlat
flds
adc
fildl
adc
add
add
xor
add
fprem1
add
rcr
add
lcall
adc
faddl
adc
add
xor
add
fprem1
add
lahf
stc
add
lcall
adc
add
jb
add
aam
add
xor
add
fprem1
add
sbb
add
sbb
add
jb
add
mov
cli
add
dec
cli
add
xor
add
fprem1
add
sbb
add
mov
add
mov
add
dec
cli
add
or
add
dec
cli
add
xor
add
fprem1
add
loop
add
push
out
adc
fldl
adc
add
inc
faddl
adc
flds
adc
icebp
add
fprem1
add
loop
add
jb
add
jae
add
filds
adc
testl
adc
icebp
add
fprem1
add
in
add
sbb
add
inc
faddl
adc
fiaddl
adc
lock
popa
in
add
xor
add
fprem1
add
rcr
add
fiaddl
adc
fiaddl
adc
add
aam
add
xor
add
fprem1
add
add
mov
add
call
flds
adc
testb
jae
add
xor
add
fprem1
add
rcr
add
lcall
adc
fadds
adc
in
adc
cli
add
xor
add
fprem1
add
lahf
stc
add
fcomip
add
add
add
fiaddl
adc
filds
adc
icebp
add
fprem1
add
pop
in
adc
add
stc
out
adc
adc
cli
add
sbb
add
mov
in
add
push
out
adc
add
add
add
ret
adc
fadds
adc
loope
adc
testl
adc
out
adc
add
sub
add
sbb
add
inc
faddl
adc
testb
adc
add
cli
add
add
add
mov
clc
add
jge
add
lahf
stc
add
or
add
sbb
add
lahf
stc
add
sub
add
fiaddl
adc
add
xlat
flds
adc
flds
adc
add
fwait
jecxz
adc
repnz
jb
add
fiaddl
adc
repnz
or
add
rcr
add
or
add
pop
in
adc
testb
neg
add
call
fiaddl
adc
loop
adc
out
adc
add
or
add
loop
add
push
testl
adc
add
aam
add
popa
flds
adc
out
add
push
out
adc
add
call
fs
je
pusha
movl
mov
call
add
stc
push
mov
ror
clc
jmp
mov
pushf
movb
movb
pusha
mov
call
pusha
pushf
pushf
popl
pusha
call
clc
add
jmp
pusha
call
pusha
call
shl
stc
sar
mov
clc
jmp
pusha
pushf
pushf
mov
jmp
pushl
pusha
mov
lea
jne
pusha
pusha
movb
mov
jmp
jmp
push
lea
je
push
movl
clc
sub
stc
pushl
pushf
xchg
mov
cmp
pusha
mov
bt
cmc
sub
mov
lea
jne
pusha
test
sub
pushf
pusha
call
lea
pushf
mov
pushf
lea
jmp
cld
push
jmp
pushf
call
clc
shl
jmp
jmp
dec
jmp
call
call
movl
mov
pushf
mov
push
lea
jmp
pushl
mov
pushf
pushf
mov
pushl
ret
movb
dec
jmp
sub
clc
cmc
pushf
bt
add
push
jmp
sub
bt
clc
pushf
neg
clc
call
pushf
jmp
shl
pushf
pushf
pushf
call
sub
bt
cmp
cmp
stc
shr
jmp
bt
cmc
sub
stc
push
stc
pushf
and
mov
call
rdtsc
neg
call
push
movsbw
pushf
inc
stc
bts
btc
sub
ror
call
or
jmp
pushf
mov
pushf
mov
jmp
mov
pusha
pushf
mov
lea
jmp
lahf
mov
call
bswap
mov
sub
stc
cmp
movb
jmp
pushf
popl
jge
push
push
pushl
popl
pushf
pushf
lea
jmp
movl
pushl
movb
mov
mov
pushl
ret
push
mov
pusha
jmp
jmp
push
movb
mov
movl
pusha
pushf
jmp
pushf
pushf
mov
pusha
movw
pushf
push
lea
jmp
pusha
add
test
bt
mov
stc
mov
cmc
call
test
add
pusha
test
stc
shrd
call
jmp
mov
clc
sub
cmp
stc
cmp
cmc
and
jmp
push
pushf
push
movw
jmp
and
bsr
sub
bt
adc
pushf
btr
lea
pop
bts
bswap
and
xor
dec
sub
movsbl
mov
jmp
mov
jmp
push
mov
push
pushl
ret
mov
cmp
sub
bt
add
pushf
call
sar
setnp
setnp
xchg
mov
and
call
jmp
jmp
pusha
movw
cbtw
pushf
mov
test
cwtl
cmp
sub
lea
jge
pushf
pusha
mov
pushf
push
lea
jmp
movb
push
jmp
mov
push
pushf
lea
jmp
lea
jne
push
mov
jmp
pushf
jmp
call
call
dec
pushf
add
bswap
pushf
mov
bt
call
pusha
pushf
jmp
lahf
bswap
mov
push
movb
pushf
call
cwtl
pushf
clc
sub
movb
mov
pushf
mov
pushf
lea
jmp
pushf
pushl
movw
mov
mov
movb
movb
mov
pushf
pushf
pusha
call
pushf
add
pusha
call
pushl
mov
pushf
pushf
lea
jmp
mov
pushf
pushf
lea
jmp
push
pushf
mov
push
call
neg
jmp
cmp
pushf
sub
mov
sub
push
mov
pushf
mov
movw
movb
lea
jmp
call
mov
pushl
pushf
lea
jmp
pushl
popl
push
movl
pushf
lea
jmp
pushf
call
pushf
mov
call
pushf
lea
mov
mov
mov
jmp
call
pushf
call
pushf
push
mov
cmp
clc
jmp
push
jmp
mov
jmp
pushf
mov
push
mov
lea
jmp
ror
bt
ror
bsf
test
sub
jmp
movb
pushf
popl
pushf
movb
pushl
popl
mov
lea
jmp
neg
cmp
clc
sub
pushf
stc
ror
sub
je
clc
sub
test
pusha
cbtw
clc
push
movb
call
inc
clc
mov
mov
inc
jmp
lea
je
push
xor
jmp
xor
mov
movw
jmp
setp
movsbw
call
pushf
popl
pushf
pusha
pushl
popl
movw
movb
push
lea
jmp
inc
add
shr
clc
lea
pusha
pop
sub
btc
mov
pusha
mov
xor
cmc
mov
bsr
movsbl
push
movsbl
add
add
cmp
movzbl
mov
btr
sub
btr
jmp
push
pushf
pushf
popl
mov
movb
pushl
popl
push
movb
pushf
lea
jmp
movl
pushl
popl
movb
pushf
lea
jmp
lea
jle
mov
pusha
movw
pusha
lea
jmp
push
mov
pushf
popl
pusha
pushl
pusha
pushl
popl
pushf
mov
mov
mov
lea
jmp
cmp
pusha
movzww
call
pusha
mov
pushf
pushf
mov
lea
jmp
cmp
jmp
clc
test
call
adc
movzbl
test
test
stc
sub
pusha
pusha
bt
cmp
sub
clc
call
jmp
call
test
clc
bt
not
bt
call
pushf
popl
call
lea
pop
pusha
mov
jmp
pusha
jmp
pushl
popl
pushf
lea
jmp
shr
push
mov
push
pushf
popl
pushf
jmp
pushf
pushf
popl
mov
jmp
pushl
cld
cld
pushf
rep
add
xchg
mov
btc
call
pushf
shl
push
movw
mov
shr
cmp
clc
clc
bt
or
pusha
mov
cmc
jmp
pushf
call
pushl
mov
lea
pushf
popl
movw
call
pushf
pusha
movb
mov
pushf
pusha
pushl
movb
mov
push
mov
pushl
jmp
push
jmp
mov
call
mov
lea
pusha
repz
popl
movzbw
xchg
bswap
xchg
xchg
inc
dec
pushl
popl
dec
movl
bswap
movzbw
mov
lea
js
pushf
pop
dec
rcl
rcl
neg
push
dec
jmp
jmp
jmp
bswap
mov
movzbl
pushf
mov
push
movb
movb
pushf
pushl
ret
mov
pushf
jmp
lea
jmp
cmc
ror
bt
cmp
mov
bt
sub
cmp
jmp
push
jmp
lea
jne
pusha
pusha
mov
movw
pushf
lea
jmp
call
movzbw
pop
lea
std
cld
pusha
mov
xchg
movzbw
movzbw
mov
call
mov
push
mov
pushf
pushl
ret
push
jmp
movb
mov
pushf
pushf
popl
jmp
mov
push
push
mov
lea
jmp
pusha
pushl
popl
pushf
pushl
mov
lea
jmp
movzbw
mov
cmp
pushl
popf
mov
movw
lea
jmp
bts
ror
and
not
ror
clc
sub
btc
rcl
rol
test
shl
btc
and
rcr
add
sub
shr
mov
pushf
pushf
sub
call
mov
jmp
push
pushf
call
call
mov
bt
bt
jnp
push
sub
pusha
shr
pushf
call
jmp
call
jmp
sub
call
add
mov
jmp
mov
lea
jns
pusha
pushf
pushf
pushf
popl
pushl
pushf
movw
pushl
pushl
popl
pushf
movb
mov
lea
jmp
mov
mov
mov
push
pushf
lea
jmp
lea
push
pushf
push
mov
inc
bt
cmp
call
xchg
add
mov
pushf
seta
mov
cmp
add
jle
pushf
not
call
cmp
cmc
mov
push
btr
add
jmp
mov
mov
pusha
push
lea
jmp
mov
jbe
cwtl
not
mov
push
mov
pusha
pushf
mov
mov
pushf
mov
lea
jmp
test
btc
movzww
cmc
xchg
test
xor
pushf
xor
push
dec
stc
push
pushf
bt
ror
cmc
xor
mov
push
bt
test
sub
cmp
stc
clc
jmp
mov
push
jmp
push
cld
pusha
mov
call
add
movw
jmp
shr
movzbl
push
push
add
cmc
stc
pushf
clc
neg
pushf
mov
call
not
pushf
bswap
push
movzbl
mov
call
clc
cmc
test
xchg
pusha
stc
pushf
xor
test
jmp
pusha
sub
pushf
cmp
stc
sub
pushf
push
push
lea
call
mov
pusha
mov
lea
jp
push
jmp
pusha
mov
movw
mov
call
add
cmp
movb
test
mov
stc
sub
pushl
movw
call
lea
pusha
mov
jmp
pusha
mov
pushf
call
bswap
push
sar
mov
shr
rcl
mov
pushl
cmp
test
clc
add
pusha
mov
push
lea
jmp
mov
mov
call
not
setg
jmp
pushf
mov
pushf
lea
jmp
mov
pushl
pushf
popl
push
call
mov
mov
pushl
pushf
lea
jmp
movw
pusha
sub
movb
jmp
mov
pushf
pushf
pushl
push
lea
jmp
pusha
pushf
mov
movb
mov
pushf
call
pusha
pushf
popl
push
pushl
popl
mov
lea
jmp
jmp
pusha
cmp
sub
mov
test
bt
lea
jns
add
push
mov
pusha
mov
pushf
pushl
lea
jmp
btc
inc
bsr
mov
cmc
call
mov
lea
not
mov
std
pusha
lea
mov
call
call
pushf
popl
pushf
pushl
popl
mov
pushf
pushf
movb
lea
jmp
pushf
mov
call
btc
test
mov
test
clc
push
sub
pushf
mov
pushf
pushf
lea
jmp
pusha
jmp
xadd
cmc
bsf
mov
add
shld
not
mov
shr
sets
jmp
shr
btr
test
bts
mov
clc
test
not
bt
add
mov
mov
jmp
bt
add
pushf
lea
jmp
call
cwtl
mov
movzbl
pusha
setge
mov
pusha
push
pushf
divl
movl
pushf
jmp
setp
mov
cmp
cmp
cmc
jle
add
pusha
mov
push
pusha
mov
mov
pushf
mov
movb
lea
jmp
aas
mov
call
pushf
pushl
popl
mov
lea
jmp
movl
lea
jle
push
mov
jmp
add
add
add
js
inc
add
add
insb
sbb
add
add
add
add
add
or
add
pop
mov
add
mov
add
mov
add
mov
add
add
js
add
test
add
fdivs
add
gs
add
mov
add
mov
add
add
mov
add
jmp
add
sbb
add
add
test
add
cld
mov
add
mov
add
mov
add
add
xorb
add
testl
add
pop
or
int3
or
add
or
add
or
mov
or
