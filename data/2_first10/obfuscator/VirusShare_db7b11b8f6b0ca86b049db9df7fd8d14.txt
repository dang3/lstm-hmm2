add
test
fbld
decb
std
xor
jg
pop
dec
std
xor
xor
call
sub
jg
pop
sarb
mov
xor
xor
mov
leave
cmpb
call
sbb
xchg
and
test
mov
mov
inc
pop
xor
lds
inc
lds
add
in
in
mov
pushl
std
aam
adc
push
in
adc
rcl
mov
inc
pushl
mov
mov
mov
adc
pop
mov
iret
lds
inc
mov
aam
lds
ss
pop
rclb
xchg
jg
incb
pop
mov
jg
pop
addb
std
call
dec
sub
std
test
iret
test
xor
inc
add
mov
cld
addb
pop
data16
adc
adc
inc
roll
jg
leave
dec
cmp
inc
sti
adc
add
pop
xchg
clc
call
adc
mov
mov
mov
push
adc
push
test
std
inc
lock
pusha
int3
cmpsb
lds
xor
iret
pop
outsl
dec
mov
adc
inc
mov
add
fndisi(8087
or
push
ret
in
mov
pop
inc
jo
insl
push
pop
call
test
mov
orl
push
adc
xor
test
xor
leave
aam
lcall
mov
leave
or
ds
xorb
add
lds
test
or
adc
xor
xor
incl
add
adcb
adc
sub
xor
or
int3
std
inc
repnz
inc
call
sti
dec
shl
push
or
fildl
push
dec
push
pop
cmpsb
std
iret
xor
js
js
mov
inc
ficoml
add
bound
jle
int3
ss
sub
push
cmpsb
std
sti
or
int
or
adc
call
or
adc
jnp
sti
dec
xor
dec
mov
rorb
sti
movsb
insb
or
loope
sub
xor
xor
push
dec
push
mov
mov
jbe
pop
enter
sub
pop
fbld
or
orl
enter
or
push
xor
pop
sti
add
loope
sar
lret
sbb
pop
adc
pop
sub
in
aam
adc
les
add
dec
inc
mov
xchg
and
pop
mov
jp
mov
call
mov
xor
jl
xor
sub
mov
pop
leave
mov
jbe
in
ret
sbb
test
push
ret
jo
sbb
mov
inc
test
push
call
pop
cli
xor
sti
xor
jg
ret
sbb
jg
push
sbb
or
adc
sbbl
push
outsb
sbb
dec
push
andl
xor
adc
sbb
mov
aaa
insl
data16
call
cmp
cmp
sub
mov
ret
inc
movsb
xchg
es
fisttps
or
fimull
push
sbbl
push
xor
mov
pop
or
adc
es
xor
push
pop
and
int3
lds
and
test
xchg
call
xorl
fwait
dec
loope
add
addb
and
sub
add
sbb
movsb
mov
xor
jp
push
inc
popa
pusha
or
jp
xchg
es
bound
sbbb
clc
adc
or
jl
pushf
and
fsubl
inc
and
mov
in
sub
pop
xor
ret
pop
xchg
inc
sbb
fmulp
xchg
call
orl
mov
test
pop
aam
mov
push
xchg
lret
movsb
inc
faddl
mov
lret
shrb
sbb
dec
pop
ficoms
mov
mov
fs
jbe
xor
push
inc
pop
xor
xor
and
sbb
pop
or
mov
push
lds
xchg
pusha
cmpsb
shll
push
jg
les
aam
push
filds
or
ret
in
mov
inc
jo
out
sub
mov
adc
sti
lret
movsb
jb
mov
cwtl
cwtl
cmpsb
mov
xlat
mov
movsb
lds
addl
and
mov
inc
and
notb
ss
mov
push
fsub
inc
jle
and
sbb
or
adcb
fcomp
adc
pop
pop
push
xor
xchg
mov
repnz
mov
mov
adc
sbb
mov
inc
add
add
or
bound
stos
inc
ljmp
lock
dec
jmp
in
jo
mov
add
call
mov
into
jb
rcrl
pop
lods
mov
xor
push
and
pop
cs
inc
mov
sti
test
aam
data16
out
or
sahf
push
lea
adc
mov
or
adc
sub
xchg
lods
adc
or
cmp
mov
xor
dec
pop
sub
test
mov
adc
sub
mov
into
aam
sub
addb
aam
fbstp
adc
in
or
and
adc
popa
or
outsb
test
adc
adc
sbb
fisttps
pop
insb
add
jbe
push
leave
mov
and
addb
cmpsb
aam
scas
mov
xor
mov
repnz
push
je
push
mov
adc
adc
ss
adc
cmc
xchg
leave
aam
test
insb
adc
sahf
loopne
xor
xor
dec
sarb
cmp
lds
pop
in
xor
cmp
out
repnz
ret
popa
cmpsb
push
push
and
clc
adcb
xchg
add
mov
push
cld
jbe,pt
sbb
loopne
std
add
mov
jb
rolb
aam
add
hlt
loopne
ss
or
dec
into
add
ret
inc
lods
sbb
test
enter
rcll
in
cmp
sbb
sbb
inc
movsb
adc
or
sbb
pop
push
xchg
test
fmuls
cmpsb
es
add
rclb
pop
mov
mov
inc
fs
out
adc
fiaddl
mov
xor
xor
push
mov
sub
xor
fidivrl
mov
repnz
or
and
push
aam
in
lcall
mov
and
mov
shlb
in
lock
test
push
lods
xchg
mov
cwtl
shlb
shrb
sbb
insb
mov
adcb
mov
or
fsubrs
mov
or
dec
ss
or
xchg
loope
aam
data16
push
or
shrb
iret
stos
xor
xchg
add
dec
add
data16
outsb
sub
pop
mov
into
inc
lock
inc
sub
les
ret
inc
inc
and
es
ss
xor
jne
inc
xchg
std
adc
imulb
inc
add
cmp
sub
xchg
xor
or
pushf
testb
xchg
dec
out
pop
mov
lds
mov
mov
sbb
jg
xchg
orb
add
push
or
push
and
iret
call
add
pusha
push
pop
jb
outsb
xchg
adc
sbb
iret
subb
adc
dec
in
ret
pop
or
mov
mov
lods
rcl
lret
out
push
push
xor
stos
cld
pop
aam
xor
inc
and
out
out
push
imul
aam
test
pop
cmp
push
cs
adc
add
addb
test
add
or
insb
adc
sbb
pusha
mov
clc
xor
decb
clc
jae
sarb
dec
movsb
out
leave
inc
xchg
aam
xorb
xchg
pop
pop
xor
inc
mov
push
rclb
xorb
push
gs
les
testb
mov
aam
inc
inc
lods
pop
call
rclb
push
add
call
xorb
je
cmp
mov
icebp
cmp
mov
adc
int3
pusha
adc
xchg
push
cltd
mov
in
inc
dec
cltd
and
mov
cs
test
add
sub
scas
sbb
xor
pop
int3
jl
inc
clc
sub
push
push
pop
or
iret
ljmp
aam
jg
push
push
sbb
sarb
sub
sbb
sbb
nop
mov
shl
test
sub
cmp
fildll
cmp
mov
es
dec
cld
adc
push
cmp
lret
vunpcklps
push
adc
or
push
inc
andl
popa
or
cli
dec
sbb
or
popa
scas
scas
add
jg
mov
scas
jl
sbb
adc
enter
push
add
stos
jo
or
ss
pushf
pop
adc
lcall
sti
fbstp
push
xor
jle
adc
ret
and
adc
cs
mov
jo
dec
and
xchg
pop
xor
inc
sub
inc
mov
inc
add
or
add
int
push
mov
add
push
sub
imul
push
dec
call
push
call
or
sub
lods
add
cs
inc
test
fwait
out
push
dec
ja
sbb
xchg
das
sub
mov
jg
push
xchg
enter
movb
imul
scas
cmpsb
adc
cmp
pop
call
cmp
fcompl
xchg
inc
add
nop
stos
lret
scas
xor
mov
aad
pusha
xchg
sbb
dec
int3
lcall
mov
jo
test
add
sub
jne
sub
add
and
sub
sbb
loop
stos
push
dec
lds
dec
jno
xchg
mov
rorb
je
lcall
cmp
test
es
test
sar
mov
and
push
loop
sbb
push
fs
add
inc
push
in
mov
pusha
mov
insb
push
sahf
dec
mov
xor
inc
pop
stos
mov
inc
inc
scas
test
pop
inc
out
je
dec
es
push
sahf
mov
jbe
mov
adc
inc
or
dec
or
add
sbb
push
aam
and
jbe
push
pop
xchg
mov
aam
cmp
mov
and
je
inc
xorl
mov
xchg
push
mov
dec
and
fsubrl
dec
dec
in
jo
inc
mov
subl
enter
sarb
imul
cwtl
test
jp
std
cmp
test
push
xchg
lret
adc
leave
andb
inc
add
test
call
dec
mov
sbb
fildll
adc
test
push
pop
cmp
mov
pop
lret
inc
aam
pop
in
fbld
aad
test
out
or
rorb
sbbl
xor
push
mov
push
cld
mov
inc
inc
push
sbb
pop
push
inc
shll
leave
mov
je
pushf
xorb
cmp
int3
and
xor
outsb
pop
nop
sbb
mov
or
js
pop
iret
push
push
pop
jp
dec
push
and
push
je
dec
pop
adc
adc
cs
imul
out
inc
xchg
and
lret
and
cwtl
inc
test
hlt
xor
mov
xor
std
hlt
sub
mov
jo
in
dec
lret
or
sub
es
inc
ret
pusha
adc
push
dec
or
je
addl
xchg
les
or
lcall
adc
mov
xchg
pop
outsb
sti
outsb
rclb
push
and
mov
cmp
inc
and
dec
fildll
push
sbb
xchg
pop
cld
sbb
pop
adc
aam
or
leave
and
js
dec
adc
mov
inc
add
clc
rcrb
xorb
or
insb
adc
and
int3
test
inc
das
push
ljmp
in
or
jl
leave
inc
repnz
adc
push
push
and
dec
popa
adc
lock
push
push
call
dec
mov
push
cs
and
cli
sti
in
pusha
jae
sbb
xor
clc
iret
aam
xor
shlb
fbld
movsb
mov
pop
lds
jo
rorb
dec
adc
mov
jg
pop
and
adc
add
call
adc
stos
sbbb
pop
add
sub
pop
add
insb
cmp
test
ds
or
pushf
shlb
pop
pusha
and
in
mov
and
xchg
push
shrb
mov
in
adc
andb
lret
adc
stos
andb
mov
sbb
iret
vmulps
mov
add
call
pop
or
cmp
sbb
nop
ret
pusha
bound
clc
aad
outsb
push
sub
mov
push
sti
xchg
addb
add
lds
lock
sub
ret
inc
mov
sub
rcrb
xor
and
add
push
mov
cli
sub
aam
aam
stos
enter
add
inc
add
lret
pop
xor
inc
dec
test
add
nop
dec
push
hlt
loop
push
inc
and
lods
shlb
in
pop
cs
and
ret
push
and
push
add
mov
dec
fsubrl
add
rol
push
mov
push
push
out
jp
lcall
jg
in
dec
push
add
mov
sub
call
ds
xchg
lock
sbb
pop
mov
movzbl
mov
dec
pop
loopne
data16
push
fsubrl
or
add
add
sbb
sar
sti
test
xor
push
in
fldenv
add
and
dec
add
js
popa
ss
pop
xchg
mov
push
sub
lcall
rorl
dec
aam
mov
sub
aam
test
push
test
jb
and
xchg
xor
ret
mov
subl
pusha
mov
sbbb
cmp
leave
sti
fadds
mov
jg
aaa
test
and
or
mov
or
subl
in
orps
pop
fists
test
in
add
movsb
xor
loopne
popa
jo
cwtl
data16
es
mov
std
ljmp
cli
mov
sbb
nop
or
adc
mov
push
ficompl
pop
stos
subl
adc
or
es
mov
inc
add
cmp
pushf
frstor
pushf
push
cwtl
adc
jb
mov
jbe
add
push
in
cmpsb
xchg
addb
push
test
sahf
or
mov
test
xor
pop
sub
mov
rcl
fwait
sbb
or
or
sub
fdivr
aam
add
lcall
fldcw
lods
xchg
push
pushf
xor
push
xchg
inc
pushf
adc
jmp
rolb
dec
mov
ljmp
adc
and
mov
push
dec
xor
pushf
push
data16
movsl
add
test
push
add
or
out
outsb
xchg
mov
xor
mov
xor
mov
pop
xor
xor
rol
test
ret
call
xchg
add
or
xor
std
mov
fmuls
xor
orl
fs
inc
and
cmp
std
cs
mov
inc
mov
cltd
call
shll
mov
pushf
add
inc
and
xor
push
xlat
loopne
testb
test
add
cmpsb
aam
adc
add
lret
or
add
xchg
test
or
or
mov
shlb
cmpsl
adc
and
call
sub
sub
mov
or
mov
jo
pusha
cmpsb
into
dec
xor
inc
push
mov
orb
lods
lcall
adc
add
jo
mov
push
js
lods
mov
pop
pop
push
xor
inc
push
test
dec
mov
test
xor
andb
push
sbb
push
sub
sbb
pop
into
push
adc
dec
je
or
push
leave
dec
pop
int3
mov
cmpl
xchg
ret
loope
mov
in
mov
stos
ret
jg
sbb
test
pop
inc
test
in
sbb
inc
fs
adc
pop
mov
test
adc
int3
sub
out
sbb
sub
sti
loop
and
sti
aam
sbbl
cmp
cltd
insb
dec
adc
sbb
adc
stos
sti
dec
pop
shlb
je
sub
xor
pop
ret
mov
inc
lds
xor
or
jo
push
adc
and
je
lods
push
and
inc
pusha
sbb
push
orl
or
and
mov
push
or
push
mov
pusha
insb
add
in
or
mov
in
dec
or
je
jp
shrl
inc
les
es
pop
cld
add
cmp
sub
jb
cmc
leave
or
pushf
outsb
pop
push
pop
pop
pusha
nop
inc
adc
loop
xchg
in
sti
in
push
stos
ret
ds
jp
adc
xchg
sbb
sbb
mov
pop
ret
aad
add
push
sbb
add
cld
inc
xchg
dec
add
fiadds
lds
cli
push
inc
outsb
xor
fmulp
xor
inc
mov
mov
jp
sub
lods
push
sbb
movsb
ss
cmp
inc
add
xchg
jl
xor
sarb
lods
mov
jae
rcll
and
and
es
or
mov
add
in
sub
xor
subb
add
pop
xchg
aam
cmp
gs
mov
in
inc
cmp
mov
add
ret
push
hlt
scas
push
incb
stos
push
test
leave
cs
inc
je
repnz
xor
jmp
add
iret
adc
fsts
xchg
ret
push
sbb
out
ds
std
jg
lret
inc
dec
push
pop
mov
cmc
sbbb
push
ret
decl
aad
movsl
push
sbb
scas
adc
or
test
dec
pop
jbe
sub
ljmp
shrb
int3
inc
mov
add
dec
aam
and
lcall
add
fwait
or
pop
sti
js
mov
mov
call
lcall
or
dec
loop
xchg
enter
sahf
or
xor
push
adc
pop
test
enter
inc
push
mov
sti
std
mov
ss
movsl
pop
sbb
nop
sarb
mov
adcb
lock
rcrl
inc
mov
fdiv
dec
ja
jg
fists
lds
fisubl
mov
xchg
std
inc
std
nop
iret
test
es
push
pushf
mov
and
test
ds
insl
jb
mov
inc
clc
out
push
and
pusha
fcmove
fcoml
pop
and
push
xchg
ret
nop
les
mov
push
xchg
sbb
inc
je
mov
xor
aam
cmp
int
xorb
add
in
aam
pop
aam
push
xor
cmp
roll
and
aam
cli
pop
lods
cltd
inc
push
aam
ret
lcall
rcl
hlt
lods
mov
push
push
xchg
mov
pop
outsb
inc
int3
add
popa
repnz
push
fiadds
jl
or
inc
negb
lds
mov
rclb
aam
adc
addb
or
mov
pop
mov
push
cmp
add
add
pop
js
inc
and
pop
in
mov
xor
sub
add
nop
dec
hlt
std
xchg
lods
popa
movsl
adc
push
mov
add
sarb
jne
hlt
add
in
pushf
or
inc
adcl
roll
mov
call
aad
or
sub
je
inc
xor
ljmp
cwtl
sub
mov
xorb
add
inc
xorb
gs
outsb
call
adc
inc
js
xchg
mov
call
pop
adc
sbb
mov
push
ret
mov
jo
cmp
mov
jg
dec
add
dec
test
scas
fimull
sbb
xor
xchg
or
pusha
add
fs
or
sbb
mov
inc
pop
or
cmpb
add
push
es
mov
and
mov
dec
xchg
fdivrl
lret
pop
fsubl
adc
push
add
or
shlb
xor
inc
insl
xor
movsb
pop
xchg
shrb
adc
into
inc
inc
mov
inc
xor
cmp
std
sahf
sti
cwtl
sbb
adc
fsubs
in
or
pop
ss
dec
and
pushf
adc
inc
sub
pop
pop
mov
sub
sbb
xchg
int
add
or
add
adc
ljmp
fs
pop
test
into
push
mov
sbb
lcall
add
cs
sarb
pop
jo
add
or
aam
test
jo
int3
jbe
fisttps
dec
mov
rcrb
mulb
mov
dec
jge
or
dec
sti
sbb
mov
sub
sub
rolb
cmp
push
inc
add
jne
mov
cs
notb
sbb
push
xor
repnz
or
and
sbb
and
xchg
cwtl
xor
sub
sahf
je
cltd
add
dec
pop
mov
outsb
push
hlt
mov
xchg
mov
pop
sub
and
sbb
push
lock
or
movsb
test
iret
aam
mov
clc
mov
or
cmp
sub
push
sti
test
aam
mov
inc
rorb
sbb
int
in
jg
adc
out
test
adc
pushf
ss
dec
es
xor
push
dec
fwait
inc
test
pusha
js
pop
sarb
ret
sub
cs
xchg
out
xor
loopne
mov
shlb
or
dec
xchg
push
sbb
add
lret
lods
orb
pop
lret
cmpb
loope
data16
xor
leave
popa
inc
xor
data16
sub
adc
push
dec
push
in
data16
jp
test
aam
insb
rolb
add
call
aam
lretw
inc
inc
dec
into
xchg
stc
mov
push
out
mov
shrb
lea
push
push
call
leave
ret
aaa
jecxz
mov
in
push
push
mov
lods
cli
or
push
and
stos
pop
pushl
idivb
inc
sub
mov
jo
dec
jmp
lds
fsts
mov
jl
lds
add
inc
mov
mov
dec
push
mov
iret
in
cmp
es
push
leave
add
push
roll
or
pop
call
int3
adc
test
dec
and
mov
mov
mov
push
sbb
call
push
sub
and
pusha
and
subl
mov
ret
mov
outsb
mov
xor
add
mov
or
or
cltd
lret
jb
loopne
pop
and
or
mov
push
lret
or
sahf
mov
sahf
cmpsb
std
ljmp
dec
js
in
xchg
dec
add
cmpsb
mov
pop
fists
sbb
mov
adc
mov
mov
push
fs
lds
mov
in
stos
iret
sahf
dec
xor
add
sub
es
inc
jb
mov
mov
dec
xorb
xor
mov
lds
fs
xor
in
scas
adc
fs
adc
test
les
mov
xor
or
call
lcall
push
mov
test
pop
and
test
sbb
aad
push
sbb
stos
xchg
rcrl
test
test
inc
or
dec
fdivl
inc
jle
into
jl
xchg
jo
js
push
or
sub
push
xchg
ret
mov
mov
adcb
pop
addb
je
sub
aad
add
subb
cs
jo
fdivrp
cmp
sub
repnz
push
hlt
dec
push
cmp
stos
push
hlt
or
lret
sahf
mov
xor
mov
mov
fwait
int3
mov
add
andb
mov
or
mov
or
mov
mov
rclb
lcall
bound
test
sti
push
xchg
adc
mov
inc
orl
fdivr
adc
cmp
outsb
fs
lret
in
leave
sbb
mov
adc
dec
mov
sub
add
cs
pop
inc
mov
xchg
or
pusha
js
add
inc
sbb
test
push
enter
dec
xor
or
pop
hlt
les
pop
xchg
jl
or
xorb
adc
movsl
or
push
sbb
inc
subl
adc
sarb
sbb
fsubs
adc
adc
xor
xchg
pusha
shlb
mov
dec
xor
rorb
xor
test
call
xchg
jle
mov
sbb
bound
sub
dec
cmp
cmp
addl
iret
mov
mov
pop
fcom
test
data16
sbb
jo
addl
inc
lods
and
sbb
add
push
xor
test
or
pusha
leave
xor
cmp
pusha
xor
movsb
sbb
inc
or
mov
dec
adc
xchg
push
pop
mov
sti
adc
aam
adc
dec
xor
push
or
cmpb
dec
mov
outsb
lret
cmp
xchg
mov
jb
and
divb
push
in
sti
xchg
fbld
cli
adcb
sbb
pusha
cmpsb
inc
in
stos
push
or
or
xor
inc
sub
jl
sub
cmpsl
dec
push
xor
cli
push
add
out
sub
rolb
push
add
pop
inc
ffreep
cmp
adc
xor
sub
push
cwtl
jb
cmpb
xor
cmp
dec
xor
out
test
xchg
mov
iret
insb
xor
and
rol
mov
and
movsb
xchg
xchg
mov
sahf
cwtl
adc
xchg
mov
inc
push
add
and
cs
mov
xchg
mov
imul
sti
cmp
push
loope
push
adc
pop
inc
sbb
subl
test
or
xor
test
dec
and
pop
cmp
mov
pop
mov
xchg
sub
cmp
xor
in
sub
push
xor
ret
in
mov
rcrb
adc
adc
xchg
sub
fmulp
mov
bound
adc
aam
call
fistpll
xchg
int3
aas
jno
sbb
adc
inc
sub
andl
test
pusha
jmp
inc
mov
mov
test
dec
add
push
add
mov
xchg
aam
push
sub
pushl
lea
push
inc
cmc
jg
je
in
insl
stos
rcll
dec
push
xchg
mov
mov
mov
nop
addb
jp
rolb
xor
push
mov
mov
inc
push
push
pushf
sbb
je
sub
test
mov
sub
inc
inc
orb
dec
sarb
xchg
dec
or
pop
outsb
add
inc
mov
adc
aad
pop
or
mov
in
mov
add
push
push
inc
jp
or
call
pop
cli
std
aam
popa
push
int3
mov
fs
enter
inc
scas
add
adc
adc
leave
xor
adc
push
xchg
dec
sbb
mov
es
leave
push
add
cmp
lret
data16
sar
xchg
jne
add
push
pop
and
adc
test
pop
adc
xor
sub
stos
push
cmp
cmpsb
ret
idivb
lcall
or
dec
cmp
adc
inc
sub
inc
and
sub
sbb
cmp
xchg
movl
repnz
mov
pop
int
or
es
pop
add
or
cmp
pop
sub
xor
shlb
std
mov
sbb
std
mov
sbb
cmp
call
jae
ret
pusha
sub
push
cmpb
sbb
and
iretw
call
call
test
cmp
cmpsb
mov
or
push
mov
push
mov
or
xchg
add
mov
sbb
push
pop
xor
xor
shrb
xor
push
call
sahf
sub
in
push
or
sarl
fisubs
inc
dec
les
hlt
push
fcomps
push
faddl
addb
dec
loope
pop
xor
orb
loopne
nop
dec
mov
rorb
add
mov
xchg
rcrb
repnz
in
push
cmp
and
rclb
cwtl
inc
sub
and
push
xor
and
ret
or
cmp
adc
enter
sahf
cmpsb
and
mov
test
nop
inc
mov
xchg
adc
xchg
insl
mov
mov
call
sub
sub
and
push
xchg
out
or
mov
fs
test
xor
or
sbb
xchg
sti
push
mov
bound
sub
mov
mov
add
and
add
mov
add
xor
pop
lods
add
insb
sbb
inc
jg
push
push
loope
dec
pop
add
add
pop
mov
xchg
add
cmp
pop
push
addb
push
fs
xchg
sub
adc
dec
push
push
pop
pop
push
add
sbb
inc
jb
jp
add
add
push
pop
mov
shll
out
mov
aam
xchg
adc
in
sbb
mov
fadds
push
test
and
into
adc
push
mov
shlb
pop
xor
or
mov
mov
clc
xor
ss
filds
pop
push
iret
fs
outsb
and
push
in
aam
es
inc
pop
call
aam
push
sub
dec
aam
sub
mov
pop
shl
scas
rolb
sar
mov
sbb
and
adc
push
push
pusha
mov
dec
or
pusha
int
ljmp
add
shr
pop
push
in
fcompl
and
cltd
inc
or
test
xor
dec
dec
cmp
sub
pop
add
mov
push
inc
and
cwtl
sub
pop
add
subb
add
pusha
ds
shlb
push
cmp
ret
push
adc
push
loop
pop
cmp
sbb
scas
cmpb
scas
push
push
mov
adc
mov
and
or
adc
std
test
subb
test
les
enter
sbb
mov
inc
addl
adc
jp
sbb
push
push
pop
out
shrb
and
push
lods
or
leave
jbe
lret
push
mov
push
push
mov
test
mov
out
pop
rcrb
push
pop
sub
xor
mov
inc
subb
stos
int3
jbe
xor
push
add
into
sub
xchg
imul
cmp
add
mov
add
call
or
test
push
lds
test
loopne
dec
jbe
and
xor
or
dec
cld
stos
ret
fs
jbe
cli
push
push
add
imul
add
push
adc
aam
roll
fbld
and
inc
xor
pop
cli
in
ret
add
mov
pop
or
inc
dec
loopne
insb
push
call
cltd
xorl
adc
xor
aam
test
add
ds
xor
and
inc
xor
lods
dec
and
sarb
inc
xor
xor
sub
adc
dec
ret
mov
sar
mov
jg
sub
mov
mov
adc
push
call
cltd
addb
cli
mov
sbb
pop
mov
xchg
add
xchg
cmp
loop
add
cmpsl
mov
sub
dec
pop
inc
sti
lds
and
fisubrl
inc
in
xchg
std
xchg
sub
jo
repnz
sub
push
add
xchg
cwtl
ss
or
bound
cs
push
pushw
jle
mov
adc
or
enter
and
dec
cmpsb
outsb
sub
je
fbld
fucomip
je
mov
mov
or
and
sub
or
stos
pop
enter
es
mov
divb
sub
scas
inc
and
enter
xchg
push
out
dec
jo
push
mov
add
jg
xchg
pusha
or
mov
je
cmp
xchg
push
adc
aam
inc
es
test
pushf
out
adc
xchg
jo
bound
bound
call
and
push
into
sbbb
push
jg
call
push
ret
sub
es
and
movsb
xor
inc
loopne
jbe
outsb
addb
adc
and
test
nop
inc
jp
cli
aam
push
add
sbb
sbb
sbb
mov
and
fisttpl
jl
mov
mov
inc
adc
lds
bound
mov
jbe
ss
jp
repnz
mov
test
test
aad
cmp
add
push
cmp
mov
rclb
cmp
pushf
out
call
inc
pusha
add
sti
push
fs
pop
test
pop
or
cwtl
jp
fadds
test
cmp
inc
xor
push
stos
sbb
pop
add
add
loop
or
xchg
adc
adc
call
sub
or
es
and
xchg
pop
andb
and
repnz
jl
xchg
push
adc
dec
xor
adc
push
pop
xor
leave
inc
fs
push
xor
pushf
pop
push
adcb
cld
sub
mov
outsb
inc
clc
pusha
or
add
push
int3
and
push
pop
rolb
test
test
or
in
insb
mov
sub
js
or
call
je
adc
movsb
xor
push
enter
dec
sbb
lret
cmp
push
mov
sub
cwtl
push
ss
insl
lds
cld
leave
and
movsl
mov
xor
or
stos
int3
or
add
addl
stos
jbe
xor
add
fadd
adc
cmp
push
cmp
je
shlb
xor
rcl
adc
leave
test
cwtl
pusha
mov
roll
int3
fidivl
lock
inc
add
ds
or
pop
or
push
add
xor
push
fidivs
sbb
pop
sub
inc
leave
addl
pop
mov
in
push
es
xor
dec
sbb
adc
ss
and
dec
pop
ret
sbbl
nop
xor
push
xor
or
hlt
pusha
xor
pop
mov
adc
or
push
sbbb
add
test
add
inc
sti
dec
jle
test
rolb
xchg
xchg
inc
and
sbb
pop
test
push
or
ficompl
mov
call
or
push
mov
xor
fcmove
adc
xor
mov
andl
aam
or
cwtl
push
add
out
and
into
clc
pop
loopne
in
orl
jo
push
and
ja
push
fucomip
cmp
andb
sbb
decl
popa
push
push
mov
push
bound
xor
movb
dec
testl
push
call
je
fcoms
aam
loopne
mov
mov
sub
shl
rcrb
movsl
mov
je
or
push
sbb
push
xor
pop
test
push
mov
adc
or
outsl
rolb
bound
mov
addb
mov
stos
jb
or
adc
xchg
iret
lds
int
and
mov
inc
sahf
test
fidivl
adc
xchg
aam
fisttps
xor
mov
mov
push
ret
xchg
mov
add
aam
fsubrs
int3
xchg
ret
sub
cmp
inc
sub
push
cmp
nop
pop
pop
mov
xor
in
or
or
mov
dec
push
fs
dec
mov
call
inc
inc
sub
ds
adc
stos
adc
callw
rcrl
fistps
mov
ficompl
nop
pop
push
je
push
or
addb
and
or
mov
jecxz
adc
sbb
or
mov
push
inc
lods
xor
xor
sbb
enter
adc
dec
aam
out
lds
push
mov
dec
adc
int3
ret
push
sbb
outsb
inc
or
sub
xchg
mov
lcall
pop
adc
sbb
push
xchg
mov
xchg
int3
jg
orb
mov
or
add
leave
inc
lods
les
mov
sbb
sub
mov
pop
sarl
inc
xchg
push
lcall
or
add
inc
inc
push
es
add
js
dec
nop
std
jno
inc
xchg
ret
andb
jb
sbb
pusha
push
aam
stos
xor
fistps
enter
sbb
sbb
inc
xchg
or
mov
hlt
mov
fbstp
jb
push
rcl
push
iret
sti
and
les
xorb
push
xor
sub
jo
lea
enter
or
jl
sub
or
adc
adc
sbb
or
or
les
cmp
add
rcll
dec
bound
sbb
mov
rorb
divb
adc
lcall
lcall
dec
ljmp
jle
push
sub
sub
test
test
inc
gs
mov
dec
sbb
adc
and
int3
je
inc
dec
lea
push
dec
int3
sti
xchg
test
cmpsb
push
int3
cli
jp
je
shrb
lret
sbb
mov
pusha
pop
xchg
call
dec
sbb
ficomps
or
xchg
ret
sub
and
sbb
iret
inc
or
test
dec
lds
or
out
and
call
push
sub
or
add
les
xchg
mov
pop
lods
mov
pcmpgtd
adc
mov
sbb
cmp
sbb
cmp
loope
add
mov
and
dec
mov
lods
xor
push
pusha
or
dec
cwtl
int3
enter
je
xor
jg,pt
pop
and
mov
sbb
mov
rolb
sub
xorb
xchg
rcrb
sbb
mov
or
mov
test
filds
orl
pop
dec
cwtl
test
cltd
xchg
enter
sbb
xchg
leave
push
inc
sub
adc
adc
add
es
int3
incb
pusha
andb
xor
xchg
push
add
add
push
sbb
insb
mov
mov
inc
add
push
data16
add
test
std
and
lea
test
pop
lds
subl
insb
adc
test
push
test
mov
mov
shlb
and
push
dec
and
pop
push
sub
aam
test
mov
adc
add
add
inc
sahf
sbb
adcb
push
sub
or
jecxz
xchg
leave
dec
clc
push
stos
pop
inc
add
sti
pop
out
push
dec
jl
mov
enter
popa
data16
or
mov
lds
sbb
push
mov
addb
push
es
sub
mov
loopne
aam
mov
cmp
push
mov
inc
into
loopne
inc
mov
dec
mov
jg
xchg
mov
rcll
mov
repz
dec
dec
cmp
xchg
sti
mov
xchg
bound
inc
add
orb
aam
jp
mov
push
in
adc
rcll
cmpsl
in
pushf
test
push
push
add
dec
sub
xchg
push
sub
mov
sbb
push
xor
or
pop
adc
adc
aad
pop
mov
and
fidivrl
rorb
push
sub
loopne
pop
xchg
xchg
fcompl
inc
and
out
dec
je
mov
sti
ljmp
xor
subb
mov
cmp
je
andb
test
hlt
pop
fs
clc
dec
leave
and
push
or
xchg
mov
mov
or
mov
vpcmpgtb
insb
and
mov
xor
inc
aaa
or
cli
mov
adcb
bound
or
or
mov
add
jg
mov
xchg
icebp
cli
daa
fsubl
add
cmpb
and
dec
call
shlb
adc
fidivs
stos
jo
inc
inc
ficoms
mov
sub
out
add
sub
push
jbe
cmp
sub
fsubs
es
inc
mov
mov
add
jb
sbb
mov
cld
mov
jo
push
cs
inc
inc
sub
ds
aam
into
xor
or
adc
pop
push
inc
inc
inc
es
or
xor
outsb
fcoms
dec
dec
push
je
sbb
andl
shlb
popf
sbb
push
cltd
popa
addb
rolb
xor
cwtl
inc
mov
das
subb
add
add
pusha
pop
pusha
jo
jo
test
aam
push
mov
push
mov
xor
pop
cmpsb
mov
push
xchg
jb
add
or
shll
push
lock
cwtl
loopne
mov
adc
add
xor
or
pop
add
add
add
and
cmpsb
push
add
leave
movsb
cmp
push
mov
test
lret
add
add
insb
mov
or
adc
pop
shl
mov
push
sbb
ror
aam
adc
or
sahf
xchg
push
xchg
mov
cld
cmp
pushf
and
add
sbb
jne
sahf
rclb
outsb
pusha
int3
mov
xor
xor
testb
mov
xor
ljmp
insl
or
push
ss
and
add
adc
and
enter
sbb
bound
xor
in
sbb
mov
push
popa
push
or
js
shl
jle
daa
ficoml
xor
xor
shlb
shlb
mov
test
inc
lds
call
pop
sub
std
mov
ret
subb
push
mov
jle
jge
add
repnz
into
push
add
jle
sub
pusha
push
lret
call
fsubl
addb
popa
test
ret
inc
fadds
mov
xor
dec
stos
push
xchg
dec
js
push
xchg
test
les
cld
lds
roll
lcall
adc
add
or
sub
pusha
in
ret
add
cwtl
mov
loope
cmp
xor
adc
xor
mov
xor
ror
adc
add
mov
andl
test
es
mov
sub
mov
fisttps
dec
data16
and
mov
or
xor
mov
push
push
test
ret
cs
or
rcll
in
sarb
mov
xor
add
fisttps
pop
xor
inc
sbb
xchg
sahf
aam
inc
lods
push
test
sti
add
std
fbstp
pop
loopne
xchg
out
xor
test
enter
pusha
push
adc
andb
imul
pop
mov
fs
mov
add
movsb
ret
adc
push
inc
dec
enter
test
dec
aad
mov
sbb
adc
sbb
add
inc
es
or
rclb
test
jo
cmp
pop
and
fadds
cltd
sar
data16
data16
pop
loope
adc
xor
sub
sahf
sbb
mov
push
and
loopne
push
or
push
fsubs
add
out
psubusw
sub
inc
fiaddl
push
push
push
lea
push
cmp
add
sbb
add
push
aam
stc
sbb
push
jmp
sbb
xor
mov
jg
sub
andl
inc
orb
inc
add
out
adc
add
xchg
out
add
mov
and
inc
add
cmp
jbe
mov
add
push
adc
daa
sbbb
movsl
add
dec
adc
mov
bound
negb
out
es
aad
sahf
adc
fisubrs
mov
mov
sar
xor
jo
rorl
adc
push
dec
sti
mov
or
js
es
dec
hlt
loop
push
push
ss
pushf
lcall
add
lahf
jne
and
inc
arpl
adc
or
pop
arpl
add
stos
jo
jle
push
add
mov
imul
and
stos
sub
add
in
ds
daa
dec
mov
mov
mov
or
xorl
loop
movsl
push
pop
imul
jo
repnz
pop
fsubrl
add
add
les
cs
add
mov
add
sub
decl
sahf
add
mov
jne
jle
imul
out
outsb
inc
mov
rcll
cli
or
ret
sbb
sub
sub
int3
mov
push
jbe
addr16
xor
or
cmp
mov
push
test
push
mulb
push
add
xchg
push
loopne
test
inc
es
mov
adcb
or
mov
mov
mov
xor
add
into
sbb
lods
sti
add
push
test
cltd
mov
mov
add
pop
rclb
pop
add
mov
cmp
xor
call
shrb
push
mov
push
dec
shl
fsubrp
shlb
or
jbe
pusha
test
test
or
adcb
rolb
int3
xor
cs
std
leave
mov
test
push
adc
xor
push
mov
cs
sub
shll
xor
inc
jl
or
test
push
add
lock
aam
mov
cmp
addb
rolb
push
xchg
cmp
outsb
pop
in
test
push
adc
or
shl
test
xor
xchg
test
dec
sbbb
adc
je
inc
dec
adc
data16
cmpsb
sub
test
in
fs
sarl
shlb
addb
add
shrb
adc
xacquire
enter
orb
dec
sub
or
and
subb
pop
inc
mov
sbb
mov
ret
sbb
adc
xchg
sbb
add
je
add
adc
cld
push
adc
aam
je
add
call
mov
orl
add
mov
lock
mov
pusha
sub
and
push
in
test
and
in
fiaddl
inc
test
and
xor
call
inc
and
pop
and
adc
test
add
popa
cmp
sbb
or
test
push
test
sarb
pop
and
add
fsubs
adc
xchg
fcom
mov
call
sbb
enter
in
or
or
jl
adc
inc
pop
lds
or
orl
loopne
jb
dec
sbb
sub
mov
test
sti
mov
add
aam
fadds
test
xchg
iret
and
push
test
sbb
dec
sub
lds
mov
and
jp
adc
sbbl
test
adc
sbb
mov
std
push
lea
pusha
enter
mov
bound
cmp
ret
shll
pushf
dec
or
xchg
jae
xor
adc
inc
ret
mov
adc
xor
xchg
pop
push
inc
pusha
mov
testb
mov
ficompl
adc
and
inc
dec
mov
bound
dec
rcrb
ss
popw
test
or
push
xor
adc
push
mov
xchg
xchg
nop
add
loopne
hlt
push
loopne
xor
insb
mov
and
adc
enter
jmp
adc
filds
adc
es
loopne
mov
nop
stos
sti
xor
or
inc
push
push
dec
push
push
dec
je
xor
cmp
cmpsb
jg
rcrb
dec
insl
xchg
mov
xchg
jo
data16
cmp
add
sbb
fs
rcrb
cmp
loopne
stos
pop
pusha
push
xor
hlt
std
mov
add
push
orl
mov
cmp
mov
jle
test
aam
mov
and
ss
test
cmp
xchg
jp
xchg
mov
push
test
xor
leave
lcall
iret
and
push
xor
mov
push
sub
dec
inc
and
xchg
mov
sub
xor
dec
cli
mov
mov
mov
enter
scas
add
movsl
push
enter
mov
mov
popl
mov
adc
sbb
mov
or
inc
xor
adc
pop
mov
or
mov
test
cltd
add
inc
or
js
add
push
xchg
and
in
mov
xchg
push
adc
lods
pushf
sub
dec
pop
jo
dec
test
mov
and
mov
or
ficoml
pop
xor
mov
sbb
jmp
adc
shlb
mov
ja
gs
cld
ficoml
and
push
inc
push
cld
add
add
mov
push
decl
pop
push
pop
mov
leave
mov
xor
mov
ficoms
adc
mov
daa
or
out
sahf
imul
and
add
xchg
xchg
dec
inc
xor
dec
mov
xor
decb
lock
lods
adc
pop
incb
cli
call
mov
jecxz
ljmp
inc
test
cmpsb
into
mov
pop
xor
xchg
or
xchg
ljmp
adc
insb
mov
call
or
inc
sbb
lods
adc
mov
xchg
add
fs
dec
adc
sub
cwtl
test
push
xor
and
adc
rclb
and
or
add
adc
ljmp
and
and
stos
in
mov
int3
test
out
push
pop
cwtl
inc
and
out
jo
xchg
les
sub
roll
popa
jp
stos
leave
fisttps
push
add
cmp
in
add
pop
jg
clc
adc
test
pop
xor
test
pop
or
xchg
lock
call
aam
mov
sbbl
push
sbb
xor
xor
sub
int3
sub
testb
sub
stos
dec
and
mov
mov
add
dec
cmp
inc
xchg
dec
cmp
test
mov
dec
movsl
subb
pop
xor
or
xchg
fs
adcb
add
ret
mov
push
dec
test
cmpsb
int
adc
mov
inc
mov
mov
push
inc
mov
data16
or
jo
int
adc
xchg
sub
pop
mov
xor
cmp
test
shlb
add
push
lods
sub
mov
mov
mov
incb
and
test
mov
lods
pop
ds
and
outsb
inc
cltd
int3
orb
mov
push
and
push
xor
or
cmpsb
aam
inc
pusha
cwtl
lret
out
in
ret
dec
mov
and
movsb
inc
inc
test
xchg
sbb
pop
jo
push
and
sbb
sub
aaa
xchg
imulb
test
test
mov
gs
jbe
js
lods
push
push
sbb
call
dec
nop
inc
xor
or
add
adc
inc
push
cmp
mov
pop
mov
and
fiadds
shrb
xchg
xor
nop
push
inc
inc
xorl
pop
or
push
add
adc
push
push
xor
sub
dec
push
sbb
nop
jo
in
pop
cmp
jb
adc
test
or
add
mov
and
add
lock
push
sub
adc
inc
aaa
ret
push
pop
orl
mov
adc
push
jbe
ret
cs
nop
jg
fs
jbe
int3
add
aam
xchg
or
rclb
ljmp
xor
mov
loope
data16
dec
shrb
ret
loopne
mov
inc
lock
adc
sbb
mov
ds
rolb
mov
lock
push
inc
test
test
mov
add
andb
pop
inc
test
dec
enterw
xchg
jbe
fmuls
sbbb
aam
xor
add
sbb
and
inc
leave
xchg
dec
bound
mov
es
add
and
cmp
dec
test
lret
mov
mov
test
incb
ret
inc
mov
orb
inc
fmull
cli
sub
sti
xchg
or
dec
xor
lcall
or
jbe
push
aam
cmp
mov
rolb
inc
sti
test
dec
push
fs
loope
xor
test
test
mov
adc
sub
aam
inc
leave
adc
scas
adc
mov
adcb
or
subb
and
mov
sbb
add
jl
push
push
or
dec
daa
push
mov
mov
cmpsl
jo
inc
stos
in
rolb
inc
cs
push
xchg
pop
mov
xchg
test
xor
lcall
aam
lods
and
data16
jbe
add
adcb
sub
enter
jb
fwait
mov
and
sbb
push
pop
call
adc
rol
pop
hlt
or
mov
xor
std
stos
xchg
dec
sub
mov
push
mov
pop
xlat
mov
stos
sbb
loopne
loopne
fxam
jg
mov
rolb
in
inc
ja
sbb
aam
aas
cmc
jecxz
cmp
adc
inc
loopne
std
dec
std
dec
lret
sbbl
adc
sub
shll
lds
inc
inc
popa
mov
xor
add
scas
cmp
push
pop
loop
add
in
enter
and
ljmp
cmp
in
pop
mov
rolb
mov
test
fsubp
add
test
fs
cmpsb
mov
xchg
xchg
push
nop
lret
call
sbb
mov
xor
loope
cmpsb
push
add
addl
movsl
mov
push
faddl
mov
adc
js
test
and
mov
inc
or
into
xor
xor
dec
jne
sti
dec
test
movsb
add
lcall
mov
push
outsb
sbb
lea
adc
push
and
sbb
push
mov
dec
cmp
and
mov
and
xchg
push
dec
xchg
sbb
test
test
sub
out
loopne
nop
push
shrl
mov
jle
cwtl
push
sub
adcb
cmpsb
push
dec
sbb
inc
shl
and
shlb
fsubs
xchg
data16
leave
jp
jo
add
cmpsb
sbb
and
in
incb
sub
or
data16
push
test
test
push
dec
push
roll
pop
push
gs
aaa
push
fistps
andb
inc
repnz
adc
cwtl
fistl
mov
cmp
mov
add
inc
add
js
sbb
add
mov
xchg
pop
fs
jp
adc
fadds
mov
les
adc
adc
xor
es
lods
dec
std
adc
int3
xchg
xor
xchg
sub
pushw
push
and
sbb
xor
sub
push
push
inc
jo
or
bound
int3
adc
mov
xchg
adc
push
push
mov
or
add
lcall
cwtl
xchg
lcall
out
adc
push
rclb
popf
stos
adcb
hlt
dec
movsl
pusha
push
dec
and
loopne
push
sub
popa
adc
dec
bnd
and
push
cmpb
mov
jo
outsb
mov
sbb
lret
inc
xchg
push
or
xor
test
movsl
push
mov
dec
pushf
nop
shll
jg
jbe
test
decb
test
cmp
and
mov
ret
and
fwait
or
push
sbb
cwtl
leave
push
xor
inc
mov
pushf
pop
sbb
sbb
push
xchg
inc
and
jb
mov
xchg
jl
jb
inc
add
inc
jp,pt
addl
aam
insb
das
inc
gs
mov
cmpb
jo
push
inc
xor
jo
call
add
mov
mov
jne
xchg
push
fs
leave
insb
cmp
lock
in
and
loope
sbb
es
pusha
addb
jl
cmpsb
push
add
aam
adc
pop
scas
or
adc
add
pop
and
subb
pop
xabort
leave
std
sbb
loopne
hlt
xchg
sub
push
cmc
xor
idivb
cwtl
xor
and
stos
sbb
xchg
mov
xchg
adc
in
lods
sbb
fists
hlt
scas
push
push
cld
or
aam
iret
mov
mov
fsubrl
addl
inc
inc
sub
in
popa
adc
pusha
xchg
outsb
adc
xchg
push
inc
mov
mov
xchg
lock
jle
out
mov
cmp
rcl
sti
add
inc
adc
cltd
inc
in
fcompl
inc
cmpl
iret
lds
xor
ret
mov
jle
adc
cmp
lods
jecxz
push
test
and
adc
lea
or
hlt
loope
or
mov
inc
mov
test
push
inc
dec
dec
or
ret
mov
xchg
fs
mov
into
cli
xchg
lret
call
inc
push
test
sahf
addb
and
shl
pushf
add
std
add
mov
mov
or
or
jl
pop
js
test
dec
repnz
mov
insb
addb
push
cltd
inc
in
mov
sbb
or
inc
aam
mov
icebp
jp
int
into
stos
pop
sti
aam
push
cmpsb
sbbb
clc
or
pop
mov
mov
dec
inc
les
loopne
dec
sub
pushf
stos
xchg
rorb
adc
inc
inc
stos
cmp
xchg
out
in
and
sub
jl
xchg
cmp
push
cmp
test
jg
sub
pop
push
lret
repnz
mov
test
pop
pusha
iret
adc
or
hlt
pop
inc
dec
pusha
xor
aam
lock
sar
fists
sub
adc
dec
xchg
repnz
nop
cli
mov
mov
and
dec
jl
dec
in
push
test
leave
mov
xorb
and
data16
or
xchg
xchg
sub
mov
xchg
in
lcall
xchg
movsb
repnz
xchg
shrb
or
xchg
add
hlt
call
add
adc
leave
stos
xor
ret
pusha
sub
pop
push
lret
pop
add
ret
enterw
sub
add
mov
dec
push
mov
into
data16
adc
mov
daa
leave
sub
popa
sub
adc
push
cld
shrb
inc
or
jno
sbb
push
push
es
inc
sub
xor
sahf
movsb
in
dec
inc
adc
stos
rolb
adc
push
leave
and
bound
mov
mov
mov
dec
mov
sub
es
shll
loope
push
into
adc
ljmp
xor
pop
sti
mov
cld
lods
cmp
push
lret
test
movsl
outsb
insb
push
push
jne
push
test
test
xchg
add
sub
movsl
push
pusha
push
push
outsb
shlb
xor
hlt
push
fdivrs
adc
xchg
or
sti
pop
mov
add
xor
sarb
push
add
xor
adc
les
xchg
out
and
ds
shlb
mov
mov
inc
sub
inc
fisubrl
popa
push
xor
mov
sub
or
xor
sbbb
inc
xor
xchg
add
test
rcrb
or
sbb
enter
xchg
in
test
orb
inc
mov
movsb
xchg
inc
stos
and
adc
mov
xchg
xor
hlt
inc
mov
xor
adc
inc
clc
mov
sub
xor
hlt
push
lds
dec
shlb
dec
fs
inc
or
or
xor
push
inc
movsb
push
cltd
xor
mov
les
cwtl
lock
adc
sbb
add
inc
gs
ret
jo
xor
stos
hlt
adc
test
inc
sub
fimuls
es
loopne
cmp
inc
mov
push
xchg
and
push
std
xchg
loopne
inc
cmp
xchg
aam
mov
mov
inc
fiadds
xchg
inc
and
mov
adc
int3
int3
xchg
shlb
inc
or
inc
mov
sub
add
pusha
es
dec
fsubp
push
data16
push
lea
clc
inc
xor
ficoms
and
push
pushf
pop
call
sbb
xchg
testb
push
sbbl
inc
ret
jae
cmp
cmp
pop
sbb
adcb
jl
scas
adc
mov
aam
xchg
inc
jae
adc
shrb
dec
js
sub
test
push
add
incb
xchg
mov
pop
sub
jl
inc
fcomp
jg
adc
mov
and
mov
hlt
mov
sahf
dec
and
lods
call
sbb
sub
pop
xor
mov
hlt
sub
push
call
in
movsb
pop
mov
jo
add
mov
and
cmp
lods
and
xor
pop
rcrb
pop
dec
xor
xor
pop
push
jp
call
enter
jg
mov
xor
xchg
xchg
sub
push
xchg
push
lcall
dec
xchg
sbb
mov
inc
sub
in
and
and
repnz
add
xorb
inc
cmp
movsb
sub
std
je
jp
inc
movsl
nop
repnz
les
xor
lret
xor
jp
sub
mov
ljmp
xchg
in
push
inc
call
cwtl
cmp
cmp
xorl
mov
adc
rcl
and
push
adc
add
daa
and
and
pop
sub
stos
loopne
xor
sbb
add
pop
xchg
ds
and
cwtl
lret
inc
jp
cmp
pop
pop
cmpsb
xor
bound
or
in
js
inc
xchg
push
ret
sub
popa
sbb
sub
or
add
int3
shl
cwtl
and
jno
pushf
jbe
test
inc
adc
adc
xor
shlb
fmull
mov
inc
out
fbstp
pop
add
push
mov
pop
in
popf
push
mov
andb
hlt
in
dec
or
stos
inc
cmpsl
mov
mov
movsb
rcr
jle
and
adc
xor
adcb
js
in
push
mov
push
dec
mov
out
pop
loopne
jb
nop
or
mulb
dec
add
fsubs
or
lcall
and
cmpsb
test
dec
shrb
xor
and
roll
jg
or
add
and
aam
inc
leave
pusha
das
xor
and
xor
or
sub
mov
cmp
lock
mov
movsb
nop
adc
pushf
jle
dec
rolb
ret
fisubl
inc
sub
fdivl
je
cs
push
mov
jne
std
mov
mov
es
scas
jo
lock
push
out
sbb
push
add
sub
sti
sub
inc
sub
push
rol
movsb
std
xchg
fmul
test
sbb
adc
push
shrl
add
adc
xchg
mov
aam
leave
gs
je
xor
enter
push
xchg
add
pop
dec
clc
push
cltd
dec
clc
in
sub
subb
ret
adc
pop
jo
mov
cmp
pop
stos
orb
mov
mov
test
xor
lock
xor
data16
inc
xchg
lock
fs
adc
or
pop
or
adc
int3
sub
int3
add
mov
je
test
movsb
and
push
inc
dec
test
jb
sub
jo,pt
push
push
pop
jo
inc
sub
pop
sbb
jecxz
xchg
add
test
test
inc
aam
in
add
and
ret
push
je
inc
dec
insb
ljmp
pusha
add
sub
mov
cmp
sbb
sub
jo
out
aam
stos
lret
test
or
xchg
movsb
nop
push
jb
or
lret
in
ds
test
inc
mov
leave
push
jp
pop
rorl
les
mov
inc
mov
push
fisubrs
or
push
inc
pop
mov
orl
lret
mov
xor
fs
es
loopne
push
loop
lret
repnz
dec
enter
adc
or
add
scas
fcoms
cs
pushf
mov
lods
rolb
test
xor
jl
aam
shlb
cmpsb
sub
lcall
xor
and
add
push
inc
test
out
and
xor
cmp
xchg
ret
pop
stos
test
pop
and
and
sti
push
adc
fdivrl
mov
xor
sbb
sahf
loopne
xchg
dec
gs
add
out
fidivl
pop
sub
popa
xor
mov
clc
sub
lret
push
push
ret
and
or
andl
mov
rorl
inc
xor
ret
aam
inc
and
subb
xor
orb
cld
call
add
xor
ljmp
lock
and
aam
or
fcmove
movsb
ret
pusha
xchg
mov
dec
out
xorl
adcb
xchg
push
in
cmp
fs
inc
test
push
jp
sbb
pop
mov
inc
inc
sbb
stos
fmuls
adc
adc
test
sub
mov
or
adc
cli
sbb
lretw
adc
mov
rorl
pop
dec
mov
xor
xchg
movsb
hlt
and
data16
je
mov
pusha
inc
and
cmp
fcoms
or
pushf
sub
cwtl
add
out
push
dec
push
dec
lahf
call
adc
add
negl
test
adc
lods
popl
out
add
sub
mov
sub
inc
adc
add
add
pop
xchg
pop
inc
pop
adc
add
mov
decl
in
adc
sbb
push
push
dec
push
adc
dec
adc
push
cli
incl
sbb
add
sub
pop
sub
xor
adc
mov
leave
ret
xchg
push
lock
or
cmp
sahf
or
add
mov
loopne
sbb
ret
add
cmp
cmp
lret
sub
ss
sub
xor
repnz
pop
sub
push
and
test
pop
outsb
dec
adc
mov
fcmovbe
aad
loope,pn
inc
in
ss
subl
inc
or
test
xor
sub
decb
inc
add
test
pusha
xor
xchg
or
and
sub
addb
sbb
leave
shll
test
xor
xchg
mov
xchg
pop
ret
rolb
shrl
xchg
and
dec
lds
aam
adc
je
sbb
inc
ret
aam
out
dec
sub
mov
adc
fdivr
inc
mov
add
lea
adc
mov
xchg
mov
cmp
xchg
inc
or
sbb
in
in
lods
xor
sub
aam
dec
jo
dec
out
shlb
pop
inc
out
nop
shll
out
dec
stos
aad
xchg
mov
pop
cwtl
ljmp
and
adc
inc
or
sub
jne
outsb
or
adc
fsts
or
std
pop
sahf
dec
lods
dec
ljmp
xchg
dec
xorb
loop
sbb
add
orb
pusha
andb
jae
push
mov
repnz
mov
jl
mov
ret
push
popa
lea
mov
push
les
xchg
fs
inc
stos
cltd
xor
sti
mov
test
xchg
pusha
shr
xchg
test
dec
orl
pusha
int3
nop
cmp
and
xchg
and
mov
jo
mov
xchg
push
call
xchg
imul
movsl
xchg
or
xchg
add
xchg
sub
movsb
xchg
loopne
nop
insb
and
xor
jo
and
push
test
mov
jb
iret
jb
cmpb
or
and
push
imul
dec
add
cs
pop
and
mov
adc
pushf
loopne
lods
push
xor
or
int3
and
add
and
mov
fsubp
push
shrb
rclb
or
sahf
ljmp
xorb
add
insb
cmpsb
or
fdivrl
mov
adc
andb
sbb
mov
add
xor
or
movsb
or
dec
adc
or
mov
or
xor
shlb
mov
push
xchg
movsl
push
sub
dec
lock
push
cmpsb
rolb
and
mov
adc
cmp
loopne
add
and
fmul
or
clc
jbe
test
xor
fisubs
xchg
xchg
inc
repnz
or
fs
adc
fbstp
pop
adc
in
in
pop
mov
mov
mov
call
pop
and
push
inc
je
test
dec
adc
fists
loop
pop
icebp
add
ret
shrb
inc
fcoml
push
out
mov
pop
or
pop
push
xchg
bound
inc
xchg
je
decb
inc
mov
adc
je
mov
lds
pop
pop
xchg
sbb
shll
into
jne
bound
and
pop
fistps
sub
call
adc
jo
pusha
in
and
int3
xchg
cld
dec
pop
add
adc
pop
push
test
xchg
mov
sbbb
mov
cwtl
pop
mov
jb
into
xchg
or
cmpsb
inc
cmp
popa
mov
in
pusha
in
out
sbb
push
or
mov
adc
inc
lods
and
mov
loop
cmc
push
shrb
dec
jo
mov
cmpsb
adcb
movsb
jecxz
adc
and
repnz
or
call
push
shrl
cli
sub
and
adc
pop
pop
ficompl
adc
xorb
mov
push
adc
popa
test
enter
xor
add
sub
push
adc
adc
and
sbb
mov
pop
nop
pop
mov
in
mov
add
sub
mov
xor
les
xor
or
or
mov
mov
adc
inc
push
in
pop
jb
mov
xchg
inc
mov
daa
fdivrp
adc
add
cli
push
mov
stos
leave
outsb
push
and
mov
les
adc
icebp
lds
add
push
push
dec
jo
mov
push
test
ret
sub
mov
movsb
in
push
hlt
push
push
push
push
in
add
sbb
mov
test
inc
or
cmpsl
call
rorl
ljmp
cmc
push
pop
pop
dec
inc
cmc
cmpsb
or
cld
ss
pusha
sbb
shlb
mov
mov
mov
stos
iret
xchg
cmp
enter
xchg
push
sbb
sbb
leave
jecxz,pn
push
enter
add
mov
mov
test
sbb
mov
adc
adc
or
loope
popa
fdivrl
inc
push
xchg
pop
sub
mov
push
add
adc
push
sbb
mov
inc
jb
loope
enter
dec
mov
or
push
adc
push
and
incb
pushf
push
js
xchg
push
ljmp
add
dec
mov
mov
rolb
pop
xchg
inc
fimull
xchg
int3
push
js
push
cmp
imul
adc
mov
push
enter
add
mov
and
adc
push
add
inc
and
jp
pop
out
int3
cwtl
sub
add
jb
in
push
and
ret
pop
push
sub
adcl
adc
adc
inc
and
inc
aam
movsl
adc
fidivl
push
push
daa
add
in
mov
clc
adc
cwtl
add
xchg
add
lods
push
call
test
ljmp
dec
cmp
xchg
cltd
inc
cmpsb
mov
cmpsb
cmpb
inc
enter
cltd
mov
xchg
xchg
xor
mov
inc
insl
xor
inc
lods
test
mov
into
test
mov
jl
sti
sub
fists
sbb
jle
add
add
pop
add
and
ljmp
jp
fcoms
add
out
leave
add
xor
pop
xchg
lcall
sbb
push
pusha
int3
nop
call
sbb
and
dec
mov
fs
clc
sbb
iret
xchg
or
scas
orb
sahf
lock
cmp
mov
rcrb
inc
push
lret
sahf
push
ss
sub
bound
movsl
dec
loop
data16
cmp
sbb
leave
and
test
add
xchg
or
leave
dec
sub
mov
xchg
mulb
hlt
mov
clc
pop
jl
ljmp
enter
xorl
popa
ret
dec
inc
xchg
pusha
add
or
xchg
popa
insb
xor
sbb
mov
or
decb
in
mov
sbb
xchg
lret
add
cmp
mov
test
adc
lret
lock
jg
inc
cmp
pop
insb
and
dec
lods
add
sub
sub
dec
sub
push
dec
push
cmp
push
sub
dec
rcr
and
or
add
lea
cltd
inc
xor
mov
add
push
cmpsb
call
and
xor
dec
popa
xchg
cwtl
data16
into
dec
adc
shl
test
out
adc
cmp
push
stos
and
push
pop
push
sti
inc
add
push
xchg
repnz
scas
add
mov
pop
adc
stos
or
mov
daa
enter
insb
jbe
and
push
sub
add
inc
sarl
push
push
sbb
xor
adc
arpl
xchg
pop
nop
adc
sub
and
pop
sti
int3
adc
enter
rcrb
lock
shlb
dec
adc
xchg
ret
cmp
in
adc
shrb
stos
lret
dec
sub
cmp
mov
inc
xchg
pop
aam
inc
je
push
xorb
jo
dec
inc
xchg
sbb
push
push
mov
repnz
xor
fwait
pushf
jl
call
sub
inc
loope
andb
dec
mov
push
cmp
dec
fwait
sub
pop
push
and
in
add
or
fiadds
and
pop
test
push
lcall
sbb
sub
cmp
or
addb
call
clc
decl
iret
mov
sub
sbb
dec
adc
mov
inc
mov
xchg
pop
cli
cs
dec
cwtl
mov
ret
test
push
popf
adcb
je
test
jo
stos
lret
add
add
les
xor
adc
inc
in
stos
pop
sub
inc
xacquire
xor
adcb
cltd
pop
lcall
insb
insb
mov
clc
call
ljmp
cld
loopne
cmp
or
mov
mov
popa
and
outsb
test
or
add
and
fistpll
xchg
xchg
cmp
out
or
adcl
sbb
push
inc
popf
scas
adc
jg
cld
call
xor
shrb
mov
xchg
jl
dec
ret
test
scas
and
mov
sub
add
cmpsb
adc
dec
popa
cwtl
imul
add
xor
ds
push
dec
data16
mov
sahf
leave
rol
dec
add
lods
or
inc
hlt
movsl
and
call
dec
xchg
insb
test
jae
and
mov
push
jae
iret
rclb
adc
dec
and
rcrb
or
iret
or
sub
cmp
es
inc
mov
xor
sub
pop
jo
test
fadds
adc
adcb
cmpsl
add
scas
and
sub
add
or
xchg
sbb
xchg
in
dec
or
jp
icebp
xor
cmp
in
xchg
pusha
dec
cltd
mov
add
pop
adc
mov
xchg
inc
xchg
xor
fs
sub
add
mov
addr16
movsl
mov
aam
sbbb
bound
push
aad
mov
inc
adc
data16
out
inc
loopne
jo
dec
dec
cwtl
lcall
xchg
loope,pn
shrb
push
imul
push
int3
loopne
mov
inc
adc
fisttps
pop
xchg
fs
adc
leave
jb
outsb
stos
es
fs
mov
jbe
call
xor
and
and
add
dec
cmovs
push
repnz
jo
loopne
sarb
hlt
test
jle
push
rorl
mov
or
add
fiadds
cmp
add
mov
loopne
jg
hlt
adc
ret
ljmp
jl
or
inc
shrb
xchg
lcall
std
sub
orb
add
add
sub
push
pushf
pop
push
push
dec
dec
stos
aam
sub
ss
pop
mov
add
hlt
sahf
pushf
test
outsb
cmp
push
lds
dec
mov
inc
inc
push
pop
lock
andb
push
or
push
filds
test
fildll
loopne
in
test
mov
mov
push
pop
mov
mov
out
dec
outsb
inc
xor
imul
fiaddl
push
mov
lods
test
xchg
enter
shlb
sbb
and
pusha
adc
mov
sbb
adc
ljmp
fcompl
bnd
xor
add
adc
adc
sub
jo
mov
aam
lods
bound
mov
or
in
lcall
test
add
mov
or
inc
add
fmul
mov
adc
xor
push
nop
mov
out
es
xchg
mov
pop
inc
push
xchg
decb
sbbl
lods
xchg
fidivl
dec
add
or
add
mov
iret
bound
xchg
fdivr
add
adc
scas
add
xchg
or
outsb
mov
dec
sbbb
cmp
ficoml
pop
aaa
lock
jg
mov
or
int3
xchg
out
sub
mov
je
dec
push
enter
test
and
xchg
pop
or
orb
dec
xchg
sbb
mov
and
jo
les
ret
add
in
jle
in
dec
or
test
in
adc
jbe
cs
rolb
jp
push
mov
push
sbb
int3
sti
movsb
lcall
and
adc
in
pop
sbb
ljmp
jecxz
mov
xor
inc
adc
add
dec
packssdw
and
out
mov
adc
push
lock
push
lea
aam
lret
pop
xchg
subl
push
xchg
push
sbb
push
push
hlt
add
ljmp
dec
mov
push
testb
loopne
mov
rcl
or
sbb
iret
dec
inc
xor
pop
cmp
lret
and
mov
jo
pop
push
add
stos
cmp
fcoms
gs
int3
xchg
inc
adc
dec
dec
or
pop
xor
and
js
jl
sub
xchg
inc
push
idiv
add
xchg
ds
ficoml
repnz
les
adc
sbb
lods
sbb
adcl
push
xor
xor
cltd
or
push
shl
push
ret
int3
pop
in
out
call
test
lds
or
add
shlb
dec
sub
inc
cwtl
and
xchg
inc
sbb
in
sbb
xchg
inc
nop
popf
and
in
push
inc
cwtl
inc
leave
add
icebp
fs
inc
or
or
push
fidivl
sub
ret
shlb
dec
mov
and
and
test
sti
sar
pop
int3
sbb
push
sub
pop
aam
mov
ljmp
mov
insl
dec
inc
add
xor
or
cmp
test
fsubrl
pop
jo
adc
adc
pushf
nop
dec
insb
addl
push
push
in
push
sub
test
push
mov
leave
cli
sti
and
inc
add
mov
cmp
pop
push
int3
ficoml
jb
add
mov
test
sbbb
and
notb
xorl
inc
pop
data16
adc
roll
ljmp
inc
and
xor
sbb
xor
adc
push
lcall
int3
popa
cmp
add
insb
or
xchg
and
cs
xchg
addb
enter
xor
sbb
clc
and
add
sahf
inc
add
xor
sbb
fidivrl
int3
xchg
add
add
inc
adc
xchg
int3
push
adc
xor
and
andl
inc
inc
movsb
xchg
mov
cmpsb
jo
cli
and
inc
sub
std
les
or
test
leave
and
sbbl
popa
cltd
mov
sub
adc
mov
jp
add
lea
inc
outsb
xor
cld
push
ljmp
push
mov
add
adc
ficompl
incb
sbb
mov
mov
add
hlt
mov
test
test
xchg
xchg
sbb
vmovss
fs
mov
mov
divb
bound
or
mov
bound
adc
and
xchg
test
rclb
aam
xor
loope
test
sub
loope
pop
dec
ficoms
rclb
xor
push
xchg
push
aam
sub
or
dec
and
ds
add
add
sub
cltd
subl
gs
scas
push
push
dec
xchg
dec
cs
hlt
dec
jb
or
stos
sub
hlt
adc
pop
lock
mov
hlt
adc
sub
mov
inc
mov
push
xor
dec
mov
mov
mov
in
sub
movsl
mov
or
and
xor
and
jbe
lret
imul
out
add
dec
mov
and
dec
pusha
int3
js
sbb
mov
add
pop
inc
ds
pop
xchg
jp
inc
sbb
sub
rorb
and
fisubl
cmp
mov
xchg
xor
add
fists
addb
sahf
aam
sbb
xor
push
enter
adc
add
push
push
in
cmp
inc
dec
lea
mov
mov
adc
add
cmp
push
cmp
or
or
ds
lds
inc
mov
xchg
ret
shl
xchg
popa
bound
xor
inc
mov
fistps
sbb
adc
inc
pop
adc
sub
jle
into
add
cmpb
addb
leave
sbb
add
movsb
sub
ss
pushf
inc
outsb
ret
mov
mov
mov
call
mov
mov
pusha
test
mov
add
dec
or
out
sub
push
push
enter
imul
fbstp
dec
push
sbb
inc
jb
movsl
ds
pop
add
cmp
jge
push
sahf
add
subb
lea
push
add
lcall
or
push
iret
popf
cltd
xchg
or
sbb
dec
adc
pop
or
sbb
pop
adc
or
push
xor
xor
loop
and
pushf
dec
adc
push
int3
and
push
adc
add
into
push
pop
or
in
add
lods
inc
pop
mov
mov
hlt
push
or
xchg
add
adc
xchg
call
mov
shlb
and
and
pop
icebp
ljmp
lods
adc
inc
adc
add
gs
test
cwtl
sbb
push
dec
scas
mov
jg
testb
push
and
adcl
movsl
xchg
insb
notb
mov
lcall
or
sub
enter
or
fs
fsubl
test
es
dec
or
repnz
mov
sub
add
xor
or
pop
adc
andl
xchg
stos
mov
xor
lcall
push
and
push
mov
cmpsl
add
aam
mov
loop
sahf
jg
add
cltd
ret
cmp
jle
repnz
ss
xchg
bound
sbbl
pop
bound
hlt
adc
adc
lock
sbb
mov
mov
insb
dec
cld
pop
xchg
fdiv
adc
aam
jo
inc
sub
xor
sub
sub
stos
dec
iret
iret
insb
sti
rol
loopne
ficomps
xchg
roll
xchg
test
ljmp
mov
dec
ss
add
mov
ret
shlb
test
and
push
sub
cld
bound
inc
push
xchg
cwtl
pop
or
ret
push
int
test
int3
and
or
xchg
or
mov
add
xchg
mov
add
mov
push
xor
les
int3
sub
adc
add
pop
jno
push
scas
std
xchg
mov
movsb
les
jb
sti
mov
fdivs
or
cld
cmpsb
cltd
bound
mov
repnz
push
in
stos
pushf
ret
dec
mov
cltd
popa
add
inc
mov
cwtl
xchg
add
adc
cli
mov
or
clc
nop
push
nop
inc
mov
loop
push
bound
orb
adc
popa
cmp
lret
xchg
inc
or
nop
test
push
in
ret
dec
out
jbe
or
adc
add
test
mov
jb
iret
hlt
cwtl
mov
ret
inc
dec
sub
mov
push
or
sti
mov
add
add
pop
outsb
test
adc
cltd
mov
pusha
data16
insb
xor
dec
mov
in
mov
adc
xor
aaa
lcall
inc
pusha
push
int3
inc
adc
inc
dec
or
adc
add
adc
arpl
std
jbe
cmpsb
xchg
push
push
mov
and
sub
and
dec
loopne
or
push
push
push
jl
xor
pop
dec
xchg
adc
enter
add
mov
sbb
call
push
mulb
push
dec
mov
or
ret
push
adc
fiaddl
addb
xor
pusha
push
xchg
cmp
sbb
dec
ret
xchg
jb
hlt
pushf
dec
add
pop
pop
sub
adc
sahf
repnz
shll
aam
cmp
or
push
sbb
in
xor
xor
pusha
pop
lcall
sub
popa
mov
xor
dec
mov
dec
stos
rclb
loopne
scas
std
or
or
jb
sub
pop
push
add
data16
xorb
orb
pop
push
fs
insb
js
inc
data16
stos
lcall
push
inc
cmp
xchg
lcall
and
sub
bound
push
add
in
rorb
xchg
push
lret
add
jo
sbb
lret
and
scas
mov
jbe
std
xor
mov
or
jb
add
test
pop
and
out
push
or
inc
or
fs
nop
mov
or
dec
insb
xor
xlat
cmpsb
test
and
ss
jnp
push
cltd
push
into
scas
push
jl
rorb
push
mov
lretw
out
sub
or
push
cmpsb
add
fs
pop
jp
push
test
adc
stos
les
pop
xor
xor
dec
inc
xchg
dec
sub
sbbb
and
pop
push
mov
xchg
fdiv
sbb
or
mov
xchg
mov
mov
and
pop
stos
ss
xor
clc
adc
or
add
xchg
push
movsl
faddl
dec
mov
mov
sbb
les
call
and
push
mov
add
cs
mov
inc
or
and
dec
dec
sub
clc
sbb
into
cmp
adc
add
or
xchg
aam
cwtl
cmp
in
cwtl
nop
mov
add
mov
sub
les
dec
ret
push
int3
mov
in
dec
mov
fcmove
mov
adc
pusha
mov
xor
cmpsb
add
addb
jbe
aam
test
pop
pop
into
push
push
xor
mov
adc
insb
or
out
add
sbb
popa
push
push
add
xor
pusha
adc
fadds
adc
and
lods
retw
or
xchg
sub
aam
sbb
pusha
cmp
loopne
mov
mov
test
xor
mov
pop
sub
cwtl
rclb
sbb
adc
dec
add
pop
ljmpw
orb
sub
inc
push
push
loopne
inc
push
cwtl
jo
enter
dec
mov
mov
bound
in
cmp
cmp
test
decb
scas
mov
dec
mov
push
lret
mov
jb
aam
movsb
push
mov
add
inc
pop
add
pushf
sbb
sub
lock
mov
jg
xor
loopne
sbb
pusha
rorb
add
push
cs
pop
dec
push
xchg
aam
in
and
pop
xor
adc
add
adc
push
mov
and
pop
sub
aad
repnz
mov
cmpsb
subl
sahf
mov
dec
inc
inc
xacquire
cli
dec
es
addb
sbbb
or
lret
insb
sub
or
es
sub
xchg
lret
and
scas
add
rcrb
inc
add
pusha
push
dec
inc
jp
and
es
sbb
pop
pop
xor
sahf
ficomps
xor
xor
nop
xor
movsl
movsb
mov
push
pop
push
loop
adc
sbb
inc
mov
inc
adc
mov
mov
mov
cmpsb
push
lret
shlb
nop
inc
nop
inc
push
cmpsb
movsb
cli
mov
cs
adc
sub
push
sub
pop
xor
sbb
add
mov
push
adc
das
ret
test
sub
subb
fdivrl
xchg
pop
xlat
pusha
stos
test
lds
cmpsb
aaa
int3
push
ss
sti
in
mov
jg
adc
in
dec
sbb
sbb
xchg
data16
mov
push
dec
mov
push
int
sbb
pop
mov
daa
pop
les
sbb
push
mov
xchg
dec
and
inc
jo
push
lock
aam
xchg
ret
test
push
inc
mov
xor
aad
mov
icebp
inc
movsb
ret
loopne
inc
shr
test
call
push
cmpb
cmp
push
adc
push
scas
test
or
sbb
xor
xor
jo
sub
sbb
dec
inc
sub
es
sahf
pop
mov
dec
mov
sub
xchg
adc
clc
push
fidivl
ficoml
dec
ficomps
lods
push
jb
push
inc
test
cli
mov
dec
lcall
cmp
add
push
cmp
xor
push
pop
mov
xor
aam
xchg
and
test
push
mov
push
mov
push
or
pop
inc
vunpcklpd
movsb
dec
rclb
or
sbb
dec
call
xor
cmpb
xchg
pop
fwait
enter
xchg
xchg
dec
das
xor
cld
cmp
movsl
and
pop
jb
add
ret
sub
fs
test
mov
mov
pop
jle
mov
jg
sub
lea
push
push
push
or
jb
sub
orb
inc
ret
fcmovnb
or
push
xor
cmc
sbb
in
pop
clc
or
pop
lock
inc
mov
js
cmp
mov
mov
insb
ret
and
mov
and
loop
push
dec
fimuls
push
loopne
daa
pop
or
push
mov
adc
clc
mov
mov
xchg
cmpsb
pop
and
aam
lods
add
lret
cld
xor
xor
sub
and
pop
es
mov
dec
fs
shlb
adc
dec
pop
mov
shrb
mov
mov
add
inc
pop
movsb
pop
adc
add
rolb
add
stos
cmp
and
dec
and
divb
es
imul
pusha
pusha
dec
cmp
js
and
push
and
rorb
lea
mov
sub
push
sahf
cs
dec
adc
push
dec
mov
pop
mov
pop
or
adc
loopne
mov
add
ljmp
call
push
scas
xchg
xor
mov
loopne
pop
mov
push
sarb
sub
cmp
xchg
aam
xor
adc
ficoms
xchg
mov
inc
fcoms
out
sbb
insb
sub
mov
and
adc
mov
es
add
ss
push
xchg
push
and
int3
andb
sbb
xchg
call
rclb
push
xchg
aam
clc
inc
or
xchg
dec
cltd
jecxz
mov
push
imul
add
sbb
std
call
mov
and
insb
sbb
jl
je
in
mov
sub
add
lods
push
sahf
cmpb
cmpsl
push
and
xchg
xchg
ljmp
cmp
xor
xor
mov
mov
inc
movsl
into
scas
mov
and
push
fimull
or
ret
add
nop
adc
enter
and
jl
shlb
xor
movsb
mov
xchg
lcall
or
fildll
xchg
and
lcall
ljmp
aam
addb
rclb
sub
sub
insb
pop
pop
pop
or
sub
and
loopne
push
mov
mov
mov
sub
ss
fs
rol
gs
inc
addb
xchg
pop
test
dec
pop
les
pop
xchg
test
mov
es
inc
lods
movsb
cmp
pop
jo
or
push
popa
fldl
insb
leave
int3
clc
inc
or
add
push
inc
and
dec
push
inc
sub
mov
enter
sbb
cmp
inc
cltd
movsb
and
ret
adc
jp
test
and
jo
cmp
sbb
push
test
pusha
lcall
call
test
pop
smsw
inc
mov
cwtl
inc
mov
xor
sub
adc
or
add
sti
faddl
inc
xor
pushf
faddl
or
add
fs
pop
bound
push
mov
hlt
sub
and
lods
adc
push
sub
push
sbb
sub
movsb
outsb
pop
push
dec
push
lds
sub
call
xchg
dec
shlb
cmp
pusha
add
push
push
push
push
pop
inc
pcmpgtd
sarb
outsb
mov
ror
xchg
mov
add
or
adcb
leave
or
mov
add
mov
sub
sbb
jae
scas
add
dec
sahf
mov
js
inc
pusha
outsb
test
mov
pop
push
xor
test
shlb
in
sub
iret
push
push
mov
outsb
dec
add
mov
push
sub
add
mov
jo
mov
and
rorb
cmp
xor
xor
sub
pop
shl
push
and
mov
cli
loopne
test
mov
popf
push
push
inc
mov
lea
fsubs
jo
and
cmpsb
scas
daa
and
sbb
lret
and
sub
xchg
and
loopne
call
or
enter
mov
mov
and
psrlw
fcoml
ljmp
sbb
insb
pop
popf
imul
add
lods
lea
aam
and
or
subl
sbb
dec
sub
jl
ja
jl
xlat
js
test
push
or
sbb
mov
clc
and
fwait
pop
push
add
dec
in
dec
add
jge
add
enter
rolb
aas
test
lock
mov
or
insb
adc
sub
mov
mov
and
add
sbb
mov
jb
mov
lret
in
dec
test
int3
pop
icebp
dec
or
es
out
fisubl
mov
push
test
inc
and
loopne
mov
xor
loopne
in
bound
mov
cmpsb
add
hlt
int3
xchg
inc
cmpsb
in
sbb
add
sahf
sub
and
sbb
rolb
sbbb
rolb
lods
adc
adc
mov
pop
mov
pop
pusha
sub
fadds
and
and
and
mov
test
fbld
or
mov
sub
mov
loope
imulb
loop
mov
gs
push
sti
int3
cltd
mov
fdivl
es
loop
faddl
test
jp
test
sub
push
add
iret
sub
leave
mov
ret
outsb
shrl
and
xor
call
cmp
or
add
or
shrb
mov
and
loop
es
xchg
std
mov
fidivs
inc
jo
or
push
lods
mov
mov
inc
add
nop
fimull
sub
hlt
xchg
in
in
imul
dec
mov
data16
test
push
pop
lock
inc
xchg
sbb
and
cmpsb
add
cwtl
adc
xchg
and
and
push
push
sbb
mov
test
lret
sbb
sbb
push
dec
or
ds
push
adc
xor
or
mov
js
inc
call
inc
enter
lods
cwtl
xor
adc
and
mov
cmp
inc
sbb
in
pop
test
xor
add
sbb
adc
cld
xor
adc
pusha
pop
add
mov
aam
lcall
ror
adc
jmp
or
xor
cmp
jg
repnz
add
popa
adc
loop
sbb
cmp
adc
ficompl
mov
fdiv
push
xchg
push
cwtl
cwtl
roll
test
push
push
test
cmp
or
fadds
lds
push
adc
push
mov
inc
rolb
or
add
cs
ss
dec
in
andb
in
push
lret
mov
adc
out
and
add
bnd
jg
aad
and
adc
dec
push
pop
fcmove
gs
test
cmp
xor
and
bound
xor
bound
aam
adc
sbb
sbb
insb
iret
and
test
ret
pop
xor
js
dec
data16
add
aam
fimull
xorl
add
add
add
cmp
jmp
mov
fs
les
adc
adc
ret
jo
lea
push
test
movsl
adc
and
push
cmp
adc
adc
push
shrb
test
jo
jb
fmulp
xor
bswap
fs
mov
lods
leave
push
lock
les
adc
mov
xchg
mov
add
cmp
ficoml
inc
sbb
in
mulb
inc
cmpsl
test
sahf
add
or
ss
test
xchg
mov
and
pop
cltd
inc
es
inc
pop
dec
into
ret
and
or
mov
mov
es
push
push
rclb
mov
adc
call
inc
ret
fisubl
and
dec
mov
add
inc
mov
mov
fisubl
dec
ret
cld
and
mov
mov
mov
mov
lods
mov
or
rolb
mov
ret
add
mov
or
outsb
rcl
ss
or
inc
dec
mov
pop
mov
adcb
sbb
nop
dec
rcl
xchg
lret
loop
test
loopne
adc
or
ljmp
call
pop
pop
push
mov
adc
xchg
mov
lods
es
in
inc
adc
dec
or
inc
mov
scas
inc
and
xchg
in
lcall
inc
inc
ss
push
xchg
loop
jp
xchg
fadds
push
repnz
push
pop
inc
mov
mov
and
xor
or
xor
enter
dec
cltd
inc
popa
lcall
cmpsb
jle
imul
cmp
lahf
shll
jg
mov
jmp
push
dec
cld
push
push
push
clc
add
mov
cwtl
inc
aad
imul
mov
and
imul
jb
sbb
shrb
mov
xchg
ficomps
mov
and
fidivs
add
ljmp
push
push
dec
js
je
mov
jo
adc
cltd
adc
loopne
or
faddl
cmpsb
test
pop
outsb
loopne
je
sub
adc
xor
rcl
popa
cmp
test
adc
adc
xchg
test
rcll
test
rcr
bound
scas
and
inc
pusha
fdivs
and
sbbl
call
and
jno
xchg
orb
dec
pop
lret
sub
push
add
cmp
rclb
shlb
push
fdivl
push
pop
je
sbb
xor
sbb
add
aam
lea
lret
dec
out
in
dec
or
jnp
cs
add
adc
xchg
mov
adc
push
test
loopne
pop
dec
dec
sub
iret
shll
movsb
test
rclb
std
and
pop
or
movsb
loopne
mov
push
lock
inc
loopne
or
or
fiaddl
inc
dec
je
xchg
pop
ljmp
xchg
mov
call
adc
pop
lret
add
mov
sbb
test
sti
and
xchg
mov
dec
dec
cmp
in
out
cltd
add
gs
aam
pop
ss
hlt
test
ficomps
push
stos
adc
call
adc
call
jo
sbbb
iret
pop
push
lret
pop
cs
mov
repnz
sbb
push
call
cwtl
xor
push
or
cmp
iret
inc
dec
push
inc
loopne
fdivrl
aam
mov
mov
inc
sbb
sbb
push
fs
adc
xchg
insl
xchg
push
inc
loop
adc
adc
pop
xchg
sub
leave
ret
sub
adcb
or
sub
shrb
inc
jo
mov
cwtl
push
and
or
fcomp
aam
subb
iret
rcrb
loopne
ret
mulb
imul
mov
test
sbbb
jbe
add
outsb
sti
hlt
sub
fcmovu
or
dec
rolb
or
push
adc
push
or
enter
cmpsb
addb
test
popf
les
js
inc
test
jg
popa
push
dec
stos
cmp
shlb
nop
mov
lock
ss
test
inc
mov
push
sub
mov
nop
je
sbb
aam
jbe
mov
mov
push
mov
xchg
xchg
out
hlt
mov
lea
sub
and
mov
push
inc
sub
bound
push
inc
inc
shl
sub
inc
push
into
cmc
inc
and
dec
es
mov
inc
mov
inc
add
jb
xchg
adc
cld
cmp
into
dec
adcb
lret
xchg
es
test
mov
xchg
call
cs
shrl
or
cmp
inc
jne
xchg
or
fiaddl
nop
cmp
cmp
cmpsb
fcoml
loopne
or
mov
lret
and
and
mov
lock
or
fwait
sbb
jg
std
inc
sub
dec
adc
push
ret
ficompl
imul
sub
xor
mov
jo
sub
dec
movsl
adc
xchg
add
cmpsb
inc
jg
mov
adc
lock
nop
dec
sub
add
repnz
into
mov
or
xchg
adc
jl
cmp
add
pop
sub
int3
jb
ja
cmp
in
shlb
push
dec
xor
jg
add
nop
rcrb
dec
inc
xchg
pop
push
rcll
lret
sub
and
mov
sbb
jb
nop
ret
sbb
aam
and
adc
jl
mov
add
mov
xchg
adc
mov
lods
bound
add
mov
push
or
fdivl
mov
rcl
mov
xchg
int3
fimull
pushf
ret
mov
repnz
dec
jmp
je
add
call
mov
or
cmp
mov
ss
jl
jo
inc
pop
rcrb
aaa
lcall
aam
inc
data16
adc
add
scas
adc
and
dec
pusha
xchg
mov
pop
in
push
jo
sub
push
leave
sub
or
xchg
divb
push
push
repnz
inc
and
shlb
add
lcall
cld
shlb
dec
cltd
or
push
push
pusha
fmull
inc
loopne
sub
and
int3
ds
leave
inc
xor
inc
xor
outsb
ret
ret
mov
orb
dec
jbe
sbb
pusha
lds
cmpsb
cmp
mov
adc
and
sbb
nop
enter
and
push
cltd
sbb
xor
push
dec
clc
xchg
cmp
or
int3
push
cwtl
mov
add
ret
or
ljmp
or
outsb
es
and
xchg
jo
gs
and
dec
test
mov
xchg
inc
sub
push
xchg
push
add
pop
adc
in
sub
xor
xor
xor
addb
insb
inc
cli
or
rol
push
pushf
or
sbb
les
popa
sub
cld
bound
movsl
push
shrb
pop
inc
shlb
sub
or
dec
cwtl
andl
sbb
pushf
push
mov
enter
inc
out
mov
xor
dec
mov
adc
rcrb
adc
pop
inc
in
dec
xchg
test
js
inc
inc
sub
xchg
mov
mov
and
jbe
xchg
sbb
dec
andb
sbb
data16
xchg
adc
mov
cmpsb
push
or
loopne
lods
or
ss
adc
adc
dec
or
insb
sbb
lods
push
sbbb
add
push
sub
sar
mov
push
add
mov
xchg
pop
mov
insb
call
push
and
cli
xor
or
pusha
mov
mov
lds
push
subb
int3
orb
mov
xor
aam
loope
cli
sub
push
mov
push
inc
mov
in
inc
xor
sbb
xor
add
or
insl
hlt
call
sbb
xchg
scas
les
push
push
test
push
push
pop
cmpsb
add
cltd
xchg
inc
sarb
not
out
xor
add
mov
or
je
push
mov
sbb
mov
int3
pusha
push
daa
and
push
pop
fimuls
in
jg
ret
int3
test
les
xchg
aam
es
mov
xchg
push
cs
adcl
orb
sbb
xor
mov
pop
lret
adc
inc
add
test
mov
sub
mov
cmc
xor
std
mov
out
pop
inc
sub
mov
sub
push
xchg
int3
xor
or
jbe
adc
adc
pop
lret
adc
pop
sub
push
adc
jp
adc
jbe
ror
aam
int3
stos
xchg
call
mov
dec
cmpsb
stos
and
fistps
lret
ret
pop
jo
cwtl
inc
dec
dec
push
mov
es
push
push
xchg
sub
fisubs
aam
adcl
rorb
hlt
sub
dec
or
sbb
jg
loop
push
sub
orb
sub
and
sahf
dec
push
push
or
jp
lret
and
cmpsl
insb
pusha
lret
add
sub
mov
pop
push
adc
loop
insb
sbb
push
adc
add
jo
add
pop
gs
push
push
rclb
cmpsb
pop
jl
inc
shll
iret
insb
cmp
stos
jne
fs
sub
shlb
out
xchg
sbb
lcall
rolb
pop
pushf
inc
mov
stos
lock
int3
sti
add
int
sub
lock
adc
cmp
pusha
mov
xchg
rolb
push
lret
repnz
inc
mov
out
cmp
test
ljmp
or
and
mov
xchg
stos
lcall
and
aam
lods
pusha
aad
cmp
adc
sub
out
loopne
stos
mov
jo
add
pop
mov
sti
mov
xchg
clc
push
cmpsl
das
in
fwait
add
imulb
adc
cld
lahf
int
std
stos
aam
mov
insl
inc
addb
dec
sub
adc
pusha
and
sub
mov
push
dec
jo
or
dec
push
cmpsb
sarb
push
pushf
sbbb
mov
push
xchg
pusha
sub
loopne
cmp
cwtl
adc
add
and
data16
jl
inc
adc
push
xchg
add
or
in
leave
or
dec
mov
sbbb
pushf
xchg
mov
mov
dec
insb
push
inc
hlt
inc
popa
mov
test
pusha
hlt
adc
or
push
xchg
cmp
sbb
xor
pop
fimuls
mov
inc
pushf
mov
push
jp
add
push
inc
dec
mov
fisubrs
gs
mov
daa
movsl
xchg
leave
subb
call
je
test
mov
push
sbb
mov
add
xor
pop
sub
sbb
test
gs
xchg
mov
inc
lock
lret
fsubrs
loopne
and
add
or
mov
dec
or
addl
inc
sub
addl
xor
dec
xor
xchg
mov
test
cmp
dec
int3
pop
add
lret
dec
lret
jbe
test
cs
mov
clc
xchg
push
shrb
adc
push
shlb
push
inc
and
sub
pop
jp
pop
push
sbb
lcall
ret
add
push
sbb
rolb
or
pop
adc
mov
lods
mov
or
inc
or
dec
shll
mov
or
mov
xchg
or
lea
cmpsl
mov
sbb
mov
nop
orb
sar
add
push
sbb
jbe
xor
and
and
lret
and
js
xchg
ljmp
rcll
push
decb
cs
pusha
push
sti
dec
movsb
dec
gs
adc
fs
push
mov
adcb
shll
xchg
add
or
xor
add
push
pusha
scas
push
lds
aam
sub
fadds
js
xchg
std
call
jae
sbb
sub
mov
push
shr
mov
mov
push
adc
pusha
sub
pop
add
add
popa
adc
cmp
callw
fimuls
mov
iret
push
inc
xor
pop
xor
pop
fs
dec
mov
push
jl
or
fadds
sbb
pop
or
andb
fstl
xchg
enter
dec
jb
push
or
push
xchg
or
mov
push
les
and
sub
rclb
test
xor
movsl
xchg
mov
sbb
mov
sub
and
bound
scas
pop
cmp
xor
inc
and
in
and
add
mov
pop
test
add
rcrl
push
mov
data16
jg
xorb
mov
mov
mov
nop
sbb
insb
cltd
dec
xor
mov
push
and
adc
adc
add
xchg
xor
pusha
ds
jb
addl
fistpll
ss
mov
aam
fdivs
or
xchg
dec
in
mov
inc
lret
cmp
xor
cwtl
pop
ret
dec
cwtl
adc
int3
test
test
pop
mov
mov
pusha
jb
das
dec
or
loopne
sahf
arpl
dec
scas
leave
cmp
mov
add
cmp
mov
mov
xchg
mov
pushf
adc
sub
pop
sub
sahf
aam
sub
popf
sub
add
sti
push
nop
lcall
sbbb
or
inc
add
xchg
ds
fadds
stos
sub
shll
xchg
adc
jl
sub
sahf
rol
or
dec
xchg
mov
add
push
cmp
and
inc
pop
mov
cmpsb
rcll
mov
mov
lds
push
mov
mov
ret
push
dec
and
xchg
ret
push
jle
push
lcall
adc
adc
adc
ror
or
sub
in
add
cmpsl
cwtl
xlat
in
sub
jg
mov
inc
int3
pop
push
push
mov
xchg
inc
inc
xchg
jno
xor
mov
dec
les
add
inc
sbb
pop
and
movsb
cmpsb
jbe
push
xchg
pop
dec
ss
mov
mov
aaa
or
add
in
and
and
jle
inc
lds
inc
aam
clc
ror
clc
adc
fiadds
sub
sahf
stos
sub
jne
int3
mov
in
mov
lret
mov
jo
sar
and
push
lcall
xor
and
adc
call
cmpsl
sahf
aam
cwtl
adc
dec
push
add
js
insl
pop
sbb
or
or
adc
cmp
into
test
mov
push
pop
pusha
jo
jp
or
add
shrl
xor
iret
inc
jnp
pop
in
add
mov
adc
xchg
inc
and
mov
push
pop
dec
jp
test
and
sbb
popa
and
sub
jecxz
loop
cmp
add
or
jne
popa
mov
js
fcoml
movsb
es
pop
mov
push
es
test
cld
lods
sahf
test
pusha
cmp
or
push
ret
or
push
hlt
push
inc
sub
rclb
push
ret
mov
fidivl
add
sub
push
adc
fcoml
outsb
ret
push
pop
movsb
loop
mov
xorb
cwtl
test
rcrb
and
add
add
outsb
lret
insb
ficompl
and
push
rcrb
enter
test
nop
sahf
lock
dec
hlt
sub
aam
mov
sbb
lds
rolb
lea
or
push
mov
dec
add
and
or
xchg
call
mov
ss
add
add
xchg
test
inc
fsubs
pop
enter
xor
lcall
dec
das
popa
outsb
push
pusha
dec
call
fmull
test
and
or
cld
and
bound
dec
jl
push
pop
mov
sub
and
shrb
jb
adc
xor
lret
mov
or
sub
mov
xchg
add
add
test
mov
lcall
lods
ss
add
test
data16
or
test
jp
rorb
cmovbe
xchg
stos
or
push
jb
nop
mov
testb
shl
jbe
mov
or
faddl
js
loope
popa
xchg
shrb
inc
sub
add
add
faddl
sbb
nop
and
or
xor
test
mov
dec
pop
add
sbb
mov
mov
mov
jb
pop
int3
or
and
movsb
call
xorb
enter
mov
add
mov
mov
jo
mov
inc
add
add
lock
shlb
sbb
mov
fld
inc
add
scas
dec
cld
ret
bound
lcall
push
in
sub
enter
rolb
adc
lds
leave
add
cmp
cmp
xchg
mov
or
add
push
mov
daa
stos
pushf
mov
or
push
movsl
xchg
mov
mov
jl
clc
mov
es
in
jg
cs
test
test
cmp
or
push
mov
data16
mov
and
orl
in
cwtl
or
pop
test
divb
js
and
dec
push
inc
xor
cld
mov
or
push
movsb
test
sbb
mov
inc
add
mov
nop
cmp
xorb
xor
mov
cmpsl
inc
cs
ret
test
dec
enter
stos
sub
mov
pop
jb
inc
roll
and
adc
mov
test
xor
cmp
enter
enter
mov
roll
mov
add
add
lods
xchg
sbb
fidivrl
push
aam
push
testb
sbb
dec
adc
mov
pusha
push
sub
pusha
mov
pop
xor
jb
fsubs
inc
and
xor
xor
cs
cmpsb
mov
add
test
cmc
hlt
push
outsb
inc
inc
or
inc
xchg
adcl
xchg
pusha
pusha
sbb
pop
jp
imul
mov
and
sbb
cmp
dec
inc
fsubl
jbe
cmpl
test
mov
es
jle
and
flds
push
das
xor
pop
adc
mov
add
stos
add
adc
pop
cwtl
xchg
push
faddl
or
sub
lret
and
test
aam
ss
mov
push
dec
pop
mov
loopne
or
inc
sbb
shlb
add
clc
sub
add
dec
insb
add
jg
jmp
dec
pop
sub
add
subb
movsl
mov
into
fstps
and
in
in
cmp
or
xchg
and
cli
adc
and
push
sti
add
push
push
adc
movb
fdivrs
pop
aam
add
jp
pushf
lds
cwtl
or
les
jo
rorb
fs
dec
addb
fdivl
pop
or
std
aam
je
push
and
ret
test
mov
je
les
push
and
mov
dec
loopne
push
xchg
mov
insb
add
xchg
pop
jb
je
mov
rcrb
push
in
imul
test
daa
ret
lret
and
xchg
pop
mov
lcall
push
loop
or
fstpl
loopne
cmp
adc
xchg
mov
cmpsb
adc
popa
das
mov
xchg
aam
pop
push
dec
push
add
adc
sbbl
or
into
xchg
cmp
or
outsb
push
nop
test
pop
sarb
loope
adc
and
adc
cwtl
inc
call
push
subl
jb
or
xchg
sub
clc
adc
movsl
in
mov
adc
add
mov
sub
lock
adc
inc
mov
sub
add
inc
cmp
sub
mov
nop
or
out
out
popa
mov
cs
pop
push
inc
enter
leave
hlt
lock
add
pop
es
out
mov
adc
sbb
rclb
add
xchg
add
nop
fildl
lods
push
mov
div
test
in
xor
popa
push
ret
test
pop
dec
mov
ret
gs
cmp
in
jmp
dec
call
dec
xchg
fidivrl
mov
and
insb
add
add
loope
adc
cmpsb
sbb
call
out
loop
dec
or
xchg
nop
mov
mov
and
mov
xor
lods
test
cmpb
mov
mov
and
loope
sbb
adc
js
cmpsb
xchg
mov
push
xchg
sbb
aam
das
inc
add
fs
or
push
shll
and
xor
mov
test
stos
jne
mov
outsb
popa
cltd
or
je
adc
sub
ret
xor
mov
int3
and
sub
out
push
add
outsb
leave
cli
outsb
sbb
hlt
clc
sbb
dec
test
add
pop
orb
cmp
adc
rcrb
ss
mov
xchg
rclb
test
call
or
cmp
push
xchg
xchg
adc
sbb
mov
xor
inc
and
pop
dec
notb
dec
sbbb
pop
clc
out
aam
lods
mov
test
xor
inc
jle
stos
xchg
pop
or
adc
xor
sub
test
mov
or
push
cmpl
sbb
cmp
mov
sahf
sub
int3
pop
mov
sbb
push
fidivl
nop
mov
movsl
add
push
and
add
xchg
cs
add
sbb
fadds
sub
mov
addl
sbb
xchg
push
fs
and
inc
cmpb
mov
sti
lods
mov
in
mov
push
int3
mov
leave
rorb
cmp
xchg
jb
enter
jne
and
test
loope
lods
mov
ds
xor
xchg
pop
mov
dec
mov
mov
mulb
loopne
jb
cltd
shlb
mov
les
aam
adc
ficoms
es
cwtl
sbb
js
js
rol
jb
jge
je
or
xchg
sbb
pop
cltd
push
adc
sbb
xchg
in
ljmp
mov
push
mov
or
add
fcoms
int3
xchg
xor
test
repnz
loopne
add
mov
and
or
cmp
fcoms
and
jp
in
and
aam
dec
or
addl
sbb
jb
orb
gs
jbe
pop
clc
inc
sub
mov
and
cmp
daa
add
pop
ret
mov
add
nop
aad
sbb
movsl
in
mov
pop
jecxz
add
push
mov
dec
mov
add
in
inc
xchg
add
push
rcrb
cli
and
adc
mov
mov
sbb
jl
cmp
test
orb
fbld
push
push
lea
add
lods
dec
jb
hlt
cmpb
sub
or
and
jne
fmul
fisubl
add
aam
adc
les
sbb
test
inc
inc
mov
mov
add
movsb
sub
rorb
sahf
adc
rolb
insb
cmp
mov
jb
adcb
lock
mov
inc
pop
cmpsl
add
jmp
sub
inc
xacquire
sarl
leave
push
mov
adc
cli
push
mov
cwtl
fisubrl
or
dec
or
sub
jo
fsubrp
push
sbbb
mov
mov
xchg
adc
loopne
loope
cmp
add
sbb
dec
push
or
push
xchg
cmp
int3
and
orb
pop
ficomps
mov
pop
lret
dec
outsb
rolb
or
lcall
enter
movb
pop
push
es
push
sbb
cli
andb
and
repnz
lret
push
add
mov
push
xchg
pusha
adc
cld
les
and
sbb
call
push
dec
mov
or
stos
addb
jo
cmp
cltd
pop
das
xor
and
and
dec
or
inc
or
add
mov
scas
or
push
sbb
or
add
xor
cmp
or
xchg
inc
jae
dec
mov
mov
ljmp
shr
add
mov
call
push
add
push
subb
cmp
aam
movsb
cmpb
mov
adc
inc
and
inc
sub
mov
lea
push
or
pop
cs
fs
in
gs
mov
mov
adc
sarb
push
and
mov
cs
cmp
xchg
push
shlb
xchg
mov
cmpb
loop
and
mov
add
and
add
or
mov
or
subb
sub
mov
sbb
pop
push
sahf
mov
sbb
inc
cmp
aam
push
and
xor
mov
mov
xor
jbe
mov
adc
pop
jne
dec
ret
movsb
pop
repnz
inc
movsb
inc
xor
xor
adc
add
pusha
adc
inc
cmp
pop
mov
inc
jo
cmpsb
popf
sbbb
xor
inc
xor
movsb
xchg
inc
cmp
adc
add
ret
push
cmc
add
pushf
cmpsb
jp
xor
inc
pushf
mov
add
lret
int3
pop
pushw
loopne
les
pop
out
xor
ss
lret
mov
lock
sbb
sbb
push
pop
mov
orb
loop
add
xor
or
adc
jo
adc
out
test
mov
enter
ret
sub
lds
sbb
push
sbbl
xor
adc
in
or
and
xor
test
dec
cmpsb
call
jb
sbb
add
push
in
fisubl
fwait
sbb
cwtl
xor
push
or
in
mov
and
addl
fcomps
sub
movsl
cs
inc
aam
inc
dec
adc
mov
and
adc
fsub
mov
mov
lds
ret
int3
xor
fs
push
adc
jl
jb
push
int3
and
jbe
dec
dec
cs
pop
inc
test
jb
or
xchg
xchg
orb
ljmp
stos
lcall
inc
aam
adc
sub
fs
popa
jb
loope
je
mov
movb
lret
sub
sahf
nop
jb
mov
or
cmpsb
pop
iret
inc
comiss
aam
cmpsb
mov
xor
jp
add
push
or
jo
cmpsb
js
mov
ljmp
pusha
cld
sti
test
rclb
cmp
nop
dec
push
outsb
sub
lcall
enter
or
lcall
es
mov
mov
not
xor
add
sbb
call
mov
syscall
jbe
and
notl
test
and
clc
and
add
jno
push
inc
adc
push
sub
jp
inc
sbb
sbb
dec
arpl
xor
lods
inc
sbb
bnd
push
rcll
inc
xor
pusha
pusha
js
das
inc
jp
pop
push
fdivs
sub
sub
dec
cwtl
dec
shlb
sbbb
add
xor
or
js
xor
and
and
out
filds
mov
adc
and
pusha
lock
sub
xor
daa
mov
outsb
sub
and
xchg
inc
xchg
xchg
rcrb
jle
adcb
aam
adc
ret
jl
dec
fldl
and
push
mov
mov
fs
sbbb
add
adc
call
sbb
and
xchg
push
nop
enter
jb
add
push
mov
call
adc
js
mov
cmp
cmp
mov
movsl
and
dec
movsb
ss
mov
cltd
rcll
pusha
cmp
out
addl
add
inc
clc
or
adc
es
mov
inc
imul
sti
xchg
in
rcrb
or
cs
add
pop
mov
mov
xor
lret
les
xchg
inc
test
xor
pusha
cmpsb
cmp
mov
ret
xor
add
sub
or
popa
in
sbb
cs
leave
push
and
dec
adc
xchg
sbb
nop
mov
mov
mov
pop
push
or
test
mov
inc
xor
mov
mov
xchg
jb
dec
jo
pusha
int3
mov
and
sbb
and
mov
add
mov
push
fimull
cld
xchg
xor
mov
sbb
insb
add
pop
xor
xchg
pop
or
pop
mov
dec
std
insb
test
push
push
pop
push
add
push
xchg
mov
enter
cmp
cmp
sub
push
xchg
je
mov
nop
lret
xor
iret
cmp
jl
leave
popa
or
test
xchg
xor
pop
hlt
mov
inc
mov
sub
mov
cs
adc
dec
cmp
cs
pushw
xchg
sub
ret
jo
add
out
bound
xor
repnz
add
cmpsl
in
dec
inc
adc
push
fiaddl
les
test
push
test
inc
daa
adc
out
js
sbb
add
mov
cld
sub
imul
adc
enter
insb
loopne
xchg
adc
xchg
xchg
push
xchg
inc
mov
in
mov
sbb
cmpsb
lock
dec
call
pop
sbb
adc
xchg
push
push
movsb
movsb
orb
mov
mov
dec
adc
out
adc
cmp
ret
push
sbbb
mov
cmpb
or
sub
jl
and
add
xor
aam
cltd
xor
ret
mov
std
mov
jo
jecxz
cmp
xor
rol
pop
push
jp
cltd
dec
mov
add
dec
jo
and
mov
xor
cltd
push
hlt
rclb
scas
mov
cli
lret
movsl
mov
out
add
add
inc
and
cmp
jno
jmp
sar
adc
imul
mov
mov
mov
sub
and
dec
adc
shl
or
sub
and
clc
js
js
xor
adc
or
dec
mov
adc
es
adc
xchg
jo
mov
enter
xor
fidivrl
or
xor
xchg
in
mov
mov
rcl
orb
dec
xchg
mov
aam
inc
dec
js
out
push
inc
and
cmp
or
add
and
adc
pop
or
and
pop
fisubl
je
mov
cvttps2pi
adcb
adc
mov
or
and
lds
es
push
daa
aaa
mov
cmpsb
and
pop
push
fcom
and
mov
jp
rorl
sbb
jg
mov
aaa
lret
mov
adc
add
mov
xor
test
out
mov
sbb
je
push
jo
push
or
pusha
pusha
xchg
xchg
push
rclb
add
jl
rolb
test
push
shr
pop
movsl
mov
pop
inc
push
mov
fdivs
mov
jge
shlb
loope
dec
movsb
and
enter
add
mov
popa
lods
sub
sbb
sbb
pop
loop
adc
xchg
jo
xchg
sahf
rcrb
movsb
sbb
cwtl
pop
dec
inc
push
inc
and
pop
sub
clc
hlt
add
jb
enter
jp
mov
inc
sahf
out
dec
cltd
dec
fs
pop
and
lods
dec
pop
push
cmp
test
mov
xor
cmpsb
jb
mov
ret
jo
inc
or
inc
sub
ds
data16
xor
fs
inc
mov
push
adc
ss
mov
or
sbb
xor
orb
fnstenv
lock
sti
jle
push
sbb
loopne
inc
jg
xchg
push
cmp
sbb
pop
imul
outsb
add
mov
pop
dec
inc
lds
dec
push
lcall
inc
ret
push
xchg
je
cwtl
cwtl
add
sbb
push
xor
xchg
add
jl
mov
add
sarb
and
mov
lods
sub
dec
pop
bound
cli
sbb
mov
mov
xchg
enter
pop
int3
pop
or
outsb
sub
int3
shll
test
push
add
clc
and
sub
add
sahf
push
out
and
dec
push
stos
leave
mov
add
or
cs
gs
into
sbb
add
mov
or
hlt
outsb
dec
leave
fistpll
lcall
jbe
add
mov
and
inc
add
fcoml
inc
imul
sub
dec
cli
fbld
xchg
add
xor
nop
dec
movsb
dec
pop
mov
push
jg
aam
adc
movsb
repnz
lret
xor
sub
test
clc
adc
pushf
cwtl
faddl
das
leave
jne
cwtl
sbb
inc
dec
mov
adc
ja
les
push
add
push
out
mov
add
xchg
cwtl
cltd
or
xchg
add
inc
dec
test
and
aam
ds
mov
push
xor
in
test
repnz
add
je
dec
dec
and
mov
cmp
push
dec
ret
push
pop
sbb
or
dec
inc
mov
inc
and
pusha
ss
or
inc
add
add
xchg
inc
sahf
or
xchg
rclb
xor
inc
and
xchg
push
or
data16
pop
or
sub
data16
movsb
outsb
rorb
add
aam
arpl
jo
add
sbb
sbb
jo
push
push
es
repnz
shlb
test
test
push
divb
aam
cmp
cmp
dec
iret
and
cmp
and
cwtl
adc
movsl
push
jb
jg
xor
add
fcoms
inc
push
inc
lods
sbb
xor
push
popa
mov
pop
mov
movsb
jo
sub
aam
ret
push
mov
mov
popa
add
call
sbbb
xor
add
pushf
or
mov
loop
mov
pop
test
xor
inc
fdivs
push
cs
sub
xor
and
adc
xchg
in
sbb
movsb
add
push
sahf
push
push
mov
adc
or
call
and
xor
bound
lds
push
test
push
xor
pushf
xor
xchg
and
inc
cwtl
pop
sub
mov
shlb
cmp
pop
mov
adc
dec
push
roll
and
add
add
xchg
ret
jl
jle
dec
add
loopne
add
jne
loopne
cld
add
cs
cmp
or
mov
punpcklbw
movsl
add
jne
xor
jl
add
inc
lret
push
aam
cmpb
lds
es
dec
out
test
data16
push
fidivrl
mov
bound
or
sbb
xor
xchg
sub
mov
adc
adc
pusha
inc
sbb
mov
xor
clc
in
dec
es
mov
dec
pop
push
clc
decl
xorb
testl
jg
inc
mov
xor
std
fiaddl
leave
test
loopne
add
or
enter
mov
hlt
call
or
cmp
into
mov
xor
orl
sbb
xchg
ret
ficomps
les
lret
sti
mov
and
xor
jne
jo
mov
sub
lret
in
leave
dec
fstl
inc
jb
xchg
sbb
sub
loopne
xorb
sbb
out
fcmovu
adcb
pushf
jo
dec
scas
inc
lret
mov
dec
mov
push
pusha
addb
scas
push
cwtl
sub
push
xor
js
inc
out
jp
dec
jp
push
or
loopne
mov
xor
sbb
xor
or
int3
nop
dec
movsl
jb
sbb
xor
ret
or
cld
into
fs
xorb
adc
pop
add
dec
fidivrl
inc
xchg
adc
add
sub
sub
lcall
push
xor
inc
add
pusha
ret
arpl
pushf
sub
add
xchg
add
or
call
into
add
mov
xchg
call
ret
xor
fsubl
sbb
xor
icebp
adc
pusha
fmuls
shr
rcl
outsb
mov
mov
or
loop
lds
pop
push
ret
stos
cmpb
test
ds
inc
and
data16
add
mov
fs
push
and
outsb
xchg
xor
faddl
sub
aam
int3
or
imulb
dec
xor
outsb
or
adc
mov
mov
imul
and
movsb
nop
mov
sbb
sub
mov
es
gs
in
xchg
addr16
rclb
push
loopne
xchg
cli
test
mov
xor
sbb
xchg
xchg
nop
or
sbb
mov
cwtl
cmpsb
push
and
shrb
xor
fsts
xor
into
mov
cmp
and
lret
or
adc
push
outsb
lcall
push
jbe
fmuls
rcll
or
inc
sbb
test
aam
push
xor
rolb
sahf
add
add
or
cmpb
jmp
shrb
mov
jl
aad
or
adcl
notb
test
rorb
loope
jne
aam
rorb
add
in
pop
test
les
vmovaps
mov
pop
xchg
push
int3
push
mov
movsl
xor
test
sbb
dec
data16
sub
sbb
pusha
xchg
rcrb
add
int3
sub
jbe
cmp
mov
xor
test
push
jb
mov
lcall
xchg
shr
push
inc
shlb
movsb
nop
push
ret
add
or
sbb
pop
dec
pop
ds
lds
dec
call
adc
ret
push
sub
je
mov
or
hlt
jle
sub
mov
dec
fs
incb
mov
xchg
mov
scas
sub
test
les
xor
rolb
in
mov
dec
jo
int3
mov
test
or
pop
xchg
push
data16
shl
pop
add
dec
cwtl
add
dec
mov
mov
dec
xor
cwtl
push
inc
test
jb
out
inc
and
scas
push
sbb
ret
xchg
add
adc
push
cli
cmp
cmp
popa
lcall
inc
cmp
pop
mov
inc
sub
inc
push
adc
mov
leave
movsb
adc
sahf
fisubs
addl
in
inc
adc
cmp
int3
mov
xchg
push
dec
or
mov
mov
cmpsb
mov
jg
dec
add
and
jo
jp
ljmp
push
cwtl
adc
inc
mov
sub
lret
mov
xchg
rcrb
mov
dec
cmp
enter
test
or
inc
aam
mov
xchg
and
jae
add
fsubl
and
push
stc
inc
je
inc
lcall
outsb
clc
jg
cs
sbb
mov
ja
push
jne
add
faddl
or
add
xchg
mov
ds
cltd
and
adc
insb
push
add
movsl
adc
inc
loope
call
in
inc
xorb
addl
dec
or
push
adcb
enter
sub
in
loopne
dec
outsb
inc
xor
fsts
loopne
jo
dec
nop
dec
or
push
jl
or
enter
adc
xor
inc
xchg
in
xchg
rorb
and
push
data16
dec
inc
inc
jo
or
je
fs
scas
in
xor
lret
movsl
adc
push
pushf
add
push
loopne
in
test
mov
dec
push
push
nop
rcrb
add
roll
xor
or
adc
sub
cmpsl
mov
add
sbb
test
xor
inc
mov
sub
shlb
add
push
jb
mov
xor
in
add
add
jl
or
and
or
push
mov
lret
ret
add
out
push
mov
orl
xor
cwtl
stos
lods
sar
add
cwtl
addb
and
mov
lds
repnz
dec
arpl
add
sub
or
int3
outsb
xchg
inc
adc
and
push
push
add
mov
push
shlb
sbb
xchg
or
inc
sub
test
sub
xor
or
subb
push
inc
int3
push
sbb
adc
adcb
lret
jbe
fs
dec
mov
sub
mov
enter
sub
adc
pop
jg
test
outsb
pop
insb
call
ret
mov
enter
jbe
mov
xor
xor
xchg
xchg
lds
sahf
lock
xchg
mov
sub
insb
and
push
adc
decb
call
xchg
mov
bound
mov
nop
cltd
xor
dec
pop
and
xchg
push
xor
mov
xor
into
ds
jecxz
push
pop
es
and
lods
cmpsl
mov
push
cmp
dec
in
sti
lods
mov
pop
andb
adc
mov
daa
sahf
xor
jg
push
inc
popa
push
push
cld
popa
test
xor
push
push
dec
int
sbb
ficompl
leave
movsb
nop
or
jbe
push
cmp
mov
adc
sbb
add
aam
and
test
sub
cmpsb
and
outsb
js
xor
add
addb
mov
out
mov
sub
pop
mov
int3
notb
mov
xchg
sub
jl
push
and
pop
add
or
dec
aam
xlat
and
pusha
push
xor
rcll
lcall
push
in
pusha
xor
push
or
xchg
pop
adc
add
mov
movsb
adc
pusha
or
push
adc
or
ret
mov
dec
hlt
jb
sbbl
pusha
sbb
insb
mov
pop
add
or
fadds
test
inc
add
and
enter
das
jmp
or
dec
mov
cmp
cwtl
ret
bound
les
lods
popa
xchg
ljmp
sarb
cs
and
aam
sbb
popa
sub
clc
test
dec
and
push
mov
int3
xor
jbe
dec
add
rclb
mov
mov
and
loopne
or
ret
push
jl
orb
and
addb
enter
jo
lock
dec
cmp
or
push
mov
subb
inc
lds
add
push
sub
popf
sahf
add
mov
cli
nop
pop
outsb
push
jp
xchg
cmpsl
add
hlt
js
push
add
js
mov
in
cwtl
add
xchg
sub
mov
push
or
in
pop
dec
cs
inc
push
or
cmp
xor
push
pushf
push
mov
rcl
inc
pop
data16
xchg
push
cwtl
xchg
push
add
inc
mov
lar
adc
xor
nop
pop
dec
cld
decl
test
daa
lahf
mov
out
xor
sub
mov
adc
repz
sub
xchg
xchg
les
insl
hlt
inc
push
mov
xchg
clc
push
dec
shr
jg
mov
dec
out
add
test
add
bound
or
sarb
or
adcb
ss
push
ret
pop
jl,pn
dec
add
aam
ret
mov
add
cmp
test
sub
push
push
hlt
xor
vpsubd
and
fcmovbe
xor
sub
xchg
cmp
mov
push
pop
mov
test
ljmp
jb
jp
push
xchg
popf
mov
test
or
mov
mov
xor
cltd
adcb
nop
sbbb
sbb
push
xchg
repnz
inc
sbbl
rcrb
or
and
js
adc
test
iret
jbe
ds
mov
jp
mov
lcall
dec
addr16
dec
into
push
and
cld
push
jl
sbb
adc
out
or
sbb
inc
inc
ret
add
xchg
in
add
xor
dec
mov
test
subb
lea
loopne
clc
pusha
call
sbbb
sub
movsl
sub
lret
ret
pop
sbb
in
xor
sahf
ror
dec
mov
fcoml
mov
mov
jle
adc
divps
push
adc
add
adcb
lea
mov
mov
data16
rclb
das
add
or
mov
mov
dec
and
test
js
arpl
es
sbb
sbb
push
jl
test
cmp
xor
adc
sub
adc
orl
add
add
popa
push
mov
cmpsb
divb
sub
add
mov
or
fmul
fcompl
adc
or
add
int3
add
iret
mov
xor
fcomps
cmpb
test
ljmp
dec
jg
rorl
sbb
fs
inc
push
mov
mov
mov
leave
or
xorb
sub
push
and
enter
mov
ss
or
jo
push
ds
nop
fstps
push
push
cwtl
inc
jle
imul
or
ret
xchg
in
ljmp
addb
fs
or
adc
xor
aad
xchg
into
hlt
mov
and
int3
in
in
les
push
cs
test
clc
movsb
dec
add
iret
adc
xor
outsb
sub
nop
push
push
push
xchg
mov
cwtl
xchg
mov
ds
adc
or
out
dec
jb
mov
inc
mov
or
gs
mov
loopne
rcrb
push
lret
or
pop
imul
xchg
and
add
pusha
ret
sub
mov
push
adc
mov
mov
xchg
xor
cwtl
sarb
jl
push
add
dec
cltd
mov
inc
xchg
xor
inc
fiaddl
mov
filds
mov
xor
insb
nop
repnz
mov
cld
xor
imul
test
lock
xchg
cmp
adc
sub
mov
leave
rcll
sbb
loopne
in
test
pop
addb
xor
push
ljmp
test
nop
xor
pop
and
mov
hlt
push
lcall
test
mov
dec
loopne
out
jo
adcb
aam
rcrb
les
inc
popa
andb
outsb
inc
cmpsb
xchg
enter
or
popa
popa
rclb
inc
dec
dec
cmpb
inc
push
pop
mov
mov
xchg
rolb
mov
cwtl
sub
sbb
and
test
mov
daa
fs
dec
fiaddl
pop
mov
ret
mov
xchg
xchg
dec
insb
fsubrp
loopne
sub
add
push
test
push
push
jge
in
test
or
es
and
bound
xchg
dec
outsb
adc
xor
roll
outsb
call
add
xchg
cbtw
ret
pusha
xor
xchg
sbb
adcl
movsl
xchg
add
push
mov
or
dec
das
ret
sbb
js
xor
aad
in
leave
push
fldcw
ficomps
clc
jg
mov
dec
add
cld
inc
lcall
clc
xchg
scas
dec
add
lds
rolb
test
sahf
inc
shlb
cwtl
test
mov
ret
xor
addb
je
push
lret
add
loope
outsb
pop
bound
sbb
fnstenv
nop
sub
movsb
mov
xchg
push
lock
dec
in
adc
add
sbb
xchg
mov
jbe
mov
push
pop
ljmp
les
test
rorb
pop
in
mov
add
movsb
mov
mov
jle
push
fwait
subb
cmp
in
nop
xchg
push
loopne
insb
cmp
or
or
cld
adcb
push
add
cmpsb
loopne
add
inc
dec
sbb
and
inc
ror
insb
cmpsb
movsb
in
add
mov
and
and
cmp
mov
inc
movsb
std
insb
mov
push
in
xchg
sbbb
mov
jle
or
loopne
lret
push
call
scas
jo
sbb
push
cmpb
add
sbbl
lcall
dec
movsb
test
push
xor
or
out
dec
std
pop
push
adc
mov
adc
ss
and
clc
subb
jae
and
pushf
sub
pop
hlt
dec
cltd
pushf
add
mov
dec
in
jo
aam
bound
and
call
popa
or
add
inc
outsb
xor
sbb
test
aam
fs
loope
enter
js
outsb
pop
out
fs
shl
pop
push
or
inc
pop
jbe
dec
loopne
lock
adc
mulb
call
push
movsb
adc
xor
inc
mov
xchg
adc
pushf
xorb
aam
push
push
push
shrl
sbb
mov
rclb
lcall
movsl
push
enter
add
inc
loopne
and
jo
dec
xchg
movb
or
sub
jb
xor
sub
xchg
xor
mov
fdivs
lret
xor
push
adc
and
fmull
push
mov
xchg
cmp
and
shl
push
push
sub
imul
add
orb
jo
or
clc
ss
inc
jo
es
sbb
xchg
xchg
test
xchg
xchg
sarb
fwait
je
adcb
and
or
js
fcoml
xchg
dec
push
push
inc
push
pop
pusha
xchg
adc
add
push
or
inc
or
or
cs
add
ret
daa
adc
adc
sub
inc
fs
push
and
je
imul
or
test
xor
idiv
addl
inc
adc
add
dec
or
xor
push
jl
mov
outsl
add
outsb
or
data16
add
xchg
inc
addb
and
adc
xchg
or
orb
bound
push
adc
xchg
and
dec
inc
test
pop
aam
mov
fisubrs
dec
loopne
push
lock
nop
xchg
sbb
bound
out
test
mov
orb
adc
inc
inc
push
cwtl
or
lret
or
or
loope
cmp
or
push
jg
push
xor
push
push
or
in
pushw
adc
fimuls
test
add
dec
inc
or
fsubs
movsb
leave
aam
rcrb
call
push
mov
and
je
xchg
dec
clc
sbb
lods
sbb
sti
add
xchg
dec
xchg
and
mov
test
fiadds
mov
fs
pusha
andb
sahf
lea
lcall
sarb
xchg
inc
and
jo
ror
inc
test
test
xorl
mov
add
xor
dec
lock
or
push
inc
dec
fs
mov
or
xchg
sbbl
push
ret
imul
add
push
sub
test
fidivrl
iret
or
sbb
push
mov
daa
aam
adcl
mov
push
fists
jo
jo
nop
inc
mov
not
mov
sbb
faddl
dec
mov
adcb
movsl
or
adc
idivl
and
adc
idivb
or
add
nop
int3
mov
adcb
add
lds
mov
sub
es
cmp
pusha
push
xchg
movsb
cli
sbb
add
ret
add
mov
dec
xchg
pop
cmpsb
pusha
adc
xor
mov
inc
mov
pop
jb
jo
adc
fiaddl
xchg
xor
pushf
mov
popf
and
mov
cmpb
lcall
pushf
ret
int3
xor
dec
loopne
pop
mov
leave
lret
inc
or
mov
adcb
cmp
dec
sub
daa
add
xor
cmpb
inc
adc
mov
loop
push
push
call
sub
lds
sbb
cltd
dec
sub
shll
lcall
lock
inc
addb
inc
xchg
xor
loopne
xor
xchg
adc
fisubs
nop
ljmp
mov
addl
sub
lods
or
and
leave
inc
lods
inc
lods
or
sub
xchg
enter
dec
lds
pop
divb
inc
dec
lcall
je
xor
xorl
rclb
popa
xchg
pusha
lret
rolb
or
test
mov
sbb
fildl
add
xor
cwtl
xchg
movsb
xchg
mov
adc
enter
and
popa
add
push
ret
pop
push
filds
shlb
iret
int3
out
lds
sbb
add
add
adc
inc
and
push
jne
sbb
inc
outsb
loopne
push
or
or
pop
push
sub
loopne
lret
sbbb
or
inc
xchg
orb
inc
or
xchg
xchg
push
ljmp
adc
cld
jl
leave
ljmp
adc
shrb
sub
mov
pop
mov
sbb
mov
stos
sbb
andb
xchg
scas
gs
inc
xchg
lods
adc
push
mov
pop
sub
test
mov
sbb
and
dec
push
cs
add
cmp
pushf
add
andb
push
lods
test
hlt
add
and
push
lods
add
cli
mov
dec
cli
adc
sbbl
jl
inc
add
cmp
mov
sbb
daa
push
xchg
push
push
cmp
call
push
mov
push
test
loope
cli
lcall
pop
leave
stos
clc
inc
es
ret
adc
push
push
sbb
lock
enter
add
mov
popa
loope
in
adc
and
inc
and
in
push
push
adc
sub
clc
sub
scas
nop
pop
cwtl
sbb
lock
add
push
mov
nop
lret
or
xchg
mov
adc
mov
xor
nop
leave
lds
dec
ret
inc
stos
sub
or
adc
outsb
hlt
xor
movsb
mov
adc
push
mov
lock
cmp
addb
inc
fcomps
or
mov
mov
push
int3
dec
dec
loopne
ret
pushf
and
inc
push
sbb
or
test
or
push
mov
adc
mov
xorl
and
sbb
xor
sbb
sbb
sbb
int3
mov
subb
add
cwtl
js
xchg
jo
mov
stos
xchg
loopne
adc
add
dec
movsl
lcall
test
add
pop
add
int3
pop
call
lret
push
pop
jl
xor
push
dec
dec
scas
hlt
inc
jb
push
insb
cwtl
dec
stos
adc
dec
push
and
fidivl
adc
and
fisubl
and
pop
ficompl
and
add
pushf
dec
dec
adc
in
ret
sbb
adc
dec
mov
push
lret
push
or
div
and
shlb
movsl
sbb
aam
std
cmp
and
jle
orb
insb
mov
sbb
mov
and
gs
aam
dec
loope
jb
es
pusha
test
mov
inc
adcb
pop
or
cmpsb
data16
pushf
ret
cmp
std
adc
add
pop
sub
push
mov
adc
add
mov
adc
cli
cmp
nop
sub
cmpsb
sbb
mov
pop
js
loope
fs
push
and
xchg
cli
movb
pop
add
aam
adc
cmpsb
xchg
test
dec
adc
or
fcoms
or
push
dec
cwtl
cmp
ss
add
lret
sbbb
and
sahf
or
adc
push
xor
add
cwtl
cmp
movsb
xor
js
les
push
adc
adc
xchg
or
push
nop
adc
inc
mov
push
enter
aam
or
ljmp
lret
xchg
add
adc
mov
rcrb
mov
clc
and
popa
addb
inc
mov
adc
inc
shl
xchg
lods
inc
xor
mov
aam
mov
sub
flds
and
pop
adc
insl
bound
jo
mov
xchg
jl
mov
jne
inc
cli
mov
cmp
jl
call
push
data16
lods
aad
rolb
dec
out
dec
jno
aam
aam
add
or
sub
mov
push
dec
push
cwtl
jg
sub
inc
movsl
add
or
cmp
or
test
push
lods
aam
call
inc
sub
iret
in
or
stos
jle
push
adc
mov
shr
test
call
jo
mov
fs
xchg
mov
lds
or
cwtl
and
fiadds
rclb
or
or
adc
sbbl
lret
sub
ds
sub
and
sub
cmp
sahf
test
add
cmp
subb
test
and
hlt
hlt
clc
sub
jo
dec
dec
ss
push
pop
fdivr
push
sahf
test
xchg
ficoml
push
aam
jo
daa
loopne
mov
rcll
pop
push
or
lcall
or
mov
pop
pusha
pop
int
jo
sbb
mov
test
or
lock
and
adc
mov
xchg
data16
push
pusha
dec
bound
add
les
mov
dec
lods
leave
pusha
rorb
mov
mov
sub
and
movsl
mov
lea
inc
movsb
dec
mov
test
add
nop
push
pop
andb
inc
inc
je
push
push
xor
loop
cmp
movsb
loope
mov
inc
and
jo
fdivrs
rclb
sbb
xchg
mov
mov
test
ss
aam
movsl
imul
pop
ret
lret
or
and
xchg
adc
mov
and
pushf
jb
pop
add
inc
sbb
xor
aam
xchg
popa
lcall
inc
insb
mov
nop
or
sbb
add
push
test
cwtl
push
mov
addb
mov
movsb
push
dec
test
lock
dec
pop
jbe
pop
rcrb
adc
or
add
mov
xchg
pusha
rclb
adc
and
ret
xchg
add
pushf
or
xor
leave
dec
cltd
and
jno
leave
adc
and
or
mov
es
sub
rcrb
xchg
inc
add
or
add
ficoml
jb
xor
or
fcmovb
pusha
mov
push
mov
inc
adc
adc
push
lret
dec
jb
xchg
add
or
and
xchg
add
les
cmp
add
add
lods
test
adc
and
rolb
fsubrs
shrb
sub
aad
ret
inc
pushf
xor
xchg
in
into
loopne
movsl
xchg
fadds
dec
push
inc
hlt
in
call
call
mov
push
pop
in
xchg
inc
cmp
inc
and
or
inc
fs
mov
xor
add
and
test
inc
clc
sbb
or
pop
xor
scas
jg
or
popa
pop
pop
push
push
sbbb
addb
cli
std
loop
or
or
xchg
add
mov
aad
jo
mov
xor
sub
repz
inc
jmp
add
xchg
add
or
or
dec
mov
clc
and
xor
mov
pop
and
jp
fwait
adc
push
out
jne
jmp
lret
in
xchg
add
into
xchg
jb
je
jo
or
and
cmp
sub
movsl
cs
imul
test
gs
mov
test
add
or
outsb
jne
add
mov
mov
in
test
inc
inc
adc
xchg
mov
dec
cs
addb
mov
xchg
lret
into
mov
xor
les
xor
shlb
fs
insl
ret
int3
xchg
cmpsb
insb
js
insl
xchg
call
iret
adc
sbb
fdivl
call
mov
inc
test
int3
test
adc
loopne
push
lds
or
dec
cs
sbb
cltd
sbb
xor
push
sub
std
push
mov
sti
iret
inc
test
adc
test
popa
add
sub
loopne
push
add
sbb
xchg
push
or
add
jle
sbbb
sbb
and
cltd
and
mov
jp
xchg
stos
cwtl
mov
mov
xor
ficoml
in
cmpsb
sub
xor
hlt
push
push
xor
inc
adc
loopne,pn
lret
or
and
in
into
aam
adc
dec
jb
inc
mov
cmp
push
and
dec
xor
dec
or
pop
jae
repnz
hlt
pusha
adc
adc
jp
xchg
sbb
in
cmp
scas
sub
enter
mov
or
lods
xchg
enter
adc
inc
add
push
les
in
arpl
ljmp
and
lret
add
push
outsb
ret
nop
lret
lret
and
or
pushf
or
adc
push
inc
cmp
fs
mov
add
inc
aam
enter
xchg
sub
xchg
push
or
scas
mov
adcl
in
insb
xor
and
mov
inc
inc
subl
test
fld
push
pushw
pop
push
out
je
xor
cmpsb
push
push
mov
call
gs
dec
ds
call
pushf
or
dec
pop
fdivs
add
inc
push
cmp
push
pop
push
or
adc
dec
lods
mov
xor
fcmovb
and
mov
or
rclb
inc
leave
mov
adc
ds
jl
push
enter
jle
or
adc
in
and
xchg
inc
cs
lcall
mov
jno
fistps
int3
es
test
xchg
xor
or
pop
hlt
je
test
add
test
dec
test
nop
test
sub
add
aam
subb
cwtl
test
loopne
inc
int3
idivb
and
test
pusha
daa
orl
jl
adc
mov
mov
cli
add
inc
mov
xchg
bound
test
cli
outsb
pop
inc
adc
jo
sbb
hlt
mov
and
adc
movsb
pusha
adc
and
cltd
add
or
cld
cmp
inc
sbb
xor
xor
lret
jp
adc
fs
add
pop
fadds
push
sbb
and
jne
cmpl
sahf
cld
sbbb
pusha
xchg
fs
or
enter
stos
es
add
cmp
and
and
inc
lea
push
and
add
or
mov
push
pop
test
cmp
ss
lret
xor
pop
cmp
or
sarl
pop
inc
add
lds
inc
jo
push
cwtl
shll
fsubrs
dec
mov
fs
test
in
xchg
pop
imul
test
inc
adc
add
xchg
sbb
aam
test
or
sbb
inc
ror
sub
cltd
clc
inc
mov
push
xchg
out
add
xor
sub
test
add
sbb
movsb
or
adcb
out
xor
inc
add
add
push
xor
cwtl
ret
popa
and
fisttps
ja
push
mov
sub
add
mov
insb
fdivrs
aaa
pop
lahf
dec
adc
sub
add
decl
popa
sbb
add
adc
add
push
mov
out
je
ret
add
mov
sub
adc
sbb
lret
sub
mov
sbb
dec
insb
add
jle
xor
sti
mov
fs
dec
rclb
jp
rcr
cmp
push
sahf
xchg
xchg
aam
xor
aad
push
mov
imul
cmc
cli
stc
sub
jecxz
std
jge
inc
sub
mov
enter
iret
sbb
add
adc
test
add
mov
push
or
shrl
inc
mov
xchg
pop
jl
and
cmpsb
pushf
push
lods
adc
jne
arpl
mov
jmp
mov
fs
xor
jb
jmp
in
mov
pop
rol
in
dec
addr16
hlt
inc
xor
sahf
in
sub
or
sub
sub
and
mul
xchg
iret
inc
jge
adc
adc
adcb
insb
out
add
lret
push
in
lcall
pop
dec
push
ret
and
fisubrl
push
dec
adc
adc
push
and
push
dec
adc
pusha
sub
clc
mov
xchg
in
mov
out
loop
lods
adc
adc
icebp
xchg
loopne
dec
stos
inc
mov
mov
addl
mov
sbb
adc
sub
push
ret
imul
adc
pushf
cld
rclb
rclb
lret
fcoml
sbb
jmp
xor
add
mov
data16
adc
add
or
sub
sbb
or
dec
adc
cmp
xchg
sub
add
cs
dec
cwtl
dec
and
push
dec
nop
add
imul
adc
xchg
and
pushf
or
add
jbe
pop
pusha
push
sub
mov
dec
sub
push
push
test
sub
xchg
lods
sbb
subb
adc
ret
inc
test
adc
int3
pop
scas
add
rcrb
jp
pushf
out
sub
mov
lock
rcrw
pusha
adc
test
test
int3
and
jbe
mov
adc
add
add
push
cwtl
sbb
add
or
cmpsl
or
sub
add
lock
orb
std
bound
or
add
lret
test
ret
movsb
andb
xor
mov
sbb
mov
jp
mov
ss
ret
mov
xchg
jb
insb
iret
in
int3
lcall
and
xchg
inc
mov
add
push
inc
sub
mov
add
pop
xor
lea
jb
in
and
jo
cmp
pop
fcomps
sub
test
pop
and
inc
dec
mov
cmp
push
add
in
ret
xor
sbb
movsb
push
dec
jbe
pop
pusha
ficoml
cltd
push
clc
or
xchg
xor
xchg
add
pop
sbb
test
lret
mov
sub
add
popa
add
sti
xchg
addb
dec
fs
cmp
ret
xor
test
pop
inc
jp
aaa
movsl
adc
and
or
push
push
add
adcb
jp
rolb
loopne
sub
data16
push
dec
cltd
sbb
adc
into
insb
shrl
inc
xor
fsubl
cmpsb
loopne
in
sbb
cmp
push
add
insb
sub
popa
adc
lods
cmp
pushf
mov
jbe
out
or
dec
hlt
data16
subb
xor
pop
push
or
ljmp
mov
mov
sbb
mov
xor
jo
popa
nop
jl
or
dec
mov
pushf
push
xchg
push
xchg
ror
pop
push
mov
xchg
or
push
nop
inc
and
push
lock
sbb
xchg
or
out
faddp
push
fcoml
or
dec
sub
pop
xchg
in
mov
lods
xor
dec
or
or
inc
mov
cmp
xchg
lods
or
mov
roll
inc
int3
mov
cmpsb
aam
pop
sub
xchg
add
cli
dec
dec
or
push
adcb
dec
xor
mov
adc
xor
xor
push
push
xchg
push
adc
pusha
mov
xor
cmp
leave
test
inc
mov
enter
jo
enter
mov
js
xor
xchg
lods
bound
fwait
cli
push
test
sub
mov
ja
add
loop
adc
int3
dec
push
sub
xor
cmc
mov
popa
inc
sub
xchg
bound
ljmp
clc
rorl
xchg
or
les
inc
test
add
data16
test
pop
sbb
push
mov
movsb
mov
popa
lods
push
int3
add
xchg
push
adc
ret
lock
adc
pop
or
lret
sub
outsb
pop
js
and
shll
adc
jle
shlb
cmp
movsb
mov
fcoms
loopne
fildl
xchg
add
shll
call
pop
je
sub
mov
pop
dec
push
outsb
outsb
mov
adc
in
or
xlat
rorb
pop
les
add
mov
xor
clc
lock
leave
cwtl
or
xor
jo
cmp
xor
cld
inc
or
mov
fidivs
and
push
test
insb
xor
enter
add
adc
adc
add
in
std
xchg
test
push
xchg
int3
cmpsb
or
jo
rcrb
data16
and
test
test
and
out
and
stos
daa
add
add
pop
add
inc
sahf
or
xor
xchg
les
mov
mov
cli
xor
and
mov
lret
mov
dec
lock
mov
mov
or
hlt
rolb
dec
or
orb
sbb
jb
mov
jo
inc
shll
pop
cwtl
jo
push
out
enter
cmp
dec
dec
adcb
jb
xorb
push
fildll
dec
sub
pusha
sub
loopne
or
rclb
xor
push
jo,pt
mov
add
sahf
push
sub
jo
cmp
adc
adc
sub
fsubrs
add
int
lock
ret
add
inc
sahf
cs
sub
or
mov
add
dec
or
jbe
and
clc
pusha
cmpps
mov
or
ficoml
imul
xchg
into
es
std
xor
cmp
push
or
in
xchg
ja
notb
inc
mov
pop
fsubl
dec
ss
mov
inc
sub
pop
test
adc
shr
in
pop
xchg
pop
and
mov
pusha
data16
sbbb
and
and
xor
adc
pushf
addb
ds
ror
inc
test
xor
shlb
mov
mov
adc
mov
lds
mov
pop
outsl
or
jge
call
xor
hlt
adc
leave
mov
jb
out
in
cmp
mov
cmp
push
pop
pushf
out
inc
inc
and
jl
add
fbld
push
rclb
cmp
sbb
jb
js
push
push
or
insb
mov
mov
int3
sub
mov
cli
mul
subb
in
xchg
cmpsb
and
andb
shrb
mov
mov
shlb
mov
jle
test
aam
fidivs
aam
push
imul
out
mov
add
pushf
mov
add
in
xchg
daa
dec
popa
stos
pusha
outsb
add
dec
rolb
jp
addb
test
sbbb
es
test
adc
insb
es
inc
jo
ficompl
dec
xchg
test
sub
sahf
aaa
jne
mov
or
cmpsl
add
pop
fcoml
fiadds
ret
add
adc
push
out
cmpsb
pop
pop
test
mov
insb
or
inc
faddl
call
cmp
add
add
ret
sbb
push
addb
rol
dec
stos
loope
dec
jp
dec
xor
mov
and
rorb
adc
mov
push
mov
or
dec
hlt
cmp
ret
stos
push
xor
add
pop
adc
or
addl
orl
mov
aam
clc
test
push
lock
or
iret
dec
and
mov
dec
add
aas
or
mov
shl
lock
or
inc
bound
add
rcl
pop
aam
jmp
or
mov
cmp
push
dec
das
movb
scas
jno
incb
mov
clc
aas
ja
add
fsubr
out
xchg
push
mov
mov
leave
inc
mov
std
mov
adc
aam
mov
test
add
call
cmpsb
es
movsb
push
sbb
adc
xchg
dec
adc
ficoml
or
sbb
in
or
adc
cmp
sub
cmp
jo
lcall
jo
subb
mov
movsb
push
xor
push
push
into
sbbb
mov
adc
loop
or
push
sarb
or
ds
in
mov
sub
add
ds
rorb
cmp
xor
pop
xor
push
cmp
pop
das
sahf
inc
rclb
sub
shrl
pusha
test
ret
dec
inc
cmp
push
jo
shlb
cmp
loop
pop
shrl
pop
sub
test
dec
ret
jl
test
adc
fdivr
xor
stos
xor
xchg
test
loope
cmpsb
inc
aam
hlt
gs
mov
inc
sub
or
sub
lds
mov
push
fdivrs
aam
nop
xchg
cmp
xor
push
push
scas
sbb
stos
dec
aam
dec
ret
dec
add
adc
xor
and
add
or
popa
ficoml
movsb
xor
xchg
sbbb
inc
push
and
sub
ljmp
xor
mov
add
xor
and
mov
mov
sub
les
xchg
or
mov
loopne
lds
ret
sarl
nop
or
mov
dec
orb
dec
xor
pop
xchg
adc
xchg
xchg
or
imulb
nop
push
dec
lods
pop
jne
and
pop
mov
and
dec
or
mov
jo
push
inc
arpl
movsb
adc
loop
mov
testb
xchg
lods
sub
cmp
xor
in
iret
inc
adcl
or
or
nop
cltd
call
scas
les
fcoms
push
mov
xchg
repnz
and
or
bound
xchg
push
cwtl
ret
aad
or
sbb
mov
hlt
lock
fisubl
cs
subl
pop
pop
jbe
jo
jo
cwtl
push
push
adc
mov
and
mov
dec
inc
call
xchg
adc
sarb
mov
fsubs
xor
xchg
dec
bound
fcoml
mov
adc
push
sbb
mov
mov
inc
inc
jo
lret
add
sub
mov
mov
addl
adc
sub
mov
add
sub
test
push
add
and
sbb
add
in
xor
fcoml
out
inc
call
outsb
push
mov
dec
or
jne
aam
leave
dec
test
add
fdivl
xchg
sbb
call
or
cwtl
inc
sbbb
or
add
ficoms
dec
lods
pop
inc
lods
lds
out
xor
add
push
xor
xchg
jb
jne
ss
xchg
test
fsubrl
fs
or
add
add
fsubl
test
inc
add
sub
cltd
aad
mov
mov
enterw
jp
fmuls
inc
jg
sub
sbb
xchg
and
push
das
mov
inc
bound
inc
pop
push
std
mov
ljmp
adc
sub
or
scas
push
subl
xlat
mov
cwtl
test
push
cmp
push
add
lcall
sbb
jbe
or
fcoml
or
mov
nop
cmp
lock
dec
popa
sub
lcall
sub
or
dec
or
dec
js
mov
cld
sbb
dec
inc
retw
add
add
adc
rol
mov
in
cwtl
leave
pop
adc
xor
xchg
mov
adc
cmp
xchg
xor
cmpsb
adc
sahf
push
sub
cld
push
sub
cmp
clc
leave
cs
xchg
iret
test
xor
or
adc
adc
xchg
lods
sbb
out
xchg
push
dec
push
inc
xchg
pop
mov
outsl
or
or
and
inc
nop
mov
data16
xor
or
sahf
filds
or
sbb
test
sub
mov
add
mov
rolb
lcall
push
adc
dec
add
jbe
sbb
sub
adc
adc
dec
add
and
jp
int3
and
dec
or
sbb
cs
cmp
pop
mov
and
pop
rclb
into
faddl
test
pushf
mov
inc
or
and
int3
fs
jp
call
pop
and
pop
cwtl
push
sub
mov
cmpsb
pusha
xchg
mov
sub
inc
test
xor
or
test
xchg
xor
or
inc
sub
adc
mov
xor
push
js
fistps
loopne
pushf
adc
add
sub
in
test
fs
mov
and
sbb
mov
pusha
add
je
inc
add
mov
cmp
sbb
dec
lods
test
push
push
or
mov
mov
sbb
fisubrl
cmp
loopne
jg
or
xor
pop
in
test
int3
or
sbb
dec
test
test
xchg
mov
les
and
cs
dec
arpl
sub
xor
adc
movsb
xchg
mov
push
enter
xchg
int3
push
sahf
sbb
dec
mov
cmpsb
aam
loop
mov
int3
and
imulb
xor
data16
call
dec
and
sbb
pop
ret
in
lock
cmp
lret
push
pusha
fists
jo
jae
daa
add
sbb
dec
rolb
xor
add
test
movsb
push
xorb
sub
lds
mov
mov
popa
pop
cli
les
ror
add
es
mov
xor
add
xchg
mov
lret
mov
jb
inc
scas
aam
mov
clc
mov
dec
cmp
sbb
test
and
sbbb
add
adc
and
sub
push
jo
or
sbb
ds
xor
mov
mov
hlt
sub
popa
push
mov
xchg
nop
push
out
sbbb
mov
rcl
xor
sub
or
mov
test
xor
lods
xchg
dec
push
movsb
fcmovbe
and
inc
push
dec
mov
popa
inc
inc
in
je
or
inc
adcb
loop
or
or
faddp
push
adc
int3
mov
ret
cld
fists
insb
mov
es
mov
or
pop
loopne
ds
int3
adc
fdivp
sub
scas
int3
rorb
pop
mov
sti
adc
dec
push
notb
addb
cmp
adc
ficoms
add
cs
xor
outsb
pop
aaa
or
dec
hlt
mov
push
mov
push
xor
leave
adc
ret
mov
cmp
and
and
inc
push
iret
inc
or
inc
and
or
test
cmp
pusha
in
adc
adc
push
sub
pop
add
jle
mov
shlb
or
or
pop
lds
test
dec
adc
pusha
inc
xor
sub
xchg
add
daa
mov
test
je
jo
leave
sub
fwait
jb
test
mov
push
adc
inc
cmpsb
mov
mov
adc
or
adc
mov
loopne
jo
arpl
cmp
and
out
push
push
test
cmp
push
sbbb
cmp
inc
insl
or
xchg
mov
add
xorl
xchg
mov
inc
sub
test
cs
dec
mov
faddp
inc
movsl
xor
push
add
loop
adc
xchg
lcall
mov
or
xchg
pop
rcrb
sub
call
cwtl
mov
ret
pop
in
ljmp
test
jmp
enter
inc
out
call
cld
daa
test
popa
orl
and
sbb
iret
bound
adc
aaa
jle
sub
and
mov
pop
push
fcoms
and
les
int
out
sub
push
push
push
add
fwait
push
fidivrs
xchg
loopne
dec
cmpsb
outsb
or
daa
nop
sahf
inc
and
add
jbe
add
add
out
int3
sub
cmp
mov
sbb
inc
mov
mov
sub
adc
outsb
mov
inc
lcall
add
std
pusha
loop
inc
sub
sub
and
data16
xor
pop
sbb
add
scas
xor
cltd
push
xchg
je
shrb
jno
sahf
stos
pop
mov
pop
xchg
cmpb
jle
lret
and
add
fidivl
ret
push
sbb
adc
mov
scas
pushf
push
std
push
loopne
movsb
push
jb
dec
push
ret
fdivs
dec
iret
cld
dec
cmp
cwtl
dec
xchg
push
call
adc
xchg
and
pop
aaa
mov
xchg
and
les
shlb
add
imul
das
mov
cwtl
in
lcall
mov
mov
lret
mov
dec
xchg
imulb
pop
mov
shll
cmp
mov
jle
pop
push
dec
out
mov
in
or
enter
ret
aam
dec
rcrb
int3
int3
rolb
push
xchg
sahf
push
adc
insb
or
add
fbld
in
fs
add
repnz
mov
stos
lds
inc
bound
call
sub
dec
push
inc
mov
sbb
xchg
outsb
and
into
xchg
xchg
xor
pop
cmp
mov
sub
xor
ret
test
sbb
mov
roll
mov
outsb
push
test
iret
mov
xor
inc
mov
or
jp
out
and
ret
mov
test
add
dec
xor
mov
adc
push
fs
add
cmp
push
mov
inc
sub
pushf
or
mov
add
xor
add
or
sbb
and
dec
and
lcall
inc
sub
adc
sti
fidivs
movsb
jo
pop
xor
cmp
adc
xchg
xchg
in
xor
push
mov
sbb
push
xchg
push
xor
sub
inc
rorb
and
jp
or
call
cltd
xor
fs
xchg
cmpsb
rcl
sub
in
mov
jg
mov
add
aam
test
inc
outsb
inc
sub
adc
adc
aam
pusha
daa
inc
push
dec
loopne
pop
mov
cmpsb
out
add
push
add
adc
hlt
mov
shrl
sbb
mov
lock
mov
inc
xor
sbb
pushf
sbb
enter
add
and
dec
cmpsb
nop
pusha
push
inc
add
inc
hlt
movsb
mov
xor
pop
pop
rcrb
and
adc
enter
pushf
and
add
dec
es
mov
xor
fbld
mov
test
rclb
pop
dec
cwtl
mov
or
or
data16
aam
aam
sub
pop
mov
and
movsb
xor
dec
js
dec
xor
icebp
or
pop
dec
orb
sbb
subl
sbb
nop
sbb
cld
pop
xchg
or
lock
mov
lret
adc
lock
fs
adc
lcall
or
repnz
cli
push
int3
xor
or
dec
in
add
mov
mov
fdivr
ss
pop
mov
iret
sbb
add
cmp
movsb
xchg
mov
xor
enter
add
and
aam
test
or
pop
jne
sub
dec
jb
xor
mov
ret
sbbb
xor
in
les
fdivr
iret
andb
push
mov
int3
lahf
pop
and
adc
aam
mov
inc
loopne
rcll
enter
and
orb
and
push
mov
add
sub
push
cli
add
push
sub
test
cmp
pop
mov
out
outsb
ret
roll
inc
test
jne
dec
in
rolb
sbb
lds
or
cmp
xchg
pop
scas
out
es
adc
and
mov
nop
push
lods
cltd
insl
or
inc
add
cli
dec
inc
add
lock
inc
push
mov
sub
popa
and
and
loop
lcall
and
mov
test
ret
xchg
lcall
jb
pusha
hlt
adc
mov
xor
xorb
dec
sbb
sub
pop
enter
cld
ret
mov
lds
lods
sbb
push
jns
inc
leave
ret
enter
mov
mov
hlt
xor
addl
inc
push
sub
xchg
dec
and
js
fcoms
test
adc
jl,pt
test
js
jo
add
loope
push
popf
dec
xor
sub
cmp
sahf
xchg
pop
push
sub
std
dec
and
sbb
mov
mov
dec
mov
or
add
push
xchg
adc
add
xor
sbb
push
dec
cmp
and
mov
sub
clc
xchg
pop
or
dec
repnz
aam
inc
test
push
xor
or
xchg
or
outsb
mov
xchg
push
cmpsb
add
adc
call
sub
xchg
pop
in
popf
inc
adc
dec
or
mov
incb
rcrb
ljmp
cli
decb
cltd
pusha
lock
dec
cmp
sbb
mov
nop
push
in
aam
pop
ret
pop
adc
and
pop
dec
inc
mov
xchg
push
and
je
test
and
stos
dec
shll
jl
and
dec
mov
nop
repnz
pushf
sbb
or
or
push
pop
mov
std
dec
or
or
inc
adc
push
test
ret
mov
dec
inc
mov
xchg
sub
repnz
add
push
in
ds
divb
js
xchg
inc
xor
push
dec
cmpsb
mov
adcb
xor
ljmp
enter
insb
and
test
test
int3
sbb
adc
xchg
add
push
ficompl
addb
int3
lock
mov
xor
push
lret
sbb
push
mov
data16
addl
lods
jo
add
enter
fcoml
or
inc
mov
and
xchg
test
cmp
xchg
xchg
cmp
lock
sahf
clc
and
dec
push
sbb
xor
inc
or
je
stos
add
jb
out
sbbl
insl
fs
and
jp
push
pop
add
sbbb
sbb
add
mov
push
pushf
and
add
or
iret
adc
mov
pop
inc
movsb
xchg
js
dec
add
push
mov
mov
push
push
pop
pop
add
movsl
cmp
es
out
daa
aam
add
jo
xchg
or
inc
lock
fs
sub
and
inc
inc
imul
jo
push
and
lea
ss
cmp
adc
shll
insb
and
test
mov
mov
aam
mov
dec
mov
es
sub
or
add
xchg
push
into
bound
add
or
fcomps
cmp
inc
pop
and
es
cmpb
data16
into
test
or
xor
dec
mov
inc
sbb
and
mov
mov
inc
lcall
sub
mov
imul
mull
mov
test
mov
or
cld
xor
popf
fdivrp
fcmovb
xchg
inc
adc
add
mov
or
jbe
cs
dec
sbb
add
adc
inc
iret
jp
push
xchg
je
test
call
xorb
or
and
adc
push
cmp
bound
add
movsb
in
scas
mov
in
pop
mov
and
fistps
push
nop
sbb
fs
inc
push
dec
lcall
cli
push
rolb
and
cmp
xor
insb
cwtl
and
pop
jb
mov
ret
ret
adcb
or
sub
ss
clc
out
and
and
dec
push
push
push
shl
rolb
in
or
mov
xor
pop
jle
and
cs
inc
les
or
sub
inc
mov
int3
push
mov
cmpsb
int3
jb
inc
popa
cmpsb
push
xchg
jl
enter
test
push
xor
mov
mov
xor
mov
or
bound
adc
les
xor
adc
push
lods
mov
dec
or
inc
lock
and
inc
sbb
inc
xor
aam
push
js
xchg
inc
and
and
or
adc
jo
mov
xchg
inc
pop
out
pop
test
adc
andl
pop
adc
cmp
mulb
test
adc
push
xor
adc
pop
in
andb
fcom
adcb
jp
fsubl
or
cmp
rorb
push
fs
push
dec
sbb
es
cmp
out
push
data16
js
and
jo
sub
gs
les
xchg
test
dec
xor
movsb
xchg
mov
add
test
rolb
fcmove
xor
mov
dec
into
push
andb
sbb
or
sub
les
xor
lock
adc
push
gs
sbb
xchg
push
push
leave
dec
rorl
loop
cmpsl
push
sub
mov
rorl
jo
and
repnz
mov
or
pop
or
pop
mov
add
cmpb
sbb
lret
adc
bound
or
ds
out
movsb
xor
mov
and
sub
rcr
lret
cwtl
loop
sub
outsb
cs
movsl
add
pop
clc
lock
rol
or
jbe
in
cmp
push
cmp
divb
and
cmpsb
int3
add
mov
rcll
inc
hlt
inc
test
push
adc
inc
add
push
inc
popw
test
add
push
mov
or
and
and
and
aam
and
int3
sub
ret
and
xor
dec
adc
daa
push
push
add
sbbl
ret
lods
dec
mov
mov
push
loopne
adc
jo
test
dec
ret
subb
cwtl
sbb
out
ficoml
mov
ret
inc
cs
xor
mov
pop
fucomip
cld
add
mov
int3
scas
sub
or
enter
loop
xchg
movsb
add
or
add
ds
cmp
add
add
adc
or
test
mov
dec
loop
je
pop
es
push
mov
ret
popa
sbb
xor
mov
add
pusha
pop
test
adc
xchg
orb
or
push
cmp
xchg
outsb
adc
dec
inc
dec
ljmp
adcb
js
push
or
sbb
rolb
mov
insb
movsb
mov
ret
adc
and
daa
fs
mov
push
sub
fs
inc
or
sub
mov
ljmp
mov
and
lods
push
shll
fxch
xchg
divb
test
mov
test
gs
aam
sbb
xor
mov
or
pusha
outsb
loop
mov
adc
movsb
test
fdivs
mov
or
int3
cmpsb
stos
out
adc
dec
push
mov
enter
xchg
adc
push
xor
test
gs
lods
jl
or
fwait
dec
push
lock
push
push
jo
shrb
and
fdivrs
cwtl
or
mov
add
ds
mov
aam
fidivs
loopne
mov
mov
mov
mov
push
adc
push
pop
jnp
cmp
aas
jge
mull
fnstsw
cld
jg
out
push
adc
dec
sbb
sub
mov
inc
cld
in
jg
mov
test
sub
adc
inc
mov
test
aaa
xor
ret
arpl
ljmp
mov
mov
aaa
pop
pop
dec
mov
mov
mov
xchg
dec
movsb
ljmp
shlb
inc
in
cs
pusha
daa
roll
add
push
dec
lock
ret
push
outsl
in
or
cmpb
pop
jg
outsl
aas
mov
pushl
add
adc
inc
stos
add
cmp
je
and
dec
shl
pop
jnp
push
and
add
push
xchg
mov
sbb
and
jl
adc
mov
inc
or
pushf
adcl
mov
mov
mov
xor
loope
mov
js
rorb
fs
push
xor
dec
adc
leave
clc
jbe
loopne
inc
jb
pop
dec
dec
mov
add
push
jo
pop
in
push
sub
mov
dec
or
xchg
mov
cmpb
aaa
in
lret
addb
add
inc
jae
out
cmp
cs
adcl
addb
push
movsb
inc
dec
xchg
shlb
push
sbb
adc
jb
push
pop
es
push
adcl
xor
int3
int3
xchg
nop
test
cld
js
adc
sbb
add
sub
dec
push
rcr
adc
add
inc
xor
mov
add
xchg
sub
cmp
aam
mov
outsb
sbb
pop
push
call
cld
adc
sub
jbe
cmp
mov
xchg
adc
dec
jbe
xchg
cltd
adc
or
fnsave
mov
or
pop
push
xor
pusha
movsb
mov
loopne
sub
push
push
shlb
jo
mov
je
add
add
push
push
sub
pusha
test
ret
mov
or
cmp
mov
jl
add
dec
mov
test
dec
add
in
inc
scas
inc
mov
aam
or
or
int3
inc
or
cmp
addl
inc
xchg
aad
dec
in
xor
mov
subb
mov
xor
add
popa
sub
cs
adc
ficoml
adc
push
test
bound
cmpsb
push
mov
dec
cmp
push
or
pop
lret
sbb
movsb
mov
xor
push
aaa
inc
xchg
dec
outsb
pop
xchg
and
pop
adc
andb
pop
and
subb
sbb
nop
ss
mov
enter
ljmp
jb
jo
push
call
inc
mov
add
loop
data16
add
sbb
push
cltd
fmull
inc
cmp
cwtl
movsb
rol
adc
imul
mov
pop
movsl
cs
filds
mov
mov
push
add
nop
xchg
ret
and
or
or
cwtl
inc
test
pop
jo
fimull
inc
or
test
cmp
js
and
inc
add
popa
push
cwtl
sub
dec
nop
dec
adc
dec
orb
subb
sarw
sbb
inc
fwait
push
xorb
int3
ror
sbb
sub
sub
aam
or
cmp
cs
aam
dec
lock
jbe
or
pop
inc
out
mov
cmp
cmp
jle
fidivl
xchg
xor
jb
int3
xchg
pop
push
enter
pushf
inc
and
into
mov
nop
add
cmp
mov
addb
mov
mov
xchg
push
sbb
sbb
rcr
mov
mov
sbb
bound
lcall
and
or
lds
dec
enter
or
scas
xor
cmpsl
icebp
jo
dec
add
mov
inc
sub
jl
add
cmpsb
test
mov
mov
mov
xor
pushf
fimull
test
adc
push
cmp
enter
dec
es
inc
ja
pop
rclb
sbb
mov
aam
mov
enter
in
push
sub
xchg
xor
add
inc
push
xor
push
scas
clc
scas
and
daa
sbb
pop
shlb
push
dec
push
pop
out
lods
adc
push
sbbl
dec
mov
sbb
bound
dec
js
lock
jecxz
sub
cmpsb
int3
mov
sbb
rcl
test
out
movsl
xor
and
inc
rorb
stos
lods
faddl
adc
mov
add
mov
adc
sti
sub
aam
test
bound
xor
xor
pop
test
jp
loope
xchg
mov
outsb
into
iret
rcrb
cli
aas
sub
jno
pop
bound
orl
jo
orl
cmpsb
sbb
notb
or
cmpsl
int3
clc
and
push
xchg
jmp
negb
fdivrl
popa
shrb
sarb
js
das
or
jo
pop
js
push
or
adc
push
adc
or
xchg
and
test
pop
mov
or
fdivs
cmp
sub
mov
mov
or
adc
sub
inc
xor
or
add
repnz
sbb
jne
lret
xor
dec
dec
mov
pop
cmp
push
rol
js
test
xchg
leave
or
rorb
rcl
fdivrl
ss
out
rol
add
jg
fisttps
incb
movb
push
in
adc
cmp
adc
sbb
nop
or
cmpsb
xchg
pop
enter
or
mov
mov
pop
cmp
or
orb
add
mov
xor
fisubl
push
fcoml
pusha
rolb
sbbb
cld
push
or
lock
cld
xor
and
push
inc
data16
inc
adc
gs
or
xor
adc
test
ss
fwait
sbb
lods
scas
ds
sub
inc
ret
popa
cmp
orb
and
add
inc
and
pop
cmp
andb
mov
shll
insb
push
nop
adc
mov
xchg
adc
pop
into
inc
cwtl
gs
sub
enter
pusha
cs
ljmp
in
mov
ljmp
xchg
popa
push
jecxz
jp
jle
or
outsb
sub
test
cs
pop
push
ret
sbb
push
rcrb
mov
call
xchg
fmull
scas
cwtl
ret
inc
adc
cwtl
dec
sub
push
sub
enter
enter
pop
push
mov
sti
pop
call
test
dec
in
xchg
test
xor
inc
or
rcl
push
into
loopne
mov
push
cmp
jo
lcall
pop
ficoml
add
in
mov
adc
js
inc
ret
xchg
inc
jl,pn
and
dec
lods
adc
add
cwtl
adc
andl
add
hlt
or
dec
mov
jg
test
scas
pusha
sub
inc
or
adc
add
inc
dec
pushf
dec
sar
push
call
js
and
add
es
adc
push
xor
xchg
ret
jb
push
push
sbb
scas
bound
fimull
pop
adc
dec
adcb
sub
insb
add
push
or
mov
and
cmp
xchg
push
shlb
xorb
and
shll
popa
push
add
sahf
js
sbb
xor
xchg
andb
cmp
and
xchg
shl
es
pop
or
inc
sub
out
push
dec
pusha
xorb
dec
in
aam
mov
push
inc
push
test
add
jo
sub
ret
popl
shrb
mov
dec
or
xchg
mulb
or
inc
jl
and
mov
push
stos
sarb
andps
in
pop
pop
dec
mov
push
xor
ret
xchg
mov
fadds
out
or
add
mov
inc
lret
jbe
jbe
orb
xchg
cmp
sbb
mov
jo
cmpl
cwtl
xchg
lock
pop
mov
mov
andl
and
test
push
mov
mov
lods
ljmp
fcomps
aam
loop
jo
or
inc
test
int3
pusha
test
shlb
call
popf
or
roll
add
inc
mov
andl
out
test
cwtl
mov
mov
sbb
inc
or
loop
push
daa
loopne
popa
cmp
push
dec
outsl
inc
mov
movsb
mov
cmp
jo
clc
pushf
dec
dec
add
cmp
and
leave
test
or
sbb
dec
inc
and
in
or
sbb
cmc
push
gs
jno
xor
sub
cmpsb
lahf
rcr
push
cmpsb
popa
mulb
add
xchg
push
xchg
loop
and
add
leave
sbb
dec
cmpb
sahf
dec
cwtl
icebp
mov
adc
cs
xchg
cmp
xchg
ljmp
movsb
add
sub
mov
add
dec
in
mov
data16
cli
fdivs
loop
fs
or
ficoms
inc
sub
jo
dec
inc
sbb
mov
bound
out
xchg
xor
pop
fcmovb
bound
rcr
call
test
js
popa
cmp
cld
xchg
cmp
orb
ja
pusha
aam
inc
jb
dec
mov
inc
lods
and
loope
mov
in
test
les
pushf
sub
adcb
xchg
jle
xchg
movsb
push
inc
push
push
es
push
enter
jo
jp
xor
stos
jo
push
pop
xchg
push
iret
cli
push
mov
xor
mov
inc
leave
or
push
mov
add
test
loop
lret
inc
test
jle
push
xchg
ret
add
mov
push
inc
dec
mov
push
ret
add
xchg
or
mov
dec
add
mov
cmp
mov
cmp
jp
pop
or
in
les
test
xchg
cmp
jp
push
mov
cmc
test
or
shlb
cld
sbb
adcb
das
inc
mov
stos
mov
lcall
push
adc
les
add
and
loop
loopne
adc
inc
out
test
adc
pop
inc
cltd
lcall
or
jbe
mov
bnd
push
add
popf
loopne
nop
xchg
push
xlat
mov
push
jle
and
push
dec
popa
pushfw
mov
push
sub
cmp
or
xchg
leave
test
sub
and
loopne
inc
dec
fidivrl
inc
or
or
sub
mov
sti
dec
mov
rorb
mov
adc
lret
movsb
xchg
in
and
in
lock
and
push
call
cmpsb
pop
pop
and
leave
adc
mov
jo
inc
mov
hlt
stos
test
ss
cmpl
inc
fs
inc
sub
mov
addb
xor
add
mov
test
lcall
nop
pop
dec
inc
retw
fmuls
sbb
test
sub
mov
test
add
inc
sbb
mov
and
sub
push
mov
or
push
or
xchg
xchg
subb
mov
mov
sar
push
cwtl
rol
mov
inc
push
or
push
hlt
dec
prefetcht0
mov
adc
lock
xchg
xor
add
or
or
add
sbb
inc
dec
inc
int3
xchg
sub
daa
or
hlt
hlt
cmpsb
pop
sub
sbb
adc
test
inc
add
pushf
mov
pop
or
inc
cbtw
jle
and
shrb
inc
into
mov
inc
test
push
mov
jo
pop
dec
xchg
push
test
popw
xor
push
lcall
mov
dec
pop
xchg
inc
cmpsb
mov
into
adc
add
adc
fidivs
das
add
push
jle
testb
daa
xor
xchg
push
push
xor
add
and
mov
inc
add
nop
and
adc
scas
xchg
je
push
and
out
inc
mov
inc
adc
pop
cs
cs
add
mov
xor
testb
in
outsb
push
dec
or
lcall
sti
mov
mov
adc
jg
lret
sbb
js
push
and
xchg
sbb
dec
out
add
or
jle
sbb
mov
stos
mov
or
pop
jo
pop
dec
cmp
and
xor
je
dec
loopne
shrb
push
inc
popa
sbbb
xchg
sbb
pop
rorb
xchg
rorb
lret
fs
jo
cmp
fsub
in
test
push
cmp
add
add
push
or
les
enter
adc
call
xchg
cmp
push
push
mov
scas
sub
and
xor
mov
shlb
divb
pop
add
push
rolb
ret
lret
add
mov
sub
lock
pusha
ret
add
outsb
fsubrl
pop
xor
jp
lods
clc
dec
and
xchg
push
add
clc
flds
rorb
adc
push
fisttps
mov
jp
xorb
xchg
test
xchg
and
dec
call
es
adc
sbb
pop
rclb
mov
mov
sbb
xchg
mov
sbb
inc
cmp
push
push
ljmp
dec
out
pop
aaa
or
sub
movsb
jo
sbb
std
sbb
popa
push
adcl
ret
add
in
xchg
push
sub
int3
xchg
fidivl
in
je
add
add
xchg
xchg
cwtl
adc
xor
cmpsb
or
orb
xchg
rorb
faddl
movb
add
insl
test
mov
xor
or
ret
rorb
call
adcb
mov
clc
sbb
or
adc
dec
add
or
inc
cs
xchg
and
wbinvd
mulb
pusha
push
inc
outsb
sahf
ficoml
adc
xchg
cmp
cmp
xor
pop
mov
add
adc
lcall
dec
push
fisubl
inc
cmp
push
and
int3
fs
bound
push
push
adc
add
lret
stos
xchg
inc
sbb
pop
addb
test
inc
xchg
dec
in
push
xchg
jae
outsb
rcr
hlt
sbbb
pop
stos
cmpsb
sub
aam
test
clc
xchg
ss
xorb
dec
push
push
lretw
test
enter
fbld
push
testb
faddl
cmpsb
cld
inc
add
or
dec
mov
ljmp
in
cmp
dec
into
lcall
adc
add
xchg
adcb
pop
incb
cwtl
xchg
xchg
negb
repnz
add
mov
adc
and
loop
out
faddl
push
rclb
xor
push
in
xchg
mov
xor
popf
pop
xorb
sbb
leave
jbe
adc
lods
xor
xchg
mov
mov
mov
imul
cmp
repnz
add
jg
sub
push
shl
fs
cmpsb
add
xor
mov
mov
out
pusha
movb
and
sbb
or
rclb
add
dec
ret
jle
adc
mov
ret
xor
mov
mov
fiaddl
or
cmpsb
cs
in
inc
and
or
inc
sub
ret
inc
cmp
dec
push
clc
sbb
adc
inc
int3
ret
xchg
push
add
cmp
mov
push
nop
and
out
lea
cwtl
je
inc
push
shrl
sub
push
js
adc
xor
xchg
mov
cmpsb
add
test
pop
pop
adc
inc
xchg
imul
rcrb
mov
lods
ret
add
fdivs
and
sbb
dec
ret
xchg
or
cmp
or
lods
hlt
or
rorl
into
sub
push
sbb
push
mov
mov
and
pusha
pop
sbb
nop
in
rclb
pop
inc
std
and
adc
testb
or
push
cbtw
mov
push
cmp
call
and
int3
inc
sbb
adc
bound
cld
lods
or
sub
insl
fdivs
add
mov
insb
and
mov
stos
xchg
cmp
xor
and
test
sub
mov
shrb
sbb
je
pop
and
and
int3
loop
mov
ds
add
test
aam
inc
pop
mov
sbb
sub
pusha
test
add
mov
sbb
xchg
mov
dec
or
xchg
push
shrb
add
and
add
inc
xchg
std
incb
add
and
in
jo
mov
ret
lcall
push
arpl
and
out
sbb
shll
sbb
test
or
mov
lds
test
xchg
mov
outsb
daa
loopne
add
or
adc
xchg
dec
dec
jle
and
pop
sbb
es
nop
fadds
sub
or
dec
sarb
pusha
xor
push
cmpsb
sbb
and
jg
outsl
dec
andl
or
inc
cwtl
xor
data16
sahf
jp
push
inc
loopne
add
pop
inc
mov
or
adc
push
data16
cmp
cmp
cmpsb
xor
lds
mov
sub
je
adc
xchg
sbb
dec
cmc
mov
inc
cwtl
sbb
fs
xchg
dec
xor
add
test
dec
mov
push
call
lret
pop
adc
xor
inc
and
adc
call
fimuls
xchg
or
rolb
pop
iret
jbe
pusha
jb
dec
inc
loop
adc
mov
sarb
and
mov
add
dec
popa
mov
js
fwait
popa
mov
pop
push
iret
pop
and
in
test
scas
sbbb
or
loop
push
xchg
rorb
into
nop
cmp
pusha
jp
adc
dec
mov
cmp
test
mov
sbb
sbb
dec
rorb
xor
push
and
movsb
xor
jb
fiadds
dec
test
inc
inc
jecxz
mov
adc
shll
testb
add
inc
sbb
cmp
dec
xchg
ds
cwtl
sub
adc
adc
mov
sbb
sbb
and
sub
sbb
cmp
adc
outsb
or
pop
pushf
sbb
pop
inc
lock
or
adc
enter
adcb
mov
das
sbbl
mov
mov
shrb
sbb
jo,pn
push
icebp
or
push
or
or
shrl
test
cmp
sub
daa
pop
movsb
call
inc
enter
mov
or
pusha
add
sub
lret
cmpl
sbb
pop
sahf
sbb
rclb
xchg
je
adc
rorl
add
cmpsb
adc
sub
jo
mov
shr
test
cwtl
pop
decb
inc
test
inc
in
dec
mov
loope
jo
mov
jbe
in
xchg
dec
data16
loop
jb
inc
mov
cwtl
scas
mov
out
testb
sub
dec
loop
or
cmp
pop
out
popa
hlt
stos
in
es
aas
add
movsb
sub
push
xchg
sbb
test
push
testb
nop
dec
cli
jbe
inc
cltd
adc
ret
inc
dec
sub
push
enter
adc
stos
adcb
clc
test
test
addb
and
or
mov
inc
add
sub
mov
or
adc
cmp
out
push
test
jo
clc
and
push
mov
or
sbb
mov
add
clc
lods
movsb
adc
inc
sub
and
sub
inc
test
mov
cwtl
xor
mov
leave
add
and
or
mov
nop
int3
sub
ljmp
rclb
test
mov
and
and
sub
loopne
jp
dec
add
xor
push
mov
add
cmp
add
jo
sbb
and
aam
cwtl
add
mov
pusha
xchg
dec
gs
enter
cmp
cmpsb
dec
adc
jp
add
repnz
dec
mov
inc
or
int3
ss
cld
andb
xor
mov
data16
and
subb
push
cmpsl
cld
pop
or
nop
lock
or
push
add
adc
mov
add
icebp
mov
xor
jo
push
or
movsb
mov
and
pop
mov
dec
outsb
or
pop
xor
add
aam
test
orl
cld
pop
test
lods
ret
and
push
js
inc
xor
hlt
adc
leave
sub
fcoms
add
int3
shlb
add
and
add
mov
sarb
jae
lret
sub
inc
jg
add
mov
push
insb
lcall
jecxz
push
adc
push
pop
les
push
lahf
insl
dec
in
push
xor
xchg
dec
jno
std
mov
push
cmp
jg
sbb
sub
clc
adc
mov
mov
adc
flds
je
inc
adc
inc
cmp
xor
mov
insb
jg
adc
mov
sub
cmp
sub
xchg
inc
sub
add
pop
popa
shll
mov
int3
xchg
ret
data16
test
xor
cld
xchg
test
pop
lods
rolb
inc
or
mov
jb
dec
pusha
dec
sbbb
aam
adc
xchg
mov
bound
sbb
push
test
and
js
aam
jg
in
mov
mov
adc
inc
sbb
movsl
mov
leave
enter
lret
push
fistps
mov
or
xchg
cwtl
xorl
xchg
adc
into
rcl
mov
mov
and
lock
push
sbb
call
inc
sahf
cmp
add
pop
mulb
push
sub
lret
xor
push
push
xchg
test
mov
rolb
in
xchg
push
xchg
int3
sbb
add
add
loopne
mov
mov
out
insb
rcr
les
adc
lock
pop
sbb
rol
cmp
adc
rcrb
adc
adc
test
sbb
cltd
cmp
ficompl
push
test
shlb
fisubs
dec
sub
xor
push
sub
shrb
sub
mov
stos
sbb
loopne
or
sub
push
mov
mov
inc
les
mov
les
sbb
inc
cmp
xorl
adc
lret
dec
cmp
test
sub
repnz
push
and
inc
inc
test
add
push
fs
or
pushf
add
push
push
inc
loop
in
movsb
test
adc
dec
dec
and
add
dec
inc
cmp
call
jnp
ficoms
lcall
or
sbb
push
sub
add
stos
out
push
mov
roll
fsubrl
push
jb
xchg
jg
nop
mov
out
xor
add
lret
mov
add
lods
nop
inc
dec
add
dec
aam
or
lret
mov
rorb
ret
pop
xchg
cmp
mov
add
mov
xor
test
rolb
pop
add
dec
adc
and
push
jp
test
adc
rol
movsl
sub
cwtl
push
add
xchg
inc
jo
sub
mov
mov
sbb
xchg
inc
mov
loope
test
jo
mov
inc
loopne
pushf
xor
or
sbb
nop
add
pop
xchg
test
push
inc
popa
mov
mov
cmp
lret
sbb
and
call
adc
inc
addb
add
mov
sub
addl
ret
xor
scas
add
sub
inc
jle
pop
mov
mov
rclb
or
lahf
shlb
lock
es
adc
jp
or
aam
dec
jb
jo
adc
jp
or
adc
aam
cmpsl
add
xchg
dec
push
add
orl
pop
test
sbb
scas
mov
je
loopne
loop
adc
nop
mov
outsb
add
enter
mov
dec
repnz
mov
xchg
adc
dec
test
adc
add
push
test
aam
adc
rcrl
jle
sub
mov
in
adc
sbbl
out
pop
pop
adc
mov
sub
loop
xchg
or
sbb
xchg
pop
mov
ljmp
jo
add
mov
adc
add
xorb
ds
test
les
cld
sbb
cwtl
mov
sbb
push
nop
pop
adc
les
sbb
inc
or
sub
push
sub
inc
dec
push
push
inc
jle
inc
mov
clc
aam
inc
adc
add
and
int3
adc
adc
pop
pop
mov
inc
pop
push
add
sub
adc
fmuls
lods
inc
sahf
std
lock
dec
sbb
test
sub
dec
jbe
push
or
loopne
cli
pusha
nop
int3
push
push
scas
and
ret
cmp
and
sbb
jle
adc
or
call
ret
nop
add
sub
mov
cmp
xchg
andb
inc
dec
sbb
daa
and
xchg
in
xor
mov
dec
add
ret
into
or
shrb
mov
cmc
in
decl
cld
and
sub
jmp
add
mov
dec
inc
inc
out
xor
lods
push
sahf
in
sub
sahf
add
jae
add
mov
or
pusha
mov
lods
pusha
dec
pop
dec
pop
leave
cmc
scas
jl
adc
call
data16
sarl
sti
jl
add
dec
in
mov
inc
enter
mov
and
pop
xor
sub
mov
lcall
shrb
lret
sbbb
and
inc
enter
mov
xchg
dec
fs
cs
cwtl
test
add
xchg
dec
jne
mov
ss
cwtl
cltd
inc
sub
mov
sbb
mov
ret
add
pop
dec
mov
dec
push
or
dec
mov
insb
hlt
push
add
jno
ljmp
adc
popa
gs
ror
cld
push
sbb
adc
jp,pn
mov
inc
xchg
pop
data16
dec
ljmp
lds
jb
les
push
mov
imul
or
movsl
nop
sub
data16
sbb
or
mov
pushf
add
cmp
mov
leave
add
and
cmpsl
and
call
cwtl
mov
gs
loop
cs
dec
pop
jmp
in
lcall
enter
sub
adc
pop
ret
mov
sbb
jl
xchg
ror
or
xchg
push
sbb
push
in
mov
push
sub
shlb
push
nop
ljmp
dec
mov
mov
jl
mov
cs
mov
das
ret
adc
dec
decb
int3
sub
aam
sub
cltd
push
sub
test
subb
jle
pop
pop
sub
or
push
sbb
mov
jo
and
leave
int3
mov
cmp
xor
dec
and
cmp
adc
pop
xor
xor
mov
push
call
jp
mov
pop
sbb
xor
sub
int
nop
pop
sub
xor
pop
gs
xchg
add
cli
stos
push
orl
xchg
pop
and
lret
or
cs
out
inc
push
adc
lock
or
test
dec
and
jp
adc
push
and
gs
push
cmpsb
loopne
push
adc
add
mov
add
xchg
inc
cs
jo
jb
cs
sub
pusha
mov
sbb
add
enter
xchg
mov
sub
daa
sbb
push
enter
addl
mov
push
xchg
ss
or
mov
cmpsl
test
cmp
mov
cmp
xchg
ficompl
in
int3
pusha
push
add
pop
je
add
xchg
cli
lcall
fdivp
mov
data16
and
inc
push
adc
adc
mov
dec
cmpb
xchg
and
ljmp
loop
pop
lcall
xchg
repnz
or
stos
pop
or
add
xchg
mov
dec
call
test
add
es
popa
orb
bound
and
pop
outsb
fiaddl
mov
sbbb
mov
cmp
xchg
or
push
or
mov
mov
call
aaa
mov
inc
mov
cmp
test
data16
push
lret
mov
mov
mov
add
scas
js
add
sbb
or
or
rorb
mov
js
and
cwtl
dec
dec
ret
inc
mov
leave
pop
cmp
popa
cmp
pusha
jb
xor
mov
adc
add
push
add
inc
ficoml
adc
in
jns
fists
inc
and
cs
mov
mov
nop
js
jo
push
xchg
jl
add
mov
cwtl
pusha
jo
cli
sub
dec
sub
add
add
mov
shrl
les
sbb
iret
aam
mov
int3
mov
lds
sbb
or
jbe
sbb
and
jo
cmp
add
mov
pop
xchg
dec
shlb
inc
adc
lret
rclb
and
pop
cs
inc
sub
and
mov
mov
shrl
dec
push
inc
jo
inc
and
push
xor
test
icebp
fs
mov
shl
sub
cmp
jb
decb
adc
mov
popf
xchg
mov
mov
push
fcomps
add
lods
add
sar
stc
iret
inc
mull
pushf
stos
xchg
mov
inc
xchg
lea
bound
enter
dec
rolb
add
or
and
int3
aam
popa
xor
sub
mov
jo
or
repnz
or
and
mov
ss
xorb
xchg
lods
lcall
lds
push
pusha
mov
test
aam
mov
mov
and
ret
je
ds
dec
orb
adc
cltd
dec
ds
cltd
insb
mov
mov
fiaddl
dec
sub
xchg
out
xchg
mov
cmpsb
call
xchg
pop
jp
les
outsb
inc
add
push
add
sub
push
enter
lcall
sub
jae
adc
mov
sub
test
mov
inc
and
lret
cmp
inc
dec
cmp
adc
cmp
subl
add
jecxz
sub
mov
je
xor
clc
fists
mov
xchg
mov
dec
xor
inc
imul
xor
fs
test
dec
push
add
inc
sahf
inc
push
cmp
stos
mov
xchg
fs
shll
ficoml
sbb
dec
fs
jae
xchg
push
cmp
xor
push
dec
lds
inc
or
inc
jnp
ror
pop
test
and
add
push
mov
push
lods
xor
xchg
pop
add
lods
nop
push
adc
add
push
add
es
dec
mov
sbb
and
dec
or
sbb
xor
int3
jl
dec
enter
sub
or
or
insb
lcall
call
sub
lcall
loop
fmuls
mov
pusha
xor
dec
push
mov
rclb
mov
xchg
rorb
dec
addr16
mov
mov
lock
xchg
leave
fs
ret
mov
push
adc
xchg
cmp
xor
adc
cmp
or
sbb
push
mov
xchg
mov
adc
pop
fisubs
adc
sbbb
cmp
cmp
cmpsb
xchg
mov
scas
or
push
in
dec
std
sub
es
or
or
filds
add
pusha
xchg
pop
push
in
push
push
sub
pop
out
mov
pusha
test
shrb
adc
xor
xchg
fs
int3
fs
ljmp
dec
push
orl
ret
mov
push
push
push
cld
inc
push
adc
xchg
adc
mov
ds
add
insb
mov
dec
shll
adc
inc
adc
push
pop
inc
sub
xor
xor
rorb
add
add
aam
dec
push
aaa
loopne
jb
pop
xchg
test
rclb
pop
cmpsb
andb
pop
hlt
xor
cmp
ss
rcrb
mov
lret
cltd
sub
cs
ret
inc
add
mov
mov
xorl
shlb
sub
sbb
std
mov
push
push
or
cmpsb
or
inc
inc
dec
push
mov
dec
test
or
add
je
and
mov
and
push
or
xchg
push
push
jle
pushf
add
dec
pop
push
xchg
adc
xchg
adc
push
jg
call
xor
xchg
push
and
and
and
lods
xor
push
xchg
sbb
test
dec
subb
sub
push
and
lock
negb
xchg
je
cwtl
and
and
daa
lret
mov
or
push
cmp
and
xor
push
sbb
xor
xchg
xchg
aam
fcoms
push
push
imul
js
and
inc
mov
xor
cwtl
aam
sub
into
movsb
or
test
pop
mov
jo
lods
data16
pop
inc
push
dec
add
jo
inc
xor
shrb
push
das
ret
rcrl
adc
filds
test
mov
inc
sub
push
push
shrb
push
xor
and
decl
repz
push
inc
pop
les
testl
in
dec
cld
push
mov
add
fistpl
push
push
mov
repz
cmp
jne
sbb
push
xchg
jno
imulb
push
push
or
xor
or
lcall
adc
outsl
loopne
and
push
imul
push
xor
ret
test
icebp
sub
lds
mov
mov
mov
push
mov
test
mov
sbb
rclb
lret
dec
push
xor
push
dec
movsb
jb
movsb
sbb
xor
sbb
lods
movsb
sarb
int3
xchg
sub
mov
enterw
jle
pop
addb
mov
nop
cmpb
mov
and
hlt
test
push
das
sub
test
or
inc
push
inc
addl
mov
add
push
orl
fcompl
dec
insb
cwtl
rcrb
dec
add
cwtl
fidivs
imul
dec
arpl
pop
clc
adc
dec
inc
mov
mov
fs
adcb
fdivp
dec
add
or
push
xchg
loopne
and
xor
mov
lret
xchg
cmp
or
sahf
sub
xor
inc
inc
test
test
push
das
sub
mov
call
loope
dec
mov
adc
cwtl
into
fsub
add
xchg
fsubrl
or
pop
xor
jmp
data16
cwtl
ret
mov
aad
xchg
test
vpcmpeqw
sti
adcb
or
pusha
adc
ficompl
pop
rolb
xor
pop
test
xchg
out
shrl
pushf
or
jb
addb
loop
addl
int3
bound
xor
inc
push
iret
adc
xor
movsb
or
loopne
inc
xor
dec
sub
mov
and
push
and
mov
lds
out
push
jbe
jnp
sub
call
xchg
inc
hlt
int3
mov
adc
dec
jl
dec
mov
or
fs
push
cmp
pop
inc
push
test
cld
addb
push
or
dec
cmp
insb
push
nop
sub
add
test
test
sbbl
add
push
push
addr16
cmp
add
lret
test
insl
outsb
subb
jle
adcb
and
xor
push
outsl
sbb
rorb
mov
sub
inc
pop
pop
pushf
nop
dec
pusha
test
push
and
and
mov
pop
push
or
insl
inc
or
mov
pop
inc
loope
sbb
dec
call
adc
sub
xorb
xchg
sub
sbb
popa
cwtl
andb
jb
inc
cli
imul
jae
mov
pop
mov
ficompl
data16
pop
xor
sbb
mov
adc
rorb
or
sub
cmpsb
data16
inc
leave
add
rclb
dec
std
or
shr
sbb
adc
repnz
push
or
hlt
mov
xchg
subb
or
bound
cmp
ds
fsubrl
jecxz
sbb
in
es
dec
not
push
push
add
push
push
fdivl
mov
cmp
mov
push
push
adc
outsl
inc
outsl
sbb
loop
push
xchg
xor
cs
xchg
push
pop
jbe
fcomps
sbb
pushf
lds
cwtl
mov
or
add
xchg
std
inc
inc
sbb
cmp
cmp
sbb
fs
push
inc
xor
sbb
inc
inc
xchg
xor
sbb
es
lods
sahf
mov
sub
fimuls
test
or
adc
fildll
adc
add
xchg
adcb
lds
pop
xor
and
leave
dec
mov
insb
ret
xchg
in
sub
mov
subl
mov
aam
popa
cmovo
pop
add
add
fsub
push
add
add
and
test
js
stos
inc
sbb
or
test
stos
inc
inc
push
add
mov
loopne
mov
xor
mov
and
subl
push
mov
inc
das
fmuls
adc
rolb
xchg
js
pop
mov
jp
sbb
nop
test
sub
in
lret
push
and
sbb
or
jl
xchg
test
add
mov
xchg
and
adc
mov
jle
loopne
mov
cmp
nop
push
jae
inc
add
add
sbb
mov
inc
dec
cld
jg
push
test
jno
or
or
insb
movsb
dec
add
push
inc
aam
sbb
push
mov
xlat
and
cmp
inc
adc
lea
dec
daa
mov
and
adc
gs
loope
cmp
mov
or
jbe,pt
add
shrl
loop
xchg
inc
push
dec
loop
sbb
add
sbb
inc
xchg
xor
js
dec
mov
inc
sahf
test
lcall
adc
jp
adc
sbb
stos
xor
dec
dec
imul
lock
and
mov
cwtl
xchg
xor
jb
test
nop
lret
push
ljmp
fisubrl
test
xlat
xorb
outsb
nop
mov
andb
push
test
fdiv
push
xchg
adc
push
sbb
sbbb
mov
pushf
es
sbbb
xor
sbb
inc
popa
ljmp
pusha
int3
or
loope
cmp
and
pusha
adc
adc
add
int3
dec
sbb
cs
xchg
roll
push
aam
sahf
or
ds
shlb
push
xchg
dec
out
test
or
ds
cmp
adc
pushf
cwtl
pushf
test
push
xchg
adc
mov
xor
adc
jle
pushf
or
sti
xor
dec
jo
and
je
xchg
sbb
push
cmp
pop
and
xor
rorb
add
xchg
incb
mov
dec
push
test
xchg
ret
push
stos
out
lock
aaa
int3
adc
and
scas
mov
jp
loopne
mov
fildll
scas
rorb
test
cmp
or
daa
push
pop
xchg
jbe
aam
pop
test
mov
and
bound
add
pop
nop
pop
jl
mov
inc
or
sub
mov
pop
std
faddl
movsb
push
jecxz
xor
sub
fs
and
ds
adc
cmp
cmp
loope
movsl
sbb
mov
add
or
cmpl
les
xchg
pop
in
xor
inc
and
jb
shrb
mov
push
adcb
sub
leave
push
push
js
lcall
push
mov
inc
push
scas
je
adc
mov
cmp
pop
sti
dec
movsb
roll
cmp
ret
mov
addb
jb
out
sbb
rorb
pop
push
xor
pop
jmp
jbe
insb
test
push
add
inc
in
rclb
add
shr
adc
push
leave
pushf
outsb
add
mov
stos
mov
mov
cltd
jo
fimuls
add
add
mov
and
test
std
test
cmp
loop
inc
mov
add
add
cmp
popa
sbb
push
test
int3
sub
shrl
movsb
pop
dec
sub
dec
add
or
stos
sub
adc
dec
mov
or
push
lds
adc
lods
fiaddl
or
or
dec
dec
bound
rorl
cmpsb
dec
fs
xchg
inc
push
subl
sub
push
sub
add
pusha
add
push
mov
call
add
pop
push
lock
das
inc
cs
cmpsb
dec
cmp
pop
outsb
sub
cltd
rorb
inc
sti
inc
and
sub
mov
and
dec
sub
clc
sub
bound
pop
sbb
sbb
dec
xor
jl
and
pop
and
add
je
cmp
push
push
shlb
jno
lock
pushf
fidivs
shlb
push
test
cs
push
jbe
push
push
dec
jle
or
adc
adc
cmp
in
push
and
loopne
add
sub
pop
or
dec
gs
mov
xor
mov
xchg
push
dec
lahf
addb
clc
test
add
and
rclb
sub
mov
adc
nop
rorl
fsub
inc
pop
and
hlt
mulb
sub
sub
add
rolb
add
and
es
xor
movsb
add
adc
shlb
in
adc
or
lods
sbb
adcb
cmp
pop
pusha
lret
adc
mov
notl
ret
mov
in
nop
and
add
out
mov
or
and
dec
xor
repnz
push
mov
xor
sbb
addb
dec
clc
pop
and
mov
adc
in
inc
mov
push
push
mov
xchg
adc
fwait
test
ss
xchg
and
xor
cmp
rolb
xchg
pusha
cmp
mov
es
gs
inc
or
addl
sbb
jo
inc
sbb
jle
adc
ret
dec
jle
shll
and
add
out
movsb
xchg
ficomps
push
xchg
shrb
adc
enter
inc
rolb
mov
test
jecxz
sub
sub
adcb
sahf
mov
dec
sbb
cmp
iret
fiaddl
fmull
leave
or
adc
mov
inc
les
jae
inc
out
es
pop
dec
or
push
or
sub
push
bound
stos
test
sub
orb
sbbb
mov
jmp
xor
sarb
sub
adc
add
bound
cwtl
push
inc
repnz
push
dec
add
sbb
mov
xor
mov
pop
iret
mov
movsl
adc
fsubl
push
cmp
add
leave
and
mov
bound
or
adc
push
cwtl
jb
fmull
adc
imulb
sahf
pop
push
add
leave
push
push
cwtl
and
xor
push
and
jg
adc
xchg
and
push
add
aad
pop
push
lds
and
and
gs
lret
adc
jl
test
pop
loope
in
sahf
add
cltd
adcb
pop
mov
or
fadds
xchg
adcb
inc
inc
cmp
sub
cmp
scas
int
dec
sub
xchg
jb
sub
mov
shlb
add
cmpsb
addl
xor
sbb
dec
or
pop
dec
inc
dec
xor
xchg
test
or
lret
cwtl
shrl
bound
dec
or
mov
xor
push
inc
and
add
es
add
xchg
sub
cmpsb
and
and
sub
and
test
bound
cmp
addb
adc
out
insb
sbb
pusha
mov
jbe
push
or
sub
js
xchg
and
into
insb
push
or
fs
int3
nop
lret
pop
push
shrb
pop
rcl
xchg
inc
add
push
fisubs
loopne
add
and
call
jo
cs
cmp
adc
pusha
bnd
push
or
ljmp
pop
xor
fisubl
and
cmpsb
mov
pop
add
mov
les
lods
mov
les
mov
sub
aaa
push
inc
mov
in
pushf
adc
cld
mov
cmpsb
mov
cmp
push
add
cwtl
addb
fs
jle
adc
inc
adc
cmp
add
sub
lock
xchg
mov
adc
fcom
call
push
push
mov
enter
adc
push
test
cmpsb
loope
add
jg
jb
or
mov
das
pop
pop
les
or
cmc
and
jb
mov
mov
mov
add
addb
pop
sbb
pop
clc
cmpsl
and
and
sbb
int3
sbb
rol
adc
xor
add
sbb
add
dec
insb
xchg
lret
adc
lcall
pop
in
mov
adcl
dec
jbe
addb
or
inc
mov
sbb
inc
outsb
add
addb
inc
and
es
test
je
adc
fists
aam
xor
jecxz
inc
iret
or
pop
mov
inc
or
fmuls
sub
mov
sbb
std
jp
inc
or
mov
and
push
dec
mov
jae
fs
or
lods
fidivl
int3
pop
push
mov
mov
lods
andb
aam
sbbl
jo
adc
or
push
ljmp
ds
ror
ds
into
stos
push
dec
dec
sbb
and
in
inc
cwtl
push
push
fildl
jo
pop
sbb
es
add
inc
shlb
add
addl
ljmp
nop
jo
or
dec
add
leave
outsb
xchg
pop
mov
mov
imul
aam
cltd
mov
xchg
adcl
popa
mov
lcall
inc
pusha
insl
mov
push
bound
cwtl
sbb
adc
and
nop
movsb
and
jle
fldl
adc
cmpsb
sub
jo
cld
lcall
inc
or
lock
test
dec
shl
je
cmp
cltd
ljmp
or
lret
adc
inc
and
pop
adc
push
mov
hlt
adc
dec
jo
adc
xchg
clc
xchg
sahf
shlb
jno
add
mov
or
int3
sub
mov
mov
add
and
mov
das
xor
test
or
rorb
xor
xchg
mov
inc
sub
daa
fs
mov
sti
cmp
int
rol
and
inc
int3
cmp
push
push
pusha
add
and
sbb
push
sarb
cwtl
add
or
xchg
roll
and
repnz
cmpsb
lret
andb
inc
pop
pop
test
or
pop
mov
cltd
andb
push
cmp
js
xor
add
sub
adc
clc
dec
insb
movsb
xor
pusha
mov
clc
xchg
or
pushf
mov
jbe
movsb
int3
sbbb
pusha
xchg
out
mov
and
mov
movsl
sbb
or
mov
inc
and
cmp
dec
inc
inc
pop
mov
mov
xchg
dec
lret
or
dec
inc
into
push
cwtl
addb
xor
pop
inc
in
inc
fs
outsb
sub
enter
xchg
dec
nop
mov
dec
es
sbb
inc
dec
fdivrs
pop
mov
inc
sbb
cmp
in
mov
cmp
adc
mov
dec
push
pop
ret
lods
jmp
lret
test
add
jb
adc
push
push
push
add
or
xor
mov
lret
sub
push
pushf
mov
pop
cmp
mov
pop
popa
mov
push
loopne
xor
add
xor
mov
lods
add
inc
xor
sbb
cld
push
out
test
pop
add
adc
pop
dec
dec
or
pop
dec
mov
pushf
dec
sbb
fsubs
popa
add
mov
daa
sbbb
push
hlt
loopne
sub
sar
rcrb
or
test
aam
loop
lods
mov
adc
pop
adc
dec
add
push
inc
and
scas
cld
pop
inc
xchg
jp
sub
fstps
dec
mov
fs
mov
inc
sbb
loopne
pusha
push
je
sbb
inc
xchg
and
sbbb
xor
xchg
fadd
test
mov
in
data16
inc
ret
pop
lret
xchg
ret
mov
and
pop
cwtl
and
adc
lock
int3
mov
mov
test
movsb
cmpsl
mov
dec
xchg
xchg
shlb
and
add
movsb
sub
or
inc
daa
js
push
and
les
push
mov
push
adc
sub
jg
sub
retw
dec
fs
shll
push
and
mov
ret
mov
mov
leave
je
cmpsl
or
mov
sbb
adcb
xchg
jbe
xor
adc
cld
xor
inc
shlb
cwtl
pop
sbb
cmpb
ret
test
aad
addb
and
leave
es
xor
and
cld
pushf
adc
mov
push
cltd
jne
adc
jl
sub
gs
lret
mov
add
mov
add
xor
movsl
test
xor
ret
or
test
push
inc
xchg
jne
inc
test
mov
xorb
mov
or
cmp
push
inc
push
test
push
push
and
dec
adc
jo
adc
and
insb
cwtl
ret
rclb
aaa
mov
outsb
insb
jbe
aam
xorb
pop
or
push
adc
add
frstor
pop
sarl
add
loope
cmp
into
add
mov
cmp
std
or
aam
push
push
sarb
inc
loopne
leave
mov
pusha
ret
and
mov
test
sahf
pusha
hlt
xchg
or
push
or
add
les
sbb
sbb
and
leave
dec
sbb
mov
test
inc
or
push
ret
or
push
les
adc
push
enter
pop
insb
mov
in
mov
fmuls
and
cmp
and
js
ds
inc
imul
int3
xor
movsl
shlb
mov
and
adcb
loop
xchg
ret
dec
and
and
cld
push
or
and
test
int3
mov
lds
or
adc
sbb
lea
mov
jbe
push
loop
xchg
inc
and
xor
and
xchg
lods
mov
or
add
pop
add
mov
lock
add
add
and
pop
lahf
mov
jno
dec
xchg
or
add
and
push
enter
mov
decb
and
sbbl
pop
ret
sbb
ret
mov
xchg
push
jb
test
nop
mov
mov
inc
add
xchg
pusha
adc
int3
or
xchg
xor
shrl
and
inc
rolb
sub
inc
jg
rorb
and
lret
pop
jb
pop
hlt
in
cmp
mov
or
jl
push
inc
push
into
fcoml
inc
dec
daa
xchg
adc
movsb
mov
push
add
cli
ljmp
iret
adc
jg
imull
sub
sbb
push
push
daa
mov
push
addb
xor
leave
call
and
push
push
out
fildll
and
sbb
adc
add
addb
sub
mov
fs
inc
in
loope
and
jno
inc
addr16
call
js
mov
int
add
sti
or
push
jo
pusha
sub
cwtl
ret
cmp
fs
inc
roll
daa
adc
xchg
and
loop
add
test
or
add
xchg
push
in
cmp
addb
sbb
add
sbb
cmpsb
add
xchg
test
enter
adc
sbb
sub
sbb
outsb
enter
inc
add
adc
leave
fdivrs
pop
inc
push
je
push
push
inc
rolb
outsb
repnz
mov
std
adc
inc
dec
push
xchg
and
sbb
sbbb
jl
add
inc
test
add
mov
pop
lcall
les
inc
mov
test
jg
cmpsb
mov
xchg
pop
sbb
push
inc
pop
das
add
test
bound
adc
nop
or
sbb
pop
adc
mov
and
inc
and
and
popa
aam
push
xor
xchg
dec
xchg
mov
loop
dec
dec
inc
and
hlt
xchg
lret
insb
cltd
dec
call
dec
fcoml
shrb
or
pop
jo
add
pop
imul
pop
inc
mov
add
sbb
sbb
and
xchg
mov
and
lret
int3
mov
adc
mov
or
dec
xor
sub
into
cltd
mov
push
pop
or
mov
sbbb
inc
addb
clc
add
push
int3
jp
jb
and
and
and
xor
sub
mov
adc
inc
dec
pushf
xchg
jecxz
jl
lock
dec
add
adc
outsb
sbb
inc
mov
inc
mulb
adc
add
pop
dec
adc
in
xor
inc
dec
and
pusha
es
mov
xor
and
mov
adc
pusha
stos
mov
mov
jo
mov
cmp
mov
sub
or
push
adc
xchg
cmp
outsl
push
shlb
in
mov
push
push
test
jb
or
or
gs
ss
push
icebp
and
incb
and
cmpsl
adc
sub
adc
loopne
add
xor
lret
inc
sbb
and
pop
or
out
bound
icebp
filds
pop
addb
or
es
cmc
jmp
lock
cmpsb
cs
mov
xor
mov
push
add
inc
dec
add
jb
sbb
push
fidivs
xchg
scas
fisubl
movsl
xchg
inc
scas
hlt
inc
or
sbb
push
int
push
pop
movsb
test
or
inc
ret
jl
push
dec
sub
push
xchg
adc
cltd
add
popf
fisubl
cld
mov
pop
push
pop
push
add
or
mov
cmpb
dec
adc
fidivl
or
addb
pop
push
inc
mov
xorb
sahf
or
or
shlb
adc
or
nop
or
and
mov
add
or
xchg
adc
sahf
enter
int3
or
shlb
pop
sbb
inc
push
push
adc
add
adc
xchg
push
stos
pusha
clc
xor
mov
inc
sub
jbe
lea
mov
test
std
adcb
test
xor
push
push
mov
xchg
or
hlt
add
sbb
test
and
ss
mov
test
jo
push
fcoms
cwtl
cltd
shll
inc
cmp
sub
sahf
orb
sbb
fidivs
test
jo
fcmove
lock
mov
test
dec
push
mov
or
add
sub
nop
or
sbb
adc
push
repnz
movsb
adc
adc
insb
jo
out
sub
inc
jbe
cmp
sub
mov
and
xchg
adc
fbstp
add
inc
add
cltd
adc
inc
hlt
inc
add
jl
adcb
or
xchg
push
insb
sbb
orl
je
xor
dec
sub
mov
nop
es
movaps
sub
call
adc
nop
roll
mov
ret
int3
xchg
dec
xor
out
mov
idivb
lock
movsl
int3
stos
in
lea
mov
pop
fimull
pop
push
inc
ret
jle
mov
adc
data16
andl
mov
les
bnd
sbb
daa
xchg
and
and
orb
insb
or
test
sub
mov
mov
add
push
jo
fmuls
iret
test
add
or
add
sahf
dec
xchg
xchg
mov
sbb
add
jle
xchg
xchg
cld
inc
or
ret
inc
mov
push
mov
mov
push
mov
nop
inc
enter
nop
sbb
jo
test
dec
cli
xor
sbbb
or
int3
dec
or
push
mov
or
rcrl
ret
jmp
lds
pusha
inc
lret
dec
fs
adc
xor
or
aam
lods
sbb
inc
rol
rolb
cmp
sub
notl
cltd
aam
enter
mov
sub
push
pusha
and
bound
sub
outsb
xchg
push
xchg
enter
or
mov
pop
test
in
or
inc
adc
dec
fs
push
orb
push
and
xor
out
sbb
lods
mov
les
jo
push
or
xorb
or
push
or
lock
aam
xor
jbe
addr16
pop
int
iret
push
adc
inc
fs
test
sbbb
in
rcrl
dec
inc
lret
push
xor
xor
loop
pop
int
pop
inc
std
add
xchg
test
ficoms
xchg
xchg
sbb
pop
sub
xchg
or
push
sbb
push
xchg
dec
adc
faddl
sbb
insl
or
mov
push
push
xor
es
sub
sub
sar
iret
pop
and
loopne
loope
lret
leave
ret
pushw
leave
int3
orb
pop
jo,pn
adc
or
add
jle
pop
addb
sub
loop
enter
mov
xchg
nop
add
bound
or
xor
push
xor
jo
in
int3
sbb
andl
fidivrs
data16
add
dec
sub
cmp
and
leave
xchg
adc
lods
jecxz
sbb
lret
decl
lcall
adc
or
pop
inc
arpl
cmc
insl
push
enter
imul
imul
test
dec
into
sbb
xchg
mov
call
dec
cld
sbb
mov
cmp
jl
add
xor
test
or
add
mov
xchg
inc
stc
sbb
mov
ja
mov
pop
push
xchg
imul
and
lock
pop
lcall
rcl
test
xor
enter
jmp
sbb
sbb
mov
adc
sub
ss
test
cli
or
adc
mov
pusha
bnd
es
mov
out
xchg
nop
lds
leave
outsb
mov
sahf
sub
insl
xchg
scas
xchg
push
fidivl
jmp
jb
rolb
and
cs
sbb
cwtl
int3
sbbb
jle
enter
add
inc
cmpsl
jp
push
je
dec
mov
add
mov
stos
xchg
xor
sub
and
test
enter
add
or
adc
inc
ljmp
int3
ljmp
bound
mov
cltd
lret
outsb
test
add
add
cmp
outsb
mov
sti
inc
push
imul
inc
jb
mov
mov
subb
pusha
es
push
sahf
and
fs
fmuls
fdivl
push
int3
cmp
pop
addb
add
divb
inc
pop
int3
in
fsubl
mov
push
in
or
add
pop
push
or
insb
or
andl
adc
xchg
sub
cmpsb
nop
xchg
add
sbb
inc
bound
bound
rcll
and
dec
imul
sbb
or
add
xchg
add
test
and
sub
sbb
dec
dec
add
push
or
jle
push
rclb
xor
push
sub
mov
mov
add
sub
js
pop
inc
outsb
adc
mov
mov
inc
sbb
subb
cwtl
and
sub
mov
xchg
leave
xor
pop
dec
or
or
sub
fs
mov
scas
mov
mov
add
sbb
mov
data16
test
pop
lods
or
or
or
test
xor
or
rdpmc
pop
push
stos
xchg
push
mov
ficompl
es
mov
jl
xor
shrl
test
xor
lcall
xor
and
hlt
push
hlt
fsubl
xchg
sbbb
mov
and
and
jo
dec
push
call
out
or
popa
sbb
sbb
test
add
xchg
adc
shlb
leave
mov
pop
test
jle
or
leave
sub
lods
je
xchg
pushf
and
subb
adc
push
hlt
popa
or
sbbb
dec
mov
sbb
roll
fwait
arpl
cmpsb
pushf
and
mov
and
adc
push
shll
rclb
cwtl
int3
or
adc
adc
call
adc
ljmp
je
lock
aaa
push
add
fistpll
fcmovu
ret
push
and
push
ret
aam
dec
mov
jg
jbe
push
push
add
mov
and
inc
push
xor
sbb
sahf
mov
adc
inc
inc
inc
push
rorb
xor
dec
pop
add
add
es
or
test
bound
test
xchg
adc
cmpsb
mov
xor
mov
adcl
ret
add
mov
je
adc
adc
inc
bound
inc
dec
rcr
inc
dec
add
leave
pop
sub
adc
dec
mov
xchg
scas
jae
or
dec
pusha
sbb
xor
and
bound
push
inc
adc
cmpsl
and
mov
push
jl
push
pop
pop
leave
or
or
sbb
inc
rorb
fs
jb
add
out
movsb
mov
sti
cmp
cld
inc
loopne
dec
and
ret
imul
loopne
add
xor
inc
imul
adc
dec
adc
subb
lret
out
dec
pusha
add
inc
or
dec
loopne
in
ret
hlt
push
sub
push
cs
mov
mov
jmp
or
loop
and
cmp
xor
add
lcall
inc
lds
pop
xor
sub
push
nop
inc
popa
sub
push
pushf
cmp
aaa
xchg
pop
ret
push
les
outsl
cld
and
adc
push
and
inc
inc
or
incl
das
mov
inc
pop
mov
xlat
mov
inc
pusha
inc
mov
sbb
outsb
or
add
xor
inc
and
and
jg
jp
sbb
cmpsb
call
ret
pusha
test
int3
add
ds
xchg
cs
sbb
xor
xor
add
jg
orl
cld
mov
jb
add
int
add
dec
and
xabort
pop
push
int
adc
pop
test
bound
mov
mov
stos
test
cmc
adc
push
sub
inc
or
xchg
mov
lods
cmp
sub
dec
rcl
cmpsl
aad
add
pop
lods
adc
iret
sub
push
inc
push
jg
je
push
add
jp
insb
test
adc
inc
dec
pop
mov
adc
rclb
mov
cltd
ret
test
scas
int3
and
test
fisubrl
sbb
cmp
add
sub
jb
out
loopne
dec
sbb
inc
push
dec
cs
or
sub
mov
lock
add
imul
pop
rclb
test
enter
push
in
inc
xor
or
rclb
push
loopne
jne
cmp
pushf
push
ret
xor
push
inc
inc
int
add
mov
sarb
jo
sub
stos
xchg
fists
in
mov
adc
xor
jg
int3
nop
pop
sbbb
mov
pop
push
and
dec
bnd
xor
shlb
cmpsb
sahf
rolb
push
stos
adc
or
out
je
pusha
inc
or
int3
cmp
dec
and
pop
sahf
pop
mov
orl
leave
movsl
adc
lret
lcall
xchg
pop
ljmp
rorb
subl
mov
inc
leave
data16
push
dec
add
push
mov
mov
into
pop
leave
push
mov
lret
dec
addr16
dec
push
mov
and
pop
xchg
xor
mov
lods
mov
mov
iret
mov
sub
test
dec
xchg
ret
pop
cmp
rol
xchg
mov
mov
sbb
mov
add
lea
mov
std
cwtl
test
sub
pop
push
stos
cs
aam
dec
sub
and
je
xor
mov
xor
movsb
inc
jo
lret
push
clc
int
jmp
pop
xor
dec
and
jo
xchg
leave
nop
adc
adc
lret
sub
or
and
rorl
push
jo
inc
test
adc
es
sub
and
mov
inc
dec
repnz
add
adc
repnz
dec
add
push
enter
and
mov
jg
or
jno
mov
pushf
movsb
jb
push
movsb
and
negb
hlt
push
jp
xchg
iret
gs
or
adc
sub
mov
subb
sub
pop
jle
popa
or
movsl
test
sbb
pop
sbb
xchg
pusha
mov
lretw
and
test
clc
sbb
xchg
faddl
adc
enter
lock
les
popa
mov
aam
xchg
inc
insl
or
lock
cmpsl
data16
add
add
cli
or
dec
rorb
or
sbb
sbb
add
enter
int3
sub
js
or
inc
ret
add
and
shlb
inc
push
push
adc
lcall
xor
add
lret
sbb
mov
xor
adc
push
je
sub
dec
iret
dec
call
stos
mov
rcpps
test
nop
iret
dec
adc
aam
test
pop
imul
xchg
xorl
sub
sbb
adc
shrb
ds
or
fs
imul
call
add
and
pusha
mov
mov
dec
mov
outsb
inc
sbb
add
lods
xor
ljmp
add
mov
inc
in
mov
dec
dec
add
shlb
xchg
aas
test
lds
mov
sbb
shl
ret
mov
push
movsl
out
dec
push
xchg
mov
and
xchg
inc
add
movsb
jb
inc
or
mov
mov
lret
out
push
into
mov
fsub
rclb
or
insl
inc
sub
addr16
dec
fmuls
adc
sub
or
jp
and
xchg
enter
inc
push
add
sub
adcb
dec
int3
or
push
adc
and
loope
or
stos
gs
mov
or
sbb
lcall
and
xorb
sti
pop
aam
dec
sbb
aam
mov
adc
call
dec
scas
mov
cmp
xor
xchg
jge
cld
fildll
nop
xchg
xchg
xchg
popa
jle
or
dec
sub
cs
pusha
ficoms
cs
aam
xor
gs
subb
test
push
hlt
cmpb
mov
sub
jle
scas
adc
add
in
push
cmp
sbb
jbe
xchg
or
in
orb
jbe
rcrb
lds
adc
push
clc
push
xchg
je
and
or
push
test
call
sub
pop
insb
ret
lock
pushw
sarl
pop
push
or
push
adc
pushf
inc
loop
mov
add
mov
adc
call
jo
cmp
int3
movsb
or
xchg
or
insb
push
inc
add
adcb
adc
pop
sbb
nop
pop
push
mov
or
ret
ds
or
mov
es
inc
xchg
scas
test
icebp
aam
xorb
xor
or
aam
fwait
sbb
test
mov
aam
xchg
push
outsb
sahf
enter
test
sbb
aam
push
inc
cmp
cmp
push
xchg
gs
shll
push
dec
lds
or
les
push
inc
or
gs
pusha
movsb
lock
adcb
dec
sbb
xor
inc
lods
add
pop
rcrl
divb
xor
je
aam
jo
and
and
adc
push
inc
jmp
dec
mov
or
adc
mov
jp
sub
or
mov
adc
sub
xor
cltd
push
add
js
movsb
xor
add
test
xchg
xchg
push
dec
inc
lods
testb
pop
test
sbb
jle
inc
add
sbb
sub
add
addb
xchg
dec
jb
inc
ljmp
xchg
mov
or
push
inc
add
test
sub
push
ret
sub
and
adc
sbb
test
mov
sub
jg
mov
inc
pop
repnz
mov
sbb
or
and
or
xor
int
loop
jp
push
dec
and
push
int3
popa
dec
xchg
bound
mov
shlb
adc
sahf
add
xchg
mov
add
insb
and
pop
rol
sarb
sbb
push
mov
add
addl
test
loop
shrb
and
push
lret
xor
in
cmp
xor
add
xor
and
mov
and
adcb
xor
int3
nop
jne
adc
fisttps
lods
jo
mov
sub
mov
jb
int3
add
xchg
test
cmp
call
add
xchg
sbbb
adc
xor
out
std
add
or
data16
js
daa
sub
push
sbb
mov
xor
mov
sbbb
ret
out
sbbb
push
mov
add
orb
push
into
add
adc
push
faddl
dec
mov
inc
lcall
mov
pushf
out
inc
inc
dec
aam
hlt
loope
mov
inc
xchg
je
mov
xor
add
cltd
dec
pop
xchg
push
mov
mov
pop
or
fs
sahf
xor
or
dec
xor
cmp
dec
loopne
retw
xor
jl,pt
ffreep
mov
mov
dec
out
into
shl
push
call
or
aam
push
xchg
cli
add
dec
mov
icebp
sahf
mov
pop
lea
cmp
mov
add
mov
add
or
test
push
repz
add
jg
ret
jg
mov
inc
fs
scas
in
mov
xchg
inc
jo
fcomps
pop
push
mov
test
movsb
xor
loopne
add
push
mov
xor
test
aas
sahf
mov
test
xor
inc
mov
or
push
add
xchg
and
fs
dec
pop
in
pop
addr16
sub
add
ss
push
test
pusha
adc
jo
lods
xor
subb
or
push
nop
fmull
add
push
cmp
inc
test
inc
add
hlt
sub
xorl
mov
pop
jo
cmp
pop
push
pop
sbb
test
int
dec
and
cld
jle
push
movsl
mov
cmp
adc
push
mov
sbb
loopne
inc
push
movsb
pop
sbb
ljmp
jl
add
inc
adcb
stos
call
loopne
cwtl
incb
mov
add
fs
cld
pop
push
or
jb
rcrl
xchg
pushf
adc
push
inc
testb
arpl
sbb
push
cltd
lret
push
pop
push
sub
xor
inc
les
add
movsl
add
jb
je
dec
les
jp
add
inc
dec
push
add
addb
popa
sbb
loop
outsb
inc
das
mov
mov
sbbb
mov
add
or
ret
in
inc
push
and
dec
pop
lock
inc
xorl
nop
adc
xchg
adc
out
popa
xor
jo
add
dec
inc
rcr
mov
push
mov
shlb
iret
lds
ror
xchg
pop
mov
dec
sbb
sbb
test
inc
mov
or
xchg
xchg
ret
dec
ror
rclb
and
dec
leave
testb
mov
loope
loopne
test
rolb
scas
enter
call
bound
xor
jbe
adcb
shlb
js
adc
orb
in
mov
mov
subl
ficoml
mov
mov
push
notb
ret
mov
xor
sbb
mov
adc
cmp
es
stos
mov
dec
sub
pop
xchg
or
dec
xchg
enter
mov
pusha
xor
pushf
or
mov
mov
lcall
repnz
xor
mov
orb
nop
rcr
mov
and
cmp
sub
test
add
or
xor
gs
pop
pop
cs
add
rcll
sub
loopne
push
jb
lret
or
std
cld
xor
ds
out
or
xor
jp
add
cs
sub
mov
push
xchg
fsubl
cmp
je
cwtl
add
andb
dec
mov
push
cmp
int
xchg
arpl
rol
mov
orb
cltd
inc
and
into
out
testb
sub
and
inc
int
push
dec
filds
sbb
pushf
sub
lret
into
and
in
inc
and
xor
pop
push
sub
fadds
ret
mov
test
rcl
sahf
mov
nop
les
adc
xor
dec
or
clc
push
xor
push
jbe
lds
dec
xchg
inc
jp
scas
cmpsl
add
sahf
ljmp
decb
add
sbb
cli
std
loopne
push
adc
xchg
push
xchg
cli
or
cwtl
cld
loopne
push
sbb
rorb
ss
add
std
in
xchg
or
xorb
daa
js
pop
xchg
jo
or
dec
lods
jbe
jbe
jl
mov
adc
inc
push
enter
cwtl
movsb
out
push
or
into
je
sub
xchg
or
ret
or
xchg
adcl
insb
lret
cmc
xchg
mov
lcall
js
inc
mov
movsl
in
mov
adc
add
xor
inc
or
xor
inc
movsl
add
aam
and
xchg
test
xor
xchg
rolb
xchg
xchg
call
adc
xor
add
adc
pushl
adc
shrl
lret
and
call
movsb
shlb
push
cmp
xchg
and
push
pop
enter
xor
sbbb
or
and
or
xor
push
cwtl
mov
push
xorb
push
xchg
test
jb
sbb
loop
cmp
inc
jne
mov
outsb
jmp
lret
orb
adc
adc
orb
aam
add
mov
or
dec
dec
iret
insb
xor
enter
dec
test
leave
xor
orb
in
and
xchg
xor
loop
add
push
outsb
sti
or
mov
inc
and
inc
scas
sub
mov
daa
pusha
mov
sub
mov
clc
fisubs
loopne
add
mov
and
lret
fcoml
adc
ss
jl
cltd
loop
pop
adc
sub
or
notb
and
sahf
push
xchg
dec
and
xchg
xchg
shlb
sub
sub
je
jmp
out
mov
adc
cltd
push
push
xchg
push
mov
or
aam
imul
insb
sub
sbb
and
rcrb
adc
add
mov
dec
xchg
mov
inc
xchg
and
bound
sbbb
sbb
xchg
push
dec
sub
notb
pop
popf
sbb
rolb
leave
stos
movsl
xorl
inc
inc
mov
in
and
loop
cltd
and
sub
mov
push
dec
loopne
pop
mov
push
mov
test
shrb
dec
or
insb
sbb
sbb
adcb
push
dec
sbb
mov
js
add
mov
push
adcb
fs
leave
sub
xchg
rclb
xor
xor
and
sbb
in
imul
adc
add
test
inc
loopne
sbb
jo
mov
sbb
mov
add
xor
dec
dec
push
dec
leave
loopne
xchg
sub
fdivs
in
adc
fmuls
nop
or
push
sbb
sbb
xchg
mov
push
push
popf
and
ret
adc
lret
cmp
fs
mov
shlb
add
int3
ss
sub
and
mov
fimull
mov
pop
shrb
cli
into
mov
je
addb
and
sbb
mov
pop
lods
sbb
mov
push
inc
mov
xor
test
mov
add
push
mov
shlb
push
push
push
add
movsl
and
js
out
mov
in
push
mov
adc
bound
jl
data16
iret
in
add
pop
mov
and
and
test
jp
dec
dec
sbb
xor
adcl
cmp
punpcklbw
inc
push
mov
jnp
and
pop
pop
sti
jbe
rolb
into
mov
push
loope
dec
push
pop
out
or
sbb
lods
faddl
adcl
add
dec
add
les
pop
jbe
xchg
add
inc
or
add
sbb
dec
and
or
in
xchg
lods
push
push
movsl
add
adc
add
adc
xor
push
or
push
fwait
nop
cwtl
rolb
dec
pusha
addb
test
and
fisttps
adc
pop
sahf
sar
out
dec
add
sbb
mov
inc
xchg
cmp
je
aam
jl
inc
sbb
add
fs
sahf
sbb
add
inc
ds
shlb
and
jg
adc
imul
lods
and
cmp
inc
dec
pusha
imul
mov
sti
cs
dec
push
es
les
add
xchg
adc
dec
inc
lock
push
push
mov
push
dec
mov
es
or
iret
lock
jle
rorb
test
push
cmp
sarl
mov
mov
jb
adc
jb
sub
add
pusha
ljmp
cwtl
or
scas
inc
add
imulb
and
jo
xchg
or
xor
and
or
xor
add
popf
call
adc
bnd
imul
push
add
jmp
shrl
add
push
jmp
aas
clc
imul
sbbb
xor
aas
sarb
jne
call
sub
pop
or
mov
ja
sbb
je
fcoms
imull
cmp
dec
cmp
inc
add
jp
divb
bound
push
and
lods
mov
mov
sti
add
push
jecxz
jl
pusha
or
adc
inc
sub
sub
popa
push
xchg
or
jno
mov
xchg
stos
pop
sub
adc
inc
sarb
push
ret
clc
xor
leave
or
add
rcl
fcompl
adc
push
jb
pop
rclb
adc
rclb
adcb
out
inc
or
mov
cltd
inc
mov
push
inc
sbb
cs
or
sub
js
or
mov
es
sub
pop
mov
sub
or
cli
mov
loop
adc
or
xchg
xor
and
push
subb
dec
and
jo
cmp
inc
fs
rorl
and
lret
insb
test
in
movsl
inc
inc
xor
adc
or
adc
add
movsb
scas
inc
cmp
or
bound
pop
mov
sub
mov
mov
push
inc
mov
xor
filds
rclb
sbb
cs
test
and
popa
or
jo
push
mov
cmp
push
adc
inc
sar
ret
cmpb
push
dec
cwtl
enter
push
inc
or
test
ret
cmp
mov
xchg
je
adc
mov
mov
xor
test
adcb
jg
mov
push
mov
fs
add
pushf
adc
inc
and
dec
out
ljmp
xchg
call
movsl
dec
lods
add
xchg
jo
adcb
jbe
pop
pop
pusha
xor
push
push
add
orb
fadds
test
jo
mov
add
stos
push
adc
popa
pop
leave
or
mov
add
adc
and
xor
xor
push
sbbb
loop
xchg
rclb
adc
mov
sub
add
inc
pop
mov
test
inc
push
sub
or
dec
mov
enter
xchg
jmp
mov
test
push
mov
inc
dec
add
sbb
add
lret
add
adc
das
add
push
test
pop
mov
movsb
sub
and
ret
or
mov
cs
mov
in
push
mov
adc
mov
sbb
pop
or
pushf
adc
lods
fs
sbb
or
nop
xchg
xorl
sbb
js
push
lock
or
test
enter
add
xor
mov
cmp
stos
hlt
outsb
inc
dec
out
test
or
or
stos
es
inc
sub
mov
enter
loop
adcb
fs
fmul
mov
test
rolb
aam
ljmp
outsb
or
jo
test
inc
inc
imul
push
dec
sub
clc
mov
cmp
sbb
add
pop
or
sbb
cmp
xchg
shlb
and
inc
arpl
and
xchg
das
inc
mov
mov
inc
dec
or
jmp
nop
dec
popa
cmp
les
adc
push
dec
pop
fs
test
or
sbbb
xchg
daa
push
xor
jbe
lds
jbe
jbe
add
inc
fdivrl
aam
cmpsb
push
pusha
or
ds
insb
orb
push
inc
mov
rclb
insb
call
mov
and
xchg
andl
xchg
push
mov
mov
test
and
xchg
adcl
cli
sub
xchg
pop
add
fsub
cwtl
add
loope
pop
xchg
cmp
js
mov
test
sbb
xchg
fs
fdivrs
sahf
inc
and
loop
nop
rolb
or
hlt
inc
cmp
mov
andb
imul
enter
dec
sbb
mov
xor
add
pop
sbbb
mov
dec
sbb
sbb
push
hlt
cld
addb
in
es
ljmp
cmpsb
mov
sub
inc
in
dec
ss
mov
inc
jmp
sbb
arpl
cli
lret
xor
xchg
jbe
sub
mov
add
xchg
add
lcall
sub
adc
or
sub
rorb
inc
xchg
inc
add
aam
pop
test
sbbl
stos
enter
cmp
push
xchg
lret
xchg
xchg
sbb
push
inc
adcl
jbe
sbb
out
mov
and
or
dec
cs
sahf
push
dec
test
je
lcall
rclb
add
inc
loope
adc
dec
jb
push
jp
xchg
cltd
rolb
xor
lcall
call
iret
pusha
push
ja
in
cld
shlb
adc
sahf
data16
sub
and
or
add
mov
or
mov
mov
xchg
mov
loop
fs
push
cmp
loope
xor
imul
ret
and
call
hlt
cmp
xchg
and
sub
ss
adc
add
and
xchg
sbb
or
adc
add
add
cwtl
pushf
nop
sbb
dec
sbb
xchg
or
push
insb
es
inc
lcall
jl
add
inc
mov
loopne
mov
ret
pusha
xchg
mov
shr
mov
dec
aam
pop
add
mov
je
jp
inc
test
and
or
xchg
int3
push
aam
add
enter
sub
mov
dec
addb
inc
xorl
or
cmpsb
mov
pop
les
pop
dec
and
mov
data16
pushf
push
fcmovb
addb
rclb
fdivrs
mov
and
pop
lock
adc
movsb
and
nop
lock
nop
jle
and
jo
data16
imul
jle
inc
pusha
test
adc
inc
add
dec
popa
inc
ret
fs
inc
adc
xor
inc
or
cmpsl
mov
je
inc
lret
or
sbb
leave
xchg
xor
adc
movsb
jb
jbe
sti
lock
adc
ret
sub
test
rclb
in
in
pop
jbe
add
or
testb
pop
push
jb
adc
sbb
cmp
sbb
pop
sbb
add
fsubr
loop
mov
test
sqrtps
cmp
push
mov
xor
lods
aam
pop
xchg
ret
test
push
cmp
dec
push
test
push
lea
lods
sub
hlt
dec
pop
sbb
insb
xchg
insl
sub
cmpsb
pushf
stos
bound
add
or
xor
or
pusha
int3
and
lods
xchg
movsb
push
push
aaa
xchg
sbb
ror
lret
add
cwtl
js
add
cmpb
popa
adc
xor
or
dec
adc
or
in
sbb
movsb
movsl
adc
cmc
movsb
ficompl
sbb
cmp
pushf
rorl
lret
ret
sarb
lret
cmp
push
add
push
leave
and
pushf
dec
sbb
pusha
sub
cli
in
add
push
dec
add
sub
call
push
orl
popa
das
test
xor
and
sub
sahf
or
push
xor
and
ds
mov
orb
clc
ja
push
jecxz
sub
addl
adc
pop
adc
inc
repnz
adc
rorl
dec
adc
cmp
sub
add
mov
adc
jecxz
sub
loope
out
scas
adc
xor
cmp
xor
inc
add
dec
inc
cmpsl
cmpsb
dec
cmp
xor
xchg
in
ret
pushf
add
pusha
mov
inc
test
sbb
les
xchg
add
push
adcb
aam
jp
sub
xchg
jmp
push
pop
jo
test
fs
push
push
sbb
jp
sub
pop
xor
mov
add
push
xchg
gs
orb
mov
jo
xchg
mov
cmpsb
pop
pop
inc
pop
jbe
push
xor
cmp
shlb
or
inc
push
or
pop
mov
push
add
push
loopne
adc
mov
xchg
inc
daa
push
push
mov
adc
sub
gs
fdivs
inc
and
push
fld
enter
pop
pop
dec
adc
push
loopne
mov
pop
mov
lret
sub
dec
out
mov
inc
push
in
pop
add
xor
xchg
adc
cs
or
out
fadd
ret
test
arpl
aam
inc
pop
out
mov
outsb
insb
sbb
aam
mov
xchg
add
les
cmpsb
or
inc
loopne
push
pop
stos
addr16
cmpsb
push
hlt
push
xchg
or
fcomp
mov
lea
push
sub
or
nop
pusha
adcb
int3
lcall
mov
orl
nop
adc
rorb
dec
jg
and
ljmp
test
js
mov
xor
sbb
or
push
and
push
dec
es
mov
cwtl
lea
les
xchg
dec
sub
and
or
push
nop
arpl
es
add
cmpsb
daa
add
mov
daa
and
out
loop
dec
outsb
mov
mov
add
in
push
int3
popa
mov
dec
test
dec
jo
dec
rcl
mov
andb
inc
or
or
and
js
adc
push
repnz
xchg
nop
adc
lret
or
add
iret
or
add
pop
add
push
cs
mov
add
sbb
je
and
lcall
pop
sub
bound
pusha
outsb
jmp
mov
shll
stos
and
push
ljmp
fdivr
cs
add
es
clc
pusha
add
loopne
xchg
mov
les
xchg
inc
fs
push
ret
pop
loopne
lock
movsb
dec
fcoml
xor
lret
sub
dec
xor
call
lods
lock
loopne
sub
jo
push
sahf
jle
nop
push
lret
mov
or
xchg
cmp
mov
inc
cld
pushf
pop
xchg
leave
js
cli
stos
xchg
orl
dec
push
pop
pop
mov
cmp
enter
sub
aam
mov
popf
or
sub
sti
jbe
jb
repnz
sbb
cmp
mov
or
orb
and
dec
pop
or
call
cmp
fcoml
sbbb
mov
inc
inc
stos
or
add
or
in
adcb
adc
sahf
mov
int3
pop
add
or
enter
push
push
sarb
xor
jp
add
sub
mov
add
cmp
and
ds
rorb
int3
pop
movsb
outsb
and
sub
mov
adc
pop
adc
sbb
pop
test
push
je
test
cmp
xchg
fildll
sbb
adc
or
or
movsb
pop
rorb
loope
mov
sub
rcrb
gs
int3
dec
mov
sahf
adc
sahf
push
adc
sub
fs
sbb
lea
cs
xor
movsb
orb
loop
imul
push
ss
imul
cld
xor
sub
xchg
orb
pop
fs
fcoml
xchg
pop
test
push
jle
xchg
push
dec
mov
or
loopne
pop
js
sbb
les
loop
fmull
pushf
pop
add
ret
and
add
mov
or
xchg
and
gs
add
xchg
xchg
bound
adc
fcmove
mov
and
enter
or
pushf
or
fwait
push
and
adc
push
or
movsb
sbbb
movsb
adc
sub
fs
push
mov
jb
adc
cs
mov
dec
push
or
decb
pop
pop
and
cwtl
sub
sbb
and
jb
jno
pop
xchg
mov
sar
ljmp
or
pop
jp
fnstenv
mov
and
mov
dec
jmp
mov
fistps
xor
ds
or
sbbb
jo
outsb
dec
lock
adc
stos
sbb
fsubrl
in
push
in
imul
pop
push
add
and
pop
sub
sbb
repnz
sbb
mov
sbb
xchg
xchg
cltd
hlt
push
mov
ret
and
movsb
les
and
je
adc
pop
adc
lcall
sbb
int3
in
mov
pop
jp
andb
mov
or
in
aad
add
dec
mov
rorb
adc
cli
mov
sbb
js
add
xchg
bound
fiadds
push
add
or
call
test
loope
dec
js
sub
xor
mov
into
pop
loopne
aaa
or
and
push
stos
pop
test
xchg
inc
xor
inc
cld
ret
adc
sbb
pushf
adc
add
mov
in
pushf
add
push
ret
push
push
cmp
and
add
pop
push
pusha
test
push
nop
loopne
inc
sub
nop
sbb
ret
jo
dec
gs
mov
and
push
fcomp
cmp
sub
adc
movsl
jp
jbe
inc
dec
or
xor
insb
inc
mov
insb
dec
dec
mov
popa
xchg
lret
push
addb
xor
pop
push
mov
test
dec
push
pushf
push
push
fcoms
xor
sbb
addr16
xlat
xchg
pop
inc
insb
imul
movsb
xchg
cltd
sub
les
xchg
in
mov
lods
inc
movsb
std
xor
inc
test
ss
sub
negb
in
and
stos
sub
gs
dec
jb
cs
int3
nop
out
sub
bound
add
mov
pop
out
add
mov
loope
mov
or
popa
dec
sbb
addb
fisubs
xchg
add
jl
inc
ss
jbe
lods
pop
or
and
sbb
push
xchg
adc
fisubrs
add
in
push
mov
in
push
hlt
cs
loope
xchg
cmpb
xchg
mov
dec
or
bound
jle
jo
add
sbb
mov
push
add
and
and
orb
adc
ret
rclb
and
xchg
bound
lods
push
rorb
adc
sahf
lcall
cmp
js
data16
xchg
loop
mov
js
rorb
xchg
add
repnz
sbb
xchg
xchg
xchg
mov
scas
push
stos
jo
cmp
fstps
cwtl
adc
pop
push
adc
or
xor
mov
loop
or
and
sub
int3
jbe
and
sub
or
xor
push
aam
and
add
mov
cmp
pop
add
push
dec
divb
push
xchg
inc
inc
sub
popa
popf
jb
sahf
adc
add
jo
cmp
test
pusha
shll
jg
push
mov
pop
adc
loope
or
call
daa
push
push
inc
and
into
dec
pusha
mov
ds
jp
test
outsl
jmp
dec
ss
outsb
push
cwtl
call
push
mov
mov
hlt
dec
je
inc
and
inc
add
out
roll
leave
jo
popa
add
mov
rcl
inc
push
mov
sbb
mov
xchg
add
decb
outsb
mov
in
xchg
nop
or
mov
xchg
enter
mov
fs
adcb
lret
ret
jno
insb
std
fsubl
loop
leave
scas
push
dec
jno
dec
add
sub
jbe
xor
inc
fimuls
enter
xchg
adc
push
clc
add
loopne
add
jo
push
add
pop
add
push
je
sub
cmpsb
adc
xor
or
push
push
push
lret
dec
subb
and
mov
push
inc
es
rorb
sbb
or
adc
add
cltd
jb
push
cli
insb
mov
inc
dec
inc
inc
pop
and
nop
sbb
fsubs
in
mov
cmpl
sub
jl
inc
fs
mov
ficomps
dec
jno
jbe
loop
push
sub
inc
mov
or
repnz
mov
pusha
adc
inc
or
cmp
sub
test
jmp
or
and
sbbb
or
push
xchg
lret
and
push
mulb
ret
and
fs
xor
nop
loopne
mov
jle
push
shlb
mov
adc
es
mov
dec
push
inc
pop
xchg
inc
les
pusha
adc
sti
sub
sub
hlt
push
inc
push
popf
dec
mov
or
xchg
shlb
add
fistps
adc
ds
test
mov
lret
or
movsb
and
mov
add
mov
sub
leave
jbe
adc
pop
mov
xchg
jl
sub
inc
lods
or
push
insb
mov
mov
add
xor
aam
add
dec
add
pop
lock
and
in
mov
cmpsb
data16
das
push
dec
xchg
aam
stos
fidivl
dec
inc
hlt
push
pop
jb
dec
mov
pop
or
inc
cmp
sub
and
ss
pushfw
rorb
mov
ficoml
push
pop
inc
cltd
jl
data16
add
adc
push
add
dec
sbb
nop
enter
add
loopne
and
push
popa
mov
xor
arpl
and
sbb
es
test
cmp
and
sub
push
mov
mov
dec
inc
sbb
sub
inc
or
add
out
add
xchg
cmp
add
push
outsb
jmp
add
adc
leave
mov
fsub
and
ret
add
mov
jp
add
inc
fs
filds
add
fs
push
mov
inc
test
testb
test
adc
or
or
pushf
insl
test
xchg
mov
gs
rol
pushl
loop
mov
test
mov
or
adc
dec
mov
adc
js
mov
pop
or
mov
shl
inc
inc
cmpsl
nop
shlb
or
hlt
clc
sbb
leave
and
pushf
sbb
inc
inc
nop
xor
adc
cmp
inc
lret
sub
leave
dec
or
lea
sub
stos
jne
add
mov
jo
jg
cmpb
add
or
ret
stos
mov
in
pop
test
adc
xchg
sub
xchg
or
push
inc
ss
test
xchg
push
jo
xor
or
movsl
orb
js
dec
cmp
dec
sub
nop
flds
mov
jecxz
add
or
pop
inc
push
nop
ret
lret
fs
cltd
sub
dec
lods
insl
pushf
inc
cmp
aam
cmp
js
push
stos
fistl
xor
adc
roll
lods
add
bound
or
orl
mov
in
or
ds
jb
jne
pushf
je
test
push
xchg
rolb
int3
pop
sub
into
ret
stos
and
faddl
sub
xchg
xchg
xchg
xchg
lcall
and
call
mov
jbe
nop
xchg
mov
jp
aam
fldl
addb
mov
jne
sbb
fmulp
xor
cs
xor
xor
inc
mov
and
mov
cmp
xchg
jb
adc
lods
jl
add
stos
fidivs
js
or
ret
or
stos
cltd
adcl
jl
cmp
movsl
jp
push
push
xor
add
hlt
sahf
add
or
pop
mov
or
sub
push
sahf
adc
add
sarb
ret
cltd
mov
pop
mov
sbb
sbb
and
ljmp
in
xor
ret
sub
xor
add
clc
enter
mov
add
jne
in
lods
dec
and
in
dec
adc
imul
inc
rorl
js
pop
inc
mov
adc
jbe
and
push
imul
jb
add
data16
add
dec
lds
rolb
xchg
into
out
pop
or
inc
insb
mov
push
ret
test
mov
dec
jb
dec
or
lea
and
inc
push
loop
cmp
lea
daa
incl
cli
inc
pop
popa
dec
faddl
test
adc
loopne
or
add
test
pop
ljmp
dec
mov
xchg
addl
xchg
icebp
jg
je
adc
out
aas
out
adc
sub
nop
xor
roll
xor
into
and
aaa
mulb
inc
mov
test
sahf
xchg
inc
sub
and
bound
pushf
adc
mov
test
pop
test
int3
loopne
cmpsb
dec
lret
es
nop
adc
push
test
ds
bound
or
xchg
cmp
mov
pop
in
sarb
adc
cmc
lret
push
and
add
add
test
xchg
or
push
sub
nop
loope
push
sub
aad
inc
and
insl
insl
jmp
or
jg
dec
inc
je
in
jle
call
shlb
call
mov
lock
inc
sbb
int3
test
popa
or
repnz
or
cltd
call
push
scas
enter
ret
cltd
nop
dec
insl
mov
mov
pusha
adcb
add
xor
mov
pop
or
and
call
ret
fiadds
dec
and
outsb
mov
sub
cmpsl
pusha
cwtl
sub
cmpb
imul
sbb
cli
pop
out
xor
rclb
pop
add
popfw
mov
mov
and
testb
cmpsb
xor
and
dec
push
adc
test
aaa
fs
fcomps
jb
push
loopne
push
nop
adc
sub
js
dec
adcl
rclb
or
pop
and
inc
adc
inc
add
jle
push
data16
pop
dec
mov
scas
xor
inc
xchg
sahf
cli
sbb
push
sbb
aam
mov
sbb
ret
cwtl
mov
push
pop
js
push
dec
sub
push
xchg
push
mov
and
add
mov
sub
xor
mov
rorb
mov
add
xchg
dec
dec
push
jp
pop
xchg
push
inc
rorb
inc
sub
nop
mov
dec
pop
mov
xchg
xchg
es
and
daa
rolb
cmpsb
les
xchg
inc
les
scas
outsb
sbb
fisubrl
adc
lcall
mov
pop
cltd
xor
inc
or
out
lret
mov
lods
nop
push
cwtl
leave
adc
scas
loop
add
ret
dec
in
and
rolb
xchg
icebp
pop
leave
or
popa
xchg
not
repnz
or
push
xor
mov
mov
push
dec
movsb
pop
add
sub
sbb
roll
sbb
inc
add
dec
add
mov
mov
or
and
loopne
mov
or
movb
adc
les
adc
mov
inc
aam
dec
lods
dec
push
xchg
sbb
mov
test
xor
sbb
aam
or
loopne
cmpsl
int3
lcall
add
test
outsb
or
lcall
rclb
into
imul
xchg
or
mov
push
mov
or
sub
pop
pop
xchg
ret
cld
in
pop
xchg
add
fiaddl
clc
ror
add
mov
xor
sti
sbb
pop
mov
sub
push
push
test
sub
add
outsb
dec
inc
sub
faddp
sub
inc
push
mov
xor
mov
leave
add
sbb
sub
or
add
dec
xchg
inc
add
dec
cwtl
or
pop
or
mov
stos
jbe
sbb
repnz
dec
and
je
mov
xchg
mov
mov
add
pop
stos
ret
adc
push
adc
mov
jle
adc
pop
iret
add
aam
or
xchg
adcb
xchg
jg
ljmp
or
inc
call
jo
add
mov
add
test
mov
or
and
mov
xor
adc
enter
sub
fisttpll
mov
xor
mov
xor
nop
add
movsb
and
and
push
xor
mov
inc
adc
lcall
sub
xchg
nop
std
loope
add
push
sub
add
sbb
push
adc
mov
decl
jecxz
inc
push
mov
std
adc
sarl
adc
dec
add
dec
sub
adc
push
add
or
lods
pop
push
fs
sbb
mov
push
pop
test
or
xchg
pop
and
les
rolb
or
test
aas
mov
push
pop
bound
xor
and
sub
inc
cltd
jo
ljmp
xchg
test
adc
xchg
enter
adc
push
push
sahf
test
push
data16
jecxz
mov
add
fiaddl
add
inc
xor
sbb
inc
shlb
dec
adc
movsb
nop
andb
adc
shlb
sub
dec
sub
add
or
dec
add
add
sub
xor
sub
stos
add
insb
test
cmp
xor
mov
sahf
dec
add
sub
mov
test
push
es
and
test
ljmp
adc
sbb
lret
and
mov
add
jle
jno
movsl
jo
xchg
push
xchg
add
mov
adcb
loope
xchg
xor
push
inc
repnz
cmp
in
sahf
xor
test
sbb
or
sub
bound
filds
xor
outsl
add
jbe
xor
or
adc
imul
mov
addl
les
mov
dec
or
jne
int3
lods
hlt
push
ret
xor
push
push
mov
inc
push
mov
shrb
cmpsb
xchg
push
les
push
mov
fstps
sahf
xor
jle
inc
outsl
inc
stos
xor
fs
in
inc
jmp
fsts
add
iret
cli
mov
stos
bound
sub
push
mov
jl
or
lds
sbb
sub
cwtl
push
shrb
inc
pushw
je
xchg
or
xchg
testb
or
jo
fadd
sub
and
jo
popa
add
sub
xor
and
jp
fs
and
and
push
inc
jo
sub
outsb
cwtl
pushf
add
pusha
or
sbb
pop
xor
xchg
xor
and
adc
cs
in
mov
and
push
pop
bound
test
dec
jp
or
adc
inc
cmp
add
rclb
scas
xchg
mov
add
push
pop
unpcklps
sarb
dec
push
lods
inc
or
push
out
aam
ret
xchg
loopne
loop
push
and
iret
and
rcrb
lods
test
mov
orl
pushf
into
adc
adc
push
cwtl
jl
ret
sub
and
ds
adc
push
or
or
dec
icebp
mov
in
jbe
sub
or
test
test
ret
add
fisubrs
sti
adc
loope
xor
mov
sarb
xchg
int3
ret
test
xchg
call
pusha
add
push
fdivrs
cmp
ret
and
das
xchg
out
adc
lcall
cli
inc
aam
add
and
adc
add
movsb
sahf
dec
sub
adc
jb
mov
mov
stos
mov
mov
pop
ficoms
sbbb
dec
cs
or
sub
and
mov
into
or
sub
lret
sbb
clc
mov
mov
stos
push
dec
dec
pop
inc
dec
sbb
push
add
shrb
in
mov
sub
mov
mov
inc
movsl
push
lods
jl
mov
mov
and
inc
pop
hlt
sbb
insb
xor
adc
jp
mov
cwtl
add
xchg
test
pop
call
add
rcrb
nop
xor
sub
iret
inc
nop
fwait
sbb
mov
pusha
push
jle
cmp
mov
mov
mov
mov
add
test
rcrb
inc
bound
cld
or
or
jne
nop
sub
sbb
pushf
cmpsb
adcb
test
shlb
or
jg
push
clc
jg
mov
add
rep
push
mov
sbb
andl
add
xchg
je
lods
cs
rol
jbe
rorb
js
mov
addb
test
ret
jl
inc
adc
stos
ficomps
mov
ljmp
mov
mov
xchg
enter
push
popa
jo
in
loope
cmp
test
ret
out
mov
sbb
push
dec
push
mov
sub
add
data16
sbb
orb
push
jo
or
mov
add
and
pop
dec
test
sbb
test
sbb
xchg
test
dec
fs
and
or
add
xor
dec
adc
loopne
pop
xor
dec
scas
scas
movsl
sub
xor
sbb
pop
std
dec
mov
xchg
mov
test
sbb
pop
jo
cmp
loope
adc
int3
stos
and
outsb
mov
inc
fs
mov
dec
bound
movsl
xchg
enter
jo
sahf
add
xchg
or
mov
or
and
movsl
sbb
bound
push
push
push
push
je
sbb
test
sub
mov
rclb
test
inc
mov
or
js
sbb
add
jo
rol
xlat
mov
xor
add
lcall
pushf
sub
or
icebp
pushf
jo
fs
and
les
add
mov
and
and
andb
xchg
adc
sbb
in
xchg
push
ror
hlt
and
and
push
cmpb
jns
push
adc
andb
add
push
testb
inc
push
mov
sahf
sub
inc
lock
dec
sbb
push
and
mov
shrb
add
je
cld
sbb
and
int3
in
add
sub
adc
repnz
ss
sbb
fidivrl
ljmp
mov
xor
xchg
sbb
push
rolb
nop
sbb
add
and
shrl
adc
mov
test
dec
shlb
inc
fcoml
xchg
sub
add
push
rorb
mov
inc
xor
sub
xchg
dec
or
sti
insb
ret
ljmp
cmp
pop
movsb
lods
xchg
lret
and
ret
xchg
adc
nop
loope
push
mov
xor
inc
xor
cmp
insb
or
ds
movsl
add
pop
or
fs
push
xorb
add
rcrb
insb
mov
mov
adc
lds
push
ret
test
leave
dec
shll
enter
sub
dec
pop
push
nop
ret
insb
inc
lret
adc
mov
push
mov
or
sbb
xchg
inc
inc
push
or
jbe
xchg
or
adc
je
push
loopne
sbb
pop
adc
or
orl
mov
mov
rcll
lods
adc
test
or
sub
sub
out
lods
add
or
bound
or
lds
jo
sbb
mov
adc
or
sbb
pop
xor
sub
and
test
std
mov
mov
test
rolb
pusha
mov
and
cwtl
sub
rolb
call
subb
in
ret
sub
dec
dec
push
inc
mov
lods
push
mov
ljmp
lret
rorb
loopne
int3
xchg
cmpsb
pop
adc
xor
fs
andl
or
sbb
in
or
pusha
pop
pop
int
push
pop
pop
mov
add
jp
xor
xchg
or
lret
xchg
ljmp
inc
pop
adc
test
js
push
sahf
dec
je
cmpsl
lods
xor
cmpsb
pop
enter
fdivl
add
mov
sub
push
add
xor
cs
popa
nop
sahf
je
xchg
add
hlt
scas
dec
cmpb
push
xor
lret
jmp
pop
or
addr16
inc
adc
dec
test
roll
aam
fbld
mov
mov
add
adc
pusha
sub
sahf
addr16
fidivrl
in
fdivrl
loope
daa
enter
mov
push
add
in
or
push
pusha
push
int3
test
cmp
mov
xor
xor
or
sub
adc
movb
shlb
dec
dec
adc
and
inc
adc
sub
mov
cmpsl
sub
and
jle
pusha
pusha
dec
mov
adc
cmp
rolb
lds
xorb
rorl
inc
adc
rcr
xchg
jg
das
dec
push
or
xor
cld
or
mov
and
sub
pushw
enter
cmp
pop
cwtl
sbb
mov
mov
cmpsb
lods
ret
test
adc
add
xor
lock
jb
push
pop
cmp
mov
popf
sbb
adc
push
fsubrl
pop
push
cltd
and
cs
ss
adc
mov
addb
fisubrs
mov
fisttpl
clc
adc
sub
or
lock
sahf
cmp
and
call
and
orb
dec
lods
push
fs
leave
adc
ret
loope
inc
adc
push
mov
test
push
xor
inc
pop
add
xorb
ds
jb
test
pop
push
pushf
rol
sbb
xorb
mov
jb
or
inc
nop
enter
sub
sbb
int3
xor
and
pusha
and
orl
cmp
fstpt
incb
dec
adc
sub
cmc
xor
fs
rclb
pusha
sahf
add
cmc
xor
add
sbb
cmp
or
movsb
and
sub
ror
movsb
mov
xor
jo
xchg
js
ret
js
enter
jo
lcall
add
bound
push
movb
pop
mov
add
lret
es
pop
mov
aam
mov
pop
push
mov
loopne
xor
xor
mov
jl
lock
and
fiaddl
and
mov
add
push
sbb
mov
in
inc
and
fcomps
mov
add
cmpsb
lods
pusha
sbb
filds
pop
adc
or
xchg
or
or
dec
dec
in
mov
mul
sbb
bound
xchg
sbbb
cmp
jle
xor
mov
test
mov
out
mov
push
test
xchg
adc
dec
sbb
loop
rolb
ss
movb
xchg
xchg
push
call
and
test
inc
and
xchg
inc
and
adc
sahf
push
int3
mov
outsb
xor
xor
ljmp
and
popf
inc
cltd
lea
popl
out
or
stos
mov
cld
pushf
and
dec
sbb
add
xchg
rclb
pushf
or
push
inc
add
incb
mov
dec
xor
push
cwtl
faddl
sub
add
inc
lock
orl
add
adc
add
mov
jl
fwait
xchg
push
add
sbbb
mov
lret
scas
push
xchg
or
shl
adc
loop
insb
jp
in
sub
push
fidivrs
fimull
lds
cmpsb
dec
lock
push
add
imul
push
dec
xchg
push
popf
test
movsb
cmp
push
mov
rolb
movsb
and
or
inc
mov
or
rorb
mov
out
push
subl
and
in
xchg
cmpsb
sub
push
mov
cmp
cld
mov
xor
jle
ljmp
test
or
cs
dec
cwtl
push
call
adc
push
mov
inc
dec
jbe
inc
inc
test
xor
enter
sub
mov
sahf
jb
xchg
jo
loopne
pusha
popa
es
sub
cli
push
add
adc
call
ret
mov
shll
add
push
pop
test
lock
cltd
rcl
enter
cltd
mov
adc
add
mov
lea
xor
xchg
fidivl
push
es
and
xor
add
jb
push
pop
pop
mov
mov
ret
lods
jae
inc
inc
or
jo
fmull
adc
adc
add
data16
pusha
mov
mov
cmp
mov
or
imulb
popa
mov
xor
call
or
pop
mov
or
jmp
out
add
rorb
dec
es
push
ljmp
test
adc
rolb
push
mov
cltd
ret
xchg
sti
mov
lds
add
or
lcall
jbe
mov
bound
pop
xchg
lret
mov
push
jle
fcoml
push
addb
sarb
push
inc
imul
mov
fs
lock
adc
or
imul
xchg
xchg
xor
lock
orl
dec
inc
lret
insl
pusha
pop
fmul
and
adc
xchg
or
outsb
push
ss
push
mov
and
mov
ds
adc
adc
aam
xor
or
mov
and
jl
es
mov
xchg
popa
add
pop
pusha
sbb
sbb
rolb
lret
outsb
sub
or
mov
sub
dec
push
outsb
outsb
push
add
adc
shlb
xor
add
sub
stos
jbe
sub
xor
cli
pop
dec
pop
xchg
ret
pop
jl
push
xchg
test
in
sbb
xor
add
fsubp
sbb
dec
enter
movsb
xchg
mov
dec
inc
adc
mov
mov
hlt
add
bound
mov
ret
fmul
pop
push
les
sub
je
xor
pop
dec
inc
or
movsl
aam
adc
xchg
add
pop
xor
ss
cmpsb
cmp
adc
or
dec
sub
dec
or
mov
cs
pop
pop
fs
fsubs
shlb
imul
rorb
or
sar
sti
js
loope
or
dec
clc
les
rclb
mov
jns
dec
or
push
lret
pop
or
outsb
xchg
inc
int
inc
cwtl
loopne
xor
pop
testb
leave
and
jle
or
cmp
data16
sahf
jp
popa
push
push
jg
in
sahf
adc
add
sub
push
les
ljmp
inc
addb
cmp
mov
pop
push
mov
notb
xor
jbe
xor
call
xchg
sbb
aam
dec
roll
jbe
jg
loopne
or
mov
pop
daa
fidivrl
dec
add
dec
out
dec
sbb
cmpsb
fs
or
cmp
nop
add
pusha
adc
sub
pop
mov
push
xor
dec
sbb
roll
mov
xchg
aam
fdivr
adc
jp
push
je
adc
inc
push
or
adc
inc
pop
push
andl
test
data16
push
test
push
xor
aam
xor
pop
push
in
jae
pusha
fsubl
sbb
sahf
data16
mov
pop
adc
sub
loopne
adc
or
push
adc
cs
test
dec
sub
pop
pop
enter
inc
fmuls
jb
enter
sbb
inc
adc
test
orb
mov
pop
in
dec
xor
pushfw
inc
mov
push
adc
xchg
dec
or
jp
test
xor
inc
push
or
xor
rcrb
dec
push
xchg
and
jp
add
pop
loope,pt
shrb
les
insb
dec
add
sbb
shrb
add
xor
push
mov
and
loop
mov
in
fs
adc
pusha
and
mov
lods
loop
pop
add
test
sbb
rcrb
xor
mov
mov
xchg
push
data16
and
dec
sub
inc
add
sub
mov
xor
add
dec
lock
xchg
pop
gs
lods
push
push
xchg
cli
ss
add
add
lret
pushf
sbbb
andb
add
fistpll
cmp
adc
mov
and
iret
cwtl
and
insb
adc
out
adc
inc
xchg
data16
xor
push
rclb
push
add
adc
sbb
inc
pop
add
and
add
and
xchg
push
in
adc
jmp
cld
scas
sub
mov
dec
xor
xchg
dec
call
adc
adc
sbb
mov
add
pop
cmpsb
xor
and
test
hlt
mov
push
sub
es
push
iret
xchg
lock
lds
sbb
into
fcmovu
mov
mov
add
mov
mov
adc
xchg
push
xor
lcall
bound
rcll
sub
into
sti
sbb
int3
jb
sub
and
sbb
dec
pop
inc
or
and
shld
mov
hlt
mov
lds
inc
sub
push
xchg
add
in
inc
lds
lret
in
pop
repnz
dec
mov
jle
mov
push
or
xorb
orb
mov
gs
jmp
sub
sub
add
xor
lcall
or
test
sbb
xchg
xchg
dec
push
push
hlt
cld
add
fs
stos
push
add
ss
loopne
ficoms
add
inc
mov
sahf
mov
jp
dec
call
pop
or
sub
pusha
or
sbb
push
and
or
mov
nop
xchg
cld
int3
mov
dec
test
fisubs
push
mov
adc
add
or
and
ss
inc
push
dec
add
mov
ret
pop
sbb
mov
call
data16
std
adc
hlt
or
inc
adc
in
inc
inc
mov
sub
adc
repnz
cwtl
mov
pusha
or
mov
mov
mov
aam
or
xor
call
xchg
adc
and
idiv
and
or
adc
insb
std
or
cs
push
inc
and
dec
mov
in
call
add
lds
sub
pop
xor
es
jbe
rorb
aam
mov
push
aam
mov
push
mov
pop
or
mov
mov
jg
dec
test
dec
movsb
sbb
dec
pop
push
and
stos
jle
lcall
or
shll
test
xchg
push
mov
inc
mov
les
xlat
insb
int3
into
xchg
add
dec
pop
ret
sub
add
and
fcoms
or
add
es
movsb
enter
test
pop
add
inc
dec
inc
pusha
data16
pusha
cmp
pusha
popl
mov
xor
dec
dec
lret
mov
jecxz
pushf
ds
adc
add
sub
jo
inc
arpl
xchg
xor
jp
nop
inc
js
sbb
adc
fmuls
add
aam
and
lcall
neg
dec
adc
add
push
adc
pop
cwtl
sub
and
xchg
or
rorb
adc
add
dec
js
jp
es
movsb
addl
dec
inc
sub
lret
push
add
shlb
loop
cli
adcl
add
scas
and
or
push
or
xchg
mov
fimuls
cwtl
adc
sbb
movb
xor
sub
push
xchg
dec
cmp
adc
jb
sbb
inc
jp
sub
fiadds
ret
rorb
cmp
dec
add
or
cmpsb
test
inc
mov
xor
add
pop
jle
cmp
cltd
movsb
jle
lret
add
xor
mov
or
sarb
or
push
cs
mov
int3
test
into
in
stos
dec
or
insb
mov
dec
test
xchg
sub
nop
or
mov
pop
cli
dec
jl
lcall
gs
sub
push
notb
push
push
push
and
cmp
pusha
mov
or
inc
pop
or
stos
xchg
push
push
xchg
pop
jl
adc
push
or
int3
gs
cli
mov
mov
adc
sub
lcall
xor
mov
dec
popa
dec
cltd
mov
repnz
shrl
cli
aaa
add
and
mov
push
add
push
cli
data16
repnz
scas
or
in
outsb
sbb
sbb
shlb
inc
loop
pop
lret
push
add
std
cwtl
popa
add
sbb
push
push
cmp
nop
xor
cmpsb
add
je
xor
rorl
rorb
mov
out
or
adc
push
je
or
sbb
outsb
push
add
sbb
aam
adc
cmp
pop
add
pop
dec
cwtl
adc
sbb
lea
test
mov
jle
xor
add
movsb
push
in
dec
stos
arpl
jno
and
in
xchg
xorb
pushf
push
data16
out
dec
sub
not
and
and
mov
pop
mov
sbb
sbb
gs
pop
test
cmp
les
adc
shll
dec
add
adcl
pop
fmuls
xor
or
inc
bound
orb
fidivl
faddl
jecxz
ret
inc
rorb
mov
adc
sbb
sbb
das
call
fs
cmp
push
xchg
ret
sub
or
sbb
pusha
iret
mov
out
and
and
mov
push
adc
sub
cmp
push
test
bound
add
xor
adc
add
leave
loopne
push
pop
sbb
adc
inc
in
xor
xchg
add
add
push
fwait
mov
add
mov
imul
xchg
data16
adc
push
adc
test
test
mulb
xchg
mov
rclb
daa
push
cmp
movsl
add
test
dec
xchg
pusha
jo
bound
jne
enter
inc
and
mov
xor
add
adc
mov
add
push
add
lcall
cwtl
mov
outsb
dec
and
cmpsb
mov
pop
jl
shlb
xor
adc
shrl
sbb
lods
and
push
lret
out
shlb
lods
popa
sub
test
and
push
imul
add
aam
jge
and
dec
ret
xor
sub
in
out
cwtl
dec
push
data16
sbb
xchg
or
js
cmpsb
push
xor
dec
mov
xor
adcb
pop
es
fiadds
insb
add
adc
add
call
imulb
add
adc
mov
adc
addr16
lcall
ss
or
mov
adc
dec
mov
lock
pop
lcall
add
push
sub
and
sub
rorb
and
xor
lock
pop
rcll
mov
pop
adc
push
adc
idivb
sbb
xchg
push
mov
push
and
ret
adc
add
test
sbb
ret
lock
nop
or
or
aam
push
or
xor
cmp
mov
and
mov
jp
repnz
popa
outsb
ljmp
or
xchg
push
mov
push
dec
sub
test
pop
add
es
addb
pushf
push
mov
pop
lcall
or
mov
adc
mov
movsb
adc
sbb
xchg
xor
or
mov
data16
adc
add
lret
inc
add
pop
or
dec
push
sbb
inc
xor
add
jbe
cmp
xor
dec
in
mov
enter
popa
mov
xchg
in
shrb
xor
add
push
mov
stos
xchg
dec
sub
lds
push
cmp
ret
int3
xchg
xor
aam
push
cmpb
addb
xor
jp
into
and
cwtl
add
test
sbb
push
dec
add
adc
or
jmp
dec
xor
rcrb
dec
sub
in
sub
or
je
add
int3
add
mov
and
and
dec
add
mov
in
add
clc
mov
adc
rcrl
loopne
xchg
sahf
les
pop
push
xchg
cvttps2pi
jae
inc
lea
xchg
jno
or
aas
repz
pmuludq
js
ljmp
xchg
test
and
or
push
cmp
sub
nop
mov
rol
loop
fstl
pushf
std
pop
pusha
dec
mov
rcl
jl
outsl
ficompl
add
pusha
jp
ss
xor
xor
xchg
pop
pop
xor
inc
in
cwtl
or
andb
push
jae
dec
mov
test
and
xchg
mov
test
mov
sub
mov
hlt
popa
and
sbb
orb
mov
in
or
pusha
add
test
lret
add
push
es
lret
jne
pop
lods
xchg
xchg
hlt
repnz
pusha
mov
and
xor
xorb
dec
lret
push
mov
xor
sub
je
test
insl
ret
or
mov
out
jle
cltd
sub
cmp
ret
mov
dec
or
mov
mov
xchg
mov
inc
sub
test
ret
dec
out
bound
mov
push
mov
fists
lret
or
rcrb
mov
cmp
cmp
mov
or
adc
sbb
mov
cld
add
test
loopne
ret
push
adc
push
add
push
ret
cltd
lcall
inc
push
aam
mov
lret
pop
mov
sbb
xor
nop
shlb
push
jg
cmpb
jbe
nop
inc
jl
and
sub
loop
xor
adcb
and
push
add
inc
or
push
mov
adc
add
add
mov
daa
or
push
cwtl
push
adc
jne
nop
xor
and
mov
jb
and
xor
or
jbe
data16
inc
sub
rcrb
pushf
xchg
pusha
cmp
rolb
pop
jecxz
rorb
testb
aad
dec
or
ds
mov
mov
into
mov
cmpsb
addb
inc
push
xchg
dec
cltd
call
pop
pop
xor
push
scas
ret
or
dec
sub
lock
jo
push
enter
gs
pushf
int3
push
mov
dec
push
push
ret
fs
outsb
in
orb
jl
iret
xchg
sahf
mov
pop
jbe
shrb
int
shrb
fisttps
adc
cwtl
addl
cmpb
dec
fs
in
stos
sbb
xchg
rclb
xchg
ret
mov
inc
cmp
adc
nop
and
or
mov
mov
cmp
pushf
add
pusha
sub
sbb
in
add
or
and
adc
add
cmp
add
dec
sbb
fadds
push
notb
dec
mov
clc
dec
or
lods
inc
stos
cs
dec
ds
daa
dec
inc
pop
mov
or
xor
dec
mov
adc
je
xchg
lret
add
nop
jle
ret
movsb
les
and
dec
je
pop
push
pop
aam
ljmp
filds
push
les
jmp
lcall
xchg
inc
pop
push
lods
jle
pop
push
test
xor
fdivrl
or
dec
fstl
sub
xor
adc
xchg
inc
adcl
inc
adc
cmp
push
jae
lock
push
lret
sbb
xor
jae
push
or
test
inc
sub
std
xchg
mov
and
xor
sahf
sub
hlt
gs
adc
scas
jo
or
xor
ret
push
pop
rcrb
mov
pusha
inc
test
push
ljmp
pop
pushf
and
shll
cmpl
pop
or
clc
call
mov
out
sub
movsl
add
dec
mov
xchg
mov
add
pop
cltd
pop
or
and
or
add
mov
leave
mov
sub
pop
adc
sub
add
add
add
sub
ret
adcb
shlb
mov
repnz
mov
push
mov
and
mov
pusha
sub
sbb
dec
and
sub
movsb
sahf
cmpps
jp
popa
mov
jne
sar
ss
leave
mov
scas
add
hlt
or
ljmp
test
xor
repz
sbb
xorb
loopne
inc
popa
xchg
pop
adcb
pop
push
mov
inc
xor
dec
cs
mov
push
add
or
add
inc
pusha
imul
int
push
and
pop
enter
dec
sub
adc
xchg
subb
dec
mov
xor
sahf
sbbl
add
jle
xchg
push
mov
xor
sbb
push
jae
xor
test
call
jmp
push
aaa
push
or
pop
sub
xchg
sub
or
ret
pop
inc
pop
push
mov
insl
mov
jo
mov
or
xchg
popf
jb
outsb
push
arpl
pop
adc
and
and
cmp
lods
add
cs
and
add
and
adc
out
and
and
into
jo
dec
push
popa
push
aam
movsb
inc
or
adc
push
dec
dec
pusha
adc
or
jle
stos
and
mov
shr
movsb
jbe
push
call
sub
nop
push
adc
lods
xor
dec
dec
mov
imul
mov
shrb
stos
aam
nop
push
mov
dec
enter
pop
push
dec
pop
sahf
mov
test
push
dec
orl
push
popa
pusha
loop
push
mov
dec
test
push
les
pop
mov
add
mov
je
addb
xchg
xchg
pop
je
inc
dec
pushf
adc
sbb
mov
movsl
xchg
adc
xor
cmpsb
adc
or
sbbb
pop
push
int3
add
xor
dec
and
cwtl
push
pop
mov
test
or
add
cs
jbe
cmp
push
notb
adc
push
push
enter
pusha
pop
and
push
roll
push
cmp
clc
lcall
mov
cmpsb
xor
sarb
popa
popl
mov
dec
cmp
add
and
mov
ss
sub
enter
sti
and
je
loop
adc
add
fisubrl
lea
movsl
add
and
dec
es
sub
push
or
pop
jbe,pt
xchg
inc
or
xchg
nop
or
mov
add
mov
cmpsb
xor
nop
mov
xchg
adc
and
dec
es
mov
xor
xor
cmp
sub
sbb
arpl
test
add
nop
rcrb
lret
xor
or
inc
inc
dec
push
or
push
hlt
and
add
insl
mov
xchg
mov
or
lret
add
mov
shrb
popa
add
inc
lods
pop
clc
cmp
test
add
push
push
xor
test
in
test
pop
pop
cs
les
xorb
mov
pop
inc
mov
mov
pop
jmp
sub
js
sub
stos
add
in
cmpsb
add
cwtl
pop
in
add
dec
clc
push
fisubl
cmp
cmp
dec
sbb
push
les
stos
add
push
std
adc
push
loopne
pop
and
mov
or
notb
xchg
mov
popa
bound
leave
jbe
dec
jo
dec
call
sbb
jp
and
add
push
mov
lret
mov
out
fistps
insl
and
xchg
and
or
cwtl
int3
jno
xchg
ret
loopne
int3
mov
cwtl
xchg
add
pop
mov
add
add
xchg
dec
js
and
jne
les
mov
add
and
and
mov
sbb
lods
or
push
mov
add
jl
pop
and
push
mov
push
enter
add
adc
leave
adc
into
xor
add
inc
add
inc
mov
test
pushw
xchg
dec
inc
xchg
movsb
or
dec
push
inc
cltd
pop
lcall
push
iret
loopne
sahf
mov
xchg
pushf
ret
dec
push
and
inc
lock
adc
out
lock
jl
xchg
in
sub
jp
adc
cwtl
adc
or
xor
lcall
lret
adcl
das
xchg
cmp
add
adc
test
push
daa
enter
inc
data16
notb
lods
or
dec
movsb
je
sbb
mov
pusha
and
data16
fiadds
push
xchg
push
jo
dec
cs
push
orb
dec
data16
dec
xchg
shr
lret
enter
into
sub
adc
mov
data16
aam
push
push
and
pop
adcb
sub
lods
push
nop
inc
movsb
and
lcall
jg
insb
xchg
dec
add
lcall
aam
or
add
loop
cld
in
push
cltd
dec
push
into
out
mov
cmp
push
mov
push
inc
or
push
and
in
fsub
rcr
jmp
hlt
fisttps
mov
adc
add
add
dec
std
pop
es
addl
fcmovb
stos
add
lds
data16
pusha
aam
push
out
xor
xor
cwtl
mov
inc
sub
jle
gs
es
mov
mov
sar
les
add
push
flds
pusha
es
mov
lret
ljmp
adc
into
or
push
add
stos
aam
sub
incb
sbb
sarl
mov
xor
adcb
enter
sub
int3
dec
dec
cli
fadds
add
cmpsb
cmp
push
xor
jb
add
add
addb
mov
pop
add
mov
adc
ss
mov
xor
mov
lods
adc
inc
ljmp
scas
mov
mov
pusha
and
xchg
rclb
fmul
adc
adc
div
in
rolb
push
daa
jmp
sbb
cmp
add
dec
test
dec
jecxz
nop
jl
mov
pop
test
pop
into
push
lret
repnz
notb
mov
dec
inc
cmp
jl
mov
test
enter
xor
cmp
dec
mov
and
mov
and
xor
or
cltd
inc
push
xor
mov
movsl
nop
shll
sub
inc
xor
mov
dec
cwtl
cmp
and
pop
mov
or
je
outsb
or
lret
enter
and
lretw
cli
push
mov
data16
inc
mov
hlt
mov
shrb
inc
mov
mov
push
add
addl
pop
sub
sub
mov
adc
or
test
add
arpl
shrl
jb
lods
xor
mov
cmp
add
cmp
test
cmp
dec
or
inc
fimuls
into
in
dec
dec
mov
jb
mov
ret
ret
jbe
int3
nop
push
cmp
js
add
add
sub
mov
inc
inc
or
out
xor
or
xchg
jbe
out
sbb
inc
sub
xor
add
mov
push
xchg
push
ds
lock
sbb
ds
lret
ret
and
add
daa
push
or
lcall
sbbb
dec
or
dec
mov
adc
lock
and
jg
addb
or
sub
inc
pop
sbb
xchg
sub
mov
test
addr16
test
ljmp
mov
cmp
jp
popa
aaa
mov
push
cwtl
inc
inc
cmp
js
inc
xor
ret
adc
sbb
das
daa
mov
int3
outsb
in
add
dec
adc
adc
lret
lcall
sarb
cmp
scas
or
sub
inc
fs
ljmp
mov
cs
fs
test
push
inc
dec
sbb
mov
dec
mov
inc
sarb
dec
call
es
add
mov
sub
and
pusha
pop
sbb
and
out
pushf
addl
mov
mov
sub
bound
or
pop
inc
jo
add
mov
fs
loopne
sub
inc
mov
shlb
xchg
sbb
out
xor
inc
loop
je
mov
lea
lret
push
adc
add
inc
inc
sub
xchg
test
mov
sbb
mov
test
testb
xor
inc
add
mov
sbb
js
movsb
add
push
scas
out
popa
mov
adc
enter
pop
and
xor
sbb
or
pusha
mov
adc
cli
add
add
add
push
je
adcb
jbe
add
xor
pusha
data16
ret
or
aaa
test
jg
pop
data16
rcll
xor
and
cmp
adc
push
sub
or
je
rorb
sub
adc
push
mov
xorb
cmp
test
std
mov
testb
pop
or
movsb
xorb
cwtl
mov
pusha
inc
push
cmp
sub
mov
aaa
popa
xchg
lret
inc
rorb
aad
push
or
inc
mov
aam
sbb
push
rclb
es
or
fmull
dec
pusha
inc
cmp
movsl
push
push
ret
xor
add
xchg
cmp
into
pop
cmpsb
xchg
sub
inc
xchg
xchg
inc
in
fimull
push
mov
mov
inc
loop
add
sbb
push
cmp
or
test
clc
sub
shrb
enter
sub
inc
inc
sbb
add
mov
aaa
cld
dec
inc
adc
js
mov
fdivl
push
and
inc
push
push
inc
dec
enter
es
cmpsb
mov
adc
mov
adc
insb
shl
in
and
rolb
cmp
cmpsb
adc
jo
gs
cwtl
or
xor
ret
cmp
pusha
mov
or
inc
ret
push
es
out
aam
xor
jo
call
and
testb
add
in
lock
aam
fisubrs
xor
xor
dec
imul
jp
xor
fsubrl
cmc
andb
add
push
lock
test
jl
sbb
inc
jo
add
cwtl
sbb
and
inc
rol
push
loopne
inc
add
adc
cs
cwtl
add
inc
call
rclb
sbb
cwtl
ret
inc
xchg
out
mov
pusha
xchg
add
pop
iret
shrb
shlb
mov
call
mov
xor
adcl
enter
push
ret
movsb
and
sub
push
add
xchg
jp
out
and
push
sub
xchg
inc
or
push
add
xorl
adc
push
inc
pop
xchg
nop
lret
mov
adc
mov
or
bound
jp
lcall
pop
rcrb
mov
mov
push
push
arpl
jp
sbbb
xchg
in
data16
mov
in
cwtl
pop
les
pop
inc
mov
incb
in
hlt
mov
ret
push
test
mov
or
or
fs
sub
push
push
jge
push
popf
mov
lret
xchg
sbb
in
mov
push
dec
xor
or
inc
sub
sbb
ljmp
xchg
in
add
add
xor
or
or
xchg
jle
adc
andl
in
dec
xor
pop
adc
lock
call
sub
in
lret
adc
cwtl
mov
and
les
xor
jb
mov
push
insl
outsb
inc
and
pushf
dec
mov
adcb
inc
inc
mulb
mov
cmpsb
adc
sub
sahf
pusha
add
xchg
fdivs
xor
ret
add
roll
testb
push
jae
dec
inc
sub
cli
xchg
and
inc
test
decb
push
mov
push
mulb
xchg
ljmp
inc
sbb
ss
push
inc
hlt
mov
and
add
push
xor
add
jae
or
mov
sbb
xchg
push
add
push
add
pop
test
orl
lahf
pushf
mov
clc
xchg
aaa
mov
ret
popa
enter
and
subb
xchg
testl
sbb
push
sahf
mov
ss
cmpsl
popf
add
insb
or
sub
lret
rcll
scas
xorl
inc
push
adc
in
cmp
mov
inc
mov
mov
inc
cmp
add
xchg
mov
add
xchg
adc
outsb
sub
inc
or
pushf
mov
jo
xor
scas
fisttps
bound
mov
mov
pop
dec
das
dec
or
xchg
and
push
mov
mov
and
shrb
roll
loopne
les
call
fsubr
inc
dec
insb
leave
inc
lret
and
test
inc
aam
jnp
or
add
lret
les
push
aam
sbb
mov
cwtl
clc
and
or
xor
adc
sahf
cmp
mov
cmp
addb
sbb
cmp
rorl
mov
inc
mov
push
push
or
push
fwait
xor
or
add
and
data16
clc
mov
in
pop
mov
jp
loopne
push
lret
lods
daa
ret
sub
pusha
mov
or
adc
mov
cltd
inc
or
add
push
and
push
sbb
jo
or
imul
scas
fidivs
push
inc
es
push
mov
cwtl
mov
xor
dec
pusha
enter
or
mov
or
ficomps
pop
subb
ret
cmp
adc
xchg
popa
jo
fwait
lods
xor
inc
dec
in
clc
test
je
arpl
xlat
roll
test
mov
adc
in
jl
test
or
and
pop
inc
ds
test
mov
mov
xchg
aam
fs
cwtl
adc
cmp
int3
mov
cmp
cmp
test
lods
inc
test
inc
mov
dec
jo
sub
pop
loopne
mov
or
and
dec
or
cwtl
dec
xor
xchg
lret
add
add
cmp
test
repnz
dec
push
push
outsb
pusha
filds
data16
push
cmp
or
mov
or
pop
hlt
mov
xchg
dec
push
mov
mov
xchg
add
dec
cmp
sub
lcall
xor
jecxz
fcoms
addb
pop
push
sahf
xor
and
lcall
xor
into
insb
pusha
fsubrs
rcrb
sahf
dec
repnz
int3
dec
add
mov
in
adc
or
lret
cwtl
adc
rorb
dec
dec
jmp
js
sub
pop
or
sbb
mov
xlat
rcl
test
xor
xchg
push
outsl
inc
sbb
adc
fdivs
xor
xchg
add
jg
xchg
and
and
sahf
xor
pop
subb
xor
pop
sub
mov
in
cmpsb
sti
mov
out
into
testb
insb
dec
insb
call
jo
cmpsb
aam
add
xchg
es
dec
inc
cwtl
test
shlb
push
sub
add
push
hlt
out
cmpsb
pop
rclb
aam
cwtl
popa
pop
jb
mov
xchg
mov
std
add
and
test
inc
and
mov
dec
xor
adc
dec
or
lods
add
gs
cmp
dec
push
dec
sbbb
xor
bound
add
sub
sbb
mov
add
shlb
pop
push
mov
scas
insb
push
or
into
into
pop
ret
add
xor
mov
mov
xor
cmp
loope
xor
dec
add
stos
mov
addb
nop
stos
lock
movsb
inc
adc
and
mov
dec
add
inc
lods
or
loopne
add
and
or
push
dec
and
pop
shlb
nop
push
fidivl
add
xchg
rcl
js
push
mov
dec
mov
cmpb
dec
popa
dec
bound
out
ret
pusha
bound
mov
push
push
or
push
push
add
in
xchg
lcall
inc
add
cmc
or
mov
dec
loop
pusha
out
jo
lods
shlb
cmp
ret
cmpsb
mov
decb
jp
popl
sub
and
or
repz
jle
pop
mov
add
push
lcall
ljmp
pop
aam
lcall
push
mov
and
or
ret
loope
int3
std
lds
and
sub
dec
push
imul
and
jb
add
jb
js
xor
mov
pop
loope
sub
and
push
aam
xor
sub
mov
andb
push
jbe
mov
es
xchg
adc
rclb
sub
enter
push
inc
movsb
nop
bound
adc
add
int3
xchg
movsb
cs
add
push
pop
outsb
pusha
hlt
and
or
mov
mov
test
test
gs
xor
add
sahf
or
imul
ds
inc
call
mov
fsubrl
pusha
xor
cmp
pop
sub
inc
mov
sub
loopne
xchg
cmc
or
sub
add
xlat
inc
fdivrl
pop
mov
divb
inc
pop
cmp
add
jb
xor
add
lock
enter
jb
mov
jl
mov
loopne
sub
je
jno
push
mov
mov
out
and
dec
mov
or
pop
dec
es
add
rorl
outsb
xor
outsb
add
push
cs
fimull
add
repnz
sbb
rcrb
dec
sbb
mov
mov
add
mov
lea
or
add
add
mov
les
pop
movsb
add
rcl
mulb
fadds
xor
cmpsb
push
subl
xchg
mov
xor
xor
mov
fmuls
inc
shr
pushf
cwtl
sub
or
jl
roll
cmp
xor
ret
inc
icebp
xor
pop
jb
inc
cmp
mov
dec
andl
add
fsubrs
mov
stos
fmul
lock
and
dec
add
cmpsb
cmpsb
sub
add
and
aam
lods
sub
dec
push
or
xor
mov
call
dec
xlat
sahf
ret
js
sub
lds
cvtdq2ps
xor
cmp
xor
shl
pop
rolb
pop
fwait
push
in
jle
xchg
lods
adc
sub
sbb
movsl
cmp
xor
or
mov
push
push
sbb
cmpsl
mov
test
add
xor
push
test
dec
cld
xchg
xchg
pop
outsb
cmp
dec
inc
mov
loop
mov
mov
mov
and
stos
hlt
movsb
or
shlb
xchg
push
sahf
push
xchg
add
lret
add
and
sbb
sbb
pusha
jo
sub
fiadds
push
int3
std
test
adc
mov
sti
add
dec
loopne
sub
inc
and
test
or
and
inc
lock
mov
clc
test
add
pop
xor
or
xchg
or
shl
out
fidivl
pop
adc
ss
push
xchg
stos
add
lods
push
fildll
test
in
xor
sub
dec
inc
push
cmp
add
adc
push
add
int3
insb
ret
call
push
js
sbb
pop
push
or
lock
mov
out
inc
sub
push
pop
adc
aad
leave
repnz
addb
lock
js
and
add
adc
loope
stos
xchg
aam
sub
or
push
add
adc
add
test
mov
sahf
xor
add
or
mov
adc
fiadds
sbb
insb
test
xor
xor
push
mov
xlat
xor
adcb
mov
mov
scas
pushf
aam
mov
pushf
sbb
orb
mov
add
in
ficoml
sbb
sub
mov
mov
and
xchg
inc
sub
and
dec
loop
sbb
mov
xor
cmp
out
adc
sub
mov
push
pop
jo
xor
fs
cmp
adc
test
adc
cmpsb
sub
adcb
mov
or
int3
andb
push
or
mov
adc
push
xchg
mov
nop
faddl
sub
push
push
rolb
xor
iret
dec
pushf
sbb
mov
dec
ficompl
push
cs
dec
and
mov
xor
jle
xor
or
add
dec
movsl
test
add
popa
adc
out
lock
lods
dec
mov
loopne
and
push
dec
cld
adc
xchg
xor
add
dec
sub
xchg
pushf
pusha
clc
movsl
mov
and
cmpb
add
mov
and
dec
in
out
push
je
adc
pop
mov
stos
xchg
or
adc
enter
pushf
adc
pop
add
dec
mov
xor
out
fsubrs
fmuls
dec
cs
sahf
test
movntps
pop
mov
xchg
adc
inc
push
jne
or
fs
jl
dec
mov
les
pusha
bound
iret
push
add
add
and
jno
shlb
xchg
xchg
sub
push
sub
pusha
lret
fistl
sub
pusha
xor
and
movsb
push
fcoml
inc
adcl
pop
loopne
je
lods
out
repnz
int3
add
adc
xor
dec
stos
add
dec
into
add
mov
in
sahf
xor
xchg
xor
dec
in
cli
adc
mov
pop
push
addb
les
ss
jb
add
addl
rcll
shrb
xchg
add
sahf
inc
sub
call
mul
in
xchg
inc
and
push
into
or
and
lods
fwait
or
or
adcl
loop
xchg
rcll
lcall
push
int3
pop
jo
es
nop
dec
call
sbb
ss
scas
inc
imul
pop
adc
lods
sti
add
enter
dec
lret
pop
addb
ret
cmp
or
sarb
sub
jo
int3
sbb
lret
dec
inc
mov
cmp
xor
test
in
push
mov
add
mov
inc
mov
int3
jo
movsb
ljmp
jle
sbb
inc
cmp
xor
cmpsb
pop
or
pop
adc
adc
or
adcl
pop
or
inc
or
lcall
push
aam
add
pop
push
adc
mov
jb
insb
js
pop
xor
loope
xchg
pop
xor
push
pushf
movsb
repnz
jb
sub
mov
adc
out
xor
push
push
mov
xor
lret
adc
mov
les
xchg
push
cmp
adc
inc
mov
dec
adc
pop
inc
insb
or
nop
leave
pop
push
mov
xorb
ljmp
or
fwait
out
xchg
inc
popa
and
inc
test
or
sub
and
and
mov
test
add
inc
nop
and
es
mov
push
or
push
sbb
jb
dec
shll
rolb
inc
rol
mov
push
dec
xchg
movsb
test
arpl
bound
mov
xor
pusha
mov
js
clc
aam
or
sbb
enter
push
nop
or
mov
rorb
and
xor
dec
mov
push
sub
icebp
dec
pusha
aam
pusha
adc
mov
inc
lcall
add
xchg
cs
ret
fdivl
xchg
mov
push
dec
xor
push
cltd
cmp
pusha
sub
mov
lods
bound
outsl
sbb
inc
sbb
or
inc
and
jb
data16
lcall
sbb
insl
dec
mov
inc
loop
lret
adcb
fs
hlt
mov
and
push
push
xchg
out
xor
adc
xor
add
aaa
enter
or
es
cltd
jb
pushf
pushf
mov
jno
dec
xchg
movsb
push
inc
and
dec
add
xor
cmp
push
mov
jbe
clc
push
adc
mov
add
and
push
add
call
in
leave
sub
dec
dec
sbb
int3
mov
xchg
jp
add
dec
mov
aam
or
in
out
push
xor
popa
nop
loop
fcmovb
mov
nop
mov
data16
dec
sbb
add
mov
adcb
jo
mov
jg
and
es
lods
arpl
clc
pusha
lret
fwait
adc
jmp
jbe
inc
mov
sbbb
pop
sub
es
push
inc
test
pop
push
sbb
and
jb
add
lret
inc
insb
pusha
cwtl
mov
sbb
out
call
push
inc
cwtl
inc
pusha
push
add
iret
cmpsb
and
mov
in
dec
add
xor
add
push
or
adc
sbbl
sbb
sbb
lret
in
mov
test
and
adc
movsb
and
in
addb
cmp
mov
clc
cmc
es
pushf
mov
sub
hlt
mov
mov
inc
insb
insb
pop
cs
subb
cs
cld
xor
jl
or
xchg
sbb
cwtl
jb
mulb
xchg
shl
mov
pushf
push
and
pusha
inc
push
sub
push
xor
es
test
add
add
movsb
shrb
sub
sub
lret
cmpsb
push
xor
xchg
data16
sarb
adc
popa
inc
sub
loope,pn
mov
mov
cmp
pusha
jo
pushf
pop
add
lea
push
mov
and
lods
add
xchg
movsb
je
rol
je
or
pushf
dec
test
sbb
fnstsw
popa
pop
pop
clc
test
pop
shl
subb
inc
xchg
rorb
xor
fdivrp
push
and
les
sub
enter
inc
movsb
jl
xorb
bound
movsl
dec
data16
xchg
or
xor
call
or
loope
cld
cld
xchg
or
push
inc
pop
notb
push
and
negb
dec
int
xchg
push
je
clc
sti
fidivrs
movsb
xor
pop
or
sbb
pop
data16
and
and
xchg
pop
adc
nop
mov
mov
push
mov
test
dec
xor
fcoml
or
dec
je,pn
cwtl
insb
or
es
or
cmp
fs
mov
push
adc
adc
xchg
xor
lock
add
adc
fistl
pop
adc
shlb
jle
ss
popa
mov
rcrb
test
stos
push
dec
add
add
pusha
rolb
mov
xchg
jp
roll
and
or
mov
add
pushf
nop
shlb
add
aam
add
add
sbb
cmpsb
outsb
push
mov
add
icebp
and
out
jmp
inc
inc
or
pop
mov
sub
dec
sub
sbb
imul
dec
aam
cwtl
or
enter
inc
cltd
test
arpl
inc
mov
pop
fs
out
xchg
nop
cmp
mov
hlt
int3
nop
inc
rolb
pusha
pop
xor
dec
mov
jo
repnz
push
insb
test
mov
test
call
or
pop
dec
sbb
sbb
mov
sub
ret
mov
cltd
pusha
or
test
sbb
lock
xchg
add
push
jl
mov
add
xor
pushf
add
inc
sbb
xor
jo
in
xchg
or
outsb
lret
pop
xchg
ss
leave
cmp
jl
dec
or
dec
push
or
push
pusha
nop
push
cmpsb
push
push
ss
js
xor
mov
mov
xor
mov
mov
mov
orb
cltd
or
sbb
xchg
rolb
or
roll
add
adc
dec
cmp
sub
aam
hlt
sub
sbbb
test
pop
adc
loop
lods
loop
ljmp
xchg
lcall
sub
bound
ret
jg
cmp
addb
hlt
dec
dec
cmp
mov
push
ret
mov
rcl
lret
xchg
lock
or
push
push
sub
xchg
inc
adc
xchg
clc
aam
sub
repnz
adc
pop
mov
adc
mov
shlb
mov
insl
sub
and
xchg
inc
lcall
popf
pop
xlat
xchg
shrb
xor
ud0
sub
dec
cmp
imul
mov
ret
mov
fisttpll
dec
add
push
cmpsb
add
jbe
or
inc
push
fstpt
mov
xor
xor
mov
in
sub
pop
add
popf
push
je
aam
jb
or
jno
jp
add
inc
and
orl
sub
das
pop
lods
xchg
mov
or
outsb
scas
push
adc
adc
cmp
jl
pop
out
inc
movsl
push
pop
lock
inc
adc
or
std
jg
fisttpl
test
push
decl
jmp
lods
dec
scas
xchg
adc
or
xchg
rclb
and
mov
subb
andl
jno
xchg
call
sub
dec
push
in
xchg
push
adc
sub
add
sbb
xchg
inc
sbb
lods
mov
shlb
xchg
cmc
lret
xchg
cmp
dec
lods
add
push
dec
cwtl
sbbb
xchg
push
mov
shlb
add
and
xor
inc
add
xor
mov
mov
loopne
lcall
and
xchg
mov
add
ficompl
fsubp
and
bound
lock
add
pop
xchg
mov
jle
popa
rcrw
sub
cmp
or
divb
sahf
sbb
loopne
dec
outsb
or
mov
and
mov
and
cmp
mov
stos
popf
sahf
dec
sub
inc
fbstp
test
aam
bound
bound
or
pop
adc
pop
fisubrl
nop
xor
dec
sbbb
and
xor
jne
add
adc
insb
adc
ds
xchg
sub
clc
jp
sti
mov
sbb
push
cmp
or
movsb
inc
sbb
mov
loope
add
adc
sbb
idivb
dec
mov
mov
dec
dec
or
sahf
xor
jne
je
or
xchg
mov
dec
xchg
adc
mov
inc
cmpb
nop
jg
fildl
in
test
or
add
lret
push
inc
add
enter
xor
push
rorb
fiadds
rolb
inc
sub
mov
mov
loope
push
adc
xor
scas
pusha
sbb
or
call
push
cmp
and
pushf
xchg
rcr
or
pop
aam
adc
or
and
adc
rorb
andb
add
mov
or
rorb
mov
pushf
push
mov
jb
stos
test
jbe
test
cmovb
ljmp
aam
cmpsb
xchg
inc
testb
insb
test
mov
pop
mov
mov
push
test
insb
mov
cwtl
lock
dec
iret
ss
cwtl
xor
or
scas
cmpsb
xor
mov
orb
xchg
dec
inc
lods
enter
or
dec
sbb
or
mov
outsb
adc
adc
adcl
cwtl
mov
idivb
cmp
cmp
and
ficoms
inc
insl
and
in
push
and
fists
dec
push
sarl
push
mov
sub
push
mov
mov
dec
test
mov
imul
xchg
popa
dec
push
sahf
push
xor
and
arpl
sbb
pusha
es
and
push
jo
mov
les
xor
sahf
mov
and
cltd
or
fwait
adc
and
jo
xor
jb
xchg
faddl
xchg
loopne
stos
test
in
es
adc
test
loopne
push
pop
add
ljmp
xchg
shrb
add
or
cmp
dec
pop
cli
and
sbb
dec
add
mov
cmp
push
or
xor
decb
mov
data16
mov
pop
or
jo
and
pusha
rolb
cmp
cmp
add
dec
xchg
sub
adc
cmpsb
mov
add
inc
pusha
mov
mov
or
adc
pop
arpl
add
stos
fisubs
mov
pop
or
dec
pop
dec
into
push
xchg
inc
inc
xor
mov
adc
sub
pop
aam
or
je
bound
add
push
push
mov
and
mov
and
jb
and
dec
mov
add
mov
or
loopne
xchg
or
leave
bound
adc
xchg
pusha
dec
add
rcll
test
cmp
subl
mov
xor
sbb
mov
sbb
enter
and
add
bound
cltd
int3
xchg
sbb
out
lods
inc
aam
jp
cmpsl
sti
mov
sarb
inc
inc
and
adc
test
lods
adc
or
leave
add
mov
sub
inc
pop
xorb
mov
mov
mov
or
enter
mov
xchg
push
cmp
add
js
nop
leave
cld
call
cs
and
in
sub
and
nop
and
pop
andb
cmp
and
test
es
stos
orb
add
popa
xchg
cwtl
rolb
aam
push
adc
xchg
leave
adc
xchg
push
mov
jp
xor
push
mov
add
test
ror
xchg
cs
add
jle
lea
add
push
or
nop
and
dec
push
ljmp
sbbb
sbbb
mov
jne
mov
loop
sub
rolb
in
or
or
inc
mov
cmp
sbb
xor
dec
push
mov
ds
rcll
or
xor
lcall
dec
test
sub
add
mov
ljmp
jp
and
push
aam
test
pop
push
es
popa
xor
sub
rcl
push
jp
lods
sub
and
add
ficomps
xor
push
ret
test
addb
add
or
fisubl
xchg
jle
add
sbb
fcompl
xchg
repnz
jb
xchg
xchg
mov
es
sahf
cmp
add
cwtl
cmp
test
ljmp
add
mov
or
mov
outsb
inc
push
lcall
push
mov
nop
imul
and
or
xor
in
adc
xor
inc
fmull
push
or
and
popa
dec
arpl
mov
add
or
shl
aam
test
arpl
sbb
push
dec
add
pushf
xor
and
cmp
jl
jp
adcb
adc
pop
lcall
mov
push
or
jl
mov
int
add
inc
cmpsb
mov
and
xor
push
adc
cmpsb
rclb
sbb
push
lcall
pop
pop
dec
jno
outsb
xor
xchg
add
mov
and
lock
xor
push
inc
ret
pusha
pop
push
cmp
pop
rcrb
inc
add
sbb
adc
dec
add
rcr
hlt
cmp
cli
std
xor
push
daa
inc
dec
hlt
adc
xor
bound
dec
clc
cmp
push
mov
loopne
jno
lds
sbb
pop
dec
int3
and
rolb
or
and
xchg
pop
les
cs
cmp
adc
sbbb
xchg
add
imul
adc
pop
and
movsl
xchg
inc
outsb
xor
sti
mov
and
xor
shlb
pop
and
shlb
or
sbb
and
cmpsb
popa
nop
add
inc
rol
cwtl
inc
xchg
add
loopne
or
sub
inc
inc
push
add
ljmp
fs
adc
pusha
sub
jo
xor
add
jno
in
cmpsb
or
fdivrl
adc
dec
xchg
add
mov
and
xor
inc
dec
cwtl
jbe
mov
insb
dec
add
sub
adc
andb
and
xchg
jne
add
pop
cmpsb
push
dec
sbb
sub
es
and
in
ss
add
iret
dec
stos
xchg
and
cwtl
or
add
and
aaa
rorl
push
inc
dec
cltd
test
cs
push
push
mov
dec
jg
xchg
adc
rcr
push
cmp
adc
jo
lock
orb
int3
mov
mov
test
into
inc
mov
ret
jp
sub
mov
mov
adc
or
xor
jg
cmpsl
fs
lcall
fistpll
adc
sub
add
add
ret
xor
rol
push
and
dec
mov
lock
add
adcb
add
int3
pop
pop
dec
mov
out
cld
dec
and
je
jbe
dec
lahf
bound
mov
lret
out
stos
mov
pop
mov
xor
sar
jg
or
jns
xchg
imul
xchg
dec
cwtl
inc
lods
mov
inc
xor
inc
loopne
inc
xchg
ret
or
pop
xchg
push
cltd
sahf
pop
gs
sbb
pusha
inc
imul
or
mov
push
pusha
and
mov
aam
pushf
call
gs
cld
out
jne
or
pusha
std
fstps
sbb
adcl
mov
pushf
test
push
pusha
push
add
js
sbb
inc
sub
xchg
mov
dec
xchg
cld
dec
and
les
sub
push
enter
dec
mov
pop
ret
pusha
xorb
dec
adc
fcmovbe
test
sarb
mov
pop
inc
sbb
mov
and
push
hlt
jle
mov
jg
xor
sub
pop
lods
adc
mov
push
push
aam
dec
push
orl
mov
test
adc
sarb
pop
pop
lods
mov
add
jo
and
push
cmpsb
clc
jne
push
push
push
imulb
push
dec
inc
cmpb
mov
xor
and
ljmp
out
adc
leave
cmpsb
movsb
xor
cmp
insb
mov
loopne
push
sub
aam
xor
xor
mov
js
mov
lcall
daa
xchg
adc
cmpsb
push
mov
sbb
push
or
dec
pop
add
pop
scas
pusha
and
mov
aaa
push
xchg
adc
push
jp
call
mov
add
push
orb
movsl
cmp
pop
xor
sbb
or
bnd
jo
pop
xchg
dec
cld
push
inc
dec
arpl
push
clc
or
mov
or
leave
cmp
adc
mov
adc
hlt
aam
roll
pop
les
stos
sbbb
push
xchg
inc
adc
pusha
out
adc
inc
xor
enter
sbb
fnstenv
add
hlt
mov
inc
ret
les
and
add
dec
cwtl
leave
lret
or
and
add
test
mov
fcoms
inc
xor
or
sbb
data16
call
test
ss
das
xchg
rolb
push
push
inc
ss
sub
dec
je
inc
or
add
cmc
cmp
in
and
sub
mov
ret
or
push
test
xor
push
cwtl
pop
push
mov
pop
dec
pop
push
popa
xchg
add
or
and
jbe
shrb
jge
adc
mov
cmp
push
enter
outsl
inc
xor
mov
adc
mov
or
in
dec
xor
jb
stos
cwtl
xorb
aam
cmpsb
popa
jo
inc
xor
test
sbb
clc
pop
adc
sbb
xchg
xor
inc
call
mov
sub
test
aad
mov
or
xchg
sbbb
jo
add
xor
xor
xchg
xor
lcall
and
add
lock
adc
repnz
subb
push
fs
pop
and
adc
mov
lods
adc
push
hlt
adc
or
inc
insb
js
lock
xor
add
add
test
xchg
cwtl
lods
sub
sti
loopne
add
jo,pn
shrb
mov
sbb
pusha
loop
pop
mov
pop
notb
fs
dec
push
pushf
rorb
inc
inc
cld
cltd
pop
jecxz
xchg
les
xor
popa
cmpsb
int3
addb
inc
test
mov
bound
xchg
xchg
dec
in
adc
jns
sbbb
dec
rol
pusha
and
mov
mov
or
cli
or
ret
inc
fdivl
xor
addb
loop
mov
shll
adc
push
push
xor
inc
sub
xchg
bound
and
push
ret
mov
and
mov
js
inc
mov
test
and
add
loop
enter
inc
add
or
insb
rclb
test
inc
mov
push
push
jl
jo
ret
adc
es
pop
or
and
mov
inc
cs
mov
aaa
and
fs
sbb
mov
dec
enter
test
push
add
iret
cmp
aaa
sub
dec
sbb
inc
sbb
out
in
arpl
add
sbb
inc
xchg
push
lcall
test
repnz
movsb
xchg
push
push
sub
int3
ret
jle
adc
mov
imul
int3
jbe
stos
adc
cmp
xor
cmc
adc
inc
subl
outsb
mov
sub
inc
fcomp
jle
sbb
pop
push
dec
push
push
mov
std
add
ret
pop
icebp
stos
jo
inc
xor
add
inc
sbb
dec
xor
push
popa
push
ficoms
jo
mov
adc
add
cmp
mov
sub
adc
xor
add
ss
addb
inc
xchg
sbb
stos
xchg
xor
mov
mov
test
xchg
mov
addb
sbb
jbe
dec
gs
or
mov
or
and
add
loopne
jo
enterw
mov
pop
dec
sbb
push
test
pop
dec
js
jb
pop
gs
pushf
push
or
fiadds
out
cs
adc
add
sub
mov
sbbb
fs
mov
pop
adc
push
push
lods
or
cs
add
add
mov
or
pop
test
pop
test
xchg
or
insb
mov
mov
nop
je
es
xchg
pusha
mov
sub
movsb
push
inc
xor
inc
xor
pusha
sti
aam
push
and
inc
rorb
mov
in
xor
movsb
inc
test
mov
lock
mov
adc
imul
sbb
or
lock
xor
dec
lcall
cwtl
jmp
adc
shlb
add
inc
jno
adc
xor
mov
and
fcoml
fiaddl
les
push
push
stos
push
iret
mov
loopne
lret
push
pop
stos
mov
and
mov
or
ret
or
xor
and
jae
adc
inc
pushf
add
push
insb
and
inc
dec
push
sub
std
leave
adc
inc
dec
cltd
push
rolb
adc
idivb
fiaddl
bound
adc
sub
test
inc
adc
adc
and
test
and
and
rolb
shrb
add
push
mov
sbb
pop
xor
cmpb
adcb
push
push
fsubl
add
or
mov
xor
loop
cli
arpl
adcb
or
es
pop
mov
push
lret
imul
and
fsubrl
in
invd
or
mov
ret
sub
lds
dec
adc
add
push
rcrb
adc
push
mov
push
push
adc
sbb
jmp
adc
mov
xchg
iret
rol
int3
dec
dec
cltd
mov
int
cmpsl
rcl
xchg
movsb
shl
call
loop
adc
es
pushf
test
pop
mov
mov
call
jb
sarb
push
or
dec
sub
inc
and
in
push
cmp
addb
and
cmp
stos
adc
out
mov
dec
inc
cltd
dec
stos
lods
test
adc
sub
inc
sbb
stos
sub
mov
rolb
loopne
sbb
cmp
add
int3
sbbb
push
or
lea
lret
rorl
and
out
push
xchg
xor
xchg
adc
and
dec
mov
in
push
clc
xor
in
call
xchg
mov
and
xchg
inc
xchg
mov
adc
pushf
cwtl
rcrl
aam
imul
orl
testb
cmpb
enter
or
and
dec
loop
insb
cltd
inc
fs
jle
add
xor
cwtl
or
test
xchg
enter
sbb
das
add
add
or
push
lret
pop
jl
repnz
iret
iret
insb
and
out
push
les
xor
in
sarb
inc
cmp
addb
push
xor
push
and
pop
push
ss
dec
add
xchg
outsb
insb
inc
test
popf
ss
inc
mov
pop
push
add
push
adc
xor
es
cmpsb
adc
add
test
sbb
lcall
mov
jo
lcall
leave
and
or
ss
mov
call
sub
pop
sbb
jbe
pop
es
xchg
notl
popf
ret
cmp
in
arpl
and
lcall
rolb
inc
decl
jne
push
imul
adc
mov
lods
xchg
aam
test
mov
orb
daa
add
mov
xchg
inc
xchg
adc
out
sub
and
and
stos
adc
inc
ret
scas
dec
mov
xor
cmpsb
movsb
adc
mov
or
mov
adc
sub
mov
and
jle
or
adc
inc
aaa
je
inc
inc
lods
aam
mov
sub
fs
adc
sbb
scas
add
pop
and
jo
push
add
jl
cs
jb
dec
mov
test
or
rolb
inc
lret
push
mov
and
jb
sbb
inc
test
call
loopne
push
pushf
push
push
insb
xor
cmp
push
mov
mov
adc
mov
mov
ds
push
test
inc
xor
jg
mov
mov
and
lea
leave
pop
or
sub
in
and
pop
js
popf
and
sbb
enter
add
leave
add
aam
sub
mov
and
push
sbb
jo
add
lods
xchg
movsb
adc
jbe
adc
cmp
neg
sub
insb
xchg
dec
push
fidivl
rcrb
mov
cmp
inc
push
push
lods
add
ljmp
cmp
ljmp
ret
sarb
sbb
add
xor
xchg
sti
push
data16
addb
inc
mov
les
inc
adc
and
adcb
add
pop
popa
fimuls
popa
xchg
lock
pushw
iret
adc
out
lock
js
nop
scas
rolb
and
inc
lret
xchg
push
add
and
cli
xor
cwtl
mov
sahf
fsubl
push
in
add
mov
push
mov
shll
iret
mov
lock
rorb
mov
sub
out
push
sbb
dec
xchg
xor
nop
leave
pop
sbb
pop
fiaddl
fidivs
sbb
mov
dec
push
adcl
mov
sbb
nop
or
add
dec
sub
rolb
jg
or
into
pop
jo
outsb
mov
inc
cmp
mov
shlb
fdivl
imul
dec
test
icebp
xor
sbb
ss
sub
xchg
cmp
dec
inc
mov
data16
iret
pop
test
xchg
sbb
xor
xchg
add
shlb
enter
dec
push
sbb
xchg
adc
cmp
je
add
inc
add
push
nop
mov
cwtl
data16
mov
cli
lock
sub
imul
mov
movsb
push
cmp
mov
add
movsl
aaa
fsubs
inc
push
and
ds
inc
push
or
fsqrt
test
lock
and
in
lcall
mov
add
aam
mov
sbb
test
xchg
and
sbb
pop
data16
xchg
mov
add
movsb
insb
inc
mov
push
sbb
cld
mov
loopne
xchg
es
inc
mov
shrb
test
loopne
sbb
in
adc
ret
xchg
pop
andb
pop
xchg
cmp
sbb
scas
lds
jo
or
add
push
xor
shlb
or
loop
imul
adc
es
loopne
outsb
ret
dec
addb
add
sub
addb
cltd
lret
inc
add
leave
push
add
mov
mov
cmp
popf
or
xor
outsb
pop
cwtl
adc
dec
loopne
dec
sbb
loop
cwtl
or
sub
adc
mov
mov
or
mov
test
cmpb
subb
faddl
inc
xor
lock
sub
insb
push
nop
dec
sub
sar
inc
jae
inc
jp
pop
test
test
dec
out
mov
movsl
xchg
inc
cwtl
sub
test
push
and
mov
fs
nop
adc
adc
int3
shlb
addr16
inc
test
stos
dec
addb
dec
add
lods
or
pop
xor
xchg
lods
gs
lcall
push
jb
inc
aam
xor
aas
xor
bnd
or
dec
sbb
add
gs
pop
stos
cs
inc
add
push
ds
or
push
dec
pop
mov
movsb
fnstsw
clc
mov
adc
inc
adc
stc
or
mov
fsubr
scas
add
push
push
out
mov
ljmp
cmpsb
or
add
mov
lods
les
jb
mov
jbe
pushf
push
push
ds
aam
addb
dec
push
loopne
les
add
xchg
dec
dec
mov
jb
dec
sub
adc
push
and
adc
or
ds
fildll
pop
hlt
pop
xor
jl
jb
mov
pusha
pop
or
jo
inc
dec
cltd
incb
dec
dec
xchg
aam
and
shlb
cmp
add
aam
push
adc
mov
loope
fadd
inc
movsb
outsb
inc
sub
sbb
cwtl
je
push
call
rolb
sub
jo
mov
inc
and
jmp
test
pop
push
sbb
add
aam
mov
sbb
ss
or
mov
xor
popl
sbb
mov
sbb
mov
rorb
cli
inc
jmp
adc
cld
sbb
sub
add
bound
orl
repnz
es
add
dec
or
adc
insb
add
rol
push
rcr
adc
add
ret
xchg
sbb
adcl
xor
sbb
or
loope
lret
pop
ss
adc
mov
mov
int3
or
add
pop
shr
adc
ret
es
dec
add
pushf
adc
and
push
xor
adcb
add
push
xchg
sub
rolb
fs
xchg
mov
mov
movsb
inc
adc
adc
push
inc
in
call
jg
xor
or
scas
push
cmp
and
mov
in
add
shlb
inc
adc
mov
sahf
adc
sbb
inc
add
inc
sbb
mov
outsb
aam
faddl
pop
and
ret
pop
sub
data16
adc
push
call
daa
inc
cmpsb
inc
add
and
inc
loope
mov
sub
sbb
or
mov
or
insb
add
ret
adc
rorb
mulb
rcrb
ret
adc
les
xchg
dec
xchg
rclb
jo
add
in
sub
adc
xor
add
push
mov
sub
add
push
xor
ret
ljmp
push
ficoml
hlt
js
add
les
dec
sti
or
pop
fstpt
lock
or
mov
sbb
xor
les
mov
ret
adc
les
data16
inc
xor
je
icebp
and
mov
jg
mov
call
adc
rcll
jne
loope
mov
and
xor
inc
adc
and
orb
in
or
nop
fstpt
rolb
xorb
push
in
dec
ret
add
shlb
push
xchg
push
add
ss
jl
add
stos
cltd
mov
push
sub
mov
xor
cwtl
inc
or
mov
mulb
xchg
dec
fcoms
cmpsb
xor
into
lcall
or
test
mov
sub
mov
outsb
inc
inc
and
jb
or
push
test
dec
inc
test
adc
cmp
or
insb
pushf
push
or
pop
xchg
adc
xchg
ret
mov
mov
subb
xchg
push
inc
dec
outsl
push
cmpb
dec
xchg
sbbb
mov
xor
jle
ret
sub
lret
pushf
andb
sbb
fs
or
push
adc
cmpsl
lock
xor
add
pop
adc
je
les
movsl
mov
aam
data16
inc
and
pop
adcb
jle,pn
sti
shlb
orb
or
pop
pop
pop
push
xchg
lods
loop
ss
inc
lds
adc
dec
in
lcall
jl
sub
dec
adc
pop
stos
mov
sub
sbbl
adc
push
xor
mov
add
xchg
push
adc
test
mov
ljmp
sbb
loope
pop
sub
push
jmp
jne
push
mov
push
call
push
imul
test
filds
filds
xor
not
jl
lea
xor
mov
ret
sbbb
test
mov
es
repnz
xor
ljmp
adc
dec
movsb
or
mov
add
xorb
roll
mov
add
xorb
add
jb
int3
mov
mov
jbe
cwtl
lret
and
sub
pusha
je
aam
or
push
lock
xor
mov
insb
push
mov
add
sbbb
les
test
cltd
inc
pop
call
jecxz
and
out
dec
xchg
mov
inc
mov
add
and
mov
push
shrb
adc
hlt
loopne
mov
int3
nop
adc
sub
faddl
sbb
or
and
xor
pop
es
inc
or
inc
test
xchg
pop
cmpsb
push
leave
hlt
dec
dec
pushf
add
dec
cwtl
or
fimull
roll
in
jp
pop
std
sbb
loopne
jl
data16
inc
sub
test
and
mov
fdivr
mov
mov
push
xor
or
xorl
rolb
sbb
mov
rorb
bound
xchg
push
ret
mov
and
or
cli
shrb
mov
dec
cld
addr16
fwait
loop
or
cld
pop
or
sbb
mov
insb
dec
sbb
xor
sbb
mov
add
push
test
insb
ss
cmp
arpl
test
jp
xor
add
les
popa
sbb
dec
push
repnz
xor
xchg
push
and
data16
sbb
or
ds
call
in
loopne
mov
or
pop
pop
cwtl
movsb
add
pop
mov
cmp
out
addb
and
jbe
add
add
cmp
adc
adc
mov
cli
add
cld
dec
jb
and
loop
or
inc
into
mov
add
movsl
pusha
mov
pop
inc
mov
or
mov
add
aam
add
mov
xchg
fsubrs
mov
ljmp
xor
in
mov
dec
leave
inc
dec
pop
jb
and
push
xchg
inc
xor
adc
or
loope
xchg
ret
dec
outsb
sbb
mov
test
neg
addb
sbb
mov
js
call
mov
mov
jne
and
add
and
pop
and
popa
sub
or
shrb
sub
sbb
add
test
incb
hlt
fidivl
xchg
cmp
jno
sbb
sub
push
inc
lods
or
jo
xchg
or
add
dec
add
fsubrl
mov
lods
popa
lea
rorb
mov
jle
xor
mov
or
inc
push
pushf
sbb
sub
xor
push
pusha
int3
int3
adc
mov
scas
sub
nop
or
add
les
sti
into
testb
add
inc
mov
lret
mov
roll
scas
push
push
mov
adc
adc
mov
xor
mov
sbb
addb
pop
inc
mov
test
push
sbb
push
adc
and
push
sub
sub
imul
xor
into
pop
and
push
mov
mov
lcall
arpl
and
clc
inc
les
mov
sub
cmp
fadd
rolb
outsb
push
or
movsl
pusha
mov
std
cmp
or
pop
shrb
int
or
mov
nop
dec
rolb
lods
mov
or
mov
fildl
lret
add
xchg
sbb
push
xor
xor
or
inc
in
mov
xor
int3
lds
sub
les
pop
dec
or
nop
in
push
pop
push
sbb
adc
or
or
mov
mov
push
xchg
inc
and
mov
dec
or
sbb
outsb
push
cwtl
inc
inc
add
mov
test
nop
pop
clc
push
dec
in
test
and
mov
mov
xchg
andl
mov
push
mov
mov
mov
add
leave
in
xchg
cld
lods
pop
gs
sarb
add
mov
dec
call
mov
repnz
adc
and
lret
mov
and
movsl
add
pusha
push
adc
pop
lcall
adc
cmp
insb
andb
or
nop
sbb
push
mov
sub
in
imul
and
testb
testb
adc
inc
or
and
mov
test
into
stos
adc
orb
or
enter
sub
or
loopne
dec
cmpsl
push
mov
push
aam
push
test
adc
mov
ljmp
sub
dec
or
add
adc
rolb
push
add
and
pop
mov
mov
mov
and
cs
sub
daa
mov
repnz
mov
and
pop
testb
and
add
into
xchg
adcb
inc
sti
rcr
enter
mov
test
testb
loopne
ret
mov
and
es
dec
push
mov
mov
and
push
rcrb
aam
les
xor
daa
add
add
dec
add
outsb
test
mov
into
mov
and
cmp
test
push
mov
dec
sub
sbb
fiaddl
jp
pop
adcl
push
ss
es
xor
xor
add
adc
jg
push
cwtl
popa
xchg
lret
add
test
sbb
in
outsb
into
xor
lock
insb
cltd
or
mov
cwtl
cwtl
enter
lret
push
loope
and
dec
std
or
test
push
rorb
mov
push
dec
aad
sub
cld
enter
add
cwtl
scas
inc
cmp
repnz
xor
dec
ljmp
mov
and
mov
inc
gs
outsb
adc
pop
movsl
xchg
mov
dec
sbb
dec
inc
and
inc
cs
in
push
test
rcr
push
js
cs
mov
sbb
mov
pop
inc
fbld
addl
jbe
mov
mov
rclb
push
nop
or
lcall
inc
mov
xabort
pusha
pop
fists
pop
xchg
push
push
orb
push
xchg
lock
dec
and
scas
ljmp
hlt
sub
xor
adc
mov
or
add
dec
push
push
ret
xchg
into
dec
push
orl
push
cs
out
add
cmp
loopne
mov
add
mov
pop
dec
cmpb
push
shrb
and
inc
mov
adc
adc
cmp
push
push
ss
leave
or
add
loopne
push
add
pushf
inc
clc
push
or
push
push
add
rclb
pop
and
loop
sbb
xor
pop
push
aam
xchg
push
sahf
sub
and
fsubrp
and
push
dec
cwtl
enter
jo
pop
leave
mov
mov
pop
jl
subb
sbb
mov
in
nop
mov
mov
aam
and
push
jp
xor
or
ss
adc
fs
fimuls
jo
dec
or
add
jno
sub
sub
test
inc
add
movsb
in
nop
add
jo
sahf
shlb
lret
push
pop
xchg
inc
or
fs
cmp
adc
mov
cmpsb
pushf
ret
or
lret
in
movsb
imul
xchg
jo
xchg
stos
xor
dec
xchg
pop
ret
adc
pop
sub
sub
xchg
sbb
jl
lret
ss
add
push
or
and
mov
dec
ficomps
inc
shlb
xor
push
or
push
push
insb
loop
mov
push
mov
add
rorb
sub
mov
pusha
cwtl
add
test
pop
add
inc
in
jbe
cwtl
and
sbb
lea
pushf
mov
mov
xor
xor
jmp
gs
mov
sub
lock
lret
je
sbb
pop
outsb
insb
inc
movsl
lds
mov
mov
mov
pushf
pop
data16
sub
or
rorl
push
mov
sbb
sub
cmp
subb
es
sub
add
pop
xor
xchg
pop
add
and
ficoml
push
inc
popaw
pop
adc
dec
rolb
inc
xchg
mov
adc
cmp
fisubs
mov
push
push
pop
pop
dec
jo
xor
dec
add
dec
hlt
clc
mov
ss
mov
add
bound
mov
push
pop
cmpl
mov
push
fisubrs
int3
xchg
pop
cmpsb
xor
cmp
aam
sbb
dec
sub
js
or
sbb
dec
cmp
and
out
mov
adc
adc
rol
mov
cmp
or
push
divb
inc
test
xchg
inc
or
inc
mov
rcl
out
out
js
push
pop
inc
movsb
sbb
rcr
cmp
leave
add
sub
xchg
rolb
shlb
xor
push
jo
push
add
and
sub
cmpb
xchg
sub
testb
mov
clc
dec
and
lods
inc
pop
add
push
jo
xchg
rcll
loop
add
mov
pop
enter
mov
aam
loopne
pop
into
adc
pushf
adc
cld
push
mov
stos
xchg
or
daa
xor
jo
sbb
in
sbb
data16
aam
cmp
sub
loop
cwtl
or
addb
addb
push
scas
or
cmp
lcall
xor
gs
push
sahf
mov
sbb
or
xchg
push
ss
lock
pop
orb
out
xlat
nop
adc
fiaddl
rclb
push
mov
xchg
sti
in
lret
test
mov
sbb
inc
jl
adc
pop
add
movl
jecxz
and
loop
lcall
ss
pop
and
or
push
cs
push
inc
mov
xor
inc
dec
mov
push
lret
jbe
sub
or
adc
add
xor
sarb
jl
inc
sub
pop
jl
cli
and
pusha
jle
dec
adc
xorl
sbb
movsl
and
xorb
cltd
ret
push
or
movsl
inc
jae
rorb
jp
cli
int3
popa
bound
shlb
sbb
jo
push
or
fstpt
into
clc
cld
cld
xchg
rorl
int3
add
xchg
les
or
ficoms
or
adc
adc
dec
data16
sub
fidivrs
and
lods
shlb
ret
in
sahf
andb
and
inc
xor
data16
ficomps
push
cwtl
mov
add
movsl
call
fistps
add
daa
loopne
jp
jo
adc
xor
pop
nop
mov
sarb
dec
mov
call
call
pop
mov
nop
add
hlt
shlb
or
cltd
xor
test
les
lea
data16
orb
test
orb
popa
lret
loope
sbb
add
pop
push
rorb
rolb
in
addl
add
xor
mov
test
adc
in
inc
or
xchg
dec
jb
insb
sub
inc
test
hlt
js
dec
loop
jecxz
pop
xchg
add
outsl
inc
push
lock
cmpsb
xchg
orb
pop
xor
movsb
int3
adc
xchg
xorl
hlt
mov
cwtl
hlt
fs
mov
dec
and
sahf
dec
addb
add
lock
imul
outsb
add
xor
mov
push
test
jp
loop
push
push
add
xor
push
jg
int3
xor
aas
adc
inc
fs
popf
sbb
sub
mov
imul
xor
ficomps
fstl
jns
dec
lcall
dec
jns
fisttps
sub
add
xorb
add
inc
cmp
xchg
or
push
xor
and
or
adc
and
mov
inc
ret
aam
xchg
jge
mov
add
loopne
lods
mov
adcb
mov
lret
adc
pushf
sub
fdivl
rcll
sub
add
and
sub
push
push
sub
test
add
adcb
and
mov
test
jmp
loope
adc
add
pop
jbe
push
cmp
pop
lea
or
testb
shl
adc
adc
cmp
mov
cwtl
ss
mov
xchg
movsb
jle
add
or
push
inc
cmp
movsb
lock
enter
inc
fists
adc
add
cmpsb
or
and
mov
js
cmp
cmp
loopne
pusha
insb
cs
push
xchg
push
loop
out
or
fimull
push
mov
mov
mov
xchg
and
nop
je
sbb
adc
jbe
jbe
addb
dec
enter
ds
or
lock
sbb
rclb
int3
bound
sub
dec
pusha
push
add
push
in
push
data16
jbe
or
inc
aam
popf
aam
and
test
sbb
aam
leave
cmpsb
loop
mov
or
push
pop
adc
sub
in
xor
xor
mov
push
rorl
jle
and
call
sahf
xor
popa
push
xchg
add
xorl
and
test
je
fdivl
cmp
mov
cwtl
loope
mov
inc
sbb
mov
mov
dec
pop
test
movsb
mov
scas
loopne
test
add
or
mov
mov
pop
sbb
sub
add
popa
sbb
jb
lods
add
xor
cli
push
xor
sbb
jp
sarb
sahf
loopne
and
mov
es
ljmp
nop
pop
adcl
pushf
sti
sahf
mov
xor
idiv
fiadds
push
lea
mov
test
xchg
shrb
cmp
sbb
cmp
cltd
or
lds
adcb
xor
call
pusha
test
orb
ret
adc
push
adc
dec
ret
mov
int3
and
cs
sti
inc
cmp
lret
push
nop
shr
rcll
pop
dec
adc
mov
xchg
cltd
push
adcb
call
mov
and
cwtl
push
dec
and
insb
or
mov
insb
mov
pop
sahf
js
adc
movsb
xchg
push
push
cmpsb
xchg
sub
daa
mov
push
or
or
push
add
jae
outsl
cwtl
sbbb
lods
into
push
sub
push
xchg
stos
jp
js
outsb
popf
outsb
xchg
in
adc
data16
pusha
sbb
or
popa
inc
and
mov
dec
sbb
dec
outsb
dec
clc
push
add
ljmp
and
and
pop
aam
mov
or
push
push
inc
movsl
and
mov
xchg
movsb
push
out
insb
pusha
adc
scas
jp
and
and
insl
mov
ret
call
inc
dec
lret
adc
dec
test
xchg
rolb
xchg
push
or
ret
rorb
fiadds
popa
xor
ljmp
test
add
add
inc
in
mov
inc
es
adc
adc
ss
adc
pop
sbb
jb
xchg
dec
xor
jne
or
ret
xor
adc
adc
mov
insb
push
ror
inc
shlb
mov
mov
aam
xchg
in
inc
xchg
lret
fs
add
jmp
adc
call
gs
in
ficompl
xor
in
push
push
push
add
inc
popf
lods
cltd
cli
fmuls
orb
hlt
dec
in
pop
into
or
jo
pushf
xor
ss
addl
cwtl
andb
or
and
nop
pusha
xchg
pop
sbb
xchg
cwtl
jb
push
rorb
mov
pop
xor
xor
dec
in
push
or
sub
mov
adc
fstps
mov
inc
mov
pop
gs
or
dec
or
shrb
jp
sub
push
incl
xchg
hlt
pushf
loope
push
push
dec
pop
in
es
rolb
cmp
mov
push
adc
ret
xchg
xorb
lret
sbb
mov
xchg
adc
js
adc
sbb
and
cmp
aad
rol
mov
dec
test
xchg
xor
xchg
add
lret
aam
or
test
sbb
loopne
mov
mov
sub
adcb
mov
fnstenv
pop
inc
call
addb
fs
xchg
loopne
xchg
mov
and
dec
shlb
xchg
fs
sarb
xor
mov
bound
jg
adcb
mov
xchg
lcall
sub
xchg
fisubs
sahf
outsb
or
call
adc
out
lret
dec
cmp
imulb
jb
daa
sbb
sbbb
mov
inc
dec
ret
and
sub
addb
jb
jo
mov
loop
sbb
sbb
mov
fiaddl
aam
adc
push
cltd
cmp
lret
jb
push
test
add
push
test
or
js
sbbb
test
stos
sub
mov
fsubr
xchg
adc
jle
call
xor
dec
push
push
int3
or
into
ss
ret
movsb
push
xor
das
cmpsl
sbb
xor
and
or
pop
loopne
or
jo
push
dec
addb
into
add
and
lret
sub
ds
adc
ret
add
lsl
pop
sahf
and
mov
ds
test
hlt
in
movl
add
add
dec
xchg
int3
jne
mov
cmp
sub
cmp
mov
enter
pop
add
pop
push
negb
enter
insb
adc
add
add
xor
cmp
inc
mov
orl
mov
sbb
nop
lock
addb
and
inc
stos
lock
je
int
es
push
and
dec
push
or
cmpsb
cmp
jp
and
inc
push
int3
fistl
pushf
fs
je
and
xchg
insb
jle
adc
cmpsb
movsb
xor
pop
pop
adcb
sarb
ds
dec
cltd
lret
push
xchg
and
cmc
es
adc
loopne
call
push
fs
sbb
xor
sub
inc
and
mov
and
and
add
imul
jo
sub
leave
sahf
mov
test
fmul
jo
pop
add
push
push
cmp
push
jno
sbb
add
add
and
sub
test
int3
pop
iret
data16
inc
sub
add
iret
pop
mov
mov
lods
xor
or
lcall
jo
nop
xchg
js
aam
push
xor
es
mov
call
je
movsb
mov
orl
ret
mov
cmp
push
or
je
sub
add
push
call
stos
or
and
dec
add
adcb
and
xchg
fstpt
sbb
rolb
fsub
cmp
add
xchg
hlt
dec
or
cwtl
rol
adc
and
xchg
movb
jbe
xor
shlb
add
sub
mov
popa
sub
push
adc
or
and
jb
xor
push
and
lcall
loopne
mov
mov
adc
ret
sbb
pop
xor
push
test
loope
xchg
cmp
cs
test
lods
sub
or
push
les
cli
dec
ror
int3
mov
fs
lods
das
xchg
int3
and
or
push
pop
xor
fwait
xor
js
adc
ret
sub
addr16
mov
scas
sub
push
xchg
js
pop
sub
push
call
push
js
popa
jp
loop
push
cmp
pop
mov
sbb
stos
xchg
data16
pmuludq
subb
inc
insb
xorb
addb
jo
or
fwait
add
rcl
jno
xchg
fcoml
shlb
shlb
adc
jo
pusha
adc
mov
adc
xor
es
pusha
inc
iret
xor
mov
cmpsb
add
stos
mov
adc
mov
or
push
sbb
add
sbb
adc
inc
hlt
mov
inc
adc
pop
pop
les
loope
cs
pop
pop
in
hlt
inc
addb
inc
dec
cld
int3
and
je
add
aam
sub
dec
xchg
ret
pop
and
push
mov
lods
add
cmpsl
pop
adc
add
jbe
mov
sub
adc
sbb
xchg
dec
lret
sub
adc
shll
sbb
lea
mov
sbb
scas
into
andb
pop
int3
pushaw
push
mov
pop
xchg
enter
add
push
subb
add
out
aam
stc
or
or
or
adc
mov
ljmp
adc
dec
orb
repnz
pop
push
stos
adc
xchg
lret
mov
fadds
andb
scas
out
in
inc
loop
push
pushf
rclb
mov
inc
aam
std
xor
cwtl
add
sbb
or
insb
jo,pn
xchg
mov
ss
mov
pop
or
and
leave
push
sub
scas
and
sbb
clc
dec
rcrb
in
ror
movsl
and
test
insb
pop
roll
mov
enter
mov
sub
insl
in
pop
std
sbb
add
or
ds
inc
add
pop
push
jl
and
fsts
loop
dec
and
push
les
lods
cmpsb
mov
lock
lds
ret
push
xchg
arpl
data16
or
xor
sub
add
push
data16
add
or
test
xchg
mov
cld
aam
sub
mov
dec
xchg
dec
daa
mov
lods
pushf
add
xor
xor
push
fsubs
xor
cmp
lea
sub
dec
pop
jl
sbbb
xor
push
dec
sub
inc
shrl
nop
sub
outsb
ret
add
scas
xor
inc
sbb
and
pusha
js
sbb
sub
in
push
xor
lds
mov
in
push
xchg
test
add
icebp
xchg
mov
push
sarb
sbb
aam
loopne
lds
inc
or
lods
fsubr
push
xchg
mov
sbb
pop
xchg
mov
fsts
leave
sub
dec
and
test
jg
dec
inc
sub
dec
outsb
sbb
xor
les
dec
sbb
adc
pop
inc
adc
lret
pop
push
test
pop
repnz
ss
dec
leave
xor
or
shlb
and
ret
dec
or
and
pop
inc
push
test
cs
push
fcomps
scas
xor
xchg
aam
sub
lret
push
test
pop
dec
mov
sub
and
xchg
sbb
xor
dec
mov
dec
inc
inc
xor
cmp
adcb
mov
mov
pop
sbbb
sub
adc
pop
xchg
data16
adc
xchg
or
sub
xchg
rclb
adc
or
roll
adc
out
inc
shlb
dec
movsb
in
sub
and
and
sbb
mov
cmpsb
addb
fsubs
xor
insb
add
popa
mov
push
mov
imul
test
aam
xor
movsl
xor
cli
sub
add
pop
pop
or
xor
nop
in
add
add
adc
enter
mov
mov
mov
shrb
test
push
add
rclb
cltd
lea
rorb
xorl
daa
stos
xor
stos
cli
mov
loop
mov
or
dec
mov
sub
rolb
shrb
sub
callw
push
add
roll
ret
les
hlt
mov
push
jbe
inc
push
jge
movsb
dec
inc
push
cmp
repnz
inc
mov
jae
hlt
xor
or
sub
lock
enter
xor
mov
imulb
sub
fsubr
fadd
scas
cmp
cmp
dec
pop
sti
add
rol
pop
fldl
cld
dec
imul
push
add
movsl
or
sbb
or
push
push
clc
push
cld
and
add
pushf
pop
xchg
movsb
push
insl
or
lea
inc
pusha
sbb
jmp
outsb
filds
xlat
enter
mov
dec
shrb
inc
sti
xchg
xor
les
push
mov
inc
fsubs
and
insb
add
loopne
nop
fs
jno
cmpsb
sub
xchg
addl
hlt
ljmp
sub
inc
xor
adc
dec
add
sbbb
or
dec
xor
cli
jl
arpl
jo
mov
push
shl
mov
fs
dec
clc
decb
dec
sub
ljmp
movsb
leave
hlt
xchg
push
loope
outsb
jp
pop
and
sbb
xor
xchg
mov
push
sbb
dec
je
lcall
or
ljmp
mov
pop
mov
and
inc
sbb
push
cli
dec
xchg
add
and
mov
test
les
lods
and
xchg
fsubl
add
sub
push
xchg
fistpll
or
pusha
dec
stos
or
inc
pop
mov
mov
adc
dec
cmp
inc
fcomps
inc
cmpb
adc
dec
and
pop
andl
sti
sub
enter
test
pop
push
es
in
clc
xchg
adc
xorb
or
mov
lods
adc
or
xor
sub
pop
push
dec
lods
mov
faddl
mov
dec
inc
pushf
xchg
clc
pusha
xor
lods
sahf
jb
ret
inc
adc
aam
enter
and
adc
addb
xor
rorb
dec
pushf
jo
loope
add
mov
xchg
aaa
add
xchg
ret
sub
ret
enter
mov
lock
bound
inc
mov
bnd
or
shlb
jg
push
mov
ss
sbb
xchg
adc
js
in
in
add
mov
sahf
jg
test
adc
inc
mov
sub
add
inc
dec
add
lret
rol
xor
stos
pop
dec
leave
jl
aam
push
lret
or
call
push
add
jle
in
mov
xchg
mov
xchg
or
and
adc
xlat
push
cmp
pushf
jo
ret
add
cltd
push
call
test
pop
add
push
and
inc
and
xchg
lcall
mov
leave
adc
or
mov
std
insb
pushf
sub
or
in
push
lds
or
subb
adc
dec
popa
or
shl
sbb
jb
adc
enter
and
cmp
add
outsb
dec
sbb
in
or
dec
mov
nop
xchg
push
mov
loop
xor
dec
jb
nop
test
cmp
xlat
sub
roll
test
mov
lock
xor
pop
inc
pop
or
notb
sbb
addl
out
lods
add
and
mov
mov
add
and
lods
xor
sbb
jno
mov
push
pop
es
clc
mov
popf
xchg
pop
mov
call
test
or
test
push
test
add
adc
lret
lods
push
sbb
pop
dec
ffreep
add
loopne
loopne
mov
push
and
pop
add
test
cmp
push
push
leave
or
out
out
push
and
jo
bound
pop
fidivl
sbb
sbb
inc
xor
adc
test
add
dec
lea
add
dec
pop
fcmovu
test
imul
dec
test
cmpsl
xor
pop
mov
inc
into
aam
add
inc
inc
dec
push
adc
in
xor
xchg
loop
adc
in
leave
xlat
dec
mov
pop
push
add
and
addb
mov
orb
xor
dec
cmp
cwtl
mov
xchg
add
push
movsb
movsb
ret
imul
pop
mov
mov
pop
pop
adc
sbb
jp
mov
cmp
incb
mov
mov
add
js
fs
cmpsb
pop
imul
clc
pushf
adcb
pushf
mov
sub
ss
adc
mov
dec
ror
dec
inc
add
xchg
rorb
mov
or
cs
bound
mov
cmpsl
and
mov
xchg
aam
test
aas
sub
lret
in
xor
jne
inc
cld
out
cwtl
sub
sub
adc
sub
mov
subl
cwtl
or
and
hlt
imul
call
out
or
pop
mov
lcall
stos
add
lds
xor
ret
push
ljmp
push
sbbb
mov
cmp
add
lret
mov
add
repnz
jp
adcb
test
mulb
and
xor
or
adcb
or
and
loop
jp
xor
shl
mov
inc
adc
inc
xchg
inc
xor
and
adc
lods
mov
addb
mov
inc
leave
and
je
xchg
adc
mov
push
cwtl
mov
mov
bound
and
or
xchg
fs
push
jo
sub
dec
es
sbb
cwtl
inc
rcl
xchg
pop
mov
and
inc
inc
sbb
inc
mov
xchg
inc
imul
ljmp
dec
push
les
or
cmp
ror
and
adc
je
dec
push
mov
mov
inc
jle
adc
daa
mov
test
shll
fcompl
lds
add
cmp
xor
sbb
push
shl
addl
or
je
or
cs
loop
and
push
add
and
inc
add
push
dec
test
dec
or
lods
inc
add
loopne
mov
sub
js
fiaddl
sub
rcll
addb
sub
jle
pop
and
dec
xor
loopne
cmp
sbb
ljmp
movsb
mov
xchg
push
jb
ret
adc
xorl
lods
add
mov
or
adc
xchg
fwait
adc
aam
xor
push
adc
shrb
and
data16
bound
push
push
or
test
cs
cmp
mov
js
sbb
or
pop
rorb
jnp
andb
out
push
mov
cmpsb
dec
or
push
adc
loopne
and
push
mov
js
jo
mov
dec
push
mov
xchg
and
inc
push
mov
xor
sub
dec
cmp
xor
loop
cld
sarb
pop
cld
xchg
inc
test
inc
mov
sbb
pop
sbb
rclb
pushf
shlb
sbb
fsubrs
aam
add
inc
movsb
sbb
pop
in
js
mov
fidivrl
or
mov
push
dec
or
push
sbb
mov
mov
sahf
xor
sub
adc
rdmsr
pop
out
mov
test
mov
rolb
adc
es
js
test
sub
in
adc
fcoms
or
sbb
inc
push
iret
xchg
sbb
inc
les
jp
addb
mov
push
sbb
sub
lds
add
and
test
and
lds
xchg
dec
push
xor
adc
adc
mov
and
push
test
jp
mov
sub
and
or
cmp
xchg
leave
mov
dec
mov
and
fsubrl
adc
inc
sub
scas
call
mov
scas
adc
sbb
lret
add
or
push
leave
dec
es
pop
stos
or
ss
and
bound
adc
leave
mov
cltd
cmc
sahf
test
ljmp
xor
iret
xor
xor
xor
movsl
add
out
out
pusha
sub
aam
push
dec
popa
pusha
push
jl
adcl
pop
jle
repnz
mov
push
add
out
mov
dec
or
adc
or
or
arpl
leave
inc
inc
loopne
data16
or
inc
test
push
push
fcompl
ret
ss
add
jl
jp
sub
add
movsb
mov
es
mov
sub
mov
nop
sahf
rorb
pop
data16
adc
and
loopne
add
loop
or
test
bound
fdivrl
cs
jle
sub
cmpsb
adc
adc
call
nop
divb
clc
stc
xor
imul
jae
push
ficoml
push
mov
out
fcom
inc
lahf
pop
imul
push
add
mov
jae
test
sub
test
or
in
mov
cwtl
push
adc
dec
push
in
add
cwtl
adc
mov
or
insb
cld
and
inc
lock
daa
inc
je
dec
mov
sbbb
lods
cmp
or
xchg
cmp
dec
mov
adc
dec
outsb
or
push
rclb
shrb
cmp
jb
inc
xor
int3
sbbb
mov
and
add
mov
add
test
cli
xchg
push
jo
push
int3
or
pop
mov
adcb
mov
sub
inc
cwtl
ret
jbe
mov
pop
adc
or
in
inc
adc
jp
mov
push
dec
xor
dec
popa
aam
cmpsb
inc
adc
xor
punpckhbw
mov
fidivrl
lret
outsb
rcll
or
mov
or
shrl
dec
test
adc
rcrl
addb
fs
mov
mov
bound
test
jle
push
push
pop
popf
andb
mov
add
pop
xorb
dec
or
lock
xor
jb
pop
jbe
ficoml
data16
movsb
and
sbb
xchg
test
test
add
jl
leave
leave
mov
lods
sbb
call
jmp
les
dec
inc
push
dec
push
out
pop
mov
fcoml
xchg
test
pusha
xor
dec
mov
or
loop
dec
leave
and
mov
out
pop
add
scas
mov
adcb
mov
cmp
push
jg
or
and
out
pop
sub
inc
cmp
inc
gs
in
or
mov
rorb
dec
hlt
pushf
js
xor
orb
sub
iret
pop
pop
ret
mov
push
xor
or
dec
call
push
inc
out
adc
mov
in
push
es
sub
mov
jle
inc
test
pusha
or
and
add
sub
call
xchg
push
mov
adc
jl
mulb
adc
xor
jo
int3
add
xor
pop
inc
mov
int3
jb
mov
nop
pusha
es
xchg
dec
add
sbb
add
orb
or
mov
mov
inc
inc
cmp
mov
rorl
push
lret
xchg
add
add
sub
inc
push
cmp
adc
addb
inc
popa
and
push
gs
lock
mov
sub
inc
dec
rorb
aam
adc
enter
dec
and
pop
cs
inc
xor
call
sub
les
xchg
into
adc
xchg
test
xor
aam
xor
push
push
cmp
sbb
test
push
les
add
sub
cmpsl
loopne
hlt
xor
add
addl
push
cld
pop
das
dec
dec
ret
lods
inc
xchg
or
movsb
clc
xor
incb
call
sub
ljmp
pop
xor
fimuls
or
mov
push
mov
inc
add
jg
and
ret
mov
dec
loopne
loop
mov
cld
cwtl
push
dec
test
xorl
scas
ljmp
push
add
std
mov
dec
dec
mov
sbbb
or
mov
push
enter
pop
add
je
or
popa
mov
xchg
cwtl
dec
or
mov
in
fcmovb
lods
bound
mov
xor
ss
push
orb
sub
push
ret
add
cmp
sbb
sbb
inc
mov
mov
add
adc
sbb
adc
jp
dec
dec
mov
es
ret
add
js
cmp
xor
cmp
adc
arpl
push
or
inc
add
and
cmp
mov
mov
push
hlt
adc
popa
jne
sbb
clc
shlb
sahf
js
and
inc
enter
add
mov
and
icebp
rcrb
dec
leave
push
mov
loope
lods
dec
stos
add
xchg
push
mov
mov
push
cmp
sar
iret
imul
xor
jo
cmpsb
insb
push
inc
push
push
sbb
mov
adc
cmp
mov
adc
or
pop
ljmp
sbb
pushf
mov
int
adc
mov
repz
sub
jne
imul
repnz
add
push
or
inc
pop
pop
push
or
add
mov
jbe
orl
leave
jle
cmpsb
mov
mov
cmpsb
fdivl
out
xchg
or
mov
mov
sarb
and
ret
ret
mov
nop
pop
into
adc
sub
add
add
inc
clc
adcb
or
mov
in
and
push
ss
sbb
push
fs
and
inc
mov
adc
push
ljmp
adc
inc
inc
sub
test
inc
cmp
enter
mov
cltd
lea
jmp
sbb
dec
push
test
xor
sub
rcrl
test
movhlps
lods
dec
inc
dec
outsb
jl
jp
jb
push
mov
js
push
enter
rcll
ret
pop
jp
sbb
mov
rcll
test
adcl
mov
xchg
adc
or
clc
mov
cltd
jl
into
jo
xchg
xchg
dec
adc
rol
mov
decb
js
and
jbe
imul
fisttps
add
push
test
add
ljmp
cmp
dec
sbb
xchg
test
test
mov
jle
xorb
xor
test
std
add
cmpsb
push
or
loopne
adc
dec
xchg
mov
and
cli
data16
mov
sub
idivb
push
mov
je
cmp
cs
xlat
dec
or
xchg
or
adc
cmp
rclb
pop
add
subb
xor
add
xchg
and
push
dec
mov
jb
pop
sbb
or
push
jge
add
cmp
dec
add
mov
inc
adcl
imul
sub
cwtl
cmp
jo
push
inc
fs
xchg
adcb
xor
push
testb
call
cld
iret
shr
xor
in
add
and
mov
or
call
sbb
dec
or
sub
xchg
adc
fs
dec
jo
push
cmp
mov
dec
cmp
xor
mov
push
dec
or
push
cmpsl
mov
xor
add
sahf
mov
iret
pusha
and
fimuls
or
mov
inc
sbb
loop
clc
das
mov
jp
push
adc
jb
xchg
enter
xor
xchg
in
cli
xor
out
pop
adc
cwtl
jp
sub
dec
sbb
xchg
loop
jo
push
or
lods
in
ljmp
jle
dec
lahf
subb
push
inc
and
or
mov
mov
adc
lcall
in
mov
jecxz
rclb
cmp
sbb
movsl
cmp
mov
and
in
adc
sbb
push
jo
pusha
cld
ret
sbb
inc
shrb
cwtl
jb
inc
mov
dec
and
outsb
jp
loopne
mov
push
push
add
push
dec
insb
mov
sahf
xchg
sbb
es
or
or
into
and
push
subb
xor
adc
popa
xor
sub
adc
inc
cmp
int3
nop
jno
or
loopne
xor
add
inc
sub
sbb
xor
test
sub
mov
fidivl
sbb
ss
mov
lret
inc
dec
stos
cwtl
test
pop
push
mov
fs
sub
fmul
push
stos
pop
dec
inc
cmp
add
mov
add
jge
push
push
adc
mov
stos
mov
addl
fs
fs
push
adc
add
popf
push
enter
cmpsb
mov
enter
sahf
lret
cmpsb
and
pop
and
leave
and
inc
rclb
mov
andb
dec
or
sbb
lret
jb
sub
test
xor
sbbb
out
sti
jl
mov
push
test
sub
add
jge
and
push
mov
cmp
out
cmp
inc
sub
push
sbb
sbb
inc
add
xchg
repz
add
push
mov
and
xor
xchg
add
leave
sub
or
ret
pop
mov
sbbb
scas
ret
sbb
and
mov
or
push
outsb
and
bound
cld
sbb
push
push
insb
mov
or
iret
aam
xchg
jbe
adc
xchg
push
sub
xchg
or
fs
les
movsl
pusha
xchg
adc
cmp
xchg
sub
les
lar
sub
or
pop
in
in
in
push
xchg
fsubrl
cmc
mov
scas
es
out
jns
sub
jl
aaa
cs
call
loope
mov
or
or
int3
xorl
push
out
jae
cmovo
push
xor
dec
outsb
add
push
add
pop
xor
out
ficompl
loopne
jp
nop
arpl
mov
push
test
adc
loopne
lock
add
pop
mov
aam
mov
dec
adc
sub
dec
xchg
lock
jl
or
push
nop
adc
inc
push
int3
nop
mov
jno
in
lock
push
addb
ss
mov
mov
add
push
fcoms
add
aam
enter
fs
cli
pushf
adc
adc
xchg
popa
shrb
aaa
adc
adc
dec
xor
jle
ret
mov
pop
jo
popa
andb
lcall
enter
fcoms
and
push
fidivl
outsb
inc
cmpsb
xchg
add
mov
vmwrite
xor
sub
out
popf
push
movsb
dec
inc
push
xor
pushf
fiadds
inc
adc
or
js
xor
inc
fisubl
xor
mov
popa
into
popa
aam
adc
push
add
rclb
inc
dec
hlt
enter
stos
dec
jo
cmpsb
adc
out
pusha
fadds
cmp
adc
es
and
jb
and
pusha
ljmp
fs
xchg
lods
xchg
mov
mov
nop
mov
or
mov
test
lcall
ljmp
mov
mov
push
in
test
les
jg
aaa
xorl
cmpxchg
mov
push
pop
pop
scas
or
inc
pop
cmpsb
ss
lods
les
push
push
inc
pop
fmul
cs
in
dec
xor
jle
bound
or
outsl
or
insb
adc
xor
add
dec
push
push
adc
test
sbb
and
xchg
sbb
cwtl
or
mov
insb
sub
push
movsl
or
fiaddl
in
popa
xor
push
rol
add
mov
sub
or
xchg
add
sti
push
int3
adc
sbb
or
adc
add
or
adc
cmp
pushf
ret
xor
repnz
xchg
dec
jo
dec
in
bound
pop
cmp
data16
subb
les
add
mov
push
int
sub
repnz
sbb
and
lcall
xor
adc
rcrb
dec
sbb
inc
dec
adc
sahf
ss
test
sbb
adc
outsb
dec
nop
test
mov
pusha
ret
scas
cld
roll
subb
mov
xor
push
lret
push
addb
inc
gs
pushf
les
cmpl
dec
inc
inc
cmpsb
push
ss
mov
scas
push
add
pop
les
cmp
xor
xor
call
adc
sbb
and
sub
and
pop
xchg
sbb
ficomps
sub
xor
mov
outsb
pushf
aam
and
add
cmp
and
mov
movsb
in
int3
fs
les
js
pop
inc
jg
sub
and
pop
or
je
pusha
and
inc
adc
cli
dec
gs
lret
shl
roll
xor
push
sbb
div
cltd
lret
jp
mov
or
addb
push
lret
jne
or
int3
je
cltd
jp
push
add
xor
int3
loopne
or
sub
adc
fs
xor
or
mov
lea
push
adc
add
mov
jbe
daa
or
jl
imul
or
adc
or
inc
movsl
mov
mov
dec
xchg
jo
sub
xchg
rorb
or
or
or
push
xchg
cli
in
rol
pop
orl
cmp
mov
ret
cmp
pusha
ss
add
outsb
int3
pushf
xchg
int3
shrb
movsb
xchg
ds
cwtl
sbbb
xchg
sub
pusha
insb
ret
fdivrl
addb
inc
fiadds
mov
push
test
push
add
pop
jb
gs
outsb
add
pop
inc
iret
pop
inc
ror
xor
pop
cs
cs
sub
xchg
test
addb
cmp
push
loopne
inc
nop
dec
jne
add
mov
sub
push
xchg
ss
cmp
push
pop
sub
pop
push
push
scas
in
cwtl
popa
dec
popa
test
push
mov
add
mov
sub
mov
in
sbb
out
mov
fadds
popf
dec
test
mov
jecxz
xchg
inc
sbb
jo
sbb
jecxz
flds
fnstcw
insb
mov
push
inc
rclb
inc
jb
movsb
adc
sub
rolb
mov
mov
sbb
aam
mov
ficoms
adc
pusha
or
fmuls
rolb
sbb
rcr
xchg
fadd
add
insb
sbb
fbld
movsl
xor
sub
or
cmpsb
xchg
adc
mov
test
pop
cs
xor
and
pop
ret
das
mov
inc
mov
and
pusha
or
cltd
sub
and
xchg
pop
or
or
sahf
push
mov
nop
mov
xor
out
adc
mov
clc
je
or
leave
sub
sub
sub
xor
rorl
sar
nop
xchg
rclb
mov
mov
mov
dec
sub
xor
rolb
xchg
cld
adc
add
sub
lret
add
sbb
addl
push
mov
into
nop
push
adc
loop
add
mov
dec
inc
add
push
jmp
xor
enter
les
shlb
lds
sub
adc
xchg
mov
and
sub
push
loope
add
loopne
push
xchg
add
aam
or
pusha
xchg
nop
mov
enter
pop
arpl
mov
fs
sbb
jb
push
shlb
add
sub
add
ret
jno
mov
movsb
inc
jbe
in
adc
jle
pop
aam
jl
ret
sahf
sub
push
pop
add
and
or
mov
fs
mov
iret
sbb
dec
aam
sub
pop
jp
lods
faddl
inc
shlb
sbbl
push
fiaddl
mov
ret
cmpsb
loop
push
or
test
add
pushf
jmp
mov
dec
sub
sahf
pop
sbbb
scas
or
sbb
mov
aaa
or
lds
xchg
enter
mov
mov
push
push
in
xor
xor
and
xchg
and
inc
or
dec
add
adc
dec
cli
sbbl
push
dec
pop
sbb
push
cmp
leave
pop
jo
adc
pop
mov
or
jge
xor
fs
and
fcomps
dec
fcomp
gs
int3
and
sbb
sub
sbb
jp
lret
inc
xchg
and
or
rcrb
mov
dec
xchg
addl
sahf
cmp
xchg
lret
dec
lods
inc
inc
dec
ret
cmp
bndstx
cmp
pop
or
inc
or
xchg
mov
lods
out
lret
mov
mov
jo
orb
mov
inc
adc
pusha
or
add
ljmp
jp
rorl
sub
negb
orb
ret
mov
cmpsb
pop
int3
adc
cmp
mov
adc
jo
mov
pop
loope
xchg
enter
adc
cmp
stos
sub
jg
sub
rclb
test
add
arpl
repnz
leave
lcall
rolb
pop
ds
cmp
add
push
xchg
push
add
add
add
test
xchg
push
push
andb
sub
and
mov
or
push
mov
cmp
xor
push
je
int
add
lock
cli
pusha
dec
cmp
dec
pushf
je
inc
je
adc
sbbb
call
add
push
loopne
and
fsubs
in
test
add
shrb
inc
adc
dec
mov
leave
sub
sbb
pusha
xor
adcb
lcall
fcoms
pushf
or
in
pusha
adc
sub
nop
xchg
mov
cltd
pusha
xor
jp
fisubrl
mov
mov
test
add
add
out
fs
push
test
jbe
mov
add
dec
mov
int3
and
cmpsb
inc
xchg
xchg
in
repnz
jp
pop
pop
add
mov
push
lret
xchg
rcr
mov
add
dec
adc
sti
adc
pop
cmp
push
jae
pop
add
faddp
adc
adc
js
lret
adc
call
stos
add
dec
loope
pop
lret
push
add
or
push
push
mov
inc
cli
xchg
hlt
es
lock
mov
sub
iret
cli
shlb
push
movsb
test
dec
mov
xchg
mov
inc
mov
sbb
mov
adc
enter
dec
mov
enter
fs
dec
push
into
mov
and
loop
clc
pop
push
add
ret
push
insb
inc
and
xorl
xor
xchg
cltd
or
xchg
enter
ret
enter
loopne
mov
push
out
test
xchg
inc
push
in
adc
mov
test
out
rolb
mov
sbb
in
pop
fs
pusha
cmp
in
add
xor
faddl
push
movb
mov
jae
es
rcrb
popa
mov
or
in
test
adc
sub
sub
xchg
adc
dec
lods
js
or
and
jp
jo
mov
test
xchg
jge
iret
jle
cwtl
xor
call
xor
mov
dec
adc
add
sbb
sub
push
mov
sub
stos
add
fbstp
and
inc
popa
data16
shl
lcall
push
in
enter
js
xchg
inc
sar
cmp
or
in
lods
and
adc
dec
aad
pop
shl
rclb
pop
add
pushf
mov
mov
test
and
adcb
push
push
cmp
adc
cwtl
loope
mov
pop
and
push
cwtl
in
xor
pushf
push
cmp
hlt
in
mov
jg
add
fisubrs
mov
bound
and
or
hlt
dec
push
dec
push
shll
pop
cmp
clc
mov
enter
mov
xor
in
dec
enter
loope
add
fisubrl
and
faddl
popa
mov
jmp
int
mov
adc
cmp
int3
xor
pop
pop
ret
adc
mov
add
xchg
mov
je
inc
cltd
adc
lret
imul
loop
xor
rcll
loop
sbb
mov
and
add
adc
inc
mov
pop
scas
cmpsb
cmp
jb
das
sub
nop
pop
lea
sbb
push
adc
mov
push
mov
jne
test
nop
mov
xor
lret
lods
cwtl
push
or
fmull
mov
push
xchg
ljmp
sbb
aam
xor
adc
and
adcb
pusha
loopne
and
imul
or
jo
sbb
pusha
xchg
pop
xchg
ret
sub
sub
hlt
orb
pop
sbb
or
jbe
pop
inc
lods
add
sub
pop
or
add
xor
std
mov
fsubrs
aam
insb
adc
mov
daa
xor
xor
cmp
inc
jecxz
mov
es
int3
cs
inc
mov
jmp
in
stos
dec
xor
mov
aam
mov
jae
fimuls
out
xor
sub
xorb
jp
or
test
and
or
mov
mov
xchg
push
or
inc
test
pusha
cltd
mov
xchg
push
xorb
add
mov
jno
or
xorb
xor
and
sarb
popa
push
push
popf
push
jbe
enter
nop
data16
xor
and
push
es
xor
sub
fs
les
pop
ja
loop
addb
sub
js
inc
adc
mov
shlb
test
mov
int3
push
popf
dec
cmp
sahf
ss
les
mov
push
xor
and
push
sub
ret
in
xor
or
xchg
nop
inc
add
and
inc
inc
mov
add
and
add
pushf
sbb
xchg
mov
cmpsb
inc
and
inc
dec
lret
sarb
xchg
sbb
mov
subb
cmp
rorb
xchg
pop
ficoml
add
test
subb
rolb
call
xchg
mov
je
dec
in
call
clc
dec
sbb
in
inc
cmp
aad
adc
cmp
sub
sbb
add
dec
sub
loop
pop
inc
into
and
aad
or
pusha
sti
les
or
sahf
aam
stos
add
add
sbb
mov
and
les
sahf
rorl
push
add
jb
test
test
mov
xor
je
push
cmp
mov
push
enter
aam
push
pop
fisubrl
add
add
dec
mov
adc
pop
pusha
sub
fsubr
push
xchg
dec
mov
call
mov
scas
mov
nop
sbb
jo
mov
out
test
add
lods
mov
dec
sbb
adc
add
cltd
sahf
faddl
leave
push
lcall
jbe
call
mov
jp
mov
shll
push
or
and
dec
inc
cmp
cld
and
cmp
test
sbb
fidivrs
mov
xor
aam
pusha
mov
pop
cs
js
movsb
decb
mov
adc
inc
in
xchg
and
les
scas
addl
loopne
dec
add
loopne
cmp
xchg
test
ret
inc
cwtl
jbe
cli
mov
sub
sbb
pushf
pop
add
mov
cli
inc
imul
stos
lret
popa
cmp
pushf
movsb
lock
push
loop
lret
sub
push
enter
jmp
or
dec
insb
es
dec
or
mov
inc
cwtl
in
out
roll
enter
pusha
adc
cmp
es
nop
push
in
and
aaa
in
inc
filds
int3
sub
mov
or
xor
movl
mov
dec
xor
test
and
nop
add
push
mov
push
pop
aam
or
mov
nop
or
jl
push
sbb
js
enter
sub
ret
adc
fdivl
enter
push
dec
fdivl
daa
out
pop
adc
sub
ret
mov
push
push
nop
pop
mov
dec
add
push
mov
rcrb
sahf
int3
push
add
xor
cwtl
decb
xchg
mov
mov
jp
dec
mov
mov
rolb
aam
in
push
inc
add
pop
sub
int
xor
lods
cld
pop
js
int3
popa
rolb
jle
rclb
add
leave
sub
es
andb
addb
inc
sub
lret
or
add
pop
push
sbb
jo
leave
or
cmc
out
sti
cmp
mov
pushf
js
sbbb
and
lcall
mov
test
dec
in
mov
sbb
xor
add
pushf
push
sahf
sub
dec
inc
ret
adc
out
push
push
loopne
mov
rclb
jp
js
inc
push
or
rcll
xor
dec
div
xchg
add
adc
push
lret
mov
adc
xchg
or
sub
mov
dec
jo
add
dec
xor
rorb
adc
lds
loopne
adc
call
pop
jp
pop
mov
es
loop
adc
clc
xor
or
add
add
dec
mov
orl
sbb
add
inc
pop
xor
push
mov
loopne
mov
imul
pushf
dec
loopne
sbb
xor
lret
xor
add
insb
loopne
pop
adc
and
rcrb
push
pop
nop
sub
and
xor
cmp
fs
cmp
rolb
leave
sbb
testb
orb
cmp
adc
test
dec
pusha
insl
stos
pushf
call
sub
jo
lcall
scas
xchg
add
add
hlt
mov
cmp
sub
dec
jl
xor
push
mov
cwtl
cs
mov
xor
or
and
or
lea
cmp
mov
jb
ret
push
fsubr
push
sbb
push
lds
push
push
test
or
sub
pusha
loope
or
xchg
mov
add
jg
sbb
jae
in
or
jne
push
sbb
cmp
and
xor
insl
out
hlt
fldenv
gs
push
adc
sub
xchg
ss
cmp
sbb
lods
call
pusha
inc
out
lods
bound
dec
in
shlb
clc
in
sub
or
lods
les
mov
push
rolb
pop
insb
add
inc
push
sub
add
loopne
push
sub
push
mov
mov
insl
shlb
rcll
dec
adc
push
sub
adc
inc
add
sarb
inc
pop
pop
xor
mov
inc
cmp
adc
sbb
scas
hlt
xchg
xor
inc
and
in
or
or
aam
enter
cmp
loopne
mov
daa
inc
and
add
aam
add
add
add
addr16
es
sub
mov
mov
bound
push
into
push
mov
jle
inc
mov
aam
sub
scas
or
inc
dec
es
inc
mov
dec
jp
add
xor
xorb
les
cwtl
inc
xor
mov
ret
add
or
mov
dec
inc
ds
add
cld
insb
bound
test
push
nop
enter
add
push
fs
stos
in
sub
call
fs
add
test
inc
das
mov
das
xorb
sub
add
push
push
nop
push
xchg
jp
push
push
push
mov
in
andb
push
mov
lock
cmpsb
mov
or
inc
enter
loopne
dec
push
adc
iret
add
xchg
ret
push
xchg
shll
add
pusha
or
cs
push
mov
cwtl
ret
movsb
ret
std
xor
adc
dec
or
xchg
add
sub
adc
orb
mov
add
add
cmp
inc
push
mov
sub
mov
call
dec
mov
xchg
sbb
fadd
sub
lret
ficompl
xor
pop
lret
jecxz
adc
aam
adc
jbe
sub
xor
dec
int3
add
add
mov
mov
and
add
decb
cwtl
jo
or
fs
mov
sbb
add
inc
div
lcall
adc
sub
mov
xchg
fisubrl
aam
pusha
rcrl
inc
fsubrl
std
les
test
add
adcb
rolb
mov
rclb
inc
cmp
mov
dec
push
or
pusha
sbb
jo
sahf
pop
int3
or
leave
out
mov
add
dec
dec
push
pop
or
enter
mov
sbb
jno
lds
movsb
xor
ret
loopne
sbb
andl
pop
inc
add
inc
cvtpi2ps
push
pop
mov
or
insl
sbb
imul
lret
mov
xor
scas
dec
out
lods
sbb
sub
mov
nop
cwtl
fisubrl
adc
jb
sub
push
aam
jb
bound
cmp
or
dec
add
or
sub
adc
imul
leavew
je
daa
movsl
bound
sarb
xchg
test
roll
pushf
notb
or
xchg
lods
adc
xor
sub
and
lea
sbb
mov
ss
sbb
es
cwtl
mov
add
rorl
and
movsb
pop
insb
dec
out
sahf
inc
vdivsd
push
test
dec
jge
push
adc
test
std
xchg
push
add
or
adc
sub
lea
mov
sub
xor
or
pusha
xchg
ret
test
inc
cli
add
push
insb
push
sub
inc
ss
xchg
push
ret
xchg
adc
test
fdivrs
divb
add
inc
mov
ret
xor
fs
mov
stos
xorl
les
mov
adc
mov
push
dec
or
ret
cli
xor
mov
xor
xorb
cwtl
mov
dec
dec
test
push
fistpl
push
push
inc
inc
test
dec
rolb
mov
cwtl
fs
xchg
rclb
dec
or
mov
and
and
and
sub
ret
dec
jbe
lret
sub
insb
cvtps2pd
adcb
mov
pop
and
cmp
add
sti
stos
sbb
pushf
orl
sbb
jno
pop
mov
xchg
fs
push
dec
loop
and
lock
adc
jmp
rol
test
pop
cmp
sub
cmp
in
add
mov
sbb
or
data16
mov
popa
test
ret
mov
std
and
int3
imul
sub
orb
jbe
jo
xchg
test
mov
jbe
mov
mov
fidivs
mov
cmp
test
pop
push
inc
inc
or
pushf
xchg
push
pop
and
les
adc
fucomp
lds
sub
int3
dec
sbb
and
inc
jl
cmc
test
call
sub
pop
jo
mov
adc
sub
or
dec
aam
dec
shll
test
xor
sub
adc
shlb
sahf
mov
xchg
ret
push
xchg
add
inc
mov
add
xor
dec
inc
les
and
sbb
cwtl
loop
cmp
in
cmpl
xchg
and
stos
pop
add
pusha
pop
addl
movsb
xor
dec
movsb
dec
cmpsb
mov
xchg
sub
rolb
xor
push
rcl
sbb
dec
or
test
mov
jbe
push
xchg
mov
pop
xor
adc
sub
aam
cmpsb
jo
adc
add
sub
mov
dec
mov
push
cmpl
pop
push
xchg
js
mov
xor
and
push
pop
aam
xchg
inc
xor
or
inc
sub
fs
mov
lods
pusha
mov
fdivs
test
cmp
cwtl
call
push
mov
es
or
sub
pop
xchg
push
inc
jb
sbbb
push
pop
adcb
pusha
aam
add
xchg
adc
dec
mov
add
xor
xor
addb
jp
les
insb
sbb
jo
add
pushf
mov
ss
mov
adc
pop
fnstenv
notb
ds
adc
add
fcoms
push
dec
push
adc
xchg
sub
sar
decb
jo
xor
nop
lret
mov
and
add
shlb
mov
push
daa
add
add
sub
int
mov
mov
and
or
push
dec
cmp
inc
pop
jle
mov
test
push
push
inc
fdiv
and
lock
orb
sbb
xor
addb
adc
and
inc
or
or
sub
lret
sub
dec
add
lretw
add
adc
adc
fdivrl
adc
jp
jne
js
enter
insl
cmp
add
iret
sub
inc
fs
ds
enter
push
sbb
clc
mov
mov
sub
pop
shlb
test
aam
and
push
sbb
test
lcall
fmuls
pop
inc
and
inc
xchg
mov
sarb
inc
dec
push
ret
fsubrs
loopne
inc
xchg
cld
push
add
or
or
data16
addb
rcrb
ret
and
adc
xchg
lods
xor
or
dec
inc
sbb
push
pinsrw
adc
and
push
sbb
dec
enter
out
push
dec
pushf
push
or
xor
fidivrs
inc
cwtl
push
sub
or
push
nop
xchg
mov
popa
rorb
push
or
push
lret
push
cmpsb
sbb
xchg
inc
and
and
lea
or
lods
pop
js
xchg
pop
sbb
div
dec
ljmp
test
cmp
shrb
sub
pop
test
test
xchg
test
and
push
cmpb
loopne
inc
inc
ror
xchg
pop
iret
test
adc
cltd
rolb
out
and
fcomps
or
xchg
mov
inc
sbbb
pop
cwtl
add
xchg
leave
or
jle
insb
mov
push
sub
sub
pop
bound
and
add
dec
xchg
fsubl
data16
pusha
inc
lock
xor
sub
inc
subb
mov
fs
push
idiv
scas
xor
aam
dec
xor
fsubl
mov
sbb
pusha
cs
or
push
addb
sbb
mov
sbb
sarb
pop
push
push
data16
sbb
add
pop
into
jb
dec
and
adc
jecxz
js
andb
daa
ret
mov
in
pop
mov
pushf
pop
cs
sbb
cltd
cmp
andl
mov
adcb
orb
rorb
mov
cmpb
shlb
and
or
aam
sbb
xchg
inc
push
movsl
push
xchg
add
and
sbb
cmpb
xchg
and
xor
xor
push
inc
mov
mov
sar
pop
push
sub
add
or
jle
or
iret
pop
push
rolb
test
addb
cmp
insb
mov
sbb
fs
or
mov
push
in
adc
and
fimull
cwtl
cmp
xchg
push
imul
push
xor
xchg
je
fs
or
xorb
lret
int3
insb
mov
sbb
xor
dec
add
mov
inc
push
sbb
bound
add
push
cmp
xlat
inc
sub
je
loope
inc
add
dec
dec
test
add
int3
sub
or
ret
rcl
es
sbb
cmpsb
rclb
xchg
add
js,pn
pop
adc
jbe
in
cwtl
rclb
arpl
sbb
fildll
sub
xchg
ret
adc
inc
jl
xchg
xor
lret
adc
jl
data16
dec
data16
sbb
inc
sbb
in
add
inc
inc
and
in
sub
or
mov
or
mov
mov
push
xor
or
sub
cli
mov
sbb
repnz
nop
add
fs
pushf
loopne
daa
dec
xor
cmpsb
rcl
sbb
or
cwtl
data16
pushf
addb
loopne
sub
xchg
jno
xorb
inc
mov
ret
bound
test
mov
aam
ss
mov
push
xorb
xchg
dec
out
mov
call
or
sub
das
xor
lock
push
push
or
and
xor
xorb
ret
xchg
push
stos
negb
lock
pop
ss
subl
adc
aam
xchg
repnz
sub
enter
and
sbb
xchg
xor
push
sbb
xchg
push
dec
hlt
adc
cmp
rolb
and
ss
or
push
add
xchg
or
into
les
push
movsl
mov
mov
mov
outsb
call
push
outsb
ljmp
dec
addr16
jo
dec
or
nop
in
add
jle
movsl
test
adc
push
mov
test
test
fs
xor
arpl
insb
or
and
mov
adc
pop
push
adc
inc
pusha
addb
cli
xor
test
into
jbe
xchg
mov
mov
jp
inc
fst
enter
adc
fs
js
fs
clc
test
xchg
push
push
xchg
push
jb
add
xlat
or
or
sbb
std
or
dec
or
aaa
mov
dec
pushf
es
add
popa
jo
cmp
es
push
roll
push
adc
sub
sbbb
mov
cwtl
push
cmp
loop
test
movb
jb
xor
dec
inc
cmp
xor
add
fidivrl
clc
mov
inc
mov
inc
test
daa
mov
adc
mov
lods
pop
inc
bound
mov
pushf
fs
mov
out
stos
pushw
ljmp
fmuls
sbb
ljmp
pusha
cmp
push
add
jp
js
xchg
xchg
add
push
idivb
xchg
ret
xor
lock
loop
xchg
shll
loopne
xchg
xor
sahf
and
arpl
add
rorb
jle
or
and
movsb
mov
push
jp
dec
push
push
adc
aaa
cmpb
dec
cmp
cltd
xchg
adc
jno
rorl
sti
add
sbb
imul
jg
enter
outsb
mov
loopne
mov
add
cmp
bound
mov
push
adc
push
sub
sbb
ret
or
je
adc
enter
adc
xchg
cmp
adc
leave
mov
push
mov
jo
jp
xor
sub
js
inc
insl
sbb
inc
sub
or
pop
lret
xor
dec
popa
push
mov
add
sbb
ret
xchg
pushf
ljmp
cmp
add
push
push
pop
pop
and
inc
add
cmp
enter
dec
lock
subb
xor
call
mov
pop
jo
mov
xor
inc
mov
or
andb
nop
jecxz
test
and
push
or
outsb
sub
add
mov
rcr
xor
push
pop
or
add
dec
loope
pop
clc
test
sbb
adcb
lods
add
sbb
and
mov
push
adc
adc
add
xchg
inc
ret
pop
cs
add
add
pop
cmpsb
or
pop
dec
or
test
sbb
inc
fbstp
adc
inc
mov
stos
xchg
add
clc
xchg
aaa
ljmp
xor
lock
xchg
mov
mov
push
xchg
mov
aam
adc
fs
xchg
push
mov
sbbb
jo
inc
lret
ret
xchg
add
into
test
pop
pop
pusha
mov
inc
cld
andb
hlt
xrelease
incb
imul
xor
jbe
sub
and
mov
sbb
pop
adc
xchg
or
hlt
sub
mov
cwtl
cmp
mov
insb
sub
inc
push
pop
mov
and
xchg
pusha
push
or
cmp
jp
adc
xorb
sbb
pop
add
pusha
rclb
test
popa
movsl
les
add
xchg
mov
push
inc
sub
and
testb
jae
gs
enter
push
xchg
xchg
lods
and
or
or
pop
mov
mov
out
push
or
dec
inc
push
mov
mov
mov
rorl
dec
mov
fildl
cmpsb
xchg
data16
adc
dec
jo
movsb
ret
xor
stos
xchg
ret
xchg
jo
loopne
sub
dec
adc
dec
push
sahf
call
sbbb
push
or
mov
rcrb
inc
insb
push
sbb
test
sbb
sarb
in
shlb
leave
inc
sub
and
push
and
mov
shrb
notb
and
or
js
ret
and
add
testb
pop
xorb
inc
bound
mov
cmc
push
pusha
xor
mov
add
and
fs
and
hlt
mov
inc
xchg
mov
sbb
popa
test
or
jb
sub
movsb
pusha
mov
add
ss
cmp
sti
test
xchg
test
xor
adc
mov
add
test
cmp
xor
adcb
push
adc
mov
cwtl
xor
pop
and
js
push
shr
test
data16
mov
enter
inc
les
ss
inc
push
cltd
popa
sbb
in
cmp
in
cmpsb
xchg
xor
sbb
addb
into
test
cmpsb
in
dec
and
dec
call
xchg
push
or
adc
or
push
sub
fcmove
dec
lret
mov
in
pusha
es
lcall
inc
or
xor
cs
mov
add
xchg
add
pop
and
or
or
sbb
sbb
mov
call
xchg
sub
mov
xchg
push
dec
inc
cmc
jp
mov
lock
aam
dec
jg
inc
fdivs
xchg
out
popa
hlt
pop
in
add
add
lahf
xlat
push
push
movsl
fdivl
scas
or
popf
sbb
mov
jo
shl
xchg
orl
sub
sub
cmp
sbb
dec
daa
add
shlb
cld
aas
add
xor
fnstenv
mov
adc
cwtl
js
add
mov
push
ror
loopne
fcoml
push
jo
test
orb
hlt
inc
jle
and
jne
push
or
sbb
push
jb
pop
inc
pop
cltd
jmp
or
fiaddl
das
sbb
and
sbbb
sub
mov
adc
or
ljmp
in
add
rol
mov
adc
adc
cld
ljmp
adc
push
xor
callw
xchg
ret
mov
jo
bound
inc
xchg
cltd
fwait
adc
ljmp
ficompl
sub
sbb
mov
enter
rclb
sub
test
ret
enter
incb
ljmp
push
xor
inc
dec
add
and
js
lret
add
dec
cmp
add
sbb
cmpb
xorb
push
xchg
or
push
andb
mov
cwtl
dec
js
js
jbe
and
out
nop
push
jb
test
inc
movsb
shrb
or
jno
rolb
sub
dec
or
add
dec
cmp
into
outsb
fcomps
or
sbb
cmp
pop
inc
add
add
and
adc
orb
and
inc
pusha
outsb
and
cli
in
lcall
mov
cmp
xchg
rolb
dec
dec
cltd
out
test
xor
jo
loopne
adc
lods
sub
outsb
clc
sub
cwtl
lret
sub
inc
push
mov
dec
loop
add
and
add
loopne
lret
xchg
mov
daa
hlt
sub
push
ret
cwtl
mov
sbbl
push
add
rolb
ds
jbe
or
adc
pushf
subb
fisubs
dec
pop
ret
or
xor
faddl
dec
popa
pusha
inc
push
push
xchg
adc
sub
test
pop
notb
adc
insl
add
inc
fs
daa
inc
adc
sbb
and
xchg
and
and
xchg
push
lea
into
jg
add
cs
ljmp
rolb
fiaddl
mov
in
cli
ret
and
xor
sbbb
pushf
or
or
data16
subb
and
jg
js
inc
or
mov
loopne
sbb
or
es
push
mov
add
lods
divb
decb
push
adc
lods
push
xchg
pop
add
data16
add
cwtl
dec
data16
sahf
mov
push
data16
push
rcll
adcb
xor
loopne
push
mov
movsb
pop
pop
pop
ret
inc
pop
push
dec
cwtl
or
mov
scas
ds
es
add
leave
mov
out
and
add
push
jle
add
pop
jl
lock
push
and
les
or
js
int3
add
adc
outsl
data16
inc
sbb
sbb
and
mov
mov
add
xchg
subl
aam
push
mov
dec
jo
loop
int3
adc
movsl
xor
mov
push
fistps
jecxz
outsb
pop
in
inc
or
and
jle
push
sbb
jg
ret
arpl
inc
dec
les
pop
adc
cmp
fs
nop
sbb
insl
mov
or
in
gs
cmpsb
mov
popf
popa
or
sbb
inc
mov
push
lds
push
and
lret
xchg
add
cltd
and
les
or
and
and
or
scas
mov
xchg
jo
data16
add
adcb
xchg
cmp
into
add
inc
dec
movsb
pusha
jle
loope
sub
sub
push
js
add
dec
les
mov
ret
or
push
cmp
xor
rolb
mov
xchg
enter
fcoml
push
ljmp
or
xor
pop
rolb
dec
push
call
jmp
xchg
xor
xchg
xor
test
sbb
mov
add
int3
scas
fcmove
inc
ret
inc
push
xor
enter
inc
pop
loopne
and
int3
add
nop
mov
lods
insl
pusha
nop
mov
rol
les
in
pop
leave
data16
push
or
fisubl
dec
xchg
inc
and
popf
push
loopne
hlt
sub
inc
or
mov
xor
mov
push
test
sub
pop
test
dec
inc
push
xchg
xor
push
mov
pop
mul
adc
bound
adcb
xor
dec
xchg
push
dec
inc
aam
in
add
lock
mov
push
sub
mov
mov
push
dec
adc
push
jl
pop
inc
mov
jo
sbb
and
shrb
and
add
adc
add
movsl
adc
cmp
mov
aam
inc
xor
or
mov
adc
rorb
jle
sbb
cmpsb
gs
lret
mov
or
mov
js
in
adc
lret
ljmp
push
je,pt
inc
xchg
push
sub
push
shll
sbb
dec
add
inc
lret
aam
cwtl
xchg
clc
test
add
push
add
ret
adc
jo
adc
add
inc
inc
shll
insb
dec
inc
or
cmp
adc
sub
lret
jg
popa
cltd
or
mov
xor
test
pusha
lret
xchg
inc
hlt
xchg
test
data16
aam
push
ret
add
andb
and
cmp
xor
sbb
xchg
mov
loop
lret
mov
or
dec
loope
inc
mov
roll
pop
ljmp
inc
call
sub
mov
inc
and
rolb
insb
add
adc
mov
jp
or
adc
clc
and
dec
push
dec
lret
movsl
xchg
es
xchg
mov
xchg
mulb
mov
pop
fs
bound
push
jp
mov
jge
pop
sub
lret
movsb
and
dec
mov
movsl
jb
xchg
in
or
add
ljmp
out
or
dec
adc
les
adc
dec
cmc
mov
jo
add
ret
cmp
sbb
mov
sbb
pop
sub
rorb
xchg
fisubrs
int3
sar
mov
inc
mov
add
movsb
push
cmp
pop
and
mov
xchg
nop
mov
push
ret
jo
adc
or
dec
je
iret
push
cli
insb
cwtl
movsb
xchg
or
add
push
dec
shll
gs
sahf
xor
inc
insl
pushf
jl
mov
mov
pop
mov
les
sahf
data16
adc
mov
add
dec
mov
and
shrb
fwait
jb
and
add
adc
sub
mov
or
xchg
pushf
mov
or
cwtl
movsb
xor
ss
mov
sbb
pop
sbb
jg
popa
and
dec
repnz
pop
adcl
es
lds
aad
mov
mov
or
xchg
or
movsl
insb
fsubrl
jl
enter
inc
mov
aam
sarb
das
xchg
int3
pop
adc
and
xorl
rclb
mov
clts
adc
mov
inc
ds
ret
and
and
into
shrl
inc
adc
dec
sub
and
cmp
imul
cs
sbb
sub
jp
rol
and
or
pushf
xchg
addb
je
sub
fs
cli
and
sub
xor
xchg
push
jl
inc
push
or
and
into
lret
mov
xchg
adc
xorb
cld
push
pop
and
xor
mov
sub
and
sub
out
pop
lods
mov
lock
fists
movsl
incl
jge
ret
dec
sbb
inc
popa
add
pop
xor
push
cmpsb
outsl
lcall
enter
jne
cmp
jg
jmp
sbb
pop
cmp
dec
shrb
add
sub
fsts
and
ficomps
scas
push
dec
add
ds
push
adc
popa
xor
dec
add
push
cmp
aas
nop
push
enter
aaa
adc
imul
lret
add
fsubs
outsb
mov
dec
stc
add
sub
xor
fdivl
rol
push
cmp
or
mov
into
xchg
mov
push
pop
jg
sti
jbe
iret
mov
add
int
out
jle
push
testb
add
adc
or
decl
sbb
hlt
in
decl
fbstp
mov
call
jecxz
mov
xor
daa
in
outsl
out
jge
stos
insb
cmp
fcoms
add
popl
jp
rclb
loopne
frstor
das
add
out
mov
or
mov
adc
sti
lahf
std
mov
out
mov
fisubs
add
pop
outsl
incw
jae
daa
es
push
cmp
jnp
mov
fs
js
mov
pop
cmp
inc
sub
jecxz
lock
cmpsl
jg
jl
lret
mov
and
xor
xchg
insb
mov
mov
std
cld
jae
fisttpll
xchg
sub
push
fnstsw
push
in
fists
cmp
outsl
je
mov
je
sti
bswap
xchg
mov
rclb
xchg
loop
daa
imul
lods
mov
mov
dec
lock
lock
adc
dec
dec
pop
js
inc
add
add
cs
faddl
jle
add
aas
dec
fsubrl
xchg
out
push
lock
sti
shrd
inc
hlt
xorl
xor
sarl
rcrw
outsl
testb
mov
mov
addr16
sbb
fs
fiadds
xchg
xchg
aas
cmpb
imul
pop
cs
or
ja
jne
dec
inc
jmp
sarl
les
pushl
jbe
mov
in
cld
faddp
imul
sub
movl
pop
ja,pn
ret
mov
push
fucomip
adc
or
ss
xor
loope
scas
call
mov
mov
sub
mov
inc
sbb
fbstp
cltd
adc
jbe
addb
jmp
lods
sbb
push
roll
inc
nop
ss
fldl
jp
imul
aas
jo
sbb
loopne
shr
push
out
adc
out
ja
pop
jge
test
cmp
pop
jbe
sarl
lahf
sti
dec
icebp
mov
filds
lea
cmpsl
fnsave
pop
sbb
push
dec
adc
data16
push
testl
pop
or
mov
clc
stc
mov
subl
fs
imul
loopne
inc
notl
cmp
xor
pop
movl
mov
mov
aad
xor
cmpsb
inc
pop
out
insl
sbb
mov
cmp
fnstenv
test
push
iret
push
xor
nop
js
pop
rcr
and
sbbl
jmp
fimull
out
cwtl
clc
cltd
push
sub
xchg
int3
mov
arpl
je
mov
or
loope
pop
inc
pop
inc
out
mov
cmp
lretw
cmp
es
mov
test
inc
clc
out
add
mov
ljmp
mov
fistl
fistpl
repnz
and
ljmp
ds
pop
mov
jbe
jmp
cmp
mov
clc
sbb
stos
inc
ret
adc
psubq
jg
aaa
xchg
sub
mov
cmp
in
scas
sti
test
mov
stc
inc
aaa
ljmp
sbb
xor
and
push
mov
inc
dec
mov
adc
add
cmc
jne
dec
jo
cmc
pusha
aam
mov
frstor
call
xchg
mov
mov
inc
out
jg
add
fucomi
cmpsb
and
cmp
xchg
mov
bound
inc
fisttps
stos
ss
jmp
cs
inc
in
dec
pop
fcmovnbe
pushl
xchg
dec
dec
adc
aad
mov
jb
pop
scas
inc
std
xor
push
push
cmp
jge
pop
pop
push
add
lods
mov
gs
or
pusha
fcomps
mov
loope
addr16
inc
movsl
fstps
stc
iret
repnz
repnz
mov
cmp
adc
pop
jl
in
jmp
inc
cli
insb
mov
subl
and
mov
mov
and
stos
push
addr16
ret
in
xor
fidivrl
aaa
lret
roll
or
adc
sarl
push
adc
add
dec
in
je
paddusb
adc
jl
lds
imul
pop
push
mov
add
xor
hlt
out
xor
mov
dec
mulb
xor
lahf
sar
or
cmpsl
lret
cmp
imul
push
mov
loop
cli
pop
push
or
mov
dec
or
ret
ja
mov
push
outsl
pusha
shl
aas
mov
ja
add
adc
rolb
mov
sub
pusha
cs
bound
repz
fsub
iret
mov
cmpl
sbb
inc
or
cmpsl
mov
lods
int3
aaa
sub
xor
sarl
aas
andb
mov
pop
mov
push
movsl
sub
lahf
popf
pop
aad
test
stc
loopne
xchg
adc
jo
out
cmp
xor
inc
ss
push
ds
cmpsl
pop
jg
aas
idivl
and
dec
pop
orl
pop
sub
jg
faddl
fsts
loopne
sti
orl
push
ja
xchg
mov
leave
loope
scas
push
mov
pop
mov
and
push
mov
lcall
cmp
mov
insl
repz
clc
int3
lret
and
adc
pop
gs
mov
das
imul
into
loopne
emms
lahf
jmp
cmp
cmp
fdivl
fnstsw
rorl
call
cwtl
shl
pop
xor
popf
lock
adc
out
push
adc
mov
adc
sbb
cmc
out
mov
xchg
es
pop
daa
clc
pop
cmp
fs
jne
pop
jle
mov
lcall
xchg
jmp
and
jg
fisttps
pop
js
loope
inc
stos
xchg
adc
std
add
cmp
push
ja
jg
arpl
inc
daa
pop
daa
cs
out
hlt
iret
outsl
push
jbe
in
jne
fiaddl
jmp
scas
sar
fmull
push
jg
xchg
mov
add
jg
negb
rsqrtps
mov
pop
inc
aam
fs
rclb
rol
add
or
cmp
pop
lods
ret
jg
jg
add
ljmp
cmc
fisttpl
pop
outsb
jecxz
cmpsl
in
inc
dec
movsl
sub
mov
add
test
jmp
orb
xchg
or
scas
outsl
jne
iret
push
inc
and
sbb
adc
cmp
cwtl
pop
mov
xor
xor
es
add
mov
lahf
ret
and
push
xchg
adc
xor
fistpll
jp
jp
cmp
xchg
sbb
imul
out
popf
inc
sti
inc
inc
dec
mov
mov
cmp
std
repz
fs
pop
xorl
aas
xor
sbb
aam
sub
and
aas
adc
or
mov
jg
cmc
mov
ljmp
adc
or
adc
pop
incl
lcall
mov
add
imulb
jecxz
jae
mov
xor
idivb
mov
out
int3
aas
out
aas
push
add
sbb
scas
mov
mov
fildl
subl
fwait
ja
adc
fdivrp
pop
int3
incl
icebp
and
adc
dec
adc
out
adc
add
ds
jmp
jg
in
repnz
hlt
outsl
dec
imul
mov
inc
sbb
addb
xor
out
pop
mov
cs
sbb
mov
test
sbb
xchg
mov
fcoml
mov
out
loope
lcall
mov
loope
push
fisubrs
decb
testl
int
fmul
addr16
pop
fdivr
loopne
loope
xor
mov
fistps
aaa
inc
cmpsl
inc
adcb
out
jns
in
hlt
gs
push
negl
mov
loop
cmp
into
jmp
js,pn
inc
pop
sub
in
icebp
outsl
ret
sti
sar
ds
jg
xchg
repnz
pop
int3
mov
out
jb
jmp
in
in
cmp
push
aas
xor
sarl
push
int3
mov
lock
pushl
mov
pop
dec
mov
fs
aad
lcall
rcl
movl
hlt
adc
scas
les
mov
mov
out
into
decb
enter
push
and
sbb
xorb
jmp
sbb
lods
jle
movsl
imul
cmp
leave
jns
mov
cld
lods
ljmp
clc
dec
cld
push
jg
sub
mov
push
mov
nop
push
mov
jg
ljmp
je
fwait
jle
xor
in
and
aaa
icebp
movsb
xor
cmp
jecxz
adc
mov
add
adc
pop
call
enter
scas
rorl
xlat
cmp
jecxz,pn
push
jne
sahf
xor
xchg
scas
loopne
add
mov
das
mov
sbb
decl
aas
mov
xchg
xchg
xchg
std
jg
movsb
mov
imul
jne
pop
push
jne
xor
cmp
cmp
xchg
outsl
rclb
xchg
filds
js
aas
in
xchg
mov
jmp
mov
fisubrl
test
sub
addr16
icebp
jg
lahf
mov
adc
mov
scas
ljmp
negl
iret
mov
call
xor
pop
pinsrw
imul
repz
loopne
repz
jmp
loopne
das
call
fmul
sbb
cmpsb
notl
push
jg
jg
inc
pop
rcr
ja
push
lret
adc
pop
push
std
inc
lret
popa
mov
incl
mov
cli
ja
xlat
cmc
lahf
imul
lods
ds
cmp
iret
std
mov
lock
sti
cmp
inc
mov
mov
in
sbb
pop
xchg
sti
sub
out
idivb
jo
jle
jo
dec
push
push
jmp
pop
in
pop
sti
push
adc
jae
pop
xlat
in
add
sbb
push
adc
dec
xchg
call
xor
in
xchg
inc
xor
push
push
clc
inc
pop
mov
shrl
outsl
dec
and
or
in
leave
aad
sub
scas
in
das
xchg
push
and
aad
adc
inc
cli
pop
scas
cmp
cmpsb
hlt
and
dec
sub
lahf
jecxz
cmp
sub
adc
incl
repz
push
hlt
adc
sbb
jns
fwait
or
or
rclb
cmc
jg
incl
push
fisttpll
orl
pop
std
or
je
cmpsb
sub
stos
pushl
repnz
push
or
inc
mov
xchg
sti
sbb
mov
sbb
or
aaa
mov
mov
bound
aaa
push
jbe
jecxz
out
push
decb
dec
adc
shlb
or
cmp
or
incb
xchg
mov
inc
movsl
inc
nop
sbb
inc
cmp
sub
loopne
daa
fimull
xor
jg
inc
sbb
pop
push
jne
inc
fdivr
push
rolb
in
ret
cmpsl
les
int
clc
mov
jmp
les
xchg
dec
clc
fbld
test
mov
nop
xchg
out
xchg
mov
inc
sub
out
divb
mov
cmp
jno
inc
fcomip
pop
andb
addr16
pop
out
mov
shlb
push
cli
ja
jnp
dec
sti
leave
dec
test
mov
and
jnp
cld
lcall
add
inc
shll
scas
cli
mov
imul
jmp
mov
adc
push
fisubrl
mov
ja
movl
add
incl
xor
lret
add
data16
mov
sbbl
adc
outsl
testb
int
xor
push
pop
jecxz
cli
ret
sbb
sti
dec
push
mov
xchg
aam
xchg
repz
div
out
loopne
xor
push
add
push
sub
out
imul
mov
mov
mov
pop
inc
fcos
ja
outsb
mov
push
mov
sbb
notl
loope
push
sub
jmp
in
insb
mov
out
fsubr
icebp
dec
lods
xor
add
getsec
or
fisubrs
push
mov
jo
insl
pop
xchg
add
nop
test
xchg
pop
dec
pop
push
imul
out
gs
mov
adc
xchg
lahf
outsl
xor
inc
pop
mov
sub
adc
jmp
jmp
inc
leave
mov
push
sub
sar
pop
out
ss
roll
mov
imul
subl
xchg
fsubrp
or
add
jnp
sar
sbb
xchg
ds
outsl
sub
push
jmp
sub
lock
dec
inc
ljmp
andw
out
pop
push
repnz
jb
cmp
mov
int3
dec
es
inc
and
jae
cmpsl
adc
nop
mov
outsl
clc
mov
std
inc
xchg
loopne
add
mov
mov
outsl
in
pop
mov
mov
dec
cs
shrb
fistpll
repnz
mov
mov
fisubrl
mov
dec
popa
jns
xchg
fisttps
fiadds
fwait
cmpsb
call
mov
shlb
imul
jle
jg
shr
adc
std
pop
int
jg
lahf
xchg
mov
insl
movsl
sbb
rorb
dec
and
jb
addr16
jl
shll
imul
jle
and
inc
popf
push
bound
jnp
pop
test
shlb
mov
mov
sub
in
inc
pop
lods
insb
rclb
push
mov
lahf
inc
nop
jl
jmp
or
cmp
push
and
dec
les
std
xchg
or
mov
lock
daa
mov
sbb
lcall
adc
add
jecxz
xor
out
incl
stc
adc
pushf
loope
pop
test
jne
clc
push
push
cli
insl
inc
mov
xor
or
scas
adc
test
pusha
rcr
divl
nop
cmp
je
and
div
incl
jmp
mov
addl
jmp
xlat
cmovb
pop
push
xor
pop
jo
push
repnz
negl
mov
add
xor
adc
test
movsl
cmpsl
rorb
aas
mov
xchg
mov
fs
mov
out
sbbb
cmp
inc
in
pop
cs
mov
jnp
jge
mov
and
fiadds
push
repz
push
fwait
mov
sub
pop
mov
dec
mov
fidivrl
ja
jg
jmp
push
shlb
bound
sbb
or
ret
push
dec
dec
mov
fcmovbe
mov
sar
push
outsl
and
dec
push
cmpsw
movsb
push
bound
bound
mov
scas
and
popf
test
pop
sub
push
sbb
les
lds
loopne
call
push
adc
rorl
xor
iret
add
fs
pop
inc
scas
in
jecxz
decb
pop
pop
orb
scas
pushf
mov
aas
hlt
hlt
or
cs
jg
inc
es
lret
xor
daa
lahf
mov
repnz
notl
xor
jg
sbb
or
out
lds
xor
xchg
jb
stos
subl
dec
shlb
adc
add
aad
das
lock
mov
rcll
mov
clc
divl
icebp
adc
jno
sbb
lock
jns
sbb
bound
cmp
sub
repz
add
adc
loope
fnsave
test
ds
cmp
outsl
psubd
out
mov
inc
sbb
add
imulb
xchg
xchg
loop
xor
cld
movlps
je
addl
push
push
fwait
jl
lock
dec
cmpb
scas
or
in
xchg
into
mov
popa
sbb
xor
ffreep
xor
repz
iret
adc
fwait
and
out
jl
in
idivl
enter
cmp
mov
iret
dec
push
int
push
call
sub
stos
pop
loope
and
pop
test
push
and
enter
inc
daa
hlt
xor
mov
scas
leave
outsb
cwtl
xor
inc
lods
out
mov
sub
inc
jne
jp
push
dec
loopne
jg
sub
sbb
mov
sbb
out
sbb
push
push
int
jmp
stos
ja
sbb
mov
and
dec
push
std
scas
jl
fwait
jge
add
dec
push
cli
inc
xchg
scas
pop
mov
cmp
inc
subb
data16
xchg
xchg
pop
leave
loop
add
mov
sub
in
movl
mov
jg
dec
and
lds
mov
std
sahf
lahf
mov
popf
add
int3
loop
cmp
pop
fcmovnbe
fistpll
xchg
sbb
cmp
push
sub
out
jne
or
data16
stos
inc
and
fcomi
or
xchg
xchg
in
cld
int
sbb
add
jl
push
std
inc
bound
das
in
jae
add
add
jecxz
xlat
std
mov
rorb
pop
sub
fwait
xor
pop
push
sahf
dec
jns
addr16
or
pop
out
jg
stc
push
rcll
pop
xchg
in
xlat
push
clc
sub
mov
mov
jo
mov
jnp
incb
lods
pop
out
outsl
add
pop
pop
test
lock
sbb
mov
or
mov
hlt
rcr
cmc
pushf
adc
imul
mov
lods
mov
lret
pop
pop
push
mov
pop
jnp
sti
cs
cwtl
jns
loope
or
in
mov
in
fstpt
jmp
xor
pop
cmp
aas
mov
les
inc
fwait
cmp
push
fmul
test
pop
jns
rol
jmp
inc
add
cmc
jbe
popf
fistl
notb
in
add
idiv
iret
jmp
add
std
stos
cmp
stos
cmp
cmc
lock
jge
jecxz
mov
jne
pop
leave
daa
inc
cwtl
and
pushl
jno
push
fs
mov
jo
decl
mov
jmp
jns
addr16
popf
xchg
mov
inc
inc
sub
js
mov
adc
mov
push
sbb
mov
lret
push
jns
sahf
pop
mov
mov
loope
or
mov
sbbl
movsb
fsubr
sbb
mov
xchg
jns
loope
sbb
lcall
sbbb
hlt
movsl
or
cmp
inc
test
js
pop
push
shlb
int3
mov
or
pusha
mov
add
xchg
xchg
test
add
xor
mov
lock
push
clc
push
mov
fidivrs
out
imul
or
sbb
mov
loopne
cmpb
xchg
aad
ja
jnp
ficomps
push
lock
call
jg
jmp
enter
add
cmp
sbb
mov
and
sbb
lds
jle
cmp
push
mov
or
mov
adc
dec
or
fsts
mov
xchg
iret
icebp
addr16
adc
popa
and
add
push
hlt
pop
cmp
imul
push
adc
icebp
push
cli
in
mov
popf
pusha
in
test
cwtl
mov
loopne
and
mov
mov
scas
jg
mov
addr16
fcompl
inc
cmpsl
cmp
mov
dec
cmp
faddp
push
decl
push
imul
cmp
enter
pop
fsubrl
push
mov
xchg
out
sub
inc
cmp
call
jne
add
test
xor
or
xchg
test
adc
mov
add
in
push
xor
mov
push
clc
and
sub
sub
add
pop
xlat
psubsw
stc
ljmp
mov
leave
dec
jno
xor
cld
icebp
add
jmp
mov
cs
xor
sti
ljmp
outsl
mov
lea
sub
sbb
cmc
test
bound
int3
cli
fsubs
cld
dec
xchg
dec
and
adc
orb
int3
adc
lods
xchg
dec
mov
iret
hlt
jg
movlps
dec
pop
ja
sub
or
mov
xchg
adc
push
divl
adc
inc
sarb
inc
lret
adc
clc
pop
xchg
incl
dec
sub
mov
and
and
cmpsb
ficomps
int3
fdivrs
lea
dec
adc
sub
and
mov
adc
pushf
mov
lahf
mov
add
pop
sti
push
call
cld
xor
push
je
std
sub
adc
js
xchg
loope
or
push
loope
sbbb
inc
jno
push
inc
dec
pushl
daa
mov
std
inc
clc
sbb
mov
sbb
jg
ret
push
pusha
mov
mov
stos
push
imul
scas
pop
subl
testb
jle
fisubs
incl
int
ret
add
lods
sbb
or
ret
out
mov
paddw
insb
mov
jmp
ja
sbb
in
sbb
out
xor
add
cmp
push
repnz
lds
sbbl
mov
cmp
xor
xchg
leave
lcall
incb
sahf
jbe
aas
imul
movsl
aam
jecxz
push
out
mov
test
mov
je
loopne
cmp
fsts
orb
xlat
mov
or
sub
rcrl
aaa
adc
popa
cld
out
fsubl
add
and
scas
outsl
inc
pushl
test
inc
shlb
xor
add
xchg
sti
mov
mov
stos
or
iret
dec
push
mov
or
mov
jge
inc
paddw
or
pop
sbb
in
gs
jl
fdivr
or
shll
ja
mov
xchg
dec
ss
inc
ljmp
xor
icebp
scas
sbb
loopne
adc
lahf
ret
cld
xor
or
fmull
pop
xchg
sbb
pop
mov
push
in
das
cmp
mov
mov
sbb
adc
jg
cld
ljmp
lea
fwait
test
into
cmp
mov
cli
push
xlat
push
dec
jmp
icebp
add
mov
adc
dec
stos
cmp
mov
in
or
dec
inc
pushf
mov
cmp
mov
push
inc
ljmp
add
or
xor
lcall
or
ss
addr16
jmp
ja
xchg
repz
xor
push
inc
loop
dec
or
je
aas
xchg
scas
test
out
cmp
mov
fs
xor
cmp
sahf
mov
dec
fstpt
mov
xor
jns
test
add
je
dec
jns
mov
sub
or
pusha
dec
or
negl
cmp
test
add
pushl
ret
movsl
xor
add
push
negb
insb
das
push
pmulhuw
popa
sbbl
es
clc
and
jge
jecxz
sub
jns
fistpll
cmp
sub
mov
and
ret
jo
dec
cmp
or
icebp
loopne
add
lea
incb
lock
mov
test
and
xor
xor
cld
xor
pop
pop
call
dec
inc
mov
jmp
xor
lahf
cmc
pusha
dec
pop
add
test
pop
fists
stos
mov
sarb
test
imul
inc
gs
pusha
out
pop
fiaddl
push
push
mov
pop
out
or
scas
cmp
std
je
dec
pushf
dec
sbb
gs
cmp
mov
mov
inc
rorl
mov
mov
test
mov
jecxz
int
mov
clc
mov
popa
fldt
sbb
js
pop
and
mov
movsl
push
decl
push
pushl
pop
pop
sub
and
loope
inc
jl
xchg
xor
hlt
and
sbb
stc
xlat
push
hlt
lret
cli
fidivs
pop
data16
ret
pop
loopne
xor
mov
adc
leave
jbe
xchg
fisubs
pop
and
jl
push
ja
and
push
push
std
add
lahf
lahf
aas
or
or
push
and
scas
jge
dec
clc
daa
xchg
cs
test
loope
sbb
fsts
adc
xchg
aad
pop
lcall
sbb
call
clc
jl
imul
lahf
shl
gs
add
insl
push
js
into
popa
lret
insl
icebp
mov
cltd
ret
ja
adc
pop
sub
mov
cmpsl
out
push
pop
cs
push
jle
mov
aam
pop
jae
ret
mov
pop
popa
enter
cld
outsl
test
ret
mov
in
aas
or
movsl
leave
lods
jo
jg
in
lock
daa
pop
pop
orl
mov
lcall
int
scas
test
cli
out
lcall
jle
stc
or
cmp
sbb
loop
sarl
fadd
aam
imul
aaa
insl
pop
loop
cmp
pop
cmp
fdivrl
jl
dec
cs
jg
mov
popa
aad
js
push
aas
push
or
popa
pop
mov
sahf
push
clc
jbe
mov
rcrb
flds
sbb
pop
xchg
dec
lahf
or
fsubrl
lret
xchg
pop
push
mov
cmp
jp
fs
xor
mov
jle
stc
pushf
in
mov
in
sbb
pop
push
mov
push
push
test
pop
sub
bnd
insl
cmp
out
push
in
push
rcr
std
jg
cmp
push
ficoms
test
and
iret
push
ds
pop
call
add
ja
ljmp
std
fbld
jle
negl
mov
jg
clc
push
rorb
or
call
add
mov
jmp
aad
fisubs
test
cmp
jns
fwait
inc
int
add
test
dec
pop
gs
dec
ljmp
mov
and
pop
sbb
decl
lahf
mov
add
cmp
xchg
cli
pushf
arpl
decl
test
je
mov
push
push
popa
pop
aas
loopne
sbb
jb
inc
rcll
ret
std
repz
jnp
icebp
add
sbb
cmpsb
sub
movsb
push
lahf
addr16
dec
and
cmc
pop
das
pop
sbb
cli
sbb
pop
mov
cld
cwtl
mov
xchg
out
mov
aas
adc
int3
lret
sub
xchg
and
lcall
decl
orl
push
fistpll
sbb
sub
add
mov
jae
ja
jno
xor
daa
push
dec
outsb
jne
bound
or
xor
js
cmp
cld
mov
rcrb
adc
push
lret
loope
xchg
jmp
mov
mov
rolb
add
stos
sar
cmp
add
rorb
jbe
jbe
aad
jg
dec
lock
and
sarl
xchg
lock
adc
mov
cwtl
xchg
push
add
sahf
decb
jno
adc
inc
out
rol
cld
out
pop
inc
pop
push
iret
addr16
push
f2xm1
jecxz
pop
clc
je
lcall
or
mov
pop
or
leave
jmp
int
divl
pop
bound
add
loope
mov
lea
scas
fisttps
js
xor
mov
imul
aam
inc
fisubs
icebp
test
in
jg
cmc
in
sarl
mov
sbb
jne
cmp
stc
pop
pop
add
push
aad
xor
ljmp
pop
jo
mov
out
lret
mov
lock
lahf
mov
jbe
inc
cmp
inc
sub
repz
adc
lock
fcompl
mov
push
mov
hlt
clc
fcoms
decb
lahf
xchg
add
and
mov
and
push
push
cmp
call
mov
out
imul
or
ret
repz
lods
cmp
lea
fsubr
dec
insl
dec
jno
xchg
jle
std
fxch
repnz
pop
sbb
cmp
cmc
add
sarb
insb
or
popf
aaa
imul
or
add
xor
cmpsl
lock
in
or
bound
ror
das
push
std
in
or
add
xor
lcall
ret
xchg
xor
out
xor
xor
fdivr
addr16
call
in
adc
jg
push
rcll
icebp
stc
mov
or
pop
adc
loope
jg
pop
mov
dec
inc
pushl
and
stos
ljmp
xor
decl
mov
adc
jae
add
insl
sub
test
hlt
lock
mov
xor
addr16
push
jg
jmp
xchg
dec
loop
mov
movsl
aam
hlt
in
jmp
jp
sbb
pop
jp
insl
mov
clc
in
aaa
xchg
cmp
sub
xchg
std
adcb
adcl
sub
loopne
mov
pushaw
nop
dec
clc
or
popf
sti
aaa
pop
jl
int
dec
pop
mov
mov
mov
or
xor
sarb
std
xchg
shl
int
ficomps
fdivr
sbb
pop
mov
movb
inc
jp
lahf
pop
mov
lds
mov
sbb
aam
fucom
sub
mov
dec
int
enter
shrl
in
add
movsl
lock
sbb
push
pushf
fs
popf
hlt
aas
stc
sbb
mov
fcompl
enter
push
sub
movsl
pop
pop
ljmp
and
orl
mov
loopne
cmpsl
outsl
mov
push
or
push
incb
mov
test
mov
pop
movsb
inc
pop
lods
js
mov
out
pop
and
lods
movsb
cmpsl
ljmp
sub
mov
out
dec
cmp
clc
jbe
xchg
notl
inc
xchg
jnp
inc
xor
test
inc
scas
out
cmp
shr
cwtl
and
loope
outsl
ja
scas
aad
repnz
call
adc
xchg
popf
je
arpl
ljmp
mov
stc
pop
daa
in
adc
dec
jnp
stos
inc
sub
ret
pop
pop
out
loop
out
sbb
jg
icebp
jg
outsb
cmp
enter
jne
sbb
cs
inc
stos
pop
insb
inc
add
pop
loop
adc
ffreep
aas
jae
es
push
mov
sti
mov
int3
pop
add
lret
push
push
stos
lock
in
jg
cmp
in
ja
loop
test
out
add
mov
pop
mov
xlat
lahf
xchg
push
imul
mov
push
inc
sar
out
aas
or
inc
dec
push
outsb
cmpsl
mov
flds
fldcw
aas
adc
add
pusha
mov
lock
fwait
aas
dec
daa
shll
lock
std
xor
popf
add
les
aas
mov
adc
sub
xor
mov
adc
xor
push
test
adc
fwait
mov
out
jecxz
aas
adc
test
pop
aaa
push
inc
decb
or
dec
es
adc
push
mov
cld
clc
jae
hlt
rcll
fisttps
mov
mov
shll
xor
shll
lcall
xor
lea
mov
movsb
xchg
je
jno
data16
mov
call
mov
jp
lods
push
mov
loop
adc
test
dec
jno
jmp
test
jp
pop
fmull
jns
mov
fnsave
fnstsw
push
cmpb
stos
jle
test
jg
pop
jle
sbb
sbb
sti
lcall
loopne
fdivl
push
and
mov
mov
mov
xchg
mov
mov
aam
dec
jne
gs
repz
xchg
push
dec
pop
sub
inc
fistpl
lds
xchg
popf
test
ds
xorl
cld
incl
cmp
outsl
fistpl
aas
mov
dec
fisttpll
lock
sbb
mov
ljmp
pop
push
add
enter
add
ret
int3
inc
icebp
out
jl
fs
jae
cltd
add
mov
cs
adc
movsb
imul
mov
ljmp
jnp
dec
push
push
aas
cli
pop
out
jnp
or
jae
out
test
aas
jb
xchg
subb
sub
into
loope
std
popa
scas
and
js
enterw
dec
scas
mov
push
ljmp
jmp
and
mov
push
rorl
cmc
jmp
out
sub
cs
dec
gs
pop
cld
and
lret
iret
out
sbb
dec
push
out
xor
loopne
in
popf
add
test
cmc
pop
or
jecxz
jge
loopne
loop
xlat
outsb
cmp
hlt
pop
decb
decl
aad
scas
in
and
lcall
ret
lock
push
andb
push
out
jo
and
insl
jmp
sub
incl
pushf
mov
add
and
loopne
sbb
stc
mov
mov
iret
push
out
push
mov
sub
jge
popa
cs
jae
icebp
push
or
jnp
repz
xor
xchg
inc
dec
jecxz
aaa
js
and
jp
pop
sbb
outsb
adc
pop
out
scas
outsl
lret
pop
add
jnp
cmpsl
push
arpl
add
decl
sarb
sbb
xor
cmp
xlat
pop
arpl
mov
loop
in
jne
in
dec
add
cmpsl
jo
add
jnp
pushw
aas
add
xor
lcall
popf
fcmovnbe
call
mov
push
pop
insl
not
js
inc
repnz
adc
idiv
xchg
loopne
imul
and
je
lea
xchg
push
inc
shlb
aaa
sahf
mov
movsl
lea
and
sbb
out
xor
lahf
cmp
add
push
dec
addr16
divb
lock
stos
jno
outsb
and
repnz
sub
addr16
popa
sahf
int3
ret
test
mov
aaa
movsb
mov
sbb
mov
jg
jmp
pop
xchg
jecxz
aad
das
push
jns
jmp
xorb
push
sbb
movsl
dec
cmpsb
test
push
jecxz
sbb
ja
inc
cs
pop
mov
jne
pop
push
jecxz
pop
hlt
test
or
outsb
and
add
pop
aas
jmp
mov
in
shll
repz
jge
fdivl
addb
loopne
aas
add
stos
sbb
adc
and
mov
lock
and
dec
addl
shll
call
sbb
or
repz
pushf
cli
mov
xor
mov
out
std
add
inc
enter
mov
lahf
aad
jmp
fucom
lahf
jl
adcb
imul
aad
add
cmp
push
jecxz
pop
ror
out
adcl
push
das
jl
shl
int3
xchg
test
mov
imul
inc
repnz
mov
push
pop
jl
fidivrs
in
add
push
das
test
rclb
xchg
stos
mov
push
fcoms
mov
scas
fsin
ret
add
xchg
loop
enter
aas
xchg
add
jnp
in
add
pushl
jae
scas
xor
sbb
int
pop
jmp
cwtl
jge
rclb
cmc
add
lock
fistpll
xchg
iret
pushf
xor
rcr
pop
add
dec
aam
xchg
pop
aas
cld
fwait
arpl
rcrb
test
mov
std
lock
out
mov
imul
daa
or
inc
mov
push
sahf
cli
jg
fidivs
stos
gs
mov
pop
cli
imul
inc
sub
les
xlat
cmpsl
outsl
mov
cmp
cmpsl
cwtl
stc
sbb
decb
sahf
clc
mov
pop
and
cmp
cmpsl
jae
pop
call
flds
movsbl
pop
dec
mov
hlt
jl
iret
std
ret
mov
sbb
jle
ss
push
adc
aas
or
and
pop
mov
jb
ds
push
mov
push
xor
daa
arpl
ja
jg
loopne
mov
xor
adc
cmp
cmp
xchg
movsb
and
mov
pop
in
dec
ja
out
loopne
lods
movsl
add
adc
out
aaa
cmpsl
incb
mov
rclb
inc
mov
mov
pop
ret
std
or
sub
cmp
ljmp
mov
outsb
dec
xchg
push
cld
mov
aas
or
pop
mov
inc
push
sub
nop
cmpsb
repz
pop
dec
cld
mov
adc
lret
imul
inc
push
test
call
mov
pop
nop
roll
nop
std
dec
cwtl
sbb
insb
cld
shll
mov
add
jo
dec
xor
iret
add
insb
adc
xchg
lea
or
repz
adc
lods
or
mov
mov
xchg
subb
cmp
inc
addb
inc
std
push
ja
inc
sbb
jecxz
jp
xor
inc
repz
pop
ss
in
inc
mov
ds
mov
pop
sub
push
sti
inc
jo
mov
int
ret
insb
decl
scas
mov
and
push
sti
or
mov
cmp
mov
xchg
jmp
orl
mov
test
pop
js
insl
dec
subb
pop
lret
pushf
xor
pop
out
adc
or
push
add
lahf
out
int3
push
fisubl
jnp
adc
mov
popa
push
outsl
rcrl
negl
and
pop
das
jl
push
shrb
pop
dec
sub
ja
cmp
ret
inc
mov
cmp
andb
scas
mov
cmp
jmp
adc
mov
bound
xlat
cmpsl
jmp
aas
add
cmp
jo
pop
mov
inc
cs
jmp
xchg
add
sarl
xchg
cli
icebp
cmpsl
mov
lods
popa
dec
imulb
dec
xor
or
add
daa
dec
jae
add
jg
sti
out
mov
fisubl
pop
out
movsl
ja
jge
jne
push
xchg
and
sub
call
mov
jmp
je
ds
and
rcl
and
push
push
mov
dec
xor
sub
xchg
gs
sti
addr16
jbe
xor
mov
sbb
lock
je
.byte
.byte
add
test
fbld
decb
std
xor
jg
pop
dec
std
xor
xor
call
sub
jg
pop
sarb
mov
xor
xor
mov
leave
cmpb
call
sbb
xchg
and
test
mov
mov
inc
pop
xor
lds
inc
lds
add
in
in
mov
pushl
std
aam
adc
push
in
adc
rcl
mov
inc
pushl
mov
mov
mov
adc
pop
mov
iret
lds
inc
mov
aam
lds
ss
pop
rclb
xchg
jg
incb
pop
mov
jg
pop
addb
std
call
dec
sub
std
test
iret
test
xor
inc
add
mov
cld
addb
pop
data16
adc
adc
inc
roll
jg
leave
dec
cmp
inc
sti
adc
add
pop
xchg
clc
call
adc
mov
mov
mov
push
adc
push
test
std
inc
lock
pusha
int3
cmpsb
lds
xor
iret
pop
outsl
dec
mov
adc
inc
mov
add
fndisi(8087
or
push
ret
in
mov
pop
inc
jo
insl
push
pop
call
test
mov
orl
push
adc
xor
test
xor
leave
aam
lcall
mov
leave
or
ds
xorb
add
lds
test
or
adc
xor
xor
incl
add
adcb
adc
sub
xor
or
int3
std
inc
repnz
inc
call
sti
dec
shl
push
or
fildl
push
dec
push
pop
cmpsb
std
iret
xor
js
js
mov
inc
ficoml
add
bound
jle
int3
ss
sub
push
cmpsb
std
sti
or
int
or
adc
call
or
adc
jnp
sti
dec
xor
dec
mov
rorb
sti
movsb
insb
or
loope
sub
xor
xor
push
dec
push
mov
mov
jbe
pop
enter
sub
pop
fbld
or
orl
enter
or
push
xor
pop
sti
add
loope
sar
lret
sbb
pop
adc
pop
sub
in
aam
adc
les
add
dec
inc
mov
xchg
and
pop
mov
jp
mov
call
mov
xor
jl
xor
sub
mov
pop
leave
mov
jbe
in
ret
sbb
test
push
ret
jo
sbb
mov
inc
test
push
call
pop
cli
xor
sti
xor
jg
ret
sbb
jg
push
sbb
or
adc
sbbl
push
outsb
sbb
dec
push
andl
xor
adc
sbb
mov
aaa
insl
data16
call
cmp
cmp
sub
mov
ret
inc
movsb
xchg
es
fisttps
or
fimull
push
sbbl
push
xor
mov
pop
or
adc
es
xor
push
pop
and
int3
lds
and
test
xchg
call
xorl
fwait
dec
loope
add
addb
and
sub
add
sbb
movsb
mov
xor
jp
push
inc
popa
pusha
or
jp
xchg
es
bound
sbbb
clc
adc
or
jl
pushf
and
fsubl
inc
and
mov
in
sub
pop
xor
ret
pop
xchg
inc
sbb
fmulp
xchg
call
orl
mov
test
pop
aam
mov
push
xchg
lret
movsb
inc
faddl
mov
lret
shrb
sbb
dec
pop
ficoms
mov
mov
fs
jbe
xor
push
inc
pop
xor
xor
and
sbb
pop
or
mov
push
lds
xchg
pusha
cmpsb
shll
push
jg
les
aam
push
filds
or
ret
in
mov
inc
jo
out
sub
mov
adc
sti
lret
movsb
jb
mov
cwtl
cwtl
cmpsb
mov
xlat
mov
movsb
lds
addl
and
mov
inc
and
notb
ss
mov
push
fsub
inc
jle
and
sbb
or
adcb
fcomp
adc
pop
pop
push
xor
xchg
mov
repnz
mov
mov
adc
sbb
mov
inc
add
add
or
bound
stos
inc
ljmp
lock
dec
jmp
in
jo
mov
add
call
mov
into
jb
rcrl
pop
lods
mov
xor
push
and
pop
cs
inc
mov
sti
test
aam
data16
out
or
sahf
push
lea
adc
mov
or
adc
sub
xchg
lods
adc
or
cmp
mov
xor
dec
pop
sub
test
mov
adc
sub
mov
into
aam
sub
addb
aam
fbstp
adc
in
or
and
adc
popa
or
outsb
test
adc
adc
sbb
fisttps
pop
insb
add
jbe
push
leave
mov
and
addb
cmpsb
aam
scas
mov
xor
mov
repnz
push
je
push
mov
adc
adc
ss
adc
cmc
xchg
leave
aam
test
insb
adc
sahf
loopne
xor
xor
dec
sarb
cmp
lds
pop
in
xor
cmp
out
repnz
ret
popa
cmpsb
push
push
and
clc
adcb
xchg
add
mov
push
cld
jbe,pt
sbb
loopne
std
add
mov
jb
rolb
aam
add
hlt
loopne
ss
or
dec
into
add
ret
inc
lods
sbb
test
enter
rcll
in
cmp
sbb
sbb
inc
movsb
adc
or
sbb
pop
push
xchg
test
fmuls
cmpsb
es
add
rclb
pop
mov
mov
inc
fs
out
adc
fiaddl
mov
xor
xor
push
mov
sub
xor
fidivrl
mov
repnz
or
and
push
aam
in
lcall
mov
and
mov
shlb
in
lock
test
push
lods
xchg
mov
cwtl
shlb
shrb
sbb
insb
mov
adcb
mov
or
fsubrs
mov
or
dec
ss
or
xchg
loope
aam
data16
push
or
shrb
iret
stos
xor
xchg
add
dec
add
data16
outsb
sub
pop
mov
into
inc
lock
inc
sub
les
ret
inc
inc
and
es
ss
xor
jne
inc
xchg
std
adc
imulb
inc
add
cmp
sub
xchg
xor
or
pushf
testb
xchg
dec
out
pop
mov
lds
mov
mov
sbb
jg
xchg
orb
add
push
or
push
and
iret
call
add
pusha
push
pop
jb
outsb
xchg
adc
sbb
iret
subb
adc
dec
in
ret
pop
or
mov
mov
lods
rcl
lret
out
push
push
xor
stos
cld
pop
aam
xor
inc
and
out
out
push
imul
aam
test
pop
cmp
push
cs
adc
add
addb
test
add
or
insb
adc
sbb
pusha
mov
clc
xor
decb
clc
jae
sarb
dec
movsb
out
leave
inc
xchg
aam
xorb
xchg
pop
pop
xor
inc
mov
push
rclb
xorb
push
gs
les
testb
mov
aam
inc
inc
lods
pop
call
rclb
push
add
call
xorb
je
cmp
mov
icebp
cmp
mov
adc
int3
pusha
adc
xchg
push
cltd
mov
in
inc
dec
cltd
and
mov
cs
test
add
sub
scas
sbb
xor
pop
int3
jl
inc
clc
sub
push
push
pop
or
iret
ljmp
aam
jg
push
push
sbb
sarb
sub
sbb
sbb
nop
mov
shl
test
sub
cmp
fildll
cmp
mov
es
dec
cld
adc
push
cmp
lret
vunpcklps
push
adc
or
push
inc
andl
popa
or
cli
dec
sbb
or
popa
scas
scas
add
jg
mov
scas
jl
sbb
adc
enter
push
add
stos
jo
or
ss
pushf
pop
adc
lcall
sti
fbstp
push
xor
jle
adc
ret
and
adc
cs
mov
jo
dec
and
xchg
pop
xor
inc
sub
inc
mov
inc
add
or
add
int
push
mov
add
push
sub
imul
push
dec
call
push
call
or
sub
lods
add
cs
inc
test
fwait
out
push
dec
ja
sbb
xchg
das
sub
mov
jg
push
xchg
enter
movb
imul
scas
cmpsb
adc
cmp
pop
call
cmp
fcompl
xchg
inc
add
nop
stos
lret
scas
xor
mov
aad
pusha
xchg
sbb
dec
int3
lcall
mov
jo
test
add
sub
jne
sub
add
and
sub
sbb
loop
stos
push
dec
lds
dec
jno
xchg
mov
rorb
je
lcall
cmp
test
es
test
sar
mov
and
push
loop
sbb
push
fs
add
inc
push
in
mov
pusha
mov
insb
push
sahf
dec
mov
xor
inc
pop
stos
mov
inc
inc
scas
test
pop
inc
out
je
dec
es
push
sahf
mov
jbe
mov
adc
inc
or
dec
or
add
sbb
push
aam
and
jbe
push
pop
xchg
mov
aam
cmp
mov
and
je
inc
xorl
mov
xchg
push
mov
dec
and
fsubrl
dec
dec
in
jo
inc
mov
subl
enter
sarb
imul
cwtl
test
jp
std
cmp
test
push
xchg
lret
adc
leave
andb
inc
add
test
call
dec
mov
sbb
fildll
adc
test
push
pop
cmp
mov
pop
lret
inc
aam
pop
in
fbld
aad
test
out
or
rorb
sbbl
xor
push
mov
push
cld
mov
inc
inc
push
sbb
pop
push
inc
shll
leave
mov
je
pushf
xorb
cmp
int3
and
xor
outsb
pop
nop
sbb
mov
or
js
pop
iret
push
push
pop
jp
dec
push
and
push
je
dec
pop
adc
adc
cs
imul
out
inc
xchg
and
lret
and
cwtl
inc
test
hlt
xor
mov
xor
std
hlt
sub
mov
jo
in
dec
lret
or
sub
es
inc
ret
pusha
adc
push
dec
or
je
addl
xchg
les
or
lcall
adc
mov
xchg
pop
outsb
sti
outsb
rclb
push
and
mov
cmp
inc
and
dec
fildll
push
sbb
xchg
pop
cld
sbb
pop
adc
aam
or
leave
and
js
dec
adc
mov
inc
add
clc
rcrb
xorb
or
insb
adc
and
int3
test
inc
das
push
ljmp
in
or
jl
leave
inc
repnz
adc
push
push
and
dec
popa
adc
lock
push
push
call
dec
mov
push
cs
and
cli
sti
in
pusha
jae
sbb
xor
clc
iret
aam
xor
shlb
fbld
movsb
mov
pop
lds
jo
rorb
dec
adc
mov
jg
pop
and
adc
add
call
adc
stos
sbbb
pop
add
sub
pop
add
insb
cmp
test
ds
or
pushf
shlb
pop
pusha
and
in
mov
and
xchg
push
shrb
mov
in
adc
andb
lret
adc
stos
andb
mov
sbb
iret
vmulps
mov
add
call
pop
or
cmp
sbb
nop
ret
pusha
bound
clc
aad
outsb
push
sub
mov
push
sti
xchg
addb
add
lds
lock
sub
ret
inc
mov
sub
rcrb
xor
and
add
push
mov
cli
sub
aam
aam
stos
enter
add
inc
add
lret
pop
xor
inc
dec
test
add
nop
dec
push
hlt
loop
push
inc
and
lods
shlb
in
pop
cs
and
ret
push
and
push
add
mov
dec
fsubrl
add
rol
push
mov
push
push
out
jp
lcall
jg
in
dec
push
add
mov
sub
call
ds
xchg
lock
sbb
pop
mov
movzbl
mov
dec
pop
loopne
data16
push
fsubrl
or
add
add
sbb
sar
sti
test
xor
push
in
fldenv
add
and
dec
add
js
popa
ss
pop
xchg
mov
push
sub
lcall
rorl
dec
aam
mov
sub
aam
test
push
test
jb
and
xchg
xor
ret
mov
subl
pusha
mov
sbbb
cmp
leave
sti
fadds
mov
jg
aaa
test
and
or
mov
or
subl
in
orps
pop
fists
test
in
add
movsb
xor
loopne
popa
jo
cwtl
data16
es
mov
std
ljmp
cli
mov
sbb
nop
or
adc
mov
push
ficompl
pop
stos
subl
adc
or
es
mov
inc
add
cmp
pushf
frstor
pushf
push
cwtl
adc
jb
mov
jbe
add
push
in
cmpsb
xchg
addb
push
test
sahf
or
mov
test
xor
pop
sub
mov
rcl
fwait
sbb
or
or
sub
fdivr
aam
add
lcall
fldcw
lods
xchg
push
pushf
xor
push
xchg
inc
pushf
adc
jmp
rolb
dec
mov
ljmp
adc
and
mov
push
dec
xor
pushf
push
data16
movsl
add
test
push
add
or
out
outsb
xchg
mov
xor
mov
xor
mov
pop
xor
xor
rol
test
ret
call
xchg
add
or
xor
std
mov
fmuls
xor
orl
fs
inc
and
cmp
std
cs
mov
inc
mov
cltd
call
shll
mov
pushf
add
inc
and
xor
push
xlat
loopne
testb
test
add
cmpsb
aam
adc
add
lret
or
add
xchg
test
or
or
mov
shlb
cmpsl
adc
and
call
sub
sub
mov
or
mov
jo
pusha
cmpsb
into
dec
xor
inc
push
mov
orb
lods
lcall
adc
add
jo
mov
push
js
lods
mov
pop
pop
push
xor
inc
push
test
dec
mov
test
xor
andb
push
sbb
push
sub
sbb
pop
into
push
adc
dec
je
or
push
leave
dec
pop
int3
mov
cmpl
xchg
ret
loope
mov
in
mov
stos
ret
jg
sbb
test
pop
inc
test
in
sbb
inc
fs
adc
pop
mov
test
adc
int3
sub
out
sbb
sub
sti
loop
and
sti
aam
sbbl
cmp
cltd
insb
dec
adc
sbb
adc
stos
sti
dec
pop
shlb
je
sub
xor
pop
ret
mov
inc
lds
xor
or
jo
push
adc
and
je
lods
push
and
inc
pusha
sbb
push
orl
or
and
mov
push
or
push
mov
pusha
insb
add
in
or
mov
in
dec
or
je
jp
shrl
inc
les
es
pop
cld
add
cmp
sub
jb
cmc
leave
or
pushf
outsb
pop
push
pop
pop
pusha
nop
inc
adc
loop
xchg
in
sti
in
push
stos
ret
ds
jp
adc
xchg
sbb
sbb
mov
pop
ret
aad
add
push
sbb
add
cld
inc
xchg
dec
add
fiadds
lds
cli
push
inc
outsb
xor
fmulp
xor
inc
mov
mov
jp
sub
lods
push
sbb
movsb
ss
cmp
inc
add
xchg
jl
xor
sarb
lods
mov
jae
rcll
and
and
es
or
mov
add
in
sub
xor
subb
add
pop
xchg
aam
cmp
gs
mov
in
inc
cmp
mov
add
ret
push
hlt
scas
push
incb
stos
push
test
leave
cs
inc
je
repnz
xor
jmp
add
iret
adc
fsts
xchg
ret
push
sbb
out
ds
std
jg
lret
inc
dec
push
pop
mov
cmc
sbbb
push
ret
decl
aad
movsl
push
sbb
scas
adc
or
test
dec
pop
jbe
sub
ljmp
shrb
int3
inc
mov
add
dec
aam
and
lcall
add
fwait
or
pop
sti
js
mov
mov
call
lcall
or
dec
loop
xchg
enter
sahf
or
xor
push
adc
pop
test
enter
inc
push
mov
sti
std
mov
ss
movsl
pop
sbb
nop
sarb
mov
adcb
lock
rcrl
inc
mov
fdiv
dec
ja
jg
fists
lds
fisubl
mov
xchg
std
inc
std
nop
iret
test
es
push
pushf
mov
and
test
ds
insl
jb
mov
inc
clc
out
push
and
pusha
fcmove
fcoml
pop
and
push
xchg
ret
nop
les
mov
push
xchg
sbb
inc
je
mov
xor
aam
cmp
int
xorb
add
in
aam
pop
aam
push
xor
cmp
roll
and
aam
cli
pop
lods
cltd
inc
push
aam
ret
lcall
rcl
hlt
lods
mov
push
push
xchg
mov
pop
outsb
inc
int3
add
popa
repnz
push
fiadds
jl
or
inc
negb
lds
mov
rclb
aam
adc
addb
or
mov
pop
mov
push
cmp
add
add
pop
js
inc
and
pop
in
mov
xor
sub
add
nop
dec
hlt
std
xchg
lods
popa
movsl
adc
push
mov
add
sarb
jne
hlt
add
in
pushf
or
inc
adcl
roll
mov
call
aad
or
sub
je
inc
xor
ljmp
cwtl
sub
mov
xorb
add
inc
xorb
gs
outsb
call
adc
inc
js
xchg
mov
call
pop
adc
sbb
mov
push
ret
mov
jo
cmp
mov
jg
dec
add
dec
test
scas
fimull
sbb
xor
xchg
or
pusha
add
fs
or
sbb
mov
inc
pop
or
cmpb
add
push
es
mov
and
mov
dec
xchg
fdivrl
lret
pop
fsubl
adc
push
add
or
shlb
xor
inc
insl
xor
movsb
pop
xchg
shrb
adc
into
inc
inc
mov
inc
xor
cmp
std
sahf
sti
cwtl
sbb
adc
fsubs
in
or
pop
ss
dec
and
pushf
adc
inc
sub
pop
pop
mov
sub
sbb
xchg
int
add
or
add
adc
ljmp
fs
pop
test
into
push
mov
sbb
lcall
add
cs
sarb
pop
jo
add
or
aam
test
jo
int3
jbe
fisttps
dec
mov
rcrb
mulb
mov
dec
jge
or
dec
sti
sbb
mov
sub
sub
rolb
cmp
push
inc
add
jne
mov
cs
notb
sbb
push
xor
repnz
or
and
sbb
and
xchg
cwtl
xor
sub
sahf
je
cltd
add
dec
pop
mov
outsb
push
hlt
mov
xchg
mov
pop
sub
and
sbb
push
lock
or
movsb
test
iret
aam
mov
clc
mov
or
cmp
sub
push
sti
test
aam
mov
inc
rorb
sbb
int
in
jg
adc
out
test
adc
pushf
ss
dec
es
xor
push
dec
fwait
inc
test
pusha
js
pop
sarb
ret
sub
cs
xchg
out
xor
loopne
mov
shlb
or
dec
xchg
push
sbb
add
lret
lods
orb
pop
lret
cmpb
loope
data16
xor
leave
popa
inc
xor
data16
sub
adc
push
dec
push
in
data16
jp
test
aam
insb
rolb
add
call
aam
lretw
inc
inc
dec
into
xchg
stc
mov
push
out
mov
shrb
lea
push
push
call
leave
ret
aaa
jecxz
mov
in
push
push
mov
lods
cli
or
push
and
stos
pop
pushl
idivb
inc
sub
mov
jo
dec
jmp
lds
fsts
mov
jl
lds
add
inc
mov
mov
dec
push
mov
iret
in
cmp
es
push
leave
add
push
roll
or
pop
call
int3
adc
test
dec
and
mov
mov
mov
push
sbb
call
push
sub
and
pusha
and
subl
mov
ret
mov
outsb
mov
xor
add
mov
or
or
cltd
lret
jb
loopne
pop
and
or
mov
push
lret
or
sahf
mov
sahf
cmpsb
std
ljmp
dec
js
in
xchg
dec
add
cmpsb
mov
pop
fists
sbb
mov
adc
mov
mov
push
fs
lds
mov
in
stos
iret
sahf
dec
xor
add
sub
es
inc
jb
mov
mov
dec
xorb
xor
mov
lds
fs
xor
in
scas
adc
fs
adc
test
les
mov
xor
or
call
lcall
push
mov
test
pop
and
test
sbb
aad
push
sbb
stos
xchg
rcrl
test
test
inc
or
dec
fdivl
inc
jle
into
jl
xchg
jo
js
push
or
sub
push
xchg
ret
mov
mov
adcb
pop
addb
je
sub
aad
add
subb
cs
jo
fdivrp
cmp
sub
repnz
push
hlt
dec
push
cmp
stos
push
hlt
or
lret
sahf
mov
xor
mov
mov
fwait
int3
mov
add
andb
mov
or
mov
or
mov
mov
rclb
lcall
bound
test
sti
push
xchg
adc
mov
inc
orl
fdivr
adc
cmp
outsb
fs
lret
in
leave
sbb
mov
adc
dec
mov
sub
add
cs
pop
inc
mov
xchg
or
pusha
js
add
inc
sbb
test
push
enter
dec
xor
or
pop
hlt
les
pop
xchg
jl
or
xorb
adc
movsl
or
push
sbb
inc
subl
adc
sarb
sbb
fsubs
adc
adc
xor
xchg
pusha
shlb
mov
dec
xor
rorb
xor
test
call
xchg
jle
mov
sbb
bound
sub
dec
cmp
cmp
addl
iret
mov
mov
pop
fcom
test
data16
sbb
jo
addl
inc
lods
and
sbb
add
push
xor
test
or
pusha
leave
xor
cmp
pusha
xor
movsb
sbb
inc
or
mov
dec
adc
xchg
push
pop
mov
sti
adc
aam
adc
dec
xor
push
or
cmpb
dec
mov
outsb
lret
cmp
xchg
mov
jb
and
divb
push
in
sti
xchg
fbld
cli
adcb
sbb
pusha
cmpsb
inc
in
stos
push
or
or
xor
inc
sub
jl
sub
cmpsl
dec
push
xor
cli
push
add
out
sub
rolb
push
add
pop
inc
ffreep
cmp
adc
xor
sub
push
cwtl
jb
cmpb
xor
cmp
dec
xor
out
test
xchg
mov
iret
insb
xor
and
rol
mov
and
movsb
xchg
xchg
mov
sahf
cwtl
adc
xchg
mov
inc
push
add
and
cs
mov
xchg
mov
imul
sti
cmp
push
loope
push
adc
pop
inc
sbb
subl
test
or
xor
test
dec
and
pop
cmp
mov
pop
mov
xchg
sub
cmp
xor
in
sub
push
xor
ret
in
mov
rcrb
adc
adc
xchg
sub
fmulp
mov
bound
adc
aam
call
fistpll
xchg
int3
aas
jno
sbb
adc
inc
sub
andl
test
pusha
jmp
inc
mov
mov
test
dec
add
push
add
mov
xchg
aam
push
sub
pushl
lea
push
inc
cmc
jg
je
in
insl
stos
rcll
dec
push
xchg
mov
mov
mov
nop
addb
jp
rolb
xor
push
mov
mov
inc
push
push
pushf
sbb
je
sub
test
mov
sub
inc
inc
orb
dec
sarb
xchg
dec
or
pop
outsb
add
inc
mov
adc
aad
pop
or
mov
in
mov
add
push
push
inc
jp
or
call
pop
cli
std
aam
popa
push
int3
mov
fs
enter
inc
scas
add
adc
adc
leave
xor
adc
push
xchg
dec
sbb
mov
es
leave
push
add
cmp
lret
data16
sar
xchg
jne
add
push
pop
and
adc
test
pop
adc
xor
sub
stos
push
cmp
cmpsb
ret
idivb
lcall
or
dec
cmp
adc
inc
sub
inc
and
sub
sbb
cmp
xchg
movl
repnz
mov
pop
int
or
es
pop
add
or
cmp
pop
sub
xor
shlb
std
mov
sbb
std
mov
sbb
cmp
call
jae
ret
pusha
sub
push
cmpb
sbb
and
iretw
call
call
test
cmp
cmpsb
mov
or
push
mov
push
mov
or
xchg
add
mov
sbb
push
pop
xor
xor
shrb
xor
push
call
sahf
sub
in
push
or
sarl
fisubs
inc
dec
les
hlt
push
fcomps
push
faddl
addb
dec
loope
pop
xor
orb
loopne
nop
dec
mov
rorb
add
mov
xchg
rcrb
repnz
in
push
cmp
and
rclb
cwtl
inc
sub
and
push
xor
and
ret
or
cmp
adc
enter
sahf
cmpsb
and
mov
test
nop
inc
mov
xchg
adc
xchg
insl
mov
mov
call
sub
sub
and
push
xchg
out
or
mov
fs
test
xor
or
sbb
xchg
sti
push
mov
bound
sub
mov
mov
add
and
add
mov
add
xor
pop
lods
add
insb
sbb
inc
jg
push
push
loope
dec
pop
add
add
pop
mov
xchg
add
cmp
pop
push
addb
push
fs
xchg
sub
adc
dec
push
push
pop
pop
push
add
sbb
inc
jb
jp
add
add
push
pop
mov
shll
out
mov
aam
xchg
adc
in
sbb
mov
fadds
push
test
and
into
adc
push
mov
shlb
pop
xor
or
mov
mov
clc
xor
ss
filds
pop
push
iret
fs
outsb
and
push
in
aam
es
inc
pop
call
aam
push
sub
dec
aam
sub
mov
pop
shl
scas
rolb
sar
mov
sbb
and
adc
push
push
pusha
mov
dec
or
pusha
int
ljmp
add
shr
pop
push
in
fcompl
and
cltd
inc
or
test
xor
dec
dec
cmp
sub
pop
add
mov
push
inc
and
cwtl
sub
pop
add
subb
add
pusha
ds
shlb
push
cmp
ret
push
adc
push
loop
pop
cmp
sbb
scas
cmpb
scas
push
push
mov
adc
mov
and
or
adc
std
test
subb
test
les
enter
sbb
mov
inc
addl
adc
jp
sbb
push
push
pop
out
shrb
and
push
lods
or
leave
jbe
lret
push
mov
push
push
mov
test
mov
out
pop
rcrb
push
pop
sub
xor
mov
inc
subb
stos
int3
jbe
xor
push
add
into
sub
xchg
imul
cmp
add
mov
add
call
or
test
push
lds
test
loopne
dec
jbe
and
xor
or
dec
cld
stos
ret
fs
jbe
cli
push
push
add
imul
add
push
adc
aam
roll
fbld
and
inc
xor
pop
cli
in
ret
add
mov
pop
or
inc
dec
loopne
insb
push
call
cltd
xorl
adc
xor
aam
test
add
ds
xor
and
inc
xor
lods
dec
and
sarb
inc
xor
xor
sub
adc
dec
ret
mov
sar
mov
jg
sub
mov
mov
adc
push
call
cltd
addb
cli
mov
sbb
pop
mov
xchg
add
xchg
cmp
loop
add
cmpsl
mov
sub
dec
pop
inc
sti
lds
and
fisubrl
inc
in
xchg
std
xchg
sub
jo
repnz
sub
push
add
xchg
cwtl
ss
or
bound
cs
push
pushw
jle
mov
adc
or
enter
and
dec
cmpsb
outsb
sub
je
fbld
fucomip
je
mov
mov
or
and
sub
or
stos
pop
enter
es
mov
divb
sub
scas
inc
and
enter
xchg
push
out
dec
jo
push
mov
add
jg
xchg
pusha
or
mov
je
cmp
xchg
push
adc
aam
inc
es
test
pushf
out
adc
xchg
jo
bound
bound
call
and
push
into
sbbb
push
jg
call
push
ret
sub
es
and
movsb
xor
inc
loopne
jbe
outsb
addb
adc
and
test
nop
inc
jp
cli
aam
push
add
sbb
sbb
sbb
mov
and
fisttpl
jl
mov
mov
inc
adc
lds
bound
mov
jbe
ss
jp
repnz
mov
test
test
aad
cmp
add
push
cmp
mov
rclb
cmp
pushf
out
call
inc
pusha
add
sti
push
fs
pop
test
pop
or
cwtl
jp
fadds
test
cmp
inc
xor
push
stos
sbb
pop
add
add
loop
or
xchg
adc
adc
call
sub
or
es
and
xchg
pop
andb
and
repnz
jl
xchg
push
adc
dec
xor
adc
push
pop
xor
leave
inc
fs
push
xor
pushf
pop
push
adcb
cld
sub
mov
outsb
inc
clc
pusha
or
add
push
int3
and
push
pop
rolb
test
test
or
in
insb
mov
sub
js
or
call
je
adc
movsb
xor
push
enter
dec
sbb
lret
cmp
push
mov
sub
cwtl
push
ss
insl
lds
cld
leave
and
movsl
mov
xor
or
stos
int3
or
add
addl
stos
jbe
xor
add
fadd
adc
cmp
push
cmp
je
shlb
xor
rcl
adc
leave
test
cwtl
pusha
mov
roll
int3
fidivl
lock
inc
add
ds
or
pop
or
push
add
xor
push
fidivs
sbb
pop
sub
inc
leave
addl
pop
mov
in
push
es
xor
dec
sbb
adc
ss
and
dec
pop
ret
sbbl
nop
xor
push
xor
or
hlt
pusha
xor
pop
mov
adc
or
push
sbbb
add
test
add
inc
sti
dec
jle
test
rolb
xchg
xchg
inc
and
sbb
pop
test
push
or
ficompl
mov
call
or
push
mov
xor
fcmove
adc
xor
mov
andl
aam
or
cwtl
push
add
out
and
into
clc
pop
loopne
in
orl
jo
push
and
ja
push
fucomip
cmp
andb
sbb
decl
popa
push
push
mov
push
bound
xor
movb
dec
testl
push
call
je
fcoms
aam
loopne
mov
mov
sub
shl
rcrb
movsl
mov
je
or
push
sbb
push
xor
pop
test
push
mov
adc
or
outsl
rolb
bound
mov
addb
mov
stos
jb
or
adc
xchg
iret
lds
int
and
mov
inc
sahf
test
fidivl
adc
xchg
aam
fisttps
xor
mov
mov
push
ret
xchg
mov
add
aam
fsubrs
int3
xchg
ret
sub
cmp
inc
sub
push
cmp
nop
pop
pop
mov
xor
in
or
or
mov
dec
push
fs
dec
mov
call
inc
inc
sub
ds
adc
stos
adc
callw
rcrl
fistps
mov
ficompl
nop
pop
push
je
push
or
addb
and
or
mov
jecxz
adc
sbb
or
mov
push
inc
lods
xor
xor
sbb
enter
adc
dec
aam
out
lds
push
mov
dec
adc
int3
ret
push
sbb
outsb
inc
or
sub
xchg
mov
lcall
pop
adc
sbb
push
xchg
mov
xchg
int3
jg
orb
mov
or
add
leave
inc
lods
les
mov
sbb
sub
mov
pop
sarl
inc
xchg
push
lcall
or
add
inc
inc
push
es
add
js
dec
nop
std
jno
inc
xchg
ret
andb
jb
sbb
pusha
push
aam
stos
xor
fistps
enter
sbb
sbb
inc
xchg
or
mov
hlt
mov
fbstp
jb
push
rcl
push
iret
sti
and
les
xorb
push
xor
sub
jo
lea
enter
or
jl
sub
or
adc
adc
sbb
or
or
les
cmp
add
rcll
dec
bound
sbb
mov
rorb
divb
adc
lcall
lcall
dec
ljmp
jle
push
sub
sub
test
test
inc
gs
mov
dec
sbb
adc
and
int3
je
inc
dec
lea
push
dec
int3
sti
xchg
test
cmpsb
push
int3
cli
jp
je
shrb
lret
sbb
mov
pusha
pop
xchg
call
dec
sbb
ficomps
or
xchg
ret
sub
and
sbb
iret
inc
or
test
dec
lds
or
out
and
call
push
sub
or
add
les
xchg
mov
pop
lods
mov
pcmpgtd
adc
mov
sbb
cmp
sbb
cmp
loope
add
mov
and
dec
mov
lods
xor
push
pusha
or
dec
cwtl
int3
enter
je
xor
jg,pt
pop
and
mov
sbb
mov
rolb
sub
xorb
xchg
rcrb
sbb
mov
or
mov
test
filds
orl
pop
dec
cwtl
test
cltd
xchg
enter
sbb
xchg
leave
push
inc
sub
adc
adc
add
es
int3
incb
pusha
andb
xor
xchg
push
add
add
push
sbb
insb
mov
mov
inc
add
push
data16
add
test
std
and
lea
test
pop
lds
subl
insb
adc
test
push
test
mov
mov
shlb
and
push
dec
and
pop
push
sub
aam
test
mov
adc
add
add
inc
sahf
sbb
adcb
push
sub
or
jecxz
xchg
leave
dec
clc
push
stos
pop
inc
add
sti
pop
out
push
dec
jl
mov
enter
popa
data16
or
mov
lds
sbb
push
mov
addb
push
es
sub
mov
loopne
aam
mov
cmp
push
mov
inc
into
loopne
inc
mov
dec
mov
jg
xchg
mov
rcll
mov
repz
dec
dec
cmp
xchg
sti
mov
xchg
bound
inc
add
orb
aam
jp
mov
push
in
adc
rcll
cmpsl
in
pushf
test
push
push
add
dec
sub
xchg
push
sub
mov
sbb
push
xor
or
pop
adc
adc
aad
pop
mov
and
fidivrl
rorb
push
sub
loopne
pop
xchg
xchg
fcompl
inc
and
out
dec
je
mov
sti
ljmp
xor
subb
mov
cmp
je
andb
test
hlt
pop
fs
clc
dec
leave
and
push
or
xchg
mov
mov
or
mov
vpcmpgtb
insb
and
mov
xor
inc
aaa
or
cli
mov
adcb
bound
or
or
mov
add
jg
mov
xchg
icebp
cli
daa
fsubl
add
cmpb
and
dec
call
shlb
adc
fidivs
stos
jo
inc
inc
ficoms
mov
sub
out
add
sub
push
jbe
cmp
sub
fsubs
es
inc
mov
mov
add
jb
sbb
mov
cld
mov
jo
push
cs
inc
inc
sub
ds
aam
into
xor
or
adc
pop
push
inc
inc
inc
es
or
xor
outsb
fcoms
dec
dec
push
je
sbb
andl
shlb
popf
sbb
push
cltd
popa
addb
rolb
xor
cwtl
inc
mov
das
subb
add
add
pusha
pop
pusha
jo
jo
test
aam
push
mov
push
mov
xor
pop
cmpsb
mov
push
xchg
jb
add
or
shll
push
lock
cwtl
loopne
mov
adc
add
xor
or
pop
add
add
add
and
cmpsb
push
add
leave
movsb
cmp
push
mov
test
lret
add
add
insb
mov
or
adc
pop
shl
mov
push
sbb
ror
aam
adc
or
sahf
xchg
push
xchg
mov
cld
cmp
pushf
and
add
sbb
jne
sahf
rclb
outsb
pusha
int3
mov
xor
xor
testb
mov
xor
ljmp
insl
or
push
ss
and
add
adc
and
enter
sbb
bound
xor
in
sbb
mov
push
popa
push
or
js
shl
jle
daa
ficoml
xor
xor
shlb
shlb
mov
test
inc
lds
call
pop
sub
std
mov
ret
subb
push
mov
jle
jge
add
repnz
into
push
add
jle
sub
pusha
push
lret
call
fsubl
addb
popa
test
ret
inc
fadds
mov
xor
dec
stos
push
xchg
dec
js
push
xchg
test
les
cld
lds
roll
lcall
adc
add
or
sub
pusha
in
ret
add
cwtl
mov
loope
cmp
xor
adc
xor
mov
xor
ror
adc
add
mov
andl
test
es
mov
sub
mov
fisttps
dec
data16
and
mov
or
xor
mov
push
push
test
ret
cs
or
rcll
in
sarb
mov
xor
add
fisttps
pop
xor
inc
sbb
xchg
sahf
aam
inc
lods
push
test
sti
add
std
fbstp
pop
loopne
xchg
out
xor
test
enter
pusha
push
adc
andb
imul
pop
mov
fs
mov
add
movsb
ret
adc
push
inc
dec
enter
test
dec
aad
mov
sbb
adc
sbb
add
inc
es
or
rclb
test
jo
cmp
pop
and
fadds
cltd
sar
data16
data16
pop
loope
adc
xor
sub
sahf
sbb
mov
push
and
loopne
push
or
push
fsubs
add
out
psubusw
sub
inc
fiaddl
push
push
push
lea
push
cmp
add
sbb
add
push
aam
stc
sbb
push
jmp
sbb
xor
mov
jg
sub
andl
inc
orb
inc
add
out
adc
add
xchg
out
add
mov
and
inc
add
cmp
jbe
mov
add
push
adc
daa
sbbb
movsl
add
dec
adc
mov
bound
negb
out
es
aad
sahf
adc
fisubrs
mov
mov
sar
xor
jo
rorl
adc
push
dec
sti
mov
or
js
es
dec
hlt
loop
push
push
ss
pushf
lcall
add
lahf
jne
and
inc
arpl
adc
or
pop
arpl
add
stos
jo
jle
push
add
mov
imul
and
stos
sub
add
in
ds
daa
dec
mov
mov
mov
or
xorl
loop
movsl
push
pop
imul
jo
repnz
pop
fsubrl
add
add
les
cs
add
mov
add
sub
decl
sahf
add
mov
jne
jle
imul
out
outsb
inc
mov
rcll
cli
or
ret
sbb
sub
sub
int3
mov
push
jbe
addr16
xor
or
cmp
mov
push
test
push
mulb
push
add
xchg
push
loopne
test
inc
es
mov
adcb
or
mov
mov
mov
xor
add
into
sbb
lods
sti
add
push
test
cltd
mov
mov
add
pop
rclb
pop
add
mov
cmp
xor
call
shrb
push
mov
push
dec
shl
fsubrp
shlb
or
jbe
pusha
test
test
or
adcb
rolb
int3
xor
cs
std
leave
mov
test
push
adc
xor
push
mov
cs
sub
shll
xor
inc
jl
or
test
push
add
lock
aam
mov
cmp
addb
rolb
push
xchg
cmp
outsb
pop
in
test
push
adc
or
shl
test
xor
xchg
test
dec
sbbb
adc
je
inc
dec
adc
data16
cmpsb
sub
test
in
fs
sarl
shlb
addb
add
shrb
adc
xacquire
enter
orb
dec
sub
or
and
subb
pop
inc
mov
sbb
mov
ret
sbb
adc
xchg
sbb
add
je
add
adc
cld
push
adc
aam
je
add
call
mov
orl
add
mov
lock
mov
pusha
sub
and
push
in
test
and
in
fiaddl
inc
test
and
xor
call
inc
and
pop
and
adc
test
add
popa
cmp
sbb
or
test
push
test
sarb
pop
and
add
fsubs
adc
xchg
fcom
mov
call
sbb
enter
in
or
or
jl
adc
inc
pop
lds
or
orl
loopne
jb
dec
sbb
sub
mov
test
sti
mov
add
aam
fadds
test
xchg
iret
and
push
test
sbb
dec
sub
lds
mov
and
jp
adc
sbbl
test
adc
sbb
mov
std
push
lea
pusha
enter
mov
bound
cmp
ret
shll
pushf
dec
or
xchg
jae
xor
adc
inc
ret
mov
adc
xor
xchg
pop
push
inc
pusha
mov
testb
mov
ficompl
adc
and
inc
dec
mov
bound
dec
rcrb
ss
popw
test
or
push
xor
adc
push
mov
xchg
xchg
nop
add
loopne
hlt
push
loopne
xor
insb
mov
and
adc
enter
jmp
adc
filds
adc
es
loopne
mov
nop
stos
sti
xor
or
inc
push
push
dec
push
push
dec
je
xor
cmp
cmpsb
jg
rcrb
dec
insl
xchg
mov
xchg
jo
data16
cmp
add
sbb
fs
rcrb
cmp
loopne
stos
pop
pusha
push
xor
hlt
std
mov
add
push
orl
mov
cmp
mov
jle
test
aam
mov
and
ss
test
cmp
xchg
jp
xchg
mov
push
test
xor
leave
lcall
iret
and
push
xor
mov
push
sub
dec
inc
and
xchg
mov
sub
xor
dec
cli
mov
mov
mov
enter
scas
add
movsl
push
enter
mov
mov
popl
mov
adc
sbb
mov
or
inc
xor
adc
pop
mov
or
mov
test
cltd
add
inc
or
js
add
push
xchg
and
in
mov
xchg
push
adc
lods
pushf
sub
dec
pop
jo
dec
test
mov
and
mov
or
ficoml
pop
xor
mov
sbb
jmp
adc
shlb
mov
ja
gs
cld
ficoml
and
push
inc
push
cld
add
add
mov
push
decl
pop
push
pop
mov
leave
mov
xor
mov
ficoms
adc
mov
daa
or
out
sahf
imul
and
add
xchg
xchg
dec
inc
xor
dec
mov
xor
decb
lock
lods
adc
pop
incb
cli
call
mov
jecxz
ljmp
inc
test
cmpsb
into
mov
pop
xor
xchg
or
xchg
ljmp
adc
insb
mov
call
or
inc
sbb
lods
adc
mov
xchg
add
fs
dec
adc
sub
cwtl
test
push
xor
and
adc
rclb
and
or
add
adc
ljmp
and
and
stos
in
mov
int3
test
out
push
pop
cwtl
inc
and
out
jo
xchg
les
sub
roll
popa
jp
stos
leave
fisttps
push
add
cmp
in
add
pop
jg
clc
adc
test
pop
xor
test
pop
or
xchg
lock
call
aam
mov
sbbl
push
sbb
xor
xor
sub
int3
sub
testb
sub
stos
dec
and
mov
mov
add
dec
cmp
inc
xchg
dec
cmp
test
mov
dec
movsl
subb
pop
xor
or
xchg
fs
adcb
add
ret
mov
push
dec
test
cmpsb
int
adc
mov
inc
mov
mov
push
inc
mov
data16
or
jo
int
adc
xchg
sub
pop
mov
xor
cmp
test
shlb
add
push
lods
sub
mov
mov
mov
incb
and
test
mov
lods
pop
ds
and
outsb
inc
cltd
int3
orb
mov
push
and
push
xor
or
cmpsb
aam
inc
pusha
cwtl
lret
out
in
ret
dec
mov
and
movsb
inc
inc
test
xchg
sbb
pop
jo
push
and
sbb
sub
aaa
xchg
imulb
test
test
mov
gs
jbe
js
lods
push
push
sbb
call
dec
nop
inc
xor
or
add
adc
inc
push
cmp
mov
pop
mov
and
fiadds
shrb
xchg
xor
nop
push
inc
inc
xorl
pop
or
push
add
adc
push
push
xor
sub
dec
push
sbb
nop
jo
in
pop
cmp
jb
adc
test
or
add
mov
and
add
lock
push
sub
adc
inc
aaa
ret
push
pop
orl
mov
adc
push
jbe
ret
cs
nop
jg
fs
jbe
int3
add
aam
xchg
or
rclb
ljmp
xor
mov
loope
data16
dec
shrb
ret
loopne
mov
inc
lock
adc
sbb
mov
ds
rolb
mov
lock
push
inc
test
test
mov
add
andb
pop
inc
test
dec
enterw
xchg
jbe
fmuls
sbbb
aam
xor
add
sbb
and
inc
leave
xchg
dec
bound
mov
es
add
and
cmp
dec
test
lret
mov
mov
test
incb
ret
inc
mov
orb
inc
fmull
cli
sub
sti
xchg
or
dec
xor
lcall
or
jbe
push
aam
cmp
mov
rolb
inc
sti
test
dec
push
fs
loope
xor
test
test
mov
adc
sub
aam
inc
leave
adc
scas
adc
mov
adcb
or
subb
and
mov
sbb
add
jl
push
push
or
dec
daa
push
mov
mov
cmpsl
jo
inc
stos
in
rolb
inc
cs
push
xchg
pop
mov
xchg
test
xor
lcall
aam
lods
and
data16
jbe
add
adcb
sub
enter
jb
fwait
mov
and
sbb
push
pop
call
adc
rol
pop
hlt
or
mov
xor
std
stos
xchg
dec
sub
mov
push
mov
pop
xlat
mov
stos
sbb
loopne
loopne
fxam
jg
mov
rolb
in
inc
ja
sbb
aam
aas
cmc
jecxz
cmp
adc
inc
loopne
std
dec
std
dec
lret
sbbl
adc
sub
shll
lds
inc
inc
popa
mov
xor
add
scas
cmp
push
pop
loop
add
in
enter
and
ljmp
cmp
in
pop
mov
rolb
mov
test
fsubp
add
test
fs
cmpsb
mov
xchg
xchg
push
nop
lret
call
sbb
mov
xor
loope
cmpsb
push
add
addl
movsl
mov
push
faddl
mov
adc
js
test
and
mov
inc
or
into
xor
xor
dec
jne
sti
dec
test
movsb
add
lcall
mov
push
outsb
sbb
lea
adc
push
and
sbb
push
mov
dec
cmp
and
mov
and
xchg
push
dec
xchg
sbb
test
test
sub
out
loopne
nop
push
shrl
mov
jle
cwtl
push
sub
adcb
cmpsb
push
dec
sbb
inc
shl
and
shlb
fsubs
xchg
data16
leave
jp
jo
add
cmpsb
sbb
and
in
incb
sub
or
data16
push
test
test
push
dec
push
roll
pop
push
gs
aaa
push
fistps
andb
inc
repnz
adc
cwtl
fistl
mov
cmp
mov
add
inc
add
js
sbb
add
mov
xchg
pop
fs
jp
adc
fadds
mov
les
adc
adc
xor
es
lods
dec
std
adc
int3
xchg
xor
xchg
sub
pushw
push
and
sbb
xor
sub
push
push
inc
jo
or
bound
int3
adc
mov
xchg
adc
push
push
mov
or
add
lcall
cwtl
xchg
lcall
out
adc
push
rclb
popf
stos
adcb
hlt
dec
movsl
pusha
push
dec
and
loopne
push
sub
popa
adc
dec
bnd
and
push
cmpb
mov
jo
outsb
mov
sbb
lret
inc
xchg
push
or
xor
test
movsl
push
mov
dec
pushf
nop
shll
jg
jbe
test
decb
test
cmp
and
mov
ret
and
fwait
or
push
sbb
cwtl
leave
push
xor
inc
mov
pushf
pop
sbb
sbb
push
xchg
inc
and
jb
mov
xchg
jl
jb
inc
add
inc
jp,pt
addl
aam
insb
das
inc
gs
mov
cmpb
jo
push
inc
xor
jo
call
add
mov
mov
jne
xchg
push
fs
leave
insb
cmp
lock
in
and
loope
sbb
es
pusha
addb
jl
cmpsb
push
add
aam
adc
pop
scas
or
adc
add
pop
and
subb
pop
xabort
leave
std
sbb
loopne
hlt
xchg
sub
push
cmc
xor
idivb
cwtl
xor
and
stos
sbb
xchg
mov
xchg
adc
in
lods
sbb
fists
hlt
scas
push
push
cld
or
aam
iret
mov
mov
fsubrl
addl
inc
inc
sub
in
popa
adc
pusha
xchg
outsb
adc
xchg
push
inc
mov
mov
xchg
lock
jle
out
mov
cmp
rcl
sti
add
inc
adc
cltd
inc
in
fcompl
inc
cmpl
iret
lds
xor
ret
mov
jle
adc
cmp
lods
jecxz
push
test
and
adc
lea
or
hlt
loope
or
mov
inc
mov
test
push
inc
dec
dec
or
ret
mov
xchg
fs
mov
into
cli
xchg
lret
call
inc
push
test
sahf
addb
and
shl
pushf
add
std
add
mov
mov
or
or
jl
pop
js
test
dec
repnz
mov
insb
addb
push
cltd
inc
in
mov
sbb
or
inc
aam
mov
icebp
jp
int
into
stos
pop
sti
aam
push
cmpsb
sbbb
clc
or
pop
mov
mov
dec
inc
les
loopne
dec
sub
pushf
stos
xchg
rorb
adc
inc
inc
stos
cmp
xchg
out
in
and
sub
jl
xchg
cmp
push
cmp
test
jg
sub
pop
push
lret
repnz
mov
test
pop
pusha
iret
adc
or
hlt
pop
inc
dec
pusha
xor
aam
lock
sar
fists
sub
adc
dec
xchg
repnz
nop
cli
mov
mov
and
dec
jl
dec
in
push
test
leave
mov
xorb
and
data16
or
xchg
xchg
sub
mov
xchg
in
lcall
xchg
movsb
repnz
xchg
shrb
or
xchg
add
hlt
call
add
adc
leave
stos
xor
ret
pusha
sub
pop
push
lret
pop
add
ret
enterw
sub
add
mov
dec
push
mov
into
data16
adc
mov
daa
leave
sub
popa
sub
adc
push
cld
shrb
inc
or
jno
sbb
push
push
es
inc
sub
xor
sahf
movsb
in
dec
inc
adc
stos
rolb
adc
push
leave
and
bound
mov
mov
mov
dec
mov
sub
es
shll
loope
push
into
adc
ljmp
xor
pop
sti
mov
cld
lods
cmp
push
lret
test
movsl
outsb
insb
push
push
jne
push
test
test
xchg
add
sub
movsl
push
pusha
push
push
outsb
shlb
xor
hlt
push
fdivrs
adc
xchg
or
sti
pop
mov
add
xor
sarb
push
add
xor
adc
les
xchg
out
and
ds
shlb
mov
mov
inc
sub
inc
fisubrl
popa
push
xor
mov
sub
or
xor
sbbb
inc
xor
xchg
add
test
rcrb
or
sbb
enter
xchg
in
test
orb
inc
mov
movsb
xchg
inc
stos
and
adc
mov
xchg
xor
hlt
inc
mov
xor
adc
inc
clc
mov
sub
xor
hlt
push
lds
dec
shlb
dec
fs
inc
or
or
xor
push
inc
movsb
push
cltd
xor
mov
les
cwtl
lock
adc
sbb
add
inc
gs
ret
jo
xor
stos
hlt
adc
test
inc
sub
fimuls
es
loopne
cmp
inc
mov
push
xchg
and
push
std
xchg
loopne
inc
cmp
xchg
aam
mov
mov
inc
fiadds
xchg
inc
and
mov
adc
int3
int3
xchg
shlb
inc
or
inc
mov
sub
add
pusha
es
dec
fsubp
push
data16
push
lea
clc
inc
xor
ficoms
and
push
pushf
pop
call
sbb
xchg
testb
push
sbbl
inc
ret
jae
cmp
cmp
pop
sbb
adcb
jl
scas
adc
mov
aam
xchg
inc
jae
adc
shrb
dec
js
sub
test
push
add
incb
xchg
mov
pop
sub
jl
inc
fcomp
jg
adc
mov
and
mov
hlt
mov
sahf
dec
and
lods
call
sbb
sub
pop
xor
mov
hlt
sub
push
call
in
movsb
pop
mov
jo
add
mov
and
cmp
lods
and
xor
pop
rcrb
pop
dec
xor
xor
pop
push
jp
call
enter
jg
mov
xor
xchg
xchg
sub
push
xchg
push
lcall
dec
xchg
sbb
mov
inc
sub
in
and
and
repnz
add
xorb
inc
cmp
movsb
sub
std
je
jp
inc
movsl
nop
repnz
les
xor
lret
xor
jp
sub
mov
ljmp
xchg
in
push
inc
call
cwtl
cmp
cmp
xorl
mov
adc
rcl
and
push
adc
add
daa
and
and
pop
sub
stos
loopne
xor
sbb
add
pop
xchg
ds
and
cwtl
lret
inc
jp
cmp
pop
pop
cmpsb
xor
bound
or
in
js
inc
xchg
push
ret
sub
popa
sbb
sub
or
add
int3
shl
cwtl
and
jno
pushf
jbe
test
inc
adc
adc
xor
shlb
fmull
mov
inc
out
fbstp
pop
add
push
mov
pop
in
popf
push
mov
andb
hlt
in
dec
or
stos
inc
cmpsl
mov
mov
movsb
rcr
jle
and
adc
xor
adcb
js
in
push
mov
push
dec
mov
out
pop
loopne
jb
nop
or
mulb
dec
add
fsubs
or
lcall
and
cmpsb
test
dec
shrb
xor
and
roll
jg
or
add
and
aam
inc
leave
pusha
das
xor
and
xor
or
sub
mov
cmp
lock
mov
movsb
nop
adc
pushf
jle
dec
rolb
ret
fisubl
inc
sub
fdivl
je
cs
push
mov
jne
std
mov
mov
es
scas
jo
lock
push
out
sbb
push
add
sub
sti
sub
inc
sub
push
rol
movsb
std
xchg
fmul
test
sbb
adc
push
shrl
add
adc
xchg
mov
aam
leave
gs
je
xor
enter
push
xchg
add
pop
dec
clc
push
cltd
dec
clc
in
sub
subb
ret
adc
pop
jo
mov
cmp
pop
stos
orb
mov
mov
test
xor
lock
xor
data16
inc
xchg
lock
fs
adc
or
pop
or
adc
int3
sub
int3
add
mov
je
test
movsb
and
push
inc
dec
test
jb
sub
jo,pt
push
push
pop
jo
inc
sub
pop
sbb
jecxz
xchg
add
test
test
inc
aam
in
add
and
ret
push
je
inc
dec
insb
ljmp
pusha
add
sub
mov
cmp
sbb
sub
jo
out
aam
stos
lret
test
or
xchg
movsb
nop
push
jb
or
lret
in
ds
test
inc
mov
leave
push
jp
pop
rorl
les
mov
inc
mov
push
fisubrs
or
push
inc
pop
mov
orl
lret
mov
xor
fs
es
loopne
push
loop
lret
repnz
dec
enter
adc
or
add
scas
fcoms
cs
pushf
mov
lods
rolb
test
xor
jl
aam
shlb
cmpsb
sub
lcall
xor
and
add
push
inc
test
out
and
xor
cmp
xchg
ret
pop
stos
test
pop
and
and
sti
push
adc
fdivrl
mov
xor
sbb
sahf
loopne
xchg
dec
gs
add
out
fidivl
pop
sub
popa
xor
mov
clc
sub
lret
push
push
ret
and
or
andl
mov
rorl
inc
xor
ret
aam
inc
and
subb
xor
orb
cld
call
add
xor
ljmp
lock
and
aam
or
fcmove
movsb
ret
pusha
xchg
mov
dec
out
xorl
adcb
xchg
push
in
cmp
fs
inc
test
push
jp
sbb
pop
mov
inc
inc
sbb
stos
fmuls
adc
adc
test
sub
mov
or
adc
cli
sbb
lretw
adc
mov
rorl
pop
dec
mov
xor
xchg
movsb
hlt
and
data16
je
mov
pusha
inc
and
cmp
fcoms
or
pushf
sub
cwtl
add
out
push
dec
push
dec
lahf
call
adc
add
negl
test
adc
lods
popl
out
add
sub
mov
sub
inc
adc
add
add
pop
xchg
pop
inc
pop
adc
add
mov
decl
in
adc
sbb
push
push
dec
push
adc
dec
adc
push
cli
incl
sbb
add
sub
pop
sub
xor
adc
mov
leave
ret
xchg
push
lock
or
cmp
sahf
or
add
mov
loopne
sbb
ret
add
cmp
cmp
lret
sub
ss
sub
xor
repnz
pop
sub
push
and
test
pop
outsb
dec
adc
mov
fcmovbe
aad
loope,pn
inc
in
ss
subl
inc
or
test
xor
sub
decb
inc
add
test
pusha
xor
xchg
or
and
sub
addb
sbb
leave
shll
test
xor
xchg
mov
xchg
pop
ret
rolb
shrl
xchg
and
dec
lds
aam
adc
je
sbb
inc
ret
aam
out
dec
sub
mov
adc
fdivr
inc
mov
add
lea
adc
mov
xchg
mov
cmp
xchg
inc
or
sbb
in
in
lods
xor
sub
aam
dec
jo
dec
out
shlb
pop
inc
out
nop
shll
out
dec
stos
aad
xchg
mov
pop
cwtl
ljmp
and
adc
inc
or
sub
jne
outsb
or
adc
fsts
or
std
pop
sahf
dec
lods
dec
ljmp
xchg
dec
xorb
loop
sbb
add
orb
pusha
andb
jae
push
mov
repnz
mov
jl
mov
ret
push
popa
lea
mov
push
les
xchg
fs
inc
stos
cltd
xor
sti
mov
test
xchg
pusha
shr
xchg
test
dec
orl
pusha
int3
nop
cmp
and
xchg
and
mov
jo
mov
xchg
push
call
xchg
imul
movsl
xchg
or
xchg
add
xchg
sub
movsb
xchg
loopne
nop
insb
and
xor
jo
and
push
test
mov
jb
iret
jb
cmpb
or
and
push
imul
dec
add
cs
pop
and
mov
adc
pushf
loopne
lods
push
xor
or
int3
and
add
and
mov
fsubp
push
shrb
rclb
or
sahf
ljmp
xorb
add
insb
cmpsb
or
fdivrl
mov
adc
andb
sbb
mov
add
xor
or
movsb
or
dec
adc
or
mov
or
xor
shlb
mov
push
xchg
movsl
push
sub
dec
lock
push
cmpsb
rolb
and
mov
adc
cmp
loopne
add
and
fmul
or
clc
jbe
test
xor
fisubs
xchg
xchg
inc
repnz
or
fs
adc
fbstp
pop
adc
in
in
pop
mov
mov
mov
call
pop
and
push
inc
je
test
dec
adc
fists
loop
pop
icebp
add
ret
shrb
inc
fcoml
push
out
mov
pop
or
pop
push
xchg
bound
inc
xchg
je
decb
inc
mov
adc
je
mov
lds
pop
pop
xchg
sbb
shll
into
jne
bound
and
pop
fistps
sub
call
adc
jo
pusha
in
and
int3
xchg
cld
dec
pop
add
adc
pop
push
test
xchg
mov
sbbb
mov
cwtl
pop
mov
jb
into
xchg
or
cmpsb
inc
cmp
popa
mov
in
pusha
in
out
sbb
push
or
mov
adc
inc
lods
and
mov
loop
cmc
push
shrb
dec
jo
mov
cmpsb
adcb
movsb
jecxz
adc
and
repnz
or
call
push
shrl
cli
sub
and
adc
pop
pop
ficompl
adc
xorb
mov
push
adc
popa
test
enter
xor
add
sub
push
adc
adc
and
sbb
mov
pop
nop
pop
mov
in
mov
add
sub
mov
xor
les
xor
or
or
mov
mov
adc
inc
push
in
pop
jb
mov
xchg
inc
mov
daa
fdivrp
adc
add
cli
push
mov
stos
leave
outsb
push
and
mov
les
adc
icebp
lds
add
push
push
dec
jo
mov
push
test
ret
sub
mov
movsb
in
push
hlt
push
push
push
push
in
add
sbb
mov
test
inc
or
cmpsl
call
rorl
ljmp
cmc
push
pop
pop
dec
inc
cmc
cmpsb
or
cld
ss
pusha
sbb
shlb
mov
mov
mov
stos
iret
xchg
cmp
enter
xchg
push
sbb
sbb
leave
jecxz,pn
push
enter
add
mov
mov
test
sbb
mov
adc
adc
or
loope
popa
fdivrl
inc
push
xchg
pop
sub
mov
push
add
adc
push
sbb
mov
inc
jb
loope
enter
dec
mov
or
push
adc
push
and
incb
pushf
push
js
xchg
push
ljmp
add
dec
mov
mov
rolb
pop
xchg
inc
fimull
xchg
int3
push
js
push
cmp
imul
adc
mov
push
enter
add
mov
and
adc
push
add
inc
and
jp
pop
out
int3
cwtl
sub
add
jb
in
push
and
ret
pop
push
sub
adcl
adc
adc
inc
and
inc
aam
movsl
adc
fidivl
push
push
daa
add
in
mov
clc
adc
cwtl
add
xchg
add
lods
push
call
test
ljmp
dec
cmp
xchg
cltd
inc
cmpsb
mov
cmpsb
cmpb
inc
enter
cltd
mov
xchg
xchg
xor
mov
inc
insl
xor
inc
lods
test
mov
into
test
mov
jl
sti
sub
fists
sbb
jle
add
add
pop
add
and
ljmp
jp
fcoms
add
out
leave
add
xor
pop
xchg
lcall
sbb
push
pusha
int3
nop
call
sbb
and
dec
mov
fs
clc
sbb
iret
xchg
or
scas
orb
sahf
lock
cmp
mov
rcrb
inc
push
lret
sahf
push
ss
sub
bound
movsl
dec
loop
data16
cmp
sbb
leave
and
test
add
xchg
or
leave
dec
sub
mov
xchg
mulb
hlt
mov
clc
pop
jl
ljmp
enter
xorl
popa
ret
dec
inc
xchg
pusha
add
or
xchg
popa
insb
xor
sbb
mov
or
decb
in
mov
sbb
xchg
lret
add
cmp
mov
test
adc
lret
lock
jg
inc
cmp
pop
insb
and
dec
lods
add
sub
sub
dec
sub
push
dec
push
cmp
push
sub
dec
rcr
and
or
add
lea
cltd
inc
xor
mov
add
push
cmpsb
call
and
xor
dec
popa
xchg
cwtl
data16
into
dec
adc
shl
test
out
adc
cmp
push
stos
and
push
pop
push
sti
inc
add
push
xchg
repnz
scas
add
mov
pop
adc
stos
or
mov
daa
enter
insb
jbe
and
push
sub
add
inc
sarl
push
push
sbb
xor
adc
arpl
xchg
pop
nop
adc
sub
and
pop
sti
int3
adc
enter
rcrb
lock
shlb
dec
adc
xchg
ret
cmp
in
adc
shrb
stos
lret
dec
sub
cmp
mov
inc
xchg
pop
aam
inc
je
push
xorb
jo
dec
inc
xchg
sbb
push
push
mov
repnz
xor
fwait
pushf
jl
call
sub
inc
loope
andb
dec
mov
push
cmp
dec
fwait
sub
pop
push
and
in
add
or
fiadds
and
pop
test
push
lcall
sbb
sub
cmp
or
addb
call
clc
decl
iret
mov
sub
sbb
dec
adc
mov
inc
mov
xchg
pop
cli
cs
dec
cwtl
mov
ret
test
push
popf
adcb
je
test
jo
stos
lret
add
add
les
xor
adc
inc
in
stos
pop
sub
inc
xacquire
xor
adcb
cltd
pop
lcall
insb
insb
mov
clc
call
ljmp
cld
loopne
cmp
or
mov
mov
popa
and
outsb
test
or
add
and
fistpll
xchg
xchg
cmp
out
or
adcl
sbb
push
inc
popf
scas
adc
jg
cld
call
xor
shrb
mov
xchg
jl
dec
ret
test
scas
and
mov
sub
add
cmpsb
adc
dec
popa
cwtl
imul
add
xor
ds
push
dec
data16
mov
sahf
leave
rol
dec
add
lods
or
inc
hlt
movsl
and
call
dec
xchg
insb
test
jae
and
mov
push
jae
iret
rclb
adc
dec
and
rcrb
or
iret
or
sub
cmp
es
inc
mov
xor
sub
pop
jo
test
fadds
adc
adcb
cmpsl
add
scas
and
sub
add
or
xchg
sbb
xchg
in
dec
or
jp
icebp
xor
cmp
in
xchg
pusha
dec
cltd
mov
add
pop
adc
mov
xchg
inc
xchg
xor
fs
sub
add
mov
addr16
movsl
mov
aam
sbbb
bound
push
aad
mov
inc
adc
data16
out
inc
loopne
jo
dec
dec
cwtl
lcall
xchg
loope,pn
shrb
push
imul
push
int3
loopne
mov
inc
adc
fisttps
pop
xchg
fs
adc
leave
jb
outsb
stos
es
fs
mov
jbe
call
xor
and
and
add
dec
cmovs
push
repnz
jo
loopne
sarb
hlt
test
jle
push
rorl
mov
or
add
fiadds
cmp
add
mov
loopne
jg
hlt
adc
ret
ljmp
jl
or
inc
shrb
xchg
lcall
std
sub
orb
add
add
sub
push
pushf
pop
push
push
dec
dec
stos
aam
sub
ss
pop
mov
add
hlt
sahf
pushf
test
outsb
cmp
push
lds
dec
mov
inc
inc
push
pop
lock
andb
push
or
push
filds
test
fildll
loopne
in
test
mov
mov
push
pop
mov
mov
out
dec
outsb
inc
xor
imul
fiaddl
push
mov
lods
test
xchg
enter
shlb
sbb
and
pusha
adc
mov
sbb
adc
ljmp
fcompl
bnd
xor
add
adc
adc
sub
jo
mov
aam
lods
bound
mov
or
in
lcall
test
add
mov
or
inc
add
fmul
mov
adc
xor
push
nop
mov
out
es
xchg
mov
pop
inc
push
xchg
decb
sbbl
lods
xchg
fidivl
dec
add
or
add
mov
iret
bound
xchg
fdivr
add
adc
scas
add
xchg
or
outsb
mov
dec
sbbb
cmp
ficoml
pop
aaa
lock
jg
mov
or
int3
xchg
out
sub
mov
je
dec
push
enter
test
and
xchg
pop
or
orb
dec
xchg
sbb
mov
and
jo
les
ret
add
in
jle
in
dec
or
test
in
adc
jbe
cs
rolb
jp
push
mov
push
sbb
int3
sti
movsb
lcall
and
adc
in
pop
sbb
ljmp
jecxz
mov
xor
inc
adc
add
dec
packssdw
and
out
mov
adc
push
lock
push
lea
aam
lret
pop
xchg
subl
push
xchg
push
sbb
push
push
hlt
add
ljmp
dec
mov
push
testb
loopne
mov
rcl
or
sbb
iret
dec
inc
xor
pop
cmp
lret
and
mov
jo
pop
push
add
stos
cmp
fcoms
gs
int3
xchg
inc
adc
dec
dec
or
pop
xor
and
js
jl
sub
xchg
inc
push
idiv
add
xchg
ds
ficoml
repnz
les
adc
sbb
lods
sbb
adcl
push
xor
xor
cltd
or
push
shl
push
ret
int3
pop
in
out
call
test
lds
or
add
shlb
dec
sub
inc
cwtl
and
xchg
inc
sbb
in
sbb
xchg
inc
nop
popf
and
in
push
inc
cwtl
inc
leave
add
icebp
fs
inc
or
or
push
fidivl
sub
ret
shlb
dec
mov
and
and
test
sti
sar
pop
int3
sbb
push
sub
pop
aam
mov
ljmp
mov
insl
dec
inc
add
xor
or
cmp
test
fsubrl
pop
jo
adc
adc
pushf
nop
dec
insb
addl
push
push
in
push
sub
test
push
mov
leave
cli
sti
and
inc
add
mov
cmp
pop
push
int3
ficoml
jb
add
mov
test
sbbb
and
notb
xorl
inc
pop
data16
adc
roll
ljmp
inc
and
xor
sbb
xor
adc
push
lcall
int3
popa
cmp
add
insb
or
xchg
and
cs
xchg
addb
enter
xor
sbb
clc
and
add
sahf
inc
add
xor
sbb
fidivrl
int3
xchg
add
add
inc
adc
xchg
int3
push
adc
xor
and
andl
inc
inc
movsb
xchg
mov
cmpsb
jo
cli
and
inc
sub
std
les
or
test
leave
and
sbbl
popa
cltd
mov
sub
adc
mov
jp
add
lea
inc
outsb
xor
cld
push
ljmp
push
mov
add
adc
ficompl
incb
sbb
mov
mov
add
hlt
mov
test
test
xchg
xchg
sbb
vmovss
fs
mov
mov
divb
bound
or
mov
bound
adc
and
xchg
test
rclb
aam
xor
loope
test
sub
loope
pop
dec
ficoms
rclb
xor
push
xchg
push
aam
sub
or
dec
and
ds
add
add
sub
cltd
subl
gs
scas
push
push
dec
xchg
dec
cs
hlt
dec
jb
or
stos
sub
hlt
adc
pop
lock
mov
hlt
adc
sub
mov
inc
mov
push
xor
dec
mov
mov
mov
in
sub
movsl
mov
or
and
xor
and
jbe
lret
imul
out
add
dec
mov
and
dec
pusha
int3
js
sbb
mov
add
pop
inc
ds
pop
xchg
jp
inc
sbb
sub
rorb
and
fisubl
cmp
mov
xchg
xor
add
fists
addb
sahf
aam
sbb
xor
push
enter
adc
add
push
push
in
cmp
inc
dec
lea
mov
mov
adc
add
cmp
push
cmp
or
or
ds
lds
inc
mov
xchg
ret
shl
xchg
popa
bound
xor
inc
mov
fistps
sbb
adc
inc
pop
adc
sub
jle
into
add
cmpb
addb
leave
sbb
add
movsb
sub
ss
pushf
inc
outsb
ret
mov
mov
mov
call
mov
mov
pusha
test
mov
add
dec
or
out
sub
push
push
enter
imul
fbstp
dec
push
sbb
inc
jb
movsl
ds
pop
add
cmp
jge
push
sahf
add
subb
lea
push
add
lcall
or
push
iret
popf
cltd
xchg
or
sbb
dec
adc
pop
or
sbb
pop
adc
or
push
xor
xor
loop
and
pushf
dec
adc
push
int3
and
push
adc
add
into
push
pop
or
in
add
lods
inc
pop
mov
mov
hlt
push
or
xchg
add
adc
xchg
call
mov
shlb
and
and
pop
icebp
ljmp
lods
adc
inc
adc
add
gs
test
cwtl
sbb
push
dec
scas
mov
jg
testb
push
and
adcl
movsl
xchg
insb
notb
mov
lcall
or
sub
enter
or
fs
fsubl
test
es
dec
or
repnz
mov
sub
add
xor
or
pop
adc
andl
xchg
stos
mov
xor
lcall
push
and
push
mov
cmpsl
add
aam
mov
loop
sahf
jg
add
cltd
ret
cmp
jle
repnz
ss
xchg
bound
sbbl
pop
bound
hlt
adc
adc
lock
sbb
mov
mov
insb
dec
cld
pop
xchg
fdiv
adc
aam
jo
inc
sub
xor
sub
sub
stos
dec
iret
iret
insb
sti
rol
loopne
ficomps
xchg
roll
xchg
test
ljmp
mov
dec
ss
add
mov
ret
shlb
test
and
push
sub
cld
bound
inc
push
xchg
cwtl
pop
or
ret
push
int
test
int3
and
or
xchg
or
mov
add
xchg
mov
add
mov
push
xor
les
int3
sub
adc
add
pop
jno
push
scas
std
xchg
mov
movsb
les
jb
sti
mov
fdivs
or
cld
cmpsb
cltd
bound
mov
repnz
push
in
stos
pushf
ret
dec
mov
cltd
popa
add
inc
mov
cwtl
xchg
add
adc
cli
mov
or
clc
nop
push
nop
inc
mov
loop
push
bound
orb
adc
popa
cmp
lret
xchg
inc
or
nop
test
push
in
ret
dec
out
jbe
or
adc
add
test
mov
jb
iret
hlt
cwtl
mov
ret
inc
dec
sub
mov
push
or
sti
mov
add
add
pop
outsb
test
adc
cltd
mov
pusha
data16
insb
xor
dec
mov
in
mov
adc
xor
aaa
lcall
inc
pusha
push
int3
inc
adc
inc
dec
or
adc
add
adc
arpl
std
jbe
cmpsb
xchg
push
push
mov
and
sub
and
dec
loopne
or
push
push
push
jl
xor
pop
dec
xchg
adc
enter
add
mov
sbb
call
push
mulb
push
dec
mov
or
ret
push
adc
fiaddl
addb
xor
pusha
push
xchg
cmp
sbb
dec
ret
xchg
jb
hlt
pushf
dec
add
pop
pop
sub
adc
sahf
repnz
shll
aam
cmp
or
push
sbb
in
xor
xor
pusha
pop
lcall
sub
popa
mov
xor
dec
mov
dec
stos
rclb
loopne
scas
std
or
or
jb
sub
pop
push
add
data16
xorb
orb
pop
push
fs
insb
js
inc
data16
stos
lcall
push
inc
cmp
xchg
lcall
and
sub
bound
push
add
in
rorb
xchg
push
lret
add
jo
sbb
lret
and
scas
mov
jbe
std
xor
mov
or
jb
add
test
pop
and
out
push
or
inc
or
fs
nop
mov
or
dec
insb
xor
xlat
cmpsb
test
and
ss
jnp
push
cltd
push
into
scas
push
jl
rorb
push
mov
lretw
out
sub
or
push
cmpsb
add
fs
pop
jp
push
test
adc
stos
les
pop
xor
xor
dec
inc
xchg
dec
sub
sbbb
and
pop
push
mov
xchg
fdiv
sbb
or
mov
xchg
mov
mov
and
pop
stos
ss
xor
clc
adc
or
add
xchg
push
movsl
faddl
dec
mov
mov
sbb
les
call
and
push
mov
add
cs
mov
inc
or
and
dec
dec
sub
clc
sbb
into
cmp
adc
add
or
xchg
aam
cwtl
cmp
in
cwtl
nop
mov
add
mov
sub
les
dec
ret
push
int3
mov
in
dec
mov
fcmove
mov
adc
pusha
mov
xor
cmpsb
add
addb
jbe
aam
test
pop
pop
into
push
push
xor
mov
adc
insb
or
out
add
sbb
popa
push
push
add
xor
pusha
adc
fadds
adc
and
lods
retw
or
xchg
sub
aam
sbb
pusha
cmp
loopne
mov
mov
test
xor
mov
pop
sub
cwtl
rclb
sbb
adc
dec
add
pop
ljmpw
orb
sub
inc
push
push
loopne
inc
push
cwtl
jo
enter
dec
mov
mov
bound
in
cmp
cmp
test
decb
scas
mov
dec
mov
push
lret
mov
jb
aam
movsb
push
mov
add
inc
pop
add
pushf
sbb
sub
lock
mov
jg
xor
loopne
sbb
pusha
rorb
add
push
cs
pop
dec
push
xchg
aam
in
and
pop
xor
adc
add
adc
push
mov
and
pop
sub
aad
repnz
mov
cmpsb
subl
sahf
mov
dec
inc
inc
xacquire
cli
dec
es
addb
sbbb
or
lret
insb
sub
or
es
sub
xchg
lret
and
scas
add
rcrb
inc
add
pusha
push
dec
inc
jp
and
es
sbb
pop
pop
xor
sahf
ficomps
xor
xor
nop
xor
movsl
movsb
mov
push
pop
push
loop
adc
sbb
inc
mov
inc
adc
mov
mov
mov
cmpsb
push
lret
shlb
nop
inc
nop
inc
push
cmpsb
movsb
cli
mov
cs
adc
sub
push
sub
pop
xor
sbb
add
mov
push
adc
das
ret
test
sub
subb
fdivrl
xchg
pop
xlat
pusha
stos
test
lds
cmpsb
aaa
int3
push
ss
sti
in
mov
jg
adc
in
dec
sbb
sbb
xchg
data16
mov
push
dec
mov
push
int
sbb
pop
mov
daa
pop
les
sbb
push
mov
xchg
dec
and
inc
jo
push
lock
aam
xchg
ret
test
push
inc
mov
xor
aad
mov
icebp
inc
movsb
ret
loopne
inc
shr
test
call
push
cmpb
cmp
push
adc
push
scas
test
or
sbb
xor
xor
jo
sub
sbb
dec
inc
sub
es
sahf
pop
mov
dec
mov
sub
xchg
adc
clc
push
fidivl
ficoml
dec
ficomps
lods
push
jb
push
inc
test
cli
mov
dec
lcall
cmp
add
push
cmp
xor
push
pop
mov
xor
aam
xchg
and
test
push
mov
push
mov
push
or
pop
inc
vunpcklpd
movsb
dec
rclb
or
sbb
dec
call
xor
cmpb
xchg
pop
fwait
enter
xchg
xchg
dec
das
xor
cld
cmp
movsl
and
pop
jb
add
ret
sub
fs
test
mov
mov
pop
jle
mov
jg
sub
lea
push
push
push
or
jb
sub
orb
inc
ret
fcmovnb
or
push
xor
cmc
sbb
in
pop
clc
or
pop
lock
inc
mov
js
cmp
mov
mov
insb
ret
and
mov
and
loop
push
dec
fimuls
push
loopne
daa
pop
or
push
mov
adc
clc
mov
mov
xchg
cmpsb
pop
and
aam
lods
add
lret
cld
xor
xor
sub
and
pop
es
mov
dec
fs
shlb
adc
dec
pop
mov
shrb
mov
mov
add
inc
pop
movsb
pop
adc
add
rolb
add
stos
cmp
and
dec
and
divb
es
imul
pusha
pusha
dec
cmp
js
and
push
and
rorb
lea
mov
sub
push
sahf
cs
dec
adc
push
dec
mov
pop
mov
pop
or
adc
loopne
mov
add
ljmp
call
push
scas
xchg
xor
mov
loopne
pop
mov
push
sarb
sub
cmp
xchg
aam
xor
adc
ficoms
xchg
mov
inc
fcoms
out
sbb
insb
sub
mov
and
adc
mov
es
add
ss
push
xchg
push
and
int3
andb
sbb
xchg
call
rclb
push
xchg
aam
clc
inc
or
xchg
dec
cltd
jecxz
mov
push
imul
add
sbb
std
call
mov
and
insb
sbb
jl
je
in
mov
sub
add
lods
push
sahf
cmpb
cmpsl
push
and
xchg
xchg
ljmp
cmp
xor
xor
mov
mov
inc
movsl
into
scas
mov
and
push
fimull
or
ret
add
nop
adc
enter
and
jl
shlb
xor
movsb
mov
xchg
lcall
or
fildll
xchg
and
lcall
ljmp
aam
addb
rclb
sub
sub
insb
pop
pop
pop
or
sub
and
loopne
push
mov
mov
mov
sub
ss
fs
rol
gs
inc
addb
xchg
pop
test
dec
pop
les
pop
xchg
test
mov
es
inc
lods
movsb
cmp
pop
jo
or
push
popa
fldl
insb
leave
int3
clc
inc
or
add
push
inc
and
dec
push
inc
sub
mov
enter
sbb
cmp
inc
cltd
movsb
and
ret
adc
jp
test
and
jo
cmp
sbb
push
test
pusha
lcall
call
test
pop
smsw
inc
mov
cwtl
inc
mov
xor
sub
adc
or
add
sti
faddl
inc
xor
pushf
faddl
or
add
fs
pop
bound
push
mov
hlt
sub
and
lods
adc
push
sub
push
sbb
sub
movsb
outsb
pop
push
dec
push
lds
sub
call
xchg
dec
shlb
cmp
pusha
add
push
push
push
push
pop
inc
pcmpgtd
sarb
outsb
mov
ror
xchg
mov
add
or
adcb
leave
or
mov
add
mov
sub
sbb
jae
scas
add
dec
sahf
mov
js
inc
pusha
outsb
test
mov
pop
push
xor
test
shlb
in
sub
iret
push
push
mov
outsb
dec
add
mov
push
sub
add
mov
jo
mov
and
rorb
cmp
xor
xor
sub
pop
shl
push
and
mov
cli
loopne
test
mov
popf
push
push
inc
mov
lea
fsubs
jo
and
cmpsb
scas
daa
and
sbb
lret
and
sub
xchg
and
loopne
call
or
enter
mov
mov
and
psrlw
fcoml
ljmp
sbb
insb
pop
popf
imul
add
lods
lea
aam
and
or
subl
sbb
dec
sub
jl
ja
jl
xlat
js
test
push
or
sbb
mov
clc
and
fwait
pop
push
add
dec
in
dec
add
jge
add
enter
rolb
aas
test
lock
mov
or
insb
adc
sub
mov
mov
and
add
sbb
mov
jb
mov
lret
in
dec
test
int3
pop
icebp
dec
or
es
out
fisubl
mov
push
test
inc
and
loopne
mov
xor
loopne
in
bound
mov
cmpsb
add
hlt
int3
xchg
inc
cmpsb
in
sbb
add
sahf
sub
and
sbb
rolb
sbbb
rolb
lods
adc
adc
mov
pop
mov
pop
pusha
sub
fadds
and
and
and
mov
test
fbld
or
mov
sub
mov
loope
imulb
loop
mov
gs
push
sti
int3
cltd
mov
fdivl
es
loop
faddl
test
jp
test
sub
push
add
iret
sub
leave
mov
ret
outsb
shrl
and
xor
call
cmp
or
add
or
shrb
mov
and
loop
es
xchg
std
mov
fidivs
inc
jo
or
push
lods
mov
mov
inc
add
nop
fimull
sub
hlt
xchg
in
in
imul
dec
mov
data16
test
push
pop
lock
inc
xchg
sbb
and
cmpsb
add
cwtl
adc
xchg
and
and
push
push
sbb
mov
test
lret
sbb
sbb
push
dec
or
ds
push
adc
xor
or
mov
js
inc
call
inc
enter
lods
cwtl
xor
adc
and
mov
cmp
inc
sbb
in
pop
test
xor
add
sbb
adc
cld
xor
adc
pusha
pop
add
mov
aam
lcall
ror
adc
jmp
or
xor
cmp
jg
repnz
add
popa
adc
loop
sbb
cmp
adc
ficompl
mov
fdiv
push
xchg
push
cwtl
cwtl
roll
test
push
push
test
cmp
or
fadds
lds
push
adc
push
mov
inc
rolb
or
add
cs
ss
dec
in
andb
in
push
lret
mov
adc
out
and
add
bnd
jg
aad
and
adc
dec
push
pop
fcmove
gs
test
cmp
xor
and
bound
xor
bound
aam
adc
sbb
sbb
insb
iret
and
test
ret
pop
xor
js
dec
data16
add
aam
fimull
xorl
add
add
add
cmp
jmp
mov
fs
les
adc
adc
ret
jo
lea
push
test
movsl
adc
and
push
cmp
adc
adc
push
shrb
test
jo
jb
fmulp
xor
bswap
fs
mov
lods
leave
push
lock
les
adc
mov
xchg
mov
add
cmp
ficoml
inc
sbb
in
mulb
inc
cmpsl
test
sahf
add
or
ss
test
xchg
mov
and
pop
cltd
inc
es
inc
pop
dec
into
ret
and
or
mov
mov
es
push
push
rclb
mov
adc
call
inc
ret
fisubl
and
dec
mov
add
inc
mov
mov
fisubl
dec
ret
cld
and
mov
mov
mov
mov
lods
mov
or
rolb
mov
ret
add
mov
or
outsb
rcl
ss
or
inc
dec
mov
pop
mov
adcb
sbb
nop
dec
rcl
xchg
lret
loop
test
loopne
adc
or
ljmp
call
pop
pop
push
mov
adc
xchg
mov
lods
es
in
inc
adc
dec
or
inc
mov
scas
inc
and
xchg
in
lcall
inc
inc
ss
push
xchg
loop
jp
xchg
fadds
push
repnz
push
pop
inc
mov
mov
and
xor
or
xor
enter
dec
cltd
inc
popa
lcall
cmpsb
jle
imul
cmp
lahf
shll
jg
mov
jmp
push
dec
cld
push
push
push
clc
add
mov
cwtl
inc
aad
imul
mov
and
imul
jb
sbb
shrb
mov
xchg
ficomps
mov
and
fidivs
add
ljmp
push
push
dec
js
je
mov
jo
adc
cltd
adc
loopne
or
faddl
cmpsb
test
pop
outsb
loopne
je
sub
adc
xor
rcl
popa
cmp
test
adc
adc
xchg
test
rcll
test
rcr
bound
scas
and
inc
pusha
fdivs
and
sbbl
call
and
jno
xchg
orb
dec
pop
lret
sub
push
add
cmp
rclb
shlb
push
fdivl
push
pop
je
sbb
xor
sbb
add
aam
lea
lret
dec
out
in
dec
or
jnp
cs
add
adc
xchg
mov
adc
push
test
loopne
pop
dec
dec
sub
iret
shll
movsb
test
rclb
std
and
pop
or
movsb
loopne
mov
push
lock
inc
loopne
or
or
fiaddl
inc
dec
je
xchg
pop
ljmp
xchg
mov
call
adc
pop
lret
add
mov
sbb
test
sti
and
xchg
mov
dec
dec
cmp
in
out
cltd
add
gs
aam
pop
ss
hlt
test
ficomps
push
stos
adc
call
adc
call
jo
sbbb
iret
pop
push
lret
pop
cs
mov
repnz
sbb
push
call
cwtl
xor
push
or
cmp
iret
inc
dec
push
inc
loopne
fdivrl
aam
mov
mov
inc
sbb
sbb
push
fs
adc
xchg
insl
xchg
push
inc
loop
adc
adc
pop
xchg
sub
leave
ret
sub
adcb
or
sub
shrb
inc
jo
mov
cwtl
push
and
or
fcomp
aam
subb
iret
rcrb
loopne
ret
mulb
imul
mov
test
sbbb
jbe
add
outsb
sti
hlt
sub
fcmovu
or
dec
rolb
or
push
adc
push
or
enter
cmpsb
addb
test
popf
les
js
inc
test
jg
popa
push
dec
stos
cmp
shlb
nop
mov
lock
ss
test
inc
mov
push
sub
mov
nop
je
sbb
aam
jbe
mov
mov
push
mov
xchg
xchg
out
hlt
mov
lea
sub
and
mov
push
inc
sub
bound
push
inc
inc
shl
sub
inc
push
into
cmc
inc
and
dec
es
mov
inc
mov
inc
add
jb
xchg
adc
cld
cmp
into
dec
adcb
lret
xchg
es
test
mov
xchg
call
cs
shrl
or
cmp
inc
jne
xchg
or
fiaddl
nop
cmp
cmp
cmpsb
fcoml
loopne
or
mov
lret
and
and
mov
lock
or
fwait
sbb
jg
std
inc
sub
dec
adc
push
ret
ficompl
imul
sub
xor
mov
jo
sub
dec
movsl
adc
xchg
add
cmpsb
inc
jg
mov
adc
lock
nop
dec
sub
add
repnz
into
mov
or
xchg
adc
jl
cmp
add
pop
sub
int3
jb
ja
cmp
in
shlb
push
dec
xor
jg
add
nop
rcrb
dec
inc
xchg
pop
push
rcll
lret
sub
and
mov
sbb
jb
nop
ret
sbb
aam
and
adc
jl
mov
add
mov
xchg
adc
mov
lods
bound
add
mov
push
or
fdivl
mov
rcl
mov
xchg
int3
fimull
pushf
ret
mov
repnz
dec
jmp
je
add
call
mov
or
cmp
mov
ss
jl
jo
inc
pop
rcrb
aaa
lcall
aam
inc
data16
adc
add
scas
adc
and
dec
pusha
xchg
mov
pop
in
push
jo
sub
push
leave
sub
or
xchg
divb
push
push
repnz
inc
and
shlb
add
lcall
cld
shlb
dec
cltd
or
push
push
pusha
fmull
inc
loopne
sub
and
int3
ds
leave
inc
xor
inc
xor
outsb
ret
ret
mov
orb
dec
jbe
sbb
pusha
lds
cmpsb
cmp
mov
adc
and
sbb
nop
enter
and
push
cltd
sbb
xor
push
dec
clc
xchg
cmp
or
int3
push
cwtl
mov
add
ret
or
ljmp
or
outsb
es
and
xchg
jo
gs
and
dec
test
mov
xchg
inc
sub
push
xchg
push
add
pop
adc
in
sub
xor
xor
xor
addb
insb
inc
cli
or
rol
push
pushf
or
sbb
les
popa
sub
cld
bound
movsl
push
shrb
pop
inc
shlb
sub
or
dec
cwtl
andl
sbb
pushf
push
mov
enter
inc
out
mov
xor
dec
mov
adc
rcrb
adc
pop
inc
in
dec
xchg
test
js
inc
inc
sub
xchg
mov
mov
and
jbe
xchg
sbb
dec
andb
sbb
data16
xchg
adc
mov
cmpsb
push
or
loopne
lods
or
ss
adc
adc
dec
or
insb
sbb
lods
push
sbbb
add
push
sub
sar
mov
push
add
mov
xchg
pop
mov
insb
call
push
and
cli
xor
or
pusha
mov
mov
lds
push
subb
int3
orb
mov
xor
aam
loope
cli
sub
push
mov
push
inc
mov
in
inc
xor
sbb
xor
add
or
insl
hlt
call
sbb
xchg
scas
les
push
push
test
push
push
pop
cmpsb
add
cltd
xchg
inc
sarb
not
out
xor
add
mov
or
je
push
mov
sbb
mov
int3
pusha
push
daa
and
push
pop
fimuls
in
jg
ret
int3
test
les
xchg
aam
es
mov
xchg
push
cs
adcl
orb
sbb
xor
mov
pop
lret
adc
inc
add
test
mov
sub
mov
cmc
xor
std
mov
out
pop
inc
sub
mov
sub
push
xchg
int3
xor
or
jbe
adc
adc
pop
lret
adc
pop
sub
push
adc
jp
adc
jbe
ror
aam
int3
stos
xchg
call
mov
dec
cmpsb
stos
and
fistps
lret
ret
pop
jo
cwtl
inc
dec
dec
push
mov
es
push
push
xchg
sub
fisubs
aam
adcl
rorb
hlt
sub
dec
or
sbb
jg
loop
push
sub
orb
sub
and
sahf
dec
push
push
or
jp
lret
and
cmpsl
insb
pusha
lret
add
sub
mov
pop
push
adc
loop
insb
sbb
push
adc
add
jo
add
pop
gs
push
push
rclb
cmpsb
pop
jl
inc
shll
iret
insb
cmp
stos
jne
fs
sub
shlb
out
xchg
sbb
lcall
rolb
pop
pushf
inc
mov
stos
lock
int3
sti
add
int
sub
lock
adc
cmp
pusha
mov
xchg
rolb
push
lret
repnz
inc
mov
out
cmp
test
ljmp
or
and
mov
xchg
stos
lcall
and
aam
lods
pusha
aad
cmp
adc
sub
out
loopne
stos
mov
jo
add
pop
mov
sti
mov
xchg
clc
push
cmpsl
das
in
fwait
add
imulb
adc
cld
lahf
int
std
stos
aam
mov
insl
inc
addb
dec
sub
adc
pusha
and
sub
mov
push
dec
jo
or
dec
push
cmpsb
sarb
push
pushf
sbbb
mov
push
xchg
pusha
sub
loopne
cmp
cwtl
adc
add
and
data16
jl
inc
adc
push
xchg
add
or
in
leave
or
dec
mov
sbbb
pushf
xchg
mov
mov
dec
insb
push
inc
hlt
inc
popa
mov
test
pusha
hlt
adc
or
push
xchg
cmp
sbb
xor
pop
fimuls
mov
inc
pushf
mov
push
jp
add
push
inc
dec
mov
fisubrs
gs
mov
daa
movsl
xchg
leave
subb
call
je
test
mov
push
sbb
mov
add
xor
pop
sub
sbb
test
gs
xchg
mov
inc
lock
lret
fsubrs
loopne
and
add
or
mov
dec
or
addl
inc
sub
addl
xor
dec
xor
xchg
mov
test
cmp
dec
int3
pop
add
lret
dec
lret
jbe
test
cs
mov
clc
xchg
push
shrb
adc
push
shlb
push
inc
and
sub
pop
jp
pop
push
sbb
lcall
ret
add
push
sbb
rolb
or
pop
adc
mov
lods
mov
or
inc
or
dec
shll
mov
or
mov
xchg
or
lea
cmpsl
mov
sbb
mov
nop
orb
sar
add
push
sbb
jbe
xor
and
and
lret
and
js
xchg
ljmp
rcll
push
decb
cs
pusha
push
sti
dec
movsb
dec
gs
adc
fs
push
mov
adcb
shll
xchg
add
or
xor
add
push
pusha
scas
push
lds
aam
sub
fadds
js
xchg
std
call
jae
sbb
sub
mov
push
shr
mov
mov
push
adc
pusha
sub
pop
add
add
popa
adc
cmp
callw
fimuls
mov
iret
push
inc
xor
pop
xor
pop
fs
dec
mov
push
jl
or
fadds
sbb
pop
or
andb
fstl
xchg
enter
dec
jb
push
or
push
xchg
or
mov
push
les
and
sub
rclb
test
xor
movsl
xchg
mov
sbb
mov
sub
and
bound
scas
pop
cmp
xor
inc
and
in
and
add
mov
pop
test
add
rcrl
push
mov
data16
jg
xorb
mov
mov
mov
nop
sbb
insb
cltd
dec
xor
mov
push
and
adc
adc
add
xchg
xor
pusha
ds
jb
addl
fistpll
ss
mov
aam
fdivs
or
xchg
dec
in
mov
inc
lret
cmp
xor
cwtl
pop
ret
dec
cwtl
adc
int3
test
test
pop
mov
mov
pusha
jb
das
dec
or
loopne
sahf
arpl
dec
scas
leave
cmp
mov
add
cmp
mov
mov
xchg
mov
pushf
adc
sub
pop
sub
sahf
aam
sub
popf
sub
add
sti
push
nop
lcall
sbbb
or
inc
add
xchg
ds
fadds
stos
sub
shll
xchg
adc
jl
sub
sahf
rol
or
dec
xchg
mov
add
push
cmp
and
inc
pop
mov
cmpsb
rcll
mov
mov
lds
push
mov
mov
ret
push
dec
and
xchg
ret
push
jle
push
lcall
adc
adc
adc
ror
or
sub
in
add
cmpsl
cwtl
xlat
in
sub
jg
mov
inc
int3
pop
push
push
mov
xchg
inc
inc
xchg
jno
xor
mov
dec
les
add
inc
sbb
pop
and
movsb
cmpsb
jbe
push
xchg
pop
dec
ss
mov
mov
aaa
or
add
in
and
and
jle
inc
lds
inc
aam
clc
ror
clc
adc
fiadds
sub
sahf
stos
sub
jne
int3
mov
in
mov
lret
mov
jo
sar
and
push
lcall
xor
and
adc
call
cmpsl
sahf
aam
cwtl
adc
dec
push
add
js
insl
pop
sbb
or
or
adc
cmp
into
test
mov
push
pop
pusha
jo
jp
or
add
shrl
xor
iret
inc
jnp
pop
in
add
mov
adc
xchg
inc
and
mov
push
pop
dec
jp
test
and
sbb
popa
and
sub
jecxz
loop
cmp
add
or
jne
popa
mov
js
fcoml
movsb
es
pop
mov
push
es
test
cld
lods
sahf
test
pusha
cmp
or
push
ret
or
push
hlt
push
inc
sub
rclb
push
ret
mov
fidivl
add
sub
push
adc
fcoml
outsb
ret
push
pop
movsb
loop
mov
xorb
cwtl
test
rcrb
and
add
add
outsb
lret
insb
ficompl
and
push
rcrb
enter
test
nop
sahf
lock
dec
hlt
sub
aam
mov
sbb
lds
rolb
lea
or
push
mov
dec
add
and
or
xchg
call
mov
ss
add
add
xchg
test
inc
fsubs
pop
enter
xor
lcall
dec
das
popa
outsb
push
pusha
dec
call
fmull
test
and
or
cld
and
bound
dec
jl
push
pop
mov
sub
and
shrb
jb
adc
xor
lret
mov
or
sub
mov
xchg
add
add
test
mov
lcall
lods
ss
add
test
data16
or
test
jp
rorb
cmovbe
xchg
stos
or
push
jb
nop
mov
testb
shl
jbe
mov
or
faddl
js
loope
popa
xchg
shrb
inc
sub
add
add
faddl
sbb
nop
and
or
xor
test
mov
dec
pop
add
sbb
mov
mov
mov
jb
pop
int3
or
and
movsb
call
xorb
enter
mov
add
mov
mov
jo
mov
inc
add
add
lock
shlb
sbb
mov
fld
inc
add
scas
dec
cld
ret
bound
lcall
push
in
sub
enter
rolb
adc
lds
leave
add
cmp
cmp
xchg
mov
or
add
push
mov
daa
stos
pushf
mov
or
push
movsl
xchg
mov
mov
jl
clc
mov
es
in
jg
cs
test
test
cmp
or
push
mov
data16
mov
and
orl
in
cwtl
or
pop
test
divb
js
and
dec
push
inc
xor
cld
mov
or
push
movsb
test
sbb
mov
inc
add
mov
nop
cmp
xorb
xor
mov
cmpsl
inc
cs
ret
test
dec
enter
stos
sub
mov
pop
jb
inc
roll
and
adc
mov
test
xor
cmp
enter
enter
mov
roll
mov
add
add
lods
xchg
sbb
fidivrl
push
aam
push
testb
sbb
dec
adc
mov
pusha
push
sub
pusha
mov
pop
xor
jb
fsubs
inc
and
xor
xor
cs
cmpsb
mov
add
test
cmc
hlt
push
outsb
inc
inc
or
inc
xchg
adcl
xchg
pusha
pusha
sbb
pop
jp
imul
mov
and
sbb
cmp
dec
inc
fsubl
jbe
cmpl
test
mov
es
jle
and
flds
push
das
xor
pop
adc
mov
add
stos
add
adc
pop
cwtl
xchg
push
faddl
or
sub
lret
and
test
aam
ss
mov
push
dec
pop
mov
loopne
or
inc
sbb
shlb
add
clc
sub
add
dec
insb
add
jg
jmp
dec
pop
sub
add
subb
movsl
mov
into
fstps
and
in
in
cmp
or
xchg
and
cli
adc
and
push
sti
add
push
push
adc
movb
fdivrs
pop
aam
add
jp
pushf
lds
cwtl
or
les
jo
rorb
fs
dec
addb
fdivl
pop
or
std
aam
je
push
and
ret
test
mov
je
les
push
and
mov
dec
loopne
push
xchg
mov
insb
add
xchg
pop
jb
je
mov
rcrb
push
in
imul
test
daa
ret
lret
and
xchg
pop
mov
lcall
push
loop
or
fstpl
loopne
cmp
adc
xchg
mov
cmpsb
adc
popa
das
mov
xchg
aam
pop
push
dec
push
add
adc
sbbl
or
into
xchg
cmp
or
outsb
push
nop
test
pop
sarb
loope
adc
and
adc
cwtl
inc
call
push
subl
jb
or
xchg
sub
clc
adc
movsl
in
mov
adc
add
mov
sub
lock
adc
inc
mov
sub
add
inc
cmp
sub
mov
nop
or
out
out
popa
mov
cs
pop
push
inc
enter
leave
hlt
lock
add
pop
es
out
mov
adc
sbb
rclb
add
xchg
add
nop
fildl
lods
push
mov
div
test
in
xor
popa
push
ret
test
pop
dec
mov
ret
gs
cmp
in
jmp
dec
call
dec
xchg
fidivrl
mov
and
insb
add
add
loope
adc
cmpsb
sbb
call
out
loop
dec
or
xchg
nop
mov
mov
and
mov
xor
lods
test
cmpb
mov
mov
and
loope
sbb
adc
js
cmpsb
xchg
mov
push
xchg
sbb
aam
das
inc
add
fs
or
push
shll
and
xor
mov
test
stos
jne
mov
outsb
popa
cltd
or
je
adc
sub
ret
xor
mov
int3
and
sub
out
push
add
outsb
leave
cli
outsb
sbb
hlt
clc
sbb
dec
test
add
pop
orb
cmp
adc
rcrb
ss
mov
xchg
rclb
test
call
or
cmp
push
xchg
xchg
adc
sbb
mov
xor
inc
and
pop
dec
notb
dec
sbbb
pop
clc
out
aam
lods
mov
test
xor
inc
jle
stos
xchg
pop
or
adc
xor
sub
test
mov
or
push
cmpl
sbb
cmp
mov
sahf
sub
int3
pop
mov
sbb
push
fidivl
nop
mov
movsl
add
push
and
add
xchg
cs
add
sbb
fadds
sub
mov
addl
sbb
xchg
push
fs
and
inc
cmpb
mov
sti
lods
mov
in
mov
push
int3
mov
leave
rorb
cmp
xchg
jb
enter
jne
and
test
loope
lods
mov
ds
xor
xchg
pop
mov
dec
mov
mov
mulb
loopne
jb
cltd
shlb
mov
les
aam
adc
ficoms
es
cwtl
sbb
js
js
rol
jb
jge
je
or
xchg
sbb
pop
cltd
push
adc
sbb
xchg
in
ljmp
mov
push
mov
or
add
fcoms
int3
xchg
xor
test
repnz
loopne
add
mov
and
or
cmp
fcoms
and
jp
in
and
aam
dec
or
addl
sbb
jb
orb
gs
jbe
pop
clc
inc
sub
mov
and
cmp
daa
add
pop
ret
mov
add
nop
aad
sbb
movsl
in
mov
pop
jecxz
add
push
mov
dec
mov
add
in
inc
xchg
add
push
rcrb
cli
and
adc
mov
mov
sbb
jl
cmp
test
orb
fbld
push
push
lea
add
lods
dec
jb
hlt
cmpb
sub
or
and
jne
fmul
fisubl
add
aam
adc
les
sbb
test
inc
inc
mov
mov
add
movsb
sub
rorb
sahf
adc
rolb
insb
cmp
mov
jb
adcb
lock
mov
inc
pop
cmpsl
add
jmp
sub
inc
xacquire
sarl
leave
push
mov
adc
cli
push
mov
cwtl
fisubrl
or
dec
or
sub
jo
fsubrp
push
sbbb
mov
mov
xchg
adc
loopne
loope
cmp
add
sbb
dec
push
or
push
xchg
cmp
int3
and
orb
pop
ficomps
mov
pop
lret
dec
outsb
rolb
or
lcall
enter
movb
pop
push
es
push
sbb
cli
andb
and
repnz
lret
push
add
mov
push
xchg
pusha
adc
cld
les
and
sbb
call
push
dec
mov
or
stos
addb
jo
cmp
cltd
pop
das
xor
and
and
dec
or
inc
or
add
mov
scas
or
push
sbb
or
add
xor
cmp
or
xchg
inc
jae
dec
mov
mov
ljmp
shr
add
mov
call
push
add
push
subb
cmp
aam
movsb
cmpb
mov
adc
inc
and
inc
sub
mov
lea
push
or
pop
cs
fs
in
gs
mov
mov
adc
sarb
push
and
mov
cs
cmp
xchg
push
shlb
xchg
mov
cmpb
loop
and
mov
add
and
add
or
mov
or
subb
sub
mov
sbb
pop
push
sahf
mov
sbb
inc
cmp
aam
push
and
xor
mov
mov
xor
jbe
mov
adc
pop
jne
dec
ret
movsb
pop
repnz
inc
movsb
inc
xor
xor
adc
add
pusha
adc
inc
cmp
pop
mov
inc
jo
cmpsb
popf
sbbb
xor
inc
xor
movsb
xchg
inc
cmp
adc
add
ret
push
cmc
add
pushf
cmpsb
jp
xor
inc
pushf
mov
add
lret
int3
pop
pushw
loopne
les
pop
out
xor
ss
lret
mov
lock
sbb
sbb
push
pop
mov
orb
loop
add
xor
or
adc
jo
adc
out
test
mov
enter
ret
sub
lds
sbb
push
sbbl
xor
adc
in
or
and
xor
test
dec
cmpsb
call
jb
sbb
add
push
in
fisubl
fwait
sbb
cwtl
xor
push
or
in
mov
and
addl
fcomps
sub
movsl
cs
inc
aam
inc
dec
adc
mov
and
adc
fsub
mov
mov
lds
ret
int3
xor
fs
push
adc
jl
jb
push
int3
and
jbe
dec
dec
cs
pop
inc
test
jb
or
xchg
xchg
orb
ljmp
stos
lcall
inc
aam
adc
sub
fs
popa
jb
loope
je
mov
movb
lret
sub
sahf
nop
jb
mov
or
cmpsb
pop
iret
inc
comiss
aam
cmpsb
mov
xor
jp
add
push
or
jo
cmpsb
js
mov
ljmp
pusha
cld
sti
test
rclb
cmp
nop
dec
push
outsb
sub
lcall
enter
or
lcall
es
mov
mov
not
xor
add
sbb
call
mov
syscall
jbe
and
notl
test
and
clc
and
add
jno
push
inc
adc
push
sub
jp
inc
sbb
sbb
dec
arpl
xor
lods
inc
sbb
bnd
push
rcll
inc
xor
pusha
pusha
js
das
inc
jp
pop
push
fdivs
sub
sub
dec
cwtl
dec
shlb
sbbb
add
xor
or
js
xor
and
and
out
filds
mov
adc
and
pusha
lock
sub
xor
daa
mov
outsb
sub
and
xchg
inc
xchg
xchg
rcrb
jle
adcb
aam
adc
ret
jl
dec
fldl
and
push
mov
mov
fs
sbbb
add
adc
call
sbb
and
xchg
push
nop
enter
jb
add
push
mov
call
adc
js
mov
cmp
cmp
mov
movsl
and
dec
movsb
ss
mov
cltd
rcll
pusha
cmp
out
addl
add
inc
clc
or
adc
es
mov
inc
imul
sti
xchg
in
rcrb
or
cs
add
pop
mov
mov
xor
lret
les
xchg
inc
test
xor
pusha
cmpsb
cmp
mov
ret
xor
add
sub
or
popa
in
sbb
cs
leave
push
and
dec
adc
xchg
sbb
nop
mov
mov
mov
pop
push
or
test
mov
inc
xor
mov
mov
xchg
jb
dec
jo
pusha
int3
mov
and
sbb
and
mov
add
mov
push
fimull
cld
xchg
xor
mov
sbb
insb
add
pop
xor
xchg
pop
or
pop
mov
dec
std
insb
test
push
push
pop
push
add
push
xchg
mov
enter
cmp
cmp
sub
push
xchg
je
mov
nop
lret
xor
iret
cmp
jl
leave
popa
or
test
xchg
xor
pop
hlt
mov
inc
mov
sub
mov
cs
adc
dec
cmp
cs
pushw
xchg
sub
ret
jo
add
out
bound
xor
repnz
add
cmpsl
in
dec
inc
adc
push
fiaddl
les
test
push
test
inc
daa
adc
out
js
sbb
add
mov
cld
sub
imul
adc
enter
insb
loopne
xchg
adc
xchg
xchg
push
xchg
inc
mov
in
mov
sbb
cmpsb
lock
dec
call
pop
sbb
adc
xchg
push
push
movsb
movsb
orb
mov
mov
dec
adc
out
adc
cmp
ret
push
sbbb
mov
cmpb
or
sub
jl
and
add
xor
aam
cltd
xor
ret
mov
std
mov
jo
jecxz
cmp
xor
rol
pop
push
jp
cltd
dec
mov
add
dec
jo
and
mov
xor
cltd
push
hlt
rclb
scas
mov
cli
lret
movsl
mov
out
add
add
inc
and
cmp
jno
jmp
sar
adc
imul
mov
mov
mov
sub
and
dec
adc
shl
or
sub
and
clc
js
js
xor
adc
or
dec
mov
adc
es
adc
xchg
jo
mov
enter
xor
fidivrl
or
xor
xchg
in
mov
mov
rcl
orb
dec
xchg
mov
aam
inc
dec
js
out
push
inc
and
cmp
or
add
and
adc
pop
or
and
pop
fisubl
je
mov
cvttps2pi
adcb
adc
mov
or
and
lds
es
push
daa
aaa
mov
cmpsb
and
pop
push
fcom
and
mov
jp
rorl
sbb
jg
mov
aaa
lret
mov
adc
add
mov
xor
test
out
mov
sbb
je
push
jo
push
or
pusha
pusha
xchg
xchg
push
rclb
add
jl
rolb
test
push
shr
pop
movsl
mov
pop
inc
push
mov
fdivs
mov
jge
shlb
loope
dec
movsb
and
enter
add
mov
popa
lods
sub
sbb
sbb
pop
loop
adc
xchg
jo
xchg
sahf
rcrb
movsb
sbb
cwtl
pop
dec
inc
push
inc
and
pop
sub
clc
hlt
add
jb
enter
jp
mov
inc
sahf
out
dec
cltd
dec
fs
pop
and
lods
dec
pop
push
cmp
test
mov
xor
cmpsb
jb
mov
ret
jo
inc
or
inc
sub
ds
data16
xor
fs
inc
mov
push
adc
ss
mov
or
sbb
xor
orb
fnstenv
lock
sti
jle
push
sbb
loopne
inc
jg
xchg
push
cmp
sbb
pop
imul
outsb
add
mov
pop
dec
inc
lds
dec
push
lcall
inc
ret
push
xchg
je
cwtl
cwtl
add
sbb
push
xor
xchg
add
jl
mov
add
sarb
and
mov
lods
sub
dec
pop
bound
cli
sbb
mov
mov
xchg
enter
pop
int3
pop
or
outsb
sub
int3
shll
test
push
add
clc
and
sub
add
sahf
push
out
and
dec
push
stos
leave
mov
add
or
cs
gs
into
sbb
add
mov
or
hlt
outsb
dec
leave
fistpll
lcall
jbe
add
mov
and
inc
add
fcoml
inc
imul
sub
dec
cli
fbld
xchg
add
xor
nop
dec
movsb
dec
pop
mov
push
jg
aam
adc
movsb
repnz
lret
xor
sub
test
clc
adc
pushf
cwtl
faddl
das
leave
jne
cwtl
sbb
inc
dec
mov
adc
ja
les
push
add
push
out
mov
add
xchg
cwtl
cltd
or
xchg
add
inc
dec
test
and
aam
ds
mov
push
xor
in
test
repnz
add
je
dec
dec
and
mov
cmp
push
dec
ret
push
pop
sbb
or
dec
inc
mov
inc
and
pusha
ss
or
inc
add
add
xchg
inc
sahf
or
xchg
rclb
xor
inc
and
xchg
push
or
data16
pop
or
sub
data16
movsb
outsb
rorb
add
aam
arpl
jo
add
sbb
sbb
jo
push
push
es
repnz
shlb
test
test
push
divb
aam
cmp
cmp
dec
iret
and
cmp
and
cwtl
adc
movsl
push
jb
jg
xor
add
fcoms
inc
push
inc
lods
sbb
xor
push
popa
mov
pop
mov
movsb
jo
sub
aam
ret
push
mov
mov
popa
add
call
sbbb
xor
add
pushf
or
mov
loop
mov
pop
test
xor
inc
fdivs
push
cs
sub
xor
and
adc
xchg
in
sbb
movsb
add
push
sahf
push
push
mov
adc
or
call
and
xor
bound
lds
push
test
push
xor
pushf
xor
xchg
and
inc
cwtl
pop
sub
mov
shlb
cmp
pop
mov
adc
dec
push
roll
and
add
add
xchg
ret
jl
jle
dec
add
loopne
add
jne
loopne
cld
add
cs
cmp
or
mov
punpcklbw
movsl
add
jne
xor
jl
add
inc
lret
push
aam
cmpb
lds
es
dec
out
test
data16
push
fidivrl
mov
bound
or
sbb
xor
xchg
sub
mov
adc
adc
pusha
inc
sbb
mov
xor
clc
in
dec
es
mov
dec
pop
push
clc
decl
xorb
testl
jg
inc
mov
xor
std
fiaddl
leave
test
loopne
add
or
enter
mov
hlt
call
or
cmp
into
mov
xor
orl
sbb
xchg
ret
ficomps
les
lret
sti
mov
and
xor
jne
jo
mov
sub
lret
in
leave
dec
fstl
inc
jb
xchg
sbb
sub
loopne
xorb
sbb
out
fcmovu
adcb
pushf
jo
dec
scas
inc
lret
mov
dec
mov
push
pusha
addb
scas
push
cwtl
sub
push
xor
js
inc
out
jp
dec
jp
push
or
loopne
mov
xor
sbb
xor
or
int3
nop
dec
movsl
jb
sbb
xor
ret
or
cld
into
fs
xorb
adc
pop
add
dec
fidivrl
inc
xchg
adc
add
sub
sub
lcall
push
xor
inc
add
pusha
ret
arpl
pushf
sub
add
xchg
add
or
call
into
add
mov
xchg
call
ret
xor
fsubl
sbb
xor
icebp
adc
pusha
fmuls
shr
rcl
outsb
mov
mov
or
loop
lds
pop
push
ret
stos
cmpb
test
ds
inc
and
data16
add
mov
fs
push
and
outsb
xchg
xor
faddl
sub
aam
int3
or
imulb
dec
xor
outsb
or
adc
mov
mov
imul
and
movsb
nop
mov
sbb
sub
mov
es
gs
in
xchg
addr16
rclb
push
loopne
xchg
cli
test
mov
xor
sbb
xchg
xchg
nop
or
sbb
mov
cwtl
cmpsb
push
and
shrb
xor
fsts
xor
into
mov
cmp
and
lret
or
adc
push
outsb
lcall
push
jbe
fmuls
rcll
or
inc
sbb
test
aam
push
xor
rolb
sahf
add
add
or
cmpb
jmp
shrb
mov
jl
aad
or
adcl
notb
test
rorb
loope
jne
aam
rorb
add
in
pop
test
les
vmovaps
mov
pop
xchg
push
int3
push
mov
movsl
xor
test
sbb
dec
data16
sub
sbb
pusha
xchg
rcrb
add
int3
sub
jbe
cmp
mov
xor
test
push
jb
mov
lcall
xchg
shr
push
inc
shlb
movsb
nop
push
ret
add
or
sbb
pop
dec
pop
ds
lds
dec
call
adc
ret
push
sub
je
mov
or
hlt
jle
sub
mov
dec
fs
incb
mov
xchg
mov
scas
sub
test
les
xor
rolb
in
mov
dec
jo
int3
mov
test
or
pop
xchg
push
data16
shl
pop
add
dec
cwtl
add
dec
mov
mov
dec
xor
cwtl
push
inc
test
jb
out
inc
and
scas
push
sbb
ret
xchg
add
adc
push
cli
cmp
cmp
popa
lcall
inc
cmp
pop
mov
inc
sub
inc
push
adc
mov
leave
movsb
adc
sahf
fisubs
addl
in
inc
adc
cmp
int3
mov
xchg
push
dec
or
mov
mov
cmpsb
mov
jg
dec
add
and
jo
jp
ljmp
push
cwtl
adc
inc
mov
sub
lret
mov
xchg
rcrb
mov
dec
cmp
enter
test
or
inc
aam
mov
xchg
and
jae
add
fsubl
and
push
stc
inc
je
inc
lcall
outsb
clc
jg
cs
sbb
mov
ja
push
jne
add
faddl
or
add
xchg
mov
ds
cltd
and
adc
insb
push
add
movsl
adc
inc
loope
call
in
inc
xorb
addl
dec
or
push
adcb
enter
sub
in
loopne
dec
outsb
inc
xor
fsts
loopne
jo
dec
nop
dec
or
push
jl
or
enter
adc
xor
inc
xchg
in
xchg
rorb
and
push
data16
dec
inc
inc
jo
or
je
fs
scas
in
xor
lret
movsl
adc
push
pushf
add
push
loopne
in
test
mov
dec
push
push
nop
rcrb
add
roll
xor
or
adc
sub
cmpsl
mov
add
sbb
test
xor
inc
mov
sub
shlb
add
push
jb
mov
xor
in
add
add
jl
or
and
or
push
mov
lret
ret
add
out
push
mov
orl
xor
cwtl
stos
lods
sar
add
cwtl
addb
and
mov
lds
repnz
dec
arpl
add
sub
or
int3
outsb
xchg
inc
adc
and
push
push
add
mov
push
shlb
sbb
xchg
or
inc
sub
test
sub
xor
or
subb
push
inc
int3
push
sbb
adc
adcb
lret
jbe
fs
dec
mov
sub
mov
enter
sub
adc
pop
jg
test
outsb
pop
insb
call
ret
mov
enter
jbe
mov
xor
xor
xchg
xchg
lds
sahf
lock
xchg
mov
sub
insb
and
push
adc
decb
call
xchg
mov
bound
mov
nop
cltd
xor
dec
pop
and
xchg
push
xor
mov
xor
into
ds
jecxz
push
pop
es
and
lods
cmpsl
mov
push
cmp
dec
in
sti
lods
mov
pop
andb
adc
mov
daa
sahf
xor
jg
push
inc
popa
push
push
cld
popa
test
xor
push
push
dec
int
sbb
ficompl
leave
movsb
nop
or
jbe
push
cmp
mov
adc
sbb
add
aam
and
test
sub
cmpsb
and
outsb
js
xor
add
addb
mov
out
mov
sub
pop
mov
int3
notb
mov
xchg
sub
jl
push
and
pop
add
or
dec
aam
xlat
and
pusha
push
xor
rcll
lcall
push
in
pusha
xor
push
or
xchg
pop
adc
add
mov
movsb
adc
pusha
or
push
adc
or
ret
mov
dec
hlt
jb
sbbl
pusha
sbb
insb
mov
pop
add
or
fadds
test
inc
add
and
enter
das
jmp
or
dec
mov
cmp
cwtl
ret
bound
les
lods
popa
xchg
ljmp
sarb
cs
and
aam
sbb
popa
sub
clc
test
dec
and
push
mov
int3
xor
jbe
dec
add
rclb
mov
mov
and
loopne
or
ret
push
jl
orb
and
addb
enter
jo
lock
dec
cmp
or
push
mov
subb
inc
lds
add
push
sub
popf
sahf
add
mov
cli
nop
pop
outsb
push
jp
xchg
cmpsl
add
hlt
js
push
add
js
mov
in
cwtl
add
xchg
sub
mov
push
or
in
pop
dec
cs
inc
push
or
cmp
xor
push
pushf
push
mov
rcl
inc
pop
data16
xchg
push
cwtl
xchg
push
add
inc
mov
lar
adc
xor
nop
pop
dec
cld
decl
test
daa
lahf
mov
out
xor
sub
mov
adc
repz
sub
xchg
xchg
les
insl
hlt
inc
push
mov
xchg
clc
push
dec
shr
jg
mov
dec
out
add
test
add
bound
or
sarb
or
adcb
ss
push
ret
pop
jl,pn
dec
add
aam
ret
mov
add
cmp
test
sub
push
push
hlt
xor
vpsubd
and
fcmovbe
xor
sub
xchg
cmp
mov
push
pop
mov
test
ljmp
jb
jp
push
xchg
popf
mov
test
or
mov
mov
xor
cltd
adcb
nop
sbbb
sbb
push
xchg
repnz
inc
sbbl
rcrb
or
and
js
adc
test
iret
jbe
ds
mov
jp
mov
lcall
dec
addr16
dec
into
push
and
cld
push
jl
sbb
adc
out
or
sbb
inc
inc
ret
add
xchg
in
add
xor
dec
mov
test
subb
lea
loopne
clc
pusha
call
sbbb
sub
movsl
sub
lret
ret
pop
sbb
in
xor
sahf
ror
dec
mov
fcoml
mov
mov
jle
adc
divps
push
adc
add
adcb
lea
mov
mov
data16
rclb
das
add
or
mov
mov
dec
and
test
js
arpl
es
sbb
sbb
push
jl
test
cmp
xor
adc
sub
adc
orl
add
add
popa
push
mov
cmpsb
divb
sub
add
mov
or
fmul
fcompl
adc
or
add
int3
add
iret
mov
xor
fcomps
cmpb
test
ljmp
dec
jg
rorl
sbb
fs
inc
push
mov
mov
mov
leave
or
xorb
sub
push
and
enter
mov
ss
or
jo
push
ds
nop
fstps
push
push
cwtl
inc
jle
imul
or
ret
xchg
in
ljmp
addb
fs
or
adc
xor
aad
xchg
into
hlt
mov
and
int3
in
in
les
push
cs
test
clc
movsb
dec
add
iret
adc
xor
outsb
sub
nop
push
push
push
xchg
mov
cwtl
xchg
mov
ds
adc
or
out
dec
jb
mov
inc
mov
or
gs
mov
loopne
rcrb
push
lret
or
pop
imul
xchg
and
add
pusha
ret
sub
mov
push
adc
mov
mov
xchg
xor
cwtl
sarb
jl
push
add
dec
cltd
mov
inc
xchg
xor
inc
fiaddl
mov
filds
mov
xor
insb
nop
repnz
mov
cld
xor
imul
test
lock
xchg
cmp
adc
sub
mov
leave
rcll
sbb
loopne
in
test
pop
addb
xor
push
ljmp
test
nop
xor
pop
and
mov
hlt
push
lcall
test
mov
dec
loopne
out
jo
adcb
aam
rcrb
les
inc
popa
andb
outsb
inc
cmpsb
xchg
enter
or
popa
popa
rclb
inc
dec
dec
cmpb
inc
push
pop
mov
mov
xchg
rolb
mov
cwtl
sub
sbb
and
test
mov
daa
fs
dec
fiaddl
pop
mov
ret
mov
xchg
xchg
dec
insb
fsubrp
loopne
sub
add
push
test
push
push
jge
in
test
or
es
and
bound
xchg
dec
outsb
adc
xor
roll
outsb
call
add
xchg
cbtw
ret
pusha
xor
xchg
sbb
adcl
movsl
xchg
add
push
mov
or
dec
das
ret
sbb
js
xor
aad
in
leave
push
fldcw
ficomps
clc
jg
mov
dec
add
cld
inc
lcall
clc
xchg
scas
dec
add
lds
rolb
test
sahf
inc
shlb
cwtl
test
mov
ret
xor
addb
je
push
lret
add
loope
outsb
pop
bound
sbb
fnstenv
nop
sub
movsb
mov
xchg
push
lock
dec
in
adc
add
sbb
xchg
mov
jbe
mov
push
pop
ljmp
les
test
rorb
pop
in
mov
add
movsb
mov
mov
jle
push
fwait
subb
cmp
in
nop
xchg
push
loopne
insb
cmp
or
or
cld
adcb
push
add
cmpsb
loopne
add
inc
dec
sbb
and
inc
ror
insb
cmpsb
movsb
in
add
mov
and
and
cmp
mov
inc
movsb
std
insb
mov
push
in
xchg
sbbb
mov
jle
or
loopne
lret
push
call
scas
jo
sbb
push
cmpb
add
sbbl
lcall
dec
movsb
test
push
xor
or
out
dec
std
pop
push
adc
mov
adc
ss
and
clc
subb
jae
and
pushf
sub
pop
hlt
dec
cltd
pushf
add
mov
dec
in
jo
aam
bound
and
call
popa
or
add
inc
outsb
xor
sbb
test
aam
fs
loope
enter
js
outsb
pop
out
fs
shl
pop
push
or
inc
pop
jbe
dec
loopne
lock
adc
mulb
call
push
movsb
adc
xor
inc
mov
xchg
adc
pushf
xorb
aam
push
push
push
shrl
sbb
mov
rclb
lcall
movsl
push
enter
add
inc
loopne
and
jo
dec
xchg
movb
or
sub
jb
xor
sub
xchg
xor
mov
fdivs
lret
xor
push
adc
and
fmull
push
mov
xchg
cmp
and
shl
push
push
sub
imul
add
orb
jo
or
clc
ss
inc
jo
es
sbb
xchg
xchg
test
xchg
xchg
sarb
fwait
je
adcb
and
or
js
fcoml
xchg
dec
push
push
inc
push
pop
pusha
xchg
adc
add
push
or
inc
or
or
cs
add
ret
daa
adc
adc
sub
inc
fs
push
and
je
imul
or
test
xor
idiv
addl
inc
adc
add
dec
or
xor
push
jl
mov
outsl
add
outsb
or
data16
add
xchg
inc
addb
and
adc
xchg
or
orb
bound
push
adc
xchg
and
dec
inc
test
pop
aam
mov
fisubrs
dec
loopne
push
lock
nop
xchg
sbb
bound
out
test
mov
orb
adc
inc
inc
push
cwtl
or
lret
or
or
loope
cmp
or
push
jg
push
xor
push
push
or
in
pushw
adc
fimuls
test
add
dec
inc
or
fsubs
movsb
leave
aam
rcrb
call
push
mov
and
je
xchg
dec
clc
sbb
lods
sbb
sti
add
xchg
dec
xchg
and
mov
test
fiadds
mov
fs
pusha
andb
sahf
lea
lcall
sarb
xchg
inc
and
jo
ror
inc
test
test
xorl
mov
add
xor
dec
lock
or
push
inc
dec
fs
mov
or
xchg
sbbl
push
ret
imul
add
push
sub
test
fidivrl
iret
or
sbb
push
mov
daa
aam
adcl
mov
push
fists
jo
jo
nop
inc
mov
not
mov
sbb
faddl
dec
mov
adcb
movsl
or
adc
idivl
and
adc
idivb
or
add
nop
int3
mov
adcb
add
lds
mov
sub
es
cmp
pusha
push
xchg
movsb
cli
sbb
add
ret
add
mov
dec
xchg
pop
cmpsb
pusha
adc
xor
mov
inc
mov
pop
jb
jo
adc
fiaddl
xchg
xor
pushf
mov
popf
and
mov
cmpb
lcall
pushf
ret
int3
xor
dec
loopne
pop
mov
leave
lret
inc
or
mov
adcb
cmp
dec
sub
daa
add
xor
cmpb
inc
adc
mov
loop
push
push
call
sub
lds
sbb
cltd
dec
sub
shll
lcall
lock
inc
addb
inc
xchg
xor
loopne
xor
xchg
adc
fisubs
nop
ljmp
mov
addl
sub
lods
or
and
leave
inc
lods
inc
lods
or
sub
xchg
enter
dec
lds
pop
divb
inc
dec
lcall
je
xor
xorl
rclb
popa
xchg
pusha
lret
rolb
or
test
mov
sbb
fildl
add
xor
cwtl
xchg
movsb
xchg
mov
adc
enter
and
popa
add
push
ret
pop
push
filds
shlb
iret
int3
out
lds
sbb
add
add
adc
inc
and
push
jne
sbb
inc
outsb
loopne
push
or
or
pop
push
sub
loopne
lret
sbbb
or
inc
xchg
orb
inc
or
xchg
xchg
push
ljmp
adc
cld
jl
leave
ljmp
adc
shrb
sub
mov
pop
mov
sbb
mov
stos
sbb
andb
xchg
scas
gs
inc
xchg
lods
adc
push
mov
pop
sub
test
mov
sbb
and
dec
push
cs
add
cmp
pushf
add
andb
push
lods
test
hlt
add
and
push
lods
add
cli
mov
dec
cli
adc
sbbl
jl
inc
add
cmp
mov
sbb
daa
push
xchg
push
push
cmp
call
push
mov
push
test
loope
cli
lcall
pop
leave
stos
clc
inc
es
ret
adc
push
push
sbb
lock
enter
add
mov
popa
loope
in
adc
and
inc
and
in
push
push
adc
sub
clc
sub
scas
nop
pop
cwtl
sbb
lock
add
push
mov
nop
lret
or
xchg
mov
adc
mov
xor
nop
leave
lds
dec
ret
inc
stos
sub
or
adc
outsb
hlt
xor
movsb
mov
adc
push
mov
lock
cmp
addb
inc
fcomps
or
mov
mov
push
int3
dec
dec
loopne
ret
pushf
and
inc
push
sbb
or
test
or
push
mov
adc
mov
xorl
and
sbb
xor
sbb
sbb
sbb
int3
mov
subb
add
cwtl
js
xchg
jo
mov
stos
xchg
loopne
adc
add
dec
movsl
lcall
test
add
pop
add
int3
pop
call
lret
push
pop
jl
xor
push
dec
dec
scas
hlt
inc
jb
push
insb
cwtl
dec
stos
adc
dec
push
and
fidivl
adc
and
fisubl
and
pop
ficompl
and
add
pushf
dec
dec
adc
in
ret
sbb
adc
dec
mov
push
lret
push
or
div
and
shlb
movsl
sbb
aam
std
cmp
and
jle
orb
insb
mov
sbb
mov
and
gs
aam
dec
loope
jb
es
pusha
test
mov
inc
adcb
pop
or
cmpsb
data16
pushf
ret
cmp
std
adc
add
pop
sub
push
mov
adc
add
mov
adc
cli
cmp
nop
sub
cmpsb
sbb
mov
pop
js
loope
fs
push
and
xchg
cli
movb
pop
add
aam
adc
cmpsb
xchg
test
dec
adc
or
fcoms
or
push
dec
cwtl
cmp
ss
add
lret
sbbb
and
sahf
or
adc
push
xor
add
cwtl
cmp
movsb
xor
js
les
push
adc
adc
xchg
or
push
nop
adc
inc
mov
push
enter
aam
or
ljmp
lret
xchg
add
adc
mov
rcrb
mov
clc
and
popa
addb
inc
mov
adc
inc
shl
xchg
lods
inc
xor
mov
aam
mov
sub
flds
and
pop
adc
insl
bound
jo
mov
xchg
jl
mov
jne
inc
cli
mov
cmp
jl
call
push
data16
lods
aad
rolb
dec
out
dec
jno
aam
aam
add
or
sub
mov
push
dec
push
cwtl
jg
sub
inc
movsl
add
or
cmp
or
test
push
lods
aam
call
inc
sub
iret
in
or
stos
jle
push
adc
mov
shr
test
call
jo
mov
fs
xchg
mov
lds
or
cwtl
and
fiadds
rclb
or
or
adc
sbbl
lret
sub
ds
sub
and
sub
cmp
sahf
test
add
cmp
subb
test
and
hlt
hlt
clc
sub
jo
dec
dec
ss
push
pop
fdivr
push
sahf
test
xchg
ficoml
push
aam
jo
daa
loopne
mov
rcll
pop
push
or
lcall
or
mov
pop
pusha
pop
int
jo
sbb
mov
test
or
lock
and
adc
mov
xchg
data16
push
pusha
dec
bound
add
les
mov
dec
lods
leave
pusha
rorb
mov
mov
sub
and
movsl
mov
lea
inc
movsb
dec
mov
test
add
nop
push
pop
andb
inc
inc
je
push
push
xor
loop
cmp
movsb
loope
mov
inc
and
jo
fdivrs
rclb
sbb
xchg
mov
mov
test
ss
aam
movsl
imul
pop
ret
lret
or
and
xchg
adc
mov
and
pushf
jb
pop
add
inc
sbb
xor
aam
xchg
popa
lcall
inc
insb
mov
nop
or
sbb
add
push
test
cwtl
push
mov
addb
mov
movsb
push
dec
test
lock
dec
pop
jbe
pop
rcrb
adc
or
add
mov
xchg
pusha
rclb
adc
and
ret
xchg
add
pushf
or
xor
leave
dec
cltd
and
jno
leave
adc
and
or
mov
es
sub
rcrb
xchg
inc
add
or
add
ficoml
jb
xor
or
fcmovb
pusha
mov
push
mov
inc
adc
adc
push
lret
dec
jb
xchg
add
or
and
xchg
add
les
cmp
add
add
lods
test
adc
and
rolb
fsubrs
shrb
sub
aad
ret
inc
pushf
xor
xchg
in
into
loopne
movsl
xchg
fadds
dec
push
inc
hlt
in
call
call
mov
push
pop
in
xchg
inc
cmp
inc
and
or
inc
fs
mov
xor
add
and
test
inc
clc
sbb
or
pop
xor
scas
jg
or
popa
pop
pop
push
push
sbbb
addb
cli
std
loop
or
or
xchg
add
mov
aad
jo
mov
xor
sub
repz
inc
jmp
add
xchg
add
or
or
dec
mov
clc
and
xor
mov
pop
and
jp
fwait
adc
push
out
jne
jmp
lret
in
xchg
add
into
xchg
jb
je
jo
or
and
cmp
sub
movsl
cs
imul
test
gs
mov
test
add
or
outsb
jne
add
mov
mov
in
test
inc
inc
adc
xchg
mov
dec
cs
addb
mov
xchg
lret
into
mov
xor
les
xor
shlb
fs
insl
ret
int3
xchg
cmpsb
insb
js
insl
xchg
call
iret
adc
sbb
fdivl
call
mov
inc
test
int3
test
adc
loopne
push
lds
or
dec
cs
sbb
cltd
sbb
xor
push
sub
std
push
mov
sti
iret
inc
test
adc
test
popa
add
sub
loopne
push
add
sbb
xchg
push
or
add
jle
sbbb
sbb
and
cltd
and
mov
jp
xchg
stos
cwtl
mov
mov
xor
ficoml
in
cmpsb
sub
xor
hlt
push
push
xor
inc
adc
loopne,pn
lret
or
and
in
into
aam
adc
dec
jb
inc
mov
cmp
push
and
dec
xor
dec
or
pop
jae
repnz
hlt
pusha
adc
adc
jp
xchg
sbb
in
cmp
scas
sub
enter
mov
or
lods
xchg
enter
adc
inc
add
push
les
in
arpl
ljmp
and
lret
add
push
outsb
ret
nop
lret
lret
and
or
pushf
or
adc
push
inc
cmp
fs
mov
add
inc
aam
enter
xchg
sub
xchg
push
or
scas
mov
adcl
in
insb
xor
and
mov
inc
inc
subl
test
fld
push
pushw
pop
push
out
je
xor
cmpsb
push
push
mov
call
gs
dec
ds
call
pushf
or
dec
pop
fdivs
add
inc
push
cmp
push
pop
push
or
adc
dec
lods
mov
xor
fcmovb
and
mov
or
rclb
inc
leave
mov
adc
ds
jl
push
enter
jle
or
adc
in
and
xchg
inc
cs
lcall
mov
jno
fistps
int3
es
test
xchg
xor
or
pop
hlt
je
test
add
test
dec
test
nop
test
sub
add
aam
subb
cwtl
test
loopne
inc
int3
idivb
and
test
pusha
daa
orl
jl
adc
mov
mov
cli
add
inc
mov
xchg
bound
test
cli
outsb
pop
inc
adc
jo
sbb
hlt
mov
and
adc
movsb
pusha
adc
and
cltd
add
or
cld
cmp
inc
sbb
xor
xor
lret
jp
adc
fs
add
pop
fadds
push
sbb
and
jne
cmpl
sahf
cld
sbbb
pusha
xchg
fs
or
enter
stos
es
add
cmp
and
and
inc
lea
push
and
add
or
mov
push
pop
test
cmp
ss
lret
xor
pop
cmp
or
sarl
pop
inc
add
lds
inc
jo
push
cwtl
shll
fsubrs
dec
mov
fs
test
in
xchg
pop
imul
test
inc
adc
add
xchg
sbb
aam
test
or
sbb
inc
ror
sub
cltd
clc
inc
mov
push
xchg
out
add
xor
sub
test
add
sbb
movsb
or
adcb
out
xor
inc
add
add
push
xor
cwtl
ret
popa
and
fisttps
ja
push
mov
sub
add
mov
insb
fdivrs
aaa
pop
lahf
dec
adc
sub
add
decl
popa
sbb
add
adc
add
push
mov
out
je
ret
add
mov
sub
adc
sbb
lret
sub
mov
sbb
dec
insb
add
jle
xor
sti
mov
fs
dec
rclb
jp
rcr
cmp
push
sahf
xchg
xchg
aam
xor
aad
push
mov
imul
cmc
cli
stc
sub
jecxz
std
jge
inc
sub
mov
enter
iret
sbb
add
adc
test
add
mov
push
or
shrl
inc
mov
xchg
pop
jl
and
cmpsb
pushf
push
lods
adc
jne
arpl
mov
jmp
mov
fs
xor
jb
jmp
in
mov
pop
rol
in
dec
addr16
hlt
inc
xor
sahf
in
sub
or
sub
sub
and
mul
xchg
iret
inc
jge
adc
adc
adcb
insb
out
add
lret
push
in
lcall
pop
dec
push
ret
and
fisubrl
push
dec
adc
adc
push
and
push
dec
adc
pusha
sub
clc
mov
xchg
in
mov
out
loop
lods
adc
adc
icebp
xchg
loopne
dec
stos
inc
mov
mov
addl
mov
sbb
adc
sub
push
ret
imul
adc
pushf
cld
rclb
rclb
lret
fcoml
sbb
jmp
xor
add
mov
data16
adc
add
or
sub
sbb
or
dec
adc
cmp
xchg
sub
add
cs
dec
cwtl
dec
and
push
dec
nop
add
imul
adc
xchg
and
pushf
or
add
jbe
pop
pusha
push
sub
mov
dec
sub
push
push
test
sub
xchg
lods
sbb
subb
adc
ret
inc
test
adc
int3
pop
scas
add
rcrb
jp
pushf
out
sub
mov
lock
rcrw
pusha
adc
test
test
int3
and
jbe
mov
adc
add
add
push
cwtl
sbb
add
or
cmpsl
or
sub
add
lock
orb
std
bound
or
add
lret
test
ret
movsb
andb
xor
mov
sbb
mov
jp
mov
ss
ret
mov
xchg
jb
insb
iret
in
int3
lcall
and
xchg
inc
mov
add
push
inc
sub
mov
add
pop
xor
lea
jb
in
and
jo
cmp
pop
fcomps
sub
test
pop
and
inc
dec
mov
cmp
push
add
in
ret
xor
sbb
movsb
push
dec
jbe
pop
pusha
ficoml
cltd
push
clc
or
xchg
xor
xchg
add
pop
sbb
test
lret
mov
sub
add
popa
add
sti
xchg
addb
dec
fs
cmp
ret
xor
test
pop
inc
jp
aaa
movsl
adc
and
or
push
push
add
adcb
jp
rolb
loopne
sub
data16
push
dec
cltd
sbb
adc
into
insb
shrl
inc
xor
fsubl
cmpsb
loopne
in
sbb
cmp
push
add
insb
sub
popa
adc
lods
cmp
pushf
mov
jbe
out
or
dec
hlt
data16
subb
xor
pop
push
or
ljmp
mov
mov
sbb
mov
xor
jo
popa
nop
jl
or
dec
mov
pushf
push
xchg
push
xchg
ror
pop
push
mov
xchg
or
push
nop
inc
and
push
lock
sbb
xchg
or
out
faddp
push
fcoml
or
dec
sub
pop
xchg
in
mov
lods
xor
dec
or
or
inc
mov
cmp
xchg
lods
or
mov
roll
inc
int3
mov
cmpsb
aam
pop
sub
xchg
add
cli
dec
dec
or
push
adcb
dec
xor
mov
adc
xor
xor
push
push
xchg
push
adc
pusha
mov
xor
cmp
leave
test
inc
mov
enter
jo
enter
mov
js
xor
xchg
lods
bound
fwait
cli
push
test
sub
mov
ja
add
loop
adc
int3
dec
push
sub
xor
cmc
mov
popa
inc
sub
xchg
bound
ljmp
clc
rorl
xchg
or
les
inc
test
add
data16
test
pop
sbb
push
mov
movsb
mov
popa
lods
push
int3
add
xchg
push
adc
ret
lock
adc
pop
or
lret
sub
outsb
pop
js
and
shll
adc
jle
shlb
cmp
movsb
mov
fcoms
loopne
fildl
xchg
add
shll
call
pop
je
sub
mov
pop
dec
push
outsb
outsb
mov
adc
in
or
xlat
rorb
pop
les
add
mov
xor
clc
lock
leave
cwtl
or
xor
jo
cmp
xor
cld
inc
or
mov
fidivs
and
push
test
insb
xor
enter
add
adc
adc
add
in
std
xchg
test
push
xchg
int3
cmpsb
or
jo
rcrb
data16
and
test
test
and
out
and
stos
daa
add
add
pop
add
inc
sahf
or
xor
xchg
les
mov
mov
cli
xor
and
mov
lret
mov
dec
lock
mov
mov
or
hlt
rolb
dec
or
orb
sbb
jb
mov
jo
inc
shll
pop
cwtl
jo
push
out
enter
cmp
dec
dec
adcb
jb
xorb
push
fildll
dec
sub
pusha
sub
loopne
or
rclb
xor
push
jo,pt
mov
add
sahf
push
sub
jo
cmp
adc
adc
sub
fsubrs
add
int
lock
ret
add
inc
sahf
cs
sub
or
mov
add
dec
or
jbe
and
clc
pusha
cmpps
mov
or
ficoml
imul
xchg
into
es
std
xor
cmp
push
or
in
xchg
ja
notb
inc
mov
pop
fsubl
dec
ss
mov
inc
sub
pop
test
adc
shr
in
pop
xchg
pop
and
mov
pusha
data16
sbbb
and
and
xor
adc
pushf
addb
ds
ror
inc
test
xor
shlb
mov
mov
adc
mov
lds
mov
pop
outsl
or
jge
call
xor
hlt
adc
leave
mov
jb
out
in
cmp
mov
cmp
push
pop
pushf
out
inc
inc
and
jl
add
fbld
push
rclb
cmp
sbb
jb
js
push
push
or
insb
mov
mov
int3
sub
mov
cli
mul
subb
in
xchg
cmpsb
and
andb
shrb
mov
mov
shlb
mov
jle
test
aam
fidivs
aam
push
imul
out
mov
add
pushf
mov
add
in
xchg
daa
dec
popa
stos
pusha
outsb
add
dec
rolb
jp
addb
test
sbbb
es
test
adc
insb
es
inc
jo
ficompl
dec
xchg
test
sub
sahf
aaa
jne
mov
or
cmpsl
add
pop
fcoml
fiadds
ret
add
adc
push
out
cmpsb
pop
pop
test
mov
insb
or
inc
faddl
call
cmp
add
add
ret
sbb
push
addb
rol
dec
stos
loope
dec
jp
dec
xor
mov
and
rorb
adc
mov
push
mov
or
dec
hlt
cmp
ret
stos
push
xor
add
pop
adc
or
addl
orl
mov
aam
clc
test
push
lock
or
iret
dec
and
mov
dec
add
aas
or
mov
shl
lock
or
inc
bound
add
rcl
pop
aam
jmp
or
mov
cmp
push
dec
das
movb
scas
jno
incb
mov
clc
aas
ja
add
fsubr
out
xchg
push
mov
mov
leave
inc
mov
std
mov
adc
aam
mov
test
add
call
cmpsb
es
movsb
push
sbb
adc
xchg
dec
adc
ficoml
or
sbb
in
or
adc
cmp
sub
cmp
jo
lcall
jo
subb
mov
movsb
push
xor
push
push
into
sbbb
mov
adc
loop
or
push
sarb
or
ds
in
mov
sub
add
ds
rorb
cmp
xor
pop
xor
push
cmp
pop
das
sahf
inc
rclb
sub
shrl
pusha
test
ret
dec
inc
cmp
push
jo
shlb
cmp
loop
pop
shrl
pop
sub
test
dec
ret
jl
test
adc
fdivr
xor
stos
xor
xchg
test
loope
cmpsb
inc
aam
hlt
gs
mov
inc
sub
or
sub
lds
mov
push
fdivrs
aam
nop
xchg
cmp
xor
push
push
scas
sbb
stos
dec
aam
dec
ret
dec
add
adc
xor
and
add
or
popa
ficoml
movsb
xor
xchg
sbbb
inc
push
and
sub
ljmp
xor
mov
add
xor
and
mov
mov
sub
les
xchg
or
mov
loopne
lds
ret
sarl
nop
or
mov
dec
orb
dec
xor
pop
xchg
adc
xchg
xchg
or
imulb
nop
push
dec
lods
pop
jne
and
pop
mov
and
dec
or
mov
jo
push
inc
arpl
movsb
adc
loop
mov
testb
xchg
lods
sub
cmp
xor
in
iret
inc
adcl
or
or
nop
cltd
call
scas
les
fcoms
push
mov
xchg
repnz
and
or
bound
xchg
push
cwtl
ret
aad
or
sbb
mov
hlt
lock
fisubl
cs
subl
pop
pop
jbe
jo
jo
cwtl
push
push
adc
mov
and
mov
dec
inc
call
xchg
adc
sarb
mov
fsubs
xor
xchg
dec
bound
fcoml
mov
adc
push
sbb
mov
mov
inc
inc
jo
lret
add
sub
mov
mov
addl
adc
sub
mov
add
sub
test
push
add
and
sbb
add
in
xor
fcoml
out
inc
call
outsb
push
mov
dec
or
jne
aam
leave
dec
test
add
fdivl
xchg
sbb
call
or
cwtl
inc
sbbb
or
add
ficoms
dec
lods
pop
inc
lods
lds
out
xor
add
push
xor
xchg
jb
jne
ss
xchg
test
fsubrl
fs
or
add
add
fsubl
test
inc
add
sub
cltd
aad
mov
mov
enterw
jp
fmuls
inc
jg
sub
sbb
xchg
and
push
das
mov
inc
bound
inc
pop
push
std
mov
ljmp
adc
sub
or
scas
push
subl
xlat
mov
cwtl
test
push
cmp
push
add
lcall
sbb
jbe
or
fcoml
or
mov
nop
cmp
lock
dec
popa
sub
lcall
sub
or
dec
or
dec
js
mov
cld
sbb
dec
inc
retw
add
add
adc
rol
mov
in
cwtl
leave
pop
adc
xor
xchg
mov
adc
cmp
xchg
xor
cmpsb
adc
sahf
push
sub
cld
push
sub
cmp
clc
leave
cs
xchg
iret
test
xor
or
adc
adc
xchg
lods
sbb
out
xchg
push
dec
push
inc
xchg
pop
mov
outsl
or
or
and
inc
nop
mov
data16
xor
or
sahf
filds
or
sbb
test
sub
mov
add
mov
rolb
lcall
push
adc
dec
add
jbe
sbb
sub
adc
adc
dec
add
and
jp
int3
and
dec
or
sbb
cs
cmp
pop
mov
and
pop
rclb
into
faddl
test
pushf
mov
inc
or
and
int3
fs
jp
call
pop
and
pop
cwtl
push
sub
mov
cmpsb
pusha
xchg
mov
sub
inc
test
xor
or
test
xchg
xor
or
inc
sub
adc
mov
xor
push
js
fistps
loopne
pushf
adc
add
sub
in
test
fs
mov
and
sbb
mov
pusha
add
je
inc
add
mov
cmp
sbb
dec
lods
test
push
push
or
mov
mov
sbb
fisubrl
cmp
loopne
jg
or
xor
pop
in
test
int3
or
sbb
dec
test
test
xchg
mov
les
and
cs
dec
arpl
sub
xor
adc
movsb
xchg
mov
push
enter
xchg
int3
push
sahf
sbb
dec
mov
cmpsb
aam
loop
mov
int3
and
imulb
xor
data16
call
dec
and
sbb
pop
ret
in
lock
cmp
lret
push
pusha
fists
jo
jae
daa
add
sbb
dec
rolb
xor
add
test
movsb
push
xorb
sub
lds
mov
mov
popa
pop
cli
les
ror
add
es
mov
xor
add
xchg
mov
lret
mov
jb
inc
scas
aam
mov
clc
mov
dec
cmp
sbb
test
and
sbbb
add
adc
and
sub
push
jo
or
sbb
ds
xor
mov
mov
hlt
sub
popa
push
mov
xchg
nop
push
out
sbbb
mov
rcl
xor
sub
or
mov
test
xor
lods
xchg
dec
push
movsb
fcmovbe
and
inc
push
dec
mov
popa
inc
inc
in
je
or
inc
adcb
loop
or
or
faddp
push
adc
int3
mov
ret
cld
fists
insb
mov
es
mov
or
pop
loopne
ds
int3
adc
fdivp
sub
scas
int3
rorb
pop
mov
sti
adc
dec
push
notb
addb
cmp
adc
ficoms
add
cs
xor
outsb
pop
aaa
or
dec
hlt
mov
push
mov
push
xor
leave
adc
ret
mov
cmp
and
and
inc
push
iret
inc
or
inc
and
or
test
cmp
pusha
in
adc
adc
push
sub
pop
add
jle
mov
shlb
or
or
pop
lds
test
dec
adc
pusha
inc
xor
sub
xchg
add
daa
mov
test
je
jo
leave
sub
fwait
jb
test
mov
push
adc
inc
cmpsb
mov
mov
adc
or
adc
mov
loopne
jo
arpl
cmp
and
out
push
push
test
cmp
push
sbbb
cmp
inc
insl
or
xchg
mov
add
xorl
xchg
mov
inc
sub
test
cs
dec
mov
faddp
inc
movsl
xor
push
add
loop
adc
xchg
lcall
mov
or
xchg
pop
rcrb
sub
call
cwtl
mov
ret
pop
in
ljmp
test
jmp
enter
inc
out
call
cld
daa
test
popa
orl
and
sbb
iret
bound
adc
aaa
jle
sub
and
mov
pop
push
fcoms
and
les
int
out
sub
push
push
push
add
fwait
push
fidivrs
xchg
loopne
dec
cmpsb
outsb
or
daa
nop
sahf
inc
and
add
jbe
add
add
out
int3
sub
cmp
mov
sbb
inc
mov
mov
sub
adc
outsb
mov
inc
lcall
add
std
pusha
loop
inc
sub
sub
and
data16
xor
pop
sbb
add
scas
xor
cltd
push
xchg
je
shrb
jno
sahf
stos
pop
mov
pop
xchg
cmpb
jle
lret
and
add
fidivl
ret
push
sbb
adc
mov
scas
pushf
push
std
push
loopne
movsb
push
jb
dec
push
ret
fdivs
dec
iret
cld
dec
cmp
cwtl
dec
xchg
push
call
adc
xchg
and
pop
aaa
mov
xchg
and
les
shlb
add
imul
das
mov
cwtl
in
lcall
mov
mov
lret
mov
dec
xchg
imulb
pop
mov
shll
cmp
mov
jle
pop
push
dec
out
mov
in
or
enter
ret
aam
dec
rcrb
int3
int3
rolb
push
xchg
sahf
push
adc
insb
or
add
fbld
in
fs
add
repnz
mov
stos
lds
inc
bound
call
sub
dec
push
inc
mov
sbb
xchg
outsb
and
into
xchg
xchg
xor
pop
cmp
mov
sub
xor
ret
test
sbb
mov
roll
mov
outsb
push
test
iret
mov
xor
inc
mov
or
jp
out
and
ret
mov
test
add
dec
xor
mov
adc
push
fs
add
cmp
push
mov
inc
sub
pushf
or
mov
add
xor
add
or
sbb
and
dec
and
lcall
inc
sub
adc
sti
fidivs
movsb
jo
pop
xor
cmp
adc
xchg
xchg
in
xor
push
mov
sbb
push
xchg
push
xor
sub
inc
rorb
and
jp
or
call
cltd
xor
fs
xchg
cmpsb
rcl
sub
in
mov
jg
mov
add
aam
test
inc
outsb
inc
sub
adc
adc
aam
pusha
daa
inc
push
dec
loopne
pop
mov
cmpsb
out
add
push
add
adc
hlt
mov
shrl
sbb
mov
lock
mov
inc
xor
sbb
pushf
sbb
enter
add
and
dec
cmpsb
nop
pusha
push
inc
add
inc
hlt
movsb
mov
xor
pop
pop
rcrb
and
adc
enter
pushf
and
add
dec
es
mov
xor
fbld
mov
test
rclb
pop
dec
cwtl
mov
or
or
data16
aam
aam
sub
pop
mov
and
movsb
xor
dec
js
dec
xor
icebp
or
pop
dec
orb
sbb
subl
sbb
nop
sbb
cld
pop
xchg
or
lock
mov
lret
adc
lock
fs
adc
lcall
or
repnz
cli
push
int3
xor
or
dec
in
add
mov
mov
fdivr
ss
pop
mov
iret
sbb
add
cmp
movsb
xchg
mov
xor
enter
add
and
aam
test
or
pop
jne
sub
dec
jb
xor
mov
ret
sbbb
xor
in
les
fdivr
iret
andb
push
mov
int3
lahf
pop
and
adc
aam
mov
inc
loopne
rcll
enter
and
orb
and
push
mov
add
sub
push
cli
add
push
sub
test
cmp
pop
mov
out
outsb
ret
roll
inc
test
jne
dec
in
rolb
sbb
lds
or
cmp
xchg
pop
scas
out
es
adc
and
mov
nop
push
lods
cltd
insl
or
inc
add
cli
dec
inc
add
lock
inc
push
mov
sub
popa
and
and
loop
lcall
and
mov
test
ret
xchg
lcall
jb
pusha
hlt
adc
mov
xor
xorb
dec
sbb
sub
pop
enter
cld
ret
mov
lds
lods
sbb
push
jns
inc
leave
ret
enter
mov
mov
hlt
xor
addl
inc
push
sub
xchg
dec
and
js
fcoms
test
adc
jl,pt
test
js
jo
add
loope
push
popf
dec
xor
sub
cmp
sahf
xchg
pop
push
sub
std
dec
and
sbb
mov
mov
dec
mov
or
add
push
xchg
adc
add
xor
sbb
push
dec
cmp
and
mov
sub
clc
xchg
pop
or
dec
repnz
aam
inc
test
push
xor
or
xchg
or
outsb
mov
xchg
push
cmpsb
add
adc
call
sub
xchg
pop
in
popf
inc
adc
dec
or
mov
incb
rcrb
ljmp
cli
decb
cltd
pusha
lock
dec
cmp
sbb
mov
nop
push
in
aam
pop
ret
pop
adc
and
pop
dec
inc
mov
xchg
push
and
je
test
and
stos
dec
shll
jl
and
dec
mov
nop
repnz
pushf
sbb
or
or
push
pop
mov
std
dec
or
or
inc
adc
push
test
ret
mov
dec
inc
mov
xchg
sub
repnz
add
push
in
ds
divb
js
xchg
inc
xor
push
dec
cmpsb
mov
adcb
xor
ljmp
enter
insb
and
test
test
int3
sbb
adc
xchg
add
push
ficompl
addb
int3
lock
mov
xor
push
lret
sbb
push
mov
data16
addl
lods
jo
add
enter
fcoml
or
inc
mov
and
xchg
test
cmp
xchg
xchg
cmp
lock
sahf
clc
and
dec
push
sbb
xor
inc
or
je
stos
add
jb
out
sbbl
insl
fs
and
jp
push
pop
add
sbbb
sbb
add
mov
push
pushf
and
add
or
iret
adc
mov
pop
inc
movsb
xchg
js
dec
add
push
mov
mov
push
push
pop
pop
add
movsl
cmp
es
out
daa
aam
add
jo
xchg
or
inc
lock
fs
sub
and
inc
inc
imul
jo
push
and
lea
ss
cmp
adc
shll
insb
and
test
mov
mov
aam
mov
dec
mov
es
sub
or
add
xchg
push
into
bound
add
or
fcomps
cmp
inc
pop
and
es
cmpb
data16
into
test
or
xor
dec
mov
inc
sbb
and
mov
mov
inc
lcall
sub
mov
imul
mull
mov
test
mov
or
cld
xor
popf
fdivrp
fcmovb
xchg
inc
adc
add
mov
or
jbe
cs
dec
sbb
add
adc
inc
iret
jp
push
xchg
je
test
call
xorb
or
and
adc
push
cmp
bound
add
movsb
in
scas
mov
in
pop
mov
and
fistps
push
nop
sbb
fs
inc
push
dec
lcall
cli
push
rolb
and
cmp
xor
insb
cwtl
and
pop
jb
mov
ret
ret
adcb
or
sub
ss
clc
out
and
and
dec
push
push
push
shl
rolb
in
or
mov
xor
pop
jle
and
cs
inc
les
or
sub
inc
mov
int3
push
mov
cmpsb
int3
jb
inc
popa
cmpsb
push
xchg
jl
enter
test
push
xor
mov
mov
xor
mov
or
bound
adc
les
xor
adc
push
lods
mov
dec
or
inc
lock
and
inc
sbb
inc
xor
aam
push
js
xchg
inc
and
and
or
adc
jo
mov
xchg
inc
pop
out
pop
test
adc
andl
pop
adc
cmp
mulb
test
adc
push
xor
adc
pop
in
andb
fcom
adcb
jp
fsubl
or
cmp
rorb
push
fs
push
dec
sbb
es
cmp
out
push
data16
js
and
jo
sub
gs
les
xchg
test
dec
xor
movsb
xchg
mov
add
test
rolb
fcmove
xor
mov
dec
into
push
andb
sbb
or
sub
les
xor
lock
adc
push
gs
sbb
xchg
push
push
leave
dec
rorl
loop
cmpsl
push
sub
mov
rorl
jo
and
repnz
mov
or
pop
or
pop
mov
add
cmpb
sbb
lret
adc
bound
or
ds
out
movsb
xor
mov
and
sub
rcr
lret
cwtl
loop
sub
outsb
cs
movsl
add
pop
clc
lock
rol
or
jbe
in
cmp
push
cmp
divb
and
cmpsb
int3
add
mov
rcll
inc
hlt
inc
test
push
adc
inc
add
push
inc
popw
test
add
push
mov
or
and
and
and
aam
and
int3
sub
ret
and
xor
dec
adc
daa
push
push
add
sbbl
ret
lods
dec
mov
mov
push
loopne
adc
jo
test
dec
ret
subb
cwtl
sbb
out
ficoml
mov
ret
inc
cs
xor
mov
pop
fucomip
cld
add
mov
int3
scas
sub
or
enter
loop
xchg
movsb
add
or
add
ds
cmp
add
add
adc
or
test
mov
dec
loop
je
pop
es
push
mov
ret
popa
sbb
xor
mov
add
pusha
pop
test
adc
xchg
orb
or
push
cmp
xchg
outsb
adc
dec
inc
dec
ljmp
adcb
js
push
or
sbb
rolb
mov
insb
movsb
mov
ret
adc
and
daa
fs
mov
push
sub
fs
inc
or
sub
mov
ljmp
mov
and
lods
push
shll
fxch
xchg
divb
test
mov
test
gs
aam
sbb
xor
mov
or
pusha
outsb
loop
mov
adc
movsb
test
fdivs
mov
or
int3
cmpsb
stos
out
adc
dec
push
mov
enter
xchg
adc
push
xor
test
gs
lods
jl
or
fwait
dec
push
lock
push
push
jo
shrb
and
fdivrs
cwtl
or
mov
add
ds
mov
aam
fidivs
loopne
mov
mov
mov
mov
push
adc
push
pop
jnp
cmp
aas
jge
mull
fnstsw
cld
jg
out
push
adc
dec
sbb
sub
mov
inc
cld
in
jg
mov
test
sub
adc
inc
mov
test
aaa
xor
ret
arpl
ljmp
mov
mov
aaa
pop
pop
dec
mov
mov
mov
xchg
dec
movsb
ljmp
shlb
inc
in
cs
pusha
daa
roll
add
push
dec
lock
ret
push
outsl
in
or
cmpb
pop
jg
outsl
aas
mov
pushl
add
adc
inc
stos
add
cmp
je
and
dec
shl
pop
jnp
push
and
add
push
xchg
mov
sbb
and
jl
adc
mov
inc
or
pushf
adcl
mov
mov
mov
xor
loope
mov
js
rorb
fs
push
xor
dec
adc
leave
clc
jbe
loopne
inc
jb
pop
dec
dec
mov
add
push
jo
pop
in
push
sub
mov
dec
or
xchg
mov
cmpb
aaa
in
lret
addb
add
inc
jae
out
cmp
cs
adcl
addb
push
movsb
inc
dec
xchg
shlb
push
sbb
adc
jb
push
pop
es
push
adcl
xor
int3
int3
xchg
nop
test
cld
js
adc
sbb
add
sub
dec
push
rcr
adc
add
inc
xor
mov
add
xchg
sub
cmp
aam
mov
outsb
sbb
pop
push
call
cld
adc
sub
jbe
cmp
mov
xchg
adc
dec
jbe
xchg
cltd
adc
or
fnsave
mov
or
pop
push
xor
pusha
movsb
mov
loopne
sub
push
push
shlb
jo
mov
je
add
add
push
push
sub
pusha
test
ret
mov
or
cmp
mov
jl
add
dec
mov
test
dec
add
in
inc
scas
inc
mov
aam
or
or
int3
inc
or
cmp
addl
inc
xchg
aad
dec
in
xor
mov
subb
mov
xor
add
popa
sub
cs
adc
ficoml
adc
push
test
bound
cmpsb
push
mov
dec
cmp
push
or
pop
lret
sbb
movsb
mov
xor
push
aaa
inc
xchg
dec
outsb
pop
xchg
and
pop
adc
andb
pop
and
subb
sbb
nop
ss
mov
enter
ljmp
jb
jo
push
call
inc
mov
add
loop
data16
add
sbb
push
cltd
fmull
inc
cmp
cwtl
movsb
rol
adc
imul
mov
pop
movsl
cs
filds
mov
mov
push
add
nop
xchg
ret
and
or
or
cwtl
inc
test
pop
jo
fimull
inc
or
test
cmp
js
and
inc
add
popa
push
cwtl
sub
dec
nop
dec
adc
dec
orb
subb
sarw
sbb
inc
fwait
push
xorb
int3
ror
sbb
sub
sub
aam
or
cmp
cs
aam
dec
lock
jbe
or
pop
inc
out
mov
cmp
cmp
jle
fidivl
xchg
xor
jb
int3
xchg
pop
push
enter
pushf
inc
and
into
mov
nop
add
cmp
mov
addb
mov
mov
xchg
push
sbb
sbb
rcr
mov
mov
sbb
bound
lcall
and
or
lds
dec
enter
or
scas
xor
cmpsl
icebp
jo
dec
add
mov
inc
sub
jl
add
cmpsb
test
mov
mov
mov
xor
pushf
fimull
test
adc
push
cmp
enter
dec
es
inc
ja
pop
rclb
sbb
mov
aam
mov
enter
in
push
sub
xchg
xor
add
inc
push
xor
push
scas
clc
scas
and
daa
sbb
pop
shlb
push
dec
push
pop
out
lods
adc
push
sbbl
dec
mov
sbb
bound
dec
js
lock
jecxz
sub
cmpsb
int3
mov
sbb
rcl
test
out
movsl
xor
and
inc
rorb
stos
lods
faddl
adc
mov
add
mov
adc
sti
sub
aam
test
bound
xor
xor
pop
test
jp
loope
xchg
mov
outsb
into
iret
rcrb
cli
aas
sub
jno
pop
bound
orl
jo
orl
cmpsb
sbb
notb
or
cmpsl
int3
clc
and
push
xchg
jmp
negb
fdivrl
popa
shrb
sarb
js
das
or
jo
pop
js
push
or
adc
push
adc
or
xchg
and
test
pop
mov
or
fdivs
cmp
sub
mov
mov
or
adc
sub
inc
xor
or
add
repnz
sbb
jne
lret
xor
dec
dec
mov
pop
cmp
push
rol
js
test
xchg
leave
or
rorb
rcl
fdivrl
ss
out
rol
add
jg
fisttps
incb
movb
push
in
adc
cmp
adc
sbb
nop
or
cmpsb
xchg
pop
enter
or
mov
mov
pop
cmp
or
orb
add
mov
xor
fisubl
push
fcoml
pusha
rolb
sbbb
cld
push
or
lock
cld
xor
and
push
inc
data16
inc
adc
gs
or
xor
adc
test
ss
fwait
sbb
lods
scas
ds
sub
inc
ret
popa
cmp
orb
and
add
inc
and
pop
cmp
andb
mov
shll
insb
push
nop
adc
mov
xchg
adc
pop
into
inc
cwtl
gs
sub
enter
pusha
cs
ljmp
in
mov
ljmp
xchg
popa
push
jecxz
jp
jle
or
outsb
sub
test
cs
pop
push
ret
sbb
push
rcrb
mov
call
xchg
fmull
scas
cwtl
ret
inc
adc
cwtl
dec
sub
push
sub
enter
enter
pop
push
mov
sti
pop
call
test
dec
in
xchg
test
xor
inc
or
rcl
push
into
loopne
mov
push
cmp
jo
lcall
pop
ficoml
add
in
mov
adc
js
inc
ret
xchg
inc
jl,pn
and
dec
lods
adc
add
cwtl
adc
andl
add
hlt
or
dec
mov
jg
test
scas
pusha
sub
inc
or
adc
add
inc
dec
pushf
dec
sar
push
call
js
and
add
es
adc
push
xor
xchg
ret
jb
push
push
sbb
scas
bound
fimull
pop
adc
dec
adcb
sub
insb
add
push
or
mov
and
cmp
xchg
push
shlb
xorb
and
shll
popa
push
add
sahf
js
sbb
xor
xchg
andb
cmp
and
xchg
shl
es
pop
or
inc
sub
out
push
dec
pusha
xorb
dec
in
aam
mov
push
inc
push
test
add
jo
sub
ret
popl
shrb
mov
dec
or
xchg
mulb
or
inc
jl
and
mov
push
stos
sarb
andps
in
pop
pop
dec
mov
push
xor
ret
xchg
mov
fadds
out
or
add
mov
inc
lret
jbe
jbe
orb
xchg
cmp
sbb
mov
jo
cmpl
cwtl
xchg
lock
pop
mov
mov
andl
and
test
push
mov
mov
lods
ljmp
fcomps
aam
loop
jo
or
inc
test
int3
pusha
test
shlb
call
popf
or
roll
add
inc
mov
andl
out
test
cwtl
mov
mov
sbb
inc
or
loop
push
daa
loopne
popa
cmp
push
dec
outsl
inc
mov
movsb
mov
cmp
jo
clc
pushf
dec
dec
add
cmp
and
leave
test
or
sbb
dec
inc
and
in
or
sbb
cmc
push
gs
jno
xor
sub
cmpsb
lahf
rcr
push
cmpsb
popa
mulb
add
xchg
push
xchg
loop
and
add
leave
sbb
dec
cmpb
sahf
dec
cwtl
icebp
mov
adc
cs
xchg
cmp
xchg
ljmp
movsb
add
sub
mov
add
dec
in
mov
data16
cli
fdivs
loop
fs
or
ficoms
inc
sub
jo
dec
inc
sbb
mov
bound
out
xchg
xor
pop
fcmovb
bound
rcr
call
test
js
popa
cmp
cld
xchg
cmp
orb
ja
pusha
aam
inc
jb
dec
mov
inc
lods
and
loope
mov
in
test
les
pushf
sub
adcb
xchg
jle
xchg
movsb
push
inc
push
push
es
push
enter
jo
jp
xor
stos
jo
push
pop
xchg
push
iret
cli
push
mov
xor
mov
inc
leave
or
push
mov
add
test
loop
lret
inc
test
jle
push
xchg
ret
add
mov
push
inc
dec
mov
push
ret
add
xchg
or
mov
dec
add
mov
cmp
mov
cmp
jp
pop
or
in
les
test
xchg
cmp
jp
push
mov
cmc
test
or
shlb
cld
sbb
adcb
das
inc
mov
stos
mov
lcall
push
adc
les
add
and
loop
loopne
adc
inc
out
test
adc
pop
inc
cltd
lcall
or
jbe
mov
bnd
push
add
popf
loopne
nop
xchg
push
xlat
mov
push
jle
and
push
dec
popa
pushfw
mov
push
sub
cmp
or
xchg
leave
test
sub
and
loopne
inc
dec
fidivrl
inc
or
or
sub
mov
sti
dec
mov
rorb
mov
adc
lret
movsb
xchg
in
and
in
lock
and
push
call
cmpsb
pop
pop
and
leave
adc
mov
jo
inc
mov
hlt
stos
test
ss
cmpl
inc
fs
inc
sub
mov
addb
xor
add
mov
test
lcall
nop
pop
dec
inc
retw
fmuls
sbb
test
sub
mov
test
add
inc
sbb
mov
and
sub
push
mov
or
push
or
xchg
xchg
subb
mov
mov
sar
push
cwtl
rol
mov
inc
push
or
push
hlt
dec
prefetcht0
mov
adc
lock
xchg
xor
add
or
or
add
sbb
inc
dec
inc
int3
xchg
sub
daa
or
hlt
hlt
cmpsb
pop
sub
sbb
adc
test
inc
add
pushf
mov
pop
or
inc
cbtw
jle
and
shrb
inc
into
mov
inc
test
push
mov
jo
pop
dec
xchg
push
test
popw
xor
push
lcall
mov
dec
pop
xchg
inc
cmpsb
mov
into
adc
add
adc
fidivs
das
add
push
jle
testb
daa
xor
xchg
push
push
xor
add
and
mov
inc
add
nop
and
adc
scas
xchg
je
push
and
out
inc
mov
inc
adc
pop
cs
cs
add
mov
xor
testb
in
outsb
push
dec
or
lcall
sti
mov
mov
adc
jg
lret
sbb
js
push
and
xchg
sbb
dec
out
add
or
jle
sbb
mov
stos
mov
or
pop
jo
pop
dec
cmp
and
xor
je
dec
loopne
shrb
push
inc
popa
sbbb
xchg
sbb
pop
rorb
xchg
rorb
lret
fs
jo
cmp
fsub
in
test
push
cmp
add
add
push
or
les
enter
adc
call
xchg
cmp
push
push
mov
scas
sub
and
xor
mov
shlb
divb
pop
add
push
rolb
ret
lret
add
mov
sub
lock
pusha
ret
add
outsb
fsubrl
pop
xor
jp
lods
clc
dec
and
xchg
push
add
clc
flds
rorb
adc
push
fisttps
mov
jp
xorb
xchg
test
xchg
and
dec
call
es
adc
sbb
pop
rclb
mov
mov
sbb
xchg
mov
sbb
inc
cmp
push
push
ljmp
dec
out
pop
aaa
or
sub
movsb
jo
sbb
std
sbb
popa
push
adcl
ret
add
in
xchg
push
sub
int3
xchg
fidivl
in
je
add
add
xchg
xchg
cwtl
adc
xor
cmpsb
or
orb
xchg
rorb
faddl
movb
add
insl
test
mov
xor
or
ret
rorb
call
adcb
mov
clc
sbb
or
adc
dec
add
or
inc
cs
xchg
and
wbinvd
mulb
pusha
push
inc
outsb
sahf
ficoml
adc
xchg
cmp
cmp
xor
pop
mov
add
adc
lcall
dec
push
fisubl
inc
cmp
push
and
int3
fs
bound
push
push
adc
add
lret
stos
xchg
inc
sbb
pop
addb
test
inc
xchg
dec
in
push
xchg
jae
outsb
rcr
hlt
sbbb
pop
stos
cmpsb
sub
aam
test
clc
xchg
ss
xorb
dec
push
push
lretw
test
enter
fbld
push
testb
faddl
cmpsb
cld
inc
add
or
dec
mov
ljmp
in
cmp
dec
into
lcall
adc
add
xchg
adcb
pop
incb
cwtl
xchg
xchg
negb
repnz
add
mov
adc
and
loop
out
faddl
push
rclb
xor
push
in
xchg
mov
xor
popf
pop
xorb
sbb
leave
jbe
adc
lods
xor
xchg
mov
mov
mov
imul
cmp
repnz
add
jg
sub
push
shl
fs
cmpsb
add
xor
mov
mov
out
pusha
movb
and
sbb
or
rclb
add
dec
ret
jle
adc
mov
ret
xor
mov
mov
fiaddl
or
cmpsb
cs
in
inc
and
or
inc
sub
ret
inc
cmp
dec
push
clc
sbb
adc
inc
int3
ret
xchg
push
add
cmp
mov
push
nop
and
out
lea
cwtl
je
inc
push
shrl
sub
push
js
adc
xor
xchg
mov
cmpsb
add
test
pop
pop
adc
inc
xchg
imul
rcrb
mov
lods
ret
add
fdivs
and
sbb
dec
ret
xchg
or
cmp
or
lods
hlt
or
rorl
into
sub
push
sbb
push
mov
mov
and
pusha
pop
sbb
nop
in
rclb
pop
inc
std
and
adc
testb
or
push
cbtw
mov
push
cmp
call
and
int3
inc
sbb
adc
bound
cld
lods
or
sub
insl
fdivs
add
mov
insb
and
mov
stos
xchg
cmp
xor
and
test
sub
mov
shrb
sbb
je
pop
and
and
int3
loop
mov
ds
add
test
aam
inc
pop
mov
sbb
sub
pusha
test
add
mov
sbb
xchg
mov
dec
or
xchg
push
shrb
add
and
add
inc
xchg
std
incb
add
and
in
jo
mov
ret
lcall
push
arpl
and
out
sbb
shll
sbb
test
or
mov
lds
test
xchg
mov
outsb
daa
loopne
add
or
adc
xchg
dec
dec
jle
and
pop
sbb
es
nop
fadds
sub
or
dec
sarb
pusha
xor
push
cmpsb
sbb
and
jg
outsl
dec
andl
or
inc
cwtl
xor
data16
sahf
jp
push
inc
loopne
add
pop
inc
mov
or
adc
push
data16
cmp
cmp
cmpsb
xor
lds
mov
sub
je
adc
xchg
sbb
dec
cmc
mov
inc
cwtl
sbb
fs
xchg
dec
xor
add
test
dec
mov
push
call
lret
pop
adc
xor
inc
and
adc
call
fimuls
xchg
or
rolb
pop
iret
jbe
pusha
jb
dec
inc
loop
adc
mov
sarb
and
mov
add
dec
popa
mov
js
fwait
popa
mov
pop
push
iret
pop
and
in
test
scas
sbbb
or
loop
push
xchg
rorb
into
nop
cmp
pusha
jp
adc
dec
mov
cmp
test
mov
sbb
sbb
dec
rorb
xor
push
and
movsb
xor
jb
fiadds
dec
test
inc
inc
jecxz
mov
adc
shll
testb
add
inc
sbb
cmp
dec
xchg
ds
cwtl
sub
adc
adc
mov
sbb
sbb
and
sub
sbb
cmp
adc
outsb
or
pop
pushf
sbb
pop
inc
lock
or
adc
enter
adcb
mov
das
sbbl
mov
mov
shrb
sbb
jo,pn
push
icebp
or
push
or
or
shrl
test
cmp
sub
daa
pop
movsb
call
inc
enter
mov
or
pusha
add
sub
lret
cmpl
sbb
pop
sahf
sbb
rclb
xchg
je
adc
rorl
add
cmpsb
adc
sub
jo
mov
shr
test
cwtl
pop
decb
inc
test
inc
in
dec
mov
loope
jo
mov
jbe
in
xchg
dec
data16
loop
jb
inc
mov
cwtl
scas
mov
out
testb
sub
dec
loop
or
cmp
pop
out
popa
hlt
stos
in
es
aas
add
movsb
sub
push
xchg
sbb
test
push
testb
nop
dec
cli
jbe
inc
cltd
adc
ret
inc
dec
sub
push
enter
adc
stos
adcb
clc
test
test
addb
and
or
mov
inc
add
sub
mov
or
adc
cmp
out
push
test
jo
clc
and
push
mov
or
sbb
mov
add
clc
lods
movsb
adc
inc
sub
and
sub
inc
test
mov
cwtl
xor
mov
leave
add
and
or
mov
nop
int3
sub
ljmp
rclb
test
mov
and
and
sub
loopne
jp
dec
add
xor
push
mov
add
cmp
add
jo
sbb
and
aam
cwtl
add
mov
pusha
xchg
dec
gs
enter
cmp
cmpsb
dec
adc
jp
add
repnz
dec
mov
inc
or
int3
ss
cld
andb
xor
mov
data16
and
subb
push
cmpsl
cld
pop
or
nop
lock
or
push
add
adc
mov
add
icebp
mov
xor
jo
push
or
movsb
mov
and
pop
mov
dec
outsb
or
pop
xor
add
aam
test
orl
cld
pop
test
lods
ret
and
push
js
inc
xor
hlt
adc
leave
sub
fcoms
add
int3
shlb
add
and
add
mov
sarb
jae
lret
sub
inc
jg
add
mov
push
insb
lcall
jecxz
push
adc
push
pop
les
push
lahf
insl
dec
in
push
xor
xchg
dec
jno
std
mov
push
cmp
jg
sbb
sub
clc
adc
mov
mov
adc
flds
je
inc
adc
inc
cmp
xor
mov
insb
jg
adc
mov
sub
cmp
sub
xchg
inc
sub
add
pop
popa
shll
mov
int3
xchg
ret
data16
test
xor
cld
xchg
test
pop
lods
rolb
inc
or
mov
jb
dec
pusha
dec
sbbb
aam
adc
xchg
mov
bound
sbb
push
test
and
js
aam
jg
in
mov
mov
adc
inc
sbb
movsl
mov
leave
enter
lret
push
fistps
mov
or
xchg
cwtl
xorl
xchg
adc
into
rcl
mov
mov
and
lock
push
sbb
call
inc
sahf
cmp
add
pop
mulb
push
sub
lret
xor
push
push
xchg
test
mov
rolb
in
xchg
push
xchg
int3
sbb
add
add
loopne
mov
mov
out
insb
rcr
les
adc
lock
pop
sbb
rol
cmp
adc
rcrb
adc
adc
test
sbb
cltd
cmp
ficompl
push
test
shlb
fisubs
dec
sub
xor
push
sub
shrb
sub
mov
stos
sbb
loopne
or
sub
push
mov
mov
inc
les
mov
les
sbb
inc
cmp
xorl
adc
lret
dec
cmp
test
sub
repnz
push
and
inc
inc
test
add
push
fs
or
pushf
add
push
push
inc
loop
in
movsb
test
adc
dec
dec
and
add
dec
inc
cmp
call
jnp
ficoms
lcall
or
sbb
push
sub
add
stos
out
push
mov
roll
fsubrl
push
jb
xchg
jg
nop
mov
out
xor
add
lret
mov
add
lods
nop
inc
dec
add
dec
aam
or
lret
mov
rorb
ret
pop
xchg
cmp
mov
add
mov
xor
test
rolb
pop
add
dec
adc
and
push
jp
test
adc
rol
movsl
sub
cwtl
push
add
xchg
inc
jo
sub
mov
mov
sbb
xchg
inc
mov
loope
test
jo
mov
inc
loopne
pushf
xor
or
sbb
nop
add
pop
xchg
test
push
inc
popa
mov
mov
cmp
lret
sbb
and
call
adc
inc
addb
add
mov
sub
addl
ret
xor
scas
add
sub
inc
jle
pop
mov
mov
rclb
or
lahf
shlb
lock
es
adc
jp
or
aam
dec
jb
jo
adc
jp
or
adc
aam
cmpsl
add
xchg
dec
push
add
orl
pop
test
sbb
scas
mov
je
loopne
loop
adc
nop
mov
outsb
add
enter
mov
dec
repnz
mov
xchg
adc
dec
test
adc
add
push
test
aam
adc
rcrl
jle
sub
mov
in
adc
sbbl
out
pop
pop
adc
mov
sub
loop
xchg
or
sbb
xchg
pop
mov
ljmp
jo
add
mov
adc
add
xorb
ds
test
les
cld
sbb
cwtl
mov
sbb
push
nop
pop
adc
les
sbb
inc
or
sub
push
sub
inc
dec
push
push
inc
jle
inc
mov
clc
aam
inc
adc
add
and
int3
adc
adc
pop
pop
mov
inc
pop
push
add
sub
adc
fmuls
lods
inc
sahf
std
lock
dec
sbb
test
sub
dec
jbe
push
or
loopne
cli
pusha
nop
int3
push
push
scas
and
ret
cmp
and
sbb
jle
adc
or
call
ret
nop
add
sub
mov
cmp
xchg
andb
inc
dec
sbb
daa
and
xchg
in
xor
mov
dec
add
ret
into
or
shrb
mov
cmc
in
decl
cld
and
sub
jmp
add
mov
dec
inc
inc
out
xor
lods
push
sahf
in
sub
sahf
add
jae
add
mov
or
pusha
mov
lods
pusha
dec
pop
dec
pop
leave
cmc
scas
jl
adc
call
data16
sarl
sti
jl
add
dec
in
mov
inc
enter
mov
and
pop
xor
sub
mov
lcall
shrb
lret
sbbb
and
inc
enter
mov
xchg
dec
fs
cs
cwtl
test
add
xchg
dec
jne
mov
ss
cwtl
cltd
inc
sub
mov
sbb
mov
ret
add
pop
dec
mov
dec
push
or
dec
mov
insb
hlt
push
add
jno
ljmp
adc
popa
gs
ror
cld
push
sbb
adc
jp,pn
mov
inc
xchg
pop
data16
dec
ljmp
lds
jb
les
push
mov
imul
or
movsl
nop
sub
data16
sbb
or
mov
pushf
add
cmp
mov
leave
add
and
cmpsl
and
call
cwtl
mov
gs
loop
cs
dec
pop
jmp
in
lcall
enter
sub
adc
pop
ret
mov
sbb
jl
xchg
ror
or
xchg
push
sbb
push
in
mov
push
sub
shlb
push
nop
ljmp
dec
mov
mov
jl
mov
cs
mov
das
ret
adc
dec
decb
int3
sub
aam
sub
cltd
push
sub
test
subb
jle
pop
pop
sub
or
push
sbb
mov
jo
and
leave
int3
mov
cmp
xor
dec
and
cmp
adc
pop
xor
xor
mov
push
call
jp
mov
pop
sbb
xor
sub
int
nop
pop
sub
xor
pop
gs
xchg
add
cli
stos
push
orl
xchg
pop
and
lret
or
cs
out
inc
push
adc
lock
or
test
dec
and
jp
adc
push
and
gs
push
cmpsb
loopne
push
adc
add
mov
add
xchg
inc
cs
jo
jb
cs
sub
pusha
mov
sbb
add
enter
xchg
mov
sub
daa
sbb
push
enter
addl
mov
push
xchg
ss
or
mov
cmpsl
test
cmp
mov
cmp
xchg
ficompl
in
int3
pusha
push
add
pop
je
add
xchg
cli
lcall
fdivp
mov
data16
and
inc
push
adc
adc
mov
dec
cmpb
xchg
and
ljmp
loop
pop
lcall
xchg
repnz
or
stos
pop
or
add
xchg
mov
dec
call
test
add
es
popa
orb
bound
and
pop
outsb
fiaddl
mov
sbbb
mov
cmp
xchg
or
push
or
mov
mov
call
aaa
mov
inc
mov
cmp
test
data16
push
lret
mov
mov
mov
add
scas
js
add
sbb
or
or
rorb
mov
js
and
cwtl
dec
dec
ret
inc
mov
leave
pop
cmp
popa
cmp
pusha
jb
xor
mov
adc
add
push
add
inc
ficoml
adc
in
jns
fists
inc
and
cs
mov
mov
nop
js
jo
push
xchg
jl
add
mov
cwtl
pusha
jo
cli
sub
dec
sub
add
add
mov
shrl
les
sbb
iret
aam
mov
int3
mov
lds
sbb
or
jbe
sbb
and
jo
cmp
add
mov
pop
xchg
dec
shlb
inc
adc
lret
rclb
and
pop
cs
inc
sub
and
mov
mov
shrl
dec
push
inc
jo
inc
and
push
xor
test
icebp
fs
mov
shl
sub
cmp
jb
decb
adc
mov
popf
xchg
mov
mov
push
fcomps
add
lods
add
sar
stc
iret
inc
mull
pushf
stos
xchg
mov
inc
xchg
lea
bound
enter
dec
rolb
add
or
and
int3
aam
popa
xor
sub
mov
jo
or
repnz
or
and
mov
ss
xorb
xchg
lods
lcall
lds
push
pusha
mov
test
aam
mov
mov
and
ret
je
ds
dec
orb
adc
cltd
dec
ds
cltd
insb
mov
mov
fiaddl
dec
sub
xchg
out
xchg
mov
cmpsb
call
xchg
pop
jp
les
outsb
inc
add
push
add
sub
push
enter
lcall
sub
jae
adc
mov
sub
test
mov
inc
and
lret
cmp
inc
dec
cmp
adc
cmp
subl
add
jecxz
sub
mov
je
xor
clc
fists
mov
xchg
mov
dec
xor
inc
imul
xor
fs
test
dec
push
add
inc
sahf
inc
push
cmp
stos
mov
xchg
fs
shll
ficoml
sbb
dec
fs
jae
xchg
push
cmp
xor
push
dec
lds
inc
or
inc
jnp
ror
pop
test
and
add
push
mov
push
lods
xor
xchg
pop
add
lods
nop
push
adc
add
push
add
es
dec
mov
sbb
and
dec
or
sbb
xor
int3
jl
dec
enter
sub
or
or
insb
lcall
call
sub
lcall
loop
fmuls
mov
pusha
xor
dec
push
mov
rclb
mov
xchg
rorb
dec
addr16
mov
mov
lock
xchg
leave
fs
ret
mov
push
adc
xchg
cmp
xor
adc
cmp
or
sbb
push
mov
xchg
mov
adc
pop
fisubs
adc
sbbb
cmp
cmp
cmpsb
xchg
mov
scas
or
push
in
dec
std
sub
es
or
or
filds
add
pusha
xchg
pop
push
in
push
push
sub
pop
out
mov
pusha
test
shrb
adc
xor
xchg
fs
int3
fs
ljmp
dec
push
orl
ret
mov
push
push
push
cld
inc
push
adc
xchg
adc
mov
ds
add
insb
mov
dec
shll
adc
inc
adc
push
pop
inc
sub
xor
xor
rorb
add
add
aam
dec
push
aaa
loopne
jb
pop
xchg
test
rclb
pop
cmpsb
andb
pop
hlt
xor
cmp
ss
rcrb
mov
lret
cltd
sub
cs
ret
inc
add
mov
mov
xorl
shlb
sub
sbb
std
mov
push
push
or
cmpsb
or
inc
inc
dec
push
mov
dec
test
or
add
je
and
mov
and
push
or
xchg
push
push
jle
pushf
add
dec
pop
push
xchg
adc
xchg
adc
push
jg
call
xor
xchg
push
and
and
and
lods
xor
push
xchg
sbb
test
dec
subb
sub
push
and
lock
negb
xchg
je
cwtl
and
and
daa
lret
mov
or
push
cmp
and
xor
push
sbb
xor
xchg
xchg
aam
fcoms
push
push
imul
js
and
inc
mov
xor
cwtl
aam
sub
into
movsb
or
test
pop
mov
jo
lods
data16
pop
inc
push
dec
add
jo
inc
xor
shrb
push
das
ret
rcrl
adc
filds
test
mov
inc
sub
push
push
shrb
push
xor
and
decl
repz
push
inc
pop
les
testl
in
dec
cld
push
mov
add
fistpl
push
push
mov
repz
cmp
jne
sbb
push
xchg
jno
imulb
push
push
or
xor
or
lcall
adc
outsl
loopne
and
push
imul
push
xor
ret
test
icebp
sub
lds
mov
mov
mov
push
mov
test
mov
sbb
rclb
lret
dec
push
xor
push
dec
movsb
jb
movsb
sbb
xor
sbb
lods
movsb
sarb
int3
xchg
sub
mov
enterw
jle
pop
addb
mov
nop
cmpb
mov
and
hlt
test
push
das
sub
test
or
inc
push
inc
addl
mov
add
push
orl
fcompl
dec
insb
cwtl
rcrb
dec
add
cwtl
fidivs
imul
dec
arpl
pop
clc
adc
dec
inc
mov
mov
fs
adcb
fdivp
dec
add
or
push
xchg
loopne
and
xor
mov
lret
xchg
cmp
or
sahf
sub
xor
inc
inc
test
test
push
das
sub
mov
call
loope
dec
mov
adc
cwtl
into
fsub
add
xchg
fsubrl
or
pop
xor
jmp
data16
cwtl
ret
mov
aad
xchg
test
vpcmpeqw
sti
adcb
or
pusha
adc
ficompl
pop
rolb
xor
pop
test
xchg
out
shrl
pushf
or
jb
addb
loop
addl
int3
bound
xor
inc
push
iret
adc
xor
movsb
or
loopne
inc
xor
dec
sub
mov
and
push
and
mov
lds
out
push
jbe
jnp
sub
call
xchg
inc
hlt
int3
mov
adc
dec
jl
dec
mov
or
fs
push
cmp
pop
inc
push
test
cld
addb
push
or
dec
cmp
insb
push
nop
sub
add
test
test
sbbl
add
push
push
addr16
cmp
add
lret
test
insl
outsb
subb
jle
adcb
and
xor
push
outsl
sbb
rorb
mov
sub
inc
pop
pop
pushf
nop
dec
pusha
test
push
and
and
mov
pop
push
or
insl
inc
or
mov
pop
inc
loope
sbb
dec
call
adc
sub
xorb
xchg
sub
sbb
popa
cwtl
andb
jb
inc
cli
imul
jae
mov
pop
mov
ficompl
data16
pop
xor
sbb
mov
adc
rorb
or
sub
cmpsb
data16
inc
leave
add
rclb
dec
std
or
shr
sbb
adc
repnz
push
or
hlt
mov
xchg
subb
or
bound
cmp
ds
fsubrl
jecxz
sbb
in
es
dec
not
push
push
add
push
push
fdivl
mov
cmp
mov
push
push
adc
outsl
inc
outsl
sbb
loop
push
xchg
xor
cs
xchg
push
pop
jbe
fcomps
sbb
pushf
lds
cwtl
mov
or
add
xchg
std
inc
inc
sbb
cmp
cmp
sbb
fs
push
inc
xor
sbb
inc
inc
xchg
xor
sbb
es
lods
sahf
mov
sub
fimuls
test
or
adc
fildll
adc
add
xchg
adcb
lds
pop
xor
and
leave
dec
mov
insb
ret
xchg
in
sub
mov
subl
mov
aam
popa
cmovo
pop
add
add
fsub
push
add
add
and
test
js
stos
inc
sbb
or
test
stos
inc
inc
push
add
mov
loopne
mov
xor
mov
and
subl
push
mov
inc
das
fmuls
adc
rolb
xchg
js
pop
mov
jp
sbb
nop
test
sub
in
lret
push
and
sbb
or
jl
xchg
test
add
mov
xchg
and
adc
mov
jle
loopne
mov
cmp
nop
push
jae
inc
add
add
sbb
mov
inc
dec
cld
jg
push
test
jno
or
or
insb
movsb
dec
add
push
inc
aam
sbb
push
mov
xlat
and
cmp
inc
adc
lea
dec
daa
mov
and
adc
gs
loope
cmp
mov
or
jbe,pt
add
shrl
loop
xchg
inc
push
dec
loop
sbb
add
sbb
inc
xchg
xor
js
dec
mov
inc
sahf
test
lcall
adc
jp
adc
sbb
stos
xor
dec
dec
imul
lock
and
mov
cwtl
xchg
xor
jb
test
nop
lret
push
ljmp
fisubrl
test
xlat
xorb
outsb
nop
mov
andb
push
test
fdiv
push
xchg
adc
push
sbb
sbbb
mov
pushf
es
sbbb
xor
sbb
inc
popa
ljmp
pusha
int3
or
loope
cmp
and
pusha
adc
adc
add
int3
dec
sbb
cs
xchg
roll
push
aam
sahf
or
ds
shlb
push
xchg
dec
out
test
or
ds
cmp
adc
pushf
cwtl
pushf
test
push
xchg
adc
mov
xor
adc
jle
pushf
or
sti
xor
dec
jo
and
je
xchg
sbb
push
cmp
pop
and
xor
rorb
add
xchg
incb
mov
dec
push
test
xchg
ret
push
stos
out
lock
aaa
int3
adc
and
scas
mov
jp
loopne
mov
fildll
scas
rorb
test
cmp
or
daa
push
pop
xchg
jbe
aam
pop
test
mov
and
bound
add
pop
nop
pop
jl
mov
inc
or
sub
mov
pop
std
faddl
movsb
push
jecxz
xor
sub
fs
and
ds
adc
cmp
cmp
loope
movsl
sbb
mov
add
or
cmpl
les
xchg
pop
in
xor
inc
and
jb
shrb
mov
push
adcb
sub
leave
push
push
js
lcall
push
mov
inc
push
scas
je
adc
mov
cmp
pop
sti
dec
movsb
roll
cmp
ret
mov
addb
jb
out
sbb
rorb
pop
push
xor
pop
jmp
jbe
insb
test
push
add
inc
in
rclb
add
shr
adc
push
leave
pushf
outsb
add
mov
stos
mov
mov
cltd
jo
fimuls
add
add
mov
and
test
std
test
cmp
loop
inc
mov
add
add
cmp
popa
sbb
push
test
int3
sub
shrl
movsb
pop
dec
sub
dec
add
or
stos
sub
adc
dec
mov
or
push
lds
adc
lods
fiaddl
or
or
dec
dec
bound
rorl
cmpsb
dec
fs
xchg
inc
push
subl
sub
push
sub
add
pusha
add
push
mov
call
add
pop
push
lock
das
inc
cs
cmpsb
dec
cmp
pop
outsb
sub
cltd
rorb
inc
sti
inc
and
sub
mov
and
dec
sub
clc
sub
bound
pop
sbb
sbb
dec
xor
jl
and
pop
and
add
je
cmp
push
push
shlb
jno
lock
pushf
fidivs
shlb
push
test
cs
push
jbe
push
push
dec
jle
or
adc
adc
cmp
in
push
and
loopne
add
sub
pop
or
dec
gs
mov
xor
mov
xchg
push
dec
lahf
addb
clc
test
add
and
rclb
sub
mov
adc
nop
rorl
fsub
inc
pop
and
hlt
mulb
sub
sub
add
rolb
add
and
es
xor
movsb
add
adc
shlb
in
adc
or
lods
sbb
adcb
cmp
pop
pusha
lret
adc
mov
notl
ret
mov
in
nop
and
add
out
mov
or
and
dec
xor
repnz
push
mov
xor
sbb
addb
dec
clc
pop
and
mov
adc
in
inc
mov
push
push
mov
xchg
adc
fwait
test
ss
xchg
and
xor
cmp
rolb
xchg
pusha
cmp
mov
es
gs
inc
or
addl
sbb
jo
inc
sbb
jle
adc
ret
dec
jle
shll
and
add
out
movsb
xchg
ficomps
push
xchg
shrb
adc
enter
inc
rolb
mov
test
jecxz
sub
sub
adcb
sahf
mov
dec
sbb
cmp
iret
fiaddl
fmull
leave
or
adc
mov
inc
les
jae
inc
out
es
pop
dec
or
push
or
sub
push
bound
stos
test
sub
orb
sbbb
mov
jmp
xor
sarb
sub
adc
add
bound
cwtl
push
inc
repnz
push
dec
add
sbb
mov
xor
mov
pop
iret
mov
movsl
adc
fsubl
push
cmp
add
leave
and
mov
bound
or
adc
push
cwtl
jb
fmull
adc
imulb
sahf
pop
push
add
leave
push
push
cwtl
and
xor
push
and
jg
adc
xchg
and
push
add
aad
pop
push
lds
and
and
gs
lret
adc
jl
test
pop
loope
in
sahf
add
cltd
adcb
pop
mov
or
fadds
xchg
adcb
inc
inc
cmp
sub
cmp
scas
int
dec
sub
xchg
jb
sub
mov
shlb
add
cmpsb
addl
xor
sbb
dec
or
pop
dec
inc
dec
xor
xchg
test
or
lret
cwtl
shrl
bound
dec
or
mov
xor
push
inc
and
add
es
add
xchg
sub
cmpsb
and
and
sub
and
test
bound
cmp
addb
adc
out
insb
sbb
pusha
mov
jbe
push
or
sub
js
xchg
and
into
insb
push
or
fs
int3
nop
lret
pop
push
shrb
pop
rcl
xchg
inc
add
push
fisubs
loopne
add
and
call
jo
cs
cmp
adc
pusha
bnd
push
or
ljmp
pop
xor
fisubl
and
cmpsb
mov
pop
add
mov
les
lods
mov
les
mov
sub
aaa
push
inc
mov
in
pushf
adc
cld
mov
cmpsb
mov
cmp
push
add
cwtl
addb
fs
jle
adc
inc
adc
cmp
add
sub
lock
xchg
mov
adc
fcom
call
push
push
mov
enter
adc
push
test
cmpsb
loope
add
jg
jb
or
mov
das
pop
pop
les
or
cmc
and
jb
mov
mov
mov
add
addb
pop
sbb
pop
clc
cmpsl
and
and
sbb
int3
sbb
rol
adc
xor
add
sbb
add
dec
insb
xchg
lret
adc
lcall
pop
in
mov
adcl
dec
jbe
addb
or
inc
mov
sbb
inc
outsb
add
addb
inc
and
es
test
je
adc
fists
aam
xor
jecxz
inc
iret
or
pop
mov
inc
or
fmuls
sub
mov
sbb
std
jp
inc
or
mov
and
push
dec
mov
jae
fs
or
lods
fidivl
int3
pop
push
mov
mov
lods
andb
aam
sbbl
jo
adc
or
push
ljmp
ds
ror
ds
into
stos
push
dec
dec
sbb
and
in
inc
cwtl
push
push
fildl
jo
pop
sbb
es
add
inc
shlb
add
addl
ljmp
nop
jo
or
dec
add
leave
outsb
xchg
pop
mov
mov
imul
aam
cltd
mov
xchg
adcl
popa
mov
lcall
inc
pusha
insl
mov
push
bound
cwtl
sbb
adc
and
nop
movsb
and
jle
fldl
adc
cmpsb
sub
jo
cld
lcall
inc
or
lock
test
dec
shl
je
cmp
cltd
ljmp
or
lret
adc
inc
and
pop
adc
push
mov
hlt
adc
dec
jo
adc
xchg
clc
xchg
sahf
shlb
jno
add
mov
or
int3
sub
mov
mov
add
and
mov
das
xor
test
or
rorb
xor
xchg
mov
inc
sub
daa
fs
mov
sti
cmp
int
rol
and
inc
int3
cmp
push
push
pusha
add
and
sbb
push
sarb
cwtl
add
or
xchg
roll
and
repnz
cmpsb
lret
andb
inc
pop
pop
test
or
pop
mov
cltd
andb
push
cmp
js
xor
add
sub
adc
clc
dec
insb
movsb
xor
pusha
mov
clc
xchg
or
pushf
mov
jbe
movsb
int3
sbbb
pusha
xchg
out
mov
and
mov
movsl
sbb
or
mov
inc
and
cmp
dec
inc
inc
pop
mov
mov
xchg
dec
lret
or
dec
inc
into
push
cwtl
addb
xor
pop
inc
in
inc
fs
outsb
sub
enter
xchg
dec
nop
mov
dec
es
sbb
inc
dec
fdivrs
pop
mov
inc
sbb
cmp
in
mov
cmp
adc
mov
dec
push
pop
ret
lods
jmp
lret
test
add
jb
adc
push
push
push
add
or
xor
mov
lret
sub
push
pushf
mov
pop
cmp
mov
pop
popa
mov
push
loopne
xor
add
xor
mov
lods
add
inc
xor
sbb
cld
push
out
test
pop
add
adc
pop
dec
dec
or
pop
dec
mov
pushf
dec
sbb
fsubs
popa
add
mov
daa
sbbb
push
hlt
loopne
sub
sar
rcrb
or
test
aam
loop
lods
mov
adc
pop
adc
dec
add
push
inc
and
scas
cld
pop
inc
xchg
jp
sub
fstps
dec
mov
fs
mov
inc
sbb
loopne
pusha
push
je
sbb
inc
xchg
and
sbbb
xor
xchg
fadd
test
mov
in
data16
inc
ret
pop
lret
xchg
ret
mov
and
pop
cwtl
and
adc
lock
int3
mov
mov
test
movsb
cmpsl
mov
dec
xchg
xchg
shlb
and
add
movsb
sub
or
inc
daa
js
push
and
les
push
mov
push
adc
sub
jg
sub
retw
dec
fs
shll
push
and
mov
ret
mov
mov
leave
je
cmpsl
or
mov
sbb
adcb
xchg
jbe
xor
adc
cld
xor
inc
shlb
cwtl
pop
sbb
cmpb
ret
test
aad
addb
and
leave
es
xor
and
cld
pushf
adc
mov
push
cltd
jne
adc
jl
sub
gs
lret
mov
add
mov
add
xor
movsl
test
xor
ret
or
test
push
inc
xchg
jne
inc
test
mov
xorb
mov
or
cmp
push
inc
push
test
push
push
and
dec
adc
jo
adc
and
insb
cwtl
ret
rclb
aaa
mov
outsb
insb
jbe
aam
xorb
pop
or
push
adc
add
frstor
pop
sarl
add
loope
cmp
into
add
mov
cmp
std
or
aam
push
push
sarb
inc
loopne
leave
mov
pusha
ret
and
mov
test
sahf
pusha
hlt
xchg
or
push
or
add
les
sbb
sbb
and
leave
dec
sbb
mov
test
inc
or
push
ret
or
push
les
adc
push
enter
pop
insb
mov
in
mov
fmuls
and
cmp
and
js
ds
inc
imul
int3
xor
movsl
shlb
mov
and
adcb
loop
xchg
ret
dec
and
and
cld
push
or
and
test
int3
mov
lds
or
adc
sbb
lea
mov
jbe
push
loop
xchg
inc
and
xor
and
xchg
lods
mov
or
add
pop
add
mov
lock
add
add
and
pop
lahf
mov
jno
dec
xchg
or
add
and
push
enter
mov
decb
and
sbbl
pop
ret
sbb
ret
mov
xchg
push
jb
test
nop
mov
mov
inc
add
xchg
pusha
adc
int3
or
xchg
xor
shrl
and
inc
rolb
sub
inc
jg
rorb
and
lret
pop
jb
pop
hlt
in
cmp
mov
or
jl
push
inc
push
into
fcoml
inc
dec
daa
xchg
adc
movsb
mov
push
add
cli
ljmp
iret
adc
jg
imull
sub
sbb
push
push
daa
mov
push
addb
xor
leave
call
and
push
push
out
fildll
and
sbb
adc
add
addb
sub
mov
fs
inc
in
loope
and
jno
inc
addr16
call
js
mov
int
add
sti
or
push
jo
pusha
sub
cwtl
ret
cmp
fs
inc
roll
daa
adc
xchg
and
loop
add
test
or
add
xchg
push
in
cmp
addb
sbb
add
sbb
cmpsb
add
xchg
test
enter
adc
sbb
sub
sbb
outsb
enter
inc
add
adc
leave
fdivrs
pop
inc
push
je
push
push
inc
rolb
outsb
repnz
mov
std
adc
inc
dec
push
xchg
and
sbb
sbbb
jl
add
inc
test
add
mov
pop
lcall
les
inc
mov
test
jg
cmpsb
mov
xchg
pop
sbb
push
inc
pop
das
add
test
bound
adc
nop
or
sbb
pop
adc
mov
and
inc
and
and
popa
aam
push
xor
xchg
dec
xchg
mov
loop
dec
dec
inc
and
hlt
xchg
lret
insb
cltd
dec
call
dec
fcoml
shrb
or
pop
jo
add
pop
imul
pop
inc
mov
add
sbb
sbb
and
xchg
mov
and
lret
int3
mov
adc
mov
or
dec
xor
sub
into
cltd
mov
push
pop
or
mov
sbbb
inc
addb
clc
add
push
int3
jp
jb
and
and
and
xor
sub
mov
adc
inc
dec
pushf
xchg
jecxz
jl
lock
dec
add
adc
outsb
sbb
inc
mov
inc
mulb
adc
add
pop
dec
adc
in
xor
inc
dec
and
pusha
es
mov
xor
and
mov
adc
pusha
stos
mov
mov
jo
mov
cmp
mov
sub
or
push
adc
xchg
cmp
outsl
push
shlb
in
mov
push
push
test
jb
or
or
gs
ss
push
icebp
and
incb
and
cmpsl
adc
sub
adc
loopne
add
xor
lret
inc
sbb
and
pop
or
out
bound
icebp
filds
pop
addb
or
es
cmc
jmp
lock
cmpsb
cs
mov
xor
mov
push
add
inc
dec
add
jb
sbb
push
fidivs
xchg
scas
fisubl
movsl
xchg
inc
scas
hlt
inc
or
sbb
push
int
push
pop
movsb
test
or
inc
ret
jl
push
dec
sub
push
xchg
adc
cltd
add
popf
fisubl
cld
mov
pop
push
pop
push
add
or
mov
cmpb
dec
adc
fidivl
or
addb
pop
push
inc
mov
xorb
sahf
or
or
shlb
adc
or
nop
or
and
mov
add
or
xchg
adc
sahf
enter
int3
or
shlb
pop
sbb
inc
push
push
adc
add
adc
xchg
push
stos
pusha
clc
xor
mov
inc
sub
jbe
lea
mov
test
std
adcb
test
xor
push
push
mov
xchg
or
hlt
add
sbb
test
and
ss
mov
test
jo
push
fcoms
cwtl
cltd
shll
inc
cmp
sub
sahf
orb
sbb
fidivs
test
jo
fcmove
lock
mov
test
dec
push
mov
or
add
sub
nop
or
sbb
adc
push
repnz
movsb
adc
adc
insb
jo
out
sub
inc
jbe
cmp
sub
mov
and
xchg
adc
fbstp
add
inc
add
cltd
adc
inc
hlt
inc
add
jl
adcb
or
xchg
push
insb
sbb
orl
je
xor
dec
sub
mov
nop
es
movaps
sub
call
adc
nop
roll
mov
ret
int3
xchg
dec
xor
out
mov
idivb
lock
movsl
int3
stos
in
lea
mov
pop
fimull
pop
push
inc
ret
jle
mov
adc
data16
andl
mov
les
bnd
sbb
daa
xchg
and
and
orb
insb
or
test
sub
mov
mov
add
push
jo
fmuls
iret
test
add
or
add
sahf
dec
xchg
xchg
mov
sbb
add
jle
xchg
xchg
cld
inc
or
ret
inc
mov
push
mov
mov
push
mov
nop
inc
enter
nop
sbb
jo
test
dec
cli
xor
sbbb
or
int3
dec
or
push
mov
or
rcrl
ret
jmp
lds
pusha
inc
lret
dec
fs
adc
xor
or
aam
lods
sbb
inc
rol
rolb
cmp
sub
notl
cltd
aam
enter
mov
sub
push
pusha
and
bound
sub
outsb
xchg
push
xchg
enter
or
mov
pop
test
in
or
inc
adc
dec
fs
push
orb
push
and
xor
out
sbb
lods
mov
les
jo
push
or
xorb
or
push
or
lock
aam
xor
jbe
addr16
pop
int
iret
push
adc
inc
fs
test
sbbb
in
rcrl
dec
inc
lret
push
xor
xor
loop
pop
int
pop
inc
std
add
xchg
test
ficoms
xchg
xchg
sbb
pop
sub
xchg
or
push
sbb
push
xchg
dec
adc
faddl
sbb
insl
or
mov
push
push
xor
es
sub
sub
sar
iret
pop
and
loopne
loope
lret
leave
ret
pushw
leave
int3
orb
pop
jo,pn
adc
or
add
jle
pop
addb
sub
loop
enter
mov
xchg
nop
add
bound
or
xor
push
xor
jo
in
int3
sbb
andl
fidivrs
data16
add
dec
sub
cmp
and
leave
xchg
adc
lods
jecxz
sbb
lret
decl
lcall
adc
or
pop
inc
arpl
cmc
insl
push
enter
imul
imul
test
dec
into
sbb
xchg
mov
call
dec
cld
sbb
mov
cmp
jl
add
xor
test
or
add
mov
xchg
inc
stc
sbb
mov
ja
mov
pop
push
xchg
imul
and
lock
pop
lcall
rcl
test
xor
enter
jmp
sbb
sbb
mov
adc
sub
ss
test
cli
or
adc
mov
pusha
bnd
es
mov
out
xchg
nop
lds
leave
outsb
mov
sahf
sub
insl
xchg
scas
xchg
push
fidivl
jmp
jb
rolb
and
cs
sbb
cwtl
int3
sbbb
jle
enter
add
inc
cmpsl
jp
push
je
dec
mov
add
mov
stos
xchg
xor
sub
and
test
enter
add
or
adc
inc
ljmp
int3
ljmp
bound
mov
cltd
lret
outsb
test
add
add
cmp
outsb
mov
sti
inc
push
imul
inc
jb
mov
mov
subb
pusha
es
push
sahf
and
fs
fmuls
fdivl
push
int3
cmp
pop
addb
add
divb
inc
pop
int3
in
fsubl
mov
push
in
or
add
pop
push
or
insb
or
andl
adc
xchg
sub
cmpsb
nop
xchg
add
sbb
inc
bound
bound
rcll
and
dec
imul
sbb
or
add
xchg
add
test
and
sub
sbb
dec
dec
add
push
or
jle
push
rclb
xor
push
sub
mov
mov
add
sub
js
pop
inc
outsb
adc
mov
mov
inc
sbb
subb
cwtl
and
sub
mov
xchg
leave
xor
pop
dec
or
or
sub
fs
mov
scas
mov
mov
add
sbb
mov
data16
test
pop
lods
or
or
or
test
xor
or
rdpmc
pop
push
stos
xchg
push
mov
ficompl
es
mov
jl
xor
shrl
test
xor
lcall
xor
and
hlt
push
hlt
fsubl
xchg
sbbb
mov
and
and
jo
dec
push
call
out
or
popa
sbb
sbb
test
add
xchg
adc
shlb
leave
mov
pop
test
jle
or
leave
sub
lods
je
xchg
pushf
and
subb
adc
push
hlt
popa
or
sbbb
dec
mov
sbb
roll
fwait
arpl
cmpsb
pushf
and
mov
and
adc
push
shll
rclb
cwtl
int3
or
adc
adc
call
adc
ljmp
je
lock
aaa
push
add
fistpll
fcmovu
ret
push
and
push
ret
aam
dec
mov
jg
jbe
push
push
add
mov
and
inc
push
xor
sbb
sahf
mov
adc
inc
inc
inc
push
rorb
xor
dec
pop
add
add
es
or
test
bound
test
xchg
adc
cmpsb
mov
xor
mov
adcl
ret
add
mov
je
adc
adc
inc
bound
inc
dec
rcr
inc
dec
add
leave
pop
sub
adc
dec
mov
xchg
scas
jae
or
dec
pusha
sbb
xor
and
bound
push
inc
adc
cmpsl
and
mov
push
jl
push
pop
pop
leave
or
or
sbb
inc
rorb
fs
jb
add
out
movsb
mov
sti
cmp
cld
inc
loopne
dec
and
ret
imul
loopne
add
xor
inc
imul
adc
dec
adc
subb
lret
out
dec
pusha
add
inc
or
dec
loopne
in
ret
hlt
push
sub
push
cs
mov
mov
jmp
or
loop
and
cmp
xor
add
lcall
inc
lds
pop
xor
sub
push
nop
inc
popa
sub
push
pushf
cmp
aaa
xchg
pop
ret
push
les
outsl
cld
and
adc
push
and
inc
inc
or
incl
das
mov
inc
pop
mov
xlat
mov
inc
pusha
inc
mov
sbb
outsb
or
add
xor
inc
and
and
jg
jp
sbb
cmpsb
call
ret
pusha
test
int3
add
ds
xchg
cs
sbb
xor
xor
add
jg
orl
cld
mov
jb
add
int
add
dec
and
xabort
pop
push
int
adc
pop
test
bound
mov
mov
stos
test
cmc
adc
push
sub
inc
or
xchg
mov
lods
cmp
sub
dec
rcl
cmpsl
aad
add
pop
lods
adc
iret
sub
push
inc
push
jg
je
push
add
jp
insb
test
adc
inc
dec
pop
mov
adc
rclb
mov
cltd
ret
test
scas
int3
and
test
fisubrl
sbb
cmp
add
sub
jb
out
loopne
dec
sbb
inc
push
dec
cs
or
sub
mov
lock
add
imul
pop
rclb
test
enter
push
in
inc
xor
or
rclb
push
loopne
jne
cmp
pushf
push
ret
xor
push
inc
inc
int
add
mov
sarb
jo
sub
stos
xchg
fists
in
mov
adc
xor
jg
int3
nop
pop
sbbb
mov
pop
push
and
dec
bnd
xor
shlb
cmpsb
sahf
rolb
push
stos
adc
or
out
je
pusha
inc
or
int3
cmp
dec
and
pop
sahf
pop
mov
orl
leave
movsl
adc
lret
lcall
xchg
pop
ljmp
rorb
subl
mov
inc
leave
data16
push
dec
add
push
mov
mov
into
pop
leave
push
mov
lret
dec
addr16
dec
push
mov
and
pop
xchg
xor
mov
lods
mov
mov
iret
mov
sub
test
dec
xchg
ret
pop
cmp
rol
xchg
mov
mov
sbb
mov
add
lea
mov
std
cwtl
test
sub
pop
push
stos
cs
aam
dec
sub
and
je
xor
mov
xor
movsb
inc
jo
lret
push
clc
int
jmp
pop
xor
dec
and
jo
xchg
leave
nop
adc
adc
lret
sub
or
and
rorl
push
jo
inc
test
adc
es
sub
and
mov
inc
dec
repnz
add
adc
repnz
dec
add
push
enter
and
mov
jg
or
jno
mov
pushf
movsb
jb
push
movsb
and
negb
hlt
push
jp
xchg
iret
gs
or
adc
sub
mov
subb
sub
pop
jle
popa
or
movsl
test
sbb
pop
sbb
xchg
pusha
mov
lretw
and
test
clc
sbb
xchg
faddl
adc
enter
lock
les
popa
mov
aam
xchg
inc
insl
or
lock
cmpsl
data16
add
add
cli
or
dec
rorb
or
sbb
sbb
add
enter
int3
sub
js
or
inc
ret
add
and
shlb
inc
push
push
adc
lcall
xor
add
lret
sbb
mov
xor
adc
push
je
sub
dec
iret
dec
call
stos
mov
rcpps
test
nop
iret
dec
adc
aam
test
pop
imul
xchg
xorl
sub
sbb
adc
shrb
ds
or
fs
imul
call
add
and
pusha
mov
mov
dec
mov
outsb
inc
sbb
add
lods
xor
ljmp
add
mov
inc
in
mov
dec
dec
add
shlb
xchg
aas
test
lds
mov
sbb
shl
ret
mov
push
movsl
out
dec
push
xchg
mov
and
xchg
inc
add
movsb
jb
inc
or
mov
mov
lret
out
push
into
mov
fsub
rclb
or
insl
inc
sub
addr16
dec
fmuls
adc
sub
or
jp
and
xchg
enter
inc
push
add
sub
adcb
dec
int3
or
push
adc
and
loope
or
stos
gs
mov
or
sbb
lcall
and
xorb
sti
pop
aam
dec
sbb
aam
mov
adc
call
dec
scas
mov
cmp
xor
xchg
jge
cld
fildll
nop
xchg
xchg
xchg
popa
jle
or
dec
sub
cs
pusha
ficoms
cs
aam
xor
gs
subb
test
push
hlt
cmpb
mov
sub
jle
scas
adc
add
in
push
cmp
sbb
jbe
xchg
or
in
orb
jbe
rcrb
lds
adc
push
clc
push
xchg
je
and
or
push
test
call
sub
pop
insb
ret
lock
pushw
sarl
pop
push
or
push
adc
pushf
inc
loop
mov
add
mov
adc
call
jo
cmp
int3
movsb
or
xchg
or
insb
push
inc
add
adcb
adc
pop
sbb
nop
pop
push
mov
or
ret
ds
or
mov
es
inc
xchg
scas
test
icebp
aam
xorb
xor
or
aam
fwait
sbb
test
mov
aam
xchg
push
outsb
sahf
enter
test
sbb
aam
push
inc
cmp
cmp
push
xchg
gs
shll
push
dec
lds
or
les
push
inc
or
gs
pusha
movsb
lock
adcb
dec
sbb
xor
inc
lods
add
pop
rcrl
divb
xor
je
aam
jo
and
and
adc
push
inc
jmp
dec
mov
or
adc
mov
jp
sub
or
mov
adc
sub
xor
cltd
push
add
js
movsb
xor
add
test
xchg
xchg
push
dec
inc
lods
testb
pop
test
sbb
jle
inc
add
sbb
sub
add
addb
xchg
dec
jb
inc
ljmp
xchg
mov
or
push
inc
add
test
sub
push
ret
sub
and
adc
sbb
test
mov
sub
jg
mov
inc
pop
repnz
mov
sbb
or
and
or
xor
int
loop
jp
push
dec
and
push
int3
popa
dec
xchg
bound
mov
shlb
adc
sahf
add
xchg
mov
add
insb
and
pop
rol
sarb
sbb
push
mov
add
addl
test
loop
shrb
and
push
lret
xor
in
cmp
xor
add
xor
and
mov
and
adcb
xor
int3
nop
jne
adc
fisttps
lods
jo
mov
sub
mov
jb
int3
add
xchg
test
cmp
call
add
xchg
sbbb
adc
xor
out
std
add
or
data16
js
daa
sub
push
sbb
mov
xor
mov
sbbb
ret
out
sbbb
push
mov
add
orb
push
into
add
adc
push
faddl
dec
mov
inc
lcall
mov
pushf
out
inc
inc
dec
aam
hlt
loope
mov
inc
xchg
je
mov
xor
add
cltd
dec
pop
xchg
push
mov
mov
pop
or
fs
sahf
xor
or
dec
xor
cmp
dec
loopne
retw
xor
jl,pt
ffreep
mov
mov
dec
out
into
shl
push
call
or
aam
push
xchg
cli
add
dec
mov
icebp
sahf
mov
pop
lea
cmp
mov
add
mov
add
or
test
push
repz
add
jg
ret
jg
mov
inc
fs
scas
in
mov
xchg
inc
jo
fcomps
pop
push
mov
test
movsb
xor
loopne
add
push
mov
xor
test
aas
sahf
mov
test
xor
inc
mov
or
push
add
xchg
and
fs
dec
pop
in
pop
addr16
sub
add
ss
push
test
pusha
adc
jo
lods
xor
subb
or
push
nop
fmull
add
push
cmp
inc
test
inc
add
hlt
sub
xorl
mov
pop
jo
cmp
pop
push
pop
sbb
test
int
dec
and
cld
jle
push
movsl
mov
cmp
adc
push
mov
sbb
loopne
inc
push
movsb
pop
sbb
ljmp
jl
add
inc
adcb
stos
call
loopne
cwtl
incb
mov
add
fs
cld
pop
push
or
jb
rcrl
xchg
pushf
adc
push
inc
testb
arpl
sbb
push
cltd
lret
push
pop
push
sub
xor
inc
les
add
movsl
add
jb
je
dec
les
jp
add
inc
dec
push
add
addb
popa
sbb
loop
outsb
inc
das
mov
mov
sbbb
mov
add
or
ret
in
inc
push
and
dec
pop
lock
inc
xorl
nop
adc
xchg
adc
out
popa
xor
jo
add
dec
inc
rcr
mov
push
mov
shlb
iret
lds
ror
xchg
pop
mov
dec
sbb
sbb
test
inc
mov
or
xchg
xchg
ret
dec
ror
rclb
and
dec
leave
testb
mov
loope
loopne
test
rolb
scas
enter
call
bound
xor
jbe
adcb
shlb
js
adc
orb
in
mov
mov
subl
ficoml
mov
mov
push
notb
ret
mov
xor
sbb
mov
adc
cmp
es
stos
mov
dec
sub
pop
xchg
or
dec
xchg
enter
mov
pusha
xor
pushf
or
mov
mov
lcall
repnz
xor
mov
orb
nop
rcr
mov
and
cmp
sub
test
add
or
xor
gs
pop
pop
cs
add
rcll
sub
loopne
push
jb
lret
or
std
cld
xor
ds
out
or
xor
jp
add
cs
sub
mov
push
xchg
fsubl
cmp
je
cwtl
add
andb
dec
mov
push
cmp
int
xchg
arpl
rol
mov
orb
cltd
inc
and
into
out
testb
sub
and
inc
int
push
dec
filds
sbb
pushf
sub
lret
into
and
in
inc
and
xor
pop
push
sub
fadds
ret
mov
test
rcl
sahf
mov
nop
les
adc
xor
dec
or
clc
push
xor
push
jbe
lds
dec
xchg
inc
jp
scas
cmpsl
add
sahf
ljmp
decb
add
sbb
cli
std
loopne
push
adc
xchg
push
xchg
cli
or
cwtl
cld
loopne
push
sbb
rorb
ss
add
std
in
xchg
or
xorb
daa
js
pop
xchg
jo
or
dec
lods
jbe
jbe
jl
mov
adc
inc
push
enter
cwtl
movsb
out
push
or
into
je
sub
xchg
or
ret
or
xchg
adcl
insb
lret
cmc
xchg
mov
lcall
js
inc
mov
movsl
in
mov
adc
add
xor
inc
or
xor
inc
movsl
add
aam
and
xchg
test
xor
xchg
rolb
xchg
xchg
call
adc
xor
add
adc
pushl
adc
shrl
lret
and
call
movsb
shlb
push
cmp
xchg
and
push
pop
enter
xor
sbbb
or
and
or
xor
push
cwtl
mov
push
xorb
push
xchg
test
jb
sbb
loop
cmp
inc
jne
mov
outsb
jmp
lret
orb
adc
adc
orb
aam
add
mov
or
dec
dec
iret
insb
xor
enter
dec
test
leave
xor
orb
in
and
xchg
xor
loop
add
push
outsb
sti
or
mov
inc
and
inc
scas
sub
mov
daa
pusha
mov
sub
mov
clc
fisubs
loopne
add
mov
and
lret
fcoml
adc
ss
jl
cltd
loop
pop
adc
sub
or
notb
and
sahf
push
xchg
dec
and
xchg
xchg
shlb
sub
sub
je
jmp
out
mov
adc
cltd
push
push
xchg
push
mov
or
aam
imul
insb
sub
sbb
and
rcrb
adc
add
mov
dec
xchg
mov
inc
xchg
and
bound
sbbb
sbb
xchg
push
dec
sub
notb
pop
popf
sbb
rolb
leave
stos
movsl
xorl
inc
inc
mov
in
and
loop
cltd
and
sub
mov
push
dec
loopne
pop
mov
push
mov
test
shrb
dec
or
insb
sbb
sbb
adcb
push
dec
sbb
mov
js
add
mov
push
adcb
fs
leave
sub
xchg
rclb
xor
xor
and
sbb
in
imul
adc
add
test
inc
loopne
sbb
jo
mov
sbb
mov
add
xor
dec
dec
push
dec
leave
loopne
xchg
sub
fdivs
in
adc
fmuls
nop
or
push
sbb
sbb
xchg
mov
push
push
popf
and
ret
adc
lret
cmp
fs
mov
shlb
add
int3
ss
sub
and
mov
fimull
mov
pop
shrb
cli
into
mov
je
addb
and
sbb
mov
pop
lods
sbb
mov
push
inc
mov
xor
test
mov
add
push
mov
shlb
push
push
push
add
movsl
and
js
out
mov
in
push
mov
adc
bound
jl
data16
iret
in
add
pop
mov
and
and
test
jp
dec
dec
sbb
xor
adcl
cmp
punpcklbw
inc
push
mov
jnp
and
pop
pop
sti
jbe
rolb
into
mov
push
loope
dec
push
pop
out
or
sbb
lods
faddl
adcl
add
dec
add
les
pop
jbe
xchg
add
inc
or
add
sbb
dec
and
or
in
xchg
lods
push
push
movsl
add
adc
add
adc
xor
push
or
push
fwait
nop
cwtl
rolb
dec
pusha
addb
test
and
fisttps
adc
pop
sahf
sar
out
dec
add
sbb
mov
inc
xchg
cmp
je
aam
jl
inc
sbb
add
fs
sahf
sbb
add
inc
ds
shlb
and
jg
adc
imul
lods
and
cmp
inc
dec
pusha
imul
mov
sti
cs
dec
push
es
les
add
xchg
adc
dec
inc
lock
push
push
mov
push
dec
mov
es
or
iret
lock
jle
rorb
test
push
cmp
sarl
mov
mov
jb
adc
jb
sub
add
pusha
ljmp
cwtl
or
scas
inc
add
imulb
and
jo
xchg
or
xor
and
or
xor
add
popf
call
adc
bnd
imul
push
add
jmp
shrl
add
push
jmp
aas
clc
imul
sbbb
xor
aas
sarb
jne
call
sub
pop
or
mov
ja
sbb
je
fcoms
imull
cmp
dec
cmp
inc
add
jp
divb
bound
push
and
lods
mov
mov
sti
add
push
jecxz
jl
pusha
or
adc
inc
sub
sub
popa
push
xchg
or
jno
mov
xchg
stos
pop
sub
adc
inc
sarb
push
ret
clc
xor
leave
or
add
rcl
fcompl
adc
push
jb
pop
rclb
adc
rclb
adcb
out
inc
or
mov
cltd
inc
mov
push
inc
sbb
cs
or
sub
js
or
mov
es
sub
pop
mov
sub
or
cli
mov
loop
adc
or
xchg
xor
and
push
subb
dec
and
jo
cmp
inc
fs
rorl
and
lret
insb
test
in
movsl
inc
inc
xor
adc
or
adc
add
movsb
scas
inc
cmp
or
bound
pop
mov
sub
mov
mov
push
inc
mov
xor
filds
rclb
sbb
cs
test
and
popa
or
jo
push
mov
cmp
push
adc
inc
sar
ret
cmpb
push
dec
cwtl
enter
push
inc
or
test
ret
cmp
mov
xchg
je
adc
mov
mov
xor
test
adcb
jg
mov
push
mov
fs
add
pushf
adc
inc
and
dec
out
ljmp
xchg
call
movsl
dec
lods
add
xchg
jo
adcb
jbe
pop
pop
pusha
xor
push
push
add
orb
fadds
test
jo
mov
add
stos
push
adc
popa
pop
leave
or
mov
add
adc
and
xor
xor
push
sbbb
loop
xchg
rclb
adc
mov
sub
add
inc
pop
mov
test
inc
push
sub
or
dec
mov
enter
xchg
jmp
mov
test
push
mov
inc
dec
add
sbb
add
lret
add
adc
das
add
push
test
pop
mov
movsb
sub
and
ret
or
mov
cs
mov
in
push
mov
adc
mov
sbb
pop
or
pushf
adc
lods
fs
sbb
or
nop
xchg
xorl
sbb
js
push
lock
or
test
enter
add
xor
mov
cmp
stos
hlt
outsb
inc
dec
out
test
or
or
stos
es
inc
sub
mov
enter
loop
adcb
fs
fmul
mov
test
rolb
aam
ljmp
outsb
or
jo
test
inc
inc
imul
push
dec
sub
clc
mov
cmp
sbb
add
pop
or
sbb
cmp
xchg
shlb
and
inc
arpl
and
xchg
das
inc
mov
mov
inc
dec
or
jmp
nop
dec
popa
cmp
les
adc
push
dec
pop
fs
test
or
sbbb
xchg
daa
push
xor
jbe
lds
jbe
jbe
add
inc
fdivrl
aam
cmpsb
push
pusha
or
ds
insb
orb
push
inc
mov
rclb
insb
call
mov
and
xchg
andl
xchg
push
mov
mov
test
and
xchg
adcl
cli
sub
xchg
pop
add
fsub
cwtl
add
loope
pop
xchg
cmp
js
mov
test
sbb
xchg
fs
fdivrs
sahf
inc
and
loop
nop
rolb
or
hlt
inc
cmp
mov
andb
imul
enter
dec
sbb
mov
xor
add
pop
sbbb
mov
dec
sbb
sbb
push
hlt
cld
addb
in
es
ljmp
cmpsb
mov
sub
inc
in
dec
ss
mov
inc
jmp
sbb
arpl
cli
lret
xor
xchg
jbe
sub
mov
add
xchg
add
lcall
sub
adc
or
sub
rorb
inc
xchg
inc
add
aam
pop
test
sbbl
stos
enter
cmp
push
xchg
lret
xchg
xchg
sbb
push
inc
adcl
jbe
sbb
out
mov
and
or
dec
cs
sahf
push
dec
test
je
lcall
rclb
add
inc
loope
adc
dec
jb
push
jp
xchg
cltd
rolb
xor
lcall
call
iret
pusha
push
ja
in
cld
shlb
adc
sahf
data16
sub
and
or
add
mov
or
mov
mov
xchg
mov
loop
fs
push
cmp
loope
xor
imul
ret
and
call
hlt
cmp
xchg
and
sub
ss
adc
add
and
xchg
sbb
or
adc
add
add
cwtl
pushf
nop
sbb
dec
sbb
xchg
or
push
insb
es
inc
lcall
jl
add
inc
mov
loopne
mov
ret
pusha
xchg
mov
shr
mov
dec
aam
pop
add
mov
je
jp
inc
test
and
or
xchg
int3
push
aam
add
enter
sub
mov
dec
addb
inc
xorl
or
cmpsb
mov
pop
les
pop
dec
and
mov
data16
pushf
push
fcmovb
addb
rclb
fdivrs
mov
and
pop
lock
adc
movsb
and
nop
lock
nop
jle
and
jo
data16
imul
jle
inc
pusha
test
adc
inc
add
dec
popa
inc
ret
fs
inc
adc
xor
inc
or
cmpsl
mov
je
inc
lret
or
sbb
leave
xchg
xor
adc
movsb
jb
jbe
sti
lock
adc
ret
sub
test
rclb
in
in
pop
jbe
add
or
testb
pop
push
jb
adc
sbb
cmp
sbb
pop
sbb
add
fsubr
loop
mov
test
sqrtps
cmp
push
mov
xor
lods
aam
pop
xchg
ret
test
push
cmp
dec
push
test
push
lea
lods
sub
hlt
dec
pop
sbb
insb
xchg
insl
sub
cmpsb
pushf
stos
bound
add
or
xor
or
pusha
int3
and
lods
xchg
movsb
push
push
aaa
xchg
sbb
ror
lret
add
cwtl
js
add
cmpb
popa
adc
xor
or
dec
adc
or
in
sbb
movsb
movsl
adc
cmc
movsb
ficompl
sbb
cmp
pushf
rorl
lret
ret
sarb
lret
cmp
push
add
push
leave
and
pushf
dec
sbb
pusha
sub
cli
in
add
push
dec
add
sub
call
push
orl
popa
das
test
xor
and
sub
sahf
or
push
xor
and
ds
mov
orb
clc
ja
push
jecxz
sub
addl
adc
pop
adc
inc
repnz
adc
rorl
dec
adc
cmp
sub
add
mov
adc
jecxz
sub
loope
out
scas
adc
xor
cmp
xor
inc
add
dec
inc
cmpsl
cmpsb
dec
cmp
xor
xchg
in
ret
pushf
add
pusha
mov
inc
test
sbb
les
xchg
add
push
adcb
aam
jp
sub
xchg
jmp
push
pop
jo
test
fs
push
push
sbb
jp
sub
pop
xor
mov
add
push
xchg
gs
orb
mov
jo
xchg
mov
cmpsb
pop
pop
inc
pop
jbe
push
xor
cmp
shlb
or
inc
push
or
pop
mov
push
add
push
loopne
adc
mov
xchg
inc
daa
push
push
mov
adc
sub
gs
fdivs
inc
and
push
fld
enter
pop
pop
dec
adc
push
loopne
mov
pop
mov
lret
sub
dec
out
mov
inc
push
in
pop
add
xor
xchg
adc
cs
or
out
fadd
ret
test
arpl
aam
inc
pop
out
mov
outsb
insb
sbb
aam
mov
xchg
add
les
cmpsb
or
inc
loopne
push
pop
stos
addr16
cmpsb
push
hlt
push
xchg
or
fcomp
mov
lea
push
sub
or
nop
pusha
adcb
int3
lcall
mov
orl
nop
adc
rorb
dec
jg
and
ljmp
test
js
mov
xor
sbb
or
push
and
push
dec
es
mov
cwtl
lea
les
xchg
dec
sub
and
or
push
nop
arpl
es
add
cmpsb
daa
add
mov
daa
and
out
loop
dec
outsb
mov
mov
add
in
push
int3
popa
mov
dec
test
dec
jo
dec
rcl
mov
andb
inc
or
or
and
js
adc
push
repnz
xchg
nop
adc
lret
or
add
iret
or
add
pop
add
push
cs
mov
add
sbb
je
and
lcall
pop
sub
bound
pusha
outsb
jmp
mov
shll
stos
and
push
ljmp
fdivr
cs
add
es
clc
pusha
add
loopne
xchg
mov
les
xchg
inc
fs
push
ret
pop
loopne
lock
movsb
dec
fcoml
xor
lret
sub
dec
xor
call
lods
lock
loopne
sub
jo
push
sahf
jle
nop
push
lret
mov
or
xchg
cmp
mov
inc
cld
pushf
pop
xchg
leave
js
cli
stos
xchg
orl
dec
push
pop
pop
mov
cmp
enter
sub
aam
mov
popf
or
sub
sti
jbe
jb
repnz
sbb
cmp
mov
or
orb
and
dec
pop
or
call
cmp
fcoml
sbbb
mov
inc
inc
stos
or
add
or
in
adcb
adc
sahf
mov
int3
pop
add
or
enter
push
push
sarb
xor
jp
add
sub
mov
add
cmp
and
ds
rorb
int3
pop
movsb
outsb
and
sub
mov
adc
pop
adc
sbb
pop
test
push
je
test
cmp
xchg
fildll
sbb
adc
or
or
movsb
pop
rorb
loope
mov
sub
rcrb
gs
int3
dec
mov
sahf
adc
sahf
push
adc
sub
fs
sbb
lea
cs
xor
movsb
orb
loop
imul
push
ss
imul
cld
xor
sub
xchg
orb
pop
fs
fcoml
xchg
pop
test
push
jle
xchg
push
dec
mov
or
loopne
pop
js
sbb
les
loop
fmull
pushf
pop
add
ret
and
add
mov
or
xchg
and
gs
add
xchg
xchg
bound
adc
fcmove
mov
and
enter
or
pushf
or
fwait
push
and
adc
push
or
movsb
sbbb
movsb
adc
sub
fs
push
mov
jb
adc
cs
mov
dec
push
or
decb
pop
pop
and
cwtl
sub
sbb
and
jb
jno
pop
xchg
mov
sar
ljmp
or
pop
jp
fnstenv
mov
and
mov
dec
jmp
mov
fistps
xor
ds
or
sbbb
jo
outsb
dec
lock
adc
stos
sbb
fsubrl
in
push
in
imul
pop
push
add
and
pop
sub
sbb
repnz
sbb
mov
sbb
xchg
xchg
cltd
hlt
push
mov
ret
and
movsb
les
and
je
adc
pop
adc
lcall
sbb
int3
in
mov
pop
jp
andb
mov
or
in
aad
add
dec
mov
rorb
adc
cli
mov
sbb
js
add
xchg
bound
fiadds
push
add
or
call
test
loope
dec
js
sub
xor
mov
into
pop
loopne
aaa
or
and
push
stos
pop
test
xchg
inc
xor
inc
cld
ret
adc
sbb
pushf
adc
add
mov
in
pushf
add
push
ret
push
push
cmp
and
add
pop
push
pusha
test
push
nop
loopne
inc
sub
nop
sbb
ret
jo
dec
gs
mov
and
push
fcomp
cmp
sub
adc
movsl
jp
jbe
inc
dec
or
xor
insb
inc
mov
insb
dec
dec
mov
popa
xchg
lret
push
addb
xor
pop
push
mov
test
dec
push
pushf
push
push
fcoms
xor
sbb
addr16
xlat
xchg
pop
inc
insb
imul
movsb
xchg
cltd
sub
les
xchg
in
mov
lods
inc
movsb
std
xor
inc
test
ss
sub
negb
in
and
stos
sub
gs
dec
jb
cs
int3
nop
out
sub
bound
add
mov
pop
out
add
mov
loope
mov
or
popa
dec
sbb
addb
fisubs
xchg
add
jl
inc
ss
jbe
lods
pop
or
and
sbb
push
xchg
adc
fisubrs
add
in
push
mov
in
push
hlt
cs
loope
xchg
cmpb
xchg
mov
dec
or
bound
jle
jo
add
sbb
mov
push
add
and
and
orb
adc
ret
rclb
and
xchg
bound
lods
push
rorb
adc
sahf
lcall
cmp
js
data16
xchg
loop
mov
js
rorb
xchg
add
repnz
sbb
xchg
xchg
xchg
mov
scas
push
stos
jo
cmp
fstps
cwtl
adc
pop
push
adc
or
xor
mov
loop
or
and
sub
int3
jbe
and
sub
or
xor
push
aam
and
add
mov
cmp
pop
add
push
dec
divb
push
xchg
inc
inc
sub
popa
popf
jb
sahf
adc
add
jo
cmp
test
pusha
shll
jg
push
mov
pop
adc
loope
or
call
daa
push
push
inc
and
into
dec
pusha
mov
ds
jp
test
outsl
jmp
dec
ss
outsb
push
cwtl
call
push
mov
mov
hlt
dec
je
inc
and
inc
add
out
roll
leave
jo
popa
add
mov
rcl
inc
push
mov
sbb
mov
xchg
add
decb
outsb
mov
in
xchg
nop
or
mov
xchg
enter
mov
fs
adcb
lret
ret
jno
insb
std
fsubl
loop
leave
scas
push
dec
jno
dec
add
sub
jbe
xor
inc
fimuls
enter
xchg
adc
push
clc
add
loopne
add
jo
push
add
pop
add
push
je
sub
cmpsb
adc
xor
or
push
push
push
lret
dec
subb
and
mov
push
inc
es
rorb
sbb
or
adc
add
cltd
jb
push
cli
insb
mov
inc
dec
inc
inc
pop
and
nop
sbb
fsubs
in
mov
cmpl
sub
jl
inc
fs
mov
ficomps
dec
jno
jbe
loop
push
sub
inc
mov
or
repnz
mov
pusha
adc
inc
or
cmp
sub
test
jmp
or
and
sbbb
or
push
xchg
lret
and
push
mulb
ret
and
fs
xor
nop
loopne
mov
jle
push
shlb
mov
adc
es
mov
dec
push
inc
pop
xchg
inc
les
pusha
adc
sti
sub
sub
hlt
push
inc
push
popf
dec
mov
or
xchg
shlb
add
fistps
adc
ds
test
mov
lret
or
movsb
and
mov
add
mov
sub
leave
jbe
adc
pop
mov
xchg
jl
sub
inc
lods
or
push
insb
mov
mov
add
xor
aam
add
dec
add
pop
lock
and
in
mov
cmpsb
data16
das
push
dec
xchg
aam
stos
fidivl
dec
inc
hlt
push
pop
jb
dec
mov
pop
or
inc
cmp
sub
and
ss
pushfw
rorb
mov
ficoml
push
pop
inc
cltd
jl
data16
add
adc
push
add
dec
sbb
nop
enter
add
loopne
and
push
popa
mov
xor
arpl
and
sbb
es
test
cmp
and
sub
push
mov
mov
dec
inc
sbb
sub
inc
or
add
out
add
xchg
cmp
add
push
outsb
jmp
add
adc
leave
mov
fsub
and
ret
add
mov
jp
add
inc
fs
filds
add
fs
push
mov
inc
test
testb
test
adc
or
or
pushf
insl
test
xchg
mov
gs
rol
pushl
loop
mov
test
mov
or
adc
dec
mov
adc
js
mov
pop
or
mov
shl
inc
inc
cmpsl
nop
shlb
or
hlt
clc
sbb
leave
and
pushf
sbb
inc
inc
nop
xor
adc
cmp
inc
lret
sub
leave
dec
or
lea
sub
stos
jne
add
mov
jo
jg
cmpb
add
or
ret
stos
mov
in
pop
test
adc
xchg
sub
xchg
or
push
inc
ss
test
xchg
push
jo
xor
or
movsl
orb
js
dec
cmp
dec
sub
nop
flds
mov
jecxz
add
or
pop
inc
push
nop
ret
lret
fs
cltd
sub
dec
lods
insl
pushf
inc
cmp
aam
cmp
js
push
stos
fistl
xor
adc
roll
lods
add
bound
or
orl
mov
in
or
ds
jb
jne
pushf
je
test
push
xchg
rolb
int3
pop
sub
into
ret
stos
and
faddl
sub
xchg
xchg
xchg
xchg
lcall
and
call
mov
jbe
nop
xchg
mov
jp
aam
fldl
addb
mov
jne
sbb
fmulp
xor
cs
xor
xor
inc
mov
and
mov
cmp
xchg
jb
adc
lods
jl
add
stos
fidivs
js
or
ret
or
stos
cltd
adcl
jl
cmp
movsl
jp
push
push
xor
add
hlt
sahf
add
or
pop
mov
or
sub
push
sahf
adc
add
sarb
ret
cltd
mov
pop
mov
sbb
sbb
and
ljmp
in
xor
ret
sub
xor
add
clc
enter
mov
add
jne
in
lods
dec
and
in
dec
adc
imul
inc
rorl
js
pop
inc
mov
adc
jbe
and
push
imul
jb
add
data16
add
dec
lds
rolb
xchg
into
out
pop
or
inc
insb
mov
push
ret
test
mov
dec
jb
dec
or
lea
and
inc
push
loop
cmp
lea
daa
incl
cli
inc
pop
popa
dec
faddl
test
adc
loopne
or
add
test
pop
ljmp
dec
mov
xchg
addl
xchg
icebp
jg
je
adc
out
aas
out
adc
sub
nop
xor
roll
xor
into
and
aaa
mulb
inc
mov
test
sahf
xchg
inc
sub
and
bound
pushf
adc
mov
test
pop
test
int3
loopne
cmpsb
dec
lret
es
nop
adc
push
test
ds
bound
or
xchg
cmp
mov
pop
in
sarb
adc
cmc
lret
push
and
add
add
test
xchg
or
push
sub
nop
loope
push
sub
aad
inc
and
insl
insl
jmp
or
jg
dec
inc
je
in
jle
call
shlb
call
mov
lock
inc
sbb
int3
test
popa
or
repnz
or
cltd
call
push
scas
enter
ret
cltd
nop
dec
insl
mov
mov
pusha
adcb
add
xor
mov
pop
or
and
call
ret
fiadds
dec
and
outsb
mov
sub
cmpsl
pusha
cwtl
sub
cmpb
imul
sbb
cli
pop
out
xor
rclb
pop
add
popfw
mov
mov
and
testb
cmpsb
xor
and
dec
push
adc
test
aaa
fs
fcomps
jb
push
loopne
push
nop
adc
sub
js
dec
adcl
rclb
or
pop
and
inc
adc
inc
add
jle
push
data16
pop
dec
mov
scas
xor
inc
xchg
sahf
cli
sbb
push
sbb
aam
mov
sbb
ret
cwtl
mov
push
pop
js
push
dec
sub
push
xchg
push
mov
and
add
mov
sub
xor
mov
rorb
mov
add
xchg
dec
dec
push
jp
pop
xchg
push
inc
rorb
inc
sub
nop
mov
dec
pop
mov
xchg
xchg
es
and
daa
rolb
cmpsb
les
xchg
inc
les
scas
outsb
sbb
fisubrl
adc
lcall
mov
pop
cltd
xor
inc
or
out
lret
mov
lods
nop
push
cwtl
leave
adc
scas
loop
add
ret
dec
in
and
rolb
xchg
icebp
pop
leave
or
popa
xchg
not
repnz
or
push
xor
mov
mov
push
dec
movsb
pop
add
sub
sbb
roll
sbb
inc
add
dec
add
mov
mov
or
and
loopne
mov
or
movb
adc
les
adc
mov
inc
aam
dec
lods
dec
push
xchg
sbb
mov
test
xor
sbb
aam
or
loopne
cmpsl
int3
lcall
add
test
outsb
or
lcall
rclb
into
imul
xchg
or
mov
push
mov
or
sub
pop
pop
xchg
ret
cld
in
pop
xchg
add
fiaddl
clc
ror
add
mov
xor
sti
sbb
pop
mov
sub
push
push
test
sub
add
outsb
dec
inc
sub
faddp
sub
inc
push
mov
xor
mov
leave
add
sbb
sub
or
add
dec
xchg
inc
add
dec
cwtl
or
pop
or
mov
stos
jbe
sbb
repnz
dec
and
je
mov
xchg
mov
mov
add
pop
stos
ret
adc
push
adc
mov
jle
adc
pop
iret
add
aam
or
xchg
adcb
xchg
jg
ljmp
or
inc
call
jo
add
mov
add
test
mov
or
and
mov
xor
adc
enter
sub
fisttpll
mov
xor
mov
xor
nop
add
movsb
and
and
push
xor
mov
inc
adc
lcall
sub
xchg
nop
std
loope
add
push
sub
add
sbb
push
adc
mov
decl
jecxz
inc
push
mov
std
adc
sarl
adc
dec
add
dec
sub
adc
push
add
or
lods
pop
push
fs
sbb
mov
push
pop
test
or
xchg
pop
and
les
rolb
or
test
aas
mov
push
pop
bound
xor
and
sub
inc
cltd
jo
ljmp
xchg
test
adc
xchg
enter
adc
push
push
sahf
test
push
data16
jecxz
mov
add
fiaddl
add
inc
xor
sbb
inc
shlb
dec
adc
movsb
nop
andb
adc
shlb
sub
dec
sub
add
or
dec
add
add
sub
xor
sub
stos
add
insb
test
cmp
xor
mov
sahf
dec
add
sub
mov
test
push
es
and
test
ljmp
adc
sbb
lret
and
mov
add
jle
jno
movsl
jo
xchg
push
xchg
add
mov
adcb
loope
xchg
xor
push
inc
repnz
cmp
in
sahf
xor
test
sbb
or
sub
bound
filds
xor
outsl
add
jbe
xor
or
adc
imul
mov
addl
les
mov
dec
or
jne
int3
lods
hlt
push
ret
xor
push
push
mov
inc
push
mov
shrb
cmpsb
xchg
push
les
push
mov
fstps
sahf
xor
jle
inc
outsl
inc
stos
xor
fs
in
inc
jmp
fsts
add
iret
cli
mov
stos
bound
sub
push
mov
jl
or
lds
sbb
sub
cwtl
push
shrb
inc
pushw
je
xchg
or
xchg
testb
or
jo
fadd
sub
and
jo
popa
add
sub
xor
and
jp
fs
and
and
push
inc
jo
sub
outsb
cwtl
pushf
add
pusha
or
sbb
pop
xor
xchg
xor
and
adc
cs
in
mov
and
push
pop
bound
test
dec
jp
or
adc
inc
cmp
add
rclb
scas
xchg
mov
add
push
pop
unpcklps
sarb
dec
push
lods
inc
or
push
out
aam
ret
xchg
loopne
loop
push
and
iret
and
rcrb
lods
test
mov
orl
pushf
into
adc
adc
push
cwtl
jl
ret
sub
and
ds
adc
push
or
or
dec
icebp
mov
in
jbe
sub
or
test
test
ret
add
fisubrs
sti
adc
loope
xor
mov
sarb
xchg
int3
ret
test
xchg
call
pusha
add
push
fdivrs
cmp
ret
and
das
xchg
out
adc
lcall
cli
inc
aam
add
and
adc
add
movsb
sahf
dec
sub
adc
jb
mov
mov
stos
mov
mov
pop
ficoms
sbbb
dec
cs
or
sub
and
mov
into
or
sub
lret
sbb
clc
mov
mov
stos
push
dec
dec
pop
inc
dec
sbb
push
add
shrb
in
mov
sub
mov
mov
inc
movsl
push
lods
jl
mov
mov
and
inc
pop
hlt
sbb
insb
xor
adc
jp
mov
cwtl
add
xchg
test
pop
call
add
rcrb
nop
xor
sub
iret
inc
nop
fwait
sbb
mov
pusha
push
jle
cmp
mov
mov
mov
mov
add
test
rcrb
inc
bound
cld
or
or
jne
nop
sub
sbb
pushf
cmpsb
adcb
test
shlb
or
jg
push
clc
jg
mov
add
rep
push
mov
sbb
andl
add
xchg
je
lods
cs
rol
jbe
rorb
js
mov
addb
test
ret
jl
inc
adc
stos
ficomps
mov
ljmp
mov
mov
xchg
enter
push
popa
jo
in
loope
cmp
test
ret
out
mov
sbb
push
dec
push
mov
sub
add
data16
sbb
orb
push
jo
or
mov
add
and
pop
dec
test
sbb
test
sbb
xchg
test
dec
fs
and
or
add
xor
dec
adc
loopne
pop
xor
dec
scas
scas
movsl
sub
xor
sbb
pop
std
dec
mov
xchg
mov
test
sbb
pop
jo
cmp
loope
adc
int3
stos
and
outsb
mov
inc
fs
mov
dec
bound
movsl
xchg
enter
jo
sahf
add
xchg
or
mov
or
and
movsl
sbb
bound
push
push
push
push
je
sbb
test
sub
mov
rclb
test
inc
mov
or
js
sbb
add
jo
rol
xlat
mov
xor
add
lcall
pushf
sub
or
icebp
pushf
jo
fs
and
les
add
mov
and
and
andb
xchg
adc
sbb
in
xchg
push
ror
hlt
and
and
push
cmpb
jns
push
adc
andb
add
push
testb
inc
push
mov
sahf
sub
inc
lock
dec
sbb
push
and
mov
shrb
add
je
cld
sbb
and
int3
in
add
sub
adc
repnz
ss
sbb
fidivrl
ljmp
mov
xor
xchg
sbb
push
rolb
nop
sbb
add
and
shrl
adc
mov
test
dec
shlb
inc
fcoml
xchg
sub
add
push
rorb
mov
inc
xor
sub
xchg
dec
or
sti
insb
ret
ljmp
cmp
pop
movsb
lods
xchg
lret
and
ret
xchg
adc
nop
loope
push
mov
xor
inc
xor
cmp
insb
or
ds
movsl
add
pop
or
fs
push
xorb
add
rcrb
insb
mov
mov
adc
lds
push
ret
test
leave
dec
shll
enter
sub
dec
pop
push
nop
ret
insb
inc
lret
adc
mov
push
mov
or
sbb
xchg
inc
inc
push
or
jbe
xchg
or
adc
je
push
loopne
sbb
pop
adc
or
orl
mov
mov
rcll
lods
adc
test
or
sub
sub
out
lods
add
or
bound
or
lds
jo
sbb
mov
adc
or
sbb
pop
xor
sub
and
test
std
mov
mov
test
rolb
pusha
mov
and
cwtl
sub
rolb
call
subb
in
ret
sub
dec
dec
push
inc
mov
lods
push
mov
ljmp
lret
rorb
loopne
int3
xchg
cmpsb
pop
adc
xor
fs
andl
or
sbb
in
or
pusha
pop
pop
int
push
pop
pop
mov
add
jp
xor
xchg
or
lret
xchg
ljmp
inc
pop
adc
test
js
push
sahf
dec
je
cmpsl
lods
xor
cmpsb
pop
enter
fdivl
add
mov
sub
push
add
xor
cs
popa
nop
sahf
je
xchg
add
hlt
scas
dec
cmpb
push
xor
lret
jmp
pop
or
addr16
inc
adc
dec
test
roll
aam
fbld
mov
mov
add
adc
pusha
sub
sahf
addr16
fidivrl
in
fdivrl
loope
daa
enter
mov
push
add
in
or
push
pusha
push
int3
test
cmp
mov
xor
xor
or
sub
adc
movb
shlb
dec
dec
adc
and
inc
adc
sub
mov
cmpsl
sub
and
jle
pusha
pusha
dec
mov
adc
cmp
rolb
lds
xorb
rorl
inc
adc
rcr
xchg
jg
das
dec
push
or
xor
cld
or
mov
and
sub
pushw
enter
cmp
pop
cwtl
sbb
mov
mov
cmpsb
lods
ret
test
adc
add
xor
lock
jb
push
pop
cmp
mov
popf
sbb
adc
push
fsubrl
pop
push
cltd
and
cs
ss
adc
mov
addb
fisubrs
mov
fisttpl
clc
adc
sub
or
lock
sahf
cmp
and
call
and
orb
dec
lods
push
fs
leave
adc
ret
loope
inc
adc
push
mov
test
push
xor
inc
pop
add
xorb
ds
jb
test
pop
push
pushf
rol
sbb
xorb
mov
jb
or
inc
nop
enter
sub
sbb
int3
xor
and
pusha
and
orl
cmp
fstpt
incb
dec
adc
sub
cmc
xor
fs
rclb
pusha
sahf
add
cmc
xor
add
sbb
cmp
or
movsb
and
sub
ror
movsb
mov
xor
jo
xchg
js
ret
js
enter
jo
lcall
add
bound
push
movb
pop
mov
add
lret
es
pop
mov
aam
mov
pop
push
mov
loopne
xor
xor
mov
jl
lock
and
fiaddl
and
mov
add
push
sbb
mov
in
inc
and
fcomps
mov
add
cmpsb
lods
pusha
sbb
filds
pop
adc
or
xchg
or
or
dec
dec
in
mov
mul
sbb
bound
xchg
sbbb
cmp
jle
xor
mov
test
mov
out
mov
push
test
xchg
adc
dec
sbb
loop
rolb
ss
movb
xchg
xchg
push
call
and
test
inc
and
xchg
inc
and
adc
sahf
push
int3
mov
outsb
xor
xor
ljmp
and
popf
inc
cltd
lea
popl
out
or
stos
mov
cld
pushf
and
dec
sbb
add
xchg
rclb
pushf
or
push
inc
add
incb
mov
dec
xor
push
cwtl
faddl
sub
add
inc
lock
orl
add
adc
add
mov
jl
fwait
xchg
push
add
sbbb
mov
lret
scas
push
xchg
or
shl
adc
loop
insb
jp
in
sub
push
fidivrs
fimull
lds
cmpsb
dec
lock
push
add
imul
push
dec
xchg
push
popf
test
movsb
cmp
push
mov
rolb
movsb
and
or
inc
mov
or
rorb
mov
out
push
subl
and
in
xchg
cmpsb
sub
push
mov
cmp
cld
mov
xor
jle
ljmp
test
or
cs
dec
cwtl
push
call
adc
push
mov
inc
dec
jbe
inc
inc
test
xor
enter
sub
mov
sahf
jb
xchg
jo
loopne
pusha
popa
es
sub
cli
push
add
adc
call
ret
mov
shll
add
push
pop
test
lock
cltd
rcl
enter
cltd
mov
adc
add
mov
lea
xor
xchg
fidivl
push
es
and
xor
add
jb
push
pop
pop
mov
mov
ret
lods
jae
inc
inc
or
jo
fmull
adc
adc
add
data16
pusha
mov
mov
cmp
mov
or
imulb
popa
mov
xor
call
or
pop
mov
or
jmp
out
add
rorb
dec
es
push
ljmp
test
adc
rolb
push
mov
cltd
ret
xchg
sti
mov
lds
add
or
lcall
jbe
mov
bound
pop
xchg
lret
mov
push
jle
fcoml
push
addb
sarb
push
inc
imul
mov
fs
lock
adc
or
imul
xchg
xchg
xor
lock
orl
dec
inc
lret
insl
pusha
pop
fmul
and
adc
xchg
or
outsb
push
ss
push
mov
and
mov
ds
adc
adc
aam
xor
or
mov
and
jl
es
mov
xchg
popa
add
pop
pusha
sbb
sbb
rolb
lret
outsb
sub
or
mov
sub
dec
push
outsb
outsb
push
add
adc
shlb
xor
add
sub
stos
jbe
sub
xor
cli
pop
dec
pop
xchg
ret
pop
jl
push
xchg
test
in
sbb
xor
add
fsubp
sbb
dec
enter
movsb
xchg
mov
dec
inc
adc
mov
mov
hlt
add
bound
mov
ret
fmul
pop
push
les
sub
je
xor
pop
dec
inc
or
movsl
aam
adc
xchg
add
pop
xor
ss
cmpsb
cmp
adc
or
dec
sub
dec
or
mov
cs
pop
pop
fs
fsubs
shlb
imul
rorb
or
sar
sti
js
loope
or
dec
clc
les
rclb
mov
jns
dec
or
push
lret
pop
or
outsb
xchg
inc
int
inc
cwtl
loopne
xor
pop
testb
leave
and
jle
or
cmp
data16
sahf
jp
popa
push
push
jg
in
sahf
adc
add
sub
push
les
ljmp
inc
addb
cmp
mov
pop
push
mov
notb
xor
jbe
xor
call
xchg
sbb
aam
dec
roll
jbe
jg
loopne
or
mov
pop
daa
fidivrl
dec
add
dec
out
dec
sbb
cmpsb
fs
or
cmp
nop
add
pusha
adc
sub
pop
mov
push
xor
dec
sbb
roll
mov
xchg
aam
fdivr
adc
jp
push
je
adc
inc
push
or
adc
inc
pop
push
andl
test
data16
push
test
push
xor
aam
xor
pop
push
in
jae
pusha
fsubl
sbb
sahf
data16
mov
pop
adc
sub
loopne
adc
or
push
adc
cs
test
dec
sub
pop
pop
enter
inc
fmuls
jb
enter
sbb
inc
adc
test
orb
mov
pop
in
dec
xor
pushfw
inc
mov
push
adc
xchg
dec
or
jp
test
xor
inc
push
or
xor
rcrb
dec
push
xchg
and
jp
add
pop
loope,pt
shrb
les
insb
dec
add
sbb
shrb
add
xor
push
mov
and
loop
mov
in
fs
adc
pusha
and
mov
lods
loop
pop
add
test
sbb
rcrb
xor
mov
mov
xchg
push
data16
and
dec
sub
inc
add
sub
mov
xor
add
dec
lock
xchg
pop
gs
lods
push
push
xchg
cli
ss
add
add
lret
pushf
sbbb
andb
add
fistpll
cmp
adc
mov
and
iret
cwtl
and
insb
adc
out
adc
inc
xchg
data16
xor
push
rclb
push
add
adc
sbb
inc
pop
add
and
add
and
xchg
push
in
adc
jmp
cld
scas
sub
mov
dec
xor
xchg
dec
call
adc
adc
sbb
mov
add
pop
cmpsb
xor
and
test
hlt
mov
push
sub
es
push
iret
xchg
lock
lds
sbb
into
fcmovu
mov
mov
add
mov
mov
adc
xchg
push
xor
lcall
bound
rcll
sub
into
sti
sbb
int3
jb
sub
and
sbb
dec
pop
inc
or
and
shld
mov
hlt
mov
lds
inc
sub
push
xchg
add
in
inc
lds
lret
in
pop
repnz
dec
mov
jle
mov
push
or
xorb
orb
mov
gs
jmp
sub
sub
add
xor
lcall
or
test
sbb
xchg
xchg
dec
push
push
hlt
cld
add
fs
stos
push
add
ss
loopne
ficoms
add
inc
mov
sahf
mov
jp
dec
call
pop
or
sub
pusha
or
sbb
push
and
or
mov
nop
xchg
cld
int3
mov
dec
test
fisubs
push
mov
adc
add
or
and
ss
inc
push
dec
add
mov
ret
pop
sbb
mov
call
data16
std
adc
hlt
or
inc
adc
in
inc
inc
mov
sub
adc
repnz
cwtl
mov
pusha
or
mov
mov
mov
aam
or
xor
call
xchg
adc
and
idiv
and
or
adc
insb
std
or
cs
push
inc
and
dec
mov
in
call
add
lds
sub
pop
xor
es
jbe
rorb
aam
mov
push
aam
mov
push
mov
pop
or
mov
mov
jg
dec
test
dec
movsb
sbb
dec
pop
push
and
stos
jle
lcall
or
shll
test
xchg
push
mov
inc
mov
les
xlat
insb
int3
into
xchg
add
dec
pop
ret
sub
add
and
fcoms
or
add
es
movsb
enter
test
pop
add
inc
dec
inc
pusha
data16
pusha
cmp
pusha
popl
mov
xor
dec
dec
lret
mov
jecxz
pushf
ds
adc
add
sub
jo
inc
arpl
xchg
xor
jp
nop
inc
js
sbb
adc
fmuls
add
aam
and
lcall
neg
dec
adc
add
push
adc
pop
cwtl
sub
and
xchg
or
rorb
adc
add
dec
js
jp
es
movsb
addl
dec
inc
sub
lret
push
add
shlb
loop
cli
adcl
add
scas
and
or
push
or
xchg
mov
fimuls
cwtl
adc
sbb
movb
xor
sub
push
xchg
dec
cmp
adc
jb
sbb
inc
jp
sub
fiadds
ret
rorb
cmp
dec
add
or
cmpsb
test
inc
mov
xor
add
pop
jle
cmp
cltd
movsb
jle
lret
add
xor
mov
or
sarb
or
push
cs
mov
int3
test
into
in
stos
dec
or
insb
mov
dec
test
xchg
sub
nop
or
mov
pop
cli
dec
jl
lcall
gs
sub
push
notb
push
push
push
and
cmp
pusha
mov
or
inc
pop
or
stos
xchg
push
push
xchg
pop
jl
adc
push
or
int3
gs
cli
mov
mov
adc
sub
lcall
xor
mov
dec
popa
dec
cltd
mov
repnz
shrl
cli
aaa
add
and
mov
push
add
push
cli
data16
repnz
scas
or
in
outsb
sbb
sbb
shlb
inc
loop
pop
lret
push
add
std
cwtl
popa
add
sbb
push
push
cmp
nop
xor
cmpsb
add
je
xor
rorl
rorb
mov
out
or
adc
push
je
or
sbb
outsb
push
add
sbb
aam
adc
cmp
pop
add
pop
dec
cwtl
adc
sbb
lea
test
mov
jle
xor
add
movsb
push
in
dec
stos
arpl
jno
and
in
xchg
xorb
pushf
push
data16
out
dec
sub
not
and
and
mov
pop
mov
sbb
sbb
gs
pop
test
cmp
les
adc
shll
dec
add
adcl
pop
fmuls
xor
or
inc
bound
orb
fidivl
faddl
jecxz
ret
inc
rorb
mov
adc
sbb
sbb
das
call
fs
cmp
push
xchg
ret
sub
or
sbb
pusha
iret
mov
out
and
and
mov
push
adc
sub
cmp
push
test
bound
add
xor
adc
add
leave
loopne
push
pop
sbb
adc
inc
in
xor
xchg
add
add
push
fwait
mov
add
mov
imul
xchg
data16
adc
push
adc
test
test
mulb
xchg
mov
rclb
daa
push
cmp
movsl
add
test
dec
xchg
pusha
jo
bound
jne
enter
inc
and
mov
xor
add
adc
mov
add
push
add
lcall
cwtl
mov
outsb
dec
and
cmpsb
mov
pop
jl
shlb
xor
adc
shrl
sbb
lods
and
push
lret
out
shlb
lods
popa
sub
test
and
push
imul
add
aam
jge
and
dec
ret
xor
sub
in
out
cwtl
dec
push
data16
sbb
xchg
or
js
cmpsb
push
xor
dec
mov
xor
adcb
pop
es
fiadds
insb
add
adc
add
call
imulb
add
adc
mov
adc
addr16
lcall
ss
or
mov
adc
dec
mov
lock
pop
lcall
add
push
sub
and
sub
rorb
and
xor
lock
pop
rcll
mov
pop
adc
push
adc
idivb
sbb
xchg
push
mov
push
and
ret
adc
add
test
sbb
ret
lock
nop
or
or
aam
push
or
xor
cmp
mov
and
mov
jp
repnz
popa
outsb
ljmp
or
xchg
push
mov
push
dec
sub
test
pop
add
es
addb
pushf
push
mov
pop
lcall
or
mov
adc
mov
movsb
adc
sbb
xchg
xor
or
mov
data16
adc
add
lret
inc
add
pop
or
dec
push
sbb
inc
xor
add
jbe
cmp
xor
dec
in
mov
enter
popa
mov
xchg
in
shrb
xor
add
push
mov
stos
xchg
dec
sub
lds
push
cmp
ret
int3
xchg
xor
aam
push
cmpb
addb
xor
jp
into
and
cwtl
add
test
sbb
push
dec
add
adc
or
jmp
dec
xor
rcrb
dec
sub
in
sub
or
je
add
int3
add
mov
and
and
dec
add
mov
in
add
clc
mov
adc
rcrl
loopne
xchg
sahf
les
pop
push
xchg
cvttps2pi
jae
inc
lea
xchg
jno
or
aas
repz
pmuludq
js
ljmp
xchg
test
and
or
push
cmp
sub
nop
mov
rol
loop
fstl
pushf
std
pop
pusha
dec
mov
rcl
jl
outsl
ficompl
add
pusha
jp
ss
xor
xor
xchg
pop
pop
xor
inc
in
cwtl
or
andb
push
jae
dec
mov
test
and
xchg
mov
test
mov
sub
mov
hlt
popa
and
sbb
orb
mov
in
or
pusha
add
test
lret
add
push
es
lret
jne
pop
lods
xchg
xchg
hlt
repnz
pusha
mov
and
xor
xorb
dec
lret
push
mov
xor
sub
je
test
insl
ret
or
mov
out
jle
cltd
sub
cmp
ret
mov
dec
or
mov
mov
xchg
mov
inc
sub
test
ret
dec
out
bound
mov
push
mov
fists
lret
or
rcrb
mov
cmp
cmp
mov
or
adc
sbb
mov
cld
add
test
loopne
ret
push
adc
push
add
push
ret
cltd
lcall
inc
push
aam
mov
lret
pop
mov
sbb
xor
nop
shlb
push
jg
cmpb
jbe
nop
inc
jl
and
sub
loop
xor
adcb
and
push
add
inc
or
push
mov
adc
add
add
mov
daa
or
push
cwtl
push
adc
jne
nop
xor
and
mov
jb
and
xor
or
jbe
data16
inc
sub
rcrb
pushf
xchg
pusha
cmp
rolb
pop
jecxz
rorb
testb
aad
dec
or
ds
mov
mov
into
mov
cmpsb
addb
inc
push
xchg
dec
cltd
call
pop
pop
xor
push
scas
ret
or
dec
sub
lock
jo
push
enter
gs
pushf
int3
push
mov
dec
push
push
ret
fs
outsb
in
orb
jl
iret
xchg
sahf
mov
pop
jbe
shrb
int
shrb
fisttps
adc
cwtl
addl
cmpb
dec
fs
in
stos
sbb
xchg
rclb
xchg
ret
mov
inc
cmp
adc
nop
and
or
mov
mov
cmp
pushf
add
pusha
sub
sbb
in
add
or
and
adc
add
cmp
add
dec
sbb
fadds
push
notb
dec
mov
clc
dec
or
lods
inc
stos
cs
dec
ds
daa
dec
inc
pop
mov
or
xor
dec
mov
adc
je
xchg
lret
add
nop
jle
ret
movsb
les
and
dec
je
pop
push
pop
aam
ljmp
filds
push
les
jmp
lcall
xchg
inc
pop
push
lods
jle
pop
push
test
xor
fdivrl
or
dec
fstl
sub
xor
adc
xchg
inc
adcl
inc
adc
cmp
push
jae
lock
push
lret
sbb
xor
jae
push
or
test
inc
sub
std
xchg
mov
and
xor
sahf
sub
hlt
gs
adc
scas
jo
or
xor
ret
push
pop
rcrb
mov
pusha
inc
test
push
ljmp
pop
pushf
and
shll
cmpl
pop
or
clc
call
mov
out
sub
movsl
add
dec
mov
xchg
mov
add
pop
cltd
pop
or
and
or
add
mov
leave
mov
sub
pop
adc
sub
add
add
add
sub
ret
adcb
shlb
mov
repnz
mov
push
mov
and
mov
pusha
sub
sbb
dec
and
sub
movsb
sahf
cmpps
jp
popa
mov
jne
sar
ss
leave
mov
scas
add
hlt
or
ljmp
test
xor
repz
sbb
xorb
loopne
inc
popa
xchg
pop
adcb
pop
push
mov
inc
xor
dec
cs
mov
push
add
or
add
inc
pusha
imul
int
push
and
pop
enter
dec
sub
adc
xchg
subb
dec
mov
xor
sahf
sbbl
add
jle
xchg
push
mov
xor
sbb
push
jae
xor
test
call
jmp
push
aaa
push
or
pop
sub
xchg
sub
or
ret
pop
inc
pop
push
mov
insl
mov
jo
mov
or
xchg
popf
jb
outsb
push
arpl
pop
adc
and
and
cmp
lods
add
cs
and
add
and
adc
out
and
and
into
jo
dec
push
popa
push
aam
movsb
inc
or
adc
push
dec
dec
pusha
adc
or
jle
stos
and
mov
shr
movsb
jbe
push
call
sub
nop
push
adc
lods
xor
dec
dec
mov
imul
mov
shrb
stos
aam
nop
push
mov
dec
enter
pop
push
dec
pop
sahf
mov
test
push
dec
orl
push
popa
pusha
loop
push
mov
dec
test
push
les
pop
mov
add
mov
je
addb
xchg
xchg
pop
je
inc
dec
pushf
adc
sbb
mov
movsl
xchg
adc
xor
cmpsb
adc
or
sbbb
pop
push
int3
add
xor
dec
and
cwtl
push
pop
mov
test
or
add
cs
jbe
cmp
push
notb
adc
push
push
enter
pusha
pop
and
push
roll
push
cmp
clc
lcall
mov
cmpsb
xor
sarb
popa
popl
mov
dec
cmp
add
and
mov
ss
sub
enter
sti
and
je
loop
adc
add
fisubrl
lea
movsl
add
and
dec
es
sub
push
or
pop
jbe,pt
xchg
inc
or
xchg
nop
or
mov
add
mov
cmpsb
xor
nop
mov
xchg
adc
and
dec
es
mov
xor
xor
cmp
sub
sbb
arpl
test
add
nop
rcrb
lret
xor
or
inc
inc
dec
push
or
push
hlt
and
add
insl
mov
xchg
mov
or
lret
add
mov
shrb
popa
add
inc
lods
pop
clc
cmp
test
add
push
push
xor
test
in
test
pop
pop
cs
les
xorb
mov
pop
inc
mov
mov
pop
jmp
sub
js
sub
stos
add
in
cmpsb
add
cwtl
pop
in
add
dec
clc
push
fisubl
cmp
cmp
dec
sbb
push
les
stos
add
push
std
adc
push
loopne
pop
and
mov
or
notb
xchg
mov
popa
bound
leave
jbe
dec
jo
dec
call
sbb
jp
and
add
push
mov
lret
mov
out
fistps
insl
and
xchg
and
or
cwtl
int3
jno
xchg
ret
loopne
int3
mov
cwtl
xchg
add
pop
mov
add
add
xchg
dec
js
and
jne
les
mov
add
and
and
mov
sbb
lods
or
push
mov
add
jl
pop
and
push
mov
push
enter
add
adc
leave
adc
into
xor
add
inc
add
inc
mov
test
pushw
xchg
dec
inc
xchg
movsb
or
dec
push
inc
cltd
pop
lcall
push
iret
loopne
sahf
mov
xchg
pushf
ret
dec
push
and
inc
lock
adc
out
lock
jl
xchg
in
sub
jp
adc
cwtl
adc
or
xor
lcall
lret
adcl
das
xchg
cmp
add
adc
test
push
daa
enter
inc
data16
notb
lods
or
dec
movsb
je
sbb
mov
pusha
and
data16
fiadds
push
xchg
push
jo
dec
cs
push
orb
dec
data16
dec
xchg
shr
lret
enter
into
sub
adc
mov
data16
aam
push
push
and
pop
adcb
sub
lods
push
nop
inc
movsb
and
lcall
jg
insb
xchg
dec
add
lcall
aam
or
add
loop
cld
in
push
cltd
dec
push
into
out
mov
cmp
push
mov
push
inc
or
push
and
in
fsub
rcr
jmp
hlt
fisttps
mov
adc
add
add
dec
std
pop
es
addl
fcmovb
stos
add
lds
data16
pusha
aam
push
out
xor
xor
cwtl
mov
inc
sub
jle
gs
es
mov
mov
sar
les
add
push
flds
pusha
es
mov
lret
ljmp
adc
into
or
push
add
stos
aam
sub
incb
sbb
sarl
mov
xor
adcb
enter
sub
int3
dec
dec
cli
fadds
add
cmpsb
cmp
push
xor
jb
add
add
addb
mov
pop
add
mov
adc
ss
mov
xor
mov
lods
adc
inc
ljmp
scas
mov
mov
pusha
and
xchg
rclb
fmul
adc
adc
div
in
rolb
push
daa
jmp
sbb
cmp
add
dec
test
dec
jecxz
nop
jl
mov
pop
test
pop
into
push
lret
repnz
notb
mov
dec
inc
cmp
jl
mov
test
enter
xor
cmp
dec
mov
and
mov
and
xor
or
cltd
inc
push
xor
mov
movsl
nop
shll
sub
inc
xor
mov
dec
cwtl
cmp
and
pop
mov
or
je
outsb
or
lret
enter
and
lretw
cli
push
mov
data16
inc
mov
hlt
mov
shrb
inc
mov
mov
push
add
addl
pop
sub
sub
mov
adc
or
test
add
arpl
shrl
jb
lods
xor
mov
cmp
add
cmp
test
cmp
dec
or
inc
fimuls
into
in
dec
dec
mov
jb
mov
ret
ret
jbe
int3
nop
push
cmp
js
add
add
sub
mov
inc
inc
or
out
xor
or
xchg
jbe
out
sbb
inc
sub
xor
add
mov
push
xchg
push
ds
lock
sbb
ds
lret
ret
and
add
daa
push
or
lcall
sbbb
dec
or
dec
mov
adc
lock
and
jg
addb
or
sub
inc
pop
sbb
xchg
sub
mov
test
addr16
test
ljmp
mov
cmp
jp
popa
aaa
mov
push
cwtl
inc
inc
cmp
js
inc
xor
ret
adc
sbb
das
daa
mov
int3
outsb
in
add
dec
adc
adc
lret
lcall
sarb
cmp
scas
or
sub
inc
fs
ljmp
mov
cs
fs
test
push
inc
dec
sbb
mov
dec
mov
inc
sarb
dec
call
es
add
mov
sub
and
pusha
pop
sbb
and
out
pushf
addl
mov
mov
sub
bound
or
pop
inc
jo
add
mov
fs
loopne
sub
inc
mov
shlb
xchg
sbb
out
xor
inc
loop
je
mov
lea
lret
push
adc
add
inc
inc
sub
xchg
test
mov
sbb
mov
test
testb
xor
inc
add
mov
sbb
js
movsb
add
push
scas
out
popa
mov
adc
enter
pop
and
xor
sbb
or
pusha
mov
adc
cli
add
add
add
push
je
adcb
jbe
add
xor
pusha
data16
ret
or
aaa
test
jg
pop
data16
rcll
xor
and
cmp
adc
push
sub
or
je
rorb
sub
adc
push
mov
xorb
cmp
test
std
mov
testb
pop
or
movsb
xorb
cwtl
mov
pusha
inc
push
cmp
sub
mov
aaa
popa
xchg
lret
inc
rorb
aad
push
or
inc
mov
aam
sbb
push
rclb
es
or
fmull
dec
pusha
inc
cmp
movsl
push
push
ret
xor
add
xchg
cmp
into
pop
cmpsb
xchg
sub
inc
xchg
xchg
inc
in
fimull
push
mov
mov
inc
loop
add
sbb
push
cmp
or
test
clc
sub
shrb
enter
sub
inc
inc
sbb
add
mov
aaa
cld
dec
inc
adc
js
mov
fdivl
push
and
inc
push
push
inc
dec
enter
es
cmpsb
mov
adc
mov
adc
insb
shl
in
and
rolb
cmp
cmpsb
adc
jo
gs
cwtl
or
xor
ret
cmp
pusha
mov
or
inc
ret
push
es
out
aam
xor
jo
call
and
testb
add
in
lock
aam
fisubrs
xor
xor
dec
imul
jp
xor
fsubrl
cmc
andb
add
push
lock
test
jl
sbb
inc
jo
add
cwtl
sbb
and
inc
rol
push
loopne
inc
add
adc
cs
cwtl
add
inc
call
rclb
sbb
cwtl
ret
inc
xchg
out
mov
pusha
xchg
add
pop
iret
shrb
shlb
mov
call
mov
xor
adcl
enter
push
ret
movsb
and
sub
push
add
xchg
jp
out
and
push
sub
xchg
inc
or
push
add
xorl
adc
push
inc
pop
xchg
nop
lret
mov
adc
mov
or
bound
jp
lcall
pop
rcrb
mov
mov
push
push
arpl
jp
sbbb
xchg
in
data16
mov
in
cwtl
pop
les
pop
inc
mov
incb
in
hlt
mov
ret
push
test
mov
or
or
fs
sub
push
push
jge
push
popf
mov
lret
xchg
sbb
in
mov
push
dec
xor
or
inc
sub
sbb
ljmp
xchg
in
add
add
xor
or
or
xchg
jle
adc
andl
in
dec
xor
pop
adc
lock
call
sub
in
lret
adc
cwtl
mov
and
les
xor
jb
mov
push
insl
outsb
inc
and
pushf
dec
mov
adcb
inc
inc
mulb
mov
cmpsb
adc
sub
sahf
pusha
add
xchg
fdivs
xor
ret
add
roll
testb
push
jae
dec
inc
sub
cli
xchg
and
inc
test
decb
push
mov
push
mulb
xchg
ljmp
inc
sbb
ss
push
inc
hlt
mov
and
add
push
xor
add
jae
or
mov
sbb
xchg
push
add
push
add
pop
test
orl
lahf
pushf
mov
clc
xchg
aaa
mov
ret
popa
enter
and
subb
xchg
testl
sbb
push
sahf
mov
ss
cmpsl
popf
add
insb
or
sub
lret
rcll
scas
xorl
inc
push
adc
in
cmp
mov
inc
mov
mov
inc
cmp
add
xchg
mov
add
xchg
adc
outsb
sub
inc
or
pushf
mov
jo
xor
scas
fisttps
bound
mov
mov
pop
dec
das
dec
or
xchg
and
push
mov
mov
and
shrb
roll
loopne
les
call
fsubr
inc
dec
insb
leave
inc
lret
and
test
inc
aam
jnp
or
add
lret
les
push
aam
sbb
mov
cwtl
clc
and
or
xor
adc
sahf
cmp
mov
cmp
addb
sbb
cmp
rorl
mov
inc
mov
push
push
or
push
fwait
xor
or
add
and
data16
clc
mov
in
pop
mov
jp
loopne
push
lret
lods
daa
ret
sub
pusha
mov
or
adc
mov
cltd
inc
or
add
push
and
push
sbb
jo
or
imul
scas
fidivs
push
inc
es
push
mov
cwtl
mov
xor
dec
pusha
enter
or
mov
or
ficomps
pop
subb
ret
cmp
adc
xchg
popa
jo
fwait
lods
xor
inc
dec
in
clc
test
je
arpl
xlat
roll
test
mov
adc
in
jl
test
or
and
pop
inc
ds
test
mov
mov
xchg
aam
fs
cwtl
adc
cmp
int3
mov
cmp
cmp
test
lods
inc
test
inc
mov
dec
jo
sub
pop
loopne
mov
or
and
dec
or
cwtl
dec
xor
xchg
lret
add
add
cmp
test
repnz
dec
push
push
outsb
pusha
filds
data16
push
cmp
or
mov
or
pop
hlt
mov
xchg
dec
push
mov
mov
xchg
add
dec
cmp
sub
lcall
xor
jecxz
fcoms
addb
pop
push
sahf
xor
and
lcall
xor
into
insb
pusha
fsubrs
rcrb
sahf
dec
repnz
int3
dec
add
mov
in
adc
or
lret
cwtl
adc
rorb
dec
dec
jmp
js
sub
pop
or
sbb
mov
xlat
rcl
test
xor
xchg
push
outsl
inc
sbb
adc
fdivs
xor
xchg
add
jg
xchg
and
and
sahf
xor
pop
subb
xor
pop
sub
mov
in
cmpsb
sti
mov
out
into
testb
insb
dec
insb
call
jo
cmpsb
aam
add
xchg
es
dec
inc
cwtl
test
shlb
push
sub
add
push
hlt
out
cmpsb
pop
rclb
aam
cwtl
popa
pop
jb
mov
xchg
mov
std
add
and
test
inc
and
mov
dec
xor
adc
dec
or
lods
add
gs
cmp
dec
push
dec
sbbb
xor
bound
add
sub
sbb
mov
add
shlb
pop
push
mov
scas
insb
push
or
into
into
pop
ret
add
xor
mov
mov
xor
cmp
loope
xor
dec
add
stos
mov
addb
nop
stos
lock
movsb
inc
adc
and
mov
dec
add
inc
lods
or
loopne
add
and
or
push
dec
and
pop
shlb
nop
push
fidivl
add
xchg
rcl
js
push
mov
dec
mov
cmpb
dec
popa
dec
bound
out
ret
pusha
bound
mov
push
push
or
push
push
add
in
xchg
lcall
inc
add
cmc
or
mov
dec
loop
pusha
out
jo
lods
shlb
cmp
ret
cmpsb
mov
decb
jp
popl
sub
and
or
repz
jle
pop
mov
add
push
lcall
ljmp
pop
aam
lcall
push
mov
and
or
ret
loope
int3
std
lds
and
sub
dec
push
imul
and
jb
add
jb
js
xor
mov
pop
loope
sub
and
push
aam
xor
sub
mov
andb
push
jbe
mov
es
xchg
adc
rclb
sub
enter
push
inc
movsb
nop
bound
adc
add
int3
xchg
movsb
cs
add
push
pop
outsb
pusha
hlt
and
or
mov
mov
test
test
gs
xor
add
sahf
or
imul
ds
inc
call
mov
fsubrl
pusha
xor
cmp
pop
sub
inc
mov
sub
loopne
xchg
cmc
or
sub
add
xlat
inc
fdivrl
pop
mov
divb
inc
pop
cmp
add
jb
xor
add
lock
enter
jb
mov
jl
mov
loopne
sub
je
jno
push
mov
mov
out
and
dec
mov
or
pop
dec
es
add
rorl
outsb
xor
outsb
add
push
cs
fimull
add
repnz
sbb
rcrb
dec
sbb
mov
mov
add
mov
lea
or
add
add
mov
les
pop
movsb
add
rcl
mulb
fadds
xor
cmpsb
push
subl
xchg
mov
xor
xor
mov
fmuls
inc
shr
pushf
cwtl
sub
or
jl
roll
cmp
xor
ret
inc
icebp
xor
pop
jb
inc
cmp
mov
dec
andl
add
fsubrs
mov
stos
fmul
lock
and
dec
add
cmpsb
cmpsb
sub
add
and
aam
lods
sub
dec
push
or
xor
mov
call
dec
xlat
sahf
ret
js
sub
lds
cvtdq2ps
xor
cmp
xor
shl
pop
rolb
pop
fwait
push
in
jle
xchg
lods
adc
sub
sbb
movsl
cmp
xor
or
mov
push
push
sbb
cmpsl
mov
test
add
xor
push
test
dec
cld
xchg
xchg
pop
outsb
cmp
dec
inc
mov
loop
mov
mov
mov
and
stos
hlt
movsb
or
shlb
xchg
push
sahf
push
xchg
add
lret
add
and
sbb
sbb
pusha
jo
sub
fiadds
push
int3
std
test
adc
mov
sti
add
dec
loopne
sub
inc
and
test
or
and
inc
lock
mov
clc
test
add
pop
xor
or
xchg
or
shl
out
fidivl
pop
adc
ss
push
xchg
stos
add
lods
push
fildll
test
in
xor
sub
dec
inc
push
cmp
add
adc
push
add
int3
insb
ret
call
push
js
sbb
pop
push
or
lock
mov
out
inc
sub
push
pop
adc
aad
leave
repnz
addb
lock
js
and
add
adc
loope
stos
xchg
aam
sub
or
push
add
adc
add
test
mov
sahf
xor
add
or
mov
adc
fiadds
sbb
insb
test
xor
xor
push
mov
xlat
xor
adcb
mov
mov
scas
pushf
aam
mov
pushf
sbb
orb
mov
add
in
ficoml
sbb
sub
mov
mov
and
xchg
inc
sub
and
dec
loop
sbb
mov
xor
cmp
out
adc
sub
mov
push
pop
jo
xor
fs
cmp
adc
test
adc
cmpsb
sub
adcb
mov
or
int3
andb
push
or
mov
adc
push
xchg
mov
nop
faddl
sub
push
push
rolb
xor
iret
dec
pushf
sbb
mov
dec
ficompl
push
cs
dec
and
mov
xor
jle
xor
or
add
dec
movsl
test
add
popa
adc
out
lock
lods
dec
mov
loopne
and
push
dec
cld
adc
xchg
xor
add
dec
sub
xchg
pushf
pusha
clc
movsl
mov
and
cmpb
add
mov
and
dec
in
out
push
je
adc
pop
mov
stos
xchg
or
adc
enter
pushf
adc
pop
add
dec
mov
xor
out
fsubrs
fmuls
dec
cs
sahf
test
movntps
pop
mov
xchg
adc
inc
push
jne
or
fs
jl
dec
mov
les
pusha
bound
iret
push
add
add
and
jno
shlb
xchg
xchg
sub
push
sub
pusha
lret
fistl
sub
pusha
xor
and
movsb
push
fcoml
inc
adcl
pop
loopne
je
lods
out
repnz
int3
add
adc
xor
dec
stos
add
dec
into
add
mov
in
sahf
xor
xchg
xor
dec
in
cli
adc
mov
pop
push
addb
les
ss
jb
add
addl
rcll
shrb
xchg
add
sahf
inc
sub
call
mul
in
xchg
inc
and
push
into
or
and
lods
fwait
or
or
adcl
loop
xchg
rcll
lcall
push
int3
pop
jo
es
nop
dec
call
sbb
ss
scas
inc
imul
pop
adc
lods
sti
add
enter
dec
lret
pop
addb
ret
cmp
or
sarb
sub
jo
int3
sbb
lret
dec
inc
mov
cmp
xor
test
in
push
mov
add
mov
inc
mov
int3
jo
movsb
ljmp
jle
sbb
inc
cmp
xor
cmpsb
pop
or
pop
adc
adc
or
adcl
pop
or
inc
or
lcall
push
aam
add
pop
push
adc
mov
jb
insb
js
pop
xor
loope
xchg
pop
xor
push
pushf
movsb
repnz
jb
sub
mov
adc
out
xor
push
push
mov
xor
lret
adc
mov
les
xchg
push
cmp
adc
inc
mov
dec
adc
pop
inc
insb
or
nop
leave
pop
push
mov
xorb
ljmp
or
fwait
out
xchg
inc
popa
and
inc
test
or
sub
and
and
mov
test
add
inc
nop
and
es
mov
push
or
push
sbb
jb
dec
shll
rolb
inc
rol
mov
push
dec
xchg
movsb
test
arpl
bound
mov
xor
pusha
mov
js
clc
aam
or
sbb
enter
push
nop
or
mov
rorb
and
xor
dec
mov
push
sub
icebp
dec
pusha
aam
pusha
adc
mov
inc
lcall
add
xchg
cs
ret
fdivl
xchg
mov
push
dec
xor
push
cltd
cmp
pusha
sub
mov
lods
bound
outsl
sbb
inc
sbb
or
inc
and
jb
data16
lcall
sbb
insl
dec
mov
inc
loop
lret
adcb
fs
hlt
mov
and
push
push
xchg
out
xor
adc
xor
add
aaa
enter
or
es
cltd
jb
pushf
pushf
mov
jno
dec
xchg
movsb
push
inc
and
dec
add
xor
cmp
push
mov
jbe
clc
push
adc
mov
add
and
push
add
call
in
leave
sub
dec
dec
sbb
int3
mov
xchg
jp
add
dec
mov
aam
or
in
out
push
xor
popa
nop
loop
fcmovb
mov
nop
mov
data16
dec
sbb
add
mov
adcb
jo
mov
jg
and
es
lods
arpl
clc
pusha
lret
fwait
adc
jmp
jbe
inc
mov
sbbb
pop
sub
es
push
inc
test
pop
push
sbb
and
jb
add
lret
inc
insb
pusha
cwtl
mov
sbb
out
call
push
inc
cwtl
inc
pusha
push
add
iret
cmpsb
and
mov
in
dec
add
xor
add
push
or
adc
sbbl
sbb
sbb
lret
in
mov
test
and
adc
movsb
and
in
addb
cmp
mov
clc
cmc
es
pushf
mov
sub
hlt
mov
mov
inc
insb
insb
pop
cs
subb
cs
cld
xor
jl
or
xchg
sbb
cwtl
jb
mulb
xchg
shl
mov
pushf
push
and
pusha
inc
push
sub
push
xor
es
test
add
add
movsb
shrb
sub
sub
lret
cmpsb
push
xor
xchg
data16
sarb
adc
popa
inc
sub
loope,pn
mov
mov
cmp
pusha
jo
pushf
pop
add
lea
push
mov
and
lods
add
xchg
movsb
je
rol
je
or
pushf
dec
test
sbb
fnstsw
popa
pop
pop
clc
test
pop
shl
subb
inc
xchg
rorb
xor
fdivrp
push
and
les
sub
enter
inc
movsb
jl
xorb
bound
movsl
dec
data16
xchg
or
xor
call
or
loope
cld
cld
xchg
or
push
inc
pop
notb
push
and
negb
dec
int
xchg
push
je
clc
sti
fidivrs
movsb
xor
pop
or
sbb
pop
data16
and
and
xchg
pop
adc
nop
mov
mov
push
mov
test
dec
xor
fcoml
or
dec
je,pn
cwtl
insb
or
es
or
cmp
fs
mov
push
adc
adc
xchg
xor
lock
add
adc
fistl
pop
adc
shlb
jle
ss
popa
mov
rcrb
test
stos
push
dec
add
add
pusha
rolb
mov
xchg
jp
roll
and
or
mov
add
pushf
nop
shlb
add
aam
add
add
sbb
cmpsb
outsb
push
mov
add
icebp
and
out
jmp
inc
inc
or
pop
mov
sub
dec
sub
sbb
imul
dec
aam
cwtl
or
enter
inc
cltd
test
arpl
inc
mov
pop
fs
out
xchg
nop
cmp
mov
hlt
int3
nop
inc
rolb
pusha
pop
xor
dec
mov
jo
repnz
push
insb
test
mov
test
call
or
pop
dec
sbb
sbb
mov
sub
ret
mov
cltd
pusha
or
test
sbb
lock
xchg
add
push
jl
mov
add
xor
pushf
add
inc
sbb
xor
jo
in
xchg
or
outsb
lret
pop
xchg
ss
leave
cmp
jl
dec
or
dec
push
or
push
pusha
nop
push
cmpsb
push
push
ss
js
xor
mov
mov
xor
mov
mov
mov
orb
cltd
or
sbb
xchg
rolb
or
roll
add
adc
dec
cmp
sub
aam
hlt
sub
sbbb
test
pop
adc
loop
lods
loop
ljmp
xchg
lcall
sub
bound
ret
jg
cmp
addb
hlt
dec
dec
cmp
mov
push
ret
mov
rcl
lret
xchg
lock
or
push
push
sub
xchg
inc
adc
xchg
clc
aam
sub
repnz
adc
pop
mov
adc
mov
shlb
mov
insl
sub
and
xchg
inc
lcall
popf
pop
xlat
xchg
shrb
xor
ud0
sub
dec
cmp
imul
mov
ret
mov
fisttpll
dec
add
push
cmpsb
add
jbe
or
inc
push
fstpt
mov
xor
xor
mov
in
sub
pop
add
popf
push
je
aam
jb
or
jno
jp
add
inc
and
orl
sub
das
pop
lods
xchg
mov
or
outsb
scas
push
adc
adc
cmp
jl
pop
out
inc
movsl
push
pop
lock
inc
adc
or
std
jg
fisttpl
test
push
decl
jmp
lods
dec
scas
xchg
adc
or
xchg
rclb
and
mov
subb
andl
jno
xchg
call
sub
dec
push
in
xchg
push
adc
sub
add
sbb
xchg
inc
sbb
lods
mov
shlb
xchg
cmc
lret
xchg
cmp
dec
lods
add
push
dec
cwtl
sbbb
xchg
push
mov
shlb
add
and
xor
inc
add
xor
mov
mov
loopne
lcall
and
xchg
mov
add
ficompl
fsubp
and
bound
lock
add
pop
xchg
mov
jle
popa
rcrw
sub
cmp
or
divb
sahf
sbb
loopne
dec
outsb
or
mov
and
mov
and
cmp
mov
stos
popf
sahf
dec
sub
inc
fbstp
test
aam
bound
bound
or
pop
adc
pop
fisubrl
nop
xor
dec
sbbb
and
xor
jne
add
adc
insb
adc
ds
xchg
sub
clc
jp
sti
mov
sbb
push
cmp
or
movsb
inc
sbb
mov
loope
add
adc
sbb
idivb
dec
mov
mov
dec
dec
or
sahf
xor
jne
je
or
xchg
mov
dec
xchg
adc
mov
inc
cmpb
nop
jg
fildl
in
test
or
add
lret
push
inc
add
enter
xor
push
rorb
fiadds
rolb
inc
sub
mov
mov
loope
push
adc
xor
scas
pusha
sbb
or
call
push
cmp
and
pushf
xchg
rcr
or
pop
aam
adc
or
and
adc
rorb
andb
add
mov
or
rorb
mov
pushf
push
mov
jb
stos
test
jbe
test
cmovb
ljmp
aam
cmpsb
xchg
inc
testb
insb
test
mov
pop
mov
mov
push
test
insb
mov
cwtl
lock
dec
iret
ss
cwtl
xor
or
scas
cmpsb
xor
mov
orb
xchg
dec
inc
lods
enter
or
dec
sbb
or
mov
outsb
adc
adc
adcl
cwtl
mov
idivb
cmp
cmp
and
ficoms
inc
insl
and
in
push
and
fists
dec
push
sarl
push
mov
sub
push
mov
mov
dec
test
mov
imul
xchg
popa
dec
push
sahf
push
xor
and
arpl
sbb
pusha
es
and
push
jo
mov
les
xor
sahf
mov
and
cltd
or
fwait
adc
and
jo
xor
jb
xchg
faddl
xchg
loopne
stos
test
in
es
adc
test
loopne
push
pop
add
ljmp
xchg
shrb
add
or
cmp
dec
pop
cli
and
sbb
dec
add
mov
cmp
push
or
xor
decb
mov
data16
mov
pop
or
jo
and
pusha
rolb
cmp
cmp
add
dec
xchg
sub
adc
cmpsb
mov
add
inc
pusha
mov
mov
or
adc
pop
arpl
add
stos
fisubs
mov
pop
or
dec
pop
dec
into
push
xchg
inc
inc
xor
mov
adc
sub
pop
aam
or
je
bound
add
push
push
mov
and
mov
and
jb
and
dec
mov
add
mov
or
loopne
xchg
or
leave
bound
adc
xchg
pusha
dec
add
rcll
test
cmp
subl
mov
xor
sbb
mov
sbb
enter
and
add
bound
cltd
int3
xchg
sbb
out
lods
inc
aam
jp
cmpsl
sti
mov
sarb
inc
inc
and
adc
test
lods
adc
or
leave
add
mov
sub
inc
pop
xorb
mov
mov
mov
or
enter
mov
xchg
push
cmp
add
js
nop
leave
cld
call
cs
and
in
sub
and
nop
and
pop
andb
cmp
and
test
es
stos
orb
add
popa
xchg
cwtl
rolb
aam
push
adc
xchg
leave
adc
xchg
push
mov
jp
xor
push
mov
add
test
ror
xchg
cs
add
jle
lea
add
push
or
nop
and
dec
push
ljmp
sbbb
sbbb
mov
jne
mov
loop
sub
rolb
in
or
or
inc
mov
cmp
sbb
xor
dec
push
mov
ds
rcll
or
xor
lcall
dec
test
sub
add
mov
ljmp
jp
and
push
aam
test
pop
push
es
popa
xor
sub
rcl
push
jp
lods
sub
and
add
ficomps
xor
push
ret
test
addb
add
or
fisubl
xchg
jle
add
sbb
fcompl
xchg
repnz
jb
xchg
xchg
mov
es
sahf
cmp
add
cwtl
cmp
test
ljmp
add
mov
or
mov
outsb
inc
push
lcall
push
mov
nop
imul
and
or
xor
in
adc
xor
inc
fmull
push
or
and
popa
dec
arpl
mov
add
or
shl
aam
test
arpl
sbb
push
dec
add
pushf
xor
and
cmp
jl
jp
adcb
adc
pop
lcall
mov
push
or
jl
mov
int
add
inc
cmpsb
mov
and
xor
push
adc
cmpsb
rclb
sbb
push
lcall
pop
pop
dec
jno
outsb
xor
xchg
add
mov
and
lock
xor
push
inc
ret
pusha
pop
push
cmp
pop
rcrb
inc
add
sbb
adc
dec
add
rcr
hlt
cmp
cli
std
xor
push
daa
inc
dec
hlt
adc
xor
bound
dec
clc
cmp
push
mov
loopne
jno
lds
sbb
pop
dec
int3
and
rolb
or
and
xchg
pop
les
cs
cmp
adc
sbbb
xchg
add
imul
adc
pop
and
movsl
xchg
inc
outsb
xor
sti
mov
and
xor
shlb
pop
and
shlb
or
sbb
and
cmpsb
popa
nop
add
inc
rol
cwtl
inc
xchg
add
loopne
or
sub
inc
inc
push
add
ljmp
fs
adc
pusha
sub
jo
xor
add
jno
in
cmpsb
or
fdivrl
adc
dec
xchg
add
mov
and
xor
inc
dec
cwtl
jbe
mov
insb
dec
add
sub
adc
andb
and
xchg
jne
add
pop
cmpsb
push
dec
sbb
sub
es
and
in
ss
add
iret
dec
stos
xchg
and
cwtl
or
add
and
aaa
rorl
push
inc
dec
cltd
test
cs
push
push
mov
dec
jg
xchg
adc
rcr
push
cmp
adc
jo
lock
orb
int3
mov
mov
test
into
inc
mov
ret
jp
sub
mov
mov
adc
or
xor
jg
cmpsl
fs
lcall
fistpll
adc
sub
add
add
ret
xor
rol
push
and
dec
mov
lock
add
adcb
add
int3
pop
pop
dec
mov
out
cld
dec
and
je
jbe
dec
lahf
bound
mov
lret
out
stos
mov
pop
mov
xor
sar
jg
or
jns
xchg
imul
xchg
dec
cwtl
inc
lods
mov
inc
xor
inc
loopne
inc
xchg
ret
or
pop
xchg
push
cltd
sahf
pop
gs
sbb
pusha
inc
imul
or
mov
push
pusha
and
mov
aam
pushf
call
gs
cld
out
jne
or
pusha
std
fstps
sbb
adcl
mov
pushf
test
push
pusha
push
add
js
sbb
inc
sub
xchg
mov
dec
xchg
cld
dec
and
les
sub
push
enter
dec
mov
pop
ret
pusha
xorb
dec
adc
fcmovbe
test
sarb
mov
pop
inc
sbb
mov
and
push
hlt
jle
mov
jg
xor
sub
pop
lods
adc
mov
push
push
aam
dec
push
orl
mov
test
adc
sarb
pop
pop
lods
mov
add
jo
and
push
cmpsb
clc
jne
push
push
push
imulb
push
dec
inc
cmpb
mov
xor
and
ljmp
out
adc
leave
cmpsb
movsb
xor
cmp
insb
mov
loopne
push
sub
aam
xor
xor
mov
js
mov
lcall
daa
xchg
adc
cmpsb
push
mov
sbb
push
or
dec
pop
add
pop
scas
pusha
and
mov
aaa
push
xchg
adc
push
jp
call
mov
add
push
orb
movsl
cmp
pop
xor
sbb
or
bnd
jo
pop
xchg
dec
cld
push
inc
dec
arpl
push
clc
or
mov
or
leave
cmp
adc
mov
adc
hlt
aam
roll
pop
les
stos
sbbb
push
xchg
inc
adc
pusha
out
adc
inc
xor
enter
sbb
fnstenv
add
hlt
mov
inc
ret
les
and
add
dec
cwtl
leave
lret
or
and
add
test
mov
fcoms
inc
xor
or
sbb
data16
call
test
ss
das
xchg
rolb
push
push
inc
ss
sub
dec
je
inc
or
add
cmc
cmp
in
and
sub
mov
ret
or
push
test
xor
push
cwtl
pop
push
mov
pop
dec
pop
push
popa
xchg
add
or
and
jbe
shrb
jge
adc
mov
cmp
push
enter
outsl
inc
xor
mov
adc
mov
or
in
dec
xor
jb
stos
cwtl
xorb
aam
cmpsb
popa
jo
inc
xor
test
sbb
clc
pop
adc
sbb
xchg
xor
inc
call
mov
sub
test
aad
mov
or
xchg
sbbb
jo
add
xor
xor
xchg
xor
lcall
and
add
lock
adc
repnz
subb
push
fs
pop
and
adc
mov
lods
adc
push
hlt
adc
or
inc
insb
js
lock
xor
add
add
test
xchg
cwtl
lods
sub
sti
loopne
add
jo,pn
shrb
mov
sbb
pusha
loop
pop
mov
pop
notb
fs
dec
push
pushf
rorb
inc
inc
cld
cltd
pop
jecxz
xchg
les
xor
popa
cmpsb
int3
addb
inc
test
mov
bound
xchg
xchg
dec
in
adc
jns
sbbb
dec
rol
pusha
and
mov
mov
or
cli
or
ret
inc
fdivl
xor
addb
loop
mov
shll
adc
push
push
xor
inc
sub
xchg
bound
and
push
ret
mov
and
mov
js
inc
mov
test
and
add
loop
enter
inc
add
or
insb
rclb
test
inc
mov
push
push
jl
jo
ret
adc
es
pop
or
and
mov
inc
cs
mov
aaa
and
fs
sbb
mov
dec
enter
test
push
add
iret
cmp
aaa
sub
dec
sbb
inc
sbb
out
in
arpl
add
sbb
inc
xchg
push
lcall
test
repnz
movsb
xchg
push
push
sub
int3
ret
jle
adc
mov
imul
int3
jbe
stos
adc
cmp
xor
cmc
adc
inc
subl
outsb
mov
sub
inc
fcomp
jle
sbb
pop
push
dec
push
push
mov
std
add
ret
pop
icebp
stos
jo
inc
xor
add
inc
sbb
dec
xor
push
popa
push
ficoms
jo
mov
adc
add
cmp
mov
sub
adc
xor
add
ss
addb
inc
xchg
sbb
stos
xchg
xor
mov
mov
test
xchg
mov
addb
sbb
jbe
dec
gs
or
mov
or
and
add
loopne
jo
enterw
mov
pop
dec
sbb
push
test
pop
dec
js
jb
pop
gs
pushf
push
or
fiadds
out
cs
adc
add
sub
mov
sbbb
fs
mov
pop
adc
push
push
lods
or
cs
add
add
mov
or
pop
test
pop
test
xchg
or
insb
mov
mov
nop
je
es
xchg
pusha
mov
sub
movsb
push
inc
xor
inc
xor
pusha
sti
aam
push
and
inc
rorb
mov
in
xor
movsb
inc
test
mov
lock
mov
adc
imul
sbb
or
lock
xor
dec
lcall
cwtl
jmp
adc
shlb
add
inc
jno
adc
xor
mov
and
fcoml
fiaddl
les
push
push
stos
push
iret
mov
loopne
lret
push
pop
stos
mov
and
mov
or
ret
or
xor
and
jae
adc
inc
pushf
add
push
insb
and
inc
dec
push
sub
std
leave
adc
inc
dec
cltd
push
rolb
adc
idivb
fiaddl
bound
adc
sub
test
inc
adc
adc
and
test
and
and
rolb
shrb
add
push
mov
sbb
pop
xor
cmpb
adcb
push
push
fsubl
add
or
mov
xor
loop
cli
arpl
adcb
or
es
pop
mov
push
lret
imul
and
fsubrl
in
invd
or
mov
ret
sub
lds
dec
adc
add
push
rcrb
adc
push
mov
push
push
adc
sbb
jmp
adc
mov
xchg
iret
rol
int3
dec
dec
cltd
mov
int
cmpsl
rcl
xchg
movsb
shl
call
loop
adc
es
pushf
test
pop
mov
mov
call
jb
sarb
push
or
dec
sub
inc
and
in
push
cmp
addb
and
cmp
stos
adc
out
mov
dec
inc
cltd
dec
stos
lods
test
adc
sub
inc
sbb
stos
sub
mov
rolb
loopne
sbb
cmp
add
int3
sbbb
push
or
lea
lret
rorl
and
out
push
xchg
xor
xchg
adc
and
dec
mov
in
push
clc
xor
in
call
xchg
mov
and
xchg
inc
xchg
mov
adc
pushf
cwtl
rcrl
aam
imul
orl
testb
cmpb
enter
or
and
dec
loop
insb
cltd
inc
fs
jle
add
xor
cwtl
or
test
xchg
enter
sbb
das
add
add
or
push
lret
pop
jl
repnz
iret
iret
insb
and
out
push
les
xor
in
sarb
inc
cmp
addb
push
xor
push
and
pop
push
ss
dec
add
xchg
outsb
insb
inc
test
popf
ss
inc
mov
pop
push
add
push
adc
xor
es
cmpsb
adc
add
test
sbb
lcall
mov
jo
lcall
leave
and
or
ss
mov
call
sub
pop
sbb
jbe
pop
es
xchg
notl
popf
ret
cmp
in
arpl
and
lcall
rolb
inc
decl
jne
push
imul
adc
mov
lods
xchg
aam
test
mov
orb
daa
add
mov
xchg
inc
xchg
adc
out
sub
and
and
stos
adc
inc
ret
scas
dec
mov
xor
cmpsb
movsb
adc
mov
or
mov
adc
sub
mov
and
jle
or
adc
inc
aaa
je
inc
inc
lods
aam
mov
sub
fs
adc
sbb
scas
add
pop
and
jo
push
add
jl
cs
jb
dec
mov
test
or
rolb
inc
lret
push
mov
and
jb
sbb
inc
test
call
loopne
push
pushf
push
push
insb
xor
cmp
push
mov
mov
adc
mov
mov
ds
push
test
inc
xor
jg
mov
mov
and
lea
leave
pop
or
sub
in
and
pop
js
popf
and
sbb
enter
add
leave
add
aam
sub
mov
and
push
sbb
jo
add
lods
xchg
movsb
adc
jbe
adc
cmp
neg
sub
insb
xchg
dec
push
fidivl
rcrb
mov
cmp
inc
push
push
lods
add
ljmp
cmp
ljmp
ret
sarb
sbb
add
xor
xchg
sti
push
data16
addb
inc
mov
les
inc
adc
and
adcb
add
pop
popa
fimuls
popa
xchg
lock
pushw
iret
adc
out
lock
js
nop
scas
rolb
and
inc
lret
xchg
push
add
and
cli
xor
cwtl
mov
sahf
fsubl
push
in
add
mov
push
mov
shll
iret
mov
lock
rorb
mov
sub
out
push
sbb
dec
xchg
xor
nop
leave
pop
sbb
pop
fiaddl
fidivs
sbb
mov
dec
push
adcl
mov
sbb
nop
or
add
dec
sub
rolb
jg
or
into
pop
jo
outsb
mov
inc
cmp
mov
shlb
fdivl
imul
dec
test
icebp
xor
sbb
ss
sub
xchg
cmp
dec
inc
mov
data16
iret
pop
test
xchg
sbb
xor
xchg
add
shlb
enter
dec
push
sbb
xchg
adc
cmp
je
add
inc
add
push
nop
mov
cwtl
data16
mov
cli
lock
sub
imul
mov
movsb
push
cmp
mov
add
movsl
aaa
fsubs
inc
push
and
ds
inc
push
or
fsqrt
test
lock
and
in
lcall
mov
add
aam
mov
sbb
test
xchg
and
sbb
pop
data16
xchg
mov
add
movsb
insb
inc
mov
push
sbb
cld
mov
loopne
xchg
es
inc
mov
shrb
test
loopne
sbb
in
adc
ret
xchg
pop
andb
pop
xchg
cmp
sbb
scas
lds
jo
or
add
push
xor
shlb
or
loop
imul
adc
es
loopne
outsb
ret
dec
addb
add
sub
addb
cltd
lret
inc
add
leave
push
add
mov
mov
cmp
popf
or
xor
outsb
pop
cwtl
adc
dec
loopne
dec
sbb
loop
cwtl
or
sub
adc
mov
mov
or
mov
test
cmpb
subb
faddl
inc
xor
lock
sub
insb
push
nop
dec
sub
sar
inc
jae
inc
jp
pop
test
test
dec
out
mov
movsl
xchg
inc
cwtl
sub
test
push
and
mov
fs
nop
adc
adc
int3
shlb
addr16
inc
test
stos
dec
addb
dec
add
lods
or
pop
xor
xchg
lods
gs
lcall
push
jb
inc
aam
xor
aas
xor
bnd
or
dec
sbb
add
gs
pop
stos
cs
inc
add
push
ds
or
push
dec
pop
mov
movsb
fnstsw
clc
mov
adc
inc
adc
stc
or
mov
fsubr
scas
add
push
push
out
mov
ljmp
cmpsb
or
add
mov
lods
les
jb
mov
jbe
pushf
push
push
ds
aam
addb
dec
push
loopne
les
add
xchg
dec
dec
mov
jb
dec
sub
adc
push
and
adc
or
ds
fildll
pop
hlt
pop
xor
jl
jb
mov
pusha
pop
or
jo
inc
dec
cltd
incb
dec
dec
xchg
aam
and
shlb
cmp
add
aam
push
adc
mov
loope
fadd
inc
movsb
outsb
inc
sub
sbb
cwtl
je
push
call
rolb
sub
jo
mov
inc
and
jmp
test
pop
push
sbb
add
aam
mov
sbb
ss
or
mov
xor
popl
sbb
mov
sbb
mov
rorb
cli
inc
jmp
adc
cld
sbb
sub
add
bound
orl
repnz
es
add
dec
or
adc
insb
add
rol
push
rcr
adc
add
ret
xchg
sbb
adcl
xor
sbb
or
loope
lret
pop
ss
adc
mov
mov
int3
or
add
pop
shr
adc
ret
es
dec
add
pushf
adc
and
push
xor
adcb
add
push
xchg
sub
rolb
fs
xchg
mov
mov
movsb
inc
adc
adc
push
inc
in
call
jg
xor
or
scas
push
cmp
and
mov
in
add
shlb
inc
adc
mov
sahf
adc
sbb
inc
add
inc
sbb
mov
outsb
aam
faddl
pop
and
ret
pop
sub
data16
adc
push
call
daa
inc
cmpsb
inc
add
and
inc
loope
mov
sub
sbb
or
mov
or
insb
add
ret
adc
rorb
mulb
rcrb
ret
adc
les
xchg
dec
xchg
rclb
jo
add
in
sub
adc
xor
add
push
mov
sub
add
push
xor
ret
ljmp
push
ficoml
hlt
js
add
les
dec
sti
or
pop
fstpt
lock
or
mov
sbb
xor
les
mov
ret
adc
les
data16
inc
xor
je
icebp
and
mov
jg
mov
call
adc
rcll
jne
loope
mov
and
xor
inc
adc
and
orb
in
or
nop
fstpt
rolb
xorb
push
in
dec
ret
add
shlb
push
xchg
push
add
ss
jl
add
stos
cltd
mov
push
sub
mov
xor
cwtl
inc
or
mov
mulb
xchg
dec
fcoms
cmpsb
xor
into
lcall
or
test
mov
sub
mov
outsb
inc
inc
and
jb
or
push
test
dec
inc
test
adc
cmp
or
insb
pushf
push
or
pop
xchg
adc
xchg
ret
mov
mov
subb
xchg
push
inc
dec
outsl
push
cmpb
dec
xchg
sbbb
mov
xor
jle
ret
sub
lret
pushf
andb
sbb
fs
or
push
adc
cmpsl
lock
xor
add
pop
adc
je
les
movsl
mov
aam
data16
inc
and
pop
adcb
jle,pn
sti
shlb
orb
or
pop
pop
pop
push
xchg
lods
loop
ss
inc
lds
adc
dec
in
lcall
jl
sub
dec
adc
pop
stos
mov
sub
sbbl
adc
push
xor
mov
add
xchg
push
adc
test
mov
ljmp
sbb
loope
pop
sub
push
jmp
jne
push
mov
push
call
push
imul
test
filds
filds
xor
not
jl
lea
xor
mov
ret
sbbb
test
mov
es
repnz
xor
ljmp
adc
dec
movsb
or
mov
add
xorb
roll
mov
add
xorb
add
jb
int3
mov
mov
jbe
cwtl
lret
and
sub
pusha
je
aam
or
push
lock
xor
mov
insb
push
mov
add
sbbb
les
test
cltd
inc
pop
call
jecxz
and
out
dec
xchg
mov
inc
mov
add
and
mov
push
shrb
adc
hlt
loopne
mov
int3
nop
adc
sub
faddl
sbb
or
and
xor
pop
es
inc
or
inc
test
xchg
pop
cmpsb
push
leave
hlt
dec
dec
pushf
add
dec
cwtl
or
fimull
roll
in
jp
pop
std
sbb
loopne
jl
data16
inc
sub
test
and
mov
fdivr
mov
mov
push
xor
or
xorl
rolb
sbb
mov
rorb
bound
xchg
push
ret
mov
and
or
cli
shrb
mov
dec
cld
addr16
fwait
loop
or
cld
pop
or
sbb
mov
insb
dec
sbb
xor
sbb
mov
add
push
test
insb
ss
cmp
arpl
test
jp
xor
add
les
popa
sbb
dec
push
repnz
xor
xchg
push
and
data16
sbb
or
ds
call
in
loopne
mov
or
pop
pop
cwtl
movsb
add
pop
mov
cmp
out
addb
and
jbe
add
add
cmp
adc
adc
mov
cli
add
cld
dec
jb
and
loop
or
inc
into
mov
add
movsl
pusha
mov
pop
inc
mov
or
mov
add
aam
add
mov
xchg
fsubrs
mov
ljmp
xor
in
mov
dec
leave
inc
dec
pop
jb
and
push
xchg
inc
xor
adc
or
loope
xchg
ret
dec
outsb
sbb
mov
test
neg
addb
sbb
mov
js
call
mov
mov
jne
and
add
and
pop
and
popa
sub
or
shrb
sub
sbb
add
test
incb
hlt
fidivl
xchg
cmp
jno
sbb
sub
push
inc
lods
or
jo
xchg
or
add
dec
add
fsubrl
mov
lods
popa
lea
rorb
mov
jle
xor
mov
or
inc
push
pushf
sbb
sub
xor
push
pusha
int3
int3
adc
mov
scas
sub
nop
or
add
les
sti
into
testb
add
inc
mov
lret
mov
roll
scas
push
push
mov
adc
adc
mov
xor
mov
sbb
addb
pop
inc
mov
test
push
sbb
push
adc
and
push
sub
sub
imul
xor
into
pop
and
push
mov
mov
lcall
arpl
and
clc
inc
les
mov
sub
cmp
fadd
rolb
outsb
push
or
movsl
pusha
mov
std
cmp
or
pop
shrb
int
or
mov
nop
dec
rolb
lods
mov
or
mov
fildl
lret
add
xchg
sbb
push
xor
xor
or
inc
in
mov
xor
int3
lds
sub
les
pop
dec
or
nop
in
push
pop
push
sbb
adc
or
or
mov
mov
push
xchg
inc
and
mov
dec
or
sbb
outsb
push
cwtl
inc
inc
add
mov
test
nop
pop
clc
push
dec
in
test
and
mov
mov
xchg
andl
mov
push
mov
mov
mov
add
leave
in
xchg
cld
lods
pop
gs
sarb
add
mov
dec
call
mov
repnz
adc
and
lret
mov
and
movsl
add
pusha
push
adc
pop
lcall
adc
cmp
insb
andb
or
nop
sbb
push
mov
sub
in
imul
and
testb
testb
adc
inc
or
and
mov
test
into
stos
adc
orb
or
enter
sub
or
loopne
dec
cmpsl
push
mov
push
aam
push
test
adc
mov
ljmp
sub
dec
or
add
adc
rolb
push
add
and
pop
mov
mov
mov
and
cs
sub
daa
mov
repnz
mov
and
pop
testb
and
add
into
xchg
adcb
inc
sti
rcr
enter
mov
test
testb
loopne
ret
mov
and
es
dec
push
mov
mov
and
push
rcrb
aam
les
xor
daa
add
add
dec
add
outsb
test
mov
into
mov
and
cmp
test
push
mov
dec
sub
sbb
fiaddl
jp
pop
adcl
push
ss
es
xor
xor
add
adc
jg
push
cwtl
popa
xchg
lret
add
test
sbb
in
outsb
into
xor
lock
insb
cltd
or
mov
cwtl
cwtl
enter
lret
push
loope
and
dec
std
or
test
push
rorb
mov
push
dec
aad
sub
cld
enter
add
cwtl
scas
inc
cmp
repnz
xor
dec
ljmp
mov
and
mov
inc
gs
outsb
adc
pop
movsl
xchg
mov
dec
sbb
dec
inc
and
inc
cs
in
push
test
rcr
push
js
cs
mov
sbb
mov
pop
inc
fbld
addl
jbe
mov
mov
rclb
push
nop
or
lcall
inc
mov
xabort
pusha
pop
fists
pop
xchg
push
push
orb
push
xchg
lock
dec
and
scas
ljmp
hlt
sub
xor
adc
mov
or
add
dec
push
push
ret
xchg
into
dec
push
orl
push
cs
out
add
cmp
loopne
mov
add
mov
pop
dec
cmpb
push
shrb
and
inc
mov
adc
adc
cmp
push
push
ss
leave
or
add
loopne
push
add
pushf
inc
clc
push
or
push
push
add
rclb
pop
and
loop
sbb
xor
pop
push
aam
xchg
push
sahf
sub
and
fsubrp
and
push
dec
cwtl
enter
jo
pop
leave
mov
mov
pop
jl
subb
sbb
mov
in
nop
mov
mov
aam
and
push
jp
xor
or
ss
adc
fs
fimuls
jo
dec
or
add
jno
sub
sub
test
inc
add
movsb
in
nop
add
jo
sahf
shlb
lret
push
pop
xchg
inc
or
fs
cmp
adc
mov
cmpsb
pushf
ret
or
lret
in
movsb
imul
xchg
jo
xchg
stos
xor
dec
xchg
pop
ret
adc
pop
sub
sub
xchg
sbb
jl
lret
ss
add
push
or
and
mov
dec
ficomps
inc
shlb
xor
push
or
push
push
insb
loop
mov
push
mov
add
rorb
sub
mov
pusha
cwtl
add
test
pop
add
inc
in
jbe
cwtl
and
sbb
lea
pushf
mov
mov
xor
xor
jmp
gs
mov
sub
lock
lret
je
sbb
pop
outsb
insb
inc
movsl
lds
mov
mov
mov
pushf
pop
data16
sub
or
rorl
push
mov
sbb
sub
cmp
subb
es
sub
add
pop
xor
xchg
pop
add
and
ficoml
push
inc
popaw
pop
adc
dec
rolb
inc
xchg
mov
adc
cmp
fisubs
mov
push
push
pop
pop
dec
jo
xor
dec
add
dec
hlt
clc
mov
ss
mov
add
bound
mov
push
pop
cmpl
mov
push
fisubrs
int3
xchg
pop
cmpsb
xor
cmp
aam
sbb
dec
sub
js
or
sbb
dec
cmp
and
out
mov
adc
adc
rol
mov
cmp
or
push
divb
inc
test
xchg
inc
or
inc
mov
rcl
out
out
js
push
pop
inc
movsb
sbb
rcr
cmp
leave
add
sub
xchg
rolb
shlb
xor
push
jo
push
add
and
sub
cmpb
xchg
sub
testb
mov
clc
dec
and
lods
inc
pop
add
push
jo
xchg
rcll
loop
add
mov
pop
enter
mov
aam
loopne
pop
into
adc
pushf
adc
cld
push
mov
stos
xchg
or
daa
xor
jo
sbb
in
sbb
data16
aam
cmp
sub
loop
cwtl
or
addb
addb
push
scas
or
cmp
lcall
xor
gs
push
sahf
mov
sbb
or
xchg
push
ss
lock
pop
orb
out
xlat
nop
adc
fiaddl
rclb
push
mov
xchg
sti
in
lret
test
mov
sbb
inc
jl
adc
pop
add
movl
jecxz
and
loop
lcall
ss
pop
and
or
push
cs
push
inc
mov
xor
inc
dec
mov
push
lret
jbe
sub
or
adc
add
xor
sarb
jl
inc
sub
pop
jl
cli
and
pusha
jle
dec
adc
xorl
sbb
movsl
and
xorb
cltd
ret
push
or
movsl
inc
jae
rorb
jp
cli
int3
popa
bound
shlb
sbb
jo
push
or
fstpt
into
clc
cld
cld
xchg
rorl
int3
add
xchg
les
or
ficoms
or
adc
adc
dec
data16
sub
fidivrs
and
lods
shlb
ret
in
sahf
andb
and
inc
xor
data16
ficomps
push
cwtl
mov
add
movsl
call
fistps
add
daa
loopne
jp
jo
adc
xor
pop
nop
mov
sarb
dec
mov
call
call
pop
mov
nop
add
hlt
shlb
or
cltd
xor
test
les
lea
data16
orb
test
orb
popa
lret
loope
sbb
add
pop
push
rorb
rolb
in
addl
add
xor
mov
test
adc
in
inc
or
xchg
dec
jb
insb
sub
inc
test
hlt
js
dec
loop
jecxz
pop
xchg
add
outsl
inc
push
lock
cmpsb
xchg
orb
pop
xor
movsb
int3
adc
xchg
xorl
hlt
mov
cwtl
hlt
fs
mov
dec
and
sahf
dec
addb
add
lock
imul
outsb
add
xor
mov
push
test
jp
loop
push
push
add
xor
push
jg
int3
xor
aas
adc
inc
fs
popf
sbb
sub
mov
imul
xor
ficomps
fstl
jns
dec
lcall
dec
jns
fisttps
sub
add
xorb
add
inc
cmp
xchg
or
push
xor
and
or
adc
and
mov
inc
ret
aam
xchg
jge
mov
add
loopne
lods
mov
adcb
mov
lret
adc
pushf
sub
fdivl
rcll
sub
add
and
sub
push
push
sub
test
add
adcb
and
mov
test
jmp
loope
adc
add
pop
jbe
push
cmp
pop
lea
or
testb
shl
adc
adc
cmp
mov
cwtl
ss
mov
xchg
movsb
jle
add
or
push
inc
cmp
movsb
lock
enter
inc
fists
adc
add
cmpsb
or
and
mov
js
cmp
cmp
loopne
pusha
insb
cs
push
xchg
push
loop
out
or
fimull
push
mov
mov
mov
xchg
and
nop
je
sbb
adc
jbe
jbe
addb
dec
enter
ds
or
lock
sbb
rclb
int3
bound
sub
dec
pusha
push
add
push
in
push
data16
jbe
or
inc
aam
popf
aam
and
test
sbb
aam
leave
cmpsb
loop
mov
or
push
pop
adc
sub
in
xor
xor
mov
push
rorl
jle
and
call
sahf
xor
popa
push
xchg
add
xorl
and
test
je
fdivl
cmp
mov
cwtl
loope
mov
inc
sbb
mov
mov
dec
pop
test
movsb
mov
scas
loopne
test
add
or
mov
mov
pop
sbb
sub
add
popa
sbb
jb
lods
add
xor
cli
push
xor
sbb
jp
sarb
sahf
loopne
and
mov
es
ljmp
nop
pop
adcl
pushf
sti
sahf
mov
xor
idiv
fiadds
push
lea
mov
test
xchg
shrb
cmp
sbb
cmp
cltd
or
lds
adcb
xor
call
pusha
test
orb
ret
adc
push
adc
dec
ret
mov
int3
and
cs
sti
inc
cmp
lret
push
nop
shr
rcll
pop
dec
adc
mov
xchg
cltd
push
adcb
call
mov
and
cwtl
push
dec
and
insb
or
mov
insb
mov
pop
sahf
js
adc
movsb
xchg
push
push
cmpsb
xchg
sub
daa
mov
push
or
or
push
add
jae
outsl
cwtl
sbbb
lods
into
push
sub
push
xchg
stos
jp
js
outsb
popf
outsb
xchg
in
adc
data16
pusha
sbb
or
popa
inc
and
mov
dec
sbb
dec
outsb
dec
clc
push
add
ljmp
and
and
pop
aam
mov
or
push
push
inc
movsl
and
mov
xchg
movsb
push
out
insb
pusha
adc
scas
jp
and
and
insl
mov
ret
call
inc
dec
lret
adc
dec
test
xchg
rolb
xchg
push
or
ret
rorb
fiadds
popa
xor
ljmp
test
add
add
inc
in
mov
inc
es
adc
adc
ss
adc
pop
sbb
jb
xchg
dec
xor
jne
or
ret
xor
adc
adc
mov
insb
push
ror
inc
shlb
mov
mov
aam
xchg
in
inc
xchg
lret
fs
add
jmp
adc
call
gs
in
ficompl
xor
in
push
push
push
add
inc
popf
lods
cltd
cli
fmuls
orb
hlt
dec
in
pop
into
or
jo
pushf
xor
ss
addl
cwtl
andb
or
and
nop
pusha
xchg
pop
sbb
xchg
cwtl
jb
push
rorb
mov
pop
xor
xor
dec
in
push
or
sub
mov
adc
fstps
mov
inc
mov
pop
gs
or
dec
or
shrb
jp
sub
push
incl
xchg
hlt
pushf
loope
push
push
dec
pop
in
es
rolb
cmp
mov
push
adc
ret
xchg
xorb
lret
sbb
mov
xchg
adc
js
adc
sbb
and
cmp
aad
rol
mov
dec
test
xchg
xor
xchg
add
lret
aam
or
test
sbb
loopne
mov
mov
sub
adcb
mov
fnstenv
pop
inc
call
addb
fs
xchg
loopne
xchg
mov
and
dec
shlb
xchg
fs
sarb
xor
mov
bound
jg
adcb
mov
xchg
lcall
sub
xchg
fisubs
sahf
outsb
or
call
adc
out
lret
dec
cmp
imulb
jb
daa
sbb
sbbb
mov
inc
dec
ret
and
sub
addb
jb
jo
mov
loop
sbb
sbb
mov
fiaddl
aam
adc
push
cltd
cmp
lret
jb
push
test
add
push
test
or
js
sbbb
test
stos
sub
mov
fsubr
xchg
adc
jle
call
xor
dec
push
push
int3
or
into
ss
ret
movsb
push
xor
das
cmpsl
sbb
xor
and
or
pop
loopne
or
jo
push
dec
addb
into
add
and
lret
sub
ds
adc
ret
add
lsl
pop
sahf
and
mov
ds
test
hlt
in
movl
add
add
dec
xchg
int3
jne
mov
cmp
sub
cmp
mov
enter
pop
add
pop
push
negb
enter
insb
adc
add
add
xor
cmp
inc
mov
orl
mov
sbb
nop
lock
addb
and
inc
stos
lock
je
int
es
push
and
dec
push
or
cmpsb
cmp
jp
and
inc
push
int3
fistl
pushf
fs
je
and
xchg
insb
jle
adc
cmpsb
movsb
xor
pop
pop
adcb
sarb
ds
dec
cltd
lret
push
xchg
and
cmc
es
adc
loopne
call
push
fs
sbb
xor
sub
inc
and
mov
and
and
add
imul
jo
sub
leave
sahf
mov
test
fmul
jo
pop
add
push
push
cmp
push
jno
sbb
add
add
and
sub
test
int3
pop
iret
data16
inc
sub
add
iret
pop
mov
mov
lods
xor
or
lcall
jo
nop
xchg
js
aam
push
xor
es
mov
call
je
movsb
mov
orl
ret
mov
cmp
push
or
je
sub
add
push
call
stos
or
and
dec
add
adcb
and
xchg
fstpt
sbb
rolb
fsub
cmp
add
xchg
hlt
dec
or
cwtl
rol
adc
and
xchg
movb
jbe
xor
shlb
add
sub
mov
popa
sub
push
adc
or
and
jb
xor
push
and
lcall
loopne
mov
mov
adc
ret
sbb
pop
xor
push
test
loope
xchg
cmp
cs
test
lods
sub
or
push
les
cli
dec
ror
int3
mov
fs
lods
das
xchg
int3
and
or
push
pop
xor
fwait
xor
js
adc
ret
sub
addr16
mov
scas
sub
push
xchg
js
pop
sub
push
call
push
js
popa
jp
loop
push
cmp
pop
mov
sbb
stos
xchg
data16
pmuludq
subb
inc
insb
xorb
addb
jo
or
fwait
add
rcl
jno
xchg
fcoml
shlb
shlb
adc
jo
pusha
adc
mov
adc
xor
es
pusha
inc
iret
xor
mov
cmpsb
add
stos
mov
adc
mov
or
push
sbb
add
sbb
adc
inc
hlt
mov
inc
adc
pop
pop
les
loope
cs
pop
pop
in
hlt
inc
addb
inc
dec
cld
int3
and
je
add
aam
sub
dec
xchg
ret
pop
and
push
mov
lods
add
cmpsl
pop
adc
add
jbe
mov
sub
adc
sbb
xchg
dec
lret
sub
adc
shll
sbb
lea
mov
sbb
scas
into
andb
pop
int3
pushaw
push
mov
pop
xchg
enter
add
push
subb
add
out
aam
stc
or
or
or
adc
mov
ljmp
adc
dec
orb
repnz
pop
push
stos
adc
xchg
lret
mov
fadds
andb
scas
out
in
inc
loop
push
pushf
rclb
mov
inc
aam
std
xor
cwtl
add
sbb
or
insb
jo,pn
xchg
mov
ss
mov
pop
or
and
leave
push
sub
scas
and
sbb
clc
dec
rcrb
in
ror
movsl
and
test
insb
pop
roll
mov
enter
mov
sub
insl
in
pop
std
sbb
add
or
ds
inc
add
pop
push
jl
and
fsts
loop
dec
and
push
les
lods
cmpsb
mov
lock
lds
ret
push
xchg
arpl
data16
or
xor
sub
add
push
data16
add
or
test
xchg
mov
cld
aam
sub
mov
dec
xchg
dec
daa
mov
lods
pushf
add
xor
xor
push
fsubs
xor
cmp
lea
sub
dec
pop
jl
sbbb
xor
push
dec
sub
inc
shrl
nop
sub
outsb
ret
add
scas
xor
inc
sbb
and
pusha
js
sbb
sub
in
push
xor
lds
mov
in
push
xchg
test
add
icebp
xchg
mov
push
sarb
sbb
aam
loopne
lds
inc
or
lods
fsubr
push
xchg
mov
sbb
pop
xchg
mov
fsts
leave
sub
dec
and
test
jg
dec
inc
sub
dec
outsb
sbb
xor
les
dec
sbb
adc
pop
inc
adc
lret
pop
push
test
pop
repnz
ss
dec
leave
xor
or
shlb
and
ret
dec
or
and
pop
inc
push
test
cs
push
fcomps
scas
xor
xchg
aam
sub
lret
push
test
pop
dec
mov
sub
and
xchg
sbb
xor
dec
mov
dec
inc
inc
xor
cmp
adcb
mov
mov
pop
sbbb
sub
adc
pop
xchg
data16
adc
xchg
or
sub
xchg
rclb
adc
or
roll
adc
out
inc
shlb
dec
movsb
in
sub
and
and
sbb
mov
cmpsb
addb
fsubs
xor
insb
add
popa
mov
push
mov
imul
test
aam
xor
movsl
xor
cli
sub
add
pop
pop
or
xor
nop
in
add
add
adc
enter
mov
mov
mov
shrb
test
push
add
rclb
cltd
lea
rorb
xorl
daa
stos
xor
stos
cli
mov
loop
mov
or
dec
mov
sub
rolb
shrb
sub
callw
push
add
roll
ret
les
hlt
mov
push
jbe
inc
push
jge
movsb
dec
inc
push
cmp
repnz
inc
mov
jae
hlt
xor
or
sub
lock
enter
xor
mov
imulb
sub
fsubr
fadd
scas
cmp
cmp
dec
pop
sti
add
rol
pop
fldl
cld
dec
imul
push
add
movsl
or
sbb
or
push
push
clc
push
cld
and
add
pushf
pop
xchg
movsb
push
insl
or
lea
inc
pusha
sbb
jmp
outsb
filds
xlat
enter
mov
dec
shrb
inc
sti
xchg
xor
les
push
mov
inc
fsubs
and
insb
add
loopne
nop
fs
jno
cmpsb
sub
xchg
addl
hlt
ljmp
sub
inc
xor
adc
dec
add
sbbb
or
dec
xor
cli
jl
arpl
jo
mov
push
shl
mov
fs
dec
clc
decb
dec
sub
ljmp
movsb
leave
hlt
xchg
push
loope
outsb
jp
pop
and
sbb
xor
xchg
mov
push
sbb
dec
je
lcall
or
ljmp
mov
pop
mov
and
inc
sbb
push
cli
dec
xchg
add
and
mov
test
les
lods
and
xchg
fsubl
add
sub
push
xchg
fistpll
or
pusha
dec
stos
or
inc
pop
mov
mov
adc
dec
cmp
inc
fcomps
inc
cmpb
adc
dec
and
pop
andl
sti
sub
enter
test
pop
push
es
in
clc
xchg
adc
xorb
or
mov
lods
adc
or
xor
sub
pop
push
dec
lods
mov
faddl
mov
dec
inc
pushf
xchg
clc
pusha
xor
lods
sahf
jb
ret
inc
adc
aam
enter
and
adc
addb
xor
rorb
dec
pushf
jo
loope
add
mov
xchg
aaa
add
xchg
ret
sub
ret
enter
mov
lock
bound
inc
mov
bnd
or
shlb
jg
push
mov
ss
sbb
xchg
adc
js
in
in
add
mov
sahf
jg
test
adc
inc
mov
sub
add
inc
dec
add
lret
rol
xor
stos
pop
dec
leave
jl
aam
push
lret
or
call
push
add
jle
in
mov
xchg
mov
xchg
or
and
adc
xlat
push
cmp
pushf
jo
ret
add
cltd
push
call
test
pop
add
push
and
inc
and
xchg
lcall
mov
leave
adc
or
mov
std
insb
pushf
sub
or
in
push
lds
or
subb
adc
dec
popa
or
shl
sbb
jb
adc
enter
and
cmp
add
outsb
dec
sbb
in
or
dec
mov
nop
xchg
push
mov
loop
xor
dec
jb
nop
test
cmp
xlat
sub
roll
test
mov
lock
xor
pop
inc
pop
or
notb
sbb
addl
out
lods
add
and
mov
mov
add
and
lods
xor
sbb
jno
mov
push
pop
es
clc
mov
popf
xchg
pop
mov
call
test
or
test
push
test
add
adc
lret
lods
push
sbb
pop
dec
ffreep
add
loopne
loopne
mov
push
and
pop
add
test
cmp
push
push
leave
or
out
out
push
and
jo
bound
pop
fidivl
sbb
sbb
inc
xor
adc
test
add
dec
lea
add
dec
pop
fcmovu
test
imul
dec
test
cmpsl
xor
pop
mov
inc
into
aam
add
inc
inc
dec
push
adc
in
xor
xchg
loop
adc
in
leave
xlat
dec
mov
pop
push
add
and
addb
mov
orb
xor
dec
cmp
cwtl
mov
xchg
add
push
movsb
movsb
ret
imul
pop
mov
mov
pop
pop
adc
sbb
jp
mov
cmp
incb
mov
mov
add
js
fs
cmpsb
pop
imul
clc
pushf
adcb
pushf
mov
sub
ss
adc
mov
dec
ror
dec
inc
add
xchg
rorb
mov
or
cs
bound
mov
cmpsl
and
mov
xchg
aam
test
aas
sub
lret
in
xor
jne
inc
cld
out
cwtl
sub
sub
adc
sub
mov
subl
cwtl
or
and
hlt
imul
call
out
or
pop
mov
lcall
stos
add
lds
xor
ret
push
ljmp
push
sbbb
mov
cmp
add
lret
mov
add
repnz
jp
adcb
test
mulb
and
xor
or
adcb
or
and
loop
jp
xor
shl
mov
inc
adc
inc
xchg
inc
xor
and
adc
lods
mov
addb
mov
inc
leave
and
je
xchg
adc
mov
push
cwtl
mov
mov
bound
and
or
xchg
fs
push
jo
sub
dec
es
sbb
cwtl
inc
rcl
xchg
pop
mov
and
inc
inc
sbb
inc
mov
xchg
inc
imul
ljmp
dec
push
les
or
cmp
ror
and
adc
je
dec
push
mov
mov
inc
jle
adc
daa
mov
test
shll
fcompl
lds
add
cmp
xor
sbb
push
shl
addl
or
je
or
cs
loop
and
push
add
and
inc
add
push
dec
test
dec
or
lods
inc
add
loopne
mov
sub
js
fiaddl
sub
rcll
addb
sub
jle
pop
and
dec
xor
loopne
cmp
sbb
ljmp
movsb
mov
xchg
push
jb
ret
adc
xorl
lods
add
mov
or
adc
xchg
fwait
adc
aam
xor
push
adc
shrb
and
data16
bound
push
push
or
test
cs
cmp
mov
js
sbb
or
pop
rorb
jnp
andb
out
push
mov
cmpsb
dec
or
push
adc
loopne
and
push
mov
js
jo
mov
dec
push
mov
xchg
and
inc
push
mov
xor
sub
dec
cmp
xor
loop
cld
sarb
pop
cld
xchg
inc
test
inc
mov
sbb
pop
sbb
rclb
pushf
shlb
sbb
fsubrs
aam
add
inc
movsb
sbb
pop
in
js
mov
fidivrl
or
mov
push
dec
or
push
sbb
mov
mov
sahf
xor
sub
adc
rdmsr
pop
out
mov
test
mov
rolb
adc
es
js
test
sub
in
adc
fcoms
or
sbb
inc
push
iret
xchg
sbb
inc
les
jp
addb
mov
push
sbb
sub
lds
add
and
test
and
lds
xchg
dec
push
xor
adc
adc
mov
and
push
test
jp
mov
sub
and
or
cmp
xchg
leave
mov
dec
mov
and
fsubrl
adc
inc
sub
scas
call
mov
scas
adc
sbb
lret
add
or
push
leave
dec
es
pop
stos
or
ss
and
bound
adc
leave
mov
cltd
cmc
sahf
test
ljmp
xor
iret
xor
xor
xor
movsl
add
out
out
pusha
sub
aam
push
dec
popa
pusha
push
jl
adcl
pop
jle
repnz
mov
push
add
out
mov
dec
or
adc
or
or
arpl
leave
inc
inc
loopne
data16
or
inc
test
push
push
fcompl
ret
ss
add
jl
jp
sub
add
movsb
mov
es
mov
sub
mov
nop
sahf
rorb
pop
data16
adc
and
loopne
add
loop
or
test
bound
fdivrl
cs
jle
sub
cmpsb
adc
adc
call
nop
divb
clc
stc
xor
imul
jae
push
ficoml
push
mov
out
fcom
inc
lahf
pop
imul
push
add
mov
jae
test
sub
test
or
in
mov
cwtl
push
adc
dec
push
in
add
cwtl
adc
mov
or
insb
cld
and
inc
lock
daa
inc
je
dec
mov
sbbb
lods
cmp
or
xchg
cmp
dec
mov
adc
dec
outsb
or
push
rclb
shrb
cmp
jb
inc
xor
int3
sbbb
mov
and
add
mov
add
test
cli
xchg
push
jo
push
int3
or
pop
mov
adcb
mov
sub
inc
cwtl
ret
jbe
mov
pop
adc
or
in
inc
adc
jp
mov
push
dec
xor
dec
popa
aam
cmpsb
inc
adc
xor
punpckhbw
mov
fidivrl
lret
outsb
rcll
or
mov
or
shrl
dec
test
adc
rcrl
addb
fs
mov
mov
bound
test
jle
push
push
pop
popf
andb
mov
add
pop
xorb
dec
or
lock
xor
jb
pop
jbe
ficoml
data16
movsb
and
sbb
xchg
test
test
add
jl
leave
leave
mov
lods
sbb
call
jmp
les
dec
inc
push
dec
push
out
pop
mov
fcoml
xchg
test
pusha
xor
dec
mov
or
loop
dec
leave
and
mov
out
pop
add
scas
mov
adcb
mov
cmp
push
jg
or
and
out
pop
sub
inc
cmp
inc
gs
in
or
mov
rorb
dec
hlt
pushf
js
xor
orb
sub
iret
pop
pop
ret
mov
push
xor
or
dec
call
push
inc
out
adc
mov
in
push
es
sub
mov
jle
inc
test
pusha
or
and
add
sub
call
xchg
push
mov
adc
jl
mulb
adc
xor
jo
int3
add
xor
pop
inc
mov
int3
jb
mov
nop
pusha
es
xchg
dec
add
sbb
add
orb
or
mov
mov
inc
inc
cmp
mov
rorl
push
lret
xchg
add
add
sub
inc
push
cmp
adc
addb
inc
popa
and
push
gs
lock
mov
sub
inc
dec
rorb
aam
adc
enter
dec
and
pop
cs
inc
xor
call
sub
les
xchg
into
adc
xchg
test
xor
aam
xor
push
push
cmp
sbb
test
push
les
add
sub
cmpsl
loopne
hlt
xor
add
addl
push
cld
pop
das
dec
dec
ret
lods
inc
xchg
or
movsb
clc
xor
incb
call
sub
ljmp
pop
xor
fimuls
or
mov
push
mov
inc
add
jg
and
ret
mov
dec
loopne
loop
mov
cld
cwtl
push
dec
test
xorl
scas
ljmp
push
add
std
mov
dec
dec
mov
sbbb
or
mov
push
enter
pop
add
je
or
popa
mov
xchg
cwtl
dec
or
mov
in
fcmovb
lods
bound
mov
xor
ss
push
orb
sub
push
ret
add
cmp
sbb
sbb
inc
mov
mov
add
adc
sbb
adc
jp
dec
dec
mov
es
ret
add
js
cmp
xor
cmp
adc
arpl
push
or
inc
add
and
cmp
mov
mov
push
hlt
adc
popa
jne
sbb
clc
shlb
sahf
js
and
inc
enter
add
mov
and
icebp
rcrb
dec
leave
push
mov
loope
lods
dec
stos
add
xchg
push
mov
mov
push
cmp
sar
iret
imul
xor
jo
cmpsb
insb
push
inc
push
push
sbb
mov
adc
cmp
mov
adc
or
pop
ljmp
sbb
pushf
mov
int
adc
mov
repz
sub
jne
imul
repnz
add
push
or
inc
pop
pop
push
or
add
mov
jbe
orl
leave
jle
cmpsb
mov
mov
cmpsb
fdivl
out
xchg
or
mov
mov
sarb
and
ret
ret
mov
nop
pop
into
adc
sub
add
add
inc
clc
adcb
or
mov
in
and
push
ss
sbb
push
fs
and
inc
mov
adc
push
ljmp
adc
inc
inc
sub
test
inc
cmp
enter
mov
cltd
lea
jmp
sbb
dec
push
test
xor
sub
rcrl
test
movhlps
lods
dec
inc
dec
outsb
jl
jp
jb
push
mov
js
push
enter
rcll
ret
pop
jp
sbb
mov
rcll
test
adcl
mov
xchg
adc
or
clc
mov
cltd
jl
into
jo
xchg
xchg
dec
adc
rol
mov
decb
js
and
jbe
imul
fisttps
add
push
test
add
ljmp
cmp
dec
sbb
xchg
test
test
mov
jle
xorb
xor
test
std
add
cmpsb
push
or
loopne
adc
dec
xchg
mov
and
cli
data16
mov
sub
idivb
push
mov
je
cmp
cs
xlat
dec
or
xchg
or
adc
cmp
rclb
pop
add
subb
xor
add
xchg
and
push
dec
mov
jb
pop
sbb
or
push
jge
add
cmp
dec
add
mov
inc
adcl
imul
sub
cwtl
cmp
jo
push
inc
fs
xchg
adcb
xor
push
testb
call
cld
iret
shr
xor
in
add
and
mov
or
call
sbb
dec
or
sub
xchg
adc
fs
dec
jo
push
cmp
mov
dec
cmp
xor
mov
push
dec
or
push
cmpsl
mov
xor
add
sahf
mov
iret
pusha
and
fimuls
or
mov
inc
sbb
loop
clc
das
mov
jp
push
adc
jb
xchg
enter
xor
xchg
in
cli
xor
out
pop
adc
cwtl
jp
sub
dec
sbb
xchg
loop
jo
push
or
lods
in
ljmp
jle
dec
lahf
subb
push
inc
and
or
mov
mov
adc
lcall
in
mov
jecxz
rclb
cmp
sbb
movsl
cmp
mov
and
in
adc
sbb
push
jo
pusha
cld
ret
sbb
inc
shrb
cwtl
jb
inc
mov
dec
and
outsb
jp
loopne
mov
push
push
add
push
dec
insb
mov
sahf
xchg
sbb
es
or
or
into
and
push
subb
xor
adc
popa
xor
sub
adc
inc
cmp
int3
nop
jno
or
loopne
xor
add
inc
sub
sbb
xor
test
sub
mov
fidivl
sbb
ss
mov
lret
inc
dec
stos
cwtl
test
pop
push
mov
fs
sub
fmul
push
stos
pop
dec
inc
cmp
add
mov
add
jge
push
push
adc
mov
stos
mov
addl
fs
fs
push
adc
add
popf
push
enter
cmpsb
mov
enter
sahf
lret
cmpsb
and
pop
and
leave
and
inc
rclb
mov
andb
dec
or
sbb
lret
jb
sub
test
xor
sbbb
out
sti
jl
mov
push
test
sub
add
jge
and
push
mov
cmp
out
cmp
inc
sub
push
sbb
sbb
inc
add
xchg
repz
add
push
mov
and
xor
xchg
add
leave
sub
or
ret
pop
mov
sbbb
scas
ret
sbb
and
mov
or
push
outsb
and
bound
cld
sbb
push
push
insb
mov
or
iret
aam
xchg
jbe
adc
xchg
push
sub
xchg
or
fs
les
movsl
pusha
xchg
adc
cmp
xchg
sub
les
lar
sub
or
pop
in
in
in
push
xchg
fsubrl
cmc
mov
scas
es
out
jns
sub
jl
aaa
cs
call
loope
mov
or
or
int3
xorl
push
out
jae
cmovo
push
xor
dec
outsb
add
push
add
pop
xor
out
ficompl
loopne
jp
nop
arpl
mov
push
test
adc
loopne
lock
add
pop
mov
aam
mov
dec
adc
sub
dec
xchg
lock
jl
or
push
nop
adc
inc
push
int3
nop
mov
jno
in
lock
push
addb
ss
mov
mov
add
push
fcoms
add
aam
enter
fs
cli
pushf
adc
adc
xchg
popa
shrb
aaa
adc
adc
dec
xor
jle
ret
mov
pop
jo
popa
andb
lcall
enter
fcoms
and
push
fidivl
outsb
inc
cmpsb
xchg
add
mov
vmwrite
xor
sub
out
popf
push
movsb
dec
inc
push
xor
pushf
fiadds
inc
adc
or
js
xor
inc
fisubl
xor
mov
popa
into
popa
aam
adc
push
add
rclb
inc
dec
hlt
enter
stos
dec
jo
cmpsb
adc
out
pusha
fadds
cmp
adc
es
and
jb
and
pusha
ljmp
fs
xchg
lods
xchg
mov
mov
nop
mov
or
mov
test
lcall
ljmp
mov
mov
push
in
test
les
jg
aaa
xorl
cmpxchg
mov
push
pop
pop
scas
or
inc
pop
cmpsb
ss
lods
les
push
push
inc
pop
fmul
cs
in
dec
xor
jle
bound
or
outsl
or
insb
adc
xor
add
dec
push
push
adc
test
sbb
and
xchg
sbb
cwtl
or
mov
insb
sub
push
movsl
or
fiaddl
in
popa
xor
push
rol
add
mov
sub
or
xchg
add
sti
push
int3
adc
sbb
or
adc
add
or
adc
cmp
pushf
ret
xor
repnz
xchg
dec
jo
dec
in
bound
pop
cmp
data16
subb
les
add
mov
push
int
sub
repnz
sbb
and
lcall
xor
adc
rcrb
dec
sbb
inc
dec
adc
sahf
ss
test
sbb
adc
outsb
dec
nop
test
mov
pusha
ret
scas
cld
roll
subb
mov
xor
push
lret
push
addb
inc
gs
pushf
les
cmpl
dec
inc
inc
cmpsb
push
ss
mov
scas
push
add
pop
les
cmp
xor
xor
call
adc
sbb
and
sub
and
pop
xchg
sbb
ficomps
sub
xor
mov
outsb
pushf
aam
and
add
cmp
and
mov
movsb
in
int3
fs
les
js
pop
inc
jg
sub
and
pop
or
je
pusha
and
inc
adc
cli
dec
gs
lret
shl
roll
xor
push
sbb
div
cltd
lret
jp
mov
or
addb
push
lret
jne
or
int3
je
cltd
jp
push
add
xor
int3
loopne
or
sub
adc
fs
xor
or
mov
lea
push
adc
add
mov
jbe
daa
or
jl
imul
or
adc
or
inc
movsl
mov
mov
dec
xchg
jo
sub
xchg
rorb
or
or
or
push
xchg
cli
in
rol
pop
orl
cmp
mov
ret
cmp
pusha
ss
add
outsb
int3
pushf
xchg
int3
shrb
movsb
xchg
ds
cwtl
sbbb
xchg
sub
pusha
insb
ret
fdivrl
addb
inc
fiadds
mov
push
test
push
add
pop
jb
gs
outsb
add
pop
inc
iret
pop
inc
ror
xor
pop
cs
cs
sub
xchg
test
addb
cmp
push
loopne
inc
nop
dec
jne
add
mov
sub
push
xchg
ss
cmp
push
pop
sub
pop
push
push
scas
in
cwtl
popa
dec
popa
test
push
mov
add
mov
sub
mov
in
sbb
out
mov
fadds
popf
dec
test
mov
jecxz
xchg
inc
sbb
jo
sbb
jecxz
flds
fnstcw
insb
mov
push
inc
rclb
inc
jb
movsb
adc
sub
rolb
mov
mov
sbb
aam
mov
ficoms
adc
pusha
or
fmuls
rolb
sbb
rcr
xchg
fadd
add
insb
sbb
fbld
movsl
xor
sub
or
cmpsb
xchg
adc
mov
test
pop
cs
xor
and
pop
ret
das
mov
inc
mov
and
pusha
or
cltd
sub
and
xchg
pop
or
or
sahf
push
mov
nop
mov
xor
out
adc
mov
clc
je
or
leave
sub
sub
sub
xor
rorl
sar
nop
xchg
rclb
mov
mov
mov
dec
sub
xor
rolb
xchg
cld
adc
add
sub
lret
add
sbb
addl
push
mov
into
nop
push
adc
loop
add
mov
dec
inc
add
push
jmp
xor
enter
les
shlb
lds
sub
adc
xchg
mov
and
sub
push
loope
add
loopne
push
xchg
add
aam
or
pusha
xchg
nop
mov
enter
pop
arpl
mov
fs
sbb
jb
push
shlb
add
sub
add
ret
jno
mov
movsb
inc
jbe
in
adc
jle
pop
aam
jl
ret
sahf
sub
push
pop
add
and
or
mov
fs
mov
iret
sbb
dec
aam
sub
pop
jp
lods
faddl
inc
shlb
sbbl
push
fiaddl
mov
ret
cmpsb
loop
push
or
test
add
pushf
jmp
mov
dec
sub
sahf
pop
sbbb
scas
or
sbb
mov
aaa
or
lds
xchg
enter
mov
mov
push
push
in
xor
xor
and
xchg
and
inc
or
dec
add
adc
dec
cli
sbbl
push
dec
pop
sbb
push
cmp
leave
pop
jo
adc
pop
mov
or
jge
xor
fs
and
fcomps
dec
fcomp
gs
int3
and
sbb
sub
sbb
jp
lret
inc
xchg
and
or
rcrb
mov
dec
xchg
addl
sahf
cmp
xchg
lret
dec
lods
inc
inc
dec
ret
cmp
bndstx
cmp
pop
or
inc
or
xchg
mov
lods
out
lret
mov
mov
jo
orb
mov
inc
adc
pusha
or
add
ljmp
jp
rorl
sub
negb
orb
ret
mov
cmpsb
pop
int3
adc
cmp
mov
adc
jo
mov
pop
loope
xchg
enter
adc
cmp
stos
sub
jg
sub
rclb
test
add
arpl
repnz
leave
lcall
rolb
pop
ds
cmp
add
push
xchg
push
add
add
add
test
xchg
push
push
andb
sub
and
mov
or
push
mov
cmp
xor
push
je
int
add
lock
cli
pusha
dec
cmp
dec
pushf
je
inc
je
adc
sbbb
call
add
push
loopne
and
fsubs
in
test
add
shrb
inc
adc
dec
mov
leave
sub
sbb
pusha
xor
adcb
lcall
fcoms
pushf
or
in
pusha
adc
sub
nop
xchg
mov
cltd
pusha
xor
jp
fisubrl
mov
mov
test
add
add
out
fs
push
test
jbe
mov
add
dec
mov
int3
and
cmpsb
inc
xchg
xchg
in
repnz
jp
pop
pop
add
mov
push
lret
xchg
rcr
mov
add
dec
adc
sti
adc
pop
cmp
push
jae
pop
add
faddp
adc
adc
js
lret
adc
call
stos
add
dec
loope
pop
lret
push
add
or
push
push
mov
inc
cli
xchg
hlt
es
lock
mov
sub
iret
cli
shlb
push
movsb
test
dec
mov
xchg
mov
inc
mov
sbb
mov
adc
enter
dec
mov
enter
fs
dec
push
into
mov
and
loop
clc
pop
push
add
ret
push
insb
inc
and
xorl
xor
xchg
cltd
or
xchg
enter
ret
enter
loopne
mov
push
out
test
xchg
inc
push
in
adc
mov
test
out
rolb
mov
sbb
in
pop
fs
pusha
cmp
in
add
xor
faddl
push
movb
mov
jae
es
rcrb
popa
mov
or
in
test
adc
sub
sub
xchg
adc
dec
lods
js
or
and
jp
jo
mov
test
xchg
jge
iret
jle
cwtl
xor
call
xor
mov
dec
adc
add
sbb
sub
push
mov
sub
stos
add
fbstp
and
inc
popa
data16
shl
lcall
push
in
enter
js
xchg
inc
sar
cmp
or
in
lods
and
adc
dec
aad
pop
shl
rclb
pop
add
pushf
mov
mov
test
and
adcb
push
push
cmp
adc
cwtl
loope
mov
pop
and
push
cwtl
in
xor
pushf
push
cmp
hlt
in
mov
jg
add
fisubrs
mov
bound
and
or
hlt
dec
push
dec
push
shll
pop
cmp
clc
mov
enter
mov
xor
in
dec
enter
loope
add
fisubrl
and
faddl
popa
mov
jmp
int
mov
adc
cmp
int3
xor
pop
pop
ret
adc
mov
add
xchg
mov
je
inc
cltd
adc
lret
imul
loop
xor
rcll
loop
sbb
mov
and
add
adc
inc
mov
pop
scas
cmpsb
cmp
jb
das
sub
nop
pop
lea
sbb
push
adc
mov
push
mov
jne
test
nop
mov
xor
lret
lods
cwtl
push
or
fmull
mov
push
xchg
ljmp
sbb
aam
xor
adc
and
adcb
pusha
loopne
and
imul
or
jo
sbb
pusha
xchg
pop
xchg
ret
sub
sub
hlt
orb
pop
sbb
or
jbe
pop
inc
lods
add
sub
pop
or
add
xor
std
mov
fsubrs
aam
insb
adc
mov
daa
xor
xor
cmp
inc
jecxz
mov
es
int3
cs
inc
mov
jmp
in
stos
dec
xor
mov
aam
mov
jae
fimuls
out
xor
sub
xorb
jp
or
test
and
or
mov
mov
xchg
push
or
inc
test
pusha
cltd
mov
xchg
push
xorb
add
mov
jno
or
xorb
xor
and
sarb
popa
push
push
popf
push
jbe
enter
nop
data16
xor
and
push
es
xor
sub
fs
les
pop
ja
loop
addb
sub
js
inc
adc
mov
shlb
test
mov
int3
push
popf
dec
cmp
sahf
ss
les
mov
push
xor
and
push
sub
ret
in
xor
or
xchg
nop
inc
add
and
inc
inc
mov
add
and
add
pushf
sbb
xchg
mov
cmpsb
inc
and
inc
dec
lret
sarb
xchg
sbb
mov
subb
cmp
rorb
xchg
pop
ficoml
add
test
subb
rolb
call
xchg
mov
je
dec
in
call
clc
dec
sbb
in
inc
cmp
aad
adc
cmp
sub
sbb
add
dec
sub
loop
pop
inc
into
and
aad
or
pusha
sti
les
or
sahf
aam
stos
add
add
sbb
mov
and
les
sahf
rorl
push
add
jb
test
test
mov
xor
je
push
cmp
mov
push
enter
aam
push
pop
fisubrl
add
add
dec
mov
adc
pop
pusha
sub
fsubr
push
xchg
dec
mov
call
mov
scas
mov
nop
sbb
jo
mov
out
test
add
lods
mov
dec
sbb
adc
add
cltd
sahf
faddl
leave
push
lcall
jbe
call
mov
jp
mov
shll
push
or
and
dec
inc
cmp
cld
and
cmp
test
sbb
fidivrs
mov
xor
aam
pusha
mov
pop
cs
js
movsb
decb
mov
adc
inc
in
xchg
and
les
scas
addl
loopne
dec
add
loopne
cmp
xchg
test
ret
inc
cwtl
jbe
cli
mov
sub
sbb
pushf
pop
add
mov
cli
inc
imul
stos
lret
popa
cmp
pushf
movsb
lock
push
loop
lret
sub
push
enter
jmp
or
dec
insb
es
dec
or
mov
inc
cwtl
in
out
roll
enter
pusha
adc
cmp
es
nop
push
in
and
aaa
in
inc
filds
int3
sub
mov
or
xor
movl
mov
dec
xor
test
and
nop
add
push
mov
push
pop
aam
or
mov
nop
or
jl
push
sbb
js
enter
sub
ret
adc
fdivl
enter
push
dec
fdivl
daa
out
pop
adc
sub
ret
mov
push
push
nop
pop
mov
dec
add
push
mov
rcrb
sahf
int3
push
add
xor
cwtl
decb
xchg
mov
mov
jp
dec
mov
mov
rolb
aam
in
push
inc
add
pop
sub
int
xor
lods
cld
pop
js
int3
popa
rolb
jle
rclb
add
leave
sub
es
andb
addb
inc
sub
lret
or
add
pop
push
sbb
jo
leave
or
cmc
out
sti
cmp
mov
pushf
js
sbbb
and
lcall
mov
test
dec
in
mov
sbb
xor
add
pushf
push
sahf
sub
dec
inc
ret
adc
out
push
push
loopne
mov
rclb
jp
js
inc
push
or
rcll
xor
dec
div
xchg
add
adc
push
lret
mov
adc
xchg
or
sub
mov
dec
jo
add
dec
xor
rorb
adc
lds
loopne
adc
call
pop
jp
pop
mov
es
loop
adc
clc
xor
or
add
add
dec
mov
orl
sbb
add
inc
pop
xor
push
mov
loopne
mov
imul
pushf
dec
loopne
sbb
xor
lret
xor
add
insb
loopne
pop
adc
and
rcrb
push
pop
nop
sub
and
xor
cmp
fs
cmp
rolb
leave
sbb
testb
orb
cmp
adc
test
dec
pusha
insl
stos
pushf
call
sub
jo
lcall
scas
xchg
add
add
hlt
mov
cmp
sub
dec
jl
xor
push
mov
cwtl
cs
mov
xor
or
and
or
lea
cmp
mov
jb
ret
push
fsubr
push
sbb
push
lds
push
push
test
or
sub
pusha
loope
or
xchg
mov
add
jg
sbb
jae
in
or
jne
push
sbb
cmp
and
xor
insl
out
hlt
fldenv
gs
push
adc
sub
xchg
ss
cmp
sbb
lods
call
pusha
inc
out
lods
bound
dec
in
shlb
clc
in
sub
or
lods
les
mov
push
rolb
pop
insb
add
inc
push
sub
add
loopne
push
sub
push
mov
mov
insl
shlb
rcll
dec
adc
push
sub
adc
inc
add
sarb
inc
pop
pop
xor
mov
inc
cmp
adc
sbb
scas
hlt
xchg
xor
inc
and
in
or
or
aam
enter
cmp
loopne
mov
daa
inc
and
add
aam
add
add
add
addr16
es
sub
mov
mov
bound
push
into
push
mov
jle
inc
mov
aam
sub
scas
or
inc
dec
es
inc
mov
dec
jp
add
xor
xorb
les
cwtl
inc
xor
mov
ret
add
or
mov
dec
inc
ds
add
cld
insb
bound
test
push
nop
enter
add
push
fs
stos
in
sub
call
fs
add
test
inc
das
mov
das
xorb
sub
add
push
push
nop
push
xchg
jp
push
push
push
mov
in
andb
push
mov
lock
cmpsb
mov
or
inc
enter
loopne
dec
push
adc
iret
add
xchg
ret
push
xchg
shll
add
pusha
or
cs
push
mov
cwtl
ret
movsb
ret
std
xor
adc
dec
or
xchg
add
sub
adc
orb
mov
add
add
cmp
inc
push
mov
sub
mov
call
dec
mov
xchg
sbb
fadd
sub
lret
ficompl
xor
pop
lret
jecxz
adc
aam
adc
jbe
sub
xor
dec
int3
add
add
mov
mov
and
add
decb
cwtl
jo
or
fs
mov
sbb
add
inc
div
lcall
adc
sub
mov
xchg
fisubrl
aam
pusha
rcrl
inc
fsubrl
std
les
test
add
adcb
rolb
mov
rclb
inc
cmp
mov
dec
push
or
pusha
sbb
jo
sahf
pop
int3
or
leave
out
mov
add
dec
dec
push
pop
or
enter
mov
sbb
jno
lds
movsb
xor
ret
loopne
sbb
andl
pop
inc
add
inc
cvtpi2ps
push
pop
mov
or
insl
sbb
imul
lret
mov
xor
scas
dec
out
lods
sbb
sub
mov
nop
cwtl
fisubrl
adc
jb
sub
push
aam
jb
bound
cmp
or
dec
add
or
sub
adc
imul
leavew
je
daa
movsl
bound
sarb
xchg
test
roll
pushf
notb
or
xchg
lods
adc
xor
sub
and
lea
sbb
mov
ss
sbb
es
cwtl
mov
add
rorl
and
movsb
pop
insb
dec
out
sahf
inc
vdivsd
push
test
dec
jge
push
adc
test
std
xchg
push
add
or
adc
sub
lea
mov
sub
xor
or
pusha
xchg
ret
test
inc
cli
add
push
insb
push
sub
inc
ss
xchg
push
ret
xchg
adc
test
fdivrs
divb
add
inc
mov
ret
xor
fs
mov
stos
xorl
les
mov
adc
mov
push
dec
or
ret
cli
xor
mov
xor
xorb
cwtl
mov
dec
dec
test
push
fistpl
push
push
inc
inc
test
dec
rolb
mov
cwtl
fs
xchg
rclb
dec
or
mov
and
and
and
sub
ret
dec
jbe
lret
sub
insb
cvtps2pd
adcb
mov
pop
and
cmp
add
sti
stos
sbb
pushf
orl
sbb
jno
pop
mov
xchg
fs
push
dec
loop
and
lock
adc
jmp
rol
test
pop
cmp
sub
cmp
in
add
mov
sbb
or
data16
mov
popa
test
ret
mov
std
and
int3
imul
sub
orb
jbe
jo
xchg
test
mov
jbe
mov
mov
fidivs
mov
cmp
test
pop
push
inc
inc
or
pushf
xchg
push
pop
and
les
adc
fucomp
lds
sub
int3
dec
sbb
and
inc
jl
cmc
test
call
sub
pop
jo
mov
adc
sub
or
dec
aam
dec
shll
test
xor
sub
adc
shlb
sahf
mov
xchg
ret
push
xchg
add
inc
mov
add
xor
dec
inc
les
and
sbb
cwtl
loop
cmp
in
cmpl
xchg
and
stos
pop
add
pusha
pop
addl
movsb
xor
dec
movsb
dec
cmpsb
mov
xchg
sub
rolb
xor
push
rcl
sbb
dec
or
test
mov
jbe
push
xchg
mov
pop
xor
adc
sub
aam
cmpsb
jo
adc
add
sub
mov
dec
mov
push
cmpl
pop
push
xchg
js
mov
xor
and
push
pop
aam
xchg
inc
xor
or
inc
sub
fs
mov
lods
pusha
mov
fdivs
test
cmp
cwtl
call
push
mov
es
or
sub
pop
xchg
push
inc
jb
sbbb
push
pop
adcb
pusha
aam
add
xchg
adc
dec
mov
add
xor
xor
addb
jp
les
insb
sbb
jo
add
pushf
mov
ss
mov
adc
pop
fnstenv
notb
ds
adc
add
fcoms
push
dec
push
adc
xchg
sub
sar
decb
jo
xor
nop
lret
mov
and
add
shlb
mov
push
daa
add
add
sub
int
mov
mov
and
or
push
dec
cmp
inc
pop
jle
mov
test
push
push
inc
fdiv
and
lock
orb
sbb
xor
addb
adc
and
inc
or
or
sub
lret
sub
dec
add
lretw
add
adc
adc
fdivrl
adc
jp
jne
js
enter
insl
cmp
add
iret
sub
inc
fs
ds
enter
push
sbb
clc
mov
mov
sub
pop
shlb
test
aam
and
push
sbb
test
lcall
fmuls
pop
inc
and
inc
xchg
mov
sarb
inc
dec
push
ret
fsubrs
loopne
inc
xchg
cld
push
add
or
or
data16
addb
rcrb
ret
and
adc
xchg
lods
xor
or
dec
inc
sbb
push
pinsrw
adc
and
push
sbb
dec
enter
out
push
dec
pushf
push
or
xor
fidivrs
inc
cwtl
push
sub
or
push
nop
xchg
mov
popa
rorb
push
or
push
lret
push
cmpsb
sbb
xchg
inc
and
and
lea
or
lods
pop
js
xchg
pop
sbb
div
dec
ljmp
test
cmp
shrb
sub
pop
test
test
xchg
test
and
push
cmpb
loopne
inc
inc
ror
xchg
pop
iret
test
adc
cltd
rolb
out
and
fcomps
or
xchg
mov
inc
sbbb
pop
cwtl
add
xchg
leave
or
jle
insb
mov
push
sub
sub
pop
bound
and
add
dec
xchg
fsubl
data16
pusha
inc
lock
xor
sub
inc
subb
mov
fs
push
idiv
scas
xor
aam
dec
xor
fsubl
mov
sbb
pusha
cs
or
push
addb
sbb
mov
sbb
sarb
pop
push
push
data16
sbb
add
pop
into
jb
dec
and
adc
jecxz
js
andb
daa
ret
mov
in
pop
mov
pushf
pop
cs
sbb
cltd
cmp
andl
mov
adcb
orb
rorb
mov
cmpb
shlb
and
or
aam
sbb
xchg
inc
push
movsl
push
xchg
add
and
sbb
cmpb
xchg
and
xor
xor
push
inc
mov
mov
sar
pop
push
sub
add
or
jle
or
iret
pop
push
rolb
test
addb
cmp
insb
mov
sbb
fs
or
mov
push
in
adc
and
fimull
cwtl
cmp
xchg
push
imul
push
xor
xchg
je
fs
or
xorb
lret
int3
insb
mov
sbb
xor
dec
add
mov
inc
push
sbb
bound
add
push
cmp
xlat
inc
sub
je
loope
inc
add
dec
dec
test
add
int3
sub
or
ret
rcl
es
sbb
cmpsb
rclb
xchg
add
js,pn
pop
adc
jbe
in
cwtl
rclb
arpl
sbb
fildll
sub
xchg
ret
adc
inc
jl
xchg
xor
lret
adc
jl
data16
dec
data16
sbb
inc
sbb
in
add
inc
inc
and
in
sub
or
mov
or
mov
mov
push
xor
or
sub
cli
mov
sbb
repnz
nop
add
fs
pushf
loopne
daa
dec
xor
cmpsb
rcl
sbb
or
cwtl
data16
pushf
addb
loopne
sub
xchg
jno
xorb
inc
mov
ret
bound
test
mov
aam
ss
mov
push
xorb
xchg
dec
out
mov
call
or
sub
das
xor
lock
push
push
or
and
xor
xorb
ret
xchg
push
stos
negb
lock
pop
ss
subl
adc
aam
xchg
repnz
sub
enter
and
sbb
xchg
xor
push
sbb
xchg
push
dec
hlt
adc
cmp
rolb
and
ss
or
push
add
xchg
or
into
les
push
movsl
mov
mov
mov
outsb
call
push
outsb
ljmp
dec
addr16
jo
dec
or
nop
in
add
jle
movsl
test
adc
push
mov
test
test
fs
xor
arpl
insb
or
and
mov
adc
pop
push
adc
inc
pusha
addb
cli
xor
test
into
jbe
xchg
mov
mov
jp
inc
fst
enter
adc
fs
js
fs
clc
test
xchg
push
push
xchg
push
jb
add
xlat
or
or
sbb
std
or
dec
or
aaa
mov
dec
pushf
es
add
popa
jo
cmp
es
push
roll
push
adc
sub
sbbb
mov
cwtl
push
cmp
loop
test
movb
jb
xor
dec
inc
cmp
xor
add
fidivrl
clc
mov
inc
mov
inc
test
daa
mov
adc
mov
lods
pop
inc
bound
mov
pushf
fs
mov
out
stos
pushw
ljmp
fmuls
sbb
ljmp
pusha
cmp
push
add
jp
js
xchg
xchg
add
push
idivb
xchg
ret
xor
lock
loop
xchg
shll
loopne
xchg
xor
sahf
and
arpl
add
rorb
jle
or
and
movsb
mov
push
jp
dec
push
push
adc
aaa
cmpb
dec
cmp
cltd
xchg
adc
jno
rorl
sti
add
sbb
imul
jg
enter
outsb
mov
loopne
mov
add
cmp
bound
mov
push
adc
push
sub
sbb
ret
or
je
adc
enter
adc
xchg
cmp
adc
leave
mov
push
mov
jo
jp
xor
sub
js
inc
insl
sbb
inc
sub
or
pop
lret
xor
dec
popa
push
mov
add
sbb
ret
xchg
pushf
ljmp
cmp
add
push
push
pop
pop
and
inc
add
cmp
enter
dec
lock
subb
xor
call
mov
pop
jo
mov
xor
inc
mov
or
andb
nop
jecxz
test
and
push
or
outsb
sub
add
mov
rcr
xor
push
pop
or
add
dec
loope
pop
clc
test
sbb
adcb
lods
add
sbb
and
mov
push
adc
adc
add
xchg
inc
ret
pop
cs
add
add
pop
cmpsb
or
pop
dec
or
test
sbb
inc
fbstp
adc
inc
mov
stos
xchg
add
clc
xchg
aaa
ljmp
xor
lock
xchg
mov
mov
push
xchg
mov
aam
adc
fs
xchg
push
mov
sbbb
jo
inc
lret
ret
xchg
add
into
test
pop
pop
pusha
mov
inc
cld
andb
hlt
xrelease
incb
imul
xor
jbe
sub
and
mov
sbb
pop
adc
xchg
or
hlt
sub
mov
cwtl
cmp
mov
insb
sub
inc
push
pop
mov
and
xchg
pusha
push
or
cmp
jp
adc
xorb
sbb
pop
add
pusha
rclb
test
popa
movsl
les
add
xchg
mov
push
inc
sub
and
testb
jae
gs
enter
push
xchg
xchg
lods
and
or
or
pop
mov
mov
out
push
or
dec
inc
push
mov
mov
mov
rorl
dec
mov
fildl
cmpsb
xchg
data16
adc
dec
jo
movsb
ret
xor
stos
xchg
ret
xchg
jo
loopne
sub
dec
adc
dec
push
sahf
call
sbbb
push
or
mov
rcrb
inc
insb
push
sbb
test
sbb
sarb
in
shlb
leave
inc
sub
and
push
and
mov
shrb
notb
and
or
js
ret
and
add
testb
pop
xorb
inc
bound
mov
cmc
push
pusha
xor
mov
add
and
fs
and
hlt
mov
inc
xchg
mov
sbb
popa
test
or
jb
sub
movsb
pusha
mov
add
ss
cmp
sti
test
xchg
test
xor
adc
mov
add
test
cmp
xor
adcb
push
adc
mov
cwtl
xor
pop
and
js
push
shr
test
data16
mov
enter
inc
les
ss
inc
push
cltd
popa
sbb
in
cmp
in
cmpsb
xchg
xor
sbb
addb
into
test
cmpsb
in
dec
and
dec
call
xchg
push
or
adc
or
push
sub
fcmove
dec
lret
mov
in
pusha
es
lcall
inc
or
xor
cs
mov
add
xchg
add
pop
and
or
or
sbb
sbb
mov
call
xchg
sub
mov
xchg
push
dec
inc
cmc
jp
mov
lock
aam
dec
jg
inc
fdivs
xchg
out
popa
hlt
pop
in
add
add
lahf
xlat
push
push
movsl
fdivl
scas
or
popf
sbb
mov
jo
shl
xchg
orl
sub
sub
cmp
sbb
dec
daa
add
shlb
cld
aas
add
xor
fnstenv
mov
adc
cwtl
js
add
mov
push
ror
loopne
fcoml
push
jo
test
orb
hlt
inc
jle
and
jne
push
or
sbb
push
jb
pop
inc
pop
cltd
jmp
or
fiaddl
das
sbb
and
sbbb
sub
mov
adc
or
ljmp
in
add
rol
mov
adc
adc
cld
ljmp
adc
push
xor
callw
xchg
ret
mov
jo
bound
inc
xchg
cltd
fwait
adc
ljmp
ficompl
sub
sbb
mov
enter
rclb
sub
test
ret
enter
incb
ljmp
push
xor
inc
dec
add
and
js
lret
add
dec
cmp
add
sbb
cmpb
xorb
push
xchg
or
push
andb
mov
cwtl
dec
js
js
jbe
and
out
nop
push
jb
test
inc
movsb
shrb
or
jno
rolb
sub
dec
or
add
dec
cmp
into
outsb
fcomps
or
sbb
cmp
pop
inc
add
add
and
adc
orb
and
inc
pusha
outsb
and
cli
in
lcall
mov
cmp
xchg
rolb
dec
dec
cltd
out
test
xor
jo
loopne
adc
lods
sub
outsb
clc
sub
cwtl
lret
sub
inc
push
mov
dec
loop
add
and
add
loopne
lret
xchg
mov
daa
hlt
sub
push
ret
cwtl
mov
sbbl
push
add
rolb
ds
jbe
or
adc
pushf
subb
fisubs
dec
pop
ret
or
xor
faddl
dec
popa
pusha
inc
push
push
xchg
adc
sub
test
pop
notb
adc
insl
add
inc
fs
daa
inc
adc
sbb
and
xchg
and
and
xchg
push
lea
into
jg
add
cs
ljmp
rolb
fiaddl
mov
in
cli
ret
and
xor
sbbb
pushf
or
or
data16
subb
and
jg
js
inc
or
mov
loopne
sbb
or
es
push
mov
add
lods
divb
decb
push
adc
lods
push
xchg
pop
add
data16
add
cwtl
dec
data16
sahf
mov
push
data16
push
rcll
adcb
xor
loopne
push
mov
movsb
pop
pop
pop
ret
inc
pop
push
dec
cwtl
or
mov
scas
ds
es
add
leave
mov
out
and
add
push
jle
add
pop
jl
lock
push
and
les
or
js
int3
add
adc
outsl
data16
inc
sbb
sbb
and
mov
mov
add
xchg
subl
aam
push
mov
dec
jo
loop
int3
adc
movsl
xor
mov
push
fistps
jecxz
outsb
pop
in
inc
or
and
jle
push
sbb
jg
ret
arpl
inc
dec
les
pop
adc
cmp
fs
nop
sbb
insl
mov
or
in
gs
cmpsb
mov
popf
popa
or
sbb
inc
mov
push
lds
push
and
lret
xchg
add
cltd
and
les
or
and
and
or
scas
mov
xchg
jo
data16
add
adcb
xchg
cmp
into
add
inc
dec
movsb
pusha
jle
loope
sub
sub
push
js
add
dec
les
mov
ret
or
push
cmp
xor
rolb
mov
xchg
enter
fcoml
push
ljmp
or
xor
pop
rolb
dec
push
call
jmp
xchg
xor
xchg
xor
test
sbb
mov
add
int3
scas
fcmove
inc
ret
inc
push
xor
enter
inc
pop
loopne
and
int3
add
nop
mov
lods
insl
pusha
nop
mov
rol
les
in
pop
leave
data16
push
or
fisubl
dec
xchg
inc
and
popf
push
loopne
hlt
sub
inc
or
mov
xor
mov
push
test
sub
pop
test
dec
inc
push
xchg
xor
push
mov
pop
mul
adc
bound
adcb
xor
dec
xchg
push
dec
inc
aam
in
add
lock
mov
push
sub
mov
mov
push
dec
adc
push
jl
pop
inc
mov
jo
sbb
and
shrb
and
add
adc
add
movsl
adc
cmp
mov
aam
inc
xor
or
mov
adc
rorb
jle
sbb
cmpsb
gs
lret
mov
or
mov
js
in
adc
lret
ljmp
push
je,pt
inc
xchg
push
sub
push
shll
sbb
dec
add
inc
lret
aam
cwtl
xchg
clc
test
add
push
add
ret
adc
jo
adc
add
inc
inc
shll
insb
dec
inc
or
cmp
adc
sub
lret
jg
popa
cltd
or
mov
xor
test
pusha
lret
xchg
inc
hlt
xchg
test
data16
aam
push
ret
add
andb
and
cmp
xor
sbb
xchg
mov
loop
lret
mov
or
dec
loope
inc
mov
roll
pop
ljmp
inc
call
sub
mov
inc
and
rolb
insb
add
adc
mov
jp
or
adc
clc
and
dec
push
dec
lret
movsl
xchg
es
xchg
mov
xchg
mulb
mov
pop
fs
bound
push
jp
mov
jge
pop
sub
lret
movsb
and
dec
mov
movsl
jb
xchg
in
or
add
ljmp
out
or
dec
adc
les
adc
dec
cmc
mov
jo
add
ret
cmp
sbb
mov
sbb
pop
sub
rorb
xchg
fisubrs
int3
sar
mov
inc
mov
add
movsb
push
cmp
pop
and
mov
xchg
nop
mov
push
ret
jo
adc
or
dec
je
iret
push
cli
insb
cwtl
movsb
xchg
or
add
push
dec
shll
gs
sahf
xor
inc
insl
pushf
jl
mov
mov
pop
mov
les
sahf
data16
adc
mov
add
dec
mov
and
shrb
fwait
jb
and
add
adc
sub
mov
or
xchg
pushf
mov
or
cwtl
movsb
xor
ss
mov
sbb
pop
sbb
jg
popa
and
dec
repnz
pop
adcl
es
lds
aad
mov
mov
or
xchg
or
movsl
insb
fsubrl
jl
enter
inc
mov
aam
sarb
das
xchg
int3
pop
adc
and
xorl
rclb
mov
clts
adc
mov
inc
ds
ret
and
and
into
shrl
inc
adc
dec
sub
and
cmp
imul
cs
sbb
sub
jp
rol
and
or
pushf
xchg
addb
je
sub
fs
cli
and
sub
xor
xchg
push
jl
inc
push
or
and
into
lret
mov
xchg
adc
xorb
cld
push
pop
and
xor
mov
sub
and
sub
out
pop
lods
mov
lock
fists
movsl
incl
jge
ret
dec
sbb
inc
popa
add
pop
xor
push
cmpsb
outsl
lcall
enter
jne
cmp
jg
jmp
sbb
pop
cmp
dec
shrb
add
sub
fsts
and
ficomps
scas
push
dec
add
ds
push
adc
popa
xor
dec
add
push
cmp
aas
nop
push
enter
aaa
adc
imul
lret
add
fsubs
outsb
mov
dec
stc
add
sub
xor
fdivl
rol
push
cmp
or
mov
into
xchg
mov
push
pop
jg
sti
jbe
iret
mov
add
int
out
jle
push
testb
add
adc
or
decl
sbb
hlt
in
decl
fbstp
mov
call
jecxz
mov
xor
daa
in
outsl
out
jge
stos
insb
cmp
fcoms
add
popl
jp
rclb
loopne
frstor
das
add
out
mov
or
mov
adc
sti
lahf
std
mov
out
mov
fisubs
add
pop
outsl
incw
jae
daa
es
push
cmp
jnp
mov
fs
js
mov
pop
cmp
inc
sub
jecxz
lock
cmpsl
jg
jl
lret
mov
and
xor
xchg
insb
mov
mov
std
cld
jae
fisttpll
xchg
sub
push
fnstsw
push
in
fists
cmp
outsl
je
mov
je
sti
bswap
xchg
mov
rclb
xchg
loop
daa
imul
lods
mov
mov
dec
lock
lock
adc
dec
dec
pop
js
inc
add
add
cs
faddl
jle
add
aas
dec
fsubrl
xchg
out
push
lock
sti
shrd
inc
hlt
xorl
xor
sarl
rcrw
outsl
testb
mov
mov
addr16
sbb
fs
fiadds
xchg
xchg
aas
cmpb
imul
pop
cs
or
ja
jne
dec
inc
jmp
sarl
les
pushl
jbe
mov
in
cld
faddp
imul
sub
movl
pop
ja,pn
ret
mov
push
fucomip
adc
or
ss
xor
loope
scas
call
mov
mov
sub
mov
inc
sbb
fbstp
cltd
adc
jbe
addb
jmp
lods
sbb
push
roll
inc
nop
ss
fldl
jp
imul
aas
jo
sbb
loopne
shr
push
out
adc
out
ja
pop
jge
test
cmp
pop
jbe
sarl
lahf
sti
dec
icebp
mov
filds
lea
cmpsl
fnsave
pop
sbb
push
dec
adc
data16
push
testl
pop
or
mov
clc
stc
mov
subl
fs
imul
loopne
inc
notl
cmp
xor
pop
movl
mov
mov
aad
xor
cmpsb
inc
pop
out
insl
sbb
mov
cmp
fnstenv
test
push
iret
push
xor
nop
js
pop
rcr
and
sbbl
jmp
fimull
out
cwtl
clc
cltd
push
sub
xchg
int3
mov
arpl
je
mov
or
loope
pop
inc
pop
inc
out
mov
cmp
lretw
cmp
es
mov
test
inc
clc
out
add
mov
ljmp
mov
fistl
fistpl
repnz
and
ljmp
ds
pop
mov
jbe
jmp
cmp
mov
clc
sbb
stos
inc
ret
adc
psubq
jg
aaa
xchg
sub
mov
cmp
in
scas
sti
test
mov
stc
inc
aaa
ljmp
sbb
xor
and
push
mov
inc
dec
mov
adc
add
cmc
jne
dec
jo
cmc
pusha
aam
mov
frstor
call
xchg
mov
mov
inc
out
jg
add
fucomi
cmpsb
and
cmp
xchg
mov
bound
inc
fisttps
stos
ss
jmp
cs
inc
in
dec
pop
fcmovnbe
pushl
xchg
dec
dec
adc
aad
mov
jb
pop
scas
inc
std
xor
push
push
cmp
jge
pop
pop
push
add
lods
mov
gs
or
pusha
fcomps
mov
loope
addr16
inc
movsl
fstps
stc
iret
repnz
repnz
mov
cmp
adc
pop
jl
in
jmp
inc
cli
insb
mov
subl
and
mov
mov
and
stos
push
addr16
ret
in
xor
fidivrl
aaa
lret
roll
or
adc
sarl
push
adc
add
dec
in
je
paddusb
adc
jl
lds
imul
pop
push
mov
add
xor
hlt
out
xor
mov
dec
mulb
xor
lahf
sar
or
cmpsl
lret
cmp
imul
push
mov
loop
cli
pop
push
or
mov
dec
or
ret
ja
mov
push
outsl
pusha
shl
aas
mov
ja
add
adc
rolb
mov
sub
pusha
cs
bound
repz
fsub
iret
mov
cmpl
sbb
inc
or
cmpsl
mov
lods
int3
aaa
sub
xor
sarl
aas
andb
mov
pop
mov
push
movsl
sub
lahf
popf
pop
aad
test
stc
loopne
xchg
adc
jo
out
cmp
xor
inc
ss
push
ds
cmpsl
pop
jg
aas
idivl
and
dec
pop
orl
pop
sub
jg
faddl
fsts
loopne
sti
orl
push
ja
xchg
mov
leave
loope
scas
push
mov
pop
mov
and
push
mov
lcall
cmp
mov
insl
repz
clc
int3
lret
and
adc
pop
gs
mov
das
imul
into
loopne
emms
lahf
jmp
cmp
cmp
fdivl
fnstsw
rorl
call
cwtl
shl
pop
xor
popf
lock
adc
out
push
adc
mov
adc
sbb
cmc
out
mov
xchg
es
pop
daa
clc
pop
cmp
fs
jne
pop
jle
mov
lcall
xchg
jmp
and
jg
fisttps
pop
js
loope
inc
stos
xchg
adc
std
add
cmp
push
ja
jg
arpl
inc
daa
pop
daa
cs
out
hlt
iret
outsl
push
jbe
in
jne
fiaddl
jmp
scas
sar
fmull
push
jg
xchg
mov
add
jg
negb
rsqrtps
mov
pop
inc
aam
fs
rclb
rol
add
or
cmp
pop
lods
ret
jg
jg
add
ljmp
cmc
fisttpl
pop
outsb
jecxz
cmpsl
in
inc
dec
movsl
sub
mov
add
test
jmp
orb
xchg
or
scas
outsl
jne
iret
push
inc
and
sbb
adc
cmp
cwtl
pop
mov
xor
xor
es
add
mov
lahf
ret
and
push
xchg
adc
xor
fistpll
jp
jp
cmp
xchg
sbb
imul
out
popf
inc
sti
inc
inc
dec
mov
mov
cmp
std
repz
fs
pop
xorl
aas
xor
sbb
aam
sub
and
aas
adc
or
mov
jg
cmc
mov
ljmp
adc
or
adc
pop
incl
lcall
mov
add
imulb
jecxz
jae
mov
xor
idivb
mov
out
int3
aas
out
aas
push
add
sbb
scas
mov
mov
fildl
subl
fwait
ja
adc
fdivrp
pop
int3
incl
icebp
and
adc
dec
adc
out
adc
add
ds
jmp
jg
in
repnz
hlt
outsl
dec
imul
mov
inc
sbb
addb
xor
out
pop
mov
cs
sbb
mov
test
sbb
xchg
mov
fcoml
mov
out
loope
lcall
mov
loope
push
fisubrs
decb
testl
int
fmul
addr16
pop
fdivr
loopne
loope
xor
mov
fistps
aaa
inc
cmpsl
inc
adcb
out
jns
in
hlt
gs
push
negl
mov
loop
cmp
into
jmp
js,pn
inc
pop
sub
in
icebp
outsl
ret
sti
sar
ds
jg
xchg
repnz
pop
int3
mov
out
jb
jmp
in
in
cmp
push
aas
xor
sarl
push
int3
mov
lock
pushl
mov
pop
dec
mov
fs
aad
lcall
rcl
movl
hlt
adc
scas
les
mov
mov
out
into
decb
enter
push
and
sbb
xorb
jmp
sbb
lods
jle
movsl
imul
cmp
leave
jns
mov
cld
lods
ljmp
clc
dec
cld
push
jg
sub
mov
push
mov
nop
push
mov
jg
ljmp
je
fwait
jle
xor
in
and
aaa
icebp
movsb
xor
cmp
jecxz
adc
mov
add
adc
pop
call
enter
scas
rorl
xlat
cmp
jecxz,pn
push
jne
sahf
xor
xchg
scas
loopne
add
mov
das
mov
sbb
decl
aas
mov
xchg
xchg
xchg
std
jg
movsb
mov
imul
jne
pop
push
jne
xor
cmp
cmp
xchg
outsl
rclb
xchg
filds
js
aas
in
xchg
mov
jmp
mov
fisubrl
test
sub
addr16
icebp
jg
lahf
mov
adc
mov
scas
ljmp
negl
iret
mov
call
xor
pop
pinsrw
imul
repz
loopne
repz
jmp
loopne
das
call
fmul
sbb
cmpsb
notl
push
jg
jg
inc
pop
rcr
ja
push
lret
adc
pop
push
std
inc
lret
popa
mov
incl
mov
cli
ja
xlat
cmc
lahf
imul
lods
ds
cmp
iret
std
mov
lock
sti
cmp
inc
mov
mov
in
sbb
pop
xchg
sti
sub
out
idivb
jo
jle
jo
dec
push
push
jmp
pop
in
pop
sti
push
adc
jae
pop
xlat
in
add
sbb
push
adc
dec
xchg
call
xor
in
xchg
inc
xor
push
push
clc
inc
pop
mov
shrl
outsl
dec
and
or
in
leave
aad
sub
scas
in
das
xchg
push
and
aad
adc
inc
cli
pop
scas
cmp
cmpsb
hlt
and
dec
sub
lahf
jecxz
cmp
sub
adc
incl
repz
push
hlt
adc
sbb
jns
fwait
or
or
rclb
cmc
jg
incl
push
fisttpll
orl
pop
std
or
je
cmpsb
sub
stos
pushl
repnz
push
or
inc
mov
xchg
sti
sbb
mov
sbb
or
aaa
mov
mov
bound
aaa
push
jbe
jecxz
out
push
decb
dec
adc
shlb
or
cmp
or
incb
xchg
mov
inc
movsl
inc
nop
sbb
inc
cmp
sub
loopne
daa
fimull
xor
jg
inc
sbb
pop
push
jne
inc
fdivr
push
rolb
in
ret
cmpsl
les
int
clc
mov
jmp
les
xchg
dec
clc
fbld
test
mov
nop
xchg
out
xchg
mov
inc
sub
out
divb
mov
cmp
jno
inc
fcomip
pop
andb
addr16
pop
out
mov
shlb
push
cli
ja
jnp
dec
sti
leave
dec
test
mov
and
jnp
cld
lcall
add
inc
shll
scas
cli
mov
imul
jmp
mov
adc
push
fisubrl
mov
ja
movl
add
incl
xor
lret
add
data16
mov
sbbl
adc
outsl
testb
int
xor
push
pop
jecxz
cli
ret
sbb
sti
dec
push
mov
xchg
aam
xchg
repz
div
out
loopne
xor
push
add
push
sub
out
imul
mov
mov
mov
pop
inc
fcos
ja
outsb
mov
push
mov
sbb
notl
loope
push
sub
jmp
in
insb
mov
out
fsubr
icebp
dec
lods
xor
add
getsec
or
fisubrs
push
mov
jo
insl
pop
xchg
add
nop
test
xchg
pop
dec
pop
push
imul
out
gs
mov
adc
xchg
lahf
outsl
xor
inc
pop
mov
sub
adc
jmp
jmp
inc
leave
mov
push
sub
sar
pop
out
ss
roll
mov
imul
subl
xchg
fsubrp
or
add
jnp
sar
sbb
xchg
ds
outsl
sub
push
jmp
sub
lock
dec
inc
ljmp
andw
out
pop
push
repnz
jb
cmp
mov
int3
dec
es
inc
and
jae
cmpsl
adc
nop
mov
outsl
clc
mov
std
inc
xchg
loopne
add
mov
mov
outsl
in
pop
mov
mov
dec
cs
shrb
fistpll
repnz
mov
mov
fisubrl
mov
dec
popa
jns
xchg
fisttps
fiadds
fwait
cmpsb
call
mov
shlb
imul
jle
jg
shr
adc
std
pop
int
jg
lahf
xchg
mov
insl
movsl
sbb
rorb
dec
and
jb
addr16
jl
shll
imul
jle
and
inc
popf
push
bound
jnp
pop
test
shlb
mov
mov
sub
in
inc
pop
lods
insb
rclb
push
mov
lahf
inc
nop
jl
jmp
or
cmp
push
and
dec
les
std
xchg
or
mov
lock
daa
mov
sbb
lcall
adc
add
jecxz
xor
out
incl
stc
adc
pushf
loope
pop
test
jne
clc
push
push
cli
insl
inc
mov
xor
or
scas
adc
test
pusha
rcr
divl
nop
cmp
je
and
div
incl
jmp
mov
addl
jmp
xlat
cmovb
pop
push
xor
pop
jo
push
repnz
negl
mov
add
xor
adc
test
movsl
cmpsl
rorb
aas
mov
xchg
mov
fs
mov
out
sbbb
cmp
inc
in
pop
cs
mov
jnp
jge
mov
and
fiadds
push
repz
push
fwait
mov
sub
pop
mov
dec
mov
fidivrl
ja
jg
jmp
push
shlb
bound
sbb
or
ret
push
dec
dec
mov
fcmovbe
mov
sar
push
outsl
and
dec
push
cmpsw
movsb
push
bound
bound
mov
scas
and
popf
test
pop
sub
push
sbb
les
lds
loopne
call
push
adc
rorl
xor
iret
add
fs
pop
inc
scas
in
jecxz
decb
pop
pop
orb
scas
pushf
mov
aas
hlt
hlt
or
cs
jg
inc
es
lret
xor
daa
lahf
mov
repnz
notl
xor
jg
sbb
or
out
lds
xor
xchg
jb
stos
subl
dec
shlb
adc
add
aad
das
lock
mov
rcll
mov
clc
divl
icebp
adc
jno
sbb
lock
jns
sbb
bound
cmp
sub
repz
add
adc
loope
fnsave
test
ds
cmp
outsl
psubd
out
mov
inc
sbb
add
imulb
xchg
xchg
loop
xor
cld
movlps
je
addl
push
push
fwait
jl
lock
dec
cmpb
scas
or
in
xchg
into
mov
popa
sbb
xor
ffreep
xor
repz
iret
adc
fwait
and
out
jl
in
idivl
enter
cmp
mov
iret
dec
push
int
push
call
sub
stos
pop
loope
and
pop
test
push
and
enter
inc
daa
hlt
xor
mov
scas
leave
outsb
cwtl
xor
inc
lods
out
mov
sub
inc
jne
jp
push
dec
loopne
jg
sub
sbb
mov
sbb
out
sbb
push
push
int
jmp
stos
ja
sbb
mov
and
dec
push
std
scas
jl
fwait
jge
add
dec
push
cli
inc
xchg
scas
pop
mov
cmp
inc
subb
data16
xchg
xchg
pop
leave
loop
add
mov
sub
in
movl
mov
jg
dec
and
lds
mov
std
sahf
lahf
mov
popf
add
int3
loop
cmp
pop
fcmovnbe
fistpll
xchg
sbb
cmp
push
sub
out
jne
or
data16
stos
inc
and
fcomi
or
xchg
xchg
in
cld
int
sbb
add
jl
push
std
inc
bound
das
in
jae
add
add
jecxz
xlat
std
mov
rorb
pop
sub
fwait
xor
pop
push
sahf
dec
jns
addr16
or
pop
out
jg
stc
push
rcll
pop
xchg
in
xlat
push
clc
sub
mov
mov
jo
mov
jnp
incb
lods
pop
out
outsl
add
pop
pop
test
lock
sbb
mov
or
mov
hlt
rcr
cmc
pushf
adc
imul
mov
lods
mov
lret
pop
pop
push
mov
pop
jnp
sti
cs
cwtl
jns
loope
or
in
mov
in
fstpt
jmp
xor
pop
cmp
aas
mov
les
inc
fwait
cmp
push
fmul
test
pop
jns
rol
jmp
inc
add
cmc
jbe
popf
fistl
notb
in
add
idiv
iret
jmp
add
std
stos
cmp
stos
cmp
cmc
lock
jge
jecxz
mov
jne
pop
leave
daa
inc
cwtl
and
pushl
jno
push
fs
mov
jo
decl
mov
jmp
jns
addr16
popf
xchg
mov
inc
inc
sub
js
mov
adc
mov
push
sbb
mov
lret
push
jns
sahf
pop
mov
mov
loope
or
mov
sbbl
movsb
fsubr
sbb
mov
xchg
jns
loope
sbb
lcall
sbbb
hlt
movsl
or
cmp
inc
test
js
pop
push
shlb
int3
mov
or
pusha
mov
add
xchg
xchg
test
add
xor
mov
lock
push
clc
push
mov
fidivrs
out
imul
or
sbb
mov
loopne
cmpb
xchg
aad
ja
jnp
ficomps
push
lock
call
jg
jmp
enter
add
cmp
sbb
mov
and
sbb
lds
jle
cmp
push
mov
or
mov
adc
dec
or
fsts
mov
xchg
iret
icebp
addr16
adc
popa
and
add
push
hlt
pop
cmp
imul
push
adc
icebp
push
cli
in
mov
popf
pusha
in
test
cwtl
mov
loopne
and
mov
mov
scas
jg
mov
addr16
fcompl
inc
cmpsl
cmp
mov
dec
cmp
faddp
push
decl
push
imul
cmp
enter
pop
fsubrl
push
mov
xchg
out
sub
inc
cmp
call
jne
add
test
xor
or
xchg
test
adc
mov
add
in
push
xor
mov
push
clc
and
sub
sub
add
pop
xlat
psubsw
stc
ljmp
mov
leave
dec
jno
xor
cld
icebp
add
jmp
mov
cs
xor
sti
ljmp
outsl
mov
lea
sub
sbb
cmc
test
bound
int3
cli
fsubs
cld
dec
xchg
dec
and
adc
orb
int3
adc
lods
xchg
dec
mov
iret
hlt
jg
movlps
dec
pop
ja
sub
or
mov
xchg
adc
push
divl
adc
inc
sarb
inc
lret
adc
clc
pop
xchg
incl
dec
sub
mov
and
and
cmpsb
ficomps
int3
fdivrs
lea
dec
adc
sub
and
mov
adc
pushf
mov
lahf
mov
add
pop
sti
push
call
cld
xor
push
je
std
sub
adc
js
xchg
loope
or
push
loope
sbbb
inc
jno
push
inc
dec
pushl
daa
mov
std
inc
clc
sbb
mov
sbb
jg
ret
push
pusha
mov
mov
stos
push
imul
scas
pop
subl
testb
jle
fisubs
incl
int
ret
add
lods
sbb
or
ret
out
mov
paddw
insb
mov
jmp
ja
sbb
in
sbb
out
xor
add
cmp
push
repnz
lds
sbbl
mov
cmp
xor
xchg
leave
lcall
incb
sahf
jbe
aas
imul
movsl
aam
jecxz
push
out
mov
test
mov
je
loopne
cmp
fsts
orb
xlat
mov
or
sub
rcrl
aaa
adc
popa
cld
out
fsubl
add
and
scas
outsl
inc
pushl
test
inc
shlb
xor
add
xchg
sti
mov
mov
stos
or
iret
dec
push
mov
or
mov
jge
inc
paddw
or
pop
sbb
in
gs
jl
fdivr
or
shll
ja
mov
xchg
dec
ss
inc
ljmp
xor
icebp
scas
sbb
loopne
adc
lahf
ret
cld
xor
or
fmull
pop
xchg
sbb
pop
mov
push
in
das
cmp
mov
mov
sbb
adc
jg
cld
ljmp
lea
fwait
test
into
cmp
mov
cli
push
xlat
push
dec
jmp
icebp
add
mov
adc
dec
stos
cmp
mov
in
or
dec
inc
pushf
mov
cmp
mov
push
inc
ljmp
add
or
xor
lcall
or
ss
addr16
jmp
ja
xchg
repz
xor
push
inc
loop
dec
or
je
aas
xchg
scas
test
out
cmp
mov
fs
xor
cmp
sahf
mov
dec
fstpt
mov
xor
jns
test
add
je
dec
jns
mov
sub
or
pusha
dec
or
negl
cmp
test
add
pushl
ret
movsl
xor
add
push
negb
insb
das
push
pmulhuw
popa
sbbl
es
clc
and
jge
jecxz
sub
jns
fistpll
cmp
sub
mov
and
ret
jo
dec
cmp
or
icebp
loopne
add
lea
incb
lock
mov
test
and
xor
xor
cld
xor
pop
pop
call
dec
inc
mov
jmp
xor
lahf
cmc
pusha
dec
pop
add
test
pop
fists
stos
mov
sarb
test
imul
inc
gs
pusha
out
pop
fiaddl
push
push
mov
pop
out
or
scas
cmp
std
je
dec
pushf
dec
sbb
gs
cmp
mov
mov
inc
rorl
mov
mov
test
mov
jecxz
int
mov
clc
mov
popa
fldt
sbb
js
pop
and
mov
movsl
push
decl
push
pushl
pop
pop
sub
and
loope
inc
jl
xchg
xor
hlt
and
sbb
stc
xlat
push
hlt
lret
cli
fidivs
pop
data16
ret
pop
loopne
xor
mov
adc
leave
jbe
xchg
fisubs
pop
and
jl
push
ja
and
push
push
std
add
lahf
lahf
aas
or
or
push
and
scas
jge
dec
clc
daa
xchg
cs
test
loope
sbb
fsts
adc
xchg
aad
pop
lcall
sbb
call
clc
jl
imul
lahf
shl
gs
add
insl
push
js
into
popa
lret
insl
icebp
mov
cltd
ret
ja
adc
pop
sub
mov
cmpsl
out
push
pop
cs
push
jle
mov
aam
pop
jae
ret
mov
pop
popa
enter
cld
outsl
test
ret
mov
in
aas
or
movsl
leave
lods
jo
jg
in
lock
daa
pop
pop
orl
mov
lcall
int
scas
test
cli
out
lcall
jle
stc
or
cmp
sbb
loop
sarl
fadd
aam
imul
aaa
insl
pop
loop
cmp
pop
cmp
fdivrl
jl
dec
cs
jg
mov
popa
aad
js
push
aas
push
or
popa
pop
mov
sahf
push
clc
jbe
mov
rcrb
flds
sbb
pop
xchg
dec
lahf
or
fsubrl
lret
xchg
pop
push
mov
cmp
jp
fs
xor
mov
jle
stc
pushf
in
mov
in
sbb
pop
push
mov
push
push
test
pop
sub
bnd
insl
cmp
out
push
in
push
rcr
std
jg
cmp
push
ficoms
test
and
iret
push
ds
pop
call
add
ja
ljmp
std
fbld
jle
negl
mov
jg
clc
push
rorb
or
call
add
mov
jmp
aad
fisubs
test
cmp
jns
fwait
inc
int
add
test
dec
pop
gs
dec
ljmp
mov
and
pop
sbb
decl
lahf
mov
add
cmp
xchg
cli
pushf
arpl
decl
test
je
mov
push
push
popa
pop
aas
loopne
sbb
jb
inc
rcll
ret
std
repz
jnp
icebp
add
sbb
cmpsb
sub
movsb
push
lahf
addr16
dec
and
cmc
pop
das
pop
sbb
cli
sbb
pop
mov
cld
cwtl
mov
xchg
out
mov
aas
adc
int3
lret
sub
xchg
and
lcall
decl
orl
push
fistpll
sbb
sub
add
mov
jae
ja
jno
xor
daa
push
dec
outsb
jne
bound
or
xor
js
cmp
cld
mov
rcrb
adc
push
lret
loope
xchg
jmp
mov
mov
rolb
add
stos
sar
cmp
add
rorb
jbe
jbe
aad
jg
dec
lock
and
sarl
xchg
lock
adc
mov
cwtl
xchg
push
add
sahf
decb
jno
adc
inc
out
rol
cld
out
pop
inc
pop
push
iret
addr16
push
f2xm1
jecxz
pop
clc
je
lcall
or
mov
pop
or
leave
jmp
int
divl
pop
bound
add
loope
mov
lea
scas
fisttps
js
xor
mov
imul
aam
inc
fisubs
icebp
test
in
jg
cmc
in
sarl
mov
sbb
jne
cmp
stc
pop
pop
add
push
aad
xor
ljmp
pop
jo
mov
out
lret
mov
lock
lahf
mov
jbe
inc
cmp
inc
sub
repz
adc
lock
fcompl
mov
push
mov
hlt
clc
fcoms
decb
lahf
xchg
add
and
mov
and
push
push
cmp
call
mov
out
imul
or
ret
repz
lods
cmp
lea
fsubr
dec
insl
dec
jno
xchg
jle
std
fxch
repnz
pop
sbb
cmp
cmc
add
sarb
insb
or
popf
aaa
imul
or
add
xor
cmpsl
lock
in
or
bound
ror
das
push
std
in
or
add
xor
lcall
ret
xchg
xor
out
xor
xor
fdivr
addr16
call
in
adc
jg
push
rcll
icebp
stc
mov
or
pop
adc
loope
jg
pop
mov
dec
inc
pushl
and
stos
ljmp
xor
decl
mov
adc
jae
add
insl
sub
test
hlt
lock
mov
xor
addr16
push
jg
jmp
xchg
dec
loop
mov
movsl
aam
hlt
in
jmp
jp
sbb
pop
jp
insl
mov
clc
in
aaa
xchg
cmp
sub
xchg
std
adcb
adcl
sub
loopne
mov
pushaw
nop
dec
clc
or
popf
sti
aaa
pop
jl
int
dec
pop
mov
mov
mov
or
xor
sarb
std
xchg
shl
int
ficomps
fdivr
sbb
pop
mov
movb
inc
jp
lahf
pop
mov
lds
mov
sbb
aam
fucom
sub
mov
dec
int
enter
shrl
in
add
movsl
lock
sbb
push
pushf
fs
popf
hlt
aas
stc
sbb
mov
fcompl
enter
push
sub
movsl
pop
pop
ljmp
and
orl
mov
loopne
cmpsl
outsl
mov
push
or
push
incb
mov
test
mov
pop
movsb
inc
pop
lods
js
mov
out
pop
and
lods
movsb
cmpsl
ljmp
sub
mov
out
dec
cmp
clc
jbe
xchg
notl
inc
xchg
jnp
inc
xor
test
inc
scas
out
cmp
shr
cwtl
and
loope
outsl
ja
scas
aad
repnz
call
adc
xchg
popf
je
arpl
ljmp
mov
stc
pop
daa
in
adc
dec
jnp
stos
inc
sub
ret
pop
pop
out
loop
out
sbb
jg
icebp
jg
outsb
cmp
enter
jne
sbb
cs
inc
stos
pop
insb
inc
add
pop
loop
adc
ffreep
aas
jae
es
push
mov
sti
mov
int3
pop
add
lret
push
push
stos
lock
in
jg
cmp
in
ja
loop
test
out
add
mov
pop
mov
xlat
lahf
xchg
push
imul
mov
push
inc
sar
out
aas
or
inc
dec
push
outsb
cmpsl
mov
flds
fldcw
aas
adc
add
pusha
mov
lock
fwait
aas
dec
daa
shll
lock
std
xor
popf
add
les
aas
mov
adc
sub
xor
mov
adc
xor
push
test
adc
fwait
mov
out
jecxz
aas
adc
test
pop
aaa
push
inc
decb
or
dec
es
adc
push
mov
cld
clc
jae
hlt
rcll
fisttps
mov
mov
shll
xor
shll
lcall
xor
lea
mov
movsb
xchg
je
jno
data16
mov
call
mov
jp
lods
push
mov
loop
adc
test
dec
jno
jmp
test
jp
pop
fmull
jns
mov
fnsave
fnstsw
push
cmpb
stos
jle
test
jg
pop
jle
sbb
sbb
sti
lcall
loopne
fdivl
push
and
mov
mov
mov
xchg
mov
mov
aam
dec
jne
gs
repz
xchg
push
dec
pop
sub
inc
fistpl
lds
xchg
popf
test
ds
xorl
cld
incl
cmp
outsl
fistpl
aas
mov
dec
fisttpll
lock
sbb
mov
ljmp
pop
push
add
enter
add
ret
int3
inc
icebp
out
jl
fs
jae
cltd
add
mov
cs
adc
movsb
imul
mov
ljmp
jnp
dec
push
push
aas
cli
pop
out
jnp
or
jae
out
test
aas
jb
xchg
subb
sub
into
loope
std
popa
scas
and
js
enterw
dec
scas
mov
push
ljmp
jmp
and
mov
push
rorl
cmc
jmp
out
sub
cs
dec
gs
pop
cld
and
lret
iret
out
sbb
dec
push
out
xor
loopne
in
popf
add
test
cmc
pop
or
jecxz
jge
loopne
loop
xlat
outsb
cmp
hlt
pop
decb
decl
aad
scas
in
and
lcall
ret
lock
push
andb
push
out
jo
and
insl
jmp
sub
incl
pushf
mov
add
and
loopne
sbb
stc
mov
mov
iret
push
out
push
mov
sub
jge
popa
cs
jae
icebp
push
or
jnp
repz
xor
xchg
inc
dec
jecxz
aaa
js
and
jp
pop
sbb
outsb
adc
pop
out
scas
outsl
lret
pop
add
jnp
cmpsl
push
arpl
add
decl
sarb
sbb
xor
cmp
xlat
pop
arpl
mov
loop
in
jne
in
dec
add
cmpsl
jo
add
jnp
pushw
aas
add
xor
lcall
popf
fcmovnbe
call
mov
push
pop
insl
not
js
inc
repnz
adc
idiv
xchg
loopne
imul
and
je
lea
xchg
push
inc
shlb
aaa
sahf
mov
movsl
lea
and
sbb
out
xor
lahf
cmp
add
push
dec
addr16
divb
lock
stos
jno
outsb
and
repnz
sub
addr16
popa
sahf
int3
ret
test
mov
aaa
movsb
mov
sbb
mov
jg
jmp
pop
xchg
jecxz
aad
das
push
jns
jmp
xorb
push
sbb
movsl
dec
cmpsb
test
push
jecxz
sbb
ja
inc
cs
pop
mov
jne
pop
push
jecxz
pop
hlt
test
or
outsb
and
add
pop
aas
jmp
mov
in
shll
repz
jge
fdivl
addb
loopne
aas
add
stos
sbb
adc
and
mov
lock
and
dec
addl
shll
call
sbb
or
repz
pushf
cli
mov
xor
mov
out
std
add
inc
enter
mov
lahf
aad
jmp
fucom
lahf
jl
adcb
imul
aad
add
cmp
push
jecxz
pop
ror
out
adcl
push
das
jl
shl
int3
xchg
test
mov
imul
inc
repnz
mov
push
pop
jl
fidivrs
in
add
push
das
test
rclb
xchg
stos
mov
push
fcoms
mov
scas
fsin
ret
add
xchg
loop
enter
aas
xchg
add
jnp
in
add
pushl
jae
scas
xor
sbb
int
pop
jmp
cwtl
jge
rclb
cmc
add
lock
fistpll
xchg
iret
pushf
xor
rcr
pop
add
dec
aam
xchg
pop
aas
cld
fwait
arpl
rcrb
test
mov
std
lock
out
mov
imul
daa
or
inc
mov
push
sahf
cli
jg
fidivs
stos
gs
mov
pop
cli
imul
inc
sub
les
xlat
cmpsl
outsl
mov
cmp
cmpsl
cwtl
stc
sbb
decb
sahf
clc
mov
pop
and
cmp
cmpsl
jae
pop
call
flds
movsbl
pop
dec
mov
hlt
jl
iret
std
ret
mov
sbb
jle
ss
push
adc
aas
or
and
pop
mov
jb
ds
push
mov
push
xor
daa
arpl
ja
jg
loopne
mov
xor
adc
cmp
cmp
xchg
movsb
and
mov
pop
in
dec
ja
out
loopne
lods
movsl
add
adc
out
aaa
cmpsl
incb
mov
rclb
inc
mov
mov
pop
ret
std
or
sub
cmp
ljmp
mov
outsb
dec
xchg
push
cld
mov
aas
or
pop
mov
inc
push
sub
nop
cmpsb
repz
pop
dec
cld
mov
adc
lret
imul
inc
push
test
call
mov
pop
nop
roll
nop
std
dec
cwtl
sbb
insb
cld
shll
mov
add
jo
dec
xor
iret
add
insb
adc
xchg
lea
or
repz
adc
lods
or
mov
mov
xchg
subb
cmp
inc
addb
inc
std
push
ja
inc
sbb
jecxz
jp
xor
inc
repz
pop
ss
in
inc
mov
ds
mov
pop
sub
push
sti
inc
jo
mov
int
ret
insb
decl
scas
mov
and
push
sti
or
mov
cmp
mov
xchg
jmp
orl
mov
test
pop
js
insl
dec
subb
pop
lret
pushf
xor
pop
out
adc
or
push
add
lahf
out
int3
push
fisubl
jnp
adc
mov
popa
push
outsl
rcrl
negl
and
pop
das
jl
push
shrb
pop
dec
sub
ja
cmp
ret
inc
mov
cmp
andb
scas
mov
cmp
jmp
adc
mov
bound
xlat
cmpsl
jmp
aas
add
cmp
jo
pop
mov
inc
cs
jmp
xchg
add
sarl
xchg
cli
icebp
cmpsl
mov
lods
popa
dec
imulb
dec
xor
or
add
daa
dec
jae
add
jg
sti
out
mov
fisubl
pop
out
movsl
ja
jge
jne
push
xchg
and
sub
call
mov
jmp
je
ds
and
rcl
and
push
push
mov
dec
xor
sub
xchg
gs
sti
addr16
jbe
xor
mov
sbb
lock
je
adc
mov
sub
test
lods
push
test
add
or
hlt
shrb
xchg
clc
push
pop
sbb
sub
jge
sub
adc
cmp
mov
dec
mov
xchg
or
loopne
or
sub
clc
mov
xor
fistl
fisttps
and
adc
cmpl
repnz
loopne
and
cmp
adc
dec
bswap
dec
jmp
cld
jg
sbb
loope
test
test
jmp
ljmp
cmp
adc
test
call
cld
aas
mov
push
insl
xorl
iret
loope
sub
insb
mov
fisttps
sub
mov
mov
aaa
sub
into
shll
push
add
mov
mov
pop
mov
out
ds
jns
insl
lret
lods
jnp
sub
mov
mov
mov
jo
imul
cli
xchg
cmpl
loop
sub
orl
cwtl
loopne
sahf
icebp
jns
cld
xor
mov
mov
mov
hlt
pop
imul
shrb
lods
decb
sti
mov
sub
cmp
push
jo
dec
in
std
daa
es
jge
fnstenv
and
mov
and
or
sbb
fistpll
mov
push
cs
daa
dec
cmp
incl
out
push
xor
je
std
outsl
cmp
sbb
insb
sti
lcall
mull
push
adc
imul
xchg
pop
pop
or
mov
mov
mov
push
lea
out
or
sbb
test
popf
xor
sarb
test
jo
pop
std
jge
and
daa
jo
lock
bound
imul
cld
pop
pop
enter
lods
jl
cmc
loopne
sti
fbstp
fadds
sbb
or
sub
add
icebp
std
add
add
xchg
pop
or
lock
inc
add
adc
pop
sar
sub
mov
add
aad
cmp
and
in
popa
out
test
jne
rol
jmp
or
fldt
out
ljmp
mov
pop
push
rcll
sbb
or
mov
test
push
out
aaa
js
sbb
lock
xchg
push
in
fisubs
divl
loopne
mov
sbb
jno
mov
lcall
mov
mov
rcrb
int
and
push
je
stc
pop
cld
incl
pusha
outsb
inc
nop
lock
cmp
jp
lods
leave
sbb
out
dec
xchg
or
fcmovnbe
mov
mov
sub
cmp
adc
enter
pop
in
pop
push
add
xchg
cwtl
or
adc
mov
dec
mov
gs
adc
sbb
add
push
cmp
push
movb
or
jmp
or
mov
aad
inc
jmp
sub
idivl
cmp
incl
xchg
or
jl
sbb
ror
outsb
add
je
outsl
jecxz
in
push
lcall
out
sub
pop
jl
jmp
dec
mov
loope
cli
mov
sbb
es
pop
in
ficoml
jns
out
iret
sti
push
dec
movl
ljmp
or
jno
mov
dec
rorb
mov
push
stos
cmpsb
incl
add
push
cs
xor
sti
shrb
or
repnz
xchg
xchg
mov
xchg
and
nop
test
or
pop
adc
cmpsb
xchg
and
loopne
jbe
pushl
out
pop
clc
jl
out
add
sahf
scas
mov
xor
jnp
jne
push
outsb
mov
cmp
test
incl
xchg
ds
in
jmp
movsl
sub
jno
rol
mov
das
aam
jo
stc
pusha
push
je
xchg
repz
push
test
addr16
frstor
rcl
ret
sub
jne,pn
mov
icebp
add
sti
cmp
lods
fidivrl
and
insl
call
push
cli
pop
shl
in
sub
lds
and
or
mov
adc
pop
xchg
jg
xchg
add
and
out
sbb
mov
jb
sti
dec
jmp
xchg
jg
dec
ffreep
jmp
push
test
repz
test
jg
or
fwait
pop
push
mov
add
mov
popa
pop
fs
aas
push
cld
mov
repz
jns
sub
cmp
mov
decb
inc
mov
push
mov
cltd
dec
in
imul
ljmp
add
inc
in
outsb
xor
fdivrl
dec
insl
pop
mov
icebp
popf
xor
jne
ljmp
test
mov
sub
aam
sbbl
fcmovu
repnz
sarb
cld
or
jb
decl
mov
dec
mov
inc
xchg
or
imul
xchg
lock
incl
das
ficoms
sub
mov
mov
pop
ja
loop
add
lret
push
mov
std
aas
dec
aaa
cmp
fisubrl
cmp
lahf
dec
xchg
pop
adc
mov
ret
mov
mov
dec
jne
bound
sti
push
push
nop
cld
sub
inc
fisttpll
jnp
iret
les
and
or
cld
push
pop
adc
scas
mov
movsb
fnstsw
jmp
movsl
arpl
stos
inc
xchg
jb
pop
push
sar
sar
dec
je
fnsave
arpl
or
stc
pop
push
je
sub
jecxz
jg
faddl
movsb
fists
fs
aam
out
loopne
fcmovnu
rcl
outsl
jne
inc
jecxz
mov
jmp
addr16
lcall
sub
std
lahf
sti
negl
clc
scas
out
push
xor
sbb
push
sbb
jg
call
and
out
addb
cmp
popa
pop
jge
jnp
ficompl
shr
enter
int
jmp
in
cmp
pop
hlt
shrb
lahf
and
sti
cli
aaa
xchg
and
xor
inc
cmpsb
lea
mov
mov
gs
sbb
jo
js
insb
adc
xor
or
in
sbb
cmp
xchg
mov
xor
push
out
xchg
orl
inc
xlat
repz
loopne
dec
xor
jp
mov
and
popf
sbb
sahf
cmc
inc
sahf
lds
xchg
pop
ds
sbb
ffreep
mov
mov
clc
sti
sub
mov
dec
push
xchg
into
or
fs
movsb
fisubrl
rcr
pop
adc
arpl
cmc
movsl
jmp
sti
dec
cmp
mov
xor
jbe
loop
pop
xor
nop
and
out
std
fnsave
iret
or
mov
cmp
jnp
out
rorb
dec
repnz
js
push
lods
cld
fisubl
mov
ljmp
leave
or
aas
ret
std
lds
dec
lock
and
lcall
xor
pop
dec
jmp
aad
xor
pop
psubb
neg
jle
mov
cli
xor
addr16
cmp
mov
pusha
lcall
add
mov
jg
mov
out
mov
stos
jl
mov
dec
rcl
cmpsl
gs
xchg
push
out
pushl
ja
out
jne
in
push
imul
jg
mov
loope
and
cmpsl
push
mov
mov
mov
je
cmp
add
sub
bnd
aas
loopne
adc
add
mov
jge
pop
jecxz
in
int
adc
push
xor
ror
lcall
and
push
inc
sbb
xchg
add
pop
hlt
jns
out
in
fwait
cmc
jecxz
lods
iret
mov
nop
pop
int
or
xor
repz
dec
inc
fcmovnb
jo
mull
xchg
loopne
jmp
jl
ds
in
ffreep
jmp
stc
mov
xchg
add
jnp
jle
and
insb
dec
inc
aad
push
dec
sub
aam
cmp
rcll
mov
sub
lea
lret
mov
fcomps
ljmp
into
xor
mov
mov
popf
xchg
push
adc
ja
ljmp
cmc
lcall
mov
pop
dec
xchg
fidivl
jo
decb
add
xchg
add
and
daa
xlat
outsl
or
mov
lea
stos
and
les
aas
fdivrl
in
fcomps
push
xchg
mov
bound
mov
cmp
mov
lret
iret
sahf
test
mov
jmp
mov
movl
aas
cmpb
popa
data16
xchg
icebp
mov
scas
test
mov
dec
sub
rolb
call
inc
cmp
jle
int
xchg
push
sbb
add
imul
stc
add
cld
stc
push
aad
iret
dec
loope
std
adc
ljmp
mov
inc
push
jg
sti
fists
daa
inc
add
inc
ss
std
in
inc
fldenv
push
es
cld
xchg
push
mov
or
push
push
sbb
mov
cs
sub
push
mov
fs
lret
dec
ljmp
cmp
loopne
enter
lcall
lea
cli
cmc
jmp
sub
psrlq
xor
nop
sbb
incb
adc
loopne
push
push
xchg
push
out
pop
rcrb
sub
lods
cmc
popf
xchg
mov
xchg
jne
subl
popf
call
push
xchg
lea
sub
cmpsl
push
je
xchg
pop
pop
pop
fimull
xor
jecxz
fsubr
ljmp
jg
icebp
or
out
aad
adc
adc
out
pop
mov
stc
sarl
jl
xor
add
lds
xchg
or
movsb
and
or
inc
and
inc
out
inc
or
cmp
sbb
insl
and
outsl
xlat
fisttps
sbb
mov
mov
call
xadd
int3
dec
inc
inc
mov
or
xchg
fidivrs
sahf
mov
ror
aaa
iret
mov
cmp
lret
pushf
stos
sub
sub
adc
loop
es
sbb
mov
sti
or
out
adc
ret
daa
bound
arpl
sbb
mov
shrl
jmp
loope
dec
and
mov
mov
and
lahf
push
cli
xchg
into
mov
popf
lcall
xorl
cs
mov
or
sbb
mov
loop
xchg
incl
lock
mov
jl
xchg
inc
out
ljmp
push
iret
lea
or
ret
pop
push
fwait
jnp
sbb
xchg
and
jo
adc
jecxz
jo
mov
mov
cmp
sbb
addb
xchg
mov
jo
pop
ja
adc
jge
xor
test
flds
std
idiv
and
cmp
cli
divl
and
inc
divl
aaa
add
sbb
loop
aaa
mov
and
and
jg
sbbl
xchg
pop
rcrb
rcll
cld
addr16
sbb
dec
xchg
mov
jl
out
adc
cmpsb
orl
adc
rol
mov
ret
rclb
jnp
pop
push
out
aas
mov
inc
mov
xchg
mov
mov
call
cmpsl
add
xchg
je
mov
outsl
iret
clc
dec
cli
arpl
imul
pinsrw
xor
sarl
mov
mov
jae
aas
sub
mov
imulb
dec
inc
mov
add
das
pop
add
jno
xchg
mov
out
mulb
or
test
add
mov
inc
ret
add
rol
pushf
mov
xor
push
jno
cmp
imull
test
add
push
push
call
cmp
pop
mov
clc
test
mov
fcmovu
lahf
in
xor
mov
mov
aaa
aad
jo
arpl
push
push
incl
int3
push
mov
jae
loope
lods
xor
push
cld
ret
nop
jae
mov
daa
outsl
and
mov
iret
out
scas
std
iret
xchg
inc
and
add
mov
pusha
lock
lea
mov
sub
popf
mov
cmc
pop
xchg
push
fst
aas
xchg
fldl
mov
inc
in
xor
and
dec
lock
or
or
jo
and
lcall
les
cld
adcb
sbb
adc
outsl
pop
jnp
push
cmp
adc
mov
cld
enterw
mov
xor
in
cmpsl
sar
inc
jge
lock
mov
pushf
add
pop
call
popf
inc
mov
sub
xorl
int3
popf
rol
and
jb
jg
ss
pop
cld
sbb
fcmovne
jb
lock
aaa
or
dec
cmp
mov
or
in
aas
xlat
inc
mov
or
adc
mov
adc
jg
loopne
sub
inc
scas
mov
loopne
test
xor
lea
jl
clc
xor
movsb
arpl
mov
inc
xchg
outsl
sub
call
and
jnp
sbb
mov
jecxz
jae
loopne
jno
cs
loopne
dec
iret
test
loope
sub
enter
loop
inc
std
mov
dec
mov
jg
lock
and
out
inc
add
ljmp
stos
pop
sub
inc
cmp
jnp
add
out
mov
or
push
adc
out
lret
data16
cmc
popf
fldt
mov
cli
test
sbb
imul
mov
cwtl
scas
add
add
mov
xlat
dec
and
idiv
cmp
push
cmp
aas
test
sub
cmp
jne
xor
fnstcw
test
les
daa
lock
ficomps
fistps
inc
sti
les
pop
test
jp
or
stos
and
pop
jp
test
orl
lock
xchg
xlat
add
in
jg
popf
mov
lds
cmp
stos
push
test
clc
pop
rol
cmpl
sub
testb
push
icebp
js
push
and
fcomip
cmpl
add
out
cmpsb
sti
int3
mov
in
inc
jl
popf
call
lds
adc
pop
std
out
add
pushl
clc
sbb
or
imul
icebp
icebp
jl
and
fildl
ja
add
fnstcw
jp
mov
jb
cmp
inc
dec
xor
ficompl
ficoml
push
arpl
cld
or
scas
arpl
aad
xor
mov
jp
push
add
or
loope
pop
dec
push
mov
dec
and
push
pop
stc
repz
sub
jmp
mov
loope
loope
mov
mov
pop
mov
pop
dec
dec
push
jmp
jp
pop
movl
dec
or
pop
push
nop
iret
lods
jmp
push
xor
jecxz
out
mov
adc
fsubp
sub
loope
aam
fimull
sar
push
jnp
fs
mov
pop
insl
or
sbb
jnp
xor
or
pop
fs
xchg
aad
mov
xchg
loop
mov
sbb
iret
or
dec
movsl
push
dec
mov
dec
cmp
xlat
aad
fcompl
xor
pop
out
pop
jae
add
aam
movsb
mov
and
pop
loope
cmp
mov
mov
dec
add
inc
sbb
daa
imul
add
mov
pop
jne
negb
psubq
fildl
add
cltd
lret
jecxz
pop
push
jo
inc
sub
ljmp
lock
xchg
and
or
pop
enter
cld
cwtl
aad
mov
inc
dec
xchg
pop
push
enter
add
aas
jmp
imul
and
xchg
jg
hlt
pop
jno
lret
lock
movl
jp
loop
shll
jns
out
mov
ret
lods
lock
jae
push
add
fidivrs
incl
add
loop
ret
mov
test
xor
xchg
mov
addb
mov
push
dec
and
adc
pop
ljmp
fsubrs
push
sbb
mov
xor
jp
mov
mov
in
lret
and
rolb
ja
xchg
lock
decl
cld
push
jg
pop
ret
pushf
jmp
rclb
idiv
test
sbb
stc
in
jb
push
dec
out
pop
cli
jg
or
sbb
fsubrs
pop
mov
jp
mull
mov
xor
ja
and
push
dec
dec
mov
cmc
stc
pop
xchg
inc
popa
daa
jno
sub
cwtl
movsl
fidivrl
jecxz
ja
sahf
int
pop
sub
aam
inc
clc
jg
fst
popl
fcomps
repnz
rcr
xlat
push
mull
clc
ja
cmc
or
ja
icebp
or
lcall
fcoml
lret
fs
sbb
adc
mov
pop
repz
dec
push
push
lcall
mov
out
call
repnz
ficoms
sub
outsl
pop
and
insl
pop
iret
les
mov
mov
pushl
push
mov
iret
and
add
ds
inc
ret
jge
sub
or
decb
stos
iret
adc
gs
cld
decl
ficoml
jne
adc
loopne
out
and
in
lcall
pop
jge
fists
adc
into
aad
shlb
inc
lcall
roll
pop
pop
lahf
and
aam
aad
stos
dec
jg
clc
idivb
sbb
pusha
daa
fdivr
int
mov
gs
lret
enter
add
xbegin
add
fldl
pop
sti
push
lret
mov
inc
mov
xor
mov
movsl
pusha
adc
sbb
jp
decl
stc
xor
xor
inc
pop
inc
cmp
add
aas
mov
stos
cmpsl
mov
outsl
lods
push
pop
scas
test
hlt
popf
xchg
incb
sbb
cltd
shll
add
outsl
nop
fsubp
pop
out
pushl
mov
lcall
insl
mov
mov
push
scas
inc
pop
push
mov
andl
ficomps
and
push
sbb
int3
push
push
sub
mov
dec
stc
or
pop
in
mov
cmc
frstor
cmp
pop
jns
notl
lahf
and
into
imull
adc
and
popf
in
cli
addr16
mov
add
clc
aaa
int3
add
sub
ljmp
decl
fisttpll
enter
icebp
aas
cld
jo
add
pop
inc
lea
aas
mov
push
lret
or
push
adc
mov
and
xchg
es
out
incb
adc
arpl
adc
icebp
sbb
cltd
push
inc
imul
cli
aas
xchg
inc
and
xlat
data16
xor
lea
pushl
clc
ja
and
fdivs
mov
popf
push
cmc
mov
xchg
das
jno
inc
incb
rep
cmp
and
das
xchg
mov
inc
mov
leave
test
test
dec
or
adc
out
mov
xchg
data16
jg
sar
into
mov
mov
push
or
mov
fidivl
cmp
mov
sbb
aam
pop
das
cmpsb
inc
sbb
mov
jb
cmpsl
mov
mov
adc
arpl
stc
xchg
repz
xor
cmpb
push
add
cmpsb
jg
cmp
dec
jb
mov
es
fistpll
call
fists
outsl
jmp
sbb
xchg
inc
test
lds
sbb
loope
out
je
mov
nop
stos
dec
repnz
xor
daa
inc
push
and
pop
cli
fcomi
cmova
mov
jnp
inc
mov
mov
sbb
incl
out
mov
out
idivl
incl
rolb
jbe
add
sbb
mov
inc
aas
xor
push
enter
jo
jmp
js
ljmp
push
loopne
mov
mov
sbb
cs
pmulhuw
lahf
fidivl
or
mov
mov
mov
popf
sti
cli
pop
xor
outsl
outsb
pop
int3
sub
mov
rcl
idivl
adc
in
mov
pop
fsts
repz
rolb
outsl
cmp
mov
loope
loopne
aaa
pop
pop
and
addr16
aas
and
inc
push
loopne
lods
fildll
push
jl
lods
and
lods
nop
cmp
pop
fwait
sarb
pop
cmp
das
ss
js
je
lret
xlat
incl
cli
cmp
sbb
jl
inc
jge
ss
cmc
aad
hlt
enter
inc
and
sbb
out
jg
clc
testb
testl
js
fs
lahf
scas
dec
fsubs
ret
iret
test
hlt
inc
pusha
loop
mov
clc
lahf
push
and
inc
jae
mov
lcall
jmp
mov
add
pop
clc
stos
test
jg
orl
popl
int
jbe
popa
push
push
xor
ja
fbld
movsb
jl
sbb
and
ljmp
shl
dec
jno
lds
das
loope
sub
decl
hlt
and
adc
xchg
lcall
fs
and
cld
sub
mov
iret
pop
setle
sbb
lea
push
cli
mov
sub
sahf
subb
mov
gs
popf
pop
outsb
dec
out
xor
jnp
push
int3
dec
js
pop
negb
or
push
xor
data16
push
inc
push
mov
pop
jbe
mov
add
loop
mov
xor
xchg
dec
push
loope
adc
out
push
push
or
test
or
call
in
bound
xor
pop
lret
loop
outsb
dec
cmp
push
arpl
pop
cld
jp
andl
aas
aaa
cmp
push
incl
clc
pop
pop
iret
ficompl
les
cli
lods
pop
aam
pop
dec
mov
daa
add
sar
lock
mov
stos
ja
push
push
mov
cld
iret
ljmp
out
or
jnp
cmp
sub
ja
jle
pop
mov
rcrl
sub
inc
sbbb
push
xchg
sar
out
in
add
sub
cmpsb
into
jg
adc
enter
and
sarl
push
dec
pop
testl
in
test
mov
pop
ss
push
inc
inc
or
daa
mov
test
outsl
fs
aaa
xchg
pop
fdivrl
inc
mov
pop
pop
cmpsl
cmp
ret
jecxz
aaa
mov
jae
mov
jge
pop
clc
dec
mov
jbe
dec
jmp
insl
cmp
das
insb
or
repnz
mov
out
or
pop
xchg
add
sub
dec
hlt
jg
cli
fldcw
cld
cmp
mov
addr16
loopne
cmp
add
pop
sbb
scas
jg
in
jno
ret
lahf
cmp
inc
xor
ds
push
jo
lcall
push
orl
mov
ljmp
push
jle
or
scas
push
jmp
pxor
jmp
mov
mov
dec
pushl
jg
in
mov
push
and
jns
cltd
gs
ljmp
faddp
outsb
sbb
cmp
cmp
cmp
and
mov
movsl
fidivrl
fidivs
or
in
icebp
sub
leave
dec
sahf
repz
scas
scas
jne
sbb
cmp
arpl
ljmp
mov
mov
xor
stos
and
sub
out
and
call
lret
or
fcmovne
sub
loope
add
adc
or
fimuls
jno
stos
jmp
out
mov
out
test
loopne
mov
shll
adc
pop
lcall
mov
push
mov
cmpsl
inc
mov
dec
popf
or
dec
or
or
dec
jmp
cs
mov
xchg
push
mov
mov
out
adc
mov
hlt
stos
popa
in
cs
mov
push
xor
addr16
outsb
sarl
jmp
mov
nop
mov
add
pop
cld
iret
sbb
mov
jne
mov
jmp
pop
loope
pop
paddsw
dec
dec
push
mov
call
out
lcall
cltd
lods
pop
std
iret
mov
pop
mull
testb
fcompl
sub
mov
pushl
mov
fninit
jge
popf
and
pop
iret
lahf
pop
xor
cmp
addr16
sub
movsl
mov
xor
pop
dec
jg
pusha
push
xchg
inc
cmc
xchg
jg
mov
xor
xor
xor
in
fs
push
sbb
fnstcw
sarb
outsb
xor
jb
jg
std
add
sbb
dec
xor
pop
mov
sbb
add
ud2
jecxz
pop
and
jnp
subb
popa
dec
loop
push
aad
push
shr
xchg
loopne
add
xchg
bnd
inc
cli
sbb
inc
arpl
jmp
inc
loop
or
arpl
loop
imul
push
inc
or
repnz
pop
jns
clc
out
jae
jle
lods
push
add
mov
jo
loopne
push
lret
inc
shlb
mov
lcall
stos
out
popl
add
sbb
jg
lea
cli
xorb
mov
push
aam
pop
xor
dec
imul
mov
mov
ja
jmp
adc
mov
nop
xor
sbb
out
fs
rolb
stc
xor
aas
sub
lcall
push
bound
imul
fmul
pop
dec
fistpll
add
movsb
aas
add
xor
rcr
mov
inc
jne
cmovnp
shrb
mov
inc
push
into
loop
cmp
jmp
out
push
clc
lret
sbb
mov
inc
pop
cli
ffreep
imul
mov
sbb
lds
cmpsl
push
mov
or
insb
in
out
lock
jecxz
and
pushf
scas
sbb
into
and
xchg
std
or
cmp
lods
aam
cmp
sbb
jo
mov
es
inc
notb
test
mov
or
push
aas
fildl
and
mov
out
mov
jae
loop
icebp
push
in
push
scas
or
pop
leave
ret
xor
repz
mov
aas
push
add
mov
push
mov
lods
mov
push
mov
or
notl
sbb
fldt
testl
mov
mov
rorb
push
ret
cmpsl
mov
push
movsb
rcr
and
jno
inc
jge
imull
int
mov
fbld
inc
test
xor
flds
sbb
leave
inc
sbb
and
mov
jge
inc
pop
lods
sti
into
fwait
daa
es
mov
call
ds
mov
sub
mov
test
movsb
outsl
cmp
movb
imull
aad
dec
push
sti
lahf
shrl
cli
mov
shrb
call
cli
fistps
cltd
ja
xor
mov
mov
sti
clc
or
stc
xchg
pop
xchg
jne
jg
popa
and
mov
mov
sti
push
xchg
test
dec
inc
sub
rolb
dec
aas
push
scas
clc
jmp
add
dec
ss
pusha
inc
outsb
xor
xor
call
inc
movl
cmp
lock
mov
sub
dec
leave
arpl
adc
lcall
dec
jg
sti
fildl
fwait
insl
mov
jge
mov
adc
xchg
lds
mov
mov
sub
aaa
ret
inc
pop
lret
ret
std
das
loope
pushf
mov
pop
lods
in
outsl
mov
out
in
imul
rcll
lahf
dec
mov
jg
push
lods
test
push
movsl
call
jno
sti
dec
out
xor
loopne
jg
pushl
cmp
dec
inc
aam
incb
icebp
inc
cmpsb
pop
jg
shl
pop
das
xchg
cli
mov
scas
xchg
fnstsw
pop
inc
rol
jg
mov
add
out
mov
addr16
pop
xor
cmp
add
aaa
cmp
mov
mov
rorb
decl
rcrb
xchg
mov
mov
insb
addr16
sbb
cli
push
jge
popa
push
jg
iret
mov
sub
fldcw
cmp
push
adc
inc
cli
push
jo
icebp
inc
mov
push
pop
fdivrp
inc
mov
jg
lahf
inc
jl
fistpl
jno
out
mov
lcall
push
addr16
mov
repnz
pop
push
xor
call
jbe
inc
imul
out
addr16
iret
shl
or
cmp
mov
xchg
adc
or
aas
mov
aad
mov
jge
das
sub
testl
mov
bsf
pop
fists
movsb
lds
xor
repz
shr
push
lahf
adc
popf
push
mov
pop
sub
sub
les
cmp
and
inc
push
mov
lret
mov
inc
fwait
ljmp
pushf
lods
aas
clc
sarb
mov
cmp
aas
out
aas
mov
and
jge
inc
cmp
imul
cwtl
inc
ss
mov
pushf
xor
mov
fs
cld
adc
out
loopne
loopne
pop
insb
dec
movsb
aad
lahf
sub
pop
icebp
mov
sub
idiv
stos
or
cltd
loopne
jmp
gs
clc
aaa
sbb
dec
mov
add
sbb
insl
into
xchg
loopne
pop
dec
sti
ret
jns
imul
divb
pop
cmp
stos
shlb
xor
and
lahf
shl
cld
das
test
pop
or
clc
clc
and
add
mov
outsb
scas
dec
call
cld
sbb
jg
mov
lea
jg
jbe
inc
add
movsl
pop
imul
adc
jecxz
pop
mov
mov
mov
add
jbe
dec
push
and
icebp
iret
inc
mov
mov
ds
popa
cwtl
ljmp
std
pop
in
jmp
sbbb
out
push
mov
pop
jg
adcb
or
aam
mov
cmp
cmp
dec
add
xchg
mov
jg
sub
jecxz
lret
in
inc
xor
push
loope
pop
movb
adcb
std
iret
cli
out
inc
mov
mov
stos
mov
sub
xchg
sub
loopne
outsl
fs
and
pushf
and
mov
sub
cmp
std
cmp
dec
mov
addb
pop
lods
sub
icebp
scas
xchg
dec
ss
idivl
dec
int
dec
jecxz
leave
sbb
push
ss
stos
xchg
cmp
fwait
sahf
pusha
fistps
outsb
std
lcall
scas
and
bound
sbb
push
shrb
decl
add
lret
mov
xlat
mov
outsl
and
pop
daa
std
sti
and
pop
sbb
outsl
aas
cmp
add
jne
sahf
popf
xor
jecxz
popl
sub
loope
jg
insb
dec
stc
xchg
xor
xchg
dec
stos
and
xchg
xchg
add
xchg
rolb
inc
xor
xlat
cmp
inc
fldl
movsl
inc
les
lret
dec
xchg
jle
paddsb
push
xlat
dec
xor
push
mov
test
clc
mov
lock
repz
jmp
aaa
sbb
movsb
push
out
call
stc
repz
outsb
jl
fbld
and
jmp
test
mov
dec
testl
adc
int
test
xor
dec
push
ss
mov
jmp
sub
insl
lock
pop
mov
pop
and
out
nop
cli
decl
cmpsb
sub
mov
cmp
std
mov
fsts
mov
jge
pop
sarb
inc
xchg
sti
cltd
push
or
std
inc
jge
inc
call
mov
dec
das
mov
inc
push
sahf
les
sub
out
stos
adc
inc
cmc
push
repz
push
jo
push
adc
add
loopne
std
adc
aaa
dec
imul
jmp
aad
scas
inc
out
mov
adc
scas
adc
add
push
mov
js
loopne
arpl
sahf
or
lods
cmp
movsb
subb
cmc
jne
pop
mov
gs
bnd
mov
sbb
shll
xchg
mov
aam
nop
sub
aas
aaa
mov
aam
jle
jno
sub
jbe
or
xor
jmp
in
push
or
roll
cmpl
xchg
mov
jno
loope
xchg
adc
mov
jnp
loope
or
icebp
push
cmp
lods
pop
es
test
adc
imul
mov
cmp
ret
and
ja
pop
dec
test
decb
cs
push
call
dec
das
roll
ljmp
sbb
insl
xchg
dec
sub
scas
in
out
or
mov
icebp
or
xor
push
movsl
frstor
mov
out
cmp
sbb
and
jmp
std
jg
mov
jecxz
sub
and
mov
mov
ss
out
fisubl
xor
in
in
inc
push
adc
movsl
ja
sbb
fisubrl
cmc
jmp
mov
stc
insb
mov
test
out
ljmp
mov
mulb
lds
les
out
sar
test
mov
int3
cld
dec
jae
cmpsl
sti
mov
aaa
icebp
lahf
rcll
adc
pop
and
xlat
clc
out
jmp
fwait
xchg
xchg
je
pop
mov
out
and
test
adc
mov
or
and
loopne
pop
insl
pop
sbb
test
cld
ja
inc
push
pop
add
es
pop
pop
shrb
or
mov
ffreep
std
decl
and
mov
into
enter
dec
out
lahf
mov
push
jg
push
movsl
lcall
sub
js
fidivs
and
push
cmp
sbb
addr16
enter
pop
loopne
sub
jmp
cmp
repz
lcall
lcall
sbb
sbb
jbe
outsl
rorl
imul
rcll
cs
mov
or
ss
sbb
mov
movsl
shlb
lods
jns
sub
mov
or
loopne
adc
aam
daa
or
lahf
cli
lods
cld
adc
sbb
mov
jae
mov
orb
loope
mov
mov
out
and
dec
rolb
iret
add
xchg
pop
xchg
jnp
pop
xchg
std
dec
push
scas
jne
pop
xor
pop
loop
dec
aam
and
clc
cltd
in
imul
pushf
or
cmp
sub
cld
das
mov
mov
fld
push
sub
pop
pop
call
jecxz
xor
shrl
jmp
inc
fimuls
jo
push
inc
cltd
outsb
or
pushf
mov
movsl
fidivrs
inc
jae
insb
cmp
aas
jno
lods
rolb
xchg
incl
ja
aad
cmp
inc
fdiv
mov
test
xlat
incl
or
add
mov
fldl
pushf
add
jmp
mov
or
fbstp
adc
fisttps
call
pop
cli
and
mov
and
decl
jp
mov
pop
push
ret
jg
jg
mov
movsl
cmp
push
jg
cld
xor
xchg
xor
loope
xor
cmp
xorl
testl
sarl
negl
jp
pop
arpl
rclb
out
pop
out
filds
jmp
cld
imul
fisubs
add
hlt
cs
xchg
fildll
sub
repnz
push
fnstsw
push
push
lret
daa
mov
fcompl
lcall
push
aas
daa
hlt
aad
cmpsb
out
call
aaa
xor
fnstsw
imul
in
fs
mov
push
adc
sub
cld
insl
pop
dec
popa
std
lods
cmp
dec
push
ret
xor
daa
and
insb
mov
pop
lods
movsl
lods
xor
pop
insb
and
clc
ja
jp
sar
out
add
xor
jmp
sahf
pop
xchg
push
mov
test
mov
sub
sbb
adc
mov
rcr
decl
ret
lret
dec
mov
pop
inc
insb
xor
roll
ret
scas
into
jg
aas
test
rorb
cltd
filds
cld
lahf
out
aaa
mul
push
fxam
shll
das
jl
adcl
jns
jmp
popf
pushf
jle
out
jb
std
loopne
xchg
repnz
mov
inc
jnp
movb
lahf
inc
jg
fdivrl
adc
je
xchg
push
mov
add
or
xchg
sub
cli
cmp
hlt
rcr
cmc
push
movl
and
fildll
mov
sbb
subl
pushf
xor
mov
out
jmp
jle
clc
jg
rol
test
iret
popf
fldcw
test
vpshufd
sbb
jp
mov
or
lods
jge
popf
dec
pop
mov
dec
pop
ljmp
jo
es
xor
fldcw
rolb
xchg
repnz
ljmp
test
jl
scas
push
mov
movsl
jg
loopne
pop
inc
or
stos
jnp
jo
ret
add
pop
daa
cld
insl
adc
jmp
mov
sbb
jbe
inc
push
xor
mov
repnz
std
mov
movsl
push
movsb
ja
ret
bound
repz
enter
cmp
and
mov
cmp
ja
pop
lea
jo
mov
mov
js
xor
adc
dec
add
xor
ud0
gs
xchg
iret
xchg
mov
jg
ffreep
das
jge
out
fidivs
jecxz
scas
test
dec
xorl
lods
lret
pop
popf
pop
adc
decb
clc
inc
aas
and
js
insb
adc
xchg
fs
mov
fwait
sbb
js
cmpl
xor
sbb
rcrb
in
lods
movsl
mov
push
and
scas
mov
in
fsub
jecxz
ret
in
push
cli
jae
mov
leave
call
cmpsl
std
leave
inc
test
xchg
cwtl
push
cld
dec
push
jg
clc
fstpt
fs
push
jns
push
out
pop
cli
rcl
hlt
gs
movsl
xchg
cmp
push
adc
decl
cld
adc
mov
and
stc
or
lock
xchg
das
imul
clc
aas
movsb
mov
xchg
leave
imul
xor
das
jmp
enter
pop
or
pop
dec
stc
clc
mov
cld
mov
arpl
iret
inc
mov
add
aas
xor
and
or
push
ret
aas
sar
sbb
cmp
pop
push
push
jae
mov
shrb
in
lcall
fdivr
mov
add
cmpsb
xchg
pop
rorl
push
ds
push
mov
shrl
push
push
lcall
sbb
pop
lods
sbb
xlat
mov
mov
outsl
mov
or
xlat
inc
xchg
in
add
pop
add
lahf
mov
or
mov
adc
in
cmp
aas
pop
rcrl
and
xor
pop
mull
sti
mov
clc
add
push
and
adc
fbstp
movsb
xchg
mov
rcrl
out
add
test
jg
scas
gs
adc
inc
scas
pop
xchg
jmp
jmp
jno
je
adc
fxch
jg
inc
cmp
add
xchg
cmp
ss
aam
jo
out
testb
pushw
mov
lock
mov
sub
jns
or
pusha
inc
mov
loop
or
push
jbe
inc
call
movsl
xchg
test
loopne
sarl
xchg
inc
lret
xlat
mov
call
jmp
dec
xchg
loopne
test
sbb
test
sub
xchg
cmp
clc
in
or
popf
aad
fsts
loope
push
call
mov
lret
out
push
cs
shrb
adc
cmp
pop
xchg
jno
xchg
pop
jns
xor
aas
hlt
mov
cmp
ret
ud0
pushl
fcomi
subb
movaps
inc
add
and
test
pop
nop
enter
xchg
mov
clc
xor
sbb
push
inc
sub
dec
xor
jp
addl
jb
sahf
into
or
aas
cmp
inc
lcall
mov
ss
or
cmp
stos
jg
pop
pusha
nop
test
pop
cld
cltd
out
xor
mov
xlat
add
addl
ret
cmp
aaa
roll
sbb
jg
loop
data16
push
xchg
cmp
mov
lods
cmpb
ret
or
cmp
jle
xor
push
pop
testl
mov
loopne
das
sub
iret
out
frstor
test
push
gs
dec
rorl
xor
addr16
iret
ja
inc
negl
pop
dec
or
lods
icebp
pop
xor
out
sbb
lcall
mov
mov
sti
xor
push
std
inc
jb
sbb
fnstsw
jl
inc
push
mov
incb
add
mov
mov
xchg
incl
pushl
xchg
sub
lcall
xor
push
inc
mov
pop
sbb
das
addb
cmp
jae
ret
and
mov
inc
jne
outsl
sub
jecxz
mov
test
das
xor
lods
cltd
mov
ret
outsb
cmp
pop
pop
jmp
jae
xchg
aam
fmull
dec
scas
jp
ror
push
cwtl
jo
sbb
pop
cmc
add
dec
dec
mov
mov
les
lods
lea
hlt
sbb
adc
bound
lret
sbb
mov
and
and
cmp
out
push
ljmp
sbb
pop
add
test
and
jp
or
out
inc
push
pop
into
movsl
fcomps
fiadds
sbb
jge
mov
cmp
cmpsl
fsts
incl
andb
subb
imul
jns
jl,pn
add
scas
jg
sub
or
out
cmp
dec
cwtl
cli
pusha
adcb
in
mov
cmpsb
mov
jo
cmp
out
dec
jno
xor
outsl
mov
cmp
out
das
push
or
mov
imull
sub
rorb
fistps
call
dec
pusha
cld
ja
cld
filds
sub
add
mov
addl
stc
ret
pop
mov
jecxz
cltd
in
mov
ret
imul
test
add
int
mov
ljmp
call
dec
mov
rcr
dec
xchg
mov
stc
lods
push
hlt
es
aas
ret
leave
sbb
jo
xor
pop
sbb
mov
jb
fsubr
push
aad
xor
outsl
jo
aad
dec
test
cmp
outsb
lcall
sbb
push
jae
addr16
cmp
jg
loope
fucomip
adc
pop
jbe
pop
sbb
mov
addr16
jg
lock
icebp
pop
xchg
or
add
sbb
dec
push
cld
push
inc
mov
xchg
pop
rorl
mov
icebp
addl
scas
cmp
fisttpl
cli
jle
jmp
jne
xchg
push
pop
not
popf
sbb
call
in
fadd
dec
ljmp
dec
cli
in
xchg
adc
dec
add
add
adc
or
outsl
push
add
cmp
sbb
in
pop
out
mov
rorb
cld
sub
stos
xchg
cmp
addb
jg
out
aaa
rcll
jb
rolb
inc
cmp
cmp
scas
test
dec
inc
les
mov
lcall
cmp
adc
out
push
inc
icebp
pop
aas
and
fcomi
fsubrl
gs
loope
xchg
mov
es
xor
push
lock
jne
cmc
popf
fdivrl
lcall
test
fisubrs
stos
bound
stos
adc
mov
xchg
sub
jecxz
lock
std
out
shrb
les
or
xor
push
cmp
adc
lock
out
decl
xor
imul
sub
jbe
fildll
add
lahf
idivl
add
ljmp
add
cmp
jbe
push
clc
inc
std
push
mov
int3
xlat
cmc
fstpl
mov
mov
lahf
popa
cwtl
aas
fidivrs
and
pop
adc
aas
xor
add
clc
jge
or
xchg
popa
xchg
mov
loop
sbb
or
ljmp
push
lea
popf
cmp
push
cmp
mov
addr16
test
loop
fiaddl
lods
or
outsl
out
xlat
lods
jb
add
xor
out
clc
decl
add
lcall
mov
xchg
subl
xor
mov
inc
insl
loope
std
or
adc
inc
adc
pusha
sub
mov
adc
popa
push
data16
xchg
mov
xor
shl
sub
push
xchg
movsb
mov
cli
fistps
xor
and
shrl
or
and
data16
js
adc
xchg
xchg
mov
stos
pop
andb
pop
pop
lret
jo
cmp
dec
push
jle
orb
add
sub
dec
mov
jo
xor
shrl
sub
sbb
rcrb
add
sbb
pop
rclb
fs
and
rclb
lret
rolb
cwtl
push
push
inc
push
adc
pusha
pop
sbb
test
add
jg
xor
xlat
add
push
aam
movsb
in
imul
sbb
or
movsb
mov
andb
and
xor
and
insb
jle
lea
sub
mov
sbb
mov
push
or
imul
adcl
ficoml
ret
lcall
adc
pop
es
data16
mov
xchg
outsb
clc
or
xorb
lret
xchg
or
mov
dec
call
inc
loopne
icebp
push
sbb
int3
xchg
adc
xchg
pop
ret
cmpsb
sbbb
pop
roll
xchg
push
nop
push
out
imul
sbbl
ret
sqrtps
test
test
pop
cmpl
movsb
cmp
xor
dec
pop
test
adc
rcl
add
and
xor
js
or
test
test
push
mov
mov
bound
test
fists
adc
out
pop
xor
and
adcb
inc
pop
pop
and
jb
and
addb
adc
dec
xor
push
sbb
mov
or
and
test
mov
mov
mov
divb
test
and
inc
xorb
popa
int
iret
js
test
loope
add
and
data16
and
mov
jp
adc
sub
or
push
inc
fidivs
shlb
adc
add
jmp
mov
dec
and
orb
dec
push
es
mov
add
push
or
jl
mov
inc
adc
mov
adc
movb
addl
cmpb
insb
decb
cmp
sub
dec
sbb
nop
xor
jg
cwtl
bound
cli
xor
out
sbb
sbb
or
sbb
mov
sahf
or
es
xor
mov
movsb
inc
or
addl
and
xorb
cs
pop
fs
push
pushf
inc
mov
sahf
push
mov
sub
xchg
push
mov
or
mov
inc
jo
add
je
dec
mov
mov
sub
loop
incb
pop
xchg
loopne
xchg
std
pusha
push
popw
mov
inc
cmpsb
sbb
or
and
cld
mov
push
adc
adc
adc
or
mov
or
and
push
push
or
adc
lds
repnz
es
cmp
cs
sbbb
je
xor
cmp
into
std
push
je
ss
jle
dec
or
xorb
arpl
and
out
and
push
mov
and
iret
rcl
scas
dec
pop
push
sub
mov
mov
addb
fs
cmpsb
push
xor
sub
and
dec
sub
cwtl
into
xor
adc
and
mov
inc
les
mov
mov
cltd
int3
ss
call
adc
add
cmp
loopne
or
xor
pushf
inc
nop
ljmp
pop
rolb
dec
add
jb
adc
enter
inc
loope
pusha
xchg
test
push
xchg
and
ljmp
sub
add
test
into
fcmove
hlt
sbb
adc
pusha
xor
mov
push
bound
cmc
xchg
or
shll
xchg
xchg
xor
or
mov
and
aam
and
jl
pop
cmp
lret
sbb
shlb
xchg
int3
fisubrs
inc
test
es
add
sbb
dec
addb
and
adc
rcll
fisubrs
dec
pop
addr16
push
dec
push
add
or
je
inc
outsb
pop
xchg
sbb
clc
push
call
pop
sub
stc
in
mov
xchg
xchg
pop
dec
fsubrs
pushf
xor
clc
mov
adc
mov
cmp
xchg
shll
cmpl
scas
xchg
jle
and
shrb
xor
movsb
les
and
and
or
push
add
pusha
insb
sub
mov
and
daa
rorl
sub
in
pop
sbb
mov
pop
pop
mov
xchg
mov
add
push
pop
imul
pop
je
call
in
xor
rcr
xorl
clc
lock
dec
xchg
cmp
push
loopne
sbb
data16
push
add
add
bound
add
popa
loop
mov
xor
ret
mov
and
push
or
mov
sbb
pop
adc
insb
dec
push
cmp
pop
rcll
addb
ret
cmp
sub
xlat
jne
mov
add
in
push
enter
cmp
xor
or
mov
and
cli
jo
mov
cmpsb
xor
out
mov
fildl
into
loop
ljmp
inc
xor
inc
popa
lret
imulb
nop
fs
or
or
jl,pt
cs
mov
rclb
push
push
add
cwtl
mov
mov
push
and
clc
dec
push
add
xchg
in
lods
call
push
test
cmp
adc
in
pusha
push
xchg
sub
xchg
mov
lret
cmp
lret
pop
push
fwait
sub
sbb
cltd
adc
call
sbb
xlat
lret
sub
lods
shl
or
or
mov
jl
inc
sbb
dec
pop
lock
inc
data16
xchg
add
int
adc
cmp
push
loopne
hlt
mov
pop
test
rclb
jp
int3
xor
lea
shlb
dec
addb
cld
adc
push
pusha
cli
mov
add
adc
dec
lods
dec
push
adc
inc
sub
rolb
cwtl
loopne
or
add
addl
xor
sarb
test
orl
addb
ror
jb
negb
cwtl
sub
lock
orb
xor
out
lcall
xchg
mov
pop
and
sub
loopne
push
add
jmp
js
scas
fsubrl
arpl
xor
xor
mov
add
subb
lcall
sub
add
ret
push
and
add
adc
mov
enter
lock
insb
enter
nop
popa
insl
mov
cltd
rclb
cmp
test
sub
cmp
dec
lock
test
and
jo,pt
or
in
push
adc
ret
xchg
ret
adcl
dec
dec
xor
add
repnz
ret
xor
nop
add
adc
and
xor
adc
mov
mov
inc
mov
mov
and
dec
cwtl
sbb
enter
xchg
push
out
test
push
je
add
enter
adc
dec
add
sub
pusha
pop
sti
cmp
les
movsb
pop
sbbb
dec
jecxz
add
xlat
cmpsb
push
jo
test
dec
call
movb
xchg
ljmp
xor
into
jp
dec
test
push
or
jb
sub
lret
mov
test
jb
pushf
ret
sub
push
hlt
xor
int3
xchg
mov
adc
mov
push
or
pop
push
pushf
dec
inc
loop
data16
push
pop
out
mov
xor
mov
mov
push
into
pusha
xchg
mov
int3
and
xchg
mov
sub
add
xor
or
scas
cmp
popa
mov
adc
cltd
xchg
xor
out
dec
pusha
ret
adc
pusha
call
pop
add
ficoms
xchg
and
out
inc
push
shrl
inc
jo
dec
cmp
pop
pop
pusha
sub
add
sti
xor
int3
and
add
inc
cmpsb
adc
or
test
pop
les
mov
filds
das
sarb
push
dec
outsl
cli
jecxz
mov
xchg
push
xchg
das
negb
sub
dec
and
push
xchg
push
orb
mov
test
insb
std
sbb
lret
movb
mov
xorb
or
sbbb
ret
mov
inc
or
sahf
data16
add
scas
andb
xor
cltd
rol
xor
dec
popa
pusha
jo
inc
mov
lret
rolb
shrl
jbe
shll
mov
outsb
fmuls
sub
pusha
es
mov
mov
sbb
pop
insl
or
add
or
and
in
sbb
push
mov
and
pop
scas
daa
and
or
adc
dec
sbb
mov
cwtl
ror
push
inc
cmp
push
dec
fmul
test
sub
or
add
pop
xor
pop
or
call
add
jle
push
xchg
mov
stos
lret
or
notb
cwtl
xchg
out
adc
cltd
dec
outsb
sub
add
stos
movsb
ss
and
xor
xor
pop
cmp
in
in
mov
adc
inc
cld
and
test
sbb
jb
andl
dec
es
mov
popa
jbe
hlt
mov
shlb
stos
cmpsb
call
lret
rolb
sbb
out
sub
sub
or
dec
adc
push
adc
fs
pushf
loopne
pusha
lods
dec
loop
out
shll
pushf
mov
ss
bswap
sbb
add
cwtl
mov
push
cmp
sbb
inc
out
test
insb
mov
push
adcb
enter
pop
les
pop
rcl
add
mov
movnti
mov
or
sub
inc
ret
ret
loop
js
pushf
cli
dec
mov
jno
andl
adc
fcoms
lret
xor
leave
nop
popa
inc
jecxz
shlb
jle
cmpsb
test
inc
adcb
enter
jo
rorl
push
rcr
push
adc
xor
or
clc
je
sub
mov
dec
addb
jo
je
mov
xchg
mov
push
mov
mov
fadds
rcr
movsb
cmp
lcall
add
add
leave
stos
lcall
push
dec
mov
incb
sub
cmp
push
mov
ljmp
pop
mov
xchg
inc
jo
xor
fidivs
int3
movsl
sub
mov
dec
jl
pop
loopne
xchg
mov
xor
test
call
sarl
idivb
ret
jb
inc
xchg
adc
inc
jne
mov
mov
aam
add
ror
in
cmp
scas
xor
cmp
fisubs
fs
jle
lret
push
dec
testb
add
add
push
and
sbb
test
jbe
push
es
lock
and
mov
scas
in
or
add
cmp
cmp
cmp
clc
bound
and
sbb
or
mov
pop
add
lcall
or
mov
mov
xchg
inc
inc
xor
ret
mov
push
xorb
or
call
in
adc
scas
add
iret
sbb
xchg
mov
add
iret
xor
mov
mov
hlt
xchg
rolb
fadds
aaa
mov
cmpsb
or
mov
movsl
movsb
jno
fdivr
push
enter
sbb
jo
test
data16
push
pushf
mov
mov
and
dec
fldenv
inc
mov
and
mov
jo
leave
je
xor
inc
cmp
sub
mov
fs
inc
lret
ss
adc
shlb
mov
adcb
xchg
test
mov
es
test
lcall
push
push
mov
xchg
dec
clc
push
sbb
xor
push
push
test
adc
test
add
lods
mov
ret
pushw
mov
dec
push
sbb
cltd
and
inc
into
or
flds
push
xchg
pop
movsb
cmp
rclb
mov
aad
pop
inc
or
shll
adc
and
push
jo
mov
das
pop
daa
push
push
inc
adc
call
lock
in
sub
test
aam
add
mov
in
repnz
inc
inc
adc
clc
xor
mov
push
rcrb
or
mov
ds
jb
xor
push
push
mov
iret
pop
int3
std
jmp
inc
add
cmp
je
in
dec
test
mov
push
bound
insb
in
adc
data16
arpl
sub
push
sahf
xchg
pop
push
adc
xchg
sbb
nop
mov
add
repnz
notb
or
xor
add
cmp
int
in
insb
loop
into
imul
fcomps
jecxz
push
xchg
dec
dec
loopne
fcoml
inc
xchg
scas
test
adcb
cmp
xor
push
pusha
jo
lret
push
sub
hlt
rclb
test
je
into
xor
sub
rolb
or
sbb
push
xchg
ret
test
and
jb
stos
xor
lcall
dec
cmpsb
mov
sub
loop
add
fists
int
dec
cmc
xchg
pop
test
cltd
test
push
xchg
mov
mov
and
int3
pop
adc
mov
and
lret
int3
push
adc
push
xchg
inc
xor
and
pop
push
pop
mov
add
sbbl
push
and
insb
fs
cmp
inc
cmp
and
and
pusha
gs
push
dec
lcall
and
movsl
xor
nop
add
inc
into
mov
cmp
inc
pop
xor
or
adc
rcll
xor
push
fisubrl
adc
and
inc
push
imul
test
adc
mov
cs
add
dec
pop
inc
mov
dec
or
xor
fimull
mov
inc
sbb
lock
add
xchg
shrb
pop
xchg
aam
push
sbb
stos
mov
xorl
and
mov
shlb
mov
cmp
sbb
mov
loopne
dec
lcall
and
jecxz
incb
js
mov
loop
icebp
popa
dec
dec
pop
adc
popa
xchg
cltd
sub
inc
movsb
mov
jmp
dec
into
jge
jle
adc
imul
test
xchg
adc
push
xor
fcmovnb
jl,pn
popa
sub
mov
cmp
pop
jo
inc
xor
stos
pushf
stos
and
nop
mov
cltd
xor
test
dec
sbb
pop
add
xor
cs
sar
lock
popa
rolb
lock
rcl
xchg
xor
jno
leave
and
jno
or
popa
sub
imul
inc
adc
sub
mov
xor
add
mov
mov
nop
and
hlt
xor
push
add
and
sub
push
and
test
dec
pusha
mov
or
es
call
imul
xor
mov
or
and
and
cmpsb
pusha
hlt
add
or
mov
test
stos
test
popa
or
sub
fs
cmp
adc
in
pop
sbb
adc
test
scas
jb
xor
mov
push
rorb
mov
and
imul
sub
lcall
pop
and
shlb
in
or
push
push
bound
loop
jecxz
lods
inc
enter
into
add
dec
js
fmuls
lret
int3
mov
sub
test
bound
cwtl
or
sub
xor
fsts
mov
inc
add
or
lock
mov
loop
test
test
push
hlt
mov
and
aad
dec
bound
dec
pop
outsl
mov
xchg
hlt
push
push
fidivs
mov
dec
fisubrl
cmpsb
xchg
enter
add
rorb
xor
mov
cmpb
xchg
jo
ljmp
push
xor
mov
pop
push
dec
or
sub
insb
sbb
call
mov
icebp
outsl
inc
dec
movsb
or
andl
nop
imul
mov
pop
adc
push
inc
loope
movsl
lcall
or
mov
mov
enter
sbb
sbb
popa
push
xchg
adc
mov
cwtl
and
xchg
jle
add
pop
mov
std
into
xchg
inc
xchg
popa
jle
sahf
sbb
shll
test
fistps
push
mov
pop
push
sub
xchg
lar
xor
stos
or
jo
call
lock
fisubl
call
and
iret
add
cmp
lcall
sahf
pop
inc
cwtl
sbb
jb
mov
mov
mov
mov
sbb
adc
xchg
jb
push
out
fwait
mov
hlt
or
jb
mov
and
cmpl
xor
cwtl
fs
mov
out
addl
cltd
lods
dec
nop
or
sub
xor
xor
lods
inc
jne
push
mov
movaps
dec
leave
pop
xor
es
pop
pop
or
adc
mov
ret
add
jbe
ret
xchg
es
mov
and
push
fs
dec
icebp
orb
xchg
ljmp
jae
adc
loop
lret
add
adc
int
cmp
adc
xchg
inc
cmpsb
mov
xchg
pop
cld
mov
xlat
nop
adc
call
mov
cwtl
adc
mov
cmp
sbb
push
and
dec
mov
call
test
lcall
mov
ds
sub
dec
cmp
mov
xor
push
sub
mov
rol
xchg
mov
cmp
lock
pop
push
movl
jl
ljmp
push
xchg
dec
mov
adc
sub
lcall
or
pop
and
push
test
popa
mov
movsb
sbb
and
sub
scas
xor
aad
lret
mov
negb
mov
dec
mov
xchg
nop
mov
pop
cli
test
js
cmp
pop
pop
ret
xor
add
aam
nop
xchg
loopne
lods
push
rolb
sbb
mov
test
or
mov
inc
movsl
pop
push
and
mov
xor
clc
call
xlat
sub
inc
adc
pop
mov
imul
jecxz
cs
aam
iret
test
or
test
cmp
adc
xchg
inc
xor
cltd
sbb
fimull
ds
push
rolb
or
enter
push
or
or
add
mov
mov
test
bound
pusha
gs
loopne
add
mov
fidivs
and
cltd
pop
inc
ret
inc
pop
es
dec
pusha
insb
push
mov
movsb
stos
jno
adc
add
sub
enter
stos
inc
enter
and
push
mov
ret
adc
push
testb
rclb
out
pop
mov
int3
mov
or
cmp
inc
call
fisubrl
jo
push
mov
dec
pop
loop
sbb
mov
jo
lret
xchg
lock
and
addb
sbb
shl
push
mov
lods
dec
jl
ss
pop
mov
mov
divb
int3
lock
sbb
xor
and
xor
push
jo
dec
cmp
jp
cld
inc
jne
test
data16
popf
fs
mov
rolb
in
roll
and
out
in
sub
mov
adc
cltd
and
xor
fildl
add
or
mov
mov
add
mov
mov
mov
mov
dec
into
inc
jo
push
arpl
ljmp
sub
push
sbb
loop
test
adcb
and
add
mov
and
xor
add
test
sbb
mov
dec
adc
dec
or
pop
fadds
inc
pop
cli
mov
adcb
aam
es
pop
pop
sub
inc
sub
test
loopne
or
lcall
insb
inc
std
jg
lret
jg
insl
shlb
cmpsl
aad
shrl
xchg
sbb
xchg
test
sub
xor
rolb
in
sub
cwtl
pop
test
inc
sbb
leave
subl
mov
in
xor
or
test
jo
xor
mov
stos
js
and
xor
adc
ret
leave
push
and
pusha
leave
push
or
sbb
inc
dec
adc
push
push
cwtl
or
push
xchg
pushf
xor
out
xchg
clc
es
adc
bound
and
mov
test
xor
and
movb
fldcw
push
mov
adc
ret
dec
cli
dec
js
adc
and
dec
xchg
xchg
mov
es
jb
nop
push
xor
pop
adc
bound
xchg
mov
cwtl
or
cmp
and
test
inc
pop
xor
pop
or
jb
pop
mov
add
jnp
push
xor
push
xchg
mov
rcrl
push
sbb
enter
enter
xor
push
rclb
lock
dec
mov
test
and
push
jnp
daa
and
jg
lock
push
call
adcl
in
sub
adc
adc
in
push
subb
mov
test
ljmp
popa
or
inc
add
mov
insb
and
lret
test
or
loopne
cmp
popa
insb
xchg
add
and
call
inc
and
adc
xchg
fsubl
sub
iret
jl
cwtl
pusha
sub
or
outsb
jl
pusha
ret
nop
cmp
inc
sub
cltd
push
mov
push
push
or
int3
es
lods
add
xor
ret
push
loopne
movsb
in
jne
sbb
jp
scas
push
inc
cmp
jo
push
repnz
sbb
rolb
pop
push
movsl
dec
inc
ljmp
push
mov
lret
les
aam
cmp
xor
pop
out
cs
lret
add
jo
es
adc
sub
sbb
push
movsb
and
leave
fs
xchg
add
inc
xorl
and
jno
jo
ljmp
mov
rcrl
cmpsb
sbb
adc
add
adc
aam
movsb
jo
add
jp
mov
or
xchg
xchg
repnz
sbb
or
or
add
or
pop
lea
and
fisubrs
mov
push
xor
test
sub
aam
adc
test
push
adc
incb
fnstenv
and
bound
je
cmp
push
mov
mov
xchg
cltd
add
push
pop
out
movsb
ret
ret
mov
or
fidivs
bound
pusha
test
adc
xor
cmp
call
xchg
sub
mov
xchg
pop
or
mov
and
xor
xor
mov
iret
adc
es
pop
out
sbb
push
mov
or
andb
push
sbb
adc
adc
in
pusha
cmp
pop
pop
xchg
mov
dec
or
into
rolb
sti
mov
cs
pop
adc
jg
push
sub
pop
adc
and
adc
in
adc
inc
xchg
mov
das
pop
scas
jb
pop
mov
mov
orb
ljmp
std
push
fadds
outsb
push
js
js
les
xchg
pop
add
or
enter
push
hlt
mov
insb
dec
in
ljmp
stos
out
xor
enter
and
faddl
jle
xor
lret
dec
and
movsb
in
movsl
cmpsl
imul
dec
rcrb
andb
push
std
xchg
loop
lret
sub
mov
xchg
rol
cmp
xor
ret
test
or
arpl
lock
xchg
sarb
or
aam
aad
sbb
mov
adc
mov
mov
sub
add
push
sti
scas
sub
sub
sbb
or
nop
fistpll
sub
mov
test
adc
les
data16
xchg
xor
cli
js
mov
push
dec
jns
inc
mov
and
loope
ret
xor
pop
and
adc
subb
ret
push
push
sub
mov
or
xor
jp
mov
ja
orb
sbb
pop
sbb
clc
sbb
shlb
xchg
sub
lock
add
pop
push
xor
mov
hlt
ret
adc
push
push
dec
loopne
mov
inc
jo
or
cs
adcb
add
mov
movsl
push
pop
ss
xchg
cltd
pusha
clc
adc
pop
xor
xchg
inc
push
add
dec
and
nop
or
out
dec
or
pusha
loop
xor
ficoml
cltd
dec
lods
mov
cld
adc
cmpsl
loopne
or
push
or
push
shll
sbb
add
in
shlb
pop
or
movsb
and
adc
xchg
sub
test
rcl
nop
inc
and
pop
js
ret
gs
movsb
xchg
cmp
push
shl
inc
jbe
movsl
jp
add
adc
lret
inc
mov
or
into
sarb
xchg
sub
sbb
mov
push
push
xor
inc
cli
cmp
call
pushf
mov
pop
inc
mov
adcb
and
or
shrb
dec
push
xor
in
sbb
push
adc
mov
movsl
inc
fiaddl
adc
push
mov
dec
jp
or
sub
sub
sub
jg
call
daa
xchg
jne
adc
xchg
sub
mov
shlb
es
add
test
pop
cld
dec
xchg
add
pop
jb
inc
dec
pusha
add
cs
rorb
push
xor
inc
mov
dec
push
fs
push
int
rorb
mov
shrb
mov
rolb
faddl
call
inc
pop
mov
jp
popa
push
cmpsb
mov
cmp
outsb
pop
xchg
test
adc
mov
mov
adc
daa
add
xorb
inc
and
push
clc
push
test
int3
inc
or
pop
add
test
sbb
or
or
loope
or
pusha
adc
or
push
mov
nop
inc
pop
add
movsb
mov
inc
lret
pop
cmp
sub
bound
int
mov
call
pop
inc
rcrb
stos
add
sbb
out
std
orb
and
imul
xor
push
sub
mov
dec
and
call
add
mov
xchg
jl
add
xor
test
leave
gs
nop
rorb
xchg
sbb
add
fadds
inc
push
call
cmp
xor
mov
cmp
sbb
inc
inc
rclb
add
fiadds
cltd
push
add
cmp
sub
aad
xchg
add
cmpsb
adc
jle
pop
pusha
jo
adc
loopne
mov
sbb
out
mov
and
out
push
test
scas
insb
sbb
dec
push
fsubs
xor
imul
mov
or
mov
inc
push
pop
pop
rolb
orl
test
xchg
lret
sbb
fstpt
leave
adc
imul
je
adc
mov
inc
outsb
push
call
mov
xchg
jo
cwtl
mov
push
push
adc
xchg
xor
ret
or
xor
inc
add
jp
aam
adc
aam
pusha
js
mov
scas
mov
jl
iret
je
or
xor
cmp
js
jg
lea
inc
insb
xchg
xchg
sbb
cli
jle
and
add
sbb
xchg
cld
push
out
aad
call
mov
mov
inc
test
inc
or
push
rclb
mov
cmp
sbbl
sub
jp
mov
sub
js
mov
xchg
push
cmp
adc
fidivl
fs
daa
ret
sti
xchg
dec
add
mov
in
mov
loope
dec
sbb
xchg
js
push
push
mov
push
dec
dec
pushf
pop
push
pusha
sbb
push
cmp
push
mov
sub
jl
add
fbld
sub
out
je
pop
or
jp
sti
sbb
outsb
pop
fcoml
xchg
sub
sar
mov
sar
aas
movsb
inc
dec
adc
daa
and
dec
add
hlt
js,pt
inc
or
mov
mov
lret
push
insb
or
xor
pop
rorb
pusha
add
or
lods
in
test
sbb
adc
mov
outsb
and
and
sahf
mov
out
and
daa
add
mov
faddp
inc
or
in
mov
dec
push
sub
pop
push
and
or
sub
test
pop
xor
mov
add
jbe
or
les
cmp
or
push
xor
and
mov
adc
push
js
lret
test
decb
shlb
jb
icebp
adc
loopne
loopne
mov
xchg
xchg
pusha
ret
adc
popa
add
cmc
and
mov
sbb
mov
sub
jl
inc
es
xchg
subb
rcrb
xor
test
sti
cs
push
dec
dec
inc
test
xor
xor
inc
mov
inc
mov
rcll
aam
or
lcall
iret
test
add
test
adc
mov
pusha
adc
orl
cmp
pusha
cwtl
in
adc
cmpsl
pusha
mov
add
enter
jle
dec
inc
sub
ficoml
xor
push
scas
xchg
mov
adc
test
xchg
nop
add
test
inc
sbb
mov
pop
or
mov
sbb
andb
jb
inc
mov
dec
or
inc
data16
sbb
mov
sbb
xor
into
xchg
and
dec
sub
or
dec
adc
nop
xchg
jb
mov
mov
mov
inc
sbb
andb
fidivl
jo
and
nop
repnz
fcmovbe
mov
xchg
nop
inc
es
lds
addb
push
andb
add
jno
push
mov
jp
leave
inc
dec
rcrl
sub
mov
cmp
test
add
mov
or
mov
mov
jo
insl
sbb
and
xor
or
es
sbb
push
sbbb
cmp
adc
dec
or
push
adcl
rcrb
sbb
inc
push
cmpsb
pushf
push
add
and
lret
or
test
test
movsl
xor
sub
inc
dec
dec
adc
cmp
pop
ss
dec
pusha
mov
xchg
js
rcl
test
dec
lret
mov
adc
push
andl
rolb
into
lods
inc
or
ficomps
or
dec
adcb
adc
or
pop
xor
into
and
sub
inc
push
mov
jo
rorb
lret
dec
adcb
inc
cmp
inc
test
mov
into
std
popw
xor
mov
jp
sbb
ret
dec
mov
xchg
adc
lods
cwtl
add
sbbb
sbb
sbb
inc
test
cmpsb
rol
lret
push
push
gs
test
and
iret
push
sub
adc
add
and
mov
pushf
jg
mov
sub
les
adcb
cmp
pop
or
push
add
push
stos
jp
mov
or
icebp
add
xchg
mov
mov
lock
fs
add
and
test
sub
jg
fdivrl
mov
es
and
sub
leave
and
outsb
in
test
adc
cmp
sub
int3
orb
push
movsb
test
ljmp
adc
fsubr
inc
mov
add
or
cmp
shlb
sub
cmp
inc
dec
jo
dec
leave
mov
data16
or
sbb
add
inc
dec
dec
adc
cmp
xor
mov
sub
inc
push
push
jg
aas
orb
mov
popa
sbbb
or
cmpsb
int3
jo
jl
adc
int3
xor
adc
pusha
je
jae
out
stos
icebp
xor
xchg
bound
add
rcrb
dec
loop
and
incl
adc
aam
imul
ror
xor
adc
fistpl
mov
sub
push
adc
or
fs
or
sub
mov
cwtl
mov
adc
imul
clc
je
mov
call
leave
dec
and
mov
jl
xchg
ret
mov
stos
test
lea
orl
inc
or
stos
lcall
mov
nop
jbe
mov
xchg
add
adcb
js
lock
out
push
ret
rcrb
imul
out
dec
pop
add
adc
push
call
shrb
shlb
adc
into
lods
mov
pop
bound
mov
mov
int3
dec
xchg
pop
pop
mov
pop
cmp
dec
jo
and
and
sub
or
jo
icebp
loop
sub
xor
js
pusha
and
and
jecxz
mov
push
andl
aam
xor
sbb
lret
push
jae
xor
test
mov
and
out
cmpsb
shlb
jno
xor
cmpsb
cmp
pop
and
pop
mov
and
pop
xchg
pusha
push
or
sub
mov
mov
push
into
and
or
mov
dec
xchg
hlt
adc
xorb
mov
sub
xor
or
popa
daa
push
xchg
dec
xorb
orb
mov
dec
mov
arpl
test
and
or
adc
lods
int3
add
sub
dec
xchg
movsb
and
dec
test
push
movsb
gs
adc
movsb
int3
add
and
sbb
add
sbb
mov
mov
and
pop
lods
push
xor
cltd
enter
sbb
fs
cmp
leave
adc
cmp
and
testb
lret
and
lcall
test
dec
in
xor
sub
mov
adc
lcall
push
push
xor
add
dec
jb
mov
pop
push
lret
xor
xor
cwtl
mov
dec
cmpsb
add
xchg
inc
shlb
and
lock
push
sbb
mov
popa
data16
jb
or
imul
loopne
imul
sub
rolb
or
or
push
mov
push
adc
loope
cmpb
xchg
add
sub
sarb
sarl
push
push
push
mov
rcll
jp
adc
call
xchg
and
mov
sbb
inc
inc
sub
and
stos
xchg
inc
test
std
arpl
outsl
dec
inc
or
and
and
test
enter
je
enter
stos
ljmp
je
inc
xchg
cmp
push
xor
adc
push
mov
ret
mov
outsb
xchg
and
inc
or
stos
dec
sbb
test
add
adc
xor
out
cwtl
mov
and
mov
and
xchg
cli
aaa
mov
cmp
ret
loopne
push
sbb
push
je
fdivs
mov
cmpsb
pop
fs
sub
dec
lret
xchg
adc
cmpsb
les
in
pusha
lea
pop
add
xor
xchg
dec
and
notb
lds
add
testb
or
jg
jno
add
sbb
adc
repnz
pushf
cwtl
adc
ds
push
icebp
xor
test
cmp
or
xchg
mov
inc
add
and
xchg
add
call
movb
loop
push
mov
xor
iret
jbe
or
xchg
mov
push
xchg
inc
or
mov
add
scas
sub
xchg
push
xchg
xchg
cmp
and
or
adc
push
push
sub
mov
mov
add
in
pop
and
sahf
mov
ret
test
inc
in
leave
add
lods
sub
into
jl
mov
lcall
mov
test
xor
or
les
cmp
mov
cmpsb
add
sub
hlt
lcall
fsts
mov
dec
cld
fisttps
add
ret
inc
jmp
decl
add
fsubs
dec
sbb
mov
dec
notb
in
ret
dec
popa
push
sbb
call
sub
mov
sub
adc
adcl
hlt
lret
pop
add
jg
xchg
and
mov
aad
and
xchg
xchg
push
sub
add
in
je
sub
in
or
and
xchg
adc
adc
sub
movsb
sub
insb
sub
mov
push
cmp
and
pusha
sbb
sub
test
mov
test
bound
or
stos
xchg
dec
xchg
xor
sbb
ss
js
add
int3
adc
cmp
or
mov
mov
pusha
pop
js
sub
data16
push
mov
pop
hlt
add
jp
mov
mov
sbb
cli
into
scas
sbb
rcrb
or
sbb
push
nop
cmp
xorb
cmpsb
je
dec
orb
adc
bound
test
or
ret
je
dec
divb
lds
inc
xorb
movsb
xchg
xchg
ret
dec
out
and
ret
add
xchg
or
pop
pusha
into
xor
pusha
mov
inc
mov
sub
popa
lock
and
push
nop
insb
xor
pusha
rolb
pusha
inc
push
adc
sbb
jg
dec
addb
pop
clc
mov
pop
sbbl
cmp
mov
fisubrs
sub
into
test
or
leave
push
fadds
and
jbe
fimuls
sbb
fidivl
adc
test
stos
fs
loop
ljmp
pop
insb
lret
adc
push
test
lret
push
and
and
clc
xchg
test
and
rcrb
mov
mov
test
adc
mov
cmp
movsb
fs
rol
dec
cmp
and
mov
add
or
inc
es
jbe
and
xor
pusha
mov
ret
enter
add
cld
inc
add
bound
inc
loopne
in
orb
adc
jl
and
and
or
shrl
push
movsl
xor
lds
lret
push
and
call
out
sub
sbb
push
insb
shl
push
inc
and
cs
or
lret
pushf
in
ljmp
or
mov
lret
rcrb
addr16
push
repnz
adc
inc
pop
push
pushf
orb
add
mov
dec
add
sbb
out
sub
xor
stos
push
sub
push
add
push
push
mov
mov
out
or
inc
and
dec
xchg
add
inc
cmp
adc
ficompl
divb
test
dec
dec
push
data16
mov
popa
cmpsb
xchg
test
push
in
call
and
pop
mov
sbb
xor
mov
sub
dec
aam
adc
lods
inc
pop
pushf
push
dec
and
rclb
push
cmp
xor
add
js
outsb
push
loopne
lret
and
iret
mov
or
mov
inc
xchg
sbb
push
mov
out
mov
das
cmp
dec
repnz
xchg
jl
test
test
jb
or
xor
or
out
js
or
mov
dec
xor
cltd
and
loop
mov
and
dec
push
xchg
xchg
sub
pop
cmp
inc
inc
push
hlt
pushf
mov
data16
ret
aaa
mov
mov
inc
out
into
nop
and
adc
dec
add
inc
or
rclb
fcoms
sbb
push
jo
xchg
adc
inc
mov
sbb
push
negb
pusha
or
mov
jp
mov
adcl
add
insb
sbb
and
xor
mov
dec
mov
or
or
ret
sbb
add
sahf
cmp
test
cs
inc
xchg
xor
xor
or
call
xchg
shr
inc
and
add
push
adc
js
adc
rcll
cli
sbb
mov
xchg
pusha
xchg
pushl
inc
fdivr
pushf
movsl
lea
mov
in
je
ret
test
mov
popa
add
aam
add
jnp
lcall
sub
incl
sbb
push
movl
add
dec
inc
push
xchg
ds
pop
cmpsb
es
cmp
mov
cltd
pop
add
std
push
add
sbb
call
mov
sbb
and
sbb
adc
push
sbb
sbbb
adc
mov
cmp
add
pop
bound
rolb
and
add
es
add
push
and
push
xor
mov
add
push
jae
jb
pushf
hlt
iret
sbb
mov
cli
test
cmpsb
xor
push
xchg
and
sub
xchg
mov
push
dec
ret
jbe
pop
add
test
mov
xor
sbb
inc
cmp
mov
outsb
cltd
jl
decb
and
bound
and
jl
pushf
dec
mov
pop
bound
adc
and
mov
mov
mov
cmpb
or
push
add
movb
mov
and
mov
repnz
jle
sub
inc
cwtl
add
fdivl
sub
or
and
jne
or
rcrb
lds
cmp
xchg
mov
cmpsb
inc
hlt
lret
loope
outsb
xor
in
dec
and
add
ret
test
cs
test
dec
nop
dec
and
lret
gs
mov
add
pop
or
cwtl
mov
cltd
lea
pop
and
mov
adc
cmp
jle
es
xchg
movsb
out
adc
dec
xchg
ficomps
ss
sbb
sbb
mov
jl
jg
mov
xor
adc
inc
imul
lock
jp
xor
dec
hlt
lock
or
add
nop
stos
and
inc
nop
push
sahf
test
nop
mov
push
cmp
and
push
sahf
cmp
add
bound
out
rcl
sub
pop
je
rclb
or
xor
aam
mov
inc
ret
sub
and
sub
stos
or
mov
and
sub
adc
push
popa
dec
inc
mov
xchg
or
inc
rclb
ss
scas
pop
inc
dec
test
stos
sahf
lock
xorb
push
sub
pusha
fstl
ss
inc
add
mov
or
mov
and
and
adc
bound
loop
inc
sub
clc
enter
xchg
movsl
fbld
inc
xchg
lods
inc
add
in
and
and
cwtl
push
rclb
push
nop
push
andb
insb
cs
sbb
fcomps
fmuls
or
mov
mov
ljmp
push
cli
mov
adc
bound
and
and
push
inc
inc
arpl
mov
and
int3
push
call
int3
scas
pop
or
adc
or
mov
sbb
js
nop
add
xchg
sub
add
sbb
adc
or
xchg
cld
dec
add
dec
mov
or
inc
add
call
inc
inc
inc
test
add
inc
bound
mov
xor
push
outsb
adc
shll
inc
nop
add
pop
adc
sbb
outsb
fsubs
movsb
xchg
push
xorb
dec
push
pushf
popa
leave
dec
add
insb
ret
and
movsb
in
add
inc
loopne
je
mov
inc
lock
xor
pop
cmc
adc
push
dec
push
data16
sbb
cmp
repnz
sahf
leave
pop
push
call
xchg
jg
inc
sbb
push
outsb
hlt
cmpsb
add
sbb
or
and
xor
adc
xchg
test
xor
and
pop
mov
xchg
test
ljmp
push
pop
xchg
or
inc
jle
sbb
ret
sahf
dec
inc
test
fbld
add
add
jo
loope
or
sub
test
xchg
dec
cld
sub
nop
xchg
movsb
out
lret
adcb
inc
enter
cmp
push
pop
add
mov
adc
movsb
pop
push
call
dec
mov
sti
sub
add
mov
pushf
mov
push
ds
inc
cs
jp
and
adc
jo
jo
test
in
add
jnp
mov
and
add
jae
or
push
xchg
push
xor
push
bound
repnz
clc
jg
jmp
test
jne
push
and
push
add
push
xchg
mov
insl
mov
leave
ret
addb
mov
jg
cltd
and
lret
sbb
mov
or
ret
jb
cs
addb
dec
loopne
enter
xchg
and
pop
inc
hlt
dec
push
push
test
dec
push
cli
cmp
pusha
ret
insb
push
push
add
or
push
add
sub
and
or
mov
aam
mov
dec
push
cld
sub
mov
push
test
push
adc
movsb
push
xchg
shr
push
sahf
ss
inc
fidivl
mov
and
push
add
sbb
fimuls
mov
or
xorl
ss
or
add
add
sar
enter
sub
mov
sub
push
shrb
aad
xchg
test
int3
shlb
imul
sub
and
push
push
add
xor
lret
push
jmp
push
dec
jle
in
xor
jl
mov
orb
push
aam
push
jb
or
dec
or
or
enter
lods
js
sbb
les
sub
sub
pop
push
or
xchg
sbb
jecxz
movsl
es
xor
and
cmp
dec
pop
dec
sub
ret
mov
push
sahf
shlb
ret
or
movsb
fwait
nop
inc
push
enter
in
push
push
and
lret
cld
and
push
into
pop
push
es
push
lock
dec
add
jb
and
mov
mov
fwait
pop
push
clc
cltd
mov
sbb
jb
out
pop
add
adc
dec
jo
mov
ret
pushf
out
xchg
lcall
orb
pop
stos
pop
and
ljmp
add
in
rorb
pop
in
inc
add
int3
add
dec
lret
adc
fcompl
mov
cmpl
pop
js
mov
sub
push
push
add
stos
lcall
lret
or
movsb
jae
js
insb
adc
mov
fs
inc
push
cmp
sbb
mov
rorb
xor
push
add
push
sub
sub
or
cli
push
mov
or
test
enter
leave
adc
mov
xor
cwtl
sub
out
or
cmpsl
sub
and
je
pop
mov
shlb
xchg
pusha
pusha
test
cld
dec
pusha
push
xchg
and
test
cmp
les
mov
jl
sbb
sbb
test
and
inc
dec
xchg
mov
test
cwtl
jp
mov
or
inc
or
or
adc
subb
sbb
jle
cmpsb
faddp
pop
sbbl
and
cli
sbb
sub
add
push
pop
or
push
mov
add
or
add
inc
adc
shrl
cmpsb
jp
mov
sub
push
xorl
xchg
xor
xor
sub
xchg
sbbb
lods
dec
sub
arpl
ficoms
sbb
ds
xchg
pop
add
lods
xor
insl
sbb
jp
lods
jp
imul
mov
adc
cwtl
add
lods
fdivrl
push
push
adc
shrb
push
inc
add
inc
mov
lods
push
dec
or
dec
sub
add
sub
and
data16
adc
push
sar
hlt
xor
shl
pop
adc
mov
add
jno
out
test
sbbl
push
cmp
scas
call
sbb
fisubrs
or
or
ficoms
mov
jl
test
or
sbb
xor
xchg
stos
or
or
nop
xchg
sub
add
testb
js
jecxz
adc
pop
cwtl
push
adc
sbb
or
mov
faddl
dec
and
push
sub
std
data16
sub
jo
inc
xchg
insb
ljmp
pusha
jb
mov
idivb
fsubrp
rcrb
push
xchg
inc
push
lea
push
or
filds
ret
out
lds
mov
outsl
fldenv
xor
xchg
leave
adc
mov
and
pusha
or
xor
inc
xorl
loope
aam
faddl
sbb
sbb
and
in
rcrb
cmpsb
inc
xchg
inc
dec
add
rcrb
int3
jp
jp
leave
incb
jle
inc
adc
jb
mov
loope
push
and
and
jp
pushf
xchg
rorb
pop
call
lcall
push
adcb
pusha
add
mov
call
cmpsb
jo
dec
fdivl
adc
or
fdivl
adc
cmp
dec
or
sbb
insb
cmc
add
ficoml
add
into
fists
std
clc
xor
sub
add
cmpsb
xor
pop
push
dec
sbb
mov
sbb
or
push
add
cs
push
inc
add
insb
cmp
mov
sbb
inc
inc
pop
mov
xor
pop
push
lea
shll
je
xor
inc
inc
pop
pushf
stos
lock
test
cld
nop
or
or
stos
test
test
or
xchg
iret
and
call
lret
es
sbb
mov
call
adcb
push
xor
lcall
je
sbb
nop
add
and
cs
jb
ror
add
out
data16
sub
cmp
cltd
imul
leave
test
adc
sbb
pushf
xor
int
push
mov
cs
jo
or
push
or
jo
and
insb
xor
shrb
test
and
and
push
sub
ss
lret
dec
mov
loopne
les
jb
inc
sbb
scas
ficomps
and
push
dec
addb
pop
sbb
xchg
in
jae
int3
mov
or
les
and
je
dec
or
ret
pusha
cmpb
mov
pop
push
lods
xchg
loopne
cltd
cmp
or
add
adc
push
daa
push
data16
std
shlb
sub
or
mov
bound
push
sbb
insb
adc
or
ljmp
jmp
inc
xchg
pusha
add
iret
push
mov
jp
lods
add
lock
ret
push
jp
xorb
loopne
push
xchg
nop
lcall
loopne
inc
cli
fcmovu
and
and
add
sbbb
or
and
and
push
cmp
cltd
movsl
fs
dec
push
mov
insl
mov
fisttps
and
mov
ljmp
faddl
or
cmpsb
sar
add
xlat
adc
mov
adc
andl
add
pusha
pop
lods
test
sub
and
mov
test
mov
ret
shrb
add
mov
adc
rclb
sbb
add
xor
jb
mov
pop
xchg
jo
mov
les
scas
clc
mov
xchg
ret
jle
aam
pop
sub
xchg
push
dec
or
xor
or
lretw
pop
sbb
sub
test
jle
push
and
loop
xor
call
inc
inc
fs
es
inc
ljmp
push
dec
mov
or
pop
or
sahf
push
orb
inc
mov
pop
adc
adc
and
ret
inc
nop
sahf
les
push
pop
cmp
mov
pop
push
xor
inc
add
push
inc
and
push
add
mov
xor
movsl
xchg
iret
les
add
fisubrs
pop
inc
xor
or
sub
or
mov
jb
push
ret
pop
sbb
inc
sbb
sub
xchg
sub
mov
jp
cmp
daa
sbb
fdivp
adc
or
les
sbb
adcb
xor
cmp
jl
stos
addl
dec
push
jo
call
pop
daa
mov
lret
or
or
daa
jo
adc
xchg
add
dec
lods
inc
sbb
cmpb
sbb
cmp
sbb
out
mov
or
xor
mov
bound
mov
mov
and
adc
rorb
or
in
or
cld
mov
sub
incb
cmp
loopne
adc
test
lahf
mov
jo
pop
or
pushf
push
and
push
sarb
movsb
xorb
cs
and
dec
mov
push
dec
inc
sub
cmpsb
mov
ret
dec
addb
mov
add
movlps
insl
rolb
pushf
and
push
xor
cs
sbb
add
push
lock
mov
fsubr
or
xchg
ret
aam
call
out
adc
call
xor
xor
pop
push
cwtl
xchg
xor
and
and
fisttps
adc
lock
ljmp
cmp
cmp
mov
inc
stos
inc
add
sub
pusha
push
inc
mov
mov
jb
jb
hlt
lods
mov
cltd
push
push
pop
mov
enter
and
sbb
sbb
push
fmuls
leave
sbb
push
adc
les
jae
and
out
andb
or
mov
and
adc
add
and
add
xchg
add
int3
das
dec
adc
inc
xor
or
cmp
inc
pusha
mov
lea
sbb
add
mov
nop
push
inc
dec
jo
hlt
cmp
push
aaa
xchg
js
outsb
cmp
outsb
adc
sarb
lea
sbb
inc
mov
les
dec
xchg
sahf
cwtl
test
mov
sub
adc
xor
lret
and
add
ss
mov
and
push
loope
add
cmpsb
loopne
ficomps
xchg
nop
sub
mov
add
and
pusha
sub
jo
dec
dec
sub
xor
leave
push
dec
cs
jle
sub
movsb
test
scas
pop
jb
push
shlb
push
push
push
pop
lods
push
scas
pop
sub
test
inc
dec
or
add
pop
movsb
add
insb
push
sub
jp
adc
pop
ret
push
inc
sub
add
sub
add
addl
out
stos
mov
dec
jo
pop
or
daa
mov
into
shrl
add
xchg
sbb
or
xchg
pop
push
call
dec
xchg
pop
inc
dec
daa
add
or
cwtl
push
pop
sbb
add
inc
mov
mov
add
xchg
hlt
push
scas
pop
push
xor
sbb
push
xchg
loope
or
dec
cmp
loopne
or
fsubrl
push
ss
in
sti
nop
sbb
jne
ss
cwtl
shrb
xor
xor
clc
les
ljmp
cmp
adc
xor
adc
fmull
sahf
test
xchg
xchg
sub
cs
and
pop
cltd
rcrb
xchg
ds
and
adcl
es
jb
dec
pusha
movsb
dec
or
or
xchg
mov
nop
dec
sub
hlt
or
mov
or
int3
aam
sub
adc
sub
in
or
sbb
lock
or
test
add
lods
insb
adc
xchg
les
cwtl
or
test
adc
cli
add
shrb
daa
sub
push
adcl
or
and
adc
lret
movsb
and
push
add
movb
adc
test
mov
dec
mov
sub
add
loopne
ss
leave
stos
pop
fs
sub
xchg
bnd
mov
enter
adc
and
dec
sub
hlt
xchg
ss
bound
cwtl
and
mov
inc
lcall
jb
sub
fidivl
push
jbe
xor
lret
rcrb
mov
or
nop
or
bound
cld
mov
jp
pusha
push
push
or
inc
cwtl
sub
mov
fcmovnbe
mov
cmp
mov
add
mov
lea
lock
push
mov
hlt
rolb
push
jmp
push
dec
rcrl
in
add
xor
sub
push
mov
mov
pop
out
mov
aaa
lea
mov
adc
aas
fwait
imul
adc
add
sub
mov
jg
mov
icebp
sbb
rorl
add
lret
rclb
int
lret
mov
add
mov
faddp
jb
and
das
add
int3
ret
mov
nop
cmp
orb
add
jl
orb
pop
lret
xchg
and
lcall
and
fwait
test
adc
inc
dec
and
jbe
xor
ss
or
mov
cld
popa
add
push
xchg
add
bound
orl
xor
push
orb
es
dec
and
sahf
and
adc
lret
int3
stos
push
pop
addb
add
push
sub
xchg
test
xchg
add
or
outsb
pop
xchg
ret
and
push
pop
jp
cmpb
sub
xchg
nop
cli
pop
mov
pop
les
add
mov
mov
adcb
and
hlt
mov
cmp
out
dec
sbb
adc
pop
mov
in
jb
cld
test
cmp
cmp
jo
push
push
pop
ret
in
orb
mov
mov
sub
lock
push
sub
cwtl
or
ficoms
dec
cmp
cmp
xor
sub
rol
and
test
divb
mov
cld
pop
inc
shll
sub
xor
push
mov
add
push
or
push
mov
ds
dec
movsl
lock
cs
sub
stos
aaa
sub
inc
pushf
js
fidivl
add
lret
or
imul
call
jb
and
inc
add
mov
mov
xor
xor
adc
and
jbe
js
add
insl
sbb
add
push
push
aam
jo
hlt
mov
dec
in
cmp
and
insb
and
xor
insb
add
cltd
add
and
xchg
lret
mov
mov
mov
and
sbb
push
dec
xchg
ret
xchg
push
mov
test
push
xlat
and
bound
sub
and
mov
dec
inc
popa
push
xor
rcll
push
push
xor
rcrb
pop
xchg
add
xor
sub
xchg
adcb
sbb
inc
sbb
les
rclb
xor
cld
push
pop
add
inc
sbb
je
xchg
and
jb
adc
or
inc
push
lret
sub
rclb
adc
rcr
subb
push
ret
inc
sub
adc
es
dec
cmp
test
testb
add
int3
ds
push
or
iret
test
xchg
push
push
or
jl
testl
fisubl
cmpsl
xchg
xor
cmp
into
mov
mov
sub
nop
mov
push
daa
pusha
and
ficoml
pop
push
sub
mov
xor
mov
shrb
adc
dec
insb
leave
or
lock
add
je
adc
orl
xor
ret
and
mov
mov
das
adc
jne
xor
adc
and
fidivl
arpl
cmp
lock
adc
test
mov
loop
or
push
cli
lcall
int3
sbb
add
push
aam
pusha
mov
cwtl
es
pop
int3
imul
mov
nop
jno
or
adc
dec
sub
call
sub
call
sbb
adc
in
inc
sbbl
cld
loop
jbe
mov
sbb
xchg
add
or
push
addr16
adc
add
je
push
add
sub
ljmp
mov
pushf
push
fmuls
cs
ljmp
rcr
pusha
insl
mov
cwtl
push
insb
cmp
lcall
or
mov
sarl
push
add
add
insl
mov
pop
loopne
enter
cmp
nop
push
data16
xchg
cs
and
insb
mov
inc
and
sub
pushf
clc
aas
subb
imul
movsb
or
dec
stc
cmpb
adc
mov
or
lock
or
or
cmp
mov
adc
and
or
dec
fisubrs
jo
negb
cmp
mov
ret
jb
pop
or
adc
daa
inc
mov
call
xchg
pusha
sub
mov
pop
or
and
mov
out
add
xor
xchg
and
pop
std
cwtl
aam
dec
xchg
add
adc
push
sub
xchg
jle
adc
add
data16
adc
add
dec
or
lret
ret
mov
test
push
xchg
push
mov
and
cmpsb
mov
and
or
jp
test
and
push
and
and
shll
lret
inc
ljmp
push
cmp
aam
add
cmp
sbb
pop
xchg
push
js
sbb
rolb
ficoml
idivb
loop
push
inc
mov
mov
or
xorb
dec
jg
data16
push
xor
fs
aam
mov
and
dec
push
jbe
push
sbb
xchg
push
adc
loopne
aam
mov
mov
add
adc
mov
mov
push
push
add
xchg
ljmp
insb
dec
push
push
pusha
push
data16
jo
daa
sub
xchg
or
test
lret
pusha
das
add
mov
inc
in
add
ss
nop
addb
test
xchg
adc
mov
pop
pop
js
or
mov
testb
sub
scas
rclb
mov
xchg
dec
dec
ret
loop
cs
aaa
loope
pop
ret
leave
and
mov
bound
mov
inc
sbb
pop
pop
mov
sbb
les
xchg
dec
dec
cltd
pusha
lcall
mov
xchg
push
xlat
and
xor
ret
mov
push
add
jl
rorl
pop
test
clc
mov
cwtl
dec
push
test
clc
rclb
es
das
rorb
jb
popf
or
es
push
sub
xor
xchg
push
inc
and
add
xchg
cmp
lds
sbb
xchg
dec
repnz
mov
enterw
gs
pusha
outsb
inc
push
xchg
cmp
cwtl
icebp
xchg
or
testb
dec
outsb
jo
fs
xor
int3
les
xchg
fidivs
mov
mov
xor
jb
cs
push
inc
loopne
or
sbb
xor
mov
dec
push
push
sub
nop
sub
add
jp
test
popa
fs
mov
cs
adc
push
jmp
sbb
adc
inc
push
fdivrl
mov
jne
fcoms
xchg
call
xor
sub
dec
cs
pop
js
mov
fisubl
cli
sbb
xchg
cmovnp
ficompl
shl
sbb
and
sbb
push
ficoms
mov
mov
loop
int3
insb
mov
sub
adc
insb
jae
push
sahf
adc
mov
cld
out
mov
call
mov
cmpsb
or
out
adc
xchg
sub
add
add
sahf
es
fs
stos
xor
aam
and
mov
adc
ds
xor
pop
mov
mov
pop
sub
xchg
or
mov
es
inc
and
or
xchg
add
adc
mov
and
iret
dec
push
mov
test
or
mov
inc
mov
xor
nop
adc
sbb
sub
movsb
cld
test
scas
rcll
jl
sarb
and
mov
adc
mov
test
lret
fadds
mov
cmp
js
inc
add
insb
cmp
popf
insb
push
push
mov
nop
inc
pop
xor
adc
inc
jo
sbb
lret
add
pop
xchg
mov
test
xor
je
dec
mov
in
adc
push
push
insb
in
xchg
or
adc
pop
insb
movsl
es
mov
adc
mov
ret
cmp
es
xor
mov
xchg
xchg
push
mov
xchg
rcll
adc
lock
movsb
adc
xchg
inc
pop
jbe
es
xor
fiadds
jp
cmpsl
push
inc
adc
in
shrl
or
push
pop
add
cmp
call
into
add
sbb
dec
push
clc
aad
sub
mov
out
push
sbb
jg
push
mov
xlat
mov
jb
push
adc
push
test
out
xchg
or
gs
scas
xchg
call
insb
pop
xchg
add
int
inc
add
sbbb
addl
or
mov
inc
dec
je
aam
es
enter
aam
push
adc
push
test
sub
sub
mov
rorb
xchg
or
outsb
test
imul
push
es
cpuid
mov
add
inc
inc
xchg
cltd
push
push
mov
pusha
andb
sbb
push
dec
loopne
push
movsl
lods
ror
call
mov
push
and
dec
xor
insb
sbb
out
mov
jmp
or
movl
add
scas
pop
push
pop
js
inc
stos
adc
fdivr
mulb
es
push
bound
inc
cli
pop
xchg
push
pop
push
adc
xchg
sub
pop
xchg
dec
or
mov
xor
or
inc
fdivrs
call
mov
mov
xor
repnz
nop
in
pop
and
xchg
ljmp
ss
pop
in
sbb
or
xchg
dec
mov
push
add
adcb
test
dec
fadd
and
lds
popa
or
xor
ret
push
add
cmp
in
in
push
and
test
add
push
cs
inc
dec
push
fxch
push
mov
and
cltd
mov
mov
inc
mov
outsb
add
iret
clc
xor
jl
div
rorb
gs
mov
mov
or
sub
test
push
iret
iret
and
mov
mov
mov
es
je
inc
adc
clc
lret
push
cltd
bound
daa
pop
mov
out
dec
push
shlb
push
ss
dec
int3
test
push
sbb
inc
push
pop
sub
or
ds
test
dec
add
inc
cmp
inc
cmpsl
lods
sarb
adc
xor
faddl
push
or
or
and
dec
inc
repnz
lret
or
sub
mov
lock
xor
mov
sub
mov
add
inc
push
outsb
dec
add
data16
jo
pop
add
aad
es
call
or
dec
sub
hlt
faddl
cli
push
adc
pushf
stos
adcb
call
stos
mov
inc
push
call
enter
call
loopne
lret
push
add
inc
sub
jbe
mov
xchg
repnz
push
mov
das
loopne
test
adc
inc
fs
xchg
push
es
add
add
adc
add
test
push
ss
mov
jb
in
ss
ss
adc
sbb
rcrb
push
rolb
push
jo
cmpsb
cld
sub
pop
adc
pushf
sbb
pop
or
aam
or
enter
push
add
push
outsb
dec
mov
mov
divb
cmp
adc
mov
xor
xlat
nop
fidivrs
xor
mov
xor
inc
mov
xchg
mov
insl
mov
call
push
std
pop
loopne
sbb
xor
inc
lcall
xor
call
pop
mov
mov
mov
mov
mov
lcall
ror
pop
add
js
sub
sbb
xchg
add
cltd
sub
push
sub
cli
adc
and
xchg
xchg
bound
or
mov
inc
mov
jno
mov
sbb
popa
nop
mov
ret
or
es
movsb
or
ret
int3
xor
sub
xor
pop
cmp
jg
adc
lret
xor
loope
es
dec
push
jl
out
xchg
ficompl
inc
jo
rcr
push
ljmp
jo
inc
or
lret
test
cli
pop
fstl
mov
pop
dec
hlt
lods
dec
jecxz
lcall
jp
jge
lods
in
xor
out
cmpsl
and
jp
mov
ss
mov
and
mov
or
dec
pusha
pop
ljmp
scas
cmpsl
mov
adc
pop
rol
rorl
xor
mov
cld
jp
cltd
flds
repnz
ret
test
sbbb
push
out
push
push
stos
xchg
or
cmpsb
sbb
popa
mull
and
mov
xchg
rcrl
push
push
xchg
dec
loopne
sub
andl
xor
or
and
fs
subb
add
or
insb
add
loopne
hlt
push
push
lods
gs
xor
push
or
stos
dec
or
push
add
dec
test
xchg
adc
adc
repnz
fs
bound
es
fs
jb
lock
cmp
dec
xchg
mov
adc
shl
mov
xor
shl
xorl
test
sbb
push
jb
loop
jb
dec
cltd
mov
js
dec
inc
cmpsb
mov
shrb
loop
xor
cs
or
cmp
test
xor
and
sbbb
and
fs
pop
or
cld
lock
pop
addb
mov
addb
outsb
mov
and
push
or
inc
hlt
test
adc
lock
add
xor
pop
cmp
push
adc
push
or
push
add
adc
cmp
cmpsb
rorl
add
bound
ss
mov
sub
movsl
sbb
adc
xchg
cli
adc
mov
cli
fisttps
fsubrp
or
adc
mov
lret
inc
insb
mov
into
pop
mov
push
pusha
lea
dec
rolb
les
rcrb
jo
mov
cltd
and
addb
and
mov
cmpsb
adc
rcrb
adc
rolb
xchg
iret
dec
xchg
xor
lret
sub
sub
sbb
or
or
xchg
inc
jbe
repnz
and
les
xor
add
xor
push
xchg
add
loopne
mov
mov
cmp
push
mov
adc
inc
sbb
xchg
sub
sub
scas
mov
lcall
jbe
in
or
fs
cld
add
sbb
push
dec
andb
dec
inc
sbb
dec
add
out
xchg
and
mov
mov
fs
or
xor
adc
lret
cwtl
and
les
bound
sub
mov
js
pop
roll
out
and
daa
sub
mov
inc
xchg
rolb
nop
jnp
int3
sub
cmpb
mov
add
mov
pop
dec
ret
xchg
add
xchg
mov
rclb
and
xchg
or
xchg
mov
mov
mov
cmp
mov
mov
insb
idivb
cmp
cltd
xchg
pop
and
in
jl
orb
adcb
cmp
push
inc
xchg
outsb
adc
or
cs
xchg
mov
ss
xchg
xor
js
les
mov
lea
shlb
adc
adc
add
outsb
movsl
and
pop
push
mov
es
sbb
mov
xor
dec
insb
addb
mov
ret
fcompl
and
lds
mov
fdivrl
sbb
push
pop
jmp
es
xchg
dec
lock
mov
enter
or
pushf
push
xor
enter
xchg
fimuls
push
mov
cmp
push
pop
cli
mov
outsb
mov
data16
rcll
into
sbb
adc
xchg
xchg
push
pop
dec
mov
add
rcl
rorb
xor
add
push
lret
jne
mov
adc
dec
dec
or
add
test
dec
icebp
push
add
ljmp
cmpsl
icebp
insb
dec
and
scas
int
sbb
or
add
jge
cmp
push
orb
xchg
cld
dec
or
pop
nop
rolb
xor
mov
pop
inc
fimuls
inc
test
and
sbb
dec
sub
xchg
pop
ljmp
cmp
or
cmpb
jl
ljmp
mov
inc
jo
int3
push
push
or
cmpsb
popa
loope
mov
and
push
dec
test
sti
in
pop
les
xchg
jo
ljmp
pop
inc
or
inc
movsb
lods
rclb
pop
xorb
xor
or
pusha
test
out
cmpsb
adc
lcall
jb
dec
push
or
andb
dec
int3
sbb
bound
pusha
faddp
rcll
add
jbe
loopne
push
add
pop
movsb
sbbb
mov
adc
fsubl
imul
pushf
lds
sub
mov
cmp
aaa
dec
inc
enter
pusha
ret
clc
cmpsb
or
aam
mov
sbb
mov
fs
push
xor
sbb
adc
enter
add
leave
and
inc
inc
mov
add
cmp
pushf
insb
mov
xchg
push
or
mov
add
add
hlt
adc
lret
push
push
xchg
fstpt
adc
rclb
dec
or
loop
stos
adc
xchg
int3
mov
jl
test
and
rclb
out
test
sub
mov
xchg
and
test
push
shrl
push
hlt
ljmp
jo
out
push
pushf
sahf
or
rolb
jno
in
xchg
repnz
js
push
bound
push
mov
cld
hlt
std
jle
leave
and
out
es
or
adc
jb
sub
mov
add
push
inc
adc
mov
out
mov
dec
andb
lret
add
adc
loopne
or
push
pop
pushf
cmpb
sbb
and
add
or
mov
add
test
test
xchg
loopne
test
or
xorl
push
add
pushf
inc
fists
ss
cltd
je
call
rclb
pop
push
push
fildll
adcl
push
not
pop
inc
adc
mov
cwtl
cmpb
cwtl
mov
and
push
shlb
push
pop
inc
add
test
push
sbb
fdivl
push
fs
jne
or
adc
les
jo
nop
std
mov
sbb
out
mov
xchg
xchg
pusha
mov
rorl
and
shlb
inc
push
xor
fisubl
add
inc
push
and
mov
xchg
adc
dec
or
pop
xchg
daa
xor
gs
push
cltd
and
test
mov
dec
jmp
pop
fs
nop
les
es
mov
adc
aam
or
cmp
pop
call
and
push
cmp
xor
insb
adc
xor
dec
insb
dec
mov
mov
dec
push
data16
xchg
add
inc
insl
mov
pop
sub
inc
inc
xchg
orb
xor
adc
pop
pop
add
ret
dec
dec
sub
add
pushf
nop
or
inc
shrb
pop
push
and
lret
addr16
and
xchg
test
mov
loopne
or
insl
xchg
movb
or
push
movsb
js
inc
inc
cmp
push
sbb
cmp
inc
add
inc
xchg
sti
xchg
fcoml
enter
lds
les
dec
xor
fs
pop
add
xor
les
push
adc
cwtl
ficoml
or
pop
mov
roll
outsb
iret
xor
mov
jo
add
and
inc
mov
psrad
push
xor
add
into
push
pop
xor
data16
and
lods
add
insb
dec
cmp
iret
xor
and
lcall
inc
ss
mov
or
loopne
adc
test
insb
or
xchg
xorb
cwtl
sarb
jbe
push
adc
mov
sub
les
and
je
mov
sbb
jbe
push
leave
ret
outsl
test
cwtl
out
mov
daa
test
adc
xchg
pop
sbb
fmull
idivl
mov
incl
xlat
sub
mov
sub
sbb
sub
add
jae
cmp
ljmp
add
cld
add
push
push
pop
inc
add
sub
pop
nop
adc
pushl
jne
mov
test
std
data16
sbb
stos
pop
jg
xchg
or
inc
test
mov
popa
push
pop
mov
adc
insb
mov
or
test
pusha
inc
jg
adc
fidivs
enter
and
fistps
movsb
mov
daa
cmc
mov
sahf
xchg
cmpsb
sub
outsb
std
cs
rclb
and
xchg
test
sbb
or
jle
sti
jg
sub
or
xchg
std
and
lds
mov
es
mov
inc
mov
sub
inc
pop
shrb
jg
dec
and
xor
adc
lds
and
aam
outsb
fiaddl
into
mov
push
add
inc
ret
cwtl
and
add
cmp
cmp
add
inc
add
stos
lods
or
pop
push
xor
test
ljmp
push
push
and
mov
dec
cmp
pop
or
or
mov
add
movsl
and
xchg
mov
jo
adc
inc
loopne
add
loop
outsl
or
push
cs
test
aam
xor
repnz
add
es
or
push
inc
sar
push
and
jo
add
roll
xchg
jp
inc
add
jmp
cs
mov
mov
or
shlb
or
or
xor
fisubrl
movsl
dec
cld
pop
mov
xchg
push
cmp
loopne
mov
lret
add
mov
cmp
inc
dec
je
add
leave
xchg
fidivrl
xchg
adc
shlb
pop
xor
mov
jne
add
pusha
fimull
mov
js
ljmp
addl
mov
addb
push
loop
les
int3
ret
inc
rcl
cli
cmp
in
dec
bound
lcall
mov
mov
outsb
enter
scas
mov
popa
add
xor
cmpsl
adc
or
adc
mov
gs
dec
bound
ret
inc
xor
adc
add
rclb
adc
sbb
push
dec
and
pusha
add
adc
out
pusha
xor
stos
xor
and
jo
cmp
ljmp
sub
dec
std
xchg
mov
xchg
call
push
add
gs
cs
mov
xchg
lea
push
adcb
andb
movsl
enter
push
dec
push
inc
movsb
fistpl
adc
es
mov
mov
add
loope
adc
rorb
sbb
adc
and
dec
push
jmp
jp
inc
jbe
inc
mov
lret
mov
call
jo
mov
mov
push
mov
es
inc
mov
inc
add
adc
add
gs
or
jo
sbb
cmpb
adc
xor
pop
enter
or
or
shrb
lret
cmp
xchg
or
daa
or
sahf
mov
or
add
mov
mov
xchg
out
and
or
and
xor
add
movsb
mov
jo
dec
push
movsb
push
js
mov
and
pop
movsb
addb
cmpsb
pop
fwait
xchg
cltd
and
push
and
in
xor
xor
push
push
stos
sbb
push
sub
push
or
mov
pushf
adc
push
sbb
ret
xor
ficomps
lock
mov
loopne
out
sbb
dec
jb
cmp
sub
aam
cmpsb
or
or
xor
or
lret
inc
or
cltd
les
repnz
loopne
addb
das
dec
cmp
sub
or
dec
xor
cmpsb
dec
pusha
xchg
dec
gs
mov
sbb
cmpl
cs
adc
or
call
sub
aam
hlt
cmpsb
xorl
cltd
inc
xor
ss
hlt
loop
rolb
imul
int3
push
rclb
xchg
xor
jo
loopne
or
push
movsb
mov
lret
mov
pop
pop
push
add
lods
add
subb
adc
push
lret
out
bound
enter
clc
out
sbb
push
out
xor
fistpll
jle
nop
push
test
adc
add
lcall
jb
dec
mov
sbb
add
xchg
mov
xor
les
gs
jl
add
js
push
pop
inc
inc
int3
orb
add
insb
xor
add
mov
dec
cmp
adc
jecxz
sub
fidivrs
push
bound
xchg
addl
popa
adcb
fsubrl
push
inc
pusha
add
xchg
sarb
lcall
mov
push
loopne
xor
call
lods
add
xchg
loopne
sbb
add
xor
mov
int3
imul
test
and
cli
sub
ljmp
mov
sub
hlt
mov
add
sub
dec
cld
rcl
cltd
mov
dec
cmp
lock
into
in
xchg
and
xchg
cli
pusha
lds
std
jbe
or
sbb
mov
in
xchg
cwtl
adc
push
add
dec
adc
js
pushf
push
adcl
fstp
imul
loop
push
fmul
jo
mov
lods
or
pushf
or
pushf
push
shll
cmpsb
fiaddl
and
add
adc
jo
jp
loope
inc
jnp,pt
gs
push
lds
hlt
leave
cmp
sbb
call
sbb
test
xchg
add
inc
fs
xchg
pop
inc
mov
int3
aam
mov
into
lret
add
or
orl
fcompl
mov
or
xor
xor
or
in
and
and
fisubl
add
xchg
gs
push
and
iret
mov
mov
loopne
ds
push
sub
ficompl
es
ljmp
ljmp
enter
sbb
aam
pop
inc
loop
push
push
inc
push
add
cli
adc
in
test
loopne
add
and
rolb
test
push
mov
dec
ficoml
mov
pop
xorl
mulb
rcrb
or
jl
in
stos
or
cwtl
sar
inc
add
dec
incb
sbbb
shlb
and
movl
jae
push
sbbl
add
xchg
fmull
push
enter
js
fimull
sub
mov
lock
shlb
inc
lahf
adc
test
push
add
or
dec
mov
and
dec
jb
xor
mov
adc
mov
clc
jp
inc
jp
xchg
inc
jb
std
mov
sahf
mov
and
movsb
inc
enter
mov
outsb
mov
push
daa
mov
or
sub
rolb
pop
call
mov
ret
xchg
adc
not
or
fs
xor
sub
nop
xor
push
sub
stos
mov
sarb
mov
popw
push
cmpsb
mov
mov
jo
cmpsb
jo
ret
sahf
outsb
cli
orb
jo
mov
push
add
sbb
pop
pop
mov
fmulp
cmp
inc
inc
or
inc
loopne
push
add
shrb
sub
mov
sub
movsb
and
shr
push
pop
adc
jl
push
fcoml
rolb
xor
pop
fsubl
xchg
stos
jg
dec
or
dec
push
inc
adc
test
or
xchg
into
test
add
test
popa
inc
xchg
add
push
add
mov
or
sub
sahf
sub
hlt
mov
jbe
cs
jne
add
test
push
lock
sub
pop
add
std
je
inc
adc
mov
clc
les
sahf
mov
lods
sbb
sub
dec
test
xor
mov
xor
cmp
adc
xor
jecxz
xor
sbbb
dec
inc
push
and
add
add
xor
xor
cmp
sub
popa
sub
push
sub
push
pop
fdivrl
pop
jb
mov
dec
test
sub
inc
jo
sub
and
cld
aaa
dec
add
int3
pop
mov
cmp
pop
dec
loope
add
mov
pop
adc
jg
dec
sbb
xor
mov
push
cmp
dec
jo
int3
repnz
or
adc
adcb
and
sbb
cwtl
add
or
je
test
loop
or
mov
mov
sub
mov
insb
cmp
fcomps
test
add
inc
jl
xchg
add
or
or
xorb
and
or
add
mov
inc
ss
inc
loopne
push
in
jb
mov
dec
pop
or
test
dec
fcoml
enter
adc
testb
inc
test
movsb
stos
mov
mov
test
xlat
loop
or
stos
pop
popa
or
push
clc
sub
mov
push
pop
ljmp
sbb
dec
pop
mov
xor
test
and
js
scas
daa
sub
xor
lret
test
or
rcl
ret
pop
and
inc
or
mov
mov
dec
or
lds
xchg
sbb
mov
dec
add
xor
es
push
adc
sbb
sbb
mov
pop
cwtl
xor
sbbb
call
into
inc
les
loop
dec
jo
pusha
enter
jb
sub
lcall
cli
mov
pusha
push
cld
add
inc
dec
jb
and
push
lock
add
popa
cs
into
mov
nop
cmp
add
adc
add
add
add
sbb
data16
movsl
xor
mov
mov
loop
pop
call
nop
or
pop
cmp
icebp
and
xor
lds
add
push
add
es
and
test
shlb
xor
inc
and
sub
or
xchg
jp
call
mov
pop
out
dec
push
mov
dec
test
xor
push
mov
test
in
inc
add
adc
add
cmp
pop
and
or
xor
jle
aam
cmp
mov
xchg
rol
mov
sub
stos
and
push
mov
call
mov
xor
inc
fs
jecxz
sub
inc
mov
and
subb
and
les
push
xchg
leave
xchg
mov
outsb
dec
inc
add
push
and
dec
xor
sbb
and
ret
clc
stos
dec
adc
outsb
addl
cmpsb
xor
cld
jo
add
or
inc
mov
mov
cwtl
movb
int3
loop
push
pop
dec
nop
call
mov
gs
js
add
hlt
into
movsl
xchg
mov
xor
shr
fcoms
andb
leave
mov
dec
sub
pop
data16
xor
inc
mov
jne
decb
mov
mov
mov
std
les
rclb
mov
test
andl
jb
cmp
dec
and
dec
mov
bound
add
add
test
cwtl
lods
js
add
adc
xchg
into
add
addl
aam
aam
ret
std
sub
les
jl
adc
cmpsb
data16
or
mov
es
addb
fists
nop
jbe
mov
mov
push
lret
into
cs
js
subb
lds
cmp
nop
jbe
mov
pop
lds
xchg
sbb
adc
and
pop
sbbb
adc
leave
push
inc
sub
xchg
rorb
ficoml
xor
dec
test
inc
lock
cmp
test
add
mov
inc
pop
push
repnz
dec
loopne
sub
cmpsb
aam
and
push
add
or
add
enter
sub
gs
dec
cmp
pop
mov
cld
mov
or
mov
inc
rol
mov
ds
gs
adc
xor
mov
movsb
xchg
jo
fsubrp
enter
jle
push
mov
dec
stos
pop
adc
adcl
ljmp
jnp
sbbb
mov
xor
js
pusha
add
add
xor
add
enter
inc
jae
das
test
mov
pop
pop
push
and
push
in
mov
add
in
xor
sbb
or
xchg
dec
sahf
push
push
add
push
xchg
out
push
xor
lea
and
mov
test
roll
xchg
push
dec
rorb
sbb
cld
xor
dec
in
or
and
test
xchg
insb
inc
fs
adc
scas
jp
shll
sar
add
cltd
fcmovnb
xchg
mov
pop
inc
jbe
push
push
scas
xchg
mov
add
xchg
xor
sub
cmp
int3
mov
adc
push
int3
mov
and
mov
pop
hlt
gs
pop
push
lock
mov
pop
and
aam
pushf
sbb
mov
mov
fmuls
xor
aam
cmp
dec
mov
mov
pop
sub
lea
mov
sbb
mov
mov
sub
enter
xor
lcall
cwtl
sub
cwtl
mov
adcb
pop
sub
add
loopne
add
mov
or
pop
xor
cs
jbe
push
in
mov
and
and
adc
test
shlb
cld
mov
into
xor
loopne
stos
or
cli
ljmp
std
mov
jnp
and
rclb
add
cmp
orb
add
loopne
loop
add
or
leave
pushf
and
out
adc
inc
data16
mov
or
fsubrs
and
cli
adcb
jle
sub
sbb
inc
pop
push
shlb
add
les
bound
adc
test
aad
add
adc
leave
in
sub
and
push
push
xchg
and
xchg
cmp
and
add
inc
int3
aam
xchg
xor
dec
adc
arpl
or
shlb
scas
inc
adc
sbb
cmovnp
dec
sub
or
movsb
inc
adc
jg
test
and
lods
xchg
add
pop
dec
mov
fcoms
pop
or
fiaddl
push
lds
mov
dec
pop
sarb
aam
and
sbb
pop
push
mov
lds
cmpsl
je
pusha
push
add
or
mov
mov
sbb
dec
mov
out
xor
push
sub
xor
mov
sbb
mov
push
lret
sub
shlb
or
into
adc
es
gs
add
dec
inc
or
xchg
push
ret
jo
out
ret
lcall
inc
daa
or
inc
push
cmp
push
inc
movsb
mov
les
in
sbb
shrb
inc
inc
add
fsubrl
loop
mov
inc
push
js
cli
dec
popa
push
in
test
push
shl
xor
and
ret
mov
mov
fdiv
mov
in
and
xchg
mov
xchg
jp
shr
xchg
jo
or
cmp
xor
sub
mov
jb
inc
cs
popa
ret
jo
in
adcl
inc
sbb
test
jb
into
fidivrs
mulb
data16
and
and
mov
adc
mov
add
or
dec
pop
sub
sbb
inc
inc
mov
mov
movsb
push
adc
je
aam
hlt
gs
cld
mov
xorb
pusha
inc
pop
lret
ss
in
lret
adc
xchg
or
test
push
sbb
sti
mov
subl
mov
push
and
inc
sub
xor
inc
lds
mov
ljmp
mov
insl
loope
or
call
jo
insl
loop
sbb
mov
inc
cmp
cmpb
int
push
push
repz
add
fsubs
jecxz
mov
push
sub
mov
or
adc
inc
jo
add
pop
pushf
or
jo
cltd
push
adc
adcb
addb
dec
dec
adc
fcomp
xor
cmpsb
in
rolb
cltd
popa
and
sbb
dec
and
mov
aam
jbe
mov
and
enter
add
mov
inc
test
dec
adc
inc
in
adc
out
dec
cmpsb
orb
sbb
push
sbb
lods
mov
or
aaa
add
call
mov
add
inc
dec
adc
repnz
add
pushf
jle
movsb
mov
jo
inc
jp
test
add
out
roll
push
outsl
pop
pushf
lods
xchg
xchg
add
push
cmp
mov
fsubrs
jb
je
les
mov
push
push
mov
add
sbb
call
rcll
xchg
lcall
mov
and
sub
js
or
jl
mov
xchg
ds
addl
inc
and
mov
mov
adc
ss
mov
dec
xorb
sub
xor
push
pop
jl
xorb
mov
mov
outsb
push
scas
add
inc
cbtw
push
out
add
test
popa
inc
rcll
push
mov
adc
pop
dec
xor
pushf
jno
mov
adc
inc
test
jo
jno
xchg
and
push
sub
mov
dec
sbb
fisubs
popf
push
sub
sbb
adc
sub
add
ljmp
xchg
jbe
inc
cmc
addl
cli
in
in
mov
test
or
insb
and
loop
sub
je
dec
xchg
call
aaa
insb
rcr
xchg
inc
xchg
add
and
enter
cmp
xor
test
dec
inc
lds
in
mov
and
and
push
add
add
lret
cld
push
data16
xchg
sbb
jb
push
incb
test
aam
shlb
lods
xor
or
pop
outsl
add
or
sbb
call
sub
or
or
sub
call
test
cmp
mov
add
sub
mov
push
nop
lret
lcall
int3
adc
adc
mov
int3
cmpsb
sahf
push
sti
sub
shlb
sub
xchg
add
or
dec
push
imul
jo
les
xor
movsb
cmpsb
sub
mov
test
xor
cmp
or
add
ss
ficoml
add
loopne
dec
xor
insb
popa
sbb
xor
je
and
popf
dec
xchg
pop
rcrb
pusha
out
sahf
mov
mov
mov
sub
sub
outsb
push
mov
call
and
xor
insb
mov
adcb
jecxz
daa
pop
mov
popf
add
mov
jb
and
mov
stos
lret
push
inc
mov
adc
push
sar
shlb
adc
add
or
sub
outsl
add
pop
jg
xor
sub
in
pop
pop
outsb
or
in
jbe
or
sbb
cmp
xchg
mov
dec
lea
popa
mov
pop
and
mov
stos
adc
sti
sub
xchg
push
nop
leave
inc
les
nop
inc
aam
cmp
or
push
add
cmp
leave
mov
das
mov
and
add
inc
stos
xchg
jo
and
pop
out
push
scas
pushf
add
pop
and
jb
sub
dec
add
inc
push
or
movsl
adc
jb
inc
lock
add
push
lock
or
sub
sub
shr
and
popf
sahf
adc
jb
ret
dec
dec
sbb
test
push
in
xor
insb
in
adc
mov
cmc
ds
xor
sahf
js
push
or
adc
or
adc
push
sub
les
xchg
jmp
xchg
or
mov
dec
arpl
loop
sbb
push
push
pop
add
jne
lret
xor
or
fsubrl
dec
rolb
es
and
repnz
movsl
xor
mov
les
push
inc
mov
xchg
mov
add
aam
pop
mov
les
rclb
in
inc
les
adc
shlb
push
push
xchg
cmp
cs
jo
add
outsl
sbbb
pusha
xchg
push
and
mov
add
adc
push
jo
popa
dec
in
lds
orl
xor
data16
inc
pop
mov
cli
test
inc
xor
adc
outsb
pop
rolb
and
loopne
fcompl
xor
mov
cmp
int3
mov
inc
mov
mov
sbb
jbe
push
movsb
xchg
and
sub
mov
or
sub
and
cmp
aad
mov
orb
ret
mov
inc
sbb
decb
push
jl
in
xor
aam
mov
lret
push
xor
stos
sbb
add
push
sub
lods
adc
inc
cmp
pop
cli
jl
adc
sub
mov
pop
out
xor
xor
iret
enter
in
sbb
hlt
scas
or
sub
addb
add
aam
andb
loope
sbb
dec
push
adc
loopne
inc
sub
dec
cld
loop
popa
mov
xchg
loop
ret
mov
nop
fadd
or
rclb
dec
sbbb
sbb
call
gs
or
insb
mov
movsb
lret
add
lds
in
pop
andb
cwtl
fcomps
add
pusha
mov
inc
jne
or
push
clc
aaa
lcall
adc
inc
push
rcr
in
inc
add
xor
and
lcall
and
adc
xchg
mov
and
xchg
adc
pushf
pushf
test
inc
mov
sbb
mov
and
in
les
add
bound
jbe
or
data16
loop
adcb
xchg
pop
in
movsl
sti
push
in
inc
sbb
gs
mov
stos
out
dec
popa
adc
xchg
xchg
and
or
sbb
pop
or
push
clc
sahf
sbb
dec
jo
or
xchg
dec
cmp
pop
fimull
xchg
test
xorb
add
push
mov
xor
in
add
sub
xor
adc
pop
in
cmp
pusha
add
inc
cli
call
enter
sub
pop
andb
add
push
lea
shll
pop
xor
adc
inc
fadd
and
and
push
xor
clc
and
int3
fcmove
lds
mov
into
pop
mov
xchg
push
insl
sub
and
sub
push
lret
and
fcompl
test
adc
les
fidivl
sahf
lret
cmp
and
push
mov
adc
sbb
dec
xor
out
ret
sbb
pop
inc
and
pushf
inc
jbe
sbb
pop
push
sub
inc
outsb
cwtl
data16
nop
adc
push
xor
and
hlt
pusha
and
lret
jbe
cmpb
xchg
add
addb
xchg
cltd
aam
cmp
cltd
add
dec
int3
add
jnp
adc
adc
xor
add
loope
sbb
pusha
addr16
rolb
pusha
jo
ret
adc
push
push
jle
inc
lret
or
test
rolb
xchg
adc
jl
pop
and
nop
ret
mov
ret
and
in
sbbb
cmp
and
mov
jbe
cs
xor
mov
add
push
aam
pop
cld
dec
cmp
sub
rcrl
aad
add
test
dec
lock
mov
hlt
inc
mov
leave
or
inc
scas
out
andb
cmp
int3
mov
dec
pop
or
sub
push
adc
pop
adc
or
lods
sti
inc
dec
ljmp
pop
fsubr
xor
dec
inc
or
add
in
sub
imulb
out
push
loopne
or
push
mov
lret
test
sar
or
mov
mov
shlb
xor
stc
add
rcl
ror
add
or
pop
dec
dec
movsb
cmp
mov
inc
ret
aam
jo
adc
cmp
outsb
or
or
push
inc
dec
icebp
and
test
pop
xchg
lcall
pop
sub
loope
jo
loope
jp
loopne
add
xchg
es
test
and
and
int3
mov
and
sbb
ret
and
fsubrs
mov
xchg
addb
xor
or
and
adc
jbe
orl
sbb
jp
add
dec
mov
adc
je
push
rorl
push
sub
push
pop
scas
mov
pop
addb
sbb
and
sbb
cmp
pop
es
mov
test
mov
inc
mov
or
test
sbb
add
push
mov
xchg
inc
data16
pusha
ds
inc
or
sub
orl
adc
fistpll
inc
or
xchg
movsb
and
add
ds
inc
inc
inc
and
xor
adc
js
rolb
dec
inc
mov
mov
push
sub
xchg
test
add
adc
and
push
add
loopne
cwtl
inc
enter
push
pop
jp
or
mov
mov
inc
or
jecxz
stos
imul
je
data16
stos
sub
and
mov
or
jo
or
int3
outsb
daa
jmp
loop
lds
add
mov
pusha
enter
push
andb
add
jbe
cbtw
adc
fsubs
loopne
jp
mov
ljmp
push
push
push
movsb
ss
daa
sbb
xor
mov
lea
pop
sub
pop
aam
adc
clc
mov
call
sbb
outsb
hlt
xchg
or
or
lcall
sbb
in
hlt
fidivs
add
push
or
test
and
es
jo
out
jl
lds
je
loopne
inc
jbe
lcall
pusha
pop
add
pop
shlb
mov
mov
les
xor
cwtl
movsb
xor
add
push
or
mov
mov
insb
pop
fcoml
mov
push
and
sbb
inc
lds
lret
adc
ljmp
dec
inc
ljmp
cmpsb
or
cmp
test
push
mov
lret
out
xor
inc
call
ret
or
test
xchg
jae
inc
inc
adc
push
stos
adc
dec
ljmp
push
sub
add
or
and
loop
push
lfs
lds
pusha
xchg
push
ss
adc
cmp
push
int3
sub
inc
sbb
or
add
mov
dec
ret
and
push
mov
and
jo
loope
sbbb
es
mov
push
pop
out
in
xchg
pop
and
into
adc
fcomip
stos
mov
je
outsb
pop
test
add
mov
and
int3
and
adcb
mov
lock
insb
and
adc
in
add
dec
jle
loopne
xchg
rolb
sbb
loopne
or
sarl
and
pusha
cmp
test
dec
test
mov
push
inc
sbb
incb
fimull
xchg
popa
movsl
sarb
xor
aam
and
into
mov
ficoml
ret
pusha
jbe
and
lret
inc
data16
insb
stos
add
inc
xchg
iret
inc
cmpsb
adc
insb
cmp
loopne
mov
aam
and
mov
and
cmp
jp
outsb
stos
pusha
sub
or
dec
sahf
xchg
nop
cmp
jp
pop
mov
test
add
fcomps
jo
mov
adc
mov
push
inc
mov
mov
mov
fidivl
xor
mov
mov
adc
adc
jmp
imul
aaa
nop
adc
xor
out
jg
mov
pop
sbb
popf
insb
sub
sbbb
mulb
test
add
dec
push
mov
adc
pusha
mov
jo
mov
int3
adc
test
sbb
mov
orb
xchg
or
popa
cmp
xchg
add
dec
cld
lret
rclb
mov
jl
lret
dec
loopne
or
mov
or
pop
sbb
jne
mov
shrl
push
cld
and
mov
add
lret
dec
cmp
inc
pop
or
mov
adc
shlb
adc
push
and
roll
stos
add
fbld
add
or
and
adc
mov
add
inc
sbb
xchg
add
add
add
jmp
and
imul
insb
add
ret
sub
cli
movsb
sbb
and
jp
pop
inc
mov
cmp
shrb
aam
fs
sbb
add
add
ret
sbb
adc
ret
sub
cmp
inc
fcompl
pop
adc
mov
sbb
xor
test
repnz
mov
lcall
ret
mov
cltd
fstps
ret
mov
test
popa
cmp
mov
inc
test
sub
mov
inc
int3
fcom
stos
dec
push
addl
adc
call
aam
adc
ret
sahf
cs
insl
sbb
and
fdivs
lods
inc
scas
push
pop
pop
mov
dec
adc
adc
pop
inc
inc
sub
mov
xchg
sti
mov
sbb
pop
enter
push
cmpsb
push
adc
push
ret
inc
pop
and
sbb
jecxz
inc
cld
je
lcall
pop
bound
xor
or
je
movsl
mov
pusha
jl
rorb
xchg
adc
lock
adc
add
int3
jo
int3
rolb
enter
or
loop,pt
das
add
inc
out
xchg
loopne
mov
push
jbe
add
movsl
adc
je
inc
add
lock
pop
pop
fiadds
dec
in
pop
mov
xchg
ljmp
ficoms
jbe
add
stos
test
popa
cs
sub
pop
cmp
int3
and
sbb
adc
cwtl
es
ret
sbb
adc
rol
test
add
aad
add
pop
dec
rcll
pusha
mov
lods
adc
xor
xor
nop
xchg
shlb
pop
fiaddl
lret
and
push
out
push
push
inc
add
and
mov
mov
sbb
orb
pushw
cmp
dec
cmp
or
push
in
roll
adc
add
and
data16
test
cs
cmpsl
xchg
inc
adcb
shr
xor
push
xchg
xor
mov
mov
enter
mov
adcb
jo
and
sbb
mov
add
in
lds
xchg
pop
jle
mov
pop
and
jl
pop
inc
hlt
mov
or
jo
adc
fcoms
xor
push
cld
xor
ljmp
xchg
jb
dec
push
sub
inc
int
add
adc
jnp
or
int3
or
cmp
out
and
inc
xchg
jo
dec
fsts
roll
adc
ss
mov
popa
add
add
and
sbb
enter
add
add
test
jo
cli
lods
lock
jbe
dec
add
cmp
popa
fld
sbb
or
pop
or
add
lret
mov
sbb
lods
xchg
pop
pusha
pop
add
push
pop
dec
jo
rolb
lods
inc
push
or
lcall
fiadds
aam
dec
mov
aam
arpl
add
out
xor
cltd
dec
mov
xchg
inc
mov
popl
adc
inc
sti
dec
test
cld
mov
hlt
mov
pusha
push
push
pop
fidivrl
mov
fstps
mov
je
pop
inc
push
popa
lock
idivb
lcall
add
add
loop
mov
xor
test
mov
ret
fcompl
mulb
sahf
dec
lret
outsb
sti
mov
sarb
test
sub
adc
insb
mov
loopne
inc
jo
sti
push
pop
pop
jo
xor
cli
add
mov
and
mov
faddl
dec
adc
or
add
fmuls
or
mov
adc
dec
rolb
insb
xchg
sahf
mov
movsb
outsb
aam
pop
pop
pop
ret
push
ret
inc
xchg
mov
rorb
xor
popa
call
cmpb
andb
jo
cmp
adc
pushf
add
cmp
cld
out
sbb
jb
sub
mov
js
fadds
push
test
into
mov
ss
test
push
bound
mov
xchg
hlt
sub
sub
mov
lret
in
lods
mov
fimuls
push
nop
xchg
enter
roll
adcb
movsl
add
int3
cs
pop
or
inc
stos
lock
or
enter
xor
adc
out
ds
adc
cmpsb
xchg
sub
lods
or
and
push
sub
cwtl
pusha
call
or
push
jl
fldenv
or
out
hlt
ljmp
imulb
adc
or
movsb
fcoml
in
and
pop
add
or
imul
sbb
rolb
sbb
inc
adc
or
mov
shll
pop
cmp
into
dec
jne
push
in
std
mov
adc
out
dec
or
push
sub
jo
xchg
jp
ds
adc
es
rcrb
sbb
mov
mov
les
int3
push
cmp
sti
inc
pushf
std
xchg
mov
inc
pop
scas
sbb
jg
sub
adc
push
mov
das
mov
xchg
inc
push
xchg
fmul
fcoms
popa
and
and
inc
icebp
mov
addb
sub
pusha
test
xchg
test
mov
or
cwtl
mov
test
jo
cltd
fs
lret
int3
out
jbe
add
into
adc
or
inc
enter
loop
ret
add
mov
push
or
mov
mov
sbb
clc
cmp
daa
adc
or
subb
push
add
mov
sbb
cwtl
ret
push
sahf
in
out
xor
mov
push
or
mov
cmpsb
push
inc
es
add
mov
push
mov
jo
in
lret
inc
or
or
fs
adc
movsb
fs
test
dec
sbb
sbb
aam
rorb
dec
push
jo
scas
xor
cwtl
dec
jo
add
fistps
pop
sbb
or
sahf
add
shll
jb
loopne
icebp
and
loop
push
rorb
loopne
or
push
loop
add
and
sbb
mov
mov
xchg
push
cmp
lret
pop
add
pusha
xchg
or
add
mov
jle
orb
xor
iret
or
and
adc
pop
adc
subl
sub
pop
pusha
pop
lret
xchg
adc
pusha
dec
les
push
add
pop
mov
pop
xor
adc
xor
or
xor
test
int3
mov
add
xor
popl
mov
stos
lods
or
jbe
mov
xorb
adc
xor
xchg
push
out
mov
les
sub
xchg
cltd
xchg
xor
dec
or
push
adc
mov
clc
out
movlps
pop
inc
dec
add
or
inc
cmp
ss
or
push
cmp
dec
adc
dec
popa
inc
sub
dec
sub
loope
ds
stos
nop
jo
or
and
or
mov
xor
cltd
les
adc
insb
mov
mov
addr16
and
sub
add
repnz
sbb
mov
cmp
clc
cld
inc
add
fcompl
sub
cmp
lret
or
stos
xor
sbb
inc
jno
rolb
movb
nop
negb
loopne,pt
sub
or
adc
inc
sbb
cmpsl
or
mov
bound
adc
dec
dec
mov
xchg
jb
ret
or
or
es
mov
cmpsl
xor
lret
sahf
xor
dec
adcb
loope
shll
push
mov
fdivr
or
adc
adc
daa
xchg
inc
sub
sarb
faddl
jb
dec
and
js
xor
sub
ss
test
inc
and
xor
rorb
shl
inc
add
pop
mov
loopne
rclb
pop
sbb
pop
mov
cmp
mov
jmp
add
inc
adc
les
add
sbb
dec
gs
scas
pop
sbb
bound
sbb
cmpsb
mov
cmp
mov
pop
adc
add
pop
jo
dec
mov
test
nop
sti
andb
aad
in
clc
sbb
inc
daa
pusha
or
sub
mov
out
les
cmp
cli
in
and
pop
add
ret
adc
adc
or
bound
mov
pop
dec
fadds
dec
cmp
pop
stos
in
into
push
loopne
jl
and
sub
addb
sbb
xchg
jae
out
nop
add
fidivs
sub
cmp
in
mov
lds
mov
out
xor
sub
test
cmp
fiaddl
jbe
outsb
and
inc
sub
mov
adc
sbb
inc
cwtl
pop
adc
test
in
xor
add
loopne
fstps
test
add
add
mov
rolb
cld
push
add
push
push
cs
fidivrs
add
andb
dec
and
and
xchg
int3
pop
je
jge
mov
dec
push
sub
adc
mov
jp
fimull
xor
xor
mov
sbb
test
mov
jo
jp
lods
jmp
adc
pusha
in
and
adc
aam
mov
ds
in
mov
or
add
or
in
and
sbb
cltd
or
dec
movb
and
xchg
nop
test
cmp
sbb
add
or
andb
and
rcll
or
sub
and
xor
adc
sub
nop
push
pop
clc
leave
adc
test
or
push
js
lds
add
mov
roll
movsb
sti
mov
inc
cmpsb
les
hlt
cltd
add
mov
sbbb
cs
je
xchg
mov
xor
into
ss
mov
imul
push
dec
add
sbb
or
pop
cmp
lods
fsubrs
xor
add
insb
and
cmpsl
jno
cmp
add
adc
cmpsb
pusha
in
mov
or
inc
jl
sbb
test
sbb
sub
ret
push
adc
or
pop
mov
movl
lds
or
orl
mov
ret
sbb
dec
addr16
inc
sub
bound
inc
dec
popa
add
adc
icebp
aam
in
pop
mov
push
mov
mov
ret
sub
movsb
xchg
int3
push
cmp
mov
dec
add
in
pusha
dec
data16
rolb
pushf
xor
xor
mov
inc
fwait
mov
mov
aam
popf
insb
mov
test
subb
dec
or
adc
movsl
push
movb
mov
mov
ret
push
xchg
loopne
mov
dec
adc
xor
xor
js
ret
xor
int
pop
scas
cli
pop
mov
push
popf
shlb
mov
push
dec
adc
sub
push
mov
cld
iret
ljmp
pop
add
int3
push
sub
inc
inc
test
push
add
or
lock
mov
bound
les
push
lcall
rcl
in
push
rclb
inc
addr16
cmp
fld1
adc
or
cli
xor
push
sub
sub
adc
lock
enter
and
adc
or
pusha
ret
xor
lcall
lret
xorb
adc
dec
aas
inc
mov
push
xchg
dec
pop
loopne
test
in
in
add
andb
pop
mov
or
das
add
adc
inc
adc
xor
xor
cld
mov
or
or
lods
and
sbb
ficomps
add
mov
mov
rcl
xchg
mov
mov
sarb
push
xchg
cmp
push
push
js
add
and
cs
loopne
cmp
or
clc
sbb
repnz
pop
loop
or
faddl
sub
xchg
ror
iret
sub
mov
loope
subb
lea
out
pusha
add
ret
xchg
xor
data16
test
add
push
ss
and
stos
cwtl
sbb
sub
pop
and
pusha
test
add
add
shrb
and
test
mov
sbb
into
mov
into
fucomip
push
pop
push
loope
push
insb
add
sbb
lea
sub
dec
add
adc
test
popa
cmp
push
loopne
dec
mov
xchg
jb
aam
jae
inc
mov
pop
xor
push
sahf
dec
xor
push
xor
pop
nop
call
ret
adc
addr16
pop
into
mov
addb
or
in
shll
cmp
std
mov
pushf
sti
fcom
dec
adc
adc
xor
add
lahf
mov
data16
or
cmp
es
push
xchg
push
loop
jb
cwtl
jo
mov
dec
outsl
mov
loope
adc
inc
icebp
adc
movsl
stos
push
add
loope
mov
test
sahf
loopne
push
or
mov
mov
subl
cwtl
insb
lock
mov
add
mov
out
push
ret
sbb
movlps
stos
or
test
mov
dec
inc
ss
xchg
sahf
dec
fbld
and
sub
popa
fbstp
add
inc
out
into
mov
popa
pop
test
add
fcomps
xchg
or
gs
scas
cmp
push
shlb
int3
pusha
xor
cmp
or
rcrb
mov
cwtl
popa
add
jo
ficomps
ss
cwtl
js
mov
adc
mov
js
mov
cld
hlt
jb
inc
shll
jo
inc
xchg
rorb
movsb
mov
push
aam
pop
ficompl
pop
mov
push
test
mov
mov
push
into
mov
addl
call
xor
push
or
stos
push
adcb
pop
cwtl
inc
cmp
mov
or
mov
pushf
push
bound
mov
push
dec
out
jo
or
inc
add
mov
inc
cmpb
popf
ss
and
push
inc
sub
insb
mov
inc
repnz
add
pop
add
or
rorb
dec
push
cwtl
inc
stos
pusha
push
in
bound
cld
rolb
shll
push
out
pop
pop
push
adc
enter
add
sahf
hlt
and
nop
insb
shrl
pusha
sarl
cmp
es
push
ret
orb
rclb
xor
push
sub
add
xchg
rolb
test
jb
loopne
and
daa
xchg
cmp
cmp
iret
inc
addb
jl
ror
or
pop
flds
fcomps
mov
xchg
sbb
imul
test
dec
cmpb
aaa
push
adc
add
loopne
mov
inc
bound
push
fcoml
and
out
or
add
jb
cmc
in
into
pushf
es
push
adc
into
adc
mov
add
mov
xchg
call
inc
push
call
jo
dec
mov
stos
dec
or
xorb
test
mov
xchg
xor
inc
iret
ljmp
push
scas
in
push
test
sbb
rorb
lret
adc
inc
leave
and
inc
and
in
rolb
inc
sub
or
mov
ret
mov
adc
adc
sub
jb
lea
push
call
popf
rcrb
xchg
or
decl
mov
cmp
stc
push
inc
dec
sub
inc
xchg
inc
adc
adc
mov
fisubrl
add
sub
enter
or
insb
test
xor
jl
test
inc
sbb
adc
push
lods
and
sub
cli
pop
mulps
int
mov
dec
cmp
inc
mov
dec
mov
or
push
adc
cmp
cmp
es
add
xor
pop
fadds
add
jecxz
mov
and
sbb
lret
push
test
mov
add
xor
adc
add
inc
pop
js
inc
xor
fimull
shlb
push
es
test
or
sbb
and
pusha
sub
add
or
mov
test
inc
dec
js
test
inc
inc
rolb
inc
out
movsb
mov
add
insl
mov
dec
cmpb
sbbl
negl
lock
imul
test
and
and
out
lcall
outsb
cmp
adc
push
xchg
inc
pop
xchg
out
adc
dec
cmpsb
bound
xchg
fistpl
push
xchg
in
sbb
inc
adc
ds
xchg
lret
pop
cmpl
or
mov
in
stos
and
and
es
mov
mov
cltd
shll
dec
je
push
mov
add
mov
or
test
mov
or
in
lods
lret
pusha
mov
nop
add
sub
dec
lds
mov
mov
icebp
jo
mov
inc
pop
add
idiv
adc
jb
mov
pop
leave
or
push
sub
push
and
pop
nop
cmp
add
loop
or
into
bound
loopne
inc
les
addb
int3
xchg
pop
push
cmp
rcll
mov
dec
dec
or
or
and
pop
xorb
or
and
cwtl
push
inc
add
test
out
in
and
or
sbb
push
jb
arpl
push
call
adc
mov
mov
sub
adc
lcall
adc
enter
sbb
inc
inc
or
ret
nop
adc
loop
inc
cmpsl
cmp
xor
or
lea
xor
loop
sbb
sbb
test
data16
inc
pop
pushf
aam
jp
push
fidivrl
lods
push
mov
out
mov
mov
shlb
rorb
cltd
and
pop
push
xchg
push
xchg
xor
or
xchg
or
sub
loopne
push
xor
adc
mov
xor
mov
or
mov
pusha
js
imul
test
loope
sarb
iret
lcall
add
mov
into
or
sbb
lret
cs
inc
in
cld
xor
addb
orb
rorl
loope
rol
push
fadds
mov
cwtl
adc
push
push
push
es
push
fsubp
stos
or
xchg
js
add
dec
mov
adc
pop
divb
test
dec
rorl
js
adc
xchg
cwtl
adc
aam
out
mov
push
movsb
dec
jb
dec
nop
pop
push
sbb
or
xor
mov
enter
mov
cwtl
and
ss
pop
or
jl
sahf
inc
add
loop
mov
sub
dec
and
xor
mov
push
adc
adc
add
add
pushf
jl
mov
int3
dec
sahf
jo
test
ret
sbb
inc
shll
or
test
push
push
inc
or
movsb
faddp
push
and
in
and
fadd
dec
sub
orb
les
push
rcr
push
shrb
jb
aad
add
lods
mov
sbb
lock
adc
cs
pop
ljmp
mov
out
pop
andl
jo
loope
xor
out
mov
push
mov
push
ret
inc
cld
loopne
jae
lds
jnp
outsb
pop
mov
rcrb
nop
mov
dec
test
sbbb
inc
cmpl
xchg
imul
lds
mov
xor
dec
push
xchg
xor
addr16
push
adcl
add
bound
xchg
or
jl
pop
rcrb
sbb
js
nop
in
xchg
add
cmpl
sbb
pop
inc
sub
sar
cmpsb
cmp
sub
mov
adc
sub
cmp
cld
push
mov
mov
inc
or
lret
ror
mov
ror
mov
out
mov
jl
push
or
cli
adc
xchg
aad
sub
and
movsb
or
adc
xor
sbb
into
cmp
and
mov
or
or
mov
out
sbb
test
xchg
pop
xor
xor
jo
out
xor
movsl
xchg
fsubrs
sub
sbb
or
add
sbb
mov
ret
adc
fcoml
add
rclb
pop
aam
add
jo
data16
ds
pop
dec
loope
lock
jle
xchg
or
sub
mov
mov
xchg
and
in
insl
rcrb
mov
sub
sbb
jl
outsb
sbb
fsubl
bound
and
sub
rcrb
rolb
adc
ret
or
lret
or
inc
cltd
dec
and
fsubs
cltd
ret
pop
pop
mov
add
gs
stos
push
inc
xchg
xchg
dec
xor
ret
dec
in
out
mov
cmp
movb
mov
lods
insb
adc
xchg
enter
adc
pushf
dec
cwtl
sbb
clc
fcmovbe
or
faddl
mov
sub
pop
pop
mov
add
sub
inc
xchg
in
stc
and
lcall
xchg
call
xor
and
xchg
dec
cs
sbb
out
es
faddl
outsb
cmp
xor
sbbb
jbe
test
jb
and
sub
xchg
jg
shl
test
flds
jle
clc
push
fs
jmp
inc
adcb
sub
orb
cmpsb
adc
cwtl
and
mov
mov
pusha
iret
sbb
xor
or
inc
or
mov
outsb
inc
or
mov
pop
in
clc
dec
cmpsb
xchg
inc
cmpsb
sbb
sahf
jl
dec
add
dec
inc
mov
cwtl
mov
cmc
mov
ret
negb
and
cmp
mov
jo
mov
xor
add
nop
and
push
ss
mov
insb
sbb
adc
ret
add
adc
cmpsl
loopne
ret
mov
std
mov
mov
popa
inc
out
push
cmpb
int3
pop
xor
adc
sub
pop
push
pop
push
add
leave
jns
or
inc
cmpsb
xor
inc
lea
or
mov
mov
mov
pop
out
loopne
rolb
lods
push
inc
add
es
lds
loope
push
pop
outsb
and
xchg
in
rorb
sbb
add
add
xorb
push
or
mov
mov
dec
lods
cmp
inc
sbb
or
pop
xor
inc
cwtl
pop
adc
push
inc
mov
call
ss
xchg
mov
mov
or
xor
out
inc
sbb
pop
xchg
push
cmpsb
and
repnz
or
push
push
inc
and
stos
pop
andb
and
push
mov
sahf
fs
xor
xchg
mov
js
les
push
dec
rolb
push
in
add
cltd
mov
popa
push
mov
or
xor
rolb
xchg
sub
push
or
insb
in
sub
sbb
fs
addb
add
cmp
add
push
push
push
ret
scas
push
rorl
ss
pushf
into
loop
mov
mov
sbb
and
mov
inc
mov
lods
subb
xchg
push
and
call
inc
es
repnz
sub
xchg
in
xor
imul
xchg
shrl
sbb
inc
xor
movsl
clc
xchg
dec
jge
jbe
lods
push
xchg
push
xor
sub
inc
adc
sbb
or
dec
and
subb
rcrb
mov
mov
xchg
or
jo
or
outsb
mov
jmp
mov
mov
push
sbb
sbb
lods
push
and
jae
ds
outsb
fwait
repnz
adc
in
inc
test
push
rolb
inc
sbb
incb
push
mov
mov
sbb
stos
inc
sbb
cs
out
add
add
sbb
add
and
data16
stos
ret
filds
push
inc
mov
or
and
aam
or
or
cmpsb
popa
xor
push
andb
cs
inc
cs
test
xor
inc
adc
dec
adc
pusha
pusha
pusha
or
and
dec
and
mov
xor
and
nop
or
pop
cli
push
fmuls
cs
cmpb
js
sbb
es
imul
sbb
pusha
call
movsb
mov
or
ret
pop
sbb
mov
enter
or
sbb
inc
ljmp
push
mov
bound
outsb
or
dec
push
mov
int3
les
xor
hlt
dec
push
nop
pusha
and
push
sub
push
adc
call
je
jl
sti
pusha
jp
sub
inc
inc
cld
nop
aad
cli
add
mov
js
mulb
sbb
inc
dec
ret
movsb
pop
dec
sub
xchg
outsb
push
adc
push
mov
cwtl
adc
pushf
std
cmp
pushf
adc
or
inc
jle
dec
jle
sub
dec
data16
std
stos
orl
mov
sbb
or
sub
adc
or
mov
addb
sub
mov
fsubs
sbb
mov
xor
dec
lods
jle
loopne
mov
adc
rcr
dec
addb
inc
fsubrs
cmp
dec
dec
mov
jle
sub
sbbb
test
lcall
sahf
inc
xor
xor
and
orb
adc
adc
inc
add
cmpsb
pop
xor
lock
xchg
leave
fdivrl
ds
popf
sub
test
ljmp
stos
and
loopne
pop
mov
rorb
push
xchg
adc
or
inc
dec
pop
pop
loopne
xchg
bndstx
rorl
in
adc
leave
add
push
xor
mov
mov
and
and
mov
ret
popa
add
movsb
and
call
fdivrs
adcb
int3
jle
xor
lock
mov
sub
movsb
xchg
sbb
scas
sahf
enter
mov
test
aaa
les
mov
and
mov
outsb
cs
adc
add
lcall
scas
pop
pop
and
aad
roll
xchg
dec
rolb
xchg
push
sub
test
cli
inc
sub
add
pusha
hlt
cmp
les
sub
fs
mov
andb
xchg
or
push
test
lea
adc
push
and
pusha
xor
ret
sub
movlhps
decb
push
xchg
enter
nop
inc
sbb
test
dec
or
loopne
jbe
or
push
adc
xor
pusha
nop
movsb
mov
sub
and
call
scas
ds
sub
dec
sub
or
push
orb
and
xchg
mov
pop
sbb
and
sbb
or
rorb
mov
mov
push
or
add
cwtl
push
int3
loopne
cld
lret
cmpsl
or
test
dec
roll
test
pusha
loope
lcall
pusha
cli
sbb
adc
mov
adc
gs
mov
push
scas
xchg
add
gs
inc
loopne
xchg
push
add
cmp
test
sbb
pop
cmp
mov
sub
xor
mov
xchg
add
lds
add
adc
dec
xlat
mov
add
shlb
aas
mov
mov
or
add
gs
push
js
inc
loopne
dec
push
cmp
push
add
jne
sub
stos
mov
mov
adc
add
or
pusha
ret
adc
jo
fmull
fildll
sahf
into
or
xor
mov
test
jle
or
push
dec
cs
andb
dec
pusha
jb
fiaddl
in
pop
ret
xor
test
adcb
loopne
xchg
adc
pusha
loop
cltd
adc
inc
or
enter
add
adc
sahf
push
dec
inc
sub
popa
orb
mov
xor
test
add
rcl
jbe
leave
and
xor
adc
test
pop
and
and
mov
cmpsl
dec
pop
in
dec
addb
or
mov
stos
ret
inc
bound
es
fcompl
out
sbb
inc
pop
mov
icebp
sbb
fisubl
cmpsb
and
loop
xchg
mov
ror
xchg
pusha
mov
pop
fiadds
sub
xchg
push
adc
jp
dec
icebp
mov
subb
es
mov
xor
xor
orb
and
pop
adc
mov
or
inc
rol
xorb
dec
call
xor
push
add
push
ds
cmp
loopne
inc
repnz
adc
and
or
add
dec
add
dec
andl
xchg
push
cmp
nop
sar
or
addr16
popa
in
dec
int3
sub
or
xor
enter
xlat
adc
shrl
bound
add
and
loope,pn
dec
mov
pop
sbb
sub
add
rol
fsubr
inc
pop
sbb
xor
inc
fsts
sub
es
mov
call
sub
out
lock
subb
push
data16
int3
and
jl
cltd
dec
push
push
rolb
daa
mov
inc
js
fidivrs
xor
mov
leave
and
sbb
add
aam
and
pop
adc
ljmp
movsb
loope
xchg
and
imul
nop
adc
cs
daa
xchg
sub
add
cli
scas
push
xchg
add
lret
mov
bound
mov
pusha
sbbb
and
or
xor
xor
adc
mov
loopne
cmp
ss
mov
loope
or
call
add
dec
leave
push
pusha
add
nop
and
push
push
data16
inc
push
push
test
push
mov
mov
add
push
mov
inc
and
or
clc
mov
fimull
xor
or
sbb
aam
cwtl
adc
lret
add
mov
xor
dec
pop
pop
or
int3
ror
add
xor
lods
or
sbb
jle
adc
mov
add
xor
xchg
rorl
xor
andb
dec
int3
call
add
repnz
fs
fiaddl
push
rorb
xchg
hlt
test
pop
loopne
addb
call
ret
jo
dec
addb
sbb
push
aam
sbb
pop
ss
lcall
add
nop
inc
stos
dec
sub
xchg
sub
leave
push
sbb
leave
insb
sbb
shrb
rorb
add
mov
orl
jp
addl
rorb
pop
sbb
mov
mov
bound
adc
loope
push
inc
mov
or
dec
nop
adcb
and
sbb
push
in
enter
sub
sbb
dec
arpl
xor
subb
push
adcb
jbe
or
sub
test
mov
pop
in
lods
xor
insb
push
mov
jbe
add
add
dec
dec
xchg
sbb
lods
dec
aam
out
shll
add
add
ds
pop
xor
rcrb
cmp
sub
add
fs
or
mov
jbe
cwtl
dec
cmpsb
adc
adc
or
scas
inc
sbb
mov
add
sbb
addb
fmull
jno
mov
fldcw
call
dec
mov
popa
jecxz
call
xchg
xor
addb
outsb
inc
rolb
enter
je
lea
mov
adc
dec
push
dec
or
test
call
pop
mov
cld
dec
es
add
outsb
sbb
xchg
cmp
inc
xor
xchg
and
out
sub
adc
nop
push
xchg
xor
push
inc
and
mov
out
pusha
orb
nop
dec
test
xor
clc
sub
push
adc
mov
jb
xchg
mov
jle
test
jp
xor
sbb
rcrl
push
lret
call
rorl
xchg
sub
xor
and
test
dec
or
xor
inc
adc
test
popa
mov
pushf
mov
adc
or
fdiv
mov
push
int3
push
test
jp
stos
test
xchg
sbb
xchg
es
enter
data16
dec
mov
inc
and
sub
or
lret
cmp
mov
xchg
fadds
sar
testb
or
jg
inc
adc
push
pop
enter
adc
js
xchg
shlb
or
push
mov
lret
add
push
mov
mov
popa
dec
adc
dec
dec
je
push
mov
shr
rclb
push
and
adc
push
xor
jbe
test
xor
adcb
mov
push
inc
mov
inc
cmp
hlt
data16
aam
cld
lock
push
es
hlt
in
inc
add
inc
inc
cmp
inc
or
mov
add
sbb
test
aam
mov
sbb
nop
pop
push
scas
xchg
pop
adc
fiadds
rclb
dec
call
xchg
insb
dec
push
mov
sbb
movsb
sub
dec
fsubrs
in
sti
shll
or
xor
sbb
ret
rol
jbe
push
push
dec
xor
test
movsb
mov
dec
dec
jl
dec
ret
or
adc
xchg
negb
mov
hlt
and
and
add
pop
nop
dec
sbb
adc
divb
pusha
mov
out
mov
or
and
and
mov
add
push
in
adc
mov
pop
sar
cmp
and
popa
adc
shlb
fisubrs
das
ds
movsb
roll
sbbb
sub
mov
jb
rorb
push
clc
cs
xchg
and
add
cli
mov
inc
sub
sub
and
je
test
mov
inc
inc
bound
push
inc
mov
pop
mov
jo
mov
mov
lds
xchg
adc
adc
push
test
mov
mov
sahf
pusha
push
inc
in
xchg
mov
andb
jo
pop
call
inc
add
lret
push
js
and
inc
adc
orb
add
call
fiaddl
mov
loopne,pn
or
add
xchg
or
ret
mov
or
psubsw
hlt
or
jo
cmp
and
xchg
inc
and
addb
jo
and
cli
sbb
xlat
mov
shrb
pop
insb
rorl
add
sub
push
enter
test
push
or
mov
shlb
popa
jle
orb
inc
xchg
dec
les
sub
insb
ret
dec
cltd
cmp
rcrb
dec
dec
sub
inc
sarb
pop
xchg
xor
frstor
ret
mov
pop
or
int3
sub
js
into
add
or
shrb
xchg
pop
inc
adc
sarb
add
push
xor
pop
sbb
test
mov
add
or
inc
test
add
inc
lods
mov
add
jno
sbb
leave
lock
loope
or
and
fidivs
decl
out
and
hlt
mov
ja
negb
cmpsb
test
xchg
sti
ret
sub
test
push
mov
inc
shll
cmp
or
mov
sbb
add
push
stos
sub
icebp
dec
mov
and
adc
inc
sub
les
fsub
xor
sub
out
sbb
enter
xchg
sahf
lret
adc
adc
cmp
call
shlb
adc
or
dec
addr16
jl
mov
sbb
and
xchg
call
jp
call
sub
lock
cmp
test
mov
xchg
inc
add
push
cmp
aam
mov
push
gs
sub
push
cmpsb
xchg
xor
inc
jo
mov
test
ret
dec
and
xchg
loope
cltd
mov
or
mov
or
loopne
into
pop
push
rclb
push
dec
cltd
dec
dec
dec
lcall
test
stos
xchg
ds
and
jo
mov
lds
add
insb
inc
sub
sub
add
jb
sbb
push
lret
xor
clc
ss
adc
in
dec
inc
add
pop
fistl
test
xchg
or
or
pusha
dec
cwtl
cmp
push
dec
ret
inc
pushf
sub
dec
enter
adc
fisubrs
sub
outsb
pop
aam
mov
jb
adc
addl
push
pushf
and
mov
je
fisttps
xor
jle
lods
inc
dec
or
add
push
rcl
loope
xchg
out
out
mov
add
sbb
sub
mov
xor
adc
xchg
pop
xor
fwait
bound
cmp
dec
mov
or
inc
inc
sbb
cwtl
int3
insb
xor
lret
sub
xor
iret
adc
movsl
jp
insb
xchg
mov
mov
inc
mov
xor
loopne
jbe
xorb
pop
rolb
cmpsl
loope
pop
push
fimuls
and
ljmp
adc
and
xor
or
into
js
dec
push
imul
inc
fsubs
call
inc
gs
sub
adc
and
nop
or
scas
ds
push
lcall
les
xor
mov
sti
aas
or
xchg
sbb
pop
or
test
inc
loope
xor
test
xor
fs
push
popa
fadd
test
push
mov
add
loopne
push
or
pusha
lock
inc
dec
fcoml
movsl
xor
jp
mov
add
loop
add
mov
aam
inc
call
imul
cmp
or
xor
arpl
and
mov
xor
call
or
aam
shlb
or
fimuls
adc
cmpb
adc
jo
inc
sbb
add
push
pop
in
cmp
mov
or
push
or
mov
js
lock
mov
orb
lret
test
lcall
nop
dec
sub
pushf
and
xchg
push
in
inc
mov
add
fs
cmp
xor
nop
or
pusha
js
test
fadds
jg
lret
xor
sahf
adc
xchg
orb
or
mov
jp
sbb
cld
les
pop
xor
data16
sbb
inc
push
ret
and
or
add
jmp
and
je
push
jb
or
sub
test
and
add
addb
ret
rolb
mov
mov
push
shrb
mov
arpl
mov
push
add
rcrb
inc
and
jno
mov
mov
lea
mov
in
mov
cmp
adc
add
in
adc
jne
enter
sub
lds
hlt
xor
push
jle
sbb
cli
xor
xlat
add
or
inc
or
pusha
sub
test
add
cmp
ret
lock
xor
cwtl
ret
out
xchg
cmpsl
and
push
clc
movsb
push
jno
push
push
or
add
push
cmp
adc
clc
ja
or
subb
rorl
cltd
ss
mov
sub
popa
sub
add
mov
sub
shlb
and
xchg
pushf
in
iret
xor
lock
test
and
and
scas
xchg
or
add
adc
cs
mov
dec
or
movsl
lods
push
add
ds
xor
imul
movsb
std
or
push
mov
inc
xor
inc
mov
adcb
pop
sub
mov
mov
test
mov
xor
add
lret
adcb
xor
loopne
sbb
sub
adc
sub
je
inc
add
inc
adc
sbb
fcomps
add
cwtl
popa
push
mov
mov
dec
dec
and
or
mov
inc
inc
cwtl
fmuls
test
push
in
mov
sub
ret
add
add
push
leave
and
dec
inc
sbb
insb
aam
mov
faddp
mov
ds
lret
mov
inc
inc
bound
xor
andb
and
adc
and
xor
es
rclb
inc
xchg
in
and
cs
push
xor
dec
or
and
in
inc
and
mov
and
xor
add
nop
inc
ret
mov
addb
ljmp
test
xchg
stos
mov
cmp
xchg
mov
inc
or
or
pusha
push
ret
push
lcall
inc
insb
nop
or
sbb
icebp
add
rcrb
rorb
mov
xor
fisubrl
test
cld
push
pushf
add
inc
mov
inc
jl
cmp
xor
cmp
into
mov
push
movsb
pop
sub
stos
fisubl
icebp
movsb
add
movsl
xchg
xchg
clc
add
es
sahf
insb
and
inc
and
or
xor
or
insb
cmp
and
bnd
and
dec
imul
or
fmul
aad
sbb
xchg
pop
add
andl
loop
xchg
adc
adc
lock
cmpsl
orb
cmp
add
add
adcb
dec
jge
in
mov
or
inc
and
cmp
xchg
or
es
add
cmpsb
sub
xor
xchg
lock
inc
and
pop
es
xor
andl
pop
repnz
and
push
sub
add
jbe
jl
fwait
popa
push
call
sbbb
add
sub
mov
mov
dec
cli
popa
xchg
sub
test
test
in
inc
mov
or
les
push
dec
mov
or
or
shll
sub
push
mov
adc
enter
cmp
shl
push
lds
xchg
or
fsubrs
hlt
push
shlb
cs
add
jg
out
adcb
orb
loopne
cmp
xchg
xor
lcall
ss
dec
loop
js
inc
int3
xor
adc
jmp
xor
xor
adcl
jo
int
fs
mov
adc
mov
and
and
data16
cwtl
sub
rorb
pop
push
sub
es
xor
jbe
or
dec
insl
je
cwtl
dec
je
stos
cmpsb
int3
push
sub
or
hlt
push
enter
scas
dec
or
sbb
push
push
pushf
push
int3
jbe
pop
sub
and
dec
xor
adc
sbb
jo
or
notb
es
mov
mov
test
xchg
push
adc
inc
xchg
push
movsb
inc
push
in
dec
popa
and
mov
and
lcall
loop
ljmp
mov
data16
dec
and
jl
push
push
ss
subl
popf
push
add
mov
sbb
mov
bound
lret
push
or
in
fbld
dec
push
cwtl
push
fsubr
add
xchg
fimuls
orb
stos
push
jmp
out
push
jnp
add
mov
mov
mov
add
fcompl
add
ret
js
test
rolb
leave
pusha
cltd
push
negb
loope
or
test
and
jo
add
xorb
jbe
decb
lret
js
rcr
or
mov
cmp
test
xor
outsl
adc
mov
in
adc
dec
inc
add
pop
and
sbb
test
into
cmpsb
xor
es
pusha
dec
rcrb
inc
cmpsl
inc
cmp
xor
or
mov
pop
dec
mov
and
nop
test
and
dec
sub
adc
push
mov
loope
cs
rclb
nop
lea
inc
jbe
mov
stos
pusha
cmp
test
sbb
add
or
mov
call
movsb
fmuls
add
or
pushf
jae
mov
add
dec
lods
and
test
or
adc
mov
ds
arpl
pop
imul
mov
push
out
fmuls
popa
add
ljmp
adcb
and
xor
mov
pop
mov
stos
sub
mov
das
inc
mov
test
fimuls
rolb
jb
push
mov
dec
pushf
pop
adc
push
mov
adc
inc
add
adc
cmpb
sub
nop
fcomps
or
cwtl
pop
adc
test
and
adc
loope
dec
cmp
lcall
or
sbb
sub
data16
xchg
cwtl
rorb
mov
insb
add
or
test
xor
lds
sbb
daa
pusha
mov
xchg
push
orb
add
adc
sub
cmp
push
xor
or
push
xor
dec
sbb
or
inc
rorb
mov
xor
sub
dec
mov
add
and
mov
inc
dec
adc
dec
xchg
xchg
mov
mov
adc
sub
adc
or
adc
dec
sbb
fdivl
bound
loop
icebp
and
in
out
enter
sub
sub
or
pop
mov
add
data16
or
ljmp
pop
inc
or
outsb
add
int3
test
add
push
mov
out
aam
xchg
add
pop
iret
push
jl
xchg
imul
ljmp
sbb
push
and
movsb
mov
adc
fimuls
rclb
fiaddl
adc
pushf
mov
mov
adc
lret
pusha
addb
hlt
mov
cli
std
loop
mov
inc
sub
stos
xchg
fdivs
and
inc
mov
and
or
adc
adc
iret
mov
cmp
inc
xchg
and
loopne
sbb
pop
aam
popa
push
push
in
cwtl
test
mov
jo
mov
mov
sbb
in
dec
sahf
push
push
jg
das
adc
mov
notb
sub
mov
mov
test
jp
cmp
adc
pop
test
lds
test
adc
adc
jo
push
sahf
out
xchg
clc
test
insl
jl
std
inc
nop
fdivs
dec
inc
inc
lret
test
sub
mov
and
push
and
mov
lret
repnz
je
data16
pushf
inc
inc
mov
or
mov
pop
xchg
ror
dec
mov
cltd
push
push
sub
or
push
daa
add
cld
ds
ficompl
inc
lods
and
adc
ss
xor
pop
add
push
aam
test
mov
lret
sbb
add
mov
xor
pusha
inc
sbb
add
adc
and
mov
rolb
xor
inc
or
pop
ret
mov
adc
nop
dec
add
push
sbb
mov
push
sbb
add
or
fcmovb
sub
adc
or
cmp
or
jno
mov
cmp
movsl
mov
pop
mov
or
cld
decl
xchg
cmp
movsb
stos
subb
xorb
test
xor
shlb
push
call
dec
sub
test
xor
jbe
push
inc
push
mov
push
jb
add
insb
inc
add
cli
pop
push
cmp
cmpsb
rolb
test
addb
out
xor
cmp
stos
jo
cmc
orb
pop
pusha
push
xchg
push
add
mov
push
push
movsb
pusha
subb
or
xchg
push
mov
push
or
data16
adc
xchg
mov
ljmp
pop
addb
add
lds
add
or
aam
push
mov
pusha
adc
cwtl
mov
add
dec
mov
or
rcll
push
cmp
lock
mov
mov
xchg
and
lcall
call
lret
add
in
rorl
je
mov
mov
and
gs
imul
push
inc
add
push
es
xchg
clc
jl
add
adc
or
daa
mov
mov
xor
adc
adc
adc
cmp
push
insb
pusha
or
inc
sub
push
sar
pop
or
sbb
call
push
cld
incb
lea
sub
mov
dec
add
sub
push
sub
or
lret
insb
or
pop
dec
cltd
roll
sub
xor
lods
pushf
jl
test
cmp
mov
in
push
out
push
or
shl
mov
push
cmpsb
loop
xchg
mov
or
clc
lret
popa
arpl
mov
pop
mov
or
push
jl
movsb
xor
xchg
adc
js
xorb
in
loop
andb
ds
ret
ret
outsb
loopne
add
cmp
fbstp
xor
std
enter
add
inc
mov
rolb
inc
test
and
iret
ret
addb
mov
dec
and
sub
mov
sarb
data16
and
jle
pop
and
add
or
add
and
sbb
in
insb
inc
test
icebp
or
in
and
add
loop
add
aam
cltd
push
ds
xor
cli
inc
in
test
js
or
push
xchg
pushf
xchg
retw
and
mov
add
or
adc
add
andb
push
mov
mov
cmpsb
pop
andb
mov
xor
cmp
adc
xor
mov
adc
enter
scas
inc
pop
into
mov
orb
loope
dec
nop
pop
push
imul
gs
sbbb
dec
inc
or
sub
stos
je
imul
lock
dec
push
test
push
or
push
insb
pop
lods
sub
sbb
cmp
push
adc
xor
adc
loope
sbb
clc
movsb
or
into
aam
mov
cltd
xchg
popa
lods
cld
setle
add
pop
or
and
push
lods
leave
xor
lcall
add
adc
xchg
nop
leave
xor
les
inc
test
or
jb
add
or
test
and
adc
adc
rclb
push
mov
dec
cmp
cld
test
xchg
adc
js
push
or
sbb
in
stos
mov
or
mov
dec
ret
test
sbb
adc
sbbb
js
push
call
add
pop
pop
ss
sub
xor
in
fs
pop
fsub
int3
push
push
das
pop
lods
mov
cmpb
push
sbb
or
push
std
andl
jbe
jle
xchg
mov
in
add
outsb
mov
or
mov
push
xor
push
cmpsl
xor
xor
es
or
mov
dec
imul
mov
int3
filds
cmp
outsb
adc
push
pop
cld
sub
dec
mov
data16
pusha
fsubrs
or
push
jo
mov
push
dec
pushf
iret
mov
or
add
add
xor
xor
inc
inc
mov
ret
adc
fadds
push
inc
mov
leave
out
outsb
ja
ffree
mov
jmp
cmc
cs
pop
cmp
xor
subl
push
dec
or
testb
and
bound
sbb
pop
push
and
sub
sbb
mov
sbb
ss
dec
fsubl
or
push
je
lea
push
or
jb
scas
push
adc
es
inc
ss
lret
xor
in
adc
arpl
addr16
add
and
int3
sub
nop
test
xchg
adc
cli
pusha
adc
sbb
push
mov
out
or
stos
test
pop
add
xchg
fs
mov
inc
or
push
jo
dec
pop
fcoms
or
fisubs
ds
adc
bound
xchg
cli
call
nop
mov
pop
sbb
cmp
fimull
xor
repnz
sbb
in
outsb
stos
lods
inc
cmp
clc
dec
insb
pop
sbb
clc
fisttps
xor
push
jp
into
mov
sbb
or
mov
mov
ret
loopne
out
popf
or
mov
in
jp
aam
push
adc
flds
jo
cmpsl
popa
adcb
bound
or
dec
ret
add
push
or
or
sbb
add
test
mov
xchg
xor
mov
push
adc
pop
inc
inc
cwtl
and
les
and
lcall
dec
mov
clc
xchg
add
dec
or
rcrl
je
loopne
dec
mov
adc
ret
cwtl
dec
fidivs
test
shrb
inc
outsb
xor
fldenv
push
idivb
lea
roll
sub
pop
es
sbb
or
and
mov
push
insb
push
sbb
insb
outsb
pop
mov
cmp
dec
std
int3
add
out
test
add
sbb
mov
xor
xchg
xor
xorb
and
push
xchg
add
cwtl
lret
fs
in
imul
mov
pop
jle
add
adc
ret
or
dec
loope
and
inc
nopl
loop
mov
cmp
xor
push
inc
fs
imul
scas
clc
adc
sbb
dec
mov
rorb
xor
out
pop
push
push
test
andb
pop
orb
dec
jle
aam
and
popa
loopne
mov
js
inc
cmp
cmp
adc
dec
cmpsl
imul
mov
push
daa
daa
jne
adc
inc
and
popa
add
dec
leave
push
jp
add
jo
lret
xchg
mov
je
cmp
mov
cltd
inc
stos
mov
orl
or
inc
cmp
jb
mov
iret
call
mov
mov
fsubrs
or
sub
imul
pushf
inc
inc
icebp
test
xchg
cmpsl
les
fs
jp
dec
sub
in
int3
int3
sub
lods
push
xchg
loop
and
push
rorb
push
enter
out
loop
or
mov
repnz
xor
dec
jecxz
insb
inc
mov
je
dec
cmpsb
pushf
and
fstpt
outsb
mov
adcb
hlt
push
sbb
push
cli
nop
sub
arpl
adc
adc
inc
and
mov
or
aam
enter
fs
sub
sbb
mov
or
aam
xor
adc
push
push
fs
xchg
push
sub
add
mov
ret
ljmp
push
push
push
xor
inc
rclb
call
mov
mov
adc
and
mov
je
inc
xchg
push
test
lcall
dec
cmp
add
pop
or
popa
test
sbb
dec
xor
inc
push
jle
bound
and
mov
ss
or
dec
xchg
and
inc
or
das
adc
incb
add
pop
sub
dec
dec
cmp
in
insb
mov
cld
scas
sbb
mov
sub
or
adc
in
cltd
lret
jno
into
sahf
fcoms
add
and
divps
pop
adc
or
sub
sub
aam
testb
in
sbb
xor
xchg
or
nop
rcrb
stos
xchg
rcrb
test
inc
or
cmpsb
jle
mov
sub
mov
test
inc
or
test
rorb
pop
adc
cs
test
bound
in
or
imul
jnp
sbb
aam
mov
jo
push
cmp
xchg
xchg
out
int3
dec
lods
insb
mov
pop
xor
stos
sahf
fisttps
mov
int3
mov
shrb
inc
pusha
cmp
movsb
movsb
xor
lea
shll
sub
adc
loopne
lods
xor
loope
mov
sub
mov
ret
rorb
or
xor
cmp
jo
push
into
mov
pop
push
cmp
pushf
or
add
jo
cmpsl
bound
cmpsb
adc
add
dec
lods
es
add
fwait
test
add
or
push
fidivrs
in
and
mov
pop
in
arpl
cmpsb
push
xor
sbbb
testb
xchg
xlat
leave
stos
lret
cltd
mov
fidivl
shll
aam
pop
sahf
mov
adc
arpl
push
nop
push
mov
filds
xor
push
dec
ss
mov
jp
inc
or
adc
leave
and
jb
dec
js
xor
jo
add
sub
jo
test
dec
push
or
xor
or
cmp
add
test
sbb
sub
movsb
add
fisubrs
sub
jb
test
sahf
es
add
dec
ret
es
cld
add
les
xor
xchg
cli
push
cmp
repnz
aam
dec
mov
sbb
dec
inc
lret
push
outsb
pop
out
xor
daa
loopne
sldt
mov
add
adc
push
inc
cwtl
push
scas
daa
sbb
or
pop
enter
or
add
or
sbb
push
dec
out
sub
sbb
in
adc
push
pop
cmp
mov
mov
out
xchg
push
push
jg
outsb
movsb
lds
cltd
pop
sbb
adcb
push
sbb
lcall
and
bound
cld
stos
call
testb
mov
test
jae
dec
and
cwtl
decb
and
dec
add
sbb
ret
mov
push
dec
mov
xor
xchg
scas
add
xchg
nop
dec
xor
or
in
pushf
inc
sbb
ret
xor
mov
or
and
bnd
mov
pop
ds
inc
es
push
pop
sbbb
loop
dec
or
mov
and
sbb
bound
or
pop
xor
cmp
push
out
mov
mov
xor
sub
push
pusha
and
movsb
test
xchg
pop
cmp
push
inc
xor
test
or
js
adc
xor
cld
pop
and
dec
mov
mov
cmp
faddl
dec
jo
push
ds
pushf
fistps
inc
xor
jb
ss
out
add
add
sbbl
mov
and
pusha
xor
and
fcoms
xchg
mov
pop
pusha
movsb
or
das
call
enter
rcl
mov
xchg
nop
dec
ss
xchg
sarb
into
inc
adc
xchg
and
fsts
loopne
scas
dec
inc
and
mov
scas
sbb
add
pop
cmpsl
push
add
int3
aam
insb
mov
test
or
rcrb
nop
sbb
or
in
pop
add
push
test
es
jb
icebp
xor
cmp
jo
add
dec
push
add
add
or
dec
add
in
js
mov
flds
adc
add
xor
hlt
fisttps
mov
enter
pusha
mov
loopne
mov
xchg
sbb
call
cmp
shl
sub
push
aam
inc
fs
dec
and
dec
or
xchg
pop
jo
repnz
sbb
xchg
sbb
add
lret
xchg
cltd
push
push
inc
sbb
mov
mov
in
ss
rolb
ret
jo
je
and
imul
test
test
ret
inc
shll
out
test
and
es
sbb
dec
adc
call
test
inc
rclb
test
adc
and
or
rolb
cmp
bound
jo
cld
xor
dec
add
sub
jo
outsb
rcl
andl
sbb
pop
ret
sbb
fcoml
inc
adc
sub
loopne
bound
addb
dec
outsb
cmpsb
push
loop
mov
inc
and
push
adc
lret
mov
lock
sbb
push
jbe
xchg
or
pushf
fcomps
mov
testb
dec
sub
ficomps
add
mov
jle
adc
cwtl
imul
lods
add
pop
cld
gs
add
mov
inc
and
xchg
xor
loopnew
and
and
je
test
push
test
sar
pusha
or
sub
bound
into
sbb
or
xchg
add
std
or
mov
xchg
pushf
addb
xor
pushf
inc
add
into
lret
sub
pop
add
push
mov
push
add
adc
add
cwtl
sbbb
inc
ds
mov
inc
in
or
and
inc
add
out
dec
mov
rclb
inc
and
aam
test
dec
ret
scas
dec
or
mov
call
shl
or
inc
push
es
mov
sub
push
stos
mov
jo
outsb
mov
imul
adc
jp
xchg
xor
aam
in
enter
adc
popa
xor
jo
jle
pusha
popa
sub
loopne
dec
bound
or
pusha
push
test
cwtl
je
xor
call
and
or
jo
out
into
mov
push
loopne
in
inc
pop
nop
fimull
xor
sbb
insb
jl
xchg
stos
clc
or
adc
add
and
mov
repnz
cs
sahf
push
push
lods
xchg
push
sub
out
cmp
lock
es
test
movl
and
mov
cltd
jne
add
pop
hlt
sub
sbb
or
data16
inc
xchg
push
xor
adc
mov
mov
inc
xchg
or
hlt
lock
nop
sbbl
push
xor
pusha
xor
iret
negb
xchg
jo
inc
loop
adcb
test
push
adc
test
popa
xchg
enter
or
lds
lret
add
pusha
or
adc
pop
jb
faddl
add
loopne
xor
jbe
lcall
cmp
add
dec
or
sbb
rol
out
push
nop
arpl
inc
adc
lods
loopne
addr16
push
cmp
push
les
mov
push
xor
adc
pop
adc
adc
xor
incb
ljmp
sahf
je
xchg
adc
jmp
inc
and
push
inc
mov
out
andl
lods
repnz
add
call
es
dec
adc
sub
js
or
add
fs
mov
addb
and
mov
out
scas
mov
cmp
lods
add
add
call
push
jo
cmpsb
iret
and
je
sbbb
mov
sub
add
movsb
mov
adc
jmp
fs
and
xchg
inc
xor
push
mov
test
and
test
pop
icebp
xor
fidivrs
dec
pop
dec
jb
or
leave
push
aad
lock
pop
push
and
inc
adc
lret
leave
xchg
lret
and
dec
push
loopne
fmuls
std
xchg
pushf
lds
push
sub
das
and
add
cwtl
pop
ret
adc
dec
sub
dec
xchg
clc
stos
inc
jo
ds
xor
cmp
scas
sub
adc
imul
push
jbe
loopne
mov
movsb
mov
pop
cmp
or
or
sbb
in
rcl
inc
add
ror
es
je
pop
jo
pushaw
sub
lods
cltd
or
xchg
xchg
push
mov
inc
es
push
sub
lods
sbb
nop
pushf
lret
lock
loope
or
or
and
inc
rclb
adc
xchg
or
dec
js
mov
or
xchg
jo
fisubrl
mov
rorb
addb
stos
push
fisubrl
ret
faddl
pushf
jo
push
and
out
mov
xchg
push
xor
inc
push
sub
xchg
ret
jb
and
sbb
lcall
ljmp
xchg
pusha
outsb
inc
lret
outsl
cltd
adc
dec
es
data16
xor
pop
inc
mov
shll
sbb
adc
loopne
and
sub
adc
pop
orb
leave
les
pushf
fs
movsl
mov
enter
in
mov
adc
dec
sbb
inc
or
repnz
aam
push
cmp
or
or
mov
cmpsb
xchg
out
jb
rorl
pusha
xchg
outsb
cltd
xor
xor
ds
xchg
lods
pop
int3
add
jg
push
push
ljmp
dec
int3
hlt
inc
mov
sbbl
movsb
lock
jle
or
out
je
xor
add
fdivs
and
mov
and
and
ret
adc
sahf
adc
mov
test
sub
hlt
xor
test
rolb
or
xchg
lock
leave
pop
and
adc
bound
mov
mov
jp
sbbb
mov
and
inc
sub
adc
fiadds
aam
insb
divb
pusha
das
add
adc
pop
adc
xchg
dec
inc
sbb
jp
dec
test
sbb
cmpsb
xor
addb
cltd
dec
or
enter
or
adc
push
dec
push
dec
jle
add
adc
inc
lret
clc
sub
jg
pop
sbb
sbb
jbe
xor
mov
xchg
jp
es
xor
xor
mov
mov
mov
mov
loop
or
dec
inc
mov
ret
push
add
push
or
clc
pop
xor
push
pusha
lret
icebp
cld
and
and
pusha
cld
stos
mov
mov
mov
nop
inc
enter
jl
inc
je
sbb
test
add
cmp
sbb
or
dec
rorb
fs
test
in
add
mov
push
loopne
xchg
cmp
dec
push
xchg
bound
xchg
idiv
call
add
push
sbb
add
push
enter
fsub
loopne
adc
dec
mov
decb
push
pop
fwait
icebp
scas
callw
dec
inc
sub
mov
nop
imul
jnp
mov
mov
inc
push
lret
enter
or
repnz
gs
and
fisttps
sbb
es
mov
data16
mov
int3
rolb
mov
push
ret
data16
mov
addb
jbe
xchg
sbb
int3
and
mov
sarb
inc
sub
mov
ret
sbb
sub
les
xchg
shlb
out
int
enter
sahf
or
test
outsb
insb
xor
xor
push
ss
mov
or
mov
sbb
lods
je
imul
int3
cmp
sbb
or
and
and
xor
out
sbb
mov
and
ljmp
mov
ret
orl
adc
jecxz
movsb
and
andl
nop
xchg
jb
clc
dec
scas
arpl
test
sbb
xchg
sahf
and
sbb
addb
sub
xchg
add
inc
pop
add
cwtl
movsb
push
dec
lods
xchg
bound
push
lods
aaa
movsb
aaa
ret
xchg
xchg
popa
adc
dec
and
push
and
lods
push
mov
iret
inc
adc
mov
add
popa
push
xchg
and
jo
sub
jne
cs
aam
and
or
int3
in
xchg
adc
dec
enter
nop
xorl
jo
inc
ret
pushf
repnz
andl
add
push
mov
cmp
dec
push
jl
push
adc
call
sahf
mov
js
xchg
sbb
add
ret
dec
test
push
rcr
rol
inc
aaa
movsb
bound
gs
push
jb
pushf
or
mov
xchg
xchg
movsb
add
lret
add
es
pusha
add
pusha
inc
fcomps
rclb
rolb
loop
sub
stos
rolb
and
and
mov
rcrl
inc
fs
and
add
mov
cmovae
dec
sbb
and
xchg
dec
mov
mov
movsb
ds
or
addb
push
xor
inc
or
xchg
mov
cmp
and
inc
ret
inc
pop
xchg
fmuls
push
sbb
mov
mov
inc
xor
dec
mov
rorb
mov
adc
insb
cmp
push
orl
loope
xchg
rolb
fwait
adc
and
test
pop
mov
nop
ror
and
daa
pusha
scas
outsb
jne
fs
lods
add
sbb
mov
call
lret
js
test
ljmp
push
add
aam
test
xor
sbb
es
push
inc
add
jo
or
mov
sub
cmp
adc
divb
push
add
stos
movsb
push
cmp
or
mov
adc
clc
push
sub
ficoms
daa
and
movsl
outsb
test
push
hlt
sti
pop
or
cmpsl
or
inc
or
mov
push
dec
push
dec
rclb
or
es
or
inc
lea
aam
or
fadds
inc
adc
mov
dec
ror
add
mov
pop
leave
push
add
rclb
push
addb
sbb
adc
insb
ret
movsb
out
mov
xchg
jne
add
mov
sub
add
subb
test
or
xorb
jmp
int3
and
xor
gs
add
adc
mov
or
mov
stos
mov
fs
sub
or
bound
xchg
adc
mov
adc
xchg
inc
fsubp
adc
test
lock
mov
and
rclb
mov
sbb
xor
or
and
xchg
sub
dec
shlb
inc
gs
loop
nop
jmp
sub
xchg
movsb
adc
push
repnz
and
stos
push
xchg
sbb
lods
jl
aam
negb
mov
aam
lcall
cmp
adc
mov
loop
pop
ljmp
mov
push
jb
enter
add
or
adcb
or
add
nop
aam
adc
push
adc
xadd
or
enter
mov
scas
add
repnz
sahf
ds
enter
or
push
fcmove
mov
lods
lcall
cwtl
ljmp
fadds
pop
mov
ficoms
xchg
mov
xchg
pusha
add
mov
lods
add
jo
or
xchg
ret
adc
inc
ljmp
push
rcrb
movsl
movb
mov
lock
cwtl
adc
ficompl
inc
and
test
in
xchg
int3
dec
js
loop
dec
aam
jbe
add
sub
push
fs
push
xchg
mov
mov
fidivl
ss
clc
fwait
ret
aaa
cmp
adc
dec
fstpl
rorb
rcrl
es
pop
scas
cmp
enter
popa
add
add
mov
pop
mov
inc
adc
pop
xor
test
push
ss
or
loopne
insl
adc
pusha
cmpsb
inc
or
leave
andb
mov
or
xchg
mov
scas
pop
pop
dec
outsl
add
inc
sbb
push
add
dec
data16
dec
add
sub
push
loop
jae
xor
xor
xor
sub
push
rclb
cwtl
cltd
xor
adc
push
mov
sbb
dec
inc
lcall
out
push
mov
add
cltd
or
pusha
movsb
inc
mov
gs
dec
dec
jb
mov
repnz
inc
inc
cmp
sub
hlt
push
es
stos
xchg
add
cli
or
sbb
outsb
push
or
lret
les
loopne
inc
xchg
push
test
pusha
sub
outsb
fcoml
xchg
cs
sbb
pop
lret
nop
fdivrl
push
lret
add
enter
sub
mov
xor
xchg
jne
inc
cmp
push
sub
dec
mov
mov
sahf
xor
ds
mov
mov
cmp
dec
cmp
pusha
repnz
adc
call
test
dec
enter
test
xor
dec
loopne
je
sbb
rolb
aam
test
adc
push
inc
and
sub
push
dec
pop
xor
cmp
cs
insb
cmp
push
xchg
inc
test
add
sub
inc
loope
rcrb
outsb
cwtl
mov
nop
pusha
sub
test
or
push
in
xor
inc
mov
ret
sbb
mov
and
test
cmp
sub
in
enter
adc
test
lock
xor
fdivrp
cmpsb
lods
add
push
inc
pop
call
test
iret
and
xchg
xchg
cmp
mov
mov
jp
pop
flds
xchg
std
or
jl
push
and
test
or
push
push
mov
cltd
and
insb
adc
ret
in
in
inc
push
or
or
ret
or
adc
inc
cmp
clc
data16
pop
xor
cli
and
fsubs
xor
add
lea
xchg
jo
xchg
faddl
dec
sbb
mov
test
pop
test
add
adc
je
and
xor
shll
orl
add
pop
mov
xchg
and
push
test
js
add
sbb
dec
mov
push
shrl
pop
dec
pushf
jp
sbbb
pushf
sub
flds
daa
gs
enter
enter
inc
movb
data16
push
mov
push
xor
cmp
dec
into
in
mov
inc
pusha
adc
push
stos
cmc
andb
out
add
sbb
roll
inc
push
cli
fwait
mov
inc
dec
fcoml
es
inc
xor
push
add
pushf
sbb
push
cwtl
xchg
popa
push
add
insb
push
mov
fistpll
and
push
xor
cltd
popa
inc
ret
les
adc
in
sahf
xor
push
adc
xchg
shrb
in
lcall
mov
xor
lea
dec
add
cli
xchg
or
mov
dec
and
sbb
jl
add
jp
inc
in
dec
push
xor
mov
lcall
rclb
or
sbb
ret
or
pop
testb
and
fadds
sub
sbb
bound
inc
sub
mov
test
add
and
mov
or
notb
orb
movlps
faddl
inc
mov
iret
push
xor
sbb
pop
addr16
fmull
push
movb
mov
pop
dec
sub
movsb
fmul
outsb
fdivrl
add
xor
cwtl
aam
dec
mov
fsts
sbb
sub
je
add
mov
xchg
fs
push
pushf
popa
subb
fsubs
ds
add
dec
mov
dec
hlt
ss
dec
add
loop
adc
sbb
jl
aam
and
mov
movsb
sub
push
xor
sub
rolb
mov
lods
push
xchg
push
add
out
jl
and
imul
push
xor
sub
adc
inc
or
rolb
xorb
fisubs
dec
cs
ret
sub
or
mov
add
mov
fcoms
dec
test
push
clc
mov
and
loope
inc
fsubl
cmp
push
mov
sbb
sub
pusha
ss
dec
bound
sub
addl
fcoml
loop
pop
dec
or
lods
int3
fidivrl
pop
addr16
jg
mov
jb
test
je
ficomps
aaa
push
and
adc
add
sub
or
push
and
pop
mov
in
pop
add
inc
lcall
repnz
into
xchg
shrb
adc
push
out
lret
sbb
insb
les
pushf
inc
push
sti
je
sub
leave
adc
sub
and
pop
mov
nop
push
push
or
mov
inc
in
pop
and
add
push
mov
mov
sub
jl
and
pop
fisttps
push
pop
and
sub
sub
cltd
or
adc
testb
mov
mov
rclb
push
inc
hlt
cld
inc
sub
xchg
push
mov
xchg
push
push
ljmp
sub
xchg
shlb
rorb
call
cwtl
sbb
adcb
and
loopne
cmpsl
push
loopne
push
mov
in
and
int3
xchg
insb
loopne
aam
mov
inc
cmp
add
pop
adc
inc
mov
call
jg
or
ror
sub
lods
or
jl
in
xchg
or
scas
aaa
lea
xchg
inc
mov
and
ret
mov
popa
pop
into
push
popa
sbb
pop
test
inc
iret
adcl
xorb
sbb
dec
test
sub
fsubrl
test
nop
out
xchg
and
jp
jp
dec
xor
add
adc
in
cld
mov
pop
add
push
inc
jge
pop
push
sub
push
jbe
add
dec
push
dec
data16
mov
test
sub
or
sarb
mov
add
pusha
rorb
ret
test
adc
jle
sub
and
inc
call
adc
cwtl
and
mov
mov
sbb
xchg
add
into
lods
rcrb
add
and
es
sub
outsb
push
pop
pushf
xor
test
into
hlt
inc
nop
mov
subb
pop
pop
sub
icebp
fimuls
hlt
add
add
xor
push
dec
fistl
rorl
and
inc
xchg
or
dec
popf
add
add
pop
sbb
push
negb
fnstenv
shll
adcb
push
int3
es
cwtl
pusha
pop
pop
xor
mov
push
test
lods
or
ds
xor
pusha
xchg
adc
pusha
add
or
pop
pusha
loop
push
pop
push
xor
fs
inc
and
sarb
dec
data16
sbb
rorb
mov
and
pop
pop
and
test
inc
add
lcall
dec
sbb
and
aam
and
orb
or
mov
adc
mov
cli
je
dec
or
sbb
les
jp
inc
or
add
xchg
sbb
test
scas
inc
dec
sub
adc
cmp
inc
adcb
push
hlt
test
ret
mov
or
cmovae
ds
test
stc
xchg
adc
outsb
or
and
cmpsb
push
movsb
outsb
jp
inc
mov
hlt
sub
xchg
mov
sbb
inc
adc
mov
rorb
xor
cld
insb
arpl
dec
cli
xchg
jae
enter
push
into
or
rcrb
mov
js
adc
mov
mov
shrb
jo
and
dec
adc
cmp
mov
mov
add
mov
inc
les
mov
or
push
push
ljmp
adc
dec
stos
adcb
inc
push
xor
xchg
adc
sbb
and
inc
inc
call
cli
cmpsb
xorb
inc
mov
sub
pop
mov
js
pop
push
xorb
inc
pop
mov
pusha
repnz
daa
inc
sub
add
mov
lea
cld
push
and
xor
ret
int3
divb
push
mov
dec
inc
and
mov
loop
nop
xor
rcr
test
jle
sahf
mov
sbb
call
pop
add
add
add
cmp
fsub
js
and
loopne
cld
add
dec
addb
in
dec
in
pop
fdivrs
mov
sub
sub
and
dec
add
movsb
data16
xor
adc
jnp
dec
and
xor
sbb
rclb
xor
pop
add
stos
lods
and
lock
xor
int
jg
sbb
xchg
sbbb
ret
and
jbe
jbe
divb
in
sub
or
jl
nop
sub
adc
enter
xchg
int3
xchg
sub
rclb
loop
ret
xorb
sub
xchg
mov
bound
xchg
adc
dec
xorb
xor
adc
scas
sti
stos
iret
es
lret
insb
lods
movsl
xor
push
push
dec
mov
sub
insb
xchg
rorb
mov
fs
adc
push
sub
int3
push
cltd
dec
and
add
movl
push
inc
outsb
add
push
push
add
es
enter
push
pop
mov
sbb
lock
ljmp
rol
lock
push
ljmp
or
xorb
cmpb
dec
outsb
push
push
jo
adc
mov
sub
pushf
xchg
sarb
cltd
pop
push
aam
into
nop
inc
push
adc
fistl
sbb
loopne
stos
mov
sbb
out
sbb
mov
add
cmpsb
out
xchg
ljmp
push
enter
lods
in
je
adc
mov
sbb
loopne
roll
adc
inc
add
data16
push
inc
xor
sbb
and
mov
int3
push
test
fs
fs
insb
test
push
push
sub
inc
cmp
aam
add
pusha
ds
mov
ljmp
into
dec
xor
ret
or
sub
ds
mov
add
lods
sub
inc
dec
dec
push
jl
push
inc
es
cmp
out
xor
add
shlb
filds
daa
xchg
push
xchg
push
jb
jo
les
mov
xchg
mov
and
cmp
ficoms
and
jo
lods
pushf
jb
insb
pop
mov
in
sbb
mov
mov
xor
mov
pop
sti
bound
sbb
or
mov
subb
orl
rorb
popa
fs
pusha
pop
rcl
cs
lds
push
rolb
add
adc
pop
sub
mov
cld
outsb
cwtl
lcall
xchg
shlb
lret
sub
jo
cmp
popa
mov
xor
cmp
pop
sbb
daa
ret
adc
add
nop
add
push
stos
enter
in
cmp
cmpsb
bound
aam
and
mov
inc
cmovno
cmpb
push
test
mov
mov
sbbb
sub
faddp
dec
xchg
inc
pop
rcll
and
xchg
mov
movsl
or
xchg
pushf
lds
add
mov
or
int3
xor
xor
adc
rolb
ret
inc
jg
xchg
xchg
xchg
dec
mov
push
stos
and
std
shrl
orb
mov
mov
xor
out
fisubs
pushl
clc
mov
fisubrs
int
cmp
dec
and
rclb
adc
dec
ret
add
inc
sub
xor
xchg
repnz
je
dec
adcl
pop
mov
push
xor
repnz
add
sub
xchg
out
sbb
test
or
adc
mov
jno
adcl
or
add
mov
inc
add
sti
ret
rclb
test
inc
cwtl
ret
into
xor
loope
pop
faddl
or
add
rol
xchg
sar
mov
add
insb
bound
adc
hlt
mov
popa
orb
or
adc
lods
sbb
adc
push
adc
mov
jb
jb
pop
cmpsb
jo
or
call
loopne
bound
jb
and
or
jb
cmovae
movsb
xchg
pusha
mov
mov
imul
or
ds
mov
test
xchg
sub
or
mov
js
add
add
inc
fs
push
add
test
xor
mov
lods
and
sub
lea
in
inc
sbb
inc
mov
and
ss
and
fdivl
mov
inc
add
stos
sarb
lret
fbstp
test
xor
inc
push
mov
adc
dec
xchg
lods
jne
xadd
xchg
stos
add
add
inc
sub
sub
xchg
mov
xchg
and
faddl
pusha
add
push
cwtl
test
push
push
clc
es
mov
dec
sub
dec
cltd
sub
mov
mov
mov
xor
sub
cs
adc
sahf
insb
push
push
adc
or
inc
jo
orb
push
jle
std
or
push
test
outsb
popa
add
out
lret
aad
add
jle
ffreep
xor
sub
int3
dec
adc
and
adc
fiadds
loop
rorl
loopne
inc
cmp
mov
shlb
xchg
and
pop
xchg
cmp
mov
and
mov
sub
test
insb
fsubp
push
and
or
xor
adcl
and
jo
or
inc
and
cwtl
adc
xchg
xchg
pop
fdivrl
lods
sub
inc
adc
je
call
or
dec
and
lcall
jb
movsb
and
bnd
pushf
mov
and
ret
or
nop
sub
xor
add
inc
mov
add
cmp
fs
pusha
cmpsl
pop
ds
test
arpl
push
xor
adcl
inc
divl
ds
push
dec
leave
xchg
es
pusha
push
lds
dec
inc
pop
xor
rorl
js
pushf
mov
je
xor
orb
cmpsl
inc
xchg
fdivr
push
nop
add
sbb
mov
push
dec
xor
xor
or
and
mov
sub
mov
mulb
rolb
lcall
ret
push
push
cld
ficompl
sub
dec
and
inc
xor
in
mov
pop
loopne
arpl
pusha
fadds
mov
push
push
add
mov
inc
or
add
inc
jo
int3
movsb
mov
mov
lea
mov
sbb
sub
or
sub
sub
xor
test
pushf
jo
das
adc
dec
int3
rolb
subb
les
xor
pop
inc
ret
cltd
rorb
push
xchg
call
into
xor
leave
and
test
fsts
add
es
cmp
inc
lods
push
fdivs
xchg
adc
fcmovne
mov
add
and
inc
inc
loopne
adc
js
fcmovb
aam
xchg
xchg
loopne
das
orb
sbb
or
lea
xchg
push
cmpb
lea
adc
add
or
push
andl
sbb
adc
xchg
hlt
pop
dec
lock
push
xchg
inc
cli
pushl
bound
push
adc
inc
sbb
mov
shl
nop
xchg
dec
and
sub
adc
and
xor
fildll
and
pop
or
fsubrp
mov
test
adc
pop
inc
or
xchg
jmp
pushf
in
test
dec
cmp
xor
lods
and
xchg
xor
scas
or
das
mov
push
and
push
add
sbb
cli
call
into
clc
loop
aam
inc
jbe
jp
mov
push
add
inc
adc
mov
rcll
add
dec
and
ret
push
jb
add
test
add
testb
mov
xor
xor
sahf
mov
push
dec
in
fimuls
mov
fcomp
ret
shrb
mov
inc
mov
sbb
cltd
adc
mov
add
xor
xchg
push
jp
pop
add
andb
jno
shl
in
sbb
xchg
and
lods
dec
dec
test
pusha
add
ret
inc
mov
orb
mov
mov
sahf
test
iret
cmp
mov
xchg
xchg
jo
mov
sbb
decb
daa
or
test
sbb
outsb
mov
and
fcoms
loopne
add
jp
test
loop
xchg
hlt
xorb
in
loopne
xor
xchg
jb
pusha
and
and
ret
fs
call
and
pop
push
pop
and
lock
pusha
ret
lock
not
cld
into
mov
in
jg
inc
sub
test
or
push
inc
daa
bound
push
pop
into
loopne
push
enter
sbb
enter
or
jb
movsb
inc
andl
adc
mov
pusha
testb
sub
pop
nop
mov
test
mov
pusha
adc
stos
rcl
test
xor
xor
push
loope
sub
push
es
push
sub
sub
idiv
sub
pop
mov
inc
adc
insb
bound
or
push
movsl
lds
and
sub
mov
rcl
inc
lret
mov
clc
push
addr16
adc
mov
call
aam
cmp
jl
jle
js
xchg
into
fidivs
xchg
sbb
xorb
cmpb
andb
xchg
sub
mov
dec
test
pop
movsb
subb
inc
in
cld
and
out
push
sbb
cmpsb
fdivl
test
sarb
mov
ret
push
mov
or
xchg
add
mov
sub
insb
cmp
orb
adc
push
push
imul
or
add
sbb
loopne
cmp
mov
mov
or
cmp
mov
fadds
and
adc
jp
data16
fs
pop
lretw
cmp
cmpsl
and
inc
or
sbb
cld
lock
and
xchg
pop
cs
mov
je
test
mov
add
addb
cs
xchg
and
jb
rorb
push
sub
adc
enter
fiadds
push
sub
push
mov
fstps
and
and
push
push
mov
adc
mov
mov
adc
es
add
lds
lock
fdivs
push
inc
mov
jl
fadds
jbe
dec
popa
sbb
xchg
in
out
imul
mov
xchg
inc
daa
add
stos
adc
test
add
cs
shll
dec
pop
inc
mov
sahf
cmpb
mov
adc
cli
pusha
sbb
add
addb
push
rol
xchg
sahf
pop
aam
popa
jl
in
sbb
leave
cmc
xor
adc
sub
test
and
add
adc
cwtl
cs
xor
and
adc
cli
incl
pop
mov
xchg
bound
jno
push
xor
mov
xor
pop
adc
inc
push
rcl
or
lea
mov
add
push
ret
std
out
int
add
ljmp
jo
sbb
or
fs
mov
xor
or
arpl
push
inc
cmp
je
mov
daa
jp
out
adc
push
inc
enter
adc
incb
and
ficoms
pop
mov
add
movsb
sbb
cwtl
test
ret
push
pop
xchg
cltd
or
inc
cli
and
lods
push
mov
enter
ss
lods
hlt
push
add
ret
scas
sbb
cld
pop
sahf
popa
add
or
test
cwtl
insb
lods
sub
push
cmp
sub
testb
mov
ficoms
rcl
ret
test
cmp
cld
push
push
adc
xchg
lret
test
sub
push
pop
or
out
leave
pop
xchg
sbb
mov
xchg
fmulp
enter
cmp
mov
ret
cwtl
jb
mov
mov
test
dec
xchg
cmpsl
and
ficompl
cltd
and
in
pop
mov
jp
std
loopne
rolb
fcoms
xor
test
push
ret
add
ss
out
es
cmp
std
fs
and
into
xor
xor
loope
push
mov
in
cmp
add
fs
test
xor
add
loopne
je
mov
adc
xor
push
or
push
push
mov
into
dec
and
xchg
mov
fidivs
or
nop
hlt
in
into
ss
cmpsb
push
pop
sarb
pushf
test
sub
daa
les
dec
adcb
pusha
adc
and
inc
in
sbb
lds
dec
adc
lcall
mov
hlt
pusha
test
std
cs
and
push
mov
cs
mov
lds
and
mov
push
into
inc
std
in
push
pop
mov
lods
and
or
vdivss
sahf
adc
sub
push
les
mov
pop
push
lds
sub
add
adc
stos
call
dec
or
sbb
dec
mov
or
sbb
and
adc
mov
data16
add
add
cmpsb
sub
sbb
sahf
ret
sbb
mov
sub
adc
rcl
out
or
and
push
adc
mov
inc
mov
and
pop
adc
push
aam
in
sbb
xchg
jl
push
jp
sbb
loopne
outsb
push
outsb
movsb
test
mov
mov
cmpl
dec
dec
mov
movsb
inc
cs
dec
cmp
inc
add
adc
pop
and
mov
cmp
dec
xorl
or
ret
adc
dec
cwtl
in
mov
xchg
xor
and
and
xchg
arpl
or
add
in
clc
mov
std
clc
cmp
sahf
jp
fwait
adc
fidivrl
or
mov
dec
inc
dec
pop
fs
adc
pop
xor
or
push
lret
inc
cld
test
fsts
into
in
adc
adc
je
test
test
andb
and
nop
or
adc
cmp
inc
addl
sub
xchg
jp
aam
add
sbb
mov
mov
cwtl
push
gs
out
ds
mov
pop
rclb
dec
add
iret
inc
pop
out
pusha
xchg
mov
in
mov
loop
and
pop
test
xchg
test
cli
test
pop
adc
mov
les
xchg
or
cmp
imul
add
int3
je
sub
add
sbb
js
or
inc
sub
sbb
cli
aaa
cwtl
pop
mov
xlat
fcmovnu
jp
scas
and
pop
xchg
pop
fmul
xchg
nop
test
adc
push
fiadds
cs
popa
mov
mov
push
xor
xchg
and
push
loopne
dec
data16
xchg
or
into
push
add
rclb
sub
dec
mov
insl
or
or
inc
pop
jbe
mov
movsl
mov
ss
rclb
push
add
mov
push
mov
and
lcall
adc
xchg
and
push
addb
xor
xchg
or
mov
mov
and
rclb
sbb
sbbb
push
dec
or
or
push
mov
adc
inc
xchg
mov
xor
adc
loop
movsb
dec
nop
fmulp
rol
adc
xor
test
add
inc
inc
pushf
mov
rorb
push
mov
xor
mov
lret
mov
dec
mov
int3
push
inc
add
pop
mov
rorb
andl
sub
push
mov
lcall
mov
push
and
and
test
xchg
lcall
pop
pop
jb
dec
and
inc
push
or
xor
mov
aam
loopne
subb
leave
sub
fdivl
push
adc
or
sbb
push
add
push
or
pushf
mov
cmp
leave
ss
loop
sbb
ss
sbbb
loop
inc
adcl
call
fildll
rclb
xchg
mov
xchg
inc
cmp
dec
out
dec
and
mov
or
inc
inc
push
pushf
xor
adc
cmpsb
jl
adc
dec
sbb
mov
jl
nop
sbb
mov
xor
orb
fmuls
mov
or
pop
in
cwtl
sub
dec
sub
lock
orb
xchg
ret
or
adc
enter
and
mov
and
dec
inc
jno
push
dec
sbb
pop
cwtl
mov
lods
add
subb
dec
pushf
leave
les
out
xchg
dec
adc
adc
movsb
popa
data16
pop
bound
add
or
xchg
fcompl
add
les
fs
sbb
pop
cmp
adcb
xchg
ret
xchg
xchg
push
dec
addb
mov
jo
adc
sub
bnd
sarb
or
push
add
or
mov
jb
fsubs
int3
nop
hlt
push
xchg
and
inc
test
mov
out
pop
movsb
xchg
je
push
nop
xchg
test
mov
inc
mov
repnz
mov
hlt
cmp
out
sub
pusha
or
loop
test
test
sbb
adc
dec
push
addl
add
jnp
insb
dec
and
sbb
add
or
lds
mov
clc
stos
mov
aam
adc
dec
dec
inc
or
sti
repnz
add
xor
and
sub
loop,pn
xor
or
mov
or
pop
orb
mov
cwtl
or
lret
xor
and
ret
add
push
xchg
cld
loopne
xchg
movsb
inc
pusha
and
js
icebp
xchg
lock
sbb
and
pusha
push
mov
add
or
xchg
jb
cs
add
xor
or
dec
hlt
int3
pop
mov
cmp
cmp
sub
es
mov
add
mov
jb
fs
sbb
xchg
clc
push
shlb
push
insb
in
insl
sbb
cmpb
add
add
push
adc
add
mov
shrb
adc
rclb
movsb
add
repnz
add
xchg
xchg
incb
cmp
sub
or
xchg
cmp
mov
sbb
subb
add
rol
mov
or
xor
dec
or
es
mov
xchg
push
jbe
mov
dec
adc
mov
mov
test
lret
sbb
pop
test
jle
inc
aaa
je
adc
dec
mov
add
inc
enter
jp
cs
add
loope
pop
add
incl
es
repnz
push
movb
dec
jge
pusha
dec
inc
faddl
and
shrl
aam
loopne
and
dec
stos
sbb
sbb
imul
inc
pushf
and
les
into
push
cwtl
xor
or
lods
add
cwtl
and
xor
push
orb
xchg
andb
push
xchg
divb
mov
subb
adc
add
out
mov
jp
jp
jmp
or
add
rorb
cwtl
pop
cmp
nop
loope
mov
gs
cld
dec
adcb
dec
dec
add
and
or
movsb
adc
pop
sahf
cs
test
adc
xor
sbb
cli
aam
sub
hlt
mov
jb
sub
or
cmp
test
es
xchg
jb
orb
cmp
mov
dec
jp
aam
pusha
jnp
adc
addb
shl
mov
test
mov
inc
sbb
add
mov
pop
push
adc
rorb
mov
push
mov
aam
xorl
push
dec
lcall
or
ss
push
push
push
sbb
mov
sbb
mov
scas
xchg
push
data16
cmp
fs
dec
pop
ret
adc
push
pusha
dec
rorb
xor
add
add
mov
sub
push
and
int3
push
lret
movsl
les
leave
adc
je
pushf
pop
sbb
push
ret
fcomps
or
mov
cli
mov
add
mov
loope
push
lcall
inc
cmpsb
and
inc
sub
inc
adc
popa
mov
loopne
mov
or
push
jno
dec
fs
outsb
ret
and
mov
push
out
lcall
mov
push
xchg
ret
adc
in
in
dec
push
inc
test
adc
pop
add
push
or
cld
shlb
xchg
ret
sahf
mov
stos
aam
xor
adc
and
dec
jb
push
mov
dec
and
push
dec
push
jmp
or
jne
sahf
pop
sbb
xor
inc
mov
int3
or
aad
call
sbb
adc
aam
movsl
pop
push
bound
sub
adc
movsb
and
mov
add
and
xor
inc
jo
lret
xchg
out
dec
ffreep
enter
push
cmp
das
enter
and
inc
insb
inc
xor
mov
shr
push
cmp
add
xchg
cmp
mov
mov
out
sbb
xor
jb
pop
pop
sbb
cmp
sbbb
dec
notb
pop
addb
call
add
inc
mov
and
jb
mov
adc
pop
fdivs
mov
cmp
inc
rol
out
test
sub
push
push
sbb
add
cmp
stos
mov
enter
movsb
les
adc
dec
cmp
fs
sub
clc
pushf
pusha
and
pop
js
into
sbb
or
mov
insb
fsts
mov
outsb
scas
jl
xor
sub
test
in
jbe
test
jle
push
push
inc
jb
push
dec
cltd
mov
xor
inc
pop
lret
cmp
lock
rol
pop
nop
push
push
add
push
and
ret
cs
mov
rolb
call
cmpb
add
sbb
cmpsb
inc
out
sbb
sbb
cmp
rorb
dec
and
add
xchg
dec
add
orb
adc
and
pop
add
push
ficompl
mov
pushf
popf
sub
lods
mov
add
sub
cmp
push
adc
clc
cltd
push
push
or
cmp
lcall
dec
dec
and
inc
ret
or
push
sbb
pop
inc
inc
push
rcrb
ljmp
inc
xor
dec
sbb
jbe
dec
sbb
dec
mov
or
fs
push
bound
xor
popa
dec
loop
fidivrl
lcall
add
or
ss
jo
xchg
jno
sarb
xchg
lcall
outsb
xor
sub
je
in
cmpsl
int3
es
nop
or
add
fidivl
push
mov
test
add
sbb
sub
mov
add
inc
dec
ret
pushf
rclb
les
add
sahf
pop
sub
push
dec
shrb
ja
xchg
movsl
jo
cmc
mov
ret
jb
gs
mov
and
adc
subb
mov
pusha
xchg
or
cmp
and
cmpsb
andl
sub
sbb
inc
test
adc
int3
insb
and
or
add
xorb
jnp
add
nop
into
inc
sbb
sahf
fs
pop
xorl
xor
mov
in
shl
dec
mov
adc
add
xchg
mov
cwtl
dec
or
out
into
add
or
xor
sahf
aam
push
mov
insb
push
in
and
dec
or
mov
loopne
adc
and
sbb
sub
in
mov
sti
dec
pusha
jp
scas
cli
into
add
add
push
fs
imul
int3
xchg
xor
call
test
ret
mov
and
xchg
mov
out
pop
adc
test
pusha
dec
and
mov
xchg
jecxz
mov
xchg
cmp
iret
cld
hlt
mov
les
ret
or
xor
inc
andl
add
loopne
jp
jmp
sbb
jo
sbb
add
add
mov
jle
or
ja
adc
or
fiaddl
sbb
mov
push
int
mov
xchg
xchg
shlb
imul
test
inc
lds
add
sbb
fiadds
ret
mov
xchg
push
test
nop
and
and
xchg
mov
les
dec
inc
cmp
fs
shll
xchg
inc
cmpl
xor
cmp
cmpb
add
or
test
inc
mov
add
dec
cmp
inc
xchg
push
or
pop
or
push
adc
call
enter
and
or
insl
sbb
scas
loope
out
and
push
cmpsb
orb
movsb
jl
mov
outsb
in
rcrb
ret
rorb
xor
or
loop
mov
pusha
lret
mov
adc
mov
sub
cmp
mov
xchg
sub
mov
xchg
push
sbb
test
loope
sub
lret
xor
mov
jp
call
cltd
gs
rorl
das
dec
divb
gs
outsb
add
adc
xor
cwtl
sub
and
movsl
pop
js
mov
inc
dec
add
adc
sub
inc
sub
jl
sub
jb
and
push
lcall
sbbb
push
sbb
loop
cli
int3
lds
in
xchg
xchg
pop
sub
add
or
sbb
push
push
push
jbe
dec
push
push
insb
in
add
shlb
mov
xor
add
mov
lock
push
adc
sarb
lods
inc
fisubs
cltd
and
ret
dec
mov
xor
call
adc
xchg
jecxz
dec
xchg
adc
push
jb
adc
pop
adc
cmpb
xchg
xchg
cmp
cmp
idivb
enter
loope
push
jp
sbb
int3
or
fs
mov
enter
push
xchg
mov
daa
dec
mov
lret
lret
inc
push
add
mov
mov
es
js
gs
add
stos
or
or
out
and
jno
xchg
push
mov
add
sub
insb
add
jne
aam
mov
add
xor
xchg
mov
in
pusha
nop
test
enter
popa
cmpsb
push
mov
jg
add
insl
addl
cld
stos
fstpt
mov
lods
orb
dec
dec
pushf
xchg
jo
or
inc
and
lcall
sahf
out
push
imul
hlt
sbb
push
aam
adc
jbe
mov
push
mov
sub
stos
sub
shrb
stos
push
dec
aaa
movsl
ret
js
xor
and
ds
loopne
xor
push
sbb
push
call
test
dec
sub
jno
loope
push
outsb
add
jbe
dec
mov
mov
adc
or
subb
mov
gs
xor
xor
adc
cwtl
add
bound
in
cmpsb
xchg
push
push
push
cmpsb
push
xor
ljmp
add
push
aam
inc
js
xchg
sbb
sbb
mov
xchg
sub
data16
test
pop
mov
mov
or
jbe
adc
sbbb
mov
mov
aam
leave
and
xchg
xchg
dec
and
jb
xor
and
jmp
pop
pushf
dec
push
push
sbb
lret
xchg
xor
pusha
xor
jae
mov
sub
inc
or
ljmp
imul
data16
and
or
push
sahf
cmpsb
dec
push
xor
and
in
cs
popa
popa
movsb
inc
pusha
ret
inc
hlt
ljmp
push
js
call
lods
lret
test
and
sti
fdivrs
push
push
popa
out
cli
std
sbb
nop
dec
and
xchg
xchg
mov
cld
xchg
gs
aam
pushf
ss
adc
ss
dec
insb
sbb
xchg
pop
xchg
test
sub
push
adc
or
out
shlb
xor
movsl
mov
rorl
outsb
sbb
stos
jp
adc
sub
xchg
inc
js
xor
adc
movsb
add
idivb
add
sti
inc
and
lcall
or
pop
mov
nop
sbb
pusha
cmp
orb
pop
adc
or
pop
cmp
push
mov
sbb
cmp
mov
lret
mov
and
inc
or
lods
or
mov
sub
sahf
addb
inc
mov
jo
mov
xor
push
mov
adc
rolb
xchg
jbe
dec
mov
inc
mov
or
iret
pop
gs
xchg
mov
mov
and
xor
mov
je
fs
or
ficompl
pop
lret
pusha
orb
add
push
push
xchg
push
xchg
orb
insb
cwtl
push
mov
hlt
pop
xor
xor
mov
aam
adcb
push
dec
add
loopne
pop
jo
xchg
add
mov
out
mov
inc
pushf
bound
or
mov
aam
shlb
adc
aam
test
pop
jge
inc
xor
adc
les
inc
add
fadd
mov
cmp
add
jbe
or
shll
inc
sub
shlb
and
inc
or
lea
add
xchg
fisubs
push
inc
jmp
cmp
es
nop
cmp
int3
rorb
ret
xchg
xchg
add
data16
mov
and
dec
dec
out
sbb
or
stos
pop
adc
loope
xchg
repnz
pushf
cmp
xor
lds
sub
loop
xchg
xchg
pop
data16
sbb
xor
dec
sbb
test
jae
adc
and
inc
int3
pushf
cmp
pusha
push
andl
xor
repnz
ljmp
xchg
insb
push
or
dec
lcall
or
xchg
xchg
adc
fld
out
pop
inc
adc
pop
xor
xchg
dec
enter
push
or
mov
and
cmp
sub
push
pushf
or
pop
and
jo
int3
and
add
fdivrs
lock
arpl
push
push
add
jbe
mov
shr
dec
add
aad
shrb
pop
idivl
or
add
xor
lcall
std
xchg
and
mov
clc
pusha
or
fdivrl
orb
mov
sub
push
add
out
xchg
adc
dec
jo
xor
xor
ror
mov
or
push
xchg
cltd
xchg
add
push
gs
cmp
cmpsb
cmpsl
xor
data16
mov
sbb
fs
add
inc
xchg
test
and
mov
add
or
push
push
add
loop
push
jb
xchg
cmp
push
xor
push
cmpsb
pop
inc
adc
xor
sarb
call
jo
dec
push
loop
mov
inc
lcall
sub
ret
cltd
into
and
mov
cltd
cltd
push
sub
pop
jb
jo
mov
and
and
xchg
mov
pushf
sub
dec
push
and
lea
cmpsb
loop,pn
ret
add
mov
add
mov
cltd
dec
fistps
push
pop
mov
test
adc
adc
push
dec
pop
xor
add
mov
iret
add
and
push
call
dec
movsb
lock
push
mov
sub
mov
pusha
sbb
jle
test
movsb
xor
adc
mov
mov
dec
adc
xchg
pop
mov
sbbb
sahf
nop
pop
mov
adc
add
test
lret
xor
rclb
push
repnz
push
inc
inc
add
xor
or
in
sub
es
mov
popf
addb
add
cmpb
and
in
dec
addr16
scas
xor
test
mov
mov
adc
dec
add
adc
adc
xor
or
mov
xchg
xchg
mov
adc
inc
mov
subl
and
mov
leave
repnz
push
xchg
sub
aam
pop
bound
dec
dec
hlt
jp
and
gs
scas
mov
fiadds
test
add
xor
mov
add
outsb
mov
and
adc
cmp
adc
inc
pop
sbb
loop
or
jne
sti
fsub
pop
imul
ret
out
jnp
in
sbb
push
sub
sub
xor
xchg
bound
inc
inc
sub
sbb
loopne
dec
pop
cmp
push
in
lock
adc
outsb
out
inc
cs
adc
cli
sbb
sub
xor
lea
ss
fists
movsl
xchg
or
or
adc
mul
adc
outsb
jecxz
cld
jo
cmpsb
or
out
adcb
sbbl
es
bound
mov
and
data16
sbb
inc
dec
sub
inc
adcb
popf
cmp
enter
add
pop
les
inc
fwait
jo
mov
pop
in
sarb
pop
xchg
enter
loop
cmp
ret
mov
pusha
or
pop
inc
push
adc
rcrb
outsb
cltd
dec
cmpsb
xor
or
xchg
add
lock
popf
push
mov
testb
pop
xor
or
lods
push
insb
hlt
orb
or
push
push
and
lds
cmp
cmpsb
movsb
pop
sub
pushf
stos
aam
cmp
cmp
leave
sub
inc
and
inc
xchg
adc
les
push
movsl
movsl
subl
fwait
push
stos
js
push
test
xchg
loop
dec
push
mov
decb
roll
inc
loop
inc
dec
popa
dec
sbb
stos
lock
add
je
and
xchg
roll
inc
shr
or
and
mov
push
add
rolb
rclb
dec
and
inc
ds
adcb
insl
js
xchg
dec
sbb
loopne
jb
xor
fcompl
test
push
pop
ret
xchg
xchg
cmp
adc
mov
and
xchg
dec
dec
adc
adc
xor
jo
pop
xor
mov
call
rcrl
cld
inc
cmp
rolb
pop
sti
add
ret
sub
xchg
loop
adc
or
pushf
inc
xor
inc
push
sbb
mov
or
decl
inc
cmpsb
into
sub
xchg
mov
sub
cmc
inc
ds
xchg
ret
sahf
and
js
sbb
mov
add
lds
inc
and
or
leave
loopne
aaa
in
rcr
aam
mov
mov
js
and
jo
sub
mov
jb
popf
rclb
adcb
addl
sub
xlat
adc
test
je
pop
and
scas
xchg
dec
sub
pop
push
or
test
or
dec
andb
loope
pop
dec
xor
imul
mov
clc
adc
push
or
and
pop
leave
es
sub
and
sarb
or
and
xor
cs
insl
ljmp
adc
mov
inc
cwtl
fucomi
push
inc
push
dec
adc
fs
jnp
imul
cmp
pop
adc
dec
mov
add
and
shll
jle
sbbb
les
or
and
outsb
jo
sub
lea
std
push
mov
or
sub
xchg
in
push
xor
adc
ret
push
or
xor
cmp
pop
push
jnp
int3
jno
dec
int3
in
enter
sbb
ret
push
add
cmp
jmp
xor
sbb
iret
xchg
repnz
push
add
call
pop
shrb
addr16
inc
sbb
cwtl
mov
jp
movsb
and
cwtl
fiaddl
cmp
lock
in
push
ficoml
rcrb
movb
xchg
pusha
xor
fldenv
sbb
or
outsb
test
sbb
dec
negb
dec
inc
or
imulb
sbb
add
ss
mov
add
pusha
mov
push
adc
pop
push
test
push
sub
xor
or
and
dec
add
xor
pop
stos
fs
push
cmp
push
mov
popa
daa
pop
data16
pop
mov
mov
scas
sbb
xor
or
pop
add
daa
hlt
js
loope
movsl
or
or
or
mov
sub
adc
xor
mov
je
adc
mov
pop
hlt
or
xchg
pop
add
push
icebp
test
cwtl
add
test
cmp
mov
sahf
push
inc
iret
add
aam
aam
ret
js
adc
dec
jp
mov
xor
push
sub
je
and
sub
dec
add
nop
push
adc
loop
and
jae
clc
mov
int3
and
rcrb
adc
hlt
xor
or
call
add
jno
add
dec
or
mov
rcrb
mov
movb
fs
or
and
adc
dec
and
je
loope
sub
ret
and
inc
mov
or
cmc
mov
enter
mov
les
sbb
cmp
ret
xor
out
mov
call
add
int3
adcl
cmp
ret
cmpsb
push
lock
xchg
jecxz
nop
mov
mov
mov
in
and
mov
sub
fsubrl
inc
add
in
idiv
push
mov
sbb
push
imul
xor
inc
push
or
add
add
xor
or
pop
push
cltd
and
xchg
or
lock
mov
inc
movsl
xor
sub
pop
and
daa
or
xor
hlt
ljmp
xor
test
inc
or
sarb
adc
adc
mov
xchg
mov
enter
es
dec
push
add
pop
push
rorl
pusha
or
jo
fcompl
imul
dec
into
adc
inc
pop
and
xchg
js
imul
sub
push
xor
inc
jle
enter
inc
loopne
sbb
or
rclb
rol
pushf
mov
dec
outsb
pop
xor
rolb
lcall
add
sbb
sub
push
push
jo
movsb
xchg
je
outsb
xchg
xor
sbb
je
add
sbb
daa
jno
clc
add
movsl
enter
pop
and
xor
xchg
inc
jb
add
push
cmp
movsl
dec
dec
sub
sub
cmp
test
ss
xor
subb
mov
xchg
repnz
xor
sub
or
orl
stos
or
in
inc
add
lret
fsubrs
lods
cltd
ret
xor
cmpsb
pusha
xchg
and
movsb
adc
or
pop
mov
leave
pop
repnz
dec
and
add
out
pop
ret
pushf
mov
jp
cs
in
adc
inc
pop
es
xchg
es
inc
out
enter
xor
gs
add
sbb
xor
adc
jb
gs
lcall
outsb
cmp
loopne
dec
mov
adcb
add
push
push
or
inc
mov
mov
xchg
movsl
loopne
cli
pop
xchg
mov
xchg
adc
push
add
add
test
add
popa
or
or
cld
dec
or
icebp
sub
xlat
mov
dec
sub
mov
add
lods
std
adc
je
add
popa
inc
xchg
test
sub
pop
and
ret
and
or
adc
add
xchg
pop
outsb
mov
xchg
xchg
mov
daa
pop
cmp
andb
std
mov
popa
or
and
loopne
add
into
sahf
into
xchg
mov
add
dec
test
sbb
fxch
sub
sub
mov
testb
xor
sub
pop
inc
sub
popa
insb
add
mov
into
subl
push
adcb
imul
sub
xchg
dec
adc
les
mov
lcall
iret
pop
dec
adc
jo
insb
shrb
and
lcall
add
lret
in
stos
popf
sbb
push
data16
xor
adc
bound
mov
pop
test
mov
test
and
xor
mov
dec
sub
or
sub
ret
movsb
mov
out
adc
je
adc
xchg
mov
inc
test
inc
fs
and
dec
mov
inc
sbb
adc
popfw
pusha
mov
adcb
dec
pop
fdivl
repnz
sbb
ret
adc
shrb
or
mov
and
and
xchg
sahf
mov
adc
scas
or
push
enter
pop
test
rolb
mov
shrb
add
lods
cli
or
inc
or
sub
xchg
adc
divb
movsb
lods
add
lret
add
dec
inc
ficoms
xor
pusha
push
ljmp
cld
loopne
rclb
scas
pop
fdivs
sub
fs
enter
xchg
pop
sbb
pop
movsl
into
adc
adc
rclb
test
inc
push
js
mov
ret
dec
sbb
push
xchg
push
add
and
test
cltd
cmpsb
inc
pop
sahf
or
jne
pusha
cld
hlt
xor
push
lods
push
cmpsb
push
cltd
or
push
mov
push
mov
sbb
push
test
and
inc
pusha
jmp
rcl
aam
out
fs
jb
adc
sub
outsl
or
aam
push
add
inc
or
xchg
and
pop
call
jle
mov
dec
adc
xor
lds
fmulp
and
add
or
inc
inc
adcb
pop
fimuls
mov
dec
or
imul
cmpsb
stos
sub
add
add
movsb
xchg
or
test
shrb
scas
pusha
push
xchg
and
mov
into
add
test
ss
pop
mov
mov
std
pushl
call
nop
mov
jmp
cs
adc
bound
xchg
fcoml
inc
mov
cmpsl
adcb
add
jp
xchg
cs
enter
add
mov
xor
fadd
rorb
xchg
call
es
pop
and
cmp
mov
std
add
test
fdivr
insb
ss
pop
adc
xor
fld
or
or
mov
stc
ljmp
and
dec
test
ret
xchg
add
and
cltd
or
push
aam
adc
and
add
mov
adc
push
sbb
incb
adc
mov
dec
and
push
jl
push
cmc
xchg
mov
test
jl
push
inc
sbb
rclb
and
inc
push
lcall
mov
test
inc
and
dec
adc
mov
or
push
aam
enter
mov
mov
sbb
sbb
sub
mov
dec
cltd
fidivrl
cld
cmp
adc
xchg
xor
popa
cld
xor
lock
mov
add
icebp
movsb
or
cmp
shrl
sub
sub
and
xchg
add
lods
adc
push
mov
xor
movsl
xor
cmpsb
bound
shrl
mov
inc
rol
sbb
test
stos
popa
add
xchg
loop
dec
add
mov
adcb
xchg
sbb
push
shrb
pushf
push
cmp
bound
test
rolb
mov
mov
loopne
sub
je
pusha
xchg
adc
cld
lods
test
mov
ret
dec
out
mov
gs
es
sub
xor
xchg
sub
inc
or
inc
aam
imul
aam
pop
jb
aam
mov
loop
lods
lock
xor
xchg
inc
outsl
and
and
je
fs
enter
or
pusha
mov
mov
xchg
shrb
pop
je
sub
mov
pusha
test
cld
and
or
faddl
out
xchg
pop
sub
sbbb
jbe
ljmp
bound
sub
or
ss
lds
cltd
ss
xchg
and
jb
adc
pop
xor
sub
push
repnz
test
xor
int3
and
jbe
or
add
rolb
push
adc
pop
insb
mov
pop
lret
int3
and
xor
sub
mov
cmpsb
and
xchg
dec
and
add
adc
ret
sbb
test
and
shlb
rorb
sub
xchg
jbe
sbb
test
adc
pop
lcall
and
insb
ret
les
inc
dec
add
sahf
adc
xchg
inc
imul
enter
je
mov
aam
scas
std
mov
cmp
mov
inc
sbb
jl
dec
loopne
loopne
xor
or
xor
inc
cmpsb
mov
xchg
shlb
data16
add
in
nop
xchg
xchg
add
and
push
movsb
jo
sub
mov
sbb
imul
into
orl
aam
xor
sahf
mov
xor
mov
mov
pop
and
inc
xchg
jge
xchg
out
sbbl
or
cmp
cmp
daa
adc
mov
or
xor
std
inc
lret
dec
lods
xchg
lock
mov
popa
cmp
pushf
test
int3
nop
movsb
sahf
jo
mov
cmp
incb
mov
fcoms
push
xchg
pusha
enter
add
adc
jecxz
addb
push
xor
jp
hlt
adc
ret
adcb
inc
and
dec
mov
clc
jbe
mov
sub
sub
adc
jl
mov
inc
mov
lret
push
sbb
adc
and
mov
inc
pop
and
pop
sbb
and
inc
and
sbb
sub
and
gs
xchg
jle
es
mov
js
jo
mov
push
dec
adc
add
jno
hlt
push
xor
or
test
xchg
xchg
popa
push
lret
add
lcall
mov
dec
adc
mov
loopne
or
push
and
xchg
pop
cmpsb
xor
sbb
inc
ss
inc
filds
lret
sub
push
pusha
xchg
cmp
es
pushf
out
enter
or
js
xor
out
enter
xchg
mov
enter
mov
inc
mov
test
dec
jo
push
xor
lret
add
int3
cwtl
clc
addb
data16
shlb
es
add
outsb
dec
or
xchg
add
test
xchg
xor
shrb
sbb
sbb
add
cmp
movsl
adc
xor
fdivrs
add
xchg
dec
or
adcb
inc
lods
adc
nop
xchg
jbe
sbbl
adcb
adc
mov
lret
movsb
sub
inc
aam
sub
stos
sub
in
mov
ficoml
add
inc
xchg
aam
data16
or
or
ret
lret
dec
mov
xchg
xor
cmpsl
mov
test
and
xor
add
sub
and
sub
inc
jp
push
sub
lcall
pusha
into
mov
mov
std
call
cs
jl
rcr
sbb
xchg
sub
add
add
push
inc
imul
lods
int
bound
outsb
adcb
and
or
clc
inc
test
mov
dec
jo
cmp
dec
mov
test
xchg
dec
adc
inc
push
xor
pop
dec
push
test
or
movsl
add
cwtl
xchg
push
xchg
push
or
push
push
data16
insl
imul
cwtl
sub
push
test
adc
mov
dec
call
cld
je
fistpl
push
nop
xor
cwtl
hlt
sbb
xchg
popa
xchg
mov
add
call
xor
xchg
xchg
and
and
inc
test
lock
push
mov
push
cli
xor
xchg
jp
xor
or
test
xor
sub
jo
mov
inc
pop
cmp
js
mov
bound
clc
lahf
mov
insl
jbe
shl
inc
add
jl
or
jbe
call
push
pop
mov
sbb
or
rcl
push
jp
push
and
mov
dec
push
adc
sbb
xchg
add
bound
xor
test
mov
mov
iret
sarb
and
and
cltd
movsl
rorb
jb
inc
mov
push
push
loopne
cmp
add
in
lock
xor
dec
and
sub
and
imul
pop
ss
sahf
lods
sub
cmp
sbb
insb
cmp
frstpm(287
xor
or
test
and
pop
cld
push
or
push
out
xor
orb
push
sub
push
pop
xchg
push
nop
mov
and
cltd
fcomps
mov
cs
adc
lods
sbb
mov
and
cmp
orb
adc
add
mov
data16
cmp
loope
into
adc
scas
filds
adc
or
leave
movsb
cmpsb
pusha
adc
es
dec
push
and
outsb
sbb
das
sbb
fcoml
pusha
lcall
jb
or
loop
xchg
dec
inc
add
outsb
inc
jge
nop
data16
pop
inc
fs
and
cltd
cmp
loop
push
xchg
leave
dec
outsb
or
enter
sbb
mov
mov
cli
test
iret
add
adc
sbb
aam
out
and
cmp
and
mov
and
adc
lods
fdivr
mov
dec
inc
orb
inc
rol
sub
insb
xchg
sbbb
add
push
cmp
mov
mov
mov
xor
pop
push
add
xchg
mov
add
pop
sub
push
add
jb
sbb
orl
cmpsb
add
cmc
jo
add
xor
cmp
push
mov
or
sub
xchg
andb
jne
ljmp
popa
addr16
xor
push
xchg
fwait
mov
sbb
sub
inc
jp
adc
test
and
pop
add
xor
dec
xchg
xor
bound
mov
xor
daa
push
add
lods
das
movsl
test
and
inc
or
cwtl
sub
lods
xor
push
mov
cmp
push
mov
xchg
or
add
xchg
lret
mov
xchg
insb
adc
pop
fmulp
add
or
ss
lock
loopne
sub
jb
pop
add
lret
and
and
xor
loop
dec
add
movb
data16
push
sub
lds
test
add
loopne
sub
ret
mov
movsl
push
push
mov
cmp
in
shll
xor
inc
inc
ss
rclb
cwtl
jbe
into
pop
test
cmp
cmc
mov
popa
call
in
gs
test
test
jb
add
js
push
shll
mov
and
pop
pop
push
testb
dec
lret
div
adc
cmp
in
mov
int3
or
add
mov
cmp
and
js
cs
out
sbb
adc
pop
loop
push
xor
xchg
int3
jle
adc
mov
in
push
pushf
or
push
adc
pop
or
or
inc
inc
xchg
xchg
fcoml
xchg
mov
mov
sbb
in
nop
cmpsl
ds
pop
mov
cmp
addb
mov
mov
cmp
jo
sub
dec
mov
sbb
dec
data16
mov
mov
or
mov
mov
push
pop
sub
test
js
and
mov
adc
lret
stos
in
cmpb
adc
ror
pop
xchg
popa
imul
leave
notb
jle
sbb
adc
addl
sar
lds
movsb
inc
inc
test
xchg
sbb
inc
mov
inc
adc
add
rolb
out
sbb
aam
push
loope
inc
pcmpeqd
xor
pop
nop
add
xchg
push
pop
sub
je
sbb
ret
and
mov
jo
or
stos
xchg
rolb
test
add
lods
adc
add
or
xchg
xor
dec
nop
sub
jl
and
push
xchg
inc
popa
iret
and
push
sar
loopne
orl
adc
or
dec
xor
adc
mov
movsl
outsb
mov
fsub
xchg
pop
mov
mov
pop
sbb
and
fisubrl
lds
loopne
pop
jg
ret
js
test
inc
jge
or
pusha
push
in
adc
jl
inc
test
popa
xchg
adc
popa
loop
dec
in
xchg
dec
inc
dec
pop
outsb
fimuls
in
pushf
stos
cs
cltd
inc
inc
in
mov
dec
sahf
sbb
adcb
push
insb
xor
xchg
stos
test
aam
cltd
mov
add
sbb
cmp
int3
es
pop
js
shlb
mov
add
lods
inc
nop
jo
push
or
cld
inc
push
test
ret
xor
cmp
dec
adcb
pop
jo
pop
adc
sub
iret
sub
sbb
mov
rcrb
rolb
cmp
enter
hlt
cld
mov
sub
iret
cmp
lret
lret
sbbb
inc
push
sub
sbb
insb
hlt
sbb
push
mov
sub
int3
lret
mov
sbb
add
inc
or
push
rclb
cwtl
dec
xchg
xor
test
and
or
push
inc
lret
enter
push
popa
enter
pop
pop
inc
inc
sub
cmpb
jle
test
into
out
add
add
mov
mov
rorb
es
dec
cmp
pop
outsb
lret
and
cld
inc
add
inc
sub
rolb
popa
mulb
fsubrs
add
or
sbb
daa
sub
push
fdivr
mov
mov
xor
in
out
roll
mov
push
add
push
pop
or
fwait
js
mov
or
xor
rclb
mov
and
dec
adc
mov
test
inc
iret
adcl
test
or
in
adc
popa
add
test
and
cmc
movsb
enter
xorl
pushf
adc
mov
add
dec
imul
cmp
leave
dec
stos
ret
ss
and
retw
leave
enter
mov
mov
sbb
dec
xchg
faddl
xor
lret
subb
stos
add
dec
push
mov
ret
mov
data16
aam
push
add
xor
mov
leave
bound
dec
movsb
bound
bound
in
inc
fimull
test
test
mov
mov
pop
xchg
xor
cmp
push
add
out
adcb
xor
jo
ret
fwait
cmp
sub
xor
push
sarl
mov
mov
ret
mov
pop
dec
and
cwtl
mov
bound
pop
xchg
jp
andb
xor
mov
test
add
aam
push
push
sub
sbb
ret
mov
push
pop
xor
shlb
and
sub
cmp
dec
push
dec
add
xchg
adcb
xchg
push
enter
and
push
loopne
adc
xchg
add
and
rclb
orb
push
ljmp
mov
pop
cld
pop
adcb
adc
xchg
add
nop
pushf
or
roll
in
es
adc
or
mov
jbe
add
cmp
adc
mov
inc
adc
mov
jl
inc
add
push
dec
aam
ljmp
in
jp
adc
pop
sarb
mov
push
dec
sbb
and
or
push
adc
and
dec
sub
scas
mov
imul
fsubl
or
cs
js
or
mov
loopne
pop
ljmp
or
and
ret
lods
out
jno
dec
movsb
pushf
dec
xor
stos
test
xor
add
push
adc
push
and
push
fimull
xchg
xchg
enter
aam
add
push
scas
push
mov
scas
push
xchg
and
sahf
and
loopne
movsl
and
ss
xor
xchg
int3
pushf
and
pop
dec
ds
cwtl
xchg
pusha
fsubl
add
test
and
mov
inc
adc
inc
lock
pop
xchg
fs
push
je
mov
dec
mov
adc
and
shl
lods
and
mov
mov
cmp
mov
scas
xor
mov
cmp
adc
xchg
push
mov
push
jo
add
sbb
pop
inc
mov
adcb
mov
push
jbe
cwtl
mov
ss
shlb
pop
jle
sbb
xor
jg
mov
push
jo
cmpb
loopne
test
adc
sbb
sub
or
jp
or
mov
push
add
xchg
and
int3
imul
data16
pushf
xor
adc
clc
lcall
add
push
mov
push
xorb
adc
cmp
pushf
mov
and
pusha
pop
addb
inc
sub
subb
lret
popa
adc
xor
mov
test
sbb
dec
lahf
inc
adc
cmp
xor
rcr
push
lock
adc
add
lds
cmp
and
mov
inc
pop
mov
scas
pop
loop
or
rcrb
inc
dec
mov
mov
es
push
cmp
cltd
mov
ret
or
pop
or
and
pop
and
movsb
mov
push
lret
inc
or
mov
dec
popf
or
ficoms
add
or
mov
push
adc
fsubrl
xchg
or
sbb
icebp
incl
aas
movsb
sub
adc
add
and
or
lods
gs
mov
dec
scas
xchg
mov
push
popa
outsl
lret
movsl
ror
cs
loope
xchg
incb
mov
dec
or
xchg
rclb
pushf
add
es
movsb
shll
gs
jbe,pn
test
pusha
and
lock
xor
push
sbb
cmp
ljmp
jle
popa
and
cli
insb
mov
lock
cld
into
adc
rcrb
inc
ret
loopne
fdiv
inc
or
mov
mov
pushf
cmp
push
ret
push
ljmp
aam
pop
push
rolb
dec
sub
pop
mov
and
xchg
or
ss
cs
sub
lods
aam
adc
add
adc
inc
daa
xchg
jl
lcall
push
and
and
sub
jp
jle
inc
cmpb
and
mov
and
mov
ret
test
mov
cmp
mov
and
adc
and
add
mov
adc
add
outsb
cmp
xor
cmp
and
push
andb
popa
ljmp
adcl
adc
orb
xchg
sbb
js
sub
sub
and
imul
push
mov
leave
xchg
inc
sti
pusha
int
arpl
test
pop
xchg
loop
push
les
adc
sti
movsb
pop
mov
inc
mov
and
fidivl
xor
call
push
sbb
shlb
bound
aam
test
add
test
and
inc
or
sub
lock
pop
inc
sub
push
or
push
inc
bound
loop
xchg
inc
adc
xor
pop
cmc
movsb
push
test
push
push
ret
sahf
clc
js
xor
pop
cld
stos
aam
ret
inc
enter
jge
xchg
xchg
pop
sub
out
aam
nop
dec
jo
push
aam
jecxz
push
push
jb
sbb
fmull
or
insl
push
test
sbb
inc
cs
sub
xchg
push
shl
in
mov
mov
and
cwtl
cli
test
push
sbb
xor
dec
add
rcll
xchg
and
adc
xchg
push
cmp
and
or
mov
shlb
std
mov
adcb
nop
mov
adc
rcr
mov
popf
into
leave
pop
lock
or
ret
ficoml
incb
popa
mov
jno
adc
push
xor
or
pushf
inc
inc
adc
js
mov
call
test
mov
push
mov
lea
imul
das
xchg
xor
and
dec
popa
ror
scas
fidivs
inc
and
add
ljmp
add
and
sbb
inc
pop
add
or
xchg
inc
inc
popf
loopne
data16
mov
or
data16
das
int3
xor
pop
cmp
xchg
mov
in
cmp
push
in
sbb
mov
push
dec
sbb
and
mov
call
outsb
xchg
pushf
adc
mov
out
fs
cmpsb
andl
inc
sti
les
rclb
xor
in
into
hlt
inc
sub
or
xchg
pop
push
out
xor
add
xchg
les
nop
inc
dec
cmp
rcl
jo
fadds
rorb
jmp
jle
xchg
xchg
push
sub
ss
cmp
rcrb
dec
add
add
cmp
xchg
dec
mov
incb
xor
xchg
dec
sbb
sub
adcb
cltd
pop
cld
addb
mov
sbb
sahf
xchg
mov
jp
jp
test
adc
je
shlb
int3
or
inc
popa
loope
push
fsubrl
fs
sub
clc
mov
je
pusha
ret
mov
pusha
in
ljmp
in
lahf
or
imulb
push
or
xlat
jl
jo
aam
inc
call
xchg
fisubrs
pop
adc
jo
insb
aad
sub
adc
adcl
aaa
dec
in
out
bound
sub
test
push
sub
xchg
fs
in
or
test
addl
test
add
or
push
mov
ret
mov
add
push
jno
push
push
mov
push
daa
es
faddp
test
pop
jle
mov
and
push
sub
test
jnp
shrb
sbb
adc
outsb
mov
push
popa
jb
adc
es
add
jo
mov
jl
dec
add
rol
mov
js
sub
add
add
pop
dec
fmul
andb
xor
cmp
shll
stos
lea
adc
push
aam
arpl
sub
into
loopne
cs
insb
and
adc
and
mov
or
xchg
inc
push
cwtl
adc
inc
or
push
mov
sbb
sti
out
sub
or
push
pop
sub
int3
mov
mov
mov
and
mov
adc
bound
ficompl
loope
jl
and
and
push
mov
adc
les
or
push
push
dec
test
shrb
push
inc
cmp
push
jbe
shlb
jo
mov
adc
and
in
repnz
adc
lret
xor
push
aam
test
bound
int3
loopne
cmp
je
call
sub
mov
or
push
push
and
call
inc
xor
call
and
add
or
daa
mov
enter
test
es
fs
ficoml
adc
lcall
aam
sub
mov
add
clc
add
sbb
sub
andl
pop
ficoms
hlt
push
stos
xchg
push
rolb
cwtl
or
outsb
leave
test
add
pop
add
cmp
je
adc
add
or
jbe
and
add
xor
mov
rclb
ret
xor
fisubrs
pop
sub
adc
movsb
xchg
lcall
loopne
inc
mov
cmp
sbb
and
rolb
pusha
cmpsb
xchg
inc
xor
or
xor
sbb
movsb
sbb
mov
sbb
jnp
xor
mov
imul
sbb
in
dec
in
lret
sti
sbb
xor
loope
sub
repnz
shlb
push
jo
mov
inc
jp
call
test
ret
mov
adc
mov
mov
jp
movsb
pop
fs
mov
or
ss
mov
push
add
cli
sbb
nop
int3
inc
jp
jp
xlat
pop
shlb
repnz
sbb
sbb
or
push
dec
jb
and
rolb
cltd
pop
add
add
sbb
inc
gs
test
inc
cmpsb
dec
movsb
sbb
jp
call
xor
cmpsb
decb
and
mov
sub
loop
cmp
cmp
and
cs
mov
popf
dec
dec
add
adc
enter
adc
ret
js
pop
scas
push
mov
call
mov
push
xchg
add
push
adc
inc
push
pop
xor
call
and
push
adc
popf
ror
insb
xchg
push
or
cmp
rolb
xchg
rolb
dec
daa
pop
js
sbb
insb
ljmp
mov
inc
sbb
xor
xor
rolb
data16
pop
or
sbb
push
sbb
dec
and
leave
es
sbbb
les
xlat
data16
ret
inc
es
dec
pop
push
pusha
and
clc
mov
add
popa
add
dec
push
ss
mov
xchg
call
dec
call
cmp
fs
add
mov
sbb
data16
ss
cwtl
sti
push
in
or
push
and
je
pop
adc
test
sbbb
xchg
ds
addr16
leave
and
sbb
cmc
mov
mov
dec
push
cli
bound
dec
insl
popa
inc
lcall
into
mov
movsl
xchg
xchg
lock
rclb
adc
fcoml
dec
mov
in
inc
inc
push
push
mov
xor
pushf
add
xorl
sti
imul
xor
xchg
or
lret
in
in
push
rolb
into
adc
les
ror
mov
test
and
outsb
jno
adc
mov
inc
or
cmpsb
sti
and
arpl
xchg
nop
scas
xchg
fs
mov
jo
adc
pop
sbb
das
arpl
pop
sub
shr
sbb
push
push
push
outsb
fs
in
outsb
lods
imul
mov
sub
push
xchg
mov
push
push
sbb
pop
das
sbb
dec
mov
in
ds
dec
add
es
cwtl
roll
in
lret
aam
xor
ret
and
lock
xchg
adc
dec
cld
out
je
xor
and
push
enter
dec
or
ds
add
lods
inc
or
push
lods
test
in
adc
inc
leave
and
je
insb
sub
xor
dec
out
jmp
mov
rcrb
push
clc
iret
mov
inc
and
adc
cwtl
mov
pop
pop
les
jl
xor
mov
les
xor
adc
sbb
push
leave
inc
push
pop
push
sub
inc
xchg
pop
xor
add
daa
movsb
jo
in
mov
xchg
pushf
push
lret
sbb
fmull
inc
cltd
adc
push
cld
ret
xor
inc
aam
test
mov
mov
js
sahf
or
mov
or
lock
in
adc
inc
mov
mov
adc
and
test
ret
inc
xor
xchg
push
adc
repnz
int3
test
jecxz
inc
aaa
es
cmpb
or
ss
push
loop
sbb
cmpsb
xor
ss
mov
repnz
mov
dec
gs
lret
lods
add
inc
lret
and
rorl
cmp
add
inc
in
cmp
xchg
push
repnz
add
and
dec
or
sahf
cwtl
mov
jo
subb
cltd
pop
or
mov
push
lea
or
cli
cmp
lods
or
test
add
loopne
notb
add
pop
push
rcrl
cmp
push
daa
xchg
push
xor
inc
add
into
xchg
dec
adc
cwtl
or
ljmp
dec
call
sub
mov
add
pop
adc
enter
add
adc
mov
inc
int3
or
adcl
xor
and
js
xorb
mulb
test
pop
dec
mov
data16
mov
and
sbb
inc
call
test
into
addl
sub
xor
xor
jo
jo
pop
int3
mov
push
sub
and
or
mov
dec
or
xchg
adc
add
addb
js
mov
leave
mov
inc
push
cli
xor
addb
pop
jo
or
cmp
dec
data16
or
xor
mov
and
pop
gs
pusha
sbb
cli
xchg
add
in
stos
ret
mov
mov
shlb
loopne
xchg
inc
jmp
test
dec
sahf
xor
push
lret
jmp
or
and
mov
es
push
mov
leave
jb
pop
mov
sbb
push
push
inc
mov
loope
ljmp
fadds
mov
adc
fisubrs
mov
and
xor
pop
add
cmp
xchg
fdivl
aam
aaa
mov
mov
iret
push
repnz
or
xor
add
and
lcall
les
jecxz
rorb
loop
in
shrb
and
rolb
das
ljmp
test
arpl
mov
inc
mov
dec
inc
sub
rolb
or
fiaddl
add
add
jecxz
leave
cwtl
jo
fadds
rcrb
pop
and
ficompl
loopne
fs
pop
lock
pop
sbb
fiaddl
sbb
ds
and
mov
pop
sbb
lret
mov
adc
stos
dec
popf
xchg
sbb
dec
test
fs
les
push
lock
in
adc
ret
stos
cli
push
lret
or
or
add
pusha
test
sbbb
or
test
jmp
in
inc
lds
sbb
and
sbb
push
adc
jp
mov
xchg
mov
and
dec
pop
sbb
int3
xchg
jno
adc
mov
jb
dec
push
inc
out
dec
add
in
enter
into
sub
inc
push
ret
mov
sar
xor
mov
and
sahf
cmp
cmp
xor
sahf
mov
dec
or
push
call
inc
or
ljmp
adcb
push
push
and
pop
dec
hlt
pop
push
out
or
sub
xor
sahf
adc
je
add
pushf
or
dec
addb
or
adc
fsubr
dec
or
sbb
inc
mov
inc
mov
ret
cwtl
bound
decb
pushf
sub
dec
shll
pop
lock
mov
inc
mov
or
mov
leave
mov
sub
xchg
xchg
sbb
bound
and
and
mov
lret
dec
popa
push
inc
sbb
aam
pop
and
and
data16
mov
inc
dec
mov
add
xchg
xchg
or
shlb
mov
clc
xchg
sub
add
pop
pop
dec
xor
xchg
inc
andb
adc
jbe
mov
cmp
pushf
nop
lcall
inc
into
xor
and
or
in
pusha
sbbb
lcall
ret
jo
cwtl
js
mov
jmp
xor
push
push
or
loopne
loop
inc
add
cmpsb
add
adc
lret
sbb
cmpsb
lcall
mov
lods
inc
out
jbe
dec
and
add
xchg
mul
mov
xor
test
in
push
test
jp
inc
ret
pop
aam
xor
and
aas
sub
lds
leave
daa
push
outsb
popa
push
sub
xor
push
mov
dec
pop
inc
les
pusha
inc
mov
push
js
sbb
cwtl
mov
mov
mov
dec
mov
adc
adc
add
xchg
or
dec
inc
xor
sub
cltd
in
lods
mov
and
and
jb
add
aaa
add
push
stos
jae
rcl
mov
orl
loope
xchg
pop
sub
ss
addl
add
movsb
sub
outsb
rclb
adc
push
xchg
and
jo
inc
sbb
fs
out
in
or
int3
cld
andb
pushf
es
aam
lcall
ret
sbb
shrl
es
and
bound
or
cmp
inc
pushf
das
add
and
jbe
or
lcall
mov
and
or
inc
and
movsl
push
out
fsubs
cltd
movsb
and
clc
adc
inc
and
inc
push
cmp
test
xor
mov
push
push
xchg
movsb
pushaw
jo
or
cmp
dec
or
dec
insl
mov
sbbl
adc
push
sbb
cmp
jl
mov
pop
sbb
mov
xor
call
push
mov
add
sub
add
les
add
cs
sbb
xchg
xorb
std
or
jne
into
test
inc
sbb
lret
addb
push
pop
popa
add
sub
mov
inc
scas
jl
nop
push
cmpsl
pusha
adc
out
lret
xchg
dec
aam
add
inc
lods
sbb
lcall
mov
or
cwtl
cltd
xor
add
testl
lcall
into
adc
es
xchg
lret
add
jp
jb
push
add
cmpb
pop
xchg
shll
push
jbe
jne
mov
lods
cwtl
mov
test
es
pop
and
sbb
pop
and
mov
push
add
adc
mov
outsb
mov
in
or
mov
jle
call
adc
or
int3
mov
cmp
ret
dec
pushf
add
and
pop
add
sbb
mov
mov
or
mov
push
sbb
mov
lock
mov
jo
popf
imul
sub
dec
pop
or
js
jb
das
inc
push
dec
into
or
movsl
adc
mov
testb
aad
fs
inc
leave
loope
and
add
dec
push
push
xor
and
mov
push
push
bound
enter
mov
mov
mov
test
push
pop
into
inc
iret
xchg
push
sbb
add
int3
mov
xchg
or
sti
into
test
and
xchg
mov
xlat
dec
xchg
loopne
in
je
push
push
mov
mov
xor
decb
push
dec
adc
mov
push
or
rclb
xor
or
add
add
sbb
sub
mov
push
bound
jl
es
xchg
xor
andw
cld
xor
dec
dec
sbb
shlb
roll
movsb
mov
and
cmp
pop
and
movsb
scas
enter
jae
sub
imul
es
popa
xor
add
mov
out
into
push
jno
push
xchg
in
xchg
dec
xor
pand
ret
leave
loop
rcrb
xchg
or
cltd
lret
lods
mov
dec
es
inc
adc
clc
sub
sub
sahf
cmpsb
sub
mov
inc
cmp
mov
pop
inc
test
xor
xchg
xchg
loopne
xchg
push
sbbl
pop
xorl
test
bound
inc
xor
mov
and
cmp
sub
push
and
inc
inc
fcomps
inc
es
loope
add
add
clc
and
lods
xor
cmp
or
out
add
xchg
ret
pushf
ret
add
sbb
add
aaa
and
mov
xor
ret
or
popa
and
orl
nop
cmp
dec
pop
xchg
insb
shlb
mov
push
call
add
and
sub
nop
lock
and
aam
lret
jl
inc
mov
inc
cwtl
test
pop
adc
or
mov
test
mov
test
inc
fistps
pop
mov
push
dec
test
inc
pop
jo
sbb
arpl
sbb
mov
adc
es
mov
pusha
mov
test
mov
sub
pop
enter
loopne
fsubrl
inc
dec
add
push
jbe
enter
xor
add
lock
outsl
adc
lret
cwtl
xor
add
xor
xchg
xchg
and
and
xor
lcall
mov
cmp
cmp
cmp
mov
dec
inc
andl
push
push
adc
mov
and
add
loope
sbb
es
xor
add
push
dec
cmp
xchg
jo
or
outsl
pop
mov
cmpsb
sbb
enter
mov
or
test
cld
in
or
inc
mov
into
or
stos
or
and
xchg
and
mov
sub
pusha
push
sub
mov
jb
enter
test
into
or
add
and
add
sbb
inc
push
push
xchg
add
jg
sub
cltd
push
hlt
mov
mov
sbb
xor
sub
xchg
add
xchg
es
push
inc
xor
xchg
jo
or
add
ret
test
aam
xor
pusha
jl
adc
and
gs
mov
add
mov
orb
ret
push
and
jo
xchg
sar
es
mov
mov
dec
cmp
push
inc
and
xchg
add
and
test
pop
test
stos
outsb
add
decl
in
mov
xlat
loopne
xor
sbb
adc
pusha
cwtl
mov
or
nop
jno
push
jb
jb
inc
mov
sbb
cmp
inc
or
cmpb
sub
add
or
shlb
dec
push
mov
movl
dec
push
xor
and
cmp
rcr
mov
ret
push
xchg
les
lods
push
clc
sbb
movsb
mov
imul
dec
sub
in
push
mov
xchg
or
sub
scas
rolb
push
add
dec
and
dec
mov
inc
dec
or
insl
sbb
loopne
inc
outsb
jmp
dec
idivb
push
nop
xor
or
xor
out
add
xorb
push
xor
adcb
enter
enter
or
imul
add
push
inc
sarb
movups
add
je
lret
mov
dec
xor
dec
cmpsb
mov
adc
lret
xor
add
pop
pop
test
ss
pop
or
mov
mov
in
mov
mov
lock
fistl
mov
adc
test
push
es
pushf
sub
shlb
imul
fsubl
sbb
cmp
stos
mov
mov
sti
fdivl
add
insb
cmpsb
subb
into
jp
dec
dec
add
add
push
movsl
aam
jbe
jl
test
or
cltd
xor
sbb
jle
xor
jo
andb
mov
test
sbb
fsubl
push
in
mov
add
mov
mov
in
call
mov
inc
mov
fdivp
add
inc
jbe
std
je
inc
addb
es
push
repnz
int3
add
jb
xor
pop
push
sub
inc
test
inc
xorb
nop
jo
in
mov
xchg
or
subl
movsb
ss
jmp
sbb
insb
mov
addb
jbe
or
leave
inc
sarb
sbb
test
inc
push
cmp
xor
pop
rcll
rolb
pusha
cwtl
or
mov
sub
fld
repnz
push
inc
add
lret
pusha
sbb
ss
rol
in
test
add
push
sub
subl
cltd
add
add
and
cs
movsb
or
les
daa
jno
mov
cli
dec
ljmp
add
nop
mov
mov
add
push
sbb
pusha
and
add
push
dec
ss
sbb
daa
sbb
xor
mov
cmp
sbb
pushf
loopne
inc
les
add
mov
add
sub
leave
fcomps
push
sbb
enter
mov
adc
imul
in
mov
fdivs
mov
shlb
add
adc
lods
sub
dec
sbb
and
adc
insb
dec
mov
mov
xor
add
xchg
push
push
mov
sbb
push
into
adc
je
dec
add
mov
movsb
xchg
add
dec
rclb
adcl
and
adc
mov
cmp
orb
and
jecxz
xchg
cmp
pop
mov
loop
mov
test
bound
pusha
inc
pop
mov
jb
cs
testb
cmp
or
pushf
mov
inc
imul
adc
clc
mov
mov
sub
loop
dec
popa
xor
and
cld
sub
add
dec
sbb
xchg
out
mov
push
addb
call
cmp
hlt
sub
mov
push
mov
es
jmp
bound
insb
ret
test
test
fiadds
jo
shlb
sub
inc
inc
push
inc
lea
dec
jp
cmp
xchg
adc
adcb
sbb
insb
sbb
cmp
cltd
jae
cmp
fadds
push
mov
sti
push
add
xor
mov
loopne
or
jb
add
pop
push
lea
ljmp
adc
clc
and
or
pop
gs
cs
js
push
and
mov
test
mov
dec
xor
add
jo
sbb
xchg
push
cltd
dec
call
mov
dec
imul
insb
nop
sub
cmp
mov
or
cmp
sbb
xchg
call
mov
rolb
int3
mov
xor
cmp
push
fs
adcb
out
mov
jp
js
shlb
jo
cmpl
loop
arpl
mov
roll
add
cmp
mov
call
movsb
add
dec
or
sub
stos
xchg
add
adc
adc
xchg
or
outsl
sarl
sbb
add
push
call
adc
mov
mov
mov
bound
enter
add
ret
lods
adc
jo
adc
push
lods
cmp
and
ret
push
sbb
mov
xchg
inc
cmp
xchg
inc
add
rolb
xchg
or
ficomps
lea
sbb
pop
aam
xchg
lock
rorb
cmc
adc
fsubr
insb
popf
rclb
jl
cmp
or
outsl
ret
or
inc
loopne
jle
or
and
cmpsb
rolb
loopne
adc
inc
and
cltd
sbb
sbb
mov
test
pusha
cmpsb
loopne
or
sahf
add
dec
jbe
lock
pop
inc
test
dec
out
std
das
enter
cld
inc
gs
or
popa
push
xor
mov
sub
iret
jo
sbb
leave
bound
dec
inc
xchg
pop
push
mov
movsl
xchg
add
dec
mov
and
mov
mov
popa
data16
out
out
xor
inc
outsb
cmpb
mov
lea
je
lea
inc
aaa
sub
mov
push
mov
xor
clc
push
xchg
jecxz
rorb
cmp
push
mov
loop
jo
jno
call
dec
xor
pusha
les
adc
adc
imulb
mov
and
fisubl
fistpl
shlb
add
loopne
fimuls
mov
xor
mov
dec
xor
sahf
test
or
mov
cmp
nop
pop
cmp
loopne
xor
add
das
jp
pop
dec
addb
xchg
add
push
and
push
add
inc
mov
pop
or
sub
jo
add
cwtl
sub
popa
add
inc
mov
jno
inc
jp
push
scas
insb
lret
xchg
fdivl
int3
adc
jo
xor
push
adc
push
addr16
imul
add
dec
mov
xchg
es
add
ss
sub
xor
lea
push
or
adc
ljmp
lods
rclb
adc
cld
mov
adc
dec
fs
cli
and
add
fmuls
loope
mov
push
lds
adc
xor
sub
and
and
sbb
sbb
pop
or
insb
sbb
leave
mov
mov
std
adc
sub
adc
mov
lea
mov
into
push
xchg
xor
test
xor
xchg
adc
push
adc
dec
mulb
add
adc
add
xchg
js
or
clc
ret
xor
cmp
xchg
mov
mov
inc
dec
fiadds
mov
or
daa
mov
in
mov
mov
add
add
mov
data16
test
ljmp
outsb
xor
mov
sbb
lcall
dec
insb
adc
dec
cmp
decb
inc
into
lods
cmp
sub
mov
leave
mul
mov
dec
dec
lret
lods
pop
adcb
lret
push
sub
xchg
and
adc
or
fsub
inc
cs
pop
js
pop
xor
pop
data16
loopne
in
or
leave
int3
push
bnd
xchg
dec
fcomps
pop
xor
mov
rolb
fs
rclb
dec
push
pop
xchg
mov
inc
mov
dec
jo
data16
mov
pushf
xchg
push
repnz
cmp
scas
sbb
push
push
or
mov
mov
sub
dec
or
sub
jp
subl
add
popa
pusha
pop
pop
mov
dec
sub
test
xor
inc
sbb
inc
and
mov
in
es
ret
mov
jecxz
mov
pusha
cmp
sub
pushf
jle
ljmp
insb
or
or
orb
and
in
int3
nop
dec
data16
dec
or
shrb
xchg
sbb
cmp
push
or
pushf
aam
mov
add
stos
cmp
cltd
push
sub
jb
dec
cmc
xchg
cli
push
sub
enter
sbb
pop
fdivl
ret
adc
xchg
mov
ret
or
push
mov
push
xchg
xor
ljmp
xchg
or
push
jo
mov
mov
test
xchg
sbb
mov
dec
sub
add
mov
or
dec
pop
lret
or
ljmp
mov
and
test
push
mov
and
push
push
xchg
or
jbe
push
mov
push
and
pop
adc
rorl
adc
sub
out
out
cmp
call
mov
xor
inc
fs
movl
cltd
and
sub
cli
subb
insb
loopne
cwtl
or
push
test
xchg
inc
inc
adc
lds
sub
xchg
push
add
int3
mov
mov
inc
sub
jb
jo
inc
scas
dec
inc
dec
xchg
lods
pop
xor
inc
movsl
sub
dec
idiv
dec
mov
gs
loop
add
mov
add
fdivs
mov
or
xor
int3
mov
loope
or
dec
sub
mov
test
push
dec
call
mov
pop
int3
sub
rorb
mov
loopne
repnz
sahf
rolb
push
int3
inc
ret
popa
and
push
xchg
push
push
cwtl
or
mov
rcrb
add
adcb
add
ret
addb
jmp
std
enter
adc
stos
push
jo
js
in
nop
ret
push
sbbb
sub
mov
adc
pusha
push
lcall
add
sbb
jo
jle
inc
bound
or
cli
icebp
and
jl
in
sub
push
adc
xchg
dec
sbb
roll
cmpsb
bnd
inc
adc
push
push
mov
xor
addl
mov
sub
rol
cmpsb
fistpll
or
ret
repnz
add
push
sahf
xchg
rorb
jl
dec
xor
push
dec
and
loop
inc
sbb
fsubrp
insl
mov
push
jb
dec
roll
lret
inc
rcrb
mov
push
sbb
into
push
bound
enter
test
push
pop
adc
clc
cmp
andb
ljmp
push
push
shrb
rcll
pusha
xchg
or
addl
push
push
arpl
rclb
fs
mov
adcb
mov
add
cmp
shr
ljmp
xor
shlb
xor
and
sbbb
mov
rclb
or
pop
pop
rolb
mov
push
dec
inc
insb
pop
cwtl
jne
push
add
and
out
adc
dec
push
leave
xor
push
or
inc
ljmp
mov
cmp
jp
cmp
dec
mov
and
jg
pusha
adc
sbb
ds
dec
pop
dec
mov
adc
mov
cmp
test
insb
push
ljmp
and
enter
xchg
test
fwait
bound
jmp
dec
and
movsb
adc
xor
inc
or
sub
ljmp
loop
cmp
punpckldq
push
add
push
scas
mov
xor
mov
push
push
xchg
dec
dec
test
xchg
xorb
dec
test
push
push
dec
xchg
cmp
adc
in
xchg
sbb
pop
add
push
cld
adc
ret
incb
fcoml
loope
mov
or
cld
mov
addb
insb
push
xchg
out
add
rcrb
mov
pop
xor
pop
push
or
and
xchg
mov
leave
jo
cwtd
xorl
add
in
test
js
into
ret
inc
cli
sub
adc
bound
xor
mov
rolb
adc
ret
stos
out
adc
mov
outsb
ljmp
push
jbe
sbb
xchg
mov
xchg
xor
xchg
dec
add
adc
add
sub
mov
dec
js
adcl
rolb
fdivl
sti
sub
sbbb
sub
sub
sub
sahf
xor
jle
add
add
sbb
add
repnz
mov
ret
dec
cltd
or
adc
leave
orb
inc
inc
jmp
or
outsb
mov
inc
in
repnz
and
es
sbb
lret
or
test
stos
hlt
adc
mov
loope
jb
dec
dec
and
and
mov
leave
sub
push
inc
js
ret
push
mov
loopne
in
inc
test
sbb
movsb
push
test
adc
or
mov
and
movsb
or
mov
in
jecxz
pop
pop
push
dec
or
enter
sbb
aam
adc
imul
mov
add
xor
cmp
add
add
mov
cmpsb
cmp
xor
and
mov
call
arpl
cmp
dec
pop
aam
pop
clc
push
and
adc
test
mov
in
data16
mov
cmpsb
les
inc
adc
or
loopne
sbb
jb
push
add
cmp
ljmp
lds
add
adc
add
push
adc
xchg
adc
xor
push
sbb
lret
data16
inc
sbb
sbb
aam
test
inc
call
stos
loop
and
add
insb
mov
xor
dec
ss
push
ret
push
lds
in
in
rclb
xchg
mov
cwtl
nop
pop
xchg
sub
setns
sbb
xchg
and
mov
fildl
mov
hlt
addb
push
call
sbb
ds
lret
movsl
jo
orb
or
push
in
or
pop
les
insb
adc
mov
pop
and
sub
push
inc
int3
inc
sbb
insb
sbb
popa
dec
lods
bound
movsl
and
inc
orb
xchg
jmp
sbb
pushf
adc
pop
dec
dec
adc
and
or
push
mov
or
bound
dec
adc
xchg
fmull
push
xor
pop
cmp
push
add
pop
lock
jo
imul
or
inc
dec
nop
stos
int3
in
jno
fs
js
dec
push
inc
test
or
push
adc
dec
inc
or
jb
inc
dec
ficomps
mulb
cmp
pop
mov
mov
mov
in
push
xchg
inc
imul
dec
adc
ret
sbb
push
mov
cmp
test
or
add
test
mov
push
pop
sti
rcrb
and
dec
sbb
jb
fadds
orb
jecxz
jno
sub
data16
mov
imul
adcb
es
or
mov
add
mov
and
ror
in
mov
mov
add
ss
pusha
push
scas
pushf
loop
sbb
inc
push
xchg
xchg
addb
movb
je
xor
in
sbb
cld
mov
loopne
push
and
mov
xchg
mov
pop
jno
rolb
iret
mov
es
test
xor
pusha
and
rolb
xchg
push
pop
add
into
mov
pop
je
xchg
ret
sub
sub
into
sbb
adc
push
add
mov
pop
call
jo
bound
xchg
sub
adc
adc
cwtl
add
mov
dec
mov
sub
fiaddl
mov
add
jnp
adc
jb
mov
popa
adc
imul
adc
mov
pop
sbb
or
in
push
or
xchg
ljmp
sbb
in
shll
addb
adc
sbb
cmpsb
pop
push
sub
in
int3
and
lret
pusha
les
imul
mov
ret
inc
cmp
popa
xor
dec
ret
dec
xchg
test
ret
outsb
pushf
stos
cwtl
xor
js
fs
or
mov
sbb
mov
mov
dec
inc
jo
add
rcrb
xchg
cli
jb
jl
or
inc
nop
lcall
xchg
ds
std
mov
out
mov
sub
or
inc
repnz
ljmp
dec
or
push
insb
cli
inc
adc
add
in
jecxz
rorb
mov
xchg
lret
mov
or
or
or
adc
repnz
xor
push
movsl
mov
into
fcoms
hlt
dec
sbb
push
sbb
cmpsb
push
xchg
ret
aam
shll
hlt
rclb
dec
cmp
cs
repnz
lods
dec
sub
dec
shlb
xor
mov
sub
and
fs
jecxz
xor
adc
loopne
les
inc
pusha
add
sub
rol
sub
or
shr
pop
pop
push
enter
mov
jnp
aam
lock
pop
adc
xchg
mov
jg
pop
cwtl
sbb
xor
test
xor
push
hlt
sub
test
stos
xor
xor
xchg
push
pop
js
in
add
xor
push
out
xor
jbe
adc
insb
cmp
jle
or
xorb
mov
cmp
jbe
popa
mov
jb
adc
push
es
and
call
aam
xlat
loope
adc
xor
adcb
xor
inc
insb
adc
xor
mov
mulb
cwtl
mov
xchg
and
pop
cmpsb
xor
or
xchg
cmp
push
insb
mov
xor
orl
push
and
adc
dec
or
jo,pn
andb
out
mov
xor
cmp
and
orb
mov
inc
insl
fadds
mov
and
cmp
adc
nop
mov
add
sub
sub
hlt
add
pusha
mov
or
aam
xor
add
and
sbb
sub
cmp
sbbl
mov
xchg
ljmp
inc
dec
or
mov
and
enter
cmp
xchg
adc
sub
data16
cmp
jbe
popa
xor
mov
scas
xor
push
and
push
add
fcom
in
inc
and
adcb
rolb
int3
rcrb
loop
sub
js
lds
adc
dec
mov
enter
lds
shr
xchg
jecxz
and
sbb
add
mov
adc
push
ret
dec
mov
call
test
inc
pop
je
stos
test
inc
in
lcall
mov
push
dec
inc
test
pop
cwtl
daa
aas
hlt
xlat
pop
adc
push
dec
mov
mov
lret
mov
les
add
or
push
xchg
pop
loope
pop
push
jecxz
fs
std
dec
ret
and
orb
adc
jbe
add
xchg
xor
test
adc
sbb
xchg
inc
sub
or
push
bound
mov
pop
sbb
data16
nop
push
push
mov
lcall
mov
out
sub
push
dec
and
inc
ret
in
add
bound
inc
jecxz
rclb
mov
fidivrs
add
mov
mov
or
les
push
push
xchg
push
and
sub
add
sub
sub
mov
push
jb
push
sub
push
loopne
fwait
ret
jno
mov
inc
loopne
enter
or
push
push
sub
int3
adc
mov
rcrb
sbbb
sbb
dec
and
lods
add
or
enter
push
test
add
or
and
pop
mov
add
or
push
add
ret
ret
les
add
sbb
sbb
jp
lret
pop
in
inc
cmpsb
and
dec
mov
xor
mov
rorb
inc
dec
add
xor
idivb
mov
lcall
mov
shrl
clc
push
ljmp
sbb
les
mov
mov
sbb
addl
fimull
mov
and
sbb
push
pusha
sub
int3
fsubrl
dec
pusha
loopne
pushf
xor
lea
es
mov
mov
add
push
xchg
pop
mov
imul
adcb
sbb
add
jo
add
jnp
xchg
shrb
xchg
cmp
or
shll
push
xor
or
xchg
pop
imul
or
or
sub
add
and
xchg
js
dec
das
lret
in
jb
inc
dec
je
dec
pusha
mov
add
push
push
fdiv
scas
pop
mov
push
jbe
test
push
push
leave
sbb
adc
push
sub
lods
mov
add
push
movsl
sub
dec
or
aas
inc
and
sbb
in
gs
sub
cltd
lret
sbb
dec
add
adc
ret
jle
mov
pop
push
and
fs
sbb
xchg
or
xor
js
dec
or
loop
xchg
pusha
dec
mov
push
jb
dec
movsb
insb
sub
jl
sbb
pushf
adc
rcrl
mov
pop
sub
add
mov
and
jbe
adc
and
test
repnz
push
xchg
sbb
pop
rcrb
cmpsb
bound
out
pop
pop
dec
mov
es
inc
hlt
movb
push
cmp
jne
push
add
adc
enter
cmpsl
xor
xchg
push
jp
enter
pusha
xor
dec
push
add
xor
xchg
sahf
test
jbe
iret
rcrl
loopne
das
dec
vpaddsb
mov
test
xchg
cmp
pop
test
inc
pusha
pop
inc
fcomps
inc
mov
loope
xchg
push
shlb
movups
loope
or
sub
inc
add
and
xor
pop
cwtl
push
out
bound
pop
aam
hlt
lcall
and
cwtl
adc
adc
sub
ljmp
inc
fs
es
xchg
inc
mov
jge
data16
or
add
int3
aam
mov
rolb
mov
or
subb
movb
jmp
shrb
lret
nop
pop
shlb
xor
int3
sbb
adc
ds
add
adc
je
aam
push
bound
add
pop
dec
lcall
rorl
push
mov
pop
xchg
adc
inc
inc
mov
je
and
push
mov
cmp
xchg
cld
fsubrl
cmp
cmpsb
pop
push
ret
daa
sub
lret
int3
jp
sbb
xchg
sahf
push
and
popa
pop
shrl
repnz
test
inc
jbe
bound
rorl
push
nop
pop
adc
push
fisubl
js
sti
dec
inc
out
int3
int3
lock
cmp
sub
and
shlb
pusha
test
and
ljmp
or
inc
push
xchg
rcr
inc
mov
xor
pop
mov
lcall
mov
cmpb
mov
push
or
icebp
mov
rcl
mov
loop
divb
push
pop
dec
inc
shlb
ret
and
mov
out
sahf
fs
ljmp
push
and
loope
mov
sub
or
xor
mov
add
popa
pusha
cwtl
xor
push
testb
sbb
xor
and
xor
fsubs
sbb
insb
inc
push
mov
push
shll
enter
fisubrl
mov
cmp
mov
and
mov
inc
std
test
jo
dec
sbb
mov
or
sbb
mov
jb
xchg
movsb
xor
xchg
hlt
mov
ret
out
in
sbb
stos
add
test
adc
in
and
rolb
callw
and
sub
push
xchg
sbb
es
add
mov
repnz
inc
jbe
mov
xchg
iret
call
pop
xor
test
int3
xchg
xchg
orb
xor
inc
dec
push
sub
in
cmpsb
adcb
adc
shrb
stos
pusha
or
and
outsb
fiadds
or
sub
int3
push
xchg
pusha
jno
pop
rolb
xchg
adc
popa
sbbb
sbb
dec
int3
adc
mov
adc
xchg
adcb
subb
dec
callw
in
mov
add
or
loop
cmp
lret
sbb
mov
push
jecxz
mov
movsb
les
in
call
jo
clc
or
adc
leave
das
sub
leave
scas
call
adcb
jbe
je
push
daa
pop
xor
shlb
jp
movsl
jno
dec
lods
add
mov
sahf
push
bound
xchg
lcall
pusha
sbb
cmp
rcr
add
ret
dec
xor
rcrb
es
sbb
cwtl
scas
movsb
push
adc
and
and
inc
xchg
push
test
mov
lea
dec
outsb
dec
ljmp
add
xor
mov
or
mov
or
xchg
insb
and
mov
and
inc
jl
sbb
scas
movsl
js
cwtl
ret
and
add
add
je
xor
aam
xor
rcrb
xor
bound
add
ss
dec
or
sub
aad
add
xor
add
jne
or
and
or
sbb
inc
jl,pn
push
and
divb
loope
push
ljmpw
push
sub
xor
and
and
imul
and
inc
test
ret
push
enter
xor
xor
push
inc
dec
leave
repnz
push
ret
loopne
pop
add
test
cmp
inc
rcl
dec
loopne
mov
push
mov
add
dec
sbb
mov
test
add
adc
incb
cmpsb
pushf
adcb
fs
imul
js
push
sbb
sub
loopne
sub
and
faddl
dec
cwtl
mov
xchg
and
dec
inc
push
cmp
add
fisubrl
bswap
popa
sub
inc
add
inc
adc
and
faddl
bound
test
cmp
pushf
xchg
adc
mov
nop
out
jbe
shlb
pusha
ljmp
mov
je
rolb
ljmp
sub
cli
mov
cmp
lea
repz
xor
xor
stos
fbld
test
fsub
and
sbb
fs
shlb
sbb
sarl
push
cwtl
loopne
out
mov
adcb
scas
mov
add
inc
je
enter
clc
out
push
xor
mov
cmp
or
inc
add
or
fwait
test
push
pusha
push
xchg
push
xor
and
cs
mov
mov
or
leave
into
into
jl
mov
inc
add
jle
push
mov
fmuls
es
and
xchg
aam
xchg
rcrl
pop
xor
test
sub
adc
dec
mov
mov
add
inc
je
inc
and
or
inc
xchg
push
add
test
mov
cmpb
xor
iret
nop
add
inc
sbb
lea
sub
loopne
pop
test
in
rclb
int3
xor
xchg
hlt
fildll
fiaddl
cwtl
inc
movsb
mov
add
fs
ror
and
or
inc
sub
add
sbb
dec
jb
sbbb
cmpsb
iret
mov
push
rolb
pop
adc
xchg
mov
std
xor
mov
lock
movsb
adc
inc
stos
jb
or
ss
push
xchg
mov
sbb
lret
and
test
xor
push
and
dec
jle
movsb
adc
mov
and
aad
cltd
xor
inc
pop
cmp
adc
sbb
push
jb
xor
ds
and
hlt
sub
dec
sub
adc
insl
or
dec
es
add
loopne
ret
std
call
sub
push
jp
test
fildl
int3
mov
xchg
cltd
lods
xchg
loopne
xchg
dec
pusha
jo
pop
add
add
xchg
jno
adc
inc
cwtl
pop
inc
inc
adc
dec
or
sub
ret
or
rorb
sub
adc
loopne
stos
movsb
aaa
dec
cmp
test
jl
cltd
test
dec
push
es
lret
mov
loopne
jne
shlb
inc
cmp
pusha
in
sbb
scas
or
mov
clc
bound
inc
cs
xchg
arpl
mov
inc
cltd
inc
lock
sub
or
xchg
lods
mov
or
mov
pop
shrb
fcoml
imul
and
clc
pushf
cltd
mov
or
dec
cltd
sahf
mov
inc
or
push
es
dec
shll
add
shll
add
or
cwtl
add
jo
push
cli
test
outsb
ljmp
or
stos
sbb
jmp
add
mov
xor
test
test
in
ror
xor
xchg
mov
sbb
stos
inc
into
inc
outsl
or
push
push
jb
add
inc
or
sbb
rcrb
push
mov
aaa
aam
push
sbb
jbe
mov
lods
pop
insb
dec
leave
xchg
add
je
ret
fimuls
enter
push
or
jle
or
and
sub
iret
inc
inc
mov
adcb
cmpb
push
sub
mov
xor
and
movb
sahf
dec
add
adc
test
inc
insl
or
sub
insb
ss
push
dec
pop
sbb
push
fidivl
mov
sbb
pop
inc
dec
inc
sbbb
ret
push
push
dec
inc
or
and
lea
mov
movsb
and
and
sub
shlb
or
pop
xchg
enter
cmp
or
mov
bound
or
xor
jl
mov
mov
sbb
mov
inc
inc
bound
inc
adc
cli
push
lcall
sub
dec
je
popa
adc
nop
enter
xor
sub
scas
sahf
and
shr
loop
mov
lock
nop
movsl
xchg
and
xchg
cli
nop
dec
adc
xchg
push
ds
add
clc
outsb
and
and
cmp
mov
push
sub
or
inc
ljmp
in
mov
and
sub
xchg
inc
push
cwtl
jbe
nop
xchg
push
mov
adc
lret
mov
loopne
inc
fadd
fs
and
xor
mov
inc
xor
in
xchg
adc
inc
mov
or
push
mov
lret
nop
pop
push
je
and
dec
pop
sahf
leave
or
dec
jb
and
addl
jb
enter
rclb
mov
test
xor
mov
inc
add
add
mov
xor
jae
push
jb
ret
pop
test
xchg
sub
adc
xchg
les
nop
xchg
xor
dec
dec
fsubl
or
or
cli
mov
les
sub
cmp
mov
xchg
aam
pop
sbb
or
or
dec
mov
ret
inc
shrb
outsb
push
add
adc
xchg
sbb
or
xor
faddl
aam
call
mov
cmpl
test
sub
pusha
cmp
ficompl
inc
add
gs
or
sbb
test
lods
cmp
int3
xchg
adc
pusha
pusha
dec
adc
ds
pop
outsb
push
and
int3
adc
ret
test
push
adc
call
insb
push
add
fcom
insl
mov
testb
shll
orl
mov
call
mov
push
shrb
test
inc
sbb
mov
add
and
and
in
ret
xchg
mov
cmp
mov
mov
inc
lods
push
sub
xor
mov
adc
sbb
and
ret
xor
inc
mov
ret
fmul
clc
call
lcall
dec
addb
cltd
adc
and
fdivs
or
and
lret
push
mov
into
dec
pusha
rolb
outsb
mov
xchg
jo
jp
sub
movsb
inc
movsb
add
dec
sbb
and
jbe
or
mov
mov
scas
out
imul
iret
sub
xor
das
pushf
inc
xor
test
jo
sbb
push
jbe
xor
sub
inc
test
or
rol
adc
jne
push
repnz
push
sub
hlt
or
push
rcll
cltd
nop
adc
dec
sbb
pop
jo
push
or
xchg
or
mov
and
shl
cmp
gs
mov
je
mov
incb
pusha
ds
push
inc
or
push
xor
or
inc
je
test
sarb
add
push
sbb
mov
test
sub
adc
mov
icebp
or
mov
pop
inc
cmp
push
xor
and
cmp
dec
xchg
xor
or
xchg
push
inc
test
mov
cmpl
and
xor
cmc
push
dec
sub
inc
movsl
jp
shlb
movsl
test
fiadds
pop
sub
adc
enter
loope
or
mov
fs
add
nop
or
mov
adc
dec
loop
into
sub
shll
or
rolb
add
pop
or
cs
jo
mov
pop
xor
fcomps
test
mov
xor
test
imul
aam
stos
mov
in
mov
mov
xor
and
mov
push
or
test
pusha
js
push
test
add
mov
add
sub
push
cmp
adc
shll
in
jo
add
push
add
or
add
cwtl
ljmp
adc
push
and
sub
test
mov
dec
fcmovbe
mov
jmp
lret
mov
and
cwtl
add
inc
cmp
xchg
add
or
cmp
pusha
nop
inc
sub
xchg
sub
pop
add
sbb
mov
sub
lods
jle
leave
inc
push
test
sar
mov
or
add
and
adc
push
dec
mov
xchg
add
push
sahf
rclb
xor
mov
push
xchg
or
fdivl
xchg
in
rclb
inc
mov
dec
es
shl
mulb
mov
add
mov
test
pop
pop
fdivl
pop
add
enter
and
adc
add
mov
xchg
int3
clc
mov
pop
iret
adcb
mov
cli
xchg
add
sub
sbbl
adc
sbb
mov
test
ss
dec
xor
sbb
sub
xor
loope
fisubrl
ret
and
jbe
cmpsb
xor
sbb
bound
mov
pop
out
sub
add
xchg
adc
xchg
push
xor
movsb
mov
test
repnz
orb
fcom
jp
dec
ret
bound
fldl
adc
add
or
xor
loopne
dec
or
pop
enter
and
push
or
mov
add
or
cmpsb
roll
xor
add
test
xchg
dec
test
nop
xor
lods
xor
xchg
fwait
xor
test
ret
inc
sub
ret
inc
mov
sbb
in
dec
inc
fsubrl
test
rcl
or
sar
dec
mov
pop
mov
sbbb
cmp
insl
cmp
data16
test
and
dec
dec
bound
or
fisubs
or
test
inc
jbe
fmull
nop
sub
and
add
insb
mov
movsl
cmpl
inc
sbb
add
inc
clc
dec
jg
add
push
pop
hlt
cli
or
icebp
sub
rcrb
xchg
dec
lods
cmp
inc
sub
add
test
imulb
add
or
xor
in
mov
rcrb
adc
inc
inc
mov
inc
sub
in
adc
ret
or
sub
int3
cli
sub
xor
int3
test
mov
pop
shrb
lcall
rolb
inc
lea
cmp
shlb
fadd
rcrl
push
inc
cs
nop
movsb
mov
push
adc
push
mov
adc
and
sbb
mov
inc
and
add
pushf
inc
ret
pop
sbb
inc
fs
cmp
xor
cmp
adcb
mov
fcoml
mov
add
push
enter
and
int3
dec
sahf
or
pop
xchg
test
sbb
rclb
scas
adc
jp
scas
push
addb
or
cmp
mov
pop
lcall
out
sub
xor
pusha
inc
push
sbb
push
pop
inc
fisubl
push
xchg
or
push
test
add
adc
xchg
push
cmp
insl
push
sbb
int3
add
xchg
dec
mov
push
cmp
loop
adc
push
nop
or
aam
mov
inc
and
mov
cld
sbb
xchg
arpl
dec
popa
out
hlt
lock
add
icebp
nop
or
inc
jecxz
fimuls
iret
shlb
adc
mov
aam
sti
mov
add
mov
loope
or
pop
cltd
pop
loopne
xor
or
jle
sbb
and
adc
xchg
inc
jbe
add
adc
jb
adc
and
faddl
pop
fiadds
arpl
jp
and
aam
movsl
push
cmpsb
push
mov
xchg
mov
pushw
add
es
add
xor
clc
cwtl
je
femms
hlt
push
or
add
insb
dec
mov
jb
jno
inc
and
pusha
sub
adc
add
mov
test
adc
js
ret
dec
xor
jle
push
lcall
cmp
add
or
test
pop
dec
xchg
push
js
add
push
cmp
jbe
or
mov
inc
xor
addb
enter
loopne
ds
mov
inc
push
adc
adc
aad
js
pop
inc
test
dec
and
pusha
pop
movsl
xor
pop
scas
or
dec
push
les
lds
jo
mov
xchg
or
sti
loop
or
rcrl
pop
lock
ss
pop
call
rcll
pop
fdivs
and
jae
es
adc
std
cli
push
mov
pop
add
or
bound
pop
int3
loope
jle
sbb
or
int3
incb
sbbl
repnz
mov
data16
ljmp
fs
andb
int3
pop
push
push
cmpsb
int
cltd
ret
xor
push
ss
dec
popa
loopne
sub
jb
or
and
pop
xor
cwtl
fimuls
lods
add
into
push
rclb
outsb
clc
and
adc
jb
shrb
adc
cwtl
adc
sbb
dec
cwtl
adc
and
jb
es
and
cmp
outsl
xorl
out
addb
or
jb
inc
pop
fwait
outsb
adc
mov
adcl
adc
pop
loop
mov
sbb
mov
push
pusha
or
es
aam
sub
push
inc
cmpsl
cmp
mov
pusha
vunpcklps
or
sub
mov
push
call
dec
test
pusha
bound
repnz
test
outsb
dec
ds
adc
pop
push
adc
lret
push
mov
insb
nop
movsb
lock
cmp
jo
pusha
jb
loop
add
test
mov
jne
and
int3
push
sbb
xorb
rolb
sub
mov
or
js
sub
fdivs
cltd
push
add
or
mov
add
or
cmp
and
les
cmp
cwtl
push
ficoml
lret
push
stos
add
lds
push
cmp
lods
shrb
push
dec
push
dec
and
cwtl
cwtl
adc
mov
mov
rclb
sbb
pop
call
jb
rorl
inc
cmp
push
call
loop
push
imul
dec
cmp
movsb
cmpsl
mov
xorl
fs
adc
sub
das
mov
xor
sub
inc
push
ss
mov
les
inc
sbb
dec
add
rolb
js
stos
enter
add
out
push
xor
mov
add
andb
xchg
pusha
xor
and
or
movsb
lcall
rolb
mov
andl
or
xor
and
dec
int3
movl
mov
and
lret
xchg
adc
xchg
mov
xchg
dec
sahf
dec
cwtl
or
jbe
add
cltd
pusha
xchg
cmp
les
ret
inc
sarb
outsb
int3
fs
sub
push
push
hlt
pusha
or
mov
mov
or
push
mov
push
ss
loop
test
sub
lods
inc
mov
pop
add
sub
mov
adc
mov
enter
sbb
ret
inc
je
popa
xor
pop
mov
lods
mov
test
or
es
outsb
inc
inc
mov
mov
hlt
dec
push
adc
iret
jl
mov
aaa
shlb
cmp
or
dec
mov
dec
and
or
mov
cld
jb
sbb
aam
outsb
mov
adc
sbb
inc
dec
adcl
dec
int3
les
push
inc
ljmp
xchg
rclb
cld
xchg
nop
rclb
mov
xor
adc
push
xor
shlb
lret
and
call
add
cmp
and
les
movsb
rcr
cmp
lds
add
rcll
or
adc
sub
push
cwtl
xorb
adc
adc
push
mov
mov
mov
inc
movhps
addr16
sbb
dec
and
loope
add
cmp
scas
idiv
xor
sub
inc
adc
nop
popf
es
ds
loopne
mov
add
sub
fwait
repnz
dec
xchg
jge
nop
ficompl
gs
jecxz
adc
popa
out
xor
sbbb
cmp
adc
xchg
inc
push
repnz
scas
pop
loope
jl
dec
imul
imulb
push
adc
or
push
jbe
les
lcall
xchg
xor
nop
or
fdivrs
add
sub
pusha
add
push
mov
or
ret
inc
mov
int3
pusha
sub
pop
push
xor
test
xchg
addb
into
sub
xor
push
or
add
and
sti
add
or
ljmp
adc
sub
add
inc
ret
imul
inc
mov
mov
inc
mov
repnz
es
dec
add
ljmp
or
ret
dec
ljmp
mov
rorb
mov
add
xchg
shll
adc
jp
filds
or
std
jo
sbb
or
and
in
test
mov
cmp
mov
dec
into
mov
call
dec
out
cmp
mov
sbb
mov
add
pop
cmpsb
and
dec
push
dec
dec
or
enter
into
inc
rorl
out
xor
xor
jl
fisubrs
sbb
xchg
xor
or
jle
mov
addb
cmp
dec
and
xor
xor
mov
shlb
add
andl
jmp
add
and
pop
mov
add
and
faddl
dec
lret
add
out
cltd
imul
mov
jp
stos
sahf
loopne
adc
bound
addb
aam
mov
push
mov
test
sbb
dec
insb
mov
cwtl
test
dec
pop
bound
cmpsb
test
and
jle
scas
cltd
insb
sub
enter
sbb
movsb
lea
inc
shll
in
add
aam
pop
cs
fdivl
dec
mov
shlb
rcrb
in
inc
mov
and
push
dec
pop
bound
jb
insl
cltd
sbb
call
mov
aad
inc
sub
xor
pop
and
jecxz
add
iret
xchg
repnz
jb
bound
icebp
inc
xor
mov
or
pop
adc
call
cmpsb
inc
adc
xchg
in
xchg
add
pop
ffreep
and
add
aas
or
mov
js
mov
fiaddl
or
sbb
lret
jo
ljmp
lret
sbb
add
and
dec
call
nop
cwtl
sbb
push
pop
repz
add
test
outsb
push
ret
xor
aad
xorb
pop
jbe
nop
adc
adcb
int3
or
sbb
daa
popa
mov
inc
bound
inc
xchg
movsb
sub
rcrb
add
dec
loop
or
pop
or
sub
push
cmovp
push
push
inc
gs
popf
cmp
push
push
fadds
mov
ret
jle
in
or
pop
xor
add
adc
ret
sub
sbb
es
test
xchg
les
mov
fdivr
je
jb
push
add
sahf
sub
dec
ss
insb
imul
pop
dec
shlb
adc
cmp
ret
movsb
test
and
sub
mov
insb
sbb
jb
fadds
xchg
sub
in
into
rcrb
xor
add
mov
cmpsb
jecxz
adc
inc
push
or
xor
or
inc
call
dec
test
mov
pop
cwtl
out
adc
nop
and
sbb
add
dec
ss
or
lret
and
in
and
push
or
mov
push
bound
adc
pop
inc
rcrb
push
add
adcb
cmp
lcall
mov
notl
or
xchg
fisubs
mov
inc
pop
fmull
xor
mov
call
test
push
sbb
ret
jp
or
movsb
inc
mov
leave
mov
push
and
movsl
push
mov
adc
push
aas
mov
and
xchg
sbb
rorl
sub
push
pop
adcl
mov
push
fsubl
call
ficoml
xchg
imul
into
orb
mov
xchg
dec
pusha
shlb
xchg
add
sbb
cmpsb
cwtl
xor
popa
add
xchg
xchg
xor
leave
popa
cmp
ljmp
mov
or
stos
mov
rcrl
or
push
or
adc
add
cmpsb
test
cmp
fmul
cli
sub
pop
or
mov
movl
dec
arpl
pop
mov
rcrb
and
subb
sbb
dec
cmp
xchg
test
aam
fnsave
test
addr16
lretw
in
xchg
pop
orb
rcl
xor
test
mov
cmp
gs
mov
outsb
repnz
jp
cs
ds
sbb
les
mov
sbb
lods
dec
repnz
inc
pavgb
or
sub
out
es
cs
cs
and
test
xchg
pushf
cmpsb
or
cs
sbb
or
xor
mov
adc
test
mov
dec
add
mov
adc
dec
pop
call
pushf
les
pop
jbe
sub
and
sub
mov
int
adc
outsb
sbb
inc
andl
sbb
and
pusha
xchg
jecxz
leave
dec
clc
ss
test
sbb
xchg
test
cmp
js
and
and
dec
pop
inc
test
add
jne
xchg
xchg
or
hlt
xchg
js
outsb
cltd
push
aam
pushf
xorb
ds
and
adc
pop
mov
xchg
xor
xchg
inc
push
rolb
and
cmpsb
mov
ds
mov
add
sbb
xchg
lcall
lcall
mov
dec
push
bound
or
popa
or
cs
pushf
push
cld
ret
mov
or
rcr
loopne
pop
dec
xchg
test
insb
cwtl
jmp
movsb
cld
xchg
in
rolb
mov
movsb
fs
jle
push
dec
or
jo
sbb
mov
sub
sbb
push
pop
dec
xchg
fcoml
dec
push
or
push
xchg
xor
shr
or
and
sub
push
xor
or
adc
hlt
js
jecxz
inc
jo
es
xchg
mov
inc
inc
add
dec
bound
cwtl
push
ret
aam
adc
dec
pop
cwtl
enter
or
cld
les
xor
mov
mov
sub
or
inc
xor
pop
in
dec
and
add
adc
xchg
ficoms
sahf
and
or
insb
add
cld
cld
xchg
lods
sub
push
mov
sbb
call
dec
xor
in
loope
test
xor
dec
dec
fiaddl
dec
pusha
add
mov
enter
adc
sbb
add
adc
into
dec
cmpsb
dec
popa
dec
mov
hlt
inc
ret
fidivrs
and
shlb
dec
pop
pop
lods
dec
scas
mov
mov
xor
sbb
push
mov
cs
inc
les
xchg
sub
dec
lahf
add
xor
adc
sbb
add
pushf
sub
mov
lock
cld
es
adc
cmpsl
test
and
andb
add
ds
push
js
and
popa
push
mov
pop
inc
sbb
test
add
hlt
xchg
fadds
mov
clc
sub
ljmp
mov
sub
add
pop
or
test
fadd
pop
in
mov
pop
mov
test
into
je
test
fisubs
add
ret
aam
xor
mov
sbb
adc
loopne
sub
cmpsb
je
or
movsb
push
dec
in
fmull
imul
pop
cmp
pop
sti
adc
dec
add
shlb
pop
movb
or
inc
xchg
push
xchg
jb
push
cs
enterw
adc
inc
popa
and
add
adc
add
pop
rcrb
mov
add
and
add
xor
or
or
into
xor
ficoml
pop
loop
int3
sub
mov
inc
int
xchg
xchg
adc
dec
por
jo
outsl
or
ret
xchg
movsb
sbb
mov
ret
inc
xor
lock
inc
sbb
push
daa
push
repnz
push
ljmp
pop
into
and
dec
inc
sub
push
cwtl
xchg
fdivrs
add
xor
pop
mov
mov
cltd
jp
push
call
sbb
add
mov
rclb
and
cld
cli
ret
add
cwtl
xchg
add
cmp
cwtl
or
sub
sub
jle
sahf
push
bound
pushf
ds
pop
xlat
rcrl
xor
and
sub
push
dec
add
add
lcall
je
xchg
push
cmpsb
in
or
pop
out
add
mov
xor
ss
mov
mov
sbb
mov
inc
and
test
xchg
mov
cmp
je
shr
dec
hlt
inc
inc
test
leave
cld
pop
or
add
rcrb
pusha
push
ficoms
and
adc
movsb
and
fsubrs
mov
xorb
jo
xor
xor
dec
and
pusha
lret
and
sbb
mov
or
mov
lock
adc
dec
enter
push
sarl
jle
cmp
mov
inc
and
or
dec
dec
cltd
lods
clc
sti
dec
cmp
and
xor
mov
and
pusha
adc
ljmp
push
push
hlt
add
jb
repnz
xchg
xor
loope
loopne
clc
cwtl
and
pop
inc
adc
insb
dec
arpl
nop
test
jg
add
cmp
and
push
sub
ret
ret
ds
xchg
js
in
sub
mov
xor
sub
pop
dec
adc
pushf
xchg
jb
add
imul
and
ljmp
lods
lret
or
lods
push
ret
nop
loopne
add
pop
sahf
lock
add
sbb
pop
inc
mov
inc
push
test
push
cmpsl
mov
and
pop
loop
pushf
or
dec
sbb
inc
xchg
cwtl
lods
add
or
ljmp
stos
cmpsl
movsb
push
push
sahf
cmp
push
dec
pop
mov
lret
push
pushf
add
pushf
xchg
test
jo
sbb
cwtl
fcoml
imul
lds
push
fsubs
test
or
adc
lods
dec
add
enter
int3
inc
lcall
jbe
cmpsb
aam
add
sub
rolb
xor
insb
popa
sbb
shlb
and
dec
addb
cwtl
pop
es
mov
scas
adc
mov
nop
sbb
sbb
scas
push
mov
fmul
call
mov
fldl
or
xchg
adc
cli
mulb
les
mov
adc
mov
pushw
nop
push
mov
and
mov
dec
inc
je
test
mov
add
xor
rcr
es
xchg
mov
cwtl
mov
pop
sub
push
xchg
cltd
pop
pop
fisubs
mov
leave
fsubrl
pusha
sbb
es
negb
nop
cltd
mov
mov
mov
mov
pushl
enter
fwait
and
shll
ss
loope
mov
xor
xchg
ljmp
or
or
insb
movsb
loopne
sbb
xchg
sub
adc
push
mov
stc
pop
xchg
loop
cmp
leave
lock
hlt
dec
rolb
int3
loopne
fdivl
jle
push
out
test
xchg
xor
inc
mov
enter
and
inc
sbb
mov
sub
in
push
mov
pop
leave
andl
cs
mov
dec
mov
cli
ret
shll
in
jl
sbb
mov
inc
sti
les
cmp
xchg
or
cltd
pop
xor
les
and
mov
add
dec
lcall
jo
and
push
add
push
dec
outsb
sub
bnd
sub
cmp
pushf
ret
cs
xor
add
loop
fidivs
jo
and
mov
mov
or
mov
jno
shl
and
adc
hlt
adc
add
test
xchg
in
cs
and
loopne
xchg
mov
inc
mov
ss
mov
mov
clc
mov
movsl
mov
shrb
pusha
mov
nop
fdiv
addb
mov
in
addb
nop
or
dec
mov
sbb
xchg
lcall
sub
and
inc
cmpb
sub
in
pop
and
gs
jp
xchg
or
mov
or
and
push
sub
movb
jo
mov
test
jo
pushf
mov
fcmovbe
scas
dec
add
je
xor
push
loope
mov
mov
ss
aaa
andb
adc
push
mov
adc
xchg
jno
mov
mov
xor
sub
pop
or
mov
sub
lds
xchg
push
bound
pop
nop
call
add
pop
bound
or
nop
enter
in
cmp
or
aam
lcall
dec
cmp
pop
test
inc
dec
mov
test
rorl
sbb
or
add
or
sbb
aam
adc
mov
sbb
sahf
hlt
je
xchg
push
inc
adc
push
push
or
ret
cmp
push
dec
xorb
jo
inc
adc
inc
jo
aam
loopne
sbb
inc
mov
cmp
pop
inc
or
pusha
scas
mov
clc
push
inc
xor
andb
xchg
adc
inc
xorl
js
test
loop
sbb
cmp
loope
and
pop
jle
pop
roll
push
into
ret
rclb
push
pop
or
pop
lcall
dec
add
int3
dec
push
inc
push
push
push
cmp
adc
mov
sbb
fadds
dec
test
adc
fs
push
pushf
xor
inc
lock
adc
cwtl
out
sbb
and
sub
adc
add
and
mov
or
addb
or
cs
ds
clc
fimull
sbb
call
or
add
in
add
adc
andb
aam
enter
data16
mov
andl
lea
insl
cltd
xor
mov
fldenv
add
ret
or
jmp
sbb
xchg
bound
dec
loopne
dec
and
mov
test
fsubl
xor
popf
sub
pop
add
ret
fwait
xchg
xchg
mov
xor
add
mov
pop
push
pop
dec
iret
xchg
mov
mov
data16
sub
leave
mov
cmp
inc
mov
push
or
jp
and
xorb
scas
mov
inc
je
int3
mov
push
adc
sbb
les
jo
inc
hlt
lock
adcb
push
adc
push
push
mov
sub
dec
outsb
adc
push
xor
scas
add
add
scas
hlt
lcall
mov
dec
cmc
mov
mov
addl
shrb
and
adcb
and
inc
xor
adc
gs
sbb
push
call
enterw
xchg
push
and
and
sub
repnz
aam
cmpb
and
adc
push
xor
movsl
call
cwtl
ret
add
jge
test
in
dec
dec
loope
in
adc
fisubl
into
or
inc
ret
mulb
pusha
lcall
pop
push
push
cs
xchg
dec
sub
sbb
and
sbb
je
movsl
and
xor
scas
add
mov
flds
mov
lret
push
sti
mov
icebp
sahf
adc
and
or
mov
mov
sbb
pop
cld
lock
das
or
lcall
cmp
xor
dec
jl
or
pop
js
dec
dec
or
shr
inc
bound
add
inc
ret
xor
ret
test
pop
mov
sub
stos
pop
push
sbb
in
adc
or
xchg
or
stos
rcll
hlt
mov
popa
fimull
add
adc
pop
loop
int
pop
pop
dec
add
lock
push
or
fsubrs
lret
mov
cmp
sub
aam
insb
xor
es
add
adc
roll
loope
push
xchg
sub
mov
test
arpl
icebp
pop
test
push
dec
or
lret
cmpsl
add
cmp
sub
sub
add
mov
dec
mov
in
adc
push
and
ljmp
dec
fisttps
sbb
in
push
js
shll
mov
cmp
flds
sbb
mov
test
mov
inc
pop
xchg
nop
subb
xor
andb
adc
and
and
enter
movsb
mov
push
sub
pop
push
fnstcw
loopne
mov
sbb
dec
es
dec
and
or
add
add
sub
aam
add
xchg
lods
cmp
and
mov
fadds
int
pop
inc
add
mov
das
inc
or
pop
jge
or
fs
call
test
pusha
imul
leave
in
dec
mov
sub
rcpps
rolb
nop
cmp
or
mov
loop
add
push
inc
adc
cmp
jo
mov
rolb
pop
sub
mov
and
mov
dec
cltd
xchg
addb
loope
adc
adc
sahf
sub
adc
and
inc
lods
inc
leave
je
push
lock
insb
insb
pushf
inc
xchg
sbb
mov
add
sbb
adc
movb
call
mov
nop
or
loope
xchg
dec
push
test
add
mov
or
cs
adc
adc
movsb
pop
sub
mov
xor
xchg
pop
adc
adcb
adc
movsl
push
jb
xorb
mov
and
push
movsb
cli
popa
sbb
cmp
sarb
loopne
mov
cmp
or
jp
mov
and
popa
nop
shlb
sbb
inc
lret
sub
or
push
insb
and
ljmp
jb
cli
outsb
mov
call
orb
xlat
mov
cmp
push
inc
mov
cwtl
loopne
sub
pop
lods
adc
mov
insb
cwtl
clc
mov
mov
add
push
sub
push
enter
es
insb
rorl
rorl
mov
sbb
mov
dec
add
xchg
les
adc
sahf
inc
xchg
and
loop
ficoms
mov
xor
leave
adc
adc
scas
dec
movsb
xor
je
jbe
add
push
les
ret
push
sub
push
sub
dec
dec
mov
adcb
loopne
mov
ret
shrb
ljmp
inc
push
cmp
xchg
inc
mov
xchg
jg
sbb
inc
sub
and
xchg
add
pushl
and
ljmp
xor
sahf
mov
out
pushf
push
adc
cmp
fadds
cmp
lock
mov
or
and
jp
push
xchg
lcall
mov
popf
and
jo
and
mov
xchg
clc
sub
lret
or
ficompl
sbb
ret
mulb
mov
or
loop
mov
or
shlb
pop
sub
in
movsb
xor
adc
ljmp
adc
jbe
dec
jp
dec
push
or
dec
inc
mulb
fs
sbb
jbe
lret
bound
ljmp
xchg
xorb
jle
in
and
sbb
add
push
push
mov
xchg
icebp
mov
pop
test
push
and
cmp
add
nop
bound
ljmp
enter
mov
adc
jl
pop
iret
add
test
inc
mov
enter
add
sub
movsb
add
mov
adc
xchg
adc
mov
js
nop
xor
das
sahf
addb
jp
xchg
fisubrl
mov
sub
mov
or
add
mov
aam
mov
sbb
xor
dec
cmp
lcall
ficomps
or
test
out
fimull
or
dec
mov
sub
sbb
int3
or
pop
mov
lock
mov
test
push
leave
call
mov
xorl
pop
inc
add
cmp
rolb
pop
xor
push
xchg
xor
inc
enter
test
xchg
sbb
sbb
xorb
popa
cmp
xchg
int3
add
mov
fmul
sahf
rolb
pop
push
repnz
adc
sahf
sub
adc
sub
dec
movsb
adc
test
subb
cmp
in
mov
cmpsl
dec
out
push
push
jle
jle
mov
call
jo
sbb
jo
and
inc
inc
inc
pop
lock
xor
xor
xchg
sbbb
mov
push
movsb
andb
int3
xchg
stos
and
xchg
lcall
out
pop
in
pop
and
sbb
lods
and
add
ret
int3
sub
dec
push
inc
rorb
shlb
inc
mov
mov
push
mov
shlb
xor
add
cmpsb
sti
jb
cmp
push
inc
or
mov
or
xchg
add
andb
and
dec
or
insb
sbb
test
movsl
mov
adc
mov
pop
mov
leave
and
repnz
ficoms
add
push
aam
push
incb
adc
pop
push
and
dec
or
pushf
nop
push
mov
mov
cmpb
and
push
lret
jno
xorb
test
rcll
jmp
enter
jb
jmp
adc
cli
mov
sbb
dec
add
mov
test
mov
add
push
push
shr
lock
pop
and
icebp
xor
push
inc
clc
add
aaa
push
mov
sbb
leave
insl
mov
inc
push
dec
adc
les
sbb
pusha
cmpsb
mov
adc
and
xor
dec
outsl
lret
mov
out
add
ret
jno
incb
inc
mov
ljmp
mov
xor
jp
lea
and
test
inc
lods
dec
jge
jg
push
inc
and
jp
push
adc
mov
adc
int3
sub
pushf
imulb
popa
or
push
add
sub
and
insl
insb
stos
imul
dec
mov
xchg
test
mov
stos
test
adc
cmp
sub
pop
testl
les
sbb
dec
dec
bound
add
outsb
push
es
push
mov
cltd
sbb
loopne
add
cmp
or
sub
gs
sbb
std
cli
faddl
in
add
cmp
mov
mov
rclb
subb
inc
and
andb
inc
call
mov
mov
scas
sarb
sbb
lea
pushf
push
cltd
or
pop
insb
jle
dec
xchg
pop
outsb
xchg
dec
inc
rorb
and
imul
es
xchg
jle
fdivs
or
pop
add
mov
mov
subl
pop
rorb
ds
or
jle
cltd
add
cltd
rcll
push
in
adc
loopne
int3
adc
outsb
or
imul
mov
and
add
mov
repnz
je
add
adc
jo
mov
cmp
xor
fisttps
adc
sbb
xor
fcom
out
mov
lods
mov
xchg
rolb
mov
shlb
adc
fsubrs
push
or
je
aaa
hlt
xchg
or
popa
rolb
nop
adcb
sbb
mov
pushf
inc
mov
cmp
roll
pop
movsb
and
lods
enter
mov
mov
push
xchg
dec
or
rorb
push
adc
movsb
mov
pushf
and
pop
dec
push
lods
adc
into
nop
and
adc
and
xchg
leave
inc
sub
clc
dec
loop
pushf
or
repnz
xchg
pop
sbb
or
add
push
push
pop
cltd
adc
roll
rcl
hlt
popa
test
in
out
pop
ret
inc
xchg
sub
xchg
js
push
or
xchg
push
push
mov
add
xor
enterw
xchg
loopne
push
movsb
jp
inc
add
ds
sub
adc
shr
shrl
jbe
test
or
sub
xor
push
and
aas
add
ja
adc
push
cmpxchg
test
cmp
or
sahf
out
cli
add
adc
adc
rclb
mov
xchg
fiaddl
inc
mov
fdivr
inc
test
push
cmp
xor
sti
jo
mov
adc
sub
insb
push
es
dec
pushf
hlt
outsb
xchg
data16
or
mov
push
iret
push
xchg
and
xchg
leave
mov
dec
xchg
and
je
push
mov
mov
nop
movsl
or
lret
imul
inc
add
dec
inc
dec
das
mov
scas
inc
dec
popa
dec
mov
sbb
sbb
into
aam
xchg
lea
pop
les
ret
pop
cltd
nop
adc
fs
aad
add
fcoml
in
dec
sub
test
inc
or
sbb
fcmove
shlb
sub
scas
xchg
loope
ss
cmp
xorb
sahf
es
xchg
call
sub
or
mov
and
inc
push
iret
add
jb
mov
sbb
inc
xor
mov
inc
push
cmpsb
adc
movb
xor
jne
and
test
xchg
sub
cld
sti
sbbl
dec
mov
adc
push
mov
jmp
ss
jb
cmpsb
dec
adc
inc
dec
leave
inc
cmpsb
pusha
add
sub
fisubs
insl
mov
xchg
dec
add
scas
sbb
mov
and
test
mov
and
pop
xorb
nop
and
sbb
push
leave
jne
xor
hlt
push
int3
add
dec
cmp
and
xor
xor
add
push
insl
fsubs
mov
subl
push
pop
fiaddl
and
out
push
subl
ret
jle
inc
dec
cmp
pop
mov
nop
push
xchg
mov
loop
repnz
inc
dec
sub
dec
mov
loope
mov
dec
clc
push
dec
or
lret
push
popf
mov
fimull
adc
adc
mov
test
test
inc
mov
add
je
mov
ljmp
cmp
lods
inc
and
lcall
mov
enter
xchg
jno
add
lods
sub
adc
cli
test
dec
add
mov
sub
push
push
cld
xlat
dec
test
xor
call
push
leave
es
gs
outsb
sbb
dec
jg
add
push
adc
in
pop
adc
mov
cli
add
testb
dec
sbb
push
sub
in
xor
mov
mov
loopne
movsl
mov
push
dec
dec
leave
dec
add
out
mov
push
sub
pusha
int3
adc
mov
mov
adc
add
fs
fcoml
cmpb
loopne
xor
pop
and
mov
or
aam
xor
and
sub
loopne
xchg
data16
dec
cmp
lret
test
loope
lds
pusha
imul
mov
or
xchg
out
or
sbb
push
icebp
inc
xchg
fs
push
pop
inc
xor
jmp
and
mov
xchg
lret
add
push
addr16
out
loope
add
enter
cmpsl
insb
test
dec
xchg
dec
jo
or
jbe
call
loopne
iret
dec
push
add
fsubl
dec
dec
xchg
adc
in
fs
mov
pop
mov
dec
mov
sbb
xchg
cli
push
sbb
lcall
inc
jo
or
lock
or
scas
mov
insb
loope
lock
inc
xchg
dec
test
sbb
lds
add
repnz
or
pop
adc
add
xor
rorb
pop
in
pop
mov
and
jo
clc
adc
movsb
push
sbb
xchg
push
inc
adc
pop
add
push
jo
cltd
inc
xor
mov
ret
add
or
movsb
xchg
or
push
xor
int3
adc
imul
xchg
and
and
add
test
push
dec
jg
inc
loopne
xchg
int3
fidivl
rorl
xchg
dec
jb
test
add
sarb
push
jae
mov
test
pop
popl
nop
repnz
adc
dec
push
cmp
jbe
or
out
nop
nop
mov
sbb
cmpsb
or
inc
je
and
sub
loop
arpl
or
outsb
mov
test
jne
enter
xchg
and
lock
push
xor
mov
lods
pop
add
movsl
add
xor
ficoms
xor
xor
mov
ret
adc
xchg
ret
sarb
in
stos
sbb
nop
ret
adcb
and
or
sbb
es
xor
repnz
push
cmpsb
adc
rolb
loop
or
dec
popa
nop
adc
cmp
push
fists
jmp
and
insb
jg
sbb
sbb
push
adc
inc
enter
sti
push
test
or
sbb
adc
shlb
ficompl
or
push
cmp
push
jo
push
shlb
push
inc
push
mov
bound
popa
xchg
pop
jo
inc
mov
lock
mov
pop
mov
ljmp
mov
cs
adc
mov
outsl
lcall
push
cmpsb
sub
icebp
mov
push
xor
fdivr
adc
inc
sub
or
shrl
xor
cld
mov
push
inc
test
pop
sub
fidivs
popa
sub
dec
add
jbe
mov
jb
rol
pushf
ret
dec
add
sbb
out
mov
pop
cwtl
xchg
orb
and
lea
das
sbb
sub
popa
fsubrs
pusha
sbb
test
loope
dec
lds
pop
cmp
ljmp
js
dec
add
add
mov
add
out
add
adc
test
adc
mov
sub
and
je
dec
ret
dec
sub
mov
xlat
push
insb
ja
adc
rorl
dec
add
xor
and
pop
pop
push
push
dec
mov
mov
outsb
ret
lods
mov
arpl
add
movsb
mov
dec
es
push
ret
sbbb
out
jecxz
add
stos
sbb
cld
mov
adc
sti
insl
cmpl
aam
fsubl
lods
mov
test
xchg
cmpsb
lcall
lock
and
data16
adc
xor
push
inc
out
hlt
push
xor
add
rclb
mov
leave
or
and
pusha
xor
pusha
cmp
mov
cmpsb
sub
ret
cwtl
ret
popa
cwtl
cs
mov
test
mov
pop
jb
and
pop
ret
xchg
inc
dec
rorl
jne
subb
and
or
hlt
fs
adc
call
add
xor
xchg
cmp
imul
mov
out
pop
lods
or
ds
cmp
mov
test
mov
add
clc
add
les
pop
aam
dec
inc
addl
lds
dec
dec
mov
or
push
sahf
jbe
test
sub
jb
push
and
inc
dec
and
xor
xor
and
or
push
jp
adc
leave
inc
idiv
sub
cmp
rolb
dec
inc
fwait
cmp
mov
pop
xor
jp
xchg
cltd
xor
sbb
sarb
mov
mov
cs
add
les
xchg
enter
mov
bound
cmpsb
xor
push
adc
adc
sahf
stos
sbb
xor
xchg
pop
mov
and
stc
sub
mov
insb
dec
push
push
mov
or
imul
xchg
add
mov
xor
push
test
add
push
xor
push
loopne
fsubrl
leave
push
fs
loopne
xchg
push
mov
add
jp
push
or
adc
mov
add
sbb
add
inc
jg
jae
adc
jo
jmp
xchg
mov
fdivrl
sbb
mov
push
insb
inc
adc
push
das
xchg
fdivs
inc
mov
push
std
inc
adc
jp
ficoml
sahf
pop
cmpsb
loope
lods
or
pop
daa
out
popw
ret
and
and
mov
push
dec
inc
adc
rcr
jo
clc
and
aam
add
out
add
xchg
dec
out
in
xor
inc
xchg
pushf
call
sbb
add
adc
xchg
xor
dec
stc
pop
pop
sub
inc
sub
adc
and
sub
mov
xor
out
lock
dec
push
adc
ret
lret
dec
inc
lods
push
xchg
clc
sar
or
lret
dec
mov
mov
and
cmp
and
mov
lods
xchg
test
cmp
jb
mov
mov
test
insl
cmp
cs
cld
xchg
pop
and
mov
adc
leave
mov
pop
pop
dec
mov
lea
dec
shrb
addb
aam
sub
hlt
or
or
xor
data16
loopne
push
add
rolb
clc
add
pop
add
fcomi
cmpsb
push
push
push
and
xchg
sbb
sub
mov
shll
mov
and
pusha
pusha
or
xchg
loope
mov
xor
dec
in
pushf
mov
add
sub
testb
rorl
mov
data16
sbb
decb
ljmp
cwtl
ret
sahf
dec
sbb
adc
xchg
call
rcll
xor
xchg
leave
xchg
enter
mov
push
inc
loope
testb
call
adc
ret
icebp
and
lods
xchg
and
addb
mov
add
fadds
xchg
mov
test
xor
xor
rorb
and
or
sbb
loope
adc
andps
mov
jp
inc
xchg
call
or
fs
les
test
sub
add
rclb
mov
push
mov
fcompl
pop
es
pop
std
lcall
dec
scas
push
jp
adc
lds
leave
into
and
pusha
xchg
into
ret
bound
mov
sbb
inc
mov
add
sahf
loop
add
mov
xchg
jne
add
mov
outsb
into
fnstcw
add
lret
xchg
es
xor
movsb
adc
movsb
xchg
cmpsb
ss
dec
popa
inc
hlt
push
push
js
adc
dec
js
jno
mov
mov
fmull
push
and
adc
lcall
sbb
and
pop
mov
shll
pop
les
mov
push
and
popa
and
int3
add
xor
add
data16
xor
pop
enter
nop
test
and
add
mov
sub
xchg
call
adc
repnz
pusha
add
sbb
jne
into
cmpsb
or
fimull
ret
int3
and
dec
adcl
fwait
sub
fcomp
and
inc
mov
js
sarb
or
xchg
cld
jb
jp
sub
dec
sarl
cltd
sub
fsub
push
push
push
fmull
orl
int3
or
out
lds
push
scas
ficoms
jo
movsb
rol
cmpsb
jl
cmpsb
ss
push
mov
movsl
mov
mov
pop
sub
fs
lret
xor
xor
xchg
es
or
xchg
pop
add
popa
sbb
nop
aam
add
xchg
jmp
cmp
jb
add
dec
and
bound
jb
lea
ljmp
hlt
and
adc
cmpsb
push
js
movsb
push
imul
pusha
ds
gs
mov
jmp
movsb
or
in
nop
xorb
jo
cmp
lret
pop
inc
cmp
xor
mov
pop
push
add
enter
sbb
add
add
ficoml
fisubs
add
sbb
nop
lods
es
es
xchg
jmp
pop
xor
sbb
stos
test
mov
or
or
jb
pop
or
add
test
aam
mov
nop
loopne
fcmovu
xchg
test
clc
xor
data16
xor
mov
or
xchg
xor
jo
mov
and
pop
lods
cwtl
xchg
test
add
inc
outsb
fsubl
cli
adc
xor
ss
push
xchg
in
lods
and
xor
inc
mov
adc
cs
movsb
lret
pop
dec
and
push
int3
enter
test
cmp
sub
rcr
sbb
mov
lds
movsb
xor
pop
inc
ficoml
cwtl
ret
call
test
push
or
repz
sub
cld
repnz
aam
inc
test
ror
imul
pop
cli
stos
repnz
fdivl
add
mov
xchg
push
fcmove
inc
inc
inc
je
rcrb
and
add
jb
test
call
or
sbb
mov
mov
xor
adc
or
rcrb
mov
test
jl
and
jle
sbb
dec
loopne
mov
rclb
cmp
pusha
movb
in
dec
mov
xor
insb
pop
cmp
and
aad
nop
in
or
movsl
es
jmp
mov
pop
mov
adc
fimuls
push
xor
inc
jae
and
xchg
push
inc
inc
dec
int3
and
xor
test
xor
test
cmp
ss
das
or
rorl
in
sbb
inc
jae
pusha
mov
pusha
xchg
or
push
push
bound
jbe
mov
addl
push
or
or
mov
or
inc
cmpsb
mov
push
andb
xorl
and
xor
and
mov
adc
xorb
push
adc
push
pop
cmp
shll
outsl
mov
in
sbb
ficoms
call
pop
xchg
pop
xor
jl
pushf
xchg
std
cmpsb
es
mov
lret
xor
and
adc
add
or
or
pop
retw
adc
adc
gs
pop
mov
and
dec
adc
ss
leave
je
add
push
jbe
sub
mov
push
push
test
lods
ret
push
and
in
aam
xchg
add
jmp
mov
mov
push
es
mov
sbb
or
push
or
or
mov
test
aam
xorb
lahf
pop
pop
xchg
adc
push
inc
out
mov
mov
adc
enter
gs
test
mov
incb
cmc
add
clc
idivb
push
int3
xchg
push
dec
dec
rclb
xorb
xchg
push
adc
inc
mov
xchg
or
sbb
mov
test
sbbb
stos
aad
cmp
and
in
xor
add
loope
jbe
cmp
mov
dec
stc
in
ss
push
fs
and
cmpsb
pop
mov
or
xchg
adc
insl
outsb
mov
ds
add
testb
mulb
loopne
inc
xchg
dec
pusha
push
aam
es
rcrb
fisubrs
test
les
inc
sbb
cltd
adc
add
pop
jo
or
mov
mov
add
sub
sub
outsb
adc
outsb
or
add
xchg
sub
or
loop
adc
cli
mov
pusha
and
inc
sbb
nop
jne
cmpb
sub
rcll
pop
jg
jne
mov
add
cmp
dec
mov
test
inc
mov
mov
subb
hlt
pop
rcr
sub
and
add
pusha
pop
push
dec
add
in
xchg
jno
or
pop
add
add
dec
pop
ret
adc
xchg
fs
fists
aad
mov
test
dec
or
sbb
bound
nop
data16
cmp
and
in
dec
cmp
in
adc
mov
test
inc
hlt
dec
jne
xchg
inc
imul
push
sbb
sbb
sub
cwtl
add
out
jecxz
xchg
fs
pop
inc
test
jp
add
idivb
les
lock
filds
jb
adc
xor
pop
jl
test
xchg
add
jbe
outsb
or
mov
dec
stos
add
fsub
adc
rorb
jo
lret
or
push
jl
xchg
popa
jb
js
push
inc
jecxz
scas
inc
dec
sub
out
xor
dec
sub
enter
add
outsb
outsb
ljmp
out
test
ljmpw
add
xor
xchg
xor
faddl
sub
loopne
mov
sub
dec
or
addl
mov
es
lods
jbe
and
sub
mov
adc
mov
xor
std
xor
or
xor
sub
mov
ljmp
mov
mov
bound
or
pop
mov
push
pop
cmp
stos
pop
push
sbb
xor
dec
add
notb
push
push
inc
push
andb
les
jmp
pop
je
dec
fdivs
push
push
aam
and
test
mov
and
cmp
xor
jp
xchg
in
xchg
pop
xchg
adc
hlt
jo
adc
sbb
mov
and
cmpb
xor
lock
xor
xchg
push
dec
loope
add
dec
fsubrs
ss
xchg
out
sysenter
hlt
shl
push
pop
jns
jo
jecxz
inc
ret
push
andb
mov
adc
mov
pop
js
dec
test
bnd
test
mov
orb
jp
pushf
mov
xor
sbb
addr16
and
sarb
sub
add
into
pop
xor
mov
pop
jbe
push
leavew
sub
inc
push
cwtl
loope
inc
adc
jle
xchg
lcall
or
or
xchg
xor
sbb
push
add
cs
and
fs
adc
imul
sub
or
rclb
mov
push
pop
inc
roll
lcall
xchg
jl
mov
or
ds
xchg
jp
enter
push
push
jo
xchg
push
and
xor
pusha
add
std
jb
add
pushf
xor
ljmp
adc
sti
test
push
xchg
adc
clc
mov
push
mov
mov
orl
pusha
leave
mov
and
cltd
adc
repnz
ss
xchg
sbb
xchg
mov
or
pop
adc
add
loop
call
add
xchg
jmp
or
sub
mov
mov
das
adc
inc
add
les
and
outsl
push
cmpb
out
xor
data16
rclb
xchg
stos
xchg
std
xor
sbb
mov
cmp
push
mov
pushf
mov
sbb
lret
pop
dec
cmp
push
add
xor
imul
pushw
fs
adc
adc
mov
loopne
hlt
lret
push
rdtsc
or
jb
adc
cs
sub
cmpl
add
lock
int3
adc
imulb
and
push
imul
and
dec
dec
test
push
add
push
dec
into
mov
fs
cmpsb
fcoml
pop
mov
pop
or
cmpsl
add
pusha
cmp
mov
subb
popf
mov
ret
mov
pop
mov
lcall
mov
or
xchg
addr16
adc
dec
adc
pusha
inc
push
movsb
call
sub
enter
sub
dec
sub
inc
add
push
mov
mov
mov
push
test
xor
mov
adc
pushf
push
das
dec
sub
sub
fisubrs
or
shlb
or
movsb
fidivs
enter
pop
and
movsl
mov
push
ss
mov
sbb
mov
mov
push
adc
push
adc
adc
and
inc
imul
lret
push
repnz
push
pop
fnstcw
inc
mov
or
lret
rorb
pop
xor
dec
subb
cmp
mov
sbb
jle
xor
repnz
xchg
int3
int3
lret
xor
pushf
enter
test
inc
test
dec
fistps
sahf
push
xchg
popa
xchg
xchg
xchg
and
mov
enter
push
cli
rorb
push
sbb
fcoms
and
pop
add
ret
nop
test
xor
pop
dec
ret
sbb
test
xchg
pusha
and
lock
add
enter
add
xchg
rolb
inc
test
rorb
xchg
es
inc
dec
inc
push
enter
mov
inc
xchg
pop
and
xchg
fcomi
adc
mov
mov
lret
xor
dec
into
js
or
inc
imul
cld
add
inc
mov
test
ja
xor
mov
xor
cld
js
pop
and
mov
aam
mov
bound
leave
sub
das
add
inc
xchg
fmull
add
xor
loop
lods
in
xchg
push
pusha
dec
adc
lods
imul
and
or
xchg
int3
push
mov
xor
sbb
xchg
push
add
and
adcl
and
out
xor
or
sub
adc
xchg
ret
push
je
fs
add
ficoml
or
mov
mov
dec
aam
inc
mov
xchg
push
out
cwtl
push
mov
and
xchg
push
sub
andb
xor
xchg
or
add
push
mov
dec
xchg
adcl
xor
or
loope
adc
push
pop
adc
outsl
add
notb
movsl
mov
or
loope
inc
les
inc
or
flds
mov
sahf
nop
or
rclb
mov
adc
pop
sbb
sub
jb
add
and
rolb
adc
test
mov
sbb
dec
dec
cwtl
ret
xor
add
inc
or
call
nop
sbbb
or
xor
adc
push
repnz
jg
and
add
mov
or
and
inc
jbe
sbb
push
outsb
xacquire
push
sbb
rcr
clc
int3
lcall
add
push
int3
push
sub
dec
loop
bound
jmp
sti
push
cmp
add
add
insb
imul
cwtl
sub
xor
pop
push
ljmp
lods
mov
lods
or
sub
ljmp
insb
mov
stos
xor
xor
inc
pop
inc
inc
dec
xchg
add
adc
xchg
in
xor
sbb
cmp
sub
dec
mov
jo
push
les
cld
inc
in
dec
add
add
inc
xor
pop
xor
xchg
adc
mov
inc
call
and
or
imul
mov
sub
sbb
andl
cltd
mov
ss
in
nop
or
sbb
inc
shrl
xorb
lods
inc
pop
es
cmp
push
push
hlt
push
pop
xchg
jo
mov
fdivl
mov
sub
and
inc
xor
push
xchg
inc
xor
mov
pop
movsb
out
fisubl
push
mov
mov
push
mov
or
fs
test
sub
inc
and
sub
hlt
test
add
mov
inc
lea
imul
out
push
cs
and
cmp
xchg
dec
sub
jbe
xchg
sbb
add
les
xchg
and
xchg
dec
sub
movsb
loopne
test
add
push
xorb
rorb
shrl
lret
icebp
adc
or
and
dec
subl
mov
and
les
xchg
push
leave
jo
fs
test
sub
mov
mov
sbbb
sbb
test
dec
push
loopne
in
shrb
pop
adc
mov
inc
mov
lods
mov
cmp
and
xor
cmpsb
push
xorb
xor
pushf
fimull
cs
and
fisubs
and
mov
xor
imul
pop
jb
hlt
jb
aaa
es
adc
daa
rcll
sub
adc
sarb
cltd
popf
shrb
mov
xchg
xchg
shll
dec
dec
cmp
mov
jno
shll
lock
gs
xor
bound
mov
sub
mov
adc
push
add
lea
insb
cli
pop
jb
and
pusha
fisubrs
add
repnz
mov
enter
inc
int
mov
adc
add
and
test
dec
ror
xchg
push
stos
cmp
push
cmpsb
adc
lret
movsl
and
loopne
pusha
rorb
mov
xchg
jb
or
ds
or
int3
idiv
cmp
or
into
sti
push
add
test
pop
in
add
or
fnstcw
sarb
push
adc
or
and
cwtl
in
sahf
loopne
sbb
mov
sbb
push
and
bound
mov
and
push
pusha
add
dec
loope
xchg
dec
xchg
jbe
ror
xchg
shlb
arpl
mov
push
inc
insb
or
cli
dec
xchg
sbbb
int3
add
pushf
push
push
mov
jo
fisubrl
xchg
xchg
mov
cmpb
cli
add
scas
xchg
lock
or
ret
je
pushf
cmpsb
gs
or
sbb
data16
or
lea
outsb
xor
in
insb
leave
repnz
mov
push
adc
stos
push
test
dec
addb
mov
aam
movsb
sbb
add
adc
cmp
mov
xchg
es
shll
and
jo
dec
shl
ljmp
fs
repnz
push
xchg
adc
fiaddl
adc
fs
popa
jo
jbe
loop
mov
test
inc
loope
pop
nop
adc
loope
popf
sub
ljmp
mov
pop
test
adc
ret
dec
pusha
or
int3
jbe
and
shrl
sbb
pop
jo
mov
sbb
mov
ret
lock
fmull
sbb
subb
xor
pop
push
and
add
roll
sbbb
jle
lock
adc
out
xor
mov
fadds
dec
les
dec
fstl
cli
mov
mov
stos
mov
aam
xchg
cltd
sbb
lret
push
test
add
je
daa
push
outsb
mov
push
shrb
movsb
push
or
mov
data16
and
adc
jo
adc
outsb
cmpsb
hlt
mov
repnz
add
dec
enter
nop
dec
add
addb
mov
lods
aaa
xchg
mov
ret
mov
mov
rorl
inc
add
xchg
adcb
and
das
pop
arpl
xchg
or
dec
sub
mov
or
lret
mov
or
cmp
les
sub
adc
or
jmp
test
cs
or
ss
sub
ss
test
sbb
jb
kmovw
or
cmp
jo
mov
add
push
xchg
adc
loop
lea
push
sbb
mov
xchg
loope
cwtl
je
mov
push
jp
or
xchg
aam
xor
nop
dec
addl
test
adc
lock
dec
sbb
sbb
mov
sbb
xor
inc
sub
xor
sahf
popa
pop
in
xor
int3
adc
xor
sbb
sub
push
and
xchg
mov
and
sub
mov
ret
int3
movsl
or
nop
push
shll
movsb
pop
xor
push
xchg
xchg
ret
rol
js
pop
notb
les
xor
sbb
push
push
xchg
fildl
sahf
mov
cmp
dec
xchg
shl
addb
mov
nop
mov
ret
inc
sub
es
or
or
ljmp
pop
dec
add
sbb
sbb
inc
sub
push
or
pusha
mov
addr16
jle
xchg
addb
mov
shl
mov
cmpsl
outsb
xor
and
mov
pushf
jnp
xchg
or
jp
mov
fmul
push
or
dec
popa
pushaw
add
mov
adc
or
push
sbbb
in
jo
movsb
push
mov
cmc
adc
lods
jne
inc
adc
ljmp
rclb
add
pop
mov
into
and
mov
push
fstps
adc
sbb
mov
mov
mov
dec
data16
nop
imul
sub
and
add
xor
movsb
mov
jo
sub
or
repnz
sbb
add
cs
and
insb
inc
xor
xor
je
mov
and
inc
les
xchg
addl
mov
xor
aam
ror
pop
add
adc
lret
cmp
rcrb
or
movsb
xor
inc
push
cmp
sub
xchg
add
pop
test
cmpsb
aam
mov
adc
mov
inc
mov
movsb
data16
ret
add
jae
jle
loopne
add
nop
fdivs
addb
repnz
popa
sbb
xchg
jb
dec
jno
mov
mov
jbe
dec
dec
mov
add
sti
inc
mov
aas
add
xor
or
add
lret
jno
add
push
and
sbb
testb
or
or
popa
inc
popa
gs
loope
add
pop
mov
rorb
and
enter
imul
mov
push
out
mov
or
push
lret
add
xor
lcall
pop
enter
insb
pushf
lret
or
je
ror
xor
push
leave
sbb
dec
ret
add
mov
add
nop
push
pop
or
mov
xor
call
sahf
ss
xchg
sbb
and
test
sub
pusha
rclb
lret
fsubr
movb
jbe
xor
and
aam
dec
ljmp
inc
lret
les
adc
aam
mov
lock
es
add
ret
mov
add
ret
dec
xchg
inc
rclb
push
push
loop
pop
push
fstps
inc
xor
cmp
mov
rcll
xor
push
sub
rolb
mov
adc
xchg
push
add
and
adc
add
jne
mov
xor
sahf
rolb
sahf
and
mov
xchg
add
mov
xorl
mov
adc
push
mov
addr16
leave
in
dec
nop
cltd
mov
pop
cmp
dec
jg
adc
popa
scas
xor
mov
mov
or
movb
xchg
add
testb
rclb
inc
xlat
add
jl
inc
les
cmp
test
ret
add
ret
andb
xchg
and
sbb
add
xor
sbb
push
dec
ficompl
add
xchg
and
clc
test
lods
and
jb
adc
push
daa
mov
push
xchg
add
lret
cltd
rorb
push
leave
gs
inc
or
push
mov
dec
pop
sub
and
push
stos
ljmp
imul
fisubs
ret
outsb
popa
xor
adcb
mov
sub
or
xor
and
and
inc
fidivl
inc
stos
js
fs
sbb
dec
dec
push
mov
into
pop
sbb
push
test
cli
or
push
add
int3
pop
and
push
rolb
call
rolb
sbb
xor
xchg
push
je
mov
sbb
pop
ror
xchg
inc
pusha
xchg
js
fs
and
dec
xor
ret
sahf
dec
sub
or
add
and
adc
and
mov
lock
xchg
es
and
or
mov
or
or
or
dec
or
mov
mov
push
add
fsubs
cmp
das
cltd
adc
dec
and
sub
add
loopne
pop
adc
cs
into
push
inc
es
sbb
xchg
jle
push
fsubl
mov
xchg
leave
insb
into
dec
lods
and
repnz
dec
or
notb
mov
or
test
movsl
or
dec
and
sub
cs
inc
xor
rclb
xchg
or
stos
sbb
sub
pop
insb
lret
add
mov
dec
gs
fcoms
orb
and
push
xor
push
or
push
xchg
pusha
push
insl
add
in
or
mov
sub
insl
test
mov
adc
adc
pop
in
push
adcb
and
mov
and
jbe
shll
dec
push
decb
aam
jb
xchg
loope
jp
in
into
mulb
test
xor
ds
int3
xchg
push
cmp
adc
mov
les
je
push
pop
shl
je
aaa
call
push
sbb
xor
scas
adc
jp
std
and
sub
sub
ficoms
and
cmpb
outsb
adc
dec
dec
sub
push
ljmp
shlb
cli
lcall
xchg
mov
popa
imul
ljmp
pop
mov
stos
dec
or
jle
inc
xor
movsb
incb
adc
cmp
hlt
mov
je
add
add
push
ljmp
sbb
adcb
jbe
mov
mov
insl
cltd
mov
inc
sbb
adc
dec
movsb
and
add
push
hlt
xor
lcall
push
cmp
sar
mov
call
inc
pop
sbb
aam
fsts
dec
xor
and
sbb
sub
xor
pop
push
movsl
xor
rolb
jmp
mov
pop
mov
or
in
pop
jp
pop
pop
jno
push
cs
add
adc
mov
rclb
xorb
dec
xchg
mov
loop
cmp
ret
add
mov
in
jb
dec
mov
lods
sub
mov
scas
sub
inc
push
stos
nop
test
repnz
lock
xchg
push
inc
cmp
jbe
pusha
sahf
or
leave
or
imul
or
dec
les
xchg
incb
xchg
orl
xchg
adcb
loop
shlb
andb
bound
fs
scas
dec
ret
and
dec
add
lock
jne
add
inc
sub
mov
mov
sub
inc
sbb
clc
cmpsb
and
insb
add
push
orl
xchg
out
push
adc
push
aam
inc
adcb
std
pusha
das
enter
rorb
loopne
in
push
test
add
pop
les
icebp
push
mov
ret
ss
gs
push
add
loopne
push
or
loop
aad
gs
fsubrs
jle
pop
daa
dec
push
or
out
dec
nop
add
xor
test
inc
mov
jbe
jl
xchg
push
adc
cwtl
mov
ss
mov
movsb
sbb
nop
dec
js
or
push
mov
sbb
pop
or
enter
or
add
mov
pop
adcl
and
xchg
sbb
xchg
ret
sub
inc
pop
rclb
fiadds
das
or
lret
xchg
push
dec
inc
repnz
test
test
inc
xor
pop
cmp
add
adc
popa
inc
push
inc
pop
inc
arpl
adc
jp
push
push
mov
test
inc
fmuls
xor
rolb
loopne
pushf
or
dec
inc
in
and
les
loop
push
fstps
mov
leave
adcb
mov
aam
adc
adc
push
adc
rcrl
ljmp
xor
push
pop
jo
insb
lock
add
push
adc
or
or
fs
or
rcrb
push
sbb
ret
or
in
in
dec
add
push
jb
dec
das
ljmp
xlat
xchg
mov
jo
movsb
rclb
pop
loope
sbb
test
xchg
ds
push
add
iret
add
xchg
jo,pn
add
push
fcmovbe
mov
pop
dec
push
call
jb
push
cs
dec
adc
cmpsb
dec
sub
cmp
sub
jo
add
loopne
call
insb
sbb
or
or
jmp
sub
mov
xor
push
in
inc
cmp
sub
and
sub
inc
inc
or
rorb
inc
ret
mov
jb
popa
adc
sub
test
add
loopne
push
jo
mov
enter
mov
and
cmpsl
mov
cmp
mov
test
dec
push
fstpt
rolb
pop
or
stos
push
add
xor
mov
dec
cmp
and
push
push
daa
mov
push
lods
fmul
push
cmpsb
xchg
hlt
js
and
mov
add
mov
dec
xchg
mov
add
add
xchg
push
cmp
shl
orb
dec
push
xchg
in
leave
and
cmp
movsl
in
dec
inc
incl
sbb
popf
lods
test
gs
ljmp
mov
inc
xchg
andb
sbb
jecxz
xchg
rcrb
lcall
outsb
data16
orb
dec
mov
and
outsb
imul
push
sbb
dec
xchg
xchg
dec
xchg
dec
movsb
xchg
ss
les
call
nop
loopne
sbb
mov
insb
cs
insb
leave
sahf
mov
push
xchg
cmpsb
icebp
shrb
mov
sub
push
dec
cld
inc
dec
inc
sub
xchg
sub
and
outsl
mov
sbb
insl
mov
and
sbb
mov
dec
mov
daa
pop
pushf
pop
andb
pop
dec
push
jmp
push
adc
adc
add
call
orb
and
cltd
loope
loop,pt
jmp
xor
mov
xor
mov
or
sti
xchg
test
push
or
push
mov
add
push
add
push
xchg
daa
ret
push
rclb
xor
fisubl
push
and
xchg
and
add
push
adc
add
int3
push
xchg
add
jb
xorb
push
add
add
cs
pop
adcb
addb
xor
mov
aam
mov
add
adc
add
lods
mov
push
in
adc
es
or
rcll
jmp
adc
push
jp
rolb
adc
inc
lret
xchg
divps
xor
and
pop
mov
cwtl
add
cmp
push
xchg
sbb
aaa
add
mov
ret
orb
push
sub
shrl
sbb
jb
push
mov
into
xchg
mov
cmp
add
dec
sbb
mov
sbb
in
lea
sub
add
pop
jle
rolb
adc
cs
insb
jmp
xchg
xchg
ret
subb
aad
add
mov
push
mov
sub
cltd
and
inc
or
or
enter
fwait
mov
xor
xor
adc
mov
xchg
dec
adcb
fwait
jb
add
outsl
adc
push
test
lock
je
xor
inc
adc
hlt
xor
push
lret
inc
cwtl
pop
cmp
dec
cmp
sbbb
mov
shl
adc
xchg
push
mov
add
fs
scas
andl
mov
or
shll
add
das
push
cmp
xchg
adcb
add
dec
leave
xor
push
and
in
mov
fcoml
mov
push
or
dec
xor
rorl
sbb
add
mov
pushf
clc
aaa
movsb
mov
fimuls
rcrb
mov
ret
ret
jb
test
sub
push
lock
es
and
pop
dec
add
push
cmp
sbb
and
and
or
lret
inc
dec
rcrb
push
sbb
mov
mov
lret
sub
cmp
inc
pop
pushf
add
push
jo
inc
ljmp
movsb
pushf
dec
outsb
ret
or
pop
cs
xor
add
das
lret
rcll
push
fs
out
xor
stos
cmp
mov
mov
or
dec
or
inc
push
push
mov
xor
and
bound
mov
push
push
and
sbb
les
add
or
add
lret
lea
cmpl
sub
sbbb
mov
in
xor
cmp
ds
xorb
adc
sub
je
bound
arpl
fimuls
call
out
pushf
pop
add
mov
cwtl
push
repnz
lea
clc
xchg
call
or
mov
dec
mov
add
dec
lds
add
xor
add
or
outsb
pop
cltd
nop
adc
adc
ds
enter
movsb
in
xchg
pop
add
inc
inc
dec
pushf
insl
pusha
popf
or
add
loopne
xor
cmpsb
adcl
add
je
inc
xchg
mov
pop
cli
mov
pusha
xchg
sub
push
push
sbb
lea
mov
imul
xor
sub
add
xor
fdivrs
xor
leave
xor
cmp
inc
sbbb
enter
and
adc
inc
mov
test
and
cmp
mov
xchg
orb
lods
cli
xchg
jecxz
push
scas
mov
and
pop
push
push
xor
and
mov
or
movsl
adc
and
and
dec
and
add
or
bound
adc
or
cwtl
sub
mov
pop
call
and
icebp
pop
mov
pop
or
nop
fcoml
or
push
pop
test
sbb
enter
out
add
cwtl
daa
adc
mov
shlb
dec
ljmp
je
loope
insl
cwtl
stos
jb
adc
add
inc
mov
imul
es
mov
mov
dec
sub
mov
aam
rcrb
cmp
lea
mov
push
dec
ret
adc
mov
pusha
or
sub
and
xchg
lea
rol
jg
scas
js
js
mov
xor
or
shlb
lret
dec
jg
test
sub
dec
movsb
xchg
and
xchg
mov
cmp
sub
or
jle
dec
inc
and
cltd
jle
int3
cmp
rolb
pop
repnz
dec
push
pusha
call
aam
mov
test
loopne
dec
fs
mov
ret
cmp
cld
les
push
xchg
aaa
add
cmpsl
sbb
outsb
int3
xchg
xchg
rcrb
sbb
cs
int3
push
cmpsb
pop
mov
dec
xchg
mov
stos
jl
aad
sar
out
lods
mov
popf
sub
pop
mov
cmp
enter
call
out
outsb
in
xchg
mov
call
dec
sbb
xor
addl
setns
imul
movb
test
push
les
mov
popa
add
ds
or
movsl
add
xlat
ret
es
adc
adc
and
mov
push
or
mov
leave
test
loopne
mov
xchg
faddp
adc
xor
mov
and
sbb
nop
popa
mov
orl
je
dec
and
push
test
sub
mov
test
fimull
pusha
lret
inc
sub
nop
lock
and
mov
ret
adc
adc
addb
inc
int3
in
enter
sbb
inc
dec
je
dec
or
pop
add
ret
sbb
clc
into
mov
dec
js
dec
jne
and
xor
je
pop
lods
lods
push
fmull
lret
inc
pop
out
sbb
sar
repnz
mov
push
cs
and
ljmp
xor
cmp
mov
bound
es
movsb
mov
mov
or
or
sbb
fsubl
xchg
add
adc
cmpsb
push
roll
adc
test
push
adc
add
or
imulb
loopne
inc
movsb
or
les
inc
and
mov
dec
ss
xchg
xor
aam
pop
js
adc
and
inc
xchg
orb
mov
sbb
dec
or
mov
dec
and
sub
ss
or
shrb
jae
push
inc
mov
xchg
pop
insb
mov
adc
dec
aam
jbe
mov
int3
ficoml
add
add
addr16
pop
insb
adc
adcb
cmp
das
mov
ljmp
pop
sub
loopne
fbld
pop
pop
pop
mov
xchg
mov
pop
xlat
sub
add
bound
jno
push
test
mov
mov
push
test
push
or
inc
push
jne
pop
mov
xchg
dec
call
push
mov
mov
leave
and
xor
xor
popa
ret
imul
dec
adc
shlb
push
dec
leave
mov
test
dec
cmp
mov
dec
movb
sahf
dec
dec
or
push
mov
fiadds
xor
sbb
les
mov
xor
hlt
and
cs
xchg
or
mov
jo
and
add
mov
push
sub
bound
dec
mov
pusha
fidivrs
dec
stos
add
sub
test
push
mov
cmp
ficoms
gs
adc
push
rolb
cmp
sub
ljmp
sub
push
xor
inc
rcl
or
ret
adc
and
fadd
test
push
sbb
push
sti
jle
dec
sbb
mov
test
mov
mov
mov
mov
test
fs
addl
movsb
add
add
adc
fidivl
add
and
add
add
nop
adc
test
mov
lcall
dec
and
or
or
jp
movsl
aaa
ds
dec
sbb
js
push
lock
xor
sub
mov
push
or
adc
xchg
and
xor
sub
lret
scas
sbb
jo
sub
push
push
leave
xchg
dec
nop
sbb
inc
sub
sbb
mov
sbb
ret
add
xor
sbb
or
js
scas
push
jno
sbb
push
iret
lds
push
test
adc
loop
es
and
or
cli
loop
loopne
push
out
mov
sbb
or
cmp
sub
dec
adc
dec
jle
xchg
sub
and
test
cmp
les
add
xchg
rcrb
lock
repnz
pop
add
and
sbb
push
mov
iret
mov
jl
test
push
xor
pusha
push
add
adc
sbb
mov
pusha
push
push
jge
xchg
inc
mov
ret
ret
nop
sbbb
xchg
rorb
ret
xchg
cmp
and
fs
push
leave
ds
or
hlt
push
pop
and
xchg
lcall
sarw
cld
in
sbb
xor
aam
cmp
nop
cmpsb
adc
push
les
add
cmp
and
dec
mov
push
sub
push
mov
add
mov
cmpsb
mov
mov
lret
add
add
inc
add
pop
cmpb
cwtl
loope
mov
xor
mov
mov
data16
dec
pop
data16
sbb
inc
rol
push
sbb
mov
push
add
test
shll
imul
adc
or
add
add
adc
sbb
mov
sbb
push
fiaddl
pop
dec
pop
inc
das
dec
inc
pop
and
sbbb
or
je
dec
test
jb
ds
movsb
cmp
enter
pop
mov
aam
pop
add
hlt
loop
into
mov
xchg
nop
push
dec
dec
mov
lods
in
cld
xor
rcrl
cmpsb
inc
mov
add
adc
inc
xchg
movsb
jb
xchg
nop
add
in
ljmp
enter
jbe
es
inc
fsqrt
push
xor
add
cs
enter
fmuls
mov
dec
xor
shlb
adc
jp
nop
inc
pushf
add
push
or
bound
test
push
daa
fwait
mov
adc
repz
das
push
mov
lret
adc
cmp
jg
fwait
stos
fdiv
sarb
xor
or
or
push
pushf
pushf
data16
sbb
dec
test
pusha
das
xchg
pop
repnz
sub
enter
shll
lods
xchg
and
test
and
cmpsl
nop
mov
dec
add
andb
sahf
push
adcl
fs
loopne
enter
hlt
inc
shlb
cmp
pop
add
push
adc
mov
mov
movb
fisubs
and
pusha
mov
cmp
sub
nop
cmc
xchg
movsl
cmp
and
xchg
add
in
xchg
sub
dec
mov
fadd
shll
or
jb
xchg
lret
sbb
sbb
outsb
lret
push
lock
nop
or
inc
movsl
nop
adc
and
sub
pop
rclb
and
inc
and
les
mov
ret
sbb
sub
add
or
xor
dec
cmp
mov
xor
inc
inc
mov
ficoml
loopne
es
mov
push
push
into
testb
test
fsubl
adc
cltd
xchg
shlb
xor
fwait
push
mov
sub
movsl
es
ficomps
movsb
push
inc
pushf
add
mov
shlb
ss
lcall
scas
and
ret
or
out
cmp
ror
or
into
cmp
hlt
add
push
xchg
push
bound
pop
sub
test
add
pop
sub
cmp
push
dec
add
mov
or
or
jp
stos
add
add
mov
loope
pop
adc
test
imul
in
mov
sub
pop
pop
cmp
inc
nop
pop
shrb
fwait
add
lds
push
out
pop
test
xor
sub
mov
ds
int3
mov
call
xchg
lea
adc
fstps
inc
cmpb
adc
jge
inc
xchg
lcall
add
dec
ret
add
push
sbb
add
in
mov
add
cltd
add
fwait
mov
or
movsb
xchg
jle
add
add
pop
dec
insl
sub
ret
xor
pop
push
inc
popa
or
or
test
adc
js
lods
or
sbb
push
xchg
dec
inc
dec
push
int3
xchg
lods
dec
mov
adc
andb
insb
lret
mov
jb
lahf
sbb
mov
mov
ret
sbb
lods
rolb
arpl
test
push
sbb
push
ljmp
mov
xlat
ror
movsb
xor
rorb
lock
add
pop
dec
add
outsb
cwtl
fdivp
test
loopne
pusha
add
fdivs
pusha
negb
and
out
stos
lea
add
iret
or
xor
inc
and
sub
movsl
add
insl
mov
mov
or
icebp
push
shlb
dec
push
push
xor
or
jb
jbe
mov
xchg
xor
enter
jo
xor
and
mov
xchg
ret
or
inc
cmp
pop
mulb
decb
push
cmovp
adc
andl
mov
jle
fisubs
mov
lods
pop
push
dec
data16
sbb
sub
cmp
ret
ficoms
sbbb
outsb
pop
mov
adcb
jo
dec
aam
pop
mov
nop
je
shrl
xor
mov
adc
adc
mov
cmp
gs
mov
test
cmp
xor
fcmovb
std
push
test
cmp
rolb
fnsave
adc
in
add
inc
push
cmc
dec
add
test
cmp
bound
mov
popa
and
push
or
push
rolb
push
inc
mov
outsb
push
adc
pop
fcoml
dec
inc
cwtl
and
push
pushl
stos
inc
cld
insb
adc
inc
movsl
add
mov
loope
cli
ds
mov
sbbb
inc
lea
push
dec
push
inc
daa
adc
lds
adc
mov
cltd
or
outsl
inc
or
mov
pop
sbb
test
test
or
cmpb
mov
xchg
mov
and
or
sub
ficoms
imul
push
imul
or
xchg
xchg
push
cs
xor
mov
mov
cmp
xor
mov
clc
out
xchg
rolb
ds
add
fs
pop
das
sub
sbb
aam
cmp
mov
call
sbbl
push
ljmp
cwtl
aam
adc
mov
mov
sub
or
es
mov
and
and
adc
add
ret
mov
xchg
and
push
aam
loopne
mov
scas
xchg
mov
into
jb
or
roll
mov
xor
push
jo
nop
push
orl
sub
stos
xchg
inc
out
mov
imul
adc
fcoml
in
adc
pop
fisubrl
sbb
xorb
popa
inc
cmp
mov
add
insb
sub
in
shll
and
push
xchg
aam
fimuls
cmpsb
xor
test
pop
and
cmpsb
xchg
jno
add
pusha
push
nop
dec
add
test
or
sbb
cwtl
inc
xor
mov
cmp
mov
push
and
je
test
push
inc
sub
cli
xchg
bound
pop
test
out
pop
xchg
rclb
fisubl
insb
push
ret
js
cmp
call
adc
push
pop
or
and
in
sub
lock
or
dec
dec
and
mov
sub
and
push
mov
mov
sbb
aam
push
mov
enter
daa
movsb
mov
dec
or
fcoms
les
popf
sub
add
sbb
mov
fs
add
jp,pt
dec
xchg
push
cwtl
mov
dec
adcb
adc
xchg
inc
jb
mov
mov
dec
fidivrs
dec
aad
add
or
xchg
cli
clc
adc
mov
add
cmpsb
int3
push
cmp
ss
ljmp
push
mov
xchg
and
rolb
inc
sub
mov
sub
xchg
or
lods
or
pop
or
cld
xor
xchg
imul
lods
adc
jg
call
inc
cmpsb
ret
pop
push
lock
pop
dec
aam
insb
cwtl
sti
sub
fwait
js
sbb
jo
dec
inc
or
loopne
cmpsl
addl
inc
adc
mov
push
or
lcall
add
add
leave
add
aam
std
pop
push
shll
sub
push
insb
sub
inc
and
pop
xchg
or
adc
inc
cmpsb
mov
mov
cwtl
sbb
fadds
inc
cmp
mov
test
dec
add
and
fistpll
subb
adc
sbb
lret
mov
fidivs
sub
rorb
and
repnz
mov
mov
add
pop
je
and
call
cli
clc
and
ss
adc
push
jle
jno
and
pop
mov
dec
shl
and
mov
push
int3
push
sbb
sub
push
addb
and
pop
mov
adc
xor
add
repnz
cmp
mov
add
inc
adc
mov
cmp
pusha
popf
sub
adc
inc
or
hlt
jne
sub
push
inc
hlt
push
mov
add
cmp
push
pop
inc
mov
adc
pop
adc
inc
pop
xchg
adc
fadds
sbb
inc
and
cmp
or
enter
inc
sub
add
daa
adc
add
je
inc
mov
nop
inc
xchg
sub
sbb
jo
xchg
inc
push
in
pop
andb
ret
das
repnz
xchg
inc
cmp
xor
mov
cmp
cmpb
lcallw
pushaw
rorb
subb
xchg
adc
bound
xor
addr16
sub
rcrb
add
ljmp
iret
mov
test
push
shlb
xchg
lret
add
xor
add
adc
ret
dec
mov
push
xchg
dec
loopne
aam
fadds
pop
add
push
xchg
push
and
sub
call
jb
and
repnz
or
inc
dec
or
and
dec
rcl
inc
add
sbb
and
test
adc
cmp
into
loope
fisubl
scas
xor
sbb
lret
mov
dec
mov
xor
mov
fbld
mov
add
xor
aaa
or
daa
sbb
mov
inc
loopne
inc
test
inc
dec
sbb
mov
and
push
inc
add
sub
and
icebp
xor
inc
add
pop
or
movsb
das
dec
or
sub
sbb
adc
and
nop
push
adc
xor
adc
out
sbb
inc
jnp
jp
iret
orb
push
xor
and
mov
mov
mov
nop
cltd
and
ss
lret
and
push
mov
push
or
incb
data16
push
mov
stos
adc
push
adcb
and
adc
stos
inc
sub
xor
shlb
mov
or
lcall
jbe
dec
xchg
sti
mov
pop
push
or
or
ficompl
and
nop
mov
xor
lcall
mov
int3
insb
in
imul
jae
xchg
xchg
push
popl
xor
inc
lods
test
jo
decb
cmp
loope
jge
xor
call
inc
or
jp
sbb
xchg
test
and
adc
mov
mov
movsl
ss
mov
push
xor
push
leave
adc
nop
pop
jb
cltd
sbb
fwait
scas
mov
adc
lea
ds
mov
test
sbb
ret
cmpsl
xor
jecxz
ret
inc
js
cmp
ds
adc
pusha
leave
pop
pop
xor
dec
sub
mov
mov
fsubrs
sbb
mov
mov
call
testb
pop
lss
aad
mov
dec
sub
mov
notb
jo
xchg
pop
adc
movsb
rorb
sbb
mov
cmpb
mov
pop
cs
test
les
testb
xchg
dec
push
jbe
sahf
mov
xor
sbbb
cld
inc
add
adc
ficompl
je
and
mov
aaa
andl
adc
call
dec
add
cmp
adc
sub
es
and
xchg
pop
jb
xchg
hlt
mov
xchg
cld
scas
sub
leave
add
add
xchg
loopne
mov
add
push
aam
or
mov
sub
lock
in
adc
lcall
call
imul
add
push
xchg
lea
xor
dec
add
aam
or
fdivs
jle
or
inc
dec
mov
and
fdivrl
push
mov
add
add
rorb
jp
xchg
add
inc
mov
add
les
add
andb
xchg
push
xchg
sbb
subl
iret
in
adc
loop
mov
jo
fs
data16
inc
shrl
cmpsb
pop
mov
mov
movsl
inc
pusha
mov
sbb
add
or
xchg
lret
inc
lcall
es
imul
addl
pop
or
pop
jl
es
es
mov
ljmp
mov
shrb
cs
inc
push
fiadds
cwtl
push
xor
mov
dec
push
pop
sbb
cmp
or
dec
fdivr
clc
push
push
add
lock
add
push
rol
sub
popa
xorb
icebp
jbe
mov
ljmp
mov
adc
push
xchg
and
mov
and
xchg
push
sub
rclb
jo
mov
xorl
rolb
test
xor
ss
and
add
add
push
cltd
dec
and
test
pop
rorb
or
cld
push
and
je
adc
bound
add
or
or
mov
cmp
js
ss
lods
add
jbe
push
push
push
faddl
or
pop
mov
sbb
push
cmp
imul
jb
inc
add
dec
xchg
movsb
mov
hlt
sahf
mov
adcl
mov
xor
adc
test
movsb
aam
dec
cld
or
rcrb
push
insb
or
dec
popa
sub
fildl
mov
orb
mov
lods
aad
dec
sbb
inc
cltd
or
sbb
mov
xor
push
mov
mov
xchg
mov
adc
xchg
dec
push
test
mov
das
inc
enter
sub
js
jecxz
inc
data16
xchg
les
cs
flds
test
adc
push
xor
testb
add
inc
repnz
or
sbbl
nop
sbb
inc
sub
or
ret
ret
adc
xor
dec
jae
mov
data16
push
push
std
in
add
pusha
sbb
push
js
xor
loop
lods
pop
sub
lcall
adc
jbe
adc
dec
add
js
test
int3
push
push
test
pop
cmp
test
mov
inc
test
int3
movsl
nop
add
mov
mov
call
ficomps
mov
xor
adc
int3
mov
test
or
leave
mov
sbb
faddl
pop
das
inc
adc
popa
pusha
inc
dec
inc
xchg
and
push
mov
mov
jb
pop
xchg
xchg
nop
push
testb
inc
and
data16
xorb
insb
dec
jp
sub
cmp
fdivl
push
adc
sub
dec
adc
push
mov
and
aam
pop
loope
test
adc
enter
jo
test
xchg
push
push
push
aam
clc
pop
call
enter
inc
mov
lds
sub
je
adc
sbb
push
shlb
loop
loope
inc
mov
dec
je
pusha
jo
inc
inc
mov
mov
dec
or
sbb
or
adc
cmp
xchg
xchg
ret
pop
jl
and
subb
enter
enter
xchg
sub
push
hlt
or
pop
add
gs
dec
pop
sarb
adc
outsb
dec
les
or
in
out
fdivs
xor
inc
or
cld
dec
push
mov
xchg
lods
add
mov
sti
jl
push
push
es
inc
scas
dec
mov
pop
pop
and
and
pop
lret
push
push
push
js
push
sub
mov
sbb
inc
rsqrtps
data16
enter
insb
adc
jo
jb
xchg
popf
dec
pop
xor
adc
cwtl
push
les
fcoms
sub
push
pop
mov
or
mov
add
dec
gs
dec
mov
gs
mov
push
rorl
sub
mov
lea
cmp
xchg
shrb
js
dec
loope
or
mov
fcomps
out
scas
push
in
and
xchg
adc
add
sbb
shll
cld
mov
xchg
stos
pop
push
mulb
and
push
fadd
inc
or
sbbb
jbe
adc
and
movb
push
fs
inc
add
dec
pop
mov
enter
pusha
push
push
addr16
push
sub
fsubs
sub
and
cmpsb
rclb
in
sti
pop
in
test
inc
fs
xor
adc
sub
jmp
and
outsl
loopne
mov
mov
int
gs
call
gs
xor
cs
insb
add
pop
cld
inc
mov
sahf
lock
dec
push
insl
into
pop
loopne
jecxz
lcall
lods
rcl
adc
or
mov
jbe
fs
test
lods
in
nop
test
mov
push
in
push
sub
xchg
add
rolb
outsb
add
sarl
jb
inc
ret
dec
bound
add
xchg
sub
lea
and
cs
cld
inc
fisubs
dec
sahf
inc
sub
cwtl
lds
add
push
ret
movsb
dec
push
xchg
push
mov
stos
and
sbb
dec
scas
pushf
les
and
in
les
je
into
mov
cltd
and
les
xor
mov
jno
fadd
push
shrb
inc
sbb
push
sahf
aaa
pop
adc
push
in
scas
cmp
mov
pusha
xchg
js
mov
decb
popa
xchg
dec
add
xor
adc
xor
push
push
or
add
or
cmp
sbb
faddp
xchg
dec
push
pusha
mov
mov
adc
or
and
jl
push
or
call
jecxz,pn
in
or
sbb
sbb
sbb
push
cmp
out
int3
clc
mov
sti
mov
mov
mov
les
cmp
movsb
lods
fmull
mov
test
gs
mov
xorb
dec
adc
mov
faddl
push
add
or
inc
leave
sub
adc
mov
inc
fiadds
dec
pop
ret
cmp
xchg
adc
sub
pop
mov
call
adc
enter
push
shrb
xchg
xor
mov
push
cmp
ss
cs
rolb
or
lock
adc
sub
insb
jle
add
add
imul
push
shlb
ljmp
mov
leave
dec
dec
xor
xlat
icebp
xor
call
jl
push
jb
shr
pop
dec
push
dec
es
push
add
cmp
adc
and
and
sub
jb
inc
ror
fmuls
adc
pop
cmp
outsl
iret
les
inc
inc
mov
rclb
mov
dec
inc
inc
ljmp
xchg
iret
insb
jo
mov
test
leave
jae
pop
dec
leave
and
push
inc
or
shl
das
dec
sub
adc
adc
add
test
out
push
nop
push
lods
and
push
mov
add
push
xchg
inc
inc
mov
add
xchg
cwtl
lock
mov
push
push
lods
dec
and
outsb
scas
push
push
repnz
mov
es
add
lock
sti
fdivl
lds
xchg
push
pop
adc
movsl
add
push
push
cmp
mov
call
pop
les
sbb
into
cmpsb
add
mov
jb
sub
xchg
pop
lcall
sahf
insb
sbb
adc
out
cmp
mov
or
dec
iret
pop
cmp
test
pop
sar
push
subb
xorb
pusha
shld
cltd
popa
xor
in
mov
addb
add
or
inc
dec
xchg
adc
mov
mov
xchg
call
lret
test
mov
and
das
pop
pop
leave
mov
sbb
in
push
xchg
sbb
mov
and
ljmp
loopne
add
hlt
into
lock
fsts
pop
rclb
dec
add
xchg
fsts
add
mov
and
leave
xor
ret
inc
movsl
pusha
pop
fisubrl
int3
sbb
out
cmp
xchg
or
fsubrl
addps
ljmp
fiaddl
fs
stos
inc
and
insb
push
sub
xchg
or
adc
inc
add
movsl
xor
in
adc
outsb
call
sbb
pop
push
cmp
sbb
sti
mov
push
cmp
or
rolb
out
fstpt
sahf
jl
scas
sub
push
or
outsl
jl
jae
or
and
sbb
or
add
push
sti
add
int3
sub
add
mov
push
sbb
jae
mov
insb
adc
adc
mov
idiv
iretw
loop
ret
sbb
sub
aam
xchg
xchg
mov
test
test
mov
je
inc
or
filds
sub
xor
andb
pushf
mov
je
sbb
or
fcoml
xchg
or
popa
mov
inc
inc
sub
rclb
jecxz
or
inc
movsb
push
or
push
pop
xchg
cmc
js
mov
xchg
add
push
into
dec
sbb
int3
push
sub
orb
cmp
adc
adc
xor
cmp
rcll
enter
xchg
adc
loope
push
movsb
adc
cmpsb
mov
aam
popa
sub
xchg
inc
test
ret
and
push
dec
or
out
push
mov
or
lds
mov
jo
dec
or
sub
and
push
dec
sbb
inc
mov
adc
xchg
into
mov
xchg
push
xor
mov
enter
imul
pop
mov
or
fdivs
sub
inc
cmp
test
or
sub
out
insb
adc
and
jp
add
test
pusha
add
inc
cmp
inc
test
lea
mov
js
js
dec
ret
in
stos
cmpsb
sub
jb
push
stos
xor
mov
xor
and
fadds
xor
adc
push
js
pushf
add
nop
gs
dec
ret
fimuls
sbb
cs
orb
sahf
push
es
shlb
adc
sbb
in
mov
mov
jl
sbb
leave
pusha
ss
lret
xchg
addb
xor
xor
mov
pushf
aam
inc
add
out
rol
nop
mov
rcr
les
jbe
test
xorb
and
rclb
mov
jb
loope
and
add
cmp
scas
out
test
add
mov
mov
push
xor
jne
adc
lcall
dec
push
dec
add
rcrb
fcoml
pop
mov
shlb
mov
outsb
ficompl
add
jle
cmp
adc
je
and
xchg
test
push
sbb
ret
in
pop
test
mov
pusha
add
xorb
cmpl
orb
test
js
es
mov
mov
hlt
or
add
jo
pop
xor
or
push
jle
push
popf
rcrb
mov
adc
sbb
jl
push
scas
jb
fs
push
inc
xchg
xchg
bound
jmp
insb
dec
sbbb
call
ret
inc
sub
or
and
cmp
sbb
mov
mov
sbb
leave
mov
inc
ds
nop
mov
jge
xchg
xchg
in
int3
cmpsb
or
cmpb
loopne
or
rorl
push
cli
push
push
test
mov
push
les
sub
dec
adc
or
movsb
adc
int
iret
into
inc
andl
rclb
bnd
pop
sub
add
mov
lods
or
add
loopne
call
outsb
pushf
popa
inc
ret
adc
pusha
nop
xor
imul
andb
and
adc
cmpb
push
mov
inc
dec
loop
in
add
add
call
arpl
and
mov
push
cwtl
fs
dec
mov
mov
jo
cmpsb
aam
fidivs
cwtl
push
inc
movsb
arpl
push
lock
lods
inc
xchg
ds
and
insl
mov
push
mov
xchg
int3
and
cmp
sbb
or
and
or
ljmp
andl
fsubrs
ss
cmp
mov
andb
xchg
divb
pop
out
test
repz
lret
xchg
pop
aam
add
gs
push
and
cmpsb
pop
xor
pusha
mov
loopne
pop
int
add
pop
mov
and
jo
cmp
adc
adc
or
mov
xor
or
dec
push
test
movsl
push
lods
sub
pusha
divb
pop
ss
cmp
leave
jne
subl
or
test
sub
or
faddl
xchg
push
adc
push
add
fstpt
test
sbb
and
xor
addl
pop
xor
test
cmp
mov
sbb
jo
dec
int3
jbe
orb
jo
or
bound
push
xor
adc
pop
pop
jl
mov
or
sub
xchg
les
jp
loopne
xchg
enter
rclb
movsb
std
add
sbb
and
push
adcl
add
pushf
and
sbb
xor
add
cld
and
or
mov
jcxz
or
cmp
xchg
mov
sbb
dec
dec
fiadds
xchg
mov
adc
adc
xchg
push
data16
pusha
sub
xchg
push
fsubs
mov
xor
pop
cwtl
xor
mov
xor
dec
mov
loopne
cmp
and
dec
mov
or
add
mov
lcall
add
in
push
call
cmp
nop
and
push
bound
dec
cltd
or
or
sti
xchg
and
xor
mov
lret
or
push
ss
push
xchg
add
dec
movsl
xchg
sbb
data16
into
adc
lods
ss
ds
push
sbb
es
es
inc
cld
shrb
add
add
add
fiadds
adc
in
push
sbb
xor
sub
push
cmpsb
fcoml
dec
dec
push
sbb
add
int3
lcall
add
adc
mov
xor
adc
sub
aad
xchg
adc
inc
movsb
addb
push
test
add
mov
xor
aaa
jbe
scas
push
add
insb
cmp
xchg
adc
dec
shrb
add
sub
shlb
sbb
aad
dec
or
cwtl
mov
popf
or
dec
jbe
ljmp
or
nop
sbb
inc
and
ficoms
push
xchg
xor
cs
xchg
shlb
adc
aam
ss
push
pusha
js
mov
nop
mov
xchg
xchg
mov
loop
xor
ret
adc
or
jo
sbb
push
movsl
in
mov
mov
sbb
cmpb
pushf
add
leave
add
add
ss
and
add
insb
fdivrp
fisubs
adc
cmp
mov
adc
test
sahf
es
test
push
test
nop
mov
xor
or
push
outsb
pushf
mov
pop
push
push
add
cwtl
adc
inc
test
adc
dec
and
jae
loop
cwtl
add
mov
rcrb
scas
mov
fcomps
movsb
sbb
inc
jb
xchg
pusha
xlat
enter
jp
jae
dec
xchg
xor
cmp
fdivl
jb
popf
add
pop
inc
sbb
xchg
jo
js
loopne
mov
sbb
push
xor
hlt
ficoms
inc
dec
xchg
add
mov
pop
mov
test
or
jl
nop
test
sbb
andb
pusha
jo
mov
jb
rorb
dec
adc
pop
add
rcll
je
and
pop
adc
sub
sbb
fs
adcb
cltd
xor
sbb
pop
pop
adcb
mov
or
xchg
mov
xor
add
adc
add
mov
mov
mov
sub
andl
adc
aas
mov
xchg
push
inc
imul
adc
adc
and
jle
adc
xchg
nop
sbb
aaa
outsb
inc
ret
pop
data16
xor
add
fisubs
bswap
xchg
push
sub
sub
mov
cmp
inc
add
les
mov
js
aam
inc
cmpb
fcompl
ret
cmp
jg
pusha
xor
inc
adc
je
pop
jge
test
addb
sbb
inc
add
cli
dec
ss
add
mov
into
sub
cmp
jo
adc
outsb
mov
daa
inc
test
push
pushf
xchg
pop
xor
pusha
cltd
ret
clc
cmpsb
or
les
lea
mov
mov
xor
xchg
and
and
mov
xchg
adc
inc
push
fcoml
xor
adcb
scas
ror
mov
test
pop
xor
mov
leave
and
add
mov
adc
jo
adcl
data16
and
or
pop
mov
shlb
add
add
mov
adc
loopne
mov
inc
push
mov
inc
cmp
mov
xchg
test
sub
mov
dec
push
dec
mov
mov
pop
inc
sbb
push
test
or
mov
insb
push
call
cwtl
push
inc
int3
sbb
or
adc
rcrb
outsb
inc
inc
adc
adc
ds
inc
mov
fdivl
leave
sbb
stos
inc
sbb
add
or
and
xor
xchg
push
dec
inc
lret
test
shlb
adc
sub
lock
push
add
enter
mov
subb
rclb
mov
out
leave
add
dec
push
pop
ss
add
nop
js
insl
cwtl
sbb
loopne
adc
movsb
gs
jo
shlb
inc
xor
mov
xchg
and
sub
les
enter
and
pop
add
or
je
push
test
lcall
mov
fs
mov
jb
test
add
and
add
fcmovb
sbb
dec
or
movsb
addr16
dec
add
lret
push
push
mov
enter
fmuls
push
cmpsb
or
push
dec
insb
mov
popf
les
add
test
cltd
pushf
cmp
xchg
mov
xor
adcl
pop
pushf
xor
orb
inc
sub
pop
pusha
orb
lcall
or
movb
and
sub
inc
xor
pop
push
loopne
jecxz
add
push
shrb
push
cli
inc
and
and
push
enter
mov
cmp
ljmp
sbb
sub
add
mov
adc
xchg
cmp
xor
enter
in
lods
or
int3
push
push
imul
enter
and
and
jne
adc
xor
pop
jbe
test
iret
cmp
es
mov
int3
cmpsb
mov
pop
add
add
pop
inc
scas
adc
push
shrb
xor
or
jp
aad
pop
sbb
dec
sub
shlb
pop
nop
push
sbb
sub
cmpsb
inc
xorb
cli
adcb
dec
popf
aam
andb
ss
add
sar
push
fwait
xor
fiaddl
dec
cmp
hlt
shrl
cmp
jg
pop
fcmovnb
shrb
xchg
stos
filds
xor
adc
daa
je
adc
outsl
in
mov
or
fistl
js
rorb
fs
bound
sub
lcall
xor
sbb
hlt
cmpsl
mov
sbb
mov
and
mov
sbb
mov
rolb
icebp
xor
mov
fnstenv
cmpsb
push
jg
arpl
jg
lret
sub
xorl
fucom
mov
scas
test
sub
or
fsubrs
test
es
adc
add
ror
and
mov
add
aad
fs
lds
sbb
add
sbb
mov
sar
push
mov
enter
add
cmp
es
add
sub
pop
rolb
jmp
adcb
or
in
lds
movsl
dec
sub
sbb
decb
inc
cmp
xchg
dec
sbb
inc
sub
and
pusha
fsubrs
adc
enter
mov
adcb
pop
cld
lock
shrl
enter
xchg
push
mov
dec
sbb
add
sub
stos
dec
and
mov
xor
test
or
popa
xchg
mov
pop
adc
and
jo
and
pop
mov
adc
sahf
mov
inc
loope
call
add
jo
outsb
je
adc
stos
cltd
ficoms
pop
inc
jne
mov
and
lock
je
sub
xor
shl
insb
inc
cmp
js
or
sub
cmp
push
adc
mov
aam
adc
mov
dec
sub
or
gs
mov
and
or
pop
into
add
sbb
pop
pusha
pop
inc
or
sub
movsb
daa
fadd
fs
dec
sub
mov
xor
sub
les
dec
cmp
or
xorl
les
push
mov
ret
mov
xor
adc
out
cmp
jo
data16
hlt
pop
pop
push
les
add
sub
mov
inc
dec
sarb
rclb
push
daa
fistl
test
insb
mov
orb
cwtl
dec
and
xchg
dec
xchg
sbb
lods
leave
sub
xchg
xchg
push
inc
push
jb
lds
cwtl
pop
clc
mov
or
fdivs
test
xor
push
pop
cwtl
mov
and
add
add
mov
mov
or
pop
lahf
inc
mov
ljmp
pusha
les
ficoml
rcll
add
mov
adc
xchg
xchg
inc
mov
mov
ds
gs
push
push
movsl
pop
add
add
aam
pop
xor
mov
mov
cmpb
call
inc
or
adc
nop
adc
adc
into
mov
addl
cmp
test
add
mov
or
add
pop
adc
jno
fcmovb
ret
pusha
imul
xchg
ljmp
rol
mov
ds
fsubs
adcb
pushf
inc
dec
dec
lods
je
or
pushf
loopne
aam
add
pushf
sbb
rcrb
movsl
or
add
repnz
filds
push
mov
pop
sub
mov
xor
cmp
aam
jne
test
mov
inc
sbb
pop
lods
adc
jb
mov
xchg
mov
insb
test
addb
push
ds
movsb
imul
add
dec
sub
jb
mov
jecxz
leave
lcall
add
or
xor
test
add
ds
xchg
xor
cmp
dec
mov
xchg
inc
jo
loopne
xchg
add
nop
fcmove
dec
or
sbbb
test
adc
dec
bound
adc
cwtl
rcrb
mov
or
adc
xorl
pop
test
push
andl
add
mov
lock
roll
sbb
out
mov
cmp
or
adc
in
jae
jo
mov
fcmovnb
call
addb
xchg
or
ss
sub
aam
popa
or
test
dec
xor
sbb
lfs
or
lcall
sbb
xor
xchg
adc
mov
xor
clc
enter
mov
repnz
in
dec
push
sbbb
or
ss
ret
es
xchg
cmp
xchg
xchg
insb
pop
icebp
decl
lahf
adc
clc
out
xor
adc
jmp
dec
add
mov
xorb
mov
ss
rorl
xchg
adc
xor
push
add
rclb
inc
dec
dec
cwtl
lcall
push
outsb
sti
push
add
push
icebp
in
jb
xor
inc
xchg
mov
cli
test
dec
test
cld
call
cmpb
and
loopne
test
mov
into
and
rclb
sub
mov
mov
jnp
test
push
ss
jp
les
adc
cmc
dec
or
pop
mov
ret
and
pop
and
leave
ret
div
pop
or
and
loope
pop
repnz
xchg
or
fsubl
mov
mov
ret
les
es
and
test
ret
xchg
sub
jp
cmpb
xchg
inc
xor
out
adcl
and
cmp
dec
push
outsl
and
pop
dec
xchg
adc
xchg
push
add
inc
inc
cmp
mov
ret
repnz
inc
leave
and
cli
inc
outsb
or
out
les
inc
lcall
into
pop
je
push
in
xchg
inc
shrb
shll
adc
cmp
outsb
add
dec
push
subb
loopne
filds
fcompl
adc
cmp
push
dec
mov
push
cwtl
jne
sub
dec
xor
add
push
inc
jo
xor
xchg
inc
adc
mov
in
jb
add
mov
add
rcll
popa
lret
mov
push
or
push
push
sub
adc
test
mov
mov
or
rolb
loopne
push
in
scas
add
and
sub
xchg
movsl
out
rolb
xor
jle
dec
lcall
inc
pusha
adc
xchg
inc
and
or
push
dec
push
es
push
or
add
int3
add
or
sbb
dec
loop
push
push
js
xor
or
add
sbb
add
jle
dec
or
sbb
inc
xchg
ficoml
hlt
or
mov
mov
test
stos
add
fistps
psubusb
jp
aad
addr16
aam
fbstp
dec
cli
ss
or
ss
adc
adc
pop
rcll
bound
xchg
xlat
ss
scas
mov
jl
and
xor
rclb
ds
movsb
add
mov
sbb
sahf
js
lcall
xchg
faddl
xor
js
xchg
sbb
sbb
pop
sub
sahf
xchg
ret
cmp
adc
movsb
es
sbb
fstps
data16
and
lds
mov
mov
cmpsb
jns
hlt
adc
jb
orl
lret
or
and
jbe
or
sbb
sbb
es
mov
nop
mov
xor
roll
and
pusha
add
mov
and
test
sbb
xor
call
add
fiaddl
jl
inc
sbb
xchg
leave
pop
outsb
lret
push
scas
push
fisubl
mov
sbbl
aam
jecxz
sbb
push
test
test
mov
addb
xor
jecxz
adc
loopne
test
xchg
inc
push
in
sbb
loop
inc
orb
xchg
pusha
test
jb
xorl
dec
sbb
and
inc
shl
sub
lret
repnz
lods
dec
daa
adc
stos
in
cmp
xchg
mov
and
adc
add
jo
add
and
cmp
add
imul
int3
add
pop
jle
ss
test
pop
mov
xor
dec
pop
pop
sbb
fstps
shlb
add
addb
and
sbb
leave
add
dec
mulb
das
sub
push
lock
push
test
dec
popa
mov
movsb
push
mov
into
mov
lret
push
or
je
call
sbb
cmp
mov
lds
and
sub
cli
xchg
loope
pop
jb
adc
adc
les
push
test
flds
fdivrp
fsub
test
in
inc
inc
in
push
iret
es
sbb
call
xchg
outsb
fidivrl
les
lea
or
enter
mov
fadd
add
mov
andl
sbb
sbb
xor
test
mov
and
and
xchg
pop
inc
pop
pop
lret
popa
inc
sub
call
cmp
inc
roll
imul
push
cmp
add
sbb
pop
pushf
and
cmpsb
sbb
in
or
fsubs
ljmp
sbb
dec
pusha
xor
orb
push
insb
out
sub
inc
loop
and
cwtl
int
inc
nop
inc
iret
mov
jl
or
shrb
roll
push
into
cmp
clc
and
sub
sbb
pushf
ds
addb
push
cmp
sarb
ret
inc
sbb
pop
or
sbb
lods
adc
rcll
stos
call
dec
cmp
dec
mov
add
cmp
and
ficomps
push
imul
sbb
aam
sti
push
into
inc
cmpsl
push
push
xchg
sub
xchg
sub
movsl
xchg
and
push
sahf
loope
push
inc
add
add
ret
xchg
ret
xchg
pop
sbb
push
inc
push
call
sub
add
pushf
xchg
add
ret
pushf
stos
sub
test
dec
push
dec
or
data16
es
xchg
rol
addl
and
inc
adc
jo
xor
and
lock
dec
mov
xchg
out
ret
push
addl
inc
enter
or
jb
dec
push
xchg
and
subl
pop
pusha
xchg
repnz
loopne
dec
inc
lret
mov
xor
mov
and
pop
lcall
cltd
add
dec
test
lcall
scas
inc
xchg
or
daa
add
jne
sarb
adc
mov
or
add
mov
into
std
or
and
pusha
fimuls
push
push
sub
push
data16
xchg
je
arpl
jmp
xchg
push
xchg
or
mov
lret
mov
sub
sbb
adc
inc
fdivs
mov
scas
int3
push
fimull
or
add
cld
bound
pop
jl
dec
mov
push
xchg
int3
inc
xchg
push
dec
jl
imul
sbb
adc
push
dec
jne
or
fs
sbbb
jbe
repnz
popa
mov
ds
adc
jle
mov
sbb
pop
pusha
daa
loop
inc
mov
xor
dec
inc
inc
jb
xchg
cmpb
adc
xchg
adcb
push
cmp
pop
sub
mov
or
lock
mov
xor
out
pop
fcoml
lock
sub
sub
sbb
aam
add
sbb
int3
cmpb
pop
jle
rorb
or
inc
ficompl
sub
xchg
test
xchg
cs
decb
lods
xchg
shrl
pop
data16
pusha
mov
jl
xchg
push
xor
loopne
stos
ss
test
aam
test
xchg
sbb
test
ret
adcb
jb
sub
inc
popa
or
pop
mov
add
mov
fs
stos
push
sub
loopne
cmp
rol
rolb
or
mov
mov
lods
or
ficoml
inc
adc
xchg
adc
call
mov
pushf
lods
xor
in
adc
xchg
test
fs
add
cld
and
stos
mov
add
dec
ljmp
sub
popa
xchg
popa
or
push
into
xor
and
fwait
cmp
add
outsb
jmp
push
adcb
insb
cs
sub
loope
loop
cmpsb
pop
add
cli
ljmp
imul
push
add
insb
mov
inc
popa
push
enter
cli
pusha
add
cmp
pop
nop
push
adc
sbb
xchg
push
dec
gs
sub
call
xchg
xor
iret
sub
sub
adc
xchg
cmpsb
push
popa
rolb
dec
lods
cli
jo
xor
sbb
mov
insb
subb
mov
rcrl
mov
sub
pop
addb
test
loopne
sbb
in
xorb
mov
mov
push
bound
sbb
mov
test
movsl
movsl
push
mov
push
mov
iret
ljmp
push
sbb
xchg
xor
push
push
inc
mov
je
cmp
rcr
sub
xchg
pop
push
mov
nop
ficoml
lods
pop
mov
and
addb
inc
dec
adc
fimull
add
outsb
mov
testb
sub
push
enter
push
inc
cltd
leave
push
stos
xchg
inc
fmuls
fistl
and
ret
mov
mov
fcoms
add
jle
adc
int
adc
std
outsb
sub
lock
xchg
inc
lock
mov
mov
in
push
adc
mov
jl
ljmp
push
and
sbb
js
iret
push
sahf
mov
stos
inc
mov
push
addb
push
mov
push
into
rcr
subl
dec
inc
sbb
lret
cmpsl
dec
push
stos
or
and
sahf
adcb
popa
inc
call
and
aam
inc
movlps
adc
inc
jbe
and
xchg
in
inc
sub
lds
flds
and
xor
inc
adc
je
filds
adc
daa
sub
lds
sbb
bound
adc
in
dec
testl
lock
push
or
shlb
inc
movsb
je
xchg
and
jo
in
insb
sbb
test
or
call
dec
add
add
fcoms
push
sahf
cwtl
push
sub
pop
push
pusha
xor
loopne
mov
mov
xorb
and
adc
xchg
fcoms
xor
add
pusha
xchg
jb
xor
mov
in
push
cld
outsb
cmc
fiaddl
push
cld
rol
mov
xchg
and
mov
call
sbb
sbb
mov
repnz
adc
mov
mov
xchg
cltd
loop
inc
jne
dec
loope
or
in
xchg
cmp
push
stos
and
idiv
je
adc
lods
mov
bound
dec
or
hlt
adc
fs
xchg
mov
jecxz
js
daa
push
and
xchg
cli
in
in
test
loop
mov
inc
insb
inc
das
add
cli
sub
scas
bound
and
je
add
mov
add
xchg
inc
dec
or
adc
and
lret
lret
aam
add
and
add
or
add
and
xchg
cld
sbb
push
test
inc
pop
push
or
mov
addb
xchg
fisubrl
sbb
add
hlt
push
or
pop
mov
add
test
mov
push
pop
cli
rcr
test
jp
fwait
xor
movsl
add
dec
mov
shlb
xchg
ret
sbb
rclb
cmp
sbb
cmpsb
inc
in
ss
xor
je
inc
bound
cltd
xchg
js
cld
clc
jo
test
rcrb
add
xchg
jbe
stos
pop
add
scas
nop
filds
xor
jae
rol
in
pop
adcb
rol
fcompp
fdivs
and
inc
dec
cmp
push
cmp
and
mov
dec
ret
xchg
dec
insb
xor
pusha
xchg
xorb
in
mov
push
xchg
and
pop
pop
lea
add
loop
dec
mov
inc
leave
adc
lcall
lret
repz
jb
and
dec
add
xchg
xchg
fcoml
add
pop
xor
js
test
sti
push
subb
pushw
nop
cs
lret
clc
ror
mov
pushf
mov
movsb
fs
dec
das
pop
or
loopne
dec
push
inc
push
sahf
test
mov
test
and
pushf
mov
sub
dec
pushf
in
aam
movsb
call
cld
je
add
xchg
popf
adc
insb
loop
add
jp
inc
insb
popa
add
push
call
inc
arpl
js
and
add
mov
xchg
rclb
fisubl
pop
test
fs
lret
adc
test
hlt
mov
mov
clc
aam
xor
push
jl
and
leave
cli
cmp
mov
imul
and
mov
jb
pop
or
test
orb
push
dec
push
and
enter
dec
enter
xor
add
jno
xor
lock
mov
in
xchg
adc
insl
dec
pop
rcrb
pop
mov
sbb
stc
std
loope
jmp
mov
or
inc
mov
push
loop
jmp
push
inc
adc
pusha
mov
mov
mov
addb
sbb
push
add
jb
mov
js
out
or
dec
leave
sbb
fsubp
loop
pop
xchg
scas
call
je
rclb
sbb
or
xor
pop
add
testb
mov
add
add
push
movsb
jb
or
dec
loopne
add
sbb
push
fs
dec
dec
jne
insb
scas
nop
adc
xor
or
pop
add
movsb
and
hlt
leave
orb
xor
stos
orb
mov
sbb
xor
loope
jb
push
lret
lods
jno
inc
rcl
outsl
push
push
clc
mov
and
pop
add
sahf
xchg
mov
fidivl
or
dec
or
pop
add
xor
xor
push
lret
cmp
fiaddl
sarb
test
inc
add
les
push
mov
pop
leave
jb
xchg
in
imul
sub
hlt
mov
jle
sti
fnstenv
dec
addr16
jb
loop
or
push
xchg
sbb
or
lods
inc
mov
add
stos
or
dec
cwtl
lret
push
movsb
sub
sysexit
pop
dec
mov
xor
adc
pusha
or
and
roll
test
es
or
or
outsb
or
ljmp
or
mov
xor
insb
je
and
ficoml
adc
test
les
add
inc
push
dec
push
mov
cmp
mov
inc
sbb
xchg
mov
jo
test
sub
sbb
mov
dec
xor
add
inc
or
ds
rorb
leave
popa
cmp
mov
popa
in
ret
or
add
in
or
mov
and
nop
call
lcall
xor
xchg
test
xchg
nop
nop
push
scas
bound
ret
sar
mov
mov
xchg
add
lock
or
push
lret
inc
cmp
inc
cmp
push
les
dec
push
or
sub
orb
test
loope
mov
xor
or
mov
sub
jl
and
cltd
push
push
rcrb
inc
xor
inc
outsl
sbb
in
push
or
dec
sub
xchg
xor
push
leave
inc
add
es
int3
ds
push
adc
xchg
mov
movsb
add
push
addb
arpl
xor
rol
loopne
lret
mov
gs
xchg
adc
call
push
bound
xchg
mov
mov
pop
sub
mov
clc
jb
add
clc
sub
mov
push
gs
push
dec
dec
inc
push
sub
sub
mov
add
xchg
adc
adc
sub
icebp
mov
incb
pop
shr
out
repz
push
mov
dec
aas
dec
sahf
push
xchg
add
scas
mov
test
cmpsb
hlt
fildll
inc
dec
cs
movsb
jmp
mov
push
js
sbb
pushf
dec
pop
std
sbb
xchg
jmp
mov
mov
out
pop
leave
push
push
shlb
and
xchg
add
xor
jo
in
es
fsubl
hlt
push
sub
popa
cld
outsb
adc
push
cwtl
add
jl
sbb
jo
rcll
mull
mov
dec
push
dec
sbb
and
dec
adc
dec
in
and
xchg
jbe
ret
in
push
lcall
sbb
shlb
pop
js
or
add
lret
xchg
shll
iret
rolb
sub
nop
cmp
and
adc
inc
sbb
and
mov
and
push
sub
add
mov
pop
inc
pop
sub
add
mov
adc
sub
mov
mov
mov
xor
call
ret
mov
or
or
out
xorb
add
add
ret
push
jle
pop
and
mov
push
mov
push
iret
lock
shll
inc
ret
jle
lock
sbb
data16
or
pop
js
and
mov
and
cmpsb
scas
std
dec
roll
push
or
cmpb
ret
add
or
inc
inc
adc
push
mov
mov
or
mov
add
push
repnz
in
mov
popa
xchg
and
push
mov
dec
adcb
loopne
ljmp
hlt
add
add
inc
inc
popa
xchg
inc
cld
clc
dec
adc
testb
mov
imul
or
scas
stos
mov
pop
add
mov
push
push
data16
es
or
cld
push
inc
or
rcll
pusha
adc
pop
push
push
sub
lods
xor
push
xor
xchg
call
test
or
cmp
ret
dec
push
push
fdivr
push
mov
and
rolb
or
ret
pop
xchg
xchg
sbb
push
add
mov
lock
je
xchg
mov
movsl
cmp
in
sbbb
or
call
loop
in
mov
sbb
push
adc
addb
mov
popa
movsb
add
mov
push
cwtl
data16
lock
in
mov
int3
leave
pushf
test
adc
lds
xchg
addb
adc
ret
sbb
rorb
pop
add
sti
inc
mov
iret
xchg
rorl
push
movsb
testb
adc
push
pushf
inc
or
leave
inc
inc
push
mov
add
or
mov
adc
inc
es
clc
jp
addb
xchg
and
jl
mov
lock
add
hlt
push
in
xor
and
outsb
js
stos
xor
xor
add
nop
sub
lea
lret
data16
push
ror
xchg
pop
cli
shlb
mov
in
test
xor
andl
nop
xor
adc
das
mov
push
cmp
test
repnz
rcl
mov
ret
lock
xchg
push
dec
and
test
jecxz
pop
dec
add
xchg
ljmp
pop
mov
adc
pop
add
or
sub
mov
add
insb
mov
mov
jl
add
addb
push
test
cmp
xchg
fimull
push
adc
bound
pop
mov
mov
inc
pusha
cmpsb
or
sbb
cld
mov
or
xor
rorb
inc
and
inc
mov
fisubrs
les
or
mov
push
and
inc
and
push
mov
inc
test
xorb
adc
mov
add
faddl
pusha
mul
mov
xor
or
and
add
icebp
or
push
inc
rcrb
sbb
sahf
push
or
mov
sub
add
call
sub
loopne
xchg
jg
adc
lcall
dec
bound
int
stos
add
mov
scas
or
mov
xchg
cli
adc
xor
add
insb
adc
int3
rorb
push
and
and
and
nop
sub
push
push
mov
adc
add
test
push
mulb
and
data16
xor
test
pusha
test
rclb
imul
xchg
ret
inc
add
cltd
jo
and
xor
jb
dec
sbb
add
mov
xchg
mov
cmp
pusha
dec
int3
xchg
dec
daa
clc
push
enter
pop
push
test
push
pushf
arpl
add
stos
adc
add
pushf
aam
add
mov
inc
shlb
add
xor
loop
xchg
mov
and
sbb
int3
adc
sbb
mov
add
xor
aam
stos
dec
lods
add
and
test
rolb
sub
or
mov
sbb
push
test
adc
inc
out
sahf
cmp
pop
push
and
and
adc
pop
xchg
mov
adc
or
push
xor
push
add
fs
mov
add
xchg
add
fadds
xorb
cmpsb
push
add
pusha
test
leave
sub
pushf
pop
mov
je
or
jmp
repnz
jbe
jo
add
xchg
xor
sbb
lret
mov
mov
dec
and
mov
dec
xchg
mov
lret
loopne
cmp
jp
xor
dec
cs
jp
mov
and
xor
dec
push
xchg
pop
mov
divb
rclb
iret
out
add
mov
adc
pop
adc
adc
iret
inc
xchg
and
adc
mov
cwtl
inc
dec
rorb
sbb
mov
and
test
inc
in
dec
or
mov
pop
pusha
popa
jmp
in
mov
sub
ljmp
jbe
mov
pusha
lcall
jl
sbb
adc
xorb
inc
rcll
movsb
sub
je
push
add
mov
adc
pop
leave
dec
orb
cmp
pop
data16
jo
sub
push
xchg
ds
mov
rcrb
cmp
push
repnz
scas
adc
push
enter
movsb
test
add
data16
and
xchg
pop
out
cli
or
cmp
rcrb
push
or
or
adc
dec
lret
add
je
pop
pop
inc
sbb
and
inc
jae
or
loope
rcrl
add
xchg
ret
div
es
roll
scas
or
leave
push
inc
mov
mov
add
das
adc
cmp
popa
dec
bound
test
inc
dec
dec
subb
push
rorl
mov
inc
cli
fs
adc
mov
scas
push
addl
popa
rclb
add
mov
daa
inc
adc
dec
push
or
dec
dec
fdivrs
cmpsl
and
inc
sub
or
roll
xor
mov
adc
jb
orl
rcll
inc
daa
dec
dec
sarb
out
ds
and
inc
lcall
les
aad
adc
inc
add
adc
in
rol
xor
fsubrp
pop
or
sub
cmp
or
fimuls
gs
call
jns
dec
cmp
pusha
lods
inc
sub
and
mov
push
cmc
sbb
rolb
test
sbb
sbb
pop
add
js
mov
push
cmc
add
add
fnstenv
loop
sbb
adc
loopne
rorb
lods
push
adcb
fadd
sbb
mov
push
je
lcall
inc
xor
xchg
mov
xor
pop
cli
test
lcall
adc
cld
es
aas
push
sti
pop
fdivrs
push
ret
lcall
sbbb
mov
in
testb
js
nop
add
push
adc
adc
pop
cs
leave
xor
nop
jmp
xor
and
mov
inc
push
and
adc
xor
sbbb
loop
in
mov
or
inc
sbbb
sub
inc
mov
loope
movsb
xorb
push
xor
xchg
into
jbe
test
or
rorb
imul
shl
dec
pushf
add
xchg
subb
push
mov
outsb
pop
loop
and
add
fcompl
into
movsb
mov
mov
fs
fmuls
pop
push
and
or
fs
sbb
adc
push
je
dec
add
lods
int3
add
enter
aam
ffree
adc
xchg
je
arpl
push
insb
or
mov
les
and
inc
inc
add
dec
sbb
mov
lods
mov
adc
cmp
and
outsb
dec
add
enter
or
dec
mov
or
adc
insb
into
sbb
xor
add
je
cmp
and
dec
lock
rolb
or
push
mov
mov
xor
lods
push
lret
shlb
mov
out
test
push
mov
je
and
test
addb
es
mov
xchg
sbb
lods
add
adc
push
push
dec
xchg
xchg
mov
xor
xchg
pusha
xor
push
fs
xor
test
call
and
push
dec
sub
xchg
push
movsb
scas
ds
int3
arpl
cmp
iret
dec
lcall
test
adc
lock
push
cmp
or
cmp
mov
cli
je
stos
movsb
and
dec
sbb
mov
add
add
aam
xchg
ret
or
add
fisttpl
add
xorb
test
mov
pop
push
mov
jl
dec
arpl
sub
mov
sbb
fsubs
nop
pushf
xchg
nop
pop
aam
decb
mov
adc
or
and
sbbb
test
sbb
andb
cmp
dec
loopne
jo
cwtl
adc
and
faddl
inc
lret
enter
xor
orb
popa
adc
sub
imul
pop
stos
adc
adcb
dec
and
and
insb
sub
jo
adcb
nop
push
sbb
push
dec
cld
xchg
inc
cmp
or
pop
or
xchg
pop
lods
and
enter
fdivs
xor
push
nop
dec
dec
mov
data16
xor
lods
test
dec
add
sbb
jo
and
mov
addb
mov
or
fcoml
push
cmpb
pop
sub
mov
cwtl
sbb
mov
adc
test
sbbb
mov
fidivl
xchg
push
pusha
scas
pop
xor
out
inc
jb
pop
cs
inc
xor
nop
out
in
mov
nop
aam
sbb
cmp
orb
inc
xor
cmpsl
and
or
push
mov
mov
inc
push
sub
mov
add
loop
push
jo
dec
dec
mov
jb
dec
cmp
pop
xor
and
data16
or
popa
shrb
rorb
xchg
inc
pusha
or
cwtl
sti
inc
and
or
add
test
and
outsb
add
into
rorb
shlb
into
xchg
cmp
xor
and
ret
mov
sub
xchg
push
push
orb
adc
or
movsb
add
dec
shlb
add
sbb
or
adc
mov
jae
push
fs
mov
pop
test
sbb
in
aam
sbb
mov
std
loop
lret
cmp
and
push
mov
push
or
mov
add
into
js
add
add
xchg
sub
xchg
es
jo
je
or
int3
xor
fiadds
outsb
cmpsb
iret
nop
push
stos
movsl
inc
push
mov
mov
sub
ret
jmp
rcll
dec
dec
cmp
ds
inc
popa
fmuls
dec
repnz
xchg
pop
lcall
inc
into
xor
mov
fiadds
fisubs
adc
rorb
xor
imul
and
xchg
jno
movsb
in
into
rolb
andb
dec
lods
or
adc
mov
shll
sbb
movsl
xchg
inc
sub
adc
and
or
rclb
hlt
or
adc
lcall
fisubs
scas
push
pop
outsb
inc
pushf
es
dec
loope
adcl
xor
sbb
sub
rcrl
and
ret
mov
sahf
pop
clc
dec
inc
sub
xor
gs
fcomps
mov
fisubs
cmp
mov
dec
shrb
push
add
push
ret
or
mov
dec
push
inc
inc
inc
or
nop
jmp
or
cwtl
adc
movsb
and
jo
fcomps
and
cs
stos
add
fcoml
push
xor
add
pop
outsl
shr
insl
dec
psraw
sub
test
inc
push
mov
mov
mov
lret
inc
cmp
and
dec
outsb
mov
fs
mov
jl
ret
push
mov
test
test
lods
xchg
or
adc
jle
and
add
pop
xchg
mov
cmp
fdivrs
test
in
ss
test
les
xchg
enter
push
xchg
or
and
dec
test
cmp
loopne
mov
push
add
xor
xchg
lds
fiaddl
add
pop
adc
fsubs
je
adc
lock
or
and
sbb
or
loop
sub
movsl
cmpsb
fs
pusha
test
jl
xchg
xchg
inc
add
adc
call
mov
hlt
mov
xor
inc
or
push
sub
aad
jl
add
cld
xor
or
jnp
pop
mov
mov
sbbl
and
mov
push
xchg
rolb
js
sub
mov
inc
mov
adc
dec
fs
inc
or
in
fs
outsb
sbb
xor
pop
enter
push
loopne
xor
jo
push
enter
sub
jg
xchg
call
movsb
mov
push
sbb
jmp
jo
rorl
jmp
test
sub
push
pop
mov
in
xor
sbb
add
push
xchg
test
shlb
roll
sub
ret
adc
cld
pop
fxch
mov
cmpsb
mov
add
or
sub
fs
sub
xchg
jb
cld
or
not
addb
add
xor
adc
stos
dec
std
out
leave
dec
lods
inc
ljmp
cmp
es
inc
outsl
adc
mov
dec
test
or
inc
andb
popa
xor
stos
sbb
sti
adc
add
pop
cmp
scas
and
decb
and
gs
lcall
push
or
add
xchg
or
out
ret
inc
mov
jb
push
ret
sbb
or
inc
orb
or
fidivrs
push
cmpsb
in
xor
roll
or
or
rcrl
stos
push
mov
push
or
or
cs
mov
cmpb
xchg
leave
and
hlt
inc
test
insb
or
xor
or
sbb
add
sbb
lret
cwtl
test
pop
xor
aam
roll
xor
dec
cmpsb
jb
pusha
add
xor
fwait
mov
and
xchg
push
adc
jb
loope
inc
inc
fiadds
ss
movsb
adc
pop
adc
fs
cwtl
inc
out
lea
mov
andb
test
xchg
push
int3
pop
add
dec
sbb
mov
adc
aam
sti
mov
cltd
mov
test
sahf
mov
and
and
push
xchg
push
aam
inc
sbbb
xchg
or
xor
and
outsl
js
iret
rcrb
outsl
pop
mov
and
js
sbb
test
xor
repnz
ds
add
add
addr16
pop
push
mov
add
in
bound
mov
das
inc
push
xor
cmp
dec
add
lods
test
hlt
data16
shlb
fmuls
push
pop
mov
shrl
cmpsb
cmp
sub
mov
pop
dec
jmp
jo
pop
nop
inc
add
insl
call
xchg
cmp
lret
xchg
xchg
and
mov
xchg
push
in
push
xor
xchg
push
and
dec
out
sahf
dec
push
mov
and
sahf
push
ficompl
adc
mov
loopne
imul
xchg
pop
mov
mov
add
jbe
mov
movsl
mov
pusha
lret
sub
mov
xchg
insl
cmp
xchg
and
mov
test
sub
fcompl
cs
pop
jp
add
cmpsb
inc
xor
add
push
and
pop
je
sbbb
xor
push
shll
gs
cmp
pop
aam
xchg
inc
js
pop
or
lods
xchg
inc
mov
adc
ret
xor
mov
push
lock
fadds
adc
jne
jge
push
mov
cltd
test
pusha
dec
push
dec
loop
pop
lcall
mov
or
adc
mov
sbb
pop
addb
fisttps
add
scas
sbb
push
inc
rclb
sbb
cmc
adc
mov
addb
cwtl
jo
cli
pop
leave
lret
and
add
add
lods
sbb
and
addb
adc
push
sbbl
and
pop
loopne
data16
mov
xor
mov
dec
into
xor
mov
fiadds
sbb
adc
adc
add
test
cmp
test
jecxz
sbb
pushf
adc
popa
push
pop
add
pushf
or
cmp
movsb
push
add
movsb
mov
adcb
pop
les
cmpsb
aam
les
push
les
inc
add
xor
dec
cmpsb
dec
ss
add
daa
hlt
sbb
addr16
mov
push
dec
dec
push
test
mov
pop
mov
hlt
mov
mov
rorb
sub
pop
notb
int
add
or
adc
inc
sub
sbb
add
shlb
push
xor
add
fsubrl
loop
xor
data16
mov
or
lret
les
jo
inc
inc
xchg
add
bound
xchg
mov
pop
cmp
in
mov
repnz
popa
or
mov
inc
orb
pop
push
add
inc
bound
pop
ret
adc
lock
sbb
sub
mov
push
lret
and
std
ds
or
cmp
adc
pushf
and
pop
movsb
push
mov
ret
sub
xchg
or
mov
and
int3
push
jl
add
or
xchg
pop
xchg
inc
cmpsb
pop
and
or
lea
jbe
add
sbb
ljmp
cmpsb
adc
idivb
std
adc
mov
mov
sbb
adc
push
push
pop
call
mov
mov
and
mov
or
les
push
jmp
inc
iret
fiaddl
shlb
and
mov
add
jbe
or
inc
test
adc
sbb
add
out
sub
bound
push
js
dec
inc
bound
das
pop
adc
clc
xchg
lock
xor
repz
pop
pop
outsb
cmp
and
test
fiadds
add
mov
jo
das
pop
cmp
shlb
popa
andb
rclb
pop
add
adc
sahf
sub
or
nop
inc
push
adc
jb
dec
mov
add
push
push
pusha
and
scas
dec
cmp
or
mov
mov
sub
lret
insb
outsb
outsb
or
lcall
adc
insb
cltd
and
xor
pop
sbbb
xchg
jp
cmp
ret
dec
rolb
imul
dec
adc
adc
xor
push
ljmp
xchg
jle
adc
push
jp
and
shll
movsb
mov
sub
pusha
leave
cmp
jecxz
and
imul
and
xor
mov
mov
xchg
sbb
pop
sbb
mov
push
sub
xchg
lret
insb
test
cmp
inc
sub
and
fadd
aam
add
aam
sub
mov
or
loope
adc
fdivs
cmc
xchg
pop
sahf
aam
lret
movsb
push
js
jmp
shrl
je
mov
test
cmp
add
sub
dec
add
cwtl
mov
inc
sbb
dec
cmp
and
pop
xchg
dec
insl
or
cmp
test
and
adc
push
mov
inc
aas
mov
adc
rorb
adc
pop
mov
mov
xchg
sbb
sub
fcom
into
lods
xor
adc
sbb
mov
and
dec
push
pop
or
sub
push
ret
shl
fcoml
jo
pop
or
fsubrl
and
mov
loope
pop
sbb
lcall
loop
dec
inc
mov
loopne
les
xchg
add
adc
ficompl
pop
or
mov
lcall
sbb
sbb
lret
bound
inc
cltd
xor
sbb
and
cld
in
sub
sub
xchg
xchg
mov
in
push
movsl
xor
nop
or
mov
rol
mov
cmpsb
ret
and
les
pusha
inc
xor
mov
sahf
in
or
leave
ss
mov
lock
test
je
xor
sub
add
int3
subb
loope
sub
popf
and
and
sti
loopne
fnstenv
and
and
mov
adcb
lods
inc
andl
add
xor
ds
push
arpl
fdivr
pushf
push
sbb
pusha
cli
rclb
hlt
adcb
sub
or
ret
dec
fadd
test
mov
js
test
je
dec
add
les
sbb
push
jb
or
add
mov
sahf
and
ss
rolb
inc
dec
inc
jbe
xchg
cld
cmp
and
int3
xor
pop
or
add
sbb
fucompp
aad
push
dec
ret
mov
pop
aas
and
dec
pusha
mov
pop
mov
push
pop
push
add
mov
mov
adc
inc
sbb
or
pop
xchg
or
dec
add
rcrb
loope
ret
jo
adcb
mov
ficoms
cwtl
sbb
mov
inc
sbb
fs
jo
cmpb
push
push
andb
mov
xor
push
or
inc
rdpmc
inc
adc
mov
xchg
xchg
jne
rcrb
cwtl
inc
xchg
int3
and
adc
dec
and
sub
xor
xchg
mov
sub
and
push
and
lret
cs
jbe
fcoms
and
rcrl
and
adc
xor
addb
pushf
test
and
pop
test
pop
rorb
dec
adc
add
dec
mov
inc
adc
sahf
hlt
mov
dec
fwait
add
inc
fidivl
cmp
rolb
xor
xchg
fcompl
pusha
inc
sbb
or
pushf
out
xor
dec
nop
mov
inc
pop
mov
jecxz
mov
icebp
add
push
std
scas
add
pop
clc
dec
mov
add
movsl
cmp
ret
push
jg
and
pusha
xchg
dec
or
ss
pop
sub
sbb
lcall
cs
add
jg
filds
dec
sub
imul
js
inc
ljmp
mov
xor
sbb
and
out
mov
jecxz
jle
and
add
dec
mov
fiaddl
test
stos
mov
push
ljmp
js
mov
movsl
add
popf
fidivl
stos
add
add
fdivs
nop
dec
hlt
lret
adc
into
mov
arpl
mov
adcl
dec
data16
cmpsb
fisubs
and
int3
sbb
adcb
cmp
arpl
sbb
jbe
cmp
dec
out
loop
pop
or
fisubrs
adcl
ljmp
sub
push
inc
or
lods
add
mov
ret
and
mov
xor
nop
add
call
mov
shld
pop
or
enter
test
and
cmp
add
test
xor
sub
inc
adc
stos
loope
add
cmp
push
inc
sub
push
sub
ss
sub
cmp
push
sbb
arpl
addb
inc
xchg
not
fstpt
or
mov
xchg
pop
push
dec
push
test
ret
out
add
mov
es
and
dec
sub
cld
push
aam
xchg
ss
push
sbb
and
sub
pusha
xchg
fcmovu
clc
jp
cs
in
xor
jb
lock
mov
sbb
pusha
or
hlt
xchg
lret
in
inc
stos
push
enter
xor
add
pop
sbb
out
cmp
xor
outsb
lock
push
adc
insb
lods
push
and
mov
pusha
andb
test
push
xor
sub
js
shl
into
and
cli
push
call
add
dec
les
xchg
add
shl
inc
and
pop
cs
and
jle
mov
and
push
cmpsb
xchg
xor
mov
pop
push
lock
mov
add
iret
mov
ror
ljmp
xchg
shll
xchg
insb
loop
test
xor
push
xchg
push
cwtl
fs
hlt
fimuls
cs
push
mov
imul
inc
hlt
xchg
adc
inc
repnz
adc
adc
pushf
sti
mov
and
and
or
sbb
insl
sbb
and
test
in
xchg
addb
test
data16
and
pop
pop
xor
xor
and
addl
add
and
aam
mov
add
fimull
filds
pop
in
or
in
loopne
fs
rolb
ret
or
add
push
pop
fcomp
adc
call
insb
inc
enter
andl
movsb
test
or
and
or
push
fistps
loop
lret
inc
or
mov
fmul
xchg
push
or
mov
xor
sbb
and
loope
test
adc
push
hlt
sub
cli
xchg
lods
test
or
dec
rclb
fs
mov
in
sub
mov
mov
push
sbb
fsubs
jno
inc
test
je
bound
push
mov
or
test
dec
loope
sahf
into
fsubl
push
sarb
and
mov
push
or
inc
jmp
inc
xor
adc
loopne
cmpsb
cmp
add
adc
add
sti
mov
and
loopne
stos
adc
es
adc
xor
mov
sbb
xchg
xchg
push
int3
cs
shlb
jle
cli
adc
rcrl
les
cmp
insb
shrl
test
arpl
mov
pop
dec
push
and
test
cwtl
pop
xor
xor
lods
or
cmpsb
and
inc
xchg
push
rclb
adc
xor
cmp
inc
ret
loop
and
lock
incl
addl
adc
dec
jp
rcrb
and
movsl
and
push
insb
sbb
xchg
and
xchg
roll
movsb
push
nop
xchg
out
add
pop
ret
movsb
adc
test
mov
xchg
inc
or
add
popa
test
or
lret
adc
sbb
xor
sub
push
sbb
add
and
xor
xor
lds
mov
push
add
call
cli
add
jo
cmp
sbb
mov
pop
jo
push
nop
fidivl
icebp
or
or
cltd
ret
imul
movsb
clc
shrb
ljmp
and
sbbl
pop
enter
and
lahf
cli
iret
sub
jo
add
and
cmc
jbe
hlt
dec
inc
pop
push
test
lds
or
and
xor
sahf
xlat
fidivl
mov
fs
insb
fisubs
sub
addr16
ljmp
mov
push
pop
or
jle
push
or
push
or
inc
sub
mov
xchg
adc
jne
push
add
xchg
sbb
push
into
or
pop
mov
or
sub
cmpsb
loopne
dec
int3
test
push
les
mov
pop
es
and
jl
ret
xchg
pop
leave
add
inc
test
pop
js
or
mov
mov
andl
mov
or
testb
bound
sub
addb
mov
add
repnz
xor
pop
aam
inc
xor
ds
and
push
adc
inc
pop
orb
cmp
insb
or
xchg
sbbb
mov
mov
pop
sub
xchg
xchg
cmc
xor
push
lahf
and
add
sbb
dec
mov
dec
inc
or
rcrb
jmp
mov
outsb
imul
loope
push
inc
negb
xchg
in
mov
repnz
push
inc
fcomps
lret
dec
adc
mov
mov
test
or
test
sarb
scas
xlat
mov
dec
xor
xor
adc
push
out
sub
fdivl
movsl
and
sbb
int3
push
xorb
and
js
or
dec
and
cmp
js
sbb
add
inc
mov
or
repnz
or
shl
lock
dec
insl
cltd
cmpsl
inc
mov
test
popf
jl
mov
repnz
mov
add
push
or
xchg
sub
sbb
or
cmp
cmpsb
or
aaa
jb
inc
lods
inc
pusha
or
or
dec
fdivrs
ret
pop
nop
sbb
cmp
test
lods
popa
adc
mov
shll
cmp
push
push
clc
mov
sub
orl
mov
cwtl
xchg
jmp
lods
adc
adc
int3
add
and
dec
data16
dec
xor
add
sbb
orl
out
mov
ss
add
or
das
push
test
mov
dec
add
sub
sbb
add
cmp
ficoml
insb
dec
mov
out
push
add
and
or
popf
sub
ljmp
cmpsb
gs
add
sbb
cmpsb
and
test
popa
insb
push
scas
out
push
dec
inc
pop
sbb
dec
or
adc
or
lret
adc
into
scas
xor
adc
dec
jo,pt
sbb
test
in
dec
jno
adc
test
sub
and
push
or
pop
or
add
fs
mov
je
mov
and
xor
or
dec
dec
es
sub
ljmp
or
adc
inc
sbb
orb
dec
mov
mov
jbe
ret
add
sbb
or
or
dec
enter
pop
rorb
push
push
adc
xchg
int3
mov
int3
xorb
push
loop
add
push
cmp
or
xchg
adc
inc
or
jg
es
stos
inc
pop
shrb
dec
xor
std
scas
or
adc
mov
push
fldenv
xor
hlt
xchg
std
adc
inc
add
testb
xor
and
add
xchg
dec
sbb
clc
dec
jo
and
mov
nop
call
jnp
cmp
sbb
cmpsb
dec
and
pushf
adcb
cmp
adcb
cmpsb
sbb
push
mov
push
or
push
inc
mov
lret
imul
sub
or
data16
loopne
jp
js
and
stos
movsl
add
jo
add
adc
xchg
inc
repnz
cmpsb
mov
push
in
mov
aam
cmp
mov
jb
nop
or
sub
sbb
cld
int3
sbb
fcoms
cmp
sbb
mov
test
sbb
inc
add
cs
pusha
jp
sbb
lods
or
fidivs
sahf
mov
shlb
sbb
sub
adc
dec
pop
cwtl
es
cli
adc
lret
hlt
inc
inc
mov
pop
movsb
in
sub
int3
push
adc
dec
popa
popf
dec
shl
shrb
leave
pusha
cmp
fidivs
inc
test
push
nop
lds
in
inc
push
sbb
ljmp
xor
sbb
mov
popa
pop
push
xor
add
jo
xor
push
arpl
enter
nop
cmp
push
or
leave
jb
pop
dec
cltd
sub
xchg
cmp
mov
int3
ror
mov
je
ret
dec
sbb
pop
mov
in
and
push
clc
dec
fcoms
into
or
ret
mov
shrb
stos
in
push
nop
pushf
and
or
or
xor
test
xor
add
leave
inc
pop
xchg
xor
and
popa
xchg
inc
cltd
or
scas
sbb
or
inc
push
insb
adc
bound
dec
lea
cmp
inc
push
call
movsb
lock
call
add
in
adc
ljmp
iret
xchg
in
or
cmp
dec
loope
pusha
mov
inc
dec
and
add
mov
fdiv
push
push
xor
pop
cwtl
movb
sbbb
xor
pushf
ds
jo
dec
test
insb
and
dec
add
adc
into
inc
sub
xor
lock
adc
loopne
movsl
xor
or
xor
dec
add
sub
loop,pn
dec
or
cli
es
lods
dec
imul
cmp
add
mov
nop
mov
mov
mov
flds
push
dec
xchg
dec
add
pop
mov
arpl
fisttps
sti
dec
pop
and
inc
ret
add
jp
sbbb
add
into
push
je
je
mov
mov
bound
orl
xchg
mov
push
or
add
adc
dec
pop
pushf
xchg
add
bnd
sbb
pop
xor
test
repnz
lcall
inc
adcb
sbb
add
sbb
cmp
or
cmp
xchg
dec
pusha
sub
mov
mov
insb
test
and
insb
adc
mov
push
pusha
add
pop
ds
or
adc
lods
hlt
and
or
pop
mov
mov
lods
dec
mov
aam
and
push
dec
xchg
add
mov
xchg
sbb
movsl
jo
jb
jb
in
dec
cmp
sub
ret
lods
fdivrs
stos
inc
nop
les
push
xor
dec
test
mov
data16
movsl
test
popa
lret
add
data16
sbb
push
ljmp
dec
inc
ret
sbbb
sub
and
lock
adc
dec
mov
ss
inc
movsl
cmp
jo
mov
push
hlt
leave
gs
inc
mov
lret
insl
loop
and
push
jno
add
orl
cld
arpl
pop
dec
test
jmp
jg
call
add
sub
pop
rcll
out
std
movsb
rolb
cmp
adc
push
hlt
lods
sti
or
les
xor
daa
pusha
fdivl
add
loope
jle
jo
fisubl
mov
pop
shl
or
push
cmp
jbe
and
ss
lods
fistps
push
fidivrs
dec
xchg
add
xchg
adc
lret
cwtl
pop
adc
mov
xor
adc
mov
pop
or
lds
mov
xchg
and
mov
sbb
testb
push
push
or
adc
leave
xchg
and
xchg
shlb
imul
les
imul
outsb
sub
or
push
jp
stos
test
or
out
fmul
andb
sbb
add
shl
xchg
pushf
int3
lret
les
inc
sub
rcl
rolb
mov
into
imul
gs
sub
push
or
imul
shrb
xor
add
mov
mov
pusha
xor
add
xor
test
sbb
adc
fisubl
cmp
dec
jmp
pop
rclb
sub
pop
js
mov
sbb
xchg
jecxz
push
pop
in
push
mov
and
lods
or
repnz
lds
sbb
mov
test
inc
add
inc
daa
mov
lock
push
cmp
inc
or
stos
xlat
leave
mov
mov
imul
or
shlb
or
into
in
cwtl
dec
ret
cmpsb
pushf
pushf
ret
insb
jbe
rclb
es
mov
and
lock
push
stos
ret
pop
pop
in
mov
mov
rolb
nop
popa
dec
cwtl
mov
add
sbb
add
es
and
decb
add
xor
jle
ficoml
xchg
or
movsl
xchg
dec
mull
mov
inc
cs
les
inc
cmp
sub
js
imul
scas
adc
xor
cltd
xchg
call
movsb
test
sbb
mov
int3
mov
add
stos
cli
stos
jp
rorb
test
test
inc
adc
xchg
pop
xchg
mov
xchg
add
jb
xor
movsb
mov
rcll
xor
add
and
add
pop
std
cmpsb
orb
leave
adc
cmp
cld
pop
adc
add
mov
add
push
rorb
cwtl
inc
inc
mov
sbb
sahf
inc
test
or
lods
or
jl
adc
ficoml
xchg
and
test
je
add
xor
sbb
xchg
fdivrl
pop
fisubl
xchg
lea
jle
push
test
dec
xchg
inc
adc
mov
inc
adc
sub
dec
ret
clc
and
push
int3
sbb
bound
add
push
add
mov
sbb
pop
sub
and
gs
jle
jb
pusha
call
pop
add
pusha
and
dec
mov
test
xor
out
pop
dec
sub
ljmp
bound
pop
xor
dec
cwtl
sbb
push
dec
rolb
and
lcall
sbbl
test
rcrb
inc
xor
ror
and
push
popf
jp
hlt
shr
lcall
hlt
and
xor
test
xchg
push
in
and
mov
or
and
mov
or
int3
push
xchg
add
fmulp
sub
or
enter
daa
test
and
inc
call
sbb
clc
movsl
sahf
add
insb
cli
inc
or
insb
fisubl
ret
cmpsl
lret
xor
add
push
mov
mov
mov
sti
movsb
cli
loop
in
or
push
sub
inc
xchg
sub
pusha
adc
adc
dec
cltd
dec
dec
mov
pop
out
xchg
lock
mov
dec
xchg
es
sub
lea
test
sbb
outsb
mov
cwtl
push
dec
cmp
cmp
mov
mov
lret
inc
cli
fists
add
or
lcall
pop
test
cmp
js
sub
push
insl
rorb
outsb
mov
mov
xor
dec
cmp
test
jb
pusha
fdivr
test
and
or
je
xchg
inc
cmp
mov
sub
mulb
movsl
xchg
faddl
ds
jo
jne
mov
lcall
mov
sbb
pushf
add
pusha
sub
or
mov
xchg
lret
jb
cwtl
cs
ret
test
fldl
or
pushf
dec
aam
push
mov
cmp
insl
rcl
mov
and
push
pop
sbb
mov
test
inc
outsb
popa
add
rcrb
mov
push
mov
xchg
insb
imul
xchg
pop
lcall
sub
or
xorb
shlb
sar
add
push
les
lock
push
fimull
imul
bound
loop
xor
xchg
cmp
clc
inc
sbb
adc
insb
and
and
add
mov
imul
push
push
sub
or
daa
mov
jb
lock
iret
lcall
push
andb
pop
inc
push
rcll
xchg
clc
xor
add
das
mov
xchg
mov
mov
roll
cs
push
inc
xor
rcr
das
or
cli
loopne
add
push
cli
sub
mov
jb
push
cwtl
out
pop
jmp
add
lock
xor
cmp
xchg
call
or
mov
push
push
in
sub
push
int3
test
adc
xchg
adc
or
aam
push
jae
cmpsb
adc
cmp
sbb
inc
je
add
lods
popa
clc
mov
sbb
dec
adc
push
js
test
in
loopne
push
addl
xchg
int3
dec
xchg
and
inc
jle
or
sbb
test
xor
push
imul
dec
mov
adc
fmull
bound
inc
cwtl
andl
inc
or
mov
sahf
mov
mov
sbb
xor
mov
push
mov
test
inc
test
ret
cmp
test
sti
cmpsb
add
add
cmpsb
mov
xchg
inc
push
shrb
bound
cmp
mov
or
dec
pusha
nop
mov
lret
cmp
je
movsl
add
dec
mov
add
lock
add
lret
sbbb
mov
mov
loope
ret
mov
cmpsb
mov
or
mov
mov
sub
push
and
sub
cmpsb
insb
sbb
fs
mov
das
adc
lock
cs
inc
stos
mov
pop
adc
bound
jb
and
enter
push
call
adc
xchg
rol
mov
pusha
mov
jb
andb
fs
fsubs
sub
hlt
mov
and
hlt
enter
scas
outsb
pop
or
adc
dec
and
es
push
sti
adc
and
jno
xor
xor
add
mov
faddp
test
in
inc
mov
dec
inc
mov
cmp
pminub
jb
dec
divl
in
sbb
sbb
jb
pusha
ljmp
xor
add
push
or
gs
gs
ds
cwtl
movsb
xor
mov
test
push
imul
in
mov
mov
push
xchg
xchg
les
out
inc
sbb
pop
mov
movlps
xchg
push
or
outsb
addb
xchg
sahf
jbe
rcll
cmp
movsb
mov
lods
xor
js
inc
xor
nop
cwtl
and
fs
repnz
pushf
sbb
push
xor
push
leave
adc
jp
aam
sarb
sub
push
int3
inc
pop
imul
mov
push
hlt
sub
sbb
cmp
add
xchg
pop
inc
sub
cli
push
addb
mov
add
jp
xchg
push
int3
mov
pusha
arpl
enter
dec
mov
fadds
adc
test
xchg
aas
push
les
sub
addl
and
cmp
push
cmpb
aam
add
adc
fcmovnb
sbbb
aaa
andb
loop
dec
mov
push
mov
mov
dec
add
sub
and
dec
mov
add
stos
popa
and
orb
mov
movsb
add
mov
cwtl
dec
notb
scas
mov
nop
push
or
neg
fbstp
imul
scas
rcl
xchg
mov
enter
or
xor
cmp
cmpsl
inc
and
push
sbb
call
mov
shl
addl
push
add
or
mov
add
pusha
jb
mov
xor
mov
test
or
nop
test
jo
repnz
sub
bound
lock
es
add
cs
ret
add
shlb
js
popa
dec
and
hlt
add
inc
data16
push
add
push
add
bound
mov
mov
sub
imul
xor
arpl
inc
push
negl
imul
sub
ljmp
inc
jle
jg
and
test
or
pop
movsl
aaa
or
sub
fs
xor
mov
push
scas
jg
jne
ljmp
stos
mov
mov
adc
xchg
xor
or
xchg
test
jb
int3
adc
scas
or
loope
or
inc
push
add
and
cmpsb
cmp
or
push
nop
inc
mov
orb
and
mov
mov
adc
pop
into
repnz
add
and
xchg
ljmp
xor
hlt
dec
add
fwait
jo
inc
insb
mulb
xor
xchg
xor
movsb
cmp
adc
test
lods
or
pop
xchg
in
inc
cmp
or
adc
dec
pushw
xor
test
test
in
shlb
dec
xchg
push
es
ja
pop
data16
pop
pusha
std
xor
faddl
xor
mov
push
and
test
iret
in
inc
xchg
lcall
ds
sbb
movsb
sbb
out
cmp
add
cld
push
mov
dec
out
mov
adcb
leave
dec
data16
lds
clc
pushf
ret
movb
sarb
push
mov
mov
mov
dec
inc
and
addl
lret
enter
cmp
fs
dec
shlb
add
call
jp
jl
shl
inc
ljmp
inc
nop
orb
pop
nop
or
shl
ljmp
xchg
loope
movsb
js
inc
xchg
dec
dec
mov
and
scas
and
int3
shl
std
mov
fidivrs
dec
cltd
movsb
push
pop
hlt
pop
shlb
loop
out
push
add
add
dec
mov
inc
sub
loope
jp
or
xor
rcr
out
and
or
cmp
test
add
sbb
xchg
adc
mov
mov
int3
mov
pusha
addb
add
push
push
or
lods
add
cli
mov
dec
mov
es
mov
and
insb
or
add
test
je
mov
and
push
mov
les
add
loopne
mov
pop
bound
dec
sahf
inc
push
mov
hlt
loop
movsb
and
fs
test
ret
sub
mov
xchg
mov
aam
movsb
cmc
dec
add
movsb
or
inc
inc
sbb
mov
insl
dec
or
push
add
xchg
pop
rorb
sub
adc
xchg
popf
or
push
ljmp
out
rcrl
dec
loopne
ljmp
std
xor
inc
lret
add
dec
mov
and
dec
xor
and
ret
push
cld
push
sbb
dec
rcrb
cmpb
add
daa
pop
push
nop
inc
pusha
sbb
push
mov
and
mov
add
xor
mov
mov
and
incb
dec
pop
insb
mov
lds
repz
je
inc
aam
movb
lret
mov
cwtl
xchg
or
mov
ss
push
add
sahf
js
pop
lods
mov
shlb
inc
add
popa
aam
pushf
dec
cwtl
or
sbb
cmp
repnz
xor
or
pop
dec
cli
jg
rcrb
and
repnz
mov
movsb
adc
or
xor
call
xchg
subb
ds
inc
or
repnz
xchg
xor
cmp
sub
xor
sub
xor
sub
mov
sbb
nop
cwtl
sbb
faddl
out
lods
ret
adc
dec
and
cmp
sub
inc
cmp
add
jb
push
mov
sbb
outsb
sti
push
adc
add
add
and
cwtl
js
cs
cmpsb
cmp
out
ret
pop
xor
push
ficompl
js
sbb
cmp
mov
push
sub
inc
or
int3
jg
mov
or
jle
xchg
shlb
sahf
dec
rolb
xor
push
cmp
dec
push
inc
gs
hlt
or
cmpsb
or
cmpsl
pop
mov
push
or
and
nop
ret
imulb
dec
pusha
inc
sbb
in
xchg
push
mov
and
xchg
or
pop
mov
and
push
sbb
mov
shlb
xchg
aas
mov
push
mov
or
call
sbb
dec
mov
jl
inc
inc
dec
lock
sbb
rorb
mov
pop
test
and
inc
and
je
imul
push
mov
push
das
rol
push
xchg
mov
test
sahf
xchg
les
push
and
jl
ror
sbbb
test
in
cmp
or
push
mov
xor
movsl
or
jb
in
loope,pn
dec
ds
gs
dec
xor
les
sub
sbb
pop
in
push
inc
pop
dec
nop
js
cltd
and
shrb
inc
es
add
xchg
lock
xchg
cs
sbb
pop
push
inc
cmp
inc
in
orb
lds
outsl
or
ljmp
int3
cwtl
mov
and
nop
sub
inc
add
sub
jl
mov
and
mov
inc
mov
sub
add
add
lcall
pushf
cmpsb
add
sbb
mov
popa
fcoml
push
andl
jle
cmp
aam
mov
dec
nop
adc
mov
dec
pop
or
fidivl
or
adc
xor
push
bound
ret
inc
sbb
pop
cmc
xchg
xchg
or
sahf
and
push
std
mov
push
adc
ljmp
in
pop
adc
out
cld
lcall
pop
add
ret
push
rorb
jo
mov
xchg
bound
movsb
ficoms
or
add
xor
xor
jg
xor
push
push
push
pop
sub
loopne
inc
mov
mov
call
mov
mov
add
or
ret
test
pushf
dec
push
dec
dec
cmp
xchg
inc
lods
adc
mov
xchg
ljmp
nop
xor
sub
lret
rol
xchg
dec
sbb
jp
call
xchg
add
fimull
pop
cs
dec
shrb
sbb
fidivl
lods
sub
sub
adc
xchg
push
and
sub
test
adc
mov
lea
add
sub
leave
ret
outsb
xchg
ss
test
add
cmp
aam
ljmp
add
jo
or
enter
imul
jo
add
dec
inc
cltd
or
scas
pushf
add
addl
rorb
inc
nop
cltd
idivb
test
inc
outsl
pop
pushf
addb
ficoml
push
shlb
lcall
adc
jl
or
push
mov
cmp
or
ds
fildl
xchg
pop
mov
pushf
xchg
sbbl
inc
test
pushl
or
mov
test
jne
ret
add
jmp
xor
push
leave
rorb
mov
ss
inc
adc
mov
mov
mov
adc
dec
mov
enter
xchg
dec
pop
pusha
xor
test
jb
xor
les
test
mov
or
ss
xchg
adc
jp
bound
data16
aam
push
and
orb
xchg
adc
fists
and
ljmp
aam
mov
sbb
inc
xchg
xchg
add
push
jbe
loopne
loopne
add
add
pushf
mov
sahf
push
push
or
adc
rorl
adc
cmp
sub
or
ss
mov
ret
cmc
xchg
inc
orb
loope
out
bound
add
pusha
rcrl
cmp
inc
into
clc
push
movsl
adc
faddl
and
stos
xor
shlb
les
xor
ds
adc
out
sbb
loopne
pop
dec
xor
sbb
ljmp
sbbb
shr
adc
and
pop
mov
popa
fsubrs
je
movsb
cmp
jbe,pn
pop
add
in
hlt
ss
sbbb
pop
add
or
shl
adcb
adc
xorb
sbb
aad
lock
test
adc
add
aam
scas
rorb
in
push
xor
les
push
data16
sub
fadd
fsts
int3
sbb
test
add
mov
xor
pop
or
inc
dec
sbb
or
bound
adc
pop
add
repnz
mov
and
test
cmp
call
mov
add
mov
inc
push
enter
mov
pop
adc
fildl
orl
aam
or
add
push
adc
mov
mov
inc
mov
jb
mov
imul
sub
mov
sti
outsb
pusha
mov
cmp
sarb
xchg
add
sbb
loopne
scas
ljmp
dec
xor
sbbb
stos
add
je
mov
fiaddl
stos
int
mov
cmp
xor
add
sbb
or
and
and
sbb
test
cmp
je
dec
loopne
pop
fisttpl
mov
dec
xor
dec
cmp
push
xchg
and
push
adcl
lods
inc
inc
add
add
xchg
xor
js
dec
pop
fimull
mov
mov
es
and
dec
loope
cld
dec
test
rolb
cmp
sahf
add
int3
cmp
rcrb
pop
adc
or
fcoml
enter
cld
les
andb
mov
inc
add
add
adc
jo
test
xorl
fimull
lret
jb
movsb
xor
pusha
insl
and
push
test
mov
test
and
and
ljmp
xchg
popa
lea
clc
sbb
mov
sub
test
decb
enter
xchg
dec
dec
cltd
dec
insb
rcrb
mov
sbbb
dec
sahf
push
inc
shl
dec
dec
jo
test
mov
dec
cmpsb
mov
add
push
jp
pushf
enter
call
jmp
in
inc
adc
jb
mov
sbb
adc
or
andb
push
add
xchg
push
btsl
push
xor
xchg
mov
mov
leave
and
add
push
loop
inc
inc
inc
add
and
xor
add
xchg
sahf
sbb
adc
andl
inc
arpl
rclb
je
sub
mov
es
shlb
lock
push
and
mov
or
test
sbb
arpl
dec
mov
push
dec
and
adc
sub
insb
lods
push
xchg
popf
add
sbb
push
add
jecxz
cmp
or
cmp
and
xchg
dec
mov
and
in
pop
sbb
xchg
repnz
xchg
mov
cmpl
clc
mov
pop
push
es
sub
adc
mov
mov
sub
push
out
add
repnz
sub
nop
adc
sbb
js
leave
int3
enter
xor
push
shl
sub
mov
test
es
xchg
xchg
push
dec
and
push
xor
inc
pop
inc
js
aad
cwtl
add
mov
test
ds
dec
dec
mov
and
push
ss
xchg
mov
js
xor
sti
pop
cli
xor
and
lcall
cmp
lock
in
xchg
test
pop
jp
xor
mov
aad
call
orl
mov
test
js
mov
mov
and
and
imul
test
add
hlt
push
sbb
dec
xor
adc
add
gs
rorb
and
sahf
sub
sub
and
adc
push
insb
dec
repnz
loopne
outsb
add
and
sahf
adc
nop
push
xchg
add
fisttpl
sbb
jecxz
or
mov
sbb
adc
dec
cmpsb
addb
or
xchg
inc
psubd
andb
xor
or
push
js
sarb
hlt
jl
sbb
inc
cmpsb
nop
pop
lods
xchg
xabort
xor
loope
add
sub
dec
adc
ret
je
rcll
test
cmp
in
add
divb
call
adc
sub
and
es
enter
inc
mov
lock
sahf
mov
rolb
jp
testb
shrl
test
add
movsb
shlb
mov
push
xor
in
jb
and
pop
or
and
push
lret
or
cmp
xchg
mov
lret
and
mov
orb
and
mov
xor
and
add
add
sub
mov
dec
add
outsb
sbb
xor
inc
js
push
add
les
shrb
sbb
inc
ret
or
and
jge
dec
push
xchg
pop
push
pop
jb
pop
or
sbb
add
adc
xchg
and
repnz
xchg
cli
fmul
lcall
jb
dec
movsb
xor
xor
rcl
mov
xchg
dec
inc
dec
mov
movsb
inc
add
sbb
test
jg
pop
push
insb
cmp
lock
lds
push
xor
xchg
sbb
push
sub
add
lcall
or
inc
loopne
inc
loop
test
test
ret
inc
call
sbb
fdivs
mov
mov
push
push
xor
dec
orb
bound
cmpsl
test
push
add
sbb
pop
add
fsts
sub
cmp
call
xchg
clc
nop
cmpsb
xor
push
sub
cmp
or
sbb
xor
push
sbb
sahf
or
xor
sub
mov
adc
aam
ret
insb
aam
or
xor
test
sbb
jb
adc
scas
add
push
outsl
sbb
mov
and
test
das
push
add
jl
repnz
adc
hlt
sbb
inc
mov
cmp
dec
test
xor
faddl
jbe
xchg
add
cmp
adc
outsb
jle
and
adc
pushf
iret
ss
mov
add
cld
call
mov
sti
loopne
dec
dec
or
cltd
sub
call
loopne
and
mov
pop
add
xchg
mov
fiaddl
lods
insb
es
rolb
dec
sbb
sbb
movsl
add
mov
add
mov
inc
cmp
ds
dec
mov
mov
push
cwtl
mov
adc
dec
mov
push
push
push
push
pop
jo
adc
mov
mov
js
lds
mov
test
sub
pop
xchg
or
dec
adc
add
in
inc
or
push
or
cli
jg
xor
cld
mov
dec
cmp
repz
xchg
sbb
sbb
movsb
iret
sbb
add
or
add
add
fwait
addb
pop
xchg
lret
and
test
insb
push
rorl
dec
sbb
xchg
mov
inc
cmp
sbb
jo
jns
adc
inc
dec
aam
lcall
shll
divb
and
out
xor
aam
ds
mov
push
adc
cld
lcall
inc
pop
test
idivb
adc
and
mov
pusha
lock
adc
ror
repnz
mov
clc
fidivrs
sbb
push
and
mov
mov
dec
aam
sub
stos
sub
test
ret
mov
or
cmp
in
ds
in
inc
pop
cs
dec
sub
or
adc
jp
xor
add
or
scas
mov
pushf
in
nop
sub
out
outsb
inc
and
mov
mov
test
push
enter
data16
mov
mov
mov
mov
xor
push
stos
and
jmp
push
dec
dec
pusha
inc
pop
ljmp
xchg
xchg
imul
mov
push
mov
je
inc
mov
cmpsb
lods
dec
nop
movsb
xor
mov
dec
jb
leave
push
add
pmaxub
aaa
add
adc
adc
sub
daa
pop
and
repnz
and
inc
pusha
gs
adc
lods
outsb
add
loop
call
loop
scas
jo
psubusw
pop
rolb
and
pop
xor
sbb
mov
xor
mov
aad
mov
mov
xor
add
loopne
sbb
sbbb
push
inc
dec
sub
inc
and
shll
push
loop
and
nop
jl
or
pusha
test
xor
adc
pop
push
ds
fucomip
add
pop
xorl
mov
movsl
xor
shlb
faddl
test
or
or
jo
cmp
outsl
sbb
xor
lods
mov
jp
pop
or
rcrb
mov
cmp
sbb
pop
jl
rolb
xchg
sbb
test
movsb
imul
hlt
inc
lea
mulb
cld
sub
adc
xor
pop
sub
cs
imul
insb
call
xor
pop
or
sbb
es
sub
jo
xchg
sub
or
push
pop
cmpb
negb
sbb
sub
movsl
push
stos
mov
dec
cmp
faddp
xchg
orb
pop
and
data16
or
or
fcoml
add
mov
xorb
push
mov
lds
xor
and
adc
push
ficoml
nop
and
imul
inc
cmp
js
popa
add
clc
pop
inc
push
dec
jb
mov
out
scas
lret
jo
incl
dec
add
js
test
cmp
dec
sahf
mov
in
or
inc
add
push
pop
mov
ficomps
aaa
and
mov
push
push
lds
pop
das
fidivl
adc
inc
test
cmp
sub
cwtl
adc
cltd
sub
js
add
fdivs
xchg
ficoms
add
fadds
into
ss
mov
or
mov
and
jecxz
sub
pop
add
test
pop
adc
nop
sbb
or
test
and
outsb
sbb
mov
data16
or
adc
movsl
sub
jo
pop
lret
push
xchg
xchg
add
adc
xchg
sarl
dec
or
sbb
push
push
fwait
mov
mov
mov
es
rorb
adc
xchg
add
add
je
xchg
and
adc
test
popa
xchg
sub
sub
dec
mov
fdivp
inc
fcom
jb
sub
lods
xor
out
push
mov
inc
add
addb
jb
inc
sti
nop
sbb
or
fs
xchg
cwtl
jle
jg
ds
or
jmp
or
les
ss
lcall
push
scas
adc
ror
pop
mov
pop
call
push
pop
xchg
mov
andb
mov
mov
ss
xor
adc
mov
mov
sbb
xor
or
mov
hlt
into
mov
xchg
xchg
push
das
shlb
mov
idiv
insb
inc
xor
push
add
repnz
adc
mov
movsb
pusha
adc
lret
xor
mov
and
enter
cmp
adc
inc
or
or
movsl
adc
inc
jb
das
bound
or
jp
xor
lret
mov
mov
dec
fimull
cmpsb
test
push
mov
dec
mov
push
js
movsb
int3
add
xor
sbb
ljmp
xchg
sub
pusha
jb
push
test
push
inc
ret
mov
subb
popa
xchg
mov
addb
call
rorb
jmp
jbe
xchg
mov
int3
mov
nop
jne
xchg
inc
sub
or
xor
fidivs
push
cmp
cmpsb
stos
rolb
inc
leave
decb
sbb
pop
mov
xor
divb
test
dec
lcall
adc
call
dec
xor
pop
add
xor
loope
cmp
nop
imul
xchg
cmp
push
xchg
mov
ret
or
add
or
xor
sbb
ss
rolb
test
into
sub
dec
push
push
negb
mov
mov
gs
lret
hlt
lock
popa
xchg
les
sbb
jo
mov
movsb
xor
and
inc
xor
mov
dec
enter
rorb
dec
scas
add
pop
adc
js
lods
in
iret
rol
inc
cmpsl
enter
push
movsb
and
lock
xor
lock
movsl
daa
inc
push
xchg
xor
mov
les
push
ret
mov
lds
test
push
fisubs
test
pop
cmp
mov
ljmp
cmp
sbb
js
dec
enter
in
pop
cmp
or
add
mov
aam
dec
xchg
rolb
cmp
push
jo
jp
jp
into
int3
adc
adc
push
sbb
push
jg
outsb
jmp
outsb
xchg
lret
push
and
ret
das
insl
shufps
sub
push
pushf
xor
data16
test
xchg
or
pop
test
add
rolb
lods
orl
cwtl
add
mov
imul
jae
sub
push
xor
push
pop
xchg
dec
sub
xor
pop
gs
nop
shlb
push
add
jo
mov
mov
mov
or
or
or
push
test
in
pop
out
adc
or
push
inc
xchg
mov
push
aam
leave
clc
add
test
in
pop
push
xor
add
or
sbb
mov
fiadds
dec
es
stos
outsb
mov
out
adc
sbb
push
inc
sub
pop
fs
dec
cmp
and
or
dec
and
test
and
push
lret
test
and
or
or
and
lahf
addb
add
jb
add
xor
nop
or
sbb
push
add
mov
cmp
add
jbe
pop
cmpsl
and
xchg
add
cmp
mov
mov
cmp
mov
in
dec
mov
mov
pop
or
xchg
add
jo
pop
mov
adc
sbb
adc
pop
nop
mov
inc
adc
xchg
sahf
xchg
test
xchg
xchg
cmp
cltd
cmpl
les
mov
sub
pusha
mov
sbb
sbb
add
das
inc
test
lret
lea
shl
inc
inc
and
xchg
test
fdivl
pop
push
sub
xor
or
dec
mov
cmpsb
in
or
push
cmpsb
sbb
mov
xor
leave
lock
ret
and
xchg
adcb
pop
sbb
mov
outsl
aam
sub
cmp
cmp
into
xlat
sbb
ja
and
add
mov
cmpsb
adc
shl
data16
add
into
push
or
sub
add
outsl
push
scas
add
cmpsb
inc
add
xchg
add
xchg
int3
mov
or
adc
lret
loope
jl
sbb
push
addr16
mov
daa
mov
stos
pop
stos
call
call
cmp
xchg
and
add
fdivr
sbb
sbb
and
lods
push
add
insb
lock
sub
push
and
pop
inc
cs
lret
add
mov
pushf
ret
mov
xchg
int3
push
or
rcrb
add
xor
dec
rol
jbe
nop
and
nop
addb
mov
add
daa
in
ret
outsb
jbe
ljmp
sub
or
sub
or
and
sub
sahf
add
add
adc
cltd
or
loopne
push
inc
adc
or
inc
scas
inc
arpl
mov
loopne
dec
cmp
out
mov
and
leave
adc
dec
bound
nop
jp
jp
pop
add
cmp
bound
push
inc
dec
stos
inc
popa
inc
cwtl
cmp
cmpsb
jle
or
scas
mov
addb
lcall
gs
dec
pop
fadds
push
insb
sbb
dec
xchg
pop
or
sub
push
fiadds
mov
or
sub
add
sbb
xchg
loop
cwtl
loop
xchg
pop
cwtl
or
jne
lea
out
adc
into
xor
cmc
jbe
and
cltd
fcoml
js
xchg
xchg
dec
lock
mov
movsb
pop
cmp
jg
test
imul
dec
mov
push
or
sub
lods
and
or
xor
pop
scas
add
nop
je
pop
add
int3
add
cltd
xchg
popf
push
push
xchg
xor
push
xchg
fstps
mov
inc
add
inc
rcl
cwtl
lock
push
test
dec
inc
sahf
mov
es
sub
data16
jb
dec
sbb
test
cmp
xor
dec
push
aam
movsb
or
or
mov
add
inc
test
sub
pop
xor
fcmovnu
or
xchg
mov
movsl
cmp
out
inc
lds
mov
add
sub
sub
movsb
pop
xchg
sub
lcall
jo
push
insb
and
push
inc
inc
sub
jbe
add
push
clc
lock
in
add
sub
dec
adcb
lcall
pusha
jle
pop
and
or
cltd
push
mov
add
push
cmpsb
push
mov
mov
pop
jne,pt
and
movsb
enter
xchg
adc
imul
daa
add
pop
inc
inc
ret
dec
cs
insl
dec
ds
push
outsb
jo
js
xchg
push
or
cmp
lock
dec
jbe
add
loope
push
fimuls
push
push
dec
push
xchg
sbb
or
sbb
mov
inc
pop
mov
dec
dec
dec
pop
out
lcall
mov
push
or
lcall
pop
aam
and
int3
ficoml
lock
lock
movb
fbstp
sbb
xor
rolb
sbb
shll
std
lock
sbb
mov
repnz
sbb
mov
or
sub
add
pusha
js
cmp
movsb
xchg
rcrb
and
dec
call
sbb
insb
mov
or
test
mov
and
inc
clc
or
xor
inc
xchg
je
adc
dec
test
adc
xchg
xor
inc
and
stos
leave
sbb
add
int3
push
and
jg
xor
or
fiaddl
addr16
movsl
sub
xor
rcrb
scas
lods
test
and
xor
xchg
rorb
inc
sub
xchg
fs
sahf
or
outsl
test
std
jo
or
mov
jp
cwtl
pop
xor
out
jl
add
add
mov
xchg
es
into
xorb
lods
adc
sbb
mov
jmp
mov
dec
jns
popf
shll
adc
and
dec
push
sbb
sub
xor
xchg
inc
jp
sub
rolb
cmp
insb
and
lret
jo
xor
andb
outsb
mov
fs
sbb
mov
push
mov
push
mov
xor
add
dec
loop
mov
xchg
fidivrs
int
push
pop
into
add
sub
mov
addb
int3
mov
sub
les
cmp
andb
push
pusha
push
inc
jmp
push
leave
sub
addb
xchg
ficoms
mov
or
xor
lods
mov
mov
nop
dec
cmpsb
lret
push
add
and
ljmp
fs
and
int3
or
scas
adc
rcl
adcb
adc
cmp
mov
sbb
xor
and
andl
xchg
adc
jb
movsb
adc
adc
iret
inc
inc
movsb
jo
iret
bound
mov
push
shlb
push
iret
call
movsb
pop
sub
nop
out
dec
inc
mov
or
shrl
jp
dec
push
xchg
xor
out
imul
adc
adc
sbb
xor
sbb
mov
decb
push
mov
add
xor
xchg
ficoml
xchg
or
add
sub
data16
xchg
inc
mov
sbb
test
adc
hlt
push
mov
and
rolb
push
mov
jbe
aaa
icebp
movsb
or
dec
or
addl
sub
pushf
sub
rcll
sbb
adc
cld
aas
loopne
add
pusha
and
cmc
adc
adc
outsb
cli
lock
add
mov
lcall
push
adc
pop
push
dec
xchg
pop
cmpl
pusha
pop
xor
cltd
orb
adcb
dec
cwtl
cmp
adc
jb
add
adc
shll
cmp
add
pop
pop
or
jb
aaa
push
mov
mov
xchg
test
sbb
orb
call
push
lret
bound
dec
mov
gs
dec
sub
sbb
lods
add
pop
xchg
ljmp
enter
push
mov
jp
pop
movsb
int3
sub
shl
loop
dec
push
dec
sbb
cmp
push
sub
lods
inc
add
push
or
sub
inc
add
sub
and
loope
stos
or
xchg
adc
cmp
shlb
dec
add
call
adc
jae
out
movb
xor
fs
scas
sbb
and
push
call
sbb
inc
es
sbbl
adc
inc
xchg
js
jb
or
pop
xchg
dec
outsb
hlt
fadd
dec
popa
out
xor
dec
movsb
xlat
enter
mov
fmuls
sbbl
cwtl
and
inc
push
sbb
and
lods
or
or
ret
add
and
orb
dec
loopne
pop
adc
ret
xchg
mov
dec
cmp
mov
xchg
dec
or
mov
or
or
rcll
mov
mov
jecxz
adc
and
xor
sahf
fs
xor
es
incb
enter
lret
push
or
or
sahf
mov
mov
enter
pop
inc
add
push
cli
in
mov
mov
and
mov
insb
mov
lds
clc
inc
rolb
movsb
pusha
or
xor
jle
enter
inc
cltd
scas
mov
cwtl
ret
add
mov
cmp
and
fcoms
xchg
test
add
add
dec
mov
into
sub
sbb
ds
and
pop
mov
add
ret
cld
adc
sub
mov
mov
loope
adc
or
dec
cmp
mov
xor
add
push
scas
xor
jbe
mov
mov
cs
stos
add
inc
mov
mov
ret
scas
jl
mov
leave
sbb
sbb
inc
mov
push
dec
xor
addb
adc
in
nop
pusha
pop
mov
xor
popa
cmpsb
xor
add
or
hlt
aam
cmp
jbe
sub
push
xchg
rclb
add
push
fadd
add
shrl
test
ficompl
jnp
cli
mov
test
mov
faddl
adc
stos
into
pop
leave
lods
mov
adc
or
lock
popa
shrd
dec
sbb
ret
adc
inc
outsb
jl
xor
test
fs
add
dec
push
mov
outsb
and
dec
test
mov
movsb
cmp
mov
adcl
lea
add
bound
add
gs
rcr
push
movups
fs
pop
nop
dec
xor
xor
inc
sbb
and
and
dec
add
sub
mov
dec
sub
negb
xchg
gs
sbb
cmp
jp
mov
add
xor
add
mov
pop
and
add
js
push
xor
cs
pusha
add
dec
outsl
push
js
loop
add
or
adc
cs
sub
ljmp
xchg
call
nop
xchg
arpl
sbb
pop
xor
and
cmpsb
pushf
js
and
xor
in
scas
mov
dec
or
int
push
push
cltd
lods
mov
xchg
push
cmpb
and
xor
inc
ret
sahf
add
jmp
rclb
push
incb
pop
push
adc
mov
sbb
fcoml
popa
sub
mov
push
push
adc
cltd
sbb
inc
push
add
enter
mov
outsb
scas
shlb
push
sbb
test
xchg
mov
mov
pop
sbb
xchg
dec
add
jge
clc
dec
adc
cmp
sarb
sub
mov
or
in
inc
ret
pop
sbb
or
mov
dec
add
in
inc
add
xor
add
add
cmp
fld
mov
adc
arpl
cmp
mov
pop
pop
add
pushf
inc
push
ljmp
adc
add
lds
mov
ret
xchg
add
and
fs
fcmovne
mov
and
mov
add
push
sub
adc
rolb
cmp
xor
aam
and
add
sub
or
mov
iret
add
adc
ret
push
fdivrs
mov
mov
inc
pop
add
push
filds
shlb
dec
push
push
cwtl
jle
loop
push
adc
fsts
mov
ss
xor
adc
jb
add
xchg
fcoms
adc
shlb
mov
sbb
and
int3
dec
sbb
push
sub
xchg
push
fsubs
or
sub
push
sub
or
movsb
orb
mov
adc
bound
mov
pop
inc
cmp
mov
je
or
inc
add
cs
sub
mov
imul
push
call
sbb
sub
loop
adc
rcrl
push
xchg
rol
aad
xchg
push
outsb
out
dec
lods
lcall
xchg
add
in
fcmovnbe
fidivl
and
push
add
test
xchg
ljmp
fsub
inc
dec
and
lcall
add
sub
lret
in
inc
test
mov
push
add
sbb
movsb
fdivs
push
movsb
inc
sbb
add
adcb
jae
sbb
cld
mov
adc
or
adc
and
sbb
ror
push
xor
fimull
movsb
test
shlb
dec
cmp
sub
cmp
lds
lods
int3
int3
lcall
inc
cwtl
adc
insb
dec
inc
adc
dec
enter
mov
xchg
pop
nop
dec
loopne
rcrl
pop
sbb
xchg
dec
push
lods
and
dec
inc
lret
bound
mov
push
inc
cmp
xor
call
mov
mov
dec
fisubs
data16
adc
ret
inc
and
loopne
inc
cs
sbb
popa
loop
cmp
jo
std
and
test
fld
enter
mov
mov
icebp
add
xor
inc
push
lods
js
add
xor
adc
test
rcrb
rclb
xor
dec
dec
inc
cmpsb
push
mov
inc
adc
add
jno
sahf
mov
mov
add
push
cmp
xor
jmp
xchg
push
mov
sbb
xor
push
ret
dec
push
enter
cmp
sub
hlt
mov
and
aam
dec
popf
fs
sbb
push
mov
aam
dec
repnz
pushf
xchg
scas
jo
mov
pushf
sub
leave
out
add
mov
mov
sbb
push
ret
sub
jb
loopne
popa
shrb
xor
sbb
lds
sarb
xchg
cmpsb
cmp
sub
movsl
xchg
rolb
cs
xor
sub
lcall
xchg
sbb
push
test
mov
and
xchg
mov
push
pop
mov
mov
loop
mov
xchg
mov
add
mov
cmp
test
mov
mov
jl
push
adc
mov
push
adc
fsubs
dec
cmp
in
mov
mov
rorb
mov
or
fsubp
dec
rcrb
outsb
mov
pusha
inc
mov
mov
std
mov
into
rclb
jecxz
jle
lods
adc
push
jb
xchg
xchg
jb
cli
into
icebp
int3
adc
add
loop
lcall
leave
enter
lret
sub
outsl
dec
pop
lret
push
or
int3
and
aam
sti
js
add
add
leave
shl
sbb
ret
outsb
xchg
and
sbb
repnz
mov
push
or
push
hlt
pushf
shlb
jo
lock
sbbb
xchg
notb
jl
push
shll
mov
push
add
mov
shlb
inc
add
push
xor
pushf
push
push
cmp
mov
add
fdivl
jo
add
cmp
mov
movsl
xor
push
mul
jb
mov
xor
sub
ret
out
in
add
push
or
orl
push
add
sbb
pop
xor
lret
dec
sub
adc
lea
dec
push
add
mov
push
lret
sbb
xor
jae
bound
shlb
jno
lods
cwtl
movsl
aad
les
les
adc
add
pop
mov
add
dec
adc
pop
outsl
inc
dec
push
xchg
rorb
call
ror
xchg
sub
aam
imul
xor
add
rclb
xchg
xchg
cmp
mov
sbb
in
cmp
mov
and
mov
mov
nop
lcall
test
adcb
addl
cmp
js
test
sub
pusha
push
xor
adc
mov
xchg
adc
xor
in
xchg
ljmp
test
mov
sbb
test
mov
add
adc
sub
ljmp
aam
fsubs
std
hlt
xor
fisubs
jo
push
add
mov
pop
xor
fsubrs
loopne
dec
cltd
dec
sbb
je
sub
pusha
cmp
push
cltd
bound
lods
xchg
test
adc
push
loopne
adc
fisubl
mov
adc
int3
push
ljmp
sbb
xchg
inc
mov
inc
aam
xchg
jb
test
or
or
call
rolb
arpl
jb
lcall
enter
rclb
dec
les
xor
shlb
jbe
jl
sbbb
adc
push
or
pop
cwtl
add
mov
add
add
jg
shll
mov
rcl
inc
sub
ret
in
mov
and
sbbb
add
push
insb
lcall
pop
adc
xor
fimuls
add
mov
mov
cltd
or
add
cmp
sbb
xchg
xchg
adc
es
push
sub
pop
aam
leave
shrb
mov
test
dec
xor
mov
in
pop
or
push
call
jbe
call
pusha
xor
adc
sub
mov
mov
sbb
loope
inc
mov
call
imul
out
push
nop
test
aad
and
cli
jb
and
add
ljmp
add
push
aam
lea
add
loop
and
pop
adc
inc
sub
mov
pushf
fs
nop
pop
push
and
adc
popa
and
rol
add
jb
add
xchg
cs
test
bound
mov
hlt
pop
nop
add
and
movsb
xor
mov
dec
pop
in
add
cs
test
pop
mov
movsb
movsb
pop
mov
sbb
adc
push
bound
pop
xor
push
sarb
push
push
sbb
lcall
mov
sbb
mov
mov
cld
pop
mov
xchg
orl
mov
adc
and
push
adc
jo
pop
rolb
in
dec
xchg
ss
mov
jo
out
cmp
push
das
inc
cld
sub
mov
dec
mov
sub
add
js
add
sarb
mov
xchg
popa
int3
push
sub
sub
andb
mov
mov
cli
and
sub
dec
and
mov
mov
xchg
loopne
data16
push
test
bound
ffree
dec
xor
test
ret
imul
adc
dec
aam
push
test
stos
or
popa
adc
xor
cmp
addb
sbb
imulb
xor
mov
popa
lods
bound
jg
nopl
pop
mov
adc
lcall
jmp
push
add
or
push
push
dec
pop
aam
inc
sarb
je
adc
movsb
gs
adc
subb
lcall
jecxz
xchg
into
mov
add
jmp
test
sbb
dec
enter
stos
or
cmp
mov
lods
or
dec
jl
pusha
cmpsb
sbb
int3
hlt
jp
pop
push
aam
fsubs
movsb
pop
ret
dec
js
lds
shlb
gs
loope
jl
sbb
push
push
cwtl
les
push
js
test
sub
andb
push
add
add
push
ljmp
pop
or
std
pop
leave
xor
daa
and
push
dec
or
adc
pop
pop
or
push
pop
cmp
loop
fsubl
and
inc
jle
dec
dec
outsl
dec
mov
or
xorl
cwtl
pop
andb
jo
mov
orl
sub
inc
imul
mov
mov
insb
insl
mov
or
and
and
movsl
daa
dec
rolb
imul
mov
sahf
sub
cltd
sub
mov
data16
addb
mov
loop
pop
xorb
and
ret
xchg
jl
sbbl
mov
add
pop
pusha
cmpsb
push
push
pusha
pop
sahf
inc
and
es
mov
push
inc
test
add
mov
xchg
ret
and
xchg
mov
push
cmp
jl
add
push
add
mov
jo
flds
fsts
mov
dec
lods
js
cltd
ret
pusha
push
cmp
cmpsb
dec
arpl
or
add
dec
orl
into
adcl
sub
enter
mov
sub
test
or
and
and
inc
lods
and
jo
cltd
xor
sbb
pusha
push
popa
sbb
xorl
test
adc
mov
sahf
int3
mov
sub
cltd
sbb
and
adc
mov
ss
xchg
test
sub
test
sbb
and
je
addb
adc
inc
mov
or
and
ret
sti
dec
push
addb
icebp
push
mov
and
add
push
dec
sub
je
sub
xor
dec
cli
js
adc
es
in
imul
sub
xor
js
and
sahf
push
aam
inc
int
test
pop
sub
and
imul
lods
jbe
imul
xchg
mov
xchg
enter
jb
dec
cmp
jb
add
dec
fadd
int3
lea
pushf
push
dec
jle
xchg
test
xchg
dec
add
xchg
in
sahf
xchg
clc
and
mov
and
movsb
mov
mov
push
fs
sub
rcrl
bound
andl
cmpsl
inc
add
jp
ret
add
mov
ficompl
sub
sti
push
inc
inc
and
adc
dec
lods
jp
push
std
jp
loop
dec
lcall
add
sub
or
dec
xor
and
adc
or
add
add
inc
xor
pop
cli
aam
mov
subl
xor
mov
xchg
or
or
test
xor
je
adc
mov
or
dec
cld
fsubs
dec
pop
stos
dec
ds
dec
lods
and
adc
data16
call
mov
jo
cmp
or
jo
inc
dec
arpl
xchg
and
mov
or
cs
mov
or
xchg
add
cs
xchg
cltd
shl
insb
mov
fsts
adc
adc
ljmp
inc
lods
mov
rolb
sbb
test
mov
pop
dec
or
rolb
orb
push
test
lock
and
cmp
jo
push
inc
lret
incb
loope
ljmp
sub
add
repnz
add
test
fs
add
movsb
and
add
sub
inc
sub
jnp
push
loopne
push
stos
ds
sbbb
shlb
inc
hlt
xor
xor
inc
and
push
insb
and
ljmp
dec
and
cs
xor
ret
sub
in
jb
nop
pop
out
fnsave
and
cs
imul
ficompl
fadd
mov
xchg
dec
rol
dec
push
incb
push
shrl
adc
xchg
adc
outsb
sbb
and
ficoml
sub
es
sub
pop
mov
mov
in
es
cmp
aaa
or
es
rolb
cmp
dec
inc
mov
inc
mov
rorl
or
inc
mov
clc
sti
lods
lock
xchg
mov
jb
add
cld
nop
dec
jmp
shll
call
sbb
xor
push
xchg
inc
mov
xchg
push
xchg
mov
mov
add
ds
rol
addb
ficoms
insl
lret
movb
mov
les
insb
pusha
sbb
fmull
sbb
cltd
mov
mov
clc
call
pop
adc
mov
push
inc
add
mov
lar
popa
sub
aam
jo
outsb
add
add
push
pop
and
je
add
inc
aam
xchg
sbbb
push
push
jp
inc
push
dec
sahf
push
pusha
add
dec
movsb
and
or
jecxz
ret
cld
add
pop
jno
add
mov
nop
or
loopne
push
push
inc
pop
mov
out
sbb
push
dec
push
jb
and
fistl
add
adc
int3
cmp
dec
mov
in
or
mov
mov
adc
lea
mov
push
enter
add
jne
mov
pop
push
inc
movsl
in
bound
cltd
or
pop
data16
jle
add
mov
push
adc
leave
mov
fisubrs
push
inc
pusha
and
sbb
dec
in
lret
movsb
inc
jnp
in
or
shll
mov
add
cmpsl
outsl
enter
sub
sub
push
rorb
mov
cmp
inc
push
dec
and
push
sub
push
call
sub
or
adc
aam
mov
mov
ds
add
dec
or
es
aam
dec
cld
sbb
push
pop
shlb
push
rolb
andb
in
xchg
dec
lods
cld
xor
push
mov
sbb
cmp
mov
sahf
or
or
mov
fmull
xor
stos
sub
xor
and
push
cs
adc
xchg
inc
rolb
movsb
insb
mov
sub
jl
pop
scas
adc
dec
outsb
inc
es
or
sub
call
nop
dec
loopne
pop
sbbb
adc
test
sub
pusha
adc
xchg
xchg
pushf
sub
inc
es
adc
add
or
inc
inc
mov
pop
ljmp
pop
cs
and
mov
xor
mov
or
dec
int3
inc
inc
adc
mov
dec
lods
mov
hlt
out
lret
mov
sub
test
push
jbe
pop
inc
inc
shlb
push
add
adc
push
mov
or
shlb
leave
jo
inc
xor
dec
cltd
sub
inc
cmp
xchg
xorl
outsb
orb
xchg
loope
decb
jg
fsts
xchg
jp
mov
lret
fs
and
push
dec
xchg
call
sbb
cwtl
push
movsl
fdivrl
xchg
test
and
pop
inc
mov
xchg
xchg
cmc
mov
int3
adc
mov
push
xor
iret
inc
ret
inc
fs
fwait
sbb
xchg
and
sub
dec
rorb
sbb
test
gs
repnz
xchg
mov
dec
xchg
sbb
sbb
sbb
js
ljmp
xor
and
dec
sub
loop
sbb
lret
mov
test
mov
mov
push
xor
adc
mov
test
dec
movb
cmpsb
or
lods
adc
aam
push
test
adc
xor
mov
xor
in
popa
mov
jnp
shrl
push
dec
sbb
sub
and
inc
movsb
xor
push
or
movlps
add
mov
fisubs
mov
or
subb
jo
stos
sbb
xchg
mov
cmp
or
push
loopne
sbb
loop
adc
push
dec
push
or
pop
push
sub
cmc
xor
inc
es
scas
inc
or
xor
rolb
sbb
test
pusha
or
cltd
mov
adc
jo
xchg
sbb
xchg
pop
dec
and
push
call
add
adc
shl
xchg
icebp
and
xchg
test
dec
xor
pop
jne
ss
dec
rolb
bound
dec
or
ret
test
push
cmp
adc
imulb
mov
and
add
and
adc
sub
inc
and
out
sbb
pushw
lock
dec
xor
xor
or
add
inc
or
adc
add
push
out
and
leave
push
xchg
movsb
movsb
stos
imul
xor
add
xchg
stos
or
dec
cmp
or
out
or
mov
adc
addl
mov
repnz
push
out
rclb
pop
mov
in
adcb
jmp
lods
and
add
lock
leave
pusha
inc
push
js
mov
adc
push
test
fistl
add
jo
jo
adc
in
cmp
xor
xchg
ljmp
daa
xchg
sbb
jo
push
xchg
cwtl
sbb
loopne
into
mov
mov
sub
inc
inc
push
xchg
test
mov
je
mov
and
cld
lcall
cli
pop
and
add
pop
pop
stc
lret
cs
inc
mull
xlat
and
sub
fs
mov
push
and
out
movsl
pusha
xchg
pop
pop
cmp
imul
sbbb
pop
cwtl
fs
xor
cmpb
shl
shl
rolb
out
lret
mov
loopne
aam
xchg
push
cmpsb
mov
ljmp
orb
mov
xchg
cltd
pop
xor
adc
adc
pop
std
popa
pop
and
aas
push
add
push
push
push
xorl
push
xor
jp
mov
jno
xchg
cmp
ljmp
dec
adc
mov
jge
xchg
push
outsb
mov
adc
ficoml
add
pop
hlt
sub
or
mov
xchg
ds
ficoms
test
pop
daa
dec
inc
lods
test
add
pusha
mov
xchg
imul
test
outsl
push
adc
cmpsb
rolb
mov
lcall
fisubl
addb
aad
jg
pop
xor
fstpt
jp
xor
adc
cmpsb
xchg
test
inc
or
or
dec
sub
push
or
sbb
xor
sub
mov
adc
sbb
loope
adc
lea
repnz
mov
push
push
dec
sub
or
and
test
mov
fcom
dec
test
cmp
sub
js
outsb
es
add
inc
fcomp
dec
gs
xchg
nop
jo
cmp
popf
dec
rcrb
or
pop
inc
lods
shll
rorb
repnz
and
xchg
mul
or
sbb
jo
sub
pop
ret
pushaw
sub
repnz
mov
mov
xchg
cli
mov
xchg
clc
mov
negb
ljmp
mulb
or
xor
cmp
push
and
pop
mov
mov
pop
inc
xor
mov
push
sbb
push
jp
add
jo
daa
mov
les
loopne
leave
push
orb
xchg
inc
sub
push
outsb
mov
movsb
sub
enter
pushf
and
and
or
inc
dec
push
pop
dec
pop
xchg
dec
jp
test
mov
nop
add
test
mov
sub
call
dec
mov
dec
not
fcompl
pop
and
lods
test
add
inc
mov
std
pop
pop
imul
mov
xchg
push
and
fmuls
adc
arpl
sbb
std
aas
xor
sarb
out
ret
jp
mov
push
sub
inc
loopne
adc
mov
or
shlb
and
push
sahf
in
xor
add
adcl
mov
inc
lods
test
je
movsb
out
jo
arpl
add
xor
xchg
xchg
inc
lods
iret
clc
cmp
jp
xchg
decb
fucomip
xor
or
mov
sbb
xor
movsb
sub
fwait
adc
push
loopne
xchg
xchg
nop
subb
sbb
out
sahf
ret
and
dec
xchg
and
push
jnp
ret
js
cmpsl
and
sub
loopne
test
or
sub
or
or
add
cwtl
jb
not
add
aam
dec
adc
leave
ljmp
int3
pop
or
enter
lods
sub
adc
and
mov
xor
movsb
rclb
xor
std
xor
xor
xor
roll
int3
cmp
and
orb
and
xorl
gs
inc
push
aam
enter
and
shlb
mov
aam
in
test
daa
sub
and
inc
test
sbb
adc
and
sbb
jle
lock
call
add
and
and
xchg
scas
test
int3
jp
pop
pop
sbb
or
pop
sbb
ficoml
ret
dec
push
push
cld
add
loop
add
cmp
add
and
pop
mov
adc
add
add
nop
inc
add
add
mov
jg
jno
add
inc
insb
jne
push
dec
inc
imul
bound
inc
outsl
insl
jo
arpl
gs
jb
push
inc
pop
inc
ljmp
notb
push
outsl
dec
outsl
arpl
push
outsl
jae
fidivs
je
popa
aaa
ja
je
jb
sbb
inc
outsb
jne
push
mov
cmp
dec
popa
outsb
addr16
addr16
jb
jne
jae
outsl
insb
fs
je
pop
mov
sub
inc
gs
push
and
je
fcmovnu
data16
hlt
gs
jb
or
dec
outsb
mov
push
imul
arpl
outsb
dec
je
push
jne
je
jo
dec
pusha
fldenv
pop
subb
jo
aaa
popa
int
in
popf
jne
inc
jnp
inc
js
xchg
outsb
rcr
add
call
gs
push
dec
push
mov
pop
jne
dec
push
je
fsubr
and
or
pushw
sub
xor
in
push
mov
ret
rcll
mov
shlb
enter
jbe
mov
insb
lock
push
sahf
dec
fidivl
popa
rcrl
dec
popa
jo
jae
push
push
mul
ljmp
fisubrl
push
sbb
xlat
xchg
and
outsw
cltd
inc
insb
bound
bound
inc
and
fldenv
arpl
or
fdivrs
xor
jae
divb
push
jne
add
mov
inc
insl
mov
pop
mov
xor
cmp
xor
test
dec
push
or
inc
popa
jbe
mov
mov
sbb
jo
pusha
push
fs
insb
in
adc
sub
push
push
push
push
call
adc
hlt
and
and
dec
test
insl
or
outsb
int
sbb
mov
dec
fs
pop
jb
outsb
xchg
ret
jbe
or
adc
movl
xchg
rorl
adc
dec
inc
inc
cwtl
loopne
or
bound
push
fmull
imul
push
dec
shrl
in
popa
ljmp
jo
mov
adc
or
cld
jb
add
out
or
sbb
arpl
push
jo
imul
inc
in
dec
jae
xor
pop
jae
dec
mov
sub
push
push
xor
test
push
outsl
push
jle
inc
push
jl
test
add
test
lods
cmp
cmp
fs
adc
inc
testl
dec
aaa
andl
inc
dec
scas
dec
pop
mov
addb
inc
push
jp
jo
imul
cmp
add
in
sub
imul
cmp
dec
subb
push
pop
pusha
and
dec
jae
add
sbb
xlat
inc
or
or
fstl
xor
inc
jne
fs
inc
inc
and
add
mov
xor
push
pop
sub
fcom
sub
mov
xchg
push
imul
inc
jb
es
xor
xchg
push
sbb
mov
mov
pop
lcall
pop
pop
scas
dec
push
jnp
lods
call
inc
test
or
in
jno
mov
sbb
outsb
lahf
dec
test
jo
mov
mov
adcb
pop
or
cmc
in
in
add
sub
add
jmp
jb
pop
icebp
out
dec
mov
jp
mov
xorl
mov
fs
dec
addb
add
rol
ret
or
xor
imul
std
push
lret
fs
enter
inc
imul
loopne
mull
adc
insb
out
insb
bound
mov
daa
push
jb
cmpsl
dec
sub
test
test
fimuls
fcoml
xor
pop
incl
push
imulb
and
pop
and
inc
aaa
into
push
push
push
cmp
lock
out
lods
jns
jns
pcmpgtw
jo
cltd
cmp
mov
mov
sbb
jns
mov
push
xor
or
fiadds
push
dec
xchg
inc
fwait
push
sub
push
push
mov
jns
mov
add
push
push
push
popa
ja
adc
sub
popf
push
js
inc
mov
push
das
push
mov
fisubl
mov
insb
fcomps
popaw
inc
push
sub
dec
mov
or
imul
insb
and
sahf
adc
scas
sub
imull
sbb
sti
add
inc
lea
icebp
mov
or
rorl
imul
cmp
add
rorl
loop
ret
jmp
arpl
gs
fistl
pop
or
or
fnstenv
mov
xchg
jmp
and
inc
xor
pop
pusha
sbb
adc
add
rorl
jns
xchg
arpl
adc
addr16
and
jae
sub
es
inc
ds
push
shrb
ja
sub
sbbb
push
popf
mov
inc
popa
leave
rcrl
cmp
jo
mov
xor
stos
test
jo
dec
or
imul
and
ret
insb
cwtl
jae
into
inc
insb
addr16
shll
repz
jp
push
inc
addl
mov
sub
in
pushf
outsb
jb
mov
jne
sub
arpl
adc
movb
sub
dec
jae
in
test
jo
insl
jl
xlat
adc
sbb
push
addr16
push
push
push
loope
dec
push
jae
push
imul
dec
outsb
mov
inc
jo
xor
mov
and
jo
fsubl
ds
cmpsl
int
lcall
dec
push
loop
or
and
gs
add
push
or
pushf
xchg
push
cli
jo
pop
or
dec
pushw
jb
or
sbb
pop
mov
jne
adc
push
nop
cmp
or
loope
popa
jo
scas
insb
push
fdivs
adc
fld
pop
xchg
jno
xor
push
xchg
sbb
shlb
ret
es
in
lcall
pop
or
mov
mov
adcb
pop
dec
sahf
outsb
add
outsl
jb
test
inc
or
jno
sbb
dec
cmpsb
outsl
imul
mov
mov
inc
roll
pusha
xchg
cld
jb
push
dec
sbb
outsb
push
fildl
loop
cmp
jecxz
cmp
push
dec
inc
dec
jg
testb
jae
mov
je,pt
push
pop
xchg
bound
dec
shll
lea
inc
ret
sub
inc
jns
shll
jmp
and
sbb
lods
lret
jp
xchg
dec
lock
insl
cli
dec
ret
mov
dec
sahf
add
inc
push
arpl
sbb
push
add
hlt
cli
inc
sbb
cs
jle
dec
pop
dec
ljmp
sub
mov
adc
test
dec
sbb
pop
std
inc
mov
fcmovnb
scas
or
nop
mov
test
jne
cmp
dec
pop
fiaddl
fstps
xchg
insb
push
cld
jbe
fs
dec
sub
shll
add
cmp
pop
mov
or
mov
push
cmp
arpl
mov
push
dec
outsb
mov
pop
and
fwait
sbb
stc
daa
fsubrl
out
ret
dec
dec
dec
dec
push
fsubrs
mov
sbb
cltd
push
push
adc
lds
flds
mov
lods
int
dec
inc
inc
jg
sub
movsl
jae
jp
and
out
or
js
mov
sbbl
xor
and
mov
scas
inc
jmp
arpl
or
mov
xor
jmp
add
adc
imul
fsubrl
fisubrl
mov
sub
imul
imul
sub
arpl
inc
mov
mov
sti
add
jecxz
jge
test
lods
push
fcomps
push
or
push
xor
out
mov
mov
or
ret
ret
mov
test
mov
iret
mov
jo
mov
mov
test
push
imul
icebp
xchg
dec
cmp
dec
add
dec
imul
add
add
mov
xchg
and
sbb
daa
xor
mov
sbbb
pop
add
add
int3
std
std
xchg
add
pop
sbb
cmp
cmp
ficoml
movlps
je
sahf
push
cmp
jbe
adc
mov
sbbb
add
je
push
in
add
bound
pop
and
pop
and
cs
sub
mov
push
inc
add
dec
imul
xchg
shrb
inc
xor
jae
arpl
push
sahf
adc
loope
outsb
and
cmp
add
add
inc
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
