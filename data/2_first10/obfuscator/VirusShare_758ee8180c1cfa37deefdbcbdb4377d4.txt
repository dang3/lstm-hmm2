ret
insb
cmp
data16
push
pop
pavgb
cli
repz
popa
jle
jl
fbld
dec
ss
mov
loopne
insb
test
push
clc
jle
sub
sti
inc
xchg
adcb
mov
fistpll
fwait
xchg
pop
jne
popf
clc
scas
popa
repnz
lods
jae
pop
insl
jo
push
dec
shrl
fldl
repz
enter
xlat
lea
insb
fwait
dec
out
sbb
mov
xchg
clc
and
adc
adc
adc
insl
je
cmp
fldcw
mov
push
add
fcmovnbe
movsl
shrl
xchg
lds
sbb
into
push
rclb
pushf
loop
pushf
push
ljmp
and
jb
outsl
jns
repnz
nop
sbb
jl
fdivrs
andl
push
in
mov
add
outsb
nop
xchg
mov
clc
pop
pop
loop
imul
xorb
xor
stos
outsl
xor
aas
fldcw
test
arpl
test
lds
add
pop
data16
sbb
lock
pop
das
jg
addb
iret
ds
fdivrl
jae
lahf
cmp
fwait
sub
inc
mov
stc
inc
mov
out
test
or
mov
mov
fbstp
rol
call
jae
mov
dec
int
jmp
sbbl
push
fidivs
push
shlb
loopne
cmp
mov
jb
push
xchg
pop
mov
jae
stc
test
clc
add
pusha
mov
mov
mov
pushl
pushf
push
mov
lea
jmp
mov
andb
xchg
add
or
into
cmpsl
jbe
into
icebp
out
lret
insl
scas
jns
das
imul
dec
lret
jo
jmp
repnz
xchg
xchg
sahf
scas
sub
insl
std
shlb
add
or
cmp
outsl
popf
cmp
movsl
pop
xchg
xor
shll
divb
xchg
fs
scas
js
sbb
icebp
scas
or
aaa
lea
jae
mov
mov
pusha
push
pushl
mov
lea
jmp
or
adc
or
dec
sub
fs
test
ljmp
sbb
add
test
and
pusha
dec
cmc
out
mov
dec
dec
push
test
pop
sbb
out
xchg
jge
loope
mov
lcall
jno
scas
aaa
lods
add
xchg
xorl
and
mov
push
add
int3
jp
movsb
mov
cmpsl
ljmp
shlb
inc
es
add
lock
cli
fldt
iret
out
jne
jae
das
imul
pop
outsb
int
mov
outsb
pop
imul
ss
outsb
inc
call
faddl
pushf
xchg
and
push
rcll
ror
sbb
aad
and
xchg
jl
sbb
dec
sbb
xchg
pop
out
push
rcll
xor
jp
fsubs
add
int
lea
jb
cmp
pusha
stc
cmp
mov
call
pushl
popl
stc
cmp
cmc
clc
cmp
push
push
jmp
jmp
aad
dec
test
inc
adc
popf
jns
iret
addr16
mov
jmp
leave
movsb
jae
movsl
mov
adc
xchg
or
mov
xor
lock
jb
clc
xor
fnstenv
mov
sbb
push
inc
jp
cmpsl
iret
sub
arpl
loop
mov
pop
ljmp
push
mov
or
movsb
pop
and
cmp
js
call
cmp
sub
push
cmp
pusha
call
pop
test
dec
mov
add
cmp
mov
sub
mov
pop
clc
cmp
in
std
push
sbb
mov
int3
clc
shrb
pop
xchg
jnp
push
jb
jns
test
mov
aas
xor
int
stc
faddl
fsubl
jge
popa
lods
xchg
jle
and
add
add
cld
and
push
sahf
xlat
mov
movsl
loopne
xchg
in
jbe
movsb
push
push
fdivrl
dec
fstps
mov
mov
lea
je
jmp
lea
jb
clc
test
cmp
pushf
push
jmp
pushf
mov
cmc
stc
xor
stc
call
mov
pusha
test
mov
add
pushf
mov
mov
jmp
clc
imul
cmc
add
pushl
lea
jmp
movl
movb
lea
jmp
push
lea
jb
push
test
pusha
stc
cmpb
jmp
call
adc
movl
out
or
mulb
xor
xchg
aam
mov
sti
inc
in
mov
andb
mov
and
popa
dec
pop
jg
repz
jno
pop
mov
push
std
outsl
imul
pop
adc
int3
pop
or
test
xchg
pusha
and
fs
push
jae
push
lods
cmp
pushf
call
shr
add
mov
pushf
cmc
test
cmpb
pusha
call
test
push
pushl
lea
je
clc
sub
pushf
stc
call
jle
addl
inc
rcll
dec
imul
jns
loope
or
jg
cmp
scas
mov
gs
imul
call
inc
mov
sbb
sbb
mov
test
inc
jecxz
lods
add
cld
adc
pop
cmp
xor
movsl
es
imul
dec
jmp
pop
mov
cmp
nop
out
js
push
enter
repnz
push
xchg
pop
mov
fs
jne
pushf
lahf
movb
pusha
pusha
bswap
pushf
mov
cwtl
not
pushf
movzbw
lea
jmp
inc
mov
call
shr
xchg
push
stc
popf
jno
arpl
mov
aaa
aam
and
int3
jle
jb
sbb
popf
adc
lock
dec
mov
push
inc
mov
jnp
arpl
pop
cmpb
lds
test
mov
mov
mov
xchg
fnsave
xchg
daa
jmp
frstor
xlat
cli
shll
cmc
pop
lea
jbe
call
mov
call
lea
jne
shrd
ror
pusha
mov
movw
rcl
inc
sub
not
rcl
lea
bt
cmc
stc
call
jmp
and
stos
cmp
xchg
cmp
fstpt
mov
in
pop
ljmp
pop
repnz
jns
mov
inc
pop
mov
push
and
mov
inc
adc
fwait
mov
xchg
pop
popf
nop
pop
pop
pop
pusha
scas
add
cmp
lret
stc
aam
jmp
mov
pop
lret
ja
das
add
fistl
movl
xor
fs
jne
mov
jmp
push
pushf
inc
jmp
movb
jmp
clc
test
add
clc
pushl
clc
not
jmp
xor
jmp
ds
test
in
dec
cltd
lock
xchg
push
inc
lcall
sbb
pop
jmp
lahf
jnp
sti
pop
ss
jg
scas
je
outsb
das
inc
bound
frstor
jae,pn
in
outsb
repz
sbb
mov
les
pop
xchg
mov
lds
popa
xchg
aad
jge
hlt
mov
dec
jne
adc
fbstp
rcl
ja
outsb
jp
mov
xchg
xlat
sarb
cmp
out
xchg
mov
cmc
ret
xchg
sti
dec
popa
cwtl
dec
lahf
andl
add
dec
and
push
inc
call
outsb
enter
jno
mov
jb
les
je
clc
shlb
adc
xlat
add
add
push
das
jg
call
divb
mov
cli
movsb
jecxz
mov
mov
inc
inc
loop
cmc
aad
and
pushl
iret
pusha
aaa
mov
sbb
pop
mov
mov
sbb
push
lret
and
dec
push
inc
mov
je
or
loopne
loopne
xorb
pop
out
pop
adc
int
dec
bound
lcall
sbb
push
out
sub
pop
testb
mov
call
pushf
lret
cmp
lcall
pusha
or
mov
out
insb
lcall
dec
mov
dec
jle
out
daa
xor
inc
fmull
xor
pop
stos
jmp
jbe
and
sbb
mov
mov
scas
out
ss
insb
mov
jne
fcomps
stc
jecxz
dec
sbb
dec
jmp
aaa
push
sub
stc
ror
jmp
pushw
popfw
push
inc
jmp
pusha
call
mov
pushf
pusha
mov
dec
cmc
pushl
cmc
neg
call
add
push
pusha
pushf
lea
jmp
adc
ljmp
cmp
xchg
xor
jno
fcmovb
out
mov
repnz
cmpb
int
imul
insb
mov
aas
xorb
das
ja
cmp
scas
sbb
sub
and
shlb
test
not
xchg
adc
dec
arpl
mov
mov
mov
mov
sbb
rcll
popf
and
mov
pop
shll
scas
inc
sub
das
imul
xchg
jle
xchg
and
mov
outsb
fldcw
xchg
std
lcall
or
mov
or
rorl
icebp
sbb
pop
pushf
std
jne
lds
pop
xchg
cmp
mov
sub
mov
mov
dec
jns
cld
fmuls
pusha
xor
not
mov
out
repz
dec
xor
mov
movsl
adc
adc
out
jbe
mov
insl
mov
inc
inc
scas
adc
cmpl
jns
add
je
mov
popf
hlt
insb
jb
or
cwtl
imul
jo
push
adc
ds
or
and
repz
mov
xchg
pop
or
gs
mov
jle
movb
pusha
pusha
lea
je
pushf
mov
pushf
lea
jmp
jmp
popf
cmp
mov
inc
or
stos
test
stos
outsb
xor
mov
hlt
cmp
xchg
aam
jnp
push
icebp
stos
fst
aaa
sub
cmp
dec
dec
cmp
shlb
jp
xchg
add
iret
adc
xor
xor
jge
jne
or
fimuls
fs
loopne
jbe
les
insl
clc
and
inc
pop
dec
and
sbb
shrl
add
or
xor
aam
mov
and
outsl
stc
mov
xor
stc
ficompl
aad
xor
in
lret
and
lret
adc
jmp
push
pusha
push
mov
loop
push
inc
lods
ja
fisttps
xlat
out
push
into
call
mov
lret
clc
mov
sti
sti
test
sub
or
xor
lea
scas
dec
out
testl
loop
mov
test
cmpsl
ljmp
ret
dec
sbb
inc
imul
lea
shlb
cmpsb
and
std
icebp
fldcw
xchg
and
inc
dec
mov
pushf
fstpl
ret
imul
push
popf
movb
sahf
cli
push
flds
cld
into
mov
mov
pop
push
enter
jp
mov
inc
repnz
pop
mov
rolb
movsb
jns
cwtl
jno
sbb
xor
out
mov
or
push
push
addl
xor
pop
daa
inc
fnsave
xchg
mov
xchg
outsl
mov
mov
dec
mov
lock
adc
sbb
out
sbb
pop
push
popa
jbe
and
lods
sahf
pop
fstps
cmp
in
imul
shll
cmpl
push
cmc
mov
lahf
loopne
and
push
jo
pop
dec
js
xchg
ret
and
mov
pop
lahf
mov
adc
push
shrb
mov
aam
out
shrl
rcll
mov
dec
mov
mov
sarl
inc
push
xchg
push
or
jp
ss
mov
pop
call
xor
les
divb
pop
lock
adc
xor
inc
adc
push
ljmp
add
push
sahf
mov
dec
scas
ja
push
icebp
sub
out
mov
mov
jne
loop
or
cli
inc
dec
repnz
ret
mov
nop
lea
fildll
and
pop
pop
cmp
and
mov
rcrb
je
add
cmp
push
call
rcl
mov
clc
mov
test
jmp
mov
sbb
cmpsl
ljmp
orb
in
lret
bound
mul
lods
ja
sub
andb
das
test
fcoml
call
mov
dec
jecxz
adc
cli
mov
lret
fstpl
bound
aam
mov
movsl
xchg
mov
jmp
test
cltd
and
inc
mov
test
adc
int3
pop
cli
int3
mov
out
enter
mov
mov
incb
mov
fsubrl
add
xor
adc
repz
das
cli
loope
out
inc
push
mov
pushf
adcl
cmp
ret
sub
arpl
push
popa
stc
std
fstpt
mov
xor
outsb
outsb
or
push
jl
push
inc
popa
int
mov
shrl
iret
lret
mov
adc
stos
mov
leave
imul
movsl
pop
or
jl
add
pusha
mov
mov
cmpsl
ljmp
jmp
orl
out
mov
imul
jno
or
hlt
dec
pop
ja
cs
mov
lds
mov
aas
add
in
iret
gs
adc
xchg
xor
ret
loope
lea
jbe
not
sub
bsr
bt
xadd
btr
mov
adc
movzbw
btc
mov
bt
rcl
add
adc
shr
call
jb
cmc
bt
cmpb
call
cmpb
jmp
mov
lea
jne
setp
movb
jmp
into
xchg
inc
xchg
cmpsl
ljmp
pusha
and
mov
aam
leave
aam
lods
cld
jecxz
pushf
test
jg
pop
out
das
imul
push
int3
sub
jns
push
add
repz
pop
mov
stc
cwtl
stc
sbb
dec
lahf
fcomp
loope
mov
je
divl
inc
jbe
les
loopne
idivb
adc
int3
mov
dec
adc
push
pop
mov
xchg
xchg
cmpsl
ljmp
arpl
cmpsl
dec
cmc
lea
push
jp
loope
popa
xor
sub
mov
and
or
out
adc
nop
add
cwtl
add
cmpsb
test
out
jno
lret
cmp
imull
pop
cmc
imul
std
dec
mov
pop
lea
pop
jb
insl
popa
inc
movsb
loope
out
dec
adc
mov
cmovb
inc
pop
and
call
or
push
lea
jae
call
bswap
pop
mov
call
pushf
push
lea
je
pushf
pusha
push
mov
lea
jmp
xchg
enter
ljmp
add
xorl
and
push
inc
fistpll
andb
and
dec
das
imul
les
aam
mov
pop
pop
cmp
aad
push
repnz
into
push
lcall
cmp
xor
or
jle
rclb
mov
push
movsb
jo
loop
fsubs
adc
loopne
int3
adc
xor
add
push
and
jmp
and
mov
clc
cmpb
pushf
call
loop
pop
xchg
cmpsl
ljmp
push
xchg
jp
fiaddl
xor
nop
add
testb
and
imul
int3
fwait
loopne
jne
call
xchg
mov
cmp
cmp
lea
mov
inc
xlat
sub
shlb
loope
movsb
jns
cli
mov
mov
add
shll
pop
xchg
daa
std
xchg
pop
sub
arpl
cmp
jge
rclb
movsb
jle
data16
lret
sbbl
dec
inc
pop
cmp
push
xor
inc
sbb
lret
sbb
mov
inc
cmpsb
movsl
repz
cmp
cmp
dec
mov
xchg
repz
lahf
mov
pop
jae
dec
jb
ja
outsl
cmp
test
xor
push
cli
aaa
je
jns
scas
andl
arpl
jns
cld
jnp
sbb
pop
sbb
mov
xchg
cmpsl
ljmp
fisttpl
dec
sbb
xchg
cltd
mov
ret
shll
call
imul
dec
mov
lcall
stc
add
mov
mov
shlb
or
js
pop
and
lret
negl
or
adc
pusha
and
jo
loop
pusha
sub
dec
out
xor
jmp
pusha
not
pushf
stc
mov
pushf
ror
cmc
call
lea
jne
shr
bsf
lahf
shrd
xor
aas
rol
pusha
mov
or
push
test
add
shl
sbb
mov
mov
pusha
cmc
push
test
movb
pushf
push
lea
je
jmp
das
inc
inc
sti
dec
dec
dec
ds
aas
push
dec
inc
sti
inc
dec
dec
dec
push
sti
dec
dec
inc
dec
dec
sti
add
sti
ds
push
inc
aas
sti
dec
dec
dec
sti
cmp
ds
inc
aas
sti
inc
dec
sti
dec
inc
inc
sti
aas
push
dec
cmp
inc
ds
inc
inc
dec
inc
sti
inc
inc
cmp
sti
add
neg
cmc
shr
mov
push
cmpb
jmp
add
inc
gs
outsl
fs
gs
imul
add
cmp
push
jmp
lea
jbe
call
call
stc
stc
cmp
pusha
call
pushl
pushf
push
lea
je
sbb
mov
call
pushf
add
bt
mov
sub
jne
cmp
pushf
test
pusha
pusha
push
lea
jp
je
cmc
add
stc
cmc
clc
test
cmp
pushf
lea
jb
cmc
cmp
push
pusha
mov
lea
jae
sets
bswap
rol
mov
shl
stc
mov
and
mov
mov
cmc
cmc
xor
bt
repnz
jmp
test
pushf
not
stc
sub
test
jmp
mov
jo
cmpsl
ljmp
or
popa
pushl
popf
popf
popa
popl
insb
pushl
mov
cmp
out
ret
aam
xor
hlt
add
rsqrtps
js
add
adc
mov
movsl
sbb
cmp
iret
mov
cmpl
jnp
rcrl
xchg
jecxz
or
jb
movl
jmp
xor
repnz
cmpsl
ljmp
dec
es
push
and
loop
mov
xchg
mov
pop
mov
cmp
repz
js
mov
pop
xchg
sub
shlb
cmpsl
xchg
clc
hlt
xchg
pop
ss
or
mov
inc
test
sahf
in
arpl
js
inc
dec
shl
clc
adc
faddl
xchg
cmpb
or
lahf
nop
or
push
dec
and
mov
xorl
scas
cltd
outsl
aaa
out
push
out
loop
lcall
call
pusha
add
rcl
pop
shl
mov
push
pushf
mov
test
push
lea
jns
push
lea
je
adc
test
pusha
add
rcr
test
mov
clc
clc
add
pusha
cmc
mov
shrd
mov
cmp
jmp
push
inc
push
push
dec
dec
dec
cs
insb
add
inc
lock
cmp
push
lea
jb
cmp
cmp
jmp
sbb
jmp
push
in
xor
test
fimull
jb
popf
lcall
fildl
or
dec
das
lret
jle
adc
and
je
rep
js
mov
xor
pop
xor
mov
xor
mov
popf
aad
stos
mov
push
or
test
fwait
lahf
xor
inc
add
pop
stc
mov
scas
push
pushf
jmp
nop
jnp
cwtl
cmpsl
ljmp
add
and
inc
in
test
inc
xor
fwait
jne
loop
and
inc
adc
inc
mov
imul
ja
mov
pop
les
xor
mov
or
arpl
imul
mov
mov
dec
mov
rolb
xor
cmp
dec
or
jae
outsb
or
dec
cltd
cmpsl
ljmp
pop
dec
popa
cmp
ljmp
gs
inc
fwait
sbb
or
ds
sar
inc
dec
jbe
pop
push
mov
or
jb
xchg
movsb
pop
pop
lods
pop
cmp
js
lret
cmpsb
test
push
arpl
jae
sub
sub
scas
in
sar
lds
jns
add
and
or
jle
xchg
movsl
jecxz
push
or
mov
pop
cmp
lods
adc
mov
mov
mov
not
jmp
ja
jbe
cmpsl
ljmp
xchg
pop
cmp
fwait
rcrl
fwait
xchg
cmp
mov
sarl
and
jbe
test
jns
int
push
repz
scas
addr16
push
test
sub
mov
adc
sbb
test
dec
mov
add
lea
jne
aad
aas
clc
xor
shr
mov
sbb
neg
add
ror
mov
mov
cmc
call
sti
mov
fwait
cmpsl
ljmp
leave
mov
shll
shl
mov
pop
and
cwtl
clc
scas
or
cwtl
or
mov
lahf
cli
xchg
add
and
hlt
sti
fbld
jmp
sqrtps
sbb
xchg
jp
mov
mov
xchg
bound
out
aad
mov
sub
gs
xlat
mov
adc
in
cld
inc
mov
leave
daa
iret
or
rorb
ljmp
and
xadd
stc
stc
mov
xadd
mov
shld
push
neg
bt
add
dec
shr
shl
rcl
mov
pushf
bsr
bt
add
not
mov
movb
push
call
pusha
pusha
cmp
call
stos
pusha
pushl
movl
mov
lea
jmp
lea
jne
daa
sub
cwtl
sub
daa
mov
shl
pushf
rcr
rcl
add
cmc
mov
pushl
jmp
jmp
shlb
mov
mov
sub
sahf
pop
push
scas
push
jns
cmpsb
iret
nop
shlb
jecxz
jge
jecxz
pop
movups
xchg
clc
mov
dec
mov
inc
clc
mov
push
lea
mov
mov
cmp
add
xor
jnp
popf
dec
jno
mov
imul
iret
mov
push
dec
or
call
fisubrl
mov
adc
mov
jnp
mov
inc
cli
stos
repnz
pusha
lea
jne
rcl
rcl
dec
mov
inc
jmp
pushf
movb
lea
jne
sets
movsbw
inc
mov
rcr
sub
bts
mov
pushf
sub
bt
jmp
mov
call
setne
call
rorl
idivb
pop
cli
scas
sub
das
insl
sub
adc
sub
cld
sub
fcoml
test
jmp
or
xchg
inc
xchg
dec
or
int
cmp
shlb
xchg
push
loope
jb
sbb
call
or
ret
jo
mov
xchg
pop
or
jo
add
jne
sub
inc
jbe
icebp
repnz
cwtl
push
push
das
inc
sbb
fstpl
push
push
push
inc
xchg
pop
movsl
fimuls
pop
lahf
lock
int3
jecxz
adc
pop
inc
lods
addl
xchg
sub
dec
sub
pop
das
arpl
cltd
and
fistps
imul
adc
ret
sbbl
stos
lea
int3
out
jmp
sbb
jnp
iret
imul
and
push
cli
mov
loopne
and
xchg
fs
cli
sub
push
insl
cmp
xchg
out
in
or
sbb
jbe
scas
mov
and
mov
stc
mov
nop
es
cwtl
cmpsb
jo
clc
jp
cli
fsubs
jb
add
mov
add
inc
or
add
add
add
add
add
dec
or
add
add
add
add
add
pop
or
add
add
add
add
add
pop
or
add
pop
or
add
xor
add
or
add
or
add
outsb
sbb
xchg
add
or
add
jno
add
or
add
pop
or
add
outsb
sbb
add
push
outsb
sbb
or
add
or
movb
lea
jae
push
mov
mov
pusha
mov
pusha
lea
jmp
push
mov
adc
mov
movw
lea
jae
call
lea
call
pusha
pushl
lea
jmp
xor
ljmp
incl
mov
lods
sbb
xchg
cltd
or
sbb
das
lret
add
jb
pop
fnstenv
int
xchg
sub
mov
sub
and
and
loopne
jecxz
pop
sbb
mov
into
xor
inc
psubsw
xchg
je
cmp
xor
mov
ret
push
stc
jns
fldt
ja
cld
mov
lods
mov
mov
call
mov
pop
pushf
mov
lea
ja
jmp
cmp
pushf
pusha
pusha
jmp
jmp
jge
jp
cmpsl
ljmp
out
push
mov
sbb
xchg
mov
add
aad
test
pushf
scas
mov
mov
xchg
out
into
std
faddl
mov
std
add
pmulhuw
adc
xor
xchg
mov
jle
or
pop
mov
fmull
mov
sbb
mov
lods
dec
adc
pushf
in
and
sub
pop
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jmp
lea
rol
add
lea
not
pusha
mov
lea
push
call
pushl
test
pushf
add
bt
clc
not
cmc
jmp
ret
mov
add
in
mov
imul
inc
fistpl
imull
lock
les
mov
xchg
xor
cwtl
lcall
stc
aaa
mov
dec
aad
sbb
nop
fildll
push
daa
dec
imul
jge
pop
lret
mov
loope
and
test
xor
lds
in
out
sub
pop
and
mov
jecxz
sub
cmpsl
pop
or
lods
shll
in
hlt
cld
dec
adc
in
jne
insl
or
adc
mov
orb
xchg
je
enter
insl
pop
shrb
test
jl
push
cmp
push
out
dec
js
lods
lock
rcrb
mov
data16
hlt
stos
push
xor
ret
xor
pop
cli
ficoml
and
xor
xor
jmp
lret
jl
mov
pop
sub
cmp
jno
add
add
xchg
dec
cwtl
insl
cld
insl
jns
popf
cmp
xor
or
movsb
xchg
test
mov
das
clc
repnz
cld
in
fimuls
inc
ficoms
mov
jne
leave
out
bound
rcr
inc
mov
scas
shlb
fisubs
pop
adc
pop
push
mov
stos
jo
outsl
add
push
call
mov
add
push
add
push
pusha
pushf
lea
jmp
xor
pusha
cmp
movw
repnz
push
call
call
mov
push
push
mov
pushl
pushl
ret
stc
test
cmp
call
call
lea
jne
cmp
or
mov
bt
bt
add
pusha
movzwl
movzbw
bt
mov
test
pushf
call
test
dec
mov
aas
sbb
fwait
and
push
movups
adc
xchg
shrb
sbb
push
das
imul
mov
lcall
fcoms
nop
aas
jno
in
mov
mov
pop
jg
imul
dec
sub
pop
mov
lcall
adc
test
test
push
rcl
jno
mov
pushf
pushl
pusha
pushl
lea
jmp
mov
inc
test
stc
clc
cmc
cmp
pushl
pop
lea
pop
movzbw
mov
jmp
icebp
icebp
lods
mov
aad
add
cmpsl
gs
or
xor
loop
ss
jno
sub
imul
shlb
in
pop
les
cwtl
sub
and
xor
imul
mov
cmp
adc
jl
ds
out
add
mov
sub
inc
sbb
fsts
push
insl
repz
icebp
mov
cmp
sub
imul
add
push
gs
ja
imul
pop
jp
cmpsl
ljmp
sbb
xchg
push
shlb
out
add
push
mov
sbb
add
add
xlat
out
mov
cmpsl
call
ljmp
and
sbb
flds
xlat
mov
loope
loop
lea
out
mov
sti
and
std
cltd
mov
push
nop
mov
jg
jne
mov
cltd
mov
in
rcrl
scas
clc
movsb
mov
sbb
jle
sbb
cmpsb
insb
in
sbb
mov
les
adc
cmp
jl
mov
lea
ja
pusha
not
and
shr
sub
clc
sub
jae
pushf
sub
add
or
mov
or
mov
jmp
stc
bt
ror
pushf
pushf
push
mov
lea
call
pusha
cmp
pusha
push
pushf
lea
jae
call
stc
call
imul
pusha
pushf
pusha
cmc
add
push
lea
jmp
setle
setnp
lea
pusha
push
movl
movl
pushf
mov
pushf
pushf
pushf
pushl
ret
mov
clc
pusha
stc
test
push
pushf
lea
je
clc
test
jmp
notl
mov
ja
daa
aad
inc
fnstenv
push
mov
scas
xchg
and
adc
cmp
jp
aaa
insb
sbb
ja
outsl
push
inc
pop
scas
leave
mov
cmpsl
sub
insl
btr
iret
movsl
cmp
aas
mov
fwait
das
cmpl
mov
mov
xor
mov
aad
notl
xlat
xor
push
data16
sbb
xor
out
push
push
jecxz
and
sbb
lret
inc
xor
shlb
les
push
jb
mov
aas
stos
jne
jmp
sbb
insb
and
call
outsb
cmp
lret
int3
sub
push
cmp
aad
aaa
jb
and
adc
mov
js
les
jb
das
push
mov
sbb
xlat
cmpl
mov
out
jp
mov
sbb
mov
push
adc
in
pop
pop
jg
andl
arpl
mov
daa
int3
add
es
push
rclb
fistpll
add
cmp
js
inc
rolb
add
fcom
cld
mov
pop
inc
into
loopne
push
xor
adcb
outsb
inc
lock
stc
addr16
jno
xchg
mov
cmpsl
ljmp
sbb
mov
xchg
push
stos
inc
stos
hlt
push
xchg
inc
push
jmp
inc
test
xacquire
cmpsb
inc
xor
aad
insb
mov
inc
in
out
js
sbb
xor
int3
cli
add
inc
mov
rcll
push
xor
ss
jle
mov
iret
pop
addr16
daa
adc
pop
xor
test
mov
aad
mov
jg
sub
xor
sysret
jnp
int
mov
ret
cmpsb
dec
add
or
fwait
das
cmp
inc
jmp
mov
sbb
in
fiadds
in
mov
adc
les
dec
lcall
and
into
pop
jae
cmpsl
inc
negl
push
pop
cmpsl
mov
je
cmpsl
ljmp
shlb
cmp
adc
pop
add
outsb
dec
xor
adc
push
int3
pusha
cmp
sahf
bound
inc
mov
or
inc
jge
scas
jg
lcall
xor
cmc
filds
orb
stos
pop
loop
pop
lock
lcall
shrb
mov
nop
fbstp
mov
leave
push
sub
and
fstpt
cmpsl
cltd
sbb
mov
js
lahf
mull
mov
setle
fisubrl
mov
jo
add
movsl
xchg
aaa
mov
and
fsubl
into
movsl
scas
enter
jg
aaa
cwtl
mov
dec
test
outsb
or
jbe
adc
or
push
lea
ja
pushf
xor
rol
sub
push
sub
add
dec
adc
mov
adc
push
mov
cmc
pusha
pushf
add
jle
repnz
jmp
inc
jmp
cmpb
pushf
pusha
pushf
lea
jne
ror
mov
pusha
cmc
pushf
pusha
add
call
adcb
cmpsl
ljmp
ja
leave
xchg
and
mov
std
mov
sbb
divb
sbb
int
jno
xor
mov
jnp
scas
ss
push
push
lods
inc
adc
sbb
je
loop
mov
push
mov
dec
lcall
pop
out
mov
movsb
push
mov
dec
out
mov
xlat
jmp
std
adc
mov
sub
lret
add
je
cmp
ret
mov
pop
in
icebp
sub
cmp
xor
cmp
andl
and
xchg
loopne
mov
jl
and
out
lahf
nop
or
mov
adc
popf
in
push
pop
pop
adc
dec
ja
out
jle
shll
imul
mov
jmp
add
sub
jl
and
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
insl
jae
stos
cmpsl
ljmp
sub
jbe
into
xchg
push
add
inc
mov
push
sub
imul
mov
scas
rorb
je
loopne
dec
jns
inc
ja
insb
scas
mov
jo
cwtl
pop
fwait
push
lret
adc
imul
decl
lcall
pop
pusha
stc
fistpl
inc
jno
cmpsb
jmp
es
dec
je
jae
aas
iret
gs
add
inc
or
sub
pop
stc
bound
in
jmp
lea
ja
push
lea
jb
pushf
stc
cmpb
movw
lea
jne
shl
mov
neg
dec
mov
call
cltd
mov
stos
cmpsl
ljmp
and
fiadds
push
fimull
inc
jae
mov
push
jmp
fsub
xor
popf
inc
or
mov
popa
popf
ss
mov
and
xor
jmp
sbb
mov
and
sub
pop
mov
movsb
or
aad
out
sub
jmp
arpl
mov
icebp
mov
mov
push
sbb
mov
inc
sbb
iret
jge
dec
jnp
dec
inc
jnp
sti
ds
shlb
or
mov
out
fwait
aam
jnp
outsb
mov
leave
pushf
mov
jmp
jmp
stos
push
movb
lea
jmp
fidivrl
stos
cmpsl
ljmp
dec
jmp
sbbl
mov
mov
push
dec
mov
divb
and
sub
arpl
pop
pop
test
in
inc
mov
dec
in
cmp
add
sbb
inc
sbb
int
or
add
add
cmp
sbb
sbb
dec
dec
sub
pop
adc
je
push
out
and
push
sbb
daa
iret
push
call
adc
shr
shl
shrd
xadd
mov
shl
btc
add
pushl
mov
push
pushf
mov
sets
not
lods
pusha
pushf
add
movb
cmp
not
movb
sub
jp
neg
call
jmp
and
inc
dec
inc
cmp
inc
push
cmp
inc
dec
dec
sti
inc
dec
dec
dec
dec
sti
add
fstpt
repnz
cmp
mov
call
rorb
cmpsl
ljmp
lahf
addr16
mov
in
lahf
loope
pop
mov
add
shlb
into
mov
and
imul
xor
stos
and
orb
add
adc
in
inc
cmp
pop
into
mov
mov
xor
jl
insl
mov
fildll
mov
movsl
daa
icebp
nop
add
fnstcw
add
or
bound
out
sub
sbb
leave
jl
jle
dec
test
bound
lahf
sub
or
pop
mov
cmp
jg
mov
cmc
sub
or
sub
lods
mov
je
adc
loop
sbb
dec
mov
sahf
sbb
adc
cmp
sbb
xlat
test
in
mov
push
fisttpl
lock
inc
cmp
xor
lods
xchg
lds
insb
mov
lret
add
xor
mov
cli
es
pushf
xor
dec
aaa
sbb
fcoms
stos
incb
loopne
fstpt
adc
mov
mov
jno
jge
jnp
pop
xor
clc
in
clc
add
fs
hlt
mov
adc
pop
jns
sbb
lret
xchg
jo
mov
rclb
cli
sub
fucom
imulb
clc
pop
sti
mov
ljmp
add
sub
push
fs
and
mov
xor
pop
jecxz
loopne
mov
pop
push
inc
adc
cli
mov
js
sub
push
mov
pushf
aad
mov
insb
into
jg
divb
data16
adc
out
ljmp
out
out
inc
in
into
xchg
inc
subb
cs
pusha
dec
lret
xchg
mov
stos
inc
mov
iret
in
pushf
mov
pop
nop
cwtl
jp
jl
leave
mov
adc
dec
push
sbb
mov
jle
dec
daa
jno
mov
and
lcall
in
mov
xor
push
add
jg
sub
cmp
push
xor
mov
push
in
movsl
popa
cmp
outsl
jae
xchg
mov
cmpsb
into
jbe
mov
ss
pushf
in
sbbb
es
mov
pushf
push
call
push
mov
sub
mov
mov
in
push
jo
ret
push
jnp
mov
or
add
sbb
sbb
aaa
mov
or
add
and
push
mov
ljmp
or
aad
popa
mov
sub
test
jne
outsb
test
cmovno
mov
mov
lcall
xor
sub
lds
js
inc
jg
cltd
inc
aad
sti
mov
dec
push
cmp
mov
and
sub
rclb
lret
lock
push
ja
cli
sub
inc
push
sbb
xorb
or
ret
adc
jle
mov
jae
or
imul
jno
ret
adc
test
sbb
or
in
add
dec
inc
sub
mov
shlb
cmp
outsl
add
sub
out
fnstenv
pop
add
mov
jbe
pop
fildll
xorb
push
es
mov
or
pusha
adc
push
mov
xor
stc
mov
ljmp
inc
and
rclb
inc
sbbb
subb
dec
aaa
aam
pop
fbld
call
mov
sub
jno
pop
inc
mov
sub
pushf
and
adc
sbb
pop
enter
cmpsb
les
xchg
xor
inc
dec
rorb
fwait
std
cmpl
imul
fcoml
stos
shlb
ds
pop
scas
js
iret
adc
ss
aam
mov
test
enter
mov
push
imul
mov
fwait
insl
das
mov
dec
sub
lahf
xor
mov
dec
pushf
nop
test
jge
or
or
push
ljmp
aas
out
cmpsl
jno
cmp
andl
cmpsb
jne
or
adc
insl
inc
xchg
cmp
fcomps
jecxz
xor
sbb
mov
movb
push
scas
loop
rcll
mov
loop
inc
out
jp
and
mov
dec
and
mov
jmp
adc
aad
cmpsl
ljmp
mov
call
popa
xchg
push
jb
jb
iret
mov
lods
and
rclb
enter
in
cmpsl
decl
sbb
jmp
dec
push
imulb
daa
shrb
xchg
sub
rcrl
arpl
mov
xchg
xchg
xchg
das
jno
mov
cmpsl
ljmp
add
jno
out
jbe
movsl
loopne
dec
jnp
lods
and
push
sbb
sbb
add
sub
ret
push
pop
mov
xchg
stc
shll
call
jle
jp
push
dec
push
daa
xchg
mov
ror
shll
ja
add
cltd
aas
in
arpl
sbb
in
jbe
or
ljmp
add
scas
push
mov
pop
sahf
and
lods
and
or
fs
adc
sbb
pop
mov
mov
mov
pop
imul
and
js
in
xchg
cld
ljmp
dec
push
cs
xlat
mov
pop
out
fisubs
cmp
addb
inc
call
mov
test
mov
ljmp
inc
xor
pushf
pushf
push
lea
je
pusha
adc
push
pushf
lea
jmp
cmp
or
jb
pusha
pushl
lea
je
sar
aaa
aad
sub
rol
daa
daa
clc
mov
sbb
mov
shr
shl
shr
btr
mov
pusha
jmp
add
pushf
mov
push
mov
movb
stc
test
call
pushf
jmp
daa
push
mov
ljmp
sub
xchg
xor
stos
gs
inc
add
inc
mov
inc
xor
das
imul
aad
pop
add
inc
lea
xor
and
lock
adcl
daa
mull
pop
xchg
push
xor
fdivl
adc
aas
cmp
xor
fs
push
dec
push
xchg
in
mov
xchg
jne
loope
cmpsl
inc
loope
inc
pop
adc
loope
jo
ljmp
std
xorl
xchg
mov
ret
jns
scas
shrb
das
imul
xchg
pop
sub
xor
sub
cltd
in
enter
and
aam
push
lret
jecxz
daa
adc
test
leave
std
cltd
mov
mov
xor
in
xchg
push
out
les
mov
cmp
jmp
adc
dec
inc
ja
mov
ljmp
mov
cmp
insb
ss
out
inc
xor
loop
cltd
idivb
fnstcw
ss
imul
stos
in
fwait
jae
pop
in
leave
push
push
dec
mov
cmp
xchg
testb
negb
sbb
pop
pop
lds
pop
pop
rcll
gs
cmp
in
decl
xchg
mov
pop
movzbl
pop
movzbl
xchg
call
btr
movl
and
mov
cmp
push
call
xchg
rcr
cmpsl
ljmp
or
and
sub
xorl
push
and
cmp
push
cmp
insl
mov
pop
xchg
ja
mov
xchg
adc
lea
test
ss
push
mov
xchg
std
mov
xor
jo
dec
sub
fisubrl
data16
sahf
inc
sub
out
mov
sbb
adc
sahf
dec
adc
inc
fmulp
xor
fnstenv
push
or
pop
xchg
cmpsl
push
rcrb
out
mov
iret
mov
shll
in
movsb
pop
fisubrs
and
lock
dec
imulb
mov
xchg
jecxz
push
inc
mov
xchg
fs
cmc
iret
inc
fcoml
fisubrl
mov
icebp
cmc
mov
sbb
mov
jbe
lods
test
daa
inc
xor
in
and
lret
loopne
dec
out
pop
sbb
and
dec
sti
jae
js
mov
ljmp
xchg
inc
lret
out
js,pn
mov
mov
mov
and
imul
les
aad
or
adc
adc
dec
and
add
sub
mov
add
repz
scas
mov
rcrl
loope
mov
jb
stc
adc
aad
in
add
xchg
flds
jmp
push
jo
xchg
outsb
movsl
rorb
dec
rep
cmp
pop
push
ja
mov
mov
mov
ljmp
imul
xor
fwait
and
notl
test
pop
lahf
mov
sub
or
cmpsb
cmp
test
icebp
ja
shll
lock
pop
sahf
add
jne
pusha
ret
stc
nop
call
cmp
sbb
icebp
sub
sar
xchg
fwait
mov
push
ja
inc
pop
cmp
fnsave
mov
test
gs
fdivrl
lea
call
jnp
pushf
pusha
push
adc
jmp
push
ljmp
mov
sub
jg
pusha
inc
cmpsl
int3
mov
cmpsb
scas
jbe
sbbl
mov
fnstcw
pop
pop
out
rorl
dec
fidivs
sbb
hlt
unpcklps
insb
in
mov
cmp
and
jmp
pusha
xchg
xor
pop
xor
xor
out
add
inc
loopne
or
mov
lds
xor
add
aas
and
repz
int
push
mov
xorb
fldt
aas
repz
pop
repz
ljmp
and
fs
jg
call
pushf
pushf
mov
lea
jmp
jmp
stc
test
pushf
pushf
lea
je
test
call
push
call
cmp
jmp
jp
jae
cmpsl
ljmp
mov
call
inc
mov
cmp
mov
cmp
imul
test
fwait
xchg
xor
movl
or
andl
cmp
mov
xor
out
push
dec
pop
sub
or
xchg
int
in
jno
ret
lods
in
jmp
jns
and
lahf
jecxz
xchg
arpl
lahf
pop
std
test
xchg
jmp
cmp
fstp
sarb
cmp
jbe
push
mov
scas
mov
imul
cmp
xchg
mov
aaa
lods
or
and
mov
xchg
and
sahf
lock
xor
es
xchg
ja
nop
pusha
mov
lock
loope
std
mov
jp
aam
addr16
sbb
iret
ja
sti
leave
pop
out
ret
push
and
arpl
fidivrs
mov
push
or
jnp
jnp
in
mov
xchg
cli
xchg
dec
sbb
das
jg
sub
cmpsl
mov
push
movsl
outsb
push
inc
lea
jb
iret
mov
rcrl
push
xchg
fimull
mov
or
jnp
push
cmpl
mov
adc
stos
jnp
nop
mov
fistl
or
mov
jns
loope
mov
lods
cmp
loop
das
movsb
xor
jmp
movsb
xor
and
or
movsb
push
add
jge
jmpw
sub
movsb
repnz
dec
int3
pop
ljmp
out
fidivrl
das
movsb
xor
jnp
fbld
movsb
xor
sahf
or
dec
xor
iret
jmp
movsb
xor
jmp
movsb
jb
inc
aas
scas
imul
loop
das
movsb
xor
mov
jecxz
jmp
movsb
xor
jp
call
jo
fdivl
and
sahf
jmp
movsb
push
std
std
dec
push
test
das
movsb
xor
addr16
mov
jmp
movsb
mov
and
popf
pop
jmp
les
or
jp
enter
js
sbb
sub
cmp
push
out
sbb
pop
jmp
movsb
xchg
or
jmp
movsb
xchg
cmpsl
sbb
pop
imul
movsb
push
test
inc
jmp
jl
dec
and
stos
jmp
movsb
xor
movsl
and
ljmp
adc
jp
enter
dec
icebp
shl
imul
jp
enter
jnp
rcr
shr
loopne
and
pop
ljmp
mov
jl
or
movsb
jb
test
in
jmp
movsb
push
pop
mov
insl
dec
and
cmpsl
jmp
movsb
xor
sub
shr
xchg
movsb
xchg
xchg
jmp
movsb
jb
jle
scas
sub
jp
mov
movsb
adc
jmp
movsb
xor
cmpsb
mov
adc
and
adc
sub
dec
sub
or
movsb
xor
mov
imul
movsb
xor
das
pusha
add
jmp
movsb
xor
xchg
loope
ljmp
fcomi
rcr
mov
movsb
rclb
jmp
movsb
repnz
dec
scas
mov
xchg
and
push
fucomi
jp
test
cmpsb
sub
imul
jl
scas
xor
jb
mov
aas
xchg
insl
movsb
push
jl
mov
adc
test
mov
ljmp
xchg
jl
jmp
scas
cmp
cmp
clc
mov
pushf
test
call
cmp
pushl
call
push
push
push
pusha
movl
pushf
lea
jmp
ds
fwait
mov
cmp
repnz
inc
fcompl
decb
pop
nop
cwtl
pop
addr16
in
daa
ret
scas
testb
mov
dec
ret
addr16
daa
fs
mov
cmp
xor
push
es
cmpb
das
sbb
mov
xor
mov
insb
frstor
sub
outsl
pop
test
mov
cwtl
sub
sbb
lcall
and
setns
or
push
sub
movsbw
cmp
inc
push
bsf
rcl
push
xor
and
btr
mov
mov
clc
inc
mov
adc
shl
mov
test
clc
cmc
jmp
js
jne
cmpsl
ljmp
icebp
xchg
ret
jno
jmp
inc
iret
pop
mov
mov
mov
sub
fisubrl
fcompl
fstl
pusha
mov
fidivrs
jns
stos
lea
icebp
xchg
or
sub
adc
or
outsl
cmpsl
push
xchg
into
jmp
lret
xchg
je
adc
bound
pop
cwtl
push
jp
rcl
push
cmp
dec
mov
loop
in
lods
icebp
int3
out
pop
xor
icebp
or
cmp
sub
movsl
outsl
sub
xchg
dec
jmp
cmpsl
jmp
stc
loopne
cmpsl
ljmp
pop
add
sbb
movsl
mov
xchg
mov
mov
sbb
ffreep
mov
in
out
jne
ret
mov
mov
outsl
js
nop
sbb
stos
in
sbb
lods
ja
mov
mov
mov
fwait
pushl
and
cmc
fidivrl
sbb
sti
stos
inc
add
jge
aaa
xlat
popa
addr16
aas
icebp
add
int
pushf
movw
lea
jns
call
jmp
mov
pusha
push
movb
pushf
pushl
ret
jmp
cmp
mov
xor
mov
lcall
mov
xor
aad
adc
dec
in
scas
and
in
mov
or
add
xlat
dec
shrl
inc
sbb
lea
bound
lock
dec
mov
xchg
add
sarl
cmpb
jb
loope
jp
add
or
in
sar
cmp
push
imul
jge
sbb
out
shll
mov
test
pusha
push
lea
ja
test
sar
bt
sub
rcl
add
add
sbb
sub
shr
bsr
mov
test
rol
mov
call
test
add
mov
stc
call
pop
push
fildll
or
inc
js
sbb
dec
mov
mov
mov
arpl
jg
and
rclb
out
dec
loop
in
sti
cs
scas
call
jl
mov
insl
cs
push
cmp
mov
shll
mov
push
insb
inc
aaa
pop
mov
sub
mov
movsl
ret
push
inc
push
lock
push
inc
das
stos
pop
sbb
pop
push
mov
je
mov
dec
aad
mov
pop
int
repnz
jb
call
jle
mov
and
cmp
sarb
push
dec
xor
insl
dec
xchg
pop
imul
sbb
sub
test
rolb
or
mov
jbe
btc
lea
sub
neg
not
mov
shl
movzbw
mov
dec
add
rcr
shr
or
movzbl
stc
mov
jmp
pusha
jmp
mov
lea
shl
movzbw
add
sbb
movl
bsr
bswap
mov
bt
jmp
inc
bt
cmp
push
cwtl
lea
jae
lea
movzbl
pushf
pop
pop
pushf
jmp
cmc
imul
clc
call
add
call
add
dec
outsl
arpl
inc
jb
gs
in
or
lea
jae
sbb
btc
mov
setnp
shl
cmc
neg
mov
rol
shl
neg
mov
push
clc
call
pushf
lea
ja
sub
rcl
sbb
sub
setle
xor
shl
add
test
shrd
ror
mov
call
imul
cmpsl
ljmp
sbb
rcrb
xchg
push
enter
cmp
outsb
sub
movsb
xor
jnp
fdivrl
repz
lcall
lock
loope
pop
jae
pop
add
or
shr
jmp
jae
mov
mov
or
inc
mov
pop
or
int
sbb
xor
fistps
mov
push
cmp
sub
cmc
mov
sti
movl
outsl
adc
loop
cmp
mov
jb
xchg
stc
movzbw
stc
add
sar
not
mov
sbb
test
mov
clc
test
repnz
call
call
stc
cmp
pushf
lea
ja
rol
rol
pusha
shr
sub
shrd
sub
adc
lea
add
sub
adc
stc
sar
mov
rol
call
cmp
mov
pushf
cmpb
pushl
jmp
inc
rolb
cmpsl
ljmp
cmp
jo
aam
repnz
das
mov
stos
jl
xor
sub
cmp
fiadds
icebp
ret
push
aas
shlb
push
mov
mov
lods
add
push
dec
arpl
addb
add
add
xor
dec
push
pop
jno
add
aam
mov
xor
and
jmp
stc
movsl
pavgw
pop
sbb
adc
jne
push
pop
sbb
sub
test
iret
decl
mov
pusha
lea
movb
lea
movzbw
pusha
pop
mov
call
xchg
inc
xchg
ret
push
mov
ja
icebp
mov
jnp
mov
push
push
lock
and
lret
jne
add
shl
daa
cmp
ret
nop
test
addl
mov
fcmovnb
es
xlat
jae
push
or
sbb
and
adc
xchg
in
js
shl
clc
stos
ret
clc
ret
orb
push
mov
adc
push
mov
xchg
or
xor
stos
pop
cmp
rcrb
push
cmpsb
cmp
ss
adc
je
leave
push
fmuls
add
jmp
pop
out
xchg
gs
jnp
fdivl
sub
stc
xchg
jmp
adc
push
cmpb
jg
enter
add
pop
or
xchg
jbe
enter
fwait
mov
xchg
pop
xchg
out
les
mov
repnz
xchg
mov
rcrb
sti
xchg
adc
cmpsl
ljmp
aas
jecxz
add
fldl
fdivrs
divb
jnp
lock
enter
sbbb
jns
mov
fistpll
push
jp
xor
in
xchg
sbb
gs
mov
mov
arpl
adc
push
cli
sahf
es
mov
data16
sbb
inc
adc
sbb
aas
in
lea
shrl
xor
xlat
cwtl
popa
arpl
push
jnp
xor
adc
imul
rclb
rclb
mov
leave
push
fistps
jo
mov
lock
push
mov
add
pop
push
pushl
sub
mov
movsb
rcr
or
ret
xchg
sbb
jge
pop
mov
or
dec
adc
xor
push
push
movb
lea
ja
call
add
pushf
movb
not
pusha
stc
bt
pushf
neg
push
jmp
ja
xor
cmpsl
ljmp
js
jp
fidivl
out
jae
frstor
and
xchg
fisubs
das
imul
into
push
pushf
fcmovb
adc
dec
addb
jge
mov
pushf
push
adc
push
gs
xor
jo
jae
add
inc
inc
pop
cmpsb
arpl
nop
aad
adc
push
pop
jb
testb
movsb
push
loopne
cs
mov
ds
call
xchg
fidivrs
lds
pop
add
xor
jb
adc
lds
lea
jno
das
imul
ds
xorb
test
jae
mov
test
and
imulb
aas
add
int3
adc
test
mov
sub
out
lods
dec
mov
sbb
add
dec
add
ja
rcrl
xchg
adc
jae
add
jle
les
and
pushl
lea
jb
cmc
test
cmp
push
call
add
test
test
test
jmp
push
mov
push
pushl
ret
adc
mov
sbb
daa
lods
addr16
jmp
lds
cltd
repnz
inc
repnz
das
imul
ficompl
push
push
lock
xchg
or
jno
fcomps
rcrb
push
or
cmp
jecxz
pop
cmp
pop
jmp
insb
pop
cmp
je
cmpsl
jo
pop
inc
js
loop
inc
adc
pop
xchg
pop
aad
pop
mulb
push
jge
xorb
enter
fisubs
outsl
xchg
sti
xor
into
cmp
int
xlat
push
aad
fildll
push
adc
stc
push
adc
cmp
lea
je
stc
add
pushf
cmp
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
cmpsl
ljmp
lods
pop
xor
rorb
stos
scas
lds
fidivs
mov
std
shr
cwtl
pop
daa
push
lds
cli
je
and
jl
mov
pop
cltd
in
and
rorb
pop
xchg
outsb
xchg
pop
inc
inc
das
jne
mov
pop
cmp
daa
mov
and
dec
add
cli
and
es
sbb
lock
jns
imul
sub
sub
mov
push
hlt
push
fs
cmp
cmpsl
ljmp
inc
ret
test
cmp
or
pop
stos
mov
sahf
leave
pop
loope
mov
sbb
sbb
or
fldl
cmc
je
xchg
dec
dec
xchg
xchg
in
pop
iret
dec
rolb
jno
jp
stos
or
dec
sbb
int3
loop
cmp
aad
xor
jp
lret
jge
mov
sub
sahf
jns
jb
xor
fstpl
pop
mov
pop
pop
and
aam
push
into
push
adc
push
les
sbb
pop
mov
and
dec
popa
dec
add
xor
pushl
call
adc
icebp
enter
call
push
xor
addb
jb
cmp
stos
push
aas
xchg
scas
mov
ja
stos
add
outsb
mov
add
out
mov
arpl
fisttpl
js
outsl
and
inc
aam
dec
cmp
stos
mov
movsb
pop
enter
cltd
sub
sti
or
adc
imul
out
andl
mov
lock
aas
fisttps
pop
cmp
sbbb
sbbb
out
mov
sbb
imul
jae
adc
ds
inc
mov
in
inc
inc
inc
cmpsb
mov
cmp
clc
iret
hlt
inc
jno
adc
xchg
lret
adc
pop
cwtl
mov
cmp
lods
subb
mov
call
es
mov
inc
push
leave
cmpsl
ljmp
or
jb
ljmp
stos
or
xor
ret
adc
sbb
sbb
or
xchg
pop
data16
lea
test
dec
imull
pop
rcl
dec
mov
popa
pop
dec
scas
add
mov
jo
daa
adc
out
push
jmp
mov
sbb
cmpl
imul
xor
daa
testl
lods
out
lods
adc
bt
repnz
jmp
movl
push
movl
pusha
pusha
movb
lea
jmp
call
inc
bt
mov
cmc
push
not
pushf
jmp
call
cmp
ljmp
sarl
lahf
inc
loope
xchg
push
test
pop
adc
outsl
les
clc
and
sub
imul
dec
dec
xchg
adc
mov
insb
dec
jne
rorl
rcll
sub
gs
nop
imul
and
push
xchg
xchg
loope
mov
mov
repz
aam
sub
int3
sbb
inc
xchg
sahf
push
repnz
gs
test
adc
ljmp
mov
sub
or
add
cmp
add
push
mov
pushf
lea
jmp
mov
jmp
mov
ljmp
lret
lahf
mov
mov
in
gs
sbb
mov
pop
es
outsl
dec
jo
jnp
mov
lea
cmp
jbe
in
cmp
xor
rcll
dec
popf
clc
cltd
inc
push
adc
jae
fsubrp
gs
scas
xchg
mov
jge
mov
mov
and
add
inc
loopne
push
mov
mov
cld
mov
pop
lods
jmp
hlt
movzwl
inc
mov
movb
add
clc
test
pushf
mov
movl
test
call
faddp
sbb
cmpsl
ljmp
sub
andb
xor
jp
aas
notb
dec
cli
sbb
imul
dec
arpl
sub
popf
int
sbb
and
cltd
xchg
fs
xchg
subl
test
pop
movsl
jns
popf
into
insl
inc
pushf
jg
xchg
jae
inc
pop
lret
cwtl
xchg
out
or
adc
stos
inc
into
xchg
jle
xor
lcall
xor
pop
pushf
push
call
bt
cmc
add
pushf
pushf
movl
lea
jmp
pusha
movw
push
lea
jne
bt
mov
bt
cmc
call
pushf
lea
jae
pushf
lea
jne
push
stos
pusha
lea
jmp
out
xchg
inc
int3
cmpsl
ljmp
das
mov
xor
xchg
imul
stos
push
in
clc
xchg
cli
cmp
rcl
in
addr16
xor
xor
pop
mov
arpl
ret
loopne
sti
fistl
loope
loop
sub
add
into
sub
lods
test
mov
add
sub
fldl
dec
daa
sbb
cmp
add
push
ljmp
aaa
cmpsl
and
lods
stos
dec
cmpsl
jmp
call
push
push
inc
push
xor
cs
insb
add
cmp
cmpsl
ljmp
push
rcrb
mov
sub
cmpsl
dec
pop
scas
int3
pop
aad
adc
insl
inc
cmpl
daa
inc
add
pop
test
int
ret
mov
pop
scas
push
xchg
mov
and
sub
scas
mov
xchg
lds
add
int
ljmp
sub
cmp
out
push
fisubl
jns
mov
jmp
or
xchg
arpl
das
adc
xchg
mov
mov
out
inc
push
fisttpl
test
jnp
into
scas
cmp
stos
push
outsl
stos
fcmovu
jbe
jmp
pop
and
nop
push
mov
cmp
test
decb
pop
adc
stc
call
repnz
in
push
push
loop
mov
adc
sbb
cmp
sub
int
ljmp
call
inc
pop
xchg
repz
out
and
xchg
loop
mov
mov
cmp
and
mov
ja
addb
fs
repz
divl
inc
xchg
adc
lea
mov
xor
data16
clc
leave
arpl
test
mov
add
clc
add
fadds
flds
into
push
cs
adc
outsl
je
aam
mov
jg
mov
mulb
xchg
sub
push
insl
dec
lods
call
ljmp
filds
cmpsl
jl
ret
inc
out
test
fists
inc
add
jo
insb
xor
and
hlt
push
testl
ret
push
xor
jmp
lods
and
and
jecxz
mov
test
xor
inc
sbb
imul
jecxz
jne
push
mov
test
pcmpeqd
fs
xlat
or
xchg
insb
push
cmp
mov
adc
stc
iret
cmpsl
ljmp
sub
mov
lds
std
fs
jp
lock
push
out
xchg
xor
mov
out
pop
or
ficoms
push
dec
pop
out
arpl
fisubrs
imul
pushf
and
sbb
ret
or
cmp
fisubrs
sub
loop
mov
xorb
ja
in
mov
push
sbb
sbb
rcr
cmp
mov
sub
mov
mov
sahf
dec
push
out
test
fs
imul
ret
cmp
je
outsb
jmp
add
stc
test
mov
call
bswap
das
push
shld
mov
not
inc
sub
xor
btr
rol
sbb
push
setb
rol
ror
push
bts
push
shld
adc
push
lea
cmc
btr
mov
bt
test
call
jmp
cmp
or
cmpsl
ljmp
pop
xor
fwait
das
pop
fstl
and
outsb
or
mov
jno
out
iret
daa
in
rep
or
in
repz
adc
cmc
mov
push
sub
cmpsl
cmp
pop
pop
aaa
dec
push
lcall
push
mov
and
add
and
push
imul
into
jne
pop
dec
and
jo
sbb
push
aam
xor
inc
jne
xorl
add
rep
sub
aad
mov
ss
push
xchg
jmp
jae
adc
or
scas
adc
sbb
aam
dec
xchg
dec
jcxz
add
pop
lret
cli
insl
sar
decb
imul
call
mov
xorb
mov
jg
enter
and
add
in
xor
or
jp
mov
xchg
pop
push
push
jge
aad
xchg
ss
shll
test
fmuls
inc
add
das
xor
arpl
std
and
adc
pop
arpl
cmp
sbb
in
push
mov
syscall
ljmp
inc
xchg
mov
rorl
mov
insl
fdivl
or
add
mov
pushw
in
xchg
cli
mull
cmp
or
in
xchg
rorl
jae
or
pop
jb
hlt
outsb
mov
mov
xor
jmp
mov
ljmp
sbb
pop
lods
fisttpl
lds
aad
add
dec
lea
xlat
pop
add
pop
sbb
jmp
pop
inc
loop
out
push
cmp
inc
iret
push
mov
mov
fsubrl
arpl
xchg
jns
add
xchg
pop
data16
dec
js
mov
add
inc
je
jmp
popf
imul
dec
fcompl
jmp
adc
iret
jl
push
cmp
rcl
out
add
ror
cmpsl
xchg
sar
or
sub
loopne
out
nop
mov
sti
cmpsl
iret
xor
mov
xchg
add
xor
cmp
mov
and
xchg
mov
pop
stc
arpl
xchg
mov
cmpsb
xor
js
and
test
inc
cld
and
out
xchg
push
les
xchg
repnz
or
sub
in
pusha
mov
lea
ja
jmp
mov
cmp
rorl
imul
lret
insl
mov
lahf
mov
xlat
mov
jae
push
das
lret
cmc
xchg
xor
ljmp
xchg
movsb
fistps
dec
lods
js
mov
leave
jmp
arpl
imul
fcmovu
inc
mov
xchg
lods
pop
mov
pop
cmpl
lret
into
insb
ds
cs
push
add
subl
ljmp
stos
push
xor
outsb
sbb
stos
into
lcall
data16
inc
sbb
movsl
add
imul
xchg
mov
das
xchg
dec
nop
orl
push
outsb
sti
aaa
and
inc
jp
mov
and
mov
adc
or
shlb
andl
rolb
push
xor
xchg
lods
jns
cmpsl
cmp
popf
sub
std
pushf
or
push
xchg
in
shll
pop
and
addr16
mov
sub
dec
mov
int
dec
aas
and
pop
sbb
cmp
es
jbe
aam
push
adc
and
push
movsb
xor
out
lods
mov
mov
lea
ja
stc
stc
push
cmc
imul
call
sbb
add
cmpsl
ljmp
sub
ja
icebp
mov
adc
pop
jg
adc
pusha
rcrl
shlb
mov
xchg
ljmp
dec
outsb
aad
jns
xchg
inc
xor
push
daa
jne
jmp
lret
addr16
in
jge
jecxz
nop
loopne
or
adc
mov
insb
cltd
cmpsb
rcll
sub
cmp
dec
sub
daa
mov
imul
jmp
mov
imul
cmc
pusha
cmp
add
movw
pushl
push
lea
jmp
lea
jb
clc
jmp
popa
dec
mov
cmpsl
ljmp
dec
jecxz
dec
psubusw
subb
gs
pop
mov
sbb
cmp
mov
mov
jno
rorb
jg
inc
push
ljmp
xchg
nop
mov
loopne
or
add
sub
lea
xor
cli
dec
loope
xor
imul
inc
iret
or
jae
mov
inc
stc
xchg
pop
fistl
fisubs
xlat
cmp
mov
movl
push
push
movb
lea
jmp
jmp
pushf
push
lea
jb
pushf
push
movb
push
pushl
ret
movb
stc
mov
cmp
mov
test
test
mov
jmp
jbe
aad
ljmp
mov
sbb
test
pop
inc
and
imul
lds
negb
out
stos
bound
or
ficomps
lahf
stos
addl
ja
pop
cmp
cmp
mov
int3
or
jne
and
test
mov
or
dec
lahf
popf
out
test
shl
xchg
xchg
mov
lcall
idivl
frstor
ret
or
ljmp
xchg
push
cmp
cmp
into
jb
add
lods
dec
repnz
xchg
mov
ss
and
cltd
shlb
sbb
repnz
add
push
pushf
adc
push
call
xchg
xchg
or
cmpsl
ljmp
push
daa
mov
icebp
adc
or
imul
daa
dec
add
and
jbe
ret
int
push
mov
scas
loop
sub
test
out
mov
aam
out
mov
and
cld
jne
and
dec
scas
mov
mov
in
cs
rcrb
cwtl
inc
pop
cli
lcall
cld
add
or
add
add
bt
clc
cmp
jmp
call
stc
push
clc
test
jmp
out
jnp
xlat
cmpsl
ljmp
aaa
xchg
mov
ljmp
push
xchg
aam
inc
sub
loope
push
and
xchg
xor
jae
ljmp
dec
cmpsb
pop
sbb
xchg
fidivl
bound
pop
dec
addb
cli
lcall
popf
repnz
in
xor
push
cmp
je
mov
ljmp
imul
insb
cmp
addb
fcoms
adc
fdivrl
sbb
nop
loopne
out
js
sbb
push
jge
shr
pop
cmp
sti
sub
hlt
adc
fcmovnb
ljmp
icebp
cmpsl
insl
mov
jne
cmp
in
cmp
ljmp
pand
mov
aaa
sbb
sti
sub
pop
sbb
es
adc
pop
jecxz
outsl
inc
jns
sbbl
xchg
xchg
ficoml
push
add
hlt
cwtl
push
adc
push
loope
pushf
outsl
xchg
pop
pushf
push
xor
gs
mov
rcrl
or
shll
mov
imul
movsb
in
xor
gs
and
jb
add
es
insb
stos
gs
mov
jno
jp
push
dec
sub
or
stos
cld
mov
or
mov
cmpsb
js
cmp
mov
add
mov
inc
loop
pushf
movw
bt
repnz
movb
push
pushf
jmp
push
pushl
lea
je
jmp
adc
add
add
add
and
add
add
add
sbb
add
add
jecxz
or
add
add
add
testl
add
add
addb
add
xor
add
add
insl
adc
add
add
add
push
sldt
add
add
or
add
or
add
adc
add
push
bts
call
mov
movw
lea
jne
rcr
btc
bswap
das
sub
cmp
mov
inc
rol
inc
add
jmp
mov
pushf
adc
lea
push
call
mov
fldenv
sbb
pop
jnp
mov
test
lods
scas
xchg
popa
xchg
jmp
mull
dec
lret
imul
mov
and
repz
shlb
addb
cmc
push
in
push
push
cli
xor
frstor
scas
mov
adc
rcll
icebp
movsl
into
jecxz
pop
mov
xchg
mov
jnp
rcl
aam
out
pop
test
push
xor
fcmovb
jge
scas
test
and
mov
dec
cltd
sbb
xor
sti
fs
outsl
je
lret
sub
cmp
test
push
pushf
pushl
popl
pushf
jmp
mov
pushl
pushf
movw
pushl
ret
add
jmp
lea
ja
call
popf
xchg
or
cmpsl
ljmp
jp
xchg
not
or
jae
lcall
mov
fstl
mov
les
jb
lahf
mov
adc
orb
rclb
and
sub
lock
inc
lcall
neg
cwtl
jecxz
cmpb
test
dec
and
imul
pop
sti
inc
in
sbb
sti
es
addr16
stos
dec
or
cmp
or
push
out
jecxz
or
or
cmp
cmp
inc
fstpl
xor
daa
xor
repnz
jl
imul
push
js
lds
add
sub
js
push
cmp
repz
push
jnp
sub
mov
xlat
xchg
pop
sub
push
cmp
push
add
inc
jmp
push
push
push
xor
pushf
lock
mov
loope
sbb
subb
fnsave
jl
popf
cli
jecxz
pop
adc
push
imul
and
std
inc
pushf
aad
lcall
fisttpl
or
xchg
pop
sbb
sbb
out
xchg
icebp
sbb
inc
xlat
pop
inc
dec
dec
inc
push
dec
xor
cs
insb
add
cs
dec
mov
ret
push
adc
outsb
inc
in
or
jb
mov
cmovno
lea
shl
xor
dec
adc
cwtl
pop
mov
pop
das
xchg
xchg
cmc
outsb
out
int3
sbb
loope
insl
inc
mov
shll
mov
pop
and
and
or
xlat
adc
mov
idivb
push
jle
je
daa
bound
pop
push
out
xchg
dec
jmp
jne
mov
add
lret
add
bound
fs
jne
sbb
bt
mov
test
call
add
pushf
movsbw
pop
jmp
jbe
shrd
movsbl
jmp
pushf
lea
je
bt
sub
cmc
call
lea
je
mov
sub
cmc
sub
aas
btc
mov
rcl
bsf
mov
pusha
shl
shr
sbb
xor
mov
stc
cmc
bt
stc
or
movb
lea
je
rcl
add
shld
sar
sub
rol
sete
shr
ror
stc
mov
dec
bts
add
movsbw
bt
add
adc
bswap
rol
mov
bt
shr
push
bt
pusha
cmp
pusha
mov
movb
lea
je
cmp
stc
bt
cmp
pusha
push
lea
je
cmc
stc
cmp
jmp
rol
mov
stc
cmc
ror
jmp
pushf
sub
lea
jmp
mov
rol
setl
push
sar
mov
sub
jnp
bt
pusha
pusha
xor
bt
cmp
repnz
jmp
pusha
pop
lea
pusha
pushf
movl
jmp
add
add
pushf
lea
jbe
xadd
bts
pusha
shl
mov
bts
add
push
or
call
pushl
pushl
pushf
lea
jb
pusha
pusha
cmpb
mov
pushf
pushl
pushf
lea
jne
shl
mov
pusha
test
add
test
stc
push
pusha
movzwl
bsr
shl
mov
mov
bt
jmp
movb
movsbw
pop
lea
bswap
mov
setle
bswap
lea
push
call
xchg
mov
jg
inc
jmp
outsl
aas
in
pop
gs
loopne
push
iret
pop
iret
fldl
xchg
dec
pop
ret
ficoml
xchg
xchg
int3
popf
adc
cli
add
mov
jl
xchg
pop
sub
cs
in
adc
das
scas
dec
xchg
mov
in
add
cmp
out
mov
adc
sbb
movsb
pop
in
addb
cmp
pushf
test
lcall
and
dec
push
fbld
jnp
repz
adc
stos
inc
jg
mov
jnp
jmp
outsl
push
jbe
sbb
shrl
iret
es
orb
jl
in
rcrb
ret
push
pusha
fwait
in
lret
mov
cmp
xchg
pop
daa
push
ret
and
dec
dec
js
dec
mov
out
pop
ret
mov
jge
mov
and
fnstenv
inc
pop
daa
iret
jae
aad
aaa
add
cmc
jle
je
pop
jo
push
je
adc
cmpsl
ljmp
cltd
push
pop
scas
mov
sbbl
daa
push
or
fsubp
mov
movsl
cmp
mov
pop
or
insl
fisttps
jns
cmp
adcl
scas
jp
ljmp
lret
push
jnp
ljmp
fsubl
les
enter
je
sub
jo
les
out
psrad
into
cmp
or
lock
cmpsl
ljmp
or
inc
lcall
mov
xchg
mov
push
enter
xor
bound
rclb
and
inc
jp
int
mov
xlat
or
sbb
in
pop
sbb
mov
push
pop
sbb
test
xchg
sbb
cwtl
fs
mov
vminpd
xchg
sub
movsl
and
bound
mov
mov
xor
cs
insb
add
xchg
loopne
ljmp
pop
or
sub
mov
test
in
push
js
mov
jg
shll
jmp
ja
adc
mov
dec
dec
outsb
mov
push
add
jg
hlt
cmp
pop
xchg
jge
sub
jg
addl
mov
mov
cld
lock
addb
sub
push
test
cmpsb
jbe
sbb
cwtl
jo
enter
jle
lock
loopne
movsb
enter
pop
xor
cs
insb
add
daa
jbe
cmpsl
ljmp
jnp
mov
in
and
adc
aam
loop
imul
fiadds
mov
sub
frstor
pop
fildll
lret
adcl
jno
push
cmp
call
data16
cmpsl
ljmp
pushf
xor
int3
mov
pop
subl
testl
pop
and
add
jns
inc
scas
jl
jae
xchg
icebp
imul
sub
lock
jp
inc
xor
fs
addr16
sbb
xchg
incl
mov
cmp
pop
dec
xchg
outsl
mov
sbb
scas
xchg
dec
testl
add
daa
mov
sbb
mov
call
pushf
mov
lods
call
psrld
jecxz
ljmp
imul
mov
subl
sub
fs
pop
cmpl
mov
int3
scas
dec
push
dec
out
fisubl
cmpsb
icebp
std
cltd
adc
ds
repz
cmp
sub
repnz
std
push
adc
lds
and
add
dec
xchg
pop
inc
faddl
pop
fsubrs
add
repz
xchg
cmc
gs
mov
mov
pop
icebp
xchg
jge
xor
mov
mov
divb
inc
cmc
pop
imul
jecxz
ljmp
outsb
and
insb
fwait
mov
cli
inc
and
adc
fucomp
adc
mov
ss
mov
mov
popf
rcrb
xchg
jnp
stos
test
aam
push
in
cmc
sub
adc
mov
aad
imul
and
adc
adc
inc
rcll
ss
mov
rcl
scas
aam
pop
xor
mov
repnz
mov
pusha
or
pushf
neg
jmp
pushf
jmp
das
inc
inc
sti
dec
dec
aas
inc
dec
cmp
sti
add
ds
push
inc
aas
sti
dec
dec
dec
sti
cmp
ds
inc
aas
sti
inc
dec
sti
dec
inc
inc
sti
aas
push
dec
cmp
inc
ds
inc
inc
dec
inc
sti
inc
inc
cmp
sti
add
stc
repnz
push
mov
lea
jne
lea
movb
pusha
mov
call
push
dec
xchg
in
ljmp
gs
jae
test
xorl
je
inc
pushf
cmc
int3
adc
imul
rcrb
mov
cwtl
and
and
aaa
stc
nop
inc
ja
push
std
je
test
js
push
out
pop
xor
pop
lds
jecxz
enter
pop
mov
add
out
arpl
lds
fs
cmp
mov
mov
push
mov
and
mov
xchg
arpl
xchg
pusha
stc
sub
mov
push
call
mov
push
in
ljmp
mov
in
mov
pop
lahf
jae
push
scas
stos
mov
add
scas
repnz
lcall
mov
hlt
js
scas
and
idivl
nop
test
push
sub
lods
jb
outsl
mov
mov
out
outsl
cmc
xor
add
stos
jp
aas
rolb
out
ljmp
outsb
ret
fs
push
or
xchg
testb
ficomps
mov
cmp
sub
ds
pop
pushf
push
sbb
jnp
mov
push
andl
sub
daa
pop
das
xlat
mov
adc
jns
cmp
cmp
insb
bnd
mov
lea
jae
test
shld
sar
sar
mov
btc
clc
mov
ror
not
rol
mov
test
xor
pushf
repnz
pushf
call
mov
dec
in
ljmp
test
es
int3
jo
jnp
pop
mov
cltd
mov
sbb
int
pop
lahf
leave
mov
fistps
mov
repnz
or
int
lret
repnz
and
jns
aas
mov
mov
movsb
cmpsl
loop
dec
loop
lods
mov
out
cs
out
std
xor
ret
loope
in
and
cmpsl
ljmp
and
roll
pop
inc
mov
sub
lret
pop
push
dec
xor
adc
mov
jnp
les
sbb
scas
shlb
repz
cld
loop
lock
sar
ret
cs
fsubs
mov
stc
dec
adc
cmp
gs
insb
pop
fistps
fnsave
pop
xchg
insb
cwtl
cmpsl
ljmp
out
cmpsl
fildl
push
psraw
jle
addl
cmpsl
ljmp
in
push
pop
push
mov
int
mov
push
sub
imul
and
mov
mov
and
jg
aad
mov
cs
repnz
xchg
add
jno
sti
push
add
insl
sub
data16
je,pt
in
adc
mov
ret
js
mov
and
je
movsb
inc
fadds
scas
loope
fmuls
leave
int3
xor
hlt
push
call
shr
call
cmp
mov
push
lea
ja
jmp
lea
jne
push
call
pushl
mov
call
jmp
push
call
loop
loope
cmpsl
ljmp
lahf
push
pop
mov
fwait
dec
push
push
dec
and
es
test
add
xor
push
lods
sub
xchg
adc
lret
shll
cmpsb
faddl
push
push
cltd
daa
ss
popl
cmc
ds
cli
and
jmp
mov
les
ret
sarb
outsl
jl
gs
adc
pop
bswap
jne
test
out
cwtl
cld
bound
pop
xchg
jmp
mov
ficoms
mov
ds
incl
clc
push
cmpsb
push
xor
adc
xor
sub
in
mov
das
lret
hlt
popa
loopne
inc
es
and
mov
cmp
adc
ret
push
mov
mov
ror
lds
fdivl
sbb
cmp
mov
xchg
int
pop
adc
xchg
popa
sub
sbb
xlat
loopne
imull
cmp
sar
call
mov
xchg
call
repnz
push
or
je
shlb
xor
sub
arpl
pop
xor
xor
mov
and
insl
mov
push
adc
sahf
out
rcr
ret
cmpsb
jae
xor
popf
adc
mov
mov
sbb
andl
iret
mov
movsb
flds
insl
cmp
stos
inc
js
adc
mov
aam
and
jle
bound
inc
into
sub
lea
sub
bswap
bt
sub
bts
mov
cmp
sub
pushf
pushl
popl
cmp
clc
clc
clc
cmp
jl
ja
bt
or
pusha
sub
dec
add
add
rol
mov
cmp
mov
jmp
in
movsb
xor
cmpsl
ljmp
jae
mov
pop
push
mov
fidivrs
es
lea
mov
rclb
daa
mov
lret
out
jge
cmp
mov
xor
adcl
jns
fsubrs
mov
mov
sub
hlt
lret
popa
jp
push
imul
sti
jns
jmp
mov
sbb
dec
cmc
cs
lea
jge
jbe
or
jno
xadd
mov
btr
bts
add
xadd
sar
neg
mov
pusha
or
bswap
bsf
add
shr
test
bts
movl
rcl
mov
sub
clc
cmp
pusha
jmp
or
jecxz
cmpsl
ljmp
mov
fildll
stos
inc
push
cmpsb
add
cmp
sbb
push
in
stos
sub
mov
nop
cmpb
adc
lods
inc
mov
pushf
jnp
lods
dec
add
movsl
inc
scas
repnz
and
add
jp
sti
pushl
sbb
push
pandn
cmp
dec
mov
mov
lock
inc
subl
and
dec
sbb
xchg
xor
les
outsb
je
mov
imul
push
mov
cmp
fmull
dec
test
cmp
aas
xorb
in
pop
subl
jbe
cltd
icebp
je
sbb
push
pop
and
cmpsl
outsb
out
arpl
push
adc
inc
stos
sub
or
jmp
pop
push
jb
add
mov
xchg
xor
call
add
test
repnz
xchg
pop
sub
stos
cmp
push
or
jmp
hlt
js
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
out
scas
jmp
ljmp
aas
add
pop
aaa
pop
push
or
rorb
xchg
pusha
inc
xor
jnp
bound
push
and
into
push
cmpsb
jae
cwtl
xchg
ret
das
in
imul
jmp
mov
and
push
sub
sbb
addr16
cmp
and
in
sbb
xchg
pop
push
cmp
jns
lret
xor
jno
sbb
add
stos
js
mov
test
push
fsub
movsb
in
int
xchg
addr16
fld
sbb
out
lret
add
movsl
cltd
leave
xchg
fwait
dec
mov
fistps
inc
and
mov
pop
mov
testb
andb
sbb
ljmp
adc
sti
cli
sbb
xchg
in
push
into
ficoml
push
pop
ss
mov
push
sbb
push
adc
pushf
popf
jg
adc
pop
lret
insb
aam
stc
repz
xchg
push
mov
xlat
repnz
mov
sub
dec
fimull
sbb
dec
mov
mov
hlt
xchg
cmp
shlb
mov
add
fdivs
mov
ljmp
cmp
push
cli
add
call
add
cs
cmpb
mov
mov
mov
insl
mov
add
or
cmpsl
ljmp
xor
mov
xchg
scas
add
gs
dec
in
fwait
sbb
lahf
dec
adc
push
out
pop
mov
adc
cmpsl
ljmp
and
ficomps
ljmp
inc
stos
leave
flds
pop
sbb
outsl
xchg
vmwrite
cmpsb
and
pop
and
jp
ds
add
sub
mov
sbb
mov
sbb
mov
orl
xchg
pop
cmp
insl
add
inc
push
mov
dec
mov
ljmp
std
jne
movsl
mov
pop
mov
stos
cli
inc
pop
mov
ficoms
lret
sbbl
push
add
es
cmp
pusha
inc
scas
das
movsb
sbb
push
mov
inc
sub
adc
rcll
out
cs
js
mov
pop
mov
mov
mov
lds
push
incb
lds
outsb
sub
cld
fsubrl
jmp
sti
ret
jg
idivl
icebp
push
push
cs
xchg
int3
pop
sub
cmpsl
ljmp
adc
cmpl
stos
cmpsl
inc
inc
int
push
test
movsl
andb
pop
or
mov
inc
pop
flds
jns
je
out
sbb
push
push
push
jg
ljmp
xchg
xor
imul
aam
jecxz
cmpsb
pop
jle
mov
sub
popa
pop
dec
xchg
push
xchg
loopne
out
add
fldcw
or
or
inc
jmp
xchg
pop
jp
cmpsl
ljmp
incl
lds
pop
mov
mov
push
xor
outsl
pop
xchg
std
xor
xchg
cwtl
pushf
mov
xor
jb
lahf
int
cmpsb
daa
cli
iret
fcmovne
idivb
dec
pop
ss
or
sbb
jae
add
and
pop
mov
and
in
push
mov
and
xor
mov
stos
or
nop
cwtl
inc
lock
les
pusha
ret
lods
mov
test
enter
fsincos
out
cmpsl
ljmp
adc
inc
call
sub
fildl
xchg
imul
push
and
lret
sbb
xor
and
jo
jmp
bound
mov
cld
push
bound
add
inc
dec
pop
out
mov
cmp
leave
or
inc
add
aad
jae
enter
test
out
xor
mov
fidivl
push
insb
stc
sub
or
adc
cmpsl
ljmp
jae
shrl
lahf
mov
or
or
xchg
dec
scas
jge
stos
and
insl
xchg
sub
adc
mov
popf
adc
negl
add
sub
lcall
stc
repz
push
pop
scas
call
cmp
jne
imull
xchg
pop
sti
cmp
jnp
mov
iret
jmp
pushf
inc
lea
jmp
sbb
clc
rol
mov
bswap
sete
pusha
add
xchg
btr
pushf
movsbw
mov
shrd
add
pushf
jmp
cmp
sub
jmp
mov
ljmp
push
cwtl
cs
scas
data16
mov
jle
add
iret
movsb
push
sub
mov
popf
or
or
fisttpll
add
jbe
stos
xor
fwait
add
iret
dec
pop
je
loope
lods
push
jmp
enter
jbe
sub
mov
xchg
loopne
in
scas
daa
stos
dec
jmp
sbbl
xchg
and
shl
cmc
mov
pusha
stc
cmc
test
mov
pushl
pushf
lea
je
stc
call
adc
out
sub
mov
pop
xchg
sub
mov
fistpl
jb
jns
and
fstps
sbb
loopne
mov
adc
and
push
mov
idivl
jmp
pushf
cmp
inc
pushf
sbb
adc
in
jg
shlb
dec
js
daa
dec
cmpsl
lcall
data16
dec
ret
sub
andl
or
adc
test
xchg
cs
ret
out
stc
jbe
cmp
sub
adc
lea
jne
pusha
stos
pusha
lea
jmp
popa
out
out
cmpsl
ljmp
xchg
xor
jmp
sbb
inc
jg
fisttps
lcall
dec
ficomps
int
pusha
jb
fildl
loope
fdivr
mov
push
mov
cli
fsubrs
inc
aad
imul
xchg
dec
sbb
ljmp
xchg
push
mov
adc
rorl
pop
lret
add
les
push
push
push
and
les
imull
jmp
sbb
lods
jmp
sbb
mov
add
adc
into
adc
in
ja
dec
imul
pop
cmp
mov
icebp
rorl
and
adc
movsb
ret
dec
adc
loop
popf
test
cmp
lcall
into
les
jb
sbb
sbb
rcrl
or
sar
stos
insl
inc
fistps
test
outsl
call
test
fwait
xor
xor
inc
sbb
or
cltd
jmp
pop
and
test
dec
mov
fists
outsb
test
cli
pop
and
xchg
push
and
shll
mov
cltd
sub
xor
xor
jb
hlt
cmpsl
ljmp
cli
mov
jl
fs
cmp
cmp
dec
mov
xor
sub
jno
xchg
iret
loope
push
xchg
jbe
das
adc
inc
mov
leave
and
loope
push
jb
pop
pop
mov
lds
dec
adcl
push
mov
hlt
mov
lock
mov
dec
std
daa
push
sbb
mov
and
addr16
jg
xchg
xor
lahf
cmp
rorl
inc
fiadds
sbb
inc
mov
add
xor
sbb
sub
mov
sub
call
jo
loopne
adc
mov
or
inc
cmc
fnstenv
pusha
aad
lcall
fisttps
inc
jne
push
xor
mov
mov
imul
push
ss
dec
je
pop
sub
sbb
pop
dec
or
fildll
xor
cmc
ss
jne
hlt
ja
sub
lods
pop
aaa
cmp
push
pop
ss
clc
fmull
fists
cmc
fistl
jmp
xor
int
hlt
push
fidivl
xlat
mov
jne
insl
jbe
push
dec
int
daa
fcmovu
lret
xchg
sbb
mov
out
jge
out
jae
mov
push
ljmp
loop
mov
or
push
icebp
mov
gs
jg
mov
in
mov
push
xlat
mov
mov
xchg
jbe
xlat
mov
ret
lock
pushf
sub
mov
addr16
sbb
xlat
dec
xchg
jp
inc
into
filds
jmp
pop
scas
adc
mov
aas
mov
push
cmc
xor
shrd
imul
cmc
lds
cmpsl
imul
lods
fimull
jg
xchg
lret
sbb
dec
lret
cmc
loop
push
out
rol
xchg
sub
push
idiv
push
notl
xchg
imul
xlat
xorb
push
out
ja
ficompl
cmpsl
popa
jg
mov
xlat
out
out
iret
addr16
dec
inc
pop
out
nop
into
sbb
xlat
ljmp
sbb
mov
ret
in
shll
ret
gs
mov
mov
repnz
jg
mov
scas
fimull
mov
mov
loopne
push
jne
xchg
inc
out
in
jo
mov
dec
repz
fnstcw
pop
pop
ret
mov
pop
les
ljmp
stc
pushf
pop
and
pop
fcom
xchg
test
arpl
addr16
out
mov
push
nop
int
dec
pop
jle
hlt
test
push
fs
xchg
dec
out
mov
das
out
or
mov
mov
jno
hlt
dec
push
jae
and
movsl
in
testb
fidivs
in
push
jecxz
and
testb
cmp
xchg
mov
lret
out
imul
jo
ja
fiaddl
sbb
and
in
mov
dec
je
push
out
jl
or
push
jns
pusha
cmc
data16
pop
sub
cmpsb
icebp
lea
adc
shlb
push
inc
cmc
rcrb
or
xlat
mov
sub
imul
fidivl
mov
mov
into
inc
xchg
popa
shl
iret
xchg
dec
imulb
jno
sub
cmp
mov
popf
sub
into
ret
not
jbe
rorl
repz
cmpsl
mov
sub
out
fs
lcall
fwait
es
ss
xchg
inc
mov
jne
ret
jne
push
lods
and
mov
addr16
rolb
out
aas
sbb
jge
test
xchg
fists
imul
bound
lods
pop
into
cwtl
jle
mov
mov
xchg
xchg
lea
mov
pushf
inc
push
jnp
imull
test
in
xchg
xchg
aas
out
pop
ljmp
js
pop
daa
or
ficoms
negb
inc
insl
jne
mov
push
xchg
or
pushl
in
push
es
add
jns
stos
mov
divb
ljmp
mov
fs
mov
lahf
aam
jbe
adc
fcmovbe
imul
jne
push
dec
fwait
enter
lret
out
ljmp
emms
sub
fsubp
push
xacquire
cmp
outsb
gs
mov
in
daa
dec
inc
arpl
ja
mov
jbe
outsb
pop
xchg
or
xor
push
scas
scas
sub
repz
dec
xor
xchg
loop
loope
mov
ja
js
xor
shll
ljmp
notl
bound
cli
fcmovbe
in
sbb
jmp
jno
es
js
mov
arpl
insb
repnz
inc
ret
or
mov
imul
fsubrl
stos
mov
out
cmp
fimuls
mov
cmc
push
ljmp
insb
ret
mov
sbb
xchg
sub
inc
ja
mov
jmp
cmc
lret
add
push
addr16
jns
stos
jl
mov
loopne
subb
xor
sub
movsl
in
inc
shlb
dec
int
mov
sub
das
repnz
ja
sbb
ret
mov
movsb
out
mov
aas
daa
fimull
nop
cwtl
inc
sub
xchg
add
incl
addr16
loope
pop
xchg
lret
fbstp
jbe
ds
leave
pop
pop
int
lds
fs
loop
lret
mov
in
iret
lods
xchg
push
cmp
outsl
push
div
xchg
lods
mov
repz
iret
out
in
cltd
cmpsb
int3
mov
repz
cmp
in
or
mov
pop
sahf
int
outsb
cmpsb
cs
sub
adcl
outsb
mov
push
mov
mov
inc
cs
scas
mov
call
incl
fidivrl
sarb
and
loope
jnp
repnz
xchg
js
pop
ja
lcall
test
clc
mov
outsb
fnstsw
and
je
pop
fcomps
pop
mov
cmc
dec
lea
jne
mov
int
jl
xlat
lea
adc
gs
test
aaa
icebp
je
nop
jg
ret
xlat
cmp
je
movsb
sbb
repnz
xor
jb
jno
or
fisubrl
xchg
mov
xor
out
dec
stc
iret
out
out
xchg
pop
ficompl
imul
in
jg
repnz
adc
shll
out
cmpsl
outsl
ficoml
iret
popl
mov
shlb
mov
lods
repz
mov
hlt
jnp
xchg
shl
fiaddl
scas
jbe
push
jbe
hlt
stos
pushl
arpl
insl
push
push
ja,pn
fs
xor
sarb
jmp
dec
repnz
cmc
fisubl
repz
and
mov
ja
jle
out
mov
jno
testl
xlat
jb
mov
push
jmp
arpl
repz
adc
imul
dec
scas
inc
or
pop
inc
mov
jl
aaa
aam
test
fistpll
dec
pop
nop
clc
fcmovbe
into
or
scas
push
xchg
pop
fcmove
dec
mov
fsubl
nop
sti
imul
jmp
sbb
imul
icebp
cmpsl
jne
je
arpl
out
sub
mov
nop
aad
xor
inc
popf
imul
int
pop
push
xchg
sbb
sbb
pop
jp
xchg
lcall
inc
test
outsb
ja
dec
pop
test
mov
loope
dec
into
jb
cmpsl
push
mov
outsb
xchg
xchg
mov
ja
xchg
mov
divb
out
outsb
jbe
mov
push
fcmove
jno
sahf
ror
in
es
arpl
add
lea
push
push
push
pop
in
mov
or
inc
data16
ds
add
les
pop
jo
sbb
icebp
jbe
out
mov
mov
adc
mov
add
out
dec
stos
out
movsl
js
fnstenv
lea
push
push
popa
add
xchg
inc
push
hlt
jno
fdivrp
sarb
je
adc
shl
pop
lcall
fs
push
daa
cmp
push
xlat
jbe
xchg
add
or
lret
outsb
add
gs
pop
push
int
dec
xlat
push
mov
daa
sahf
outsb
call
pop
push
cmc
adc
iret
cmp
mov
push
in
mov
inc
push
lock
nopl
mov
rcll
xchg
in
mov
pushf
imul
mov
addr16
mov
ljmp
pop
cmp
repz
and
lret
clc
stc
popf
adc
xchg
mov
inc
aad
inc
outsw
mov
out
jne
js
dec
loopne
push
icebp
insl
les
add
jg
dec
or
ds
repz
pop
mov
sub
cmc
xor
in
dec
loope
push
popa
inc
in
xlat
jecxz
cmpsb
imul
addr16
mov
stc
andl
jo
lods
ljmp
xchg
inc
pop
jo
int
imul
xchg
xorl
mov
arpl
xchg
sbb
or
in
daa
mov
das
mov
sbb
push
fs
divb
and
mov
or
fisttpll
fidivl
jmp
pushf
sub
mov
imul
enter
push
nop
std
push
sub
outsb
lock
clc
xchg
xchg
rcrb
inc
insb
xor
out
fidivrs
imul
sub
jp
repz
fsts
pop
push
mov
inc
adc
mov
xor
sbb
push
nop
movl
xchg
icebp
shll
pushf
data16
lret
stos
inc
mov
and
mov
divb
adc
and
lods
jb
jbe
ret
add
or
imul
loopne
lret
les
mov
repnz
pop
adc
xchg
daa
xchg
sbb
pop
cltd
and
les
je
mov
imull
int
fldcw
mov
xlat
repz
xchg
dec
pop
mov
jo
cmp
dec
sbb
repz
inc
fldcw
sub
icebp
or
sbb
ljmp
pop
mov
fnsave
out
jne
lar
stos
bound
push
pop
sub
sbb
mov
dec
sbb
popa
scas
or
popf
sub
ds
lret
pop
mov
adc
push
cmc
hlt
popa
stos
jns
lods
or
ljmp
sbb
insb
movsb
push
inc
ficoml
rcrl
pop
inc
push
add
ja
inc
inc
inc
xchg
scas
frstor
fcmovbe
rorb
mov
inc
jae
int
mov
ja
push
inc
pop
ret
mov
cli
bnd
xchg
and
stos
rcr
fisubl
gs
aam
test
flds
jecxz
pop
lea
movsl
push
dec
scas
fwait
xchg
xchg
xchg
cld
xor
into
mov
ffree
fwait
test
ficoml
test
push
jbe
mov
insb
arpl
sahf
daa
arpl
jae
fstps
push
and
pop
fidivrs
xor
es
neg
scas
sub
xchg
scas
xor
stos
ljmp
jne
insb
jno
xchg
outsb
stos
push
dec
pop
imul
pop
jns
ja
movb
aam
ja
cmp
neg
les
inc
push
or
stos
lock
inc
adc
jbe
fnstcw
nop
xlat
jns
xor
das
jno
in
loopne
sub
pop
jne
jne
pop
jne
aaa
repz
inc
outsb
das
push
adc
aaa
jbe
jne
jbe
fidivl
icebp
jp
jbe
sbb
jne
inc
push
push
jae
mov
aad
pop
je
push
xchg
jne
cmpsb
pop
cmp
cmp
cmpsb
xchg
cmp
pop
mov
push
fcmovne
and
and
rep
xchg
jbe
ficoml
sbb
stc
addr16
jl
pop
mov
in
lock
dec
mov
aaa
lds
inc
fwait
xchg
movsl
andb
mov
jne
mov
sub
daa
mov
pop
xor
daa
cmp
mov
in
fnstsw
mov
jecxz
push
into
fcomi
leave
repnz
stos
mul
push
xchg
mov
fidivl
xchg
cmp
insb
arpl
dec
aaa
or
into
fcmovnb
mov
insl
jb
icebp
jge
cmp
mov
jmp
hlt
rcr
pushf
ss
out
imulb
fidivrs
lods
mov
into
pushl
data16
inc
mov
fimull
sub
mov
aaa
out
pushf
sbb
fwait
inc
xchg
sbb
push
imul
jg
dec
imul
aad
mov
or
je
pop
or
mov
call
and
pop
aad
sub
ja
addr16
iret
rcr
add
out
lods
or
lret
imul
stos
loop
jb
sub
aas
dec
add
scas
fisttpll
pop
repz
and
pop
and
lods
xchg
sub
int
xor
dec
outsb
daa
test
insb
leave
in
in
aam
pop
or
scas
xchg
xor
icebp
mov
xchg
aaa
roll
bnd
push
xchg
add
mov
fdivr
into
lods
call
xchg
cmpsl
sub
push
or
mov
int
iret
mov
fisubrl
pop
insb
mov
xor
ja
popa
push
xchg
adc
out
sub
lret
jno
mov
or
fs
sub
fcmovne
mov
adc
cmpsl
call
ficoml
sub
cmp
aaa
pop
cltd
jp
mov
mov
nopl
popf
enter
outsl
xchg
outsb
fildl
jle
lea
cwtl
lock
and
hlt
rclb
push
inc
stos
movsl
xchg
xchg
fisubs
adc
out
mov
xor
pop
out
in
icebp
or
in
imul
fistpll
repnz
lods
pop
scas
jo
rolb
shl
add
outsl
or
jmp
dec
lds
adc
repz
rorl
push
jo
push
add
bswap
lea
inc
xor
cld
cmc
jae
push
adc
xchg
mov
fisubrl
mov
outsl
mov
test
push
hlt
ficoml
push
jg
mov
fldl
ljmp
lods
sub
loop
stos
data16
ljmp
xchg
scas
mov
xchg
ficoml
xchg
mov
shl
xor
mov
outsl
arpl
sbb
pop
inc
addr16
in
mov
movsl
lock
xor
xchg
inc
imul
mov
fnstenv
add
xchg
mov
sub
mov
jne
and
les
cmpsl
ret
push
int
jecxz,pt
inc
jbe
in
mul
repz
xlat
mov
aam
xor
gs
ja
mov
add
fdivrl
and
pop
push
imul
dec
push
mov
jno
and
jp
inc
loope
cltd
lahf
jo
xor
not
add
daa
imul
imul
jno
out
loop
test
pcmpgtd
fstl
aas
cmc
int
jp
push
jo
adcl
sub
xchg
movb
dec
fidivrs
cmc
jno
insl
mov
lea
jo
sub
out
xlat
pushf
cs
je
pushf
repz
cld
mov
mov
pop
fnstsw
gs
xorb
les
jbe
jb
std
rcl
ficoml
push
or
or
push
mov
mov
xchg
xor
inc
into
xor
das
repz
imul
jmp
cmpsl
push
daa
stc
sub
fildll
sarl
jne
xchg
repnz
popf
into
push
lock
xlat
movsb
hlt
and
shlb
push
frstor
xchg
stos
push
mov
jbe
jo
lds
cmc
popf
jae
sbb
mov
shl
icebp
lret
pushf
xor
rorl
outsb
xchg
ja
in
adc
push
les
lahf
sub
mov
aad
mov
and
mov
add
cmp
inc
fnstenv
or
popf
in
testb
mov
sahf
xchg
daa
ja
pop
call
mov
push
cltd
andl
jno
adc
mov
test
xchg
insl
jne
cmp
xor
xchg
nop
int3
sub
jo
testb
rorb
cmp
pop
dec
lds
fsubr
dec
pop
xchg
arpl
jbe
xchg
cmp
inc
outsl
jbe
mov
mov
fldcw
hlt
xchg
inc
dec
fsubrs
cmpsl
in
mov
jo
jecxz
ss
stos
mov
xlat
xchg
fidivrl
rcrb
mov
pop
cmc
mov
sub
insb
movsl
xor
cmp
out
lock
mov
jecxz
xlat
or
xchg
imul
dec
cmc
mov
daa
pop
inc
icebp
pop
in
ljmp
sbb
in
xchg
sub
push
mov
jne
std
dec
aam
ja
lahf
int
push
sub
xchg
xchg
cwtl
enter
mov
out
xchg
sub
mov
nop
mov
pop
ret
push
fimull
rcrb
mov
ret
mov
cmc
cli
lods
in
mov
sbb
jbe
push
mov
dec
pop
testb
gs
sub
fcmovbe
mov
mov
ja
jmp
xchg
lret
xchg
aam
mov
inc
jg
mov
call
in
inc
sbb
sbb
or
ss
enter
ss
fidivrl
inc
mov
je
out
insl
cmc
inc
mov
stos
push
cmc
add
je
inc
cmc
xchg
out
mov
iret
push
xor
daa
jb
std
dec
sub
movsl
data16
jb
ja
jg
push
push
int
loopne
fists
nop
pop
mov
fld
add
xchg
xchg
cmc
sub
ja
fs
outsb
pop
push
add
shlb
xchg
pop
pop
mov
push
enter
push
out
into
push
pop
dec
cld
out
xchg
dec
arpl
xchg
sarb
outsl
mov
xchg
sub
in
call
xchg
in
jne
sbb
sbb
ljmp
sbb
in
movl
in
sbb
mov
adc
fisubrl
jbe
stos
sub
jae
push
in
movsl
inc
enter
sub
gs
mov
decl
and
cltd
pop
in
inc
push
jbe
mov
sbb
clc
jne
fwait
mov
enter
lahf
mov
lock
lock
cmp
sbb
fwait
out
scas
rorl
arpl
xor
in
inc
fucompp
cmp
cmpsl
fwait
imul
push
movsl
ss
jae
pop
jb
imul
movzbl
pop
les
lea
data16
mov
lahf
fnsave
in
jnp
inc
pusha
xor
out
jp
rorl
stc
mov
jp
xchg
scas
pop
xor
in
hlt
ret
or
mov
sbb
and
test
jno
jne
mov
je
mov
leave
cmpsl
hlt
jle
sub
jmp
fiaddl
in
clc
in
sti
pop
fadds
jecxz
sub
loopne
mov
mov
cwtl
dec
scas
jno
aam
jbe,pn
inc
test
ja
jne
and
popa
dec
or
add
lea
sub
push
addr16
test
repz
pop
imul
pop
push
aad
out
mov
xor
inc
aaa
arpl
mov
imulb
jae
popf
jbe
adc
xchg
mov
dec
xchg
push
sbb
repnz
divb
inc
xchg
xchg
jg
filds
call
jae
fcomp
repz
pop
mov
dec
mov
mov
inc
jp
scas
xchg
add
dec
sub
push
repnz
pop
lods
mov
out
pushf
jp
pop
lock
out
hlt
ror
shlb
mov
xor
lea
pusha
xor
cmp
pop
xor
mov
shrb
cmp
jmp
je
push
loop
popf
nop
in
jle
pop
bound
jne
jle
cmpsl
outsb
push
inc
notl
mov
fldcw
push
insl
repnz
mov
rcrl
ja
xchg
es
nop
test
mov
mov
pop
xor
dec
pop
pop
mov
fldl
mov
xchg
loope
mov
mov
xchg
jmp
dec
dec
adc
in
cmp
and
adc
imul
push
mov
inc
leave
jbe
jnp
cmpsl
lea
pop
cmpsl
aaa
lock
xchg
xchg
xchg
pop
push
nop
xchg
clc
imul
scas
sub
js
ljmp
icebp
xchg
rcrb
and
out
sbb
pause
ffreep
int
out
rorb
das
mov
aam
jle
xor
mov
or
jne
lret
pop
add
jbe
push
adcb
dec
xchg
mov
dec
dec
sbb
ror
lea
mov
cmp
sahf
repnz
add
jg
testl
jno
push
mov
std
xchg
mov
int
xor
and
popa
add
dec
xchg
fistpl
inc
cmp
and
jl
inc
cmp
out
ja
adc
rolb
out
ds
push
in
pop
enter
jge
dec
mov
jne
fisubl
addr16
leave
mov
fnstcw
fnstsw
pop
ss
dec
mov
add
arpl
xor
stos
push
sbb
fisttpll
stos
cwtl
sub
lahf
lret
mov
outsl
divb
mov
int
ljmp
dec
cmc
in
fcomp
inc
fs
cwtl
sbb
sub
xchg
in
jns
push
jbe
rcl
push
mov
xor
loopne
push
dec
in
mov
bound
dec
outsb
cld
mov
fidivl
push
inc
pmaxub
xchg
jns
repnz
mov
lahf
pop
fidivl
shrb
test
dec
xchg
or
les
mov
aam
in
pop
pop
jg
mov
xchg
adc
mov
push
and
sbb
jle
stos
shlb
scas
dec
pop
pop
jl
jb,pt
pop
loop
shrb
das
sub
imulb
cmp
outsl
out
fwait
mov
ja
jecxz
insb
pop
pop
push
movsl
and
cltd
filds
fmulp
test
test
lahf
mov
pop
scas
or
or
pushf
negb
outsl
lea
pop
int
mov
enter
pushf
ss
sti
xchg
sbb
out
hlt
inc
xchg
call
mov
xchg
xchg
sbb
xchg
mov
inc
gs
sub
pop
mov
mov
xor
adcl
or
push
push
xchg
cltd
lds
imul
sbb
inc
adc
std
mov
sbb
shll
cmpsl
aas
add
push
add
jne
divb
sti
xor
in
pop
xchg
das
xchg
icebp
loop
imul
das
cmp
lods
insb
repz
fsub
out
lret
cmpsl
add
outsl
xchg
outsl
repnz
mov
insb
jb
and
insb
movb
loope
xchg
call
mov
in
xor
pop
add
aad
ja
leave
in
push
fdivrs
and
iret
shl
popa
into
xor
aaa
sub
std
stos
push
xor
aaa
mov
ficoms
cld
fldln2
lret
hlt
pop
mov
cmpl
imul
icebp
andl
xor
ss
movsl
rolb
outsb
sbb
and
xchg
outsl
pusha
adcb
mov
cmc
adc
out
cmpsl
lea
mov
leave
sti
int3
xor
sbb
sub
rorl
fidivrs
cli
out
mov
aas
mov
aas
sbb
mov
mov
clc
outsb
jmp
sbb
cltd
shrl
divb
jbe
pop
xor
push
cmp
cmp
dec
adc
jno
push
mov
lods
jmp
testb
xchg
cmp
dec
cmp
out
mov
or
imul
cmc
mov
icebp
icebp
cmpsb
outsb
sub
mov
jns
pop
jl
popa
xchg
fwait
ss
rcrb
fidivl
pop
cmc
mov
sbb
imul
xchg
aam
ffree
xor
sti
das
mov
sub
pop
xor
mov
inc
dec
div
ds
jb
pop
jbe
cmp
cmp
push
inc
dec
scas
and
test
lcall
div
mov
scas
pop
mov
mov
fnstcw
cmp
mov
cmpsl
jmp
sbbb
pop
sbb
jb
scas
test
out
nop
xchg
jmp
rcr
jno
mov
xor
xchg
cwtl
xchg
js
mov
push
pop
sub
leave
sahf
sti
in
jg
adc
lods
lcall
jbe
pop
mov
out
jno
aaa
icebp
stc
pop
mov
lahf
stos
jb
hlt
test
cmp
out
lds
cmp
fstpl
xchg
mov
sahf
out
imul
cmp
jl
dec
scas
dec
fadd
or
mov
push
pop
leave
mov
cltd
mov
inc
dec
sub
cld
das
clc
xchg
fstl
flds
ror
lods
sub
cmp
pop
xchg
out
lahf
pop
fnstsw
icebp
add
xchg
pusha
mov
adc
dec
jmp
popa
lock
push
xor
and
xor
addr16
shl
test
xlat
sbb
es
movsb
fstp
repnz
mov
xor
xchg
mov
pop
out
mov
pop
jbe
push
sub
popa
testl
cltd
dec
out
fdivl
testb
call
push
mov
clc
cld
xchg
sbb
xchg
dec
pop
jg
pop
mov
in
pop
xchg
sbb
fucom
xchg
push
sub
lods
or
adc
loopne
adc
or
cwtl
repz
mov
jne
xlat
jae
aad
xor
cmpsl
adc
cmpsl
push
cltd
mov
jo
js
sbbb
ret
mov
lds
jp
aas
add
pop
lahf
xchg
out
mov
sahf
dec
mov
negb
fxtract
cmp
or
xchg
sub
inc
jns
cmpsl
xchg
enter
dec
fbstp
push
and
xlat
notb
xchg
sbb
out
mov
in
pop
in
ja
dec
mov
xor
call
cmpsl
adc
and
pop
mov
fistl
adc
out
loopne
xchg
fsts
mov
in
xlat
xchg
in
or
lods
or
fdivr
rorb
sbb
in
lods
fisubl
shl
adc
cmc
in
aad
fsubs
out
xlat
dec
jbe
pop
jl
pop
sub
or
pop
imull
iret
jne
jns
scas
jle
cmpsl
das
imul
xchg
xlat
jmp
xlat
sbbl
pushf
mov
scas
loopne
dec
xlat
jbe
sarb
or
dec
pop
dec
fs
mov
call
inc
dec
push
add
fwait
adc
mov
jecxz
dec
imul
pop
hlt
out
adc
out
xchg
negl
mov
mov
iret
inc
das
hlt
ret
adc
sub
mov
lock
push
fsub
adc
imul
inc
enter
out
cli
js
xchg
xlat
cmp
das
test
fwait
mov
scas
fldl
loope
mov
adc
popf
mov
mov
sbb
insl
fimull
and
dec
lea
das
mov
aad
addr16
cld
call
push
mov
aas
xchg
ret
sub
push
mov
ljmp
mov
pop
xor
nop
imul
mov
aaa
insb
or
mov
dec
pusha
push
pop
sub
int
fidivl
mov
inc
mov
push
jne
ss
subb
shrl
lods
xor
sub
cli
cmp
loop
repnz
mov
adc
or
in
jmp
das
lret
sub
fiaddl
clc
mov
lods
daa
push
mov
pop
inc
jne
add
add
es
out
pop
mov
in
inc
ds
cmpsl
or
cmp
mov
jbe
sbb
jno
and
xlat
imul
int3
fcoml
ja
cltd
jmp
imul
fstpt
or
bnd
jge
out
mov
lcall
mov
sub
xchg
mul
mov
or
jg
mov
sbb
or
in
mov
out
and
mov
cmpsb
dec
ja
sub
cmpl
xchg
mov
cwtl
xchg
movsb
push
jge
jmp
nop
ja
sub
cmp
cmpsb
jecxz
cmp
icebp
pop
ss
cmp
daa
ss
scas
push
mov
jmp
xlat
inc
push
out
nop
adc
jge
fdivrs
mov
xor
imul
int3
adc
in
daa
xor
addr16
xor
add
rcrl
or
cmpsl
push
shl
loope
mov
aaa
dec
mov
jmp
daa
xchg
jno
ljmp
lods
andl
mov
gs
xorb
mov
ja
push
out
jbe
dec
or
in
movsl
es
jbe
jb
fstpl
jne
out
cltd
ljmp
xchg
lret
aad
cmpsl
jbe
sub
mov
je
dec
pusha
pusha
lock
or
adc
call
cmc
pusha
es
or
push
popf
fistl
jg
mov
test
fsub
add
fldl
dec
jl
push
pop
or
in
push
mov
filds
adcb
out
or
lahf
add
test
sub
push
imul
fucompp
inc
addr16
inc
xchg
xchg
aaa
lods
out
ficomps
pop
inc
jno
jb
into
cmp
pcmpeqd
push
xchg
shl
pop
fisubl
or
xchg
mov
fildll
inc
sub
inc
xchg
jle
lret
push
popa
gs
mov
stos
in
or
fmulp
jle
mov
inc
push
les
adc
push
cmp
aam
lea
and
ljmp
dec
ss
in
push
jns
pop
push
pop
adc
test
imul
jp
sub
mov
jae
mov
ret
inc
jmp
cmc
ret
push
jae
fstl
or
xchg
xlat
adc
cmpsl
outsb
xor
and
xchg
xor
stc
aaa
in
aas
fcmove
inc
xchg
popf
out
insl
jmp
rclb
in
and
lock
aam
addl
std
mov
mov
movsl
sub
jg
out
add
jle
neg
ljmp
push
xor
xor
pop
push
movsl
cs
popa
test
xchg
dec
cmc
xchg
clc
test
insl
xor
sub
xchg
out
jge
repnz
mov
lahf
cmc
inc
pop
mov
dec
push
adc
push
addr16
sbb
xchg
pop
xlat
daa
mov
movsl
or
mov
sbb
xor
aaa
outsb
pop
sahf
test
dec
jbe
add
ja
cwtl
mov
xchg
out
sub
lods
mov
or
mov
mov
lea
icebp
sub
stc
sbb
push
repz
fisubrl
cs
daa
popa
xor
or
xor
bound
and
movsl
mov
out
mov
out
test
xor
incb
mov
xor
pop
mov
mov
fchs
roll
xor
xchg
xor
jne
out
or
sub
pop
testb
mov
push
fimull
je
in
dec
xchg
add
mov
mov
xchg
inc
daa
push
aaa
mov
icebp
repnz
dec
mov
scas
imul
shrb
lds
adc
cmc
pop
test
inc
lahf
aas
clc
push
in
negb
pop
call
xor
ret
movq
lahf
pop
out
aaa
sbb
outsl
ficompl
cwtl
push
push
fst
fists
es
repnz
pusha
pop
dec
and
loop
mov
mov
ja
or
scas
mov
and
fisttpl
lret
loop
dec
fldcw
push
adc
loope
or
mov
movsb
aas
or
sub
in
xor
xchg
imul
xor
jae
repz
mov
jae
out
cmc
lds
iret
decl
fwait
jae
scas
jae
push
fdivs
pop
xor
xor
lods
shl
adc
enter
ret
jmp
out
pop
mov
scas
dec
in
xor
shlb
jo
cmp
or
hlt
ljmp
and
jg
fbstp
cmc
mov
iret
testb
lods
jmp
jmp
loopne
movsl
mov
fucomi
shlb
enter
or
lahf
ljmp
fldt
add
lret
mov
add
js
scas
add
fcoml
xor
int
ja
cltd
stos
arpl
push
fldcw
mov
inc
enter
xchg
inc
test
jno
imul
xchg
lret
aad
out
loop
jmp
mov
nop
decb
mov
lret
sbb
mov
test
xlat
test
cmc
xor
es
jmp
shrb
lods
das
dec
out
scas
movsb
sub
cmc
lds
sbbb
inc
mov
adc
mov
mov
sub
cmp
cltd
ljmp
mov
es
in
xchg
shll
loop
jae
je
mov
sub
gs
negb
or
xchg
loopne
jbe
je
ds
push
or
adc
pop
mov
push
mov
jne
leave
add
add
call
ss
cmpsb
je
mov
negb
int3
jmp
out
ror
arpl
mov
mov
popf
or
sub
in
jg
bswap
mov
ds
jbe
push
out
jp
mov
jle
sbb
addr16
imul
mov
mov
xchg
xchg
call
add
xor
test
ss
fbld
aaa
stos
lret
ds
xor
test
xlat
iret
cmc
outsb
inc
call
dec
pop
pop
out
fs
fcmovnb
push
xchg
push
pushf
push
adc
pop
sub
jmp
mov
fistpll
cmpsl
jb
sub
fbld
lea
scas
sahf
out
inc
jge
je
jno
mov
movsl
mov
jbe
or
pop
into
int
xor
mov
cmpsb
repz
rol
nop
testb
jmp
repnz
cmpsl
outsb
movsb
nop
cmc
imul
xchg
push
jmp
mov
jecxz
xlat
nop
push
ficoms
cmpsb
dec
mov
ja,pn
lock
adc
xchg
adc
mov
out
dec
cmp
notl
xlat
pop
jae
push
or
insl
outsl
movsb
ja
jnp
out
imul
call
lahf
lret
dec
cmpsb
sahf
xchg
fidivrs
or
inc
jae
adc
mov
scas
in
in
stos
mov
addl
add
iret
les
enter
mov
arpl
mov
inc
loopne
jno
xchg
and
rcrb
loopne
xchg
push
lret
addr16
cmc
pop
scas
lds
mov
pop
and
adc
negb
in
fs
roll
sahf
ss
aad
xor
sbb
jbe
mov
int
fs
push
das
ja
sbb
jp
cmp
sub
jne
dec
dec
ret
fs
cld
test
xchg
fisubrl
iret
fstl
in
mov
das
add
push
jb,pt
cs
ret
fcomip
in
pop
adc
lods
or
data16
xlat
dec
inc
imul
or
in
xchg
xchg
in
inc
inc
dec
int3
sub
adc
fsubs
imul
je
std
imul
xchg
jg
or
jge
stos
cmc
gs
shrb
mov
dec
xchg
in
adc
shr
int
inc
lock
add
cld
pop
aaa
jp
fs
pop
xchg
test
mov
mov
fistl
movsl
xchg
and
nop
pop
jb
lea
pop
jle
xor
popf
xor
sbb
ret
pop
int
and
mov
dec
push
cmpsb
outsb
xor
dec
push
and
xchg
and
mov
mov
lahf
popa
shlb
push
xchg
and
sbb
shr
jbe
repz
ss
pop
out
dec
jns
xchg
jae
daa
pop
adc
and
jno
or
loop
sub
push
or
mov
icebp
in
notb
xchg
cmc
fdiv
ss
in
lods
daa
inc
loope
push
daa
scas
mov
in
cwtl
adc
or
xchg
stos
cli
les
and
pop
arpl
loope
xchg
sbbb
lcall
in
adc
sbb
push
in
lret
stos
cld
jmp
cltd
mov
in
mov
int
adcl
imul
insb
nop
jge
xchg
xchg
faddl
and
sub
loop
fiaddl
or
inc
out
sub
xor
xor
pop
call
mov
sti
gs
inc
aam
ss
mov
dec
pop
or
fimuls
mov
cmp
jne
mov
in
mov
fiaddl
repnz
pop
enter
mov
int3
int3
in
arpl
mov
xchg
ret
mov
call
fsubrs
jmp
ficoms
icebp
add
and
repz
test
fstp
pop
xor
push
jo
fildll
pop
jno
pop
jns
inc
xorb
aam
aad
cmpsl
adc
cmpsb
inc
dec
push
mov
push
sub
lea
loop
mov
gs
cmc
fstpt
lds
lea
jmp
push
repz
push
or
ret
mov
out
fisubrs
ljmp
imul
fisttpl
inc
xchg
inc
add
jno
aas
or
lods
loopne
pop
fcmove
shl
mov
xchg
addr16
incb
inc
mov
int3
cmp
pop
mov
mov
test
xchg
ror
sub
stos
fidivl
jbe
mov
mov
gs
cmc
or
into
fnstenv
int
xchg
fldcw
or
aad
lret
mov
xor
fldenv
je
jmp
shll
mov
shl
cmp
xchg
dec
test
pop
mov
rorb
push
addr16
push
sub
repnz
das
jns
push
cmc
xchg
lock
mov
out
fbld
mov
rep
stc
nop
test
mov
and
std
lods
mov
fcomps
push
xor
sbbl
pop
std
out
or
push
ja
xchg
xchg
repnz
fsub
jae
das
push
mov
fimull
mov
mov
dec
push
in
mov
adc
or
mov
rclb
jae
xchg
xchg
shr
in
xchg
inc
scas
mov
lock
outsb
sbb
xchg
ss
shr
mov
dec
push
adc
mov
mov
outsl
xchg
lahf
lret
jmp
lahf
mov
mov
xchg
xor
iret
cwtl
jbe
push
and
cmpsl
push
jno
imul
out
sbb
in
xor
inc
popa
jnp
int
lahf
mov
jge
shll
mov
fcompl
mov
insl
inc
cs
sbb
daa
or
dec
lock
imul
out
jnp
mov
and
xor
mov
shrb
inc
test
cmp
icebp
adc
and
mov
cmp
cmpb
sarl
fcmovnbe
xchg
push
test
sarl
fs
jae
addr16
aam
cmc
mov
stos
into
mov
sbb
push
out
xchg
imul
js
rolb
incb
mov
and
mov
sbb
push
outsb
daa
outsl
loop
mov
or
pop
xor
jecxz
fisttpl
xchg
dec
popa
aaa
std
imul
add
ljmp
xorl
inc
lock
ljmp
icebp
mov
daa
ret
dec
insl
jne
jne
aaa
push
fucomi
idivb
jecxz
hlt
pop
rcrl
dec
mov
inc
pop
test
dec
cmpsl
or
negb
popf
cltd
aad
dec
xchg
in
andb
cmp
jecxz
or
ds
mov
es
jp
sarl
sub
mov
jno
cmpsb
mov
fstl
cmc
dec
pop
repnz
stc
xor
mov
pop
lahf
push
ljmp
out
jno
and
jecxz
test
fildll
xchg
xor
cmc
mov
mov
imul
mov
iret
xchg
lods
xrelease
jecxz
sbb
dec
mov
mov
cmp
popf
stos
out
push
nop
ss
shr
data16
mov
out
xchg
mov
adc
push
mov
inc
dec
pusha
stos
repz
xor
sbb
rsqrtps
pop
dec
pusha
sbb
lea
dec
repz
sbb
or
ret
jno
sbb
mov
mov
mulb
adc
jns
addr16
lds
xchg
pop
cmpsb
pop
loop
jmp
decb
scas
jnp
cmp
repnz
inc
mov
and
loop
cmpsb
xchg
cmp
cmpsl
insb
jecxz
negb
mov
cld
xchg
sub
dec
sbb
bound
not
mov
sub
lret
mov
add
lea
pop
sub
fcmovnu
nop
aas
pusha
inc
xchg
je
enter
xor
inc
loopne
pop
mov
bound
sub
dec
cltd
xor
sbb
int3
adcb
pcmpeqb
xorl
es
arpl
dec
neg
jecxz
cs
call
std
mov
push
fmuls
out
loope
movsl
sar
pop
lea
enter
je
and
lods
ds
push
in
sbb
iret
and
mov
sub
jmp
repz
push
das
cmc
shll
xchg
pusha
das
mov
push
push
xlat
andl
jge
outsl
cmc
outsl
push
dec
repnz
sub
sahf
xor
ljmp
fldl2t
add
push
icebp
add
mov
ja
out
neg
lret
adc
insb
shlb
clc
mov
test
lods
repnz
jbe
inc
jmp
lcall
scas
shl
mov
jge
mov
mov
outsb
cs
aam
xor
mov
aam
lahf
fildll
int3
or
mov
xorl
xor
mov
mov
in
push
jb
cmpsl
adc
in
lahf
inc
or
test
xchg
int3
fists
mov
stc
cmp
je
xchg
shrl
cmp
pushf
int3
mov
lods
outsb
add
popf
and
mov
mov
shlb
jne
dec
out
add
push
sbb
cmp
xlat
push
and
call
dec
push
mov
lret
shll
inc
sarb
test
icebp
xor
jbe
nop
xor
mov
cs
sub
std
or
mov
push
pop
shl
loope
enter
mov
enter
std
mov
arpl
std
xor
testb
into
cmpsb
xchg
or
jno
lods
ja
aad
fistpl
mov
scas
mov
push
xchg
into
outsl
push
mov
lock
jne
les
test
fmull
data16
cmc
sahf
cmpsb
xor
rclb
mov
pusha
mov
das
mulb
dec
enter
fs
jae
or
outsb
pop
enter
inc
jg
insb
mov
push
jl
sbb
popf
bound
mov
divb
and
inc
scas
cmp
mov
dec
mov
test
repz
cmc
das
jne
imul
int
fistpll
jne
stos
aam
mov
repz
jl
enter
je
pop
xchg
jne
mov
dec
fs
push
decl
enter
add
mov
push
dec
mov
dec
push
les
xchg
pop
jle
loopne
and
pop
into
rorl
push
or
and
xlat
xlat
mov
push
or
add
ja
fldl
iret
or
mov
lea
inc
loope
imul
xchg
mov
jmp
and
enter
or
negb
adc
fs
lods
ret
mov
pop
xchg
fwait
push
cmpsl
mov
inc
jne
push
inc
ficompl
fstp
popf
jg
mov
dec
push
xor
sahf
mov
in
pop
mulb
push
sbb
xchg
adc
inc
and
cmpsb
jno
fbstp
xchg
push
js
push
aas
ja
and
fbld
ljmp
fisubs
lods
xor
lods
inc
aaa
sub
ficoml
call
inc
imul
sub
pop
push
aas
pop
sbb
push
gs
sub
fistpll
fcmovb
jns
lock
fs
mov
pop
cmp
pop
rcr
cmp
fsubr
cwtl
sti
ret
ficoms
ja
mov
xor
imul
jno
and
sbb
lods
push
fsubs
sahf
sbb
jg
xchg
pop
xchg
xlat
ja
sbb
rcll
mov
mov
mov
insb
shll
sbb
scas
inc
cmp
hlt
mov
mov
test
fidivl
adc
or
nop
insb
cmpsb
aam
mov
xor
mov
push
loop
ret
mov
ja
mov
xchg
out
jp
outsl
lea
mov
in
stc
fdivrs
and
addr16
mov
cltd
xor
ja
cmc
ret
ret
push
push
xchg
cmpsb
push
mov
jmp
icebp
or
push
and
js
cmc
div
sbb
lods
xchg
jnp
insl
scas
loope
and
cmp
lahf
jl
insb
push
push
fldln2
mov
or
adc
loopne
pop
lahf
insl
fistpl
fistl
fistps
mov
cltd
addr16
push
cmpsl
mov
push
sbb
out
mov
cmp
adc
pop
sub
sub
call
or
sbb
cmp
lock
mov
icebp
pop
lcall
add
pushf
out
inc
mov
out
mov
lea
xor
in
jg
fisubl
btsl
insl
sar
pushf
dec
mov
inc
pop
cwtl
outsl
imulb
lahf
or
lret
inc
and
pop
stos
inc
pushf
jmp
jle
ja
jmp
mov
lretw
bnd
orb
add
push
mov
es
pusha
jle
ds
dec
mov
insb
jle
push
inc
popf
sub
out
pop
mov
js
es
mov
push
pop
sub
mov
in
mov
dec
lea
cwtl
dec
das
imul
insb
jbe
roll
jecxz
ljmp
mov
inc
jbe
or
push
movsl
xchg
inc
leave
repnz
add
jns
aam
jb
daa
pop
loope
sbb
popf
ja
push
neg
cmpsb
je
icebp
push
xlat
faddl
pop
fnstsw
xlat
xlat
aam
adc
fiaddl
mov
adc
push
test
adc
fdivrl
inc
mov
dec
xor
and
sbb
add
sbb
xlat
dec
not
sub
sahf
sti
xlat
adc
sub
jb
movb
imul
ret
add
push
push
call
and
insb
repz
jne
jb
ss
mov
int
je
pusha
jle
jne
jge
aaa
jg
shll
push
call
adc
push
add
sub
add
cmp
sbbl
jo
xor
sub
or
cmc
out
xor
add
push
jmp
cmpsl
sbb
sbb
add
xlat
cltd
xchg
mov
xor
clc
sti
ss
jecxz
xchg
fmulp
ficoml
sub
cmpsl
loope
rclb
xchg
int
fxch
cs
jnp
lods
arpl
inc
and
adc
xlat
mov
icebp
fidivl
je
xor
ljmp
je
xor
scas
scas
cmc
lods
pop
pop
ss
hlt
inc
mov
inc
jl
mov
repz
rorl
notb
jmp
out
iret
orl
mov
push
push
in
jge
mov
outsl
mov
roll
cmp
scas
scas
fcomps
lahf
sub
xor
enter
div
imul
mov
loope
shlb
nop
push
icebp
out
lea
fiaddl
ss
mov
rclb
gs
js
mov
push
cmc
adc
xchg
and
mov
xchg
rorl
in
sub
mov
jbe
test
mov
aad
pushf
mov
sbb
fwait
add
ror
pop
inc
int
mov
leave
mov
xchg
mov
lock
mov
icebp
sbbb
aad
mov
cmp
adcb
iret
xlat
dec
or
cmp
fimull
mov
pop
pusha
loope
jnp
push
xor
jmp
adc
test
xchg
mov
or
aad
je
scas
mov
pop
mov
dec
xchg
divb
pop
jo
xchg
push
fsubs
xor
cmp
mov
fidivs
in
mov
inc
cmc
inc
stc
rorb
out
pop
arpl
dec
inc
into
pop
cmc
push
jmp
or
mov
mov
sbb
push
movb
cmpsl
cmp
insl
sub
ljmp
jecxz
mov
fidivl
mov
pop
inc
cmc
popf
xchg
fnstcw
icebp
sbb
fimull
testb
push
xor
repnz
inc
inc
pop
sbb
cmpl
pop
inc
or
fimull
fstpl
int
ficoml
inc
sub
pushf
xchg
push
icebp
scas
dec
inc
jns
dec
dec
adc
mov
inc
xchg
repnz
mov
fisubrl
mov
das
dec
xor
inc
loopne
aas
add
push
call
cmp
inc
inc
lea
inc
xchg
addr16
inc
jle
les
jp
jo
xor
clc
pushf
xchg
popf
jge
int
cld
loope
adc
xchg
mov
in
sub
mov
loop
inc
stos
stos
bound
adc
push
cmp
repnz
or
addr16
das
es
imul
es
imulb
outsb
es
imulb
in
jbe
push
fs
jmp
out
dec
inc
mov
loop
cmpsl
in
xchg
int3
cmpsl
lods
xchg
loope
cmpsl
stos
xchg
popa
mov
cmpsl
sub
je
aad
je
mov
push
fimuls
sub
aad
je
leave
aad
xor
push
fmull
push
push
pop
or
outsl
fcmovne
rcrl
mov
pop
xchg
es
pop
jae
push
fldcw
or
pop
xchg
faddl
adc
fdiv
inc
hlt
mov
cmc
andnps
jno
xchg
push
shlb
dec
adc
jno
cld
cmp
cmp
lea
lcall
stos
scas
jne
stc
out
les
push
addl
fadds
push
in
push
sub
adc
cmpsb
test
fldl
nop
sbb
in
ljmp
stos
push
sub
pop
ljmp
dec
hlt
mov
aaa
jne
fcmovnu
jns
inc
into
jecxz
int
jnp
test
push
inc
push
cmp
maxps
into
cmpsl
pop
insb
out
xchg
lock
nop
add
or
aaa
test
xlat
jmp
mov
cmc
insb
hlt
cmp
repz
push
dec
xor
lret
push
mov
pop
push
and
es
sbb
pusha
std
repz
in
xchg
pop
jno
mov
iret
mov
icebp
sbb
jecxz
hlt
sub
lcall
mov
pop
imul
stc
aaa
cmp
xor
lcall
mov
cld
ljmp
movsl
jbe
addr16
adc
aaa
pop
mov
jg
insb
push
int
aam
aaa
pop
xor
repnz
fstp
mov
cs
mov
shll
inc
fldenv
mov
cwtl
cwtl
adc
add
loope
imulb
flds
es
lods
cmpsb
xor
mov
sub
aaa
cmp
jnp
mov
jp
test
cmp
mov
mov
fidivl
lret
fldlg2
out
jge
int
mov
idivl
test
or
lods
daa
xchg
or
jmp
loopne
or
xchg
aas
cmc
test
cmc
dec
pop
xor
or
mov
stos
inc
pop
cmpsl
aaa
inc
pop
cmc
inc
pop
cmpsb
lret
mov
mov
mov
pop
lea
neg
sbb
pop
or
jmp
loop
addr16
hlt
mov
ds
jbe
std
repz
les
inc
jne
dec
or
xchg
push
mov
divb
dec
dec
orb
push
js
adc
sbb
xlat
dec
out
mov
mov
loopne
in
inc
fldenv
pop
out
scas
mov
push
addb
mov
cmc
inc
xchg
cmpsl
jnp
mov
pop
movsb
es
push
into
jbe
push
in
and
jmp
sbb
jo
in
addr16
dec
sub
xchg
inc
aam
out
hlt
out
cmc
push
xchg
pusha
inc
lods
mov
popf
fldt
ljmp
push
stos
sub
jne
pop
aaa
cmc
inc
pop
in
int
mov
ss
int
into
aad
cmpsb
shlb
jecxz
call
scas
shrl
ja
inc
pop
fmull
jne
jbe
subl
jle
repz
cmpsl
or
jp
inc
arpl
lods
adcb
and
lds
pop
nop
mulb
mov
mov
sti
movsl
scas
ret
jp
push
dec
mov
ror
ficompl
scas
and
jecxz
jne
test
scas
dec
cmpsl
push
shll
fadds
pop
imul
scas
sbb
mov
cmp
lea
xchg
lods
lock
cmp
popf
push
jp
jg
mov
mov
jl
aam
pop
dec
and
sub
jno
loope
and
sub
and
shrl
push
insl
inc
add
outsl
subb
cld
mov
inc
sbb
xor
ret
lods
mov
mov
loope
xchg
sub
loopne
mov
cmp
or
and
and
inc
fldlg2
cmp
cmpsb
pop
aaa
testb
mov
cmc
inc
fsubp
fcmovbe
and
data16
mov
bt
sub
fidivl
adc
ljmp
pop
or
mov
xchg
and
mulb
outsb
sahf
rolb
int
jae
out
push
in
rorb
fisubrs
inc
fcmovu
test
pop
aaa
outsl
faddl
sahf
imul
pop
cmpsl
mov
xchg
stc
jp
clc
cmp
out
int
or
inc
pop
js
mov
pop
cmpsb
stos
or
cltd
jmp
or
xchg
popa
repz
addr16
jmp
lods
fbstp
pop
mov
sbb
mulb
mov
xchg
mov
push
in
push
movhps
outsl
rcrl
das
jne
pop
adc
mov
dec
sbb
fdivl
testb
stc
bound
add
fstl
push
jbe
dec
je
insb
xchg
out
fisubrl
faddp
cmpsb
ljmp
push
mov
mov
movsb
or
push
aad
icebp
fmulp
ret
hlt
test
push
xchg
xchg
out
push
rcl
rorb
or
cmp
out
outsl
int
int
pusha
iret
pop
sbb
das
scas
fildll
scas
pop
cmc
xchg
cwtl
movsb
mov
aam
in
mov
xorb
cmpb
arpl
imul
or
aaa
popa
jbe
out
adc
ret
jg
cmp
push
inc
jmp
pop
outsb
add
xchg
mov
scas
ret
jbe
sub
mov
mov
cmp
shll
mov
add
inc
inc
mov
aad
les
xchg
fistpl
dec
stos
cmc
jb
in
rorb
repz
xor
sbb
aam
xor
jae
lods
icebp
xchg
jne
jae
cmp
mov
push
mov
cmpsb
inc
dec
dec
cmp
call
cmc
mov
mov
mov
inc
sub
mov
in
sarb
fistl
decb
sti
mov
test
dec
loopne
pusha
stos
push
lea
push
pop
pop
inc
add
out
push
mov
mov
mov
jp
int3
in
lahf
mov
jo
bound
fs
movsb
xorl
ret
bound
jecxz
lea
stos
adc
mov
jo
and
out
xchg
fsubrp
dec
jne
js
mov
mov
shl
jns
and
aam
js
or
mov
outsb
jno
sub
cs
test
jecxz
xor
cmp
mov
outsb
inc
and
mov
xchg
dec
inc
pusha
in
fimull
jecxz
xchg
test
lea
icebp
dec
idivb
push
aam
inc
repz
add
aaa
hlt
scas
jecxz
inc
dec
fldcw
arpl
lods
or
inc
loop
shll
xor
cld
adc
pop
rcl
cmc
jne
pop
test
mov
jge
jl
aad
ja
cmc
jne
fiadds
je
jmp
pop
sahf
aad
add
imul
gs
or
jge
or
movsb
test
imul
loop
adc
and
jns
xor
std
adc
fidivs
stos
lret
clc
and
or
mov
arpl
mov
scas
fildl
movsl
or
movsb
fisubrl
sub
lahf
lea
sub
mov
mov
and
in
aad
call
xchg
jp
sub
lret
and
addr16
sbb
add
jnp
xchg
push
lods
pop
test
fcmovu
sbb
data16
cmpsb
sub
add
and
dec
cmp
mov
jle
lea
jl
test
decl
hlt
sbb
xor
cmpsl
mov
xchg
inc
or
call
ret
jo
shl
xor
mov
xor
cmpsb
leave
push
clc
jg
dec
out
bound
cltd
adc
clc
dec
loopne
or
hlt
add
mov
mov
xchg
imul
icebp
out
rclb
lods
jmp
shl
mov
push
add
cld
mov
sub
cmc
pusha
loop
sbb
rcll
mov
loope
ljmp
xchg
push
dec
push
pop
lcall
mov
shrl
dec
sub
mov
loopne
push
stc
cltd
sbb
das
mov
sub
xchg
dec
in
mov
push
pop
ss
fcmovbe
mov
fdivrl
fcomi
xchg
jne
stos
pop
loop
mov
je
cmp
cmc
cmpsl
ret
or
mov
fsub
jbe
out
out
push
inc
adc
jno
je
ret
mov
add
xchg
sarb
ss
pop
aad
aam
stos
xchg
aaa
sub
adc
pop
in
jb
xchg
cmp
pop
jbe
mov
fcmovnu
int
xor
out
cmp
push
rorb
pop
ss
cld
xlat
or
dec
out
sbb
aad
call
test
add
dec
pop
push
popa
stos
xchg
push
or
loopne
lahf
xchg
fisubrl
lds
outsl
std
dec
aad
jecxz
xor
imul
pop
minps
js
negl
sbb
repnz
or
aam
lds
inc
or
add
pushf
mov
nop
idivb
dec
jbe
in
dec
mov
push
sub
fstpt
mov
mov
add
jno
leave
not
test
push
hlt
rolb
notl
imul
pop
lea
mov
xorl
shl
repnz
jl
push
pop
jmp
add
adcl
dec
data16
ljmp
jno
aad
fcompl
loope
sub
loope
push
pop
icebp
int3
jp
adc
adc
icebp
inc
adc
out
jne
insl
movsl
adc
test
data16
jge
loope
sub
cmc
imul
xchg
repz
mov
clc
pop
jno
mov
xorl
sub
push
arpl
jnp
mov
iret
jae
push
fucom
xor
loopne
pusha
sbb
fistps
repnz
shrb
ss
pop
cmc
fpatan
pop
push
fdivrs
inc
adc
lods
sub
xchg
xchg
mov
xlat
xchg
push
pop
mov
or
ficomps
push
sti
iret
fwait
jle
sub
repnz
push
mov
push
pop
ja
pop
xchg
fbld
inc
ja
add
cli
jo
fsubp
in
xchg
mov
xor
cwtl
xorl
xchg
xor
pop
inc
jne
nop
fnsave
sub
pop
or
ret
pusha
push
repnz
imul
adc
jg
lret
mov
jp
xor
xor
into
addr16
lds
ss
adc
in
js
mov
fildll
aas
faddp
xchg
dec
pusha
pop
sub
inc
sbb
and
fsubrs
push
mov
jbe
outsl
xlat
mov
jbe
lods
and
jbe
fidivs
or
in
pop
push
xor
dec
adc
push
xchg
frstor
fcompl
int3
hlt
xorb
pop
rorb
xor
xor
out
push
adc
dec
push
jge
jp
sbb
or
mov
divb
repz
das
call
sahf
sub
fisubl
jbe
out
cmpsl
aas
dec
mov
xor
loop
imul
mov
pop
sbb
fistpl
mov
fsubrs
movsb
es
xchg
cmpsl
cmpsb
or
int
sub
push
mov
insl
div
ret
cmp
ret
sbb
dec
fstpt
sti
icebp
ljmp
or
cld
data16
in
fdivl
std
dec
jmp
mov
push
movsl
movsl
mov
test
xchg
ja
jae
mov
fcoml
scas
inc
out
push
out
sbb
mov
and
sbb
add
notb
cmc
mov
inc
fsts
mov
push
fdivrl
jle
jae
inc
pop
mov
push
jmp
or
cmpb
das
mov
fcmovu
jge
sbb
popa
mov
mov
xchg
lock
stos
popf
mov
into
mov
xchg
xor
mov
cmc
fisubl
and
mov
xchg
pop
push
adc
push
jne
sbb
inc
arpl
jbe
aaa
pop
cmpsl
and
pop
inc
xor
je
mov
jnp
pop
xchg
push
iret
and
outsb
lret
ficompl
mov
pop
fcmovnbe
int
sbb
fisubrl
or
pop
out
push
sub
cmp
lock
iret
add
cmc
repz
jne
push
addr16
lahf
push
jae
pop
shll
aad
dec
pop
mov
das
mov
jne
loop
cli
aad
xlat
mov
das
xchg
sub
cmc
scas
cmpsb
jbe
xchg
aas
imul
pop
emms
test
or
stos
stc
imulb
fidivl
jnp
adc
jb
das
xchg
das
popf
mov
pop
aam
fcoms
cld
push
cmp
cmpsl
data16
pop
aam
scas
pop
shll
cltd
stos
jbe
lock
fdivr
push
aad
xorb
adc
xlat
lcall
lock
or
imul
cmc
int
pop
push
jle
mov
sub
loope
jmp
test
lods
in
out
cmpsb
jp
mov
cmpsl
xor
fnsave
cli
mov
fildll
sahf
test
call
adc
out
sub
les
sub
ja
hlt
sub
pushf
xchg
or
push
jp
outsw
mov
dec
dec
in
int3
mov
cwtl
movsb
push
mov
jne
xor
xchg
out
stos
jb
mov
stos
notb
imul
mov
or
xor
into
dec
ljmp
xlat
and
je
out
out
xor
mov
jl
mov
pushf
mov
mov
loopne
fldl
mov
xchg
mov
mov
repz
test
inc
mov
mov
fwait
dec
dec
pop
cld
aas
mov
aad
mov
stos
aas
and
jp
fxch
movsb
loope
sub
into
rcll
dec
insl
pop
jg
push
lahf
or
cmp
imul
push
xchg
in
inc
inc
push
sub
ljmp
loope
push
jae
leave
mov
cltd
push
data16
add
aad
push
jbe
mov
clc
ljmp
out
and
fcoms
in
not
and
aaa
push
ficompl
jbe
repz
out
jne
scas
mov
nop
pushf
sub
inc
cli
pop
xchg
lods
jae
mov
xchg
dec
sarb
adc
pop
jecxz
pop
push
fsubl
xor
sahf
push
fistl
hlt
seto
cmp
jp
or
mov
mov
and
push
inc
imul
nop
iret
ja
lahf
gs
xlat
pop
outsl
aaa
ficompl
xor
cmc
nop
int3
ja
dec
push
mov
cwtl
xlat
inc
pushf
and
stos
daa
pop
repz
pextrw
pop
hlt
out
and
mov
out
inc
insl
xor
popf
jne
fs
in
sub
or
mov
repz
fsubrp
pop
fldl
pop
mov
xchg
mov
movsl
das
push
xchg
fldenv
nop
dec
loope
xchg
xchg
push
iret
in
xchg
dec
jae
mov
inc
enter
push
negb
popf
fstl
enter
ss
mov
imul
lret
outsb
pop
ja
sbb
jo
out
adc
xor
push
inc
xchg
shrb
jmp
adc
mov
pop
push
jne
mov
cmc
sub
lods
mov
data16
popa
jmp
mov
sub
add
dec
mov
jecxz
cmc
lahf
outsl
fcoml
shrl
xor
in
into
mov
xchg
jle
mov
int
outsb
lods
mov
lds
cwtl
fcoml
sti
lahf
imul
inc
das
pop
aaa
fadds
icebp
lret
scas
insb
xchg
daa
outsl
pop
and
pusha
loope
stos
gs
mov
in
mov
dec
jae
ljmp
mov
jl
stos
test
in
sub
or
cltd
mov
clc
scas
mov
jns
adc
pop
je
int3
aaa
and
xchg
mov
dec
cmp
adc
xor
lret
jne
hlt
gs
jge
les
cmc
out
xchg
in
cwtl
dec
gs
lods
mov
sti
repz
dec
pop
xor
xchg
lods
cs
cmc
pop
adc
pop
testb
out
stc
mov
jbe
mov
and
push
scas
inc
rcrb
iret
lds
mov
mov
daa
stos
ljmp
or
xor
adc
insb
aad
sub
xchg
lods
negb
test
cmp
call
and
pop
push
cmp
fiaddl
mov
test
pop
loopne
lods
adc
jno
fstps
pop
subl
pop
je
jae
loope
pop
push
das
pop
pop
cmc
sbb
aam
dec
mov
mov
imul
sub
and
sub
popa
xorl
gs
movsl
add
mov
lret
mov
pop
sbb
xor
jp
dec
adc
popf
push
jmp
jbe
out
repz
addr16
pusha
ficompl
out
aad
jae
nop
mov
aaa
mov
loopne
add
add
in
out
out
mov
lret
jg
jp
add
adc
sbb
dec
inc
inc
out
les
push
cmp
dec
xchg
and
xlat
push
imul
shlb
dec
clc
pop
out
ja
xchg
mov
adc
faddp
push
movsl
pop
data16
xor
pusha
fbld
lods
loop
or
jmp
cmpsb
dec
fsubrl
cmp
pop
test
repnz
pop
jbe
loopne
addr16
xchg
lret
ljmp
inc
movsl
negb
xchg
mov
mov
outsl
dec
fistl
in
push
adc
inc
push
imul
fcmovne
outsl
out
jb
add
push
xorb
das
pop
subl
xor
in
icebp
mov
adc
out
insl
xchg
repz
je
sbb
arpl
in
repnz
pop
sub
out
xor
lock
ficompl
add
test
xchg
fisubs
cltd
dec
in
aaa
push
frstor
das
sub
subl
cmc
repz
jae
repnz
aaa
aas
scas
fdivrl
cmp
xchg
cmpsb
jne
hlt
aaa
je
out
jb
out
out
clc
icebp
jbe
aaa
jo
sahf
loope
shr
out
aaa
outsl
pop
repz
adc
scas
fstpl
push
jmp
push
push
rep
outsl
pop
bnd
out
mov
push
out
daa
outsb
mov
mov
fld
xor
out
cltd
out
xor
jnp
jmp
int
loope
or
adc
sub
loope
and
jnp
icebp
and
imul
addb
decb
xchg
jecxz
pop
jne
or
iret
or
xchg
xchg
push
pop
mov
pop
sub
jmp
xchg
repz
push
pushf
in
ficomps
sub
pop
dec
pop
push
mov
push
jnp
push
cmpsl
pusha
xor
mov
mov
shr
jecxz
mov
xchg
cmpsl
xchg
add
in
push
in
push
xor
mov
cld
aam
xchg
lods
jmp
add
popf
iret
lods
fnsave
out
mov
sbb
cs
int
imul
push
xchg
pop
addr16
jecxz
jb
ret
fnstsw
jae
or
mov
adcl
repnz
xchg
sub
loopne
ret
sub
or
xchg
and
push
pop
xlat
push
ret
data16
cwtl
jno
cmp
sbb
sub
push
add
push
cmpsl
mov
outsb
push
dec
xlat
sub
aad
scas
inc
xor
sub
mov
mov
xor
xor
pop
data16
jbe
inc
sbb
movsl
loopne
adc
jmp
adc
jmp
cmpsb
inc
jmp
ficoms
sub
icebp
jne
loope
fisubrl
stos
xchg
arpl
xchg
aaa
bnd
out
ljmp
pop
fisttps
stc
leave
cmpsl
testl
jbe
push
lds
sbb
cmp
fwait
jmp
cmc
ljmp
pop
stos
add
rorb
cmc
inc
dec
or
cltd
negl
mov
sub
cmp
jno
loopnew
sbb
jno
add
stos
mov
xor
fdivrs
inc
add
push
icebp
insl
mov
leave
clc
mov
xchg
es
loope
xchg
jbe
pop
inc
sbb
mov
fwait
aaa
fstpt
iret
xchg
dec
xor
cmpsl
inc
cmp
add
loopne
out
loope
cmp
adc
cwtl
jnp
sub
add
repnz
lods
jae
mov
jp
js
and
and
ss
xchg
mov
imul
and
mov
leave
adc
daa
adc
es
xchg
xchg
xlat
mov
ljmp
insb
stc
jb
cmp
aad
pop
xlat
push
pop
scas
nop
pop
push
push
sub
or
mov
inc
aam
in
jno
mov
jge
jne
gs
mov
popf
add
sub
mov
imul
rcl
nop
sub
cmp
push
xchg
in
xlat
js
icebp
out
jnp
adc
lds
pop
ljmp
shl
pop
leave
cmpsl
loopne
imul
or
or
add
lock
dec
outsb
adc
lcall
cmpsb
outsb
push
push
fsubp
data16
int3
ss
mov
push
mov
jmp
mov
mov
inc
pop
fdivrp
rcll
negb
mov
fwait
mov
jmp
shlb
in
sbb
lcall
sbb
push
jg
insl
out
fstl
int
dec
cltd
sub
lods
gs
les
out
and
mov
mov
cli
lahf
cmp
jnp
std
imul
mov
je
neg
pop
jmp
push
sbbb
push
push
cmp
jge
lock
fcoml
and
sbb
mov
rcll
sub
xchg
mov
repnz
sub
sub
jg
jg
mov
scas
out
cmp
insb
out
and
lods
and
sub
lcall
mov
addr16
mov
aas
in
popf
cmpsl
ja
pop
push
ficoml
addr16
mov
rcrb
mov
pop
push
cmp
lods
jg
movsl
div
mov
fistps
adc
pop
jle
aaa
xor
cmc
aas
mov
test
mov
fstp
cmp
inc
pop
sub
dec
mov
push
out
xor
add
fldcw
aaa
outsl
fs
lea
jnp
mov
repz
and
mov
fcomp
cmpl
add
loop
or
mov
cmp
xchg
xor
ret
sti
jmp
iret
repz
add
mov
pop
mov
dec
push
pop
mov
fnstenv
out
rcrb
jbe
mov
mov
popf
pop
fcmovu
inc
clc
ja
jb
push
aam
prefetch
imul
ss
stos
fcoml
push
mov
mov
daa
mov
sbb
push
fsubrs
jl
test
push
cmp
cltd
add
jo
nop
jbe
pop
pop
inc
mov
fwait
loop
fstpl
testl
out
je
jae
insl
in
in
ja
push
stc
mov
cmc
mov
lcall
std
negl
xor
xchg
pop
xchg
ficoml
js
jg
jl
mov
xchg
push
daa
fidivrl
fldt
push
ljmp
jecxz
mov
jp
jb
add
mov
out
mov
xchg
negl
adc
sbb
adc
imull
xor
pop
imul
int3
jmp
adc
xchg
jb
int3
push
xor
mov
repnz
jle
cs
inc
sbb
add
xchg
rcr
xor
inc
fsts
lahf
push
adc
insl
or
adc
ret
mov
xor
lock
mov
in
in
mov
cmpsb
jae
inc
shlb
mov
out
jmp
sub
repz
jmp
fisubl
scas
aaa
ret
fisubrl
nop
xor
mov
pop
jl
mov
aad
aad
fs
mov
addr16
fcmovnu
sti
sarl
jns
mov
pushf
fstp
pop
iret
xchg
xor
fldl
mov
loope
scas
push
push
push
fstpl
pop
repnz
movl
loopew
pop
xor
fwait
mov
std
frstor
push
fstp
fsubrl
fnstenv
and
cmp
imul
push
in
lods
fcomps
adcl
fstl
jmp
mov
adc
push
xor
fldenv
adc
decb
hlt
loop
daa
sahf
add
fdiv
loopne
add
inc
sub
in
add
xchg
das
repz
pop
sub
rol
out
pusha
iret
sbb
das
jae
rcr
repnz
adc
or
push
cmc
jp
ljmp
cmp
les
fidivl
jne
push
sub
and
xor
push
sub
rclb
push
mov
loope
dec
jmp
dec
mov
jbe
jne
jg
dec
and
ljmp
cmc
std
sbb
stos
hlt
push
xlat
sub
push
ja
sbb
aaa
pop
sahf
inc
adc
and
push
push
addr16
pop
lock
paddb
daa
es
popa
xor
mov
mov
lcall
lea
push
mov
xlat
push
mov
sbb
aaa
lahf
xchg
xor
repz
aaa
rclb
aam
sub
hlt
scas
jl
test
xchg
repz
sub
mov
xchg
inc
xchg
xchg
pushf
pop
into
adcl
mov
sbb
scas
jle
dec
mov
imul
pop
inc
fcmove
std
mov
mov
mov
jne
rorb
jge
pop
icebp
fcmovbe
outsl
out
mov
cmp
das
push
out
mov
aad
or
test
jno
dec
mov
push
inc
out
mov
cmp
nop
in
cmp
inc
aas
sub
and
jns
popf
mov
add
lods
or
pushf
ret
movsl
cmpsl
movsb
gs
xchg
movsb
lds
or
xchg
loop
in
xchg
push
inc
mov
inc
lahf
sub
fidivs
jnp
pop
pop
pop
inc
out
into
or
or
jno
addr16
sar
movsb
mov
push
add
scas
ret
xchg
mov
sarl
jp
xchg
arpl
ljmp
icebp
fimull
popf
in
enter
push
sub
jl
arpl
adc
jecxz
push
mov
ja
fimull
push
fnsave
xchg
fmul
in
inc
in
xor
xchg
rcr
jg
fcmovnb
fisttps
stos
stos
adc
insl
mov
cmp
mov
mov
xor
jecxz
jp
lahf
xor
ja
je
out
xchg
rorl
movsb
notb
pop
mov
xor
and
out
pop
cmp
ret
aaa
dec
xchg
mov
addl
hlt
cmp
aam
xchg
lods
jbe
fstpt
mov
fisttpll
subl
dec
pop
divb
cmc
push
push
add
push
push
mov
out
jae
shll
add
mov
clc
insl
pushf
push
test
pop
or
stos
xor
test
push
int3
xlat
jle
test
faddl
loope
mov
ja
pop
int
push
xchg
dec
divb
mov
enter
mov
call
mov
sbbb
hlt
sub
fsubl
movl
jge
arpl
aad
imul
dec
js
inc
xor
cmc
lcall
clc
popf
adc
fwait
inc
inc
testb
lock
hlt
cmc
call
in
pop
push
adc
jb
enter
nop
iret
imulb
sbb
jbe
cmc
out
bnd
mov
rcrb
cmpsb
push
jo
es
dec
lea
stos
insl
jne
outsl
outsl
cld
popf
addr16
lahf
imul
mov
in
je
pop
cmc
les
add
into
sbb
lret
out
iret
cmc
add
scas
cmpsl
cwtl
mul
jmp
rcrl
mov
pop
or
sbbb
jmp
inc
cmpsl
or
jl
dec
jmp
sub
lock
dec
mov
xchg
mov
mov
xchg
jle
cmpsb
xchg
aaa
das
mov
out
scas
iret
nop
cld
test
enter
cltd
scas
xchg
sub
xor
test
in
and
into
clc
lahf
sub
in
mov
rol
cmp
out
fstl
popf
ja
gs
mov
mov
cmpsb
cltd
xchg
jo
dec
push
loopne
call
loope
aam
shrl
mov
aam
dec
push
xor
imul
xchg
shll
jmp
out
sub
imul
pop
divb
fisttps
fisubrl
arpl
lock
dec
testb
push
mov
pop
push
mov
scas
addr16
mov
cld
push
idivb
jp
push
dec
xor
add
rclb
psrlq
xchg
jo
sub
xchg
pop
mov
xor
or
pop
mov
jbe
and
js
pop
vpsubsw
je
cmp
leave
mov
imul
cmp
inc
jle
jl
xlat
jmp
incb
andb
lret
lods
mov
and
ficoml
sbb
or
out
push
sub
lock
jbe
or
push
push
inc
daa
cwtl
hlt
je
jno
xor
fcomp
fisubrs
xchg
sub
cltd
hlt
lret
mov
jns
outsl
cmp
adc
jmp
stos
pop
jle
popf
aas
add
sub
jp
xor
loopne
fidivrs
mov
lods
inc
enter
loop
or
cltd
or
movsb
in
inc
iret
int3
aam
mov
aaa
xchg
int3
out
dec
or
icebp
dec
pop
or
inc
mov
fsubrp
in
jns
pop
jmp
shl
ds
adc
xor
mov
or
inc
repz
cli
adc
jne
adc
inc
stos
sti
jmp
aaa
outsl
dec
jmp
or
pop
jp
enter
int
je
jno
cltd
push
push
repnz
pop
arpl
fisubrs
adc
push
xchg
pop
and
xchg
pop
iret
lods
jne
adc
outsb
pop
mov
cmpsl
mov
sbb
mov
in
out
lods
out
cmc
sub
bound
jmp
insl
in
sub
hlt
sti
outsb
lock
jmp
and
lock
in
subb
movsb
call
inc
mov
pusha
movsb
aas
jp
rorl
mov
cltd
or
cmc
ljmp
aaa
mov
add
inc
or
out
std
cltd
or
flds
jmp
inc
das
or
fstpl
not
or
ljmp
add
sub
mov
add
iret
jne
xchg
fdivrl
push
sbb
in
ds
cmp
data16
mov
jb
mov
in
pop
hlt
mov
popf
add
mov
shll
jle
add
inc
jbe
inc
dec
mov
icebp
push
or
jb
outsl
andb
pop
sub
cmp
fs
pop
push
ljmp
mov
ljmp
out
sub
sbb
mov
shll
pop
es
jecxz
dec
je
and
xlat
sti
xor
pop
pop
xchg
jg
and
out
notb
aas
and
jmp
xchg
adc
mov
popf
icebp
in
ficoml
jno
movsb
jle
mov
clc
dec
jbe
adc
dec
dec
and
mov
out
shl
lahf
cmp
xor
adc
jecxz
push
inc
call
jne
divb
xor
push
push
add
mov
fs
adc
fwait
push
or
cmpsl
jb
push
aas
in
mov
ds
push
xor
imul
ds
aad
sub
out
pop
into
in
loop
hlt
mov
mov
imul
lods
test
int
lods
pop
scas
mov
repnz
mov
imul
adc
mov
out
push
xor
cmc
mov
push
shrb
das
fisubl
mov
testb
in
mov
jle
jl
xor
ficomps
std
sbb
sub
jo
bound
leave
shr
icebp
adc
adc
jle
inc
xor
add
fwait
arpl
jne
hlt
hlt
mov
add
int
in
sahf
aaa
ljmp
fcoml
cmc
inc
mov
mov
mov
repz
mov
xlat
xor
das
mov
dec
xchg
mov
lods
les
sub
and
xchg
mov
dec
sbb
insl
adc
adc
xchg
mov
insb
lahf
pop
dec
or
dec
pop
sahf
int
dec
push
lods
and
cmp
mov
je
or
sub
xor
int
xor
std
xor
xor
inc
push
mov
jne,pn
testl
icebp
inc
mov
mov
dec
daa
or
repnz
mov
mov
aam
xlat
mov
gs
jmp
mov
enter
cli
mov
pop
mov
lock
sub
mov
ss
jle
lret
movsl
call
xchg
outsb
movsl
int
scas
dec
cmc
outsl
pop
test
test
cwtl
fmulp
xor
pop
xor
mov
gs
lods
mov
repnz
in
icebp
lret
xorl
mov
xchg
pop
je
jns
jmp
or
orl
xlat
jbe
mov
dec
movsl
add
or
enter
fisubrl
mov
dec
adc
push
jnp
fisttps
sub
pop
pop
fbld
mov
aad
mov
dec
sarb
into
leave
testl
popf
imul
and
adc
stos
xchg
enter
in
jne
hlt
out
je
loope
and
outsl
scas
ds
xchg
inc
in
fidivrs
and
movsl
or
shll
in
lahf
stos
ds
xor
and
xchg
cld
and
insl
push
jl
sub
lods
jne
aad
pop
fidivs
jbe
mov
pop
sbb
push
push
sub
xor
lock
pop
out
sub
adc
dec
test
mov
or
cltd
dec
xchg
je
xor
push
xchg
inc
rol
jmp
mov
cmp
dec
mov
enter
sbb
int3
aam
sub
sbb
and
or
sbb
sub
mov
divb
call
or
lahf
mov
jl
movsl
aaa
pop
jmp
mov
fimull
or
jp
cltd
dec
lods
mov
rcl
in
xchg
mov
pop
mov
xor
clc
popa
repz
mov
cmc
inc
dec
js
cltd
insl
in
inc
mov
fcoms
xchg
call
pop
cmpl
aas
icebp
out
mov
mov
lcall
imul
pop
faddl
aam
push
int
ss
dec
cmpsl
in
iret
dec
rorl
jbe
jns
lret
adc
outsl
lret
add
pop
jae
out
sub
addr16
movsl
in
dec
dec
xor
sbb
sub
daa
repz
sbb
mov
clc
popa
xchg
aad
adc
in
cmp
push
or
xor
jo
mov
mov
outsl
int3
repnz
repz
dec
xor
cs
xchg
pop
popa
xchg
jns
pop
ja
push
dec
adc
iret
xchg
and
ja
jne
push
stc
ds
les
xchg
push
hlt
pop
fisubrl
pop
ret
inc
ffreep
loop
or
mov
fcomp
or
out
int
aaa
cld
outsl
adc
sub
enter
les
shlb
insb
imul
and
out
jne
cmp
in
xor
mov
mov
ljmp
mov
jecxz
imulb
nop
cld
popa
int3
adc
ljmp
and
xchg
flds
lods
and
scas
leave
ret
in
out
arpl
xor
mov
outsb
shlb
inc
adcl
nop
das
mul
mov
mov
xor
jo
push
icebp
xchg
je
push
and
in
ljmp
sbb
add
mov
ljmp
mov
notb
lds
ficoml
lahf
xchg
inc
mov
aaa
cmpsb
scas
xlat
inc
pop
orb
xor
xor
sub
dec
leave
or
push
idivb
push
cmc
fsubrl
out
lods
fiadds
xchg
outsb
das
xor
aad
mov
adc
popf
hlt
jp
bound
mov
out
mov
lock
mov
push
ror
inc
xlat
jp
add
mov
lcall
clc
sbb
scas
xchg
and
daa
aad
xchg
aam
mov
xlat
jnp
lock
mov
xchg
ja
inc
xor
int3
push
cmp
sbb
es
imul
pop
test
into
xchg
int
lret
aaa
mov
mov
pop
sub
outsl
mov
ss
mov
pop
push
xchg
dec
cmp
mov
out
push
xchg
lcall
mov
outsl
aaa
test
gs
add
nop
call
pop
add
jae
and
pop
outsl
pop
sub
dec
scas
mov
jecxz,pt
inc
xlat
add
hlt
xchg
mov
sbb
fsts
sbb
pop
ss
insb
mov
add
test
xlat
sbb
mov
scas
or
and
leave
dec
xor
jbe
mov
xchg
push
xchg
and
xchg
nop
xor
imul
icebp
notb
pop
call
out
popa
mov
lds
add
xchg
cltd
mov
nop
mov
sub
rep
jne
jbe
inc
std
fnclex
test
cwtl
insb
imul
mov
nop
out
mov
das
cmp
out
loope,pn
das
dec
push
into
movsb
sbb
test
adc
sub
dec
outsl
jmp
fcomip
or
hlt
pop
jnp
shr
mov
push
fcmove
jg
ljmp
cmc
or
rcl
pop
adc
or
rclb
dec
fcmovu
test
jl
inc
and
mov
push
aam
cmp
rorl
ljmp
xor
push
adc
stos
ss
lods
mov
lock
xor
dec
fistps
insl
mov
jecxz
mov
call
and
jne
addl
push
rorb
bound
sub
ja
pop
mov
mov
mov
or
or
sarl
jae
mov
out
shll
push
mov
add
aaa
hlt
ja
loop
js
cmp
lretw
mov
add
inc
sub
imul
iret
adc
jo
push
hlt
mov
push
scas
inc
lods
ja
ds
movsb
push
or
bnd
xchg
or
outsb
mov
or
addr16
jp
testb
out
dec
aam
adc
js
sub
push
add
inc
xchg
aaa
cmp
mov
sbb
cwtl
dec
and
lods
push
pop
sub
shlb
cmc
cmp
adc
icebp
aam
nop
hlt
mov
xchg
call
gs
adc
push
out
or
and
in
push
scas
hlt
mov
movsb
ljmp
hlt
xchg
mov
cmp
repz
xchg
fnstcw
xchg
gs
lret
cmc
xchg
mov
in
fwait
int
sbb
orb
add
popa
sbb
fiaddl
mov
xor
out
movsl
into
jnp
jne
dec
dec
dec
lret
lock
pop
sub
fildll
and
push
cmc
sub
outsl
or
jp
sbb
jecxz
or
cmp
fistl
pop
sub
sbb
or
sbb
jno
scas
mov
je
je
aaa
sub
hlt
outsl
ja
push
addr16
leave
cmc
xchg
mov
aam
xchg
imul
adc
out
iret
call
fildll
loopne
dec
or
pop
outsl
cwtl
mov
pop
fwait
xchg
lahf
repnz
mov
sbb
aas
cmp
stos
fbstp
sub
push
dec
cmc
notl
and
and
xlat
sub
scas
loopne
jns
mov
cmpsb
out
out
or
xchg
xor
adc
dec
lods
jle
dec
jb
insl
ja
scas
dec
testb
movsb
cwtl
ret
mov
jo
scas
xchg
cmp
add
jns
push
sub
jp
mov
jo
lahf
sbb
dec
xlat
mov
shrl
mov
push
adc
pop
pusha
lea
das
out
dec
lock
aam
int3
addr16
adc
bnd
push
adc
jmp
cmp
pusha
pop
scas
mov
loope
lock
inc
loopne
jecxz
xchg
xchg
jle
mov
fstl
in
adc
bnd
imul
std
mov
cld
mov
dec
xor
out
mov
ja
incl
test
ja
inc
loopne
and
rorl
roll
aaa
or
imul
mov
mov
or
mov
imul
dec
push
ss
mov
in
jo
es
adc
jno
pop
sub
cwtl
mov
and
jb
es
pop
jmp
outsl
repnz
mov
mov
imul
call
roll
mov
sub
mov
jae
xor
dec
out
xchg
xor
add
xchg
stc
adc
adc
or
mov
clc
mov
xchg
mov
out
pop
adc
loope,pn
fisubs
and
mov
cmpsb
inc
and
lock
outsb
mov
fcomip
push
mov
cwtl
lods
add
popf
cmpsb
cmp
adc
push
repz
cltd
loopne
fsubs
mov
js
dec
dec
xchg
add
mov
lahf
xchg
popf
fwait
push
inc
div
inc
jmp
or
out
fadds
cmpsb
out
push
je
push
stos
jbe
jp
dec
xchg
mov
mov
lock
popa
rol
push
je
or
jne
aaa
or
xchg
xchg
call
cli
inc
out
add
sub
xor
loopne
out
ret
sub
mov
and
stc
inc
xor
jo
sub
ja
fcomps
icebp
jno
dec
xchg
or
outsb
shll
add
sub
repz
ja
mov
jp
into
sbb
ja
jle
or
mov
push
or
xor
lods
push
push
mov
mov
adc
xchg
jne
inc
int
mov
jecxz
xchg
lock
xchg
xchg
cld
ret
mov
mov
insl
aad
clc
js
jg
pushf
aas
popf
dec
cmp
mov
pop
inc
popf
js
js
dec
dec
iret
sbb
pushf
inc
insb
fstps
pop
xor
ss
cmp
adc
inc
hlt
jne
cmpsl
nop
cld
in
sti
lods
inc
sahf
clc
mov
dec
and
mov
shl
clc
jl
jno
sarb
and
jns
pop
xchg
test
jp
xchg
dec
pop
daa
pop
push
add
fnsave
test
jge
mov
mov
subb
out
xchg
jmp
inc
sbb
xorl
fistpl
jb
add
stos
mov
jmp
out
sub
push
xchg
pop
int3
popf
push
das
fwait
imul
fldcw
lahf
pop
stc
xchg
xchg
icebp
push
adc
push
mov
fldcw
lahf
pop
popf
popf
mov
popa
sbb
cld
popa
pop
jb
out
dec
repz
mov
jne
loopne
rcrl
je
data16
in
xchg
outsl
ret
arpl
sbb
add
loop
jp
mov
sti
dec
outsb
ja
push
lcall
es
xchg
add
iret
jecxz
mov
xor
ret
call
out
add
adc
jmp
inc
mov
pop
mov
push
ja
outsb
mov
icebp
outsl
imul
xor
jmp
mov
aam
adc
mov
test
imul
insl
ljmp
stos
mov
dec
mov
jecxz
push
cmc
fsubl
jbe
mov
dec
push
fs
mov
inc
and
or
cmpsl
mov
je
inc
jbe
mov
pop
xchg
mov
adc
fstpt
idivb
mov
mov
stos
sahf
fsubrs
ss
fisubrl
push
pop
in
sbb
dec
pop
outsb
mov
cmc
and
push
xlat
sub
jg
scas
adc
hlt
add
mov
icebp
jo
scas
clc
fbstp
mov
xchg
xor
cmp
sbb
inc
in
fldl
jg
fimull
push
or
adc
push
sbb
sbb
hlt
fcomp
outsb
ss
jno
jo
test
jmp
push
mov
in
sub
xchg
mov
xlat
out
ds
ja
mov
addr16
fcom
fdivrl
dec
roll
sbb
adc
push
fninit
clc
fsubr
add
inc
push
sub
fs
cmpsl
xor
jmp
lea
lds
xchg
out
sub
pop
mov
push
jmp
dec
icebp
dec
jno
dec
int
fs
out
leave
mov
fnstsw
bnd
repnz
adc
adc
jmp
out
fs
movsb
aas
into
cmp
ds
jne
shll
jbe
cmp
cmp
ljmp
xlat
ljmp
shr
movsb
rorl
jns
jae
jbe
mov
push
ss
ljmp
ficoml
sub
pop
fdivrp
test
je
jns
jae
arpl
and
repz
cmpsb
push
jle
jno
std
aam
mov
sbb
dec
in
aam
cmp
push
adc
cmp
and
mov
dec
cmp
repz
mov
xchg
cmp
jns
fldz
fdivrs
jae
inc
je
push
inc
ffreep
in
push
inc
sbb
xchg
test
adc
cltd
aaa
fistps
bnd
jg
adc
push
lock
dec
mov
jns
clc
in
divl
jmp
movl
jae
xor
mov
cmc
arpl
divb
fdivp
mov
pop
lret
adc
jl
iret
push
aaa
gs
mov
call
imul
mov
fistpl
movsl
mov
pop
fwait
aaa
xchg
jb
in
jmp
daa
insl
outsl
pop
repnz
jo
dec
jb
cmc
xlat
jno
or
xchg
jb
icebp
pop
jno
push
fnsave
sbb
pop
gs
insb
and
scas
xor
xlat
xchg
xchg
push
mov
mov
lods
pushf
icebp
push
decl
fcom
add
xlat
inc
cmp
pop
mov
iret
out
pusha
inc
clc
rorb
jmp
fcmovnbe
je
sbb
ja
jae
mov
inc
push
popa
repnz
inc
lods
push
mov
cli
xorl
scas
ja
aaa
shll
stos
scas
loopne
scas
loop
bound
and
cmc
xor
jmp
ret
out
imul
lock
jae
loope
out
enter
movsb
mov
cmpsl
loope
mov
jnp
push
imul
mov
xchg
push
xor
or
cmc
jne
mov
mov
mov
outsl
dec
mov
push
aaa
in
inc
iret
imull
inc
pop
movsl
sar
inc
lock
rcrb
jnp
mov
test
jno
cmc
mov
push
add
mov
pop
sub
lcall
jge
mov
in
loope
xor
shrl
xchg
xor
push
xchg
pop
xor
std
add
sbb
mov
decb
ja
in
ja,pn
and
cmovl
stos
jo
push
aaa
cwtl
sti
mov
adc
sub
jno
cmp
dec
push
mov
or
lock
mov
xchg
dec
sub
sub
loope
pop
mov
inc
fnstenv
mov
popa
jb
inc
jo
sbbb
add
int
xor
and
xchg
stc
nop
jmp
jp
fisubrl
mov
xchg
push
push
roll
in
loope
aaa
test
jecxz
add
in
jb
fldl
mov
rcr
icebp
mov
pushw
mov
in
mov
imul
jmp
repnz
mov
clc
in
push
bound
leave
bnd
orl
add
sub
xor
loope
fisubrs
cli
in
cs
ret
cmp
std
in
out
sub
push
mov
jmp
rorb
pop
sbb
jne
cmpsl
mov
test
add
out
mov
mov
jbe
repz
push
call
in
mov
cs
or
out
lcall
inc
xchg
scas
mov
jno
add
bound
inc
cs
adc
add
shlb
cmpsl
movsl
pop
pop
lds
dec
sub
insb
fdivrl
movsl
sub
iret
mov
sbb
arpl
push
lock
aaa
add
daa
jb
jmp
js
xor
inc
xlat
shll
and
hlt
jo
jbe
fcmovu
loop
jbe
ja
mov
in
gs
in
cmp
sbb
push
stc
out
lret
jmp
xchg
in
pop
mov
or
out
mov
xchg
push
jge
rcll
lds
jo
insb
call
out
xor
xor
add
inc
cmc
repz
push
mov
jae
repnz
mov
outsl
test
xchg
xchg
imul
mov
shr
adc
stos
cmc
out
add
sub
scas
subb
fidivrl
add
scas
push
in
sarb
push
push
xchg
fidivrs
jecxz
outsb
iret
mov
dec
imul
test
pop
or
xlat
cmp
adc
and
push
pop
fnstenv
add
push
or
out
fidivrl
mov
outsl
add
pop
mov
ljmp
xchg
push
out
jmp
sahf
or
repnz
adc
push
iret
cmc
adc
mov
push
fucom
push
ljmp
movsl
ret
gs
sub
lret
mov
pop
xchg
mov
adc
and
pop
outsl
jae
pop
in
xor
sbb
cs
pop
testb
popf
xchg
or
inc
mov
push
xchg
movsl
cmp
lahf
clc
in
pop
sub
xchg
shl
xchg
push
add
out
sub
fisubl
inc
scas
or
movb
push
fiaddl
fidivl
adc
push
inc
xchg
je
xchg
shrl
rclw
rcrb
ja
lret
jbe
jp
and
pop
push
cmc
pop
ret
shr
fwait
or
rclb
repnz
and
inc
lcall
js
push
pop
outsb
into
pop
icebp
hlt
jg
shl
sub
es
xchg
cs
mov
jbe
lds
or
loop
pop
push
add
les
cmp
imul
nop
js
sub
adc
xchg
js
fistpll
sub
cmp
inc
pop
pop
loopne
xorl
cmp
push
sub
sbb
fistl
lret
sbb
cld
dec
sti
add
mov
js
mov
repnz
cli
pop
fadd
fcomps
or
jge
mov
pop
push
pop
push
push
inc
xor
call
add
inc
testb
ss
or
push
mov
test
fstp
sbb
pop
dec
fcomp
lods
pop
leave
mov
aas
daa
loope
cmpsb
insl
nop
adc
cmpxchg
dec
repz
int
test
cltd
nop
test
inc
pop
je
lret
jp
push
stc
jle
sbb
xor
push
and
mov
xorl
push
sub
inc
mov
lret
dec
xchg
shlb
push
sub
sbb
lods
stos
mov
xchg
mov
mov
dec
sub
ja
aaa
sub
fstpt
jno
push
rorl
mov
stos
mov
mov
out
push
xchg
and
xor
mov
enter
mov
mov
hlt
fisubrl
call
test
pop
sub
fwait
adc
pop
scas
jp
jo
xchg
test
xchg
repnz
shlb
ja
pushf
adc
xchg
mov
xchg
cmp
fnstcw
sub
loope
jo
outsb
daa
fisttpll
repz
das
jo
mov
inc
sarb
fisubrl
mov
jmp
xchg
add
dec
inc
sbb
mov
fldt
into
je
out
cli
dec
rcr
sub
dec
rorl
in
icebp
aam
fiaddl
ds
ds
pusha
out
and
jbe
adc
push
int
push
pop
sti
mov
bound
movsl
xor
adc
btc
cwtl
fisubrl
mov
pop
jae
xor
std
or
mov
ja
jl
dec
jmp
or
add
dec
fwait
jecxz
mov
sub
add
roll
push
popa
jp
inc
xchg
int
inc
ljmp
aaa
fildll
sbb
mov
jecxz
pushf
into
aaa
or
mov
xor
cmp
jp
or
in
add
cmp
xchg
push
imul
imul
ljmp
loop
mov
xchg
inc
jb
cmc
xor
add
sub
mov
cmp
dec
or
mov
nop
jno
dec
mov
je
xchg
cmp
or
mov
adc
xor
leave
sti
push
pop
insl
add
jge
sbb
mov
sbb
pop
outsl
fwait
push
imul
inc
fbld
ja
icebp
lea
jae
iret
fmuls
out
fcomp
inc
stos
insb
test
mov
push
add
nopl
push
out
xchg
movsl
and
jle
mov
cmp
lods
loopne
mov
xchg
std
cmc
rol
adc
in
scas
mov
xchg
inc
pop
mov
int
hlt
flds
data16
mov
scas
xor
lret
fnstcw
push
ss
stos
insb
xchg
scas
out
mov
inc
std
adc
sbb
rcll
daa
movsl
rcl
jp
xchg
and
flds
jmp
pop
sub
fiaddl
pop
lods
in
cwtl
dec
adc
repnz
push
sub
ds
aam
lret
frstor
xlat
cs
inc
fmuls
push
push
inc
jne
outsl
pop
xlat
test
lret
fiaddl
fwait
lea
xchg
ljmp
imul
xor
cmc
adcb
dec
lahf
mov
add
sub
call
adc
frstor
icebp
lahf
je
or
in
mov
jbe
notb
pop
inc
pop
cmp
loop
xchg
fcomi
inc
ficoms
incb
in
faddl
mov
arpl
inc
loop
fsubp
imul
aam
mov
out
dec
ja
stos
adc
mov
and
pop
xchg
test
cld
push
pop
lock
xchg
mov
daa
push
pop
icebp
in
popa
sbb
imul
data16
push
roll
inc
test
mov
pop
cmc
pop
cmpsl
lea
fs
jge
mov
test
xchg
xor
cmpsl
xor
and
cmpsl
popa
jne
movsb
push
pop
bnd
popf
rorl
xlat
movsl
dec
push
cmp
sub
sub
lret
ja
mov
xchg
in
repnz
push
xchg
repnz
xor
fidivs
mov
and
test
pop
pop
lods
test
lods
mov
dec
ljmp
jle
fistl
loop
push
mov
daa
out
mov
movsl
outsl
add
aaa
mov
xchg
or
movl
fbstp
outsl
pop
aad
add
lods
movsb
push
mov
jb
push
jo
shlb
xorl
add
lock
lods
in
fimuls
xchg
dec
aas
call
ljmp
bts
cmp
out
pop
jbe
int
mov
mov
inc
lahf
imul
mov
pusha
cmc
out
rorl
mov
call
aam
imul
std
adc
jns,pt
into
mov
in
dec
mov
jp
addr16
xchg
pop
fwait
ret
xchg
test
jne
xor
xchg
pop
in
pop
in
ficoms
xor
shl
fsubp
jecxz
xchg
scas
inc
mov
xlat
dec
xor
xchg
xchg
lahf
out
cli
xchg
addr16
mov
cmp
or
popa
sbb
pop
test
dec
aad
sub
negb
leave
insl
xchg
in
fstpl
dec
pop
call
adc
jne
dec
push
mov
out
in
fidivl
xor
hlt
and
bswap
out
sub
xor
nop
in
imul
mov
ljmp
dec
ss
mov
shll
mov
inc
mov
std
adc
jle
je
jmp
and
arpl
hlt
aas
ljmp
pcmpgtd
int
shrl
das
into
and
xchg
je
je
popf
call
mov
jae
test
push
xchg
aad
adc
pop
addr16
xor
cmp
dec
lea
push
dec
adc
dec
imul
or
jae
mov
inc
into
fldenv
cmp
mov
fstps
push
mov
bound
adc
loopne
repz
add
pop
and
icebp
fistl
lea
jl
mov
jmp
arpl
fidivs
imul
pusha
shlb
mov
sbb
pop
ficoms
mov
pop
out
aaa
fisubrl
roll
lods
mov
mov
sahf
addr16
mov
aam
cmc
ficompl
mov
test
ret
fs
divb
loope
gs
je
ljmp
mov
lahf
out
inc
sti
push
jb
in
lds
inc
arpl
sub
xchg
les
das
sti
enter
pop
shlb
stos
negb
push
test
fiadds
ficoms
aaa
jbe
addr16
lds
sub
mov
outsl
orl
andb
inc
mov
mov
hlt
xchg
das
fidivs
out
repz
roll
inc
shl
xchg
repz
out
jo
push
orb
jge
cwtl
pop
inc
repnz
test
outsl
lret
xor
pop
aam
test
add
push
pop
hlt
test
je
mov
mov
je
popf
das
imulb
pop
aad
hlt
in
pop
lret
cmpsb
mov
sub
xchg
icebp
imul
xchg
cmp
mov
push
cmp
popa
cmp
in
mov
mov
jl
int
mov
out
scas
and
ret
mov
inc
mov
or
nop
jle
pusha
imul
jne
aad
cmp
ljmp
sbb
pop
aad
mov
xor
int
adc
ljmp
mov
popf
mov
clc
aaa
in
adc
xor
aas
repnz
sarb
sub
jno
mov
addr16
fmull
add
sti
mov
insb
add
mov
pop
cmp
cs
jb
cs
xchg
xor
sarl
jo
ds
lret
inc
or
mov
lahf
cmp
jns
dec
mov
dec
sbb
outsb
pop
pop
xorl
jge
lret
jecxz
xlat
je
out
mov
and
sub
push
push
jl
pop
adc
cmpsl
xchg
shlb
or
rcll
and
repnz
hlt
cmp
jno
lds
or
xchg
cmp
sarb
subb
cmp
scas
in
inc
xchg
repz
xchg
inc
fs
insl
sub
rcr
inc
jb
ss
mov
je
mov
xchg
mov
repnz
inc
pop
xchg
xchg
popf
jns
sub
fs
mov
jne
mov
push
push
push
add
push
mov
addl
in
pop
data16
in
add
in
shr
lds
fcoms
dec
dec
mov
imul
cs
mov
mov
ljmp
adc
loopne
in
push
outsl
out
sahf
add
out
adcl
xor
scas
add
dec
iret
nop
icebp
dec
and
push
inc
xlat
std
fisubrl
lock
imul
and
jbe
xor
icebp
lahf
call
into
adc
out
mov
add
pop
nop
faddl
push
push
jne
jge
sub
pop
cmp
cmp
jp
xchg
cmp
bound
les
es
or
xorl
sahf
add
xor
push
fs
pop
into
sbb
cwtl
or
sub
add
push
into
sbb
int
ss
xor
ficoms
sub
mov
xor
jg
sahf
in
cmpsl
sbb
fistpll
cmp
push
mov
push
cmp
mov
in
fldenv
mov
cmp
push
loopne
mov
sub
rclb
xchg
mov
pusha
data16
movsl
imul
xor
pop
in
int
or
mov
arpl
xchg
cmp
push
loopne
push
push
pop
ja
mov
mov
push
lods
sub
out
adc
out
outsl
jecxz
mov
jmp
comiss
inc
jbe
int
arpl
imul
xchg
out
sbbl
dec
fiadds
out
insl
inc
shl
insb
pusha
loop
jb
roll
push
sbb
adc
loope
jmp
cld
outsl
adc
xchg
jns
adc
sub
cmpsl
pop
xchg
push
aaa
imul
jno
idivb
gs
xchg
mov
push
adc
loope
jg
xchg
mov
add
repz
cld
rorb
or
shll
sarl
xor
fdivrl
mov
inc
jbe,pn
jmp
push
xor
in
inc
sub
iret
fldl
fwait
stc
mov
rcrl
das
ja
iret
test
aad
adc
aaa
call
xchg
cwtl
sbb
xchg
pop
ret
or
push
inc
dec
cmp
push
dec
pop
cmpsl
jnp
movsl
icebp
push
aaa
or
ss
test
dec
fisttpl
cltd
movsb
add
xor
mov
xor
shl
out
adc
popa
iret
push
xchg
add
pop
jp
test
add
mov
push
idivb
dec
pop
add
adc
or
fidivrl
in
jo
and
fisubl
push
popa
stos
adc
daa
sbb
adc
les
stos
aaa
cmpsl
cwtl
or
inc
stc
cmpsb
or
leave
push
cmp
jecxz
movsl
lahf
sbb
sub
push
jno
enter
addr16
pop
xchg
sbb
cltd
add
mov
mov
test
dec
loope
je
pushf
not
nop
or
stos
rolb
pop
sub
mov
mov
xor
jbe
das
aas
cmpsl
push
inc
adc
fmull
xchg
fs
jae
jmp
mov
stos
leave
loop
jg
mov
xchg
jbe
sub
mov
test
mov
rorl
in
enter
shlb
pop
push
imul
xor
out
lds
jb
fmul
inc
fsubl
dec
lret
test
and
sti
lret
sub
adc
xchg
cwtl
or
and
mov
mov
xor
xchg
fsubs
push
in
ja
lahf
jmp
xchg
mov
cmp
push
mov
mov
push
push
jecxz
imul
jb
shufps
lahf
jno
xchg
pop
ja
cmpsl
das
lcall
stos
adc
sub
or
fstpl
lods
or
test
ss
sbbl
sub
jno
or
inc
sub
test
mov
fdivrl
aas
test
ja
out
les
push
clc
add
rorb
jno
lcall
jb
in
pop
add
in
adc
sti
inc
mov
inc
sbb
out
push
lahf
loopne
sub
mov
bound
dec
sub
pop
jne
pop
gs
lcall
aam
push
dec
stos
jnp
cmp
mov
hlt
push
stos
or
pop
sti
imul
gs
in
fisubs
shll
adc
ficomps
inc
xor
lds
cmpsl
ja
pusha
shl
cli
scas
xchg
loop
dec
mov
daa
mov
popa
adc
inc
mov
sbb
scas
aaa
pop
stos
mov
jbe
sti
test
push
ficompl
dec
pop
out
ret
aas
shr
lock
int
jo
divb
repnz
push
mov
loop
shl
jecxz
jo
loop
dec
ja
jbe
fdivp
imul
adc
cmp
aaa
outsl
repnz
jo
jbe
lods
aaa
icebp
cmc
and
outsl
lock
pop
mov
mov
jbe
fiadds
ja
loope
xchg
popf
inc
hlt
popa
mov
loopne
pusha
rcr
lds
popf
fsubrl
pop
addr16
mov
shrb
sub
mov
fdiv
pop
xorb
push
adc
mov
lds
ljmp
rcrb
jge
push
and
mov
mov
fisubrl
outsl
push
hlt
ret
jbe
ret
xchg
xlat
inc
in
dec
push
decb
loope
shl
push
popa
xchg
jg
das
loopne
jecxz
push
pusha
hlt
das
push
fists
outsl
push
pop
in
fidivs
loope
hlt
dec
mov
jno
icebp
pop
rcr
push
mov
mov
push
fsubl
xor
ss
loop
pop
iret
loop
fcmovbe
loop
pop
xchg
ret
sbb
dec
push
inc
mov
sti
mov
fs
jnp
xchg
insb
lea
adc
loopne
out
dec
movsb
push
daa
loopne
jp
mov
xchg
movb
cltd
pop
jne
rclb
add
call
push
sbb
jp
ljmp
dec
pop
loope
outsb
call
jl
inc
cltd
add
add
xchg
int
jb
frstor
xchg
insl
out
jbe
pusha
add
add
mov
xchg
nop
fisubrs
lods
fimull
jb
add
push
enter
jmp
outsb
or
inc
xchg
ljmp
dec
divb
push
in
pop
mov
xchg
or
xchg
popf
dec
test
adc
sbb
inc
and
shl
mov
mov
jmp
sbb
iret
add
nop
jle
pop
mov
xorb
ja
push
sub
push
cmp
in
movsl
mov
icebp
cmp
adc
das
ret
sub
push
mov
cli
dec
cmpsl
fnstenv
hlt
xor
insl
shll
pusha
test
imul
popf
insb
add
fldt
mov
jle
insb
out
mov
dec
pop
mov
adc
dec
movsl
leave
push
pop
shr
pop
push
nop
push
sti
adc
jmp
add
mov
mov
cmpsl
subb
ljmp
testl
aaa
mov
icebp
or
nop
clc
fsubs
out
mov
lea
repz
sbb
aaa
and
ss
xorl
lahf
test
jns
cmp
dec
int3
mov
add
jmp
xchg
repz
shlb
lcall
xchg
cmpsl
push
in
dec
mov
lock
inc
lds
aam
mov
out
and
inc
imul
jne
sbb
ja
mov
and
les
scas
xor
and
or
adc
scas
sbb
mov
inc
mov
lock
sbb
push
jmp
cmc
mov
jbe
adc
xlat
out
hlt
clc
fnsave
fildl
xor
mov
sub
fsubrl
ss
xlat
int
xor
cmc
int3
divl
fwait
xlat
out
lods
push
addl
lock
and
dec
outsl
xchg
jae
fdivrp
inc
pop
add
pop
jg
mov
xlat
jno
mov
imul
push
mov
mov
add
dec
sbb
dec
cmpsl
out
jecxz
rorb
jb
push
pop
mov
sbb
and
das
inc
push
lods
test
pop
jns
daa
lret
pop
out
rcr
fistl
das
ja
mov
vmulsd
cmc
sub
adc
or
enter
jge
daa
xchg
loopne
arpl
pop
mov
scas
into
and
mov
push
scas
mov
das
testl
repnz
mov
jb
push
fcompl
adc
mov
bnd
popf
fstp
push
fwait
hlt
push
jb
ss
mov
sbb
xor
push
negl
lret
xchg
push
mov
aaa
xor
add
jle
adc
xlat
inc
imul
stos
in
push
adc
in
lds
fistpll
add
or
cltd
out
stos
outsl
lahf
mov
ja
jecxz
add
lret
ret
and
mov
push
sub
mov
adc
mov
xchg
ljmp
stos
iret
test
dec
cmc
loope
mov
lods
push
mov
cltd
and
sub
jb
ljmp
push
pop
ja
loope
fsts
mov
hlt
sub
dec
and
mov
inc
arpl
lret
inc
inc
loopne
dec
mov
dec
mov
mov
sbb
int3
leave
and
insl
mov
inc
in
adc
cmp
in
lods
hlt
dec
data16
scas
imul
mov
dec
lahf
test
loopne
jo
in
scas
adc
jg
in
shr
dec
jne
imul
popf
lds
es
test
hlt
mov
sub
jne
pop
pop
pop
arpl
sbb
dec
in
lods
movsl
xor
pop
lahf
cmp
xor
xchg
or
xchg
in
daa
sub
jae
fisubs
inc
push
mov
je
mov
sbb
fnsave
push
or
push
fimuls
sahf
push
in
add
push
xchg
sbb
jno
xlat
loopne
xchg
sbb
pushf
jl
cmp
adc
scas
sub
sahf
call
shll
jno
out
and
std
icebp
arpl
lods
xchg
xor
mov
addr16
fsubp
mov
push
push
decb
push
icebp
adc
jecxz
das
pop
mov
push
fisubrs
mov
das
fidivl
test
fcmove
fucomi
mov
outsl
testb
or
pop
cmc
pop
into
cmp
pop
push
into
push
pop
xor
push
push
mov
int
aam
fdiv
inc
fucomip
xor
sub
lods
in
sbb
adc
xchg
addr16
push
ja
mov
imul
sarb
mov
fistl
loopne
push
into
inc
or
mov
jbe
test
out
ja
pusha
cmc
jne,pn
cmp
popf
push
addr16
mov
sbb
adc
in
push
dec
push
xchg
dec
mov
push
inc
cmpsl
ljmp
jae
cmc
mov
add
iret
lods
xorl
lret
fisubrs
test
push
outsl
das
mov
repnz
aam
fdivs
aad
mov
jno
mov
mov
rclb
xlat
or
rcrb
call
xchg
push
rorb
jno
sbb
pop
and
mov
cmp
repz
not
gs
dec
adc
notl
iret
nop
fisubrs
jp
add
test
xchg
xchg
repnz
outsl
sti
addr16
int
sbb
rcll
ljmp
in
sub
inc
cmpsl
or
mov
sub
mov
pop
sbb
xchg
fisttps
fs
dec
mov
adc
loope
jae
pushf
enter
addr16
dec
push
cld
imul
mov
cmovb
loope
add
xlat
bound
cmp
push
lods
pop
int
fildl
out
cmc
or
push
sub
cmp
mov
adc
stos
shll
add
lahf
jg
push
popa
push
cmp
movsl
push
cmp
out
ds
int
sbb
iret
xlat
xchg
push
sub
loopne
mov
jp
adc
mov
pop
xchg
stos
cmc
out
movsb
mov
and
pop
push
imul
mov
int
xor
sub
lods
and
cwtl
out
jbe
cmpsl
out
lcall
mov
insb
mov
sti
in
fs
inc
imul
cli
pop
jmp
adc
push
jmp
and
pop
cmp
cmc
mov
pushf
jmp
add
in
add
lahf
rcrb
stc
cmp
mov
push
arpl
cmc
mov
mov
shll
pop
sub
imul
jge
sbb
lahf
fdivs
mov
aaa
pop
push
cs
adc
lret
ret
test
arpl
in
clc
adc
ss
outsb
cwtl
ror
dec
cmpsl
pop
and
adc
cs
ds
mov
mov
jmp
int
mov
pop
clc
fstpl
fs
scas
sbb
cwtl
inc
inc
dec
cmp
cs
or
xor
add
mov
mov
jbe
idivb
shrl
mov
inc
mov
cmpsl
dec
les
pause
adc
dec
int3
nop
adc
movsb
imul
cmp
xchg
andb
repz
jecxz
sbb
fwait
in
jb
ljmp
dec
jnp
and
scas
sbb
rcrl
aas
xor
push
push
cs
mov
sbb
sub
addr16
repnz
push
stos
sub
xor
dec
jg
das
scas
int
adc
adc
fidivrl
outsl
aad
in
in
or
sub
xchg
sbb
sub
call
xadd
push
scas
imul
adc
cmp
je
cltd
stos
xchg
mov
hlt
xchg
jo
jne
es
push
mov
das
push
jns
pop
or
mov
nop
add
push
sbb
in
repz
dec
imul
jp
icebp
inc
mov
sbb
pop
lods
jp
pop
mov
lea
pop
out
jecxz
dec
sub
neg
mov
sub
cld
push
mov
or
lea
ja
push
loop
xor
call
in
mov
xchg
xchg
or
mov
cmpsl
dec
push
rcll
xchg
jl
mov
lds
mov
mov
lods
jg
sbb
pop
pop
out
mov
aad
jge
or
jecxz
and
js
xor
lret
or
loope
data16
fwait
jne
shll
sub
cmc
fisttps
push
xor
lret
adcb
imul
xchg
sub
inc
push
dec
ds
lret
call
add
repz
ret
ljmp
cmp
adc
iret
jbe
pop
mov
push
add
inc
pop
xchg
xchg
fiaddl
icebp
adc
jae
fcompl
push
xor
mov
call
jne
mov
bound
jge
orl
add
add
leave
sti
adc
xlat
or
push
lret
iret
xor
xor
mov
pop
adc
inc
push
cmpsl
mov
lea
pop
sub
lahf
imul
mov
push
mov
mov
xchg
loope
mov
imul
mov
ds
in
xor
out
jb
jae
xchg
ljmp
push
dec
dec
push
out
shrl
inc
test
repz
inc
loop
ljmp
mov
in
in
inc
mov
movsb
sbb
inc
gs
xor
scas
es
or
out
aas
outsb
stos
popf
push
movsb
mov
sahf
and
add
dec
aas
cmc
adc
pop
fisubrl
xchg
dec
xchg
and
lods
dec
mov
cmp
idivl
shlb
jmp
cmc
cmp
lods
xor
pop
sub
sti
mov
dec
pop
lcall
or
cltd
sub
adc
adc
lret
add
push
pusha
or
xorl
enter
jae
popf
fidivrs
adc
cmpb
daa
push
adc
adc
sub
xchg
adc
subb
mov
cmc
mov
push
and
fistps
dec
push
xchg
jecxz
mov
imul
mov
rorb
in
lahf
stos
mov
dec
cmp
inc
pop
add
xchg
test
cld
xchg
mov
lods
mov
mov
dec
and
out
sbb
in
pop
mov
repz
mov
iret
add
outsl
testb
int
repz
mov
cmc
inc
outsl
cmc
mov
push
js
and
push
movsl
scas
mov
fimuls
rcr
jo
xchg
aad
xor
jno,pn
test
push
or
aad
pop
dec
daa
xor
sbb
aad
push
or
mov
flds
dec
lahf
aad
pop
movsl
push
and
push
enter
lea
xchg
fcomi
jo
push
jne
dec
ja
fdiv
inc
in
repz
out
inc
out
dec
pop
in
inc
insl
pop
test
out
or
xchg
or
pusha
sbb
sub
repz
push
inc
xor
out
sbb
sbb
jl
adc
mov
clc
pop
test
ja
outsl
mov
push
arpl
inc
mov
arpl
divl
jns
add
mov
int
ljmp
inc
arpl
and
hlt
push
or
popf
inc
cwtl
mov
repnz
mov
xor
rolb
mov
cs
daa
fidivrl
xchg
in
icebp
inc
mov
fidivs
lods
mov
push
jo
shr
lds
fimull
in
ret
fidivs
inc
shl
imul
ss
pop
jmp
clc
rcrb
inc
in
xor
shrl
ljmp
xchg
adc
mov
into
test
sub
adc
sub
shlb
mov
cmpsb
mov
jne
cmpsb
jp
out
jnp
nop
gs
add
pop
jmp
icebp
lea
sbb
xchg
cmp
stos
inc
mov
jp
repnz
fiaddl
jge
jo
mov
jb
out
notb
nop
inc
mov
lods
sub
icebp
jo
pop
jno
in
scas
sub
imul
aad
dec
ficoml
fnstcw
mov
jb
loopne
xchg
and
scas
sub
fcompl
jne
and
outsl
out
or
outsl
push
xchg
sbb
cmp
popf
addr16
gs
in
in
cld
int
xchg
jp
and
jbe
in
add
mov
orb
insb
add
mov
lods
popf
out
test
je
inc
inc
push
inc
jbe
shl
in
fdivp
xchg
adc
jl
or
repz
in
scas
gs
cmc
inc
fidivl
sub
add
inc
imul
sbb
cmpsb
dec
pop
jle
lret
repnz
in
adc
dec
xlat
jo
dec
test
shrb
test
in
sub
pusha
dec
xor
pop
or
popa
dec
jnp
ss
bound
and
sub
pushf
int3
xchg
mov
nop
lretw
xchg
outsl
cmp
sub
mov
gs
pop
adc
push
addr16
xchg
mov
dec
dec
sbb
push
or
jecxz
cmpsb
ljmp
roll
ljmp
movsl
inc
sahf
je
mov
push
cmpsl
mov
insl
mov
push
xchg
cmpsl
mov
fldcw
call
or
sub
cmc
gs
lret
pop
fwait
xlat
ja
stc
hlt
pop
testb
and
je
fnstenv
push
pop
addr16
jae
mov
out
outsb
push
push
sub
sti
in
ljmp
aaa
pop
mov
dec
jns
bound
push
int
adc
fwait
ret
inc
sub
push
adc
pushf
xchg
mov
lcall
inc
repnz
mov
push
sub
and
or
repz
mov
mov
inc
xlat
aad
ss
sbb
repnz
sub
cmpsl
add
jne
fcmovu
nop
or
push
and
cli
xor
not
das
fsub
mov
aaa
jb
xchg
mov
push
into
push
inc
shlb
ror
ss
xchg
mov
xor
pop
sbb
dec
pop
shll
getsec
jne
outsl
xlat
adc
mov
dec
pop
xchg
lds
cmc
cmc
pop
iret
cwtl
call
xor
out
dec
jecxz
scas
push
xchg
or
mov
xor
dec
cli
xchg
lea
arpl
imul
xchg
mov
mov
fdiv
rorb
loope
aas
pop
cmc
hlt
fwait
js
sub
dec
movsl
ret
imul
jno
rcrb
mov
fs
cmc
adc
sub
push
cltd
sbb
icebp
ret
dec
repz
jmp
pop
es
xlat
mov
fnstenv
jbe
shll
jbe
xor
decl
movsl
pop
ficompl
xchg
fistl
fs
loope
pop
jne
xchg
inc
push
cmp
and
outsl
xchg
lock
inc
xor
fmuls
fldenv
dec
lods
imul
xchg
jb
inc
in
mov
outsb
fs
xor
cmp
cwtl
fsubl
mov
loope
fs
lock
dec
lret
push
adc
add
fildll
cmpsb
jb
inc
inc
aaa
xor
in
icebp
push
fisubl
jo
orb
xchg
mov
mov
daa
jle
notb
jecxz
mov
inc
xchg
xchg
mov
pop
decl
and
out
or
inc
inc
dec
fs
ja
fidivl
mov
test
and
mov
cmpsl
pop
ret
sub
in
mov
cmpsb
cmc
push
movsl
xchg
mov
mov
mov
imul
push
or
sahf
sbb
mov
ficomps
adc
mov
jmp
aam
in
ljmp
pop
adc
mov
mov
nop
add
in
nop
push
push
into
jnp
push
in
push
sub
add
inc
xchg
stos
mov
out
push
pop
adc
sbb
and
lret
dec
icebp
mov
sub
pop
insb
mov
ljmp
jae
mov
push
out
pusha
cli
scas
xor
daa
add
ret
and
sub
into
xchg
addb
adcl
aad
sub
loopne
adc
in
mov
dec
pusha
mov
jnp
xchg
stos
int
das
dec
data16
enter
cmp
test
mov
in
in
or
ja
ljmp
mov
aad
cmpsl
adc
sbb
mov
jno
ja
push
subl
popa
mov
addr16
cmp
into
cmp
dec
cwtl
pop
lods
dec
add
xchg
and
aad
and
outsl
outsl
and
lcall
xchg
ficoms
pop
lods
inc
inc
xchg
pusha
mov
inc
fiaddl
push
jns
popf
jb
inc
mov
cmc
sub
mov
and
push
adc
jo
das
cwtl
out
lods
sti
in
scas
sub
enter
mov
dec
jg
lcall
popa
jecxz
push
mov
imul
bound
push
das
sbb
sub
sbb
leave
scas
ret
mov
and
fstps
sub
mov
sbb
push
mov
imul
dec
jmp
in
add
inc
sub
jb
out
pusha
push
adc
insb
scas
repnz
repz
pop
faddl
jecxz
sub
push
lret
cmp
leave
ja
mov
test
lods
cmpsb
scas
xlat
mov
cmp
js
pop
cmpb
cmp
and
mov
out
push
movb
adc
aad
imul
scas
mov
mov
cs
push
std
add
fnstenv
jl
adc
lds
or
leave
jge
push
shrl
fidivl
adc
lods
sub
icebp
iret
in
fisubrs
mov
repnz
mov
dec
ljmp
aas
or
fisttpl
jp
cli
scas
mov
imul
mov
nop
mov
insl
xchg
inc
pusha
and
pop
roll
aaa
inc
pop
cmc
xchg
std
pop
fiaddl
ja
movsl
xlat
adc
cmp
loopne
mov
repnz
movl
ljmp
ret
ret
jae
rcll
inc
aaa
iret
sub
movsl
sub
je
out
outsb
mov
add
pop
adc
xchg
ja
mov
lret
push
leave
out
xchg
mov
stos
mov
pop
outsl
xor
aaa
mov
xor
and
inc
pop
inc
out
lret
sbb
or
les
add
sahf
ja
mov
loopne
jne
in
pop
shrb
jae
xchg
insl
aad
mov
fisubrs
jp
je
adc
int
repz
xchg
les
and
xchg
inc
pop
inc
arpl
movsb
dec
fimull
mov
in
pushl
adc
cli
xchg
iret
shlb
push
mov
pop
push
xchg
mov
mov
fldl
loopne
in
sbb
or
jmp
adc
add
fnstsw
out
cmovg
pop
loope
inc
shlb
add
mov
scas
fdivrs
push
out
sbb
outsl
cmp
mov
clc
sbb
lods
xchg
mov
xchg
pop
in
arpl
push
adc
dec
ret
fs
mov
fbstp
cli
repnz
outsl
xchg
lods
in
push
into
cs
cwtl
mov
or
outsl
and
and
lret
sub
lods
inc
pop
call
bound
in
nop
mov
repnz
mov
sahf
rorl
pop
std
sub
jbe
je
scas
adc
xor
mov
repz
shlb
dec
mov
inc
popa
push
loopne
jmp
sub
adc
es
and
shll
pop
dec
and
sbb
mov
and
cld
push
cwtl
ds
pop
xchg
fimull
filds
add
ret
sbbb
out
clc
rcll
push
xor
sbb
lods
and
push
push
fisttpll
loopne
mov
jne
inc
inc
scas
mov
ret
outsl
or
insl
sbb
jmp
add
out
xchg
xor
push
hlt
dec
aaa
add
mov
adc
cltd
dec
mov
stos
imul
jno
ficoml
push
int3
xor
push
icebp
inc
int
aaa
mov
xchg
adc
in
xchg
dec
imul
das
jno
xchg
dec
rorb
cltd
mov
ja
pop
ss
adc
sub
in
in
xor
fimull
or
mov
and
ljmp
push
push
mov
addr16
sub
cmc
jp
repz
sub
shll
stos
lea
jo
ficomps
push
mov
and
std
pop
adc
addl
jnp
js
xlat
dec
mov
loopne
add
fidivrs
xchg
test
mov
ljmp
pop
xorl
roll
pop
fnstsw
inc
cld
mov
mov
sub
movsl
out
cmpl
ljmp
inc
mov
push
pop
jp
mov
jne
jmp
sub
mov
push
sub
out
aas
ja
ja
lahf
xor
stos
lods
icebp
adc
sub
jp
lahf
pop
xchg
dec
dec
jae
ljmp
jecxz
inc
mov
andl
and
std
adc
dec
mov
push
mov
add
ss
inc
mov
dec
leave
inc
int3
mov
pop
pop
ss
pop
adc
scas
push
shll
dec
sub
xchg
jge
pop
adc
cmc
mov
cwtl
push
stos
lods
dec
mov
aaa
pop
dec
inc
dec
inc
shrl
xchg
xchg
lods
jp
ds
lret
nop
xchg
out
ss
shlb
jb
inc
jge
loop
gs
pop
mov
mov
outsl
sub
aaa
or
in
push
arpl
jg
imul
mov
add
jb
repz
xchg
jns
xor
in
mov
pop
adc
out
or
das
push
cmc
cld
mov
sbb
ljmp
ficoms
rolb
les
sub
adc
sub
mov
mov
inc
orl
cmp
ret
incl
fcoml
inc
fstpl
adc
sbb
stos
push
xchg
scas
nop
jle
ja
fucom
push
repnz
ss
fmul
mov
mov
ret
sarl
sbbl
mov
std
aad
rolb
dec
das
test
insl
cmc
loope
push
sub
rcr
mov
outsl
jecxz
xchg
add
inc
rcrb
repz
sbb
imul
jnp
daa
outsb
arpl
jae
push
inc
sub
inc
and
popf
pop
xorb
ja
push
inc
test
rclb
sbb
push
sub
movsb
push
mov
push
imul
cmp
jge
xchg
rorl
sub
lock
and
xor
lret
fstl
cli
xchg
jge
mov
xor
add
adc
movsb
cmc
xlat
xor
sub
mov
xor
jmp
xchg
cld
push
stos
es
in
dec
push
push
mov
leave
and
testl
incl
push
pop
add
xor
cmp
daa
xor
out
mov
mov
ds
in
jnp
fiaddl
outsw
cmc
xlat
add
addl
cmp
cmpsl
jae
lock
dec
cmc
sub
xchg
outsb
lods
push
push
scas
test
push
leave
stc
dec
xchg
lret
cs
int
andb
xchg
popf
scas
cmp
stos
repz
insb
mov
fwait
push
xchg
insb
repnz
fisttpl
jecxz
jne
rcrb
fstl
stc
lods
cs
in
cs
mov
inc
imull
sub
rcrl
adc
mov
rcrl
fldpi
cmc
inc
arpl
sbb
repnz
pop
lds
fbld
cmpsb
xchg
mov
sub
popa
add
fiaddl
gs
cmp
xchg
xor
gs
ss
xchg
pop
adc
xor
sub
xchg
das
adc
adc
jecxz
call
inc
pop
clc
dec
xchg
fcmovnu
movsb
iret
mov
push
inc
inc
test
arpl
inc
ljmp
arpl
daa
arpl
shrl
xchg
ja
roll
lret
sbb
int
fmul
mov
cmp
cmc
aaa
cmp
sbb
jae
scas
cwtl
repz
xchg
repnz
je
pop
arpl
out
mov
aaa
imul
cmp
rcr
jbe
ret
add
outsb
xchg
popa
xor
sub
into
mov
xlat
cmpsb
into
imul
in
push
jno
lea
ret
rolb
pusha
cs
addr16
jmp
push
adc
cmpl
mov
xor
loop
cmp
orl
dec
imul
loope
pop
push
in
jno
bound
add
getsec
loopne
pop
addr16
pop
xlat
loop
fdivs
fs
xlat
jae
pop
inc
cltd
adc
sbb
xor
mov
mov
ret
in
lds
mov
ret
and
jno,pt
sahf
fs
scas
adc
js
clc
jle
sbb
jns
mov
cmpsl
xchg
adc
mov
xchg
jg
mov
vshufps
pop
or
push
into
add
push
mov
sbb
cmc
sbb
and
sub
mov
inc
xchg
lods
lock
pop
push
out
pop
xchg
mov
neg
or
shrl
inc
inc
push
pop
imul
iret
push
lods
pusha
jle
in
int
icebp
pop
cli
jmp
out
pusha
mov
cli
aam
lret
pop
sub
add
scas
ficoml
cs
fldcw
repz
aaa
dec
pop
aaa
out
pop
fadd
pop
test
inc
push
call
repz
pop
mov
sub
add
arpl
sub
jecxz
inc
pop
xor
into
insl
outsl
cmc
subl
pop
add
push
adc
loop
push
cltd
xchg
pop
adc
sbb
mov
inc
cmp
and
sub
fisubrs
sbb
dec
cmc
pop
addr16
dec
imul
fsubrl
push
stos
sub
test
jb
ja
sub
frstor
dec
imul
push
push
xor
fdivs
mov
mov
aad
lods
aaa
in
fs
daa
scas
arpl
inc
pop
jbe
dec
and
jp
sbb
xchg
repnz
in
mov
test
movsb
cld
cwtl
inc
sub
xchg
lods
outsb
stc
imulb
icebp
mov
lds
push
sub
stos
mov
icebp
ficompl
mov
xchg
aas
inc
xorl
fldenv
pop
out
push
out
into
outsb
xchg
fstl
xchg
xchg
repnz
push
xchg
sarl
test
lock
fldl
int
mov
xor
add
push
xchg
mov
and
mov
mov
aam
hlt
adc
jg
add
pop
popf
pop
icebp
inc
sub
pop
jmp
iret
in
mov
scas
cmp
int
icebp
stc
in
jg
test
xchg
xchg
push
push
cmp
adc
pop
scas
mulb
ja
ficoml
repnz
mov
fisubrs
paddsw
imul
dec
ret
ret
pop
stos
insb
mov
movsb
shlb
std
or
mov
pop
fcmove
fdivrp
jne
sbb
ja
sbb
sub
adc
xchg
dec
mov
scas
or
repnz
repz
call
jecxz
std
or
repz
push
imul
data16
xlat
pop
into
loope
xlat
dec
stos
jbe
insl
call
xor
xchg
jno
lcall
aas
subl
out
jge
or
popf
and
ljmp
out
mov
das
cmpsl
out
push
incl
icebp
outsb
enter
into
scas
inc
cmpsl
xor
and
scas
das
enter
negb
in
push
cmc
xchg
adc
or
mov
add
lods
shll
mov
sbb
lock
push
loop
mov
push
add
sbb
in
push
inc
or
loopne
push
popf
inc
out
lods
sub
stos
jno
mov
shll
or
nop
jno
stc
mov
js
outsl
mov
mov
aam
je
in
xor
cld
push
ljmp
ja
mov
in
push
jp
sub
cmp
into
mov
xchg
das
je
jmp
mov
cwtl
inc
lea
and
ret
out
xor
sub
push
pop
hlt
loopne
mov
ficompl
call
mov
pop
push
fistpl
mov
repz
xorl
lock
ss
imul
in
mov
xchg
inc
pusha
ffree
fcomip
or
jecxz
stos
stos
dec
or
xlat
das
mov
dec
out
inc
jecxz
repnz
sar
out
or
jecxz
mov
nop
pushf
sarb
and
call
and
loop
leave
cmpsb
mov
and
lock
iret
in
xlat
dec
inc
sub
js
jno
fdivrl
push
negb
pop
loopne
push
repz
jmp
inc
jp
cmp
pavgb
loop
loop
outsl
xlat
dec
out
js,pn
push
jae
ret
loopne,pt
pop
mov
cli
sub
xor
push
hlt
mov
int3
cld
in
int
mov
add
out
or
ljmp
and
push
mulb
imul
push
xchg
hlt
or
jecxz
lcall
sub
dec
outsb
in
mov
pop
mov
lock
ficomps
insl
inc
sub
jl
in
cli
aas
lea
dec
add
push
dec
mov
lea
and
mov
out
inc
jb
js
xor
dec
and
lods
test
fwait
stos
test
push
cs
pop
in
xor
jae
sarl
or
shlb
mulb
test
repz
fisttps
int
insb
out
test
mov
xchg
aad
mov
out
in
pushl
imul
cmc
mov
inc
out
test
imul
jno
loopne
out
push
aas
out
stc
sub
stos
scas
shll
lds
stos
mov
or
jne
lods
cs
test
adc
lcall
jmp
lds
cld
and
ja
jg
cwtl
data16
fwait
loope
mov
cmpsl
test
in
stc
add
les
fsubl
inc
lods
in
add
xchg
imul
lock
pop
loope
xchg
xchg
xchg
daa
push
lea
lods
pop
jp
out
jbe
xchg
add
aad
popf
mov
cmp
lods
out
in
int
outsl
ficoml
cmp
in
mov
push
cmp
xor
xchg
in
jo
xchg
sub
aad
cs
jp
fwait
clc
int3
cmc
mov
jmp
pop
ffree
xchg
push
push
daa
xchg
outsl
ss
xchg
inc
iret
int
out
xor
xor
xchg
pmaddwd
inc
inc
icebp
int
sbb
mov
mov
add
fstl
add
int
mov
lret
rorl
cmc
notb
or
clc
mov
ss
mov
mov
or
imul
in
xchg
clc
and
adc
pop
xor
stc
mov
rcl
push
mov
mov
out
jbe
jmp
out
sub
inc
push
and
fsts
arpl
in
ret
lock
movsb
dec
gs
add
push
dec
insl
dec
flds
mov
mov
js
mov
out
sub
int
into
pop
jmp
fs
hlt
dec
xchg
xchg
inc
mov
lahf
or
ss
lret
cmp
addr16
in
out
ss
in
adc
sub
in
lcall
iret
sbb
xchg
fstl
inc
adc
notb
pop
fsts
roll
fldl
add
cwtl
movsl
fmuls
xchg
pop
call
loope
sbb
jmp
cld
push
fs
out
xchg
mov
xchg
rcll
repz
nop
mov
mov
jp
xchg
mov
lret
addr16
lret
je
and
divb
mov
mov
cmc
sbb
mov
push
add
push
mov
jne
jne
xchg
jmp
outsb
push
cmp
dec
fdiv
and
shl
dec
mov
and
and
mov
mov
lds
or
mov
fidivl
jecxz
gs
icebp
xchg
jne
mov
jbe
test
sub
jg
imul
repz
dec
mov
dec
pop
in
lret
push
icebp
loopne
scas
rcrb
arpl
cmpsb
add
ljmp
cmc
lret
fdivrs
pop
in
inc
jmp
sbb
xor
mov
cltd
pop
cwtl
rcll
push
inc
ja
and
push
in
mov
adc
frstor
inc
hlt
fwait
insb
mov
pop
cmpsb
or
mul
push
pop
data16
fbld
mov
mov
popf
inc
and
cmc
cmp
fistpl
das
inc
push
das
jle
inc
push
sahf
mov
lcall
sti
bound
out
xor
fcomps
xchg
dec
out
divb
aad
xor
adc
out
mul
or
loopne
fldl
push
pop
in
mov
sub
ret
sub
out
scas
jmp
adc
mov
xor
sub
int
scas
pushf
dec
iret
pushf
mov
mov
xchg
dec
mov
scas
adc
enter
fisttps
mov
xchg
cmp
stc
xor
xor
test
sub
jp
sub
fprem1
out
xchg
xchg
fsubs
and
int
stos
cmp
fldcw
nop
push
pop
stos
gs
pop
pop
pop
arpl
mov
mov
data16
xchg
sbb
jne
shrl
jbe
int
stc
pop
or
sbb
xor
or
int
xchg
cwtl
jle
mov
sub
loop
mov
xchg
push
and
rorl
adc
repz
mov
inc
rorb
or
fldt
fidivrs
jne
fnstenv
pop
outsl
ss
scas
clc
shll
ret
mov
inc
lock
shl
mov
mov
int
mov
cwtl
jnp
or
stc
scas
test
sarl
push
cmpsb
hlt
or
inc
out
fistps
gs
cmp
pop
in
movsl
imul
cmpsb
into
testb
jns
adc
inc
pop
mov
lods
mov
loop
adc
mov
stos
fs
xchg
mov
je
fsubl
jg
je
cmpsl
dec
enter
jo
pop
inc
repz
popa
add
rorb
aad
loop
insb
xchg
aam
ret
scas
lods
mov
lahf
push
es
mov
xchg
jae
sbb
mov
pop
pusha
mov
mov
fnstenv
sarl
ret
bound
fidivl
xor
imul
div
mov
pop
pop
into
and
popa
pop
shrb
jne
rcr
xchg
iret
int
lret
xor
ljmp
sbb
pop
repz
sub
mov
das
pop
int
vcvtdq2pd
daa
imul
pop
nop
push
cwtl
adc
sub
add
mov
cwtl
ja
test
lcall
imul
xchg
outsl
jg
adc
jg
cwtl
adc
xchg
ljmp
push
jne
jnp
in
and
fcoms
jp
mov
es
nop
fdivs
push
push
jno
pusha
subb
imul
push
pop
out
nop
notb
data16
es
sbb
push
inc
mov
pop
out
shll
bound
es
es
cli
mov
je
push
mov
and
imul
dec
les
outsb
out
into
in
scas
shll
cmp
fldl
adc
in
js
inc
mov
sub
pop
pushf
xchg
loope
hlt
add
inc
loope
dec
popa
jle
pop
jbe
pushw
cmp
add
cmp
out
lahf
das
cmpsb
dec
pusha
imul
sub
mov
fiaddl
dec
outsl
pusha
movsl
out
jmp
pop
imul
jns
pop
jle
pop
mov
int3
mov
outsb
mov
dec
movsl
pop
mov
xor
gs
in
cmc
fs
addr16
imul
test
rorb
mov
sarl
jge
ss
div
das
fstl
jp
das
mov
sbb
adc
xchg
or
inc
dec
cmc
inc
or
addr16
jno
fsubp
cmc
loope
add
push
push
pop
movsl
and
clc
or
loope
out
stos
mov
adc
ret
jo
scas
out
imul
stc
outsl
aam
jne
adc
cwtl
or
sub
sub
push
xor
jo
popa
pop
loop
jmp
or
negb
outsb
imul
or
cmpl
rorb
repz
xchg
pop
pop
stos
repnz
into
div
jne
or
or
es
rcr
mov
push
xchg
rclb
fbstp
or
nop
fxam
movsl
sub
dec
roll
outsb
push
cltd
or
fwait
mov
icebp
addr16
jmp
cmp
shl
mulb
xchg
scas
fisubs
cmpsb
pop
lock
dec
push
bound
out
cmp
xchg
call
ret
sarb
push
add
jae
sbbb
sbb
and
out
shll
mov
pop
addr16
inc
insl
jecxz
cwtl
call
xchg
jb
es
testb
lods
jbe
mov
popf
je
push
push
bound
xor
add
andb
fs
dec
pop
sbb
mulb
mov
jbe
pop
push
in
adc
lcall
aam
push
dec
cmpsl
inc
lret
jecxz
xchg
out
aam
ja
hlt
mov
push
or
subb
xchg
lea
out
adc
stos
aas
out
rol
xchg
sub
add
mov
and
jbe
ljmp
outsb
sub
cmp
lcall
sbb
mov
cmp
cmp
fimull
inc
jae
mov
mov
sub
shlb
hlt
int3
push
in
out
mov
fidivrl
jmp
mov
ficomps
fmull
pop
and
mov
dec
out
dec
das
xchg
dec
xor
fimuls
inc
xor
fiadds
push
xchg
xchg
icebp
mov
push
test
popa
pop
movnti
inc
cmc
popf
and
xor
xlat
mov
ss
sbb
iret
shr
arpl
addr16
push
and
inc
xchg
xor
lea
mov
jmp
test
popf
negb
push
xchg
cmp
scas
in
es
jmp
push
inc
lret
dec
test
xchg
push
adc
movsl
xchg
popa
xchg
call
movsl
lcall
aaa
jle
imul
or
mov
cli
push
test
mov
xchg
int
imul
mov
dec
xchg
movsl
sub
inc
jno
aaa
in
repz
iret
push
imul
aad
mov
push
sar
sbb
mov
fnop
inc
icebp
adc
mov
dec
loope
aaa
icebp
jns
xor
xor
das
mov
insb
sub
stc
mov
sti
xchg
ffreep
cli
push
aam
xor
pushl
lock
out
aaa
inc
in
xchg
ret
out
mov
mov
popf
pop
fcoms
sub
lods
xor
or
lods
idivb
outsb
arpl
outsb
mov
nop
fdivrl
push
iret
movb
jns
in
dec
out
jg
jb
rol
push
repz
jmp
cmp
movsb
stos
sbb
inc
mov
jmp
xor
xor
dec
cmp
dec
js
inc
sbb
mov
test
hlt
fisttpll
mov
mov
fs
pop
stos
add
stos
inc
imul
lock
sub
lret
jecxz
dec
int
push
mov
sub
ficompl
sub
mov
das
lcall
jbe,pn
adc
sub
int
mov
shlb
loop
pop
movb
insl
ret
push
adc
xor
jae
popf
stc
imull
out
int3
or
pusha
mov
mov
fistps
inc
or
mov
daa
push
sub
arpl
lahf
mov
push
sbb
adc
cmp
stos
or
pop
xchg
cmpsb
jae
gs
adc
jbe
jp
dec
ret
fmul
xchg
dec
imul
lret
lods
movsl
fbstp
jo
rorl
incl
js
push
push
jnp
sahf
cwtl
mov
pusha
sti
jb
sub
divb
push
dec
test
inc
cmpsl
mov
jb
int
loop
addr16
je,pn
push
and
fdiv
mov
testb
shlb
lahf
dec
jmp
cmc
addr16
push
xlat
xchg
jne
xchg
mov
xor
dec
data16
cmc
addr16
xor
out
mov
insb
cmp
add
push
jg
arpl
xchg
lret
lcall
cmp
aad
scas
mov
mov
test
scas
outsl
sarb
stos
ja
dec
adc
in
in
xor
jle
clc
rolb
dec
mov
outsl
pop
ljmp
scas
ds
jb
and
mov
shr
xchg
or
cmp
pop
push
pop
inc
push
mov
out
iret
xchg
dec
xlat
les
mov
jo
and
negl
mov
xor
mov
shl
mov
nop
enter
xchg
xchg
je
nop
insl
jne
std
cmpsb
gs
mov
mov
mov
ja
pop
xchg
dec
nop
mov
idivb
in
sub
xlat
dec
ja
fistpll
int3
je
push
out
dec
aaa
ret
pop
xchg
fistpll
ret
cltd
iret
test
in
fsubr
jle
push
lcall
xchg
imul
push
xor
push
sarl
push
dec
lock
push
cmpsb
sub
mov
ret
test
movsl
cmpl
jo
push
mov
fsts
cmc
push
iret
xchg
mov
aas
hlt
jae
out
imul
and
inc
mov
jb
xchg
sub
fsts
fidivrl
arpl
je
xchg
in
mov
ljmp
pop
inc
sub
jl
test
lods
shl
jne
test
out
mov
jbe
xchg
jne
sub
sbb
gs
or
sahf
mov
pop
addr16
std
lods
inc
stos
xchg
mov
push
xor
outsl
jge
pop
insl
push
out
adc
bound
xchg
xor
out
decl
pop
imul
outsb
jg
mov
mov
inc
mov
push
inc
jbe
test
rol
xchg
jae
xchg
scas
fwait
outsl
inc
or
aam
xor
adc
call
in
mov
out
sbb
and
inc
outsl
cs
fists
jbe
out
sub
inc
in
shlb
jns
rolb
pop
xor
mov
adc
or
lods
jne
cmc
cmp
mov
sub
es
nop
mov
das
leave
repz
xchg
scas
nop
xchg
mov
addr16
inc
out
repnz
dec
mov
mov
repnz
gs
arpl
ret
inc
xor
inc
shrb
pop
xchg
into
dec
cmpsl
and
dec
xchg
mov
jbe
and
mov
gs
cmpsl
sbb
xchg
out
pushf
repnz
dec
lods
fisttpll
or
mov
inc
or
popl
jmp
sbb
cmc
fstpl
push
jb
ljmp
movsb
sub
inc
icebp
xchg
mov
test
mov
movb
mov
lret
sub
movb
and
cmc
cmp
jb
outsb
enter
add
in
cmpb
mov
pop
aaa
cmc
inc
pop
out
shr
hlt
sub
mov
xchg
ljmp
jno
js
sub
mov
push
paddusb
push
int
movsl
pusha
cmc
jmp
pop
push
jno
jns
lret
inc
pop
jne
cmc
outsb
adcb
clc
pop
inc
stos
jns
aam
js
in
movsl
or
nop
adc
dec
and
push
cmpsb
movsl
rolb
mov
fistl
xchg
sub
pop
in
loopne
mov
sub
adc
xchg
adc
jge
jne
inc
jle
out
pop
nop
fstl
inc
lds
inc
pop
sub
fistps
push
nop
inc
xor
sti
das
das
mov
outsl
pusha
out
dec
and
add
int
out
hlt
roll
mov
adc
xor
arpl
out
repnz
xchg
xorl
mov
loop
mov
inc
push
mov
inc
xor
adc
pop
les
inc
andb
xchg
outsl
mov
clc
fcmovnbe
fisubl
add
fwait
ljmp
inc
mov
pusha
add
cmpsl
fwait
mov
mov
mull
aad
sub
push
rolb
aas
mov
push
cmpsb
sub
mov
loopew
cmpsb
inc
mov
stos
notb
aas
adc
test
into
out
jo
cmc
scas
les
xor
fidivs
push
repnz
lods
adc
test
aad
jle
push
dec
mov
inc
push
les
sub
dec
ret
pop
cmpsl
sub
cs
sub
insl
mov
push
bound
xchg
out
scas
xchg
in
fsubs
stos
std
push
mov
push
xchg
int
adc
rorb
insb
dec
xchg
push
movl
lds
mov
push
xor
push
inc
push
mov
or
lret
jmp
daa
hlt
stos
sbb
shll
cmc
aaa
mov
inc
jl
in
sahf
mov
out
movsl
mov
sti
jl
addr16
sar
cltd
mulb
pop
mov
js
mov
adc
adc
mov
adc
ficoml
pop
mov
aaa
push
daa
dec
dec
mov
and
in
popf
sub
in
leave
dec
and
mov
jge
rcll
cmp
nop
mov
pop
pop
aam
adc
cmp
iret
fst
add
dec
shrb
xor
leave
gs
sub
xchg
cld
iret
mov
sahf
test
adcb
out
pop
dec
je
es
mov
hlt
fidivs
xchg
movd
repz
jne
lea
mov
jb
mov
icebp
sbb
inc
cmp
add
popa
pushf
mov
into
stc
xchg
xchg
ret
dec
dec
call
imul
sarb
dec
arpl
es
rol
ljmp
lcall
aam
stos
shlb
test
cmp
stc
sbb
mov
fs
adc
repz
clc
cmpsl
sbb
pop
insl
es
rcr
sbb
inc
cmp
fldenv
inc
out
pop
loope
add
dec
adc
xchg
jne
sbb
push
jne
fiadds
jg
mov
fisubrl
and
shrl
mov
cs
mov
mov
push
jecxz
dec
push
adc
sub
xchg
sti
push
ret
imul
adc
xor
pop
fcoms
aas
stos
mov
adc
mov
jbe
or
sub
std
jno
sbb
cmp
daa
call
jns
stos
out
mov
insb
mov
in
sbb
mov
lods
shll
dec
xor
lock
dec
push
les
fwait
sbb
loopne
mov
call
subl
cmp
in
jmp
xchg
aam
fnstenv
push
lock
inc
scas
mov
jne
aas
data16
clc
filds
mov
bnd
and
dec
leave
into
cwtl
xchg
lods
mov
and
jno
xor
xchg
add
adc
rcrl
and
push
mov
hlt
mov
xchg
insb
mov
scas
sbb
mov
jp
xchg
jb
div
das
imul
pop
xlat
mov
or
lods
push
adc
dec
std
sbb
mov
jbe
aaa
fcmovbe
mov
jp
jb
push
jae
dec
xor
fistl
xor
lods
fiaddl
stc
cltd
repnz
popf
xchg
fldcw
repnz
lods
mov
add
dec
fcomps
push
aad
xchg
insl
addl
mov
mulb
cwtl
pop
lret
push
push
dec
jp
in
adc
pop
or
cmpsl
add
sub
dec
mov
cmp
dec
bound
scas
jle
jmp
iret
scas
pusha
int3
aaa
jbe
into
dec
decb
fadds
xchg
or
out
dec
popf
sub
enter
insl
shrb
testl
jmp
jge
inc
iret
xor
xchg
lcall
dec
add
xor
pop
mov
outsl
scas
addr16
mov
cmc
mov
cwtl
cmc
or
jae
insb
imulb
inc
std
jmp
lea
movsb
outsb
mov
or
dec
mov
dec
mov
xchg
pop
cmp
stos
aam
sti
inc
add
xorb
sub
testb
push
adc
fnstenv
dec
cmp
push
mov
inc
int
sub
inc
js
lods
or
ljmp
outsl
outsb
fsubrp
or
inc
sub
popf
and
push
and
add
lock
nop
subb
jne
call
jg
in
mov
jmp
lahf
jp
je
ficoml
aad
into
or
xchg
jg
lea
insb
out
fistps
inc
pop
stc
or
nop
pop
shll
cmpsl
xor
fsubrl
sbb
in
push
jecxz
jecxz
test
xchg
inc
or
inc
je
inc
push
ljmp
xchg
jbe
psubusb
mov
ret
jns
mov
mov
ljmp
sahf
ja
das
xor
cmp
aaa
fsubs
adc
repnz
adc
les
rorb
sbb
pop
lahf
rcrb
inc
out
gs
cmc
popf
mov
fs
cmpsb
or
jns
fdiv
push
fstpl
dec
js
pop
dec
cmp
adc
xor
shr
int
out
push
xchg
repnz
in
mov
jecxz
imul
push
adc
sti
notb
rep
adc
int
lret
xchg
sub
mull
mov
imul
dec
or
inc
clc
iret
lret
mov
lods
mov
mov
repz
in
mov
scas
pmullw
mov
in
fimull
daa
insb
repnz
inc
mov
pop
mov
div
addr16
rorl
push
lds
push
test
mov
cmpsl
mov
or
es
movsl
int3
icebp
cmpsl
mov
jecxz
in
xor
scas
mov
insb
pop
jne
inc
rcr
add
cmpsl
sub
adc
push
push
push
jbe
sub
daa
lea
adc
cld
mov
out
push
jno
int
pop
xacquire
je
outsl
mov
addr16
cmc
sbb
movsb
sbb
cmc
shr
and
lret
aas
mov
inc
arpl
hlt
push
in
ret
gs
pop
push
in
imul
inc
or
in
xlat
inc
jae
int
mov
fcmovnu
stc
iret
js
xchg
insl
mov
int
mov
mov
mov
pop
cmpsb
jge
sti
call
inc
fbstp
cmpsb
js
xor
adc
ficomps
iret
mov
popf
int
mov
mov
iret
push
je
xchg
aaa
xchg
mov
movsl
div
mov
mov
addr16
jno
fldenv
test
mov
aad
xchg
imul
mov
sbb
test
jg
je
out
sbb
dec
pop
addr16
sbbb
inc
in
scas
mov
inc
scas
fdivp
xorb
idivl
fsubr
mov
mov
mov
fsts
adc
mov
jge
sarb
mov
and
scas
jbe
push
xor
outsl
inc
addr16
sbbb
test
push
sub
xor
movsb
push
cmp
cmp
push
cmpsb
inc
push
cmc
jmp
aad
mov
pop
std
fldcw
iret
sub
sets
popf
and
or
mov
stc
in
lods
dec
mov
push
stos
into
ljmp
call
aas
repz
adc
lcall
stos
fpatan
repnz
icebp
sbb
pop
js
pop
outsl
jmp
inc
scas
lock
notb
or
aad
add
jg
js
jbe
int
xchg
call
iret
test
mov
xor
xlat
in
xor
mov
hlt
adc
mov
out
jbe
xchg
aam
fidivrl
lea
cmc
pusha
push
es
hlt
mulb
adc
add
outsl
and
loop
jp
gs
scas
imul
mov
imul
idivb
push
std
mov
icebp
push
jno
inc
mov
scas
push
testl
mov
mov
test
icebp
jne
lock
mul
loop
inc
cmpsl
mov
lds
sub
ret
in
jae
daa
ret
je
xor
fstps
sbb
ljmp
cmp
jns
xchg
in
iret
mov
mov
and
pop
mov
mov
imul
jge
fists
pop
jno
repz
dec
mov
hlt
stos
enter
into
mov
cmpsb
xchg
stos
push
sbbb
daa
imul
pop
sbb
pushw
mov
and
scas
jbe
sbb
xor
pop
ret
cmp
jle
out
scas
popa
mov
mov
fcmove
and
outsl
adc
xlat
dec
fucompp
mov
xor
adc
loope
lods
sbb
xchg
adc
jp
jbe
out
hlt
addl
addr16
stos
out
lcall
dec
ficompl
cmp
je
mov
call
pop
and
add
cmp
idivl
inc
and
ljmp
fs
mov
pop
cmc
nop
clc
push
test
iret
mov
or
cmp
scas
out
mov
jb
pop
lcall
ja
lds
and
scas
mov
rep
jae
pop
adc
shrl
mov
jle
sbb
hlt
je
sub
repz
mov
mov
iret
or
mov
ja
js
jno
jecxz
fcmovb
in
pop
add
aas
adc
lcall
aam
cld
inc
cwtl
pop
jno
or
mov
in
jp
enter
nop
shrl
mov
mov
shrl
mov
adc
dec
and
dec
mov
sbb
xchg
adc
insb
jne
push
sub
push
fidivrl
cwtl
lret
pop
mov
jg
mov
shrb
mov
int
mov
xchg
add
mov
iret
mov
imul
outsl
in
xor
jno
cvtps2pi
ljmp
ret
mov
iret
sbb
push
sti
mov
and
add
pop
rcll
dec
push
lahf
frstor
cmc
ret
ja
xchg
xchg
out
or
mov
add
aam
test
add
jmp
adc
add
mov
cld
inc
mov
enter
in
add
push
cmc
in
mov
insl
je
movsl
add
cmpsb
negb
ja
xlat
imul
enter
ficoml
ficompl
out
ret
les
xchg
decl
add
iret
mov
adc
mull
out
jbe
dec
push
pop
rclb
add
js
xchg
mov
add
outsl
jb
pop
mov
out
ja
jg
mov
repz
dec
pop
imul
fcomi
xchg
mov
adc
fimull
int
xchg
in
lods
stos
dec
aaa
xor
in
sbb
adc
cmp
sub
mov
mov
fimull
jle
fs
orl
push
int3
pop
sub
pop
mov
gs
mov
cltd
push
mov
inc
iret
push
aam
and
dec
xor
cwtl
aaa
int3
pop
aaa
hlt
int3
sbb
rcll
sbb
jg
xor
fdivs
jmp
dec
jg
or
mov
ja
push
mov
fcomip
push
xor
jo
dec
int3
cmp
cmp
xchg
repnz
pushf
xor
icebp
iret
dec
mulb
mov
insl
inc
cmpsl
loope
jbe
aas
inc
xchg
push
popa
mov
outsl
dec
dec
rorb
aad
and
mov
aad
push
and
js
mov
loopne
leave
in
push
xchg
xchg
out
fbstp
cmc
aad
cmpsl
out
cmp
push
ss
iret
mov
xlat
test
push
pop
and
xor
ja
fldt
xchg
jp
cld
dec
in
pop
adc
jp
adc
mov
inc
ja
or
and
adc
add
es
cmp
or
lds
xacquire
sbb
ret
outsl
jge
mov
add
jmp
xchg
mov
dec
jp
xchg
clc
and
pop
push
jecxz
fstl
int3
ret
mov
cmc
push
mov
xchg
addr16
jne
dec
fs
int3
jmp
mov
cld
pop
in
negb
cmp
iret
lret
imul
push
jb
adc
push
mov
out
jne
push
dec
cwtl
xchg
dec
lea
push
mov
lods
idivb
loop
xchg
sbb
roll
mov
pop
ficomps
stc
or
jne
lcall
jmp
jae
cmpsl
mov
xchg
adc
mov
gs
lahf
into
je
sub
gs
pop
sbb
adc
hlt
push
call
add
imul
shll
cmc
ljmp
icebp
lods
xchg
mov
rol
notb
xor
ficoml
sbb
cwtl
fdiv
or
pop
shrb
dec
cs
cmpsl
sub
loope
stos
or
aaa
int3
and
insl
imul
mov
sti
ja
fadds
movl
cmc
popf
pop
dec
xor
mov
into
mov
push
inc
lcall
mov
jae
sarl
adc
inc
push
insl
repz
push
or
and
push
add
mov
pop
pop
xchg
flds
pop
and
inc
loope
int
clc
into
test
outsl
push
mov
repz
pusha
xchg
add
mov
mov
push
leave
test
and
jno
fimuls
add
push
dec
repz
mov
push
pop
xchg
movsl
addr16
push
or
fnstenv
push
sahf
add
testb
jae
inc
sarb
popa
fiaddl
push
inc
mov
shr
mov
push
js
mov
lret
xchg
ret
je
dec
fwait
pop
jbe
loopne
fldenv
je
xchg
aam
adc
sbb
repnz
mov
mov
xchg
out
imul
fidivl
leave
js
mov
cs
xor
mov
fsub
movsl
push
jle
stos
dec
sbb
pop
mov
push
int
fxtract
movsl
and
sbb
jge
orb
cmc
dec
scas
out
jb
xor
pop
jae
insl
push
adc
jae
rorb
aaa
lock
imul
sub
xlat
and
jp
jecxz
cs
mov
jnp
loopne
fs
imul
jg
insl
xchg
rorb
xor
fmuls
mov
cmpsl
xor
cmc
or
xchg
mov
pop
mov
in
orl
out
in
popa
adc
dec
mov
idivb
push
out
mov
lods
push
jecxz
mov
inc
mov
jp
ret
cmc
ja
ja
sar
push
das
push
pusha
mov
dec
das
roll
cs
test
ja
loop
scas
fldl
jle
stos
xor
inc
iret
sub
shl
in
pushf
xchg
cmpsl
fimuls
jbe
sub
loope
push
dec
xchg
int
ja
xor
orl
arpl
push
mov
fisubl
xor
int3
fldt
push
jp
loopne
inc
mov
add
or
mov
mov
sbb
add
xchg
mov
jecxz
mov
jne
je
cmc
pop
xchg
mov
in
mov
fildll
mov
add
pop
mov
xchg
xlat
test
jae
fildll
and
push
xchg
fisttpl
hlt
fdivp
inc
jne
mov
inc
cmc
adc
std
aad
mov
imul
aaa
out
pop
das
xlat
or
jl
mov
popa
pop
insl
decb
cmpsb
inc
into
jb
xor
xchg
and
xor
jo
push
pop
outsl
jnp
mov
pop
pop
jae
out
pop
lds
pusha
outsl
popa
xchg
outsl
es
es
aad
adc
fsts
fcoms
dec
inc
rorl
fmuls
jo
cmp
lock
insl
xlat
out
out
inc
shl
mov
fidivs
stos
push
xorl
imul
into
fidivs
push
cmp
pop
pop
out
fs
scas
clc
mov
movsb
fldenv
das
mov
push
loope
imul
int3
pop
xchg
rcll
mov
xor
dec
jecxz
jae
bound
sbb
push
loope
in
repnz
mov
sbb
pusha
stc
xorl
ljmp
jmp
ljmp
lds
and
dec
hlt
popf
jae
dec
mov
cmc
popf
jae
dec
mov
negb
fs
shll
push
popa
pop
mov
mov
lods
mul
and
data16
and
jne
and
and
mov
movsb
roll
outsl
int3
jo
mov
addr16
xchg
mov
into
icebp
lret
fmul
push
repz
out
mov
mov
fmull
sub
sub
mov
or
jg
nop
push
inc
ret
xor
mov
sbb
jge
stos
adc
xchg
adc
and
bnd
xchg
lods
push
xchg
jbe
mov
js
inc
lret
inc
mov
dec
nop
pop
jle
xchg
stos
popf
in
clc
mov
mov
fidivl
jbe
loopne
jp
push
add
ficoms
jg
jnp
fidivl
sub
and
nop
sbb
mov
xchg
jns
loop
pop
sti
fidivl
mov
sub
in
jp
jecxz
adc
push
ss
mov
mov
push
lock
push
and
and
cmpsb
xchg
add
fadds
mov
xchg
insl
mov
push
out
pop
mov
xchg
popa
aad
fisttpll
pop
push
imulb
andb
nop
in
std
fcoms
cmp
xchg
scas
shl
pushl
mov
hlt
popf
jnp
repnz
out
xchg
je
imulb
mov
shlb
fldt
jne
imul
cmp
popf
dec
jle
xor
repz
jp
sub
cmpb
mov
or
push
xor
fcomip
mov
mov
outsb
inc
mov
dec
call
pop
add
cmpsb
lahf
xor
mov
cmp
aaa
jbe
rclb
xchg
jae
push
outsb
adc
adc
push
jp
pop
jno
xor
jecxz
or
jne
scas
pop
into
cmp
mov
add
stos
and
mov
imulb
in
dec
or
xor
aad
cmp
push
cmpsl
cmp
repz
mov
out
jb
inc
mov
cwtl
push
je
mov
or
or
shrb
rorb
insl
mov
out
xchg
cmp
sbb
rclb
mov
lret
pop
lods
sub
mov
fnsave
adc
lahf
mov
out
cltd
xchg
mov
xor
outsl
test
dec
sbb
xchg
jbe
mov
xchg
pop
push
jg
mov
cmpl
negb
mov
into
push
xor
scas
sbb
mov
mov
fnsave
xchg
incl
std
stc
mov
int
outsb
jae
xchg
fsubrp
inc
clc
nop
fstl
fsts
push
mov
jae
push
inc
adc
das
ja
fidivrl
lret
popf
scas
popf
xor
loop
std
sub
lret
jmp
push
xchg
jg
xor
push
je
cmp
or
rcrb
adc
lret
cmpsb
outsl
add
adc
cwtl
aad
ss
push
mov
xchg
pop
pop
fwait
pop
sar
mov
jbe
xchg
mov
mov
sahf
jg
xchg
inc
notb
cmc
movsl
sahf
aas
outsl
aas
inc
aaa
push
jns
subl
and
repz
or
int3
inc
pop
xchg
and
movsl
jae
push
pop
xor
jmp
ja
pop
sub
fistl
in
aaa
jle
cmc
clc
mov
scas
xchg
ss
ljmp
dec
pop
enter
push
call
out
les
add
insb
leave
nop
call
hlt
lock
sahf
fcmovu
pop
add
in
out
mov
mov
mov
pop
mov
insl
test
sbb
popf
fdiv
mov
pop
sbb
mov
lahf
scas
pop
jbe
mov
int
scas
lea
cltd
leave
xlat
inc
jmp
insl
rcll
emms
aad
push
insl
xor
dec
bswap
xlat
fs
and
sub
imul
stos
cwtl
sbb
das
das
mov
dec
aaa
inc
mov
ljmp
xor
add
xchg
mov
push
fisubl
shlb
jbe
cmp
mov
int3
push
inc
lcall
mov
sub
mov
sub
cmc
inc
loop
lods
xchg
xor
push
and
push
add
push
arpl
mov
ret
shrb
shlb
aad
daa
and
imulb
popa
rcr
dec
ja
in
mul
daa
dec
mul
daa
pop
daa
outsl
sub
push
imul
insb
mov
jae
out
outsl
inc
push
in
in
addr16
popa
out
fiadds
in
jb
inc
out
pop
sbb
jb
out
aam
lods
test
cmc
jb
lcall
fcmovnb
addr16
fnstenv
not
cmc
mov
xchg
dec
in
bound
jo
outsl
outsl
insl
ljmp
push
sub
int3
and
xchg
fldt
cmpb
pop
sub
inc
xor
adc
pop
mov
xlat
imul
aaa
pop
pop
fcmovnu
popa
xchg
xchg
mov
mov
scas
xchg
decl
jmp
icebp
lea
in
push
push
outsl
clc
lahf
out
imul
xlat
mov
fdivrp
addr16
xchg
dec
jp
fsub
cmpb
cmc
or
lcall
aas
sub
clc
jae
jle
xchg
fdivr
pop
pop
jg
ja
mov
dec
je
iret
pop
imul
sbb
out
pop
push
fstps
idivl
lods
xor
call
adc
pop
fdivr
fs
push
jae
out
aaa
daa
pop
jp
insb
popaw
jp
shll
test
mov
push
pop
cs
add
adc
dec
or
das
sub
fcomip
pop
push
mov
pop
out
imulb
sbb
sub
repz
nop
xor
insb
test
ficompl
xchg
pop
sub
jp
mov
hlt
data16
mov
add
das
push
stos
int
scas
popa
or
test
pop
stc
loop
arpl
mov
cmp
mov
out
int3
pop
ja
shlb
push
adc
out
fadds
cmpsb
iret
mov
aaa
sahf
jp
adc
out
ja
inc
cmp
push
iret
shr
push
lods
mov
nop
jns
in
or
mov
add
daa
rcrb
jne
hlt
lods
shll
mov
and
push
cmp
push
rcr
mov
push
ja
fisubrl
lea
sub
nop
imul
test
lahf
xchg
mov
lock
ja
xchg
mov
mov
sbb
adc
scas
dec
fdivl
push
pop
hlt
iretw
mov
sbb
sbb
inc
mov
fidivl
negb
lds
fldpi
pop
lret
pop
push
js
test
sbb
dec
xor
inc
aaa
sub
jecxz
sub
jbe
mov
jbe
in
xchg
out
lods
mov
xchg
pop
in
jne
push
ret
push
fdivrp
int3
adc
xor
sbb
int3
std
icebp
cs
and
out
out
xchg
out
push
fisubrl
xor
lret
sub
and
mov
mov
sbb
push
jmp
adcb
push
cmp
call
mov
mov
dec
jae
scas
iret
fcmovb
sbb
pop
xchg
rorb
mov
cmp
add
or
leave
fcomps
jp
xchg
dec
push
sub
aaa
pop
mov
jne
jno
shr
ja
push
nop
pop
fisubrs
lods
repz
pop
arpl
mov
mov
jae
jne
das
out
icebp
inc
fs
nop
or
or
jns
pop
daa
cltd
dec
in
adc
ficomps
push
xchg
lcall
std
adc
cmpsb
push
push
fisubl
leave
notb
ss
adc
cltd
dec
das
nop
rorb
movsl
xor
mov
repnz
int
cmc
cmpsb
inc
fcmove
into
lods
out
jle
nop
mov
dec
jnp
test
xor
mov
dec
popf
es
pop
mov
push
ret
sub
jne
push
xor
arpl
dec
imulb
jae
int
pop
lock
jecxz
push
loopne
out
int3
fiadds
adc
hlt
int
dec
mull
xor
out
loopne
pusha
jp
fldenv
mov
jbe
out
in
mov
push
dec
jns
aad
pop
mov
xchg
int
jmp
xchg
fisttps
push
mov
call
fisubrl
pusha
add
ljmp
imul
xchg
fdiv
mov
pop
adc
test
inc
jp
inc
stos
jmp
jo
mov
cmp
popf
imul
pop
inc
aaa
fcmovb
enter
pop
lods
lret
or
rcrl
or
out
pop
push
clc
nop
out
imul
inc
mov
repz
call
xor
pop
jge
fcmovnbe
sbb
jp
add
xor
mov
lret
add
movb
inc
rclb
cmp
xor
lea
into
movsb
out
ret
imul
clc
arpl
jle
sub
mov
into
cmpsl
cltd
sti
outsb
cmp
or
add
mov
and
sti
adc
cwtl
xchg
in
jp,pn
dec
cmp
jg
pushf
jge
mov
outsl
jmp
out
push
cwtl
js
nop
fsubrl
push
push
pop
sbbb
mov
enter
jo
sub
xlat
xor
dec
movsl
xchg
sti
or
imul
nop
dec
xor
push
imul
outsb
sub
mov
sbb
insl
jg
dec
add
adc
fimuls
lcall
loop
adc
cmp
add
imul
pop
fmull
aad
fcmovne
out
xor
pop
mov
hlt
xor
mov
pop
mov
xor
pop
inc
mov
add
bound
scas
in
mov
out
push
push
mov
mov
jbe
cmp
jg
scas
icebp
push
mov
xor
icebp
out
shl
enter
sbb
xor
mov
cmp
push
arpl
or
lds
or
dec
sub
jg
imul
outsb
mov
cmp
arpl
push
push
adc
adc
stos
ret
shrb
lock
iret
clc
pop
push
pop
jmp
nop
dec
sti
pop
mov
sub
sarl
rorl
clc
int
imul
repz
insb
cmpsl
repz
arpl
aad
aam
mov
nop
dec
repz
divl
push
stos
sbb
ljmp
pusha
jp
ret
lds
sub
jno
jo
data16
sub
lods
jl
stos
out
fs
and
jne
repz
mov
inc
jb
out
jne
adc
in
insl
jne
jae
mov
pop
push
dec
loop
mov
or
xchg
xchg
mov
adc
sbb
gs
cmp
or
push
push
icebp
lods
pop
cltd
xchg
cwtl
not
mov
sub
sub
xchg
cmp
fisubrl
inc
sbbb
into
or
pop
notb
int
jbe
lods
mov
addb
nop
jmp
push
out
mov
sub
in
cmp
les
sahf
sub
mov
push
jno
rcrb
jg
nop
out
dec
aas
push
lods
xchg
or
shr
ljmp
int3
test
jno
repz
xchg
mov
push
lea
push
inc
dec
add
mov
mov
xchg
fs
xchg
scas
xlat
stc
aaa
dec
mulb
mov
push
fnsave
xchg
ret
fildl
fisubrl
inc
lods
in
enter
jo
pop
hlt
fstpt
and
inc
sbb
push
xor
adc
mov
enter
mov
push
mov
scas
mul
hlt
imul
shl
xchg
fisubrl
xor
fidivs
inc
popf
push
mov
xchg
mov
or
call
xchg
popa
sub
jle
mov
or
outsl
push
rep
xlat
fucomp
adc
popf
mov
es
push
fnstsw
mov
scas
dec
jne
fdivs
movsb
or
sbb
clc
mov
pop
push
or
ja
int
adc
xchg
mov
jns
idivl
out
mov
fisubl
mov
cmp
xchg
mov
cltd
cmc
jno
or
ss
xlat
outsl
int
cltd
movsl
cmp
lock
push
dec
pop
push
adc
pop
mov
lds
xchg
mov
sti
clc
ja
xlat
nop
push
repnz
mov
mov
icebp
fisttpl
out
ret
add
nop
push
leave
das
movsl
nop
xor
incb
in
pusha
cmpsl
push
sbb
jmp
xorb
xlat
cmp
mov
lock
and
mov
xor
adc
sbb
lret
notb
sbb
mov
fsts
jb
xor
xlat
mov
mov
js
lahf
icebp
inc
dec
mov
bound
add
leave
in
in
inc
adc
aaa
cmc
adc
ljmp
sbb
icebp
dec
popa
in
jle
fcompl
mov
inc
xor
dec
pop
ja
push
shr
push
sbb
jne
div
aaa
outsl
in
xchg
enter
lret
out
dec
jbe
mov
jo
jmp
out
push
cmpsb
xchg
pop
mov
sub
addr16
pop
push
es
pop
scas
push
sbb
jbe
aad
mov
outsl
pop
ja
not
xor
mov
sbb
stos
lods
jns
cwtl
aaa
gs
shll
fstpl
mov
iret
push
adc
jle
sbb
je
inc
out
ret
movsl
aad
jnp
outsb
adc
cmpsl
movsl
sbb
sbb
ficoml
and
in
in
fdivl
in
ss
sbb
cmpsb
jmp
jmp
dec
pop
out
test
push
push
fwait
pop
fistps
push
ret
movsl
nop
rorl
aaa
push
mov
jbe
nop
or
sbb
fidivl
out
out
inc
dec
fimuls
or
sub
mov
jg
ficomps
mov
jae
scas
inc
into
pop
clc
dec
cmp
cmpsb
mov
push
push
xlat
jecxz
dec
jp
xor
mov
jbe
push
imul
dec
pop
je
lret
sbb
jp
xchg
shr
popa
in
inc
aaa
jp
scas
imul
xchg
scas
mov
andb
push
je
mov
push
aaa
jp
in
xor
push
ljmp
and
pusha
mov
jne
outsb
ret
mov
aaa
cli
jb
aaa
stos
jmp
inc
jo
sbb
ret
test
pop
sub
xchg
mov
cmp
shl
mov
xlat
repnz
shll
dec
fdivrl
xchg
adc
ficoms
inc
mov
shrl
add
adcb
mov
loope
push
test
aaa
imul
aad
jnp
sbb
cld
out
mov
mov
xchg
mov
in
add
adc
gs
scas
insb
jo
or
loop
jp
sahf
sub
mov
sbb
push
aaa
jbe
sub
and
imul
dec
in
daa
xor
in
sbb
lea
pop
mov
mov
pop
cltd
or
jecxz
imul
add
sbb
or
ja
mov
jbe
pop
xor
adc
pushf
jmp
imul
sbb
rcl
int3
clc
mov
jne
jb
dec
fbld
testb
imull
ja
xlat
pop
rcl
push
jp
adc
pushf
test
imul
int3
lret
fidivl
cmp
into
push
xor
cmc
es
aam
ja
push
popf
aad
mov
hlt
hlt
imul
cmpsl
daa
push
ja
xchg
imul
stos
push
out
cmc
out
cmp
sbb
add
and
jbe
xchg
lahf
inc
mov
gs
mov
outsl
jmp
jb
mov
sbb
cli
mov
mov
out
es
shlb
jbe
outsb
mov
lods
test
lods
mov
fimull
icebp
arpl
xchg
lahf
xor
sbb
shrl
xor
scas
dec
mov
mov
out
mulb
nop
sahf
ds
pop
aad
data16
xchg
into
pop
xor
inc
jne
sbb
adc
cwtl
jb
xor
out
mov
push
xchg
push
jb
mov
mov
popa
ret
pop
in
addr16
add
mov
dec
jne
mov
data16
xor
adcl
and
mov
mov
xchg
push
xchg
lahf
aaa
in
stos
ja
dec
cmpsl
imul
lea
scas
xchg
lods
push
or
cmp
out
mov
push
scas
jbe
mov
xor
fwait
sbb
push
push
bound
repz
out
inc
stos
push
xchg
jp
push
push
jbe
test
sub
das
ret
outsl
xchg
mov
in
fnstcw
sub
jae
lahf
xor
int3
adc
out
je
stos
mov
pop
xchg
js
sarl
test
dec
out
stos
repz
jge
mov
dec
movsb
in
lret
mov
movl
pusha
or
call
dec
xor
out
scas
lods
xlat
or
xchg
call
adc
cmpsb
fisttpll
xor
sub
loopne
push
and
out
and
call
mov
mov
jmp
imul
dec
and
or
xchg
push
and
push
dec
xchg
fnstcw
mov
sub
pop
scas
inc
xor
test
jp
xor
sbb
lret
in
iret
xchg
ficomps
and
inc
ficoml
test
cwtl
lcall
ljmp
js
aad
or
dec
pop
fwait
lret
mov
ja
lahf
pop
das
out
in
hlt
adc
sub
xchg
imul
dec
push
sub
sbb
pop
sub
jecxz
dec
je
divb
mov
les
cld
sbb
adc
push
and
cmp
sub
pop
fiadds
push
fisubl
sbb
dec
shll
pop
xchg
mov
lock
dec
pop
imul
jmp
cmp
cmp
mov
xchg
fisubl
gs
adc
repnz
mov
test
inc
xor
xor
gs
add
divl
mov
dec
testb
and
pop
jp
cmp
insl
push
pop
sub
in
xchg
jns
out
aam
ljmp
xchg
jne
cwtl
lahf
inc
and
cmp
fsubrl
xchg
dec
inc
mov
aaa
sub
push
xchg
xchg
fstpl
add
jg
insl
xor
or
jp
lods
mov
clc
push
sahf
jb
shl
shlb
mov
mov
or
and
jp
cmc
dec
mov
or
adc
add
jae
into
mov
mov
sub
dec
cmc
sbb
insl
clc
call
cld
jecxz
ja
mov
repz
adc
sbb
inc
xchg
mov
mov
xchg
lret
shll
rorl
adc
pop
add
mov
xchg
and
mov
sbb
pop
xor
dec
ficoml
push
ror
nop
addr16
loopne
sbb
sahf
xchg
adc
push
lods
imul
cmc
push
xor
es
adc
repnz
inc
jno
fcmovb
jo
repz
andl
mov
mov
cld
mov
or
cmc
addl
adc
sub
pop
mov
fidivrl
adc
sbb
out
jne
pop
xor
stos
hlt
in
andb
outsl
inc
dec
and
ljmp
dec
dec
fsubp
mov
mov
int3
insb
inc
insb
mov
sub
sbb
add
int3
out
pusha
movsb
ret
outsl
lret
ss
fisubl
rclb
mov
adc
jae
into
push
xor
call
imul
repnz
pop
mov
xchg
sbb
push
pop
mov
inc
out
fists
pop
jg
notl
loopne
lods
pop
out
sub
xor
lahf
mov
pop
jp
ret
jo
aam
loopne
push
in
ffreep
dec
lcall
out
sub
xchg
imul
in
loope
adc
dec
iret
jo
sub
dec
mov
add
lret
dec
aad
fldenv
andl
enter
insl
adc
ret
sbb
test
adc
scas
out
fwait
inc
jne
test
fstpl
jno
vmovmskpd
ret
mov
pop
fnstcw
push
inc
stc
xor
sahf
in
sbb
xlat
imul
fidivrs
stos
mov
pusha
in
sub
movl
fcmovnbe
pop
pop
aaa
cmp
mov
jp
dec
fwait
mov
sbb
sub
lds
push
jne
int3
xor
lret
repnz
scas
mov
adc
jae
dec
jg
xor
inc
mov
mov
xchg
pop
xor
dec
sbbl
or
ja
mov
mov
clc
cmc
iret
pop
shlb
sub
loope
cmpsl
inc
fldl2e
cmpsb
inc
stos
mov
mov
inc
ret
xchg
popa
imul
fldl
push
cmp
xor
and
movsl
xor
shr
or
scas
and
add
cmpsl
adc
pop
sub
cmc
xchg
xchg
sub
dec
fildl
frstor
xlat
push
cmp
mov
shl
in
test
fimull
and
shrb
shrl
nop
das
fiaddl
call
gs
mov
gs
aad
fiaddl
iret
cmpsb
and
mov
lods
sahf
or
loopne
testb
imul
add
fs
cmpsb
lret
enter
fldt
xchg
mov
cmp
outsl
pushf
sub
arpl
push
out
jae
sub
sub
cmp
ja
ja
fsubl
imull
iret
xchg
inc
out
cmp
aad
or
stos
push
in
dec
fdivp
pop
shll
ss
arpl
mov
xchg
mov
fisubl
out
lods
das
sbb
fidivs
pop
int
hlt
jbe
rolb
push
and
adc
aad
icebp
jo
mov
insl
inc
cmp
pop
fnsave
sub
adc
into
fdivrl
imul
loopne
insl
xor
dec
mov
sbb
mov
push
inc
lahf
xor
clc
jbe
pop
dec
push
sbb
out
ds
or
dec
cmp
push
imul
scas
mov
or
adc
jle
sub
push
js
ja
sbb
mov
xchg
push
fcomi
mov
stos
xor
mov
loope
imul
imul
imulb
mov
and
push
mov
scas
inc
out
pop
inc
neg
sub
mov
daa
cmpb
mov
fildll
loope
pop
andb
sbb
dec
cmp
dec
stos
fimuls
push
out
sbbl
jno
inc
outsl
xchg
shll
xor
jo
shlb
mov
cmc
mov
or
inc
insb
fstpt
fildl
jecxz
jae
call
icebp
mov
sbb
mov
insb
das
dec
jne
adc
test
rcl
repnz
orb
xchg
jle
adc
dec
fidivs
inc
into
ds
sub
sub
sub
jp
xor
mov
xchg
leave
insl
fisubrl
xchg
and
out
ljmp
lods
sti
das
stos
inc
cmpsb
push
ja
add
sbb
aad
inc
les
mov
lods
mov
je
shrl
push
and
aaa
aam
in
jns
out
or
dec
push
add
inc
das
xchg
call
jno
mov
jbe
mov
out
sub
cmp
jmp
xchg
dec
sahf
mov
imul
scas
scas
fiadds
adc
addr16
aaa
xchg
xchg
dec
aad
imul
divb
jmp
cmp
aad
imul
adc
adc
xchg
mov
cmc
out
sarb
xchg
rolb
inc
adc
mov
cltd
dec
xchg
pop
or
out
mov
cmc
xchg
push
or
scas
scas
ficoms
adc
pop
xlat
daa
dec
mov
adc
mov
xlat
divb
xor
int3
xchg
push
xchg
adc
imul
imul
gs
mov
iret
hlt
push
xchg
pop
or
enter
aam
out
sub
pop
adc
mov
xchg
fiadds
shrl
cli
movsb
imulb
je
imul
or
dec
push
popf
adc
mov
adc
inc
push
lahf
pop
sahf
inc
jmp
xchg
jmp
std
jns
xchg
jmp
arpl
popl
and
pop
mov
in
pop
nop
int
imul
mov
xchg
fiadds
stos
aad
adc
adc
insb
outsl
pusha
sbb
dec
cli
popf
xor
jecxz
cmpsl
sbb
je
imul
pop
mov
mov
lcall
xchg
xchg
testl
pop
adc
cmp
scas
cltd
and
adc
adc
mov
mov
in
mov
scas
cltd
sarl
adc
xor
jns
lea
mov
xchg
add
pushf
scas
sub
cmp
adc
add
loop
scas
cltd
out
clc
adc
dec
repz
mov
add
enter
mov
xchg
repz
imul
gs
pop
sbb
pop
dec
xchg
fs
insl
test
dec
xor
xchg
aad
mov
mov
mov
fbld
jp
push
or
dec
mov
inc
outsl
outsl
or
mov
outsl
jnp
fisubrs
std
gs
pusha
push
pop
jb
inc
ficoml
xor
adc
clc
js
xchg
aas
inc
repnz
scas
js
cli
cli
scas
pop
push
into
ds
push
js
loop
test
ljmp
rcrb
pop
adc
out
js
xchg
mov
rcrl
cwtl
cmc
stc
mov
scas
cltd
jecxz
into
xor
stos
cwtl
dec
ss
out
imul
push
in
aam
dec
pop
popf
adc
pop
out
mov
loopne
outsl
clc
je
push
or
dec
inc
cmp
mov
fdivr
ds
test
mov
icebp
fidivrs
ficoms
add
sub
mov
jb
ficoml
jp
daa
les
aam
cmp
ret
and
xchg
rorb
cmp
mov
je
add
in
mov
in
jnp
pop
outsl
psubusb
push
fcoms
pop
iret
sbb
jne
xchg
pop
pop
clc
mov
mov
out
clc
pushf
push
pop
testb
push
in
dec
data16
jp
pop
xor
clc
rcll
pop
popa
mov
ss
push
fs
add
loop
js
popl
mov
lock
xchg
sysexit
jns
mov
pop
dec
ss
sbb
adc
adc
popf
sbb
js
pop
add
jae
mov
fmuls
hlt
mov
shrl
push
in
lock
mov
std
mov
pop
pop
das
cld
paddsw
out
mov
addr16
pop
fsubrl
mov
jl
test
mov
js
in
mov
pop
or
enter
fwait
shl
mov
stos
jo
xor
and
in
out
cmp
mov
add
enter
ja
adc
pop
aam
test
jns
popl
ret
movsl
jns
mov
adc
mov
negb
jns
ss
out
imul
mov
sub
test
adc
aad
cltd
popa
mov
cmc
addr16
out
rcrb
sbb
js
aas
dec
cltd
cli
popf
ret
xor
cltd
xchg
out
pop
mov
cmpsb
push
push
jns
fldl
mov
in
add
aam
pop
lock
xchg
push
push
add
xchg
mov
mov
sbb
popa
jbe
jl
push
shll
adc
sbb
stos
loopne
fildll
xchg
lahf
ret
imulb
pop
mov
push
sub
pop
mov
mov
xchg
ss
test
shll
xchg
fmull
inc
dec
adcl
jp
sub
out
cs
mov
out
jmp
inc
xchg
push
insb
adc
adc
ffree
hlt
test
add
int3
mov
outsl
jae
out
popa
sub
inc
out
pusha
fs
loope
je
push
jae
outsl
jg
ja
add
xorb
divb
ss
clc
mov
mov
shl
in
dec
xor
cmpsl
adc
insl
pop
jl
pop
roll
mov
xchg
pop
cmp
push
jbe
adc
sub
not
xchg
adc
cmp
mov
sahf
mov
popaw
fildl
and
mov
sbb
push
xchg
push
pop
add
iret
xlat
cmpsl
loop
pop
fcmovu
push
cmc
mov
xchg
xchg
ljmp
test
pop
rolb
sub
add
sub
nop
jg
sub
out
insb
roll
popa
pusha
pop
pop
out
imul
push
jbe
push
sub
ja
ret
adc
xchg
cmp
test
dec
inc
pop
sbb
pop
repnz
push
mov
stos
not
sub
lock
sbb
shr
stc
cmpsb
testb
imul
ret
pop
ja
xlat
shl
seto
xchg
lock
pop
lea
inc
push
ljmp
fstps
xchg
fimull
add
pop
fcmovne
lahf
xchg
cmp
ds
scas
xor
dec
ret
lret
mov
shr
lock
leave
jmp
push
addr16
sub
push
or
mov
outsl
shrl
fildl
sbb
out
sbb
or
dec
repz
inc
push
out
out
or
subl
fidivrs
je
dec
push
jns
xor
xor
cmpsb
adc
mov
adc
fcomip
fistl
inc
data16
jecxz
jp
xchg
mov
mov
mov
xchg
shlb
jne
lock
pop
repz
addr16
add
jb
sub
shrl
adc
or
pop
push
out
lds
fbstp
cld
jg
add
mov
icebp
pop
push
push
hlt
int
mov
rcrb
add
jg
fidivs
ljmp
lcall
and
cmc
xchg
repnz
cmpsl
fsts
xor
shll
daa
out
pusha
pop
daa
out
daa
cmp
push
int3
inc
lret
xchg
cmpb
add
push
inc
jp
notb
jnp
shll
inc
cmp
jp
imul
aaa
out
mov
scas
and
jbe
push
push
xor
imul
ljmp
mov
call
adc
dec
sbb
loop
in
adc
cmp
int
push
fisubl
nop
shr
ja
mov
imul
jge
dec
out
sub
out
or
dec
hlt
fidivs
nop
jge
adc
aam
sahf
into
lock
pop
jns
out
dec
sbb
inc
lahf
cmp
cmpsb
orl
xor
mov
jae
xchg
pop
clc
add
fimull
out
repz
xor
cmp
bound
fsts
lret
fnsave
adc
push
nop
js
mov
lods
adc
sub
ficomps
aad
mov
or
rorl
add
nop
jg
mov
inc
test
rolb
or
imul
cmpsb
sub
sub
mov
sub
out
shl
jbe
lock
adc
mov
inc
dec
cmc
fwait
aam
repz
inc
test
shlb
pop
add
dec
lahf
push
inc
scas
xor
fiaddl
mov
ljmp
cmpsb
idivb
inc
cmc
jno
mov
out
or
mov
sub
xchg
cld
repz
xchg
ss
bound
cmpsb
je
mov
jecxz
mov
jmp
js
mov
sub
pop
mov
jae
jb
scas
sarb
dec
sahf
sti
jae
jle
ljmp
jae
ja
xor
lea
cmp
nop
outsb
out
in
mov
arpl
flds
sub
push
xor
sahf
cmc
shrb
testb
fsubs
push
outsb
lret
outsl
jmp
fimuls
rorb
lods
sbb
out
imul
mov
pop
pop
push
adc
ja
or
popf
adc
lds
push
cmc
xor
dec
jno
lds
push
adc
addr16
pushf
repnz
int
push
addr16
xchg
imulb
faddp
push
sub
aas
repnz
sbb
inc
add
adc
rclb
xchg
adc
sub
and
mov
nop
into
push
test
shr
fdivrs
sahf
pop
cmpsb
ret
dec
lret
lea
inc
repnz
aad
pop
shrl
testb
stos
adc
mov
adc
inc
xor
mov
clc
mov
pop
in
jg
jae
xchg
testb
fidivrl
sarl
pop
or
cld
cld
cmp
fwait
mov
test
sbb
mov
jnp
scas
mov
sub
loop
xchg
or
jns,pt
xchg
and
mov
jmp
push
jl
push
cltd
test
pop
rorb
sub
loopne
dec
into
xor
fists
cmc
push
in
xlat
ficoml
or
mov
mov
mov
ficompl
cmpsb
aaa
add
fwait
shlb
pop
roll
das
xlat
out
mov
push
in
pop
pop
les
loop
inc
adc
inc
jns
icebp
fwait
out
push
aas
xchg
jp
mov
push
shr
jmp
adc
dec
jbe
fs
xor
inc
cld
cmp
call
adc
adc
dec
lcall
in
sub
jp
nop
dec
xlat
daa
xor
mov
imul
mov
dec
int
cmc
mov
aaa
mov
out
sub
out
pop
fidivrl
iret
in
arpl
sub
mov
push
clc
adc
inc
fimull
lea
leave
push
lcall
adc
mov
push
jp
mov
test
mov
iret
ss
xor
stos
mov
xchg
rorl
sbb
cld
and
loop
mov
ljmp
xchg
aad
lea
stos
add
out
pop
ficompl
push
xlat
out
inc
jbe
ja
pop
xor
aaa
ljmp
in
or
xorl
imul
push
and
mov
xor
push
mov
and
inc
out
xchg
xchg
sarl
fistpll
push
jl
push
faddl
repnz
mov
push
mov
hlt
pop
add
add
das
fdivrl
ret
xchg
or
arpl
lahf
shll
lea
sti
out
orb
mov
outsb
pop
sub
sub
out
or
fidivrl
fsts
mov
xchg
xchg
test
jmp
stos
fstl
pop
das
ljmp
in
mov
or
add
xor
dec
pop
push
mov
insb
mov
fiaddl
dec
cmp
sub
hlt
fiadds
in
push
push
mov
xlat
adc
xor
rolb
mov
xor
inc
push
out
iret
sub
dec
ljmp
inc
mov
fisubrl
mov
fldenv
xchg
inc
xor
aaa
movzwl
ja
and
add
repnz
cmp
cmpl
fs
mov
nop
adc
rcrb
lods
pusha
daa
out
decb
ljmp
addr16
mov
xor
inc
outsb
rcll
push
sub
inc
adc
adc
xor
xchg
adc
push
or
pop
popf
iret
jns
inc
xorl
xchg
and
cmp
jmp
or
jecxz
pop
sbb
jge
fmuls
imul
loop
fisubl
mov
xor
or
xor
mov
sub
jae
xchg
or
sub
inc
inc
jnp
inc
add
enter
push
or
pop
or
mov
cwtl
or
in
ss
shr
addr16
adc
cmc
arpl
push
and
mov
movsl
mov
in
fiaddl
mov
out
jp
loope
imul
and
lods
loopne
add
push
fdivs
jae
movsb
mov
mov
xor
cltd
mov
xchg
push
std
inc
iret
aaa
rorb
aam
pop
imul
nop
mov
jbe
int
imul
jbe
mov
cmpsl
add
inc
mov
lahf
dec
xchg
xor
jmp
gs
out
xchg
imul
imull
rep
mov
fadd
jno
pop
xchg
xchg
ret
mov
sub
xlat
out
arpl
imul
fnstcw
mov
ja
cmc
imul
mov
xor
mov
out
sub
inc
mov
lahf
xchg
jno
lock
xchg
inc
addr16
loop
cmc
dec
add
js
popf
in
pushf
es
xor
pusha
cmpsl
sub
call
pop
or
flds
nop
popa
xor
mov
fdivr
imul
incl
dec
mov
out
xchg
or
arpl
js
daa
iret
gs
das
faddl
out
movb
imul
push
or
imul
hlt
push
daa
loop
int3
xor
fwait
lahf
mov
jno
int
shll
cmpsb
roll
mov
mov
lcall
mov
iret
ja
dec
mov
movl
imul
jbe
pop
ficompl
das
cmp
repz
insl
fnstenv
lahf
aad
mov
ret
int3
xor
mov
xchg
ja
mov
ret
push
push
push
fistpll
mov
cmc
loop
pop
jl
cltd
loope
les
xchg
inc
sbb
test
in
xchg
push
out
sbb
cld
stos
inc
mov
inc
imul
adc
lock
pop
xor
sub
imul
mov
rol
daa
ljmp
inc
and
lahf
pop
ljmp
dec
int3
in
je
aad
nop
pop
call
and
and
push
xor
inc
xchg
xor
leave
dec
icebp
hlt
cmc
push
lcall
jg
inc
out
adc
outsl
pop
sub
mov
pop
lods
test
loope
cltd
nop
sbb
das
push
out
push
or
sahf
inc
push
xlat
mov
mov
pushl
push
outsl
push
sahf
cmp
ds
sbb
xchg
sbb
scas
adc
orps
mov
aam
das
inc
addr16
int
or
js
jb
and
jb
mov
js
push
jle
insb
inc
sub
mov
adc
cmp
push
sbb
pop
and
pop
lret
adc
rcll
test
js
sub
sbbb
iret
push
ficoml
sub
stos
jne
in
mov
mov
repnz
sub
mov
inc
push
jge
jbe
rcl
aam
out
push
xchg
in
lret
cs
jo
decl
or
call
movsl
sub
xchg
stos
jbe
ret
les
xchg
mov
jg
inc
pop
imul
or
cmp
push
fcomi
shll
mov
xchg
lret
into
fidivl
aaa
mov
jae
mov
push
negl
popf
mov
lcall
mov
xor
in
push
ljmp
into
ret
jecxz
xchg
fs
push
jbe
stos
out
lods
mov
bound
orl
loop
cmpsb
cmp
in
jge
mov
mov
add
mov
ss
leave
jb
ja
sub
jbe
call
mov
stc
jnp
xlat
orl
imul
adc
mov
xlat
ljmp
pop
cltd
mov
push
add
xchg
rorb
testb
loopne
dec
mov
xorl
imul
mov
or
cmpsl
add
arpl
inc
inc
fildl
dec
outsb
daa
sub
ja
outsb
sbbb
fsubr
jbe
add
sbbb
adc
inc
cmp
inc
inc
pop
testb
aad
pop
push
sub
fsubrs
inc
pop
roll
inc
pop
cmc
inc
fistps
pusha
iret
fs
inc
fnstenv
add
aad
lods
jmp
sbb
repnz
pop
xchg
xor
push
sbb
push
in
clc
std
mov
shlb
push
pop
mov
inc
add
pop
sub
pusha
outsb
std
into
out
aad
orl
sub
and
mov
aas
sbb
fsubl
pop
mov
xor
mov
sbb
ja
add
jmp
or
cs
mov
and
or
dec
js
pop
sub
or
cs
cmc
xchg
sub
xchg
or
adc
push
adc
or
or
or
out
xchg
sub
aad
jmp
sub
test
inc
mov
lcall
inc
or
dec
jl
imul
dec
and
xor
sbb
add
mov
mov
jo
stc
add
imul
sub
xor
sub
mov
into
dec
jns
out
or
imul
das
psllq
in
xor
lods
jbe
cmc
xchg
test
xchg
adc
fsubrp
push
int3
mov
push
sub
push
andl
sti
repz
paddusw
imul
mov
pop
and
ja
popa
adc
in
jae
mov
gs
repz
dec
xchg
jb
out
xchg
push
scas
fstl
inc
add
pop
cli
mov
les
outsl
mov
lods
mov
sbb
scas
gs
mov
outsb
inc
loopne
dec
jo
mov
fistl
xor
mov
cltd
pop
cltd
push
inc
test
insb
iret
shll
xchg
add
sbb
call
push
adcl
pop
xlat
inc
out
repz
addl
mov
addr16
arpl
xchg
pop
ret
jmp
xchg
inc
outsb
mov
out
out
popf
push
notb
scas
stc
pop
and
sbb
repz
jbe
xor
pusha
pop
das
xlat
cld
mov
shlb
jl
push
push
dec
jns
js
mov
fdivp
dec
mov
sub
jne
aad
jno
jecxz
push
xchg
mov
xlat
sbb
push
hlt
xor
ljmp
push
add
jmp
outsb
mov
out
add
and
sub
dec
insb
lahf
jmp
pop
ds
adc
jecxz
test
imul
xchg
and
mov
repz
ja
je
ret
push
mov
push
xlat
cmpl
add
adc
inc
inc
sbb
and
mov
lods
inc
jns
sarb
jb
jne
cmc
repz
loopne
mov
adc
scas
mov
pop
fcmovb
adc
stos
js
push
sub
iret
ret
cmpsb
xchg
jbe
out
push
testb
pop
std
mov
inc
adc
cli
test
ja
xchg
scas
not
out
js
cmpsl
aam
outsl
aam
xlat
lahf
stos
or
pop
mov
mov
jecxz
mov
push
xchg
inc
arpl
or
daa
ficoml
inc
sbb
aam
fucompp
in
push
lcall
cs
push
cmp
data16
movb
jnp
inc
push
int
mov
call
push
ficoml
pop
pop
lret
add
and
sbb
leave
sub
into
xchg
ficoml
push
sub
test
fs
loop
lea
scas
imul
mov
rcl
inc
pop
mov
imul
outsl
ficomps
jae
pop
inc
rorl
imul
jo
jne
or
add
sbb
sub
fstpt
mov
in
jbe
stos
mov
mov
jp
outsl
xor
add
sbb
fidivrl
mov
mov
lahf
and
mov
cmc
call
dec
jne
sti
jmp
or
fisubl
fs
cmpsl
jo
sbb
mov
or
ja
out
cli
or
and
xlat
push
gs
aaa
push
in
push
scas
data16
push
out
push
addr16
sub
loope
pop
push
arpl
out
push
push
push
imul
loop
popf
and
jecxz
inc
jns
cmc
imul
push
fiaddl
scas
xchg
ret
push
xor
fdivp
in
pop
jne
gs
dec
mov
pop
inc
pop
out
xchg
pop
int
jp
test
fisttpl
push
dec
fs
sub
ljmp
sub
fs
pusha
shrl
push
in
xchg
cmpsb
ljmp
das
imul
out
daa
xor
ss
mov
scas
aaa
jns
inc
mov
xchg
cmp
push
fidivrl
dec
push
push
add
pop
frstor
repz
add
cmc
loopne
and
push
fcmovb
dec
lock
nop
cmpb
push
adc
ljmp
insl
test
ljmp
jo
push
push
adc
cmpsl
inc
xchg
pop
jne
in
mov
mov
mov
int3
xchg
xchg
ss
arpl
jo
test
and
les
negb
imul
dec
xchg
lds
test
or
mov
mov
push
xchg
mov
fistl
push
pop
sbb
scas
aam
neg
inc
and
mov
lods
mov
repnz
xchg
pop
mov
pop
gs
xchg
js
ror
mov
aam
xor
mov
jne
and
int3
sti
ljmp
mov
fwait
sbb
jae
out
xchg
ljmp
cmp
pushf
into
mov
repnz
xor
adc
fnstenv
xchg
pop
inc
pop
movsl
loop
rclb
pop
outsb
jne
das
mov
cmpsb
dec
cmc
mov
mov
fwait
dec
repnz
sub
mov
mov
clc
aam
fst
imul
pop
outsl
pop
add
xchg
jmp
aam
js
mov
fcmovbe
arpl
jb
xor
repz
xor
popf
sbb
sbb
mov
push
dec
fdivrl
popa
xor
jp
or
incl
aad
enter
loope
ja
sbb
fucomi
adc
or
mov
out
mov
add
and
test
xchg
jbe
imul
jg
pop
xor
mov
and
add
xor
shlb
shl
repz
cmp
pop
add
inc
clc
rcr
das
xor
outsb
lea
insb
xor
shll
push
or
mov
loop
mov
lods
xchg
push
fnstcw
xchg
out
fsubrs
lods
js
rcl
fildll
cmp
dec
fidivrl
xor
stos
dec
popf
cmpb
sbb
mov
ss
pop
pushf
mov
ror
mov
jbe
cmc
mov
add
mov
enter
popa
pusha
das
insb
fstpt
ljmp
jmp
out
mov
loope
ljmp
fisubl
sub
mov
pop
out
dec
addr16
adcl
inc
das
push
fisubl
inc
dec
aam
imul
popa
stos
mov
xor
stc
jb
add
es
sbb
ds
in
mov
hlt
push
push
fistl
ret
nop
fstl
mov
mov
pushf
xor
ljmp
shll
test
ret
mov
add
mov
ja
and
roll
ficompl
pop
jb
movsb
das
xchg
sbb
adc
sbb
dec
mov
push
mov
shl
imul
jae
sub
xchg
das
jae
les
dec
stc
sahf
jb
outsl
push
stos
jno
fs
jo
mov
xchg
jp
outsl
out
pop
out
stos
std
icebp
insb
push
lds
repz
and
pop
sub
leave
cmpsl
sub
xor
or
imul
push
fisubs
lds
addr16
out
shll
xchg
lods
ljmp
xchg
dec
jne
out
dec
xchg
jbe
adc
xchg
out
das
rcrb
in
mov
das
mov
add
fsubp
out
jbe
pop
or
jbe
or
xchg
jbe
sbb
es
jno
lcall
fsub
aam
ljmp
pop
div
sbbl
mov
mov
rcrl
pop
aas
xchg
mov
push
stos
adc
data16
repnz
call
add
stos
jb
ret
lods
out
popl
ss
mov
xor
jo
mov
mov
loop,pt
pop
push
in
mov
fisubl
mov
push
pop
adc
pop
adc
push
inc
xor
cmovb
lds
imul
pusha
rolb
inc
test
jno
cmc
xchg
inc
test
xchg
inc
xorl
outsl
ffree
mov
ljmp
shll
xor
push
aaa
mov
popw
js
dec
jae
sub
sub
stc
enter
mov
or
adcl
mov
out
rcl
iret
cmc
scas
push
repz
imul
scas
in
shr
push
jmp
out
sub
popf
sub
test
cs
xchg
ss
jno
mov
xchg
jl
jo
mov
test
jb
aam
dec
fcomp
xchg
pop
aaa
out
iret
lahf
scas
cwtl
mov
jmp
fdivr
nop
jl
mov
xchg
jge
adc
mov
imul
scas
push
mov
out
mov
int
inc
lcall
adc
loop
dec
insb
adc
test
lea
mov
add
movsb
enter
mov
jp
sub
loop
fcomip
sub
sbb
add
stos
idivb
in
ja
ss
dec
les
aam
mov
xchg
dec
jb
fcomip
nop
flds
mov
out
lods
ret
xor
ret
mov
andl
test
or
xlat
mov
inc
out
xlat
loope
xchg
fsubr
into
in
add
insl
mov
add
jp
mov
repz
pushf
enter
scas
in
pushw
mov
mov
xor
jns
push
add
aaa
xchg
ja
jecxz
test
xor
loopne
cmovbe
out
cmp
inc
pop
mov
add
roll
cmp
fcoms
adc
sahf
pop
fisttpll
or
xchg
adc
push
repnz
jp
ret
mov
bound
popa
add
jge
aaa
loopne
jmp
sbb
ret
inc
sarb
fldcw
stc
leave
rcrb
loop
add
shlb
mov
adcl
bound
xor
add
in
sub
ds
add
pop
in
fcoms
and
xor
bound
jb
mov
and
shrl
push
int3
push
icebp
or
fmulp
push
lahf
stos
pop
pop
gs
ja
push
jae
mov
adc
mov
js
out
gs
aaa
cmc
inc
pusha
mov
aam
jbe
daa
loopne
pop
mov
xchg
xchg
ja
ret
out
fs
inc
out
das
dec
mov
push
mov
cmp
lock
mov
pushf
dec
lret
or
inc
cmc
push
mov
insl
movsl
jne
fwait
push
ss
test
pop
out
aaa
pop
scas
inc
pop
mov
xor
dec
adcl
mov
aaa
pop
inc
fists
hlt
push
data16
roll
cs
push
in
or
out
cs
lret
je
lahf
in
adc
pop
mov
mov
push
adc
repz
add
mov
iret
ljmp
fbstp
aaa
ljmp
sbb
rcr
xor
cwtl
push
in
outsb
fisubrl
dec
xor
mov
lock
push
mov
and
icebp
idivb
mov
mov
pop
out
mov
movsb
inc
xchg
jl
out
adc
mov
rol
xchg
pop
mov
inc
pop
cmp
inc
mov
bound
fbstp
outsl
negb
loope
mov
pop
xchg
xor
cwtl
jb
push
orb
lcall
or
pop
push
hlt
jne
mov
std
idivb
leave
xor
push
repnz
iret
cmc
in
popa
mov
pmaddwd
add
xchg
aaa
xchg
xor
ss
mov
fsub
pop
ja
adc
fcoms
inc
addr16
or
imul
insl
adc
lret
jbe
push
jbe
je
call
mov
inc
in
jecxz
xchg
push
addr16
inc
fimuls
lds
add
pop
inc
jae
pop
negb
push
rcll
mov
fistps
lea
xchg
dec
imul
cmc
jno
int3
div
adc
sti
push
iret
mov
popf
imul
xor
pop
push
loopne
arpl
push
fldenv
pop
push
inc
movsl
jae
incb
mov
inc
out
icebp
mov
fidivs
leave
pusha
lahf
fs
cs
hlt
in
xchg
sti
dec
mulb
movsl
pop
insl
sbb
repz
fimull
ja
sub
inc
or
pop
sahf
inc
push
push
fistpll
cmpsb
aaa
add
push
xchg
adc
cmp
and
je
das
insl
incl
jle
hlt
push
mov
or
dec
das
test
sbb
push
roll
pop
or
xchg
sbb
add
inc
pop
mov
inc
arpl
cltd
aad
cmp
sub
xchg
push
push
ret
inc
repz
in
ss
neg
push
lds
sbb
outsl
loopne
inc
fwait
and
je
out
pop
pop
xor
mov
pop
shll
mov
arpl
sbb
push
add
mov
outsl
fbld
push
jbe
mov
mov
xlat
pop
adc
test
fsubr
in
mov
pop
push
xor
push
and
jae
mov
shrl
mov
insl
repnz
push
pop
out
outsl
pop
mul
imul
push
jp
xchg
jb
fcmovu
test
shl
push
int3
adc
bound
sub
mov
stc
call
xor
lods
loopne
addr16
ja
shr
mov
mov
xchg
inc
sti
xchg
lock
and
lea
or
jge
xchg
dec
xor
jb
arpl
icebp
mov
shl
jbe
aaa
adcb
xchg
pop
adcl
mov
pop
dec
lea
ljmp
cmc
ljmp
and
ficoml
scas
in
xchg
pop
mov
xchg
ja
out
inc
in
push
and
mov
jno
push
inc
ret
xchg
xor
lods
fst
xchg
jae
ja
cli
arpl
int3
push
xchg
dec
jne
lea
std
rcr
mov
inc
cmp
mov
inc
out
push
dec
aad
int3
fbld
mov
mov
shrb
aaa
mov
aaa
data16
setae
ljmp
mov
outsl
push
xor
in
inc
lds
xchg
addr16
aas
test
nop/reserved
cmc
out
dec
mov
enter
aad
xor
iret
out
jp
lret
stos
inc
jbe
ficoms
xchg
xor
push
adc
fisttps
jns
dec
pushf
rcrb
mov
in
xchg
pop
xor
jbe
cltd
mov
mov
adc
frstor
flds
dec
xchg
shl
sub
dec
inc
movsb
cltd
gs
dec
mov
lds
mov
push
inc
mov
les
test
fisubl
xor
dec
pop
pop
mov
inc
pusha
repz
jp,pn
inc
add
pop
das
add
cmp
out
pushf
sbb
push
imul
out
icebp
sti
insl
pop
add
adcl
icebp
xor
clc
imul
iret
cmp
mov
mov
inc
fsub
mov
xchg
repz
scas
loopne
sub
sahf
int3
xchg
lret
das
xchg
or
sub
xorl
outsb
repz
jmp
fcoml
xchg
mov
aaa
fwait
mov
pop
loop
jbe
jae
xor
movsl
lret
test
push
cli
or
xlat
jo
jge
das
loope
orb
stos
cmp
data16
pop
in
jne
gs
adc
or
adc
xchg
ja
xor
sub
insb
push
insb
aam
pusha
push
mov
fwait
je
mov
outsl
mov
mov
and
in
mov
jne
leave
jl
xchg
out
pushfw
aas
sub
inc
arpl
ds
repnz
inc
roll
dec
or
jp
loopne
xchg
sahf
push
sahf
add
fsubrl
sahf
lods
lret
aad
xchg
insb
mov
xchg
shr
mov
je
adc
xchg
fiaddl
jne
int3
xchg
stos
add
inc
xchg
pop
adc
dec
mov
vunpckhps
fidivrs
mulb
jnp
out
fs
mov
sbbl
push
dec
loopne
ret
push
mul
adc
in
xchg
out
lcall
mov
leave
pop
pop
dec
xlat
sbb
jg
xchg
jo
imul
aad
jno
push
push
add
scas
pop
lahf
xchg
mov
fldl
cwtl
dec
imul
addr16
nop
iret
pop
inc
dec
mov
pop
es
push
cmc
fnstenv
iret
xchg
mov
jg
sbb
mov
xlat
mov
clc
dec
repnz
cmp
or
jmp
or
roll
out
jle
adc
cmc
shll
in
mov
push
int
fisubrl
imul
aaa
jmp
push
inc
sbb
ja
outsl
aam
mov
sbb
mov
add
lods
jp
pop
sub
fldt
sbb
push
push
hlt
mov
fadd
repz
in
loopne
into
jbe
repnz
loopne
sub
scas
xchg
ss
mov
ljmp
or
cmp
mov
xchg
xchg
fs
and
mov
push
notl
popf
adc
nop
pusha
or
sub
or
cwtl
xchg
dec
pop
pop
push
jecxz
jno
mov
xchg
cmpsb
fdivs
addr16
push
jbe
into
xchg
xchg
addl
cmp
mov
mov
popf
lds
ret
mov
add
mov
test
sub
frstor
out
fcmovnb
out
lock
xchg
mov
pop
push
pop
repz
test
imul
mov
dec
adc
and
mov
test
out
cmp
pusha
inc
sub
shl
loopne
inc
imul
je
ja
inc
mov
in
xchg
dec
hlt
fimull
xor
or
mov
push
cmp
sti
in
add
adc
shr
push
into
push
test
sahf
out
mov
xchg
jbe
fmuls
fisubl
xchg
out
xor
aaa
pop
aaa
rclb
sub
cmc
xor
sub
jmp
mov
mov
repz
xchg
repz
in
dec
xchg
cmp
mov
outsl
or
inc
xor
data16
xchg
cmc
xlat
nop
pop
push
inc
repnz
and
pop
fucom
jg
jp
or
pop
mov
cmc
mov
pusha
pop
pop
inc
pop
xor
push
mov
mov
arpl
out
jb
or
xchg
pop
mov
jae
mov
mov
clc
mov
mov
pop
ljmp
push
shll
adc
sub
sub
out
das
push
pop
fstpl
xchg
test
jbe
cmc
pushf
data16
repz
lcall
or
sbb
jmp
jmp
cmpsb
jno
pop
mov
cmp
cwtl
fimuls
into
mov
sub
dec
push
push
sub
nop
das
aaa
jbe
hlt
mov
sub
jg
sahf
sub
adc
push
testb
inc
and
fucomp
ds
rcrl
pop
lahf
or
jge
gs
popa
jne
loope
mov
loop
add
pavgb
cmp
repz
int3
rolb
mov
lcall
xchg
xor
mov
stos
jo
jne
sub
or
std
add
and
jmp
xchg
xor
jbe
loope
loop
fisubl
mov
fdivp
fildl
cmp
repnz
fs
push
cmpsl
call
call
xor
lock
fidivs
jb
jne
jg
out
jo
cmpsb
cmp
outsb
call
mov
repnz
iret
sbbl
xchg
sbb
movsl
cmp
cltd
les
mov
aaa
dec
popf
mov
pop
xor
mov
jle
xchg
dec
or
lcall
out
ficompl
out
mov
sbb
xchg
pop
cmp
or
or
cmp
push
jp
rclb
inc
shll
lret
lds
xchg
xor
scas
fisubrl
inc
in
gs
mov
pop
jp
inc
dec
mov
dec
je
fidivl
sbb
pop
ja
push
in
jge
push
xchg
push
jno
js
stos
imul
pop
pushf
shl
iret
divl
xchg
xchg
jmp
insl
test
or
lret
in
pop
imul
rcll
aad
into
lahf
jne
push
dec
shrl
sbb
out
imul
add
idiv
xchg
add
lea
inc
jo
jp
mov
lds
sub
jbe
les
sbb
xchg
sar
insb
dec
test
into
mov
and
dec
xchg
sub
fimull
or
stos
xor
xchg
lret
jg
out
jno
pop
xchg
mov
cmp
repnz
les
mov
mov
sbb
lahf
idivb
loopne
mov
pinsrw
test
add
scas
xchg
in
gs
imul
adc
inc
ljmp
inc
ja
addr16
adc
push
aas
push
inc
and
push
dec
sbb
adc
nop
fcompl
sub
fadds
call
sysenter
jmp
idivb
fcomp
push
int
jmp
aaa
out
test
movsb
push
inc
int3
push
fstps
xchg
out
mov
and
addl
fsubs
push
in
xchg
push
mov
popl
aas
ds
sbb
pop
jno
pop
dec
outsl
hlt
sbb
xchg
insb
push
cmpsb
mov
dec
out
or
add
jmp
xor
add
shlb
cmpsl
fidivl
test
movb
mov
hlt
xchg
imul
mov
sahf
test
lret
jbe
jnp
fisubrl
aad
lea
adc
dec
mov
xlat
jmp
mov
sbb
or
movsl
sub
daa
jne
stos
mov
xchg
lock
in
aam
popf
push
xchg
mov
adc
loope
pop
out
mov
insb
fucomip
rclb
dec
push
mov
xchg
jmp
sub
insl
push
push
das
fwait
jne
inc
jnp
xchg
add
pop
leave
adc
pop
in
adc
ss
loope
dec
out
addr16
in
imul
out
inc
das
xlat
imul
nop
out
arpl
inc
daa
pop
popa
mov
fcmovne
jb
les
data16
daa
nop
fistl
loop
xchg
push
call
mov
mov
xchg
shl
push
push
cmpsb
jbe
nop
push
pop
mov
cmpsb
sbb
neg
fdivs
lahf
inc
in
mov
pop
push
aaa
mov
aas
pop
repz
pop
fisubl
push
jg
mov
dec
xchg
jbe
ja
scas
or
cmp
fiaddl
push
ret
sti
pop
mov
cmpsb
mov
rep
pop
mov
lds
ficoml
pop
xchg
test
cltd
cwtl
mov
jne
in
nop
fstl
xor
adc
xchg
mov
outsl
sbb
sbb
mov
daa
pop
push
pmaxsw
mov
or
mov
dec
clc
push
mov
fwait
xchg
lods
fadd
pushf
fstl
repnz
sub
shr
jae
adc
in
hlt
stos
fsubrs
dec
outsb
cmp
movsl
sbb
jge
or
movsl
mov
xor
test
add
sbb
add
mov
pusha
jp
xchg
cmp
and
mov
jmp
add
lea
repz
xor
shll
cli
adc
xchg
fwait
in
dec
aad
nop
cld
imul
xchg
sbb
xchg
sbb
repz
dec
pop
sub
xor
add
push
adc
repnz
in
cmc
or
jp
das
mov
movsb
mov
imul
xor
jb
int3
jne
adc
mulb
xbegin
scas
in
std
int
popf
cmp
jp
dec
shlb
mov
fwait
das
mov
dec
popf
or
cmc
mov
sbb
out
call
out
fstl
pop
mov
sarb
cwtl
std
int3
jg
aam
movsl
push
popa
push
sti
lret
aad
or
adc
xchg
push
push
in
bound
xchg
pop
ljmp
rcr
ds
xor
or
out
ja
int
mov
dec
inc
mov
mov
outsl
jecxz
mov
rcl
sub
mov
shlb
dec
dec
int3
lcall
xchg
cmp
or
add
xchg
fwait
sbb
sub
mov
je
mov
in
pusha
outsl
add
sbb
xchg
add
jne
jno
jecxz
imul
pop
outsl
cmpsl
sbb
scas
aaa
push
cmpsl
insb
xor
inc
jb
rep
mov
insl
inc
or
dec
adc
aaa
ja
pop
outsl
icebp
ja
in
adc
leave
jb
imul
fistl
push
xchg
sbb
std
mov
adc
mov
jl
notb
test
adc
mov
xor
insl
jg
inc
jo
sub
push
push
and
dec
in
fstpt
int
fists
sbb
bnd
cmp
push
inc
repz
mov
jo
cmc
cmp
fs
dec
in
push
ficoml
cmp
fdivs
adc
or
loop
imul
sub
push
enter
sub
bound
addr16
and
lea
push
xchg
xchg
jl
mov
mov
jb
inc
xor
jb
xchg
dec
pop
push
test
fildl
jmp
bound
adc
jle
or
adc
cwtl
rol
fwait
inc
sbb
xchg
int3
sarl
mov
call
imul
addr16
xor
jno
data16
inc
pop
out
jle
jmp
decl
incl
mov
xchg
adcb
in
fistl
das
push
inc
test
mov
mov
shl
imul
mov
loope
cmp
sub
xchg
xchg
icebp
out
jbe
mov
dec
testb
sbb
lahf
mov
aas
enter
aam
rorb
jne
out
mov
push
xor
je
jbe
dec
pop
cmp
jmp
cmp
gs
push
fisttpl
enter
sahf
rcl
mov
xchg
sbb
imul
inc
cmp
repnz
jne
in
enter
insb
fsubl
pop
cmpsb
sub
inc
lahf
bound
dec
adc
stos
loop
aad
mov
mov
in
fcmove
add
inc
push
stos
mov
stos
mov
shr
jp
jecxz
jbe
pop
adc
mov
cld
xor
lcall
in
stc
lahf
shrl
outsb
cli
mov
inc
mov
adc
aam
rorl
scas
imul
or
test
rcll
pop
lahf
mov
in
inc
iret
push
dec
sub
arpl
push
mov
fcmovnbe
nop
fldcw
insl
jne
mov
fsubl
cmc
jmp
in
add
xchg
div
mov
pop
repz
xchg
mov
jne
xor
inc
mov
pusha
out
into
icebp
bound
mov
fcmovu
and
cwtl
add
cmpsl
hlt
jmp
pop
pop
cmpsb
xchg
mov
mov
cmpsl
jo
jmp
mov
testb
jno
inc
outsl
inc
adc
xchg
imul
ljmp
cmc
pop
xchg
push
inc
out
fildl
pop
rcrl
mov
fadds
or
mov
andb
loope
sub
add
div
xchg
push
insl
mov
add
jne
inc
mov
push
xor
xchg
xchg
std
xchg
jbe
jb
xchg
addl
cmc
outsl
xchg
push
mov
loopne
adc
mov
jo
pop
inc
mov
mov
cmp
js
or
into
mov
daa
jne
outsl
arpl
mov
fcomp
in
fmul
push
fisubl
imul
inc
push
out
or
and
fcoml
lahf
imul
mov
mov
in
dec
pop
stos
sbb
clc
leave
outsl
jp
shrb
mov
rolb
jne
repz
add
or
fbstp
hlt
push
jae
xor
mov
shr
fldcw
ljmp
fisubrl
sub
inc
and
scas
mov
stos
push
mov
lcall
test
add
or
cmpb
out
push
fcmove
fs
push
daa
les
stc
pusha
adc
cli
imul
scas
push
xchg
mov
imul
adc
hlt
mov
inc
scas
aaa
pop
mov
mov
outsl
mov
or
add
outsb
and
cmpsl
xchg
sbb
rorl
insl
fdivrl
hlt
pop
mov
mov
popf
xchg
sub
dec
loope
fiaddl
popf
rcr
std
push
int3
pushf
jle
pop
or
aam
cmpsl
jo
pop
stos
repz
insb
hlt
call
pop
imulb
ret
push
adc
imul
mov
ljmp
iret
cltd
jp
jne
cltd
and
in
dec
fmul
std
mov
int3
jg
rclb
in
test
and
hlt
out
dec
push
cmpsl
or
push
addr16
fcmovbe
dec
hlt
pop
stc
movsb
xchg
ja
cs
sbb
or
cs
mov
cmpsb
outsb
icebp
sbb
ja
dec
jne
movsb
arpl
jb
push
ljmp
add
nop
jge
xor
add
bound
ja
cmp
cmp
mull
fcoms
out
sbb
and
out
stos
ja
nop
imul
clc
fldl
scas
and
cmc
and
jp
xor
stos
out
stos
out
daa
dec
xor
jp
scas
mov
sub
outsb
sbb
or
mov
or
fdivs
xor
stos
xchg
into
notb
sub
arpl
adc
fs
outsl
ss
mov
pop
jb
xchg
mov
xchg
pop
out
or
cmp
out
jge
test
lcall
cmp
xchg
lahf
das
inc
xlat
sbb
stos
in
xor
push
push
dec
jbe
out
xor
arpl
push
shlb
cmc
mov
jne
xchg
push
xchg
push
xor
xor
nop
jno
push
mov
xchg
inc
and
aas
pusha
sub
pop
imul
xlat
inc
pop
lahf
dec
aaa
scas
ret
insb
inc
inc
pop
test
cmp
adc
mov
nop
sbb
divb
jp
xor
mov
int3
addr16
add
je
xchg
xlat
jo
inc
cmp
imul
mov
mov
pop
out
nop
fimuls
xlat
out
and
xchg
pop
xchg
jl
pop
add
dec
mov
lret
lcall
and
inc
test
dec
and
arpl
push
dec
scas
cmp
xor
inc
push
sub
pop
insl
pop
notb
jae
dec
mov
jp
nop
and
aas
into
aam
xor
cmp
adc
outsl
adc
ficoml
cmpsl
sub
jge
push
das
sub
out
cmp
dec
inc
scas
jg
fwait
mov
fst
insb
mov
xor
cmpsb
xchg
idivl
daa
inc
sub
into
cmp
fdivs
xchg
jbe
test
xchg
out
out
gs
xchg
inc
fisubl
xorl
push
fiaddl
jne
ret
push
dec
jmp
in
jge
cmc
push
out
insl
lret
push
in
push
mov
ss
xchg
scas
dec
push
xor
insb
mov
pop
scas
les
mov
mov
fdivrs
jmp
cld
cmpsl
sarl
push
jmp
push
jno
and
ljmp
pop
lods
mov
xor
dec
sub
jp
add
notb
inc
adc
pusha
stc
xchg
xchg
filds
xor
jne
xchg
sub
adc
enter
and
mov
hlt
aad
repz
jg
popf
mov
pop
xchg
cmc
sbb
mov
out
imul
ja
stos
lcall
push
das
xchg
mov
sbb
psubusb
mov
adc
data16
sub
test
repnz
iret
clc
mov
sbb
aad
repz
lret
cmpsl
jno
mov
mov
out
push
inc
les
sub
hlt
movsl
dec
rcr
jne
scas
mov
aam
imul
out
sub
bound
or
dec
lods
fiaddl
ja
nop
pop
dec
adc
mov
inc
adc
sti
aas
stc
mov
dec
pop
fistpll
or
bnd
jb
dec
stos
addr16
ror
fwait
jno
and
xchg
imul
add
mov
and
in
js
gs
mov
cltd
dec
inc
jo
inc
orl
loop
lcall
mov
mov
test
mov
sub
outsl
aaa
pop
or
popf
sbb
outsb
jecxz
add
jno
aaa
fcoms
pop
fnsave
clc
mov
icebp
mov
lcall
inc
ret
aas
outsl
scas
xor
xlat
sbb
push
cltd
jl
jg
fisubs
push
das
mov
cld
loope
or
sbb
mov
addr16
shr
filds
jmp
repz
das
fdivr
mov
mov
cmc
call
aaa
xor
mov
daa
inc
ret
dec
inc
lods
mov
lcall
mov
adc
sbb
inc
xchg
hlt
scas
mov
add
les
add
jl
pop
xchg
movsl
ja
jle
xchg
inc
idivl
fcoms
imul
jg
insl
imul
cs
aaa
and
sub
lcall
pushf
push
jp
pop
jb
nop
iret
cmp
out
jp
xor
pop
stos
mov
in
aad
sub
sub
mov
inc
popa
sbb
out
icebp
aas
sub
xor
dec
fldcw
aad
stos
repz
in
xor
imul
cmc
pop
es
mov
out
aaa
gs
loop
push
dec
jnp
xchg
push
jno
hlt
dec
mov
mov
or
iret
fisttpll
inc
cmc
cmc
out
xlat
mov
pop
ljmp
shll
cmc
xlat
out
icebp
mov
mov
push
outsb
movsl
push
add
idivl
ljmp
dec
arpl
testb
daa
xor
insl
scas
mov
out
fwait
xchg
push
testb
jg
xor
addr16
lock
je
mov
addr16
add
scas
stos
sub
push
call
xor
sahf
into
xchg
iret
mov
orl
mov
mov
xor
dec
ja
or
scas
in
mov
xor
out
sub
inc
test
inc
das
jp
add
stos
lock
mov
push
ja
loop
adc
ljmp
out
loope
adc
sub
out
jne
dec
xchg
jg
nop
ljmp
push
jp
rcrb
nop
jo
pop
aas
mov
mov
or
ja
push
hlt
adc
je
jb
cmc
pop
int3
xchg
clc
shl
stos
jp
adc
add
gs
mov
jae
jecxz
jne
fildl
hlt
dec
je
in
int
ljmp
sarl
es
imulb
push
lea
loope
jb
aam
jmp
imul
cltd
xor
xor
mov
scas
add
sbb
imul
fisubl
jne
outsl
popa
out
jp
imul
mov
cmp
stos
or
aaa
stc
sbb
xchg
imul
insb
or
pop
jecxz
inc
dec
lcall
xor
sar
mov
lret
jg
push
push
mov
in
fidivs
hlt
push
repnz
rcrb
cltd
lea
adc
icebp
mov
lcall
ljmp
pop
mov
test
das
sub
xchg
lods
ljmp
inc
mov
and
int
out
imul
icebp
jb
data16
sub
ficomps
pop
pop
mov
mov
xor
enter
lods
sub
inc
sbb
mov
adc
bound
jae
insb
mov
inc
in
rorl
outsl
test
sbb
pop
jb
pusha
xor
xchg
hlt
push
adc
aam
cmc
push
xchg
cmc
push
addr16
popf
lret
orb
inc
lock
jmp
pop
dec
roll
imul
mov
iret
xlat
repnz
lahf
and
subl
rolb
andl
in
push
test
jo
xor
hlt
popf
out
dec
neg
repz
movsl
jecxz
fidivrl
out
sub
dec
in
inc
iret
aad
and
mov
aaa
lret
sub
xchg
popf
jbe
lds
fbstp
fidivs
jbe
sub
xchg
push
mov
jo
lahf
lds
ret
loopne
adc
xchg
push
imul
fdivrl
aaa
sub
mov
in
lea
push
or
shrl
cmp
out
rorb
mov
iret
fdivs
pop
lds
jmp
mov
jno
scas
xchg
jne
ja
shl
xchg
and
jno
fimull
xor
pop
mov
xchg
daa
les
pop
repz
pushf
cmpsb
jnp
test
jmp
pop
adc
mov
das
add
out
push
dec
testb
das
ja
test
cmc
stos
ss
xchg
mull
neg
icebp
jo
push
xchg
rorb
aad
test
lahf
test
mov
jg
call
sub
lods
je
dec
bound
pop
lret
das
mov
dec
cmp
lds
add
imul
pop
push
or
icebp
loop
or
fidivl
scas
imul
sub
jo
or
xor
jo
lods
test
sub
pusha
sbb
or
or
enter
xchg
pop
out
sbb
mov
imul
aaa
adc
pop
push
pop
subb
lods
or
pop
mov
out
mov
push
outsb
xchg
sub
xchg
xlat
adc
or
das
mov
xchg
dec
je
dec
lahf
jns
xchg
fucomp
std
adc
inc
fstps
xor
jp
popf
hlt
or
lret
dec
mov
mov
push
pop
mov
mov
pop
xchg
lahf
mov
rclb
inc
imul
push
mov
aad
mov
arpl
out
addr16
mov
xchg
outsl
in
nop
neg
sub
sbb
jp
inc
js
into
pop
xchg
xchg
stos
push
pop
lds
je
mov
loop
jae
fcomp
mov
out
stos
dec
adc
ss
push
hlt
and
insl
cmpsb
mov
cmc
ficoml
push
outsl
mov
cmc
in
jne
push
aam
enter
loopne
insb
xor
jp
loopne
push
rclb
push
idiv
cmp
jp
and
xorb
mov
call
in
sub
xlat
push
shlb
adc
nop
push
and
dec
and
out
insb
push
jne
hlt
lods
pop
dec
push
push
and
push
loope
in
sahf
adc
imulb
xchg
sub
push
xchg
bound
divb
jbe
jbe
cmpb
mov
mov
cmp
insb
lods
mov
jae
jne
int3
fisubrs
insl
mov
jae
repnz
addr16
jnp
xchg
and
xor
roll
dec
aaa
clc
in
jp
loope
mov
push
mov
ja
xchg
sub
cwtl
mov
xchg
stos
ja
xchg
shlb
add
repnz
jnp
dec
ficoml
jne
cmc
mov
push
bound
sbb
outsl
push
push
fimuls
pop
mov
or
cmc
sub
xor
mov
push
cltd
mov
testb
and
jbe
xchg
and
aaa
pop
test
lock
push
xchg
or
xor
inc
in
mov
addr16
fs
xchg
icebp
out
rol
inc
scas
stos
dec
ja
jae
aad
jp
rcll
je
mov
aaa
fcmovbe
mov
mov
xchg
fidivrl
push
push
sar
aaa
dec
int3
push
mov
lret
adc
mov
push
negb
mov
mov
js
pop
mov
cs
inc
ja
mov
pop
pop
inc
inc
or
mov
mov
test
addr16
jge
mov
fnstenv
pop
mov
or
out
or
adc
pusha
fbstp
pop
push
std
xor
test
cmp
out
mov
rolb
sbb
sub
enter
dec
fsubs
mov
pop
ljmp
mov
outsl
mov
ror
cmp
fisubrl
xchg
jge
and
lea
push
xlat
fsts
test
bound
iret
add
dec
dec
xchg
xchg
sub
pop
idivb
iret
popf
xrelease
add
mov
jne
xchg
js
lock
adc
xchg
mov
mov
cwtl
call
rcl
pop
das
nop
addr16
inc
adc
pop
xor
and
cli
loopne
push
dec
xchg
inc
loop
insb
mov
enter
inc
scas
out
shrb
je
cmc
mov
cmp
xlat
gs
xchg
ja
sub
cmp
jns
lahf
dec
fdivr
stos
adcb
int3
les
mov
mov
and
pop
mov
out
push
fnstcw
lea
jne
jo
xor
jo
scas
mov
jae
es
xor
sub
test
je
ds
inc
inc
ret
or
and
cmp
popf
add
into
or
mov
shl
mov
cmc
repnz
icebp
daa
repnz
addr16
prefetch
or
enter
fisttps
pminsw
fcompl
imul
je
hlt
fwait
je
mov
sbb
xor
mov
cmc
jge
jp
hlt
out
mov
repz
mov
lcall
iret
imul
and
xchg
mov
int
notb
pop
hlt
int3
sub
lret
lods
push
pop
pop
pushf
push
fwait
xchg
xchg
or
inc
pop
rcll
jbe
cmc
add
xchg
outsl
enter
cmpsb
mov
dec
xchg
out
in
and
xchg
dec
icebp
jbe
hlt
push
enter
roll
rol
aam
lds
xchg
jbe
inc
xchg
into
sbb
cmc
fs
shlb
out
out
push
mov
jp
popf
cwtl
sub
outsl
sbb
xor
out
pop
lret
dec
icebp
inc
jnp
pop
xchg
popl
lret
jne
loopne
mov
mov
das
lret
shll
cmc
test
and
lods
xchg
mov
mov
jg
out
lcall
call
aaa
pop
notb
push
or
in
loope
js
cmp
push
add
and
jbe
mov
mov
fildll
mov
cmpsb
sub
out
out
xlat
cli
clc
inc
daa
push
fs
mov
outsl
imulb
cmpsl
or
pop
test
sbb
or
xchg
or
addr16
test
add
adc
aam
out
push
into
ds
xor
jne
mov
inc
sbb
repz
adc
inc
inc
stc
daa
xchg
push
and
aaa
mov
nop
out
xor
inc
repnz
repz
rep
ficoml
dec
mov
xlat
fcomps
sbb
jne
mov
mov
mov
rcrl
pushf
xchg
sti
push
jno
mov
adc
in
mov
dec
lea
leave
inc
push
push
daa
out
jae
inc
dec
xor
divl
out
aaa
push
cmc
cmpsb
in
push
or
mov
ret
xchg
repz
inc
test
sbb
roll
jp
inc
fs
pop
push
add
push
sub
add
fcomps
insl
shlb
in
inc
aaa
inc
repnz
xchg
fucom
lods
xrelease
or
cmp
pop
jp
sbb
in
fisttpl
aaa
jp
pop
in
ss
nop
std
test
in
jb
rcr
test
mov
sbb
sbb
xchg
psubsw
xchg
or
out
cwtl
or
inc
mov
flds
mov
cmpsl
dec
out
mov
inc
das
xorb
push
mov
insb
xor
xor
mov
sti
or
mov
pminsw
int
sub
rep
pop
jg
bswap
bound
add
push
ficomps
dec
xor
push
xchg
push
xchg
mov
cmp
mov
lock
pop
imul
das
mov
in
xchg
mov
jl
pop
xchg
cltd
and
out
ja
scas
jp
xchg
mov
pop
inc
sub
dec
and
mov
imul
pop
sbb
dec
loop
out
ss
xchg
mov
ret
test
mov
fstps
inc
sub
icebp
icebp
push
fsts
fidivrl
aaa
mov
imul
repz
jecxz
cmp
cmp
push
mov
scas
sbb
in
pop
xchg
adc
je
sub
popf
scas
pop
lahf
and
dec
ficoml
daa
shll
dec
sbb
jmp
push
inc
dec
stc
cmpsb
test
inc
pop
push
pop
testb
mov
xchg
cmc
xchg
out
mov
inc
sarl
xchg
cmpsb
das
subb
stos
xor
adc
out
iret
cmp
es
xlat
setnp
sub
popa
clc
cmpsl
inc
dec
je
mov
pop
ja
test
imul
repz
stos
aaa
movsb
jbe
loop
pop
mov
cmp
sub
scas
dec
pushl
mov
fists
push
mov
sub
icebp
inc
add
xor
sbb
into
dec
adc
aad
inc
sbb
xchg
mov
pop
subb
push
fisubl
aad
mov
mov
cmc
jmp
fisttpl
mov
adc
pop
sub
mov
pop
or
repz
cmp
faddl
dec
das
xchg
rol
dec
xchg
mov
bound
popa
int3
nop
sbb
mov
movsl
fs
jp
mov
mov
xorb
lcall
jecxz
add
mov
sub
mov
icebp
xchg
cwtl
cld
inc
cwtl
push
fisubrs
lcall
xor
outsl
jne
out
sbb
mov
pop
imul
jbe
fisttpl
and
sub
push
dec
cmc
repz
loope
adc
jp
ret
mov
testl
out
fucomi
in
aam
mov
shl
stos
shl
fcmove
negb
in
jmp
ffree
xchg
into
inc
mov
pop
in
xchg
push
ffree
rcrl
notb
and
scas
mov
icebp
inc
mov
vpmacssdd
repz
js
mov
fisubs
arpl
mov
xchg
sbb
lret
loopne
mov
add
or
rcr
cmpsw
mov
sub
pop
pop
jecxz
push
xchg
pop
loope
push
imul
pop
ss
or
loope
test
mov
adc
xchg
je
xchg
aad
cmc
pop
jg
int
testb
pop
repnz
lea
add
inc
std
subl
sub
xchg
inc
sub
or
sarl
mov
fldenv
aam
in
ret
repnz
xchg
sbb
je
outsw
adc
adc
mov
lods
jne
popa
rcrl
mov
mov
cmc
sbb
and
dec
jnp
test
outsl
test
lahf
int
aad
int
ret
pop
jb
clc
hlt
daa
arpl
push
xchg
shl
jae
mov
es
aad
int
inc
sub
inc
or
out
inc
xchg
arpl
gs
push
mov
or
fsts
outsl
rcl
xchg
xchg
insl
sub
lret
int
push
mov
jbe
imul
clc
fdiv
or
stos
mov
cld
mov
shr
sbb
pop
push
in
das
dec
push
mov
test
mov
or
sbb
fcomps
lea
out
das
mov
xchg
push
je
mov
daa
mov
popa
cmc
xchg
jl
jbe
out
imul
sahf
subb
addr16
and
adc
inc
mov
add
sbb
push
fidivrl
cmp
pop
ret
pop
int3
sbb
dec
arpl
push
mov
sub
push
in
push
mov
icebp
pop
xchg
push
dec
int
sahf
in
pop
fiaddl
mull
popf
mov
xchg
je
fcoms
out
dec
xor
divb
or
jnp
js
mov
add
add
cmp
dec
adc
aad
xor
pop
adc
push
lods
arpl
call
jo
xchg
sti
fbld
test
or
movsb
repz
fldenv
int
gs
adc
cmp
cmp
mov
pop
mov
fidivrs
jae
xchg
inc
or
xor
iret
mov
cmc
ret
lods
das
push
adc
ja
push
xchg
ds
mov
aaa
pop
xchg
mov
loopne
ret
or
sub
gs
sub
ror
or
or
loop
jg
jp
jmp
fwait
xchg
mov
fisttpll
xlat
mov
out
out
out
lahf
jp
dec
div
call
jmp
movsl
add
lods
mov
imul
xlat
jno
push
mov
mov
cmp
and
inc
addl
adc
jne
ja
outsb
dec
push
dec
mov
mov
out
imul
push
daa
cli
enter
icebp
gs
nop
out
mov
out
nop
inc
in
inc
ss
dec
sub
adc
fisttpl
enter
cld
out
roll
add
cmp
call
and
iret
shlb
jecxz
repz
jnp
aaa
lods
das
cmp
repz
cld
inc
xchg
mov
lock
jne
xlat
mov
dec
fidivrl
sbb
inc
fcomp
jne
roll
test
sub
fbstp
xchg
ficompl
enter
or
and
dec
adc
pushf
fsub
test
mov
xchg
dec
mov
or
xchg
mov
sbb
pusha
fidivs
jp
cmpsb
aaa
cmp
push
xor
xor
mov
scas
and
pop
gs
sub
mov
fistl
sbb
sub
cli
test
fidivl
scas
aam
in
bswap
mov
xchg
lahf
xchg
pop
push
lret
xor
fwait
xchg
mov
jo
sbb
or
repnz
adc
jno
mov
add
mov
shl
std
gs
dec
fisttpll
dec
mov
xor
mov
movb
das
sbb
inc
sub
mov
shll
stc
stos
xchg
push
shll
push
add
jmp
cmpsl
out
std
cltd
lods
add
xchg
and
sbb
and
repz
pop
cs
insb
lret
dec
pop
mov
xor
and
inc
rorb
stc
mov
ja
adc
in
pusha
sub
pop
cmp
xchg
push
repz
mov
inc
mov
xchg
sub
cs
stc
mov
xchg
pop
stos
jae
jns
insb
mov
ljmp
push
imul
xor
das
lcall
in
pop
repz
inc
cmc
cmpsl
sub
test
inc
imulb
push
inc
int
divb
rcll
outsl
daa
repz
inc
cmc
cmpsb
xor
inc
mov
inc
addr16
popa
scas
cmc
pop
jae
ud0
mov
jb
int3
iret
les
out
mov
fisttpll
ret
add
popf
into
fwait
loopne
jp
fcoms
lods
pop
dec
repnz
mov
gs
mov
pop
sub
mov
dec
in
push
out
mov
decb
jmp
insl
fcoms
xlat
out
cpuid
cmc
fnstcw
das
inc
in
dec
sbb
jnp
prefetchwt1
icebp
sbb
push
pop
mov
dec
sarb
outsb
jo
inc
pop
inc
inc
jle
xor
jb
mov
or
jnp
push
into
aaa
iret
cmp
setno
or
sub
sub
push
aas
decl
push
push
adcl
push
pop
gs
mov
and
dec
add
sub
pop
test
mov
jae
imul
repnz
scas
inc
scas
fld1
inc
loope
add
rcrl
and
mov
xor
adc
ja
xchg
mov
xchg
imul
push
adc
xor
sbb
pop
mov
popf
in
in
dec
aas
int3
roll
xchg
xor
mov
repz
inc
xchg
punpckhbw
mov
scas
in
insb
imul
lahf
lea
add
shll
mov
mov
push
xchg
jg
jmp
dec
pop
and
jbe
mov
repz
ja
pop
les
pop
xchg
and
scas
shlb
int
xchg
ljmp
mov
nop
lahf
mov
mov
shr
ja
mov
ficompl
inc
lods
outsl
add
jl
mov
xchg
and
push
movsl
test
fsubrs
scas
inc
inc
in
sbb
movsl
mov
pop
lret
insb
add
clc
inc
pop
pop
mov
mov
sub
mov
xchg
int3
xchg
fbld
jno
std
xchg
lds
adc
iret
xchg
sub
xor
out
shll
sub
lcall
pop
adc
jg
sub
nop
mov
mov
cmc
ds
dec
fdiv
xlat
roll
xlat
add
in
cli
shlb
push
push
mov
aaa
hlt
inc
popf
or
mov
lcall
dec
insb
xor
gs
pop
in
lods
shr
aam
sub
pusha
jecxz
popf
lahf
jl
dec
negb
repz
mov
inc
in
jnp
andl
add
cmp
int
xor
repnz
mov
lock
mov
xchg
adc
pop
jns
je
xchg
out
adc
outsb
icebp
jmp
out
inc
in
js
pop
iret
mov
sbb
cmpsl
and
lret
adc
nop
fidivrl
inc
pop
sbb
and
sbb
in
fcmovbe
in
push
or
mov
arpl
hlt
mov
movsb
inc
jne
xchg
mov
inc
out
in
and
loope
jmp
adc
cmc
xchg
push
jecxz
push
repz
iret
push
fsts
mov
adc
mov
or
sub
in
lods
insb
inc
inc
shll
add
dec
xchg
iret
mov
leave
push
mov
xchg
inc
lahf
je
stos
sbb
adc
push
ljmp
out
ja
xchg
das
inc
jg
mov
jge
xchg
sahf
int
loopne
ljmp
mov
call
push
jns
push
sub
repnz
out
ja
jp
pop
in
loop
stos
sbb
fidivl
nop
jecxz
stos
cmp
adc
cmpsb
test
mov
mov
ss
arpl
test
xor
data16
iret
out
jp
xor
adc
testb
sub
scas
adc
frstor
adc
popl
ljmpw
inc
jnp
adcb
dec
mov
and
movsb
inc
aam
fdivl
or
mov
cld
imul
jp
add
ret
notl
cs
cmpb
nop
cwtl
push
sub
out
clc
fst
sbbl
dec
jno
fsub
sbb
xchg
mov
int
sahf
cmp
pop
mov
aad
clc
daa
aam
cmc
inc
sub
dec
mov
push
decl
pop
and
inc
jns
add
pop
push
aad
cltd
mov
flds
sbb
outsl
xchg
sbb
mov
jae
into
ja
call
pusha
xlat
pushf
in
jbe
and
cmp
stos
adc
jg
push
mov
into
cmpsb
cmp
sbb
ret
xor
es
jl
inc
repnz
fisubrl
dec
icebp
loopne
cmp
pop
sbbb
mov
cli
xor
pop
mov
aad
push
fsubp
fcmovu
pop
imul
rcr
sbb
cmpsb
xchg
repnz
aad
mov
clc
cmpsb
inc
mov
fs
inc
loope
jp
jnp
pop
sbb
sbb
mov
xchg
mov
xor
xor
mov
inc
push
fisttpl
sahf
in
mov
or
repnz
aam
jne
fistl
mov
inc
xor
out
sbb
mov
mov
push
cmpsb
xchg
lcall
addr16
stc
das
addr16
outsl
scas
es
popl
xchg
inc
fbstp
rolb
out
pop
icebp
enter
fldt
jo
mov
and
int3
aad
cmp
dec
inc
lds
mov
scas
out
scas
pusha
push
pop
push
pop
mov
mov
out
mov
sahf
pop
fnstcw
mov
shlb
mov
and
cmpsb
add
xchg
cwtl
sbb
data16
or
push
inc
push
in
clc
inc
jecxz
mov
mov
dec
fidivrl
and
jne
inc
fimull
mov
xor
fcmovbe
push
add
sub
das
sbb
dec
mov
insl
outsl
xchg
mov
test
fucomp
cmp
push
xor
cmc
bound
jne
neg
xor
jecxz
jbe
mov
jo
xor
out
xlat
or
xor
and
out
jmp
lds
mov
aad
imulb
testb
cmc
or
xor
jo
xor
call
mov
ret
shll
shrl
pop
jb
inc
stos
dec
in
lahf
push
lahf
fcmovnbe
dec
dec
add
call
xchg
mov
jmp
mov
movsl
or
push
or
movsl
jne
notl
push
inc
popf
sub
and
cmc
in
andl
nop
jae
iret
divb
out
repz
mov
dec
addr16
mov
ficompl
shlb
and
jmp
dec
mov
int
xchg
sbb
out
push
rcrb
adc
shl
cmpsb
movzbl
fucomi
add
add
aas
or
fstpt
nop
sub
pop
lds
cmp
or
aad
jp
nop
xchg
icebp
mov
mov
ficompl
adc
lea
jp
xchg
cmpsb
sub
ret
out
push
ljmp
or
out
cmp
stos
jno
push
fisttpl
jne
fstpl
mov
dec
cwtl
and
jb
imul
lods
add
jae
push
ja
and
cmc
push
mov
push
mov
rolb
cmc
xor
cli
stos
fnstcw
mov
ret
inc
imul
imul
jmp
inc
cmpsl
xor
xchg
pop
fucomip
pop
fiaddl
cwtl
scas
test
xchg
fstps
stc
pop
mov
leave
xor
test
sub
mov
pop
fldenv
fildl
mov
xor
inc
pop
cmpsb
or
mov
scas
jecxz
jmp
sar
xchg
ss
sub
cmpsl
jp
dec
aad
cmp
cmp
scas
or
aaa
pop
repnz
in
pop
adcl
push
xchg
mov
mov
sub
inc
jl
mov
ficoml
std
subl
cmp
mov
dec
mov
ficompl
mov
out
or
out
cmp
fidivrl
es
out
loop
je
dec
arpl
fstcw
xor
mov
push
inc
popa
outsl
mov
outsl
sub
jnp
in
jno
push
outsl
popa
out
adc
lcall
mov
ret
shll
pop
adc
jae
lahf
hlt
cmp
mov
or
adc
jne
pop
cmp
or
adc
sbb
xor
cmp
xor
push
fstps
cmp
push
inc
pop
mov
dec
dec
jne
nop
and
xor
out
aad
cmp
jns,pn
adc
in
mov
mov
imul
or
jecxz
pop
xlat
icebp
out
push
jp
into
sub
nop
mov
outsb
xchg
xchg
js
icebp
in
sbb
enter
jb
stos
jae
cmc
pusha
gs
xor
out
outsl
push
dec
clc
vpshufd
pop
push
inc
push
mov
pop
jbe
cmp
jp
push
jb
sahf
xchg
int3
mov
mov
cmc
fs
std
lret
xlat
loope
push
fidivl
cmp
cmpsl
pop
ss
sbb
mov
in
dec
gs
dec
in
clc
icebp
lock
cmp
in
into
cmp
adc
xchg
xchg
ja
addb
jp
mov
mov
jnp
dec
pop
lahf
outsb
jecxz
imul
inc
rcll
ljmp
stc
rorl
fists
lock
rolb
fwait
push
jno
repnz
mov
out
dec
and
mov
rcl
adc
mov
daa
xor
mov
nop
add
lahf
xchg
mov
out
rcrb
jns
mov
cmpsb
or
jns
int
adc
inc
jne
int3
xchg
fwait
cmpsb
adc
adc
popa
xlat
cmpsb
fnstsw
mov
shll
adc
in
xor
scas
sar
jo
adc
mov
jae
out
pop
in
shrl
jmp
rorb
xor
notl
stos
mov
nop
dec
jbe
loop
pop
out
mov
dec
jg
mov
add
mov
adc
sbb
add
sbb
lret
cmp
mov
inc
and
mulb
and
jecxz
aaa
xchg
fistpl
jmp
out
ljmp
xchg
ja
fisubl
sbbb
fidivl
ficompl
imul
inc
mov
insb
adc
pop
jne
cmp
ret
xor
inc
hlt
sbb
addr16
push
loop
add
aad
xchg
sub
popf
mov
es
push
xlat
pushf
hlt
fisubrl
sub
addl
push
call
enter
loop
push
pop
insb
mov
push
inc
insb
pusha
jns
mov
fidivs
dec
hlt
imul
or
xchg
mov
ja
loope
inc
repnz
inc
mov
lahf
ss
pop
bound
adc
pop
add
inc
mov
mov
sbb
mov
ss
dec
insb
push
dec
adc
punpckhwd
mov
icebp
dec
mov
jb
pop
xor
push
mov
xlat
pop
in
xchg
mov
imul
inc
scas
cmp
push
out
cmp
les
int3
fimuls
aam
jne
mov
loop
xchg
sbb
adc
sbb
ja
lret
imul
add
push
inc
outsl
hlt
frstor
add
arpl
int3
imul
and
mov
imul
push
adc
mov
cmp
sub
push
xlat
out
fistpl
jo
mov
lock
aad
test
jnp
cwtl
jecxz,pt
cmc
jp
mov
xchg
test
insb
jg
imul
mov
jecxz
test
out
dec
call
dec
mov
jp
sbb
rcrb
xchg
imul
ja
lahf
pop
sbb
pop
jp
fisubs
mov
add
sbb
mov
into
pop
pop
mov
inc
out
push
movsl
mov
mov
hlt
xor
cmp
jbe
sbb
daa
jae
out
out
ljmp
lea
lcall
out
xchg
xlat
movsl
int3
inc
jmp
movb
js
sub
out
insl
mov
arpl
mov
aad
outsb
inc
xor
inc
fimull
popf
and
dec
je
mov
and
pop
and
mov
push
inc
ret
cwtl
xlat
mov
aas
out
xchg
or
or
fs
push
scas
or
aad
inc
mov
pop
stos
imul
sub
xor
fwait
push
jecxz
or
stos
movzbl
out
imul
test
pop
in
ret
mov
add
inc
pop
js
lods
repz
aaa
outsb
pop
stos
jg
mov
imul
jmp
jp
push
push
xchg
dec
push
cmc
cli
mov
js
mov
out
xchg
dec
pop
ds
xor
mov
inc
dec
xor
cmpsb
cmp
push
out
xchg
sbb
icebp
add
lea
shll
inc
cwtl
outsb
je
ds
push
fsubrs
test
dec
imul
cmp
jns
sbb
mov
cwtl
mov
pushl
lock
add
xchg
inc
pop
fnstcw
pop
subb
pop
aad
xchg
pop
and
fdivrs
mov
mov
and
dec
xlat
outsb
mov
out
dec
div
into
xlat
loopne
dec
xlat
in
pushl
xchg
dec
movsl
mov
int
xchg
out
fsubr
int
jb
and
and
repz
adc
test
ret
jmp
cmc
jp
push
lret
fdivrs
xor
mov
gs
stos
push
leave
sub
mov
inc
mov
xchg
inc
cli
popa
xchg
and
jecxz
mov
xor
inc
mov
pop
ror
and
mov
xchg
movsl
out
and
imul
lahf
xor
jmp
jae
mov
insl
pop
adcb
mov
sbb
cmp
rcrb
sub
mov
xlat
and
add
shrl
cmpsb
xchg
cmpsb
xchg
add
adc
int
xchg
sbbl
mov
mov
push
ret
repnz
pop
repz
jno
mov
xchg
fstl
inc
in
xchg
xchg
popf
in
pop
scas
jge
fwait
cmc
mov
outsb
push
pop
xchg
jle
int
xchg
inc
mov
repz
cmp
addr16
pop
repz
adc
sub
jnp
jae
rorl
incb
jmp
xchg
dec
jne
shl
sbb
idivb
jae
mov
mov
xchg
dec
xor
xchg
fucompp
lcall
and
pusha
movsl
jecxz
xorl
loop
int3
adc
pop
nop
or
inc
mov
mov
lcall
aas
mov
mov
xor
je
or
sub
or
mov
jno
mov
pop
xchg
sub
dec
dec
cmp
mov
cli
repz
adc
lock
loope
out
leave
xor
imul
in
mov
mov
mov
out
rcl
jp
inc
mulb
mov
inc
scas
mov
daa
add
std
dec
test
incb
jecxz
inc
outsl
xlat
push
pop
div
fxrstor
outsb
add
scas
mov
xchg
cmc
push
mov
cmpsb
frstor
mov
mov
mov
orl
pop
aad
inc
outsl
mov
push
in
js
xor
jmp
push
lock
fsubl
cmp
mov
stos
lahf
icebp
mov
xlat
or
cmpsb
mov
js
call
cmp
xchg
imull
xor
imul
sub
and
imul
jae
or
mov
cmp
sbb
out
stos
mov
mov
jne
in
shlb
jecxz
inc
ret
jmp
lock
xlat
dec
jo
call
out
das
jo
sti
test
jg
jno
lods
ljmp
xchg
addr16
sub
icebp
imul
sub
inc
mov
out
xchg
mov
scas
fs
dec
and
lahf
jp
dec
test
call
repnz
dec
lcall
push
or
push
jmp
rorl
jae
dec
jmp
pop
lock
inc
ret
xchg
pop
inc
addr16
push
arpl
xchg
mov
nop
add
jle
jo
pusha
lock
into
dec
cwtl
jp
or
mov
xor
ja
sub
fcmovb
cltd
xor
push
inc
and
ffree
xchg
fsts
mov
mov
imul
inc
pop
out
cltd
jmp
adc
cmc
or
gs
imul
enter
in
and
dec
mov
xchg
cmp
aas
push
push
jo
adc
mov
xor
aam
sti
sbb
mov
mov
push
mov
lcall
stos
lea
sub
push
shl
mov
mov
imul
inc
insl
xor
stos
dec
lock
cmpb
arpl
adc
cmc
das
ja
jp
stos
mov
int3
or
dec
xchg
sub
outsl
pop
sub
icebp
pop
jp
jo
push
jle
push
dec
enter
out
jg
adc
rcrl
push
orl
mov
insb
inc
pop
xchg
xchg
adc
adc
mov
xlat
sub
scas
mov
cmp
and
jne
jno
sbb
xor
mov
rcl
xchg
mov
cmpsb
aaa
fbstp
scas
in
mov
xor
or
mov
inc
jno
xchg
aas
xchg
lock
sub
loop
cmc
out
inc
inc
dec
jbe
fidivrs
pop
pop
jbe
lods
ja
mov
leave
inc
push
inc
xchg
sahf
data16
ljmp
je
mov
shl
loopne
mov
mov
cmc
je
nop
js
pop
pop
or
jo
pop
push
pusha
mov
jno
push
in
std
mov
int3
scas
adc
fisubrs
in
sbb
std
mov
jb
or
int3
sub
aad
shl
in
push
jbe
sbb
adc
xor
push
sub
jo
jae
add
sbb
je
adc
test
jb
sti
rep
stos
dec
in
xlat
cld
mov
das
push
sbb
cmp
or
in
add
xor
sarb
in
inc
mov
and
mov
cmpsb
repnz
mov
cpuid
rorl
cmp
xchg
mov
aaa
iret
inc
sbb
pextrw
jno
subb
jne
cmpsl
xor
out
rep
divl
add
filds
imul
xchg
cmp
add
fnstenv
rorb
mov
dec
jbe
cmp
fmull
dec
jg
dec
test
in
lret
das
xrelease
fcmovnbe
and
testb
test
aas
test
test
cmpsl
xor
cmp
imul
or
jae
push
lret
mov
scas
loope
ss
outsl
in
popf
cld
ficompl
pop
mov
push
mov
mov
stos
rorl
or
cmpsl
lods
repz
xchg
jbe
xchg
mov
adc
cmc
shll
xchg
insl
shr
ret
adc
mov
xor
adc
icebp
jbe
stc
lods
out
repz
mov
jl
test
lea
xchg
xor
xchg
out
bnd
jne
jne
jb
push
mov
xor
out
out
push
adc
je
icebp
int
outsb
jne
outsl
mov
into
in
rorl
push
repnz
out
xchg
xor
out
outsl
cmova
mov
out
rcrb
outsb
ja
repnz
scas
or
jmp
scas
cmpsb
jle
imul
int
outsb
jne
outsb
mov
and
rorl
push
repnz
jmp
cs
call
push
cmc
lock
pop
push
ror
jo
repz
pop
imul
call
cmp
out
cmc
push
ret
mov
int3
mov
std
xor
adc
out
inc
aad
fisubs
iret
repnz
inc
or
in
scas
int
je
daa
scas
out
pop
in
bnd
scas
shll
mov
push
fistl
pop
and
xchg
shll
repz
sbb
loop
adc
xchg
stos
lds
setl
loope
cli
div
and
inc
out
adc
xchg
in
pusha
lahf
rol
pop
mov
test
adc
lahf
shl
std
adc
aam
mov
dec
in
fidivs
sub
aam
in
mov
and
fst
xor
mov
loopne
adc
fidivs
or
pop
rcll
inc
jne
adc
repnz
jns
xor
in
mov
xchg
sub
pop
fdivp
int
je
daa
scas
outsl
and
and
dec
outsl
rcl
push
aam
mov
adc
pop
fimuls
int
push
mov
idivb
aad
mov
pushf
mov
not
imulb
fidivs
mov
ret
cmc
shrl
movsl
test
rorb
jne,pn
lret
shll
push
repnz
repz
lock
xchg
fidivs
shrb
repnz
dec
nop
lret
adc
daa
scas
jo
pop
pop
jno
push
jne
inc
jbe
lock
scas
xor
mov
jne
adc
subb
iret
jne
sub
out
imul
rorl
imul
xor
rorb
mov
cmp
lret
in
sbb
fwait
mov
insb
aam
xchg
mov
aam
pop
jmp
sub
aad
add
cmp
hlt
or
pop
mov
jo
not
mov
std
cmc
test
jne
shll
xor
mov
movsb
adc
divb
shll
std
icebp
imulb
xchg
je
stos
aam
mov
lods
cmpsb
aaa
movsb
out
xor
xchg
outsl
lahf
lsl
out
adc
adc
insl
notb
dec
in
addr16
push
imulb
or
addr16
xchg
imul
mov
push
dec
xchg
imul
lahf
stc
aam
mov
sti
daa
call
xchg
pop
xor
and
mov
aam
mul
daa
scas
in
inc
in
out
imul
pop
aam
imulb
scas
jecxz
leave
in
out
imul
mov
pusha
imul
daa
scas
dec
in
out
imul
adc
pop
divb
xor
loopne
xchg
aam
lahf
aam
idivb
scas
aam
fistl
xchg
rcrl
sti
cmp
cmc
pop
ficomps
mov
jbe
popl
cmc
loop
fsubrs
mov
aad
push
mov
ja
push
leave
daa
sub
aam
imul
ret
testb
hlt
shrl
imul
jb
jae
shll
scas
repnz
imul
imulb
sarl
hlt
div
addr16
lcall
outsl
pop
mov
aad
jbe
addr16
and
outsb
insl
loope
in
insl
inc
xchg
insl
addr16
movsb
shr
cmc
push
fisubrs
mov
aad
or
inc
je
sub
xchg
or
scas
ljmp
stos
pushl
pusha
jp
cmp
pop
std
ficoml
pop
mov
xor
jmp
out
jp
incb
cs
and
pop
imul
mov
jecxz
or
dec
fisubl
jmp
xor
mov
aaa
nop
push
adc
sub
push
out
adc
fs
shl
mov
rolb
icebp
fidivs
in
push
nop
push
pop
mov
sub
pusha
mov
sbbb
sub
rclb
sub
mov
jp
shll
or
cmpb
lret
cmp
call
arpl
mov
adc
jne
js
ja
inc
repz
jmp
sub
fidivs
dec
mov
leave
jbe
mov
add
test
mov
fidivrl
in
ja
pop
mov
iret
xor
testl
ljmp
ss
iret
icebp
fxch
cs
out
ja
bound
call
cmc
jne
imul
addr16
mov
xchg
in
jno
adc
adc
imul
cmpsb
push
jmp
push
push
add
and
or
push
push
push
mov
sub
outsb
jp
jae
add
xchg
xlat
out
pop
adc
cmp
ret
out
or
inc
cmp
push
div
neg
or
addr16
push
in
mov
scas
repz
pop
or
xchg
or
mov
je
inc
xchg
adc
cld
xor
in
adc
pop
or
dec
push
mov
jg
dec
int3
adc
mov
gs
mov
out
repnz
arpl
mov
das
cmc
xchg
jae
vcvtdq2pd
fimuls
pop
dec
stos
je
popa
test
loopne
shl
jae
pusha
je
out
lock
sarl
jne
jo
pop
lds
out
aad
fidivrs
stos
out
ja
test
in
cvtdq2ps
xorl
xchg
je
fnsave
xchg
push
xchg
shll
sub
adc
fcmovnb
sti
hlt
xlat
jno
jbe
scas
dec
pop
aad
xchg
cmpsb
outsl
pop
insl
xchg
xchg
popf
les
jbe
push
rol
leave
xor
add
stos
jne
xor
out
hlt
adc
mov
adc
repz
dec
outsb
mov
jae
int
lock
repnz
mov
out
rcl
mov
push
les
sarb
rorl
cmp
mov
mov
rcll
lods
mov
and
adc
lea
test
mov
sub
jne
rorb
xchg
inc
lret
jle
in
jne
es
inc
jle
stos
jne
mov
jle
sbb
into
in
push
sub
bound
jae
add
jbe
mov
cmp
pop
mov
add
mov
je
repz
xor
and
mov
fmull
xchg
mov
into
lcall
sti
aam
outsl
icebp
je
mov
adc
or
and
pop
dec
push
jmp
jne
roll
dec
shl
push
popa
mov
sbb
inc
xchg
in
cmc
pop
jp
xchg
dec
sub
pusha
scas
mov
aad
imul
clc
xchg
xchg
loopne
cmp
jne
imulb
jg
xchg
pop
into
sahf
xlat
cmp
xorl
push
in
add
xlat
push
xchg
hlt
fiaddl
push
jbe
mov
or
adc
ret
jp
gs
adc
xlat
subb
push
sub
xchg
rcr
ds
push
lret
xlat
dec
pop
test
mov
pop
mov
or
mov
mov
xchg
in
ja
repz
sbb
aas
push
imul
scas
xlat
and
ljmp
movsb
lret
or
jl
push
cltd
and
out
xor
adc
leave
int
inc
jno
rcl
xor
movsl
xchg
jp
stos
mov
pop
int3
adc
fimuls
push
lahf
mov
jp
das
mov
adc
jae
xchg
jbe
pop
pop
addr16
push
ja
test
xchg
xor
dec
adcb
pop
jp
jmp
mov
cmc
das
movsb
movsb
bound
mov
roll
mov
call
pop
mov
stos
aad
push
sub
xchg
push
addr16
push
jmp
test
inc
mov
cmp
sbb
jg
add
mov
adc
adc
xchg
mov
das
sbb
mov
xchg
pop
xchg
cltd
cmpsb
mov
fnstenv
add
jle
out
adc
jne
aam
adcb
addr16
xlat
popa
mov
pop
imul
out
lahf
ja
push
xorb
cwtl
pop
imul
arpl
sbb
pop
repz
push
dec
xor
cmpsb
jge
mov
repnz
nop
cmp
out
adc
mov
imul
push
scas
mov
jl
nop
jge
test
rcl
shll
jbe
mov
mov
mov
jp
dec
repz
mov
imul
dec
sahf
out
dec
repz
aam
xacquire
push
add
insb
in
js
inc
addr16
xor
notb
cmpsl
pop
mov
mov
or
pop
sbb
mov
sbb
aaa
call
jne
pop
out
shlb
jge
aam
mov
shr
push
enter
inc
test
xlat
nop
out
int
pop
xor
gs
cmp
loope
in
lds
mov
fcompl
fwait
clc
shrl
cmp
aad
mov
movsb
insb
push
inc
jmp
repz
je
fimull
mov
aam
shlb
lods
add
xor
hlt
sarb
shl
ja
push
sbb
and
pop
ds
fiaddl
sub
xor
in
mov
jnp
movsl
in
mov
out
scas
test
lods
iret
push
sbb
inc
xchg
iret
add
jo
or
out
mov
add
xchg
out
push
imul
jae
fldl
mov
mov
movsl
jmp
hlt
scas
out
iret
sub
subl
cmc
aam
dec
stos
xchg
iret
aas
dec
negb
cld
rorl
mov
stos
call
mov
push
push
pop
jmp
mov
cmc
je
push
loopne
fildll
mov
push
lea
shll
push
pop
push
mov
scas
and
inc
xchg
mov
cmp
fwait
adc
push
imul
adc
repz
gs
xchg
daa
fcmovbe
in
fs
jp
rclb
clc
mov
ds
out
jge
mov
ja
cmpsl
push
nop
mov
imul
lret
xchg
into
leave
testb
fdivrp
out
dec
insl
push
mov
jne
mov
jge
dec
cs
in
mov
cmpsl
movsb
insb
mov
adc
aaa
or
jne
iret
pop
cmc
mov
aad
xchg
push
imul
or
arpl
imulb
stc
in
sub
push
lods
sbb
xchg
jbe
jb
outsb
xchg
dec
lods
mov
push
ds
cli
jno
mov
in
into
mov
shlb
cmp
fidivrl
add
mov
xlat
mov
sub
icebp
aas
xchg
ficoms
add
insl
inc
sbb
out
push
int3
addr16
pushf
std
cmp
sub
imul
adc
mov
gs
adc
dec
mov
dec
imul
loop
mov
les
push
lods
push
in
hlt
mov
xchg
std
popf
aas
lret
fidivs
jp
jb
xchg
enter
xchg
loopne
push
cld
xchg
sbb
rcrl
mov
adc
shr
mov
xchg
jecxz
cwtl
mov
mov
adc
adc
sub
cmp
mov
mov
and
pop
push
xchg
xchg
inc
enter
cmp
pushf
mov
andb
push
jno
jb
push
jne
in
cwtl
sub
movsl
ljmp
jbe
hlt
es
repz
mov
insl
jge
loop
dec
popf
imul
shrb
add
jbe
mov
push
dec
jo
fwait
xchg
addr16
sub
das
sub
and
mov
dec
cmc
inc
pop
stos
xchg
inc
or
cltd
xchg
imul
stos
adc
pop
ficoml
cwtl
xchg
lea
ss
mov
adc
dec
xchg
fdivr
fidivrl
inc
mov
rorl
daa
or
dec
fld
jp
add
sub
nop
scas
pusha
mov
dec
mov
into
lods
push
icebp
cmc
xchg
lea
subb
sahf
int3
jns
fistpl
mov
jne
fidivl
mov
mov
test
xchg
decb
adc
dec
hlt
aaa
je
addr16
and
out
fisttpl
mov
insl
hlt
imul
sbb
dec
add
jbe
jbe
cmpsb
dec
stos
in
jmp
or
jno
push
adc
fistpl
insl
mov
es
pop
jne
cmp
notb
je
out
mov
imul
ja
dec
cmc
ret
fcomip
shlb
in
dec
ret
fdiv
ljmp
std
jae
mov
push
xchg
add
cmc
xor
imul
mov
xorb
mov
je
hlt
stos
mov
pop
xchg
lcall
enter
mov
insl
enter
movsl
daa
scas
fsubs
out
sub
fadds
cs
xchg
lock
jge
cmpsb
movsl
fbld
pusha
or
jecxz
lods
divl
cmpsb
in
cmp
aam
nop
pop
out
adc
xor
mov
hlt
inc
cmc
aaa
lcall
sarb
mov
lahf
jp
cld
mov
push
mov
push
sbb
and
jo
cmp
xor
stos
and
incb
out
das
iret
nop
jns
mov
sbb
sbb
push
cltd
adc
out
cmp
mov
mov
mov
sub
test
jmp
imul
push
shr
ja
loopne
mov
inc
loop
jmp
pop
test
mov
pop
sub
lahf
mov
pop
std
dec
push
outsl
iret
add
mov
sar
fwait
cltd
mov
stos
push
adc
adc
and
xchg
jb
mov
push
stos
out
mov
push
fnsave
testb
adc
faddl
mov
sbb
lds
dec
repz
jge
dec
fisubrs
inc
jmp
cs
insl
push
adc
mov
add
out
pop
mov
dec
push
cld
gs
sbb
jp
lods
and
ret
push
fdivs
push
push
push
mov
jp
repnz
inc
or
fisttpll
xchg
push
or
sub
arpl
xchg
stos
xchg
stos
jnp
push
hlt
pop
fisubrl
lods
pop
imulb
or
fwait
jmp
jb
pop
lret
nop
or
pop
xor
or
jb
mov
pop
mov
mov
xchg
lods
push
rcl
dec
aam
mov
xlat
insb
outsl
aad
decl
jp
adc
mov
out
outsl
adc
mov
imul
int3
jp
orl
mov
cmp
mov
jns
pushl
aad
mov
xor
mov
aad
insb
out
push
out
popl
mov
jbe
sub
or
loop
loope
xor
dec
dec
adc
inc
test
ja
scas
sbb
cmc
out
fidivl
mov
adc
addr16
xchg
popf
out
ja
dec
scas
ljmp
jo
cmc
out
imul
daa
scas
loope
movsb
loopne
sub
ljmp
bnd
push
ret
xor
pop
lods
call
daa
push
imul
mov
dec
scas
out
xchg
into
cmp
adc
mov
int
stos
jbe
fnstenv
xchg
aaa
sbb
out
dec
dec
mov
notb
fistl
in
mov
pop
in
pop
jo
ret
loope
lds
gs
dec
pop
push
ljmp
pop
sbb
aaa
mov
call
mov
jno
push
mov
cmc
in
inc
jmp
cmp
sbb
sti
sti
mov
push
dec
pop
ret
sbb
fdivs
jne
scas
lahf
cmc
push
mov
mov
call
sub
mov
mov
ret
outsl
lret
out
push
arpl
ficoml
push
out
cmp
mov
repz
and
loope
int
ficompl
mov
sbb
sbb
test
ret
sbb
push
repnz
out
sub
push
mov
mov
or
pop
xor
xchg
sbb
cmp
mov
push
or
pop
js
scas
les
pop
pop
lea
mov
pop
sti
mov
jp
ljmp
mov
ret
fstp
std
repnz
xchg
and
add
icebp
pop
inc
test
add
shr
mov
mov
fnstcw
mov
jmp
cmc
xorb
movb
jbe
loope
push
test
jl
scas
movsl
lods
sti
mov
sbb
xchg
mov
jae
stc
inc
icebp
add
push
gs
xchg
xor
cmp
lcall
jbe
leave
aaa
ljmp
mov
shlb
cmpb
pop
mov
in
call
fisubrl
xchg
in
stos
sbb
mov
sbbl
pop
add
iret
add
xor
mov
add
lret
lods
in
inc
jne
adc
out
jae
ficoml
push
mov
or
and
dec
mov
idivb
cmp
movsb
cwtl
decb
out
add
int
cmp
cmp
cmc
or
jge
arpl
std
pop
outsb
pop
mov
repnz
cli
xchg
scas
cld
jp
dec
pop
test
fsubr
or
pusha
icebp
xor
pop
jne
lret
jp
pop
clc
sub
out
mov
xchg
jnp
imul
out
nop
outsl
jle
sub
xor
sbb
ficoml
add
sub
lods
xlat
fdivrl
ret
sub
lcall
repnz
mov
mov
ss
in
fcompp
pop
push
ja
shl
mov
inc
mov
je
sbb
push
sbb
scas
jp
out
stos
int
into
dec
aam
test
and
pop
fwait
pop
repz
outsl
cmpsb
push
add
push
iret
loopne
mov
dec
jmp
popf
sbb
cmp
popf
adc
arpl
icebp
lea
leave
push
and
push
into
dec
adc
imul
lock
sub
mov
ljmp
imul
fbld
pop
mov
push
adc
xor
addr16
dec
adc
jno
or
ret
push
fimull
push
in
jno
or
pop
mov
mov
ja
imul
ja
adc
cmp
pop
sti
pop
or
les
rcrl
ficoml
jp
xor
push
aaa
jno
repz
fnstenv
jne
mov
cltd
scas
lock
dec
xlat
mov
test
repz
lret
popa
sbb
movsl
mov
push
rolb
jb
jp
insb
daa
cmp
xchg
mov
out
sub
cwtl
or
inc
jae
push
aaa
cmp
sbb
or
xchg
xchg
incb
cmpsb
pop
in
jno
dec
pop
xchg
dec
cmp
scas
xor
mov
xor
mov
mov
imul
ja
inc
xlat
in
in
inc
outsl
pop
rorl
mov
outsl
or
movsl
ja
and
push
jp
stos
xlat
lea
push
out
icebp
fisubrs
inc
jae
stos
mov
das
sub
dec
jae
in
dec
cld
in
jg
adc
sub
sub
add
icebp
sbb
xchg
xchg
nop
jae
bound
push
jecxz
outsl
icebp
xchg
in
mov
inc
jecxz
push
data16
xchg
addr16
inc
testl
dec
pop
pop
hlt
in
push
int3
jb
fildll
shl
mov
xlat
data16
or
sbb
jo
sub
mov
rcll
add
movsl
stos
sub
mov
rol
inc
fistl
rorb
lods
loop
fcmovbe
into
xchg
dec
mov
nop
push
push
lcall
and
adc
push
repz
ficompl
push
je
out
push
mov
mov
push
cmpsl
mov
test
cmpsb
lods
xchg
jae
out
push
jno
nop
outsl
dec
xor
lds
inc
int
sub
jae
and
dec
jno
cmp
dec
lahf
jle
sbb
out
xchg
nop
hlt
mov
xor
outsl
repz
cwtl
bound
or
call
mov
xchg
test
notb
jae
pop
fidivs
ficoml
inc
aam
outsl
or
nop
pop
jne
xchg
ds
ljmp
push
inc
addb
in
ds
fwait
out
mov
inc
outsl
cmc
cmpsb
pusha
mov
scas
adc
in
je
xchg
sbb
push
xchg
xlat
inc
push
test
xchg
adc
scas
aaa
sub
cmc
mov
movl
or
cmp
xchg
mov
pushf
lret
push
lret
leave
cltd
pmullw
jb
jge
dec
push
repnz
push
es
cmp
xchg
cmp
mov
xlat
sbb
mov
cmp
aaa
xchg
ljmp
jp
ss
xchg
mov
popf
mov
add
cmpsb
sti
inc
xchg
out
nop
int
popf
mov
scas
pop
mov
push
addr16
test
jl
stc
xor
bound
icebp
test
pop
jb
add
cmpl
xchg
cmp
cmpsb
push
mov
mov
adc
mov
popa
cmpsb
inc
xorl
push
push
les
push
outsl
mov
jo
jno
inc
hlt
clc
mov
xchg
outsl
lock
push
mov
imul
xchg
sbb
dec
adc
aas
hlt
dec
adc
mov
adc
rcl
pop
mov
ds
imul
lock
jmp
jae
push
out
out
je
push
outsl
xchg
sbb
and
xchg
out
mov
lcall
pop
aad
push
adc
cmpl
out
insl
lea
xor
dec
adc
add
fcomps
popa
lods
orl
pushf
addr16
repnz
stc
arpl
ficoml
jo
repz
test
popa
loopne
push
xchg
jbe
pushf
hlt
xchg
inc
lods
jne
push
xchg
mov
lods
jne
lret
movsb
push
scas
xlat
mov
cmpsl
cwtl
loopne
gs
popa
sbb
je
push
mov
inc
xchg
mov
sbb
clc
cmpsb
call
add
xor
xor
jae
add
xor
fs
shlb
aaa
pop
xor
jnp
mov
rolb
daa
jmp
jp
xlat
or
jo
adc
les
into
pop
test
xor
mov
loope
xor
add
add
xchg
xlat
sbb
ja
imul
cltd
cmp
push
adc
adc
inc
xor
fldcw
icebp
cwtl
cs
ja
mov
out
xor
pop
jo
notb
or
in
sub
mov
nop
jmp
repz
xchg
push
ja
call
cld
lds
and
stos
insl
pusha
lea
cmpsl
fstl
push
ffreep
clc
cmp
push
lods
mov
in
jns
pop
xor
inc
fdivp
xor
mov
pop
and
or
sahf
and
mov
cmp
shr
cmpsb
dec
xor
scas
stc
push
and
dec
adc
jge
loopne
arpl
sahf
xor
test
jge
xchg
dec
mov
out
adc
mov
or
push
ja
push
inc
lahf
lods
movsl
icebp
int
sub
in
adc
test
test
jo
xchg
cmp
xor
outsl
or
cld
mov
mov
sbb
mov
outsb
fldl
stos
mov
lods
xlat
sub
push
or
xchg
mov
and
shrb
mov
movsb
sbb
xchg
cmp
mov
or
xchg
int3
data16
cltd
sub
dec
repnz
outsb
sbb
mov
gs
dec
testb
les
fidivrs
mov
insb
push
add
xor
jne
cmc
mov
xchg
cs
mov
xchg
xor
sbb
mov
adc
mov
xchg
jnp
ja
out
pushl
fdivs
sub
pusha
out
ljmp
adc
pop
dec
xchg
dec
push
cwtl
add
mov
out
jne
out
fldcw
xchg
repnz
divb
cmpb
mov
lret
lcall
dec
in
sub
clc
xor
mov
orl
inc
sub
add
jb
aaa
nop
lcall
filds
inc
js
or
dec
adc
outsl
or
mov
jp
jae
loop
or
int3
pop
push
sbb
scas
cmc
enter
into
xchg
xrelease
sbb
jl
add
xacquire
mov
in
mov
mov
in
je
add
inc
aas
sbb
or
mov
inc
movsl
mov
xchg
into
lea
ss
push
js
subl
mov
add
pusha
cmp
lea
mov
in
xchg
push
sbb
movsl
push
inc
xlat
xor
out
loope
jp
sbb
scas
adc
hlt
test
jb
sbb
mov
fistpll
push
xor
insb
xchg
push
xchg
jle
repz
cli
adc
or
leave
xchg
lds
jp
cmp
cs
rol
adc
mov
fimull
dec
scas
mov
or
jae
xchg
imul
jo
imul
xchg
fdivp
inc
call
jp
je
mov
sbb
repnz
popf
mov
out
dec
sbb
pop
sbb
cmc
aam
xor
stos
adc
adc
pop
sbb
icebp
xchg
rclb
imul
lods
jbe
lock
or
test
push
fs
out
call
jle
cmp
inc
jo
call
cmpsl
adc
sbbl
ljmp
ss
push
pop
stos
xchg
fidivl
mov
push
in
pop
and
pusha
mov
jbe
push
inc
nop
adc
and
fs
jmp
mov
sbb
xchg
fxtract
push
xchg
mov
imul
mov
scas
mov
jne
xchg
adc
addr16
push
mov
push
cwtl
push
cs
cld
loope
out
pop
adc
shll
xchg
pop
stos
or
pop
out
jp
in
jns
das
out
mov
pop
insl
jg
sbb
pop
push
lea
mov
fldt
js
mov
scas
adc
es
pushf
sbb
add
xchg
add
or
mov
lret
inc
jbe
add
xlat
pop
filds
pop
pop
mov
adc
hlt
pushl
push
mov
lods
pop
add
mov
cmp
iret
add
mov
dec
cmpsb
mov
mov
aas
jae
cmp
xchg
out
sub
popa
mov
mov
shll
sub
xchg
sbb
jne
pop
ret
fidivs
dec
nop
cs
push
pop
xor
push
int3
aaa
xchg
rcll
repnz
cmp
imul
mov
pop
mov
fldt
fidivl
cld
ja
cmp
lahf
dec
js
lret
lret
mov
rorl
ljmp
xchg
or
iret
fistl
push
dec
push
adc
jmp
int3
shlb
scas
dec
mov
in
addr16
jns
nop
xchg
stc
and
jne
repnz
fiaddl
hlt
stc
mov
int
pop
cmpsb
dec
addr16
jae
cmpsl
pop
pushf
xchg
xchg
jno
cmpsl
sbb
out
xchg
pop
out
sbb
fsubrs
pop
mov
pop
out
cmc
jp
add
outsl
jl
in
ja
add
xchg
loopne
loop
dec
adc
pop
pop
test
xchg
scas
imul
scas
cmc
lcall
fbld
mov
lret
mov
xorl
leave
mov
lods
sbb
push
dec
pop
jp
scas
mulb
repz
mov
adc
lret
sbb
lds
mov
dec
push
pushf
icebp
stc
dec
jno
shlb
shlb
dec
pop
jp
imul
enter
mov
jbe
xlat
push
inc
xchg
xor
mov
lahf
jp
mov
or
jae
mov
or
push
ss
dec
dec
push
test
outsb
das
insl
xchg
ja
dec
mov
push
lea
aaa
push
std
sub
aad
fwait
push
popa
scas
addr16
scas
jae
xor
pop
pushl
or
xor
imull
ja
addr16
push
xlat
loop
imul
push
repnz
pop
sbb
and
xor
dec
repz
inc
repz
cwtl
cmc
cwtl
pop
arpl
ficoml
cwtl
das
in
aaa
mov
adc
sbb
xor
mov
dec
mov
adc
stos
jnp
insb
dec
mov
fldenv
test
orb
fisubl
rorl
and
xchg
dec
inc
jmp
iret
mov
inc
or
insb
push
aam
dec
pop
push
or
shl
adc
xor
int
sbb
push
ss
mov
cmc
nop
jge
dec
scas
push
sbb
in
fldt
pushl
popa
push
lret
das
das
or
dec
call
xor
mov
mov
push
mov
jecxz
das
in
in
add
in
outsb
xor
lea
fstl
repz
shll
adc
add
cmpsb
jecxz
mov
mov
repz
jae
pop
out
dec
cmp
dec
and
ss
or
mov
and
jg
jmp
mov
movsl
jle
xchg
mov
ret
push
mov
lock
nop
rolb
mov
fdivrl
xor
shl
sub
ret
fdivrl
out
inc
lods
jecxz
aad
lahf
rclb
lahf
inc
out
push
xchg
int
inc
pop
jmp
mov
in
add
jp
inc
xor
in
mov
sbb
iret
test
inc
mov
mov
outsl
push
dec
into
jbe
ss
mov
push
mov
jnp
ja
pop
aas
ss
xor
mov
xlat
jp
hlt
ss
loopne
cmp
dec
mov
xchg
mov
ja
inc
inc
inc
stos
pop
or
out
stos
nop
mov
leave
and
popa
inc
movsb
js
dec
mov
xor
lods
enter
imul
dec
loop
sub
mov
cmp
jo
pop
and
xor
aad
inc
ucomiss
xor
inc
xchg
fstpt
or
sbb
adc
lcall
int
movsl
push
xchg
inc
lods
test
sbbb
sarl
imul
pusha
stc
add
dec
in
out
sbb
fs
mov
decl
or
lret
and
ljmp
push
hlt
inc
cmp
mov
pop
push
inc
sbb
pop
ror
shrl
push
or
or
ret
cmp
xchg
xchg
or
pop
cmc
lahf
lahf
cmp
lods
shlb
mov
push
cli
loope
fwait
jbe
mov
sbb
xchg
rcll
xchg
rcr
ljmp
cmpsb
divb
mov
push
fdivrs
pop
out
or
insb
testb
push
inc
xchg
push
mov
dec
repz
mov
add
pop
outsb
cmpsl
mov
insb
push
stos
aam
dec
pop
movsl
push
dec
mov
leave
sub
sub
lret
loope
out
lock
out
mov
sbb
push
pop
test
scas
push
ja
push
or
push
jecxz
fisubl
jo
pop
jne
ljmp
mov
sbb
dec
hlt
or
inc
push
xchg
lea
out
jo
jp
xchg
add
outsl
xchg
imul
int
push
fsub
sbb
mov
fisubrl
popfw
fildl
cmp
sub
xchg
sti
inc
jle
dec
jle
aas
in
out
pop
imul
xchg
inc
in
push
fnsave
cltd
rcrl
push
dec
xlat
sub
aaa
jns
clc
js
aas
xor
les
in
addr16
call
mov
cmp
sbb
mov
cmc
aas
sti
sub
mov
mov
dec
iret
mov
xchg
xchg
sub
jae
adc
jg
lock
xchg
mov
pop
mov
movsb
iret
add
loop
outsb
imul
push
dec
enter
faddp
mov
shll
cs
adc
ficomps
sarl
xchg
ficoml
test
mov
not
outsl
push
dec
mov
es
imul
xchg
ds
mov
jbe
stos
clc
mov
adc
push
mov
jb
push
clc
fwait
test
ficoml
test
push
or
or
shrb
sub
gs
mov
dec
mov
mov
inc
xchg
adc
jp
repz
sub
in
xlat
out
lock
dec
aad
rorl
mov
push
mov
inc
jge
mov
ljmp
pop
mov
test
aaa
xchg
ficoms
jbe
shll
cs
jbe
add
inc
dec
divb
mov
jae
movl
mov
ret
pop
or
clc
sbb
out
nop
jle
push
cwtl
mov
ss
ja
jmp
jp
loopne
mov
rorb
mov
filds
mov
mov
dec
repnz
aaa
repz
dec
pop
lods
insl
push
jbe
jge
pop
sarb
imul
mov
popa
mov
mov
nop
out
jns
imul
hlt
push
dec
mov
je
rcll
scas
pop
jcxz
jno
pop
hlt
cmc
adc
sbb
add
hlt
or
jne
sub
or
jg
xor
hlt
imul
or
fwait
sbb
inc
call
and
into
mov
jae
outsb
dec
xor
or
adc
leave
xchg
inc
sbb
and
out
cmp
push
fidivs
jae
icebp
in
arpl
sub
mov
sub
js
and
mov
mov
shl
mov
stos
xchg
hlt
dec
movsl
jle
jae
sub
lods
aaa
xor
and
aam
mov
push
daa
mov
idivb
mov
leave
sub
lods
dec
rorb
je
fstl
xor
mov
mov
cmc
or
jno
jae
fimull
adc
xchg
fnstcw
pop
insb
scas
pop
scas
rorl
mov
dec
jne
jbe
push
mov
xor
arpl
inc
sub
mov
mov
ja
jg
mov
clc
mov
ficoms
ja
xchg
inc
xchg
notl
adc
jp
out
fdivrs
cmp
hlt
fs
xor
xchg
mov
push
movsl
aas
sbb
push
jae
lods
xor
sub
lods
icebp
add
mov
jp
xor
nop
call
ret
notb
mov
mov
inc
xor
pushf
pop
or
xlat
mov
mov
xchg
dec
fsubs
adc
dec
fwait
ja
mov
out
jp
loope
cld
jp
push
push
or
cs
mov
loopne
jmp
pop
jbe
repnz
push
repz
data16
xchg
pop
push
xchg
push
loop
ret
iret
sarl
jp
mov
fcoms
imul
fwait
pop
incl
mov
loop
es
xlat
push
push
hlt
mov
lds
pop
out
or
lcall
ficoml
adc
imul
push
push
mov
bound
fwait
xchg
lea
lock
mov
fidivrs
pop
jp
jae
icebp
add
push
stc
sarb
test
in
jb
shrb
pop
ljmp
mov
popf
sub
inc
sti
xchg
or
aad
or
aaa
stos
mov
jns
fimull
jno
sbb
inc
scas
xchg
sbb
jno
add
iret
push
fcomip
sti
imul
sub
es
cli
xor
xchg
jnp
lock
shrb
mov
or
add
out
lret
cmp
into
mov
lock
cmp
jp
out
xchg
stc
and
pop
mov
jp
fcom
cmp
mov
mov
adc
add
bnd
or
lahf
pop
pushf
or
aas
sub
cmpsb
dec
lahf
add
pushf
mov
inc
ret
xchg
enter
sbb
xchg
push
aas
mov
push
push
fists
add
fstpt
mov
sbb
adc
pop
shrl
popf
mov
jne
push
das
inc
cmp
or
cld
xchg
arpl
rclb
or
lods
loop
shll
and
daa
movl
mov
enter
clc
test
pop
movsl
xlat
sbb
into
pop
cltd
mov
movlps
mov
mov
popf
in
add
sarb
push
stos
fiaddl
shl
sbb
cld
jae
dec
push
int
xchg
and
jbe
adc
loopne
jp
in
add
into
idivb
clc
adc
xorb
lock
lahf
mov
jl
mov
xor
fldl
mov
in
dec
xor
cmp
jbe
xlat
add
or
push
hlt
jp
add
dec
dec
cmc
out
loopne
jo
iret
loope
das
fimull
jl
cmpsb
cmpsl
add
mov
mov
data16
imul
xlat
clc
fcoml
mov
not
sub
lahf
or
icebp
sbb
mov
mov
xchg
jne
pop
ret
pop
into
cmpsb
adc
mov
wbinvd
rcrb
hlt
jp
lods
scas
push
aam
mov
pop
jmp
test
push
imul
and
push
sub
repnz
int
xchg
fnstcw
into
outsb
test
cltd
mov
aam
mov
or
jae
inc
cmpsb
movsl
jl
push
hlt
les
fwait
jp
lods
mov
lock
mov
dec
jl
aam
or
push
aad
mov
push
lods
ficompl
int
leave
adc
imul
push
lods
xor
inc
insb
sbb
add
jae
mov
lock
push
or
mov
sub
jg
adc
fildl
in
xchg
test
ret
or
push
sti
add
fisubrs
jle
pop
pop
inc
sub
lea
test
test
push
and
inc
fnsave
sti
xchg
xchg
add
fisubrl
movsl
xchg
push
adc
dec
stos
bound
int
aam
mov
movsb
mov
push
mov
repz
sub
dec
popf
ja
inc
push
push
notb
mov
daa
xchg
shll
lods
ja
cmp
pop
pop
js
xchg
jl
mov
sbb
mov
stc
scas
repz
testb
dec
pop
fidivs
inc
outsl
mov
jmp
rolb
fucomi
mov
fisttps
fsts
or
imul
jo
pop
aad
orb
aaa
jae
ja
out
bound
ss
les
loop
and
outsl
cmp
add
popf
xchg
rclb
adc
cmpsb
iret
xlat
mov
fdiv
subl
ja
and
jecxz
dec
insb
outsb
scas
repz
pop
push
imul
call
aas
std
pmulhw
outsl
stos
lret
inc
dec
push
push
je
xor
and
cmp
bound
xchg
xchg
push
dec
xchg
jge
jne,pn
mov
negl
inc
nop
js
leave
push
cli
xchg
push
cmp
inc
dec
out
xor
xor
inc
mov
and
rclb
loop
jmp
dec
rcr
in
and
jmp
adc
push
lods
sbb
insl
aaa
bound
inc
dec
sbb
fcmovbe
popf
pop
ret
mov
add
or
adc
les
pop
sbb
sbb
jp
or
add
add
roll
push
pop
jmp
sbb
mov
dec
out
adc
inc
jne
jp
jns
negl
cmpsb
iret
jae
fbld
enter
xor
fdivrs
mov
aad
jae
lea
xor
divb
repnz
push
out
and
cmpsb
aad
fwait
sbb
adc
jp
scas
lret
ja
pop
push
inc
mov
xor
adc
dec
sahf
pusha
testb
clc
pop
mov
push
clc
xchg
mov
sbb
ret
xchg
stos
fimuls
or
imul
ljmp
xchg
or
dec
in
push
mov
xor
enter
lea
iret
xchg
jbe
cmp
nop
push
sub
mov
jp
mov
not
loopne
dec
int
pop
cmp
xor
aam
imulb
xor
ljmp
inc
lods
cs
sub
mov
sbb
cmpsb
dec
popf
cmpl
push
xchg
sbb
in
xor
lods
pop
fstpt
aaa
jno
sub
in
mov
jge
mov
int3
adc
pop
xchg
rolb
jecxz
scas
int
xor
xor
pusha
xchg
sub
stos
enter
mov
ja
mov
aas
bound
iret
dec
cmp
sarb
shl
adc
fs
jne
sub
mov
mov
jbe
push
fimuls
bound
cli
insl
adcl
outsl
jno
sbb
dec
scas
stc
js
xchg
jne
out
lea
sbb
fdiv
call
popf
popf
sbb
and
push
hlt
mov
sub
dec
arpl
jg
enter
mov
int
frstor
mov
cmp
sbb
lds
fdiv
mov
or
xor
fdivs
xchg
push
mov
adc
or
aas
ja
and
add
or
mov
movsl
insl
dec
pop
cmc
sub
xchg
mov
dec
jbe
push
iret
subl
pop
imul
xchg
inc
ss
mov
test
leave
mov
sbb
push
jg
pop
adc
jmp
loop
sarl
test
mov
sbb
xchg
imul
ret
push
fisubl
lods
repz
and
test
mov
test
mov
dec
xor
test
scas
jge
add
ljmp
out
sbb
ja
out
cmc
mov
lods
rorb
adc
test
shll
adc
jne
push
mov
test
lods
les
inc
icebp
pop
jp
and
rcr
pop
test
icebp
out
aaa
cmpsb
ja
pop
jo
imul
pop
mov
sarl
fdiv
push
cmc
lods
sub
int
push
out
rcrb
fnsave
imul
or
lods
adc
imul
fcmovbe
push
rcll
sbb
faddl
cs
je
and
pushf
xor
pushf
pop
xor
jb
jne
lea
cmp
cmovo
enter
sub
push
icebp
or
lea
xchg
pusha
pop
loope
dec
pop
nop
push
js
out
push
clc
jne
adcl
mov
ret
mov
push
dec
mov
ficoml
scas
jecxz
mov
mov
jae
push
out
je
fiaddl
and
addr16
sbb
lods
fcoms
inc
add
fidivl
vphaddubd
hlt
out
jae
mov
adc
xchg
sub
mov
xchg
cmp
mov
ret
add
adc
inc
jno
and
in
pop
sbb
jbe
sub
shrl
ja
jbe
paddsw
pushf
sub
sub
iret
adc
mov
xor
dec
jp
xchg
loop
imul
dec
cmpsl
lahf
sti
cmp
jb
push
jbe
xor
push
mov
movsb
push
in
test
jo
mov
cmp
inc
mov
int3
ja
into
lcall
pushl
jae
lret
scas
mov
mov
outsl
imul
xor
cwtl
xchg
jl
test
in
xchg
pop
mov
dec
pop
out
out
dec
sub
int
je
push
mov
ja
dec
cmp
shll
jle
divb
xchg
insl
push
xchg
int3
movsl
into
pop
pop
xor
xchg
mov
lea
jnp
imul
and
loopne
inc
ret
jbe
mov
dec
sub
out
mov
nop
jae
mov
movsb
cmp
pushf
xchg
jp
sub
out
sub
xchg
movsl
push
cmc
pop
sbb
jo
jno
scas
push
scas
cmp
and
or
xor
mov
xchg
mov
sbb
xchg
enter
std
pop
pop
sub
mov
out
test
pop
pop
pop
jp
notl
and
ja
imul
mov
mov
rcrb
sub
out
jp
xor
pop
mov
sbb
je
mov
rcl
or
dec
movsb
jb
lret
add
in
or
test
scas
or
ss
jmp
mov
xchg
push
push
mov
repz
scas
mov
je
inc
imul
outsl
pop
mov
push
in
addr16
out
dec
sub
mov
aad
mov
jle
pop
outsl
push
nop
roll
push
cmp
aad
idivb
pop
mov
ds
imul
push
lds
xchg
cmc
pusha
out
arpl
pusha
adc
dec
lods
xchg
test
xchg
popa
mov
jae
scas
mov
cmp
notb
fdivrs
xor
jo
pop
xchg
cmc
add
mov
rol
fucomp
inc
dec
fidivrl
push
test
jb
xor
cmp
ret
icebp
ja
mov
mov
pop
scas
aas
fistpl
testb
mov
adc
inc
mov
int3
pop
jmp
push
or
xchg
divb
scas
dec
fcomi
mov
jge
out
in
outsl
push
xor
pop
int
xchg
cmpsb
jge
fidivl
jg
mov
cmc
pop
popf
adc
loopne
inc
xor
out
rclb
xor
data16
ljmp
call
jne
mov
mov
mov
xor
iret
mov
repz
sbb
andl
jecxz
aam
mov
shlb
mov
mov
inc
pop
ja
rolb
mov
mov
mulb
es
mov
push
xchg
jmp
lret
shl
in
mov
out
outsl
cs
scas
xchg
pop
push
jo
ret
push
push
push
adc
push
and
repz
out
xchg
hlt
out
lods
jbe
jbe
cmpsb
cmp
or
adc
xor
movsl
jne
out
ficompl
mov
jno
jmp
imul
fiaddl
ljmp
mov
outsb
and
pop
mov
sub
inc
rorl
jecxz
popa
cmpsb
movsl
roll
sbb
dec
xchg
xor
ret
jae
and
mov
aam
mov
outsb
ret
cmc
mov
test
sbbw
ficoml
or
out
faddp
xor
loopne
pop
aad
mov
inc
cmp
xlat
repnz
inc
xor
ja
out
ficoms
aas
adc
rcl
mov
mov
sub
lea
je
pushf
test
pusha
push
sub
call
pushl
movzwl
rol
stc
lea
bsr
mov
push
add
movw
push
stc
call
add
inc
js
je
jb
arpl
jae
pushf
mov
mov
mov
push
mov
pushl
ret
shl
mov
jo
movsb
xchg
xchg
lock
xor
push
movsb
ret
add
xor
inc
xorl
fs
and
cmp
or
cmp
int3
push
repz
sbb
and
jnp
or
outsb
xor
negb
sbb
or
add
jg
or
jmp
popf
jae
push
arpl
cs
xor
xchg
sub
test
fnstcw
jg
pop
cs
out
xchg
hlt
inc
neg
jo
ljmp
das
testl
inc
std
cmp
inc
pop
fnstcw
xor
inc
jg
mov
cmpb
fcoml
iret
and
es
popf
adc
jmp
negb
add
out
and
out
or
sahf
repz
pop
xor
gs
sti
lret
pop
or
pop
xchg
pop
add
jb
xor
les
sahf
sar
setns
shl
mov
stc
pushf
movb
cmp
test
movb
pushl
mov
pushf
lea
jmp
movb
movw
mov
lea
bswap
movzbw
pop
pusha
pusha
movb
pushl
ret
pop
pushf
movb
pushf
pushl
ret
dec
dec
push
jno
ljmp
aad
dec
adc
movsl
loopne
std
jbe
jle
sbb
add
call
xchg
pop
in
hlt
aam
repnz
add
xor
push
leave
pop
testl
hlt
cmp
inc
xor
jne
jb
cmc
mov
pop
mov
fdivs
mov
scas
sarb
lcall
arpl
add
sub
test
shll
cmpsl
cmp
dec
imul
push
jne
insl
or
pop
or
push
xchg
jge
cmpsl
cmpsl
mov
adc
xchg
pop
xchg
sbb
int
sub
jmp
aad
out
jl
cld
and
into
call
pop
jae,pt
sahf
push
cmpsb
adcb
pusha
cmp
insb
call
leave
out
sub
cwtl
inc
jb
ljmp
jle
clc
lds
jno
pop
mov
mov
jo
popa
cwtl
ret
or
shlb
push
into
divb
es
lds
shl
cltd
jp
and
mov
push
loop
adc
test
xchg
cwtl
sbb
std
sarl
fimull
test
sbb
xchg
pop
loopne
cmpb
dec
add
sahf
popa
inc
cmpsb
pop
push
lds
lea
mov
cmpl
mov
ljmp
or
pop
call
int3
test
and
pmaxsw
imul
pop
movsl
sarb
ret
out
mov
clts
mov
xor
icebp
lret
hlt
mov
push
fsubs
pop
aaa
pusha
sub
mov
sub
sub
adc
mov
cmpsl
lret
out
pop
hlt
jp
ret
fwait
in
fwait
ja
fildll
sbb
inc
lret
inc
mov
dec
lret
or
or
jbe
xchg
sbb
xchg
bound
loop
fs
lret
into
sbb
pop
or
dec
or
fdivr
jl
and
std
xlat
and
jge
ljmp
xchg
imul
out
insl
cmc
inc
pop
push
mov
lret
ljmp
adc
in
imul
cmovp
jmp
mov
xchg
jne
imul
xor
cmpl
cmp
mov
xchg
ret
inc
jmp
cmp
fisubrs
jbe
or
xor
fwait
mov
hlt
cmp
outsl
mov
popa
and
cwtl
xlat
popf
sbb
add
or
in
test
cld
aam
dec
or
pop
cli
jp
mov
and
ljmp
fs
pop
sub
aam
adcb
shl
addl
add
mov
xor
stos
pop
cmpb
repz
sbbb
idivb
repnz
mov
test
jge
xchg
and
mulb
jno
sub
mov
pop
pop
push
out
dec
xchg
dec
push
push
ret
frstor
mov
mov
cmp
mov
scas
fnsave
add
add
adc
test
je
ljmp
cmp
dec
pop
mov
cld
inc
add
pop
push
lea
in
call
jo
add
xchg
sbb
popa
mov
scas
cld
fisubs
push
mov
add
js
fdivl
mov
sbb
push
push
cmpb
pusha
movb
pushf
jmp
jae
jp
test
shrb
fdivrs
pushf
les
push
pushl
in
xchg
sbb
xchg
js
and
bswap
lahf
ret
add
and
pop
imul
mov
and
shrb
mov
fucomip
ret
pushf
les
iret
pop
fcomps
push
xchg
iret
sbb
or
frstor
sub
mov
mov
lea
jb
jmp
call
cmc
add
pusha
pushl
clc
mov
pushf
pushf
movsbw
pop
mov
bt
push
cmp
lea
jle
pushf
pushf
lea
jbe
mov
not
btr
mov
ror
not
bts
cmc
add
ror
mov
add
add
rcr
adc
movl
shr
bt
rol
mov
call
bound
adc
sbb
xchg
push
das
leave
jns
enter
in
lods
test
sahf
rcrb
fidivrl
or
fucomip
xor
jae
testb
out
cltd
ficoml
cmp
shrb
cmpsl
aas
push
jbe
sbb
jo
add
mov
xlat
adc
imul
loope
in
mov
scas
push
loope
push
pop
lods
adc
sbb
sub
or
test
sbb
lcall
mov
pushf
movb
lahf
jmp
mov
ljmp
imull
pop
cmp
es
jns
mov
aad
lods
ficoml
cmp
cmp
cmp
int
js
mov
scas
imul
xchg
pop
jecxz
xchg
push
add
sarl
or
imul
cmp
and
ja
ljmp
mov
cwtl
cs
cli
cmc
jmp
inc
lahf
mov
xchg
mov
jne
pop
imul
cmp
lahf
cwtl
dec
fbld
cltd
add
lods
mov
jge
loop
add
ja
out
mov
adc
enter
mov
or
sub
add
cmp
fmul
icebp
mov
stos
pop
adc
mov
mov
pop
ljmp
and
jge
and
push
inc
dec
lea
call
pushf
pushl
pusha
pushf
lea
jae
push
mov
pushf
inc
push
call
rep
movsbw
pushf
mov
pushf
lea
jmp
call
and
bt
add
call
xchg
lcall
fildl
sbb
sti
mov
sbb
lret
jp
imul
cld
fs
fdivrl
jp
xor
jb
jl
adc
addl
fistpl
gs
shr
ss
jo
push
nop
jecxz
pusha
arpl
jno
mov
cli
lret
mov
pushw
stos
outsb
sbb
push
ficompl
es
call
cmp
ja
js
ljmp
cmpsb
jo
clc
lcall
dec
orl
xor
sbb
cli
out
les
sbb
xchg
and
sbb
dec
mov
push
push
xor
inc
xor
or
repz
push
cmp
popa
mov
pop
aas
cwtl
jp
addb
pop
xor
lret
into
mov
and
sbb
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
jb
cmp
ljmp
ljmp
jbe
pop
mov
cmc
shr
mov
jno
jne
xor
fsubs
in
mov
test
idivl
sbb
add
xchg
outsl
loopne
sub
cmc
or
mov
cmp
orl
dec
lods
push
cs
insl
pop
sub
fsubrs
mov
push
loop
adc
mov
fildll
fs
jne
call
lea
jae
setne
mov
mov
mov
pushf
pusha
pushf
inc
setns
mov
lea
push
lea
call
pusha
adc
lea
jnp
pushf
push
pusha
lea
jae
push
lea
jne
push
jmp
ja
mov
inc
mov
inc
jmp
pop
cmp
push
adc
inc
adc
fadds
aas
imul
sbb
fmuls
sbb
fnstenv
je
test
nop
imul
and
out
mov
jns
push
xor
out
cmp
jns
inc
and
and
imul
adc
rcll
psubw
and
xchg
jmp
cld
pop
orb
fidivs
xchg
mov
lds
jnp
repz
pop
or
cs
and
or
jecxz
jp
ljmp
mov
cmpsb
data16
dec
push
in
adc
clc
jnp
mov
mov
cmp
lret
fisttps
xor
mov
cwtl
insl
jns
subb
cld
dec
imul
xor
cld
or
xlat
cltd
jne
inc
push
and
jo
iret
subb
in
test
out
inc
jae
pop
std
rorl
in
sub
inc
pop
mov
pop
sbb
fs
je
test
push
add
call
sbb
ljmp
pop
ljmp
sti
push
jp
imul
in
orl
mov
std
mov
dec
lock
push
repz
pop
mov
mov
gs
xchg
dec
sbb
popf
into
xor
ja
cmp
xchg
vmovddup
daa
or
test
rol
push
jge
test
push
jno
jnp
jmp
repz
or
orl
mov
mov
mulb
pop
shlb
cmp
das
or
xchg
sbb
rcl
popf
mov
iret
push
insl
xor
imul
daa
adc
cmp
mov
out
test
cmp
xchg
aas
test
xor
orps
jl
mov
inc
push
mov
fwait
fwait
xchg
ds
lcall
fs
push
pushl
ret
cmp
std
enter
pop
adc
cmp
mov
test
and
cmp
or
shrl
xchg
jnp
scas
xchg
adc
repz
daa
jecxz
mov
call
jb
cmp
jne
or
sarl
inc
add
iret
sbbl
cmp
pop
jnp
test
addr16
stos
inc
rcrl
in
insl
xor
and
and
pop
icebp
test
or
rcrl
jp
mov
mov
stos
adc
imulb
and
cwtl
repz
leave
sahf
jno
out
xchg
mov
loop
xor
add
inc
pop
jle
lock
lock
sahf
xchg
imul
fldcw
out
dec
sub
ss
inc
xor
cmc
or
xchg
fldenv
xchg
mov
repz
icebp
ret
ficoms
ss
inc
and
loopne
inc
ljmp
mov
gs
cld
inc
adc
push
stc
dec
push
xchg
int3
insb
xor
inc
inc
cmp
fisubl
xchg
std
enter
push
stos
in
sbb
lods
ja
sub
ss
ret
add
push
sar
shll
repz
or
test
shlb
or
les
add
out
jns
fwait
push
in
or
sub
xchg
aad
add
cmpsl
jge
ljmp
fisttps
pop
cmp
mov
xchg
out
push
push
in
aas
jo
push
or
cmp
cltd
mov
add
cmp
jne
aam
imul
jb
outsb
mov
push
mov
add
arpl
and
push
in
jle
fs
inc
jmp
mov
cmp
rolb
fistl
sub
testb
hlt
rorb
jp
jbe
pop
and
mov
pushf
pushl
ret
adc
test
pop
loopne
cwtl
jbe
scas
bound
or
jne
aam
push
ficoml
jbe
sub
mov
dec
ja
cmc
push
lret
mov
sarl
addr16
add
pop
and
into
test
and
xchg
inc
adc
xchg
gs
jg
fistpl
pushf
shr
dec
call
jnp
movl
push
movb
push
pushf
lea
jmp
pusha
not
mov
lea
push
call
push
inc
push
jg
ljmp
movsb
pop
and
xchg
and
test
add
adc
movsl
shrb
popf
dec
cld
cs
insl
fistpl
pusha
hlt
mov
mov
xchg
xor
je
mov
stc
cmp
hlt
xor
or
js
shl
out
lods
repz
mov
testl
cmp
cmp
sbbb
jo
bnd
sub
pop
adc
lcall
in
test
outsl
adc
sti
iret
subl
int3
pop
jle
adc
pop
bound
jle
pop
jno
imul
jne
divl
jno
js
xor
aad
std
lds
jmp
pop
lods
cmove
ret
push
sbbl
pop
mov
push
sub
setg
fldenv
and
push
daa
push
cmpsb
addr16
sbb
outsl
lods
lock
stc
xor
push
inc
cmc
jmp
fadd
push
lret
aad
pushf
imul
add
jb
pop
into
mov
cmpl
jno
pop
push
xor
insb
or
xchg
mov
or
sar
mov
lret
pop
push
push
popf
stos
fwait
xchg
js
sbb
mov
pop
imul
adc
hlt
dec
cmpsb
push
push
in
sub
arpl
push
stos
add
mov
push
xor
stc
in
cmc
test
hlt
pop
pop
sbb
aad
dec
dec
shll
pusha
mov
pop
nop
mov
pop
das
push
rolb
mov
cmpsb
inc
fistpll
xchg
ret
bound
cld
push
cmp
xorb
repnz
arpl
sti
fsubrs
dec
fists
and
mov
adc
xchg
dec
dec
repz
sub
adc
roll
add
jnp
into
push
fisttpll
xchg
and
lahf
sub
push
arpl
rcr
jo
out
clc
faddl
add
inc
iret
lahf
imul
lock
repnz
xor
test
xor
data16
mov
stc
inc
mov
and
int3
dec
xchg
daa
nop
and
mov
js
mov
xchg
ds
add
mov
add
iret
aas
push
xlat
push
data16
stos
fwait
cltd
dec
xor
aam
mov
js
fdivrs
fwait
aam
out
test
mov
outsb
mov
test
cmp
jns
sub
push
pop
repnz
mov
sarl
lret
pop
xor
add
out
sarb
push
loopne
mov
xchg
es
in
rcrb
pop
or
push
and
inc
cs
ja
pop
mov
dec
pop
fsubs
cwtl
sub
clc
cltd
add
aad
dec
dec
pushf
leave
icebp
push
adc
jp
xchg
adc
xchg
xor
ficomps
mov
jo
test
xor
test
es
in
add
nop
dec
jge
lock
pop
mov
sbb
ret
loopne
pop
imul
aam
test
lods
push
rol
mov
fwait
cwtl
dec
ds
push
push
movsb
aam
push
jg
xlat
call
mov
mov
loop
gs
in
stc
pop
fidivrs
push
icebp
call
xchg
mov
lcall
arpl
dec
inc
faddl
inc
mov
inc
mov
and
faddp
ret
lock
ds
or
je
xchg
mov
sbb
imul
sub
lds
movsb
jmp
mov
push
not
pushl
pop
lea
jmp
cwtl
loopne
subb
or
bound
cli
test
sub
data16
inc
lock
jno
or
std
adc
stos
out
jo
nop
enter
repz
outsb
lods
pop
repnz
pop
cmpsb
mov
loope
mov
mov
inc
das
aam
hlt
dec
adc
inc
jmp
mov
xor
insl
push
cld
repnz
fistpll
jg
mov
ljmp
lahf
mov
push
and
mov
out
mov
sahf
jne
cltd
leave
lea
je
test
stc
pusha
add
pusha
pushf
jmp
cld
roll
test
inc
push
mov
sub
pop
and
popa
enter
out
lea
out
mov
lret
inc
js
lret
lds
mov
movsb
pusha
aad
mov
cmp
jnp
mov
mov
call
jl
jecxz
and
cltd
add
sub
dec
popf
mov
or
loopne
outsl
mull
jp
or
mov
xor
push
add
cmpsb
cmp
mov
leave
cmpsb
jne
lret
cwtl
aad
jns
lea
pushl
test
nop
fs
sub
mov
push
mov
add
lahf
push
jg
xchg
dec
lock
dec
or
push
leave
add
es
scas
ds
push
insl
cmp
adc
jne
je
mov
xchg
pop
inc
sbb
pop
dec
je
cs
or
pop
jns
sti
call
sub
push
subb
ljmp
sub
cmp
push
mov
fmuls
pop
mov
out
mov
inc
daa
jecxz
mov
dec
loope
inc
call
roll
in
sub
pop
pop
push
incb
add
pop
je
aam
das
lret
and
in
dec
je
in
mov
cmp
test
out
ret
sarl
or
and
mov
sbbl
js
mov
repnz
test
inc
push
jns
fbld
xor
mov
mov
dec
push
fdiv
lret
xor
sti
xor
add
pop
imul
pop
ret
push
call
into
cwtl
pop
dec
sbb
adcb
dec
and
dec
ja
rcll
inc
fstps
jns
jmp
mov
bt
pushf
add
jmp
test
test
cmp
call
lods
pusha
ror
jmp
pushf
pusha
lea
ja
call
in
cmpsb
test
test
cmp
xchg
int3
cltd
xchg
ja
sbb
fwait
int3
test
adc
adc
mov
xor
popa
sarl
cmpsb
loope
push
mov
jge
lea
push
inc
pop
dec
outsb
push
andl
cmp
cld
or
cmp
lcall
and
mov
call
sbb
aas
or
les
sar
mov
jmp
jmp
pusha
lea
jb
cmp
cmp
cmp
call
lea
jne
call
neg
repnz
aaa
aam
push
xchg
xlat
xchg
pop
xlat
fists
push
or
xchg
dec
fbstp
decl
cmc
mov
dec
xchg
or
xlat
cli
imulb
pop
mov
imul
or
jmp
das
pop
imul
das
out
adc
imul
loope
jmp
out
repnz
loope
sub
push
push
ss
dec
xchg
xchg
pop
push
out
ret
cmpsl
xchg
lock
jno
pusha
es
out
clc
lock
icebp
nop
xor
jae
leave
xchg
addr16
push
leave
push
mov
orb
out
add
xchg
addr16
add
outsl
fdivl
out
ja
and
push
nop
out
add
push
js
test
inc
sub
rcrb
std
imul
leave
add
out
ja
adc
fs
push
pandn
cmpsl
jne
add
sbb
ret
rcll
mov
push
scas
shlb
mov
jmp
add
loope
lods
ret
stos
out
lods
icebp
out
jbe
icebp
push
mov
addb
out
add
mov
xchg
dec
int
int
dec
aaa
aad
jne
jae
push
rolb
hlt
ja
mov
ja
mov
je
xchg
subb
scas
jmp
sbb
and
out
dec
divb
mov
loope
xchg
adc
adc
and
out
push
push
dec
subl
push
xor
loop
xlat
mov
testl
xor
rcrl
mov
idivl
sti
sub
mov
xor
lea
adc
sub
xlat
dec
adc
mov
in
int
xor
xchg
stc
pop
mov
iret
xor
out
mov
cs
hlt
out
fidivrs
out
daa
mov
push
je
je
jne
jmp
out
fs
ljmp
hlt
outsl
push
or
mov
in
shll
test
push
mov
mov
aam
push
fldt
sahf
inc
call
cmpsl
aam
lret
inc
leave
in
ljmp
xor
push
lahf
mov
es
jne
mov
mov
mov
pop
insl
inc
jo
out
xchg
in
jmp
push
or
push
jae
pop
mov
xchg
jae
out
jne
out
push
aaa
out
xlat
mov
jp
jne
mov
in
imul
mov
ficoml
jmp
shl
cmp
pop
mov
dec
mov
mov
idivl
xor
test
aam
xor
ja
imul
mov
in
xor
in
out
into
outsl
sub
mov
mov
imul
mov
aam
xchg
fucomp
out
imul
and
pushf
xchg
iret
jl
aas
imul
add
adc
xchg
and
pop
pop
sbb
mov
cmc
repz
mov
les
mov
repnz
mov
ja
mov
call
mov
lea
out
aaa
mov
mov
arpl
ja
out
movsl
lret
insb
fistpll
ret
loopne
in
into
aad
mov
scas
pop
push
fisubrl
int
repnz
es
sbb
shl
xchg
fnstcw
cmpsl
addr16
lret
mov
cmpsl
inc
es
addl
call
jne
jae
aad
and
outsb
data16
test
pop
fcmovnbe
lret
lret
mov
mov
je
mov
rorb
pop
mov
shll
mov
pop
mov
in
cmpsb
mulb
fidivs
mov
fistl
fs
mov
rol
out
data16
sub
in
cmpsb
mov
xorl
pop
xor
jo
mov
out
dec
imul
clc
push
insb
mov
out
jl
outsb
insl
mov
push
insb
repz
ljmp
adc
adc
pop
sbb
cmp
dec
lahf
xor
mov
loope
xor
pop
sarl
data16
mov
ljmp
push
out
movsl
mov
xchg
cmp
repz
mov
in
push
lret
mov
sub
cmpsl
ss
out
mov
sub
jo
mov
or
out
or
icebp
out
ss
addr16
push
or
arpl
stos
xor
lds
in
sub
and
insb
cmc
xor
sub
mov
lea
mov
iret
jae
ja
push
scas
xlat
jge
in
xchg
fs
or
outsl
icebp
es
mov
das
mov
sbb
push
xchg
pop
int3
adc
inc
or
ja
push
call
cmpsl
lods
push
or
lods
mov
xor
cmc
dec
mulb
scas
and
push
mov
mov
lcall
or
dec
xor
or
adc
shlb
dec
xchg
pop
arpl
mov
insl
fxch
push
cmp
arpl
xor
lock
jbe
and
gs
and
imulb
out
jbe
cmpsl
int3
jno
push
test
mov
je
cmc
or
and
in
mov
push
inc
mov
add
out
movsl
cmc
lahf
sbb
and
lds
ljmp
cmpsl
ss
je
mov
xor
sahf
jecxz
in
ficomps
scas
push
popa
inc
out
fstpl
les
cmc
ljmp
movsb
imul
imul
stos
mov
mov
inc
loope
in
or
pop
rcl
fbstp
sbb
shrl
jne
jle
dec
push
gs
ja
mov
push
and
dec
lds
push
into
out
jbe
mov
mov
or
mov
xchg
jo
out
ljmp
repnz
aad
mov
imul
xchg
pop
dec
jb
jo
js
mov
jae
and
and
xlat
adc
inc
repz
push
or
adc
jbe
pop
dec
pop
shrl
iret
mov
cs
mov
scas
jmp
aaa
hlt
call
xchg
repnz
or
shll
les
push
mov
call
sub
fnsave
push
mov
insb
sub
sbb
mov
icebp
jo
jecxz
jb
je
cmc
cmp
dec
iret
scas
jecxz
mov
or
cmpsl
pop
insl
icebp
movsl
sub
mov
das
ss
in
cmpsb
aad
lea
iret
xchg
js,pn
je
daa
imul
das
mov
ljmp
out
jno
inc
ds
mov
sub
push
sub
shrl
in
xor
out
cltd
sub
insl
push
in
dec
xor
xor
imul
and
cmp
loopne
repz
aas
mov
mov
and
mov
cmp
imul
dec
lret
shl
lret
lret
mov
jmp
shrb
push
dec
nop
sub
icebp
je
das
jno
scas
mov
mov
imul
je
mov
iret
mov
xchg
mov
mov
imul
sub
lds
push
mov
xlat
push
shrb
jmp
push
xor
xor
ss
push
ret
loopne
aas
push
and
cmpsb
imul
loopne
fucomip
sbb
jno
jmp
pop
shl
popf
push
mov
test
into
xor
lock
xor
mov
push
and
dec
rclb
repnz
xor
lea
lods
jae
xor
out
push
sub
test
lcall
sbb
lret
pop
mov
stos
data16
sub
das
movsb
cmpsb
mov
mov
je
mov
mov
enter
sahf
dec
jmp
mov
dec
dec
push
inc
icebp
push
jmp
lret
ret
outsb
in
inc
sub
scas
shrb
out
out
push
fwait
gs
jbe
push
es
fmul
rcr
rclb
add
and
xlat
fwait
adc
pop
lods
outsl
push
sahf
out
sbb
jno
call
xorl
fmuls
fnstsw
push
mov
cmc
je
mov
cmc
push
pop
inc
jmp
int3
nop
mov
adc
sbb
lret
mov
mov
sbb
xlat
scas
sub
pop
out
and
and
test
stos
mov
in
jne
push
push
stos
lds
mov
xor
imul
add
mov
cs
imul
shlb
and
ja
sub
lods
jb
bound
loop
sub
jae
test
push
xor
mov
scas
in
and
jmp
sub
mov
mov
sbb
dec
adc
dec
jbe
mov
or
jo
and
mov
cmpsl
sbb
cmpsb
xor
sbb
push
push
cs
enter
pop
sbb
movsb
les
mov
shl
sahf
mov
movsl
test
and
mov
iret
mov
insl
mov
imul
xlat
shlb
lods
mov
pop
xlat
outsl
mov
pop
in
arpl
and
jmp
push
xchg
imulb
mov
imul
lods
xchg
lock
rcll
imulb
mov
cmpsl
xor
push
push
pusha
rep
repz
pop
cmp
aad
int
cmc
cmc
sub
iret
pop
ljmp
out
fsubr
iret
leave
outsl
ss
paddsb
mov
jbe
nop
test
push
adc
test
into
test
sub
insb
xchg
addr16
loop
xor
xlat
add
mov
je
movsb
sub
jne
les
cld
mov
lds
aad
into
stc
int
jno
mov
sub
lea
stos
sbb
jle
loopne
movsl
test
js
sub
fadds
fdivl
out
sti
inc
dec
aad
clc
test
pushl
pushf
lea
je
cmp
add
pusha
test
cmp
pushf
pushf
lea
jb
pusha
jmp
push
sub
in
in
test
jae
stc
lret
arpl
roll
test
mov
push
fcoms
arpl
imul
enter
shrb
repnz
bsf
xchg
mov
sti
outsb
xlat
sub
jae
int3
lahf
cmp
popa
iret
inc
test
adc
hlt
nop
xchg
mov
mov
or
pop
xchg
push
bound
mov
out
cmp
mov
xor
out
and
mov
ret
outsl
sub
scas
popa
jb
mov
pushf
mov
pushf
mov
pushf
mov
pushl
ret
pusha
lea
jae
cmc
shr
btr
mov
xadd
bswap
btc
mov
stc
sar
sub
mov
pushf
sub
stc
clc
pusha
stc
repnz
call
pop
inc
lahf
xchg
test
mov
in
sub
ret
sbb
cmp
jp
fistl
jmp
sarl
or
adc
cld
push
icebp
or
pop
xor
pusha
push
int
cmpsb
imul
inc
xchg
mov
pusha
clc
xchg
jp
out
mov
mov
fdivl
movsb
imul
mov
leave
lea
call
call
add
push
gs
jne
jb
push
popa
insb
jne
push
add
xchg
inc
xchg
test
lods
inc
adc
adc
rolb
or
push
icebp
fsubs
push
stos
and
inc
push
les
outsl
inc
loope
jl
clc
imul
rolb
shlb
sub
dec
fwait
lret
pop
jne
int
imul
mov
shlb
jb
mov
outsl
xor
mov
scas
xor
rcrl
mov
hlt
mov
mov
jmp
clc
not
mov
ror
cmc
jmp
push
adcl
in
dec
sbb
push
ficoms
adc
loope
movsl
out
sbb
int3
pop
mov
xchg
sti
sarb
cmp
out
call
addl
scas
cmc
mov
mov
jb
or
inc
push
mov
fs
cwtl
imul
push
mov
movl
call
pusha
pushf
push
repnz
jmp
pushf
jmp
lock
xchg
test
push
into
jp
in
mov
sbb
pop
lret
lahf
imul
fldl
jmp
mov
jbe
sub
xor
sbb
or
cmp
das
mov
pop
das
xchg
xchg
leave
lea
mov
clc
inc
sub
mov
add
xor
out
push
dec
adc
je
aam
loop
cmp
push
dec
repnz
cld
lret
jae
pop
aad
jae
inc
cmpsl
andb
xor
divb
pop
sbb
jmp
pop
xchg
pop
inc
dec
jge
sbb
daa
sub
inc
in
fcmovbe
sbb
fildll
je
pop
fs
notl
sbbl
or
loopne
xchg
not
push
hlt
mov
aam
or
into
nop
int
mov
clc
push
xor
dec
pushf
cmp
imul
inc
gs
jne
or
push
push
xor
jno
into
cld
mov
cli
jge
sub
into
test
jnp
notl
and
aam
add
sbb
rcll
mov
mov
cmp
loop
xchg
lcall
xor
adc
test
push
mov
lock
sti
ss
pop
mov
outsl
shll
pop
jl
mov
mov
mov
sbb
out
subb
pusha
mov
repz
xlat
sub
mov
mov
cmp
ljmp
fdivs
ja
inc
mov
arpl
mov
jmp
fimuls
sub
xchg
aaa
push
repz
or
daa
cmp
pop
fadd
adc
shr
adc
rorb
bswap
or
int
push
icebp
jg
data16
scas
aad
pop
mov
sahf
in
movsb
dec
test
addr16
dec
pop
mov
xor
int
out
test
pop
cmp
jge
pop
pop
lret
pop
xchg
repnz
cmp
sub
in
sub
lds
fidivrl
stos
je
lods
mov
pop
xor
inc
pop
dec
cmp
leave
daa
inc
fldcw
mov
inc
xor
mov
xchg
fldenv
push
xor
stos
inc
or
lods
or
push
lock
outsl
inc
xchg
xor
cmp
xchg
or
into
mov
sub
loop
pop
repz
mov
test
push
add
std
dec
sti
mov
mov
push
pop
xor
pop
xchg
lds
fcompl
ja
mov
std
add
push
insb
pop
sahf
lock
test
adc
sbb
mov
jecxz
fildll
adc
fistl
or
xchg
hlt
adc
dec
aas
js
fs
pop
xor
xchg
pusha
push
cmp
pop
out
xlat
rcrb
fs
cmp
test
lahf
ffreep
sub
fmuls
cmp
fbld
xor
xor
ret
scas
inc
jb
ss
lahf
out
das
cld
mov
cwtl
sarb
cwtl
leave
nop
xor
pop
adc
or
and
dec
inc
jb
mov
ja
sbb
mov
imul
mov
cmp
push
inc
ss
jp
adc
pop
inc
fnstenv
loope
pushf
xchg
insb
rcrl
nop
mov
add
cmp
je
pop
lea
jne
shll
add
or
mov
lahf
mov
push
sbb
pop
inc
xor
mov
jge
cltd
lret
adc
sbb
xchg
enter
or
outsb
lahf
push
adc
push
xchg
mov
ja
push
xor
mov
ds
lods
jnp
dec
add
lds
add
mov
inc
iret
outsl
inc
scas
sub
pop
dec
add
jmp
dec
cwtl
mov
into
mov
jbe
jecxz
xchg
cli
sub
lods
mov
bound
ljmp
mov
dec
enter
fnstsw
dec
cwtl
ljmp
mov
movsb
and
out
jns
fs
leave
clc
dec
stos
dec
xchg
loope
fcoms
sbb
std
adc
fidivs
popa
dec
loope
jle
push
or
cmpsl
jae
call
shrl
ret
add
jecxz
pop
test
pushf
outsl
add
sbb
bound
xchg
outsb
arpl
je
sysexit
mov
sbb
dec
or
mov
scas
lds
cmp
mov
mov
jb
jb
mov
scas
mov
pop
in
sub
mov
pop
xchg
xchg
jge
mov
clc
mov
aas
push
and
push
daa
repz
jns
pop
pop
push
mul
cmp
fs
xor
mov
sub
lea
les
repnz
adc
adc
mov
inc
xchg
in
lret
jl
jbe
and
stos
jmp
inc
call
or
adc
dec
outsl
cmp
add
jne
dec
test
push
mov
pop
fcoms
shrl
repz
pushf
fisubrs
mov
push
push
jno
mov
jge,pt
insb
fwait
mov
mov
fs
mov
sub
pop
xor
jle
and
add
dec
jae
sbbl
push
cmp
mov
dec
mov
inc
sbb
stos
push
xlat
loope
add
jge
xor
idivl
dec
movl
pop
xor
dec
sub
pop
jmp
push
insb
push
pop
mov
pop
cmc
mov
xorl
mov
cmp
imul
or
xor
cmpb
pop
mov
into
xor
shl
add
and
es
mov
xor
arpl
push
jnp
repnz
xchg
pop
sti
pop
cmp
cmp
pusha
aas
arpl
adc
mov
int
fiadds
insb
push
or
pop
inc
movsl
imul
mov
and
lret
rolb
mov
sti
es
aam
into
ljmp
aam
xchg
popf
pop
loop
adc
push
lcall
mov
sbb
mov
push
test
xchg
out
das
mov
stos
das
stos
add
and
dec
add
and
and
xchg
fstp
out
mov
mov
cltd
xor
arpl
hlt
lods
scas
fldenv
xor
sbb
jmp
test
xor
push
test
push
sub
popa
cwtl
sub
ja
sbb
push
hlt
push
int3
or
pop
sbb
and
lret
xchg
mov
sbb
ja
popa
dec
aas
mov
pusha
mov
sub
inc
adc
mov
std
mov
jg
jne
cmp
scas
dec
fsubrl
sbb
xchg
fistl
pop
xchg
mov
mov
or
xchg
sahf
add
aad
out
es
inc
inc
inc
pop
push
loope
shl
pop
lret
xchg
jbe
dec
inc
or
add
pop
stos
call
jge
mov
notb
bound
xor
test
fnsave
push
mov
loopne
pop
dec
push
test
jae
packuswb
xchg
rclb
movsb
jg
lods
in
cmpsb
add
adc
adc
pop
sbb
cmpsl
test
inc
cwtl
fistpll
sbb
xchg
mov
sbb
jmp
test
out
xchg
imul
push
add
loope
xor
adc
adc
aas
push
and
xchg
pop
outsl
hlt
mov
ret
and
out
or
insl
ss
xchg
ljmp
fiadds
repz
mov
adc
mov
not
jae
sti
mov
jnp
insl
jnp
inc
dec
or
xlat
push
pop
and
jae
mov
sahf
mov
lods
adc
loop
mov
xor
xor
pop
dec
aaa
mov
lea
lret
popa
pop
and
inc
push
add
pop
ljmp
xchg
into
sub
enter
pushf
loope
jp
inc
pop
test
orl
aas
lahf
sub
orb
push
cmpl
mov
cmp
adc
mov
xor
cmp
cmp
push
mov
jo
sub
fstl
mov
stos
mov
dec
repz
insl
in
int
in
dec
jecxz
cld
in
pop
cmp
mov
stos
fs
jle
pop
mov
bnd
subl
fidivl
add
loopne
mov
xchg
xchg
xchg
cmp
mov
and
pop
inc
fldenv
xorl
stos
pop
xchg
and
cltd
sub
mov
pop
fdivs
aam
xchg
cmpl
jnp
fmull
pop
adc
push
std
pop
mov
inc
cltd
cmp
mov
jp
pop
ja
mov
in
xlat
adc
or
pop
mov
jl
scas
add
inc
je
fnstenv
les
push
fistl
or
mov
mov
scas
incl
lcall
push
xchg
aad
decl
xchg
adc
jne
xchg
jbe
mov
into
mov
dec
inc
jg
sub
aas
jbe
mov
inc
fnsave
mov
ljmp
inc
mov
pop
jmp
fstps
outsl
inc
xchg
dec
rcrb
iret
cmc
lods
adc
push
mov
sbb
adc
sub
jl
mov
inc
in
mov
fs
mov
pop
leave
mov
pushf
push
mov
jg
cmpsl
dec
cltd
outsl
rclb
out
and
sbb
adc
cmp
jmp
pushf
std
repnz
sub
iret
sbb
mov
push
data16
xor
nop
leave
and
push
xchg
in
lods
unpcklps
cmp
into
test
inc
adc
jecxz
pop
popf
nop
adc
cmp
dec
sub
dec
mov
mov
mov
dec
adc
fisttpl
inc
push
jno
in
shll
adc
imul
pop
gs
dec
lahf
icebp
shl
mov
or
adc
icebp
xchg
pusha
add
les
cld
inc
mov
jb
xor
loopne
inc
jno
xchg
xchg
fiadds
push
dec
and
rcrb
xchg
push
std
aas
mov
pushf
cli
fdivrl
in
xor
sbb
inc
imul
mov
and
push
jb
sub
add
ljmp
les
fcmovb
mov
fucomi
data16
add
add
and
inc
pushf
cli
push
cmp
or
sub
jno
mov
cld
leave
pop
ljmp
ret
cmp
lods
push
js
xchg
nop
push
cld
dec
jne
rcll
push
jbe
sahf
insl
xlat
mov
das
and
test
insb
cmp
sets
mov
test
jl
in
ljmp
jnp
pop
or
fidivrl
not
add
and
insb
sub
or
mov
xchg
xchg
xchg
iret
stos
jecxz
addr16
jne
test
pop
rolb
xchg
in
imul
outsl
mov
shll
dec
xchg
fbstp
sbb
movsb
dec
jno
push
imul
mov
test
orb
in
sti
mov
xchg
push
dec
add
sbb
test
xchg
fists
pop
push
pop
push
int
xchg
cltd
daa
add
lock
adc
movsl
lcall
or
jo
insb
in
jne
jg
cli
daa
add
stos
pop
mov
hlt
cmp
cmp
cwtl
lea
hlt
jecxz
mov
push
sub
pop
cld
ret
add
xchg
and
xchg
fbld
cltd
xchg
movsl
xor
mov
rol
dec
jno
out
push
pop
ss
push
sub
pop
les
add
aad
mov
jne
mov
and
movsb
insl
add
lds
sti
iret
cmp
xor
mov
cmc
jmp
xchg
mov
mov
in
loopne
call
jge
sbb
pop
scas
mov
andb
jmp
xchg
mov
ss
mov
fstl
jbe
dec
das
or
inc
and
mov
mov
shl
lret
pop
push
mov
jns
push
xchg
xchg
stc
xchg
in
out
call
int3
push
and
call
fs
mov
mov
cwtd
mov
shll
hlt
sbb
push
lods
cltd
clc
sahf
lds
insb
movsl
jle
addl
loop
imul
daa
test
inc
loopne
push
push
and
dec
mov
mov
mov
js
and
pushf
hlt
iret
les
hlt
fdivrp
daa
divb
repz
inc
lods
xorl
and
f2xm1
dec
sub
cmc
rorb
mov
pushf
xchg
fs
aam
adc
dec
fnstsw
ljmp
and
adc
ljmp
scas
push
repz
add
mov
mov
cmp
cli
add
in
push
fmul
ret
in
mov
mov
mov
cli
mov
push
loope
xchg
dec
loope
jo
sub
in
adc
shlb
add
mov
mov
pop
insl
aad
popf
mov
and
movsl
push
lds
jg
adc
mov
sbb
push
loopne
push
jb
jl
sub
xchg
push
daa
xchg
add
mov
pop
dec
mov
leave
in
fldt
adc
mov
inc
popa
ret
cmp
int3
push
xor
adc
xor
mov
shr
cli
mov
outsl
or
out
ja
out
insl
inc
imul
sub
pusha
ss
mov
push
mov
cld
pop
pusha
loopne
adcl
test
loope
repz
ret
repz
in
jle
les
nop
push
dec
mov
sarl
xchg
in
and
xor
xlat
sub
shrl
cmpb
adc
dec
sub
pop
ret
add
mov
mov
mov
cs
pop
es
repnz
stos
cwtl
scas
out
and
bound
jp
out
cmp
or
testb
add
add
repnz
adc
xchg
xor
aas
mov
inc
sub
push
lods
test
decb
mov
das
cld
mov
jle
pop
ss
xchg
leave
adc
inc
pop
cmpsl
xchg
mov
dec
push
mov
divb
ds
dec
xor
push
ret
lcall
push
inc
mov
jne
sub
jl
out
in
dec
testl
out
push
and
xor
adc
enter
insl
mov
add
mov
mov
xor
in
xor
in
mov
push
pop
sbb
inc
cmpsl
or
fstps
mov
repz
sti
xchg
inc
ds
push
mov
js
and
or
sbb
jne
in
movsl
pop
adc
jmp
push
xor
lea
or
out
lcall
push
jnp
mov
rolb
push
push
movsb
lea
rolb
or
in
cmpsb
and
xchg
xlat
out
mov
shr
loopne
sbb
push
movsb
insl
or
xlat
adc
cmpsl
xorb
addr16
es
fsubrs
add
std
jecxz
push
loop
push
or
pop
test
cwtl
jmp
loop
mov
xchg
mov
push
fdiv
inc
cmp
lret
lock
scas
cmpb
cmp
jb
shll
add
and
push
gs
xor
mov
mov
cltd
or
clc
je
lahf
insl
test
and
and
ret
xchg
repz
test
and
sub
dec
std
out
in
and
into
push
mov
adc
das
insb
in
int3
sti
inc
shr
jnp
push
jbe
adc
lods
loope
adc
and
push
mov
test
outsl
xchg
sbb
lcall
aad
pop
jne
inc
int
in
pusha
sub
fldenv
jbe
xchg
test
call
in
xchg
adc
pop
aaa
push
xchg
xchg
cmp
inc
sub
adc
adc
push
nop
imul
xchg
inc
jno
push
adc
rcrb
fst
and
dec
sbb
in
adc
jnp
rcrb
mov
mov
inc
mov
out
sub
out
clc
jns
lcall
mov
in
ds
daa
mov
std
jns
inc
ss
sbb
out
cld
sbb
pop
das
std
dec
out
cmp
xchg
fwait
mov
ss
in
iret
daa
popa
mov
jge
adc
push
dec
add
fs
xchg
hlt
leave
or
int
cwtl
and
and
jmp
fwait
mov
lahf
and
mov
cmpsb
mov
rcl
es
mov
and
jg
xchg
stos
andb
loope
ss
xor
push
stos
lods
xchg
sub
out
shlb
clc
es
or
sbb
frstor
jl
cmp
test
movsl
sub
jmp
xchg
test
mov
add
mov
inc
pop
pop
jb
fwait
insb
mov
dec
movsb
lock
xor
mov
fucomip
push
mov
cmpsb
xchg
aas
push
fiaddl
mov
pop
fsubrs
movsb
cltd
xchg
xor
adc
out
out
push
cmpsb
repnz
mov
mov
or
and
movsl
xchg
mov
cmp
sbb
cli
pop
and
das
xchg
push
stc
jle
in
jg
jne
and
sub
in
mov
sbb
adc
push
pop
daa
fsub
shll
pop
mov
xor
cmpsl
scas
fldl
jle
and
jge
mov
aas
adc
pop
aas
xor
pop
or
mov
adc
sbb
jecxz
xor
push
pop
dec
cmp
clts
scas
out
mov
imul
mov
insw
bound
jg
mov
jbe
mov
pop
mov
aaa
in
shrl
fld
cld
sti
ds
adc
mov
hlt
iret
fwait
mov
dec
test
mov
jmp
lret
movsb
out
scas
dec
pop
mov
jns
sub
out
inc
arpl
dec
cmp
js
dec
dec
loop
js
inc
mov
sbbb
sub
and
cmp
push
dec
pop
ss
dec
inc
pop
inc
test
adc
mov
push
xchg
cmpsl
arpl
mov
xor
mov
pop
inc
mull
push
mov
xlat
repnz
adc
in
inc
jne
lcall
sbb
jo
test
push
mov
pop
sbb
or
lret
xchg
in
fs
fnstcw
out
inc
push
mov
movsb
insl
movsl
lcall
and
ja
mov
loop
mov
or
std
push
xor
loopne
out
xchg
fstl
out
mov
add
das
testb
sar
or
cmp
mov
imul
push
xchg
xchg
loop
mov
and
jbe
les
mov
jne
movsb
cmpsb
xchg
and
in
ds
or
jle
aas
cmp
int
push
and
mov
je
scas
jnp
push
sub
dec
inc
adc
sbb
push
sbb
xchg
mov
xchg
ret
pop
mov
xchg
xor
daa
std
scas
adc
dec
and
call
sub
sub
dec
xchg
test
sarb
cltd
gs
sub
les
lret
mov
test
mov
push
lods
jbe
fnstcw
mov
lret
push
jp
mov
push
mov
fldenv
mov
bound
cli
adcb
xchg
add
sub
lcall
cmpsl
lds
icebp
jno
adcb
aas
in
adc
push
add
xor
int
repz
inc
in
xchg
or
adc
xchg
or
jnp
mov
jge
int3
push
xor
sbb
add
mov
mov
stos
imul
mov
mov
xchg
call
adc
sbb
pop
call
adc
and
push
inc
push
xor
xchg
push
cmp
shl
xchg
cmc
cs
xchg
fsubs
lcall
gs
popa
mov
cmp
test
repnz
mov
sahf
fdivl
jbe
iret
lcall
fldcw
jge
int3
cmp
cmp
sbb
xor
push
lret
inc
dec
xchg
inc
outsb
stc
xor
jb
filds
inc
jae
sahf
jb
sbb
sbb
inc
in
dec
pop
and
cmp
jp
sub
sahf
mov
test
add
loop
adc
pop
pop
popf
lods
xchg
out
lock
mov
test
xor
icebp
push
sbb
test
cltd
add
or
fs
sub
cmp
sub
dec
stos
je
popf
pusha
jbe
xor
dec
testb
sub
mov
cmp
mov
cmp
scas
jno
xor
or
xchg
pop
pop
push
or
popa
push
or
cld
aas
adc
adc
cmpsl
xchg
and
dec
xchg
insl
inc
or
sbb
imul
push
insb
addr16
imul
ja
cltd
push
fs
jecxz
loop
inc
idiv
out
inc
xchg
insl
cmp
xor
aam
pop
inc
jmp
hlt
push
bound
sbb
cmp
xchg
push
aad
xor
add
loopne
add
mov
loopne
inc
fdivrl
out
je
fsubrs
pushl
xchg
lahf
insb
jne
or
imul
pop
pop
push
push
sbb
push
fldcw
sarb
dec
xchg
clc
cli
mov
in
hlt
bnd
data16
lahf
fdivrs
loope
addl
sub
clc
and
pop
fldenv
and
jle
outsb
mov
xor
ss
mov
push
push
push
push
cmpsb
adc
shrb
das
push
mov
ja
movsb
rorb
out
push
xchg
addr16
or
fcomip
inc
and
fnstcw
gs
mov
mov
adc
dec
imul
js
shlb
push
rcrb
lock
jb
addb
or
mov
pushf
pushf
mov
pusha
push
lea
call
call
adc
adc
cmp
or
out
xor
insl
fwait
lock
ljmp
and
das
sbb
outsl
movsl
mov
push
jecxz
pop
cmp
jp
xchg
push
roll
cmp
sbb
cld
cwtl
sbb
xchg
pop
and
jg
jne
pop
out
inc
or
xor
enter
adcb
pop
rolb
pushl
fidivrs
fists
sti
dec
imul
movsb
jno
lret
xchg
daa
fnstcw
sti
aad
xchg
cmp
int
adcb
pusha
test
adc
and
mov
fwait
dec
aas
out
or
rcrb
mov
pop
and
aad
das
sarl
sub
adc
cmp
jne
adc
mov
shl
cmp
ror
bt
sub
shl
jmp
movsbw
lea
pusha
mov
neg
rcr
xor
call
inc
rcl
ror
jmp
jmp
pusha
lea
je
dec
shld
neg
inc
add
pushf
xor
cmc
shrd
mov
call
mov
ljmp
aam
adc
cmp
mov
rcll
inc
or
or
orl
pop
jbe
pop
sub
test
je,pt
lods
jns
cmpb
je
shlb
cltd
stc
pop
mov
nop
popf
jne
jmp
jo
hlt
mov
xchg
insl
inc
movsl
loopne
push
mov
fnstcw
sbb
xchg
push
mov
push
sbb
sahf
push
cmp
cs
add
jb
cld
sub
mov
stc
ret
mov
sub
pop
and
pushf
inc
xchg
push
lods
test
push
and
push
mov
sbb
enter
pop
mov
cmpsb
cmp
mov
mov
mov
outsb
fimuls
inc
jge
enter
xchg
xchg
xchg
in
loopne
insb
dec
in
hlt
cmp
mov
sbb
jns
subl
xor
add
addr16
shrl
testl
test
test
xor
pop
in
cwtl
jbe
inc
jbe
fwait
mov
lahf
loop
jg
jo
je
shlb
push
dec
aaa
cmp
lahf
sbb
js
jo
lcall
or
jno,pn
mov
cmp
aam
mov
lods
insl
jg
pop
mov
in
sub
sub
in
cltd
aas
divl
dec
stc
std
shlb
dec
mov
jmp
call
call
push
inc
pushf
cmp
pushf
lahf
lea
lea
jmp
adc
scas
test
jecxz
jno
mov
repz
lea
sub
nop
mov
xchg
xor
add
jns
push
inc
jmp
xchg
flds
cltd
ficoms
push
mov
push
mov
cwtl
loope
sub
ret
addr16
jnp
int
pop
daa
iret
ficoms
sbb
int3
mov
lea
je
test
cmp
call
test
xlat
movsb
inc
into
push
or
jge
mov
xor
pop
sub
push
sbb
add
jp
cwtl
push
or
jns
jl
or
jno
jecxz
cmp
adc
add
jno
aaa
jmp
cs
mov
pop
movsl
je
call
imul
lahf
jl
jl
xorb
dec
popa
test
lock
cmp
lods
xchg
repz
inc
call
xor
inc
cmp
aas
jns
les
fs
call
push
lea
jae
call
lea
jae
xchg
push
pusha
setnp
mov
pushf
jmp
mov
rcl
rcl
btr
mov
stc
xor
stc
repnz
pushf
jmp
pushl
popl
pushl
lea
jmp
mov
lahf
imul
imul
repnz
aam
xor
mov
xor
test
push
dec
call
add
in
jo
jmp
sub
or
cmp
or
repnz
mov
nop
push
into
cmpsb
inc
jp
incb
lock
leave
scas
in
stos
loopne
daa
in
and
jg
ret
push
outsl
inc
fidivs
arpl
fisttpll
push
mov
pop
lods
repnz
mov
ljmp
mov
mov
sub
add
mov
inc
test
or
xor
and
mov
sub
sub
das
jbe
jecxz
les
mov
sbb
xchg
cmp
pop
scas
test
xchg
cmp
cmp
scas
pop
dec
js
xchg
add
cmc
pop
ljmp
in
mov
mov
jnp
push
sub
mov
add
cmpsb
test
std
cmp
inc
inc
push
push
xor
cs
insb
add
mov
ljmp
cmpsl
aas
aad
push
sub
mov
mov
lea
loope
and
mov
popa
xchg
popf
xchg
lret
pop
or
out
pushf
in
lahf
jno
dec
push
mov
pop
xchg
mov
mov
fmuls
dec
and
jbe
or
pusha
mov
mov
out
jnp
mov
ljmp
sub
les
lods
lea
cltd
xchg
sahf
dec
mov
mov
and
scas
add
adc
int
sub
call
mov
shlb
aaa
stc
inc
push
mov
mov
jmp
pop
sahf
ficoms
test
mov
idivb
fidivl
aas
insb
push
adc
fimuls
popa
sbb
mov
imul
stos
push
cmp
xchg
mov
jg
jb
out
jae
add
test
sbb
leave
xor
shll
pop
mov
dec
jnp
and
or
inc
mov
mulb
insb
stos
pop
cmp
popf
outsl
lahf
jmp
pushf
adc
enter
jne
mov
fs
in
gs
cwtl
jne
jge
jo
mov
cmpsb
cmp
out
jl
xchg
or
sahf
insb
ret
outsl
xchg
scas
loopne
rorl
and
sub
jno
xchg
addr16
inc
not
jno
mov
cs
pop
mov
and
ja
jmp
bt
test
pushf
movb
mov
lea
je
jmp
mov
ljmp
adc
ds
pop
adc
in
movsl
jb
cmp
mov
cltd
xor
imul
pop
pop
repz
pop
xor
js
dec
mov
jp
jg
mov
jle
pop
int
pushf
pushf
lahf
dec
jne
sahf
and
out
loopne
loopne
push
insb
scas
iret
xchg
cmp
sbb
push
mov
and
in
jp
subb
addr16
pop
test
test
sbbl
inc
sbb
stos
orl
lods
xchg
enter
or
shrl
inc
sbb
mov
xor
mov
ss
xor
imul
movsb
aaa
inc
sbb
dec
and
pop
dec
fwait
adc
inc
rcrl
pop
mov
cmp
cmp
outsb
lret
fs
gs
movsl
inc
sbb
loope
sbb
or
jnp
mov
ljmp
popa
push
jge
and
inc
mov
or
test
adc
out
addr16
sbb
mov
push
adc
xchg
inc
mov
mov
mov
notb
out
arpl
aas
dec
and
pop
push
movsb
add
jge
xor
arpl
mov
xchg
inc
cmpsb
push
mov
std
decl
rclb
ljmp
dec
adc
loope
out
cltd
iret
push
out
pusha
in
movb
insl
add
movsl
inc
repz
movsl
push
repz
loope
aas
jo
adc
cmp
cltd
adc
add
orl
ss
add
xor
and
das
test
dec
test
xchg
data16
in
cmpsl
adc
jo
adc
or
add
mov
ret
mov
push
sbb
dec
dec
jmp
jmp
inc
sbb
out
sub
mov
cwtl
jne
int3
mov
bound
jo
repz
into
sar
sub
jle
sbb
rolb
cmpsb
push
das
jno
push
sub
jo
xor
bts
shl
mov
pusha
push
and
clc
lea
je
push
add
pushf
pushf
mov
pushf
lea
jmp
jmp
pushf
bt
mov
push
jmp
fsts
mov
adc
mov
inc
fnsave
je
aaa
fisttpll
inc
mov
loop
jno
push
sub
sub
mov
add
stos
js
push
ficoml
mov
pop
inc
inc
ljmp
lahf
fmuls
mov
repnz
jl
push
pop
cmp
lock
pop
xchg
xor
xchg
arpl
pop
dec
cwtl
lods
jbe
jmp
clc
cmp
xor
call
mov
js
push
mov
das
inc
bound
jno
roll
int3
jns
adc
aad
fstpt
aad
mov
in
arpl
js
mov
inc
jl
adc
mov
inc
call
inc
loopne
pusha
cs
data16
and
push
pop
cmp
adc
subl
outsl
inc
inc
jnp
test
inc
test
or
js
cmpsb
loope
pusha
xchg
cmp
imul
sbb
enter
jno
push
xchg
jno
xchg
rolb
sub
xor
fistps
dec
cld
inc
sub
mov
rcl
cmc
aam
nop
shll
mov
pop
bswap
xchg
mov
into
xchg
xchg
xchg
pushf
mov
dec
test
shl
pushl
call
jl
xor
addr16
or
xchg
sub
sti
jno
adc
sub
leave
sti
xchg
lcall
popa
outsb
mov
mov
ret
xchg
mov
pop
push
sub
xor
jno
std
pop
pop
leave
test
or
sbb
xor
pop
stc
addr16
cmp
mov
outsl
xlat
push
dec
pop
lret
dec
mov
xor
rorl
and
inc
push
sti
mov
fildl
lea
je
pusha
cmc
push
push
add
bt
pushl
call
enter
test
mov
pushf
fs
cmpsb
push
xchg
cmpsb
jecxz
fistl
stos
dec
lret
sbb
pop
mov
or
sbb
mov
int
fisttpll
jno
cmp
scas
mov
call
jmp
movzwl
add
sbb
pushf
dec
mov
pusha
jmp
pushf
pushf
pusha
lea
je
cmp
cmp
stc
add
stc
jmp
push
imul
mov
sbbl
test
jae
or
mov
sbb
push
xor
cmp
lods
rclb
aam
call
popa
mov
cmc
lcall
inc
jbe
sub
mov
add
push
jne
ret
mov
xchg
test
lods
lods
add
jge
lret
dec
ficoml
mov
nop
inc
add
add
test
mov
ljmp
dec
sub
pushf
sub
jp
and
daa
mov
cmp
xor
lret
dec
fidivs
lahf
into
mov
imul
mov
xchg
and
lods
mov
rcrl
cli
scas
fcompl
push
adc
xor
jo
loope
cld
xor
xchg
fcoms
scas
add
ljmp
outsl
jne
icebp
adc
xchg
inc
jecxz
insl
and
lock
fildl
xor
add
test
mov
push
test
pusha
pushf
lea
jmp
sbb
addr16
pop
adc
sub
xchg
jle
or
sub
adc
mov
cmp
aaa
sub
pop
orb
lret
repnz
fcomps
nop
adc
mov
add
push
mov
cmp
mov
cwtl
aaa
mov
pusha
nop
inc
nop
push
xchg
jle
out
rclb
or
mov
push
aaa
pop
mov
repnz
pop
lcall
clc
sub
aas
pop
xor
jge
aaa
ret
push
movaps
mov
cmpb
mov
and
jg
movsl
adc
clc
push
lret
push
adc
inc
jb
jecxz
pop
jmp
mov
out
int3
jl
stos
cs
loopne
lahf
push
mov
xor
or
xchg
imul
fstpt
lea
popf
lret
cmp
add
call
xchg
arpl
adc
add
mov
cwtl
arpl
stos
aad
lods
ljmp
jge
pop
dec
idivl
rcrb
or
push
fstps
push
or
add
test
int
mov
cmp
call
push
jmp
neg
pushf
pusha
inc
test
stc
cmp
lahf
pushl
setg
pushf
lea
movsbw
bswap
setno
bswap
mov
mov
jmp
test
ljmp
in
jle
les
xchg
idivb
mov
xorl
inc
xor
push
pop
xlat
ljmp
xor
icebp
nop
lret
out
icebp
sti
in
or
out
leave
test
and
out
jmp
ljmp
sahf
leave
jg
sub
int3
pop
or
pusha
or
stos
leave
add
cmc
lea
jne
stc
jmp
push
inc
pop
mov
push
call
bound
out
ds
scas
inc
mov
add
xor
xchg
or
xor
iret
out
push
ja
xor
lahf
cltd
xor
int3
pop
es
ja
mov
mov
je
push
fstpt
jae
pop
sbb
jmp
sbb
xchg
sbb
jns
or
das
xchg
scas
bnd
lcall
stc
mov
sbb
mov
mov
jp
movb
test
and
sbb
stos
push
push
cmp
mov
int
in
pop
push
js
lret
jl
sbb
jnp
push
push
scas
sub
pushf
pushf
mov
fsubrl
arpl
add
and
aaa
cmp
jmp
xor
mov
and
shll
adc
orb
int
push
std
fucomip
sbb
lret
addr16
pop
sbb
xor
mov
jnp
sub
jecxz
mov
xor
popf
pop
or
mov
xchg
pop
sbb
mov
stos
mov
mov
mov
scas
int
aam
cld
adc
cld
decl
rcll
xchg
jle
test
repz
leave
lea
jb
xor
lret
inc
clc
sub
add
mov
lock
int3
xchg
xchg
fstp
xor
std
inc
and
lea
add
inc
and
xchg
mov
mov
inc
xor
mov
stos
dec
lds
mov
arpl
pop
inc
mov
pusha
push
cmpsb
mov
fwait
sbb
sub
add
cmp
movsb
xchg
sub
pop
repnz
mov
xor
cli
sahf
add
mov
gs
aam
push
xchg
inc
aam
je
fmull
xorb
inc
add
stc
pop
xchg
out
adc
push
pop
xlat
arpl
mov
inc
cli
pop
jnp
adc
nop
add
and
aaa
dec
cltd
mov
push
xchg
outsl
jno
int3
or
fldt
ss
or
or
adc
sti
ja
xor
aas
mov
ljmp
xchg
inc
xchg
jp
sub
sub
adc
xorl
sbb
or
jl
fcomps
roll
lea
jne
bsr
pushf
lea
push
mov
pushf
cmp
pusha
add
mov
bt
jmp
push
lea
call
pushf
pusha
lea
jae
stc
xor
jae
pusha
pusha
pushf
lea
call
call
or
sti
lret
push
ljmp
mov
push
add
mov
or
out
mov
add
sbb
js
divb
shll
inc
dec
and
add
and
ss
int
lds
movsl
jp
and
loop
movsb
imul
lahf
push
cmp
enter
push
xor
adc
ljmp
sub
xorb
test
fsubrl
ss
shl
xchg
inc
movsb
lea
jb
cmc
push
cmp
jmp
jp
stc
mov
inc
rcrl
popf
sti
jecxz
in
xchg
leave
insb
lods
inc
lret
mov
pop
pop
jmp
inc
push
adcb
bound
aam
je
sbb
jg
push
test
add
data16
pop
daa
out
and
pop
fiadds
arpl
jmp
push
sub
jl
add
push
jns
andl
sbb
add
xchg
lea
inc
out
or
and
mov
lcall
cwtl
fs
les
addr16
scas
mov
add
xchg
call
rcrb
fldt
dec
pop
cs
cmp
or
xchg
daa
mov
ljmp
push
push
and
movl
cwtl
push
movsl
and
and
jno
push
sub
xor
sbb
into
adc
fwait
testb
inc
push
call
mov
add
subb
sbb
ljmp
dec
jmp
xchg
pop
add
inc
jle
je
inc
add
shrl
sub
addr16
gs
ret
lahf
cmp
add
add
outsl
lods
insl
sub
and
cli
push
inc
sbb
mov
gs
adc
pop
mov
jno
dec
daa
leave
movsl
mov
cltd
sbb
lods
fs
lcall
jne
test
test
pushf
cmp
cmp
out
aas
adcb
pop
adc
in
add
jo
jns
repz
rclb
popf
xchg
inc
mov
arpl
dec
jae
add
inc
and
mov
mov
je
dec
out
aad
xlat
int
mov
cmp
xor
call
scas
data16
out
sbb
ljmp
or
mov
push
add
sub
jg
push
adc
leave
inc
jmp
inc
mov
out
add
pop
and
adc
adc
nop
fmull
in
or
adc
dec
jp
daa
inc
sbb
scas
imul
dec
add
sti
mov
fiadds
adc
xchg
or
ret
add
push
inc
icebp
inc
lcall
sub
fmuls
pusha
and
adc
stos
int
fs
sbb
mov
dec
adc
ja
jge
nop
push
sbb
aad
fs
clc
shll
cli
insb
mov
adc
mov
int3
or
test
subl
xchg
or
jmp
stos
dec
lds
data16
les
fsubl
cmp
pop
jno
cmpsl
mov
call
push
ljmp
hlt
push
aas
cmp
cmpl
dec
ret
sub
adc
stc
fwait
das
mov
pop
sbb
push
pop
sub
mov
aam
inc
sbb
mov
xor
mov
add
js
dec
lahf
pop
mov
iret
scas
pusha
pop
cmp
in
lock
insb
xor
test
stos
jno
pop
pop
sbbl
add
jp
dec
push
loope
xchg
mov
jg
fldenv
sbb
sbb
addl
cmp
rolb
or
push
out
ss
aam
scas
stc
or
inc
jnp
adc
and
jae
rorb
push
sahf
pop
cmp
cmc
xchg
dec
mov
call
xchg
nop
in
mov
cmpsb
adc
iret
push
inc
cmp
mov
dec
xor
jle
enter
js
insl
add
mov
int
jmp
jno
add
ljmp
lock
shlb
out
shrb
movb
scas
sub
sbb
mov
cs
pop
lret
icebp
inc
and
push
adc
enter
jb
lcall
sbbl
dec
cmp
out
push
lock
mov
ss
in
adc
xchg
dec
cmp
in
aam
call
test
insb
push
mov
xchg
push
sub
fistps
xchg
icebp
push
xor
lds
sbb
inc
push
jb
jno
inc
pushf
roll
out
shll
ja
out
test
popa
sbb
push
mov
xor
lahf
loopne
mov
movl
adc
sbb
sbb
cmp
outsl
inc
jecxz
test
mov
add
flds
and
jne
not
pushfw
call
jae
jp
test
sub
or
outsb
add
or
test
xchg
sbb
add
andl
pop
test
ljmp
scas
data16
int3
je
mov
or
mov
arpl
iret
xor
mov
movzbw
not
pop
movzbw
sets
not
movzbw
pop
xchg
push
bswap
lea
mov
pushf
call
jmp
movzbw
push
push
lea
jmp
jmp
mov
add
ljmp
dec
sbb
fnsave
scas
rclb
repz
xchg
pushf
push
jnp
movsb
sbb
int
cmp
mov
dec
jg
cs
jmp
call
add
cmp
shrb
dec
dec
jo
mov
dec
outsb
pop
sbb
cmp
pop
aas
les
sub
fs
jg
push
or
cltd
addl
jne
scas
lock
pop
outsl
add
or
jns
test
adc
cmp
idiv
lods
and
aam
xchg
lds
arpl
aam
rdtsc
jg
fmulp
mov
iret
push
push
out
bound
jg
int3
je
imul
push
push
mov
out
xor
inc
inc
xchg
data16
shr
lock
ficompl
cli
xchg
pop
jecxz
sahf
pop
mov
ja
xchg
arpl
mov
aas
das
or
aas
pop
das
jmp
sub
dec
fstps
mov
lea
jae
xchg
mov
test
mov
call
cmp
pusha
pushf
push
jmp
mov
adc
mov
xlat
ja
sub
lds
mov
mov
push
xchg
ljmp
mov
xor
daa
xor
lock
xchg
out
push
ljmp
fiadds
mov
cwtl
add
inc
mov
xor
cmc
pusha
xor
xchg
popf
push
lret
fistps
xor
call
loop
arpl
mov
jae
sbbl
mulb
lds
shll
mov
cmc
xchg
inc
sub
aam
jno
sub
test
cltd
jno
cltd
cmp
pop
sbb
jl
leave
nop
push
add
adc
roll
pop
jnp
shrb
xchg
cmc
sub
or
dec
sub
lods
fnstcw
jae
loop
and
sbb
fwait
cmp
mov
xlat
xchg
sbb
pushf
hlt
cli
std
adc
sbb
and
cld
mov
fwait
pop
cmp
and
idivb
out
fdivrl
sarb
notb
dec
gs
aas
jecxz
push
cwtl
cld
rcrb
jmp
movsb
ss
outsb
xor
jo
xchg
cmpsl
jns
pop
fwait
out
mov
ljmp
pop
enter
test
leave
popf
jno
mov
inc
and
out
stos
adc
jecxz
les
sub
in
jmp
adc
or
inc
stos
jo
call
xor
mov
fs
test
push
enter
dec
loopne
cmp
sub
xor
mov
aaa
stos
repz
xchg
sbb
pushf
jle
push
xchg
sahf
jb
call
push
into
into
jbe
js
nop
iret
out
sub
test
xchg
mov
push
loop
xor
push
jo
dec
stos
push
pop
das
adc
xchg
outsb
xor
movsl
fildll
clc
daa
xchg
outsl
movsl
fistps
adc
jnp
pop
nop
jno
dec
mov
inc
aad
mov
insb
and
dec
gs
push
cmp
lock
push
in
outsb
push
xchg
push
push
mov
push
clc
addb
push
sarb
dec
rcll
mov
cmp
call
pop
cwtl
add
pusha
clc
int3
jp
sbb
mov
pushw
push
cs
fcmovne
ret
and
out
int3
jb
subl
xchg
cmc
mov
pop
sub
fsubrl
mov
shrl
or
subb
repz
push
dec
xchg
cwtl
test
mov
adc
mov
icebp
mov
xchg
int
cwtl
add
cmc
and
jp
loop
mov
out
je
xchg
nop
arpl
decb
ret
call
mov
ljmp
mov
or
jb
dec
popa
fwait
xchg
adc
repz
fisubl
xor
fdivs
out
ljmp
movsl
loop
ret
data16
inc
mov
pop
aaa
movsl
loope
mov
icebp
sti
dec
adc
dec
inc
sbb
mov
cmp
mov
xchg
lret
xor
andl
lcall
shlb
mov
imulb
and
dec
popa
cmp
lea
jne
cmp
aad
test
xor
shl
dec
pusha
shld
mov
ror
pusha
add
sbb
call
or
or
test
mov
shll
test
mov
push
mov
out
cli
test
cmpl
sbb
mov
xchg
cs
push
mov
dec
ret
sub
testl
inc
xor
mov
add
push
xor
out
jp
rolb
fwait
and
sbb
xchg
fldcw
cmp
test
addr16
cmp
lret
xchg
mov
xchg
and
xchg
and
pusha
ds
pushf
push
adc
mov
icebp
cmpsl
cmp
ret
xor
stos
in
je
adc
mov
fdivrs
xor
cs
loopne
call
repnz
push
add
pop
dec
fisubrl
push
lods
mov
adc
int
rcrl
scas
cmp
dec
in
lahf
dec
std
mov
mov
or
pop
mov
adcl
ljmp
mov
aaa
fnstsw
test
ss
mov
pop
lret
xlat
rorl
mov
mov
or
or
push
test
inc
out
sbb
xchg
xor
stc
cld
mov
cvtdq2ps
pop
mov
lea
adc
lret
pusha
sub
cmp
dec
fistpll
mov
ficoms
pop
mov
fs
rorl
sahf
out
call
xlat
mov
cmc
jmp
pushf
pushl
cmp
push
lea
ja
rcl
sub
adc
stc
xor
add
mov
setg
mov
test
test
mov
call
inc
mov
pushf
stc
cmp
movzbl
pop
movsbw
setp
lea
movb
lea
mov
mov
jmp
push
neg
int3
test
cs
test
mov
sub
into
mov
out
fs
xchg
push
mov
or
aam
mov
xor
mov
cmp
inc
jl
mov
aad
dec
jmp
out
sti
imul
lock
or
lret
out
add
mov
rol
popf
jb
inc
sbb
lds
aaa
cmp
and
or
xchg
mov
fs
xor
pop
mov
inc
cmp
lret
sbb
in
and
xor
ffree
fistps
jne
insl
mov
roll
loope
dec
bound
mov
cltd
add
test
inc
adc
ret
pop
sbb
mov
test
dec
adc
imul
aam
adc
xlat
xor
cwtl
dec
cwtl
dec
xor
add
add
mov
lahf
mov
adcl
movsl
fildl
sbb
sbb
lods
jp
insl
push
push
mov
movsb
jl
jb
adc
push
jb
mov
and
and
lret
aas
adcb
repnz
jl
nop
mov
adc
add
movl
pushf
pushl
pusha
mov
pushf
push
pushl
ret
push
lock
std
std
mov
xchg
outsb
add
inc
mov
in
sub
pushf
mov
pop
adc
xor
loop
or
jge
leave
in
clc
dec
inc
push
je
push
pop
roll
shll
adc
test
cli
std
cwtl
push
add
mov
cmp
xchg
push
cmpsb
test
arpl
or
and
jmp
pop
dec
push
jmp
bt
mov
clc
cmpb
jmp
lea
jne
or
bt
mov
call
hlt
or
into
test
push
mov
push
cwtl
push
mov
mov
push
sub
es
dec
and
pop
adc
imul
add
dec
jmp
cmp
aas
adc
pop
or
je
fidivrs
in
and
sbb
xor
mov
stos
lds
loope
jge
jnp
cmp
xor
and
sahf
add
repnz
cmp
mov
aam
add
add
xchg
cwtl
fisttpll
dec
icebp
lret
pop
jmp
push
jb
add
push
pop
ror
mulb
test
aam
je
hlt
shlb
inc
fdivr
outsl
add
sub
stos
jmp
xor
or
jg
loope
pushf
fisubrl
push
jecxz
aad
rcrw
inc
jb
jp
push
test
rolb
cmp
and
xchg
in
in
jmp
sahf
mov
push
shlb
pop
dec
fdiv
mov
xor
mov
cmpsb
test
mov
ret
pushf
enter
pusha
pushf
cmpb
pushf
lea
jne
bt
mov
pusha
clc
add
cmp
movzwl
bsf
pop
dec
btc
mov
movl
pushl
cmc
bt
add
call
xchg
pop
jbe
test
rcrl
icebp
mov
pop
xchg
push
movsl
push
dec
mov
sub
je
push
xor
int3
test
mov
dec
popa
cmpsl
mov
pop
aaa
pop
lea
cwtl
jnp
xchg
xchg
push
dec
cs
xchg
mov
add
iret
ljmp
sub
xor
cli
test
adc
pop
out
push
lock
jbe
and
hlt
dec
mov
enter
movb
pushf
movl
pusha
pushf
jmp
call
cmp
repnz
pushl
pushf
push
lea
jne
rcl
bsf
mov
pusha
clc
clc
test
sub
movb
lea
jmp
pushl
mov
bswap
not
mov
pushf
push
movb
pushl
ret
stos
pop
jns
test
out
pop
sbb
fs
jl
hlt
loopne
mov
movsb
mov
mov
out
mov
sbb
lcall
lea
sub
popf
push
mov
aam
popf
jne
mov
cltd
mov
aam
sbb
stos
xchg
cmc
int3
adc
scas
imul
mov
movsl
sub
mov
mov
add
add
jns
sbb
sbb
sub
pop
lea
jae
call
add
dec
outsl
popa
fs
imul
add
movsl
das
shrb
fs
cs
test
or
dec
mov
inc
int
xchg
outsl
aaa
xor
pop
imul
cmp
sbb
sbb
cld
cmpsl
add
sbb
and
jnp
push
test
cmp
out
repz
dec
les
fmuls
inc
mov
aam
call
aas
iret
test
test
or
insb
add
mov
mov
ljmp
xor
jno
xor
sbb
lret
test
jg
push
mov
lret
pop
cltd
jmp
pop
inc
xchg
shrb
dec
jmp
or
cmpsl
sbb
xor
sti
cmp
push
xchg
mov
in
gs
jmp
jecxz
inc
inc
in
ja
add
stos
jb
shlb
dec
sbb
shr
leave
test
pop
or
pop
scas
call
xchg
cmp
shl
or
push
shrl
mov
jnp
popa
cmpsb
call
aas
jp
pop
or
ss
adcb
sbb
jp
in
stos
shl
push
std
inc
mov
dec
jmp
gs
adc
sbb
pop
sbb
pop
jbe
mov
fcompl
dec
cmp
test
lahf
ds
inc
pushf
push
rcll
outsl
dec
cmp
dec
jbe
and
sahf
out
and
arpl
fstpl
insl
push
sbb
or
das
sbb
fmuls
pop
icebp
enter
fdivrp
repnz
adc
jno
in
push
push
lahf
mov
add
stos
sub
dec
sub
mov
xchg
decl
loope
test
ss
mov
dec
and
jle
mov
daa
push
divb
push
mov
sub
push
push
lea
jne
shl
shrd
add
sub
bswap
movzbw
setno
mov
cmp
pusha
call
btc
shl
stc
sub
shrd
mov
inc
mov
shr
shld
dec
add
xor
movw
shr
rol
bsr
pop
test
mov
or
pushf
jmp
mov
ljmp
or
mov
pop
sbb
out
out
ds
dec
xabort
sahf
inc
pop
or
jns
jb
mov
lods
and
xchg
add
repnz
mov
enter
cli
imul
loope
ja
jg
cmp
pop
adc
inc
insb
out
sbb
cmp
cmc
mov
loope
dec
iret
arpl
jmp
jbe
sbb
mov
es
pushl
pushl
test
cmp
mov
mov
lea
lea
cwtl
lahf
lea
jno
pop
push
movb
lea
jne
ja
pusha
lea
jbe
pusha
pushl
lea
jb
pushf
cmpb
pusha
pusha
lea
jne
pusha
adc
sar
sbb
mov
cmp
add
stc
stc
cmp
jmp
jmp
sahf
mov
aam
ljmp
fiaddl
sub
mov
in
loope
pop
xor
cmp
lock
fcmovnu
sbb
mov
jmp
aas
jns
int3
movsl
pop
rcr
add
xor
pop
stos
inc
arpl
cmp
call
leave
pop
test
out
call
adc
dec
add
push
pop
push
mov
ret
pop
sbb
xchg
push
jge
xor
and
sub
test
dec
out
cmpsl
inc
loope
fwait
pop
pop
shll
andb
push
mov
xchg
dec
jno
adc
aad
bt
mov
fadd
cmp
movsb
repz
gs
add
pop
rcrb
inc
fwait
xchg
cld
shrb
lock
dec
repnz
fistps
cmc
cmp
sub
pop
push
xchg
fildll
addr16
mov
xchg
or
mov
daa
shll
or
rorl
or
flds
add
jae
popa
addr16
outsl
js
add
rcrb
shlb
mov
lcall
addr16
test
xlat
cltd
xor
fistpl
lret
sub
sti
pop
jno
cmc
mov
inc
cmp
std
jae
clc
mov
push
int
in
gs
lret
cmp
sbb
adc
adc
xchg
andl
push
sbb
lcall
call
jmp
repz
jmp
dec
sbb
gs
push
push
lods
cmp
pop
inc
push
push
push
mov
pop
lret
sub
mov
jb
jae
mov
insl
movsl
jle
setg
pop
popl
lods
stos
insb
lods
cmpsl
loop
mov
xor
aas
sbb
mov
push
pop
lods
xchg
mov
cs
xchg
push
adc
pop
rorl
dec
mov
cmpsb
mov
movsb
loop
notb
lods
jb
xchg
cmp
neg
bsr
shl
mov
stc
pusha
pusha
and
jmp
pop
outsb
das
fsubrs
sbb
imul
jg
loope
jno
negl
pop
daa
add
lret
fists
je
insl
jle
sub
repz
sub
cmpb
es
cld
negl
cs
xlat
sbb
lret
in
mov
cmc
movsb
pop
or
pusha
rclb
cmpsb
inc
or
out
inc
adc
in
fs
jmp
call
negl
xlat
pop
pop
cmc
out
aaa
je
push
pop
mov
adc
sub
call
inc
or
dec
pop
lret
dec
sub
sub
mov
sub
push
lea
mov
test
fidivs
iret
in
lret
test
sub
or
lock
mov
das
lret
outsb
outsl
in
into
xchg
imul
lret
sub
mov
clc
aad
dec
dec
pop
imul
out
popa
jmp
scas
imul
adc
push
pop
insl
popa
dec
mov
dec
or
jecxz
push
outsl
jns
dec
adc
fildll
dec
stos
rorl
iret
lret
pop
movlps
mov
sub
scas
pop
pop
pop
jmp
loopne
outsb
or
jbe
out
test
push
insb
inc
pop
dec
or
dec
pop
lret
xor
fildll
lret
push
or
into
dec
jmp
je
pop
addr16
stos
out
lods
pop
shrb
popf
xor
mov
jno
scas
cmp
stos
sbbl
test
lods
jmp
lods
sbb
push
test
sbb
outsb
stos
ret
scas
jno
inc
xchg
ret
push
in
scas
lods
test
imul
sub
add
iret
xchg
and
xorl
popa
push
xor
or
jmp
mov
xor
lret
aaa
sbb
das
cmovge
xlat
popa
adc
call
sub
push
or
push
pop
adcl
call
lods
les
stos
push
push
ss
out
xchg
ret
aaa
stos
lret
imul
fmuls
je
dec
call
sti
shll
out
fmuls
dec
test
xor
jbe
dec
sub
lea
fldt
lret
mov
push
iret
add
imul
mov
ljmp
repz
add
shll
test
das
lods
jae
insb
out
arpl
rorb
rcr
repnz
fcompl
test
jae
mov
jno
dec
test
repnz
inc
gs
cmp
in
xchg
jmp
jae
xchg
popf
inc
push
xchg
out
outsl
shr
in
or
call
outsl
scas
adc
pop
sbb
and
arpl
push
outsl
addr16
repnz
ret
pushf
outsl
filds
push
icebp
shl
push
aaa
lahf
adc
or
xlat
lahf
inc
xlat
mov
cmpsb
outsb
mov
fwait
in
mov
shl
pop
mov
test
stos
fsubrl
push
movsl
dec
mov
or
sarl
dec
in
push
mov
stos
dec
pop
jge
mov
fadds
cvtps2pd
mov
cmp
push
adc
ret
repnz
dec
sbb
loope
xchg
or
loope
orl
push
outsb
rcl
sub
daa
into
int
jne
ficompl
xchg
xchg
ficompl
sbb
sub
cmp
push
jae
lret
cmc
pusha
pop
xor
add
mov
inc
cltd
jne
push
pop
in
cmovle
in
jp
dec
push
scas
aad
xchg
xor
jp
or
jle
cmp
add
inc
in
dec
jmp
test
mov
sahf
pop
test
pop
xchg
lret
fisubrl
jmp
or
outsl
jno
or
and
fstl
arpl
mov
mov
incl
jmp
outsb
ret
lret
and
push
enter
test
xor
cmp
ljmp
pop
or
sub
push
je
je
mov
testl
imul
rcl
mov
mov
stos
enter
xor
dec
push
push
jb
push
push
mov
scas
xchg
mov
push
push
mov
or
icebp
pop
icebp
outsb
mov
add
lods
into
pmaxsw
add
sub
in
test
or
sbb
add
dec
out
mov
xchg
neg
ja
hlt
mov
cs
stos
jecxz
jae
out
jbe
div
cmp
lea
and
cmc
jne
aad
mov
out
hlt
shll
lea
xchg
iret
lds
lods
mov
testb
lea
mov
outsl
repz
shlb
icebp
out
popa
not
cmpsl
repz
gs
sahf
ret
in
arpl
insb
jecxz
and
paddb
push
movsl
jbe
jno
out
jge
aam
cmp
or
add
outsb
and
fisttps
xlat
popa
ror
cmc
xchg
movsb
fisttpll
adc
sti
outsl
xlat
or
loop
inc
ss
out
lret
push
mov
lea
sbb
xor
sub
add
mov
rol
repz
lahf
push
sub
lret
stos
mov
sub
ljmp
sub
jmp
imul
test
test
das
maskmovq
into
scas
mov
cs
xchg
in
int
notl
int3
int3
lods
lods
and
ja
movsl
stos
xchg
fcomp
mov
ja
arpl
movsl
shl
hlt
and
arpl
xchg
ret
inc
mov
add
pop
cmc
out
sub
mov
ds
sbb
out
and
lods
inc
icebp
pop
iret
outsl
and
shlb
cmp
xchg
mov
int
rcrb
stos
addr16
mov
fcompl
mov
mov
jecxz
out
mov
fucomp
pop
pop
outsl
fnstsw
loope
loop
fs
in
out
push
jmp
out
imul
mov
outsl
in
insl
in
mov
jae
out
lock
icebp
hlt
outsl
cmc
ja
pop
fcmovb
fld
pop
mov
outsl
pop
ffree
pusha
mov
mov
ja
fsubrl
loop
imul
in
in
out
out
call
out
jae
out
repz
mov
outsl
pop
pop
pop
mov
jae
out
pop
lds
popa
outsl
bound
fs
jae
out
push
jmp
fisubrs
out
mov
outsl
jae
xchg
pop
sbb
mov
jecxz
data16
out
lahf
pop
mov
mov
in
shlb
xchg
ljmp
ja
out
cmpsb
je
out
fstpl
mov
lcall
xor
shlb
in
jne
dec
ja
rorb
xlat
gs
cmpsb
sub
cmpsb
pop
xor
out
hlt
or
repz
adc
ds
xchg
jno
das
xlat
loopne
rolb
scas
ja
data16
ss
test
cmc
cltd
pushl
xor
imul
add
jns
aad
mov
dec
dec
hlt
jno
int3
mov
jae
out
popa
lds
cltd
outsl
cmc
adc
dec
mov
psrlw
into
sub
shrb
lret
loop
pop
or
negl
mov
pop
dec
cwtl
push
negl
jmp
xor
imul
jl
arpl
loopne
enter
fndisi(8087
mov
outsb
and
inc
push
push
loopne
lds
imul
loope
out
leave
shl
sbb
and
pop
pushf
xlat
mov
pop
cmp
int
pop
pop
testl
xchg
fcomip
loop
imul
mov
xlat
jne
je
aaa
mov
push
push
cwtl
cmp
testl
cmc
lret
pop
iret
jmp
test
mov
pop
ja
cmp
inc
push
popf
mov
inc
cwtl
dec
loop
push
push
mov
xchg
jl
mov
fdivl
dec
std
push
sbb
mov
xor
repz
int
idiv
fidivs
negl
rcll
testl
loopne
pop
mov
repnz
push
or
mov
mov
or
adc
outsb
ljmp
push
push
sub
in
pop
imull
aaa
leave
jl
pusha
repz
mul
mov
cmp
pop
adc
inc
and
inc
pop
add
negl
fisubl
jmp
loop
and
mov
push
push
dec
div
add
insb
mov
sbb
mov
stos
lret
fnsave
dec
lock
cs
cltd
cmp
jecxz
inc
xlat
xchg
mov
or
idivl
mov
mul
and
sti
notl
into
push
pushf
push
jns
jge
dec
outsb
pop
js
lret
mov
ss
mull
fwait
icebp
xor
iret
inc
sti
scas
cld
inc
pop
pop
mov
sbb
pop
mov
out
inc
fucom
imul
pushf
mov
outsl
cmp
xchg
or
mov
mov
jo
push
in
fmulp
mov
leave
cmc
notl
mov
or
pop
sub
testl
sbb
pop
in
mov
loope
loop
cld
adc
push
pop
xor
nop
insb
inc
add
mov
loopne
and
fwait
mov
out
shrl
cmp
out
push
xor
xor
xchg
mov
nop
imull
xor
lcall
inc
call
test
and
mov
shll
outsl
jecxz
fstps
ljmp
aaa
lret
stos
clc
jle
xlat
dec
out
xor
cli
pop
mov
imull
xchg
pop
sbb
xchg
jge
imull
cmp
ss
sarb
pop
add
jmp
sbbl
negl
fdiv
lods
cltd
sti
push
adc
or
and
inc
adc
mov
mov
outsb
xchg
mov
sbb
ss
jg
sti
dec
xchg
or
loopne
sub
test
or
sub
popf
or
xor
jbe
notl
xor
xor
and
testl
ja
testl
fldl
and
jb
and
mov
out
test
cltd
mov
subl
xor
aaa
fists
xor
jp
or
pop
test
cmpsl
scas
add
jne
loopne
and
xchg
and
es
movsl
notl
cmp
push
xchg
pop
fnstcw
scas
fwait
pop
mov
ljmp
xor
rcrb
mov
lmsw
sbb
push
lcall
insb
xchg
xlat
aad
and
push
lret
stos
fdivrs
mov
out
push
call
sbb
divl
lahf
adcl
jmp
dec
maskmovq
into
jl
sub
scas
stos
idivl
mov
out
fsts
pusha
ret
and
sbb
std
mov
inc
icebp
je
inc
pop
cmpsb
lahf
jo
sahf
out
orl
dec
out
cld
rorb
or
mul
scas
lret
pop
mov
ljmp
adc
xchg
popa
push
ret
es
push
lods
inc
stc
push
mov
dec
pop
mov
test
aas
movsl
inc
outsb
pop
rclb
mov
cmp
testl
ljmp
sahf
pusha
sbb
lcall
cltd
bound
xor
fiadds
aas
out
into
xchg
negl
fs
ret
fnstsw
or
pop
aas
mov
cmp
scas
jecxz
jne
jg
sub
jmp
jge
adc
push
push
rclb
popa
dec
jo
mov
mov
xor
addl
mov
leave
push
push
mov
jge
sub
jmp
pusha
lea
jb
bt
bt
call
pushf
inc
inc
add
rcl
xchg
seto
mov
mov
add
neg
mov
stc
test
push
movsbw
add
rcr
mov
pushf
pushf
pushf
sub
push
pusha
jmp
inc
or
dec
push
mov
fdivrl
andb
loope
sbbl
bnd
mov
adc
xchg
adc
xor
pop
xorb
or
lock
cmp
or
xor
repz
sbb
rep
jo
mov
mov
mov
mov
or
fisubrs
push
cld
xor
jge
pop
xchg
ljmp
add
mov
push
in
cmp
jno
and
mov
ret
test
call
pusha
lea
jbe
shr
xadd
cmc
mov
shl
shrd
sar
shrd
add
rcl
mov
sar
rcl
bsr
shl
add
bswap
shl
mov
movl
movsbl
sar
neg
ror
mov
cmp
cmp
jmp
xor
inc
inc
jmp
roll
add
dec
push
mov
push
into
push
xchg
daa
je
jbe
mov
jg
das
sub
xchg
mov
and
mov
xchg
jns
mov
daa
movl
movsl
mov
js
pop
iret
loop
mov
popf
pop
paddw
pop
sbb
lea
sub
leave
sbb
xchg
pusha
call
jmp
jmp
cmpsl
inc
mov
test
stc
mov
das
add
jl
dec
dec
daa
dec
dec
leave
fbstp
and
leave
mov
out
mov
jg
outsb
adc
sahf
fwait
mov
add
out
rcrl
mov
mov
mov
add
mov
test
mov
or
mov
push
jne
sbb
xor
fstps
ja
and
sbb
leave
orl
nop
insl
mov
fisubrl
in
push
js
cli
jge
push
out
cmp
push
fcoms
and
mov
movsl
xor
jp
or
add
movsl
sbb
or
push
cmpsl
shll
insb
pop
mov
jecxz
add
sbb
mov
cmc
cmp
or
lret
sub
sbb
popf
test
xchg
cwtl
fldt
fldln2
jns
or
mov
adc
repz
test
cmp
cwtl
ret
aad
flds
or
fiadds
stc
jmp
xchg
pop
mov
pop
dec
ja
xor
mov
pop
and
push
out
adcb
xchg
int3
xchg
dec
jecxz
pop
adcl
mov
ss
dec
push
cmc
test
addl
ja
cmp
jg
sahf
xchg
addr16
scas
mov
sub
into
inc
and
add
xor
mov
outsl
mov
arpl
lret
ficoms
fsubr
repnz
call
mov
inc
call
std
add
out
ljmp
and
cmp
xor
push
enter
outsl
mov
add
xor
in
addr16
fwait
ljmp
xchg
inc
mov
push
test
cmp
mov
pop
andb
stc
repz
cmpsb
push
pop
ret
jmp
gs
aaa
cmp
pop
pop
imul
stos
or
aas
jb
inc
add
pop
fsubs
mov
adc
outsb
sahf
loop
loop
aam
std
lcall
mov
stc
mov
ror
cld
clc
call
mov
movl
jmp
jmp
inc
cmc
fucomip
test
mov
add
add
int
dec
cmc
ljmp
pop
cmp
hlt
xor
cmp
test
arpl
mov
into
loopne
xchg
ds
pop
test
jns
les
jne
mov
cmp
mov
out
cmp
fadd
lret
in
inc
push
stos
adc
or
or
xor
mov
mov
mov
pushf
inc
adc
inc
cmp
jmp
jbe
jbe
insb
xor
cs
insb
add
ljmp
sbb
push
loop
inc
dec
in
or
rolb
adc
or
imul
inc
scas
je
in
shll
daa
mov
test
cld
js
lock
cwtl
popa
out
movl
sbb
push
xor
mov
pop
int3
push
movsb
ljmp
mov
cmp
jg
int
dec
and
mov
jecxz
sbbb
lcall
lea
jne
bswap
pusha
shld
mov
bt
pushf
pushf
add
bt
stc
bt
movzwl
dec
adc
btc
mov
movl
jmp
call
lock
jmp
cmp
mov
push
shrb
mov
cwtl
push
loopne
clc
insb
rcrl
xor
sbb
out
fsubrs
sti
adc
iret
mov
fcomps
shrl
push
mov
enter
pop
xchg
sti
jne
scas
xchg
dec
ss
iret
mov
inc
jge
cmp
jle
mov
ss
inc
mov
aas
mov
test
xchg
pop
aas
incl
jge
adc
lret
es
fs
jb
call
rcl
add
mov
movzbw
mov
push
mov
jmp
cmp
mov
and
and
inc
inc
out
pop
sub
add
leave
sub
addr16
xchg
lds
jle
or
int3
stos
fldl
int
push
inc
nop
sbb
scas
pop
sub
sbb
cli
test
out
mov
or
push
pop
movsb
imul
out
ret
stc
cmpb
push
lea
jne
neg
cmc
lahf
sub
ror
ror
adc
mov
rcr
ror
sbb
rcl
add
push
call
test
inc
or
push
fcompl
jle
adc
push
fs
inc
jecxz
sub
jae
inc
shr
aaa
sub
adc
mov
mov
jb
aam
test
push
icebp
dec
test
pop
pushf
sarb
and
jmp
addr16
out
int
adc
mov
pop
sbb
dec
repnz
sbb
test
cmp
call
or
add
das
mov
adc
sbb
inc
flds
lods
xor
pop
call
inc
cmp
sub
jecxz
mov
test
cmpsb
jl
pop
jg,pn
movb
in
inc
insb
pop
xchg
jnp
in
fwait
push
int3
push
push
xchg
in
jae
cmp
inc
or
loop
out
test
mov
lahf
scas
cli
xchg
adc
test
mov
and
insb
cmp
pusha
add
aad
daa
mov
jge
sub
test
clc
pushl
popl
stc
pusha
cmp
pusha
call
lea
jne
movzbw
and
mov
pushf
pushf
add
bt
clc
stc
stc
movzwl
bts
mov
call
call
jno
jmp
insl
out
out
sub
pop
push
cmpsl
shrl
xchg
ja
sub
sahf
mov
jmp
je
imul
imul
xchg
and
push
mov
hlt
mov
clc
add
xchg
push
in
jp
pop
jo
jae
jbe
xlat
rolb
mov
fwait
add
xchg
sub
div
or
ljmp
in
jno
adc
sahf
ds
je
sbb
inc
out
mov
inc
outsl
fprem1
add
xlat
fs
in
loopne
inc
iret
xchg
sub
insl
pop
xchg
jl
xchg
push
xchg
pop
outsb
outsb
ret
gs
or
lahf
insl
pop
jno
push
outsb
mov
push
pop
scas
add
out
sbb
dec
mov
shr
pop
jecxz
fwait
cmp
pop
in
repz
fs
cmpsb
lahf
repnz
cmpsb
clc
cld
sbb
xchg
je
repnz
mov
sbb
fcmovu
xor
je
inc
out
xchg
scas
mov
mov
push
mov
xbegin
adc
mov
and
cmp
sarl
inc
negl
dec
ljmp
lock
jbe
addr16
jns
imul
push
and
pop
hlt
xor
fcoml
lds
outsl
mov
inc
pop
adc
arpl
cmpsb
out
sub
in
mov
test
jne
repz
push
sub
add
push
lds
mov
jbe
insb
jae
xor
enter
mov
jae
cmpsb
icebp
fs
jne
aad
adc
jbe
aam
gs
cmp
icebp
lods
xor
aaa
mov
mov
aaa
inc
out
mov
sbb
out
movsl
fimuls
fsubrl
aad
sbb
pop
or
jo
inc
mov
mov
push
cmp
clc
mov
inc
ja
mov
test
or
adcb
iret
insl
jns
imul
mov
fisubs
lahf
imul
out
mov
lds
add
cs
fcmove
push
mov
inc
sub
sbb
mov
xchg
pop
jmp
outsb
mov
repz
cmpsb
mov
add
scas
and
add
lcall
mull
inc
adc
out
add
mov
call
incl
xchg
orl
inc
imul
cmp
mull
sbb
pop
cwtl
rcrb
pop
sub
notl
inc
rorl
idivl
fwait
cmp
fdivrs
loop
aas
lods
cli
push
gs
out
dec
pop
mull
inc
mov
negl
or
testl
test
inc
andb
out
xor
ja
jns
loopne
fnstcw
repz
mov
push
dec
add
in
rcrl
cmp
fstpt
enter
movsb
test
out
lret
sarb
dec
test
testl
hlt
cmp
ror
jo
inc
sbb
in
adc
adc
add
xor
dec
sarb
repnz
mul
popf
mov
mov
out
hlt
xchg
mull
cmpsb
or
neg
xchg
mov
pushw
fists
outsb
div
and
mov
lret
cmpl
divl
and
pop
inc
sbb
cmp
sbb
scas
enter
iret
fistpll
pop
dec
stc
jg
fidivrs
add
sub
sub
and
mov
sbb
arpl
cmpsl
pop
cmp
sbb
fwait
and
cmp
pop
mov
idivl
mov
negl
decl
adcl
push
jl
notl
pop
dec
mov
int3
and
lahf
sbb
xorb
and
cmp
jle
xchg
dec
mov
or
jmp
insb
int
mov
mull
or
add
in
je
neg
ljmp
negl
inc
xchg
push
in
aaa
shr
inc
sbb
loope
mov
idivl
or
pop
cmp
xchg
imul
cmp
cmp
scas
pop
mov
imull
sub
cmp
mov
mov
idiv
push
jecxz
dec
out
fdiv
out
and
mov
push
jmp
div
add
pop
test
push
js
scas
lcall
std
fs
pop
test
cmpsl
repnz
ret
xor
xlat
pop
test
mov
mov
aaa
mov
push
aad
out
add
inc
sar
xor
cltd
fs
jl
int
mov
cwtl
xchg
in
je
testl
rcrl
push
ss
adc
xchg
mov
push
in
test
lcall
mov
sub
pop
ret
insb
sarb
inc
and
dec
lret
dec
jl
leave
idivl
mov
out
cmp
movsl
movsb
in
xor
push
mov
test
mov
sub
stc
push
fsubp
cmp
fwait
mov
fbstp
push
bound
mov
repz
xor
hlt
pushf
idivl
out
repz
cmp
mov
mov
rorb
testl
int3
testl
add
test
repz
inc
out
cwtl
cmpsb
jo
mov
pop
or
aaa
ror
pop
xchg
mov
pop
cmc
shl
nop
jo
or
push
jmp
pop
mov
jp
gs
arpl
jne
mov
je,pn
sarl
fcomps
pop
sbb
inc
xor
dec
or
mov
jb
notl
sbb
cmp
sahf
mov
mov
xchg
xchg
out
xchg
mov
xchg
notl
jg
dec
iret
jge
fcoml
mov
repz
in
push
out
push
out
andb
mov
mov
neg
das
xor
dec
adc
xlat
mov
jb
mov
xchg
divl
xor
mul
mov
sahf
xor
adc
clc
add
aam
jns
out
fists
ja
sbb
cs
out
mov
out
out
xchg
into
mov
mov
adc
xchg
dec
push
mov
stc
push
xchg
testl
bnd
neg
xchg
ljmp
notl
mov
adc
xor
inc
and
jecxz
mov
inc
ror
and
xchg
dec
xor
cld
cmp
pushf
sub
into
out
enter
cmp
loop
jl
testl
cld
icebp
or
push
fimuls
out
fcoms
lcall
and
lods
divl
jle
ret
jnp
popf
int
adc
xchg
fcmovnbe
sbb
in
stos
test
pop
xchg
imul
ficoms
leave
nop
sbb
add
jecxz
dec
cltd
xlat
push
pop
jbe
add
mov
jecxz
fisttps
sub
sbb
cmpsb
imull
sti
inc
pop
cmc
ret
mov
pop
test
sbb
jl
dec
mov
cltd
xor
dec
and
rep
leave
mov
notl
out
ljmp
jnp
insb
outsb
out
mov
js
jmp
mov
or
aad
stos
movsb
mov
adc
and
in
dec
cmp
sub
or
push
mov
pop
mov
xchg
sub
xlat
loopne
push
push
jns
fsubrl
dec
or
mul
stc
inc
scas
cwtl
xor
mov
adc
push
fcmovbe
jmp
mov
mov
das
in
frstpm(287
or
dec
or
push
bound
imul
in
mov
not
sub
sahf
iret
ja
test
and
mov
inc
sub
daa
fidivs
insl
addr16
mov
mov
add
stos
notl
pop
xchg
aam
xorb
jae
sahf
sub
jns
sub
js
daa
pop
push
xchg
sbb
test
cmp
fldenv
idivl
xor
sub
mov
out
enter
mov
mov
ljmp
inc
dec
lods
imull
js
data16
xchg
cmpsb
iret
pop
leave
push
lods
loop
xchg
jg
or
test
dec
adc
sub
ret
mov
inc
gs
dec
int
testl
xlat
sub
pop
out
adc
add
mov
mov
cmp
add
lret
jb
gs
negl
adc
and
fs
mov
enter
sub
jl
sbb
jmp
push
sub
inc
loop
ficoms
in
jae
les
dec
mov
dec
lea
inc
adc
nop
xchg
in
testl
xchg
sub
mov
pop
push
aam
fwait
iret
out
inc
fstl
negl
cmp
test
dec
bound
mul
dec
icebp
xor
inc
daa
loopne
xor
lods
mov
mov
or
into
int3
out
imull
sahf
sub
dec
add
in
xor
imull
gs
js
jge
data16
mov
mov
jmp
icebp
xchg
adc
flds
out
xor
cmpsb
jbe
testl
ret
test
mov
xchg
add
repnz
testl
mov
dec
mov
jo
lret
mull
mov
subl
test
mov
arpl
dec
subl
cmc
outsb
leave
filds
dec
cltd
repnz
xor
fsubrl
push
mov
std
imul
nop
cmp
mull
jg
aam
jo
dec
testl
xchg
or
xlat
xor
fildll
fildl
orl
in
fidivrs
fstpl
and
idiv
jne
adc
jp
pop
imull
sti
sbb
mov
sub
adc
push
addb
test
xchg
fisubl
lods
outsb
movsb
push
sbb
fs
jecxz
in
jb
mov
test
mov
clc
cmp
lahf
scas
push
gs
cmp
cwtl
mov
imul
cs
scas
je
lret
xchg
push
test
or
xor
xlat
jb
clc
sbb
push
int
loopne
scas
psubw
jae
cmc
mov
mov
pop
hlt
push
in
in
ds
xchg
jnp
sub
adc
in
out
mov
in
ficomps
div
sarl
xchg
imul
daa
pushf
and
repnz
and
xor
push
loope
shlb
out
dec
jae
shl
xorl
xchg
push
dec
xchg
cltd
rcr
les
dec
repz
adc
pop
sbb
call
imul
out
sub
jmp
stos
adc
cwtl
pop
push
call
aam
sbb
in
out
push
jo
adc
xor
xchg
fs
xor
inc
xchg
loope
cmpsl
test
fstpl
push
mull
cmp
or
enter
pop
fdivs
movsb
sbb
xlat
jno
movsl
cmp
mov
xor
pop
js
jb
mov
inc
jns
or
es
pop
mov
cltd
divl
rcrb
cmp
arpl
dec
aas
shll
out
into
aad
insb
push
cltd
idiv
es
mov
mov
mov
pusha
setp
cwtl
lahf
sub
xor
sbb
cmc
and
je
add
iret
icebp
mov
mov
xchg
lret
pcmpeqw
test
cmp
push
or
daa
pop
shl
push
insb
and
xor
adcb
and
adc
sbb
pop
mov
jmp
outsl
in
subb
push
or
sub
popa
sub
fcmovbe
mul
pop
jbe
mov
inc
icebp
fcmovnu
dec
xlat
out
add
add
fcoms
movq
mov
cli
jg
pop
jne,pn
test
enter
enter
sub
mov
mov
sbb
fwait
mov
repnz
xchg
xor
dec
xchg
push
arpl
adc
idivl
sbb
fiaddl
inc
pop
inc
popf
xchg
add
add
test
pop
notl
mov
pop
out
mov
mov
adc
mov
xchg
aad
stos
notl
jno
sub
testl
mov
test
or
fsub
out
ficoml
adc
jg
fisubs
hlt
gs
ficomps
testl
mov
out
sub
shl
js
je
ficoml
scas
test
movsl
cltd
jne
pop
adc
fimuls
pop
filds
jbe
push
inc
fists
aad
push
sbb
insb
jae
push
out
hlt
mov
cmc
mov
ljmp
lock
jo
test
addr16
xchg
ljmp
ja
and
dec
out
neg
sub
aaa
push
out
leave
xchg
or
add
xlat
and
sub
lcall
ljmp
lret
push
dec
into
jp
mov
pop
mov
add
dec
sub
rcrl
ficoml
jg
mov
sub
sbb
dec
lea
xchg
sbb
pop
outsb
out
leave
mov
int3
repnz
jmp
jmp
jbe
jmp
insl
xlat
sbb
mov
sub
inc
hlt
fs
in
addr16
ret
fbld
scas
mov
jbe
inc
mov
pusha
pop
lret
push
pusha
out
push
mov
in
jbe
fidivrl
push
out
mov
out
sbb
lock
mov
pop
mov
and
fstpt
cmp
aaa
cltd
sti
mov
cmpl
lret
dec
scas
fs
mov
pop
xlat
push
mov
cmp
ret
and
aas
in
out
jg
lret
dec
out
and
cltd
mov
jae
add
daa
insl
cmc
es
jae
dec
movsl
pop
outsl
ljmp
ficoml
fistpl
fisubl
aas
fs
mov
outsb
out
pop
bound
sbb
xlat
dec
outsl
lahf
out
icebp
mov
xlat
sbb
je
fidivl
mov
jae
ja
out
xchg
mov
fs
push
jnp
xlat
test
xchg
xchg
jno
cmp
lahf
mov
outsl
out
insl
scas
rolb
imul
in
outsl
and
fs
int
ficomps
mov
jno
insl
sbb
popf
std
out
sbb
mov
fldt
mov
mov
out
insb
push
pcmpeqd
lds
adc
jmp
mov
loop
inc
sti
dec
push
cli
pop
push
xchg
in
in
je
jp
xlat
xchg
dec
enter
fcoms
mov
xchg
test
jbe
out
mul
ret
mov
inc
pop
mov
int
adc
mov
push
pop
inc
stos
scas
cmp
in
pushf
pop
fsub
ss
jb
inc
cmpsl
ja
test
push
fisubrl
fsubs
jecxz
lahf
sahf
idivl
loopne
dec
into
pop
adcb
fbld
imull
in
cmp
xchg
stos
movsb
test
jb
or
jmp
sub
mulb
jae
jne
xor
fcmove
arpl
out
subb
leave
mov
xor
ja
mov
in
mov
sarb
jae
dec
pop
rolb
test
xchg
out
sub
ret
sbb
cmp
cmp
jle
test
pop
jne
xor
in
or
divb
inc
sbb
inc
daa
adc
in
push
repnz
push
sbb
mov
fnsave
repnz
in
fs
or
std
mov
test
inc
repz
cmp
jno
adc
xlat
cmp
xchg
icebp
iret
mov
or
inc
xor
xchg
movsb
xchg
sub
fbld
out
fs
mov
insl
aas
andb
push
imul
out
lock
pop
movsb
jbe
and
jge
rcll
repnz
xor
lcall
outsl
insl
add
out
ljmp
cwtl
aas
movsl
push
fs
add
addr16
icebp
lahf
jno
pop
mov
cmp
lods
addr16
in
mov
ffree
hlt
fxam
aad
cmp
inc
repz
inc
cmp
jmp
or
gs
imul
lahf
jmp
mov
mov
aaa
dec
and
movb
and
adc
mov
mov
loopne
add
inc
scas
cmpsb
cltd
cmp
test
dec
aaa
push
test
xlat
test
test
pop
stos
xor
cs
in
fstps
cmpsb
in
test
mov
push
icebp
mov
add
mov
orb
sub
pushf
mov
outsl
adc
scas
mov
fs
jnp
xlat
icebp
test
cmp
mov
adc
mov
clc
mov
dec
xor
push
sub
xor
aaa
lcall
rcrb
fists
mov
insb
add
out
or
adc
xchg
out
xchg
addl
inc
fisubs
cmp
xchg
inc
out
pop
xor
xchg
int
pop
mov
sub
add
icebp
jne
stc
adc
outsb
shr
pop
popa
jecxz
cld
enter
xchg
cltd
jmp
imul
in
push
inc
dec
test
div
mov
lock
int
sarl
mov
loop
call
xchg
mov
imul
sub
dec
pop
inc
idivl
inc
aas
daa
jo
and
mov
rol
or
lret
icebp
dec
les
pop
in
mov
jl,pn
out
cmp
adc
pop
or
xor
notl
xchg
push
jne
notl
ret
fwait
or
jp
cmpsl
fldcw
push
stc
pushl
push
cmp
mov
popf
testl
mov
je
pand
in
pop
rcll
cmc
lea
and
lock
dec
test
pop
cmp
mov
push
test
pop
ds
insl
mov
xchg
out
nop
out
loop
mov
xorl
push
dec
mov
or
mul
xchg
sub
stos
out
in
cmp
xchg
sub
push
lock
mov
push
lods
or
addr16
dec
divl
sub
out
sub
loopne
testl
push
sub
out
je
pop
mov
in
sbb
xor
or
adcb
jne
fimull
cmp
mov
jmp
cmp
aaa
and
push
cmpsl
pop
pop
jmp
push
jmp
cld
ja
and
xchg
pusha
cmp
out
dec
jo
pop
shll
push
xchg
inc
and
pop
clc
out
iret
and
dec
push
pop
mov
in
push
or
cmp
push
cmpsb
movsb
in
xchg
adc
xchg
icebp
insl
lret
arpl
fidivrl
lock
ljmp
add
mov
lahf
outsb
jmp
repz
cmp
aad
fdivrp
mul
add
add
lds
addr16
jb
icebp
push
push
inc
pop
inc
in
outsb
mov
cmp
jge
int3
pop
mov
negb
sahf
mov
movsl
jbe
xlat
loope
fnstcw
sbb
cld
out
fs
push
in
xchg
sub
xor
xor
jg
loope
dec
dec
testl
mov
or
cmp
inc
push
adc
clc
pop
xor
fldenv
popa
xlat
add
out
js
lcall
mov
xchg
nop
mov
cmp
pop
pusha
cltd
mov
neg
jg
jb
push
cmp
pop
mov
cwtl
sub
xlat
out
lret
fidivrs
xchg
xchg
jecxz
xchg
ss
dec
add
call
cltd
dec
add
add
jge
push
or
gs
es
cmpsb
mov
xchg
icebp
xor
sub
notl
mov
inc
push
sbb
cmp
decl
pop
fldt
mov
push
in
test
testl
or
xchg
jb
push
test
out
sbb
push
cmpsl
int
lods
jns
adc
out
jmp
mov
xchg
insb
std
insl
jmp
popa
inc
dec
notl
jmp
inc
outsl
jbe
mul
jno
dec
lods
ss
divl
into
aam
pop
fmull
out
cs
outsl
or
div
aaa
xor
pop
scas
icebp
lock
jp
lret
xlat
test
jne
maskmovq
idivl
into
push
mov
icebp
int3
fbld
cld
mov
popa
divl
sbb
popf
in
fs
cmpl
pop
div
jle
pop
dec
cwtl
test
mov
mov
flds
mov
adc
mul
jge
xchg
fists
jno,pt
push
jle
or
adc
cltd
jo
cmp
loop
jmp
daa
movsb
or
imull
mov
mov
arpl
adc
and
push
or
add
stc
arpl
rorb
jnp
jmp
out
jg
lods
testl
push
notl
mov
xchg
jae
pop
negl
iret
push
popa
testl
icebp
lret
xchg
pop
scas
adc
pop
sbb
in
xor
jmp
negl
scas
stc
or
outsl
divl
pop
std
lods
arpl
cmp
pop
aas
pop
push
in
cmp
mov
out
jnp
lahf
mov
and
mov
clc
lock
dec
adcb
add
jge
mov
pop
ja
xor
test
jmp
ds
fcompl
mov
jecxz
jmp
xlat
push
enter
in
call
mov
into
mull
add
and
nop
xchg
pop
clc
iret
es
cltd
mov
mov
shrl
addr16
push
repnz
in
les
aas
mull
push
stos
mov
insb
ret
fnstcw
leave
mov
nop
ja
inc
inc
ja
xor
imul
push
sbb
lods
out
mov
adc
ljmp
imul
fs
jecxz
inc
sub
cltd
adc
fimull
xorl
lahf
jo
jmp
xchg
push
sbb
mov
pop
movl
xchg
cltd
cmpb
sub
pop
pop
lret
adc
inc
sbb
imul
or
pop
pop
mov
jb
test
or
mov
shrl
mov
adc
inc
push
filds
fcomps
loopne
not
cmp
cwtl
daa
adc
jp
fildl
outsb
cmp
inc
cli
call
add
loope
and
ss
stos
bound
fisubl
xchg
fcoml
pop
inc
push
cmpl
xchg
jecxz
add
icebp
popa
gs
and
sbbb
sti
fists
jbe
xchg
sub
fucom
sbb
insb
es
scas
jne
movsl
les
hlt
repz
mov
mull
mov
push
js,pt
pop
testb
divl
icebp
inc
notl
addr16
or
idivl
iret
mov
add
pop
sbb
jae
or
ds
push
xor
sbb
shl
dec
dec
sbb
data16
outsl
mov
lods
rclb
or
or
cld
in
mov
push
mov
pushf
pop
jecxz
fucompp
popa
aaa
mov
enter
repz
in
mov
add
out
aas
add
pusha
or
dec
negl
es
outsl
dec
add
ss
cmp
lods
jg
and
adc
fcoms
push
cs
cmp
inc
aaa
js
outsb
test
stc
out
cwtl
lock
shl
xor
adc
neg
xor
dec
xchg
out
and
stos
sub
pop
dec
pop
out
xor
cmp
test
neg
mov
lea
addr16
adc
sbb
nop
cmp
jb
ret
out
int3
push
dec
mov
icebp
sub
shll
adc
sahf
jns
jecxz
call
or
push
mov
mov
insl
jo
mull
lret
gs
call
pop
mov
iret
jns
mov
andl
sbb
loop
jmp
mov
movsb
subl
in
mov
bound
jg
ja
daa
add
push
data16
movsb
dec
push
push
andl
cmc
test
dec
shl
jo
ret
jne
mov
out
add
insb
adc
ljmp
adc
dec
test
outsl
pusha
xchg
push
pop
je
out
push
icebp
push
movsl
daa
sub
repnz
cwtl
int
scas
outsl
imull
clc
hlt
movsl
mov
repnz
insl
mov
out
in
fidivrl
sub
sbb
dec
jb
xchg
or
ret
inc
aad
jecxz
loopne
pop
repnz
xor
fsubrs
aad
cmpl
mov
loopne
cmp
ds
jg
into
outsl
fwait
xor
mov
cld
notl
loope
push
push
loopne
dec
mov
shll
insl
xlat
jno
jns
lods
add
mov
lahf
addb
pop
fistpll
xlat
xor
js
push
loop
mov
sbb
pop
sahf
repz
mov
or
hlt
fistps
js
divb
xor
subl
test
fwait
ds
loop
xchg
std
push
ss
rorl
repz
pushl
pop
mov
xor
out
push
lds
sbb
jmp
mov
sbb
jp
cltd
shl
int3
loopne
jbe
mov
negb
testl
jnp
ss
fsubs
push
addr16
adc
rolb
jge
sar
xchg
adc
idivl
push
lods
xor
mov
fdivrs
xchg
mov
sbb
lods
mov
and
sbb
mov
mov
ss
lret
push
pop
fisttpl
fmull
adcb
inc
lea
shl
aad
sti
int3
fadd
xchg
mov
dec
push
aas
sub
xor
fildll
xlat
pop
es
clc
imul
movsb
and
push
arpl
mov
pop
fiadds
ret
jle
push
sub
into
aaa
out
dec
pop
mov
testl
lods
test
daa
aad
fidivrl
fmuls
push
negl
bound
ja
sub
lret
arpl
mov
xchg
repz
clc
aam
icebp
notl
in
arpl
scas
dec
sub
adc
jne
movsl
dec
mov
not
scas
inc
ja
and
xor
incb
mov
fistps
or
ret
in
add
imull
in
pop
subl
adc
jl
shl
cmp
fcmovnu
maskmovdqu
js
and
out
mov
idiv
rcrl
pop
xchg
xchg
idivb
mov
enter
gs
loopne
xchg
outsl
mul
pushl
pushaw
jg
imul
mov
and
xor
scas
or
divl
mov
pminsw
movsl
and
lea
pop
mov
das
adc
xlat
sbb
sub
icebp
jno
rclb
std
cmp
js
ss
cmp
pusha
mov
xchg
jns
jo
jp
mov
push
xorl
dec
push
xor
testl
pop
das
int3
mull
jmp
mov
ficoms
popa
idivl
mov
out
jle
xchg
inc
dec
scas
mov
lds
or
or
testl
adc
jnp
fldenv
ret
out
add
mov
pop
push
in
jnp
sbb
xchg
outsb
or
stos
push
aad
pop
fdivs
adc
lret
je
jl
stos
out
pop
testl
xchg
pop
xchg
data16
mov
sub
icebp
fnstenv
in
idivl
pop
fsub
mov
push
mov
rolb
pop
aas
xchg
fidivs
jmp
idiv
push
vpunpcklwd
rorl
cltd
scas
pusha
push
sub
loop
mov
xchg
popf
inc
mov
xchg
pop
mov
jbe
divl
mov
sub
stos
add
idiv
mov
xor
icebp
xchg
jnp
cli
outsb
idiv
adc
aas
pop
jne
pop
shlb
testl
push
ret
or
idivl
mov
cs
testl
push
mov
xchg
xchg
xchg
dec
test
test
sub
pop
adc
xorb
lcall
jmp
mov
mul
in
imul
test
hlt
pop
test
xor
jmp
out
push
mov
lock
pop
jae
cmp
xor
mull
adc
subb
dec
xchg
adc
es
clc
cltd
ret
pop
fs
in
or
or
out
fs
inc
stos
sbb
popa
push
je
es
fistpl
ret
imul
int
int3
sub
ds
xchg
ficoml
mov
inc
jb
mov
imulb
repnz
mov
mov
xor
pmulhw
pop
push
fcmovu
icebp
daa
mov
push
nop
xlat
mov
sbb
jecxz
lcall
inc
dec
jns
sarb
cmpsl
sbb
out
xor
pop
or
lods
mov
jno
ja
outsl
and
inc
or
fstl
dec
or
mov
mov
inc
xor
into
shl
ss
xchg
cmp
sub
negl
js
aaa
jmp
hlt
dec
mov
xchg
lock
mov
ss
enter
leave
scas
pop
iret
bound
mov
sub
inc
xchg
sbb
sbb
xor
testl
out
cmpsb
ret
mov
cltd
popf
test
xchg
aam
negl
scas
xor
sbb
nop
adc
mov
or
xlat
pusha
mov
inc
add
mov
or
out
mull
adc
testl
ljmp
shrb
mov
pop
jmp
sub
loopne
idivl
dec
testl
adc
ds
into
aad
jb
xorb
rcll
je
sbb
scas
fildll
and
aam
pop
xchg
repz
push
and
cmpsb
and
out
ljmp
in
daa
stos
push
testl
pop
ds
mov
lret
pop
inc
sub
out
xor
mov
scas
xchg
data16
xor
adc
jns
cmp
lret
je
repz
pop
imul
push
fcmove
mov
jbe
sub
call
mov
add
ret
enter
into
pop
faddl
jle
call
fldl
nop
pop
mull
cmpsb
out
jl
mul
dec
sub
xor
pop
lods
or
pop
mov
test
jns
jl
cmp
out
out
ljmp
xchg
pop
imul
sahf
and
xor
movsb
push
out
inc
cli
sbb
lds
fcom
push
push
sub
sahf
sub
mov
mov
and
push
testl
jmp
negl
mov
pusha
popf
testl
insb
and
and
js
imul
mov
cmc
lock
mov
int3
jg
push
es
dec
jae
add
or
sbb
push
lahf
add
pop
add
xor
jg
mul
inc
in
rep
xchg
cmp
icebp
lods
add
out
cmpsb
xor
dec
idivl
mov
cmp
movsb
jmp
push
and
std
sbb
adc
mov
inc
test
mov
cld
cmp
in
lahf
xor
aaa
filds
sbb
push
xor
mov
mull
scas
or
ficompl
idivl
cmpsl
gs
int3
add
jecxz
add
into
mov
xchg
and
imull
movsb
loope
push
pop
repnz
jae
repz
push
xor
ds
idivl
xchg
add
mull
ret
aad
ficompl
negb
cmp
xchg
sub
repz
stos
dec
insl
xlat
dec
das
sbb
pop
movsl
xchg
sbb
inc
and
fsubrl
bound
adc
lods
inc
fbld
and
xor
dec
daa
push
in
ja
in
sub
mov
fcomi
mul
pop
cmp
loope
inc
aaa
divl
inc
or
add
cltd
rclb
testl
in
pop
and
xchg
pop
dec
pop
inc
outsl
push
inc
mul
sub
xchg
imul
dec
or
dec
cmp
jo
xchg
shrl
fdivs
cmpsl
ja
cs
hlt
mov
lret
push
into
push
negl
movb
scas
sti
push
cmpsb
mov
jae
dec
lcall
repz
sbb
movb
test
inc
cmp
aam
mov
ss
arpl
lock
lahf
aad
sub
testl
push
mov
out
stos
pushf
xchg
pusha
xchg
sub
pop
dec
sub
pop
arpl
enter
mov
jae
roll
loopne
scas
jecxz
imul
xchg
push
daa
xor
loop
rcrb
or
or
negl
in
jno
testl
loop
notl
jg
rcr
inc
not
leave
sahf
in
jecxz
pop
xchg
xchg
test
andl
repz
adc
loop
adc
cmc
shl
sahf
mov
imul
dec
test
icebp
insl
adc
add
cmp
inc
in
pop
ret
mov
push
stos
mull
loope
insb
cmp
xorl
aas
lcall
out
notb
xor
mov
outsb
and
negl
repz
insl
imul
cmp
sbb
mov
adc
jno
mull
cmp
mov
out
sbb
xlat
mov
lock
outsl
addr16
aas
xor
popf
adc
divl
lods
push
cld
arpl
iret
shrb
or
push
dec
jl
imull
enter
or
mull
out
pop
negl
lods
stos
or
push
nop
add
inc
stc
mov
xor
fdivrl
xor
cli
popa
testl
or
fiadds
call
mov
shll
sbb
add
or
mov
inc
out
mov
sub
push
dec
arpl
out
pushf
xor
dec
cmp
jae
cmpsl
or
cmp
rcl
mul
add
push
push
repnz
insb
sti
pop
aas
mov
arpl
fsubrl
aaa
lea
out
dec
imul
jle
insb
imul
adc
out
push
mov
js
jg
fs
pop
xor
pop
sbb
adc
out
dec
pop
pop
xchg
ljmp
repnz
sbb
pop
mov
icebp
xchg
stos
les
cmpsl
test
orl
xchg
push
sub
out
jge
aaa
cwtl
out
leave
inc
cmp
divl
lock
mov
in
cmpsb
idiv
loop
xchg
iret
pop
lcall
add
pop
xor
sub
xor
mov
sub
out
stos
fidivl
pop
testl
xchg
ds
aas
mov
pushf
lock
pusha
dec
enter
nop
notl
xorb
sub
shr
jno
testl
fmulp
push
xchg
fsubrl
mov
fnstsw
imul
in
arpl
sahf
cwtl
test
or
sbb
loop
shrl
cmp
pop
notl
mull
push
xor
push
dec
pusha
fbstp
call
bnd
push
xchg
push
hlt
sub
inc
fistps
repnz
popf
pop
xlat
ret
jne
push
aam
int
jp
xlat
inc
and
aad
push
std
pop
adc
testl
push
je
mov
xor
popf
test
stos
test
push
xchg
xchg
and
call
stc
divb
pop
sub
gs
xchg
pop
idivl
xchg
inc
test
stos
pop
scas
xlat
ret
lret
lahf
test
pop
lock
pop
notl
mov
dec
popf
jl
jle
xlat
test
fistpll
jp
notl
cmp
arpl
mov
daa
mov
pop
insl
idivl
je
sbb
imull
dec
sub
xchg
push
cld
sub
int
cli
mull
or
fildll
sub
ds
imul
fistpll
jbe
call
mov
imul
mov
jne
cmovle
ret
pushf
int
push
movsl
jg
testl
icebp
jae
outsl
daa
mov
sbb
xchg
push
jecxz
test
ds
xchg
mov
cli
cld
jnp
divl
je
inc
mov
sub
adc
ret
mov
add
in
and
dec
add
nop
cmp
idivl
addb
xchg
gs
out
mov
xchg
sub
sbb
mov
sbb
sti
notl
bnd
aam
lret
ss
jno
fsubrp
pop
popf
cmpb
mov
jb
insb
or
std
ficompl
mov
divl
sbb
aaa
cmp
sub
rcll
mull
mov
cli
imul
and
pop
idivl
je
mov
stos
push
mov
mov
sbb
cwtl
jbe
mov
int
pop
xchg
out
aaa
jmp
or
inc
fsub
xor
xchg
hlt
push
mov
jb
filds
jbe
add
pop
jno
insl
daa
jmp
hlt
shrb
div
ret
jp
xchg
pop
push
or
aam
fdivl
outsb
cmp
mov
jno
xchg
aas
and
lret
mov
neg
jbe
push
ss
ds
out
movsb
enter
addr16
hlt
lds
in
inc
test
test
nop
fucomp
lock
push
out
mov
mov
outsb
js
push
and
adc
add
xchg
pop
rol
jo
inc
test
push
adc
adc
add
mov
divl
push
jns
ljmp
repz
in
js
xor
pop
pop
divl
cmp
cli
cltd
mov
sahf
testl
call
jb
lock
adc
xlat
ljmp
pop
sbb
sbb
lock
out
jno
decl
xor
imul
or
roll
loop
jecxz
inc
popw
pushl
leave
add
jecxz
wbinvd
jecxz
cli
xor
mov
sub
aas
xlat
sbb
icebp
jg
test
roll
pop
jecxz
add
mov
testl
test
fcomip
push
add
orb
mul
loop
pop
outsl
ds
outsb
testl
mov
xor
xor
xchg
imul
cmpsl
dec
cmc
cmp
cltd
adc
mov
movsl
inc
ret
stos
div
iret
repnz
je
lahf
mov
add
shll
fwait
inc
fmuls
cmpsl
fistps
popf
negl
adc
insb
dec
jae
xor
shl
movsl
aas
mov
repz
push
fidivl
rcrb
push
cmp
pop
jecxz
cltd
and
jle
jne
push
dec
adcb
out
cmp
pop
add
mov
add
loopne
and
lcall
sbb
and
and
lea
push
mov
xchg
adc
out
cmp
frstor
imul
sbb
sub
jmp
xor
ljmp
mov
add
push
xlat
mov
jmp
imul
filds
notl
push
out
sbb
imul
aam
in
xchg
sub
xchg
xchg
mov
and
add
cmpsl
mull
icebp
lods
sarl
testl
shrl
sub
notl
cmpsb
int3
or
mov
jbe
sub
in
pop
divl
mov
mull
inc
and
push
sti
xlat
jl
ds
notl
mov
inc
js
loopne
out
stos
push
idivl
sub
cltd
div
inc
sbb
mov
push
sahf
fwait
imul
mov
mul
ss
and
xchg
adc
xchg
out
stos
mov
je
nop
pusha
out
and
loope
pop
outsb
cmp
pop
fincstp
pop
cmpb
divl
dec
push
fistl
mov
loop
or
xchg
adc
ja
repz
dec
notl
sbb
in
pop
es
mov
scas
inc
pop
lods
daa
push
push
loope
in
jl
test
inc
inc
and
sti
sahf
pushf
loop
mov
or
in
pop
add
sbb
jecxz
mov
shl
mov
icebp
rcrb
mov
mov
xchg
dec
addr16
sub
data16
das
stos
push
imull
push
daa
jns
into
sub
sar
fdivrs
stc
scas
notl
mov
mov
pop
dec
pop
sbb
xchg
mov
jb
bound
xor
sarl
pushf
xchg
insl
nop
xchg
and
lods
enter
in
jecxz
mov
loop
insb
outsl
mov
nop
jle
xlat
insl
adc
mov
aas
in
xor
or
out
loope
xchg
cmc
inc
ss
pushf
sub
pop
imull
mov
push
lods
divl
aas
push
in
pushw
clc
pushf
jle
xchg
sbb
pop
xlat
xchg
loope
scas
cltd
pop
mov
fdivrl
push
add
mull
lcall
ljmp
loopne
push
xchg
sub
leave
xor
negl
dec
out
je
rorb
mov
fdivr
xchg
aad
mov
xor
ficoml
sub
dec
lret
pop
pop
push
mov
outsb
cmp
stos
adc
cwtl
scas
mov
out
mov
into
jge
mull
repnz
pop
sub
mull
or
lea
test
mov
not
loope
lods
push
mov
pop
negl
test
dec
fsts
dec
test
pop
cmp
in
or
test
sbb
scas
dec
test
mov
sub
cmc
xchg
adc
fabs
inc
xor
fnstsw
arpl
int3
xor
stc
insl
fstp
jg
push
in
cltd
jns
fimull
aas
fstpl
into
call
mov
imul
or
add
and
jle
mov
cmpsb
enter
add
jecxz
fnstsw
js
or
mov
scas
dec
and
or
cld
mov
idiv
cmpsb
pop
fdiv
jg
aad
push
add
loopne
jle
nop
jecxz
pop
fwait
push
out
xlat
mov
add
addr16
mov
icebp
stos
mov
mov
ret
data16
jb
negl
rclb
popa
or
stos
xor
pop
dec
xor
outsb
jb
xor
inc
push
imul
outsl
nop
test
and
loope
popa
daa
popf
ss
push
es
test
call
or
fadds
pop
mov
add
rdpmc
data16
jecxz
adc
lock
mov
dec
idivl
mov
and
sub
adcb
cmp
lahf
daa
inc
testl
shl
mov
cmp
fisttpl
out
add
insl
mov
pop
movsb
mov
xlat
dec
push
xor
sti
push
dec
fisttps
dec
ds
lds
xor
lods
cmp
mov
aaa
cmc
push
leave
repnz
dec
mull
push
mov
pop
out
idiv
xor
inc
pop
inc
aad
icebp
dec
push
test
adc
sbb
sub
sarb
jmp
dec
xor
xchg
sub
test
push
not
or
loope
popf
add
xor
inc
ja
pop
or
imull
pop
jbe
sti
mov
cmp
gs
test
lea
sbb
test
or
iret
cli
loopne
mull
out
fs
mov
adc
mov
jne
xor
jg
add
mov
pop
pop
lcall
sti
addr16
outsb
out
or
cli
je
idivl
push
leave
loopne
push
cmpsl
pop
fcmovu
inc
lods
test
fadds
xchg
mov
mov
icebp
sbb
cmp
js
popa
idivl
jg
stos
packssdw
loopne
pop
inc
cmp
scas
xchg
add
sbb
lea
cmp
mov
ljmp
cmp
rorb
divl
shl
lret
jp,pt
idivl
jle
xchg
negl
and
push
mov
es
sub
pop
fnclex
and
xchg
imul
cli
cwtl
xchg
stos
dec
xchg
jmp
movsb
add
dec
nop
or
mov
and
xor
inc
mov
xor
xlat
mov
pusha
fnstsw
negl
dec
sub
out
enter
xor
in
xor
call
pusha
xlat
arpl
fs
aam
sbb
es
je
or
testl
adc
inc
imul
lcall
cltd
hlt
mov
fstpt
cmp
push
sub
repz
outsl
shl
inc
push
xlat
loopne
or
xor
adc
daa
push
xchg
enter
stc
mov
gs
lock
test
pop
testl
mov
inc
idivl
cmp
and
or
aaa
mov
xchg
mov
or
sbb
and
dec
ss
jmp
fisttpl
ja
gs
enter
pop
fsubr
imull
andl
insb
bound
xchg
pop
xor
pop
fbstp
cmp
fildll
sub
int3
xor
addr16
out
mov
fcomip
and
fimull
orb
imul
test
mov
add
xchg
mov
mov
pop
mov
mov
divl
add
rol
cld
divl
mov
js
shl
testl
std
sub
xor
jae
mov
xchg
outsl
arpl
or
xchg
push
xor
je
popa
mov
rcr
mov
testl
pop
and
aam
adc
divl
outsl
and
hlt
ss
dec
pop
push
imull
sti
lock
lea
push
lret
push
dec
inc
push
xchg
mov
adc
adc
scas
sarl
push
test
idiv
icebp
mov
nop
adc
xor
jg
loopne
imul
cmp
mov
push
push
mov
loope
lods
idivl
jo
adc
pop
repz
and
sbb
add
dec
loop
stc
outsl
pop
dec
fdiv
cmc
jp
fnstcw
pop
push
idivl
mov
push
or
negl
testb
add
lods
aas
and
mov
out
or
mov
divl
jle
in
cmp
jl
push
xor
pop
divb
cmp
mov
jne
sub
notl
inc
mov
mov
ds
sahf
out
stos
sub
push
loopne
outsl
sbb
and
dec
and
add
ret
push
je
in
jmp
pop
xchg
mov
or
jae
push
pop
mull
pop
testl
repz
cmpb
shrl
and
negl
into
divl
imulb
sub
xchg
jae
stc
das
fcom
sbb
xlat
insb
or
jmp
loop
fisttpll
not
inc
in
negl
adc
pop
ss
xchg
mov
sbb
lds
imul
in
mov
lea
mov
sbb
mov
mov
and
jp
mov
inc
mov
push
sub
sbb
loope
lods
sub
in
adc
xchg
mov
xlat
test
test
sbb
xor
cwtl
xchg
pop
neg
repz
push
rclb
add
out
xor
ds
or
xchg
sbbl
jo
cli
adc
cwtl
sbb
and
test
loope
adc
cmp
dec
mov
jp
mov
or
push
sub
inc
jg
mov
imul
push
xchg
lods
jmp
jecxz
jmp
pop
xor
xchg
stc
js
pop
jmp
xor
and
imull
push
jp
test
enter
in
mov
xor
inc
jg
out
aam
add
negl
fidivrs
ret
pop
lcall
mov
sbb
push
pop
pop
testl
roll
into
aas
scas
test
pop
in
loopne
imul
fadds
shl
and
das
in
or
cli
negl
int3
push
fdivp
and
enter
pushf
fnop
pop
push
out
add
jb
push
adc
xchg
not
lret
xor
xchg
adc
subb
jo
pop
outsl
ret
mov
cmp
adc
xorl
lret
sarb
notl
sub
stos
adc
mov
push
mov
pop
fidivl
jne
mov
mov
imull
pop
cmc
mov
sahf
push
negl
aaa
mov
sub
pop
mov
mov
fcomip
inc
dec
je
xor
repnz
fiaddl
xchg
lea
rol
or
imul
add
sbb
gs
movsl
stos
mov
leave
sub
push
pop
lret
icebp
and
ficoml
sub
mov
inc
shr
shlb
clc
xchg
scas
dec
lods
inc
or
in
mov
idivl
adc
out
divl
lea
sbb
mov
dec
or
adc
fcomp
inc
pop
xchg
jmp
fdivrp
or
aas
cwtl
divl
ljmp
cmp
insl
repnz
jne
aaa
pop
cld
push
add
mov
dec
fcmovu
hlt
stos
push
inc
outsb
pop
pusha
es
aaa
xlat
loopne
cmp
fucomip
sahf
dec
mov
xchg
xor
mov
popf
pop
lret
dec
push
and
aad
inc
cmpsb
call
int3
fs
jbe
popa
mov
pop
data16
stos
mov
inc
repnz
and
xchg
sbb
and
dec
fs
rcrb
push
xchg
and
and
cmc
divb
lods
aam
jno
icebp
fsubp
xchg
int3
scas
mov
and
loope
jno
push
movl
or
mov
lea
insb
xor
push
adc
adcl
hlt
mov
cmpsl
jp
inc
subl
mov
ljmp
insb
jecxz
inc
je
cmp
stc
inc
clc
add
fistps
cld
jmp
jbe
fcmove
call
icebp
xlat
sub
cmpsl
mov
pusha
testl
mov
aad
outsb
jnp
outsl
dec
xchg
or
hlt
push
mov
in
repnz
int3
test
push
and
ja
in
dec
mov
mov
jo
lock
aaa
pop
ficompl
push
adc
fistpll
mov
or
cwtl
jns
inc
pop
adc
fwait
enter
jecxz
out
out
push
dec
mov
mov
leave
or
mov
ljmp
popa
pop
lcall
out
fs
xchg
data16
imulb
ret
jo
aaa
sub
and
ja
push
dec
jecxz
scas
not
out
mov
or
jne
jmp
mov
lcall
test
cs
jae
ja
mov
lods
movsl
lods
out
cmp
jl
pop
lods
cmp
scas
imul
dec
fidivrl
repnz
ljmp
pop
add
adc
sub
sub
out
mov
pop
or
add
into
cmc
push
xchg
adc
mov
in
aas
mov
out
aam
test
lods
dec
jp
sub
out
cmp
mov
out
pop
push
xlat
sbb
push
test
mov
test
mov
fcomip
mov
mov
cs
in
inc
int
mov
push
xlat
loope
jmp
mov
mov
xchg
mov
idivb
addr16
or
cmc
repz
push
sub
gs
xchg
je
out
jb
mov
imul
or
fnstsw
mov
mov
or
xor
jg
xchg
add
mov
outsl
testl
fisubrl
outsl
sub
xchg
stc
in
push
insl
out
fmull
mov
adc
shr
movsb
inc
loop
ljmp
repz
sbbb
sbb
ficoml
lret
xchg
nop
inc
jae
jmp
or
clc
push
add
adc
sbb
mov
jno
aam
mov
push
imul
sbb
jo
push
push
pop
fdiv
dec
ja
mov
or
fs
mov
test
adc
add
xchg
call
pop
sbb
jp
outsb
fs
lds
adc
pop
leave
cmp
push
cli
testl
mov
push
lret
ljmp
les
scas
cmp
cmpb
into
pop
add
xchg
and
mov
jae
stc
scas
sti
mov
orb
sbb
adc
sub
out
shlb
das
jge
xor
frstpm(287
mov
fnstenv
int
emms
jg
mulb
loopne
lret
xchg
mov
je
pop
jns
dec
in
addr16
int
mov
xchg
je
in
cmpsb
xor
ljmp
jae
shll
and
dec
and
sub
shll
adc
lds
jae
mov
cwtl
mov
dec
add
cmc
fnsave
inc
lret
loope
loope
mov
ljmp
pushf
rorl
jb
adc
jbe
pop
mov
sub
ror
iret
sbb
jae
imulb
sub
mov
imul
jge
pop
push
push
cmp
js
insl
repz
in
jno
out
jo
testl
lcall
push
ss
jns
adc
les
in
imul
mov
fdivrp
push
jae
popa
in
mov
inc
and
jmp
push
adc
imul
shl
loope
inc
add
aas
or
lods
sbb
fndisi(8087
adc
xchg
not
out
outsb
pop
aas
call
push
les
sub
mov
fadds
out
insb
test
push
mov
out
int
mov
div
or
inc
in
testl
shr
jo
ljmp
xor
xor
pop
lds
rolb
testl
lret
aad
repnz
jmp
idivl
mov
testl
fldcw
outsb
adc
mov
mov
outsl
sub
fidivrl
divl
push
push
pop
dec
test
jbe
mov
not
lods
test
cmp
je
pushf
xchg
sbb
jo
in
xchg
bound
jg
loopne
mov
int3
clc
test
mov
jne
add
push
cltd
fdivp
js
mov
sahf
cmp
loopne
lcall
xor
cmp
jp
mov
jmp
scas
ret
jnp
testl
icebp
xchg
imul
pop
mov
in
notl
cmpsb
add
adc
sub
fisttps
pop
jno
inc
inc
push
popf
mov
xchg
insb
loope
fwait
and
mov
mov
std
inc
out
neg
cld
ss
test
jecxz
inc
mov
lcall
out
push
in
jmp
sbb
imul
push
pushf
inc
adc
inc
xchg
movsl
out
mov
movsb
mov
lret
test
mov
adc
sub
fildl
xchg
and
inc
jle
out
cld
push
mov
outsl
loope
mov
movsl
adc
push
in
imul
nop
mov
notl
jnp
dec
shrl
mov
out
idivl
adc
mov
fwait
leave
pop
pop
mov
imul
int
mov
pop
sub
roll
adcl
pop
iret
stos
call
xor
xor
xchg
dec
dec
pushf
add
test
dec
aas
xor
popf
dec
aaa
insb
inc
adc
jo
add
icebp
pop
mov
xor
aam
push
cwtl
mov
dec
xchg
push
ljmp
xchg
xchg
push
adc
mov
sbb
testl
clc
dec
pusha
idivl
xchg
mov
testl
lods
testl
fsubrl
imull
jno
loope
inc
push
mov
mov
imul
je
adc
lret
mov
jno
dec
sbb
outsb
sub
sti
lock
mov
adc
cmp
jecxz
mov
pushf
fistps
mov
jb
dec
add
lcall
or
mov
in
jmp
xor
mov
dec
xchg
leave
push
dec
insl
rcrl
test
sub
push
paddb
imull
decl
jo
sbb
test
mov
sub
testl
shl
mov
dec
sti
sub
sbb
mov
pop
iret
push
sub
inc
in
mov
out
inc
pop
adc
fwait
or
sahf
jmp
inc
xchg
negl
mov
push
cld
notl
xor
gs
enter
jecxz
mov
test
neg
mov
in
sti
arpl
imul
stc
push
cmp
jge
clc
divl
or
mov
into
dec
xlat
adc
fs
loope
dec
je
negl
pop
jne
test
and
testl
push
push
xor
or
enter
cwtl
nop
divl
stc
dec
repnz
add
fldcw
lds
adc
xor
daa
push
push
pusha
cmc
adc
nop
adc
jno
sbb
les
out
inc
lret
movsl
idivl
imul
notl
sub
test
jg
pop
mov
idivl
in
leave
pop
das
push
inc
push
mov
movsb
hlt
mov
jmp
shll
mov
pop
lds
scas
push
imull
add
push
testl
mov
std
xchg
mov
scas
sbb
mov
aas
in
mov
outsl
dec
arpl
xchg
notl
dec
jecxz
imul
aas
test
add
push
scas
movsb
mov
ja
hlt
fsts
pop
adc
adc
push
mov
xchg
lods
pop
xlat
testl
neg
lea
mov
cmc
or
xor
iret
fidivl
pop
add
leave
jmp
sti
lea
mov
and
jnp
xor
fdivp
jns
rorb
lcall
or
mov
push
sbb
jmp
gs
adc
push
loopne
test
es
mov
sub
clc
icebp
sbb
imul
mov
fcompl
call
xchg
or
popa
ror
cli
loope
sbb
xchg
mov
jno
shl
sbb
imul
sahf
add
pop
push
mov
imul
push
or
arpl
mov
jg
mov
pop
testl
ret
negw
into
adc
xchg
jne
xor
les
negl
push
aaa
mov
pop
xchg
push
inc
cmp
fcomps
cmpsl
negl
nopl
std
push
iret
in
push
mov
xchg
adc
push
xchg
jg
jb
sbb
pusha
inc
lods
dec
pop
lret
inc
pop
xchg
icebp
cmp
rorl
repnz
and
repz
out
add
add
mull
insl
add
pop
notb
jb
adc
pop
gs
add
lods
int
out
or
in
jle
jmp
dec
jne
loop
pop
xlat
mul
mov
pushf
mov
int3
repz
inc
jb
fs
xor
jae
mov
cmp
aam
lods
xchg
outsl
aaa
add
lret
fnstenv
mov
mov
insb
lods
inc
testb
idivl
jmp
jne
nop
popf
pop
xlat
leave
dec
in
sbb
int3
mov
jecxz
jp
iret
stc
divb
call
out
scas
sub
lret
mull
cmpps
sbb
inc
push
test
iret
cmpsb
insb
pop
imulb
mov
push
negl
jge
loope
std
mov
ss
aad
push
scas
out
lock
cmpsb
sbb
mov
mov
gs
sbb
movb
jle
imull
pop
mov
imul
mov
push
pop
adc
nop
fsubp
mov
adc
xchg
loope
push
xchg
and
mov
xor
notl
adc
std
movb
imul
mov
icebp
mov
jnp
dec
xchg
negl
xchg
cmp
jp
in
mov
cmp
add
popf
es
push
inc
pop
mov
and
mov
lahf
mull
xchg
ffree
mull
xchg
int3
sub
push
je
jns
fcomip
rorb
daa
loop
insb
in
out
xchg
and
cmpsb
cmp
mov
mov
adc
jle
mov
cld
les
out
test
add
fcmovu
push
jb
fidivrs
cmpsb
nop
out
rcrl
cmp
testb
pop
push
lret
xchg
xor
scas
pop
aad
loopne
xchg
cld
adc
push
ds
aam
dec
fwait
lcall
iret
aaa
int
mov
fmuls
sarl
insb
loope
and
negl
sub
rorb
sti
jle
cs
mov
sub
dec
jnp
adc
adc
xchg
stos
sbb
jmp
gs
fldenv
cli
cltd
loopne
divl
into
inc
testl
fs
adc
mov
cmpsl
shl
fdivs
stc
jmp
sub
shl
and
adc
or
hlt
ret
negl
jns
cmpsl
in
test
les
pop
add
test
or
mov
test
int3
testl
iret
dec
popf
test
xor
adc
push
push
inc
andb
loopne
jge
pop
loop
das
xlat
inc
mov
addr16
mov
jle
sahf
push
jns
daa
mov
loop
lret
fmulp
ljmp
adcb
sub
outsb
xchg
notl
in
jno
imul
subb
mov
dec
fbld
idivl
movsl
add
es
mov
shlb
cwtl
out
insl
loope
mov
lods
sahf
ret
loopne
jnp
test
idivl
pop
push
xlat
ss
lahf
ljmp
test
fistpl
testl
mov
inc
ja
insb
out
sbb
sbb
sbb
cltd
pop
notl
stos
ret
sub
je,pt
pop
mov
xor
and
notl
scas
cmp
idivl
cltd
icebp
xor
sbbb
pop
xchg
filds
daa
sub
xlat
in
push
and
lcall
movsl
and
xor
xlat
cmpsb
cmp
sti
out
pop
hlt
pushf
mov
shl
ja
inc
imul
jns
mov
nop
je
lods
push
out
adc
cmp
bnd
xor
mov
sahf
and
idivl
insl
xchg
mov
je
sub
sub
push
cmp
or
arpl
inc
jmp
mov
lods
add
sbb
fidivrl
mov
icebp
mov
neg
add
ljmp
pop
xor
nop
std
xor
mov
aad
push
mov
xor
data16
jp
adc
test
pop
dec
dec
mov
fbld
iret
out
or
neg
fldenv
pop
in
call
in
add
inc
cmc
mov
push
and
out
pop
repz
out
loop
js
xchg
mov
xchg
shr
das
in
mov
test
inc
push
inc
es
xchg
or
xchg
mov
add
push
xchg
jbe
ss
inc
jg
fisttpl
mov
sub
bound
inc
cld
fwait
and
outsb
repz
sub
cmp
inc
out
mov
stos
sti
push
pop
dec
jno
dec
adc
ja
inc
sub
dec
xchg
mov
xchg
jae
outsb
mov
xchg
dec
xchg
lcall
outsb
movl
push
mov
sub
add
xchg
push
clc
sbb
fs
sub
lret
popl
int
cmp
addl
cwtl
pushf
cmpsl
in
push
std
sti
test
cmp
lcall
inc
testl
adc
mov
push
sub
outsl
in
fs
pusha
sahf
mov
and
xlat
clc
mov
cmpsb
fldpi
in
cs
jae
jne
mov
dec
icebp
imul
jno
in
stos
insl
xor
inc
pop
jmp
add
inc
cmc
add
sub
and
pop
jo
pusha
out
ljmp
pop
pop
fnstsw
jle
mov
add
pop
sbb
out
in
out
jecxz
push
shrb
scas
xchg
fildll
hlt
lahf
data16
fadds
out
pop
in
inc
xlat
sarl
cwtl
imul
test
pop
aaa
cwtl
xrelease
int
out
add
sub
les
mov
ror
das
in
mov
push
adc
mov
out
das
sub
fisubs
xlat
aam
xchg
mov
adc
jae
mov
je
lret
enter
inc
lock
shl
add
mov
push
idivl
inc
jge
test
push
fisttps
out
cmp
push
leave
push
insb
mov
test
or
sub
sbb
inc
pop
jecxz
out
or
sub
pop
mov
mov
sub
or
out
xchg
fcmovbe
pop
fst
xchg
inc
in
inc
lods
enter
adc
idivl
imul
testl
cmc
jge
aas
cmpsb
and
ret
pop
idivl
sbb
xlat
sbb
out
imul
cs
popf
mov
and
movsb
lahf
lods
xlat
repnz
push
pop
cmp
add
divl
loop
cld
lock
cmpb
and
push
jno
push
repz
sahf
fdivrs
cmp
mov
pop
cmp
int
out
bound
test
xchg
jecxz
xor
push
dec
xlat
pop
stos
mov
test
loope
push
jecxz
fistps
add
adc
adc
icebp
xchg
and
push
and
xor
lcall
mov
xchg
push
jl
dec
mov
testl
fstpl
shrb
dec
adc
xchg
pop
leave
testl
inc
call
lods
mov
loopne
xor
mov
or
adc
ljmp
addl
pop
hlt
xchg
adc
loopne
out
clc
adc
call
push
xchg
dec
testl
jns
lods
sbb
stc
test
mov
nop
fisttpl
enter
out
mov
dec
pop
mov
pop
cmpl
popa
mov
add
pop
and
fbld
negl
and
or
imul
inc
sub
adc
ds
movsl
fcmovnbe
push
daa
and
out
iret
add
scas
adc
movsl
mov
push
jmp
mov
push
jae
xlat
data16
fmull
scas
testl
fisttpll
testl
into
hlt
mov
mov
pushf
cli
fcoms
xor
push
divl
xchg
out
into
ds
or
xchg
fwait
lock
rcrb
repnz
call
movsl
fildll
repz
divl
pop
xor
lds
std
int
adc
inc
and
push
pusha
fdivrs
cmc
leave
or
call
daa
je
jns
push
cli
jmp
popf
jg
mull
jge
inc
dec
inc
idivl
and
enter
stos
jbe
mov
arpl
adc
sbb
movsb
jo
loop
lods
add
push
or
mov
fmuls
mov
divl
sahf
sub
and
les
pop
mov
test
mov
jp
push
out
stc
jno
divl
fimuls
cs
push
popf
fwait
lcall
sbb
cltd
sbb
cld
addr16
sbb
mov
jbe
jmp
test
cld
ret
rcl
cmp
cmp
mov
sbb
mov
fidivs
popa
movsb
ret
xlat
mov
sti
leave
int
imul
adc
mov
xlat
pusha
lds
inc
mov
notl
outsb
stc
dec
ja
movsb
push
adc
rclb
ffree
mov
orb
testl
dec
fistl
fs
data16
pop
and
test
int
jnp
adc
ss
cmp
scas
dec
insl
push
imull
xor
jge
inc
pop
pop
adc
subl
notl
jns
pusha
movsb
test
in
mov
inc
testl
int3
filds
add
cmp
xor
sti
push
sbb
xor
fistpll
imul
cmp
cmp
fstpt
cwtl
fidivrl
cmpsb
testb
inc
pop
addr16
adc
idivw
test
sub
xchg
in
mov
push
testl
pop
fdiv
rolb
rclb
adc
push
cmp
in
push
into
fwait
or
mov
cli
cltd
dec
testl
jne
repnz
negl
adc
xchg
inc
shrl
int3
lahf
sbb
imull
xor
adc
pop
jns
push
mov
fdivrs
notl
xchg
test
pop
outsl
rcll
shl
mov
mov
cwtl
je
test
stc
cltd
inc
pop
out
scas
mov
pop
pop
push
add
fistps
psrlq
xchg
dec
xchg
cmp
push
dec
fwait
adc
push
sbb
jb
in
imul
lret
and
mov
inc
or
mov
fucomip
xchg
xchg
aad
rcr
test
inc
and
int
stos
adc
sarb
cs
mov
sbb
mov
add
push
and
push
out
fldenv
mov
inc
jnp
add
sub
mov
imul
cmp
shl
mov
push
iret
inc
hlt
jnp
and
in
dec
out
je
mov
test
dec
icebp
push
insl
push
sbb
and
fbstp
mov
lock
push
loop
or
sti
push
hlt
cld
jle
add
in
and
addr16
jns
or
aad
sbb
cltd
stos
add
xlat
lahf
std
jmp
imul
inc
movb
mov
mov
push
sahf
jne
xchg
mov
push
mov
adc
mull
jle
fimull
jne
inc
out
icebp
push
test
pop
mov
or
out
divb
sub
add
sub
pop
ret
int
sahf
incl
fildll
jo
negl
inc
ljmp
cwtl
in
clc
lock
jecxz
pushf
aas
stc
or
fistpl
addr16
lds
fcomip
ljmp
jle
movsb
xor
sbb
fnsave
lea
mov
test
ficomps
fisubrl
sbb
cmpsb
add
mov
xor
call
pop
gs
ss
sbb
push
cmpsl
sbb
les
lahf
std
and
mov
test
repz
jmp
pusha
xor
push
xor
dec
mov
add
nop
sbb
notl
xchg
ss
loope
std
push
jg
mov
out
jg
xor
imull
mov
das
push
cmc
cwtl
shl
insb
enter
cmp
out
mov
testl
adc
sub
loope
mov
push
leave
cs
cwtl
mov
ret
adc
out
fwait
lock
push
mov
fildl
pushf
dec
pop
pop
and
lds
jmp
test
mov
imul
repnz
divl
addr16
and
andl
pop
xchg
sub
jmp
fs
sbb
addr16
add
dec
dec
mov
hlt
jmp
in
cmp
sbb
not
add
xchg
inc
cmc
mov
shr
jge
icebp
cmp
sbb
test
out
xchg
or
pop
out
negl
pop
mov
neg
inc
xchg
je
add
cld
test
xor
fdiv
sbb
out
mov
sahf
sub
stc
pop
sbb
dec
daa
cwtl
xlat
rol
hlt
mov
adc
push
pop
pop
fistl
push
fcoms
fs
adc
clc
cmpsb
test
xchg
cld
xchg
and
data16
out
idivl
shrb
loope
push
mov
fistpll
neg
mov
outsl
push
pusha
pop
movsl
pop
outsl
mov
ja
jl
fcomp
testl
dec
xor
jno
pop
mov
test
cwtl
ss
xchg
and
lods
mov
push
xchg
shrb
cltd
mull
adc
lods
popf
test
ret
xchg
idivl
std
fadds
je
daa
sbb
out
pop
adc
inc
ret
cmp
push
scas
adc
mov
paddusw
xchg
fcomps
xor
aam
mov
add
lods
mull
data16
xlat
fadd
dec
adc
gs
fcompl
cs
sub
or
cwtl
dec
or
add
repz
adc
jnp
add
cmp
mov
call
lahf
push
notl
addl
negl
xor
dec
notl
sbb
lods
xor
mov
test
int3
cmpsb
push
testl
sbb
notl
test
js
shrb
int
pop
pop
sti
leave
insb
and
and
out
fnsave
push
ss
loopne
xchg
mov
outsl
mov
and
sti
pusha
iret
jg
jnp
test
int3
negl
nop
mov
test
pop
dec
mov
push
rcrl
mov
outsl
shrb
or
jbe
push
adc
nop
jnp
push
add
not
and
divl
gs
fidivrs
mov
scas
out
iret
and
jecxz
mov
fwait
push
in
xor
testl
mov
fsubr
fsts
stos
sub
push
nop
lret
adc
gs
push
inc
sbb
xchg
notl
test
sub
sbb
pop
push
pop
lahf
dec
insl
repz
mov
mull
in
movsl
fisttpl
mov
inc
mov
in
sarl
es
pop
insl
mov
scas
out
pushf
aaa
movsl
push
lahf
in
xchg
idivl
push
and
and
cmp
std
jp
cmpsl
stos
mov
cwtl
push
jnp
flds
push
shlb
mov
inc
and
pop
dec
pop
outsl
mov
int3
push
cld
pop
notl
sub
je
icebp
or
cmp
inc
pop
or
jmp
inc
out
jle
addr16
add
aaa
loope
test
and
inc
jmp
jne
jecxz
testl
test
sbb
dec
repnz
adc
aad
mov
jae
dec
mov
adc
and
sti
mov
icebp
inc
cmp
mov
roll
xor
pop
sub
testl
sti
idivl
mov
in
aaa
pusha
add
or
loop
out
jne
dec
or
pop
pushf
xlat
ds
jnp
cvtdq2ps
push
idivl
imul
or
pop
imull
adc
cltd
pop
add
add
jno
out
or
test
pop
in
mov
ss
xchg
inc
inc
imull
loopne
popf
add
sbb
mov
pop
shl
xchg
pop
xor
jb
jmp
ret
xlat
xor
and
or
fsubr
mov
adcb
notl
jns
int3
sub
xlat
and
negl
insb
xchg
lahf
mull
lods
xchg
popa
xor
inc
sbb
adc
aaa
lock
loop
mull
inc
mov
mov
pop
lods
subb
add
fistps
xchg
iret
lcall
sbb
bound
push
xchg
xchg
pop
or
cltd
ds
fnstcw
lcall
lret
xchg
outsb
das
fisttpl
notl
xchg
push
testb
push
or
add
lret
adc
pop
or
nop
xor
lcall
imull
notb
jnp
mov
cmp
stc
xchg
pop
mov
jae
or
pop
mov
imul
push
mov
mov
divl
imul
add
fwait
rclb
dec
fiaddl
testl
in
idivl
xor
sbb
icebp
out
adc
out
xlat
testl
pop
stos
aaa
aaa
mov
cli
stos
divl
adc
and
arpl
loop
mov
sti
pop
adc
push
jg
jge
pusha
icebp
adc
js
stc
xor
xlat
cmpsb
fcom
outsb
rol
maskmovq
testl
mov
dec
test
rol
sbb
mov
and
mov
std
leave
cli
push
xor
roll
fsubrl
or
mov
subl
mov
add
xor
out
xchg
sub
test
divl
jmp
pop
xchg
inc
push
jp
and
popa
outsb
out
push
scas
stos
imul
aas
imul
mov
and
outsl
pop
lcall
rclb
dec
stos
bound
inc
mov
ss
and
data16
dec
iret
mov
pop
mov
adc
mov
mov
adc
in
xchg
test
inc
cmc
push
jnp
loope
idivl
xchg
imul
fcoml
xor
adc
arpl
add
cld
enter
roll
mov
fidivrl
mov
std
fdivrs
xor
jp
xchg
jnp
loopne
push
out
fbstp
fimull
cld
xor
mull
or
gs
ja
and
shrb
divl
int3
pop
mov
xchg
out
xor
jnp
ss
insb
dec
inc
and
lods
cmp
out
dec
inc
mov
xor
push
insl
fcmovnb
lahf
mov
or
and
mov
in
das
faddl
mull
or
mov
bound
mov
jmp
add
xor
aaa
cmp
loopne
or
push
cmp
testl
stos
idivl
scas
insl
enter
jecxz
or
sbb
es
dec
ret
js
mov
pop
fbld
add
or
out
lea
js
lds
fidivrl
imull
push
push
mov
fcoms
xor
xor
out
mov
adc
shrb
push
insl
xchg
mull
or
rcrl
fldenv
ds
sub
and
iret
lea
xchg
pop
sarl
popa
jbe
push
pop
cmc
testl
xchg
les
jle
sbb
mov
fs
xor
mulb
cmp
negl
int3
inc
shll
out
cmp
cld
loopne
xchg
sub
jae
icebp
testl
xchg
push
push
js
cmp
ret
mov
push
xchg
insl
xor
notb
cwtl
add
into
outsl
testl
outsb
call
arpl
cmc
jle,pt
iret
ljmp
dec
movsb
stos
pop
test
xchg
iret
inc
shr
or
negl
mov
cmc
push
shlb
fdiv
mov
cld
idiv
repz
add
inc
fcomi
cmc
or
testl
jae
iret
mov
mov
ja
loope
push
std
fistps
imul
dec
or
sbb
negl
aad
jl
pop
add
stos
aam
hlt
ds
nop
push
pop
xchg
rcrl
out
lret
clc
insb
add
fnsave
xchg
mov
xchg
push
lea
xchg
test
negl
xchg
mov
xlat
leave
and
es
or
sarl
outsb
pop
jge
negl
in
push
sbb
xchg
and
jp
pop
mov
sbb
lds
lods
mov
fsubr
or
idiv
lret
adc
pop
push
jne
sarl
jmp
negl
and
mov
enter
cmp
pop
adc
int3
xchg
push
test
and
xor
pop
adc
adc
mov
aad
mov
int
xor
cmpsb
dec
inc
pushf
pop
out
fs
xor
dec
sahf
ficomps
neg
xchg
scas
test
mul
mov
mov
test
inc
out
or
lds
iret
jecxz
push
jb
jnp
repz
clc
mov
jae
dec
jecxz
divl
mov
fs
pop
idiv
jns
jmp
and
idivl
sbb
or
jnp
sarl
enter
enter
rcll
jne
testl
mov
jge
js
sbb
xlat
jmp
mov
inc
fisttps
pop
sbb
ljmp
les
hlt
jmp
shl
pop
pop
push
fidivs
ja
test
xor
push
push
cmc
inc
negl
xchg
mov
xchg
orl
or
jl
push
filds
int3
push
cmc
xchg
loop
sbb
testl
sbb
neg
popf
cwtl
js
mov
push
leavew
sti
icebp
dec
fldenv
mov
or
repz
mov
into
notl
gs
shlb
shll
fucom
mov
or
mov
loopne
mov
out
test
sub
nop
mov
orl
mov
inc
jne
das
out
xor
loope
xlat
xor
outsl
and
mov
pop
pop
fistpl
sbb
lea
ss
or
and
xchg
lret
iret
xor
ret
xchg
in
gs
loope
fcmovne
mov
jnp
or
push
inc
divl
pop
fldenv
insb
xchg
add
outsl
sahf
jbe
sti
test
les
loope
fsqrt
insl
lret
clc
xlat
fs
enter
pop
fiaddl
push
arpl
pop
imull
fsts
notl
enter
dec
jge
and
andb
jl
sbb
leave
int
cwtl
ja
xchg
pop
inc
cmp
mul
imulb
pop
dec
cli
pusha
aaa
shrl
pop
push
leave
xor
filds
in
mul
sbb
add
testl
sbb
inc
fisubs
out
add
mov
cmpl
loope
jge
test
popf
test
inc
adc
jns
cld
vpshuflw
enter
addl
fiadds
push
jmp
inc
ja
divl
push
mov
xchg
cmp
xor
dec
and
rolb
jecxz
mov
mov
notl
cmp
loope
rcrl
les
in
push
out
adc
lds
imull
fldl
jmp
xlat
call
divl
add
adc
test
std
push
clc
pop
ret
jp
or
in
xchg
movsl
das
sbb
in
out
aaa
and
sbb
dec
xchg
repnz
shl
mov
bound
add
push
ds
ss
and
hlt
adc
in
insb
add
pop
jae
bound
ja
jbe
xlat
or
xor
xlat
lea
fstps
lcall
test
in
daa
mov
cmp
or
fstpt
adc
mov
fdivrp
adc
lds
dec
lret
fs
inc
ja
ss
fstpl
shl
pop
loope
cmp
xor
testl
add
mov
push
div
mov
mov
std
pop
mov
mov
sti
add
push
enter
shl
shl
in
insl
mov
int3
jae
sub
fisubl
insb
jo
fistl
sbb
and
loopne
sbb
jno
rolb
test
ss
dec
scas
cmp
imul
push
nop
mov
mov
xor
jb
push
mov
out
jecxz
inc
imul
cmp
arpl
mov
or
in
imull
imul
divl
jb
xlat
testl
adc
lods
adc
mov
icebp
mov
inc
stos
imul
and
idivb
jo
jmp
in
movsl
lcall
pop
in
test
negl
rol
lret
fs
jmp
sub
add
lock
push
lret
and
test
and
cmp
divl
sub
pop
cmp
or
adc
cs
int3
inc
inc
repnz
or
xorl
lcall
ret
jae
inc
testl
shlb
xlat
outsl
cltd
pop
enter
call
cld
mov
push
mov
clc
negl
jne
icebp
jle
sahf
ret
mov
stc
mov
inc
shll
dec
testl
cmp
popa
sbb
cmp
push
dec
iret
neg
aas
sbb
lret
fincstp
lock
push
xchg
mov
mov
push
sti
int
cmp
add
clc
fiadds
dec
insb
or
fistps
cld
push
mov
lret
sti
and
pop
jl
lcall
push
repz
shl
ret
jp
push
mov
sub
testl
mov
out
adc
xor
sub
outsl
lret
shll
xorb
push
ja
repz
pop
jo
dec
out
pushf
lea
inc
push
repnz
add
scas
cld
movsb
jmp
nop
into
xchg
pop
sbb
testl
jge
mov
inc
cmpsl
ja
and
loopne
das
dec
negl
stos
or
xor
mov
add
sub
sbb
jae
idivl
in
pop
hlt
mov
mov
inc
sub
push
sub
testl
ljmp
xlat
xchg
mov
push
imul
mov
imull
ljmp
dec
dec
negl
dec
imul
mov
mov
push
stos
or
aaa
cmp
xor
call
dec
fldt
imull
and
and
sbb
test
mov
jae
and
out
pop
push
jbe
mov
testl
test
xchg
mov
divl
inc
ficoms
dec
sub
xchg
pop
mov
stc
lcall
call
idivl
inc
mov
and
cmpsb
test
push
idivl
call
dec
imull
xchg
daa
cld
mov
sbb
not
aam
jmp
idivl
dec
mov
imull
aam
cmc
into
dec
scas
pusha
divl
les
adc
mov
es
loopne
sti
cmpl
bswap
loopne
pop
mov
out
das
and
insl
inc
insb
add
fs
idiv
adc
sub
dec
sahf
push
outsb
lret
lods
sbb
out
out
xor
loope
negl
into
sub
fmull
testl
push
cs
ljmp
mul
outsl
adc
push
imull
push
idivl
mov
inc
negl
lret
arpl
test
fnstsw
or
sarl
out
dec
ret
inc
pop
xchg
divl
xchg
xchg
mov
xchg
ret
dec
pop
imull
imul
scas
mov
cs
test
jb
js
push
xlat
ja
sbb
testl
setne
roll
lret
outsb
mov
mov
xor
cmc
popf
cltd
outsb
dec
dec
or
adc
mov
divl
outsb
dec
push
mov
mov
enter
lahf
mov
adcb
add
inc
xchg
lahf
xlat
repz
pop
xchg
cmpsl
xchg
cmc
mov
xor
pop
push
imull
cmp
lret
dec
call
add
ret
je
idivl
jle
lcall
jp
test
mov
movsb
neg
test
outsl
jns
adc
pop
into
mov
scas
lods
ret
fadds
or
ja
sahf
imul
pop
jecxz
psubusb
or
jne
add
sbb
inc
sbb
lcall
or
imull
pop
push
xor
or
stos
xchg
jne
ficompl
push
testl
out
cmp
mov
push
gs
into
xchg
cmc
sub
dec
test
movsl
push
dec
testl
xchg
inc
negl
mov
xor
xchg
idiv
mov
jae
imul
dec
imul
xor
inc
inc
mov
ret
dec
test
idivl
adc
insb
nop
add
in
mov
popf
pop
xor
pop
jge
jns
mov
test
jecxz
mov
iret
pop
negl
adc
in
idivl
repnz
jbe
jae
mov
mov
pop
mov
arpl
mov
negl
call
mov
xor
pop
cld
sub
lock
push
mov
flds
xor
jno
jae
ret
sub
roll
xlat
int
shlb
fldenv
or
rcrb
push
push
repnz
push
sbb
push
addr16
pop
or
jo
pushf
test
sbb
pop
scas
pop
adc
sbb
lahf
sub
push
pop
xlat
jnp
shl
int3
aam
into
fwait
pop
cmp
add
popa
adc
outsl
fildll
mov
mul
aad
adc
sbb
push
divl
mov
xchg
dec
scas
movsl
sbb
out
sbb
clc
mov
les
dec
push
fcomi
ja
inc
imul
fbld
pop
or
iretw
cltd
xlat
jmp
sub
fdivl
scas
divl
mov
mov
stos
std
jmp
int3
je
idivl
fidivs
pop
sub
movhps
mov
out
fildl
push
rcr
idiv
cmp
inc
arpl
adc
fnstcw
mov
mov
sbb
push
out
insl
mov
fbstp
imull
popa
push
pop
je
pusha
idiv
push
shlb
sbb
ret
inc
sub
int3
aaa
repz
pavgb
sbb
aad
xchg
ror
loopne
pop
cmpl
pop
out
clc
adc
sbb
fdivr
and
loope
imul
and
data16
pop
divl
xchg
lds
and
test
loope
divl
jl
mov
push
pushl
sti
adcl
dec
and
sub
fs
in
idivl
dec
lods
paddq
popw
ja
xchg
mov
xor
scas
xchg
adc
fcoms
xchg
xlat
cmp
sar
fidivrl
pushf
loope
jmp
in
aam
imul
push
adc
sbb
aas
jno
cs
or
xlat
push
jl
sub
sbbb
adc
je
int
iret
cmp
imull
dec
push
adc
cmpsl
int3
pop
pop
xor
in
call
xor
sbb
and
test
jmp
ss
insb
arpl
cmc
mull
sub
jbe
jno
xor
sub
loope
adc
xchg
idivl
outsl
fiaddl
clc
std
adc
jle
test
fucomi
call
xlat
sbb
and
cmp
rorb
decl
xor
mov
mov
divl
push
sbb
idivl
jbe
adc
idivl
xchg
xor
mov
arpl
mov
imull
mov
ja,pt
vpunpckhqdq
fists
loop
jecxz
rolb
xchg
nop
and
rorb
mov
fs
std
divl
cld
add
sub
or
pop
xchg
rcrb
pop
xor
pop
loope
pop
je
mov
js
mov
sahf
xchg
test
fmulp
scas
leave
mull
nop
xlat
aam
fdivrl
lret
xor
jecxz
push
ret
stos
aad
inc
and
sub
pusha
mov
gs
rcrl
mov
pushf
or
mov
or
inc
aaa
push
add
xlat
mov
inc
fnstcw
xchg
push
mov
ret
and
inc
add
cmp
lods
out
ljmp
stos
xchg
lret
xchg
mov
and
push
inc
hlt
addr16
loope
mov
in
roll
adc
ss
or
dec
popa
sbb
push
xchg
jle
add
pop
or
push
ret
cwtl
pop
sub
lahf
insl
xchg
fldcw
cmp
push
push
aaa
adc
shll
fs
lahf
jmp
fildll
subb
cmp
xlat
or
mov
loopne
sbb
ret
sub
push
jecxz
jbe
clc
popf
lods
mov
out
movsl
fucomp
enter
aad
xor
insl
pop
push
cmpsl
cmp
xchg
dec
andl
jbe
sub
dec
inc
mov
out
xor
je
mov
aaa
cmp
movl
ljmp
inc
mov
push
jmp
xchg
jo
clc
or
xor
adc
mov
cltd
ds
addr16
jns
jae
jne
jo
and
push
inc
pop
pop
shlb
mov
lods
jmp
pop
xchg
cmp
xor
insl
sbb
imul
shlb
in
add
jne
loopne
add
icebp
sub
pop
sbb
repnz
push
call
mov
out
add
push
imul
sbb
sti
pop
adc
ss
loope
ret
and
mov
mov
mov
stc
add
js
and
cmp
in
mov
in
into
push
jno
or
mov
ror
mov
pop
roll
add
jb
cld
mov
idivb
loopne
hlt
mov
xor
lcall
mov
sub
shlb
sub
pop
aaa
or
dec
testl
rcrb
push
push
fisttpll
pop
pop
adc
out
loop
dec
je
movsl
sub
leave
mov
adc
insl
notl
or
mov
jno
neg
test
sbb
mov
adc
in
ret
jecxz
test
sbb
mov
dec
inc
mul
fwait
cmpsl
bound
arpl
xor
gs
idivl
ret
into
inc
dec
pop
mov
xchg
pop
jns
int
idivl
pop
cmp
cmp
shrb
imull
aad
loop
idivl
mov
sbb
test
xor
cmp
std
sub
out
pop
sbb
idivl
xchg
xor
xchg
loopne
pop
pop
cmp
enter
popl
mov
xor
xor
xchg
adc
icebp
popa
lret
inc
jg
call
lea
push
cmp
ja
or
out
add
mov
ss
test
xlat
sub
vmovsd
sub
in
pop
add
inc
popf
icebp
push
and
daa
xor
inc
mov
or
mov
xor
pushf
adc
mov
std
out
mov
cmpsb
and
jo
inc
cmc
push
das
xchg
idivl
inc
rol
mov
cltd
jecxz
mull
jne
mov
and
pop
not
out
ljmp
jl
pop
idivl
mov
mull
stos
test
shl
iret
notl
ja
adc
pop
imull
cli
mov
mov
pop
jno
sbb
idivl
pop
pop
xor
stc
mov
inc
idivl
test
test
or
das
pushf
push
dec
into
daa
inc
jne
cwtl
rclb
lret
jecxz
repnz
faddp
loopne
testl
sub
cmp
testl
sahf
or
add
jmp
out
sti
and
mov
addb
dec
les
xor
je
sar
adc
pop
fidivrl
cmp
xchg
pop
sbb
div
stos
insb
into
in
add
sub
mov
dec
negl
or
sbb
andl
xchg
xor
xlat
loop
fmull
fisttpl
pop
mov
xchg
dec
imul
in
add
mull
les
inc
jo
or
bound
sbb
arpl
or
cmpsl
insl
imull
sar
sub
cld
fs
popf
or
jnp
xchg
mov
aad
xor
mov
in
push
cmpsb
idivl
cltd
xlat
ret
loopne
mov
and
loopne
loope
mov
ret
push
pushf
lds
jmp
in
adc
enter
out
or
pop
jg
negl
orl
pop
mov
loope
sti
fiaddl
enter
cmp
mov
dec
jecxz
xchg
lock
mov
sub
fldpi
cs
imul
cld
push
popf
pop
push
incl
imull
mov
je
fbstp
adc
xlat
cmpsl
and
lock
cmp
mov
addb
ljmp
lods
pop
or
add
jo
or
xlat
out
stos
testl
mov
adc
or
fmull
lea
imull
pop
push
testl
sti
in
mov
shl
into
and
outsl
scas
in
jb
mov
sub
inc
cmp
in
xor
into
imull
les
movsb
mov
jp
push
fld1
out
not
out
mov
pmulhuw
testl
leave
xchg
je
pop
cmc
nop
out
aad
repnz
fcompl
nop
inc
pushf
scas
push
or
cs
bound
jns
add
dec
filds
negl
push
mov
pop
jne
je
and
push
out
xorl
ja
xor
xchg
xlat
jp
sbb
ficompl
cwtl
shll
stc
fs
add
test
arpl
mov
gs
in
inc
and
mull
inc
xchg
lods
mov
popf
clc
xchg
jg
iret
push
cmp
shr
push
in
lahf
sti
fdivp
adc
into
mov
push
int
adc
jb
fmulp
outsl
loop
lahf
push
aad
sbb
mov
sub
dec
dec
fnstenv
jb
mov
cld
leave
jne
pop
cmp
mov
divl
clc
or
mov
daa
cli
xor
stc
leave
dec
xlat
cmpb
or
lea
sub
push
cmp
shll
xor
stos
xor
dec
push
xor
xchg
and
mov
sbb
pop
pushf
mov
mov
sbb
pop
dec
adc
lahf
test
mull
loope
data16
shll
or
ret
adc
push
insb
test
jmp
movsl
in
jecxz
push
testl
repnz
test
imul
out
dec
or
jb
jp
add
je
pop
in
push
out
add
fwait
inc
neg
inc
mov
dec
rorl
mov
pop
add
imull
push
in
mov
jmp
mov
sub
xor
js
repz
mov
je
ds
out
push
idivl
jmp
ja
scas
add
outsl
cmp
xchg
push
test
add
cmp
out
xchg
arpl
ss
aam
popf
je
xlat
test
push
sbb
xor
das
imull
nop
pop
outsb
cmp
jbe
push
negl
xchg
bound
imul
fdivrs
mov
mov
lea
jle
fsubrl
xlat
fst
push
loope
sub
in
jb
imul
filds
pop
loop
rcrl
aas
pushf
pop
jle
rcl
insl
jg
cmp
negl
stos
and
and
dec
lods
shll
loopne
pop
jg
loop
inc
arpl
fnstsw
xor
test
out
jne
dec
idivl
or
mov
insb
pop
jl
mov
mov
pop
idivl
mov
sbb
mov
add
xchg
stos
imul
mov
out
ljmp
sarb
cs
xor
in
ss
test
and
int
out
jl
cmp
testl
xor
add
fucomip
testl
push
push
mov
loop
das
fists
xchg
repnz
loope
testl
cmpsl
lods
in
xlat
out
dec
inc
mov
pop
sbb
fdivrl
stc
insb
jmp
vsubss
stos
insl
dec
push
mov
movsl
jp
push
cmp
outsb
add
lcall
mov
lahf
cmp
inc
xor
adc
idivl
cmpsb
ja
lret
xor
inc
adc
mov
shrb
add
mov
fldt
mov
ljmp
into
ss
fisttpll
mov
repz
subl
das
in
inc
push
push
jecxz
lods
inc
push
inc
mov
mov
lret
scas
xchg
fbstp
cmp
stos
xchg
xchg
pop
and
sbb
ja
inc
fdivrs
fsubl
jecxz
dec
fbstp
in
imul
in
adc
push
add
push
icebp
mov
dec
ret
popa
jge
imull
shll
les
jmp
sti
sbb
jae
mov
in
xor
pop
fisttpl
test
aad
mov
xchg
dec
pop
mov
mov
icebp
and
adc
jae
out
sub
stos
dec
scas
pop
dec
fwait
mov
add
out
jmp
xlat
push
icebp
jecxz
test
testl
movsb
mull
js
leave
pusha
fwait
out
sbbl
divl
rclb
and
pop
addr16
and
fsubl
inc
xor
mov
xchg
and
xchg
mov
insb
stos
out
or
xor
or
push
jmp
das
test
fistpl
and
rclb
sub
inc
sbb
mov
outsl
in
cli
out
jp
inc
rorb
stos
sub
sbbb
jle
call
mov
pop
mov
bound
or
or
jae
cwtl
xlat
jg
call
jmp
or
pop
dec
inc
out
mov
mul
lods
shrb
and
jmp
push
xor
cmpsl
test
push
pop
fucomip
pop
inc
shl
mov
xor
testl
icebp
adc
xor
aam
pop
cmc
mov
mov
cmp
icebp
aam
mov
pop
xchg
pushf
sahf
mov
fisttpl
mov
lods
xlat
imul
fcomps
ljmp
repz
cmp
xor
xor
fnstenv
divl
sub
xchg
decb
or
pop
shl
or
mov
imull
xor
out
cld
mov
jl
idiv
push
mov
ret
nop
jb
sahf
xlat
push
lret
call
out
mov
jo
sbb
xchg
dec
or
or
xor
cmp
scas
not
stc
cmpsb
xor
pop
pop
inc
testl
pop
fs
sub
aas
mov
push
stos
sbb
repz
fs
test
xor
mov
xor
mov
stos
inc
cs
jb
add
imul
inc
divl
loope
sahf
adc
mov
orb
ficoml
xor
xchg
xchg
ljmp
mov
xlat
mov
xchg
fcomps
adc
mov
and
pop
into
stos
dec
fsts
sbb
pop
cmp
lds
addr16
mov
outsb
cmp
adc
and
outsl
in
shll
xchg
out
sub
gs
push
jns
negl
cmp
inc
sbb
notl
xor
dec
push
push
idivb
sbb
cmp
add
shl
and
inc
dec
inc
imul
iret
pop
sbb
and
stc
xlat
mov
or
out
mov
xchg
out
sub
stos
ret
add
jnp
and
inc
mov
cmp
fcomps
or
pop
inc
and
loope
repz
adc
push
mov
xchg
xlat
aaa
mov
pop
jmp
dec
xchg
mov
sbb
mov
fbld
jecxz
sbb
and
push
adc
popf
test
or
adc
push
addl
cmp
ja
in
sub
inc
sub
cmpsb
insl
and
mov
fcmovnbe
ljmp
cltd
lods
fisubrl
cmp
push
pop
pop
push
sub
iret
call
loop
sub
mov
ss
cs
xor
shrl
icebp
mov
mov
js
movb
xchg
into
inc
dec
icebp
push
mov
shll
sub
add
rcrb
movsb
xchg
and
cmp
add
js
rolb
sub
cs
xchg
ja
insl
in
add
out
jg
sbb
daa
mov
jns
mov
jmp
cs
out
pop
fs
popf
push
dec
mov
arpl
stos
sbb
jno
flds
jmp
or
insb
ficoml
ljmp
loope
and
push
faddl
mov
aaa
and
dec
repnz
jmp
sbb
add
js
jb
push
jns
sti
ss
and
adc
and
popf
aas
jbe
es
sarb
jno
push
ficoms
sub
pop
fcmovnbe
xlat
les
push
mov
xor
out
mov
jg
dec
lock
gs
negl
xor
ret
push
xlat
movsb
jmp
mov
and
or
xchg
cmpsl
jl
fcoml
divl
cmc
mov
notl
inc
rorl
movsl
push
jns
ss
ret
push
out
pop
cld
sbb
adc
mov
insl
push
cmc
fldcw
sub
cmpsb
xorb
xchg
mov
out
or
sbb
in
loopne
idivl
push
jnp
xchg
push
mull
sbb
mov
neg
add
mov
push
dec
mov
in
mov
divl
jp
mov
mov
sub
sahf
sbb
cmp
xchg
pusha
notb
or
stos
scas
jo
out
pop
scas
add
push
popf
ja
fisttps
rcr
adc
cmp
loop
xchg
mov
mov
das
idivl
adc
jg
pop
sti
aam
inc
inc
dec
fistl
fdivs
mov
fistpl
push
div
pop
das
add
aas
icebp
idivl
mov
push
sbb
test
out
xchg
imul
mov
repz
ja
out
jge
inc
pop
aam
in
ljmp
call
push
cmp
int
adc
jp
mov
in
test
jge
pop
out
sbb
pop
mull
nop
dec
ret
negl
and
add
pop
pop
cmpsl
cwtl
xor
jbe,pn
imull
lock
cmp
cmp
call
js
cwtl
fildll
mul
gs
mov
loopne
divl
mov
sub
insl
jp
xchg
xchg
fcmovnu
xor
push
xor
sahf
fs
xchg
mov
stos
loope
out
jge
jmp
imul
jle
fs
mov
or
sbb
pop
out
and
movl
out
xor
mul
mov
cmp
pop
es
cld
ds
adc
and
cs
add
cmp
imul
jb
xor
jp
std
mull
sub
add
adc
xor
testl
mov
or
push
bound
jg
fucomip
popf
lods
jecxz
testl
stos
lock
testl
mov
call
add
fildl
jle
xlat
pop
mov
repnz
cwtl
inc
pop
xor
push
div
popf
push
hlt
push
add
test
divl
inc
or
or
mov
sbb
fistps
fiadds
mov
push
or
dec
jae
pop
and
xlat
repnz
cmpb
pop
lock
insb
inc
imul
xlat
push
xorl
clc
xor
pop
push
inc
push
lea
cld
lods
or
sarl
popf
push
icebp
jae
adc
pop
or
mul
lods
mov
out
push
cmp
xchg
dec
gs
mov
sbb
lock
push
jbe
testl
int
cmc
mov
notl
push
insb
mov
divl
push
loope
sub
inc
mov
test
idiv
fldt
js
sub
mov
xchg
xor
fwait
xchg
cmp
mov
mov
jo
imul
push
push
test
repnz
xchg
lods
or
orl
mov
ss
idivb
iret
jne
push
lret
jo
stos
push
xor
outsb
xlat
mov
popf
lcall
mov
stos
cmp
xchg
in
mov
mov
popf
loopne,pn
out
dec
andnps
lcallw
mov
in
mov
stos
int
imull
test
sbb
cmc
idivl
and
popf
and
mov
std
das
notl
xchg
or
or
icebp
rclb
push
pop
jb
pushf
or
jmp
lret
push
daa
out
roll
dec
inc
adc
nop
leave
jo
mov
negl
or
pop
add
fcompl
in
ja
imull
iret
inc
push
push
xlat
mov
xor
jge
fldenv
idivl
jne
sbbl
mov
sbb
stos
jmp
inc
notl
sbb
jb
icebp
cmp
test
xor
pop
mov
imul
dec
push
cmpsl
lret
xor
and
sub
push
leave
adc
testl
hlt
scas
jle
in
cmp
pop
movsb
idivl
je
xor
cwtl
xchg
push
mov
xchg
test
sub
push
jb
sub
negl
popa
lcall
jl
mov
rcl
jne
xchg
dec
push
leave
push
notl
stc
jns
xchg
add
jae
dec
in
arpl
push
add
jbe
mov
divl
imul
mov
in
popa
push
inc
ljmp
or
pop
fldcw
stc
dec
push
lcall
stos
mov
imull
jbe
clc
nop
fidivl
stos
clc
xchg
scas
adcl
adc
add
xlat
push
adc
fdivrs
testl
add
mov
repnz
sub
popf
add
inc
jge
andl
inc
divl
pop
sub
xchg
neg
xorl
mov
or
cwtl
testl
lcall
add
jmp
int
filds
in
jo
xchg
out
test
sub
sub
test
mov
leave
xlat
loopne
mov
js
div
push
pop
xlat
mov
loope
push
pop
icebp
adc
imul
mov
cmp
mov
adc
hlt
faddl
jo
ljmp
push
push
fcomi
push
and
jl
mov
scas
ficomps
aam
in
mov
arpl
sub
movsb
hlt
scas
ja
sbb
xchg
xchg
test
add
add
cmpsl
xchg
cli
ja
inc
mov
or
jo
pop
ljmp
sbb
addr16
sub
andb
push
outsb
ss
icebp
jmp
jle
cli
cmc
insl
testl
mov
mov
lods
push
jmp
dec
imul
inc
pop
in
xchg
inc
and
mov
push
cmp
js
in
mov
xor
push
xor
push
push
ja
push
rcrb
push
xchg
mov
into
out
and
stos
scas
add
sub
rcl
jmp
inc
jbe
repnz
scas
dec
pop
inc
icebp
jno
pop
mov
out
sub
dec
imul
sbb
cwtl
bnd
inc
push
jb
scas
orb
pop
push
sbb
pusha
daa
adc
xor
push
lods
data16
sbb
push
adc
je
add
subb
and
sbb
pop
add
push
and
incb
fcompl
xor
xchg
es
fidivl
adc
and
popa
stos
repz
fisubrl
sub
xlat
or
outsl
aaa
lahf
outsb
xor
inc
inc
adc
aaa
xchg
and
sub
popl
inc
scas
ret
jae
jno
jecxz
iret
into
cltd
mov
test
ret
cmpsl
repnz
clc
cmp
movl
fisubrs
imul
mov
sub
mov
in
jg
popa
pop
gs
add
push
testl
in
add
in
xchg
lret
shrl
push
dec
cmpsb
faddl
fidivrs
adc
add
cmp
pop
into
sub
fimuls
or
jge
jbe
bound
movsb
mov
clc
out
and
push
mov
fsts
mov
int3
xchg
inc
mov
xchg
mov
pop
test
mov
rclb
jecxz
outsb
dec
loope
jmp
mov
push
fisubrl
mov
mov
adc
lods
loope
xor
jle
out
mov
lods
outsl
pop
enter
rcll
jns
adc
cmp
sub
pop
jmp
into
dec
jb
andl
out
push
inc
push
pop
mov
push
fsubrs
jae
sub
fidivrs
or
mov
xchg
mulb
arpl
sarl
or
inc
pop
aas
fs
and
cmc
iret
dec
cmpsb
jns
mov
je
inc
movsl
sub
jo
pop
and
loopne
sub
push
call
and
cmp
mov
mov
sti
into
sub
cmp
orb
sub
jae
sub
xor
pop
jg
fmulp
or
out
dec
and
iret
loopne
jae
inc
icebp
js
lods
ficompl
mov
out
mov
mov
mov
fwait
mov
movsl
jl
inc
mov
pushf
cld
mov
mov
das
xlat
ljmp
jbe
pop
out
jns
mov
call
les
add
daa
jo
xchg
dec
sbb
in
sub
add
xchg
out
sbb
fiadds
lock
xchg
inc
lea
xchg
pop
mov
jge
push
hlt
pop
insl
test
jb
xor
outsb
and
mov
cmp
loope
mov
xchg
cmp
pusha
in
push
out
int
xor
or
outsb
out
inc
sbbb
ljmp
mov
pop
ret
add
sbb
enter
mov
mov
mov
dec
cmp
push
mov
mov
xchg
cli
out
scas
jo
mov
out
pop
jne
and
filds
dec
gs
or
out
xor
cmpsl
rorl
popf
mov
scas
inc
pop
push
xchg
cld
out
pushl
xchg
imul
mov
lidtl
and
mov
push
loop
sarl
into
out
mov
mov
fbstp
xor
jb
outsl
inc
push
aaa
out
mov
ja
inc
pop
and
dec
ja
push
pop
out
in
movsl
or
loopne
mov
movsl
xchg
mov
mov
test
lea
lahf
mul
xor
lods
add
fisubl
mov
jbe
hlt
mov
aam
xor
jns
jae
in
dec
mov
and
mov
fidivl
xlat
pop
push
stos
insl
inc
mulb
lea
sarb
sub
loop
notb
push
xchg
mov
mov
xchg
sahf
add
mov
lods
lret
in
repnz
adc
mov
shll
arpl
popf
imul
cmp
fucom
icebp
mov
mov
cmpsb
pop
pop
or
aad
rclb
addr16
imul
mov
adc
in
rorl
or
adc
dec
xchg
outsl
mov
add
outsb
aad
mov
jo
add
jb
ret
pop
xchg
mov
pop
adc
mov
xchg
cmp
and
out
mov
and
sub
mov
and
lcall
lcall
mov
out
mov
in
mov
dec
pop
idivl
adc
insl
idivl
movsl
xchg
push
fimuls
cmp
xchg
mov
adcb
inc
sar
fbld
and
sti
pop
negl
outsl
addr16
inc
xlat
pop
xchg
movsb
sbb
or
pop
mov
int3
inc
cmp
jnp
mov
out
icebp
pop
push
idivl
xchg
rcrb
mov
scas
imul
xor
and
shll
sub
and
addr16
daa
imul
mov
cmp
ds
js
aad
xlat
gs
lods
mov
sbb
xor
pop
aam
int
dec
sarl
addb
neg
sbb
xor
xor
and
mov
dec
hlt
out
xor
mov
jmp
pushf
cltd
jmp
testb
mov
in
adc
ja
xchg
cwtl
xchg
scas
loopne
in
in
pop
xlat
in
gs
popa
imul
jnp
push
mov
and
into
arpl
and
or
adc
dec
inc
sti
outsb
pushf
sub
jae
adc
cwtl
mov
sbb
divl
xchg
pop
arpl
jnp
cli
and
inc
mov
jns
fists
adc
test
xchg
sbb
jbe
dec
xor
repnz
pop
pop
outsb
imul
insb
inc
clc
mov
pop
and
jns
ljmp
sub
sub
pop
inc
mov
and
cmp
sbb
mov
or
and
xchg
xchg
leave
pop
jo
outsb
adcb
or
lret
mulb
testl
sbb
xlat
pop
daa
in
cmpsl
loopne
out
imul
xor
outsb
or
stos
or
push
or
loope
stos
inc
mov
divl
enter
push
or
notl
adc
divl
aad
div
les
es
xchg
dec
shl
ror
pop
jle
adc
negl
inc
nop
int3
stc
pusha
add
cmc
lods
cltd
les
fs
xchg
jle
push
repz
cmp
mov
lcall
pusha
inc
out
mov
int3
mov
out
cmp
jl
sbb
call
pop
imul
scas
sbb
test
xor
mull
mov
data16
icebp
bndstx
fwait
inc
cmp
jne
in
add
leave
xchg
jb
testl
cltd
mull
in
fisttpll
jp
ljmp
popa
adc
neg
inc
lret
imul
xchg
jecxz
imul
cwtl
push
mov
inc
idivl
mov
cmpsl
outsb
sbb
ss
cmp
inc
jnp
negl
and
push
cli
mov
and
lret
push
or
inc
stos
stc
lret
dec
fmull
dec
not
call
mov
iret
mov
daa
popf
fistps
sub
dec
and
dec
push
mov
inc
repnz
cmpsl
jp
cmp
and
in
fs
fistl
pop
pop
outsb
in
xchg
jae
pop
mov
insl
ds
popf
stc
mov
clc
push
test
dec
sti
adc
mul
lcall
push
jge
ja
jl
adc
jb
popa
inc
outsb
adc
push
aad
cmp
and
xchg
fisttpll
lods
mov
in
in
pop
mov
push
out
in
jbe
xchg
lret
and
fisttpll
cmpxchg
push
xlat
dec
or
int
inc
xorb
dec
xchg
shl
mov
inc
int
idivl
rcrb
lock
mov
ljmp
sub
loope
outsb
dec
pop
dec
cmc
sbbl
jg
ss
bnd
pusha
hlt
nop
xlat
incl
push
cmp
out
fidivrl
js
push
sbb
mov
repnz
push
out
mov
insb
ja
xor
addb
movsl
inc
sub
cmp
cmp
orl
aas
aaa
out
sbb
loope
inc
push
loop
es
int
inc
scas
fldt
mov
ret
or
and
sub
mov
ljmp
out
icebp
xor
lahf
in
gs
ljmp
lock
gs
push
dec
pop
mov
jb
mov
iret
or
mov
add
pop
pop
dec
insl
ja
jp
mov
adcl
sub
addr16
aaa
ss
xlat
dec
add
jne
fs
fsubl
and
lret
fcmove
test
mov
out
pop
sahf
bound
in
in
mov
jmp
incl
int
aaa
outsb
out
icebp
sub
jmp
fidivl
mov
xchg
mov
dec
out
scas
jb
xlat
mov
pop
and
and
pushf
mov
data16
mov
mov
xor
mov
push
aam
jmp
dec
jbe
cmpsl
or
icebp
dec
das
daa
mov
aad
cld
hlt
repnz
lods
stc
outsl
sbb
mov
sarb
add
aam
push
push
ja
add
mov
outsl
jbe
ja
xor
mov
sub
xchg
cld
pop
sbb
inc
mov
rcrl
cmp
arpl
sub
push
pop
insl
jmp
sbb
mov
push
ret
repz
xor
jmp
sbb
dec
insl
push
gs
imul
fs
add
dec
lret
loope
loopne
popf
inc
sub
out
xchg
in
jbe
sub
xchg
out
jg
mov
lods
xor
and
out
mov
pushf
rol
and
or
repz
pop
inc
pop
cvttps2pi
pushf
xor
push
out
aaa
fs
dec
push
push
push
test
icebp
iret
stc
xor
ficoml
jb
jnp
mov
mov
inc
outsl
in
rorb
cmp
icebp
inc
insl
js
mov
mov
movsl
adc
out
add
lods
mov
mov
adc
xchg
sti
fsubr
popf
dec
cwtl
or
xchg
out
xor
popf
aaa
mov
mov
fimull
loope
subl
testl
sub
imul
loopne
xor
xchg
and
lods
leave
icebp
ret
aad
mov
aaa
out
hlt
sbb
jbe
or
push
fucomip
addb
pop
js
push
push
dec
cmc
test
mov
or
aaa
and
aad
nop
xchg
arpl
inc
lds
insl
jmp
jge
mov
pop
rcll
cld
pushl
lods
adc
pop
xchg
in
pop
mov
and
jo
fistpll
sbb
dec
sbb
testl
loop
cmp
cmp
push
in
adc
arpl
repz
inc
out
sub
lahf
repnz
dec
xchg
inc
push
icebp
push
out
divl
ret
dec
cmp
aaa
icebp
mov
in
scas
push
jge
out
roll
cmpsl
ja
loop
push
arpl
ss
ljmp
lret
pop
cmc
adc
in
in
inc
xchg
into
aas
mov
cmpsl
xor
pop
mov
jb
in
jl
lock
mov
jae
mov
icebp
outsl
and
jb
push
out
rclb
sub
push
xor
pop
cmc
or
adc
imul
insl
mov
mov
adc
push
jl
in
pop
cmpsb
es
mov
repz
divl
push
test
mov
adc
xchg
es
jge
idivl
call
pushf
stos
outsl
push
or
mov
dec
dec
cmp
sub
loope
xchg
adc
movsb
mov
dec
inc
addr16
adc
aam
mov
scas
testl
jg
shl
sub
adc
fnstenv
push
lods
hlt
xor
jle
jae
movsb
push
jmp
mov
es
inc
pusha
gs
movsb
mov
xor
fsts
testl
jae
mov
pop
add
dec
negl
mov
or
divl
xor
bound
mov
xor
pop
or
xchg
mov
add
pop
cwtl
xor
int
push
lods
and
lock
out
scas
mov
out
jg
mov
push
mul
fnstsw
push
mov
dec
fisubrl
outsl
sub
lods
xor
xchg
inc
xor
cli
mov
and
adc
jbe
divl
push
nop
in
pusha
enter
rsm
gs
fldcw
jae
push
arpl
ret
lea
test
lods
xor
js
scas
pop
fisttps
cmpsb
xchg
mov
push
mov
cmc
add
lret
movsb
repnz
negl
and
testl
repz
shlb
out
xchg
jge
nop
mov
ss
jb
push
popa
fwait
add
int
xchg
mov
jge
jb
dec
xor
mov
sub
fs
rolb
inc
movsb
and
cmp
shl
test
mov
shlb
cmp
imul
out
jnp
sbb
adc
push
divl
jmp
pushf
or
or
shlb
adc
sbb
adc
es
fcoms
sub
rcrb
inc
mov
xor
cld
ret
dec
negl
shlb
mov
dec
sti
popa
jp
xchg
cmp
lret
out
clc
idivl
sbb
pop
sub
cwtl
inc
mul
xchg
jo
add
add
jno
sub
test
mov
adc
cmc
sbbb
aam
push
and
jecxz
pop
mull
inc
or
mov
fiaddl
jnp
stos
popa
icebp
xlat
out
adc
mov
lret
bound
xor
push
pop
xor
dec
scas
shll
lods
mov
mov
idivl
rcrb
pushw
not
or
stos
jge
int3
divl
pop
jnp
shrb
idivl
scas
push
mov
ss
xchg
hlt
fnstcw
hlt
rclb
xor
adc
in
xor
inc
mov
cli
out
pusha
shlb
daa
shrb
movsl
out
sub
pop
add
dec
push
icebp
out
jbe
push
pop
cs
xor
sbb
xor
xor
mov
push
testl
ja
loopne
int
loope
jp
divl
movsl
adc
sahf
jns
jne
mov
insb
mov
popa
pop
rcll
rol
testl
mov
stc
sub
divl
add
dec
ss
fdivl
out
pop
mov
jb
jp
cmp
notl
inc
mov
lods
pop
mov
imull
mov
fsts
xor
dec
sub
add
int3
push
xor
jp
cmpsl
rcr
aas
pop
mov
and
std
repnz
dec
fcomi
add
xchg
imul
fildll
push
fdivp
stos
enter
xor
idivl
arpl
push
jae
jo
push
in
lret
stos
je
bnd
push
lds
lahf
fbld
sub
cmpsb
leave
lods
mov
mov
push
xor
fucomi
mov
aaa
negl
stos
icebp
push
lret
loope
fnstcw
push
dec
dec
mov
cltd
xchg
insl
repz
mov
sbb
sub
std
inc
fsubp
ss
shl
js
mull
aas
or
das
adc
jmp
adc
mov
inc
fdivp
fsub
mull
adc
mov
push
pop
in
and
stos
pop
cmp
loope
fyl2xp1
jecxz
enter
and
fistps
test
mov
in
sub
pop
rep
gs
dec
jmp
dec
inc
add
xor
pop
imul
xchg
ja
pop
imul
sub
fs
and
push
cmp
push
cmp
not
jb
xchg
pop
mov
push
imull
sbb
idivl
movsb
icebp
jo
and
rcr
sub
pop
cmp
xor
cli
xlat
jmp
imul
push
imul
or
xchg
xchg
dec
icebp
add
es
cmp
fwait
push
xchg
or
mov
mov
nop
mov
sbb
sub
mov
testl
inc
sbb
xchg
cmp
add
xchg
mov
push
adcb
lahf
flds
ds
and
imul
shrb
shrl
jb
add
and
fstp
insb
ret
jnp
imull
and
add
outsb
out
std
arpl
repnz
mov
cmpsl
adc
cmc
lcall
xchg
in
mov
ljmp
icebp
mov
not
imul
cmp
stos
fldt
pop
xchg
pop
cmp
rolb
push
outsb
jmp
ss
int
pop
inc
das
test
cltd
jmp
mov
fcmovbe
scas
leave
testl
divl
outsb
adc
or
mov
and
mov
sub
je
lret
enter
push
lcall
sbb
nop
jne
fldenv
fxch
xchg
fprem
dec
lret
fidivl
and
jecxz
outsb
call
test
sbb
dec
fildll
outsl
mull
push
insl
adc
pop
jg
popl
or
ja
les
mov
clc
xor
mov
mov
imull
mull
inc
sub
jmp
in
cld
xor
pop
pushf
xchg
jmp
mov
xor
gs
fbld
mov
std
jae
push
scas
cwtl
popf
or
not
pop
sbb
sahf
out
insl
fs
rcrb
out
nop
push
push
mov
dec
adc
fildl
cld
fwait
xlat
pop
pop
inc
pop
movsl
cwtl
movsb
pop
stos
and
mov
mov
scas
mov
in
imul
mov
mov
inc
out
jle
xchg
divl
adc
and
pop
imull
cmc
push
js
sarl
inc
push
or
ljmp
jecxz
divl
aam
movsl
in
mov
lods
xchg
or
scas
imul
out
pusha
call
ret
cmp
xchg
push
pop
inc
divl
xchg
sbb
notl
testl
sub
cli
cmpsb
mov
roll
sub
fmull
iret
mov
dec
insl
and
in
fadd
insb
mov
cmp
test
adc
jecxz
sub
bound
jmp
aas
dec
or
lods
mov
pop
ror
mov
ja
ljmp
out
outsl
push
daa
and
imul
ss
push
xor
enter
inc
jae
lahf
in
push
imul
cmpsl
jp
test
push
scas
out
rolb
fdiv
movlps
pushf
mov
pop
lock
clc
fistpll
ret
fsubs
not
into
lds
pop
movsb
cmp
outsl
icebp
rolb
pop
and
ret
stos
adc
push
sbb
sarl
clc
out
test
cmp
out
mov
jle
push
mov
in
or
testl
sub
sub
sbbb
enter
idivl
call
pop
aad
rcr
mov
push
xor
imul
and
mov
inc
loop
cmp
ss
sub
xlat
mull
inc
and
divl
cmpsb
mov
jo
dec
xchg
xchg
mov
js
add
loopne
out
pop
jbe
xchg
xor
pop
inc
lods
loop
jl
pop
int
cs
out
idiv
mov
mov
push
lahf
xchg
push
addr16
aaa
imull
or
mov
dec
jg
popa
pop
sub
pop
pop
and
adc
testl
test
scas
loop
divl
rcrl
push
mov
mov
adc
testl
neg
add
mov
adc
lcall
pop
mov
adc
imull
lds
popf
out
int
mov
ret
or
cld
movb
push
push
adc
pop
lcall
pop
and
sub
iret
test
adc
pop
out
mov
fisttps
enter
mul
int
loopne
insl
mov
iret
sbb
fisubs
dec
sti
fnsave
shrl
sub
xor
negl
xlat
or
mov
mov
aad
or
sahf
cmp
fmul
xor
mov
or
mov
pop
fnsave
pop
clc
xchg
in
out
push
ds
loopne
mull
dec
cltd
mov
dec
add
cwtl
pop
shll
idiv
jge
sbb
fs
cmp
call
sbb
jns
cmpsl
inc
js
shrl
cltd
es
test
sub
xchg
addr16
js
aaa
mov
or
pop
pop
push
inc
pop
add
std
inc
push
xlat
fxch
loop
cmp
mov
xchg
xchg
fiaddl
and
push
fwait
enter
test
sti
mov
push
sbb
xchg
insl
stos
lret
lret
aaa
mov
ljmp
rclb
popa
xor
jmp
bnd
pop
jbe
push
inc
ret
sub
adcb
mov
pushf
mov
xor
push
inc
pop
sahf
mov
lock
push
sbb
insl
inc
repz
push
pop
aaa
jge
loope
mov
adc
inc
cmp
jmp
fisubl
in
sbb
jb
dec
movsb
add
fmul
mov
jnp
push
cmc
sbb
repz
mov
mov
cltd
xchg
cmp
mov
xchg
testl
ljmp
adc
adc
cmp
mov
sub
xchg
mov
pop
sbb
fisubrl
mov
ja
js
cltd
add
repz
jns
fsub
push
jg
add
pop
push
daa
add
pusha
push
sahf
lods
ja
sbb
ret
ret
mov
push
mov
dec
ljmp
adc
pop
mov
ljmp
negb
fidivrs
stos
jb
mov
jb
lods
mov
test
cmp
jmp
dec
in
mov
das
sbb
enter
int
mov
jae
enter
rclb
xlat
push
sub
mov
cmpsb
inc
insl
cmp
dec
mov
daa
or
stc
in
inc
mov
out
mov
xchg
xchg
mov
inc
divl
lcall
xor
mov
xor
aam
es
jmp
in
add
cmp
mov
push
or
xchg
jge
push
fistpl
adc
inc
add
idiv
mov
mov
jb
lea
pop
rcrl
sub
mull
sbb
ficomps
in
adc
jecxz
adc
fwait
idivl
cmp
gs
xor
testl
pop
pop
idivl
jmp
push
cmpl
jge
ret
divl
out
xor
mov
faddl
push
divl
js
sbb
dec
divl
outsb
inc
jns
loope
mull
cmp
imul
inc
out
mov
add
push
push
mov
arpl
cmp
fwait
js
leave
out
xchg
idivl
mov
testl
inc
sbb
pop
add
push
aaa
ss
scas
and
adc
cmpsl
test
pop
les
div
in
sub
leave
inc
cld
xor
jbe
jecxz
in
test
dec
testl
mov
cmp
pop
lcall
sub
repnz
and
jmp
test
xchg
mov
adc
scas
insl
fidivrs
lods
adc
es
dec
jmp
lock
add
testl
pop
outsb
xchg
idiv
adc
mov
lahf
cltd
ljmp
out
jb
inc
sub
sti
mull
daa
in
sbb
notl
adcb
popa
jp
ja
mov
sbb
xor
lods
jle
in
test
neg
add
cltd
idiv
dec
shr
movsl
mov
stos
ret
and
sti
in
xchg
fdiv
adc
std
adc
mov
inc
out
scas
and
mov
pop
push
jae
push
dec
notl
sahf
mov
push
pop
jl
add
mov
lds
mov
inc
loopne
dec
lret
dec
cwtl
je
in
jbe
mov
xor
add
fisttpll
pop
and
fs
mov
push
jo
xor
or
jo
push
sub
xlat
mov
fsubs
divl
fwait
jmp
push
lea
lahf
mull
mov
mov
testl
jno
jo
sub
ffree
mov
fisubl
shlb
adc
mov
seta
idivl
dec
mov
in
fsubs
pop
lock
aas
movsb
testl
insb
sbb
loop
sti
in
popf
fstl
sarl
fistpll
hlt
or
lods
mov
addr16
pop
jne
fwait
mov
inc
mov
dec
icebp
cli
test
adc
std
mov
push
divl
jmp
dec
fistps
or
pop
rorb
les
push
inc
xchg
test
mov
aas
imull
repnz
adc
dec
imul
loopne
rcrb
imul
push
sbb
imul
and
dec
in
aas
mov
and
pop
push
imul
ficomps
pop
push
in
imull
mov
div
clc
mov
push
push
movsb
and
rorl
in
out
inc
jns
jbe
mov
out
push
lahf
or
or
flds
cmp
mov
push
negl
jmp
add
lock
cmp
ss
xchg
notl
push
mov
test
pop
in
inc
shll
xchg
in
bound
mov
fidivl
cmp
sti
fiaddl
sbb
cltd
faddp
or
scas
aam
cmc
cmp
das
rclb
mov
xchg
jl
jge
out
xchg
int3
orl
lahf
jmp
fdivs
mov
fxch
clc
mov
loopne
loop
je
daa
cmc
sbb
mul
mov
xlat
mov
test
cs
repz
leave
aam
or
adc
inc
stos
adc
add
cltd
testl
popf
xchg
outsb
xlat
inc
sbb
push
cmpsl
sbb
icebp
leave
or
xlat
ret
mov
mov
imull
jo
sbb
sub
sbb
ret
mov
pusha
sbb
ljmp
out
xchg
sahf
xchg
adc
daa
dec
mov
jmp
xor
mov
sbb
xchg
mov
push
stc
out
in
repnz
xchg
ss
xor
xchg
loopne
fidivl
pushf
clc
mov
push
sub
aaa
dec
inc
shl
xchg
hlt
inc
jmp
push
dec
scas
mov
sarl
fsubrl
loope
leave
xlat
outsb
or
sti
dec
cmp
frstor
mov
push
sbb
adc
push
fucomip
repz
cmpsb
pop
jbe
insl
rcr
loopne
mov
pop
or
std
or
jg
jo
arpl
sub
jae
leave
jl
and
rorb
mov
test
cli
jmp
mov
dec
arpl
out
shll
jge
test
call
sbb
loope
movsl
mov
mov
xor
push
jno
fcomi
dec
push
cmc
icebp
push
stos
leave
pop
jae
adc
mov
ss
sub
jmp
xchg
loope
mov
imull
xor
add
cmpsl
rclb
in
push
fcmovne
sbb
inc
xchg
out
aaa
aas
cmpsl
fistpl
nop
fstl
jno
jmp
sbb
lret
pop
cmp
dec
fists
jle
xor
jae
or
imul
or
xchg
and
not
pop
out
and
test
push
data16
js
inc
std
xor
jge
inc
mov
mull
jno
ja
push
push
xor
and
inc
inc
or
xor
adc
pusha
imull
arpl
cwtl
xchg
adc
xchg
lods
sub
mov
add
nopl
xor
sub
pop
out
outsb
cmc
mov
popf
or
adc
imul
jo
call
scas
fstpl
rorl
sbb
test
std
xor
xor
shl
cwtl
gs
notl
fstps
pusha
sub
jb
rcr
mov
jne
dec
mov
xor
xlat
push
mull
sarb
negl
dec
cwtl
adc
test
loope
nop
cmpsl
mov
sub
push
push
push
mov
cmc
movsb
jle
int
jl
repnz
push
ficompl
aaa
cmp
xor
or
imull
lods
mov
negl
inc
roll
xor
push
mull
les
mov
loop
imull
in
xchg
fldl
aad
dec
inc
mov
pop
xor
shlb
out
arpl
sbb
mul
mov
popf
pop
push
cmp
push
inc
in
mull
push
into
mov
cli
jle
test
push
roll
dec
out
idivl
add
or
dec
stc
mov
push
jns
add
aaa
dec
dec
and
dec
arpl
mov
jl
cmc
jg
push
sbb
scas
jmp
xor
out
fsubr
jmp
sahf
mov
mov
notl
pop
xchg
je
cmp
xchg
push
xor
fbstp
inc
adc
out
sbb
mov
test
cld
push
cmp
sbb
shlb
mov
xlat
mov
jmp
mov
div
adcl
sahf
or
mov
xchg
adc
lods
xchg
xlat
pop
inc
pusha
out
mov
js
insl
testl
xchg
pop
notl
add
inc
sahf
loope
out
neg
xor
js
pop
push
nop
lock
pop
imull
xchg
xlat
sub
scas
xchg
flds
jae
in
mov
sub
sbb
test
fs
inc
negl
inc
out
test
pop
xor
dec
push
adc
mov
out
mov
out
mov
fsubr
lods
pop
jl
test
mov
out
negl
mov
jne
loop
adc
dec
sub
xchg
jmp
subb
pop
sub
lret
push
push
cmp
lock
xchg
repz
xor
rcrb
mov
testl
pop
xor
adc
inc
mull
out
mov
aam
idivl
out
adcb
push
repz
add
dec
testl
outsl
xchg
cmp
adc
xor
cmc
iret
test
mov
jl
div
mov
push
ret
icebp
mull
add
cmpb
mov
xor
lcall
cmp
in
mull
out
adc
adc
cmp
out
inc
jmp
in
cld
mov
outsb
mov
sbb
lock
loope
pop
cwtl
sub
xlat
imul
and
mov
xlat
in
inc
lds
cs
xlat
into
mov
dec
enter
movsb
imul
test
out
cmp
je
imull
fwait
les
ret
not
and
add
testl
mov
sub
out
cwtl
fst
pop
inc
divl
in
clc
arpl
sbb
inc
ss
push
subl
repz
divl
xlat
repz
in
fnstsw
adc
jmp
gs
int
pop
cmp
outsb
cwtl
loope
xor
push
mov
mov
divl
sub
or
div
push
mov
fists
pop
repnz
clc
idiv
xchg
sub
push
mov
je
sub
imul
adc
fnstcw
stc
xchg
fldl
test
sub
stos
movsb
fistps
push
iret
out
pop
cmp
pushf
jecxz
imul
negl
icebp
cmpsl
xor
xor
xchg
mul
fwait
push
lcall
fisttpl
rcl
call
push
aaa
jle
fcoms
aas
clc
addl
jmp
shl
push
dec
data16
mov
repnz
lods
imull
pop
fs
pusha
push
divl
loope
push
aaa
sbb
jae
adc
fs
pop
lods
aad
in
out
mov
lcall
or
lock
pop
mov
mov
sahf
sbbl
out
cmp
mov
idivl
push
or
cmp
in
mov
test
inc
fcompl
push
mov
dec
loop
out
out
xor
or
fbstp
inc
fldt
pop
test
adc
pop
pop
mov
mov
js
mul
add
insl
mull
jl
shr
cmp
pop
cmp
cmp
fwait
outsl
test
jnp
push
jg
push
mov
fiaddl
jle
fstpt
data16
adc
lcall
or
push
fsts
dec
and
frstor
stc
sbb
out
mov
lcall
outsl
mov
jl
or
nop
jbe
test
mov
mov
scas
imull
mov
test
testl
cwtl
lock
sub
mov
pop
ss
push
push
sti
incb
loopew
testl
xchg
xor
fisttpll
jns
xor
shl
fisttps
ja
jle
out
js
fwait
add
push
int3
add
cmpsl
lods
dec
ljmp
inc
in
push
sub
mov
notl
or
adcb
test
lret
fwait
xchg
gs
insb
push
testl
int3
push
dec
in
and
fists
dec
fnop
mov
pop
add
and
and
inc
js,pn
loope
xor
jb
repz
jno
push
dec
mull
pop
movsl
ljmp
xchg
or
fildl
testl
xchg
fs
xor
sbb
sbb
sbb
dec
sahf
adc
aam
xor
xor
test
jns
cmpsb
negl
in
stos
mov
negl
pop
rcl
imul
xchg
cmp
fstpl
adc
mov
mov
xor
das
loopne
push
lods
push
testl
mov
sbb
outsb
clc
sbbl
push
mov
not
in
ja
mov
cmpsb
add
cld
idiv
in
aad
ret
jle
adc
push
mov
imull
fucomp
pop
hlt
pushf
nop
jo
or
cmc
pop
pop
xchg
not
test
mov
inc
jmp
sbb
testl
lret
jno
sub
adc
ret
push
div
popf
lret
movsb
inc
and
dec
ja
jo
arpl
and
pop
inc
xor
mov
push
out
push
jle
add
cmc
cmp
hlt
div
mov
into
push
add
imul
mov
dec
and
pushl
jg
xor
cltd
inc
insl
testl
cs
fldt
add
xor
dec
mul
jae
xchg
enter
adc
jge
insb
sbb
testl
aaa
hlt
mov
outsb
add
or
jbe
xor
pop
loopne
idivl
arpl
bound
dec
xlat
dec
mov
lea
scas
pop
lcall
mov
mov
ja
mov
addb
filds
dec
loopne
nop
ret
jo
adc
or
idivl
xchg
fcomi
repz
in
lods
and
xor
jp
mov
mov
xchg
lret
ret
loop
ss
jno
sub
divl
stos
pusha
enter
push
imull
addr16
xor
loop
scas
enter
loope
lds
xor
pop
mov
das
mov
dec
les
shll
into
mov
xchg
pushf
je,pt
add
out
enter
mov
xlat
mov
pop
pop
ficompl
negl
mov
rcr
pop
jbe
pop
adc
mov
xor
sbb
div
aad
push
out
dec
pop
xlat
or
jnp
fst
lcall
insb
and
lods
jno
out
cmp
sbb
cwtl
jae
xor
or
lahf
xor
testl
sahf
ljmp
fldt
not
iret
push
nop
daa
imul
push
push
ja
or
aam
loop
add
push
mov
pushf
mov
push
bound
aad
add
lods
dec
and
pop
pop
fwait
divl
lds
adc
addr16
dec
push
or
mov
lret
enter
jmp
push
test
mov
ljmp
fcmovne
shl
adc
push
dec
test
idiv
fildll
imul
addr16
movsl
out
iret
cmpsb
or
push
mov
xor
enter
mull
divl
dec
popf
inc
fcmovb
nop
int
mov
les
mov
idivl
cs
mov
sub
jnp
jl
outsl
push
mov
testl
push
jle
notl
jo
out
inc
test
mov
jp
fisubrs
imul
sub
add
stos
enter
lock
daa
out
cmpsb
imul
fstp
pop
inc
std
test
add
xor
inc
xchg
jnp
mov
not
movl
divl
leave
mov
je
pop
lods
push
cmp
inc
nop
idivl
insl
and
add
lret
ss
mov
in
add
out
mull
push
pop
mov
push
jne
mov
pop
in
xchg
xchg
push
sarl
push
iret
push
call
lock
or
mov
push
lahf
aaa
mov
dec
outsl
test
sub
adc
add
sub
inc
std
jecxz
sahf
xchg
lret
fstpt
mov
testl
cld
jle
push
loope
nop
sti
jmp
mov
movsl
daa
idivl
push
push
lock
dec
push
test
cmp
mov
sti
mov
out
idivl
jl
fcomp
lea
mov
imul
loop
xchg
imull
xlat
popa
fdivl
cmp
pop
dec
jp
addl
movsb
testl
jae
pop
arpl
icebp
dec
jg
aaa
loopne
adc
mov
mov
pusha
pop
imul
jne
adc
cmp
imul
jge
mov
inc
arpl
negl
pop
loop
lret
sub
testb
ficoms
fs
xor
pusha
es
dec
test
dec
adc
mov
mov
mov
cmp
mov
ss
mov
push
mov
insb
inc
adc
into
or
mov
add
pop
cmpsb
dec
fbld
push
push
jmp
mov
cmpb
dec
xor
lods
enter
cmp
dec
repz
nop
loopne
pop
aas
pop
fiadds
lcall
out
inc
idivl
fwait
xorl
jnp
rcll
jmp
pusha
imul
popa
mov
push
sub
movsb
imull
int
adc
jne
push
xchg
sbb
aad
xchg
fstps
ds
leave
mov
adc
dec
pop
xorl
cmp
scas
pop
cmp
fldt
adc
ljmp
jge
in
mov
es
sbbl
sub
ja
cmp
rcrb
or
lahf
xchg
sub
out
cmp
sti
mov
not
jns
sub
add
cld
in
out
aad
out
fisubl
and
idiv
sub
mov
jnp
pop
xlat
add
push
leave
pop
ffreep
push
push
push
jb
insb
lods
neg
mov
push
lret
es
aad
cld
push
lds
sbb
test
sbb
lea
ss
xchg
cmc
fimuls
sahf
shl
insl
jg
mov
mov
dec
or
cltd
mov
dec
or
inc
fnstcw
imull
xchg
sbb
mov
cltd
cmp
cwtl
xchg
sbb
sbb
xchg
cmp
pop
out
clc
imul
gs
inc
es
push
cmc
adc
add
loope
divl
push
loopne
dec
stos
lods
jecxz
jbe
cmp
jge
cmp
das
mov
mull
jb
in
dec
dec
adc
sub
movsb
cmp
adc
ret
dec
add
fincstp
imul
fs
loope
in
lods
cmp
pop
pop
push
pop
push
out
jae
ret
push
daa
sti
in
push
jl
adc
je
insl
pop
cltd
pop
das
mov
loopne
or
idivl
xor
push
imull
sbb
lret
inc
push
imull
or
adc
je
test
inc
iret
dec
subl
in
xor
into
mull
rolb
inc
or
push
mull
push
xor
lods
mov
hlt
cs
idivl
adc
push
rcrb
add
cmc
jae
and
idiv
inc
aas
fsqrt
icebp
xor
jmp
and
mov
push
sbb
dec
xor
ret
fisttpll
shl
in
pop
not
jle
or
shrl
movsl
enter
ds
mov
mov
repnz
jg
jne
sub
movsb
adc
push
divl
fbld
divl
jp
push
imull
ljmp
xchg
and
mov
imull
jmp
jecxz
pop
loope
mov
push
pop
testl
repz
orb
mov
lahf
xor
push
or
cmpb
fwait
xor
dec
dec
test
cmp
lods
mov
sbb
shl
stos
lahf
pop
shlb
fcomp
sbb
push
movsl
loopne
and
push
divl
push
fwait
pop
or
fs
push
mov
mov
jg
fmuls
inc
and
rcrl
jo
enter
movsb
mov
jmp
testl
jno
xor
cmp
stos
push
out
js
stos
lahf
xchg
in
test
divl
jmp
push
xlat
test
pushf
lds
mov
idivl
pop
testl
lods
jmp
jmp
cmp
div
lds
or
mov
aas
jmp
push
dec
pop
out
inc
or
or
fdivl
clc
sbb
xlat
adc
pop
add
pop
fisubl
push
clc
xchg
lea
jp
inc
test
test
aad
imull
xchg
or
pop
cmp
inc
sbb
divl
or
push
jno
inc
push
dec
icebp
outsb
xchg
sub
lahf
mov
insl
negl
cmp
pushf
sbb
aas
lcall
out
popf
inc
sub
cwtl
dec
mov
jno
xchg
pop
xchg
sub
mov
dec
bound
stos
notl
loopne
cld
ljmp
movsb
cmp
imul
and
mov
imull
add
jne
gs
push
test
fsubr
imull
sarl
popf
pop
push
cmp
pop
mov
mov
xchg
fwait
nop
or
jmp
push
jmp
jb
sti
sbbl
not
aam
addr16
adc
notl
addl
cmc
fwait
jl
divl
sarb
pushf
dec
mov
lcall
cltd
call
mov
cmc
mov
or
fldt
cmc
xor
cmp
stos
cmp
aaa
movlps
rcrb
ficomps
sti
gs
icebp
sbb
xchg
inc
out
dec
cmc
sbb
lcall
push
out
mov
repnz
cwtl
xchg
aaa
mov
mov
mov
fisubrs
movsl
mov
in
sub
xchg
enter
fimull
xchg
loope
mov
mov
cld
mov
mov
fisubrl
stos
push
pop
and
mov
icebp
push
clc
fistpll
imull
shl
push
xchg
fs
sbb
sub
mov
call
sub
sbb
stos
xor
xor
je
mov
outsb
pop
adc
xchg
sub
fsub
sti
out
cmp
inc
push
and
xlat
adc
std
mov
inc
sub
aad
inc
xor
mov
cmc
mov
jne
shlb
jecxz
ljmp
or
push
test
loopne
jo
sbb
in
xchg
je
lahf
repz
or
jmp
imul
jmp
negl
push
fistpll
loopne
sub
jge
mov
jbe
ljmp
push
inc
push
stc
mov
fstpt
sub
mov
sbb
stc
sub
push
loope
out
stc
in
cmpsb
faddl
add
hlt
push
fildl
and
fmul
cmpsw
adc
adc
ljmp
call
pop
cmp
rclb
pushf
hlt
imul
or
jno
sub
lret
inc
jle
test
xchg
and
mov
in
add
xor
notb
push
les
outsl
aad
repnz
out
and
lahf
mov
dec
emms
lds
test
mov
loop
in
xchg
hlt
stos
dec
xchg
scas
cmpsl
jle
inc
icebp
and
call
add
adc
xor
fidivl
mov
mov
xchg
mov
int3
lds
jle
fcompl
xchg
inc
stos
jns
push
mov
mov
rcll
jp
mov
sbb
cmp
test
jmp
sbb
int
push
add
mov
andl
xor
fistpll
mov
and
jp
fnstcw
sbb
subl
xchg
sarb
out
popf
ja
xor
or
xorb
add
cli
imul
testl
je
jecxz
or
test
or
test
jge
pop
pop
sahf
dec
mull
dec
xchg
mov
pop
mov
mov
sbb
loopne
pop
imul
cmpsb
push
cmp
out
popa
jns
imull
lret
lahf
push
lret
negl
stos
rcrl
test
jp
and
enter
stos
push
jmp
idivl
jbe
lret
pop
push
lods
testl
out
fmulp
mov
divl
sub
xchg
jl,pn
add
cmp
clc
pop
subl
ret
sub
jne
sbb
out
stc
aas
xchg
in
inc
add
mov
jo
xor
dec
mov
sbb
xchg
je
dec
test
pop
adc
addl
xlat
jle
fildll
dec
cli
adc
fs
testl
mov
out
lods
xor
idivl
xchg
aas
mov
lret
xlat
and
nop
dec
jl
sbb
pop
jmp
mov
pop
adc
scas
or
in
dec
pop
or
sbb
es
jns
or
push
fstl
fs
inc
mov
add
or
subl
lods
iret
mov
sbb
scas
icebp
mov
std
fcmovb
cmp
mov
pop
pop
lret
add
fs
mov
and
mov
xor
xchg
mov
xlat
insb
je
pop
outsb
mov
pop
inc
arpl
cld
iret
cmpsb
cwtl
push
xor
fdiv
aaa
out
inc
outsb
in
repz
push
inc
sahf
outsb
stos
imul
or
pop
and
lcall
add
mov
mov
dec
int
jae
testl
iret
or
inc
xchg
push
mov
fs
add
hlt
mov
aas
dec
in
mov
xchg
adc
mov
jo
sti
out
adc
push
pop
jecxz
cwtl
and
mov
add
test
xchg
xor
xchg
fwait
andb
xchg
ret
gs
out
loope
cwtl
or
gs
sbb
mov
lcall
aaa
cld
imul
fs
and
xchg
ljmp
sub
cmpsl
rcll
imul
xchg
mov
dec
aam
das
pop
jbe
mov
ror
daa
hlt
cmpsb
iret
mov
cmpsl
jmp
test
lods
imul
jl
imul
or
sub
mov
mov
cld
in
loop
fadds
and
and
mov
rol
jns
inc
lea
xor
mov
cltd
inc
hlt
jne
hlt
mov
add
lahf
sbb
in
push
icebp
push
adc
dec
arpl
or
int
push
xor
jg
xor
and
lahf
xchg
repz
dec
push
xchg
cmc
fisubrl
fdivl
ja
fistpll
sub
out
fdivr
xchg
jecxz
std
data16
hlt
inc
adc
inc
add
xor
addr16
add
pop
adc
lcall
xchg
scas
loop
push
adc
push
push
xor
xlat
sub
lods
repnz
fadds
rcrl
test
push
cmp
adcl
dec
loope
mov
mov
das
shll
fstpt
inc
notl
popa
fistl
mov
sahf
mull
les
shl
xchg
cwtl
xchg
or
add
mov
add
movsb
clc
mov
sub
divl
push
or
pop
cmp
jns
hlt
test
lds
icebp
jp
cmpsl
sub
loopne
dec
testl
in
inc
mov
pop
imul
adc
sbb
lods
dec
fistl
xchg
outsl
add
fldenv
inc
ss
push
fsubs
push
testl
dec
sti
cmc
add
mov
cmpsl
notl
ljmp
xchg
add
lret
sub
xchg
leave
cmp
push
into
lods
adc
jge
or
bnd
push
popf
rolb
mov
jl
lahf
fisubrl
call
decl
xlat
cmpsb
mov
imul
js
mull
in
clc
jecxz
mov
adc
aad
stos
ret
xor
clc
ss
or
nop
mov
and
xchg
loope
or
out
cmp
dec
jne
adc
fwait
mov
jle
mov
inc
ret
cltd
negl
iret
adcl
cmp
dec
aad
xchg
mull
mov
dec
dec
mov
call
add
in
xlat
out
sub
es
and
pop
jg
cs
fwait
inc
ret
jecxz
cmpsb
fs
test
or
sahf
notl
in
or
mull
imull
loopne
rclb
mull
js
cmp
mov
jge
add
jns
test
imull
jno
enter
sbb
xor
idivl
cmp
negl
jp
mov
mov
pop
xor
jne
in
push
insb
sbb
jle
mov
pop
popf
lret
fdivrp
mov
aam
or
xchg
scas
repz
push
sbb
ss
out
cli
xchg
fyl2x
testl
in
add
pop
sub
jge
and
xchg
divb
mov
lock
jb
dec
xlat
shr
mov
fcomip
mov
sbb
jae
clc
push
lock
das
insl
xchg
dec
jo
cmp
adc
ljmp
mov
call
push
iret
loopne
xor
and
test
imull
mov
sub
int3
into
pop
fsubrl
testl
lcall
loope
fdivrl
jbe
mov
cmpsb
dec
out
push
test
les
outsl
or
mov
mull
mov
dec
or
push
out
push
shll
lock
loop
jno
in
cmpsl
cmp
inc
imull
gs
push
lods
sub
scas
or
int
pushl
cmp
mov
or
je
nop
mull
icebp
cmp
les
jecxz
mov
jno
sahf
test
sbb
push
xlat
cli
cmp
fstpl
minps
mov
xchg
testl
inc
or
imul
out
fsubrs
leave
pop
testl
insb
adc
jle
dec
xor
in
dec
das
mov
xlat
pop
in
cmp
sub
jl
lcall
jae
adc
mov
imul
or
push
push
aaa
int3
add
and
dec
dec
pop
push
enter
cmc
jge
xchg
xchg
insl
dec
scas
fnstcw
loopne
cmp
lret
loope
negl
inc
xchg
xor
notl
mov
add
fcmovnu
imull
adc
out
movsl
das
lret
pop
inc
repnz
adc
imull
out
cltd
jecxz
add
push
xlat
inc
gs
sub
fidivrl
sbb
adc
imull
aaa
dec
outsl
jb
ret
mov
leave
sub
inc
mov
sub
or
adc
nop
vmulps
adc
push
cmp
insl
outsl
into
idivl
xchg
loop
sbb
leave
mov
jbe
jo
or
cmc
mov
dec
pop
notl
xchg
mov
lods
mov
dec
adc
inc
pop
test
sub
ds
je
push
sarb
stos
add
push
fisubrl
lods
and
jecxz
movsl
jge
negl
mov
jg
lcall
xchg
call
out
stc
jne
dec
pusha
inc
divl
adc
test
test
rcr
nop
divl
jle
add
cmpl
mov
pop
mov
mov
pop
push
out
out
cmp
or
jmp
imul
cmc
or
addl
sub
sbb
push
mov
das
push
out
sbb
enter
fisttpl
gs
lds
xlat
sub
pusha
mov
push
pop
in
or
add
pop
notl
decb
sar
sbb
cmpl
lret
test
mov
testl
divl
pop
jl
dec
ret
sub
mul
decl
lcall
daa
in
in
divl
adc
iret
notl
jbe
outsl
fwait
push
negl
addr16
dec
add
jae
sbb
scas
jg
pop
mov
addr16
cmp
xchg
add
fnsave
xor
out
push
inc
cmp
and
or
ss
add
pop
jmp
sbb
push
and
jl
daa
out
push
cmpsb
add
xor
mov
mov
push
or
mov
mov
mov
xchg
cmpsl
scas
outsb
cmp
aad
push
loope
jg
rclb
imull
aam
test
cmp
push
test
imull
adc
in
push
inc
push
mov
push
adc
xor
jbe
insl
xchg
mov
sahf
cli
push
out
mov
mov
stos
jg
in
cmp
dec
popf
add
mov
lret
hlt
push
adc
mov
testl
outsb
shlb
sub
pop
mov
movl
outsb
xchg
xchg
aam
notl
push
dec
and
dec
mov
sbb
push
scas
jecxz
fistps
lock
outsb
in
adc
out
not
gs
insl
sub
inc
adc
inc
fstpt
mov
imul
fcmovbe
mov
test
mov
xchg
inc
jp
dec
cwtl
and
sub
das
divl
shl
scas
xlat
in
lods
mov
decl
and
std
jbe
mov
pop
in
idivl
pop
dec
lds
test
iret
cmp
loope
aas
sub
je
fistps
fnstsw
push
xor
in
sti
testl
mov
jecxz
push
add
test
adc
or
add
xlat
out
test
jb
loop
jmp
addl
push
stos
xchg
test
bound
mov
xlat
jbe
cld
aas
jle
fadds
mov
icebp
mov
add
push
jns
idiv
sub
jge
mov
add
ja
adc
fildll
inc
lcall
sub
mov
cmpb
call
das
out
int3
xor
mov
out
dec
add
dec
ja
push
xor
cltd
push
negl
lahf
iret
mov
scas
cmp
shl
mov
ds
insl
adc
imul
decl
dec
mov
clc
xlat
testl
int3
idivl
inc
stos
mull
jl
add
pushf
imul
cmpsl
repnz
iret
pop
out
mov
out
cmpl
pop
dec
xor
mull
mov
jno
pop
cs
repz
add
push
subl
sti
push
aaa
loope
daa
fwait
mov
mull
mov
stc
mov
mov
stos
or
aam
sbb
dec
ljmp
orb
pop
push
testl
data16
adc
mov
in
imull
adc
fsubr
sbb
negl
loope
mov
test
iret
test
divl
ljmp
testl
repz
push
dec
cmpsb
imull
adc
fdivrl
sub
xor
pusha
pop
jge
daa
nop
imul
test
rol
cmp
sbb
lea
xchg
ss
daa
push
js,pn
divl
cli
fstps
push
xlat
or
negl
jecxz
sbb
notl
push
inc
divl
rcl
add
testl
int
sti
out
aad
mov
cld
nop
jae
push
incb
push
ss
dec
jmp
sub
mov
xor
cmp
mov
pusha
idivl
push
jae
loop
sbb
notl
mov
mov
fistl
dec
pop
shl
test
loop
pop
xchg
pop
mov
push
inc
dec
pop
shlb
lret
xlat
xchg
fstl
inc
outsl
loop
mov
les
push
adc
daa
sti
negl
jmp
pushf
sub
in
xchg
cmp
push
lea
in
negl
daa
les
test
fistpll
push
push
adc
xlat
sbb
shl
cltd
aad
cmp
pop
dec
xchg
xchg
dec
lock
dec
mov
lods
push
out
mull
mov
sub
mull
jge
and
cmc
lods
xchg
out
int
jecxz
push
adc
jae
sbb
testl
sub
negl
adc
notl
add
inc
aaa
pop
cmp
notl
xchg
ja
mov
popa
arpl
ficomps
jno
xor
dec
inc
dec
mov
divl
test
cmp
or
xchg
ds
fmull
aam
mov
jecxz
sbb
repz
jp
movl
dec
ficompl
lcall
jae
add
lret
and
push
sbb
mov
mov
sti
pop
fnstenv
push
adc
not
mov
lea
rcll
inc
adc
shrb
insb
lds
jae
mov
mull
jo
xchg
in
xor
int
data16
sub
out
out
pop
scas
sbb
jb
call
jp
fucom
jb,pt
or
mov
inc
pushf
aas
jmp
ret
push
movsl
add
loopne
mov
dec
jecxz
jbe
mov
fisttps
add
das
push
inc
sbb
cs
lcall
out
xchg
xlat
inc
fidivs
jecxz
in
push
filds
pushf
sub
idivl
inc
cmp
out
test
push
ret
incl
imul
or
clc
nop
mov
mov
repz
scas
js
rorb
inc
push
ss
mov
les
fucomp
sarb
or
xchg
negb
cmpsb
inc
imul
push
sbb
jnp
push
xchg
cmc
outsb
or
aam
add
mov
pop
push
inc
fidivrl
loope
and
aaa
xchg
in
push
cmpsb
sar
dec
jmp
jg
or
dec
xor
cmp
test
test
ljmp
xlat
out
lods
jne
pop
xchg
fists
popa
pop
scas
mov
cmc
lahf
jne
mov
mov
out
int
ss
add
loopne
mov
mov
int3
hlt
outsl
xchg
cmp
hlt
icebp
hlt
insb
sub
test
fiaddl
push
out
or
xchg
outsl
scas
push
jg
sub
jle
mov
push
outsb
xlat
ds
push
movsb
aaa
ss
dec
fisttps
or
xchg
dec
xchg
fwait
je
ss
data16
imull
clc
dec
adc
roll
push
pop
in
inc
movsl
jb
dec
mov
call
out
push
call
dec
push
stc
iret
jnp
test
pop
insl
out
jo
jmp
into
stc
outsb
repz
jb
movsl
outsb
mov
outsl
pop
mov
xlat
fimuls
into
imul
pop
out
sbb
inc
sbb
mov
sarl
ss
fs
lcall
mov
jmp
adc
pop
or
jbe
sti
lock
pop
xchg
dec
test
sbb
xor
push
fincstp
and
sbb
into
mov
stos
fsubl
mov
stos
mov
daa
ljmp
and
jmp
inc
pop
jae
push
lock
xchg
stos
adc
push
inc
testw
pop
test
inc
add
push
neg
jbe
push
rep
adc
testl
jmp
lock
sti
mov
cmpsl
sub
push
addb
sbb
jns
test
loop
mov
std
mov
shlb
push
pushf
and
mull
nop
aad
shlb
notl
cmp
imul
jmp
lret
les
mov
cmp
sbb
shrb
xorb
push
sbbl
idivl
jo
ljmp
or
push
popa
push
iret
pop
mov
dec
pop
ja
imull
loopne
daa
sub
cmpsb
jo
lret
inc
test
shl
sbb
setae
and
testl
aaa
jg
aad
inc
push
lahf
push
mov
xchg
in
divl
mov
lretw
stc
adc
loop
into
dec
and
das
mull
push
cltd
jne
movl
fcomip
pop
adc
shl
iret
pop
ljmp
clc
and
mov
fildll
notl
mov
jnp
mov
fcomps
sbb
mov
adc
icebp
adcl
push
lret
and
negl
in
pop
pop
xlat
inc
sub
mov
mov
testl
mov
mov
pushf
mov
movsl
cltd
popf
testl
or
cmpb
pop
test
push
lods
inc
push
or
out
mov
xlat
dec
fcoml
jmp
daa
xchg
cmp
xchg
cmp
lret
mov
pop
xchg
mov
pusha
fs
neg
outsl
push
jg
out
add
lret
xor
dec
adc
lret
push
lcall
ret
push
mov
jl
xchg
and
pop
sahf
mull
in
mov
outsb
add
mov
shrl
jmp
dec
cmp
fldl
and
xor
pop
mov
xor
loop,pt
pop
mov
imull
push
inc
enter
pop
adc
insb
mov
out
je
movsb
sti
cmc
rolb
jns
cld
orb
add
adc
and
jmp
push
cs
out
jbe
mov
push
sub
ficompl
mov
push
ss
jecxz
lea
call
mov
mulb
out
cmc
add
insb
adc
fildll
pop
dec
in
jle
jb
xchg
sub
inc
mov
cltd
inc
jno
mov
xor
cmp
in
push
inc
mov
shr
add
fbstp
outsb
daa
cmpsl
les
in
sub
dec
lods
inc
adc
lods
sub
cmc
add
lock
gs
arpl
inc
pop
movsb
xor
hlt
xor
add
mov
fistl
jmp
add
adc
xlat
mov
sbb
fimull
sub
inc
test
fmul
mov
lds
rorb
rol
loope
push
into
sbb
sub
das
in
gs
out
adc
lahf
cld
mov
inc
pop
xor
pop
inc
mov
mov
test
and
iret
mov
inc
subl
sbb
sbb
xchg
cmpl
cld
jno
rorl
stos
push
sub
aaa
add
aaa
fwait
push
mov
sbb
jae
in
xchg
fs
scas
or
jne
cmpsl
inc
cmp
sub
mov
xchg
xor
add
js
push
jb
mov
insl
shrl
out
out
inc
scas
pop
stos
addl
rolb
sbb
mov
pop
mov
jns
inc
cmpsl
mov
and
jbe
add
das
fdivl
adc
pop
aad
sbb
jmp
adc
mov
or
mov
aaa
clc
push
sub
scas
movsl
mov
inc
adc
pop
xchg
sahf
xor
mov
aad
xchg
lds
adc
fsts
sbb
and
jbe
pushf
push
outsb
fsubrs
div
sbb
das
push
rcll
push
pop
fdivrs
aam
idivl
insl
loopne
mov
jp
add
push
sbb
sahf
mul
mov
ds
cmp
out
fcoms
int3
mull
das
add
je
mov
sbb
idivl
dec
cmpsb
inc
mov
inc
jne
hlt
imul
sub
incb
inc
mov
inc
xor
sbb
mov
push
popf
aad
insb
sub
pop
es
in
loope
mov
enter
loopne
shll
and
jp
mov
call
xlat
sub
pop
cmp
repz
jle
es
xchg
call
mov
fs
sub
fwait
testl
outsb
and
push
gs
lret
movsl
cmpsb
xlat
pop
jo
sbb
std
mov
mov
dec
xor
mov
cmpl
ss
repnz
add
mull
pusha
sahf
roll
pop
sti
or
hlt
cmp
push
jmp
not
cltd
mov
idivl
jmp
pop
push
rcrb
cmp
xor
aam
out
mov
sub
std
cmpl
mov
test
imul
data16
idivl
enter
aad
ss
leave
mov
mov
xor
xchg
push
jl
nop
shr
inc
stos
mov
mov
jg
lock
and
mov
xor
or
lcall
sbb
std
addr16
pop
mull
pop
fs
mov
in
and
rolb
lods
mov
mov
rorl
adc
div
jl
fnop
repz
imull
addr16
negl
inc
mov
rcrb
pop
sbb
fstp
sar
notl
icebp
pop
xchg
pop
mov
xor
sbb
mov
add
lds
mul
out
dec
mov
int3
test
notl
out
xchg
aad
sub
cs
adc
pop
iret
lods
or
sub
inc
inc
ja
out
cmp
out
cld
scas
std
idiv
mov
in
je
push
push
notl
mov
mov
das
into
add
pop
sbb
loope
jo
or
mov
push
hlt
lods
dec
xor
cmc
divl
or
cli
xor
dec
mov
jno
sub
inc
div
push
adc
fisubrs
sub
jl
or
in
inc
inc
aaa
in
inc
imul
sahf
mov
pop
cli
lods
leave
sub
cmp
outsl
aad
sti
jae
inc
inc
loope
adc
notl
add
pusha
inc
std
add
call
ja
push
mov
rclb
inc
or
sbb
testl
push
pop
xchg
mov
adc
loope
dec
in
jae
ss
dec
xor
fcomp
repz
xchg
or
xchg
adc
fs
out
xlat
inc
repz
test
out
in
not
mov
cli
jo
jno
xlat
and
notl
icebp
fisttpll
in
xlat
cmp
push
adc
lret
pop
cmp
sub
xor
notl
jne
outsb
repz
loope
sub
pop
pop
push
jo
notl
sarb
not
shrl
push
imull
mov
sub
inc
jmp
pop
jl
push
shrl
lcall
and
push
or
and
push
ret
mov
jecxz
sbb
xor
pop
adc
xchg
gs
xchg
idivl
mov
stc
lcall
cld
testl
sahf
iret
out
or
push
mov
imul
jl
repz
xchg
pop
shrb
mov
adc
testl
lock
divl
jae
pop
repz
xchg
stos
mov
adc
xor
jp
int3
movsl
and
add
insb
sub
mov
cs
inc
mov
dec
xlat
or
cmpsl
test
lret
mov
scas
xlat
imul
jb
jbe
js
subl
push
clc
xor
roll
jmp
mov
mov
ljmp
jae
dec
sub
pop
mov
jnp
jmp
sbb
divl
inc
and
xchg
dec
popa
popf
mov
repnz
mov
jns
and
je
cwtl
and
iret
push
sub
mov
pop
xor
and
repnz
jp
xor
icebp
rcr
dec
xlat
je
pop
sbb
sbb
incb
dec
pop
mov
fucomip
add
xor
jae
pop
shl
aaa
mov
pop
inc
and
pushf
rclb
push
insb
cmp
cmc
push
aaa
cmpsb
xor
outsb
mov
nop
mov
adc
adc
sub
push
pop
mov
lods
sar
jae
ds
das
adc
sahf
mov
testl
stos
sub
mov
in
xor
aam
fsubrs
roll
cld
rcl
cmp
aaa
rorl
test
pop
xchg
clc
roll
nop
pop
fbld
int3
mov
mov
mov
mov
out
jo
sbb
cmp
mov
dec
fucomip
mov
icebp
cmp
pop
mov
scas
fldenv
jmp
dec
mul
mov
ficoml
add
mov
cmpsb
enter
jmp
je
idivl
outsb
stos
xor
mov
not
outsl
inc
sbb
stc
loop
div
push
bound
mov
lock
mov
test
paddusb
sub
inc
xchg
in
pushf
xchg
sbb
xchg
adc
out
push
mov
xlat
stos
push
mov
popl
sbb
dec
mov
xlat
add
mov
lods
xlat
pop
mov
add
jno
fimuls
mov
push
aad
sti
add
pop
sub
cmpsb
mov
adc
lret
test
mov
mov
xor
xchg
outsb
push
sbb
push
pop
gs
les
fistl
xchg
das
jbe
jmp
mull
loope
or
test
andb
ds
xchg
lahf
xchg
xor
loopne
in
dec
addr16
outsl
dec
cmc
cmp
aam
push
sub
sbb
icebp
jae
dec
cmpsb
xlat
pop
insb
popa
dec
pop
sub
dec
cwtl
loop
dec
xor
inc
push
idiv
jge
xchg
movsl
out
imul
in
fcmovne
lcall
add
jnp
fucom
dec
divl
jmp
mov
jecxz
daa
fnstsw
addr16
jnp
repnz
enter
cmp
out
sub
mov
pop
loopne
xor
popa
dec
lahf
mov
xchg
cmc
repnz
and
decb
sub
rcrl
stos
test
fmull
jne
push
sbb
cmp
scas
mov
enter
add
or
daa
xchg
mov
repz
mov
lahf
dec
fisubl
push
mov
cmp
mov
fucomi
jl
xbegin
daa
mov
add
fs
jns
and
cli
cmp
add
add
xlat
jb
xchg
pop
jne
adc
cmp
inc
outsl
loop
jns
mov
lock
loope
cmpb
cmpsb
out
sbb
iret
mov
movb
jne
pop
push
xchg
arpl
je
out
push
or
flds
iret
lcall
flds
in
into
pop
mov
aaa
iret
out
mov
cmc
push
cmpsb
xchg
sahf
aad
pushf
jns
stos
iret
xchg
xchg
fs
popf
jbe
dec
bnd
addb
hlt
out
dec
push
ljmp
and
push
jbe
or
lds
push
icebp
frstor
jnp
fld
loop
and
xlat
cltd
adc
scas
jo
popf
insb
lods
pop
imul
xchg
jecxz
dec
sahf
jecxz
inc
mov
xchg
icebp
push
data16
lea
sti
inc
negl
aad
inc
cmp
pop
add
lods
mov
fadds
addr16
jp
or
pop
in
or
inc
loope
jne
repz
jle
fsubr
in
xchg
xchg
inc
fucomi
icebp
dec
hlt
xchg
jl
mov
lods
xchg
sbb
imul
dec
inc
stos
sbb
daa
mov
add
jg
fisttps
sub
xchg
mov
hlt
xlat
rcll
call
in
repz
adc
testl
notl
std
test
jp
in
dec
insl
jb
es
sub
cs
aad
testl
or
cltd
jo
lock
push
xlat
push
sbb
sbbl
jmp
sti
jae
jnp
rclb
idiv
call
or
fbld
sbb
cld
rcll
icebp
fistps
or
gs
push
ret
bnd
mov
xchg
fucom
jae
and
testl
fwait
push
add
lock
lea
xor
cwtl
scas
mul
divl
lock
cltd
sub
mov
pop
sub
mov
jg
dec
outsb
fisubrl
sbbl
xlat
rclb
and
arpl
xor
push
test
aad
lea
cmp
cwtl
test
sbb
jg
out
stos
loopne
cmp
daa
push
mov
ret
mulb
ffree
and
cmp
mov
negl
lcall
rol
testl
adc
mov
mov
div
in
push
into
popa
or
adc
push
imull
adc
lods
sti
lret
sub
pop
inc
cmp
sub
add
jg
mov
push
repnz
div
dec
mov
cltd
mov
push
rol
lds
notl
or
adc
mov
out
stc
shlb
push
jl
jg
cli
inc
jns
ja
je
les
mov
xor
pop
jl
jno
xchg
fldenv
mov
cmpsb
enter
and
dec
notl
test
shl
dec
push
out
out
jg
mulb
xlat
sbb
mov
pop
xor
test
xchg
dec
movsl
xchg
mov
call
sub
jg
adc
or
mov
rcrb
sbb
sbb
mov
pop
jno
xor
fbld
inc
in
sub
testl
dec
hlt
div
dec
mov
fiadds
push
insb
push
adc
ds
repz
xchg
mov
jb
cmp
jmp
out
sub
popf
mov
ret
movsl
pop
adc
mov
sub
and
cli
idiv
pop
jb
jo
test
adc
sub
out
add
ret
shlb
push
insl
in
fsubrs
rcrb
divl
ss
mov
or
imul
jle
push
push
pop
arpl
jo,pn
testl
testl
test
testl
xchg
out
stos
and
mov
push
pop
jbe
xchg
pop
xor
jo
das
mov
fisttpl
mov
mov
arpl
lods
shll
pop
fidivl
cmp
jp
scas
in
not
mov
and
in
or
movsb
fcoms
push
mov
jnp
call
imull
in
loop
gs
xlat
aaa
lods
push
add
push
lcall
daa
mov
testl
cmp
or
lret
fucom
popa
dec
or
xor
sti
mov
sahf
sub
loope
divl
clc
mov
add
or
push
idivl
cmpl
sahf
inc
imul
bound
push
push
sbb
sub
jge
div
dec
xor
mov
jp
inc
lcall
mov
fbstp
adc
cmp
sub
out
out
shll
jb
dec
popa
inc
lock
inc
movsb
cltd
and
and
sub
sub
daa
mov
divl
mov
jg
rcrb
mov
rcrl
lahf
aad
cs
jno
in
testl
cmp
mov
loope
stc
imull
and
imul
stos
fisubs
ja
scas
test
stos
test
xlat
nop
dec
sub
pop
imull
imul
cmpsl
push
push
dec
inc
out
and
pop
xchg
xchg
popl
ljmp
sub
ret
fcoml
lock
mov
leave
popf
repnz
movsl
testl
movsb
lods
sub
lcall
or
aam
mov
stos
mov
sub
testl
gs
negl
aam
rclb
testl
fnsave
mov
movsl
outsb
cmc
addr16
je
sub
cmp
pushf
fsubrl
loope
xor
testl
adc
push
inc
fldl
adc
push
jae
divl
icebp
cmp
out
lcall
stc
test
xchg
stos
mov
mov
repnz
sub
dec
push
bound
xor
pop
loope
nop
aas
shl
decb
cmpl
pop
sbb
imul
add
cmpsl
mov
add
jg
int
jae
int3
xor
stos
and
enter
add
jo
or
lret
sbb
lahf
pop
dec
test
leave
sti
mov
stos
pop
shrl
mov
xchg
out
xchg
cmpsb
not
push
mov
xor
in
xor
sub
sub
mul
pop
mov
cmp
or
pop
aaa
decb
jle
jmp
in
fcomip
adc
inc
sbb
lds
dec
movsl
divl
scas
mov
and
div
push
data16
imul
loopne
imull
adc
jge
inc
inc
ret
sbb
enter
xorl
loope
pop
pop
pushl
xlat
add
jge
xor
xor
iret
mull
pushf
xchg
scas
mov
or
cmp
xor
and
add
adc
out
lret
xor
push
jbe
push
fcomip
pop
xlat
out
push
or
push
add
pop
fisttpll
imul
insl
out
mov
imull
inc
stc
jb
gs
or
pop
shll
lret
loope
adc
ret
divl
cmp
or
aam
neg
cld
xchg
push
jbe
jle
notl
les
pop
cmp
das
loop
shll
xchg
negb
divl
in
jne
push
fs
negl
ja
sub
add
stc
imull
cmp
idivl
jnp
hlt
pop
lahf
insl
xor
pop
mov
pop
cld
jb
push
mov
xacquire
iret
dec
mov
pop
lea
fs
adc
mov
test
xor
push
or
push
in
fs
ss
jl
outsl
lret
divl
scas
cmpb
push
out
push
mov
fwait
bound
or
test
and
in
push
cwtl
ret
sub
pop
pop
push
lcall
gs
and
jl
enter
subl
notl
adc
add
popf
cmp
inc
and
push
adc
mov
jne
or
cmp
loope
inc
sbb
xor
jmp
add
es
rorb
adc
mov
mov
mov
mov
idivl
shlb
test
push
mov
aam
hlt
testl
xor
lcall
mov
and
push
xchg
inc
stos
dec
cld
pop
pop
inc
insb
ja
divl
test
xor
rcl
pop
jmp
test
mov
sbb
imull
out
adc
nop
jl
pop
inc
xchg
cmp
add
xor
cli
imul
and
xor
xor
jl
cmpsl
dec
or
fistps
jnp
mov
and
push
out
adc
jg
negl
pop
adc
xor
adc
jge
insb
mov
out
shll
mov
mov
aas
or
dec
lahf
testl
pushw
pop
jnp
adc
xchg
shll
rclb
xchg
sub
jmp
push
movb
clc
or
ds
pop
cmp
in
cmc
hlt
jbe
xor
in
cmp
aaa
mov
testb
inc
insb
sbb
xor
and
test
inc
imul
out
adc
lret
fsubr
pop
xor
popf
clc
out
cli
negl
and
or
andl
mov
pop
adc
ret
stos
dec
testl
mov
test
xchg
jnp
jo
inc
cmpsb
sub
aas
and
jb
cmp
pushf
and
dec
jecxz
hlt
in
lcall
and
or
jns
rorb
mov
test
jmp
fs
ss
mull
les
dec
aas
and
dec
out
es
xlat
xchg
enter
aaa
push
pop
inc
cmp
inc
mov
sbb
enter
sahf
jge
pop
lret
testl
pop
test
dec
arpl
movsb
fsubrl
push
pop
ret
pop
inc
pop
shlb
pop
inc
negl
outsb
out
cmp
dec
jae
sub
push
and
adc
jge
imul
fimull
clc
push
int
jnp
cmp
enter
testl
rcrb
dec
popa
xor
mov
dec
out
imul
out
cmpsb
lods
stos
xlat
popf
test
lea
cmpsl
dec
push
aam
int
or
mov
shrb
out
lds
in
inc
test
mov
xchg
in
xchg
pop
fidivs
fdivrl
es
shl
mov
mov
jo
ds
js
jns
insl
add
xor
or
sub
lcall
outsl
sub
mov
jo
call
out
adc
mov
add
pop
xchg
div
lea
imul
test
inc
push
sub
pop
lahf
fcmovnu
pop
divl
lcall
pop
jb
test
xor
scas
dec
daa
pop
ret
jecxz
mov
xchg
inc
add
xchg
scas
outsl
or
lock
jmp
out
sub
sahf
push
in
sbb
mov
loopne
mov
lea
jb
out
mov
or
outsl
push
out
aam
xchg
push
xor
pop
in
xchg
or
lret
sub
mov
hlt
push
in
test
mov
inc
cmc
lock
sub
notb
loop
fcoml
jbe
sub
js
sub
xchg
idivl
mov
xchg
test
lret
imull
gs
mov
inc
lock
push
pop
shrb
idivl
inc
mull
pop
out
sbb
lea
testl
scas
jl
filds
sti
ret
sub
or
mov
or
outsb
idivl
mov
clc
mov
cmpsl
int3
divl
mov
fdiv
lock
ds
lds
cltd
insl
div
lret
jge
fstpl
adc
pop
div
popl
movsl
notl
adc
movsb
mov
mov
les
jmp
dec
mov
repnz
inc
aas
mov
lods
cs
mov
dec
add
or
jmp
out
xor
pop
xlat
and
rclb
aas
mov
lahf
loopne
pop
add
insl
mov
imul
jns
sbb
dec
negl
mov
shl
stc
imul
add
inc
enter
inc
dec
nop
cmp
mov
adc
inc
hlt
out
xor
mov
jns
mov
jge
push
ficoml
xlat
in
repz
jo
and
out
out
mov
shrl
dec
out
xorb
sbb
iret
mov
sub
pop
testl
adc
out
jp
or
aam
adc
ret
jb
jg
mov
xor
ret
push
jge
sub
xchg
add
ss
fucomip
testl
icebp
push
arpl
mov
daa
cmp
add
dec
mov
test
test
xor
pop
sub
divl
fs
ljmp
daa
or
stc
sbb
ss
test
scas
hlt
call
xchg
aam
add
push
out
divl
add
and
add
push
add
repnz
adc
pop
lea
enter
inc
icebp
enter
push
and
gs
dec
mov
lcall
push
inc
jl
stos
imulw
out
jbe
mov
divl
pop
xchg
in
fnstenv
mov
mov
pop
inc
dec
out
jmp
testl
inc
cltd
push
ss
test
int
pop
loopne
push
jge
sbb
in
cmc
cli
dec
sarl
out
jle
cmpsl
bound
and
aad
push
icebp
xor
dec
dec
cmc
insb
adc
add
fsts
lret
inc
jmp
data16
or
mov
pop
divl
xchg
inc
xchg
addr16
call
jecxz
push
sti
pop
insb
pop
jl
xor
fisttps
jp
mov
cltd
leave
adc
jo
xor
decb
xor
arpl
shl
aam
pop
adc
inc
inc
sbb
inc
cmp
cwtl
jp
adc
mov
push
xor
push
shll
pmulhw
dec
aam
sbb
scas
pushf
aas
add
add
fildl
leave
test
xchg
fcomps
xchg
in
cmpsb
imull
and
jle
jne
dec
lock
imull
fstpl
xchg
ss
fsubs
sub
decb
mov
imull
fwait
cmp
nop
in
inc
cmpsl
jle
pusha
idiv
iret
leave
push
scas
sbb
push
or
in
jmp
sbb
pusha
cmpsb
mov
pop
inc
push
in
add
pop
mov
dec
mov
iret
xchg
fstpl
sub
push
push
ss
neg
mov
imul
sbb
xlat
xchg
cmp
sub
addr16
jns
fsubs
pop
xchg
xchg
sub
mov
leave
jno
mov
xchg
bound
add
notl
pop
cmp
cmpsb
mov
mov
sbb
aad
add
mov
or
pop
andb
fadd
stos
gs
in
inc
mov
xor
jecxz
xor
xchg
daa
ror
iret
or
push
in
not
adc
jg
ds
not
pop
fidivl
xor
lret
loop
int3
lock
mov
imul
inc
push
dec
jns
aas
cmp
mull
ljmp
fwait
iret
lods
mov
out
sub
out
sub
jecxz
xchg
scas
or
js
pop
xlat
repz
xor
and
inc
ss
test
sbb
div
fisubrl
notl
adc
xlat
mull
or
push
andb
pop
push
jne
jnp
je
shll
push
or
fcmovnb
sbb
sub
loopne
shrb
xor
adc
ficoms
ret
nop
xchg
das
inc
adcl
jecxz
push
testl
and
dec
ss
adc
lret
insb
add
jns
in
cmp
jecxz
out
rol
nop
xorl
jmp
daa
ja
mov
icebp
mov
icebp
les
and
rcrl
and
sbb
into
div
add
enter
xchg
int3
test
out
pop
cmp
or
aam
push
mov
inc
jnp
out
jb,pn
xor
inc
and
pop
cmp
aad
js
por
cmpsl
mov
fstl
or
add
pop
or
push
divl
adc
sbb
xchg
mov
movsb
jo
cmp
and
or
push
stc
hlt
xchg
push
dec
divl
adc
imul
xchg
shlb
lea
negl
adc
mull
sub
adc
cltd
popa
out
in
xor
sahf
testl
orl
clc
pusha
mov
nop
add
adc
testl
in
out
or
mov
std
addr16
outsb
cmpsl
testl
jbe
je
dec
fists
and
in
sbbl
rcr
jmp
mov
sub
xchg
andb
sbb
icebp
out
pop
daa
xchg
fwait
mull
pop
out
jmp
cmp
sub
xor
xchg
push
icebp
add
js
int
or
sbb
sbb
sub
loope
sbb
jmp
je
mov
mull
nop
push
sub
dec
push
mov
adcl
in
fwait
repnz
lcall
push
mov
pop
aaa
notb
or
testl
mov
sub
in
pop
mov
les
rcrb
dec
mov
pop
mov
or
mul
inc
sub
faddl
sub
ficompl
icebp
mov
sbb
push
test
rcr
xchg
xchg
aaa
popa
dec
not
shll
xchg
daa
add
add
in
in
xchg
inc
pop
mov
fstpt
fdivrp
push
ret
test
xchg
sbb
mul
jo
mov
adc
push
jns
cld
inc
out
mov
aaa
push
mov
xchg
jp
fadd
push
stos
add
xchg
xlat
test
mov
insb
cli
inc
push
in
popa
out
sbb
fsubrs
pop
add
xchg
clc
lcall
lret
push
imull
jne
outsb
jmp
popa
mov
add
notl
push
dec
fmull
imull
pusha
and
mov
xchg
into
push
popa
xchg
pop
loop
idivl
xor
lret
pushf
mull
pop
mov
sbb
jns
imul
xchg
push
inc
cmp
xchg
test
pusha
ljmp
mov
shl
stos
idivb
arpl
nop
add
xlat
icebp
loope
repz
pop
push
test
testl
sarl
adc
divl
mov
dec
in
enter
loop
mov
imul
push
mov
and
mov
out
cmp
mov
insb
push
inc
arpl
lahf
ficoml
nop
test
jle
int
gs
out
dec
push
test
out
test
ja
pop
push
lods
adc
xchg
js
push
pop
add
lock
loopne
cmp
sub
xor
insl
xor
sub
ret
xlat
arpl
testl
ds
mov
outsb
push
cld
addr16
or
dec
mull
mov
push
xlat
adc
xorb
arpl
fwait
mov
call
xor
push
les
test
rolb
mov
not
push
cltd
mov
xchg
adc
mov
out
sbb
es
cmp
test
xor
in
fstp
inc
jno
xchg
inc
lahf
notl
or
jne
mov
sbb
cmp
popf
enter
inc
xchg
or
pop
pop
push
mov
imull
mov
sbb
jle
scas
cmp
jmp
xchg
push
mov
fisubs
sahf
notl
jae
pop
push
cld
add
dec
idivl
mov
xchg
das
lea
xchg
inc
ret
mov
in
outsl
js
jecxz
and
or
sub
inc
lahf
lds
subl
movsb
xchg
pop
mov
pusha
push
cmp
fsubrs
mul
fimull
mov
fdivs
mov
mov
mull
loopne
cmp
push
fsubrl
mov
dec
push
pop
pop
or
rcr
sbb
push
daa
inc
xchg
mov
mov
int3
stc
fnstcw
repz
notl
and
ss
xchg
and
mov
dec
sub
mov
jl
lods
mov
notl
std
sub
jns
xlat
dec
xor
aad
push
in
and
lds
cmc
inc
ss
fstl
fisubrs
jg
fbstp
push
icebp
lahf
add
mov
mov
ljmp
dec
jb
cmp
inc
imull
or
repz
push
xchg
jnp
inc
lret
sbb
adc
lods
xchg
mov
negl
jg
jo
inc
mov
xchg
lods
testl
mov
and
push
ret
imul
inc
jg
push
bts
notl
sbb
mov
dec
js
out
in
add
mov
shrl
mov
negl
jns
ret
jbe,pn
add
imul
outsb
adc
hlt
pop
std
adc
sub
push
loope
jg
dec
idivl
adc
stos
orl
outsl
xchg
idiv
iret
fildl
leave
mov
fucomip
push
shlb
insb
ret
in
cmpsb
fdiv
roll
mov
negl
mov
imull
jl
rorl
stos
test
inc
loope
adc
sub
or
je
jns
sub
test
mov
pop
in
arpl
scas
push
lds
imul
mov
mov
negl
addr16
xchg
enter
pop
cmp
fistps
rcrb
mov
imul
cmp
fcoms
mov
pop
mulb
sbb
mull
cmp
movl
sbb
cld
fldt
xchg
adc
fsubr
out
xlat
fisubl
mov
adc
fnstsw
push
xor
add
mov
push
scas
push
repnz
fdivrs
repz
jne
ss
pushl
or
filds
dec
fstpt
in
push
data16
into
arpl
stc
cmp
sbb
push
xor
jb
hlt
scas
jmp
mov
in
idiv
cmp
jnp
ds
testl
ja
ret
xchg
or
testl
jp
pusha
xchg
pop
aas
cmp
and
dec
jb
inc
dec
xchg
out
mov
add
aaa
dec
mov
insb
inc
inc
in
pop
mov
call
repnz
inc
mov
nop
and
fimull
out
mov
inc
fdivs
cmp
xchg
sarb
cmp
arpl
fsubr
jmp
cltd
inc
add
xchg
push
xorl
dec
and
mov
jo
push
mov
pop
sub
loope
push
scas
dec
fprem1
xlat
filds
jb
mov
jnp
sbb
push
dec
xchg
xorb
mov
ja
test
mov
xor
xchg
xchg
mov
ljmp
daa
js
in
sahf
mov
fsts
push
lcall
jns
mov
scas
push
icebp
or
ljmp
jmp
dec
push
lods
pop
outsb
push
jno
aas
or
or
add
sbb
push
xchg
sbb
repz
and
mov
push
mov
ljmp
sbb
lret
jbe
insb
xor
mov
xchg
ret
fucomip
or
out
add
add
cmpsb
testb
jns
pop
push
mov
pop
fiaddl
fcmovb
ljmp
jp
or
push
test
jbe
mov
daa
in
mov
loope
xorl
push
jae
imul
pop
scas
ds
in
cmpsl
add
xabort
sbb
fistps
and
cwtl
out
out
and
cmp
and
stc
sub
negl
movd
fbstp
nop
push
mov
out
inc
xor
add
shll
in
xor
pop
xlat
imul
clc
xor
rcl
lret
jbe
sub
inc
push
out
adc
xor
mov
or
pop
fbld
sub
push
inc
in
mov
iret
int
jp
repz
mov
test
jmp
scas
cmp
adc
push
sbbb
cmp
push
icebp
sub
lods
fisubl
or
mov
mov
inc
cmp
addr16
psubw
sahf
or
mov
cmpsl
mov
cmp
daa
mov
cmp
ja
clc
jge
sub
cmp
mov
rcll
insl
xor
push
stc
out
cmp
dec
inc
ss
or
fwait
or
cld
fidivl
ljmp
in
shrb
ret
push
jae
mov
mov
or
mov
xchg
xchg
iret
jge
add
push
test
out
sbbb
sbb
push
inc
xchg
std
sub
in
mov
fsts
adc
out
jg
pop
pop
jl
push
add
lods
bound
cmp
dec
mov
icebp
int
push
and
pop
adc
lock
mov
mov
lods
pop
scas
repnz
in
push
cmpsl
or
mov
jg
adc
lods
stos
xor
xchg
daa
out
push
pop
push
incl
mov
decl
repz
inc
mov
aad
ljmp
mov
mov
sahf
mov
xlat
std
cmp
sti
mov
filds
mov
int3
mov
xlat
scas
inc
mov
sarb
push
mov
mov
out
push
insl
jae
loope
lock
jl
push
data16
pusha
push
mov
ljmp
sub
mov
jns
push
out
xlat
ljmp
mov
test
ljmp
lahf
out
mov
lea
hlt
and
push
mov
mov
outsb
cs
shlb
jg
rcll
loopne
pop
imul
mov
loopne
xorb
fisubl
add
into
sti
sbb
addr16
aas
lods
pop
jmp
shll
sub
mov
jmp
fstp
adc
sahf
cwtl
jnp
in
loopne
xlat
cld
fcmovnb
jle
dec
ret
insl
add
iret
fisubl
fs
push
cmc
inc
mov
dec
test
jg
dec
xchg
and
hlt
inc
cwtl
mov
test
jmp
mov
sbb
lods
imul
jmp
ja
cmp
xchg
in
loopne
lock
fidivrs
stos
cmpsl
mov
ret
jo
push
outsl
in
cld
enter
push
sub
insl
enter
out
frstpm(287
cmc
push
in
pop
in
lahf
or
mov
inc
xor
je
int
mov
mov
jmp
jne
into
pop
insl
add
and
push
test
jae
divb
cmp
cmp
pop
repnz
mul
push
lds
sbb
loopne
fsubr
andl
pop
push
dec
xchg
jecxz
xor
hlt
out
in
ja
push
and
fs
sbb
mov
mov
stos
aad
add
fwait
mov
dec
test
loop
jg
out
insb
out
adc
insb
cmpb
ficompl
dec
lcall
sti
test
es
push
mov
pop
or
add
add
xchg
dec
or
xlat
rcrl
out
mov
ret
ficoml
mov
repz
cmp
dec
mov
aam
ret
jae
negb
icebp
fst
jge
sbb
xor
fmulp
out
scas
icebp
xchg
jbe
int
cmpsl
rclb
das
fstps
bound
pop
mov
cmp
movsl
jg
inc
rol
outsb
test
add
mov
lds
fbstp
aaa
flds
ret
out
repz
inc
mov
bnd
lods
sub
enter
out
xchg
inc
pop
popf
call
repnz
in
fcmovbe
dec
fdivs
xchg
ret
and
movb
loope
push
shlb
pop
outsb
push
das
mov
dec
sbb
mov
xlat
bound
jmp
mov
jmp
arpl
add
mov
mov
adc
insl
cltd
stc
jns
xchg
dec
loope
inc
aad
pushf
mov
lcall
lods
call
xchg
rcrb
mov
pop
sbb
mul
mov
mov
idivl
push
adcb
aas
aam
data16
les
jno
enter
test
pop
xchg
mov
subl
imul
pop
mov
cmp
and
data16
pop
fisttpl
or
dec
mov
cmp
sti
jmp
or
repnz
mull
cmp
arpl
filds
rorb
mov
xlat
pop
pop
lea
mov
testl
cwtl
lds
jbe
fstps
cmp
popa
add
mov
mov
ret
pop
sti
jle
push
pop
sub
sub
cltd
loope
idivl
gs
out
cmp
idivl
mov
pushf
mov
inc
not
aam
leave
xchg
ja
into
imull
and
pop
push
xchg
mov
hlt
sbb
adc
shl
mull
outsb
and
iret
rorb
imull
pop
repz
subb
testl
insl
je
dec
mov
xchg
or
cmpsb
scas
pusha
sbbl
mull
int3
or
sbb
inc
neg
incl
inc
dec
roll
enter
add
clc
inc
adcl
leave
push
or
test
cmpsl
into
clc
adc
dec
mov
into
pop
imulb
jnp
xor
movsl
jo
test
movsl
stos
ror
jmp
fiaddl
sub
icebp
cltd
pop
mov
inc
xchg
inc
rorl
divl
cmp
int
sarl
adc
addr16
dec
jns
sub
jp
sub
sbb
push
insl
lods
or
hlt
sarl
sub
sbb
fnstsw
jne
outsb
mov
cmp
imul
push
xchg
out
arpl
js
aaa
stos
mov
xchg
jb
icebp
dec
cmc
cli
movl
mov
fwait
iret
jmp
pop
mov
ljmp
insl
test
inc
mov
bound
xor
iret
fildll
or
lock
fstpl
or
xchg
xchg
mov
fs
mov
mov
cmp
test
nop
inc
mov
mov
roll
insl
iret
sub
sub
sbb
test
ja
icebp
cmp
outsl
ljmp
adc
adc
jo
adc
sbb
push
bound
scas
or
push
repz
arpl
shr
push
mov
add
or
push
cmpsl
das
ss
inc
cwtl
insl
out
inc
lods
or
mov
mov
sbb
out
mov
inc
mov
sbb
int
cwtl
mov
jb
and
test
push
orb
mov
xchg
mov
out
push
sbb
push
loopne
pusha
test
ja
loop
mov
xchg
pop
scas
mov
lods
enter
aaa
xchg
jno
ja
add
js
out
dec
stos
push
aaa
call
jb
out
std
cs
jo
xchg
inc
mov
hlt
fs
push
mov
pop
cltd
dec
mov
adc
inc
mov
push
repnz
test
aas
pop
int
add
push
dec
push
or
fldlg2
loop
jnp
into
sub
imul
into
mov
xor
dec
aam
daa
ds
mov
sti
pop
cli
ljmp
lods
les
sub
jmp
imul
fiaddl
shr
aas
push
inc
out
test
subb
jo
insl
js
mov
inc
out
push
mov
fiaddl
loop
push
mov
add
out
mov
xchg
mov
lds
mov
fiaddl
pop
pushf
mov
dec
inc
in
fisubl
scas
rcrb
popf
orb
pop
gs
sub
clc
ds
xor
enter
outsl
bnd
fs
loope
mov
stos
pop
scas
mov
out
sbb
adc
xlat
cltd
stc
mov
push
dec
jbe
xor
inc
into
mov
and
push
inc
scas
add
shll
inc
aas
aam
jg
bound
xchg
push
iret
push
pop
add
sti
aaa
ljmp
or
or
in
dec
ficomps
add
sbb
aaa
in
adc
out
jle
loope
xlat
mov
inc
jne
aaa
cmp
call
cmpsb
jns
ja
adc
mov
mull
mov
test
cmp
push
enter
int
repz
movsb
adc
ljmp
stc
push
stos
push
lahf
lcall
adc
adc
enter
xor
out
in
scas
iret
xor
push
movsb
adc
into
xchg
mov
push
insl
in
movsb
andb
mov
bound
ret
insb
mov
xor
lock
inc
jge
jae
mov
push
cmpsb
jle
mov
addl
push
fldl
dec
inc
pop
popa
xor
push
ret
enter
lods
sbb
cs
ljmp
add
add
jno
cmpsl
xor
pop
adc
cld
mov
shl
push
pop
cs
add
data16
and
lcall
ficoml
lock
movsb
std
ljmp
hlt
mov
cmc
es
mov
movsb
xchg
lock
jns
push
sbb
outsb
mov
popa
jbe
mov
pop
fldt
cmp
sub
jno
dec
repz
negl
push
sub
and
scas
fadd
fcmovne
leave
xchg
jmp
lods
inc
xor
mov
pop
mov
loopne
jmp
xor
fldl
clc
rorl
outsb
cltd
clc
pop
sbb
mov
add
push
sbb
cwtl
lahf
push
xor
in
movsl
mov
test
lret
daa
out
pop
movsb
in
outsb
sbb
cmc
mov
cmp
testl
push
push
xor
xor
adc
lods
cmp
jnp
jae
cltd
push
inc
hlt
pop
lods
mov
rorl
sbb
aam
js
fdivs
sub
imul
jmp
scas
jge
movsl
jl
xchg
ljmp
daa
add
sub
adc
scas
pop
int3
lea
push
pop
mov
xchg
vpshaw
adc
inc
add
mov
xor
lods
dec
cmp
jge
inc
aas
cmpsb
pop
mov
add
out
cmp
idiv
loop
lods
je
xchg
subl
mov
stos
outsl
pushf
mov
ds
adc
add
gs
xor
icebp
ffreep
xchg
popa
jo
mov
mov
shrb
jp
fcomps
out
aad
int
sarb
mov
int
dec
in
mov
loopne
push
cli
add
inc
cmp
xchg
cld
push
fidivrl
aaa
xchg
ljmp
push
xchg
loopne
ret
daa
jno
ljmp
ljmp
inc
imul
test
mov
xchg
jmp
sahf
imul
lcall
cwtl
fdivrs
fcoms
scas
push
out
ja
inc
popa
xchg
cmp
inc
jae
fldenv
lock
push
movsl
cmp
dec
and
fcmovu
sub
jne
xchg
push
iret
in
add
cmp
sub
dec
shrl
movsl
dec
pop
loopne
shrl
insb
mov
mov
cs
jb
int
arpl
adc
mov
xchg
mov
fiaddl
or
adc
mov
ds
dec
mov
xchg
movsl
ja
scas
scas
enter
ds
rorl
push
push
ficoml
repz
out
outsb
add
adc
xor
jp
test
push
sub
out
adc
push
adc
loope
test
inc
xchg
cmp
inc
es
std
mov
andl
pop
adc
icebp
or
mov
test
add
xchg
pop
divl
add
lret
aam
mov
in
pop
xor
mul
jb
addr16
xlat
fcoml
sub
xchg
mov
pop
shlb
inc
sbb
out
mov
mull
mov
add
loope
rorb
push
and
fidivrl
mov
ja
imul
mov
idivl
xchg
adc
mov
maskmovq
negl
nop
rcr
adc
cmpsl
out
imul
inc
push
push
mull
jns
repz
xchg
mov
das
subl
fnsave
sti
mov
lret
mov
enter
divl
movsb
loope
sub
popf
shlb
int3
scas
lahf
insb
lock
adcb
mov
jne
notl
in
inc
loop
dec
ss
jb
xchg
idivl
mov
pop
xlat
dec
mov
push
sti
fdivrp
repnz
xchg
sbb
rclb
out
inc
insb
push
fidivrs
negl
fsts
int3
mov
outsl
div
pop
and
pop
mov
pop
jl
cli
std
movsb
addr16
fnstcw
imul
push
inc
and
test
mull
fcoms
xchg
divl
and
push
mov
scas
pop
dec
jge
push
xlat
das
jp
sub
in
pop
dec
mov
mov
and
mov
xchg
out
sarl
add
pop
cwtl
jl
or
leave
cs
repnz
sub
push
es
int3
aaa
add
testl
xchg
sbb
mov
in
pop
ja
push
ss
mov
and
pop
jae
fldt
cmp
aaa
xchg
jo
push
xor
mov
adc
sbb
jmp
in
inc
mull
sub
mov
pop
pop
jo
notl
aaa
mov
xchg
into
cmpsl
and
outsb
ja
mov
out
cmp
cmp
outsl
shrl
imul
inc
mov
je,pt
xchg
pop
movl
sbb
jmp
stos
fbstp
imull
ret
mov
out
cmpsl
aam
in
testl
mov
jo
push
jp
dec
aaa
leave
fptan
jbe
jo
sbb
clc
xchg
mov
test
xor
xchg
aam
idivl
addl
ja
mov
mov
jb
rolb
lock
sub
dec
fistl
mov
stc
mov
sub
in
push
out
push
xlat
xor
sub
loop
and
and
mov
jne
and
dec
push
xor
push
fisttps
mov
adc
jecxz
js
sbb
ss
or
sti
stc
arpl
xor
insb
insb
pusha
idivl
sub
movsb
xor
add
cmc
cld
daa
cmpsl
xor
repz
nop
mov
imull
test
lcall
or
mov
out
outsl
in
testl
mov
ficomps
rcrl
push
gs
test
rcll
jno
js
andb
push
mov
std
loop
xchg
jae
mov
jne
inc
sub
cmp
shl
add
adcl
add
cli
cs
fsts
xlat
jnp
xor
int3
add
fucomi
out
stos
idivb
jne
sub
lmsw
mov
js
xor
iret
ja
push
imull
and
insl
negl
inc
or
or
inc
pop
sbb
arpl
dec
fmul
mov
or
testl
lods
sbb
out
sbb
movsb
push
negl
jno
clc
inc
push
xor
arpl
sahf
pop
dec
insl
sub
aad
mov
loopne
fcmove
std
dec
sub
negl
jo
scas
testl
mov
mov
pop
sbb
daa
push
cmp
mov
adc
icebp
addr16
test
ret
cmp
fiaddl
stos
add
loop
fbstp
xchg
in
sbb
jne
inc
jb
mov
test
adc
pop
and
icebp
loop
lcall
cmp
repz
fwait
jg
push
and
sbbb
repz
aaa
je
push
fucom
loope
lret
mov
mov
adc
jmp
add
mov
shrb
arpl
xchg
jo
bound
les
not
jno
dec
fidivl
mov
aaa
sub
das
daa
js
pop
idivl
roll
cmpb
adc
out
ret
add
imull
mov
pushf
imul
fxtract
out
inc
jb
add
push
inc
inc
mov
or
aam
enter
xchg
jbe
movsb
adc
call
push
cmp
pushf
iret
mov
mov
jp
jl
lea
sbb
xchg
mov
pop
xorl
xor
jnp
adc
and
xlat
in
push
lods
movsb
ds
pop
xchg
dec
loopne
popa
enter
adc
adc
ret
lods
adc
ja
jp
shr
mov
in
mov
push
push
out
gs
xor
in
or
sub
pop
divl
jbe
add
mov
dec
dec
lcall
out
out
stos
mov
loopne
adc
cmpsl
fdivl
pop
fdivs
sbb
xchg
fstl
lods
xlat
sub
je
pop
addr16
idivl
jo
ss
jmp
jno
test
cmpl
cmp
fstl
fimull
push
testl
and
jmp
out
xor
jne
push
addr16
fld
and
testl
push
sub
mov
or
or
jne
cmp
mov
mov
adc
ss
es
mov
not
inc
aam
mov
popa
sti
testl
into
stos
out
pop
sbb
sub
loope
inc
jbe
mov
not
xlat
jb
push
mov
dec
idivl
ds
xlat
inc
loope
dec
cmp
pop
jae
pop
jno
mull
adc
or
xchg
xchg
imul
fnstsw
dec
loopne
sbb
adc
notl
enter
dec
add
push
bound
and
jl
divl
aam
aas
pop
sarl
cmc
pushf
divl
add
mull
mov
outsl
sbbl
pop
push
in
frstor
icebp
out
push
test
scas
orl
push
adc
sbb
divl
mov
in
xchg
es
lcall
xor
aas
xchg
insl
cmp
mov
adc
shrl
ljmp
lea
call
cmp
mov
cmp
scas
pushf
xlat
sbbb
pop
in
ljmp
adc
inc
sub
gs
add
and
push
add
sub
loopne
divl
xchg
push
sub
or
aas
lods
jmp
out
enter
pushf
jo
sub
mov
or
test
push
jle
rcl
add
jl
shll
incb
and
push
out
rclb
mov
ficoml
dec
notl
inc
jp
inc
jle
push
leave
and
jns
in
xorl
sbb
mov
add
fcmovnbe
in
add
mull
sub
dec
mov
inc
imull
insb
clc
add
cmpsl
inc
outsb
loopne
push
test
add
mov
hlt
mov
xor
out
mov
icebp
jnp
sbb
clc
cmpsb
and
test
rcll
mull
fs
xor
sbb
jecxz
notl
out
or
xchg
push
sbb
testl
jl
xor
cmc
pop
fcoml
xor
fiadds
lret
push
frstor
out
jno
mov
sbb
je
mov
xor
xchg
scas
idivl
stos
adc
ss
stc
lock
adc
testl
pop
js
imull
jge
movsl
mov
xchg
xchg
jnp
dec
inc
push
sbb
xlat
testl
clc
mov
pop
push
fcoml
sbb
js
jo
xor
push
adc
mov
dec
pop
jle
cmp
inc
mov
frstor
xchg
stos
pop
xchg
ficomps
inc
push
pop
inc
ss
cmp
sub
idivl
bound
xchg
out
imulb
call
and
xlat
lods
std
inc
push
mov
sbb
arpl
loope
mov
sbb
adc
imul
test
cmc
int
nop
mul
dec
repz
mov
mov
jle
jecxz
push
sub
testl
repnz
lahf
sahf
xlat
ret
pop
mov
push
idivl
in
fstpl
and
jae
div
int3
inc
xor
or
outsl
mov
or
lret
adc
test
sub
clc
lret
test
mov
in
mov
idivl
mov
push
or
and
push
mov
xchg
js
es
and
sbb
xlat
sbb
outsb
mov
or
lock
cwtl
rdpmc
xchg
shll
cmp
repz
jno
idivl
outsb
lds
in
addr16
fstps
xchg
or
adc
push
cmovo
stos
loop
pop
jmp
pushf
subb
outsb
pop
xor
arpl
not
pop
push
adc
or
jle
inc
out
pop
out
ss
divl
repnz
popa
cmc
insb
stc
cwtl
mov
inc
dec
and
xchg
adc
adc
and
mov
add
sti
idivl
in
adc
mov
xchg
scas
fildl
dec
rclb
test
daa
jmp
ss
jle
fnstcw
gs
sbbb
jo
das
outsl
and
lock
mov
add
dec
xor
dec
and
xchg
mov
xor
inc
or
notl
adc
fistl
mov
push
push
pop
aas
aad
and
out
call
xor
lret
out
sahf
adcb
jecxz
pop
enter
xor
rclb
mov
sub
fisubl
movhps
sti
jmp
xor
gs
mov
xlat
mov
push
sti
jmp
in
je
mov
mov
and
cmp
outsb
cmp
jne
or
fs
xchg
mov
and
repz
jb
mov
pop
adc
inc
pop
repz
pop
pop
das
std
in
jnp
mov
inc
pop
repz
add
mov
sub
push
loop
add
mov
lods
in
js
aaa
gs
stc
push
inc
imul
pop
mov
ljmp
adc
repz
scas
aaa
xchg
sahf
js
ss
mov
xchg
xlat
jp
fdivp
xchg
cmp
jecxz
sub
ljmp
add
mov
aam
jne
xchg
fimull
sti
jecxz
popa
add
das
mov
sub
push
out
lds
push
mov
dec
or
push
jmp
xor
push
lods
scas
cmp
or
scas
adc
lods
stos
cli
lock
jl
ret
cmc
jg
js
ljmp
dec
cmp
daa
adc
cwtl
sarl
xorl
xchg
repz
loopne
ret
loop
out
incb
push
jl
fwait
mov
lcall
jge
in
mov
outsb
mov
xchg
adc
mov
movsb
lock
mov
adc
imul
mov
fisubl
mov
fs
xchg
bound
sbb
movsl
lret
ficomps
adc
jecxz
mov
icebp
into
xchg
cmp
push
xchg
fs
mov
addr16
jg
test
pop
pop
int3
lret
shlb
push
pop
cmp
lahf
push
in
sbb
mull
cmp
shrb
pop
jbe
orb
mov
xchg
mov
xchg
clc
cwtl
fmull
sbb
insb
dec
sbb
cli
pop
sub
nop
adc
mov
sbb
scas
imul
cmc
add
push
inc
mov
push
lods
fs
and
push
mov
xchg
and
loopne
push
movsl
mov
cmc
push
enter
inc
mov
mov
cltd
iret
xor
and
aaa
jae
inc
sbb
cmpsl
mov
mov
inc
xchg
push
mov
adc
int3
and
jle
dec
xor
lods
dec
sub
arpl
lods
jnp
icebp
xchg
mov
mov
lcall
lret
cmp
adc
push
in
xchg
and
in
test
cmpsl
xchg
mov
dec
repnz
imul
dec
xchg
jmp
jp
movsl
pop
out
xor
lods
jne
fadd
add
xchg
mov
sub
adc
hlt
jmp
jmp
fcomp
or
in
sub
lds
test
ljmp
jmp
jbe
fldl
ficompl
shrl
pop
jmp
rep
pop
lahf
mov
jge
in
scas
xchg
push
sbb
mov
mov
inc
xchg
orb
push
andl
jb
in
or
das
or
shrl
in
cli
scas
test
clc
popf
pop
push
adc
xchg
fdiv
xor
push
std
add
popl
lods
cmp
push
das
push
xorb
xchg
arpl
xchg
ljmp
xor
push
xchg
cld
inc
xor
mov
push
sahf
add
sub
xlat
cwtl
cs
sub
sub
cmp
fstp
icebp
stos
les
iret
nop
sbb
ja
loopne
call
add
movsl
mov
jno
pusha
sbb
push
stos
xchg
mov
cmpsl
jns
movsb
push
lahf
outsb
out
mov
insb
adc
clc
sbb
aam
aam
cmpsl
out
and
rcl
nop
jl
mov
roll
add
nop
test
or
xchg
aaa
insl
addr16
mov
mov
pop
cmp
les
xchg
xor
shll
cli
aam
andl
jge
out
jo
out
fs
and
fwait
mov
push
push
jb
fistl
loope
xor
push
ret
xor
mov
cmp
mov
and
sub
jmp
or
pushf
out
ljmp
push
lcall
jge
dec
icebp
fsub
jg
jecxz
jo
pop
jae
lods
das
out
lods
xor
mov
add
mov
sbbl
sbb
fbstp
in
add
or
shll
jb
inc
cmpsb
push
pop
out
aad
dec
repz
repz
xchg
push
xor
daa
pop
stos
mov
inc
icebp
mov
push
sbb
fisubl
mov
sub
into
dec
mov
call
dec
jns
rcr
fidivrl
mov
jb
and
out
cli
mov
out
mov
out
sbb
add
decb
ja
loope
dec
fldl
lret
push
and
mov
ljmp
mov
sbb
pop
inc
cltd
mov
jb
cmc
inc
xchg
aam
insb
les
cmpsl
ficompl
xlat
outsl
out
jb
inc
push
js
repz
testl
imul
imul
repz
jno
out
jmp
notl
jo
neg
rolb
mov
movsl
fwait
push
fsub
dec
xor
inc
mov
push
out
xchg
aas
out
popa
je
push
jo
lods
mov
scas
pusha
add
or
push
negl
sub
popa
or
dec
dec
subb
test
mul
cmp
sbb
idiv
mov
fwait
pop
divl
dec
ljmp
add
add
mov
negl
les
divl
xor
or
push
jns
mov
repz
push
popf
scas
adc
jecxz
cld
es
fwait
lret
mov
adcb
imull
cmp
lret
jbe
mov
loopne
scas
xlat
je
dec
add
jecxz
mov
fcmovbe
shll
cmp
popf
push
pop
nop
sub
add
aam
dec
outsl
notl
fdivs
imul
rclb
cmpsb
rcrl
lods
or
sbb
pop
pop
pushf
shll
roll
pop
call
pop
mov
sbb
idivl
cmc
push
repnz
jnp
push
stos
iret
cld
out
imul
dec
enter
jno
add
negl
inc
push
insb
mov
push
outsl
stos
pop
lock
lret
cld
div
cwtl
and
int
aam
aad
test
mov
cmp
push
call
mov
sbbl
mull
es
mov
push
mov
ja
incl
rcrb
pop
fidivl
sub
aam
inc
loop
testl
mov
jmp
xlat
notl
loope
adc
inc
rolb
adc
popf
xor
mov
and
out
cmp
xlat
mov
out
mov
push
stos
mulw
or
call
cltd
out
data16
outsl
divl
in
mov
shll
jl
ret
fsubrs
xorl
jmp
addr16
imul
dec
cmpsb
ja
or
mov
cmp
and
fwait
xchg
xchg
test
pop
mov
add
repnz
xlat
ljmp
sarb
in
lahf
in
inc
ljmp
inc
enter
dec
stc
out
mov
push
cmp
popf
and
icebp
pop
push
and
scas
add
jl
in
fistpll
test
jp
int3
ffreep
daa
jg
mov
movsl
xor
xchg
mov
shll
sub
dec
pop
sub
xlat
xlat
and
mov
mov
xchg
jns
xor
xchg
vrsqrtps
sti
rorl
clc
in
fstps
cmp
gs
pusha
sub
add
mov
stos
jns
ss
lahf
insb
testb
cmp
pushf
ficoml
jmp
xchg
in
sub
jo
scas
push
sub
push
push
inc
outsl
push
push
outsl
push
data16
shlb
cwtl
push
inc
int3
add
add
xor
adc
fnsave
cli
pop
dec
in
sbbl
int
add
out
push
inc
dec
xlat
cmp
ror
inc
pop
add
decb
loopne
div
add
mov
mull
mov
xor
hlt
jne
imul
sub
jp
adc
addl
xchg
out
pop
add
cmpsb
mov
pushf
mov
and
lcall
sub
movsb
divl
iret
dec
push
jbe
push
pop
out
out
movsl
neg
mov
daa
xchg
mov
push
ds
nop
push
loop
out
sbb
inc
pop
mov
pop
int
xor
jle
xchg
das
roll
fiadds
outsl
push
xlat
sbbb
jecxz
pop
call
cmp
mov
nop
test
xlat
or
clc
repnz
in
mov
mov
and
ljmp
pop
xchg
call
cmpsb
mov
out
loope
sub
cmp
sub
mull
ret
imull
pushf
adc
fcoms
shrl
cwtl
pop
inc
xor
sbb
test
negl
sbb
xlat
fbstp
or
mov
or
aam
xor
lock
push
cmp
mov
movsl
into
xor
or
fs
xchg
mov
test
insb
inc
mov
pop
enter
pop
loope
btc
notl
dec
test
in
aam
aas
in
and
imul
subb
and
mull
jnp
cmpl
ja
rolb
out
test
cmp
sub
jo
mov
scas
in
pop
pop
push
notl
rorl
cld
xor
sub
leave
testl
cmovge
repnz
scas
je
push
cld
repz
adc
fistps
xchg
mov
cmpsl
fs
jbe
and
mov
pop
rcr
enter
movsl
test
call
cs
imul
fildl
and
push
je
inc
jecxz
ss
mov
ljmp
dec
sahf
push
in
pop
xchg
mov
xchg
shlb
jl
inc
les
lahf
sub
idiv
sub
aaa
mov
xor
pushf
lock
cli
adc
sahf
fmull
mov
jmp
mov
sub
out
jno
hlt
mov
inc
sti
arpl
fsubs
in
inc
add
out
inc
test
xlat
out
stos
mov
out
out
push
sarl
mov
sub
or
cmpsl
fimull
aas
and
cmpsl
fisubrs
inc
orl
jg
iret
hlt
arpl
icebp
ffree
mov
popa
push
push
popf
push
lods
test
jb
inc
xchg
or
xchg
sub
test
test
pop
pop
add
inc
sbbb
or
push
mov
out
inc
mov
dec
dec
jbe
jmp
clc
out
sahf
insl
jg
and
mov
inc
loop
mov
inc
xor
fbld
sbb
mov
stc
jge
jg
test
test
push
in
aas
sbb
neg
cmc
mov
bound
inc
test
cld
test
shrl
add
mov
xchg
div
xlat
inc
lds
enter
out
fistpl
sub
xchg
shrl
mov
inc
pop
in
notl
jbe
in
cmp
notl
adc
mull
into
and
notl
pop
aad
test
push
or
bound
xchg
dec
testl
cmp
fdiv
jl
leave
sti
jno
mov
jae
sub
call
sub
jl
sub
scas
testl
into
push
mov
repnz
fists
test
divl
xchg
adc
pusha
adc
mov
xchg
imull
jmp
lcall
inc
mul
push
pushf
aad
ja
imul
mov
jno
loope
mov
lods
add
cltd
test
ljmp
mov
and
fnstcw
in
pusha
mov
sub
inc
std
testl
xor
and
fdivrs
hlt
clc
testl
mov
adc
enter
xchg
mul
and
test
in
test
negl
shlb
push
jns
nop
cld
inc
notl
and
subl
mov
sub
loop
neg
jmp
mov
push
sub
loop
fistpl
sbb
gs
add
mov
ret
jg
xor
movsb
inc
xlat
int3
cmc
in
pop
mov
testl
lahf
loop
out
dec
jle
enter
lcall
mul
outsl
jns
fistps
icebp
dec
xor
lea
mov
cli
inc
inc
jo
xor
out
mov
sbb
or
ja
dec
xchg
xor
xchg
mov
cli
sbb
lock
dec
dec
fs
cmp
aad
cmpsb
and
push
mov
xor
iret
shl
push
sub
or
sbb
ds
sub
je
cwtl
sbb
xchg
adc
div
sbb
jne
mov
iret
aam
jle
and
sbb
xchg
out
int
loop
sub
mov
daa
adc
inc
push
push
xchg
sub
jo
in
shrb
pop
les
in
jb
mov
mull
int
adc
adc
rorb
pop
sar
negl
add
pushf
sub
sbbb
out
in
es
testl
or
pop
out
dec
xor
inc
data16
dec
and
fcomp
or
mov
inc
mov
jae
cwtl
mov
ret
sbb
pop
xchg
icebp
pop
fistl
add
adc
test
mov
add
loope
div
enter
mov
xchg
divl
fnstsw
icebp
insl
in
repnz
xor
mov
mov
loope
xchg
xchg
imul
hlt
xchg
sub
and
or
add
sub
xchg
jno
pop
gs
testl
xchg
dec
negl
fwait
cwtl
sbb
shl
imul
mul
outsb
mov
mov
sahf
popa
cmc
nop/reserved
cmp
lret
and
mul
addr16
mov
repz
xor
aad
pop
mov
mov
lret
je
out
sub
test
subl
data16
fdivp
hlt
les
pop
push
dec
cld
aas
test
test
xor
ds
popa
leave
mov
iret
js
and
xchg
inc
mov
ret
out
inc
lahf
div
lock
decb
adc
pusha
ds
jp
fdivl
lock
pop
dec
cmpl
mov
nop
and
xor
test
cmp
push
xor
divl
xchg
popl
repnz
mov
cmp
nop
imul
aam
pop
mov
add
push
cwtl
add
mov
cltd
in
ljmp
movsb
notl
int
or
mov
es
testl
das
mull
out
adc
testl
idivl
in
mov
xor
cmp
icebp
pop
mov
jno
push
mov
jl
ss
jnp
es
divl
lcall
push
imul
adc
jnp
leave
pop
ds
idivl
sbb
aam
push
adc
push
aas
outsb
jl
pop
test
icebp
mov
mov
adc
stos
insb
push
pop
lret
test
fstpt
push
lcall
push
icebp
lock
inc
test
nop
jno
adc
mov
xchg
fbld
je
or
inc
xlat
sbb
push
cmp
neg
test
in
idivl
jge
cltd
mov
jae
sarl
roll
popa
add
outsl
int
inc
fwait
xchg
xchg
dec
dec
jg
pusha
cwtl
pop
fdivrl
mull
mov
xchg
fidivs
test
pop
xchg
in
test
sub
cmpsb
popf
iret
lods
sub
testl
lock
and
adc
aad
mov
pop
inc
dec
pop
or
out
sub
out
rolb
testl
das
push
push
rcpps
idivl
xchg
push
xor
fsubrs
lock
mov
std
shrb
add
pop
into
je
pop
nop
mov
idivl
lahf
sub
adc
enter
jno
jmp
loop
xor
leave
out
xlat
in
dec
div
dec
popf
push
lea
or
xchg
pop
jae
push
div
call
mov
ret
jbe
and
mov
fwait
mov
inc
sbb
ficoms
sbb
adc
or
stc
jbe
or
loopne
fdivrl
cli
fbld
add
jmp
sub
testl
xor
cmp
fildl
notl
leave
push
rcr
push
aaa
mov
shl
xrelease
push
adc
test
addr16
arpl
js
aas
in
push
iret
notl
or
xlat
dec
stc
insb
dec
adc
add
lea
fdivl
ss
mov
fisttps
fstpl
pop
test
jg
arpl
andb
jmp
sub
divl
sub
out
pop
or
neg
inc
cmp
stc
xor
insl
popa
test
out
pop
loopne
xchg
mov
lahf
sti
mov
imul
adc
imull
inc
jne
push
test
out
sbb
sbb
shll
dec
dec
fistpll
movsb
lret
testl
push
mov
ds
sub
loope
push
lahf
rolb
xor
sub
xor
cmp
divl
mov
iret
arpl
sbb
dec
jae
pop
neg
sbb
pop
ficoml
bound
jle
les
insb
inc
out
mov
shl
outsl
dec
add
lahf
insb
leave
ret
idiv
or
dec
filds
inc
sbb
addr16
mul
xor
push
jne
hlt
sbb
xchg
mov
out
dec
fcomi
xchg
iret
notl
mov
adc
xchg
cli
mov
fs
dec
pop
cltd
mov
xor
mull
stc
xchg
xchg
into
sub
test
ffree
sub
pop
mov
push
pop
jecxz
notl
sbb
sub
fsub
notl
aad
mov
in
dec
xor
out
inc
dec
notl
loopne
int
daa
mov
notl
xor
and
movsl
xlat
add
shlb
cmp
sub
xor
out
push
dec
push
mov
pop
dec
mov
jae
adc
mov
xor
fstpt
jns
mov
ret
negl
in
push
or
test
lret
inc
out
inc
out
push
push
xor
adc
leave
stos
lock
mov
pop
out
idiv
sub
dec
imull
xlat
mov
dec
fsubrp
divl
push
mov
orb
sub
cli
fwait
inc
and
fisubrs
movsl
add
dec
pop
mov
mov
mov
cmp
ret
xchg
sub
ljmp
test
jne
in
loopne
xlat
out
loope
lahf
jae
fsubrp
cwtl
idivl
adc
pop
or
notl
test
roll
add
and
aaa
pop
inc
in
pop
mull
inc
insl
cmpsb
insb
sub
sub
lock
mov
out
push
loopne
mull
adc
jmp
dec
testl
fdivrp
test
in
sub
lret
jnp
inc
lods
mov
mov
dec
dec
fsubrs
xchg
out
negl
inc
ficoms
push
adc
jno
popa
in
es
cmpsb
call
push
testl
shl
inc
inc
push
push
mov
out
jb
stos
mull
movsb
cltd
adc
pop
jae
call
in
or
das
pop
dec
inc
data16
ja
imul
add
xor
iret
mov
pop
movl
fs
rcr
jmp
in
testl
push
inc
add
push
and
pop
xor
push
inc
lahf
mov
test
out
jmp
xor
call
adc
dec
adc
divl
std
shrb
sub
fsubrs
and
mov
in
jnp,pn
dec
notl
xchg
xor
or
popa
rclb
fwait
out
cmp
lahf
add
and
leave
es
pop
cs
outsb
push
out
pop
in
adc
jns
idivl
pop
inc
movsb
push
ficompl
adc
jbe
dec
div
inc
pop
xchg
push
sub
mov
push
pusha
push
sbb
inc
fdivrs
and
xor
mov
pop
pop
andb
pop
cmp
jecxz
dec
or
jne
mov
jle
incl
add
push
jbe
fldl
pop
lahf
insb
imul
sahf
or
out
data16
pop
mov
pusha
int
push
cmp
ja
packuswb
mov
jl
aad
lods
mov
and
jae
fwait
mov
pop
outsl
xchg
test
sbb
loop
add
mov
iret
jmp
loopne
decl
sub
or
push
sbb
xor
jmp
sbb
lahf
xchg
insb
out
outsl
popf
stos
je
mov
out
das
push
sbb
push
mov
xor
sub
hlt
xchg
lcall
dec
add
stos
movsl
testl
sbb
hlt
and
jge
xchg
mov
jmp
mov
sub
or
aaa
fiaddl
aam
xchg
sub
jg
fidivs
ljmp
dec
pusha
push
outsb
cs
sarb
adc
dec
repnz
adc
out
xor
ficoms
out
fidivl
jp
adc
push
imul
dec
loope
push
xchg
pop
ja
in
sub
fildl
repz
xchg
fwait
jmp
stos
ljmp
dec
jns
push
mov
inc
mov
jmp
mov
jge
jae
ljmp
sub
xchg
jb
xchg
dec
js
adc
out
cmc
mov
rolb
jne
xor
xor
push
xchg
ja
leave
adc
dec
frstor
cwtl
fisttpl
xchg
inc
lods
aam
in
cltd
cmp
mov
repnz
imul
repnz
ret
sbb
jo
dec
mov
ljmp
push
jnp
pushl
xlat
xbegin
jmp
jns
sub
pop
pop
push
xchg
sub
or
push
fwait
ds
mov
lret
lahf
jmp
out
jne
mov
call
mov
xchg
outsl
ja
xchg
loope
out
test
add
fcomi
mov
cli
repz
push
out
movsl
insl
popf
dec
rcll
adc
sbb
fisubrl
sub
idivb
xor
sub
test
fsts
adc
aas
rcrb
jbe
int
sub
mov
sub
incb
jns
adc
insb
ret
xchg
testb
imul
in
ljmp
insl
in
rorl
dec
jge
mov
ss
fsubr
fldl
push
bound
inc
cmpsb
rorb
push
mov
sbb
fidivrl
idivl
or
ret
xchg
mov
stos
inc
mov
jno
mov
xchg
div
cmp
adc
testl
lcall
daa
imull
cmp
stos
ret
insb
pop
testl
jo
adc
ss
test
pop
add
and
xchg
or
or
imull
cmp
ret
dec
push
not
mov
mov
mov
adc
daa
xor
dec
mov
sti
outsb
jmp
cmp
filds
push
adc
aam
sbb
testl
lock
cmp
jmp
es
ja
mull
call
sub
stc
lret
or
outsb
out
test
inc
rcll
mov
jae
mov
std
adc
push
repz
xchg
push
dec
add
jp
sub
icebp
pop
notl
imul
scas
push
loopne
push
xchg
stos
add
or
lods
xchg
imull
shl
push
cld
lods
add
idivl
imul
push
fildll
mov
and
pusha
inc
sub
lret
imull
inc
sti
sub
arpl
shrl
outsl
test
fistl
mull
rclb
xor
push
jle
add
add
add
outsb
sti
lahf
test
mov
push
xlat
ja
cmp
pop
mov
idivl
sbb
idivb
dec
xor
xchg
cs
shll
mov
cmp
jb
fildll
mov
cmpsl
testl
xor
imul
pop
mov
es
fildll
mov
ds
pop
adc
orl
idivl
enter
sahf
daa
push
push
icebp
mov
pop
sahf
cmc
sub
xchg
in
cld
cmp
outsb
add
sarl
push
out
les
pusha
cli
or
inc
mov
repnz
addr16
sub
shll
pop
daa
mov
icebp
inc
jbe
dec
jl
pop
stos
cmp
pop
sahf
ljmp
incb
je
mov
shlb
lods
fiaddl
sbb
fs
imul
je
push
jo
in
and
movb
inc
sbb
pop
aas
sub
jne
dec
jge
dec
and
jnp
cwtl
lcall
inc
push
fists
notb
and
stc
repnz
testb
dec
jge
test
jae
sbb
jae
cmc
push
mov
mov
adc
sub
mov
pop
ja
test
or
xchg
sbbl
pop
mov
loop
daa
mov
rep
jmp
insl
push
out
lods
sub
fstpt
iret
cmp
cmp
cld
mov
pop
negb
mov
leave
out
dec
in
sub
dec
xchg
movsb
xchg
xchg
ret
lods
sub
cmp
xchg
movsl
je
loop
hlt
mov
inc
mov
pop
out
inc
int
xchg
push
insb
fsts
sbb
hlt
mov
jecxz
push
cmpsb
and
mov
lods
shrb
gs
adc
jae
cmp
cmc
insb
jp
ret
cwtl
xchg
repz
insl
push
fisubl
dec
ja
mov
push
or
fisttps
int3
test
mov
ja
mov
push
in
xor
inc
cmpsl
sbb
movsl
loopne
mov
fistps
jae
jne
lret
inc
push
adc
aaa
int
fs
int3
rep
test
pop
aas
push
jecxz
pop
push
fcomp
cmpsb
imull
push
imul
fwait
out
dec
inc
push
iret
cmp
rorb
fstpl
test
adc
xchg
ficoms
in
add
adc
imul
pop
popa
xor
mov
negl
out
inc
xchg
nop
jne
xlat
rolb
pop
xor
fs
divl
out
mov
lods
insl
xlat
xchg
push
and
ds
cmp
notl
push
pop
jae
addl
inc
arpl
ret
and
enter
inc
jle
data16
rcrb
fisttps
push
lahf
stc
sub
sbb
mov
sub
jmp
loope
lds
jecxz
addr16
add
xchg
xlat
push
aas
das
mov
outsb
sub
mull
add
xchg
mov
push
daa
sarb
int3
and
pushf
mov
fdivs
xchg
pop
lret
aad
xchg
in
jle
jo
sahf
stos
jge
mov
popa
and
ja
ss
jmp
shrl
sahf
idivl
push
test
xlat
sbbl
jmp
sti
mov
push
mov
xchg
jae
jmp
mov
insl
inc
inc
and
out
dec
xor
xchg
xlat
jae
and
gs
icebp
pushw
andb
sub
xchg
popa
and
inc
nop
inc
ss
lds
gs
lret
mov
inc
clc
popf
mov
es
fneni(8087
and
jge
xchg
or
mov
notl
sbb
int
repz
out
adc
push
xchg
addr16
mull
jp
jge
inc
cmp
or
fnstsw
and
mov
in
in
sub
repnz
leave
in
testb
pushf
cli
pop
enter
mov
add
mov
sub
push
insb
pop
mov
loope
cmpsl
outsb
and
mov
testl
testl
xor
idiv
fildll
pop
inc
scas
cmpsl
mov
push
mov
testl
in
push
push
sbb
ljmp
scas
repz
push
mull
pop
cmpsb
push
cmp
aaa
xlat
std
movsb
xchg
or
xlat
mov
movsl
dec
imul
aad
jl
sbb
fistpll
adc
pop
or
je
dec
out
loop
repz
mov
scas
sub
or
sahf
popa
mov
jno
leave
mov
xor
xor
decl
xor
push
ja
or
sti
adc
cltd
shl
push
inc
mov
push
mov
int3
xchg
imul
sti
add
inc
notl
xchg
dec
pop
lock
xchg
jae
add
pop
imull
shl
mov
enter
jge
pop
xor
xchg
repnz
fcoml
pop
insl
mov
add
xchg
out
test
inc
int
testl
sbb
push
or
out
sarb
add
jmp
clc
and
xor
negl
and
xchg
sarl
mov
mov
imul
imull
js
insl
sub
jns
movsb
mov
cld
popl
sub
cli
lcall
cmp
adc
lahf
ss
insb
mov
repnz
ss
out
mov
imul
sub
adc
negl
sub
test
or
data16
inc
out
cld
popa
mov
imul
mov
cwtl
push
nop
add
push
jne
fwait
repz
pop
pop
cwtl
sbb
sub
test
inc
fildl
xlat
clc
sub
cmc
mov
cwtl
shll
icebp
shl
xlat
sbb
loope
rorl
ret
test
popf
inc
push
xchg
dec
dec
and
gs
testl
ss
bound
dec
mov
cmp
cmc
sbb
nop
div
cmpsl
lcall
add
pop
xor
add
push
rcrl
cmp
sub
sldt
push
aad
testl
dec
jl
xchg
lret
neg
cvtps2pi
leave
enter
ss
pop
negl
xor
inc
mov
mov
movsb
mov
or
stc
sti
cmpsl
popf
shlb
daa
xlat
xchg
out
mov
or
mov
clc
stos
and
pushf
lahf
push
out
mov
div
outsb
mov
jecxz
cmp
shl
adc
negl
scas
addr16
mov
daa
inc
outsb
div
fwait
or
mov
or
popf
xchg
jmp
lcall
add
pop
pop
int
mov
jle
loop
mov
fcomps
ss
andl
ljmp
test
shrl
cmp
xchg
and
inc
xor
mov
in
jecxz
jge
test
sub
idiv
mov
shll
hlt
add
jg
int
mov
inc
imul
imul
shl
stc
inc
adc
lret
adc
popa
aam
mov
sub
mov
fsubrl
sahf
movsb
xlat
lock
pop
test
aas
std
aad
dec
rcrb
pop
cld
test
and
sbb
adcl
mov
add
pop
pop
divl
sub
inc
jl
adc
xchg
jmp
xorl
js
shrb
pop
fldenv
adc
xor
leave
int3
or
push
lahf
lea
sbb
jb
pop
xor
cmpsl
xchg
sub
and
dec
adc
inc
mull
or
inc
pop
sub
lret
sti
and
andb
leave
out
add
pop
push
fcomi
out
mov
inc
je
addb
cwtl
mov
xchg
scas
insb
testl
rol
cmpsb
xchg
fisttps
out
idivl
jmp
mov
push
in
xor
daa
xor
movsb
nop
es
jnp
imul
pop
push
push
jmp
in
mov
fildll
jg
dec
inc
cmp
daa
idiv
inc
in
jge
or
sub
mov
or
dec
push
testl
call
add
and
xchg
rol
and
xchg
ss
fwait
cmpsl
icebp
sysexit
adc
out
outsl
das
movsl
sub
notl
dec
sbb
divl
repnz
out
divw
in
sbb
scas
ss
xchg
xchg
test
push
int
push
cwtl
addr16
div
in
mov
cmpsb
or
cmpb
neg
dec
aad
push
rcll
pushf
add
or
and
imull
mov
xor
mov
ljmp
or
push
adc
in
jae
cs
jmp
movl
cld
into
jo
lahf
insl
pushf
add
cmp
or
mov
jmp
fstpt
ret
push
loopne
aam
jnp
jae
iret
xlat
cmpsl
lds
cmp
fwait
inc
negl
sub
test
andb
and
pop
dec
idivl
fstl
in
jnp
jecxz
je
mov
add
aaa
xor
clc
pop
mov
xchg
mov
add
nop
shlb
mull
sbb
nop
and
ss
push
xchg
negl
adc
adc
lret
out
pop
orl
sub
xor
pop
pusha
sbb
cmp
mov
dec
aam
jmp
jmp
mov
gs
out
xchg
mov
vmovsd
pop
aam
adc
and
fisttpl
mov
lds
sbb
sub
cmp
mov
out
sub
jo
idivl
mov
pop
xchg
js
imull
mov
dec
mov
pusha
aam
push
or
jp
push
into
cmp
testl
aam
dec
daa
lahf
idivl
insl
push
dec
aam
fiaddl
enter
out
cmp
aaa
call
aam
in
loop
bound
sbb
jl
inc
lret
xor
fildl
mov
jnp
push
test
sub
lahf
testl
jle
pop
adc
scas
jmp
add
testl
mov
pop
xchg
mov
inc
aam
push
cmpsl
je
or
out
stos
jbe
or
idiv
in
dec
inc
dec
xorb
or
add
stos
and
test
mov
pop
imul
loopne
loop
stos
jae
je
mov
scas
xchg
out
test
negl
push
mov
push
sub
loope
test
pushf
inc
cwtl
div
in
mov
mov
push
ss
pop
dec
inc
divl
sbb
repnz
inc
nop
imull
push
outsb
xlat
push
mov
xchg
or
loope
negl
lea
mov
xor
testl
or
xor
leave
push
push
loope
xor
repz
jb
not
bound
mov
scas
add
ja
test
or
ror
mov
mov
movsl
movsb
cmp
mov
pop
xchg
and
jns
dec
inc
cmpb
inc
xchg
push
sub
shlb
mov
stos
jo
mull
pop
les
outsb
pop
push
mull
jl
test
insb
insl
inc
jmp
mull
out
mov
loopne
xchg
add
leave
jb
sbb
mull
mov
out
and
rorl
fstps
js
push
imul
mov
push
lock
sub
xor
mov
jg
inc
push
nop
in
mov
divl
or
add
iret
test
pop
hlt
imull
aas
xchg
mul
mov
fisttps
notl
mov
arpl
mov
test
jp
in
push
xchg
cwtl
push
sar
xchg
movsl
sbb
push
cmp
movsl
pop
fs
dec
sbb
pop
mov
adc
lods
add
out
mov
sbb
or
jecxz
xchg
xbegin
mov
sbb
adc
fistpl
add
xchg
test
inc
test
adc
xchg
push
mov
scas
mov
or
inc
adc
xor
loope
adc
ret
jmp
test
sub
push
sub
adc
bound
ffreep
jno
adcb
lret
xor
js
sarb
lcall
shll
xor
repz
out
lret
push
not
das
xor
idivl
imul
sub
jb
stc
pop
mov
lcall
inc
and
fwait
xor
int3
xor
mov
jbe
xchg
xor
lods
addb
test
cmp
cltd
movsl
sbb
icebp
int3
mov
xlat
out
inc
mov
rorl
push
in
xchg
dec
psubd
cmpsb
mov
test
les
adc
daa
mov
mov
pop
testl
pop
cld
dec
in
cmovno
sbb
je
int
push
xlat
sbb
test
jns
and
jg
or
sub
lcall
xchg
and
dec
push
test
fadds
mov
jae
repnz
arpl
dec
adc
idivl
fdivrs
aaa
mov
andl
testl
push
jbe
cs
imul
or
cmp
jp
lods
push
jae
xor
rcl
mov
cltd
mov
xchg
test
clc
je
push
fcmovu
pop
int
fmuls
sbb
rcll
aad
mov
stos
test
mov
mov
fcomip
or
nop
pop
push
int
sub
int3
pop
imull
lret
in
std
movsb
testl
aad
pop
xchg
jno
push
divl
inc
pop
sbb
aam
insb
xchg
aaa
jle
xchg
loope
shl
cmp
test
mov
mov
out
push
mov
pop
testl
mov
popa
inc
div
js
and
cmp
push
loope
mov
push
cld
nop
mov
cmp
scas
xchg
in
notl
dec
loope
xchg
xor
cmpsl
aas
inc
sbbb
lret
sub
shlb
mov
imull
scas
pop
fs
adc
mull
push
jae
cmc
loopne
xor
adc
clc
popa
mov
repnz
inc
idivl
and
les
movsb
testl
adc
mov
cltd
sbb
test
in
cmp
mov
lods
xchg
inc
push
icebp
xlat
scas
addb
xor
aas
call
push
adc
in
movsb
inc
fldl
jecxz
inc
xchg
sub
xor
loopne
cmp
test
cmc
inc
jbe
dec
gs
jle
inc
shl
sbb
icebp
inc
js
sahf
push
jl
or
movsl
out
rorb
stc
push
xchg
push
idivl
iret
push
aam
call
inc
pop
pop
negl
je
in
push
lock
inc
and
mov
mov
xchg
cmp
or
neg
ljmp
imul
xchg
dec
sti
fstpt
in
idivl
pop
jge
les
push
int
cs
aam
xchg
insl
push
xchg
xchg
nop
aaa
andl
fdiv
xchg
insb
and
xchg
pop
or
in
push
fmull
idivl
lods
ret
mov
push
mov
das
adc
mov
cmp
clc
push
mov
movsb
repnz
fs
fstpl
mov
iret
pop
fldenv
shrb
testl
iret
pusha
in
push
lock
dec
jp
sbb
add
testl
xor
popf
ds
mov
jns
and
cmp
mov
jge
stos
pop
imul
lahf
fnstcw
dec
ja
iret
fwait
cmpb
loop
and
pop
mov
fdivr
cmp
mov
lea
sub
ret
mov
mov
shl
dec
lahf
and
out
adc
testl
xchg
inc
xlat
add
test
push
dec
push
out
outsb
xchg
arpl
mov
rorb
addr16
xor
jmp
sbb
mov
aaa
xchg
stc
ja
js
pop
insb
loopne
or
pop
arpl
dec
pop
lret
notl
or
add
notl
stos
cmp
sub
cmp
aaa
shrb
test
xchg
addl
fimull
add
and
hlt
dec
xor
xor
mov
jl
or
cmp
out
sub
popf
divl
call
sub
daa
popa
push
add
xlat
fisubrs
dec
shl
xchg
out
push
mov
jnp
inc
xor
idivl
mov
ds
fsubl
mov
es
xlat
mull
sbb
adc
test
imul
mov
notl
dec
fstps
test
or
testl
and
mov
inc
in
sbb
or
leave
notl
inc
lret
test
jbe
mov
sub
aaa
or
push
sbb
repz
jb,pn
dec
jecxz
cld
add
loopne
or
xchg
sbb
stos
fists
pop
neg
xor
mov
or
clc
in
stos
stc
mov
adc
xchg
setbe
mov
in
dec
inc
pop
ds
xchg
jecxz
push
jmp
sub
mull
lea
dec
popa
mov
adc
push
add
xchg
fists
or
and
cmpsl
scas
movsb
push
mov
divb
sahf
xor
and
jge
idivl
dec
ds
cmp
cmpsl
pop
iret
push
fdiv
xor
mov
ljmp
mov
pop
mov
scas
and
andl
mov
rep
ss
mov
test
lret
lods
cmp
adc
pop
out
cmc
mov
jle
inc
adc
sahf
pop
out
insb
sub
imul
call
lods
test
push
inc
neg
or
xor
mov
aaa
ja
mov
icebp
lahf
pop
mov
mov
mov
mov
pop
mov
xlat
sub
jae
xlat
mov
xchg
push
mov
cmp
testl
or
or
testl
mov
js
nop
in
fcomip
fidivrl
sub
lahf
les
cmc
mov
jae
ss
xchg
inc
imul
pushf
cmp
notl
or
pop
cltd
aas
bound
rcrl
push
ret
jecxz
jbe
gs
adc
rcl
push
mov
mov
push
out
decl
in
repnz
jp
shll
stc
mov
xor
mov
dec
cmp
mov
negl
xchg
lcall
push
loop
add
cltd
sub
mov
rdpmc
or
mov
mov
dec
int3
cs
cli
loope
adc
test
push
add
adc
shlb
push
dec
movl
out
jle
push
insb
mov
notl
pop
push
xor
ss
or
shl
cwtl
lcall
aaa
dec
xchg
push
cmp
sti
rorb
rcrb
test
cmp
shr
lret
div
adc
subb
mul
aad
sub
scas
mov
fsubp
mov
test
clc
push
divl
lahf
lcall
add
filds
mov
rorb
scas
and
pop
cld
test
mov
mov
dec
jg
adc
add
leave
dec
xor
int3
sar
out
out
idivl
mov
pop
xchg
cmp
sahf
mov
hlt
notl
iret
xlat
and
jp
testl
push
add
push
insb
loop
and
mov
mul
sbb
pop
out
jmp
testl
inc
sub
ss
cmp
push
lret
out
idiv
orl
mul
adc
cmp
push
sbb
xchg
cmp
jnp
fstpt
pop
imul
push
cmp
fbld
test
aas
cli
in
mov
ja
pop
mov
stos
mov
xor
inc
jp
sahf
xor
lcall
call
mov
fnstsw
fstps
jo
fdivrp
xchg
icebp
bound
cwtl
lret
loop
movsl
in
xchg
test
or
sub
add
mov
inc
fisubs
bnd
add
and
push
orl
lcall
out
adc
sbb
cmp
dec
repz
lods
lea
aad
rcl
div
and
scas
xor
test
fiadds
dec
notl
jne
mov
lcall
ja
push
jecxz
push
push
xor
add
test
mov
dec
divl
sub
adc
mov
imul
mov
push
dec
in
dec
xor
inc
mov
push
jnp
mov
sbb
scas
je
mov
imul
das
sub
pop
jno
fistpl
xchg
or
xchg
outsb
xchg
xchg
scas
xlat
mov
inc
insl
fadd
add
mov
loope
and
add
loop
mov
shll
in
push
dec
lahf
popa
push
ret
mov
xchg
pop
mov
iret
testl
inc
sahf
xlat
push
js
mov
fildll
sbb
imul
bound
test
pop
movsl
sbb
inc
repnz
cmp
xor
jbe
negl
add
popa
loopne
sub
dec
adc
rcrl
test
imul
icebp
insl
pop
cmp
imul
cmpsb
sbb
mov
in
inc
cli
jl
adc
pop
jbe
adc
dec
jp
cmp
out
xchg
neg
ret
out
xor
mov
pusha
pop
and
test
mov
int
jge
cltd
test
cld
xor
jns
push
fidivrl
negw
aaa
inc
push
negl
insb
push
jl
pop
mov
xor
test
adc
xchg
lods
inc
add
push
idivl
dec
idivl
in
lcall
xchg
dec
mov
xor
divl
pop
cmp
pop
pushf
or
xchg
cmp
jge
dec
sbb
mov
divl
stc
test
imul
pop
movsb
cmp
insb
sub
je
scas
notl
test
xlat
sahf
xchg
fstpt
push
and
pushl
or
adc
addr16
or
aaa
lock
pop
ja
data16
movsb
in
sarl
cmp
push
mov
out
jl
sbb
negl
inc
inc
test
fistpll
jge
ja
add
and
cmpl
push
pop
mov
or
jmp
fimuls
cmpsl
adc
aam
inc
scas
sub
jae
jbe
iret
cmc
push
xchg
inc
hlt
push
and
rol
xchg
dec
adc
insb
repnz
lock
mov
and
loop
out
lock
ljmp
imul
add
fs
dec
xchg
and
jo
ja
inc
jecxz
add
mov
add
xlat
test
ljmp
mov
xchg
out
pop
jo
nop
jbe
xchg
fwait
mov
pop
pop
jne
arpl
mov
pop
add
out
in
sub
repnz
pop
pusha
mov
push
cmp
jg
inc
and
xor
les
mov
lret
push
in
xchg
insb
pusha
popa
ret
arpl
ja
std
ja
pushf
rclb
add
dec
xchg
test
xchg
or
hlt
adc
repnz
in
add
daa
cld
adcb
sbb
jo
dec
lods
orb
jg
xchg
negb
push
cmpsb
sahf
in
int3
popf
mov
xchg
mov
lcall
xchg
mov
cmc
or
jge
sub
es
lret
gs
mov
add
ret
leave
mul
push
adc
inc
out
fistps
cmp
iret
clc
fimuls
and
mov
mov
jmp
add
jle
fadds
xor
add
inc
ljmp
call
lret
pop
mov
sbb
cs
push
lret
outsb
fdivl
rcrb
stos
jo
mov
or
sub
aaa
adcl
std
test
adc
xchg
or
repz
cmp
pop
loopne
repnz
xchg
mov
adc
sbbl
fisubrl
xor
xchg
sub
mov
xor
imull
adc
insb
popa
mov
xchg
sub
mov
inc
pop
sbb
mov
outsb
xchg
adc
lods
mov
push
sub
lcall
int
push
je
cmp
in
sbb
pop
mov
mov
repz
or
movl
mov
or
jmp
aaa
push
add
xchg
pop
dec
out
lds
mov
jbe
fimull
lahf
push
or
or
jecxz
rcrb
cld
xchg
jge
mov
jbe
in
enter
pop
jo
jmp
pop
jecxz
aaa
dec
test
jge
jg
inc
fimuls
push
leave
sub
inc
icebp
aam
repz
adc
fstps
pop
mov
sbb
dec
in
sbb
cmp
pushf
cli
adc
xor
lods
in
pop
inc
pushf
lret
aam
mov
pop
lods
rcl
adc
adc
inc
jb
mov
sub
sarl
lret
and
ret
mov
jb
stc
leave
call
jo
pusha
jbe
sbb
xchg
loopne
inc
jb
push
je
into
lock
push
mov
xor
jno
and
mov
mov
int
inc
rcpps
ja
cltd
mov
in
push
sub
jecxz
inc
in
xor
int3
testl
push
shrb
push
xchg
inc
adc
call
lods
scas
inc
ss
shrb
push
mov
xchg
std
in
repz
int
stos
fistl
in
ficompl
imul
fnstsw
jg
in
repz
loopne
shl
mov
into
pop
xor
in
adc
inc
testl
pop
pusha
cmp
mov
adc
jbe
dec
stos
pop
cmc
xor
sub
dec
and
jne
and
lock
testb
test
push
mov
pop
repnz
in
mov
pusha
cmc
mov
jnp
notl
cmp
in
jae
add
xchg
loopne
adc
jge
imul
adc
mov
cld
cmc
and
pop
ret
mov
jbe
test
pop
aaa
mov
mov
out
leave
jmp
jae
jge
popa
mov
ljmp
or
adc
inc
inc
fidivl
cld
out
stc
add
pop
jg
push
movsl
pushl
add
pop
jmp
fiaddl
sub
icebp
or
rcrl
mov
push
ds
sahf
cmc
arpl
mov
inc
jecxz
jne
daa
cltd
int3
and
in
xor
sub
ljmp
pop
push
fisubl
adc
testb
mov
insb
mov
mov
pop
lods
lahf
and
ljmp
pusha
cmc
adc
cmp
adc
pop
sti
xchg
inc
out
data16
ljmp
xchg
lahf
mov
jp
ds
mov
adc
popa
repz
pop
xchg
jmp
or
fcmove
roll
pop
shrb
notl
pop
scas
mov
iret
pushf
in
push
pop
xchg
push
push
jb
call
repz
jb
repnz
movb
icebp
xchg
loopne
push
mov
leave
into
xchg
loop
mov
aas
data16
mov
and
notb
out
lcall
add
popf
rorl
incl
dec
sbb
neg
xor
in
xor
fisttpll
test
jg
sti
lcall
mov
mov
mov
xchg
ds
loopne
jns
jmp
jp
cs
insb
insb
js
out
addb
fwait
mov
pushf
iret
sahf
inc
cld
in
fisubl
jne
notl
fldl2e
imul
xor
adc
mov
sub
dec
dec
or
jns
pop
and
aaa
push
int
bound
imul
push
pop
int3
cpuid
pop
mov
loop
js
adc
sub
fbld
jno
inc
fwait
adc
cli
fbstp
negl
outsb
fcoms
gs
sbb
in
icebp
fistpll
dec
notl
imul
imull
je
mov
idivl
inc
pop
scas
xchg
enter
sub
fnstsw
dec
mov
jg
imul
jbe
mov
notl
cld
out
aas
mov
scas
xchg
adc
nop
aam
div
call
sub
xlat
push
pop
lods
or
fwait
jmp
push
notl
sbb
aad
je
in
insl
xchg
das
cs
xchg
test
ss
fdiv
adc
mov
mov
sbb
or
inc
rcll
sbb
out
pop
mov
mov
add
subb
icebp
in
repz
decl
rcr
inc
adc
push
testl
rsqrtps
adc
nop
cli
pop
mov
aam
cwtl
sub
testl
xor
xlat
not
cmpsl
popf
ds
push
cmp
fwait
cmp
pop
out
ss
pop
mov
aam
out
mov
pop
lock
les
adc
in
test
xor
les
clc
dec
pop
negl
arpl
sbb
inc
cli
pop
sbb
jne
in
jl
dec
idiv
sub
push
divl
or
hlt
inc
inc
mov
imull
push
fcoml
out
mov
pushf
in
dec
cmpsl
ss
ss
xchg
jnp
ffreep
lea
jbe
push
dec
aam
dec
ret
pop
jge
mov
pop
loope
notl
sahf
in
idivl
xchg
testl
inc
mull
sub
in
sub
or
out
out
lret
push
addr16
add
pop
jnp
mov
pop
mov
sbbb
jmp
ja
test
push
pop
xlat
xor
sbb
ret
adc
mov
scas
dec
mov
notl
rcll
inc
or
mov
negl
push
mov
ja
mov
sarb
jp
jp
xor
sbb
lret
sub
jmp
xor
xchg
xchg
outsb
test
lds
testl
addr16
rolb
dec
xchg
pop
xor
sbb
push
push
loope
loop
pop
pop
pop
add
or
pop
idivl
pop
je
mov
sarb
idivl
mov
not
imul
daa
rcl
jecxz
sub
idiv
mov
das
fcoms
mov
add
fstps
cmp
js
inc
repz
or
scas
test
push
jns
dec
and
or
repz
push
test
jne
lret
ss
in
sbb
xchg
inc
aaa
lahf
pop
mull
mov
icebp
stos
nop
cmp
mov
negl
mov
dec
sub
jbe
mov
mov
insl
and
xor
jo
cli
pop
or
loop
in
push
pop
pop
xchg
fildl
test
xchg
div
subl
testl
hlt
movsl
add
loopne
sbb
out
iret
lea
xchg
xchg
pop
lods
push
and
dec
std
fistps
cmpsb
hlt
rcr
aad
loopne
mov
mov
or
mov
andl
fistpl
sub
dec
xchg
lock
xor
sub
jno
add
movl
out
pop
outsb
mov
js
xor
scas
test
cli
filds
fwait
repnz
mov
mov
push
adc
insl
sbb
pop
hlt
out
je
aad
fisttps
sub
push
adc
pop
pop
test
lret
push
xor
test
int3
add
xchg
imul
or
mov
dec
cmpsl
jmp
aam
pop
loopne
fsubrl
push
data16
out
sti
shll
icebp
inc
cwtl
fistpl
xor
jg
sbb
stc
pop
test
adc
add
cmp
loope
les
mov
push
lret
cmp
imul
lret
push
rclb
out
add
jbe
aad
insl
pop
in
xchg
cmp
js
and
in
add
in
stc
in
test
inc
les
out
cld
xor
rcl
dec
push
xor
ffree
clc
xlat
inc
mov
daa
sarb
or
idivl
test
ret
ja
mov
rol
dec
adc
enter
cld
mov
bound
dec
sbb
fs
inc
pop
arpl
je
jbe
and
sub
fcomps
std
push
insb
push
fwait
pop
arpl
sbb
jbe
stos
push
xor
fbld
divl
ss
inc
pop
mov
jmp
pop
push
inc
data16
fistpll
mov
xor
mov
mov
mov
mov
push
pop
adc
out
sbbl
pop
ljmp
imull
jle
in
sbbb
pop
push
pop
dec
fstpl
push
out
mov
test
outsb
mov
test
dec
leave
sbb
inc
mov
push
or
test
clc
sub
mov
mov
push
and
or
divl
insl
cmpsb
sub
cmp
inc
out
shl
xchg
fdivp
xor
icebp
dec
jmp
testl
jg
imull
dec
xlat
and
xor
add
out
ficoms
insl
out
mov
xlat
pop
jne
xchg
mov
pop
sub
cmpsb
push
mov
movsl
dec
loop
shlb
imul
jae
sbb
and
jl
jne
jmp
leave
mul
pop
inc
mov
pop
call
jbe
xchg
mov
xor
iret
and
mov
fxch
sub
cmc
xlat
add
roll
push
not
in
outsb
nop
fs
imull
sub
and
push
imul
enter
and
sbb
data16
ret
negl
xor
mov
idiv
sbb
push
jbe
pop
mov
cmpsb
adc
ret
jns
and
and
popf
lock
mov
lock
loopne
cli
xchg
fdivp
pusha
sbb
ljmp
pop
mov
repnz
fstpt
fiaddl
pop
int
dec
data16
insl
fldt
pop
fistl
clc
jecxz
pop
aam
xor
push
fcoml
call
testl
mov
or
push
data16
push
shrb
test
cmpsb
inc
dec
pop
ja
pop
dec
out
cltd
and
rclb
pop
xlat
jne
xor
mov
jmp
testl
mov
mov
fldcw
lcall
add
inc
aaa
js
mov
or
sbb
xor
scas
push
into
imul
mov
or
mov
dec
je
jl
fistps
outsl
xchg
subb
push
sub
push
mov
sbb
push
push
idivl
js
lea
insb
cmp
inc
push
sbb
mov
pop
call
push
xchg
mov
push
sbb
sti
dec
test
mov
pop
mov
lcall
scas
pop
adc
ja
xor
testl
imull
xlat
es
add
push
sbb
lock
leave
mov
cs
repnz
inc
lcall
sub
jle
mull
wrmsr
mov
pop
jecxz
cltd
ret
stos
out
lcall
fdivp
aas
mov
lret
dec
sbb
imull
xor
mov
jge
xchg
lahf
mov
ss
cmpsb
jecxz
test
je
ret
out
or
aas
cmp
and
cmp
pop
push
in
aad
notl
stc
loope
jle
sub
xchg
neg
and
dec
fcmovnb
outsb
insl
shl
or
and
xchg
clc
pop
mov
divl
icebp
pop
orb
pop
xlat
xor
pop
das
cmp
mov
div
leave
lds
jns
xchg
xor
cwtl
push
xchg
push
idivl
mov
test
fnsave
in
fwait
lods
imull
shlb
cmp
or
xlat
cmp
pop
add
call
popa
out
jecxz
fs
mov
sub
lahf
push
or
mov
jbe
inc
and
and
xor
inc
mov
mov
fildl
pop
inc
loop
cwtl
xor
aas
cltd
int3
mov
leave
popf
jg
mov
or
testl
xlat
dec
cmc
test
and
lods
ror
cli
push
push
mov
ss
push
divl
repnz
add
in
loope
in
testl
lcall
movsb
stos
std
ret
mov
jnp
lock
rclb
pop
addl
test
xchg
xchg
jmp
pop
pop
out
xor
sbb
lock
xor
dec
mov
rorb
adc
dec
inc
repz
xor
and
push
xor
sete
lods
or
negl
mov
lret
mov
movsl
xor
fsubrs
testl
ja
imull
mov
mov
mov
inc
idivl
out
ss
lret
dec
repz
jae
imul
xchg
pop
dec
es
mov
cmp
or
mov
addr16
jae
ja
cld
loope
les
pop
sub
loope
jp
pop
notl
divb
repnz
mov
sub
imul
mov
add
cmpsl
stos
mov
nop
call
out
push
push
incl
negl
std
adc
inc
mull
test
inc
cld
jbe
imul
push
sbb
sub
out
fucomip
vpshlw
lcall
cltd
imul
lret
cmp
inc
data16
stos
divl
sub
ljmp
pop
repz
outsb
icebp
cld
mul
cld
ss
or
testl
mov
mull
mov
arpl
inc
test
movl
test
sbb
inc
lcall
negl
jne
dec
push
cmp
mov
ss
fucomi
iret
sbb
pop
js
in
mov
shll
scas
pop
push
sub
jmp
je
mov
jl
sbbl
dec
adc
bnd
adc
adc
roll
faddl
add
adc
push
sbb
clc
fldl
lock
cmp
xlat
out
jp
insb
fisubrl
fs
subl
lcall
test
cmp
dec
xlat
xchg
or
ret
lds
push
stos
sbb
cmp
divl
cli
cld
repz
jo
push
sbb
push
dec
shl
imul
mull
xchg
sub
cld
movsl
loop
sarl
pop
jp
testl
inc
pusha
or
xchg
adc
imull
sub
test
into
fdivr
int
inc
pop
out
popa
xchg
neg
inc
divl
loop
inc
mov
es
test
xlat
xlat
xchg
lods
cmp
xchg
pop
out
jg
push
cmp
adc
xchg
loop
xchg
nop
add
popa
mov
cmp
xor
test
sbb
mov
aam
testl
je
cli
xchg
cmp
aaa
sti
out
add
mov
loop
jnp
imul
lret
pop
lcall
add
pop
adc
pusha
push
test
stos
pop
neg
mov
outsl
imull
dec
sub
testl
mov
out
cmp
cwtl
test
call
push
sahf
jecxz
jns
std
sbb
aas
stc
push
inc
jl
arpl
pop
push
outsb
shlb
sti
mov
or
test
movsb
sbb
and
test
sarl
es
iret
mov
inc
not
insb
push
sbb
idivl
insl
or
sbb
loop
fmull
clc
xchg
scas
jmp
sub
sti
xchg
outsl
cmp
fildl
sub
push
sub
cmp
in
nop
lret
adc
testl
out
dec
mov
pusha
idivl
not
mov
mov
sub
cmp
push
jle
shl
or
test
and
sub
stc
aas
mov
mov
cwtl
mov
push
dec
fildl
idivl
and
pop
loope
sarl
hlt
cs
aaa
xchg
and
ret
daa
fcomps
scas
vzeroall
nop
xchg
cmp
pop
sub
stc
repz
sbb
sub
outsb
jmp
imul
mov
sub
jae
xlat
adc
in
int3
or
negl
mov
imul
lahf
rcrb
ss
repz
ljmp
fdiv
fildl
inc
dec
or
mov
cmpsb
lcall
inc
and
adc
jl
jg
pop
mov
lret
push
mov
cmp
je
cmp
shl
ljmp
pop
popa
lods
loop
jp
out
xchg
popf
mov
xchg
fistpll
adc
jo
xor
push
cltd
jb
loop
hlt
mull
or
mov
mov
pushf
mov
inc
xchg
out
mov
pop
and
jl
sub
jmp
repz
neg
test
inc
les
push
fcos
cwtl
adc
and
push
outsb
push
mull
mov
out
negl
fcmovnbe
outsl
mull
add
mov
adc
stos
xchg
out
xchg
mov
jecxz
mull
shll
adc
mov
stc
sub
dec
not
sbb
mov
aaa
mov
push
xchg
jb
adc
pusha
push
sbb
dec
js
loope
data16
fninit
cld
sub
clc
loop
or
adc
xor
mov
lea
mov
int3
mul
push
xchg
pop
nop
mov
inc
pop
les
lret
xor
ss
or
inc
sbb
divl
jle
repnz
mov
imull
int
and
add
imul
mull
aas
xor
fcmovnb
jbe
pop
xor
pop
push
cmovo
mov
int
cmp
pop
lods
add
lock
cmpsl
idivl
stc
mov
popa
xchg
ja
mov
clc
mov
xchg
jmp
mov
dec
inc
push
mov
lcall
adc
daa
pop
pop
cwtl
inc
scas
fsubp
sub
js
sbb
and
testl
push
cmc
xor
xchg
shrl
push
shr
mov
negl
add
iret
xchg
icebp
and
jle
pop
mull
or
into
dec
sub
xor
adc
not
jne
test
divl
dec
sbb
fisttpl
xchg
sub
out
mov
push
sbb
jmp
testl
xor
push
outsb
push
push
div
pop
test
int
test
mov
sub
mov
fiaddl
xlat
mov
lods
rcrb
mov
in
dec
mov
loopne
out
fsubrs
fisubrl
mov
loope
sub
hlt
rcr
repz
in
ljmp
adc
call
clc
sbb
shlb
rorb
cmp
pop
mul
out
mov
cmp
or
push
int3
inc
fwait
mov
lds
inc
dec
dec
inc
shrl
jbe
xlat
xchg
faddp
mov
cld
mov
xchg
mov
add
xchg
push
xor
pop
push
mov
out
adc
imul
mov
stos
call
outsb
jg
sbb
idiv
neg
hlt
mov
shll
loopne
ja
cmp
adc
pop
push
pop
push
jmp
mov
jmp
jo
adc
icebp
inc
push
cwtl
out
dec
js
jl
testl
mov
inc
and
shl
mov
arpl
cmp
xchg
or
xchg
cmp
in
dec
rcrl
push
test
stos
pop
cmpsb
loope
xchg
adc
ret
inc
mov
xor
inc
xchg
dec
xor
fsub
add
int3
xchg
vdivps
imul
in
sub
fidivrs
and
negl
mov
mov
ja
pop
lret
pusha
adc
and
dec
and
xchg
gs
daa
jae
mov
movsl
in
in
ss
sbb
push
popf
movsb
push
push
fbstp
mov
xchg
pmuludq
sub
push
pop
jo
inc
out
pop
fstl
jmp
pop
out
jnp
or
jl
imul
and
lret
inc
insb
push
enter
outsl
push
iret
in
mov
push
sub
push
sbb
adc
adc
and
sti
repnz
lds
push
jne
popa
add
aas
in
jl
sub
testl
cld
movsl
idivl
lcall
aaa
arpl
inc
sub
dec
imull
jl
pushf
xchg
hlt
adc
das
lods
in
es
incl
fwait
notl
in
adc
insl
mov
idivl
rcr
movsb
testl
js
xor
sbb
sbb
cmp
imull
sub
divl
add
push
sub
push
hlt
stos
pop
mov
fildll
jb
dec
outsb
adc
inc
neg
mov
cmpl
and
inc
ret
cwtl
mov
sbb
xchg
cmp
cmp
or
fcoml
mov
push
idiv
jae
es
icebp
xor
jecxz
dec
dec
and
inc
jno
and
loope
add
dec
push
fbstp
in
inc
notl
sbb
inc
or
jg
adc
cmp
sub
out
jge
cli
sbb
pop
stos
std
sub
popf
into
stc
adc
testl
in
je
push
mov
testl
dec
shll
aam
mov
testl
xchg
inc
sbb
xor
out
das
cld
inc
fcoms
push
mov
cltd
movnti
sub
loopne
stc
lret
aam
iret
xchg
pop
in
jbe
pop
xchg
loope
call
mov
cltd
dec
repz
movsl
push
add
mov
xchg
negl
lods
adc
sbb
inc
fwait
neg
clc
outsb
push
pop
rclb
imull
cld
and
pop
loop
idiv
pop
into
lahf
int3
add
mov
adcl
notl
or
shl
popf
xchg
add
repnz
push
cmpsl
mov
lds
negl
jb
add
mov
ret
sbb
aad
mov
shlb
stos
dec
xlat
jl
cmp
and
imull
inc
je
xchg
sub
fcompl
rcrl
push
dec
iret
fs
in
pusha
mov
loopne
fadd
negl
push
test
idivl
add
or
out
sar
repnz
out
and
mov
cli
lcall
cwtl
ljmp
rcll
sarb
cmpsb
inc
pop
xchg
mov
hlt
and
inc
push
cmp
xchg
pop
jnp
or
ficoml
loop
adc
cld
pop
mov
aam
pop
daa
adc
jg
jmp
xchg
and
idivl
dec
into
sub
clc
fs
mov
ret
test
in
push
popf
iret
push
fists
xor
xor
test
cmpb
rcll
fstps
xchg
andl
pop
cmc
loope
mov
ret
test
or
testl
add
jg
negl
and
sbb
adc
jnp
notl
push
aam
fwait
add
cld
inc
subl
or
xor
and
jg
xlat
fdiv
pop
jecxz
mov
scas
jp
idiv
sub
fidivrl
fldl
sti
xchg
clc
jmp
xchg
jmp
movsb
jecxz
adc
enter
fs
and
mov
movsl
imul
xchg
aam
xchg
sub
in
mul
jno
add
add
negl
mov
popf
jae
lcall
push
cld
add
lds
xchg
cli
or
sbb
rcl
push
arpl
push
out
or
ja
repnz
or
faddl
pusha
push
jmp
xor
adc
jle
fisubl
or
jae
jmp
jl
mov
repz
mov
pop
jnp
pop
mov
aad
pop
dec
or
xorb
cmpsl
push
popa
or
js
pop
mov
cmp
aaa
and
insl
sti
out
xchg
inc
adc
mov
jb
fcompl
cli
push
imul
pop
iret
sbb
icebp
js
cltd
mov
pop
icebp
sub
xor
xchg
add
fucom
lods
xchg
addr16
push
and
push
jmp
stc
aam
ja
fs
adc
rcll
push
daa
mov
int
dec
cwtl
pop
inc
test
cmp
mov
push
xchg
test
add
or
jl
fnstsw
fs
pop
adc
in
sbb
push
push
jg
in
lods
insb
jg
dec
fistpl
sbb
inc
and
add
ja
sbb
outsl
out
ljmp
mov
inc
add
dec
add
pop
repnz
int
popa
loopne
out
ljmp
imul
xor
sti
adc
lahf
lea
jge
adc
xor
mov
jmp
clc
cmp
lea
mov
jecxz
imulb
sarl
jbe
roll
push
jns
jne
fwait
roll
mov
fsub
push
jge
sbb
aam
out
stos
lds
in
cmp
adc
fimull
xchg
or
cmpsb
cmc
aad
jbe
push
ss
movsl
in
pop
insl
inc
mov
pop
inc
js
jns
inc
ret
sub
clc
xor
inc
hlt
cmp
dec
gs
mov
fidivrs
mov
out
sub
mov
mov
xor
add
pusha
dec
lods
lea
gs
jbe
mov
mov
outsl
jne
push
push
out
ljmp
mov
xchg
inc
jb
imul
in
pop
mov
pop
and
pop
inc
cmp
ljmp
iret
push
lds
ja
daa
out
cmp
sub
adc
ret
rcr
call
xadd
add
push
pop
and
adc
jbe
ret
sub
hlt
mov
dec
hlt
mov
pop
lret
jecxz
cmp
push
xchg
inc
cmp
mov
outsl
data16
pop
outsl
sbb
lahf
and
aad
mov
or
jmp
shr
int3
lds
ficoml
adc
imul
cmpl
int
jp
cwtl
pop
fiaddl
mov
in
jne
add
fisubrs
ljmp
jne
in
int3
mov
sub
in
movsl
mov
call
int3
xchg
rcrl
jecxz
lret
pop
popf
cs
shl
mov
inc
mov
out
mov
lds
mov
mov
fdivrl
sub
insb
pop
and
add
push
mov
fsubs
cmp
pop
and
push
push
out
leave
sub
es
movsl
xor
mov
sahf
cmp
out
js
sahf
jae
jge
add
lret
mov
inc
mov
and
mov
jns
out
test
aas
push
repnz
cmpsb
mov
ds
cmp
jmp
dec
aad
ss
or
pop
cmp
add
loopne
cmp
loop
icebp
insl
adcl
jge
cmp
ja
subb
popf
into
loope
imul
pop
mov
lds
xor
push
adc
or
lock
popa
push
sbb
imull
mov
js
cwtl
sbbb
xchg
mov
lock
dec
jmp
mov
dec
in
inc
mov
mov
mov
in
mov
mov
xchg
or
sub
lcall
pop
jbe
les
out
addl
sbb
in
jne
mov
insb
push
dec
push
mov
adc
stc
test
mov
jb
lods
jg
inc
adc
and
int
pop
lahf
lock
cli
or
mov
mov
sbb
sbb
in
rcrl
push
loop
ret
xor
movb
mov
mov
inc
mov
clc
fcmovnbe
fisubl
sbb
jbe
add
in
in
in
lret
sub
icebp
imul
inc
dec
mov
or
mov
ljmp
xchg
pop
call
pushf
and
jmp
scas
repz
das
xchg
mov
lahf
jp
adc
inc
xchg
in
adc
xchg
aaa
ljmp
jbe
jae
fbld
ja
mov
cmc
sbb
lahf
xchg
adc
dec
jmp
push
in
bound
ljmp
aaa
addr16
mov
xchg
xchg
in
movl
inc
scas
sahf
xchg
out
sbbb
iret
jbe
mov
or
fwait
je
mov
pop
jb
movsb
in
in
inc
in
pop
ja
push
push
imul
lock
movsb
jbe
ficoml
cmp
adc
call
inc
lret
cmp
jmp
mov
movsb
jg
mov
in
frstor
inc
and
bound
fiaddl
cltd
imul
inc
aam
dec
fs
jl
cs
sub
mov
xchg
dec
adc
mov
mov
dec
test
and
mov
push
hlt
adc
mov
hlt
lock
fisubrl
push
mov
aaa
sti
dec
inc
xchg
fsts
sub
add
enter
dec
and
bound
repz
cmp
jg
push
xor
loop
mov
cmc
insb
mov
pushf
into
or
shl
icebp
bound
jae
iret
mov
int
adc
fimull
mov
mov
add
inc
mov
hlt
xchg
xchg
mov
lock
loopne
push
lret
cmpl
stos
inc
pop
das
mov
out
mov
and
call
mov
push
fcmovb
les
icebp
idivl
jecxz
imul
mov
aaa
push
rclw
es
xchg
inc
mov
daa
push
fidivs
mov
jne
pusha
mov
or
dec
xchg
inc
jno
add
pop
mov
test
sarb
mov
inc
clc
icebp
fisubl
push
xchg
mov
and
ljmp
pop
mov
pusha
inc
sub
sbb
jecxz
fidivl
dec
stos
roll
and
mov
mov
add
outsb
addb
lds
xor
andb
or
mov
cmp
mov
mov
xor
mov
sbb
fcomip
lcall
lock
stc
jle
xchg
ficompl
in
repnz
sahf
xlat
sbb
mov
ljmp
hlt
cld
imul
mov
xor
jmp
ljmp
xor
add
lods
cmp
add
pop
xchg
xchg
fidivs
xchg
and
xchg
fimull
in
rorl
out
push
stc
mov
ja
jno
push
pop
ret
rcrb
fadds
ja
dec
dec
movsl
sub
inc
icebp
jae
popf
jge
testl
xchg
cmpsb
mov
aaa
movsl
adc
mov
insb
mov
sub
clc
iret
mov
out
outsb
sahf
jno
push
imul
lods
out
xorl
mov
out
and
mov
rep
push
gs
fcmovu
push
scas
add
loop
ljmp
jl
fidivs
gs
mov
sahf
ret
xchg
xlat
outsb
cmp
or
xor
loop
mov
pop
jb
popf
filds
adc
enter
jle
lret
sbb
pushf
jmp
ljmp
fsubr
in
xchg
pop
inc
and
pop
in
std
ljmp
mov
pop
imul
xor
push
mov
icebp
xor
pop
cmp
xchg
subl
jae
or
xlat
sti
dec
xor
jno
cld
inc
clc
add
or
iret
or
xor
aas
pop
push
jp
clc
fldenv
mov
sbb
ljmp
xchg
ror
jne
dec
imul
xchg
jp
insl
mov
incb
jecxz
xor
pushf
out
dec
gs
ficoml
scas
ds
fisubrl
and
add
test
mov
push
out
xchg
lea
mov
dec
fstpl
lcall
insl
mov
imul
mov
lahf
imul
leave
mov
cmp
imull
pop
pop
sub
sarl
pusha
in
ljmp
and
call
dec
xor
dec
lods
lcall
pop
out
test
shl
int3
divl
mov
push
fdiv
pop
mov
adc
fistl
in
xor
das
push
in
fcompl
jg
jno
sub
jl
xlat
or
pop
arpl
fists
rorl
bound
push
imul
jbe
scas
sti
fmul
ja
pushf
jnp
lret
fistps
loopne
popf
add
pushf
xchg
paddd
rcrl
xor
push
xchg
push
js
xor
movsb
and
sti
out
insl
test
pop
mov
notl
xlat
mov
push
ret
jmp
mov
dec
xchg
or
jg
leave
jbe
sub
outsb
popa
xchg
shll
push
in
neg
pop
scas
aas
ret
lea
jb
xor
repz
dec
mov
xor
sub
cmp
xchg
xchg
repz
or
shlb
inc
pop
int
mov
push
xchg
negl
sbb
andl
add
sahf
popl
shlb
fabs
jecxz
rcl
sub
lret
cmp
std
push
int3
and
fs
in
mov
pop
test
mov
jmp
rorb
fcmove
loope
out
jg
sbb
ja
mov
ds
xchg
es
inc
cmc
or
loopne
and
sbb
mov
fidivl
cmpsl
sbb
lcall
inc
cmpsl
dec
pop
add
mov
jb
sbb
pop
stos
data16
pushf
mov
aaa
jae
shrb
push
push
ficoms
xchg
xchg
mov
pop
emms
outsb
dec
dec
testb
xor
test
mov
pop
test
cltd
xor
popa
rep
icebp
cwtl
bound
out
cmc
imul
inc
fstps
jo
movb
sbb
jo
loopne
ds
mov
aas
test
into
inc
sub
loop
dec
mov
push
fisubl
test
out
push
sub
dec
jne
mov
cmp
notb
in
test
aaa
nop
out
xchg
jne
mov
shl
stos
je
or
pop
in
push
lcall
imul
jle
fs
push
gs
pop
lods
mov
incb
push
cmc
imul
adc
ja
jp
rorb
in
xchg
fisubrl
icebp
mov
negl
fldl
dec
mov
in
int
mov
into
shl
and
adc
pop
movb
sub
pusha
ljmp
fwait
adc
mov
adc
ds
sbb
cmp
out
cmp
sar
push
add
jg
mov
xor
cmp
pop
adc
cwtl
push
push
cwtl
mov
adc
sahf
and
ss
scas
jne
xor
cmp
rolb
mov
js
jbe
jp
xchg
je
negb
lret
lods
out
sbb
jmp
repnz
cmc
arpl
in
sub
adc
into
mov
mov
movsl
and
inc
insl
call
pop
sub
ja
push
push
dec
inc
add
sti
or
imul
movsl
jp
inc
or
xlat
or
fwait
es
sub
mov
fcmovbe
cmpsb
in
pop
jae
pusha
ret
jne
pusha
add
cltd
mov
jp
js
pop
mov
mov
or
xchg
clc
mov
dec
cmc
sub
or
push
xor
cs
mov
jnp
jbe
fcmove
loopne
lcall
cmp
sub
cmpsb
ret
stc
into
or
jmp
mov
lods
in
xor
fidivl
mov
xor
testb
inc
icebp
xor
inc
push
addl
mov
mov
adc
cmp
out
pop
fildl
pop
fimull
je
ljmp
add
adc
adc
mov
sbb
pop
pop
jecxz
mov
jg
jmp
mov
scas
jbe
xor
test
push
pop
je
push
dec
outsb
jg
jmp
out
add
add
lods
push
sbb
xchg
push
mov
mov
insb
loop
testl
dec
out
scas
daa
in
test
inc
in
pop
cwtl
add
hlt
gs
les
insb
das
in
pop
enter
fs
pusha
mov
jecxz
xor
jmp
jne
mov
mov
dec
fs
test
cmp
adc
mov
mov
dec
ja
adc
xlat
daa
and
scas
jae
repz
fimuls
dec
mov
jle,pn
push
mov
inc
mov
js
repz
loopne
movsb
pop
push
jno
lods
insb
pusha
xor
inc
addr16
pop
lds
mov
adc
data16
xor
push
rcr
dec
aaa
cmpl
mov
mov
repz
popf
pop
repnz
and
pop
orl
cwtl
xchg
daa
int3
ja
mov
jle
adc
mov
adc
lea
mov
jbe
in
mov
idivb
cmc
or
mov
add
icebp
icebp
jmp
and
sub
idivl
adc
and
push
cli
subb
fidivrs
out
mov
sarl
dec
jo
mov
mul
outsl
ljmp
les
idivl
lcall
incb
inc
mov
xlat
push
call
mov
mov
sub
push
adc
pop
xchg
push
push
jb
adc
fistpll
cmp
insl
ss
int3
out
aas
inc
sub
notl
sbb
dec
sub
lret
popa
sub
data16
div
lods
mov
mov
ljmp
sub
mull
in
add
in
xchg
push
cmpsb
leave
sahf
push
push
ljmp
or
add
pop
jo
add
cli
mov
jmp
push
lods
cmpsb
out
xchg
xor
xlat
push
mov
pop
jno
idivl
push
inc
movsl
pop
sub
ss
cmpb
jecxz
in
push
and
mov
mov
shrl
outsl
and
test
inc
mov
lock
xchg
jns
sbb
jmp
push
sub
pop
test
sbb
enter
push
cmp
xor
cmpsb
aad
loopne
outsl
push
xor
lret
testl
adc
xor
fisttpl
pop
inc
pushf
out
and
popl
notl
popl
dec
push
mov
testl
std
clc
pop
xor
les
dec
lods
jge
pavgb
sbb
ret
stos
out
test
sbb
lahf
adc
testl
frstor
daa
inc
add
shl
cs
sahf
imul
outsl
mul
jmp
and
idivl
xchg
lcall
inc
mov
idivl
imul
and
ljmp
into
neg
inc
fnstcw
or
pop
adc
sub
negl
mov
loop
loopne
idivl
lcall
add
pop
daa
pop
idivl
cmpsl
cwtl
shl
ss
inc
mull
lea
insl
add
sub
jo
mov
dec
pushl
negl
xlat
xorl
inc
mov
push
xchg
sbb
add
notl
popf
xchg
sbb
push
out
cmp
dec
lcall
loop
pop
pop
push
sub
imul
dec
ss
jns
fbstp
out
ret
iret
xlat
xlat
push
jb
addr16
fdivl
insb
ljmp
out
ret
negl
cmpsb
lods
not
fsubrs
test
cmpsl
push
lahf
rolb
and
insb
cli
movsl
mov
mov
jno
out
cmc
sbb
mov
jne
mov
pop
ss
imull
jg
clc
notl
mov
loopne
mov
pop
jp
std
or
nop
aad
adc
xchg
addb
rcrb
loope
shll
mov
cmpb
fistl
cmp
iret
cmpsl
mov
mov
push
add
jns
adc
inc
call
mov
jecxz
cmp
rolb
negl
ja
lret
jno
xchg
add
jge
test
out
stc
sub
testl
loopne
fucomip
das
pusha
xor
in
cmpsb
subl
push
sbb
adc
cmpsl
jne
das
mov
scas
lret
divl
jg
or
pop
cmp
imull
mov
jmp
in
mov
dec
sub
dec
xchg
cld
bound
testl
cli
xchg
das
and
daa
dec
adc
test
ror
add
fwait
pop
idivl
pop
cmp
testl
jb
jae
std
idiv
stos
push
xlat
pop
lds
pop
test
mov
mov
push
xchg
data16
ret
lcall
mov
push
lahf
push
dec
aad
rclb
cmp
negl
or
sbb
orb
ficoms
shll
mov
pop
out
divl
or
or
mov
xchg
adc
xchg
popf
mov
push
leave
cltd
jle
xor
mov
jmp
and
push
int
xor
out
insb
dec
xor
jmp
gs
cmp
repnz
jp
mull
loope
je
add
dec
inc
push
data16
jo
sbb
add
fnstcw
test
push
das
test
stos
mov
add
push
call
inc
out
mov
mov
mov
insb
mov
add
push
iret
ljmp
lods
xor
push
pop
scas
mov
cld
das
mov
xor
mov
test
icebp
dec
out
jg
fadd
and
lods
insb
mov
imull
inc
xchg
mov
add
cltd
dec
xchg
out
xor
xchg
mov
sub
mov
dec
repz
pop
xchg
imul
add
mov
clc
xchg
sar
push
cld
in
jne
pushf
pop
addr16
cmpl
cltd
imull
push
std
pop
nop
scas
rcrl
mov
cmp
loope
xchg
pusha
jge
fstps
fisttps
xlat
data16
jo
ret
idivl
out
adc
imull
push
inc
pop
sbb
dec
sbb
mov
inc
movl
ret
test
add
testl
jle
loope
push
sbb
loop
popf
sbb
das
xchg
jbe
in
and
sbb
test
negl
psubd
testl
dec
movsl
ret
testl
aam
idivl
add
testl
jge
idiv
mov
or
popa
ljmp
push
les
pusha
inc
notl
popw
cltd
imul
jb
pushf
push
or
daa
inc
lods
out
mov
pop
xchg
in
repnz
movsl
adc
rorb
pusha
pop
testl
stc
add
mov
jmp
popf
loopne
test
push
add
movsb
ja
dec
pop
push
cmp
jne
and
sub
mov
dec
and
arpl
pop
insb
fistpll
fsubp
scas
negl
sbb
mov
jbe
mov
lea
jnp
or
pop
mov
dec
cmp
jmp
notl
repz
imull
xor
outsl
push
bound
inc
ffreep
sbb
cmp
adc
lret
inc
push
les
mov
and
mov
cmp
mov
dec
in
jbe
fcmovne
imul
mull
fdivl
or
xlat
adc
inc
test
cmc
jp
sbb
jmp
out
pushf
xor
ftst
jge
sub
mull
dec
xchg
jg
ret
fidivl
adcl
popa
lds
rcr
lret
call
movsl
imul
or
add
xchg
jecxz
scas
testl
jbe
and
jno
add
mov
jecxz
loope
mov
int3
or
fsubl
in
test
sbb
sub
xor
pop
pop
push
cmc
mov
ds
jg
inc
sub
xchg
xor
movsb
jae
add
and
xchg
js
xchg
fadds
mov
push
cmp
sti
je
sbb
mull
dec
mov
divl
lods
pop
inc
xor
lret
insb
hlt
shl
popf
nop
js
enter
or
out
and
lods
negl
shl
clc
mov
xchg
iret
push
cmp
mov
movsl
pop
enter
sahf
testl
jecxz
pop
push
pop
jae
xor
negl
sub
dec
mov
mov
xor
test
rclb
popl
sbb
pop
sub
das
lock
into
add
ret
stos
mov
movsb
leave
mov
dec
xor
lahf
sti
xor
call
cwtl
scas
loopne
or
ds
inc
imul
sub
pop
notl
mov
out
pop
fst
lods
aad
arpl
lret
sbb
mov
ds
dec
cmp
jmp
jno
fdivrs
out
outsb
mull
aad
nop
push
outsl
mov
add
add
shl
repz
divl
add
testl
ret
xor
imul
gs
shr
idivl
fdiv
or
negl
pinsrw
je
mov
sbb
sahf
dec
fs
mov
aaa
pop
jne,pn
testl
mov
test
sbb
divl
pop
dec
sbb
xchg
cwtl
iret
das
mulps
sbb
idiv
and
cltd
xlat
rclb
popa
clc
lea
fimull
inc
les
in
inc
divl
test
sub
add
inc
mov
loopne
xchg
inc
add
pop
lret
fmulp
inc
cld
idivl
mov
cmp
shl
insl
lret
inc
mov
into
jnp
in
inc
testl
subl
movsl
in
ss
loope
fistpl
jp
dec
testl
mov
ljmp
push
clc
mull
lea
inc
divl
lret
mov
add
rcll
pop
pop
pop
mov
sbb
sbb
xor
and
pop
sbb
jge
mov
insb
or
lods
jb
mov
jae
xchg
adc
mov
jp
lret
repnz
imull
adc
lcall
and
jnp
jmp
mov
pusha
negl
rcrl
mov
enter
mov
sub
insb
fidivl
dec
cmpsl
adc
fisttps
fidivrs
rolb
add
testl
pop
push
pop
test
adc
inc
dec
pop
pop
cmpsb
or
ficoml
stos
sarl
xor
mov
jg
mov
insb
adc
ffreep
and
into
shl
pop
aas
arpl
sub
pop
sbb
out
or
and
out
sub
mul
mov
iret
pop
pop
shrb
mov
es
mov
out
dec
xor
outsb
sbb
not
lret
movsl
test
aas
negl
inc
outsl
enter
mov
imul
xor
sub
xchg
lret
mov
sbb
dec
inc
push
popa
pop
xlat
push
js
icebp
xor
pop
jmp
and
imul
test
cmp
and
in
pop
rclb
push
fs
xchg
xor
dec
mov
sbb
cmc
cltd
cli
insb
test
shl
xchg
ds
sub
xlat
pop
out
mov
cld
push
cmp
lcall
jbe
lret
adc
or
fwait
pusha
hlt
jb
test
add
test
sub
int
or
xor
push
test
mov
adc
sbb
inc
das
mov
out
fistpll
out
stos
pop
sbb
xchg
test
mov
stc
out
pop
xor
notb
or
fst
dec
ljmp
sub
push
sub
mov
push
mov
xchg
jb
outsl
negb
cmpsl
fstpl
jno
cld
xchg
mov
and
out
insl
push
push
push
rclb
rcrb
mov
mov
mov
xchg
jg
hlt
adc
mov
or
insl
ret
std
popa
sub
out
ja
inc
fcmovbe
pop
push
fs
jnp
in
mov
in
jbe
jle
out
fs
ljmp
scas
aaa
lcall
stc
mov
jb
cmp
add
out
pop
lret
or
sbb
mov
divl
jmp
sbb
pusha
movsl
xor
xlat
out
or
sbb
sbb
pop
xchg
xlat
and
jecxz
push
sub
cmc
mov
mov
hlt
es
stos
test
loope
mov
js
inc
movsl
insl
out
jle
test
dec
mov
add
mov
push
loop
jnp
and
cmp
xchg
scas
out
popf
addr16
fdivs
test
jns
jmp
or
popa
xlat
pusha
dec
push
scas
cmp
neg
add
inc
mull
add
xchg
and
outsl
out
bnd
sbb
mov
or
adc
testl
pop
negl
and
and
negl
lea
adc
push
gs
cmc
xchg
scas
sub
fs
ja
cld
pop
push
cmpb
xchg
imull
push
or
testl
cmpsl
mov
enter
sub
negl
fdivl
mov
jmp
inc
pushf
adc
jmp
mov
testl
lret
jge
sti
adc
iret
arpl
xchg
mov
mull
dec
push
cwtl
mov
iret
cmpsl
scas
pop
mov
loop
fucomip
inc
mov
mov
cmpsb
jne
xchg
out
sbb
dec
repz
not
mov
int
imull
or
cld
notl
mov
icebp
mov
movsb
out
mov
fcomip
cmp
mov
pop
idiv
sbb
mov
hlt
push
mull
mov
call
add
test
adc
daa
sbb
fsubrl
outsl
pop
fcompl
mov
aad
pushf
stos
das
push
jge
pop
pusha
dec
loope
icebp
pop
xchg
cltd
dec
push
jg
or
dec
rorl
mov
out
stc
mov
jp
out
pop
cmp
and
pop
mov
loope
xchg
ljmp
sbb
pop
sti
insb
div
mov
cmp
mov
pop
insl
inc
lea
imul
in
and
add
sti
pop
repz
sbb
cmp
push
add
add
push
mul
sahf
xchg
push
dec
aaa
push
sbb
ds
dec
mov
insb
inc
or
mov
mov
add
mov
jl
xchg
scas
mov
mov
inc
jno
imul
push
ret
xor
rcl
ljmp
xchg
jnp
not
rorl
xchg
adc
shrb
xlat
cmp
push
aas
mov
js
icebp
cs
aaa
mov
or
inc
push
ret
jp
testl
stos
not
mulb
aaa
adc
sbb
fidivl
and
xor
loope
mull
push
lret
sbb
push
roll
pusha
clc
jg
rorb
fwait
pop
adc
lods
xchg
mov
sub
into
fistpll
fcomps
nop
negb
mov
mulw
movsb
inc
pop
cmp
mov
negl
inc
scas
imul
lea
inc
pop
pop
jbe
mov
inc
sbb
jge
or
fists
xor
add
je
out
out
inc
add
insb
rclb
xchg
sbb
jp
inc
sbb
mov
cmpl
jbe
fsubrs
and
xchg
mov
pop
dec
in
notl
dec
fs
out
mov
pop
mull
fwait
jns
neg
ret
pop
xlat
xor
xchg
lcall
jecxz
push
dec
cwtl
divl
inc
insl
testb
shrb
xor
stos
outsb
cmpsl
xchg
xchg
aaa
xchg
xchg
xor
xor
pushf
adc
notl
ljmp
lret
sbb
imul
adc
addr16
mov
fbld
std
jge
testl
cmp
sub
cli
adcb
jae
or
in
pop
out
xor
push
cvttps2pi
fcomp
mov
repz
testl
insb
sub
jle
in
popf
push
in
mov
xchg
clc
das
dec
push
leave
rol
imul
pop
xchg
fcom
adc
pop
or
push
testl
jnp
mov
add
into
jae
sub
loopne
xchg
not
loop
push
add
adc
mov
mov
mov
mov
neg
or
dec
mov
xor
xchg
jo
pop
loopne
outsb
leave
repz
loop
in
xlat
xchg
cmpsl
stos
mov
pop
neg
jns
mov
cmpsb
mov
sub
lock
in
testl
mov
testl
cmp
push
fwait
jmp
mov
stos
pop
mov
bnd
inc
into
loop
cli
jnp
out
out
lock
ja
movsl
js
lahf
mov
xchg
jno
orps
fisttpl
pop
inc
in
mov
inc
scas
stos
in
mov
loope
fsubrs
jo
negl
and
test
std
pop
xchg
testl
ffreep
sbb
pop
mov
btw
inc
loope
push
lret
fiaddl
xchg
ljmp
jb
idivl
ficompl
div
sub
mov
imul
pop
sub
mov
lock
inc
mov
imul
push
sbb
out
mov
xchg
push
fldlg2
mov
out
jge
cld
xchg
sbb
idiv
insl
push
lds
mov
out
nop
stc
imull
adc
push
dec
in
popa
aaa
test
jle
cmp
loop
mul
sub
dec
mov
fldcw
push
mov
lea
or
fistpll
mov
stc
cmp
daa
jmp
push
test
and
in
xor
cmp
aam
scas
data16
sbb
ss
jmp
add
inc
jmp
loope
addr16
scas
jecxz
adc
inc
xchg
or
in
pop
xchg
xor
sbb
mull
ljmp
mov
loope
or
aam
xlat
popa
in
pop
outsl
push
ficoms
addl
loope
cmp
div
imul
out
testl
loop
dec
pop
add
aas
xlat
movsb
xchg
negl
mov
idivb
pop
jae
in
jae
xor
jo
cltd
jle
arpl
dec
fwait
mull
outsl
sub
push
jg
cmp
out
adc
jo
ljmp
testl
xor
and
adc
push
pop
out
cmc
pmulhw
jo
imul
cmp
negl
fldl2e
xlat
mov
mov
pop
clc
jle
or
popf
dec
fbld
imull
fmuls
jmp
repnz
repz
daa
jge
test
sarb
xlat
ret
mov
mov
out
xchg
testl
sbb
push
sbb
popf
and
aad
jg
push
jg
fildl
adc
mov
inc
fisubl
testl
pop
imul
sub
mov
push
testl
sbb
daa
mul
xchg
adc
xchg
divb
mov
or
push
mov
aaa
sbb
sbb
add
push
cmpsl
in
sbb
push
imull
pop
idivl
cmp
into
fwait
add
mull
jo
and
neg
push
pop
insb
enter
scas
sbb
popa
jmp
movsb
roll
pop
movsl
push
ss
in
mov
cmc
xchg
and
sbb
adc
add
cmpsb
pop
notl
mov
pop
adc
add
cs
mov
mov
andl
cmp
push
mov
adc
pop
icebp
mov
scas
mov
xlat
fsubl
nop
repz
push
xor
pop
sbb
les
out
or
call
orb
xchg
pop
dec
cs
data16
fwait
out
divl
mov
xchg
idiv
dec
lcall
sub
out
pop
sub
das
or
mull
push
pop
scas
inc
insl
imul
add
inc
in
fsubrs
jbe
mov
fbld
testl
pop
orl
and
ss
mov
sub
mov
pop
xchg
mov
adc
imull
dec
or
je
mull
fidivl
divl
or
pop
fcmovnbe
js
mov
mov
mov
jo
jmp
jle
test
js
mov
out
shll
loopne
mov
xchg
jmp
shlb
cmp
ret
test
xlat
dec
iret
jp
sbb
sbb
aas
notl
rep
push
mull
pop
cmp
pusha
shll
push
xlat
sbb
cmp
ss
cmp
jbe
mov
mov
push
pop
xchg
lret
out
pop
dec
in
jl
jne
pop
mov
mov
jb
maskmovq
out
xchg
or
sbb
insl
andb
fsubr
mull
inc
lcall
out
adc
push
push
xchg
adc
add
shl
shrb
pushf
test
jbe
testl
inc
dec
ds
into
not
std
mov
or
xchg
add
jmp
xchg
sbb
movsb
lret
push
or
in
movsb
mov
arpl
push
mov
add
in
decb
outsb
out
dec
movsl
pop
outsl
mov
ficompl
les
sti
jmp
mov
add
out
hlt
test
fcom
cmc
xchg
dec
mov
pop
sub
ljmp
mov
scas
add
movsb
cld
xchg
jbe
mov
jne
xchg
cmpb
xchg
lds
out
ret
dec
sub
fisubl
fldl
or
adc
mov
popl
hlt
repz
push
testl
aam
mov
fstpl
inc
and
mov
sub
pop
xor
nop
mov
or
repz
aaa
sub
inc
mov
inc
jbe
fisubl
lret
out
ret
iret
daa
je
jae
sbb
xchg
ljmp
mov
test
add
daa
orl
mov
mov
ret
out
loopne
inc
sahf
sub
fidivs
pop
pop
push
lds
xchg
cmp
ret
add
imul
dec
loope
push
repnz
addr16
mov
mov
ljmp
xchg
push
in
dec
js
ja
xor
xor
mov
test
rclb
sbb
movsl
mov
hlt
nop
sbb
push
rorb
fisubl
inc
pop
xchg
lahf
out
jne
cltd
push
mov
mov
js
in
push
lods
xor
lock
ficoml
dec
pop
repz
mov
rcrb
ja
fiadds
push
ret
mov
mov
nop
push
inc
outsl
pop
stc
ljmp
sub
push
jecxz
sub
stos
insl
pop
push
mov
jp
jecxz
mov
stos
pop
sbb
gs
and
jnp
adc
outsl
clc
sub
pushl
pop
mov
mov
sub
scas
jp
fistpll
mov
pop
cmc
add
mov
pop
inc
pusha
inc
scas
cmp
jg
aam
or
sbb
das
out
inc
ficoml
and
jns
cli
push
les
mov
jb
push
pop
sbb
shl
jl
movsl
jp
loopne
insl
xchg
mov
out
pop
js
ja
lret
dec
lods
shlb
jb
add
jae,pt
fcmovbe
loop
sbb
arpl
and
stc
nop
pop
jmp
and
xlat
je
fcomi
mov
sub
dec
jge
pop
mov
imul
sub
mov
ret
pop
imul
push
je
adc
sub
fnstenv
insb
lret
out
ljmp
push
pushf
repnz
outsb
or
add
loop
xchg
mov
shr
xlat
pop
mov
nop
inc
cli
mov
sbb
cmpsb
mov
ljmp
aam
mov
subb
iret
sub
jns,pn
icebp
mov
ret
jbe
jne
in
fnstcw
jmp
mov
xchg
je
inc
cmp
scas
iret
test
push
jb
jnp
mov
xchg
fwait
push
cmp
or
sbb
jnp
mov
cwtl
mov
loopne
clc
push
aas
movsb
insb
adc
fcomps
sub
jne
mov
sbb
shr
repz
icebp
mov
cmpsb
lock
inc
mov
dec
outsl
mov
push
bound
mov
aam
jne
mov
cmp
fcmovne
or
lock
lcall
push
mul
mov
ljmp
in
push
int3
addl
int
xor
in
xchg
insb
jb
aaa
std
ret
pusha
mov
out
lahf
push
jecxz
mov
scas
pop
stos
or
insl
int3
push
cmc
pop
lds
sub
push
in
sarl
xor
xchg
mov
div
test
lods
jmp
xor
pop
push
movsb
jg
and
pop
pop
sbb
adc
js
pop
mov
cmpb
pop
ret
inc
adc
stc
testl
rcll
aas
stos
dec
sbb
cmp
imull
fcmovne
xchg
in
or
pop
idiv
lods
jae
push
pop
push
jp
add
negl
xorb
sub
out
ror
inc
xor
or
imul
cli
fwait
xor
out
mov
mov
in
test
scas
scas
int
dec
out
fwait
jmp
jne
call
pop
test
int3
push
jp
push
jnp
inc
mov
fcoms
jge
clc
out
push
rcrl
cwtl
lcall
xchg
fsub
add
in
adc
mov
mov
aaa
adc
xlat
gs
dec
dec
and
xchg
xor
xchg
cmp
cltd
in
dec
rclb
mov
sbb
inc
or
je
pop
fsubr
testl
add
insl
push
push
mov
adc
pop
jmp
xor
add
cmc
mulb
nop
mov
ret
idivl
ds
shl
push
fidivrl
dec
fnstenv
lcall
cmp
imull
pop
mov
pop
jl
xlat
int3
adcb
shlb
pop
push
ret
mov
mov
shlb
aad
mov
pop
negl
test
xchg
cwtl
mov
arpl
mov
push
in
or
mov
dec
push
jb
fsubl
mov
cli
aaa
dec
jl
fs
sub
je
pop
lods
cmp
mov
jg
ss
shll
add
loop
push
mov
fisubrs
test
and
mov
fisubrs
inc
in
mov
insb
jmp
xchg
xor
cmp
loop
in
mov
jecxz
notl
sbb
add
pop
adc
push
jle
notl
imul
loopne
fadds
scas
divl
mov
adcl
cmp
decl
shll
inc
mov
mov
jp
lods
push
lea
pop
je
sbb
out
mov
adc
cmp
testl
mov
cmp
jecxz
in
pushf
testl
add
negl
pop
inc
jle
cs
in
lahf
faddl
test
xchg
in
dec
push
lret
cwtl
mov
or
pop
rcrb
or
xchg
mov
jp
int
pop
sbbl
movsb
dec
inc
cld
sbb
loope
test
lcall
pusha
test
pop
fistps
in
push
imull
push
push
imull
stos
sub
dec
in
mov
scas
jo
dec
shrb
sub
sbb
dec
mov
xor
xchg
pop
or
jmp
fwait
xor
lret
int3
fs
push
fldcw
fcoms
ds
movsl
test
fcomi
cmp
dec
and
in
divb
xchg
in
fsts
push
cmpsb
addr16
divl
cmc
insl
test
pextrw
mov
std
orb
mov
ret
xor
stos
outsl
cs
inc
sub
jge
push
adc
in
adc
dec
and
in
cmp
xlat
insl
dec
lds
pusha
adc
jp
xlat
movsl
sbb
push
icebp
test
xor
mov
jne
push
or
shl
pop
in
je
ret
div
sbb
dec
lock
push
imul
loop
lock
adc
mov
imull
inc
out
cmp
roll
xor
call
mov
push
rcrb
out
mov
sub
xchg
mov
jmp
jp
aaa
nop
mov
push
in
pop
jns
xor
movsb
fs
jbe
testl
lcall
push
ss
mov
dec
inc
xlat
mov
xchg
fistps
and
xchg
jecxz
cmp
imul
push
xor
daa
xlat
sahf
cmc
add
mov
lods
movsb
lret
push
das
imull
mov
movb
lahf
ret
mov
data16
nop
imul
pop
fcoms
sbbb
in
mov
test
idivl
jge
aam
sub
fdivrl
jecxz
inc
dec
mov
pop
loope
fstenv
xor
mov
push
imull
jo
test
loopne
mov
and
pop
sahf
leave
loope
mov
mov
idivl
and
sub
es
mov
ja
and
xor
out
out
xor
xchg
cmpl
inc
jge
insl
dec
out
outsb
mov
in
fstpl
ds
jne
push
inc
or
and
fwait
xor
icebp
cmpsl
sub
jno
lret
push
mov
popf
les
jp
lea
idiv
jl
cmp
mov
xchg
inc
mov
divl
lcall
leave
mov
test
fwait
push
adc
xchg
sbb
push
sub
aaa
push
push
lods
testl
xchg
imul
lret
xor
call
stc
scas
dec
cmpsl
repz
out
xor
dec
pop
imull
ret
call
in
mov
divl
movsl
pop
sub
push
rcrl
mov
jne
outsl
je
xor
push
jmp
je
shr
add
push
test
pop
sub
in
sbb
jecxz
movsl
jg
out
adc
mull
mov
adc
sbb
mov
scas
xchg
out
shll
fisttpll
iret
pop
xor
neg
ja
js
push
add
mov
addr16
fxch
add
mov
pop
xor
push
lret
test
inc
dec
pop
idiv
xchg
mov
push
in
mov
xlat
push
or
sub
testl
test
xchg
loop
arpl
jnp
loope
shlb
movsl
hlt
mull
xchg
mul
mov
adc
je
lds
testl
sbb
aam
testl
outsb
xor
xchg
pop
cli
rclb
jg
mov
adc
ss
mov
pop
or
rcr
jl
sub
call
int
sub
int3
mov
fs
pusha
cmpsb
mov
sbb
not
mov
sub
mov
aas
es
and
fcomp
adc
mov
push
pusha
xchg
pop
xor
lret
xor
das
and
mov
xor
dec
jne
ss
addb
dec
inc
repnz
add
add
loopne
mov
test
jecxz
adc
mull
push
fildl
sub
stc
imull
jmp
jp
movb
push
mull
mov
mov
imul
into
mov
lgs
pop
scas
and
iret
into
adc
sbb
fildl
mov
andl
stos
loopne
loope
out
aam
and
mov
out
push
pop
lahf
pop
adc
nop
inc
icebp
lods
cmp
out
mov
imull
ffree
or
testl
fldt
jecxz
lcall
sub
and
jbe
out
data16
fcomip
popa
add
jo
nop
inc
adc
jge
rorb
inc
arpl
mov
aad
inc
xchg
negl
sub
inc
xchg
vmovhps
sub
push
mov
scas
push
sti
out
inc
in
lret
das
sub
fwait
sahf
movsl
leave
in
push
jecxz
lret
or
pushf
add
test
lahf
push
jns
jecxz
fstpl
pusha
notl
in
or
testl
or
nop
outsb
mov
and
lock
iret
enter
neg
fidivrs
pop
into
fistl
push
cmp
lcall
les
out
int3
shll
sahf
loop
push
inc
jecxz
fdivr
mov
mul
loopne
push
movsb
fldenv
enter
mov
and
fsubrl
sbb
fyl2x
in
negl
push
and
xchg
mov
or
jecxz
jns
testl
clc
add
mov
sub
cmp
adc
fisttpl
mov
push
clc
out
xchg
push
test
cs
pop
cltd
outsl
jge
cwtl
out
arpl
jle
jae
stos
and
jae
fidivrs
dec
mov
sbb
lds
fwait
pop
cli
jp
mov
or
mov
pop
cmp
fnstsw
mov
xor
sub
idivl
std
xor
pop
shrl
sti
push
jecxz
pop
or
lea
mov
out
pop
mov
daa
mov
divl
push
sub
cld
les
or
rolb
shll
mov
das
inc
negl
or
in
push
cmp
add
shll
in
ficoms
sbb
ret
js
cmp
cs
adc
or
testl
mov
sbb
insb
cmpsb
out
push
dec
push
inc
pop
mov
mull
add
call
lods
cmpsl
sbb
add
xor
rcll
push
arpl
lods
icebp
cltd
push
in
mov
lea
out
icebp
aam
lods
sub
pop
in
push
in
push
dec
jp
cld
jne
xor
push
push
jae
fwait
std
add
sub
and
mull
or
jnp
adc
lahf
or
lods
xlat
inc
loope
sbb
shlb
pop
insl
fmuls
out
scas
testl
ja
mov
icebp
mov
cmp
dec
int
leave
inc
sbb
xchg
sub
imul
xor
and
lea
lcall
jne
mov
sub
imull
repz
xor
sbb
ss
push
cs
test
popa
push
pop
add
outsl
fcomi
insl
mov
adc
xchg
movsb
push
push
add
cmc
pandn
ret
scas
fmuls
inc
bound
sub
movsl
test
mov
pop
mov
jae
std
pop
xor
mov
lea
idiv
test
push
out
inc
mov
bound
or
dec
icebp
mov
xchg
mov
add
cmp
push
add
mov
aas
xchg
out
les
cli
and
sub
cs
mov
pop
xor
push
mov
lcall
int
dec
imul
fs
fdivr
jno
out
pusha
mov
stc
bnd
xchg
stc
test
cmc
xchg
outsb
push
and
scas
inc
pop
aad
fsubs
sbb
sub
jmp
mov
mov
sbb
xchg
pop
aad
loop
adc
jb
enter
jge
neg
add
lds
or
stc
out
sbb
xchg
pop
mov
xchg
enter
aaa
enter
loop
bound
add
adc
in
xchg
cmp
lret
outsb
dec
cs
aaa
inc
addb
sbb
mov
jnp
and
lret
jmp
xchg
sahf
je
pop
imul
jb
enter
add
fcmovbe
jno
push
pusha
mov
pop
fcompl
sub
mov
loope
xchg
mov
aad
inc
inc
sbb
mov
mulb
fimuls
push
push
sub
push
pop
dec
addr16
xchg
pop
sbb
jge
mov
fdivs
ljmp
and
jae
fists
xchg
repnz
mov
mov
lahf
push
jg
mov
dec
cmp
shll
nop
xchg
sbb
push
repnz
pushf
sbb
cmp
in
movsl
sub
jno
lcall
mov
ja
mov
sahf
jbe
hlt
and
movsl
in
test
les
jbe
jb
cs
adc
ss
je
lahf
popa
xchg
ret
into
pop
leave
nop
in
add
mov
pusha
cmp
sub
inc
in
pop
inc
fimull
faddl
insl
sub
jmp
mov
mov
in
fidivl
push
cltd
xchg
enter
gs
loope
cmpsb
xor
lahf
out
pop
notb
in
enter
out
add
push
fisubrs
jbe
mov
int3
faddl
aaa
xchg
loopne
jbe
mov
jae
mov
movsl
push
mov
ljmp
jp
mov
cmpsl
das
push
outsb
bound
inc
mov
and
and
addl
lahf
mov
xchg
in
arpl
lods
jp
or
loop
and
data16
je
cmp
mov
jne
fcmovbe
ret
jae
xchg
out
aad
dec
out
mov
jbe
inc
lcall
mov
lahf
push
dec
test
pusha
jecxz
data16
jmp
xchg
minps
or
pop
insl
hlt
lea
and
mov
mov
pop
sbb
sti
movsb
repz
add
jnp
movsl
push
jb
xchg
test
out
mov
sub
lea
inc
push
xchg
fmull
mov
adc
testl
mov
insl
mov
pop
add
xlat
mov
aam
roll
add
in
fisttpll
sbb
seta
hlt
mov
mov
lods
lcall
call
xor
stos
mov
ret
outsb
in
fidivrl
movsl
lock
add
xchg
dec
xchg
jle
in
pop
push
adc
in
out
and
out
add
mov
fcomi
mov
dec
xor
lods
inc
mov
cmp
cmp
in
and
inc
je
incb
mov
movsl
xlat
push
out
jle
mov
adc
ljmp
fidivrs
lock
pop
leave
bound
fmuls
xor
or
add
xchg
xor
xor
cltd
out
add
or
mov
int
aaa
test
shl
ficoml
cmp
gs
jecxz
es
neg
and
mov
inc
rorl
divl
adc
mov
cmpsl
mov
jp
notl
push
mov
or
daa
mov
arpl
cwtl
das
pop
push
scas
data16
mov
pop
pop
in
test
fstpt
imull
shl
outsl
xorb
dec
ss
mov
jecxz
xchg
sbb
mul
mov
pop
ja
cmpb
xor
lds
popa
jle
sub
inc
push
scas
repz
insl
imull
pop
jp
shrl
fwait
sbb
pop
adc
addr16
repz
sti
ret
cld
xlat
sub
clc
imull
jecxz
add
je
pop
js
dec
inc
jge
sbb
inc
mov
imull
or
xor
lock
add
cmp
push
dec
testl
icebp
mov
ret
neg
test
mov
fbld
in
jmp
ljmp
repz
sbb
mov
std
push
xor
jb
outsb
ja
mov
divl
cmp
fcmovnbe
mov
and
add
bound
mov
mov
push
push
inc
cwtl
rclb
add
testl
pop
pop
in
pusha
iret
shl
mov
je
mov
jno
imull
xchg
cwtl
mov
xor
call
pushf
adc
mov
push
scas
dec
jne
jecxz
negl
ja
int
pop
cmpsl
jp
sahf
or
div
shr
adc
sub
add
movl
dec
jmp
jo
or
push
and
test
lock
int
ja
nop
sub
sbb
push
notl
xchg
jbe
je
sbb
loop
mov
daa
loope
div
sub
in
push
movsb
pop
jle
iret
test
cld
xchg
mov
loop
push
lods
out
lret
ret
jg
mov
mov
jae
cmp
adc
sbb
add
loopne
pop
xchg
sbb
adc
pop
dec
negl
ficompl
xchg
jp
xchg
pop
inc
out
ret
ja
stos
xchg
pusha
std
out
cmp
dec
pop
pop
cmc
push
lret
jmp
push
or
nop
pop
xchg
push
fsub
fidivrl
testl
push
imul
xchg
pushf
imull
vpsadbw
inc
idivl
or
stc
push
and
testl
scas
and
mov
fs
xchg
xor
push
jno
pop
je
scas
xchg
sub
popa
adc
fidivrs
insb
dec
call
xchg
aaa
adc
push
clc
in
fiadds
sub
lcall
mov
divl
jne
popl
mov
and
inc
sti
out
mov
fisttpl
notl
lahf
adc
daa
cwtl
imull
jp
xor
inc
dec
imul
cmc
mov
cmp
adc
jg
xchg
push
jecxz
notl
fs
nop
outsl
mov
dec
xchg
in
imul
adc
sub
jmp
testl
xchg
push
xchg
loop
sbb
shrb
mull
inc
sbb
or
ret
test
or
in
cld
repnz
stos
testl
cmp
negl
scas
out
js
cmc
testl
lret
push
jle
xchg
cmp
loopne
sub
xchg
cli
fadd
mov
mull
jb
pop
notl
xchg
imul
mov
mov
lods
xchg
daa
jg
loope
sbb
int3
dec
cmp
icebp
xor
fbstp
idivl
insb
lds
ret
filds
inc
sbbb
xor
cs
repnz
stos
lret
jmp
mov
loopne
pop
ds
mov
mov
jmp
and
pop
sbb
cmp
xor
jl
xchg
mov
sbb
mov
pop
testl
call
adc
mov
xor
mov
loope
mov
into
jmp
stos
cld
notl
cmp
pop
fdivl
iret
lock
les
into
cmc
repnz
jl
sbb
testl
push
sub
pop
pop
adc
mov
out
negl
xor
xor
xlat
mov
sti
out
xchg
or
cwtl
pop
adc
xchg
xchg
push
std
ss
mov
outsb
sbb
jnp
stos
and
adc
popf
enter
or
divl
sti
aam
mov
pop
cli
cmp
sub
pop
jbe
and
add
outsl
cmc
pop
add
das
jecxz
pop
lret
mov
in
adc
out
ss
jnp
in
xor
and
jl
pop
pushf
rclb
xor
shrb
adc
xchg
and
cwtl
jbe
push
xlat
loope
idivl
xchg
pop
in
fsubrs
dec
xor
sub
mov
cmp
inc
cmp
ret
btc
fildl
notl
popa
in
lds
xor
arpl
imul
flds
in
mov
lret
aam
dec
div
cmpsl
arpl
mov
or
inc
mov
sbb
lods
cmpsl
stc
adc
add
call
mov
divl
xchg
xor
out
sub
push
mov
rclb
xor
out
push
je
popf
add
push
mov
and
dec
stc
rol
sbb
inc
divl
and
mov
mov
sbb
pop
mov
xchg
loope
pop
dec
leave
popf
xchg
repz
xchg
pop
xchg
push
fcoms
loopne
cltd
subl
pop
pop
xlat
cmpb
push
pop
dec
imul
sub
add
inc
lahf
mov
call
push
fsubr
pop
cli
out
cmp
xor
xchg
sbb
adc
stc
push
or
pop
out
pushf
mov
add
push
idivl
mov
cld
cmp
rcrl
mov
mov
fistps
repnz
push
in
add
rcrb
or
addb
jecxz
js
mull
ss
fnsave
cmpsb
fistl
mov
testl
push
insb
shlb
push
mov
jl
and
add
je
jecxz
daa
faddl
negl
push
sbb
sbb
or
ret
mov
lret
xor
out
addr16
push
es
outsb
fsubs
mull
loopne
mov
sti
inc
notl
movsb
xchg
mov
cwtl
fs
mull
add
xchg
pusha
pushl
imul
and
loopne
inc
jns
xor
sbb
jmp
and
clc
jg
int
stc
popl
jmp
push
mov
ret
or
loope
aam
pushf
inc
out
js
mov
mov
ljmp
and
jl
push
test
mov
xchg
cmp
mov
adc
lret
pop
sbb
cmpsl
xchg
mov
push
leave
lret
std
mov
imul
imull
cmp
pop
int
fldcw
or
and
push
out
adc
cwtl
xchg
ds
sbb
mov
mov
xchg
and
cmp
repnz
push
add
lret
negl
mov
imull
dec
xor
pop
mov
dec
pop
push
mov
mov
mov
mov
cmc
testl
push
inc
mul
and
xchg
xor
in
div
int3
jno
xchg
aam
push
pop
fcom
test
lods
mov
xchg
repz
push
cld
loop
push
xor
pusha
fdivp
mov
jg
mov
add
arpl
inc
mov
inc
cli
loopne
loope
mov
call
out
sub
adc
xchg
push
jnp
mov
jge
dec
lock
scas
sbb
cltd
sbb
imul
mov
test
test
in
sbb
repz
mov
stos
testl
mov
ss
add
mull
out
movsl
push
jae
daa
adcb
sbb
rcr
jmp
lods
xchg
ljmp
sub
mov
push
imul
xor
sarb
pop
jmp
push
fmull
cs
mov
icebp
cmp
ljmp
neg
int
mov
clc
testl
add
imul
cmpsb
jg
jmp
pop
adc
cmp
cmp
stos
inc
mov
cmp
daa
pop
mov
mov
sub
and
jge
enter
mov
mov
mul
out
adc
test
jge
fs
mov
in
roll
mov
sbb
out
repz
xchg
push
sarl
shr
xchg
pop
and
add
xor
fimuls
push
pop
push
push
pop
aaa
inc
pop
loop
mull
std
cli
repnz
aam
fwait
pop
dec
test
push
sbb
fsubrl
aaa
out
mull
clc
cmp
std
xchg
sbb
repz
jmp
ret
xchg
fnsave
je
mov
and
das
shld
lock
mov
lods
repz
add
sub
out
cmc
or
jl
sbb
loopne
sub
lds
cmp
push
enter
mov
mov
stos
push
std
jnp
xor
lock
lahf
pop
loopne
int3
test
xor
shll
xchg
imul
jbe
hlt
jae
sub
mov
ss
inc
test
pop
sbb
inc
jmp
mov
jecxz
xor
add
jbe
push
lahf
pop
insl
fisttps
into
fisubrs
idivl
sbb
pop
mov
mov
jmp
mov
and
imull
loop
icebp
pop
js
pop
sub
call
mov
mov
xchg
notl
cmp
cmpsb
scas
out
idivl
or
daa
mov
xchg
sub
inc
idiv
cmpb
add
dec
lods
sbb
xchg
pop
stc
fsub
adc
xchg
stos
daa
cmpl
xlat
and
mov
pop
call
pop
inc
lcall
jmp
cmpsb
loopne
xchg
imull
sbb
jne
hlt
ret
ss
imull
cmpb
clc
popf
mov
inc
fcmovnu
in
mov
je
push
push
jo
mull
xchg
shrb
pop
ror
mov
xchg
fwait
xchg
lea
fiaddl
add
jbe
push
add
add
pop
sbb
adc
rcll
fnsave
sbb
jmp
jecxz
sub
incl
pushf
mov
mov
mov
xchg
test
xor
push
sub
nop
add
jno
mov
jb
sub
add
add
jnp
xchg
loop
movsb
fidivl
push
inc
aad
outsb
pop
lods
mov
loopne
push
or
cmp
pop
in
dec
jbe
xor
xor
aas
ljmp
mov
mov
lods
out
dec
push
mov
les
lret
inc
insl
loopne
push
mov
ljmp
mov
cmp
into
shl
dec
xchg
sub
push
cwtl
mov
jmp
xor
cmp
sub
iret
jns
push
insl
iret
xchg
jecxz
jecxz
sbb
icebp
call
fsubr
aaa
leave
lahf
mov
test
push
out
lret
push
cmp
jmp
mov
cltd
pushf
xchg
push
lds
mov
test
cmp
lret
xchg
sub
ret
cmp
shrl
sub
nop
out
clc
jge
sbb
cmp
stc
pop
inc
xchg
lcall
adc
insb
rcl
jmp
cmp
int3
xlat
shll
dec
leave
ds
jge
mov
mov
pop
xchg
push
push
inc
mov
icebp
rclb
inc
inc
divl
and
in
dec
jmp
mov
pop
or
inc
ja
iret
out
xchg
push
stos
testb
jno
lahf
add
jp
ret
xchg
push
fcmovu
jmp
mov
or
sti
jmp
idivb
in
scas
inc
lods
movsl
sbb
scas
lods
or
out
inc
insl
inc
xchg
pop
jecxz
js
scas
in
in
repz
jp
aaa
fidivrl
hlt
push
lea
xbegin
cli
sbb
cmpsb
fidivl
dec
popf
xor
mov
inc
push
add
mov
popa
icebp
or
add
xor
hlt
xchg
mov
aaa
sbb
inc
icebp
adc
fimull
out
lea
or
xor
aad
pop
add
lods
push
aaa
pop
sbb
mov
add
inc
dec
outsl
dec
decl
addr16
pop
sub
insl
jo
in
push
xchg
out
inc
insl
add
in
addr16
or
pop
decb
cs
fdivrs
nop
jb
popf
mov
mov
mov
and
or
xor
cltd
mov
adc
mov
testl
sbb
xchg
push
xchg
and
lods
and
sub
sbb
push
dec
fisubrl
and
push
xor
into
sub
popa
lcall
mov
inc
test
jmp
aas
mov
jno
je
js
lock
scas
add
push
add
mov
jp
imul
aam
lret
pop
out
mul
lcall
fbld
push
add
bound
js
mov
movsl
pushf
lret
push
ds
pusha
cmc
jp
cmp
sub
mov
test
or
xchg
fucomi
outsb
and
and
int
add
fdivrp
xchg
orb
outsl
jp
xchg
cs
inc
mov
sub
scas
lret
mov
orb
rorl
push
pusha
mov
ss
mov
mov
idivl
mov
dec
repnz
or
pop
and
fcomps
nop
sbb
fbstp
inc
icebp
xor
in
adc
icebp
or
inc
dec
xor
mov
add
dec
daa
xchg
mov
push
and
jl
xor
pop
cmp
dec
dec
push
lods
sbb
adc
mov
fildll
lock
mull
ret
shlb
or
push
sub
out
inc
adc
jp
inc
popa
fdiv
pop
xor
cli
push
add
adc
out
into
neg
repz
ficomps
int3
or
mov
je
xor
out
adc
divl
les
mul
test
lods
dec
inc
fists
mov
pop
fildll
mulw
dec
mov
fidivl
mov
push
out
push
sbb
arpl
xor
scas
lcall
push
lret
jl
xchg
fcomi
cmpsl
ret
cmpsb
mov
mov
test
mov
pushl
xor
leave
or
in
or
cmp
iret
xchg
xchg
lret
dec
movsb
or
stos
sbb
pusha
push
jecxz
xor
cmpsb
mov
neg
testl
push
movsl
fildll
maskmovq
divl
stos
mov
aaa
mov
mov
mov
ss
add
leave
fisttpl
fnstenv
notl
xor
pop
adc
nop
andb
jp
or
idivl
repz
cmpl
cmp
inc
fsubl
mov
inc
mov
repnz
and
mov
out
mov
or
push
stos
gs
enter
cli
sub
mov
and
fiaddl
sbb
and
iret
shrb
xlat
sub
jg
push
jmp
mov
out
push
sub
es
repz
and
into
ss
xchg
aad
and
adc
mov
mov
scas
sub
divl
xor
js
mov
negl
rcrb
cmpl
push
imull
mov
stos
jp
shll
enter
popa
lahf
imull
shlb
stc
adc
jmp
ror
divl
or
xchg
negl
or
outsb
roll
mov
imull
xchg
ror
sub
test
add
aas
pop
divl
call
div
jae
xlat
fcomps
ret
pop
out
packssdw
pop
jp
idiv
push
or
dec
testl
pop
fisttpl
sub
and
xor
mov
test
negl
dec
add
pop
jne
loop
cmc
in
fld
sub
push
fs
sub
fwait
data16
out
jnp
jl
and
lea
insb
xor
sbb
fnsave
icebp
push
jo
gs
cmp
popf
hlt
divl
insb
arpl
sbb
mull
repz
and
sbb
xor
loope
sbb
ret
adc
jle
rorb
pop
shl
xlat
loope
inc
idivl
dec
ja
repz
js
icebp
pop
rcll
outsl
rcll
cmp
mov
out
test
push
daa
cmp
sbb
loope
sarb
out
xchg
sub
lock
adc
cmc
adc
fs
test
mov
mov
gs
enter
insl
movsl
jb
xor
mov
xchg
loop
or
repnz
ss
ja
cmp
xor
std
sbb
inc
jo
ret
and
dec
xor
pop
repz
mov
adc
xor
das
cmp
push
test
jno
lock
nop
testl
in
addr16
adc
jl
mov
cmp
push
adc
rcrl
in
shlb
xor
pop
push
sub
or
incb
pop
or
jg
jmp
and
cmp
repnz
xchg
jl
jge
adc
hlt
addl
cwtl
cmp
outsl
mov
sarl
aaa
and
push
pop
and
add
out
arpl
outsl
xchg
push
rep
xor
mov
out
clc
pop
rcr
xchg
pop
rorl
insb
mov
repz
cld
pop
outsb
push
cli
push
mov
out
lret
notl
leave
fistps
push
and
test
jns
insl
pop
inc
sbb
inc
xchg
std
add
adc
movsl
inc
testl
fstl
ss
jp
mull
inc
mov
add
lods
fdivrp
adc
mov
xlat
divl
mov
je
fldt
cld
jo
jp
fidivrs
imull
jnp
dec
arpl
add
xlat
mov
push
testl
cs
divl
add
mov
pop
and
sahf
in
push
sbb
xlat
sbb
fnstcw
dec
mov
in
dec
imul
mull
iret
outsl
adc
lret
or
push
sub
push
or
in
in
ja
idiv
scas
inc
cmp
push
divl
mov
in
xchg
inc
adcl
xlat
filds
mov
fstpl
xchg
pop
ss
je
sbb
imul
push
inc
lcall
shr
push
dec
faddp
xlat
not
add
or
call
testl
je
mov
push
shl
lcall
dec
ret
mov
mov
push
sub
leave
dec
testl
mov
push
mov
xor
inc
fstps
or
jle
imul
in
jo
mull
xor
push
ljmp
mov
and
xlat
sbb
inc
dec
xchg
sub
fistpl
pop
mov
idivl
and
mov
and
lcall
mov
sarb
xlat
test
les
mov
dec
aad
movsb
mov
adc
mov
sub
push
cltd
test
test
shlb
push
sbb
lock
pop
push
dec
cmp
testl
xchg
mov
mov
adc
je
shl
in
js
jae
hlt
and
cs
push
dec
cltd
push
in
xor
jmp
mov
mov
clc
ss
fwait
jecxz
cmc
in
pop
test
ja
xlat
xchg
and
fndisi(8087
adc
jns
xchg
fdivrl
mov
xlat
mov
pop
pop
inc
and
mov
xor
cmp
push
cmp
fistps
das
loop
adc
daa
aad
test
aas
fwait
xor
rcll
scas
sbb
test
jns
jecxz
mov
iret
notl
in
mov
fildl
mov
outsl
out
pop
dec
pop
loopne
push
push
mov
push
push
pop
xchg
cmp
pop
jo
sti
adc
movsb
or
pop
stos
pop
mov
and
pop
in
js
xlat
fbld
inc
pop
ret
imul
xchg
ja
fmulp
sbbb
not
and
lahf
cmp
dec
push
push
dec
and
ror
add
js
icebp
cmp
mov
lret
push
nop
test
and
or
pop
pop
ss
jbe
inc
out
test
neg
or
xor
push
pusha
mov
clc
pop
neg
daa
sarb
jbe
into
xlat
jle
xlat
adc
mov
loop
fdivp
push
xchg
negl
and
inc
in
mov
testl
les
in
je
testl
push
divl
and
jo
sbb
cmp
mov
ss
negl
mov
pusha
repz
jge
add
pop
subb
sbb
lcall
cmp
out
inc
inc
mov
inc
vmovntps
test
loop
xchg
dec
mov
in
jbe
adc
pop
cmpsb
divb
call
sub
dec
in
arpl
mov
cld
call
filds
in
hlt
adc
jne
and
push
xor
mov
xchg
in
cmpl
incl
leave
cs
testl
add
sbbb
sbb
pop
fldenv
push
negl
sbb
stos
adc
negl
lea
jp
pop
inc
fstl
jo
js
sub
rorl
mov
scas
fisubrl
pop
or
rclb
punpcklwd
not
js
stos
test
sti
test
push
push
mull
pop
js
imull
sub
scas
pop
sti
xchg
jmp
jo
lods
xchg
adc
mov
scas
inc
mov
xor
mov
mull
inc
leave
lock
ja
testl
jo
mull
arpl
cmp
pop
mov
dec
mov
int3
fs
mov
add
adc
psrlw
testl
adc
ss
mov
mov
push
in
and
sar
out
push
or
and
daa
rolb
enter
jle
insl
mull
ss
roll
insb
lcall
jecxz
movsl
or
xlat
out
lods
mov
add
or
rcll
adc
inc
xchg
mov
cmpsl
fisttpl
bound
fidivrl
or
shl
icebp
push
xor
negl
xchg
sbb
je
lahf
jl
icebp
cmpsb
or
lods
imul
in
imul
cmc
cwtl
adc
jbe
jnp
xchg
sbb
int
lds
testl
mov
fstpt
dec
add
xchg
push
es
push
mul
mov
add
notl
mov
pop
dec
push
fincstp
pusha
sub
icebp
and
outsl
fisttps
pop
sub
inc
not
mov
lcall
ret
insb
and
stc
xor
sub
test
adc
je
and
cli
add
ljmp
inc
neg
fnsave
loopne
xlat
pop
pop
and
mov
pop
fimull
cltd
bound
in
adc
clc
push
out
jbe
mov
repz
adc
xchg
scas
in
divl
cmc
bswap
neg
mov
rcll
inc
or
mov
xlat
inc
mov
lock
loop
mov
inc
push
lods
ficompl
outsl
leave
call
sub
repz
and
into
jbe
call
inc
test
mov
inc
jo
ljmp
pop
mov
lods
mov
sbb
and
ja
dec
xchg
js
jg
pushf
pop
xchg
mov
lds
xchg
divb
sbb
ret
dec
add
sbb
dec
xlat
mov
in
arpl
mov
cmpsb
inc
xlat
notl
mov
ret
std
scas
in
cmp
add
in
imul
dec
xchg
out
sbb
jmp
add
icebp
in
mov
cmp
pop
push
add
mov
mov
sub
mov
sub
pusha
cli
jmp
dec
into
jecxz
mov
int
pop
jmp
ljmp
lods
stos
adc
pop
jne
fs
inc
test
sahf
mov
lcall
push
addr16
cltd
xchg
jns
shrb
js
xchg
rcr
sub
mov
ja
mov
xlat
outsb
push
jle
and
inc
pop
jmp
ret
imull
clc
push
mov
add
in
frstor
fidivrl
lret
dec
mov
cmp
cs
lods
icebp
ficompl
test
jp
add
out
or
pop
jmp
inc
int3
xchg
mov
call
sub
cmp
mov
cmp
int3
movaps
jb
sarl
dec
in
sub
enter
in
inc
dec
lds
xor
fnsave
cli
fs
loopne
lods
cmp
ja
dec
call
repnz
mov
jae
aas
add
xor
fsubrs
or
add
mov
popf
ss
scas
repnz
pop
adc
dec
int
inc
sub
pminub
loopne
dec
fldl2e
sub
add
ljmp
mov
lods
dec
cli
jmp
mov
push
jbe
mov
cli
push
mul
cwtl
scas
jns
xor
in
rolb
pop
insb
mov
in
xchg
xbegin
popf
daa
sbb
test
fcomps
pop
addr16
lahf
sub
pop
inc
xor
ficoml
fwait
pop
jb
out
jle
aad
mov
pop
xchg
adc
frstpm(287
sti
ja
dec
ret
movsl
mov
lods
out
pop
and
movsl
mov
jnp
in
or
insb
dec
and
lods
adc
in
xor
loopne
aam
sbb
icebp
lods
xor
clc
popf
sbb
sbb
inc
scas
cmp
hlt
movsl
pushf
sahf
xor
and
cbtw
mov
aad
xor
in
mov
sub
insb
pop
cmp
mov
cmc
and
test
sbb
mov
or
jbe
jmp
mov
jge
data16
mov
out
pop
mov
pop
loope
cmpsl
pop
lahf
decb
and
outsb
xor
hlt
pop
add
jmp
js
cmp
test
add
jo
int
pusha
xchg
sbb
xchg
lea
mov
ror
aaa
dec
cmp
movb
arpl
fsubp
lea
adc
mov
shll
pop
rcrb
inc
adc
in
cmp
movsb
add
jbe
cmpsb
sub
push
int
and
mov
andb
cmp
fsts
or
dec
sub
insl
fcmovbe
jne
push
cmp
lcall
ljmp
or
and
mov
adc
xchg
ljmp
push
mov
inc
mov
cmp
nop
ret
int3
and
jmp
fnstcw
insl
mov
leave
and
jo
jmp
mov
pop
daa
mov
add
out
test
imul
in
inc
sbb
mull
outsb
lods
or
sub
fld
neg
inc
and
test
mov
cs
cmpsb
rcrb
xor
pop
rcrl
imull
fwait
mov
mov
dec
and
and
pop
clc
rcl
imul
loop
enter
push
or
fdivp
fistpll
mull
enter
add
pop
std
divl
test
sarl
mov
sbb
or
movsl
dec
dec
fsub
xchg
xor
imul
frstpm(287
lret
adc
out
filds
mov
rcll
ret
jns
jmp
jge
call
cmp
ljmp
pop
fdiv
insb
lds
or
pop
push
jo
pop
sarb
mov
adc
mov
adc
or
sarl
xchg
lea
push
stos
icebp
inc
popa
or
dec
arpl
fstpt
xchg
or
orl
sub
icebp
lea
mov
mov
xor
lds
sub
gs
ds
cmp
xlat
jbe
loop
sbb
imull
pop
pusha
stos
data16
idivl
cmpsl
xchg
pushl
xlat
jb
and
insl
mov
sbb
out
pop
xchg
mov
call
divl
mov
je,pt
fimuls
cs
adc
repnz
jbe
sbb
out
enter
and
das
xor
sub
xor
push
ss
adc
jmp
out
icebp
xchg
sub
fnsave
cwtl
shl
jae
sbb
sahf
pop
negl
gs
or
inc
mov
pop
shlb
aaa
adc
notl
add
popa
jb
divl
loope
test
sub
push
sbb
push
mov
movsb
imul
into
push
jg
sub
or
inc
jne
sbb
clc
pop
xchg
adc
out
mov
lcall
jne
xchg
add
inc
mov
inc
xlat
outsb
test
jmp
cli
xchg
push
hlt
pop
xchg
inc
aaa
fisubl
test
push
mov
cmp
pop
stc
inc
notl
cmp
jae
mov
jecxz
jmp
jbe
push
cwtl
xchg
push
adc
sub
sbb
fbld
test
adc
push
sub
in
ficoml
cmp
inc
lahf
add
fisubs
into
sub
mov
sahf
xchg
in
movsb
jnp
pop
imul
and
fidivl
mov
sarl
sub
ja
xchg
out
out
inc
add
loopne
inc
mov
lcall
lods
shrb
hlt
dec
and
jle
xor
dec
cmp
sbb
notl
add
rep
fisttps
loop
rcrl
xlat
adc
sbb
repz
mov
test
bound
testl
sub
adc
inc
aaa
leave
lea
inc
testl
mov
xchg
notl
xchg
negl
orl
loope
xlat
jp
or
mov
int
push
push
out
mov
jge
jp
aas
push
push
xchg
mov
jnp
and
sub
cmp
rolb
pop
sbb
jnp
push
lods
negl
imul
imull
xor
out
in
fdiv
pop
call
mov
mov
dec
inc
dec
add
fbstp
dec
aam
fnstcw
inc
out
mov
jle
inc
mov
notl
pop
fcom
dec
sub
push
xor
in
ds
push
inc
dec
inc
insb
out
jbe
push
imul
xor
idivl
mov
mov
mov
sub
cmpsb
jmp
je
mov
outsb
push
jle
or
stc
add
xlat
jge
call
mov
hlt
mov
dec
idivl
cld
jne
movsl
std
jge
inc
test
aam
int3
sbb
pop
xchg
fdivrs
sti
rcrl
jbe
jge
xchg
sub
ss
mov
push
and
xlat
lods
push
int
shlb
xlat
jmp
cmpsb
add
push
out
mov
and
cmp
out
cmp
stos
notl
lcall
movsl
subl
testl
ss
fistpl
notl
insb
pop
lods
imul
adc
aad
pop
testl
xor
cli
jne
sbb
arpl
testl
xchg
loope
inc
testl
push
fcmovne
div
test
xor
popa
xchg
icebp
test
adc
test
push
lcall
dec
enter
push
les
andl
jp
testl
xor
divl
inc
dec
and
jecxz
mov
mov
scas
out
das
mov
pop
mov
mov
dec
adc
adc
mov
adc
shl
pop
out
push
aad
cmp
out
fsts
rclb
das
notl
int3
out
not
cltd
sbb
repnz
sub
xchg
mov
and
sub
cltd
ljmp
cmp
fcoml
lods
push
imull
xlat
push
idivl
mov
or
daa
inc
notl
dec
aam
lcall
insb
xchg
je
sub
mov
les
in
pop
push
cs
mov
pop
mov
inc
idivl
or
jae
leave
sub
jmp
sub
shll
mov
pop
mov
inc
cwtl
aam
adc
idiv
rclb
jne
fincstp
hlt
jmp
jbe
xor
mov
sti
cmp
adc
sbb
pop
hlt
out
xor
je
push
pop
testl
shl
in
out
cwtl
mov
sub
mov
sub
test
mov
imul
stos
in
push
and
jb
fstpl
aaa
dec
jle
mov
cmp
sbb
leave
test
sub
inc
rol
idivl
xchg
lahf
repnz
rol
divl
jle
jecxz
push
and
xlat
imul
sub
arpl
in
xor
add
dec
cmpsb
scas
mov
idivl
in
pop
and
ljmp
pop
test
div
nop
out
leave
pop
pop
lea
push
addb
imull
cmp
jl
jo
pop
repnz
mov
out
call
jns
cmpsl
or
idivl
and
aas
in
repz
ja
out
push
scas
daa
cld
das
jmp
pop
into
in
mov
pop
nop
rcll
mov
out
inc
pushf
out
in
loopne
lcall
loope
add
not
adc
scas
sub
mov
gs
mov
repnz
fs
fisubs
test
idivl
adc
mov
shr
mov
xor
jnp
cmp
lods
jno
jns
outsl
ja
movsl
rcrb
out
mov
cmp
cmp
lcall
xlat
mov
pop
cmp
shl
test
mov
pop
jo
jns
push
and
imul
popf
mov
aaa
negl
lds
cmpsl
xlat
scas
mul
add
jge
or
js
hlt
push
cltd
jmp
pushf
inc
push
mov
jmp
outsl
imul
loope
mul
clc
cmp
int3
or
pop
sub
jno
insb
inc
lret
adc
push
jo
nop
mov
sub
mov
test
in
or
jge
and
leave
sbb
das
inc
adc
stos
lods
and
mov
outsl
out
outsb
mov
call
ja
iret
cmc
repnz
inc
std
lock
inc
mov
mov
push
cli
out
notrack
pop
arpl
lcall
jg
or
aam
in
imul
lret
or
xchg
jb
lds
scas
sbb
adc
lods
test
sbbl
mov
addr16
test
jbe
xchg
dec
fisttpll
pop
adc
test
gs
das
xor
xor
and
or
mov
push
push
pop
ficoml
mov
and
adc
sbb
out
mov
add
or
xchg
jmp
std
rcll
into
mov
cmp
add
rcr
fnstenv
cmc
icebp
xor
lcall
mov
mov
mov
jecxz
lcall
imul
xchg
push
ficoml
ja
fistpl
imul
jno
pop
push
mov
mov
lahf
lods
fisubl
jmp
fisubrl
lcall
jne
mov
mov
div
sub
push
cmp
or
mov
inc
jbe
adc
push
jo
xor
xchg
mov
ljmp
fsubs
xor
and
push
std
and
nop
cmp
xorb
aad
fisttps
add
adc
push
push
pop
test
push
dec
out
jg
cmp
icebp
shlb
xchg
test
sub
cmp
pop
mov
and
imull
call
jnp
out
pop
xchg
adc
movsl
arpl
xor
inc
div
add
pop
mov
divl
lds
test
adc
push
or
push
adc
and
push
pop
in
popa
addr16
test
mov
push
lds
rorb
sarl
inc
mov
leave
fadds
cld
dec
cltd
jae
test
aas
lret
add
mov
loope
shrl
out
flds
dec
mov
test
fisttps
add
xchg
insl
inc
idiv
mov
call
les
jmp
out
inc
cmp
xorl
loopne
cmp
pop
shl
pop
mov
cmpsl
or
add
aas
pop
pushf
adc
jo
adc
cmp
lods
pop
mov
pushf
cmp
cmc
jmp
loope
jmp
divl
mov
push
out
adc
idivl
sub
push
sub
push
mov
sub
dec
notl
pop
insb
fwait
cmp
pusha
imull
dec
rorb
imul
or
add
cltd
push
push
insl
adc
negl
lahf
out
mov
mov
outsl
loop
test
test
mov
idivl
pcmpgtb
je
js
inc
sbb
push
jl
dec
imul
mov
divl
repnz
daa
xchg
adc
testl
sbb
mull
icebp
or
xor
into
push
xchg
push
shrb
mull
or
dec
and
pop
jbe
ja
sub
add
pop
test
mov
pop
and
inc
jne
sub
notl
sarb
jecxz
xchg
divl
jge
hlt
xchg
dec
pop
not
filds
js
ret
testl
pop
cmp
mul
sub
cmp
out
sahf
imull
stos
les
negl
scas
fwait
mov
inc
popa
sub
xor
test
or
push
subl
addb
xor
test
shl
in
pop
arpl
out
test
xchg
mov
mov
ficoml
imul
push
or
mov
sub
repnz
fldcw
mov
test
lcall
mov
cmc
sbb
pop
cwtl
pop
test
cs
xchg
ret
mov
cltd
lods
cld
in
jmp
pop
adc
fsubs
push
cwtl
outsl
testl
push
pop
mov
adc
xchg
push
jle
jecxz
popa
loope
mov
notl
pop
icebp
fcoms
pop
mov
insl
inc
insb
pop
mov
repz
rclb
imul
cmp
mull
jl
aas
outsb
rolb
xor
xor
lahf
add
mull
xchg
lods
xchg
imul
adc
mov
out
jmp
fstl
mov
fldenv
idivl
out
decb
mov
xlat
xorb
mov
jo
cld
out
dec
or
andb
and
lret
loope
dec
add
fsubr
mov
mov
mov
adc
mov
dec
orb
push
pop
movsl
and
repz
pop
mov
stos
adc
mov
imul
ret
mov
or
mov
lret
fld
and
jno
jg
or
jp
call
or
cwtl
dec
xor
xchg
pop
jecxz
jno
cmp
pushf
xchg
imull
adc
pop
and
adc
iret
loop
push
xor
nop
pause
xlat
lock
or
cmp
pop
cwtl
lret
lcall
int
adc
sbb
rorl
and
lock
mull
sbb
dec
and
testl
adc
movsb
mov
jg
jnp
das
dec
mov
icebp
rcr
enter
mov
sub
addl
aas
adc
dec
adc
inc
test
popa
into
ficomps
inc
in
mov
stos
js
xor
push
sbb
ss
jo
push
adc
mov
xchg
mov
inc
pusha
scas
ret
pop
idivl
push
aaa
das
addb
add
int3
sbb
js
testl
xchg
mov
fisttps
outsl
cwtl
pop
mul
pop
dec
push
push
in
sbb
push
cltd
clc
cmpsl
adc
sub
imull
sbbb
xchg
push
xchg
ljmp
jmp
outsb
xchg
rorb
or
mov
inc
pop
notl
pop
add
mov
mov
mull
cmc
pop
mov
out
jne
cltd
sahf
shl
cld
mov
leave
ljmp
cmp
push
imul
fucom
daa
int
icebp
jo
out
push
imul
jg
out
jl
mov
add
out
jns
shl
loope
insb
push
inc
test
hlt
mov
outsb
and
ja
pop
mov
lods
mov
shl
mov
push
shll
cwtl
xlat
add
add
jae
mov
jb
lcall
mov
arpl
clc
xchg
jge
js
mov
add
mov
push
out
imul
xchg
dec
pop
imul
pop
jo
out
push
fs
loope
pusha
icebp
mov
xor
cmpsl
jno
jl
xlat
cld
enter
inc
and
fisttpll
popf
addl
jno
cmp
dec
dec
inc
rcll
dec
in
test
aaa
inc
lods
negl
inc
in
test
xor
push
rcr
dec
jle
or
pop
xor
add
xor
scas
ja
orb
scas
and
mov
xchg
out
sub
xchg
mov
movsl
test
fdivp
jne
push
sbb
mov
push
mov
lret
cmp
xchg
nop
sbb
jo
mov
mov
faddl
out
lods
cli
dec
pop
js
add
or
nop
imul
xchg
in
cmp
push
jecxz
ds
jb
xchg
pop
arpl
dec
inc
out
or
leave
enter
pop
and
inc
mov
dec
jne
cmp
test
cmpsb
add
inc
inc
and
in
fldenv
movsl
xor
gs
pop
sbb
fisubl
data16
jg
sub
lret
xchg
mov
mov
rcll
xchg
and
adc
or
fsubrs
movsl
test
inc
mov
fs
data16
fcompl
iret
int
clc
pop
and
in
xor
cmpsl
mov
mov
sbb
push
lret
mov
movsl
jmp
lods
loopne
or
push
cld
xchg
daa
ljmp
push
mov
je
push
inc
call
mov
xor
jmp
add
jo
mov
aaa
xchg
arpl
rcll
inc
clc
inc
sub
ljmp
jno
ret
jnp
stos
inc
xchg
dec
jbe
dec
adc
and
jmp
loopne
leave
scas
or
push
mov
into
sahf
push
repz
pop
xor
movsb
inc
pop
int
jle
sub
inc
and
adc
inc
or
push
sar
cmp
cmc
push
jmp
mov
ljmp
add
call
jbe
divl
test
pushf
out
jl
pop
cld
fcmovbe
sub
ss
push
xorl
pop
xor
fimull
out
cltd
sbbl
mov
xorl
scas
xor
nop
jae
inc
mov
cmp
fsubl
pushf
push
lods
pusha
out
mov
sbb
lods
loope
push
sbb
mov
cmpsl
arpl
cmpsb
cmp
mov
stos
idivb
ret
stos
add
mov
jno
insb
mov
popf
ss
jp
mov
out
mov
sti
add
sub
xlat
sbbl
lock
add
insl
add
or
sbb
loop
or
in
mov
add
fiaddl
loop
inc
xor
loopne
cmpsb
stc
inc
cmp
ljmp
xor
movsl
xchg
mov
ficomps
or
mov
sbbl
push
dec
xchg
je
sub
jle
jns
iret
mov
in
scas
xchg
mov
loope
fldenv
xor
repnz
mov
mov
xchg
cmp
lahf
idivb
aad
fs
pop
test
mov
adc
mov
and
fsubs
test
mov
pop
mov
test
xor
inc
daa
jg
dec
add
dec
or
ljmp
sub
push
leave
and
out
cmp
popa
pop
jmp
movsl
mov
jp
out
daa
roll
xchg
repz
repnz
test
mov
jns
ja
fistl
xchg
xchg
and
push
add
adcl
sbb
stos
aaa
fcmovbe
jae,pt
jb
and
aaa
es
mov
mov
add
dec
jmp
negl
in
mov
sbb
fidivl
mov
ja
mov
mov
mov
cmp
jbe
mov
mov
out
mov
mov
xor
xor
sbb
add
xchg
cmc
xchg
sbb
sti
in
fstp
icebp
sub
loopne
nopl
sub
mov
adc
adc
bound
inc
jle
pusha
mov
jmp
das
xor
in
leave
push
adc
lcall
sub
in
loopne
lret
out
imul
xlat
ss
mov
subl
jg
xor
mov
sub
out
mov
jne
int
or
dec
mov
fmull
sarb
inc
xor
mov
xlat
sbb
cmpsl
lcall
xor
cmc
lea
add
lcall
pop
je
cmp
or
popa
out
push
mov
push
add
mov
sar
pop
push
jg
leave
push
jo
ret
jge
dec
cmp
dec
cwtl
fbstp
mov
ret
xor
imul
lret
or
cltd
cmp
loopne
notl
and
and
int
negl
xor
jns
mov
lea
std
imull
lods
mull
movsl
jle
push
fwait
xchg
and
dec
out
mov
and
mov
xor
inc
jp
mov
leave
test
adc
lods
notl
or
sub
xorl
and
sub
sti
sub
out
mov
push
neg
xchg
xchg
mov
push
not
mov
in
jecxz
dec
fstpt
push
out
scas
push
inc
sbb
daa
std
repz
in
test
sbb
stos
mov
loope
mov
fiadds
testl
iret
adc
adc
push
shll
incl
mov
mov
cmpsl
fsubr
adc
sahf
pop
pop
out
shl
loopne
add
sub
xchg
sbb
scas
test
sbb
imul
inc
test
pop
or
dec
ret
pushw
xchg
ficoms
push
outsl
test
shlb
cmc
pop
and
pop
test
loope
push
dec
mov
add
xchg
pop
mov
sarb
fildl
outsl
pop
mov
lret
mov
das
scas
dec
ljmp
insl
andb
sub
movsb
sub
into
jp
negl
cmp
hlt
test
ss
in
les
out
jb
jmp
std
mov
jp
dec
mov
adc
adc
popf
xor
dec
rolb
sbb
xor
fwait
sti
fs
mov
cmpsl
testl
mov
push
mov
incl
xchg
jo
push
loope
notl
dec
or
fbstp
pushl
nop
xlat
cld
cli
lret
in
sti
add
fwait
inc
mov
cltd
add
xchg
xchg
xchg
push
jbe
add
mov
f2xm1
xor
sbb
nop
out
enter
aaa
mov
inc
call
sub
ljmp
pop
pusha
aaa
dec
imul
iret
test
cmovp
xchg
negl
loop
popf
gs
sub
fimuls
inc
int
std
enter
sbb
pop
jb
xor
jns
stos
out
rorb
xlat
nop
sbb
push
call
mov
int3
xor
xchg
cwtl
imull
pop
mov
cmc
notl
fistps
sub
in
xchg
xor
idivl
xor
test
mov
notl
ficompl
jb
in
and
cmp
popa
daa
cmp
mov
push
dec
add
insl
pushf
pop
xlat
jns
cwtl
aaa
mov
cmc
out
dec
adcl
scas
inc
dec
neg
sbb
test
jnp
pop
adc
movsl
or
cs
idivl
sub
bound
pop
ja
mov
sub
loopne
notl
and
mov
pop
or
jnp
add
add
mov
ret
mov
mov
xor
cmpl
pop
test
fildl
shrl
idivl
pop
mov
dec
test
ret
fwait
mov
push
push
loop
cmp
xor
dec
rcll
sti
idivl
insl
lret
scas
insb
add
lret
not
notb
ds
ss
jp
cmp
movsb
mull
sbb
aas
and
lahf
call
ret
or
rcll
and
ja
inc
testl
mov
notl
jo
out
mov
ds
and
es
dec
cld
xor
xor
in
push
mov
pop
das
fidivrs
cmp
aaa
mov
push
dec
jns
es
adc
xchg
mov
hlt
and
mov
mov
test
push
or
sahf
fbld
jge
jb
out
stc
out
sub
test
sub
xchg
add
leave
add
xor
xchg
jp
insb
test
inc
lock
xchg
popa
xchg
adc
mov
adc
or
aaa
cmp
out
pop
enter
sub
repnz
jb
insl
int3
testl
sbb
cltd
jbe
pop
lret
lcall
pop
mull
jo
or
ret
sbb
imull
mov
ss
ja
xor
iret
in
mov
pop
dec
or
negl
adc
inc
add
rcrb
nop
addb
out
in
pop
fildll
sbb
negl
stc
adcl
stc
div
cmp
inc
or
notl
hlt
dec
pop
dec
dec
bound
call
testl
sub
inc
enter
js
mov
jne
pushf
test
hlt
xlat
cli
icebp
fistpll
shll
notl
clc
xchg
imull
sahf
mov
push
icebp
lds
mov
iret
xchg
negl
sarl
rcrl
js
fldenv
sub
testl
or
adc
ret
jns
out
lcall
or
cli
lea
divl
idivl
fdivs
pop
pushf
add
mov
xor
dec
iret
cmp
loopne
into
mov
pop
push
popa
mov
or
fdiv
push
ss
push
scas
mov
and
pop
adc
jno
insb
push
xor
in
dec
pop
add
negl
or
lea
decb
mov
negl
daa
lods
jbe
popa
rep
adc
pushf
cwtl
dec
testl
lahf
cld
or
and
mov
dec
call
sub
loopne
div
xchg
clc
jne
jge
push
divl
push
lods
xchg
xchg
dec
out
test
and
adc
fs
aaa
adc
jo
push
icebp
sub
testl
test
mov
inc
sbb
jnp
push
psubd
inc
jge
movsl
mov
mov
add
sbb
divl
adc
sbb
negl
int3
ret
jmp
negl
jecxz
adc
xorb
cli
sbb
mov
cmpsb
into
sub
jecxz
scas
push
negl
in
pop
cmpsl
js
push
add
imull
movsb
notl
and
or
push
mov
aaa
mov
xchg
xchg
mov
pop
adc
insl
add
fcomp
cmp
sbb
xor
gs
sub
cmpsl
or
test
jmp
add
sahf
clc
mov
ret
add
jb
mov
mov
sbb
mov
fst
out
repz
jg
inc
testl
je
in
sbb
or
mov
mov
insl
jmp
adc
in
fldcw
mov
repnz
les
cwtl
add
idivl
xchg
lahf
aaa
dec
xor
fcoml
cmpsl
mov
push
pop
jb
fcomip
cs
idivl
leave
adc
mov
sbb
sub
idiv
xor
fdivs
addr16
cwtl
xlat
dec
lcall
sub
inc
std
out
nop
xchg
sbb
divl
ja
jb
fmull
cmp
xchg
ficomps
cld
jnp
xchg
and
divl
inc
ja
xlat
icebp
ret
lods
push
lret
flds
aaa
clc
mov
ss
pushf
pop
jno
jmp
test
xchg
jp
mul
popa
rol
xchg
or
sbb
mov
pop
sub
aaa
stos
pop
icebp
cltd
je
in
loopne
test
imull
add
arpl
lahf
mov
test
notl
cwtl
cmpb
stc
fildll
adc
cmp
adc
je
dec
ja
lea
imull
pop
sbb
xchg
out
icebp
jmp
mov
sti
loop
add
cmpsl
sbb
mov
xor
pop
lret
adc
popa
shl
fs
or
cli
xchg
idivl
add
testl
pop
lods
notl
jnp
sahf
or
sub
push
sub
cwtl
push
cmp
mov
testl
call
mov
cwtl
insb
and
mov
or
xchg
dec
lret
out
jbe
jp
std
push
inc
arpl
out
test
adc
mov
rclb
sbb
mul
sub
mov
adc
hlt
imul
add
jns
fadd
std
jl
jne
mov
aad
sbb
cld
cltd
fcoml
in
jmp
es
lcall
testl
add
lahf
notl
xchg
push
test
cwtl
xchg
hlt
sbb
mov
sub
addr16
sbbb
mov
fcomp
divl
aas
out
test
stos
es
jle
loop
dec
neg
inc
imul
or
dec
bound
sbb
sub
movsb
mov
gs
add
xchg
notl
or
or
xor
jmp
movsb
imul
mov
mov
testl
out
out
xor
pop
sbb
pop
jae
cltd
pop
pmulhw
sub
popa
inc
mov
mov
test
xor
mov
in
sub
and
movsb
loope
adc
lahf
rcr
or
add
xlat
idivl
push
test
lock
imul
insl
and
or
push
cmp
cmpsl
sub
stc
jmp
fcompl
xchg
cltd
lea
negl
jg
mov
xchg
data16
and
nop
pop
repz
mull
jne
int
lods
notl
or
cmp
sahf
dec
jg
lock
pop
fnstsw
jecxz
add
lret
negl
out
lea
xor
cmp
arpl
pop
rolb
push
jge
dec
repnz
dec
jbe
notl
outsl
sub
push
xchg
inc
and
add
xlat
mov
inc
jmp
jge
push
fdiv
xlat
mov
lods
pop
xor
not
mov
movsb
adcb
push
push
notl
mov
lock
add
scas
ss
mov
sbb
fldt
mov
sub
xor
testl
js
pop
pop
adc
mov
pop
push
jecxz
shll
fsubr
test
fsubs
push
pop
inc
mov
scas
add
xor
fstpl
or
jne
fld
not
jge
adc
pop
lret
loope
imull
scas
ds
hlt
jbe
idiv
pop
aaa
js
xor
fnstcw
das
enter
testl
mov
int3
sub
cmpsb
iret
jmp
ret
notl
dec
in
scas
push
repnz
push
es
clc
out
fldt
adc
mov
cltd
jae
fstp
insb
test
mov
or
out
adc
push
mov
not
and
lahf
cwtl
inc
roll
lds
dec
jmp
mov
sub
jbe
loop
divl
push
inc
push
pusha
jecxz
jmp
movsb
out
xchg
inc
pop
ds
and
push
out
ljmp
shl
mov
std
mov
push
test
sub
mov
movsl
neg
inc
cli
out
push
stos
mov
ja
popa
int3
std
xchg
fildll
int
neg
test
call
xlat
mov
mov
idivb
sbb
popf
in
cli
cmpsl
nop
negl
pop
out
xlat
mov
test
ror
jmp
aad
pop
jnp
adc
imul
mov
frstor
or
push
sbb
notl
pop
sbb
mov
mov
sbb
xlat
lods
leave
sbb
cmp
mov
cmp
push
push
gs
push
sbb
push
dec
sbb
testl
adc
das
imul
and
pop
lcall
push
idivl
and
cld
loope
xor
pop
loopne
xchg
dec
orb
cmp
or
je
pusha
fcomp
jns
push
imul
push
ljmp
inc
pop
fildll
imull
inc
jmp
mov
notl
int3
cmp
mov
icebp
xstore-rng
cmpsl
inc
pop
negl
out
ss
lret
in
mov
jle
mov
sahf
js
das
adc
or
cmp
sbb
lea
mov
inc
jecxz
and
je
leave
mull
xor
inc
fstps
sbb
jmp
pop
jecxz
mov
mov
adc
lcall
cmc
push
push
xchg
mov
in
lock
arpl
mov
cmp
sub
mov
fnstsw
pop
xchg
pop
dec
add
out
adc
sti
orb
push
add
lds
dec
sbb
xor
lods
pop
push
js
push
xor
das
repnz
add
pop
push
ja
pop
mov
push
add
and
push
loope
push
lock
xlat
rdtsc
add
loop
xchg
out
ret
pushf
xchg
iret
shlb
fistpl
shl
jl
ret
push
lock
fst
int
stos
mov
jg
cli
jae
jmp
pop
pusha
sub
sbb
fidivrl
inc
jl
rcll
mov
arpl
push
or
repz
es
je
fimull
mov
stos
pop
ja
sbb
movsl
scas
jno
scas
movsl
push
xchg
cmpsl
xlat
in
aaa
scas
ja
adc
addr16
aam
jae
pop
xor
fisubrl
enter
out
in
outsb
imul
dec
inc
or
cld
mov
imul
test
insb
and
fldl
xor
inc
jge
ret
outsl
cmp
push
iret
cwtl
inc
movsl
mov
push
dec
mov
mov
in
sub
xchg
jmp
call
jb
inc
xlat
repz
movsb
pop
loopne
dec
adc
in
cltd
outsb
or
adc
xchg
out
call
xchg
jecxz
mov
sub
jae
jge
and
popa
testl
fs
shll
out
sbb
pop
pop
and
mov
vmread
lahf
mov
sub
lcall
movsl
sub
xchg
pusha
inc
push
push
jne
xlat
and
inc
fistps
aaa
test
xchg
mov
dec
xlat
mov
xchg
enter
outsl
or
daa
arpl
call
in
divl
pop
je
mov
out
mov
jnp
fildll
es
sub
int
negl
testl
mov
inc
mov
mov
or
inc
pop
adc
mov
dec
lcall
leave
inc
jnp
inc
ja
sahf
call
test
mov
movsl
pop
cmp
mov
xlat
mov
jns
sarb
mov
fidivl
fildl
pop
xor
mov
pushf
push
insb
push
pop
jno
inc
pop
outsb
push
das
notl
add
pop
jbe
pop
jmp
push
loope
push
lods
xchg
out
inc
dec
jle
cs
je
sub
js
fldl
nop
xchg
testl
cmp
push
sbb
lock
push
bound
fnsave
daa
or
push
stos
es
out
nop
mov
dec
adc
jae
ffreep
cs
jnp
in
testl
aaa
shlb
mov
push
adc
inc
mov
fwait
cltd
negl
mov
mov
pusha
pop
adc
dec
mov
xchg
movsl
movsb
inc
imul
lods
negl
mov
dec
push
scas
lret
xchg
pop
stc
scas
addr16
imul
xchg
arpl
pop
and
loop
mov
jb
mov
push
inc
sti
sbb
mov
movsb
das
cmp
movsl
cld
inc
fucomp
xchg
out
and
imul
lret
inc
pop
xchg
ss
sbb
fstpt
idivl
mov
mov
sub
or
test
repnz
jmp
test
mov
out
push
shrl
idivl
inc
mov
divl
mov
mov
movsb
idivl
test
in
pop
ss
mov
sbb
mov
nop
inc
aam
les
fstps
pop
xor
sti
push
cli
imul
idivl
int3
cmp
mov
mov
pop
cmp
or
fs
shlb
iret
push
pop
repnz
adc
jno
cmc
push
pop
adc
add
mov
aas
jecxz
out
push
clc
notl
inc
ret
sbb
push
mov
setl
and
test
int3
pop
movsb
ss
and
sub
mov
negl
push
imul
test
testl
ljmp
cmp
test
scas
arpl
push
sarb
out
sub
mov
test
inc
jno
je
imul
push
adc
push
lret
stos
cmp
pushf
je
and
mov
negl
mov
out
testl
repnz
cmpsl
add
jmp
pop
mov
jmp
mov
lods
pop
testl
imull
jg
je
mov
inc
test
jns
sub
bound
test
mov
rolb
neg
jnp
pop
adc
cmpsb
push
and
ret
stos
lods
push
dec
xor
sbb
gs
sbb
cmc
jae
pop
mov
std
in
idivl
jmp
bound
aam
hlt
dec
imul
dec
pop
xor
mul
inc
sub
into
leave
popa
xlat
mov
sub
dec
jb
mov
dec
mov
dec
ds
cld
in
jne
mov
add
dec
lds
and
mov
mov
sub
imul
xor
aas
mov
testl
mov
pop
pop
outsb
cmp
jo
sub
mov
lahf
lods
or
inc
xchg
sarb
std
in
testb
mov
push
call
fistpll
fiaddl
dec
arpl
not
imul
mov
movsb
mov
dec
sahf
or
jns
movsl
cmp
dec
push
ljmp
push
mov
adc
stc
enter
jmp
shl
sbb
and
hlt
lds
negl
jbe
cltd
pop
rolb
out
mov
pop
pop
imul
add
nop
ret
xchg
push
cmpsl
jae
pop
or
xchg
mull
inc
data16
idiv
mov
aam
or
inc
pop
jnp
and
and
std
aaa
iret
ret
std
inc
ljmp
cmp
pop
notl
push
mov
dec
outsb
ffreep
jle
push
rcll
xor
bound
xlat
les
mov
push
xchg
jne
jecxz
in
fcmove
jo
push
fimuls
std
lret
adc
cmc
js
jnp
adc
sub
xchg
lret
inc
stc
sahf
fdivrs
data16
loope
adc
pop
or
jmp
sbb
enter
divl
pop
cmpsb
in
xor
mov
add
inc
add
mov
testl
fmul
xchg
jne
xor
shl
ret
sub
cmc
imul
xchg
lock
stc
testl
and
idivl
fnstenv
sbb
lods
mov
lcall
mov
test
dec
addb
fs
adc
punpckhdq
clc
lock
mov
pop
fdivrs
mull
mov
mov
mov
lret
cmp
es
test
mov
pop
mull
adc
ret
and
movsl
not
inc
popa
inc
sub
mov
imull
pop
and
dec
stos
cmpsl
testl
mov
out
xor
jl
int3
subl
push
mov
mov
add
pop
cmc
ds
das
loopne
xor
jecxz
mov
mov
push
or
icebp
inc
jge
iret
sbb
out
outsl
notl
cltd
cmp
mov
adcl
hlt
out
push
xor
je
mov
jnp
xchg
out
call
sub
es
dec
lcall
xor
push
xchg
jbe
test
xlat
mov
and
sub
idivl
jl,pn
ja
and
or
push
ss
insl
or
push
dec
mov
data16
ss
lcall
insl
inc
push
pop
jp
out
sub
add
adc
push
aaa
adc
cmp
loopne
and
inc
popf
lret
cwtl
mov
stos
icebp
cmp
test
cs
mov
add
popf
ljmp
loopne
leave
xor
das
mov
dec
fdivrs
stos
loope
pop
ret
mov
xlat
filds
or
jmp
sub
data16
push
xchg
out
int3
mov
ja
divl
fisubs
fcom
ss
fs
insl
xchg
bound
pop
xchg
cmp
fnsave
int3
sbb
xor
out
neg
movsl
lods
xor
mov
xor
cmp
ficoml
cmp
cmp
fnstcw
in
lret
jmp
push
sub
outsl
inc
fs
cmp
fimull
push
mov
sahf
xor
cmp
fs
addr16
outsb
push
ljmp
xor
negb
add
cltd
push
adc
push
sahf
adc
mov
push
fbstp
in
jle
jg
icebp
idivb
cmp
inc
fs
out
ljmp
pop
daa
inc
push
xchg
sub
ljmp
lcall
cmp
in
jno
inc
inc
mov
dec
add
lds
push
fwait
ss
mov
int3
mulb
push
mov
jb
jne
push
imul
or
and
clc
frstor
adc
dec
add
push
daa
icebp
icebp
stos
jmp
sub
pop
or
repz
add
mov
pop
fisttpl
loop
add
cltd
movsl
adc
sbb
icebp
sub
icebp
or
push
jmp
mov
or
inc
aas
jnp
sti
cltd
movsl
push
mov
movsl
sbb
jns,pn
int3
xchg
push
mov
outsb
ret
sbb
mov
pop
pushw
movl
cmpsl
jae
mull
push
pop
mov
pop
dec
xor
dec
icebp
sbb
outsb
jg
mov
mov
setl
addr16
adcl
in
xor
das
aaa
mov
sub
iret
fimull
in
inc
or
sub
stos
pop
push
mov
xchg
mov
mov
or
cmpsb
jae
and
fs
cwtl
mov
xchg
mov
inc
mov
dec
idivb
jns
je
push
aad
out
mov
scas
mov
mov
add
incl
movl
test
dec
xor
inc
movsl
or
push
out
mov
sub
push
test
mov
je
jmp
xchg
pop
in
into
insl
and
mov
xchg
inc
loopne
lds
out
inc
and
jae
mov
lcall
mov
inc
inc
shll
bound
xor
and
mov
mov
xor
xor
cmpsb
xchg
dec
inc
jbe
cmc
sbb
mov
dec
adc
xchg
out
inc
push
dec
sbb
add
ljmp
mov
mov
pop
cmp
jmp
repz
inc
fs
sbb
rcr
xchg
test
jg
ljmp
xchg
sbb
loopne
push
cmp
sub
xchg
or
sbb
negb
and
add
repz
or
pop
mov
lods
out
ret
loop
jbe
icebp
notb
fisubl
push
and
ljmp
notb
insb
dec
popf
sbb
outsl
or
out
sbb
cmp
mov
cltd
pop
dec
jno
dec
pop
lods
roll
dec
inc
pop
mov
out
add
and
pop
das
fs
sti
push
add
add
sbb
push
xor
outsl
hlt
in
dec
or
out
out
ja
aaa
pop
arpl
stos
xchg
shl
inc
out
test
add
lret
cmp
mov
outsl
ficoms
hlt
pushf
add
dec
cwtl
or
mov
lods
pusha
sbb
imulb
scas
and
cmc
push
test
mov
xchg
int3
rcrb
shlb
rcll
pop
mov
mov
data16
mov
das
and
lahf
jl
loopne
adc
scas
cli
and
mov
xor
andl
dec
sub
loope
subl
push
inc
sub
repz
lea
jecxz
gs
ja
paddsw
loop
fisubl
movb
ret
outsl
mov
lcall
fcomp
je
adc
sbb
lods
gs
clc
pop
jb
jae
mov
fisttpl
pop
or
testl
xchg
jecxz
mov
gs
jne
xchg
lock
xlat
aas
pop
gs
imul
dec
jecxz
imul
mov
jb
stos
xchg
insl
xchg
data16
aaa
inc
das
movsb
fists
data16
cmpsb
addr16
push
gs
into
insb
xchg
and
popf
push
ljmp
xor
aaa
gs
jmp
cld
sti
ja
mov
push
cmp
ja
mov
ficoml
lret
xor
jno
and
inc
addr16
stc
jnp
in
sti
adc
mov
loop
imul
loopne
out
xor
fs
sub
out
jb
sub
dec
mov
xchg
test
fistps
in
enter
adc
mov
mov
pop
mov
add
cld
ret
imul
sarl
in
fcmove
scas
mov
jno
fs
lea
cld
ljmp
out
std
jmp
push
lods
pop
lods
xchg
popf
and
shlb
movsl
test
int
outsb
lds
cmp
xor
shlb
pop
fidivrl
clc
xchg
bound
out
and
in
inc
dec
inc
das
imul
and
aaa
dec
mov
into
test
inc
and
mov
les
rorl
cmp
in
add
orb
inc
pop
adc
pop
jne
push
push
or
mov
mov
insl
cltd
cmp
sub
inc
int3
rcrb
vcvtsd2si
test
gs
in
push
jmp
dec
lds
jbe
jo
ljmp
aam
sub
scas
int3
push
or
iret
jbe
out
scas
push
mov
jmp
sbb
mov
jge
popa
pop
mov
sbbb
xor
in
sbb
pop
int
fwait
mov
lret
jne
adc
ljmp
sub
mov
cmp
lock
ljmp
cs
jbe
ret
imul
adc
mov
or
les
or
lods
adc
mov
or
loope
loope
pop
push
mov
and
in
mov
pop
inc
cwtl
dec
in
and
idivb
push
out
lods
addr16
ljmp
push
addr16
test
mov
cltd
insb
pop
dec
cwtl
lcall
inc
or
call
mov
lock
popf
jp
ror
hlt
popa
jmp
xor
adc
aas
gs
repnz
xor
shrl
push
dec
ljmp
ja
xchg
cmp
fdivrl
mov
mov
sbbb
mov
mov
std
mov
test
out
andb
adc
add
pushl
sub
mov
hlt
jbe
into
outsb
mov
add
cltd
inc
jo
cs
add
test
mov
cmp
mov
adc
lcall
testl
int
testl
adc
neg
repnz
out
cmpsl
sub
js
mov
sbb
scas
mov
pop
sub
mov
pop
sub
not
push
xchg
mov
xor
xchg
fcmovu
idiv
in
mov
int
mov
inc
mov
cmp
int3
inc
push
add
iret
in
add
or
adc
hlt
inc
scas
xlat
pop
daa
push
pop
sbb
rorb
js
mull
push
arpl
andl
pop
rcll
imul
clc
lock
dec
jae
mov
sbb
movsl
adc
es
notl
ret
sbb
ss
sbb
push
ds
jecxz
push
pop
in
sub
xor
mov
fcomps
cmp
ret
add
lcall
daa
push
dec
insb
pop
sbb
mov
or
scas
testl
adc
mov
push
and
repz
int3
nop
idiv
fwait
mov
fcoms
or
sub
cmc
icebp
and
bound
push
jb
xor
push
push
mov
fnstcw
xchg
jbe
aam
push
push
in
xchg
mov
or
ficomps
push
ds
arpl
jecxz
sbb
hlt
ss
mov
inc
imull
test
popa
mov
jmp
sbb
push
aad
testl
cwtl
jmp
in
pop
push
fdiv
sbb
loop
mov
or
test
adc
stos
mov
xor
xchg
fdivrl
lret
idivl
mov
jae
mov
pop
and
adc
mull
test
pop
inc
pop
jecxz
adc
jge
js
add
fld
leave
jo
sbb
call
cmpb
jae
sbb
push
cmc
mov
gs
dec
cmp
mov
add
das
jne
xor
mov
mov
add
add
out
cmp
pop
xchg
mov
push
outsl
and
inc
in
in
adc
arpl
jle
pop
adc
jecxz
sub
mov
sub
and
clc
jmp
aaa
out
pop
pop
mov
out
inc
addr16
mov
out
movsb
loope
sub
es
hlt
je
cmp
mov
and
or
js
push
testl
sahf
xchg
std
testl
adc
xlat
push
movsb
xchg
pop
cli
cmp
sbb
pop
jae
pop
mov
mov
inc
int3
add
jns
xlat
cmp
fildl
sub
divl
into
sub
mov
mov
movsb
jnp
imul
outsl
not
dec
mov
mov
mov
aas
negl
sbb
into
fxch
idiv
push
js
cmp
pusha
mov
cmpsb
xchg
out
xor
add
scas
not
sbb
dec
imul
xchg
lods
xchg
rorl
daa
inc
mov
jno
add
hlt
test
repnz
dec
adc
sahf
loop
negl
lods
shrl
negl
pushf
sub
mov
mov
rolb
nop
ss
nop
pop
adc
sub
call
mov
sub
xor
lock
xchg
cmp
loop
cltd
sub
lds
jbe
dec
jae
inc
divl
mov
push
xchg
add
ja
inc
xorl
add
mov
fdivs
jnp
xchg
std
out
mov
mov
addr16
mov
mov
jbe
mull
cmpsb
les
pop
cmp
test
jl
push
das
pop
mov
in
fiadds
push
outsl
add
out
dec
jno
into
icebp
arpl
addl
shrl
cmp
orb
pop
sahf
sub
pop
add
loope
xor
xchg
push
pop
jle
push
out
ja
test
ds
and
mov
ret
pop
dec
gs
push
imull
mov
mov
push
ficoml
jmp
mov
insb
xchg
rorb
mov
push
xor
in
fdiv
daa
cmpl
aaa
test
sub
mov
adc
and
lret
xchg
mov
cmp
xor
jl
mov
or
aad
sub
mov
xchg
cmp
test
jcxz
xor
jl
xchg
icebp
and
xchg
shrb
imul
loopne
fcomip
xlat
cmp
inc
xchg
jb
xlat
sar
rorl
xchg
outsb
adc
fists
stc
test
nop
cmpsl
mull
iret
mov
push
mov
jno
pop
imul
test
jmp
testl
mov
push
rcrb
add
notl
xor
xor
mov
adc
mul
stos
cmp
or
clc
std
in
jmp
out
adc
icebp
pusha
ja
xchg
cmp
out
mov
xchg
push
push
inc
mov
xchg
rcll
or
and
testl
leave
pop
sub
push
nop
dec
jmp
or
notl
loope
jne
inc
ds
push
sub
dec
cli
popf
mov
addb
stos
mov
enter
cli
fiadds
cmpb
adc
inc
and
sbb
ss
cmpsb
out
inc
jbe
insb
xchg
mov
inc
cmp
ss
lahf
divl
loop
fmul
popa
cmp
sar
cmc
imul
dec
notw
push
subl
push
xorl
push
inc
add
inc
xchg
jp
testl
cmp
adc
jge
pop
sub
sbb
cld
sub
lcall
push
sbb
and
push
adc
cmpsl
idivl
and
pop
aas
push
cmp
push
push
cmp
jne
aaa
push
lcall
fdiv
and
lds
mov
testl
jg
mov
mov
xor
xchg
divl
cmpsl
daa
ja
dec
jecxz
cmp
negl
pop
testl
sarl
mov
aad
push
add
aam
pop
nop
add
enter
sbb
shll
xchg
stos
pop
push
mov
xor
movsl
dec
idivl
das
cmc
add
in
dec
bnd
dec
repz
pop
cmpxchg
pop
mull
test
push
out
dec
mov
mov
call
stc
push
jp
sub
xchg
lcall
dec
psubsb
ret
mov
adc
mov
cmpsl
mull
sub
mov
mov
loope
xchg
outsl
pop
out
cld
push
nop
xor
and
mov
jns
jmp
das
push
sub
cld
sbb
xor
mov
lods
pop
dec
cs
jl
in
push
outsb
cwtl
push
jb
daa
lret
push
sub
mov
leave
sbb
add
notl
testb
or
mov
pushf
dec
movsb
ret
cs
or
lret
jecxz
testl
adc
pushf
or
nop
xchg
push
jmp
loop
or
mov
lret
enter
push
sbb
xchg
loope
int3
jecxz
mov
xchg
and
fadd
mov
testl
mov
jb
mov
add
daa
aaa
fdivs
cwtl
lea
dec
jb
adc
fwait
mov
ja
fsts
idiv
mov
sbb
daa
xor
enter
sub
pop
scas
dec
pop
mov
popf
testl
mov
xchg
jbe
div
jle
mov
push
cmp
rcrb
out
jbe
arpl
add
aam
mov
push
dec
lret
rcll
pop
pop
pop
pop
cmp
xchg
mov
icebp
inc
xchg
dec
xchg
mov
out
movsl
in
sub
fdivp
ja
cmc
lods
adc
jg
neg
xor
test
imul
dec
flds
negl
push
mov
and
lret
ror
xor
in
test
sbb
test
test
push
pop
xor
je
dec
xchg
data16
cwtl
add
jae
idivl
loop
loopne
cmp
bound
mov
inc
mov
xlat
push
fldcw
jle
xlat
push
sub
mov
pop
xor
cmp
mov
sbb
imul
test
adc
fildll
pusha
rcrl
lret
js
stos
lcall
imul
arpl
xchg
mov
sti
out
push
dec
fwait
inc
xchg
jge
cmp
push
adc
mull
inc
adcb
sbb
pop
push
jmp
xlat
adc
mov
lret
sbb
xor
mov
mov
cmp
mov
pop
inc
push
jno
jns
ljmp
fs
dec
repnz
pop
negl
sub
adc
testl
push
leave
or
movsb
in
pushf
notl
cmp
inc
fwait
cmc
divl
hlt
and
mov
pop
jns
mov
sub
and
mov
mov
shlb
in
popf
inc
pop
dec
stc
shrl
popa
imull
lret
jp
adc
fisttps
push
sbb
mul
loopne
cmpsb
dec
data16
or
aad
push
mov
lds
rcrb
out
and
sub
sub
popf
mull
inc
incl
and
testl
nop
pop
push
inc
pop
adc
cli
fadds
sub
ja
adc
int
fildll
in
mov
xchg
aam
fimull
xor
push
dec
inc
nop
call
ljmp
jnp
notb
lds
inc
cmp
push
sub
cmp
dec
fnsave
dec
shl
fsubl
sarl
dec
outsl
sbbb
negl
jnp
out
or
xchg
or
mov
scas
push
loop
lret
mov
test
and
pusha
out
jl
xchg
cmp
add
or
fimull
add
jbe
icebp
insb
or
jo
stos
imul
jl
fcoml
je
out
das
divl
movsl
pusha
ret
push
iret
std
pusha
out
fcoms
mov
fstps
insb
divl
subps
inc
mov
jns
jmp
xchg
jne
pop
int3
add
sub
cld
pop
jl
pusha
jae
repnz
popl
jmp
and
inc
sub
jmp
add
jecxz
imull
push
aad
push
mov
test
xchg
mul
push
push
sub
fcoml
jecxz
loope
jne
pop
bound
cwtl
pop
outsl
fistl
cld
cmpsl
dec
ss
mov
push
out
inc
adc
mov
orw
movsb
divl
outsb
testl
dec
add
pop
sub
in
sbb
jp
loop
push
in
mov
lods
out
xor
mull
out
data16
xchg
insb
xchg
outsl
cmp
xchg
cs
adc
dec
testl
shll
mul
jae
punpckhbw
pushf
aaa
testl
dec
dec
fcomps
inc
sahf
mov
xlat
stc
ja
xor
js
mov
dec
movsl
and
shrb
add
or
fnstenv
fstl
je
sbb
and
mov
fbld
cmc
inc
add
sti
pop
bound
in
mov
cmp
mov
ja
icebp
js
mov
add
pop
xor
xchg
dec
dec
adc
inc
nop
pop
jp
add
inc
pop
mov
cmp
push
out
out
pop
sub
jno
xor
push
aas
ja
xor
pushl
cltd
inc
xlat
jne
add
sbb
repz
jns
test
sub
or
clc
jge
dec
shlb
pop
and
bound
cmc
out
mov
mov
inc
lret
pop
nop
fucompp
inc
sub
movsb
jg
xchg
fisubl
mov
push
or
or
ljmp
hlt
mov
xor
inc
outsb
add
xchg
je
ret
pushf
cli
loope
les
cltd
mov
out
dec
dec
mov
jecxz
add
neg
arpl
pop
sub
adc
test
pop
ret
mov
adc
jb
shl
jmp
fildll
icebp
and
xor
xchg
mov
ja
aas
xchg
sbb
bound
test
jl
stc
xlat
pop
subl
fbstp
popf
xlat
mov
je
out
cmp
and
or
xor
rcrl
mov
jmp
inc
lods
jg
in
jns
loopne
and
ss
adc
fldt
push
dec
xchg
mov
pushf
xchg
xchg
jmp
and
out
mov
insl
in
jp
pop
inc
adc
xor
dec
mov
in
sbb
mov
sub
lock
jmp
hlt
icebp
jno
or
and
fs
pop
leave
out
xchg
push
stos
jnp
out
shl
testl
aas
lcall
fisttpl
cmp
lcall
mov
bound
pop
mov
negl
push
ljmp
mov
int
pop
mov
jnp
sbb
divl
insl
inc
imull
icebp
and
cltd
jmp
mov
ret
mov
add
mov
pop
divl
mov
loop
sbb
add
mov
dec
inc
insb
adc
push
jle
pop
inc
pushw
rolb
call
mov
mov
mov
sbb
mov
push
lods
fs
lds
fisttpll
inc
mull
cmp
cmp
loop
fimull
jg
mov
inc
hlt
inc
sbbl
int
imul
daa
inc
je
aaa
sub
inc
sbb
out
push
call
mov
clc
in
and
imul
xor
mov
lods
and
cli
lahf
mov
add
std
notl
popa
enter
lret
outsb
adc
pop
or
or
cmc
out
pop
push
testl
arpl
ja
mov
std
testl
inc
jg
aas
xor
pop
dec
xchg
addr16
sbb
loope
push
push
imull
push
mov
pushf
mov
sbb
addl
sub
mov
push
mov
call
in
add
ds
ret
and
xlat
push
cmp
mov
mov
negl
ljmp
or
sub
xor
cmp
aaa
out
cmpsb
jg
cli
ja
or
jmp
test
fcmovnbe
push
mov
idivl
and
adc
ds
aad
dec
push
stos
pop
idiv
cmp
sbb
sub
dec
push
xchg
jb
mul
and
push
je
pop
bound
out
pop
aam
ss
pop
lahf
cmpsb
add
cmc
jnp
cmp
add
dec
push
and
mov
sbb
xlat
pop
stos
lret
dec
inc
into
lcall
add
push
stc
icebp
cmpsl
arpl
into
in
mov
cmp
inc
jge
aam
outsl
movsb
fs
ss
pop
jbe
imull
stos
xor
es
xor
dec
nop
int
jbe
mov
inc
out
iret
not
leave
daa
cwtl
ret
xlat
cmp
xchg
mov
add
cmp
movsb
popa
fabs
gs
mov
data16
lahf
shl
sbb
decb
aas
cld
mull
stc
imul
add
mov
push
xchg
mov
scas
ss
in
fistpll
mul
cmpsb
int3
int
in
out
mull
pop
lret
loop
push
stos
mov
cmp
imull
jae
xchg
iret
jae
lret
xchg
lods
imul
out
fmulp
arpl
push
push
fstpl
cmp
nop
pushl
or
movsb
mov
ljmp
out
adc
cs
or
jns
negl
push
push
pushf
testl
movsl
aaa
jb
pop
adc
mov
cltd
mov
movsl
repz
pop
jl
divl
loope
xor
popf
lods
xor
das
pop
dec
or
lcall
ljmp
adc
sbb
fnstsw
cmp
ja
ret
movsl
mov
and
imul
fsts
pushf
ljmp
lock
fdivl
jbe
cmpsl
inc
int
cs
out
addr16
fsubrp
sti
loope
xor
into
out
std
jb
testl
mov
ja
sbbb
and
ss
sbb
mov
out
or
cmp
dec
fcmovbe
es
xor
xchg
mov
bound
les
aas
cwtl
loop
int3
mov
push
sbb
and
lahf
ljmp
pop
jmp
fisubrl
dec
jb
icebp
xchg
out
mov
in
xchg
aam
sbb
jle
jg
cmp
mov
fildll
sahf
stos
or
and
scas
inc
call
or
lock
incl
fidivrl
jmp
bound
adc
dec
cs
push
push
mov
lds
test
mov
cvtpi2ps
je
mov
inc
lock
outsb
iret
xor
stos
into
pop
push
pop
cltd
aas
inc
mov
sbb
idivb
insb
js
outsl
mov
adc
xchg
pop
pop
ljmp
xchg
pop
sub
in
icebp
inc
cmpsb
xchg
pop
scas
lahf
mov
mov
push
sub
mov
leave
repnz
and
daa
lcall
insb
repz
sub
loope
ja
and
out
dec
xchg
cmpsl
pop
in
xchg
in
movsl
cmpsl
sbb
fldcw
cltd
mov
test
scas
jnp
xor
sub
push
cmc
sub
xchg
clc
fstp
or
scas
fninit
lcall
inc
fists
icebp
scas
and
xchg
sub
loopne
js
sahf
call
clc
mov
nop
cld
pop
notl
adc
test
mov
xlat
dec
inc
mov
pop
push
cmp
adc
popf
daa
dec
out
outsl
lcall
and
jmp
inc
inc
shl
jo
test
andb
push
scas
stc
add
out
pop
xor
cmp
cli
fmuls
test
add
pop
sub
ja
inc
sub
mov
and
sahf
iret
divl
roll
push
xchg
pop
push
mov
testl
xor
xor
mov
rolb
dec
ret
idiv
dec
aad
mov
scas
push
mov
jb
movsb
fwait
xor
out
test
push
or
loop
ret
hlt
cmp
aad
pop
std
xchg
cwtl
leave
dec
mov
imull
push
daa
icebp
les
stc
pop
out
mov
jno
sub
pop
xlat
fdivrl
add
das
dec
or
jno
lods
les
imull
push
mov
addl
sbb
pop
test
lea
push
hlt
and
and
imul
or
insb
jne
or
or
xor
cmp
sbb
mov
pop
xrelease
mov
test
and
int3
sbb
je
cmp
sub
aas
or
cld
test
dec
adc
mov
pop
aaa
jecxz
repz
insl
xchg
push
pop
pop
pop
push
pushw
adc
out
movsl
and
inc
add
imull
inc
dec
xchg
notl
fdivrp
arpl
out
jb
sbb
xor
ss
icebp
xor
adc
imul
clc
stc
pusha
sbb
adc
cmp
cmpb
mov
mov
in
fwait
out
negl
test
jecxz
pushf
sub
testl
xchg
cmp
add
loop
out
inc
mov
repz
and
mov
ljmp
arpl
cwtl
movsb
sbb
jecxz
adc
gs
mov
aad
xorl
in
mov
xor
xchg
movsb
mov
cltd
insl
ljmp
mov
mov
mov
stos
dec
mov
jbe
jmp
pop
inc
imul
pop
ss
and
call
xchg
nop
xor
sbb
mov
sahf
fisubrl
fmuls
mov
push
aad
xor
pop
sbb
sub
shlb
jp
dec
and
mov
out
adc
xor
in
adc
insb
push
andl
repnz
fs
cmc
push
mov
cmp
ficoms
lahf
add
mov
jbe
xchg
lea
cli
cmp
cmp
mov
inc
jb
dec
mov
mov
and
push
inc
test
mov
das
ja
movsb
outsb
mulb
xor
push
leave
in
imull
push
mov
pop
mov
dec
and
cmpsl
shlb
sahf
scas
fwait
insb
jecxz
loop
fbld
adc
add
scas
sub
ds
std
mov
arpl
xchg
jns
pop
aad
test
negb
fmuls
das
negl
xor
stos
notl
mov
xlat
andl
jnp
mov
mull
inc
sub
mov
adc
jge
out
ja
popa
push
fstpt
fistps
fiadds
neg
push
add
adc
xchg
mov
add
hlt
testb
jo
out
dec
sub
ja
adc
fmul
fisttps
sub
mov
sbb
aas
rcl
mull
clc
pop
cld
pop
shll
cmp
cmp
rcrb
xor
push
shl
sbb
movsl
shlb
mov
stos
in
add
jl
jmp
imull
mov
jo
ret
shll
mov
nop
mov
mull
inc
imull
into
pop
stc
xor
pop
xor
mov
iret
popf
loope
testl
in
negl
daa
stos
xchg
and
imul
mov
sbb
dec
test
int3
inc
das
ss
movsb
cmp
sub
fcmove
xlat
loopne
les
icebp
pop
insl
js
inc
push
jmp
pop
xlat
cmpsl
ljmp
mov
adc
adc
xchg
imull
shrl
pop
call
or
repnz
or
xor
mov
jge
aaa
add
int3
inc
popa
mull
push
pop
decb
addb
inc
pop
ja
mov
mov
out
sub
mov
jbe
fmuls
mov
xchg
not
pop
and
xor
jge
idivl
or
ss
fsub
leave
pushf
out
push
mul
ror
hlt
cmpsl
jnp
pop
testl
push
ficomps
xorb
sahf
cld
scas
push
cmp
testl
cmp
idivl
in
dec
leave
testl
insb
sub
jle
hlt
inc
idivl
mov
loop
adc
out
stos
call
outsb
movsb
testl
ja
jno
test
jle
loope
imul
out
nop
xchg
cltd
jg
movsl
cmp
pop
xchg
popf
sub
aaa
pop
loope
sub
gs
sbb
testl
xchg
lahf
repz
mov
ja
mov
scas
int
xor
xchg
aam
jge
shl
push
dec
add
idiv
dec
imul
je
leave
clc
mov
inc
sahf
fcoms
rclb
pop
jo
cmp
fmuls
jne
mov
and
mov
sbb
jl
jb
xor
js
mov
clc
testl
out
divl
stos
xchg
das
xchg
call
inc
test
js
imul
out
push
idiv
mov
and
xor
adcb
mov
push
iret
cmpsl
jp
or
clc
lds
jnp
fimuls
sbb
pop
orb
div
sub
leave
outsl
in
aam
sub
out
jae
mov
xlat
out
xchg
inc
xchg
sar
mov
mov
stos
sub
int3
pop
pop
xor
jno
pusha
push
xchg
mov
jp
bound
mov
stc
adc
mul
lods
sub
ss
or
sahf
call
jbe
fucom
test
les
lock
sbb
inc
xchg
sbb
divl
dec
gs
xlat
insl
jge
xor
mov
xchg
je
addr16
pushf
mov
negl
loope
xor
repnz
pusha
cmp
ds
arpl
js
jo
pop
inc
shrl
shlb
incl
push
and
add
fsubrl
xlat
sbb
mov
jnp
mull
mov
stc
testl
add
cmpsl
dec
orb
mov
xlat
mov
negl
push
xchg
sub
push
sbb
push
jb
fidivl
gs
lret
imul
pop
div
insb
cmp
dec
notl
adc
xor
cmpsb
imul
divl
fcoms
iret
cmp
aad
or
imul
outsb
in
pop
testl
mov
push
cld
pop
std
mov
xchg
push
xor
lods
xchg
repnz
mov
xor
jbe
push
out
or
add
int
dec
xchg
ljmp
cwtl
sti
sbb
sbb
or
mov
push
mov
out
inc
mov
mov
adc
push
sti
xchg
std
test
xor
lcall
insb
dec
lret
xchg
adc
test
add
adc
xchg
pop
cmp
sub
in
mov
insl
add
dec
rcll
incl
mov
lea
adc
iret
cmp
pusha
lret
in
insl
mov
pop
mov
movb
jnp
xlat
sbbl
push
dec
fistl
mov
mov
lock
lods
or
and
ss
xchg
enter
mov
out
hlt
popa
aas
scas
lcall
int3
insl
push
add
repnz
or
mov
push
rorw
sbb
imul
push
pop
out
sahf
jbe
jmp
int
push
lea
inc
dec
out
testl
sbb
dec
fs
jb
cmp
loopne
mov
pop
ljmp
imul
jno
jbe
or
out
add
cmp
rcll
out
bound
xor
call
outsl
push
daa
aad
sub
stos
xchg
push
aad
xchg
repz
and
xor
cmp
insb
ljmp
in
mov
in
push
push
ficompl
push
lcall
mov
cld
mov
popf
or
ficompl
cs
pop
sub
nop
pop
iret
dec
mov
ja
jae
lods
imul
add
les
add
lahf
fimull
xchg
dec
push
stos
and
pop
cmp
lods
inc
ja
cmpsl
xchg
out
fsubrp
mov
dec
cmc
push
and
test
inc
imul
pop
test
or
rolb
xchg
into
xor
mov
xchg
ja
arpl
lcall
repz
sub
gs
sub
lods
ss
inc
popf
cwtl
ds
mov
dec
pop
ds
mov
movsb
hlt
les
cli
fdivrs
scas
mov
loope
fcmove
xlat
add
out
mov
mov
xchg
pusha
sahf
dec
jmp
mov
testb
in
adc
cmp
fsubrs
add
xchg
or
mov
jb
hlt
dec
push
ds
mull
inc
call
ja
jg
pop
xchg
or
lods
popf
inc
add
cmp
movsl
out
out
jne
xchg
cmp
arpl
push
testb
xlat
inc
test
dec
mov
out
xchg
test
loopne
jbe
clc
jl
cwtl
adc
imul
push
xchg
dec
mov
xchg
fcmovne
adc
iret
sub
push
push
gs
add
rolb
lds
sbb
mov
pop
mov
sub
push
fdivs
out
in
testl
add
ja
xorl
int
rolb
scas
arpl
pop
adc
andl
add
sbb
jge
les
sbb
lods
add
in
rcr
stos
jbe
and
stos
inc
xor
fwait
out
mov
adc
mov
cmpsb
mov
or
ret
loopne
or
sub
je
scas
aas
sbb
push
mov
inc
stos
in
movsl
mov
jmp
es
testb
out
and
push
pop
je
or
push
jno
xor
mov
outsb
xchg
arpl
mov
flds
xchg
in
mov
ljmp
mov
insb
insl
xlat
inc
mov
hlt
mov
add
jno
loope
imul
sbb
jecxz
rclb
popa
sti
lret
iret
xchg
mov
xchg
jbe
out
mov
cli
inc
flds
inc
fidivl
sbb
jb
leave
push
pop
xor
pop
scas
pop
in
popf
int
fcomi
insb
jp
data16
ret
lock
stos
jb
adc
xchg
pop
fsubrp
and
icebp
mov
and
mov
ds
gs
jecxz
inc
pushf
das
lods
cmp
mov
mov
loope
push
jo
in
push
cmpsl
cli
roll
gs
out
push
out
dec
rcrb
push
jp
pop
lock
movsl
xchg
push
dec
or
stos
aad
xchg
mov
fidivl
pusha
in
movsl
cmpb
push
jae
and
inc
mov
jnp
bound
and
ja
popa
xchg
mov
dec
inc
je
pop
mov
mov
push
push
jbe
mov
xchg
test
add
arpl
adc
int3
mov
mov
movsb
call
data16
sub
and
out
mov
iret
cmpsl
pop
add
out
dec
and
lds
pop
jp
xor
mov
enter
jle
inc
movsl
outsb
outsl
push
inc
subl
subb
jb
or
push
cmp
add
fisubrl
in
mov
xchg
and
or
cltd
mov
add
shl
nop
leave
inc
sahf
mov
out
mov
rorw
cmp
movsb
jns
outsb
sub
xchg
cmp
push
cli
xchg
je
in
sub
xchg
and
in
xor
sub
loop
add
pcmpgtw
xchg
fisubl
or
cmpsb
lods
imul
inc
js
cmpb
and
xchg
ret
aaa
mov
adc
pop
inc
sub
les
mov
sub
mov
mov
adc
sub
fcmove
rorl
aaa
jl
inc
and
pop
out
or
fst
cmpsl
sub
fdivl
out
cmpsl
and
ja
sub
inc
repz
movsb
scas
xor
sub
lret
jnp
fiaddl
mulb
inc
stc
xchg
mov
mov
sahf
mov
fs
mov
or
clc
jns
sub
xchg
sbb
jg
nop
in
jecxz
adc
arpl
movsl
repz
imul
rclb
fisttpl
jmp
cltd
sbb
arpl
outsb
jecxz
testb
movsl
scas
inc
scas
push
inc
std
mov
fiaddl
inc
jno
jns
icebp
xchg
js
hlt
lods
decl
and
adc
push
in
ljmp
fldcw
or
push
addr16
dec
or
or
xor
jo
dec
xchg
repz
scas
jnp
fiaddl
lock
loop
xlat
sbb
popa
pop
add
and
sbb
outsb
arpl
sarb
out
inc
lods
mov
addb
icebp
fs
icebp
fisubrl
lret
or
fdivrl
push
mov
div
xor
test
imul
cmp
xor
or
adc
cwtl
fcomp
add
xlat
scas
roll
add
repz
enter
or
lods
xchg
pop
adc
xchg
mov
pop
push
cmp
fnstenv
xlat
mov
xchg
mov
cmp
jnp
and
clc
mov
mov
repz
pop
mov
mov
dec
stos
outsb
mov
or
jae
cmp
pop
add
shr
inc
inc
xor
rorb
push
arpl
sub
les
mov
pop
pop
and
sbb
mov
sarb
stos
ficoms
iret
loope
mov
push
gs
into
imul
mov
cmp
inc
jno
mov
fidivs
xor
ficoms
rolb
jge
jmp
sahf
or
jp
pop
sbb
cltd
mov
jno
add
adc
push
or
or
jb
cld
mov
in
mov
ja
sub
fnsave
xlat
jb
or
and
lds
lods
int3
ja
lods
mov
inc
mov
in
xor
sub
inc
jo
xor
lds
adc
ss
icebp
movsb
test
and
adc
clc
movsl
movzwl
scas
sbb
int
mov
xor
fcomp
lods
cltd
and
dec
cmp
push
jecxz
insb
mov
mov
inc
lods
gs
mov
not
lret
add
imul
out
in
mov
inc
add
outsb
out
adc
push
iret
ret
jp
rcr
out
fs
cwtl
fcmove
repnz
pop
cli
jp
or
icebp
shrl
cmpsb
out
or
stos
scas
lret
or
mov
fimull
inc
in
test
lea
jp
insl
mov
xchg
sbb
mov
adc
dec
sub
or
fcmovu
cmc
mov
insb
in
jno
icebp
xchg
enter
test
xchg
cld
xor
imul
push
bound
adc
jle
adc
js
xchg
xchg
in
ja
xor
mov
in
xchg
jbe
or
jno
pop
icebp
dec
lret
mov
rorl
add
xchg
ror
mov
lea
icebp
push
lock
daa
pop
lret
or
sub
ljmp
cmc
cmc
cmp
mov
mov
or
xchg
xchg
lahf
sub
and
movsl
pop
mov
std
lock
std
imul
inc
andb
scas
cld
or
out
sub
add
lock
out
mov
fcmove
or
mov
jne
ror
push
ljmp
mov
stos
jnp
repz
mov
dec
sub
push
pop
ret
nop
int
sub
insb
subb
dec
orl
idivl
ljmp
je
xor
aas
add
pop
jp
lahf
jp
cmpsb
mov
xor
int3
sahf
mov
dec
ljmp
shrl
jmp
insb
jne
mov
jmp
mov
xlat
lods
push
test
mov
mov
imul
sub
xchg
mov
add
ror
fnstenv
cmp
sarb
int3
pop
dec
and
xchg
test
or
jnp
jecxz
dec
cmpsl
das
xor
popl
out
cmpb
lahf
fcomip
je
ret
test
or
mov
iret
cmpsb
and
add
out
sub
mov
incb
nop
imull
xchg
andl
xor
inc
testl
push
add
mov
cmp
fdivl
pop
inc
shrb
negl
mov
lcall
idivl
push
add
not
out
push
mov
testl
sbb
push
dec
repz
fildll
outsl
test
ss
ret
out
xor
adc
dec
aad
ja
adc
testl
xchg
cld
mov
jl
inc
in
not
sar
mov
in
cmpsb
sbb
mov
test
jecxz
nop
sbb
xor
mov
push
adc
neg
sub
test
xlat
jnp
test
adc
pop
cli
pop
adc
aaa
or
pop
cltd
inc
idivl
loope
pop
mov
inc
shll
xchg
pusha
adc
out
xchg
and
pop
shr
push
fsts
sbb
in
adc
jno
jbe
leave
push
movsb
xchg
jecxz
addr16
testl
ret
sub
jmp
in
fdivrl
push
and
xchg
pop
pop
mov
xor
mov
out
into
and
cmp
icebp
jg
sbb
out
push
fbstp
imull
out
mov
push
pop
sti
mov
loop
ret
notl
stos
and
mov
add
movsl
push
lods
aad
mull
add
inc
mov
push
movsb
dec
mov
lret
addr16
sbb
test
pop
lock
mov
xchg
out
and
stos
not
mov
stc
mov
dec
jne
jns
ss
xchg
fbstp
test
mov
rclb
repz
aad
lock
xchg
out
sub
push
imul
xchg
add
xor
test
lea
in
mov
mov
xchg
pop
or
test
ret
adc
mov
inc
ljmp
in
divl
lcall
mull
je
fdiv
sti
inc
fwait
jg
jmp
sahf
mov
dec
push
sbb
testl
pushf
int3
imull
cmpsl
int
idivl
or
jecxz
outsl
cmp
sub
out
cmc
loop
lock
xchg
dec
out
into
idivl
shll
clc
les
mov
jb
fcompl
mov
sub
jae
push
into
cmp
loopne
subb
sbb
shlb
xchg
push
stos
jl
push
dec
fbld
out
nop
negl
pop
incb
adc
sbb
or
mov
sub
popa
testl
add
pusha
iret
mov
dec
sub
jmp
testl
and
pop
out
xlat
ret
inc
xchg
mov
jae
push
adc
push
inc
xor
mov
inc
mov
std
mov
cmp
loop
ss
or
jecxz
and
bound
lea
push
cli
jmp
loop
jb
testl
fcoms
divl
cmpb
pusha
push
add
add
jbe
xor
mov
stc
addl
shlb
inc
imull
pop
xchg
sbb
cmp
out
and
or
mov
adc
mov
adc
mov
lods
movsl
push
push
mov
mov
sysenter
mov
pop
fdiv
lods
negl
dec
js
daa
sub
mov
in
or
adc
cmpsb
xor
loope
pop
mov
sbb
add
in
subl
add
add
in
ficomps
lock
adc
clc
and
xchg
popa
lahf
adc
shl
imul
cmp
or
push
je
es
flds
idiv
and
fs
js
stos
repz
xlat
adc
fstps
pop
xor
ds
hlt
roll
dec
mul
in
cmpsl
jp
leave
popf
notl
mov
lods
push
icebp
inc
fiaddl
fldcw
pop
mov
jno
dec
pop
test
in
jo
imul
jl
fs
ja
push
add
testl
or
lock
jmp
lods
push
repz
xchg
mov
scas
sub
out
imul
and
loopne
jl
xchg
mov
push
test
and
pop
divl
out
lret
hlt
lret
notl
stos
andb
inc
mov
nop
mov
ljmp
ret
ds
hlt
icebp
lods
pop
idivl
mov
jg
imul
test
inc
xchg
lock
add
fidivrl
idivl
pop
dec
push
mov
cmp
fwait
dec
in
sub
ljmp
mov
stos
mull
cmp
std
jmp
xor
idiv
push
dec
mov
mov
jecxz
lods
jecxz
sahf
test
idivl
or
inc
jb
test
inc
and
xor
ja
not
imul
jecxz
mov
push
int
lods
stos
scas
pop
fists
mov
imull
enter
push
xor
and
out
or
adc
and
inc
xlat
ljmp
sub
call
xchg
xor
das
in
cmp
scas
cwtl
out
repnz
sub
sbb
lret
mov
and
addr16
sbb
sub
arpl
adc
mov
test
pop
and
pusha
adc
xor
mov
mov
dec
idivl
ds
sbb
or
jmp
push
fdivs
xchg
mov
ss
scas
negl
insl
jg
mov
mov
cmp
and
mov
aaa
mov
es
addr16
out
int
sbb
mov
stos
jnp
fmul
xor
xchg
push
mov
rclb
mov
sub
mov
xchg
negl
clc
xor
cltd
jle
imul
pop
mov
pop
pop
jge
pop
mov
mov
mov
testl
jge
xor
cmc
push
fdivs
paddd
sub
xor
inc
or
sahf
xchg
test
repnz
ja
and
push
nop
sbb
mov
cmc
mov
add
in
dec
mul
jg
mov
scas
adc
testl
data16
fldcw
mov
testl
push
in
mov
movzwl
xchg
jmp
add
lock
jb
jno
jne
and
xlat
sub
jns
inc
mov
fildl
xchg
pushl
loopne
loope
mov
jle
ljmp
iret
pop
mov
rolb
xor
ss
int
out
push
iret
test
mov
jns
jecxz
pop
sub
xorb
mov
testl
push
mov
mov
inc
jne
maskmovq
mull
je
add
loope
xlat
jg
inc
cmp
mov
sbb
mull
pop
cmp
mov
pop
xor
daa
test
enter
or
imul
pop
mov
adc
lcall
dec
or
push
jae
vcvttps2dq
cmc
pushl
jp
sbb
xchg
push
push
jo
xor
lds
shll
imul
sub
idivl
mov
mov
fst
xchg
in
repz
div
jle
lret
into
sti
mull
jl
rcr
outsl
xor
hlt
mov
push
xor
sbb
leave
add
test
nop
lods
adc
push
jbe
fbstp
mov
inc
push
and
mov
cmp
ja
mov
fistpll
push
mul
cld
insb
or
push
jae
xchg
int3
shlb
pop
sub
cld
push
in
mov
fdivl
mull
into
lds
mov
or
add
xchg
int3
icebp
sbbl
fadds
or
adc
sbb
imull
not
out
loop
jo
jno
pusha
je
xchg
ja
and
repz
imull
cwtl
sbb
mov
jmp
dec
push
jbe
loop
fbld
pop
cmpl
and
jp
cltd
jne
shr
pop
mull
idivl
or
fwait
mov
cmp
divl
outsb
push
sbb
cmp
idivl
and
gs
mov
add
popa
xchg
pop
or
sahf
sub
mov
mull
movsb
cmp
mull
icebp
test
ficompl
mov
out
in
cmp
jns
jl
fisttpl
jmp
adc
idivl
shrb
mov
loope
pop
push
das
fdivrl
xor
pop
out
bound
cwtl
lret
mov
add
imul
inc
mov
add
jne
lret
sub
adc
pop
add
out
pop
and
imul
out
cli
mull
cmp
cld
mull
pop
stos
add
xchg
dec
fldl
out
jmp
jle
xchg
inc
in
hlt
das
adc
mov
sbb
jl
push
pop
jne
call
testl
call
in
flds
push
fistpll
out
sub
outsb
mov
or
jg
sub
out
dec
insl
in
jno
mov
push
hlt
out
lea
mul
stc
fisttps
pusha
fisttpl
clc
jno
push
sarl
mull
in
jne
cld
sbb
cs
std
and
jge
and
daa
lahf
push
inc
push
cltd
mov
outsb
xlat
mov
xor
mov
jno
mov
sbbl
lock
imul
jl
sub
mov
mov
rorl
adc
aam
enter
test
push
push
jmp
jmp
dec
test
add
mov
loopne
ja
outsl
icebp
scas
repz
scas
adc
mov
pop
pop
xlat
xor
add
ret
mov
ljmp
mov
lret
mov
lcall
mov
cmp
imul
jg
push
test
push
pop
xor
mov
xor
adc
or
lret
cmp
jb
inc
mov
andl
jecxz
lcall
pop
and
insb
pop
imul
outsl
pop
pop
loopne
ret
xor
inc
xor
sbbl
lret
sbb
mov
mov
add
in
pushf
adc
negl
lahf
sbb
push
xchg
outsl
flds
adc
loope
xchg
incb
fimull
push
ret
testl
je
adc
or
adc
adc
pop
pusha
lods
in
lret
jb
xor
and
not
or
mov
xlat
in
loop
out
inc
fcmovu
push
jp
loopne
imull
sub
inc
fwait
in
jae
and
mov
push
negl
mov
jne
lods
xchg
mov
xor
aas
mov
ficoms
loope
negl
cmpb
lahf
xchg
push
push
or
fsubrl
stos
les
xchg
scas
fisubs
or
push
negl
pop
mov
xor
add
daa
xor
adc
lahf
xchg
mov
ret
or
mov
jo
fdivrs
cmpsl
les
xchg
dec
adc
push
sub
cmpl
sub
mov
mov
imul
leave
xchg
sub
add
insl
iret
in
loope
jp
neg
dec
mov
lods
testl
repnz
stos
scas
jne
xor
or
pop
ret
rolw
in
jecxz
movsb
xchg
loopne
int3
fisttpll
inc
fiaddl
sahf
imul
pop
xor
idivl
mov
dec
add
mov
rcrl
inc
and
mov
cmc
lret
push
ret
mov
push
iret
dec
out
add
cmp
ss
and
jmp
fcomip
movsb
pop
xchg
popl
mov
push
cmp
stos
inc
mov
ffreep
lock
inc
xor
xchg
xchg
push
pop
dec
clc
sahf
negl
pop
cmp
fnstsw
psubw
add
or
addr16
jmp
push
xor
jmp
mov
outsl
xchg
cmpsb
aas
and
jae
cli
pop
test
testl
cmpsl
out
pop
add
call
das
incb
cld
pop
jle
into
fistps
push
je
out
fwait
add
negl
cmc
std
sub
sub
mull
add
and
lret
divl
sahf
mov
xchg
mov
and
fistl
leave
jne
int
xor
fdiv
add
nop
adc
test
sbb
jmp
ret
add
negl
or
lock
clc
pop
arpl
addr16
andb
pop
adc
jge
adc
fs
out
loopne
push
in
lret
jmp
adc
jb
inc
and
push
outsl
lock
mov
loopne
add
mov
pushf
mov
xlat
das
mov
jb
rcrb
sub
stos
sbb
pop
cmp
mov
fidivs
adc
enter
rcrb
xchg
and
loopne
jae
cs
xlat
push
ret
pop
pop
or
neg
lods
inc
xchg
cli
mov
xor
dec
in
sbbl
out
sub
push
dec
insb
pop
mov
xlat
rcrb
in
lret
push
clc
adcl
jge
lcall
lods
fucomip
inc
sub
divl
sub
scas
mov
ja
cmp
je
adc
outsl
js
leave
inc
dec
push
mull
pop
outsb
rcll
addl
lret
xchg
imul
fldt
aaa
imul
xchg
lea
imull
lds
sub
ss
mov
sub
cld
testl
fidivrs
mov
mov
jno
out
mov
xchg
mov
movsl
mov
test
sbb
xlat
push
in
or
xchg
cmp
pop
mov
mov
mov
xchg
sti
xchg
sahf
jo
jae
add
xchg
fwait
sbb
mov
pop
mov
stc
and
dec
mov
push
mov
jg
sub
idiv
mov
mov
neg
push
push
out
pusha
mov
addr16
add
mul
adc
iret
jae
lock
out
shlb
or
addr16
insl
mov
jge
fistpll
mov
out
jb
fbstp
mov
xchg
or
lahf
add
push
mov
pop
outsb
shll
notl
pusha
and
out
data16
pop
addl
mov
stos
add
in
loope
cs
fsubl
mov
jne
sbb
ss
dec
mov
jmp
js
bound
rol
test
cli
divl
sbbb
arpl
fisubrs
pop
pop
xor
sbb
adc
negl
cmp
outsb
or
fbstp
jmp
gs
and
nop
inc
stc
imull
and
jle
fcomps
sbb
pop
mov
sbb
lods
mov
or
outsl
dec
cmp
fists
js
ss
mov
imul
or
and
xchg
stos
shll
lods
popf
and
mov
or
jge
or
fbstp
pushf
cmc
mull
in
xchg
inc
mov
pusha
dec
xor
xor
je
outsb
pop
xrelease
sbb
imul
lcall
not
lea
leave
dec
out
or
jecxz
xchg
jle
testl
adc
jne
mov
lock
xchg
iret
fistps
cmp
testl
shrb
fnstenv
loope
popa
jne
push
xchg
xor
in
push
test
push
divl
jb
xor
mov
or
and
add
rclb
adc
mov
jmp
jl
jo
or
add
push
loop
sar
push
stos
ret
imul
push
inc
add
imul
push
and
fmuls
or
out
cmp
mull
popf
add
push
jne
push
xchg
cmpl
je
pop
mov
sahf
jp
fidivl
cltd
testl
cmc
stc
int3
fstpt
dec
enter
mov
andl
inc
xor
rclb
xor
je
inc
pop
out
jnp
movsb
popf
inc
ljmp
lds
lcall
neg
call
jns
das
jne
insb
mov
out
lock
jae
fcomip
inc
inc
cli
loop
test
imul
mov
addr16
sbb
out
out
mov
imull
fprem1
mov
mov
cmp
frstor
inc
divl
out
or
je
jb
mov
push
lods
hlt
scas
mov
dec
shlb
push
pushw
xor
not
sub
mov
jp
notl
lret
rcl
pop
mull
test
sti
pop
cmp
call
loopne
inc
ror
push
outsl
dec
push
mov
stos
mov
insl
fidivrs
inc
outsb
add
mull
xchg
inc
dec
negl
sahf
stc
xchg
sbb
xchg
loop
not
push
addl
and
sub
or
mov
push
xchg
add
xlat
cs
adc
test
call
xor
xchg
or
sbb
shl
test
ja
push
push
notl
mov
stos
xor
jge
jae
mov
bound
push
notl
xor
xlat
sbb
dec
idiv
sub
cmp
sbb
inc
push
sub
pop
je
out
adc
hlt
repz
in
arpl
imul
clc
dec
insl
maskmovq
negl
and
mov
shl
jecxz
repnz
dec
fmul
fucomip
pop
aad
pop
in
je
popa
or
mov
inc
movsl
rolb
mov
notl
xchg
popf
mov
pop
decl
out
mov
out
cmc
mov
repz
push
dec
or
and
not
pop
dec
pop
mov
mov
lock
jb
neg
push
xorl
pusha
mov
fidivs
jecxz
sub
mov
adc
shlb
and
neg
xchg
push
pusha
jne
mov
lock
das
pop
pop
sbb
mov
jno
shlb
and
mov
mov
int
cmp
out
cmp
pop
aaa
sti
insb
outsb
jecxz
movsb
inc
addr16
mov
loop
div
adcb
dec
mull
push
cmpsb
idiv
sarl
loopne
int
inc
sub
inc
shr
je
sub
lds
out
sahf
fldt
sub
popa
lods
cmp
into
mull
dec
mov
push
cld
adc
sbb
push
pop
inc
push
push
push
in
test
cmp
sub
push
sbb
or
add
xor
pop
jnp
lahf
sbb
mov
xchg
mov
mov
or
data16
jle
mov
sbb
popl
sub
mov
or
xchg
repz
stos
imul
push
out
inc
pop
xor
idivl
bnd
out
lret
daa
jecxz
mov
idivl
repz
inc
add
test
loopne
shll
cli
rcrb
arpl
je
into
hlt
out
push
je
cmpsb
dec
cltd
jmp
pop
cwtl
and
fnsave
push
jge
xor
imull
mov
dec
mull
fsubrl
xor
scas
mov
mov
inc
jl
sbb
mov
mov
mov
mov
rcll
push
ret
mov
xor
mov
xlat
out
outsl
mov
mov
cwtl
mov
pusha
add
mov
cmpsb
push
dec
sbb
in
xchg
ja
shr
xchg
ffreep
frstor
divl
leave
or
add
fisubrs
imull
inc
push
jae
shl
ljmp
lock
jle
push
sbbb
rorb
inc
div
fistpll
in
fdivl
sub
sarl
mov
or
lahf
adc
push
xor
inc
pop
not
enter
je
cmp
mov
adc
mov
iret
les
add
lods
ret
outsb
lahf
lds
not
pop
sahf
repnz
stc
push
dec
addb
pop
rclb
pop
adc
mov
fcmovnu
sub
mov
rolb
pop
xor
inc
out
test
mov
jnp
mov
push
cmpsb
jbe
imul
inc
test
cmpsl
lahf
ds
negl
adc
xchg
aam
ret
lret
fldt
fwait
je
adc
ja
mov
mov
insl
lds
mov
dec
loop
fistps
das
aad
or
daa
addr16
adc
push
sub
mov
mov
testl
dec
iret
adc
lret
add
add
push
rclb
imul
das
fldt
ss
fsubp
pop
out
scas
dec
mov
aas
and
add
fucomi
inc
jp
cwtl
lods
cmp
js
add
xor
or
xor
push
sub
adc
pop
stos
xchg
sub
test
jmp
flds
cmp
call
push
rclb
out
jno
mov
es
scas
or
int
xchg
fcmovnbe
or
mov
imul
cmp
scas
xor
out
idivl
pusha
xor
sbb
nop
jmp
push
int
fildll
neg
push
sub
mov
push
negl
mov
testl
ret
push
cmp
mov
xchg
adc
stos
inc
imul
cmc
pop
divl
sbb
mov
sub
sti
cs
xchg
fcoms
negl
cmp
xchg
mov
adc
jmp
in
imull
or
lcall
xchg
mov
std
movsl
push
aas
xor
pop
pop
testl
xchg
push
outsb
inc
repz
dec
divl
mov
add
cmpsb
xchg
gs
dec
adc
sbb
fildll
popf
cmpsl
push
sub
adc
lcall
ds
orl
imull
dec
push
movsl
cmp
add
lock
add
jne
xor
cmp
or
jl
mov
shl
out
lods
pop
cli
insl
jo
ljmp
cmp
sbb
pop
xchg
mov
jne
xor
fnsave
mov
int
push
es
neg
push
outsb
ret
xchg
mov
in
xlat
aas
in
cmpsb
fidivs
sbb
test
aam
dec
or
ss
js
fcomp
xor
mov
testl
mov
mov
push
xchg
ds
int3
fbstp
out
mov
mov
fildll
pop
xchg
lock
or
xchg
shl
adc
push
nop
int
daa
pop
xor
fisttpl
rorb
mov
ljmp
dec
xorb
inc
pop
xlat
insb
sahf
adc
and
jecxz
insl
pop
sbb
mov
cltd
adc
ljmp
add
scas
mov
pop
ja
and
push
scas
cmp
add
sub
push
or
call
cmp
das
sub
mov
cmc
clc
jns
jo
xor
push
or
out
test
scas
into
cwtl
mov
ficoml
lods
mov
pop
stos
dec
jbe
cld
dec
sbb
testl
inc
cmp
pop
cmp
pop
push
push
out
inc
mov
xchg
xlat
dec
mull
jb
cmp
cmpsl
lods
mov
test
dec
pop
xchg
xor
not
popa
mov
out
mov
fistl
in
or
popf
add
into
dec
movsb
in
pop
psubd
test
popf
shll
mov
xchg
dec
js
jno
lahf
adc
sbb
push
xchg
mov
mov
scas
scas
dec
pop
hlt
out
roll
aaa
movsl
xchg
in
lgs
adc
aaa
add
dec
repz
pop
adc
aam
jno
sub
rcl
lods
push
add
das
hlt
jmp
lea
mov
fs
inc
add
jmp
fstl
pusha
inc
shrl
jmp
mov
push
repnz
daa
push
add
cs
lcall
xor
movsb
mov
lock
int3
shlb
fdivs
jne
xchg
mov
rclb
mov
shll
jbe
movsb
cmpsb
aaa
mov
cmp
lcall
and
test
int3
push
and
sbb
mov
cli
xlat
mov
jae
je
push
pop
hlt
sbb
loope
mov
mov
mov
pop
and
push
add
jle
mov
push
cmc
mov
dec
mov
fdivrl
xlat
add
imul
adc
sti
jle
in
mov
addr16
xchg
mul
ret
push
test
fsubrs
jae
xor
cmp
push
inc
jle
sbb
pop
jae
outsb
in
xchg
push
mov
loopne
into
add
push
out
inc
cs
mov
cmp
jecxz
jmp
call
hlt
je
lock
jmp
sbb
adc
out
jns
xlat
xor
adc
xchg
push
sbb
cmpsb
pop
filds
idivl
mov
xlat
push
mov
jmp
test
jl
in
cmpsl
cmpsl
addl
mov
fdivrs
sub
out
pushf
aas
mov
xor
into
and
dec
int3
ret
cltd
mov
mov
aad
xlat
notb
xchg
cmpsb
out
mov
icebp
inc
je
repz
xor
sub
mov
mov
mov
lea
push
repnz
les
xlat
ljmp
cltd
mov
stos
pop
dec
fistpll
push
imul
xor
outsb
fistl
jbe
loopne
jno
push
or
push
out
inc
mov
sub
inc
adc
mov
testl
xchg
les
rclb
sbb
sbb
pop
xchg
push
in
or
pusha
jae
sub
sub
cmp
test
movsl
lea
mov
hlt
sub
add
in
in
add
xor
sbb
insl
pop
sbb
mov
push
sti
outsl
inc
mov
cmpsl
cs
or
sahf
cs
cmp
sub
xor
xchg
fbstp
xchg
outsb
test
xchg
addr16
jbe
cld
not
pop
xchg
lcall
xor
xchg
adc
jb
repz
push
mov
rcrl
ljmp
xor
jne
call
inc
or
ljmp
xor
cmp
mov
add
iret
sti
outsl
push
jbe
cmp
jecxz
mov
adc
mov
mov
fldenv
subl
jecxz
mov
arpl
test
jo
lea
es
movsb
pop
sbb
jg
sbb
inc
dec
mov
movsl
inc
cmp
pushf
add
outsl
lea
jno
int3
call
jg
xorw
mov
lahf
push
sbb
in
mov
ret
out
pop
insl
in
imul
mov
xor
sub
in
sub
mov
out
adc
outsb
outsb
push
xor
mov
mov
fisubrs
gs
cmpl
ss
mov
pushf
push
mov
push
sarb
nop
jo
and
imul
test
jmp
mov
not
cmp
sar
jle
or
push
mov
int3
push
mull
test
cwtl
je
imul
and
into
sbb
fsubrl
inc
sub
ss
mov
xor
lret
cmp
jno
sbb
cmpb
inc
imull
xchg
pop
cmpsl
mull
icebp
hlt
out
jbe
xchg
into
jecxz
nop
call
outsb
sbb
dec
dec
in
or
and
add
out
jge
out
pop
scas
shlb
mov
mov
into
idivl
mul
stos
ret
xchg
sub
js
push
adc
testl
pusha
mov
notl
xchg
inc
jb
mov
testl
cs
cmp
jg
jmp
sub
add
ds
push
mov
js
testl
scas
outsb
idivl
sub
push
jmp
adc
iret
pushf
xchg
xor
out
notl
mov
std
into
xchg
lea
and
insb
push
negl
in
xchg
fidivl
xchg
filds
lds
xor
inc
jo
jp
mov
jne
sub
adc
loop
loopne
push
jmp
aas
xor
fdivr
in
xlat
int
push
lea
ret
and
movsl
popf
pop
leave
push
push
and
imull
out
cmp
subl
les
mov
dec
mov
into
pusha
out
popa
insb
in
xchg
orl
notl
mov
shrl
notl
or
or
divl
sbb
nop
notl
imul
xlat
mov
or
shll
repz
int3
pop
fistl
add
shll
ss
sub
mov
mull
insb
aam
fidivl
in
mov
into
and
call
xchg
sub
jbe
mov
test
insb
aad
mull
ja
xchg
repnz
inc
and
push
das
mov
idiv
mov
loopne
nop
ret
cmp
push
lods
and
xchg
push
sub
out
sub
xchg
sbb
out
mov
add
pop
pop
jmp
mov
leave
les
inc
jnp
pushf
xchg
insl
or
mov
mov
cmp
dec
dec
mov
or
push
cmpsl
adc
jns
loope
mov
stos
and
cmpsl
sub
in
ljmp
int
imull
test
cmp
and
dec
je
push
mov
fsub
shll
out
cmp
test
pusha
mov
hlt
cmp
jmp
pop
insl
jno
loope
dec
je
jnp
out
enter
and
out
aas
fadds
xor
xchg
loope
mov
pushf
mov
imulb
scas
movsl
inc
fmuls
pushl
and
add
push
jns
enter
lods
notl
dec
loopne
mov
jg
daa
push
nop
testl
pop
imull
xor
mov
push
or
sub
scas
test
into
pop
inc
cmpsl
negl
cmc
pop
mov
aam
xlat
into
xor
fnstcw
popa
rsqrtps
lods
fwait
ss
xchg
push
notl
mull
cmpsl
push
cmp
insl
lea
push
xor
adc
adc
add
mov
out
push
imulb
enter
daa
in
out
insl
or
lret
imul
test
push
fnstenv
mov
fidivl
xor
insl
adc
out
sbb
shll
pop
push
xchg
push
jle
cmp
sbb
imul
mov
fcoms
rclb
push
outsl
sub
imul
sbb
testl
add
mov
xor
leave
ja
push
xor
mov
push
xchg
ret
add
jge
fisubl
pop
loopne
mov
and
inc
mov
cmp
test
not
mov
mov
fxch
xlat
aam
push
adc
filds
jmp
jae
test
test
int
idivl
or
sbb
push
pushl
repz
sbb
test
bound
adc
popa
pusha
xor
int
jmp
testl
cld
idivl
push
jecxz
jns
xlat
je
push
scas
mov
test
lds
jge
pusha
xchg
pop
rolb
nop
ljmp
test
ret
mov
xor
cmpb
xchg
mov
out
notl
xchg
repz
movsl
or
filds
test
cmpsb
adc
pop
jo
in
jge
in
or
jae
add
fists
pop
notl
nop
fmulp
mov
sbb
sub
idivb
mov
vmaskmovdqu
leave
divl
test
adc
pop
adc
outsl
inc
xor
sbb
mov
clc
les
sbbl
jno
or
out
ret
sbbb
pop
or
idivl
mov
push
or
xlat
sbb
dec
mov
fwait
sti
adc
cmpsb
cmp
out
icebp
fcompl
sub
sbb
out
call
inc
xor
and
xor
lods
xlat
pop
inc
lret
push
and
xchg
sub
sbb
add
notl
xchg
sarl
negl
push
pop
mov
inc
cmpsl
jo
repz
dec
sbb
testl
fldcw
jle
push
icebp
dec
jns
add
aas
pop
pop
bound
idivl
rcrl
ss
lcall
adc
addl
dec
pop
negl
and
dec
push
inc
cmp
add
push
ss
add
jle
shl
lods
in
xchg
inc
mov
popf
sbb
adc
push
fdivrp
loop
es
lods
popa
sbb
fistpll
inc
fwait
shl
jb
loopne
divl
in
push
ds
jo
jl
out
xor
pop
mov
inc
stos
jns
cli
jmp
push
lods
adc
jb
cmovbe
dec
lret
divl
mov
stos
testl
adc
push
je
dec
ja
popa
xchg
mov
in
jno
pop
sar
or
inc
popa
lods
mov
scas
adc
inc
imul
cld
jg
pop
cmp
negl
dec
lods
xchg
stos
sahf
es
scas
push
neg
lahf
repnz
mov
add
jns
iret
dec
mull
push
lret
jnp
mov
xor
inc
ss
add
xchg
int3
idivl
loopne
xlat
divb
data16
js
je
jo
add
pop
xor
lds
add
inc
cs
xchg
adc
inc
dec
xorb
mov
mov
jl
jae
jmp
push
mov
inc
imull
adc
add
xchg
xor
hlt
icebp
ja
frstor
or
enter
fbstp
dec
cwtl
notl
mov
std
push
fs
testl
mov
leave
or
mov
lcall
dec
test
or
sbb
fucom
mov
sbb
add
mov
mov
mov
in
fdivp
sub
pushf
cmp
mov
mov
cltd
lock
inc
mov
jnp
ljmp
fdivrl
cmp
mov
popa
outsl
push
mov
sbb
pop
js
je
jo
mov
push
test
cwtl
out
or
idivl
aaa
push
pop
mov
fists
in
fbld
into
xor
push
mov
fstl
les
adc
mov
xchg
scas
idivw
gs
mov
push
jnp
mov
ss
ss
dec
sbb
sub
cmp
cltd
xchg
test
mull
rclb
or
repz
xor
sbb
dec
xchg
mov
testl
lret
xor
std
mull
nop
push
xchg
add
sub
ds
in
sbb
lret
add
push
mov
out
loope
les
mov
fcmovnb
and
xchg
notl
daa
sahf
pop
mov
in
mov
rcl
xor
repz
pop
xchg
xchg
pop
aad
push
mov
flds
fistpll
adc
dec
dec
out
movl
or
lret
xor
pop
and
pushf
iret
out
sub
fstp
js
sti
notl
lods
sub
daa
notl
out
cltd
xor
adc
out
dec
sbb
mov
sarl
inc
cld
push
popa
sbb
xchg
idivb
in
add
inc
push
dec
push
jns
push
out
mov
xchg
jne
call
add
sti
cli
sbb
pop
popf
imul
or
xlat
mov
jp
push
push
cld
loopne,pt
fwait
push
push
jns
and
or
cmc
inc
xor
loop
fsubrl
testl
ja
add
xor
imul
mov
in
imull
cmp
push
bound
lods
adcl
sbb
cltd
icebp
filds
out
aam
mov
testl
aad
negl
xor
negl
push
inc
enter
repnz
test
pop
gs
arpl
sub
fildll
jnp
mov
mov
iret
pop
jbe
fcomps
negl
xchg
sbb
adc
sub
repnz
cs
lcall
adc
dec
xor
inc
mull
daa
push
stos
pop
sub
or
orb
or
cmp
sub
and
mul
leave
movd
into
push
pop
inc
call
add
jae
fistps
sarl
cmp
scas
sysenter
divl
lods
ljmp
adc
pop
xchg
pop
pusha
mov
xchg
mov
add
or
movsb
imull
xor
es
push
xchg
xchg
mov
out
sti
sub
in
cmpb
xor
push
out
pop
adc
fwait
repnz
ficoms
pop
fisttps
or
pop
xchg
sub
popa
je
jbe
iret
dec
stc
rcrb
and
fucomi
jo
in
insl
mov
jmp
ljmp
mov
in
xchg
sub
jmp
call
mov
div
inc
push
fcoml
jbe
aaa
mov
inc
mov
mov
out
ficoml
icebp
lods
adc
in
fcmovb
icebp
loop
xor
inc
jo
dec
fchs
out
add
or
xor
ljmp
adc
fidivl
dec
pop
nop
outsl
jbe
push
and
push
leave
fcom
jbe
pusha
int
jmp
mov
neg
cmp
call
mov
pop
fs
out
aad
push
add
jmp
mov
int3
pusha
push
mov
mov
pop
pushf
pop
mov
repnz
push
cmp
out
mov
mov
out
outsl
inc
sbb
call
cmpsb
ljmp
pop
and
jmp
aad
pusha
xchg
and
lcall
or
aas
decb
mov
stc
fsubr
cwtl
ss
cltd
or
xlat
loope
mov
jne
xchg
mov
loope
enter
cmp
xlat
int3
or
jns
mov
testl
test
notl
icebp
add
inc
in
adc
das
shll
cltd
mov
mov
mov
jb
nop
loopne
jp
imul
movsl
test
sbb
mov
push
fistl
testl
xchg
imull
cmpsb
cmp
mov
add
mov
aad
xorb
sub
loopne
push
into
pop
dec
bound
loope
add
jg
dec
pop
cmp
shl
in
les
lahf
lcall
pop
call
maskmovq
idivl
and
mov
sbb
popl
test
aaa
mov
fldcw
nop
and
fistpl
inc
xchg
js
outsb
pop
fistps
or
subl
or
mov
lahf
leave
cld
add
in
imul
or
mull
xorl
int
xor
in
lds
sbb
dec
dec
jne
lea
inc
push
aas
dec
cld
and
jecxz
xchg
xlat
cltd
xchg
fmul
lahf
jno
insl
les
out
or
push
jl
mov
or
cltd
int
jmp
fwait
jb
rcl
push
push
push
in
stos
pop
cmp
jns
inc
outsl
xchg
lods
fisttpl
testl
cmp
push
sbb
adc
cmp
jg
pop
fcoms
test
mov
and
repz
testl
mov
fwait
shll
test
inc
hlt
mov
fnstenv
and
arpl
daa
insl
testl
jle
fdivp
mov
sti
idivl
pop
mov
push
in
fwait
les
pop
fucomip
mov
inc
adc
mov
ss
dec
mov
in
data16
dec
test
pusha
not
test
xor
and
mov
jp
jae
int3
imull
lock
lahf
xchg
pop
ljmp
sub
sbb
cmp
mov
inc
jle
fwait
mov
insl
negl
cmpsl
stc
push
sub
mov
jne
jp
popf
xor
iret
fdivs
in
outsb
push
shlb
push
les
es
notl
sbb
dec
icebp
sti
testl
fs
test
dec
insl
mov
mov
not
jns
stos
sbbb
shl
xchg
xor
xchg
cs
inc
jmp
mov
jecxz
sub
xor
mov
mov
pop
in
push
loopne
imull
jp
sahf
jnp
outsb
in
xlat
pop
movsl
nopl
ds
ss
mull
adc
testl
cmp
loope
xorb
adc
negl
push
jp
imul
loop
mov
adc
jecxz
push
dec
and
fcom
rclb
cmpsl
sbb
push
xor
jnp
lock
fucomip
rorl
sahf
divl
xchg
mov
xchg
int
sub
inc
xor
jb
and
loopne
xlat
jmp
add
mov
fiaddl
negl
fsts
pusha
inc
xor
adc
mov
xchg
xorl
divl
mov
shl
sbb
outsl
xchg
inc
sbb
inc
enter
mov
int3
je
negl
xchg
ds
scas
and
idivl
pop
sub
pop
adc
daa
xlat
stos
lahf
cmpsl
mov
test
notl
adc
add
and
pop
testb
mov
divl
loop
clc
mov
push
mov
jno
and
daa
inc
or
imul
out
xchg
lcall
mov
lods
divl
test
jecxz
insb
les
test
cs
sbb
rclb
and
test
fnstenv
xor
icebp
sub
xor
push
and
xor
fsubs
out
testl
js
negl
rcr
mov
call
out
add
push
lods
rorl
negl
ds
adc
jecxz
div
push
sub
scas
mull
sub
loope
out
pop
test
sub
dec
inc
enter
into
pop
jge
or
imull
iret
aaa
jb
lods
jns
mov
inc
in
notl
add
adc
and
notl
or
dec
negl
outsl
pop
xchg
pop
insl
adc
daa
je
inc
mul
push
hlt
ret
jne
aam
negl
cmpsl
sbb
negl
cmp
aaa
push
lods
test
testl
jns
push
ret
stc
cmp
inc
xlat
xor
xor
pusha
fwait
testl
mov
push
testl
call
daa
xchg
push
push
sbbb
movsl
sbb
jp
pop
aam
addl
pop
mov
inc
roll
mov
outsb
lcall
xor
mov
push
lods
in
pop
and
ret
or
jnp
lahf
cmp
mov
pop
pusha
mov
pop
adc
out
inc
mov
jl
or
pop
imul
cmp
fldcw
cwtl
mov
fxtract
out
divl
cmpsb
jle
push
push
bound
nop
cmp
xor
testl
fsubl
sub
push
ljmp
in
ret
pop
xchg
testl
jl
idivl
dec
sub
adc
xchg
mov
inc
sub
adc
and
push
idivl
pop
jl
bound
push
fisubl
fadds
sub
mov
popa
and
xchg
push
out
cmp
negl
shll
xor
imul
neg
sti
bound
gs
cmpsl
mov
xchg
negb
idivl
mov
jle
pushf
aaa
testl
pop
ja
cmp
mov
cwtl
aad
andb
jno
dec
xor
cld
push
popa
in
jmp
les
popf
ret
test
or
ljmp
dec
fucompp
push
pop
divl
mov
test
jnp
xor
xor
jp
inc
pop
nop
jg
rorb
push
dec
hlt
in
pop
mov
in
mov
sarb
xchg
mov
mov
cmp
push
pop
data16
loop
testl
push
mov
or
fiaddl
push
inc
sti
out
dec
test
negl
out
ja
pop
xchg
push
bound
jbe
in
xchg
or
pop
mov
mov
sti
int
mull
xchg
cmp
push
lret
jae
sbb
xor
mov
gs
push
dec
jl
js
and
das
in
movsb
mov
sti
cmpb
mov
cmp
mov
das
stos
sti
mov
scas
idivl
add
mov
hlt
int3
mov
pop
cmc
cltd
into
lret
sbb
insl
push
lea
jge
fadd
inc
clc
loop
cmpsb
push
mull
movsb
or
addr16
pop
pop
insl
scas
out
xor
imull
xchg
xor
mov
cltd
idivl
inc
add
inc
ret
xlat
iret
loop
mov
pop
mov
sub
adc
fcoms
ljmp
pop
push
xor
hlt
dec
mov
xor
cmp
es
sti
out
jae
push
mov
push
mov
adc
gs
inc
pushf
idivl
lahf
imul
ss
jg
btc
jae
std
pop
loope
push
lret
fbstp
lcall
lods
idivl
mov
arpl
shll
testl
or
mov
in
jg
pop
xlat
mov
jecxz
fpatan
mov
shr
and
and
mov
out
ret
push
in
xor
mov
lock
popa
push
or
sti
and
cmp
adc
pop
push
mulb
addl
mull
sbb
add
inc
jmp
mov
push
lcall
add
pop
testl
cmc
push
negl
insl
add
cmp
ds
jmp
test
mov
cltd
sahf
ss
fnstcw
fstpt
divl
sub
mov
pop
ljmp
inc
sbb
xlat
pop
mov
add
xchg
pop
neg
andb
je
in
jge
mov
enter
sub
lods
xorl
cmp
movl
jne
popa
push
and
int
test
outsl
mov
mov
adc
or
lahf
jecxz
or
xor
xor
add
sub
inc
mov
sbb
jb
jnp
push
imul
add
xor
jge
loopne
test
insl
mov
imull
fs
or
imul
jmp
mov
rol
arpl
mov
cli
mov
jmp
test
insb
inc
adc
sbb
pop
hlt
fwait
mov
es
testl
add
aaa
or
or
mov
imul
push
mov
out
repnz
enter
mov
lock
movsb
add
fldcw
testl
inc
movsl
pop
notl
xchg
loop
pmovmskb
mull
xchg
cmp
cltd
sar
divl
cs
or
xor
cmp
jnp
rorb
shrb
test
in
xchg
negl
lods
aad
stos
adc
imul
inc
scas
inc
movsb
imul
dec
xor
cmp
and
shlb
testl
imul
lods
imul
sbb
ret
jmp
test
scas
div
inc
and
testl
add
inc
shl
jns
lods
nop
sub
testl
mov
and
dec
test
pop
push
or
inc
mul
fisttpl
mov
jl
pop
inc
sub
sbbl
mov
lock
pop
sarl
pop
rcr
pop
inc
div
jl
hlt
mov
jae
mov
and
js
idivl
shll
push
loopne
push
adc
dec
negl
cmp
sbb
mov
xchg
rep
ss
xor
xchg
nop
mov
shll
and
xor
js
pop
mov
push
std
test
dec
or
sarb
fst
ds
cltd
mov
aaa
xchg
addr16
dec
xchg
jb
fs
cmp
ja
push
and
lret
shl
cmpsl
je
clc
cld
or
scas
lods
sti
lds
sti
or
sbb
mov
jnp
cltd
out
or
inc
movsl
mov
cmp
lahf
aas
mov
outsl
fadds
mov
add
inc
push
mov
fisubrl
rcrl
out
int3
xorl
fidivrs
and
bound
add
rolb
jno
add
lock
add
dec
call
push
jp
lods
out
fdivl
sarb
in
out
ljmp
mov
jne
pusha
inc
imul
leave
movsb
mov
push
icebp
add
mov
sub
out
mov
into
pop
pushw
insl
mov
xchg
xchg
inc
mov
shrb
outsl
mov
sub
lock
gs
orb
dec
dec
popf
push
cmc
mov
and
fcom
mov
xchg
add
jb
rcll
pop
rorl
lret
lcall
or
xchg
and
cmc
fwait
jno
push
dec
and
jae
jg
jmp
fisubl
mov
jl
inc
bound
out
sti
iret
add
jne
pop
lahf
repz
int
sbb
inc
jg
in
mov
xchg
lcall
sbb
fistl
adc
ret
push
fbstp
out
in
fsubp
mov
iret
cmp
xor
inc
enter
stc
out
out
xorb
mov
clc
hlt
mov
in
sub
mov
mov
sbb
lods
pop
add
scas
adc
aas
mov
pop
push
out
add
sbb
and
push
and
cmp
in
in
add
jae
sbbl
push
ja
fs
mov
dec
xchg
cmp
mov
jge
sahf
sub
and
lea
push
lods
push
cmp
shlb
adc
mov
ds
jmp
or
ret
or
and
mov
cmp
inc
fstl
shll
fbstp
jp
pop
inc
mov
pop
fs
hlt
sub
stc
imul
in
fisubs
imul
jmp
pop
daa
inc
insl
rclb
push
mov
mull
loop
addr16
xchg
jns
xlat
lcall
lea
xchg
fs
inc
cmp
add
jo
fs
mov
lock
inc
loope
clc
push
and
aam
cmp
cmc
leave
cmpsl
nop
and
ja
mov
lcall
dec
mov
push
test
mov
jge
adc
ret
jo
fisttpl
inc
hlt
mov
test
cmova
pop
xchg
push
lock
out
jl
mov
mov
xor
jbe
pop
ja
mov
ljmp
lods
mov
adc
out
or
ljmp
icebp
mov
addr16
cld
pusha
xlat
xchg
jbe
fidivl
xor
repz
push
loope
out
pusha
xchg
sahf
clc
iret
mov
mov
sbb
das
jbe
inc
les
ljmp
popf
mov
jge
lret
bound
push
add
and
add
xor
data16
add
xchg
xor
sub
repz
mov
lds
mov
int3
dec
frstor
mov
pop
out
xchg
add
pop
push
xor
mov
sbb
dec
jne,pt
addl
ficomps
mov
jp
add
out
jmp
rorb
dec
inc
sub
shll
pcmpeqb
mov
fwait
mov
sub
sub
loopne
xchg
scas
mov
cwtl
inc
int
sub
push
nop
stc
lret
insb
jne
bound
lea
or
aas
int3
push
push
jb
xlat
mov
push
xor
xchg
stc
stos
inc
mov
pushf
stc
lods
cmp
pusha
push
jge
je
adc
cmpsl
adc
outsb
sbb
mov
in
rcl
sbb
repz
push
in
xchg
outsl
mov
in
jnp
mov
lahf
sbb
xchg
xchg
push
dec
cmc
into
rol
int
out
jb
dec
lock
cs
lret
gs
mov
repz
ljmp
xchg
cmp
movsl
ja
enter
fidivrs
jno
aad
int3
push
outsl
sbb
testl
loopne
mov
inc
stos
pop
fs
and
cs
test
aaa
push
and
loope
int
into
push
pop
ljmp
mov
dec
mov
lea
inc
iret
shlb
and
mov
arpl
loope
scas
jle
or
hlt
shrb
fcmovbe
call
cmp
add
sub
out
leave
dec
test
inc
or
pop
mov
ljmp
stc
xchg
cmpsb
out
lret
or
pop
pop
add
push
pop
inc
inc
sub
outsb
in
mov
icebp
js
mov
sub
or
lcall
xchg
subb
sbb
and
add
and
rcl
scas
cltd
push
sub
mov
inc
fs
int
movsl
mov
fsubp
lock
lea
add
bound
js
iret
into
in
mov
fcomi
xchg
mov
jmp
movsl
mov
lods
mov
cwtl
icebp
inc
inc
mov
ja
mov
sti
jae
xchg
inc
addr16
push
sahf
ljmp
outsl
out
lahf
add
in
sub
xchg
fs
scas
ret
and
mov
sbb
out
out
dec
fidivl
pop
inc
fisttpl
mov
ja
shll
cmp
push
popf
outsl
incb
pusha
push
mov
xor
out
mov
sahf
nop
cld
or
out
or
in
in
jb
scas
call
pop
inc
jb
fs
outsl
jb
loopne
daa
pop
popa
jno
ljmp
idivl
jnp
int
adcb
or
mov
movsl
fucomi
pushf
jbe
jnp
push
out
fdivp
gs
cmp
push
mov
push
cmp
sbb
jae
inc
jbe
jne
jno
in
and
popf
addb
cwtl
nop
ret
xlat
jnp
push
cmpsl
and
loopne
pop
mov
in
pop
sub
pusha
shll
jle
add
push
dec
repnz
fsubr
sub
out
cmp
movsl
mov
incb
movsl
jmp
out
ds
sub
out
jo
mov
sbb
xorl
mov
push
add
adc
and
or
movsl
pop
xor
loopne
jb
xor
ficompl
jb
jge
imul
dec
fildll
enter
adc
cli
out
outsl
cwtl
jp
enter
and
movsb
in
adc
cmc
jmp
adc
sub
dec
insl
mov
and
bound
lea
test
pushf
dec
jne
fwait
incb
mulb
movsl
inc
sub
pop
pop
fdiv
jecxz
test
repnz
call
fldcw
cs
iret
fs
out
iret
dec
addl
scas
cwtl
or
in
mov
inc
insl
cmc
jecxz
mov
mov
icebp
inc
adc
cmc
mov
insl
or
shrb
scas
jo
iret
loope
or
lcall
xor
adc
stc
jnp
nop
and
or
inc
andl
ds
mov
push
jae
ja
pop
rcrl
add
sbbl
dec
lret
js
sahf
je
push
push
int
in
int3
popa
insl
ret
stc
xchg
push
test
mov
lds
lock
push
jbe
xorb
xchg
std
ficompl
pusha
xchg
out
outsb
fstpl
ss
js
sbb
pushf
out
sbb
dec
add
js
lcall
insb
push
outsb
or
jp
fisubrl
cmp
xchg
xchg
rorl
icebp
mov
push
out
jp
cmp
movsl
mov
pop
mov
inc
dec
repnz
out
lret
mov
jl
push
cmpsb
push
jns
insl
jmp
adc
clc
push
movsb
scas
aaa
mov
lret
lret
mov
out
mov
out
leave
cltd
ljmp
sbb
iret
in
cmp
lcall
dec
add
inc
mov
mov
or
out
push
mov
and
out
and
in
ja,pt
inc
mov
es
jecxz
pop
ljmp
cmp
in
xchg
bound
and
sub
cmp
fidivrl
std
jmp
sub
ljmp
adc
ds
xlat
xchg
in
das
pop
iret
or
push
outsb
jns
xor
aad
cs
jbe
test
xlat
xchg
ret
ljmp
mov
push
fwait
inc
push
add
cli
mov
shl
push
je
stc
add
fcmove
sbb
jb
mov
inc
movsb
test
mov
je
jmp
push
shl
sub
xchg
lods
xchg
inc
stos
addr16
cmp
jns
mov
adc
cmp
lret
push
xchg
imul
out
inc
sub
adc
in
mull
fs
mov
dec
in
testl
mov
mov
movsl
std
xchg
filds
daa
fdivrl
mov
mov
testl
sub
sbb
fimuls
sahf
fidivl
ret
notl
not
iret
imull
push
hlt
mov
icebp
dec
movsl
lods
mov
fdivs
fistpll
in
push
xchg
int3
inc
cwtl
fidivs
and
rorb
icebp
js
pop
testl
test
dec
hlt
or
jecxz
enter
add
xlat
int3
push
nop
sbb
sub
outsb
je
push
fistpl
jb
mov
ja
push
fsubl
rorl
jmp
xor
cmpsl
es
notl
cmc
dec
call
add
daa
add
imull
mov
outsb
notl
das
cmp
dec
bound
test
call
push
add
pushf
shrb
shlb
push
cmc
dec
out
mov
addb
sti
xor
mull
adc
mull
loope
scas
lock
fdiv
xchg
les
leave
mov
test
pop
push
ret
inc
cmp
mov
std
and
mov
loopne
jb
sbb
pop
jmp
hlt
inc
jne
imull
enter
add
jb
push
mov
dec
imul
pop
xchg
xchg
daa
inc
cld
scas
idiv
mov
js
insl
lds
cmp
je
mov
mov
jl
xchg
xlat
add
sub
add
loop
push
xor
js
popa
test
pop
loope
in
sub
mov
insl
jb
xchg
cli
arpl
out
sub
ljmp
loope
xor
mov
fdivl
jne
inc
cmp
outsb
pop
ja
adcb
ljmp
cmp
fisubl
cmp
mov
lret
lcall
ja
mov
loop
jg
jmp
pop
cwtl
out
shr
loop
xlat
data16
inc
mov
xchg
loopne
fs
jno
jmp
pop
mov
arpl
and
mov
push
pop
imul
mov
push
jne,pn
pop
xchg
push
inc
pop
pop
mov
pushf
fucomi
xchg
mov
loope
ss
iret
sbb
loop
xor
stos
push
clc
into
pop
and
js
mov
inc
and
pop
push
test
xor
adc
lret
pop
mov
or
and
mov
mov
in
fildll
arpl
aam
dec
adc
xor
push
addr16
and
push
add
scas
sbbb
out
ljmp
cltd
cmpsl
xchg
popa
xchg
sub
pusha
je
enter
push
cmc
loop
rorl
enter
mov
test
mov
inc
pushf
gs
js
sub
mov
test
sbb
or
fwait
out
jbe
fcmovb
sub
nop
mov
imul
mov
sbb
inc
cld
cmc
shlb
sahf
push
sbb
std
inc
hlt
adcb
xor
sbb
ljmp
cmpsl
subl
push
xor
fistpll
stc
fdivs
test
sub
xlat
cmp
movsl
clc
mov
ret
dec
jnp
cmp
dec
sti
ret
out
mov
divb
testl
add
hlt
push
sub
and
idivl
sbb
jns
ljmp
xchg
xchg
and
notb
shr
sbb
testl
push
xor
dec
les
and
xlat
fsubl
fdivr
mov
negl
pop
in
jecxz
cmp
dec
jae
xor
fidivs
pop
out
test
fldenv
mull
arpl
fiaddl
in
fistpl
sbb
inc
xor
insb
int3
inc
roll
pop
fisubs
stos
dec
xor
lahf
mov
push
cmpsl
icebp
test
mov
mov
out
fwait
mov
lods
es
mov
jle
xor
in
mov
fstpt
movsl
xor
mov
ficoms
testl
daa
mov
add
inc
mov
dec
idiv
fdivr
push
stos
fcomi
xor
push
out
mov
out
xchg
call
ljmp
stos
idiv
cs
daa
adc
test
idivl
popf
mov
push
jg
into
jb
pushf
cwtl
cmc
or
inc
inc
xlat
ds
cld
fdivs
jl
pop
test
mov
je
outsl
add
jp
cwtl
sbb
stc
nop
pop
push
and
idivl
aaa
add
pop
pop
sti
pop
test
lods
pop
sub
jo
mov
mov
jg
icebp
jecxz
mov
mov
mov
xlat
sub
adc
pop
ret
jb
cli
add
or
popa
ljmp
push
sbb
loope
stos
cwtl
add
jecxz
pop
cmpsw
loop
jns
negl
scas
clc
bound
outsl
pushf
adc
lea
xchg
stc
jl
or
xor
xchg
mov
fcomip
ja
xor
sti
insl
or
push
testl
add
and
xchg
xchg
or
xchg
inc
cmpsl
repnz
popa
loop
mov
mov
inc
pop
divl
insb
aaa
pop
xor
cmpl
xorb
enter
push
inc
idivl
push
dec
ljmp
je
and
js
movzwl
andl
popf
sbb
divl
xlat
add
mov
adc
lods
pop
fcomip
or
add
mov
les
push
cmp
xchg
pop
and
add
dec
lods
sub
idivl
loope
lods
inc
fstpt
fadds
fnstsw
and
jno
shr
ss
movsl
inc
and
mov
negl
inc
inc
dec
in
mov
clc
stc
insb
loope
jb
jo
xchg
loop
das
div
pop
scas
add
testl
scas
ds
shl
out
es
push
jno
xorl
insb
pop
push
lods
movsl
notl
movsb
or
mov
cmp
ficoml
adc
lret
test
or
div
aad
jnp
jo
test
xchg
jl
popf
lock
test
ss
cmp
divl
icebp
xor
hlt
pop
loope
mull
lahf
mov
les
test
xor
and
data16
enter
dec
stos
and
dec
jp
adc
popf
and
xor
inc
fistpl
or
xor
mov
js
pop
pop
imul
int3
jo
notl
gs
cwtl
aad
loopne
xchg
pop
in
sbb
es
mov
repnz
divl
push
push
testl
in
mov
pop
daa
add
popa
fdivrs
push
aad
mov
andl
sbb
jo
movsl
insl
fildl
cmp
sub
fnsave
ss
adc
ja
ljmp
cmp
sbb
loopne
mov
xchg
fwait
dec
pushf
repnz
cld
push
je
ret
cltd
xchg
leave
lea
in
fistl
testl
nop
cmp
ss
pop
pushf
push
iret
mull
sub
mov
inc
jle
jmp
out
addr16
mull
pop
pop
jno
mov
gs
pop
sbb
pop
into
movsl
sti
cmp
fildl
mov
sbb
or
subb
inc
jnp
div
dec
sub
inc
dec
pop
pusha
divl
cwtl
scas
adc
insl
push
jl
shrb
jae
lock
mov
cmp
xchg
in
sbb
push
shl
add
xchg
outsl
jmp
imul
inc
addr16
mov
jb
jbe
inc
shlb
sbb
outsl
clc
pop
notb
mov
mov
aam
xchg
out
cmp
imul
testl
fcmovnb
divl
loop
sub
push
test
out
xchg
add
xlat
ret
xlat
mov
sbb
clc
in
push
inc
mov
push
fsub
mov
mov
in
iret
inc
ja
cmp
push
in
pop
or
pop
in
lods
inc
shl
cmp
jmp
xor
cmpsl
pop
pop
or
icebp
leave
shll
sbb
mov
repz
jno
pushf
mov
mov
inc
cwtl
inc
hlt
push
cmpl
jbe
ja
icebp
mov
fistpl
xchg
fwait
mov
clc
push
jl
sub
fsub
jns
cmp
mov
rorb
stos
pop
sti
xchg
bound
push
iret
repz
aaa
xchg
or
pop
pop
lock
mov
je
lock
or
dec
and
std
test
and
sub
and
xchg
xlat
cmp
popa
shl
mov
out
inc
cmp
jmp
pop
fldcw
xchg
sub
mov
inc
jo
pop
aam
mov
push
mov
and
push
popa
arpl
data16
dec
mov
subb
jmp
pop
fisubrl
push
jmp
call
mov
or
jae
cmpsl
fildl
cs
pop
mov
fiaddl
jb
addr16
ljmp
pop
movsl
int
movsb
jne
adc
lock
push
cmc
ljmp
mov
ljmp
jne
jl
push
jb
cld
stc
adc
les
stos
ja
mov
pusha
sbb
cmp
jecxz
mov
mov
xchg
sbb
popa
les
mov
out
fimull
out
cld
ljmp
push
xchg
sbb
mov
loop
sub
pop
mov
adc
pop
sub
pop
push
jmp
xchg
in
adc
sub
shlb
xchg
dec
xchg
jge
pop
andb
mov
lret
adc
mov
sbb
in
js
in
jecxz
out
cmp
ficompl
popf
shll
xor
out
out
pop
cwtl
push
clc
sbb
in
in
xlat
mov
push
cmpb
jmp
jle
jae
rclb
xchg
mov
inc
push
repz
dec
ss
push
pusha
ljmp
xor
into
mov
ficoml
scas
mov
pop
insl
mov
push
orb
movsb
repnz
adc
ja
es
cmp
hlt
pop
mov
mov
test
fidivrl
ss
pop
mov
imul
mov
mov
ss
xchg
adc
add
sub
scas
dec
xchg
jne
and
cmpsb
fisubl
add
inc
pop
inc
imul
mov
mov
xrelease
fisubrs
je
repz
mov
sbb
mov
mov
movsl
and
outsb
inc
dec
mov
lret
mov
pop
push
sub
jb
cmp
pop
cmc
jl
lcall
mov
jle
filds
imul
push
sarl
sub
int3
mov
jns
ficoms
out
jecxz
cmp
pop
sbb
xchg
ja
notl
into
push
repnz
addr16
loope
pop
inc
loop
xor
dec
or
xor
jbe
push
clc
or
pop
jb
mov
jns
mov
push
cmp
fxch
and
mov
sub
sub
push
sbb
pusha
notl
xchg
pop
mov
push
lods
pop
outsb
jecxz
jno
cmc
and
lcall
add
xor
cmp
in
or
dec
fildll
int
pop
ss
and
dec
dec
idiv
pop
pop
iret
lods
shrb
xchg
testb
and
dec
inc
sub
xchg
pushf
fistpll
scas
sarb
or
sbb
push
adc
push
lcall
leave
mov
lods
xor
rolb
in
and
dec
in
notl
stos
test
mul
adc
mov
push
mov
or
repz
cld
jle
mov
aas
adc
and
add
push
out
ss
test
ja
dec
xlat
hlt
jmp
cmp
scas
mov
mov
adc
test
fimull
cwtl
xor
arpl
pop
and
je
mov
cmp
lahf
sbb
addr16
jg
xor
jb
add
inc
outsb
movsl
jg
xchg
or
loope
ret
clc
pop
std
repz
adc
and
idivb
test
fs
xor
xchg
negl
aam
lret
push
add
inc
jecxz
fstps
adc
adc
ret
sbb
ja
xlat
mov
fstps
lods
insl
fsubs
pop
pop
and
mov
out
and
imul
or
fsubl
popf
notl
test
and
add
and
iret
fucom
negl
mov
neg
inc
ja
xchg
sbb
aad
ret
or
dec
loope
testl
mov
cmpsl
idiv
and
jmp
out
inc
pusha
out
in
pop
lcall
mov
add
sbb
arpl
adc
lret
insb
pop
icebp
notl
pop
js
popa
sub
fdiv
xor
je
loop
pop
testl
sahf
testl
imul
mov
jb
idiv
call
lcall
xor
fimull
dec
daa
mov
fiaddl
aaa
add
lret
xchg
repz
mov
xor
aad
xor
and
push
mov
mov
arpl
arpl
arpl
scas
cmp
popf
add
orb
adc
mov
pop
cli
add
or
ja
cltd
xor
call
clc
dec
pop
js
xchg
xchg
push
shrx
mov
je
pop
outsb
aas
jg
pop
mov
std
cs
cmpsb
out
push
inc
je
je
out
jns
mov
mov
sub
sbb
lock
push
mov
and
data16
push
xchg
mov
push
sbb
jo
mov
scas
xor
mov
and
fsub
shlb
sub
les
or
pop
testl
test
testl
or
xor
pop
mov
xchg
push
push
mov
int3
testl
cmpsl
xchg
mov
roll
mov
push
sti
cmp
pop
clc
test
insl
aaa
bt
pop
loopne
aad
negl
xor
xchg
xchg
or
scas
insb
ja
add
cmp
shlb
xchg
sbb
or
pop
inc
test
andl
sub
pop
xchg
or
imul
cltd
inc
cmc
mov
pusha
push
sub
or
xchg
imull
out
imull
scas
mov
ja
xor
mov
and
pop
shrb
leave
or
mov
sub
add
in
rcrl
cmpb
cmp
pop
mov
mov
jg
dec
or
cltd
sbb
xchg
cs
pushl
xor
fcoml
xchg
jmp
outsl
scas
or
imul
call
sbb
add
mov
imul
jp
imul
testl
or
loope
mov
pop
adc
mov
jmp
test
not
jo
inc
out
push
test
sbb
xchg
outsb
testl
cmp
testl
das
out
lock
dec
add
negl
in
andb
in
push
jg
xchg
pop
negl
repz
and
sub
mull
dec
mov
aas
mull
sarl
xorb
lods
mov
mov
sarb
movsb
idiv
mov
mov
roll
lret
lahf
sub
negl
adc
lods
adc
nop
div
push
adc
dec
idivl
jo
pop
mov
mov
inc
ret
push
ss
mull
jbe
jmp
inc
add
pop
dec
sub
fs
cmp
push
cmp
xchg
icebp
jne
sbb
call
divl
in
xlat
jno
cwtl
imul
mov
popf
les
push
jne
xor
mull
xchg
sub
notl
gs
ja
popa
adc
out
shrb
push
call
add
pop
add
leave
or
and
je
repz
rorl
stos
ja
sbb
fcmovnu
adc
divl
movsl
fs
sub
fiaddl
pop
js
mov
hlt
fmuls
movsb
xlat
mov
mov
xchg
and
push
lret
pushf
adc
leave
nop
xchg
test
ret
add
out
cmc
and
xchg
sti
enter
cmp
in
and
out
xor
jg
jmp
xchg
push
jo
mov
sub
into
loope
push
mull
das
enter
out
cmp
mov
xchg
xor
sub
outsb
cld
pop
mull
sub
or
mov
push
xorl
fimull
push
pusha
imull
mov
xchg
add
adc
push
out
jg
lret
faddl
inc
fcomi
adc
cmp
sub
inc
lods
shrl
in
fmull
test
or
or
and
lret
xchg
xchg
sbb
test
pop
test
neg
sub
push
push
out
mov
insb
mov
idivl
shr
sbb
mov
sub
addr16
jmp
add
xlat
pop
push
dec
mov
icebp
mov
movsl
leave
xchg
and
hlt
fldt
mov
sar
std
sti
pop
cmp
sbb
push
push
xchg
cltd
push
fwait
mov
and
je
mov
in
jnp
cwtl
movsl
addr16
mov
fcmovnb
mov
nop
mov
out
sbb
call
cmpsb
xchg
sub
out
imul
pop
mov
lds
mov
pop
pusha
in
mov
fstpt
scas
fsubs
test
imull
sub
lcall
iret
or
mov
dec
dec
pop
add
xlat
push
ljmp
out
xchg
test
dec
mov
jmp
adc
jle
mov
xor
cmpxchg
test
and
xchg
insl
and
add
negl
cli
out
enter
cmp
sbb
inc
or
ret
js
mov
sub
sbb
ficomps
maskmovq
idivl
adc
cmpsb
sub
xchg
fistl
or
arpl
dec
fbld
mull
dec
inc
test
cmp
xchg
insl
shlb
or
cmc
testl
cmp
xlat
xchg
dec
cmpsl
andb
lret
nop
divl
rcr
ja
xchg
shr
shl
or
xchg
lea
repz
stos
mov
cmpsl
pop
pop
or
in
mov
xor
sbb
movsb
fstl
xchg
imull
mov
sub
repz
xor
outsl
not
or
loop
add
or
push
cwtl
insb
or
mov
inc
xor
rcrb
inc
lret
sub
repnz
inc
int
cs
aad
jmp
movsl
aas
sbb
dec
jb
inc
mov
sub
mull
insl
testl
pop
loope
xor
or
sahf
mov
popa
fists
ja
push
mov
insl
pop
add
nop
mov
ss
idiv
sahf
lds
sub
jg
inc
daa
and
and
dec
mov
jae
pop
sbb
inc
js
push
jnp
leave
jle
jmp
mul
push
adc
das
call
fisttps
sub
inc
fstpl
out
insl
push
cld
loopne
mull
clc
enter
orl
adc
neg
push
fimull
adc
clc
test
sarl
xchg
pop
xor
sub
aam
sub
pop
notl
mov
mov
div
push
in
jle
cmp
popa
xchg
cmpsb
mov
testl
xchg
add
lods
jmp
cmp
into
je
imul
jle
cmpsl
cld
inc
inc
test
mov
add
inc
mov
notl
fimuls
or
push
fcompl
pop
testl
mull
adc
testl
clc
shl
lock
stos
xchg
imull
inc
int3
sbb
lahf
shlb
mov
jnp
sub
inc
sti
pusha
divl
out
push
negl
aam
subl
mov
mov
sub
hlt
aaa
in
pop
aaa
pop
fwait
testl
out
testl
dec
inc
imul
jbe
inc
and
xor
pushf
xchg
imull
mull
ljmp
lods
cmp
xor
mov
fincstp
cltd
in
add
lea
push
in
push
faddl
test
push
dec
das
push
sti
xchg
repz
notl
jmp
lret
xor
push
push
stos
push
aas
mov
fdivp
push
imull
lods
dec
sub
xor
sbb
push
idivl
mov
dec
negl
mov
mov
ss
or
dec
xchg
inc
das
sbb
scas
call
sbb
jae
out
pushf
add
loope
notl
popw
aam
sbb
jbe
jp
mov
mov
cmc
in
pusha
or
mov
adc
adcl
mov
xchg
sbb
out
or
dec
push
cmp
je
cltd
push
jge
repz
imul
sbb
xchg
inc
sub
rcr
or
rclb
and
jae
fcomip
scas
xor
or
faddl
hlt
mov
mov
mov
ficompl
sbb
stc
lock
xchg
pop
push
dec
push
into
jnp
pop
sub
in
rclb
negl
daa
rcll
out
clc
shlb
imul
xchg
lahf
mov
or
movsb
and
sbb
mull
and
out
pop
dec
das
sti
mov
bound
jp
pop
xchg
nop
and
fcmovbe
iret
mull
in
inc
nop
push
addr16
filds
idivl
adcb
out
dec
es
shrb
neg
adc
push
xlat
xor
pop
adc
cmpsb
popa
icebp
xchg
stos
div
or
sahf
outsb
data16
je
push
mov
mov
dec
cwtl
push
mull
push
lock
cmp
sti
mull
lds
cmp
inc
ss
idivl
push
push
loop
jmp
xor
out
nop
mov
xchg
adc
aad
pop
sbb
pop
mov
and
mov
jbe
sbb
stos
jmp
testl
outsl
sub
int
pop
xor
test
fdivl
jmp
mov
imul
sbbl
push
xchg
aad
or
sub
imull
mov
sarb
test
and
test
notl
movsl
inc
out
cmpsl
leave
push
mov
cld
enter
fucomi
lock
xlat
add
nop
rol
faddp
loopne
aad
mov
jmp
mov
leave
inc
xchg
fildl
mov
xlat
pushf
pop
xchg
and
cmp
sub
js
aad
outsl
aam
pushf
mov
ja
test
sub
div
fnsave
xchg
push
les
jg
and
pusha
je
pop
add
enter
outsb
adc
pop
stc
aaa
push
idivl
sbb
out
das
in
movsb
mov
jne
mov
imulb
dec
lahf
jbe
insl
xchg
dec
idivl
push
fs
ret
iret
iret
pop
sti
dec
mov
imul
and
in
mov
out
icebp
cmpb
fucomi
inc
ss
xor
addl
jge
ret
mov
out
push
idivb
pop
pusha
cmp
inc
mov
cwtl
or
insb
pushf
loope
jne
mov
add
and
jns
or
mov
mov
aad
mov
xor
sbb
inc
and
fisubrl
dec
faddl
lds
aaa
adc
flds
nop
or
push
iret
mov
fisubrl
sub
cmpsl
fists
test
jbe
jo
icebp
and
mov
push
push
pop
cmp
in
in
fs
stos
lahf
dec
jnp
mov
and
dec
aaa
out
jb
xchg
jecxz
outsl
adc
or
sbb
xor
test
mov
dec
rcr
push
pop
xrelease
inc
fwait
inc
clc
ftst
aaa
fsubp
lcall
mov
out
push
sub
jbe
adc
movsb
add
mov
lock
pop
imull
mov
inc
xchg
stos
ficoms
push
scas
mov
movsw
push
ret
sub
adc
add
xchg
fwait
je
dec
dec
aad
insl
mov
jno
mov
mov
mov
pop
adc
ja
mov
lret
pop
jmp
cmp
loopne
cmp
jmp
imul
daa
sub
mov
xor
mov
int3
mov
xchg
jge
mov
jns
leave
push
fdivs
push
lret
xchg
xchg
sub
test
imull
sub
aaa
xlat
loop
pop
daa
dec
push
pushl
xchg
xor
or
mov
push
into
in
rcrb
cmp
ss
mov
sbb
lock
testl
insb
lret
pop
test
out
and
idivl
pushf
ret
mov
pop
mov
fnsave
testl
push
cs
leave
imul
pop
jle
dec
xor
pop
and
fistpll
inc
out
pop
in
jo
mov
and
jp
inc
sbb
push
in
inc
xchg
xor
mulb
ja
daa
idiv
adc
xor
pop
pop
out
xor
sti
div
jmp
or
or
lock
pop
aam
mov
xchg
jne
add
stos
mov
xchg
xchg
and
fisttpll
ds
leave
dec
mov
shr
lea
dec
nop
sbb
icebp
sub
mov
pop
notl
ja
xor
add
test
push
mov
loop
addr16
dec
push
int
cld
idiv
add
sti
scas
xchg
add
xor
push
pop
fildll
out
idivl
cmp
push
int
out
push
lock
loope
idivl
lea
mov
ret
das
aam
fucomi
mov
sub
cmp
imull
adc
inc
outsb
mov
xchg
sbb
negl
xchg
cmp
aaa
clc
lea
je
add
out
mov
adc
push
outsl
idivl
push
imull
and
pop
jecxz
mull
movsl
mov
cmp
cmpsl
jge
push
test
cmp
sti
add
and
and
inc
mov
into
dec
push
mov
imul
add
mov
cmp
jb
add
js
xchg
pop
pop
add
mov
and
dec
jmp
je
jno
sub
and
cmp
dec
hlt
xor
fists
push
pop
fsubr
mov
ficoml
mov
xor
mov
popa
xchg
push
jbe
sub
cmp
and
cmc
stc
push
push
cmp
or
stos
les
addr16
jns
and
mov
adc
adc
sub
imul
out
push
and
xchg
inc
shr
ljmp
jle
inc
aam
dec
sbb
jle
cmpsl
xor
add
cmp
shl
inc
sbb
sub
in
mov
pushf
push
push
sub
sbb
jg
fsubp
clc
fucomp
mov
cltd
xor
in
fidivl
inc
adc
mov
dec
and
push
inc
std
js
je
add
out
leave
xor
iret
mov
aas
mov
adc
jge
bound
cld
cmp
cmp
xchg
inc
pop
scas
popa
mov
or
and
movsl
inc
mov
push
in
repnz
loope
xchg
push
cmp
in
out
sarl
je
xor
add
push
xabort
std
or
fldl
ljmp
push
xchg
int3
repnz
rcl
or
stos
pop
aad
cmovge
iret
ljmp
bnd
fcmovu
cmp
fstps
or
jecxz
mov
in
dec
pop
xchg
jne
and
dec
cmc
inc
dec
fsubl
fs
aaa
and
inc
in
sbb
ss
std
mov
inc
jno
fs
in
push
mov
mov
jo
test
stc
xor
rolb
xchg
daa
xchg
repnz
mov
mov
xbegin
fidivrs
jg
mov
loop
out
mov
xchg
in
inc
out
mulb
sub
push
mov
int3
xchg
inc
in
sbb
ficompl
cwtl
loopne
mov
xchg
ljmp
shrl
mov
xchg
inc
imul
dec
imul
int3
inc
jbe
iret
mov
dec
pushf
scas
gs
shlb
jp
jmp
imul
fnsave
cmpsb
iret
mov
mov
pusha
mov
sahf
into
push
jbe
rorb
add
mov
jge
ja
jb
js
push
mov
aad
sbb
push
icebp
and
int
fs
rcrb
jae
pop
cmpsl
outsl
int3
push
movsl
in
adcb
shlb
inc
int
icebp
outsb
jne
pusha
je
add
pop
cmpsl
and
inc
sbb
jp
fidivrl
sub
out
mov
sub
int
aam
mov
xchg
fistpl
fidivl
mov
je
out
jecxz
jno
ss
dec
jecxz
or
out
cli
idiv
js
jl
shlb
mov
nop
xor
cmp
xlat
dec
push
test
orb
cmpsb
and
jmp
packuswb
lcall
ss
mov
out
jl
stos
mov
inc
mull
outsl
mov
idivl
lock
cld
ds
lcall
test
divl
cmp
idivl
xchg
dec
mov
mov
push
mov
sbb
insb
loopne
xchg
sub
nop
xor
xchg
xchg
sub
and
xchg
fstpt
jbe
sbb
xor
inc
cmp
sarb
jle
push
sbb
not
es
fildl
sub
pusha
fcoms
jo
mov
jbe
cmp
aad
inc
dec
xchg
cli
divl
shll
in
jo
inc
mov
mov
leave
mov
jns
or
jmp
jo
imul
fmull
jno
popf
cmpsl
test
push
inc
dec
lods
call
pop
scas
mov
test
idivl
add
cmc
add
jo
push
mov
nop
or
popf
cmp
and
loopne
fndisi(8087
xlat
pop
les
xor
pop
xchg
push
fidivrl
push
cmpsl
out
adc
icebp
neg
into
cmp
jnp
pop
xlat
ficomps
repz
sub
fists
or
fcmovnb
cmp
and
mov
mov
xor
stos
pop
les
loop
push
fwait
mov
jo
call
out
mov
bound
in
orb
pop
mov
out
jo
jg
mov
test
sub
loopne
sbb
pop
stc
jno
je
repz
icebp
pushf
push
xlat
cmp
leave
int
and
testl
cmpl
mov
in
into
out
sbb
outsb
jbe
mov
shl
xchg
mov
dec
mov
imul
aam
idivl
filds
out
push
xchg
test
lds
and
and
inc
fnstenv
ret
sub
not
cwtl
bound
lock
testl
fsubl
testl
lds
aad
jecxz
adc
push
lahf
add
xchg
dec
lods
push
loopne
add
cltd
inc
rcll
push
dec
out
filds
mov
out
in
ret
imul
mov
ja
and
xorb
mov
imul
aaa
fmuls
adc
lcall
data16
ja
cmp
sbb
jno
mov
jle
mov
imul
mov
aas
fcmovbe
jnp
outsl
cmp
int3
pop
and
in
cs
pushl
mov
adc
jbe
cmc
sbb
xor
sub
mov
lods
add
loopne
jnp
pop
mov
out
mov
inc
add
cmp
ficoml
cld
mov
fstl
jne
inc
jg
fldl
test
and
cli
mov
shll
sti
outsl
mov
ljmp
cmpsl
mov
sbb
xchg
or
ja
jbe
movsl
shll
ficoms
loopne
stos
iret
popa
push
in
and
out
fucomi
xor
and
dec
ret
neg
cwtl
fcomip
adc
vmaxps
push
inc
movsl
xor
arpl
popa
sub
ljmp
mov
int3
dec
inc
xchg
add
mov
mov
ret
push
pop
inc
fs
mov
and
adc
sub
sbb
idivl
jne
bound
lret
xchg
jecxz
and
sbb
in
push
sti
xchg
jmp
test
lret
xor
jg
bound
adc
add
sub
loope
in
testl
lea
dec
or
cmc
les
fldenv
and
mov
jecxz
fists
or
lret
ss
jp
fidivrl
hlt
testl
lahf
pusha
push
xor
inc
dec
aam
divl
sti
stc
clc
call
repz
shrb
xor
mov
jno
pop
xchg
icebp
push
jbe
repz
adc
dec
or
ret
div
hlt
push
jb
test
cmp
xlat
jae
adc
idivl
xchg
sub
push
sti
mull
ja
notl
and
jne
repnz
mov
je
ret
dec
insl
add
cmp
cltd
jle
sbb
dec
movsl
push
stos
mov
push
add
or
into
in
or
inc
inc
divl
mov
enter
imull
mov
ficompl
nop
add
shll
adc
loope
out
dec
leave
lock
in
adc
ja
jecxz
cmp
dec
jnp
lahf
outsb
sbb
inc
fildl
sti
cmpsl
xlat
neg
stos
daa
test
mov
aaa
iret
adc
pop
test
push
xor
mov
jmp
cmp
negb
push
mul
sub
jb
int
movsb
xchg
sbb
js
and
imull
xchg
dec
pop
mov
imull
dec
pop
mov
je
or
lods
add
out
cmp
mov
arpl
jmp
cmp
movsb
or
cmpsl
or
and
fiadds
push
out
testb
jns
ljmp
jae
pop
into
in
movsl
push
pop
test
push
iret
stc
cmp
ds
mov
jns
pusha
inc
mull
testl
lret
dec
in
cli
jle
adc
sti
sbb
ss
jnp
int3
xor
jne
pop
pop
js
add
je
out
outsb
fists
mov
adc
cmpsb
xor
push
aam
mov
fistpl
push
fldt
fwait
loop
iret
addr16
and
ds
divl
mov
imul
subb
xor
ret
or
xlat
xor
fiaddl
pop
cmp
sbb
ss
push
mov
sbb
out
xor
dec
iret
psllq
push
les
add
btr
adcl
out
jno
add
lret
imul
loopne
sub
or
or
fdiv
testl
ljmp
push
jne
roll
idivl
cvtps2pd
pop
mov
dec
not
xchg
cmpsl
sub
fcomps
fdivp
adc
xor
lods
out
xchg
or
inc
add
arpl
loop
pushf
cmpsb
mov
div
mov
sbb
das
add
out
fcomip
lea
inc
xchg
scas
cmc
pop
xor
push
mov
sbb
jnp
loop
outsl
out
jge
mov
pop
fsubrs
shl
jmp
call
pop
fdiv
mov
enter
out
int
mov
push
in
fstl
dec
add
fnstcw
mov
imul
imul
sbb
mov
xor
movsb
insl
punpcklbw
and
rcll
stos
sbbb
int3
aas
xor
jle
out
mov
sub
popa
in
inc
sub
pop
scas
xchg
cltd
fcoml
cld
fnstsw
and
cwtl
inc
out
pop
or
fwait
aaa
mov
bound
mov
out
out
xchg
out
aam
push
add
loop
or
dec
scas
xchg
loopne
out
cli
not
insl
pop
test
dec
ret
mull
xchg
pop
lods
sbb
cmpsb
sbb
dec
daa
adc
push
and
fdivs
cmp
cs
out
lods
xchg
out
stc
fs
push
cld
popa
test
cmpsb
lcall
and
pop
jae
add
test
push
push
mov
mov
fstl
xor
ret
cmp
mov
outsb
pop
pop
idiv
mov
xchg
xor
bound
hlt
jbe
icebp
dec
mov
lods
idiv
in
je
lods
test
andl
call
add
mov
cmp
pop
sbb
fisttpll
repz
pop
push
andb
add
es
and
pop
testl
dec
testl
sbb
xchg
or
push
je
xchg
fcomps
out
movsl
popa
imul
notl
and
testl
mov
test
push
loop
jmp
lcall
stc
jl
jp
inc
testl
or
pop
add
daa
out
push
or
jmp
ret
stos
emms
test
sub
imul
pop
dec
pop
sub
imul
int3
xor
lahf
or
pop
inc
mov
arpl
idivl
insl
add
fsubs
pop
addr16
popw
add
testl
pop
scas
movsl
cmpl
push
and
inc
cli
filds
mov
inc
dec
xchg
nop
fnstenv
pop
out
jg
fsubrl
xor
sub
icebp
mov
cmp
test
stos
movsl
test
fdiv
mov
xor
adcl
gs
sbb
insb
dec
or
or
stc
in
pop
jno
and
add
sti
testl
xchg
int3
into
js
sbb
jmp
or
sub
sti
shl
lods
add
addr16
push
sub
xor
mov
xchg
negl
add
mov
jmp
jo
cs
sti
jle
fidivl
clc
mov
jmp
cmp
imul
inc
push
xchg
int
or
or
cld
add
ja
mov
mov
push
adc
orl
jb
adc
aad
outsl
lock
xchg
ja
cmp
push
in
fmuls
jg
inc
sbb
lods
fldl
or
inc
leave
jns
in
pop
pop
loop
xor
xlat
loopne
pushw
scas
cltd
scas
aaa
xchg
sbb
push
out
jl
push
leave
movb
and
mov
xor
push
fisubrl
cmpsb
jo
xchg
lods
movsb
jge
lds
cmp
lea
pop
in
inc
push
push
and
out
adc
insl
insb
repz
jmp
xchg
adc
stc
push
and
dec
adc
addr16
cmp
xchg
sbb
andl
or
fcoms
mov
pop
inc
cmp
cmc
inc
mov
or
mov
cmp
out
pop
mov
jb
mov
sub
add
cwtl
out
dec
movb
orl
jmp
pop
sahf
imul
cltd
add
iret
fcmove
aad
mov
jae
out
dec
je
sbb
aaa
cmp
xor
mov
out
sub
add
dec
ss
pop
xchg
lods
push
xchg
mov
out
mov
xor
int
divb
jnp
stos
in
out
xchg
fwait
dec
popf
push
adc
jmp
mov
stc
rcr
mov
lods
adc
xchg
fiadds
jbe
jmp
movsb
push
pop
push
enterw
ret
pusha
or
ficompl
jno
and
jl
dec
into
xor
dec
in
movsl
jecxz
mov
inc
dec
sbb
jbe
aam
stc
test
mov
push
ljmp
out
imul
mov
and
or
mov
fimull
sahf
js
pop
jecxz
fidivrl
xchg
inc
jne
mov
sbb
mov
mov
jg
push
add
push
fidivrl
out
inc
dec
adc
pop
inc
sbb
cmp
pop
jb
adc
shll
and
cmc
mov
or
iret
add
mov
pop
ret
xchg
mov
mov
roll
sub
inc
in
negl
or
dec
xor
dec
push
arpl
sub
inc
js
je
hlt
mov
mov
test
js
push
and
add
xor
iret
pop
push
stos
iret
cwtl
xlat
pop
rcrb
addr16
stc
jmp
and
in
mov
enter
aas
or
sbb
adc
or
push
jbe
rcrb
addl
dec
sahf
or
push
insl
lods
push
mov
dec
pop
adc
int3
aaa
popf
int
rol
sub
icebp
scas
in
inc
sbb
mov
xchg
or
lcall
fnclex
jbe
mov
jmp
or
fdivrp
aaa
sahf
shll
out
mov
ljmp
outsl
addb
cmp
mov
push
mov
pop
imul
mov
leave
mov
inc
xor
aaa
out
ljmp
sub
push
push
out
int3
sbb
mov
in
jns,pn
jmp
inc
das
shll
leave
mov
sub
adc
lods
cmpsb
sbb
lcall
cmp
insb
inc
push
xchg
dec
neg
mov
push
popf
xchg
sub
in
mov
orb
pop
mov
push
out
inc
sbb
cmc
div
aam
aaa
xor
in
xchg
out
adc
sbb
fcompl
cmp
enter
sub
dec
bound
pop
testl
or
inc
cld
mov
xchg
lods
mov
repnz
mov
repz
jno
divl
sbb
negl
movsb
rorb
dec
add
sti
or
adc
inc
fnsave
idiv
cmp
mov
sbb
fsin
jp
orb
mov
xor
dec
loop
testl
popa
xor
mov
sub
fsubl
xchg
sbb
mov
mov
cld
push
push
pop
or
xchg
cmp
std
clc
mov
sahf
jmp
test
jmp
jmp
neg
and
mov
icebp
fdivl
push
jg
testl
mov
fdiv
jmp
xchg
sbb
test
mov
mov
and
jmp
dec
testl
push
fiadds
je
and
mov
xchg
pushf
adc
xchg
dec
cmp
and
pop
es
in
fldl
shrl
into
in
out
insb
ss
outsb
scas
iret
inc
fmull
xlat
and
push
xor
push
dec
pop
sub
notl
jl
ss
sbb
lock
aam
xor
xor
call
mov
jne
into
in
sbb
aaa
cwtl
jne
adc
sbb
loopne
repnz
aas
mov
cmp
and
lcall
imul
xchg
mov
pop
negl
es
clc
rcrl
mov
scas
mov
fisttpl
neg
data16
adc
repz
pop
or
inc
ret
pop
or
sub
divl
hlt
xchg
cld
push
int3
testl
mov
and
xor
pop
sbb
cmp
data16
push
fstp
dec
mov
jnp
std
test
int3
iret
test
gs
in
pushf
cld
or
imul
and
icebp
fincstp
outsb
mov
hlt
loop
fistpl
in
cltd
xchg
divl
popa
lret
insb
cmpsb
push
jno
mov
push
and
push
lds
and
mov
jo
ss
jecxz
movsb
fistpll
hlt
ja
nop
dec
push
add
int
ljmp
push
inc
stos
xchg
ret
idivl
sbb
sub
es
pop
or
test
out
lcall
pop
and
fsubrl
cmpsl
push
mov
call
ret
daa
mov
pop
ret
sbb
inc
xchg
lds
js
fildl
add
divl
fisubs
pop
repz
mov
adc
test
mov
xchg
cwtl
push
jle
mov
mull
add
insb
cmp
pop
js
and
mov
mov
not
dec
mov
mov
cwtl
adc
sub
jecxz
rorl
mov
sarb
ljmp
jo
in
sub
or
lcall
rcll
out
sti
sub
pop
jne
leave
not
dec
dec
out
lods
add
repnz
popa
jl
je
mov
adc
and
cmpsl
imul
sbb
sub
shl
mov
xchg
addr16
mull
mov
push
sub
ja
mov
and
adc
cmp
ror
mov
xchg
imull
into
cld
lcall
cmpsb
xor
add
in
sbbb
xchg
dec
xchg
loopne
nop
push
mov
xchg
icebp
clc
div
cmp
inc
cmp
sbb
aas
pop
push
push
or
push
mov
js
sarl
dec
insb
xchg
sub
scas
testl
mov
cmpsb
fistps
xchg
xor
out
lea
ds
dec
idiv
rcr
cs
cmpl
mov
addl
mov
loop
hlt
mov
das
and
imul
mov
adc
jb
push
or
add
pop
xlat
mov
sbb
sbb
fs
inc
xchg
xor
sub
jne
aas
clc
por
adc
ss
scas
jno
movsl
popa
notl
mov
mov
stos
stc
lock
add
and
cmpsl
negl
fs
imull
sub
nop
lcall
movsb
mov
negl
pop
ljmp
pop
and
imul
or
jp
jmp
frstor
fdivrl
in
sub
imull
and
aas
fidivl
repz
icebp
jg
popf
push
nop
inc
sub
pop
flds
in
sbb
jmp
inc
push
idiv
jbe
dec
cld
cwtl
and
stc
sub
pop
xchg
xlat
mov
dec
sub
shlb
adc
bound
dec
arpl
mov
testl
dec
pop
fwait
out
negl
cwtl
addb
sbb
inc
insl
ficoms
dec
fwait
das
jecxz
inc
add
push
test
scas
out
popf
imull
clc
mov
pop
or
cmp
pop
xchg
sub
in
xlat
add
bound
push
nop
es
and
imul
in
neg
aas
mov
push
add
stos
mov
ss
sub
xlat
mull
mov
je
test
pop
stos
pop
ret
movsl
dec
daa
test
jo
push
xor
fwait
es
loopne
test
fucomi
add
mov
cs
sub
enter
test
sbb
xchg
mull
sbb
mov
cmpsb
xchg
rorl
lret
mov
push
testl
xchg
filds
int
push
dec
cmc
sub
sbb
cmp
imull
sbb
dec
sub
loop
imul
outsl
add
fs
pop
pop
add
movsl
xorb
ret
out
shr
out
negl
sbb
pop
cs
push
xor
lock
xlat
jge
shll
push
sub
xlat
in
add
fisubrl
imull
pusha
fistpll
lock
out
xor
cwtl
lret
imull
cmp
popf
stos
push
pop
lods
pop
lahf
dec
out
adc
push
idivl
mov
lods
test
jl
sbbl
in
adc
in
push
neg
out
jmp
test
or
adc
testl
mov
imull
or
lcall
dec
mov
cmp
xlat
outsb
inc
sub
ret
and
lcall
popa
rolb
mov
xchg
fcompl
pushf
jno
or
mov
leave
gs
cs
lret
nop
and
insl
out
pop
outsb
mov
ret
out
shlb
addr16
testl
test
jbe
cmp
or
sbb
or
outsw
bswap
lds
testl
pop
dec
imull
cmpsb
ficoms
repz
arpl
adc
push
subb
cmp
cmc
sbb
fldt
or
and
inc
inc
adc
int3
cmc
out
push
cmp
scas
test
imul
cs
xlat
cltd
outsb
or
movsl
scas
dec
inc
adc
aam
js
jp
push
jo
xlat
test
bound
cmpsl
pop
das
shr
out
adc
mov
test
add
mov
sbb
mov
adc
and
pop
int
in
repnz
pop
sbbb
mov
sub
jle
out
push
push
sbb
push
jne
fs
lods
inc
and
movsb
jg
and
add
ret
into
push
fisttps
in
sbb
push
jb
sarl
pop
mov
jg
repz
daa
mov
ficompl
ret
jnp
pop
in
loop
xor
sti
cmp
orl
scas
xor
cltd
push
push
push
idiv
imul
adc
or
imul
adc
int3
push
sbb
jne
cltd
ret
or
lret
mov
sub
mov
cli
dec
and
push
popl
ljmp
in
pop
xchg
jns
stos
iret
out
clc
aam
loopne
jmp
inc
jp
cwtl
fists
daa
lahf
sahf
lods
xchg
push
inc
pop
pop
insb
mov
les
imul
rcrb
or
lcall
add
das
fiaddl
repz
sbb
pop
aad
xor
fistps
jnp
mov
pop
push
js
mov
sbb
adcb
sub
cld
enter
mov
and
adc
inc
out
push
adc
in
out
stos
add
pop
and
rcr
in
popa
lahf
ja
neg
ret
push
mov
outsb
sbb
sub
push
xor
mov
hlt
shl
or
int3
pop
cmp
das
inc
insl
sbb
aas
loopne
enter
arpl
adc
cmp
sub
mov
jne
sahf
out
add
dec
lock
out
subl
cmp
inc
xor
inc
push
fisttps
aam
shr
adc
out
lds
aaa
jb
cmp
jmp
jle
sub
and
dec
inc
dec
ss
xor
idivl
lret
xchg
clc
aaa
inc
adc
lods
sub
aas
lea
divl
incl
mul
xlat
sub
dec
testl
ror
stos
adc
mov
mov
pop
dec
cmpsb
out
clc
das
fs
div
inc
cmp
pushf
mov
or
or
lcall
adc
and
push
negl
int3
mul
idivl
sbb
mov
mov
mov
jecxz
mov
icebp
cmp
sbb
inc
jb
daa
stc
mull
icebp
jmp
repnz
jno
mov
xor
in
popf
inc
lock
imul
xchg
fstl
cmp
loopne
adc
cmpsl
jb
imull
fistps
fcoml
xchg
out
popf
xor
mov
aaa
icebp
pusha
mul
add
or
pop
neg
shlb
shll
idivl
mov
xlat
pop
subl
sbb
mov
subb
pop
mov
fldt
mov
in
pop
arpl
les
xor
add
inc
and
cld
imul
aam
jge
icebp
testl
fs
mov
imul
xchg
push
fwait
cmc
add
xchg
notl
mov
adcb
jns
jp
aaa
aam
sti
stos
push
mov
icebp
xlat
inc
imul
in
mov
adc
mov
sub
mov
dec
pop
xchg
add
lea
dec
insb
jecxz
sahf
cmp
fwait
or
mov
mov
xor
lcall
push
pop
cwtl
mov
sub
ret
mov
out
mov
imul
out
push
mov
xorb
adc
mov
enter
repnz
out
faddp
aad
lods
mov
lock
incb
filds
out
adc
or
xor
les
mov
loopne
out
notl
add
in
out
mov
out
loopne
test
jne
insl
arpl
call
in
aaa
sbb
daa
pop
fcoml
pop
dec
xor
notl
mov
cmp
xchg
mull
gs
mull
jmp
mov
insl
addr16
dec
rclb
in
popa
mov
notl
dec
pop
push
mov
pop
je
or
testl
jb
xor
outsl
out
inc
das
in
dec
cli
pop
lea
ror
int3
push
pusha
aas
pop
pop
xor
add
je
outsl
xchg
repnz
lahf
and
pcmpeqb
jecxz
cmp
add
cmp
sbb
repz
adc
loopne
and
mul
scas
inc
or
insl
cmpsb
loope
testl
ljmp
add
and
xchg
lahf
xchg
repz
push
fstps
or
push
out
jge
mov
add
mov
shl
lcall
cld
inc
mov
xchg
lods
add
add
iret
inc
negl
ds
pop
call
lret
sahf
leave
pop
sub
xor
pop
loope
pop
or
cli
jmp
clc
xchg
jle
add
xchg
jae
in
cld
aad
arpl
sbb
scas
stc
mul
loop
outsb
enter
jmp
jmp
sbb
jg
jns
je
movsl
add
pop
or
sub
jmp
mov
cmpsb
inc
test
push
pop
push
inc
int
xchg
and
dec
or
mov
andb
inc
xor
pop
jb
sub
addr16
dec
int3
jg
sbb
xchg
inc
loopne
add
mov
repz
fisttpl
cld
lds
or
cmp
jns
sub
jp
adc
jbe
lret
jne
inc
ja
xchg
add
lock
hlt
lret
fidivl
fiadds
fsub
inc
pop
fisttps
ret
lcall
idivl
jne
xchg
negl
shlb
jnp
mov
dec
test
imull
out
outsb
adc
ja
inc
add
dec
cmp
mov
sub
xchg
mov
push
mov
cmpsb
pop
cli
adc
out
out
xchg
pop
mov
xor
notl
and
outsb
pop
gs
inc
cmc
sub
push
inc
pop
mov
not
dec
dec
jmp
xlat
leave
push
int
dec
jg
clc
jns
shrl
add
cli
xchg
xorb
fdivr
pop
test
sub
seto
dec
mov
out
inc
shr
int
xchg
xchg
idivl
out
div
and
sbb
jo
scas
xchg
insl
test
add
or
notl
add
push
xchg
cld
vpmulhw
sub
xor
xchg
xchg
xlat
or
ds
xor
popf
sbb
sub
inc
arpl
subl
sub
ret
dec
aad
std
jno
xchg
fistl
enter
xchg
cwtl
dec
sbb
test
jmp
mov
or
icebp
cmp
std
mov
dec
fildl
idivl
mov
xchg
or
add
loope
xor
mov
inc
ret
fisubl
orb
xor
pusha
mull
in
out
test
inc
mov
fisubrl
stos
fsubs
shll
rcl
rolb
push
xor
repz
cld
hlt
les
roll
aas
stc
fisubl
sbb
adc
outsl
jbe
mov
in
in
add
movsl
or
fwait
data16
js
movb
pop
xchg
movsb
das
push
add
xchg
aas
sbb
jno
xchg
pop
pop
mov
stos
jmp
out
adc
jns
sub
mull
bound
mov
mov
mov
inc
lcall
sbb
push
xlat
sub
add
add
mov
fisubrl
push
xchg
shrd
pop
lret
repnz
iret
icebp
fisubrl
neg
adc
ret
sub
leave
and
fstl
mov
pop
xchg
or
out
push
out
ss
test
xor
lret
es
notl
cmp
into
or
imull
push
pop
or
push
adc
push
pop
test
sub
dec
inc
jo
dec
inc
testl
arpl
add
push
xor
aas
xchg
sbb
repnz
negb
mov
mov
add
movsb
repz
cs
cwtl
loopne
addr16
cmp
xor
mov
sbbb
inc
push
stc
mov
insb
xchg
or
or
daa
in
je
or
mov
std
adc
xor
and
cmpsb
and
xor
cmp
sti
xor
cltd
subb
out
das
bound
fs
ret
aas
mov
les
push
cmp
jg
aaa
subb
push
cmpsb
xchg
shll
testl
dec
and
xor
sub
xchg
ja
int
fildl
pusha
ficoms
fwait
cmpsl
and
fincstp
adcb
ret
in
notl
mov
int
cmc
bnd
xchg
add
fsubs
cltd
jge
imul
in
out
xor
notl
xchg
jbe
clc
icebp
sub
testl
scas
cmc
divl
add
xchg
fwait
sar
mov
testl
test
sub
stc
pop
data16
dec
lret
sbb
inc
test
shrl
pop
inc
xchg
imull
adc
mov
xchg
mov
jbe
imul
cmp
ja
frstor
adc
dec
xor
neg
fmull
xor
jmp
sub
dec
lret
push
in
or
jns
int
xlat
and
mov
jmp
shl
push
pop
mov
hlt
cmp
in
out
mov
pop
cmp
sti
xor
dec
jns
aaa
negl
imulb
notl
push
das
xor
mov
sub
dec
push
or
jnp
out
push
fisttps
popa
sub
inc
divl
jbe
insb
jb
xchg
gs
popa
adc
loop
nop
inc
cmpsb
add
or
mov
insb
add
jmp
test
bound
out
cmp
mov
mov
lock
shl
repnz
jge
mov
in
testl
lret
popa
fsubrs
fimull
dec
rclb
jmp
dec
push
push
imull
push
iret
stos
aam
pop
negl
rcr
fcoms
dec
notl
scas
call
stos
aaa
fdivrl
inc
outsb
cmc
dec
div
xchg
fistps
clc
xchg
idivb
jnp
xchg
testl
scas
inc
imul
mov
fwait
pop
cmp
xor
outsl
test
or
imul
mov
ja
out
xchg
nop
scas
shrl
cwtl
mov
enter
sbb
lahf
pop
mov
out
loopne
imul
repz
or
mov
ja
adc
mov
or
xor
movsb
ffree
cmp
inc
push
into
fisubs
xlat
jns
push
loope
push
sbb
mov
sub
pop
test
push
fwait
xor
testl
rcrl
jg
sbb
fstps
or
lret
in
or
std
xor
imul
or
xchg
cld
inc
mul
scas
mov
lret
add
testl
mov
lock
and
mull
aas
div
dec
push
adc
mov
aam
push
fiaddl
idivl
imul
or
out
push
outsl
mov
xchg
jo
xchg
fadd
lahf
imul
dec
mov
inc
lods
popf
mov
cmp
in
xor
imull
cld
add
js
inc
jp
push
bnd
jg
dec
or
in
je
pop
xchg
testl
or
notl
xchg
sub
and
divl
iret
sub
jo
mulb
or
xor
push
cmp
imul
push
repnz
cwtl
xchg
sbb
push
std
sub
sarb
sbb
mov
xor
pop
notl
andl
push
xchg
call
or
icebp
sar
pop
push
push
test
fbld
test
repnz
hlt
insl
outsl
cli
shlb
sbb
xor
mov
enter
jmp
lcall
push
out
neg
movsb
js
dec
roll
rclb
int3
or
jle
pushf
negl
mov
or
fstpl
jbe
mov
pusha
icebp
testl
xor
lcall
aaa
fcmove
idivl
ror
adc
mov
lods
es
and
out
pop
sub
dec
push
jge
dec
out
negw
jne
xchg
push
adc
repz
pop
lcall
sub
cmp
cmp
mov
out
adc
cmp
out
inc
dec
movsb
sbb
mov
cmc
sub
out
out
xor
imul
adc
pop
bound
mov
mull
mov
test
imul
xlat
cmp
movsl
inc
jne
fldl2e
inc
add
cmpsb
fucom
int
test
icebp
inc
aam
adc
add
ss
out
testl
daa
push
sub
push
sbb
mov
je
in
shrl
or
cld
out
xchg
mov
in
lahf
pop
mov
ss
loope
mov
loope
notl
addr16
lods
divl
jo
sub
lds
adc
mov
xor
xor
push
jp
testl
test
lock
adc
enter
ret
test
push
fs
dec
pop
push
inc
sub
sub
cltd
faddl
rcl
orl
loopne
sbb
idivl
sub
int3
testl
leave
clc
mov
or
pop
cmp
hlt
push
pop
xor
dec
filds
push
popf
sbb
loopne
mov
jnp
hlt
push
mov
mov
and
ja
imul
cmpsb
xchg
pushf
jmp
push
jmp
adc
mov
and
pop
inc
data16
pop
neg
out
dec
fistpl
add
insb
and
sarb
aaa
cwtl
mov
out
in
sahf
cmp
lea
call
in
testl
imul
shll
xor
cmp
sbbl
xor
jl
mov
fadd
or
int
test
sbb
push
dec
pop
inc
and
push
push
jmp
out
cmpsl
mov
test
notl
adc
sub
je
dec
push
notl
ret
xor
sbb
fildll
xchg
push
out
divl
add
je
jp
jae
or
sarl
out
lods
xor
not
inc
test
dec
lcall
in
aaa
push
aam
outsl
cmp
xlat
idivl
out
push
pop
scas
inc
sub
sbb
inc
push
pop
dec
testl
insl
testl
ror
mull
in
sub
add
xchg
in
imull
popf
cmp
imul
xlat
mov
add
jmp
pop
sbb
cs
adc
dec
cmp
mov
mov
add
maskmovq
testl
and
aam
sbb
pusha
das
lcall
mov
out
push
sub
testl
xor
xor
fdivl
mov
sub
mov
sbb
jb
aam
xor
inc
aas
adc
or
test
sub
imul
fisubrl
enter
testl
push
sbbb
lret
adc
loopne
sbb
and
cmp
pop
xchg
stos
call
loop
shlb
mul
aad
popa
ss
push
scas
in
push
stc
mov
pop
ret
loope
sbb
mov
mov
adc
testl
push
nop
mov
push
push
dec
jb
pop
dec
repnz
std
jno
mov
sbb
es
sahf
scas
inc
pop
not
sbb
rcll
in
push
xor
xchg
adc
call
push
out
jne
loop
testl
and
jecxz
push
pop
notl
push
mov
adc
mov
mov
lret
stos
notl
push
mov
pop
into
shl
xchg
pop
xchg
pop
pop
dec
roll
push
inc
jmp
jno
mull
shlb
jne
inc
dec
xchg
testb
sub
inc
test
jge
out
xchg
mov
outsb
out
xlat
xor
imull
sub
test
mov
add
mov
icebp
xor
insl
gs
add
push
mov
mov
decl
stc
push
in
icebp
jl
pcmpgtd
enter
mull
push
notb
push
popf
mov
sub
in
es
cmp
mov
and
das
mov
or
loopne
lcall
std
shlb
mov
fwait
roll
out
imull
repnz
xor
addb
rolb
mull
inc
inc
and
push
jnp
out
mov
add
stc
jne
mov
lds
inc
mov
xlat
pushf
bound
aaa
movb
scas
outsb
negl
lock
cli
push
mov
pop
test
loopne
cmp
lods
std
sbb
add
pop
mov
sub
jo
adcl
je
mov
add
stos
adc
dec
fwait
ja
testl
out
xchg
cmp
popf
sub
or
fstpt
icebp
repnz
je
imull
inc
pop
js
xor
fucomp
divl
xor
push
adc
xlat
pop
fisubs
pushf
addr16
cltd
xor
ret
add
js
lret
dec
in
dec
mov
test
not
adc
mov
dec
nop
mov
idivl
outsb
cmp
das
inc
mov
xor
out
pushf
idivl
fcoms
pop
mov
xchg
int
data16
sub
jo
test
fnstcw
cli
adc
popf
pop
testl
xor
cbtw
sbb
push
fmull
push
jmp
cmpsb
stos
xchg
std
xchg
imul
jbe
sub
lock
jns
or
sub
rolb
ljmp
data16
addb
xchg
dec
xor
fs
movsl
xchg
dec
pop
test
cwtl
cmp
in
mov
xor
aam
lcall
imul
cmp
pop
divl
xchg
xchg
adc
jle
xlat
lcall
cltd
nop
data16
pop
sbb
cmp
mov
dec
test
imull
xor
cmp
sahf
aaa
test
int3
aas
jno
push
pop
repnz
cmc
sbb
mov
jo
sbb
scas
pop
insb
cmp
fdivp
stos
arpl
js
mov
mov
iret
jnp
xchg
add
js
lods
and
xor
xor
pop
sahf
inc
divl
sbb
mov
jo
mov
mov
daa
adc
pushf
fbld
je
nop
sbb
dec
repnz
push
daa
aad
or
xor
out
xor
call
fcomip
lds
sub
adc
mov
out
inc
sub
imul
ss
aas
xor
lcall
jmp
push
daa
push
dec
dec
sti
testl
push
pop
aas
push
loop
push
mov
add
xlat
ljmp
bound
xchg
mov
mov
xchg
js
push
mul
inc
ficompl
sbb
jns
loopne
jp
imull
add
lods
mov
loope
idiv
push
std
xchg
push
cmp
jecxz
filds
lret
testl
fcoms
out
xor
push
shlb
cs
daa
push
negl
dec
outsl
inc
shrl
xchg
arpl
or
sbb
xor
mov
fucomi
fbstp
in
into
roll
adc
cltd
mov
cs
jb
pop
repnz
cmc
adc
jbe
xlat
jb
add
push
push
mov
adc
jp
gs
or
mov
scas
lret
out
xchg
shlb
xorb
std
pop
cli
inc
mov
notl
add
ss
mov
sbb
data16
mov
js
pop
cwtl
jp
mov
jge
nop
testl
sub
mul
shr
cmp
mov
insb
push
test
aas
inc
cmpsl
mov
dec
cmp
or
movsb
test
jl
imull
icebp
xor
pop
cld
shll
pop
dec
call
cmpsb
ffreep
leave
xlat
fcmovu
fstpt
mov
mov
xchg
jo
lods
aas
out
cmp
push
rolb
test
imul
ret
mov
cltd
into
mov
arpl
neg
and
adc
fsubrs
push
mov
leave
out
stos
jecxz,pn
out
shlb
mov
sti
testl
jge
cmc
push
xchg
nop
sbb
stos
xor
jnp
inc
pop
pop
push
push
icebp
mov
cltd
imull
sub
pop
std
sti
push
imull
shlb
les
inc
mov
loopne
adc
lds
bound
mov
test
push
sub
push
dec
ret
pop
testl
inc
xchg
push
inc
and
mov
out
fwait
push
int
xor
sub
je
lds
out
popf
mov
lock
data16
sub
fisubl
ficompl
add
arpl
sbb
jb
nop
pop
sbb
fiadds
mov
into
jle
cwtl
idivl
dec
jbe
movsl
and
xchg
pop
xchg
insb
push
adc
sub
sbb
testl
mov
or
imull
cmpsl
lds
ffree
std
repnz
cmp
ror
pop
testl
fcomp
mov
shrl
int3
mov
sbb
jae
push
pop
cltd
push
repnz
xor
rorb
idivl
cld
cli
mov
imull
fs
xor
testl
dec
imul
fdivrl
fcomi
adcl
in
xor
push
sub
mov
sub
push
cli
aad
cwtl
dec
jne
out
test
mov
cmp
outsb
hlt
push
or
imull
lret
fnstsw
xlat
xchg
jle
popa
pop
scas
adc
testl
or
out
sub
subb
int3
divl
cmp
notl
repnz
popa
imul
enter
push
sbb
pop
negl
add
jmp
icebp
aas
jg
out
add
pop
or
cmp
repz
or
gs
inc
in
leave
pop
divl
adc
mov
dec
and
cltd
out
repz
insl
icebp
test
insb
stos
or
test
cmpsl
std
push
in
push
dec
and
mov
jmp
sarb
cld
testl
pop
ret
pop
dec
shrb
pop
cmp
fiaddl
adc
push
jbe
pop
jne
mull
mov
idivl
pop
fadds
ficompl
sbb
sbb
mov
xchg
nop
out
adc
call
inc
lret
jecxz
xchg
enter
dec
test
int3
mov
and
sbb
cmp
cmpsl
mov
outsb
mov
inc
mov
out
je
push
repz
pop
divl
imul
inc
imul
pop
dec
push
ss
cmp
inc
mov
rcll
sbb
mov
and
push
adc
jae
test
in
xchg
jmp
sbb
imul
pop
negl
xchg
jle
loopne
inc
lcall
out
mov
out
test
push
fimull
mov
leave
add
clc
scas
pop
pop
das
loopne
mull
stos
sbb
testl
jp
test
insb
out
push
call
mov
outsb
sub
idivl
dec
fwait
push
mov
sub
or
loopne
outsl
adc
lea
idivl
popa
and
xchg
fldl
cld
dec
loope
repnz
lahf
imul
out
dec
and
sbb
divl
mov
xor
push
movsb
imul
stc
push
jge
mov
pop
pop
pop
adc
mov
dec
cld
call
jne
inc
sahf
inc
addr16
lahf
adc
pop
push
scas
jp
mov
jno
int
add
mov
lret
add
sub
xchg
jge
inc
jns
test
pushl
sbb
jbe
aaa
aas
pop
fisttpll
loopne
imul
inc
cmpsl
inc
stc
sub
imull
jmp
pusha
xchg
negl
hlt
add
cs
movb
pushf
notl
je
or
lret
ret
testl
mov
cmpsb
mov
cmc
dec
hlt
or
pop
adc
js
sub
pop
inc
lock
test
jb
lds
cwtl
push
mov
jbe
repnz
enter
xor
sbb
mov
daa
outsb
fwait
pushf
divl
push
sbb
pop
mov
pop
out
jno
or
test
fists
push
adc
adc
mov
sbb
pushf
adc
std
das
daa
aam
jmp
xor
push
inc
testb
mov
jnp
mov
imul
dec
mov
push
pop
subb
jnp
repnz
adc
adc
add
mov
inc
sbb
shl
pop
mov
adc
into
add
ljmp
movsl
cmp
addr16
out
push
jecxz
testl
lods
fdivs
xchg
out
scas
dec
mov
push
xor
lcall
in
ja
pop
js
add
imulb
lcall
or
stos
push
mov
fadd
aaa
negl
pop
fcomps
push
pusha
mov
nop
sub
test
push
fwait
roll
repz
es
movsl
negl
loop
std
xchg
push
push
and
mov
leave
or
neg
jmp
test
push
adc
data16
out
out
lock
mull
cmp
cmp
testl
adc
pop
xor
inc
imull
repnz
repz
mov
push
test
pop
dec
or
dec
and
pop
cs
lock
add
daa
jp
cmp
stc
aam
fwait
dec
sbb
negl
fnstcw
push
xor
std
jbe
lahf
jl
std
nop
add
sbbb
mov
sbb
xchg
push
fstpl
pop
mov
xlat
loopne
out
testb
filds
and
lahf
lock
jb
mov
xlat
xchg
mov
ss
and
pop
sbb
sub
icebp
ficomps
outsl
pop
mov
push
int
fsubs
pop
cli
lcall
imul
inc
cmp
dec
idivl
xor
das
repnz
sbb
testl
adc
fidivs
scas
int
xchg
pop
add
jns
loop
pop
and
stos
rclb
fsubl
pop
xchg
and
push
add
shl
push
test
imul
add
js
xor
mov
xchg
mov
in
repnz
out
sub
cld
jle
xor
push
mov
nop
ror
and
neg
mov
or
in
xlat
scas
out
stos
and
mov
fildl
and
add
clc
fadd
es
divl
mov
cmpsb
inc
popf
adc
out
and
lods
mov
pop
ret
ljmp
pusha
jo
mov
lret
testl
lods
push
mov
cmp
push
notl
and
jae
aad
push
jmp
pop
lods
add
xchg
xchg
adc
or
pop
fwait
aas
push
cmp
or
sbb
and
hlt
iret
inc
adc
out
push
clc
outsl
imul
push
nop
inc
popf
neg
imul
data16
pop
ret
call
lahf
xchg
out
in
sti
xlat
fwait
repnz
int3
mov
jmp
fistps
aad
xchg
push
out
adc
sub
in
dec
and
stos
xchg
decb
mull
sbbl
das
sahf
in
mull
lret
mov
testl
out
scas
push
std
mov
and
pop
insb
inc
ljmp
mov
leave
addr16
add
xchg
out
idivb
push
or
adc
outsl
mov
mov
or
xchg
sbb
inc
pusha
mov
mov
ja
test
dec
mov
pushf
inc
and
sbb
pop
xchg
lock
in
push
push
xchg
fcmove
iret
and
icebp
push
pop
mov
scas
lods
dec
fwait
cmp
test
pop
inc
imul
xchg
je
icebp
jl
mov
out
or
pop
daa
lahf
loopne
lods
dec
int
data16
inc
nop
pop
out
cmc
mov
cltd
cmp
lea
xchg
in
or
mov
ret
outsl
jbe
nop
dec
movsb
sub
into
je
or
out
dec
xchg
sub
push
jmp
inc
bound
mov
cltd
adc
sti
mov
ljmp
std
or
pop
xor
negl
xchg
insl
test
roll
jmp
xchg
xchg
lock
add
pop
subps
or
mov
frstor
jnp
xor
and
clc
imul
sub
in
xchg
mov
fists
jge
mov
inc
js
movb
push
mov
and
outsb
cmp
xchg
mov
orb
pop
cmp
pop
dec
pop
sbb
sbb
shlb
lcall
scas
jmp
test
sbb
sbb
imul
fisubl
mov
gs
loopne
jg
mov
xchg
sub
push
fcmove
inc
mov
imul
fimull
push
mov
cld
popf
dec
fsubr
xlat
adc
std
or
and
push
mov
jp
fidivrl
fnsave
pusha
dec
imul
idiv
adc
fs
or
sbb
jmp
add
cmpsb
into
mov
int
mov
jp
js
stos
in
fmul
pop
dec
xchg
cmp
adc
pop
mov
stos
movl
lock
and
xchg
xor
clc
popf
dec
pop
pop
lea
and
xchg
xchg
cmp
in
push
je
mov
hlt
mov
fnstenv
ret
lcall
mov
out
lret
loope
arpl
xor
cmp
sub
lock
sti
test
or
sub
pop
jno
xchg
test
or
dec
ss
test
or
xchg
inc
sub
in
jne
jmp
pop
in
jo
loop
cmp
fldl
aad
lea
ss
or
in
mov
mov
iret
adc
data16
negl
push
mov
imul
mov
pop
insl
mov
iret
cmpsl
mov
inc
cltd
pop
iret
jmp
and
sub
sahf
divl
push
or
xlat
out
divl
pushf
movsl
cli
testl
divl
mov
mov
insl
pop
stc
repz
insb
sub
negl
dec
scas
mov
pop
notl
call
inc
dec
push
xchg
std
neg
movups
repz
insl
cmp
cmc
cmp
pop
xor
adc
test
xchg
mov
dec
idiv
cltd
pop
mov
pop
testl
jmp
dec
notl
lods
lcall
sbb
fsubs
pop
mov
inc
inc
cmp
adc
mov
lea
push
jae
mov
pop
data16
lods
test
push
dec
pop
pop
negl
mov
push
fcomip
mov
fildll
js
pop
stos
jp
inc
lods
nop
mov
add
xchg
dec
in
mull
xchg
sub
sub
pop
aad
test
pop
xchg
push
inc
fists
cli
pop
out
or
idiv
cmc
mov
imul
sbb
cli
fadds
outsb
or
xlat
fdiv
and
and
pop
fcmovnu
pcmpeqd
adc
mov
daa
jecxz
pop
lea
loope
cmp
sbb
aad
scas
test
mov
pop
in
fiaddl
das
lcall
pop
aam
div
push
xchg
and
inc
ljmp
arpl
or
cwtl
cmp
pavgw
inc
ljmp
vpaddq
cmc
testl
cmpb
mov
mov
idivl
cltd
or
adc
and
mov
data16
adc
mov
inc
jo
neg
jge
push
mov
pop
fwait
lret
idivl
inc
data16
add
mov
mov
scas
pop
in
jecxz
mov
pop
mov
adc
ss
adc
inc
sbb
cmc
int3
divl
push
mov
bound
outsl
mov
pusha
mov
testl
pop
dec
xlat
lcall
icebp
dec
repnz
add
adc
xlat
pop
mov
sbbb
mov
mov
lods
cmp
sbb
mov
je
mov
popf
testl
adc
push
movq
and
mov
je
add
adc
mov
out
xchg
jns
in
mov
aad
fidivs
adc
pop
sbb
test
mov
cmpsb
sub
xchg
jnp
adc
out
sbb
es
mov
cmp
xor
negl
cmp
cmp
aaa
idivl
sahf
dec
in
sbb
sub
sub
cs
mov
movsb
out
jp
test
xor
pop
or
fsubs
or
sbb
push
pop
mov
testl
lods
jge
and
std
bound
mov
cmp
add
xchg
jg
fsubrl
loop
pushf
repz
lret
roll
add
div
test
pop
xor
repz
sub
divl
adc
insb
add
nop
aas
fimull
arpl
push
jnp
pop
jmp
dec
ficomps
pop
push
pop
xchg
and
repnz
push
mov
test
in
divl
call
not
aas
push
xor
in
cmp
sbb
scas
call
mov
and
fprem1
jle
xlat
cld
imul
inc
test
add
xchg
std
testl
in
add
test
stos
pop
inc
pop
inc
shlb
adc
xchg
iret
sbb
scas
ret
push
testl
pop
out
add
pop
xchg
jecxz
cli
and
sub
out
insb
mov
out
jno
xor
xchg
or
negl
dec
xor
popa
and
xchg
xor
out
push
sbb
imul
subl
jae
mov
push
cmp
insb
ljmp
xor
sbbl
ss
mov
or
ret
fnstcw
in
out
mull
les
push
and
nop
js
idivl
xor
mov
push
je
push
testl
xchg
pop
xchg
popa
jge
sbb
adc
int3
arpl
push
mov
imul
pop
into
cwtl
cs
lods
xchg
popl
jno
fcmovne
adc
outsl
mov
mov
pop
ret
imull
jno
xchg
int3
mov
jo
adc
push
negl
int
jmp
stc
bound
mov
jbe
add
lods
fwait
idivl
xchg
movsb
mov
loope,pt
jns
loopne
pop
mov
xlat
jmp
push
push
push
or
xor
jne
testl
imull
pop
push
cmp
loope
mov
pop
cmp
std
sbb
fucom
push
ret
in
push
in
faddp
cltd
mull
divb
idiv
nop
test
mov
outsb
sub
loopne
push
roll
mov
test
jbe
mul
adcb
sbb
adc
test
hlt
cmp
in
push
inc
dec
push
push
mov
ds
out
gs
idivl
jo
movsb
fsubp
scas
sbb
test
pop
xor
inc
push
lret
jbe
push
xor
loope
fincstp
xchg
add
sahf
mov
stos
in
icebp
xchg
negl
out
xor
add
and
neg
push
cmp
je
jmp
divl
mov
div
xchg
test
popa
in
rclb
lret
mov
push
xchg
iret
in
and
daa
test
fstps
and
ss
enter
push
pop
loope
imul
leave
sbb
dec
fiaddl
mull
sbbb
pop
pop
fbstp
sub
jae
addl
and
adc
dec
orb
movhps
jns
sbb
fcos
jmp
push
fistl
and
fsubl
sub
push
mov
push
divl
push
xor
testl
push
adc
xor
notl
mov
ret
sub
idivl
add
out
and
mov
ja
not
cmp
aaa
lahf
xchg
neg
in
mov
dec
lods
mov
pusha
je
jmp
push
pop
adc
sti
imull
inc
dec
lret
mov
sbb
jmp
pusha
pop
pop
ret
idivl
jge
gs
fldpi
rcl
pop
add
imul
stc
pop
xchg
fdivr
out
push
lret
mov
push
jp
fcmovbe
mov
pop
xchg
fisttps
push
sbb
fsubs
cmpsb
jno
mov
and
lds
ja
or
rcrb
repz
sub
adcl
stos
xchg
ss
addr16
in
aam
pop
sub
fidivl
mov
mov
and
mov
fnsave
cwtl
in
movsl
lcall
sub
add
adc
leave
sub
inc
sbb
cmp
cld
sub
stos
loope
negl
inc
fsts
test
push
rcrl
in
jecxz
cmpsl
pop
or
cs
cwtl
sbb
xor
adc
xor
sti
pusha
adc
xor
lock
fists
fnsave
idivl
rcll
xchg
stos
or
mov
lret
push
or
in
leave
in
lret
xchg
testl
aaa
in
out
pop
xlat
push
cmc
ds
pop
push
pop
jge
negl
mov
cmp
hlt
mov
dec
subps
jo
scas
push
jo
cmp
sbb
mull
cmp
cmp
fildll
jo
fidivrs
mov
inc
mov
shrl
adc
divl
xor
imull
into
mov
xchg
mov
testl
push
test
mov
jp
data16
add
test
loopne
test
nop
gs
cld
fsubrl
fs
imul
jmp
sub
ja
negl
xchg
or
pop
ss
mov
xlat
mov
adc
dec
vmovntps
xor
neg
nop
shrl
xchg
lret
mov
and
fucom
mov
lret
out
add
and
mov
adc
sub
ss
data16
mov
or
and
adc
add
es
dec
sbb
and
divl
test
and
in
dec
inc
inc
stos
dec
mov
mov
js
dec
jp
pushf
pop
lock
rcrl
push
mov
or
cld
dec
loope
mov
sbb
mov
mov
je
rol
cld
jb
imull
jns
mov
sub
bound
testl
push
ret
ja
stos
pop
adc
sub
imull
out
pop
add
les
jb
jle
subl
mov
inc
sbb
imul
jg
mov
pop
cmp
fnstcw
mov
scas
lret
out
and
xchg
adc
int
out
add
inc
test
hlt
push
daa
inc
dec
jge
sub
popf
jo
dec
xlat
stos
rclb
and
divl
test
xchg
arpl
divl
ljmp
mov
adc
jmp
pop
out
inc
and
mov
cmp
sbb
or
jbe
pop
hlt
testb
shrb
cmpsl
out
sub
jmp
fimull
cmp
mov
mov
mov
je
dec
icebp
pop
scas
xchg
jle
jecxz
jmp
or
or
mov
mov
mov
cmc
add
or
jp
iret
lea
aaa
adc
outsb
dec
imul
out
ljmp
aad
mov
jl
dec
jp
or
cwtl
or
or
lea
iret
repnz
cmp
fsubr
pop
in
inc
jg
fimull
nop
mov
xchg
push
pop
and
mov
dec
mov
ja
pop
add
adc
lcall
adc
sbb
scas
or
dec
and
xor
iret
or
shlb
lods
icebp
mov
xchg
sbb
ljmp
xlat
jne
insl
lods
scas
inc
je
xlat
ja
jmpw
shll
jg
dec
insl
test
repnz
mov
hlt
aaa
out
cmp
adc
mov
ljmp
add
cmp
dec
or
cli
popa
in
test
cld
mov
dec
mov
fcompl
jge
cli
mov
fidivrl
sbb
ret
lcall
stc
orl
jns
addb
imull
out
fisttpl
pop
push
fisubl
out
mov
sub
xor
jle
pop
fucomip
movsb
daa
mov
xor
pop
and
mov
mov
ja
inc
pop
roll
int3
pop
lahf
xor
xchg
mov
pop
xor
and
mov
in
push
pop
pop
mov
in
arpl
leave
push
dec
aaa
inc
testl
jno
cmpsl
leave
fidivrl
fwait
jmp
out
testl
mov
out
inc
mov
mull
add
mov
sub
add
idivb
xlat
mov
pushf
aam
jns
pop
into
mov
sub
or
dec
test
adc
and
adc
push
cmc
out
dec
in
ret
xchg
dec
xor
mov
cld
fwait
icebp
push
xorl
sbb
ret
sub
test
inc
inc
sbb
add
data16
fsts
dec
filds
fcomi
sbb
jg
jge
into
out
leave
cltd
addr16
testl
adc
dec
mov
imull
xor
mov
jp
dec
nop
ljmp
push
mov
imul
negl
test
pop
or
fimuls
call
lret
imul
test
jae
xlat
dec
insl
leave
je
mov
cmpsb
cmp
xchg
notl
xor
sbb
scas
aaa
ljmp
mov
cmp
sbb
mul
rcrb
inc
inc
out
fdivrs
arpl
outsb
xchg
cwtl
push
jo
mov
loopne
lcall
mov
inc
xor
fsubl
cmp
inc
shll
stos
cmp
adc
sbb
pop
lahf
xor
out
out
lcall
jl
fidivrl
ja
sub
dec
pop
cltd
jnp
inc
ficoml
fistpll
mov
lods
or
jae
stos
repnz
or
in
jno
out
push
mov
ret
pop
xchg
push
pop
das
adc
sti
adc
fisubrl
imul
adcl
mov
dec
daa
adc
cmpsl
test
frstor
ficoml
inc
ret
fbld
pop
push
loopne
pop
shr
jbe
sbb
sub
mov
test
add
inc
in
jno
or
mov
out
adc
mov
xchg
je
mov
fcoms
aaa
add
jb
in
lods
lods
inc
jb
jle
mov
mov
xchg
aas
mov
in
pop
bound
adc
cmp
rep
and
mov
std
sahf
adc
paddw
in
stc
cmp
ja
aad
mov
jno
pusha
rorl
push
and
lret
xchg
out
pop
dec
stos
mov
aaa
fwait
pop
std
dec
jbe
cli
fistl
inc
pop
push
add
pop
aad
stc
sbb
xchg
inc
es
mov
call
push
add
lock
push
mov
inc
mov
pop
cli
out
cmpsb
fucom
loopne
inc
mov
shr
or
pop
pop
jecxz
jbe
xchg
mov
xor
cmpsl
and
xchg
inc
fisubs
mov
jge
push
cmp
inc
pop
sub
in
xlat
jmp
fs
add
sub
dec
xchg
and
test
insl
out
mov
out
iret
fiaddl
int3
loop
adc
jl
mov
lcall
stos
ljmp
call
rorb
repnz
sbb
mov
pop
push
in
and
xlat
test
out
mov
ja
fldz
jo
mov
arpl
and
hlt
ficoml
lds
mov
movsl
adc
bound
dec
sub
aaa
cmp
mov
cmc
movsl
test
sbb
mov
or
ss
jg
add
enter
outsl
clc
xchg
ja
loope
inc
fdivrp
stc
out
pop
add
imul
mov
mov
aaa
outsb
mov
lods
inc
mov
stos
imul
stos
rolb
ljmpw
sub
lods
sti
sbb
in
sbb
cmp
sahf
lcall
repz
cmpsl
shrl
iret
mov
adc
sti
xchg
outsl
and
pop
out
sti
loop
lock
lcall
imul
fsubrl
sbb
rorl
daa
nop
test
xchg
inc
notl
int3
xchg
clc
sbb
jno
testl
pop
xchg
cwtl
or
lods
or
ds
pop
jno
fstpl
mov
repnz
iret
test
outsl
fcmovnu
adc
xor
loope
dec
pop
jns
lret
inc
cmp
in
push
enter
gs
mov
rorl
cli
pop
mov
dec
sbb
lret
cmp
lods
rolb
pop
scas
cmp
cmp
out
cmp
and
mov
test
cmpsl
inc
adc
dec
arpl
dec
aam
iret
fwait
push
notl
jp
daa
cmpb
cltd
cmpsl
es
out
jo
and
testl
dec
outsl
mov
mov
mull
mov
es
arpl
fistl
movsl
lcall
mov
outsl
stc
bound
ljmp
adcb
sete
popf
outsb
add
jns
out
push
mov
or
jno
xlat
iret
cmp
sub
push
xchg
sbb
lock
out
sub
push
mov
mov
cmpsb
sahf
notl
push
out
negl
push
fisubl
cmpsb
pushf
xor
mov
scas
and
dec
cmc
sbb
loopne
adc
outsl
fdivp
sub
pop
cmpsb
imull
pop
sub
test
jo
fincstp
and
mov
and
cs
jb
xchg
in
in
outsb
xchg
xor
ds
and
fcoml
inc
std
test
push
adc
push
mov
leave
imul
and
ret
dec
imul
push
add
inc
rolb
push
adc
aam
loop
out
sub
cmc
jmp
mov
pop
js
mov
jne
xchg
or
jmp
push
in
daa
push
mov
jge
fstl
pushf
ficoml
pop
mov
dec
jecxz
scas
sbbl
dec
jl
orb
std
loop
div
mov
jnp
push
les
pop
aad
inc
dec
inc
shlb
test
scas
aaa
negl
in
movq
cli
divl
pop
and
dec
loop
test
and
fdivp
cmc
cmp
dec
xlat
adc
ret
out
jb
pop
icebp
mov
notl
xchg
sbb
add
sbb
dec
pusha
cs
sub
mov
and
movsb
push
imull
cmp
mov
mov
cmp
mov
xlat
and
mov
sti
into
popa
fldenv
notl
adc
dec
jb
xor
xor
adc
sbb
cmc
fmulp
add
cwtl
daa
lcall
call
jl
pop
movsb
inc
pushf
fnstsw
not
lret
xchg
icebp
stc
test
jmp
mov
pop
sub
scas
adc
mov
scas
mov
es
scas
arpl
aad
loop
inc
sub
pop
icebp
fisttps
cmp
xor
shl
out
push
jmp
dec
test
and
jb
adc
jns
lods
xchg
adc
mov
into
adc
out
sbb
and
js
fwait
adc
fiadds
and
adc
pop
jno
imull
mov
aam
ss
arpl
decl
mov
push
inc
push
mul
push
push
arpl
into
pop
jae
xchg
and
loope
idivl
inc
adc
ss
xchg
outsl
adc
dec
xchg
push
gs
push
xchg
cmp
mov
cmp
aas
sbb
jae
ss
sub
push
repz
out
ficoms
cmp
rorl
add
pusha
imul
adc
add
sub
cmpsb
mov
pop
out
icebp
inc
pop
enter
xchg
imul
mov
and
std
dec
adcl
inc
ds
out
das
pushf
xchg
into
mov
adc
add
out
add
mull
xlat
xor
subl
test
aas
jne
loop
and
aam
iret
xchg
out
sbb
mul
sti
out
popf
add
bound
and
cs
fidivrl
mov
jmp
mov
jge
sub
pop
sbb
jne
xlat
data16
aas
loop
popa
lods
jnp
mov
fdivs
idivl
push
insb
ret
mov
in
mov
inc
inc
add
jmp
in
out
mov
xchg
mov
cmp
pop
xchg
sbb
stos
cmp
cmp
jecxz
mov
nop
fdivs
dec
push
push
cmp
and
std
notl
flds
add
cmpsb
test
push
pop
insb
mov
pop
push
pop
and
pop
sbb
fnstsw
xchg
std
pop
jecxz
loope
inc
push
mull
push
dec
sbb
pop
es
bnd
xchg
push
les
pop
mov
notl
add
dec
and
fwait
ret
int3
repz
idiv
jl
test
sbb
out
adc
mov
out
xlat
jne
xchg
notl
test
add
sub
js
and
repnz
bound
nop
push
jbe
inc
mov
iret
push
add
xchg
push
mov
jecxz
dec
insb
jmp
mov
shlb
insl
lret
das
jnp
ret
dec
sbb
jno
mov
mov
ret
fmuls
cld
in
cltd
out
sub
aas
jmp
lods
push
dec
mov
dec
lret
je
push
pop
fbld
mov
sbb
and
es
cmp
mov
push
adc
or
cmp
int
push
mov
in
xchg
cwtl
xchg
idivl
inc
xor
jns
test
aad
add
std
and
icebp
int
xor
jb
inc
lods
jle
pop
mov
xlat
and
cli
adc
sti
xchg
pop
out
aaa
dec
cld
lock
mov
sbb
push
jb
mov
inc
insl
push
add
test
dec
xchg
cld
test
lahf
xchg
cmc
divl
add
loope
jle
arpl
jnp
das
testl
in
xchg
divl
loope
imul
out
aad
je
testl
pop
dec
divl
enter
jbe
outsb
subl
cld
or
testl
jb
mov
ds
dec
pushf
mov
sbb
loope
outsb
push
fsubrs
fidivl
sbb
xchg
loope
idiv
lret
add
div
pop
jae
cmp
mull
test
lods
addb
je
push
repnz
sub
xor
notl
or
movsb
xlat
in
cmc
sbb
add
divl
fiaddl
lock
not
std
mov
jmp
orb
sub
das
dec
orl
adc
mov
pop
das
push
sbb
jb
in
inc
jmp
fnstsw
scas
pop
fstpl
inc
inc
add
shlb
fidivrs
push
loope
rcll
cs
adc
adcb
pop
pop
cmc
ss
push
stos
repz
add
cltd
fsubs
sub
loope
adc
inc
mull
sub
pop
test
out
sbbb
test
or
scas
cltd
inc
xchg
icebp
mov
mov
inc
and
jmp
arpl
popf
imull
add
sbb
and
ret
fistpl
je
jg
sub
mov
stos
movsl
sbb
pop
aas
jmp
pop
xor
jo
out
out
std
sub
idiv
repz
insl
je
out
xchg
mul
lods
mov
and
pop
dec
enter
idiv
add
out
lea
or
idivl
loop
test
mov
data16
fisubrl
mov
fistps
xchg
or
dec
cmpsl
notl
test
testl
inc
sbb
cmp
xor
in
cli
bound
mov
pusha
lds
xlat
pop
hlt
ret
cld
imul
xor
xlat
into
lahf
adcb
out
ret
sbb
mull
xchg
dec
mull
jns
clc
int
cwtl
testl
lods
xchg
lcall
add
cmp
je
loope
fistpl
xchg
fwait
mov
inc
mov
lods
jle
xlat
fcmovbe
nop
insb
jl
jno
cwtl
divl
lahf
push
add
out
sbb
int3
mov
loope
ret
or
add
mov
pop
div
jle
div
inc
nop
mull
cltd
dec
sub
push
xor
mov
xchg
fcoml
push
sub
xchg
fbstp
fwait
push
testl
push
mov
add
push
in
fists
shlb
scas
testl
fwait
adc
cli
lods
stos
pop
or
loop
or
in
mov
add
test
out
lahf
mov
xor
movzwl
jge
sbb
inc
pop
mov
das
testl
rcr
mul
jb
vpandn
jmp
push
dec
fldcw
outsl
sbb
inc
jae
icebp
xchg
or
add
daa
test
cwtl
pop
div
in
sub
ss
fwait
in
idivl
or
inc
add
rcrl
mov
mov
testl
stos
sbbb
sub
mov
dec
movsb
pop
idivl
mov
pop
push
dec
popf
xchg
pop
testl
xlat
fs
adc
fadd
out
iret
mov
repnz
lods
fcomp
or
pop
dec
mov
in
in
pop
nop
rolb
fstl
pop
popf
and
imul
nop
mov
js
cmp
ds
divl
add
mov
shlb
dec
out
mov
jmp
cmpsb
fbld
xchg
sbb
xchg
push
mov
scas
adc
test
and
test
sbb
jmp
sbbb
and
xlat
mov
dec
std
imul
jge
nop
insl
xor
movsb
fists
call
clc
inc
fidivs
jmp
testl
sbb
divl
push
push
jl
orb
shll
and
jno
xchg
outsl
jae
jmp
jns
cs
lret
mov
inc
out
mov
imull
jge
icebp
adc
jecxz
out
lock
andb
push
out
and
fnstsw
sub
cltd
mov
cmp
fcmove
pop
clc
pop
jns
test
ss
lds
not
movsb
jp
push
cli
out
xor
or
adc
testb
out
mov
fstpt
testl
push
lret
pushf
adc
repz
cwtl
sub
lods
enter
divl
scas
fs
daa
mov
pop
sbb
mov
test
mov
cmp
and
loope
or
xchg
fcomps
xlat
or
jbe
scas
jmp
add
leavew
xchg
mov
mov
push
testl
repz
lea
mov
push
divl
lods
test
jns
or
fnstcw
sbb
call
pop
decl
imul
notl
xor
mov
and
pop
push
inc
jp
dec
negl
mov
mov
jl
fadds
fwait
icebp
in
idivl
sahf
push
addb
je
add
cmp
test
cmp
cmpsl
adc
sbb
cld
mov
mov
jbe
or
int
xor
test
mov
xchg
ja
fadd
mov
andb
aaa
mov
mov
dec
daa
out
fdivl
cmp
lahf
mov
das
or
dec
rclb
jle
in
pop
fsubl
repnz
fildll
cmp
pop
jno
push
sub
and
mov
imul
adc
ja
sbb
ret
pop
iret
xor
and
cmpsl
or
push
mov
fcmovne
aad
testl
or
stc
dec
and
cmp
jmp
xor
loope
call
es
cmp
or
xor
mov
xchg
out
pop
sub
js
fadd
dec
mov
mov
xchg
fbld
not
in
inc
jb
test
idiv
mov
add
into
lret
jl
dec
mov
add
jecxz
sub
ljmp
mov
divl
mov
fstps
icebp
sub
int3
add
imull
mov
push
lahf
test
out
sbb
testl
jnp
adc
iret
sub
add
pop
sbb
jmp
mov
cmp
mov
pop
pop
sahf
addr16
push
dec
js
push
mov
fists
cmpsb
out
adc
insl
mov
mov
xor
divb
xchg
popa
lcall
fidivrl
inc
jl
andl
imul
mov
popf
push
sahf
mov
add
mov
loop,pt
jg
sub
repnz
mov
arpl
jmp
popa
loopne
push
add
push
sahf
in
orl
inc
lahf
sub
into
mov
repnz
faddl
call
imul
jne
test
pusha
jl
xor
test
test
add
jmp
adc
fldt
push
mov
jecxz
and
add
dec
pop
ds
xchg
pushf
js
fcoms
dec
mov
mov
mov
push
in
fwait
fwait
ljmp
in
and
scas
inc
je
cmc
sub
xchg
or
imul
loop
orl
movsl
in
mov
mov
mov
push
cmc
jmp
dec
mov
imul
fdivrs
push
jo
mov
jl
adc
ja
jle
xlat
loope
mov
adc
out
xor
mov
lods
insb
mov
mov
add
test
arpl
mov
imull
sub
pop
sub
mov
mul
shlb
or
cmpsl
pop
jge
and
mov
jo
clc
pop
pop
mov
push
test
push
mov
loop
mov
testl
cmpsl
jo
push
pop
mov
sbb
dec
jb
xchg
xor
notl
mov
jnp
push
fstpt
or
into
lea
imul
popf
popa
or
xchg
addr16
xchg
cltd
xacquire
idivl
sbb
insb
arpl
cwtl
jl
add
js
ret
pop
fcoml
popf
xlat
daa
lcall
push
cmpsl
idiv
xchg
xchg
adc
pop
fstl
les
adc
xor
sbbl
es
xlat
shll
dec
je
ss
adc
xchg
sarb
pop
popf
cltd
fidivrs
cmp
xlat
xchg
je
pop
sbb
subl
es
test
idivl
stc
adc
mov
mov
jns
loopne
mov
jno
movsb
lcall
mov
sub
push
xor
pusha
neg
fimull
and
rclb
pushf
push
lahf
dec
xlat
and
jecxz
pop
jg
je
mov
dec
inc
sbb
lock
leave
mov
imull
cmp
jle
fcoml
xor
divl
jl
mov
ror
addb
lcall
out
push
mov
pushf
sbb
pop
pop
sub
notl
add
xchg
pop
aad
testl
fwait
stos
imull
mov
pushf
daa
and
push
rcrl
or
std
in
rcr
push
jle
mov
push
loope
mov
out
push
fnsave
mov
xchg
notl
mov
fisttps
shll
sub
jmp
pop
in
jmp
movsl
movsb
jbe
ret
jecxz
arpl
cmp
insl
xor
push
mov
test
jl
out
mov
or
dec
icebp
fisubrl
lock
stc
fdiv
sub
testl
cmp
jb
cmpsb
mov
add
in
mov
add
dec
mov
testl
push
adc
push
ficompl
aas
pop
cs
cmp
outsl
into
es
sbb
sub
pop
xchg
fnsave
pop
or
filds
jg
enter
out
std
pop
jae
adcb
xchg
jecxz
xor
out
sub
divl
in
loope
jae
addl
stos
add
lea
movsbl
push
loope
mov
aas
add
push
imul
in
negl
test
dec
testl
seto
or
mov
sub
sbb
sti
mov
movq
fstp
out
push
testl
xor
mov
add
aad
loope
out
shl
push
test
or
gs
sub
jg
cmpsl
mull
sub
add
mov
dec
or
idivl
xlat
pop
sub
aad
dec
mov
xchg
mov
ficompl
push
mov
push
notl
push
mov
idivl
dec
cmp
movsb
inc
not
mov
adc
sub
push
insb
dec
and
ficoms
sbb
mov
adc
xchg
lcall
xor
enter
sub
push
inc
cmpsl
mull
inc
movsl
mov
and
fstpl
xchg
popf
push
cmpb
divl
lods
movsl
cmp
lret
mul
sbb
sbb
sbb
negl
or
negl
es
ljmp
out
mov
inc
je
or
pusha
xlat
inc
in
pop
adc
test
ficoml
out
shl
adc
xor
mov
mov
or
dec
loop
ret
mov
mov
adc
ja
stos
int
insl
pop
sbb
int3
xchg
xchg
xor
out
fildl
divl
inc
sbb
ljmp
xchg
lea
jecxz
mov
jl
mov
mull
out
je
imul
gs
xlat
notb
add
adc
pop
xchg
pop
loopne
in
xor
in
call
push
daa
into
icebp
adc
cmpl
fisubl
lret
das
subb
pop
in
fs
int3
cld
jnp
sbb
pop
loope
pop
or
test
divl
jbe
xor
sbb
push
or
loope
xor
or
movsl
sbb
mov
cmpsb
lret
cwtl
mov
push
dec
xlat
add
filds
cmp
loopne
mov
iret
mov
jne
sbb
repz
dec
inc
push
pop
push
not
mov
inc
pop
shll
fwait
xor
mov
and
xor
pop
inc
cltd
dec
lcall
fwait
add
clc
neg
inc
xor
mov
sbb
in
daa
and
lods
scas
inc
mov
idivl
fnsave
mov
test
pop
stc
notl
cwtl
mov
dec
mov
xchg
out
not
stos
push
push
fnstcw
adc
test
notl
inc
cmp
cs
pop
xchg
rcrb
sub
je
outsb
aam
negl
xchg
inc
ljmp
sbb
cld
pop
incl
pop
adc
jle
mov
in
out
cmpb
mov
xchg
call
dec
pop
test
mov
push
ret
divl
mov
jo
sbb
jb
sbb
bt
test
clc
xchg
cmp
shrl
int
scas
xchg
xor
stos
jge
loopne
jp
mull
test
push
ljmp
dec
mov
cmpsb
std
shr
jecxz
cmp
cmp
in
inc
out
push
sbb
sbb
movsl
jbe
leave
mov
jne
mov
xchg
sub
push
and
cmp
jae
xor
xor
jg
mov
and
divl
jne
or
xor
pop
testl
pop
push
xchg
mov
cmp
cmp
mov
inc
out
ss
pushf
ja
push
js
out
jne
in
mov
in
adc
xchg
or
shrb
jg
mull
add
pop
stos
out
imul
int
arpl
mov
mov
sbb
adc
sub
divl
test
loop
pusha
imul
mov
out
pop
mov
sahf
sub
je
bsf
rolb
inc
and
popa
xor
cmc
jg
xchg
fcmovu
out
mull
sets
dec
rorb
xor
jmp
nop
mov
out
aaa
or
push
pop
idivl
aam
xor
nop
add
mov
negl
into
iret
ja
fucomp
push
test
shl
arpl
cwtl
xor
out
xchg
negl
mov
test
shrb
mov
pushf
jbe
iret
jne
sub
decb
adc
jle
xor
adc
mov
xchg
mov
sub
sbb
mov
ficoms
dec
movsl
mull
jl
ret
mov
pop
xor
fildl
mov
inc
test
repnz
imul
mov
notl
cld
add
dec
addr16
jge
cmp
push
lret
mov
sbb
mov
push
es
lock
fisttpl
xchg
cmp
test
adc
push
mov
inc
ficomps
inc
pusha
dec
mov
sub
jge
sbb
or
stc
mov
fildl
mov
and
testl
movsb
dec
push
and
stos
nop
into
pop
notl
adc
pop
mov
movl
jns
inc
dec
sete
adc
clc
add
mov
fcmovbe
xlat
daa
push
lret
dec
inc
jmp
pop
out
dec
pop
sbb
dec
lock
jno
or
fidivrl
in
sbb
scas
xchg
ficoml
xor
xchg
cmc
arpl
lock
fbstp
inc
and
jnp
lods
push
addr16
jmp
stos
pop
jne
ficoml
jmp
adc
stc
fdivs
out
push
bound
adc
cld
xchg
aaa
out
addb
dec
mov
jbe
or
dec
dec
xchg
sbb
mov
pushf
bound
xchg
mov
in
cmp
mov
lret
inc
or
nop
push
aad
sar
mov
push
imul
fdivl
in
int
mov
orl
insl
jmp
push
mov
fdiv
mov
push
loopne
in
scas
xor
rcr
xor
mov
rclb
jl
cmp
inc
or
lcall
ret
push
push
lahf
mov
pop
out
fs
arpl
and
mov
fiaddl
das
mov
jne
lods
sbb
arpl
xor
cmpsl
cld
xor
out
sub
icebp
jne
aaa
scas
out
xchg
mov
ret
lahf
in
or
dec
sub
mov
dec
js
fdivrs
pop
ja
jne
add
and
and
mov
xor
add
movsl
mov
int
mov
cld
ljmp
add
int
jno
sbb
xor
popf
nop
xchg
jp
cmp
mov
lods
js
adc
sbb
cmp
mov
inc
loope
fisubl
scas
jmp
or
push
pop
loopne
sbb
sahf
arpl
mov
add
mov
cmp
pop
in
cltd
cmp
pcmpgtb
jb
push
ljmp
mov
test
ljmp
notl
in
fistps
push
movsb
in
mov
sbb
insl
or
clc
inc
adc
jb
mov
xlat
in
ljmp
cmpl
jne
insl
fidivl
cmp
lcall
mov
xchg
loopne
pushf
pop
xchg
fidivrl
mov
fcompl
mov
stc
adc
addr16
xchg
xchg
gs
test
adc
xchg
mov
jno
fnstenv
and
lret
jmp
ret
stos
mov
stc
inc
mov
xor
ss
xchg
fadds
xor
pop
scas
cmpsl
mov
pusha
inc
out
js
mov
aaa
mov
or
pusha
jae
in
insb
inc
in
outsl
push
cmp
paddd
xchg
leave
imull
and
inc
aam
jp
loopne
in
filds
ds
cmpsb
gs
out
add
arpl
mov
add
xabort
ret
mov
stos
scas
sti
xor
mov
jecxz
stos
stos
mov
push
dec
xchg
mov
mov
pop
negl
pusha
fisubl
pop
fnsave
pop
rcl
cli
loope
cmc
xchg
dec
cltd
loopne
dec
fidivl
cmp
sub
mov
insl
push
xchg
je
jmp
fildl
sbb
jg
int
cmp
jno
and
jb
imul
mov
cmpsl
stos
mov
test
sbb
xchg
xchg
push
data16
push
or
in
aad
fadd
sub
hlt
cltd
lret
scas
bound
pushf
fimull
out
cmp
sub
mov
scas
add
scas
cmc
push
push
jecxz
add
mulb
cli
mul
inc
sub
lods
ret
lcall
vmread
or
sarl
xchg
jge
pop
xchg
xor
add
into
sbb
not
clc
ds
test
cmpsb
or
iret
xor
sbb
mov
icebp
call
movsb
ds
cs
sti
add
jnp
mov
sub
fistl
arpl
mov
add
mov
push
pop
lods
out
add
out
daa
jno
push
jae
fidivs
mov
sahf
insb
sub
push
mov
call
or
dec
in
add
sbb
outsl
aam
inc
movsb
mov
jl
inc
adc
filds
jp
cmp
in
les
divl
mov
xchg
xchg
adcl
adc
lock
ret
dec
fwait
mull
mov
mov
lahf
int3
sti
and
divl
xchg
in
bswap
and
loopne
stos
xchg
pop
cmp
imull
cld
cs
adc
insb
dec
filds
inc
xor
mov
dec
jno
sbb
mov
int
fldl2e
je
in
or
xchg
lcall
and
stc
xor
div
jecxz
stos
test
mov
stos
xlat
call
aam
adcl
shl
lret
into
adc
not
xchg
sub
loope
or
xor
push
jbe
or
cmp
idivl
pop
xchg
mov
mov
mov
push
testl
loopne
imull
sub
mov
mov
stos
stc
pusha
rcll
testl
lret
jecxz
xlat
arpl
adc
lock
notl
enter
jl,pn
lcall
dec
pop
fisubs
xchg
test
push
jns
vminps
xor
aaa
inc
clc
jno
mov
nop
shl
mov
pop
adcl
mov
fs
idiv
jg
fcmovnbe
sub
sub
movsl
mov
aam
ret
jle
fistps
notl
lcall
adc
and
dec
pop
cmp
mov
and
popf
or
nop
sbbl
or
icebp
lock
bound
push
pop
inc
lcall
cwtl
cmp
repz
mov
icebp
test
cmpsb
cmc
outsb
pop
and
in
mov
or
loopne
xchg
ficoml
or
fstps
cmp
jge
negl
pop
and
sbb
inc
pop
insl
xlat
in
clc
pop
sarl
or
mull
and
dec
mov
jle
fsubrl
or
div
fsts
fs
in
cwtl
pop
xchg
jbe
cld
jb
fsubrs
ret
test
or
push
dec
insb
jge
xchg
or
fcoms
inc
movsl
scas
dec
sub
idivl
enter
testl
xchg
gs
dec
pop
push
js
add
mov
std
sysret
lods
push
cmp
out
mov
add
xor
mov
je
test
pop
mov
divl
push
jge
popf
nop
cwtl
xor
xchg
push
dec
mov
push
xor
aaa
stc
testl
sub
mov
xor
xchg
pop
cmp
in
idivl
xchg
sbb
xor
xchg
xor
out
stc
push
xlat
and
test
out
fstps
xor
jbe
jb
ss
or
and
js
out
out
sub
inc
divl
lods
mov
rol
divl
jg
pop
pop
jns
idiv
push
out
mov
push
adc
enter
pop
fldenv
push
jns
fidivrl
jo
pop
xor
mov
repz
idivl
add
std
xchg
xor
ret
mov
fnstsw
xor
insl
inc
imull
in
lock
daa
ret
cmpsb
xchg
mov
xor
into
das
data16
jae
sbb
je
inc
adcl
sbb
xor
jecxz
and
mov
pop
in
jae
sbb
xlat
mov
pop
lret
mov
sbb
stc
subl
lea
ss
xchg
test
push
clc
jp
xor
mov
stc
popa
mov
std
mov
mov
inc
add
notl
test
ja
jns
dec
sub
cmp
fstpt
out
pop
xchg
sbb
icebp
aad
negl
xchg
not
dec
add
mov
hlt
enter
in
xchg
adc
test
push
xchg
jg
inc
push
scas
jnp
in
icebp
mulw
lahf
sbb
sub
je
cs
aaa
jno
add
test
sub
aam
pop
inc
je
loope
mov
dec
xchg
or
in
dec
ss
adc
fnclex
mul
mov
sbb
and
lret
std
test
inc
cmp
xlat
pop
cmpb
push
dec
imull
pop
test
lods
xor
divl
adc
pop
push
not
mov
data16
cmp
inc
idivl
mov
adc
push
cmp
repnz
loope
testl
rorb
push
negl
mov
mull
rcrl
push
xchg
cmp
popa
push
repz
sub
out
pushf
rolb
adc
xchg
mov
push
jecxz
dec
mov
hlt
add
inc
xchg
push
cmpsb
pop
aad
out
mov
fld
and
lods
loop
negl
movsb
ljmp
mov
shlb
inc
idivl
push
dec
cltd
pop
addl
dec
fs
js
shl
xchg
gs
jle
rcrl
test
rclb
testl
orl
sbb
lcall
pop
ret
or
xor
repnz
and
cmp
out
pop
jo
xchg
mov
push
imul
add
sti
call
cmpsl
out
out
mov
insl
test
data16
jns
sub
lods
push
lcall
push
dec
es
in
in
int
sub
das
lret
outsl
sbb
pop
test
pop
xor
stc
and
out
and
lcall
fisubl
rcrl
push
in
add
fsts
ffreep
jae
loopne
jne
es
filds
imull
cmpsb
and
xor
in
adc
out
pop
xchg
repz
xchg
lret
outsb
mull
and
sub
pop
sbb
xchg
stc
xchg
adc
lahf
lahf
inc
fwait
dec
jmp
jecxz
negl
mov
mov
jg
in
cmpsl
notl
lods
movsb
or
mov
cmp
fistpll
xchg
cwtl
push
clc
sub
pop
inc
dec
sub
or
xor
sbb
mov
int3
mov
pop
push
into
jecxz
or
enter
ficoml
or
fsub
push
mov
adcl
imull
sahf
aas
sub
fists
jmp
adcl
imull
repnz
xlat
icebp
adc
fists
inc
and
imul
out
ret
rcrl
mov
pop
push
pop
inc
or
sub
mov
push
sahf
mov
dec
dec
roll
cmpsb
or
dec
mov
add
add
in
mov
cmp
testl
push
lcall
xchg
mov
xchg
jp
adc
mov
mov
out
push
fstps
testl
test
sbb
jmp
pop
add
iret
testl
test
pop
aam
pop
lock
sbb
in
push
fdivl
inc
fisttps
xlat
jbe
dec
push
xor
pop
add
fistl
adc
icebp
dec
mov
pop
xchg
int3
mull
into
test
ds
loopne
divl
rorl
testl
ds
pop
in
mov
je
xlat
js
add
xchg
cwtl
dec
divl
stc
or
movsl
ljmp
scas
mov
lahf
pop
xchg
xor
imul
cmpsb
imull
and
xor
lea
xlat
pop
fildl
mov
push
xor
cmpsb
fwait
scas
sub
notl
lret
popa
les
push
xlat
gs
inc
pop
jb
pop
dec
adc
cltd
jl
mov
push
cwtl
repnz
out
arpl
jb
xor
pop
mov
and
dec
jl
imul
pop
fwait
push
scas
cmp
popa
cmpb
pop
xchg
xchg
cmp
jno
idivl
xlat
mov
lock
movsb
fldcw
aaa
into
inc
gs
jno
shl
in
adc
jne
push
lret
ds
sahf
add
mov
shlb
cmp
test
fsts
ja
call
outsb
cmpl
xor
addl
push
ss
jnp
adc
dec
mov
xlat
inc
push
sbb
cwtl
outsb
or
push
out
out
adc
jle
push
div
mov
jb
idiv
outsl
aad
xchg
ficoml
add
call
testl
insb
jae
cmp
xchg
mov
mov
jle
in
int3
cltd
stc
or
inc
in
lret
mov
fsubl
outsl
and
push
out
pop
push
arpl
out
adc
mov
push
pushw
les
dec
dec
out
add
scas
push
fnsave
notl
ret
pop
rorb
sub
lds
dec
neg
lods
cmpsl
dec
push
cmp
daa
test
stos
xor
pop
push
jmp
div
movsl
arpl
fst
insl
shl
in
orb
out
mov
jmp
scas
insl
imul
jp
adc
stos
aas
cmp
sti
sbb
xchg
cmc
and
aad
push
dec
mov
testl
dec
or
inc
mov
je
jmp
dec
and
mov
idiv
rolb
pop
lcall
xchg
pop
push
mov
mov
ret
pop
adc
test
push
mov
cld
mov
shl
or
and
jne
addb
jno
fmull
jl
lds
xchg
sbbb
fwait
loope
aaa
test
inc
in
xchg
mov
cmp
xchg
add
mov
and
mul
repz
sbb
test
ja
dec
cs
outsb
mov
aas
push
xor
adc
add
out
push
into
or
or
jge
in
cmpsl
testl
out
loopne
imull
pop
outsl
pop
xlat
add
xchg
pop
divl
xchg
clc
inc
test
push
lock
pop
ja
orb
in
inc
aas
push
pusha
outsl
xor
je
scas
imul
hlt
or
lahf
xchg
push
xchg
lea
push
imul
add
sbb
icebp
test
inc
cmc
data16
push
jb
push
pop
insb
mov
subb
fwait
lods
jg
hlt
mov
cmpsb
icebp
and
out
icebp
xor
or
or
mov
xlat
inc
mov
adc
out
stos
pop
iret
ds
incb
sub
fldl
adc
insl
mov
or
test
push
xchg
mov
cmpsb
mov
inc
and
add
mov
outsl
ja
cltd
sbb
jmp
lret
in
outsl
popa
pop
and
repz
sbb
pop
testl
mov
pop
cmpsl
jno
je
cld
xchg
div
ljmp
js
mov
js
movsl
sbb
gs
scas
int
mov
inc
xchg
subl
fcoml
jne
shr
ja
or
gs
loopne
es
in
jge
pop
icebp
mov
jno
fdivl
frstor
nop
push
sbb
fstl
inc
and
hlt
mov
addb
dec
mov
sahf
lcall
sbb
in
cmp
push
movsb
inc
cmp
inc
jb
jne
mov
adc
jbe
mov
inc
jae
sbb
sbb
mov
cmp
xchg
fisubl
stos
ss
loopne
lods
neg
jo
mov
scas
lret
lcall
jmp
ljmp
jbe
push
into
ds
lods
xchg
aas
mov
andl
mov
push
mov
iret
fs
mov
dec
cmc
out
repz
hlt
test
lcall
cld
fidivs
cs
jbe
push
cmp
and
sbb
mov
cmp
ljmp
ret
or
out
fistpl
mov
into
mov
stos
mov
inc
add
pop
xor
rclb
and
aaa
or
aaa
cmp
or
fsts
lret
dec
mov
das
cmpb
and
loop
mov
dec
xchg
xchg
icebp
mov
ficoms
mov
xlat
notb
inc
and
test
pop
gs
add
mov
push
jp
in
xlat
insl
ljmp
shl
aam
push
push
les
arpl
clc
shlb
in
push
ljmp
mov
sbb
sbb
jmp
xorb
out
in
out
out
push
add
lods
icebp
lds
aam
mov
fsubrs
iret
rol
icebp
mov
dec
sahf
stc
mov
mov
outsl
dec
xor
jmp
add
mov
mov
dec
mov
out
mov
or
jmp
jg
ja
dec
movsb
clc
aaa
pop
dec
mov
pop
dec
insb
cld
xchg
lods
jle
mov
pop
mov
adc
mov
inc
cmp
scas
dec
mov
and
out
stos
or
jb
xlat
add
adc
in
fidivl
adc
push
inc
in
fstl
outsl
cli
mov
mov
inc
jge
adc
daa
lcall
xchg
pop
and
lcall
sub
or
dec
add
aam
sub
xchg
sbb
and
loope
jge
inc
outsb
pop
push
ja
js
mov
ret
loopne
sub
loopne
and
ljmp
dec
rcrb
daa
data16
scas
sbb
out
xchg
iret
adc
into
push
cs
sbb
test
cmp
aas
pusha
jmp
mov
mov
pop
mov
xor
dec
iret
cli
loop
ficoml
mov
mov
arpl
int
sub
mov
mov
test
inc
dec
mov
out
xchg
nop
out
ficoml
mov
mov
ss
stos
out
and
lods
dec
int
aam
lods
leave
and
xor
fcmove
jp
xchg
lahf
icebp
lods
subb
jno
sbb
pop
pop
into
adc
out
std
out
test
xchg
cmpsl
loope
sub
lret
xchg
loope
cld
fcmove
out
nop
adc
insl
jmp
jb
hlt
or
insl
loop
push
out
xlat
lds
mov
jmp
push
mov
and
inc
scas
lods
aas
out
lods
outsl
inc
mull
fidivl
mov
pop
test
mov
pop
push
jbe
popa
shlb
mov
push
sbbl
out
negb
ljmp
ret
cmc
pop
cmpsl
and
mov
cltd
adc
push
lods
in
and
push
out
mov
and
in
fcmovnb
inc
sbb
notl
pop
jp
add
rcrb
and
scas
shl
mov
movsl
pop
in
xchg
int3
sti
ss
adc
sahf
mov
xchg
insl
sti
push
adc
pop
pop
cmpsb
jp
aaa
jae
jmp
inc
mov
outsb
cmp
or
pushf
sub
shl
mov
and
xchg
adc
mov
xorb
dec
das
mov
out
jbe
and
ljmp
cld
ja
inc
add
pop
or
test
outsl
scas
xor
negw
inc
jno
or
mov
dec
ret
mov
les
js
xchg
cmpsb
adc
push
clc
cld
mov
std
popf
push
jp
ret
das
or
xor
sbb
xchg
outsl
jno
lea
pop
inc
dec
test
push
outsb
cmp
daa
ror
fiaddl
xor
lods
mov
fst
fmull
faddl
rclb
test
ds
pop
sub
dec
mov
incb
popf
dec
push
je
sub
mov
stos
xchg
jbe
sub
or
xor
mov
ja
daa
loope
out
insl
push
push
pop
mov
mov
push
ljmp
jp
sub
mov
hlt
daa
cmpsl
cld
inc
ljmp
pop
ja
cmp
popa
fsubs
ljmp
aam
dec
jns
fisubl
dec
fwait
xor
aaa
sbb
push
lods
add
insb
push
push
or
pop
inc
or
out
cmp
repnz
loop
pop
push
out
push
int3
jnp
je
in
out
fs
les
dec
int3
inc
xchg
ss
das
sbb
lock
es
dec
lret
jp
dec
mov
add
ja
cs
inc
and
jo
mov
arpl
mov
push
ljmp
jno
dec
xchg
xchg
clc
jmp
or
repz
lods
mov
out
cmp
mov
imulb
in
push
gs
mov
mov
aas
test
mov
daa
dec
cmp
in
pop
push
sahf
movsb
iret
push
jmp
pop
and
cmpsl
cltd
call
icebp
jne
mov
or
sbb
into
push
pop
sub
aas
and
and
fsubs
mov
mov
push
repz
and
out
mov
jg
add
dec
adc
addr16
in
jmp
scas
xchg
mov
mov
xor
in
fcomip
push
in
clc
in
add
pop
jg
jb
or
xorb
hlt
daa
mov
roll
iret
icebp
shl
mov
in
xlat
lret
push
pop
pop
sub
fdiv
loop
insl
sbb
lods
aaa
sub
jo
fcmove
fcmovnu
mov
and
push
cmp
or
xlat
xor
fs
dec
das
mov
push
jle
or
pop
fcomi
fwait
push
je
and
out
shr
pop
jmp
negl
mov
lea
in
ja
mov
jno
jae
xchg
insb
fadd
jge
xor
cmc
daa
adc
aas
fcoms
jg
xchg
dec
and
fists
in
out
jecxz
fwait
rorb
push
sarl
inc
dec
negl
std
fwait
andl
inc
stos
inc
outsb
lret
nop
inc
mov
push
cmp
mull
pop
lock
xchg
les
cld
repz
pop
mov
jp
dec
and
inc
aas
testl
out
aad
jecxz
sbb
or
rcll
cmp
mov
sub
gs
rcll
push
sbb
lods
jle
inc
dec
insl
and
in
mov
out
mov
imul
pop
movb
std
imul
scas
dec
ficoml
jne
jmp
ret
loope
negl
fs
aad
push
popf
inc
sub
dec
into
xchg
addr16
push
xor
mov
cltd
push
shl
jb
and
mov
mov
sbb
xchg
xchg
xchg
mov
push
fnstenv
call
mull
mov
jl
inc
push
add
and
dec
stc
divl
shlb
xor
ds
pop
push
dec
adc
push
std
call
and
div
fdivrs
jno
xchg
dec
testl
inc
sub
adc
add
jle
repnz
sub
lcall
jne
aaa
pop
mov
pop
mov
movsb
adc
shl
mov
mov
nop
push
hlt
lock
fwait
out
sub
imul
fists
iret
int
mov
mov
enter
add
out
cs
mov
pop
addl
sub
mov
enter
pop
xchg
pop
shl
sub
push
test
fwait
pop
cltd
mov
push
ficoms
push
jecxz
clc
ja
sub
xchg
shlb
lock
xlat
adc
repz
call
add
push
mull
sub
or
negl
test
enter
push
push
inc
insb
idivl
je
stos
rol
testl
lock
or
xchg
int3
pop
icebp
cmp
cvtps2pi
rclb
jb
jecxz
repz
movsl
lret
ss
mov
test
sub
cs
dec
negl
icebp
add
jne
out
push
sub
mull
and
dec
testl
arpl
imull
lock
sbb
pushf
jns
push
xchg
test
mov
ja
ret
xchg
loop
dec
lods
stos
mov
es
push
ret
test
ss
dec
pop
jge
adc
popa
cwtl
inc
icebp
sarb
fs
xlat
nop
mov
sarl
fstpt
xchg
aas
bound
push
dec
mov
test
addl
sahf
cli
mov
xchg
fiaddl
and
cmc
in
int3
pop
mov
cwtl
add
scas
pop
mov
imul
jg
testb
stc
test
notl
sti
std
jle
test
sub
lock
mov
inc
sbb
and
push
xlat
and
pop
pop
stos
and
fldenv
or
xor
mov
lock
mov
or
es
push
pushf
xlat
hlt
loopne
mov
mov
testl
inc
daa
test
fcmovu
dec
xchg
cmc
lret
xor
jb
test
inc
cmp
lret
and
std
idiv
jb
es
ud2
movsb
jmp
dec
push
dec
add
mov
lea
movsl
and
pop
jge
push
ret
test
xchg
pop
int3
sbb
push
sarl
sar
push
icebp
pop
idivl
xchg
mov
mov
sub
cli
push
out
adc
mull
das
lahf
loope
push
cmp
retw
xor
into
sub
jecxz
mov
xchg
jno
cld
lods
pop
mov
fisttps
gs
pop
pop
add
and
sub
mov
sub
cmpl
mov
push
insb
testl
rorl
stos
and
lock
cmp
enter
in
push
lret
fcomps
sbb
xchg
ljmp
aaa
mov
cltd
lods
dec
pop
or
testl
sub
xor
lret
stos
jno
jp
mov
fcmovnb
adc
push
sbb
arpl
pop
mov
aam
nop
pop
cmp
pop
push
jbe
sub
push
cmp
jecxz
push
xchg
sbb
push
mov
insl
push
mov
and
testl
push
mull
mov
inc
xor
cmpsl
jecxz
icebp
cwtl
xor
les
loop
scas
stc
jecxz
in
or
sub
xor
push
sbb
loop
pop
mov
mov
xchg
popf
adc
imull
push
push
mov
dec
testl
fadd
ja
cmc
loop
int3
out
pop
jno
testl
mov
lcall
push
pop
jp
sub
xor
lahf
mull
xor
xlat
lcall
fdivrs
mov
mov
xor
and
jb
mov
jb
sub
ds
cmp
sbb
in
dec
lods
pop
and
add
imul
cmp
jb
aad
xchg
cmp
jnp
cld
jmp
xlat
jecxz
sbb
imul
mov
gs
scas
shl
mov
lods
mull
xchg
add
jp
adc
out
xchg
sub
xor
adc
je
notl
pop
mov
sub
pop
test
adc
or
ja
call
in
jno
jmp
push
je
and
idivl
idiv
mov
mov
sub
mov
inc
test
sbb
or
mull
adc
xlat
add
pop
les
push
test
mov
xlat
inc
dec
ss
cmp
cltd
out
mov
not
aam
popf
adc
in
sbb
push
fcmovu
in
movsb
mov
imull
bswap
test
mov
push
rcll
shl
stos
push
add
aam
or
inc
push
add
xchg
lcall
neg
cmp
dec
mov
clc
lea
xchg
sbb
pop
jl
mov
jle
xor
mov
and
xchg
clc
push
xchg
xchg
repz
out
jmp
fdiv
test
fisttpll
leave
jo
fiadds
lahf
pop
mov
lret
movsb
dec
fbstp
ja
hlt
mov
iret
mov
push
adc
divl
dec
and
mov
cltd
push
fdiv
movsl
enter
stc
sti
sub
divl
add
or
outsl
mov
int
lods
aaa
sub
div
mov
shr
daa
into
in
mov
cmpsb
sbb
lock
testl
notl
pushf
orl
inc
call
imul
push
imull
xlat
cli
xor
sbb
sub
cltd
mov
mov
out
testl
push
outsb
xchg
lds
fimuls
xchg
xor
jg
lods
mov
notl
out
sbb
pop
dec
adc
idivl
xor
divl
pop
push
repnz
insl
test
ret
xlat
cmpsl
inc
lahf
inc
clc
imul
dec
insl
and
jecxz
std
div
or
xchg
repz
push
xchg
xor
mov
lds
sub
inc
or
or
mov
lock
sbb
xchg
cld
es
mull
adc
xlat
insb
and
jge
repnz
push
cmp
and
mov
cmp
sbb
leave
sti
imul
testl
mov
push
psubd
adc
jb
fwait
divl
xchg
loop
test
mull
xchg
addl
push
popf
jp
pop
push
ficoml
outsb
les
fbstp
lret
sbb
repz
out
cwtl
divl
inc
fistps
add
mov
fidivs
xchg
mov
ss
js
out
das
inc
aam
negl
pop
xchg
out
negl
or
xchg
notl
fistpll
push
loop
jbe
push
enter
imul
xlat
inc
push
mov
int
roll
je
lock
enter
lahf
xchg
or
test
mov
mov
fistl
scas
dec
test
xchg
and
in
or
mov
orb
mov
idiv
nop
out
pushf
jnp
jle
push
sahf
inc
pop
and
inc
divl
mov
call
push
pop
xlat
lahf
sub
jmp
shl
leave
scas
and
push
int3
into
mul
jnp
call
xchg
adc
out
mov
jb
call
in
rcr
adc
cltd
out
dec
add
jnp
push
stos
cwtl
push
sub
fistpll
sbb
pusha
test
xlat
push
repnz
jmp
insb
push
testl
and
leave
shr
push
int3
movsl
xlat
jle
arpl
push
int
icebp
cmp
adc
cli
xor
mov
into
push
iret
sub
adc
pop
pop
das
idivl
cmp
mov
call
nop
and
test
pop
fwait
pop
mov
daa
aaa
call
pop
into
sbb
jo
ljmp
rcrb
xchg
fdiv
cmc
jge
adc
iret
and
mov
testl
or
cwtl
cmp
pop
add
nop
xchg
jmp
pop
cmp
jae
push
mov
repnz
jecxz
testl
cmp
mov
sub
sub
jge
rcr
xor
push
sub
pop
mov
lods
testl
ret
divl
mov
lods
lea
mulw
adc
dec
imul
xchg
or
add
inc
sbbb
ret
adc
or
jle
bnd
data16
mov
in
adc
in
xlat
jo
and
imull
addr16
push
addl
shl
rorb
pop
cmp
cmp
outsb
jo
add
popf
adc
dec
negl
lea
or
std
negb
insl
loope
mov
daa
cmp
pop
inc
sub
jge
adc
aas
or
pop
adc
jg
pop
mov
push
icebp
xchg
out
dec
adc
and
negl
je
adc
inc
out
notl
fistpll
push
add
testl
not
mov
enter
mov
loop
adc
loope
sti
mov
lcall
push
rcrl
loope
xor
jle
xor
adc
xchg
xchg
mov
sbb
xchg
repnz
sub
jmp
jecxz
mov
jl
jmp
adc
push
mov
das
mov
pop
dec
sti
pop
sbb
fnstcw
dec
ficomps
jae
jmp
xchg
scas
dec
sub
div
fbld
flds
les
aaa
fs
xchg
push
sub
pop
push
mov
mov
add
mov
jge
aaa
pop
cmpsl
enter
lods
adc
and
clc
daa
aam
push
ds
push
out
pushf
andl
call
out
inc
daa
mov
adc
xchg
scas
and
and
and
pop
xlat
inc
lods
ljmp
xorb
mov
mov
inc
add
mov
inc
mov
fdivl
cmp
adc
mov
pop
ss
ret
lcall
inc
test
enter
iret
xchg
sbb
mov
and
icebp
mov
notl
pop
lea
add
into
nop
cli
fmuls
negl
push
jmp
not
stos
lahf
idivb
adc
adc
pushf
xchg
in
jmp
jmp
xchg
mov
out
sbb
fidivl
mov
add
ljmp
pop
jge
inc
xor
mov
loop
loopne
testl
xchg
pop
mov
jb
pop
xchg
mov
popa
cltd
mov
mov
cmp
push
add
ja
xor
testl
dec
std
lret
add
aad
xlat
es
shl
adc
dec
inc
jle
mov
out
popf
mov
mov
arpl
in
loop
imull
push
aad
lods
rclb
lcall
xchg
daa
int
imul
sahf
sub
dec
testl
pop
jnp
fisttpl
jbe
fists
xor
xor
jecxz
add
sbb
imull
in
aas
testl
xchg
pop
fstps
jecxz
ret
dec
mov
lret
gs
xor
cltd
jle
adc
ret
jmp
inc
notl
cmp
scas
test
scas
adc
idiv
fwait
dec
cmpsl
sbbb
testl
dec
into
divl
sub
mov
mov
mov
lahf
adc
jecxz
out
add
inc
fwait
dec
pop
hlt
cmp
dec
out
fidivrs
pop
xor
mov
lret
out
outsb
or
pop
repz
jmp
dec
rcl
dec
loope
push
lret
push
fistpl
mov
je
push
out
mov
pop
call
rcrb
out
ret
stos
imul
xchg
jo
sbb
mull
or
jecxz
popf
xchg
mul
call
in
mov
sub
ret
jge
negl
cmpsl
jnp
popf
xchg
push
pop
adc
daa
push
negl
movsb
testl
jbe
negl
fisttpl
jns
sub
outsl
in
sub
xor
push
jg
in
ret
sub
loop
enter
adc
sub
outsl
mov
xor
mov
mov
push
popf
popa
mov
mov
scas
outsl
enter
push
inc
lahf
xor
push
push
lods
xchg
aam
imul
jl
push
imul
shlb
inc
mov
sbb
je
push
jne
aas
rolb
movsl
sbb
xor
cwtl
sbb
and
jl
pop
mov
cld
mov
shll
fcomps
pop
push
pushf
push
aad
jecxz
ret
xchg
adcb
loope
fcomi
fisttpl
int3
fmull
nop
mov
or
daa
mull
repz
pop
insl
ds
sbb
lods
mov
ret
loopne
jmp
mov
pop
push
testl
sbb
jmp
adc
push
mov
jne
out
jbe
cmp
rclb
negl
lahf
shl
jge
sub
aad
cltd
pop
int3
out
nop
andb
testl
cmp
cltd
and
call
shll
pop
stc
testl
or
fidivrl
pushf
lcall
adc
imul
dec
push
pop
dec
bound
imul
cmpsb
xchg
push
mov
fsub
test
aas
lods
mov
lret
mov
addr16
pop
mov
int
in
push
mov
aam
pusha
mov
push
and
insl
mov
data16
mov
xchg
subb
lock
ret
xchg
lock
testl
sub
xlat
add
jne
movsb
xor
pop
pop
pop
mull
fildl
mov
jne
pop
sti
movsb
adc
cmpsl
pop
pop
dec
sahf
push
negl
and
lods
outsb
loopne
pop
out
es
dec
daa
fcomi
push
pop
inc
jg
js
fwait
sbbb
cmpsb
idiv
mov
push
fldcw
cwtl
iret
frstor
or
negl
push
rolb
icebp
lret
mov
dec
pop
cmp
idivl
cmpsb
xor
enter
test
stc
pop
adc
push
jmp
pextrw
lods
jl
iret
sbb
mov
jb
mov
mov
mov
mov
loop
jl
push
adc
xor
push
mov
fists
stos
cli
sti
imul
fcompl
shlb
mov
sub
jp
roll
fwait
neg
loopne
rclb
push
push
sbb
pop
xor
sbb
les
repnz
sub
jl
push
jp
cvtps2pi
lds
movsb
adc
aad
xor
mov
cmp
sbb
mov
cmpsl
jae
pop
push
div
subb
inc
jmp
fcomp
xor
jb
imul
int
xlat
cmpsl
push
out
pushf
imull
pop
sbb
imul
das
idivl
pop
pop
int
sub
push
mov
sub
repz
pop
adc
xchg
ret
pop
rolb
in
movsl
divl
dec
mov
pop
jmp
test
inc
lds
je
adc
notl
push
out
pop
test
mov
negb
icebp
out
cwtl
inc
divl
mov
pusha
pop
test
cmpsb
push
push
push
jno
out
inc
scas
push
int
out
mov
add
insl
ret
sub
pop
xor
adc
movsl
nop
stos
jmp
sub
imull
inc
lea
or
pop
cmp
lods
stos
fists
testl
xor
inc
pop
not
jo
add
outsb
mov
testl
addl
out
lcall
cltd
cmc
mov
stos
push
ds
mov
jb
xlat
pop
negl
aas
lcall
orl
or
fxtract
divl
cmp
les
pop
seta
xlat
addl
jecxz
pop
ror
es
fbstp
push
paddusb
inc
mov
hlt
push
fidivrs
divl
out
jns
inc
jecxz,pt
add
xchg
enter
mov
das
orb
sbb
movsb
add
cwtl
es
cmp
imull
out
mov
cmp
jno
sbb
lret
inc
mov
test
clc
in
idivl
and
add
icebp
stos
not
xchg
pop
xor
call
mov
aad
inc
insb
sub
shl
stos
dec
hlt
sbb
shrl
in
push
push
divl
in
loop
testl
ja
pop
jo
dec
mull
clc
mov
idivl
xchg
int
negl
dec
and
push
fcomi
adc
das
cmp
jl
imul
sti
rcrl
outsb
push
int3
outsl
orl
inc
fsubs
in
mov
jnp
jl
shl
imul
adc
inc
fdiv
dec
das
cltd
aam
add
ficomps
clc
fidivrl
daa
imull
insl
ljmp
xor
xlat
pop
mov
jb
ja
imull
popf
xchg
aam
push
out
xchg
pop
dec
pop
ss
loope
mov
xchg
testl
sti
outsb
nop
sub
mov
dec
mov
push
fnstcw
pop
popa
lods
clc
daa
scas
div
ds
push
and
add
inc
je
dec
and
inc
out
pop
in
mov
fstpl
je
push
out
and
cmp
dec
lret
mov
divl
push
sbb
rclb
or
notl
mov
mov
pop
test
pop
jge
jno
mov
icebp
movsl
out
in
xlat
into
out
pop
pop
idivl
out
sahf
not
mov
add
push
test
inc
jnp
fsubr
adc
pop
shlb
imull
sbb
push
jecxz
into
sbb
fcomps
xlat
ficompl
mov
aam
xchg
mov
shrb
jp
es
insb
mov
dec
sbb
jo
cltd
adc
notl
push
lret
sub
mul
aam
mov
test
idivl
pop
aas
repnz
pop
outsb
outsl
lahf
nop
dec
xor
mov
xchg
mul
mov
push
test
push
xchg
xchg
jg
imul
std
sbbl
or
notl
xor
dec
cmp
pushw
bound
lods
and
test
std
test
mov
mull
and
push
in
cmpsb
pop
ss
mov
xor
adcl
std
inc
push
pop
divl
jno
in
sub
xsha1
cmpsb
or
mov
xchg
xor
cmp
mov
fsubs
sarl
dec
pop
adc
or
shl
cmpsb
sbb
jmp
jns
hlt
dec
mov
mov
mov
jecxz
outsb
sarb
rcrb
lea
ds
loopne
addr16
ret
fisttps
idivl
outsb
shrb
sar
xlat
add
imull
sbb
testl
int
mov
lret
imull
mov
fistl
aaa
mov
sub
pop
bound
fadd
xchg
jmp
les
mov
test
std
push
adc
iret
adc
pop
div
or
jae
testl
or
pop
pop
stos
jmp
jp
test
adc
add
jno
sbb
rep
mov
xchg
pop
je
test
xor
jge
xor
scas
sbb
xor
in
push
testl
xor
xchg
into
rorb
pop
mov
jmp
idivl
adc
aas
add
popf
push
jecxz
or
loope
gs
shrb
mull
neg
add
nop
xchg
outsb
into
aaa
add
pop
xor
out
sbbb
sub
pop
lds
mov
adc
pop
out
sbb
cmp
in
jbe
push
push
icebp
jo
mov
movsl
inc
push
stos
test
jns
negl
int3
add
decl
or
inc
cmp
ja
inc
push
xacquire
cld
stos
xchg
in
lock
outsl
ficoml
mov
out
push
lock
ja
mov
scas
ret
mov
mov
pop
mov
adc
mov
ljmp
shrl
jp
ffree
jns
hlt
xor
idivl
dec
mov
imul
jecxz
out
enter
push
sub
sbb
mov
movsl
in
icebp
popa
jbe
lea
inc
out
pushl
pop
cmp
pushl
call
push
movsl
shll
mov
into
in
xchg
adc
xlat
mov
inc
xor
and
inc
and
out
sub
daa
and
push
xchg
mov
pop
jg
lock
jmp
in
and
ss
cs
xchg
or
jp
lcall
inc
lods
adc
sub
jno
cld
outsl
and
int
pop
popf
jp
xor
subl
xor
hlt
data16
mov
sub
insl
ficoml
mov
jp
cmp
loope
mov
lods
jns
cmp
cmp
mov
and
pop
daa
mov
popa
aad
push
testl
jo
mov
mov
shrl
fistpll
iret
adc
imul
sub
sbb
dec
cmp
mov
loopne
jne
mov
lea
sub
jp
pop
dec
test
cmp
jns
pop
testl
and
int3
inc
testl
xchg
sub
fildll
xor
mov
or
mov
lea
loopne
and
out
rorb
jns
testl
aam
sbb
imul
push
xlat
fcoml
xor
ficompl
mov
mov
push
mov
bound
jmp
mov
mov
fistpl
cmp
lcall
xchg
push
fisttps
push
dec
pop
or
sbbb
jp
jg
xchg
cs
ficoml
fmul
xchg
jb
sbb
push
sub
push
lea
icebp
idiv
cmp
push
not
xchg
xchg
ja
int
dec
or
push
imul
rcrl
adc
test
cmc
andl
pop
xor
cltd
movl
addr16
shr
stos
int3
mov
xchg
pusha
and
ret
stc
call
notl
repnz
mov
cmpb
sub
mov
dec
idiv
xor
jmp
pop
mov
inc
clc
xchg
cld
jle
mov
sbb
and
aam
pop
pop
push
out
loopne
push
das
mov
out
subb
mov
inc
js
arpl
repz
jbe
lahf
bound
add
insb
jns
repnz
pop
push
in
in
das
xchg
xor
mov
outsb
ds
adc
adc
ret
xchg
pop
test
fimuls
adc
call
jmp
arpl
test
pop
cmc
adc
pop
std
xlat
mov
sbb
sbb
adc
xchg
lods
adc
hlt
xlat
jle
loopne
ja
cli
pop
aas
fdiv
inc
out
jns
jno
mov
arpl
rorl
lds
sbb
addb
testl
pop
xlat
imul
mov
mov
imull
repz
lcall
lret
rcl
cmp
xchg
loope
add
insb
push
fcoms
jo
ret
xchg
fs
push
in
imul
sbb
dec
xchg
je
lds
and
lret
les
mov
lods
iret
ja
sbb
jae
dec
cs
dec
add
sbb
jmp
push
or
jnp
jnp
adcl
mov
std
notl
lea
mov
call
jo
insb
out
jo
sub
lds
imull
and
cmp
int3
in
das
or
or
inc
jnp
daa
cmp
jecxz
inc
xor
fbld
push
pop
jmp
cmpsb
mov
int
pop
sub
in
sub
jnp
add
iret
testl
pop
push
and
je
xor
fnstcw
mov
dec
mov
or
add
xor
sbb
stos
mov
es
mov
je
sub
xchg
push
xor
negl
xor
inc
pop
push
out
xchg
xchg
fildll
sbb
repnz
shrb
xlat
jnp
and
and
outsb
pop
push
lods
ss
daa
out
imul
not
scas
inc
shll
arpl
sbb
stc
jo
jns
xlat
mull
or
nop
fcomi
mov
push
aaa
sbb
test
imul
imull
jl
in
orb
out
leave
out
mov
imull
stos
gs
dec
dec
xor
lea
imull
inc
lods
and
shr
adc
es
pop
jg
cmp
push
aaa
sub
gs
push
idivl
imul
notl
ficoml
xchg
pop
pop
leave
xor
negl
or
mov
xor
int
push
sbb
idivl
popf
pusha
jle
mov
push
sub
mov
pop
in
pop
sub
out
les
popf
int
mov
jge
sahf
lret
inc
neg
add
icebp
jle
mov
inc
mull
lcall
test
outsl
je
push
xchg
cmpsl
ss
xchg
in
pop
out
adc
jno
into
cmpsb
sysret
sbb
neg
cli
hlt
push
jp
cltd
adc
push
dec
lea
enter
neg
dec
sarl
mov
xchg
inc
inc
sbb
das
flds
lret
push
or
mov
ficoms
pop
mov
cltd
ret
mov
into
jns
cmp
fimuls
dec
mov
jae
push
imul
add
jecxz
sbbl
jmp
cmp
pop
mov
lods
and
in
pop
cmpsl
pop
xchg
jmp
in
shlb
in
mov
imul
bound
xchg
jo
ret
adc
iret
out
cs
outsb
test
idivl
stc
and
sub
lock
call
mul
or
in
pop
mov
sub
xchg
dec
arpl
and
call
fcomi
push
popf
sub
iret
scas
xor
or
xchg
je
xchg
aam
mul
mov
fldt
and
mov
or
or
push
fcmovne
scas
negl
fiadds
loopne
imul
adc
fnsave
jae
xlat
push
mov
or
out
add
push
xor
call
xlat
pop
xchg
pop
mov
cs
in
test
add
dec
rcll
lods
add
jnp
push
out
sti
loopne
sbb
iret
test
mov
xchg
xlat
loope
sti
mov
outsb
fcmovne
push
enter
testl
sub
mov
dec
loopne
or
sbb
sarl
adcl
push
testl
imull
outsl
inc
sbb
add
aam
mov
jo
sti
pop
xlat
adc
orb
jbe
xchg
sub
push
lds
jge
idivl
sbb
iret
ucomiss
xchg
nop
notl
sahf
adc
lock
jmp
mov
cmp
push
out
das
ljmp
xchg
lcall
pop
dec
mov
xor
in
lods
or
mov
xchg
daa
mov
movsl
pushf
vmaskmovdqu
jmp
dec
adc
cmp
je
or
test
and
push
sbb
clc
arpl
xchg
lds
push
jge
dec
testl
jle
fadds
cmp
mov
jmp
cmp
pop
insb
rcrl
xor
fwait
xchg
int
mull
std
sub
xlat
aaa
outsl
xor
jmp
pop
pop
mov
pop
dec
mov
xchg
mov
inc
test
je
clc
ja
sub
jmp
pop
out
jmp
in
out
or
inc
xor
push
xchg
cmc
out
sbb
xchg
ja
ss
lcall
add
mov
or
testb
fidivs
imul
test
loope
or
adc
in
out
inc
add
xor
incb
xor
in
stc
cltd
mov
testl
cli
pop
loopne
sub
ret
icebp
iret
fistps
popa
sbbb
ja
xchg
add
add
jns
fidivl
add
push
xor
cld
outsl
sbb
js
mov
stos
aaa
dec
inc
mov
in
cmp
lea
pop
jmp
add
jno
pop
neg
mov
ja
xlat
and
push
ds
inc
outsl
cmp
test
sbb
pop
mov
push
call
loop
fwait
loopne
stos
outsb
out
push
mov
push
mov
sbb
or
mov
nop
lods
fsts
dec
lods
arpl
sbb
dec
out
fcoms
clc
rcl
sub
fucomip
rcll
leave
lret
add
jp
lcall
frstor
adc
in
sti
aaa
loop
out
mov
imul
pop
lods
pushl
jmp
sahf
cmp
adc
insl
cli
leave
push
fsts
mov
mov
ljmp
daa
push
jmp
addl
ret
repnz
and
dec
scas
push
lods
shrl
adc
jno
mov
aad
push
jmp
xchg
scas
adc
xchg
dec
cld
into
push
jo
cmp
addr16
orb
lahf
push
mov
xor
jno
xor
pop
xchg
es
imul
out
xchg
pop
sub
mov
and
xchg
aas
popa
mov
xchg
mov
mov
lret
push
cmp
stos
xchg
aad
inc
mov
fisubl
mov
je
sbb
xor
test
out
lret
ljmp
mov
fidivl
xor
sbb
sbbl
add
mov
mov
daa
inc
fisubrl
sbb
push
test
fnstsw
mov
pop
mov
adc
and
lods
xchg
push
mov
cltd
adc
pop
sub
test
jae
lret
out
inc
cmc
pop
cs
sarl
push
cmp
xor
out
hlt
testb
mov
mov
adc
rorb
pusha
fdivrl
fidivs
std
sub
jbe
or
dec
xchg
mov
xchg
das
jle
adc
outsl
xchg
or
or
nop
and
mov
aam
clc
mov
repnz
data16
mov
add
inc
test
or
fdivr
fsubr
and
fs
rclb
cmp
jnp
pop
test
lea
mov
sub
call
mov
add
jne
aam
xor
inc
out
fdivs
in
fisttpl
dec
add
fisubrl
outsb
out
push
adc
mov
mov
adc
gs
add
sub
aam
pop
adc
es
std
int3
pop
cli
adc
sti
out
mov
cmp
xchg
and
adc
adc
fbstp
cmpb
push
xchg
sbb
and
sub
aam
loope
mov
loope
push
pop
lahf
dec
cmc
test
cmc
idivl
ficompl
das
jecxz
outsl
ss
sahf
es
fdivs
cmc
neg
adc
xor
pop
test
scas
xchg
push
inc
jno
mov
or
mov
pop
lahf
inc
cmp
frstor
xchg
fs
cwtl
ficoms
iret
adcl
repz
cmpsb
inc
mov
push
stos
jge
add
mov
jg
int3
adc
mov
pop
xor
loop
pop
dec
jecxz
mov
cld
out
aad
fwait
lcall
cmp
shlb
pop
jl
shll
jmp
jb
aas
dec
in
and
cmp
xlat
loop
int
dec
js
pop
push
into
idivl
es
ss
add
out
cmpsl
dec
cmc
je
jge
pop
cmp
push
xchg
sub
push
or
fildl
stos
sbb
std
adc
idiv
movups
call
jne
xor
push
out
das
dec
scas
neg
hlt
inc
mov
jl
mov
testl
scas
jnp
inc
xor
mov
movsb
and
mov
or
push
sbb
pop
pop
arpl
push
aad
ljmp
jl
xchg
pop
mulb
icebp
test
push
mov
push
cmp
push
lea
imull
hlt
push
pop
mov
push
int3
fldcw
cmp
shl
popf
inc
neg
xor
icebp
inc
das
sbb
imull
mov
gs
ja
repz
mov
jnp
push
inc
mov
js
mov
stos
imull
jp
cwtl
divl
fwait
stos
xor
pop
mov
fildl
lret
loope
xor
mov
jecxz
test
aam
sub
bound
mov
aad
ss
mull
mov
mov
fldt
test
mov
aas
out
cwtl
cs
popl
sub
negl
mov
test
sub
xchg
mov
div
add
cli
sbb
sub
jle
push
adc
not
pop
in
mov
negl
nop
jp
mov
dec
sbb
scas
imul
mov
add
notl
sbb
or
push
xlat
je
jmp
xchg
pop
neg
in
lahf
cli
daa
and
outsb
testl
movsb
std
aad
add
push
adc
fistl
shlb
inc
filds
bound
fists
xchg
loop
pop
inc
or
xchg
jbe
insb
ret
mov
and
cwtl
mov
dec
and
repz
jnp
idivl
xchg
sbb
push
mov
mov
sbb
jle
push
idivl
xor
cli
and
cs
xor
adc
bound
test
xchg
outsl
sub
testl
inc
sbb
cwtl
ja
inc
sbb
je
xlat
rcll
lock
pop
dec
xor
enter
sub
inc
sub
inc
pop
outsl
and
jg
leave
sti
incl
sub
ljmp
jecxz
pop
and
not
push
cmp
xlat
jne
dec
idivl
lcall
xor
jp
or
push
sub
stos
inc
cli
divl
hlt
push
in
sahf
xchg
stc
daa
test
out
mov
movsl
inc
movl
insl
testl
aaa
xor
mov
pop
mov
test
out
pop
sbb
es
xchg
lret
sar
or
dec
dec
pop
inc
in
pop
xchg
call
cmp
outsl
and
sbb
push
mov
xlat
loopne
push
and
testl
xchg
lret
add
and
mov
aam
cmp
test
inc
out
cmpsb
or
jo
xor
jge
jl
push
notl
hlt
add
push
mov
sbb
adc
out
jno
divl
lds
out
icebp
imul
mov
ror
adc
lock
jecxz
jg
push
xor
outsl
jecxz
in
push
mov
shll
cmc
jnp
idivl
insb
jg
testl
fidivs
jbe
adc
int3
xor
xlat
movsb
jge
add
sbb
xchg
cld
adc
mov
imulb
pop
divl
dec
inc
dec
pop
fcomi
jnp
lahf
jecxz
jb
lods
xchg
into
fists
popf
hlt
sub
imul
pop
sahf
xchg
pop
aas
dec
in
notl
adc
cli
xorb
dec
aam
in
mull
rcll
push
iret
popf
ljmp
repnz
dec
mov
inc
sbb
imull
or
lcall
negl
mov
adc
rclb
mov
or
out
push
imul
mov
xor
xlat
mul
push
pop
mov
mull
ja
fdiv
mov
das
popa
cli
loop
sbb
aam
pop
fbstp
and
pushf
mov
rcr
push
dec
loope
test
push
cmp
pop
fmul
scas
popa
in
or
cwtl
out
jo
mov
xlat
mov
jb
cs
cmc
jmp
ljmp
mov
je
or
pop
xchg
push
test
adc
pop
jp
fwait
mov
fiaddl
call
and
idivl
xchg
lret
mov
adc
cld
fisubl
sbb
add
call
xchg
bound
xor
adc
mov
loope
sub
push
or
out
popf
xchg
aam
add
dec
sbb
jo
push
das
sbb
cmpsb
pop
lods
sarb
cld
add
enter
dec
mov
rcr
out
cwtl
call
test
int3
cli
push
loope
push
mov
and
je
sahf
negl
sub
push
notl
into
jmp
mov
xor
shrl
pop
enter
push
xchg
mov
out
push
xchg
repz
divl
shlb
gs
inc
xchg
js
and
sahf
loope
std
lahf
xchg
fstp
stc
int
cwtl
icebp
pop
xchg
adc
or
sti
fprem
fldt
jl
dec
jb
int3
dec
sbb
cmpsl
std
stc
loope
or
shl
mov
sub
enter
xchg
jmp
fincstp
and
in
int3
cmc
ret
xchg
fisttpll
mov
ret
aam
add
push
div
inc
inc
lods
das
mov
jecxz
lret
cltd
ss
inc
divl
test
xorl
popa
pop
clc
sarb
sub
dec
pop
out
pusha
jno
dec
int3
flds
aad
and
or
xchg
neg
sub
insl
mov
lret
xchg
mov
adc
daa
or
leave
xor
mov
stos
movsl
negl
shll
cmp
addl
mov
sub
xlat
test
iret
dec
pop
icebp
pop
fdiv
rclb
adcb
xchg
xchg
cmpsb
or
loop
sbb
notl
loope
repz
imull
outsb
pop
jnp
xchg
test
sbb
inc
fcmovnbe
xchg
dec
mov
sub
imul
and
fcmovu
dec
dec
add
sub
testl
pop
das
inc
outsl
sub
negl
out
and
test
roll
mov
cltd
int
gs
inc
lret
mov
movsl
hlt
divl
xchg
repnz
or
jecxz
mov
push
negl
ret
mov
cmpsl
pop
hlt
idiv
inc
sbb
pop
mov
idivl
lea
inc
lcall
push
in
popa
mov
sub
lret
imul
arpl
or
out
push
mov
test
idivl
data16
mov
jo
mov
push
pop
ror
je
repz
mov
imull
mov
and
xchg
xor
pusha
and
add
jns
xlat
xlat
test
imul
push
push
out
push
dec
out
sbb
leave
dec
cmp
loope
cmp
div
sub
das
loop
jecxz
mov
cmp
repnz
divl
mov
aad
sbb
mul
pop
pop
out
mov
rcll
xor
adc
in
mov
iret
xlat
xor
adc
mov
ret
popf
xchg
repz
sbb
jne
idivl
sub
mov
mov
dec
xor
testl
daa
notb
or
pop
inc
fnsave
mov
or
lods
pop
dec
dec
mov
inc
mov
ficomps
mov
neg
pop
hlt
outsb
add
mov
shlb
data16
fbld
jmp
pop
push
hlt
notl
pop
inc
imull
push
inc
jecxz
xchg
outsb
jae
rcr
notl
pop
out
xor
stos
mov
pop
jecxz
mov
arpl
popa
jnp
mov
add
or
jl
inc
dec
cmp
int
rcll
fdivrs
sbb
stc
push
imul
add
mov
call
xor
in
test
push
nop
lcall
cmp
inc
cld
shrl
xchg
pop
in
xchg
aas
xor
cli
cwtl
mov
mov
mov
clc
mov
negb
cld
in
jb
je
push
ja
leave
out
fistps
pushf
sub
stos
int
negl
pop
xchg
int3
negl
cmpsl
insb
inc
xchg
fisubl
lahf
addr16
mov
imul
xlat
cmp
mov
fdivp
stos
pop
mov
les
test
out
ret
lods
cmpsb
dec
adc
lods
xchg
xor
aad
pushl
je
or
mov
bound
inc
and
imull
sbb
aaa
testl
xchg
mov
mov
xor
call
sub
rcr
pop
divl
sbb
idivl
sbb
pop
mull
and
mov
cmpsb
mov
lret
and
pop
pop
cmp
in
adc
jno
clc
insl
popf
push
std
stos
pusha
mov
adc
pop
mov
mov
std
cwtl
xchg
mov
xor
push
cs
pop
movsl
scas
xor
out
jmp
mov
int
cmp
fmull
mov
cmc
xchg
xchg
stos
mov
imul
adc
push
fsts
ret
ljmp
mov
adc
movb
pop
mov
xchg
and
call
dec
push
pop
icebp
dec
ficomps
enter
add
xlat
aad
xor
jns
sarl
push
sarb
dec
fincstp
int
scas
in
addl
push
aad
enter
add
fwait
dec
dec
not
iret
outsb
lds
shl
test
out
push
out
jnp
xchg
mov
test
stc
jl
idivl
jp
adc
inc
mov
push
cli
or
xchg
int
pop
mov
addr16
pop
pop
sarl
fcoml
idivl
xchg
and
push
stos
imull
sub
mov
int3
push
cwtl
jne
insb
repnz
jmp
nop
in
rorl
fsubr
loopne
mov
cltd
adc
mov
enter
push
fldt
mov
ret
cmp
fnstsw
pop
notl
xor
xchg
notl
pop
push
testl
jb
dec
out
or
add
idiv
fisttps
js
xchg
adc
clc
gs
sbb
jmp
jg
sub
jae
pushf
outsl
leave
scas
push
js
push
sbb
addr16
and
fs
dec
mov
jle
jb
adc
idiv
or
lcall
rorb
idivl
mov
pop
inc
cli
idivl
pop
aam
rol
lcall
movsb
push
sbb
imull
aas
sub
mov
fiadds
lds
test
push
mov
pop
xor
negl
and
ss
je
fbstp
aam
sub
and
pop
xor
fistps
pop
mov
xlat
fstl
mov
divl
push
movsl
sub
cmpsb
les
cwtl
xor
ljmp
insb
adc
mov
sti
out
ds
lret
idiv
lds
popa
out
fsubr
jno
xlat
xchg
aaa
push
std
sbb
fimull
xchg
jle
insb
icebp
es
mov
xor
jl
out
orl
add
dec
mov
testl
scas
jg
xor
push
repnz
xchg
xor
fwait
dec
adc
fwait
sub
dec
jle
lock
mull
add
jns
rcr
mov
pop
testb
idiv
jns
decb
lods
pop
push
les
inc
or
loope
mov
sbbb
jb
xor
and
jo
pop
pop
enter
push
dec
neg
push
lcall
mov
push
outsl
adc
and
sub
sbbl
pusha
ret
enter
pop
adcb
stos
arpl
divl
fistps
stos
dec
mov
jbe
pop
repz
mov
inc
fbld
cmp
hlt
push
cmp
fcomip
nop
dec
pop
movsb
imul
jcxz
pop
cmp
nop
add
sub
adc
xor
inc
or
adc
test
out
jg
inc
cs
xchg
hlt
pop
or
sbb
popl
nop
jp
xor
outsl
in
cwtl
data16
divl
sub
and
rcrl
jg
idivl
xchg
pop
inc
xor
mov
sbb
fucomip
push
or
xchg
out
xor
add
mov
dec
mov
sbb
ds
loop
jg
test
test
js
negl
push
andl
xchg
idivl
mov
mov
scas
mov
notl
cs
fwait
xor
ss
das
gs
arpl
sub
ret
sbb
cmp
test
scas
sbb
mov
or
xchg
mul
leave
lods
mov
xlat
std
js
repz
iret
adc
out
in
jmp
fisttpl
pop
or
mov
fwait
out
jle
int
add
in
and
dec
xor
cltd
xor
push
inc
pop
push
sbb
push
cmpsl
mov
out
neg
pop
xor
xor
push
punpckhbw
pop
or
mov
dec
cmp
sub
out
sarl
out
xchg
jbe
pop
in
xor
shll
aas
and
mov
lret
push
xchg
fstp
jae
xor
or
or
insb
and
and
test
cmp
test
aad
fstpt
jb
lock
sbb
dec
pminub
mov
test
cwtl
mov
adc
pop
sub
ret
idivl
xor
mov
test
jo
cmp
xchg
lds
outsl
pop
mov
sbb
scas
int
jge
bnd
mull
inc
pop
dec
hlt
idivb
adc
outsl
inc
mov
call
adc
test
insl
jb,pt
xchg
mov
mov
mov
inc
mov
test
imull
cwtl
gs
mov
jle
imul
or
fcomip
lea
divl
insl
mov
xorps
xor
imull
sbb
and
fs
or
mov
inc
neg
fmuls
dec
negl
mov
inc
sti
add
testl
dec
and
shrd
push
pusha
enter
push
movsl
inc
xchg
cmpsl
xlat
imul
sub
xor
stc
dec
addr16
pop
push
aas
lret
out
aad
pop
rcrl
jno
sbbb
mov
dec
imull
gs
imull
sbb
je
push
cmc
and
cmp
out
test
repnz
lock
nop
stos
popa
jno
dec
sbb
js
data16
or
lods
int3
xor
push
testl
mov
xor
daa
sub
lods
imull
xchg
insl
arpl
add
push
push
adc
repz
lret
mul
sbb
in
xlat
subl
xchg
pop
xchg
data16
ds
add
or
inc
jecxz
mov
mov
push
leave
pop
mov
push
and
jge
ja
inc
mov
pop
testl
pop
push
divl
pop
mov
gs
dec
inc
jecxz
mov
mov
adc
cmp
shrl
xor
push
pop
add
idiv
in
fmull
loop
mov
xor
sub
cs
mov
int
cmpl
addr16
notl
lods
mov
push
js
icebp
dec
xor
rorb
inc
call
fdivs
adc
por
out
adc
stos
adc
divl
push
out
push
das
mov
repz
orl
lcall
mov
addb
jae
cmpsb
out
jecxz
dec
mull
in
out
mull
aaa
cwtl
rcll
lret
fldl
int
in
sbb
lahf
clc
mov
ss
negl
push
inc
jae
sbb
insl
mov
dec
mov
icebp
dec
lock
aam
idiv
addr16
ja
xchg
sub
jne
sub
push
cmp
jmp
jg
xlat
or
sbb
loope
mov
repnz
adc
cmc
in
cltd
or
mov
xlat
cmp
and
enter
pushf
and
notl
pop
mov
test
daa
inc
stos
add
shrl
idivl
movsb
sbb
xchg
xor
xchg
or
lret
in
les
fcompl
jmp
mov
push
insb
pop
xchg
cmp
push
mov
iret
test
ficompl
mov
mov
push
nop
inc
ffreep
adc
sahf
adc
lds
adc
push
pop
fists
xchg
push
mov
adc
fdivrs
push
and
push
cmp
sub
cmp
ret
pop
std
int
push
xchg
sbb
push
mov
or
cmp
testl
sub
xor
out
iret
js
outsb
jbe
rep
or
pushl
cmpsb
cmpsl
ja
mov
mov
es
ss
jg
mov
gs
divl
xchg
lahf
test
nop
test
testl
sbb
add
shlb
mov
sbb
inc
shrb
inc
div
mov
pop
pushf
lds
xchg
jns
mov
cmp
divl
mov
pushf
into
mov
inc
push
nop
cltd
jb
cmp
imul
jbe
inc
lock
xlat
adc
push
out
dec
call
xchg
or
fidivs
fwait
and
imull
repnz
notl
mov
arpl
adc
and
fsubs
mov
negl
pop
fdivp
jmp
lea
testl
fisttps
mov
xor
push
adc
cld
push
stc
mov
push
lret
xchg
imull
fbstp
divl
pop
pop
xlat
sbb
out
mov
negl
pop
inc
jb
push
inc
push
mov
outsb
push
mov
idivl
in
push
movsl
insb
push
out
xlat
mov
push
jg
loope
icebp
dec
cmp
jl
shlb
pop
out
imul
adc
xor
sahf
negl
sbb
lea
aaa
mov
push
outsb
push
sbb
inc
idiv
imul
sub
xchg
adc
scas
sbb
lea
adc
pop
sbb
sub
pusha
test
pop
testl
and
dec
and
sub
hlt
sub
xchg
push
testl
pop
sub
lcall
xchg
push
test
fs
xor
and
lods
arpl
mov
repz
repz
pop
test
xchg
imul
xlat
stos
mov
or
andb
testb
xlat
xchg
in
test
xlat
and
lahf
test
and
testl
and
testl
and
xlat
mov
pop
bound
push
notl
aam
ss
idivl
cmp
or
mov
in
jl
nop
adc
cltd
dec
dec
pop
inc
test
divl
sti
out
scas
test
jnp
je
leave
mov
das
scas
jns
outsb
inc
notl
lock
jae
push
stos
mov
xchg
push
xlat
xor
xor
call
jae
gs
xchg
mov
mov
cmp
iret
cmpsb
idivl
sub
pop
jae
idivl
out
lock
xchg
xor
mov
xchg
fcoms
cmc
sbb
mov
xor
mov
testl
fcmovnu
mull
add
testl
pop
jb
cli
mov
bound
mov
push
fwait
push
mov
jge
cmp
mov
pop
inc
push
mov
mov
fisttpl
cmpsl
xchg
adc
inc
fdiv
mov
xor
pop
adc
fsts
rorl
sub
fidivl
jo
int3
in
divl
and
loope
jo
sbb
filds
shrl
xchg
push
mov
cs
mov
pop
adc
mov
rcl
in
sbb
xchg
xchg
call
dec
add
loop
sub
ja
adc
adc
fisubl
add
jbe
repz
idivl
xor
sub
outsb
mov
ljmp
inc
jecxz
js
cli
movsl
mov
loope
add
into
adc
in
pop
mov
mov
or
in
xchg
fsubp
mov
jmp
inc
icebp
dec
iret
icebp
addr16
add
pop
repnz
pop
incb
iret
dec
addr16
out
cld
cmpsb
mov
cli
ds
sbb
jge
lock
bnd
mov
lods
leave
lea
cmpsl
iret
lcall
outsl
call
xchg
sbb
cmp
xor
cmp
xor
repz
jbe
cmpsb
lock
dec
dec
push
movsl
lcall
pop
scas
or
movsl
pop
add
add
push
and
cltd
mov
ljmp
dec
inc
jbe
pushw
pushf
sbb
frstor
push
icebp
imul
mov
outsb
test
out
mov
cld
inc
cld
jecxz
push
and
in
add
push
rep
xor
lock
aaa
ljmp
pop
in
loopne
add
scas
mov
call
in
in
lods
xchg
fstp
into
imul
adc
and
xor
out
adc
insl
lret
push
and
push
loop
mov
lahf
add
push
leave
xchg
ljmp
out
mov
or
push
sbb
in
in
push
neg
pop
jbe
ljmp
jbe
fs
and
sbb
add
in
cmp
fimull
or
pop
insl
pop
add
mov
sbb
fisubl
out
mov
pop
mov
pop
mov
jp
mov
call
fs
inc
out
loopne
dec
add
in
mov
scas
mov
and
ljmp
mov
movsl
and
mov
or
scas
xchg
lahf
mov
ljmp
arpl
adc
in
xchg
jbe
shlb
into
jge
xlat
lret
sahf
in
push
jle
mov
mov
fldcw
sub
xchg
dec
fmull
cmc
and
imul
sub
daa
push
sub
pushl
cmp
clc
jnp
cs
mov
push
cmc
or
lods
loopne
int
jecxz
xchg
xor
iret
jl
mov
dec
add
mov
sbb
mov
jbe
daa
jae
mov
cmp
lods
lods
dec
jne
gs
sbb
in
inc
or
cwtl
pusha
fdivl
outsl
jle
ret
repnz
adc
adc
test
shrl
in
cltd
sahf
in
or
cwtl
pop
inc
jmp
and
sub
jecxz
orb
cmp
or
xchg
mov
popf
fisubs
xchg
cli
adc
push
jmp
mov
add
xchg
adcb
das
in
pop
lods
in
pop
and
jnp
in
cmpsb
pop
andl
cmp
mov
pop
mov
mov
lea
das
jbe
jg
or
mov
scas
mov
cmpsl
mov
imul
sub
push
je
cmp
push
mov
leave
ret
mov
cmpb
mov
and
mov
pop
xchg
inc
pushl
pop
fwait
inc
cltd
in
mov
out
lock
ljmp
mov
imul
jb
mov
fadd
cmp
test
mov
jne
jb
inc
or
pcmpeqd
divl
scas
test
stos
loope
fistpll
xor
pop
aaa
add
aaa
sub
xchg
adc
movsl
in
clc
pop
lahf
scas
insl
add
dec
fimull
daa
dec
lock
dec
loope
fimull
aad
lock
mov
jne
icebp
ja
int
fimull
mov
cmp
in
pop
fidivl
stos
pop
xchg
mov
lock
xor
push
stos
addr16
jg
dec
mov
adc
fiaddl
fdivrl
out
mov
and
and
icebp
iret
and
pop
mov
int
test
out
add
lods
push
xor
shrl
adc
sbb
cmp
rolb
imul
push
fnstenv
mov
mov
lcall
or
psubq
xor
outsb
fisubl
jno
in
inc
popf
lods
dec
dec
and
mov
repnz
adc
repnz
and
cmpsl
dec
sub
xor
pop
fstpl
cs
out
popf
jle
pminsw
gs
hlt
jmp
mov
int
std
sub
inc
aas
add
fwait
inc
mov
mov
and
cmpsl
xchg
mov
cmp
adc
xor
adc
shlb
mov
sbb
mov
sbb
lea
push
ja
jle
xchg
xchg
push
loopne
xchg
hlt
pop
mov
sbb
dec
inc
sbb
ja
and
mov
xor
dec
insl
push
test
pop
fdivl
popa
jecxz
push
out
mov
cli
dec
mov
pop
add
cmp
cltd
movsl
bnd
mov
push
scas
imul
jnp
cmp
or
push
movsb
pop
inc
pop
loopne
xchg
ja
sub
cmp
pop
or
and
xor
adc
xor
dec
push
push
iret
mov
ficoml
arpl
push
sahf
sbb
mov
aad
or
push
cmc
pop
in
cli
jnp
sub
add
mov
mulb
xchg
test
aas
imul
pop
cmc
iret
pop
idivl
lret
loop
mov
test
jp
subl
cmc
out
aas
shlb
inc
or
lock
ljmp
scas
test
jl,pn
cmp
nop
and
jae
jecxz
andb
mov
and
movsl
pop
pop
loope
sbb
inc
sub
data16
lds
les
xor
out
popa
scas
inc
xchg
outsl
sti
push
test
cmp
sbb
pop
inc
xlat
scas
mov
add
fwait
nop
cltd
xor
sub
mov
movsb
push
out
cmp
adc
jg
cld
mov
sbb
jmp
jns
mov
mov
scas
or
mov
and
movsl
xor
mov
jp
shll
enter
jae
mov
cmc
or
xchg
jne
incb
imul
lahf
lods
outsb
mov
imul
fmul
data16
repz
mov
stos
outsb
movsl
ret
in
mov
xchg
xchg
fidivrl
stos
jecxz
jle
divl
rorb
mov
mov
push
mov
and
adc
mov
xchg
pushf
adc
ret
test
sbb
sub
divb
out
add
not
fwait
xor
push
and
mov
outsl
xchg
push
test
sub
jmp
int3
rclb
add
or
aad
or
xlat
mov
mov
out
lea
sahf
cmp
ffree
sbb
nop
mov
fstpt
cmpsb
out
int
mov
push
mov
xchg
and
in
divl
pop
ret
fidivl
lret
dec
mov
fsubrs
push
testl
sbb
sbb
push
dec
addb
adcb
lcall
mov
jno
and
rcrb
xor
hlt
mov
loop
mov
js
mov
scas
cmpsl
movsb
xlat
add
jmp
xor
fistl
mov
testl
pop
push
pop
cs
sub
lock
xchg
pop
xorb
sti
pop
xchg
data16
cmp
scas
mov
xlat
fstps
dec
or
push
out
subb
stc
add
sbb
dec
and
mull
dec
and
imull
cs
aaa
jle
push
lea
mov
leave
negl
push
fdivl
test
test
call
mov
sbb
rcl
sbb
jo
std
add
jp
roll
push
xor
lea
add
mov
jge
jns
sbb
lock
negl
dec
inc
test
call
xchg
cmpsb
pop
xchg
mov
lret
divl
jp
out
clc
xchg
adc
es
testl
divl
aam
fcomp
pop
test
mov
stos
insl
shl
movsl
push
mov
xor
xor
pop
cmc
inc
stos
mov
divl
lcall
neg
pop
cmp
and
mov
xchg
lods
sbb
or
or
push
fsts
lret
fcomip
rorb
xor
mov
call
mov
xchg
stos
pop
cmp
inc
mov
and
lcall
pop
push
mov
or
cltd
stos
xchg
psubsw
shll
push
popf
mov
je
pop
xor
mov
jmp
sbb
and
mov
jge
xchg
mov
inc
aaa
xor
outsb
fstpt
pop
add
sbb
lret
gs
sub
ficoml
test
xchg
cmp
cmc
jle
add
xchg
out
push
jp
cmp
aam
or
shl
imul
inc
stos
adcl
out
ret
pop
dec
pop
daa
aas
testl
push
jnp
mull
fwait
xchg
mov
in
lcall
mov
xor
mov
gs
lahf
idivl
xchg
jl
idivl
sub
je
push
rcll
andl
in
cld
xchg
std
lcall
imull
in
adc
xchg
inc
lret
dec
xchg
js
push
scas
notl
pop
and
idivl
in
dec
jo
push
divl
gs
jg
test
out
ficomps
iret
idivl
lcall
pop
out
test
pop
je
push
repz
out
and
pop
xor
add
mov
addr16
push
clc
mov
xlat
stos
sbb
out
movsl
and
notl
std
xchg
cld
add
in
pop
dec
loope
mov
push
pop
mov
in
jnp
imul
add
mov
pop
adc
dec
rcll
push
pop
not
out
imul
divl
ss
lock
mov
sti
in
test
setg
mov
pop
cmpb
movsb
jbe
in
xor
xchg
fwait
imul
pop
xlat
imull
ss
xor
mov
sbb
jg
testb
dec
and
mov
or
ficoms
testl
push
lods
xchg
pop
xor
pop
loope
ljmp
divl
in
jo
divl
jp
xor
or
cmpl
int
insb
idivl
jecxz
pop
mov
jmp
mov
divl
idivl
inc
sbb
les
ds
add
or
movl
fistpll
not
out
test
popf
decl
insl
sbb
cmp
mov
xor
negl
mov
divl
xor
adc
insl
inc
out
loope
aas
mov
fcoml
or
mull
insb
xlat
ljmp
pop
inc
test
lret
sbb
pop
jns
test
loopne
sub
sbb
test
shr
add
ljmp
cmp
xor
insl
push
insb
fisubs
push
stc
xlat
popa
cmp
xchg
mull
lret
fists
sbb
xor
scas
jmp
mov
testl
adc
pop
negl
push
sbbl
ss
dec
jno
xor
pop
std
negl
in
mov
dec
inc
xor
fildll
popf
or
cmp
imul
mov
fucom
pop
shlb
testl
in
adc
lds
sti
rorl
imul
adc
pop
insl
fisubrl
adc
shrb
cwtl
sbb
xchg
push
or
popa
scas
push
sub
aad
loope
out
inc
testl
inc
iret
cld
dec
test
sbb
and
ret
mov
xor
shr
fidivs
bound
lcall
sti
jle
mov
popa
and
clc
idivl
in
inc
call
negl
rcrb
pop
xchg
jnp
movsl
jmp
in
lea
mull
dec
insl
mov
mov
inc
rcrb
push
inc
imull
and
pop
test
pop
xor
mov
incl
ret
loopne
fstl
add
mov
hlt
mov
mov
cmc
jno
imul
pop
inc
pop
jmp
fistl
pop
testl
mov
jns
pop
call
out
sub
mul
aas
mov
xchg
movsl
sub
repz
lcall
dec
mov
negl
negl
mov
mov
mov
mov
or
testl
sub
xor
inc
scas
idivl
call
dec
or
inc
or
jnp
dec
mov
notl
out
shl
lret
mov
jo
mov
mov
mov
ficoml
decb
fnstenv
pop
jge
imull
leave
mov
mov
jg
inc
lods
lock
ja
adc
add
add
cmovne
test
out
add
negl
adc
in
xchg
divl
add
pop
xchg
pop
dec
xchg
dec
dec
sbb
inc
jnp
cmovl
and
gs
notl
mov
das
xlat
mov
push
push
orl
xlat
mov
outsl
push
fsubp
cs
sbb
xchg
mul
pop
dec
jecxz
dec
xor
negl
dec
sysexit
out
nop
loop
pop
lods
sub
adc
mov
dec
xchg
inc
mov
dec
notl
pushf
adc
out
test
in
mov
xlat
pushf
inc
rcr
in
add
pop
push
mov
notl
scas
or
shlb
inc
jno
jmp
loope
fsub
ficoms
push
and
sub
xor
dec
fildll
ljmp
out
cmp
cmc
dec
adc
or
xchg
or
es
inc
sbb
imull
outsl
mov
rcll
imull
sbb
cmc
sub
lock
stc
int
loope
imull
adc
lock
cmp
mov
sbb
idiv
mull
mov
ss
sbb
js
icebp
mov
stos
xor
mov
divl
addl
dec
insb
mov
cs
xor
push
push
sub
sub
jno
mov
insb
pop
xchg
out
push
xchg
rcr
out
and
adc
aam
pusha
xlat
and
enter
push
pop
cmp
ret
negl
and
loope
adc
scas
pop
inc
lods
mov
cmp
movsb
push
pop
js
adc
fdivl
mov
loop
xor
ret
cmpsb
daa
xchg
cmp
andl
nop
nop
pop
jo
xchg
js
pusha
out
insl
jbe
dec
sarb
dec
adc
or
fwait
pop
jmp
loopne
xlat
mov
push
mov
ret
imull
rcrb
sub
rol
xchg
movsb
push
pop
fcomp
testl
js
clc
mov
loop
negl
lahf
adc
hlt
add
sbb
popa
repz
mov
jb
sti
and
add
aaa
inc
add
xor
cs
sub
cmpsl
fildl
push
jbe
cmpsb
sub
outsb
fcoms
xchg
sub
sahf
es
inc
mov
testl
pop
popa
mov
insb
shlb
xlat
or
popf
cs
mull
cmp
mov
gs
stc
jb
daa
pushf
test
stos
mov
xchg
dec
out
mov
repz
ret
push
pop
and
mov
add
aad
lods
mov
jb
shlb
out
sahf
cmpsl
or
movsb
inc
push
data16
imulb
stos
push
inc
and
stos
or
mov
imul
add
mov
out
mov
jmp
pop
or
mov
xchg
and
pop
les
mov
add
push
std
orb
out
mull
cmp
push
inc
sbb
addb
mov
mov
mov
negl
mov
jne
jmp
push
add
loop
mov
ficoms
dec
pop
inc
mov
bound
lock
dec
popf
add
cmp
lock
jne
adc
jb
add
ja
jns
dec
adc
jle
push
dec
xor
outsb
out
jne
leave
inc
xchg
xchg
adc
outsb
ljmp
dec
test
pop
push
ficoml
push
ret
into
cmp
inc
scas
movaps
mull
sub
adc
mov
repnz
xor
dec
pushf
cwtl
or
fisttps
insl
mov
adc
iret
pushl
stc
mov
add
inc
mov
in
ss
stos
shlb
push
adc
push
in
jbe
cs
cmp
jmp
sbb
sub
inc
sub
imul
aam
add
fimull
xor
and
push
add
push
add
or
jl
jge
ficoml
out
loop
xchg
dec
jno
fs
sti
ljmp
icebp
add
loopne
xchg
mov
out
addr16
pop
or
pusha
leave
inc
imul
xchg
rclb
cmp
movsb
mov
xchg
cld
mov
ljmp
mov
repnz
or
pop
test
jge
mov
mov
and
lods
roll
xor
fbld
repz
out
push
out
pusha
cltd
outsl
outsb
mov
add
adc
add
sbb
repnz
loope
mov
ffree
mov
lods
notb
shlb
xor
lods
cmc
int
pushl
and
inc
cmp
out
fidivl
mov
jp
dec
cli
mov
inc
mov
adc
bound
test
loopne
xchg
jo
sub
ffreep
mov
dec
push
test
loopne
fstl
pop
sbb
jb
xchg
mov
ror
je
es
nop
dec
mov
insb
sub
insl
xorb
mov
stos
xchg
xor
subl
inc
movb
pop
or
fsts
cmpsl
push
and
jle
loopne
lahf
neg
ret
or
pusha
in
jb
std
inc
jbe
jp
pop
or
notl
inc
pop
mov
das
fadd
lcall
ficoml
ds
cmp
sbb
js
loop
ljmp
xor
push
inc
clc
subps
js
xchg
stc
and
pop
jns
pop
mov
jle
jae
mov
dec
pop
cmp
aas
dec
jbe
clc
in
add
mov
std
pop
sub
xorl
cli
mov
popa
out
cmpsl
add
push
adc
outsb
push
ja
je
in
repz
outsl
mov
or
insl
scas
fnsave
int
or
sub
jg
cmp
sbb
push
ja
mov
popf
jecxz
xchg
fs
cmpsl
inc
or
les
mov
fmull
popf
lods
jge
stc
das
cwtl
repz
add
jae
out
adc
mov
add
nop
fninit
call
mov
pushf
mov
pop
mov
cld
ret
inc
inc
lahf
xchg
xchg
xlat
mov
pushf
repz
mov
dec
mov
ljmp
inc
cmc
mov
xchg
nop
mov
jmp
test
add
push
js
inc
rcr
xchg
insl
ret
sahf
inc
in
cmp
cld
cmc
fs
lods
xchg
lahf
inc
xchg
in
mov
fdiv
pusha
ret
inc
gs
pop
jg
ret
int3
push
dec
and
mov
cmove
sti
ret
shll
js
stc
sbb
jl
dec
dec
lcall
lock
inc
sbb
movsb
add
movsb
out
mov
adc
ficoms
mov
mov
roll
loope
pop
sti
out
jle
negb
push
xchg
inc
dec
out
sub
add
xchg
and
inc
out
daa
inc
cld
shll
mov
push
cltd
jb
xor
addr16
inc
mov
sub
inc
jno
xor
jns
xorl
cld
subl
or
adcb
jbe
ja
adc
fs
sbb
adc
sbb
mov
in
xor
or
outsb
into
nop
xchg
adc
in
in
aas
bound
pop
ja
add
imul
orl
mov
cmp
mov
rorb
inc
loopne
lret
insl
mov
inc
jne
jbe
lods
sbb
push
lcall
pop
jne
mov
mov
ret
cs
stos
jmp
addl
insl
cwtl
sbb
mov
ljmp
out
in
pop
mov
imul
imul
mov
push
sbb
xor
mov
mov
test
mov
decb
push
mov
push
popf
xchg
cmp
clc
cld
repnz
pop
jb
xor
mov
jg
push
cld
push
jnp
sbbb
jmp
mov
fisttpll
add
out
jbe
and
mov
mov
sbb
stc
dec
faddp
sbb
and
dec
cmp
cmp
in
mov
mov
add
mov
xor
pop
ss
stos
and
enter
xchg
movsb
dec
pop
mov
jno
jge
outsl
repnz
lods
inc
jmp
cmc
cltd
or
jae
add
add
lds
add
ja
pop
xchg
cmp
test
out
mov
fimull
out
cmc
jbe
loopne
shlb
sbb
adc
mov
dec
ss
mov
out
stc
lods
xchg
stc
sub
or
fisubl
out
and
icebp
jnp
jne
or
dec
jge
cmc
mov
pop
xchg
mov
aas
dec
sub
xchg
xchg
and
mov
jbe
mov
sub
repz
ljmp
mov
stos
mov
adc
inc
pop
div
mov
add
faddl
add
ja
xchg
scas
cmc
or
hlt
adc
sbb
rorl
mov
pop
xor
cmpsl
aaa
out
sar
stos
je
shlb
insb
lahf
jmp
inc
das
cmp
push
jge
dec
daa
mov
and
sahf
sub
mov
test
aaa
lret
jbe
out
sub
insb
sti
and
cs
into
adc
lock
subb
scas
jno
pop
cwtl
xlat
fs
shll
inc
nop
insb
sahf
call
aas
pop
add
aam
sbb
dec
xchg
sbb
iret
into
test
in
insl
or
movsl
test
xchg
inc
rcr
pop
inc
aad
jno
mov
mov
adc
pop
cmc
fimull
or
test
negb
les
js
cmc
jl
jmp
mov
and
outsb
sbb
jmp
push
xchg
mov
inc
arpl
inc
push
pop
loop
jmp
shr
ret
lods
repz
and
push
inc
adc
jmp
xchg
mov
es
sub
xchg
and
jp
pop
pop
cld
mov
jnp
jae
pop
mov
gs
imul
in
xor
and
shl
xchg
mov
arpl
cs
mov
mov
jnp
mov
test
xchg
cmp
jbe
add
loopne
xorl
mov
ffreep
lcall
mov
aas
iret
jnp
orl
testl
xchg
sub
push
ret
orl
leave
flds
or
loop
imull
adc
pop
mull
add
mov
imul
add
cltd
push
scas
cwtl
hlt
imull
gs
sub
pop
sti
add
adc
inc
imull
std
cmp
addl
jmp
loop
lcall
xchg
lock
bound
not
mov
xchg
xlat
enter
sbb
dec
mov
fistpll
sbb
pop
push
dec
or
xchg
mul
repnz
das
testl
or
shlb
add
movsl
repnz
jge
add
mov
pop
jecxz
sbb
inc
cmp
aam
cs
mov
shl
mov
add
lock
pop
push
mov
adc
pop
testb
repnz
push
notl
pushf
pop
arpl
pop
inc
mov
inc
je
addr16
push
imul
aas
and
inc
dec
mov
fists
not
jae
mov
testl
adc
xlat
mov
jecxz
pop
or
idivl
mov
scas
mul
mov
repnz
mull
nop
sbb
testl
xor
loop
jbe
xor
inc
pop
sbbb
cs
pop
sbb
inc
sub
dec
test
cmp
test
stos
divl
cmpsb
add
pop
ja
sub
xchg
xor
lcall
jbe
popf
in
gs
test
mov
js
fs
pop
lcall
mov
pop
insb
enter
imul
cmpl
shlb
cmp
inc
ja
lahf
negl
dec
out
inc
notl
cmp
and
cmp
negl
cmp
loop
mov
ds
rclb
pop
in
test
inc
xor
adc
iret
mov
ja
and
test
test
negl
popa
les
mull
out
rcr
cmc
inc
adc
ret
xor
movsb
sarl
and
cwtl
testl
das
negl
mov
lods
imull
xor
sbb
notl
fstpl
aaa
rol
jnp
es
jb
mov
sbb
imull
sbb
nop
shlb
sub
pop
in
sub
push
push
fisubrs
push
neg
sub
mov
test
ja
daa
pop
mov
test
adc
inc
mov
nop
fistpll
jmp
mov
or
and
cltd
mov
and
add
dec
xchg
inc
push
xchg
cmp
aad
cmp
pop
mov
dec
into
data16
out
adc
out
push
cli
inc
push
jmp
jne
mov
fiaddl
mov
jl
pop
inc
xchg
xchg
loope
pop
and
int3
inc
or
jl
push
fdiv
sti
dec
pop
repnz
divl
aad
pusha
repz
dec
out
xchg
jl
cmp
test
stos
imull
in
jp
jg
pop
pusha
pop
shrb
repz
mov
in
jg
dec
cltd
push
notl
data16
xchg
jge
xlat
arpl
cmp
xchg
sub
test
stc
mov
aas
sbb
imull
call
idivb
lcall
xor
rol
jmp
xchg
and
adc
idivl
daa
pop
mov
cmc
cmp
stos
and
imul
sub
xor
cmp
sub
mov
adc
lahf
adc
out
cs
test
loope
add
or
xor
cmp
stos
or
and
push
xchg
mov
out
push
mov
and
dec
fs
idivl
inc
mov
xor
cmp
ljmp
fisubrl
inc
subb
xchg
pop
scas
arpl
mov
or
aas
imull
ljmp
jle
adc
fildll
sbb
or
jns
negl
fcoml
mull
cwtl
dec
mov
test
test
negl
dec
flds
mov
js
mov
dec
mov
outsb
shrl
jns
cmpsl
popf
jo
mov
mov
fldcw
bound
lea
clc
jle
xlat
test
cld
push
imul
xchg
push
neg
ret
mov
lcall
push
cmp
mull
jl
adc
mov
idivl
mov
jno
push
xor
mov
sti
sbb
idivl
and
popf
sbbb
test
outsb
cmp
or
mul
mov
push
call
in
mov
loop
push
pop
cmp
fisttpl
int3
rol
pop
add
cmpsb
sub
test
pop
inc
mull
mov
jge
and
xchg
pop
insb
mov
andl
push
cmp
jbe
hlt
xor
push
repnz
sub
inc
pop
jmp
hlt
push
add
aad
xchg
pop
sbb
jne
jg
enter
lcall
idivl
dec
popf
cmp
or
cwtl
sub
sbbl
xchg
add
inc
mov
fxch
mov
mov
rorb
imull
jecxz
add
sbb
stc
sub
jnp
nop
xchg
and
mov
pop
cwtl
dec
mov
add
int3
out
jmp
mov
and
lea
ret
sub
sub
jg
push
jbe
rcr
out
jne
sbb
cltd
les
stos
notl
xchg
mov
dec
cmpsl
in
jl
mov
js
adc
mov
pop
shlb
leave
fistps
xchg
xlat
mov
scas
xchg
cmpl
enter
not
pop
push
mov
sahf
sbb
xchg
adcb
jo
dec
out
iret
out
je
lods
xchg
push
sti
sbb
sbb
and
push
inc
fincstp
xorb
xlat
pop
filds
pop
fsts
inc
jb
mov
testl
sahf
jge
in
or
sub
dec
rcl
divl
scas
mov
push
xchg
imul
loop
dec
pop
testl
cmpsb
sub
out
sub
sub
idivl
vpor
xor
xchg
mov
lret
fwait
cwtl
mov
fnsave
xlat
cltd
lock
les
and
lcall
mov
subl
divl
push
fiaddl
inc
cmp
mov
aas
test
cmp
negl
sub
div
jmp
push
aam
push
sub
sub
adc
je
test
adc
negl
arpl
lcall
sarl
insl
scas
lock
mov
mov
mov
dec
cmp
pop
cld
repz
ret
pop
and
sub
stos
ret
mov
mov
daa
jmp
cmpsl
xchg
or
out
jle
inc
jno
cmp
lds
lahf
repnz
add
pop
pop
neg
imul
test
xor
scas
fsts
in
fcmovu
adc
add
add
xor
jne
mull
vcvtsi2sdl
cltd
jo
push
xchg
je
cmpsl
fldt
pop
pop
cmpl
jp
neg
mov
add
mov
sti
hlt
lods
cs
jae
clc
mov
sti
imul
mov
pop
pop
adc
add
out
push
push
sahf
out
fsubr
mull
test
adc
ljmp
jno
sbb
ret
out
inc
arpl
shl
push
loopne
testl
sub
scas
fs
mov
sub
cmp
fwait
rol
imulb
iret
pop
test
js
enter
xchg
fcmovnu
mov
out
cli
cmpsb
jae
xor
jnp
sbb
sub
push
push
fdiv
enter
loopne
xchg
push
pop
es
jmp
cld
subl
fildl
movb
aas
xchg
xor
testl
and
xor
std
xchg
call
sarl
add
jns
not
sbb
out
mull
xchg
repz
dec
inc
pop
jno
sub
test
or
push
xchg
or
pop
std
mov
out
roll
fwait
add
push
testl
cmp
inc
ss
insl
sub
pop
fdiv
scas
cmc
push
fcomp
xor
int3
adc
mov
test
pop
je
repnz
fdivrl
adc
inc
mov
bound
adcb
popa
adc
cwtl
sti
divl
roll
pop
mov
sbb
push
fnsave
call
lret
xor
shl
shll
stos
arpl
adc
pop
fsubl
lcall
or
notb
popf
xor
insl
out
jl
sbb
mov
testl
test
insl
mov
sbb
popa
inc
fistps
mov
and
cmp
sahf
jmp
movsl
aad
lock
mov
xchg
inc
ss
mov
mov
mov
jmp
fwait
aas
neg
out
push
push
sub
jb
jg
jnp
push
fnsave
push
enter
add
in
out
lcall
imull
mov
xchg
or
inc
out
movsb
add
pusha
out
mov
add
jge
mov
push
sbb
hlt
mov
divl
mov
mov
not
and
xchg
mov
dec
push
or
xchg
fistps
mov
int3
popf
mov
jmp
mov
out
es
fs
or
out
mov
or
shrb
fcomi
mov
insl
jno
pop
repz
divl
aad
stos
xor
insb
ljmp
cwtl
push
pop
xchg
or
xchg
fimull
ss
fnclex
add
inc
in
push
je
mov
ja
push
mov
mov
repnz
cmpsb
scas
pop
out
mul
ljmp
push
mov
dec
daa
or
and
pop
mov
xor
clc
xlat
xor
push
push
push
lock
and
or
cwtl
out
lret
pop
insl
idivl
inc
add
testl
shlb
fstps
notl
ja
daa
int3
jo
or
mov
fiaddl
and
mov
adc
std
lock
pop
xchg
adc
lds
icebp
add
xchg
jl
lods
jmp
pop
rclb
in
xor
cmp
fsubrs
nop
jecxz
test
rorl
jo
test
loop
pop
cli
repz
rol
div
sbb
cmp
negl
imul
xchg
je
vmwrite
in
dec
sbb
mov
subl
mov
orl
mov
push
pop
imull
mov
mull
sub
int3
lahf
rcll
xor
cmp
divl
inc
jnp
xchg
or
testl
pop
leave
push
lock
jg
mov
dec
hlt
sub
cmp
xchg
sub
pop
aam
sbb
jb
scas
testl
cld
push
jbe
fwait
inc
jnp
jmp
loope
sub
mull
or
or
das
mov
testl
rcrl
out
mov
ficoms
mov
adcl
pop
inc
out
jl
cmc
sub
sub
sbb
scas
push
daa
pop
sbb
inc
inc
jl
hlt
adc
or
mov
ficoms
xchg
mov
jae
fistpl
xlat
and
jl
push
loop
negl
fsubs
pop
jo
testl
in
outsb
or
ret
sub
dec
loopne
mov
and
loope
out
mov
push
dec
lret
out
pop
mov
roll
mov
cld
mov
int3
outsb
in
or
xlat
jl
out
aaa
sbb
fnstsw
nopl
inc
sahf
je
mov
loop
pop
mov
imul
inc
jl
or
jbe
pop
testl
repz
adc
sub
ljmp
in
out
insb
sub
sbb
pushf
push
mov
outsb
mov
fcoms
in
icebp
adc
arpl
je
inc
xlat
or
movsb
fdivrp
loop
xor
inc
pop
inc
ljmp
shll
lret
mov
testl
lock
repnz
dec
pop
bound
imul
idivl
pop
push
aas
add
testl
jb
lea
notw
pop
stos
adc
data16
sub
xchg
stc
mov
push
cltd
xlat
mov
mov
ja
xchg
pop
add
pushf
mov
scas
fildl
imull
inc
pop
enter
test
pop
in
dec
fadds
data16
xor
int3
out
iret
xchg
and
push
test
repnz
push
clc
push
stos
pop
ret
push
arpl
out
lcall
repz
imul
pop
or
push
push
sub
jp
movsl
in
jbe
adc
sub
mov
mov
frstor
ss
in
mov
inc
inc
sbb
testl
and
xchg
les
repz
xchg
xlat
add
fisubrl
lds
ss
stc
push
lcall
popa
mov
sub
ss
jle
push
insl
xchg
dec
inc
rol
dec
add
xchg
int
enter
dec
divl
fwait
popa
push
in
sbb
imull
push
outsb
and
jbe
jo
cld
xchg
push
push
xchg
sahf
xchg
in
lods
jno
negl
je
pushf
insb
sbb
sti
inc
imull
xchg
push
out
ret
or
jno
inc
lcall
daa
addr16
jecxz
les
jbe
shr
leave
testl
and
xlat
imul
fists
pop
scas
negl
pop
jl
leave
mov
popa
push
sbb
xlat
mov
scas
stos
loope
cld
jmp
lret
add
pop
lods
ljmp
add
sub
in
push
inc
sbb
lods
push
arpl
push
fwait
sbb
inc
jbe
repz
and
push
and
push
fistpl
push
in
ss
sub
fistps
pop
push
test
pop
adc
lods
cmp
scas
or
imul
inc
lret
js
mov
xlat
gs
sbb
inc
mov
xor
or
add
adc
negl
lds
out
idivl
cmp
cmpsl
mov
rcrb
mov
cmp
sbb
js
or
inc
push
cmc
xchg
xlat
adc
out
adc
push
fdiv
inc
sub
adc
imul
add
je
loop
jae
sub
testl
mov
push
mov
inc
lret
mov
jg
out
ret
std
xor
xorl
jns
or
pop
mov
lea
out
jo
imul
test
xchg
divl
lahf
sarl
imul
adc
pop
and
xor
scas
loop
vmaskmovdqu
leave
testl
push
xor
and
mov
testl
fistpl
mull
cmp
jo
cli
repnz
hlt
cmp
pop
int
clc
sub
mov
adc
mov
mov
inc
call
mov
fldcw
mov
roll
mov
aaa
mul
inc
out
pop
mov
lahf
pop
push
push
push
push
mov
cmp
push
inc
mov
pop
sbb
xchg
es
loopne
adc
nop
jnp
jge
imull
cmp
into
adcl
idiv
xchg
out
inc
pop
cmp
divl
sbb
scas
ss
shrb
aaa
mov
pop
mov
jmp
xor
test
jl
dec
ss
int3
insb
fsubr
neg
call
cmp
neg
scas
dec
inc
repnz
mov
ret
insb
rcr
fs
idivl
jbe
fidivrs
ret
lods
inc
mov
mull
adc
adc
add
xchg
out
jno
mov
jg
sbb
push
fildll
imull
inc
insb
pop
aas
xchg
ljmp
push
mov
lods
or
and
inc
jecxz
sbb
xchg
flds
mov
repnz
mov
xlat
xchg
jo
cmp
xor
das
testl
lea
test
fldcw
xor
push
imul
sbb
jle
clc
cli
negl
pop
xchg
cmp
push
fistpll
or
addr16
mov
mov
imull
repz
stos
negl
call
test
loope
div
xchg
jp
mov
jbe
outsb
fs
dec
fcomi
mov
shl
test
into
js
dec
cwtl
pushf
dec
ficoms
push
ret
cwtl
imul
or
jo
mov
in
mov
pop
sub
jb
aad
testl
outsl
cmp
pop
cld
adc
negb
cmp
fidivrl
xchg
hlt
mov
xchg
sbb
cmp
sub
mov
push
xchg
repnz
test
negl
fidivs
insb
sub
jmp
pop
notl
mov
sbb
mul
mov
add
testl
clc
into
divl
ret
mov
imull
mov
test
insb
sub
dec
popa
pop
xlat
or
push
jecxz
nop
xor
repnz
mov
sub
movsl
int3
daa
push
push
push
pop
ficoms
xor
aam
lret
inc
sbb
pcmpgtb
xchg
iret
insl
cltd
adc
push
fld
jne
mull
in
jp
imull
outsb
adc
inc
testl
xchg
negl
je
mov
repnz
push
in
pusha
push
idivl
push
adc
add
stc
notl
rolb
xchg
push
das
cs
sbb
lock
sub
lea
pusha
divl
je
cmpsb
jmp
test
xor
jmp
es
mov
xor
jecxz
outsb
xchg
nop
jl,pn
imull
and
ds
push
inc
mov
enter
push
push
xchg
xor
out
dec
push
imul
out
lret
mov
xlat
test
cmp
pop
jmp
lret
sti
or
testl
cltd
xchg
icebp
sbb
negl
inc
pop
test
inc
movsl
jp
repz
roll
mov
sub
cmpsl
sbb
jns
jecxz
fstpt
aas
dec
rolb
repnz
nop
movsl
test
add
icebp
mull
or
and
in
pop
xor
notl
mov
into
pop
sbb
and
pop
cmpsb
jbe
outsb
dec
jmp
div
xlat
out
xchg
leave
out
testl
jl
push
mov
add
loopne
pop
and
inc
or
inc
fcoms
imull
fldl
notl
shrl
cmp
out
pminub
test
sub
sbb
mov
or
fcmovnu
repnz
mov
push
adc
cmpl
cld
mov
call
add
notl
inc
lods
jno
pop
sar
push
cmp
jnp
jne
fcomi
jmp
mov
jle
xchg
cmp
fcmovne
push
cmp
and
pop
mull
sbbl
inc
and
ret
pop
cmp
or
xlat
pop
idivl
cwtl
mov
sbbl
nop
addr16
jb
shl
movsl
dec
daa
sub
fnstcw
icebp
stos
xchg
clc
orb
outsl
push
add
pop
add
xor
mov
add
pop
dec
push
xlat
sbb
fcoms
mov
sbb
clc
cmp
push
pop
xchg
sbb
notl
lret
adc
dec
hlt
js
fcomps
push
flds
jmp
test
xor
cmc
js
jnp
imull
data16
aad
mov
push
imul
popf
mov
sbb
in
mov
adc
int3
inc
lcall
dec
cld
call
sub
dec
in
push
fucomip
push
imul
mov
pop
or
inc
inc
inc
lret
insl
xchg
pop
push
movsl
mov
stos
les
testl
push
adc
xchg
mov
or
ja
inc
nop
jl
je
and
out
sub
or
xchg
cmp
ret
cmpl
repz
test
adc
idivl
fcomps
sbb
or
aam
xchg
dec
mov
dec
xchg
pop
jns
mov
out
or
push
addb
popl
adc
sub
fildll
jne
addr16
loopne
in
sub
negl
xlat
cmp
mov
xor
js
xor
lock
test
test
aas
mull
enter
adc
roll
and
push
xlat
int
and
sbb
je
fsubr
negl
xchg
mov
idivl
lcall
dec
je
dec
sub
not
into
jae
pop
or
pop
push
xor
mov
pop
cmp
and
in
mov
xlat
lret
clc
xchg
fistps
out
pop
cmp
lea
sbb
inc
mov
not
out
fnstenv
lahf
mov
std
loop
shr
insb
xchg
insl
xchg
aam
pop
lcall
neg
jno
cmp
push
pop
mov
fwait
sub
mov
xchg
fbld
out
xchg
div
cmpsb
mov
xchg
xchg
pushf
mov
xchg
test
push
popa
jnp
jg
or
push
cmp
loop
push
stos
push
pop
lods
adc
push
sarl
xchg
in
mov
and
out
inc
adc
in
cli
js
ljmp
lret
imulb
fcmove
pop
stos
cmp
out
lcall
clc
xchg
inc
mov
outsl
sahf
jns
mov
xchg
arpl
popf
cmpsb
push
jbe
jnp
jecxz
mov
frstor
insl
xchg
mov
movsb
sub
xor
xor
aaa
jbe
fimull
test
fldt
or
repnz
outsl
lret
dec
xchg
jo
push
sub
mov
notb
insl
test
div
inc
ja
xchg
inc
and
push
mov
shlb
mov
insl
adc
in
push
cmpsb
mov
push
and
ficoml
test
loopne
add
xchg
lds
mov
xchg
dec
int3
pop
repz
mov
jmp
outsl
mov
cld
add
mov
out
jbe
push
div
fs
icebp
cmp
or
out
cwtl
inc
cmp
lods
push
subl
imul
dec
mov
loope
pop
sbbl
cmp
jne
cs
bound
lods
mov
loopne
jne
ret
adc
sub
pcmpeqd
add
sbb
sbb
pop
adc
fs
iret
xchg
adc
cmp
ret
les
je
test
mov
je
adc
ljmp
cmc
in
insl
faddl
add
adc
mov
jmp
in
inc
mov
xor
xchg
xor
in
fidivrl
pop
out
mov
hlt
movsl
jg
jle
dec
jp
jne
pop
insb
and
dec
add
movsl
sbb
or
mov
arpl
ret
pushf
mov
cli
shlb
cmpb
pop
enter
aaa
fldcw
into
mov
ret
push
jmp
out
inc
cs
ficoml
lahf
jne
mov
or
lcall
scas
inc
add
mov
inc
add
xchg
sub
pop
fiadds
in
repz
leave
mov
fsub
push
dec
mov
insl
aas
outsb
cmp
ljmp
mov
jl
jno
mov
fcmovu
out
mov
dec
jle
lock
in
ja
push
dec
jbe
and
cmp
fcmovb
push
out
fisubrs
ljmp
ljmp
hlt
xchg
inc
mov
fdivp
and
aaa
out
or
scas
jmp
xor
sti
scas
arpl
cmp
cmp
mov
sub
jg
lods
mov
into
gs
sbb
shrb
mov
and
adc
ja
xchg
inc
add
mov
cltd
jp
cmpsl
pop
jns
and
ds
aad
stc
test
inc
jl
pop
jns
cltd
sti
push
jle
ficomps
add
sbb
sub
aas
jge
aas
out
clc
sub
adc
push
mov
pop
cmp
pop
adc
cs
mov
inc
daa
push
xor
popf
xchg
add
test
mov
jp
in
pushl
cmpsl
jbe
dec
mov
sbb
test
adc
or
sahf
notb
cmc
addr16
mov
mov
iret
adc
cmpsl
icebp
data16
mov
lcall
clc
test
xor
movsl
idivl
pusha
in
pop
pop
nop
mov
sub
inc
adc
dec
divl
orl
out
add
cltd
repz
js
cwtl
fiadds
inc
divl
jbe
out
xor
sarb
in
test
mov
inc
ret
push
lods
test
test
pop
test
imul
mov
dec
in
cltd
inc
testl
inc
pop
pop
sbbb
xchg
out
mov
mul
dec
cmp
mull
mov
mov
jp
ds
dec
xor
mul
fcompl
in
sub
testl
jnp
mov
mov
pop
mov
pusha
pushf
ret
negl
lret
dec
and
lock
cmp
jbe
sti
in
sub
mov
fsubrp
dec
addb
scas
out
push
negl
pushf
mov
sbb
or
pop
out
sbb
testw
pop
idivl
out
sbb
divl
pop
lea
xor
jmp
imul
test
outsl
sbb
mov
ror
pmuludq
cmp
iret
into
out
inc
addr16
push
loope
mov
stos
sub
dec
loopne
pop
or
xchg
adc
out
stos
mov
jecxz
push
jae,pn
xor
jns
cmp
or
sar
fucom
movsl
cmpb
push
sub
je
pop
add
mov
mov
xlat
ret
jae
xchg
push
cmp
nop
iret
inc
sub
andl
popa
loope
xor
cmp
add
test
mov
lcall
push
daa
push
or
xor
jl
mov
push
adc
push
iret
ss
jg
inc
divl
push
lea
testl
sub
pop
sti
es
loopne
iret
clc
divl
jne
mov
pop
in
ret
lcall
fucom
fsub
pop
sub
cmpsl
testl
daa
pop
mull
mov
sbb
testl
cmp
inc
fimull
out
in
push
cs
fwait
pop
and
idivl
ds
mov
lock
mov
rcrl
bound
fcomi
outsb
lcall
cmp
xor
faddl
mov
repnz
cmp
int
dec
repnz
ret
out
xorl
or
dec
div
aad
or
xor
cmpsb
sbb
neg
jne
and
add
and
push
popf
mov
mov
in
jmp
push
jb
inc
notl
std
jle
push
mov
mov
iret
mov
dec
idivl
xor
testb
sbb
mov
and
scas
lock
add
clc
xchg
xlat
push
lds
daa
movsb
xchg
jne
pop
mov
in
cmp
pop
outsb
mov
inc
and
out
in
sub
das
out
mov
mull
inc
xchg
movsl
mov
adc
out
dec
mov
inc
negl
and
inc
imull
adc
mov
lods
mov
in
xchg
inc
in
xchg
adc
loop
jl
fwait
testl
adc
cld
jmp
fs
pop
sub
test
dec
inc
loopne
xor
idivl
test
fstps
pop
out
scas
stos
xor
adc
and
pop
dec
daa
jmp
shrl
in
out
xchg
out
dec
ljmp
lret
imul
xor
mov
xchg
cmpsl
out
aad
stos
mov
out
insb
and
and
rclb
dec
shlb
add
lods
jnp
icebp
xor
pop
or
je
fbld
xor
ss
sub
out
nop
jbe
int3
dec
divl
mov
roll
sub
fcomi
icebp
push
rclb
test
add
mov
cmp
insb
out
std
lods
out
testl
roll
arpl
adc
adc
adc
mov
mov
test
cmp
loop
xor
cltd
dec
jge
xor
push
inc
sub
out
add
dec
mov
jae
jg
mov
fcoms
sub
pop
lahf
jle
in
mov
scas
pop
mov
div
cmp
testl
dec
test
mov
dec
sub
push
mull
jmp
jcxz
iret
adc
jle
pop
mov
adc
push
mov
testb
mull
mov
mov
cmp
adc
out
fsubrs
cmp
test
loop
sub
adc
out
or
dec
cwtl
roll
sub
pop
push
jmp
fimull
iret
sub
add
xor
das
idivl
mov
inc
add
or
xor
pop
jge
dec
add
mov
cltd
aam
neg
out
mov
jl
or
push
add
divl
xchg
xchg
clc
cmpl
adc
dec
popa
jns
adc
push
test
mov
cmpsl
imull
xchg
push
xor
push
stos
pop
sbb
in
add
adc
pop
sti
push
lahf
mov
mov
arpl
mov
testl
mov
or
aaa
neg
mov
mov
mov
or
notl
scas
out
loope
aaa
sbb
sub
ror
adcl
sbb
repz
mov
hlt
icebp
xchg
push
arpl
mov
test
stos
and
pop
mov
dec
stos
pop
cli
fs
cmp
xor
adc
mov
mov
push
out
inc
sbb
xchg
sbb
adc
or
pop
mov
pop
xor
fs
xchg
jnp
in
loop
xor
xchg
test
xchg
ja
daa
notl
xchg
das
xchg
add
loope
mov
outsb
inc
xchg
testl
iret
mov
xchg
mov
dec
sti
scas
push
xchg
pushf
mov
cli
inc
pop
add
fcmovnu
mov
scas
push
loopne
push
idivl
ficomps
ret
outsb
jns
div
sbb
out
std
faddl
cli
sbb
xchg
mov
adc
ljmp
mov
pusha
xor
push
imul
call
les
push
pop
test
jbe,pn
lret
pop
mull
pop
outsl
adc
xor
add
test
cmp
daa
xchg
pop
pop
add
out
cwtl
mov
xchg
sub
push
idivl
in
hlt
data16
icebp
inc
pop
xchg
mov
or
dec
fdivr
mov
dec
lock
cmp
add
and
test
jle
sub
mov
or
add
push
xor
idiv
jg
iret
int
scas
call
test
sbb
sbb
rorb
fldcw
pop
ud1
imul
xor
add
div
stc
out
aas
ret
daa
inc
xor
add
pop
loopne
sahf
in
pop
jno
in
mov
or
mov
push
insl
adc
mov
or
push
testl
rcr
neg
xor
das
mov
cmp
mov
out
divl
xor
xchg
not
popf
int3
xor
mov
leave
push
in
cltd
js
mov
mov
out
add
mov
inc
inc
fbld
sbb
or
xchg
in
imull
cltd
or
leave
jge
leave
icebp
xchg
mov
idiv
jl
cwtl
push
lret
negl
in
test
cli
movsb
mov
push
jnp
cmp
sbb
int
insb
pop
es
negl
daa
arpl
movsl
test
add
imul
mov
scas
jmp
mull
or
pop
cltd
sub
addl
neg
call
lea
arpl
rorl
jg
subl
adc
xchg
push
fcomps
divl
adc
imul
sub
in
movsb
mov
pop
mov
out
xor
pop
lahf
push
jne
repz
bnd
xor
add
dec
adc
frstor
mov
xchg
addr16
mov
shlb
inc
idivl
gs
lods
notl
mov
stos
divl
add
push
dec
xchg
jo
xlat
add
push
mov
ret
test
xchg
push
or
jecxz
ficoml
xorb
repnz
fistpl
adc
mov
cwtl
inc
mov
jge
scas
lock
sbb
inc
ret
pop
test
fildl
or
divl
daa
in
push
pushf
divl
test
imul
jle
loope
sub
test
lcall
add
shrl
dec
lods
divl
pop
outsl
in
scas
sub
cli
sti
mov
scas
idivl
add
jl
loopne
or
lret
cs
xchg
mov
negl
sbb
testl
imul
add
cmp
cwtl
jns
loop
dec
sub
aam
test
push
shl
cmpsl
sub
inc
add
enter
push
pop
dec
sahf
into
xchg
xor
lods
cmp
pop
push
loope
mov
push
adc
cwtl
adc
jns
add
js
shl
sbbl
movsl
jmp
push
xchg
bound
arpl
aas
adc
mov
fisubrl
cmpsb
mov
add
xlat
xlat
ss
mov
xchg
test
scas
or
testl
mov
jo
or
test
cmp
lods
mov
sbb
aas
xchg
std
mov
in
push
mov
xchg
xlat
xchg
stc
inc
in
sub
pop
push
and
dec
sub
out
movsl
call
ret
divl
orl
gs
push
adc
push
ljmp
dec
mov
adc
fstpl
clc
add
xor
pop
pop
std
jne
adc
xor
inc
negl
push
lahf
idivl
mov
dec
mov
mov
adc
sbb
ss
int
idivl
pop
or
jmp
imul
int3
or
and
dec
iret
cmc
scas
and
sub
xchg
xor
inc
out
or
sub
and
neg
jmp
push
neg
adc
jnp
add
cld
jp
sub
push
lret
sbb
push
push
sbb
dec
sbbb
sbb
test
dec
adc
push
inc
lods
sub
xchg
jmp
push
and
clc
test
xchg
jne
xor
fnsave
imul
jg
test
cltd
xchg
lods
jp
mov
scas
scas
loopne
pop
and
inc
fistps
rcrl
lret
dec
hlt
mov
fists
daa
imul
jmp
mov
data16
mov
in
sbb
pop
sbbl
enter
out
and
mov
sti
scas
sbb
push
js
mov
mov
out
arpl
inc
sub
movsl
outsl
adcb
nop
faddp
sub
and
add
xchg
push
sub
sbb
bound
mov
pop
les
pop
mov
pop
jecxz
xchg
in
jne
fprem1
stc
mov
test
or
lods
or
int3
pop
adc
mov
sub
test
sbb
or
in
push
movsb
fbld
stos
lahf
xchg
pop
xchg
cmp
mul
push
sub
xchg
fcompl
mov
mov
data16
shrl
jbe
daa
cmp
imul
xor
sub
fidivl
or
xchg
sbb
bound
imulb
and
ja
filds
and
repz
jmp
out
into
rcrl
cmp
insb
outsl
push
add
or
cwtl
leave
mov
inc
add
sub
mov
jg
fadds
shl
dec
stos
sbb
mov
jne
lcall
outsl
out
iret
ja
out
dec
out
cli
jp
iret
cmp
sbb
ret
jo
push
mov
movsb
jae
scas
add
mov
dec
in
inc
rep
push
ss
cmpsb
in
jne
xchg
pop
test
out
fucomi
out
push
es
adcb
rcll
icebp
outsl
inc
call
xchg
popl
mov
lea
fs
in
dec
or
jmp
jb
daa
loop
test
xchg
inc
neg
lret
or
xchg
cmp
dec
inc
cmpsl
out
xchg
push
cmpsl
in
in
sub
setge
mov
out
dec
push
and
repnz
in
mov
stc
iret
and
push
dec
loopne
xchg
mov
adc
or
xchg
movsl
js
adc
xchg
roll
stos
lds
aaa
cmp
push
jbe
xor
iret
jmp
xor
adc
dec
rcr
xchg
lcall
pop
iret
fisubl
popa
outsb
xor
data16
lock
push
sub
inc
fs
push
mov
push
hlt
mov
gs
clc
jge
idivb
cltd
test
lret
hlt
rorb
movsb
dec
repz
nop
jg
dec
scas
mov
mov
dec
pushf
rclb
jns
xlat
ljmp
mov
jbe
inc
in
inc
mov
cmp
out
roll
mov
ja
fcmovb
lcall
in
jmp
data16
mov
dec
vdivsd
or
arpl
shlb
ret
call
pop
in
mov
lcall
mov
sbbl
test
mov
pop
popf
push
loope
dec
and
and
in
aas
stos
dec
lods
repnz
add
adc
popa
out
movsb
fsqrt
push
test
shr
sahf
adc
dec
out
test
test
jnp
push
inc
inc
fdivrs
sbb
xor
cmp
es
aam
gs
mov
fwait
nop
push
ds
les
adc
sbb
daa
int
push
mov
stos
mov
mov
repnz
and
cmp
in
inc
mov
lret
stos
aad
xchg
data16
pop
xor
std
fldpi
imull
insb
test
rcrl
dec
scas
pop
mov
notl
bnd
rorb
mov
cmp
mov
in
xlat
inc
cmp
mov
insb
adcl
fcmovne
pushf
ret
fcmovu
push
push
push
test
sbb
repz
push
inc
sbb
leave
pop
pop
push
push
cs
shll
out
xchg
or
pop
icebp
xor
shrl
idivl
inc
or
je
stos
loope
notl
in
push
sbb
in
adc
negl
cwtl
out
and
shrl
stos
jecxz
rclb
mov
popa
xchg
loopne
notl
mov
pop
sahf
lods
popa
ror
out
fcompl
dec
fildl
jne
sbb
mov
movsb
adc
xchg
sbb
xchg
inc
in
sbb
negl
push
inc
pop
cmp
adc
fcomip
xor
xor
inc
sti
mov
or
mov
into
mov
mov
and
lahf
cmp
mov
push
adc
mov
sarb
add
aam
push
adc
pop
lcall
rclb
cmp
sub
jecxz
mov
in
jae
cmp
repz
mov
xor
incb
and
pop
adc
out
in
xchg
adc
jno
adc
aaa
pop
hlt
xorb
mov
in
aaa
aaa
mov
xchg
mov
shrl
xchg
pop
pop
les
jno
fistpll
dec
scas
fsubr
aas
ja
inc
sar
xchg
out
dec
push
imul
mov
mov
popa
push
push
jb
mov
fidivrl
push
stc
out
fidivl
std
or
test
push
fsubrs
xchg
cmp
insb
fiadds
iret
jge
pop
jo
jp
inc
dec
mov
pop
hlt
add
sbb
cmp
mov
stos
dec
mov
aad
xor
or
cmp
lea
int
mov
inc
push
pop
in
jmp
push
nop
repz
push
push
pushf
out
xchg
and
clc
ljmp
xorl
in
loop
fs
cmp
jmp
xchg
add
xlat
ljmp
stos
xlat
call
jmp
and
dec
idiv
add
mov
sbb
cmp
idiv
cmc
mov
mov
dec
sub
mov
testl
inc
push
outsb
loopne
sub
add
iret
js
xchg
xor
mov
push
dec
cmpsb
in
mov
mov
in
imul
movsl
push
push
neg
mov
sbb
lea
fwait
xor
dec
jb
shrb
cld
cmp
dec
negl
stc
xchg
mull
es
pop
rorb
sbb
fstps
movsb
mov
popa
adc
lret
rcrl
popf
testl
push
int
imull
es
or
ret
div
cld
sahf
mov
je
jne
jp
or
sub
idivl
xchg
repnz
pop
pop
gs
sub
or
in
mov
int3
inc
test
in
pop
xchg
fsub
xlat
dec
leave
mov
lcall
icebp
cmc
sbb
out
mul
fwait
adc
pushf
mov
xor
mov
push
out
dec
stos
repnz
pop
cwtl
mull
and
cmp
lret
sahf
sbb
or
xor
aam
scas
mov
test
push
negl
mov
inc
icebp
and
push
sbb
xor
add
mov
rclb
testl
in
dec
test
and
jnp
adc
adc
idivl
cwtl
jo
sbb
pop
hlt
add
fmuls
or
sub
int3
sbb
dec
notl
jns
ds
hlt
test
divl
add
div
mov
cmpsl
sub
divl
in
xchg
adc
sbb
cwtl
push
mov
dec
mov
jg
xlat
cmpsb
dec
addr16
jo
fcmovbe
js
nop
mov
aaa
xlat
lock
movsb
push
fisubrs
sbb
mov
movsl
vmread
into
or
xorb
aam
test
pop
pop
mov
mov
popf
fistps
xrelease
push
dec
vprotb
add
or
fs
push
mov
sti
imul
dec
aas
ljmp
mov
repz
jmp
xchg
sahf
add
idivl
add
jo
aas
mov
xchg
lret
sbb
call
mov
addl
loopne
popa
neg
and
add
push
sub
xor
cmp
ds
js
jle
add
pop
cs
insl
dec
xchg
cmp
push
jno
dec
rol
jmp
mov
andb
push
imul
movsl
lret
loopne
js
lock
mov
shll
xor
test
mov
mov
cli
lods
shl
imul
adc
popf
xchg
xor
hlt
sbb
mov
fbstp
push
test
jmp
cltd
inc
imull
xlat
sbb
imull
adc
negb
inc
mov
adcl
mov
mov
sbb
sub
ror
dec
jne
stos
and
mov
dec
nop
pop
ja
sbb
int
jmp
jecxz
mov
inc
divl
shl
push
mov
jne
xchg
loop
mov
cmc
out
call
mov
xor
test
sbb
jl
pop
sbb
jmp
sub
jo
xchg
arpl
sub
inc
insb
adc
fiadds
fs
pop
add
push
out
xchg
jmp
and
xlat
mov
inc
mov
hlt
cli
out
jo
loope
mov
enter
jl
dec
xor
adc
testl
mov
stos
call
and
mov
mov
divl
js
sbb
daa
cmp
mov
in
sti
jmp
xor
jle
fists
std
aaa
lock
adc
out
mov
sub
mov
and
jecxz
mov
push
mov
inc
mov
fucomip
loopne
sti
xchg
mov
inc
fistpl
push
repnz
lock
lahf
inc
xlat
sti
scas
aam
fcoms
xor
mov
idivl
cmp
popf
rcrb
filds
test
pop
jp
jecxz
lods
imull
cmp
and
out
int
cld
jle
cmp
sbbl
dec
cs
mov
divl
push
scas
pusha
inc
in
pop
xchg
imull
jge
xlat
icebp
xchg
testl
dec
jl
nop
xlat
and
dec
out
inc
scas
xchg
xchg
push
je
xchg
int
dec
add
and
imull
js
cltd
xor
adc
inc
xchg
jg
adc
add
mov
lds
std
xor
loop
insb
imull
fidivrl
cmp
jno
std
jb
jg
cli
sbb
int3
mov
inc
mov
dec
add
insb
cmp
xchg
add
pop
hlt
in
mov
pop
push
push
fistps
loopne
and
ljmp
mov
insb
inc
mov
or
xor
add
out
inc
sbb
rcrl
lock
cmp
into
repnz
jns
cmpsl
insl
fimull
push
ljmp
aaa
aaa
in
push
fs
push
xchg
jbe
add
sbb
pushf
dec
sbb
cmpsl
mov
movsl
xchg
pop
and
repz
sub
jne
push
mov
scas
loop
adc
xchg
adc
in
popf
sub
sub
cmpl
mov
cmpsl
fs
xchg
or
add
idiv
test
push
movsl
pop
in
xchg
cwtl
xor
jle
ja
xchg
ja
push
frstor
mov
inc
pop
js
mov
mov
mov
sbb
mov
sahf
sbb
push
add
int3
lret
test
iret
lock
orl
jne
cmp
mov
pusha
add
adc
dec
out
cmp
mov
in
fs
pop
xchg
cwtl
fisubs
and
xchg
cmp
outsl
idivb
aas
out
insl
ljmp
call
lock
pop
inc
sbb
data16
in
fistpll
mov
and
repz
cwtl
test
fimull
in
repz
imul
cmp
mov
jge
in
push
rcr
or
shrl
and
repz
xor
mov
mov
mov
add
test
or
jecxz
sbb
outsb
jmp
mov
ds
imul
movl
push
icebp
mov
outsb
xor
int
inc
push
loopne
js
xchg
pop
jbe
sbb
push
inc
out
fabs
mov
mov
ret
lahf
mov
cli
add
fs
mov
mov
mov
imul
sbb
into
les
mov
cwtl
mov
adc
sbb
inc
inc
aad
cmp
shl
xchg
test
push
xchg
xor
xchg
fcoms
and
fs
jb
or
cltd
lds
loope
das
jp
xchg
push
cmp
insl
js
dec
gs
mov
jae
je
cmpsl
mov
outsl
int
mov
into
ja
mov
pop
imul
xchg
adc
cmp
pop
mov
in
mov
push
ret
and
test
sbb
xchg
dec
jb
jecxz
jne
add
test
and
idiv
test
xchg
sbb
fcmovu
ret
add
ljmp
jmp
stos
stos
je
mov
cwtl
and
push
out
sub
mov
xchg
fists
or
cmc
outsb
fisubl
out
movsl
jmp
dec
push
sub
mov
sbb
ret
pusha
pop
in
es
mov
mov
movsl
jl
mov
fs
mov
push
hlt
int3
lds
mov
add
mov
mov
sub
push
push
fsubl
hlt
lahf
mov
test
mov
outsb
sbb
and
jae
sti
fcomps
xchg
movsl
sbb
out
or
xchg
mov
inc
out
ljmp
pop
ret
add
push
add
sbb
inc
and
pop
mov
loop
and
movntq
aaa
stos
adc
jno
inc
mov
xor
push
jne
pop
in
mov
hlt
in
rolb
in
jb
or
test
out
addr16
jae
mov
xlat
or
add
mov
loope
rolb
scas
arpl
sti
push
ss
fildl
or
out
cld
loopne
loop
xchg
jmp
inc
push
cmpsl
xchg
insl
out
in
xchg
clc
dec
jnp
sbb
addr16
jbe
sbb
shrb
out
mov
adc
sarl
test
ljmp
sti
aam
sbb
jns
xchg
repnz
xchg
xchg
dec
popf
add
xor
repz
out
rorl
stc
pop
aas
pop
lds
jno
and
jae
ds
fildll
cwtl
cmc
mov
wbinvd
xor
lods
xor
sahf
add
xacquire
sbb
lret
in
call
ficoml
in
adc
jno
fs
adc
loope
fidivrl
xchg
cmpsl
jne
iret
inc
xchg
or
mov
pop
cwtl
in
js
icebp
loope
in
lahf
jb
mov
ret
sub
test
mov
push
std
jmp
xor
sub
inc
fcoms
xchg
mov
subb
jo
movsl
push
dec
or
jle
mov
xlat
jne
and
fstpt
sbb
aaa
mov
inc
push
lcall
fisttpl
pop
xor
and
lods
pop
jns
xchg
sbb
adcb
cmp
scas
loope
cmp
jecxz
aaa
and
cmp
sbb
repnz
dec
movsb
jbe
sbbb
int3
or
loop
out
or
and
dec
hlt
repz
div
sbb
xlat
push
repnz
mov
inc
sahf
out
testb
ror
aad
add
out
fcmovu
popa
subb
mull
mov
cs
xchg
or
sub
popa
inc
popf
in
jns
or
or
push
mov
xchg
and
test
mov
out
lods
lock
mov
cmp
loopne
ljmp
mov
imul
sub
jnp
cld
loop
lods
outsb
pop
repnz
mov
pop
rolb
inc
in
bound
jb
xchg
pop
mov
loopne
shl
push
loop
ljmp
ret
fisubrl
and
push
out
dec
mov
add
mov
pop
out
cmp
mov
insb
jb
pop
movsb
jmp
fimuls
insb
fisubrl
mov
sbb
dec
test
pop
loopne
xor
push
adcb
sub
mov
mov
daa
leave
sbb
pop
mov
repnz
xor
dec
add
cltd
adc
adc
fs
xchg
xor
mov
xchg
lock
test
adc
bound
iret
push
dec
jp
pop
stc
fisttpl
sahf
out
sub
push
xlat
addr16
out
inc
fs
sub
fisubl
or
xchg
xlat
push
xchg
ret
mov
scas
popa
inc
inc
sub
into
mov
push
push
ss
inc
xorb
out
jmp
xchg
ja
ficoml
movsl
ds
jae
es
push
dec
das
divl
shrb
popa
xor
mov
jbe
fdivs
lret
mov
fs
out
popl
inc
insb
push
sub
pop
sbbb
dec
cmc
mov
cmp
inc
xchg
cmp
sub
insl
out
lods
cmp
mov
push
and
sub
sahf
sbb
add
scas
hlt
mov
lret
lods
sub
inc
mov
lea
mov
inc
in
xchg
call
mov
cmp
sbb
pop
adc
mov
jb
mov
add
pushf
mov
test
jmp
stc
pop
arpl
ds
mov
in
in
jmp
test
sbb
cltd
test
rclb
adc
shr
lock
dec
or
repz
fisttps
cltd
popf
xchg
jb
push
and
or
push
inc
out
in
insl
push
mul
dec
push
test
notl
pop
call
notl
outsl
or
mov
adc
xor
inc
negl
or
adc
fdivp
test
bound
cmp
pushf
das
adc
lods
mov
out
cmp
xchg
repz
stc
xor
xchg
out
mov
add
and
rclb
sbb
sub
mov
mov
out
sub
mov
xlat
sahf
xchg
dec
or
xor
repnz
xlat
push
xchg
cltd
sub
xor
aas
popa
push
sbb
sahf
testl
aam
aad
sbb
adc
sbb
ret
fistpl
out
dec
jbe
mov
das
rclb
shl
test
imul
jle
arpl
idivb
fistpll
cmc
lcall
mov
dec
sbb
adcl
push
js
fildll
sbb
jle
adc
jne
adc
out
pop
lods
test
xchg
inc
in
cmpsb
push
popf
in
mov
lret
mov
stos
nop
outsl
jno
push
pop
inc
mov
test
daa
cli
push
negl
cs
sub
or
sbb
notl
das
es
fidivl
out
inc
adc
int3
inc
lds
xor
stos
push
push
push
mov
and
test
pop
aaa
xchg
div
or
mov
cs
or
testl
adc
mov
mov
out
and
pop
mov
push
test
push
lcall
jb
mov
adc
and
sub
and
add
out
or
or
jo
clc
fwait
mov
sbb
push
stc
pusha
mov
jecxz
fs
outsb
mov
sarb
jg
cmp
mov
cmp
mov
sbb
jno
push
adc
xor
mov
in
popf
xchg
jb
imul
dec
cwtl
aaa
insb
std
add
inc
cs
int3
push
xchg
inc
sbb
and
out
xor
push
mov
cmp
nop
push
fiaddl
mov
out
outsl
ja
inc
xchg
ljmp
and
cs
inc
sub
les
xor
cs
pop
ret
xchg
es
xchg
sbb
jmp
repz
pop
lods
inc
lahf
iret
pop
dec
enter
pop
fisttps
add
push
gs
pop
or
or
add
pop
push
jbe
dec
sbb
or
pop
sbb
xchg
mov
loope
pop
sub
or
ds
popf
xchg
lock
nop
movsl
stc
rcll
bound
into
dec
sub
fsub
arpl
mov
jmp
into
cld
ss
dec
jecxz
rclb
mov
xlat
mov
inc
sub
xchg
insl
sub
iret
xor
pop
mov
adc
rorb
jo
or
pop
mov
xchg
fistpll
fcmove
and
pop
cwtl
and
lahf
sub
movsl
inc
das
adc
mov
adcl
jecxz
repnz
pop
out
mov
sub
or
adc
hlt
xchg
mov
jne
repz
and
neg
sahf
lods
fisubrl
cmp
push
mov
adc
inc
mov
jmp
jae
mulb
add
stc
repz
mov
out
enter
andb
and
dec
fildl
add
in
jb
sbb
insl
shl
js
jmp
stos
shl
push
add
inc
xor
aas
mov
imul
out
clc
loopne
je
push
adc
mov
mov
jmp
push
pop
lret
arpl
jbe
insl
ret
and
test
jo
fisubl
jmp
jp
mov
data16
sub
rcrb
or
xchg
jbe
pop
adc
pop
jb
ss
push
pop
loope
dec
mov
out
insb
jg
addr16
sbb
test
aaa
push
pop
out
inc
dec
fs
inc
aad
ja
push
mov
out
pop
cli
aam
in
rcrb
mov
aam
jne
mov
mov
mov
adc
and
adc
pop
jle
inc
imul
mov
xchg
xlat
or
xchg
pop
xchg
fiaddl
dec
loope
sub
add
lcall
mull
incl
xchg
fistps
sbb
jle
add
xor
mul
insl
in
or
push
pusha
adc
add
addb
add
imul
fld
fisubs
test
lret
dec
push
xchg
movsl
jge
xor
out
imul
nop
popa
mull
testl
xchg
cmp
mov
fiaddl
neg
inc
daa
mov
notl
sbbl
cmpsl
in
and
movsb
js
push
cmp
jo
test
xor
int3
js
sqrtps
jmp
mov
addl
loopne
mov
imull
push
enter
xchg
adc
mov
push
idivb
cmp
xlat
add
inc
fldcw
mul
filds
gs
pop
divl
cltd
bswap
and
inc
xchg
xor
ljmp
or
in
jecxz
sub
mov
mull
or
sbb
notl
nop
in
pop
cmpsl
lret
xor
jecxz
ja
and
ss
mov
xchg
mov
cmp
stc
call
mov
xchg
pop
negl
cmp
sbb
mov
push
pop
sbb
push
or
sub
mov
inc
jle
mov
dec
out
adcl
inc
lcall
mov
mov
dec
jle
out
aam
negl
push
or
insb
pop
xchg
pop
jbe
jns
mov
push
xchg
dec
test
fbld
testl
dec
test
daa
sbbl
outsb
test
cmp
mov
enter
ss
adc
sbb
bound
lea
in
repz
xor
xchg
lock
cmpsb
stos
loopne
enter
xchg
inc
out
in
not
cmp
in
mul
lock
mov
xchg
dec
mov
shll
idivl
pop
dec
pushf
loope
loopne
push
cmp
fadds
inc
imul
push
imul
add
mov
xor
je
lea
negl
in
into
les
scas
rclb
pop
addr16
mov
lods
jecxz
idiv
dec
test
xlat
mull
xchg
mov
clc
test
xchg
mov
test
fcoms
lret
out
enter
jecxz
or
aaa
test
mov
test
pop
rorl
xchg
icebp
fwait
into
test
or
fstps
pop
idivl
mov
daa
inc
mov
stos
cli
pop
add
inc
mov
push
ret
in
rcrl
pop
jp
popl
lock
fstl
ja
fistpll
ja
push
ljmp
out
adc
loopne
negl
imul
les
insl
ja
fbstp
jecxz
filds
mov
popa
testl
cld
pop
mov
neg
arpl
cmp
pusha
cmp
shll
test
cmpb
sbb
and
fcmove
enter
ja
pop
xor
xchg
out
cs
pop
div
xor
ljmp
pop
leave
sbb
mov
sbb
idiv
dec
xchg
xlat
inc
and
imull
enter
push
std
testl
and
notl
sarb
xor
mov
mov
or
push
sbb
scas
xchg
imul
jbe
xchg
out
arpl
mov
mov
xlat
scas
inc
add
negl
leave
xor
sti
notl
in
cli
xor
movsl
outsb
addr16
jne
inc
divl
fstps
xchg
fisttps
cmpl
ret
mull
sbb
out
jp
xor
repnz
ret
in
into
dec
push
xorb
out
sbb
xchg
jno
pop
sbb
and
loopne
jne
jnp
inc
idiv
shrl
sbbl
call
repnz
out
subl
pop
inc
inc
mov
fwait
notl
and
dec
and
in
pop
jl
sbb
popf
jmp
testl
dec
jl
idivl
test
gs
xchg
div
in
adc
fisttpll
mul
mov
idivl
inc
adc
sub
ret
rcl
push
faddl
xor
mov
mov
dec
jp
inc
lods
mov
mov
mov
push
xchg
sub
sahf
into
loope
mov
and
sbb
scas
mov
cmp
fbld
pop
cwtl
xchg
aam
shll
maskmovq
popa
push
sbb
das
pop
cltd
xchg
inc
rcr
and
loope
ret
push
notl
xor
xchg
dec
fstp
adc
mov
idivl
shlb
mov
jmp
jo
mov
jno
or
xchg
mov
jb
mov
in
jmp
mov
stos
push
pushf
aaa
xchg
jnp
pop
mov
negl
rcr
cmpl
mov
idivl
lcall
cltd
out
test
ss
mov
cmp
cmc
lods
imul
sub
mov
add
jle
sbbl
adc
xchg
push
jecxz
push
testl
repz
adc
shlb
mul
mov
aas
movsl
fists
cmc
add
roll
jmp
sub
xchg
or
push
int3
repnz
negl
jmp
add
jb
imul
cli
mov
xlat
mov
movsb
and
filds
ret
pop
ja
sub
sbb
repz
xor
push
jne
jle
sub
das
mov
testl
sbb
sbb
rcll
pop
pop
iret
fcompl
jo
xlat
movsb
add
in
fisubrl
not
cmp
rcl
add
cmpsl
jmp
inc
and
nop
aad
lods
mov
pop
xor
imull
add
pop
mov
jp
xor
fs
lcall
imull
or
and
notl
xor
lret
xchg
mov
mov
ss
adc
notl
scas
mov
xlat
icebp
xlat
ja
xor
jmp
jbe
stos
push
jns
jp
mov
popa
and
mov
lea
mov
sub
push
cmp
or
xlat
sbb
divb
xor
jns
repnz
mov
push
mov
fcmovb
out
cmc
mov
jne
adc
fcomip
pop
mov
addr16
into
repnz
xor
loopne
push
xor
xor
sti
negl
jns
fisttps
inc
imull
adc
insb
xor
rol
cwtl
xchg
dec
mov
imul
test
notl
pop
loop
imull
popf
jb
negl
aaa
adc
icebp
push
in
xchg
testl
stos
testl
xchg
push
jp
int3
mov
pop
loopne
sub
fsubl
ret
jecxz
xorb
mov
xor
pop
repnz
into
mov
test
roll
mov
fildl
push
mov
test
push
shrl
div
cmpsb
test
add
mov
push
push
aas
stc
push
cmp
mov
pop
add
insl
test
shlb
pop
notl
stc
push
pusha
imul
pop
cmp
push
scas
inc
xchg
lret
icebp
push
xchg
sub
cmpsl
aam
sub
push
and
pop
cld
or
xchg
dec
stc
fiaddl
xlat
sub
aam
inc
ds
mov
jne
fs
out
adc
cmp
fisubrs
notl
push
inc
in
and
call
negl
xchg
push
icebp
add
dec
sub
or
inc
inc
xchg
cmp
shl
mull
xchg
inc
xchg
inc
addr16
fsubp
jbe
add
xchg
adc
arpl
test
lahf
sub
les
negb
mov
mov
push
cld
aaa
xor
mov
sbb
ds
jl
xlat
sub
stos
pop
xchg
aas
and
aaa
xlat
stos
bound
pop
xlat
negl
pop
ret
mov
add
cmp
xchg
testl
push
mov
in
push
adc
lret
xchg
push
sbb
inc
test
cmp
jne
ss
sbb
lods
mov
test
and
sub
mov
pop
out
cld
notl
cmpsl
dec
js
dec
imul
bound
mov
cltd
add
xchg
fnstsw
xor
pop
shl
xor
inc
idivl
sub
mov
notl
jmp
into
lods
testl
mov
inc
lahf
cmp
jmp
ret
pop
add
pushf
adc
aad
loopne
outsl
fwait
and
xlat
das
cmp
cmc
fdivr
lahf
push
pop
daa
mov
cltd
pushf
divl
push
outsl
hlt
xchg
sub
ja
out
xor
mov
mull
mov
mov
mul
fxtract
loope
aad
jp
or
jbe
inc
jo
pop
xlat
or
repnz
mov
mov
jge
orl
jg
js
ljmp
mov
inc
cmpsb
imul
mov
ja
andb
call
mov
into
in
add
pop
push
out
xorb
outsl
hlt
inc
dec
push
jne
shlb
cmp
addr16
out
test
rcll
test
add
ficompl
lahf
mov
ss
je
ljmp
push
gs
arpl
dec
ss
sub
jecxz
shrl
inc
repz
inc
call
sub
daa
sbb
xchg
call
xorb
aas
scas
lods
jle
test
cmp
adc
inc
ss
clc
mov
popf
inc
test
xchg
addr16
and
mov
mov
ret
lds
cmp
call
in
or
out
outsl
bound
add
xlat
hlt
mov
cwtl
push
pop
and
cmp
and
lahf
lods
ficompl
inc
dec
cmp
scas
push
aas
pop
and
and
jbe
out
lods
xchg
mov
test
adc
imul
dec
jbe
lcall
and
mov
insb
out
mov
andb
pop
js
nop
jmp
cmp
add
and
ret
xchg
jp
aad
testl
dec
movsl
xor
idivl
fdivs
add
adc
adcl
pop
jno
mull
cli
insb
divl
or
jecxz
cmpsb
aam
test
dec
test
mov
sbb
mov
cmp
pop
adc
mov
sbb
movsl
mov
not
sub
mull
jecxz
cs
xchg
adc
mov
adc
mov
lahf
jl
repz
xor
ret
fwait
cwtl
jg,pt
jb
fidivl
xor
repz
test
jle
leave
jbe
testl
adcb
jne
pop
jmp
cmp
lods
dec
fstpt
lds
sarb
testl
push
and
test
clc
xchg
fnstsw
sub
fdivs
xchg
mov
inc
negl
xor
cli
pop
dec
mul
add
sti
cs
lods
ja
in
jnp
cltd
out
or
or
xchg
mov
pop
test
mov
dec
cmc
pop
jle
push
xchg
test
lods
mov
xlat
jmp
dec
push
jecxz
mov
ret
pushf
xchg
clc
push
fldt
jns
xor
insl
mov
push
mov
mov
push
sub
cs
shlb
cmp
inc
mov
jnp
jl
ret
fcmovnbe
icebp
imul
mov
jbe
xor
add
inc
out
leave
je
fdivrp
notl
dec
insl
in
dec
push
out
jle
mov
sub
loopne
insb
movsb
pop
fwait
les
scas
push
idivl
mov
cwtl
daa
negl
mov
sub
xchg
mov
mov
fs
adc
int
leave
js
imul
rclb
ret
jecxz
inc
in
inc
call
or
orl
jbe
mull
inc
jle
add
sbb
mov
mov
dec
cli
test
out
xor
push
clc
fsubl
icebp
mov
inc
xor
lret
fcomi
pop
mov
aam
repz
test
mull
into
xchg
inc
sbb
dec
pop
loopne
and
pop
in
outsl
cmp
divl
imul
addr16
mov
fwait
jb
jecxz
mov
aas
outsb
divl
inc
fwait
aam
pop
adc
jl
jne
push
or
rorb
cmpsb
sub
xchg
inc
xlat
data16
fwait
sbb
fsubr
mov
mov
adc
jo
jp
add
das
clc
lock
testl
and
add
scas
pop
das
movzbl
mov
cltd
xor
enter
pop
and
sbb
shll
and
inc
and
repz
cmova
jmp
adc
addr16
insb
sbb
pop
xchg
pop
stos
mov
or
cmpsl
movsl
aas
push
lds
enter
in
mov
cmpsb
push
iret
inc
jnp
jg,pn
pushl
iret
mov
pop
push
sub
add
hlt
dec
outsl
mov
mov
inc
push
push
pusha
add
fs
lods
sbb
sub
outsb
pop
mov
add
mov
mov
mov
push
mov
insb
ss
sub
out
out
jne
sub
jg
mov
pop
mov
icebp
roll
jbe
jb
dec
cmp
xchg
xlat
push
movsb
xchg
scas
scas
lahf
inc
dec
pop
jno
std
xchg
mov
ja
outsb
pop
add
ljmp
lcall
adc
out
rcr
mov
pushf
adc
imul
add
jnp
test
pop
dec
xor
out
in
sbb
std
pushf
shr
ljmp
mulb
or
jns
mov
cmp
jg
and
test
add
fcomp
pop
xor
gs
into
pop
jl
cmpsl
cwtl
cmpl
mov
in
or
xchg
mov
mov
push
mov
cmp
fwait
pop
cmc
repz
or
dec
jbe
xor
inc
out
iret
mov
fldl
xchg
fbstp
dec
cmp
lds
jge
jne
mov
scas
xchg
push
test
adc
and
pop
cmp
popa
xor
mov
pusha
mov
test
cs
into
sarl
push
inc
add
jbe
mov
lret
arpl
mov
xchg
xlat
jb
jbe
lret
insl
mov
mov
adc
pop
and
aaa
fmull
xor
mov
stos
jne
push
in
lret
nop
sbb
arpl
jnp
add
in
xchg
aam
mulb
jg
push
loopne
xlat
jge
cmpl
andl
lds
xchg
out
ljmp
in
sti
mov
sub
mov
mov
cmc
fcmovb
push
repz
sti
push
fs
int
mov
inc
pop
inc
adc
push
pop
popa
jno
sbb
je
lahf
and
ljmp
outsb
cmp
jl
fiaddl
inc
cs
aad
or
inc
loope
dec
sub
pusha
out
ljmp
sub
cs
fld
sbb
jae
jno
xor
aas
adc
jnp
lods
dec
ja
mov
loop
pop
mov
sbb
cmp
fcomps
adc
dec
hlt
stc
xchg
movsl
xlat
ret
push
shll
sub
aad
test
lock
pop
add
in
jl
pop
loope
cld
push
sub
mov
push
add
in
push
popf
cmp
lret
fimuls
outsl
out
mov
xor
es
sub
push
test
adc
sti
cmpsl
inc
jg
sahf
cmp
pusha
and
jae
push
xor
dec
out
out
push
fildl
mov
js
add
lock
in
leave
xor
mov
dec
ja
mov
inc
xchg
lahf
xor
push
test
in
cmp
push
divb
in
sbb
nop
aas
in
fnsave
cltd
push
push
push
cmp
sbb
pop
mov
roll
xor
rorb
and
out
pop
jecxz
movsl
mov
outsl
push
jnp
fistpll
rorl
in
in
sar
mov
adc
cld
push
pop
fcmovu
xor
add
adc
cmc
push
enter
cltd
je
mov
cmp
jne
mov
jle
mov
movsb
icebp
and
add
push
aaa
dec
mov
sub
jmp
xor
mov
je
scas
leave
xor
jo
or
dec
cmpsb
scas
mov
popa
int3
ja
mov
insl
mov
inc
fisubl
push
sub
jne
lcall
cmpsl
loopne
call
mov
data16
out
add
cmp
mul
sub
fldt
mov
sahf
gs
jbe
daa
cs
inc
add
rcrb
pop
aas
cmc
fisttpl
movsb
cmp
mov
xlat
xchg
mov
shrl
mov
and
fsubs
in
shr
and
or
stc
pusha
lahf
std
xor
pop
pushf
add
mov
push
push
sbb
and
imull
int3
sysexit
pop
xchg
xchg
dec
in
jmp
negl
inc
out
ffreep
sbb
das
pusha
dec
sbb
aaa
inc
dec
repz
and
xor
mov
cmp
push
cltd
xor
pop
test
je
loop
notl
cmp
es
lods
popa
ss
aaa
jnp
movb
dec
je
sbb
jmp
push
pop
cmp
mov
mov
inc
jne
mov
xchg
xlat
outsl
notb
cs
daa
push
or
dec
arpl
or
out
jnp
push
imul
add
aaa
jbe
adc
push
inc
mull
cmpsb
or
sub
push
xchg
mov
test
xchg
or
xchg
xlat
ja
jbe
out
faddl
add
sbb
mov
test
xor
xchg
xchg
xchg
inc
mov
jge
cli
fdivl
pop
add
movsb
loop
stc
mov
mov
mov
lods
push
pop
lret
push
sete
cmpsl
xlat
into
ds
pop
xor
or
aaa
jge
xchg
sub
xchg
out
sbb
sbbl
dec
negb
push
jmp
fwait
sbb
pop
push
out
loope
movsb
stos
push
aam
cli
repz
push
sbb
enter
int
inc
xchg
ret
mov
inc
in
jbe
repz
call
add
lock
pop
xchg
testl
hlt
jp
sbb
arpl
lods
testl
mov
dec
dec
test
daa
xchg
neg
mov
xor
cmp
nop
cltd
out
dec
push
mov
push
xchg
add
pop
ja
std
out
cmp
negl
xchg
cmc
push
inc
mov
icebp
mov
stos
out
push
testl
repnz
nop
mov
mov
and
xchg
lds
jno
div
out
in
mov
int3
idivl
lret
call
xchg
rorl
fcom
mov
imull
jo
in
js
aaa
test
sub
div
fstp
jmp
push
testl
xor
inc
ficoml
sub
xchg
dec
test
divl
in
int
imull
push
push
jae
mov
cld
jns
add
rolb
jae
and
das
testl
popf
push
fists
xchg
adc
dec
jg
push
lock
icebp
inc
add
repz
fists
testl
mov
ss
fincstp
scas
mov
fistl
lods
push
inc
popf
daa
mov
fs
idivl
xchg
incl
jns
mov
sahf
outsb
leave
sub
jb
push
out
cmpsb
jns
aaa
imul
sub
hlt
or
adc
mov
negl
or
xlat
aaa
int3
je
ss
icebp
mov
mul
lods
cmp
jo
dec
and
pop
and
sub
imul
enter
add
gs
outsb
rorb
out
sub
mull
mov
mov
imul
decb
inc
repz
push
push
xor
adc
maskmovq
divl
jl
xlat
jne
mov
add
pop
ljmp
push
pop
rcr
notb
dec
push
sub
cwtl
andl
xchg
xchg
xchg
mov
sbb
insb
or
sahf
sub
mov
and
xor
push
mov
jge
fwait
add
pop
js
xor
push
in
negl
or
notl
add
sbb
rcl
sub
call
test
popf
adc
dec
clc
inc
fs
dec
or
pop
addl
mull
cmovne
pop
cltd
cwtl
idivl
push
out
push
mov
out
push
adc
testl
call
pop
sbb
jne
idivl
insl
ljmp
out
xchg
out
or
mull
nop
daa
fisubl
dec
mov
mov
addr16
test
push
sub
xchg
and
adc
sahf
dec
negl
scas
xchg
ljmp
push
int3
ret
in
out
fstpt
fwait
cmp
aaa
in
rcrb
inc
rcrl
jl
ret
insb
aam
shrl
xchg
loope
cmpsb
fs
mov
je
fstl
lea
sbb
ljmp
push
mull
cmp
std
dec
jno
idivl
jnp
int
pushf
jb
fldcw
data16
sti
mov
push
sbb
push
pop
push
imull
add
outsl
movsb
xor
cmp
pop
fmull
call
movsb
idivl
lds
maskmovq
imull
cmp
loope
pop
or
or
fdivrl
rclb
es
jae
jecxz
mov
push
cmc
mov
mull
xchg
jb
and
into
sub
hlt
jae
nop
mov
ret
push
jg
in
pop
xchg
notl
mov
stos
adc
shll
xchg
inc
icebp
test
fimuls
cmc
loope
and
test
lock
div
insl
clc
data16
dec
movsb
xlat
bound
inc
fsts
xor
repnz
jmp
testl
ds
mov
out
push
stc
scas
xchg
sub
mov
xlat
gs
negb
orb
sub
mov
icebp
push
jg
jns
xchg
xchg
mov
push
jnp
cmp
adc
pop
pop
cmc
push
cmp
int
jl
jne
cmpl
call
das
out
adc
js
adc
mov
cmpsb
and
notl
scas
or
sub
out
orb
ss
sahf
fisttps
neg
adc
pop
add
mov
add
fwait
sub
lahf
test
add
and
test
shl
imul
and
notl
cmp
rorb
dec
lds
pop
add
lock
lahf
nop
loopne
in
or
mov
dec
fincstp
xchg
mov
into
shlb
sti
test
cld
gs
cmc
mov
cmp
testl
inc
test
filds
testl
sbb
mov
subb
filds
test
pop
lcall
pop
mov
mov
test
mov
xchg
dec
cmp
loope
push
pop
push
addl
out
int
fwait
leave
adc
out
sbb
out
ret
adc
in
fdivr
xchg
add
test
jmp
daa
sub
push
push
mov
out
xlat
loope
lods
out
or
pop
jns
testl
lret
das
mov
mov
iret
mov
test
ss
push
mov
pop
mov
lret
shl
jle
ljmp
sub
cmp
xor
fucom
pop
sub
cld
in
mov
loopne
out
imul
and
lahf
icebp
popf
ss
call
jp
jg
das
jns
pop
int3
test
aaa
mov
xor
cmp
adc
adc
negl
xlat
int3
push
sbb
jge
cmpb
inc
rol
mov
es
dec
negl
int3
dec
push
test
add
mov
je
out
dec
out
xor
mov
mov
add
cmpsb
dec
jecxz
out
dec
and
enter
sahf
icebp
xor
xacquire
jge
dec
lods
rcr
lock
iret
ret
repz
pop
fisubrs
cmc
notl
adc
dec
mov
add
push
xchg
addl
negl
jmp
repz
push
push
gs
fnstcw
xchg
out
test
scas
jno
dec
rolb
lahf
idivl
int3
negl
sbb
jecxz
lret
testl
sub
cmp
test
scas
push
notl
dec
in
inc
inc
push
testl
cmp
lods
shl
or
mov
testl
mov
neg
cmpb
pop
imul
sub
sub
arpl
xor
sti
repnz
stc
xor
or
rcrl
mov
jmp
mull
imul
jae
or
sbb
ror
pusha
pop
pop
in
mov
mov
test
xor
out
hlt
movsl
dec
mov
adc
rclb
xchg
testl
clc
repnz
out
ret
test
cmp
in
loope
nop
in
jb
outsb
pop
xor
test
mov
mov
jmp
push
xchg
xchg
dec
pop
test
mov
push
cmp
addr16
fs
mov
dec
cltd
xchg
or
rorl
in
pushf
mov
mov
jp
and
cmpsl
or
ds
lcall
fs
pop
pop
ret
and
dec
xlat
lock
pop
imul
outsl
xor
cmp
push
inc
sbbl
xlat
mov
pop
lahf
mov
pop
and
mull
mov
or
test
imul
enter
and
bound
clc
and
or
out
xchg
cli
mov
lcall
adc
test
mov
ljmp
loope
test
jecxz
xchg
mull
cld
mov
in
in
jle
push
sahf
or
test
fisttps
inc
cmp
and
push
roll
in
adc
and
out
cltd
xchg
jbe
testl
mull
inc
inc
sub
jge
pop
add
std
repz
push
jmp
mov
stos
les
sarl
dec
jmp
scas
dec
jp
insb
pusha
ds
nop
or
inc
dec
notb
fwait
jb
fcoml
push
jbe
jnp
mov
in
mull
sub
inc
push
xchg
inc
pushf
cmp
sub
in
rorb
adc
out
popa
imul
sub
fisubrs
mov
lahf
popa
and
daa
cmp
pusha
xchg
daa
ds
mov
imul
jmp
xor
aas
mov
xor
imul
jbe
insb
adc
sbb
not
bound
or
cli
and
int3
in
std
adc
jns
divl
cs
and
add
or
fisttps
lahf
push
fimull
or
push
jmp
ljmp
jne
cmp
sub
jb
movsb
jg
cld
push
loop
and
sbb
cwtl
mov
dec
cmc
jge
insb
push
pop
insl
lret
adc
stos
gs
jp
das
loop
add
cmpsb
imul
or
dec
jg
fiaddl
add
cmp
xchg
cli
mov
jle
je
and
fdivrs
dec
cmp
out
pop
iret
jp,pt
push
sbb
aam
pusha
jle
iret
jp
mov
cmc
mov
add
out
xchg
xlat
outsl
jmp
imul
sbb
outsb
dec
int
mov
pop
lods
mov
fucomp
sub
jns
lahf
cmpsb
sbb
mov
in
mov
or
roll
dec
xor
pop
add
in
in
push
lcall
in
ljmp
iret
jge
flds
inc
scas
sub
fxch
ret
push
out
xchg
sarb
xor
popa
fs
data16
xor
cs
pusha
mov
stos
push
xchg
xchg
and
mov
xor
xor
data16
lea
icebp
xchg
or
fdivrs
fidivl
mov
out
ljmp
xchg
mov
push
mov
ds
sar
or
dec
inc
mov
or
loopne
mov
in
jbe
adc
aas
shl
mov
inc
inc
xor
mov
clc
jge
orb
mov
mov
lret
je
mov
xchg
mov
rolb
adc
es
xchg
fidivrl
pop
in
js
dec
fmul
fs
and
out
outsl
scas
sahf
jge
in
das
inc
ret
push
mov
out
mov
fdivl
hlt
aaa
hlt
lods
cwtl
add
stos
out
arpl
flds
jns
adc
cmp
cwtl
out
push
fsubs
test
addr16
lods
adc
mov
outsl
lret
test
aad
jne
std
out
dec
mov
xchg
dec
sbb
lcall
adc
lret
mov
out
and
ljmp
in
or
arpl
test
or
popf
fs
adc
dec
mov
sub
inc
mov
sub
gs
pop
loope
cmp
pop
jge
inc
imul
mov
jmp
inc
dec
xchg
sbb
shlb
jbe
stc
xor
dec
leave
add
lods
fstpl
jae
cmpsl
cmp
inc
sbb
lcall
movsl
xchg
and
pop
xchg
xor
das
dec
jbe
pusha
xchg
mov
js
movsl
fcmovb
ret
out
xlat
movsb
sbb
loopne
sbb
insb
push
int3
call
xor
adc
mov
jae
adc
iret
sbb
mov
sahf
fildll
add
xchg
leave
xchg
in
daa
mov
adc
mov
sbb
rorb
xlat
repz
cmc
insb
ficoml
je
pop
andl
or
into
jns
pop
scas
jae
push
hlt
insb
pop
rorb
fldt
cmc
leave
pushl
int
cmc
adc
adc
pop
sub
jmp
push
adc
mov
stos
mov
mov
ja
push
push
mov
jbe
cmp
iret
lcall
and
fidivl
xor
push
scas
sarb
daa
lahf
cmp
shlb
sbb
jnp
bound
dec
lods
iret
inc
insl
andb
out
or
xchg
lret
cmp
mov
enter
sti
aad
cs
xchg
inc
lahf
mov
aaa
adc
jp
inc
pusha
fs
inc
push
test
scas
fisubrl
mov
mov
test
jge
lahf
sub
imull
push
add
pop
scas
pop
std
mov
adc
inc
pop
cmp
pop
and
divl
xbegin
test
out
lea
push
mov
cltd
add
dec
push
clc
jbe
fcmovbe
pop
xchg
mov
imul
sbb
xor
pop
jns
mov
xchg
pop
loopne
imul
scas
cmc
insl
out
dec
popa
jbe
mov
cmc
les
pop
inc
dec
negb
xlat
orl
mov
xor
sub
push
sti
inc
dec
dec
xchg
mov
sbb
xlat
adcl
sti
loop
pop
xchg
int
or
ret
or
mov
cmpsb
sub
and
in
dec
add
stc
xchg
mov
mov
out
addr16
fisttpl
pushf
not
cmpsb
xor
lods
jg
aas
mull
popf
jge
dec
idiv
movb
dec
adc
js
testl
out
xlat
in
adc
jg
leave
dec
mull
xchg
mov
out
pop
and
push
jbe
in
jecxz
cmc
jmp
popa
xor
sub
jnp
xchg
and
divl
bsf
adc
mov
sbb
cmc
hlt
pop
imull
xchg
cwtl
mov
fucomip
lcall
jb
push
adc
push
sbb
adc
pusha
lahf
int3
mov
testl
jne
testl
lock
jmp
iret
outsl
pusha
negl
adc
jbe
dec
xchg
testl
jo
cmpsb
lods
mov
orl
ficoms
cltd
mov
xchg
mov
mov
fsin
mov
xchg
stc
out
fdivrs
iret
testl
pusha
jae
cltd
xchg
sarb
out
stc
fsubs
push
add
sub
insl
push
cmc
inc
xchg
repz
in
push
or
xchg
sbb
in
push
xchg
into
sub
adc
test
mov
pop
pushf
imull
xor
imull
fmuls
jbe
repnz
repz
sahf
mov
jbe
shl
jecxz
adc
and
xchg
and
clc
push
stos
insb
pop
mov
mov
xchg
mov
sub
inc
sbb
notl
and
fistpl
mov
les
add
fs
sub
xchg
jno
shlb
int
sub
mov
aad
lea
outsl
ss
push
pop
xchg
or
mov
shll
inc
mull
sub
or
mull
imul
out
cltd
out
pushf
jne
inc
mov
mov
pop
ret
jb
cld
lods
adc
cmc
stc
xchg
lock
pop
inc
fiaddl
xchg
cltd
pop
adc
cmc
inc
cmpsb
das
lods
sbb
test
mov
insl
neg
mov
sub
dec
movsl
dec
mov
mov
imul
divl
dec
dec
notl
test
cwtl
in
mov
mov
enter
cmp
cmp
add
push
push
imull
xor
mov
divl
out
data16
cmp
hlt
pop
ja
sbb
idivl
xor
sub
notl
cmp
mov
cld
xchg
jecxz
jmp
fsubrs
stc
test
push
sti
adc
ret
or
pop
jle
mov
dec
frstor
cltd
sahf
loop
inc
or
sub
xorl
imul
lea
popf
mov
inc
push
cmp
cmp
mull
push
mov
mov
jp
jl
int
dec
idivl
ret
mull
adc
insb
sbb
pop
inc
aam
dec
jb
pop
testl
dec
addr16
push
mov
lret
out
aam
sbb
notl
loop
notl
ja
add
push
nop
xor
pop
divl
jnp
lcall
lahf
mov
mov
xchg
cmp
neg
or
and
adc
pop
sub
or
push
push
lahf
xchg
add
lcall
insb
lcall
push
enter
notl
push
das
xchg
ja
adc
arpl
push
icebp
in
mull
jne
push
imul
lcall
call
or
lods
mov
jnp
dec
xor
imul
pop
aad
mov
cli
sbb
leave
mov
aaa
or
jle
ret
adc
fs
xchg
std
add
and
daa
imul
imul
jmp
mov
mov
bound
test
push
and
xorb
cmp
pop
lds
insl
inc
jle
and
add
notl
call
or
neg
sbbl
add
mov
enter
testl
les
or
bound
incb
ret
lret
fnstsw
sub
mov
fsubrl
outsl
stos
movb
loop
cltd
pop
xchg
dec
pop
iret
test
cmp
lods
pusha
enter
push
ljmp
jae
loope
mov
sbb
testl
and
jne
lret
iret
cmc
in
loope
xchg
gs
dec
xchg
outsb
push
fistps
ret
sub
mov
in
xchg
mov
jbe
xchg
stos
adc
pushw
dec
mov
push
fldt
sbb
ja
ss
inc
fildl
dec
icebp
in
mov
repz
pop
nop
push
add
push
sarl
jne
sbb
inc
pusha
fs
mov
iret
push
pop
das
push
fistpl
notl
stc
xchg
lock
bound
pop
xchg
push
adc
cmc
mov
loop
testl
orl
adc
mov
sbb
unpcklps
push
sbb
clc
jo
push
cld
fcmovbe
fsubl
jecxz
popf
lret
jmp
cmp
or
xor
fiaddl
clc
hlt
lock
notl
incb
sub
pushf
ss
rorb
mull
mov
cltd
ja
inc
jmp
mov
stc
adc
fstl
cmpsl
push
push
lret
add
mov
jp
daa
jmp
idivl
sub
or
push
lahf
aas
mov
insl
add
inc
jno
in
xor
push
shl
repnz
dec
push
xlat
loopne
not
fidivrl
arpl
imull
movsb
fistl
loope
outsl
mov
mov
ficoms
test
sahf
pushf
out
notl
or
xchg
mov
cmp
cwtl
xchg
sub
mov
dec
lock
sarl
repz
idivl
addb
scas
lcall
imul
into
jp
jecxz
xor
xor
sbb
shlb
lahf
idiv
cld
bound
or
sbb
mov
sbb
ret
in
xchg
ret
pop
xchg
icebp
pop
xlat
xor
or
jne
cmpb
ds
pop
repz
cmp
shl
fistps
push
popa
je
mov
out
loopne
pop
divl
call
mov
popa
xchg
xchg
mov
sub
idiv
roll
xor
rcrb
xchg
fists
stos
or
xlat
xchg
sbb
or
sbb
divl
shlb
cmp
xor
fldcw
inc
idivl
dec
leave
mull
lods
inc
mov
push
jmp
sbb
testl
adc
or
adc
filds
pop
div
push
xchg
sarb
xlat
mov
or
inc
mov
enter
sbb
jg
jb
cmpb
shrl
testl
movsb
inc
testl
and
and
les
pop
fstpt
sahf
push
xchg
gs
std
mov
neg
adc
call
fcomip
int3
lret
ret
sbb
je
out
push
fucomip
xchg
mov
mov
loopne
fisttps
mov
mov
inc
sbb
push
jbe
jmp
negl
pop
xor
inc
adc
add
mov
dec
fcomip
push
cltd
sbb
rcll
push
dec
movsb
lcall
or
push
mull
or
push
inc
cmp
cltd
push
lret
test
add
mov
fisubrl
in
negl
mov
mov
push
push
scas
cmp
popa
jge
jbe
ja
stos
aad
lds
add
test
insl
sub
jecxz
lods
idiv
or
adc
pop
cmpsl
mov
imul
jecxz
test
jae
cmp
add
jle
lahf
pop
adc
pop
adc
ds
fcmovbe
fsubr
dec
cmpsb
xor
mul
out
mov
and
rcrl
int3
imul
out
mov
jmp
test
inc
jae
idivl
jle
lods
mull
repz
ret
pushf
jg
in
testl
dec
sub
cmc
cwtl
sbb
jmp
inc
popa
outsb
and
addr16
lods
aam
xlat
cld
out
sbb
jbe
adc
or
in
sti
scas
xlat
sub
repz
or
pop
shl
mov
xchg
pop
aad
sbb
out
loope
add
mov
notl
add
xchg
stc
in
clc
testl
stos
lock
xor
sahf
jbe
add
negl
rclb
cmpl
dec
enter
push
sbb
fdivs
xchg
loope
cmc
cmp
mov
divl
scas
testl
jl
out
mul
lods
insl
pop
call
push
cmp
lahf
lods
es
pop
in
jae
nop
push
aam
jns
cmc
add
imull
xor
xor
stc
loope
push
dec
push
fidivs
dec
mov
fstl
inc
jo
xchg
movsl
mov
cwtl
mov
stos
imull
mov
inc
rclb
mull
xchg
outsb
rcrb
pop
inc
adc
scas
inc
pushf
imul
outsl
mov
icebp
stos
fdivl
mov
xlat
and
outsb
fcomip
push
fldcw
notl
shrl
xor
fucomi
cmpsb
pop
divl
fimuls
stos
scas
push
xor
lahf
test
xlat
lret
shr
lret
push
jle
push
xchg
cmp
int
adc
lea
inc
leave
les
test
fcmovnu
cli
fistps
imull
jmp
je
repz
cmp
test
inc
jbe
in
insb
inc
push
dec
xchg
push
inc
lods
pop
iret
fisubl
mov
int3
cmp
jns
dec
push
or
out
sub
xchg
test
cld
jp
xor
js
out
xchg
mov
jb
or
cmpsl
pop
rolb
lock
jns
sub
jmp
in
sub
clc
mov
sbb
inc
fnstsw
xchg
insb
outsb
nop
out
inc
jecxz
popa
inc
sti
notl
fsubrl
sbb
shrb
inc
fsts
dec
jns
fs
mov
inc
pushf
out
add
sbb
inc
sub
fiaddl
cltd
enter
pusha
xor
filds
mov
fcmovne
mov
into
pushf
add
inc
push
mov
out
mov
inc
aaa
xchg
push
or
repz
insl
pop
scas
push
sahf
gs
mov
push
sub
mov
inc
ljmp
rcll
movsl
cld
jg
push
stc
sbb
sbb
cmp
js
test
dec
sbb
and
add
xor
add
es
fldenv
fwait
dec
inc
cmp
repz
pop
ret
xor
push
iret
out
mov
fwait
mov
dec
dec
jne
push
jnp
xor
sbb
cltd
sub
lret
cld
sub
lret
mov
xchg
ficomps
rclb
insb
test
out
imul
lahf
imul
xor
mov
sub
repz
dec
loopne
sbb
or
daa
ljmp
cmc
call
push
fisubrl
fbstp
lahf
jl
mov
pushf
cmpsb
in
pop
sub
mov
imul
xchg
cmp
or
fucomip
add
mov
ret
into
xor
jns
cmp
adc
out
push
daa
xor
test
iret
pop
fstpl
test
push
mov
cs
inc
aam
dec
pusha
test
popa
movsb
adc
jnp
arpl
inc
mull
lcall
je
xchg
xor
dec
jg
jecxz
mul
inc
enter
stc
mov
fldl
jno
xchg
xorb
mov
scas
mov
fcomps
and
fdivl
testl
lods
pop
cmc
push
divl
jmp
xor
add
not
mov
xchg
sbb
add
divl
adc
lret
jmp
cltd
iret
ret
leave
add
out
jp
pop
ds
data16
out
adc
hlt
fwait
out
jecxz
cmp
ds
pop
jmp
testl
pusha
pop
mov
in
or
jecxz
adc
movsl
insb
pop
jne
mov
repnz
push
jnp
jo
out
push
mov
dec
cmpsb
pop
mov
imulb
iret
pop
push
sub
push
sti
stos
pop
rclb
mull
pcmpgtd
testl
fwait
rorl
negl
shrl
fs
div
aaa
jmp
imul
jbe
shl
adc
out
mov
xor
mov
xlat
clc
lock
mov
outsl
push
pop
jmp
insl
bound
loopne
ss
mov
shr
dec
add
lahf
adc
xchg
in
inc
fnstsw
notl
gs
clc
ret
push
test
dec
push
adc
jne
push
and
mov
testl
aad
pop
repz
aam
out
inc
xchg
or
sub
push
push
icebp
mov
jg
and
mov
mov
inc
pop
out
inc
pusha
call
sbb
xor
les
mov
inc
cmpsb
pop
out
push
xor
mov
and
adc
lahf
es
aam
push
fnstenv
nop
inc
jbe
pop
push
negl
lods
notl
mov
pop
mov
cmp
out
mov
add
notl
cmp
jmp
xchg
pop
or
mov
add
sbb
push
testl
out
divl
inc
xlat
imull
scas
dec
mov
loop
xchg
insl
stc
fists
imul
testl
push
std
imull
dec
test
stc
in
dec
test
mov
jae
dec
fwait
or
push
test
imull
fs
pop
adc
testl
fildl
bnd
out
mov
idiv
dec
jp
jb
xor
imul
inc
icebp
iret
mov
testl
adc
mov
addr16
and
cmc
pop
divl
sbb
pop
push
js
cmpsb
or
popa
fucom
xor
mov
sbb
ret
push
inc
les
cmp
lods
js
mov
clc
mov
testl
xor
rclb
xchg
pushf
or
fcmovne
dec
out
testl
adc
idiv
sahf
xor
test
jns
sbb
aad
mull
lods
push
pop
sub
outsb
xchg
loope,pn
out
dec
mov
call
push
mov
mov
int3
cvtpi2ps
repnz
inc
xchg
mull
lret
test
adc
push
int
inc
xchg
push
mov
div
adc
test
sti
insl
imul
fsts
push
lods
fimull
shlb
xchg
ja
test
clc
sub
das
enter
mov
inc
push
jl
fimull
ret
lods
push
cmp
and
out
cwtl
adc
push
fmul
sti
idivl
in
ss
and
xchg
mull
sub
add
xchg
sub
mov
idivl
sbb
jl
arpl
div
movsl
and
jp
lds
fsubr
mull
or
ret
pop
movsb
idivl
mov
push
fprem1
in
cli
je
fs
cmpsb
stos
push
lahf
add
and
jge
fldt
outsl
imull
pop
out
push
or
outsb
add
idivl
mov
add
imul
sbb
ret
repz
jecxz
outsb
fiadds
inc
sbb
cmp
aam
push
notl
cmp
loop
stos
sti
xchg
xchg
xlat
adc
divl
mov
mov
idivl
jne
and
call
aad
filds
xchg
cmpsl
imull
and
adc
in
mov
add
iret
and
hlt
xchg
cmp
push
or
pop
mov
shlb
sbb
out
cmc
dec
scas
push
addr16
mull
sti
icebp
std
fisubrl
and
pop
sahf
pop
flds
sbb
int3
aam
call
lcall
xchg
push
out
filds
inc
push
divl
cli
insl
loopne
outsb
sbb
mov
repnz
scas
cmp
xchg
pusha
push
pop
test
push
neg
in
mov
xor
in
or
adc
lock
push
idivl
stos
dec
iret
jle
testl
in
and
jge
push
divl
mov
test
push
lret
out
dec
test
sub
test
mov
xchg
push
repnz
std
idivl
mov
push
jg
mov
es
negl
loop
or
and
pusha
mov
mov
sub
cwtl
in
jmp
xchg
push
push
sbb
fisttpl
add
push
lods
imul
push
ret
test
add
in
or
lea
cmp
xchg
inc
mov
or
pop
outsb
jecxz
dec
fistps
lock
pop
out
seto
xor
adc
mov
ret
lahf
mov
imull
repz
repnz
in
xchg
or
out
out
or
negl
fdivs
mov
add
imul
inc
pop
add
adc
cli
out
mov
adc
testl
xor
sbb
enter
inc
inc
and
ja
inc
and
ss
pop
and
push
pop
cmpb
out
testl
mov
xchg
popf
sub
sbb
fmuls
jl
xor
mov
add
mov
mov
outsl
xchg
cmpsl
lret
jg
push
fsub
xchg
movsl
adc
dec
insb
pop
rclb
arpl
in
imul
pop
imull
add
loopne
xlat
mov
cmp
int3
jae
ret
cmc
inc
cmp
push
insl
inc
rorb
dec
mull
push
fwait
mov
scas
daa
sub
cmp
test
and
shlb
sbb
mov
push
out
mov
sbb
cs
xchg
lcall
dec
jns
mov
fwait
test
add
mov
shrl
testl
xchg
cmp
sbb
ja
lock
mov
ss
cmc
jno
imulb
filds
insl
xchg
mull
pop
std
hlt
mul
pop
pusha
xchg
cwtl
mov
out
mov
notl
data16
ss
outsb
imul
pop
testl
add
ss
cmp
and
pop
xor
push
adc
mov
or
push
ja
sub
adc
idivl
pop
das
fildll
lea
sbb
repnz
inc
sbb
xor
dec
fcmovnu
add
mov
fcomps
jle
shl
add
mov
insl
imull
xor
idiv
pop
dec
push
ja
mov
insl
cmc
sub
sub
cmp
push
mov
cmc
idivl
dec
mov
outsb
xchg
sbb
and
dec
bound
jmp
pop
in
test
dec
mov
inc
push
notl
sbb
cli
cwtl
testl
dec
std
jae
je
idivl
or
inc
jp
mov
idiv
and
jg
or
pop
pop
jne
mov
je
pusha
sub
pushf
mov
and
jb
xor
out
into
push
test
dec
icebp
gs
out
shl
fldt
jge
push
sbb
repz
dec
inc
outsb
jo
divl
mov
dec
pop
out
xlat
sub
xor
fcomp
mov
adc
in
or
jb
sub
sbb
xorb
dec
cmp
mov
jp
imull
je
bound
add
lret
testl
psubd
cltd
cmp
outsb
es
jl
das
adc
icebp
loopne
sub
test
lock
sub
out
out
jg
cmp
testl
dec
xor
rolb
imul
cs
push
pause
leave
pusha
xchg
jbe
xor
outsl
sti
sub
jmp
sub
insb
sarl
and
leave
inc
stos
out
adc
pop
jo
pop
pop
test
in
call
xchg
fcomps
pushf
and
adc
js
jge
stos
int
xchg
loope
out
and
inc
fsts
into
imul
ret
sbb
push
divl
sti
stos
outsl
loop
in
pop
or
adc
sub
mov
inc
mov
sub
and
out
aad
outsl
adc
add
es
mull
aam
nop
repnz
testl
lret
mov
add
adc
rol
rcll
divl
xor
adc
cmpsl
jbe
ret
xor
testl
test
and
inc
cwtl
pop
loope
dec
in
adc
das
pop
in
idiv
ss
movsb
dec
imull
fwait
scas
add
mov
inc
mov
dec
xchg
jmp
jo
mov
mov
movsb
loop
js
inc
mov
push
ret
jns
in
out
cli
pop
add
sub
fmull
hlt
mul
cltd
jb
decb
movsb
inc
pop
adc
pop
jne
lods
push
mov
faddl
imul
inc
inc
punpcklbw
lahf
xchg
sub
cmpsb
andl
insl
xchg
das
negl
pop
aad
nop
aaa
mov
mov
stc
inc
mov
out
xlat
adc
mov
push
dec
testl
adc
jns
mov
mov
xlat
divl
or
pop
dec
shr
inc
notl
cmp
jae
sbb
or
mov
xchg
sub
loopne
in
push
sbb
ret
lcall
outsl
aam
ljmp
lea
add
inc
mov
xor
pop
jmp
mov
adc
jnp
dec
fsubr
add
je
subl
fldl
fs
pop
inc
inc
insl
lcall
pop
dec
test
sbb
jg
insb
mov
in
sub
xchg
ja
xlat
fcompp
les
jnp
movsl
sbb
punpckhbw
imul
in
jbe
into
lock
jp
push
rcrl
add
adc
fiaddl
insl
in
mov
pushf
mov
inc
ljmp
repnz
out
pushf
fidivl
mov
lods
lcall
lahf
mov
scas
fsubl
and
icebp
mov
mov
add
lret
or
push
sbbl
mov
push
sub
or
cmc
xchg
je
insl
gs
push
xchg
lock
mov
lock
jmp
adc
aaa
cs
mov
or
mov
out
sbb
xchg
cmpl
push
xchg
in
fidivl
sub
xor
cwtl
mov
pushf
out
lds
cmc
data16
jp
rcrb
xor
pop
ret
mov
hlt
or
sub
clc
fstp
pop
fsub
in
in
push
out
out
add
das
push
push
or
lods
dec
ret
xor
dec
jmp
cmc
fisubl
mov
mov
sti
cmp
lahf
inc
aas
fs
push
fidivrl
sti
and
insl
lcall
cli
add
movsb
ljmp
mov
fsubrl
ja
ds
mov
scas
and
jle
es
jno
cmc
cmp
xlat
sbb
add
push
and
insb
fnsave
mov
sbb
push
pushf
shrl
ljmp
cmp
rolb
cmp
jecxz
or
test
xchg
adc
jecxz
sbb
jb
es
mov
adcl
das
and
cmpsl
dec
les
mov
cli
scas
lds
popf
in
or
dec
sbb
pop
sbb
outsl
or
add
xlat
outsl
push
or
outsl
fsub
js
std
add
stos
scas
inc
orb
xchg
push
xor
sbbb
jecxz
adc
dec
jle
je
adc
shlb
xor
mov
inc
jecxz
call
jmp
mov
adc
dec
sbb
ss
stos
data16
iret
mov
add
notb
mov
push
xchg
lcall
fnsave
add
js
mov
popf
movsb
ja
mov
cli
inc
fdiv
jmp
mov
pop
into
sub
fcmovnbe
clc
jns
fcomip
ljmp
lods
mov
mov
sub
pop
divl
ljmp
mov
cmp
jno
jmp
inc
mov
or
adc
jmp
fcoml
pop
cld
jne
push
cmc
cs
in
sub
aaa
dec
adc
xor
movsb
dec
sbb
pop
je
call
xor
push
bound
out
repnz
jne
adc
inc
ljmp
sub
jo
dec
adc
dec
mov
sub
mov
mov
cs
gs
stos
cmp
mov
hlt
loop
test
or
gs
adc
mov
cs
lods
add
sub
adc
sti
lret
je
sti
ss
xor
dec
pop
repnz
roll
loop
leave
push
xchg
mov
ja
mov
xchg
outsb
xchg
push
in
scas
imul
fsubs
ljmp
cwtl
addr16
cld
mov
aaa
jb
jne
jb
sahf
or
repz
mov
mov
into
adc
ja
or
sbb
int3
notl
inc
mov
sub
mov
imul
pop
scas
jmp
jae
sbb
mov
and
popf
mov
repz
in
pop
fwait
mov
inc
mov
sbbb
in
ljmp
lret
or
add
and
sub
adc
cmp
mov
jge
cs
push
mov
mov
pop
fwait
cmp
fildll
ja
gs
cmc
xchg
in
loop
pop
jmp
mov
nop
mov
test
fcmovnu
adc
or
daa
mov
mov
into
subb
lret
or
mulb
int
xchg
jbe
sbb
aas
negl
scas
mov
notl
xchg
cmp
jge
out
jb
adc
mov
adc
not
push
jle
mov
ret
cmpsb
into
xchg
pushf
std
xchg
cmp
push
mov
cmp
jecxz
test
dec
cs
outsb
sub
fmull
stc
mov
dec
push
das
roll
xchg
jl
xchg
rdmsr
popa
xlat
jl
ljmp
mov
xchg
add
fisubrl
fbld
fldcw
adc
sub
mov
or
sbbl
notl
sti
add
and
pop
fcoms
jae
fidivl
jecxz
cli
pop
and
mov
divb
sbb
pop
imul
ret
sbb
popa
sbb
push
or
jae
insl
lret
idivl
jle
cmc
movhps
add
test
cmpsb
ficompl
cwtl
test
adc
stos
into
aam
lahf
jecxz
xchg
pop
cmp
xchg
mov
testl
sub
cld
movsl
sbb
pusha
test
push
out
mull
lods
xchg
das
push
mov
push
and
pop
jo
in
mov
pusha
cmpsb
popa
pop
popf
xchg
neg
addb
xor
jmp
sub
pop
nop
outsl
mul
xchg
inc
pop
jge
notb
lods
xor
and
mov
enter
mov
shlb
cmp
push
pusha
xor
fstpl
mov
xor
pop
movsb
out
cld
stos
push
into
inc
and
nop
push
stc
sub
int3
xchg
pop
sub
jge
mov
pop
mull
fbld
or
or
in
push
or
testl
pop
movsb
test
into
push
div
push
mov
fcmovnbe
dec
cmp
mov
repnz
hlt
jnp
scas
addl
enter
mov
mov
shll
testl
sbb
enter
pop
sbb
push
or
ficomps
sbb
xchg
jno
enter
pop
mov
in
vpcmpgtd
dec
xor
add
in
jnp
sub
jb
push
int
jmp
push
or
xchg
stc
lds
push
pop
out
adc
int
mov
fwait
mov
pushf
adc
addb
pusha
jbe
in
jmp
dec
lods
pop
pop
pop
mov
iret
pusha
loope
or
fs
xor
sbb
mov
ja
ficompl
and
push
stos
lahf
daa
mov
fists
sti
lock
mov
out
outsb
mov
mov
imul
jns
sub
mov
je
xchg
inc
cld
scas
loope
add
pop
pop
adc
in
xlat
rcll
jmp
leave
dec
sub
fiaddl
cld
fs
and
cmpsl
jmp
add
js
cmp
xchg
dec
das
scas
mov
mulb
cmp
add
in
lock
addl
sub
stos
mov
cld
xchg
pop
xchg
repz
ficoml
leave
adc
add
xchg
fidivrl
int3
notl
xchg
dec
iret
test
jae
pop
mov
pop
xchg
not
or
mov
mov
mov
out
cmp
mov
dec
xor
mov
fstps
mov
push
inc
jbe
in
adc
stos
nop
idivl
imul
in
cmp
popa
or
sti
pop
cltd
es
negl
je
push
sub
pop
push
outsb
mov
hlt
jno
add
notl
fcomps
pop
cld
negl
mov
cli
sub
push
push
or
mov
imull
sti
pop
inc
jp
cwtl
or
dec
xchg
mov
mov
xadd
cltd
cmp
xchg
loope
sbb
adc
xlat
data16
xchg
pop
and
lahf
loope
mov
negl
inc
add
jns
cs
dec
out
aas
xor
sahf
insb
cmp
idivl
mov
jae
sbb
out
leave
inc
push
xlat
push
faddl
sbb
xor
lahf
jo
imul
adc
or
nop
sbb
neg
inc
les
test
xor
mov
not
daa
in
or
dec
push
out
mov
mov
insb
adc
xchg
cwtl
adc
inc
ljmp
negl
filds
cmpsb
or
xchg
imull
cmp
outsb
adc
nop
repz
stos
negl
cmp
jne
shr
lret
cmp
fistps
sbb
inc
mov
fwait
xchg
pop
and
pop
rolb
push
rcll
inc
sbbb
pop
daa
aad
test
pop
out
shr
mov
push
out
and
idivl
mov
test
and
xchg
mov
or
fildll
shlb
int
je
sub
test
dec
mov
loopne
xchg
mov
call
stos
jb
fisttpl
fdivl
xor
add
jp
sbb
pop
orl
mov
ret
jmp
decb
testl
aaa
les
idivl
mov
sub
mull
sbb
jo
add
mov
fs
xchg
mull
and
pop
dec
xchg
repz
test
jmp
out
fmull
in
adc
scas
fistpll
sahf
pop
or
testl
add
dec
jl
jge
xor
push
in
idivl
insb
test
lods
in
jmp
ss
sahf
inc
sbb
add
idivl
jne
dec
notl
push
inc
or
cmp
test
dec
dec
jne
adc
dec
mov
lods
shlb
mov
idivl
lods
adc
test
add
adc
idivl
test
pop
push
negl
fiaddl
push
hlt
mov
in
mov
xchg
mull
mov
imul
jbe
mov
jecxz
jnp
out
adc
dec
jge
pop
daa
out
dec
scas
or
xchg
imul
fistps
xor
pop
lea
or
mov
jle
xchg
dec
push
jg
fwait
push
push
les
repz
push
mov
xchg
adc
pop
sbb
jae
cs
and
jae
aam
jnp
loopne
insb
dec
cwtl
mov
pop
sbb
pop
xchg
jnp
pop
push
ss
jns
fidivs
stos
notl
call
add
mov
adc
push
stc
jp
xchg
test
ljmp
inc
inc
push
sub
jl
sbb
cltd
dec
pop
repz
fcoml
testl
dec
inc
xor
insb
clc
mull
or
in
fisubl
pop
mov
hlt
push
xor
out
push
xchg
fcomps
mul
or
inc
jl
aaa
fiaddl
sub
pop
cmc
pop
ret
dec
popa
in
jnp
divl
fbstp
mov
out
imull
dec
rcll
shll
and
insb
add
test
jmp
mull
clc
inc
notl
out
int3
xor
sub
cs
jl
sub
pop
pop
imull
daa
cmp
cltd
adcb
mov
out
xor
lds
testl
lock
lahf
sti
cmp
and
push
adc
data16
std
gs
lret
shlb
adc
and
in
push
mov
adc
or
jmp
mov
or
inc
int
call
mov
ss
pop
cmp
fistpl
push
shrl
xor
cmc
mull
push
mov
addr16
sbb
push
dec
pop
dec
daa
cmovne
mov
xchg
aaa
outsb
icebp
cmc
push
repz
mov
pop
lret
jae
sub
cmp
lods
bound
cmp
mov
lea
pop
fsubs
and
push
mov
stos
xchg
fisubl
or
jnp
insb
movsb
push
ficomps
pop
xchg
fmuls
pop
sbb
lods
loopne
xor
mov
xchg
mov
lock
push
fcmove
or
sbb
mov
adc
jmp
ja
cmpsl
dec
int3
call
iret
jl
test
lea
mov
sbb
ja
fisubl
or
pop
fiaddl
repz
dec
inc
jae
imul
push
cmc
mul
and
mov
xor
in
je
stos
pop
pop
popa
fwait
movsl
enter
dec
mull
shr
pusha
xlat
xor
addb
xor
cltd
test
or
ffreep
cwtl
lret
xchg
sti
jno
aas
cli
not
adc
jnp
outsb
stc
push
imull
cmpsl
aas
insb
jb
xchg
lret
jno
movsl
out
loope
psubusw
scas
sub
and
dec
out
and
jnp
pop
xlat
push
cmp
jmp
aas
mul
fs
add
rorb
notl
cmc
bound
outsb
jge
ss
xchg
pop
inc
shll
shlb
das
nop
sub
not
out
fisttps
loope
cmp
push
mov
data16
popa
es
sub
pushf
icebp
divl
je
xchg
scas
loopne
stos
out
mov
inc
xor
jge
testl
das
testl
adc
cwtl
mov
and
xchg
dec
add
loop
and
iret
mov
xor
adc
mull
addl
into
add
mov
divl
scas
push
push
push
stos
xchg
push
loopne
aas
std
imul
inc
out
adc
add
push
insb
push
mov
rolb
xor
sahf
arpl
push
insb
add
dec
fwait
imull
gs
and
mov
add
xlat
push
xchg
and
mov
mov
mov
sbb
out
insb
fmuls
xor
test
aas
stos
xlat
loopne
insl
in
adc
pop
adc
testl
test
jnp
testl
jg
sarb
out
push
mov
sub
mov
fdiv
push
xchg
xchg
sbb
push
idivl
test
sub
push
add
or
dec
and
pop
adcb
scas
adc
in
testl
mov
stos
or
js
addb
or
out
aaa
dec
push
push
negl
rcr
in
test
je
lods
arpl
loopne
scas
ret
out
movsb
stc
xor
adc
sub
mov
testl
mov
loopne
imull
dec
jae
notl
orb
popl
xor
xchg
or
bound
or
fldcw
ficoms
mov
mov
mov
in
dec
pop
inc
adc
subb
sub
in
add
aaa
sbb
ja
and
notl
jl
mov
mov
dec
jo
test
sub
xor
cwtl
mov
stos
add
jg
loop
call
dec
divl
xchg
mov
mov
jg
xchg
out
int3
inc
ja
pop
adc
fwait
test
mov
lret
icebp
push
stc
pop
or
testl
fstpt
mov
lahf
mov
test
jno
les
pop
or
testl
fnstsw
fidivrl
dec
mov
nop
stc
add
pop
pop
xlat
sub
xor
fpatan
out
cwtl
inc
mov
mov
lahf
and
inc
test
mov
xor
aaa
push
fisttpll
mov
arpl
xchg
popa
push
les
sub
jecxz
divl
xchg
ljmp
push
xchg
jp
pop
ret
negl
mov
adc
jno
inc
subb
aad
mov
loop
adc
pop
mul
and
jne
or
cld
ja
shll
push
pop
inc
in
mov
test
mov
cmp
add
jecxz
inc
test
adc
fdivrl
sub
dec
adc
repnz
lcall
push
sbb
jp
mov
loop
sub
xchg
mov
xlat
xor
lahf
mov
out
mov
jns
out
pop
jne
xchg
mov
jbe
fmuls
nop
ja
fcoml
adc
outsb
loopne
add
inc
xor
pop
lods
sbb
push
andb
sbb
dec
lret
and
js
xor
mov
cld
pop
mov
pop
push
leave
movsl
mov
add
cs
cmp
into
fisubrs
out
out
popa
lods
subl
imull
insb
stos
ljmp
jne,pt
cwtl
push
fisttpl
test
inc
inc
fildll
dec
sub
mov
jl
sbb
adc
push
imul
dec
idivl
mov
push
rolb
faddl
mov
loop
xor
mov
inc
inc
cmp
out
das
inc
and
lods
loope
or
rcll
mov
jbe
push
bsf
push
push
fistpll
dec
pusha
aaa
push
ja
sub
jb
add
les
sub
pop
xchg
mov
ja
idiv
cwtl
sarl
cld
jbe
hlt
and
lods
dec
icebp
movsl
movsb
add
sbb
ret
sub
mov
push
and
into
mov
inc
lret
jno
jge
negl
imul
test
sub
aaa
ss
mov
popf
ffreep
sahf
jp,pt
push
jae
cld
idiv
push
hlt
scas
imul
jl
sbb
sub
loop
divl
mov
or
jle
test
imull
fsubrp
lock
sbb
xor
push
jb
pop
add
pop
cmp
popa
ja
xor
inc
dec
int
imull
sub
fcmovnbe
idivl
xchg
pop
cltd
push
xor
lahf
mov
and
fmuls
test
xor
inc
xchg
cmp
stos
loopne
mov
fwait
xchg
mov
mull
int3
sahf
testl
sbb
testl
xchg
shll
addl
pop
push
push
xor
ds
mov
aad
push
mov
insl
std
loop
imul
mov
movsb
xchg
or
mov
add
pop
push
clc
fbstp
push
cmp
xchg
imul
idivl
push
iret
adc
popa
sbb
imul
adc
pusha
loop
gs
stos
movsb
xor
cmp
mov
div
and
stc
idivl
sbb
outsl
sub
idivl
add
data16
pop
mov
jecxz
call
pop
repnz
sub
in
inc
xchg
lods
mull
cli
out
outsl
notl
fiadds
es
sub
shrl
adcl
ja
push
sbb
fildll
pushf
xorl
out
loopne
loop
dec
testb
lret
xor
sbb
scas
stc
jb
neg
les
out
xor
mov
js
adc
xchg
cmp
xor
pop
add
test
mov
idivl
fwait
jmp
shl
sub
imull
adc
or
neg
andl
xor
insb
or
xchg
pop
test
jb
dec
pop
ss
testb
test
pushf
cwtl
out
jnp
icebp
mov
daa
cs
je
test
adc
push
negl
fs
mov
pop
jbe
ss
cli
pop
fldcw
xchg
sub
dec
push
xor
test
lock
cmc
mov
mov
mov
test
outsb
out
imull
js
sub
in
add
out
testl
sub
pop
sub
jmp
push
push
inc
xor
testl
cmpsb
mov
fdivrs
jo
xchg
inc
push
xchg
imul
sbb
add
xchg
or
jge
xchg
sub
mov
insl
xchg
lods
cld
imull
push
jmp
idiv
aad
fdivrs
and
iret
adc
mov
loope
xchg
adc
and
sbb
mov
sub
jo
lods
pop
xchg
mov
add
adc
test
in
fsub
push
mul
xchg
xchg
and
std
stc
negl
dec
arpl
sub
sbb
dec
sbb
jmp
cmp
imull
cmpsb
out
jp
das
nop
pop
jb
out
loopne
fucomp
mov
cwtl
idivl
dec
aaa
jle
imul
popa
enter
orl
cli
test
divl
repnz
fcmovb
xchg
xchg
mov
pop
jle
xchg
sbb
adc
nop
out
leave
out
push
xlat
stos
push
mov
idivl
xchg
ja
jge
outsl
test
inc
imul
adc
push
bound
divl
outsl
xorl
cmp
fmulp
mov
dec
xchg
test
jne
mov
sbb
out
jecxz
popfw
imul
aas
lea
pop
pusha
add
adc
fistps
or
push
imul
out
inc
movsl
sarl
inc
sbb
fs
xchg
divb
push
repz
or
sbb
ret
jle
out
push
scas
xchg
idivb
pop
dec
xor
shl
or
sbb
hlt
cmp
cltd
test
push
idiv
divb
int
dec
scas
xchg
negl
mov
in
push
xchg
andl
pop
not
cmp
aaa
cltd
mov
test
aam
fisubrl
dec
jns
out
xor
dec
push
out
jl
mov
not
shrb
idivl
mov
test
testl
push
fistpl
mov
jp
and
filds
inc
xlat
jae
mov
js
insb
idivl
pop
stos
repz
inc
in
mov
mov
ds
inc
mov
cmc
fmull
sbb
inc
pop
mov
hlt
adc
rclb
add
fnstsw
fdivs
pop
cmp
fdivp
inc
lahf
cs
push
push
dec
mov
add
gs
icebp
add
xchg
dec
push
shrl
test
adc
sbb
dec
jecxz
cld
lods
scas
pop
cmp
imul
lcall
cmp
je
out
bound
sub
loop
sti
xlat
insb
sub
jne
dec
push
jmp
test
imul
inc
ret
test
ds
sub
jnp
xchg
aaa
sbb
push
xchg
and
cmp
sbb
lods
dec
leave
and
push
repz
in
mov
inc
out
out
das
cmpsb
mov
sub
je
nop
xor
pushf
mull
ss
xorl
inc
je
in
lret
pop
orl
mov
adcb
adc
ret
fcmovnb
cmp
jns
das
mov
xchg
out
fistps
in
xchg
xor
sbb
inc
xor
add
out
fwait
idivl
push
outsl
or
mov
std
out
inc
jo
imul
adc
mov
data16
xor
call
scas
and
push
push
pop
bound
loop
test
stc
insl
imul
inc
out
in
add
mov
repz
xchg
idiv
pusha
push
jne
ss
sub
add
or
mov
data16
sti
lcall
add
add
sub
add
inc
jo
jmp
mov
lcall
xchg
fcmovnb
or
out
je
and
xlat
sub
jmp
mov
js
test
push
jae
movsl
idiv
ljmp
incb
mov
mov
cltd
mov
xchg
sti
push
mov
mov
notl
cmp
arpl
pop
lcall
jb
ja
inc
sti
cmpsl
push
jle
xorl
ret
xor
jl
cmp
xchg
mov
inc
ja
pop
push
in
in
jmp
pop
cmc
adc
divb
fdivr
adc
mov
jp
lods
sub
clc
in
fcmovb
or
push
pcmpeqw
repz
mov
inc
add
mov
cmp
dec
in
sbbb
mov
add
mov
and
imul
ljmp
rorb
je
xorl
and
push
jb
pop
push
cs
aaa
and
popf
mov
jecxz
lret
xlat
scas
clc
sbb
add
mov
test
mov
inc
push
inc
cmp
inc
lods
add
in
xor
jns
sbb
push
cmp
sbb
jp
mov
cmpsl
mov
ds
sub
lds
add
nop
std
inc
xchg
idivl
pop
jnp
sub
push
out
int
push
inc
cmpsb
adc
inc
dec
das
in
nop
loop
pop
xor
mov
divl
xchg
push
stc
popa
je
and
ljmp
imul
xchg
popa
mov
pop
test
fbld
dec
add
lcall
xchg
xchg
or
test
stc
lahf
ret
adc
std
xor
mul
mov
jnp
xor
or
cmpsl
insb
mov
add
mov
movsb
outsl
divl
cmp
xchg
sbb
pop
pop
xor
inc
dec
pop
idivl
sbb
test
sub
std
sbb
and
mov
sbbb
shll
inc
push
sbb
decl
jns
jmp
sub
mov
cmpsb
lcall
jg
dec
enter
negl
pop
pop
icebp
xchg
cltd
or
add
push
fcoms
mov
mov
movsl
pop
idiv
call
stc
pushf
adc
ret
mov
sbb
mov
or
inc
inc
cmpsb
int3
mov
mull
popf
lret
xchg
push
imul
inc
clc
push
add
sbb
xchg
mov
cs
and
mull
cmc
unpckhps
mov
out
aas
add
icebp
mov
lret
inc
test
cmp
push
aad
sub
fsubrl
test
sub
iret
fucom
mov
mov
cmp
or
mov
insb
ret
dec
mov
pop
sbb
notl
mov
mov
xlat
xchg
xor
add
pop
ss
movb
loope
or
lods
testl
icebp
test
jne
mov
xor
dec
xchg
je
mov
mov
filds
movsl
xlat
gs
sbb
je
arpl
adc
pop
out
mov
fs
sti
out
ljmp
insb
adc
cmp
xchg
xchg
divl
inc
cmpsl
mov
mov
mov
mov
stos
add
sub
inc
inc
mul
rcl
lds
sub
notl
adc
cltd
push
idivl
cmp
leave
adc
mov
incl
testl
sarl
es
cs
push
xchg
xchg
adc
xchg
pop
push
pop
mov
call
test
jno
push
negl
les
xor
jae
jo
xorl
and
adc
adcl
dec
mov
push
adc
fisttps
add
div
mov
ret
mov
add
mov
arpl
fsubp
outsb
push
xor
aam
pop
shl
jbe
out
xchg
mov
leave
insb
mull
orl
mov
out
dec
imul
negl
mov
sbb
add
hlt
jns
jl
daa
jle
sub
dec
mov
fstl
test
inc
lock
jnp
dec
idiv
sbb
mov
pop
cmp
scas
and
repz
xor
mov
mov
data16
out
scas
and
cmp
mov
call
lods
cs
in
je
xchg
pop
push
sbb
movsl
sbb
mov
jmp
pop
out
int3
out
cmp
xor
mov
movsl
and
ja
dec
stos
pop
enter
push
loopne
adc
jbe
cmp
mov
sub
out
enter
testl
add
push
mov
mov
jg
out
jmp
int3
pop
xor
inc
jp
push
negl
aad
adc
addr16
jle
fiadds
xor
cmp
and
mov
xor
ja
fisubl
cltd
mov
pop
jnp
xchg
or
lret
or
xchg
xchg
lret
es
xlat
aas
cmpsl
lahf
rcr
pop
push
add
scas
push
repz
adc
mov
xchg
enter
lahf
and
imull
pop
push
cli
fld
cwtl
cmp
loopne
out
mov
mov
fisttpll
sahf
jne
push
mov
sbb
sbb
divl
adc
push
fadds
xchg
pop
pop
lret
xchg
adc
in
testl
xlat
ljmp
das
std
push
repz
xor
inc
pop
cmp
xchg
push
cmpsb
inc
cs
jp
incb
sbb
mov
neg
insb
xlat
add
cmp
or
push
cwtl
cmp
xchg
negl
mov
ror
xchg
mov
out
lahf
cs
mov
test
icebp
pop
pop
loope
push
add
rcrl
loop
jmp
ss
fstl
daa
fs
mov
cmp
neg
pop
jbe
pushl
cmpsl
pop
js
aas
mov
in
jp
lods
unpcklps
cmpsb
or
fbld
bound
fiaddl
jmp
jo
ja
or
int3
xor
std
pop
fldcw
notl
addr16
lds
mov
jl
test
mov
aam
dec
mov
sbb
inc
mov
notl
out
jne
inc
repz
lods
mov
testl
xor
adc
mov
ret
add
cltd
jno
into
dec
sbb
repnz
leave
xor
xchg
inc
out
rol
lcall
mov
fsubs
push
mov
sti
adc
ljmp
dec
push
ret
push
test
out
imul
and
ss
pop
jae
xchg
pop
inc
cmpsb
notb
loope
test
sar
mov
jns
call
shll
mov
testl
enter
lahf
ljmp
idivl
das
xorl
in
in
in
mov
loope
loope
leave
test
xlat
bound
fwait
and
add
jnp
or
shrb
popa
test
cmc
jle
mull
test
leave
idivl
int
xor
stc
ffreep
add
jmp
out
sti
xchg
imul
aam
pop
cmp
push
cli
out
shll
mov
cmp
andl
divl
xchg
jg
testl
ret
xchg
outsb
and
or
jb
ss
int
mov
pop
push
repnz
xchg
fdiv
iret
aad
sete
jnp
idiv
adc
inc
inc
fwait
shlb
lock
and
cmp
mov
aam
in
pop
mov
fdiv
add
inc
push
pop
out
mov
xor
mov
push
jg
imull
ret
sbb
mov
xchg
adc
negl
push
aad
add
divl
inc
mov
adc
cmp
pop
xlat
stos
sub
mov
pusha
icebp
push
inc
div
int
js
test
pop
adc
inc
inc
pop
dec
jo
xor
mov
jmp
push
cld
cmp
adc
jnp
repnz
xor
pop
icebp
je
mov
add
adc
daa
cld
call
and
jns
sbb
insb
push
insl
notl
mov
sbbl
jp
add
lds
ja
insb
xchg
pop
and
inc
xchg
loope
imul
xlat
std
clc
push
mov
pop
adc
dec
mov
pop
ret
loopne
imul
decl
mov
fwait
sub
adc
pusha
dec
mov
lods
nop
rcl
fldt
xchg
bound
pminub
repnz
mov
cmc
xor
mov
in
stc
shlb
push
pop
cli
aam
xchg
aad
and
push
jno
nop
test
pusha
cmp
not
dec
inc
mov
roll
cs
jmp
push
repz
stos
pop
xor
pop
in
test
imull
loopne
add
jns
sub
jo
mov
lods
pop
out
imull
cmp
or
pop
dec
cmp
shrb
roll
push
pop
xlat
pop
sub
push
repz
xchg
fcomi
pop
sub
ss
ret
lock
pop
or
or
sub
lock
cmpsb
divl
sbb
mov
roll
pop
cmp
xor
jg
push
pop
jne
test
int
pop
fsubl
mov
jo
xchg
add
testl
sub
pop
or
mov
testl
cvtps2pd
cmp
inc
lods
xlat
xlat
mov
push
roll
idivl
ss
add
pop
and
cmp
sbbb
dec
idivl
mov
dec
popf
out
inc
pop
xchg
hlt
fdivp
inc
scas
in
lcall
std
aaa
seta
sub
insb
test
scas
das
lret
rclb
xchg
add
out
push
xchg
inc
xchg
sub
dec
divl
es
ret
xchg
inc
xlat
out
mov
outsl
xor
movl
repz
xor
pushl
iret
sti
pop
adcl
sbb
call
xor
inc
loopne
jg
pop
jp
xchg
jb
jnp
sbb
xchg
cmp
mov
inc
sub
loop
and
pop
push
aaa
js
xor
pop
pop
pop
lcall
inc
xor
mov
in
xchg
sub
cmp
mov
popa
div
or
xchg
neg
rclb
notl
mov
mov
movsb
dec
ljmp
sub
scas
mov
sbb
sbb
xor
imull
jne
popa
push
add
negl
stos
insb
mov
pusha
imul
xchg
sbb
enter
pop
hlt
int3
push
jne
testl
mov
fdivs
notl
out
imul
cmpsb
jne
cwtl
out
mov
ss
and
repz
xor
negl
xor
push
idivl
jl
pop
pop
mov
loop
mov
dec
mov
mulb
jecxz
mov
inc
mov
or
and
sbb
sub
subb
lods
aaa
mov
pop
cmp
push
scas
jne
or
into
dec
xor
repnz
loopne
sbb
clc
out
std
call
mov
insl
dec
or
mov
ljmp
ret
les
test
or
addr16
push
push
adc
mov
sarb
xchg
xchg
addr16
mov
cmp
lods
dec
sub
mov
ficoml
cmpsl
andl
fucomi
test
push
loop
pushf
fcomip
mov
adc
in
cmp
sbb
scas
dec
pop
xchg
dec
pop
orb
jne
stos
adc
pop
mov
fcmove
mov
fbstp
push
jle
jb
fwait
pop
push
lods
mov
xchg
out
push
or
dec
fisubrl
aaa
in
adcl
push
jnp
mov
lcall
scas
dec
int3
jl
in
add
and
lods
jns
cmp
xchg
int
cli
daa
enter
ljmp
les
outsb
jmp
push
xchg
gs
cltd
mov
inc
jle
cmp
sbb
ljmp
sbb
out
jge
and
loopne
push
movsl
xlat
jg
and
fs
cltd
aad
inc
dec
mov
mov
mov
cmpsl
jmp
ret
cmp
loope
jl
in
hlt
loopne
push
lods
or
add
sub
xchg
pop
ret
jne
lods
jmp
cmpsb
xor
inc
or
movsl
out
les
ljmp
outsl
add
mov
mov
sub
mov
cltd
es
mov
inc
sub
sti
jl
and
jl
jmp
sub
divl
xor
in
xchg
xchg
mov
push
out
mov
xor
mov
adc
out
push
cmp
mov
jno
sub
notl
mov
mov
notl
imul
ss
xor
xor
push
and
into
pop
adc
xchg
pmaddwd
in
jecxz
pop
and
xor
mov
mov
pop
jmp
idivl
mov
mov
adc
vpaddsb
cmpsb
adc
addr16
fidivl
out
icebp
sub
xlat
arpl
inc
ret
imull
aaa
mov
testl
mov
cmp
lcall
adc
les
sub
adc
pop
mov
stos
xor
push
notl
or
out
gs
fwait
mov
pop
fimull
idivl
cmp
adc
jnp
out
test
lcall
stos
sub
pusha
divl
or
pop
testl
inc
aam
add
sub
xchg
mov
mov
pusha
imull
lret
xlat
es
pop
inc
fninit
jecxz
enter
jns
and
xchg
cmpsl
sub
mul
pop
sub
hlt
and
xchg
test
sahf
je
xor
insb
cs
aad
or
push
jg
xor
in
hlt
shlb
xor
out
out
ret
das
jg
add
test
aas
cmp
sbb
call
fcompl
xor
jne
out
xchg
divl
lods
xor
adc
mov
movsb
fldl
data16
loope
mov
in
testl
mov
mov
hlt
and
add
mov
movl
repz
fnstenv
mov
aad
fmuls
out
nop
imul
push
negl
incb
loopne
inc
divl
push
out
push
sti
cmp
ds
jne
testl
data16
enter
xor
push
test
mov
cmp
cs
fistpll
mov
dec
cli
xchg
inc
les
mov
add
sub
sub
int3
and
or
cmpsl
push
aad
mov
xchg
and
shl
imul
cmc
dec
dec
lods
gs
or
pop
js
ljmp
mov
pop
fistps
pusha
cmp
fsubr
jge
repz
lahf
pusha
fisubrl
adc
outsl
scas
nop
mov
adc
sbb
mov
pop
jmp
imul
mov
rcll
cmp
and
mov
jecxz
xor
xchg
lds
jmp
outsb
pop
push
clc
sub
stc
pop
xchg
aaa
adc
dec
mov
inc
roll
cmp
sbb
sbb
ja
xor
fmuls
dec
ja
in
bound
test
sub
or
xchg
jo
dec
pop
out
in
mov
in
or
scas
incb
testl
pop
loope
mov
push
fsubrp
dec
outsl
int
and
ffree
and
pop
xchg
mov
jb
xchg
mov
scas
sbb
into
fcoml
pop
fistps
jmp
cmp
insb
lds
cmpsl
jne
dec
xchg
and
jge
stos
int
xchg
jb
or
out
out
stos
aaa
mov
add
cmp
cmp
adc
or
mul
ljmp
ja
push
push
scas
sbb
aas
jg
inc
and
xchg
loope
out
cmp
jle
pop
xor
mov
iret
mov
outsl
loop
jne
gs
xor
fs
in
fidivrl
fldl
outsl
adc
lods
out
pop
or
adc
nop
repz
std
fbstp
jo
cmp
aaa
jecxz
sbb
popf
sbb
cmp
xor
stos
cmc
xchg
xor
mov
addb
mov
push
out
out
icebp
ljmp
sbbl
mov
fsubrp
and
and
xlat
fistps
hlt
xor
imul
xchg
xchg
daa
or
out
shr
jle
sub
xchg
mov
outsb
mov
movsl
ss
push
xor
mov
ljmp
mov
out
stc
in
and
mov
or
push
mov
xor
and
iret
mov
sar
out
xlat
jns
mov
mov
lods
pop
ss
aas
mov
jecxz
jno
inc
sub
pop
sub
push
push
lds
fiaddl
mov
jecxz
and
or
scas
out
fcmovbe
mov
and
xchg
sub
sub
in
pusha
mov
sbb
dec
enter
test
dec
scas
push
cmp
inc
mov
rcl
dec
imul
xchg
cs
inc
dec
adc
repnz
mov
ret
push
out
mov
xchg
pushf
sti
pop
cli
jns
mov
push
in
or
or
fadds
push
mov
xchg
push
cmc
stc
cmp
mov
outsl
sub
lds
and
cli
aas
cmp
cld
sub
cmpsb
xchg
mov
jbe
movsb
mov
fwait
add
es
repz
test
clc
or
insl
push
das
and
inc
fisubs
ljmp
mov
fs
fstpl
jg
mov
cmc
pop
adc
mov
loop
jmp
jne
push
stos
test
dec
dec
in
jae
or
jae
addr16
lods
mov
cmp
add
lgs
jo
int3
or
sub
push
push
dec
ljmp
inc
jb
sbb
cmpsb
sti
cli
adc
subb
cwtl
fistl
rcll
fldenv
roll
fwait
pop
push
mov
or
xorb
cmc
daa
jno
xor
lcall
out
js
jne
and
fldenv
in
push
mov
cmp
scas
push
shll
rcrb
test
repz
inc
jb
mov
jb
shll
out
ljmp
stos
sub
jo
sub
cmp
dec
fs
pop
data16
hlt
sub
test
cmp
js
or
xchg
call
and
pop
out
mov
sbb
jg
sub
out
cmp
testb
cltd
mov
add
lods
or
mov
int3
stos
cmp
mov
ljmp
and
icebp
imul
mov
pop
adc
lret
sbb
push
push
push
shll
mov
lcall
insl
jnp
test
adc
pop
or
imulb
cmp
adc
sub
xchg
mov
ficoml
mull
mov
sub
outsb
pop
insb
inc
pop
movsl
stc
roll
xchg
test
or
push
jne
pop
lahf
loopne
daa
lret
xchg
insl
cmpsb
jge
mov
insl
lock
lods
ljmp
or
and
pop
fxch
loopne
mov
xor
loope
cmpsb
and
dec
lods
xchg
cltd
pop
mov
inc
call
jo
fisubrl
mov
das
lods
mov
nop
jmp
lret
test
and
jmp
cmpsb
inc
dec
sbb
fwait
adc
xor
cmp
cwtl
mov
repz
sbb
cld
mull
inc
and
xlat
mov
pop
iret
in
test
jo
sbb
or
aas
push
sbb
xchg
pop
and
roll
xor
inc
xchg
in
add
das
ficoml
mov
jmp
adc
loopne
popf
mov
xlat
mov
ljmp
repnz
jns
std
dec
cmpsl
scas
and
mov
cmp
jne
imul
mov
fwait
jmp
repz
xor
ficompl
push
sub
push
push
add
dec
add
out
mov
jmp
aas
sbb
out
xchg
fcmovbe
mov
add
jge
xchg
loopne
mov
sub
mov
js
adc
cmc
cwtl
push
fnsave
hlt
aad
out
out
rcll
mov
jbe
lods
fnstenv
out
mov
rorl
mov
loop
pop
adc
movsb
bswap
stos
pop
out
fwait
jo
fimull
add
bound
and
push
fiaddl
aam
lea
leave
push
andb
mov
push
jno
jge
inc
mov
mov
pop
mov
es
push
imul
mov
out
sahf
fcomip
mov
into
dec
sti
cmc
shlb
cmp
xchg
add
sub
loop
dec
pop
in
pop
clc
icebp
xor
insb
fdivrl
xchg
jmp
or
cld
or
mov
dec
adc
add
test
bound
pop
pop
out
lock
test
fisubrs
testl
in
imull
xlat
adc
das
xor
fdivl
popf
ja
test
ds
inc
inc
mull
mov
or
shr
jge
gs
nop
int
dec
jns
adc
jle
iret
out
hlt
negl
scas
pop
sbb
push
cmp
test
xchg
pop
mov
fldcw
js
repnz
mov
mov
testw
insl
arpl
mull
int3
inc
add
cmp
or
adc
sbb
jns
push
cs
pop
in
sbb
jbe
fisttps
jae
idivl
out
push
add
push
neg
shlb
dec
ror
pop
xchg
mov
mov
testl
cmp
inc
call
jmp
mov
int3
sub
ret
movsb
jmp
insb
pop
testl
loope
jg
adc
push
lods
testl
inc
subl
out
out
xchg
cwtl
repnz
jo
xchg
rorl
test
cmp
icebp
out
sbb
cmp
pop
insl
and
stc
pop
mov
jp
pop
adc
repz
add
stc
xor
adc
pop
fistpl
jp
jge
cmp
loopne
or
mul
nop
notb
icebp
in
push
dec
rclb
or
inc
fdivrp
push
xlat
sahf
mov
out
sub
stos
pushf
mov
xor
add
enter
testl
cmp
mov
push
in
divl
adc
add
push
add
sar
cmpsb
aam
jb
sbb
jnp
ds
sbb
mov
or
or
mov
ss
stos
sbb
sub
lock
xor
fs
pop
adc
test
mov
xor
pop
pop
rcrb
xchg
push
in
or
sbbl
jp
testl
xchg
xchg
mull
std
mov
pop
outsb
imul
aaa
pop
es
mov
cmp
xchg
leave
ja
outsb
mull
mov
inc
xor
mov
movb
push
loope
neg
arpl
sbb
daa
imul
xchg
fdivl
xor
loop
push
stc
xor
mov
les
scas
iret
jmp
jne
and
inc
into
aad
xchg
sbb
xlat
mov
xchg
pop
test
sub
xchg
lahf
adc
cli
fnstenv
out
cmp
data16
push
cld
cltd
movsl
idivl
inc
xchg
push
adc
cmp
in
mov
xor
cmp
subb
jp
inc
test
ja
not
sbb
xchg
ja
sbb
jmp
out
adcb
jmp
jnp
ficomps
mov
fs
mov
imull
sti
adc
dec
cli
mull
mov
xor
outsb
test
or
push
xchg
popf
sub
mov
sarl
sbb
jo
xchg
stos
std
pop
mov
and
add
jne
lcall
cmp
lock
sbb
xchg
ss
insb
scas
dec
fdivrl
loope
lds
mov
xchg
mov
test
repnz
xchg
jne,pt
aad
mov
fwait
cmpsl
popa
dec
es
push
dec
dec
imul
shll
adc
xchg
mov
hlt
fcoml
xchg
cwtl
xor
mov
mov
xchg
sub
and
int
add
mov
xor
test
fstps
mov
or
jp
popf
idiv
dec
roll
mov
push
in
mov
jge
sub
into
lahf
push
xchg
pop
inc
out
test
add
ret
notl
fcoml
xor
ret
icebp
xor
leave
testl
aaa
jle
idiv
mov
sub
divl
ja
sub
gs
out
dec
mov
mul
jmp
mov
shll
in
std
pop
sbb
hlt
add
lods
jp
push
outsl
jbe
xchg
push
fs
xor
testl
mov
xor
mov
testl
movsb
dec
jne
add
stos
lcall
dec
jp
ss
or
pop
pop
xor
mov
push
iret
dec
divl
daa
icebp
fcomi
dec
sub
jp
test
inc
pushf
inc
negl
scas
cmp
mov
sub
lahf
les
mov
jp
mov
cmc
mov
adc
test
out
movsl
mov
dec
icebp
out
jbe
stc
mov
and
fistl
mov
testl
jecxz
cmp
pop
pop
and
test
orl
inc
pop
cmp
daa
gs
cmp
or
stc
testl
cltd
pop
arpl
out
mov
mov
dec
fbstp
not
loope
divl
fs
imull
ret
sbb
mov
mov
shl
xchg
pop
xorb
inc
je
fsub
scas
jle
aam
sbb
aaa
xchg
les
stc
cmc
ret
nop
sbb
in
out
jns
insb
or
add
inc
les
out
xlat
inc
lods
clc
dec
jl
pop
push
fisttps
xor
inc
negl
push
push
inc
neg
mov
sbb
add
imul
xor
rcll
fxch
icebp
jg
imul
add
sub
cmp
and
pop
fidivs
divl
icebp
push
mov
push
gs
testl
mov
ffreep
inc
fstl
push
mov
mov
andl
sub
push
mov
out
ja
and
js
mov
push
idivl
sub
mov
in
inc
jmp
testl
mov
in
jge
test
xchg
lea
imull
movsb
adc
and
testl
xchg
push
inc
sbb
aam
jecxz
jno
push
sahf
aaa
push
mov
dec
gs
push
out
aam
idiv
mov
cmp
sub
pop
addb
push
ror
out
xchg
scas
or
push
sub
sbb
xor
cmp
insb
push
xlat
cli
sbb
inc
das
mov
jge
and
add
idivl
inc
test
cmp
mov
notl
xor
rcrl
mov
stc
dec
int3
pop
in
mov
xchg
aaa
mov
push
xchg
leave
and
jl
push
call
dec
xor
inc
aaa
lcall
xchg
fwait
lret
and
stc
pop
inc
jle
insb
aad
pushf
xor
pop
and
add
jmp
mov
sbb
out
pop
mov
dec
sub
cs
imul
jmp
stos
adc
leave
out
out
and
sbb
add
bound
push
jnp
or
pop
mov
les
jecxz
cli
test
inc
idivl
sarb
imul
mull
ret
aas
in
inc
imull
pop
cltd
in
and
negl
cwtl
ret
mov
ja
inc
pop
leave
jp
ljmp
jge
sbb
lods
lcall
push
inc
push
and
fs
cmpsl
mov
negl
fidivrl
jo
push
mov
out
pmaddwd
jb
fs
sti
cs
testl
rclb
xchg
dec
and
ss
jge
mov
pop
sbb
add
mov
pop
cmpsl
imull
jmp
mov
mov
sbbb
xchg
mov
fstl
jge
cmp
xor
add
or
repnz
testl
ja
fnstsw
idiv
mov
sbb
fadd
negl
lock
mull
mov
xor
and
addb
adc
clc
test
mov
sti
notl
ljmp
pop
pop
jmp
and
cmp
push
neg
sti
dec
insl
sub
xchg
je
dec
in
and
xor
les
out
outsl
int
mov
stc
mov
dec
int3
divl
add
xor
inc
ds
and
lret
hlt
shll
testb
mov
mov
mov
ja
repnz
das
adc
ret
push
outsl
mov
xchg
repz
in
in
pushf
inc
imul
mov
mov
mov
or
test
adc
mov
pop
dec
movsl
notl
push
sub
imul
arpl
push
xlat
lret
inc
lret
adc
in
xchg
testl
push
mov
in
stos
negl
xor
dec
push
mov
adc
roll
dec
js
testl
mull
xor
adc
mov
stc
rolb
bound
fildll
add
jmp
mull
in
jns
ja
xor
mov
sub
xor
pop
js
mov
notl
fs
mov
mov
mov
mov
pop
xchg
push
in
fucomi
negl
sub
sti
adc
cs
xchg
pop
xlat
arpl
mov
fchs
push
divl
gs
insl
addr16
pushf
mul
loop
adc
xor
lret
daa
out
add
xchg
arpl
inc
mov
loope
je
imul
stc
jo
push
stos
cmp
idivl
mov
mov
mov
jmp
inc
adc
loop
adc
divb
aas
int
test
ljmp
repz
dec
dec
out
lahf
cltd
mov
xor
inc
fcoml
mov
divb
loop
xor
pop
push
inc
cmpsb
add
add
jmp
pop
jae
or
cmp
xchg
loopne
jne
ss
xor
ljmp
scas
xchg
dec
cmp
xor
mov
js
popa
imul
mull
rcrl
popl
fisubrl
repz
outsl
pop
and
jb
push
movsl
aas
mov
rcrb
mov
jecxz
push
mov
add
sub
push
mov
je
inc
fidivl
fwait
xor
iret
pop
jb
jae
mov
mov
ljmp
incb
orl
div
hlt
inc
jb
push
xchg
leave
icebp
ljmp
cmp
fists
cli
pop
scas
leave
mov
divb
and
pushf
inc
mov
mov
imul
movsl
jo
add
out
icebp
ljmp
outsb
inc
movsl
add
adc
and
push
adcb
jge
jmp
add
jne
in
cli
ss
push
sti
adc
cltd
xorl
fs
inc
jb
jno
cwtl
xchg
add
bound
int
fwait
xchg
mov
mov
nop
jle
das
add
and
cwtl
loop
jbe
mov
add
movsl
xor
mov
mov
jp
pop
mov
and
sub
sbb
stos
xchg
ret
aaa
mov
and
repz
test
out
loop
push
push
cmpsb
xchg
into
dec
ljmp
mov
scas
pushf
pop
fxch
sub
push
ljmp
dec
insl
xor
mov
aad
les
hlt
sarb
sub
push
pop
out
addb
aas
mov
fucom
in
scas
fs
push
sub
pop
inc
xor
push
xchg
ds
mov
jmp
clc
push
daa
mov
and
sub
xlat
cmpsl
push
shll
fs
jno
popf
jmp
testl
push
loop
push
fisubrl
shlb
jle
push
mov
cltd
rorl
inc
shl
push
xchg
stc
dec
jg
push
push
dec
mov
pop
es
divl
xor
in
test
push
aad
testl
into
rcrb
shl
sti
mov
xor
mov
xlat
and
mov
lds
mov
testl
xchg
stos
xchg
scas
inc
neg
and
sub
pop
test
pop
loope
jg
idiv
push
jle
push
cmp
push
adc
adc
inc
add
testl
mov
lock
inc
xlat
sub
fwait
jbe
cwtl
jo
lods
shll
pop
outsl
pop
mov
and
jae
inc
addr16
xlat
fldenv
pop
sbb
jae
notl
adcb
lds
push
idiv
mov
dec
pop
xchg
xor
in
popf
mov
hlt
sub
sub
or
nop
ss
ja
jmp
mov
xor
push
pop
jl
or
jge
lret
lods
lcall
rorl
pushf
add
xchg
cmp
push
cmp
imull
pop
xor
push
test
test
inc
int
cli
xchg
lods
jo
fists
sub
sahf
push
sbb
repz
add
push
jmp
repz
in
repz
roll
icebp
pop
pop
out
inc
je
das
fildll
orl
mov
xor
and
shl
xchg
popa
cmp
testl
nop
mov
cwtl
stc
or
xchg
sbb
imul
lret
pop
test
in
pop
cmp
dec
and
adcl
pop
cmpsb
imul
divl
daa
or
and
cltd
iret
pop
mov
repnz
xlat
mov
lods
jmp
dec
mov
int3
rcr
je
jb
xchg
cmpsb
adc
or
and
ljmp
mov
add
sub
adc
into
adc
imul
dec
adc
imul
jno
mov
loopne
jl
sub
in
hlt
xchg
xchg
xchg
fnstenv
incl
stc
hlt
mov
sbbb
mov
mov
testl
mov
mov
and
add
enter
fucom
dec
icebp
stos
dec
push
add
sub
dec
cmp
push
bound
loop
inc
mov
sub
mull
js
mov
xchg
les
add
mov
aad
adcb
fists
push
ret
push
xchg
mov
xchg
call
loopne
cmpsl
cs
xchg
sti
fstpl
add
sub
cs
in
push
ljmp
adc
imul
dec
mov
imul
icebp
mov
mov
mov
out
sub
inc
out
jb
inc
mov
in
jb
dec
xor
outsl
xchg
sbb
xor
pop
imul
xchg
mov
out
pop
lods
push
sbb
and
out
sub
push
add
cmp
dec
jb
aad
xchg
pusha
pop
cmp
out
dec
test
movsb
in
sbb
cmc
xchg
aaa
mov
push
imul
cltd
test
mov
cld
stos
pop
push
sbb
xor
sub
pop
mov
jle
mov
xchg
in
lea
sbb
daa
notb
mov
xor
mull
out
adc
shrl
xchg
out
lock
out
out
sub
xor
dec
pop
sahf
xlat
ret
push
xchg
fadds
mov
iret
pop
arpl
and
adc
ljmp
fidivl
ja
push
jno
vmovdqu
stos
jmp
adc
pushf
cmp
pop
mov
mov
jl
cmc
out
in
cwtl
sbb
jmp
mov
sbb
ljmp
dec
out
pop
ficomps
into
dec
pop
sbb
jo
and
mov
mov
std
add
or
repz
int3
xchg
fcmove
scas
pop
xchg
or
mov
adc
cmc
jne
ljmp
fcomps
jae,pt
repnz
mov
aad
push
pop
pusha
notb
in
in
out
cld
mov
push
addr16
movsl
xchg
pop
push
repz
jl
sbb
cltd
sar
aaa
imul
inc
scas
ret
xchg
cmp
pop
dec
jl
xor
add
cltd
test
pop
mov
mov
mov
pop
pop
push
fisubrl
mov
add
mov
sub
fbld
add
lcall
lret
pop
sbb
mov
addr16
ss
notb
pop
pop
test
in
or
sbb
xor
repz
mov
mov
sbb
jbe
out
loope
jne
outsb
jp
lods
mov
out
ffree
cmpsb
sub
in
mov
ljmp
clc
fistl
adc
sbb
mov
xchg
and
sub
scas
out
and
daa
rolb
jb
notb
enter
into
jae
cmp
mov
inc
fdivrs
sub
cmpsb
jbe
xor
ljmp
movsl
mov
call
je
ds
dec
or
dec
out
xor
imul
lock
ljmp
rclb
shrb
popa
jp
scas
adc
and
ja
ljmp
pop
or
or
jmp
pop
shl
xor
stc
cmp
les
push
pop
test
outsb
fnsetpm(287
sbb
mov
in
pop
jns
aaa
fwait
into
pop
in
jo
xchg
nop
inc
lahf
cmp
or
inc
aad
xchg
outsb
dec
fs
inc
leave
xchg
jbe
sahf
push
repz
loopne
mov
sbb
or
prefetcht0
inc
sbb
movsb
cmpsb
mov
in
push
inc
mov
and
lods
cwtl
mov
push
imul
into
jp
das
and
stc
mov
divl
jb
push
test
pop
or
fcomip
into
mov
adc
notl
mov
jns,pt
nop
idivl
fisttpl
jle
cli
ljmp
pop
lods
sbb
clc
mov
notl
int3
pop
mov
xor
sbb
jmp
testl
pop
ds
in
mov
neg
pusha
xchg
mov
dec
pop
jg
cli
ja
das
out
and
lret
cmp
mov
arpl
fstp
pop
cmp
neg
mov
push
divl
mov
xchg
fmull
leave
aad
movb
dec
mov
not
mov
fistpl
mov
out
out
inc
stos
mov
arpl
pusha
fldl
pushf
sbb
mull
call
enter
push
xor
or
cmc
mov
out
pop
arpl
lods
es
dec
ljmp
push
xlat
fnsave
add
divl
sbb
test
loop
lock
ss
lods
in
arpl
fnstcw
neg
sub
xlat
push
scas
adc
mov
pop
push
jge
pushl
inc
jne
in
cmpsl
sbb
in
mov
xlat
mov
sbb
pop
jg
fisubrl
cmpl
fisttps
neg
inc
das
jl
icebp
repz
push
test
testl
xorb
mov
xor
pop
stos
add
loop
out
pushf
dec
das
aam
movsl
negl
lock
loope
jg
dec
daa
mov
and
imul
sbb
mov
pop
add
mov
lock
repnz
mov
loopne
xor
mov
out
mov
test
mov
lret
aas
insb
inc
sbb
adc
faddl
testl
jp
inc
imul
cmp
icebp
jmp
xlat
scas
push
jo
push
xor
inc
cmp
js
test
call
popa
dec
cmp
into
pop
xchg
notl
lahf
les
ret
fisubs
stos
mull
mov
mov
movsl
retw
dec
out
in
and
mov
pop
pusha
idivl
test
lcall
mov
pop
mov
divl
cvtps2pd
test
int
jmp
cmp
push
out
sub
jns
or
push
out
insl
adc
int3
dec
inc
xchg
idivl
repz
ss
enter
negl
data16
cli
int3
shl
cltd
cmpsl
cmp
iret
loopne
divl
mov
in
not
mov
xlat
inc
push
sbb
ja
push
mov
pop
push
popf
pushl
shlb
aaa
fwait
rorl
push
push
inc
jmp
fildl
xchg
out
adc
mov
mov
cli
mov
and
cmp
lds
div
inc
addl
in
outsl
aaa
mov
das
push
jecxz
cli
sub
int3
mov
inc
push
adc
jno
repnz
push
cmp
out
mov
cltd
divl
call
mov
fdivs
divl
gs
shlb
dec
daa
pop
in
jns
xchg
xchg
pushf
loopne
lahf
cmp
pop
or
cld
lcall
imull
jle
fwait
inc
je
idivl
xchg
clc
jbe
cmp
xchg
fisttpll
inc
insl
push
jne
cmc
jecxz
stos
and
inc
pop
shlb
rcll
fbstp
pop
jmp
fists
mov
mov
mov
repnz
sahf
mov
notl
sub
add
jno
testl
jecxz
mov
and
xchg
mov
adc
or
and
out
pop
into
mull
jnp
sbb
pusha
aaa
shl
enter
mov
adc
sbbl
push
cld
aad
and
sahf
lds
scas
shl
cmc
and
dec
push
push
xor
mov
stc
testl
sbb
add
dec
push
fucomip
fcomip
lea
mov
sbb
test
push
data16
mov
sbb
dec
push
xchg
in
xchg
inc
dec
out
not
les
adc
ja,pn
icebp
pop
testl
orl
ds
sub
jecxz
jp
mull
pushf
push
cmp
adc
mov
movsb
pop
jmp
mov
mov
movsl
and
and
pop
int3
dec
dec
mov
or
push
sub
scas
loop
ljmp
jnp
fwait
sub
ljmp
push
lahf
in
lds
lahf
and
hlt
repnz
fldt
inc
cmp
and
jl
lcall
and
adc
les
add
xor
test
cwtl
hlt
arpl
and
and
push
cmpsb
dec
sub
fidivrs
ss
imul
and
repz
outsb
mov
dec
insl
inc
iret
and
scas
mov
test
cmp
xchg
loope
cli
xor
jb
pop
add
enter
addr16
lds
pop
sbb
std
pop
inc
sarl
mov
and
dec
test
in
mov
xor
jae
nop
push
sahf
aas
stc
test
jle
mov
dec
sub
mov
andl
dec
mov
pop
inc
push
jecxz
popf
pop
add
sbb
fisubrs
neg
aas
xchg
ja
arpl
mov
sbb
lret
ljmp
ljmp
daa
out
mov
popl
adc
jp
jge
dec
shrb
out
cmpsl
rcll
fsubrp
insb
into
inc
in
out
lcall
lods
data16
ja
mov
stos
pop
xchg
loope
lds
xor
pop
xbegin
or
pop
xchg
and
lods
mov
mov
leave
repz
adc
shrl
into
xchg
adc
and
jecxz
add
adc
stc
jmp
frstor
cltd
cld
mov
in
adc
mov
xchg
mov
stc
not
int
out
mov
mov
stos
push
leave
fidivs
dec
cs
mov
cmc
push
test
inc
mov
push
add
or
fsubr
insl
xor
push
and
mov
loop
fnstsw
not
and
mov
add
std
lcall
sub
into
push
mov
arpl
xchg
arpl
cs
mov
xor
jne
insl
jmp
xor
popa
daa
fsubp
inc
data16
popa
out
dec
int3
xchg
mov
inc
rcrb
repnz
mov
or
je
adc
xor
inc
add
ds
push
add
sahf
fwait
in
shrb
xchg
ret
out
pushf
lret
mov
and
lcall
mov
push
subl
xor
adc
aam
and
xchg
lahf
jp
mul
inc
push
mov
jae
jo
loopne
out
jmp
xor
pop
pop
mov
jmp
imull
loopne
mov
sub
xchg
jecxz
xor
xor
sub
mov
pop
mov
stos
mov
ja
pop
pop
pop
sbbb
xchg
xor
xchg
lret
dec
sub
lahf
sahf
popf
dec
push
out
daa
dec
or
mov
push
and
imull
dec
push
mov
mov
test
lods
jmp
add
dec
or
push
add
jne
scas
xlat
mov
arpl
neg
popf
jne
xchg
xchg
negl
movsl
sbb
jge
stos
jns
or
push
js
and
das
cmc
sbb
jecxz
sbbb
mov
mov
testl
adc
divl
popa
sub
sub
not
jle
sbb
ds
stc
xchg
push
int3
loop
insl
jecxz
cmpl
in
push
fimuls
mov
leave
out
and
mov
negl
push
aam
ljmp
jbe
sti
xchg
pop
imull
aaa
inc
lods
enter
xlat
test
xor
std
and
jbe
and
mull
fdivl
adc
ds
add
cld
mov
push
cmpl
adc
sbb
aas
movntps
or
out
mull
sbb
out
jp
jmp
inc
inc
imull
push
lret
or
pop
lods
cs
add
jb
ds
pop
das
outsl
adc
or
rclb
sti
outsb
sub
pusha
scas
jno
jmp
xchg
dec
stos
leave
xchg
and
or
fincstp
lea
fbld
hlt
xchg
jno
lcall
mov
cwtl
imul
into
jle
sub
inc
cmp
idivl
addr16
pop
push
jo
sub
in
add
adc
cmp
shl
testl
cmp
or
jl
jge
pop
ds
mov
dec
sbb
cltd
les
inc
inc
sbb
cmp
and
adc
add
adc
testb
cld
dec
pop
ja
outsb
imul
lret
shl
out
subb
and
and
push
lea
neg
stos
cmp
mov
adc
mov
cmpsb
pushf
stc
dec
scas
test
testl
cltd
push
divl
xor
mov
or
cli
loop
pop
lock
lret
mov
test
fcmovu
sbbb
negl
dec
int
int3
push
shl
jmp
cwtl
negl
outsb
cmp
adc
sti
out
push
lea
xor
int
pop
jl
scas
inc
xchg
and
ja
inc
fs
inc
mov
imul
out
std
cmp
test
jl
and
popf
pushf
sbb
pop
shrl
mov
nop
xchg
out
insl
int
push
notl
mov
sub
lock
lods
icebp
xorb
cwtl
cs
xor
mov
cltd
out
sub
divl
adcb
xchg
or
std
jl
xlat
jmp
popa
sbb
pop
pusha
je
mov
mov
push
cmp
idivl
inc
and
imul
xlat
dec
mov
mov
fcomip
dec
add
subb
icebp
pop
call
cmc
sbb
sub
mull
icebp
push
pop
cmpl
pop
xorb
dec
lahf
out
mov
notl
sbb
movhps
mov
aam
xchg
pop
push
inc
lahf
cld
into
in
movsb
test
subl
imul
cs
dec
jo
lds
lcall
push
xchg
pop
cmpb
or
divl
inc
arpl
data16
jecxz
pop
fidivl
xchg
add
rcll
xor
and
mov
stos
xlat
mov
push
sarb
out
sub
push
aam
mov
adc
movsl
or
xchg
xchg
or
mov
mov
idivl
add
lods
repz
push
icebp
mov
adc
add
adc
mov
repnz
mov
dec
mov
cmpsl
jl
fcmovnu
pop
inc
jb
movaps
cmp
ds
xor
not
and
shl
mov
addr16
hlt
push
xlat
testb
mov
clc
pop
test
jg
cltd
sbb
in
cli
mov
pop
movsl
push
adc
jae
testl
cmc
or
mov
outsb
jnp
loope
dec
add
xchg
popa
sbb
mull
fcoms
imull
mov
in
lret
or
out
jmp
mov
xchg
in
mov
mov
pop
push
lcall
pop
out
addr16
sub
div
les
mov
sub
mull
mov
xchg
icebp
out
sub
cmp
and
add
out
stc
mov
leave
in
mull
xchg
popf
aas
jle
idivl
rol
fwait
inc
xor
push
ds
pop
push
fnstenv
das
lcall
mov
adc
mov
push
leave
je
loope
adc
and
sub
adc
adc
lods
push
xlat
enter
jg
ret
xchg
mull
sbb
out
neg
ljmp
mov
dec
test
je
and
sbb
dec
mov
sbb
inc
test
negl
xor
in
inc
and
jle
dec
push
mov
and
pushfw
outsb
pop
jmp
fsubrs
cmp
pop
negl
mov
dec
sub
push
push
xchg
and
mov
pop
fisubrs
idiv
into
insb
add
ret
mov
adc
inc
loop
inc
mov
testl
push
idivl
rclb
or
mov
push
rcrb
jmp
arpl
fidivrs
imul
out
cltd
outsb
xlat
popa
rcll
cs
iret
aam
inc
sub
rclb
sahf
jb
negl
and
and
push
xor
out
shl
inc
cmp
das
aad
lret
adc
mov
and
cmp
pushf
clc
push
jle
mov
fcomip
pusha
cltd
sbb
popa
inc
fimuls
xchg
testl
shr
out
incb
push
rorb
jo
testl
sbb
mov
push
std
or
or
dec
add
xor
movsl
out
inc
jmp
je
test
pop
mov
pusha
push
mov
or
popa
loope
test
imul
mov
inc
test
les
cmp
cmp
sbb
mov
or
dec
shl
sbb
arpl
xlat
or
xchg
mov
cmp
cmp
out
sub
divl
xor
adc
fcompl
neg
mov
mov
sub
mov
subb
adc
mull
gs
xchg
xor
enter
dec
add
out
outsl
pushf
xchg
data16
mov
nop
ret
jp
adc
xor
jecxz
xchg
mov
pusha
cmp
mov
cmp
mov
mov
int
jmp
pop
xchg
ret
push
addl
es
adc
push
fcoms
imul
xchg
add
mov
fistps
inc
sbb
not
push
in
mov
notl
shrb
idivl
rclb
xchg
xlat
add
cmp
sahf
sbb
std
xor
mov
das
negl
divl
adc
out
dec
jo
xor
sub
stc
cmp
in
imul
rcrl
imull
fs
jmp
addb
mov
ljmp
stos
adc
lahf
mov
scas
pop
popa
mov
test
aam
mov
push
mov
jb
cmpl
imul
cmc
push
scas
ret
jno
lea
push
xchg
inc
lock
shl
mov
scas
push
in
pop
hlt
mov
push
cmp
xchg
jbe
or
testl
jne
xor
mov
cwtl
mov
inc
xlat
mov
xor
jo
mov
inc
cs
in
cmpsb
push
cmp
pop
shr
rolb
sub
mov
push
lret
mov
sub
mov
jb
pop
push
mov
das
jmp
test
bound
idiv
cld
in
int
mov
inc
idivl
fs
negl
int3
out
hlt
xchg
iret
dec
lahf
ja
sbb
xchg
fnstsw
fs
test
loope
js
cmp
cmp
sub
ss
iret
dec
xchg
out
or
out
fcmovbe
mov
mov
sub
repz
sub
call
test
jl
adc
sub
lock
insb
pop
iret
fcompl
or
leave
in
testl
faddp
pop
pop
push
scas
jo
cmpsb
cwtl
inc
mov
test
xrelease
lea
add
call
cmp
cmp
push
adc
or
out
iret
fiaddl
pop
lock
and
fsts
outsb
mov
jg
mov
add
sbb
sar
jb
enter
mov
jno
jnp
fadd
sbb
push
mov
gs
pop
mov
fwait
outsb
jo
inc
jecxz
or
push
cmpsl
shr
sbbb
adc
ss
subl
divl
int3
ror
lret
divl
mov
mov
testl
and
push
pop
repnz
dec
and
fldcw
ja
add
push
and
ss
sbb
test
aam
negl
test
incb
sti
push
mov
popf
xor
dec
idivl
push
rcrl
loopne
leave
testl
mov
jg
sti
loope
notl
jb
fsts
test
adc
out
cltd
cmc
jno
fwait
xchg
testl
adc
divl
and
add
stos
loopne
addr16
jp
in
xchg
add
cwtl
movsb
cli
add
stos
dec
adc
enter
xchg
out
shlb
dec
cmp
hlt
das
push
jmp
sbb
into
pop
enter
cmpsl
sti
xor
or
ja
sahf
mov
xchg
insl
imul
sub
fwait
inc
xabort
pop
push
dec
lds
jmp
mov
or
repnz
pop
leave
inc
div
fnsave
out
mov
cmp
adc
push
mov
jnp
mov
fcmove
jp
pop
mov
out
js
cmp
jbe
adc
or
and
test
iret
call
mov
pop
in
xchg
insl
mov
test
icebp
dec
mov
fidivl
popa
in
gs
add
and
lods
mov
addr16
in
xor
cmp
popf
fs
lahf
daa
ds
cmp
xchg
push
out
mov
mov
js
test
ljmp
fbld
jae
inc
scas
pop
jns
ds
imul
cmp
insl
or
add
adc
out
push
fstpt
ljmp
mov
jo
fimull
sub
lret
iret
adc
out
sub
xorl
dec
iret
cmp
add
in
lcall
outsl
xor
imul
imul
xchg
mov
xorb
loope
push
sub
fwait
mov
sub
mov
insl
into
addr16
bound
lock
mov
or
ficompl
jl
xor
and
mov
sub
dec
les
inc
jmp
loop
cld
jne
xor
out
push
push
inc
shl
aaa
cmpsl
xchg
je
xchg
adc
push
jne
add
pop
adc
cwtl
mov
pop
out
ljmp
xor
mov
imul
lcall
add
nop
jo
out
js
or
lods
cltd
imul
xorb
jne
mov
in
lods
add
ss
bound
ljmp
jne
adc
mov
imul
out
dec
push
jns
push
loopne
dec
loopne
mov
inc
cs
out
ljmp
or
mov
lods
mov
and
std
mov
push
cmp
negb
and
xchg
mull
or
lret
les
idivl
mov
sub
xlat
fidivrs
dec
mov
gs
mov
stc
mov
or
add
cmp
mov
jae
aam
hlt
adc
fyl2x
add
lret
movsb
mov
imul
mov
pop
push
push
out
push
and
divl
hlt
lea
in
testl
leave
idivl
and
sub
inc
mov
notl
jno
int3
notl
call
sbb
and
xchg
push
pop
push
dec
lcall
push
aad
rorb
mov
sarl
inc
xchg
dec
insb
pop
ret
xor
dec
or
test
xor
repz
mov
rcrb
and
in
out
stc
fildll
inc
cli
idiv
ja
jge
out
out
inc
scas
data16
mov
sahf
jae
and
outsb
imul
scas
push
pusha
sub
icebp
push
or
push
dec
xchg
mov
shl
movsl
in
in
inc
incb
rcl
test
insb
mov
jp
mull
movsl
mov
adc
dec
fcoml
divl
lods
add
movsb
adc
push
or
in
xchg
xlat
je
sub
shlb
adc
pop
mov
leave
lods
repz
jbe
cld
and
pop
cli
ja
aaa
pop
xor
popa
pop
es
and
adc
negl
dec
arpl
pop
mov
testl
dec
test
mov
mov
pop
jmp
ljmp
jns
sub
imul
notl
shll
add
pop
cld
dec
jle
adc
movsb
mov
or
jo
outsl
leave
sbb
xlat
push
mov
and
jno
loope
push
stc
out
popf
nop
shl
cltd
xor
mov
ret
test
adc
cmp
mov
lahf
and
out
maskmovq
testl
fcoml
sub
cmp
lret
xchg
aam
data16
testl
fs
pusha
xchg
mov
mov
mov
idivl
psraw
jne
and
sbbl
xor
and
add
imull
cli
push
aas
dec
testl
stos
mov
not
push
sub
push
pop
in
test
inc
dec
or
push
adc
xlat
xor
mov
pop
subl
mov
testl
rcrb
hlt
jg
mov
sahf
rorl
loop
nop
pop
pop
sbb
js
psubd
sub
idivl
push
xor
js
out
dec
pop
add
fimuls
testl
lcall
sti
ljmp
jmp
lret
and
pop
push
inc
mov
pop
leave
loope
push
push
xchg
movsl
mov
das
mov
andb
aas
mul
pop
in
clc
loopne
push
stos
xchg
in
cmpsb
add
in
cmpsl
outsl
push
int3
push
xchg
push
sub
mov
dec
mov
lods
adc
je
mov
fistpll
or
clc
dec
scas
testl
push
mov
notb
jle
jne
xor
nop
out
repz
adc
mov
out
insl
pop
testl
xchg
fistps
fmul
stos
and
shl
jp
xor
inc
int3
negl
jo
mov
repnz
xor
fiadds
out
mov
nop
push
adc
xlat
lock
pop
int3
xor
jbe
into
sub
call
cmp
fists
pusha
push
or
add
xor
inc
test
sti
into
sub
aad
lahf
ret
fldt
je
add
fbstp
or
test
hlt
mov
mov
sbb
dec
iret
mov
or
nop
xchg
das
sub
in
mov
notl
cwtl
xchg
loopne
stc
push
in
imull
cmp
inc
pop
or
push
pop
jle
sub
mov
fnstsw
data16
dec
mov
testl
test
popa
pop
adc
adc
test
mov
adc
cmp
imull
mov
stos
notl
lcall
pop
daa
dec
inc
pop
sub
push
decl
rclb
jno
jecxz
xchg
pop
aad
scas
and
loope
sbb
outsb
fnstenv
push
xchg
dec
outsb
jae
and
testl
xchg
push
inc
xchg
pop
push
das
xchg
xchg
sub
ss
sbb
mov
and
shrb
neg
sub
outsl
mov
push
testl
or
sbb
jmp
idivl
test
arpl
pop
stc
and
rolb
mov
dec
dec
push
lds
and
icebp
pop
jb
pusha
loope
inc
jne
frstor
xchg
jb
testl
testl
movb
sahf
inc
cmp
cli
pop
fwait
into
pop
in
test
jg
roll
sub
mov
xor
mov
hlt
test
adc
inc
adc
clc
ret
je
lahf
cld
jmp
xorl
fstpt
shrb
xchg
dec
mov
jno
adc
sub
and
jecxz
mov
xor
test
movl
push
push
bound
cmp
push
hlt
xchg
lret
testl
ja
test
ss
ljmp
sbb
and
out
jg
pop
mov
cmp
xchg
dec
in
adc
jae
jcxz
ret
jno
ss
or
or
aas
and
ficoms
fdiv
sbb
adc
jo
xchg
adc
adc
jae
fcoml
ret
testb
push
dec
int3
mov
push
mov
mov
xchg
jge
jo
sub
cltd
idivl
push
adc
testl
lahf
adc
mov
clc
xchg
push
adc
or
jno
mov
imul
test
testl
jg
out
pop
sub
sub
divl
dec
mov
xor
arpl
mov
hlt
cmp
and
fisubs
clc
pop
das
xchg
fbstp
mov
test
cwtl
loope
fsubr
add
or
xchg
add
cmp
mov
idivl
push
sub
and
std
push
scas
mov
in
mull
mov
es
push
sar
clc
add
mov
ds
out
cmp
mov
and
jnp
je
ljmp
arpl
jmp
jecxz
subb
out
dec
fistps
cmp
out
xchg
fiaddl
mov
sbb
mov
pop
mov
loope
pop
mov
add
push
sub
or
jns
sub
jmp
inc
sbb
mov
rcl
push
leave
in
outsl
sub
ss
jl
sbb
xchg
dec
cmpsl
dec
xchg
rcrl
add
shlb
sbb
jnp
dec
test
dec
testl
push
js
xlat
mov
fstpt
mov
inc
lods
fnstcw
sub
imull
add
neg
mov
xor
jl
xor
fdivs
fisubrl
popa
idivl
shlb
adc
inc
ja
lea
sbb
out
cltd
scas
and
inc
inc
aaa
mov
jmp
sub
mov
lret
xor
pop
push
cmp
ficompl
cmc
xchg
adc
out
jb
push
scas
negl
mov
testl
movlps
outsb
mov
mov
in
test
sbb
stos
pop
cmp
push
adc
add
imull
add
sub
ss
mov
imul
out
dec
xor
ds
faddp
je
bound
sti
push
dec
iret
jbe
loope
rcrb
cmp
mov
jb
sub
es
jmp
jl
fsubrl
push
divl
pop
dec
mov
xor
dec
out
cltd
fmuls
mov
pop
dec
dec
mov
negl
add
fnsave
xor
cs
add
js
add
pop
lods
sub
negl
cmc
sbb
ljmp
imul
and
lahf
xchg
das
mov
mov
jge
adc
ficompl
dec
inc
fbld
stc
idiv
movsb
or
xor
xchg
nop
xchg
shl
xlat
xchg
fnstenv
aas
sub
pop
cmpsb
neg
inc
mov
lret
pop
xor
out
push
xchg
jbe
in
jle
dec
inc
cmpsl
mull
ja
xchg
xchg
pusha
xor
mov
out
lock
testl
inc
mov
repz
jne
not
mov
pop
push
mov
outsb
and
mov
push
mov
cmc
shll
ja
call
jb
or
cmpsl
xchg
rclb
cli
stos
mov
lret
fdivp
sbb
adc
pop
popa
xchg
lcall
rorb
pop
pop
cmp
push
adc
movsb
xor
jmp
xor
sbbl
imul
jae
sbb
icebp
popa
or
movsl
jne
sub
imull
sub
adc
push
std
fists
push
xchg
stos
dec
sbb
sbb
jb
jne
outsl
mov
testl
cltd
mov
jle
dec
xor
test
push
mov
sbbb
adc
lock
test
arpl
or
jmp
sbb
sahf
imul
adc
clc
xchg
rorb
xor
test
pop
mov
fwait
push
pushf
sub
adc
or
adc
rcll
movsl
mov
sbb
dec
push
addl
adc
mov
cmp
sbb
add
lds
nop
xchg
jmp
jae
sbb
in
sub
daa
stc
notl
mov
out
fincstp
js
xchg
or
testl
cmpl
loop
notl
das
or
sbb
mov
lods
lcall
bound
idiv
jg
mov
xlat
mov
cltd
divl
popf
pop
xchg
iret
jg
pop
push
jmp
fwait
divl
or
in
mull
dec
hlt
cmp
push
negl
jp
ljmp
sbb
mov
sahf
lods
mov
dec
xorb
and
addb
pusha
dec
push
addr16
fsubr
xchg
jmp
aaa
or
dec
hlt
xchg
dec
out
cmp
sub
lcall
jp
jp
sub
nop
leave
fistps
mov
cmp
cmp
mov
outsl
fldl
test
imul
and
pushf
mov
pop
aas
leave
in
add
daa
ljmp
outsb
js
stos
adc
fs
decl
mov
xchg
push
dec
stos
jmp
int3
shlb
in
sub
bound
rolb
fsts
out
sub
dec
in
stos
in
in
push
pop
jo
adc
pop
mov
and
xchg
jg
mov
fsubrp
out
repnz
mov
stc
cmp
lcall
gs
xlat
jg
push
cld
push
adc
xchg
cmp
cwtl
fstpl
rcrl
add
sbb
dec
icebp
imull
pop
sub
imul
sub
ficomps
and
leave
ja
idivl
push
aad
adc
and
adc
mov
xchg
adc
idivl
inc
cwtl
fsubrp
lea
xchg
jp
xlat
mov
fildll
mov
xlat
mov
pop
scas
pushw
mov
cmp
mov
pusha
idivl
xchg
dec
nop
fcoms
sbb
lahf
notl
out
out
sub
cld
pop
mov
lock
and
push
fisubrs
orl
stos
xchg
xlat
jne
je
lock
mov
mull
inc
lods
sub
clc
mul
int3
rclb
mov
xchg
xchg
cmp
rcll
push
dec
testl
repnz
notl
fistpll
js
hlt
mull
enter
sub
dec
les
xor
dec
add
lret
out
out
jb
nop
and
jno
aam
and
ja
cmp
mov
mov
push
jns
pop
lods
adc
pop
xchg
out
data16
xchg
mov
push
fistpll
stos
lahf
lock
cwtl
nop
rorb
mov
stos
out
int
sbb
negl
fwait
dec
imull
test
dec
popa
sahf
fsubrl
testl
mov
push
dec
imul
push
mov
push
push
push
adc
mov
pop
pop
jecxz
dec
jnp
pop
fiadds
push
cli
loopne
sbb
jle
imul
mov
les
imul
adc
test
push
jo
dec
and
testl
and
scas
outsl
mov
ja
mul
icebp
pop
bound
dec
sbbb
xchg
das
push
sbb
adc
inc
mul
dec
mov
imul
mov
repnz
test
pop
jle
xchg
ss
cmp
sti
add
push
dec
or
idiv
mov
mov
inc
fxtract
cmp
test
popf
std
in
jecxz
lahf
mov
jae
xchg
push
repz
cs
in
fadds
xor
push
and
or
outsb
sub
sbb
jne
lods
leave
jg
lods
idiv
int3
lahf
ret
pop
sahf
and
testl
fwait
icebp
subb
pusha
mov
and
icebp
test
mov
not
das
iret
js
or
enter
scas
or
dec
sbb
inc
pop
sbb
pop
shll
xor
lock
arpl
ret
test
out
jo
cmp
pop
mov
pop
notl
jae
sub
addr16
insb
cmp
dec
je
mov
pop
pop
loop
nop
push
or
add
inc
testl
lds
sbb
xor
ret
movsb
idivl
sbb
or
stos
push
jge
in
call
push
stc
sarl
fbld
sbb
clc
and
cmc
fnstenv
inc
and
repnz
fnstsw
lds
dec
or
fdivrp
sbb
in
sbb
mov
mul
adc
dec
je
jns
in
testl
fiaddl
paddd
insb
aam
add
int
cmp
or
cmpb
in
pop
xor
mov
fnstenv
mov
arpl
rcrb
in
mov
xchg
xchg
pop
and
mov
mov
sbb
push
divl
lahf
cmc
lret
mov
cmp
sbb
pop
mov
loope
push
cmp
xchg
aas
sub
cmpsl
popf
jb
mov
and
jnp
mov
or
aaa
loope
jp
data16
int3
pop
add
pop
test
pop
mov
add
sbb
cmpsl
push
or
movsl
lret
dec
add
cli
and
imull
in
and
adcl
sub
fcomps
jnp
scas
adc
push
xor
imull
and
call
cmp
pop
notl
jp
notl
jecxz
scas
mov
pop
bound
or
xlat
push
mov
and
jmp
test
cmpsb
fdivrs
inc
push
inc
adc
divl
movsl
lcall
addb
pop
push
outsb
mov
add
jae
sub
xchg
jb
push
inc
divl
jnp
in
imul
fs
add
mov
in
out
mov
loope
rorl
push
mov
div
sbb
pushl
data16
stc
arpl
fildll
sbb
rcrl
mov
les
mov
lcall
notl
inc
in
sub
cmpsl
dec
pop
negl
cmpsb
sbb
jecxz
lret
leave
cmp
repz
pop
fdiv
push
mov
movsb
rcll
loopne
mov
add
sub
push
or
mov
sbb
pop
out
scas
adc
mov
mov
push
add
push
adc
popf
sbb
cltd
mov
xlat
add
pop
fidivrs
pop
cmp
xchg
push
jmp
imull
ljmp
sbb
divl
mov
push
insl
notl
adc
xlat
stc
jo
inc
pusha
sbb
push
je
in
pop
movsl
xor
jb
jmp
imull
ficomps
in
sbb
and
sbb
popa
insb
mov
jl
cmp
mov
loope
mull
call
pop
divl
cli
jp
stos
leave
sub
pop
shlb
pop
push
mov
jp
mov
les
jmp
mov
mov
jmp
or
divl
xor
jge
testl
in
xlat
xchg
push
push
mov
insl
fbld
add
scas
out
jbe
dec
push
push
mov
notl
xchg
or
pop
xor
fistpl
out
sub
mov
xchg
fs
in
fmull
fbstp
lods
insb
add
pop
or
fwait
into
lock
and
lea
mov
clc
jp
cmp
jb
mov
icebp
ljmp
jmp
repnz
es
loopne
fsubr
mov
test
jns
mov
ror
push
xor
outsb
jb
nop
add
dec
lock
add
push
mov
call
inc
cmpsb
add
mov
sbb
test
int3
fistl
lret
cmp
xlat
xchg
push
mov
cmp
or
push
sahf
fsubrs
sub
xchg
xor
test
cmp
dec
in
push
adc
lahf
mov
rolb
cltd
push
cmp
mov
adc
pop
push
push
mov
or
push
sbb
sbb
mov
iret
mov
adc
jo,pt
dec
fisubl
lcall
das
xlat
add
daa
or
adcl
aaa
idiv
int3
loop
ficoml
jae
idiv
pop
mov
or
in
lret
lock
lahf
lods
cmp
mov
push
ljmp
daa
dec
pop
jmp
mov
ret
or
ret
sub
lods
test
dec
scas
xchg
sbbb
rcr
cmpl
aam
pop
cs
aad
js
or
daa
loop
adc
adc
add
pusha
mull
notl
loope
inc
rcll
and
xor
test
stos
mov
negl
fstpl
divl
xor
or
testl
jl
fdiv
inc
sbb
lret
xchg
xor
sub
cmp
mull
pop
addl
inc
das
popf
mov
iret
mov
lods
mov
mov
icebp
inc
repnz
adc
sub
push
cmpsb
lods
rol
xchg
ja
xor
mov
rorl
xor
mov
xchg
mov
lret
jmp
test
sbb
fwait
rorl
push
in
testl
rclb
dec
mov
add
outsl
movsb
mov
pop
not
pop
aam
mov
cmc
cmc
cmp
std
testl
inc
inc
out
sub
sub
cs
movsb
cmpsb
pop
push
xchg
cmp
push
sbb
out
add
testl
pop
sbb
adc
repz
mov
xor
das
das
icebp
sub
inc
mull
imul
insb
cmp
jge
jbe
testl
pop
frstor
inc
cwtl
jb
enter
sbb
in
lods
je
arpl
push
out
jns
adc
push
lret
sub
out
xlat
ss
dec
push
fisttpll
in
xchg
stos
not
and
cmpsb
xchg
testl
xchg
or
lods
subb
xchg
adc
jecxz
out
pop
push
shlb
adc
movsl
push
popa
pop
inc
pop
xchg
inc
in
pop
pop
divl
loope
test
sbb
je
out
hlt
or
mov
xor
sbb
inc
add
pop
popw
xchg
loope
mov
jns
idivl
mov
test
sub
xchg
jle
clc
and
out
stc
aad
inc
enter
cmp
dec
in
push
pop
sbb
aaa
adc
notl
xor
neg
pusha
pop
sub
lods
ljmp
jae
add
xlat
mov
lcall
jge
and
sbb
or
test
nop
jno
and
sbb
mov
cwtl
sahf
inc
loopne
testl
cmp
pop
aaa
and
ss
es
imull
add
or
notl
dec
cld
pop
and
xchg
jne
jb
out
rorl
pop
or
sbbb
imull
pop
jmp
sbb
sbb
cld
mov
scas
xchg
pop
fdivrs
jmp
mov
call
and
scas
in
mov
xor
out
fadds
lds
sbb
popa
arpl
outsl
jo
push
das
pop
xor
xlat
xchg
pusha
xor
test
test
cmc
xor
ja
data16
bound
mov
mov
push
lea
xlat
sbb
pop
push
and
notl
mov
mov
bound
test
lods
mov
dec
lock
repz
xor
mov
outsb
imul
into
adc
mov
repz
xor
xor
out
inc
ss
in
inc
divl
dec
pop
sbb
repnz
or
fildl
adc
inc
jl
mov
mov
adc
nop
lcall
mov
loopne
push
sbb
mov
cmp
sbb
cmp
idivl
sub
push
enter
iret
adc
cmpsl
out
and
adc
rcl
fisttpll
icebp
aas
add
mov
push
out
dec
mov
sti
jo
sub
divl
xchg
jmp
mov
fs
mov
pop
mull
jne
or
add
rcrl
fdiv
cmp
or
rorb
xlat
test
pop
pop
repz
out
push
xchg
mov
cmp
sub
rcrl
and
out
fmuls
testl
xor
push
pop
movl
jae
add
imul
les
movsl
mov
push
and
push
mov
dec
jne
push
cmp
clc
sbb
jb
ss
pop
addr16
or
pop
int
dec
pusha
push
fbstp
dec
mov
pop
in
aam
mov
add
not
mov
and
negl
aad
out
mov
int3
xchg
cmc
fisttpll
xorl
push
icebp
pop
iret
sbb
int
insl
xor
jge
nop
in
ljmp
jmp
repz
test
rol
movb
xchg
lcall
sub
dec
scas
int
pop
adc
sub
or
mov
push
cmc
je
repz
mov
jne
jp
adc
push
cltd
sbb
mov
or
inc
xlat
mov
cmpsl
mov
sub
repz
xchg
rcr
xor
fisubl
addps
xchg
mov
push
rorb
lret
insl
lret
clc
sub
mov
jno
jmp
cs
push
sbb
dec
lahf
ret
sbb
mov
xchg
nop
subb
push
sbb
pop
push
xchg
mov
xchg
frstpm(287
ljmp
mov
dec
cmp
in
test
and
add
dec
pop
je
insl
push
lods
adc
scas
dec
int3
push
mov
ss
mov
cltd
pushf
mov
dec
leave
and
repz
jo
repz
inc
mov
fdiv
mov
es
aad
mov
pop
adc
orl
jmp
push
pop
aas
out
in
sub
fs
lock
in
pslld
sbb
xor
std
sbb
cwtl
mov
fidivl
dec
outsb
xchg
lretw
cltd
test
cmp
repz
gs
mov
mov
pop
add
xchg
xor
loop
in
out
or
xchg
mov
dec
mov
adc
sub
mov
test
js
xor
inc
imul
or
inc
sub
cli
sbb
nop
jecxz
mov
es
cmc
scas
das
lock
inc
xorl
fisubrs
mov
cmp
push
cmp
and
adc
xor
rcr
addr16
movq
es
cmpsl
inc
outsl
lds
cmp
xor
xor
test
insl
cs
xchg
outsl
aas
notb
inc
xor
push
insb
iret
mov
popa
mov
fcomip
mov
fbstp
lea
cld
aaa
fistps
cmp
xor
cmp
mov
xchg
sub
pop
xchg
lods
lcall
lock
mov
pop
cli
push
stos
or
mov
test
popf
push
xchg
imul
sub
or
fidivs
mull
dec
fcomp
icebp
xchg
fsubs
aam
or
push
jne
pop
repnz
sub
jno
fwait
xor
mov
out
inc
sbb
mov
push
sub
imul
outsl
sub
push
je
inc
popf
insl
leave
pop
test
lods
fistps
repnz
dec
mov
jne
inc
push
daa
sbb
add
pushf
pop
pop
sub
sub
lock
mov
push
dec
sbb
push
mov
xor
imul
icebp
add
cmc
in
mov
pop
mov
scas
mull
xchg
nop
jbe
imul
faddl
or
mov
sbb
pop
add
scas
mov
mov
js
adc
pop
out
fdivp
repz
mov
daa
pop
stos
xor
mov
add
out
out
jb
cmpsb
sbb
iret
cmp
xchg
ja
cs
fadd
pop
inc
out
lcall
mov
mov
inc
icebp
cmp
mov
movb
adc
notl
stos
and
nop
xchg
loope
mov
push
negl
int3
cmpsb
sbbl
jno
fisubrs
fldt
aaa
mov
arpl
mov
pop
xor
neg
sbb
xor
pop
test
sub
and
cmpsb
inc
add
push
iret
test
or
testl
cvtps2pi
jge
test
dec
lcall
fwait
dec
pop
popf
xor
push
jecxz
or
pusha
mull
push
dec
imul
sbb
fadd
mov
jle
idivl
mov
push
sub
imul
cmp
out
mov
enter
sahf
xlat
and
jp
ja
stc
sub
aas
sub
sbb
fdivl
xchg
and
pop
movl
rolb
or
jg
mov
dec
not
movsb
cmp
jle
jl
in
jmp
jo
cmp
ja
and
mov
fists
dec
andl
outsl
add
pop
mov
mov
lcall
cmp
dec
xchg
pop
dec
xchg
mov
rclb
push
icebp
mov
fs
adc
addr16
xchg
cmp
loope
ljmp
outsl
jmp
clc
mov
inc
sar
repz
mov
sbb
lret
insb
rcrb
movsl
lds
hlt
add
notl
aaa
push
jb
push
xor
in
in
sub
pop
cmp
push
ficompl
xor
sub
mov
xchg
in
add
xorb
test
scas
mov
mov
int
pop
jnp
inc
frstor
js
in
aas
in
fadd
jo
testl
dec
add
mul
stos
xor
adc
jl
or
aaa
out
leave
and
imull
cmp
mov
or
loop
jbe
pop
stos
push
ja
outsl
mov
jb
sbb
outsb
cmc
mov
movsb
fsubr
lcall
sarb
ljmp
jp
mov
imul
pop
stos
iret
pop
adc
jnp
xchg
jp
push
test
xlat
and
clc
pusha
pop
cmpsb
ljmp
andb
dec
cmpsl
mov
js
push
idivl
nop
lcall
and
ret
cs
add
out
pop
repz
push
sbb
rol
and
cld
fsts
inc
dec
testl
jb
daa
sbb
jns
or
lods
ror
and
jl
cmp
mull
sub
or
sub
cltd
idivl
cmpsl
or
sbb
pop
out
push
movsl
pop
repz
dec
xlat
sub
cmp
cmp
in
rcl
cmp
mul
xlat
push
sub
das
mov
in
push
xchg
dec
lcall
in
fstps
xchg
mul
stos
cmpsb
stos
dec
cmovnp
mov
or
push
ret
jle
pop
fcomi
mov
test
xchg
cmp
lock
divl
js
fsubs
or
mull
in
sbb
push
and
mov
lahf
scas
xor
add
testl
mov
push
mull
push
push
notl
sub
mov
sub
rorl
inc
fcompl
test
sub
imul
test
push
popa
mov
gs
mov
lcall
mov
mov
call
or
xchg
pop
or
mov
imull
ret
outsl
imull
add
push
mov
jmp
pop
xchg
sub
add
negl
repz
popa
xor
jg
pop
ficoml
xchg
add
cld
push
testl
xchg
idivl
push
push
xchg
imull
mov
sbb
mov
ret
gs
idivl
pop
rorb
movsb
add
andl
mov
xchg
cltd
xchg
mov
jns
test
hlt
add
xor
mov
mull
mov
rorb
in
push
fldl
sub
pop
pop
mov
repz
xchg
cmp
inc
cli
cmp
clc
xchg
sub
idiv
mov
lcall
jge
cmp
test
push
decb
insb
mov
ret
pop
xchg
imul
xchg
xchg
mov
imul
lods
pop
mov
inc
mov
mov
cli
in
fisubl
mov
xor
dec
stos
xadd
lods
xor
mov
sub
xor
add
cltd
pop
inc
pop
outsb
leave
xchg
ja
mov
mov
push
dec
nop
js
cmc
ljmp
inc
pushf
ss
int
test
cwtl
std
pop
sbb
data16
in
adc
popf
mov
inc
cmpsl
mov
and
ficoml
inc
outsl
pop
jg
sub
mov
rcll
or
addr16
push
mov
out
adc
fsubr
cld
rolb
cmpsb
pop
fsubrs
rorl
out
fmull
xchg
rorl
int3
ja
lcall
loop
fs
movsl
inc
clc
aad
dec
xor
jno
mov
ljmp
hlt
or
jae
testl
pop
dec
and
gs
xchg
adc
jg
push
repz
and
pop
cmpsb
xchg
jnp
sub
jbe
popa
pop
push
cmpl
ret
testb
cmp
adc
test
bound
cltd
dec
jmp
or
mov
hlt
mov
loop
arpl
mov
mov
push
out
adc
out
enter
shll
negl
jmp
fcomp
push
jne
int3
sahf
fildl
mul
jo
sub
test
out
pop
xchg
call
rcrb
imull
fimull
xor
jg
or
ss
repz
fs
sahf
insl
divl
sti
pop
pop
enter
je
push
xchg
out
cmp
cmp
or
jge
rep
lods
fsub
je
jno
or
pop
pop
testl
clc
mov
jp
out
jg
mov
xor
test
fstps
sahf
pop
jmp
mov
mul
mov
jno
outsb
inc
call
adc
int
iret
aad
idivl
sbb
pop
sub
xlat
fimull
nop
testl
es
outsl
testl
mov
add
dec
test
xor
testl
cli
loop
enter
mov
cltd
xchg
in
enter
ret
push
dec
sub
divl
inc
ja
lahf
and
add
adc
cmpsb
pushf
mov
sbb
das
ss
out
rclb
jo
adc
lret
cmp
pop
inc
push
push
adc
loop
leave
xlat
cmp
jp
dec
loopne
imull
and
xchg
add
push
test
lock
mov
xchg
inc
scas
nop
out
cmp
in
stos
mov
out
scas
jne
xchg
mov
jns
add
push
in
xor
imull
notl
jg
lss
inc
add
leave
test
or
sbb
fdiv
bound
imull
fistpl
setg
pop
lret
push
divl
xor
notl
sub
mov
lods
dec
out
lret
mov
inc
test
das
jnp
imull
outsl
mov
xchg
xor
hlt
rcll
mov
xchg
ljmp
negl
sub
or
push
aad
mov
rclb
pop
div
xchg
insl
inc
mov
dec
jo
ljmp
jo
sub
je
jecxz
sbb
testl
push
bound
pop
jno
fnstenv
xlat
or
sahf
mov
les
and
test
sbb
sub
cwtl
jno
dec
xchg
scas
out
push
jmp
movsb
ss
sub
imull
test
neg
xor
jno
pop
inc
bound
imull
repz
dec
add
push
cmp
addl
pop
dec
inc
xor
mov
xchg
xchg
int
mov
negl
fisubs
testl
jmp
or
and
inc
nop
testl
fdivs
es
ficompl
stos
xlat
xor
gs
mov
pop
inc
add
and
dec
and
cltd
imul
loopne
cs
in
lcall
pop
pushf
sub
sub
push
movsl
adc
pop
add
fisttpll
dec
xor
mov
and
cmpsb
mov
in
xlat
sub
imul
stc
repnz
jl
jne
push
testl
shrb
add
pushf
mov
jg
cmp
push
cmp
sbb
les
andb
aam
call
mov
xlat
adc
cwtl
or
std
lcall
divl
add
ss
mov
inc
movsl
in
pop
pop
divl
cltd
mov
pop
and
fcomi
test
cmc
orl
mov
out
add
test
hlt
push
adc
inc
cmpsl
dec
mov
orl
int3
fnstsw
leave
shl
xchg
and
add
mov
sub
xchg
int3
int
add
push
sbbb
test
mull
jo
adc
imull
nop
dec
out
lcall
cmp
into
mov
aam
jle
flds
imul
imul
xchg
mull
push
rclb
mov
testl
icebp
fldl
mov
fwait
notl
adc
ret
lret
jo
xchg
test
in
imul
xchg
sbb
fnstenv
pop
xor
repz
testl
push
dec
xor
mov
pop
xor
inc
pop
mov
idivl
std
cmp
push
iret
xor
lret
inc
icebp
sub
mov
push
add
stos
mov
mov
cld
stc
idiv
addl
ds
cmc
cltd
push
notl
cmp
divl
mov
add
pop
repnz
fmull
inc
fstp
nop
mov
sub
cmc
insl
pop
push
maskmovq
testl
mov
fildl
cmp
in
jecxz
dec
xor
jmp
xor
leave
mov
popa
xchg
cwtl
aad
in
sti
fdivr
sub
into
gs
notl
addr16
sbb
inc
pop
out
or
push
pop
xor
out
shll
fldl2t
pop
xor
mov
push
mov
xchg
dec
xchg
adc
cmp
pop
cmp
into
mov
imul
add
lahf
pop
jmp
ds
ljmp
lret
out
cmpsb
push
and
sbb
iret
fs
int
data16
xchg
jae
jle
ja
mulb
and
adc
into
nop
sbb
xlat
movsl
lea
hlt
mov
push
xchg
jl
and
pop
jbe
in
push
insb
add
testl
xor
mov
ret
sbb
lods
sub
int
mov
or
xchg
js
jmp
pop
inc
push
hlt
pop
fsubrl
or
mov
jno
cmp
and
data16
cmp
scas
call
cmc
scas
mov
fists
ficoml
or
in
push
cmp
icebp
jns
test
xor
repnz
fists
inc
push
rclb
testl
mov
mov
loop
scas
xchg
ljmp
and
or
mov
popa
in
pop
inc
sbb
mov
stc
cmp
jp
lds
sbb
push
push
imul
add
cmp
mov
mov
mov
ljmp
dec
mov
lahf
and
outsl
or
dec
or
xchg
imul
lds
sub
outsb
add
fbld
movsb
sbb
push
ljmp
les
jnp
adc
lret
shl
pop
pushf
out
jb
shll
xor
inc
sahf
movsb
xchg
inc
sbb
mov
dec
inc
fdivrp
mov
inc
inc
insb
ss
clc
ret
xor
mov
cmc
iret
pop
mov
cmpsl
ljmp
jmp
xor
in
inc
pop
mov
cld
ljmp
stos
adc
xor
mov
ljmp
sarl
jae
mov
lret
not
push
in
loopne
adc
mov
aas
inc
call
lock
push
fsubr
sbbb
movsb
and
stc
in
or
mov
pop
iret
leave
jmp
or
mov
and
xchg
cmp
fnstcw
or
stos
ss
add
stos
mulb
rclb
out
ljmp
iret
loope
mov
push
pop
sbb
fs
and
push
push
adc
mov
sti
lahf
push
dec
in
and
xor
cmp
cmp
sub
nop
xlat
test
or
mov
push
dec
pop
dec
mov
cmc
testb
mov
jmp
pop
xchg
in
sub
mov
pop
in
hlt
pop
je
and
movsl
cli
lea
mov
mov
je
inc
push
adc
inc
test
jg
sbb
in
push
in
ficompl
icebp
stos
jae
cmc
dec
sbb
xor
lahf
rclb
or
cmp
clc
jmp
mov
add
mov
xor
xor
aaa
fnstsw
push
pushf
jae
push
add
push
outsb
mov
add
rolb
sahf
jp
pop
sub
or
sbb
es
jbe
lea
and
or
int
sbb
aam
imull
pop
clc
ljmp
int3
aad
mov
xchg
or
movsb
adc
out
nop
mov
gs
mov
ljmp
cmc
xchg
cli
out
in
push
jo
sbb
sbbl
cmp
fstl
outsb
fs
xorb
dec
andl
mov
jmp
push
inc
lret
sub
iret
clc
sub
mov
out
clc
jmp
xchg
inc
mov
cld
push
repz
mov
xlat
xchg
xchg
inc
stc
lret
adc
xchg
and
orb
jb
sahf
addl
cmpsb
dec
fs
arpl
xchg
in
in
mov
fbld
cmp
movsl
out
push
fnstcw
sti
mov
out
fisubrl
jbe
jge
notrack
popa
out
inc
fistl
xor
cs
pop
jno
mov
aam
xchg
fnstenv
adc
fsts
jo
cltd
aam
inc
mov
pop
inc
pop
imul
jae
enter
fcoml
sub
loopne
mov
push
cmpsl
mov
addr16
xchg
movb
jns
cs
test
xor
movsb
ss
shlb
jecxz
jae
jmp
ljmp
push
mov
sarl
int3
in
testb
test
jbe
push
cmpsb
sahf
fbstp
push
fimull
in
mov
ror
clc
in
int
mov
es
xchg
lahf
pop
or
ljmp
cld
jecxz
fisubl
mov
adc
inc
push
inc
int3
movsl
xlat
je
pop
and
into
inc
pop
fdivrp
hlt
add
push
enter
fsubrl
scas
stos
fwait
stos
dec
lods
lret
insl
out
mov
cmp
lea
mov
int3
jecxz
in
adc
xchg
jecxz
aas
pusha
mov
lds
popa
xchg
fwait
and
lods
adc
cld
aas
in
std
fidivl
lret
data16
out
jo
jns
cmp
mov
sub
ss
or
ret
xchg
into
in
pop
jmp
out
and
dec
inc
fistpll
sbb
jbe
cmpsb
call
int3
into
jae
xchg
outsl
std
pop
pop
fs
movsl
dec
popf
cmp
ljmp
xchg
in
xchg
repz
xlat
mov
mov
mov
mov
outsb
in
aaa
ljmp
jbe
inc
adc
fidivrl
or
or
pop
xchg
daa
popf
sub
pop
sbbb
jne
insb
xor
repz
ljmp
inc
jmp
movsl
and
xchg
aam
cmc
adc
ss
jb
mov
mov
es
js
xchg
out
sub
mov
add
mov
ret
mov
stos
les
fdivp
mov
negl
sbb
xchg
add
sub
cwtl
inc
mov
xor
fdiv
out
ljmp
push
daa
jmp
and
repz
add
shll
jecxz
daa
mov
pop
lret
shll
fs
outsb
lock
out
movsl
out
mov
pop
jbe
mov
popf
aad
jmp
pop
jle
insb
into
fcoms
jg
mov
push
test
iret
sbb
cmp
mov
pop
mov
sub
or
cmc
push
add
ja
adc
bound
mov
mov
in
jno
into
push
add
ljmp
mov
in
cmc
and
pop
adc
push
mov
repz
and
mov
fucomp
repnz
xchg
add
inc
ficompl
js
or
sub
cmp
cmp
jb
lret
xchg
cltd
mov
sub
push
out
mov
outsb
sbb
in
mov
fidivrl
daa
lods
loopne
xor
pop
push
mov
sbb
js
push
mov
mov
jae
jnp
out
inc
ds
adc
xchg
aam
sbb
out
fidivs
movsb
mov
or
jae
lret
push
inc
pop
ljmp
mov
lcall
sarl
adc
fwait
sub
jmp
cmc
rorl
adc
pop
fistl
test
mov
addr16
inc
jbe
inc
cmpsb
pop
sbb
daa
pop
mov
imul
loopne
sub
mov
into
int
jbe
mov
sub
jecxz
scas
mov
mov
and
xor
cwtl
in
std
and
sbb
xchg
xchg
pop
mov
mov
aam
flds
dec
icebp
movsl
mov
pop
jne
imul
loope
nop
sub
mov
lods
inc
mov
pop
push
frstor
dec
add
cmp
fildl
jg
inc
cmp
cmc
mov
xor
std
fs
out
scas
add
rcrl
ja
aas
jb
push
xor
mov
or
jae
cmpsl
push
or
jne
push
adc
lahf
push
fsubr
adc
xor
and
jns
sbb
scas
scas
mov
jbe
test
insb
mov
mov
pop
push
or
fnstcw
inc
pop
cmp
jbe
mov
xor
dec
cmpl
cmp
dec
push
mov
and
pop
push
push
mov
or
adcb
mov
inc
and
cltd
xor
fs
imul
jle
adcb
lahf
ficoml
es
stos
push
mov
or
lcall
inc
cmpsb
mov
xchg
adc
sahf
sub
stos
adc
jmp
mov
sbb
push
pop
jmp
mov
stos
mov
jbe
mov
stos
loopne
push
hlt
jbe
xor
sbb
adc
mov
inc
pop
sub
sub
and
mov
pop
jns
dec
xchg
push
add
das
in
xchg
addr16
mov
sub
fwait
mov
stc
arpl
lret
jno
jecxz
inc
mov
mov
mov
idivb
loopne
cwtl
push
dec
out
insl
iret
mov
sbb
lods
daa
mov
push
out
or
sub
xor
repz
lcall
mov
in
adc
mov
add
repnz
mov
pop
lret
icebp
mov
sbb
mov
mov
rolb
and
je
mov
or
xchg
and
inc
dec
cmp
jge
push
pop
in
inc
lock
cmc
push
push
jb
sbb
pop
repz
dec
add
push
fidivl
fdivrs
divl
ss
mov
shlb
leave
xor
adc
aas
fsubs
in
xor
nop
cmp
shlb
int
jp
mov
xchg
arpl
push
je
out
adc
pop
sub
xor
push
andb
xlat
sahf
mov
pop
mov
inc
xchg
push
push
and
xchg
sbb
mov
push
adc
mov
out
mov
jg
into
mov
xlat
jmp
add
iret
ja
sbb
lods
mov
icebp
out
sti
sbb
ljmp
or
sbb
xchg
mov
fsubrs
fidivs
cwtl
push
sub
fwait
adc
negb
movb
lods
push
xor
adc
ljmp
and
int3
push
in
out
mov
push
aaa
mov
jae
and
faddl
jb
sti
cmp
out
loop
lahf
jbe
and
mov
js
pop
je
mov
or
jmp
sbb
shrl
push
pop
mov
inc
pop
aaa
mov
call
int
push
mov
jb
push
or
out
mov
jmp
mov
lea
cmp
mov
cmp
jne
sbb
jbe,pt
pop
adc
mov
sbb
das
ret
cld
adc
pminub
fisttpll
call
cmp
and
lret
push
mov
pop
jg
ficompl
fs
mov
subb
push
cmpsl
sbb
mov
push
jmp
stc
jle
loope
std
adc
adc
out
cltd
or
pop
shlb
fwait
mov
fisubl
arpl
fistpll
pop
sub
shr
mov
clc
jmp
cltd
lods
sub
jbe
xchg
movsb
inc
cmc
add
mov
cmp
loope
push
xchg
out
lds
xchg
test
lock
sub
mov
fimull
int3
outsl
repnz
lahf
je
std
xlat
or
ja
inc
dec
fisttpll
repnz
stc
mov
mulb
arpl
aam
out
mov
push
mov
rol
out
les
negl
xchg
orl
test
lea
jl
xlat
stos
inc
or
and
fisubrl
jg
push
cld
add
loop
movsl
dec
aad
xlat
shl
add
jnp
jmp
and
sti
fnsave
xorb
push
sbb
scas
addr16
enter
fsts
hlt
push
inc
jnp
movsb
add
fmuls
jl
stc
cli
shll
xchg
jmp
adc
adc
sbb
out
push
testl
mov
ret
repnz
into
mul
sbb
or
js
frstor
test
xor
testl
rol
notl
jns
or
pushf
pop
neg
xchg
es
ror
notl
test
stos
nop
lea
test
push
out
sbb
jle
ljmp
je
pusha
jl
pop
out
push
out
xchg
shl
push
xor
idivl
cwtl
adc
and
jno
out
aad
inc
orb
mov
sbb
shlb
test
lret
mov
xchg
imul
and
inc
div
rcl
push
pop
jns
sub
repz
fisttpl
mov
dec
jecxz
in
sub
sub
popf
pusha
xor
in
outsb
jg
dec
add
mov
adc
in
cltd
inc
fs
jns
divl
call
rol
cmp
mov
push
loopne
leave
out
imul
push
sub
mov
enter
leave
testl
fadds
push
push
push
adc
negl
mov
pop
push
int
std
pop
cmp
das
mull
ljmp
sbb
fdivs
jge
inc
out
add
cld
sbb
sti
mov
repnz
dec
lock
push
adc
testl
sbb
fistpll
mov
push
testl
or
lods
shld
mov
and
and
mov
data16
rclb
push
inc
fsubl
dec
add
dec
cmc
rcrl
testl
fnsave
in
imul
fimull
push
movsb
ss
push
jg
xchg
sti
mov
adc
or
push
cwtl
adc
insb
clc
filds
lcall
dec
dec
push
ss
sti
mov
and
mov
lcall
push
push
in
movsl
dec
or
add
outsl
or
push
divl
rorl
es
in
in
insb
popa
cmp
out
daa
mov
std
mov
add
into
add
mov
dec
sbb
mov
hlt
jns
sbb
mov
add
aam
sti
ret
clc
inc
and
ja
in
mov
xor
push
loopne
notb
ja
mov
nop
and
pop
out
shlb
add
push
sub
movsl
xchg
das
fsubrp
push
sub
sub
adc
mov
je
neg
dec
in
sub
cs
mov
pusha
scas
mov
int3
fs
xlat
call
scas
push
mov
scas
test
fdivl
pusha
dec
subl
sbb
or
mov
push
andl
cmp
xlat
mov
pushf
pop
int
out
or
fdivrl
jmp
xchg
jmp
push
jne
and
push
aaa
not
pop
jno
inc
mov
fs
cmc
dec
ljmp
mov
lea
ljmp
and
push
mov
mov
int3
out
mov
xchg
jns
xchg
fiaddl
cmp
jne
jp
outsb
iret
fidivs
les
add
ljmp
xchg
mov
and
aaa
repnz
movsl
pop
mov
mov
jb
push
add
loopne
pop
mov
mov
loopne
mov
push
add
ja
push
fiaddl
addr16
and
nop
jnp
hlt
jne
cmpsb
mov
sar
gs
shlb
repnz
int
icebp
cwtl
mov
iret
fsubrp
cmp
sbb
and
sub
xchg
jbe
ljmp
int3
stos
and
mov
cmpsb
and
xchg
push
jo
lds
mov
shlb
jbe
ficompl
jbe
mov
inc
call
shrl
fildl
out
popa
inc
test
shrb
mov
mov
int3
xor
inc
jae
rorb
jp
sbb
cmp
pop
idiv
mov
adc
mov
mov
testl
fidivl
mov
dec
test
push
xchg
push
out
aam
mov
lahf
lret
shl
idiv
and
pusha
idivl
mov
insl
stc
push
iret
rcrl
notl
dec
dec
xor
mov
test
push
scas
push
popaw
lods
fisttpll
icebp
jno
jnp
mov
mov
mov
inc
testl
xlat
movsl
test
pushf
push
test
inc
aas
cmpsl
xchg
push
push
lock
testl
add
std
mov
insb
push
ja
sbb
cmp
inc
repnz
mov
shll
lea
outsb
pop
jo
out
stc
div
jle
xchg
hlt
adc
out
enter
fucomi
sahf
shlb
xlat
xchg
mov
enter
mov
sbb
lcall
inc
repz
jo
gs
push
sub
add
fsubrs
mov
inc
and
fmull
dec
call
dec
pop
shl
fcmovbe
dec
lahf
jns
popf
push
out
inc
fstl
push
adc
mov
fbld
add
outsb
xchg
lret
xlat
push
pop
ds
mov
sub
mov
mov
out
push
and
push
shlb
imul
ficoms
mull
mov
xchg
and
push
mov
add
cmpsl
jmp
dec
shlb
or
fcmovnb
sahf
pop
ja
mov
push
addr16
or
divl
cmp
clc
js
out
mov
lret
idivl
and
xchg
dec
cmpsb
notl
roll
test
add
int
std
das
out
arpl
xchg
aaa
xor
cmp
mov
popf
cmp
jne
xlat
jmp
leave
imul
lcall
xchg
mov
movsl
or
fcomp
pop
pop
mov
or
mov
push
adc
cwtl
inc
out
pop
xor
cmp
pop
orl
in
stos
pop
xchg
sbb
in
idivl
jge
cwtl
jecxz
lret
ss
pop
loopne
sbb
dec
mull
dec
or
xchg
clc
xchg
cmpb
testl
icebp
dec
imul
std
out
xor
push
ret
sti
data16
mov
jne
jl
mov
lcall
call
sub
movsl
pusha
leave
or
inc
test
push
mov
test
adc
test
call
jns
xchg
jg
mov
mov
push
or
mov
rcr
lods
mov
loop
out
test
xorl
jbe
xchg
add
int3
faddp
popa
movsb
sti
xor
aas
jb
push
sub
jecxz
mov
divl
nop
pop
adc
sbb
inc
inc
or
out
test
into
negl
fisttpl
js
mov
dec
mov
xchg
scas
mov
cmp
pop
jb,pn
xchg
or
adc
filds
mov
test
imul
lds
data16
sub
mov
hlt
cwtl
jno
cmc
jg
xchg
rorl
out
es
rorb
and
std
push
rcl
xchg
mov
negl
jle
jo
cs
outsl
jl
xlat
jae
shll
loop
mov
fidivrl
idivl
pop
gs
sub
mov
out
and
scas
lds
idivl
pusha
inc
jg
div
pop
mov
ret
and
push
sub
and
adc
jae
dec
xor
xor
push
mull
fildll
repnz
jmp
gs
or
dec
popa
and
negl
ret
mov
lods
xor
jle
xchg
into
mov
roll
pop
mov
out
pop
push
mov
push
cmp
in
push
int
mov
xchg
sarl
testl
ficoms
add
inc
loop
imull
fs
mov
fnstcw
daa
dec
js
out
sub
aas
negl
cwtl
outsb
xor
and
mov
cmp
push
xor
xchg
ljmp
push
movsb
dec
add
cld
adc
fstpt
or
and
xchg
ret
testl
js
sbb
mov
fimull
je
aas
ret
mov
pop
shr
dec
filds
lahf
xchg
int3
and
xor
cmp
sbb
inc
ljmp
idivl
push
sahf
nop
je
scas
inc
ss
lea
xlat
idivl
addr16
jae
enter
int3
xchg
push
nop
in
ljmp
xor
adc
mov
out
adc
loope
ficompl
push
xor
mul
lcall
lods
sbb
jge
add
pop
and
fildll
or
ret
dec
mov
ficomps
jbe
filds
out
sub
lds
scas
mov
jmp
xchg
jmp
ds
cmp
test
and
sbb
dec
sbb
or
fidivrs
lods
push
testl
pop
pop
idiv
pop
nop
mov
jl
shl
pop
jae
enter
ds
sbb
jp
imull
inc
ret
pop
cwtl
cmp
dec
faddl
sbb
mull
pop
stos
push
mull
xchg
push
push
xor
popa
xchg
mov
fimull
dec
sub
ret
iret
xchg
jmp
jmp
stc
insb
notl
jns
outsl
aas
pusha
adc
xor
cmc
sub
mov
mov
mov
mov
pop
test
cmp
adc
repz
test
and
or
testl
mov
je
lods
bound
rorb
in
cmp
test
addb
idiv
stos
push
stc
in
dec
div
sub
jle
in
ss
pop
mov
insb
les
fstpl
fcomi
divl
leave
xchg
cmp
pop
fistps
xchg
sub
sahf
cmp
mov
repz
inc
dec
notl
xor
pop
sahf
sbb
ss
cmp
jmp
call
sbb
testl
in
out
inc
cmpsb
fdivs
test
ljmp
test
stos
fsubp
mov
fiaddl
push
jl
out
mov
xchg
cmp
mov
cmc
jae
cmpsb
mov
or
mov
lock
jl
pusha
lret
add
divl
jmp
stos
je
out
cmpsl
test
adc
out
mov
add
dec
int
add
pop
es
imull
adc
fwait
adc
jge
pop
negl
mov
pop
dec
fcomps
call
dec
pop
mov
out
dec
fbld
idivl
push
xor
idivl
cwtl
xlat
push
dec
inc
int
lods
xchg
loop
mov
cld
cmp
std
inc
out
and
lock
pcmpeqb
push
push
mov
idivl
loope
push
or
div
xchg
xchg
shr
leave
testl
pop
cmp
mov
xor
jne
outsb
ss
pop
mov
jecxz
and
insb
push
imull
ret
add
pop
mov
testl
out
out
rcrb
out
and
lret
fistpll
dec
ljmp
xor
jle
fsts
cmc
mov
jmp
out
clc
xlat
shrl
andl
or
mov
negl
into
and
notl
movl
negl
nop
adc
idivl
loop
je
sbbb
sub
cmp
orl
out
orl
xchg
mov
nop
outsb
aas
push
xchg
mov
adc
je
xchg
out
cmp
pop
insl
pushf
mov
sub
xchg
sub
std
push
hlt
subl
add
loopne
scas
aas
push
or
or
fidivl
leave
sti
push
mov
xor
cmp
imull
push
jle
push
mov
mov
xchg
xor
shl
cli
cmpsl
push
xchg
mov
inc
fcmovnu
push
ds
fdivr
push
push
sti
out
jp
popa
sbb
pop
stos
outsl
mov
or
jnp
mov
scas
insl
dec
mov
jb
mov
jo
jecxz
cs
nop
rclb
jecxz
mov
jmp
sub
arpl
dec
push
addl
push
filds
pushf
aam
sbb
and
mov
push
xlat
mov
mov
imull
and
xchg
xor
cmp
bound
add
testl
push
pop
test
jbe
call
cmc
mov
aam
fldt
repz
daa
adc
rcrl
fcmovnb
mov
push
mov
bnd
lcall
fidivrs
xor
mov
cld
and
jbe
sbb
jns
push
fdivl
dec
das
cmpsl
and
fcomi
adc
idiv
cmp
lahf
ret
js
push
cmp
mov
mov
call
fistpll
fcmovne
cwtl
pop
addr16
dec
nop
stos
inc
cmpsl
xchg
lods
xchg
lret
jne
xor
xlat
mov
cmp
mov
mov
mov
add
cli
cmp
jmp
xchg
dec
jns
pop
mov
mov
xchg
scas
loope
inc
jnp
jecxz
adc
xor
shrb
call
neg
jo
movsb
jb
icebp
dec
negl
imul
aad
xor
xor
jbe
mov
or
mov
testl
inc
push
mov
cltd
les
push
xor
pop
out
addr16
push
xlat
cli
js
and
xorb
pop
in
jo
lahf
ja
jle
jp
mov
movsl
push
xor
sub
sub
cmp
ds
lods
push
cmpsb
mov
fs
outsb
cmp
outsb
xchg
and
xchg
dec
mov
adc
hlt
sarl
loopne
bound
mov
add
mov
sbbb
push
out
lods
bnd
add
push
out
sti
stos
mov
fldt
orb
sub
mov
rcrb
adc
mov
aaa
stos
mov
jb
push
or
out
ljmp
out
jo
mov
dec
pop
sub
int
push
icebp
outsl
out
push
adc
pop
pop
push
or
pop
les
cwtl
pop
mov
sub
sbb
scas
icebp
sub
mov
es
mov
pop
cmp
push
cmp
or
xchg
inc
push
out
or
push
mov
mov
dec
jmp
and
cmp
xor
aas
mov
pop
or
dec
test
pop
stos
push
cmp
mov
jbe
pop
mov
mull
testb
dec
and
push
mov
xor
or
loopne
enter
xchg
mov
xlat
sub
xor
sbb
mov
push
test
mov
mov
pop
test
mov
sti
iret
addr16
repz
push
daa
call
fldt
cld
lds
add
pop
mov
in
ja
arpl
jg
cmp
mov
adc
repnz
push
mov
push
push
aam
pop
lahf
insl
jae
sbb
pop
mov
adc
jns
in
mov
adc
out
xchg
inc
leave
adc
push
jecxz
or
and
stc
inc
mov
adc
adc
loop
or
mov
jge
test
outsb
in
loop
add
jno
out
or
jg
into
mov
add
or
sbb
sub
mov
sbb
inc
scas
fwait
xchg
fstl
cmp
cmc
sbb
in
lods
int
stos
sbb
bound
inc
mov
pop
dec
dec
dec
in
jo
mov
fisubl
lret
inc
add
mov
daa
pop
imul
lock
mov
lahf
cvtss2si
cmc
sub
mov
mov
pusha
jle
xor
push
ljmp
xor
jp
xchg
mov
je
or
mov
ficoml
rorl
sbb
xchg
das
js
sub
pushf
jp
movsb
idiv
fcmovnb
jle
xor
push
pop
fs
lret
mov
xchg
mov
inc
adc
lods
shl
adc
jno
into
and
ja
and
mov
stos
adc
jno
inc
cmp
xor
xchg
movb
shll
or
push
lock
loopne
filds
shrb
inc
insl
sbb
mov
sbb
mov
sbb
ds
mov
pop
jl
cwtl
mov
adc
aam
stos
cmp
or
and
mov
sbb
xor
out
inc
xchg
dec
pushf
sbb
mov
pushl
xchg
sbb
jo
inc
xlat
cmp
rolb
jmp
lret
movsl
inc
lock
pusha
sbb
and
mov
in
jns
mov
lods
xorb
andl
call
and
out
mov
or
push
jmp
mov
lcall
jge
fidivrl
and
lods
xor
fldl
lods
imul
fcmove
xchg
outsb
cmp
pop
pop
mov
inc
xchg
shlb
es
jmp
addb
and
ret
sbb
loope
call
mov
je
out
sti
jnp
xchg
and
jb
cmp
xor
loopne
in
sbb
icebp
pop
mov
cld
cmpsb
je
orb
lret
push
inc
inc
mov
test
push
in
loopne
sub
sbb
ss
hlt
fstps
mov
imul
lret
xchg
lds
lahf
mov
stc
xchg
xchg
sub
and
loope
and
add
or
dec
adc
fsubrp
jb
into
insb
inc
in
sti
mov
movsl
imul
lret
lock
jecxz
loopne
adc
mov
mov
lahf
lret
lea
bound
jg
mov
int
cmp
fsubrs
xor
jbe
out
pushf
addb
dec
repz
stc
xor
aaa
xchg
aaa
pop
push
int
and
mov
cs
mov
aas
jno
shl
and
or
mov
lods
ljmp
cmp
mov
xchg
movsl
imul
add
lods
sub
fiaddl
aaa
adc
sbb
jo
inc
add
push
fcompl
add
xchg
mov
mov
cmp
mov
pop
lahf
ja
fistpll
ja
fwait
pop
repz
repz
cs
mov
mov
jp
orb
movsl
cwtl
mov
mov
and
sub
xor
pop
or
scas
push
sbb
mov
sarl
lods
imul
inc
jmp
adc
sbb
sahf
lods
ficompl
add
mov
fbstp
popf
or
jp
jg
cmc
sbb
dec
xor
int
lods
cmp
in
test
fwait
test
push
cmp
mov
mov
shlb
aas
jle
lods
cwtl
arpl
or
xor
adc
or
icebp
ss
or
movsl
mov
ja
scas
xchg
lcall
push
sub
ja
mov
nop
scas
sbb
mov
inc
sarb
mov
rorl
lahf
rcr
mov
cltd
outsl
xor
cmc
xlat
addr16
mov
inc
lock
in
pop
std
adc
lods
in
test
push
testb
xchg
js
pop
fidivrl
xchg
adc
std
mov
xchg
orb
hlt
inc
xor
repz
das
xor
out
pop
lods
fnstsw
je
subb
imul
xor
loopne
xor
ljmp
out
jmp
arpl
sbb
mov
mov
shrb
leave
mov
imull
shlb
out
int3
xor
or
sub
movsl
idivl
push
out
pop
xor
divl
aas
divl
xchg
sbb
idivl
mov
out
sysenter
lods
or
scas
cmpsl
out
ljmp
andl
inc
inc
ljmp
out
fimuls
loope
test
xor
divl
dec
mov
mov
cwtl
mov
push
daa
sbb
xor
jge
fdivrp
sbb
dec
or
push
jle
add
mov
aaa
cltd
addr16
sti
nop
jae
ret
imull
inc
sub
jns
std
testl
cmpsb
lret
test
jbe
aas
test
mov
mov
mov
mov
push
fbld
aaa
negl
add
mov
push
mull
dec
imul
scas
ss
out
mov
fmull
fiaddl
adc
and
out
stos
ret
xchg
mull
std
cltd
jge
loopne
fbld
jmp
test
push
sbb
daa
in
or
adc
pop
push
hlt
loopne
iret
inc
xchg
cmp
mov
pop
ss
inc
or
mov
seta
push
test
cmpsl
push
mov
pop
test
sbb
sub
adc
adc
fmull
out
jecxz
loop
xchg
leave
vcvtdq2pd
jmp
sahf
outsb
mov
popa
push
cwtl
test
pushf
pop
pop
push
xor
or
pop
out
mov
shl
inc
addr16
pop
add
sbb
hlt
fnsave
cli
inc
sub
mov
mov
aam
outsl
sbb
jmp
and
addr16
insb
test
loope
cli
cmp
jns
jmp
cmp
sbb
fcomp
sub
int
testl
cs
adc
sub
dec
or
pop
insb
ljmp
ja
add
ret
pop
adc
xchg
repz
je
insb
fwait
xchg
sub
lahf
pminub
push
addr16
pop
xchg
pop
rorb
ret
jno
or
jb
out
or
inc
push
inc
cmc
sti
and
jmp
out
xchg
scas
mov
mov
gs
dec
out
in
les
movsb
testl
push
push
mov
div
jne
mov
pop
popa
testl
lods
int
pop
xchg
and
xor
fisttps
xchg
add
xor
div
rcr
or
or
testl
and
sbb
stc
es
sub
out
int3
cltd
adc
mov
into
popf
ret
scas
lea
out
and
pop
sub
icebp
mov
lret
pop
test
lods
jno
testl
call
pop
pop
push
push
mov
jle
out
xlat
flds
cmp
pop
in
repz
sbb
scas
jge
sub
mov
mov
xlat
or
clc
jecxz
lahf
mov
idivl
adc
inc
xchg
dec
xchg
shl
test
fcmovbe
fnstenv
into
hlt
sub
mov
fcoml
testl
testl
cmp
dec
pop
jp
ficoml
lret
xor
out
push
mov
adc
push
and
outsb
xor
cmp
int
faddl
scas
testl
fcoms
ja
int3
jecxz
jecxz
fwait
not
sbb
jno
negl
das
push
jae
mov
dec
daa
lahf
cmp
push
out
movsl
sbb
imul
mull
mov
inc
into
ret
xlat
testl
push
mov
ror
lds
mov
repnz
adc
fcmovnbe
inc
xchg
jnp
pop
outsl
mov
xlat
xor
and
fildl
xlat
sub
outsl
jne
pop
mov
pop
push
mul
mov
sbbb
jg
insb
and
repnz
sahf
adc
sbb
cmp
das
loop
xchg
mov
dec
sbb
pop
stos
inc
negl
jge
cmpsl
divl
dec
push
popf
inc
imul
psubb
adc
cwtl
xor
push
add
je
rol
xor
adc
in
fildll
stc
push
repnz
fistpll
das
cmc
cmpsl
mov
in
jns
divl
fs
idiv
mov
stos
sub
ret
jnp
adc
jns
cmp
add
test
jbe
testl
xchg
xor
lock
add
sbb
add
pusha
test
pop
or
sub
xorb
mov
cmp
xor
or
negl
mov
xchg
jno
cmpsl
dec
xchg
mov
or
popa
lds
inc
ret
cmp
xlat
rcrl
daa
icebp
cltd
repz
test
mov
fnstsw
cmp
adc
sub
sub
into
stos
or
xor
pop
push
subl
nop
sub
mov
mov
in
testl
shrl
cmc
fsts
xchg
test
jecxz
pusha
jl
mov
call
cwtl
sbb
push
gs
stos
sub
dec
push
cmp
xlat
inc
es
pop
rcr
inc
daa
mull
cli
sub
mov
inc
negl
sub
dec
and
cwtl
repz
cmp
pop
in
xor
lret
insb
testl
jbe
idiv
mov
sbb
cltd
int
stc
xchg
out
jno
or
push
jecxz
sub
outsl
popf
fdivs
int
out
pop
pushf
push
imul
imull
mov
push
cs
pop
mov
cmp
in
xor
pop
test
mov
in
ja
adc
or
mov
inc
cmp
ds
cwtl
sub
addr16
ja
inc
fsts
sbb
negl
sahf
addl
adc
outsl
adc
or
sub
inc
push
cltd
imull
cmp
idivl
jne
clc
or
push
xor
fwait
or
jbe
inc
scas
testl
andl
dec
notl
out
push
pop
push
and
and
aad
sub
call
loope
imul
xor
lret
out
insb
pop
jno
fcompl
icebp
stc
inc
fbld
xlat
mov
test
aam
icebp
mov
imull
jns
dec
xor
mov
and
decl
push
mov
cld
pop
cltd
aas
xor
loopne
testl
push
sub
test
mov
inc
push
mov
stc
xor
push
mov
sub
and
push
nop
inc
or
mov
jecxz
sbb
divl
in
test
ret
mov
ja
scas
pop
into
out
ljmp
and
test
add
mov
mov
fistpl
nop
and
sbb
inc
add
pop
fiadds
mul
mov
outsl
and
mov
fcomip
push
arpl
rcrl
into
pushf
push
cmc
push
out
sub
dec
mov
ret
data16
cmc
or
jg
mov
pop
pop
je
jo
push
subl
testl
fdiv
in
pop
mov
push
scas
stos
add
sub
xor
pop
lds
aas
jecxz
inc
push
mov
std
dec
daa
cld
repnz
mov
out
mov
push
cwtl
mov
cmp
sbb
sbb
add
mov
iret
lods
pop
enter
xchg
idivb
call
push
sbb
fnstenv
not
pop
mov
lock
lods
movsb
mull
orl
popf
add
nop
push
xor
xchg
push
push
sbb
test
notl
pop
std
mov
add
scas
sbb
ss
mov
sub
movsb
lods
movsl
leave
pop
push
xchg
and
mov
loop
jmp
cmpsb
xor
xlat
je
jmp
xchg
negl
inc
fs
pop
sar
push
pop
adc
mov
testl
cmp
js
xor
add
ret
xchg
addr16
aam
or
jmp
fs
add
divl
les
fcmovnu
pop
test
testl
test
imul
aad
out
pop
sbb
insl
push
divl
sub
std
push
loope
jne
inc
test
lahf
inc
mov
pop
xor
outsl
pop
pop
inc
out
dec
xchg
or
mov
pop
jb
cwtl
fdiv
and
andb
inc
stos
pop
mov
adc
cwtl
push
cmpsl
cmp
mov
pop
xor
ja
mov
negl
mov
fists
jns
loop
and
xchg
cmp
in
sbb
arpl
repz
not
cltd
mov
mull
stc
mov
test
adc
and
xchg
lods
js
pop
inc
pop
nop
sub
and
testl
mov
mov
adc
pop
mull
scas
xchg
mov
mov
jp
xchg
fcomi
shl
adc
testl
cmp
out
sub
add
test
sbb
je
push
or
xor
pop
cmc
inc
xor
testl
xchg
mov
das
arpl
xchg
mov
sub
lret
lock
iret
test
sub
sbb
and
jecxz
es
mov
loope
into
pop
push
lahf
and
push
sbb
insl
lret
iret
fcomp
mov
and
js
mov
adc
aad
cmpsl
pop
stos
mul
out
es
or
iret
adc
or
inc
out
cmc
fiaddl
inc
sbb
addr16
jo
jbe
sub
mov
mov
mov
pop
sbb
add
fstl
leave
or
in
outsl
xor
sbb
mov
or
sbb
or
cmp
and
jmp
mov
mov
pop
mov
xlat
in
mulb
scas
mov
fdiv
xor
pop
xchg
or
fists
pusha
cli
sub
divl
jl
mov
pop
cmp
outsb
notl
mov
loope
dec
pusha
aaa
cs
pop
int
add
or
push
test
negl
iret
in
and
push
adc
imul
push
movsl
adc
mov
testl
sbbl
add
ds
int3
neg
dec
or
inc
ret
repnz
leave
sub
mov
sahf
push
negl
rclb
popa
ds
ja
push
mov
pop
jb
in
gs
testl
aas
inc
fiaddl
call
out
rclb
std
seta
xchg
or
test
push
sub
mov
dec
mull
in
adc
ret
pop
rolb
push
popf
mov
sbb
testl
push
xchg
inc
push
sub
jae
imul
mov
lahf
scas
xlat
ret
sbb
jmp
test
test
je
adc
lock
or
out
sahf
pandn
pop
push
xor
xchg
idivl
and
scas
into
adc
movsl
notl
sub
mul
test
dec
and
fs
inc
cltd
dec
dec
out
pop
cld
test
ljmp
ds
and
stos
cmpsl
fnstenv
cwtl
lcall
imull
mov
or
sbb
lods
and
mov
inc
negl
nop
sub
testl
aas
and
and
pop
cmp
push
ss
xchg
fdiv
in
imul
movsb
lcall
push
neg
aas
loop
xchg
addb
cmpsl
std
shll
jp
jg
neg
int
lea
imul
dec
and
sub
movsb
fdiv
jecxz
mov
and
fs
insl
inc
xorl
push
jo
or
cmpsl
js
jmp
loop
jmp
xchg
inc
lahf
pop
lcall
mov
cmp
loopne
cltd
inc
pop
mov
xor
xor
pop
repz
testl
mov
adc
jns
jmp
xor
xchg
imull
xchg
ss
addr16
sbb
lret
jmp
cmp
icebp
xor
xlat
cs
mov
cmc
sbb
mov
adc
push
ds
testb
psubsw
jg
pop
add
mov
pop
mov
mov
mull
mov
adc
mov
call
stos
in
ficoms
sahf
lahf
mov
jg
out
cvtpi2ps
movsb
jmp
insl
cld
ja
push
imull
xchg
jbe
lret
sub
sar
push
popf
xlat
xor
fsubl
loope
xlat
push
not
jg
sub
negl
inc
xchg
cmp
push
xchg
pop
jecxz
lahf
jnp
sbb
adc
mul
mov
sti
shl
orl
xchg
fnstenv
mov
in
jo
or
jge
jmp
inc
in
imulw
inc
xchg
xchg
stc
aas
fidivrl
pop
fs
ss
cli
sub
cs
mov
and
pop
dec
jbe
outsb
ss
cwtl
xchg
push
repz
xchg
and
cmp
cmpsb
fisubrs
mov
mov
mov
aad
ficoms
call
bound
into
cli
out
in
adcl
divl
jnp
int3
repnz
xchg
movsl
out
loope
sbb
cmp
loopne
xchg
or
cld
mov
clc
dec
push
pop
cs
xchg
out
test
out
add
sahf
xor
push
xor
imull
and
lcall
fldt
idivl
or
push
mov
notl
xchg
flds
leave
inc
ja
mov
fs
jb
push
idivl
push
and
js
out
scas
notl
xor
mov
out
out
cwtl
dec
fsts
aam
xchg
clc
jns
cld
inc
idivl
jmp
cmp
sbbl
fstl
push
div
push
imul
and
in
cwtl
mov
adcl
notl
jge
cli
shl
add
imull
dec
fwait
lret
negl
cmp
cs
lods
out
pop
imul
mov
mov
inc
xchg
inc
outsl
nop
aam
or
shlb
dec
fstps
adc
stos
out
jl
clc
ret
repnz
xor
testl
sbb
in
es
hlt
jnp
inc
dec
adc
lcall
loopne
not
shl
push
push
xchg
lds
int3
mov
fwait
das
test
sahf
jg
and
testl
repz
pusha
inc
in
dec
out
xor
add
mov
icebp
pop
cs
out
test
adc
sub
in
mov
xchg
outsl
inc
lods
pop
lcall
sbb
pop
mov
lcall
mov
xchg
out
addr16
or
js
pop
sub
faddl
fbstp
mov
lock
out
cs
jp
fimull
jb
inc
sbb
aam
pushf
adc
not
mov
lret
sub
inc
jno
ja
and
xchg
xchg
and
xor
aaa
mov
sub
aad
xchg
imul
aas
fs
mov
or
sbb
pop
pop
or
push
mov
mov
xlat
jp
ficoml
push
pop
out
mov
mov
not
adc
push
popa
mov
dec
push
xor
cmp
shr
or
ret
loop
icebp
adcb
idivl
mov
ret
jp
mov
xlat
je
adc
inc
sub
inc
nop
push
jmp
shl
cmp
adc
shl
ljmp
in
or
push
push
stos
repz
cmp
cld
repz
add
cmp
into
divl
test
jge
push
lock
testl
and
mov
mov
xor
lret
dec
filds
arpl
and
xchg
push
rcrl
fadds
jecxz
into
xor
dec
test
add
in
gs
mov
loope
int
call
lret
xor
icebp
data16
cmp
mov
fs
bound
pop
mov
mov
sub
mul
ret
jg
fisttps
mov
sbb
daa
int
es
in
loopne
rorl
and
cmpsl
pop
rcll
aad
orb
jp
pop
xor
test
inc
pop
cmc
mov
mov
jbe
push
jecxz
mov
lds
testl
shl
or
add
or
mul
ret
outsb
into
jecxz
outsb
movq
lds
test
call
lods
mov
sbb
adc
rsm
shlb
push
iret
sub
mov
ret
dec
neg
jle
add
int3
testl
jmp
out
shlb
testl
sbb
sbb
in
inc
insb
xchg
lret
scas
sbb
jae
xchg
adc
divl
dec
jp
add
push
and
or
mov
xchg
pop
add
out
fmul
pop
gs
adc
cmpsb
mov
rcl
in
int3
sbb
testl
dec
adc
icebp
inc
cltd
outsl
push
mov
adc
testl
lock
mov
inc
aam
adc
xchg
push
or
xlat
shrl
stos
mov
or
aad
add
adc
inc
cmpsl
pop
sub
sub
rorb
jge
roll
and
jmp
xchg
push
pop
test
outsb
push
rorl
mov
ja
sysenter
fs
cld
stos
push
idivl
sub
imul
notb
sub
or
negl
lret
in
pop
rorb
jnp
cmp
call
jo
dec
shlb
mov
fdivs
jno
addr16
xor
sub
fwait
mov
je
jecxz
lret
rolb
mull
pushf
test
dec
push
je
imull
adc
cli
idivl
sub
jl
mov
test
push
or
xlat
rcl
pop
or
inc
nop
fucomi
ljmp
push
jecxz
sar
dec
sub
int
mov
mul
jb
vmwrite
out
insl
sub
sub
xchg
mov
mov
inc
arpl
push
xchg
jp
sbb
xlat
fsubp
fldt
xor
loopne
ret
fwait
cmp
cli
mov
cld
xor
mov
and
jecxz
aad
dec
out
testl
enter
hlt
dec
xlat
icebp
push
push
dec
int
jmp
js
pusha
out
adc
add
jo
cmp
add
xor
dec
sbb
dec
into
cmp
cmpsb
ss
cmc
jae
xlat
bound
repnz
fimull
out
xchg
pushf
popf
cltd
push
fistl
sbb
sub
inc
push
xor
pop
push
mov
mov
lea
imul
addr16
inc
fdivr
pop
cmp
dec
cmp
ret
pop
sub
idivl
mov
sbb
or
movsb
jle
sub
push
xchg
push
add
in
add
push
fcoms
psubsw
std
dec
addr16
jo
dec
push
imull
clc
sahf
mov
cwtl
sub
inc
fs
mov
xlat
fcmovnbe
idivl
pop
push
sbb
or
adc
mov
call
jmp
xchg
insb
xlat
mov
imul
mull
mov
mov
pop
clc
jb
daa
adc
mulb
idiv
mov
and
lds
push
jl
scas
inc
outsb
lods
shl
popa
int3
or
pop
push
or
je
dec
in
jecxz
lret
test
aad
push
mov
cmp
idivb
push
xchg
in
sti
sbb
pop
ja
js,pn
ret
and
out
leave
ss
push
xchg
repz
pop
mov
negl
inc
jge
negl
inc
lock
inc
stos
fisttpl
not
shr
pop
fs
add
nop
lret
movsl
cmpsb
xorl
cltd
push
out
ss
xchg
xlat
bound
inc
pop
ret
jno
std
mov
test
aam
sbb
cmc
testl
mov
enter
test
hlt
pop
cmp
pop
cmp
push
xchg
fstps
mov
add
jecxz
adc
andb
fwait
hlt
jmp
pop
mov
in
inc
push
outsb
dec
leave
testl
and
push
jae
jnp
shl
sub
mov
dec
push
notl
xchg
shlb
loope
jge
push
ljmp
fcomi
lret
test
lcall
mov
inc
mov
pop
xlat
sbb
es
out
das
sti
pop
imull
imul
in
lcall
pop
add
flds
dec
popf
mov
sahf
testl
and
push
xchg
scas
insl
fcoml
sub
cs
mov
ljmp
xor
cmpsl
adc
fs
shrb
ja
push
notb
sbb
pxor
imul
aaa
add
xor
push
sbb
mov
cld
cmp
pop
scas
inc
add
pop
sbb
sti
xchg
leave
mov
xor
cmp
jmp
js
xor
or
inc
add
mov
lret
mov
xorl
divl
cltd
imull
push
mov
inc
pop
push
push
pop
jmp
inc
sub
mov
mov
cmp
ret
out
out
imull
pop
mov
testl
adc
xor
inc
push
pop
testl
fnstenv
leave
int
or
pop
hlt
test
xchg
pop
add
inc
jmp
mov
sub
inc
pop
test
in
sub
movsl
insl
mov
jae
push
divl
or
out
sub
mov
dec
xchg
cmp
loopne
testl
mov
mov
popa
outsb
push
in
test
jg
mov
mov
outsb
add
shlb
sbb
loopne
pusha
divl
add
in
subl
stos
or
mov
aam
dec
xchg
add
or
pop
shl
sbb
jne
test
pop
fisttps
shlb
loopne
mov
dec
test
pop
mulb
outsb
jae
pop
pop
faddp
inc
test
xor
add
notl
cmp
mov
out
negl
mov
cltd
and
push
add
mov
test
leave
or
ljmp
dec
add
imul
mov
push
inc
sbb
adc
movsb
add
xor
inc
pop
dec
and
aas
fnstcw
cwtl
fsubrl
xchg
dec
dec
int3
das
push
cmp
add
ss
cmc
add
repz
repz
ja
out
adc
stos
mov
jae
addb
mov
in
cmp
dec
mov
cwtl
rcrl
jmp
data16
inc
push
sbb
out
ljmp
out
enter
lods
or
test
mov
pop
sbb
cmpsl
lret
pop
jae
dec
cmpsb
xor
popf
insl
cld
mov
xchg
out
bound
and
fs
lock
dec
mov
or
shr
pop
pop
push
dec
sub
push
mov
movsl
mov
xor
or
enter
push
inc
pop
pop
mov
out
cwtl
cmpsb
pop
xchg
sub
ljmp
xchg
mov
jno
loop
aaa
dec
cwtl
push
aas
push
jne
dec
sub
gs
sub
shll
fcomps
xlat
cltd
pop
divl
xorb
ja
test
or
lds
adc
jnp
hlt
inc
dec
sub
pop
xchg
scas
pop
int3
mov
adc
pop
xor
and
es
int
adc
int
sahf
jnp
test
mov
pop
pop
out
loopne
fcmovbe
jmp
push
xchg
pop
fldl
aas
repnz
stos
dec
add
lods
xchg
fwait
dec
dec
out
cmc
and
jle
mov
dec
hlt
sub
pop
or
ljmp
mov
cmc
incb
xlat
cltd
out
xorl
cmp
pop
xchg
cmp
pop
shlb
xchg
icebp
xchg
sbbb
fucom
mov
int
pop
jbe
inc
push
mov
mov
movsl
call
outsl
cwtl
add
push
ljmp
movsl
mov
sti
ficoml
jb
jg
scas
cmpb
cs
adc
adc
movsl
cs
test
psadbw
scas
popf
and
mov
cmp
rol
xor
popa
fstpl
ss
in
dec
das
add
push
cmp
dec
imul
jo
mov
pop
stos
loope
gs
add
int
push
in
mov
cmpsl
lret
cld
int
xchg
mov
cld
and
add
dec
icebp
sub
orb
xchg
add
mov
fnstcw
and
jbe
in
dec
inc
cmc
pop
and
mov
mov
lds
rorb
sbbl
in
sbbl
cwtl
and
outsb
xor
test
pop
jge
dec
stos
xchg
cld
cwtl
xchg
out
or
fbld
mov
or
pop
sub
cmp
lcall
ljmp
sbb
sbb
sbb
jbe
or
lods
icebp
iret
ljmp
add
lcall
inc
in
or
mov
arpl
xchg
out
xchg
movsb
mov
add
je
out
ljmp
test
out
add
dec
out
js
xchg
out
push
xchg
scas
fs
scas
rorb
mov
add
idivb
mov
jo
jge
cld
fisubrl
mov
jae
jg
mov
ja
push
jle
mov
insb
add
adc
in
scas
cmp
js
add
ljmp
sub
jp
push
pop
icebp
cmpsb
out
dec
jno
bnd
ds
inc
sahf
loop
movb
push
push
add
pop
mov
scas
xchg
mov
or
cmp
lods
dec
lock
leave
push
cmpsl
outsb
push
neg
inc
sub
xor
test
arpl
pop
ficompl
inc
inc
enter
push
push
jb
nop
jnp
push
xrelease
jmp
jbe
ss
mov
pop
scas
imul
testl
jmp
xor
fldcw
sbb
push
inc
mov
out
or
mov
pop
and
fiaddl
or
inc
xlat
sub
mov
add
movl
es
loopne
orl
into
sub
adc
fwait
pop
jne
in
xchg
imul
cmc
jg
inc
mov
sbb
sub
and
or
jbe,pt
push
ss
adc
adc
mov
mov
popa
mov
jmp
ljmp
inc
xchg
cmpb
push
ja
popf
inc
jb
shll
or
sbb
stos
data16
ficoms
cwtl
mov
inc
popf
call
sbb
mov
popa
gs
fs
je
in
ficoms
and
or
scas
ja
movsl
adc
dec
push
or
aaa
loopne
inc
sahf
xchg
inc
sub
mov
dec
fcomi
insb
pop
ret
je
cwtl
test
mov
push
dec
xchg
sbb
out
ljmp
or
pop
xchg
scas
push
and
mov
call
out
adc
mov
int
es
sub
data16
rorb
mov
filds
add
cmpsb
xchg
scas
xor
or
mov
push
mov
cmc
loopne
push
dec
inc
fs
fcmovnb
mov
test
int3
out
jbe
scas
pusha
push
pop
shl
mov
xchg
adc
scas
les
and
jnp
pmaddwd
std
push
mov
iret
pop
lcall
xchg
js
int3
in
sub
lods
xor
xchg
out
and
cwtl
lods
lea
repnz
ljmp
sbb
mov
inc
push
xor
sbbl
divl
jo
inc
cmp
adc
negl
mov
pop
ja
sbb
jb
push
repz
and
sahf
addr16
lods
std
push
xchg
add
adc
fstpl
push
mov
push
pop
fcom
mov
and
fdiv
mov
sub
jg
aad
arpl
testl
jmp
fs
mov
insl
es
in
lods
mov
test
mov
imul
push
imulb
mov
cli
xchg
jmp
inc
nop
inc
stos
mull
pop
sub
xor
imull
mov
stc
fdivr
je
pop
andl
adc
out
test
mull
xlat
gs
pop
shrb
cmc
outsb
jmp
test
inc
rorb
neg
ret
int
shlb
xor
popf
jle
mov
dec
pop
pop
or
es
cld
notl
rcll
jg
mov
sbb
sti
stos
cmp
sub
lods
xchg
ja
rcl
dec
divl
jb
out
fld
sbb
negl
mov
test
sbb
sbb
cmp
movsb
mov
fidivrl
into
xchg
imul
dec
xor
cmc
mov
ficoml
test
sub
adc
ret
xchg
xor
addl
push
xlat
push
pop
lret
fnstenv
insl
push
push
loop
into
xchg
daa
out
stos
lret
frstor
hlt
stos
out
lock
call
adc
cmp
inc
mull
jns,pn
testl
xor
mull
mov
jbe
aas
jb
xlat
fdivs
gs
pop
fs
xchg
and
insb
stos
mov
sub
fisttps
cmp
push
dec
mov
mov
out
mov
nop
and
jnp
negl
es
pop
pop
into
lods
dec
imull
call
or
lock
jecxz
shll
xor
mov
pop
push
fbld
xor
xchg
neg
mov
jne
idivl
mov
out
pop
sub
inc
aaa
push
add
sbb
mov
cs
xchg
test
sbb
xchg
mov
mov
inc
xlat
push
pop
mov
sahf
out
pop
fwait
icebp
fwait
xor
adc
dec
scas
push
push
lahf
adc
inc
mov
ss
into
or
leave
pop
xlat
pop
pusha
sbb
xor
xor
rcll
sbb
xchg
cmp
cmp
fcomps
mov
lret
test
divl
dec
fcomip
lcall
mov
cmp
idivl
int3
xchg
add
pop
or
xchg
dec
mov
pop
and
xchg
push
push
fidivrs
test
and
push
or
pop
cmp
sahf
movsb
add
push
not
sub
mov
inc
sub
pop
pop
mov
adc
mov
mov
imull
jne
mov
repnz
fdivs
out
inc
jecxz
hlt
negl
adc
out
sbb
lcall
movsl
lock
stos
cmc
subl
push
and
xor
leave
mov
dec
mov
call
mov
insl
jg
inc
add
in
or
push
push
inc
xor
pop
in
call
adcb
and
aad
insl
out
imulb
loope
test
push
jo
lods
fwait
out
cli
mov
sbb
shlb
jbe
leave
ret
ja
cmp
jecxz
inc
jmp
jae
adc
div
clc
iret
xchg
xchg
dec
cmp
adc
mov
mov
and
paddusw
jne
cld
pop
or
xchg
lcall
popf
negl
out
xlat
call
push
mov
xchg
loop
js
adc
fistpll
xchg
shrl
stos
cmp
inc
divl
popf
dec
sahf
out
sbb
mov
mov
jne
xchg
cli
push
sbb
xlat
lahf
xlat
sub
jns
imull
push
test
pop
jne
pop
mov
dec
mov
rcll
movsl
push
xor
repnz
mov
shl
lods
jb
or
mov
mov
pop
mov
or
mov
ficompl
idivl
jge
shl
sbb
push
cmpsb
push
jne
loop
daa
testl
mov
pop
push
push
jmp
xchg
push
mov
aas
negl
cmc
xchg
jno
call
cltd
cmp
mul
das
pop
jbe
dec
jle
push
repnz
shrb
lahf
mov
inc
dec
lods
xor
pop
mov
sub
out
jecxz
sarl
divl
dec
test
mov
imull
ss
fcmovbe
in
in
pop
mul
cmc
inc
jns
cmp
negl
push
mov
imul
fs
rcll
sub
mov
xor
fdivl
sbb
and
sub
dec
cmpsl
shlb
divl
shrb
insb
lahf
ja
out
and
mov
jne
mov
neg
xchg
xchg
scas
insl
pop
pop
xchg
ljmp
gs
jnp
adc
lcall
cmp
in
jmp
pushf
mov
dec
std
mov
out
lods
test
sti
mov
mull
popf
sub
hlt
imull
int3
mov
iret
mov
mov
push
xchg
jb
push
xor
sbb
cmc
add
ss
test
pop
aad
loope
xor
mov
cli
ss
jno
shr
fadd
pop
jg
mull
shr
sub
xchg
imul
movsbl
adc
in
mov
jae
xchg
adc
inc
jmp
aaa
inc
lcall
and
jl
loopne
ss
mull
inc
mov
rolb
xor
add
test
jle
gs
push
pop
cmp
notl
repz
lahf
lock
fisubrl
in
inc
outsl
lea
loopne
adc
fidivs
nop
into
mov
in
push
call
jecxz
divl
sbb
addr16
add
lds
xor
adc
or
xlat
out
repz
dec
testl
imull
flds
xchg
enter
test
pop
loop
inc
mov
mov
pop
filds
cmp
mov
ret
lock
dec
and
cmc
inc
and
clc
or
xor
inc
movsl
in
push
dec
mov
fdivrs
cmp
fists
fdivp
aam
jge
add
divl
mov
inc
imul
test
sub
out
mov
cwtl
mov
neg
mov
insb
xlat
notl
and
pop
push
je
insb
cmp
testl
in
mov
notl
aas
jb
jle
stc
notl
imul
testl
push
cld
xlat
xchg
mov
out
pop
lcall
or
popa
lods
push
loopne
shlb
xor
out
andl
call
ds
fstl
imull
mov
push
insl
or
sbb
imul
pop
enter
out
cmc
aas
jo
or
div
and
movsl
jbe
fs
insl
mov
stc
add
loope
lds
gs
mov
xor
fsubrs
es
jo
in
sbb
xchg
negl
loopne
out
xlat
scas
lret
ret
xor
mov
jbe
je
mov
negl
repz
test
insl
rorb
xchg
sbb
out
shld
cmpsl
push
sahf
mov
pop
fsts
sub
imull
jb
stc
stc
jmp
pop
data16
push
and
inc
sub
jl
fdivrs
notl
inc
lds
xchg
mov
popf
sahf
lock
mov
lea
clc
repnz
mov
add
imull
data16
in
mov
in
dec
xlat
test
add
loop
aas
lahf
test
call
daa
mov
xchg
mov
nop
dec
inc
sbbl
jmp
testl
ja
lea
testl
fldcw
xchg
push
mov
or
lea
sub
cmp
push
push
idiv
inc
or
mov
jg
adc
scas
jmp
js
xor
sbb
in
notl
and
int
ja
dec
fcoml
add
add
cmpsl
xlat
faddp
sbb
arpl
cld
cli
jbe
mov
xchg
xchg
iret
aaa
jne
into
mov
outsl
xlat
lea
adc
aad
sub
mov
jge
mov
iret
push
cmp
popa
xchg
cmp
jle
ret
mov
and
jb
add
sbb
scas
xlat
push
shrb
out
filds
notl
sbb
adc
sub
fistps
or
fists
testl
inc
ret
mov
cmpsl
aas
ds
adc
dec
notl
lods
sub
out
or
outsl
sub
shl
rorb
mov
negl
push
dec
cld
cmp
stos
lcall
jb
adc
loop
push
jg
mov
sar
jnp
mov
in
rcl
in
mov
ja
and
and
mov
inc
repz
sbb
dec
and
and
xchg
push
imul
mov
nop
testl
popf
neg
in
vpsadbw
negl
test
je
cwtl
lahf
out
dec
inc
or
jl
or
xor
dec
push
mov
jo
pop
mov
imul
or
push
int3
addr16
je
test
mov
out
mull
int
fidivs
lcall
out
int3
push
adc
pop
jle
mov
pop
inc
xlat
ljmp
mov
aaa
insl
pop
mov
sub
sarl
xchg
nop
pusha
iret
aad
cmp
ret
mov
aam
insl
xchg
cbtw
dec
test
repz
fs
stos
xchg
jbe
sub
jg
pop
dec
ss
aaa
movl
jmp
sub
sub
int
xchg
jns
jbe
test
out
jae
mov
sbb
mov
loop
xchg
repnz
ret
xchg
mul
data16
clts
rclb
dec
into
xor
stc
add
mov
mov
lock
cmc
mov
adc
loopne
cmpsl
insl
pop
shl
mov
in
sahf
fistpll
shrl
addl
sub
pop
add
in
notl
out
add
fcoml
stc
cmp
lds
hlt
repnz
stc
xchg
inc
rcr
jno
mov
adc
sub
sbb
add
lahf
xchg
jle
data16
mov
jp
inc
add
idiv
adc
pop
inc
jnp
divl
and
and
xchg
xor
lea
lret
fildl
xor
jb
jmp
std
push
xchg
push
lods
xor
lock
icebp
repnz
sbb
neg
fidivl
dec
mov
test
xchg
push
jnp
fidivs
pop
cmpsl
aam
testl
cmp
aas
ss
mov
pop
ljmp
push
lcall
cwtl
sbb
in
lea
fs
sub
lods
es
filds
and
push
add
push
jo
jns
jge
or
addr16
loope
aaa
bound
idivl
cmp
xchg
mov
mov
aaa
xor
repnz
sti
pushf
or
pop
xor
inc
sub
stos
out
cli
loopne
mov
inc
cltd
test
add
mov
sbb
cmp
add
shl
xchg
pop
sub
fnsave
sbb
jno
shll
xchg
jge
push
int3
ret
imul
or
jg
scas
pushl
ja
aad
pop
push
filds
adc
pushw
jae
gs
mov
mov
jp
push
aaa
ja
push
and
cmp
adc
arpl
test
add
stc
cmc
jge
cs
xlat
mov
sbb
jns
inc
jmp
adc
idiv
scas
xor
cli
xchg
cs
mov
xlat
fldl
jmp
pop
sub
rcl
cmpsb
fstl
stc
negl
enter
cmp
out
push
adc
aam
dec
repz
int
sbb
sub
je
in
div
sbb
das
xor
test
push
scas
shl
mov
xchg
lea
pop
leave
mov
mov
sub
lea
gs
aaa
or
jb
add
lahf
xchg
jmp
movsl
ffree
push
xor
fiadds
xorl
in
dec
pop
jg
int
aaa
xchg
mov
cmc
mov
pushf
lods
in
loop
mov
movsb
xorb
ds
out
jne
stc
mov
ficompl
push
cwtl
loope
push
sub
inc
xchg
subl
js
in
dec
jge
mov
pop
sub
ss
and
ret
lret
mov
icebp
sub
out
cmp
outsl
adc
sub
inc
fisubrs
fistpl
add
jmp
pop
fnstsw
fists
jge
rcrl
jno
ret
scas
xor
movsl
or
fwait
orb
jmp
jl
insl
mov
pushf
inc
sbb
fcmovu
cmc
sahf
loope
addr16
aaa
sub
shr
test
sub
out
fs
mov
jmp
rcr
cmp
jbe
test
fdivs
add
mov
cmp
and
jo
mov
xor
lock
xchg
sbb
dec
enter
and
adc
inc
ja
js
fsubrl
push
mov
jle
pop
shlb
outsl
gs
pop
jecxz
aam
mov
imul
ss
mov
fildl
xchg
push
dec
push
in
mov
inc
mov
mov
dec
arpl
pop
sti
fimull
cltd
leave
push
xlat
mov
pop
inc
negl
lds
scas
enter
lret
flds
cmp
fwait
add
cmp
mov
mov
add
add
in
sbb
in
xchg
mov
std
ljmp
jne
test
adc
movsl
cmp
es
adc
fdivl
or
mov
mov
pushf
xchg
jle
xor
sbb
xor
in
std
outsl
and
sub
and
leave
cmpsl
lea
mov
test
out
in
sbb
xor
sub
fldt
out
shlb
repz
ljmp
outsb
lcall
test
test
and
jno
add
cmp
imul
cmp
aaa
andl
fsubrl
cmp
outsb
sub
fcmovu
jns
add
mov
or
test
pushf
or
seto
sbb
xchg
fnstsw
ljmp
mov
mov
dec
ficompl
in
jns
movsl
cmp
in
into
fidivrs
cltd
mov
xchg
mov
cltd
imul
sbbb
sub
loopne
fs
leave
mov
dec
sbb
fyl2x
or
and
mov
arpl
bound
and
dec
cmpsb
jmp
shlb
test
ret
mov
fcmovbe
call
outsl
and
cmp
fcmovbe
sub
xchg
ds
push
test
add
dec
mov
push
mov
mov
sbb
push
sbb
fistpll
imul
in
adc
sbb
mov
dec
insb
mov
add
in
fidivl
mov
xorb
push
xchg
cmpsl
sub
out
test
mov
lcall
jo
mov
fwait
out
in
mov
test
nop
sahf
scas
idivl
scas
lcall
mov
fimull
push
push
ret
int
in
mull
push
cli
sbb
scas
push
fistl
into
jae
add
jo
pop
test
push
xchg
pop
pop
mov
movsl
daa
sub
negl
pop
pop
fisttpl
repz
add
xchg
divl
cmp
inc
adc
sbb
testl
add
sbb
test
jne
negl
mov
test
andl
cmpb
arpl
dec
xchg
call
pop
ss
push
sbb
cmp
in
lods
inc
mov
push
std
loopne
inc
sbb
inc
push
adc
mov
insl
xlat
push
xor
in
imul
dec
pop
xor
push
mov
inc
nop
jmp
or
mull
mov
jns
dec
add
rcr
dec
mov
pop
movb
arpl
inc
xchg
mov
lea
push
sub
jnp
and
andps
shlb
lret
jle
jp
sbb
pushf
cmpsl
sbb
mov
mov
jmp
pop
negl
add
xor
cmp
xchg
cmp
movsl
mov
mov
outsl
sub
cmp
jl
fcoms
push
notl
rcl
jne
leave
xchg
add
popf
cmp
cmp
sub
mov
push
in
clc
cmpsl
push
mul
cli
inc
scas
outsl
out
mov
jge
mov
jo,pt
cmpsl
and
sbb
loope
test
mul
adc
mov
shl
jno
cmp
ds
mov
testl
mov
xchg
cltd
fs
test
cmp
loope
xchg
xor
push
out
enter
movsb
push
notl
jno
mov
cmpsb
or
hlt
push
push
faddl
mov
mov
ljmp
adc
enter
dec
jnp
aam
jne
xor
dec
testl
sahf
testl
shr
aad
sbb
nop
aam
dec
lret
sub
stc
xor
jecxz
gs
cs
fucom
cli
shll
push
imul
out
or
fwait
or
adc
nop
int
cli
jne
testl
sub
arpl
rcll
xchg
loop
pavgw
in
cmp
and
dec
jecxz
mov
inc
jb
adcl
dec
push
mov
xor
inc
scas
jno
push
mov
testl
sub
sub
bound
iret
in
jecxz
xchg
shl
inc
xorl
lods
sub
ja
push
shrb
fcmovu
insl
sbb
mov
mov
lods
jmp
jecxz
rol
lods
div
xchg
cmp
and
push
ljmp
mov
and
out
cmpsl
mov
push
in
mov
push
xchg
sub
cmp
pop
ss
mov
imull
loope
scas
div
mov
sub
divl
rcll
inc
mov
imull
faddl
divl
mov
shl
lods
jbe
cmp
enter
pop
clc
sbb
call
cltd
test
lods
push
and
dec
out
adc
and
imul
loopne
sbb
cmpsb
adc
jb
std
or
xorl
adc
mull
mov
or
and
mov
not
push
xorb
push
push
pop
scas
idiv
mov
addl
pop
das
add
test
fidivs
pop
push
aas
call
jbe
cmpsl
inc
idivl
xor
push
divl
jp
dec
cmp
adc
daa
imull
jbe
push
inc
mov
sub
imul
and
rcrl
notb
dec
popf
mov
mov
ffree
lods
test
xor
xor
push
mov
mov
mov
in
mov
xlat
xchg
imul
aam
hlt
xor
or
es
imul
in
ss
push
idiv
pop
pop
movzbl
jbe
test
enter
cmp
ja
dec
adc
testl
shl
movsb
mov
sbb
xchg
dec
pop
xor
dec
cmpsb
cmp
or
xchg
scas
fldl
and
or
mov
cld
pop
lods
xchg
bound
sar
fsts
loopne
push
or
mov
scas
push
aas
shll
pop
add
daa
imul
pop
scas
adc
outsb
add
icebp
inc
cwtl
repz
das
aam
jno
inc
mov
mul
push
cmpsb
fnop
or
pushf
mov
inc
xchg
xlat
ds
out
inc
outsl
std
aaa
jmp
cmp
adc
pushf
xchg
sbb
pop
mov
xor
cmpsb
movsl
inc
aaa
jnp
xchg
inc
divl
sbb
jno
not
add
cmc
insb
jge
testl
rol
shll
notl
popa
imull
xor
lahf
xlat
pop
jbe
fbstp
dec
pop
add
pop
ret
fidivs
ljmp
xor
sti
lods
xlat
movsb
jecxz
and
pop
mov
mull
cmp
stc
test
out
push
or
fs
faddl
gs
push
cli
mov
pop
xlat
repz
pop
and
leave
xchg
movsb
pop
out
fs
mov
jb
mov
cld
negl
add
push
cmp
shlb
xchg
xchg
mov
lea
mov
call
cmp
lods
negl
mov
cmpsl
cld
xor
push
negl
idivl
stos
inc
in
repz
idivl
push
leave
ds
idiv
imul
and
mov
out
iret
xchg
add
xchg
jle
jl
insl
xchg
mov
rclb
call
or
lcall
mull
and
movsl
pop
fwait
mov
lret
loope
push
cwtl
sahf
push
or
xchg
int
inc
pop
mov
repz
mov
and
in
add
das
int3
dec
loopne
pushf
jnp
sub
jne
sub
jb
mov
icebp
aam
mov
mov
xor
pop
or
jne
pop
nop
pushf
inc
out
mov
xlat
imul
jl
out
out
and
adc
mul
cmc
xor
jo
je
stos
sbbl
jp
repz
orl
sahf
enter
neg
xor
out
pop
aad
addr16
sti
imull
pop
mov
adc
and
pop
cmpsl
or
lock
dec
xlat
std
mov
test
cmpl
ljmp
inc
pop
xor
outsb
and
roll
testl
and
xchg
xchg
in
pop
clc
popf
pop
shl
dec
hlt
sub
dec
jnp
cs
push
mov
jp
mov
xchg
push
cmp
in
std
loop
pushf
cltd
test
jbe
icebp
idiv
add
test
adc
and
ss
dec
shl
cmpsb
or
xchg
shrb
pop
pop
icebp
test
mov
lock
jge
in
lds
loop
movl
mov
andl
test
mov
idivl
jnp
ss
or
repz
pop
inc
imull
mov
andb
push
dec
xor
cmp
mov
lods
out
add
or
jp
xchg
jae
shl
jnp
xor
jge
push
jbe
out
ret
xlat
push
and
inc
cmp
inc
dec
repnz
mov
cwtl
test
adcl
dec
cmc
lret
std
and
sbb
neg
or
adc
push
idivl
push
not
ljmp
push
cmp
sbb
aas
and
and
jecxz
paddsw
pop
inc
sub
cmp
ja
cmpsb
mov
jno
sub
cld
fisttpll
push
negl
and
sub
andl
jae
xorb
mov
inc
mov
and
ficomps
pop
scas
scas
add
enter
iret
sahf
push
int
repz
push
shufps
jl
jecxz
lock
sahf
cmpsb
pop
cmp
mov
idivl
adc
and
pop
mov
xchg
data16
test
sbb
ficoml
decl
ja
xchg
xlat
xor
iret
xor
inc
mov
aad
push
jl
sahf
mov
clc
idivl
inc
mov
ljmp
call
push
jb
push
int3
fsub
jle
xchg
rorb
and
pop
pop
icebp
pop
subl
dec
fsubr
call
int3
les
fldt
popa
scas
dec
pop
jecxz
lods
or
xor
aam
inc
cli
push
mov
fwait
pop
je
ficoml
fbld
inc
pop
jns
fisttps
hlt
add
adc
ljmp
jns
dec
and
xchg
int3
sub
and
stos
mov
in
dec
dec
fiadds
or
idivb
xor
push
loope
add
mov
inc
dec
clc
xchg
xor
mov
push
pop
lahf
negl
shl
divb
imull
push
or
inc
fcomi
xor
test
testl
pmuludq
mov
jg
sub
clc
divl
sahf
mov
or
cmp
xor
ret
mov
ljmp
ret
notl
stos
arpl
mov
cltd
inc
mov
push
imul
lods
bnd
pop
out
push
xor
inc
xlat
jo
testl
mov
xor
sbb
xchg
push
fnstcw
neg
push
movb
fcoml
and
add
shl
xchg
out
jae
scas
out
or
in
adc
mov
out
in
shrb
cmp
mov
fildl
cmp
jle
stos
cmp
pop
out
cmp
repz
scas
hlt
sbb
and
xor
push
sbb
jmp
adc
pop
popa
pop
add
fwait
sub
xor
in
mov
xchg
mov
popf
lahf
cltd
ret
adc
fs
sbb
push
fisubrl
mov
mov
shll
sub
pop
or
lods
jecxz
repz
pop
push
mov
lods
mov
jle
jmp
jb
xchg
out
cltd
inc
inc
sbb
cmpsb
and
imul
insb
aas
add
mov
xor
adc
mov
xor
mov
add
add
add
sub
push
movb
inc
sbb
cmp
push
jno
lock
inc
add
mov
sub
cmp
out
mov
je
shlb
mov
pop
mov
and
mov
scas
add
stc
cs
out
add
int
inc
pop
push
and
das
gs
icebp
nop
xchg
xor
movsl
sbb
out
in
mov
jmp
pop
repz
and
pop
add
fs
mov
inc
add
js
imul
insl
lahf
mov
fwait
in
repz
xchg
cs
pop
sub
jne
pop
lods
jae
aaa
pop
mov
cwtl
pop
jns
repnz
ljmp
push
xchg
dec
add
xor
xchg
rcll
out
nop
push
int
clc
mov
push
adc
test
out
xor
inc
pop
add
call
fisubl
movsl
sbb
push
out
fldenv
lea
push
in
fwait
sub
arpl
movsb
aam
repz
inc
jl
mov
nop
fistps
inc
cmc
mov
add
lods
mov
push
mov
clc
int
mov
sbb
cld
fmul
or
icebp
enter
cmp
ficompl
mov
push
dec
into
sub
inc
movsl
mov
movsl
rclb
hlt
xor
sub
inc
int3
popf
adc
add
in
in
ds
ljmp
ret
xchg
add
cld
int
add
mov
shll
popl
or
pop
mov
mov
enter
imulb
pop
push
mov
sarb
xchg
push
mov
xchg
inc
push
out
push
xlat
mov
jae
adc
mov
inc
cs
and
stos
mov
jae
push
lock
mov
mov
stos
insl
fsub
lret
pop
pop
push
or
adc
aam
outsb
mov
push
jne
inc
ljmp
dec
mov
aas
nop
jo
adc
mov
mov
ss
inc
push
pusha
pop
jmp
mov
fs
pop
shlb
repz
fwait
xor
fidivs
pavgw
movsb
aaa
sub
aaa
in
push
pop
fildl
ja
fidivl
ja
int
jae
dec
jno
push
arpl
sub
fisttpl
or
jns
lret
fisttps
loopne
arpl
cmpsl
xchg
lock
pusha
or
adc
repz
inc
mov
scas
xlat
jge
idivb
ljmp
add
mov
add
fwait
xor
popa
cmp
cwtl
ret
das
adc
in
push
scas
sub
mov
mov
fs
inc
hlt
jle
mov
jecxz
mov
les
push
int
xchg
ret
adc
mul
sbb
add
out
lods
rcrb
adcb
mull
cmp
iret
pop
aaa
or
pop
cs
jge
pop
cmp
in
mov
pop
in
add
hlt
sub
lds
scas
inc
mov
dec
idiv
nop
inc
dec
icebp
push
mov
or
rorb
loopne
cmp
inc
movsl
mov
aad
mov
scas
add
enter
and
les
dec
adc
jmp
pop
jbe
in
adc
jno
subb
dec
mov
cli
scas
dec
aaa
out
js
int
jo
iret
inc
mov
or
movsb
sub
in
in
xor
scas
or
jno
inc
cmp
cmp
sti
js
movsl
std
loopne
add
push
into
and
mov
into
adc
push
std
shlb
jbe
mov
rclb
aaa
dec
xor
xchg
xor
xchg
in
stos
mov
mov
scas
cmpsb
and
xchg
sub
xlat
out
sub
pop
ljmp
inc
rcl
pop
mov
je
into
lock
mov
pop
push
mov
aam
mov
stc
pop
test
or
cmp
es
ret
mov
clc
cmpsb
pop
adc
popf
push
xlat
xchg
cltd
stos
mov
adc
int
cwtl
icebp
lea
push
push
mov
lcall
cs
xchg
push
adc
repnz
subl
mov
aaa
cmc
inc
int
gs
testb
jnp
les
cmp
repz
jbe
rcl
sub
xchg
jns
inc
test
lea
pop
jb
test
inc
mov
cld
mov
pushf
dec
cmc
pop
popf
out
xor
push
dec
dec
add
sbb
jbe
aaa
mov
out
fcoms
not
gs
lcall
pop
mov
testl
add
repnz
out
mov
cmp
dec
js
lret
notl
pop
ja
xor
aad
icebp
adc
push
dec
inc
test
pop
fucomip
scas
or
negl
mov
dec
nop
adcb
scas
mov
push
fbld
mov
sub
mov
mov
inc
xor
pop
call
add
out
xchg
test
push
or
nop
inc
mov
mov
xor
roll
xchg
lcall
pop
mov
leave
inc
and
int3
adc
mov
cmpsb
pop
maskmovq
testl
ret
or
js
inc
dec
lock
nop
mov
sti
push
mov
pop
mov
cmc
inc
sbb
push
scas
insl
out
ss
jle
xchg
mull
and
lds
popa
aaa
mov
lret
fdiv
cmp
pop
jno
idivl
ds
mov
not
cld
push
aas
inc
leave
dec
dec
je
and
push
jnp
add
inc
mov
loope
shl
xchg
mov
insb
test
pop
ret
dec
notl
div
mov
aad
dec
lods
test
xor
mov
lea
sbb
push
lret
ror
inc
pop
aas
xchg
div
loop
xor
lods
out
mov
cmc
jmp
addb
stc
xlat
push
push
push
fldl
idivl
xchg
adc
outsb
xor
cltd
jns
add
mov
mov
push
insl
not
push
sbb
imul
push
pop
inc
push
mov
mov
sbb
cmpsl
add
sti
mov
xchg
sbb
je
mov
fisubs
notl
into
repz
aam
les
idivl
lods
jmp
mul
add
fsts
push
or
jge
mov
mov
int3
hlt
cltd
mov
popa
stos
nop
outsb
test
notl
sub
mov
les
fnsave
out
rcrl
cli
mov
fwait
jno
sti
dec
rcrb
xchg
mov
mull
inc
add
stos
lock
stc
mov
mov
xchg
jns
xlat
jle
jae
sbb
sti
fwait
or
notl
or
mull
insb
dec
add
xchg
xlat
aaa
mov
mov
pop
out
std
mov
adc
lret
repz
inc
in
out
aaa
orb
cld
dec
push
dec
xchg
or
push
jle
fcomip
stos
adc
xor
mov
pop
adc
mov
fnstsw
lret
scas
and
leave
std
sub
idivl
xor
jne
jle
xor
push
pop
sarb
enter
pop
shlb
out
neg
andb
stos
mov
jnp
idiv
mov
mov
sbb
scas
sub
sbb
or
or
jb
cs
push
mov
stos
and
pop
cmp
icebp
call
in
xchg
divl
adc
lret
inc
aaa
or
idivl
adc
inc
inc
mov
push
add
mov
rorb
sti
inc
pop
xchg
fisubl
sbb
sub
aaa
sub
lods
and
jo
pop
and
fisubl
adc
sub
xchg
mov
mov
dec
push
jae
pop
std
scas
into
adc
mov
bound
push
pop
jbe
lret
lea
add
fwait
test
or
pop
int3
mov
hlt
pop
mov
hlt
stc
jmp
mov
mov
inc
mulb
iret
mov
push
sbb
outsb
sub
jle
xor
pop
loop
adcl
mov
jo
aas
jmp
mov
movsb
icebp
push
xor
xor
aad
lods
fimuls
sti
insl
xchg
fldl2e
or
mulb
cmp
andb
test
in
ret
aaa
pop
loop
pop
jmp
lahf
pop
jbe
js
out
cmpb
ljmp
mov
jge
out
lods
and
out
dec
cwtl
push
ret
lret
xor
jg
inc
add
lahf
out
lcall
mov
xchg
insl
loope
js
adc
mov
rcll
jge
adc
inc
ss
addr16
dec
shlb
movsl
sbb
loope
div
xor
pop
cmp
fimull
notl
jge
out
mov
pop
sti
jbe
fildll
lods
mov
push
xchg
cwtl
cmc
stos
mov
sbb
test
add
ss
mov
outsl
xor
inc
xchg
sub
arpl
out
mov
xchg
jno
mov
xchg
aam
insl
pop
mov
sahf
out
xchg
sbb
mov
jns
or
imul
pop
in
addr16
movsl
pop
outsl
or
push
fisubs
mov
fldl
ret
pop
add
outsl
pop
nop
fimull
pop
mov
aaa
mov
add
int
inc
push
cld
scas
fwait
lods
xorb
fs
sbb
outsb
mov
sbb
pushf
xor
outsb
fldenv
jb
aas
addr16
cld
mov
adc
mov
dec
jne
adc
mov
sbb
out
mov
mulb
insl
out
mov
cli
cs
sbb
lods
incl
popf
pop
sti
fwait
inc
and
jl
mov
frstor
jle
loope
popa
xchg
into
test
cs
ret
fcmovbe
mov
mov
inc
mov
leave
sub
mov
cmp
and
in
loop
mov
or
push
cltd
cmpsb
inc
lock
inc
mov
sbb
fcomps
ficompl
ja
xchg
mov
sub
pop
jno
call
jo
pop
cmc
mov
mov
add
iret
push
dec
mov
xchg
ja
or
pusha
add
pop
in
xchg
inc
mov
mov
push
cmp
dec
push
out
mov
pop
scas
mov
popa
pop
rcrw
mov
cmp
sub
rcll
fmulp
out
mov
mov
in
push
dec
sub
xchg
mov
stos
mov
movsb
clc
fisubl
aas
inc
hlt
and
mov
mov
cmp
cmc
jae
sbb
adc
outsb
pop
rcrl
test
out
mov
inc
lret
mov
fiaddl
cld
jae
in
sahf
cmp
shlb
mov
ficompl
mov
push
gs
pop
cmp
movsb
and
lahf
jg
xchg
bound
popa
cmp
negl
fst
loop
mov
and
into
inc
mov
mov
mov
js
mov
test
shlb
stos
fnstcw
or
aam
lret
cmc
imul
xor
jns
mov
mov
shll
lods
cmpb
lock
xchg
mov
and
repz
ja
push
movsb
pop
cs
in
sahf
push
inc
and
xchg
mov
fnsave
mov
call
jbe
repnz
push
or
in
rcl
scas
adc
xchg
out
inc
mov
adc
insb
sbb
shll
fcoml
mov
mov
movsl
jo
scas
lods
adc
cmp
mov
loop
out
mov
testb
lret
cmpb
sub
mov
mov
jae
test
push
ljmp
imul
jns
out
cmp
cmc
xchg
xchg
mov
push
in
lods
inc
stc
lret
pop
jno
iret
aaa
jbe
into
scas
sar
xchg
jmp
in
and
and
mov
pop
mov
sti
push
jl
cmpb
add
xor
xchg
in
pop
in
in
ljmp
mov
jmp
in
vmovdqa
ror
in
rcl
fidivrl
mov
arpl
dec
inc
std
ja
pop
mov
scas
testb
push
stos
jae
jns
lahf
xor
adc
jns
or
jae
add
xchg
jo
jno
cwtl
dec
scas
js
js
sahf
push
ret
and
xchg
aad
dec
insl
fisubl
leave
les
and
inc
xor
xchg
dec
inc
inc
sub
bound
xchg
or
clc
and
adc
ja
mov
es
push
dec
or
mov
adc
lret
ljmp
or
into
fprem1
mov
and
repz
sub
testb
adc
or
xor
daa
leave
ds
mov
ljmp
jg
mov
mov
lds
push
mov
lahf
lods
cld
xchg
dec
popf
dec
jecxz
or
int
mov
fsubl
aad
in
insb
fs
jle
pusha
mov
pop
popf
mov
ja
pop
pop
daa
lock
mov
icebp
cs
sub
mov
hlt
cmp
xchg
sarl
xor
test
fnstcw
mov
ds
aad
xchg
jbe
or
mov
ret
jbe
sbb
adc
xchg
fst
shrb
mov
mov
in
jmp
outsb
push
arpl
insl
sbb
mov
mov
icebp
ljmp
dec
inc
pop
dec
jnp
push
fnstcw
cltd
dec
mov
stc
mov
sub
xlat
push
xchg
pop
mov
out
sbb
sub
pop
and
xchg
jb
xor
mov
cmpsl
movsl
push
shlb
outsl
aad
sub
addb
fidivl
sti
dec
sub
out
aaa
test
push
in
push
fwait
into
mov
sti
sub
lahf
fidivrl
pop
or
shlb
cwtl
add
and
pop
fwait
xchg
roll
sbb
push
shrb
mov
aam
and
sub
jbe
pop
push
xlat
jnp
fs
fisubrl
cltd
jecxz
fstl
fsubrs
icebp
ret
ficoml
mov
and
xchg
into
mov
pop
aas
xorl
lods
scas
hlt
push
dec
pop
scas
hlt
in
add
dec
out
int
repz
cmc
jle
xchg
xchg
jmp
imul
jge
popf
cmp
xor
mov
pop
adc
movsl
inc
cld
pop
int3
in
dec
ds
push
rcrl
outsl
repz
data16
rcl
mov
movsb
lahf
fidivl
addr16
xchg
loopne
sbbl
jmp
sbb
idivl
mov
cmp
les
mov
testb
and
mov
cmp
push
mov
jp
daa
mov
sbb
mov
mov
rcl
rol
jp
mov
pop
addr16
push
mov
xchg
imul
in
movsl
sub
or
testl
xor
adc
loopne
in
inc
notl
adc
scas
pop
sbb
subb
pop
xor
cld
lods
jo
mov
push
ds
xchg
hlt
push
insw
push
sbb
gs
push
inc
inc
sbb
xchg
int3
fisubrs
jg
jno
cmp
lods
push
cmp
int3
xlat
mov
pop
mull
mov
push
mov
cld
add
loopne
divl
or
pop
pop
dec
jae
mov
fdiv
mov
test
cmpsl
std
out
cmc
negl
dec
dec
mov
aas
push
mov
scas
iret
loop
add
xchg
negl
mov
les
test
test
jle
adc
fbld
lsl
sub
insl
adc
add
mov
cmp
and
stos
hlt
arpl
mov
push
jge
lret
push
add
xor
int3
mov
mov
jge
aam
or
push
jnp
or
cmp
and
dec
jmp
insl
or
ss
lock
xchg
or
inc
popf
in
fdivrl
push
mov
push
cmc
out
dec
nop
out
aas
ds
inc
inc
aad
xchg
pushf
insl
mov
out
pop
jae
insl
sar
testl
inc
nop
or
movsl
mov
push
pusha
or
adc
imul
negb
addr16
divl
sbb
sub
jmp
loop
adcb
adc
dec
out
sahf
pop
adc
divl
cmp
testl
mov
push
sbb
or
push
int
sbb
pop
stc
pop
jbe
jecxz
imul
sahf
sbb
lcall
js
or
dec
cmc
jmp
mov
xlat
imul
mov
pop
push
dec
jo
and
andl
sbb
jle
aaa
negb
lret
mov
aam
out
or
aas
fsubs
in
imull
cmp
pop
ss
jns
jecxz
aas
xlat
popa
cmp
pop
mov
fstps
out
mov
sahf
daa
push
add
cmc
xchg
dec
cmp
mov
sti
pop
xchg
pop
out
dec
repz
mov
idivl
aad
lods
fwait
sti
out
mov
gs
dec
popa
or
dec
movsb
enter
xlat
jle
xor
shr
pop
nop
xor
inc
lcall
pop
notl
mov
ret
testl
xchg
and
stc
out
add
sub
mov
ds
or
lahf
sub
mov
push
movsb
dec
push
rcr
mov
dec
movsl
mov
subb
jmp
xchg
and
sub
stc
scas
mov
lret
jb
dec
sahf
sub
test
jbe
negl
in
xchg
sbb
js
mov
mov
aam
pop
je
mull
mov
xorb
push
sub
mov
mov
mull
sbb
jge
xor
mov
ja
iret
sub
lea
pushf
jmp
divl
loop
divb
pop
push
leave
fdiv
iret
pop
fnstcw
into
jae
shl
and
mov
sahf
notl
pushl
mov
mov
mov
cs
rep
cli
mov
sub
fdivp
testl
arpl
into
pop
pop
sbb
or
ss
arpl
or
push
sub
xchg
pinsrw
or
leave
test
cltd
mov
xor
stos
mov
push
mov
aas
gs
jmp
ret
mov
stos
aaa
mull
into
and
xchg
sbb
movsb
mov
or
xor
push
mov
loope
clc
fildl
xchg
out
fdivl
mov
testl
mov
imul
jne
mov
sbb
testl
push
fnstenv
adc
xchg
jb
cmc
jg
cmp
mov
roll
divl
lea
xor
ss
inc
dec
push
mov
sub
fcmovnu
jae
push
xor
xchg
mov
nop
jecxz
outsb
jl
sbb
mov
aaa
pushf
imull
jmp
divl
pop
push
dec
mov
aas
and
repz
cmp
cwtl
mov
andb
or
xchg
jmp
mov
testl
lea
adc
test
idivl
push
and
dec
out
push
arpl
jno
fdivs
add
test
clc
negl
mov
icebp
insb
inc
push
push
pusha
nop
push
gs
xor
xor
mov
sub
mov
sbb
inc
fnstcw
cmp
outsl
and
push
inc
loope
jb
push
loope
stos
imull
movsb
addr16
cmp
add
add
xor
inc
xchg
cmp
js
pusha
sbb
jo
lods
loope
popa
mov
idivl
std
adc
imull
xor
int3
cmpsb
addr16
ljmp
pop
pop
mov
clc
ret
dec
inc
ja
xlat
sbb
in
push
testl
icebp
int3
xchg
xlat
int3
pop
adc
stos
fisubl
mov
xchg
ds
movsl
imull
daa
xor
mov
or
mov
sar
push
add
outsl
into
dec
in
push
testl
lret
xlat
negl
cmp
das
imull
popl
sub
fnop
xor
jb
jbe
stos
icebp
lock
scas
outsb
mull
imulb
sub
movsb
divl
stos
enter
leave
imul
mov
xchg
mov
cmp
std
sahf
lret
xchg
negl
lds
push
jle
fcmovbe
xchg
adc
int3
mov
xor
ss
notl
mov
dec
mov
imul
movups
pushf
xlat
lds
jnp
xor
fisubs
sarb
call
mov
in
gs
inc
ljmp
idivl
in
dec
cld
testl
int
mov
lea
ret
testl
xchg
rolb
and
push
out
mov
sbb
repnz
outsl
ror
enter
xchg
fildl
fidivl
mov
mov
mov
mov
dec
testl
mov
in
push
push
mov
out
or
ds
mov
cmp
emms
icebp
fcmove
sub
jg
pop
in
std
xor
out
insb
popa
call
xor
out
jo
mov
xchg
insl
mov
fmull
adc
data16
add
fwait
imul
jb
jne
mov
pushf
ret
out
xchg
adc
mov
xor
negl
sbb
popa
ss
mov
mov
xchg
insl
xchg
sub
es
inc
adc
lret
jmp
mov
clc
or
sahf
pop
cs
std
cmp
cmp
push
repnz
popa
ficoms
fs
in
sub
inc
xlat
lods
jle
inc
push
out
or
fsubr
idivl
push
sub
mov
inc
inc
lcall
mull
clc
mov
adc
div
ja
mov
xor
xor
inc
shll
cmpl
scas
and
xchg
filds
rcl
adc
inc
dec
mov
scas
xor
popf
or
cltd
fisttps
aad
pop
repz
daa
dec
ds
out
fiaddl
test
insb
pushf
test
mov
and
ret
imull
sbb
add
jge
mov
icebp
mov
std
movsb
dec
push
push
and
mov
sti
mov
mov
daa
xchg
lea
fnsave
mov
cs
mov
sub
imul
push
test
push
and
leave
sub
mov
xor
bound
divl
loopne
xor
shl
decb
jbe
int
jecxz
xchg
js
lcall
repnz
insb
mov
or
imull
out
lcall
int3
rsqrtps
pusha
pop
add
insb
mov
test
push
dec
lea
adc
sub
scas
inc
out
mov
mull
add
mov
push
out
int
lcall
dec
rcll
lea
mov
xor
enter
pop
or
dec
push
mov
popf
jbe
and
cld
sbb
rolb
mov
aas
notl
pop
adc
hlt
xchg
out
mull
sbb
adc
call
ljmp
and
lock
pop
pop
sbb
cmc
or
lea
mov
cwtl
pusha
scas
pop
push
rolb
test
pushf
aaa
test
xchg
and
paddusb
adc
aas
inc
sti
fsubs
xchg
mov
mov
xor
add
xchg
cwtl
mov
lods
xchg
int3
sub
push
xchg
testl
mov
cmp
inc
pop
out
test
mull
jae
inc
adc
test
pop
dec
mov
insb
cmc
imul
pop
push
fisttpl
lcall
notl
xor
int
mov
cmc
lret
lahf
mul
mov
insl
out
not
test
jbe
xlat
push
es
int3
stos
leave
pop
jmp
inc
testl
lret
scas
pop
sbbl
jl
push
aad
cli
sti
or
xlat
in
testb
rcrl
mov
mov
pushf
xchg
call
ja
sarb
cmc
pop
fidivs
cwtl
mull
and
pop
sub
and
add
cs
mov
adc
jmp
stos
movsb
outsb
dec
xor
testl
adc
jnp
int3
sbb
negl
push
popa
out
dec
push
xlat
sti
pop
jae
pop
and
mov
idivl
ds
ljmp
add
mov
add
dec
notl
sahf
fimuls
inc
push
lret
not
and
test
inc
or
inc
in
mov
stc
mov
testl
mov
testl
adc
idivl
xchg
repz
jnp
add
idivl
push
out
adcl
inc
fstp
icebp
jg
xchg
fsts
and
inc
negl
scas
push
stos
and
xchg
pop
pop
lahf
cmp
insb
idiv
ret
jecxz
cs
mov
mov
stc
pop
cmp
cmp
xchg
lock
cld
rol
mov
lcall
mov
pop
das
sub
iret
aas
add
aam
jbe
fucom
pop
repnz
sbb
mov
movl
cmp
add
xor
xchg
imull
inc
mov
sarb
push
jl
sbb
cmpsb
pop
loop
repz
or
imul
inc
mov
pop
addr16
pop
push
xor
in
add
adc
xor
andb
push
inc
inc
sub
pop
scas
rcrb
adc
xchg
ds
outsl
out
adc
int
sub
shl
adc
dec
cmpsb
mov
stc
call
dec
loopne
inc
aam
push
add
shll
dec
sub
fldenv
push
negl
cmp
stos
ret
add
push
xlat
sub
push
pop
add
pop
gs
divl
popf
loopne
adc
mov
shrl
xchg
negl
std
fwait
jge
stos
add
test
das
xor
xlat
sbb
fiaddl
movsl
sbb
sub
in
sub
negl
fldenv
xor
add
jp
cltd
xchg
ret
push
fsubrl
mov
rolb
cmp
cwtl
testl
cltd
jb
cmp
testl
mov
sbb
neg
add
fldcw
fcomps
sub
add
pop
push
hlt
push
mov
negl
lock
sub
js
fistps
divl
stos
cld
scas
and
out
jno
dec
shl
xchg
lea
mov
stos
movsl
and
inc
jns
leave
cld
testl
imul
inc
pop
jns
in
xor
jae
mov
popf
outsl
xchg
negl
pop
sbb
in
push
mov
aas
fucomip
jecxz
pop
ljmp
fldcw
jno
bound
orl
mov
sbb
and
scas
aas
icebp
aam
leave
jae
divl
mov
mov
test
aaa
aam
not
push
je
add
leave
sbb
push
repz
push
cwtl
imull
out
cmp
testl
push
or
inc
mov
test
push
jge
shlb
sahf
jmp
sub
push
xchg
jns
loop
xchg
pop
push
add
notl
dec
aaa
div
outsb
ficomps
mov
mov
jl
mov
jbe
cmpsl
adc
mov
jmp
mov
ret
sub
testl
xchg
adc
out
insb
xor
push
mov
mov
add
js
insb
shlb
mov
mov
mov
aas
mov
mov
inc
fcomps
nop
push
cltd
negl
sbb
mov
enter
cmc
adc
imul
lds
adcb
test
pop
enter
jmp
fwait
inc
test
push
sub
mov
shlb
sbb
je
pushl
bswap
rcrb
push
mov
mov
movsb
push
push
pushf
ljmp
cld
xor
fstps
xchg
test
pop
fildll
stos
adc
push
or
loopne
xlat
loop
imul
hlt
lret
xor
push
leave
jae
sbb
cmp
das
imull
test
mov
xchg
imull
into
pop
testl
cmp
cltd
pop
cwtl
pushf
dec
pop
cmp
ljmp
popa
sbbb
xchg
mov
sub
mov
ds
in
push
ja
neg
pop
sbb
xlat
jmp
pop
jmp
jno
out
loopne
into
sbb
ss
imull
mov
js
xchg
fstl
dec
mov
sbb
mov
lahf
or
adc
push
cmpsl
mov
pushf
out
push
jl
imul
icebp
and
sub
push
pop
ss
repz
test
cmc
xlat
bswap
mov
sbb
jle
bound
cmp
mov
mull
fdivs
sub
adc
cmc
out
sbb
mull
arpl
ss
js
rorl
pushf
add
or
xchg
testl
or
pop
sub
xchg
mov
leave
scas
jo
out
ret
xor
jbe
cwtl
push
imul
jns
imul
vmptrst
xlat
and
sbbb
sub
lret
cltd
testl
jmp
cmpsb
out
xlat
fildll
inc
rcrb
sarl
pop
cld
ss
inc
pop
mull
les
imul
test
arpl
loop
das
out
negl
pop
cmc
int
mov
cli
lahf
dec
insl
push
test
sbb
notb
mov
inc
mov
or
mov
inc
push
cs
mov
pop
inc
adc
testl
fidivl
mov
dec
mov
loope
push
jle
popa
or
shll
jecxz
lret
mov
ret
mov
out
arpl
je
mov
push
insl
push
pushf
movq
pusha
data16
mov
or
pop
popa
lock
divl
je
gs
cwtl
and
sbb
nop
je
jo
notl
xchg
pop
push
pop
cmp
fcmovne
adc
add
ljmp
icebp
or
mov
push
fistpl
push
sbb
fcmovnu
xchg
sub
sbb
faddl
xchg
mov
addr16
cs
loop
or
mov
lock
out
mov
daa
out
ljmp
std
bound
popa
jae
adc
mov
sub
cld
js
iret
mov
fiaddl
adc
inc
cmpsb
in
sub
cmp
cmp
xchg
outsb
aam
in
insb
mov
inc
out
loope
fidivs
arpl
inc
add
jo
clc
mov
cmp
add
jmp
insl
js
push
popa
jne
and
outsl
je
jbe
sahf
push
outsb
aad
adc
in
dec
sahf
mov
inc
scas
jp
mov
mov
jmp
add
or
fs
ret
cmpsb
lcall
es
leave
stos
ljmp
imul
jne
call
inc
dec
lret
fidivrl
inc
in
ds
push
scas
loope
push
lds
ljmp
or
pop
adc
mov
in
dec
cld
dec
popa
scas
ja
jae
push
cmp
jnp
mov
jne
rolb
push
pop
cmp
cwtl
sbb
xchg
fdivl
mov
push
lods
addr16
cmc
in
pop
add
inc
sbb
lret
jbe
int
or
loop
ret
clc
push
adc
in
fstpl
out
xor
jp
sbb
dec
ret
pop
mov
testl
sub
sbb
div
xor
int
push
adc
sarb
and
jle
add
aad
mov
divl
xlat
xor
adc
into
mov
sbb
mulb
shl
test
dec
push
movsl
fildl
outsb
test
xorb
lods
fadds
inc
xchg
sub
cmp
pop
sahf
push
lods
popa
ffreep
clc
lock
stc
jb
cs
imul
movsl
sub
imull
cmp
push
sahf
or
mov
or
jmp
and
mov
idivl
jmp
lret
pop
dec
add
pop
sbb
push
testl
xor
testl
or
mov
rcrl
inc
outsb
in
divl
insl
dec
loop
movsl
and
sti
mov
xlat
ds
jmp
out
pop
jmp
notl
lods
inc
out
sbb
test
xchg
sarb
mov
and
test
jbe
add
sub
cltd
and
or
pushf
cmc
imull
lret
es
cmp
daa
jge
test
mull
xchg
cmp
add
out
xchg
push
push
xor
dec
xor
sub
clc
orl
imull
scas
enter
stos
fucomip
jns
sti
outsl
mov
pop
jae
mov
cmp
testl
pop
mov
idivl
jmp
or
shrl
sbb
xlat
scas
xlat
movsb
jo
xor
cli
aad
fcmovne
xorb
les
cmp
sub
jle
in
xchg
or
xchg
rcrb
cmc
out
push
jecxz
jae
xchg
adc
xor
push
out
stos
scas
imul
idivl
jo
jae
addl
scas
cmpsl
jnp
jmp
negl
and
idivl
add
and
or
inc
movsb
add
idivl
sbb
scas
mov
mul
mov
pop
inc
ret
ljmp
xor
jl
xor
out
mov
mov
add
cmp
and
sub
idiv
dec
pop
out
or
mov
pop
data16
push
push
xchg
out
jno
jo
mov
gs
dec
push
push
fbld
xchg
push
ss
testl
sbb
lods
or
mov
idivl
sahf
int
inc
push
test
in
fs
loopne
pop
xorl
jae
jbe
testl
jno
setbe
loopne
jnp
cltd
idivl
cmp
xchg
jae,pn
lock
scas
sbb
and
out
cmc
repnz
int
xchg
xlat
or
pusha
or
ljmp
cmp
pop
js
jecxz
out
jle
ss
cs
xlat
inc
jmp
pushf
lods
fisubs
out
imul
clc
cld
add
add
out
outsl
mov
sti
mov
push
idiv
ret
cmc
icebp
mov
cwtl
ret
nop
out
rolb
testl
negl
inc
cld
mov
jo
fdivs
push
xor
cmp
idiv
filds
leave
sbb
out
push
add
in
notl
mov
push
pop
out
aaa
rorl
rcrl
in
lret
pop
stc
test
hlt
pop
xor
or
jbe
adc
addr16
out
fiaddl
mov
leave
cltd
pop
sub
push
aas
push
mov
ljmp
push
sbb
pop
jmp
jp
xor
insl
out
sub
cltd
adc
fimull
test
xchg
fwait
out
repnz
rolb
sbb
ss
sbb
divl
or
aas
pop
rcrb
arpl
fisttpll
and
adc
mov
pop
outsb
pop
testl
push
int
add
jno
dec
sub
jp
add
addr16
out
jae
jecxz
pop
push
xor
in
push
mov
lods
mov
int
scas
scas
pushf
in
imull
add
mov
idivl
out
xchg
cld
divl
jnp
dec
pop
cmp
shl
jae
lods
mov
inc
in
mov
and
js
testl
adc
pop
adcl
mov
icebp
xchg
cmpsb
push
mov
xchg
int
push
lret
jmp
sarb
adc
xor
out
test
stos
and
div
xor
cmpsl
not
xchg
jl
sbb
pusha
push
jne
push
cmpsb
xchg
xlat
sub
push
nop
fpatan
mov
ja
fsub
rcl
mull
stc
test
sub
test
loopne
xor
popa
inc
out
int3
xchg
pop
push
lea
loop
inc
divl
xor
div
jns
add
ds
testl
inc
lret
xchg
push
ret
lahf
test
loope
mov
inc
push
push
aam
or
mov
hlt
add
and
sub
jo
ror
pop
testl
add
pop
mov
mov
fidivs
rcl
out
adc
fmull
pop
ss
sahf
xor
mov
mull
das
mov
loope
push
cmp
inc
bound
movsl
negl
lds
jns
xor
testl
xchg
dec
dec
jnp
dec
leave
sahf
hlt
lds
in
pushf
push
neg
lret
jecxz
dec
and
idivl
ljmp
ljmp
pop
mov
ret
test
inc
call
xor
out
ret
je
dec
nop
out
cmc
shl
in
cmpsl
arpl
and
cmpsb
dec
notl
mov
aad
icebp
in
imul
orl
stos
jo
push
jecxz
or
mov
cltd
cwtl
dec
call
or
ret
push
jmp
push
mov
sti
mov
push
mov
jnp
pop
mov
je
push
into
out
mov
idivl
icebp
xchg
inc
push
push
pop
in
cwtl
shlb
dec
and
inc
pusha
fildl
adc
xchg
cmp
jnp
adc
mov
shll
dec
push
xor
mov
mov
xchg
sub
stc
jge
popf
out
add
shlb
jb
xlat
das
movsl
mov
sbb
rol
add
neg
pop
fwait
or
mov
in
testl
jmp
bound
aam
adc
cs
and
mov
repnz
adc
pop
imull
xlat
es
enter
scas
push
xchg
pusha
jnp
mov
divl
ret
xchg
sub
mov
inc
cwtl
jle
loopne
dec
imul
jge
fwait
daa
jae
mov
cli
pop
das
or
add
jmp
out
aaa
adc
xchg
pusha
aaa
testl
or
imul
xor
pop
divl
xor
hlt
inc
jmp
inc
jno
jg
sbb
mov
ljmp
stc
sbb
test
repz
int
sbb
mov
xlat
xor
fwait
dec
out
push
push
mov
idivl
in
cwtl
sahf
sbb
imull
inc
dec
adc
pushf
les
adc
sbb
xchg
int3
das
daa
pop
filds
adc
add
imul
mov
neg
push
push
in
int
jmp
adc
bound
pop
dec
fcoms
testl
cmc
test
stc
sbb
rcl
jae
sub
mull
arpl
sbb
loopne
or
testl
ja
idiv
mov
jg
divl
arpl
inc
imul
xchg
jmp
adc
sub
xchg
sbb
xchg
cli
sbbb
mov
int
mull
sub
pop
test
sti
xlat
into
xlat
sub
movsb
pop
data16
rorb
jmp
pop
neg
mov
xchg
lahf
inc
jo
les
xchg
jne
xor
sbb
jmp
xlat
fidivs
push
sub
inc
mov
testl
movsl
jp
fcomp
pop
ret
cmp
in
in
and
jbe
popf
icebp
negl
dec
call
pop
lret
loope
sbb
mov
xchg
jecxz
cmpsl
jle
and
fdivr
cs
ret
sub
cmp
pop
rcll
or
lcall
xlat
call
add
dec
daa
pop
clc
pop
xchg
jl
cmp
adc
scas
in
jecxz
mov
xor
inc
hlt
cmp
sbb
mov
inc
jp
divl
ja
in
insl
fs
cltd
push
fcmovnb
mov
test
xor
pop
in
xor
or
std
arpl
dec
mov
mov
shll
mov
out
pop
out
dec
lock
xor
pop
testl
test
aas
outsl
inc
or
notl
xor
add
mov
xchg
and
repz
in
pushf
push
ret
sahf
or
leave
nop
scas
mov
and
call
shlb
hlt
cmp
inc
popa
imul
aaa
mov
lahf
jmp
scas
call
sub
imull
and
pop
addb
and
mov
int3
pop
jle
cli
cmp
lret
fstps
mov
adc
nop
cltd
rcrb
in
xor
test
lods
test
roll
imulb
pop
jl
leave
xchg
sbb
fidivrs
negl
lock
divl
adc
es
sub
pop
jne
and
pop
icebp
mov
cmp
mov
or
and
imull
subb
jmp
cmp
xlat
daa
sbb
outsl
pop
shll
movsl
push
shlb
dec
dec
sbbl
and
stc
fcmovu
pop
mov
call
testb
push
clc
lock
rcrb
out
ja
div
mov
jo
cmp
xchg
add
shl
xlat
loopne
xchg
test
jge
pop
sbb
mov
cwtl
dec
ss
sbb
shrb
outsl
pop
jge
divl
sbb
xlat
arpl
jne
jmp
xor
test
popa
mov
jmp
loopne
leave
push
not
xor
shrb
bound
and
int3
adcb
pop
imul
add
repz
jg
cmp
mov
and
pandn
jmp
jp
xor
popa
repnz
pushf
pop
mov
divl
mov
mul
imul
rclb
jecxz
repnz
cmp
fldlg2
test
mov
sti
imull
cmp
mov
test
push
xor
or
cmpsb
jge
jp
jns
addr16
mov
fildl
cltd
ss
scas
jmp
repnz
jg
testl
shll
out
mov
imulb
xchg
pop
xchg
cmp
dec
dec
testl
sbbl
and
bound
inc
cmp
add
daa
mov
dec
jge
mov
idivl
rcrb
mov
mov
mov
add
cmp
xchg
pop
cwtl
imull
lock
mov
mov
fisttps
pop
std
pop
fsubl
xchg
push
xor
xor
clc
xchg
push
mov
pop
stos
adc
idiv
xchg
out
imul
add
pusha
testw
in
mov
mov
sub
testl
push
scas
cmp
adc
js
leave
jo
cmp
push
mov
test
notl
and
fisttps
add
pop
sbb
andl
sti
xchg
xchg
imul
shr
sub
dec
sub
push
lcall
push
pop
icebp
out
push
or
fidivl
xchg
movsl
or
or
adc
mov
lahf
mov
jb
cmp
mov
mov
ja
fidivl
xlat
jae
jnp
adc
mull
ret
imul
imul
je
sub
pop
rorl
imul
xchg
xlat
mov
repnz
mov
test
aam
cmp
or
negl
pop
push
pop
mov
imul
ret
sub
pusha
or
xchg
mov
out
lea
je
sub
loopne
ficompl
push
rcrl
cwtl
xlat
adc
mov
ds
fsubs
adc
mov
fwait
notl
fbld
ret
les
jecxz
movsl
pusha
lea
mov
iret
xchg
adc
in
popa
dec
not
rolb
push
testl
cmpsb
stos
adc
in
or
cli
cmp
sbb
add
or
push
cs
int
ret
lcall
pop
add
mov
testl
aas
xchg
cmc
insb
stos
push
testl
cltd
dec
lods
sbb
dec
inc
mov
negl
repnz
adcl
icebp
out
xor
imul
dec
jmp
xchg
outsl
sub
mov
ss
negl
xchg
iret
push
or
and
and
add
leave
xor
push
jge
adc
jmp
lret
push
aam
and
xchg
ficompl
fistl
and
mov
jb
outsl
mull
push
xchg
bound
cs
leave
out
lret
daa
lea
jmp
or
in
xlat
outsb
push
out
in
out
scas
lret
cmp
xor
movsb
fsubrl
mov
testl
mov
ljmp
pop
pop
cmp
dec
sub
mov
adc
sub
pop
testb
dec
push
inc
dec
xchg
aam
in
add
dec
stc
insb
xchg
ret
pusha
roll
lods
adcb
gs
iret
mov
pop
xchg
xchg
mov
scas
out
je
pushf
fs
test
or
and
repz
mov
pop
fistps
mov
inc
out
out
stos
mov
fisubrl
xchg
mov
dec
cmc
cmp
xlat
push
inc
cmpsb
ds
mov
leave
gs
sub
cmp
fwait
xchg
push
pop
jno
out
xor
jg
mov
dec
enter
jnp
adc
mov
aad
insl
out
cwtl
fs
add
mov
push
pop
popl
stos
or
xor
push
sbb
push
lcall
cmc
or
in
fisubrl
mov
jge
inc
jmp
insl
add
jno
cmp
mov
jle
jmp
inc
cmp
idiv
arpl
shl
xchg
inc
lds
add
movsl
fimull
mov
mov
mov
mov
mov
dec
mov
fidivl
push
sti
repnz
inc
ja
out
repz
in
push
pop
cmp
fsubrp
cli
int
shll
movsl
jbe
loope
cmp
inc
cmp
sub
repz
pop
cmp
mov
outsb
or
loopne
jbe
fmul
movsl
scas
out
in
mov
lcall
and
dec
sub
add
mov
insb
imul
or
and
aaa
sbb
hlt
lock
addr16
xchg
and
mov
out
and
loop
call
cmp
sbb
sahf
and
push
aaa
stos
sub
cmc
jne
push
daa
jge
and
sub
pop
pop
stos
inc
insb
cmp
mov
test
add
cs
lcall
clc
adc
lea
xchg
mov
mov
std
addr16
dec
int
and
ret
mov
pop
and
pop
popf
cmpsl
rolb
xchg
and
mov
outsb
cmp
or
addr16
loop
mov
jl
ljmp
notb
mov
push
or
shl
aad
ljmp
jp
mov
arpl
xor
pusha
cmpsl
movsl
aas
lahf
je
movl
mov
in
mov
cmp
or
mov
out
and
and
inc
push
out
call
mov
dec
popf
pcmpeqw
lcall
adc
out
in
and
dec
out
repnz
loopne
push
pop
pop
lahf
jecxz
cwtl
and
popa
clc
add
cmp
or
push
idiv
pushf
cmpsl
add
jo
das
and
nop
fcmovu
dec
fisubl
test
sbb
imul
movsb
or
jbe
jo
push
mov
add
and
pop
lea
icebp
and
sbb
pop
push
and
lahf
insb
pop
rolb
sti
xchg
or
inc
push
out
jmp
xor
insl
inc
jnp
into
cmp
adc
xor
fidivl
addl
or
xlat
dec
in
mov
cmpsl
xor
ficoml
fidivrs
in
jmp
out
ljmp
add
scas
cmp
pop
outsb
sbb
jle
sahf
cmp
out
cmp
cmp
in
mov
out
in
es
mov
movsl
xor
rol
imul
xchg
lea
pop
mov
inc
jb
sub
fcmove
ret
add
clc
mov
lcall
cmp
sub
scas
negb
push
into
push
dec
xlat
jecxz
xor
fs
sub
gs
mov
testl
ss
in
mov
fildl
test
out
idivl
xchg
sti
int
divl
and
std
fxch
lods
jecxz
push
or
testl
loop
pop
out
mov
push
push
jmp
or
fcom
pop
aam
lahf
ja
mov
test
stos
push
mov
and
push
in
pop
movsl
jg
mov
lret
sub
negl
adcb
fs
adc
jo
out
mov
add
sbb
gs
mov
loopne
adc
idiv
fcomi
mov
fcomp
pop
mov
pop
lret
test
xchg
je
mull
pusha
pushf
cmpsl
mul
addb
mov
rclb
inc
out
fwait
nop
fnstcw
gs
mov
and
testl
lea
iret
negl
shll
clc
jbe
lods
push
lahf
pop
popf
xor
fwait
cmpsb
addr16
inc
xor
mov
ror
pop
ds
in
testl
mov
add
imul
das
mov
loop
out
cmp
or
testl
inc
daa
dec
cmp
push
pop
sub
jbe
in
notl
hlt
clc
mov
aad
sbb
lret
sub
fs
adc
and
hlt
rcll
int
ffree
cltd
inc
testl
out
testl
fwait
sti
dec
mov
xor
cli
fidivrl
mov
xchg
ljmp
add
out
push
mov
cmpsl
lahf
shl
notl
out
xor
cmpsb
stc
mov
fldl
dec
push
push
lods
iret
jle
xlat
js
notl
daa
mov
call
pop
sbb
xor
mov
jge
pop
sbbb
call
xor
cmp
ja
js
inc
or
add
mov
sub
mov
loopne
xor
pop
in
push
xorl
das
mov
mov
xchg
sub
or
inc
sti
sbb
jae
cwtl
bound
push
or
ficoml
push
adc
in
in
or
sub
lods
inc
jne
cmpsb
mov
nop
mov
dec
sarl
xor
and
xor
inc
roll
in
lea
mov
dec
popf
cld
loope
adc
xlat
xchg
add
stos
popa
lods
push
inc
insl
xchg
xlat
and
stos
loope
cmp
ljmp
jecxz
shr
cwtl
scas
push
and
in
jge
call
mov
dec
fstpt
jnp
and
movsb
xchg
xchg
adc
push
or
jnp
jl
jecxz
fisubs
mov
jmp
cmpsl
in
xchg
mov
mov
sub
jecxz
ficoml
inc
bound
sub
int
and
jo
mov
movsl
cmpsl
cltd
jbe
stos
dec
mov
xchg
push
mov
pop
xlat
mov
lock
cmp
xor
sbb
mov
ret
mov
loopne
fists
imul
push
mov
cmpsl
add
mov
das
cmp
or
fcoml
pop
fists
movsl
inc
xor
inc
aad
cmc
fs
mov
test
adc
inc
insb
cmp
in
jns
jae
in
cwtl
test
lret
mov
pop
sbb
mov
and
movsl
push
pushf
stos
pop
cmp
in
leave
mov
in
pop
mov
jno
in
lock
movsb
or
repnz
push
sbb
bound
outsl
icebp
fld
inc
aaa
loope
sbb
push
and
cmpsl
fs
dec
test
sbb
ja
rcr
cmpb
mov
and
jne
mov
xor
out
ljmp
pop
pop
notb
lahf
fxtract
or
filds
jecxz
je
ret
popf
in
outsb
popf
jecxz
outsl
and
es
push
push
dec
push
ja
inc
in
and
push
xor
ja
mov
popf
mov
js
stc
or
pop
adc
in
mov
jb
leave
push
mov
push
mov
xchg
push
lcall
push
xchg
adc
cmp
mov
movsb
jbe
mov
outsb
mov
ss
lcall
dec
push
cmp
dec
mov
cmpsb
adc
loope
lods
push
dec
inc
xchg
aad
pop
xlat
mov
fisubs
out
xor
jmp
fwait
outsb
subl
stc
test
test
xlat
fcmovnb
subl
mov
add
mov
je
iret
dec
out
cmp
adc
xchg
jne
scas
vmaskmovdqu
shl
xor
and
xchg
test
movsb
xchg
insb
es
xlat
dec
xlat
inc
fldl
mov
push
negl
push
push
in
xchg
xor
adc
mov
test
push
notl
cmp
xchg
rol
add
push
into
daa
outsb
jge
ficompl
rdtsc
xchg
popa
testl
cld
xlat
stc
mov
setp
jg
adc
and
pop
imul
sbb
and
sbbl
ficompl
notl
cmp
negl
xchg
push
in
ss
sti
movsb
movups
jecxz
popa
repnz
pusha
xlat
adc
and
push
cmpsb
pop
jnp
xchg
jle
mov
aas
pop
je
aad
add
jb
jnp
and
cmp
or
out
imull
cmp
rcll
mov
stc
pusha
out
outsl
nop
push
xchg
popf
in
mov
fcmovu
push
cwtl
cmp
jl
jbe
mov
not
or
les
add
push
inc
ss
bound
xchg
divl
int3
add
push
divl
outsl
hlt
inc
inc
notl
lret
dec
sub
inc
imul
imul
mov
dec
stc
cmc
jp
neg
out
mov
testl
das
push
mull
loop
jae
int
testl
add
ret
mov
sbb
mov
push
enter
notl
sarb
xchg
repnz
lods
mov
cld
repz
in
lcall
jb
mov
in
loope
mov
jle
jg
rcr
sub
out
enter
pop
xchg
add
inc
xchg
fdivrs
lods
xlat
pusha
add
repz
mull
cmpsl
in
testl
and
and
xchg
lods
negl
inc
jno
imul
mov
icebp
scas
int
addb
imul
mov
sbb
sti
jmp
jg
in
mov
dec
cmp
push
and
lret
je
ja
idivl
xor
inc
es
pusha
enter
pop
arpl
int
iret
jbe
scas
sub
mov
jae
inc
sbb
not
cltd
jecxz
mov
cmp
imul
xor
inc
and
mov
idiv
pop
and
cltd
les
mov
mov
push
mov
sub
dec
mull
mov
sbb
pushf
pop
fistpll
out
hlt
jns
ffree
loop
sbb
lods
icebp
sub
orb
push
pop
inc
cmpb
loop
inc
xor
lret
fistl
je
push
xor
mov
inc
fyl2x
testl
pop
mov
in
sub
outsl
fcomi
push
call
cmc
xchg
ss
in
fistpl
push
arpl
mov
out
lcall
in
mov
jb
lods
mov
sbb
enter
clc
and
mov
fs
or
add
xchg
movsb
mov
xchg
push
fucomp
in
test
inc
fadds
adc
sub
notl
shlb
repz
push
pop
js
jmp
cmpsl
xchg
inc
cli
mov
int
sub
or
shl
loope
or
test
pushf
push
jne
das
cmpsl
sub
les
fistl
add
xchg
push
sbb
inc
sub
loopne
negl
or
jmp
imul
add
mov
cltd
mov
xchg
hlt
pop
cwtl
popa
negl
inc
shlb
testl
pop
pop
fs
mov
sub
outsl
shl
or
inc
icebp
cmp
xlat
sti
push
jp
mov
mov
iret
in
mov
fcomip
adc
arpl
mov
inc
mov
add
inc
adc
sbb
out
daa
add
xchg
sbb
dec
cwtl
lods
and
loope
mull
xor
sbb
pop
mov
adc
iret
mov
insl
test
orl
aaa
fsubs
cwtl
je
icebp
jbe
mov
inc
test
pop
fisttpl
mov
addl
sti
jecxz
mov
jge
jl
shll
leave
lds
aas
pop
xchg
divl
in
aaa
test
lcall
lcall
add
fistpl
testl
xchg
adc
sarb
jecxz
dec
test
ss
jns
in
xchg
push
mov
cmp
mov
pop
movsb
cli
es
insb
or
dec
push
in
push
out
mov
and
and
pop
testl
or
testl
mov
test
and
add
dec
scas
in
movsb
idivl
inc
jbe
pop
loope
xchg
pop
leave
fucomi
push
ret
xchg
bound
mov
push
add
outsb
add
mov
loope
jbe
lahf
mull
addr16
mov
icebp
idivl
lcall
testl
jb
xchg
js
nop
mull
xlat
negl
je
dec
cli
mov
xchg
mov
out
mov
out
xor
xchg
inc
inc
or
push
in
adc
push
cmp
xlat
lods
fcomps
xchg
add
test
sub
dec
xchg
lods
mov
xchg
lock
iret
inc
mov
loope
pop
ljmp
and
das
sub
ss
xchg
push
sub
lahf
rol
pop
mov
outsb
adc
mov
out
and
push
jge
mov
imul
push
add
xor
mov
pop
outsb
cwtl
fisttpll
add
xchg
sbb
dec
testl
divl
xchg
fs
imull
cmp
xchg
xor
out
cs
ja
fs
je
and
xlat
jns
inc
push
adc
mov
cmp
ljmp
enter
daa
push
xchg
push
scas
fisttps
out
mov
neg
mov
mov
test
push
cmp
push
lea
out
mov
popa
loop
ret
call
and
sub
xchg
ss
lcall
in
cmc
push
lds
dec
mull
or
mull
mov
mov
xor
outsb
push
xor
leave
jns
scas
cmc
insb
arpl
div
cmp
pop
cmp
mov
mov
mov
insl
and
sbb
pop
add
mov
addr16
dec
popf
imul
mov
in
arpl
mov
sbb
add
jbe
lahf
adc
mov
pop
stos
pop
testl
enter
divl
adc
sbb
rorb
scas
outsl
loope
je
out
sahf
imul
mov
push
out
mov
mov
or
jmp
jp
mov
aaa
daa
in
je
ja
cltd
bound
xlat
xchg
repnz
cmp
subb
iret
hlt
rclb
int3
cli
lret
shl
cld
mov
imul
inc
testl
ds
xor
mull
sbb
sub
push
sub
push
daa
je
xor
ja
push
clc
out
movsb
or
sub
push
mov
xchg
jecxz
cld
cwtl
idivl
fnstsw
fdivrl
emms
test
mov
xchg
mulb
or
cmp
imul
inc
push
adc
jo
jno
mov
fdivrl
repnz
xchg
das
pop
lds
into
dec
imul
cmp
fisubl
shrl
pop
fwait
mov
adc
loop
imul
hlt
insl
push
cmp
xchg
rorb
out
fldenv
and
in
iret
loopne
stc
insl
sub
testl
clc
stos
notl
mov
mov
fmul
mov
adc
mov
repnz
adc
inc
pop
sbb
xchg
mov
jg
add
cs
mov
aad
jg
ret
insb
mov
pop
into
xlat
out
ljmp
add
sahf
sub
roll
adc
mov
mov
lcall
adc
mov
push
cmp
dec
clc
negl
lcall
mov
push
xchg
fcomps
push
out
in
sub
push
push
and
icebp
inc
inc
testl
mov
lea
add
hlt
dec
xchg
nop
int
outsb
sbb
out
mov
popl
nop
xlat
scas
mov
sbb
popa
jecxz
sbb
dec
lret
sbb
xor
in
hlt
ficompl
adc
repz
dec
dec
push
push
mull
fsubs
lock
sbb
testl
mov
lret
div
dec
cmpb
in
sub
xchg
call
mulb
push
jb
clc
in
xor
rcl
cld
stos
out
xchg
mov
mov
push
js
or
fisttps
pop
imull
inc
mov
scas
test
aas
in
sbb
nop
fwait
pop
lods
push
or
in
cmpsb
inc
sub
mov
ret
sti
testl
push
fcomi
out
or
mov
test
jle
xorb
pop
xor
sub
aaa
idivl
ljmp
push
lahf
or
pop
roll
push
add
xchg
jecxz
outsl
cmc
inc
xor
nop
subb
ret
add
popa
negl
xor
or
mov
stos
xchg
pusha
imul
and
das
je
or
mul
pop
adc
test
fnsave
idivl
xchg
leave
rorl
neg
lret
pop
sbb
sbb
jne
inc
and
adc
pop
pop
sar
cmpsl
notl
in
dec
shl
inc
scas
bound
inc
or
mov
ror
inc
pop
cli
dec
testl
pop
scas
pop
ljmp
push
dec
xorl
cmp
pusha
lods
mov
add
cmc
mov
test
mov
mov
push
sti
mov
adc
xchg
les
outsl
push
popa
xor
aam
jns
ja
dec
ret
xchg
pop
mov
jae
addb
out
push
jle
cmpb
dec
pop
mov
popf
mov
ljmp
push
jbe
add
outsl
nopl
mov
push
jno
mov
jnp
ja
loopne
daa
and
mov
ljmp
mov
mov
dec
fistl
adc
or
das
lock
into
pop
cmp
jge
test
adc
pop
scas
ret
add
out
sbb
movsl
hlt
mov
aaa
pop
push
sub
dec
and
pop
pop
or
scas
data16
jbe
icebp
mov
ud0
sbb
movsb
popa
fs
jae
imul
cmp
loop
add
push
xchg
ja
in
xor
xchg
or
cmp
nop
fidivl
js
rcll
jno
xorb
cld
pusha
cwtl
ds
adc
pop
hlt
sbb
pusha
push
imul
push
lock
mov
lock
test
enter
fiaddl
js
mov
imul
idivb
adc
inc
push
les
int
cmp
or
mov
push
jne
xor
cld
inc
out
jmp
dec
add
mov
mov
int3
repz
xchg
push
jbe
push
sub
xchg
cld
sub
addb
or
data16
jmp
icebp
adc
gs
cmpsl
imulb
out
test
fimull
lods
mov
ljmp
ss
jle
xchg
mov
mov
or
lea
dec
in
jae
mov
cmpsl
ja
and
cmp
add
mov
idiv
aad
jmp
and
aaa
movsb
xchg
push
xchg
jl
xchg
xor
test
cmp
sub
mov
xlat
push
pop
aad
xor
outsl
push
inc
adc
add
fldz
out
test
inc
fidivl
loope
add
pop
mov
and
imul
dec
sub
aam
fists
inc
ja
mov
stc
jns
mov
jecxz
jg
loopne
jne
lods
mov
outsl
inc
and
imul
xchg
fnstcw
cltd
decl
loope
mov
lcall
cmc
out
mov
insl
mov
movsl
mov
test
lds
fidivrs
hlt
sbb
xor
xor
popa
adc
pop
sub
add
loope
mov
inc
dec
lock
lods
ja
das
mov
in
lcall
sbb
lods
cmpsl
into
mov
mov
push
adc
negl
jb
in
fwait
sbb
addr16
mov
sub
lods
lret
xchg
sub
or
cltd
ljmp
std
xchg
xor
mov
dec
out
push
adc
pop
pop
in
or
div
mov
outsl
xor
aad
fs
sub
lea
jecxz
in
xchg
leave
sbb
loopne
lcall
xorl
sbb
out
insl
mov
push
sbb
movsl
stos
mov
out
push
cmp
inc
jbe
or
push
mov
enter
lret
xchg
push
jecxz
fsubs
pop
mov
sbb
cmp
notl
imul
or
lahf
pop
out
mov
ljmp
and
or
in
jbe
or
pop
pop
cmc
cmp
cmc
outsb
roll
mov
lods
adc
mov
stos
cmpsl
lock
loop
popa
jnp
and
scas
push
imul
add
push
scas
sbb
pop
jnp,pt
data16
imull
js
divl
ret
sub
mov
sub
xchg
jae
push
mull
call
mov
insb
mov
mov
arpl
push
cmpsb
cmp
xlat
dec
movsl
sbb
repnz
pcmpeqb
fisttpll
movsb
into
mov
fsubr
outsl
adc
inc
add
mov
mov
mov
xlat
pop
add
outsl
std
jno
sub
push
and
or
sti
adc
mov
ljmp
push
mov
jno
and
cmp
rcl
push
lcall
fwait
testl
mov
xor
pop
cmpb
not
loopne
sbb
jp
xchg
shrb
pop
xchg
cli
shrb
dec
imull
push
scas
loope
testl
lea
imull
mov
test
movsl
jp
xlat
sub
dec
sub
mov
ja
push
mov
imul
jmp
add
mov
cli
sub
mov
fisubl
add
cs
mov
stos
ljmp
xor
adc
lock
bsr
out
lea
jge
lock
dec
je
xor
hlt
std
rcrl
jnp
pop
movl
push
jne
cwtl
pop
pop
fistps
adc
xor
mov
in
aaa
mul
dec
loop
jge
jecxz
sbb
mov
push
lds
into
jns
outsb
cwtl
inc
inc
xlat
scas
sbb
jg
mov
inc
jmp
mov
mov
jecxz
rorb
cmp
adcl
cs
mov
testl
pop
xchg
insb
outsb
cmp
daa
adc
arpl
mull
push
sbb
out
lea
idivl
sar
in
popa
xor
ja
mov
and
xor
adc
mov
sti
xchg
popa
add
sarl
mov
push
inc
rcrb
jle
mov
jp
lea
adc
ret
test
cmp
and
lret
xchg
mov
push
jae
jb
inc
sub
in
fsts
imul
cmp
popf
movsl
outsl
mov
in
out
ret
pop
mov
testl
into
ds
xchg
and
mov
jp
sub
cmc
enter
cmp
lahf
clc
jl
jg
push
and
nop
loop
in
je
and
pop
mov
fcmovbe
push
adc
outsl
in
pop
popf
in
addr16
mov
stos
mov
inc
movsl
or
jp
insl
mov
rcrb
sbb
sub
cmp
or
inc
call
sub
xor
rcl
negl
cbtw
pop
sbb
loopne
push
push
imull
push
pop
sbb
idivl
outsl
repz
sbb
insb
div
pop
addr16
sahf
lcall
repnz
aam
pop
insb
push
jmp
jae
xchg
push
jne
rorb
mov
sub
jecxz
push
jl
mov
loope
cmpsb
xchg
dec
dec
mov
rcll
adc
sbb
sbb
aaa
dec
fmuls
sub
ss
adc
push
in
and
mov
push
leave
shrl
push
adcl
std
stc
or
fildll
jecxz
jne
push
in
clc
or
scas
xchg
stos
sub
mov
out
imull
adc
xchg
pop
xor
lods
xchg
bound
dec
notl
cmp
pusha
enter
movsl
dec
jl
loopne
ja
sbb
mov
xchg
das
aas
xor
sbbb
out
push
fsubr
cltd
notl
das
mov
xchg
repz
mul
lcall
imull
out
shr
and
ror
out
paddsw
testl
mov
mov
add
test
out
fs
fmull
addr16
adc
jmp
lods
notl
sub
push
inc
fbld
mov
notl
js
sub
mov
cmp
out
lcall
sbb
fs
sbb
push
aam
mov
cmc
xlat
cmp
dec
add
cwtl
aas
daa
sti
ljmp
divl
ja
xchg
dec
cmp
stos
push
pop
fidivrl
testl
xchg
pusha
push
insb
mov
out
pop
leave
hlt
arpl
jo
negl
outsl
aam
imull
jge
dec
cmp
sahf
dec
xchg
test
adc
xor
repnz
mov
add
mov
or
or
mov
adc
mul
mov
jo
out
sbb
cmpsb
fisttps
neg
insb
fwait
int
call
push
in
xor
jns
dec
xor
xchg
mov
add
push
jmp
sub
sub
negl
in
inc
cmp
sbb
jo
sbb
lea
imull
jbe
fincstp
pop
enter
test
dec
and
lcall
lock
inc
adc
or
sbb
add
push
adc
call
inc
xchg
ja
jge
negl
mov
std
xor
mov
les
push
gs
testl
push
mov
mov
mov
test
adc
into
popa
scas
mov
stc
and
cmc
divl
mov
outsb
iret
scas
mull
add
lods
push
dec
ss
fchs
repnz
cmpsb
or
hlt
jl
imull
sub
jg
adc
xchg
loope
lock
inc
xor
addl
jge
testl
pusha
mov
addr16
fs
in
add
dec
sub
fbld
xchg
jmp
fabs
hlt
ficoms
pop
or
js
jbe
jmp
jns
scas
imul
adc
push
cmp
jp
fsubr
mull
rcrl
or
mov
adc
inc
sahf
negl
mov
aad
or
insl
std
js
jmp
adcl
lea
mov
out
test
idivl
or
inc
xchg
mov
push
inc
xchg
shrb
out
mov
jo
notl
idiv
mov
adc
push
xor
dec
ljmp
cmp
mov
in
out
xor
neg
inc
les
loop
cwtl
not
push
dec
loope
repnz
and
sbbl
sbb
or
in
pop
int3
and
test
fmuls
lods
aad
fs
dec
push
jge
pop
mov
popf
pop
aam
jno
loopne
or
fildl
jmp
add
mov
shrl
int3
cmpsl
out
adc
mov
idivl
rcrl
out
mov
add
xchg
ja
ja
mov
mov
cmp
cmpsb
fldcw
stos
lret
pop
aad
or
inc
jg
rcr
jg
sub
imull
ss
inc
imul
dec
jp
icebp
xchg
mul
scas
enter
fistl
xchg
mov
mov
adc
mov
push
fcoml
ljmp
dec
repnz
add
fistl
and
or
cmp
sbb
pop
sbb
sahf
xchg
fldt
mov
fs
addr16
add
shr
add
jge
xchg
ja
cs
push
dec
push
cmp
xchg
and
jb
nop
arpl
cld
adc
dec
inc
mov
mov
sbb
and
out
mov
lea
ret
lea
je
sub
rep
xchg
cld
push
mov
inc
movsl
enter
fs
fsubl
push
into
in
insb
mov
push
loope
loopne
push
ja
pop
and
mov
gs
aaa
xor
push
pop
loope
subb
int
ss
push
add
mov
mov
popf
out
mov
fs
clc
mov
or
fidivl
into
repz
in
add
push
fistpl
or
nop
out
jo
inc
pop
sahf
pop
sbb
xlat
dec
loopne
inc
fcmove
push
loope
inc
mov
jp
fisubl
sbb
ss
push
in
mov
dec
push
mov
aas
ror
out
dec
enter
fstl
aad
je
and
sub
stos
pop
jne
addb
insb
lcall
push
adcb
jno
out
and
imul
mov
adc
sbb
xchg
inc
in
fs
pop
je
jle
icebp
pop
out
dec
outsb
push
cmpsl
insl
fcomps
loopne
repz
ss
imulb
jb
jmp
xchg
pop
ret
inc
jl
inc
sbb
mov
xlat
jno
ljmp
jbe
adc
fcmovb
cmp
inc
push
xlat
clc
cmp
sub
sbb
ljmp
jecxz
sbb
mov
cwtl
std
imul
subb
lods
stc
aaa
pushf
dec
andb
sub
jne
sbb
rol
xor
mov
add
sahf
movsl
hlt
jne
pop
jno
lods
stos
cmpsl
xchg
cld
lods
jg
fs
sbb
adcl
insl
mov
dec
mov
mull
jle
cmpsb
sbb
inc
ja
rcrl
add
popf
inc
enter
mov
xlat
push
xchg
jg
xchg
xor
enter
in
negl
lcall
pop
xchg
decl
idivl
and
in
sbb
imul
jl
inc
ljmp
xchg
fdivr
add
mov
push
hlt
mov
cvtpi2ps
or
xchg
dec
pop
dec
push
mull
out
sti
stos
inc
jl
repnz
push
pushf
sbb
dec
mov
mov
and
test
sub
inc
mov
mov
ja
mov
clc
xchg
bound
pop
and
hlt
jns
push
loop
out
testl
in
xchg
jb
push
aad
loop
daa
pop
notl
std
fs
lods
div
icebp
mov
not
jmp
addr16
adc
push
lods
into
xchg
repnz
sti
jge
mov
hlt
or
outsb
shlb
decl
xor
insl
pop
adc
cld
shr
mov
scas
xchg
pop
dec
loop
inc
mov
xor
pop
xchg
lock
jg
cmp
negl
les
es
je
xchg
pop
cs
pusha
testl
fdiv
jg
cs
outsb
push
add
push
les
nop
mov
ss
push
push
sub
sahf
orb
aad
xchg
lahf
js
xchg
rclb
add
out
mov
xor
nop
pextrw
sbb
mov
lret
adc
ja
or
and
xchg
mov
xor
leave
lea
and
fsts
in
pop
pop
mov
outsb
dec
not
aaa
stos
dec
dec
xchg
int
sarb
mov
mov
cli
jo
adc
enter
jge
pop
pop
stc
jmp
inc
ljmp
test
sub
pop
testl
dec
pop
mov
out
push
paddusw
jge
es
fldcw
xchg
cld
or
aaa
cmp
imul
inc
add
dec
xchg
insb
push
xlat
add
add
dec
notl
or
cli
aas
inc
mov
sbb
fsubl
orb
push
movsl
fistpl
inc
mov
out
dec
js
adc
pusha
lock
in
mov
and
aaa
ljmp
hlt
push
cmp
ret
sub
mov
clc
les
push
outsb
out
cmpsl
xchg
fcmove
repz
divb
adc
notl
dec
xchg
stc
shll
xchg
sbb
push
inc
popa
enter
clc
jno
or
notl
lcall
loopne
xor
gs
test
xor
in
sbb
nop
inc
cld
or
mov
ret
mull
fsubr
jo
dec
and
fnstenv
fwait
das
imull
movsl
lret
lcall
aas
xlat
mov
and
insl
xchg
out
jb
outsb
add
not
pop
jne
mov
int
ficoms
or
andb
pop
aaa
outsl
sub
sti
repnz
push
fbstp
push
mull
fidivrl
sub
inc
jg
lods
dec
not
and
adc
adc
stos
xlat
adc
mov
or
inc
fidivrs
xchg
pop
add
rcrb
testl
push
repnz
dec
inc
xchg
dec
or
sbb
hlt
out
sub
ja
jg
inc
and
jns
mov
imull
subl
imul
aad
mov
pop
mull
or
repnz
jg
leave
sbb
sbb
push
and
jns
loope
xor
idivl
popf
idivl
push
fsubrs
inc
mov
xchg
js
dec
xorb
jb
shr
xchg
je
push
dec
subb
out
enter
mull
sbb
mull
inc
lods
xor
sub
adc
stos
mov
aaa
ss
addr16
add
mov
mov
repz
test
aaa
out
loopne
push
lahf
test
xlat
and
in
jle
negl
andb
ja
insl
adc
jae
notl
iret
popa
cmp
pop
mov
out
adc
shlb
outsb
call
mov
xchg
cmp
push
pop
es
adc
dec
rol
shl
sbb
lds
or
loopne
sbb
adc
mov
idiv
and
inc
clc
gs
sbb
xor
mov
xchg
push
sub
outsl
dec
arpl
or
test
mov
xlat
call
dec
or
and
test
andb
outsl
sub
push
dec
dec
jp
push
cli
jecxz
and
cmp
mov
jbe
stos
mov
dec
je
dec
ljmp
dec
cmpsb
jbe
out
xor
dec
outsl
repz
pop
repz
insb
inc
mov
icebp
fidivl
pop
and
cmpsl
jne
imul
pop
test
add
iret
loope
pop
mov
inc
mov
or
fisubl
fsub
dec
loope
gs
testl
fdivs
sub
andb
bound
ja
cs
sahf
lods
mul
es
cmc
cmpsl
stc
notl
mov
mov
int
push
into
call
dec
mull
xchg
xchg
scas
cli
jl
xchg
mov
testl
pop
add
in
aad
addr16
ss
jmp
mov
lods
push
push
idiv
xlat
xchg
xor
inc
stos
dec
xchg
sbb
or
sbb
ffreep
mov
xchg
divl
lret
xor
or
xlat
sub
insl
inc
enter
jp
pop
nop
xor
sbb
fcomi
mov
push
sub
iret
idivl
popa
inc
xor
jne
sbb
cwtl
sub
pop
sub
mov
in
data16
and
or
cltd
fistpl
pop
addr16
testl
orb
pop
nop
mov
mov
mov
ljmp
jge
sti
bound
dec
fists
push
std
repz
dec
outsl
dec
cmp
neg
imul
push
adc
push
and
add
adc
dec
divl
sbb
lds
dec
xchg
out
test
in
sbb
jnp
and
div
mov
imul
les
jne
aad
adc
daa
imull
jo
ja
push
notl
scas
and
sub
test
in
mov
and
jno
adc
jl
sbb
in
xchg
loope
rep
test
push
cmp
and
int3
scas
adc
add
mov
and
add
xor
mov
pushf
cmp
mov
xor
sbb
loop
xor
pop
xchg
out
test
test
fistl
push
dec
dec
out
neg
jno
cmp
jbe
fildl
cld
jmp
test
push
cmp
imul
adc
pop
mov
icebp
jmp
clc
js
ja
dec
jmp
mov
stos
sbb
call
push
jge
jg
es
inc
sti
add
jae
add
cmpsb
mov
aas
pop
push
xchg
and
icebp
es
out
add
bound
push
clc
xchg
andl
leave
xchg
ljmp
insb
cmpsl
fistps
fadds
ret
pop
fstpt
cli
fucomip
out
sub
adc
cmp
xor
push
inc
call
out
cmpsl
das
sub
stc
push
and
lcall
jb
imull
pop
pop
maskmovq
and
and
insl
mov
push
mov
test
mov
rcl
xor
xchg
mov
xchg
inc
dec
out
xchg
jae
cmpsl
xchg
dec
adc
iret
cmp
adc
sub
cmpsb
mov
sbbl
fsubs
cmp
idiv
clc
add
push
cmp
adc
xchg
jp
enter
sub
mov
mov
xor
stc
out
leave
add
jg
pop
fadd
push
mov
and
dec
sub
movsb
je
ja
xor
fnstcw
dec
push
inc
pop
or
lret
jle
imulb
adc
lret
mov
mov
ja
sub
mov
adc
call
jmp
or
pusha
push
loope
iret
aas
in
out
hlt
rorl
cli
fldl
int3
inc
sbb
out
ja
mov
xor
or
andb
adc
dec
mov
pop
dec
out
stos
sbb
ficompl
xlat
or
pop
std
testl
cmp
insl
adc
imul
fiaddl
test
xchg
ja
mov
dec
jne
lcall
into
xchg
outsb
sbb
dec
dec
xor
int
or
je
jecxz
sbb
sub
in
inc
lret
mov
mov
test
jno
cli
scas
sbb
insl
sub
repz
scas
out
adc
lcall
sahf
push
mov
mov
push
es
movsl
and
ja
mov
add
push
push
addl
mov
sbb
mov
sub
fidivl
cli
fldt
inc
jmp
add
fildll
xchg
ljmp
outsb
adcl
push
cli
ljmp
jno
and
mov
dec
cmp
data16
mov
lea
xchg
mov
out
pop
outsl
cmp
sbb
jne
adc
adc
mov
data16
or
and
mov
push
aas
add
cld
daa
pop
sar
mov
into
xchg
push
xchg
daa
push
jg
dec
mov
fsubrp
imul
cltd
lods
loop
add
jp
stos
xlat
sbb
cmpsb
mov
add
push
push
xor
mov
repz
imul
outsl
idivb
mov
push
sub
cmp
lea
push
jmp
inc
out
inc
push
xorb
inc
cmp
mov
xchg
xor
out
lea
jecxz
pushf
pop
sbb
sbb
sbb
cs
imul
jo
xlat
movsl
adc
repz
ljmp
xchg
das
xor
into
add
daa
les
sarb
in
dec
mov
adc
cmp
adc
cs
jae
ja
or
rclb
add
cmpsl
fmulp
xchg
mov
fisubl
jbe
test
jmp
push
jnp
inc
in
cmp
ja
mov
test
cwtl
cmpsb
xchg
jae
out
pop
mov
pushf
inc
mov
sbbl
sub
int
or
push
es
pop
in
fld
sbb
test
pop
push
sbb
mov
pop
imul
jp
mov
movsl
mov
mov
mov
jecxz
das
mov
mov
sub
popfw
mov
inc
and
jmp
mov
idivl
xor
ljmp
imul
pop
aaa
xchg
xor
sbb
rep
icebp
inc
les
sarl
jmp
push
inc
testb
mov
cmp
jecxz
and
mov
fs
daa
cld
jecxz
cmc
mov
aaa
jecxz
adcl
dec
jne
loop
lret
adc
icebp
adc
jb
sub
mov
jne
pop
test
cmpsl
imul
push
leave
sbb
fstpt
cmp
in
ljmp
rolb
insl
out
adc
pop
mov
lret
push
inc
cmp
add
clc
xchg
xlat
xchg
adc
and
leave
sub
pushf
in
imull
xchg
push
cmp
add
idiv
inc
fiadds
out
add
out
jne
lahf
aad
sub
push
xchg
adc
fisubl
test
xor
neg
push
cmc
pop
xchg
jecxz
add
xchg
mov
lahf
pop
mov
mov
stos
jo
xchg
xchg
xlat
fsubs
dec
imull
clc
faddp
test
mull
addb
sbb
movsl
div
lret
roll
mov
imull
mov
sub
push
inc
sbb
or
mov
mov
enter
push
aaa
cmp
cmp
notl
mov
movsb
outsb
jb
cmp
cmpsl
addr16
lea
pop
jbe
test
adc
lahf
xor
pushf
pop
push
cmp
mull
cmp
testl
lds
call
and
cmpsb
xor
xor
push
mov
call
pop
cmp
mov
xor
mov
ss
shlb
push
sbb
and
jo
jb
das
jle
or
int3
enter
xor
or
imull
fists
testl
add
cmp
lock
enter
bound
ljmp
cmp
xchg
add
xchg
mov
imul
dec
pop
testl
inc
and
fcmove
jne
addr16
jp
sub
jmp
rorb
pop
in
int
adc
loop
mov
test
rclb
scas
imul
popa
cs
testl
outsb
out
daa
xchg
mov
aaa
xchg
das
jmp
push
mov
dec
pop
push
out
es
adc
adc
inc
push
mov
jbe
mull
mov
cmpb
aad
arpl
xchg
push
or
outsl
mov
sbb
test
imul
aas
dec
loope
popf
pop
cli
mov
lret
out
je
xor
arpl
call
add
push
or
cmp
shll
testl
jo
sbb
xor
lcall
notb
notl
or
dec
in
gs
divl
aad
xchg
rcr
cs
push
add
neg
fistps
dec
mov
adc
mull
fcoml
add
aas
out
adc
sbb
or
es
jl
push
les
xchg
cmp
sbb
cmp
pop
xlat
in
fsubrs
cmpsb
add
out
add
enter
divl
out
out
xchg
push
or
notl
add
push
mov
inc
sub
fistpl
mov
cmp
testl
test
mull
cs
insl
sbb
negl
dec
push
pop
idiv
jle
stos
aaa
inc
sub
outsb
stc
add
divl
jb
push
dec
inc
arpl
push
sbb
cmp
xchg
fincstp
push
pushl
sbb
ja
push
dec
shr
scas
aam
push
sbb
jle
mov
imull
fsub
jl
lret
out
aas
push
or
not
sub
xchg
inc
inc
and
fsubs
sbb
push
cmp
sbb
pop
jmp
imull
or
hlt
icebp
mov
push
sbb
or
xchg
jnp
imull
dec
pop
outsl
mov
xor
inc
fldenv
mov
cli
leave
jmp
xchg
test
and
push
xchg
jmp
cwtl
and
pop
repz
divl
fwait
dec
jmp
xchg
push
ret
xor
xor
jl
sbb
add
mul
sub
mov
test
dec
push
cltd
testl
loopne
mull
in
aas
ret
scas
xchg
nop
not
clc
movsl
sub
enter
and
mov
dec
inc
pop
and
xchg
fisubl
in
orb
sbb
cmc
repnz
jo
jb
mov
jecxz
in
iret
clc
ffree
pusha
and
ret
pushf
das
jbe
push
dec
notl
fildl
divl
jns
xor
mov
cmp
mov
cmpsb
adc
lds
jge
cmp
pop
mov
inc
int3
jecxz
adc
pop
lods
add
cmp
xchg
insl
or
arpl
movsb
fnstenv
pop
stos
lret
pop
ss
decb
push
fndisi(8087
mov
aas
int
cs
fisubrl
test
add
inc
rcrb
shlb
mov
fwait
cmpsl
push
mull
lret
push
mov
cld
mov
icebp
outsb
out
neg
adc
jnp
xchg
ljmp
pop
pop
insb
mov
movsl
cmp
jno
aad
testl
dec
in
sub
xchg
test
enter
js
dec
insb
out
push
mull
dec
and
mov
add
divl
cmp
scas
dec
fwait
push
and
sbb
jge
imul
sbb
aaa
enter
pusha
xchg
xchg
ds
dec
in
pop
testl
shrb
in
mul
sahf
xchg
sbb
adc
fistpll
pop
sub
testl
js
notl
or
fwait
out
jbe
cltd
aad
aas
loope
xchg
test
pop
sbb
jmp
cwtl
xor
jns
fs
pop
sar
loope
testl
insb
push
jg
jmp
cwtl
sbb
pop
inc
jb
mov
xchg
sub
jne
icebp
rorl
mov
dec
out
pop
jle
clc
imul
out
and
mov
rorl
pop
fstpl
jle
sahf
jecxz
leave
test
paddusb
lods
in
testl
jecxz
in
cltd
jns
aas
cmp
test
jle
in
cmp
leave
shl
lods
cld
adc
pushf
idiv
daa
dec
loope
sbb
negl
out
xlat
xor
jb
pop
mov
jle
in
push
in
aad
pop
dec
xchg
cltd
jo
scas
out
xor
lcall
sbb
sahf
test
add
pop
and
mov
sbb
xchg
arpl
lock
loop
xchg
xchg
leave
loop
push
jns
inc
insl
aad
cmpsb
idivl
xchg
divl
sub
imul
jns
dec
movsl
and
gs
addr16
mull
in
sub
loopne
cmp
cmp
xchg
jb
and
lcall
fcmovne
loopne
testl
shlb
sbb
jle
cld
rcrl
push
mov
jns
out
jl
bound
hlt
xlat
fidivrs
pop
mov
stos
and
aam
jl
xchg
xlat
sub
add
sub
jmp
push
push
lret
add
cld
scas
mov
sub
notl
test
subb
negl
jbe
xlat
inc
mov
jmp
fidivrl
neg
adc
scas
cwtl
jge
adc
mov
mov
adc
adc
sbb
xor
scas
call
arpl
test
xchg
enter
mov
sub
popf
xchg
dec
lock
jno
mul
test
mov
loopne
xor
out
testl
pop
imull
loopne
enter
inc
jo
pop
int
testl
mov
popf
stc
pusha
jae
add
notl
in
xor
mov
test
fadds
sbb
xor
in
negw
outsb
scas
mov
pop
cmpsb
mov
wrmsr
inc
loope,pn
xor
mov
minps
sub
push
jno
pop
shll
jge
push
jp
test
out
fisttps
insb
aas
cmpsl
popf
negl
mov
idivl
fwait
sub
out
lds
das
shl
adc
mov
pop
dec
mov
jge
dec
addb
add
mov
xchg
mov
insb
add
aaa
cmp
jp
jge
fs
mov
sahf
pop
dec
mov
stos
jne
dec
out
inc
adc
negb
bnd
mov
inc
out
mov
lock
jae
pop
negl
and
cmp
cmpsb
inc
div
lock
sub
repnz
mov
loop
jb
push
popf
pop
adc
lret
out
sahf
jne
push
jecxz
mov
mov
push
jae
in
add
cmp
out
negb
xchg
lods
push
fdecstp
cmp
push
sbb
inc
push
lahf
mov
jo
xor
sbb
adc
xchg
xlat
jmp
add
bound
in
repz
mov
pop
cs
rclb
out
xlat
mov
pop
jmp
and
leave
push
sbb
push
sarl
pusha
or
sahf
loopne
fstp
out
loop
lcall
or
test
mov
jo
scas
dec
jae
cmpsl
push
sub
hlt
divl
mov
pop
out
repnz
xchg
out
jmp
test
movsl
add
dec
pop
cld
jecxz
push
xor
inc
lods
xchg
shl
xor
lds
adc
pusha
jmp
cmpsl
dec
pop
out
loope
xor
fwait
iret
mov
leave
add
xor
fcompl
jp
pop
test
jno
xchg
testl
sahf
or
adc
mov
popf
iret
dec
mov
cmp
xchg
xchg
divl
pop
add
xlat
movsl
sbb
ss
add
pop
and
idiv
xchg
cmp
std
stc
nop
imull
cmp
out
push
stos
cmp
dec
negl
and
and
mull
shrb
push
test
lods
jae
and
in
push
push
or
add
stos
divl
out
add
push
mov
cmp
or
fstpt
adc
divl
adc
mov
push
arpl
int
and
in
cwtl
pop
mull
hlt
dec
fcoms
push
out
leave
mov
jbe
mov
int
inc
pop
loop
dec
xchg
sbb
inc
inc
stos
push
cmp
imul
xchg
out
sbb
dec
cs
enter
and
jle
pop
cmp
pop
jbe
inc
pop
mov
outsb
aaa
ljmp
jbe
sub
lock
jmp
sub
adc
and
pop
and
lahf
aam
cwtl
mov
inc
ud2
js
inc
mov
icebp
or
cmp
sub
mov
mov
add
xor
addr16
fiaddl
or
in
adc
addr16
loopne
test
fsub
add
pusha
lret
fwait
cwtl
subb
jae
mov
pop
sti
out
mov
adc
push
dec
cltd
fidivl
fwait
lret
ljmp
jg
insl
sub
lods
or
ljmp
shrl
push
and
mov
xor
or
in
in
jnp
fcmove
adc
add
jle
idivb
push
pop
les
mov
orb
rcr
imul
cmc
inc
lcall
sub
sub
mov
add
jp
or
daa
jg
repz
fxch
inc
popl
xchg
mov
jle
inc
insl
or
inc
loope
icebp
repnz
add
cli
popf
fisubrl
lods
mov
inc
fwait
jmp
addr16
add
mov
mov
or
repz
sub
pop
outsb
push
cmpsb
or
mov
sbb
leave
push
mov
cwtl
jmp
xchg
ljmp
and
mov
xor
ficoml
mov
decb
out
push
mov
ja
xlat
ljmp
popf
rcrl
xor
push
daa
sub
lahf
inc
int
out
in
movsb
in
aas
xchg
out
mov
test
pop
mov
into
dec
outsl
adc
mov
mov
push
ffreep
cwtl
xor
cltd
inc
jecxz
neg
xor
movsl
movsl
rorb
sbb
andl
xlat
out
jg
sbb
inc
scas
xchg
cmp
enter
mov
stos
xchg
popf
cltd
mov
fs
push
inc
fisubrl
jge
cwtl
out
cmp
scas
cmpsl
cmc
addr16
loope
xchg
testb
or
imul
and
jmp
mov
jl,pn
scas
pop
inc
out
pop
testb
cli
push
xchg
ja
in
lcall
neg
pop
jmp
or
mov
xor
in
cs
mov
mov
adc
push
idivl
adcl
xor
or
cli
popf
notl
xchg
sub
loopne
add
test
sub
fdivp
push
cmp
pushf
xor
xchg
mov
inc
pop
cmp
pop
notl
mov
mov
jp
in
fidivrs
imul
test
int
es
ljmp
je
xor
out
sahf
in
mov
push
ss
sbb
dec
jmp
xchg
sub
int
add
arpl
leave
insl
nop
gs
mov
cmc
sbb
xor
push
fists
pop
jg
pop
add
pop
cltd
xchg
mov
pusha
sub
dec
or
notl
aaa
dec
leave
xchg
mov
jns
adc
dec
in
adc
add
repnz
sti
cs
cmpsl
cmp
mov
jge
rorb
push
fbstp
idivl
int
enter
add
sub
push
sub
sub
or
fimull
jmp
das
mov
js
popf
cmc
insb
add
adc
negl
inc
in
mov
aas
imul
fisubrl
mov
jnp
sub
or
decl
fcmovb
cwtl
xchg
notl
jle
es
stc
dec
out
arpl
cld
iret
popf
push
mul
call
mov
xor
fisttpll
lahf
mov
xchg
mov
jl
lods
cmpsl
jmp
in
dec
insb
jge
xchg
mov
jo
in
in
fistpll
cmpsl
fs
test
clc
je
cs
mov
push
mul
mov
mov
test
aas
pop
shlb
mov
jmp
test
dec
xor
or
pop
hlt
sarl
push
jno
mov
out
jb
push
in
adc
adc
push
sub
pushf
sbb
daa
cmp
jmp
or
pop
negl
inc
jns
enter
dec
and
jg
sbb
idivl
xor
imul
adc
add
pop
stos
inc
shlb
div
adc
sbb
jmpw
cli
gs
jns
loope
mov
bound
inc
add
mov
scas
ja
lcall
inc
adcb
iret
loope
jmp
in
fldenv
sbb
push
ja
fidivs
sub
jle
add
jge
fs
sub
repz
test
mov
popa
cmp
and
jmp
xchg
repz
repz
add
mov
sub
in
sarl
jne
mov
adc
clc
lahf
fldcw
jbe
shll
push
push
cmpsl
add
mull
aaa
out
adc
mov
xchg
fs
es
fidivrs
jmp
addr16
fsubrl
mov
mov
sbb
xchg
es
rcrb
repz
mov
xchg
imul
sbb
adc
movb
jmp
lock
dec
mov
add
cmc
stc
xchg
pop
sbb
push
out
add
sub
adc
nop
mov
lahf
mov
repnz
pop
roll
seta
mov
repnz
xchg
lea
mov
or
pop
in
lcall
add
push
pop
imul
push
fbstp
data16
inc
leave
dec
jmp
jbe
mov
sub
xchg
in
dec
jle
mov
insl
cmp
mov
inc
jecxz
mov
gs
push
test
jl
mov
test
nop
in
insl
adc
jle
shlb
cmpsl
dec
mov
loopne
mov
adc
adc
xchg
mov
nop
gs
xchg
jne
push
mov
jecxz
mov
add
cs
testb
clc
rcrl
lock
jbe
inc
fsts
fcmovne
adc
push
mov
pop
fnstenv
loopne
xor
dec
imul
add
pop
pop
ljmp
dec
or
es
and
push
xchg
stos
push
xchg
adc
out
lcall
pop
jmp
outsb
fimull
inc
sti
test
xor
push
cwtl
cmp
pushl
add
daa
popf
fcmove
xor
xchg
popf
and
sarl
xchg
nop
loop
add
mov
int
push
fidivrl
push
inc
or
sbb
aas
pop
aam
lret
mov
mov
mov
xchg
adc
mov
jmpw
sub
shlb
mov
imul
jnp
mov
and
movsb
mov
cltd
adc
add
popf
cmp
out
mov
mov
les
pop
xchg
pop
or
fsubl
cmp
sbb
scas
lret
and
stos
push
xchg
fimull
in
and
mov
sarl
jp
xor
cli
inc
mov
jno
mov
test
xchg
in
cmp
jp
dec
xchg
push
sub
jmp
stos
mov
shr
dec
add
xlat
cwtl
pop
dec
es
shll
lret
or
inc
inc
je
add
es
jmp
sub
and
adc
jne
xor
mov
mov
rorl
add
sub
pop
scas
hlt
mov
jmp
mov
out
aaa
fildl
adc
das
idivl
xchg
aad
rcr
movsl
add
out
mov
stc
fs
out
pop
jb
jbe
lods
and
xchg
push
jne
sarl
or
icebp
outsb
mov
leave
jge
add
stos
movsl
inc
or
sbb
dec
out
ja
lcall
sbb
adc
jae
int
adc
fs
xchg
insb
int3
pop
xor
cmp
cmp
dec
clc
pop
jl
js
stos
lcall
mov
rorb
mov
sub
js
sub
movsb
jle
sbb
gs
adc
inc
jecxz
lcall
call
loop
pop
pusha
pop
popa
es
add
mov
std
and
enter
and
fmuls
mull
push
loope
push
dec
and
stc
fxch
stc
negl
movsb
jg
in
enter
rcr
pop
loope
popf
sub
nop
mov
out
pushf
das
int3
add
imul
mov
sub
push
pop
je
filds
testl
sub
adc
nop
notl
jns
ljmp
jecxz
loope
adc
cwtl
dec
movl
mov
mov
mov
xchg
iret
add
in
in
lods
testl
ljmp
inc
mov
dec
testl
movsb
fnsave
enter
lahf
cmp
out
or
into
imul
and
push
xor
aam
cmp
negl
loop
in
fldl
call
mov
in
mov
ds
cmpb
leave
pop
dec
push
push
imull
mov
and
push
sub
push
out
jle
xchg
notl
arpl
stc
and
in
fdivl
out
lods
out
mull
cli
fcomip
sbb
cmp
add
jge
rcl
call
and
xor
adc
je
loopne
push
pop
je
sub
out
jle
fdivrs
das
iret
pop
adcl
inc
out
or
testl
cli
bound
xlat
test
xchg
test
jg
loope
leave
xchg
idivl
jmp
call
adc
imull
shrl
push
lahf
mov
jbe
rcll
pop
dec
testl
mov
test
pop
cltd
lret
sub
pop
mov
xlat
and
add
push
divl
jge
stc
and
push
icebp
jns
push
lcall
popa
test
mov
stos
adc
pop
sbb
cmp
add
aam
imul
mov
push
xor
pop
adc
pop
lcall
idivl
jb
xor
jno
sbb
cltd
jne
call
mov
in
or
test
mov
loop
jl
and
dec
iret
adc
pop
out
mov
or
insb
ret
imul
rcrl
mov
cmp
lea
imull
push
shlb
out
out
add
arpl
add
and
inc
mov
mov
pusha
outsl
ret
xchg
fdivp
test
test
imull
pop
jb
push
cld
in
sbb
mov
dec
fsubl
testl
pushf
ret
push
fildll
push
psubsw
lret
test
imull
xor
jmp
loopne
jg
xor
pusha
fxch
testl
stc
cmc
pop
shlb
neg
rolb
add
jmp
gs
sbb
lahf
rolb
and
addl
stc
loopne
sahf
xchg
xchg
jbe
mov
in
add
push
push
std
gs
jne
idivl
and
adc
xchg
imul
cmp
cmpsb
xor
ret
mov
pop
ret
mov
sbb
and
negl
stos
leave
scas
fistpl
test
sub
cmc
push
cmp
push
and
xor
out
iret
js
push
lret
push
cmp
arpl
fld
repnz
fadds
xchg
mov
add
sub
testl
jns
out
sub
mov
lcall
push
nop
popa
pop
xor
aas
inc
subb
jmp
cmp
add
mov
dec
das
add
jno
jno
and
fcoms
fmul
je
or
sbb
notl
push
test
jmp
mov
rcll
mov
incb
sub
test
testl
sub
icebp
xlat
jo
cmp
pushf
lods
jp
mov
lahf
push
inc
mov
dec
repz
add
mov
ss
daa
pusha
out
or
jnp
ss
fsubp
lods
or
xchg
je
push
std
orb
arpl
stos
aas
sbb
dec
mov
aaa
cld
xlat
imull
xchg
fisttpll
adc
ret
int3
idiv
dec
enter
jge
mull
push
aaa
scas
inc
pop
lea
dec
sti
out
loop
jmp
adc
addr16
aad
sbb
mov
jns
std
ja
mov
cli
les
lahf
loope
div
mov
and
jecxz
jg
sbb
mov
lret
fstps
add
xor
fdivl
jns
push
inc
mov
mov
cmc
cld
neg
xchg
or
pop
out
xchg
int3
call
daa
inc
jp
rorl
lods
movsb
and
fcomi
icebp
addb
and
shlb
inc
pop
clc
jae
inc
adc
das
js
push
jg
fxch
mull
mov
dec
icebp
cli
jp
push
mov
mov
fisubrl
fists
and
mov
div
mov
stos
shl
cmp
or
mov
in
cltd
push
imul
scas
cwtl
test
arpl
sub
push
jg
inc
mov
pop
enter
lods
ret
jl
je
pop
outsb
gs
insl
ret
ljmp
sub
fdivrp
jle
pushw
imull
std
mov
arpl
mov
or
fiaddl
enter
and
shrl
pop
idivl
add
pop
cwtl
and
dec
mov
push
adc
adc
in
idivl
pop
notl
mov
lret
mov
idiv
xor
inc
test
push
negl
insb
add
nop
idivl
sub
dec
imul
xor
cltd
sbb
cwtl
je
dec
fistl
pop
cli
mov
imull
rcll
ret
data16
dec
push
or
lock
fucomip
fsub
movsl
jp
push
adc
test
ficoml
ds
mov
bound
idivl
flds
and
push
loop
xlat
sub
jp
pop
shll
mov
push
pushf
xor
mov
stos
pop
pop
fidivrl
notl
add
mov
rolb
ret
popa
in
orb
dec
fadds
mov
or
out
aam
dec
jb
push
cwtl
ret
mov
loopne
out
fcmovbe
cltd
pop
loopne
xchg
out
mov
cmp
sti
fisubrs
fstps
nop
and
testl
dec
xor
mov
sub
mov
dec
arpl
repz
cmc
xchg
imull
fcmovnb
xorb
push
pusha
dec
cs
mov
inc
movsb
insb
push
push
adc
cmp
idiv
scas
xchg
inc
jae
popf
out
sbb
xor
cmp
xchg
icebp
mov
mov
dec
testl
std
mov
push
fildl
mov
pop
nop
pop
push
adc
jmp
testl
aad
insb
xor
cwtl
dec
cmc
jo
xchg
imull
mov
sbb
test
loope
adc
lock
es
mov
imul
ljmp
xor
xor
negl
inc
mov
or
mov
cmpsl
or
imul
outsb
mov
jo
cs
icebp
pop
jae
aam
inc
idivl
jbe
stc
jo
das
jmp
xlat
sbb
nop
mov
out
arpl
std
mov
negl
sub
jge
cmp
stos
testl
out
xor
scas
shl
imull
mov
sti
adc
insl
div
jle
mov
cmp
lock
inc
hlt
and
loop
mull
testb
jge
cmp
lods
imul
sti
mull
not
aas
xchg
jecxz
cmp
lea
sub
jmp
movsb
int
jae
loope
mov
imull
fcomi
pushf
shll
xchg
lret
cmp
add
mov
mov
push
ror
out
jbe
lea
xchg
adc
cmp
mov
mov
repz
push
pop
insl
jne
das
shr
add
pop
lods
daa
jge
cmp
in
aaa
xchg
add
xchg
out
xlat
out
movsb
xor
pop
cs
mov
dec
push
cmp
stos
add
iret
adc
xor
out
xchg
or
add
test
notl
lret
leave
mov
xlat
lcall
cld
enter
jnp
movsl
lock
or
negl
dec
pop
imul
cltd
aad
icebp
icebp
icebp
xor
mov
xchg
xorps
inc
add
negl
int3
xor
aaa
negl
cmpb
notl
jecxz
shlb
and
out
ljmp
pop
enter
ss
ret
adc
out
inc
mov
divl
push
sub
notl
xchg
int
fsubrs
out
fbstp
xchg
sub
dec
fmull
shl
scas
xor
pusha
xchg
mov
jae
lds
movb
cmpsl
or
adc
fdiv
jnp
xchg
and
out
ja
cld
jae
sub
cs
out
mov
jecxz
test
mov
jl
fwait
loope
push
imull
dec
mov
cmp
gs
repnz
ss
cltd
adc
push
test
jl
mul
loopne
pop
rcr
lods
mul
fwait
cmc
fisttps
xor
pop
push
pop
aas
arpl
aad
push
sub
inc
icebp
idivl
cli
in
xchg
mov
dec
loope
bound
sub
xchg
insb
test
loopne
or
ljmp
int3
mov
push
lods
jmp
jle
mov
mov
ds
pop
pop
idiv
cmc
into
dec
movl
loope
testl
add
ror
bnd
mov
notl
xchg
loop
std
enter
mov
push
lods
ljmp
out
jmp
mov
aas
std
or
and
loop
lds
icebp
push
lods
push
addr16
sbb
push
fstp
loop
mov
jg
mov
mov
jns
js
sbbb
jp
push
fsts
cmp
aad
cld
or
imul
das
add
fnsave
rcll
std
or
pop
and
je
and
pop
testb
lods
xor
pop
in
mov
outsb
pushf
aas
insl
sbb
push
out
rcrl
fimull
mov
push
in
mov
sub
xor
mov
insb
idiv
jge
xlat
jmp
cmc
cmc
jmp
imul
ja
sahf
pop
in
or
xor
pop
xor
cltd
sbb
push
insl
je
mov
je
out
les
fisttps
ja
pop
jbe
xchg
movsb
data16
adc
pop
mov
aas
and
imul
ljmp
xor
sub
out
mov
or
xchg
lds
push
mov
lcall
div
add
adc
jmp
inc
test
inc
pop
and
push
inc
decb
ja
orb
lods
sbb
das
xchg
loopne
out
ret
pop
mull
lcall
jae
test
repnz
add
jmp
cmpsb
push
xor
into
mov
sub
test
fbstp
loop
popa
jbe
adc
mov
mov
scas
pop
not
lret
or
mov
push
negl
push
adc
ret
leave
out
and
cmpsb
sti
roll
sub
in
xchg
jle
and
test
notl
mov
cmp
xchg
popf
xor
add
lahf
lcall
or
push
mov
mull
sbb
out
sub
xor
sbb
sbb
jle
adc
divl
filds
imull
shr
mov
mov
testl
negl
js
shlb
jno
negl
and
sti
sub
aad
mov
push
push
cmp
sub
lock
sbb
mov
sbb
imul
cwtl
je
repnz
outsb
int3
cwtl
not
jmp
shl
xchg
mov
mov
pop
jbe
vpor
pop
sahf
ljmp
cltd
xor
sub
push
enter
jno
stos
les
and
pop
push
push
mov
inc
shrl
jb
pop
rorl
insl
es
add
xchg
fsubrl
testl
ret
stc
cmp
jb
or
pop
ficomps
outsl
idivl
or
xorb
mov
ja
pusha
inc
filds
lock
aad
adc
sub
repz
enter
negl
add
mov
push
outsl
lods
jle
lock
idivl
sahf
or
andl
fistpl
clc
push
push
xlat
cmovnp
stc
adc
xchg
adc
idiv
jmp
mov
cmp
adc
add
in
cmp
arpl
frstor
negl
push
mov
lock
negl
pop
mov
ret
call
sub
rcl
mov
add
dec
sbb
dec
arpl
mov
adc
mov
out
cwtl
fimuls
mov
ljmp
adc
lods
sbb
test
pop
adc
pop
insb
out
xor
adc
or
xor
mov
mov
mov
inc
out
inc
ja
jb
repnz
xlat
clc
sbb
jmp
fwait
xchg
add
add
inc
mov
mov
enter
jo
int
push
pusha
add
push
fucomip
or
ret
push
int
nop
inc
ja
repz
pop
ret
pop
pusha
mov
aas
das
cmc
sahf
loope
add
mov
or
sbb
iret
daa
mov
mov
mov
mov
mov
sti
lret
inc
ret
subb
mov
lahf
mov
test
fimull
mov
xor
xor
mov
fimull
cwtl
lcall
lock
push
jecxz
fnsave
xor
inc
aaa
pop
pop
jbe
rep
stc
mov
divb
push
stos
cmpsl
ficomps
daa
jg
std
add
scas
xor
sbb
cld
cwtl
out
xchg
mov
jno
das
fimull
or
rolb
in
mov
push
mov
mov
lods
sub
xor
add
lret
stc
add
add
inc
add
lea
inc
cmp
lods
idivb
add
cmp
fcmovb
scas
push
faddl
cmp
or
lahf
cmp
cmp
mov
sbb
cmp
pop
jno
repnz
pop
adc
iret
push
mov
sti
mov
jl
out
xchg
cli
push
cmp
push
or
hlt
pop
fistpll
cltd
and
cmp
dec
flds
imul
and
add
cmp
notl
or
push
adc
sbb
sub
push
testl
xchg
jae
xchg
and
add
loope
pop
sti
testl
insb
and
divl
sarl
int
jmp
push
clc
lret
inc
movsb
es
add
imul
in
subb
pop
les
push
fstp
push
sbb
test
pop
ja
xchg
in
test
sahf
sti
insb
lcall
dec
and
rep
adc
hlt
scas
sub
pop
push
pop
rcrb
idiv
jns
ja
out
mov
or
out
xchg
sbb
imull
push
shld
pushf
mov
xchg
adc
adc
dec
outsl
or
pop
icebp
xor
addr16
in
mov
jmp
mov
gs
int
xchg
call
pop
fsubrs
loop
push
lea
mov
push
mov
cmp
or
xchg
cs
mov
test
gs
lods
xchg
repz
imull
inc
xlat
inc
rcr
push
mov
fnstenv
js
sub
in
aam
xor
and
rclb
repnz
push
xor
sbb
xor
out
mov
pop
or
sub
fiaddl
fdivs
les
push
mov
and
daa
lds
push
movsl
leave
out
int3
dec
out
icebp
pop
mov
imul
jl
sbb
je
sarl
and
sub
scas
jbe
stc
addr16
push
xor
aam
mov
mov
rcll
out
push
lcall
jne
lea
mov
push
insl
push
test
loop
aad
repz
out
movsl
adc
repz
cltd
stc
movsb
jg
push
addr16
lock
dec
xor
out
sbb
aad
push
push
push
scas
pushf
jl
mov
pop
adc
out
pop
sub
jmp
jne
pop
stos
lahf
hlt
ficoml
repz
mov
and
out
outsl
je
repz
hlt
push
aam
rcll
loop
repnz
mov
repnz
fisubl
fwait
xchg
jmp
inc
adc
mov
bound
rcl
movsl
cmp
clc
neg
push
mov
dec
add
inc
sub
push
mov
add
sbb
bound
icebp
xor
push
daa
sub
jge
mov
mov
scas
imul
xlat
fstps
adc
cltd
stos
repnz
cs
shrb
pushf
jmp
mov
and
sarb
nop
out
sbb
mov
mov
mov
mov
xchg
repz
ja
xor
imul
push
push
sub
pop
shrb
xchg
ja
cmp
mov
adc
push
inc
data16
iret
scas
aad
pop
or
mov
leave
mov
aad
lock
cmp
inc
insl
xor
outsl
cmc
xor
jp
jbe
sahf
lahf
aad
out
in
and
je
arpl
outsb
pop
mov
xchg
test
sarb
dec
jno
imul
lret
push
cmpsl
ja
pop
add
sti
cmc
mov
out
in
stos
jae
das
hlt
mov
cmp
dec
inc
in
xchg
adc
loop
fldcw
in
xchg
hlt
ss
cmp
outsl
or
mov
mov
rcl
shll
ret
mov
and
out
mov
xchg
jmp
add
add
jno
scas
sub
fs
cmpsb
outsl
daa
push
jne
int
in
push
xchg
mulb
sub
push
pusha
push
cmp
xchg
xchg
push
aam
mov
jecxz
jno
shr
repz
pop
mov
push
addr16
cmpsb
dec
iret
fisubl
bound
ja
loop
out
or
cmp
pop
rol
ss
jo
emms
or
push
xor
outsl
imul
jb
lret
sbb
jb
xchg
mov
cs
adcl
jecxz
fcomip
sub
into
xorb
or
sbb
fcoml
xchg
rorb
mov
hlt
push
repz
jnp
jecxz
loop
lret
mov
dec
ja
jmp
sbb
add
fists
neg
adc
repnz
test
sub
out
cmc
shl
adc
out
xor
lret
std
in
or
xchg
inc
rcll
icebp
sbb
fucomp
arpl
test
out
sbb
icebp
or
sub
outsl
xchg
sub
fldenv
jne
sbb
xor
jne
jmp
out
mov
cltd
stos
adc
xchg
xlat
adc
jne
sbb
and
mov
pop
adc
push
clc
in
jae
stos
out
in
jmp
add
pop
xlat
lahf
pop
in
addr16
shr
pop
cmpl
leave
xchg
and
jmp
icebp
jmp
mov
sbbl
sbb
sub
out
jae
lock
ljmp
fbld
xchg
lcall
dec
fsubl
lods
jo
outsl
es
mov
inc
inc
hlt
int3
andl
ss
cltd
pop
mov
pop
dec
sbb
in
lods
dec
add
jmp
mov
std
out
stos
loop
mul
mov
ss
gs
icebp
push
fsts
je
repz
lahf
mov
in
xor
jne
dec
movsl
loop
or
jl
fidivs
ret
test
jne
mov
and
xchg
mov
or
out
aad
add
mov
adc
mov
and
mov
mov
push
inc
bnd
adc
xchg
shll
cmp
repz
jl
jne
fisttps
insl
shlb
pop
aam
push
inc
call
inc
add
ds
addr16
jo
push
sub
jle
sbb
icebp
sbb
cmp
push
in
and
push
mov
js
lret
fsts
sbb
jp
mov
arpl
imul
das
dec
movsl
jmp
xchg
sub
pop
imul
pop
data16
rep
adc
hlt
push
out
push
ret
push
out
jno
jmp
mov
dec
cmc
mov
movsl
xchg
cmpsl
insb
sar
imul
xchg
fdivrl
add
hlt
test
imul
mov
cmc
sub
divb
cld
mov
or
fucomip
insb
mov
daa
test
adc
jle
test
repz
xor
push
mov
mov
dec
cmpsl
sbb
sub
xchg
mov
lret
mov
add
outsl
inc
lret
pushf
mov
mov
jne
sub
popa
jbe
xchg
stos
aam
jb
mov
or
in
jne
iret
ret
shr
dec
mov
out
sarb
cld
xlat
pusha
or
cmc
sub
out
stos
shl
mov
xchg
lahf
icebp
sbb
mov
lock
pop
scas
in
aad
xlat
or
dec
inc
mov
aad
hlt
cs
imul
out
push
cmpsl
xchg
adc
out
jne
outsl
dec
dec
js
testb
inc
sub
and
pop
sbb
mov
int
xchg
fadd
cmp
pop
adc
sbb
cs
push
addr16
push
imul
aad
push
pop
addr16
out
ss
out
xchg
sarl
mov
enter
out
lods
sbb
cmp
mov
dec
adc
sbb
loop
aad
mov
aaa
sub
in
adc
movsl
lret
xlat
addr16
mov
adc
icebp
out
lods
jmp
mov
test
ja
xchg
jbe
imul
jg
add
mov
mov
inc
aad
fnstenv
outsb
mov
shl
dec
shr
aam
mov
movsl
jmp
lret
and
xor
cmc
mov
call
es
push
push
mov
jbe
fistps
dec
mov
popf
cmc
or
decb
jecxz
aam
mov
out
sbb
mov
enter
push
push
xchg
jb
icebp
aad
jne
aaa
lock
push
xchg
shr
shl
fildll
repnz
imul
addr16
push
sahf
and
pop
fxtract
test
ret
rorl
cmpsb
out
adc
push
jbe
js
mov
hlt
and
loop
and
pop
mov
js
push
ljmp
aam
iret
call
call
jns
adc
mov
test
push
imul
repz
jno
lahf
fmull
outsl
push
icebp
imul
jae
dec
pop
bnd
popa
aad
lcall
call
ja
jl
fsubp
jb
sub
imul
cmp
imul
mov
xchg
xchg
push
out
fstpl
xchg
call
push
aad
add
mov
popa
mov
push
loope
jle
cwtl
lahf
fucomip
push
repz
jae
jg
and
inc
aaa
ret
mov
pop
adc
in
cltd
push
repz
in
push
lahf
in
mov
cmp
mov
xor
jmp
xor
adc
icebp
aam
adc
div
sub
jge
xchg
sbb
insl
jae
mov
or
out
mov
jmp
or
repz
rol
jge
not
jne
mov
or
aad
xor
inc
xlat
out
jbe
scas
out
and
fwait
xchg
repz
or
imull
je
xchg
ret
and
inc
icebp
sbb
push
mov
data16
es
int
jbe
test
movsl
pop
xor
dec
insl
fscale
push
xor
sti
sbb
jbe
xor
jmp
sub
cmpsl
aam
xor
cmpsl
addr16
sub
jo
pop
ja
jecxz
mov
cmp
outsl
addr16
hlt
test
xor
mov
push
fstps
test
pop
fs
adc
mov
hlt
cltd
xlat
arpl
inc
xchg
adc
scas
xchg
cmp
or
xchg
mov
scas
push
or
jmp
aam
cmpsl
iret
addr16
call
push
fdivrl
ja
pop
in
push
out
es
hlt
int
and
adc
in
out
popa
in
xor
aad
rclb
repnz
je
xchg
ss
dec
out
mov
pop
sub
out
in
sub
fsubl
lahf
fstps
in
mov
cmp
std
xchg
sub
jne
mov
push
icebp
imul
out
shll
sar
mov
fnsave
and
push
mov
mov
jnp
pop
out
fisubs
stc
push
adc
out
xor
aad
icebp
mulb
jecxz,pt
inc
push
and
mov
mov
xchg
mov
pop
ja
push
mov
data16
mov
push
stos
jbe
push
mov
sahf
call
sub
popa
push
and
sbb
jnp
addr16
dec
repz
aaa
test
repnz
pop
push
iret
popa
ja
ljmp
shll
fisttps
mov
into
imul
push
movsb
xchg
in
aaa
jmp
mov
push
xchg
dec
mov
loop
stos
out
jo
cmp
imul
push
xchg
insb
cs
xor
fwait
mov
sbb
pop
ja
jmp
das
add
mov
filds
hlt
aad
arpl
adc
push
cmp
in
add
mov
lods
lock
inc
ss
outsl
stc
cli
add
push
loop
sub
jmp
cmp
in
pop
jge
iret
xor
cli
test
aam
aaa
xor
mov
lock
lret
pop
jg
loopw
mov
dec
mov
addr16
jnp
pop
lcall
rolb
mov
pop
imul
cmp
mov
xchg
pop
xchg
ror
fstl
pusha
lcall
ja
js
out
aad
inc
in
nop
fcompl
pop
mov
divb
test
cmpsl
add
imul
xor
daa
jo
sub
jbe
push
xchg
in
ja
je
jae
and
xor
jne
mov
daa
jbe
push
inc
insb
out
jns
mov
xchg
cmp
jge
and
cli
xchg
aam
addr16
xchg
mov
jb
rcrl
adc
mov
cmp
repz
icebp
pop
icebp
jb
icebp
aam
out
arpl
cld
sti
test
jbe
lods
sbb
in
xlat
ret
iret
mov
inc
pusha
push
or
and
fmuls
testl
imulb
into
sbb
inc
dec
jmp
jbe
jbe
sub
adc
or
cmpsb
lret
fst
mov
fldl
xor
ljmp
cmpsl
aaa
out
inc
loopne
jo
ljmp
pop
jno
lret
addr16
inc
ljmp
dec
sbb
es
insb
and
sub
mov
lds
mov
sub
jmp
hlt
aas
fsts
popa
arpl
jb
loop
mov
rol
inc
repz
repnz
lahf
fbld
icebp
repz
insb
sub
pop
jmp
xchg
fwait
pop
sbb
mov
ret
pop
lcall
fadds
stc
mov
iret
push
xchg
or
iret
push
and
stos
outsl
in
xor
idiv
push
lret
pop
mov
hlt
sbb
in
out
ja
outsl
lods
add
addr16
scas
cmpsl
adc
adc
pop
jecxz
xor
in
push
call
fndisi(8087
sub
push
jg
pop
in
popf
punpckhwd
xchg
shll
xchg
and
cmp
lods
adc
push
lretw
cmp
shl
cmp
push
mov
mov
pusha
sbb
fwait
std
mov
cmp
ja
and
arpl
aam
in
icebp
fidivrs
mov
mov
push
mov
xor
jns
and
push
xor
mov
out
pop
or
add
fdiv
pop
xor
mov
or
dec
adc
inc
lods
xchg
aaa
adc
pusha
imul
out
mov
ljmp
mov
mov
pop
jbe
outsl
lods
dec
leave
ror
inc
cmpsb
jmp
sub
cmp
std
push
ja
jo
add
push
pop
in
xchg
dec
cltd
or
mov
je
mov
xchg
and
mov
jmp
test
and
in
xor
fs
in
sub
or
pop
jo
ljmp
jne
mov
hlt
push
mov
or
loop
push
es
repz
sti
ss
mov
mov
add
jmp
jmp
jb
and
sbb
icebp
cmpsl
int
stos
and
movntq
out
xor
fs
xchg
daa
imul
repz
and
stc
ss
in
sub
cmc
pop
dec
and
stos
int3
mov
lret
pop
xchg
aad
aas
imul
and
test
add
mov
loopne
cmp
scas
inc
jae
out
fnsave
movb
inc
hlt
jb
shl
sub
adc
aad
xlat
insb
lock
js
fistpll
ljmp
fbstp
mov
jb
out
scas
cmpsl
call
into
insl
dec
ja
mull
addr16
popa
loop
lods
out
mulb
clc
xor
jae
fcoml
mov
shl
sub
pop
jne
xchg
ja
inc
mov
loop
mov
mov
pop
pop
test
divb
pop
fucomi
repz
sub
inc
mov
xlat
fldcw
adc
cmc
cmpsl
pop
outsl
sub
arpl
ficoml
lret
ja
inc
xor
and
cmpsb
fildll
rcl
in
push
sub
push
call
popa
push
out
cmpsl
mov
call
pop
fidivrl
mov
push
scas
push
vunpcklps
fimuls
fbstp
popa
aam
xchg
add
push
push
ficoms
pop
pop
jae
lret
jecxz
push
jae
movsl
jb
cld
xchg
push
dec
std
add
in
fbld
mov
pop
jecxz
xor
nop
pop
in
aad
sarl
fsubrl
pop
push
fsts
subl
iret
loop
sub
push
fs
jp
icebp
mov
out
out
pop
xor
repz
fnstcw
call
push
lock
jno
popa
outsb
xchg
xchg
popa
out
mov
push
xchg
jmp
pop
xchg
push
in
addr16
and
pop
imull
ja
and
jg
aad
stos
push
call
repnz
mov
cs
push
or
aas
out
push
push
cltd
je
out
and
and
js
flds
sarl
pop
push
xchg
movsl
icebp
pop
ss
xchg
outsl
xchg
fists
mov
jmp
stos
pop
cmc
sub
in
outsb
jmp
hlt
ror
mov
cmc
dec
jge
lret
dec
fdivrl
aaa
push
cmc
pop
mov
lret
fsubr
fiaddl
xlat
ret
sbb
mov
mov
xchg
mov
lahf
sub
outsl
push
stos
jne
dec
dec
mulb
pop
outsb
ja
mov
ja
repz
xor
or
fmull
in
mov
and
sub
lock
fcoms
jecxz,pn
movsb
arpl
aaa
pop
call
cmp
cmc
out
or
jmp
out
aam
add
popa
icebp
out
outsb
lret
jo
lret
and
aad
loopw
je
iret
pop
mov
push
lock
lahf
in
stos
pop
xor
mov
jae
mov
cmp
loop
mulb
cmp
std
loop
arpl
adc
loope
sub
adc
loopne
xchg
mov
inc
cmc
cmp
js
adc
lock
cli
out
ja
data16
aaa
popf
xchg
pop
in
mov
pusha
imul
aaa
cmp
clc
rcr
pop
addr16
ret
xlat
pop
sbb
out
push
test
pop
divb
repz
push
xchg
cltd
insl
aaa
inc
ja
out
aad
mov
aaa
xchg
mov
push
adc
mov
cld
imul
pop
lret
in
push
loope
pop
sub
stos
mov
jmp
out
cmpsb
leave
imul
add
aas
ja
dec
dec
xor
push
xchg
mov
mov
aad
push
push
or
inc
mov
fdivrs
icebp
pop
lock
in
and
mov
test
loopne
insl
or
out
lcall
sub
stc
adc
add
nop
xor
or
loope
sub
and
push
icebp
clc
xlat
pusha
sbb
jns
cmc
xchg
out
cld
outsl
mov
jp
loop
cmp
out
inc
pop
enter
testb
inc
out
out
fs
or
imul
cmp
pop
negb
dec
xor
loopne
movsb
jg
pop
sbb
test
mov
shr
inc
lds
push
div
mov
loopw
leave
arpl
jae
inc
add
es
push
lret
pop
lock
jb
pop
and
sarl
inc
idivl
ret
stos
jno
in
xlat
pop
divl
aam
pop
loop
mov
lock
loop
cs
mov
jbe
ljmp
xor
adc
icebp
adc
leave
stc
outsl
mov
rcll
addr16
xchg
out
push
aam
inc
pushf
xchg
fcmovnb
cs
mov
cmc
ficomps
mov
shlb
cmc
outsb
pop
sbb
mov
pop
pop
fadds
mov
jno
mov
mov
divb
sbb
mov
pop
mov
push
inc
jns
xchg
add
repz
lahf
in
or
inc
lret
pusha
dec
jecxz
je
dec
bound
lret
fwait
das
addr16
pop
add
mov
xchg
out
ss
mov
in
and
pushf
cmc
lret
lahf
outsb
in
ficomps
add
cmc
and
push
cli
mov
popf
jne
jg
jo
xor
bswap
mov
push
mov
sub
cmpsb
jmp
pop
jl
adc
push
add
jecxz
outsl
lock
aam
fistl
mov
push
sub
sbb
adc
and
jb
xchg
je
imul
cld
test
jmp
fcomp
in
loop
outsl
jno
jne
xchg
js
test
dec
xchg
icebp
into
ss
hlt
sbb
in
ret
xchg
mov
push
jbe
pop
sbb
push
xlat
outsl
xorl
jb
outsl
xchg
outsb
push
jmp
xchg
pop
pop
dec
add
pop
out
insb
mov
jae
or
xlat
jb
lahf
mov
int
call
mov
enter
and
loop
out
cmp
inc
or
out
and
aad
fldcw
mov
xor
dec
adc
daa
hlt
mov
dec
jb
or
pop
sbb
jo
out
xor
pop
push
stos
jae
mov
dec
jne
push
repnz
adc
and
hlt
mov
mov
into
xlat
bound
fcoms
cmc
popf
push
outsl
in
aaa
fs
cmc
jle
aaa
jecxz
mov
hlt
mulb
xchg
mov
pop
jecxz
scas
pop
inc
das
jne
jno
imulb
in
xor
inc
cld
fbstp
insb
pop
arpl
sbb
mov
fwait
divb
addl
icebp
aad
push
jp
loop
and
sarl
add
out
test
push
aas
call
push
add
outsl
out
outsl
jne
push
icebp
fdecstp
leave
jno
push
add
mov
adc
pop
push
repz
pop
dec
push
icebp
xlat
pop
ficoms
and
lds
sbb
jmp
mov
iret
mov
in
test
jbe
cmp
out
push
add
and
das
pop
repz
ss
adc
out
out
push
outsl
rcl
push
push
iret
mov
fisttps
pusha
or
outsl
and
sub
pop
in
jnp
in
out
fldt
push
dec
xor
or
xlat
in
cs
ljmp
or
ja
test
test
mov
xchg
jmp
ss
or
jmp
out
jp
clc
in
loope
lods
push
notb
jbe
arpl
xchg
sarb
jne
mov
push
sub
jge
mov
sub
jl
ja
fldenv
cmp
outsb
fcomps
adcb
add
and
hlt
outsb
pop
gs
dec
mov
mov
xchg
dec
insl
mov
divl
icebp
ljmp
stos
ret
data16
in
pop
push
mov
das
xchg
mov
rcr
mov
fildl
loopne
imul
jmp
ror
and
add
cmpsl
sbb
sub
push
jecxz
jmp
sub
dec
adc
ja
xor
rclb
pop
add
imul
outsl
repz
xor
mov
insl
repnz
arpl
jne
mov
iret
adc
jb
testb
loopne
js
and
bound
adc
mov
into
dec
push
xor
int3
fucomp
sub
or
lret
mov
negb
push
data16
xorb
fstps
xchg
je
out
sub
or
loop
pusha
xchg
repz
lahf
icebp
mov
loop,pt
in
shr
push
mov
jb
cmpsl
loopne
popf
mov
scas
fcompp
lret
ljmp
shl
std
aad
xor
sub
ficoms
repz
int3
nop
in
push
clc
push
int
out
sbb
push
push
mov
or
jne
mov
pcmpeqd
repz
add
xchg
das
or
icebp
sbb
jmp
xor
pop
xchg
cs
jne
cmc
cmp
or
pop
imul
sub
push
sub
mov
sbb
icebp
cs
sub
pop
jb
xchg
xor
ja
icebp
pop
jo
xlat
jne
iret
out
leave
mov
out
jo
xchg
adc
sahf
mov
jbe
mov
sbb
push
aaa
imul
aad
push
movsl
jo
hlt
cs
shrl
int3
hlt
mov
sbb
dec
inc
loope
mov
out
and
mov
sbb
sub
lcall
es
jb
mov
in
out
lret
ljmp
scas
ss
icebp
insl
sti
out
mov
aaa
pop
ss
jmp
shrl
stos
hlt
scas
push
add
and
fimull
jno
jae
outsl
xchg
rcll
jno
adc
out
loopne
fildll
cs
mov
pop
imul
stos
xchg
cmpsl
loop
aad
in
cs
mov
mov
fcoml
in
jns
jp
sbb
mov
mov
scas
out
xchg
pop
cmpsl
sub
xor
outsl
xor
icebp
cmpsb
push
fcompl
jbe
pop
imul
xor
clc
outsl
in
mov
mov
jb
xchg
nop
mov
xchg
addr16
out
jbe
xchg
mov
call
insb
jae
out
pusha
mov
mov
xchg
dec
xor
loop
mov
dec
icebp
dec
loope
aad
adc
aaa
add
pop
es
iret
jo
int
insl
and
push
loope
out
pop
shrl
adc
sub
ja
xor
jno
jp
pop
out
dec
and
es
lret
pop
js
fdivl
inc
and
push
ret
out
push
hlt
hlt
data16
bound
xor
xchg
iret
push
dec
jmp
mov
std
movsb
out
fbld
out
lds
das
repz
jae
push
adc
add
and
rcrl
and
mov
repz
imul
pop
mov
int3
cmc
sub
push
lahf
icebp
ss
push
mov
clc
and
sbb
adc
jp
loop
lea
ja
aam
cwtl
adc
ss
mov
fs
daa
repz
ss
mov
aaa
mov
xlat
ja
insb
stos
neg
cs
outsl
in
or
pushf
fidivs
repz
mov
imul
test
jecxz
icebp
xchg
bnd
cmc
imul
stc
xchg
xor
cvtdq2ps
xchg
lahf
sbbl
xchg
lret
call
ja
mov
sbb
repz
rorl
lock
out
and
sub
push
int3
pop
add
xor
iret
cmpsl
mov
xor
mov
pop
mov
mov
lret
jae
cs
and
inc
and
bound
mov
loope
push
mov
push
jmp
xor
mov
sub
xchg
mov
or
xor
mov
lock
je
out
or
ja
stos
dec
mov
icebp
enter
mov
loop
out
mov
pop
pop
xor
cmp
add
sbb
fdivp
aam
or
cmp
test
pop
jbe
sbb
shr
adc
sbb
mov
shl
mov
mov
xchg
adc
lret
xor
icebp
mov
clc
or
cwtl
add
adc
stos
pop
cltd
adc
add
nop
addr16
pand
sbb
inc
or
lock
mov
popa
notb
out
outsl
jae
movsl
imulb
adc
xor
xor
ja
fistpll
sbb
xor
push
xor
aaa
popa
in
add
ja
inc
movsl
jo
lea
jbe
addr16
mov
test
xchg
lock
mov
in
mov
lock
imul
sbb
adc
ja
out
xchg
addr16
push
mov
dec
hlt
xlat
je
pop
jae
jae
lcall
jbe
iret
dec
fdiv
sub
js
in
ret
cmpsb
add
out
inc
call
hlt
divb
mov
das
divb
sub
cltd
hlt
xchg
inc
daa
fdivl
sub
std
hlt
jno
jo
in
jbe
fidivl
jge
mov
sbb
mov
in
cmc
adc
into
icebp
scas
popa
sbb
out
shl
xor
ret
mov
jns
in
scas
test
dec
push
icebp
popa
hlt
fbld
xor
jb
push
jbe
cmc
xor
scas
push
mov
fldt
in
fistps
mov
out
add
jmp
jmp
inc
hlt
cltd
mov
repnz
fidivl
inc
and
cmpsb
rcr
negl
mov
mov
out
test
xchg
and
adc
xchg
in
pop
call
aaa
notb
mov
cltd
in
push
repnz
mov
mov
je
out
cld
in
imul
push
pop
arpl
add
loop
dec
bound
cmc
or
xchg
repz
push
mov
push
add
ss
call
pop
mov
inc
xor
or
loop
in
sbb
mov
lods
fnstsw
es
out
shl
scas
popa
xor
adc
pop
sbb
and
dec
xchg
mov
mov
mov
sub
idivb
dec
sub
imul
arpl
mov
xlat
and
lods
cmc
jg
add
aad
cmp
stc
icebp
pop
mov
fs
cmp
bound
loop
push
ja
pop
mov
negb
xchg
repz
mov
push
dec
mov
icebp
push
jge
pop
add
ret
fs
in
loop
pop
outsl
in
hlt
insl
int3
mov
push
rorl
pop
loopne
outsl
jno
adc
ljmp
jnp
mov
dec
inc
aam
jo
call
pop
jb
ja
aas
and
ja
repz
fs
xchg
rol
out
in
mov
in
pusha
outsl
and
dec
jmp
fildll
out
mulb
xor
sub
mov
inc
mov
jmp
add
cmpsl
bound
in
pop
fucomip
sub
mov
xor
jecxz
repz
and
insl
aad
adc
mov
dec
xchg
sub
adc
hlt
and
and
fsts
in
imul
and
xor
sbb
mov
shll
repz
lret
sub
adc
movsl
pop
xchg
jmp
icebp
jl
cmp
inc
movsb
loop
push
fcoms
imul
ja
mov
mov
out
jo
cmp
out
loop
lret
out
pop
rol
flds
movsb
mov
push
mov
cmpsb
loope
aam
sarb
jns
ja
adc
cmp
in
lock
mov
adc
out
insl
lea
cmp
in
ja
addr16
jmp
mov
push
into
icebp
xchg
out
pusha
stos
int3
jg
cmpsl
pop
ja
roll
outsb
add
imul
rol
stos
cmpsl
or
adc
in
ds
test
bound
scas
adc
pop
or
sub
mov
repz
movsl
sbb
hlt
jb
xlat
jo
sbb
hlt
out
pop
cmc
ja
inc
dec
hlt
pop
das
lret
jmp
scas
mov
out
sub
repz
jecxz
jle
jnp
faddl
mov
lea
mov
sti
in
repz
ret
insb
notb
pop
loope
negb
cmpsb
and
mov
sbb
icebp
ja
xchg
test
xchg
aad
fdivrl
adcl
mov
or
pop
dec
xchg
fistps
sahf
cmpsl
out
and
jnp
loope
mov
test
lret
enter
scas
in
fs
imul
dec
sbb
insl
and
lret
fidivs
jae
sarb
call
jbe
aad
jmp
mov
add
pusha
gs
push
es
xchg
loope
jae
xchg
in
adc
call
adc
mov
dec
icebp
push
sbb
push
loopne
fmul
xor
mov
outsl
dec
dec
ror
mov
imul
das
pop
inc
rol
sub
imul
icebp
xor
fwait
xlat
or
loop
push
scas
stos
sbb
std
sub
gs
jmp
xchg
out
in
dec
sbb
out
cld
pop
arpl
out
pop
inc
add
pop
cmpsl
es
ret
in
cmp
jmp
out
push
sub
mov
jbe
aam
xorl
imul
andb
negl
shl
jle
gs
addr16
inc
sub
jbe
or
jmp
aaa
mov
or
loop
shll
mov
pop
or
sub
cmp
adc
sub
jne
sbb
mov
or
cmp
mov
out
ljmp
pop
fwait
xchg
out
adc
push
sbb
jbe
jge
pop
adc
call
xor
test
ja
stos
loop
rorl
sbb
shr
inc
or
xor
and
inc
je
hlt
cmp
mov
dec
in
sbb
sti
xchg
mov
filds
loopne
xor
aam
insb
call
mov
iret
jns
push
scas
out
pop
mov
mov
cli
jmp
or
add
data16
test
push
push
bnd
aad
dec
push
push
mov
dec
or
test
cmp
loope
in
lret
aam
sub
cmp
mov
aaa
popf
repnz
jbe
repnz
mov
in
dec
xlat
in
xorl
add
dec
cmc
inc
test
stos
mov
sbb
dec
in
or
cmp
xor
loopw
xchg
lods
repz
dec
jle
iret
mov
mov
mov
stos
add
aas
or
repnz
repnz
mul
out
mov
shll
mov
push
fcomp
andl
jmp
inc
xchg
pop
subl
ja
inc
mov
pop
or
stc
mov
push
and
repz
pop
negb
lret
xchg
cmpsl
pop
stos
xor
xlat
leave
inc
insl
cmc
xchg
dec
jmp
sub
fldcw
and
xor
rolb
lahf
fcompl
pop
sbb
call
aas
call
sub
mov
loopew
mov
inc
cmp
jne
es
jae
lret
sahf
shlb
repnz
add
pop
out
je
aad
xor
insb
dec
add
jne
push
pop
fwait
sub
sbb
shll
cmc
lret
xor
out
fwait
sub
sbb
push
sbb
jmp
imul
fucomi
and
cwtl
icebp
test
icebp
lcall
scas
or
fsub
cmc
popa
mov
hlt
ret
dec
ds
clc
inc
into
jae
fisubl
imul
pop
mov
data16
sbb
gs
icebp
outsl
jns
and
mov
inc
lret
jne
test
mov
test
xor
fldenv
lods
stos
in
mov
push
stos
fwait
or
mov
mov
insl
out
sub
mov
mov
loopne
out
cmp
outsb
jae
cmc
in
int
stos
xchg
sbbl
imul
mov
inc
dec
repz
cmp
sub
mov
lock
movsb
shl
gs
push
mov
xorb
mov
xchg
cmpsl
ret
and
push
popa
pop
loopne
xorl
and
push
mov
je
jne
dec
andl
pop
in
outsl
mov
hlt
push
dec
xlat
hlt
fcoms
pcmpgtb
lock
repz
and
adcb
adc
push
mov
jns
add
cmpsb
mov
xorl
clc
add
outsb
lcall
push
adc
xlat
jne
sbb
shlb
inc
mov
push
xchg
ror
fsubrs
aad
mov
push
movsb
inc
mov
mulb
lret
int3
hlt
repnz
pop
shrl
push
orb
outsl
in
push
xchg
xchg
negb
inc
cmpsl
cwtl
aaa
notb
xor
inc
addr16
jcxz
fildll
add
jb
ret
push
xor
pop
mov
hlt
mov
outsl
xor
test
inc
push
jge
xchg
xor
imul
or
ja
shlb
idivl
ja
out
inc
icebp
enter
mov
icebp
pop
in
jb
dec
out
out
icebp
lahf
pop
out
push
pop
dec
out
jno
adc
ja
add
sub
loopw
mov
andb
je
iret
pop
nop
or
addr16
shl
mov
ja
stc
push
nop
jp
push
icebp
mulb
jne
subb
fbstp
xor
std
xchg
jae
dec
call
out
cmpsl
sbb
push
stos
repz
leave
data16
icebp
push
cmp
outsb
cmp
mov
stc
rclb
xor
sbb
sbb
gs
std
negl
cmp
popa
and
adc
lock
call
outsl
lret
std
fcompl
in
or
jle
xlat
ret
pop
pop
out
mov
mov
xchg
adc
sub
push
hlt
ret
jmp
xlat
mov
add
mov
loopne
ja,pt
xlat
xchg
jmp
xchg
push
insl
fmull
push
fsubrl
jle
ja
xor
dec
or
rolb
aad
jp
sub
icebp
mov
cmpsl
mov
ja
dec
iret
daa
es
repz
mov
fdivp
sub
shll
lret
sub
xor
jbe
xchg
jne
add
adc
inc
xchg
outsl
mov
pop
fs
mov
and
push
sbb
ret
sub
sub
mov
push
testb
fisttpll
mov
sbb
std
divl
add
repz
and
mov
aam
mov
pop
pushf
arpl
fs
xor
pop
pop
jl
out
loope
nop
cmp
pop
not
inc
xlat
and
out
jmp
aam
push
orl
inc
negb
dec
cmc
test
cmp
cmc
testl
into
imul
adc
out
sbb
and
je
and
push
int
icebp
fcmovnu
in
mov
or
jbe
js
add
andb
out
mov
xchg
repz
push
xor
ljmp
pop
pop
ja
sbb
iret
inc
adcl
divl
out
adc
ja
enter
inc
mov
repz
mov
icebp
push
xor
sbb
mov
in
mov
push
sbb
or
iret
pop
inc
es
push
xor
cs
ja
shll
hlt
pusha
xor
pop
jp
popa
in
sub
mov
push
push
or
jae
mov
mov
xchg
dec
pop
pop
jle
out
adcb
outsl
xchg
test
outsl
dec
aad
out
mov
push
xchg
xchg
repz
int3
lock
icebp
cltd
jmp
xchg
mov
pop
pusha
jb
je
or
fs
mov
pop
rorb
sub
and
lea
adc
ss
stos
shll
ja
jmp
pop
out
imul
pop
xchg
mov
test
lret
cmpsl
mov
add
stos
arpl
jge
aaa
mov
icebp
xchg
sbb
xlat
mov
cli
adc
repnz
ss
adc
mov
rcrb
or
popa
adc
push
xchg
bound
out
mov
ljmp
out
cmpsl
mov
pusha
xlat
sahf
or
pop
icebp
jmp
sbb
imul
les
cmc
jecxz
cmp
pop
in
adc
cmc
push
insl
in
mov
imul
aam
repnz
jne
jne
scas
insb
jl
ja
mov
stos
sti
mull
aaa
jp
out
ljmp
outsl
out
leave
repnz
cmc
loop
xor
jo
and
loope
out
mov
repnz
outsb
pop
jmp
out
filds
repz
loop
push
adc
cmpsl
push
iret
pop
sub
dec
jmp
outsl
test
cli
and
out
mov
loope
in
ja
cltd
dec
cmp
jno
out
addr16
jne
call
push
jne
xchg
test
inc
cmp
adc
xchg
je
aad
lret
mov
stos
cmp
mov
xor
cmpsl
lahf
inc
cli
repz
mov
xchg
and
ficoms
notl
ja
pop
mov
cld
fdivl
pop
fdivs
sub
in
add
xchg
lahf
fwait
xchg
je
sbb
ja
fsubrl
cli
aas
out
in
out
add
outsl
stos
mov
icebp
roll
pop
mov
sub
ljmp
xor
mov
push
jmp
fs
push
mov
xor
ret
imul
out
add
xchg
push
inc
aaa
cltd
xchg
push
pop
and
ss
jne
pop
loope
cltd
das
out
in
icebp
into
mov
loopne
stos
out
jl
insb
jo
xorl
jno
outsl
mov
loop
xchg
flds
jbe
push
pop
adc
adc
cld
pop
sub
repz
inc
test
push
addr16
pop
fmul
pop
lods
test
repz
lahf
cmpsb
mov
jae
sbb
pop
xlat
xor
rcrl
and
mov
jbe
xchg
ja
fbstp
jae
fists
pop
cmpsl
sbb
xchg
rcrl
adc
or
mov
into
push
insb
loope
mulb
dec
pop
xchg
fcoml
mov
imul
adc
mov
and
pop
adc
mov
cld
call
jbe
xor
mov
cltd
fsubl
push
push
out
jae
imul
and
lret
jl
mov
add
and
dec
hlt
filds
jbe
test
aam
hlt
jl
dec
fadd
jmp
in
mov
cmc
xor
fdivrs
dec
jns
jmp
adc
xchg
sub
outsl
jae
hlt
dec
cmp
xlat
dec
sub
es
xchg
icebp
dec
sbb
push
out
in
in
idivb
xchg
cmpsl
push
mov
mov
test
or
aad
jb
xchg
nop
mov
hlt
insb
out
ss
sahf
mov
fistps
push
fisubs
mov
mov
sbb
ja
aaa
shll
sub
cmc
in
push
testl
fisttpl
aas
xor
je
rclb
shll
aas
mov
mov
in
jbe
push
add
or
in
rcrl
mov
mov
aas
hlt
cmp
mov
fbstp
cmp
push
mov
movsl
loop
in
jb
rcll
add
repz
sbb
out
je
dec
pop
into
mov
mov
out
int3
in
sbb
aaa
push
out
ljmp
pop
out
bnd
jmp
add
out
sub
xchg
out
adc
inc
lret
fldcw
out
arpl
aam
in
test
xchg
aaa
lods
and
popa
mov
xor
das
adc
mov
fdiv
into
jnp
or
stc
clc
icebp
addr16
mov
cmp
icebp
mov
dec
xchg
dec
dec
std
in
aad
cmp
xchg
fidivrl
fucomp
dec
loope
sarb
jno
jge
cmp
outsl
iret
cmp
in
adc
rep
sbb
xchg
loop
hlt
cmpsl
push
xorb
in
xchg
jae
mov
aad
outsl
pop
sbb
or
pop
sarb
jae
ja
dec
fisubrl
jns
push
cmpsl
pop
and
insl
outsl
out
sub
data16
jae
ja
push
jle
dec
cmc
push
sub
stos
xchg
icebp
lock
jbe
jb
cmp
rorl
clc
cmc
outsb
lret
dec
dec
aad
inc
pusha
fabs
and
aad
pop
or
jge
mulb
fdivrp
mov
dec
xchg
sbb
repz
inc
xor
jno
mov
dec
mov
jecxz
lret
push
xchg
icebp
iret
aaa
stc
xor
inc
iret
ret
adc
hlt
or
shrl
bound
arpl
pop
pop
hlt
aad
stos
mov
lahf
push
mov
cmc
and
sub
repnz
lds
push
aad
xchg
stos
mov
mulb
iret
xor
and
jmp
int
push
jmp
mov
in
or
pusha
add
cmp
mov
jne
pop
in
cs
mov
jmp
push
out
jne
mov
xchg
rorb
xchg
pop
psubsb
loope
push
fnstenv
push
mov
in
ljmp
adc
xor
inc
and
loopne
hlt
dec
rcl
cmp
dec
or
mov
jbe
icebp
jae
jg
outsl
imul
lods
xchg
nop
xchg
push
dec
push
in
dec
out
sub
enter
sahf
hlt
sub
xchg
mov
fs
aaa
aam
ret
in
xlat
lods
push
mov
mov
xchg
push
arpl
sub
fistl
incb
mov
pushf
jo
xrelease
inc
jmp
xlat
jae
push
sub
fistpll
add
lds
movsl
daa
stos
outsl
or
out
ret
adc
dec
jbe
push
fnstsw
out
scas
mov
notb
pop
and
in
ja
loopne
add
lock
sbb
clc
hlt
or
stos
call
in
sbb
scas
inc
lds
mov
lods
lret
cmpsb
fstps
push
cmc
fstl
stos
mov
gs
jbe
xor
lds
rol
lahf
popa
jbe
cld
dec
enter
or
pop
jmp
aam
fsubrs
scas
push
lret
outsl
rol
hlt
sbb
ljmp
sub
inc
popa
aam
xor
aam
jb
cmp
daa
leave
divl
ret
pop
adc
repz
imulb
mov
out
jmp
int
jmp
mov
out
sbb
adc
and
je
dec
push
out
fs
sub
in
mov
push
xchg
out
jmp
push
push
insl
repz
adc
pop
xor
filds
xchg
push
scas
add
in
inc
xlat
xchg
iret
stc
inc
repz
icebp
xor
jb
sub
or
pop
lret
jg
je
pmaddwd
data16
adc
push
test
dec
in
xor
imul
jae
lea
shlb
jmp
test
jecxz
shll
sbb
inc
jecxz
repz
adc
and
outsl
xor
imul
pop
ja
push
mov
test
pop
sbb
repz
lret
xor
popf
fdivl
and
or
pop
mov
cmc
hlt
xchg
clc
pop
sbb
into
test
pop
scas
out
outsb
push
mov
loope
aad
mov
ja
and
insb
inc
outsl
ja
das
mov
mov
scas
pop
add
jno
pop
divb
cmpsl
sub
fs
vpmulhw
in
leave
in
mov
push
lock
pause
scas
mov
pop
loope
add
out
jmp
pop
jae
pop
pop
in
insl
in
lds
xor
addr16
mov
cltd
test
or
fnstenv
test
test
jmp
jmp
mov
bnd
sub
and
movsb
out
in
test
jp
mov
testb
call
in
sbb
sti
call
lds
jmp
dec
cmc
stos
cwtl
hlt
in
sbb
idivb
cs
inc
sub
mov
testl
push
in
fs
ficomps
aad
jne
aaa
pop
inc
mov
fsts
push
mov
xchg
mov
cli
and
push
fdivs
cmp
imul
pop
adc
fstps
and
push
icebp
push
cmpsb
aam
pop
insb
call
xchg
hlt
lds
dec
jne
xor
shr
out
insl
fldcw
sub
push
test
outsb
scas
cltd
dec
sub
push
hlt
pop
outsl
in
and
and
in
and
in
push
jmp
jne
push
xchg
popa
xchg
xchg
loope
cld
negb
mov
xlat
ljmp
repnz
ss
dec
rorb
icebp
int3
or
xchg
jmp
stc
outsl
xchg
in
xchg
aam
dec
in
int
lods
cmc
pop
fmuls
jp
pop
addr16
xchg
xchg
sbb
arpl
addb
adc
push
loop
fwait
hlt
push
and
jns
icebp
push
jmp
repz
mov
mov
push
ja
cld
rcrb
scas
fmuls
sbb
insb
and
mov
popf
jp
xor
jecxz
in
push
repz
outsl
cwtl
js
out
scas
daa
push
jecxz
scas
rcrl
xor
imul
out
jl
icebp
in
ss
addr16
imull
das
cmpsl
es
add
mov
out
jmp
mov
loopne
lods
and
insl
pop
mov
inc
fstl
jne
sbb
repnz
fs
stos
sbb
push
outsb
loopne
popf
nop
or
cli
mov
hlt
dec
or
and
add
filds
xor
cli
loop
push
cmp
xlat
jp
mov
push
in
cmpsb
lret
jmp
in
fnstcw
out
xchg
icebp
sbb
cld
std
sub
in
inc
jecxz
enter
mov
ret
out
aaa
inc
addr16
mov
dec
cltd
int
jbe
aaa
out
pop
xor
or
mov
imulb
jb
or
sbb
push
mov
sub
popf
loop
and
adc
mov
push
dec
hlt
push
movl
add
jmp
mov
push
shl
ficoms
fsts
outsl
adc
adc
bound
cmc
outsb
inc
cmp
pop
pop
xchg
pop
xchg
iret
push
lods
mov
loope
jg
ret
push
cmp
or
pop
ljmp
cli
loopne
push
int
repnz
mov
jns
and
loope
sub
push
jo
repnz
aaa
hlt
push
pusha
jge
sbb
ja
test
fistl
and
add
rol
xchg
pusha
push
xor
cmp
sub
sub
xchg
shl
addr16
dec
xchg
out
bound
dec
frstor
xchg
shl
ja
out
sti
shll
mov
repz
xor
dec
pop
into
xchg
mov
adc
push
sbbb
negb
mov
xor
sbb
cld
clc
xchg
mov
aad
jnp
cltd
leave
fnsave
pop
and
sub
cmc
in
test
out
ss
and
mov
not
mov
mov
add
pop
mulb
cmp
cltd
out
out
je
push
cmpsb
icebp
xchg
call
out
fdivs
js
cmc
cmp
mov
iret
imul
xor
out
mov
jmp
xchg
bound
lahf
roll
je
or
in
xchg
outsl
decl
adc
and
sub
loopne
aad
mov
xor
pop
fbstp
mov
jns
dec
outsl
popf
scas
out
sub
loop
jno
sub
mov
imul
dec
repz
adc
repz
hlt
sti
psubsb
pop
fimuls
aad
xor
lahf
lods
in
jns
cs
aad
cmc
jecxz
jbe
movsl
in
mov
add
jmp
mov
aaa
aam
cmp
mov
scas
out
loopne
shll
ja
inc
cld
jmp
aaa
test
in
das
lcall
add
jmp
fdiv
jmp
movsl
mov
out
hlt
fs
jo
jns
popa
mov
inc
icebp
repnz
mov
imul
out
insb
jnp
xor
pusha
testb
inc
mov
push
nop
or
cmp
repz
lods
and
addr16
mov
ds
in
gs
in
sbb
loop
xchg
lods
outsl
addr16
cmp
pop
xchg
mov
imulb
loope
or
mov
aaa
mov
rorb
xchg
hlt
lods
cmc
fbstp
dec
mov
adc
xor
pusha
mov
lods
jae
pop
inc
jmp
jae
or
loop
stos
pop
outsl
jmp
and
mov
jne
adc
pop
neg
push
addr16
ja
jecxz
adc
sub
fldl2e
sbb
xor
icebp
jae
adc
test
push
add
pop
mov
andl
loop
pop
mov
dec
jb
test
and
pushf
in
xlat
pop
dec
cmpsl
arpl
outsb
lahf
out
pusha
xchg
jge
enter
push
fs
mov
ss
mov
jne
pop
in
sbb
mov
scas
xor
pop
xor
mov
cmc
imul
lret
push
hlt
jmp
ljmp
add
xor
je
xor
test
jns
frstor
in
push
andb
pop
int
jmp
fst
mov
jo
fildl
push
stos
pop
insb
loop
ret
scas
fwait
mov
dec
jne
cmpsb
out
sub
notb
clc
or
shl
add
pop
hlt
aad
sbb
ja
lods
adc
imul
loop
rolb
imul
fstps
mov
leave
cmpsl
pop
or
and
fucom
fsubl
push
push
adc
jne
push
imul
sbb
xchg
mov
dec
out
fwait
lock
ja
call
jecxz
stc
dec
rcll
jbe
push
push
lahf
aam
dec
cmpsl
sbb
ja
adc
iret
out
test
or
out
xchg
pop
xchg
lret
jecxz
fnstcw
pop
xor
addr16
adc
mov
add
fists
mov
adc
insb
fildll
in
push
psrld
ljmp
xor
pop
fisubrs
in
out
add
int
pop
jnp
or
xlat
ljmp
sbb
jne
xorb
and
jmp
fdivrl
ret
imul
push
cltd
icebp
out
and
mov
je
pusha
cmpsb
int3
loope
jbe
nop
imul
pop
mov
cmp
dec
push
mov
xchg
pop
rcrb
in
and
add
repz
aad
jl
enter
xlat
cmp
jns
neg
push
fwait
out
pop
or
rclb
andb
imul
sub
outsl
jg
mov
sysexit
mov
loopne
lret
repz
movsb
push
lahf
in
pop
das
rep
mov
sub
pop
outsl
mov
call
repz
loopne
mov
mov
sub
popf
jbe
loop
mov
cwtl
mov
pusha
cmpsb
dec
adc
out
push
leave
mov
push
in
xchg
mov
sbb
pusha
push
cmp
push
mov
mov
fwait
jae
outsl
jp
cmp
mov
add
xor
gs
push
hlt
fwait
mov
pop
xchg
repnz
cmpsb
bound
mov
mov
ds
cwtl
out
jno
imul
xor
xchg
push
jb
xor
mov
pusha
inc
push
cmpsl
ss
adcl
cmpsl
jp
xor
cmp
cmc
js
push
pop
rorl
ret
int3
jmp
adc
fdivp
in
int3
xlat
outsl
mov
test
lret
mov
fstps
dec
test
and
leave
repnz
pop
mov
push
sub
loop
jb
iret
xor
stc
test
fistl
push
xor
out
iret
movsb
mov
js
or
divb
data16
fistpll
outsb
data16
fadds
out
outsl
loop
inc
iret
push
xlat
flds
hlt
mov
popa
aaa
push
aaa
sarl
loop
or
sub
pop
inc
and
lds
add
jecxz
es
push
pop
ja
sbb
sub
iret
sarb
mov
lds
imul
sti
push
xchg
hlt
jo
loope
sub
dec
call
jbe
sti
lods
mov
jg
xor
mov
and
hlt
test
shll
mov
mov
lret
pop
jb
adc
bsf
cs
mov
mov
aad
mov
aaa
stos
inc
mov
jbe
sbb
outsl
mov
insl
in
xor
cmc
cmp
mov
in
test
imul
mov
mov
jne
sub
mull
pop
push
icebp
add
sbb
jmp
add
rcrl
and
inc
xchg
hlt
in
xlat
jae
test
int
push
hlt
aad
cmp
xchg
fcmovnu
int
outsl
hlt
repnz
outsl
lock
aam
movsl
push
in
jbe
cmpsl
dec
xlat
jbe
lcall
fldcw
mov
mov
pop
push
outsb
lods
in
mov
push
jbe
mov
icebp
stc
scas
jbe
jb
xor
inc
ficompl
fldenv
mov
rolb
es
push
cmpsl
shl
mov
inc
inc
outsl
int3
pop
hlt
mov
xchg
cmp
push
ljmp
xor
xchg
call
xchg
icebp
xor
inc
neg
inc
sti
rolb
es
data16
sbb
push
jge
or
fsubrl
lret
pop
les
in
and
sub
iret
push
fs
inc
out
fsubr
xor
in
pushl
push
daa
out
mov
jne
or
loop
out
fnstenv
mov
adc
mov
loopne
xor
call
fisubrs
and
mov
cmp
sub
jno
mov
hlt
cmpsl
push
or
inc
xchg
pop
aad
mov
sub
aaa
insb
loop
push
pop
dec
mov
repz
xchg
aas
imul
mov
lds
fbld
mov
mulb
loope
mov
insb
xchg
mov
movsb
sub
iret
push
clc
mov
fisubl
sbb
ss
and
pop
pop
cs
inc
mov
scas
mov
fnsave
fs
popa
xor
and
mov
enter
shlb
ffreep
in
aad
push
shll
cmp
mov
xchg
push
add
jmp
imul
arpl
sub
inc
das
jecxz
mulb
in
insl
addr16
mov
push
sub
mov
ss
sub
sbb
repz
add
fnstsw
inc
mov
vmread
mov
push
aaa
stc
mov
push
fucomip
ja
aaa
inc
mov
adc
and
scas
push
mov
fwait
mov
pop
mov
loop
stc
icebp
imulb
jno
ja
adc
inc
fldcw
in
test
xchg
mov
fdivl
mov
pop
jne
loope
pop
jmp
pop
push
out
jnp
into
xchg
jmp
hlt
in
lahf
aam
aas
call
push
push
arpl
fs
sbb
aaa
jmp
push
ljmp
out
inc
xchg
pop
popf
call
add
push
adc
sbb
mov
mov
fdivl
imull
cltd
mov
jbe
mov
add
out
icebp
icebp
int
in
sub
repnz
divb
adc
repnz
lock
outsl
adc
fisttpll
xor
xchg
cltd
cmc
mov
pop
iret
cmp
fisubrs
stos
pusha
cmp
xor
sbb
icebp
ja
icebp
out
or
imul
rcll
inc
mull
arpl
out
sub
cmpsb
cmc
and
lret
mov
jae
xor
lahf
ja
stos
inc
out
outsl
add
xor
and
mov
push
xchg
mov
into
or
outsl
cmc
ds
movsb
pop
repnz
jmp
xchg
arpl
in
xor
call
es
popa
imul
lcall
sahf
in
fs
cmc
lret
scas
or
push
cli
cmc
and
fildll
hlt
in
jne
inc
jecxz
sub
lret
fsub
jae
push
fstps
in
adc
fadds
jne
faddp
repz
mov
xor
pop
pop
inc
xchg
add
jb
ja
sahf
push
add
inc
or
repnz
jmp
inc
call
xchg
mov
mov
mov
mov
sub
push
iret
daa
jmp
pop
les
mov
popa
addr16
test
jp
fdivl
cmpb
inc
mov
pop
in
aaa
jae
repnz
fdiv
xor
xacquire
jmp
movsl
pop
cmp
and
ret
aaa
scas
dec
int3
fldz
cs
out
call
inc
fdivl
stos
fisubrs
hlt
popl
jmp
xchg
and
mov
shlb
and
test
iret
in
sub
lea
adc
sub
jg
fldl
and
jbe
fsubr
call
lds
out
and
xor
aas
fldenv
repz
jmp
xchg
mov
outsl
negb
mov
push
xchg
sbb
jecxz
or
adc
in
dec
sub
push
out
mov
adc
fdivs
in
xlat
push
aam
adc
es
test
dec
xchg
hlt
iret
mov
jbe
pushl
in
sbb
inc
cmp
push
sub
sub
cmpsb
sbb
insb
mov
loope
and
mov
xchg
adc
loopew
jmp
and
or
rclb
movsl
xchg
arpl
jmp
push
bsr
xor
push
icebp
adc
inc
stos
sub
pop
in
in
add
dec
xor
or
inc
mov
pop
cmp
scas
push
sar
mov
popa
iret
jecxz
jge
xchg
jne
lret
jne
mov
fisubs
int
test
call
xchg
loope
stos
roll
outsb
adc
xor
jmp
mov
into
clc
xor
div
out
and
sbb
addr16
add
inc
out
push
in
mov
in
push
addr16
pop
lds
outsl
fidivrs
xchg
hlt
test
jno
fists
add
mov
xchg
loop
or
sbb
pop
mov
aam
icebp
xchg
jecxz
fwait
cli
mov
fistpll
jecxz
das
dec
movups
mov
cmp
jecxz
add
imul
iret
fs
outsl
notb
jae
ss
arpl
push
or
and
aaa
sub
cmc
pusha
popa
loope
jg
outsl
jl
pop
or
inc
hlt
dec
inc
lods
cmc
sub
out
test
cmp
sbbb
push
ja
js
in
out
push
pop
mov
xchg
mov
jl
jno
hlt
xchg
addr16
jle
xor
mov
movsb
data16
ljmp
fsubp
or
sbb
fbstp
mov
jae
push
divb
sbb
loopne
loope
sub
ror
hlt
int
mov
call
push
inc
incb
shlb
loop
mov
mov
push
aaa
fbstp
pop
insb
out
mov
sub
pop
nop
lcall
fsubl
jns
outsl
dec
jne
sti
lret
popa
mulb
in
scas
pop
std
shl
repz
test
lahf
jmp
cmp
scas
sbb
insb
mulb
out
mov
ja
ror
lods
or
mov
mov
mov
in
loope
sbb
push
lret
jno
and
or
out
dec
pushf
add
repz
ss
sbb
testl
loope
xchg
outsl
mov
cmc
pop
cld
sahf
or
scas
adc
xchg
aaa
aam
icebp
inc
pop
jmp
jno
jo
cmp
int3
adc
jmp
nopl
mov
pop
and
clc
pop
in
xchg
mov
push
je
push
xor
scas
fcompl
dec
pop
outsb
xchg
mov
adc
cs
jne
aaa
loopne
or
loop
loope
scas
mov
negb
rorb
inc
jg
call
sbb
ret
jmp
xor
dec
pop
es
repnz
hlt
mov
pop
imulb
push
es
lcall
shrb
rcl
xor
call
dec
ret
jne
xor
loope
flds
xorl
jmp
jae
call
push
lahf
icebp
xchg
jo
sub
dec
lret
pop
mov
pop
and
repz
repnz
or
fiaddl
int
outsb
xchg
mov
cmpsl
xchg
mov
es
cmpsb
jg
daa
mov
icebp
fdivrl
inc
xchg
adc
and
fsubs
adc
mov
les
cli
pop
mov
cmpsl
push
inc
xlat
loop
int3
iret
loop
dec
push
jno
aad
pop
scas
mov
push
out
insb
sub
mov
int
lahf
push
jbe
adc
xor
jp
ja
sub
xor
ja
and
scas
icebp
xchg
imul
xor
mov
push
add
pop
jg
adc
loope
ss
dec
dec
insl
cmpsl
and
cmpsb
es
or
in
sbb
sub
in
lock
out
pop
mov
hlt
test
outsl
out
ss
and
loop
lcall
mov
enter
loope
sub
cld
dec
push
sti
lods
in
in
add
je
cmc
sbb
mov
xchg
and
pop
mov
cmovnp
imul
jbe
dec
mov
pop
imul
mov
leave
adc
inc
xlat
xor
aad
xchg
xor
shrb
imul
mov
in
xor
mov
scas
jbe
adc
icebp
subl
hlt
add
lea
repz
xchg
es
dec
fstpl
adc
out
xchg
dec
cmc
xchg
xor
dec
sbb
fwait
or
outsl
mov
mov
js
clc
push
jne
je
pop
dec
stos
in
mov
pop
icebp
ljmp
push
stos
enter
inc
out
repz
or
in
ficoms
scas
gs
neg
mov
hlt
hlt
lock
jnp
icebp
push
jmp
mov
jg
sbb
and
push
repnz
pop
lret
lahf
hlt
xor
pop
jmp
enter
and
fwait
pop
leave
ja
xor
and
xchg
jmp
ja
out
movb
or
out
xor
jp
jbe
sbb
aam
les
push
dec
mov
scas
xchg
add
adc
fidivl
icebp
out
xlat
aas
mov
mov
xor
pop
fstps
int
cmc
jmp
cli
mulb
push
cmpsl
aad
sbb
jmp
xchg
outsl
lock
sub
pop
add
xchg
icebp
jno
mov
out
aad
cmp
scas
jl
popa
push
pop
int
cmpsl
aam
mov
adc
pop
insb
push
mov
aam
hlt
leave
mov
out
mov
fisubrs
add
lret
mov
mov
jns
clc
div
inc
adc
sub
addr16
ds
inc
xlat
lock
pop
jmp
xor
rolb
fwait
jp
mov
sub
loope
cmc
popa
dec
sbb
or
add
int3
addr16
ret
fwait
jno
test
mov
and
push
cmp
aaa
imul
pop
fs
out
pop
xchg
loop
xchg
xlat
jne
ljmp
xchg
call
sub
jle
mov
or
rcll
pushf
jne
mov
push
lret
iret
sub
sbb
mov
fldenv
jne
sub
insl
jge
test
pop
jne
insl
lahf
cs
push
jo
test
out
and
dec
fbld
roll
jbe
jmp
and
addr16
ss
mov
xchg
insl
pop
mov
or
jmp
mov
lds
outsb
loopne
push
addr16
data16
mov
mov
fnstenv
mov
out
cmp
notb
sub
dec
adc
in
orb
mov
in
cmc
dec
mov
inc
scas
xor
and
mov
and
pop
ja
outsb
scas
scas
dec
cmpsl
out
data16
lods
mov
cld
or
aam
xor
pop
loop
push
pop
hlt
loope
scas
mov
jae
inc
pop
movsb
jle
fstps
jbe
aam
js
dec
outsb
or
add
leave
push
in
imulb
pop
sti
dec
inc
xchg
lock
xchg
aam
ss
loope
dec
ret
lcall
push
repz
cmpsb
cmp
repz
xchg
mov
filds
loopne
repz
adc
sbb
jecxz
and
push
lret
adc
enter
dec
sbb
leave
cmpsb
ss
stos
mov
push
mov
lahf
cmpsb
push
call
fucom
xor
or
imul
outsl
mov
ljmp
ffree
push
xchg
pop
addr16
jp
jmp
jbe
dec
sub
call
dec
jmp
out
fs
pop
ficoms
lahf
lock
pop
ja
mov
fisubs
pop
xor
pop
sbb
enter
mov
jno
das
icebp
sub
in
ja
out
lahf
out
jo
ja
dec
sbb
pop
mov
mov
iret
out
pop
pop
lods
mov
inc
notl
cmp
negb
xchg
addr16
je
out
mov
repnz
jb
ss
mov
mov
push
mov
mov
repz
adc
loopne
jns
out
repnz
in
aad
stos
mov
or
aaa
pop
daa
ja
xchg
lods
nop
mov
lcall
and
int
sub
add
icebp
mov
pop
cmpsb
mov
push
sub
test
call
cmpsb
in
leave
hlt
outsl
sub
out
pop
mov
scas
xor
and
xchg
mov
and
and
inc
xor
xchg
mov
ljmp
adc
outsl
xor
push
insl
pop
and
dec
divl
sbb
out
stos
add
outsl
testb
jecxz
ret
push
mov
filds
in
pop
in
cmpsl
xor
je
outsl
and
into
inc
xor
jecxz
shrl
sbb
imul
test
pop
loopne
and
jbe
negb
push
popa
insl
cmpsl
fisubrl
and
fptan
mov
push
test
or
xchg
fs
pop
sub
sub
ja
push
bswap
add
loop
add
lock
mov
xlat
jae
into
mov
ret
xor
sti
jle
push
xchg
fildll
ja
sub
iret
inc
xchg
rcrb
xor
int
xor
pop
mov
cmc
mov
ds
mov
push
xor
push
stos
pop
in
cmp
out
push
mov
repnz
loop
jno
adc
jae
push
in
sbb
cmc
fs
mov
sub
xor
jl
aas
out
pop
cmpsb
ljmp
loop
cmp
jo
xor
mov
dec
out
mov
add
pop
sbb
repz
xchg
and
push
fmull
out
test
jo
cltd
inc
lret
xor
jne
xchg
div
cld
ss
mov
pop
or
imulb
lods
dec
in
sbb
or
mov
xchg
loop
xor
pop
out
lock
les
add
or
pop
jne
mov
aaa
popf
pushf
sub
hlt
mov
fcompl
lods
mov
cwtl
sbb
repz
in
icebp
mov
jns
neg
ljmp
bound
mov
dec
popa
shl
faddl
dec
cmp
jno
in
adcl
sub
mov
rcl
imul
call
xor
add
and
sbb
fucomi
push
mov
sbb
ret
cltd
lock
scas
rorl
jle
xor
loop
jl
inc
ja
push
jae
sub
jbe
and
jno
mov
pop
hlt
cmp
xor
add
popf
mov
add
pop
pop
sahf
outsl
popa
dec
xchg
mov
out
sahf
cmp
fistpll
adcb
cmpsl
pop
mov
data16
push
aam
mov
inc
mov
or
out
mov
sbb
repnz
popf
negb
ljmp
pop
fbstp
pop
xor
pop
popa
or
das
mov
dec
pop
insb
cmc
mov
fsubr
scas
rcr
pop
clc
aaa
mov
icebp
pop
pushf
aam
fldenv
pop
cmc
fistpl
aad
push
xchg
je
pop
sub
lcall
inc
or
jb
test
mov
jbe
cmp
cmp
jo
mov
xchg
enter
mov
mov
cmpsl
mov
iret
repz
imul
mov
loop
sub
lret
insl
sbb
test
aas
aaa
arpl
rcr
cwtl
xchg
and
je
push
outsl
push
test
lret
in
jb
loope
sbb
daa
hlt
push
sbb
add
fists
mov
gs
jne
mov
mov
call
xor
xchg
mov
rcl
xlat
push
and
testl
xor
icebp
cmc
shrl
loop
mov
imul
mov
shlb
push
ud1
pop
dec
xchg
xorb
jns
lret
shl
xor
cltd
sub
ja
fs
data16
icebp
inc
pop
fmull
sub
aam
mov
jmp
aam
popf
shlb
leave
pop
mov
and
gs
cli
sub
ret
xchg
inc
xchg
pop
mov
jbe
lock
mov
pop
lds
imul
out
push
mov
cmpsl
outsb
add
xchg
loopne
jecxz
std
xchg
xor
push
jnp
out
inc
leave
hlt
jmp
dec
addr16
out
xchg
rorl
icebp
xchg
xchg
jo
popa
jbe
scas
aam
xchg
clc
stos
adc
addr16
mov
scas
jno
ja
out
jne
or
je
mov
aaa
cmp
pop
loope
fwait
jge
jbe
mov
mov
mov
mov
jae
fnstenv
push
ja
fs
adc
imull
call
fidivl
mov
les
in
mov
ss
cmp
test
sub
push
insl
nop
in
out
outsb
inc
mov
hlt
out
sub
cmp
mov
sti
in
or
ss
mov
xchg
shll
data16
inc
outsl
pop
pop
and
or
mov
sbb
out
shl
aad
stc
mov
aad
loopne
fists
insl
inc
fcoml
addr16
cmc
cmpsl
sub
ljmp
push
dec
jnp
jo
test
ja
fdivrs
xlat
or
jo
and
mov
call
adc
in
test
mov
test
pop
mov
aas
repz
adc
pusha
xchg
pushf
mov
inc
stos
jae
loopne
lods
lahf
ja
scas
mov
ja
adc
jmp
and
out
xchg
icebp
out
jmp
mov
pop
dec
sbb
mov
adc
push
and
movsl
cmp
mov
jmp
add
aaa
inc
add
fldcw
outsl
push
outsl
in
fidivrs
mov
lods
cmpsl
pop
scas
and
rorl
ficomps
rcr
fistpl
rcll
fldenv
test
ja
adc
iret
xor
cld
lods
imul
movsb
aam
jb
mov
faddl
and
mov
push
mov
mov
stos
dec
pop
fstpl
cmc
pushl
pop
hlt
xor
mov
cmc
add
in
jne
push
je
jp
push
or
mov
in
pop
sub
imulb
xchg
lods
scas
cmp
hlt
xchg
aas
jne
and
add
inc
outsb
lock
mov
imul
xchg
pop
xchg
xor
pop
xchg
je
push
mov
or
call
jb
lret
pop
push
insb
out
popa
fiaddl
lods
and
pop
mov
call
lds
inc
jp
sub
divl
mov
sub
cmc
cltd
icebp
mov
imul
loop
rolb
mov
mov
cltd
cmp
jbe
xchg
adc
rol
xor
cmpsl
movsl
adc
cmp
loopne
sub
push
push
lahf
loop
jl
xchg
pop
xchg
inc
xchg
in
enter
sub
and
jmp
sub
outsb
shlb
pop
xlat
mov
jmp
aam
repz
test
cmp
popaw
xchg
inc
push
in
pop
add
fmuls
mov
sub
insb
call
in
or
mov
lret
xor
aam
jge
int3
cmp
mov
inc
cmpsb
outsl
lds
test
icebp
mov
imul
mov
cmp
ret
xchg
adc
push
mov
setbe
dec
mov
jae
call
test
call
jbe
push
jmp
mov
lret
xchg
xor
and
push
dec
fidivs
xchg
shrl
outsl
cs
add
scas
pop
jge
sub
mov
jmp
shll
outsl
mov
mov
sub
cmp
mov
add
test
shr
repz
cmpsl
lods
or
loop
outsl
out
pop
loopne
loopne
push
push
or
aaa
cltd
cli
shrb
icebp
hlt
add
ds
ret
push
jb
add
rcrb
xchg
add
icebp
jns
out
jmp
adc
aad
je
aaa
xor
cmpsl
hlt
aad
ret
jmp
clc
cmpsl
outsl
orl
add
xor
imul
ljmp
jne
out
aaa
cmp
and
test
call
mov
cmc
ret
fs
cmp
in
mov
fcmovnbe
jae
popf
dec
xchg
out
and
adcb
sti
das
loopne
fs
add
cmpsl
mov
test
ret
and
fcmovu
cmc
out
in
jecxz
sbb
jecxz
sub
push
fldenv
sbb
andl
out
pop
ja
daa
out
ret
mov
xchg
stc
and
inc
shrl
push
jg
loop
cmp
cmpsl
sub
cltd
push
repz
cmp
mov
lock
xchg
aas
push
jbe
int3
or
and
and
push
aaa
mov
rolb
pusha
dec
pop
in
data16
fldt
add
mov
push
repz
arpl
add
mull
clc
movsl
lret
push
fisubl
cmp
aad
xor
aaa
sarl
add
aad
mov
imul
mov
test
mov
cltd
push
repz
cli
dec
jmp
cmp
mov
lret
jl
out
call
xlat
out
cmp
xor
pop
push
rolb
repz
push
loopne
filds
test
arpl
cmpsb
repnz
mov
insl
call
jmp
clc
imul
mov
aad
test
aaa
ret
jae
mov
aad
loopne
xchg
cltd
and
out
loope
rcrl
adc
repz
insb
fs
mov
addr16
mov
and
fnclex
lock
nop
shll
xchg
in
cwtl
sbb
repz
xchg
adc
add
jo
dec
fsubr
lcall
call
cmp
fdivrs
hlt
fs
jmp
icebp
add
sbb
xor
outsl
mov
xor
icebp
mov
or
mov
lock
pop
aad
cmpsl
sbb
jne
lcall
cmpsb
loopne
cltd
xchg
cmc
inc
cmp
add
fisttps
push
jmp
aam
lock
xchg
pusha
out
fucom
and
adc
icebp
xor
cmp
mov
sahf
mov
fisttps
out
stos
icebp
cmp
in
jge
scas
stos
pusha
imulb
xor
cmp
out
xor
repz
inc
xchg
adc
hlt
cmpsb
push
repz
inc
enter
cmp
out
call
mov
xchg
pop
dec
jmp
pop
jo
sbb
push
adc
pop
xchg
mov
rorl
sub
adc
push
cmc
movsb
and
sub
pop
inc
xchg
or
cli
cmc
pop
xor
lods
dec
jb
ja
or
adc
mulb
sub
pop
lahf
hlt
stos
lahf
and
ljmp
test
test
std
mov
pop
insl
test
cmp
in
fisttps
cmp
dec
stc
adc
jp
pop
inc
sbb
mov
xor
pop
imul
jmp
daa
and
mov
mov
stos
jmp
subl
lret
loope
sub
pop
adc
mov
lret
adc
mov
inc
xor
sub
inc
sbb
and
in
cmp
testb
out
call
jbe
les
pop
jb
lds
std
fcoml
xchg
dec
out
cltd
xchg
sbbb
ss
xlat
fisttps
pop
mov
cmpsb
stos
into
adc
das
enter
shrb
sahf
aam
add
in
cmp
or
dec
jmp
pop
xor
insb
aam
jo
cmp
pop
adcb
fucom
mov
push
cmp
mov
or
pop
jns
divb
lcall
das
xlat
sub
jmp
and
xchg
fs
sub
imul
movsb
mov
sub
scas
fldcw
test
ljmp
lahf
insl
addr16
call
fldenv
cmp
shll
adc
sbb
pop
jg
mov
sbbb
es
xor
jbe
scas
cmp
push
mov
pop
mov
mov
hlt
push
stc
xchg
and
aaa
aam
stos
insb
outsb
jmp
pop
outsl
jle
hlt
in
inc
hlt
rcll
jl
xor
mov
jbe
and
add
cmpsl
xor
jp
fsts
shll
dec
imul
and
movsl
jg
pop
sub
xor
and
out
movb
xchg
mulb
jb
fwait
xchg
jno
pop
ja
mov
push
popa
sbb
xchg
push
out
jnp
insb
cmp
xchg
loop
jae
daa
out
ss
fisttps
pop
jb
pusha
mov
jbe
add
xchg
hlt
push
inc
cli
in
mov
pop
ret
inc
negl
icebp
mov
shl
mov
outsl
cmp
iret
out
and
mov
scas
mov
aad
fcoml
cmpsl
fildll
pop
out
sbb
mov
addr16
xor
icebp
pushf
and
sbb
and
leave
pusha
mov
cld
push
hlt
or
in
sbb
mov
icebp
mov
sti
push
adc
sahf
xlat
in
xchg
adc
pop
sub
add
in
out
mov
cmpsl
inc
jns
in
xlat
or
cmc
pop
out
in
dec
icebp
sbb
ss
pop
loopne
adc
mov
xchg
push
in
imul
imul
jns
outsl
ljmp
divb
xor
mul
push
pop
das
cmpsl
mov
test
or
pop
jmp
xor
int
lahf
enter
sbb
jae
cld
lods
out
loop
xor
jmp
loop
nop
out
jp
sbb
mov
inc
xor
mov
xor
jb
push
bound
in
mov
inc
mov
loopne
test
and
aad
dec
jo
test
fs
jbe
mov
xor
fsubl
mov
adc
pushl
sbb
int
std
lods
dec
icebp
pop
push
sbb
repz
out
dec
mov
pop
add
mov
pop
jg
hlt
leave
mov
ret
popa
nop
mov
out
repnz
cli
mov
sbb
inc
or
fs
xor
data16
xor
ror
iret
fldenv
fildll
femms
mov
jne
dec
mov
add
ja
rcrb
adc
mov
cs
aad
add
cwtl
fnstcw
sub
clc
cmp
ja
ror
out
pop
aaa
repz
aam
movsl
out
cmp
mov
gs
jmp
xchg
test
add
sub
incb
mov
into
out
arpl
mov
jne
cs
jo
mov
test
jae
pop
imul
movsb
incb
pop
inc
sti
int3
out
mov
add
xchg
or
xchg
call
fistps
mov
mov
xor
iret
fsubp
sub
rcll
loopne
mov
mov
cmp
sbb
pop
push
call
xorb
adc
mov
insl
icebp
mov
jo
out
ss
push
fstpt
jecxz
enter
out
aam
cmc
mov
gs
xor
ja
xor
add
mov
arpl
pushf
mov
lds
mov
pop
mov
call
repnz
or
outsl
lds
in
mulb
es
add
imul
sub
mov
aas
pop
shlb
out
cmpsb
jne
jp
hlt
xchg
popf
dec
pop
mov
aad
pop
call
call
enter
sbb
shrb
sub
add
in
mov
pushf
stos
push
rorl
je
sti
and
cli
fildll
fnstenv
xor
mov
mov
mov
xchg
jmp
stc
repz
adc
and
lock
sbb
bound
outsb
mov
insl
sub
jne
popa
xchg
mov
ret
addr16
inc
fwait
out
ss
adc
jmp
push
inc
cmpsl
je
es
mov
loopne
cli
cmc
data16
lret
nop
fsubr
adc
push
xchg
cmp
ret
in
push
xchg
jo
mov
std
out
loopne
mov
or
add
pop
aaa
push
iret
mov
call
ljmp
push
xor
pop
into
lods
movsb
mov
mov
cmp
gs
out
push
aam
lcall
lahf
fbld
sbb
loopne
flds
inc
mov
repz
decb
xchg
and
lret
cltd
rclb
addr16
mov
aad
push
sysret
sub
ret
or
mov
xchg
ret
lcall
stos
add
and
leave
mov
iret
pop
out
xor
loope
out
and
ljmp
xor
adc
cmp
lret
sub
or
inc
xchg
enter
aaa
pop
pusha
scas
cmp
xorl
rorb
cmc
cltd
in
sub
mov
aad
movsl
jo
ja
ss
or
mov
jmp
jo
in
xchg
push
rcr
dec
push
mov
dec
adc
cmp
arpl
jne
pop
push
xor
mov
adc
arpl
inc
sahf
clc
adc
mov
jbe
enter
sbb
outsb
fbstp
bound
cs
gs
or
cli
fsts
in
cs
xchg
push
push
xor
and
mov
jle
jmp
jecxz
shrl
mov
call
enter
push
adc
fucom
xor
aad
push
imul
mov
outsl
cmc
jmp
ret
push
ss
mov
or
rolb
mov
mov
pushf
xchg
lahf
icebp
daa
fucomip
sarl
fwait
mov
shll
jne
cmpsl
into
out
mov
jno
jb
push
sbb
hlt
js
mov
cmpsl
jmp
inc
and
mov
push
lods
mov
ds
adc
adc
xlat
or
cmc
mov
push
out
test
xor
mov
jge
jmp
sub
call
mov
cli
push
or
mov
popa
notb
hlt
aas
lods
int
pop
jno
push
pop
xchg
sbb
jmp
mov
xor
xchg
sbb
mov
popa
xchg
out
jmp
jbe
call
mov
and
xlat
adc
or
cltd
xor
lods
fxtract
aam
adc
xchg
mov
data16
mov
lahf
icebp
adc
xchg
mov
jl
add
mov
mov
add
mov
mov
fwait
int
inc
xlat
jne
cmpsb
ss
ja
pushf
out
pop
push
xlat
jmp
xor
mov
fdivp
cmpsb
pop
fcoml
bnd
sahf
fsub
fistps
outsl
sub
icebp
cmp
mov
fs
outsb
add
loop
and
mov
jbe
stos
ret
cmp
cmc
jmp
sub
aam
and
icebp
mov
mov
xchg
lret
hlt
test
pop
outsl
repz
int
pop
fdiv
outsb
out
add
or
pushf
mov
pop
rcrb
rorl
lds
mov
push
xor
sti
lds
fbstp
sbb
stos
adc
push
add
scas
xchg
mov
imul
dec
je
jle
cs
imul
mov
das
out
xchg
jno
insl
call
out
pushl
aad
test
call
fcmovu
aaa
adc
fs
sbb
cmc
ja
push
out
outsl
sub
mov
jo
jmp
mov
shlb
loop
imul
and
imul
out
cltd
icebp
scas
pop
pusha
push
xchg
mov
fistps
out
and
paddsw
les
leave
test
bnd
fwait
mov
cmpsl
pop
fst
xor
repz
js
adc
pop
add
jmp
add
outsl
addr16
inc
lret
popa
in
sarl
adc
and
push
movsb
imul
adc
pop
pop
dec
iret
mov
call
in
and
jne
pop
fdivrs
out
iret
out
stos
push
dec
xchg
sti
mov
adc
sub
adc
jbe
out
add
adc
in
cmp
in
jne
xchg
cmp
push
leave
negb
and
push
outsl
and
leave
in
sub
repz
out
pop
pop
in
aad
dec
push
jecxz
pushf
imul
out
fiadds
ret
movsb
je
shrb
aas
dec
lock
out
cmp
clc
push
ja
xor
loope
and
xor
sarl
ljmp
out
imul
stos
or
icebp
js
ljmp
mov
adc
add
outsb
mov
out
lret
xchg
sub
and
in
jbe
mov
push
lcall
dec
jecxz
popa
push
outsl
dec
and
adc
pop
imulb
or
imulb
cli
iret
jno
mov
add
loope
stc
jle
ja
xchg
push
mov
mov
push
or
push
xor
aad
in
mov
out
xlat
cmp
gs
cmpsl
mov
mov
sbb
out
popf
bnd
ja
aaa
dec
rcrb
icebp
mulb
insb
and
pop
iret
xchg
xorl
out
in
jo
outsl
lret
mov
push
out
push
ja
cmc
jnp
test
outsb
popa
dec
mov
imul
xchg
mov
in
or
icebp
cld
ret
loop
ljmp
jecxz
dec
dec
dec
insl
mov
ret
xor
out
outsb
rorl
js
xor
lock
fsubrl
in
addr16
sbb
fistl
loopne
shll
aaa
mov
ja
cmpsl
adcb
add
xor
xchg
xor
andl
gs
in
scas
std
pxor
push
repnz
fsubr
sub
aad
je
jae
xchg
call
sub
insl
in
mov
mov
icebp
and
fsubrl
aam
int3
and
addr16
pop
jno
add
out
loope
pop
lcall
push
out
push
call
mov
adc
xlat
fiadds
add
fwait
xchg
inc
add
insb
or
in
adc
sahf
mov
insl
fbstp
cmc
ret
or
or
pop
in
push
sub
mov
add
stos
mov
out
lods
icebp
ja
icebp
mov
jecxz
insl
out
pusha
js
rep
and
jecxz
cwtl
mov
ret
jbe
jno
js
cmp
push
cltd
pusha
push
xchg
mov
cmc
jg
mov
adc
xchg
cltd
out
lret
pushf
outsb
xchg
je
lcall
lods
mov
cs
mul
xchg
xchg
xor
and
lret
cmc
loop
pop
repz
pop
add
adc
push
outsb
pop
out
ljmp
or
adc
push
pushf
mov
or
iret
dec
xchg
or
fmull
mov
sti
outsl
mov
ja
aam
and
xchg
jl
repz
icebp
xchg
dec
pop
xchg
pop
sbb
ja
inc
mov
fdivrl
cmpsl
aam
pop
mov
push
or
jae
and
adc
iret
sub
icebp
shlb
inc
mov
pop
repz
mov
lret
and
aad
pop
in
iret
lret
mov
dec
in
jne
push
mov
push
dec
cltd
lahf
sub
loop
out
inc
pop
lods
or
lcall
jecxz
jns
outsl
xchg
sbbl
fildll
rorb
jl
mov
xor
mov
jmp
out
jnp
inc
and
xor
cmp
push
fistps
mov
xorb
xchg
xchg
mov
jb
push
aad
hlt
int3
ja
in
cwtl
adc
repz
or
jge
push
and
lock
and
insb
lcall
jno
mov
push
hlt
push
push
cwtl
fistps
incb
jo
adc
fs
es
mov
movb
mov
jne
and
addr16
jb
insl
xchg
imul
add
out
popa
xorl
and
daa
in
add
cmp
fucomip
fildll
loop
fdiv
aad
push
lock
dec
add
mov
pop
popf
test
in
imulb
inc
mov
and
push
insb
pop
xchg
sbb
shrl
pusha
dec
je
hlt
ds
les
out
notb
loope
inc
pop
data16
loopne
ljmp
jbe
add
inc
cmc
popa
dec
addr16
fldcw
pusha
pop
lret
scas
push
add
into
scas
pop
xchg
cltd
sbb
into
dec
pop
push
and
adc
inc
xor
dec
addr16
loop
outsl
setnp
inc
mov
fbstp
sti
ljmp
fsubl
jmp
lds
jl
lahf
call
adcl
fisttpll
add
fs
popa
push
xor
ja
adc
pop
iret
repz
sti
loop
das
lret
xor
lods
lock
or
sarb
popa
sbb
inc
mov
push
inc
xor
mov
fisubl
orl
sub
push
cwtl
icebp
les
jb
sbb
mov
jae
sbb
ja
stos
test
fidivl
push
fwait
pmuludq
xor
out
popf
push
cmpsl
xchg
jecxz
sbb
insl
mov
sub
outsl
shll
outsl
push
shl
push
loop
mov
jae
xor
outsb
jo
push
lret
test
cmc
ds
test
rcr
and
ja
jae
ror
jnp
mov
mov
fs
fmull
cmc
loope
lds
dec
js
pusha
in
sub
ljmp
pop
fcomip
jle
ja
adc
jg
fsub
mov
jl
scas
mov
or
cmp
call
call
pusha
imulb
mov
pop
xor
shll
jmp
xlat
call
in
test
aam
test
clc
xlat
loopne
inc
pop
outsb
cmc
loopne
lret
add
loopne
push
jmp
jecxz
pop
push
outsl
dec
ret
push
sub
mov
sbb
sub
xlat
cmp
push
mov
loopne
mov
shl
pop
jo,pn
mov
loop
jne
loopne
pop
aad
mov
mov
js
out
inc
icebp
cli
filds
stc
push
out
sahf
repz
imul
push
and
loop
jae
aad
mov
adc
fs
es
scas
push
mov
mov
lret
shll
pop
jae
inc
add
loop
xlat
sub
adc
ja
push
jnp
scas
mov
pop
dec
loope
xchg
sbb
sbb
popa
and
sub
clc
inc
hlt
lahf
mov
ficoms
lret
pusha
imul
aas
mov
out
xchg
mov
hlt
mov
fbld
pop
insl
ja
lret
test
ljmp
mov
pop
inc
scas
out
repz
sbb
loope
sub
and
ss
dec
bound
fxch
and
xchg
out
out
sar
xchg
or
outsl
aaa
popf
mov
lods
cli
jb
xor
sbb
push
out
out
in
or
in
inc
xor
int
sbb
pop
cs
aas
loop
fcompl
and
adc
outsl
dec
pop
in
testb
out
fmull
jne
inc
xchg
sahf
mov
pop
sub
dec
fs
mov
pop
jbe
repnz
shl
mov
mov
loope
push
push
inc
fisttpll
and
imul
adc
popa
out
loopne
pop
outsl
push
sahf
nop
mov
push
scas
in
in
cltd
out
inc
lret
pop
pop
sub
dec
mov
in
or
xchg
cmc
inc
push
dec
lret
sbb
cmp
cmc
add
int3
mov
xor
fnstenv
mov
clc
jbe
xchg
inc
test
cmp
pop
mov
adc
jbe
test
mov
lds
inc
sub
dec
hlt
test
ficompl
cmp
or
loop
pop
stos
loop
add
loope
xor
iret
test
ds
in
std
loop
scas
pop
push
repz
jle
mov
imul
xor
lret
and
out
icebp
jae
iret
push
rorl
jle,pn
lods
hlt
loop
jb
mov
adc
mov
flds
popa
sbb
mov
push
lock
gs
aad
testb
or
popa
cltd
jbe
int3
mov
dec
jbe
sarb
aam
mov
loope
xor
daa
in
into
shll
and
hlt
lahf
jmp
out
lret
jmp
aam
sti
inc
jmp
pop
mov
out
adc
repz
insl
xlat
outsl
jp
cmc
stos
in
inc
lret
xor
repnz
xchg
out
jle
lea
aam
into
mov
out
sbb
sarb
dec
fs
lds
xchg
sahf
push
xchg
jo
fs
dec
cmc
out
add
ljmp
insb
iret
in
mov
adc
cmpsl
mov
addr16
into
testl
test
imul
xchg
fcoml
jg
shl
call
pop
addr16
lock
hlt
push
pop
insl
hlt
lahf
loope
fsubrl
inc
cs
arpl
pop
subl
scas
fbld
outsb
lret
cmpsl
vmovaps
cmp
cmc
lahf
dec
pop
dec
adc
jl
xchg
aad
je
xchg
ss
pop
fidivl
repz
or
in
shrb
test
outsl
mov
jmp
mov
out
jb
xchg
jmp
xor
insl
cltd
adc
pop
xor
add
in
mov
movsl
fs
cli
or
in
hlt
shrb
xchg
lock
push
jnp
jo
into
cmp
pop
ss
push
cmp
pop
hlt
or
movsb
pop
mov
mov
sbb
mov
pop
inc
cmp
and
dec
fdivl
sub
pop
negb
cmpsl
cmp
les
inc
int3
jmp
cld
sub
out
jae
aad
mov
adcl
pop
ja
push
enter
sub
daa
fld
adc
aam
and
mov
ret
pop
mov
js
add
push
push
and
daa
pop
push
out
repz
mov
adc
xchg
and
mul
jmp
xchg
adc
push
fstpl
jle
outsb
xor
add
xchg
subl
or
sbb
or
gs
xor
sbb
xlat
sbb
orb
mov
push
cmpsl
pop
fdivr
hlt
aad
mov
jnp
mov
loopne
shrl
call
mov
adcl
push
ret
push
ret
xchg
cmp
xchg
inc
add
div
and
outsl
xchg
out
xor
outsb
stc
push
mov
inc
sahf
adc
repz
and
cwtl
icebp
adc
lret
popa
sub
mov
fnstcw
push
push
or
imul
mov
jmp
push
daa
out
pop
mov
out
jo
or
inc
loopne
loope
push
mov
popa
or
lock
aam
popa
insl
push
jmp
xor
movsb
xchg
or
xlat
pop
cmp
leave
cmc
cmc
bound
decl
adc
popa
inc
mov
cmc
mov
ret
pop
sub
jae
sbb
adc
push
icebp
mov
and
ss
mov
or
mov
mov
jno
add
stos
jecxz
adc
nop
jecxz
pop
push
repnz
pop
mov
or
and
add
scas
xlat
xchg
sub
cmc
pop
in
fildll
dec
mov
cmp
fwait
mov
push
hlt
push
and
es
adc
xor
fsubrl
in
mov
loopne
sbb
and
lret
out
daa
xor
push
xor
out
pop
aad
iret
push
hlt
or
out
sub
push
mov
fsubrl
iret
notb
fsubr
imul
mov
or
adc
es
jmp
push
mov
dec
fisubrl
cmpsl
cmp
out
jne
mov
push
push
jo
flds
push
test
lods
idiv
mov
pop
dec
xor
jle
fdivs
call
aad
loopne
xchg
aaa
and
arpl
insl
call
mov
bound
nop
inc
arpl
leave
dec
xor
sub
fldenv
pusha
gs
sbb
mov
fs
or
addr16
lret
sub
xorb
aam
push
std
lods
imul
mov
xchg
jnp
jmp
add
repz
movsb
mov
scas
lahf
jecxz
inc
mov
es
js
inc
xorb
test
lods
cmpl
xor
sbb
lods
fistps
imul
mov
div
jnp
mov
add
roll
xor
mov
into
outsl
jmp
hlt
inc
js
call
dec
mov
push
jno
call
lcall
sbb
mov
into
aaa
cwtl
fimuls
ret
mov
aad
mov
scas
dec
cmp
jb
cs
xor
dec
jne
adc
fs
add
push
xor
mov
in
ljmp
jo
icebp
jp
xor
loop
mov
or
sub
mov
sbb
pusha
cmc
xlat
push
shl
and
add
repz
clc
aad
div
lcall
xorb
pop
sti
mov
hlt
in
out
cmp
sbb
f2xm1
mov
dec
jmp
jmp
jne
ljmp
or
outsl
mov
hlt
xor
fisttps
test
mov
cmpsb
hlt
ret
pop
cmc
repnz
pop
test
arpl
cmpsb
jo
adc
mov
xor
lds
mov
jmp
sbbb
leave
xchg
sbb
xchg
repnz
sub
fstp
cli
xchg
pop
xor
fidivrl
or
loop
lret
mov
pop
fsts
cmp
sbb
push
mov
clc
and
adc
and
repz
jbe
jo
loope
xor
push
pop
inc
dec
push
or
data16
jb
sbb
cmc
cmp
loope
pop
fnstenv
outsl
rorl
repz
jno
movsb
add
in
cmpsb
cmp
insl
ss
pop
dec
pop
addr16
mov
pop
mov
pop
sbb
lret
dec
loop
lret
cmp
ror
fldcw
xchg
cmc
inc
out
mov
mov
add
loop
lret
mov
imul
fsubrs
in
add
js
in
loopne
xor
arpl
add
lret
mov
lret
arpl
repz
mov
ljmp
or
enter
xchg
pop
pop
in
pop
xchg
inc
or
out
subl
push
addr16
cs
out
mulps
not
xchg
push
ja
stc
repnz
jp
and
mov
mov
fsubrs
fbstp
jne
xchg
outsl
popa
adc
outsl
or
jne
xchg
in
neg
aaa
pop
cmpsl
cltd
mov
dec
fcomi
xor
xor
out
cmpsl
lahf
mov
icebp
into
adc
loopne
xchg
out
and
icebp
sub
stos
es
cmp
les
xlat
addr16
int3
aad
and
ds
adc
jecxz
mov
cmp
and
insb
movsl
je
pop
adc
cwtl
out
cmpsb
imul
mov
mov
lock
sub
adc
hlt
inc
sub
and
sbb
iret
ljmp
sbb
lret
cltd
stc
imul
popf
cmp
sbb
iret
mov
ss
dec
inc
adc
push
and
call
fsubl
call
aaa
add
adc
push
and
push
mov
in
dec
shl
or
xor
xor
cmpb
in
add
fdivs
cmp
or
jnp
xchg
and
scas
cmpsl
shll
out
pop
out
testb
push
lret
adc
shrl
ja
outsl
test
jmp
jbe
sbb
ffreep
icebp
sub
rol
test
imul
lea
pop
repz
xorb
fcom
in
jae
shl
bnd
and
fs
xor
jo
hlt
jmp
aam
mov
pop
or
push
mov
pop
addr16
mov
inc
dec
mov
jl
lock
iret
in
mov
or
loop
loope
sub
shlb
inc
into
cld
ja
movsl
popa
pop
pop
aam
enter
ljmp
adc
mov
ret
hlt
aad
lret
sub
loopne
pop
insb
and
out
adc
jne
negb
jge
cmp
shl
fnstenv
bound
cmc
rcll
sbb
and
adc
pop
lock
ja
dec
shrl
negb
js
cmpsl
dec
push
add
roll
xchg
bound
in
adc
dec
xchg
in
mov
xor
xchg
repz
and
inc
xlat
ljmp
lahf
imul
xorb
scas
lods
loop
add
imul
aad
vpackuswb
dec
inc
in
psadbw
hlt
mov
lds
jne
fxam
mov
int3
scas
sub
adc
adc
loop
dec
je
adc
out
mov
gs
or
mov
or
iret
push
mov
ja
xor
cs
ja
lods
test
push
pmulhw
sub
sahf
lock
xorl
sub
mulb
test
pop
popf
add
arpl
mov
fnstenv
or
je
nop
ret
imul
dec
jecxz
mov
iret
ficomps
jp
out
xchg
insl
aas
cs
loop
pop
ljmp
mov
out
mov
lods
mov
fnstenv
mov
imul
inc
xchg
jg
stos
hlt
repnz
loopne
nop
jbe
lea
xor
mov
or
nop
hlt
and
xlat
mov
imul
sbb
or
pop
mov
in
or
shll
repnz
arpl
mov
lea
imul
gs
in
lock
fisubl
je
fistpl
in
out
mov
lock
adc
add
or
daa
popa
dec
iret
dec
clc
es
jmp
cmp
js
sub
mov
cmc
adc
mov
hlt
push
std
cld
mov
jge
inc
mov
test
rcll
and
mov
loope
xlat
in
shlb
test
pop
adc
ja
arpl
jp
push
jle
es
in
dec
dec
out
pop
or
mov
lahf
aam
clc
rorl
in
ret
xor
imul
sbb
xchg
stc
das
or
shlb
inc
xlat
and
sub
add
iret
xlat
mov
sbb
dec
jae
sbb
movsl
dec
pop
sbb
shlb
data16
mov
pop
cmpsl
xor
mov
xchg
pop
lahf
xchg
dec
cmpsl
lds
fnsave
stos
or
repz
mov
pop
rcrl
bnd
xor
jne
push
and
jno
into
popa
icebp
pushf
icebp
arpl
or
out
stc
ja
loope
sbb
outsl
sbb
into
jo
ss
lret
mov
xlat
in
scas
xor
divl
pop
sahf
lret
adc
push
out
inc
cmc
inc
dec
cmc
cmp
lret
sub
jl
jnp
mov
or
cs
loope
mov
scas
in
clc
xor
icebp
xchg
icebp
inc
sbb
into
fwait
outsl
lret
mov
push
jl
hlt
xchg
sub
es
xor
fdivrl
sub
imul
xlat
test
test
cli
jae
ja
in
jo
mov
push
xchg
lods
repz
xchg
aas
fcompl
sbb
movsl
mov
test
xor
sbb
addb
cmp
repz
js
jecxz
and
repz
push
sbb
mov
and
pop
out
jg
mov
pop
pop
xchg
pop
cmc
mov
call
loope
adc
xchg
lock
cld
dec
out
loopne
fmuls
jns
mov
shlb
push
shr
mov
xor
inc
ficompl
out
add
ds
adc
sbb
aad
adc
ja
mov
aad
jne
dec
cwtl
arpl
sub
mov
jge
mov
pop
shl
pop
insl
jnp
out
pop
repz
lahf
and
xchg
mov
imul
pop
je
sbb
ja
jge
iret
out
mov
loopw
cmp
sbb
mov
loop
imul
cmp
xchg
and
fists
xchg
scas
pop
enter
mov
fucomi
mov
add
fs
sbb
sbb
push
adc
adc
sub
jnp
and
mov
cmp
call
adc
bnd
stos
or
notb
repnz
hlt
inc
bound
sub
xor
xor
fs
pop
cmc
cs
in
or
out
js
adc
lock
icebp
cltd
mov
hlt
pop
out
mov
push
pop
xor
rcrl
pusha
or
repz
fs
lahf
loop
stos
mov
ffreep
pop
popa
jecxz
pop
xchg
outsl
nop
sti
xchg
lcall
xchg
repz
push
jmp
push
adc
enter
hlt
xchg
mov
xor
sub
cld
ja
aam
loope
adc
push
xchg
ja
xor
cmp
aad
push
xchg
test
lods
in
fcmovb
push
sbb
lock
aaa
scas
sti
dec
repz
cmpsb
das
andb
mov
dec
dec
push
fsubl
adc
inc
out
in
cltd
in
pandn
mov
rcrb
icebp
mov
out
sub
icebp
out
inc
push
dec
aam
push
xchg
sub
rolb
mov
adc
pop
jmp
aaa
stos
nop
je
jns
xchg
push
fiadds
sub
dec
repnz
fdivl
and
repz
mov
cmp
push
pop
ja
adcl
pop
not
imul
fistl
jl
arpl
push
dec
fisubl
icebp
add
shr
in
adc
loopne
aad
xchg
cmp
iret
pop
push
dec
pop
aaa
and
call
push
push
int3
pop
mov
push
or
repz
out
or
mov
jb
repz
icebp
sbb
push
in
cmp
pop
in
xchg
aam
xchg
fwait
call
sub
jmp
xor
imul
xor
in
sbb
xor
xchg
sub
in
and
icebp
push
out
in
mov
imul
or
insl
dec
mov
dec
cmc
jg
mov
sahf
inc
mov
cmpsl
out
repz
call
xlat
enter
movsl
fsts
fisubrs
aam
in
jmp
adc
sbb
out
and
movsl
and
mov
cmp
loop
lret
outsl
pop
cld
xor
cli
fdiv
imul
pop
arpl
xor
addr16
sub
or
shrb
ja
xchg
decb
push
imul
pop
aaa
sti
mov
fldt
pop
fnstsw
pop
push
rclb
sub
inc
add
rep
je
aas
mov
jnp
loop
andb
adc
dec
inc
pop
out
imul
loope
or
ret
mov
loop
mov
outsl
outsb
jne
adc
pop
rcrb
icebp
push
fwait
fs
negb
pop
stos
xchg
cmpsl
addr16
lods
loopew
and
mov
in
mov
sub
jae
cltd
cmc
idivb
repz
inc
mov
sub
sbb
and
in
pushf
pop
push
mov
insb
jbe
mov
mov
jo
mov
push
mov
enter
jecxz
ja
lret
out
pop
pop
push
addr16
outsb
sahf
insl
scas
mov
movsl
push
pop
cs
out
nop
pushf
adc
out
mov
out
repnz
sub
in
imul
adc
lock
sbb
aad
sbb
jbe
test
pop
aam
jae
xchg
aad
jmp
pop
sbb
lahf
repz
scas
in
loop
cmc
ret
push
repz
mov
mov
lcall
inc
insb
push
mov
out
aas
sti
add
sbb
pop
lock
in
outsl
fs
lock
inc
mov
sub
arpl
xorb
xchg
aad
cmpsl
inc
out
cwtl
mov
pop
xchg
in
insl
jae
sbb
in
lcall
cli
dec
xchg
repnz
ficoml
and
mov
enter
addr16
repz
addr16
data16
jo
fbstp
cmp
ret
lods
jmp
enter
dec
out
addr16
xor
ja
or
int3
xchg
cli
clc
and
jbe
push
push
add
sub
fdivs
pusha
lret
jmp
imul
aad
xor
push
and
fisubrs
jp
push
mov
cwtl
push
sahf
fwait
jns
jno
cmp
outsb
aad
mov
fnstenv
mov
jno
xor
mov
repnz
mov
lods
js
lock
pop
push
outsl
ds
push
loope
jmp
xor
outsl
jb
xchg
test
out
jae
fstpl
aad
in
ja
dec
pushf
push
arpl
sub
dec
loop
mov
les
out
pop
add
mov
aad
sti
sub
jae
rcr
fxch
mov
add
fists
push
es
or
rcr
cmp
out
mov
jg
sbb
andb
sub
and
in
pop
lock
fs
in
and
inc
int
jmp
das
aad
out
test
sti
insb
ja
mov
xchg
je
xlat
pop
inc
ret
int3
cmc
jns
jno
ja
lds
xchg
fdivl
fldenv
jecxz
push
dec
jne
lahf
in
adc
repz
adc
ret
addr16
xor
ret
xor
lock
cmpsl
ja
test
outsb
sbb
out
adc
cmc
mov
adcl
push
fdivr
mov
in
pop
imul
addr16
daa
xor
hlt
aad
or
data16
mov
cmpxchg
in
or
filds
out
ja
cmpsl
jle
inc
inc
iret
outsl
test
cltd
push
sub
dec
xchg
xor
mov
and
adc
in
sbb
and
push
in
out
loop
jae
outsl
int3
out
jae
push
outsl
and
xor
dec
pop
cmpsl
sbb
ret
jb
lahf
test
fmuls
mov
lret
int3
sub
lock
mov
pop
movsl
int3
sbb
hlt
or
fisttps
push
and
jbe
mov
and
sbb
fists
push
mov
sub
mov
dec
in
arpl
out
sahf
mov
xchg
jmp
push
imul
adc
cmp
mov
test
fs
ja
adc
xlat
mov
icebp
idivb
shrd
mov
fcmovnu
dec
mov
sub
dec
sbb
repz
jl
sti
push
lcall
pop
dec
les
jl
cwtl
jb
and
pop
les
cmc
mov
hlt
lret
in
sbb
inc
xor
fsubr
fisttps
jmp
aam
sbb
xor
loop
sub
hlt
rorl
in
ss
sbb
adc
in
mov
cmpsb
sbb
fwait
xor
movq
ja
iret
cmpb
add
adc
cmc
out
and
mov
jbe
aaa
dec
xchg
push
pop
add
jae
insb
nop
inc
imull
push
mov
stos
fdivl
push
mov
or
jp
in
or
imul
arpl
aad
aaa
repz
pop
fcoml
ficomps
xchg
hlt
jle
dec
cmpsl
sbb
inc
cmp
jb
mov
jb
push
movsb
in
mov
push
add
fldenv
repz
into
sub
inc
push
pop
push
xlat
pop
lock
je
jmp
movsb
sti
adc
popa
std
mov
sub
addr16
movsb
out
mov
sbb
pop
and
jb
aad
je
ja
movsl
orb
hlt
or
call
dec
push
sahf
xor
or
jb
sub
add
imul
sahf
aad
mov
jbe
ljmp
ljmp
mov
aaa
jo
dec
cmpsw
pop
jmp
mov
xor
addr16
push
add
or
iret
push
call
push
out
cmpb
mov
jl
mov
loop
sbb
cmpsl
pop
addr16
popa
outsl
dec
xor
xchg
fcmovnu
inc
mov
xor
ds
and
cmpsl
scas
cmp
out
jb
adc
icebp
jae
jge
fldcw
lcall
aad
aam
fimuls
sbb
idivl
jle
inc
inc
fsubs
mov
push
push
icebp
pop
pop
cmp
aad
rclb
loope
ss
inc
mov
popl
and
mov
xor
sbb
test
jb
lea
sub
icebp
push
inc
mov
jmp
aam
push
sub
addr16
testb
mov
mul
mov
jb,pt
dec
mov
sbb
pop
jecxz
test
jecxz
dec
hlt
lret
ds
add
cmc
sbbl
loope
imulb
xchg
loope
aam
jmp
cmc
jne
and
sbb
ja
stos
adc
xchg
bound
mov
mov
xchg
cmp
xchg
fldcw
cltd
fisubs
test
xchg
ja
loopne
dec
iret
xchg
cmpsl
pop
push
out
pop
int
cmp
stos
and
lahf
loope
sbb
jbe
jnp
xor
dec
mov
dec
mov
fwait
out
jb
jae
xor
je
pop
aad
shll
xchg
pop
pop
xor
pusha
lods
in
out
jg
push
es
or
ljmp
popf
out
stc
xchg
push
pop
fnsave
mov
leave
cmp
pop
add
pop
adc
aad
repnz
les
loopne
push
loope
mov
pop
and
push
sub
jp
dec
out
in
xchg
pop
mov
pop
push
repz
dec
stc
popf
mov
int3
mov
jmp
mov
iret
cmp
imul
js
out
pusha
icebp
cld
insl
and
jmp
push
sarl
aas
ljmp
sub
push
jb
sub
mov
mull
aad
mov
xchg
les
repz
jecxz
mov
fldcw
loop
out
nop
mov
leave
pop
xor
lock
les
cmpsl
sbb
orl
lahf
icebp
lcall
jmp
sbb
inc
adc
mov
enter
mulb
dec
fmul
imul
into
ja
hlt
push
pop
push
mov
loopne
call
out
sub
jmp
jo
lock
mov
jecxz
out
repnz
cltd
hlt
xchg
and
enter
push
or
dec
mov
xor
in
lods
aad
aaa
push
push
es
std
stos
outsb
je
jle
mov
test
mov
xlat
push
andl
divb
stc
xor
pop
loopne
imul
nop
inc
fbstp
repnz
mov
aas
inc
out
fnstenv
shrl
adc
cmpsb
aam
mov
push
mov
arpl
outsl
cltd
loop,pt
inc
pop
cmc
in
xor
gs
in
and
scas
xchg
lahf
ss
sti
repz
and
mov
pop
negb
mov
fists
addr16
adc
jle
ja
cmpl
xor
rorl
stos
pop
fs
hlt
adc
mov
testb
int3
sub
sub
out
sarb
dec
out
cld
repnz
jnp
jns
repz
sbb
pop
lret
adc
scas
cwtl
sub
add
mov
inc
faddl
or
inc
jmp
scas
cmpb
fildll
repnz
out
out
scas
int3
out
call
push
or
repz
add
and
pop
gs
divb
scas
add
scas
imul
lea
mov
pandn
cwtl
inc
aaa
dec
cld
inc
das
out
aad
jb
dec
mov
mov
pop
and
lods
pop
jb
ficoml
stc
sub
sahf
in
je
aad
lcall
mov
popf
test
add
xchg
push
je
in
int3
stos
shrb
loope
jnp
xchg
sub
jns
in
jmp
inc
push
clc
lods
and
outsl
mov
push
pop
sub
xor
mov
adc
mov
xchg
outsb
push
mov
gs
sub
mov
sub
fildll
jp
add
dec
push
outsl
int
hlt
jl
es
outsl
push
sbb
fistpll
daa
fs
movsl
ss
mov
hlt
mov
insb
mov
sti
loope
fs
mov
into
push
adc
sub
mov
sbb
xchg
mov
pop
icebp
mov
mov
imul
in
data16
xor
jp
jmp
pop
repz
call
and
scas
fdivl
enter
push
jne
sub
test
enter
imul
inc
xchg
cmpsb
xchg
pop
xlat
push
loopne
xor
icebp
pop
mov
and
push
ja
and
adc
cmpsl
mov
xchg
rep
movsl
push
add
in
in
sbb
ljmp
push
es
ja
cmp
jge
push
cld
int3
aam
fs
dec
xor
je
add
jg
jmp
mov
lcall
push
shr
pop
test
and
hlt
dec
xchg
xchg
cmp
push
fs
jbe
cli
xchg
sbb
icebp
sbb
test
pusha
sti
xchg
sahf
mov
insl
jbe
mov
inc
hlt
sub
xchg
lea
ds
aaa
mov
aad
push
leave
dec
hlt
xchg
stos
lcall
sbbb
lahf
fisttps
leave
adc
dec
shl
cmpsb
cs
jmp
fistpll
or
out
pop
and
icebp
jb
icebp
pop
jae
push
jb
add
lods
bound
fwait
in
dec
popa
inc
xor
ficomps
adc
or
mov
cmpsb
adc
jo
xor
cmpsl
repnz
or
pop
gs
push
lds
or
mov
jmp
shl
lret
or
sbb
imul
jle
int
shl
xlat
sbb
sub
jbe
push
cmpsw
xor
repz
pop
mov
xchg
dec
stc
pushf
push
outsb
popa
leave
aaa
mov
push
addr16
scas
mov
and
sub
gs
jbe
xchg
sbb
ficoms
jecxz
call
fwait
sub
or
ja
dec
push
mov
insb
aaa
hlt
mov
mov
xchg
xlat
fiadds
je
inc
not
dec
stos
dec
mov
popf
repnz
aaa
mov
jg
movsl
loopne
aad
push
leave
push
lea
ja
mov
sahf
int
call
adc
sbb
aaa
add
js
mov
fsubrs
push
xor
dec
pop
mov
xlat
pop
sub
mov
push
adc
mov
sub
ljmp
das
sbb
rcrl
scas
push
mov
bound
dec
pop
add
ljmp
cmp
in
adc
shrb
sub
sub
stos
dec
add
inc
xlat
negb
adc
xchg
stos
push
call
faddl
gs
out
dec
xor
icebp
sbb
or
sbb
mov
push
lret
push
nop
jnp
lret
and
stos
jle
push
xchg
xchg
lahf
jmp
dec
mov
mov
cmp
jbe
or
jo
je
loopne
push
mov
outsl
decb
fdivrs
inc
fsubr
and
int
mov
in
in
mov
jecxz
imul
in
and
pop
sbb
je
mulb
sahf
push
frstor
loop
xor
aam
sbb
movsb
xchg
out
pop
push
mov
out
repz
push
adc
imul
outsb
lret
sub
hlt
pop
scas
lcall
mov
push
jbe
std
in
shl
addb
jmp
jl
dec
out
adc
jecxz
cmp
test
add
cli
or
hlt
sbb
dec
xor
or
loop
int3
pop
out
push
das
out
xor
mov
lods
xchg
loope
mov
pop
mov
add
sub
lods
insl
inc
div
rorb
out
sub
lahf
hlt
jnp
xor
pop
dec
sahf
lret
mov
out
sub
push
push
out
and
add
push
sub
dec
xor
cmc
pop
or
outsb
cmp
rcll
cmpsl
test
mov
pop
fnstcw
jmp
mov
xchg
and
sub
outsl
subl
icebp
xchg
shrb
push
and
sub
aaa
loop
jg
call
pop
jbe
in
mov
mov
push
xchg
xchg
repz
aaa
movsl
imul
push
outsl
xchg
aam
xchg
xor
idivb
cmp
outsb
cmpsb
mov
pop
sbb
push
loop
sar
or
cwtl
rcrl
and
mov
adc
out
sub
jo
cs
bound
dec
xchg
addr16
dec
scas
push
xor
ficompl
jnp
imul
andb
lods
jo
xor
cmc
jne
loop
shrl
icebp
mov
mov
outsl
inc
adc
call
addr16
mov
or
pop
in
adc
testb
cld
jnp
out
inc
xchg
outsl
das
or
xlat
popf
mov
jmp
outsl
ljmp
and
xchg
ret
dec
mov
mov
and
sub
fsubrl
std
or
mov
push
int
arpl
mov
loope
cmpsb
jmp
lret
push
pop
jg
fnstcw
mov
in
push
aam
adc
shl
pop
adc
ja
mov
int3
adc
cmp
std
pop
fldenv
loop
jo
and
in
or
mov
push
fcomi
xorl
add
inc
fsubr
enter
fmuls
jmp
loop
addr16
out
fbstp
lea
mov
cmp
xchg
mov
jns
neg
jge
mov
cltd
add
test
fldenv
div
or
cmpsl
push
xchg
pop
sub
cmp
test
shl
vaesenc
xlat
jae
sub
dec
xchg
test
adc
ficompl
pop
jae
fwait
testb
mov
cwtl
lret
out
mov
dec
popa
mov
hlt
dec
outsb
fcoml
dec
mov
adc
aad
dec
push
out
shl
cmp
and
loop
orb
out
je
jae
dec
fucomi
es
mov
jge
pop
mov
mov
in
repnz
addr16
inc
and
iret
inc
in
shlb
lret
lea
loope
outsl
inc
lret
push
inc
lret
ja
push
scas
js
aad
mov
mov
jmp
push
jb
sub
mov
fldt
call
cwtl
xchg
add
adc
push
mov
sbb
jb
cmc
xchg
add
fstp
xor
call
ficomps
test
ss
test
sbb
jns
icebp
cmp
in
xor
mov
out
mov
xor
push
dec
sti
push
pop
outsl
data16
iret
inc
sub
or
aad
push
xchg
sbb
fdecstp
or
mov
mov
ja
sbb
fnstcw
cld
stc
mov
mov
push
sahf
hlt
sbb
fmul
cld
outsl
mov
push
popa
mov
in
and
stc
lock
inc
mov
xor
in
ja
mov
xchg
fbstp
mov
repnz
lock
repz
mov
loope
call
testb
shll
mov
movsl
sbb
jnp
push
fcomip
mov
cmpsl
cmp
lock
inc
bound
sub
xchg
iret
xchg
adc
adc
scas
incb
scas
sbb
ja
and
cmp
dec
jne
imul
je
jno
test
push
notb
or
cmp
addr16
mov
or
and
xor
inc
jns
aaa
adc
sarb
lret
xchg
hlt
cs
sbb
fs
cs
out
push
mov
adc
insb
push
sbb
outsb
jmp
inc
xchg
test
sbb
pop
mov
lods
hlt
push
add
mov
jle
call
jnp
jno
je
insb
mov
repnz
cs
or
inc
into
fldcw
lahf
icebp
out
adc
push
mov
fstps
add
push
outsl
inc
sbb
xor
push
pop
push
jb
inc
sbb
aas
aam
cmp
pop
dec
mov
loop
cltd
imul
mov
inc
jo
inc
cwtl
repz
xchg
mov
in
lock
loopne
inc
xlat
xchg
rcrb
pop
xlat
xchg
inc
out
jmp
imul
and
repz
in
sub
fcmovne
gs
sub
lret
sbb
popf
adc
dec
sti
push
imul
hlt
sub
push
imul
out
and
fsub
ret
cmc
ds
cmp
jl
xchg
imul
repz
ljmp
lds
stos
lret
icebp
mov
sbb
aaa
mov
outsl
jae
adc
push
fninit
out
mov
dec
call
xrelease
test
into
repnz
sbb
jecxz
cmp
mov
adc
jecxz
and
xchg
shl
sub
js
aam
jne
xchg
imul
push
cli
in
jnp
rorl
ficoml
sbb
dec
shll
les
stos
cltd
ja
out
dec
icebp
out
daa
cmc
jmp
cltd
xchg
mov
in
xor
xchg
cltd
test
call
bnd
jns
pop
mov
dec
xchg
repz
jecxz
pop
stos
outsl
pop
lahf
aam
adc
in
jmp
shl
xlat
add
ficomps
into
movsl
push
adc
testl
in
sub
pop
jl
cmp
pop
out
ja
scas
repz
sti
add
arpl
cld
in
xchg
in
cmp
jmp
xor
or
cmp
adc
fnstcw
dec
or
bound
xchg
mov
out
add
pop
mov
out
out
adc
lret
lods
testl
pop
ret
mov
call
popf
adc
push
negl
push
out
pop
and
sbb
bound
add
lcall
jae
fdiv
cmpsl
pop
cmp
loopne
daa
fbstp
pop
or
hlt
xchg
mov
mov
roll
in
testl
pop
sbb
fldenv
xorb
cli
insb
mov
mov
neg
cmp
mov
imull
test
inc
call
cli
mov
cmc
mov
jno
jnp
adc
pop
leave
pop
mov
inc
pop
add
lock
notl
push
notl
insb
xor
inc
mov
fcomp
dec
iret
lock
scas
idivl
push
in
mul
mov
clc
and
pop
aad
test
xlat
rcrb
enter
stos
pop
mov
add
loope
fdivs
lods
cs
xchg
ret
sbb
xchg
inc
or
sub
das
divb
mov
dec
rcll
test
scas
imul
mull
popa
pusha
xor
cmp
sbb
sub
iret
mov
or
push
mov
mull
pop
bound
xchg
loopne
dec
cmpsb
inc
mov
adc
xchg
add
data16
pop
int3
pusha
imul
fcoms
and
adc
xor
mov
mov
pop
lds
push
cmp
cmp
sahf
push
adc
xorb
pop
or
dec
testl
or
push
sbb
sbb
into
push
rorl
movsl
jbe
xlat
out
in
ds
notl
adc
push
mull
push
sub
xchg
adc
adc
push
pop
sahf
mov
mov
add
sub
jmp
mov
jae
inc
cmp
iret
in
leave
cmp
fldt
addr16
xor
fadds
xchg
ja
out
aam
pop
testl
or
repz
mov
jmp
iret
sarl
iret
pop
jb
popa
jno
push
or
stos
loop
cmp
call
pop
mull
mov
xchg
shl
cli
mov
stos
sub
mov
mov
sbb
neg
mov
adcb
xchg
sub
cmp
lcall
or
inc
lret
or
pusha
jmp
scas
lcall
aaa
outsb
push
aam
div
lcall
or
mov
out
mov
out
ss
lods
testl
xlat
dec
popa
out
mov
xor
sub
clc
cmp
test
dec
idivl
push
rcrb
and
and
mov
incb
mov
pop
push
ret
fistpll
shl
stc
pop
idivl
lods
push
imul
xchg
mov
sbb
jg
inc
negl
mov
adc
out
jnp
inc
inc
pop
shlb
insl
insb
out
xchg
lahf
cmpsb
cli
jne
insb
sti
cmp
hlt
add
or
cmovg
into
testl
sbb
imull
scas
pop
lods
testl
shll
dec
test
lock
mov
imull
lret
and
jns
das
add
out
mov
scas
add
inc
push
loop
push
in
in
notl
cmp
into
test
fs
jecxz
fwait
aaa
idivl
sbb
sub
test
outsb
inc
sahf
pop
mov
jbe
pop
jnp
fmulp
imul
push
loope
test
adc
fistpl
int
xlat
imul
adc
ficompl
jl
ja
cltd
outsb
out
push
push
dec
adc
cmpsb
and
cmp
bound
call
sbb
mov
push
jge
adc
dec
shl
cmc
mov
imull
jo
jb
jg
divl
push
xchg
popf
jle
adc
fldt
arpl
mov
inc
imul
mov
es
add
fwait
xor
cmp
xchg
neg
push
xchg
daa
rcrb
jp
fistps
divl
je
mov
add
mull
notl
in
lret
call
mov
cmp
mov
sub
xor
xchg
or
les
push
adc
jmp
pop
in
xor
test
testl
push
jno
sti
out
ret
push
cmp
pop
notl
hlt
cmp
ja
add
adcl
xor
xor
or
nop
jmp
mov
pop
pop
mov
cld
dec
out
lock
mull
xor
in
test
loope
aad
jnp
and
notl
jo
or
nop
int3
fiaddl
repz
test
pmullw
pop
xchg
je
stos
ss
stc
lea
loope
mov
lret
cs
insl
jns
dec
mov
xchg
shl
mov
test
xor
or
push
div
aad
xchg
mov
sbb
inc
mov
xchg
fldt
notl
ljmp
not
stc
fdivr
jge
xor
xchg
addl
lods
out
jecxz
imull
mov
xchg
out
sub
andb
push
lret
test
addr16
idivl
je
mov
pop
mov
jne
idivl
clc
lahf
repnz
std
in
push
stos
cmc
xchg
rcrb
dec
testl
testl
vpaddd
pushf
add
testl
call
sub
das
and
scas
push
cltd
call
xchg
lea
sti
notl
mov
dec
sbb
out
mov
xlat
pop
dec
xchg
mov
stos
cmp
xor
fcomi
push
sbb
xor
imul
jge
push
imul
aad
mov
idivl
add
sbb
xorl
inc
add
outsb
push
pop
xchg
aas
hlt
mov
add
fldl
adc
js
movsl
add
xchg
and
std
insl
lods
xor
js
fistpl
xchg
in
repz
clc
rolb
fidivl
div
mov
divl
mov
xchg
notl
adc
mov
jns
lahf
sbb
push
pop
inc
imul
jnp
cmpsl
je,pt
popf
push
iret
inc
rcr
push
mov
push
xor
jecxz
fistpll
push
negl
arpl
or
movsb
outsb
pop
mov
repnz
out
aaa
push
jne
xchg
notl
dec
inc
popa
repz
negl
test
or
adc
testl
cmp
fisubrs
insl
data16
lock
rcr
push
clc
mov
aam
hlt
pop
dec
push
jmp
idivl
xchg
movsb
inc
mov
imul
les
or
adc
lds
test
push
int3
dec
or
je
rorl
cwtl
sahf
xchg
xlat
mov
stos
jno
out
icebp
dec
inc
push
push
lret
sub
push
mov
jne
push
out
lret
idivl
or
adc
adc
iret
xor
lock
sbb
aas
lret
js
cmp
ret
idivl
mov
cld
out
arpl
div
in
push
dec
sahf
ss
and
mov
inc
fbld
ss
scas
mov
pop
es
cmp
xor
cmc
fnstcw
cmp
pop
and
aad
xor
ljmp
push
das
lahf
inc
loopne
sbb
notl
push
mov
cmpsb
jbe
imul
popa
mov
push
add
add
pop
out
push
rorl
xchg
push
lret
sub
lods
add
jns
adc
mov
xchg
cmpsb
into
push
lahf
ja
cmp
jg
outsl
sarl
sahf
cmp
push
fnstsw
inc
idivl
sub
adc
js
inc
jp
ljmp
idiv
lods
pop
xchg
ret
add
mov
add
push
dec
rorl
notl
sarb
sar
push
out
insb
inc
sarb
sbb
popf
adc
adc
sub
mul
add
mov
testl
lret
push
push
ret
fwait
sub
dec
fsubs
xor
push
cmp
mov
mov
sti
mov
xor
les
push
enter
add
sub
adc
and
sub
insb
rol
mov
mov
mov
mull
mov
dec
leave
mov
shlb
in
cmp
xorl
negl
mov
mov
cli
jmp
cwtl
push
xchg
nop
inc
icebp
sub
imul
test
inc
mov
jb
mov
loope
cmp
ja
add
int
adc
mull
mov
mov
pop
or
test
and
dec
dec
cmp
sbb
idivl
dec
xchg
add
and
rcll
test
inc
xchg
dec
or
mov
into
sbb
dec
and
mov
mov
inc
icebp
mov
leave
test
jmp
insb
idiv
cmp
ss
mov
jg
mov
fcmovbe
dec
mull
or
loopne
mov
fnstcw
test
mov
int
dec
int3
mov
notl
and
std
and
jnp
popf
mov
add
inc
mov
ja
add
loop
pushf
test
mov
dec
ljmp
ret
jp
shll
mov
jmp
mov
cltd
sbb
aaa
jo
enter
pop
lock
jle
push
negl
sbb
lcall
xor
loope
testl
mov
shll
ror
pop
leave
mov
adc
add
push
pop
inc
in
xchg
ss
mov
int
push
leave
test
mov
fidivs
enter
aam
inc
testl
ret
cmp
out
lods
test
bound
fiaddl
jg
xor
jmp
sbb
testl
xor
jae
dec
mov
fistps
sbb
xchg
ja
movsl
sti
aam
fistps
jns
sbb
inc
fstp
xlat
cs
push
in
xor
sub
movsl
mov
cmp
inc
pop
es
cmp
and
push
in
lcall
jmp
pop
repnz
sbb
xchg
xchg
xor
popa
jae
dec
cmpb
pop
dec
lods
out
aaa
mov
negl
pop
lds
inc
imul
in
mov
sahf
jae
popf
pop
mov
negl
jge
or
out
mov
xchg
mov
cmp
add
stos
xor
in
push
or
pop
adc
cmp
sbb
xchg
mov
xor
cli
ror
mov
outsb
cmpsl
sub
sbb
nop
movsl
inc
testl
fstpt
jp
jmp
ja
mov
or
cmpsl
js
fistl
cld
pop
xchg
sbb
nop
inc
pop
ss
scas
ret
testl
nop
sar
pop
cwtl
shl
jmp
xlat
shlb
mov
xor
sub
push
dec
scas
push
aas
jmp
out
mov
je
cmp
lret
add
not
mov
adc
scas
lods
pop
negl
mov
loope
mov
in
addr16
divl
gs
vmulsd
xchg
xchg
fldt
insl
out
pop
pop
push
dec
div
adc
mov
popf
outsb
out
jne
xchg
cmpsb
pop
mov
icebp
fucom
mov
xchg
sub
in
sbb
jecxz
jge
arpl
jae
testl
push
lods
adc
mov
fwait
jmp
fildll
dec
les
or
gs
xor
mov
daa
mov
mull
push
sbb
out
repnz
dec
cmc
sub
data16
jg
fsubrs
pop
mov
mov
fwait
jno
popf
mov
sbb
adc
xchg
inc
jecxz
imul
jo
ret
pop
pop
and
pop
xor
out
bound
jno
and
xor
lcall
loope
fdivrs
scas
and
sub
and
je
sarb
in
mov
notl
xor
adc
sbb
jns
ficomps
aam
mov
out
imul
mov
mov
pop
shl
leave
and
sti
xor
add
lea
jg
push
test
fst
rcl
inc
xchg
mov
out
call
mov
sub
mov
fbstp
not
sbb
testl
fdivl
shl
in
shll
int
out
and
test
arpl
negl
jmp
enter
in
testl
loope
fsubrs
pop
xchg
pop
test
xchg
mov
inc
jle
test
mov
outsb
notb
mull
or
and
sbb
or
gs
incl
repnz
aad
shr
mov
scas
testb
cld
movsb
mov
inc
push
jo
mull
out
outsl
pop
pusha
push
loopne
fs
testl
cmp
idivl
outsl
insb
lea
lret
lcall
std
push
pop
cmc
inc
inc
cmp
push
mov
xor
je
xor
push
out
bound
pushf
push
push
stc
in
bswap
divl
outsb
mov
push
das
mull
mov
lods
jle
pop
xor
lahf
adc
idivl
mov
mov
push
mov
mov
idivl
data16
or
andb
adc
mov
out
pop
dec
imul
sub
fcomp
ja
mov
xchg
xchg
std
shl
xorl
cli
fucompp
xlat
in
adcb
add
dec
stc
mull
mov
jle
pop
mov
inc
leave
test
pop
hlt
adc
fmulp
push
inc
je
jmp
dec
and
notl
xchg
mov
notl
dec
ds
lods
push
sarb
repz
xlat
addb
sub
push
fisubl
jb
dec
push
mov
stos
xlat
jmp
jmp
jns
mov
or
mov
iret
jo
mov
and
add
cmp
cmpsl
xlat
jns
add
dec
mov
add
mov
mov
inc
sbb
imul
sbb
lret
repnz
push
push
pop
ds
fnstenv
dec
sub
popa
xchg
dec
push
mov
mov
pop
pop
inc
mov
repnz
dec
sti
pop
jecxz
xor
jl
fists
leave
adc
mov
adc
mov
out
es
xchg
and
pop
xor
in
lock
orb
push
inc
mov
or
enter
cmove
push
nop
adc
notl
clc
sti
test
cwtl
icebp
movsb
push
jne
jmp
out
out
aas
int
ss
cmp
or
add
or
enter
shll
ret
jl
or
or
dec
das
mull
push
js
testl
mov
lcall
cld
mov
mov
sbb
xor
cmp
xlat
jns
mov
pop
mov
scas
fdivl
push
aas
negl
cmp
aam
roll
jp
les
push
aad
pusha
fsubrl
ljmp
mov
xchg
jl
push
mov
jg
loop
sub
shl
es
mov
aad
adc
adc
or
divl
sbb
test
mov
faddp
mov
lahf
cmpsb
popa
imull
add
negl
mov
push
test
pop
jge
pusha
mov
rorb
hlt
rcll
aam
icebp
add
lcall
es
jp
jle
idivl
mov
mov
out
sub
dec
insl
in
xor
xchg
int3
jg
outsb
xchg
pop
ds
mov
sarb
hlt
notl
pusha
cmpsl
jecxz
lret
pop
notl
call
or
negl
bound
inc
adc
inc
notl
iret
add
fcomps
adc
repz
mov
in
outsl
xchg
cmpsb
les
inc
mull
push
dec
inc
dec
in
rcr
testl
mov
testl
mov
out
pop
loop
in
stos
pop
rcr
dec
rcrb
in
sub
divl
imul
loopne
jecxz
lea
jmp
xor
shl
mov
xor
test
imul
iret
ficompl
push
imull
cmpsl
mov
cmp
inc
xlat
leave
icebp
jmp
test
mov
testl
ja
stc
fstps
in
loope
mull
lock
xchg
lcall
jbe
push
cltd
xor
fisubrl
or
neg
insl
divb
mull
mov
xor
cmp
fcoms
mov
movsl
test
pop
sti
div
push
test
imul
imull
inc
xor
sbbb
inc
push
push
rcl
xorl
mov
or
frstor
sbb
xor
xlat
int
test
fisubrl
in
testl
std
imul
dec
jbe
push
out
push
dec
mov
jg
lods
pop
xlat
pop
and
pushf
fimull
mov
stc
mov
mov
xor
mov
negl
pop
push
mov
aaa
fmuls
add
sbb
clc
fbstp
sbb
pop
dec
xlat
mov
fistpl
out
xor
sbb
mov
mull
jmp
adc
nop
lcall
shl
dec
cmc
fwait
call
scas
sar
mov
dec
add
idivl
notl
sbb
mov
imul
es
push
leave
outsl
xlat
or
adc
neg
repz
rdmsr
dec
mull
adc
sub
mov
andl
lods
push
leave
xor
xlat
pause
lods
popa
testl
mov
sbb
test
xchg
jb
lods
lret
mov
imul
pop
movsb
negl
mov
dec
mov
dec
pushf
pop
ja
fstpt
cmpsl
aaa
ljmp
frstor
adc
cld
sub
ret
popf
xchg
arpl
movsb
int
outsl
xchg
loop
fildll
and
loop
sbb
sbb
in
inc
int
xchg
insl
cs
jno
repz
mov
push
xchg
inc
out
push
and
pop
push
jg
and
mov
xchg
dec
in
mull
pusha
inc
mov
sahf
mov
imul
into
imull
bound
jl
xor
pop
nop
xor
xlat
or
fwait
and
jne
mov
jmp
cmp
sub
test
mov
adcb
mov
shl
jbe
loope
mov
cli
or
xor
out
pop
push
sub
mov
xchg
aaa
or
lret
cmp
imul
filds
xor
iret
fnstcw
testl
push
js
mov
mov
ret
xor
xchg
push
cld
lret
xchg
cs
pop
push
push
popf
xor
cmp
loopne
idiv
pop
push
repz
sub
pop
rorl
jae
dec
in
cmp
out
sub
adc
pop
jp
pushl
lahf
sbb
aad
sbb
sub
addr16
xor
and
pop
div
cmp
jnp
jmp
push
mov
test
adc
and
inc
push
adc
sub
ss
repz
outsb
jno
idivl
rcl
cmpsb
add
xchg
xlat
add
outsb
and
cwtl
sbb
hlt
icebp
imul
adc
fsubr
sbb
in
cmp
andb
idiv
jmp
pop
testw
xor
or
pmaxsw
jmp
divl
mov
cmp
adc
jbe
cltd
loopne
or
adc
lret
mov
notl
jmp
cmc
pop
andb
add
imul
std
lcall
cmpsl
push
fcoms
or
fimuls
jnp
sbb
xor
push
ffreep
rcll
mov
testl
in
data16
and
sti
sbb
inc
and
addb
push
mov
adc
pop
adc
sbb
dec
jecxz
sub
orl
das
xchg
adc
or
decl
dec
add
adc
popf
in
out
sub
xchg
or
scas
jmp
idivl
dec
in
adc
inc
loop
sbb
and
divl
mov
loope
sub
stos
lods
fdiv
stc
std
push
data16
or
cs
pop
mov
inc
shll
js
sti
imull
idivb
mov
mov
pop
xchg
sbb
mov
movsl
dec
xchg
sti
push
test
insl
cmp
das
or
jb
push
testl
shll
cmp
cmpsl
push
loopne
js
inc
dec
mul
mov
mov
enter
test
mov
lahf
imul
int
dec
xor
mov
mov
div
push
je
xor
lds
rcll
pushf
xchg
lsl
mov
fdivs
mov
push
negl
mov
mov
cltd
std
aas
fwait
add
inc
insb
test
inc
or
in
negl
or
inc
not
sbb
mov
out
inc
dec
mov
imul
arpl
sub
aas
sbb
loopne
out
das
js
push
arpl
lahf
pop
ss
shrb
lock
loop
lock
fists
mov
xchg
adcl
repz
jp
insl
sub
or
ret
cltd
lods
mov
xchg
testl
aam
adc
out
xor
dec
nop
sub
adc
xchg
mov
stos
cli
lods
mov
call
push
xlat
sub
sbb
jmp
cmp
movsl
dec
cmpsl
hlt
adc
test
jl
sub
fcmovb
pop
push
ds
nop
jg
xlat
movsb
hlt
and
or
pop
repnz
enter
jge
pop
aaa
mov
mov
popa
testl
jb
mov
filds
aad
into
inc
mov
push
and
or
xchg
mov
idivl
or
clc
jecxz
push
fdiv
ja
adc
pushf
mov
in
testl
imul
divl
xchg
scas
fwait
orl
or
inc
mov
cmp
cmp
mov
out
rclb
jmp
dec
sbb
shl
sbb
into
cli
imull
jg
div
stos
xlat
sub
out
xchg
lock
divl
pop
testl
or
add
rcr
imul
fidivrl
movsl
testl
cmp
jecxz
testl
push
mov
dec
lods
cli
jns
dec
testl
ja
shrb
xchg
es
and
mull
imul
enter
aad
insl
mov
imull
lea
inc
idivl
jae
pop
nop
push
cltd
jnp
pop
mov
imul
xchg
jl
notl
je
dec
testl
cmp
pusha
dec
outsb
adc
adc
sbb
movsb
sub
add
fcomi
in
lea
loopne
testl
hlt
jae
mov
dec
xor
rcll
cld
fnstcw
pop
popf
inc
pop
es
jle
popa
mov
adc
mov
xchg
sub
cmp
aam
in
mov
or
fcmovne
xor
jg
lahf
aas
pop
mov
test
sar
sbb
notl
mov
jecxz
mov
pop
sbb
xor
xchg
bound
or
jp
jl
repz
jmp
add
test
mov
xor
mov
pop
repnz
add
in
iret
icebp
divl
nop
ja
imul
or
pusha
inc
ficomps
negl
scas
push
popa
andb
jne
mov
cltd
inc
add
pop
and
fisttps
xlat
in
mull
insb
rcrb
divl
lods
xchg
es
mov
test
lcall
aad
push
adc
xor
into
cmp
test
scas
int3
imull
sub
scas
or
repz
fwait
and
jmp
pop
test
jae
jp
imull
enter
mov
cmp
stc
and
cmp
mov
dec
outsb
dec
aam
push
cs
jmp
mov
cmp
xlat
or
push
neg
dec
ficoms
mull
inc
xchg
xchg
pusha
xor
sahf
mov
movsl
repz
sub
jb
jmp
xor
cmp
push
jp
pop
notl
sarl
inc
or
loopne
divb
divl
stc
sahf
xchg
imull
ss
int3
aaa
testb
pop
xor
cmc
test
js
nop
testl
xchg
add
imul
pushf
xor
sub
sti
shlb
push
xchg
jo
inc
addr16
mov
testl
jle
jp
cltd
mov
adc
cwtl
xlat
in
fistpll
je
push
sbb
aam
mov
pop
outsb
pop
jne
popf
icebp
xlat
je
dec
mov
testl
hlt
sar
dec
int3
imul
stos
sub
sbb
mov
aaa
and
rclb
mov
negl
test
jmp
mov
and
flds
movsl
imull
imulb
clc
push
in
mov
outsl
adc
sub
push
neg
xor
pop
and
fmul
clc
insl
into
mull
ret
dec
lods
cmp
ret
mov
repz
cmp
shl
loop
loopne
stos
notl
lods
les
jmp
adc
cmc
testl
cmp
mov
fcomi
fwait
mov
cmpsl
jb
xchg
testl
insl
sahf
and
sub
enter
xchg
add
jge
mov
xchg
adc
imul
mov
inc
divl
sub
xor
test
sahf
pop
jne
out
and
add
scas
pop
jb
outsb
idiv
pop
inc
mov
lds
xor
test
stc
adc
divl
sahf
flds
clc
or
das
inc
faddl
test
xor
cld
xor
cmp
and
imul
lds
fwait
xor
adc
xor
icebp
in
idiv
sbb
pop
cmp
push
fdivp
jne
xchg
loop
movsl
jo
notl
cwtl
mov
sbb
jl
inc
stc
xchg
scas
sub
je
jle
fs
add
fildl
pop
lock
test
loope
push
movsb
dec
xor
xchg
cmpb
js,pt
mov
pop
pop
push
xlat
cmpsb
ret
insb
push
jg
or
sti
xchg
push
lock
ljmp
hlt
push
pop
jns
sub
pop
ljmp
add
clc
push
fwait
mov
pop
cmp
cmp
xchg
mov
cmp
fs
mov
aad
cmc
cld
jle
in
fsin
xchg
cmp
fisubl
inc
jno
idivl
pop
xor
imull
into
pop
enter
outsb
or
cmpsb
adc
jns
xchg
outsl
inc
xchg
sub
xor
xchg
outsb
mov
mov
adc
push
mov
ja
in
pop
jmp
sbb
fsubl
jae
divl
mov
adc
and
fldcw
cmpsb
testl
mov
pop
push
pop
fwait
dec
cmp
idivl
lods
mov
add
pop
out
jne
jecxz
dec
fcmovbe
xor
inc
fadds
idivl
xor
jns
and
mov
adc
add
jecxz
xor
pop
into
or
faddl
push
pop
xchg
lret
pop
mov
dec
lcall
out
inc
jg
lea
fildll
sbbl
push
aam
mov
mov
aad
movsb
shlb
scas
in
aas
inc
out
fcompl
inc
jmp
mov
insb
cmc
iret
cmpl
pop
xlat
push
adc
jl
dec
pop
sub
notl
or
sbb
enter
jno
xchg
xor
repz
pop
or
je
xchg
pushf
mov
minps
jnp
mov
sahf
lea
dec
js
iret
xchg
inc
mov
scas
stos
out
or
loop
cmp
inc
sbb
push
and
mov
mov
cmpsl
std
enter
stos
out
in
adc
in
fildl
fwait
divl
cmp
pusha
testl
pop
test
jnp
pop
or
inc
idivb
xlat
popf
push
mov
dec
sbb
repz
xlat
xchg
mov
jl
adc
push
xchg
mov
pop
js
jmp
iret
add
sub
pop
clc
sub
add
sbb
push
jecxz
cmc
and
or
loopne
ret
testl
and
sub
int3
push
negl
std
lds
pop
cmp
aam
leave
repz
xor
and
and
insb
mov
repz
je
push
imull
adcb
mov
inc
jecxz
ljmp
jns
das
fistps
out
pop
stos
pop
xor
ja
push
je
mov
aas
fnsave
sbb
and
or
xlat
andl
sub
repnz
lcall
out
rclb
mov
add
inc
fwait
test
jmp
push
mov
mov
jge
cmp
idivl
push
jb
sub
adc
pop
aad
mov
push
je
or
insl
jne
testl
fiadds
adc
out
jno
jbe
outsb
inc
imul
test
stc
nop
fildll
aas
cwtl
adc
push
imull
adc
loope
call
cmp
cmc
adc
sahf
ljmp
ja
subb
shl
cmpsl
adc
mov
neg
adc
xor
xor
fwait
cmp
xor
int
icebp
xchg
dec
popf
aaa
repnz
fnstsw
ret
jo
ss
test
xchg
movl
fcmove
mov
idivl
mov
dec
outsb
and
inc
pop
fwait
nop
inc
or
mov
sahf
jnp
fdivrp
xor
mov
in
scas
daa
sbb
xor
push
pop
imul
mov
daa
je
xor
sbbl
cmc
iret
xchg
adc
pop
jb
shll
fistpl
cli
insb
je
out
inc
mov
inc
sbb
stos
fdiv
xchg
orb
jne
pop
adc
lret
pop
mov
stos
mov
push
xor
xor
push
sahf
dec
and
lahf
xlat
xchg
js
and
fcoml
insb
div
ret
mov
pop
or
xor
or
cwtl
mov
pop
inc
and
notl
pop
pop
inc
adc
ss
pop
loope
fistpll
fisttpll
iret
arpl
pop
in
stos
xchg
cmp
xor
jnp
jp
out
idiv
fs
push
aad
dec
mull
lods
mov
pushf
imul
ficoml
cmp
mov
imull
imul
notl
add
cmp
jp
or
sub
fadd
jl
iret
testl
sub
cld
cmpsb
out
sub
xor
loopne
jge
mov
xchg
mov
jae
aaa
xor
frstor
adc
xchg
fld
xor
mov
shl
mov
pop
dec
aam
movsl
negl
popa
pop
push
fwait
mov
push
mov
push
push
xchg
lret
dec
fincstp
loope
xor
testl
imul
popf
sarl
adc
adc
adcl
push
sub
addb
test
aaa
cld
xchg
and
cmp
xchg
mov
sub
rorb
test
into
divl
push
mov
adc
xlat
sbb
fidivs
sub
xchg
insb
or
mov
mov
mov
pop
arpl
sub
loop
stc
outsb
dec
cmp
ss
mov
jno
adc
add
mov
in
push
cmp
testl
xor
test
repnz
lret
testl
dec
jb
jne
sub
pop
in
repz
inc
inc
push
adc
test
cmp
repz
imull
xchg
xchg
cmpsl
stc
push
idivl
fistl
test
push
push
mov
xchg
nop
pusha
loopne
idivl
push
xlat
fldcw
or
negb
mov
sbb
xchg
cltd
scas
je
pop
test
mov
movsl
cmp
popa
sti
bound
xchg
dec
aad
testl
imulw
xor
mull
and
test
loopne
sti
mov
mov
pop
repz
sahf
imul
addr16
inc
xor
cmc
pop
mov
fisubs
xlat
imull
mov
sti
je
idivl
lds
test
in
ljmp
loope
das
jg
mov
pop
inc
inc
in
mov
cltd
ficoms
add
imull
push
aas
mull
jmp
dec
pop
lcall
in
mov
xchg
push
adc
notl
hlt
adc
cmc
dec
add
push
notl
in
lea
mov
mull
mov
inc
divl
addr16
mov
and
divl
and
mov
xorl
pop
pop
xlat
mov
lret
pop
push
xchg
and
jnp
ljmp
sbb
aam
ret
lods
out
cmp
add
mov
into
inc
bswap
out
divl
sbb
xor
jb
es
jae
lods
stos
out
push
notl
daa
jge
xor
cmpsb
sbb
ret
push
push
mov
sbb
sub
lods
mull
push
repnz
fnsave
cwtl
xchg
mov
mov
ficompl
pop
in
push
int
test
or
pop
sbb
gs
and
outsb
aaa
jnp
les
jmp
adc
mov
or
push
fucom
cmpsl
std
xchg
testl
inc
popa
notl
xchg
fcomip
mov
sbb
testl
push
mov
and
xchg
jg
cmc
ljmp
divl
or
test
cmp
out
xchg
daa
xor
imul
in
cwtl
adc
cmc
mov
mov
mov
mov
xchg
push
inc
inc
jecxz
sub
scas
notl
mov
jb
lret
adc
or
call
push
dec
lret
sbb
jns
xlat
js
cmp
jmp
scas
mov
dec
mov
dec
xor
push
leave
pop
push
sub
add
sahf
jns
jmp
pop
in
xor
mov
adc
push
push
jecxz
mov
lret
ss
notl
xor
pop
push
mov
not
and
mov
idiv
jnp
mov
testl
dec
ljmp
lea
into
cmp
das
test
div
push
xor
shlb
jecxz
sub
inc
les
imul
push
loopne
cmpsb
mov
xchg
push
add
imul
dec
cmp
testl
jae
fldt
rcrb
sub
imul
mov
es
pushf
jle,pn
xchg
cmp
pop
push
inc
adc
mov
mov
imul
mov
lock
cld
nop
imul
jg
stc
mov
aas
shlb
jb
popf
ja
in
pop
push
ss
pop
idivl
and
notl
hlt
bound
cwtl
div
icebp
rclb
jecxz
testl
cmp
inc
mov
incb
and
mov
les
ja
mov
sarl
ds
sbb
inc
xchg
or
pop
mov
cld
sti
mov
pop
jb
or
daa
cmp
adc
or
inc
cmp
popf
jne
ja
push
pop
or
jmp
lcall
sbb
out
dec
pop
scas
out
jp
js
pop
inc
addr16
out
cmp
data16
fmul
test
sbb
pop
fadd
fwait
fs
mov
xlat
mov
in
push
sbbl
icebp
out
cmp
add
outsb
repz
hlt
mov
push
push
test
loope
outsb
inc
out
imul
movsl
xchg
mov
icebp
scas
pop
jmp
xchg
jle
ret
or
push
push
ljmp
adc
jne
mov
inc
pop
inc
dec
push
adc
adc
mov
repnz
sub
pop
jne
jb
pop
aad
pop
xchg
fs
jbe
mov
ljmp
and
fimull
mov
imull
inc
ja
xchg
push
out
add
xchg
iret
mov
push
pusha
popf
inc
out
push
pop
aaa
cmpsl
shrl
in
push
repz
scas
and
stos
nop
nop
sub
mov
icebp
lahf
ljmp
mov
jecxz
lock
add
in
js
in
into
icebp
jae
add
add
cmp
movb
testl
push
add
lahf
mov
fcmovb
dec
lea
cmp
jo
outsb
add
dec
repz
inc
mov
push
iret
pop
jmp
add
in
repnz
shl
and
sub
add
pop
ja
fiaddl
sub
cld
repz
pop
loopnew
jo
jae
in
ljmp
jo
mov
sbb
out
sahf
mov
pop
movsl
divb
mov
xchg
and
out
jae
xchg
clc
inc
push
xor
cmpsb
pop
fiaddl
mov
add
in
inc
ja
or
mov
mov
mov
outsl
insb
je
mulb
cmp
cltd
dec
mov
mov
and
je
out
sub
or
das
mov
icebp
dec
and
repz
push
std
adcb
mov
into
and
and
pop
xchg
xchg
out
mov
cwtl
cmp
ljmp
cmp
inc
sahf
mov
jb
fisubrl
fisttps
loop
shll
adc
xor
stos
out
sbb
and
dec
push
xor
adc
loope
push
cmpb
in
mov
imull
lcall
fcomp
jle
xchg
xchg
jl
jnp
sbb
sarl
in
inc
js
add
or
xchg
orb
jg
pusha
xchg
and
dec
scas
divl
mov
out
icebp
or
aaa
mov
jecxz
test
out
jnp
not
cmp
loopne
jmp
jo
ficompl
lret
fildl
push
pop
lret
mov
jecxz
xchg
les
mov
push
emms
addr16
dec
add
scas
test
add
pop
inc
pop
lahf
rol
xchg
ret
dec
idivw
xor
mov
les
insb
and
call
ljmp
adc
fstps
idivl
jae
enter
pop
lods
jnp
fadds
fisubrs
push
dec
test
divl
subl
bound
out
jae
add
mov
mull
dec
fistl
pop
aaa
out
and
std
div
xchg
cltd
mov
icebp
xor
andb
cmc
insl
and
and
add
cmp
loope
idivl
lds
enter
xor
lods
dec
lock
lret
arpl
fdiv
mov
dec
and
mov
test
sub
scas
xor
mov
mov
or
aas
inc
sbb
ss
clc
scas
push
addr16
adc
fdivrp
fists
mul
push
shlb
aam
push
dec
mov
mov
fdivl
mov
ss
outsl
mov
lret
bound
dec
inc
jae
jmp
pop
sub
je
lret
sahf
mov
inc
mov
in
idivl
repnz
mov
xchg
out
fildll
cmp
xlat
inc
in
mov
out
bound
jno
testl
scas
mov
cmp
iret
sub
mov
imul
repnz
cwtl
xchg
icebp
xor
gs
xor
pop
test
mov
push
sbb
mul
fwait
cwtl
pop
psubsb
rcll
or
not
sub
xchg
divl
pop
iret
int
ljmp
xchg
inc
loop
das
in
sahf
shlb
fstl
mull
stos
mov
and
mov
xor
adc
movsb
in
jo
test
add
push
xor
lret
and
jmp
or
push
mov
bound
outsb
xchg
int
icebp
jno
jl
std
into
je
sti
fildll
inc
sbb
idivl
lahf
inc
pop
sub
xchg
jp
repz
stos
sbb
jl
rcrb
test
jae
push
dec
fidivrl
adc
xchg
pop
push
sbb
jbe
repz
cmpsb
pop
mov
sub
mov
ficoms
mov
scas
lsl
dec
pop
pop
mov
pop
push
stos
or
outsl
cmc
imull
pop
aam
push
or
adc
sbb
mov
or
test
dec
test
test
fmul
mov
xlat
pop
jnp
mov
push
pop
push
mull
loope
sti
out
xlat
sbb
in
jmp
xchg
fstpt
notl
jno
mov
inc
push
leave
mov
dec
mov
jns
jne
xlat
out
cmp
negl
push
stos
add
repnz
in
and
imull
sti
jle,pn
test
mull
out
cmp
mov
negl
push
mov
cmpsl
divl
lret
push
inc
add
cmp
xchg
jle
daa
out
jl
pop
mov
or
out
push
not
sbb
repnz
testb
idiv
cmp
mov
das
out
mov
mov
jp
push
xlat
and
je
insb
inc
jmp
jl
adc
xchg
out
pushf
dec
in
leave
test
sub
lods
jae
in
pop
xor
mov
call
lahf
xchg
dec
mov
leave
sub
movsl
mov
or
rclb
movsb
stos
test
idivl
sbb
mov
fisubrl
ljmp
mov
dec
testl
lock
notl
outsl
into
sbb
rolb
mov
shl
add
jge
movsb
popf
push
xlat
nop
out
out
sbb
dec
mull
movsb
push
lcall
mov
or
mov
mov
xor
in
push
mov
not
pop
fs
push
and
mov
push
cmp
xlat
push
mov
jno
jl
mov
sti
dec
stos
mov
push
cmp
scas
cmc
out
outsb
in
xchg
cbtw
lcall
shr
mov
pop
sbb
cmp
mov
fidivrl
imull
lahf
sbb
notl
addr16
mov
fwait
rclb
jl
xor
lret
divl
jo
jge
in
neg
jle
in
xorl
pushl
pop
dec
xor
fistpl
in
push
divl
imul
jecxz
movsl
mov
mov
out
idiv
mov
stos
inc
inc
xchg
xlat
scas
mov
add
xchg
fbstp
in
adc
push
les
inc
fcmovne
xor
pop
sbb
or
pusha
shl
adc
shlb
cltd
jb
jmp
xor
pop
cmp
das
xchg
call
mov
gs
idiv
aas
sbb
push
jns
lret
dec
inc
add
fs
push
ljmp
lcall
addl
mov
outsl
addr16
les
jne
cmpsl
sahf
pop
xlat
loope
in
imul
shll
flds
sti
aas
xor
out
dec
dec
fadds
stos
popf
ja
xor
andl
jae
leave
in
inc
scas
jns
xlat
push
mov
jne
fistpl
popf
push
sub
xor
push
jecxz
fisubrl
test
mul
popf
test
sub
sub
mov
adc
outsb
incb
adc
sbb
aam
xor
test
repz
inc
xchg
xchg
lods
movsl
loopne
dec
add
sbb
xor
push
mov
test
adc
pop
cmp
pop
ffreep
xchg
testl
fs
cmp
push
inc
idivl
add
inc
divl
xchg
dec
lahf
push
ret
nop
mov
inc
cwtl
pop
call
xlat
xchg
fistpll
fldenv
inc
flds
imul
xchg
and
sub
imull
sub
mov
mov
inc
and
cltd
notl
xor
and
xorl
fdivl
mov
push
jae
fwait
inc
lahf
pop
mov
push
inc
xor
xchg
out
loop
dec
lods
sbb
leave
cmpsb
gs
icebp
jb
aad
imul
xor
roll
imull
pop
loope
rolb
out
pop
daa
push
push
push
xorl
adc
ds
mov
xchg
ficoml
fldt
insl
in
outsl
mov
ja
mov
xor
xchg
mov
notl
shlb
pop
push
out
dec
pop
les
or
in
jmp
divl
cli
and
sbb
ja
sbb
faddl
or
in
push
loop
js
imul
lock
or
idivl
adc
xor
in
jge
not
dec
inc
arpl
jbe
push
sbb
pop
test
idiv
mov
inc
or
insl
add
xchg
lahf
fdivrl
imull
add
sub
in
test
pop
scas
sub
in
bound
dec
xlat
and
int3
fimull
and
lahf
pop
mov
loopne
addr16
xlat
test
stos
inc
fsubrs
not
imul
xlat
mov
push
adc
or
xchg
out
and
push
bound
inc
fistps
into
sub
jg
in
shll
xchg
and
mov
pop
cwtl
jb
mov
orb
es
sub
fbstp
sahf
sbb
and
imul
out
pushf
inc
add
mov
ret
pop
inc
push
ret
push
fbld
repnz
dec
outsb
xor
test
xchg
pop
jmp
and
jne
scas
pop
xlat
add
sub
add
xor
test
or
xchg
xor
mov
in
shrb
rclb
inc
out
jo
aad
adc
scas
xchg
sbb
push
jno
mov
sbb
push
iret
outsb
inc
notl
and
loope
jb
bound
push
or
cmp
cmpl
ss
sbb
xor
cld
pop
push
negl
mov
pusha
xor
and
mov
jbe
and
push
and
cli
adc
lret
repnz
cmpsl
push
sbb
adc
jle
icebp
adc
sti
cs
fmull
insb
outsb
push
or
mull
icebp
mov
pop
nop
sub
aam
push
and
xchg
imul
pop
mul
mov
xchg
sbb
or
fisttpll
xchg
mov
ljmp
icebp
cmp
mov
iret
jnp
pop
and
pushf
rcr
out
xchg
mov
cmp
jg
icebp
divl
push
mov
scas
stos
mov
data16
ficompl
pusha
cwtl
je
mov
arpl
js
mov
out
and
fsubrp
in
mov
cmpsb
or
rcll
out
jecxz
push
popf
test
in
adc
testl
dec
jecxz
imull
scas
je
push
shlb
xor
mov
cmp
jns
and
shlb
jp
ljmp
add
loop
add
jb
inc
dec
in
pop
sbb
repz
pop
shl
push
push
out
lods
add
xchg
pop
xor
sub
push
test
cmp
jge
fistl
xchg
adc
icebp
sbb
je
jae
mov
cs
pusha
mull
mov
es
xor
xchg
jmp
mov
jne
pusha
xlat
mov
lock
or
push
ret
in
in
in
les
jae
test
mov
inc
movsb
lods
loopne
in
rclb
jo
punpckhwd
pop
out
cmp
or
push
cmpsb
or
sbb
nop
ds
xchg
xchg
rclb
out
imul
dec
dec
lock
fcomp
idivl
cwtl
xchg
insl
jmp
cmp
dec
or
mov
adc
mov
loop
mov
push
loop
movsb
fsub
xor
push
les
icebp
fcmovu
je
divl
ficompl
mov
daa
jae
and
int
out
leave
mov
mov
ljmp
ja
jl
cmpsl
pop
dec
lods
adc
in
loope
xchg
loop
and
cmc
out
loop
mov
aaa
jg
js
adc
out
push
jmp
sub
sahf
push
aam
filds
repnz
ss
xor
xor
cmp
mull
test
ja
out
pop
pminsw
inc
mov
cwtl
pop
cmp
inc
clc
fsubrl
stc
jecxz
loopne
adc
mov
mov
cli
jno
sarl
push
pop
sbb
ficoml
jmp
ljmp
mov
out
mov
or
jne
les
lcall
xlat
loope
ds
cmp
xor
je
fs
inc
dec
aas
popf
jo
mov
dec
in
jmp
or
inc
jbe
shll
jmp
mov
inc
sbb
daa
insl
hlt
test
negl
clc
cmp
xchg
xor
imul
or
daa
aaa
fimull
or
fs
lea
mov
cmc
xchg
jne
jo
pop
mov
or
jo
aad
div
cltd
popa
lahf
insb
loopne
mov
lods
shr
sahf
mov
in
movsb
xlat
lret
add
push
and
dec
fwait
push
lock
dec
jecxz
ljmp
mov
mov
jne
push
scas
repnz
andb
call
dec
and
jbe
mov
add
je
fidivs
popa
xor
bnd
aam
daa
orl
pop
dec
mov
out
leave
jmp
xcrypt-cfb
cmpsl
rolb
out
sub
loopne
repz
mov
das
aam
insl
daa
in
daa
aam
ret
mov
inc
inc
sbb
jg
idivb
repnz
int
cmp
in
ja
sbb
mov
xchg
ljmp
iret
cmpsl
sub
aaa
sbb
jmp
fucom
or
sub
andb
loope
sbbb
movsb
or
sub
pop
loop
pop
stc
bound
movsl
jmp
addr16
outsb
icebp
je
mov
lcall
fwait
dec
sbb
ret
mov
fldpi
mov
rcl
cwtl
stos
xchg
jmp
shr
jl
jge
jmp
jg
jns
pop
or
out
mov
nop
or
mov
jb
sbb
cmc
mov
xlat
add
in
inc
in
mov
bound
dec
lods
mov
data16
adc
jo
out
movb
cmp
dec
mov
jb
cwtl
jecxz
mov
out
jne
push
mov
mov
pop
xchg
xlat
cltd
cs
idivb
pop
clc
test
das
out
push
mov
mov
stc
sub
out
push
mov
movsl
iret
xlat
push
loope
ret
sbb
icebp
bound
rcll
push
shrl
xor
mov
push
notb
inc
sub
jne
mov
or
insb
mov
dec
mov
mov
ljmp
mov
sub
push
xchg
repnz
mov
mov
sub
mov
xchg
sbbb
stos
or
in
dec
cmpsl
pop
or
add
shrb
sbb
xchg
aad
test
imul
adc
pop
ljmp
sbb
fs
xor
mov
aas
xchg
xchg
jne
testb
add
cltd
fnstenv
outsl
call
mov
inc
mov
testl
sub
frstor
dec
xor
jg
adc
mov
add
dec
jno
idiv
stos
aad
mov
sbb
lret
movl
push
je
inc
testl
pop
or
scas
scas
cs
mov
out
and
mov
aaa
das
add
int
mov
insl
std
mov
jno
addr16
test
repnz
xlat
andl
imul
mov
sbb
dec
hlt
dec
dec
icebp
mov
add
jle
out
bound
hlt
fidivrl
pop
dec
psraw
call
popa
mov
add
ret
adc
mov
mov
nop
mov
ja
and
push
ljmp
mov
mov
js
bound
mov
xor
push
jge
mul
popa
pusha
fldenv
enter
clc
mov
sub
shr
mov
in
xor
aaa
or
sub
jmp
push
lods
pushf
rclb
repnz
jle
and
idiv
jbe
mov
mov
mov
scas
cs
push
dec
into
jp
fiaddl
addl
dec
cmpsl
push
rclb
mov
xor
adc
push
and
int
mov
sti
mov
ljmp
mov
icebp
xorb
aam
xchg
inc
push
movsl
out
filds
stos
mov
push
mov
stc
dec
inc
ds
jmp
hlt
inc
insb
insl
xlat
pop
repnz
loopne
mov
adc
jecxz
lahf
ljmp
icebp
adc
andl
movsl
ret
sarl
pop
mov
and
aad
adc
clc
xchg
ret
mov
std
outsb
mov
loop
outsl
add
mov
aam
adc
cmc
sub
shll
push
mov
jmp
test
iret
sub
ficompl
rcrb
inc
xor
jno
imul
in
xchg
test
aas
xchg
xor
neg
scas
adcl
loope
out
adc
mov
cmc
or
push
adc
or
lods
xor
fidivl
divb
add
sub
jmp
dec
arpl
xchg
int
rolb
rcr
mov
cwtl
jno
push
fwait
mov
loopne
arpl
dec
les
mov
out
push
pop
notl
add
dec
pop
adc
rclb
into
jbe
or
pop
repnz
jae
push
nop
xchg
ljmp
repz
pushf
push
mov
or
cmc
cmpsb
adc
mov
sarb
cmc
xchg
xlat
in
scas
sub
adc
push
jecxz
xchg
nop
xlat
fmulp
mov
pop
leave
inc
dec
gs
mov
inc
daa
lods
test
lods
in
cltd
jbe
adcb
mov
xchg
jae
mov
sbbb
ret
mov
dec
mov
inc
fisttpl
lods
mov
fs
movsl
out
repz
push
xchg
movsl
inc
sbb
jbe
bnd
push
fs
in
pop
scas
ret
cmp
pop
lret
mov
or
mov
and
or
scas
insl
mov
inc
les
pop
and
jge
pop
lods
cmp
mov
push
aas
sbb
mov
repz
mov
mov
fimuls
in
in
xchg
sub
out
xor
std
cltd
ret
xor
mov
iret
pop
xlat
mov
cmc
xchg
dec
insl
mov
push
mov
push
jge
scas
mov
pop
in
movsl
out
fisttpl
mov
insb
adc
lcall
stc
mov
dec
mov
push
call
mov
clc
pop
xchg
lods
jp
jecxz
mov
add
pop
jmp
or
add
fdiv
and
push
sbb
or
cmp
mov
fcmovnu
inc
orb
mov
jne
fwait
jg
addr16
imul
pop
add
mov
mov
xor
fxam
into
jo
sbb
mov
pop
cmpsb
hlt
out
jmp
div
lcall
mov
add
mov
jl
fidivrl
xchg
je
ror
mov
or
lods
inc
fcmove
mov
adc
mov
jns
outsl
out
outsb
ljmp
add
pop
mov
insl
mov
jp
push
pop
xchg
mov
sub
mov
inc
mov
ret
repz
leave
mov
xchg
outsl
xor
loope
lds
mov
dec
fisubrl
mov
std
pop
cltd
and
xchg
jg
and
cmp
faddl
pop
sahf
idiv
and
sti
test
popa
popf
ja
inc
xchg
cmpsl
cli
pop
test
and
out
mov
scas
cmpsl
xlat
cli
add
and
mov
stc
fiaddl
push
adc
mov
out
aad
hlt
adc
push
or
testb
js
mov
or
divl
stos
cli
adc
scas
mov
outsl
lahf
jbe
jmp
repnz
cmp
outsb
ljmp
push
or
rorl
adc
mov
xchg
pop
mov
jecxz
mov
out
outsl
jmp
push
push
pop
je
jg
movsb
in
jg
ret
iret
insl
test
repz
dec
and
fs
ljmp
pop
or
outsl
push
adc
dec
repz
popa
xor
cmc
daa
mov
fidivrl
leave
movsl
divb
repnz
lea
jne
lods
loope
cmc
jmp
mov
aas
pop
repnz
xchg
xchg
cld
out
add
mov
popf
mov
sbb
or
pop
ljmp
loopne
mov
push
rcll
mov
ljmp
adc
lea
fdiv
cwtl
jb
xor
add
aam
movsb
decb
repz
lods
jmp
lret
cmp
jecxz
ds
cmpsl
add
ja
lock
lcall
test
cltd
insb
jmp
sub
out
xchg
arpl
fistpl
xor
and
jl
mov
inc
adc
idiv
mov
lahf
popa
adc
xchg
pop
inc
mov
sub
lret
adc
add
std
sarb
repz
mov
pop
pop
xor
out
jbe
insb
nop
push
dec
xchg
push
jno
adc
mov
sti
lea
fincstp
movsb
inc
popa
out
sub
rclb
dec
and
dec
aad
or
stc
adc
test
adc
test
mov
icebp
sbb
pop
pop
fistpll
ror
cmp
add
xchg
mov
scas
popa
and
add
imul
aad
lea
pop
lret
imul
es
shlb
cmp
sbb
dec
dec
sub
test
sahf
sbb
mov
jge
adc
mov
jne
sub
rcrb
idivl
adc
jo
fincstp
mov
pushf
inc
jmp
cld
fwait
and
sub
fiaddl
jne
popf
add
repz
and
inc
mov
stos
adc
jo
mov
cwtl
jno
push
pop
jp
jns
arpl
or
std
or
testl
lds
push
in
flds
imull
aaa
push
fwait
lds
jae
and
aad
xor
dec
adc
aaa
shll
mov
mull
mov
cs
adc
or
jl
lods
or
movsb
std
jne
cmp
pop
jmp
xchg
aam
or
adc
xor
mov
ret
mov
pop
lcall
and
lock
mov
fmuls
movsl
test
push
jmp
cmp
sub
add
ss
cmp
movsl
testl
out
push
ret
push
loopne
popf
andb
movsb
lret
negl
push
sbb
sbb
aam
shll
xchg
lret
and
iret
out
fimull
mull
testl
cmp
in
jmp
and
fistpl
pop
xor
adc
pop
push
idivl
adc
and
pop
loop
sub
jmp
push
out
out
test
adc
push
xchg
add
cmc
lret
adc
mov
into
cmpsb
popf
notl
mov
jo
jle
repnz
mov
xlat
insl
loop
xchg
ficoms
testl
dec
testl
or
mov
div
mov
insb
stos
push
scas
dec
dec
push
lods
xchg
frstor
pop
testl
mov
xor
outsl
add
mull
lock
pop
imull
push
mov
or
add
sub
mov
pop
jmp
inc
sbb
jno
or
les
xchg
sub
ret
pop
sub
xchg
push
sbb
divl
and
dec
sbb
mov
mov
jecxz
fildl
testl
out
mov
cmc
outsb
mov
je
jmp
push
in
sub
out
dec
div
push
cmp
imul
cmp
dec
enter
idiv
jb
mov
or
bound
test
pop
sbbl
das
popf
testl
or
notl
mov
test
inc
int
adc
fdivrl
add
in
xor
xchg
stc
adc
out
jp
addl
sahf
out
sbb
ss
daa
out
cltd
pop
and
testl
movsl
shl
or
iret
and
xor
mull
or
mov
out
call
mov
pop
xlat
push
mov
inc
cmp
fists
fisubrl
fsubrs
mov
ret
jns
fcoms
xchg
mov
out
jno
popa
mov
ss
fwait
push
fistpl
jne
xor
out
out
loope
and
sub
push
sub
dec
push
add
sub
cmp
leave
lock
inc
addr16
test
loopne
push
negl
cwtl
jg
pop
jo
popf
add
bound
in
jbe
jb
fucomp
scas
mull
fucomi
loope
dec
push
imull
pusha
aas
in
adc
nop
mov
mull
pop
adc
mov
mov
imull
call
js
lsl
shr
xor
mov
sub
cli
out
mov
jmp
adc
imul
push
je
testl
pop
cwtl
ss
pop
mov
lds
idivl
mov
dec
jb
jne
mull
int
adc
out
stos
nop
add
push
imull
pop
lret
pop
outsb
or
mov
test
testl
adc
sub
xlat
mov
cld
jecxz
test
test
hlt
or
xor
ljmp
add
lea
push
push
xchg
imul
aad
mov
sbb
ficompl
cmp
into
jne
cmp
jnp
lds
adc
ret
inc
loope
xor
outsl
sub
push
mov
dec
add
shr
outsl
inc
xlat
movsl
shlb
mov
jb
sbb
sub
fisttps
adc
testl
or
arpl
icebp
fldt
adcb
cmp
sbb
sub
divl
pop
push
mov
push
jbe
mov
inc
rclb
testl
repz
xor
ss
imul
and
mov
outsl
dec
sbb
xchg
sub
mov
fisttps
pusha
mul
gs
punpcklwd
loopne
cmp
fcoml
insl
imul
mov
or
sub
lret
jp
cmc
notl
sbb
inc
push
sbb
fmull
test
testl
xor
stos
out
leave
in
icebp
dec
fcmovbe
adc
rcl
mov
jl
sbb
lock
loopne
test
mov
add
data16
testl
push
cmpl
js
mov
sbb
pop
ja,pn
mov
dec
mov
inc
fcomip
pop
mov
mov
xor
fcoms
mov
xor
in
and
rcrl
neg
dec
dec
cs
loopne
mull
shlb
subb
icebp
mov
inc
jne
dec
xorb
notl
in
mull
fisttpl
testl
rorb
idiv
repz
add
stos
fsub
inc
pop
test
xlat
jge
sub
ja
jg
mov
push
pop
testb
movsl
lret
sti
push
push
xchg
sub
stc
sbb
psllw
inc
inc
pop
sbb
test
mov
shr
and
xchg
and
incl
fwait
int
test
or
testl
repnz
mov
and
mov
push
movsb
pop
jb
negb
or
fildll
rclb
repnz
push
out
pop
mov
fcomip
movsb
mov
fidivs
mull
fisubrl
arpl
mov
or
notl
mov
js
xlat
jns
adc
cltd
negb
ret
notl
cmp
fdivp
pop
repz
add
sub
testl
hlt
and
ds
push
fnsave
cwtl
outsb
cmpsl
aam
xchg
xor
push
dec
mov
pop
imul
mov
out
mov
xlat
add
movsl
mov
push
negl
orb
xchg
outsb
mov
lret
ja
pause
ljmp
scas
cmp
jnp
inc
loope
xor
pop
daa
add
not
dec
add
lcall
add
add
icebp
mov
xchg
push
sbb
ss
jg
loop
mov
in
bound
mull
sti
xlat
lea
push
popa
push
sar
out
push
fwait
xor
fdivrs
testl
cmp
out
shrl
xchg
pop
dec
outsl
push
xlat
dec
sbb
call
in
push
ja
sbb
dec
dec
mov
xlat
outsb
sbb
das
or
negl
enter
pop
lods
cmp
sub
fdivrl
mov
add
jne
sub
sbb
inc
ret
je
xchg
in
call
dec
fistpl
or
test
jle
fcomip
movsb
ss
imul
neg
pop
arpl
xor
movsb
push
test
pop
and
imul
xor
divl
sub
test
xchg
loope
lret
sbb
in
fistpll
fldt
rcrb
or
cmp
mov
sbb
inc
xchg
xchg
fwait
jle
out
repz
sbb
xchg
mull
dec
pop
dec
pop
cmp
adcb
jp
push
mull
add
inc
sbb
test
sub
cmp
jg
pop
notl
clc
in
xchg
xchg
pop
jnp
jge
jns
mov
flds
inc
stc
mull
sti
fcom
xor
out
add
pop
in
lret
or
cmp
clc
addb
shlb
testl
mov
jo
adc
leave
mov
xchg
xchg
push
imulb
in
testl
nop
mov
insb
out
in
xor
into
mov
mov
das
cmp
mov
enter
xchg
div
mov
rcl
aaa
adc
movsb
push
push
fdivs
outsb
pop
cmp
fbld
cmp
fistpll
and
adc
dec
pop
roll
push
dec
cmpsb
mov
dec
lods
in
insb
jg
xchg
decl
std
jg
js
insl
push
or
push
rcrb
hlt
jge
jae
sub
sbb
cld
and
addr16
insl
fiaddl
popa
in
push
hlt
jbe
xlat
mov
cmp
jle
aaa
sub
mov
cltd
xor
insl
shll
adcl
mov
icebp
pop
mov
xchg
cmp
jmp
sbb
pushl
shlb
in
sub
daa
and
pushf
push
hlt
adc
mov
cwtl
dec
shll
jnp
mov
mov
fdivp
lods
enter
pop
and
movsl
movl
jmp
out
inc
xchg
adc
ss
int
mov
and
mov
fisubrl
sbb
mov
xchg
ljmp
add
or
jmp
int
pop
rolb
push
jp
insb
cltd
dec
add
std
or
lret
add
pop
movsl
lods
cmp
in
mov
repz
push
loopne
adc
shll
and
xor
xchg
sub
out
bts
jno
lea
div
add
and
test
mov
cmp
aas
mov
ds
add
mov
xlat
push
jmp
push
hlt
and
negl
cmc
fnstsw
or
ds
push
xchg
adc
imul
loopne
adc
in
mov
icebp
dec
cld
lcall
push
sbb
pop
inc
cwtl
add
cli
add
nop
push
cmpsb
xchg
divl
divl
out
jmp
mov
jmp
mov
stc
vmovsd
adc
adc
mov
or
cs
mov
mull
pop
jne
ja
or
jo
std
negl
sbb
popf
xorb
fsubrp
dec
cmpsl
mov
push
imull
jecxz
je
jnp
das
mull
dec
mov
mov
iret
xchg
je
fldt
mov
mov
xor
fildll
add
jecxz
mov
sub
push
sti
xchg
dec
addr16
push
aad
icebp
push
add
jae
sbb
ret
xchg
or
dec
testl
push
dec
stos
notl
hlt
mov
or
in
std
xor
sti
dec
imul
adc
outsb
pop
cmpsb
fsub
sub
cmp
in
sbb
fnstcw
rclb
dec
or
negl
inc
xor
fimuls
pusha
negl
xchg
dec
sub
push
jmp
stc
xor
cmp
lcall
mov
jecxz
mov
pop
sbb
push
mov
mov
test
push
test
or
jp
xor
fcomi
sbb
imul
adc
dec
fists
out
xlat
in
insb
xchg
xor
jle
nop
notb
out
pop
movsl
pop
and
sbb
rcrb
inc
cmp
xlat
push
mov
sub
push
movsl
stos
lods
insb
mov
dec
loopne
mov
imull
mov
sbb
test
add
adc
cmpl
in
fsubp
lahf
push
decl
jmp
mov
sbb
imul
add
jge
testl
adc
scas
mull
add
hlt
popa
push
mull
fcoms
testl
stos
mov
mov
inc
sbb
movsl
mul
push
pop
or
push
insb
mov
into
adc
out
xor
sbb
cmp
cld
lods
mov
bound
jo
fimull
adc
jecxz
sti
sbb
shrd
push
xor
leave
dec
repz
or
test
fistps
not
rcrl
or
scas
fildll
jge
imul
js
mov
adc
enter
pop
add
mov
jae
cli
dec
test
inc
arpl
xor
fnstenv
icebp
stos
xchg
add
sub
dec
loop
or
dec
sbb
jg
popa
divl
xchg
test
push
leave
ja
data16
mov
test
and
sbb
add
xchg
iret
mov
dec
mov
cmp
cli
fdivrs
pop
mov
divl
inc
ror
push
push
movsl
das
fisttps
adc
cld
div
or
dec
orb
imull
or
es
movsl
jne
shrb
out
xchg
ficomps
js
cmc
enter
out
idivl
jmp
das
xchg
adc
adc
out
pop
jl
dec
pop
divl
xchg
imulb
push
mov
adc
imul
loop
scas
push
lcall
lds
mov
pop
jo
xchg
test
hlt
mov
notl
stc
shlb
mov
xchg
or
mov
ficompl
mov
arpl
jmp
mull
jo
stc
icebp
movsb
xchg
imul
mov
xor
jl
dec
ljmp
mull
lahf
jmp
mov
cmpsl
push
pop
jns
mull
cli
adc
ja
test
div
dec
xorl
rorb
out
iret
sahf
dec
cmp
xchg
daa
lods
jge
ret
jecxz
divl
mov
negl
jge
xor
negl
or
cmpsb
les
xchg
mov
dec
loopne
mull
cmpsl
stos
mov
push
cwtl
aas
mov
pop
xchg
push
repz
jecxz
mov
sub
negl
gs
div
jnp
push
dec
adc
xchg
and
dec
fistps
ljmp
sahf
imul
add
lret
sub
out
sub
push
pop
mov
js
call
fcoms
xor
lret
and
jp
popf
pushf
ficompl
idivl
in
data16
iret
inc
mov
das
cmp
neg
mov
stos
imul
dec
loope
xor
test
fwait
pop
in
dec
in
imull
out
push
mov
mov
mov
negl
dec
inc
pop
int
fdiv
pop
lods
push
sbb
mov
or
addr16
mov
pop
out
mov
mov
or
negl
push
xchg
sub
neg
mov
dec
test
ja
xchg
pusha
out
sub
iret
out
push
inc
mul
dec
push
test
imul
cmp
pusha
adc
aad
cli
sbb
lret
sub
out
cltd
testb
insb
stos
cmp
cmp
or
inc
ljmp
es
and
sbb
cmp
movsb
or
mov
mov
fistl
lahf
and
out
shrb
pop
sbb
jo
sbb
pop
sbb
frstor
aam
pushf
jne
jecxz
ret
jl
leave
jo
dec
jae
pop
add
mov
testl
scas
pop
icebp
gs
arpl
mov
notl
adc
pop
loope
mov
fsubs
cmpsl
not
sbb
aad
fstl
testl
dec
push
pop
xor
xchg
inc
out
pop
and
jbe
cmp
pop
rclb
add
inc
pusha
cs
sub
cmp
addr16
pop
push
or
imul
mov
test
andb
lret
add
jmp
mov
incb
ljmp
dec
insb
fs
pusha
and
lods
imull
or
jle
loope
notl
inc
mov
testl
loopne
and
xchg
inc
fstpl
clc
sbbl
cmp
push
push
dec
testb
xor
mov
sub
inc
lret
stos
or
xchg
test
xor
mov
repnz
cs
out
or
and
daa
stc
mov
mov
pop
aas
in
jns
lea
and
and
int3
ss
xchg
enter
fwait
mov
mov
mov
fistps
divl
fistl
je
xor
clc
pop
notl
int3
movsb
aad
call
fldpi
sti
jae
loop
dec
test
jns
in
imul
test
idivl
aad
push
push
cmp
divl
ss
mov
push
mov
cmp
loop
idiv
int
ret
insl
mov
mov
sub
push
mull
mul
or
sbb
ljmp
clc
cwtl
testl
sbb
notl
mov
add
notl
xchg
fisttps
pop
lret
insl
jbe
xchg
negl
pop
int3
mov
ss
lock
out
pop
jae
cmpsl
leave
negl
xchg
inc
pop
ja
bound
paddsw
push
cmc
das
dec
push
in
test
xlat
adc
xor
mov
jle
fisttpll
mov
lcall
and
popf
sub
or
add
pop
mov
ss
sbb
test
adcl
daa
mov
mov
aas
aad
in
rcrb
jge
popa
in
and
mov
insl
jp
jo
jl
or
arpl
into
cmpb
movsl
divl
pusha
cmp
or
inc
dec
notl
sbb
add
enter
test
jp
mov
xor
push
insb
pop
lret
divl
mov
mov
and
gs
cld
sub
mov
insb
mov
mull
or
lea
adc
cmp
test
lock
flds
movsl
jne
rcrl
in
pop
mov
out
inc
les
and
or
jge
and
es
arpl
neg
mov
add
shlb
adc
sahf
shl
cmp
dec
lea
hlt
ss
mov
ret
negl
outsb
es
sub
bound
rol
loope
mov
jo
cmc
sbb
fstpl
inc
jg
sub
mov
cmp
mov
divl
mov
fdiv
pop
popa
mov
negl
add
popf
loope
lods
xlat
mov
shl
imul
ret
cmp
sahf
jge
sub
filds
cmp
jo
rcrl
testl
fucomip
push
sub
push
add
ds
or
xchg
scas
idivl
leave
lods
xchg
nop
and
testl
xchg
mull
repnz
loope
jg
jne
rcrl
jecxz
cmpb
testl
idiv
mov
cmpsb
idivl
add
mov
jmp
and
pop
dec
in
push
jb
out
stos
idivl
sti
pushf
push
sbb
xchg
xor
dec
cmp
mov
sub
stos
fildll
lret
andl
xor
and
mov
stc
push
adc
in
pop
test
xchg
js
sti
pop
dec
imul
into
and
int3
xchg
xchg
cwtl
outsb
sub
lret
jle
fisttpl
sbb
xchg
sub
pop
dec
mov
xlat
stos
xchg
adc
repz
push
pop
xchg
icebp
pop
push
insl
push
xchg
inc
mov
sbb
mov
cmc
imul
xor
outsb
out
jno
testl
movsb
mov
inc
pop
adc
icebp
jae
out
fidivs
or
stos
fs
jmp
add
fs
sbb
pusha
sbb
ljmpw
push
fs
mov
insl
jmp
sahf
jg
in
lcall
icebp
dec
mov
or
out
push
pop
dec
popa
mov
ljmp
or
jmp
testl
and
loopne
pop
aas
xlat
adcb
neg
fs
cli
mov
imull
fildll
and
push
int
push
dec
sbb
mov
jae
testl
stc
idivl
lock
mov
out
mov
in
cmp
adc
inc
or
testl
testl
push
adc
jo
sbb
add
aas
aam
cltd
jmp
hlt
xchg
mov
cmpsl
inc
inc
pop
adc
push
or
out
or
lock
xlat
daa
cwtl
cmp
jmp
mov
pop
lods
fmull
add
imul
adc
arpl
sub
idivl
out
pop
cltd
mov
dec
xchg
stc
add
aaa
or
and
es
xor
divl
mov
ret
loope
sub
dec
punpckhbw
push
jmp
pop
sti
sbb
xchg
in
pop
mov
negl
stos
mov
mov
shrb
cmp
jp
sbbb
loop
sbb
pop
and
fwait
dec
imull
hlt
jns
leave
shl
out
cmp
xchg
lret
or
xchg
test
lahf
stos
xchg
sbb
pop
or
out
jmp
inc
ljmp
loopne
not
arpl
inc
xchg
jae
jmp
pop
push
ret
fnstsw
fidivs
in
mov
lods
cs
mov
xor
add
rorl
ljmp
xor
in
push
inc
mull
dec
mov
call
pop
test
out
mov
and
loop
xchg
ret
not
dec
sub
insb
push
dec
fsts
shll
xchg
cmp
mov
mov
cmpsb
testl
pop
andl
test
popa
mov
rcr
and
cmp
push
jno
test
push
in
leave
xchg
xchg
jge
mov
xchg
push
in
or
nop
ja
xlat
rcll
xor
arpl
mul
out
add
idivl
add
mov
push
xor
fistpll
shl
lods
push
les
aas
loop
scas
adc
cmpsl
ja
out
pop
mov
je
loopne
cmp
add
iret
mov
mov
or
mov
sbb
mov
dec
scas
xchg
icebp
push
lahf
or
in
jns
inc
std
jbe
push
xor
testl
ja
shl
and
negl
mov
div
push
addr16
insl
insb
push
testl
in
icebp
push
cmp
in
jecxz
notl
les
jl
pop
mov
xor
xchg
inc
ljmp
dec
rcrb
sbb
jecxz
dec
movsb
sub
xlat
and
outsl
notl
in
sbb
outsb
xor
xchg
sub
jbe
mov
cltd
and
adc
push
push
xlat
lcall
cmp
divl
std
mov
inc
ficomps
negl
mov
adc
pop
jp
lods
scas
mov
pop
gs
rcrl
mov
pop
mov
jecxz
pusha
fisubrs
test
dec
lods
mov
in
push
stos
les
cltd
testl
push
in
mov
sub
es
pop
mov
mov
add
das
insb
xlat
ja
jne
in
fstpt
mull
icebp
mov
xchg
cmc
in
fs
repz
push
dec
mov
sbb
xchg
sub
add
push
out
divl
add
in
mull
mov
sub
filds
inc
add
cmc
divl
or
testl
fs
dec
inc
cld
add
push
hlt
mov
leave
mov
jp
bound
cmc
imul
xorl
xor
mov
imul
inc
mov
ss
lcall
xchg
test
cmp
notl
add
pop
cmpsb
pusha
adc
sub
xor
add
jb
shl
lret
xor
add
rcl
pusha
jl
cmp
adc
mull
add
mov
cmp
xor
mov
mov
pusha
hlt
mov
sarl
out
sub
loope
xor
cmpb
not
ret
int
in
stos
sbb
jle
jae
inc
lret
in
pop
imul
ret
ljmp
push
popf
jmp
dec
pushf
ss
adc
cwtl
add
ret
out
mov
int
xor
testl
or
push
lcall
and
add
adcb
test
xor
repz
imul
sbb
movsb
push
and
inc
push
mov
cmp
imull
jae
xchg
fcmovnu
testl
or
fsts
sarl
aas
stc
adc
pop
pop
mov
sbb
pop
adc
jp
jg
add
pop
neg
ffree
sbb
and
add
mov
maskmovq
negl
leave
loop
sbb
xor
fisttpl
imull
jge
pop
pop
popf
mov
mov
call
inc
fbstp
add
lahf
jnp
pop
into
out
rclb
negl
fisttpll
pop
xor
insl
loope
xchg
cmpl
loopne
jno
sbb
testl
xlat
imul
fildl
push
sub
lret
adc
ret
mov
out
daa
iret
pop
and
lock
cmp
fdivrl
outsb
or
mov
push
push
inc
insl
jo
or
or
push
imul
rorb
out
ds
mov
stos
stc
rcl
pop
notl
or
mov
idivl
jp
push
pop
aam
xchg
es
mov
mov
icebp
lods
popa
testl
arpl
cmp
mov
and
mov
outsb
aas
jge
pop
decl
mov
test
stos
mov
sub
stos
mov
push
out
push
lret
test
pop
jb
push
cmpsl
mov
mov
fsubs
sub
xlat
stc
cltd
lcall
repnz
loop
ret
cmp
jo
js
push
movsb
outsb
mov
and
xchg
push
testl
push
dec
lods
dec
imul
jl
pop
out
push
pop
and
inc
inc
aaa
sub
or
idiv
xchg
mov
mov
ret
xchg
adcb
loop
negl
addl
js
ret
sti
xor
stos
push
leave
xorb
outsl
push
fsts
lock
fidivrl
divl
mov
xchg
add
imul
fdiv
in
cli
syscall
pushf
fdivp
push
in
in
divl
fstpl
ret
mov
mov
call
cs
imul
xchg
gs
in
xchg
adc
inc
lds
and
cmc
or
fwait
pop
xchg
out
loop
int3
xor
inc
in
out
pop
imul
fnstenv
pop
gs
loop
jo
aaa
jns
fdivl
fcmovne
out
inc
ret
leave
xchg
arpl
mov
mov
imull
scas
mov
fbld
ss
jmp
sbb
push
imul
cmp
inc
jo
nop
enter
mull
adc
push
popf
or
flds
adc
iret
loop
mov
nop
inc
jmp
mov
push
adc
dec
mul
dec
xchg
pop
aaa
add
mov
jo
mov
cmp
dec
dec
je
jbe
pop
adc
xlat
add
mov
fs
cs
ret
sbb
sbb
aad
movsl
gs
cltd
mov
rcll
test
push
and
loop
pop
movsl
fdivp
dec
mov
aam
sub
ficoml
push
mov
idivl
xchg
sahf
js
sti
pop
mov
iret
cmc
hlt
in
push
or
adcl
pop
notl
xsaveopt
pop
pop
sti
xchg
adc
sarl
sahf
out
cmpsb
es
nop
scas
push
out
inc
mov
sbb
fistl
xchg
sbb
fincstp
adc
iret
xorb
or
aas
test
out
and
idivl
out
push
imull
xchg
or
mov
mov
idivl
jmp
inc
jb
out
push
imull
jl
inc
push
xlat
mov
jae
icebp
icebp
jbe
mov
mov
push
push
mov
cmp
or
pop
and
maxps
je
inc
sbb
rclb
lret
add
mull
mov
mov
sbb
fbstp
mov
mov
jecxz
adc
div
push
leave
int
iret
outsl
sub
mull
addb
mov
cmc
loop
fabs
adc
or
lock
sbb
sbb
imul
sti
lods
xchg
insl
movsl
testl
push
sbb
mov
dec
fcmovnbe
inc
div
in
es
inc
testl
xchg
push
lea
les
mov
fisttps
aaa
out
rcrb
das
out
cmpsl
loop
mov
xchg
sbb
xlat
je
in
out
das
sbb
mov
ljmp
or
cmp
sub
mull
shrb
mov
cltd
movsl
sahf
mov
loop
roll
loopne
sbb
pop
shlb
testl
hlt
xchg
aam
xchg
xlat
aaa
fisubl
fmuls
testl
or
mov
fnstcw
fnstcw
or
pop
cmp
jb
cmpsb
lret
out
int3
orb
pop
shr
or
xor
fs
mov
pop
enter
imul
fisttpll
dec
xlat
rcll
xor
into
xor
mov
into
imul
mov
cmp
stos
adc
int3
xchg
ljmp
jmp
mov
and
imul
cwtl
inc
sub
jmp
cli
inc
shl
insl
add
and
fs
in
xor
lret
fsubrl
and
scas
inc
jl
mov
out
cmp
mov
into
or
fdivs
adc
add
lods
je
fs
mov
mov
jl
add
loopne
popa
mov
or
arpl
lcall
push
idiv
lret
dec
push
cmp
idivl
call
insb
push
fs
dec
addr16
add
xchg
cmp
stos
and
les
sub
dec
pop
mov
stc
ret
xchg
idiv
or
mov
cmp
gs
aad
add
cli
cld
xor
push
cmc
repz
or
in
sahf
test
xlat
stc
popa
mov
jmp
dec
notl
sub
lcall
in
notl
pop
shl
sbb
sub
call
int3
out
or
xor
or
imul
and
dec
xlat
push
mov
lods
jb
sub
jp
mov
insb
xchg
sti
pop
push
imul
lods
cld
mov
xlat
cmc
or
hlt
fmull
nop
jo
sub
dec
push
std
idivl
or
sbb
push
jbe
aam
mov
and
out
ds
fsts
xchg
test
int3
bnd
call
repz
enter
out
out
in
aaa
outsl
call
pop
inc
nop
ret
push
push
call
inc
or
lods
push
neg
pushf
ljmp
cmpsb
int3
cmc
div
sub
xchg
mov
jmp
and
ret
or
hlt
xor
negl
or
sub
add
inc
jno
jns
xor
mov
stos
test
xlat
inc
pop
jbe
mov
jae
lods
push
outsl
push
fbld
dec
sbb
pop
mov
pop
seta
jbe
lods
icebp
pop
jmp
cmc
jecxz
or
inc
leave
test
fnstsw
xlat
sub
test
mov
dec
jns
fisubl
add
cmp
xor
adc
jge
pop
je,pn
sbb
mov
jno
jbe
or
jo
sbb
xchg
sbb
scas
cs
lret
or
scas
ret
mov
daa
imul
jae
ljmp
aad
mov
and
repnz
test
enter
ret
mov
dec
lret
inc
jmp
sbb
jns
jb
gs
xchg
out
in
mov
insb
adcb
jno
add
inc
fwait
aaa
xchg
rcll
sarl
popa
insl
inc
jp
or
jbe
jp
std
xor
sub
add
add
inc
outsb
loope
cmp
sub
mov
push
cld
jae
je
rol
push
call
cmp
jmp
std
jno
mov
jnp
pop
jb
xor
and
in
cli
jbe
outsl
xor
mov
idivb
in
enter
in
or
or
outsb
xchg
inc
movsl
jnp
pop
push
call
push
and
dec
sarb
sub
or
inc
outsl
fnsave
repnz
addr16
jne
jmp
jne
mov
fbstp
xlat
mov
out
cwtl
div
fucompp
mov
jmp
sti
dec
mov
repz
iret
test
stos
sahf
mov
in
icebp
cmpb
pop
jbe
mov
hlt
xchg
mov
adc
iret
out
out
sarb
push
push
insb
out
ret
xchg
fs
insb
pop
push
jmp
das
xchg
fistps
mov
push
pop
insb
cmpb
cmp
inc
fs
and
repz
jmp
jb
jge
mov
sbb
xchg
mov
cmpl
movsb
add
inc
aas
sbb
mov
sub
xchg
sbb
cmp
je
sahf
in
nop
mov
ret
and
pop
movsl
lahf
xlat
insl
ljmp
shl
ret
sub
lods
xchg
jbe
mov
sti
sahf
sub
jle
pop
push
mov
jae
adc
sub
adc
push
scas
and
sub
cmp
mov
add
cmp
pop
mov
cltd
mov
mov
xor
movsl
icebp
push
stc
jmp
fisubl
mov
icebp
push
add
shrb
iret
fcmovu
subl
fstpl
xchg
lcall
sub
inc
and
add
sub
clc
rdpmc
xor
mov
in
repz
mov
fcoml
in
inc
int3
xchg
push
insb
roll
dec
mov
jno
stc
negl
cmpsl
out
push
insl
movsb
call
cs
out
inc
ljmp
insl
adc
push
cmp
outsl
jnp
cmpsb
aad
divb
add
into
adc
roll
leave
inc
cmpsl
mov
out
push
in
out
xchg
aas
mov
fiadds
push
inc
push
or
or
or
jmp
xchg
push
inc
pop
je
mov
js
aad
or
pop
xchg
pop
repz
add
je
xor
pop
cmc
xchg
jecxz
jns
aaa
ficompl
cld
repz
jns
pushf
sbb
sub
testl
ljmp
pop
js
inc
frstor
adc
mov
leave
fsts
sub
repz
mulb
pop
lret
pop
push
xchg
pushf
mov
addl
cmpb
aas
jmp
outsb
mov
pop
notb
adc
sbb
sbb
push
jno
pop
cli
dec
divl
lea
xor
fldcw
notb
pop
xchg
cmpsb
push
jg
inc
jmp
sar
repz
push
cmp
sub
sbb
cltd
mov
shll
dec
lret
cmpsl
es
sbb
sbb
test
push
in
xchg
test
cmp
cs
mov
cmp
roll
into
lock
cltd
xor
or
int
sbb
jb
inc
xchg
mov
loop
xor
negl
test
pushf
xchg
xchg
jb
xchg
jmp
cli
and
lods
add
push
testb
je
sub
push
push
imul
mov
insb
fs
je
jne
stc
jg
movsb
xor
push
jmp
sub
int3
mov
in
fidivrl
aad
dec
or
dec
xchg
mov
and
clc
imul
jmp
cmpsl
jae
aas
fisubs
dec
js
pminsw
fisubrl
js
mov
jae
pop
paddsb
jmp
aaa
push
inc
mov
mov
jecxz
adc
mov
in
mov
sub
andb
cmc
in
mov
call
jp
sbb
je
dec
add
mov
push
lock
mov
pop
ljmp
movsl
add
loopne
xor
aaa
xchg
or
cmp
xor
iret
test
xchg
in
or
clc
mov
cmp
mov
mov
lahf
jne
sbb
mov
les
cmc
mov
jbe
jmp
js
add
inc
shlb
jmp
mov
xchg
mov
jmp
mov
aam
test
xchg
jnp
or
jne
inc
pop
stos
out
inc
jge
into
sub
daa
jle
jne
loopne
fxch
iret
outsb
hlt
das
mov
xchg
push
clc
hlt
mov
lods
ror
mov
out
repnz
cwtl
dec
jmp
fwait
nop
xor
lcall
neg
push
sbb
notl
popa
loopne
fucomi
sahf
ss
adc
out
notl
sbb
adc
dec
adc
lahf
shrl
push
dec
in
cmovs
shl
call
xorb
dec
jno
dec
fwait
neg
lods
ja
jecxz
mov
mull
jmp
adc
pop
mov
pop
div
push
out
pop
div
cwtl
mov
adc
fsubr
aad
imull
xor
cmp
or
ja
pop
jae
or
test
ret
jne
fs
push
dec
inc
adc
add
sbb
dec
dec
inc
fbld
jb
mov
push
pop
test
sub
cmpl
ss
and
or
arpl
stc
in
imull
inc
lods
pusha
idiv
push
into
nop
les
sbb
rolb
mov
or
push
push
push
loopne
nop
dec
xor
or
daa
divl
push
sub
dec
lock
adc
adc
aas
insl
mov
or
icebp
leave
jge
imull
push
ffreep
jno
iret
addr16
nop
jne
scas
adc
mov
xchg
mov
inc
sbbb
testl
test
xchg
mov
jecxz
lock
mov
mov
mov
xor
or
pop
fwait
xchg
jg
jno
cmpb
push
xor
shll
ds
pop
in
testl
push
divl
pop
jbe
pop
mov
aad
andl
xchg
and
pop
idivl
push
pop
dec
sub
jno
push
lahf
or
mov
and
mov
idiv
pushl
icebp
adc
jecxz
lahf
push
addr16
sti
rcrb
pop
negl
lret
bound
xchg
sub
dec
cmpsb
aad
mov
arpl
mov
int
mov
test
and
pop
cli
xchg
push
ja
push
and
mov
outsl
pushw
jmp
pop
lods
in
sbb
mov
clc
notl
ljmp
pop
mov
jae
sti
jp
sbb
sbb
ds
pop
jb
xor
xchg
repz
ret
xor
into
shrb
or
adcb
pop
je
or
scas
mov
pop
testl
popa
xor
sbb
iret
stos
xchg
pop
addr16
mov
sbb
aam
imul
leave
dec
sbb
sub
mov
xor
outsl
mov
mov
flds
fistps
adc
cmc
inc
mull
addr16
jmp
xor
or
jle
add
cld
notl
push
out
icebp
cmp
ficompl
ss
jmp
inc
xchg
imul
pushf
push
fcmove
divl
dec
inc
std
lock
sub
jle
jmp
insl
imull
mov
arpl
adc
imull
adc
fsubp
out
testl
and
hlt
mov
insb
idivl
daa
aas
push
jle
test
repnz
push
dec
fcomp
or
cltd
xlat
xchg
stc
push
imul
jecxz
jg
pop
jnp
data16
frstor
cltd
mov
sti
push
sub
ret
cld
stos
adc
or
mov
mov
imull
fimull
jecxz
popa
imul
dec
lock
popf
in
sbb
div
or
jle
xchg
testl
mov
loopne
mov
mov
xchg
int3
aas
sbb
sub
cmpsl
loopne
mov
mov
loope
inc
sbb
cmpsl
add
xchg
xlat
inc
pop
icebp
mov
out
bound
jg
imul
rclb
adc
pop
je
enter
in
jle
cltd
call
pop
mov
jbe
and
arpl
sbb
sbb
jg
and
aaa
dec
jo
imul
dec
into
int
adc
dec
mov
sbb
sub
cmp
xchg
push
scas
int
fdivs
int
mov
adc
or
xor
testl
mov
adc
mov
fs
out
lret
fdiv
out
add
cmpsb
imul
xor
mov
test
idivl
aas
push
xchg
testl
int
ja
xchg
xchg
jmp
push
popf
mov
imull
lea
in
das
sub
inc
lahf
scas
mov
ss
jne
frstpm(287
rcrl
xorb
enter
and
xor
lea
fs
sahf
inc
fwait
cwtl
pop
jbe
and
dec
divl
scas
or
lea
cwtl
notl
sub
ret
pop
cmp
aaa
adc
mov
ret
mov
cs
mov
in
mul
fcompl
mov
or
push
mov
psubusw
xchg
push
add
es
mov
xlat
imull
js
test
repnz
push
int
in
ss
out
das
cld
adc
neg
inc
sti
xor
jo
out
mov
adc
pop
repnz
push
inc
pop
iret
enter
scas
add
xchg
ja
mov
xlat
insl
or
fstps
fwait
xchg
fists
and
in
aad
notl
negl
shll
or
neg
mov
inc
lea
mov
inc
pushf
pop
gs
mov
test
cmpsb
xlat
jg
popf
cmp
mov
pop
inc
inc
lret
add
cli
xorb
xlat
cmp
mov
and
fnstenv
mov
mov
mull
push
shlb
gs
dec
push
repnz
jp
mov
lods
testl
insl
inc
mull
sub
sub
push
push
cmp
sub
mov
out
lret
sbb
test
lock
inc
pop
mov
xor
dec
adc
fcoml
out
mov
lock
mul
sbb
stos
mov
inc
lahf
xor
fistl
inc
and
testl
int
daa
mov
imul
lret
add
mov
cmp
pop
cmp
fnstcw
decb
testl
adc
lea
divl
and
pop
sbbb
ret
mov
lds
decb
pop
cmpsb
imull
mov
jns
mov
mov
ss
pusha
mov
insb
mov
and
sub
scas
mov
adc
jp
hlt
jnp
fistpll
stos
jns
inc
push
xchg
inc
incb
jmp
mov
and
cs
fnstenv
ss
loopne
dec
repz
stos
popa
mov
xor
js,pn
mov
and
push
adc
cltd
mov
div
cmpsl
repnz
imull
pushf
lcall
sub
inc
push
outsb
lcall
mov
dec
mov
add
push
mov
sbb
mov
mov
stos
pop
xchg
sbb
out
mov
fildl
push
pop
pop
xchg
and
xlat
data16
pushf
aam
repz
cld
loope
mov
fldenv
lods
mov
lahf
jne
inc
mov
adc
adcl
std
int
into
pusha
in
neg
insb
das
adc
jl
idivl
popa
jmp
adc
push
mov
mov
fildl
lock
sbb
mov
jno
sub
mov
xchg
or
push
pop
xchg
or
testb
loop
pop
mov
push
and
push
div
movsl
inc
xor
sub
imul
jle
push
jno
std
sub
xchg
fdivl
dec
mov
outsb
andb
mov
jae
movsl
xor
push
insb
push
fwait
or
fs
or
adc
inc
shrb
xchg
jae
cmovno
in
cmpsb
pop
test
xor
fbld
pop
jae
aad
sahf
cmp
fisttpl
jl
xor
jecxz
or
int
negl
ljmp
cmpsb
dec
pushf
adc
nop
push
jmp
cwtl
lret
adc
and
xor
pop
lods
xlat
dec
test
scas
fsubs
testl
mov
in
imulb
and
testl
xor
clc
test
lret
sbb
inc
adc
jle
add
xchg
negl
jbe
or
cltd
jno
pop
imull
xchg
fstl
jae
dec
dec
testl
mov
pop
dec
adc
pop
xor
ljmp
fildll
push
testl
cmp
push
jmp
test
fcoms
mov
xchg
jge
mov
mov
mov
idivl
push
paddd
loopne
imul
and
pop
sub
push
hlt
pop
jo
sub
push
mov
mov
shll
idivl
xor
popf
notl
add
or
cmpsb
rcll
idivl
mov
out
cmc
int3
divl
push
adc
sub
fldcw
and
xchg
pusha
int
ja
int3
mov
mov
mov
out
ror
aas
sbb
or
mov
mov
jbe
push
pop
sbb
outsb
mov
out
xor
notl
sbb
daa
xorl
cmp
std
jl
push
popf
push
jnp
stc
jno
pop
test
jecxz
cmp
out
cmp
push
mul
popa
sbb
dec
and
jns
sub
ss
lods
mov
adc
nop
in
xor
sub
in
cmp
int3
lahf
xor
and
out
hlt
mov
imul
test
les
scas
shll
cmp
lods
call
xlat
test
aaa
push
lret
jmp
pop
xlat
je
mov
scas
pop
fstl
or
gs
jecxz
pop
adc
add
stos
fcmovnu
xchg
push
jl
mov
jno
or
push
pop
pop
js
dec
pop
bnd
push
xchg
out
sub
inc
mov
testl
mov
rol
lret
jae
ss
lock
push
inc
shrb
push
mov
pop
dec
jmp
or
or
pop
sbb
testl
push
mov
push
jbe
ds
pop
scas
test
mov
movsb
mov
jbe
fs
lods
ljmp
div
arpl
mov
sti
cmpsl
and
in
sahf
adc
sbb
into
in
mov
xchg
cltd
idivl
arpl
push
jb
testl
and
push
mov
mov
pop
pusha
mov
imul
shrl
dec
test
xlat
jge
inc
push
insl
fs
jecxz
test
cmpl
mov
incb
nop
shl
or
iret
inc
divl
jns
pop
pop
push
adc
addb
notl
bound
je
pop
sbb
push
mov
fcomip
cmp
push
es
push
ljmp
dec
adc
test
pop
popf
ljmp
lock
mov
ds
adc
cltd
xlat
xchg
dec
adc
sbbl
jbe
lahf
or
mov
ds
inc
xlat
push
cmp
and
mov
sub
add
aaa
jmp
pop
pusha
pop
pop
sti
testl
jae
iret
or
adc
nop
mov
cmp
cwtl
mov
ficoml
jecxz
jp
add
stos
cmpsl
std
popl
call
sbb
xchg
inc
rcll
ljmp
bound
xlat
xlat
mov
xchg
add
mov
pop
frstor
ja
cmpl
push
mov
inc
mov
pop
push
add
shll
xchg
out
daa
sub
pop
jle
inc
xchg
shrl
aas
adc
dec
sbb
out
cmp
mov
push
scas
xor
mov
icebp
andl
ja
faddl
xlat
inc
out
jmp
mov
jb
fs
and
push
xchg
into
pop
ljmp
insb
jl
adc
cmpsb
dec
jbe
mov
jno
cmp
mov
xor
test
push
jbe,pn
das
shll
test
sbb
ds
jb
or
mov
add
add
scas
mov
in
dec
scas
test
shlb
pop
dec
jno
iret
or
xchg
jg
inc
and
sbb
int
enter
mov
fs
xchg
jmp
outsb
inc
mov
aad
mov
fcmovbe
movsl
mov
in
aas
jge
add
icebp
out
fs
insl
mov
mov
pusha
jecxz
jae
and
std
int
cltd
bnd
test
out
jmp
movsb
jmp
mov
xor
sub
aad
dec
adc
out
mov
push
xchg
mov
sub
out
adc
mov
mov
lods
popf
inc
addr16
out
jmp
jmp
mov
jne
movsb
negl
jnp
and
sbb
push
adc
imul
push
scas
xchg
adc
bound
ret
sarb
pop
out
rcr
movsb
push
subb
mul
push
enter
loopne
jae
mov
push
sub
dec
jle
sti
notl
testb
mov
addl
fmuls
adc
mov
bnd
and
cs
xchg
mov
lods
xor
sub
ret
idiv
and
mov
dec
mov
div
js
sub
cmp
mov
mov
jmp
sahf
xchg
or
xor
test
add
cmp
mov
dec
divl
repz
out
es
repnz
xor
mov
out
movsl
in
xchg
sar
mov
test
push
int3
imull
inc
cs
jmp
xlat
imulb
adc
lret
jge
mov
loop
cmp
sbb
cmc
or
fildll
ja
fstps
add
ss
push
repz
cmc
pop
aas
testl
mov
daa
fisttps
ljmp
les
repz
pop
popa
jnp
notl
mov
pop
cwtl
inc
mov
out
dec
mov
lock
jmp
push
movsb
clc
sbb
push
pop
jns
push
idivl
jmp
stos
shlb
inc
divl
xchg
test
pushf
repnz
mull
xorl
aam
sbbb
popa
add
or
outsb
and
push
sbb
ror
ficoml
enter
scas
jle
inc
push
xchg
fcomip
outsl
jno
jns
or
notw
mov
or
or
dec
pop
test
xchg
mov
adc
aaa
pop
add
testl
jns
cmp
dec
ret
divl
mov
cmpsl
cmp
xor
mov
maskmovq
notl
pusha
negl
xchg
mov
out
push
sbb
xchg
fistpll
jle
pop
sbb
imull
push
jl
cwtl
push
mull
loope
clc
adc
mov
rcrl
pop
std
imull
xor
mov
adc
repz
rol
fdivrl
push
fcoms
divl
inc
iret
and
jae
push
pop
pop
idivl
or
lods
cmpsb
adc
into
cld
fwait
adc
notl
jno
inc
ficoms
div
mov
fld
addr16
cmp
ja
mov
fists
sbb
mov
mov
imull
mov
cmpsl
mov
ljmp
fisttpll
fdivp
or
or
pop
mov
sahf
call
dec
int3
out
mov
imul
stos
or
push
xlat
loop
das
push
fiaddl
fdivl
mov
mov
cmp
adc
into
pop
jge
pop
xchg
cltd
fsubr
pop
xor
lea
out
jmp
push
subl
rclb
ss
test
loop
mov
pop
mov
sbb
xlat
fwait
inc
test
or
movsb
sub
adc
testl
push
xchg
notl
sbb
add
pop
daa
jo
mov
aas
popf
cltd
imul
in
xor
aam
enter
outsb
lods
cmpl
nop
imull
xchg
adc
pop
ficoms
push
sarb
push
pop
in
scas
nop
xchg
xor
add
cmpsl
int
shl
mov
or
xorb
jo
or
dec
lcall
jecxz
xor
shlb
mov
dec
fsubl
icebp
notl
cltd
movsb
mov
stos
sub
mov
idivl
out
sahf
dec
pop
dec
sti
imull
sbb
popa
xchg
movl
mov
into
gs
aas
mov
pop
ja
mov
icebp
rorb
popf
out
gs
div
push
lret
jmp
cs
cltd
shll
hlt
shl
pop
adc
divl
iret
adc
add
mov
negl
subb
push
outsb
dec
jl
cli
out
add
imull
mov
sbb
pop
mov
scas
lret
xor
stos
push
lods
inc
repz
addr16
and
cmp
mull
cs
xlat
rcll
cmc
iret
test
cmpsl
repz
es
dec
loope
ret
bound
imul
enter
sub
jl
mov
lds
int3
loop
popa
or
ja
cmp
or
cld
mov
test
clc
mov
and
or
data16
mov
mov
fmuls
sbb
xlat
pop
das
sbb
push
mov
add
inc
call
aam
divl
push
xchg
cld
idivl
in
cltd
sub
stos
sbb
in
cmp
or
mov
or
mov
push
xchg
insb
notl
cmp
and
es
scas
test
mov
idivl
fimull
push
jmp
pop
adc
in
ror
neg
rcr
sbb
ljmp
cmp
inc
jnp
aaa
decb
inc
ret
add
cmp
negl
jne
mov
jnp
push
fldenv
push
cmp
out
stc
mull
pop
stos
insl
mov
jne
jecxz
repnz
imul
call
add
andb
gs
jmp
sarl
and
test
inc
je
jecxz
push
push
divl
aad
dec
nop
cltd
mov
push
aaa
xchg
or
jecxz
xchg
icebp
ret
imull
add
xor
jo
filds
mov
int
pop
pop
mov
and
inc
fstp
lret
scas
and
mov
sbb
jbe
fcompl
shll
mull
add
or
loopne
or
jl
notl
std
sub
aas
dec
or
shl
jns
push
sbb
mov
repnz
cmp
mov
jle
xor
inc
rclb
or
repz
mov
lock
pop
test
xlat
sbbl
in
loope
pop
and
div
and
pop
add
jns
scas
add
inc
push
shll
aad
and
fidivrs
pop
or
mull
movsb
mov
lcall
cs
cltd
jns
inc
pop
negl
addr16
jge
repz
leave
je
mov
fimuls
cltd
insl
push
inc
sub
xchg
pop
inc
sahf
fdiv
dec
add
sub
out
dec
pop
test
fucomip
sub
cmp
push
loope
inc
call
out
jbe
filds
xchg
jb
bound
shrb
inc
jns
cmp
mov
push
stos
in
xchg
jmp
outsb
loop
sub
inc
jecxz
dec
sub
test
push
fdiv
inc
xchg
push
xor
mov
push
rclb
push
xor
add
negl
loopne
jl
insl
cmp
cmpl
mov
or
aaa
jno
sub
loopne
lret
leave
mov
fmull
ja
jmp
pop
jns
inc
dec
scas
sub
xor
cmpsl
sbb
xchg
ret
fcomip
mov
inc
fdivrl
in
ret
fiadds
test
jmp
aam
out
imul
pop
inc
nop
imul
cli
lea
in
lock
xorb
and
inc
xor
sbb
fstp
mov
mov
sub
neg
dec
cli
shrl
out
pop
jb
jge
or
arpl
xchg
fsubrp
filds
lret
jg
xor
xchg
cmpsb
inc
xor
fcompl
add
in
xchg
mov
xlat
jp
xlat
jb
lock
jbe
test
gs
cwtl
xchg
pushf
int3
filds
mov
push
cmc
xor
lret
repnz
shl
pop
sbb
lock
jb
xchg
cs
pop
mov
adc
repz
jmp
and
jl
jmp
xchg
jmp
roll
sub
xchg
daa
cltd
out
popa
movsl
cmp
arpl
and
push
subl
fbstp
mov
loop
rol
xor
inc
and
rcrl
and
cmp
xchg
sub
mov
and
sbb
cld
adc
sbb
orl
and
mul
jns
mov
mull
and
les
aaa
idivl
sbb
push
imul
push
mov
lcall
inc
cmp
and
push
rep
scas
xchg
add
icebp
sbb
jmp
divl
ret
adc
sbb
pop
mov
or
cs
mov
cwtl
jbe
mov
add
in
test
push
push
imulw
insb
nop
popa
pop
cltd
or
xchg
pop
jo
add
jae
notb
cmp
outsl
mov
addr16
or
dec
xorl
pop
xchg
sbb
aad
arpl
fiaddl
imull
fs
lcall
or
insl
imul
divl
sbb
mov
cld
push
cmpsb
sub
les
loop
negl
lds
js
pop
mov
imul
adc
setl
xchg
clc
xor
testl
push
mov
add
in
xor
jne
jl
inc
fidivrl
mov
fildll
iret
cmp
jno
xor
adc
outsl
xchg
sbb
mull
insb
sub
stos
mov
mov
push
icebp
and
xor
cmpsl
test
dec
aad
insl
test
add
xor
loope
sub
xor
je
mov
mov
imull
pop
ret
in
jne
and
mov
idivl
stos
test
negl
rorb
negl
inc
cli
mov
inc
jae
imul
inc
movsl
cmp
insl
jb
repz
cltd
pop
add
mov
gs
jae
lret
dec
and
rclb
mov
pop
jb
aaa
lock
add
ja
jge
cmp
sub
xlat
clc
jns
pop
xor
test
pop
xlat
cmp
mov
fcomi
mov
push
ret
addr16
pop
cld
inc
push
jmp
sbb
adc
lods
mov
outsl
mov
test
ret
jle
jb
popa
testl
inc
cmpsl
out
fwait
popa
rorb
and
mov
orb
pop
mov
in
mov
inc
or
test
jmp
jecxz
xchg
jne
jno
pop
hlt
xchg
lcall
cmp
xor
in
add
insl
sub
iret
fidivrl
fsubr
inc
inc
xor
out
loope
jne
or
mov
daa
sub
xlat
sbb
imul
jle
aad
xchg
pusha
mov
push
xchg
cmp
ret
and
jno
sub
mov
and
rcrl
xor
cmp
sbb
xlat
fldenv
adc
in
fisubl
test
sbb
outsl
pop
cmp
xor
loop
fstpl
lods
push
neg
adc
pop
push
sub
xchg
testl
dec
testl
subb
sbb
mov
pop
jmp
mov
add
and
dec
mov
out
mov
jns
xchg
jl
mov
hlt
lea
sbb
outsb
in
xor
mov
push
fdivl
sti
divl
jl
dec
xchg
ja
inc
jge
mov
fcomi
loope
adc
test
mov
push
pop
sti
lcall
push
or
mov
pushf
iret
aam
fwait
notl
mov
aas
lret
add
xchg
out
and
jne
xor
add
cli
xlat
cmp
in
notl
inc
jns,pn
push
push
pop
adc
sub
xorl
imull
cld
cwtl
pop
int
scas
subb
pminub
out
inc
test
insl
sbb
test
cmpsl
pop
mov
and
mov
or
mov
mov
adc
fistl
testl
sahf
and
jo
xor
imull
ja
fs
test
mov
stos
push
clc
daa
cwtl
adc
in
mov
es
imull
ds
divl
mov
loop
imul
lds
popa
and
xor
mov
outsl
jl
mov
fbstp
push
xor
ja
cli
nop
testl
mov
shlb
mov
ret
mov
out
push
fwait
lea
idiv
mov
pop
adc
xchg
daa
fcmovbe
and
in
mov
pop
inc
fcmovnu
adc
iret
testl
dec
cmp
or
idivl
pusha
je
rorb
insl
pop
imul
pop
shll
aad
dec
stos
ss
ret
push
js
test
mov
sub
jno
leave
mov
shll
jle
push
out
addb
fdiv
outsl
mov
or
pop
sub
aas
and
inc
mov
push
sti
loopne
cmc
negl
aaa
xor
sub
lret
inc
jbe
xor
into
and
pop
pop
sti
cmp
jge
jae
inc
sub
and
dec
in
icebp
je
pop
adc
fs
pop
adc
sub
aam
sub
xor
push
push
imul
rcrb
push
jl
mull
or
out
gs
mov
icebp
fincstp
mov
cmpsb
jge
sbb
dec
outsl
push
sub
mov
imul
mov
and
iret
and
adc
mov
mov
push
and
stc
dec
mov
jb
aam
mul
jbe
das
adc
push
arpl
cltd
adc
lea
pop
out
js
repz
pushf
sti
jae
popa
inc
xlat
aas
jo
rcll
xor
movsb
popf
out
divl
fdivs
and
inc
sbb
dec
fidivl
sub
fldl
aas
dec
cmp
push
mull
push
in
mov
cwtl
adc
adc
sbb
inc
fnstcw
fwait
leave
loope
repz
fs
loope
jg
push
sbb
and
adc
dec
pop
arpl
cmp
pop
and
test
fcoml
ss
and
and
ds
mov
jmp
sti
insl
outsb
mull
imul
in
pop
xor
je
lahf
pop
out
xchg
sub
fistpll
shlb
push
xchg
fbld
enter
notl
scas
xor
fs
test
mul
outsb
cltd
sahf
jne
mov
rcll
jp
repnz
or
sub
fisttps
push
aad
add
cmp
sbb
in
mov
jnp
out
sub
adc
stos
xchg
inc
int3
scas
lret
pop
adc
adc
in
repz
mov
shl
lds
idivl
sub
jecxz
in
mov
lret
adc
inc
and
sbb
and
dec
mov
lods
cmp
out
jecxz
add
in
xlat
mov
mov
lret
jbe
mov
repnz
sbb
fists
or
adc
mov
cmpl
movsb
inc
aaa
cmp
dec
gs
add
push
pop
mov
mov
pop
mov
push
call
xlat
xchg
test
add
rorl
sbb
int3
idivl
xor
sub
adc
xor
lret
jecxz
lock
mov
jl
mov
sub
out
sbbl
dec
loopne
xor
in
test
inc
fidivrl
xchg
notl
les
idiv
sub
aas
shr
nop
mull
mov
push
mul
test
stos
aaa
shl
lahf
xor
cmp
pop
pop
divl
mov
idiv
shlb
sbb
fdivs
dec
mov
mov
mov
xor
push
int
sbb
notl
sarb
jb
call
imul
imull
pop
dec
sti
repz
mov
idivl
sub
adc
insl
imul
shll
push
cmp
add
pop
inc
xor
sub
jmp
scas
pop
cli
cmp
inc
test
fdivrs
push
test
aam
cmc
ja
sbb
fidivl
arpl
add
mov
jl
imul
push
inc
data16
rcll
adc
lock
pop
sti
test
dec
xchg
in
push
inc
fwait
adc
add
idivl
pop
mov
pusha
mov
inc
pcmpgtd
mov
lea
out
in
xchg
divl
repz
mov
not
cmpsb
or
cld
push
mov
out
mov
data16
idiv
cwtl
dec
inc
insl
pop
out
testl
add
popa
push
xor
push
movsl
adc
lods
out
and
lea
dec
add
push
mov
sub
adc
repz
pop
icebp
push
ret
orl
push
cs
xor
sbb
pop
testl
xor
lahf
in
and
sbb
ss
lahf
mov
jb
jecxz
faddp
inc
mull
out
mov
jmp
inc
aam
push
or
fldt
std
popa
xchg
push
jbe
shl
test
jmp
push
fwait
aam
enter
push
dec
mov
jne
dec
xchg
jae
jo
lods
idivl
mov
mov
testl
and
fildll
jp
adc
xchg
mov
es
or
mov
lret
call
data16
inc
xor
sub
mov
and
in
mov
lods
ds
mov
pop
xchg
cld
insl
in
fistpl
sbb
pop
mov
es
mov
sub
loopne
aad
stos
leave
dec
fwait
notl
mov
mull
push
cmp
fmull
negl
leave
xor
loope
pop
pop
sti
mov
add
not
xchg
mov
cmp
fs
pop
js
fists
out
cltd
mov
in
adc
idivl
xchg
sti
mov
lds
test
dec
cmc
bound
negl
ds
cmp
xchg
divl
mov
mov
mov
adc
aam
ss
add
jmp
push
out
test
out
adc
adc
lock
cmc
divb
mov
inc
push
sbb
call
push
add
filds
pop
repz
and
push
inc
daa
adc
ljmp
xor
cmp
movl
inc
das
out
adc
xchg
popa
add
ss
push
push
sub
and
movsb
into
pop
testl
cltd
shl
testb
xchg
mov
enter
pop
fldt
dec
daa
not
mov
cmpsb
mov
pop
sub
test
lds
sti
iret
movsb
test
ja
mov
adc
xchg
sbb
xor
xlat
sbbw
xchg
fistpl
arpl
or
pushf
iret
jbe
cltd
xchg
inc
dec
mov
sbb
cld
imul
pop
testl
add
idivl
ljmp
out
jbe
jmp
mov
mov
add
or
xor
idivb
lcall
and
xor
repnz
notb
lods
negl
sbb
cwtl
ss
int3
adc
fists
fidivrl
not
popa
jbe
pushfw
not
jnp
mov
jp
push
mov
mov
neg
jge
cmpsl
or
inc
les
sbb
cmp
add
div
xor
rcll
mov
mov
js
inc
sub
out
cmp
scas
cmpsl
mov
mov
loop
xlat
jb
jge
push
in
cli
pop
jnp
mov
fldenv
cmpsb
imull
out
test
cmp
xchg
outsl
movntq
out
mov
xchg
mov
sti
loop
sub
xor
fucomi
sbb
not
in
call
ds
insb
mov
inc
movsw
push
test
jp
adc
dec
sahf
xor
addr16
or
enter
aas
movsb
dec
mov
testl
aas
sbb
div
cmp
xchg
into
push
daa
test
mov
or
and
lock
push
jnp
pushf
xchg
pop
dec
cs
icebp
call
pop
xor
push
and
jmp
notl
push
sbb
notl
sahf
shlb
ds
xor
or
xor
add
pop
push
jp
andb
cmp
dec
je
push
add
xchg
adc
pop
pop
add
fsubs
test
sub
push
push
icebp
or
or
push
cli
es
cltd
adc
fwait
add
mov
hlt
popa
mov
mov
fisubrs
sub
push
fsts
out
pop
mov
and
outsl
xor
jmp
pop
or
insl
jno
mov
pop
div
dec
fldcw
xlat
mov
pushf
mov
inc
out
xor
loope
dec
xchg
mull
arpl
inc
cmpsl
lret
testl
jle
les
lcall
notl
add
cli
divl
stc
cmp
pop
adc
out
pop
xor
jmp
adc
pop
cli
pop
push
dec
cmc
sbb
ljmp
sbb
sbb
ja
out
push
add
clc
or
fs
add
ret
hlt
fstps
or
mov
xchg
out
movsl
sti
mov
cmp
scas
fidivrl
sbb
popf
pop
iret
push
push
lret
mov
inc
clc
sub
test
mov
push
mov
clc
sub
fnstcw
push
jo
push
clc
fwait
imul
sbb
lret
jbe
jge
scas
addr16
js
or
roll
dec
test
ljmp
leave
out
ja
leave
cmp
inc
mov
adc
fucom
push
rcl
js
sbb
in
je
jmp
aad
fistps
dec
and
push
fcomp
cwtl
fwait
pop
das
jns
imull
cld
adc
pop
ficoml
push
out
xor
xor
inc
fwait
cmp
adc
je
sub
les
push
sbb
inc
mov
lock
pop
adc
jmp
adc
cmpsb
loope
int3
and
dec
iret
sbb
negl
inc
jg
jecxz
add
mov
mov
push
cwtl
ret
fcompl
add
jns
ret
andl
sbb
icebp
cwtl
aas
adc
pop
test
xlat
test
add
inc
or
jmp
imul
sbb
cwtl
or
int3
loopne
dec
aaa
in
test
das
sbb
pop
idivl
out
push
push
and
mov
sbb
dec
xor
test
mov
mov
in
incb
cli
fs
std
and
ja
stos
push
push
outsl
in
cltd
filds
jns
push
mov
subl
xor
push
mull
jge
sub
lret
xchg
popf
jbe
adc
rorl
inc
and
out
fcomip
cmc
divl
js
fisttpll
inc
jecxz
mull
sbb
mov
aad
ss
pop
jb
jecxz
push
mov
or
das
loope
add
xor
xchg
pop
aam
mov
addr16
out
in
xlat
mov
mov
ficompl
pop
pusha
negl
popf
and
push
outsb
leave
sub
mov
out
clc
cmpsl
rcrb
test
out
add
cmp
jns
testl
lcall
ds
jmp
mov
mov
inc
push
ja
movswl
push
pop
dec
pop
jmp
dec
imull
loope
add
shlb
adc
das
cmp
xor
xchg
fbstp
testl
adc
je
fdiv
sub
adc
stc
enter
aam
scas
imulb
fbstp
insl
jmp
mov
shl
pop
push
sub
loope
xor
dec
lock
js
dec
jecxz
cmp
or
test
sarb
popf
into
loope
add
and
jmp
scas
cmp
fistpl
mov
aas
xor
fdivl
pusha
mov
jecxz
mov
mov
fst
repz
jnp,pt
adc
or
add
mov
lret
sub
jb
inc
out
cmp
imul
cmpsl
add
dec
imull
jecxz
ret
mull
cmp
push
jl
repnz
pop
divl
and
sbb
dec
imul
in
and
xchg
lock
imul
movsl
testb
movsb
adc
in
adc
dec
aaa
cmp
les
repz
pop
int3
rorb
in
loopne
jg
fadds
aad
in
jne
sbb
pop
mov
test
sbb
movb
icebp
mov
notl
es
or
or
xor
popf
push
xchg
outsb
xchg
sub
xchg
jnp
jns
pop
and
int
or
iret
cwtl
repz
xchg
adc
mull
test
in
lahf
test
idiv
imul
xlat
push
xchg
xor
icebp
addr16
ret
mov
push
xchg
inc
out
nop
jne
lret
divl
hlt
mov
cmp
ret
nop
int3
sub
mov
pop
testl
dec
and
lcall
pop
xor
rclb
fcomip
rcrb
push
pop
jne
dec
mov
subl
mov
push
loope
flds
repz
mov
cmp
adc
inc
cmp
pushf
adc
int
cmp
loopne
adcl
jb
dec
ret
mull
and
pop
mov
cmpsb
push
into
inc
cmp
test
adc
dec
mov
mov
insl
test
jl
data16
mov
hlt
js
lods
in
sti
je
add
out
jbe
xchg
adc
jns
sbb
xchg
lods
adc
sbb
and
jbe
testl
or
adc
jp
decb
js
shl
sub
sub
ds
dec
add
in
sbb
dec
in
outsl
in
adc
mov
fwait
jp
testl
inc
push
pop
in
push
sbb
insb
idiv
ret
in
mov
mov
testl
and
notl
xor
adc
jp
pop
test
loope
jmp
negl
adc
shrb
call
fdivrp
jbe
cmp
lret
out
aad
imul
scas
pop
punpcklbw
test
cmp
xchg
testl
mov
xor
divl
dec
push
and
iret
test
sbb
in
xor
int
add
jl
xchg
pop
inc
testl
out
ss
test
push
pop
mov
sub
or
je
pop
out
add
pop
jne
imull
mov
insb
dec
mov
bound
stos
insb
fnstenv
div
push
xlat
adc
ror
lcall
insb
in
cli
fistpll
xor
inc
mov
es
loope
inc
sar
jnp
lods
out
xchg
push
add
adc
dec
ja
aaa
mov
mov
mov
mov
idiv
pop
sahf
dec
push
ficoml
test
xchg
data16
sahf
add
aad
ljmp
ret
cmp
int3
cwtl
xor
adc
shrb
ja
dec
imul
mov
push
pop
lret
dec
sub
pusha
jl
pop
push
dec
mov
insb
out
sti
push
sbb
and
test
lock
jne
sbb
mov
testl
enter
and
loope
daa
push
inc
mov
jo
add
sub
mov
adc
mov
adc
out
pop
out
outsb
and
dec
pop
adc
idivl
mov
and
idivl
pop
sbb
adc
lea
icebp
xchg
jno
ss
divl
outsl
rcr
sub
clc
adc
mov
dec
je
jnp
arpl
std
sub
fsubrp
inc
push
imul
pop
cli
idivb
jge
outsb
cmc
sub
pop
jmp
sub
movsl
push
inc
sbb
dec
sub
cltd
js
out
nop
add
inc
fiadds
sti
imull
outsb
inc
jmp
dec
push
aad
inc
negl
je
out
pop
mov
lcall
inc
dec
test
je
arpl
out
sub
imul
mov
pop
xor
aaa
mul
rorl
or
xchg
int
hlt
sarl
aad
lds
notl
sub
or
mov
or
jo
fstp
fldt
jge
out
out
shrb
insl
es
fildl
movsl
mov
out
or
ds
mov
jl
fcomip
xor
test
inc
push
mov
add
jo
pop
cmp
subl
push
std
fs
pop
sahf
testl
jmp
mov
scas
mov
idivl
push
dec
add
out
call
outsl
fldenv
jno
imull
jge
sbb
ret
mov
shlb
push
push
or
fbstp
sahf
jae
push
test
leave
mov
adc
add
cmp
xchg
inc
data16
dec
xor
in
jnp
adc
add
adc
xchg
add
inc
inc
fcmovnb
jne
xor
lods
adc
cmpl
xor
mov
pusha
out
adc
mov
andb
or
pop
xchg
adc
and
xchg
lock
push
aas
out
jl
push
cld
int3
test
neg
xchg
or
jo
cmp
inc
jnp
or
das
jl
xorl
jmp
repz
mov
sub
adc
jns
xor
dec
lret
inc
ror
mov
in
push
sbb
push
out
inc
nop
movsb
mov
pop
push
xor
in
int3
test
aad
mull
push
xchg
inc
push
test
adc
push
or
idiv
fwait
xchg
cmp
in
sub
jmp
movsb
nop
divl
sbb
addr16
inc
mov
sub
or
pusha
sahf
xor
add
aam
icebp
fs
push
cld
sub
loope
lcall
adc
xchg
in
and
xchg
sub
imull
cmp
sub
mov
dec
mov
pop
leave
test
jle
out
int
outsl
sbb
jo
push
push
cmpsl
pop
fucom
inc
cmpsb
divb
xchg
fcompl
lahf
jae
pop
fnstsw
pop
out
negl
dec
lds
xchg
lret
std
movsb
or
inc
clc
xor
pop
fildll
sub
shl
jo
xchg
test
iret
mov
negl
push
add
loope
xchg
xor
push
jbe
sub
divw
and
mov
out
imul
add
push
mov
iret
sub
shrb
loopne
lcall
mov
mov
idiv
push
jp
jg
mov
pop
push
test
stos
pandn
xchg
stc
out
nop
push
clc
testl
idivb
sub
notl
daa
sub
adc
inc
jle
enter
imul
add
inc
pushf
mov
jo
movsw
pop
imul
dec
notl
test
and
outsl
testl
pop
cltd
nop
dec
cmp
jmp
sub
fucomi
mov
xor
fcompl
dec
or
out
xchg
pop
jge
not
aaa
cmp
popf
stc
movsl
int
push
push
mov
testl
xchg
xlat
add
mov
cltd
push
mov
pop
rclb
es
dec
dec
inc
orb
insb
mov
mull
daa
pushf
mov
and
clc
jae
sbb
push
dec
jecxz
scas
pop
pop
pusha
cltd
pop
jo
popa
mov
xor
fwait
adc
adc
jmp
rcrb
inc
cld
nop
test
xor
insl
out
out
dec
imul
mov
lods
out
mov
pop
fs
add
or
mov
fdivr
mov
jb
xor
push
add
shlb
stos
loope
mov
xor
push
xchg
arpl
mov
fnsetpm(287
sbb
lock
mov
cltd
idivl
mov
sbb
cmp
jns
loopne
je
mov
or
xor
out
add
xchg
mov
in
and
fs
jmp
pop
jmp
pop
ljmp
addr16
insl
subb
mov
fucomip
jle
jge
xor
mov
in
je
pusha
mov
mov
pop
mov
cmc
push
sbb
push
fcoml
adc
addb
mov
jmp
adc
xchg
pushw
in
aaa
mov
xchg
repz
lcall
mov
xor
push
mov
es
push
lcall
sbb
sti
jne
cmp
pop
sbb
jae
shr
iret
arpl
mov
neg
repz
out
aam
out
sti
push
xchg
fisubrl
dec
jo
orl
popf
mov
dec
ja
mov
fidivrl
pusha
cmp
mov
sarl
ds
mov
cmp
sub
insb
mulb
jb
xchg
jno
mov
pop
and
jecxz
fidivl
add
mov
outsl
aam
lcall
loopne
fildll
rol
mov
fiaddl
lcall
ja
lcall
shlb
push
and
jle
hlt
jle
icebp
dec
je
insl
sub
jo
inc
aas
testl
fidivl
dec
adc
cmc
stos
push
hlt
adc
mov
mov
fsubrl
sub
shlb
lea
dec
divl
inc
lcall
and
mov
jnp
leave
mov
fbstp
or
sub
mov
add
into
pop
jae
mov
nop
stos
cld
jmp
imul
test
fadds
ffree
notl
arpl
les
and
fbstp
jmp
xlat
dec
sbb
jmp
fs
push
jne
jno
outsb
mov
inc
js
xor
mov
adc
loopne
push
pop
je
ficoml
push
mov
in
test
scas
negl
dec
xor
shl
test
vpmacsdql
pop
or
jnp
stos
ffreep
pop
lret
mov
dec
ret
xchg
push
and
xor
test
mov
cmp
out
movl
jecxz
rclb
mov
test
cmpb
shll
mov
adc
sub
mov
cmp
negl
into
and
call
mov
test
call
push
ljmp
jne
notl
xor
mov
fsubrs
xchg
imull
mov
mov
jo
movsb
stos
popa
lock
pushf
div
shrb
pop
xor
mov
mull
mov
dec
inc
sbb
and
and
xor
pop
mov
lea
push
les
notb
push
idiv
push
lahf
xchg
std
xchg
pushf
imull
insb
fwait
mov
jmp
ror
or
les
add
nop
add
and
inc
imul
les
jp
push
cmc
sti
fst
lea
testl
jns
cltd
imull
neg
xor
lret
mull
jns
testl
adc
out
sbb
pushl
insb
imull
mov
and
repnz
in
notl
or
and
jo
adc
sahf
testl
test
leave
subb
add
in
sub
icebp
push
push
and
outsb
and
mov
in
pop
lock
popf
inc
sub
adc
scas
testl
mov
xor
dec
mov
int3
push
testl
and
inc
clc
jb
jge
sub
xchg
in
fwait
dec
notl
push
int3
outsb
movsb
inc
push
push
rcrl
out
mov
xchg
je
inc
or
inc
lock
aas
sti
mov
jmp
int3
iret
push
and
hlt
loopne
insl
mov
in
negl
test
movb
jecxz
jmp
rorl
notb
push
mov
sbb
gs
loopne
imul
cmp
push
sbb
adc
push
fwait
and
add
fidivrl
cmc
aad
ja
push
shlb
sbb
pop
add
scas
xor
shlb
or
loope
scas
sub
inc
push
repnz
out
ljmp
mov
inc
push
ds
in
sahf
roll
inc
jne
xor
rcrl
pop
mov
mov
cld
lahf
fidivrs
cld
sub
shr
add
pop
repnz
mov
fiadds
fcoms
jo
mov
xchg
mov
push
in
and
add
ljmp
aaa
pop
testb
cwtl
xlat
outsl
push
inc
testb
shl
out
adc
sbb
adc
jb
pop
cmp
inc
lods
lock
outsb
or
add
loope
adc
ja
shrl
scas
jecxz
jbe
jp
ljmp
mul
pop
arpl
adc
outsb
insb
xlat
loope
mov
in
sbbl
add
ja
sub
cs
repnz
sub
add
out
mov
jl
jg
xchg
das
mov
push
loopne
sub
dec
hlt
jb
mov
pop
out
out
sbb
jl
scas
fbstp
ret
int3
sbb
ficoml
inc
outsl
in
push
push
mul
jne
out
cwtl
movsb
mov
repnz
data16
push
loope
testl
cmp
testl
xlat
jb
cmc
in
mov
dec
orb
mov
les
xlat
jo
mov
mull
pushf
ror
pop
adc
jbe
mov
movsl
mov
add
in
aam
mov
lods
xchg
test
mov
neg
cmpsb
dec
push
mull
cltd
pop
pop
test
enter
mov
add
mov
jp
or
sbb
fwait
shl
aaa
ja
and
fdiv
cld
into
cs
sbb
ficoml
divl
xor
lcall
cmp
and
shl
or
jb
mov
push
aam
or
testl
cmpsb
jbe
xchg
pop
push
std
and
cmp
xchg
lea
push
lods
test
dec
xor
jo
cmc
adc
andb
out
or
pop
testl
pop
mov
inc
testl
loopne
pop
sub
repz
neg
shrb
xchg
jecxz
sub
jns
mov
xor
xor
or
push
lds
test
negl
das
push
fidivl
inc
cmp
and
inc
sbb
aas
in
push
xchg
mov
scas
testl
jne
divl
jl
test
adc
divl
dec
stos
mov
adc
sub
pushf
shlw
cmc
adc
iret
fdiv
mov
test
mov
lods
adc
in
cmp
or
inc
jle
out
xchg
pop
mull
push
lods
cld
adc
inc
jmp
add
fidivs
fcomps
imull
dec
cmp
pop
jno
idivl
dec
loop
in
adc
testl
insl
jge
mov
cltd
push
lcall
mov
xchg
jnp
nop
cmp
in
ret
out
and
xor
imul
xor
movsl
neg
cmpsb
adc
testl
mov
mull
mov
testl
gs
testl
inc
lods
adc
sub
cltd
sahf
divl
cmp
es
mov
call
shll
mov
inc
fwait
imul
je
push
data16
cltd
pop
cmp
jnp
nop
sub
xchg
imul
add
mov
lea
fistps
negl
cmp
iret
push
lock
testl
or
test
loope
mov
ljmp
in
divl
insb
cltd
mov
jp
xor
mov
into
jb
ret
loop
xchg
xchg
inc
aam
mov
imul
sbb
lret
scas
daa
and
fincstp
inc
into
dec
or
add
xor
es
aas
xchg
add
les
ret
sub
pop
div
in
pop
jne
pop
push
imull
fstpt
inc
ret
iret
sti
ja
sti
pop
xchg
sub
mov
jmp
jae,pt
div
sbb
testb
xchg
push
mov
out
repnz
mov
fs
fidivrs
lret
jmp
push
pushf
ss
xchg
adc
fistl
xchg
mov
imul
cmp
jb
xchg
ret
sub
in
insb
divl
sahf
test
notl
fsts
mov
mov
lock
test
mov
into
mov
fidivl
inc
out
mov
xchg
repnz
cmpsl
pushf
or
jp
xlat
mov
loope
lret
neg
pop
dec
jns
mov
jno
and
xlat
xchg
mov
cwtl
add
clc
cld
sbb
movsb
jecxz
bound
dec
cmc
fbstp
adc
out
mov
mov
dec
loope
dec
in
in
push
nop
nop
int
out
test
addr16
not
adc
add
hlt
jbe
xchg
movsb
pop
mov
call
mov
jo
cmp
or
outsl
mov
pusha
dec
jnp
push
sbb
push
sub
lock
xor
out
addr16
enter
test
jl
xor
je
scas
mov
pushf
mov
xor
xchg
xor
imul
adc
mull
xlat
movsl
idiv
jae
fcoml
sbb
inc
in
leave
cld
cmc
cmp
xor
jle
into
cmp
mov
and
hlt
je
lahf
dec
and
mov
pop
jecxz
cli
push
ss
ficoms
fcomps
pop
div
and
ljmp
scas
and
xor
mov
gs
movsl
or
xor
xchg
jbe
into
rorl
push
data16
and
push
imull
movsb
push
addr16
mov
dec
pop
xchg
out
shl
pop
dec
add
aaa
jne
and
call
decb
decl
sbb
mov
loope
pop
mov
in
pusha
mov
je
mov
lods
scas
xor
ljmp
orb
pop
jno
push
cmp
mov
fucomp
testl
mov
xlat
dec
sub
mov
push
imull
mov
insl
pop
cmpsl
xor
lods
testl
lds
cmp
mull
mov
jecxz
idivl
inc
ljmp
fwait
test
pop
int
negl
mov
stc
out
aas
mov
push
add
ss
insb
or
mov
stc
stos
out
into
jnp
mov
test
jb
push
mov
jl
sub
cwtl
pop
xchg
inc
stos
mov
xchg
cmp
xor
testl
nop
cs
scas
aas
negl
push
cmp
jns
dec
fistpl
cld
sbbb
cli
pop
xchg
xlat
imul
sbb
sbb
xchg
notl
addb
in
xchg
div
mov
test
leave
add
inc
sbb
dec
shl
inc
in
out
mov
leave
dec
divl
jne
cltd
ja
mov
stos
andb
xchg
ror
jae
jl
mov
rol
xor
insb
jge
sbb
mov
idiv
subl
div
mov
xlat
mov
jae
xchg
pop
outsl
sub
out
mov
lods
stc
not
dec
xor
data16
aaa
aam
push
lock
push
lock
mull
xchg
mov
negl
cwtl
fimull
testl
adc
xor
scas
lods
dec
insl
sti
test
push
and
xchg
xor
jns
mov
test
cmp
inc
mov
outsb
sbb
xlat
jecxz
jo
lret
in
movsl
xchg
pop
je
in
jmp
out
stos
pushf
in
pop
test
adc
inc
sbb
add
adc
sbb
inc
lret
inc
sub
add
test
sub
push
xchg
jne
mov
insb
dec
mov
and
lahf
or
gs
test
xor
bound
fsqrt
push
cmp
mov
enter
out
movsb
dec
jne
mov
rcrb
call
pop
mov
popa
mov
xchg
mov
in
xlat
or
nop
ret
jno
cmp
fnstsw
loop
daa
testl
je
negl
aad
iret
testl
push
divl
outsl
jb
pop
adc
mov
sub
mov
mov
nop
notl
arpl
inc
lcall
shlb
dec
movsb
es
imul
lahf
mov
pop
std
or
testl
mov
stos
into
fists
testl
lret
mov
pop
js
mov
mov
shl
sbb
outsb
jae
clc
xor
or
mov
pop
mov
enter
in
out
idivl
imulb
les
push
insb
stc
mov
sbb
pop
inc
sub
notl
mov
jmp
hlt
cld
cli
imul
and
adc
jne
ljmp
insl
xlat
push
jae
sub
lcall
lods
mov
sub
pop
xor
mull
sbb
mov
imull
jg
popf
mov
add
add
jp
adc
loop
pop
negl
xor
mov
repnz
fs
mov
mov
sub
inc
neg
inc
scas
cs
loop
ja
push
fucomip
fdivl
sbb
aas
sti
out
cld
aaa
cmpsb
neg
xor
loope
add
pop
push
inc
stc
std
in
pop
pop
push
popf
imull
cld
and
adc
jns
ret
sbb
add
jnp
test
fs
pop
add
mov
test
mov
cld
notl
or
xchg
cmc
les
pop
out
inc
jle
data16
push
clc
out
aam
mov
add
adc
mov
add
ds
idivl
push
test
or
imull
mov
xchg
inc
dec
pushf
push
movsl
imul
out
clc
add
dec
gs
mul
loopne
xchg
jge
push
push
dec
out
mov
data16
jmp
pusha
push
inc
jge
xchg
scas
lahf
daa
jns
or
and
sub
or
mov
rcll
cmp
movsb
inc
out
push
and
dec
inc
aas
xchg
xchg
jl
pop
data16
fisubrl
imull
add
pop
mov
jbe
mov
ficoms
jmp
fisubl
out
outsl
fs
popf
xchg
arpl
into
mov
fcoms
lods
popa
mov
ljmp
xchg
inc
jo
dec
sbb
add
stos
pop
cld
add
iret
xlat
mov
and
fidivrl
pop
test
inc
in
inc
jp
mov
jg
and
fneni(8087
xor
mov
loopne
jg
xor
testl
sahf
or
fiadds
mov
add
mov
loop
pop
movsb
sub
in
jle
fidivrl
in
hlt
inc
ljmp
add
fcoml
fcmovbe
leave
js
pop
imulb
or
out
jmp
jb
push
out
fsubp
lock
cltd
push
cmc
je
or
fisttpl
mov
cmpsl
sti
pop
inc
aas
lods
add
jmp
ja
mov
push
jle
clc
jge
push
shr
push
ficompl
jae
insl
xchg
jbe
out
repnz
mov
out
ficompl
dec
pop
addr16
mov
pop
or
mov
ja
jb
sbb
xchg
jmp
in
push
mov
xor
jae
inc
xlat
xchg
jge
mov
sbb
pop
xchg
push
scas
push
jl
mov
sahf
inc
push
test
aaa
cli
sub
cmp
sbb
in
in
mov
fidivrl
test
in
add
out
jo
cs
push
mov
inc
scas
idivb
xor
imul
adc
mov
stos
dec
cmc
ret
push
pop
pop
dec
aam
jne
fcompl
mov
imul
add
arpl
imul
mov
or
xor
mov
inc
push
cmp
adc
outsl
jg
inc
xchg
mov
movsl
adc
xor
imul
pop
or
lds
mov
lods
mov
lcall
jmp
cs
mov
xchg
push
test
fs
pop
mov
sbb
lock
lahf
jo
cmp
cwtl
adc
inc
fld
ja
test
inc
mov
sub
pop
mov
or
xchg
cmp
repnz
out
hlt
push
jg
add
out
addr16
pop
xchg
popa
lock
movsb
xchg
ja
lods
fcmove
mov
xchg
rep
xlat
ret
shll
or
jecxz
push
xor
movsb
mov
and
pop
icebp
or
push
icebp
adc
jae
dec
mov
jmp
popf
lock
xchg
sub
add
push
jns
cmp
fidivl
es
jmp
inc
mov
das
stos
out
pushl
ret
and
xor
sub
loop
inc
jmp
aam
ljmp
popf
insb
mov
cmc
push
xchg
sbb
push
ficoml
mov
mov
xor
data16
cmp
pop
fisttpl
ljmp
repz
adc
shlb
ja
jae
inc
data16
outsl
sbb
sub
mov
jmp
mov
shll
jmp
out
mov
icebp
cmpsl
dec
jle
jecxz
pop
ss
jg
inc
pop
out
scas
xor
push
scas
cld
xchg
repnz
shll
repz
subl
mov
pop
jle
jb
or
xchg
rcrl
shrb
add
cmp
into
adc
jmp
mov
in
fsubrl
xchg
dec
ficoml
pop
in
leave
out
fcoms
nop
xchg
in
push
jge
and
hlt
lock
xchg
or
out
add
cmp
mov
cmp
int
pop
addb
xchg
hlt
mov
lea
jl
push
in
xchg
cmc
outsl
ficoml
jo
lods
cli
bnd
inc
jbe
fimull
out
pop
mov
add
xchg
push
sub
aad
int3
cwtl
stos
mov
mov
loop
jmp
imul
xchg
push
xor
out
inc
int
mov
pop
jp
testl
je
repz
sub
jno
fsubr
testl
scas
negl
inc
jecxz
notl
cltd
cmc
js
imull
cmp
dec
negl
insb
fildl
divl
sub
mov
dec
dec
adc
fcoml
xor
jge
not
and
ss
out
orl
mov
push
dec
idivl
mulb
loop
fwait
enter
dec
inc
cmpsl
push
xlat
fnsave
icebp
mov
ljmp
mov
fnstcw
repnz
push
adc
sti
sbb
pop
inc
rcll
add
in
testl
inc
inc
pop
fdivr
notl
fs
mov
aad
sub
shl
pop
ljmp
cmpsl
pop
xchg
negl
icebp
sub
fistps
lea
cs
inc
or
xchg
cld
fs
iret
out
mov
fimuls
pop
out
repnz
sti
cmp
mov
jnp
notl
lods
inc
imull
sbb
test
sbb
lret
fbstp
mov
popf
and
ss
outsb
sbbl
jp
rclb
jo
pop
loopne
popa
lods
mov
xchg
cmpsb
mov
sbb
sub
sub
ret
addb
xor
divl
xchg
push
insb
xlat
test
xchg
rcr
ds
adc
sbb
lods
pusha
mov
mov
testl
xor
pop
fwait
inc
insl
jle
push
jae
je
pop
movsl
aad
jb
xlat
dec
enter
out
and
mov
xlat
in
outsl
mov
pop
push
pop
add
pop
movsl
fldt
mov
sub
pop
mov
xchg
int
jb
cmp
mov
and
testl
mov
js
aam
out
dec
lods
cmp
stc
clc
sub
xor
cmp
and
scas
js
xor
pop
rolb
sbb
mov
jmp
lods
push
xchg
int3
jae
shl
int
mov
and
cmp
push
xor
jae
dec
dec
filds
xchg
ss
mov
movsl
movsb
cmp
push
neg
push
test
jno
adc
and
lea
je
mov
out
pop
arpl
mov
les
mov
fwait
stc
out
cmc
out
bound
pop
pop
push
push
fsub
fnstcw
adc
fcom
and
ffreep
jmp
jle
mov
push
mov
out
out
xchg
mov
lahf
shl
mov
cmp
gs
dec
inc
outsb
cld
test
sub
jne
inc
jge
jmp
dec
push
testl
push
notl
ret
push
and
cmpsb
push
arpl
xor
mov
testl
mov
xor
in
notl
jb
cmpsb
mov
popf
aaa
outsl
popf
and
sahf
push
je
addr16
xchg
xchg
jmp
push
fcomi
adc
mov
sub
test
push
mov
stc
xchg
testl
cli
pop
bound
mov
pop
mov
mov
inc
adc
sub
xchg
or
jge,pt
in
pusha
cmp
cwtl
aas
sbb
and
mov
and
fbstp
mov
mov
push
dec
addr16
push
sub
cli
and
mul
dec
mov
xchg
es
pop
jo
and
sti
lods
test
in
outsb
fs
xor
xor
jb
mov
ljmp
cld
idivl
mov
aas
xlat
pop
shlb
xor
out
aam
mov
pop
sbb
stos
add
imull
jnp
mov
adc
cmpsl
mov
push
aad
pushl
mov
adc
adc
out
push
adc
xchg
dec
pop
in
mov
shrb
insb
lods
call
outsb
aam
pushf
xchg
mov
or
fsub
aas
mov
mov
pop
divl
pushf
or
in
mull
outsl
subl
testl
in
mov
pop
lock
negb
repz
mov
sbb
mul
insb
orb
mov
add
add
repz
imull
push
icebp
push
sbb
sarb
fildl
in
negl
mov
dec
out
adc
ss
lret
testl
fistps
pop
xchg
dec
outsl
sub
sbb
jmp
xchg
data16
xchg
jge
fstpl
int
mull
filds
cli
sbb
mov
movsl
lahf
lret
mov
cmp
divl
lcall
adc
pop
inc
ljmp
add
cwtl
xchg
jbe
addr16
fcmovnbe
mov
gs
adc
adc
mov
fdivp
imul
ljmp
in
out
sbb
icebp
cmp
inc
je
and
cli
lcall
push
popa
in
frstor
sahf
jmp
push
xorl
fsubs
mov
pop
pop
mov
push
mov
daa
pop
jo
call
out
xchg
pop
test
movd
xor
insl
sbb
add
fdiv
adc
mov
addr16
push
mov
aad
test
imul
jg
jb
add
out
cmp
lods
out
add
out
aam
fdivl
mov
notl
mov
inc
shll
divl
iret
daa
jp
loopne
sti
jle
loop
not
test
mov
push
dec
cltd
sar
mul
clc
xchg
arpl
aad
xor
and
orb
inc
negl
in
mov
jae,pt
loopne
in
fdivrp
negl
cld
sbb
xchg
mov
lods
in
pusha
or
sbb
in
idivl
xor
sbb
pop
jne
and
fincstp
mov
and
inc
push
sub
cmpsb
pop
or
mov
adc
xor
cs
inc
call
jg
iret
leave
not
sub
int3
stos
jbe
leave
xor
cmp
shrl
cmp
repnz
pop
adc
movsl
clc
imull
mov
inc
flds
xchg
dec
adc
push
out
adc
add
idivl
cmp
addr16
imul
adc
pop
ret
sbb
icebp
shrl
jne
ret
xlat
add
mov
dec
and
and
pop
lret
or
ret
negl
jno
dec
out
enter
jg
add
jge
fsubr
scas
notl
lahf
test
mov
pop
and
out
cmpl
in
xlat
fcomip
push
xor
cltd
sub
rcrl
fbstp
inc
mov
add
leave
and
xchg
lock
sti
mov
xor
or
fwait
adcb
push
ss
jg
dec
movsb
adc
dec
xchg
int
jecxz
inc
pop
faddl
in
clc
sub
popl
mov
cmp
mov
inc
lea
mul
fs
push
aaa
mov
movsb
notl
repz
sub
nop
and
notl
xchg
test
test
fwait
stc
jge
pop
div
jecxz
ret
sub
in
idivl
mov
mov
push
add
and
adc
xor
adc
insl
ds
add
and
jne
or
or
aam
testl
movsb
push
pop
lock
mov
sub
jl
shr
jo
inc
xor
lret
movsb
dec
jne
mov
push
fdivl
lds
push
sbb
out
pop
aad
test
lret
push
ret
xor
idivl
xor
lea
push
adc
mov
ret
data16
repz
test
mov
xchg
test
repnz
lret
sahf
iret
mov
lret
fiadds
dec
lahf
pop
repz
xlat
mov
jnp,pt
mov
fidivrs
add
out
xchg
pop
adc
imull
dec
lock
xchg
lret
mov
ficomps
aad
pop
std
xchg
out
int3
test
mov
pop
jge
fisttps
mov
pop
and
and
gs
sahf
dec
test
mul
inc
cli
dec
sbb
sub
sub
dec
mov
testb
out
pop
jge
icebp
ficomps
xlat
sahf
add
les
xchg
or
testl
frstor
xchg
cmp
fdiv
ficomps
jle
and
jmp
adc
jo
mov
int
pop
or
dec
xor
adc
cmp
adc
insb
addr16
fwait
mov
je
out
in
xchg
dec
idivl
lret
xchg
push
pop
scas
sub
mov
pop
sahf
fcomip
test
xchg
push
jb
ss
cmp
outsl
xor
dec
xchg
sub
pop
mov
sbb
addb
dec
mov
mov
lcall
stc
repz
loope
notl
ret
mov
pop
xlat
cmp
xchg
push
shlb
fidivs
leave
adc
or
scas
test
fsts
inc
pop
arpl
mov
cmp
pushf
int3
in
mov
xor
jp
jg
xor
inc
notl
or
ret
or
neg
test
xlat
int
fdivs
js
loop
sub
insb
test
mov
mov
inc
fcompl
mov
das
inc
xor
xor
push
imul
mull
hlt
cld
jbe
stos
fs
neg
dec
mov
notl
or
idivl
sti
hlt
into
cmpsl
loopne
push
fucomp
inc
jecxz
sbb
jl
mull
ss
jmp
push
xor
mov
jle
test
xchg
in
mov
aam
pop
negl
int3
bound
neg
cmp
pop
or
adc
test
xor
xchg
int
fcomps
leave
adcl
add
add
int
adc
les
call
idivl
popa
add
loope
xchg
repz
add
mov
inc
enter
je
push
gs
loopne
mov
dec
rorb
in
mov
mov
mov
xor
mov
sarl
jno
rorl
lods
es
dec
xchg
mov
lret
in
and
sbb
jmp
sahf
mov
or
xchg
repz
in
push
mov
in
out
pop
pop
xchg
pop
mov
sbb
sub
add
push
adc
jmp
adc
mov
cli
js
cmp
mov
add
xorb
int3
mov
out
dec
sub
mov
push
inc
add
pop
mov
inc
cltd
les
push
adc
test
push
push
out
xchg
jmp
scas
mov
lock
loop
mov
addr16
fcompl
mov
enter
popa
mov
or
mov
or
shrl
jle
push
or
loope
loopne
xchg
int3
fisubl
repz
pop
repnz
je
xchg
jnp
aaa
bound
decl
jmp
and
xchg
mov
arpl
mov
pushf
sub
cltd
adc
xchg
loop
and
fs
testl
clc
sbb
into
pop
scas
hlt
data16
je
push
aaa
lret
mov
sub
cmp
jbe
out
jb
sbb
mov
dec
out
cld
ret
push
mov
fmul
mov
inc
xchg
push
into
jle
mov
idivb
xor
pushf
pop
movsl
outsl
mov
push
sub
adc
cmp
jl
mov
mov
stos
or
sub
into
pushf
sbb
cld
jp
ljmp
mov
in
mov
movl
aad
mov
inc
add
aad
push
push
sbb
mov
jmp
xchg
out
mov
inc
je
inc
int
push
ja
inc
push
out
xorb
inc
fimull
lds
mov
ljmp
repnz
xlat
scas
push
inc
xchg
fidivl
imul
out
testb
mov
lcall
xor
pop
mull
ret
les
daa
in
sub
push
ss
mov
dec
or
notl
je
mov
inc
fimuls
leave
int
push
aaa
or
xlat
cltd
xor
cwtl
xor
pop
les
sbb
std
rolb
xlat
push
cmpsl
popl
dec
arpl
pop
imul
ss
fwait
mov
mov
dec
xorb
push
push
negl
das
cmpsl
lds
mov
inc
mov
arpl
in
xlat
pop
inc
xchg
mov
and
ss
and
jmp
sarl
sbb
testb
xor
ret
xor
cmpsb
or
cld
jns
in
sbb
out
subl
js
and
mov
jmp
loope
push
xchg
pop
sbb
pop
adcb
lds
xlat
lods
dec
stos
out
pop
shr
pop
call
add
adcb
sbb
jmp
idiv
insb
notb
push
aaa
push
mov
notl
stos
fs
jae
testl
fwait
sbb
cmc
ret
dec
sub
hlt
testl
mov
add
movsb
push
mov
dec
out
stc
and
leave
pusha
push
dec
int3
test
cld
cwtl
data16
sbb
mov
test
adc
cmp
testl
cmp
xlat
repz
test
pop
pmuludq
xor
aas
jle
dec
nop
roll
mov
fldl
imull
mov
jg
sahf
movsb
test
mov
mov
out
aas
xorb
repnz
into
inc
and
cmp
mov
int
icebp
cmpsb
lods
cltd
push
xchg
out
lahf
cmp
and
insl
sub
and
cmc
icebp
push
mov
push
fcmovnbe
mov
inc
negl
je
lret
sbb
adc
lds
notl
not
cmp
push
dec
cmc
negl
fiaddl
aad
imul
jg
mov
fbld
fidivl
mov
sbb
ret
mov
mov
cmpsl
mov
test
adc
and
movsl
loopne
lret
nop
adc
aad
xor
popa
ret
out
inc
jo
xor
mov
test
xchg
add
mov
addl
sub
out
aad
loope
jge
idiv
lea
inc
dec
pop
xchg
mov
pop
jbe
push
mov
imul
scas
and
jmp
adc
rorb
mov
lock
cmpsb
mov
cmp
js
cmpsw
add
scas
out
ljmp
inc
lahf
orb
jns
or
test
xchg
xor
jb
jne
loopne
mov
in
and
sub
or
loop
adc
ret
sbb
and
jb
push
ds
xor
adc
and
cmp
fnstsw
fildll
pop
push
cmpsl
cmpsb
xlat
or
add
xchg
pop
icebp
push
push
jp
aam
jge
sub
int
jp
mov
xchg
pop
js
or
outsb
lea
scas
loopne
stc
jne
es
mov
popa
mov
pop
pop
sub
cmp
add
jno
inc
inc
stos
pop
adc
shrb
jmp
dec
je
lods
cmpsb
nop
fisubrl
mov
pusha
fiaddl
fidivl
pop
fimull
bound
cltd
ljmp
dec
testl
mov
sarl
in
cwtl
imul
and
cld
sbb
jo
lcall
xchg
add
cmp
insl
enter
ss
inc
rolb
iret
push
nop
out
gs
inc
pop
in
repz
xor
dec
fsubr
add
jae
sub
push
js
repz
iret
out
stos
pop
in
cmp
pusha
repz
push
and
popf
pop
repnz
movl
mov
mov
jle
or
repnz
out
xchg
xchg
loopne
cmp
sbb
and
mov
out
aaa
pop
mov
fs
and
aaa
int
cli
xor
or
dec
inc
out
sbb
xchg
pop
lea
jno
lcall
sub
ja
out
push
push
or
add
clc
add
xor
xchg
leave
lret
mov
mov
ljmp
scas
jbe
dec
mov
int
addb
ja
pop
popf
xlat
ficomps
jecxz
test
xchg
cwtl
mov
rcl
sahf
or
out
imul
andl
cs
test
mov
js
mulb
outsb
je
cmc
gs
mov
jbe
xchg
arpl
mov
adc
insb
jmp
jecxz
popf
mov
faddl
rcll
repz
icebp
inc
daa
push
mov
mov
add
sub
testl
fcoml
push
lods
mov
adc
into
pop
loop
and
cli
inc
sub
lods
jg
fbstp
adcl
into
push
jbe
test
mov
int
jge
mov
ss
jmp
jge
cld
ja
hlt
scas
cmpsb
iret
test
out
loopne
and
cmp
pop
add
insl
pop
mov
push
mov
nop
hlt
loopne
xchg
ja
pop
outsb
sub
sbb
movb
fisubs
icebp
aam
mov
insl
ret
int3
out
xchg
xchg
in
adc
jmp
lret
icebp
and
xlat
hlt
mov
inc
dec
scas
out
adc
rcl
call
in
addr16
mov
xor
push
ja
or
popl
sbb
jmp
add
insl
push
mov
xchg
out
sbb
stos
mov
movsb
in
sarb
lods
fcomip
ljmp
adc
push
adc
dec
jae
repz
dec
sub
jp
test
fwait
jmp
cmc
inc
out
es
push
and
mov
ljmp
jae
or
mov
dec
sbb
jno
int
mov
dec
test
adc
stos
rcrb
leave
xor
fldenv
testb
mov
adc
push
and
lea
xor
cmp
inc
xlat
psubd
add
push
leave
pop
insl
lahf
xor
and
mov
in
sbb
push
arpl
sub
mov
push
push
movsb
aas
adc
call
cmpb
gs
mov
ja
jp
or
das
jge
imul
icebp
js
divb
lods
add
daa
mov
lods
mov
sub
cmpsb
push
fsubr
test
mov
push
or
fldcw
aas
mov
in
shlb
pop
int
jp
and
imul
jno
ret
jne
add
in
pop
outsb
lods
out
mov
push
lods
push
imul
adc
cltd
adc
js
in
call
repnz
shll
pop
cs
push
mov
test
inc
repz
xchg
out
pop
shlb
dec
xchg
xor
negl
lods
ljmp
icebp
repnz
mov
mov
fisubrs
add
out
xor
push
scas
mov
fists
xlat
inc
xchg
mov
inc
shl
clc
xor
cwtl
sbb
xor
push
lods
ffreep
pop
dec
imul
std
cmp
dec
xor
ror
and
hlt
sub
insb
data16
or
push
gs
es
push
fwait
jo
inc
in
xlat
cwtl
popa
stc
and
mov
jmp
mov
mov
jns
mov
jle
pop
cmp
inc
lea
ja
insl
mov
dec
fistps
mov
jb
dec
sahf
ljmp
push
mov
pop
sub
mov
push
fwait
shrb
outsl
adc
lods
in
movsb
xor
mov
dec
add
sbb
mov
jecxz
shll
mov
mov
cmpsl
jb
shl
aam
imul
push
mov
adc
mov
std
sbbb
dec
cmp
pop
inc
icebp
ds
cmp
ret
cltd
mov
out
cs
test
lea
add
out
cmp
fimull
push
out
xor
divl
lcall
mov
xor
xchg
inc
sub
push
es
divl
cwtl
mov
in
adcl
add
pop
arpl
push
ret
pop
outsl
js
out
xor
loopne
lods
dec
aad
add
mov
mov
mov
xchg
mov
outsl
or
dec
cld
loopne
or
in
out
out
mov
daa
jmp
jmp
pop
xor
cmp
xlat
stos
ret
lock
xchg
les
fists
test
inc
push
movsb
or
mov
or
xchg
lahf
sarb
jno
pop
js
xchg
imul
push
pop
or
clc
stc
xchg
mov
pop
mov
xchg
popf
loop
arpl
adc
adc
mov
xchg
ds
jb
mov
fdivp
push
jg
xchg
imul
ret
push
testl
dec
add
or
push
xlat
mov
pusha
pop
push
pop
stos
pop
das
lret
jo
ds
in
ror
inc
push
jo
iret
out
pop
jg
fiaddl
mov
or
pop
daa
lahf
call
mul
pop
jle
inc
je
rcrb
fsubrs
rcll
data16
sahf
testl
xchg
adc
mov
push
sub
enter
sub
adc
out
pop
mov
xlat
sub
jle
push
pop
in
loopne
cmp
in
mov
adc
pop
mov
popf
mov
adc
fcoms
in
mull
xor
mov
push
enter
sahf
loope
inc
scas
outsl
dec
repnz
mov
fstp
leave
testl
insl
sbb
sti
jl
mull
ja
push
xor
ret
scas
sub
insb
jp
divl
fldt
and
add
fdivrs
xchg
jbe
xor
loopne
inc
xlat
lea
lcall
sbb
mul
out
push
int
es
loope
sub
push
aad
mov
lock
aas
inc
jb
push
push
insl
loop
jnp
adc
out
addr16
mov
mov
pop
testl
mov
pop
shlb
decl
lret
dec
imull
lds
es
popa
inc
mull
sub
xor
sub
negl
aam
nop
xchg
mov
mov
int3
fists
rorb
rcrl
mov
clc
sbb
jmp
jge
mov
and
loop
lock
mov
movsb
add
mov
testl
push
dec
xlat
loopne
ljmp
xor
aam
lock
inc
jnp
imull
and
and
adcb
into
and
mov
mov
scas
dec
push
shl
sbb
cltd
popf
test
fwait
jg
push
mov
hlt
push
push
push
fisubs
sub
ja
insl
scas
push
lahf
cwtl
negl
push
xchg
mov
movsl
xor
fwait
out
into
adc
idiv
aas
dec
dec
mov
or
add
cmp
arpl
movsl
popa
mov
loop
aaa
int3
push
dec
mov
stc
pop
fidivl
sbb
das
and
iret
sub
ja
ljmp
push
in
cmp
sbb
push
inc
jo
cwtl
addb
scas
push
cmp
dec
cs
outsb
shlb
mov
jmp
sbb
enter
jmp
popf
mov
cmp
in
inc
ficoml
lahf
mov
sbb
mov
mov
int3
xor
dec
es
addb
dec
xchg
mov
cmpsb
aaa
jl
pop
popf
shlb
xlat
ret
inc
push
or
ss
jmp
mov
add
ret
mov
and
mov
int
cs
filds
mov
mov
ret
sti
sbbb
inc
xchg
mov
int3
mov
sbb
out
jg
fcomp
out
lahf
repz
ljmp
jo
mov
jnp
cmpb
call
loopne
dec
cmp
mov
adc
orb
in
jno
ja
daa
adc
inc
push
push
loop
and
lahf
jae
jno
fstpl
je
sub
push
mov
fucomip
add
and
mov
pop
les
cmpl
lret
in
or
loope
testl
pop
cmpsb
not
outsb
pop
shlb
notl
mov
imul
jecxz
xchg
int3
imull
dec
loopne
xor
shl
mov
adc
shrl
sub
pop
mov
and
imul
inc
stos
cli
or
imull
out
add
jbe
and
out
push
arpl
xchg
xor
out
testl
adc
movsl
jmp
jecxz
cmc
xor
sbb
lcall
inc
push
mov
mov
jg
lret
fcmovb
sbbb
push
aaa
clc
xor
outsl
adc
in
aas
add
iret
fcomi
inc
mov
ds
out
jecxz
or
xor
mov
cli
notl
test
mov
fst
mov
or
dec
dec
and
adc
hlt
out
ljmp
add
fists
adc
mov
and
xchg
subl
cmp
scas
or
test
add
scas
push
cwtl
add
ljmp
jecxz
pop
or
test
popf
push
mov
outsb
js
mov
dec
adc
shll
fwait
push
dec
pushf
push
xchg
and
push
xlat
or
ljmp
daa
sub
add
ja
popf
fadd
fidivl
inc
pop
dec
repz
lret
sub
jne
cmp
xor
fcomp
fsubrl
inc
sub
in
pusha
adc
out
cmc
or
push
arpl
test
add
lret
sarb
ljmp
mov
fwait
and
imul
test
pop
mov
fimull
test
jmp
sub
xchg
push
cmpsl
lds
daa
fwait
mov
cmpsl
ss
inc
aas
ja
inc
jbe
push
cmpsl
cwtl
dec
imul
xorl
adc
mov
pop
xor
int
inc
aaa
push
popf
mov
push
int3
jecxz
push
mov
inc
jmp
cmc
jmp
fidivl
cs
pop
cmp
jecxz
int3
shlb
mov
leave
insl
xchg
jmp
adc
je
xor
mov
popf
mov
cmp
sub
cmpsl
mov
xor
sub
data16
sub
div
sub
mull
mov
fildl
out
sbb
in
lock
out
rorb
push
and
mull
mov
lods
or
lds
mov
pop
sub
adc
add
cmp
xchg
testl
cmpsl
mov
mul
jo
shl
cmp
jb
mov
add
ja
mov
xchg
fidivl
inc
xor
push
movsl
mov
cwtl
fcomip
push
negl
out
cmc
repnz
test
dec
add
cmpb
xor
and
imull
lock
lods
adc
jp
idiv
dec
sub
jecxz
fstl
pushf
aad
lods
in
sahf
xor
or
or
test
neg
popa
sbb
pop
aaa
adc
or
cli
add
xor
or
jl
ret
mull
ja
test
jae
adc
outsb
icebp
enter
ss
testb
xchg
negl
ret
push
pop
movsl
data16
cs
sub
stos
fistps
cmp
push
dec
and
in
mov
push
sbb
xchg
xchg
ret
xchg
aas
roll
testl
cld
xor
shrb
rcll
xchg
sbb
loop
jno
divl
int3
add
movd
and
cltd
sub
pusha
aaa
xchg
in
das
inc
sub
call
rolb
out
insb
jg
inc
movsb
dec
negl
pop
sbb
sub
in
dec
xor
fwait
add
add
inc
xlat
imul
es
pop
dec
mov
lcall
xlat
scas
fistpll
dec
cmpsb
and
out
sahf
jb
shl
jno
jmp
mov
cmp
out
shll
jmp
jne
jb
push
repz
outsb
divl
push
mov
fsub
push
call
xchg
push
insb
popf
dec
sbb
push
fcmovbe
fcomps
movsl
jns
xchg
push
push
adc
pop
mov
add
jle
pop
push
mov
add
sbb
insb
in
inc
cmpsl
je
adc
mov
xor
fwait
jp
idivl
out
sub
loopne
movsl
iret
and
test
stos
adc
fimull
test
or
add
daa
add
ljmp
xchg
addl
dec
add
sbb
inc
popa
mov
push
lahf
mov
sbb
xor
pop
in
inc
int
scas
or
inc
lcall
insl
repnz
jmp
mov
pop
cmp
push
ljmp
popf
cmpsl
mov
into
iret
sub
fwait
jbe
xchg
inc
outsl
stc
add
test
data16
sbb
jbe
fnstcw
movsb
fidivl
outsl
das
shlb
jae
out
test
pushf
dec
in
inc
push
jmp
xchg
mov
test
pop
inc
fdivrl
or
test
in
inc
fisubrl
push
pop
and
dec
inc
data16
xchg
adc
test
iret
xchg
ja
sbb
adcl
push
or
pop
cli
fisttpl
jbe
dec
xor
clc
es
inc
inc
xorl
insb
imul
daa
iret
and
dec
xbegin
ficoml
pop
mov
pop
lock
xchg
and
aad
leave
cmc
ja
mov
push
in
cld
addr16
cmpsb
cmp
popf
mov
sub
test
add
fimull
cmp
out
push
jno
add
mov
testb
popf
mov
ljmp
addb
sub
aad
fiaddl
and
inc
inc
or
push
sahf
je
andb
push
ljmp
enter
dec
or
jbe
sbb
pop
and
inc
jb
xor
inc
and
jg
jge
out
sbb
ds
or
js
adc
jle
jnp
mov
gs
push
jmp
add
jbe
in
enter
addr16
mov
mov
pop
arpl
dec
js
shr
nop
stos
test
leave
adc
dec
test
push
in
out
mov
sub
int
insl
mov
fidivrl
xchg
cltd
mov
dec
fadd
xlat
mov
lock
jns
xchg
or
outsl
ja
loop
jecxz
in
mov
sub
jge
das
jno
scas
and
inc
aaa
push
sub
ret
jo
cmp
out
dec
add
loope
adc
jge
jo
push
jbe
xor
pushf
in
ljmp
add
jp
jmp
cmp
ljmp
test
and
stos
or
push
jo
pop
and
xchg
cmc
and
xchg
nop
popa
mov
jle
loope
inc
hlt
test
and
jecxz
imul
arpl
std
pop
int
push
mov
movsl
les
fsubs
out
in
and
xacquire
add
cmpsb
xchg
push
cmpb
scas
ficoms
mov
or
jnp
push
push
inc
mov
mov
psrad
mov
cmp
pop
aaa
sbb
jmp
inc
sti
mov
rol
aas
push
dec
mov
lock
icebp
test
movb
mov
dec
stos
sub
push
rcrl
lahf
inc
push
xchg
movsl
sbb
fwait
les
mov
gs
sub
and
xor
mov
es
movsl
cltd
notl
int3
shll
sub
je
enter
fadds
xlat
mov
lods
fdivl
xor
lret
std
push
mov
cltd
ljmp
scas
loope
jl
sub
sub
and
insl
push
cltd
fisubs
push
sub
in
xchg
push
push
adc
jb
mov
gs
leave
mov
cmc
test
lcall
test
and
inc
cmp
push
in
aad
in
inc
jo
jle
adc
mov
dec
mov
xchg
loop
negl
xchg
out
xchg
imull
addr16
testl
sbb
cli
hlt
mulb
fdivrs
divl
xchg
dec
div
inc
gs
fsub
pop
sbb
out
mov
add
call
idivl
mov
xchg
xor
and
adc
jo
jmp
push
negl
dec
imul
adc
add
push
jo
loopne
rorb
test
mov
divl
push
add
negl
addr16
xor
iret
aas
mov
mull
and
pop
in
and
push
jno
add
bswap
push
cmpsb
dec
stos
xor
add
sahf
sbb
pushf
fcomip
xchg
dec
mov
adc
add
in
shr
ret
insl
testl
pusha
sbb
divl
fldcw
in
jo
lock
notl
rcrb
sahf
ss
cmp
imul
lods
xchg
mov
imul
testl
pop
adc
sti
jne
sub
shlb
stos
push
idivb
xlat
sub
fildll
scas
xor
push
cmp
imul
in
or
sbb
loope
into
aaa
fidivs
mov
xor
movsl
maskmovq
mull
pop
clc
dec
rcl
iret
in
mov
push
lock
inc
in
fcomps
fldt
xchg
pushf
push
mov
aad
mov
xor
xchg
arpl
fisubrl
mov
ja
rcll
mul
shl
lods
jne
into
not
and
push
mov
notl
cld
outsb
je
adc
mov
jne
cmp
fbld
sbb
sub
fs
testl
icebp
or
imul
insl
outsb
push
push
testl
adc
adc
testl
lods
aad
push
push
ret
testl
xor
lods
dec
fcomip
rorb
leave
repz
aas
daa
test
ljmp
divl
xchg
loope
stc
push
cltd
mov
xchg
push
mov
iret
mov
icebp
inc
popf
ja
inc
jle
push
jp
rorb
xchg
out
fmuls
jl
xor
notl
pusha
test
imull
pop
lret
adc
xlat
and
outsl
icebp
mov
push
aam
add
add
js
inc
inc
divl
mov
cmp
mov
in
test
jl
push
mov
out
inc
out
sbb
in
and
hlt
mov
dec
pop
dec
adc
loop
sub
xor
xchg
cmp
fbstp
push
inc
testl
xchg
data16
das
out
ret
mov
dec
and
add
icebp
js
jl
dec
mov
jmp
jno
lock
sbb
xchg
insb
jb
dec
sub
es
fisttps
and
gs
lcall
enter
arpl
divl
push
mov
insb
negl
mov
cmp
sbb
mull
xlat
outsb
dec
in
inc
lahf
inc
testl
xor
test
mov
imull
push
outsb
icebp
testl
scas
shlb
pop
add
repz
das
cmpsl
stos
push
mull
in
imul
aam
sbb
movsl
and
mov
xor
cld
xchg
xchg
and
cmp
loope
sti
add
add
jbe
test
mul
sbb
ljmp
push
insl
jbe
adc
inc
fisttps
loop
and
rdrand
fcoms
cs
ja
loope
adc
insb
adc
cmp
loopne
lods
cmpsb
pushf
je
testl
sbb
mov
inc
adc
notl
cmp
mov
test
outsl
cmp
test
dec
mov
bound
stos
xor
cltd
mov
push
negl
xchg
out
xchg
push
cmpl
mov
leave
push
les
cmp
xor
mov
repz
fsts
pop
xlat
xor
jmp
out
mov
leave
or
xor
cli
lret
rcrb
cmp
lahf
jb
pop
xorb
push
imull
loop
add
cli
or
mov
hlt
movsl
testl
icebp
fsts
fisttpl
int3
xor
inc
xor
gs
enter
add
test
pop
jge
imul
neg
jbe
dec
sbb
gs
pop
xchg
notl
popf
ret
xchg
movsb
jl
xchg
jmp
adc
xlat
test
mov
mov
dec
gs
mov
add
mov
fdivrs
mov
mull
pop
lods
testl
sbb
std
neg
mov
fnop
testl
jns
adc
pop
xchg
push
sub
xchg
loopne
jecxz
in
clc
adc
jge
lcall
mov
xchg
jle
sub
pop
jmp
aad
insb
fisttps
cmp
test
or
or
push
mov
shl
pop
fiadds
jo
testl
sbb
scas
push
push
insl
fdivr
add
stos
imul
xchg
mov
lea
dec
dec
xchg
xor
sbb
fildl
mull
mov
pop
ss
inc
jp
xchg
pop
fstpl
ss
xor
out
frstor
aaa
out
fsubl
fisttpl
ret
call
adc
push
xor
in
jg
out
mov
jne
add
push
imul
and
mov
imull
push
hlt
push
add
cld
cld
push
add
pop
cmp
pop
lret
movsb
aaa
sub
aad
fldl
les
dec
dec
xor
insb
int3
inc
push
dec
mov
ljmp
int3
adc
add
mov
adc
das
scas
dec
div
cmp
inc
imul
out
sub
loope
in
and
out
xor
loope
mov
inc
cmp
fcomps
mov
pop
movl
jecxz
loopne
andb
mov
dec
rorb
cmpsl
scas
adc
xchg
xor
ljmp
shr
inc
fs
testl
out
mov
lahf
pop
xchg
push
fcmovne
test
inc
icebp
jmp
shr
enter
rcl
in
cmp
mov
sbb
mov
cmp
int
ja
out
push
push
sub
test
div
xor
sub
repnz
testl
lods
inc
idivl
jecxz
testl
dec
aas
push
das
xlat
subb
shrl
test
gs
test
scas
clc
aam
fstpt
fwait
inc
int
imull
inc
fs
jle
negb
rcrl
hlt
pop
sub
jne
dec
imull
js
and
mul
add
pop
or
bound
ja
jmp
sub
add
fildll
push
sub
aad
cmp
jg
aam
into
sub
mov
lods
add
or
loope
push
or
fidivrs
loope
dec
jmp
insl
jmp
dec
filds
push
jge
fimull
mov
mov
sbb
xchg
mov
fwait
sub
popa
mov
mov
xchg
negl
mov
mov
jmp
mov
daa
push
mov
and
sub
idivl
movsl
pop
mov
lret
push
test
push
testl
fldz
mull
jg
pusha
add
repz
jns
outsb
hlt
lods
or
mov
adc
les
pop
add
cmc
cmpsb
dec
mov
xchg
shrb
outsl
testl
xor
cli
push
cmp
inc
iret
dec
stc
or
push
shlb
sub
ljmp
movsb
icebp
jmp
call
mov
cs
cmpsb
movsl
mull
ficoms
sbb
testl
rep
lea
stc
jno
sub
in
divl
ja
adc
sub
lods
mov
xlat
push
xor
mov
pop
imul
mov
cmp
and
adc
leave
testl
fstl
notl
jle
adc
pop
inc
and
ret
arpl
scas
sarb
iret
mov
lock
mov
dec
sbb
jg
insb
fildll
adc
mov
int3
shrb
mov
test
mov
pop
mov
aaa
data16
or
xor
stos
and
sbb
sbb
adc
sbb
mov
adc
out
inc
jle
and
mov
mov
and
xchg
and
sbb
aaa
std
imul
call
orb
loope
nop
fwait
es
jb
and
out
mov
push
shl
clc
arpl
dec
stc
cwtl
testl
sub
pop
addb
outsb
mov
mov
fwait
mov
push
inc
push
fnstsw
xor
inc
add
sbb
outsb
pop
loope
cmpb
adc
cmpb
inc
negl
out
cli
icebp
idivl
hlt
pop
sub
xchg
aad
dec
mov
adc
call
in
and
idivl
jge
je
jns
mull
mov
cltd
jle
fists
cmc
int3
cmp
push
inc
nop
xchg
jecxz
enter
bound
push
jmp
push
xlat
mov
cmp
imull
pop
das
and
arpl
cmpl
adc
fs
and
push
jne
test
push
push
push
xchg
sti
sbbb
sarl
cltd
xor
inc
mov
xchg
pop
cmp
in
sahf
jb
leave
mov
mull
jae
adc
mov
lods
pop
int
rolb
test
leave
pusha
push
push
test
push
push
inc
fistl
outsb
nop
addr16
mov
push
fisubl
xor
ret
mov
jp
mov
lea
push
jo
fs
scas
push
loopne
jecxz
xchg
rorl
mov
pop
stos
add
xor
dec
pop
mov
mov
inc
sbb
mov
in
cs
sbb
sets
sti
or
xchg
stos
dec
shrb
or
movb
imulb
data16
cwtl
cmpsl
sub
in
jnp
or
ficompl
ss
adc
dec
in
dec
fdivrl
push
inc
pushf
scas
popf
cmpl
push
mov
cmc
xlat
mov
scas
add
in
pop
out
or
fnsave
push
int
mov
sbb
mov
mov
flds
icebp
mov
aas
int3
lret
sub
mov
movlps
pop
test
jp
aas
loop
scas
jns
jne
jle
loopne
sahf
push
xchg
fcomps
in
push
mov
mov
fsubrl
fdivrl
xchg
ljmp
add
out
push
cmpsl
lock
jae
mov
movsb
and
xor
adc
mov
test
int3
aam
mov
sahf
ljmp
jb
pop
and
xchg
adc
bound
cld
pusha
stc
pop
inc
push
out
mov
xlat
out
jmp
mov
push
hlt
cli
imul
mov
mov
xor
mov
and
cmp
mov
adc
movsb
sarl
pop
ret
cmc
hlt
push
pop
mov
mov
lods
imul
addr16
jno
cmpsl
fdivrl
mov
lods
fstl
fstps
aad
xor
sub
jg
ljmp
inc
pop
lea
bswap
jge
stc
jecxz
lcall
std
outsb
mov
xlat
repnz
cmp
and
mov
pop
in
and
int
xor
repnz
fwait
lods
sbb
addr16
movsb
insl
mov
ljmp
mov
jns
mov
out
mov
js
imul
std
jmp
clc
and
cmc
in
out
popf
pushf
pop
mov
and
and
adc
scas
push
mov
jnp
out
sbb
push
int
loope
mov
and
aaa
stos
adc
cmp
xorl
xlat
push
lods
insl
or
xchg
jb
fs
out
ror
xchg
in
xchg
xor
lcall
fdivs
dec
out
pop
add
inc
movsl
les
out
or
sbb
shrl
jae
jbe
sbb
lret
fcmovu
pop
jb
jmp
lcall
dec
dec
flds
inc
xchg
imul
shrl
mov
in
lock
mul
imul
inc
jae
lea
ss
int
sub
pop
testl
mov
or
mov
movl
jne
rcrb
testl
rcll
push
out
jle
mov
dec
inc
mov
fistpl
push
xchg
test
and
testl
mov
mov
div
fisubs
not
and
pop
jno
or
dec
lcall
sti
ja
imul
add
push
test
and
jb
pop
out
jecxz
push
pop
in
jnp
lea
mov
mov
mov
lret
and
mull
jp
outsl
testl
and
out
mov
xlat
leave
lods
mov
int3
dec
cmp
pop
push
fwait
int
xor
mov
xor
out
mov
jmp
sbb
pop
jmp
xor
push
test
fstpt
xlat
aas
leave
mov
pop
iret
mov
fcompl
shrb
xor
in
bnd
push
inc
hlt
gs
and
idivl
ret
add
adc
xchg
fnstsw
jo
scas
fs
cli
mov
ss
clc
mov
pop
dec
xor
stos
jb
testl
shlb
lods
jno
je
xchg
xor
cmpsl
shl
fdivs
add
incl
sbb
flds
std
mov
adc
divl
aas
sbb
push
jns
dec
ss
inc
mov
jmp
sbb
dec
into
testl
cltd
add
addr16
out
jnp
idivl
fdiv
loope
dec
ret
mull
ja
or
mull
mov
inc
dec
pop
pop
in
jp
call
out
push
lcall
adc
jbe
enter
idivl
xchg
loop
aaa
ljmp
mov
test
aad
pop
notl
sub
mov
mov
mov
imul
testl
cld
pop
xchg
ljmp
cli
and
mov
jp
out
insl
roll
repnz
pop
xchg
mov
push
pop
negl
cltd
xchg
lods
cmpsl
gs
cwtl
sbb
xlat
or
pop
lods
jl
and
or
sbb
icebp
notl
imul
mov
int
divl
gs
mov
jecxz
pop
sub
mov
imul
fnstsw
popf
push
div
in
inc
ja
pop
pushf
fwait
xlat
sbb
fldl
jbe
adc
popf
push
or
sbb
jle
push
lcall
pop
outsb
in
stc
sub
dec
sbbb
inc
pop
add
icebp
adc
iret
imul
mov
pop
mov
push
dec
mov
adc
jmp
lret
xlat
dec
dec
pop
stc
fcmovu
popa
mov
ja
mov
mov
imul
mov
roll
into
shr
or
lahf
cs
arpl
arpl
out
cmp
mov
mov
cmp
cmpb
shlb
into
dec
out
cmp
cwtl
xlat
aas
popf
ljmp
cmc
cmp
and
in
push
sub
jmp
inc
mov
lahf
sub
outsl
sub
movsb
clc
jle
rcl
out
sub
sbb
inc
and
add
mov
outsl
pop
xchg
hlt
fisubl
sub
test
fistps
arpl
ja
or
lock
inc
call
pop
int
xchg
outsl
inc
int3
and
xchg
add
je
out
or
cmp
popf
and
outsb
or
ljmp
push
inc
mov
mov
pop
scas
or
mov
pop
out
or
fisubs
push
dec
dec
or
inc
pushf
shrb
xchg
sbb
daa
lret
push
xchg
pop
mov
mov
lock
ljmp
int3
inc
ja
cld
icebp
stc
pop
jne
dec
cltd
jns
dec
xchg
ficoml
mov
mov
faddp
adc
push
movsb
jmp
lret
stos
jno
popf
cltd
mov
lea
ljmp
lock
and
aaa
push
mov
inc
mov
dec
test
lods
jns
std
push
xchg
test
xor
loopne
movsl
data16
mov
dec
push
sub
mov
es
subb
movsl
lea
jbe
push
mov
lods
test
iret
push
jmp
popa
jnp
repnz
ljmp
scas
ret
idiv
test
sub
jb
and
xor
shrl
mov
stc
xor
arpl
push
cltd
and
aaa
cmp
out
into
jecxz
je
adc
pusha
sbb
fdivrs
cli
xchg
cmc
idiv
xlat
test
or
loope
mov
mov
push
stos
imull
cmpsb
movsl
pop
fnsave
and
rol
sbb
or
sub
mul
fcoms
adc
cmpl
jae
jge
pop
pop
push
imul
daa
mov
cmp
xchg
inc
sub
mov
xorl
push
fisubrl
mov
mov
outsl
adc
lret
mov
repnz
sbb
icebp
shl
fcomi
sbb
cli
testl
mov
sti
fcomip
xchg
cwtl
xchg
divl
push
pusha
dec
mov
adc
bound
xor
je
mov
cmp
stc
lret
dec
aas
pushf
iret
pop
imul
mov
xchg
fsubl
jle
mov
sti
testl
ficoml
repnz
jbe
or
pop
in
push
lods
repz
idivl
bound
fadds
push
push
pushf
out
dec
sub
aam
fistpll
cmp
cmp
imul
sbb
and
ret
int3
testl
sti
fiaddl
cmp
mull
call
mov
les
cmpsl
fimull
jg
dec
testb
jle
hlt
ret
dec
pop
ljmp
xchg
adc
mov
mov
mov
movsb
xor
inc
or
cli
cltd
pop
int3
cmpsb
testl
testl
xchg
mul
xchg
push
fcoml
test
mov
clc
imul
nop
pop
mov
mov
add
mov
sub
dec
out
mulb
sbb
negl
dec
xor
ljmp
aas
jo
or
jne
or
cld
jecxz
decb
xchg
push
loopne
xchg
and
adc
lret
aam
mull
adc
testl
pop
ret
in
xchg
scas
in
dec
repz
divl
data16
and
dec
lahf
jne
xor
push
jae
dec
mov
loop
or
jno
sub
shl
sbb
mov
sbb
jno
jmp
leave
adcl
and
cltd
out
pusha
adc
jp
out
cld
adc
in
dec
test
xor
aas
out
dec
loop
mov
je
jno
or
sbb
aam
idivl
clc
enter
call
testl
xchg
cmpsl
xchg
jg
negl
in
lcall
leave
push
repz
not
rolb
jno
das
mov
icebp
daa
fcomi
je
inc
jge
push
rcrb
mov
insw
repz
mov
mull
mov
adc
push
jecxz
push
sbb
js
mov
in
call
jne
or
fistl
movsb
push
mov
jmp
push
xor
xchg
pushf
dec
std
cli
add
call
ficoml
xchg
pop
fnstsw
jmp
jle
pop
lret
dec
dec
aad
jae
xchg
hlt
div
icebp
pushf
push
push
insl
not
lret
iret
mov
adc
adc
push
dec
xchg
mov
divl
sbb
dec
mov
insl
push
movsl
jnp
jmp
cltd
negl
push
mov
push
divl
add
out
negl
outsl
cwtl
dec
pop
repz
dec
mov
out
ljmp
or
out
pushf
mov
jg
mov
mov
push
imull
jns
dec
not
lahf
or
and
fcom
pop
xchg
insl
std
add
cli
rcr
scas
add
inc
ds
mov
pop
je
into
dec
repz
out
jnp,pn
mov
sub
xlat
movsb
testl
mov
xchg
out
cmpl
push
mov
pop
add
add
jb
aam
notl
adcl
adc
and
sbb
pop
call
fcoml
lods
dec
divl
shlb
ss
stos
xlat
xchg
orl
cmpsl
inc
pusha
xchg
mov
imul
jmp
pop
inc
cwtl
mov
ja
popf
mov
push
push
aas
pop
mov
or
int3
fisubrl
pop
sub
rcrb
sbb
out
add
dec
fcoms
enter
icebp
add
les
dec
dec
jno
into
mov
sub
test
out
sti
sbb
jecxz
push
mov
mov
daa
loop
icebp
mov
add
imul
jno
out
loopne
cmp
popa
rcr
xchg
sbb
stos
aam
in
les
add
shl
and
imull
lcall
mov
add
and
outsb
data16
pop
mov
mov
mov
inc
negl
mov
sbb
add
or
test
or
jmp
pop
sbb
les
sbb
clc
jo
call
lcall
in
adc
inc
daa
cmpsb
add
imull
push
out
xlat
loop
pop
insb
dec
test
mull
aam
clc
popa
mov
xchg
xchg
push
into
ja
or
jb
mov
push
mov
jno
or
cmp
dec
lret
loop
rol
sbb
icebp
scas
xchg
jge
out
xchg
ficomps
notl
and
add
scas
lcall
testl
push
add
xlat
in
jl
inc
dec
fiadds
not
fcmove
dec
adc
loop
add
ret
cmp
lods
cld
testl
push
add
adc
mov
pop
stos
and
notl
mov
mov
pop
push
testl
insl
outsl
and
or
cmp
xlat
sub
push
dec
or
pop
test
popf
or
push
sub
xchg
out
imull
push
cld
mov
jns
loop
push
das
push
mov
mull
sbb
call
xchg
mov
out
xor
div
xchg
mov
repnz
out
test
sub
cmp
scas
dec
pop
jne
mov
ds
mov
jo
stos
sahf
nop
je
mull
les
imull
or
test
in
sub
or
pop
cs
and
daa
and
pop
xor
sub
cmp
testl
into
pop
iret
pop
jb
push
fdiv
sbb
jp
adc
cltd
neg
rorl
out
es
rclb
push
lods
testl
and
dec
mov
jmp
cmpsb
push
inc
outsb
jp
divl
in
in
adc
or
test
push
dec
in
negl
push
fsubrs
testl
xchg
push
divl
add
pop
xor
cmp
mov
mov
pop
xchg
mov
scas
test
loopne
xor
unpcklps
outsb
xchg
pop
insb
stos
test
hlt
xchg
sbb
push
push
loop
adc
stc
rcrl
icebp
xchg
push
pop
cmpsb
lret
pop
in
and
lcall
push
jnp
das
pop
push
ss
sbb
mov
insl
in
jecxz
and
dec
jne
aad
es
fistl
sub
fldt
pushf
shlb
mov
out
int3
pop
data16
pop
or
sbb
jge
das
pusha
pop
mov
adc
mov
test
popa
sub
xchg
push
out
dec
idiv
ds
fucomip
subl
xor
mov
pop
notl
movsb
cli
and
xchg
mov
ds
push
arpl
pop
mov
cmp
jmp
jae
cmpsl
aam
cmp
mull
jecxz
xchg
pop
push
sub
xchg
testl
dec
and
mov
cltd
lods
xchg
jmp
loop
mov
lock
xchg
or
push
int
xor
inc
jns
xor
push
fbld
pop
jb
adc
pop
out
decb
clc
dec
jp
fcmovu
sub
sbb
ja
cmpsb
push
in
div
jb
mov
push
out
mull
push
std
aam
inc
inc
xchg
sub
sub
add
jno
fsubrs
jmp
lret
sub
nop
push
jbe
mov
daa
negb
jne
rcl
jp
push
sub
lods
pop
testl
cmp
mul
or
mov
not
mov
inc
push
jg
and
bound
popf
xchg
fsubl
std
lock
and
pop
sti
loop
push
out
pop
testl
xchg
push
bound
test
mov
inc
dec
and
hlt
dec
push
out
insl
mov
testl
or
adc
mov
inc
mul
ret
fisubrs
and
cmp
daa
xlat
popf
test
cli
shlb
push
inc
sub
out
pusha
jns
out
lock
sub
daa
fs
ffreep
cmp
xor
adc
add
loopne
xlat
fdivrs
xchg
cmpsl
mull
push
xchg
xor
negl
pop
arpl
mov
and
cli
loopne
fisubs
add
ds
sub
push
das
scas
and
shr
rorb
mov
jb
cli
js
cwtl
fistps
or
pop
sub
repz
ja,pn
inc
call
js
testl
add
sbb
test
popa
clc
vmwrite
xchg
sub
in
jae
lcall
test
cmp
adc
lods
loope
and
push
or
pop
xlat
jle
test
and
jl
xchg
cmp
cmpsb
adc
pop
pop
push
notl
cmc
dec
push
mov
and
pop
add
jne
out
mov
pushf
rcl
inc
flds
lock
call
pop
add
lock
xlat
push
push
mov
fbld
jmp
negl
mov
icebp
mov
lock
out
leave
mov
dec
lock
mov
sub
sbb
neg
ljmp
xchg
into
adcb
ret
lods
lahf
xchg
sbb
push
in
pop
push
testl
cltd
lahf
faddl
xchg
inc
xlat
in
movsb
fwait
inc
mov
mov
push
jmp
sbb
dec
in
aam
xlat
jb
pop
xor
lret
and
jmp
inc
rcl
pop
fisubrl
aaa
pop
xchg
pop
movsb
inc
jo
daa
out
xor
test
insl
cli
add
dec
repz
jbe
dec
test
mov
clc
idivl
xor
inc
jns
in
add
xchg
outsl
sarl
divl
push
adc
dec
fnsave
and
out
imul
shr
jo
fistps
push
leave
inc
xor
aad
outsb
jmp
fistps
popa
fcomps
imul
xchg
sub
int3
imull
xchg
push
mov
test
loopne
mull
mov
xchg
test
hlt
xchg
das
in
loope
in
mov
lods
xlat
adc
jmp
fdivp
inc
mov
or
lret
test
sub
inc
push
gs
icebp
mov
sbbb
pop
lea
dec
repnz
push
dec
or
neg
sbb
push
popa
pop
pop
test
inc
add
push
pop
xchg
xchg
mov
ficoms
pusha
push
out
in
fdivrl
xlat
popa
mov
cmp
xor
mov
iret
xchg
mov
jecxz
push
inc
mov
mov
mov
and
push
bound
fninit
or
insb
icebp
mull
or
lret
jmp
divl
cmc
dec
mov
or
testl
cltd
add
pushf
in
ja
les
test
xchg
jmp
loopne
cltd
ljmp
in
inc
mov
lahf
push
fidivrs
add
cmpb
mov
out
dec
aad
inc
mov
lock
fmul
adc
mov
mov
jmp
pushf
jns
fistpll
arpl
mull
scas
pop
sub
mull
ret
idivl
mov
sbb
sahf
popa
xchg
pop
push
or
lods
gs
mov
push
imull
pop
testb
sbb
xchg
ja
jbe
pop
adcb
add
out
and
addr16
test
shrl
mull
and
push
sub
mov
outsb
rcrb
push
test
mov
jmp
std
sbb
aam
inc
subb
adc
movb
mov
jb,pn
push
dec
imul
mov
pop
lds
aaa
pop
xchg
in
inc
mov
mov
imul
in
ss
cltd
mov
repz
lgs
adc
add
les
mov
in
or
adc
jecxz
aas
daa
imull
pop
lahf
cmp
testl
cmp
mull
push
adc
lock
push
jne
aaa
push
repz
push
js
imull
pop
mov
fldenv
jb
scas
cmp
xor
push
std
jg
in
jnp
dec
testl
mov
cmp
pop
add
sti
xchg
cmc
outsl
fldt
xchg
outsb
std
dec
adc
or
movsb
push
sub
ret
negl
push
lods
mov
mov
pop
cli
sti
jmp
idivl
pop
jle
neg
popa
xchg
pop
dec
sbb
neg
loope
pop
inc
fadds
adc
es
popf
out
icebp
xor
xchg
and
call
divl
mov
mov
dec
pusha
cmovno
outsb
stos
xchg
fbld
sbb
cmp
jl
and
gs
in
icebp
hlt
fnstenv
mov
pop
js
flds
divl
inc
xorb
mov
pop
mul
mov
xor
popa
adc
stc
jb
jne
into
test
mov
repz
xchg
dec
inc
xchg
adc
push
push
rclb
sub
aam
jg
pop
jecxz
lcall
sti
jns
bound
popf
clc
inc
cmpsb
repnz
idivl
push
loop
mov
movsb
pop
mov
icebp
inc
jb
insb
shlb
pandn
jp
jecxz
jnp
xor
sbb
fwait
hlt
idivl
dec
and
jne
add
cmpb
inc
sbb
idivl
ljmp
ficomps
dec
icebp
jno
testl
or
das
xor
out
cmc
pushl
out
add
out
outsb
data16
add
mov
mov
imul
sbb
testl
stos
mov
divl
cmpsl
and
ret
xor
push
fidivrl
jmp
pop
shrl
lcall
sbb
notl
stos
rcll
xor
int
push
negl
cmpsb
adc
jne
and
sti
imull
or
ret
or
shll
pop
push
jno
int
imul
mov
adc
cmc
lods
xchg
push
incl
lds
es
adc
push
lods
fsts
pop
mov
negb
divl
scas
mov
xchg
addr16
and
ljmp
out
out
das
xchg
dec
idiv
jge
popa
jne
pushf
sti
not
inc
lods
lods
push
dec
test
mov
xchg
inc
mov
bound
cmpsl
test
inc
cmpsb
test
fnstenv
shll
and
or
fcomi
sub
in
pop
push
push
push
pop
jnp
inc
dec
mov
aam
xchg
not
dec
mov
mull
mov
pop
inc
gs
xlat
xchg
sbb
pushf
xchg
mov
fisubrl
jg
ljmp
and
hlt
movsl
mov
cli
filds
mov
cmp
mov
neg
cmpb
notl
int3
mov
sub
pop
push
or
pop
xor
cwtl
inc
mov
popf
js
into
jnp
loop
jp
out
push
dec
jns
repz
cmpsl
push
testl
aad
xlat
sbb
mov
or
inc
loope
and
in
dec
fucom
neg
arpl
mov
pop
in
div
push
push
ret
mov
test
rcrb
cmp
adc
mov
ja
ljmp
cmp
push
dec
or
sahf
add
jge
mov
inc
imul
popf
mov
int3
pop
xchg
cmp
mov
fs
pop
xor
lcall
xor
cwtl
incl
in
cmp
or
fisttpl
add
sub
pop
pop
dec
sub
cmpsl
mov
push
sub
pop
fbld
icebp
push
jle
icebp
movsb
incb
push
cmp
ret
lahf
out
int
lods
mov
xchg
jbe
sbb
dec
pushf
jne
stc
pop
lods
and
push
shl
lahf
push
bound
xchg
and
xchg
imul
push
ret
fsts
imul
loop
add
adc
dec
add
xor
cld
insl
inc
mov
and
mov
pop
sahf
int3
js
sarl
sub
adc
mov
jb
sbb
adc
adc
fcmovbe
in
jmp
dec
dec
fs
push
bound
in
mov
std
cwtl
mov
xchg
test
pop
pop
jg
cmovns
out
push
in
sbb
insb
fisubrl
out
imul
hlt
movsb
adc
pop
push
cltd
rcrl
cwtl
xor
jg
mov
movsl
idivl
out
mov
sbb
mov
in
or
lds
repz
jg
in
addr16
cmp
es
sbb
jecxz
inc
cmp
pop
sub
fimuls
sbb
cmpsl
mov
mov
pop
mov
fstps
pop
cwtl
out
movb
inc
test
lcall
mov
cli
xlat
push
cmp
pushf
std
or
mov
push
idivl
out
adc
stos
mov
adc
testl
lock
dec
enter
in
jecxz
mov
adc
stos
out
out
and
js
jo
rcrb
dec
sbb
int3
ljmp
pop
decw
sbb
lcall
cmp
test
vandps
fistpll
dec
cmpsb
std
add
xchg
push
mov
not
call
lea
mov
adc
stos
neg
sub
push
and
sbb
inc
out
push
xor
mov
jecxz
sub
and
adc
lret
mov
inc
and
imull
mov
mov
fcomip
sub
mov
jp
pop
test
stos
in
leave
mov
xor
sub
pop
xchg
xchg
mov
add
push
xbegin
lods
notl
test
idivl
dec
pop
mov
xor
imul
sti
mov
pop
fwait
pop
imull
adc
iret
xlat
out
mov
jecxz
lcall
sarb
xor
in
dec
stc
idivl
mov
cmpsl
out
lods
loopne
out
pop
mov
push
mov
aam
mov
xor
lcall
pop
imul
stos
mov
sahf
xlat
rorb
andl
nop
imull
lahf
add
cmpsb
jo
inc
not
push
in
inc
and
add
sub
push
adc
add
adc
mov
mov
xor
or
sbb
jnp
iret
orb
pop
pop
mov
shlb
inc
mov
stos
div
dec
mov
lods
ret
je
pop
mov
adc
mov
mull
jne
pop
mov
add
mov
fcoml
cmp
insl
loop
mull
mov
inc
pop
inc
mov
sti
push
loope
vsubss
xchg
outsl
dec
fldenv
xchg
dec
out
or
cmp
ja
cli
sub
xchg
jp
mov
cltd
push
fcmovnbe
xor
fs
add
push
sbb
push
call
fs
fistps
sahf
mov
daa
nop
xchg
enter
imul
dec
dec
sub
mov
in
shll
or
xlat
out
mov
icebp
rcr
pusha
negl
dec
add
popa
jp
arpl
les
mov
jmp
in
add
sbb
icebp
push
pop
repz
pop
cmc
push
adc
lcall
add
or
adc
imull
daa
sub
adc
xchg
xchg
test
es
fwait
divl
mov
cld
jge
or
clc
push
mov
mov
jl
aas
daa
out
int
xchg
insb
or
cmp
movsb
xlat
pushf
jp
cwtl
inc
lods
notl
lock
movsb
xor
sbbb
insl
mov
js
mov
sbb
pop
pop
xchg
mov
pop
and
inc
mov
fs
fcomi
fstps
jns
fbstp
testl
sti
xchg
das
out
lahf
jnp
pop
inc
notl
mov
push
pop
push
and
idivl
int
jo
pop
mov
jae
insb
shll
mov
bnd
sub
hlt
fwait
mov
xor
ja
cmpsb
testl
cli
dec
outsb
push
pop
jle
jb
gs
shll
xlat
sarl
push
lea
pop
ret
cmp
rorb
mov
jg
pop
in
push
mov
fwait
movsb
or
lret
sbb
negl
mov
ss
inc
sub
out
add
jo
nopl
or
call
out
push
jecxz
adc
pop
or
int3
loop
test
adc
push
into
cmp
out
mov
add
repz
shl
xor
dec
shlb
pop
mov
idiv
jge
add
lea
xlat
mov
test
push
and
subb
pop
filds
cld
pop
in
int3
mov
es
movsl
repnz
test
push
push
sbb
lret
sub
std
mov
pushf
popf
xor
jbe
arpl
fwait
adc
add
test
mov
jmp
fmuls
shl
dec
xchg
xor
cmpb
dec
mov
ret
pop
pop
lret
jae
mov
add
fs
push
movsb
xor
negl
aad
sub
iret
pop
push
punpckhbw
mov
jl
xchg
push
negl
pop
gs
idivl
jge
and
push
xor
fabs
fcomps
les
dec
testl
not
out
push
repz
loope
pop
js
fimull
push
pop
xor
hlt
lock
push
pop
imull
dec
in
fwait
jae
mov
lcall
inc
ret
and
imull
inc
dec
imul
addb
xchg
mov
fbstp
rclb
out
sbb
mov
aas
testl
or
imul
dec
orl
cmc
xchg
xacquire
mov
stos
mov
aaa
xchg
xor
push
xchg
testl
jb
cli
push
jmp
pop
enter
adc
pop
andb
loopne
sbb
div
mov
cltd
std
sub
pop
xor
in
out
je
mov
adc
mov
fists
shll
jo
mov
ds
popf
and
outsb
iret
lods
push
sbb
hlt
jo
out
int
fidivl
aam
stc
mov
loope
xchg
or
idivl
sub
inc
data16
sub
call
mov
jne
mov
pop
divl
and
mov
test
jae
mov
adc
daa
push
fincstp
cmp
outsl
roll
add
xchg
jnp
xor
mov
xchg
mov
fnstcw
xchg
pop
filds
mov
cs
jle
mov
fistl
testl
stc
cmp
pop
cmp
out
sub
xlat
ds
jge
xchg
dec
mov
mov
xchg
es
stos
mov
adc
pop
je
test
testl
dec
adc
loopne
adc
add
stos
inc
imul
mov
cmp
xchg
jmp
xor
stos
clc
test
mov
out
pop
mull
xor
imul
pop
shll
xchg
cltd
cmp
fdiv
pop
mov
les
add
and
cld
push
int3
push
aas
cmove
and
push
push
mov
imull
ja
mov
jno
cli
cmpsl
shl
adc
repz
mov
mov
testl
daa
dec
pushf
xor
out
or
jb
out
shlb
pop
scas
pop
les
test
xlat
jmp
sahf
dec
fadds
divl
sbb
and
cmp
decl
xchg
repnz
mull
jns
jg
mov
idivl
sbb
clc
testl
xchg
outsl
outsb
xlat
popf
push
lods
adc
and
cli
testl
vmovddup
fildll
fsubrs
push
faddl
jp
je
xor
mov
sub
jae,pt
push
mov
in
daa
xor
jmp
fldt
mov
out
testl
or
mov
xor
or
jp
and
aad
sub
dec
ret
add
push
jb
gs
xor
ss
cmp
sahf
shll
fldln2
or
out
pusha
dec
lock
pop
mov
in
add
shl
mov
sub
and
in
cmp
pop
lods
and
jmp
fcmovu
xchg
iret
or
mov
inc
add
adc
push
adc
push
lcall
bound
dec
cmp
mov
cmpsl
fcmovb
cltd
adc
es
stc
push
int3
imull
pop
imul
jp
mov
xchg
mov
js
jecxz
adc
test
out
outsl
or
xor
idivb
ljmp
xchg
push
nop
jo
pop
inc
xchg
mov
mov
jnp
imul
mov
scas
out
imul
and
jno
mov
xor
pop
test
stos
loop
es
imul
jne
add
pop
and
inc
cwtl
dec
or
std
add
js
dec
rcrb
mov
popf
int
jne
cmp
notl
push
mov
testl
xlat
pop
cmpsl
pop
pop
add
mov
fcoml
enter
push
dec
sbb
icebp
mov
out
imul
adc
mov
not
mov
inc
adc
out
mov
jl
idiv
ss
sti
in
xor
lret
es
outsl
movsb
push
pop
xor
sti
fistpll
inc
insl
sbb
ljmp
mov
sub
sbb
das
out
adc
ja
xor
outsl
rcll
outsb
push
out
xchg
and
arpl
dec
pop
jge
push
testl
push
sahf
cmp
insb
dec
jns
out
enter
test
adc
fcoms
je
aad
aas
mov
mov
xlat
sbb
popf
fucomi
in
pop
push
pop
mull
lock
sub
mov
cli
push
test
idivl
bound
in
negl
inc
scas
jge
call
xchg
lea
xor
negl
data16
add
pop
adcl
sbb
nop
fistps
idivl
jo
push
imull
icebp
mov
xor
mull
xchg
mov
je
insb
int3
out
or
push
cs
lcall
cmp
mov
pusha
rcll
xchg
or
cmpb
std
sbb
mov
fdivs
inc
sub
pop
scas
mov
and
jle
xor
sarb
repz
mov
jno
cmp
push
ljmp
jmp
cltd
pushf
push
out
sub
mov
out
arpl
incb
lcall
adc
lret
push
xor
je
ret
sti
mov
icebp
add
mov
inc
mov
vmovapd
rcrl
mov
ljmp
jbe
fidivrl
loop
push
lea
cmp
push
dec
and
pushf
out
xchg
testl
cmpl
int3
xor
std
mov
cld
xchg
mov
inc
inc
cmc
inc
jmp
cmp
push
mov
sahf
push
outsb
xchg
add
xlat
jnp
scas
xchg
cld
iret
sahf
les
out
out
in
sub
mov
js
add
ljmp
xchg
fidivl
sbb
jae
jo
adc
pop
lods
stc
adc
add
imul
loopne
notb
cmpsl
jns
jecxz
mov
out
push
pop
xchg
out
push
dec
out
loopne
ret
mov
fidivl
out
jbe
rorb
test
inc
je
loopne
adc
pop
cmp
jmp
repz
add
jecxz
mov
jp
push
addr16
mov
enter
or
jae
jne
les
jno
jmp
adc
std
in
add
and
xchg
pop
dec
insl
and
out
add
and
pop
enter
notb
ljmp
add
cltd
shll
push
fs
imul
lea
mov
pop
jae
jo
cmc
dec
repz
xorb
push
mov
xchg
or
idivl
xchg
or
pop
imul
add
mov
pop
add
push
jb
int3
inc
push
push
mov
imul
jge
stc
adc
mov
inc
cmp
dec
push
inc
and
ja
cmpsl
les
sbb
in
ja
nop
xor
lock
out
xlat
xchg
je
or
imul
paddsw
cmp
fisubrl
mov
sub
lahf
inc
iret
jbe
sub
call
sti
test
insl
sar
shl
repnz
xor
or
jb
inc
out
out
movsl
and
mov
dec
das
pop
out
jb
insb
repnz
ja
into
cltd
repnz
mov
andl
enter
or
out
mov
dec
in
mov
xchg
mov
mov
insb
ds
xchg
jns
dec
in
fistps
mov
xlat
dec
push
ljmp
lahf
out
inc
insb
rcr
sbb
or
cmp
mov
and
rcrl
mov
rcrl
jp
push
mov
jmp
jne
into
jecxz
or
daa
jbe
or
xchg
fisubrl
pop
xorl
arpl
testl
fcmovne
inc
ret
sub
mov
in
out
pop
xchg
lods
ja
jmp
out
xlat
lahf
inc
test
loopne
cmp
in
mov
mov
pop
shrb
mov
arpl
out
icebp
add
dec
idivb
aad
jo
fdivs
out
ficoml
iret
addps
dec
cmpsb
lods
cmp
xchg
sbb
or
fs
ljmp
and
or
loope
mov
jb
pop
imul
shl
out
dec
pop
int
mov
in
mov
ficoml
inc
mov
shlb
les
adc
mov
fnstenv
jp
stc
xchg
push
or
mov
inc
and
enter
mov
cmpsl
repz
sahf
test
ljmp
mov
int3
scas
test
insl
xlat
pop
sahf
orb
and
mov
sbb
inc
icebp
push
and
inc
jecxz
and
pop
cmp
cmpsb
fiadds
xor
ret
ljmp
and
dec
mov
mov
int
ficomps
icebp
and
scas
or
int
sub
ret
sub
notl
xlat
bswap
mov
jo
cmp
xchg
and
xchg
sbb
pop
aam
scas
dec
test
int
addl
iret
ja
in
daa
ffree
sub
lret
iret
sarl
fidivrl
xchg
or
mov
pop
loope
push
jne
lods
lods
push
push
out
loope
sbb
pop
sbb
xor
out
add
jne
je
inc
je
xchg
pop
inc
in
dec
das
loop
mov
sub
repnz
xor
push
mov
test
mov
jge
repz
fcoms
out
jecxz
mov
je
xchg
mov
ficoml
mov
push
mov
sub
aaa
push
adc
mov
push
mov
and
mov
or
addl
fbld
cmove
test
cmpsb
dec
and
adc
inc
outsl
pop
or
or
mov
jne
fs
ljmp
adc
repnz
inc
push
mov
loopne
and
mov
loope
sub
jmp
mov
mov
icebp
xor
jns
fld
into
push
dec
jmp
inc
dec
mov
pop
pop
pop
fnstsw
pinsrw
ss
add
fs
mov
push
test
adc
xchg
scas
dec
ret
int
fiaddl
hlt
in
adc
inc
mov
mov
outsl
loop
push
sbb
mull
mov
adc
or
cli
xchg
orb
or
fisttpl
dec
jb
aaa
cmpl
frstor
mov
cmp
mov
and
mov
push
mov
call
inc
scas
mov
jle
xchg
push
sub
mov
outsl
out
sahf
mov
cli
fcos
ffree
movsb
ret
sbbl
fsubrs
mov
xchg
cmp
pop
popa
cmp
sbb
xor
lcall
fisttpl
pop
push
or
xchg
dec
mov
rcrb
imul
loop
cmp
xor
xchg
in
aaa
or
fwait
test
cmp
addr16
mov
fdiv
into
and
pop
pop
sub
and
and
mov
dec
mov
dec
popa
xor
push
sbb
jb
fucomip
popf
fildll
notl
push
adc
mov
faddl
xlat
lds
mov
mov
lret
jecxz
lds
repnz
or
add
mov
stos
int3
pushf
push
insl
inc
cs
sbb
rolb
push
lock
rcll
mull
pushf
dec
jne
add
jle
mov
daa
mov
lods
push
out
jmp
push
sbb
dec
jnp
mov
fstpt
divl
pop
xor
adc
movsl
add
push
lret
pop
mov
popa
sbb
sub
testl
mov
rorb
pop
cmp
push
fisttps
xor
gs
das
outsb
sub
neg
or
test
pop
push
lret
xchg
repz
lock
push
mov
out
daa
hlt
in
fwait
cmp
ds
mov
mov
jmp
xchg
enter
rorb
popf
repnz
cwtl
sahf
aaa
sti
push
or
push
or
push
adc
pop
pop
int
rdmsr
mul
sahf
mov
not
pop
ja
add
mov
push
dec
neg
mov
ds
in
cmpsl
aas
dec
repz
fistps
ja
loopne
pop
insb
fidivs
xor
sbb
push
mull
or
neg
leave
jge
sahf
push
cmc
fs
mull
rol
in
jl
push
jb
adc
shl
cmp
xorb
notl
pop
lret
roll
add
sub
lahf
cmp
xchg
pop
imull
push
data16
xor
mov
repz
pop
lcall
test
in
cmp
stos
notl
adc
imul
push
negl
dec
jno
inc
setne
sarb
lahf
cmp
inc
adc
ja
mov
xchg
mov
insl
addr16
and
movl
push
dec
push
call
mov
loop
fbld
pop
jbe
cs
xchg
xchg
lods
mov
cmpsb
or
scas
mov
mull
filds
mov
xchg
xorb
test
mov
stos
in
sbb
and
cmc
adcl
lcall
xlat
and
imull
rorb
imul
in
ja
dec
fimuls
popf
je
cmpsb
or
cld
leave
out
ljmp
xchg
sbb
sbb
mov
adcb
call
sarb
add
int3
je
push
fucomip
imul
mov
cmp
jbe
inc
push
adc
jo
lods
adc
out
sub
nop
push
cmc
test
mov
dec
clc
and
divl
inc
pop
xor
cmpsl
cwtl
mov
pop
js
inc
sbb
cld
cwtl
not
mov
ljmp
stos
and
neg
jg
mov
pop
out
clc
mov
iret
enter
testl
aaa
ss
repnz
out
ljmp
xchg
and
xor
scas
mov
or
idiv
lea
mov
xchg
push
adcl
in
out
mov
fcmovbe
neg
std
xor
inc
pop
jne
jbe
push
xchg
or
mov
dec
pop
repnz
cld
out
sub
xor
sti
adc
lahf
pop
fisttps
mov
xchg
and
xor
nop
add
jecxz
pop
stos
pop
xorl
out
shl
dec
lods
xlat
fs
shlb
jno
xor
cwtl
xchg
xor
enter
ret
pushf
cmc
dec
xchg
divl
outsl
jns
cvtpd2ps
clc
in
enter
adc
inc
out
and
fsts
or
cmc
icebp
jnp
xchg
mov
js
popa
mov
xchg
int3
sub
insb
adc
imul
in
jmp
ret
xchg
xlat
ja
nop
leave
pop
pop
cmp
fsubl
mov
push
daa
jnp
or
pop
in
movsb
lcall
xchg
mov
xchg
push
sub
pop
hlt
cld
inc
outsb
jmp
idivl
mov
dec
sub
nop
sbb
aad
or
ljmp
xchg
not
adc
mov
mul
leave
pusha
dec
sbb
addr16
idivl
sub
mov
out
jne
pop
add
pop
xchg
xchg
out
pop
ret
mov
xchg
pop
push
mov
or
push
out
cli
inc
sbbl
cmpsl
repz
shld
push
xchg
xor
mov
testl
adc
pop
push
roll
out
in
fwait
or
negl
mov
pop
negb
inc
testl
xchg
mov
test
sub
and
test
int
cmpsb
mov
sbb
xlat
mul
mov
jmp
xlat
fcmovu
jge
imul
pop
testl
dec
and
pop
fdiv
cmp
repz
insl
or
pusha
rcrl
insb
xchg
xlat
jno
setno
xchg
fiadds
mull
inc
mov
sbb
notl
bound
mov
add
testl
subb
stc
add
nop
mov
xchg
mov
xchg
mov
mov
push
aad
flds
cmp
jo
adc
imul
inc
xchg
or
jl
mov
jns
mov
mov
adc
insb
xor
pop
sub
js
or
out
xchg
xor
sbb
out
imul
stc
fwait
dec
cmc
popf
rcr
jge
negl
or
inc
push
xchg
and
divb
dec
mov
jp
mov
imul
jnp
aaa
xlat
jno
scas
cmp
idivl
mov
mov
cmp
test
pop
mov
stos
jo
jb
xchg
lret
imull
lret
fsubs
ja
orb
cmp
xchg
outsl
das
inc
mov
push
stc
cwtl
or
outsb
dec
pop
negl
mov
sbb
lcall
lahf
push
call
dec
or
out
notb
mov
outsl
notl
and
loopne
push
and
rolb
cmpsl
daa
add
orb
pop
add
or
jae
aad
not
dec
xchg
jle
divl
mov
stc
xchg
cmc
testl
or
gs
dec
add
into
xlat
cmc
mov
xlat
push
push
arpl
jecxz
testl
adcb
xchg
mov
push
xor
add
push
jecxz
test
sub
dec
popa
jmp
mov
rcrl
lods
adc
fcmovnbe
inc
dec
int
test
shl
mov
mul
das
out
sub
orb
xchg
in
stos
popa
loopne
xchg
cmp
fadds
pop
lahf
push
xor
adc
movsb
outsl
stos
push
orl
xor
mov
dec
adc
cli
push
jmp
fsubrs
xlat
pop
mov
arpl
mov
pop
jnp
lahf
pop
and
mov
sbb
pop
mov
daa
push
outsl
push
out
cs
mov
test
mull
aaa
outsl
xchg
xlat
bswap
pop
push
stc
xor
jnp
xchg
mov
ljmp
mov
jbe
aam
push
stc
mov
fisubrs
and
fldt
jns
jae
pop
push
xchg
cmp
sti
push
loope
mov
jg
inc
mov
icebp
int
cwtl
xorb
lock
sti
mov
pop
add
or
mov
stos
shlb
adc
out
push
push
lock
int
cs
push
pop
push
mov
add
adc
ret
xor
add
stos
jne
push
pusha
andl
sbb
mov
sub
xlat
fsubs
fidivs
mov
popf
dec
cmpsb
movsl
xchg
xor
icebp
lret
sbb
mov
mov
stos
or
loope
sbb
sbb
adc
movsl
jo
jno
clc
sbb
incb
mov
lret
xor
dec
hlt
int
jns
into
adc
mov
or
cmp
jb
fcoms
sbb
xchg
and
iret
mov
mov
out
push
adc
testl
add
fsubrs
arpl
repz
in
imull
lods
push
test
cmpsl
xchg
mov
fiaddl
out
test
imull
arpl
pop
ja
sub
cmc
pop
xchg
insb
xor
dec
add
adc
push
stos
imul
cli
inc
pushf
push
filds
jp
xorb
sub
or
repz
test
testl
mov
xchg
out
pop
add
add
out
les
rol
sbb
je
int
inc
lock
icebp
in
testl
adc
mov
imul
jmp
mov
lods
jb
jg
sbb
adc
jmp
adc
aam
inc
push
notl
out
cmp
repz
xchg
ss
dec
in
adcb
fstpt
jecxz
sub
mov
bound
fisubl
pop
sub
pusha
sbb
jns
adc
pop
mov
enter
pop
push
jmp
push
inc
jno
push
gs
xchg
mov
mov
sub
adc
mov
out
ja
adc
mov
out
call
cltd
or
mov
xlat
icebp
lock
loopne
jmp
cmc
fyl2x
adc
inc
cmpsl
mov
or
out
loop
ljmp
xchg
jne
and
inc
lahf
dec
repnz
and
aam
jg
pop
jle
dec
mov
jbe
inc
xchg
in
xor
daa
ja
pop
mov
lahf
pop
je
cmc
push
scas
ret
or
adc
in
sbb
add
jmp
pop
mov
lods
les
es
jmp
bound
jbe
adc
mov
inc
push
mov
push
add
or
mov
inc
in
sbb
inc
int
adc
mov
addr16
scas
cmpsb
mov
push
add
sarl
sub
lods
fidivrl
repnz
adc
mov
mov
icebp
sbb
imul
pusha
xchg
mov
into
and
mov
fldt
inc
xor
stc
xor
push
icebp
or
mov
cwtl
pop
cs
fsubrs
ror
lods
and
popf
mov
push
fs
push
and
fldenv
jmp
out
and
repz
ret
sbb
mov
cmp
adc
fidivrl
bound
and
sbb
adc
jb
xor
ja
data16
in
idivl
aam
add
sarl
xchg
jnp
mov
out
mov
xchg
cmp
sub
testl
mov
imull
into
inc
aam
inc
xchg
push
ss
lahf
pop
mov
mov
pop
push
mov
jp
cwtl
divw
sbb
notl
jo
or
and
jb
mov
iret
push
jl
xchg
jns
lret
mov
movl
pop
pop
xor
jecxz
dec
aaa
jnp
cmp
ja
lock
push
insl
notl
and
pop
jno
xor
add
add
data16
and
mov
jge
faddl
lods
mov
divl
cli
mov
mov
jae
clc
nop
in
stc
cmp
mov
imul
out
and
sub
clc
mov
ret
mov
fmull
outsl
das
jo
ljmp
or
and
or
xlat
out
fsubp
ja
es
jnp
xchg
inc
out
jo
push
idivl
clc
dec
push
mov
pop
adc
add
mull
insl
cmpsb
xchg
popf
mov
lahf
jecxz
call
inc
and
cmp
popa
fistpll
into
divl
cmpsb
rcrl
rol
dec
xlat
out
xor
jmp
icebp
hlt
test
sub
testl
mov
div
clc
inc
push
pop
jl
jbe
fwait
idivl
cli
pop
cmp
jp
vmwrite
mov
push
mov
dec
mov
testl
shr
mov
pop
add
xor
jnp
ret
pop
fldcw
sahf
call
ss
test
test
and
xchg
xchg
mov
dec
cmpsb
sbb
jae
mov
lods
daa
adc
push
sbbl
sbb
add
clc
popf
mov
imul
rorl
jae
lcall
lock
xor
cmpsb
mov
mov
lock
fcmove
push
mov
movsl
daa
fcomi
mov
jle
jbe
sub
sub
sahf
cmpsl
xchg
and
xchg
in
incl
cltd
mov
aas
jle
cmp
punpckldq
mov
mov
test
jge
ljmp
addr16
mov
daa
sub
mov
mov
testl
mov
push
icebp
cmpb
adc
loope
cld
out
mov
sbb
pop
cmp
test
aam
inc
xchg
pop
mov
jae
inc
push
inc
xlat
mov
out
lods
fisubrs
mov
jbe
mov
mov
xlat
cwtl
dec
out
sti
out
dec
out
outsl
in
xor
ret
fdivrs
outsb
bound
sub
pop
into
repz
xchg
in
add
out
ljmp
clc
inc
movsl
pop
xchg
pop
pop
loope
fidivl
pop
test
popl
in
fldl
daa
popf
gs
repz
fstpl
adc
sbb
fdiv
cmpsl
mov
insl
jb
xchg
mov
jns
js
cmp
out
arpl
and
aas
lods
lock
and
in
jne
sub
in
lcall
adc
add
push
out
ljmp
mov
cmp
ret
in
mov
add
pusha
mull
mul
pop
jne
into
sub
cmc
push
bts
sbb
xor
xchg
fs
mov
cwtl
fildll
adcb
mov
mov
das
notl
add
in
xor
lock
pop
xlat
daa
stos
mov
jnp
dec
mov
popa
test
sub
hlt
xlat
jecxz
adc
ljmp
cmp
inc
in
ds
push
divl
adc
stos
add
mull
sbb
testl
jge
notl
lods
cmp
cmpsl
std
enter
stc
jmp
ja
in
mull
sub
testl
js
pop
mov
out
nop
lods
loop
out
jmp
cmp
divl
icebp
out
add
inc
mov
pop
insb
testl
push
loope
inc
adc
imul
mov
addr16
mov
pop
out
cmp
or
into
ljmp
dec
cmp
jne
fdivr
imul
notl
push
push
leave
mov
daa
sub
jnp
lcall
xor
stc
je
pop
jbe
enter
ljmp
add
sub
cmpsl
xlat
stos
mov
mov
adc
push
imul
adc
inc
lds
ret
not
mov
adc
cmpsl
inc
popf
dec
mov
loop
fcmove
sbb
inc
stos
inc
add
and
and
into
test
inc
pushf
mull
mov
xor
sub
adc
cltd
sub
and
nop
fldt
pop
out
sahf
mov
mov
out
push
lods
insl
lock
push
andb
xchg
cltd
notl
sahf
and
mull
nop
lock
add
xor
push
mov
imul
xchg
lret
mov
popf
push
ficoml
out
adc
test
add
jno
mov
push
lea
negl
out
xor
imull
dec
rorb
lea
pop
and
add
mull
and
iret
dec
dec
mull
and
int
ss
xchg
in
jp
jmp
jmp
push
negl
xchg
mov
in
cmp
sbb
test
and
outsl
cmpsb
or
push
cmp
mov
jns
mov
push
cwtl
push
ljmp
xor
mov
fbstp
fs
sub
pop
mull
xor
and
mov
jl
aam
jo
inc
popf
call
or
cmp
fidivrl
mov
fildll
fwait
jle
sahf
call
insl
cmp
cltd
mov
pop
xchg
jae
repnz
scas
jp,pt
xor
mov
sub
repnz
rol
jne
fs
mov
xchg
andl
out
mov
pop
clc
out
clc
cld
mov
icebp
pushf
mov
jp
scas
int
fs
out
fildl
in
adc
xor
in
push
xchg
add
lret
les
scas
xor
and
test
data16
test
out
jmp
xor
pop
inc
or
mov
sbb
or
in
add
fnstenv
xchg
mov
das
jnp
cmp
ljmp
cmp
scas
adc
insb
mov
mov
adc
and
mov
loope
sub
out
lahf
dec
cwtl
or
in
ljmp
mov
lods
sub
movsl
xor
dec
mov
mov
adc
mov
cs
mov
cli
ljmp
out
sub
sbb
xchg
inc
jle
fstl
xlat
cmp
and
or
lcall
cmp
movsl
loop
out
lods
ljmp
or
stc
popa
sub
in
pcmpgtw
dec
lds
mov
cmp
scas
ljmp
dec
repz
jno
and
dec
jp
xchg
inc
push
out
push
pop
xor
sbb
loopne
ds
dec
sti
pop
or
stos
test
jmp
adcl
int
mov
or
iret
out
xchg
mov
and
lret
aad
fstpt
fbstp
cltd
xchg
imulb
movsl
int
xchg
bound
arpl
sahf
nop
inc
in
adc
push
aam
out
jae
mov
inc
ss
push
test
imul
loope
in
sbb
and
xchg
into
cld
dec
movsb
jb
dec
repz
add
fidivrl
std
pop
push
mov
jno
in
push
cmp
adc
sbb
jg
shl
es
jns
push
ljmp
out
mov
imulb
nop
inc
sub
inc
vhsubpd
inc
notl
loopne
bound
inc
pop
rol
imul
mov
out
push
stc
sbb
xor
jo
ljmp
and
hlt
pop
push
jbe
ficomps
clc
int
out
bound
sbb
repz
jp
jb
inc
or
inc
pop
mov
adc
fstpt
das
test
pop
outsb
scas
push
mov
sbb
mov
cmc
and
or
pop
enter
in
cmp
pop
cltd
xchg
mov
push
sbb
mov
xor
outsl
jae
test
cmp
jl
pop
loop
movsb
cmp
jecxz
popa
sub
pop
push
das
sbb
stos
push
push
test
add
cwtl
sub
pop
fistps
pop
cmc
pop
jmp
push
lock
sub
fcompp
ljmp
pop
mov
fbstp
test
dec
js
lods
mov
or
jge
negl
pop
jmp
fucom
repz
dec
adc
cmpsl
mov
out
mov
jmp
sub
mov
in
je
push
into
shl
idivb
adc
cs
xor
fdiv
jmp
mov
imul
es
inc
xchg
lea
mov
xlat
xor
stos
lock
cmpsl
outsb
sbb
fbld
and
sub
push
cs
jecxz
inc
jmp
sub
and
imul
cmp
push
arpl
fidivrl
aas
mov
mull
arpl
mov
mov
dec
jle
ficoms
dec
jbe
dec
imul
movsb
test
repz
push
xor
ljmp
js
sub
push
sub
jnp
jge
add
testl
pop
mov
popa
push
out
pop
xchg
movsb
or
cmp
das
repz
icebp
push
inc
xchg
pop
xchg
cmp
jmp
enter
mov
shll
dec
ljmp
and
sub
xchg
js
mov
lret
aas
scas
pop
iret
mull
pop
jb
cmp
idiv
mov
loop
not
fadd
inc
xchg
push
cmpsb
sbb
mov
in
xchg
lcall
xchg
pop
movsl
loop
mov
repnz
cwtl
mov
pop
or
xlat
mov
adc
pop
testl
jnp
jbe
dec
mov
movsb
pop
push
cmp
inc
jmp
fwait
bound
loopne
xchg
leave
xor
aaa
loop
cmp
mov
notl
sub
xchg
pop
mov
ficomps
ds
iret
adc
xlat
negl
jne
sahf
aaa
sbb
cmpsb
push
jp
icebp
xor
negb
mov
sbb
pusha
jnp
aad
mull
inc
in
out
cltd
xor
and
pop
ljmp
jle
enter
notl
push
xchg
je
sub
dec
out
mov
xchg
push
push
hlt
in
orl
es
or
xor
adc
push
decb
sub
pop
push
ss
cld
idiv
fwait
xchg
cltd
sbb
adc
bound
lret
shll
lds
mov
sub
mov
fdivrs
pop
inc
pushl
arpl
mov
sbb
hlt
and
mov
outsl
jne
push
sbb
or
out
xchg
stos
lds
fcmovb
imul
xchg
sbb
lock
jns
xchg
movsb
ljmp
inc
stc
xor
xlat
daa
cmpsl
adcl
pop
jl
test
arpl
sub
divl
cs
stc
push
pusha
loopne
fsts
test
stos
das
idivl
sbb
loope
push
lret
rcr
aas
out
cli
bound
push
pop
inc
out
cmp
mov
pop
hlt
imul
xor
add
sbb
pop
lret
cmp
pop
fincstp
in
adc
lcall
push
fcomip
std
arpl
and
aad
je
mov
xor
adc
mov
pop
cmp
dec
out
mov
test
je
aam
xchg
mov
pop
mov
mov
pop
loopne
aad
push
testl
int3
push
iret
testl
xor
out
xor
fwait
push
aam
push
inc
xor
sub
or
imul
add
xchg
fwait
dec
shrb
mull
test
icebp
xlat
lods
les
fimuls
hlt
xlat
mov
pop
sbb
xchg
push
test
cltd
xor
push
pushf
int
popf
test
notl
xchg
in
mov
inc
push
jmp
iret
push
or
add
fbld
push
or
call
cmpsb
push
int3
neg
cmc
pushf
fisubl
ja
jg
inc
push
add
rcr
idiv
lock
pop
adc
cmc
add
or
fdivrs
sub
lret
push
pushf
inc
sbb
movsl
inc
negl
sub
ds
testl
mov
nop
mov
pop
divl
mov
std
ja
or
sar
mov
mov
es
divl
sub
pop
mov
shlb
mov
or
fildll
divl
dec
push
insb
mov
xchg
sbb
icebp
push
imull
es
adc
dec
aas
fistps
div
cmc
xor
mov
movb
fildl
sbbl
cli
push
mov
not
loop
push
arpl
idivl
icebp
aam
add
lds
dec
sub
ret
shl
scas
or
movsb
sbb
xchg
xchg
pusha
or
ljmp
imull
lods
mov
testl
sub
ss
mov
pop
repz
in
mov
out
xchg
stc
sub
cmp
sub
ss
pusha
or
push
cmp
ret
js
xchg
mov
popa
sbb
mov
sub
vshufpd
mov
mov
xchg
jmp
cmp
cltd
mov
out
out
inc
adc
in
ret
or
add
and
jb
nop
fs
push
xchg
inc
and
add
jbe
xchg
mov
lds
stc
lods
testb
clc
jne
dec
shr
mov
cmp
daa
dec
es
fcom
aam
pop
jbe
pop
test
pop
inc
daa
mov
add
inc
or
or
sub
repnz
mov
cmpsl
stos
adc
mov
and
icebp
cwtl
mov
fcmovnb
data16
sbb
jbe
mov
add
push
push
out
fs
pop
popa
sbb
adc
pop
int
add
add
pop
adc
xlat
xor
dec
adc
jb
sbb
sub
outsl
xorb
xchg
adc
movsl
in
or
mov
xchg
test
pop
or
movsb
mov
dec
pop
fisubl
inc
add
aas
lret
lcall
mov
and
and
addr16
bound
sahf
mov
fwait
sub
lahf
xor
rcrl
xchg
test
das
push
cmc
ss
add
jae
roll
je
xor
in
jns
or
notb
push
push
pop
inc
inc
or
inc
add
arpl
fdivl
inc
icebp
mov
ljmp
mov
inc
and
std
mov
cmpsl
arpl
aad
push
push
inc
sbb
sub
data16
lock
jne
push
jns
xchg
pop
lahf
cmpsl
test
fcoml
clc
into
out
inc
pop
mov
loopne
mov
mov
adc
in
push
out
lea
mov
testl
frstor
addr16
pop
jne
jmp
adc
cmp
stos
jb
ja
push
xor
jbe
xor
cmp
out
pushf
sub
and
into
int
jmp
cmp
not
xchg
mov
xchg
stc
jb,pn
adc
popa
out
and
jge
mov
dec
div
pop
or
testl
or
je
movsb
sbb
pop
inc
jb
inc
test
or
icebp
adc
add
out
mov
xor
idiv
cmp
mov
mov
jle
ljmp
notl
aam
fldt
mov
dec
testl
jle
mov
dec
or
sahf
mov
mov
lahf
or
jg
xchg
sub
imul
imull
push
add
pop
jb
ss
out
inc
out
inc
push
pop
aas
pusha
adc
sub
xchg
pop
testl
sbb
inc
xor
lods
fwait
xchg
push
aad
mov
sub
mull
ljmp
cmp
jne
pop
pop
repnz
mov
jae
in
jl
sub
xor
mov
scas
pop
mov
aad
stos
test
divl
mov
adc
iret
shll
lock
cmp
arpl
cmp
lods
idivl
or
pop
testl
imul
addr16
sbb
inc
int3
push
notl
cmc
cmp
testl
ja
jecxz
dec
lods
push
add
aaa
and
jns
shr
or
ljmp
loope
nop
ficompl
xor
pop
push
mov
jns
hlt
adc
dec
movsb
push
xchg
testl
or
adc
or
ljmp
aas
fidivl
int3
adc
inc
sbb
popa
popf
stos
xor
and
mov
dec
push
shl
mov
xchg
adc
xchg
sub
mull
sub
shrl
adc
mov
add
jmp
jae
xorl
jmp
add
iret
dec
xor
jb
inc
push
js
sub
cs
push
xlat
xchg
notl
stos
out
dec
sub
stc
test
nop
add
lds
mov
inc
fcmovne
testl
mov
or
mov
enter
loop
test
mull
fs
and
add
bound
inc
iret
xor
scas
pop
test
xor
jo
sub
xchg
popf
mov
jo
cmp
stc
notl
xchg
mov
repnz
cwtl
idivl
fdivs
pop
divl
xchg
cli
out
inc
cmp
imull
or
testl
or
mov
ret
fnstsw
testl
ja
pop
dec
daa
int3
fildll
push
idiv
ds
sbb
cmp
js
jnp
sbb
mov
flds
enter
xchg
adc
xlat
int
and
out
stos
pop
loope
negl
push
jns
lcall
cmp
and
icebp
push
fimuls
jmp
cmpb
mov
inc
not
jne
push
add
jbe
into
lret
vcvtsd2si
inc
or
pushf
cmp
ficoms
es
test
shrl
xor
cmp
and
or
jb
cwtl
cmc
pop
and
movsl
fistpll
adc
xchg
push
fiadds
icebp
jno
aaa
sbb
clc
adc
mov
gs
fldz
xchg
jo
xchg
or
jbe
xor
cmp
mov
mov
stc
jg
mull
cmpsb
rolb
sub
fisubs
jp
leave
imull
popf
and
mov
fwait
daa
ficoml
cs
ret
lret
push
outsl
lahf
and
mov
notl
mov
rcl
jno
rorl
pop
pusha
pop
pop
div
fstp
jmp
idivl
or
or
test
mov
sbb
or
dec
push
repnz
cmpsb
mul
jo
xor
stc
fldl
jg
in
imul
mull
mov
fcmovne
mov
out
fwait
xor
idivl
sub
andb
xchg
arpl
sub
pop
ja
xchg
movsl
jl
xchg
insb
push
int3
dec
subb
fisubl
imul
test
xor
imul
sub
cmp
cmc
sbb
and
decl
jp
jp
roll
idivl
inc
xchg
fcmovbe
inc
outsb
jne
in
test
imull
mov
cli
xchg
ficoml
add
sub
inc
inc
or
loop
jge
std
movsl
cmc
rolb
mov
dec
push
or
cld
jl
fcomip
and
add
xchg
lods
in
jne
dec
and
pushf
sbb
jae
sbb
outsl
hlt
mov
inc
cmp
aad
xchg
fidivl
mov
inc
stos
mov
jbe
pop
mov
adc
mov
push
push
inc
jg
fldl
out
pop
sub
movsl
jle
jbe
xchg
loopne
into
fnstcw
inc
pop
std
in
idivb
and
test
mov
fidivl
mov
pop
test
scas
mov
mov
fs
xabort
gs
inc
inc
cmc
pop
cmp
add
pop
pop
adc
jge
pop
mov
cwtl
fcompl
push
xor
xchg
arpl
mov
pop
shll
cmp
repz
lea
or
test
in
or
out
cmp
inc
and
das
aaa
sahf
sbb
ja
cmp
cmp
dec
sbb
outsl
cwtl
movsl
push
outsl
out
jb
iret
mov
push
iret
push
std
mov
aas
loopne
rcll
in
in
lea
dec
cli
mov
xchg
aas
stos
bound
lahf
test
mov
jg
cwtl
in
call
aaa
cs
mov
loopne
out
ljmp
jno
enter
ljmp
jnp
pusha
mov
jmp
ds
cmp
cmp
daa
bound
push
insl
jnp
mov
fists
ja
idiv
pop
sub
cltd
pushl
xor
mov
xchg
and
ljmp
scas
int3
inc
mov
mov
outsb
dec
adc
cltd
or
mov
push
divb
enter
jp
inc
fwait
subl
lock
ficoms
push
stos
or
pop
std
xchg
mov
repnz
shll
insl
mov
outsl
das
xor
pop
mov
mov
pushf
mov
or
negb
ffree
ss
xchg
fadds
out
out
inc
test
cwtl
push
sbb
mov
test
fidivl
ljmp
mov
inc
rcrb
das
cltd
mov
xchg
push
cmpsl
cmp
into
out
imul
mov
in
sar
push
cmc
mov
pop
out
push
adc
add
dec
pop
in
mov
ficoml
sub
cmp
rorl
or
xchg
repnz
jbe
int3
mov
imul
nop
aas
shlb
icebp
cmp
mov
mov
fisttpl
push
clc
jmp
fwait
add
push
outsl
cs
pop
fs
fcmovbe
cmc
fsubl
in
jg
mov
xor
xor
fst
xchg
cmp
mov
and
fcomip
push
mov
push
pop
call
jl
jne
push
lock
lods
stos
mov
sarl
mov
outsb
les
ror
aam
push
testl
pusha
cmp
icebp
not
out
int
fcomi
sbb
testl
dec
push
into
jbe
sub
adc
popa
sbb
cmc
inc
out
scas
ja
jle
lds
push
jg
repz
pmulhuw
push
mov
mov
xorb
inc
or
loope
repz
idivl
shlb
divl
or
push
fcomip
mov
stos
rclb
mov
pop
notl
mov
rcll
fbstp
pop
outsb
sub
mov
mov
neg
inc
fxtract
cmp
pop
mul
cmp
cmp
push
mull
cmpsb
dec
xor
aad
dec
divl
and
mov
cmp
xchg
out
add
adc
div
mov
test
jg
adc
es
inc
dec
ja
push
cmp
inc
inc
pop
in
lds
fcom
pop
jmp
fsubrp
lods
jmp
divl
stos
jno
daa
loope
pop
notl
add
xor
push
cmp
add
sub
adcl
xchg
insl
pop
or
fldt
dec
test
pop
push
movsb
out
mov
mov
ficomps
xlat
adc
out
sub
bnd
add
cltd
std
testl
divb
scas
push
hlt
and
outsl
add
xor
cs
imull
cmp
xchg
sub
mov
aaa
sti
push
xchg
int
jno
mov
cltd
and
iret
out
ljmp
jl
mov
cmp
stos
adc
out
mov
inc
insl
dec
testl
mov
nop
pop
jge
shrl
imul
lcall
shl
adc
in
dec
iret
in
test
pop
mul
into
or
and
xchg
jge
stc
cmpsl
or
jo
xor
xor
adc
add
loopne
sub
fcmovnbe
insb
imull
xchg
and
repz
cltd
imull
mov
frstor
in
into
xchg
xchg
sbb
adc
outsl
fisubrs
sub
push
loope
and
mov
mov
or
pop
and
jb
outsl
daa
push
div
inc
cmpsl
xchg
loop
mov
xchg
out
dec
sub
out
mull
movsl
pop
pop
scas
pop
push
sbb
icebp
ret
into
xlat
push
in
pusha
cmp
or
pop
xchg
imull
xor
push
push
cld
testl
pusha
je
push
sub
xchg
and
and
sub
lret
negl
pop
xor
jae
fs
adc
mov
hlt
or
push
ss
pusha
js
fldt
or
div
std
scas
add
push
cs
push
cmpsb
mov
lea
notb
xlat
test
js
xlat
pop
loopne
fsubrp
cmp
jmp
add
les
adc
xchg
xor
addr16
or
negl
or
loopne
adc
cwtl
dec
call
push
sbb
testl
xchg
push
lret
je
pop
idivl
adc
pop
loope
loope
idivl
cmpsb
jg
push
mov
int3
pop
xor
mov
xor
test
mov
jg
cs
sbb
je
mov
cmp
pop
fidivrl
sti
or
xlat
sbb
xchg
xchg
fwait
push
es
and
imull
push
mov
ror
and
xor
xchg
testl
into
fcom
cwtl
jecxz
stc
mov
mov
pop
negl
pop
xor
idiv
lea
leave
outsb
mov
xchg
and
add
mov
lret
in
and
out
popf
cmpsl
mov
pop
cmp
push
sbb
xchg
ficoml
dec
pop
pusha
push
lret
or
xchg
mov
add
imul
aas
fisubrl
or
rorb
mov
sub
inc
sti
mov
or
mov
rolb
jns
adc
pop
insl
out
adc
setb
cmp
inc
cltd
cld
xchg
int
xchg
sub
gs
adc
push
pop
js
inc
mov
imul
push
adc
push
pop
xchg
ds
sub
mov
sarl
mov
gs
jecxz
cmp
sbb
pop
sbb
ljmp
cld
xchg
hlt
sub
dec
fidivl
fstl
movsl
sub
xchg
jmp
cmp
pop
mov
cltd
mov
or
lock
xchg
rcrb
xchg
inc
out
js
mov
stos
faddl
cmpsl
dec
mov
jecxz
loope
fiaddl
mov
and
test
sub
outsl
cmp
imul
repnz
mov
add
mov
cmp
shlb
loope
in
jmp
sbb
xchg
stc
mov
fsubr
add
sbbl
mov
and
jl
divl
mov
int3
push
fiaddl
jmp
sbb
mov
sub
mov
add
and
lret
cld
sub
popa
les
lods
mov
add
scas
push
mov
imul
adc
jp
popa
pop
ret
cmp
jbe
fidivl
data16
xchg
icebp
ljmp
scas
push
clc
arpl
divb
jp
pop
jo
in
mov
out
out
mov
jecxz
xlat
iret
imul
dec
cmp
jl
push
movsb
ja
fwait
mov
push
loope
or
nop
inc
lahf
ljmp
mov
and
inc
flds
or
push
add
xchg
fmul
jmp
sub
add
ja
test
out
mov
pop
xor
jae
movsb
jg
outsl
xchg
and
push
fs
jns
mov
out
pop
arpl
mov
sub
bound
sti
inc
clc
jge
pop
fwait
test
pop
pop
or
fwait
in
inc
sub
fdivrl
stos
fcoms
fstl
push
xchg
xor
sbb
cld
adcb
xchg
nop
in
movsl
je
imul
ret
enter
dec
mov
fisubs
dec
shlb
cvttps2pi
mov
lcall
xchg
push
pop
pop
das
pusha
shll
lret
adc
pop
add
mov
out
xchg
sbb
testl
jbe
divl
mov
mov
out
cmp
lahf
push
jmp
neg
pop
add
fwait
adc
clc
jg
or
dec
testl
mov
xchg
jns
in
mov
sub
icebp
imull
hlt
aad
or
add
ss
jecxz
mov
or
addr16
mov
in
sbb
dec
mov
pop
rolb
cli
mov
testl
mov
lahf
test
mov
notl
sti
push
rcl
lods
mov
xchg
adc
idiv
cwtl
icebp
stc
xchg
insl
push
push
xchg
mov
jecxz
dec
xchg
and
idivl
xlat
push
xor
paddusb
shll
jecxz
test
push
adc
mov
push
ret
inc
dec
or
mov
inc
imul
movsl
sub
in
jno
insb
adc
lds
shll
leave
notl
cmp
sub
out
dec
jo
hlt
insl
out
leave
in
mov
int3
ret
xor
lret
out
push
aam
jmp
pop
sarl
lcall
call
push
out
pop
sbb
dec
sbbl
popf
xchg
aad
in
leave
stos
fiaddl
sbb
or
fs
pop
shl
add
out
jecxz
mov
rorl
push
std
call
xlat
fcoml
sbb
inc
stos
testl
stc
pop
idivl
and
pusha
adc
repnz
div
sbb
aam
pop
scas
xor
add
loope
inc
adc
out
pop
mov
jecxz
mov
cmc
int
subl
mov
iret
pop
xor
sti
loopnew
div
cmp
in
push
cld
arpl
divl
jno
mov
cmp
jle
push
inc
sub
cltd
jae
iret
je
adc
dec
jb
sub
pop
jno
stos
dec
in
icebp
test
lret
neg
lock
xor
mov
cmpsl
mov
jge
pop
mov
int
lods
jecxz
dec
jne
bound
insl
or
divl
mov
inc
notl
cld
adc
jns
pop
notl
add
fwait
in
mov
push
stos
jecxz
pop
and
push
cltd
daa
das
lcall
mov
mov
or
bound
pop
in
cmc
sub
daa
dec
ret
mov
out
xchg
addr16
rcrl
out
jae
and
xchg
decb
cmp
xchg
jle
ret
cmp
xchg
dec
pop
aaa
in
sbb
negl
or
negl
jb
or
aad
xlat
fwait
or
insb
pop
mov
pop
cld
pusha
nop
adc
rsqrtps
push
mov
lods
popf
sti
aaa
sbb
dec
mov
testl
push
pop
mov
push
pushl
cld
lcall
insb
jno
cmp
shl
les
mov
nop
popf
repz
mov
xor
ret
jmp
sbb
insb
sub
jno
dec
popa
adc
adc
inc
adc
xchg
loop
push
sub
pop
jle
inc
xor
popl
rol
pop
add
aas
es
ret
ss
jnp
sarl
sub
sbb
aaa
out
divl
pause
movsb
mov
insb
mov
testl
sub
je
ret
jae
testl
shlb
sahf
cmp
ss
mov
xchg
push
test
jmp
pop
aas
sbb
imul
nop
imull
ret
push
out
push
dec
fcoms
out
push
mov
or
xor
enter
cli
jb
push
pop
add
xchg
mov
cmpsl
cld
mov
pop
das
lock
xchg
test
outsb
mov
movsb
mov
xor
out
sbb
fstl
add
fmul
rcrl
repz
jmp
std
pop
push
inc
jo
jae
mov
leave
xor
sahf
dec
and
inc
divl
imul
pop
imull
xor
dec
pushf
ss
pmulhw
testl
nop
cld
xlat
roll
fnsave
add
xor
mov
fnsave
or
bound
mov
dec
pop
or
sub
add
sbb
out
nop
jecxz
pop
idivl
inc
out
push
mov
loopne
outsb
in
mull
mov
or
js
add
jge
jecxz
cmpsl
add
lret
mov
cmp
push
adc
pop
add
incb
cmp
inc
out
add
lcall
sbb
repnz
rolb
jns
in
fldenv
mov
scas
sbb
fwait
sbb
pop
lret
mov
in
ret
inc
and
out
outsb
movsl
js
mov
fpatan
adc
mov
or
mov
xchg
cmp
sub
lea
aaa
mov
fcmovb
sbb
out
mov
sti
int
repz
and
adc
and
movsl
adc
movsl
or
pop
ja
adc
mov
xor
mov
mov
test
mov
rolb
xlat
fistpll
mov
sti
ja
movsb
inc
shrb
icebp
adc
and
in
fincstp
mov
mov
stos
ss
pushf
mov
fwait
xor
xlat
mov
sub
add
loope
push
xchg
sahf
sbb
test
add
mov
jmp
js
loope
push
ss
in
pusha
fsubrs
jb
xor
jbe
out
loope
call
mov
stc
sbb
movsb
adc
fidivrl
adcl
xlat
clc
jge
divb
scas
push
psrlq
mov
das
or
ljmp
ja
add
lahf
adc
call
pop
insl
lret
dec
stos
xlat
out
les
jne
jge
out
jns
sbb
pop
fldenv
insb
mov
shll
inc
jmp
insb
loope
testl
cmp
lds
out
adc
fucomi
lods
pop
or
pop
jns
sbb
mov
adc
push
push
inc
int
fbld
je
cmp
inc
xchg
je
fimull
add
loopne
scas
xor
and
jno
adc
sub
dec
jo
cmp
add
not
mov
adc
add
xchg
subl
popf
aas
pop
sti
sub
xlat
arpl
lret
fcomps
xchg
iret
inc
adc
adc
scas
loope
cmp
push
movsl
imul
push
dec
scas
push
int3
xlat
and
clc
jno
xor
inc
jns
mov
inc
movsl
fdivp
repz
mul
lret
jle
insb
adcb
lock
stc
cmp
shl
push
imull
dec
cmpsb
jne
xchg
adc
out
push
cwtl
xchg
xchg
adc
xchg
sub
out
and
jne
jo
pop
jmp
push
icebp
scas
in
jp
negl
adc
push
jle
mov
sbb
adc
daa
mov
clc
cmp
testl
test
insb
inc
je
add
cmp
push
cmp
lcall
fimuls
loope
xor
insb
cmc
mov
icebp
xlat
mov
popa
pop
pop
sahf
imull
and
xor
nop
mov
jmp
push
jae
sti
inc
push
jle
addr16
jnp
sbb
iret
outsb
out
nop
mov
lods
je
gs
mov
mov
ja
push
loopne
mov
test
xchg
sbb
mov
lret
and
fs
mov
clc
pop
push
xor
ss
xchg
shl
sahf
cli
mov
daa
sub
repz
cmpsl
gs
sti
jo
cmp
inc
inc
fs
cmp
fdivrs
add
popf
push
cmc
imul
scas
sbb
inc
xor
in
ja
hlt
pusha
mov
pushf
dec
call
pop
lret
add
loope
xchg
fimull
xchg
mov
adc
outsl
mov
jmp
cltd
jmp
jno
mov
out
cmpsl
jb
cmp
movsb
mov
jno
jmp
mov
dec
jge
aaa
dec
jnp
rcll
pop
sbb
lret
xlat
xchg
add
jle
arpl
adc
test
sarl
mov
add
pop
pop
xor
out
fidivrl
jecxz
add
mov
mov
out
push
jbe
mov
push
xor
and
add
xor
jg
into
inc
pop
and
and
xchg
in
and
movsl
jo
sub
bound
add
addr16
dec
sub
out
jge
into
lret
outsl
aad
insl
dec
notb
cmc
jno
and
mov
xlat
pop
fld1
in
sub
jae
sti
sbb
push
mov
xor
jb
adc
and
mov
insl
lds
mov
out
aaa
jb
addr16
aas
lret
xchg
and
mov
sbb
jle
add
out
or
sub
xchg
sbb
lods
jae
lods
or
add
fdivrs
into
cmpsl
out
test
pop
jge
popf
adc
scas
lcall
shl
mov
mov
fdivrl
pop
scas
ja
imul
int
mov
hlt
js
imulb
cmp
fisttpl
jne
out
push
lds
jns
pop
xor
ja
in
mov
popa
sub
ret
lods
std
mov
bnd
or
cwtl
rcrb
divl
lock
adc
or
je
imul
sbb
sbb
movsl
fs
movsb
loope
cmp
xor
or
and
dec
lds
dec
fnstsw
sub
aaa
xchg
add
int
cli
adc
push
mov
or
std
and
mov
jge
push
popf
pop
inc
and
mov
out
cmp
sbbb
or
dec
push
and
movsb
lahf
xor
iret
sub
pop
mov
lcall
dec
xchg
push
jb
mov
xchg
mov
arpl
xor
movsb
in
or
and
ljmp
cmp
negb
push
sbb
xchg
leave
fwait
jmp
push
int
xchg
xchg
lock
sub
xor
and
push
cltd
mov
out
das
fs
ss
jb
or
scas
cmp
inc
mov
clc
xchg
pop
out
dec
out
repnz
leave
and
jp,pt
jl
mov
les
je
push
cmc
shl
xchg
cmp
cmp
adc
pop
dec
addr16
add
pop
push
fs
pop
loopne
jae
es
mov
jne
push
mov
mov
jne
jl
mov
sub
icebp
out
and
js
jae
sub
adc
xchg
ljmp
jbe
jge
mov
fadd
mov
fsubr
fisubl
and
mov
fists
notb
or
push
cmc
aas
fisubrl
cmp
jns
test
sti
fsubrs
stos
jne
aas
pop
pop
sub
addr16
mov
out
xchg
jb
enter
lock
mov
jmp
in
jns
jne
sbb
inc
mov
in
mov
mov
jmp
add
dec
popf
adc
mov
push
in
jne
sti
cmp
jp
or
sbb
stos
pop
hlt
fsubs
aad
repnz
jecxz
mov
lods
mov
repnz
push
and
push
mov
jns
pop
xor
inc
dec
push
outsl
int
xor
out
fimull
add
jl
sub
rorl
ljmp
jp
iret
add
mov
jge
push
inc
loopne
outsl
xchg
movsl
mov
ret
imul
adc
lods
lods
sub
sbb
push
mov
push
mov
mov
xchg
and
bound
push
xor
sbb
xchg
in
lahf
mov
in
movb
sub
jns
lret
push
mov
in
ljmp
jnp
add
xor
addr16
mov
mov
mov
xor
and
nop
mov
mov
push
jno
inc
fsub
iret
sbb
cli
or
jbe
scas
movsl
mov
ds
sbb
sbb
cmp
lcall
fcmove
push
jmp
adc
xchg
dec
xor
mov
adc
xchg
mov
jb
mov
pop
out
inc
cmc
fidivl
dec
jae
loop
outsl
xchg
pop
or
adc
loopne
imul
ljmp
lods
inc
and
xchg
rcl
xor
repz
stc
pop
add
movsl
insl
ja
sbb
and
xchg
sbb
add
push
je
leave
out
xor
pop
aad
dec
xchg
mov
cmp
adc
and
jne
or
addr16
push
xor
add
xchg
ja
xor
and
iret
jmp
popa
xchg
fiaddl
cmpsb
js
push
int3
add
movsl
insb
fisubrs
push
mov
mov
rclb
or
ljmp
mov
ror
add
lock
mov
je
adc
mov
mov
xor
dec
fisubrl
in
cmc
sbb
jb
dec
mulb
fisubrs
dec
adc
xchg
mov
ret
iret
mov
inc
push
add
sub
flds
mov
cmp
jae
mull
ljmp
in
imul
rolb
push
icebp
imul
inc
jbe
pushf
pop
flds
popf
cmp
fisttps
pop
jecxz
add
iret
xchg
sub
jecxz
mov
int
jmp
enter
pop
arpl
or
scas
ret
and
out
js
sbb
inc
push
mov
fwait
cmp
or
pusha
and
inc
or
add
daa
daa
pop
sub
or
ret
or
xor
xor
sahf
pop
je
in
cmpsb
std
lcall
shlb
xchg
lds
arpl
mov
enter
ret
cmp
pop
xchg
sbb
lahf
in
xlat
inc
lret
iret
cld
repz
clc
push
shll
jg
mov
in
sarb
out
push
mov
jae
fsubs
outsl
int
sub
stos
jae
mov
cmc
in
in
test
gs
int3
or
movsl
xor
insl
push
jle
pop
test
cmc
and
out
inc
pop
loopne
test
out
ja
pop
sbb
pop
or
dec
inc
cmpsl
out
lock
outsl
push
cld
rcrb
mov
ja
dec
scas
jne
push
sub
cvtpi2ps
scas
xor
xor
mov
dec
js
rol
or
pop
inc
xchg
shlb
jbe
cmp
addr16
cmpsb
mov
sbb
cmp
xchg
and
pop
loop
xor
fcoml
ficoml
clc
mov
pop
shl
push
fsubr
adc
in
stos
xchg
push
lret
mov
and
mov
sahf
adc
std
mov
vxorps
lock
mov
out
dec
enter
or
mov
adc
test
shl
push
sbb
push
sub
jp
in
jno
push
sub
mov
ds
cld
and
icebp
rolb
aad
mov
and
cmpb
testl
sub
pop
mov
xor
mul
xchg
jecxz
imul
mov
test
sar
sbb
lods
push
sub
pop
jp
test
jb
sub
sti
jae
ja
adc
xchg
adc
clc
push
mov
fiaddl
xchg
jp
mov
cmp
add
stos
dec
out
jnp
or
fwait
and
test
adc
test
inc
cmp
pop
aam
mov
movsl
loop
jb
adc
sbb
push
outsb
mov
es
sub
mov
cmp
push
gs
dec
inc
or
cwtl
pusha
notl
mov
adc
cmp
or
ja
push
mov
je
test
icebp
iret
div
sub
aas
mov
notl
ljmp
dec
cli
jne
lret
divl
aas
adc
pop
xor
and
aad
arpl
in
mov
jns,pt
mov
repz
mov
cmpsb
testl
jno
lods
add
in
negl
pop
loop
xchg
daa
mov
dec
ret
lock
dec
idivl
add
pop
sub
idivl
shll
mov
into
xchg
pop
scas
cmpsb
outsl
cmp
test
inc
idiv
adc
or
mov
mov
inc
mov
fistps
aaa
jmp
test
dec
jp
mov
adc
adc
pop
xchg
stos
add
mov
cmpsl
mov
or
add
fildl
mov
imul
and
ds
cmp
dec
mov
idivb
lock
push
jo
testl
push
lock
loop
jno
divl
outsl
xlat
sub
idivl
sbb
mov
ja
idiv
mov
inc
lods
adc
jg
jecxz
jecxz
lea
xchg
ja
cmpsl
pop
xor
mov
push
aam
xor
mov
out
jno
cwtl
push
xchg
test
int3
jl
xlat
sbb
or
dec
cltd
sbb
xlat
dec
xchg
adc
pop
es
and
push
cmc
push
aam
repz
mov
imul
inc
out
pop
call
dec
push
daa
xchg
test
fmul
dec
sub
notl
popf
aas
aaa
scas
mov
ret
imul
pop
mov
cmp
adc
xchg
cltd
aad
imull
pop
sahf
sti
out
fdivrl
jne
mov
mov
imul
mov
shr
ja
mov
lods
cwtl
ds
xchg
fcmovb
inc
stc
and
and
mov
push
and
add
jl
mov
or
pop
shlb
lahf
sbb
idiv
or
cmp
mull
je
xchg
sub
imul
in
and
sbb
lock
jl
in
xlat
push
popf
repnz
adcw
sub
idivl
mov
imull
int
repnz
add
je
inc
jp
sbb
testl
add
sub
mov
push
pop
ljmp
cltd
shll
mov
sbb
xchg
push
adc
ss
jmp
mov
push
push
hlt
push
mov
insb
pop
xor
addr16
adc
js
test
cli
push
adc
sub
mov
pushf
ljmp
fiadds
aaa
jns
xor
mov
jg
pop
mov
negl
push
cmp
xchg
cli
and
jl
xlat
shll
fcomp
add
push
aam
lods
mov
inc
push
dec
mul
pop
inc
test
loope
xor
jb
cmp
jl
iret
xchg
jo
in
dec
add
inc
push
into
add
testl
jns
or
out
mov
fwait
aas
dec
pusha
mov
fildll
pop
ja
xor
adc
in
sub
add
inc
repz
arpl
pop
scas
hlt
ss
dec
pop
jae
jmp
sub
rcll
mov
push
pop
shrb
lret
xchg
adc
add
dec
or
adc
scas
cmc
loop
nop
aad
imul
push
out
xor
mov
imull
dec
ja
mov
add
fnstenv
fbld
roll
jle
mov
push
mull
jmp
and
lcall
in
out
je
mov
pushf
stos
push
scas
data16
sarl
ja
push
fisttpl
out
daa
xlat
sub
and
mull
adc
je
leave
mov
sub
mov
cmp
sarl
xchg
nop
fiaddl
jmp
out
sti
mov
cld
mov
fdivrl
and
testl
inc
enter
fbld
sub
subl
pop
out
int3
shr
lret
jle
jb
push
push
aaa
sub
mul
or
inc
ss
xchg
dec
mov
clc
in
popa
mov
pop
outsl
notl
movsl
dec
sarb
mov
idiv
imul
lods
xor
dec
mov
push
out
sub
testl
xchg
int3
notl
mov
ljmp
sbb
cli
push
push
jb
xchg
mov
fs
out
nop
fstpl
repnz
inc
ret
mov
jecxz
arpl
cmp
loop
add
inc
jmp
xchg
jle
cmpb
cli
divl
jbe
fists
add
jecxz
jmp
int3
xchg
lret
movsl
jmp
mov
ss
dec
cld
jge
repnz
test
je
mov
sbb
iret
jb
lock
jl
pop
pushf
aaa
adc
push
adc
mov
or
popa
lret
jecxz
scas
mov
sbb
jb
mov
pop
mov
out
pop
mov
and
std
cld
jne
adcl
xor
mov
stos
xchg
mov
dec
pop
xor
dec
test
mov
int3
push
xor
cmp
into
xchg
pop
mov
movb
iret
xchg
jmp
les
mov
sub
repnz
dec
mov
fwait
loop
pop
dec
test
into
mull
je
fidivl
pop
mull
arpl
idiv
in
adc
inc
vmread
sub
fldt
out
adc
inc
jmp
testl
jns
pop
mull
lods
or
xchg
imul
loopne
mov
jg
inc
je
add
jecxz
rcll
pop
sbb
mov
repz
shlb
cmp
outsl
jae
mov
mov
add
pop
mov
pop
adc
sbb
push
test
sub
push
xlat
push
dec
pop
dec
pop
jo
mov
test
out
maskmovq
xchg
popf
sbb
divl
push
sbb
cwtl
dec
repnz
push
xchg
jb
and
and
push
xchg
movsl
adc
outsb
jge
imull
sub
iret
adc
testl
mov
jae
int3
adcl
insl
jb
jmp
xor
and
pop
test
push
sbb
fcomip
inc
dec
out
pop
cmp
push
inc
and
xor
or
xor
dec
stos
pop
je
adc
test
pop
stc
fwait
lock
ret
sub
add
rcll
idivl
or
jae
push
aaa
ja
xor
add
scas
cmp
inc
and
jne
fs
mov
dec
jg
in
mov
sub
divl
ja
cwtl
data16
divl
mov
xchg
ss
sarb
notl
loop
mov
imull
clc
mov
neg
adc
iret
mov
sub
lods
in
outsb
aad
testl
push
jno
pop
movsb
lret
dec
in
shrl
stos
cld
mov
or
fcoms
pusha
mov
push
aaa
test
popf
or
add
lods
shll
pusha
inc
adc
cwtl
stc
fidivl
push
in
or
pop
in
fimuls
sbb
rep
scas
pop
movsb
jle
loop
mov
out
cwtl
sub
and
cmpsb
push
aas
adcb
inc
les
cmp
inc
ljmp
in
div
test
push
leave
testl
mov
notl
pop
pop
xor
dec
fidivrl
sbb
cmp
repz
divl
adcl
add
jl
xlat
mov
cltd
lret
sbb
cmp
leave
sbb
sti
lret
lock
lcall
pop
or
mov
xor
xor
sub
daa
pop
pop
nop
fcoms
arpl
out
mul
or
loopne
adc
shr
ss
fbstp
xchg
sbb
daa
jg
pop
pop
es
into
call
pop
movsl
loope
mov
bound
lods
outsb
divl
lret
jb
inc
xor
divl
daa
push
xchg
add
mov
negl
cmp
insl
mov
inc
sub
cltd
add
mov
in
and
sub
mov
xchg
jo
jle
jns
movsb
add
in
mov
or
imul
mov
mov
aam
in
and
fwait
divl
pushl
je
inc
idivl
fincstp
xchg
xchg
push
test
xchg
negl
sbb
popf
xor
sbb
mov
imull
cmpsl
add
inc
or
out
dec
cs
daa
ret
leave
int
ficompl
fincstp
je
lds
and
or
lcall
scas
dec
sub
or
xchg
outsl
xchg
das
sbb
xchg
sub
pop
push
or
daa
add
movl
pop
fldt
or
and
fbld
pop
xchg
push
mov
in
mov
negl
mov
testl
dec
xlat
jecxz
pop
aas
add
sbb
clc
jns
jb
fwait
outsl
mull
out
xor
xlat
push
inc
hlt
sub
pop
jnp
pop
js
loopne
pop
push
xor
aam
adc
fiadds
inc
sub
xor
mov
inc
in
mov
mov
frstor
int3
repnz
idivl
jno
pop
push
add
push
in
xchg
pop
pop
inc
pop
jg
sbb
mov
clc
xor
mov
and
sbb
scas
push
mov
add
into
xlat
sbb
add
push
xchg
loopne
xchg
outsb
sub
fisubrl
cmp
sub
notl
jns
cmp
sahf
xlat
out
xchg
sub
adc
push
bound
add
stos
aaa
pop
inc
or
xchg
mov
push
fs
mov
mov
jne
gs
loopne
fisttpl
repnz
sbb
sub
adc
inc
aaa
jbe
pop
push
add
jns
rcl
divb
adc
add
test
test
inc
popa
fld
sub
or
pusha
sub
movsb
adc
sbb
mov
imul
jg
xchg
pop
cmp
pushf
mov
dec
xor
ja
mov
xchg
adc
jecxz
dec
pop
lea
int
mov
movsb
push
outsb
stos
mov
inc
call
ret
or
outsb
cmp
je
jae
ret
pop
mov
jnp
add
pop
ss
pop
movsb
gs
popa
push
xchg
and
mov
cmp
lock
scas
pop
ljmp
out
test
aaa
jnp
mov
jmp
leave
add
add
jnp
mov
jmp
out
loop
or
out
jecxz
jne
pop
subb
lcall
and
mov
or
aaa
jecxz
pop
mov
jmp
jmp
mov
cltd
and
inc
cmp
lret
pop
shlb
repz
and
mov
mov
jle
scas
dec
jmp
in
test
sub
movsl
jl
pop
sub
stc
sahf
add
pop
in
iret
pop
or
jp
fs
inc
adc
xchg
cmp
mov
inc
cmp
adc
sbbb
dec
sbb
adc
push
mov
scas
push
dec
mov
sbb
or
les
sub
lret
rclb
ja
test
pusha
jns
out
out
mov
jo
mov
fucomip
xlat
in
mov
add
ljmp
shrl
mov
in
jno
data16
in
sub
xor
mov
stos
jmp
in
cmpsb
or
jle
sbb
movsb
lret
adc
push
push
scas
mov
mov
push
sub
sbbl
repz
pop
fcmove
fcmovu
jmp
push
out
mov
push
outsl
cmp
mov
jmp
imul
fdivrp
xchg
divb
out
mov
std
add
in
cmp
mov
inc
mov
in
ficompl
add
into
push
ret
jl
dec
ljmp
or
outsb
ja
repz
cld
inc
jae
and
and
mov
sub
fidivrs
mov
ficoml
outsl
or
push
mov
adc
arpl
push
xor
outsb
sbb
push
loope
jne
stos
add
xchg
data16
mov
test
jns
cmpsb
cltd
dec
adcl
adc
xor
push
sbb
jns
inc
out
movsb
fildll
loopne
in
lods
xor
xchg
out
push
repz
lahf
leave
js
cmp
add
xor
jmp
inc
pop
ficoms
int
xchg
pop
adc
inc
sbb
cld
and
mov
mov
jmp
dec
in
fidivrl
scas
rcl
in
out
ljmp
xor
shlb
insl
mov
mov
push
inc
rcl
sbb
fimull
daa
out
loope
lahf
jb
cmc
fs
add
mov
xor
popf
scas
pop
cwtl
repz
out
jbe
outsl
movsb
rcrl
cmc
xorl
cwtl
in
les
adc
outsl
add
push
fcmovu
inc
cwtl
cmpl
jae
rcl
repz
int
ja
movsl
fistpll
add
in
repz
mov
xor
test
inc
loopne
ftst
rolb
cmp
xor
inc
mov
movsl
push
in
rolb
sarb
aam
mov
aaa
cmp
fimull
sahf
lcall
rol
cmp
stos
dec
dec
idivl
inc
lcall
gs
mov
mov
sbbb
mov
and
scas
inc
sbb
sub
dec
push
dec
mov
push
add
es
aas
iret
shr
mov
adc
dec
mull
jmp
in
stos
div
ja
out
jmp
sahf
gs
aas
fs
jno
fwait
mov
lcall
movsb
push
mov
jbe
mov
nop
jmp
pop
neg
mov
pop
aad
mov
mull
cmp
ss
cli
mov
cmp
out
out
jg
mov
out
inc
cmp
push
ret
push
xchg
and
sbb
neg
mov
scas
dec
jne
pushf
test
adc
icebp
in
mov
xlat
fiaddl
xor
mov
inc
push
aaa
dec
inc
add
xor
adc
leave
pusha
jno
push
aam
rorb
xor
jge
cld
outsl
inc
dec
xor
dec
mov
or
sti
adc
push
adc
pop
pushf
jnp
stos
or
int3
icebp
xchg
fstl
in
in
jle
inc
dec
scas
mov
mov
out
jbe
jo
out
int3
cmp
shl
lret
leave
inc
xchg
cmpsb
cs
mov
shll
ret
out
push
adc
idivl
dec
cli
lret
loop
icebp
pop
cmpsb
push
and
cmp
inc
and
adc
lcall
neg
ret
stos
mov
enter
add
mov
shl
xor
loop
aam
jp
stos
cwtl
adc
cmp
hlt
or
mov
pop
out
negb
fiaddl
push
jle
mov
lea
mov
jno
xor
stos
xchg
sub
mov
cwtl
out
loope
xchg
mov
jecxz
mov
notl
sub
test
xchg
add
imull
cmp
dec
inc
hlt
sub
pop
inc
fneni(8087
filds
and
dec
pop
pcmpgtd
or
cmp
mov
sbb
add
jae
sbb
jo
inc
out
xor
cld
jnp
push
notl
xor
lods
jbe
loope
popf
add
pop
push
xlat
repz
in
stos
cmpsb
pop
xchg
xor
dec
rcll
dec
jo
push
push
inc
mov
imulb
jge
pop
cld
aam
loopne
push
cmc
adc
in
adc
imull
xchg
xchg
jbe
mov
mov
cmp
inc
pop
adcb
jno
jmp
jnp
sub
lods
mov
add
xor
loope
lods
bound
push
aaa
jnp
das
hlt
notl
mov
xchg
divl
push
dec
pop
add
sbb
lret
mov
lock
popa
popf
lcall
xchg
push
sbb
mov
and
rolb
iret
inc
push
xchg
xor
out
adc
inc
daa
xchg
dec
jae
pop
dec
ret
xchg
int3
testl
dec
adcl
mov
out
jo
pushf
pop
notl
cmpsl
clc
bound
sub
scas
push
push
int
sbb
idivl
scas
pop
push
repnz
adc
movsb
mov
cmp
cmpsb
mov
jnp
hlt
rcl
lcall
mov
aam
sub
xchg
pop
int3
aas
inc
imul
and
xchg
add
cwtl
loope
mov
jmp
aaa
std
inc
cs
pusha
pop
lea
mov
loopne
inc
add
adc
imul
fnsave
sub
scas
sbb
call
mov
push
call
pop
mov
repz
insl
pusha
ja
cmc
ret
subb
cmp
sbb
push
mov
pushf
cwtl
add
jb
jl
idiv
movsl
in
push
insl
testl
add
aad
inc
out
adc
xlat
and
fcoml
add
jbe
mov
repnz
imul
or
arpl
mul
mov
jo
or
loop
dec
add
add
xlat
je
adc
mov
pop
cmc
adc
out
push
test
mov
movsb
xchg
sub
testl
test
loope
and
aaa
mov
sbb
jp
cmpl
inc
mov
dec
outsb
notl
add
divb
loop
idivl
or
leave
pop
insl
cmp
testl
inc
jo
dec
movb
negl
cmpsl
mov
ret
mov
sbb
int
dec
stos
inc
cwtl
insb
xchg
out
cli
loop
inc
mov
inc
dec
out
leave
loopne
stos
fs
jge
sub
dec
sahf
or
or
xchg
inc
xlat
cs
and
fidivl
idivl
dec
pop
sbb
lret
cmp
push
fwait
mov
addr16
sti
scas
xchg
mov
ret
jo
pop
in
ss
jg
int
in
bound
ljmp
fisttpll
push
psubq
sbb
cmp
idiv
ret
xlat
and
jno
cmc
sti
fisttpl
push
pop
mov
jmp
push
lock
adc
xchg
nop
jne
sub
out
jecxz
fadds
or
push
dec
xchg
fbstp
jno
rclb
dec
cmp
lret
push
orb
sarb
testl
aam
xchg
cs
mov
push
hlt
pop
into
push
jge
mov
or
mov
test
enter
les
lock
lods
mov
cli
xchg
jp
insb
push
xor
ret
out
js
push
sub
dec
fcomp
xchg
sbb
movsl
aaa
mov
test
divb
std
addb
jmp
inc
xor
mov
es
cmpsl
and
out
out
xchg
adc
mov
inc
test
sbb
test
sbb
arpl
adc
xchg
out
mov
push
and
dec
out
sub
iret
mov
or
xchg
call
call
sti
sbb
jmp
jbe
mov
dec
insl
mov
insb
mov
mov
js
xchg
mov
roll
dec
and
cltd
jno
or
call
and
pop
push
add
int3
rol
shlb
dec
jbe
push
jge
cwtl
pop
add
adc
mov
sub
incb
mov
or
sub
push
out
sbb
int
jo
sbbl
js
ja
push
iret
jbe
ljmp
mov
sbb
push
mov
rolb
fs
jmp
jmp
push
mov
pop
fwait
sub
test
sub
popf
mov
mov
mov
sbb
mov
ret
scas
clc
jne
daa
mov
pop
fistpl
jmp
jle
dec
xlat
addl
mov
push
sahf
xlat
cmp
adc
cmpsb
mov
cmc
xlat
outsb
xchg
jne
add
jp
rcrb
daa
clc
push
mov
insb
subl
iret
cmp
testl
call
icebp
imulb
movsb
ror
shl
ljmp
adc
mov
adc
fildl
pop
mov
or
adc
mov
xor
or
push
xchg
mov
dec
xor
pop
push
jns
xchg
fcom
fdiv
pop
push
repnz
ficomps
popf
mov
mov
sub
mov
jo
xlat
push
xchg
int
xchg
leave
pop
in
and
pop
stos
push
in
mov
xor
test
pop
xchg
sbb
cmp
subl
imulb
test
mov
js
lret
push
lods
mov
movsl
notl
scas
xor
mov
sbb
push
sub
fistl
jp
xchg
mov
mov
outsb
mov
mov
mov
dec
mov
std
aas
stc
xchg
mov
xlat
imull
mov
push
in
xchg
out
dec
fistpl
and
mov
xor
pop
jno
out
dec
sub
mov
xor
into
mov
nop
mov
call
jmp
test
outsl
add
cmp
rcl
inc
cmp
imull
jb
pop
sarb
mull
push
sbb
add
xlat
xlat
out
mov
insb
jno
cmpsl
testl
in
stos
outsl
mov
pop
not
sub
pop
cli
or
adc
pop
xchg
xlat
mov
ja
sbb
test
xchg
notl
inc
cmpsl
stc
mov
push
imul
out
lea
pushf
pop
pop
testl
sbb
idiv
hlt
inc
fdiv
mov
xchg
stc
sub
push
push
sbb
push
arpl
rorl
or
jmp
xlat
adc
add
les
fisubrs
iret
xchg
decl
mov
sbb
repz
lock
push
std
sbb
test
push
fstpt
mov
sub
xchg
loop
rorb
fnstsw
dec
push
rcrb
out
jbe
outsl
idiv
int
mov
add
jnp
adc
in
out
fistpll
divl
mov
call
mov
in
aas
pop
push
sbb
stc
outsl
inc
aad
xlat
sahf
fsubl
in
lahf
mov
testl
dec
cld
shr
jecxz
mov
xchg
pop
mov
repnz
jns
es
mull
dec
sahf
xchg
mull
xlat
daa
pop
push
push
sub
xor
imull
pop
dec
mov
aad
push
lods
fsts
filds
jno
aam
sarl
rcrl
into
mov
mov
std
mov
pop
jmp
sarb
push
testl
mov
pusha
lahf
or
xchg
pop
outsb
and
push
dec
jns
pop
imul
pop
add
test
jne
rorl
aad
sbb
pop
add
jecxz
add
je
inc
aam
fcomi
out
inc
mov
pushf
jo
sub
xchg
scas
mov
fsubr
xchg
ljmp
negl
mov
lock
jg
in
lret
jecxz
and
testl
subb
xchg
mov
in
xchg
xor
rcll
push
xorl
loopne
loop
imul
sahf
mov
cmp
pop
cwtl
notl
inc
pop
xlat
mov
fisubrl
scas
testl
sub
negl
test
mull
push
dec
adc
sbb
adc
arpl
mov
pop
push
out
jb
mov
xchg
xchg
scas
cli
jl
mov
int
jle
out
notl
xorb
xlat
dec
or
shl
fldenv
pushf
imull
das
sbb
test
ret
repz
aad
loope
jle
div
cmc
hlt
stos
jns
sahf
mull
xor
ss
scas
mov
out
loope
repnz
or
insl
push
mov
rcrb
xlat
fsub
and
add
fistl
mull
jp
cmp
jmp
ljmp
sub
test
into
test
adcb
not
sub
scas
ljmp
add
cmp
cmpsl
dec
ds
or
and
jecxz
nop
mov
jae
cld
out
push
repnz
push
mov
and
push
rorb
rol
sahf
push
ja
mov
addr16
dec
out
hlt
cmp
pop
notl
cmp
jae
and
idivl
lock
dec
mov
jb
inc
xchg
notl
addb
ret
aad
into
xor
outsb
pop
push
int
or
in
add
testl
dec
push
mov
lret
jae
inc
pop
mov
jbe
xor
mov
or
not
int3
and
inc
cmp
mov
shr
ljmp
xor
stos
jecxz
mov
notl
sbb
xchg
arpl
cld
lea
cltd
add
sub
jecxz
pushf
in
cmp
mul
dec
ds
test
inc
lea
or
enter
sub
mul
xor
pop
notl
xlat
push
neg
xchg
arpl
or
push
jecxz
mov
je
cmp
adc
test
jge
out
lcall
aas
shrb
jp
divl
mov
arpl
insb
sub
rcrl
fdivp
pusha
jo
cltd
xchg
test
rcl
mov
lods
dec
iret
into
push
scas
adc
xlat
mov
sbb
pop
insl
testl
jne
or
mov
or
pop
aaa
dec
divl
popa
dec
mov
inc
fldl
loope
dec
pop
xchg
mov
mov
aaa
outsl
jl
and
jnp
sub
ja
mov
xchg
neg
or
dec
repnz
mov
push
es
ret
lcall
nop
fmuls
add
jns
aad
shlb
xor
divl
xchg
pusha
pop
jle
sti
testl
dec
pop
cmpb
sbb
lret
jmp
divl
lret
cmpsl
movsl
mov
xlat
jle
stos
xchg
or
and
add
lcall
push
xor
notl
xor
out
cmp
insb
dec
clc
loope
mov
sbb
sub
dec
jmp
repnz
notl
test
lock
xlat
sbb
sbb
fstpt
jae
mov
repnz
divl
lahf
mov
pop
sub
mov
add
xchg
fildll
sbb
or
movsl
lret
negl
mov
inc
stos
notl
mov
pop
mov
divl
dec
and
cmp
out
push
dec
aad
inc
imull
lret
rolb
ss
add
fidivrs
out
aas
push
ror
dec
icebp
mul
test
push
mov
ret
pop
call
fimull
and
out
cmpsl
or
testl
movsl
ret
jae
fnstcw
loop
imul
mov
adc
jno
inc
out
push
push
sarb
pop
xchg
mov
ficoms
ds
out
loop
or
and
icebp
add
lods
sub
in
pop
add
push
rolb
out
dec
pop
mov
stos
push
cwtl
aas
int3
loop
sbb
xlat
mov
xlat
push
mov
loope
dec
out
in
pop
or
cwtl
adc
pop
frstor
test
mov
inc
testl
mov
inc
mull
dec
mov
jmp
lea
lret
xchg
test
in
leave
rol
mov
xchg
dec
sbb
pusha
jecxz
add
sub
sbb
lods
testl
div
lea
sbb
xchg
push
in
mull
addr16
and
sub
cmc
sub
test
ds
xor
addl
mov
push
bound
ljmp
cltd
imul
sub
fimull
in
loop
fsubr
neg
push
repz
enter
sub
xchg
mov
push
hlt
lcall
lock
sbb
loop
test
cwtl
sar
sbb
enter
add
cmpsl
push
inc
lods
addr16
pop
in
cmc
mov
pusha
mov
push
lret
ljmp
faddl
outsb
mov
sub
imul
mov
into
xor
sbb
aas
add
ljmp
xor
imull
adc
pop
icebp
ret
ss
xchg
lret
dec
inc
dec
inc
pop
mov
idivl
shll
mov
std
shll
push
icebp
or
cmpsl
ja
fistps
push
out
sahf
in
sub
push
dec
aas
mov
movsb
pop
cmpsb
adc
push
ljmp
push
inc
repz
ffree
cmc
push
out
out
test
pusha
js
push
fdivs
leave
cmp
aaa
out
sti
test
push
mov
mov
movsb
mov
negl
sbb
add
movl
xor
out
xchg
daa
cltd
xchg
data16
or
xor
cmp
xchg
jp
sub
inc
lcall
lock
mov
push
pushf
inc
pop
xchg
sub
notl
and
in
movsb
stc
iret
cmpsb
bound
repnz
gs
push
mov
outsl
mov
sarb
mov
stos
sbb
fbstp
lock
ficoml
dec
pop
insl
testl
fincstp
into
inc
fmull
add
scas
mov
push
sbb
jmp
xchg
lahf
inc
push
dec
push
inc
fildll
testl
and
aaa
cwtl
mov
inc
sub
pop
in
pop
push
xor
shr
add
or
inc
inc
out
leave
adcb
inc
sti
aaa
xchg
in
in
call
es
mov
xchg
adc
mov
xor
cmp
jnp
arpl
dec
xorb
jg
mov
sbb
out
test
jns
mov
xor
popa
jno
push
push
aad
xor
mov
negb
ljmp
out
mov
dec
pop
add
int3
dec
orb
cltd
sbb
cmp
imulb
dec
out
stc
or
out
mov
scas
xchg
in
fsubrs
inc
sbb
iret
fidivl
jno
mov
mov
jns
lret
in
and
aam
add
sbb
inc
sahf
xchg
repz
ficoml
rcr
mov
xor
and
repnz
mov
xchg
nop
testl
mov
stc
rcll
lret
xchg
jns
pop
add
mov
dec
jecxz
pop
iret
repz
sub
cmpsl
lock
test
mov
inc
lret
or
add
cs
inc
lcall
mov
sub
cmp
mov
scas
cltd
mov
arpl
iret
gs
sbb
mov
adc
mov
mulb
cs
rcrb
fstpt
dec
push
mov
mov
in
sub
pusha
push
push
jge
mov
sub
jns
addr16
xchg
or
adc
jbe
push
ljmp
nop
sbb
mov
or
lcall
out
pushf
push
fwait
xor
loopne
out
adc
cmp
mov
mov
xchg
mov
ret
push
inc
adc
cwtl
fimuls
test
inc
mov
imul
cmc
ljmp
rclb
sbb
hlt
push
mov
sub
imul
out
pop
sbb
xchg
sahf
xor
xor
in
lahf
loop
inc
xor
mov
lods
in
mov
daa
jo
jmp
imull
in
jno
sahf
in
idiv
xor
cwtl
mov
scas
test
testl
imulb
negl
out
and
mull
and
lock
sub
adc
shr
icebp
sbb
cmpsb
sar
jl
push
fcmovnb
push
scas
ret
adc
adc
lea
stos
add
mov
mov
jecxz
dec
idivl
in
ljmp
add
scas
add
jnp
cmp
pop
fistpll
outsl
xor
out
negl
aam
sub
pop
mov
mov
mov
ficompl
dec
cmp
fidivl
test
popa
sbb
cmp
out
pop
ficompl
cmp
push
sti
xchg
scas
jae
mov
push
cmp
inc
mov
pop
addr16
nop
mov
push
xchg
rcr
xor
test
pop
out
push
adc
iret
mov
push
inc
push
xlat
fs
test
jge
flds
mov
in
pop
jae
aaa
out
cmc
and
repz
testl
push
lea
int
rorl
imul
test
jnp
jno
dec
and
xchg
testl
jecxz
adc
je
out
sti
dec
fnstsw
div
mov
testl
mov
loope
push
gs
mov
ljmp
shlb
mov
cmp
jge
xchg
push
outsb
xchg
jno
mov
dec
test
adc
iret
idivl
aaa
in
negl
ljmp
negl
dec
test
xchg
mov
adc
outsb
ret
xchg
sub
sbb
dec
inc
cwtl
testl
imul
mov
popf
xchg
jbe
fwait
je
dec
nop
push
popa
stos
cmpsb
sti
cs
mov
xor
mov
fwait
pop
nop
filds
bound
xlat
sub
mov
ret
push
pop
rclb
fists
xchg
popf
ret
call
fisubl
jo
fdivl
subl
es
lods
pop
jbe
testl
inc
ret
fs
push
sahf
fistl
jle
ljmp
adc
stos
fbld
mov
mov
mov
outsl
in
cltd
xor
mov
fdiv
cwtl
jg
idivl
push
call
test
imul
testl
mov
test
inc
inc
fisttpl
or
notl
mov
add
add
jp
dec
negl
neg
out
dec
movsl
push
pop
jnp
cli
or
test
test
outsb
stc
je
pop
repz
lcall
and
int
add
fcoms
xor
jl
outsl
xchg
test
sbb
notl
dec
mov
jae
call
or
and
in
jg
mov
in
mov
das
mov
sub
pop
std
fucomip
fistpll
jle
jno
push
orb
in
inc
pop
popf
xchg
ss
push
xlat
movmskps
lcall
fcmovnb
sbb
sbb
and
adc
fstl
flds
icebp
lret
fistl
mov
pushf
cld
notl
cs
cwtl
ja
inc
xlat
mov
push
pop
add
push
pop
idivl
pop
mov
out
movsl
out
dec
pop
aas
shl
inc
adc
scas
xlat
mov
stc
insb
sti
sbb
out
mov
cld
sub
inc
hlt
out
es
sbb
cmp
rcr
xor
inc
pop
mov
rclb
fidivs
xchg
divl
and
ja
idivl
push
xchg
or
and
or
pusha
xor
imull
lret
push
pop
mov
ret
cltd
out
jp
push
mov
adc
jmp
push
fimuls
test
or
inc
sub
fldt
pop
xor
js
mov
imul
sbb
jge
cli
notl
testl
xchg
shlb
sub
mov
mov
lcall
lock
mov
call
or
int
mov
fisttpll
mov
push
notl
pop
xor
jmp
decl
bound
and
cmp
push
cmpsl
adc
jmp
mov
inc
aaa
push
lods
andl
mov
divl
or
sbb
pop
cld
pop
mov
xor
xchg
jo
rcrl
cli
and
sbb
fwait
idivl
push
inc
jne
in
dec
pop
sub
add
sbb
lret
pop
mov
mov
sbb
lcall
aaa
jg
adc
dec
negl
cmc
das
xchg
daa
jge
testl
clc
arpl
push
frstor
mov
ret
adc
xchg
negl
xchg
sub
icebp
out
dec
inc
mov
adc
sub
push
fdivl
jbe
movsb
and
jns
aas
mov
testl
in
xchg
xor
imul
out
inc
imul
mov
jb
idivl
inc
clc
les
and
not
test
ja
add
xlat
imull
or
popf
filds
mov
add
mov
je
inc
xor
out
inc
mov
testl
cmp
imul
xor
fstl
daa
fisttps
push
cs
xlat
test
call
lret
push
movsb
push
push
out
out
cmc
xor
icebp
stos
xlat
ds
daa
or
cs
dec
sarb
push
jo
xchg
mov
ret
or
fdivs
mov
notl
rorb
ds
hlt
push
or
scas
mull
inc
nop
push
icebp
rcrb
cmp
mov
movlhps
sti
mov
xchg
mov
add
xor
cmp
dec
or
leave
imull
pop
xchg
add
pusha
push
ret
cmpsb
and
negl
mov
dec
push
xchg
xor
sbb
push
push
xchg
data16
pop
enter
jp
lods
mov
xor
in
push
dec
iret
push
and
popf
mov
jbe
xor
dec
xor
jecxz
dec
loopne
scas
mov
mov
rol
in
mov
jb
add
jo
push
adc
leave
mov
std
into
shl
xor
push
mov
mov
rorl
idiv
sub
jecxz
outsl
jle,pn
ret
pop
and
aad
nop
xor
out
dec
je
test
repnz
sti
xlat
push
xchg
mov
sub
cmp
sbb
jecxz
add
xlat
mov
push
mov
fimuls
arpl
filds
icebp
push
mul
fmull
inc
data16
xchg
imull
jno
dec
out
cmp
sbb
dec
mov
jns
int
or
fsubl
push
loop
xlat
sbb
push
rclb
jp
pop
fsts
mov
test
mov
dec
nop
or
jnp
bound
xor
sbb
das
loope
or
dec
xchg
push
jecxz
ret
es
xlat
fwait
and
pop
aam
xchg
sar
hlt
loope
out
push
and
mov
and
mov
int
inc
mov
or
mov
pop
pop
cmp
imull
outsl
jl
or
daa
push
cmpsb
outsb
ja
mull
pop
imul
negl
dec
push
pop
stos
bound
divl
xor
shr
mov
mov
push
jb
add
add
push
adc
movsl
and
daa
mov
loope
js
call
and
fiadds
jecxz
in
ss
add
jmp
ss
mov
xchg
das
lock
clc
div
lds
mov
enter
into
iret
jno
ss
push
push
fsubr
leave
mov
xlat
sahf
xor
jge
testl
sub
inc
xchg
clc
in
mov
or
push
insb
inc
stc
neg
and
mov
cld
mov
push
movsb
subl
jbe
aad
fsts
xlat
ljmp
xchg
repz
or
icebp
push
jge
push
ret
aad
xchg
dec
pop
aad
test
xor
and
das
push
sbb
adc
andl
rorl
lret
jge
cs
and
fidivrl
push
stos
orb
cmpsb
hlt
or
notl
jne
adcb
out
adc
cmp
lods
lock
out
ja
mov
in
repnz
xor
add
dec
add
add
imull
sbb
xchg
jnp
fwait
insl
inc
test
dec
sbb
dec
shl
adc
adc
xchg
movsb
lahf
mull
enter
push
shrb
jmp
mov
mov
xchg
mov
rol
idiv
mulb
movsb
negl
test
adc
push
cld
pop
mov
push
aaa
addr16
jbe
mov
xchg
xor
rcll
jnp
or
sahf
mov
pop
imul
testl
sbb
aam
adc
outsl
pop
lcall
outsb
jb
pop
xchg
mov
dec
jbe
insl
mov
push
pop
mov
inc
inc
cld
mov
mov
pop
cli
testl
mov
sub
pop
sub
and
imull
xor
and
fcoml
cmp
lods
push
xchg
pop
notl
xor
sub
xchg
test
pop
push
popf
xor
and
fs
out
inc
daa
lods
inc
xor
test
xor
xlat
add
adc
repz
xor
enter
cmp
rclb
sub
mov
popl
notl
rorb
out
insl
xchg
adc
sub
sbb
mov
fucomip
sahf
push
insl
and
pop
outsb
or
mov
lds
outsb
xchg
dec
rcrl
ficoml
push
sub
sub
in
pop
push
push
and
mov
in
cwtl
div
push
jmp
cmp
sbb
push
imul
or
outsb
mov
ja
vmovaps
and
xor
add
jae
xorb
test
push
mov
adc
fiadds
ljmp
repnz
scas
rep
xor
cld
xchg
movsl
dec
popf
push
xchg
add
incb
dec
lcall
mov
out
jp
ret
push
sbb
ljmp
sub
sub
sbb
out
cmp
mov
pop
test
adc
cmp
mov
inc
xchg
in
clc
adc
clc
imul
mov
xchg
fcoml
and
mov
js
stc
mov
imul
scas
pop
pop
into
jmp
mov
outsw
push
sub
movsl
repnz
jne
dec
out
adc
and
fldl
imulb
inc
into
mov
xor
ds
adc
jnp
in
sub
jb
jg
fimull
neg
div
daa
adcb
push
mov
mov
xchg
mov
fs
xchg
leave
sub
jo
push
int3
addr16
fstps
jmp
loopne
and
mov
fstl
jne
and
pushf
inc
jb
fisttps
inc
test
test
es
cmp
imul
fiaddl
out
cmp
or
push
mov
fs
sub
into
sub
add
ss
jmp
mov
cmp
mov
push
mov
jg
ja
push
filds
add
push
push
iret
popf
test
enter
cltd
sti
jecxz
or
repz
cmp
fs
cmp
push
lea
fiaddl
push
jg
in
xchg
inc
lahf
ljmp
sub
jns
cmp
daa
xchg
pop
aaa
ljmp
pop
add
ja
xor
fdivrs
sbb
inc
lcall
arpl
imull
pusha
hlt
dec
ss
shlb
pop
fisttpl
pop
and
fildll
daa
sub
iret
stc
or
fistpl
jmp
pop
fistps
stc
fildl
scas
xchg
or
xchg
dec
adc
imull
outsb
pop
mull
adcl
das
outsl
push
shrb
cmp
inc
mul
mov
test
add
xlat
pop
cld
jnp
sub
repnz
or
sbb
loopne
scas
push
adc
jb
in
add
or
aam
notl
imul
rcrb
mov
jp
aad
push
ja
cmpsb
imul
xchg
fcoml
push
push
dec
insb
jbe
not
int3
inc
ds
fisubl
test
jb
adc
pop
xchg
dec
ss
pop
mov
mov
xlat
xor
inc
ficoms
sbb
in
push
pop
hlt
stc
in
mov
sub
pop
loopne
outsb
inc
pusha
out
pop
xchg
xchg
fstp
fnop
mov
fnstenv
add
nop
xchg
pop
mov
imull
push
and
mov
enter
mov
jl
in
sub
mov
sub
shl
insb
leave
aaa
and
int3
not
and
fdivl
fucomp
sahf
negl
out
push
mov
fdivrp
shlb
dec
mov
notl
fs
xor
mov
out
clc
fprem1
enter
and
pop
fs
lahf
cld
lods
movsl
xor
adc
push
mull
xchg
gs
pop
inc
ror
hlt
jle
sbb
sbb
push
movsl
and
or
subb
and
negl
pop
push
and
adc
jl
jb
inc
js
dec
push
dec
push
pop
repz
cmpsb
aaa
bound
popa
and
jl
faddl
push
push
out
xorl
push
mul
lock
gs
pop
pop
pop
imul
sub
outsl
popa
divl
inc
mov
sbbb
sub
insb
adc
lock
mov
test
das
add
and
ds
loop
rcll
cmp
fstpt
mov
cmp
add
loope
pop
fcoms
adc
mov
int3
out
popa
repz
addr16
cmp
push
lods
shlb
xchg
cld
mov
sahf
sub
jns
sbb
std
punpckhdq
ret
mov
push
jb
xchg
repnz
cmp
divl
mov
fsts
push
push
les
popa
int
enter
imulb
pushf
jno
add
push
mov
pop
adc
sbb
lods
repz
ret
out
in
int
push
into
mull
mov
add
cli
jbe
add
stos
mov
or
dec
lds
lahf
add
inc
lods
xor
mov
ffreep
test
lods
lret
push
into
aaa
das
inc
test
fs
jmp
cmpsl
sbb
pop
mov
pop
mov
cs
pop
sbb
stc
and
aaa
sub
dec
bound
clc
sbb
addr16
and
mov
xor
je
mov
fistl
sbb
jecxz
lret
push
iret
repz
push
mov
dec
jge
xchg
xchg
pop
mov
push
xchg
lods
inc
enter
out
mov
movsl
push
popf
xchg
dec
jns
js
mov
fistps
cwtl
roll
push
pop
xchg
and
idivl
and
div
cmp
inc
je
or
aam
faddl
nop
test
push
lret
fcoml
repz
cs
rorl
add
rol
fidivrl
mul
lds
cmpsl
adc
xor
icebp
out
jmp
sub
stos
xor
push
pop
push
pop
sahf
out
fimull
mov
ds
xor
pop
ss
repnz
shlb
fdivs
inc
mov
cwtl
pop
adc
insl
sub
es
les
inc
cli
xor
stc
or
xchg
pop
adc
and
or
and
popa
push
jnp
cmpsb
and
sub
out
ljmp
and
adc
jno
int3
mov
inc
sub
xor
pop
push
xlat
xchg
movsb
jecxz
xchg
scas
dec
sub
divl
rcr
adc
divl
testl
sbb
into
ficomps
dec
shrl
pop
ljmp
add
pop
fcmovu
popa
push
test
call
iret
add
mov
rcrb
xchg
mov
dec
test
sub
pop
mov
ds
dec
repz
cmpsb
popf
call
orl
pop
fsub
push
fidivs
inc
push
lock
add
loopne
add
xchg
sub
lds
cmp
fcmovu
pusha
int3
negl
pop
xor
or
sti
and
btr
xchg
hlt
fsubrl
jmp
dec
mov
nop
and
jno
leave
mov
hlt
filds
movsl
insb
sub
pop
pop
nop
mov
dec
mov
fwait
mov
xor
sub
jo
idiv
out
jo
dec
fs
cltd
lods
push
xchg
cmpsl
pop
push
push
jmp
dec
cmc
negl
popf
inc
cld
popa
ficoml
cmp
adcb
idivl
arpl
mov
fldcw
cmp
sarb
dec
push
std
ljmp
adc
lods
imul
rolb
jns
xor
fdiv
test
lcall
std
outsb
jg
cmp
notl
jecxz
testl
pop
movsb
adc
mov
xor
adc
cwtl
mov
sub
rolb
idiv
out
mov
xor
mov
or
dec
or
lds
push
pop
and
mov
shrl
xor
sub
mov
aaa
mov
out
daa
push
and
xchg
clc
inc
pop
push
pop
outsb
jecxz
push
aaa
out
push
in
inc
movsl
stc
mov
pushf
cmp
push
fimull
repz
cltd
adc
addl
fists
stos
xlat
xchg
jo
jge
ret
pop
frstor
push
push
xor
insl
mov
pop
icebp
aaa
xor
mov
dec
aam
fs
in
mov
cld
scas
mov
sub
shrb
jo
ljmp
mov
stc
cmpsb
and
cmp
loop
jge
lret
cmpsl
pop
jge
dec
xchg
push
dec
outsl
bound
fs
sub
adc
mov
jo
lods
jmp
mov
fnstenv
jmp
xor
std
and
in
ds
mov
and
cwtl
push
loop
xchg
out
inc
jb
jo
icebp
jmp
hlt
cmp
insb
int
imul
mov
aas
lea
hlt
pop
dec
add
fildl
mov
test
out
sbb
dec
sub
mov
sbb
sub
int
rclb
rolb
cltd
testl
fsubrs
xor
scas
push
sti
arpl
xchg
cs
insl
mov
and
pop
push
fimuls
js
pop
and
negl
scas
hlt
fisubrl
push
pop
outsb
mov
inc
or
call
add
out
cltd
inc
arpl
fildl
negl
mov
mov
pop
cmp
leave
mov
adcl
mov
fistps
stos
out
fdivrs
xchg
sbb
jnp
lcall
lret
fistpl
jge
shll
jb
mov
mov
adc
mov
dec
test
adc
loopne
dec
push
mov
xor
push
adc
std
cs
xchg
fdivrs
test
stos
mov
jg
cvtpi2ps
xchg
inc
sub
adc
fmull
mov
ss
in
xchg
dec
insb
nop
adc
lods
xor
idivl
mov
sub
ror
enter
fcmove
imul
dec
je
jg
dec
addr16
sub
sbb
idiv
mov
mov
inc
push
jo
jp
ja
xor
xor
insl
jecxz
xor
cmp
dec
inc
xchg
push
jbe
xor
pop
dec
test
dec
sub
jb
movsl
neg
dec
into
jbe,pt
push
mov
loop
mov
xchg
leave
jg
jne
gs
divl
test
adc
xchg
mov
and
pop
insl
loope
pop
sahf
rorb
fsubs
jae
jmp
call
sbb
addr16
and
and
out
mov
dec
ficoml
lcall
imul
xlat
ss
test
std
mov
sarl
testl
cmp
pop
pop
or
inc
sub
cmpsl
loop
pusha
pop
add
xchg
jnp
mov
idivl
pop
mov
hlt
inc
sbb
mov
adc
ret
push
idiv
ret
mov
dec
ss
jnp
fadds
inc
pop
ds
scas
cmp
outsb
test
nop
xchg
push
and
add
jp
fidivl
les
inc
loope
adc
dec
dec
lcall
cwtl
fistpll
cmc
sahf
inc
and
ret
insb
mov
ss
push
int3
aas
push
fidivl
inc
inc
and
cmp
or
into
pop
xchg
outsl
jno
popf
jne
jmp
inc
jle
lret
xor
jg
stc
xchg
and
push
adcb
jg
mov
push
mov
xchg
push
mov
xchg
incb
xchg
push
lds
pushf
xchg
dec
in
addr16
inc
mov
mov
fisubl
add
sub
mov
adcb
sub
notl
ljmp
add
shrl
cs
mov
pushf
arpl
repnz
movsb
repz
or
ja
icebp
ret
pusha
mov
nop
outsl
in
andl
test
fidivl
jbe
mov
movsl
add
mov
push
or
inc
sbb
fisubrl
xor
addr16
jb
and
push
in
dec
repz
mov
mov
push
and
ret
data16
or
mov
mov
aad
negb
into
cmpsl
pop
adc
lock
addb
jno
lea
xor
test
pushf
ret
cmpsb
cwtl
jp
inc
aam
test
add
iret
inc
jmp
cmp
push
xchg
test
cli
rorl
inc
fistpll
ljmp
sub
pop
xlat
xchg
and
mov
fidivrl
out
sbb
pop
in
jg
sti
mov
fidivl
mov
dec
imul
scas
dec
imul
daa
and
jmp
cmpsb
pop
adc
popa
pop
out
ljmp
pusha
xchg
add
adc
pop
mov
mov
icebp
enter
xchg
in
std
movl
popf
dec
imul
xlat
ljmp
sub
adc
jno
xor
sbbb
jo
daa
push
ljmp
xor
pop
mov
mov
mov
ja
mov
mov
cmp
xchg
enter
sbb
jmp
inc
jbe
dec
mov
imul
mov
sbb
or
fdivl
jmp
out
or
shlb
add
xchg
stos
inc
imul
divl
adc
mov
in
clc
mov
mov
repz
movl
pop
inc
pop
ds
ja
mov
sub
sbb
testl
pop
into
outsb
in
add
cmpxchg
out
jge
push
adc
aas
mov
daa
inc
xlat
xchg
or
sub
or
push
jmp
push
xchg
add
lock
mov
push
faddl
mov
push
insb
xchg
dec
mov
sbb
and
xlat
fcmovb
and
in
push
in
mov
mov
xchg
fidivrl
lods
jno
es
lgs
push
mov
stos
mov
pop
add
jmp
jnp
dec
aaa
stos
mov
jns
mov
lods
dec
mov
popa
mov
clc
mov
stc
push
loop
and
scas
jo
adc
pop
shl
xchg
loop
addr16
rcr
mov
cli
lods
push
movsl
mov
inc
mov
jne
xchg
movsl
xchg
add
idivb
int
imul
idiv
and
jmp
ljmp
imul
mov
les
jb
in
mov
add
or
test
pop
shlb
fadd
push
mov
cld
testl
loopne
in
xor
pop
cwtl
ja
mov
jnp
scas
icebp
enter
call
inc
lcall
adcb
push
in
add
fsubp
loope
dec
xchg
jmp
addr16
xor
xchg
stos
lahf
mull
mov
adcl
and
xchg
gs
push
and
fwait
sbb
call
jmp
movsb
mull
dec
jo
adc
orb
andl
pop
push
push
inc
or
sbbb
ja
icebp
fincstp
gs
adc
stos
out
repz
aad
into
push
xor
gs
out
pop
icebp
mov
testl
loopne
notl
jne
lods
mov
mul
loope
adc
ret
or
fistps
loope
adc
imul
outsl
jecxz
imul
leave
cmp
adc
inc
notl
in
or
push
outsl
xchg
xchg
jno
enter
jecxz
das
in
or
push
stos
adc
jmp
loop
aaa
xor
lods
xchg
loopne
sub
inc
sub
pop
sub
inc
push
hlt
sbb
sbb
dec
fwait
xchg
xchg
dec
lret
ja
jb
loope
clc
out
pop
mov
dec
mov
pop
jno
faddl
imull
adc
idivl
inc
or
cli
imul
in
or
inc
cmp
adc
pop
push
testl
xchg
or
imull
mov
scas
shll
mov
popa
into
push
add
pop
addr16
movsb
testl
cmp
mull
jo
xchg
div
push
cwtl
lret
add
lahf
cmpsl
pop
push
or
lds
clc
cli
fisubl
std
pushf
ss
in
out
pop
jl
pop
mov
rolb
adc
test
xor
int
mov
shrl
jecxz
add
jle
loop
sub
push
pop
sub
mull
movsl
jge
mov
shl
mov
mov
ljmp
inc
out
cmc
lods
xor
ficoms
loopne
test
mov
shll
dec
icebp
inc
pop
and
jbe
add
mov
adc
adc
mov
inc
popa
das
fdivl
mov
mull
cli
repnz
adc
mov
or
lahf
mov
xchg
testl
test
loopne
mov
ret
sbb
xchg
lds
jne
mov
add
sub
pop
xor
add
mov
push
test
ss
lods
cmp
mulb
push
dec
xor
mov
push
test
ja
cmp
loopne
out
or
out
lock
gs
mov
jg
mov
or
push
sbb
pop
icebp
sub
adc
mov
cmp
cmp
add
pop
add
fs
add
mov
idivl
mov
idivl
jnp
sub
pop
and
idivl
cld
popl
adc
or
negl
ret
mov
mov
mov
testl
mov
jne
mov
sbb
sub
mov
fldt
sub
shll
imull
fdivs
fisttpll
jge
div
jle
cmp
loopne
jne
out
pop
mov
negl
arpl
xor
sbb
lods
cld
cmp
popa
jecxz
fcoms
negl
insb
jnp
divl
cmpsl
xchg
sbb
bound
dec
jnp
pop
aas
push
mov
xchg
shr
popa
fldenv
pop
mov
sbb
sbb
ja
sbb
out
loop
or
sbb
loope
xor
mov
notl
pop
jne
jmp
push
cld
jno
sub
dec
in
std
xchg
ljmp
loopne
addr16
push
mov
popf
adc
call
jo
sub
mov
mov
mov
stos
sti
jle
pop
adc
inc
mov
jp
daa
xor
lcall
ficoml
mov
out
mov
faddp
add
or
movsb
and
js
pop
divl
mov
nop
pop
jl
mov
push
mull
imul
pop
jno
fcomip
xchg
pusha
xchg
xor
mov
shr
xchg
test
sbb
orl
mov
clc
mov
mov
sarl
out
je
imul
mov
test
xlat
mov
xchg
cld
adc
pop
push
jne
ret
sub
and
enter
lret
pop
dec
dec
notl
add
idivl
pop
push
mov
and
or
adc
cld
push
insl
fwait
ja
xor
jo
std
jae
push
imul
sti
mov
rolb
cmp
adc
jge
xchg
imull
cmp
pop
sbb
idivl
loope
dec
mov
or
negl
enter
cmp
mull
jg
es
in
fdivr
shl
lds
jmp
xchg
mov
dec
adc
sarl
xchg
mov
cmpb
cmp
mov
negl
xor
or
insl
or
aad
jo
or
iret
xchg
lock
in
dec
mov
in
xlat
sub
loopne
jg
incl
cmpsb
or
cmc
cwtl
movsb
xchg
fcmovbe
cmp
mov
jmp
adc
gs
movsb
int
xlat
and
adc
push
cmp
int3
aad
cmp
arpl
imul
pushf
fisubs
lods
mov
testl
negl
lods
and
push
and
and
mov
push
negl
outsl
shrl
sub
std
mov
push
mov
xchg
inc
div
xor
hlt
aaa
int
outsb
rcll
lds
mov
xchg
pop
adc
mov
inc
lock
out
pop
mov
ja
push
stos
jge
mov
mov
jecxz
adc
aad
je
xchg
cwtl
sub
daa
int3
ja
inc
push
in
out
mov
js
es
fucom
xchg
lock
in
fsub
stos
mov
push
fstps
jno
mov
push
sub
int
aaa
or
out
and
mov
call
scas
mov
repnz
clc
faddl
pop
mov
mov
nop
jp
push
test
jp
mov
test
cmp
xorl
shrb
inc
movsl
adc
scas
cli
js
stos
dec
xorl
xlat
in
push
in
gs
loop
adc
xor
mov
les
jecxz
enter
fsubp
add
out
roll
sbb
scas
frstor
cld
pop
mov
sub
mov
ret
pop
mov
aaa
in
push
or
lock
cmc
or
mov
xlat
mov
lock
out
and
ficoml
inc
cmp
test
bound
ja
pushf
scas
es
fimull
in
fcompl
add
or
add
adc
pusha
sarl
jb
mov
or
jnp
into
jne
push
push
jbe
lods
or
add
in
fcmovnbe
inc
jb
and
mov
in
lcall
mov
pop
pop
lahf
mov
arpl
inc
lds
sbb
and
sub
push
dec
arpl
fwait
fwait
mov
add
leave
inc
sub
pop
mov
int
push
insb
xor
push
test
testl
jmp
jg
fisttps
inc
pop
adc
add
and
sub
hlt
jg
enter
mov
mov
lcall
adc
fcmove
popf
psraw
shrb
push
filds
and
mov
pop
repnz
mov
and
cwtl
or
mov
cmpsl
sti
arpl
testl
sub
or
xchg
ja
pop
ret
stc
aaa
clc
fistpll
sbb
orl
cmp
popa
xchg
ljmp
add
leave
ss
xor
mulb
cwtl
shrb
sbb
aaa
in
arpl
xchg
cltd
cmp
jmp
fcomp
clc
rolb
cmpsl
jns
or
hlt
jo
repnz
fistl
add
rcr
or
cmp
mov
ljmp
gs
loopne
movl
lret
sti
ret
sbb
jmp
add
adc
add
jmp
push
inc
push
iret
xor
xchg
jbe
out
rclb
and
dec
inc
mov
push
lahf
test
insl
sbbb
jbe
jmp
scas
adc
sbb
mov
cmc
arpl
mov
mov
jne
inc
test
dec
mov
add
dec
lds
cs
fisubrs
mov
lret
mov
mov
lock
jl
adc
mov
into
js
dec
test
idivl
dec
and
sub
rcr
inc
xchg
test
and
pop
add
popf
cmp
add
fwait
dec
jnp
adcl
insl
ret
scas
jno
lret
inc
clc
cltd
aad
push
xlat
xor
out
imul
stos
and
and
repnz
mov
mov
jb
pop
jne
out
xorps
add
negl
sub
std
mov
push
ror
xchg
lds
ja
not
popf
dec
cmp
xor
sub
call
pop
pop
add
xchg
xchg
push
push
out
scas
insl
or
mov
ds
mull
fidivs
ret
sbb
mov
neg
aad
in
mov
mov
inc
les
dec
neg
mov
add
aam
pop
test
mov
scas
cmpsb
mov
mul
stos
arpl
xchg
lea
notl
add
test
lock
sbb
sub
mov
mov
xchg
jmp
rorl
inc
push
std
mov
or
testl
xlat
and
nop
hlt
dec
adc
pop
lock
cmp
xchg
mov
sbb
mov
filds
lods
xchg
mov
fs
fistps
pop
xchg
mull
das
aaa
outsl
div
pop
mov
testl
sbb
dec
jmp
shl
cmp
ficoml
xchg
push
in
xor
iret
push
mov
pusha
imull
mov
xor
or
sub
sbb
jne
mov
pop
push
lods
iret
loopne
mull
adc
sub
and
hlt
neg
inc
pop
xchg
push
pushf
lods
sahf
xchg
mov
pmaxub
sbb
push
sbb
adc
xchg
ja
push
js
out
xchg
jecxz
xchg
push
sub
decb
pop
and
jecxz
dec
jo
xlat
movsl
mov
inc
iret
or
ja
inc
sbbb
rcl
pop
push
pop
hlt
sub
xor
fiadds
xchg
in
test
xor
sbb
ljmp
sub
pop
shl
cli
and
imull
mov
pop
test
mov
sarb
gs
divb
imul
mov
push
testl
mov
mov
aas
mull
in
rcll
jns
jne
pop
std
lods
cmp
fstpl
xchg
inc
sti
je
and
test
xchg
push
cli
shlb
mov
daa
push
test
mov
mov
push
cmp
sub
int3
xchg
push
lods
out
rorl
in
mov
xor
stos
and
jne
das
out
push
jl
adc
outsb
mov
in
imull
jb
ret
clc
js
fldt
jo
imul
mov
popa
fbstp
jb
cmp
hlt
rcrb
sub
test
ret
xchg
mov
mov
xlat
or
mov
push
dec
mul
jmp
pop
pop
in
testl
cltd
push
test
ja
xchg
div
stos
bswap
jne,pt
in
divl
xchg
mov
idivl
pop
rcrl
neg
xchg
pop
bound
arpl
dec
stos
mov
enter
ret
mov
or
fcmove
inc
adc
cmp
cmpsb
sub
xchg
out
xor
outsb
call
jb
sarl
int
negl
shl
das
testl
sbb
push
fldenv
idivl
mov
ja
fdivrl
negl
mov
push
testl
loop
and
not
xchg
dec
mov
or
cmpsb
xchg
push
lret
shll
mov
std
adc
out
mov
aam
sbb
push
sbb
mov
jno
arpl
xchg
pop
je
sub
aaa
aas
repz
dec
and
fwait
xlat
roll
and
jb
leave
imul
shl
pop
das
idivl
jb
imul
fdivrs
push
cs
cmp
xchg
int3
clc
out
mov
and
pusha
loope
inc
call
mov
adc
xchg
test
data16
call
out
push
adc
xchg
pop
xchg
xchg
push
cmp
std
inc
sahf
cmp
data16
xchg
jmp
daa
sbb
aas
mov
push
test
mov
in
mov
movsb
test
cmp
push
and
testl
testb
pop
jbe
pusha
cltd
lcall
ret
notl
push
lret
xor
adc
mov
insb
in
xor
or
inc
test
lea
jmp
dec
lock
test
imull
pop
out
xor
xor
xor
fcmovbe
jecxz
imul
cwtl
push
test
xor
lcall
sar
fildll
imul
out
xlat
mov
pop
jns
or
hlt
movsl
outsl
lahf
mov
xor
xlat
push
cvttps2pi
scas
adc
in
enter
sbb
fcomip
das
insb
xchg
divl
dec
loop
jno
push
fidivs
xor
add
cs
sub
loope
popa
testl
pop
mov
xchg
clc
not
sarl
cmp
ss
pop
notl
adc
das
xchg
mov
popa
ja
pop
xchg
pop
divl
aas
mov
rcll
enter
mov
push
test
pop
cmp
xor
pushw
jne
aas
inc
fcomps
push
je
mov
negl
icebp
popf
sbb
jns
inc
test
test
push
pop
or
stos
gs
mov
out
mov
or
jl
xor
xor
ret
jecxz
add
cmpsb
jmp
cmp
and
fistpll
jg
loopne
enter
out
inc
idiv
push
sbb
mov
add
testb
mov
fidivl
adc
mull
inc
push
xor
mov
jo
dec
fdivl
fwait
outsl
jle
cmp
stos
decl
faddl
int3
imull
ds
add
dec
xchg
pop
mov
clc
rorl
out
sub
inc
daa
negl
arpl
enter
or
sub
adc
negl
cli
lea
dec
xchg
orb
inc
mov
imull
inc
das
daa
negl
push
add
lret
neg
and
imul
add
mov
ljmp
shrb
adc
or
popa
iret
aas
loop
ja
negl
lret
out
testl
lahf
gs
push
jecxz
xchg
push
pop
sub
loopne
fidivs
jo
dec
pop
jle
mov
addr16
iret
or
fiaddl
int
icebp
ret
test
jle
cltd
mov
out
pop
stos
xchg
mov
testl
adc
lahf
out
add
and
in
loop
notl
lea
lods
test
aad
sbb
fs
or
push
out
and
push
sti
je
test
pop
lock
xor
fincstp
add
cwtl
mov
and
orl
out
es
in
stos
jl
mov
pop
cmp
imull
in
movsl
jmp
mov
fsubr
std
add
inc
xchg
push
fisubl
or
pushf
jmp
lahf
outsb
push
xor
scas
inc
gs
fildll
mov
imull
and
add
xchg
dec
sub
dec
push
push
insl
aam
pop
div
xor
add
xor
sbb
icebp
jmp
mov
cmp
dec
push
pushf
mov
lret
insl
pop
pop
jne
xor
int
inc
repnz
iret
xlat
outsl
lock
fnstsw
pop
testl
arpl
aad
mull
test
mov
in
addb
mov
adc
cltd
pop
and
xor
test
xchg
das
jl
or
scas
notl
loope
loop
jp
fidivrl
movsl
sbb
testl
xchg
sub
sub
cmp
dec
rorb
data16
pop
adc
cmpsb
insb
xor
neg
push
das
xlat
ja
sub
out
dec
push
filds
jmp
daa
hlt
cmpsb
mov
sub
in
mov
inc
fidivrs
adc
mov
sub
sbb
mov
adc
orb
cmp
inc
sub
add
mov
lret
xchg
mulb
ja
sub
cld
pop
jno
xor
push
in
xchg
and
fisttpl
out
mov
xor
cld
lock
aaa
sub
ret
mov
jbe
fldt
fsub
je
mov
lds
inc
jns
ja
mov
test
xchg
fs
xchg
pop
ljmp
and
fidivrl
mov
rcrb
push
sarb
xor
xchg
out
arpl
add
dec
in
fwait
int3
xchg
and
rolb
fcoms
sarl
sbb
mov
xlat
out
sbb
mov
cmp
leave
fwait
dec
cmp
repz
mov
fsts
jp
aad
shll
mov
lahf
fidivrl
xchg
mov
repz
lods
cmp
fwait
rcrb
mulb
dec
inc
cwtl
add
fidivrl
inc
and
pop
pushf
stos
mov
clc
pushf
push
ja
or
ret
in
or
mov
push
cmp
in
jmp
arpl
lcall
int
push
sbb
and
xchg
jo
lcall
pop
add
fstl
mov
js
stc
repz
dec
inc
imul
int
mov
adc
inc
hlt
dec
mov
lar
dec
in
jo
test
add
push
jb
test
xor
and
in
loopne
ret
inc
test
or
push
inc
lcall
stos
ss
sbb
pop
jbe
jno
ljmp
insb
lock
leave
outsl
cmpsl
inc
icebp
out
sub
fisubrs
or
daa
push
std
int
xchg
inc
fdivs
adc
out
std
inc
add
outsl
mov
pop
rcll
and
lds
xchg
xor
xchg
or
imul
mov
ret
sub
mov
push
lea
mov
test
push
hlt
jmp
fs
mov
xorb
in
push
subb
pop
jbe
push
mov
pop
sbb
shr
ror
inc
and
shlb
push
pop
fidivrl
repz
in
jae
data16
or
xor
push
shrb
shll
xchg
int3
sub
and
mov
push
mov
flds
and
int3
or
pushl
into
mov
pushf
cmp
leave
sahf
fiaddl
jns
sbb
cmpsb
mov
push
mov
ret
pop
jno
mov
in
inc
cli
neg
jnp
iret
xor
jb
jbe
dec
repz
jo
jo
dec
divb
xchg
notl
aam
in
jmp
cmpl
repnz
in
inc
stos
inc
sti
fiadds
cltd
add
je,pn
cld
je
fs
sbb
or
lock
mull
mov
xchg
mov
add
repnz
cmpsl
in
adc
cmp
xlat
test
out
mov
mov
push
adc
inc
negl
shl
sub
cmc
xor
cmp
fisubl
lods
pop
lds
ljmp
loopne
mov
fs
cld
mov
adc
push
mov
std
adc
and
fs
pop
pushf
lahf
jmp
and
shl
jmp
mov
sti
out
cmp
or
xor
jge
lods
mov
out
xchg
add
sbbb
addr16
jg
mov
lds
cmp
sbb
insb
jo
cmp
pop
dec
and
rorb
inc
cld
cmpsl
jecxz
repz
cmp
lcall
es
out
out
cmpsl
dec
mov
js
cmp
cmp
pop
not
mov
idivw
adc
aam
and
sarl
jns
loopne
pop
div
jo
cwtl
dec
ds
cmp
movsl
sbb
lods
jne
xchg
jmp
xor
push
jmp
xlat
push
fwait
imul
or
adc
test
pop
addr16
jmp
xchg
jae
mov
in
stc
iret
mov
mov
and
pop
mov
test
popa
aas
out
mov
lret
inc
fiaddl
mov
sbb
movl
les
xchg
pop
push
mov
faddl
sbb
push
scas
lahf
in
popf
pop
inc
cs
dec
jge
sub
stos
sbb
add
stc
cmpb
sbb
mov
pop
jbe
mov
test
insl
rep
fcomi
adc
cmp
out
fstpt
aam
jg
add
idivl
lods
lret
sahf
xor
jo
or
pop
imull
lret
divl
add
lea
xchg
jmp
aam
push
test
adc
mov
addr16
js
idivl
xchg
sti
in
and
cmp
cwtl
test
cmp
mov
jae
adc
out
into
push
out
maskmovq
testl
imul
push
pop
jnp
push
addr16
les
push
div
mov
dec
and
shrb
in
fldt
shlb
je
inc
add
fsubl
sbb
mov
div
nop
sub
sub
jb
pop
ja
adc
mov
push
cmp
testl
test
push
xor
dec
mov
test
psllq
add
inc
and
fcmovnb
add
testl
cmp
negl
xlat
xor
cs
out
std
adc
out
idivl
lods
or
cmpsb
sbb
cs
fisttpll
in
mull
fsubrs
rorl
jns
mov
dec
mov
xlat
out
add
ret
mov
xorl
mov
add
pop
movsb
or
and
and
jp
and
push
jecxz
lret
mov
notl
mov
dec
test
std
dec
ja
inc
cmpl
lea
icebp
sbb
pop
mov
jmp
push
shlb
out
out
ds
or
das
aaa
insb
pop
push
cmp
xchg
xor
cmp
inc
sub
enter
je
imul
fsubr
testl
and
push
and
jl
imull
add
dec
pop
adc
xchg
dec
mov
insb
sbb
clc
xor
push
hlt
negl
or
xor
bnd
adc
pusha
notl
js
mov
negl
ja
xor
stc
test
push
out
mov
int
sub
sbb
mov
adcl
xchg
cmp
cmp
mov
push
push
sbb
cmp
pop
idiv
and
sbb
pusha
sub
repz
fistpll
add
es
aaa
aas
jmpw
sbb
mov
sbbl
neg
loope
and
in
mov
imul
or
cli
loop
outsb
jecxz
idivl
or
or
fildl
mov
push
or
notl
push
testl
shrb
mov
divl
lods
sub
jmp
adc
outsb
jns
call
idivl
mov
popa
push
js
cmp
cld
mov
mov
pop
inc
cs
mov
ss
add
cltd
nop
notl
push
pop
std
fists
push
lds
out
testl
imul
mov
jecxz
nop
xchg
repz
aas
iret
jmp
add
rcrb
mov
sbb
out
lods
sbb
orl
bound
imul
outsl
jl
pop
call
negl
ret
mov
push
call
jo
les
divl
std
adc
neg
cmp
push
push
inc
ret
pop
ja
add
fimull
fisttpll
cmp
mov
xchg
sbb
fcomps
and
adc
mov
push
sbb
jl
idivl
pop
fmuls
pushl
lock
insl
idivb
xchg
fldenv
stc
mov
mov
mov
jnp
cmp
out
jg
cltd
shl
jmp
fidivl
xchg
flds
or
outsb
inc
lcall
and
dec
mov
jmp
xor
mull
ficoms
orl
lahf
les
notl
lods
xchg
daa
push
out
stos
mov
inc
dec
cld
je
scas
pusha
negl
fldt
lock
inc
testl
jmp
fwait
notl
dec
int3
fistps
divl
jne
and
lret
aam
insb
dec
cmp
xchg
add
xor
adc
out
mov
lods
cmpsb
mov
sbb
nop
mov
mov
dec
mov
or
imull
out
push
mov
xchg
sub
jge
fisubl
out
shl
cmc
inc
pushf
mov
add
negl
imul
xchg
adc
lret
fistl
ds
mov
dec
int3
pop
outsb
enter
inc
pop
push
mov
xlat
mul
mov
pop
leave
pop
test
sub
xor
lds
ds
sti
icebp
inc
mov
xchg
jge
fmulp
mov
div
cmpsb
mov
lcall
push
loope
testl
dec
negl
pop
dec
cltd
push
xor
xlat
xor
cmp
mov
cmc
test
adc
into
jg
loop
xlat
push
push
testl
rcrb
cmp
add
fisubrl
notl
add
shl
std
dec
add
mul
sbb
xchg
imull
int
shll
aam
pop
pop
or
xchg
not
dec
mov
stos
outsb
mov
ljmp
in
jecxz
imul
orb
insl
shl
xchg
xlat
adc
imul
icebp
jl
push
push
fistl
clc
or
shl
pop
inc
js
jmp
fiaddl
divl
outsl
addr16
cmp
push
cmpsl
mov
mov
mov
xchg
jne
xchg
inc
pop
imull
imul
pusha
xorl
fildll
loopne
faddp
not
xchg
cmpsl
and
push
mov
xchg
pop
hlt
fidivrs
notb
pop
adc
repz
inc
jb
adc
adc
pop
loop
ds
clc
fldl
dec
sbb
divl
jl
mov
outsb
arpl
fcmovb
inc
lahf
lret
insb
leave
fmulp
ss
notl
ja
push
decl
std
jg
fidivrs
ret
lret
test
or
xchg
cmc
xchg
popf
iret
cmp
divl
cwtl
cmp
push
out
lret
mov
push
mull
adc
mov
sbb
jecxz
lret
fs
cli
pcmpeqb
and
out
aam
shll
outsb
lods
jo
or
mull
push
movsl
test
das
jmp
or
in
mov
jl
testl
fdiv
or
std
in
adc
fwait
cwtl
mov
fs
notl
pusha
xchg
stc
notl
lahf
jae
push
test
fdivs
in
icebp
push
push
dec
jae
or
imul
arpl
test
idivl
test
cs
mov
push
mull
pop
sub
add
mov
arpl
pop
push
arpl
mov
xlat
xchg
fisttpll
pop
repz
mov
in
idiv
mov
add
push
xor
xor
xchg
insl
push
mov
jmp
divl
imulb
fimull
test
cmp
and
dec
dec
inc
or
and
mov
lock
and
jmp
mov
mov
jecxz
xchg
jb
sub
loope
mov
dec
adc
pop
adc
and
bnd
iret
idivl
insb
divl
cmp
pop
imull
lcall
mull
sbb
jecxz
stos
into
jne
subl
and
push
mov
pop
push
jmp
xor
out
outsb
and
push
fiadds
jge
iret
mov
add
mov
test
sbb
pop
inc
pusha
nop
mov
xor
adc
sub
fwait
push
push
sbb
in
out
imul
es
mov
test
lcall
jecxz
in
sbb
inc
inc
divl
mov
lods
xchg
cltd
je
mov
dec
jae
not
push
xchg
sarb
inc
insl
mov
jne
lock
sbb
cmp
inc
lods
imul
jge
fincstp
faddp
cmp
aas
and
call
lahf
sbb
push
mov
push
dec
mov
xchg
mull
inc
lret
idivb
mov
gs
testl
inc
sub
jmp
mov
mov
pcmpgtw
lret
dec
jne
push
xor
aad
mov
pop
xor
testl
faddp
sahf
mul
faddl
rcl
or
mov
sub
ja
inc
and
mulb
loop
out
pop
imul
scas
mov
push
mov
jmp
in
fists
add
in
dec
fdiv
mov
pusha
repnz
xchg
adc
jno
pop
xlat
in
ljmp
jp
and
pop
xchg
stos
and
ljmp
int3
sub
or
mov
inc
pushf
test
out
add
push
pop
mov
insb
out
addr16
out
mov
push
mov
fcmovnb
dec
sarl
and
jno
sub
sbb
push
xchg
push
pop
cmpsb
pop
lret
inc
pusha
clc
outsl
repnz
jbe
insb
mov
imul
int
jbe
clc
mov
mov
inc
inc
add
movsl
fs
arpl
lret
pop
mov
mov
mov
xor
mov
pop
stc
pop
xcrypt-cbc
cmpsl
push
add
loopne
lahf
cwtl
jmp
popf
mov
lahf
push
xchg
sbb
add
scas
inc
mov
mov
and
mov
add
push
mov
or
add
idivb
scas
and
jno
jmp
mov
ljmp
sub
xlat
out
adc
xor
icebp
ret
inc
insl
mov
shlb
icebp
icebp
loopne
mov
xchg
jmp
add
cmpsl
inc
jne
cli
or
lods
mov
fdivs
mov
xchg
pushf
stos
decb
loopne
xchg
adc
orl
aaa
sbb
mov
mov
int3
sbb
xchg
insb
mov
lahf
and
popf
fsubl
repnz
scas
and
icebp
or
orl
jne
out
js
out
insb
test
push
ja
addl
insl
and
ja
out
test
divl
repz
mov
mov
idiv
add
add
inc
cmpsl
outsb
loop
mulb
mov
idivl
cmc
loope
mov
push
notl
mov
xor
lock
mov
xchg
movsb
cmp
fistps
pop
xchg
testl
jmp
xchg
jg
xchg
xchg
sbb
push
xchg
loop
dec
pop
jne
fisttps
mul
push
repz
test
rcll
stc
loop
in
divl
lret
lock
mov
adc
cmc
sbb
imul
repz
pop
ds
pop
testl
ss
pop
enter
in
push
and
ja
in
mov
sbb
xor
mov
je
sub
ret
mov
incb
inc
push
js
ljmp
idivl
pop
push
mov
xchg
daa
out
add
xor
push
cmp
pushf
pop
jns
addb
negl
ljmp
daa
shll
ret
jo
xor
test
pop
xchg
mov
bound
in
idivl
lea
ljmp
out
jmp
mov
jle
stos
out
popf
ret
pop
sub
inc
je
aam
sub
test
leave
lcall
pop
pop
out
cli
mull
cltd
fildl
lock
insl
xor
and
cld
pop
and
mul
and
notl
int3
ror
mull
lock
jne
imul
ljmp
cmpsl
mov
lods
nop
int3
jecxz
ja
mul
fs
pop
cld
fsubs
loope
mov
jp
out
inc
mov
jno
jg
into
mov
divl
sbb
cmpsl
and
dec
add
jbe
xchg
dec
adc
stc
mov
fmul
aam
pop
push
int3
fstpt
mov
mov
popf
xor
jmp
dec
jbe
mov
mov
testl
and
pop
bound
sbb
push
idiv
mov
mov
test
rol
adc
xlat
test
notl
push
popf
and
repz
lret
jae
dec
js
push
add
xchg
pop
pop
cwtl
mull
scas
dec
inc
mov
dec
ss
sbb
fdivs
and
out
cltd
fnsave
push
and
ja
or
xchg
fisttps
push
idivl
int3
jnp
idivl
ss
pop
or
lcall
popa
testl
scas
pop
pop
xor
ljmp
enter
insl
adc
gs
cltd
xor
xchg
push
repnz
push
imul
fisttpll
lcall
or
pop
outsb
into
push
loope
std
nop
pop
fists
sub
test
push
mov
and
adc
fsubrl
imull
lock
test
clc
inc
sub
mov
insb
cld
xchg
das
testl
stos
sahf
xlat
pop
xor
mov
jge
push
insl
shl
maskmovq
mull
cmpsl
inc
movsl
test
imull
shll
aaa
mov
imull
jp
div
cmpsl
in
in
lea
and
cmpxchg
mov
and
aaa
xor
adc
lret
or
fadd
test
inc
or
sti
ret
fistps
lahf
inc
popa
mov
add
fmul
mov
imul
ret
xchg
or
aas
out
jb
fdiv
aam
pop
int
xor
neg
clc
jnp
add
imul
icebp
mov
les
enter
out
sbb
data16
mov
xor
ficoml
mull
adc
loop
bound
or
addr16
add
xor
add
repz
mov
fnstsw
push
mov
push
mov
lret
mov
rclb
in
fdiv
adc
dec
pop
or
mov
pop
in
jns
into
cmovle
imull
lds
push
neg
jge
in
pusha
imul
push
pop
push
xor
icebp
test
movsl
aas
jne
add
and
jne
testl
fwait
gs
mov
cltd
lea
ret
inc
out
dec
test
push
lret
in
sbb
insb
lods
dec
xlat
in
roll
pop
pop
sbb
in
mov
pop
cmpl
push
ss
or
aas
imull
push
mov
and
push
mov
mov
lods
xor
repz
xchg
mov
in
testl
jns
das
add
shl
dec
jmp
mov
test
pop
jg
testl
lret
inc
sub
jne
je
fbstp
std
test
sar
pop
fcomp
notl
int
sub
cmp
jns
fsts
adc
ror
cmp
inc
dec
sub
ja
in
fcmovb
hlt
jecxz
inc
divl
dec
and
dec
sbb
iret
fbld
aaa
cmp
call
sti
outsl
repnz
jmp
jmp
push
js
add
dec
mov
pop
adc
xchg
fidivl
xchg
jbe
xor
cmp
dec
jbe
adc
xlat
jns
pop
lret
cmpsl
adc
mov
jmp
js
pushf
xchg
mov
test
pop
lcall
sbb
clc
pop
lods
andl
mov
shll
dec
jae
ss
or
test
fiaddl
mov
sub
xchg
cs
cmc
enter
add
push
inc
lods
repz
cs
cmp
out
inc
dec
setns
cmc
mov
outsl
and
pop
repz
ja
mov
in
imul
leave
inc
es
and
lods
mov
nop
fcmovu
jnp
pop
imul
pop
orb
fistps
test
cmp
pop
out
in
popa
pop
test
and
lods
fisubl
jb
inc
mov
cmp
and
pop
pusha
repnz
or
fwait
idiv
sub
ss
out
mov
sub
jg
movsl
cmp
repnz
notl
xchg
mov
xor
sub
sub
mov
sbb
sti
flds
push
idivl
add
idiv
pop
int3
aaa
dec
adcb
cmpb
dec
mov
fists
and
call
xor
inc
ljmp
into
lret
movsl
jb
mov
jecxz
cmp
in
sbb
testl
movsb
lock
and
in
mov
mov
ljmp
xor
fidivrl
lahf
jb
test
and
ja
mov
push
fsubs
or
scas
push
insb
sahf
push
out
xchg
sbb
lret
push
gs
sbb
sub
out
xor
xor
fxch
in
fisubl
je
or
mov
add
mov
test
js
jnp
mov
int3
jmp
mov
lret
adc
jecxz
fpatan
lcall
jnp
in
push
push
mov
insb
cld
popa
jae
push
push
mov
insl
pop
es
lods
mov
xchg
pusha
sbb
sbb
test
loopne
inc
mov
int
shrb
outsl
add
dec
adcl
sarl
mov
inc
jg
mov
cwtl
pop
popf
cmpsb
push
aas
mov
ljmp
fs
in
not
popa
test
jb
scas
cs
push
sbb
lods
rorb
cmp
mov
das
sahf
sahf
jmp
push
pushw
iret
fsubrs
dec
mov
xorb
out
cmp
lcall
inc
add
jmp
aad
push
outsl
cmp
add
test
mov
xchg
cmp
cs
outsl
outsl
stos
xchg
sti
jle
outsl
mov
mov
push
bound
div
sbb
out
pop
fwait
cmpsb
push
arpl
mov
push
xchg
xor
push
outsl
mov
gs
into
into
inc
insl
or
out
mov
call
js
insl
lcall
ficomps
cmp
mov
pop
lods
fcompl
sbb
std
sbb
or
or
xchg
subl
shll
push
inc
jae
test
add
inc
repnz
fsubrl
mov
pop
out
sbb
mov
lahf
sahf
jg
lock
pop
push
jmp
scas
in
mov
mov
and
filds
or
jbe
ficoms
outsl
rcrb
lret
orb
push
push
stc
mov
xlat
ljmp
insb
and
mov
mov
pusha
gs
mov
xor
fisttps
jmp
imul
mov
add
in
sbb
inc
sub
push
in
sbb
hlt
pop
aas
jnp
mov
fmuls
mov
in
inc
ja
mov
add
repz
cmp
xor
jae
filds
out
and
jmp
inc
stc
hlt
and
inc
addr16
and
dec
cwtl
mov
or
lods
mov
iret
aas
pushf
pcmpgtd
xor
cs
mov
arpl
adc
sbb
jmp
adc
loope
jno
je
insl
mov
push
in
aas
cmp
enter
pop
pop
mov
sbb
xchg
sbb
xchg
insl
jns
ss
out
icebp
testl
xchg
add
mov
mov
les
mov
mov
or
notb
adc
in
jne
adc
test
or
mov
adc
mov
sub
jp
in
cmp
cmp
push
xchg
ds
fs
pop
andl
xchg
dec
aaa
fldenv
scas
push
cmp
sub
adc
jne
stc
fdivr
bound
mov
mov
movsb
scas
pop
push
or
add
addl
inc
push
add
xchg
or
fs
mov
cmp
push
fimull
js
jecxz
adc
inc
jmp
loope
pop
push
mov
out
int3
mov
mov
and
cmpsl
cwtl
push
sbb
mov
adcb
pop
fnstenv
das
xchg
pop
inc
shrl
shrl
fwait
clc
xlat
je
out
int
inc
push
adc
adc
rolb
cmpsl
dec
inc
cli
divl
clc
mov
mull
pop
jb
xchg
sbb
ljmp
mov
lretw
pop
xchg
mov
imull
mov
imul
movsb
insl
push
lods
pop
gs
pop
pop
and
lcall
out
xchg
ljmp
int
mov
in
fidivl
cmp
ljmp
addb
add
aas
adc
pop
xchg
sbb
adc
mov
into
xchg
push
sbb
pop
xorb
dec
push
jg
jecxz
ljmp
flds
icebp
out
arpl
pop
insb
stc
dec
push
pop
sti
movsl
and
test
arpl
xor
divl
pop
sbb
sbb
icebp
jae
sti
cwtl
lds
cmp
movsl
sub
nop
imul
jmp
xchg
xchg
lods
aaa
test
hlt
push
push
mov
add
jo
push
fidivl
rolb
fmuls
jne
and
sahf
lahf
iret
mov
sbb
mov
mov
mov
fdivrs
in
addr16
xchg
outsb
push
data16
shrb
notl
test
ljmp
mov
cmc
arpl
add
mov
xchg
in
cmp
ja
ljmp
ds
xor
dec
into
fidivrs
popf
jae
adc
ljmp
pop
jo
and
mov
movsl
add
mov
movsb
add
imul
mov
fists
mov
ja
push
sarl
jmp
and
inc
jae
aas
pop
jne
iret
mov
daa
cmc
adc
shlb
outsb
fadd
pop
in
xorb
loop
arpl
jns
loop
xchg
repz
test
int
imul
inc
addr16
mov
or
lods
jmp
adc
mov
fcoms
ret
mov
icebp
inc
ljmp
outsb
cltd
dec
adc
arpl
stos
cmp
sbb
fidivl
mov
in
jp
shrb
out
mov
call
out
inc
movb
ja
rcrb
outsl
mov
popf
subb
or
lock
js
lods
jno
push
mov
mov
out
sub
sbb
ja
dec
cwtl
in
add
xorb
xor
imul
stos
leave
mov
lods
push
ret
scas
sbb
movsl
out
or
push
xchg
fucomip
add
lods
push
jg
hlt
jg
pop
testl
xchg
sbb
push
sbb
mov
repnz
and
or
movsl
mov
movl
pop
dec
adc
es
cmpsl
inc
or
and
and
mov
fwait
cmpsl
data16
pop
sub
pusha
out
enter
lock
fnstcw
push
push
in
dec
nop
int
or
sbb
jns
jo
inc
sbb
mov
xbegin
rcrb
pop
mov
cltd
xlat
out
xchg
call
mov
xchg
fstps
cmp
icebp
inc
push
pop
mov
mul
ljmp
inc
lock
xchg
add
adc
ficoml
arpl
adc
xlat
out
push
push
fcmovbe
adc
stos
shr
cwtl
push
or
pusha
cmp
pop
sub
mov
into
or
es
push
gs
int
fdivs
popf
mov
and
xor
jl
movsl
out
out
movsl
jp
test
cli
arpl
popf
push
enter
inc
rorb
xchg
mov
adc
jo
cmpsl
addr16
sbbl
xchg
and
lea
push
pop
mov
aas
sbb
stc
xchg
or
add
and
mov
in
mov
ja
push
fisubl
loope
insl
xchg
cli
ljmp
push
add
cmp
or
into
xor
out
ljmp
test
loope
jno
add
fucom
inc
insb
jmp
mull
xor
mov
icebp
mov
inc
sub
ret
lret
aad
cwtl
clc
sub
out
lahf
outsl
and
or
pusha
lods
movsb
lods
xchg
inc
je
idivb
aaa
jp
lock
cwtl
mulb
fmull
loope
stc
xchg
sbb
cmp
fmul
xchg
insl
hlt
jg
sub
xor
inc
mov
lods
je
ja
cmp
and
out
adc
int3
into
inc
jbe
or
mov
push
lods
cmp
mov
jmp
jnp
jne
add
in
jbe
and
mov
or
mov
ja
cld
pop
in
jne
ret
cmp
mov
xchg
test
arpl
lods
push
pusha
in
mov
mull
add
and
and
pop
push
pop
mov
cwtl
into
mov
lods
and
push
add
pop
pop
jmp
inc
mov
int3
iret
test
mov
mul
pop
jge
inc
pop
testw
movsb
jne
shl
hlt
cmp
int3
mov
arpl
or
loopne
add
push
sbb
fwait
div
int
add
imul
mov
out
pop
shlb
cltd
dec
sahf
fstpt
mov
idivl
shlb
mov
fwait
mov
and
jo
fisubrs
jp
xchg
je
imull
sbb
test
cmp
xorl
mov
flds
jge
sub
shr
cmp
imul
imul
xchg
movb
mov
test
cmp
outsb
xchg
notl
inc
ret
imul
xchg
aas
add
mov
sub
test
and
daa
je
nop
inc
out
or
adc
mov
outsb
sub
add
cmp
push
sub
orb
cmp
not
aaa
add
cmpsb
jp
mov
aas
push
and
push
cmp
in
fstp
adc
adc
dec
cmp
xchg
fidivrs
in
outsb
in
iret
xchg
imull
jns
cmp
push
movb
daa
push
ret
popf
pusha
imull
scas
mov
mov
adc
iret
imul
push
divl
aas
test
jbe
cmp
push
in
fnstcw
testl
xchg
lock
xlat
shlb
icebp
xrelease
pop
mov
cmpl
movsl
flds
mov
test
sbbb
das
xor
ss
pop
inc
and
cld
insb
mull
lret
adc
push
sbb
gs
cltd
mov
jo
xchg
popf
testl
mov
mov
jp
out
jle
adc
jl
idiv
inc
adc
xor
aas
xor
xchg
push
icebp
mov
or
sti
dec
pushf
fstl
adc
sbb
negl
mov
and
xchg
ss
add
pop
out
aaa
mov
xor
shrl
out
pop
jge
push
sahf
xchg
insl
nop
jmp
lock
add
pop
int
repz
jl
add
mov
imull
sar
mov
jbe
pop
data16
ss
out
mov
xor
push
popa
cwtl
lock
fcmovnu
repnz
jmp
sbb
xor
mov
add
fnsave
aaa
ficoms
fstpt
negl
lods
pop
out
idivl
pop
push
mov
arpl
push
divl
cmp
rcl
fstp
in
outsb
je
ds
shrb
lcall
aaa
mov
negl
pushf
push
mov
jg
xchg
jns
sbb
pop
rcrb
push
out
fwait
decl
notl
push
stc
dec
ljmp
dec
hlt
fsts
xor
mul
mov
jp
cltd
lock
mov
cs
imul
xor
idivl
test
and
sbb
je
fstps
mov
out
pop
test
pop
orb
sbb
test
aad
popf
not
dec
xor
imul
mov
inc
movsl
mull
das
cmp
lret
pop
push
jmp
pop
jo
push
sub
idivb
ds
mov
sbb
aaa
add
push
pop
xlat
sahf
imul
outsl
push
lcall
or
pop
out
push
or
xchg
sbb
rcr
dec
lods
pop
ss
movsb
outsb
or
pop
gs
adc
out
xchg
bnd
stc
push
imull
cwtl
mov
xlat
xchg
push
mov
scas
jbe
pop
or
neg
sub
push
adc
mull
nop
pop
sbb
negl
imul
pop
shl
nop
outsb
aad
push
mov
testl
sbb
repnz
imul
mov
pop
or
jae
insb
jg
fwait
pop
testl
inc
mull
rorb
mov
sub
roll
pop
notl
mov
mov
cli
dec
push
test
push
fstp
rcrb
in
ss
inc
out
or
int
call
insl
out
in
aam
mov
adc
aaa
idivl
or
jl
push
dec
add
insb
out
add
stos
fistpl
and
lds
xchg
insl
out
mov
addr16
jge
push
into
testl
mov
repnz
divb
pop
push
cltd
inc
mov
std
call
mov
mov
sub
ja
testb
clc
cld
in
fidivl
jmp
das
out
aad
pushf
pop
imul
jl
fwait
loope
lea
pop
mov
xorl
push
pop
ds
xchg
cltd
inc
mov
call
dec
fs
inc
adc
filds
repnz
div
add
dec
stc
outsl
inc
lods
int
data16
in
sbbl
inc
xor
inc
jnp
mov
iret
clc
cmpsb
addl
aas
or
or
out
mov
add
push
mov
jmp
jns
inc
ja
ret
push
push
and
loopne
push
pop
cmp
outsb
test
cmp
mov
sbb
and
mov
inc
pop
mov
and
loop
test
flds
dec
xchg
pop
and
out
lret
call
inc
push
cmp
scas
mov
mov
in
js
pop
sti
xor
sub
cwtl
mull
fnstcw
lahf
jne
xor
jb
and
outsl
xchg
jp
push
jl
mov
cltd
inc
lods
push
test
call
add
inc
mov
or
mov
inc
int
add
push
inc
pop
sbb
pop
ja
mov
fldt
pop
jb
lods
imul
mov
push
je
adc
mov
adc
test
fstpt
push
in
in
ss
outsl
in
popf
xchg
mov
inc
in
jecxz
stos
sbb
mov
in
xchg
ret
fdivrl
or
add
loope
nop
push
int
addl
mov
push
inc
jbe
push
js
mov
out
out
outsb
ljmp
cmp
push
call
jbe
push
les
in
loopne
lret
scas
testl
clc
mov
mov
mov
data16
ljmp
sbb
ficoml
cmp
sbb
popf
in
mov
xor
dec
scas
outsb
xorb
push
mov
mov
dec
test
mov
mov
dec
mov
fldcw
loope
mov
ret
sbb
mov
push
insb
push
data16
stos
stos
fldenv
scas
loop
lcall
cmp
div
sbb
xorb
add
fildll
mov
icebp
dec
stc
rcll
and
inc
divl
mov
repnz
mov
popf
jne
inc
cs
enter
pushf
outsb
push
pop
hlt
out
rcll
int3
sarl
adc
lods
or
mov
ja
mov
pop
movsb
sti
add
cs
mov
out
and
push
lds
inc
or
adc
cli
xchg
dec
pop
xchg
sbb
push
xor
mov
ljmp
dec
into
xor
cmc
into
pop
imul
aam
icebp
dec
xchg
adc
xchg
or
arpl
fs
mov
out
jmp
adc
into
cld
xor
in
adc
mov
mov
add
cmpsl
lds
adc
sub
dec
push
pop
mov
subl
xor
in
xchg
out
das
aaa
mov
leave
das
adc
sub
ds
mov
and
cwtl
je
js
xor
jmp
movsl
dec
mov
roll
lahf
sub
mov
iret
jae
sbb
push
lret
shll
out
std
jns
adc
mov
cld
inc
lods
scas
mov
call
xorb
sub
xorb
xor
outsb
mov
aad
clc
sti
xchg
sub
xor
xchg
negl
cmp
or
push
xchg
pop
out
jle
out
sub
push
in
fidivl
or
in
outsl
add
xor
inc
out
rol
in
inc
hlt
mov
je
iret
cmpsl
and
out
dec
sub
lcall
add
or
fadds
push
je
movsl
pop
mov
in
jmp
pop
dec
xor
inc
push
jne
outsb
mov
adc
stos
push
shlb
xor
mov
sub
ljmp
mov
dec
jmp
sbb
cmp
scas
adc
ja
pop
or
mov
jne
ss
jbe
pushf
call
ljmp
and
faddp
push
mov
pop
sub
in
push
xlat
and
dec
mov
loopne
add
and
icebp
stos
mov
cmpsl
cmp
sub
push
adc
repnz
and
loop
inc
out
add
movl
jae
xchg
test
dec
or
rclb
int3
inc
mov
arpl
lret
mov
inc
sahf
jl
loopne
faddl
js
or
addl
sub
js
repz
mov
sbb
pop
int
sub
sahf
frstor
sub
outsb
xorl
mov
cltd
icebp
push
int3
xor
loopne
adc
pop
inc
aad
gs
test
mov
cli
fs
cmp
xlat
adc
and
xchg
aas
ss
in
je
push
sarl
sub
jo
mov
inc
and
pusha
ljmp
scas
outsb
inc
inc
int
jo
and
in
pop
popa
ss
mov
add
sahf
out
xorl
or
jo
mov
inc
sbb
fiadds
dec
loop
pop
je
push
scas
add
jns
push
cmpsl
nop
rclb
push
xchg
insl
and
xchg
xchg
jne
mov
ficoml
repz
and
sub
iret
stc
out
sbb
xor
outsl
ljmp
popl
or
pop
xor
imul
loop
pop
dec
or
push
aas
lcall
roll
add
jecxz
and
push
popl
jo
fnsave
aam
add
jp
in
jae
pusha
push
scas
jle
fdivrs
aad
loopne
repnz
xor
push
repz
sti
repz
lahf
mov
xchg
repz
out
inc
fidivl
or
cs
pop
push
inc
pop
dec
mov
js
xchg
mov
ljmp
sbb
mov
inc
sbb
fidivl
mov
cmpsl
xchg
push
add
or
and
jp
mov
imul
jg
lods
adc
pop
mov
cmp
push
pop
loop
dec
lods
sub
and
cs
insb
cmpsl
out
in
icebp
int
pop
lret
addr16
cwtl
xor
pop
pop
sbb
sbb
dec
push
out
mov
jne
pusha
enter
push
pop
mov
mov
stos
mov
leave
or
pop
push
into
xlat
jno
fdivs
lahf
imul
cmc
adc
cwtl
test
pop
xchg
lock
in
jb
sub
add
lods
inc
xchg
inc
fs
rcrb
xor
add
scas
mov
sahf
dec
xlat
jno
mov
cld
ds
je
add
cmpb
or
sbb
push
cmp
lcall
mov
ljmp
outsl
fwait
pop
insb
mov
push
or
inc
idivb
push
add
mov
je
bound
jne
pop
sbb
add
mov
mov
stos
mull
push
xchg
test
rcrb
xlat
je
cmc
cmp
and
divl
sbb
out
cmpsb
movsl
and
negl
daa
xor
leave
sbb
dec
in
outsb
xchg
bound
inc
test
fisubrl
arpl
fisttpl
or
sub
mov
push
xor
int
add
out
or
stos
and
mov
push
xlat
nop
fcmovnu
aaa
testl
and
push
testl
into
data16
divl
sbb
cs
imull
pop
sahf
jae
jp
xchg
out
pop
test
mov
jnp
out
sti
hlt
push
loopne
push
sar
dec
dec
rcrb
sbb
out
imul
fnstcw
bound
push
in
mov
jg
add
push
in
xchg
outsb
cwtl
sbb
xlat
adc
xchg
pop
jl
mul
mov
adc
call
addr16
int3
je
mov
xchg
notb
ljmp
mov
inc
out
out
xchg
sub
negl
mov
pushf
ret
sarl
adc
xchg
imul
mov
js
push
cmpsl
jo
nop
and
out
adc
pop
je
or
test
mov
inc
and
and
nop
or
out
xchg
loop
jl
push
dec
push
imull
loopne
pop
in
mov
out
push
or
inc
xor
mov
mov
testb
sub
ss
ret
adc
push
out
test
rcll
lret
popf
aam
repz
scas
and
sbb
stc
bound
cmp
push
push
pop
inc
xchg
add
arpl
or
imull
outsb
out
xchg
nop
jmp
xchg
push
jo
loope
imull
popf
pop
insb
lea
idivl
js
nop
inc
test
pop
jg
mov
stos
mov
fwait
jo
xchg
neg
xchg
lcall
test
sbb
imul
outsl
and
dec
mov
ljmp
push
testl
sbb
push
mov
stos
aad
pop
jns,pt
sub
inc
lods
xor
fs
cmp
enter
xchg
xchg
pushf
mov
negl
cli
shrb
fadds
div
outsb
test
cltd
sub
mov
pop
jg
incb
push
inc
cmc
pop
cmp
sahf
pop
inc
je
jae
xchg
inc
cltd
repz
notl
dec
mov
divb
mov
in
movsl
adc
imull
addr16
mov
and
fisttpl
mul
call
push
div
ss
mov
jmp
push
push
rcrl
lret
int3
pop
enter
test
dec
testl
notl
sub
loope
stc
and
mov
xchg
cmp
jecxz
sub
leave
lds
inc
loope
inc
mov
mull
aam
hlt
push
sbb
idivl
stos
cmpsb
testl
in
daa
imull
aas
fistpll
lock
pop
cltd
jnp
mov
jp
dec
cmp
fadds
pop
int
repz
popa
mov
push
push
and
in
mov
mov
jns
leave
inc
test
mov
loopne
dec
repz
pcmpgtd
daa
mov
lods
and
into
xlat
loop
lods
aad
fists
add
mov
iret
sahf
rol
mov
sbb
out
jp
sbb
cmp
mov
test
addl
mull
popf
test
aaa
xor
notl
imul
test
popa
adc
icebp
adc
sub
xor
cmc
je
fisttps
sar
xchg
mov
leave
call
rcrb
lds
test
bound
idivb
and
adc
adc
shlb
pop
out
divl
jge
push
and
into
div
xchg
inc
jno
insb
and
mov
xchg
jnp
stos
icebp
inc
dec
add
ret
icebp
insl
ljmp
mov
inc
testl
lods
movsl
mov
in
jo
stc
xor
gs
adc
sbb
das
out
ffreep
add
testl
sub
push
cmp
div
jle
adc
icebp
sbb
mov
mov
dec
xor
stos
popa
lea
test
sub
rclb
aaa
sbb
lahf
jmp
xor
mov
roll
imul
lods
pushf
fiaddl
push
push
or
pop
jecxz
stos
inc
add
pusha
jnp
mov
add
dec
lock
and
cli
mov
ja
jno
pop
leave
and
push
mov
xlat
jle
lret
jb
adc
aam
es
out
out
inc
movsl
incb
pop
and
push
imul
jns
xor
lcall
loope
sbb
inc
stc
sub
sbb
nop
add
add
push
pop
push
jae
inc
jne
jnp
dec
enter
inc
lods
outsl
cmpsb
sub
imull
mov
xor
cltd
adc
clc
lods
ljmp
lret
shl
xor
iret
aam
lods
cli
xor
pop
repnz
fisttpll
sbb
negl
mov
cmp
pop
das
popf
push
xor
enter
dec
dec
inc
mov
jl
sub
cmp
push
cli
div
outsb
jmp
addr16
xchg
mov
int3
jge
fsts
mov
into
jp
loopne
pop
aaa
loopew
push
jo
imul
push
mov
cmp
rorb
out
mov
jns
mov
cmp
xchg
mov
loope
test
inc
adc
imull
xor
dec
divl
adcb
pop
in
idivl
hlt
pop
out
mov
dec
mov
xor
jmp
movsl
je
popf
push
stos
ror
pop
idivl
inc
sub
test
mov
ret
add
xor
idivl
mov
ss
and
push
repz
testb
xchg
lods
mov
arpl
out
ss
in
lds
or
push
mov
xchg
push
in
push
iret
mull
lret
xchg
xlat
lock
daa
push
out
mov
les
sub
pop
sbb
sti
cwtl
xchg
test
pop
ret
sbb
cmpsb
push
jge
repnz
divl
pop
addr16
mov
ss
je
pop
sbb
idivb
iret
aaa
push
adc
negl
ss
adc
scas
nop
lock
and
int3
shll
push
fistl
out
lds
cmp
subb
mov
stos
or
jne
out
pusha
scas
cmp
sbb
nopl
or
out
add
mov
testl
add
shlb
push
and
xlat
sub
mov
fildll
mov
popf
mov
cli
fwait
pop
outsl
rcl
rcll
mov
push
pushf
nop
clc
and
fdivs
add
es
imull
inc
repz
dec
nop
negl
cmp
in
adc
jno
shl
jmp
in
mov
das
push
pop
mov
imul
jmp
or
sbb
data16
testl
mov
in
mov
xlat
sub
ror
pop
jno
fildll
adc
stos
sub
out
and
xchg
add
xor
cs
adc
js
je
xchg
mov
faddl
mul
sbbl
pop
out
mov
and
inc
ret
lock
sub
test
insb
fcomi
push
and
fildll
mov
clc
out
andl
push
adc
insl
in
jmp
hlt
and
bound
mov
xlat
jge
xchg
add
neg
in
rcl
idiv
popf
and
sbb
leave
fdiv
sbb
clc
sbb
mov
mull
fabs
jge
addb
dec
pop
dec
notb
adc
sub
filds
out
jne
sbb
xchg
in
leave
fcmovnbe
lods
insb
fsubl
idivl
push
jl
testl
sbb
sarl
and
lcall
gs
aas
test
jae
stos
call
call
lock
pop
inc
xchg
cmp
enter
std
mov
jmp
loopne
push
sbb
jle
lret
mov
divl
das
fidivrs
rcl
add
xlat
and
fbstp
call
jb
jmp
ret
shlb
scas
push
divl
mov
mov
and
call
jmp
jmp
dec
ror
test
fs
adc
shl
inc
cld
scas
or
imull
stos
jmp
xor
push
push
mov
jle
fnstenv
aad
iret
push
ds
lret
mull
mov
idivl
mov
add
jg
inc
jnp
in
ljmpw
je
cmpsl
adc
xor
dec
loopne
push
xchg
xor
adcb
data16
or
xor
adc
mov
sub
arpl
add
push
repz
xchg
pop
adcl
jecxz
pop
je
push
mov
loopne
gs
push
xor
dec
nop
div
xchg
imul
leave
insl
cs
das
je
mul
movsl
and
push
inc
inc
mul
outsl
lahf
lds
mov
fstl
sbb
sbb
es
stos
add
out
ljmp
enter
fcoms
sbb
out
cmp
shlb
shl
fildl
icebp
testl
dec
add
iret
idivl
inc
adc
add
jg
lock
xor
mov
insl
sbb
test
xlat
mov
xchg
fldl
xlat
mov
ja
jnp
fucom
nop
dec
repnz
cld
arpl
push
in
outsb
pop
movsl
fadds
push
pop
xor
adc
or
cmc
loope
jecxz
sub
jo
stc
fidivs
add
mov
dec
vfrczss
fcmovbe
push
in
jl
mov
in
dec
mov
fists
ficoml
jae
shlb
in
pop
ljmp
mov
fisubrl
out
into
cmp
add
ja
mov
mov
pop
mov
test
jnp
das
cwtl
ret
loop
lahf
sbb
test
pushf
inc
cmp
pop
pop
ja
clc
lahf
fs
loop
mov
push
jmp
loopne
cld
popf
cltd
jmp
les
or
and
mov
pop
add
aaa
ja
mov
jg
lock
mov
xchg
and
pop
add
add
push
insb
push
rclb
fbstp
dec
imul
pop
ficoml
pop
mov
aas
pop
cmovo
mov
pop
xchg
fimull
test
stos
and
bound
incb
ficompl
mov
pop
and
loopne
or
scas
xor
arpl
cmpb
je
pop
mov
mov
xchg
inc
rcll
fstpt
or
sub
dec
jb
aaa
or
sub
js
out
push
and
adc
add
rcll
pop
mov
in
test
pop
mov
mov
in
add
xchg
mov
lods
and
inc
cmp
cwtl
inc
loope
out
mov
out
inc
in
xchg
jae
add
cs
bound
dec
cmp
fwait
mov
ljmp
outsl
in
or
pop
jmp
pushf
ficoml
in
and
andb
out
mov
bound
jg
push
mov
mov
xor
loop
into
jle
mov
lahf
fimull
pop
mov
sub
out
mov
movsl
lods
in
lcall
inc
aaa
test
aaa
sbb
sbb
or
clc
xor
movsw
fisttpl
rcrb
hlt
scas
lods
incb
xchg
mov
jbe
je
stos
loopne
lcall
mov
mov
addl
mov
push
out
push
into
ljmp
sahf
shll
dec
insb
pusha
fistl
test
add
inc
sub
adc
int3
rorb
push
xor
mov
or
fistpll
out
add
decl
jl
bound
mov
stc
data16
mov
and
lahf
mov
ja
jmp
js
popf
repnz
inc
frstor
cmp
add
cmpsl
call
jnp
mov
add
lods
in
in
cmp
sbb
das
push
fldt
lea
dec
xchg
sbb
clc
xchg
fwait
test
xor
shl
and
mov
sub
mov
xchg
pushl
fisubrl
lea
mulb
push
push
inc
push
addr16
push
mov
lds
imul
push
int3
in
orb
shrb
jo
mov
mov
mov
or
js,pn
inc
outsl
add
call
or
sbb
rol
outsb
adc
mov
and
fdiv
mov
in
fcmove
data16
cwtl
inc
data16
xchg
insb
sarb
aad
adc
sbb
adc
add
xchg
and
in
loopne
int
pop
negb
nop
ljmp
adc
hlt
jp
ljmp
jmp
mov
sbb
lods
ret
dec
jbe
xor
mov
shrl
nop
iret
into
loopne
rorl
shl
in
call
xchg
ret
mov
js
ljmp
scas
jb
imul
mov
and
cmp
mov
loope
xchg
sub
mov
pop
xor
scas
pop
add
cltd
cmp
mov
jecxz
lock
mov
mov
pop
enter
repz
add
scas
dec
mov
cld
lret
and
pop
jecxz
push
ljmp
push
inc
repnz
sub
lret
fisubl
daa
lods
mov
out
out
jge
or
aas
movsb
ficoml
dec
mov
dec
data16
xor
xchg
mov
out
insl
mov
inc
cmp
xchg
pop
jecxz
fisttpl
mov
mov
test
push
pop
fcoms
dec
fwait
inc
iret
les
or
out
jb
stos
and
jp
push
or
lahf
insl
aaa
sbb
mov
rcl
into
lods
sbb
mov
aas
push
inc
jne
int
and
je
cmpsl
out
ss
inc
loopne
pusha
arpl
and
lods
sbb
push
insl
adc
cmpb
xor
stos
dec
aam
ljmp
push
xor
inc
shrb
rol
inc
scas
jmp
movsb
push
jl
cmp
fdivs
addr16
rol
fdivs
rorl
push
inc
fwait
adc
fists
frstor
repnz
arpl
cs
dec
cs
mov
push
je
pop
fistl
lods
or
movsl
dec
ljmp
pop
adcl
shll
push
enter
and
cmp
jle
ffreep
jbe
sub
mov
xlat
es
es
sbb
push
xchg
xchg
mov
in
shrb
mov
sub
aam
test
inc
jbe
jmp
hlt
and
enter
scas
jl
mov
cmp
in
ja
test
mov
js
mov
lcall
ja
and
test
rdtsc
jo
nop
mov
pop
pop
push
dec
push
jnp
jbe
stos
lea
pop
mov
js
pop
sbbb
addr16
out
mov
pop
addl
dec
mov
sbb
jbe
test
jbe
jo
mov
mov
fdivrl
roll
imul
xor
in
lods
mov
cmpsl
pushf
in
test
mov
or
dec
sbb
lret
jb
inc
je
or
stos
ljmp
pop
add
mov
jae
xchg
popa
test
jno
sbb
jno
sbb
out
push
outsb
cmp
pop
test
sub
lods
ja
sub
neg
fbstp
push
movsb
mov
xchg
mov
dec
push
adcb
fcmovbe
jae
sbb
dec
in
cmp
in
test
adc
ret
jae
je
push
je
cmp
out
push
daa
mov
ret
lds
xchg
mov
sub
ret
add
test
outsb
cld
cli
inc
xor
fs
outsl
addr16
ja
imul
sbb
jecxz
mov
and
in
ds
sub
cwtl
mov
add
cmp
sub
pop
call
loope
sets
testl
cli
mov
aas
test
xor
out
xchg
fisubrl
jae
mov
xchg
sub
cmpsb
push
pop
pop
flds
xchg
shll
fcmovne
adcl
stos
jmp
ret
xchg
scas
mov
dec
push
cld
mov
aad
xchg
stos
ljmp
sbb
pop
sbb
mov
push
fistl
nop
mull
jno
das
push
ja
imull
sub
dec
mov
aas
sub
add
imul
xchg
add
outsb
push
jns
stc
in
push
leave
jno
lds
sbb
ljmp
addr16
and
sbb
push
push
inc
aad
imul
test
xor
in
popf
jbe
testl
inc
ljmp
fiadds
negw
sti
negl
cltd
loop
sahf
mov
mov
jae
jg
dec
cli
not
push
lret
shrl
push
and
jno
mov
repz
dec
pop
fcomp
lcall
cwtl
leave
jo
repz
sbb
mov
xor
lahf
mov
push
xchg
push
lret
nop
out
add
lds
mov
xchg
idiv
cmc
cmp
icebp
adc
mov
dec
lret
insl
fcomps
idivl
pop
and
out
jb
and
idiv
cmpsl
shll
push
jae
jle
push
and
jnp
cmp
jmp
push
testl
cs
cmpl
fists
add
mov
mov
adc
inc
enter
shlb
test
and
bound
fwait
and
mul
mov
enter
sbb
push
cli
repnz
or
push
pop
pop
lds
loopne
ja
adc
xor
add
in
jmp
fnstsw
cs
fldl
lea
imull
add
sub
mov
sbb
and
mov
ret
xchg
rcll
int
mov
idivl
inc
lahf
testl
mov
mov
xlat
jmp
fadds
adc
or
xchg
adc
out
xchg
cwtl
out
fstps
mov
pop
mov
jne
mov
sbb
ss
std
xor
addl
xchg
and
test
mov
pop
xchg
jae
push
int3
adc
pushf
movsb
js
jl
xlat
pop
sbb
jmp
cmpsb
push
pop
sahf
shlb
push
ds
adc
sbb
xor
clc
jmp
add
testl
mov
mov
das
fnsave
dec
fildl
xlat
and
ljmp
push
sub
outsb
cld
mov
mull
movsb
cmpsl
ret
movsl
jl
push
jecxz
ja
cmpl
cld
and
in
scas
push
into
push
mull
stos
mov
lods
add
fimuls
or
pop
out
cld
cmc
int3
insl
pop
mov
into
cmpsb
mov
sub
scas
xchg
adc
mov
imull
cmc
outsb
cmp
and
lds
add
mov
je
lea
xchg
fistpll
loop
mov
pop
rcrl
pop
stos
mov
call
mov
divl
xchg
loopne
inc
out
testl
enter
pop
popa
sarb
nop
push
int3
sbb
push
add
and
push
fnstenv
pop
mov
adc
idivl
fsubrs
aad
mov
xchg
inc
mov
mull
dec
xchg
imul
and
aas
lcall
idivl
daa
int3
jb
mov
or
lea
aam
loopne
and
aad
pop
aam
nop
stos
rclb
jp
cmp
sbb
mov
inc
xlat
fcom
aaa
cmp
mov
inc
sub
lods
inc
out
push
movsb
jp
bound
inc
les
jno
test
je
lcall
jae
test
imul
out
aad
pop
testl
dec
mov
movsb
sbb
out
sub
mov
inc
jne
js
cmp
sub
test
xchg
mull
lds
das
fwait
pop
push
idivl
sub
mov
mov
andb
sbb
jae
shll
and
sub
pushf
out
add
aas
scas
fmul
popf
hlt
dec
pop
adc
enter
shl
int3
jae
data16
fcmovu
pop
sbb
jbe
xchg
je
jns
nop
pop
in
icebp
negl
sub
cwtl
shrb
dec
sub
in
int
dec
scas
fsubrs
js
push
out
in
hlt
hlt
or
mov
stos
ss
adc
pop
push
pop
xchg
xorb
out
dec
pop
outsb
jae
div
in
call
mov
sub
xlat
data16
sbb
push
andb
add
mul
mov
in
divl
loopne
add
jmp
fwait
in
rcrb
jne
out
imull
ja
ljmp
enter
stos
sbb
adc
jge
insb
mull
cwtl
jl
push
push
pop
adc
fidivl
inc
test
mov
imulb
divl
dec
jmp
imull
leave
je
push
jl
jmp
mov
subl
push
xor
pop
repz
test
ja
cmp
call
lds
mov
rcrl
pop
xchg
leave
add
mov
xor
push
in
lcall
xchg
pop
push
adc
xchg
test
mov
jmp
cmp
cli
das
cwtl
outsl
repz
push
push
xlat
xchg
inc
push
mov
outsb
clc
pop
lods
push
popf
in
out
out
sub
scas
les
mov
cmp
outsl
mov
fwait
popf
adc
pop
mov
mov
adc
sub
into
in
sbb
notl
xchg
cmp
in
inc
js
or
xchg
ficompl
ja
sbb
popa
mov
test
mov
sbb
adc
out
les
int3
pop
xor
push
lods
popa
push
jmp
mov
adc
jmp
and
mov
pop
xlat
fstps
adc
jl
jp
push
xor
in
popf
cli
jae
call
mov
xchg
xlat
faddp
dec
rcrb
adc
into
or
sbb
adc
mov
jmp
pop
cld
testl
xchg
xchg
imull
mov
xchg
sub
mov
mov
out
add
divl
inc
pop
push
mov
std
fdivrs
jb
xor
or
mov
lods
das
cli
js
cld
scas
sub
pop
cltd
cmc
pop
mov
imull
cmp
add
negl
and
add
mull
sahf
imul
push
xor
aaa
outsb
movl
ss
out
lahf
jo
sbb
movsl
inc
enter
lret
les
push
sbb
cmp
cmp
ficoml
cmpsl
sub
mov
iret
dec
stc
mov
mov
dec
push
sahf
int3
dec
addr16
sub
leave
call
or
in
jnp
pop
cli
jns
or
idivl
adc
in
or
mov
outsl
jne
sbb
cmpsb
orl
testl
cltd
stc
imul
in
pushl
or
aaa
push
jg
movsl
pop
xchg
xor
adcb
cmp
lock
pop
out
pop
xchg
push
push
xor
lret
add
test
icebp
adc
inc
cmp
mov
sbb
and
idiv
stos
pop
jbe
dec
sbb
lcall
xor
inc
sub
out
leave
mov
xor
mov
xor
lea
mull
bound
popa
push
icebp
js
dec
inc
lods
pop
add
sbbb
std
fisttps
popf
add
divl
leave
jg
fistl
negl
insl
push
imul
sub
xchg
int
cmp
jbe
xchg
or
aad
testl
push
lods
orb
aaa
daa
fsubs
dec
lcall
fldt
je
shrl
jmp
cmp
xchg
cmp
dec
xchg
mov
fstpt
repz
sbb
adc
out
cwtl
mov
out
mov
imull
sub
gs
and
mov
lret
or
iret
mov
add
scas
movsb
xchg
lret
sbb
mov
fbstp
jle
adc
mov
out
mov
mov
bound
outsl
mov
repz
and
mov
ret
mov
in
pop
out
jnp
pop
testl
mov
idivl
fstpt
dec
lock
push
push
cmc
fldt
out
pop
divl
fisttpl
notl
jp
bnd
jle
outsl
ret
je
divl
test
idiv
push
mov
inc
xlat
ja
int
pushf
cmpsl
xchg
fldl
cltd
in
dec
mov
loope
ds
fnsave
inc
not
jae
push
nop
in
pop
xchg
imul
addr16
mov
or
out
sub
leave
cli
fimull
testl
cmp
xor
mov
sub
or
mull
lahf
pop
clc
popf
mov
sbb
imul
mov
mull
nop
in
add
jno
int3
ret
popa
notl
mov
in
push
jo
push
movsl
mov
divl
sub
leave
and
or
idivl
cli
sbb
sub
push
fdivrs
lods
jmp
test
stos
fwait
imull
cmpl
jg
add
testl
cmp
es
fists
sub
jbe
push
scas
jmp
fnsave
cld
mov
push
xor
outsb
fdivs
cmp
sub
movsl
adc
add
adc
shrl
mov
notl
pop
inc
xor
repz
idivb
cmp
into
enter
inc
fwait
aaa
fpatan
add
stos
xchg
jg
inc
dec
xor
lods
fisttps
arpl
loopne
idivl
sbb
push
jmp
loopne
mov
testl
lods
jmp
xor
aas
pop
cs
mov
jbe
jae
notl
jmp
inc
ds
xlat
mov
jo
inc
ror
xchg
cmp
mov
inc
icebp
stc
adc
push
sti
xchg
call
cmp
sub
fcoml
icebp
or
or
pop
push
into
pop
getsec
repz
loope
pusha
enter
stc
mull
into
xor
mov
sub
popa
stos
xchg
dec
idivl
push
out
cltd
dec
add
mov
mov
mov
mov
push
hlt
test
inc
push
mov
jl
test
dec
fcmovu
mov
mov
sbb
mov
movsl
xchg
dec
insb
cmp
xor
sub
mov
adc
cmp
pop
push
ficoml
jl
fistps
xor
pop
adc
sub
lret
jo
or
push
je
clc
movsl
lock
inc
into
dec
pushf
popf
add
cmp
adc
dec
aad
pop
xchg
icebp
or
sbb
mov
ja
int3
cmp
aam
push
pop
adc
mov
xchg
in
scas
jmp
dec
xchg
lods
fdivrl
mov
dec
or
pop
cmp
cwtl
xor
and
sbb
adc
sub
lahf
into
jbe
xchg
jmp
add
add
scas
and
adc
rcrb
ja
mov
sbb
inc
daa
push
adc
pop
loopne
pop
add
ljmp
dec
leave
mov
add
mov
cld
out
rorl
pop
adc
pop
dec
xchg
lods
hlt
sbb
out
and
outsl
mov
push
jl
cmpsb
sar
pop
mov
xor
xchg
xchg
ljmp
lods
lds
jne
xchg
inc
jge
xlat
repz
outsl
mov
test
testb
inc
ljmp
mov
cmpsb
test
in
or
mov
leave
scas
mov
inc
mov
adc
js
sbb
cmp
int3
aad
mov
mov
push
fs
pop
lea
mov
mov
push
dec
mov
sarl
or
out
cs
aaa
push
iret
add
clc
test
ja
jbe
jns
out
in
sbb
ljmp
jno
lcall
das
mov
sub
pop
sub
fsubp
jecxz
scas
xchg
mov
xor
popf
mov
and
in
xchg
outsl
pop
divb
fs
sub
dec
mov
push
lcall
movsl
out
push
imul
aas
jae
lock
adc
dec
fs
and
or
xchg
adc
stos
xchg
cmp
int3
or
mov
test
outsb
mov
sub
adc
mov
inc
mov
ja
shlb
stc
pop
xor
repnz
fsubrs
iret
sbb
mov
jne
xor
aad
mov
mov
jno
pop
dec
movsl
outsl
or
push
adc
loopne
cmp
jno
repz
int3
sub
fwait
mov
daa
pop
in
lahf
ficompl
push
gs
mov
mov
popf
in
lods
pop
inc
add
adc
fcom
std
popf
mov
mov
jmp
mov
cmpsb
dec
outsb
add
iret
jb
sbb
and
push
imul
mov
fs
jbe
cmpsb
scas
outsb
inc
sbb
ficomps
push
cmpsb
rcl
mov
enter
ror
jo
bound
cmp
ret
add
ret
ret
mov
mov
stos
dec
or
cs
jle
or
js
jo
pop
lret
cmpsl
xor
mov
dec
in
cltd
int3
adc
add
popf
lods
lret
out
jmp
or
das
and
fbld
stc
add
dec
movsl
lret
mov
dec
outsb
cltd
icebp
sbb
xor
or
inc
xchg
add
cwtl
xchg
es
fildll
push
cmpb
push
pusha
mov
mov
fildl
sbb
cmp
pop
inc
sahf
mov
mov
adc
push
inc
pushf
insb
out
clc
sub
sbb
jnp
hlt
sbb
jecxz
loope
add
sub
cld
push
mov
cmp
outsb
inc
cwtl
insb
mov
out
and
std
pop
push
push
inc
xchg
out
cmp
out
jl
arpl
or
cltd
sub
mov
idivl
sbb
lods
gs
jns
sarl
movsl
dec
mov
mov
out
pop
stos
adc
lock
push
lret
mov
je
jle
push
imul
push
adc
movsl
std
mov
idiv
mov
pop
xorl
or
in
enter
or
outsb
repz
add
cmpsb
jle
int
cwtl
push
rcl
fimull
pop
xchg
icebp
xchg
xchg
imul
sbb
nop
loop
and
adc
call
sub
lods
shll
out
or
mov
inc
mull
insl
pop
push
push
xchg
cmp
bound
adc
xor
por
jl
out
in
mov
repz
pop
and
idiv
cld
or
or
or
leave
lahf
sbbl
mov
lock
xor
inc
dec
loope
mov
and
xor
push
sub
enter
push
push
loopne
dec
xchg
movsb
fcoml
mov
orb
ja
push
sbbl
out
fsubr
int
in
mov
in
cmp
jns
es
mov
cmp
jnp
dec
hlt
cmp
aaa
popf
mov
pop
scas
mov
stos
adc
in
out
push
and
jge
jmp
sahf
adc
shlb
insb
push
add
and
inc
movsb
and
xor
je
inc
mov
sbbb
jge
rcl
addr16
repz
pop
aad
mov
test
xchg
xor
out
mov
testl
inc
cwtl
cmp
inc
negl
roll
inc
popl
rcl
cmp
gs
mov
push
add
add
int3
fiadds
enter
add
in
push
add
scas
hlt
sahf
pop
inc
mov
jmp
pop
sub
sub
jmp
insl
add
shll
pop
repnz
cmpsl
imul
jae
pop
push
into
cwtl
sbb
ja
sub
push
std
jbe
imul
popf
mov
clc
imul
test
push
inc
gs
fcomp
cmp
cmc
or
xchg
or
aas
inc
pop
sbb
fidivl
out
fisubrs
add
dec
gs
and
outsl
movsb
or
mov
push
dec
dec
sbb
stc
movl
test
adc
add
scas
dec
movsl
arpl
push
imul
and
testb
inc
ret
mov
and
mov
push
cmc
dec
mov
xor
ficoml
push
adc
data16
ja
mov
scas
lret
dec
ja
add
cmp
callw
cmc
ficoml
inc
sbb
mov
insb
jno
fs
jmp
xor
ficompl
in
push
push
sbb
cmp
lahf
mov
inc
repnz
cmp
leave
push
in
lcall
mov
cmp
cmc
sbb
pop
sbb
add
sti
in
cmpsl
inc
jo
sbb
int
call
inc
sbb
or
inc
cmp
dec
adc
or
cwtl
iret
pop
jae
movb
sbb
aas
out
push
mov
ljmp
jmp
js
ficoml
inc
mov
test
mov
adc
js
pop
xchg
xor
mov
xchg
xchg
push
pushf
mov
mov
fisubl
nop
pop
aas
jp
movsb
rorl
or
out
sbb
ficomps
mov
ret
pop
jmp
aaa
add
sub
xchg
xchg
daa
mov
mov
lods
ljmp
out
mov
jl
dec
cmp
mov
pop
js
pop
jmp
imul
mov
loopew
fimull
inc
leave
xor
mov
jno
mov
mov
mov
xor
imul
std
lds
ret
sahf
sahf
movsb
fistps
push
test
mov
mov
dec
icebp
and
and
aas
dec
ficoml
dec
push
outsl
inc
outsb
leave
outsl
lods
and
cltd
mov
test
pop
fchs
sbb
lods
xlat
cmpsl
inc
sub
fcoms
movsl
pop
add
sbb
movsb
faddl
adc
mov
xor
sub
les
aaa
add
sub
inc
jae
mov
cmpsl
test
jmp
push
adc
sub
sub
pop
pop
push
ljmp
jb
nop
pushf
lret
pop
pop
out
push
pop
out
imul
outsl
pop
jg
imul
xchg
push
shr
cmpl
fs
jb
pop
jo
shlb
icebp
shr
int
push
hlt
sub
adc
mov
mov
jp
mov
push
mov
inc
fdivrs
clc
fmuls
mov
dec
ret
clc
in
xchg
daa
sahf
mov
mov
xlat
xchg
adc
push
sbb
jae
push
inc
clc
iret
pop
ret
mov
adc
mov
into
mov
popf
jb
aad
jle
sbb
out
rolb
pop
addr16
ljmp
in
icebp
xchg
rcrl
sub
push
mov
mov
or
mov
dec
test
cltd
data16
mov
or
iret
fcompl
add
fidivl
mov
divl
jne
orb
repz
out
inc
xorl
int
sbb
mov
adc
pop
adc
js
and
and
fwait
ss
popa
sbb
js
daa
push
and
icebp
lea
aas
pusha
mov
es
out
sub
xlat
mov
adc
jecxz
adc
adc
cmp
push
push
call
testl
xchg
testl
icebp
pop
mov
mov
adcb
push
negl
mov
pop
cmp
fisttps
out
testl
lcall
xor
mov
pop
movsb
xchg
fs
loope
rcll
push
das
vmwrite
or
cmp
idivl
into
imul
fisttps
stc
and
inc
jns
arpl
scas
dec
loope
fisubrl
fisubs
xor
cld
in
mov
mov
add
mov
push
jmp
mov
jne
mov
cmc
out
push
push
jecxz
je
or
addb
push
dec
mov
xchg
les
inc
js
cmp
mov
ljmp
out
push
sbb
dec
mov
pop
lcall
imul
xchg
in
shrl
out
mov
rclb
push
push
cmpsl
rcrl
aam
xor
xchg
cmpsl
dec
jecxz
ss
lahf
mov
push
mov
mov
aas
ret
mov
add
mov
and
scas
addr16
xchg
data16
jo,pt
xor
xor
adc
int
jge
xorl
sub
jbe
pop
push
pop
imul
xchg
sbb
and
jg
pop
aas
daa
lcall
push
cmpsb
cltd
cmpsl
pushf
in
imul
jmp
cs
jae
int3
fucomp
xchg
movsl
xchg
mov
xor
sbb
mov
test
lea
jbe,pn
jmp
xor
insb
jne
dec
cmp
sbb
jecxz
jmp
jp
inc
movsl
out
sub
imull
fldt
xor
ficompl
sbb
repnz
jg
push
jno
jnp
add
mov
mov
pop
pop
cmpl
out
or
pop
and
mov
cwtl
scas
sbb
popf
inc
mov
cmp
mov
testl
stos
mov
push
sub
pop
in
repnz
testb
divl
mov
pop
in
roll
sarl
mov
jb
mov
imull
cld
xchg
cwtl
hlt
scas
imul
and
imull
das
add
testl
mov
mov
jmp
adc
int3
mov
mov
in
mov
pop
imul
xchg
es
orb
mov
cld
xor
and
std
or
lahf
shl
sbb
repz
out
cld
outsb
pop
int3
call
dec
mov
in
or
cmp
in
scas
push
pop
call
jmp
loopne
push
xor
mov
sub
add
sub
es
repz
outsb
cs
insl
and
mov
test
mov
out
call
jne
xorl
sub
inc
cltd
cmpsb
pop
mov
dec
test
flds
jnp
call
inc
jle
cmp
mov
notl
aad
inc
push
sbb
cmp
je
jbe
stos
into
aaa
das
or
pop
and
xor
ds
adc
ficomps
fucomip
push
inc
daa
int3
cld
imull
es
cmp
into
outsb
adc
scas
insb
mov
pop
jg
cmp
scas
lock
xlat
movsb
andb
push
cltd
jge
ss
idivl
mov
dec
xor
xor
cs
mov
shll
es
mov
lcall
pushf
lds
ja
jmp
mov
push
jb
sub
es
js
ds
jp
scas
out
fistpl
clc
adc
repnz
icebp
cld
mull
jo
jne
push
mov
cli
int
xchg
dec
dec
lea
xor
or
mov
repz
ret
clc
arpl
xor
movsb
or
add
clc
pop
out
lret
lcall
gs
cmp
add
shll
clc
mull
add
pop
xlat
pop
fildl
outsb
push
push
movsl
cmp
clc
mull
jne
xchg
pop
pushf
pop
xlat
jo
and
fstp
xchg
fwait
and
loopne
adc
mov
jae
pop
lcall
insl
rcr
or
fcmove
or
pop
fnstsw
testl
test
in
out
outsb
mov
xchg
push
divl
sbb
push
adc
test
jae
loopne
xchg
xor
push
repz
mov
sbb
fidivs
imul
xor
imull
jge
and
aas
negl
iret
add
push
insb
xchg
and
push
push
bound
mov
xor
cmpsl
mov
push
xchg
xor
stc
mov
mov
jecxz
inc
xlat
mov
cmp
ror
xchg
stos
push
arpl
iret
sti
loop
xchg
fisttps
addr16
lods
cmpsb
mov
xchg
faddl
pop
mov
out
lods
les
div
jne
shrb
pop
mov
popf
movsl
fidivl
adc
lret
xor
std
repz
jnp
gs
xchg
push
or
mov
dec
sti
pop
das
daa
cmp
add
inc
and
popf
pop
jb
test
pop
cmpb
push
in
inc
iret
test
test
negl
or
fidivrs
jmp
mul
pop
push
mov
notl
xchg
inc
mov
loopne
sti
mov
movsl
popf
fdivs
and
mov
das
sbb
dec
pusha
jne
not
dec
mov
mov
ret
inc
pop
sbb
cs
test
xchg
jg
stos
test
popf
lods
and
leave
into
out
rolb
cmc
adc
mov
sbb
ja
inc
je
sub
xrstors
dec
outsl
dec
icebp
or
push
loop
cld
jno
pop
pop
in
add
adc
lods
sbbb
pop
cmp
negl
and
insb
movsb
arpl
mov
out
jle
lcall
loope
faddl
adc
leave
test
gs
repz
cmp
xlat
mov
dec
int
inc
sub
mov
loope
xchg
push
cmpsb
jo
shl
pop
lock
mov
jg
pop
jne
cli
outsb
stos
add
div
cld
pop
out
jmp
mov
xchg
xor
and
aaa
testl
push
xorb
pop
lds
lret
xor
jg
fcomip
das
gs
jb
divl
mov
sbb
xlat
setl
rolb
lock
push
push
and
imull
shrb
jo
mov
pop
hlt
out
dec
sbb
pushf
xor
push
lret
add
mov
pushf
mov
flds
xchg
jns
in
or
mov
orb
insb
push
hlt
mull
je
mov
out
push
adc
cmpsl
mov
ret
lock
mov
negl
gs
in
lds
ljmp
hlt
aad
shl
divl
into
mov
rcrb
testl
xchg
idiv
dec
sub
push
shl
data16
les
add
lods
fnstcw
in
pop
int
push
or
not
test
jle
lcall
imul
insl
ds
test
ljmp
hlt
push
jmp
pop
xchg
jns
pop
fdivs
xor
fsts
lds
fstl
add
popa
xchg
test
idiv
stos
das
or
xlat
in
fwait
add
jbe
sbb
fldcw
mov
mov
jle
or
enter
lret
adc
imul
fs
xchg
or
enter
mov
pop
aam
flds
sbb
inc
roll
cmp
out
xor
sub
mov
or
pop
loopne
pop
inc
fcmovnu
push
or
sub
icebp
enter
imul
mov
sub
lcall
mov
imul
dec
cmpsb
dec
cmp
xchg
idivl
and
outsb
ss
pop
xlat
stc
mov
xchg
pop
je
xchg
push
mov
testl
scas
repz
jg
mov
subl
in
insb
scas
xlat
enter
mov
nop
movsb
call
cmc
negl
dec
xchg
jecxz
stos
pop
xchg
mov
cmp
jp
jge
std
shl
xlat
jle
shlb
ja
xor
xchg
mov
adc
jmp
xchg
jg
inc
sub
mov
cmp
cwtl
add
je
jl
mul
jmp
add
push
push
jns
subb
and
push
rorb
pusha
cmpsl
lahf
jmp
sbb
add
mov
sub
cmc
andl
idiv
jmp
pushf
stos
xor
lods
test
imul
adc
dec
movsl
pop
aam
push
jle
mov
or
hlt
iret
ss
pop
pop
lret
mov
mov
idivl
mov
loope
xlat
jbe
dec
mov
rcll
pop
mov
stos
mov
lret
test
stos
mov
movsb
testl
in
sbb
lcall
fld
sbb
fs
das
xchg
daa
pop
or
idiv
pop
lcall
pop
fsubrl
addr16
jle
mov
lret
adc
out
inc
movsb
adc
loopne
imull
mov
add
jno,pt
mov
xchg
add
cmp
xor
xlat
shrl
imul
xchg
pop
push
xlat
or
mov
out
out
enter
int
xchg
mov
fisubrs
divl
jbe
out
movsl
gs
xlat
imul
mov
mov
idivl
push
fnsave
adc
pop
out
notl
shll
xchg
inc
xor
fbld
das
fcomi
xor
loop
or
faddl
add
dec
fistpll
js
and
out
and
imull
jno
leave
inc
ss
fisubrl
repnz
cmpsl
and
mov
and
jne
std
scas
jnp
sbb
out
cmc
jns
jbe
adc
out
imul
inc
rclb
xor
xlat
or
jnp
jbe
daa
mull
pop
insl
shrb
xchg
cmp
jne
jge
je
pop
out
mov
testl
aas
out
pop
mov
icebp
fdiv
cwtl
adc
pop
mull
mov
int3
xor
gs
add
cmpsb
sub
adc
in
testl
add
jns
mov
test
cli
pusha
int3
mov
mov
pop
or
cmc
rcll
stc
pop
mov
idivl
jne
or
lock
movb
test
clc
adc
pusha
xor
int
mov
mov
and
lods
pop
mov
cs
dec
je
in
inc
es
or
ds
add
hlt
mov
test
call
mov
or
lods
testl
insl
shll
sub
mov
sub
jl
sbb
mov
inc
int
lock
mov
mov
sbb
call
ss
imull
add
imull
cmc
cmp
or
lods
notl
push
iret
push
in
mov
shr
pop
pop
testl
cwtl
inc
addr16
cwtl
add
xchg
xchg
popf
jp
lods
test
and
cmp
pop
je
inc
pop
push
jg
adc
pop
lods
jg
test
icebp
mov
mov
les
lcall
xor
push
ja
jbe
inc
out
dec
idivl
fstpl
les
and
mov
testl
pop
insl
pop
sbb
into
outsb
mov
jnp
in
in
notl
fmull
mov
in
testl
adc
mull
push
and
jle
add
shlb
lods
mov
negl
das
fcoml
popf
imull
jp
lea
testl
out
xlat
gs
repnz
push
jbe
jae
sbb
cld
sbb
imull
fidivl
out
mov
cmp
popa
mov
adc
ret
in
pop
mov
out
loope
repz
sub
dec
adc
mov
mov
sub
stos
pop
and
int3
sbb
jmp
test
hlt
mov
push
xor
nop
push
xchg
insl
jae
shrl
shrb
pushf
shrb
mov
pop
out
mov
popf
push
aad
jne
jle
ret
add
cmp
mov
notl
dec
push
imul
pop
mov
jbe
cwtl
xor
mov
push
xor
testl
cltd
add
stos
leave
nop
shrb
test
testl
inc
idivl
out
or
andl
pushf
and
mov
mov
jecxz
fs
mov
lods
push
xor
xlat
inc
out
mov
xchg
cmc
inc
pop
cltd
sbb
push
lods
insb
cmp
mov
test
das
fs
push
aam
pop
xchg
jmp
ljmp
icebp
ficoml
faddp
das
insb
iret
push
fstps
mov
xor
jno
push
hlt
test
imul
add
pop
pop
outsl
loopne
mov
inc
sti
inc
mov
xor
into
ljmp
fdivrl
xor
jmp
aad
add
mov
fwait
enter
ja
push
adc
mov
push
sub
mov
cli
adc
sub
jmp
test
inc
push
sub
mov
lods
inc
and
inc
testb
outsl
sub
jmp
sub
in
mov
mov
arpl
into
cmc
xor
sbb
cmp
mov
sbb
pop
push
lock
aaa
les
xchg
jbe
xchg
cltd
lock
ficoms
mov
or
mov
loope
sahf
lods
mov
test
xchg
xor
mov
and
or
xchg
aad
add
negl
inc
addr16
out
jle
fcoms
xlat
xchg
test
or
xor
push
arpl
pop
cmp
aam
push
mov
and
leave
cli
add
jns
jno
into
push
cwtl
push
sbb
sbb
fsubrs
jp
and
push
jl
mov
test
je
in
mov
in
cmp
notl
cmp
add
js
mov
add
addr16
add
int3
and
scas
repnz
mov
loope
inc
jg
cmpsb
mov
xlat
pop
push
mov
cmp
stc
lods
stos
pop
lods
mov
imul
sbb
cmp
mov
fcomps
scas
add
cmp
lret
idiv
arpl
jb
popf
fldcw
push
or
mov
mov
pop
rcrb
and
mov
in
loope
mov
xchg
mov
adc
jo
mov
hlt
xchg
mov
cmpb
out
fisubl
negb
icebp
mov
push
ja
lret
ficompl
pop
mov
andl
mov
cmp
push
orb
movsl
push
mov
bound
dec
cld
mov
sti
icebp
in
icebp
ljmp
jg
lret
xlat
fs
sbb
dec
bound
dec
sub
push
repz
jge
inc
push
nop
push
fptan
push
ja
pop
push
shrb
pop
mov
idivl
cmpsl
and
mov
cltd
xchg
ss
into
push
nop
in
fadd
mov
movsl
sbb
and
xchg
out
add
push
nop
adc
imull
add
pop
mov
or
out
pop
pop
cs
loop
pop
in
and
mov
enter
pop
out
and
fwait
cmpsb
je
fsubr
xchg
mov
cmp
imul
mov
in
mov
fs
das
sbb
push
pop
mov
mov
add
xor
sarl
sub
ljmp
xchg
pop
fwait
add
cld
fldl
mov
loopne
leave
mov
adc
adc
add
mov
xor
repnz
pop
imul
inc
or
ss
lahf
hlt
repz
jb
inc
insb
adc
and
filds
mov
mov
xchg
push
loope
mov
cmp
orb
jmp
idivl
testl
xchg
jnp
xlat
fistpll
les
mov
push
xchg
test
pop
out
mov
adc
ret
cli
mov
movl
imul
sarl
dec
ror
mov
push
push
and
outsl
sub
inc
jp
jns
in
testl
xor
iret
popf
outsb
mov
gs
mov
mov
shlb
loope
imul
adc
insl
out
mov
clc
xchg
push
testl
daa
ja
xlat
jo
movsb
dec
cli
arpl
sbb
inc
lods
and
movl
inc
insb
adc
mov
lods
les
jmp
je
notl
pop
sbbb
jg
jge
mov
pop
lock
xor
push
test
mov
or
pop
sub
xchg
fmulp
out
mull
sbb
call
xor
cwtl
mov
or
xchg
sbb
jp
cmp
xlat
aaa
mov
imul
fcmovu
push
test
dec
pop
sbb
mov
arpl
sti
xchg
call
and
lods
mull
xchg
test
loopne
add
push
cld
call
jl
es
lcall
and
mov
out
jno
cli
jns
xor
mov
icebp
cmp
divl
test
lods
jmp
pop
imul
mov
ljmp
mov
idivl
xor
testl
call
cmp
jno
shl
dec
pmaddwd
mov
shll
xchg
ja
repz
js
stos
je
cs
out
pushf
in
rcl
repnz
and
stos
pop
mov
sbb
imul
mov
add
jns
shll
int
adc
and
sub
fildll
push
mov
addr16
fbstp
ss
call
add
insb
mov
adc
pop
shl
stos
test
jns
loop
pop
push
jno
stos
adc
push
ja
scas
inc
mull
movb
adc
negl
push
scas
sub
sbb
xlat
mulb
test
dec
movsb
repz
hlt
push
push
inc
lcall
or
test
lret
insb
jle
fdiv
pusha
add
xor
xlat
popf
push
push
or
ja
jns
push
mov
inc
mov
xor
and
imul
arpl
inc
cmp
jae
out
into
sbb
push
gs
and
aaa
stc
xor
push
xchg
notl
push
ss
or
hlt
cmp
and
arpl
cmp
testl
addr16
je
stos
mov
jge
scas
push
div
int3
dec
gs
cmp
pop
pop
popf
xchg
fidivl
idivl
xchg
push
jg
jmp
mov
mov
pusha
into
dec
add
sti
stos
lea
mov
das
enter
aad
lret
insb
rorb
pushf
cltd
out
subb
sbb
fsubrs
mov
out
je
xor
xchg
das
notl
jns
dec
pop
test
xor
out
aaa
pushf
icebp
je
pop
lods
fisttps
loope
push
add
xor
adc
xchg
pushf
xchg
testl
int
pop
neg
xor
rcl
xor
xchg
in
xlat
call
aam
negl
inc
leave
push
pop
cmpsl
push
sbb
jl
lock
xor
insl
cmp
negl
inc
in
testl
sahf
mov
inc
divl
sbb
lock
not
dec
dec
pop
push
test
lret
sbb
jbe
lcall
add
into
fldl
rcl
pusha
mov
mov
pop
loop
inc
jne
push
and
lods
je
stos
pop
out
aam
mov
mov
and
jo
testl
gs
in
xchg
out
repz
rcl
adc
pop
notl
dec
idivl
cmp
jmp
mull
adc
imul
cmpsb
mov
mov
fimull
cmc
rorl
xor
sahf
out
repnz
pop
testb
fstps
xchg
movsb
xchg
pop
xchg
inc
mov
sub
jmp
repz
pop
inc
cmp
fcompl
gs
xor
rcr
pop
lahf
push
sti
dec
idivl
mov
rcl
test
or
push
popa
out
mov
add
insb
push
or
lret
test
negl
frstor
mov
daa
pop
mov
mov
mov
das
lods
cmp
iret
testl
movsl
idiv
mov
flds
clc
arpl
pop
testl
es
enter
mul
sbb
repz
dec
rcr
test
clc
hlt
pop
jl
fcoml
xor
inc
je
xlat
mov
in
fisubrs
sbb
testl
inc
jl
insl
scas
xlat
and
gs
outsl
cmp
popa
test
shlb
xlat
adc
pop
inc
xor
cwtl
imull
xor
addl
jmp
les
lret
movsb
js
popf
xor
jns
push
push
cltd
pop
adc
jo
pop
das
imull
cmpl
into
or
rcr
cmp
xlat
scas
ficoms
add
ss
stos
vpinsrw
test
testb
test
in
sbb
sub
xchg
xor
negl
fiadds
mull
xchg
out
xor
cmp
outsl
xchg
jno
add
nop
mull
sub
mov
pop
testl
mov
push
lret
and
testl
fisttps
imul
lods
jge
inc
cs
gs
test
mov
or
movsb
ljmp
xchg
dec
mov
cli
jecxz
xor
xor
mov
add
push
out
cwtl
popa
sub
sbb
xchg
je
sub
jecxz
cmp
call
adc
push
arpl
cli
xchg
xchg
push
jns
inc
std
out
movsl
sbb
sbb
in
pusha
mov
mul
das
negl
aad
jne
movsb
pop
or
dec
mov
das
rcll
icebp
sbb
loop
popf
mul
jns
push
sub
and
mov
push
testl
inc
dec
divl
in
adc
imul
cmc
sti
cwtl
out
add
neg
lahf
xchg
outsb
jbe
addr16
sbb
ret
test
ss
or
leave
rcr
mov
mov
fst
inc
dec
clc
add
pop
pop
add
xchg
cli
cltd
push
aaa
arpl
push
mov
add
mov
in
xchg
idivl
loopne
notl
imulb
mov
hlt
xchg
aaa
fwait
and
or
pop
stc
xor
adc
cmpb
fidivs
aam
iret
imull
or
mov
cmp
push
aas
out
fildll
adc
iret
hlt
mov
adc
sub
shll
cmp
cmp
nop
mov
jp
test
sub
xchg
imull
xor
daa
xor
mov
out
clc
mov
pop
idivl
push
inc
imulb
aaa
negl
cmp
push
xchg
out
cs
stos
popa
pusha
repz
negl
xbegin
or
sbb
jmp
lahf
jb
push
data16
adc
lret
sbb
testl
mov
mov
jecxz
dec
in
pop
dec
daa
mov
loopne
bound
out
pop
pop
dec
pop
testl
sti
outsl
xchg
xchg
pop
fistpll
fninit
sub
mov
sub
jae
imul
test
dec
adcl
test
leave
cmp
pop
jb
not
or
dec
in
test
not
mov
dec
rcl
negl
in
push
mov
inc
pop
adc
popa
adc
int3
push
and
xchg
sub
fidivl
add
xchg
cmc
xchg
or
xor
xchg
sbb
adc
pop
stos
out
in
pop
out
js
push
sarl
lahf
ficompl
mov
mov
out
std
popa
mov
xor
xchg
aaa
arpl
mov
pushf
addb
iret
jne
adc
sbb
mov
cmp
in
ja
add
adc
xchg
xchg
enter
cld
out
xchg
inc
add
pop
and
out
inc
mov
sbb
jbe
pop
das
mov
mov
iret
mov
enter
insb
dec
push
mov
test
imul
sub
sahf
movsl
jno
test
mov
dec
pop
loop
outsb
push
mov
test
out
inc
sub
lret
jo
or
mov
push
mov
aad
aad
sbb
pop
inc
je
movsl
push
cmp
mull
xorl
inc
lods
loop
out
scas
leave
cld
call
dec
dec
pop
sbb
icebp
std
not
push
push
paddb
pop
adc
and
fcmovnbe
testl
jae
push
xor
mov
push
jmp
mov
imull
pop
cwtl
or
xor
sahf
sbb
cld
shrb
lcall
jns
lock
aam
sub
pop
push
sub
insb
arpl
push
je
rcrb
add
xchg
cmc
fwait
sub
fnstsw
jmp
mov
xchg
mov
pop
idivl
pop
push
dec
divl
xor
push
push
add
push
loope
pop
adc
fcmovnb
in
gs
adc
mov
cs
out
push
imul
in
notl
call
inc
stos
out
loopne
dec
push
fsts
cmp
mov
sub
and
dec
xor
imul
neg
repz
add
sbb
lods
mov
inc
mov
xor
testl
mov
sub
call
out
pop
das
pop
lock
cmp
lea
idivl
pop
push
idivl
jge
stc
pop
addr16
pop
rclb
outsb
call
pop
jp
ljmp
div
dec
mov
je
shll
xchg
iret
mov
xchg
sbb
mull
adc
pop
xlat
xor
add
and
test
push
lahf
imul
cmp
in
jge
notl
sub
insb
iret
testl
xchg
pop
push
pop
sub
stc
clc
jb
push
shlb
cmp
cli
int3
movsl
mov
or
lods
jns
xor
push
pop
cs
adc
in
dec
repz
icebp
pop
les
dec
test
idivl
push
sub
jmp
aam
fwait
imull
add
mov
or
hlt
push
neg
repz
xor
jp
lock
inc
push
js
pop
pushf
mov
imul
xlat
pop
hlt
ljmp
xor
insb
push
pop
and
insl
testl
xorl
les
out
cs
inc
or
mov
push
push
push
sbb
testl
dec
fnstcw
aam
test
and
sub
stc
notl
mov
add
jl
fiaddl
dec
add
pop
fwait
cmp
int3
cli
mov
pushf
int
nop
pop
fs
ja
xlat
test
mov
in
push
paddsw
xchg
xor
and
lea
dec
mov
not
dec
sbb
out
inc
jmp
leave
fnstenv
in
divl
pop
push
pusha
xchg
fwait
mov
stos
out
push
jae
aas
cwtl
ffreep
dec
into
cmpsb
xchg
shlb
cld
mov
imul
mov
push
mov
mov
dec
push
pop
or
fst
es
inc
or
pusha
mov
push
xlat
mov
pop
xlat
inc
ror
js
pop
movsl
pop
sti
repnz
lock
fldt
jmp
mov
repz
loop
out
ret
sub
idivl
cmp
fcompl
nop
and
dec
push
sti
dec
xchg
insl
mov
add
in
movsb
xlat
pop
jnp
sbb
rol
mov
or
jecxz
out
subl
jbe
mov
xchg
pop
test
xor
jo
xor
lret
pop
outsl
idiv
in
push
and
dec
shl
sub
adc
or
notl
mov
imul
cltd
iret
mov
push
enter
xor
pop
aaa
shl
dec
inc
es
sti
fxch
popf
mov
outsb
hlt
xlat
adc
in
add
fldt
add
ret
xchg
xor
test
xor
pop
xchg
fdiv
xor
inc
mov
mov
arpl
or
hlt
out
fidivl
iret
jp
adc
sbbl
rcrb
hlt
bound
idivl
push
and
adc
jmp
sahf
adc
cmp
fdivrl
jno
sub
divl
xchg
hlt
nop
ja
xor
pop
pop
out
lcall
mov
sbb
out
aaa
lds
out
stos
adc
shrl
fidivs
pop
loopne
sbb
addr16
leave
test
jmp
aas
mov
loope
adc
out
scas
mov
movsb
rcrb
fincstp
rol
std
aaa
shrd
and
sbb
rcll
adcl
testl
cmp
push
sahf
inc
aas
mov
idivl
sbb
mov
adc
outsb
iret
out
dec
dec
mov
daa
xchg
add
negl
popf
jae
imull
inc
fnstcw
in
leave
pop
mov
out
inc
dec
out
bound
xchg
mov
notl
repnz
pop
sbb
test
mov
les
mov
jns
divl
in
icebp
mov
push
fcomip
subb
push
negl
insb
inc
jb
inc
clc
sub
leave
adc
in
shr
pushf
fnstsw
jg
pop
add
mov
divl
cmp
not
xchg
test
jmp
xchg
dec
dec
divb
aam
sbb
pop
cmp
data16
adcl
pop
ret
sbb
div
aam
popf
stos
clc
cmp
negl
and
push
notl
in
cmpsl
xchg
popa
sbb
sub
pop
ds
insb
js
pop
insl
jge
mov
jge
adc
sti
or
outsb
jbe
pop
xchg
jmp
icebp
cmp
enter
pop
lfs
ret
cmp
jecxz
sbb
pop
add
aad
movsl
inc
pop
and
imull
push
cmp
int
fsubrs
out
dec
ret
out
cmp
pop
jmp
pop
sbb
dec
imull
adc
xor
lret
add
into
jns
imull
leave
movsb
xrelease
das
aam
sub
test
in
pop
or
xor
jno
or
ror
xchg
mov
mov
jne
push
xchg
xchg
aaa
divl
jge
sub
testl
sbb
lret
imull
fildll
out
rcl
idiv
adc
sarl
pop
inc
adc
fwait
sarb
mov
add
sti
sub
inc
out
lods
cmpsb
add
xchg
or
sbb
leave
imul
cltd
xlat
or
add
pop
leave
inc
test
sub
push
divl
jl
and
fistps
or
cmp
je
adc
out
fldl
mov
pop
shlb
cwtl
testl
or
mov
adc
mov
push
inc
cmpsl
mull
jns
jmp
outsl
xchg
dec
lahf
insb
loop
mov
std
and
rcrb
jnp
xchg
sub
pop
shlb
push
sti
sbb
xchg
icebp
ss
je
imull
xchg
xchg
test
out
mov
je,pt
sahf
xchg
test
aas
lds
notl
mov
sub
sahf
adc
xchg
div
or
fcmovu
sbb
test
negl
mov
ret
adc
out
dec
and
jle
inc
mov
jns
mov
adc
out
es
not
sbb
pop
pop
enter
push
or
mov
pop
addb
je
fcomps
xor
out
mull
ret
xchg
inc
mov
std
dec
and
ss
lods
in
cmp
leave
xlat
and
lahf
cmp
pusha
jmp
setns
or
clc
dec
lahf
testl
into
sub
imull
enter
iret
fdivl
xchg
pop
stc
in
jb
clc
pop
sahf
cld
in
inc
popa
in
push
test
scas
add
mov
inc
and
jmp
mov
aad
iret
test
and
data16
notl
enter
sbb
mov
mov
adcl
xlat
idivl
scas
cli
jno
xchg
fdiv
stos
insb
lods
push
daa
outsl
mov
rorb
jge
xor
das
imull
in
and
js
idivb
adc
xchg
push
jp
pop
js
mov
sub
adc
div
fisttps
test
xchg
cmp
adc
push
ds
ret
xchg
imull
cmpsl
pop
or
push
and
jne
mov
mov
out
adc
divl
outsl
inc
adc
jo
push
out
in
sub
fcomp
pop
inc
imul
adc
out
mov
xchg
rcrb
inc
out
mov
sub
cmpsl
sub
mull
mull
pop
mov
cmc
xor
movsl
adc
loopne
or
imul
mov
lods
fmull
notl
xlat
dec
xchg
jp
lahf
testl
mov
out
jp
sbbl
not
sbb
and
sbb
jmp
icebp
in
popl
jge
dec
ret
loope
loope
mov
lret
xchg
popa
lock
mov
idivl
cmp
notb
cmc
test
mov
xor
lea
mov
sbb
adc
in
cmpl
inc
mov
notl
dec
pop
dec
repnz
mov
int3
orl
and
xchg
cmp
aad
mov
xchg
sbb
daa
xchg
in
jae
dec
jle
pop
icebp
mov
ds
negl
fbld
or
loopne
mov
in
and
add
pop
adcb
mov
in
push
and
testl
in
jbe
and
gs
testl
pop
xchg
xlat
push
loop
es
mov
pop
adc
in
push
inc
or
xchg
idivl
cltd
mov
cwtl
call
push
in
cwtl
lods
imul
cmp
cs
lods
lock
sbb
test
and
and
jmp
and
xchg
jle
not
xchg
add
xchg
stc
test
cmp
out
inc
xor
es
pop
mov
int3
and
iret
cmp
rclb
push
sub
fildl
mov
xchg
and
dec
fs
imul
xchg
idivl
jge
xchg
or
into
inc
cltd
xor
sbb
shlb
dec
scas
push
fdiv
jecxz
inc
outsb
add
pop
push
fimull
xorb
xor
insl
je
test
or
inc
fsubr
testl
push
inc
out
inc
loopne
testl
andb
in
fisubrl
idiv
fistl
movl
inc
fsubrs
mov
jae
sub
loopne
mul
imul
inc
call
lods
push
jmp
mov
mov
loopne
in
clc
popa
pop
pop
mov
ss
and
cli
push
bound
cmp
filds
and
imull
xor
adc
mov
mov
shrl
out
sub
idiv
sbb
bound
movsb
mul
mov
xor
xlat
popf
push
mov
jge
cltd
or
lea
lret
adc
fcoms
cltd
sub
mov
sub
push
shl
mov
adc
xchg
test
mull
dec
push
jns
mov
and
pop
test
xor
mov
xor
punpckhwd
adc
aas
out
xlat
add
arpl
icebp
xor
mov
inc
jb
or
add
ljmp
jle
xchg
andl
push
sub
neg
adcb
arpl
call
mov
pop
neg
iret
push
imul
cli
div
sub
dec
or
call
movsl
mov
notl
dec
xchg
fnstcw
mov
repnz
push
add
imul
xchg
jmp
cs
cmp
testl
pop
add
dec
or
stc
out
shlb
adc
push
lods
sbb
pop
inc
enter
rcll
lds
loope
cli
mov
fs
mov
mov
decb
testl
dec
mov
push
mov
xlat
cmp
push
adc
out
jp
pop
push
adc
cld
jne
xchg
and
mov
sub
pop
les
ds
pop
ja
repz
cli
fldcw
add
es
and
hlt
jno
and
xlat
imul
aaa
out
jge
adc
or
dec
lods
arpl
adc
clc
les
sub
mov
sub
aad
rol
mov
jl
xchg
pop
ss
enter
test
notl
fimuls
fsts
divl
push
inc
jae
leave
mov
push
xor
idivl
xchg
in
add
xor
test
sbb
push
test
add
xlat
adc
mov
sbb
int
outsl
push
mov
std
imull
cmp
mov
or
lds
mov
xor
and
out
out
mov
stos
xlat
sbb
mov
or
sbb
push
out
scas
popa
push
push
inc
negl
sbb
fst
mov
xor
xchg
sets
add
ret
pop
xor
icebp
ljmp
lods
mov
mul
dec
adc
or
insb
jg
and
adc
idivl
sarb
push
and
popl
neg
hlt
sub
sbb
not
outsl
movl
ss
sub
sbb
mov
lret
nop
sub
push
cmp
lret
imul
cmc
out
sbb
mov
test
xchg
mov
lahf
scas
xor
xor
add
push
std
ss
cmpsb
in
fldt
mov
mov
mov
mov
stos
adc
push
jb
cmpsl
js
jecxz
idivl
mov
je
ss
test
xchg
div
mov
pop
push
or
dec
daa
push
testl
insl
add
test
pop
push
xor
data16
jbe
xchg
dec
mov
insb
jns
mull
adc
fists
lds
mov
xchg
mov
neg
jmp
call
aas
negl
fstpl
pushf
iret
je
adc
ss
outsb
dec
mov
sahf
mov
pop
iret
xchg
pop
testl
lret
andb
cmpsl
jmp
je
cmpsl
insl
insb
sarb
test
mov
insb
dec
adc
xlat
test
inc
sti
sbb
ljmp
lea
repnz
iret
aaa
jg
negl
movsl
dec
inc
negl
rclb
cmp
mov
hlt
jne
jmp
scas
negl
dec
cmpsb
push
cmp
cwtl
adc
inc
hlt
cli
push
dec
mov
xor
pop
mov
mov
rcll
mov
jp
testl
aaa
jne
add
or
lock
testl
push
std
push
outsb
or
mov
push
stc
dec
loope
notl
idivb
push
add
loopne
jp
imul
and
sbb
maskmovq
mull
repz
pop
out
mov
inc
pushf
repnz
lcall
dec
movb
xor
dec
dec
add
jge
ror
js
stos
push
or
iret
shrl
pop
pop
xor
out
pusha
sbb
sti
xchg
pop
cmp
xor
aam
out
test
xchg
add
cwtl
mov
mull
mov
or
mull
loopne
in
pop
shr
or
mov
mov
fmull
jge
arpl
mov
jb
enter
inc
adc
xchg
fwait
lahf
sahf
out
mov
xchg
pop
jmp
ret
pop
lock
iret
mov
js
adc
push
jge
popf
out
iret
std
add
xlat
add
lods
fisubs
sbb
rcll
or
call
jno
jecxz
enter
inc
notl
hlt
cmp
pop
mov
pop
mov
leave
inc
loope
out
outsb
test
cmp
testl
xchg
adc
imull
mov
sbb
inc
aam
mov
shl
pushl
pop
push
clc
sub
or
imul
lcall
ljmp
mov
dec
jne
test
sarl
sub
negl
repnz
pop
out
push
sub
sti
pop
jecxz
cmp
mov
clc
or
ret
inc
or
daa
xchg
sub
stos
gs
rcrl
lcall
decb
jl
adc
ljmp
ret
rcrl
pusha
mov
test
pop
shrl
mov
adc
testl
roll
jo
mov
movsb
mov
and
jne
push
push
testl
jae
das
lcall
push
cmp
stos
sbb
addl
xor
jne
jo
lret
xlat
negl
imul
jmp
maskmovq
divl
pop
lahf
push
mov
dec
div
mov
jmp
notl
pop
cmp
lods
pop
xchg
in
mov
lret
fisttps
notl
adcb
hlt
push
sbb
in
push
mov
cmp
sbbb
xchg
pushf
sbb
dec
dec
mov
push
push
sbb
xchg
or
add
mov
hlt
dec
push
icebp
negl
jle
icebp
jno
in
xlat
adc
add
push
mov
leave
not
dec
iret
xchg
cs
jmp
ss
aam
xchg
ljmp
notl
mov
mull
or
adc
test
pop
sti
mov
arpl
ror
xor
jge
not
mov
jg
pusha
jmp
divl
rcl
jmp
push
in
loop
fmull
cmpsb
je
pop
ja
das
cmc
out
fnstenv
xor
loop
pop
pop
and
dec
cmc
mov
rep
inc
fiadds
sbb
jg
insb
fnstsw
jp
push
jl
out
sbb
arpl
bound
sbb
ja
not
loope
xchg
test
cmp
push
pop
lods
popa
ret
inc
sahf
dec
jmp
imull
daa
add
divl
mov
push
fcomip
hlt
fcmovne
push
neg
mov
loope
testl
cmc
inc
xlat
test
popa
pop
bound
repz
dec
int
rcrb
and
and
notl
and
mov
add
mov
mov
jbe
dec
add
push
test
jo
xchg
xor
xchg
aam
in
icebp
out
stos
testl
sbb
add
add
fwait
stos
imull
mov
fdiv
lea
test
sub
sarb
xlat
add
xchg
fildl
arpl
push
push
pop
mov
mull
cmc
fyl2x
sub
pop
in
cmp
lds
loope
push
in
add
lret
mull
mov
push
dec
insl
push
ja
pusha
imul
push
lret
mov
outsl
testl
fidivs
hlt
dec
inc
push
call
lock
cmp
push
xchg
out
pop
adc
and
mull
testl
int
push
and
inc
pop
fbld
xchg
lods
push
mov
leave
add
imul
jg
pop
test
cmp
orb
lock
jmp
jge
adc
imull
cld
cmp
cmpsb
push
loop
call
pop
fcompp
sti
mov
mov
push
out
addr16
push
and
mov
or
cli
cmp
add
fcoml
and
pop
sub
mov
push
mov
das
add
push
jno
pop
and
push
jbe
adc
push
cli
std
int
or
mov
idivl
mov
clc
mov
push
mov
cld
mov
rorl
cmpsb
mov
cmp
adc
xor
divl
negb
push
push
fistpl
push
add
stc
repz
mov
mov
cwtl
iret
inc
push
adc
inc
int
xchg
cwtl
rorl
add
fidivs
fimull
inc
sbb
icebp
xlat
add
in
loopne
jne
jg
dec
imulb
lret
fldenv
xor
ss
pop
mov
mov
xor
xchg
push
lock
pop
into
out
pop
hlt
jl
mov
ret
daa
fimull
bound
lods
xor
hlt
adc
cmpsb
pop
add
xchg
dec
mov
or
sub
loopne
mov
loopne
jmp
roll
hlt
pop
loop
lods
mov
je
pop
repnz
fwait
ret
sub
stos
fdivrl
int3
sub
in
or
std
inc
mov
xchg
jg
bound
sbb
in
mov
in
repz
fdiv
sbb
sbb
stos
xlat
mov
mov
fildll
sbb
sub
jns
cli
dec
mov
mov
adc
add
inc
ja
push
out
and
pop
xchg
sub
lcall
add
push
ret
mov
cmp
add
cmp
bound
add
lods
push
shr
and
popf
and
movsb
cs
mov
mov
rolb
add
repz
mov
adcb
cmp
test
shrl
int
aaa
cmpsb
fnclex
pop
mov
rcrl
and
cmc
mov
pop
loopne
pusha
arpl
pusha
mov
insl
pop
jae
mov
jb
adc
and
sub
test
xchg
je
sbb
filds
aas
jmp
cltd
nop
xchg
cli
testl
add
into
stc
dec
push
mov
lahf
divl
dec
or
sub
notb
imull
push
adc
jge
rclb
inc
scas
loopne
xchg
lret
divl
shl
sbb
fstl
pop
shufps
aam
sbb
jg
test
int3
or
or
movsl
push
mov
inc
mov
mov
sbb
sbb
idiv
cwtl
push
cmovge
cltd
mov
pop
rorl
imul
clc
xor
mull
push
adc
imull
and
hlt
fcomps
xor
repnz
inc
jbe
daa
fucomip
and
in
shrb
out
pusha
cmp
adc
test
mov
pop
loope
repz
mov
xchg
mov
mov
cmp
adc
out
data16
repz
sub
in
clc
les
dec
mov
or
shl
aam
outsl
mov
negl
and
push
testl
scas
push
pop
fildll
or
xchg
sbb
pop
stos
jle
movsl
shl
xchg
loope
pop
div
ds
push
push
insb
imul
pop
push
add
out
jl
add
nop
xchg
jp
and
sub
cmp
divw
adc
test
mov
xor
pop
pop
jno
int
and
pop
mov
push
mov
sub
inc
neg
pusha
sahf
ljmp
jne,pt
and
sbb
jle
add
xchg
jg
push
loope
cmp
test
push
out
cmp
add
jle
aad
and
xor
rol
jb
mul
jmp
je
dec
imull
das
lods
mov
pop
addr16
ss
and
notl
in
or
lods
and
xchg
mov
shr
sub
stos
add
fisubs
mov
dec
negl
mov
lods
pop
stos
inc
mov
pop
inc
loope
sub
call
or
sub
iret
scas
aad
jmp
icebp
pusha
arpl
xor
mov
add
repz
mov
ds
call
dec
loop
jne
mov
mov
mov
enter
pop
jo
pushf
testl
mull
cmpsb
iret
negl
lcall
pop
mov
sbb
xor
mov
pop
scas
test
outsl
js
mov
shrb
dec
addl
gs
push
add
clc
and
or
dec
dec
jmp
negl
sbb
hlt
push
add
or
add
lahf
mov
test
sbb
xor
bound
jbe
pop
mov
sbb
or
decb
es
negl
mov
inc
sti
cmc
mov
out
inc
sbb
or
push
pop
push
jecxz
push
xchg
gs
repnz
not
movsb
pop
dec
ljmp
xor
cmp
imul
test
cmp
std
sub
nop
mov
pop
lahf
imul
shlb
ljmp
dec
in
xchg
leave
mov
mov
push
repnz
dec
lcall
clc
pop
outsl
fldenv
push
cld
sub
out
mov
jo
in
mull
es
into
xor
mull
fwait
call
xchg
imull
ss
sub
or
push
cli
pop
cs
xlat
lods
mov
fcomps
shrb
push
cltd
divl
lods
test
mull
mov
pop
jne
push
fcoml
xchg
fistpll
lock
cmpsl
je
dec
aas
hlt
mov
mov
std
or
insl
mov
sbb
ret
ljmp
add
mov
and
xor
sub
jmp
lahf
sarl
push
testl
and
pop
notl
hlt
mov
js
jb
daa
inc
xchg
clc
ss
sbb
fwait
das
xchg
mov
int
movsb
xchg
mov
es
out
cltd
jl
sub
out
out
xor
out
add
xor
or
aad
addr16
lods
jp
cs
dec
icebp
cwtl
xchg
lret
movsl
out
xlat
shlb
sbb
fstps
adc
jecxz
mov
testl
fbld
lods
fildl
test
adc
sub
sahf
mov
adc
rcrl
and
or
movsl
add
lods
adc
push
mov
fldt
rcrb
sbb
repz
imul
popf
adc
inc
adc
jmp
cltd
xor
xlat
lcall
jno
sbb
push
inc
out
mov
fisubl
xor
jne
ja
into
pop
xor
lock
stos
cs
jae
or
jb
cmpsl
or
js
loopne
xchg
lock
xchg
das
mov
mov
dec
faddl
sbb
in
ret
mov
ljmp
mov
push
out
in
test
mov
mov
mov
in
sub
mov
hlt
inc
add
jmp
repnz
lea
ljmp
in
mov
lods
and
aaa
push
insb
mov
sbb
lods
add
incl
or
scas
jo
cwtl
fidivs
jno
push
fst
dec
out
xchg
movsb
cmp
mov
inc
fimull
pop
fdivrs
pop
stc
lods
sbb
xchg
push
mov
cmp
icebp
cltd
and
clc
sbb
and
push
and
insl
cltd
iret
lock
jle
mov
cltd
pushf
push
lcall
inc
or
mov
scas
mov
xor
negb
ljmp
push
dec
jno
icebp
or
sbb
call
les
mov
jmp
lret
fistpl
xchg
xchg
mov
cmpsb
ret
sub
lcall
fidivl
clc
das
ljmp
mov
cmpsl
je
cmp
inc
lea
or
push
add
mov
ja
std
push
pop
or
pop
int3
stos
add
inc
popa
mov
testb
fimull
push
add
out
adc
cmp
inc
mov
pop
dec
cwtl
pop
outsb
outsl
test
push
and
inc
loopne
aas
and
mov
or
out
jne
adc
add
out
clc
das
ljmp
not
setg
jns
inc
inc
xor
data16
gs
je
out
add
js
sbb
fldenv
mov
out
mov
pop
mov
sub
mov
cmp
push
insl
fcmove
xchg
pop
shll
inc
sub
enter
icebp
xchg
leave
dec
decb
jne
stos
fisttps
ds
mov
stc
iret
scas
push
loop
ret
stc
aas
iret
mov
jle
movsb
jg
push
in
or
sbb
jne
adc
jge
fwait
jge
iret
hlt
outsl
jbe
xor
sub
inc
je
btr
mov
insl
iret
or
xor
icebp
xlat
je
std
insl
mov
imul
test
mov
sub
sti
cmc
incl
jnp
out
aas
xor
outsl
mov
pop
cmp
mov
and
loope
inc
sbb
jge
cltd
js
and
or
xchg
out
imul
divb
mov
fs
sbb
sub
out
insl
in
xchg
stos
aad
xor
mov
bound
sbb
xchg
cld
pusha
pop
adc
pop
xchg
mov
ja
fisubl
out
repz
rcll
stc
inc
mov
cmpsl
scas
pusha
nop
add
mov
add
sub
aaa
push
dec
and
addl
pop
sarl
jne
xchg
pushf
loope
test
mov
push
ret
and
fsub
mov
jecxz
call
andl
xchg
arpl
mov
or
nop
cmp
mull
lcall
iret
cmp
inc
int
mov
add
xchg
mov
movsl
testl
gs
enter
push
cmpsl
xchg
adc
call
mov
push
adc
negl
jmp
mov
cmpsl
loopne
jns
mull
out
mov
pop
dec
mov
push
mov
push
push
sbb
xchg
sti
neg
push
push
daa
sbb
icebp
test
and
cmc
loope
cmpsb
inc
sbb
adc
ret
ljmp
xor
decb
mov
jl
loop
clc
cltd
aaa
maxps
push
stos
pop
test
mov
fcmovne
idivl
pusha
clc
and
pop
push
dec
imul
popf
in
lcall
add
jbe
jb
xchg
arpl
not
daa
stos
mov
dec
ret
idivl
cs
dec
call
cmpb
fcmovne
fadds
aas
shlb
sub
testl
ud2
testl
mov
cmc
inc
sarl
sbb
mov
out
mov
dec
and
movsb
mov
push
jl
or
jp
icebp
in
enter
idiv
and
push
imul
xchg
add
xchg
or
xchg
movl
sub
fidivrs
ret
cmp
inc
cmpsb
or
pop
fs
shl
std
aad
and
not
aam
push
add
jecxz
or
dec
dec
mov
mov
jns
xchg
popa
pop
mov
negb
and
movsb
imull
pop
icebp
jae
dec
es
fwait
hlt
jnp
push
jp
notl
mov
test
in
xchg
mov
imul
fcompl
jne
sbb
out
mull
mov
aad
jecxz
mov
mov
icebp
cs
push
out
idivl
mov
xchg
xchg
mov
pop
aam
nop
out
mov
divl
push
aad
and
pop
testl
mull
pop
sub
sub
jae
f2xm1
testl
xchg
sub
dec
ret
pop
testl
js
xchg
notl
subl
jne
or
fmull
pop
sbb
loope
mov
sbb
in
or
sbb
push
das
test
or
imull
xor
jecxz
inc
je
movsb
fwait
out
mov
into
jno
testl
pushf
fists
ss
das
add
out
lods
pop
adc
push
in
mull
pop
pop
cmpl
pusha
cmp
sbb
icebp
sbb
jo
mov
mov
aas
sbb
idivl
icebp
lret
jnp
fbstp
mov
out
cltd
adc
cmp
imul
nop
sub
fwait
xlat
das
pop
and
std
stc
idivl
pop
popa
xchg
cmp
push
ret
fidivl
aad
xchg
mov
jecxz
aas
sbb
fstl
push
enter
pop
in
dec
je
popa
push
push
add
int3
pop
scas
imull
cmp
lea
mull
mov
pop
fiadds
xor
xor
adc
lret
xchg
push
push
ficoml
mov
test
xchg
push
divl
mov
lock
sbb
out
movsl
add
jne
loopne
mov
call
sub
dec
mov
out
cli
out
xchg
sbb
nop
pusha
ficoml
cmp
testl
fs
test
je
scas
fcompl
fcomp
cwtl
test
add
push
mov
pop
cmp
lahf
imull
leave
dec
out
cld
imul
mov
fdivl
jae
loopne
inc
xchg
mov
sub
sti
divl
sbb
imull
or
testl
lea
test
cmp
sbb
testl
sub
test
sbbb
mov
div
test
ds
je
mov
cmp
dec
jne
jl
sbb
fnstcw
cltd
sub
outsb
mov
adc
sahf
add
sti
lret
popa
xlat
outsb
push
loop
pop
rcrb
mov
mov
out
sbb
insl
leave
pop
pop
pushf
push
fstps
mov
sahf
div
lcall
out
cli
rclb
adc
loop
xor
clc
test
inc
xchg
outsl
testl
jle
xor
int
push
cmc
insb
js
adc
aaa
pop
mov
mov
xor
push
pop
stos
or
neg
aas
imul
in
test
mov
mov
xchg
add
push
mov
push
xchg
mov
fisubl
jmp
cmp
ja
mov
loopne
popa
jb
mov
cltd
je
cmpsb
cmpsl
fs
imul
mov
icebp
mov
scas
stos
jae
fcoml
xlat
mov
clc
inc
fcom
add
out
lcall
dec
or
in
popa
inc
mov
pop
push
push
adc
xchg
or
in
inc
insl
jmp
insb
add
xchg
idivb
mov
xor
test
xchg
mov
pop
testl
div
mov
mov
sbb
sub
mov
pop
out
mov
ret
sub
int3
or
aas
test
shlb
loopne
sbb
sbb
inc
cwtl
jl
xlat
enter
iret
push
cli
pop
add
inc
out
sbb
mov
jns
notl
repnz
adc
out
icebp
add
testl
repz
xorl
pop
ret
imul
adc
filds
addr16
xchg
lods
imulb
jge
dec
or
cwtl
add
push
dec
mov
testl
sbb
sub
mov
jp
insl
nop
outsb
ljmp
ds
push
sub
xorb
out
hlt
sub
adc
push
shr
and
or
xchg
push
imul
cmp
xchg
cltd
or
jmp
add
push
adc
mov
mov
into
out
cmpsw
xchg
divl
pop
adc
xor
or
negl
dec
mul
sbb
rcrl
rolb
xor
pop
dec
cmpsl
jb
shl
sub
fcomps
pop
lret
mov
xchg
pop
out
mov
adc
aad
cltd
sahf
inc
stos
and
jno
fnstenv
inc
pop
negb
pop
scas
divl
cmpb
nop
dec
xchg
daa
pop
js
push
int
mov
hlt
into
mov
in
gs
adc
sub
daa
pop
dec
or
negl
icebp
lcall
jbe
dec
fnstcw
inc
xchg
clc
negl
inc
nop
hlt
neg
jmp
lock
pop
push
leave
pop
mov
std
push
mov
popl
pop
xchg
in
mov
mov
daa
push
push
icebp
negl
pop
mov
sub
idivl
add
ljmp
into
sti
pop
jnp
cmpsb
xchg
jns
dec
mov
jecxz
mov
add
cwtl
push
testl
push
mov
hlt
xchg
lods
xor
in
in
sarb
negl
mov
fmuls
dec
or
mov
imull
pop
jnp
not
ja
iret
sub
adcb
fistps
aam
clc
imul
lret
xor
nop
popf
jns
jo
shlb
inc
pop
push
add
mov
cli
sbbl
xlat
sahf
scas
lahf
add
sub
jmp
js
mov
push
sbb
dec
popa
mov
jge
pop
push
cmpsb
test
fsubrp
scas
push
movsl
or
clc
aaa
jl
jns
cmp
movsb
subb
mull
das
out
sti
cwtl
mul
clc
scas
mov
testl
fidivrs
ss
mov
lcall
sbb
cltd
aas
xchg
push
mov
dec
mov
incl
pop
negl
leave
daa
dec
pop
xor
js
and
push
int3
xchg
icebp
mov
xchg
adc
out
sub
jl
mov
dec
mov
xor
nop
imull
fsubp
adcl
js
icebp
cmp
not
pop
repnz
aam
insb
divl
cwtl
jle
fnstcw
adc
divl
mov
aas
xor
push
out
hlt
out
loop
in
mov
mov
mov
out
sti
fwait
sbb
iret
int3
add
popl
jmp
repnz
jno
fisttps
dec
xor
out
cmpsb
mov
push
out
cmpb
in
cmp
xchg
imul
cltd
pusha
cmp
sub
fisubs
pop
test
xlat
fildl
jno
jae
lret
xorl
outsb
mov
xlat
fs
push
xchg
mov
hlt
movb
mov
lods
js
pop
out
ljmp
cld
sbb
loop
cmp
cmp
jb
leave
jnp
mov
sbb
mov
xor
xchg
ljmp
repz
fcmovnbe
fdivr
xor
leave
xchg
add
scas
jo
or
jl
push
pop
and
adc
daa
cmpl
jbe
push
ret
mov
adc
out
loop
xlat
fistpll
cmp
xchg
test
jge
or
add
inc
mul
jle
xchg
aaa
aas
mov
push
lods
pop
imul
gs
sbb
insl
xchg
or
es
or
jl
fisubrl
mov
hlt
clc
fucomp
insb
xchg
in
push
xor
cmp
insl
in
fsubp
lods
lret
stos
in
and
and
lods
jno
fildll
loopne
divl
add
loope
xlat
test
jbe
mov
inc
pop
cmc
mov
imul
pusha
mov
xor
push
fwait
dec
mov
notl
lods
jns
out
fcomip
das
xor
lret
stos
mov
xchg
pop
cmpsb
out
hlt
aam
pop
xchg
lret
popf
and
mov
notl
sub
xor
scas
int3
mov
test
enter
mov
add
pop
xor
xlat
jecxz
test
xchg
xchg
fisttps
mov
pop
jle
and
daa
test
mov
ss
adcb
sub
stos
xor
add
repnz
jmp
sub
inc
push
push
sbb
lret
xor
dec
jecxz
mov
testl
push
and
push
mov
jnp
icebp
or
xchg
jmp
aaa
jo
push
pop
add
rclb
fcoml
push
fcomi
es
pop
lahf
inc
mov
test
orl
cmp
ljmp
mov
xchg
scas
rorl
or
pop
inc
jecxz
add
cmpsl
jno
sti
adc
and
das
cmc
jmp
lcall
add
cmp
dec
ljmp
stos
insl
lock
lahf
xlat
jl
notb
icebp
inc
div
scas
or
sub
inc
bound
loope
arpl
mov
test
ss
cmp
repnz
testl
sti
out
and
repz
push
loope
xchg
rorl
mul
or
push
imul
mov
leave
idivl
add
push
sbb
pop
xchg
xlat
pop
call
xchg
mov
dec
mov
ss
daa
pop
fisttpl
ret
rcrb
in
mov
testl
int
out
test
shll
mov
outsb
movsl
sti
idivl
sub
xchg
inc
fildll
sbb
in
or
pop
mull
insb
add
ja
pop
sub
mov
out
lock
test
and
pop
fidivl
or
mov
cs
mov
ret
push
xor
add
lret
div
scas
addr16
adc
dec
pop
or
pushf
out
loopne
xlat
movsl
test
mov
mov
jmp
stos
mov
pop
adc
icebp
mov
xor
push
add
ror
and
cmc
add
jae
mov
hlt
fincstp
adc
rolb
sub
out
and
add
mov
xchg
shll
mov
push
daa
lea
fstps
ret
mov
cwtl
push
cmpsb
sahf
rcr
mov
cmc
idivl
gs
xchg
sbb
mov
idivl
mov
negl
cli
mov
out
mov
cs
stos
adc
pop
pusha
notl
sbb
repz
ss
lret
mov
out
xlat
adc
pop
sub
mov
cmpsl
xor
repz
daa
cmpsb
test
sub
or
in
pushf
fists
ss
notl
add
fsubs
push
mov
fistps
pop
rolb
inc
dec
syscall
pushf
xor
push
lock
pop
scas
xchg
sbb
jle
out
lods
mov
and
or
sbb
imull
and
xor
jmp
mov
cmc
test
rcrl
testl
jns
pop
fnsave
not
cs
icebp
sub
arpl
and
inc
in
fimull
in
idivl
cmc
cs
mov
mov
fldcw
add
mov
loopne
dec
pop
cmpb
xor
xlat
pop
lahf
iret
pop
fisttpl
in
jb
or
subb
push
clc
jnp
mov
imul
xor
rorl
mov
jne
sbbl
and
mov
jl
in
js
les
xchg
es
xchg
adc
ret
out
lods
fwait
lahf
out
add
mull
add
sub
rcr
testb
pop
mov
push
loop
repnz
pop
push
das
or
out
aam
and
int3
cmpsb
mov
fstl
inc
jp
call
in
inc
in
testl
lods
jmp
lock
mov
aas
aad
xor
jb
xchg
xor
and
sbb
push
pop
lock
testl
cwtl
jbe
pop
add
jmp
jae
outsl
xchg
add
stc
xor
xor
out
pop
sti
push
adc
pop
push
jg
add
add
ret
and
mov
mov
xorl
loope
mov
inc
dec
in
pop
xor
ss
shlb
shll
stos
roll
xor
adc
mov
inc
scas
lods
sub
insb
test
sub
sub
cmp
add
sbb
push
mov
out
ror
xor
sub
negl
in
outsb
mov
mov
xchg
dec
push
fiaddl
ret
lods
xchg
in
xlat
rcr
cli
frstor
fsubl
sbb
xchg
pop
andl
push
adc
lret
lock
cmpb
fstl
lds
loopne
js
orb
das
out
dec
xor
mov
imul
cmp
inc
mov
mov
pop
jp
mov
divl
sub
push
clc
in
lret
in
shl
lock
mov
in
divl
mov
xchg
orb
icebp
test
or
pusha
cmp
imull
pop
xchg
testl
popa
and
xlat
xchg
ss
in
fidivs
icebp
push
sub
or
notb
pop
jbe
mov
inc
insb
fcomi
popa
sbb
in
xor
jbe
mov
mov
mov
jl
out
dec
test
cmp
nop
xor
imul
iret
int
hlt
idiv
pop
mov
push
aad
adc
push
pop
into
mul
sbb
add
ja
push
imull
daa
out
dec
adc
idivl
add
lcall
test
cmp
icebp
mov
mov
iret
sub
fs
mov
pop
jp
nop
pop
push
xchg
xchg
sbb
xchg
sti
pop
mov
mov
addr16
inc
sahf
adc
xor
mov
test
push
cld
push
sbb
iret
pushf
js
push
pop
mov
pop
mov
int3
push
bswap
lahf
mov
sub
push
xchg
xor
adc
dec
pop
imul
add
pop
ljmp
xlat
je
pop
test
lgs
mov
sbb
inc
pusha
sub
idivl
stc
loope
leave
lahf
mov
stos
testl
das
inc
idivl
dec
call
sbb
movsl
push
cli
fnsave
ficoml
sbb
imul
fnstcw
mov
cmp
divl
les
imul
push
mov
out
sbb
fildl
divl
mov
testl
ret
stos
mov
jl
data16
imul
inc
loope
inc
xor
and
aaa
pop
cli
mov
adc
xchg
or
push
sti
adc
fs
les
stc
divl
sbb
popf
mov
popl
je
ja
test
ficompl
testl
xor
mov
out
inc
jmp
push
in
xchg
push
subl
fwait
int
jb
mov
mull
sbb
cmp
cmp
pop
outsb
mov
ficoml
divl
outsb
mov
jns
dec
nop
sub
test
mov
div
mov
shll
ss
ljmp
push
inc
sub
es
add
bound
ljmp
dec
or
xor
push
call
pop
sub
push
cwtl
out
shlb
mov
notl
push
mov
cmp
push
mov
cwtl
jo
loopne
test
ss
push
and
bound
pop
xchg
inc
add
xchg
inc
scas
adc
xlat
std
jb
lock
sub
not
jg
cmpsb
pushf
mov
xor
lahf
mov
xchg
mov
mov
pop
cmp
cmp
pop
and
cmp
cld
insl
inc
das
lods
mov
out
inc
xchg
xor
repz
data16
test
adc
aam
fwait
cs
push
out
jo
stos
mull
pop
dec
inc
mull
add
dec
fwait
imull
and
xchg
mov
push
fadds
push
and
out
and
inc
repz
divl
fs
fcmove
nop
xchg
xor
mul
out
das
dec
and
negl
jno
adc
js
jo
mov
dec
cld
cltd
ja
push
jge
inc
pop
es
cwtl
and
je
addr16
lock
mov
cmc
mov
lret
xor
sbb
testl
pop
xor
add
mov
das
pop
lds
or
jl
notl
in
dec
outsb
fnstcw
push
nop
adc
mov
xlat
mov
cmp
mov
imul
std
loop
mov
jl
notl
mov
xchg
in
pop
int
mov
pop
in
shll
outsb
xor
mov
frstor
popf
or
jecxz
addb
and
jle
lods
in
inc
fists
and
sbb
xchg
idivl
adc
sbb
imull
repnz
cmpsl
idiv
jle
pop
mov
xor
jge
pop
fcomps
adc
fisttps
pushf
add
insl
jmp
mov
fmull
enter
sub
sub
xchg
ljmp
mov
in
repz
xchg
repnz
sub
cwtl
lods
xchg
fldl2e
or
ss
aas
je
jno
push
xchg
sbb
in
fisubrl
pop
ljmp
mov
jns
fnstcw
jb
int
hlt
push
xor
inc
dec
xchg
mov
and
imul
dec
mov
sub
pop
int3
mov
clc
mov
lock
out
into
out
push
and
push
fdiv
aaa
stos
clc
pop
mov
jne
jae
divb
xchg
lds
out
icebp
inc
mov
sub
enter
clc
test
bound
xchg
adc
and
dec
push
pop
ljmp
dec
sub
sti
cmp
sub
gs
ja
sarl
sbb
out
fcomps
jbe
xchg
cmp
mov
add
outsl
sub
mov
dec
mov
js
jbe
mov
adc
sbb
fmuls
fidivrs
je
into
cwtl
out
push
mov
in
popa
out
rclb
xor
xchg
idivl
jle
icebp
mov
cmpsb
fidivl
sub
push
call
mov
push
xor
mov
jae
sbb
aad
sbb
enter
fnstsw
lahf
das
jmp
pusha
inc
fidivrs
jae
aaa
shrb
add
rorb
loop
mov
inc
jbe
fchs
jb
int
fisubs
pcmpeqd
cmc
test
es
cmp
ja
jmp
adcb
dec
out
dec
xchg
stc
dec
lcall
add
mov
sahf
dec
add
movsl
push
ljmp
addr16
stc
out
jno
ficomps
jo
loopne
xchg
mov
pop
sub
mov
pop
dec
pop
test
add
add
inc
inc
or
cmp
icebp
sub
ljmp
mov
in
mov
inc
and
push
or
xchg
mov
xor
js
xor
xchg
push
aad
inc
xchg
jne
fadds
cmpsl
mov
rcll
jo
scas
mov
xchg
push
pop
push
enter
xchg
mulb
in
mov
jno
dec
lret
test
or
lahf
in
out
or
add
jg
cltd
jp
ja
lcall
out
dec
sub
mov
add
mov
arpl
adc
loope
mov
pusha
call
lahf
stc
inc
cmpsl
mov
sbbb
adc
in
mov
shl
clc
repnz
scas
xchg
add
fisubl
sbb
xor
ret
xlat
lret
loopne
mov
push
pop
sub
fisttpll
jg
lcall
or
cmc
ja
in
xchg
test
push
in
push
repz
sbb
push
pop
mov
es
mov
pusha
pushf
test
push
dec
cmp
out
ret
xchg
cltd
mov
lock
shrl
sub
std
add
idivl
inc
call
ss
cmp
ss
mov
iret
fdiv
add
lret
call
xchg
idivl
jae
test
push
jns
add
adc
loopne
sub
fistps
rcl
pop
fistl
sbb
mov
adc
xchg
subb
idivl
cmp
addr16
testl
jo
aaa
out
mov
xchg
incb
test
movsb
lds
inc
testl
negl
xchg
filds
testl
xchg
mull
adc
ret
sub
fistpll
push
mov
hlt
sbb
push
enter
int3
xor
dec
mov
enter
out
fcomip
pop
hlt
lea
loop
mov
insl
imul
sti
mov
aas
add
out
lahf
push
xchg
out
mov
stc
mov
sbb
fsubr
adc
mov
scas
pop
loope
je
imul
mov
clc
lods
pop
negb
xor
mov
fwait
mov
pushl
aad
out
bound
ss
push
cs
hlt
je
mov
mull
pop
test
inc
inc
jmp
fildl
jge
xchg
mov
mov
pop
repnz
dec
and
aam
sbb
fcmove
lock
and
inc
idivl
xchg
mov
mov
mov
sub
adc
xor
xchg
idivl
out
sbb
cld
cmc
cli
mov
ret
enter
ret
scas
mov
add
idivl
jge
cmp
sbb
out
testl
mov
dec
subl
mov
pushl
stos
mov
sbb
nop
notl
jo
mov
pushf
imull
xchg
call
rcl
movsb
dec
xlat
addb
pop
push
shlb
jg
mov
jmp
or
adc
xchg
xchg
mul
out
jl
dec
outsb
adc
sub
add
jnp
mov
dec
repz
xor
insl
neg
insb
mov
out
adc
test
idivb
inc
test
jae
push
std
aam
sbb
pushf
and
test
push
xor
jnp
int3
mov
ss
push
inc
fcmovnu
jle
and
push
cmp
shl
je
xchg
ljmp
lea
xchg
pop
in
ficomps
push
mov
and
cmp
popf
mov
out
pop
mov
and
fdivrl
lods
mov
sbb
je
pop
mov
ss
scas
mov
testl
adc
dec
je
push
call
xor
fnstenv
div
dec
adc
mov
lcall
xchg
in
pop
jp
shrl
sbb
das
jae
lcall
out
flds
test
adc
lahf
xor
inc
sbb
inc
mov
fstpl
push
leave
movsb
dec
popa
inc
imul
or
xor
out
frstor
xchg
mov
into
jbe
out
xor
jge
loope
push
dec
imul
push
pop
mov
xchg
push
dec
add
dec
insl
testl
xchg
stc
divl
aaa
cmp
mov
test
xor
mov
notl
xor
xlat
fs
jns
icebp
clc
pop
pop
xchg
test
gs
pop
fmuls
in
pop
divl
mov
neg
sub
pop
dec
jo
mov
movsb
add
mov
push
push
fs
and
fnstsw
mov
in
testl
movsl
sub
push
cwtl
aas
mov
dec
imull
cmpsl
fsts
inc
fisttps
cli
divl
les
sahf
adc
lahf
call
imull
scas
andl
cwtl
adc
xor
dec
inc
xchg
mov
std
xor
mov
pushf
cli
testl
push
push
xorb
inc
out
je
fidivs
lods
jmp
loopne
rcll
addr16
mov
pop
aad
inc
or
xchg
cmp
imul
jns
test
hlt
insb
test
mov
mov
lods
adcb
cmpb
iret
fs
fwait
mov
or
and
pop
shlb
arpl
mov
jns
fistpll
pop
push
int3
and
pop
sub
insl
ret
add
jb
sub
fldl
fs
repz
jle
out
xlat
mov
daa
sbb
rorb
out
mov
or
jecxz
sbbl
inc
out
and
pop
data16
pusha
inc
and
push
jne
leave
xchg
or
mov
mov
bound
fcompl
xor
loop
aam
or
jl
pop
lret
xchg
xchg
mov
enter
pusha
lock
cmc
xchg
lret
push
negl
and
add
push
dec
cli
fisubs
leave
cmc
test
add
mov
cmp
mov
mov
out
out
dec
je
mov
cmp
push
imul
and
andb
fcmovnu
pop
repnz
inc
push
inc
mov
test
repz
pop
dec
les
or
in
inc
add
mov
add
pushl
push
adc
xor
push
mov
mov
lock
testl
sbb
test
mov
out
push
add
mov
out
bound
notl
ds
idivl
cmp
addb
and
inc
data16
cmp
sbb
fnstcw
fists
aam
in
lahf
pop
adc
sbb
push
scas
inc
outsb
divl
add
inc
in
testl
mov
or
xchg
fincstp
icebp
jg
mov
fildl
call
lret
in
push
sub
sbbb
sbb
jno
xchg
inc
out
sub
dec
xchg
mov
jl
test
push
push
outsb
out
test
mov
jmp
idiv
filds
push
cmp
pusha
ja
les
imul
out
cmpsb
sti
xchg
sbb
xor
inc
arpl
adc
mov
mov
pop
ret
or
movsl
gs
sub
lods
mov
mull
outsl
call
enter
and
test
mov
cmc
fnstsw
xchg
cmp
scas
pop
cbtw
loopne
mov
push
fistpll
in
notl
outsl
jecxz
cltd
xchg
push
cvtps2pd
out
int
daa
adc
rcr
out
sub
enter
xchg
movsb
idivb
mov
negl
popa
clc
enter
push
cmp
and
repnz
sbb
rorb
mov
push
xchg
shlb
add
sbb
push
or
mov
sub
movsl
negl
bound
and
js
push
in
rcrl
pop
add
adcl
mov
cmpsl
dec
not
lods
jg
or
mov
jecxz
out
fdivrs
shll
lcall
iret
imull
mov
loope
enter
arpl
cli
pop
push
jne
adc
in
xchg
cmp
subb
ljmp
xchg
std
jne
inc
push
data16
fdivp
cmc
push
es
cwtl
outsl
popf
dec
pop
or
jae
nop
nop
not
ss
fldt
fcoml
scas
fwait
dec
aas
loop
pop
jns
mov
inc
push
pop
or
xchg
in
add
in
xchg
sbb
test
fs
idivl
movsl
mov
dec
pop
cmp
xlat
mov
and
cmpsb
cs
not
and
push
sub
nop
fnsave
add
fldl
jo
daa
lahf
fbld
mov
mov
xor
pop
aas
inc
in
or
mov
xlat
cmp
popf
rcrb
lahf
fsts
sbb
inc
cld
fbstp
mov
mov
je
xor
xor
imul
mov
testl
adc
add
inc
or
push
push
xchg
jne
mov
in
cmp
pop
jnp
ss
mov
bound
xor
jnp
sti
test
jae
dec
and
repz
adc
cmpsb
mov
pop
push
cmc
mov
out
out
out
mov
aad
push
mov
idivl
aaa
jg
stos
notl
cld
out
out
fcomip
cmc
andl
ss
dec
and
cmp
xchg
mov
sbb
imull
ds
cwtl
shl
notl
xor
maxps
xor
sub
test
mov
aaa
mull
push
lcall
xchg
pusha
add
sbb
mov
insl
cvtps2pi
pushf
out
or
sbb
and
sahf
and
pop
out
iret
cli
mov
ss
divb
lods
negl
cld
pop
adc
test
divl
mov
mov
in
div
pop
leave
mov
neg
pusha
or
sub
mov
idivl
movsb
and
test
idivl
rcpps
stos
mov
pop
test
sub
push
pushf
adc
add
lods
lret
frstor
and
cltd
mov
dec
negl
jo
divb
imul
cltd
int3
negl
and
mov
in
pop
ljmp
inc
int3
xacquire
mov
pop
out
add
fdivl
lcall
push
push
mov
pop
sub
insb
lds
jp
into
add
fisubrl
aad
sti
add
icebp
cmp
and
testl
aas
notl
out
stos
iret
mov
or
jnp
repz
testl
cmpsl
fildl
negl
mov
push
idiv
test
cmp
pop
loope
inc
jle
pop
sbb
scas
xor
or
nop
pop
in
cs
jns
fwait
notl
mov
pop
xchg
notl
and
sbbl
in
shlb
jb
lock
xchg
adc
jecxz
mov
out
fisttpl
jns
scas
negl
test
cmp
or
js
and
lcall
test
pop
imull
sbb
xchg
imull
push
outsl
mov
cld
addr16
mov
inc
out
fldcw
popf
add
push
ja
insl
test
pop
push
jne
mov
sub
maskmovq
inc
dec
jecxz
ljmp
mov
dec
lds
div
in
test
sub
and
out
mov
pusha
mov
xchg
lcall
imull
into
push
dec
mull
sti
les
movsb
test
outsl
out
or
jae
testl
and
divl
scas
push
jmp
cmp
mov
lods
dec
frstor
ljmp
sub
test
sbb
int
inc
js
pop
push
push
lret
or
int
xchg
outsb
out
add
xchg
xchg
add
push
daa
mov
adc
jb
fildll
cs
lea
cmp
mov
sub
add
xlat
int
outsl
mov
push
test
pop
xchg
push
push
jp
sbb
pop
das
pushf
rcll
ss
out
aaa
cs
mov
lcall
addr16
sbb
mov
negl
ss
arpl
ds
imul
jo
jge
mov
lret
push
adc
mov
outsl
aad
idivl
xchg
jbe
cmp
lods
negl
mov
sub
int3
add
add
rcl
lods
out
ja
fdiv
imul
xchg
fcomip
cwtl
lds
xor
lods
and
mov
stos
or
push
out
test
cmp
testl
jae
dec
testl
insb
jb
or
pop
pop
inc
push
popf
xchg
ret
pop
dec
fxch
shlb
xchg
fcomip
dec
jmp
and
adc
adc
pushf
cwtl
fcomps
xor
or
ljmp
in
xchg
xor
push
mov
pop
ret
cmp
cli
out
pusha
push
inc
jo
xchg
out
inc
pop
cmc
xor
fs
shl
mov
icebp
fistpl
ret
mov
paddusb
xor
xchg
fisttps
push
pop
fisttpl
pop
sbb
cmpsb
test
jae
inc
adc
inc
jg
add
push
or
xchg
push
testl
pop
pop
adc
mov
repz
test
testl
pop
or
lret
ljmp
aaa
xchg
out
movsb
pop
lcall
sub
aaa
jb
mull
pop
sub
sub
testb
bound
sub
jg
out
or
mov
imull
loope
ficoml
xchg
movsl
aad
ja
les
push
xlat
xor
adc
scas
lcall
cmp
jns
negl
push
mov
bound
jp
clc
mov
fisttps
xor
xor
scas
inc
pop
fcoml
inc
mov
xchg
aam
popf
sub
dec
insb
jo
mov
jno
into
inc
dec
pop
shlb
jecxz
cmp
xchg
cmpsl
pextrw
gs
dec
test
cmc
xor
pusha
lahf
push
sti
lcall
adc
jecxz
ds
movsb
or
mov
jmp
fldcw
cmp
pop
sub
int
mov
or
dec
inc
rclb
idivl
xor
or
adc
and
xor
mov
test
les
fstps
dec
pop
mov
cmp
sti
push
insb
notl
loopne
xlat
pop
ret
leave
testl
cltd
fildl
fidivs
out
ret
and
xchg
xor
inc
or
cmp
in
cmp
notw
test
test
lahf
lret
mov
xor
dec
mov
cltd
out
orl
and
cmp
cld
sub
notl
or
cli
xchg
test
mov
or
xor
adc
js
lods
sub
out
bound
or
mov
out
mov
sbbl
imul
jb
negl
cltd
scas
out
sbb
pop
xchg
arpl
jns
jecxz
dec
insb
mov
push
pusha
not
sbb
sbb
shr
push
sub
je
sarl
scas
stos
xor
mull
cmpsb
jno
shl
dec
idiv
xchg
sbb
pop
sub
sbb
mov
loopne
sbb
std
sub
xor
notl
xor
push
push
and
push
jle
testl
stos
les
xchg
sbbb
or
ljmp
pop
mov
hlt
mov
dec
es
in
imull
xor
xchg
div
push
or
popf
outsb
mov
sub
rcr
mov
popa
push
mov
out
jne
dec
xchg
adc
je
or
adcb
or
mov
sub
ljmp
scas
loopne
jmp
imul
lret
and
cmp
shrl
mov
xchg
aad
xlat
sbb
je
xchg
addr16
and
cwtl
fcmove
loopne
mull
data16
mov
jo
mov
in
sbb
pop
lcall
or
mul
adc
test
pop
lahf
mov
fwait
test
repz
icebp
add
push
int
push
xor
lea
les
enter
icebp
ja
notl
shrb
add
notl
mov
rorl
xor
mull
lods
cld
filds
xor
inc
imull
push
and
sbb
mov
aas
sub
and
and
mov
lock
iret
insb
jno
out
jge
pop
jle
imull
push
shl
sub
pusha
fistpll
divl
stos
fmull
push
mov
jno
not
mov
cs
or
negl
les
lret
cmpsl
xchg
call
adc
cmpsb
scas
xchg
js
jbe,pt
add
mov
pop
stos
mov
nop
out
test
fildll
or
testl
enter
gs
or
stos
fcmovbe
out
int3
mov
push
pop
xchg
fstl
adc
out
and
jno
imul
push
scas
mov
mul
push
je
cld
sarl
loop
sub
lea
imull
test
es
xor
xchg
jecxz
aas
cld
xlat
sbb
cmp
cltd
testl
mov
xor
daa
mov
je
insl
mov
notl
aas
cmp
idivl
sbb
push
xlat
xchg
sbb
jp
divb
enter
sub
pop
lea
loopne
lcall
dec
cwtl
fstps
xchg
xor
jge
testl
out
sub
loopne
idivl
xor
and
rclb
fistps
testl
push
imul
adcl
push
add
fmul
sti
sbb
dec
call
pop
mov
jnp
or
enter
popl
rcr
pop
dec
subl
fildl
imul
xchg
xor
xlat
push
mov
pop
fisttps
fstl
cmp
cli
xchg
loop
insl
sti
mull
cmp
mov
pop
pop
jecxz
xchg
jecxz
loopne
xchg
mov
jge
cmp
xor
adc
dec
sub
cwtl
push
adc
cmpsb
pop
fs
clc
je
test
fcoms
jp
mov
xor
aad
divl
fs
ss
out
mov
push
es
ffreep
loopne
test
xor
adc
mov
lcall
test
xchg
cmp
aam
sbb
and
jne
jne
xchg
imul
insl
push
pop
fistpll
or
lret
add
xor
insb
fnstcw
aaa
or
push
je
push
mov
cmp
xchg
idivl
fwait
nop
mov
cmc
notl
test
div
popf
mov
push
pop
jmp
push
xchg
mov
es
and
outsb
std
mov
fcomi
aad
mov
arpl
push
pop
mov
jle
inc
movsl
mov
push
dec
outsl
pop
cltd
shll
inc
pushf
idivl
movsb
cmp
imul
lret
idiv
sub
push
mov
xlat
into
call
lds
sub
mov
xor
out
xor
loop
insl
jmp
std
scas
push
popl
dec
adc
mov
lods
cmp
adc
sbb
push
fdivr
mov
adc
jo
int3
outsl
jne
or
push
dec
sbb
cmp
and
xor
lret
jmp
inc
pop
mov
dec
xor
lods
ret
pushf
xor
cmc
lea
cmpb
imul
mov
fstpl
pop
fs
fisubrs
xchg
xchg
scas
lahf
pushf
negl
sbbl
movsb
xchg
sbb
mov
in
testl
int
mov
dec
idivb
mov
and
adc
fbstp
out
push
push
in
pop
divl
and
push
sahf
iret
mov
mov
addr16
cmp
idivl
cwtl
idivl
daa
pop
inc
imull
mov
pop
mov
adc
je
dec
in
push
stos
negl
sub
divl
daa
loopne
icebp
repz
into
push
mov
imull
or
cmp
fcoml
dec
cmpsb
mov
popa
mov
arpl
push
mov
sbb
test
std
mov
jmp
inc
out
jb
jae
imul
test
push
ljmp
out
dec
jg
mov
outsl
daa
hlt
inc
add
xchg
in
fbstp
dec
repz
notl
testb
lea
mov
pop
pop
nop
mov
idivl
dec
push
scas
and
testl
in
add
addr16
gs
ret
ficoml
dec
push
ja
imul
stos
add
das
xchg
dec
cli
push
out
roll
add
hlt
sbb
ds
jmp
fsub
ror
jae
in
dec
addr16
test
test
push
lret
pushf
ss
cs
rcr
jmp
jge
jp
jecxz
or
add
pop
aas
hlt
int
stc
repz
mov
push
fidivrl
call
and
lcall
pop
sbb
cmp
push
mov
mov
push
pop
mov
fsubr
fistpll
add
push
push
mov
outsl
fcomps
adc
in
sub
mov
jle
fcompl
and
mov
pop
lods
ja
ret
imul
hlt
inc
fucomi
rol
addr16
cmp
stc
gs
sbb
xor
neg
pushf
repnz
incl
xchg
pop
mov
in
fcmovnbe
in
fisubl
imul
jg
icebp
sub
dec
lods
imull
mov
mov
mov
dec
or
jbe
int
enter
and
cmp
pop
int
addr16
or
mov
out
cmp
push
in
inc
outsl
cmp
dec
addr16
outsl
dec
repz
xchg
bound
popf
jp
and
xchg
mov
mov
jecxz
out
inc
mov
fidivl
rcll
stos
add
insl
adcl
mov
clc
push
push
ljmp
xchg
fidivl
ja
inc
leave
add
mov
pop
add
out
mov
jmp
pop
jmp
pop
outsl
jae
in
sbb
out
or
in
ss
mov
scas
in
add
push
push
dec
pop
imul
les
enter
jp
sti
push
jle
xchg
jbe
add
jl
push
addr16
ficoml
adc
pop
xor
sbb
xor
mov
sti
insl
or
fbstp
aaa
pop
ljmp
stos
inc
add
and
and
lods
into
jnp
aam
out
jmp
in
fbld
push
xchg
xor
popf
test
in
xor
fwait
xor
jmp
mov
sub
or
dec
insb
je
xchg
jle
pop
sub
mov
in
mov
xor
lret
cmpsl
ficoms
sarb
imul
into
jo
inc
mov
outsb
push
xor
pop
out
xchg
mov
mov
stos
sbbl
into
xchg
repz
mov
out
dec
jnp
xor
pusha
push
out
and
cld
push
mov
fdivrs
in
jmp
clc
jg
mov
xorb
sbb
push
rolb
mov
out
push
and
cli
leave
xchg
push
movsl
xchg
das
cld
mov
out
inc
jo
sub
pushf
xchg
in
push
int
ficomps
fdivl
dec
out
ljmp
cs
outsl
adcl
stc
sub
enter
cld
into
hlt
in
hlt
xchg
scas
fwait
popf
iret
aaa
mov
or
dec
out
popa
ds
and
pop
hlt
xchg
or
jb
mov
jns
cmp
jmp
push
push
mov
mov
jne
inc
test
ljmp
insl
lea
mov
jae
cmp
imul
hlt
cmp
dec
ret
leave
out
hlt
rorb
cmpsl
ret
push
lret
sbb
icebp
inc
sub
mov
loope
shr
inc
cmc
mov
loopne
jno
pop
sub
roll
push
in
pop
loopne
sub
mov
push
add
rcrl
mov
mov
mov
adc
mov
dec
popf
inc
xchg
push
mov
repnz
in
stos
mov
mov
jbe
scas
inc
int3
jmp
mov
or
jns
jbe
std
mov
fs
int
push
call
push
xor
dec
mov
add
pop
ficoml
popf
cwtl
pop
xor
jnp
sbb
sub
xchg
mov
cwtl
add
icebp
aas
dec
dec
mov
jle
xchg
adc
add
movsl
mov
ljmp
push
negl
adc
test
insl
lea
int
out
lods
test
jb
mov
inc
adc
sti
test
jo
push
pop
cmp
push
in
mov
testl
add
pop
stos
cmp
fmuls
clc
xchg
fimull
in
mov
movsl
add
xchg
jecxz
in
xor
sbb
add
mov
pop
mov
out
sbbb
mov
mov
fs
push
insb
cmp
fwait
xchg
shlb
push
jb
sbb
mov
and
pop
jmp
pop
adc
lret
and
pop
ficoml
xlat
dec
mov
icebp
cmp
out
ljmp
mov
insb
in
dec
push
fcoms
mov
mov
out
jmp
cld
sbb
mov
xor
rcrl
lods
out
and
imul
hlt
dec
push
mov
out
leave
push
fidivrl
in
mov
pop
gs
cmc
sbb
fidivrl
mov
cmc
jmp
xchg
fcompl
sbb
mov
pop
and
ss
pop
mov
dec
jae
xlat
jecxz
add
sub
scas
cmpsl
lretw
jle
ljmp
jl
inc
and
or
jnp
cmc
movsl
dec
sub
movsl
pop
out
inc
insl
stos
mov
in
and
pop
jae
repz
jmp
pop
ljmp
icebp
lcall
or
test
sti
mov
fildll
fiaddl
jns
cld
clc
sbb
mov
fistps
idivl
push
cmp
mov
pop
sahf
fistps
fsubr
testl
dec
mov
xor
cwtl
js
pop
lock
loope
pop
or
pop
cmp
dec
push
enter
sbb
test
mov
sub
xlat
sub
ss
int3
push
repz
test
push
insl
push
jnp
faddl
pop
gs
out
jne
or
inc
divl
jns
jg
adc
cwtl
jo
jno
aas
xchg
jmp
daa
xor
mov
stc
dec
cmp
int
bnd
scas
push
lret
dec
sub
fcmovnbe
sbb
test
and
mov
je
aad
hlt
lods
mov
fidivl
lea
int
bound
cmp
inc
lods
mov
cld
cmp
sbb
scas
notl
shr
push
mov
mov
lcall
or
and
fdivs
xchg
out
sbb
cmc
push
scas
adc
movl
mov
sbbl
or
add
xor
cmp
mov
add
xchg
fnsave
xchg
inc
pop
repz
jp
popf
int3
and
cld
divl
mov
sub
pop
mov
sbb
ret
mov
stc
clc
nop
push
bound
enter
xchg
out
out
xor
pop
out
repnz
fmulp
mul
pause
xlat
adc
cmp
imul
lds
xor
and
jecxz
pop
inc
lods
jle
gs
mov
xchg
fcmove
sbb
lock
rcll
cwtl
loop
pop
push
mov
idivl
adc
xchg
into
enter
jb
ljmp
data16
fadds
jo
repnz
xor
out
lods
mov
or
sbb
pop
mull
xchg
xchg
cltd
xchg
jle
jae
loope
adc
adc
mov
inc
pop
xorl
fwait
xor
jne
jl
mov
call
mov
mov
movsb
test
mov
imul
add
and
idivl
mov
push
or
xor
cs
inc
aaa
icebp
jmp
cmp
arpl
jl
dec
xchg
push
lock
adc
jae
call
xor
jmp
data16
sub
cmp
or
shll
adc
jmp
dec
aas
xor
sbb
cmp
fidivl
jmp
mull
pushf
cld
nop
xchg
cmp
fiaddl
mov
or
addr16
push
or
cmp
mov
mov
inc
mov
mov
or
int
test
movsb
aad
imul
push
inc
sbb
repnz
add
sub
sub
cs
cltd
in
xchg
pop
roll
loopne
xor
popf
les
jmp
sti
das
notl
movsb
daa
sub
dec
inc
loop
popf
jne
mov
aad
imul
ja
and
adc
inc
cmp
pop
cs
sbb
test
adc
mov
aas
cmp
fimuls
daa
pop
test
xlat
jp
jecxz
push
aad
pop
mov
adc
cs
sub
push
add
divl
xor
rcll
repnz
negl
adcl
aad
stos
fmul
sbb
pop
out
mov
testl
ljmp
sbb
and
xor
cmc
fmuls
jg
mov
movl
mov
and
mov
push
mov
sub
pop
add
push
test
ret
negl
hlt
mov
add
pop
lods
fisttpll
jp
xor
dec
mov
push
xchg
cwtl
pop
bound
fsubs
out
jb
ljmp
and
cltd
add
push
adc
iret
das
jp
push
in
dec
popa
add
dec
jmp
xchg
movb
stos
bound
jnp
lods
sub
ja
pop
jl
clc
jp
mov
test
out
ds
cmp
notl
push
divb
div
cmp
fnstsw
fs
mov
pop
gs
adc
pop
adc
stos
and
and
pop
scas
call
push
sbb
mov
and
cmp
adc
mov
jecxz
dec
rol
idivl
sarb
jge
adc
pop
repnz
scas
xor
clc
dec
test
sbb
add
cmpsl
negl
jg
testl
and
dec
adc
insb
imull
push
addr16
testl
fs
add
lahf
lds
in
arpl
int3
std
test
adc
xchg
scas
xchg
pusha
out
test
cmpb
push
pop
mov
hlt
ljmp
xchg
jp
xor
fsubs
mov
sub
mull
mov
div
test
adc
mov
xchg
push
aaa
clc
jb
pop
les
mov
inc
push
mov
addr16
cmp
xchg
mul
push
jo
pop
mov
mov
mull
hlt
push
leave
jno
push
mov
pop
adc
push
ss
dec
push
movsb
pop
sbb
jge
icebp
adc
shlb
or
sub
fstps
out
add
test
fnstsw
aad
push
sbb
push
pop
in
mov
pop
or
out
call
out
ret
out
lahf
jmp
jp
sarl
rcll
cmp
and
push
xor
imul
and
push
fists
dec
insl
inc
cld
out
and
aam
dec
push
mov
idivl
test
xor
jl
insb
loop
iret
mov
enter
int
fwait
pop
sub
mov
addl
gs
push
dec
lret
mov
jb
pop
icebp
ss
aaa
sbb
dec
jae
mov
or
xor
daa
cmpsl
jne
test
cmp
jmp
hlt
mov
xor
cmc
mov
add
jg
pop
cmp
addr16
xchg
out
arpl
or
enter
ja
sub
loopne
testl
mov
jl
outsl
mov
mov
add
push
pop
mov
std
pop
mov
lcall
pop
mul
std
pop
pop
mov
jmp
das
pop
mov
mov
sahf
fidivs
lret
push
push
leave
mov
pop
mov
dec
xchg
push
adc
add
out
rcrl
xchg
jb
repz
clc
mov
stc
in
fsts
rcrb
add
cmp
mov
cli
testl
jno
testl
aaa
mov
mull
outsb
cmpl
mov
hlt
pop
sbb
xchg
sub
inc
mov
pusha
mov
gs
cmpsb
mov
flds
cmc
mov
pop
pop
mov
clc
sub
pop
push
sbb
testl
pop
nop
jb
jecxz
xor
movsl
lods
iret
xlat
adc
test
lret
sbb
jne
dec
pop
fcoml
neg
leave
outsl
test
imull
sbb
xlat
jmp
push
lods
imul
lea
sub
notl
xchg
xor
loope
adc
test
adc
pop
inc
ss
and
cld
insb
out
cmp
pop
sbb
ljmp
adc
mov
vcvttps2dq
imul
div
push
sbb
fst
cwtl
idivl
hlt
xchg
cld
cmp
adcl
ret
loopne
das
idivl
xor
lahf
sbb
xchg
push
fucomi
ficoms
imull
lret
test
inc
cmp
mov
jle
mov
mov
arpl
xchg
test
dec
fwait
add
inc
test
ljmp
lds
maskmovq
imull
xchg
out
jb
and
cli
inc
xchg
lret
out
pop
mov
inc
notl
andb
cmpsb
push
sub
negl
adc
push
xchg
push
std
cwtl
mov
and
cmp
xlat
in
in
fistpll
out
adc
mov
adc
mul
add
sub
fs
sti
dec
mull
rorl
xlat
xchg
icebp
add
rcrb
push
divl
and
sub
jns
ss
bound
jg
call
mov
idivl
ja
sub
int3
dec
mov
movsb
pop
xchg
nop
je
in
jle
xor
adc
aas
cmp
sbbb
loopne
scas
repz
daa
stos
cmpsl
push
dec
jmp
inc
cld
ss
cmp
push
dec
push
mov
outsl
out
pop
enter
jb
mov
mov
pop
stc
pop
pop
imull
add
ds
nop
and
sub
dec
xchg
mov
rcr
popf
testl
sarb
xchg
pop
mov
jecxz
inc
fs
lret
shrb
repz
repz
not
out
adc
or
cld
repnz
iret
movsb
xchg
pop
fucomi
ret
js
in
sbb
pop
dec
mov
aam
and
mov
inc
xchg
mov
aas
xchg
pushf
subl
sti
pop
or
sub
jmp
std
push
arpl
mov
rcll
inc
jecxz
insb
loopne
imul
pop
pop
mov
lods
dec
test
xchg
repnz
je
push
mov
scas
xchg
mov
pop
jne
xrelease
fists
pusha
pop
cwtl
lock
rorl
jnp
dec
adc
aas
jp
sub
out
push
lret
pop
idivl
lock
testl
sbb
sub
pop
subb
lock
iret
mull
out
imull
ja
xor
fdivrp
int3
outsb
je
jb
data16
hlt
pop
cli
out
repz
or
jl
cwtl
testl
jmp
xor
pop
imull
sbbl
inc
push
ljmp
dec
push
mov
frstor
xor
aas
mov
pusha
mov
sbb
push
outsl
divl
adc
lock
mov
jnp
pop
xchg
fcmovnb
or
into
mov
cmp
leave
out
js
jmp
cmp
mov
cwtl
mov
jnp
mov
notl
cmp
call
sti
jno
cld
cs
daa
aas
arpl
scas
jo
cltd
aas
shll
jns
fists
mov
cmp
popf
mov
ljmp
inc
push
mov
nop
cmp
pop
lods
icebp
cmp
in
stos
dec
add
jb
adc
or
ja
imul
out
push
es
jns
or
lcall
pop
hlt
jmp
mov
js
push
mov
mov
repz
and
sub
imul
hlt
lea
insl
arpl
std
pop
pop
pop
push
loop
aam
or
jnp
jge
mov
out
aas
je
adc
pop
and
or
mov
repnz
ret
enter
sbb
lea
js
xlat
mov
or
idiv
adc
les
jge
adc
gs
movsl
xor
cmp
imull
ffree
sub
shrb
out
mov
out
popa
mov
mov
jmp
loope
ret
dec
xchg
jns
push
jge
cmp
push
dec
pop
mov
pop
fsubs
insb
add
xor
out
mov
jo
xorb
cld
xlat
inc
pop
cmpsb
aad
mov
fldl
ret
nop
mov
ja
push
add
out
aam
aaa
into
les
cmpsl
or
xchg
sbb
shll
or
dec
shrb
jae
std
imull
inc
jecxz
je
in
dec
xchg
mull
lock
pop
out
fwait
sub
arpl
div
ficompl
daa
shrl
ljmp
mov
inc
out
push
lods
je
xor
xchg
pop
out
or
jp
mov
cmp
scas
inc
xlat
int3
fcmove
push
xchg
lds
cmp
loop
mov
shrl
out
subl
popf
pop
mov
xchg
mov
int3
les
shrb
fistl
xlat
xlat
dec
mov
pop
adc
testl
xchg
dec
mul
cs
in
add
insl
notl
cmc
sbb
pop
cmpsb
inc
test
jmp
add
fsubrl
xchg
pop
js
cmp
leave
dec
testl
idivl
sbb
loop
sbb
cli
sbb
adc
pushl
icebp
lret
inc
arpl
adc
scas
add
lock
hlt
testl
adc
stos
clc
pop
mov
mov
loop
sub
imull
andl
shl
adc
and
add
test
mov
xchg
add
push
jno
sbb
jecxz
cmp
out
inc
jns
lcall
hlt
arpl
xchg
and
not
fs
rol
pop
punpckldq
sub
xchg
test
push
pop
pop
notl
lock
xchg
jo
lds
sbb
hlt
loope
lret
jns
imull
inc
xor
inc
and
cmp
adc
push
idiv
cmc
test
mov
and
iret
insb
test
sub
jne
cmp
cwtl
xor
fsts
xchg
cltd
into
notl
cmp
movsl
out
add
testl
adc
orb
dec
jno
or
push
mov
out
or
pusha
or
inc
mov
pop
mov
testl
shl
dec
pop
sbb
and
pusha
dec
and
add
aad
movsl
ficoml
into
out
jge
mov
sbbl
sbb
sbb
mov
mov
testl
out
xor
into
adc
inc
cmp
mov
negl
fwait
mov
xlat
mov
and
imul
pop
lcall
jae
scas
add
and
xchg
sbb
push
xor
pop
sub
pop
or
divl
mov
pusha
paddsw
fcompl
outsb
push
pop
xchg
lods
inc
xor
sbb
mov
inc
adc
lods
xchg
jecxz
sbb
cmp
or
mul
js
push
cmp
add
cmp
in
adc
mov
daa
and
mul
jns
dec
pusha
sbb
call
test
pushl
inc
pop
cmp
mov
mull
in
pop
sbb
adc
mov
push
jae
imul
out
jbe
out
and
pop
pop
rcll
js
repz
or
aam
out
mov
and
jp
stos
cmp
push
cmpsb
in
nop
insb
mov
daa
inc
cwtl
inc
rorb
pop
ret
mov
idivl
push
or
idivl
jp
aam
pop
xchg
outsl
loope
divl
mov
fidivrl
imul
out
sti
divl
xchg
imul
xchg
insb
cmpsl
pop
and
cmp
push
pop
sub
inc
lcall
sub
push
jmp
je
sbb
scas
setge
idivl
outsb
movsb
idivl
stos
test
mov
je
mov
or
out
dec
sub
push
stc
in
sbb
js
por
or
jl
xor
dec
divl
cmp
punpcklbw
enter
inc
ss
dec
pop
shlb
test
pop
push
push
testb
jecxz
out
push
push
dec
pop
cmpb
or
subl
ss
mov
inc
or
testl
fists
jg
data16
fildll
pop
pop
sti
sub
ret
gs
mov
sbb
jp
jne
nop
cmp
imul
add
xchg
imul
xchg
dec
dec
hlt
rolb
testl
mov
add
lods
inc
xchg
fisubrl
add
repz
mov
jnp
push
pusha
add
sbb
adc
mov
pop
add
xor
or
push
xor
jl
adcb
xchg
or
mov
adc
jb
push
lea
sbb
sahf
sub
mov
xchg
lods
mov
call
pop
subb
mov
push
mov
fdivrs
mov
mov
cmp
outsb
adc
loope
add
popl
es
repz
ret
in
ljmp
inc
jbe
mov
pop
fldl
jmp
test
loopne
jns
jl
mov
or
icebp
ljmp
xchg
pop
notb
ret
pop
stos
mov
dec
or
cmpsl
mov
mov
cld
scas
jecxz
enter
nop
mov
add
mov
xorl
pusha
jmp
cld
add
or
sbb
pop
and
aaa
mov
mov
fidivrl
lock
or
mov
outsl
jmp
repnz
and
push
adc
in
roll
mov
pop
jne
push
jae
mul
jge
inc
sub
add
test
std
pop
add
mov
xchg
test
mov
out
sub
mov
add
mov
shll
movsl
jbe
push
imul
add
dec
movsl
adc
stos
and
mov
fwait
movsl
xchg
out
add
ljmp
xchg
xchg
push
les
jo
push
and
in
jbe
fs
mov
push
repnz
test
mov
ljmp
orb
data16
dec
test
ficompl
xchg
push
outsl
test
clc
fnsave
inc
adc
xchg
les
enter
popaw
in
jecxz
ljmp
in
add
dec
iret
cmc
xor
sbb
lock
push
pop
pop
pop
add
aas
push
push
mov
add
ljmp
jmp
xchg
ficoml
leave
inc
mov
lahf
adc
call
jle
or
dec
push
sub
dec
aas
push
fs
jb
jecxz
xchg
fimull
jmp
arpl
xchg
add
mov
testb
sbb
repnz
fstps
jne
hlt
xlat
mov
int
cld
aaa
or
inc
scas
stos
adc
push
call
pop
cmp
and
pop
mov
mov
adcl
mov
pop
mov
imul
inc
lock
inc
dec
movsl
inc
sub
ljmp
cmc
ja
cmp
sub
or
pop
addl
pop
mov
imul
adc
push
sbb
cmp
adc
addb
mov
fidivl
test
cmp
cmp
pop
insl
add
jae
xchg
pop
cmpsb
xchg
scas
int3
gs
ffreep
sbb
sub
mov
mov
ja
dec
ljmp
pop
ja
xlat
cmc
xor
movsb
adc
idiv
data16
push
inc
cs
add
adc
inc
lcall
jbe
js
or
jmp
js
and
pop
popf
mov
mov
xchg
fistl
popa
dec
ds
pop
dec
out
xor
mov
and
push
pop
cmp
in
mov
clc
daa
out
fisubs
movl
mov
cwtl
inc
out
sti
xor
iret
repz
jmp
jne
sti
outsb
mov
repz
out
sub
sarb
xor
pushf
sti
pop
mov
cmp
sbbb
push
cmpsl
les
xor
mov
out
sbb
mov
jg
test
fisubrl
add
fs
outsb
cli
or
or
jae
fdivs
hlt
xor
adc
dec
stos
imul
aaa
rorl
adc
jmp
mov
cs
adc
in
mov
lret
int
shll
test
add
insb
into
pop
mov
jae
cltd
mov
dec
jo
dec
sub
adc
jmp
pop
sbbb
jbe
mov
scas
pop
popf
in
adc
inc
sti
xlat
push
pop
or
shll
loopne
mov
inc
stos
jecxz
pop
mov
pop
enter
ret
out
sbb
stos
mov
sbb
fidivrs
sbb
jne
and
mov
mov
popa
mov
leave
imulb
add
jno
aam
fmuls
fidivrs
or
sti
mov
pop
xchg
sbb
fldcw
out
mov
xor
scas
ret
jb
insb
in
mov
fdivl
mov
push
mov
adc
mov
js
fstl
mov
xor
add
jge
pop
es
out
in
repnz
cli
and
add
mov
pop
out
mov
jbe
cmp
fsubrl
lods
pop
xchg
or
loopne
mov
movsl
js
mov
xor
push
cltd
mov
jb
or
mov
sub
mov
stos
jbe
mov
out
mov
aaa
repz
ret
push
inc
aad
in
out
mov
add
in
pop
data16
or
out
out
mov
xchg
cmp
out
jo
or
orb
xchg
insb
sbb
scas
jbe
lods
pop
ja
cmp
sysexit
and
and
sbb
insl
neg
arpl
fwait
imul
sub
or
dec
mov
mov
mulb
testl
xor
push
push
jp
push
pushf
int3
sbb
mov
outsb
mul
and
hlt
adc
xchg
jecxz
inc
scas
movsb
shlb
jo
pushf
es
insb
lods
neg
add
outsb
pop
iret
xchg
cmp
mov
xor
test
int3
fmuls
sub
in
test
mov
mov
xchg
pop
testl
js
cmp
jecxz
lods
mov
xchg
dec
test
addb
mov
and
pop
mull
insb
ja
call
lock
and
not
mov
sub
rolb
jae
in
push
pop
outsb
cmp
pop
idivl
iret
pop
shl
mov
cwtl
test
dec
es
lods
dec
arpl
push
dec
mov
sub
ficoms
outsl
xchg
pop
push
rcl
inc
jecxz,pt
xor
divl
inc
hlt
clc
divl
pop
lock
cwtl
xchg
mov
pusha
dec
xchg
mov
push
sbb
negl
mov
jne
xor
neg
add
fistl
mov
mov
fdivp
pop
imul
or
stos
test
mov
movsb
pop
jno
jbe
negl
push
int3
je
mov
push
sub
loop
mul
js
adc
sub
xchg
scas
outsb
mov
xor
outsb
cmp
xchg
divl
aad
into
imul
test
ljmp
ret
cmp
imul
loopne
lret
and
addr16
lods
adc
div
mov
fstpl
test
or
cmpsl
insl
mov
pushf
add
adc
icebp
mov
pop
push
aad
in
inc
pushf
aas
xlat
mull
inc
and
cli
outsl
neg
push
in
idivl
pop
insb
stc
push
sub
xlat
dec
loope
dec
cmc
ret
in
fnstcw
ja
sub
in
push
in
fwait
add
pop
es
orl
neg
stos
mov
xor
movsl
push
fadds
notl
icebp
xchg
mov
sub
mov
loopne
testl
xchg
lods
pop
mov
mov
jmp
icebp
not
inc
mov
shl
mov
pop
testb
testl
inc
testl
mul
into
out
pop
imul
add
or
adc
pop
fwait
loope
mov
imul
arpl
mov
sbb
aam
or
not
lods
add
aad
fstpt
dec
lods
push
mov
pop
adc
inc
pusha
fidivs
sbb
dec
xchg
and
dec
adc
div
sahf
add
shrb
fincstp
jecxz
nop
aas
xchg
mov
addr16
inc
mov
jnp
push
mov
xor
inc
mov
or
pushf
mov
icebp
jo
in
pushw
sbb
int
jo
sub
sub
or
repnz
dec
lds
sbb
fldl
pop
jb
testl
sub
mov
stos
pop
mov
daa
insb
cmpsb
jmp
or
notl
add
dec
repnz
into
divl
sbb
add
push
or
daa
imull
mov
aaa
cmp
xor
xchg
cmp
push
jbe
dec
leave
fcmovb
mov
lds
push
pop
jb
cmc
pop
mov
scas
or
iret
lods
notl
push
dec
fmul
fwait
inc
negl
or
inc
orb
std
aaa
xchg
dec
out
mov
pushf
insb
mov
cli
fisttpl
nop
insl
mov
addr16
imull
sbb
push
mov
movsl
divl
adc
pop
dec
enter
cli
rcr
imul
push
mov
fldenv
adc
jne
outsl
inc
pop
test
pminub
sarb
insl
mov
pop
sub
sbb
pushf
xchg
notl
clc
inc
pop
pop
push
sub
dec
push
fldl
sar
lea
dec
ss
pop
daa
mov
fcmovu
shl
in
inc
faddl
push
jo
out
cmp
mov
pop
test
sbb
jge
sti
xor
xchg
mov
push
mov
in
adc
test
mull
insb
pop
pextrw
xlat
jge
push
int3
or
inc
sub
testl
stos
mov
test
jbe
idivl
insb
rclb
ffreep
das
std
add
mov
mov
push
out
icebp
adc
xchg
shlb
add
std
aam
add
mov
and
div
ficomps
daa
pop
adc
pop
and
ror
lahf
in
mov
sub
mov
jb
adc
frstor
outsb
push
loopne
mov
lods
add
jle
divl
pop
jbe
adc
sahf
movsb
xlat
nop
dec
mov
movsl
divl
leave
add
cltd
xor
mov
das
out
arpl
fcomi
push
sub
idivl
mov
mov
sub
rcr
test
dec
inc
lods
ret
icebp
fucomi
ljmp
in
movsl
pusha
push
cltd
cmc
fidivs
jg
notl
rol
and
in
into
xchg
les
push
std
xchg
jecxz
out
ret
add
jns
adc
mov
sub
fimull
xlat
mov
int
inc
repnz
jae
je
std
pop
xchg
sbb
push
clc
adc
ljmp
xchg
lcall
xchg
xchg
dec
sbb
outsb
testl
inc
sbb
in
lret
lods
sbb
pushf
jne
movsl
dec
imull
scas
pusha
out
neg
mov
jmp
popf
push
fprem
fistl
xchg
inc
fwait
adc
roll
repz
imul
or
int3
fiaddl
adc
mov
dec
adcl
push
repnz
lea
xchg
fdivp
jns
lods
adc
mov
ss
lods
popl
rcr
cmp
and
das
test
lds
je
sbb
maskmovq
sbb
in
testl
dec
pop
imul
jg
inc
lahf
test
xor
and
adc
inc
notl
pop
mov
xchg
je
or
stos
lods
inc
xor
data16
or
sahf
into
add
lds
or
je
pop
imul
repnz
pop
push
idivl
pop
mov
mov
leave
into
int
loope
mov
adc
loope
dec
push
in
xchg
xchg
cmp
arpl
inc
mull
xor
push
repnz
pushf
push
jno
xor
dec
xchg
testl
stos
popf
cmpsl
xor
dec
sub
ret
test
mov
xor
or
push
add
lods
push
and
fbstp
scas
negl
xchg
mov
imull
lcall
xor
negl
sbb
ret
inc
enter
mov
jo
jnp
repz
mov
negl
fwait
mov
aad
mov
mov
sub
sub
xor
lea
adc
adc
cltd
test
xchg
jmp
push
or
sahf
gs
sbb
xlat
call
cmp
mov
dec
aam
loopne
mov
inc
bound
movsbl
jae
xor
insb
push
in
imull
cmc
fdiv
divl
dec
jae
xor
jl
loopne
stc
clc
testl
fisttpll
arpl
imul
xchg
fdivs
sbb
popa
std
divl
cs
imul
adc
leave
shl
mov
mull
mov
jo
sub
jp
sbb
out
ficoms
fdivrs
ljmp
inc
xor
add
adc
xchg
loope
testl
add
jmp
imul
fbstp
dec
inc
fdivr
push
mov
jmp
xchg
push
sbb
test
neg
cli
push
cmp
movsb
fincstp
js
push
dec
bound
push
daa
das
aam
sbb
hlt
push
repnz
imull
gs
loop
imul
lret
sbb
jle
xchg
mov
cmpsl
or
jp
mov
ret
sub
cmpsb
cmpsl
rcrl
cmp
enter
lret
pop
adc
xchg
inc
lahf
pop
lret
divl
pop
test
mull
lret
sub
insl
xchg
cld
dec
idivl
jno
xor
popa
jbe
in
fsubp
rorl
fnstcw
nop
hlt
xchg
negl
insl
addr16
arpl
negl
xor
mov
notb
jl
dec
jns
mov
adc
imul
cltd
mov
add
fcmovnbe
cmc
xor
int
cmp
sbb
inc
cmp
add
dec
inc
leave
ja
xlat
addl
pop
test
and
jnp
rcl
pop
and
negl
fiaddl
mov
lea
cmp
rcrb
sbb
sbb
push
jmp
xor
dec
ficoml
sub
inc
cmp
xchg
and
testl
addr16
cwtl
pop
xchg
jp
or
mov
push
daa
mov
negl
xchg
js
cwtl
sbb
sbb
xchg
inc
ret
jae
pop
and
xchg
mov
rcll
cmp
xchg
in
aaa
ret
test
xchg
sbb
push
arpl
inc
movsl
jg
xor
pop
push
jae
cwtl
jecxz
fimull
inc
xchg
adc
scas
pop
push
inc
enter
out
stos
mov
clc
daa
dec
jp
hlt
xor
jne
ljmp
pop
popf
popa
add
inc
je
and
data16
xchg
aam
rorb
mov
clc
push
jnp
pop
fwait
mov
jo
in
insl
adc
loope
pusha
push
pop
scas
fisttpll
icebp
fimull
mov
inc
sub
popf
jge
xchg
loope
sbb
cmpsb
cmpsb
js
test
xchg
add
hlt
mov
pop
xchg
outsb
inc
mov
and
xchg
stc
cmp
cmp
test
out
cmp
fsubs
aas
bound
lret
push
push
sbb
sbb
mov
pop
decl
out
inc
dec
pop
and
in
jmp
mov
dec
loopne
mov
mov
repnz
je
add
cld
mull
xchg
inc
mov
add
fwait
cwtl
movsl
xor
xchg
xchg
mov
mov
icebp
aaa
cmp
loope
xchg
mov
add
cmp
lahf
sub
dec
repnz
aas
into
adcl
push
jno
ljmp
cld
cmpsl
cmp
sub
shlb
pop
movsb
repnz
xchg
lods
movsl
out
inc
shr
js
inc
or
xchg
int
pop
jne
in
and
mov
mov
mov
pop
das
sub
push
in
cltd
testb
jg
lret
cmp
pop
ret
jno
xchg
pusha
ljmp
jp
mov
jb
jecxz
xchg
push
and
inc
outsl
cmp
ljmp
js
lret
leave
loopne
movsl
lahf
repnz
xchg
cwtl
mov
cmp
dec
lods
dec
js
je
xor
mov
sbb
and
bound
in
test
sahf
ja
jl
mov
iret
jno
div
ret
fidivl
imul
jae
mov
out
int3
cli
inc
scas
inc
insl
add
jg
pop
js
in
add
xor
pop
dec
icebp
fmul
xor
stos
fs
fsubrp
repz
out
add
xor
in
lods
push
ja
mov
ljmp
ja
pop
fwait
xchg
mov
push
pop
adc
jbe
movsl
inc
outsl
inc
cwtl
imul
push
popa
dec
sbb
js
jbe
xchg
pop
das
mov
cmpsb
mov
jp
pop
jb
lret
stos
lds
je
cmp
dec
push
sub
stos
add
imul
add
xorl
jmp
pop
mov
pop
negb
rcrb
mov
fisubrs
push
pop
cmpb
jecxz
out
scas
inc
scas
movsb
and
out
in
push
nop
xchg
sub
cwtl
mov
push
mov
mov
cmpsb
dec
fldt
pop
sbb
add
orl
mov
sub
out
les
cmp
push
xchg
push
dec
clc
lock
cmc
inc
ret
ljmp
jno
and
mov
fdivr
lds
lcall
adc
mov
jb
rorl
incl
pop
out
xorb
sbb
cmc
dec
sti
iret
ss
mov
dec
xchg
mov
movsb
pop
xchg
pop
ja
xor
fildll
adc
int3
in
in
scas
maskmovq
notl
mov
std
lock
pop
lea
dec
inc
je
mov
cmp
pop
xchg
xchg
push
pop
pop
xor
pop
dec
fists
push
cmp
or
xlat
jmp
out
add
shlb
fsub
adc
pop
sub
aad
xchg
and
rcll
stos
scas
out
cmp
in
push
pop
push
mov
and
push
push
cmpsl
xchg
add
fmuls
aad
mull
push
iret
pop
jbe
jp
xor
add
lods
ja
sbb
dec
mov
ljmp
enter
add
mov
xchg
sub
jecxz
jmp
add
sub
bound
push
testl
stos
xlat
mov
iret
or
sbb
jae
stc
cmp
lcall
hlt
mov
mull
imul
dec
outsb
pop
nop
xchg
jnp
jb
mov
pop
out
les
das
lcall
mov
cltd
push
mov
jno
mov
or
rol
insl
xchg
or
sbb
jbe
shl
adc
ss
out
lret
inc
xor
dec
sbb
mov
add
test
xor
gs
xchg
out
adc
pop
je
out
jns
cmp
js
imul
jle
notl
sbb
jp
mov
inc
pop
outsb
push
xchg
add
mov
cmp
fnstenv
adc
es
jnp
fisttps
popf
notl
adcl
and
fistpl
mov
cmp
outsb
jmp
pop
and
sbb
mov
push
bswap
and
movsb
notl
cltd
subl
pop
push
push
mov
adc
sbb
testl
testl
andl
pop
insl
dec
lret
loopne
mov
lods
and
addr16
popa
adc
cli
out
pop
push
mov
movsl
xchg
outsl
dec
shl
in
and
adc
mov
mov
dec
pusha
pop
xor
and
mov
lods
call
imul
jno
sbbb
xchg
in
dec
add
adc
sub
loopne
shrb
pop
or
cmpsb
mov
inc
pop
notl
jo
rorb
push
mov
pop
cmpsb
insl
sbb
ds
stc
int
dec
arpl
testl
and
enter
call
notl
jb
dec
xor
daa
std
sub
stos
jg
pop
push
jmp
notl
pop
and
sub
outsb
dec
idiv
dec
mov
sbb
fistpl
notb
int3
sub
dec
outsl
imul
notl
dec
cwtl
int
cltd
sub
das
adc
addr16
testl
xor
imul
xor
jecxz
push
sub
cmp
stc
xor
xor
mov
adc
or
leave
or
cmp
xor
sbb
lcall
sub
aad
jmp
and
mov
testl
jg
imul
sahf
pop
icebp
movsl
dec
lods
inc
push
mov
inc
mov
jl
fcmovnbe
cs
mov
icebp
xchg
shl
and
dec
add
sbb
sti
cmp
cmp
fs
jg
insb
xchg
fld
mov
jb
imull
orb
push
jle
fucomp
out
jecxz
adc
fnop
sbb
push
and
imull
xor
pusha
testl
push
in
jg
lea
fnstcw
jne
push
dec
adc
out
lock
mov
loope
test
push
xor
sahf
test
sbb
pop
jno
add
and
cmp
xor
mov
adc
jl
add
or
rcrl
inc
xchg
pop
in
idivl
shll
push
aaa
jp
leave
negl
cmp
lods
enter
cmpsl
mov
sahf
push
mov
sub
cmp
xchg
fisttps
xor
inc
jl
xchg
xchg
lret
pushf
sub
dec
push
and
mov
push
inc
icebp
jl
pusha
or
jp
cmpsl
loop
ret
mov
mov
arpl
aad
mov
mov
sub
in
mov
push
jo
xchg
ltr
xor
cmpsl
das
cwtl
in
push
stos
jecxz
mov
dec
sbb
ljmp
in
add
add
xchg
orb
nop
dec
jo
notl
dec
xlat
xor
stos
js
push
out
adc
mov
jg
loope
jp
push
adc
cli
cmp
aaa
test
loopne
stos
call
mull
inc
push
dec
jmp
sbb
xor
pusha
popa
xlat
adc
adc
mov
das
lea
data16
sub
div
ljmp
sti
lock
inc
inc
cs
dec
in
popf
push
sbb
adc
pop
jne
xchg
xchg
inc
push
xchg
push
sarb
iret
nop
inc
loop
or
cmpsl
ficomps
push
jae
mov
je
fcoms
cld
jns
testl
fwait
jp
jb
mov
div
pop
xlat
mov
pop
lcall
push
jle
notl
bound
pop
les
negl
in
divl
lds
cmp
inc
rcll
or
test
pop
xchg
or
inc
mov
sysenter
idivl
mov
and
js
imull
imul
test
xchg
adc
or
imul
adc
dec
mov
lods
xchg
ss
inc
fimuls
add
or
or
mov
idivl
movsl
inc
mov
sub
adc
mov
push
xchg
add
xor
push
in
xor
fcmovnu
adc
test
inc
aaa
mov
dec
dec
int
sbb
divl
push
xchg
loope
and
lds
xchg
mov
stos
arpl
ret
jns
pushf
sahf
xchg
sbb
sub
stc
cmp
jge
jbe
lahf
popf
cli
sub
xchg
adc
fcoms
push
inc
xor
xchg
sbb
shl
jne
pop
xor
imull
lret
negl
pusha
xchg
cltd
not
mov
and
orb
int3
int
pop
jo
sub
inc
adc
arpl
xor
iret
sbb
cmp
subb
enter
xlat
scas
mov
lods
push
leave
mov
pop
jg
inc
mov
jl
popf
mov
add
xchg
xchg
pushw
out
mov
stc
push
imull
adc
icebp
cltd
push
sub
push
inc
nop
and
xor
lods
cmc
or
mov
cmp
adc
mov
dec
push
iret
clc
sbb
addr16
pusha
loope
xlat
xor
in
lock
out
and
imull
fwait
xchg
xchg
imull
sub
pop
cmpsb
enter
fstpl
dec
inc
push
jg
in
cmp
xor
inc
push
fmuls
pop
jl
repnz
cli
notl
sub
jno
xor
and
dec
xchg
cmp
fidivrs
in
sbb
fsubrl
jmp
xlat
outsb
loop
int
shl
pop
inc
pop
dec
mov
fists
in
adc
cld
imull
or
outsb
inc
push
testl
add
stc
mov
fdivp
rcrl
shrb
sub
fucomi
push
outsb
testl
loopne
or
push
push
inc
js
movsl
mov
lahf
jno
mov
test
mull
sbb
xor
xchg
out
xchg
xor
push
cmc
and
sbbl
ds
dec
add
sub
pop
sarb
mov
or
jno
inc
jne
sbb
jge
dec
movsb
mov
rorb
lock
test
leave
ficoms
lock
mov
and
xchg
dec
out
fisubrl
lods
jno
jmp
movsb
lret
xchg
jp
push
mov
iret
hlt
push
leave
mov
push
pop
adc
insl
jmp
xor
jae
mov
push
shlb
fisttps
mov
cmp
pusha
in
inc
das
xor
lods
mul
popf
in
out
jmp
xchg
jle
lahf
push
js
mov
imul
jmp
repz
out
outsb
rclb
xchg
adc
cmp
adcl
sbb
inc
adc
ja
pop
jae
fistps
cltd
subl
jbe
fs
dec
xchg
inc
idivl
sbb
test
dec
test
test
in
rorl
mov
mov
into
push
loopne
testl
adc
jecxz
sub
xlat
pop
jl
cmp
test
cmp
mov
xlat
aaa
cs
in
loope
sub
push
push
mov
mov
sub
jecxz
decb
nop
add
imull
sti
fisttpll
lret
rol
test
xor
rcrb
adc
push
notl
stos
stc
push
leave
xchg
imul
out
aam
adc
dec
shl
stc
arpl
mov
fdiv
sub
or
subl
sarb
pop
xor
in
fists
lods
add
push
les
push
fisttpl
cmp
in
lahf
inc
testl
andl
cwtl
sarb
in
add
lods
sbb
cmp
das
shl
mov
adc
fcomip
add
add
lea
adcb
mull
imul
test
test
mov
jmp
fadd
push
jb
xor
out
cmp
push
scas
xchg
aas
push
push
xchg
sub
stc
pop
push
cld
and
pusha
ss
adc
and
testl
add
clc
notl
jecxz
repnz
lahf
testl
add
loop
push
jo
mov
int
xchg
or
faddl
add
pop
lahf
lret
add
out
or
or
adc
sar
jecxz
ljmp
mull
xchg
dec
dec
test
mov
dec
data16
int
adc
fistpl
push
lcall
mov
insl
lahf
out
divl
push
sarl
movsl
adc
mov
addr16
jns
and
rorb
xchg
jle
dec
mov
in
sub
je
out
jmp
pop
mull
sbb
push
fcoml
mov
push
cmpsl
jecxz
cmpsb
or
cmp
adc
push
add
shl
push
bound
test
and
fists
inc
push
stc
andb
xchg
pop
cmp
jne
inc
cwtl
jl
mov
js
or
aas
mov
sti
inc
in
shl
ss
inc
andl
dec
sub
popf
out
out
cmp
nop
jno
dec
adc
loopne
or
pop
ljmp
shrd
iret
pop
push
lods
xorb
adc
sbb
lds
xchg
out
or
sbb
xlat
enter
movsb
insb
bound
add
cmp
icebp
test
rcr
inc
pop
sub
fldt
insl
in
inc
xor
or
mov
adc
bnd
fnstsw
scas
inc
pop
xchg
lcall
fmull
add
or
pusha
cmc
ja
adc
repnz
mov
adc
stos
mov
push
loope
pop
scas
js
into
movsb
jmp
pop
pop
push
ss
inc
pop
add
cli
sbb
adc
or
mov
in
lds
mov
popa
push
aas
loopne
leave
stos
fs
jb
push
mov
sbb
or
mov
inc
pop
rep
in
pushl
movb
lods
pusha
jb
add
mov
dec
aas
es
add
add
add
ficoml
jae
clc
mov
aaa
push
xchg
scas
cmpl
out
jns
adc
lods
shl
jmp
and
in
jns
or
inc
popf
movsl
pop
mov
fstpl
push
fisttpl
inc
inc
cmp
jo
enter
mov
push
icebp
in
cli
pusha
jne
push
hlt
insb
sbb
lds
push
or
cmp
mov
dec
xchg
add
ret
ret
clc
add
mov
xchg
fimull
insl
ret
aaa
mov
jmp
in
test
jmp
js
inc
mov
out
mov
outsb
xor
xchg
insl
jb
sti
stos
inc
test
mov
scas
icebp
xchg
movsb
mov
sub
jns
insl
sbb
add
xor
mov
adc
adc
sub
gs
sbb
movb
dec
pop
jg
idivb
ja
dec
pop
sarl
fwait
push
mov
lcall
mov
push
push
fiadds
xchg
repz
add
mov
icebp
ficoml
insb
xor
cmp
jae
fnstsw
outsb
mov
repnz
fsubp
jae
stc
xor
ljmp
sbb
mov
mov
cmp
pop
scas
stos
repnz
in
inc
ret
lret
push
xchg
cmp
sti
hlt
sub
inc
pop
int3
inc
cs
jmp
xchg
mov
sarl
xor
test
inc
and
xchg
jmp
inc
pop
and
lods
in
push
inc
or
add
and
xlat
add
scas
neg
xchg
push
scas
pop
cmpl
mov
repz
lods
aad
mov
rcl
xlat
pop
in
add
push
xchg
adc
hlt
sub
mov
mov
fs
repz
ljmp
gs
xchg
fists
pop
mov
out
adc
movsl
mov
xchg
push
add
mov
int
mull
movsb
mov
testl
aam
push
idiv
inc
xchg
clc
adc
lret
mov
test
push
test
sub
dec
mov
test
add
xchg
test
adc
cld
or
pop
xor
dec
mov
mov
jle
jae
insl
cmc
push
popf
jbe
notl
scas
test
outsb
mov
xlat
sbb
mov
pop
ret
dec
xor
movsl
cltd
out
inc
test
icebp
jns
sbb
add
in
mull
mov
popa
negl
adc
loop
pushf
sub
sahf
adc
scas
imul
lahf
push
ja
aam
jb
popa
clc
jg
testb
fdivr
imul
mov
aaa
notl
clc
pop
imul
nop
inc
jmp
icebp
fwait
enter
push
and
pop
push
dec
xchg
or
push
sub
stos
lahf
sbb
repnz
mov
jb
pop
push
pusha
mov
not
lret
imul
pop
fxch
jbe
xor
testl
lahf
lods
xchg
cmpsl
jle
and
in
add
or
je
mov
xlat
repnz
leave
cmpsl
in
ret
icebp
pusha
add
push
je
and
and
insl
imul
daa
cmp
divl
mov
and
divl
push
js
xlat
jle
add
cmp
fistpl
int
cmpsb
fsub
rclb
inc
filds
movsl
das
inc
mov
lcall
test
loopne
insb
mov
jo
popf
cmp
pop
sub
lcall
mov
out
jae
xlat
dec
jne
es
cld
rorb
in
roll
jg
jmp
sub
int3
mov
enter
pop
mov
icebp
scas
push
fistps
push
cmpsb
mov
cmc
cmp
aas
adc
test
jo
adc
dec
add
sbb
test
testl
das
pusha
sahf
testb
fsubs
inc
enter
pop
pop
pop
loope
mov
lcall
orb
stos
inc
notl
push
cmp
movsl
or
push
popf
jo
ss
scas
jl
fcmovnbe
test
testl
movsl
inc
lcall
mov
idiv
or
xor
idivl
cld
daa
movsl
mov
xchg
xchg
sub
movsb
adc
lret
imull
into
pop
or
testl
test
test
out
es
mov
mov
jae
push
fwait
xchg
mov
divl
pop
leave
xchg
lcall
mov
mov
jno
not
jp
inc
es
test
push
lock
push
mov
jmp
faddl
and
jno
ss
pop
fistps
bnd
lahf
std
mov
cmp
and
divl
sub
divl
adc
xor
negl
sub
adc
fwait
insb
xlat
xchg
xchg
test
jg
push
fsin
pop
in
sti
icebp
mov
lea
add
je
mov
or
movsb
sbb
out
mov
mov
jns
xchg
mov
lock
xchg
push
bound
in
int3
test
sbb
xor
ss
fs
dec
mov
scas
xchg
xchg
inc
aaa
fistpl
call
lcall
lock
mov
dec
sar
sub
and
cwtl
lret
push
or
arpl
jp
inc
mov
rorl
hlt
push
pop
xchg
add
cltd
push
jb
push
mov
sahf
push
insb
cmp
ds
adc
jb
cmpsb
pop
mov
jb
jmp
add
inc
out
sbb
mov
dec
imul
ret
push
sti
fistl
jns
push
mov
cmp
xor
rcr
lret
das
icebp
mov
scas
inc
into
jns
sub
scas
cwtl
popf
mov
dec
sub
test
push
pop
mov
xchg
out
sahf
ss
stc
in
fiaddl
mov
scas
inc
mov
dec
sub
or
in
fistpl
mov
cmp
mov
mov
fildll
cld
in
mov
and
gs
sbb
fwait
dec
add
push
xchg
xchg
arpl
jae,pn
aam
movsl
negb
pop
rcll
loopne
xchg
jno
mov
into
out
imul
add
sbb
imul
xchg
mov
in
mov
pop
xchg
test
push
addr16
adc
outsb
cmpb
fwait
xchg
int3
mov
data16
mov
dec
mov
jbe
sub
jb
or
or
in
inc
or
ret
xchg
xor
fs
cmp
mov
sbb
outsb
dec
in
adc
mov
sbb
jmp
data16
dec
pop
mov
cwtl
sbb
pcmpeqb
loopne
sub
aaa
in
aas
xchg
ljmp
int3
ss
aaa
hlt
jg
push
push
xchg
jno
push
and
pop
add
lods
jp
pusha
outsl
mov
fwait
pop
adc
mov
jmp
int3
sub
rcll
xor
mov
lret
test
pop
cmova
faddl
push
std
test
sub
iret
scas
in
loop
jno
push
fnstcw
jl
sbb
jg
aam
pop
cmp
cmpsb
or
xor
hlt
add
mov
shr
xlat
and
sbb
cmpb
mov
pop
pop
scas
mov
movsl
mov
mov
cltd
gs
faddp
idivl
mov
mov
xchg
add
test
mov
insb
fnsave
cmp
mov
in
jmp
rcl
sbb
cmpsb
es
cwtl
or
push
xchg
ss
pop
inc
fidivrs
xor
lahf
push
jmp
decl
iret
push
dec
adc
push
out
test
in
repnz
mov
inc
insb
bnd
fcomip
aad
stc
lods
cli
fdivrl
ljmp
test
add
lret
sarb
lods
cmpsb
stos
xchg
cmp
fisttpl
add
cmp
rol
push
imulb
pop
faddl
fsubrp
mov
xor
pusha
xchg
popa
out
and
lret
pushw
cmc
inc
daa
jno
enter
inc
sub
cwtl
jmp
xchg
inc
movsl
rclb
adc
jno
xor
das
sub
out
lea
popa
scas
and
dec
outsl
es
sub
popf
mov
test
test
lea
push
xchg
fwait
jbe
and
pop
mov
dec
in
push
fimuls
clc
into
add
or
in
addr16
aad
bound
pop
test
mov
push
cmp
add
pop
sub
lods
mov
cltd
xor
jbe
outsl
sahf
aad
or
mov
and
dec
or
imul
loopne
add
pop
adc
fwait
pop
loopne
fimull
loope
sub
push
push
stc
xor
jne
adc
jp
sbb
jmp
loopne
dec
xor
scas
adc
xor
pop
xchg
out
fdivrs
imul
je
inc
filds
mov
test
cmp
cld
data16
in
loopne
jne
aam
sbb
ljmp
pop
push
out
icebp
icebp
push
fisubs
push
or
sub
cmpsl
fs
inc
push
lods
jp
jle
and
fists
js
icebp
loopne
sub
iret
sbb
cmp
aam
lods
rcr
sub
subb
int
sbb
dec
arpl
xor
lods
test
sub
mov
add
mov
ret
mov
scas
arpl
sub
insb
in
or
inc
data16
in
cmp
push
ljmp
ret
jecxz
test
cmp
mov
lods
bound
jb
out
shl
shlb
mov
mov
out
xchg
push
sti
mov
ljmp
mov
insl
sbb
test
in
repz
ret
call
cmp
testl
ror
jp
popf
inc
js
ficomps
divl
das
roll
jns
js
jno
negb
pop
dec
testl
cmpsb
pop
inc
sub
in
out
dec
xchg
dec
adcl
lret
adc
inc
pop
ret
and
pusha
pop
clc
pop
pop
pop
pop
in
mov
cwtl
xor
testb
nop
push
mov
jne
fcomip
shll
movsl
testl
jb
scas
notl
outsb
inc
or
xor
dec
push
test
lret
push
leave
pop
icebp
fcomp
push
xlat
cmc
sub
ret
fstl
ja
push
pop
jmp
cltd
rorb
mov
imul
subl
sub
or
jb
out
sub
idivl
mov
pusha
loope
cs
push
sbb
enter
inc
mov
jp
hlt
adc
cmpb
cmp
xchg
test
fs
mov
shr
fwait
inc
clc
dec
divl
xchg
jge
jb
mov
test
int3
sahf
xlat
in
dec
cmp
xorb
cmp
push
xor
cli
les
pop
nop
iret
in
loope
testl
pop
and
or
call
jecxz
icebp
fisttps
jbe
std
bound
pop
cmpsl
mov
jg
int
pop
neg
gs
jno
mov
add
imul
mov
xchg
push
xchg
fmull
push
nop
xlat
cmp
arpl
imul
and
jo
nop
neg
cmpl
mov
sahf
xchg
xlat
mov
cmpsl
pop
pop
outsb
jnp
or
shl
cs
mov
jbe
push
loope
data16
lds
pop
fnop
push
xor
cmp
out
xchg
dec
dec
sub
movsl
pop
dec
stc
add
adc
jl
mov
repnz
test
adc
xchg
ret
pop
imul
mov
out
sbb
jb
insb
pop
std
shrl
fcoms
adc
cs
and
out
add
fsts
jecxz
les
add
imul
pop
imul
mov
push
fcmovnu
sub
pop
test
pop
fmulp
lods
iret
imull
inc
shl
pop
ds
ljmp
jo
repnz
add
testl
fs
idivl
lret
adc
adc
push
ja
sbb
and
cld
xor
inc
movsb
mov
push
cli
mov
xchg
jmp
ret
dec
xchg
push
shrl
dec
movsl
mov
xor
pop
negl
sub
xor
addr16
push
test
call
xor
inc
lods
mov
xor
sub
in
jl
mov
outsb
scas
and
xor
jecxz
ds
mov
jg
mov
hlt
clc
jecxz
fldenv
arpl
adc
push
andl
mov
lret
loop
ss
popl
xchg
lret
mov
notl
cmp
xchg
sub
mov
jecxz
pop
cmp
xor
jnp
jecxz
data16
mov
andb
arpl
addb
dec
push
inc
aad
cmpsl
mov
dec
adc
and
rolb
imul
cwtl
and
out
ljmp
pop
sub
push
aam
mov
xor
cmpsb
mov
lea
lahf
mov
fidivl
sub
jae
mov
lods
clc
movsl
fisubrl
push
push
and
jl
sbb
imul
xchg
mov
inc
push
xchg
arpl
dec
push
lods
push
mov
mov
jge
enter
int3
dec
in
jp
in
cmp
mov
cwtl
and
mov
pop
adc
mov
cmp
aam
enter
enter
rcll
and
jb
add
loope
fadds
js
gs
jbe
pop
adc
push
pop
scas
testl
repnz
in
pop
test
mov
mov
fsub
sbb
test
testb
lods
pop
jp
in
xor
fisttpll
or
add
in
dec
cmp
divl
inc
inc
cli
xlat
pop
aas
inc
jmp
in
jae
jns
pop
jg
push
jo
icebp
popf
dec
adc
lods
stos
subl
roll
mov
adc
not
das
push
iret
in
testl
pop
push
push
imull
dec
add
lcall
mov
add
fsubr
in
add
xchg
aam
pusha
mov
or
sub
xor
jnp
xchg
adc
mov
imul
or
call
nop
xor
xor
xor
pop
notl
subb
push
clc
pop
inc
mul
dec
loop
iret
ficoml
mov
ss
dec
xor
pusha
fldt
mov
mov
sub
imul
sub
test
cs
inc
neg
adc
pop
add
mov
jg
cmp
dec
fbstp
fs
stos
in
xrelease
lock
pop
push
iret
loope
inc
or
cmc
ja
add
jge
inc
out
pop
icebp
mov
jl
adc
mov
fistl
fiaddl
out
pusha
adc
pusha
loopne
cs
sub
ret
dec
jecxz
xor
cmpsl
xchg
xor
jns
dec
pop
dec
mov
sbb
push
dec
mov
sbb
fnstenv
divl
mov
jno
cmp
out
ljmp
outsl
shlb
insl
mov
lods
sbb
ljmp
push
jo
xchg
out
add
mov
add
sub
je
mov
in
cmc
xchg
icebp
jo
stos
int3
xchg
das
push
pusha
push
test
jne
jecxz
sub
adc
les
ja
loop
add
dec
in
fcmovu
int
frstor
lret
mov
inc
loop
imul
lock
jno
scas
sbbl
mov
aam
sahf
add
jo
mov
fldl
sub
cmpsl
fmuls
imul
fs
cmc
xor
sti
jno
jbe
fsubr
fists
dec
jb
cmpsb
outsl
mov
outsl
pop
aas
mov
cwtl
push
pop
pop
mov
mov
cltd
movsl
test
sti
ljmp
add
outsl
out
pop
mov
mov
pop
xor
int3
cmpsl
movsl
pop
xchg
iret
xchg
mov
jl
popf
sbb
jmp
pushf
lahf
loopne
jmp
mov
cs
sub
pop
mov
les
iret
std
mov
fxch
xor
loopne
mov
out
mov
sbb
cli
scas
loopne
out
cmp
sahf
mov
int
out
stos
mov
cltd
dec
neg
or
subb
bound
fmulp
adcb
in
push
xchg
adc
loopne
daa
lods
and
mov
aaa
push
adc
mov
jle
sahf
mov
xchg
movsl
in
lret
loopne
push
add
outsb
fcmovb
test
sub
popa
mov
and
xchg
std
repz
repnz
and
loop
xor
inc
push
and
pop
adc
movsl
pop
movsl
popf
int
xor
shll
and
ljmp
xor
shll
in
out
lods
fdivp
mov
mov
inc
mov
inc
xlat
inc
fcmovbe
lahf
push
sbb
insl
mov
out
jmp
call
loopne
imull
push
inc
sti
add
repnz
ds
test
xor
xchg
xchg
sbb
call
popf
jp
mull
sub
mulb
outsb
push
nop
rol
mov
cmp
iret
push
inc
idivl
loopne
cltd
adc
inc
mull
cmp
cmpsl
cmp
in
sub
pop
mov
sbb
xor
pop
and
adc
sahf
xor
popa
inc
pop
xchg
mov
outsl
fbstp
iret
xchg
adc
add
scas
fstl
jnp
xor
cmp
int3
lods
inc
mov
jb
testl
idiv
gs
adc
push
fs
inc
aam
clc
fwait
insb
add
ss
adc
not
jge
arpl
outsb
mov
pop
fbld
fisttpl
fincstp
mov
cmpsb
sahf
dec
test
mov
inc
push
lcall
clc
daa
sub
cmc
push
xchg
fildll
test
xlat
cwtl
shl
dec
sub
pusha
xchg
andb
xchg
out
lret
stos
xchg
test
inc
pop
or
aam
lods
mull
xor
in
jbe
push
insb
nop
mov
stos
jge
mov
xor
popf
test
testl
dec
stc
movsb
out
insb
test
cmp
idiv
mov
sub
adc
inc
addr16
push
mov
mov
mov
out
push
mov
cmp
jne
pop
xor
jge
cmpsb
adc
sti
daa
out
scas
popa
jecxz
mov
jl
out
not
xchg
divl
mov
mov
insl
jb
ficoml
mov
xchg
mov
sub
das
bound
jmp
jp
xchg
fnstsw
fdivrs
outsb
fdiv
fldt
jge
push
fdivrs
cmp
divl
popa
mov
dec
pop
push
jle
jnp
add
out
push
aaa
xor
jmp
push
idiv
add
in
inc
or
lea
mov
notl
jmp
out
dec
es
sub
pop
mov
jecxz
cs
jbe
pusha
or
mov
push
mov
pop
cmp
jnp
mul
lods
ljmp
mov
out
lret
es
jl
jno
sbb
negb
xchg
sarl
out
ds
xor
addl
mov
int
push
cmp
lods
ja
dec
bound
test
aaa
xor
pop
mov
xor
divl
pop
xor
sbb
stos
lahf
subl
xchg
test
imull
add
dec
gs
aaa
scas
cmp
adc
and
data16
loope
fisubrl
js
pop
fbld
inc
mov
div
aas
lock
pushf
lds
push
out
rolb
sbb
pop
sbb
jg
or
lods
adc
negl
js
enter
mov
lret
jnp
fdecstp
fwait
mull
cmp
pop
pop
adc
mov
xor
or
std
sub
testl
sub
push
cltd
xor
xchg
mul
rcll
sbb
clc
xchg
and
sub
cmc
je
mov
es
repz
xchg
cld
adc
gs
push
dec
pop
add
je
cmp
pusha
scas
addb
pop
and
pop
push
divl
fists
add
out
lods
ret
mov
jae
icebp
adc
pop
out
frstor
sub
mov
or
jge
inc
push
xchg
ret
cmp
mov
divl
dec
cs
insl
hlt
xor
loope
xchg
push
testl
adc
cmp
sbb
jne
pop
inc
sahf
divl
mov
sub
pop
push
out
daa
js
push
inc
mov
sbb
call
and
in
xchg
sahf
xor
sub
jg
scas
sbb
mov
std
jae
lods
xor
idiv
sbb
sbb
sub
test
jno
decl
mov
sbb
popa
sbb
xchg
cli
lock
adc
cmpsl
out
or
dec
jns
xchg
mov
add
sub
inc
fildl
mov
rorl
fadd
mov
fistpll
testl
add
ja
push
xor
adc
xlat
jge
popf
lret
repz
xlat
rorl
pop
aam
push
arpl
inc
and
adc
fcomip
mov
adc
cmpb
add
clc
insl
jbe
xor
movsl
mov
sbb
shlb
notl
movsl
test
clc
test
nop
mov
jg
mov
movsl
add
into
ret
adc
dec
inc
ljmp
adcl
jle
push
push
jmp
cmp
aad
mov
mov
sbbb
mov
fsubrs
inc
push
pop
arpl
xchg
sbb
adc
push
dec
or
sbb
icebp
es
int
dec
pop
inc
sub
nop
jmp
mov
hlt
xor
movsb
pop
lahf
mul
push
sbb
xlat
lcall
stc
test
cli
cmp
jne
outsl
filds
cli
fiaddl
ss
out
into
inc
pop
dec
adc
addr16
cmp
xlat
jo
ljmp
fcomi
sub
or
je
sub
cmp
repnz
jns
mov
pop
mov
inc
hlt
loope
sarb
adc
mov
testl
pop
adc
scas
sbb
int
pop
xor
movsb
inc
jl
xchg
mov
sti
push
lret
decl
lock
sbb
add
outsl
push
push
push
sbb
pop
mov
outsb
mov
fidivrs
cld
in
xor
bound
hlt
filds
xchg
pop
idivl
mov
iret
fsts
add
je
dec
data16
cmp
cmpxchg
lock
push
aam
xlat
pop
and
jns
adc
pusha
mul
loopne
push
in
lcall
sub
push
negl
pop
xchg
mov
and
push
fistpll
mov
sti
fld
xchg
inc
xchg
mov
jbe
mov
stos
adc
roll
dec
gs
leave
call
lods
pop
js
jle
insb
sub
jns,pt
mov
testl
imulb
fucomp
cmp
testl
test
dec
in
pop
out
dec
mov
imull
jmp
lods
dec
mov
mov
out
xor
inc
jo
out
push
fucomi
sbb
adc
ljmp
push
add
fildll
lret
jns
ret
lock
arpl
aam
enter
fmuls
xlat
scas
mov
push
mov
insl
ss
in
lahf
stos
jecxz
fstl
inc
and
divl
aam
outsl
lret
testl
shll
mov
test
shll
dec
add
xlat
scas
rol
cmc
add
pop
in
notl
push
call
push
in
fwait
mov
idiv
test
lds
jno
out
sub
adc
in
xor
clc
mull
inc
adc
push
fwait
mov
rcll
cmp
pop
and
fists
or
add
dec
mov
testl
inc
inc
aam
aas
push
std
nop
fidivrs
notl
add
mov
cltd
cwtl
and
inc
xor
sub
fcoml
pushf
inc
lds
inc
dec
push
not
dec
sub
divl
mov
outsb
mov
nop
mov
scas
mov
mull
lahf
mov
out
or
adc
fwait
hlt
xlat
scas
rep
mov
jno
sbb
cli
lret
mov
sub
out
notl
jnp
mov
loope
js
daa
ds
cmp
mov
jecxz
inc
in
and
mov
sbb
test
mov
ficoms
lods
adc
lods
and
inc
loop
fnstenv
add
notl
rcrb
inc
and
aaa
mull
aam
mov
insl
sub
in
data16
jmp
fldl
cmp
jg
fdiv
cli
push
jb
std
aas
sti
notw
cs
pop
je
adc
jnp
int
lock
divl
sbb
cltd
push
cmp
enter
scas
test
jg
inc
and
sti
in
add
jecxz
cltd
fdiv
or
adc
xchg
mov
cmp
call
rcll
xchg
push
dec
xchg
lea
fmuls
stos
divl
ret
sti
and
inc
add
mov
addb
jno
cmpsl
int
lods
fcoml
fidivs
fildll
push
sti
imul
push
jecxz
jo
mov
jne
ja
in
xchg
ret
dec
sti
inc
pop
add
dec
daa
xor
testl
dec
jge
test
movsl
xor
xor
mov
sbb
lret
add
js
xchg
outsb
aas
mov
jb
lods
mull
xchg
add
mov
subl
test
mov
jp
sub
mov
out
mov
xor
mov
sub
idivl
jl
sbb
adc
scas
dec
push
fnstsw
inc
cmp
push
dec
loope
xchg
out
int3
mov
sbb
fdivrl
push
lods
mov
and
push
mov
fstps
fildl
mov
inc
jg
shl
add
sbb
sbb
dec
in
into
ljmp
adc
lret
lock
test
fdiv
cmp
cwtl
mov
iret
imul
loop
add
rcr
mov
pop
repz
push
pop
add
rorb
fxch
testl
repnz
or
test
pop
xchg
adc
sub
rep
testl
in
notl
adc
idivl
push
and
xchg
outsl
stos
enter
rolb
xor
xor
int
fists
mov
out
sub
jmp
outsb
ret
lcall
xlat
out
enter
testl
push
fcmovbe
pop
loop
popf
cltd
ss
je
out
xchg
and
andl
divl
pushf
add
cwtl
nop
pop
jns
jl
sbb
testl
popf
mov
pusha
pop
insb
mov
dec
dec
imull
adc
gs
outsb
adc
inc
out
rol
mov
scas
adc
pop
jbe
mul
push
addr16
scas
add
es
cmp
mov
push
push
ficoml
jle
inc
lea
sub
imul
insl
lret
sbb
or
sub
push
fldl
popf
mov
mov
mov
dec
pop
subb
fidivl
cmpsl
mov
outsb
mov
push
mov
addr16
hlt
dec
sub
fildl
sub
fistpl
ret
jbe
or
sbb
js
or
inc
je
xchg
sub
scas
mov
mov
dec
mov
ficompl
inc
cmpsl
dec
push
dec
xor
xchg
in
mov
xor
cwtl
es
jg
lret
pop
ja
xor
pop
jge
adc
add
and
add
scas
add
lock
repz
push
bound
mov
cli
int
add
sub
mov
jo
add
testb
xchg
jo
fwait
out
jle
pop
dec
push
ja
or
pop
test
popf
es
xor
inc
in
or
repnz
inc
or
repz
fidivrl
sub
daa
ficompl
ljmp
mov
insl
inc
repnz
cwtl
in
lret
jb
ret
or
out
ret
mov
push
je
cmp
push
clc
mov
lret
or
dec
fnsave
fs
sub
jle
fdivrl
outsb
lcall
mov
mov
jno
int
leave
push
mov
mov
daa
jae
ja
push
xchg
push
jb
jmp
out
lods
movsl
out
sub
shl
fs
lods
insl
sbb
nop
fsubr
mov
and
dec
sahf
insl
jns
jno
mov
dec
cwtl
gs
mov
jbe
pusha
popa
xlat
sub
cmp
mov
in
insb
insl
jmp
cmp
pop
int3
stc
inc
fisubrl
icebp
cmpb
mov
sbb
jmp
jge
fmul
add
cmp
sub
daa
jo
fdivs
loop
sbb
ljmp
cmp
sbb
jmp
push
aaa
inc
dec
lea
and
mov
mov
outsl
mov
pop
shll
sti
fisubrs
mov
stos
push
xchg
inc
jne
inc
mov
mov
dec
je
ljmp
test
mov
jmp
addr16
pop
loopne
pop
mov
cmpsl
in
fbstp
dec
jbe
dec
sub
add
or
mov
jbe
lods
mov
out
cmpsb
adc
mov
cmp
xor
dec
shrb
mov
jp
or
fs
pop
or
jb
xor
mov
mov
sub
mov
out
or
enter
pop
aad
jg
les
mov
cltd
add
in
cli
jne
pushf
scas
xlat
ljmp
cmpsl
clc
mov
mov
pop
push
push
adc
cmp
inc
mov
arpl
pusha
jmp
sub
and
rorb
sahf
jae
insl
adc
cmc
repz
pop
nop
imul
xor
ja
fucomp
jb
ret
mov
mov
hlt
lea
mov
push
outsl
cmp
hlt
pop
ja
jmp
xchg
sbb
lds
divl
cmp
cmp
pop
and
fs
stc
test
imull
outsb
ljmp
mov
cmc
imul
fsubl
fbld
js
pusha
jge
jae
pop
lret
xlat
clc
adc
pop
shll
xchg
adc
sub
mov
or
loope
inc
lods
xchg
pop
mov
mov
add
andl
sbb
push
push
xchg
adc
push
mulb
ja
test
mov
and
int
call
aaa
loope
sbb
mov
outsl
xchg
stos
or
frndint
xchg
in
inc
jne
fstpt
bnd
daa
and
mov
test
out
sub
or
into
jg
lds
in
imul
jmp
notl
jns
push
sbb
jecxz
jbe
idivl
push
stc
mull
adc
stos
add
pop
pop
xchg
data16
pushf
push
scas
dec
jo
xchg
stc
jo
out
outsl
sbb
cmp
inc
into
and
pop
fs
jmp
push
sub
and
in
out
pop
add
int
or
out
jo
xchg
adc
inc
neg
sub
outsl
mov
xor
int3
ret
lret
in
push
je
or
add
iret
or
ret
scas
mov
pop
pop
imul
out
std
ljmp
insb
jns
xor
scas
inc
dec
adc
jno
jmp
xor
cmp
push
aam
mov
clc
daa
fidivl
lcall
or
addr16
sub
push
aas
scas
xchg
test
mov
adc
movsl
cmp
ljmp
lret
xor
sbb
outsb
sbb
cmp
push
hlt
cmp
mov
sub
and
push
dec
sbb
andb
bound
pop
pushf
in
ds
sbb
sbb
mov
in
repnz
arpl
in
fsts
adc
adc
lahf
inc
neg
dec
orps
xchg
imul
shll
les
xor
cmpsb
or
sub
push
push
cmp
sub
pop
dec
lods
aas
ja
rcrb
repnz
loopne
pop
notl
addr16
lret
imull
xor
sbb
gs
subb
lock
xchg
imull
jp
xor
or
mov
popa
out
xor
or
std
sti
push
mov
imul
pop
mov
adc
or
jbe
test
outsb
pop
jae
lcall
fstl
and
cmp
std
xchg
add
pop
das
xor
fwait
dec
div
lds
es
out
jbe
lahf
lret
xchg
mov
movsl
stos
loopne
idivl
cs
enter
leave
sahf
push
push
inc
rorb
lahf
xlat
pop
adc
loope
adc
inc
dec
shl
mov
js
pop
jecxz
idivl
inc
das
or
dec
and
mov
repnz
nop
daa
sub
lock
push
pop
lcall
loope
cmc
je
push
mov
negl
lahf
jae
imul
scas
cmp
or
scas
mov
adc
add
xlat
pop
push
dec
mov
cmp
repz
push
xlat
gs
pop
sub
sti
rcll
pop
and
out
push
and
xor
mov
ret
push
pop
sbb
cmpsl
fdivp
xor
jmp
cmpps
repz
stos
neg
popa
lahf
stc
out
iret
call
adc
repz
cmc
adc
push
negl
push
xchg
cs
xlat
push
pop
in
int3
push
out
stc
sbb
push
and
pop
iret
rcrl
fists
das
sub
arpl
inc
and
in
data16
out
pusha
cmc
aam
das
pop
movl
lahf
jmp
cwtl
std
in
mov
repz
sub
adc
lret
pop
push
dec
enter
shl
jae,pt
pop
in
or
jmp
pop
and
testl
es
shl
xor
xor
outsl
idivl
cld
loope
stc
cmpsb
aas
lock
movsb
in
mov
jne
mov
in
inc
pop
lret
pop
jle
and
inc
out
inc
mov
imul
xchg
mov
adc
xlat
add
inc
dec
mov
push
je
outsl
dec
jae
ja
idivl
xor
gs
sbb
sub
xlat
xchg
sub
das
sbb
divb
testl
loop
cmpsl
mov
faddp
mov
pop
scas
xchg
daa
xorps
sub
out
out
test
mov
jae
mov
sti
sti
out
or
ds
icebp
mov
movsl
scas
xlat
xor
pop
dec
insb
jg
cmp
sbb
outsl
inc
mov
and
xchg
and
das
and
and
mov
lcall
lods
psubusw
bound
mov
dec
testl
mov
jnp
adc
ljmp
sbb
aad
shl
sub
imull
mov
fdiv
jp
sarb
jmp
or
outsb
xor
imull
xchg
xorb
and
and
aad
pushf
imul
jmp
popf
divl
cmp
sarl
out
fdivs
imul
divl
push
sbb
lods
mov
out
add
xor
gs
outsb
iret
cmp
mov
fstpl
not
stc
popf
mov
or
divl
insl
ficoml
or
test
or
sbb
mov
cmpsl
in
push
in
mov
sub
pop
iret
add
popfw
jno
adc
mov
sti
in
scas
repnz
notl
int
sub
and
testl
sbb
pop
testl
outsl
arpl
adc
xchg
inc
adc
and
adc
jg
or
mov
dec
mov
mov
cwtl
jmp
not
mov
fsubl
xchg
sub
sub
push
push
adc
pxor
test
mov
dec
jo
jge
inc
lret
lds
js
idivl
call
xlat
mov
cmc
mov
pop
iret
add
mov
cmc
xor
pop
divl
je
mov
mov
inc
and
push
pusha
neg
popa
pushf
pushl
or
js
add
pop
rclb
fdivrl
xlat
iret
jecxz
and
sbb
pop
shl
mov
mov
add
cmc
mul
sbbl
bswap
aad
adc
fsts
fwait
cli
into
dec
push
cmpsl
pop
mov
inc
sahf
jle
das
stc
or
es
divl
lea
push
out
sbb
loop
mov
push
div
adc
xor
pop
out
add
lock
ja
fildl
scas
ds
xlat
adc
mov
repz
shl
jnp
test
test
jo,pn
test
sub
dec
sbb
mov
fdivl
js
pop
adc
out
ret
xor
push
push
xchg
push
jecxz
push
inc
or
jmp
sub
adc
inc
sub
mov
sbb
lods
mov
arpl
outsb
adc
fisubl
sub
out
jne
movsb
test
xlat
jl
fsubrl
add
lods
imul
jecxz
test
xor
out
pop
mov
imul
outsb
cmp
iret
div
inc
scas
mov
or
mov
testl
adc
loope
notl
pop
movsl
cli
scas
mov
mov
gs
mull
lcall
push
inc
mov
xlat
cmp
ljmp
fdiv
add
push
and
test
jg
adc
push
divb
bound
imul
repz
sti
ja
xor
fcomip
leave
loop
test
arpl
adc
xchg
mov
mov
dec
sbb
mov
cwtl
sub
xchg
es
inc
repz
xchg
push
repz
out
aaa
push
xor
push
dec
cmp
lds
or
xchg
dec
in
gs
sti
hlt
out
ljmp
sub
pop
xchg
jmp
divl
push
loop
mull
jl
cmp
dec
in
push
push
popa
lcall
mov
es
enter
movsl
sahf
scas
mov
sub
adc
sbb
inc
push
rcrl
negl
daa
jecxz
insl
loopne
xlat
lcall
aad
adc
stos
cli
cs
mull
popf
out
idivl
scas
fwait
or
inc
xlat
xor
inc
cmpsw
mov
std
pop
fbstp
divb
outsl
inc
pop
testb
movsb
rcl
arpl
sti
fucom
out
mov
jae
test
xchg
popa
fcomi
inc
lcall
cld
jb
cmp
insl
fsubl
out
in
stc
div
dec
mov
xlat
jns
test
dec
fwait
addr16
mov
jg,pt
jle
cmpsb
dec
mov
xchg
mov
scas
in
out
pop
push
jne
mov
push
ss
ds
or
fdiv
pop
test
out
xchg
xorb
add
test
adcb
negl
sahf
mov
shrb
cmp
movsb
fs
outsb
jl
in
mov
idivb
mov
adc
clc
out
mov
xlat
xor
fisubrs
icebp
jae
fwait
push
iret
fstpt
out
mov
push
sbb
fucom
xchg
in
push
fcoms
lock
shl
xchg
fucomp
leave
shl
lea
cmpsl
pop
js
aaa
sbb
and
sbb
or
test
cltd
repz
jnp
fsubrs
dec
nop
add
push
mov
repz
idiv
test
movsl
jge
mov
cmc
sub
add
cmp
mov
jae
add
cwtl
pop
imull
inc
adc
dec
cmc
mov
jle
or
repz
dec
daa
idivl
mov
or
mov
mov
sbb
ljmp
sub
aas
in
movsb
xor
adc
das
jmp
les
xlat
dec
scas
cmp
testl
mov
loope
xlat
jle
sub
gs
ljmp
icebp
loope
lods
pop
out
fwait
mov
rorb
and
lock
jmp
xor
push
fistl
push
dec
pop
jae
cwtl
into
and
mov
fs
dec
pop
insb
sub
cmc
sbb
out
xlat
pop
sub
jnp
adc
fsubp
xlat
pop
dec
arpl
jecxz
std
loope
repz
cltd
cli
adc
or
cmp
xchg
das
lcall
dec
or
xchg
jns
xor
cli
adc
out
inc
cld
xchg
xor
or
lea
mov
cmc
gs
add
stos
inc
or
mov
mov
testb
mov
mov
cli
popa
shlb
xchg
jns
jg
adc
and
push
xchg
sbb
dec
icebp
loopne
mov
mov
lret
sbb
notl
mov
mov
sub
add
repz
iret
divl
jmp
pusha
notl
ret
idivl
fs
call
push
testl
call
cli
xlat
mov
bound
repz
notl
add
mov
cmp
ljmp
cmpsl
ret
mov
imull
js
xchg
push
mov
fwait
push
inc
fsubrl
add
ffreep
outsb
jb
pop
cmpsl
cli
scas
sub
xor
inc
out
cmp
xchg
jg
push
popfw
adc
mov
ljmp
jb
push
xor
jae
orl
js
out
testl
or
mov
ja
stos
inc
push
push
loope
jecxz
pop
test
loop
lock
or
rep
xchg
mov
pop
ja
out
sbb
idivl
lahf
inc
daa
push
sub
mov
sub
jbe
push
and
xchg
push
or
fucomip
mov
sbbb
loope
fdivs
or
sbb
mov
pop
mov
test
movsb
hlt
imul
lahf
popa
mov
mov
or
add
xor
ljmp
or
fists
cmpsl
int
cmp
lcall
in
call
call
mov
sti
popf
mov
xor
pushf
test
out
push
sub
pop
scas
stc
loope
nop
xchg
fiaddl
inc
data16
pop
out
cltd
mov
sbb
xor
das
jmp
and
out
adc
pop
mov
idivl
fs
repz
and
push
cmp
mov
imull
fdivr
sarl
std
call
xlat
xchg
cmc
aaa
pop
ss
psllw
std
popa
push
loopne
pusha
xchg
shrl
sub
jnp
jns
jns
pop
fbld
mov
pop
adc
xchg
fnstcw
pop
mov
xchg
aam
push
nop
dec
jo
push
test
adc
jno
shlb
popa
std
adcb
push
cmp
sbb
pop
pop
ss
mov
test
xor
inc
xchg
fstl
adc
pop
sarl
or
jns
jns
jns
jns
fnstenv
xor
fisubrl
pop
mov
ljmp
pop
pop
pop
cwtl
pop
xchg
shlb
shlb
ss
or
std
jmp
push
out
gs
fnstcw
push
and
jmp
imul
pop
or
push
rclb
stos
insl
cmp
push
xlat
shl
mov
daa
nop
inc
jo
push
cld
xor
cs
addr16
mov
dec
lcall
test
and
aad
rcrl
fisubrl
pop
mov
lock
mov
sub
sbbl
xlat
push
mov
mov
xor
pop
mov
add
icebp
cmc
xor
out
cmp
das
mov
mov
call
hlt
imul
clc
or
enter
jg
insl
push
stos
test
and
data16
xor
pop
mov
and
movsl
mov
fidivs
ljmp
lock
push
stos
imulb
aad
xchg
mov
mov
test
je
xchg
push
pop
ljmp
jmp
push
or
pop
adc
pushf
xor
pcmpeqd
test
movsb
add
pop
cli
fdivrp
pop
mov
pop
fstl
xorb
movl
mov
addl
pop
cli
sahf
cli
push
cli
cmp
cli
cmp
cwtl
pop
sub
adc
push
sub
jmp
imul
repz
nop
lock
push
les
fsubr
jle
in
mov
nop
sub
loope
popa
xor
adc
sub
mov
jle
add
test
and
pop
aaa
rclb
cmc
xor
insb
aam
loope
ret
shrb
and
xor
pop
mov
xchg
rcr
jno
dec
xor
pop
adc
adc
adc
jnp
pop
je
pop
sahf
mov
adc
outsl
hlt
in
enter
popf
fidivrl
cmp
and
jmp
ss
stos
pop
sub
jge
jns
mov
jno
jae
insl
xchg
xor
push
pop
ljmp
rclb
es
push
mov
ss
push
shrb
fldenv
clc
std
sbb
popl
mov
pop
data16
pusha
ret
hlt
cmp
sub
in
shlb
ret
fmull
mov
mov
test
test
sbb
xchg
inc
mov
aam
fs
mov
adc
push
in
sbb
daa
dec
adc
jecxz
in
push
push
imul
xchg
ss
adc
and
cld
in
push
movsb
pop
jecxz
inc
shlb
sahf
ss
bound
push
iret
xor
push
adc
shlb
dec
jecxz
outsl
dec
icebp
adc
lods
cs
test
push
lods
xchg
mov
in
lock
pop
test
jecxz
in
sbb
nop
mov
adc
dec
xor
pop
mov
jmp
push
icebp
cmc
pop
je
roll
mov
scas
jmp
loopne
js
push
adc
xchg
lock
shlb
cmovge
mov
pop
das
sub
mov
movsl
push
jo
jb
icebp
sub
lock
mov
push
outsl
std
out
std
outsb
mov
lock
push
icebp
je
rcrl
daa
test
xlat
bound
ficompl
ss
loop
add
rolb
jae
nop
sbb
xor
mov
movsb
dec
pop
test
mov
ljmp
push
jo
mov
xchg
iret
adc
push
push
pop
mov
ror
push
mov
dec
pop
push
fcmove
pop
push
rclb
and
and
pop
ss
sub
sub
push
arpl
in
xor
arpl
cmp
shlb
fnstsw
add
push
jecxz
push
inc
shlb
xorb
lock
cs
es
loopne
fmull
cltd
lods
arpl
sub
sub
mov
test
push
cmpl
jp
xor
loope
fisubs
fldcw
out
shl
rdpmc
or
and
xor
inc
hlt
roll
es
and
push
push
je
xor
xor
xor
and
es
popf
ss
mov
insl
cmpsb
popa
mov
outsl
pop
dec
ret
mov
adc
add
test
test
jecxz
and
nop
adc
andl
xchg
jo
pop
mov
xor
cmp
aam
movsl
xlat
adc
js
add
in
jno
pop
sti
fidivl
shlb
fdivl
cmpsb
adc
and
cli
gs
xchg
push
stos
adc
jne
jg
adc
ss
shl
mov
in
mov
rclb
mov
xor
lock
or
outsb
repz
repnz
in
icebp
cwtl
repz
ss
xchg
into
jb
mov
ja
test
and
pusha
outsb
push
popa
push
xor
lahf
arpl
adc
test
sub
imul
aam
inc
adc
xor
ds
pop
rclb
sub
mov
or
push
out
xor
adc
jo
push
lahf
xor
shll
fadds
scas
movsl
mov
in
in
imul
mov
ja
cmpsb
xchg
cltd
cs
pop
jae,pn
mov
outsl
push
int
cmpsb
push
inc
fisttps
pop
loopne
repz
xor
mov
fucomip
ss
ss
shl
arpl
test
xlat
xchg
jmp
data16
xchg
push
adc
popa
in
xlat
mov
rclb
dec
xor
in
out
scas
scas
jno
in
lods
je
adc
inc
jns
pop
arpl
push
jbe
cmc
xor
test
adc
add
add
add
add
add
add
popa
mov
xchg
out
into
popf
out
mov
test
xchg
test
jg
fisubrl
test
in
ja
xlat
rorb
fstl
cmc
sbb
or
ret
test
into
jle
rcl
mov
xor
mov
int3
xchg
sub
jns
jns
cmpsb
pop
movsb
fiaddl
inc
flds
out
jnp
cmp
xchg
sarb
and
loop
ss
cmc
into
shll
pop
std
int3
push
sub
mov
sarb
adcl
add
jge
jnp
fnstenv
xor
pop
mov
xchg
mov
jbe
outsb
ss
es
cmpsb
push
movsb
mov
inc
aaa
pop
jne
lods
cmovl
sub
out
add
jno
adc
outsl
jge
sbb
push
inc
mov
push
dec
and
xor
add
adc
pop
xor
or
sub
cmpsl
data16
add
into
fists
mov
mov
cmpb
mov
clc
fsubs
ja
xchg
push
pop
push
hlt
and
xor
add
xchg
or
jns
jns
cltd
arpl
pop
dec
bound
cwtl
jmp
notb
jmp
arpl
loop
fldt
clc
cmp
fdivl
lock
jg
popf
outsl
scas
pop
lret
in
repnz
jecxz
arpl
loop
sbb
sub
sub
lret
nop
lret
push
xchg
push
inc
negb
aad
repz
push
jmp
jmp
mov
adc
mov
add
or
cli
loope
mov
xor
repnz
jno
lock
out
in
adc
in
gs
adc
adc
repnz
jno
lock
jo
dec
std
pop
std
sarb
sub
fldenv
fsubr
pop
fucomip
mov
movsl
fnstsw
mov
nop
push
leave
xchg
push
fadd
sbb
int
in
push
xchg
je
sarl
cmp
mov
push
ficompl
inc
jg
push
add
xchg
rcl
xchg
mov
nop
loop
fstl
mov
pop
or
in
arpl
mov
pop
std
pop
xchg
mov
ljmp
xchg
jbe
mov
lock
ffreep
test
aaa
outsb
add
std
adc
inc
cld
push
jl
sti
xor
test
adc
add
add
add
movsl
js
and
xchg
ficoml
pop
xchg
fsts
pop
xchg
cmp
je
pop
adc
pop
adc
lret
jo
mov
add
add
add
loopne
ss
fisubrs
adc
xchg
mov
mov
leave
fld
push
test
loope
and
ss
repz
in
loope
lock
leave
scas
mov
and
pop
mov
fldcw
push
fimull
add
outsb
flds
xor
push
inc
and
xor
pop
in
push
jge
fnsave
leave
mov
cli
xchg
dec
roll
incl
cltd
mov
inc
fwait
lea
jno
rclb
mov
nop
and
push
pop
scas
shlb
mov
dec
call
adc
sarb
fcoml
test
ret
call
sbb
sbb
cwtl
xchg
xor
jmp
jo
pop
jp
push
cmp
xchg
sub
mov
nop
push
jo
push
mov
rorb
mov
cli
outsb
cli
insl
cmp
jmp
pop
addr16
es
add
pop
ficomps
pop
rclb
jo
int
and
jne
jecxz
fldt
mov
out
push
dec
push
in
and
xor
add
adc
std
mov
jle
jmp
mov
test
insb
call
or
pusha
ss
mov
mov
sarl
adc
jnp
fnstenv
cwtl
or
cld
xor
and
pop
xor
or
pop
and
mov
add
cmp
jp
mov
sbb
xor
xor
jge
jnp
cltd
in
mov
mov
add
test
je
and
push
aad
pop
fldenv
push
jle
xlat
loope
mov
xor
jb
ja
cs
adc
les
ret
stc
adc
stos
ja
rcr
mov
adc
jb
xchg
orb
ljmp
mov
push
pop
out
movsl
and
jno
inc
dec
jne
mov
es
and
dec
and
xchg
push
jg
jge
fwait
leave
fsub
mov
cld
into
lock
ss
pop
ja
je
adc
mov
sub
repz
outsl
fisttps
pop
or
inc
dec
arpl
orl
mov
pop
fcoms
ss
lea
rorb
int
mov
repnz
pop
cld
pop
sbb
mov
sbb
push
mov
inc
xchg
jge
push
jo
cmp
or
sub
adc
inc
adc
adc
ss
push
cs
xor
sub
pop
dec
and
adc
add
add
add
add
add
add
addr16
adc
icebp
dec
andl
pop
call
out
icebp
test
bound
sbb
std
lcall
fildll
dec
enter
and
cmp
inc
xchg
adc
test
xchg
lock
ret
or
pop
loopne
cmp
fdivrs
adc
sub
leave
jns
jns
jns
jns
cltd
iret
jnp
in
jo
pop
push
rclb
mov
nop
fbstp
adc
jmp
sbb
call
into
icebp
mov
test
mov
mov
leave
pop
rcrb
nop
sbb
cmc
lock
cs
leave
mov
shrb
pop
jg
adc
jecxz
test
nop
push
jo
mov
nop
mov
into
mov
mov
mov
mov
jno
pushf
lods
mov
sub
test
mov
mov
cmc
xor
or
repnz
out
hlt
js
xchg
pop
fildll
lock
cmpsb
sub
repz
rcrb
mov
jo
fucomp
add
loop
mov
mov
jo
push
test
out
gs
push
and
fcoms
test
jmp
pop
ds
sbb
push
roll
push
jle
mov
frstor
inc
mulb
mov
ja
add
data16
lds
jle
gs
mov
or
nop
cli
jo
xchg
aam
jae
mov
push
ljmp
out
lds
ret
pop
popa
pop
add
xor
cmp
pop
or
lock
outsl
fcmovu
pop
cmp
outsb
rclb
push
mov
rorb
fdiv
out
outsb
out
aam
test
mov
out
xor
in
pop
call
rorb
add
xchg
popf
pop
xor
loope
cmp
dec
shlb
or
mov
dec
pusha
pop
push
mov
in
mov
outsl
out
sar
xchg
cmc
shll
cltd
jnp
mov
imul
mov
mov
stos
and
xor
mov
mov
jle
fsts
nop
fucomip
push
cmp
mov
je
mov
movsl
idivb
scas
jecxz
jno
out
push
push
shrb
ss
lock
push
xchg
in
nop
push
add
rcrl
jb
lcall
xchg
loope
mov
pop
xchg
add
fldl
cmp
out
stos
pop
cmpsl
fldenv
pop
mov
jbe
scas
push
dec
inc
test
xor
rep
dec
jge
cwtl
mov
mov
adc
scas
mov
stos
mov
and
movsb
and
pushf
adc
adc
push
mov
push
loopne
dec
cmpsl
sbb
lret
cmp
mov
jg
mov
jae
sbb
pop
jmp
mov
push
pop
jae
adc
push
mov
sub
ficomps
negl
fidivrl
fwait
insl
pop
xor
mov
ret
lock
pop
neg
jbe
hlt
fnstenv
adc
add
xorl
mov
jbe
hlt
xorl
jg
jge
jnp
cltd
jmp
arpl
movsl
adc
movsl
fbld
in
dec
pop
adc
in
flds
pop
push
jmp
push
and
xchg
data16
adc
hlt
push
mov
gs
push
out
out
call
jmp
fsubr
fnsave
pop
fstpt
pop
mov
shrb
es
insl
cltd
jb
mov
imul
push
jmp
push
out
pop
in
movsl
testb
adc
fcompl
fistl
or
outsl
jo
in
sub
fsubr
mov
ss
ja
mulb
jbe
cmc
pop
pop
cmpsl
scas
jae
mov
std
icebp
std
jno
lock
jns
out
std
outsl
std
out
mov
imul
pop
jmp
imul
int3
imul
imul
in
popa
insl
sub
and
push
in
sub
scas
imul
mov
movsl
sub
sub
sub
sub
sub
adc
adc
fsubrs
iret
stos
insb
mov
ljmp
adc
jb
sbb
movsb
out
in
in
mov
gs
pop
adc
loop
bound
loope
popa
adc
adc
fildll
out
addr16
jbe
jo
out
inc
outsl
push
out
and
xor
test
popa
fs
jecxz
xor
pusha
or
push
insl
pop
jle
iret
outsb
fnstcw
pop
js
mov
lret
ss
repnz
mov
loope
popa
sub
call
pop
sub
scas
pop
push
sub
fdivr
pop
std
pop
jle
mov
pop
inc
mov
in
lock
sub
jb
adc
daa
outsb
cli
insl
cli
insb
cli
imul
and
push
adc
fs
pop
fcom
call
fdivs
jmp
xlat
xchg
mov
xchg
repnz
out
cmpsl
ja
call
aaa
jmp
out
push
mov
std
jecxz
loop
jbe
loopne
neg
mov
xchg
push
jmp
std
fcomps
divb
cmpsb
hlt
frstor
lock
sbb
loop
ficoml
test
fninit
call
and
push
in
adc
mov
cwtl
fcomp
push
mov
sbb
cwtl
fsubs
sahf
hlt
in
fcomps
in
in
adc
adc
adc
iret
fucomip
mov
jmp
out
in
stos
adc
inc
mov
insb
lods
adc
arpl
jb
loop
loope
popa
push
bound
fists
loope
pop
pop
ret
pop
adc
fdivrs
cmc
fnstenv
pop
adc
add
add
add
add
add
add
jns
jns
pop
push
sbb
sbb
cltd
arpl
je
bound
cs
sahf
pop
outsb
aaa
fwait
pop
mov
jb
adc
imul
fldt
inc
je
mov
fdivl
pop
loope
pop
pop
fcmovu
pop
pop
pop
pop
outsb
rclb
in
mov
nop
imul
in
add
adc
add
add
add
add
add
add
add
add
movsl
pop
xchg
xchg
jmp
jae
and
and
push
loopne
jae
arpl
sub
pop
mov
jne
jo
push
jae
jo
cli
insb
cli
imul
movsb
movsl
pop
into
jecxz
mov
outsl
and
jb
jno
outsb
into
insb
jae
imul
gs
and
pusha
scas
pop
push
cmpsl
pop
mov
jne
lods
xor
popf
lock
xor
pop
call
pop
addr16
pop
fisubs
in
in
loope
popa
cli
pop
cli
pop
cli
fstpt
dec
cmc
pop
popf
xchg
fdivp
add
in
pop
jmp
pop
ljmp
jecxz
loop
fists
mov
cli
pop
cli
fsqrt
fdivrs
cmc
nop
jb
outsl
pop
ss
aas
ljmp
mov
addr16
push
addr16
in
xor
pop
pop
fistpl
and
lret
mov
mov
in
outsl
push
out
into
jmp
xor
out
cs
add
adc
fdivs
notb
jbe
je
xor
repnz
jb
mov
mov
imul
data16
in
gs
push
pusha
psubsw
insb
gs
repnz
out
lret
jmp
ljmp
mov
cltd
pop
sub
sub
test
pop
jo
es
pop
imul
jmp
fld
insl
and
jg
popf
jno
imul
sub
insb
jecxz
sbb
fimull
repz
imul
pop
ljmp
repnz
pop
pop
gs
pop
pop
in
rcl
mov
nop
jae
test
adc
and
in
aaa
sub
fistpll
pop
cltd
pop
int
pop
notb
adc
pmuludq
loopne
add
mov
mov
in
loope
ficomps
pop
pop
pop
pop
add
sbb
pop
jae,pn
repnz
mov
jmp
mov
xchg
cltd
pop
fcomps
xor
pop
jbe
cmc
adc
outsl
jae
fsts
push
out
lret
ss
imul
pop
imul
mov
adc
jb
jae
pop
cli
pop
pop
pop
pop
pop
cmc
loope
adc
mov
jb
repnz
fidivs
adc
sbb
cmc
mov
jae
pushf
jb
pop
jno
stos
dec
outsl
movsl
icebp
push
pushf
imul
mov
data16
popa
stos
pop
pop
sbb
mov
jo
jle
ret
out
addr16
mov
in
popa
das
std
fdivr
pop
pop
xor
es
jne
jo
movsb
outsl
pop
outsb
mov
outsb
xor
gs
sub
paddusw
insl
fwait
mov
lock
out
lret
imul
jb
push
in
pop
ja
cmp
push
jmp
in
loope
das
adc
adc
insb
pop
pusha
imul
sub
in
jne
stos
test
outsl
jae
pop
in
shrl
push
fs
pop
fnsave
out
ja
xor
das
add
ljmp
push
std
pusha
jle
jae
pop
out
fiaddl
jecxz
cmc
imul
scas
outsl
mov
adc
push
cli
out
outsw
bound
inc
push
movsb
pusha
movsl
outsl
pop
mov
sbb
mov
fstpl
les
insb
xchg
testl
sbb
pop
insb
mov
sahf
adc
push
loopne
mov
push
jecxz
movsb
mov
repnz
enter
cmpsl
insl
pop
push
jae
je
es
mov
movsl
repz
jmp
jecxz
insb
popa
pop
xor
fcmovbe
sub
insl
imul
lcall
lds
mov
jae
jb
scas
jmp
fcomp
mov
sbb
shlb
jb
jno
pop
call
jno
fnsave
jno
sbb
ljmp
mov
flds
repnz
pusha
faddl
arpl
jge
outsb
lahf
insl
jmp
imul
gs
popa
cli
pusha
pop
pop
jle
xor
mov
loop
data16
loope
fs
and
fs
insb
out
les
add
movsl
pop
addr16
out
hlt
xchg
repz
jae
sub
push
int
adc
test
xchg
sub
fsubr
arpl
ljmp
out
in
cld
jo
iret
daa
out
mov
jecxz
popa
jbe
and
jne
jmp
arpl
popf
ss
lret
repnz
push
jno
imul
pop
mov
ret
popa
mov
mov
jmp
pop
arpl
mov
mov
mov
repz
push
out
arpl
insl
xor
jecxz
cwtl
mov
je
in
mov
fisubrl
out
insl
pusha
push
mov
push
in
shrl
fstps
pop
iret
imul
xor
jbe
pusha
cmpsl
movsl
icebp
fsubl
imul
negb
test
mov
add
popf
imul
call
gs
jecxz
cmc
xlat
testb
outsb
arpl
and
loopne
fidivl
pop
jmp
or
addr16
pop
mov
popf
das
hlt
lret
repnz
movsl
std
pop
sbb
push
imul
sub
mov
push
loope
popa
mov
fisubrs
adc
push
pop
add
je
ja
aam
jne
in
je
jae
add
test
loope
loop
loopne
in
fisubrl
sub
scas
repz
es
icebp
lret
push
fcmovu
pop
pop
movsb
and
pop
and
mov
jmp
mov
jne
inc
je
pop
aas
jb
out
jno
pop
mov
nop
fucomip
jne
mov
mov
and
mov
imul
add
bound
add
cmc
iret
movsl
shll
mov
jne
mov
pushf
imul
into
js
lock
xor
mov
mov
ds
push
ja
idiv
icebp
xchg
mov
jno
sbb
shl
mov
loop
adc
lret
and
leave
loope
xchg
sub
mov
shrb
aaa
je
iret
das
push
xchg
push
into
push
outsl
adc
je
mov
lds
jae
and
imul
repnz
fdiv
cs
xchg
sbb
fnsave
xor
push
sbb
push
pop
loopne
out
hlt
jae
fdivs
pop
xor
jl,pn
or
in
jbe
xchg
mov
xchg
cmpsl
jecxz
outsb
daa
shrb
pusha
jo
mov
jae
pop
jmp
ja
mov
pop
aas
loopne
xorl
lock
filds
xor
test
jnp
hlt
mov
fldt
insb
lods
fucomp
ss
push
add
out
sbb
je
xchg
es
and
push
mov
sbb
ret
lock
xchg
shlb
popf
lcall
xor
xor
adc
bound
pop
icebp
pop
sarl
repz
mov
jno
xchg
fisubrs
out
in
shl
dec
push
sbb
lods
ror
sub
xor
fldenv
fisubrl
dec
sub
jb
cmp
jae
test
mov
popa
pop
cmc
insl
push
in
and
popa
or
test
cmp
pop
lods
mov
aam
hlt
jb
ja
test
inc
xlat
icebp
mov
sbb
aas
nop
ja
fsubrl
hlt
mov
loope
jbe
in
cmp
scas
pusha
in
out
sahf
aaa
mov
mov
lods
outsb
cmpsl
pop
push
cmpsl
fldt
mov
push
mov
lahf
out
mov
adc
scas
jbe
push
jle
out
mov
xchg
icebp
lret
pop
or
dec
xor
xchg
lods
and
xchg
imul
push
sbb
sbb
push
icebp
pushf
pop
add
loop
outsl
push
fisubl
xor
test
dec
fsubl
push
hlt
out
xchg
nop
scas
pop
mov
or
mov
icebp
je
insb
jb
ss
mov
into
adc
in
push
cwtl
push
icebp
fs
icebp
fcoml
fs
sub
push
ret
xchg
cmc
int
icebp
into
xchg
inc
into
mov
xor
jmp
sub
sbb
jecxz
jo
iret
mov
push
pop
pop
add
or
cld
dec
adc
adc
and
xchg
jmp
inc
sub
sbb
sbb
je
aad
ss
icebp
dec
sbb
out
lahf
pop
lcall
jno
shll
push
mov
push
test
shrb
pause
push
mov
outsb
fiadds
or
popa
cmp
pop
mov
nop
add
pop
fs
jb
sub
icebp
aaa
aam
pushf
test
push
adc
push
int3
repz
mov
test
push
xchg
jmp
jns
jno
addr16
pop
imul
sub
sbb
aad
dec
fs
push
xchg
adc
in
aaa
mov
xor
loop
cmp
xor
jecxz
ror
cmp
xchg
jmp
out
mov
fcmovne
insl
arpl
frstor
aas
mov
in
nop
movsl
movsb
xor
pop
cmpsl
jecxz
push
js
fwait
rcll
xor
fcmovnu
inc
lock
nop
dec
jo
mov
out
cmc
ss
movsl
into
mov
pop
aaa
sbb
ja
xchg
push
jno
loopne
or
adc
push
xchg
xchg
shl
xchg
sahf
jno
adc
cs
ljmp
jno
xchg
mov
cld
inc
inc
pop
jno
shll
je
insb
leave
cmp
dec
bound
or
fucomip
mov
add
mov
imul
ja
stos
add
xor
in
mov
outsb
add
fcmovbe
add
sbb
int3
xorb
pop
fadd
outsb
lods
pop
lds
lahf
xchg
js
push
out
icebp
mov
and
mov
clc
fldt
pop
and
movsl
fbstp
int3
inc
cltd
xchg
pop
loope
mov
push
fidivs
ja
rol
jmp
in
xchg
mov
mov
jb
test
fs
inc
xor
pop
icebp
pusha
lds
insb
xor
mov
push
jae
test
lock
insb
dec
shll
mov
loop
mov
nop
inc
ss
sar
das
je
mov
sub
iret
jmp
loop
fcmovbe
test
ret
lahf
mov
mov
sub
sbb
iret
mov
mov
jp
or
outsl
push
lcall
gs
jne
sub
pop
xchg
pop
xor
test
mov
icebp
inc
push
leave
mov
fldcw
fidivl
inc
inc
test
jecxz
xor
and
dec
adc
mov
pop
scas
sbb
jno
loope
in
push
out
and
jo
xor
fbstp
sbb
jno
pusha
jmp
insb
sbb
xor
fcomi
nop
jge
mov
arpl
je
mov
ja
into
mov
fnsave
xor
loope
rclb
mov
push
mov
scas
insl
fnstenv
das
or
jle
div
fldt
and
mov
xor
jp
add
mov
cs
outsl
cmc
push
test
insl
xor
fstps
xchg
movsl
fs
repz
outsb
jg
je
jno
and
icebp
repz
inc
fbld
add
jmp
push
push
lods
mov
mov
test
lahf
shl
out
hlt
mov
mov
cmp
push
or
push
pop
shlb
rorb
sbb
in
xor
sbb
xchg
mov
cmc
and
outsb
imul
neg
jae
sub
fnstcw
mov
shlb
push
movsb
fcompl
push
cmpl
xor
adc
div
lahf
mov
iret
out
pop
in
icebp
jg
lods
shr
cmpsb
div
arpl
fiaddl
adc
pop
fisubs
sub
push
cmc
vpsrlw
add
out
adc
or
pop
and
loopne
mov
mov
xchg
cmpsb
in
ljmp
mov
popf
pop
pop
imul
jb
shl
call
ljmp
mov
push
inc
test
push
sbb
out
cmpsl
imul
xchg
add
jmp
leave
rclb
int3
je
pop
lods
neg
bound
sub
pushf
add
bound
icebp
xchg
mov
fistl
int3
lea
rcr
sahf
cs
clc
gs
jmp
out
icebp
test
dec
shr
mov
nop
std
pop
in
jo
repnz
push
jns
adc
in
xor
iret
lock
cmc
repnz
adc
sub
out
mov
sarb
jne
in
mov
jo
push
pop
sbb
into
jmp
fdivs
imul
push
xchg
loopne
push
lahf
ja
cli
mov
jbe
fsubr
inc
cmc
out
mov
cmp
jecxz
sub
sbb
push
shl
das
mov
push
int
pop
xor
add
insb
outsl
call
aaa
popf
push
addr16
nop
and
sbb
push
mov
mov
jno
pop
stos
xor
in
adc
lods
cs
popa
sub
lea
fs
adc
mov
mov
mov
xor
mov
mov
in
jmp
mov
cmc
out
arpl
push
pushf
push
or
fldt
add
and
jbe
ja
ret
dec
pop
mov
add
rcl
sub
loop
addr16
mov
je
push
and
xor
repz
mov
mov
rcll
cs
in
mov
push
mov
mov
in
push
ljmp
mov
adc
jmp
popa
mov
jo
ss
shlb
std
into
scas
pop
in
shll
jo
inc
filds
test
insb
mov
imul
mov
xchg
sbb
test
arpl
in
pop
sub
je
fldenv
add
cmpsb
push
or
jno
fcompl
stc
adc
cmpsl
push
pusha
mov
push
pop
inc
jg
insb
push
lcall
lock
xor
aaa
cmc
out
outsl
repz
icebp
daa
imul
iret
lods
repnz
xor
mov
test
sub
jb,pn
movsb
pop
push
enter
mov
adc
xchg
mov
fsubrs
out
and
hlt
jno
adc
push
shrb
in
pop
xchg
and
gs
xor
es
repnz
jne
nop
imul
in
divb
mov
mov
cld
out
repnz
adc
sbbl
jp
mov
jmp
fidivl
mov
fucom
in
xchg
ret
dec
in
jmp
inc
icebp
pop
and
pop
xor
jno
ficoms
in
sbb
in
xchg
cmp
stos
roll
out
mov
xlat
xor
outsl
jecxz
pop
loope
push
jno
fsubs
aas
sub
push
fnstenv
adc
cs
nop
lcall
or
lahf
icebp
mov
push
push
xor
xor
call
mov
ficoml
icebp
rcll
repnz
pop
in
add
cmp
loop
mov
ss
dec
cs
out
mov
fstpl
jo
daa
test
xor
jmp
xor
push
pop
push
rcl
sub
push
js
ljmp
ficompl
mov
mov
sub
cmp
ja
lret
xchg
lahf
pushf
push
dec
pop
stos
lret
fidivl
push
mov
pop
scas
push
mov
fnstenv
or
xor
fnsave
rcll
cmpsl
repnz
sbb
sub
sbb
push
pusha
ja
fmul
fcmovu
xor
adc
out
imul
jae
into
shrb
cmp
cmc
jb
lret
popa
xor
mov
iret
push
jbe
push
add
loope
dec
pop
pop
fcoms
in
pop
xlat
xor
rorb
rcr
push
out
jbe
push
aad
lock
rcll
xchg
in
jbe
push
fadds
mov
dec
ja
mov
fsubrp
jne
push
shlb
fistpll
hlt
jae
mov
jmp
sbb
jae
test
nop
cwtl
push
imul
mov
push
xchg
fistpl
out
jmp
daa
sub
jno
enter
jbe
arpl
pop
loopne
push
mov
push
sub
push
pushf
inc
nop
in
scas
in
es
mov
outsl
iret
stos
mov
or
insl
nop
insl
loope
sbb
sti
lea
xchg
out
push
lahf
out
or
hlt
shll
mov
mov
cli
push
mov
xlat
lcall
cmp
rcrb
add
xor
ficoms
mov
xchg
push
or
mov
xor
bsf
mov
sar
or
jmp
rol
not
mov
jmp
lea
jae
jmp
shrd
mov
pusha
bt
pusha
clc
cmpb
pushl
call
cmp
pushf
call
add
shl
pusha
mov
bt
sub
jmp
cmpb
push
lea
jne
mov
dec
rcl
sub
bts
pushf
bswap
mov
add
shl
dec
add
shl
rcr
mov
pusha
test
test
lea
pusha
movl
lea
je
cmp
sub
cmp
cmp
pusha
mov
lea
ja
jmp
sub
adc
fwait
push
sbb
cmp
rcrl
into
adc
mov
dec
popa
pop
pop
xor
sub
bnd
insl
push
mov
in
cmovns
cmp
mov
mov
call
jle
ret
adcb
int3
sahf
outsl
lcall
subb
into
je
or
out
test
into
scas
and
mov
repnz
aad
fdivr
js
shrl
mov
icebp
lret
pop
xchg
mov
das
adc
test
or
addr16
movsl
xlat
jo
iret
mov
fnstsw
scas
enter
push
dec
fiadds
adc
hlt
cs
xchg
push
xchg
add
add
adc
mov
aaa
bound
sbb
add
std
xlat
lcall
jecxz
inc
pop
out
ret
pop
lahf
addr16
rcll
adc
test
mov
and
pop
cld
mov
ret
outsl
add
pushf
inc
sub
xor
mov
push
mov
mov
sbb
pop
jmp
jb
and
movsl
push
push
xchg
int
pop
mov
test
mov
std
rcrb
mov
jnp
out
xchg
aaa
and
mov
xor
ret
ficompl
ret
dec
in
dec
or
adc
rcrl
adc
gs
mov
sub
shll
pushf
outsb
test
xchg
in
int
stos
or
repz
movsb
pusha
jbe
mov
inc
leave
xor
cmp
cs
aaa
mov
fsubr
pop
xchg
repz
fisttpl
psllq
rcll
add
pop
lods
lock
repnz
jl
or
andb
les
cli
xor
mov
outsl
ss
or
test
test
mov
adc
mov
nop
xlat
or
adc
data16
jb
pushf
je
dec
out
push
push
add
pop
or
test
sub
add
inc
popf
addr16
sahf
addr16
sti
push
push
mov
push
in
imul
popa
adc
mov
iret
out
adc
push
repnz
and
or
cltd
pop
movsb
lock
outsb
jbe
repnz
dec
sbb
dec
subb
xchg
cmp
add
add
pushf
sbb
outsl
push
adc
lret
clc
jo
pop
lcall
rcrl
xchg
bound
aam
push
arpl
or
inc
into
xchg
insl
xor
jnp
cmp
mov
in
movsb
jno
dec
movsb
in
sub
inc
sub
push
and
andl
mov
sbb
dec
lods
sbb
jl
aad
bound
and
aaa
movsl
test
mov
cmc
int3
icebp
lock
mov
imul
push
ljmp
sbb
bound
mov
ljmp
lcall
mov
cwtl
pop
push
and
mov
dec
mov
cmp
sbb
jecxz
sub
mov
into
out
in
lds
movsl
add
sbb
adc
pop
push
xrelease
inc
iret
popa
iret
hlt
cs
push
clc
jne
sub
test
inc
clc
sub
xor
pop
push
push
in
leave
mov
dec
add
add
add
out
filds
cmp
shrb
fsts
cli
loope
jmp
inc
sbb
lds
add
mov
mov
cmp
sbb
dec
jle
insb
in
mov
adc
arpl
sbb
dec
fbstp
movsl
dec
lds
jecxz
in
or
jmp
and
fcompl
or
fidivl
lret
stos
mov
int3
or
aaa
cmp
insl
xchg
iret
adc
inc
ljmp
push
imul
push
or
stos
loopne
push
fldl
inc
insl
fdivr
mov
std
faddl
jecxz
jmp
adc
push
push
jge
jnp
lahf
push
out
inc
mov
repnz
and
into
mov
inc
sub
sti
out
test
bnd
jle
popf
mov
mov
push
xor
mov
inc
pop
adc
fcomps
dec
or
cmp
sti
data16
xchg
add
inc
gs
push
enter
cmpsb
mov
in
int
or
add
sub
or
dec
cmpl
jb
shrl
das
aas
push
cmp
stc
mov
cld
mov
test
cmp
sahf
pop
ljmp
or
aas
es
sahf
mov
xchg
fidivl
shlb
in
jle
mov
clc
push
hlt
and
popf
mov
popf
test
dec
mov
or
call
shlb
push
sbb
jnp
jle
aad
fstps
es
bound
fdivrp
mov
fmull
je
lret
dec
ja
in
fisubl
adc
subl
movsl
jno
pop
lods
das
or
ds
mov
shll
adc
je
add
icebp
and
inc
lea
jae
pusha
pushf
pushf
lea
jmp
lea
sahf
mov
jp
cli
lods
pop
ljmp
mov
sahf
stos
adcl
xchg
jge
inc
push
mov
cmpsb
inc
jge
adc
in
aam
inc
sub
scas
add
leave
cli
xor
lods
and
xchg
lods
dec
je
xor
inc
dec
xor
jmp
fwait
sub
jno
dec
cmp
mov
sub
xor
adc
mov
inc
cmp
std
mov
jmp
out
repnz
lahf
lds
aad
or
ja
shll
fs
aas
pop
stc
push
add
push
gs
gs
popa
insb
jne
inc
js
add
movsl
repnz
mov
call
jecxz
or
pop
repz
xchg
insl
cmp
jmp
clc
leave
mov
and
mov
push
cld
shl
icebp
jb
push
daa
adc
loope
jl
pop
sahf
mov
cli
repnz
cmp
and
dec
push
scas
pushf
add
stos
sbb
fdivrs
js
repnz
cs
mov
pop
xor
fs
outsb
sarb
lea
jmp
call
push
push
movb
push
mov
lea
jmp
aaa
dec
cwtl
mov
movsb
push
push
ficompl
lcall
lods
jbe
cmp
dec
test
aas
addb
lods
inc
xor
cltd
orl
es
subb
xchg
sbb
or
adc
mov
test
fs
mov
lret
sbb
addr16
jecxz
xor
and
test
sbb
fmull
sbb
call
push
mov
ljmp
jmp
inc
or
push
push
or
push
jecxz
faddp
xor
mov
aad
fsubp
loop
cmp
jns
jge
add
out
mov
pop
fs
mov
cmp
scas
dec
std
lahf
jge
iret
imul
aaa
loope
data16
mov
je
push
jp
repnz
lods
xor
xchg
mov
push
jmp
call
aas
es
inc
pop
shl
repnz
xor
xor
je
fistl
push
xor
cld
loopne
push
add
mov
pushf
mov
sarl
hlt
shld
xchg
repnz
loopne
xchg
test
loope
repnz
cmc
jne
sub
cmc
mov
lea
jb
push
push
cmc
jmp
add
pushl
pushl
lea
jmp
sub
movsbw
sar
cmp
clc
mov
btc
mov
movsbw
not
sbb
not
add
call
test
add
call
cmp
pushf
lea
jae
push
movzbw
movzbw
movsbw
mov
pushf
push
lea
jmp
cmp
pusha
sub
bt
pusha
cmp
jmp
push
mov
pop
fcoms
shlb
push
loopne
pop
or
xor
nop
or
pushf
lcall
cmp
jecxz
out
enter
jae
es
push
push
test
aam
sbb
rcll
das
out
and
das
cld
repnz
cwtl
nop
add
orl
mov
pop
lock
fnsave
sub
popa
or
jbe
sub
es
call
lea
ja
bt
cmc
cmc
imul
test
push
add
pushf
pusha
pushf
movw
lea
jmp
nop
push
andl
test
mov
ds
into
mov
ret
enter
mov
lcall
loop
mov
dec
sbb
fsubrs
das
xchg
push
mov
mov
mov
adc
mov
dec
iret
push
jo
jmp
push
xchg
inc
jle
and
xor
inc
push
ret
inc
jbe
idivl
outsb
and
nop
dec
adc
mov
mov
cli
mov
mov
mul
fcompl
sbb
mov
cmp
lea
jns
ja
stc
call
fndisi(8087
mov
pop
add
jle
out
or
add
aad
xorl
stc
jns
add
xchg
pop
ret
std
jle
xlat
pop
popf
xorb
sub
push
icebp
push
orb
adc
cmc
mov
adc
cmpsl
js
adc
jae
inc
mov
movsl
mov
stos
insb
cli
mov
xlat
mov
cmpsl
or
mov
lods
repnz
pop
xchg
xor
cs
mov
push
inc
sbb
dec
xor
or
ds
test
pop
mov
jo
call
push
rolb
pop
test
jmp
in
jge
fs
sub
sub
test
cltd
sbb
dec
out
mov
enter
xor
dec
cmc
or
cmp
xor
add
lret
sub
lret
or
fisttpll
aad
dec
popf
mov
jecxz
pop
add
into
data16
sub
mov
xor
inc
adc
out
jns
les
mov
out
out
inc
jp
in
pop
in
lahf
dec
pop
or
dec
clc
jle
cld
mov
das
mov
xor
stc
add
ljmp
pushf
daa
hlt
call
rcrl
cwtl
imul
dec
cmpsl
fisubrs
adc
cwtl
ds
outsb
out
dec
jmp
jo
mov
jl
lcall
push
fstl
fisubs
xlat
xor
sbbl
mov
ja
cmpsl
cltd
push
push
scas
xor
mov
or
cltd
inc
and
xchg
arpl
mov
and
rcll
pop
insl
push
xor
ljmp
pop
push
lds
add
mov
stc
lods
test
cmp
movsb
mov
jnp
mov
in
xor
pop
dec
xor
popa
les
test
dec
into
mov
mov
sbb
adc
push
call
xchg
cmpsb
push
or
clc
or
add
clc
cmc
cmp
call
lea
je
clc
stc
add
jmp
movzwl
sar
sar
rcl
shrd
mov
cmp
pusha
cmp
cmp
add
cmp
cmc
pushf
mov
cmc
cmc
test
push
pushl
jmp
or
pushf
lea
je
sub
btc
seto
add
shl
push
test
shrd
sub
btr
rol
bts
shr
add
mov
bt
bt
mov
btr
add
btr
pushf
movsbw
shl
add
sub
shld
mov
jmp
shll
call
jbe
in
push
jl
sahf
mov
xchg
out
mov
jb
adc
dec
and
movsl
add
jmp
jle
xchg
jecxz
into
add
outsl
out
nop
sbb
mov
xlat
mov
scas
aad
jae
mov
adc
aad
sti
out
subl
adc
test
idiv
bt
jmp
movb
lahf
lahf
push
lahf
jmp
cmp
add
jno
loope
sub
xchg
jg
xor
lea
test
inc
aaa
add
das
add
movsb
jbe
push
cmp
loope
aad
dec
data16
mov
lret
sbb
rcrb
mov
lods
je
pop
or
fs
add
pop
aaa
addr16
xor
xor
cmp
dec
shlb
lret
stos
or
test
xchg
sbb
imul
enter
sbb
jns
inc
push
inc
push
dec
xor
cs
insb
add
ljmp
inc
or
push
in
push
lods
shll
push
popf
lock
orl
pop
aas
xor
mov
add
or
sub
or
mov
jno
jae
stos
cli
enter
jbe
clc
sub
scas
mov
popf
push
out
cs
pop
hlt
filds
bound
jns
pushl
adc
inc
or
pusha
in
sahf
xchg
stos
addb
pop
xchg
loope
lods
lret
mov
nop
insb
push
out
sub
pop
inc
push
sti
mov
popf
cmpsl
enter
adc
sahf
cmp
xchg
and
ret
sub
sbb
sbb
in
mov
add
pop
les
cltd
jl
dec
push
das
jne
fnstcw
xchg
jae
popa
and
adc
insl
dec
jecxz
into
mov
pop
scas
dec
movl
pushf
push
pusha
movl
pushl
lea
jmp
pushf
pop
jne
mov
jno
jl
push
cmpsb
xchg
inc
xchg
sub
dec
and
and
nop
out
inc
xchg
lods
inc
add
sub
jne
adc
and
cmp
mov
bt
sub
pushf
lea
jmp
pushf
bswap
mov
xchg
setp
mov
mov
call
jmp
sub
mov
inc
add
bound
inc
insb
inc
sub
jmp
xchg
mov
sbb
jno
mov
dec
or
ds
push
insb
data16
and
lea
mov
xchg
sub
pushf
push
sub
pusha
cli
movsb
push
loop
iret
push
cmc
shrb
mov
andl
push
rol
mov
shl
lea
mov
shl
bsf
mov
push
mov
cmc
sub
push
cmc
pusha
repnz
push
push
pushl
lea
jne
bsf
cmp
inc
bsr
mov
sbb
ror
sub
mov
add
bswap
pushf
lea
jmp
test
pusha
cmp
stc
sub
pusha
clc
jmp
call
sub
mov
mov
pop
cmp
out
addb
scas
mov
push
sub
push
mov
jecxz
or
leave
jg
nop
cmp
mov
dec
lea
fistpl
dec
adc
jne
mov
lea
jne
lea
pusha
jmp
pushf
mov
lea
call
pushf
adc
pushf
movb
call
mov
ljmp
pop
pop
leave
movsl
test
mov
pop
neg
inc
fsubl
fcomp
pop
and
sti
outsb
mov
xor
lock
lock
cmp
jne
mov
cmpsl
insb
jnp
jnp
jecxz
xchg
push
cli
xchg
lea
insl
push
mov
mov
mov
push
and
jmp
js
mov
jmp
sbb
xor
in
sahf
sub
sahf
pop
hlt
lods
inc
pop
push
call
fistps
stos
mov
dec
or
push
xor
inc
orb
add
daa
and
mov
and
xchg
sub
imul
sbb
jl
xchg
lds
mov
inc
jne
xchg
or
sbb
rcrl
xor
mov
pop
movsb
cli
cmpsb
mov
sti
xlat
mov
repz
fldcw
repz
ja
add
in
sub
fwait
pushf
jmp
mov
mov
sbb
or
xor
fwait
sti
mov
std
adc
shll
xchg
es
cmpsb
pushl
test
das
jg
insl
ss
iret
or
ss
stc
sub
inc
xchg
inc
jns
mov
cltd
lods
stos
out
xchg
es
mov
movsb
test
mov
xor
cmpsb
fsubrl
into
xchg
dec
and
or
iret
stos
repnz
cmp
setp
cwtl
lea
jmp
cmp
outsl
lods
mov
xor
stc
mov
xor
imul
repnz
pushf
mov
jl
lds
rolb
fsub
push
sbb
push
xor
cmpsb
xchg
xor
imul
cmc
sbb
cmp
lock
fisubl
and
jmp
mov
aad
test
pop
out
add
cltd
sbb
or
orl
call
mov
out
cwtl
pop
aam
mov
ja
mov
pushl
movb
lea
je
clc
add
test
cmp
cmc
cmp
pushf
call
mov
mov
pusha
mov
lods
bt
cmp
pusha
clc
add
clc
push
not
movw
mov
push
bt
neg
lea
jae
pushf
jmp
bsr
mov
setbe
cmp
shld
movsbw
mov
xor
setl
not
push
cmc
pushf
jmp
dec
xlat
aaa
rorb
jle
negl
sti
int3
push
fsubrs
adc
pop
add
and
xchg
cmp
push
leave
pop
aam
loop
mul
mov
jp
lds
inc
pop
push
and
jb
repz
btc
divl
mov
push
cmp
pop
mov
negl
fisttpll
pop
cmp
data16
in
mov
cmpsb
pop
std
push
xchg
or
jne
lcall
xor
idiv
fstpl
sbb
adc
ja
gs
pop
sbb
xor
dec
cs
iret
leave
das
pop
dec
mov
mov
aad
xorb
inc
push
icebp
xor
push
push
cwtl
ret
jl
int3
add
negb
idivl
repnz
pop
mov
and
sbb
loopne
rcll
add
rcl
inc
add
fisubs
js
ljmp
mov
lahf
jae
dec
mov
jne
stos
or
ret
outsb
jbe
cwtl
outsl
sub
pop
cli
hlt
bound
fdiv
out
adc
jo
lret
dec
push
idiv
push
stos
or
sbb
fsub
mov
or
xor
shl
mov
xchg
aam
pop
scas
inc
lcall
call
lahf
cmpsb
xchg
ljmp
xchg
sbbb
cmc
xor
cld
push
dec
fisttpl
sub
sbb
inc
setno
mov
mov
push
insl
sbb
fldenv
sub
daa
dec
loop
sub
int3
jns
pop
jne
xchg
xchg
negl
cmp
xchg
insl
leave
dec
lret
jecxz
scas
idivl
push
cmpl
testl
jl
test
idivb
or
lods
in
negl
aaa
mov
idiv
push
stos
test
and
adc
outsb
inc
imul
cmpsl
mov
test
jae
xlat
loop
mov
idivb
xor
shlb
mov
jbe,pt
or
mov
insl
movsl
adcb
push
add
icebp
mov
aad
fwait
int3
testl
jno
push
jecxz
lock
clc
dec
testl
gs
testl
dec
imul
aas
jmp
dec
out
xchg
fisttpll
rcl
jecxz
lret
pushf
cmpsl
jg
dec
fs
mull
int
fnstcw
idivl
lds
xchg
in
sti
mov
mov
shr
test
xlat
scas
pop
and
pop
aas
fdiv
xchg
mov
loopne
sbb
rcr
aaa
mov
xor
popf
and
negl
inc
xor
cs
push
xchg
xchg
sub
or
pop
testl
ret
js
clc
or
jecxz
je
cmp
in
jns
jo
std
xor
push
adc
pop
dec
push
ficompl
pop
mov
into
in
test
inc
ss
xchg
inc
push
jmp
add
and
add
inc
pop
or
aad
inc
testb
out
loopne
out
dec
xor
fidivl
jnp
nop
div
das
clc
and
in
ljmp
and
or
and
scas
jmp
dec
int
idivl
xchg
lds
notl
test
mov
enter
mov
out
xlat
addr16
and
rol
pop
jae
js
imull
mov
xor
dec
xor
pop
sub
mull
mov
ja
pop
sub
out
hlt
ret
push
pusha
jnp
mov
adc
div
bound
dec
jne
in
jb
jnp
push
divl
and
idivb
notl
leavew
rcll
clc
scas
or
ret
jmp
inc
loopne
aam
mov
out
or
xorb
vpand
xlat
or
hlt
negb
repnz
mov
idivb
mov
hlt
inc
pop
repz
call
mov
or
dec
jmp
mov
ja
lret
mov
fwait
test
mov
imulb
or
jmp
push
mov
outsl
test
test
dec
mov
cmp
in
bound
out
aad
xlat
mov
les
mov
shr
gs
gs
repz
xlat
outsl
ja
and
jbe
je
sahf
nop
call
loop
jbe
xchg
shr
vpsrld
jmp
insb
jno
mov
insl
hlt
ljmp
nop
shlb
inc
xlat
div
shlb
xor
dec
push
dec
jb
push
shll
std
jge
fidivrs
sti
mov
arpl
lock
aas
cmc
pop
out
jbe
imul
ja
jecxz
outsl
pop
ffree
out
call
fwait
sub
push
gs
lahf
mul
xlat
out
outsb
cmc
hlt
fisttpl
or
fcmovbe
leave
mov
shrl
push
push
jnp
mov
xor
dec
cli
mov
iret
lock
scas
ds
call
xor
xor
adc
add
clc
repnz
jno
rcr
rorb
mov
cwtl
in
pop
sub
lea
sub
mov
aaa
call
rep
mov
sbb
out
adc
shrl
popa
or
mov
repz
mov
outsl
icebp
cltd
div
cmpsl
lods
dec
or
jmp
sub
mov
outsb
mov
imul
jno
sub
jmp
or
shrl
lods
xor
mov
test
xor
outsl
xor
ret
in
das
xlat
test
fists
add
ja
scas
xchg
pop
inc
pop
cmp
mov
outsl
xchg
ja
loopne
aaa
out
pop
lds
lds
hlt
fimuls
pop
mov
mov
pop
imul
dec
divb
inc
outsb
cmc
dec
mov
mov
and
or
int3
aaa
or
pop
out
xchg
lea
xchg
or
push
xchg
push
insl
jae
dec
sarl
test
sub
ret
push
jae
outsb
dec
aam
or
ror
inc
lret
dec
jmp
hlt
mov
sub
out
les
shrl
aam
scas
jb
outsl
gs
je,pn
mov
inc
popl
out
shll
hlt
test
push
pop
data16
stos
xlat
lock
in
mov
rcl
in
cmc
or
jecxz
xchg
jmp
push
xchg
loop
aaa
cs
push
dec
pop
or
sub
imul
rorb
push
dec
mov
pop
outsb
mov
sbb
cmc
hlt
out
mov
stos
loope
icebp
dec
jae
ja
sub
scas
mov
cmp
pop
jne
data16
dec
notl
icebp
or
fcoml
push
jbe
fbld
out
imul
data16
inc
je
ret
mov
mov
stos
mov
mov
pop
test
push
scas
iret
hlt
into
mov
out
adc
lods
jno
repz
jb
test
mov
in
jb
int3
mov
mov
pusha
mov
fidivl
aam
repz
loopne
out
fildl
mov
fsubrl
mov
push
aaa
out
mov
push
fisubrl
pusha
in
out
mov
dec
or
negb
repnz
dec
cmp
push
or
lods
push
ljmp
pop
sub
inc
stc
lods
xchg
ljmp
push
ror
jno
inc
bnd
stos
add
lods
in
imul
outsl
enter
insl
push
int3
subl
xlat
pop
fisubs
div
mov
shlb
xchg
jno
fadd
fisttps
mov
iret
fs
call
or
and
pop
stc
aad
push
ja
mov
rol
rolb
bound
in
fisubs
flds
shrb
loopne
ja
repz
arpl
in
arpl
lea
jno
div
inc
aad
out
cmc
pop
and
pop
lret
lret
push
imul
imul
adc
jp
inc
adc
std
or
xchg
sub
push
hlt
test
xchg
cmc
xlat
lret
stos
mov
dec
sub
ljmp
sub
jmp
dec
sub
call
testl
mov
cs
in
int
testl
icebp
shll
adc
ror
mov
ss
cmc
pop
aam
aad
or
in
fbstp
fsts
cwtl
sub
test
mov
adc
scas
pusha
shll
jecxz
movsl
leave
push
mov
fnsave
in
push
stos
lret
imul
sbb
cmp
stos
cmc
mov
hlt
inc
fwait
mov
ja
int3
mov
arpl
push
pop
movsb
jmp
pop
mov
fwait
in
out
data16
jmp
fimull
push
xor
insb
adc
jbe
aam
dec
lods
notb
dec
mov
or
fcmovbe
jbe
cmc
frstpm(287
out
pop
in
mov
jne
jmp
das
cmc
imul
sbb
xlat
cmp
inc
cltd
in
jo
pusha
insl
mov
daa
call
xchg
pop
xlat
jp
jecxz
repz
sub
test
lods
testb
jmp
xor
pop
popa
cmc
out
fmul
xor
shll
ss
das
jae
icebp
mov
hlt
pop
shr
xchg
loope
aad
mov
repz
clc
mov
push
loope
out
fidivs
or
inc
les
div
and
fsts
xor
jae
push
push
jl
xchg
test
cmc
pop
jbe
mov
adc
les
pop
sub
div
inc
push
ret
hlt
dec
std
sub
cs
repz
out
icebp
lods
lock
ja
outsb
stos
and
je
rcr
clc
xchg
mov
xor
jbe
jbe
lcall
mov
hlt
imul
shr
int
fists
out
dec
and
or
mov
push
addr16
out
in
mov
repz
or
data16
xchg
jae
jmp
scas
push
dec
jmp
fnsave
add
dec
jmp
orl
call
mov
out
and
xchg
mov
or
sub
cs
mov
pop
ja
hlt
fld1
test
or
int
xor
aaa
es
clc
insl
xor
gs
divl
insl
xor
sbb
in
jo
aaa
cmpsb
dec
insl
icebp
gs
ss
out
insb
or
hlt
xor
mov
out
push
ss
mov
jne
enter
int3
scas
in
xchg
fldcw
movsl
punpcklwd
repz
repz
cmp
mov
mov
mov
push
shll
cmp
mov
rorb
fs
xchg
xchg
jl
jmp
int3
adc
pop
repnz
mov
fdiv
xor
out
push
outsb
rorb
jo
pop
jmp
das
push
enter
sahf
ret
mov
xchg
negl
or
mov
jae
inc
dec
iret
pushf
stos
pop
mov
cli
pop
lock
xchg
imul
movsl
repz
jmp
iret
xor
stos
repnz
repnz
call
xlat
sub
aam
push
lods
addr16
dec
sub
aad
or
jmp
repz
mov
in
xlat
pop
pop
repz
repz
test
adc
jmp
mov
inc
xlat
dec
dec
repz
scas
pusha
out
fcomi
push
imul
mov
mov
xlat
xchg
pop
lock
cmpsl
inc
mov
mov
das
jo
repz
sub
ljmp
or
mov
cmp
mov
inc
cwtl
movzwl
adc
add
cmp
nop
xlat
mov
mov
out
mov
gs
out
out
cmpsl
xchg
addr16
daa
pop
out
cmpsb
xchg
inc
es
in
movsl
test
gs
and
test
fs
and
jecxz
mov
and
loop
mov
and
loope
mov
and
loopne
mov
and
fistpll
aas
pop
fidivrs
ds
std
fnstsw
cmp
pushf
jl
pop
cmp
sti
fstpt
cmp
cli
fidivrl
cmp
stc
fnstcw
cmp
clc
fdivrs
cmp
cld
divl
pop
div
mov
jbe
ss
div
aad
xchg
jne
xor
mov
je
xor
div
shll
adc
repnz
adc
in
mov
push
jo
xor
out
sbb
loope
insb
dec
push
sub
jmp
loop
push
imull
out
add
and
rep
inc
out
xlat
outsb
or
into
dec
dec
jg
aad
dec
xor
add
stc
pop
insl
iret
pop
int3
adc
push
jge
inc
dec
xchg
jbe
add
inc
xor
int3
jmp
gs
aam
mov
lock
xchg
push
jmp
sub
ljmp
pop
js
or
jb
push
insl
jbe
mov
and
dec
movsl
xchg
test
inc
jmp
fcomi
inc
xchg
jo
ja
mulb
outsl
cs
sub
outsl
fsub
cmpsb
lfs
nop
aad
mov
repz
xchg
cmpsl
icebp
pop
lods
shrb
push
mov
push
dec
in
jmp
or
and
sub
mov
sub
ljmp
les
call
inc
xor
imul
and
in
imul
jbe
repnz
shl
or
imul
imul
repz
je
push
xchg
ja
mov
lods
mov
push
negb
sbb
sub
in
cmc
mov
mov
imul
stos
inc
stos
sbb
jae
mov
dec
in
loop
scas
pushf
jl
pop
push
repnz
outsb
pusha
pop
outsb
push
adc
pop
les
xor
mov
mov
popa
in
out
lret
mov
sub
arpl
jb
push
mov
outsl
movsb
gs
daa
lret
mov
xor
imul
sahf
dec
mov
xor
enter
addr16
jecxz
sbb
mov
push
lods
pminsw
roll
in
ret
dec
xchg
jmp
test
inc
test
cmp
jecxz
xchg
hlt
subb
gs
lock
in
sub
and
out
dec
popf
jge
xor
ja
jecxz
dec
and
in
outsl
adc
or
fucompp
insb
cmp
jmp
loope
fs
sub
mov
inc
mov
lea
inc
in
sahf
jno
cld
inc
or
dec
jae
mov
adc
lods
popf
push
dec
pop
xchg
fbld
fldenv
negb
or
orb
rorb
dec
es
scas
sub
jno
pop
inc
ss
xchg
adc
lret
test
ja
mov
pop
test
arpl
stos
popf
das
jmp
in
popf
xor
out
repnz
mov
hlt
test
sub
lea
mov
sbb
shl
inc
arpl
sbb
push
insl
dec
cmc
imul
in
mov
lods
pop
mov
loope
sub
lods
xor
scas
jbe
jmp
in
popf
imul
inc
pop
loopw
div
in
aad
aad
fwait
ja
mov
aad
in
mov
mov
mov
lds
fcmovnbe
in
mov
repnz
xchg
out
sti
aad
mov
outsl
xor
adc
jmp
mov
mov
cmp
shrl
pop
imul
out
jl
enter
test
pop
mov
jae
out
out
dec
push
je
cmpsl
mov
pop
gs
xor
push
cmc
lods
popa
lods
mov
mov
mov
enter
adc
mov
mov
inc
fldl2t
scas
lods
or
test
push
mov
or
jno
in
dec
mov
roll
in
jo
mov
pop
repnz
jecxz
fcmovbe
sbb
test
in
cmp
push
imul
sbb
sbb
mov
lods
mov
fcoms
xlat
das
shrb
fs
lea
sub
rorl
pop
iret
cmp
clc
mov
sbb
mov
fnstcw
inc
push
lret
jb
xor
ljmp
outsb
inc
outsb
fsubrs
data16
inc
outsl
insl
outsl
mov
jmp
testb
sbbl
cmp
pop
inc
inc
scas
add
pop
dec
stos
dec
mov
adc
pop
cs
push
mov
push
mov
imul
fs
push
jmp
jle
js
jne
mov
jb
outsb
addr16
insb
mov
and
xchg
inc
jno
fiadds
imulb
pushf
lods
push
data16
or
and
das
mov
aad
bound
xor
sahf
sub
scas
int
push
enter
outsb
push
lea
out
imul
das
xchg
dec
mov
dec
or
test
das
loope
arpl
in
shl
mov
das
push
xchg
enter
xchg
imul
imul
into
and
cmc
into
fwait
lods
push
mov
jb
or
inc
xor
cmc
scas
dec
jae
shlb
fmull
and
data16
in
data16
out
movsl
jae
mov
dec
sbb
xchg
jb
dec
dec
sbb
sti
jmp
adc
add
dec
movsl
in
dec
clc
iret
push
or
dec
stos
jp
cmp
sub
jbe
dec
sub
imul
xchg
cwtl
lods
movsl
mov
movsb
mov
pop
out
pop
jae
push
mov
jae
imul
insl
rep
cmpsl
out
jbe
leave
enter
out
jo
jno
out
push
xor
std
imul
push
dec
mov
lock
movnti
mov
lret
mov
neg
out
iret
lock
cmc
bnd
rep
ljmp
pop
mov
aam
shlb
not
es
push
jo
pop
in
cltd
movsl
xor
test
mov
inc
pop
les
mov
cltd
rcrl
repz
sbb
repnz
arpl
sti
cmc
dec
mov
ja
mov
addr16
icebp
mov
shlb
lock
in
pop
and
icebp
fwait
or
jnp
mov
mov
jmp
dec
cmp
pop
or
movsb
push
jbe
fldt
sub
lahf
mov
mov
mov
push
or
and
addb
mov
das
cmp
jmp
jbe
sub
mov
mov
mov
or
movsb
push
or
fs
outsb
outsl
ljmp
pop
test
dec
or
in
scas
cwtl
addr16
ljmp
xorl
stos
in
inc
fs
fwait
js
jo
mov
dec
imul
cmc
cmp
dec
or
inc
iret
jecxz
sbb
jne
jno
in
sub
pushf
jmp
mov
jmp
and
enter
shl
xorl
dec
inc
push
jno
ss
jecxz
mov
cmc
mov
mov
dec
or
test
call
hlt
int
in
cmp
in
and
and
repz
test
dec
cmc
lcall
fpatan
pop
jno
push
shr
ja
gs
adc
jne
push
imul
jne
dec
cmc
subl
mov
lods
imul
into
scas
out
call
xor
mov
or
mov
mov
aam
out
adc
fisttpll
cmpsb
test
aad
rcrl
dec
mov
cmc
xchg
push
call
and
push
ljmp
mov
sahf
xor
ljmp
jne
daa
cmc
pop
out
ret
jne
into
mov
stos
addr16
inc
out
out
imul
cmc
mov
out
enter
inc
jmp
hlt
nop
ret
outsl
stos
sbb
repnz
cmp
sub
stos
or
popa
int
jo
rorl
test
je
push
inc
jbe
outsb
sahf
loope
push
imul
cmp
fwait
cmpsb
or
int3
call
cltd
and
jmp
imul
fxch
mov
not
sbb
sub
shll
test
jne
xchg
sbb
stc
scas
ss
cs
mov
imulb
test
popa
adc
loop
lods
out
jnp
jecxz
test
in
clc
lea
mov
jmp
repz
insl
mov
and
pmuludq
rcrb
jmp
dec
negb
out
imulb
outsl
out
neg
sub
insl
out
pand
sahf
loope
imulb
das
das
lods
testb
inc
loope
testb
int3
mul
jne
outsl
dec
movntq
cmp
imul
dec
pop
mulb
pop
xchg
out
pusha
aad
insl
mov
loope
push
jmp
shl
inc
int
data16
insl
imulb
lea
outsb
testb
int3
mul
repnz
testb
fcomi
cmpsb
fstp
pop
divb
fisubrl
das
fistpl
cmp
in
neg
mov
imul
out
gs
fimull
inc
fucomp
imul
in
mov
insl
div
mov
test
icebp
insl
divb
int3
cmc
jbe
sub
ss
pop
sub
icebp
push
pop
aad
imul
add
sbb
fst
and
testb
jbe
loope
testb
add
fs
imul
fldenv
testb
in
lods
jmp
test
iret
in
outsl
cmp
jno
cmc
pslld
mov
and
xchg
pop
lcall
xor
fcomi
push
ficoml
test
je
in
aam
cs
add
dec
insl
push
repz
xor
xchg
push
stos
stos
loopne
or
mov
je
push
fwait
sub
out
inc
or
bound
xor
or
clc
mov
out
scas
xor
push
iret
stos
test
jne
adc
and
lock
dec
enter
adc
push
outsl
repz
pop
sti
mov
fisubl
jo
mov
clc
pop
dec
repz
sub
cld
ret
jmp
xor
push
or
andb
int3
mov
mov
dec
test
rep
sub
and
xorb
sub
scas
lds
cmc
add
test
rolb
ljmp
test
add
ret
push
in
loop
clc
push
sti
out
ja
mov
in
dec
in
fucom
repz
cmp
repz
or
cmp
cltd
fldl
mov
shrl
repz
mov
into
lret
shrl
jbe
out
testb
pop
scas
call
jle
mov
popa
push
in
jmp
in
adc
adc
push
out
sbb
inc
cmpsb
and
xor
xchg
mov
mov
fldcw
mov
mov
into
lods
cs
dec
sub
sti
push
xchg
sub
out
out
pushf
mov
xor
push
jmp
into
lret
popa
and
hlt
adc
jl
inc
mov
stos
cs
jne
insb
jbe
add
mov
jo
fs
mov
push
mov
adc
push
jae
out
mov
push
aaa
jno
outsl
sub
out
shlb
aad
imul
adc
push
xor
jbe
ja
mov
shrl
aad
rol
enter
out
ljmp
faddp
repnz
dec
jo
out
cli
sub
aam
test
hlt
jmp
aad
inc
stos
int
cmc
scas
dec
test
xchg
xor
loope
dec
lret
sahf
jb
jae
jmp
inc
pop
inc
sub
adc
repnz
in
out
mov
push
jmp
insl
jo
jno
repz
mov
pop
aaa
jbe
stos
ja
out
ss
aad
clc
xchg
outsl
pop
fld
pop
mov
jae
outsl
push
jbe
aad
ffree
pop
mov
outsl
pop
ffreep
pusha
mov
jae
out
loope
bound
fs
jae
out
in
data16
outsl
addr16
push
out
jmp
outsl
insb
in
out
mov
jae
out
hlt
lds
pop
sbb
imul
repz
outsl
loopne
data16
jae
out
jmp
outsl
lock
jbe
pop
pop
mov
imul
divb
pop
jns
outsl
jmpw
out
insb
aad
jb
jbe
fstps
in
or
or
jae
dec
bound
scas
sub
fsub
je
jno
iret
jle
lret
in
jg
dec
inc
in
jne
in
fs
inc
mov
or
std
pop
es
out
daa
sub
loopne
cmc
xchg
sbb
add
es
mov
cwtl
inc
sbb
xchg
xor
push
clc
in
jae
loopne
push
repnz
jb
out
pop
add
out
repz
mov
dec
jmp
testb
call
inc
popa
fadds
das
mov
adc
dec
enter
xorl
push
jne
int3
insl
bound
cmc
lcall
int3
jne
jnp
imul
outsl
jne
outsb
cltd
into
sbb
sub
imul
scas
and
scas
data16
inc
int
add
in
push
inc
shrl
or
push
pop
outsl
push
imul
mov
jne
lods
jno
repnz
sub
dec
scas
out
lahf
les
outsb
out
mov
iret
or
mov
repz
out
gs
out
push
in
outsb
outsl
mov
jae
out
jbe
pop
cwtl
inc
push
lahf
outsl
pop
xor
subb
jno
cmp
out
dec
je
jb
mov
mov
inc
pop
incl
sub
imull
push
repz
and
loop
push
in
mov
inc
fsave
sbb
push
data16
mov
mov
stc
lahf
inc
cs
jecxz
jg
scas
outsb
jae
xchg
push
lret
xchg
lock
adc
and
inc
hlt
iret
bound
xor
cmp
mov
pop
int3
cs
stos
loope
sahf
loope
fmul
icebp
mov
mov
repnz
test
inc
insb
mulb
xor
aaa
arpl
out
call
loope
lret
mov
pop
mov
hlt
stc
sbb
clc
mov
mov
fcomps
and
pop
pop
mov
imul
loope
iret
cmp
push
in
ss
xor
cmp
push
xchg
jp
stos
faddl
call
xchg
lahf
popf
mov
xor
jge
fimull
dec
iret
xor
add
cmc
jne
dec
outsl
adc
xchg
cmp
pop
mov
ficompl
and
inc
pop
scas
and
jne
insb
cmpsl
into
mov
pop
pushf
sub
mov
or
stos
xchg
mov
fists
push
rcl
mov
fucom
jmp
jne
hlt
fists
nop
push
sbb
cmp
loope
notl
xchg
jmp
call
pop
adc
movsl
je
jmp
cmpsb
ja
addb
and
fldcw
jge
divl
dec
psrad
and
icebp
sub
adc
and
mov
sub
loopne
ljmp
sub
push
es
stc
out
out
xor
scas
sub
int
fs
fisubs
popa
fsubrp
sub
fs
lds
pop
jae
test
cltd
arpl
jb
lds
imul
jno
jmp
push
fsubrp
test
xlat
pop
int
loop
fidivs
loopne
pop
cmc
jae
mov
data16
xchg
insl
popa
aaa
out
jne
imulb
lods
call
xlat
mov
cmc
out
iret
or
gs
push
insb
in
xlat
ljmp
lock
call
xchg
in
sub
inc
lahf
xchg
xchg
int
pusha
pop
pop
out
mov
dec
repnz
jo
loop
fdiv
mov
push
repnz
ficoms
arpl
mov
jnp
iret
shll
xlat
mov
push
pushw
shll
xor
out
icebp
ja
jmp
scas
sahf
repz
addr16
lea
out
outsl
repz
xchg
ja
jb
shl
outsb
fistps
out
add
jmp
pminsw
icebp
pop
call
popa
mov
mov
ja
imul
lock
jmp
mov
push
pmaddwd
fnsave
push
fldt
imul
xor
jne
ja
add
inc
jae
out
mov
in
pop
push
jmp
ja
jo
jne
hlt
fsub
emms
data16
loop
jno
scas
cltd
icebp
inc
je
fucomi
mov
in
xchg
repz
jne
jo
jae
jb
jno
addr16
xlat
addr16
int
push
divb
in
dec
popa
scas
pop
out
aaa
fs
das
outsl
rcl
push
pop
in
jecxz
add
lds
nop
jmp
shll
aaa
adc
fidivs
mov
mov
in
xchg
jo
sub
out
and
out
mov
push
arpl
out
sub
repz
repnz
jne
xlat
aas
insl
dec
out
pop
and
xchg
repz
mov
insb
outsl
arpl
out
testb
pop
jbe
jmp
call
out
imul
or
fists
push
fsts
outsl
in
in
dec
ja
testb
mov
mov
in
xlat
popa
pusha
outsl
into
neg
jnp
mov
jmp
loop
lock
pop
int
and
clc
mov
xor
dec
jns
gs
test
out
pop
outsl
dec
push
jo
pop
imul
jbe
ljmp
jns
jo
in
shrl
pop
shl
das
jns
leave
arpl
pop
hlt
xlat
imul
mov
xor
icebp
es
jmp
lock
out
adc
xchg
pop
jo
scas
ja
jecxz
jecxz
arpl
fs
xchg
repz
pop
icebp
shrl
out
mov
xchg
int
outsb
imul
enter
push
pop
mov
xor
jno
movsb
rcr
repnz
push
fcoms
out
pop
mov
xchg
lock
cltd
pop
xor
je
xchg
lock
pop
out
shr
in
repnz
imul
in
fs
cmpsb
out
mov
outsl
pop
fiaddl
in
pop
pop
push
lds
hlt
jbe
repnz
jno
outsb
out
sub
out
imul
loope
imul
pop
loope
pop
pop
pop
adc
pop
js
push
pop
hlt
out
leave
fcoms
ficomps
je
xchg
pop
out
out
push
jo
gs
jo
xor
fildl
vpsrlq
jmp
xchg
fistpl
outsl
jb
call
outsb
mov
ss
outsl
xchg
out
in
pushf
in
in
por
push
fcmovnb
fimuls
mov
pop
sub
ficomps
into
push
jne
ljmp
in
out
pop
outsb
scas
jne
jo
jecxz
es
jmp
loope
add
rcrl
outsl
cmc
cltd
mov
mov
pusha
into
int3
fstp
pop
push
push
jne
ljmp
in
fs
sub
mov
xchg
jno
cmc
pusha
icebp
imul
call
sbb
add
hlt
push
loop
test
pop
loopne
imul
outsl
aad
data16
or
add
repz
push
in
push
loopne
jne
dec
ja
jae
ljmp
stos
jmp
jo
jmp
adc
fucomp
xchg
loopne
in
imulb
fisubrl
xchg
pop
aad
pop
nop
out
mov
and
sub
jb
pop
jo
dec
out
loop
lock
adc
xlat
stos
out
call
out
shll
fnsave
loope
jne
imulb
loopne
call
je
mov
outsb
adc
negb
mov
xlat
xchg
pop
pop
icebp
xchg
adc
out
shrl
ljmp
jne
fldcw
addr16
jae
gs
mov
pop
ljmp
dec
pop
push
push
add
lock
fcomps
xchg
inc
loop
mov
imul
shrl
in
aam
rcrl
divb
mov
in
lods
jbe
pop
push
imul
push
insl
addr16
jne
pop
inc
push
dec
xor
xchg
jne
push
stos
outsl
xor
imul
mov
mov
jae
lret
push
jl
pop
push
int3
loopne
popa
lock
pop
pop
fcoms
jo
inc
in
xorl
inc
stos
mov
pop
imulb
jg
xchg
xchg
pop
arpl
jo
insb
xor
shr
arpl
out
pop
pop
js
jmp
test
arpl
in
lock
jne
jo
data16
mov
push
rcll
shll
out
in
hlt
mov
out
in
push
ljmp
jmp
xlat
rcr
ret
jecxz
xchg
call
cltd
pop
fisttps
xor
jecxz
jnp
xor
imul
mov
addr16
inc
imul
xlat
jo
xor
outsb
shrl
repz
pop
in
scas
jo
jo
repnz
lds
pop
repnz
pop
enter
xor
repz
pop
mov
scas
popf
outsl
pop
insb
je
jae
divb
out
push
shrl
loop
jae
jae
lock
imul
lods
push
outsb
mov
jmp
xor
fisubrl
je
jne
hlt
dec
push
pop
push
pop
in
das
repnz
es
jbe
dec
lods
in
out
dec
jb
jno
jno
out
popa
fidivl
loope
pop
out
insl
push
xor
shll
and
aam
ss
mul
pop
je
push
or
pop
out
sub
or
push
fsubs
testl
dec
xor
cwtl
pop
imul
fildll
xor
stos
add
pop
lods
pop
lods
push
test
xchg
add
fildll
arpl
ficoms
and
mov
pop
in
inc
jmp
mov
out
jbe
xchg
cmc
repz
popa
mov
xchg
out
push
divb
mov
addr16
insb
call
repz
imul
mov
push
insb
ret
cmc
fdiv
andl
xchg
cmc
loope
pusha
adc
xlat
lahf
int3
shlb
jp
jecxz
xlat
mov
fs
gs
imul
shlb
aas
pop
xchg
and
out
jne
es
out
aas
ljmp
xor
push
pop
mov
push
loopne
je
jecxz
push
loope
mov
cmp
loop
pop
vmaxps
push
sub
stc
and
out
push
jnp
pop
stos
jmp
out
mov
loop
loopne
lahf
jmp
fsts
xor
cmc
mov
xchg
addr16
xor
in
pminsw
jo
pandn
fdivs
notb
hlt
jb
pop
xchg
jmp
xor
rcrl
adc
in
in
iret
fdivrl
out
pop
aad
fsubp
sub
out
mov
dec
scas
jb
jae
add
xlat
jb
sub
xlat
ljmp
inc
jno
xlat
xchg
lret
xchg
in
repz
repnz
cmc
xor
xchg
pop
push
pop
cmc
dec
jg
push
jo
lds
addr16
xor
or
fcoml
repnz
and
pop
aad
jmp
scas
add
adc
cmpsb
movsl
pop
xchg
adc
pop
out
or
mov
adc
cmp
call
aas
fildll
cmp
mov
jnp
shll
push
pslld
cmp
or
repnz
out
jmp
gs
ficoml
sub
icebp
lock
gs
call
insb
shll
popa
fdivrp
pop
out
das
rcr
fisubs
into
cwtl
sub
mov
mov
pop
mov
jno
lock
sahf
sarb
rep
jp
in
imul
adc
adc
aam
mov
cli
popf
inc
repz
sahf
out
xchg
xlat
push
scas
mov
negb
scas
int3
loope
hlt
out
fmuls
cs
icebp
mov
or
lret
mov
shll
sub
push
inc
mov
fcmovbe
or
sub
fistps
jbe
or
es
movl
jecxz
in
fidivs
jae
movsl
fucompp
lds
jno
adc
xchg
ret
test
pop
jmp
pop
in
ja
mov
jb
cmpsl
ja
filds
sub
fnstenv
pop
or
repz
mov
out
in
adc
loope
push
mov
lcall
popf
and
ja
push
shll
adc
leave
push
sbb
push
sub
lds
xchg
xor
xchg
or
dec
shr
xchg
movsl
add
pop
outsl
dec
cs
repz
add
adc
imull
int3
push
dec
div
sub
cs
and
dec
mull
mov
testl
cld
or
not
mov
ret
das
je
sahf
fists
gs
loop
xlat
in
add
sbb
divl
movsl
aas
mov
and
idivl
int
pop
pushf
out
jb
ja
notl
mov
cmp
xor
iret
in
ss
arpl
add
imul
test
js
inc
adc
sub
sub
sti
mov
out
cmc
sahf
mov
iret
pop
mov
pusha
jno
xchg
push
stos
and
jbe
fsubs
and
jo
jb
repz
mov
outsl
sbb
push
out
jae
xor
insl
mov
outsl
sub
fs
jae
out
pusha
lds
mov
jo
mov
jbe
fcoms
lds
mov
outsl
arpl
push
out
mov
jb
mov
aad
mov
pop
jae
out
and
arpl
les
sub
aad
outsb
mov
jae
out
je
cmc
xchg
pop
sarb
and
movsl
mov
jae
out
in
lds
mov
jecxz
not
pop
out
lock
sbb
push
jae
out
and
and
out
test
icebp
jae
out
mov
sbb
lret
fnsave
cmpsb
mov
jae
scas
mul
out
push
aam
popf
mov
jae
out
and
call
sub
jae
das
cwtl
jb
mov
movsl
out
mov
out
aad
dec
xchg
xor
fbstp
icebp
sub
repz
outsl
cmc
cmpsl
push
aad
jmp
imul
jae
out
fwait
mov
mov
xor
sub
out
cmpsb
lds
pushf
mov
jae
outsl
mov
divb
das
lods
stos
mov
jae
out
es
mov
pop
mov
jae
out
sbb
mov
aad
or
das
mov
jae
out
call
outsl
mov
insb
mov
imul
out
mov
outsl
imul
insl
jo
loope
push
xlat
into
mov
mov
mov
pop
mov
xchg
fnsave
je
xor
inc
imul
push
mov
outsl
or
mov
mov
outsl
ja
shl
rorl
xchg
inc
das
shrb
xor
mov
out
pop
push
jmp
les
insb
jae
out
mov
outsl
ljmp
rorl
idivl
pop
dec
jno
faddl
or
dec
div
leave
jbe
pop
mov
test
xlat
outsb
add
imul
push
icebp
orb
add
test
dec
pop
xchg
cmpl
movsl
add
mov
fdivrs
popa
test
imull
inc
lcall
cwtl
fs
pop
repnz
mov
cmp
mov
loopne
mov
cmp
fisttpll
cmp
fwait
mov
xor
and
pop
jg
mov
test
adc
jl
divl
nop
cmpsb
adc
loopne
divl
icebp
jo
cmpsl
dec
mov
mov
out
js
daa
add
rclb
jmp
dec
out
cld
and
movsb
into
inc
jge
movsl
sub
ss
out
or
scas
xchg
dec
sbb
jb
jnp
fists
lea
pop
into
cmp
es
lahf
cld
test
fcmovbe
test
in
out
and
lods
or
fmuls
xchg
dec
in
xchg
fsts
inc
das
notl
dec
in
mov
mov
mov
mov
jbe
xlat
adc
movsb
outsb
scas
xchg
sub
push
sub
scas
pushf
les
xchg
xor
jno
mov
xor
repz
jl
notb
sub
testl
xor
shrb
idivl
mov
dec
pop
idivl
imul
ss
mov
je
mov
test
push
aam
and
scas
fbstp
inc
cmp
shlb
in
popf
dec
cltd
aaa
xor
adc
xor
cwtl
mov
inc
jmp
fsubp
shlb
cmp
xlat
mov
rorl
negb
sar
gs
push
mov
mov
and
sub
xor
jl
cltd
pop
mov
jg
adc
xchg
mov
loop
gs
fdiv
and
les
mov
cmp
add
mov
test
dec
cmp
fists
sbb
hlt
idivl
imul
outsb
je
pop
pop
push
sub
sbb
test
mov
or
push
mov
int
cltd
pop
nop
sahf
scas
imull
xor
out
cmp
punpckhbw
test
in
xor
pop
out
mov
icebp
mull
push
repnz
pop
inc
xor
insb
aas
and
jl
je
movsl
jg
neg
xchg
adc
mov
mov
pusha
shlb
jo
inc
mov
mov
pop
adc
testl
xchg
test
fwait
jbe
loopne
out
jnp
inc
push
jmp
mov
push
or
or
cli
popa
pop
mov
inc
daa
divl
imull
push
cmp
fistps
add
xchg
insb
push
fs
mov
and
inc
loope
pop
mov
jle
sahf
leave
xchg
out
jmp
sti
pop
or
xor
mov
pop
fdivrp
dec
inc
ss
jne
fstpl
pop
idiv
insl
push
sbb
fldt
mov
add
cmp
int3
fcomp
inc
cmp
icebp
push
rcr
or
inc
notl
xchg
pushf
out
sbb
sbb
push
push
repz
fistl
cmp
pop
gs
fists
sbb
paddsb
sub
push
imul
cmp
xchg
out
stos
in
imul
pop
fistps
mull
sbb
repnz
imul
orb
mov
idivl
dec
cld
xor
fdivl
fimuls
dec
jnp
test
jmp
out
lahf
push
pop
mull
dec
lods
xor
ffreep
repnz
sub
xchg
pop
stc
inc
sbb
jl
loop
fcomi
scas
testl
dec
cmc
je
loopne
fdivr
divl
and
cmpsl
notl
cmpsb
sub
aad
xlat
xchg
add
aas
pop
fldt
je
aaa
jns
or
subb
xchg
xchg
cmp
jne
out
fcmovnb
dec
inc
mull
mov
mov
jecxz
xlat
sbb
mov
mov
and
inc
sti
jbe
sbb
push
cmp
out
andl
enter
or
xor
scas
das
push
notl
mov
jmp
sbb
adc
and
jecxz
popf
and
enter
stc
popa
dec
pop
xlat
iret
pop
and
push
insb
notl
je
sahf
idivl
jg
push
sub
xlat
aas
pop
push
pushf
imul
inc
outsl
xlat
mov
or
jp
idivl
add
rcrb
test
popa
xlat
adc
rcll
push
sub
xor
xchg
mov
fs
jb
imul
fldl
repz
add
xlat
pop
cmp
andl
dec
add
data16
xor
popa
dec
movsb
iret
stos
call
testl
mov
xchg
fidivrs
xchg
jo
fucom
xor
push
hlt
mul
cmp
ss
cmp
fsub
aad
jle
cwtl
lea
jmp
insb
divb
negl
stos
andb
sbb
aas
mov
cli
out
push
aaa
or
pop
loopne
negl
loop
test
negl
out
add
test
cmpsl
shrl
xchg
in
bound
push
inc
test
sbb
icebp
test
cmc
das
sub
push
sbb
jbe
sti
out
dec
xor
xchg
testl
push
scas
pop
cmp
je
in
aas
out
outsb
jmp
push
inc
negl
add
testl
idivl
jge
xchg
movsb
pop
imul
mov
or
neg
and
xchg
shll
jmp
mov
out
pop
add
ss
fbld
fbld
loopne
or
test
mov
test
sub
repnz
pop
mov
jno
jmp
fidivl
popa
fbstp
xchg
hlt
mov
xor
lahf
pushf
push
shll
xchg
sub
and
xor
jnp
inc
jno
mull
add
clc
dec
rcr
scas
push
testl
out
add
or
jns
dec
movsb
sbb
pop
xor
test
xlat
pop
cmp
testl
xchg
push
stos
imull
sub
jne
and
pop
loope
divl
inc
or
into
dec
shlb
ud2
fucomip
in
sub
inc
fstpt
mov
lods
cli
xor
lret
js
pop
je
stos
cmp
jae
test
sarl
ds
fwait
jmp
and
adc
jae
testl
js
je
jmp
or
pop
push
notl
mov
lods
mov
jmp
cltd
pop
pop
notl
and
lea
mov
cli
jbe
adc
pop
sti
cmp
fwait
or
ds
jbe
cmc
mul
xchg
cld
jne
and
roll
sbb
inc
fcmovbe
cmp
adc
push
mov
adc
aad
sarb
je
in
out
and
sbb
cmp
xchg
cwtl
xor
imul
adc
loopne
outsb
adc
in
push
pop
je
es
sub
mov
xchg
dec
mov
nop
outsl
xlat
jg
test
loop
push
int3
mull
push
pop
imul
fimuls
and
frstpm(287
xchg
ret
lods
mov
mov
adc
es
mov
testl
pushf
push
push
cmp
enter
sub
jmp
pop
pop
cwtl
jle
rclb
jmp
mov
pop
aam
outsl
jmp
aad
scas
out
cld
adc
sbb
xlat
add
pop
xor
divl
out
jo
mov
mov
das
xchg
xor
es
out
ljmp
sbb
movsb
or
sarl
add
dec
xor
inc
adc
int3
subb
adc
sub
in
ret
nop
push
mov
push
sbb
shl
push
pop
xor
xor
int3
in
movsb
nop
cmp
pop
notl
fnsave
jmp
mov
nop
xchg
sbb
enter
cmc
sub
jl
leave
mov
ljmp
pop
mull
dec
scas
icebp
notl
mov
lods
not
or
push
mov
imull
fistpl
lcall
and
scas
xlat
jge
dec
pop
or
in
cmp
xor
es
xchg
adc
lcall
add
or
in
fcomp
mov
int3
dec
mov
jmp
and
lock
in
outsb
pop
push
test
into
nop
lahf
test
jecxz
xchg
icebp
pop
lock
out
or
movsl
add
add
push
adc
imul
jg
loop
pop
lods
call
mov
and
mov
inc
sub
jge
inc
aad
inc
cmpsb
add
stos
notl
dec
in
negl
icebp
addr16
xchg
cmp
mov
aaa
fcomps
xchg
repnz
dec
adc
notl
in
and
je
and
fdivr
pushf
movsl
out
ja
not
push
or
in
or
lods
divl
xor
dec
mov
loopne
testl
addb
shrd
add
push
push
ss
je
and
pushf
lret
cld
divl
jo
mov
enter
mov
icebp
sbb
divl
pop
push
cmp
inc
mov
jge
xchg
lret
in
mov
or
vmaxsd
mull
mov
lret
out
testl
fcomps
repnz
xchg
push
jns
pop
mov
jne
mov
add
or
inc
lds
js
xor
cli
push
add
cmp
outsb
push
jmp
shlb
and
xor
fnstcw
scas
ret
in
inc
imull
pop
push
inc
sti
ljmp
mov
fldt
out
loopne
fxch
sti
stc
testl
ss
negl
push
out
movl
jecxz
mov
movsb
out
mov
ror
negl
movsl
cld
mov
cmp
in
mov
sbb
pop
enter
fwait
jg
cwtl
xlat
hlt
cmp
std
adc
pop
lods
jp
fstl
mov
mov
mul
cmp
inc
fwait
mull
push
jl
fistl
out
xlat
inc
sub
xlat
and
rcll
jno
pop
xchg
xchg
ss
shl
inc
mov
insb
and
mov
testl
and
cmp
daa
jb
pusha
out
sti
lret
xlat
cmp
sub
mov
gs
jno
xchg
test
mov
movsb
mov
sbb
call
cmpsb
push
xor
fistl
xchg
and
pop
xchg
xlat
fcmovu
mov
mov
out
push
mov
out
or
aas
xchg
jmp
sbb
call
pop
idiv
imul
loopne
out
cmp
jo
ljmp
pop
out
faddl
sbb
cmc
jo
mov
icebp
dec
push
xlat
mov
mov
xlat
jmp
les
outsb
popf
xchg
negl
rcrb
adc
mov
outsb
testl
mov
lea
push
scas
mov
testl
sub
cmp
notl
xchg
subl
xchg
mov
pop
and
sub
xor
mov
inc
cmp
push
out
test
xor
mov
es
cmp
notl
pop
incl
inc
ljmp
adc
dec
push
pop
sub
loop
jp
mov
testl
dec
sbb
std
loop
in
push
ljmp
jnp
xchg
jge
pop
out
push
inc
aad
push
adc
loop,pt
lret
aas
test
sub
in
sub
adc
out
sub
idivl
xchg
imul
add
inc
push
pop
test
push
and
xchg
pop
repz
jno
and
fstpt
popl
aam
xchg
ds
imul
push
push
add
jmp
mull
icebp
cwtl
sub
mov
xchg
jmp
not
pop
scas
mov
push
xchg
sub
sub
push
mov
mov
pop
jne
js
push
fbstp
mov
add
push
fnstcw
xor
test
sti
inc
sbb
pop
in
jmp
fsubr
dec
shrb
mov
push
pop
add
cltd
cmc
xor
inc
jae
ret
cmp
xlat
and
aas
jle
sbb
or
imul
daa
idivl
mov
ds
gs
pop
decl
imul
adc
test
in
faddl
xlat
cmp
outsl
jmp
mov
lahf
loopne
push
mull
add
inc
clc
imul
in
scas
clc
out
push
sti
test
testl
shlb
or
inc
and
pop
rcrl
imull
mov
dec
add
cltd
sti
mov
lahf
pop
xor
sub
ret
cmp
in
pop
jno
cmp
pop
cld
mov
leave
or
int3
cmp
js
sbb
inc
mov
cmp
pop
fdivs
jo
andl
enter
sti
dec
cmc
repnz
mov
fnstenv
lods
xlat
xchg
lock
int3
sub
or
push
sbb
in
in
adc
fiaddl
arpl
imulw
out
cmp
xor
pop
jge
jbe
cmpsl
not
pop
or
mov
pusha
mull
or
idivl
fisttpl
sti
pop
xor
jecxz
and
mov
jo
out
xchg
push
ror
jb
testl
adc
push
add
push
sub
out
out
stos
lds
pop
push
clc
lock
inc
divl
int
sarb
loopne
shlb
stos
es
pop
xchg
lret
pop
into
mov
mov
call
jns
imul
push
adcl
fists
cmp
jmp
in
mov
and
cltd
loop
push
mov
mov
jmp
movsb
gs
or
xor
int3
idivl
cmpsl
insb
fisttps
xor
idiv
outsl
or
xchg
sub
jae
mov
xchg
test
mov
xchg
push
and
cmp
push
mov
imul
test
pop
mov
pop
test
mov
mov
mov
adcl
incb
sbb
jb
out
in
jp
testl
mov
jne
psubb
inc
testl
in
idivl
shrl
add
adcb
loop
or
shl
aas
popa
inc
cmpsl
js
in
xor
push
test
or
pop
dec
jno
push
pop
out
jge
jecxz
add
cli
out
lea
imul
inc
sub
sti
or
outsb
ret
movsb
jae
lds
negl
xchg
xchg
sub
push
and
pop
fwait
jae
out
lcall
mov
std
xchg
cld
iret
lea
pop
enter
cmpsl
pop
cmp
xchg
testl
and
aam
gs
adc
cmp
inc
sahf
inc
jb
push
push
fadds
dec
jnp
imull
scas
std
mov
mov
daa
enter
sahf
lea
sbb
mov
xlat
jmp
test
ljmp
mov
repnz
inc
adc
xchg
movb
dec
inc
pusha
and
mov
mov
sub
sti
or
cwtl
and
cwtl
adc
adc
fidivrl
cmp
mov
cmpxchg
pop
fld
lea
and
test
shll
xor
lcall
pop
cld
cmpsb
mov
dec
test
aas
xchg
ljmp
add
jmp
rcll
or
adc
adc
dec
pop
inc
loope
sahf
imul
inc
es
sub
int
xchg
mov
add
scas
push
and
or
out
lcall
sbb
push
es
lods
imul
inc
mov
cmp
insb
add
pop
sbb
push
or
xchg
dec
in
sub
lock
iret
lahf
mov
hlt
cmp
fdivs
fadds
les
cld
push
xchg
sbb
in
xor
jne
push
std
cltd
mov
dec
lods
ret
jae
cltd
mov
jmp
stos
stos
test
adc
xchg
aad
xchg
add
gs
imul
adc
adc
in
sbb
pop
icebp
outsl
je
xor
mov
push
lock
xchg
xor
addb
add
loopne
aam
negb
inc
jbe
push
test
imul
icebp
inc
rcrb
add
xchg
sub
rorb
jne
ss
dec
jl
fmuls
movsl
testl
pop
inc
outsl
xchg
jle
cmp
or
shlb
xchg
push
jmp
push
add
fstpl
sti
cmpsl
pop
inc
adc
scas
aad
movsb
call
mov
push
or
sub
lea
xchg
lods
bt
ror
ror
jmp
loop
repz
ljmp
jmp
inc
leave
pop
decl
pop
inc
mov
pop
mov
cmc
mov
daa
scas
dec
pop
xchg
sarl
in
cmp
inc
sbb
or
xchg
int
add
mov
mov
movsl
inc
inc
fdivr
stos
rcrb
sub
jnp
mov
sbb
ja
mov
xor
mov
jno
add
or
nop
dec
sahf
jle
dec
jnp
inc
mov
pop
sahf
jl
int3
cwtl
push
stos
push
add
mov
mov
xor
mov
mov
enter
xchg
stos
outsb
and
jns
adc
xchg
and
mov
imul
sbb
andb
dec
cwtl
shlb
repz
mov
lea
sbb
das
shr
or
int3
stos
test
mov
stc
sbbb
dec
mov
pusha
add
dec
les
adc
stos
jmp
ret
insb
push
mov
ljmp
lcall
inc
push
or
int3
inc
cltd
lcall
push
int
das
push
xchg
shll
aad
mov
stc
mov
jl
inc
nop
dec
fs
jne
ret
aam
and
xchg
jg
push
jno
mov
outsl
adcl
pushl
dec
sbb
insl
movsl
cmp
test
dec
mov
lea
ja
jmp
push
cmp
in
add
inc
imul
gs
jb
insl
dec
inc
inc
add
in
mov
xor
test
fdiv
pushl
rcll
in
cmc
movzbw
mov
test
push
cmc
test
sub
movb
pushf
movw
lea
jmp
not
std
in
mov
pop
test
add
push
sbb
xor
or
jge
adc
mov
mov
lea
shlb
lods
fisttpl
adc
int
sbb
shr
adc
push
fs
xor
pushf
push
mov
mov
jmp
in
mov
in
mov
pop
loopne
dec
out
movsb
je
push
mov
ljmp
xchg
xchg
test
sub
or
insb
jl
xor
adc
cmpsb
and
dec
sub
ja
or
xchg
mov
jno
arpl
iret
lea
adc
clc
scas
shrb
jmp
jmp
or
or
es
sub
movsb
jbe
add
mov
add
call
ljmp
out
mov
test
push
aam
inc
sbb
test
lret
fwait
dec
push
mov
js
jp
push
xchg
popl
jge
lcall
aad
outsl
test
shrl
jl
xchg
cmp
aam
push
mov
sbb
dec
in
pop
cwtl
loopne
test
lea
adc
scas
mov
sarb
pop
cld
mov
out
dec
aaa
push
adc
pop
ret
or
and
into
cmp
daa
mov
jbe
clc
dec
push
ret
push
adc
pushf
lods
or
cmp
data16
fs
ja
jmp
jmp
xor
mov
jne
fsubs
mov
js
cli
or
stos
pop
inc
test
jnp,pn
ja
loopne
add
je
daa
lcall
adc
sarl
dec
icebp
sub
pop
lods
loop
sub
shrb
imul
bound
ret
out
push
mov
mov
incb
pusha
mov
aaa
inc
adc
imul
sbb
arpl
add
add
add
and
add
add
add
sbb
add
add
jecxz
or
add
add
add
testl
add
add
addb
add
xor
add
add
insl
adc
add
add
add
push
sldt
add
add
or
add
or
add
adc
add
push
add
add
add
xchg
lock
lods
add
out
jno
andb
jle
dec
inc
loopne
das
mov
ret
hlt
mov
xchg
daa
int
inc
shlb
cmp
adc
or
and
push
scas
jbe
lea
pop
jge
into
xor
dec
mov
imul
les
sub
adc
pop
in
adc
jp
int
test
dec
mov
adc
ret
pop
ror
mov
repz
pusha
push
cmp
adcb
pop
sub
jp
enter
paddusb
pop
mov
push
mov
lods
push
cmp
jmp
shl
inc
mov
mov
stc
pushf
test
movl
movw
mov
lea
jmp
bt
test
shr
pusha
stc
cmp
movl
pushf
lea
je
stc
clc
cmp
pusha
call
lea
call
cmc
sub
pushf
jmp
pushf
lea
jne
clc
mov
pushf
clc
push
test
sub
pusha
pushf
lea
jmp
mov
pushf
push
pushl
ret
jmp
movl
call
sub
cmp
cmp
bt
pushl
popl
test
stc
call
lahf
lea
pushl
pushf
pushl
movl
pushf
push
jmp
pushf
lea
jne
xadd
btc
mov
clc
sub
shrd
bts
shld
mov
call
test
jmp
clc
xchg
incb
clc
sarb
shrl
lret
mov
repnz
mov
cs
and
xchg
cld
mov
out
pop
or
ffree
or
icebp
lea
or
xchg
ffreep
daa
mov
xor
pop
cmpsl
fstpl
dec
movsl
pop
aas
lret
stos
xchg
ss
jle
inc
mov
and
jo
pop
sub
enter
dec
and
xor
imul
insb
insb
add
jbe
repz
in
mov
shlb
imul
imul
lock
inc
iret
add
sub
mov
stc
mov
shll
cmp
xor
jge
into
mov
pop
ljmp
or
xchg
cld
mov
sbb
scas
cwtl
push
aad
jb
out
mov
dec
repz
cli
je
xchg
adc
jge
out
outsb
jp
jo
int
out
stc
xor
fwait
and
stos
jns
sub
jo
mov
lea
jb
clc
jmp
xchg
leave
repnz
ja
jnp
or
xchg
xor
dec
lret
out
lods
inc
ja
imul
out
inc
jno
jne
cmpl
fs
jae
pop
fdiv
dec
enter
jmp
mov
dec
cmpsb
mov
aaa
cli
inc
adc
std
xchg
call
jno
xchg
xchg
sub
jge
int3
add
test
cli
sub
gs
mov
cmc
stc
ret
lcall
arpl
mov
fnsave
fisttps
imul
cmpsl
mov
push
xchg
pop
push
dec
orb
mov
jne
js
jge
mov
jl
push
test
adc
mov
lock
je
notb
filds
hlt
daa
xor
xchg
xchg
bound
rol
mov
lcall
mov
fidivrs
sbb
add
lea
ja
push
lea
jb
call
gs
add
mov
adc
fwait
sbb
and
mov
jmp
jo
inc
addr16
les
fwait
hlt
dec
mov
jecxz
push
or
mov
test
scas
data16
fidivs
sbbl
inc
adc
test
and
repz
or
stos
add
add
cmpsb
jns
and
xchg
push
mov
and
adc
mov
aam
cmc
notl
cmp
xchg
cmc
fcompl
push
imul
jmp
jl
fnstsw
stos
pop
cmp
incl
xchg
inc
pop
aaa
popf
jno
mov
loope
mov
pop
mov
insl
add
popf
fbld
push
jg
data16
mov
jae
cs
aas
and
xchg
push
into
mov
push
nop
jle
mov
pop
push
iret
outsb
ret
scas
mov
adc
movlhps
in
adc
xor
enter
xor
fldl
dec
stos
mov
adc
or
imul
popf
dec
loopne
xor
mov
jle
cld
js
mov
xor
mov
cmp
pushf
lea
jne
not
lea
xor
btr
adc
movsbw
mov
cmc
inc
mov
rcr
add
ror
bt
shl
test
mov
cmp
bt
push
test
call
push
jmp
repnz
pusha
lea
jne
setp
movsbw
setnp
movb
cwtl
push
mov
jo
lea
pusha
movb
jmp
pushf
lea
jae
mov
pushf
seto
mov
clc
sub
mov
dec
sbb
ror
mov
bt
jmp
movl
push
push
mov
movb
pusha
pushf
push
pushl
ret
lea
jb
clc
cmpb
pusha
lea
jne
jmp
sub
divb
xlat
movsl
xor
or
out
jge
nop
call
pop
fisubrl
loopne
addr16
in
mov
add
imul
jae
hlt
faddl
cmp
sbb
dec
pop
dec
adcl
jo
dec
bound
mov
dec
stc
mov
out
int
int
pop
pushl
inc
mov
sbb
jnp
push
out
sbb
stc
xor
pop
mov
divb
enter
les
inc
mov
fst
xchg
ret
lret
push
sti
and
sub
scas
cmp
pop
insb
cmp
les
sbbb
stos
xchg
fwait
xor
and
out
jbe
loop
or
mov
lret
xor
mov
pop
mulb
pop
and
in
or
sbb
push
loopne
lea
jns
mov
clc
ror
pushf
call
push
pusha
mov
pusha
pusha
lea
jmp
movl
jmp
mov
not
not
mov
ror
setle
stos
call
setne
sbb
mov
mov
jmp
lock
mov
imul
lods
mov
mov
cli
int
push
lods
ja
iret
outsl
adc
jns
test
sbb
js
int
and
jecxz
pop
xor
lds
mov
cmp
clc
mov
jo
idiv
jmp
andl
push
push
test
dec
testb
inc
es
sbb
aas
pop
inc
aas
movsb
and
inc
mov
push
in
daa
dec
ficomps
bound
sbb
js
out
add
dec
movsb
arpl
loopne
push
popa
repz
jns
movsl
imul
test
push
enter
out
push
and
movsb
cmp
ljmp
dec
ret
lock
outsl
cs
mov
out
jnp
jecxz
pop
fildll
inc
mov
aam
outsb
push
xor
nop
cli
cmp
ljmp
leave
lods
hlt
int
addl
nop
add
adc
test
fimull
fdivrl
rorb
lods
sbbl
or
scas
jb
test
fildll
jle
scas
push
je
mull
scas
lods
mov
xor
lods
dec
leave
insl
cmp
roll
js
mov
les
idiv
cwtl
bswap
cwtl
lea
push
mov
pushf
movb
mov
mov
lea
ja
call
add
inc
outsl
insl
jo
jb
push
je
imul
fwait
stc
mov
jns
adc
push
cwtl
ss
test
or
jmp
inc
adc
lods
sbb
in
sahf
ja
mov
das
sti
mov
mov
lret
adc
cmc
outsb
push
mov
sub
mov
pop
push
jbe
adc
stc
sbb
repz
sbb
nop
jl
pop
lods
xor
mov
arpl
mov
aad
and
aas
lods
lret
es
jmp
test
add
cmp
pusha
clc
cmp
cmp
pushf
pusha
lea
jb
cmc
stc
cmp
pusha
lea
jae
shl
pusha
xadd
cmc
mov
bsf
movsbw
sub
test
mov
bsf
adc
mov
stc
movw
xor
stc
push
jmp
jmp
dec
dec
push
cli
mov
rcrb
pop
pop
std
mov
mov
pusha
stos
xchg
scas
mov
mov
call
lcall
stc
jl
push
sub
xor
mov
sub
sub
cld
xchg
fstpl
adc
clc
dec
jg
pusha
adc
push
gs
movsl
cmpsb
or
rclb
sbb
loopne
and
imul
mov
dec
ds
or
inc
stc
cmp
nop
jo
mov
or
push
pushl
sbb
push
lret
push
test
add
or
rorl
cli
mov
lods
cld
cwtl
cmp
mov
xor
fdivs
sbb
jns
fldenv
gs
jp
idivb
addr16
ret
fimull
popa
ficomps
push
shrb
mov
mov
in
sub
inc
sbb
push
cli
sti
sahf
add
enter
aas
fcomp
lods
popa
xchg
mov
lods
xor
lods
push
adc
mov
and
push
clc
mov
push
dec
stc
add
test
cmp
pushf
movzwl
stc
rcl
inc
lea
mov
pushf
mov
add
clc
cmp
cmp
jmp
cmp
pushl
cmp
add
cmp
movzwl
movzbw
call
mov
lea
jne
call
loop
adc
mov
add
test
sbb
loop
dec
sub
and
add
and
lds
mov
push
ret
sub
lea
add
pop
sub
aam
fstp
outsb
xchg
inc
pop
sarb
push
cmp
mov
mov
cmpsb
cwtl
bound
fdivr
mov
dec
push
and
clc
rcrb
jne
xor
fildll
add
cmpsb
incb
sarb
out
icebp
sub
mov
inc
movsl
loop
adc
sbb
mov
repnz
add
insb
pop
aas
jbe
mov
sti
jae
aas
hlt
pushf
xchg
or
inc
pop
inc
xchg
insb
orl
out
andl
pop
scas
sub
mov
fisttpl
pop
push
scas
jge
ret
mull
jmp
or
imul
fwait
jnp
in
dec
icebp
cmpsl
into
mov
ljmp
and
lea
jb
pusha
test
cmp
pusha
mov
lea
jae
bswap
ror
xor
push
mov
add
bts
pop
jmp
pushf
call
mov
pusha
cmpb
movb
mov
lea
jne
daa
movsbw
xor
xor
sub
or
jmp
lea
je
push
pusha
movl
jmp
call
cmp
pop
std
mov
loope
sarl
sbb
popa
inc
sbb
int
in
jbe
xchg
push
mov
insb
test
cmp
je
dec
push
fstps
data16
jge
mov
mov
jno
mov
inc
or
inc
and
pusha
rol
mov
jnp
les
aaa
push
orb
imul
fsubrs
cmp
imul
outsl
sti
int
push
cmc
inc
jmp
pop
jp
mov
sbb
out
and
scas
push
icebp
popf
int
shlb
push
pushf
xchg
pop
mov
lahf
mov
cmp
lcall
cld
pop
lock
pop
xchg
insl
nop
arpl
push
mov
imul
clc
and
inc
add
adc
mov
inc
or
in
sbb
insl
push
stos
imul
das
frstor
es
outsl
leave
xchg
cmp
mov
addr16
out
xchg
sbb
jnp
or
inc
dec
mov
xchg
mov
jbe
and
popf
pop
pop
test
insl
dec
scas
push
dec
or
stc
xor
dec
sti
dec
fstl
xor
shll
mov
adc
and
cmp
mov
fisubs
in
addr16
mov
test
in
adc
movsb
fbld
and
packuswb
mov
cld
adc
popf
adc
jg
bound
sbb
adc
push
adc
in
mov
stos
inc
push
roll
or
test
mov
pop
xchg
lea
pop
add
shlb
push
mov
mov
push
jecxz
sahf
loopne
mov
mov
insb
jo
push
sarb
jle
ret
decb
das
insb
dec
ljmp
lods
dec
sub
fdivrs
imul
mov
pushl
pop
jle
pop
enter
mov
cmp
in
pop
lret
add
cmp
int
fsubl
mov
dec
dec
fsts
jb
cs
movsb
bound
add
mov
xor
cmpb
jmp
repz
inc
int
inc
mov
or
aaa
dec
pop
bound
aad
imul
adcl
cwtl
xchg
push
pop
xchg
outsb
xchg
push
rcrb
xor
and
lods
icebp
pop
imul
dec
push
addb
xchg
cmp
mov
jle
arpl
inc
adc
adc
jp
mov
mov
mov
jno
mov
pop
jecxz
inc
and
fwait
imul
bound
lods
xchg
cmpb
movsb
jle
push
test
xchg
xchg
add
mov
jne
pushf
das
xor
rcll
pop
inc
mov
sbb
sti
mov
out
lahf
inc
leave
test
in
lea
mov
out
pop
sahf
and
mov
xor
pusha
imul
call
jmp
neg
jmp
call
sub
jge
lea
mov
fmul
clc
mov
mov
mull
xchg
ds
mov
ljmp
sbb
pop
and
dec
jmp
std
repz
ja
jae
imul
push
bound
out
sbb
mov
clc
cmp
hlt
das
cmpb
pushf
hlt
pop
jecxz
sbb
idivl
cli
cmc
fstp
sbb
fdivp
jns
xchg
cld
pop
clc
popf
xlat
fistps
mov
dec
fstpl
jnp
lods
push
arpl
aad
mov
and
jl
in
jae
jp
xchg
lock
xchg
out
pop
and
jo
sbb
ds
mov
in
dec
out
jno
leave
fs
imul
mov
subl
je
loopne
dec
or
in
out
adc
sub
xchg
out
mov
pop
jbe
cmp
out
aad
lods
ret
xor
push
and
stc
xor
sub
rcrl
aaa
negb
xbegin
mov
ret
mov
xchg
mov
mov
out
pushl
jbe
cs
sarl
xor
fs
clc
fs
push
jbe
pop
xorl
jmp
jbe
push
fs
mov
hlt
mov
arpl
divl
jmp
scas
repnz
sahf
repz
hlt
lcall
and
std
rcr
aam
pop
out
ja
pop
jo
insl
lret
or
fs
out
rcr
ja
fs
lds
jbe
pop
outsl
inc
mov
or
xchg
push
ret
mov
out
jns
fcomps
dec
rcr
push
push
push
xchg
stos
pop
lock
insb
scas
inc
xlat
pusha
inc
xor
cmc
aaa
hlt
ja
mov
mov
into
fidivs
xchg
ljmp
jp
lahf
jmp
cmpsb
mov
out
jae
in
inc
pop
xchg
aas
aaa
ficompl
push
mov
pop
mov
mov
cmp
or
xlat
repz
dec
lock
cmc
shll
insl
roll
mov
shll
jb
mov
cmp
shrb
and
xchg
sub
into
or
mov
jg
cmpsb
outsb
ja
icebp
sahf
add
mov
cmp
enter
mov
out
mov
nop
cwtl
lods
push
pop
sbb
jae
int
outsb
mov
aad
lods
ret
lods
xchg
jbe
mov
xchg
push
jb
sahf
mov
add
aad
jmp
aam
push
daa
and
scas
ss
ja
push
ljmp
test
divb
test
xor
popf
push
jae
push
gs
xlat
aad
out
lods
andl
add
inc
sub
hlt
cld
jecxz
sar
push
out
mov
jmp
pushf
jbe
imul
ljmp
test
arpl
xlat
push
ss
xchg
xchg
sbb
mov
adc
movsl
hlt
aam
jecxz
jno
cmp
cmpsb
fidivrl
cmpsl
into
rcrb
fs
div
mov
mov
jle
push
inc
mov
xchg
add
leave
into
sbb
lock
aad
cmp
cltd
ss
cmpsb
aaa
mov
data16
push
xchg
mov
aas
loope
push
xor
jno
fcmove
xchg
jecxz
sbbl
lock
fcomps
out
aaa
gs
pushf
sbb
or
pop
mov
mov
adc
sbb
fs
sub
push
adc
pop
mov
fs
repz
xchg
jb
sub
scas
push
inc
fildll
push
jmp
icebp
dec
clc
aaa
jg
mov
out
nop
fwait
ss
xor
mov
scas
fisttpl
sbb
insl
jge
cmp
out
enter
pop
js
std
inc
jmp
data16
loopne
jg
pushf
jge
mov
jo
ficoms
out
pop
sub
pop
mov
and
mov
push
or
mov
into
push
aad
jle
inc
out
mov
dec
divb
std
jb
adc
data16
testb
repnz
add
not
jb
pop
out
je
push
in
hlt
enter
and
xchg
fsubrs
les
lahf
in
in
aad
jg
popf
sahf
cmc
cmpsl
addr16
lock
idivb
pop
lret
mov
ja
jae
mov
add
fwait
mov
cmc
insb
jno
imul
repz
mov
jno
sub
mov
scas
in
lret
mov
in
cld
jbe
lods
scas
jmp
loop
repz
dec
pop
sub
pop
lea
gs
inc
scas
jecxz
outsb
scas
rep
loop
sahf
imul
shr
push
popfw
hlt
into
jle
imul
ljmp
xchg
push
shl
outsl
outsb
shl
mov
hlt
sub
jo
gs
inc
out
cmc
addr16
mov
ja
shl
ja
jae
shl
sub
xchg
out
adc
mov
arpl
mov
gs
loopne,pt
hlt
xor
repnz
out
and
xchg
fs
cmc
call
int
in
sub
fsubs
or
in
fidivs
stos
cmc
out
loope
call
ljmp
ficomps
xor
xor
ljmp
mov
outsb
out
popa
lahf
xchg
in
int
imul
roll
push
icebp
dec
ljmp
addr16
lock
jmp
in
sub
ret
sub
jmp
repnz
out
sub
fsubs
cmp
sub
dec
call
or
jbe
addr16
xor
lea
call
push
imul
xor
mov
jbe
cmp
xchg
sbb
or
fildl
lret
ja
inc
jb
push
pop
xchg
and
and
js
in
mov
out
pop
add
jno
aaa
fbld
rcr
ficoml
leave
js
sub
dec
and
pop
sahf
jnp
mov
cmc
lods
and
andb
dec
cwtl
test
enter
and
movsl
sbb
add
mov
jno
cmpsb
dec
mov
sub
decb
gs
shl
hlt
mov
mov
fs
jmp
dec
in
ja
out
int3
or
xor
push
cmc
lods
out
or
and
cmp
mov
imul
pop
gs
scas
out
and
out
idivl
jno
ljmp
cwtl
mov
popf
pop
fbstp
xchg
jg
xlat
shl
sbb
movsl
jb
mov
pop
ja
xchg
xlat
fxch
rep
mov
add
mov
ljmp
push
dec
pushf
rcl
jbe
xorb
out
or
dec
sub
outsl
repz
out
negb
out
pop
pop
loopne
mov
xchg
sub
mov
adc
in
lahf
sub
test
nop
fcomi
fidivl
push
popa
jne
pop
mov
movsl
inc
in
popf
dec
icebp
inc
adc
cmp
or
cs
rorl
call
sbb
mov
sub
push
in
insl
mov
jb
push
inc
cmc
xchg
fistl
out
and
sub
mov
fstps
hlt
mov
fidivrl
push
push
and
jge
pop
dec
mov
xor
mov
std
sbb
cwtl
ja
inc
push
cmp
shrb
add
add
popf
sbb
cs
mov
fists
test
mov
std
sbb
cmp
cmp
sub
jne
cli
lods
das
fistpll
cmc
jg
mov
adc
fsts
push
ds
inc
pop
popf
mov
fwait
dec
out
in
movl
lods
adc
jo
lea
movsl
mov
ds
sbb
mov
pop
xor
mov
ret
mov
mov
lds
inc
lret
test
ja
popf
cltd
sbbl
mov
jae
lahf
insl
addr16
hlt
popf
out
in
and
in
loop
xor
mov
shrb
jg
mov
js,pt
nop
push
std
adc
push
mov
xchg
mov
in
loop
jge
pop
xor
out
inc
mov
ficompl
stc
jnp
jmp
loop,pn
jbe
jne
test
sbb
mov
push
fdivrs
jmp
pop
xchg
mov
push
jne
push
push
mov
vpunpckldq
inc
aad
les
fdivrl
enter
mov
lock
push
insb
xor
and
fsubrl
clc
int
pop
mov
iret
push
cmpsl
test
push
pop
sysret
scas
ret
jmp
cmpsb
sbbb
push
out
mov
mov
ljmp
jno
clc
nop
jae
aam
sbb
in
push
rcr
fs
std
pop
add
pop
ficompl
in
cmpsb
addr16
in
sahf
sub
cmc
mov
sti
mov
in
mov
push
mov
cmp
mull
inc
ja
decb
aaa
lods
mov
fsub
adc
mov
lods
sbb
pop
mov
adc
ja
ret
mov
mov
dec
aam
adc
xchg
cmp
popf
outsb
jb
data16
movsl
mov
xchg
or
test
xchg
cmpsl
jns
jge
fwait
mov
div
repz
sbb
mov
adc
jo
sbb
xor
inc
aas
dec
jno
test
icebp
loop
outsb
mov
iret
fidivl
mov
lock
int3
pushf
sahf
cmp
pop
rcrl
sub
test
out
icebp
cmp
lds
add
jns
and
dec
outsb
fidivl
shll
stos
xor
fildll
jecxz
fisubrl
jne
dec
pushf
fidivs
jo
mov
loopne
jmp
cmc
mov
mov
mov
xchg
inc
xchg
jmp
xchg
push
dec
jb
pop
sub
das
outsl
jmp
pop
mov
jns
repz
or
lcall
imul
xchg
rcr
lea
cmp
xlat
inc
pushf
sbb
cmpsb
aaa
dec
xchg
out
jl
lahf
repnz
stos
xchg
mov
xchg
adc
mov
fcomps
push
xchg
lcall
jmp
push
popf
sbb
mulb
mul
icebp
cmpsb
bnd
lods
sbb
sahf
mov
test
sub
lds
pop
rol
imul
jle
mov
cmp
out
xchg
push
out
sbb
out
add
inc
std
xlat
fcomp
cmp
shll
inc
scas
dec
repz
xor
cmp
ljmp
lods
cmc
push
outsl
mov
fimuls
lret
sarl
fsubrp
push
mov
pop
or
push
lods
pop
dec
jle
jl
push
ljmp
in
inc
push
fimull
pop
fdecstp
shrl
mov
push
test
mov
sub
inc
imul
fdivs
aaa
ljmp
cmc
fwait
xor
scas
iret
addr16
test
pushf
outsl
xchg
mov
jmp
jmp
ljmp
in
jl
inc
rcll
lea
int
movsl
movsb
xchg
push
clc
mov
sbb
scas
js
push
inc
mov
jge
faddl
jne
mov
pop
insb
mov
mov
or
inc
mov
loopne
inc
sbb
dec
and
cs
dec
mov
fdivs
xor
fisubrl
mov
pop
inc
addr16
js
test
cmpsl
mov
xor
rcr
cmpsb
lock
decl
leave
je
jmp
aas
imul
lods
fs
mov
out
or
arpl
out
outsl
xchg
sbb
ret
fcmove
hlt
out
fucomip
out
inc
les
cmpsb
adc
addl
mov
or
out
clc
popf
mov
sbb
fwait
xchg
pusha
push
popa
mov
repnz
xor
movsb
daa
mov
out
add
push
pop
negl
fs
pop
in
fcomp
popf
mov
call
imull
fnstenv
pop
mov
movntq
pop
mov
push
mov
push
call
pop
cmpsb
scas
jb
mov
clc
cmp
lret
out
or
fucomp
pop
xchg
jb
push
push
inc
push
stc
repz
cltd
jge
out
nop
jg
sub
mov
imul
scas
roll
push
sbb
mov
mov
or
adc
jle
adc
nop
and
fistps
cmp
cmpsl
mov
dec
out
pop
loopne
shr
adc
sub
paddsw
repz
or
fidivrl
xchg
mov
sub
ljmp
repnz
in
pop
jp
xchg
xchg
jb
pop
dec
sarl
pop
ja
mov
int
imul
and
cs
in
insl
xor
adc
fsubl
lods
lahf
insl
cmpsl
bound
inc
push
inc
fs
xor
inc
std
testb
mov
arpl
jns
lock
xchg
dec
jbe
xchg
cmp
mov
mov
ljmp
pop
outsb
jno
cld
iret
jl
fisubrl
lds
xchg
mov
fisttpl
jbe
cmpsl
and
je
fistps
push
daa
adc
cmpsl
jbe
loop
mov
lock
sbb
xor
xor
adc
orl
dec
bound
xlat
popf
mov
call
insl
inc
cmpsb
dec
mulb
rorb
test
mov
sub
imul
stos
ficoml
pop
int
mov
icebp
mov
scas
mov
pushf
dec
pop
sbb
lds
inc
lea
sysexit
lcall
cmpsb
out
out
jge
dec
adc
pop
xor
test
rolb
cmp
loop
sub
rep
repnz
lret
cmc
push
jl
inc
data16
mov
test
cmpsb
sbb
pcmpeqb
insl
mov
enter
mov
and
dec
jno
imul
fldenv
mov
loop
pop
adcb
inc
repz
adc
int
ret
hlt
scas
into
cmp
adc
fsubrs
xchg
xchg
and
popf
push
addb
xchg
fwait
out
sbb
push
xor
cld
jo
mov
jmp
in
xor
cmpsb
gs
mov
push
adc
stos
add
jecxz
cmp
lahf
xchg
xchg
dec
cltd
in
lahf
dec
sub
xchg
mov
fcomip
dec
fidivl
sub
stos
ja
repnz
fcompl
mov
jmp
mov
pusha
adc
jb
movsl
cmp
mov
popf
fcmovnbe
cmc
ja
jl
data16
pushf
adc
inc
daa
jbe
xorl
into
addr16
shlb
cmc
sbb
cmp
fwait
jmp
cmpsb
jne
adc
outsl
loop
mov
mov
loopne
lods
fisubrl
sbb
adc
stos
iret
iret
test
movsl
inc
and
int
data16
rol
mov
in
gs
ss
inc
or
repz
mulb
bound
cmpsb
ret
nop
mov
das
sbb
lods
fisubrl
gs
repz
or
or
jns
bound
addb
jo
out
out
xorb
push
mov
out
sub
and
aas
jmp
xor
xor
inc
mov
fnstsw
jle
fcmovnbe
aas
ficompl
fs
pop
sub
mov
insl
mov
pop
mov
dec
push
jo
add
ja
sub
in
xchg
and
fnsave
or
out
cmpsl
xor
cmpsb
lahf
inc
cld
outsb
xor
and
jg
sub
fdivrl
in
std
cmpsb
cmpsl
xchg
push
lret
push
ficoml
pop
cmp
inc
mov
adc
pop
mov
test
adc
ljmp
les
pop
lock
int
push
ja
lods
fcomps
notb
jp
push
mov
push
lock
jle
mov
cs
in
mov
insl
jge
mov
mov
push
divl
add
movsl
mov
inc
jb
or
xor
or
arpl
aad
sub
add
imul
sbb
out
gs
std
jecxz
adc
lahf
icebp
adc
negb
scas
xor
inc
jmp
jo
movb
push
pusha
scas
adc
push
mov
inc
xor
nop
fidivrl
jne
xchg
mov
faddl
jae
push
outsl
sbb
cmpsl
mov
mov
lods
add
ret
repz
or
jecxz
test
inc
add
lahf
in
int3
insb
sub
mov
stos
or
int3
cmpl
dec
es
jmp
lahf
jecxz
push
pop
stc
movsb
xchg
ljmp
adc
and
push
lcall
cmp
jp
gs
sbb
fcoms
lods
ljmp
andb
lcall
clc
dec
fs
cmc
fsubrp
test
push
lock
iret
mov
push
cmp
or
jae
cltd
dec
test
insl
leave
or
in
jnp
shl
rcrl
imul
cmp
push
jmp
mov
adc
lahf
stos
cld
mov
popf
mov
mov
jo
jne
pusha
pop
push
mov
outsb
mov
std
cmp
xlat
fistl
int
pop
pop
mov
scas
ffree
and
cmp
not
fidivrs
fiaddl
jae
insb
iret
jns
cwtl
js
mov
arpl
and
inc
sub
pop
neg
push
lea
icebp
lods
mov
addr16
pop
pusha
repz
aas
ja
and
fdivs
bnd
movsl
inc
aas
outsb
and
jne
pop
ja
je
cmp
clc
dec
or
shrl
jmp
dec
xchg
dec
neg
pop
enter
arpl
add
fs
loope
xor
xchg
xchg
xor
cmp
cli
jo
xor
outsb
fistps
stc
fcoml
xchg
in
push
mov
out
in
pop
scas
mov
repz
iret
ss
push
fcos
push
and
pop
mov
or
jge
in
mov
loope
dec
movsb
mov
iret
sub
jg
into
pop
jmp
loopne
inc
jns
out
jp
pop
push
pop
in
stos
pop
or
xor
in
xchg
aaa
push
push
cltd
jmp
jb
imul
xchg
lds
std
daa
adc
in
es
aam
mov
scas
mov
daa
and
negl
add
xchg
jmp
ja
in
push
pop
jle
fsubp
mov
out
pushf
callw
xchg
mov
jae
fdivp
mov
mov
jle
int3
jb
cmp
sub
sub
pop
pop
push
cltd
xchg
push
xchg
push
je
mov
test
fs
in
std
es
lea
cmc
popf
scas
cs
push
iret
js
inc
dec
ja
mov
xlat
lock
jns
xchg
pop
sbb
push
les
jg
hlt
fbstp
aaa
cmp
cmp
sbb
das
enter
repz
repnz
xlat
aaa
call
enter
push
mov
and
scas
iret
js
out
sahf
es
mov
pop
or
sbb
cmp
jae
popa
pop
ds
nop
movsl
mov
inc
fdiv
fcompl
es
loope
movsl
or
js
jge
xchg
bound
scas
out
mov
shll
in
jne
out
add
in
xor
pop
mov
fidivrl
sbb
jae
hlt
jo
insl
fcoml
inc
xchg
xor
jo
out
inc
adc
in
pop
iret
sbb
inc
and
or
or
push
mov
mov
xchg
lahf
imul
xchg
in
shrl
adc
mov
mov
frstor
fildl
sti
push
add
repz
jbe
adc
in
fcomps
push
insl
mull
push
mov
call
push
add
or
and
stos
sti
pop
cmpsb
add
ret
ja
jecxz
ljmp
pusha
xlat
popf
cmp
arpl
sbb
mov
ret
jb
push
xchg
repnz
fucomi
lcall
mov
xchg
xchg
ficomps
test
imul
and
or
push
mov
les
aaa
and
xchg
ljmp
xlat
push
sti
daa
fiaddl
sub
iret
ja
cmp
aam
in
jb
mov
mov
bound
inc
nop
and
stc
int
stos
testl
jge
mov
dec
or
inc
cmp
adc
fwait
cmp
int3
ss
cs
pop
testl
or
cmpb
pop
fadd
jnp
arpl
sbb
pop
sahf
divl
lahf
jbe
push
flds
notl
or
xor
inc
scas
popf
fcmovu
push
imul
int3
sti
sbb
inc
fcomi
mov
pop
lret
in
lea
cmp
outsl
pop
pop
adc
add
fistps
or
in
ss
loope
sti
lret
aas
fcomps
xor
adc
std
inc
divl
mov
push
lea
inc
sbb
ds
idivl
js
push
jbe
mov
shl
jl
xchg
scas
push
popa
inc
notl
repnz
mov
lret
out
push
adc
push
cmp
fwait
and
cmp
jb
xlat
scas
jecxz
adc
push
div
pop
stos
xchg
dec
cmc
xor
shl
std
push
sub
subl
inc
lods
mov
std
roll
imulb
leave
daa
push
add
imul
pushf
sub
mull
mov
in
push
inc
or
fcomp
out
xlat
hlt
jg
jns
xlat
sahf
fldcw
testl
es
or
aad
bound
faddl
cwtl
xchg
pop
and
imull
sub
push
lcall
mov
outsl
adc
xchg
and
sub
xor
testl
jae
lods
negl
mov
pop
add
and
loopne
sahf
jb
pop
sub
testl
movsl
cmpl
push
insb
jecxz
mov
push
dec
fidivrs
pop
imull
jp
das
fldcw
stc
mov
jnp
cwtl
jecxz
ret
push
sbb
inc
mov
fimuls
xlat
push
inc
sub
testl
popf
fistpl
imull
mov
cmpl
dec
int3
fldt
push
imull
cmp
je
push
out
dec
pop
outsb
jnp
repz
mov
push
xor
test
sbb
div
push
addr16
popf
jae
sti
iret
call
mov
sbb
pop
dec
pusha
ja
mov
divl
stos
fs
test
jecxz
fldenv
div
sbb
mov
mov
into
xor
enter
cltd
enter
sbb
dec
mov
jmp
movsl
mov
cmp
jecxz
xchg
mov
stos
push
clc
ret
int3
ficomps
pusha
push
and
sub
lods
add
jle
push
mov
or
pop
aaa
test
aas
imul
test
icebp
pop
push
into
lea
cmc
test
jg
fisubrl
outsb
jecxz,pn
jbe
pop
fsubrl
fists
jne
cwtl
out
fwait
push
pop
in
clc
fucom
xorl
and
dec
insl
imul
fldl
push
es
out
rcrl
lods
dec
sub
iret
mov
test
pop
lahf
lock
gs
fsubrp
jmp
loope
mov
aad
repnz
ja
adc
int
add
or
popa
in
scas
cwtl
imul
jno
aad
dec
pop
popa
add
mov
lods
inc
testl
repz
je
aaa
push
mov
das
inc
pusha
imul
repz
ret
xchg
into
fsubrs
lret
pop
out
ljmp
dec
push
scas
lock
jge
xlat
cmp
dec
shl
pop
mov
push
sbbl
mov
jne
cmpsl
movsl
imull
xchg
fwait
add
mull
enter
adc
mov
pop
shrl
es
jmp
cld
in
pusha
aaa
jae
sub
sbb
dec
sbb
dec
inc
aas
fs
sub
inc
lahf
jno
xchg
out
dec
notl
push
cmp
ret
insb
rolb
sub
mov
inc
ljmp
push
cmp
sub
ja
jns
shll
lods
cmp
jmp
jp
pop
cmp
and
dec
inc
xchg
out
loope
jle
xorb
mov
cmp
rcll
mov
push
lahf
mov
jmp
adc
pop
rclb
pop
push
mov
mov
rorl
mov
daa
sub
test
pop
mov
ljmp
clc
inc
inc
pop
add
jo
mov
insl
cli
cmp
cmp
xchg
ja
and
fisubrs
fincstp
fs
repnz
or
pop
xchg
int
popf
insb
leave
divl
or
pop
notl
dec
lcall
and
test
jb
cmpsb
idivl
push
jecxz
jmp
sub
cltd
pop
aam
test
ds
inc
shlb
fsubs
negb
add
stc
cmpsl
sbb
hlt
sti
lahf
ret
idivl
xchg
and
xchg
xor
mov
shrb
das
lds
test
mov
fsubl
notl
aad
cmp
mov
pop
aam
aas
inc
jb
testl
push
stos
loopne
idivl
daa
ss
mov
xor
in
jmp
mull
and
sbb
cmp
sub
push
movsb
out
aad
pop
xchg
icebp
out
insb
testl
negl
add
push
test
inc
les
cmp
mov
mov
dec
cs
ror
xlat
dec
mov
fadds
add
pop
fnsave
mov
push
pop
test
mov
neg
inc
adc
test
cltd
mov
ljmp
in
mov
or
add
loop
push
pop
mov
xchg
inc
mov
divl
cmp
rol
sbbl
mov
sub
mov
push
sbb
fwait
notl
loope
add
xchg
lods
mov
inc
negl
xchg
leave
sbb
mov
negl
xchg
cltd
daa
imull
mov
notl
data16
mov
and
jecxz
and
mov
or
stos
mov
int3
sub
loopne
inc
repz
push
cmp
fistps
push
ljmp
std
pop
mov
imul
push
xchg
pop
fs
mov
xchg
xlat
scas
shll
mov
jae
cltd
xor
in
hlt
mov
cs
arpl
idiv
roll
in
shl
inc
ja
idivl
fimull
mov
addr16
adc
ret
imul
xlat
cwtl
sub
movsl
je
push
mov
mov
pop
stc
shll
mov
ret
jnp
mov
adc
loop
add
imul
jg
push
push
sbb
cmp
test
push
mov
bound
xchg
les
fldcw
scas
mov
std
outsl
or
push
cwtl
popa
jbe
outsb
or
int3
call
jp
inc
pusha
fwait
inc
dec
fstl
or
jg
mov
fildl
cmp
repz
mov
and
xchg
jbe
or
cmp
imul
arpl
or
cwtl
dec
add
test
dec
fimull
and
icebp
mov
jo
fisubs
inc
ret
daa
jo
push
scas
rclb
outsw
es
daa
fadd
and
jae
jnp
je
aad
dec
or
push
cld
pop
sbb
or
jb
lods
jge
cmpsb
xchg
mov
in
cmpsl
mov
adc
movsb
cmp
cmpsb
ss
and
mov
movsb
idiv
lea
jne
movzbw
movsbw
bswap
movb
movsbw
pushf
push
mov
pop
lea
call
push
imul
and
test
mov
mov
mov
leave
test
cld
xor
mov
repnz
icebp
xchg
push
test
lret
xor
mov
pop
mov
push
xor
add
mov
cmp
mov
addr16
repz
addr16
das
cmp
dec
stc
xor
cwtl
insb
add
inc
xor
bound
jo
into
into
iret
and
movsb
insb
dec
and
mov
jecxz
andb
and
dec
cwtl
cmc
mov
movsl
loopne
inc
add
mov
sub
test
ja
jge
rol
jns
adc
dec
dec
pop
in
scas
int
mov
movsb
dec
adc
xchg
popa
sbb
testl
or
jg
xchg
dec
mov
mov
in
daa
sbb
call
dec
pop
rcrb
adc
sub
fbld
dec
mov
inc
icebp
add
mov
mov
stos
mov
outsb
ljmp
cmpsl
rolb
inc
cmp
jnp
adc
clc
push
int3
fwait
imul
cmp
pop
add
in
fidivrl
addb
bt
mov
rcl
bsr
cmc
sub
bts
stc
movsbw
ror
mov
test
stc
sub
pushf
pushf
pushf
clc
pushl
popl
mov
cmp
call
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
pop
pushl
lea
mov
call
xor
jmp
mov
and
ja
lds
add
sub
rcrl
mov
sbb
stos
jns
lahf
dec
sbb
imul
js
add
scas
gs
lret
add
test
fstpl
or
mov
or
sbbl
xlat
aaa
call
jo
xor
rcrb
xlat
lods
push
mov
sbb
mov
cs
inc
add
push
cmpsw
movsb
shll
push
nop
pop
add
sbb
push
int
popf
neg
ret
inc
es
mov
out
test
shlb
adc
shll
add
add
jmp
loop
and
mov
sti
mov
dec
jno
inc
mov
xchg
mov
xor
push
xor
xchg
dec
xchg
sub
bound
or
stos
inc
andb
sahf
adc
repz
jnp
rcll
leave
jae
pop
shlb
bound
and
dec
push
int3
mov
mov
ffree
xchg
cmp
das
add
push
cmp
and
outsb
adc
pusha
xchg
or
mov
fsub
lds
sti
xor
mov
lret
outsb
xor
movsb
outsb
jp
jecxz
daa
into
pop
loope
mov
and
sub
xor
pushf
and
push
daa
adc
lret
cli
pop
cmp
pop
cmpsb
jns
mov
shlb
repz
les
mov
xchg
dec
mov
push
and
out
sbb
xor
out
inc
add
mov
int
cmc
pusha
sub
pusha
cmpl
movb
push
call
bt
add
jmp
movsbl
std
lea
pushf
jmp
test
bt
pushl
sub
call
call
mov
pushf
lea
jmp
mov
pushl
pushl
pushl
pushl
pushf
popl
call
mov
call
pushf
decl
pusha
jmp
movl
call
mov
movb
pusha
lea
jmp
jmp
add
movl
jmp
movb
jmp
push
pushl
mov
movw
pushl
pushf
movb
lea
jmp
daa
inc
sar
mov
rcl
not
dec
mov
pushf
push
add
jmp
movb
call
mov
pushf
bt
cmp
sub
cmp
shl
pusha
movb
mov
pushf
lea
jno
pushf
push
call
clc
mov
cmp
jmp
pusha
pushf
mov
push
mov
mov
push
lea
jmp
movl
push
pusha
push
mov
mov
pushf
push
push
pushl
ret
mov
push
mov
lea
jmp
dec
bswap
mov
lea
call
movb
clc
rol
jmp
mov
movw
call
stc
movsbl
mov
shl
add
mov
pusha
movb
mov
jmp
mov
test
movb
lea
jle
sub
push
push
mov
call
repz
popl
jmp
pushf
not
mov
pusha
jmp
pushf
pushf
mov
movw
lea
jmp
cmc
call
mov
pushf
pushl
movb
lea
jmp
xor
mov
cmp
stc
push
mov
test
cmc
cmp
movw
sub
call
mov
jmp
pusha
jmp
jmp
mov
jmp
call
pusha
call
bt
add
lea
js
push
movw
mov
push
pusha
movl
lea
jmp
mov
lea
movsbl
mov
pushf
mov
pop
mov
not
mov
call
jmp
mov
jmp
pushf
mov
pushf
pushf
lea
jmp
sub
jmp
pushf
pushf
mov
movw
pusha
pushf
mov
lea
jmp
shl
seta
push
mov
clc
sub
cmc
clc
shr
mov
mov
movb
pushf
popl
pushf
pushl
popl
push
mov
pusha
pushl
lea
jmp
mov
call
mov
push
pushl
mov
lea
jmp
popl
pushf
pusha
push
push
lea
jmp
movb
pushl
mov
push
mov
jmp
jmp
pushf
pusha
mov
push
mov
mov
lea
jmp
push
mov
lea
jne
stc
jo
clc
xor
call
add
push
jmp
stc
jmp
sub
stc
shl
call
shl
pusha
movzbl
cmp
test
bt
add
pusha
jmp
test
cmp
add
pusha
push
mov
jmp
jmp
push
pusha
mov
pusha
mov
movb
pushl
call
mov
pushf
jmp
pushf
popl
movb
mov
pushl
popl
pushf
push
lea
jmp
pushf
mov
pushf
pusha
push
push
mov
mov
lea
jmp
mov
movw
pushf
pusha
jmp
mov
pushf
mov
lea
jmp
aam
das
shr
clc
mov
shrd
rcr
ror
mov
cmc
test
bt
cmc
not
cmc
pushf
not
cmc
cmc
mov
and
pushf
pushf
jmp
lea
jmp
stc
shrd
mov
pushl
call
pushl
popl
movb
push
push
lea
jmp
cmp
rol
cmc
mov
sub
shl
mov
stc
cmc
add
jmp
repz
popl
jmp
jmp
pushf
pushf
popl
call
pushf
push
jmp
movw
mov
call
push
push
jmp
pushf
jmp
pusha
mov
pushl
pushf
push
lea
jmp
push
push
mov
push
mov
jmp
movzbw
mov
movzbl
bswap
mov
pushf
mov
movb
divl
lea
jne
mov
pusha
pushf
mov
call
call
movb
pushl
popl
push
movb
lea
jmp
pusha
call
and
xor
aad
xchg
mov
and
call
pop
pusha
mov
movw
pushf
lea
jmp
mov
pushf
push
pushf
pusha
lea
jmp
stc
call
cmp
pushf
pushf
pushf
lea
jne
and
ror
test
xorb
call
jmp
call
stc
mov
rol
not
sete
mov
jmp
repz
popl
jmp
call
lea
je
bt
pushf
jmp
setno
lea
ror
rol
btr
bswap
bswap
not
cmc
lea
ror
inc
bts
sbb
add
inc
lea
movzbl
call
pusha
mov
pushl
pushl
jmp
pushl
mov
call
push
push
mov
pusha
push
repz
popl
jmp
mov
jmp
mov
jb
lea
ror
ror
test
rcl
sub
shld
bsf
btc
dec
neg
bt
push
cmp
and
mov
rol
xor
mov
cmp
add
jmp
mov
pusha
pushf
push
pushf
pushl
ret
ror
test
mov
shld
add
mov
call
call
pushf
not
mov
jmp
mov
mov
jmp
pushf
popl
call
push
mov
pushf
pushf
pushf
popl
pushf
jmp
mov
jmp
mov
movb
movb
pushf
movb
mov
movw
mov
jmp
mov
jmp
push
inc
jmp
call
jmp
mov
push
pushl
call
cmp
pusha
ror
mov
shr
stc
not
mov
clc
cmc
cmp
pusha
add
clc
shld
pushf
pushf
push
mov
call
pushf
mov
push
push
pushf
popl
jmp
call
mov
jmp
mov
jmp
call
mov
pushf
pushl
popl
mov
movw
mov
mov
lea
jmp
aas
bsr
rdtsc
pushf
sub
jmp
call
cmc
mov
call
push
movzbl
cmc
bt
sub
pushf
pushf
inc
lea
jb
pusha
rol
movb
call
shl
cmc
neg
rcr
mov
stc
call
cmp
stc
cmp
jmp
pusha
jmp
test
test
pushf
add
mov
push
pushf
dec
clc
jmp
push
dec
test
bt
pushf
bt
lea
call
rep
rcr
pusha
mov
shl
bts
mov
cld
cmp
pushl
popf
mov
pushl
movb
pushf
lea
jmp
pusha
pushl
popl
push
lea
jmp
mov
pushl
pushf
pushl
movl
lea
jmp
pushl
mov
movw
movb
jmp
push
mov
pusha
pushf
mov
pusha
lea
jmp
jmp
movzbw
ror
bt
sub
bsr
inc
neg
bt
shr
push
or
and
pop
stc
btc
mov
pushf
add
jmp
cmp
cmp
jmp
xor
cmp
pushf
cmc
movw
xchg
pushf
cmp
cmc
mov
mov
sub
lea
js
pusha
pushf
lea
jne
pushf
pushf
push
sub
pushf
movb
call
aad
notl
cmp
add
pusha
mov
cmp
pushf
sub
cmp
cmc
and
pusha
mov
pushf
pushf
popl
mov
push
pushf
pushf
pushl
popl
mov
mov
lea
jmp
pushf
mov
push
mov
pushf
pushl
mov
push
push
mov
mov
pushf
jmp
pusha
mov
movb
mov
mov
jmp
inc
aam
mov
mov
rcr
mov
stc
jmp
mov
pushf
pusha
mov
call
bt
rol
cmc
push
stc
cmp
add
sub
jbe
pusha
pushf
mov
not
pusha
stc
bt
cmp
sub
push
mov
cmc
bt
sub
call
call
mov
push
mov
test
stc
add
pusha
lea
jmp
btr
rol
clc
sub
not
sar
bsr
shl
sub
rcr
neg
rcl
push
mov
stc
add
jmp
jmp
jmp
pushf
inc
push
cmp
sub
pushf
bt
pushl
clc
rol
stc
sub
call
mov
cmp
pushf
stc
sub
stc
lea
jo
clc
pusha
mul
call
pushf
jmp
pushl
pushf
popl
mov
pushl
popl
pushf
push
push
lea
jmp
clc
call
pushf
pushl
cmp
sub
jmp
jmp
push
mov
pushf
movw
lea
jmp
pushf
or
push
pushf
call
lea
jp
popl
pusha
lea
jmp
movb
pushf
mov
movw
lea
jne
repz
push
pushf
push
mov
pushf
lea
jmp
mov
pushf
call
xchg
pushf
call
mov
pushf
movb
lea
jmp
das
mov
shld
mov
rcl
pusha
mov
cmc
test
not
bt
not
test
push
sub
pushf
test
pushf
call
bsr
add
mov
mov
jmp
aam
pushf
aad
sub
mov
clc
rcl
pop
pusha
neg
aaa
mov
shl
aam
cwtl
shld
mov
rcl
cltd
seta
mov
bsr
daa
aam
mov
pushf
stc
pushl
popf
pushf
not
movsbl
call
mov
mov
jmp
pushf
mov
pusha
mov
call
test
setle
clc
mov
inc
adc
mov
cmc
sub
call
jmp
ror
mov
sbb
add
sub
add
rcl
bt
or
mov
xor
add
lea
lea
inc
call
movb
movb
mov
pushl
pushf
pushf
lea
jmp
jmp
mov
mov
mov
call
jmp
push
pop
add
pop
add
ret
pop
add
pop
add
mov
add
test
add
scas
pop
add
pop
add
pop
add
mov
add
pop
add
pop
add
pop
add
pop
add
test
pop
add
pop
add
mov
pop
add
pop
add
pop
add
scas
pop
add
stos
pop
add
lods
pop
add
movsb
pop
add
pop
add
pop
add
pop
add
mov
pop
add
pop
add
les
dec
mov
add
pop
add
mov
add
pop
add
pop
add
pop
add
lods
pop
add
pop
add
test
pop
add
pop
add
movsb
pop
add
movsb
pop
add
test
add
pop
add
lods
pop
add
movsb
pop
add
lods
pop
add
mov
add
pop
add
mov
add
pop
add
lods
pop
add
pop
add
pop
add
pop
add
mov
pop
add
test
pop
add
pop
add
mov
add
add
pop
add
pop
add
pop
add
ret
pop
add
mov
add
pop
add
lods
pop
add
pop
add
test
pop
add
scas
pop
add
pop
add
lds
jo
pop
add
pop
add
mov
pop
add
stos
pop
add
pop
add
pop
add
pop
add
pop
add
mov
add
ret
pop
add
mov
pop
add
pop
add
pop
add
pop
add
mov
add
mov
pop
add
pop
add
scas
pop
add
test
add
mov
add
pop
add
pop
add
mov
add
add
stos
pop
add
pop
add
pop
add
scas
pop
add
pop
add
pop
add
pop
add
test
add
pop
add
pop
add
pop
add
pop
add
add
mov
pop
add
pop
add
add
test
add
mov
add
pop
add
test
add
movsb
pop
add
ret
pop
add
test
add
ret
pop
add
pop
add
lods
pop
add
cmpsb
pop
add
pop
add
pop
add
les
dec
movsb
pop
add
pop
add
mov
pop
add
pop
add
movsb
pop
add
mov
pop
add
movsb
pop
add
mov
add
pop
add
test
add
pop
add
test
add
scas
pop
add
lods
pop
add
pop
add
mov
pop
add
pop
add
les
insl
mov
pop
add
lods
pop
add
pop
add
pop
add
movsb
pop
add
mov
add
mov
pop
add
test
add
mov
pop
add
pop
add
ret
pop
add
mov
add
pop
add
pop
add
pop
add
mov
add
mov
add
stos
pop
add
scas
pop
add
movsb
pop
add
pop
add
pop
add
mov
add
test
add
mov
pop
add
mov
pop
add
pop
add
scas
pop
add
mov
pop
add
pop
add
movsb
pop
add
pop
add
mov
pop
add
stos
pop
add
ret
pop
add
movsb
pop
add
pop
add
mov
add
pop
add
lds
sub
mov
pop
add
pop
add
mov
pop
add
pop
add
pop
add
pop
add
pushf
popl
jmp
mov
movb
push
lea
jmp
bswap
mov
push
bt
inc
pusha
mov
mov
test
test
add
call
sub
clc
shr
pusha
jmp
pushf
call
jmp
push
call
clc
sub
cmc
add
pushf
pushf
popl
pushf
pushf
pushl
popl
pushl
pushl
mov
lea
jmp
jmp
mov
pushl
call
jmp
cmp
pusha
call
call
not
movzbw
rcr
ror
shr
bsf
seto
jmp
jmp
pusha
push
jmp
push
mov
jmp
mov
jmp
repz
popl
bswap
lea
jge
pusha
rol
xchg
lea
sete
push
movsbw
mov
call
mov
movb
lea
jmp
push
pusha
not
pushl
pushf
movb
mov
dec
movw
stc
cmp
xor
push
add
stc
jmp
ror
pusha
bts
adc
mov
cmp
ror
cmp
btc
sub
movzbw
not
pushf
inc
jmp
xor
mov
jmp
cmc
add
mov
stc
not
call
lea
jne
setg
xorb
lea
mov
jmp
mov
jmp
pushf
mov
pushf
mov
lea
jmp
mov
call
clc
ror
not
call
add
movzbw
jmp
call
pushf
lea
jne
pusha
call
jmp
pushl
jmp
mov
push
mov
push
mov
pushf
pushf
push
repz
popl
jmp
call
call
mov
setbe
bswap
push
movzbl
sets
call
call
shld
mov
bt
cmp
clc
bt
add
pusha
pushl
push
movb
lea
jmp
pushf
mov
push
movb
movw
lea
jmp
call
add
call
mov
pushf
lea
jle
dec
push
pusha
test
add
mov
push
pushf
jmp
pushf
popl
jmp
mov
pushf
mov
push
push
pushf
pushf
lea
jmp
div
pushf
mov
pushf
mov
call
sub
mov
mov
pushf
mov
mov
lea
jmp
pusha
push
jmp
pusha
pushl
popl
push
lea
jmp
cmc
jmp
movl
call
pushf
pushf
pushf
pushl
popl
pushf
pushl
pushf
lea
jmp
cmc
call
sub
clc
mov
call
cmp
cmc
stc
sub
jmp
movsbl
or
test
mov
shl
movsbw
mov
jmp
or
test
xor
push
pusha
pushl
inc
push
decl
jmp
pusha
jmp
dec
pushf
push
bt
cmp
add
push
pushl
call
jmp
inc
pushf
clc
mov
stc
cmp
stc
call
bts
mov
btc
and
add
bsf
btc
or
xor
xor
neg
mov
cmc
stc
cmc
shl
push
cmp
shr
test
sub
je
cmp
or
cmc
call
push
pushf
pushf
mov
pushf
push
lea
jmp
push
pushf
mov
pushf
mov
lea
jmp
pusha
sub
pusha
bt
cwtl
cmc
stc
movw
sub
call
lea
jne
btr
rcl
xor
mov
call
inc
pop
call
pusha
mov
jmp
call
lea
push
jmp
mov
pushl
repz
popl
mov
pushf
mov
pushf
pushf
movb
lea
jmp
add
stc
aaa
mov
push
pushf
pushl
stc
xor
stc
stc
cmp
sub
test
test
neg
pusha
movb
lea
cmc
stc
rol
cmc
pushf
push
lea
jb
xor
pusha
sub
movb
mov
pushl
lea
jmp
mov
mov
pushl
pushf
mov
lea
jmp
aad
xor
movsbl
mov
sbb
stc
test
sar
mov
call
shl
pushf
mov
sbb
jmp
mov
jmp
mov
mov
mov
movb
pushf
repz
popl
pushf
jmp
jmp
jmp
test
stc
sub
mov
mov
mov
movb
lea
jmp
pushf
mov
pushf
movw
pusha
lea
jmp
call
lea
jne
bsr
ror
mov
pusha
call
jmp
lea
jne
call
jmp
push
pushf
popl
pushf
pushl
jmp
mov
push
pusha
push
lea
jmp
push
jmp
pushf
popl
call
mov
mov
push
mov
call
mov
cmc
ror
mov
jmp
push
pusha
pusha
pushf
popl
pushl
pushl
popl
pushf
movw
mov
lea
jmp
ror
mov
cmp
add
jmp
pushf
mov
call
pushf
xchg
pushf
jmp
pusha
repz
popl
pusha
pushf
mov
pushf
pushf
pushl
lea
jmp
call
call
lea
je
mov
push
mov
pusha
pusha
lea
jmp
jmp
pusha
lea
push
mov
pushf
movsbw
lea
jmp
add
push
jmp
pushf
repz
popl
jmp
call
stc
xor
cmc
mov
jmp
movzbl
pushf
pushl
inc
pop
mov
movb
dec
bt
test
add
pushf
mov
mov
mov
push
movb
push
pushl
ret
add
movl
jmp
call
shrd
neg
mov
bswap
pushf
sets
sub
bts
push
seto
rol
clc
clc
lea
btc
sar
shrd
bt
sub
pusha
rol
rcl
bsf
shld
sbb
sub
adc
pushl
not
ror
mov
cmc
push
test
add
pushf
mov
pushf
mov
pushl
lea
jmp
mov
mov
lea
jmp
call
cmp
shr
pushf
mov
call
mov
pushl
pusha
pushl
ret
push
movb
pusha
mov
movw
call
rcr
push
rcr
sets
rcr
push
clc
push
rcr
bt
pushl
mov
push
bswap
rcl
mov
movsbl
pusha
bswap
btc
ror
movw
dec
shr
shrd
xor
not
lea
bts
shrd
sub
neg
xchg
mov
adc
shr
dec
mov
jmp
sub
call
jmp
call
pushf
call
and
jmp
rol
mov
jmp
xchg
call
jmp
mov
movw
mov
pusha
push
pusha
movw
mov
pushf
mov
call
cbtw
pushl
cmp
cwtl
bt
cmc
sub
jmp
pushf
pusha
mov
movb
jmp
and
movb
jmp
shl
pushf
mov
call
jmp
cmp
lahf
movzww
pusha
xor
call
inc
dec
rol
bswap
xor
or
ror
mov
btr
btr
sub
shr
shr
inc
mov
call
lea
cpuid
clc
pusha
sub
stc
cmpl
pusha
mov
call
pusha
jmp
pushf
push
pusha
mov
movb
mov
lea
jmp
bts
call
inc
lea
lea
xor
add
bsr
movzbl
cmc
mov
mov
call
mov
pushf
popl
movw
jmp
push
repz
popl
pusha
mov
movb
push
lea
jmp
add
jmp
pushf
movl
mov
push
pushf
mov
lea
jmp
mov
push
pusha
jmp
mov
pushl
movb
lea
jmp
mov
movb
jmp
mov
movl
lea
jmp
mov
mov
lea
jp
pushf
push
lea
cpuid
clc
call
call
mov
lea
jp
pushf
pusha
pushf
mov
push
repz
popl
pusha
movb
call
pushl
popl
push
push
pusha
lea
jmp
movb
call
sub
bt
test
cmp
neg
push
pushl
cmc
stc
rol
push
mov
xor
cmp
add
jge
stc
sub
push
bt
clc
pushf
cwtl
bt
test
bt
sub
push
pushf
mov
movw
pushf
pushl
lea
jmp
pusha
call
pushl
popl
mov
mov
mov
mov
lea
jmp
mov
pushf
lea
jnp
pushf
pushf
popl
call
mov
shrd
ror
cmc
bsf
mov
rcl
push
cmc
mov
mov
cmp
mov
push
add
jmp
push
push
pusha
mov
mov
pushf
mov
lea
jmp
mov
pushf
pushl
pushf
pushf
popl
pusha
pushf
pushf
pushl
popl
pushl
pushf
mov
pushf
lea
jmp
not
jmp
sub
cmc
stc
test
sub
pushl
call
jmp
not
stc
cmc
cmp
sub
bt
mov
cmc
sub
pusha
mov
pushf
lea
jmp
pushf
jmp
mov
pushl
pushl
ret
bt
clc
cmc
xor
test
cmp
test
call
mov
rcr
cmc
push
pushl
popl
mov
push
bts
movsbw
movzbw
mov
xchg
seto
ror
jmp
pushl
call
mov
pushf
mov
lea
jmp
pusha
push
push
mov
mov
mov
mov
pushf
call
mov
call
movl
mov
mov
push
movb
movb
pusha
pushl
ret
pushl
call
jmp
pushf
mov
pushf
pushf
pushf
lea
jmp
call
mov
xchg
std
mov
cld
pushf
pushl
cld
mov
call
not
shl
sub
sar
shl
shld
cmc
neg
shld
movzbw
not
shr
and
shl
mov
call
bswap
push
xchg
bswap
lea
std
mov
call
mov
mov
pushf
mov
push
pushf
mov
push
mov
pushf
movb
movw
lea
jle
repz
push
pushf
pusha
jmp
movl
lea
js
pusha
pushl
mov
pusha
pushf
pushl
ret
setle
mov
mov
mov
movb
movb
pushl
ret
push
pushf
mov
call
clc
xor
call
mov
pusha
pushf
lea
jmp
cmc
mul
pusha
pusha
mov
mov
pushl
mov
jmp
movsbw
adc
jmp
call
shr
ror
lahf
mov
test
cmp
call
mov
pusha
jmp
push
mov
not
cmc
rcr
mov
bt
clc
call
mov
lea
jbe
mov
pusha
pusha
mov
jmp
clc
movb
and
call
push
mov
mov
call
repz
popl
lea
jae
pushf
pushf
mov
pushf
pushf
pushl
movl
lea
jmp
div
push
mov
pusha
call
pusha
call
jmp
mov
movsbw
pusha
call
pushl
popl
pushf
lea
jmp
call
shr
adc
adc
mov
test
test
sub
pushf
add
movb
push
pushf
popl
movb
pushf
pushf
movl
pushl
popl
pusha
movl
lea
jmp
jmp
pusha
jmp
not
mov
cmc
test
cmp
sub
mov
pusha
jmp
add
add
push
mov
push
movb
push
lea
jmp
mov
adc
jmp
call
sub
push
mov
movb
pushf
lea
jmp
mov
movb
pushl
pushf
lea
jmp
push
stc
add
push
jmp
mov
pushf
mov
call
pusha
mov
mov
lea
call
pop
pop
pushf
lea
jmp
pushf
mov
mov
push
mov
lea
jmp
clc
call
cmp
pushf
lea
jne
cmp
xorb
push
jmp
mov
mov
pushf
pusha
lea
jmp
mov
jmp
aad
push
lea
mov
movb
cmp
sub
cmp
xor
cmc
pusha
cmc
rol
call
pushf
movl
pushl
popl
pusha
push
lea
jmp
clc
cmc
pusha
cmp
pushl
popl
stc
clc
add
clc
pushl
popf
pushf
push
pushf
movb
lea
jmp
bsr
cmp
shl
mov
stc
shl
lea
add
pusha
not
inc
dec
bsf
xor
call
pushf
mov
pushf
jmp
mov
push
mov
push
repz
popl
pusha
mov
pusha
lea
jmp
push
jmp
add
mov
not
dec
cmp
mov
stc
add
call
jmp
pushf
jmp
lahf
rcr
mov
clc
sub
push
lea
jnp
push
pushf
mov
pusha
pushl
lea
jmp
mov
pushf
jmp
movzbw
lea
mov
pushf
call
push
pusha
mov
call
or
pusha
pop
add
and
sbb
sub
adc
mov
shr
test
add
pusha
movsbw
inc
movzbw
ror
rcl
call
call
pushf
jmp
jmp
pusha
pushf
push
mov
jmp
push
pusha
pushf
popl
pushf
pushl
popl
push
pushl
pushf
pushf
lea
jmp
call
pushf
mov
mov
jmp
push
pushf
push
mov
pushl
call
mov
movw
lea
jne
push
movsbw
shrd
sub
mov
clc
and
cmp
call
push
pushf
mov
pushl
push
lea
jmp
mov
jmp
push
mov
call
pushf
pushf
popl
call
pushf
call
call
pushf
push
movl
pushl
popl
movw
lea
jmp
mov
pushl
pushf
pushf
lea
jmp
mov
jmp
pushf
popl
movb
pusha
push
pushl
popl
pushl
lea
jmp
lea
ja
xchg
lea
btc
mov
lahf
lea
sar
sub
dec
lea
push
pushf
pushf
shrd
and
cmp
neg
pusha
mov
sub
pushf
bswap
pushl
bswap
mov
call
add
add
add
dec
add
add
push
inc
add
add
push
mov
add
mov
add
or
add
push
add
orb
add
mov
add
mov
add
add
jo
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
xorl
add
clc
mov
add
mov
add
add
mov
add
