push
call
ret
ret
aas
jg
dec
and
pop
pop
dec
fmulp
shrb
inc
out
xchg
popf
mov
or
dec
xchg
addr16
xchg
loop
outsl
addr16
xchg
in
or
test
add
mulb
scas
insb
out
outsl
push
call
lock
inc
fsub
fldenv
repz
in
push
push
sbb
cwtl
nop
int
cmc
sub
dec
jae
xchg
test
xor
outsb
lcall
es
sbb
mov
pusha
stc
dec
ja
in
andl
jl
jecxz
test
or
jb
aam
stc
jae
cmp
call
fidivrs
adc
pop
test
jp
ds
xchg
cmp
scas
jne
sbb
sub
jbe
add
inc
scas
push
cmp
cmp
and
mov
mov
dec
pop
mov
nop
cmpsl
in
jge
cmp
pop
push
dec
lods
jns
jge
xchg
mov
dec
inc
xlat
jmp
and
insl
clc
cmp
jnp
or
or
adc
mov
ljmp
jns
std
mov
jge
stos
sub
inc
mov
jno
stc
fs
xchg
ss
xchg
ret
test
sbb
pusha
inc
sub
call
mov
dec
sub
js
inc
mov
aas
and
mov
adc
adc
mov
push
sbb
sub
imul
dec
aad
add
jo
cmp
inc
lea
ss
dec
cltd
mov
das
mov
push
lods
xchg
pop
cs
and
dec
es
mov
outsl
add
fmull
loop
std
xchg
es
enter
sub
pop
lods
push
lods
out
sbb
cmp
ljmp
sub
push
or
leave
and
pop
sbb
nop
xchg
jb
ror
pop
and
es
jns
jmp
xor
imul
pop
aaa
mov
mov
jl
jnp
ret
and
inc
jecxz
ljmp
pop
push
shll
add
out
cs
lret
test
scas
sbb
sahf
pushf
cmp
out
push
test
dec
pusha
or
sbb
xor
movl
aad
ja
add
fsubrs
test
std
mov
mov
jl
das
and
repnz
cmpsl
notb
fwait
pop
inc
jne
push
or
mov
loop
jl
ja
ljmp
push
pop
mov
popa
movsb
movsb
adc
push
sub
mov
popf
xchg
cwtl
and
sub
push
dec
ljmp
jg
mov
sbb
sbb
jbe
xor
dec
ss
xchg
fwait
scas
bound
mov
xor
inc
push
push
sub
rol
inc
loop
call
aas
orb
mov
loop
loop
addb
sub
or
and
xor
pop
in
fisttpll
jbe
jmp
pusha
aad
cmp
mov
cli
push
push
int
pop
ret
mov
pop
adc
ds
sbb
sub
add
ret
sbb
out
or
push
sti
daa
mov
out
pusha
aaa
je
insb
xchg
ss
adc
cmpsl
inc
daa
add
pop
inc
gs
jo
sbb
sub
lds
push
cltd
lods
cmpsb
adc
pop
push
sub
lea
ret
or
cli
dec
mov
cmpl
inc
repnz
mov
test
fldcw
cmpsl
das
sti
fcmovnbe
push
jo
dec
out
je
jg
lock
pop
mov
mov
dec
int3
mov
imul
mov
je
xor
xchg
xlat
into
mov
xor
pusha
and
and
sti
in
inc
lods
mov
sbb
popa
push
je
mov
imul
add
mov
or
popa
fnstsw
mov
mov
leave
out
pop
leave
add
push
popw
out
push
sbbb
jno
pop
and
enter
sbbl
addr16
scas
mov
mov
lret
testl
popf
cs
adc
sub
aaa
out
push
xchg
xor
lods
or
ljmp
pop
inc
fnstcw
mov
adc
sbb
push
xor
adc
lods
fldt
fs
cmp
pusha
call
icebp
rclb
pop
sbb
or
lock
outsb
cwtl
pusha
push
dec
movsl
xlat
jle
push
call
hlt
mov
mov
push
fiaddl
xchg
push
bound
jae
fucomi
sub
cmp
aaa
repnz
js
and
dec
sti
das
out
and
sub
dec
xor
jb
das
dec
xor
cmp
icebp
mov
ljmp
shrb
leave
outsl
out
lods
test
cli
and
cmp
dec
loop
pop
lods
adc
ret
xchg
lret
xor
jmp
mov
push
sbb
xchg
pop
cs
inc
jns
jns
xor
mov
mov
arpl
in
jb
jbe
loop
mov
stos
je
and
lods
xchg
inc
insb
mov
std
stos
bound
js
xchg
addr16
adc
pop
cli
mov
std
aaa
mov
sbb
cmp
addb
jbe
mov
cwtl
fildl
out
sub
mov
lds
mov
int
xor
mov
pcmpeqd
sarl
cmp
cmp
out
pop
sub
lods
fistpll
push
add
fwait
xor
aaa
aas
xchg
xchg
cmpl
test
fs
int3
cwtl
mov
mov
inc
cmp
test
jo
add
push
adc
jno
cmp
lea
hlt
sbb
stos
aas
enter
rolb
push
mov
aas
adc
in
loopne
xchg
sub
testl
sub
adc
mov
int3
mov
cmpsl
scas
sbb
repnz
xchg
push
fnsave
popf
das
mov
insl
mov
pop
dec
bound
ljmp
mov
or
mov
mov
pop
into
jo
xchg
pusha
inc
push
pop
stos
sbb
xchg
aaa
sbb
adc
mov
and
les
inc
cmp
repz
mov
sub
jmp
ucomiss
sbb
das
iret
mov
out
int3
out
adcb
pop
and
pop
in
dec
pop
pop
js
xchg
dec
mov
cltd
or
and
sub
test
push
out
shl
add
fdecstp
mov
shl
add
hlt
ret
jae
mov
cmc
lods
fwait
int
arpl
sub
aas
inc
mov
dec
dec
test
mov
sbb
sub
movsb
xor
in
mov
outsl
and
adc
roll
jnp
dec
mov
cmpsb
pop
iret
push
std
in
sahf
sti
mov
sub
ss
sub
popf
add
idiv
mov
int3
in
mov
sbb
sbb
daa
stos
call
push
lock
insb
sub
pop
xchg
cmp
add
push
mov
mov
inc
les
fwait
lods
es
icebp
dec
sbb
dec
sti
iret
xchg
lret
sub
add
popa
adc
outsb
bound
ss
mov
jecxz
dec
adc
sbb
popa
mov
xor
jl
mov
es
pop
ret
jnp
ljmp
xor
jno
outsl
add
call
imul
iret
pop
aaa
ds
stos
ljmp
pushf
push
ret
insl
xchg
jp
add
subb
push
and
jecxz
shlb
fwait
inc
stc
jnp
sub
jecxz
jae
mov
jp
push
call
dec
push
imul
sbb
rcrl
add
orb
jle
adc
adc
dec
dec
jmp
int
xchg
mov
sub
inc
into
repz
movsl
mov
xlat
push
test
push
out
sub
mov
in
mov
and
movsb
sbb
dec
notl
pop
ja
popf
or
xor
dec
inc
mov
ss
cmp
cmp
cwtl
mov
dec
stos
ljmp
ret
jo
sub
add
testl
add
xor
dec
cmc
inc
xchg
inc
sub
arpl
movsb
repnz
mov
cmc
shrl
cld
jne
pop
aaa
push
jae
je
mov
mov
aas
ret
xlat
push
xor
xchg
xor
push
jns
test
jbe
pop
or
pop
add
ret
add
and
mov
loopne
std
fs
add
inc
inc
and
daa
lods
mov
add
testb
pop
mov
xor
imul
pop
test
cmp
fcmovb
jp
mov
pushf
call
into
pop
dec
les
cltd
pop
aas
xchg
fldt
dec
mov
cwtl
jno
push
pop
cli
adc
inc
cmp
adc
mov
add
cli
sbb
jg
popa
std
imul
dec
mov
lea
fisubrs
push
adcb
pop
loopne
aad
pop
stc
mov
cmpsl
fnsave
shl
inc
xor
daa
pop
jecxz
sahf
and
mov
sarl
pop
jmp
movsb
mov
jle
inc
jb
sub
dec
das
push
adc
jp
sub
jbe
push
cwtl
negl
fnstenv
sub
xor
dec
add
jne
loopne
popa
addb
lcall
and
scas
push
xor
xor
dec
insb
or
and
sub
cmpsl
xor
je
movsb
mov
sub
pop
push
subl
or
lret
in
sub
mov
scas
cmc
out
add
adc
pop
icebp
cmp
scas
sbb
sub
sbb
cmp
in
or
lods
loop
mov
lret
pop
sub
cld
dec
xor
aam
test
adc
mov
xor
xlat
pop
fistpll
push
fs
and
xor
lods
cmp
sti
pusha
sbb
push
cmp
inc
mov
pop
mov
enter
dec
lcall
sub
ss
mov
mov
inc
xchg
js
sbb
nop
scas
jl
xchg
movsl
add
or
ljmp
and
rcrb
pop
out
dec
clc
xchg
pop
ror
push
imul
mov
in
sahf
aas
in
pop
out
mov
clc
sbb
out
cmpsb
lock
outsl
and
xchg
fistl
sub
stos
popf
sub
rcll
fbld
push
xor
lods
xor
mov
adc
and
jmp
sub
icebp
jmp
xlat
sbb
pop
mov
dec
jl
repz
outsb
cmpsl
sarl
fdivl
xor
push
sti
mov
dec
push
mov
add
jecxz
loop
pop
stos
dec
pop
pop
push
in
dec
sub
push
int3
xchg
cmp
jle
rcr
or
ljmp
movsb
mov
pop
jg
pop
and
xchg
inc
stos
stos
lret
pop
insb
adc
popa
or
imul
in
inc
mov
sbb
cs
out
and
jecxz
data16
ret
xor
test
in
out
lcall
push
adc
fisubrs
pop
lock
roll
fstps
inc
outsl
dec
mov
movsb
scas
aad
cwtl
aad
xchg
in
leave
add
mov
mov
addl
pop
cmp
sub
cwtl
mov
test
mov
or
lcall
lret
mov
adc
and
sbb
dec
xorb
jne
mov
cmp
shrb
or
sbb
in
mov
mov
fidivs
xor
jg
xchg
mov
test
sub
dec
sbb
insl
aad
push
adc
jnp
cmp
ret
jnp
mov
leave
je
xor
xor
jnp
cmp
repnz
cwtl
repnz
les
jp
push
mov
and
aas
data16
dec
adc
jne
xchg
sub
push
bnd
fcmovnb
pop
lcall
std
mov
insb
leave
pop
in
daa
cmp
jnp
popl
out
pop
cmpsl
int3
and
mov
daa
repnz
xor
adc
adc
out
xchg
divl
imul
std
dec
mov
push
fs
push
jecxz
clc
mov
xor
loop
mov
fisubl
int3
xor
jns
pop
sub
into
pusha
loop
in
lea
imul
jns
mov
aas
frstor
lahf
xchg
dec
pop
inc
and
pop
dec
mov
cmp
rcrl
and
sbb
ret
shrb
add
stos
push
roll
int3
sbb
and
sub
jl
scas
cmp
add
leave
adc
jecxz
push
mov
fmul
rorl
sub
je
cwtl
inc
push
cmpsl
dec
jg
or
fnsave
imul
sti
pop
aad
sbb
insb
mov
loopne
add
dec
icebp
sub
loop
xor
push
scas
or
mov
sub
in
xchg
mov
les
sub
jno
push
adc
sbb
lret
inc
stos
pop
int3
jne
push
or
pushf
gs
popa
shrl
and
roll
add
sarb
loope
dec
lods
pop
std
cmp
stos
sbb
int
jnp
jne
dec
adc
sub
and
dec
shll
cmp
rcrl
repz
es
stc
pop
outsl
mov
stc
lock
pop
aad
jb
in
out
je
jl
sub
push
push
out
mov
pop
cld
push
jae
and
and
mov
dec
mov
or
sarb
lea
add
and
test
notb
mov
dec
mov
jecxz
mov
and
inc
inc
clc
repnz
xchg
or
out
decl
inc
inc
mov
or
add
push
rol
test
frstor
js
jbe
pop
dec
dec
data16
sbb
xchg
fsubl
ret
je
dec
xchg
add
xor
sub
pop
out
add
mov
fst
sub
aas
lret
ficoms
xchg
add
enter
in
int3
jnp
pop
fsubs
add
addr16
ljmp
push
and
addr16
mov
pop
mov
test
cmpsb
test
adc
jge
adc
ret
inc
jmp
outsb
insl
sbb
movsb
ret
mov
cwtl
fisubs
jae
fistps
adc
mov
mov
lock
push
out
cmp
mov
testl
mov
scas
pop
fbld
fiadds
lods
in
jae
jae
andl
cld
test
adc
in
aam
loop
lds
cmp
mov
in
out
jb
sbb
jecxz
cltd
xchg
aaa
outsl
mov
fimull
and
leave
ja
push
sbb
fiadds
out
pop
and
clc
lods
mov
std
mov
iret
jmp
out
jno
push
dec
sar
mov
in
lods
das
call
pop
or
dec
sarb
andps
xor
test
and
xchg
sbb
imul
test
cmp
fidivrl
mov
push
cld
jl
push
cmpsl
imul
and
sbb
adc
lods
dec
ljmp
test
inc
jmp
jle
mov
and
add
stos
add
addl
in
outsl
cmpsb
mov
inc
jl
cmp
rol
in
mov
push
std
vpxor
movsb
pop
ret
aas
out
cmp
push
mov
mov
cmpl
adc
cmpsl
in
mov
mov
sub
jmp
fldl
sub
mov
dec
pop
add
sbb
lods
or
mov
or
add
jge
aad
add
cmp
adc
int3
adc
mov
mov
or
pop
adc
push
ret
repz
fcoms
outsb
jb
push
gs
pop
sub
pop
mov
es
outsb
ja
into
xchg
mov
mov
mov
lods
test
jns
outsl
jb
pop
jmp
cmc
cmp
test
sahf
add
pop
jbe
jne
cmp
xor
call
fistps
xchg
daa
sbbb
sbb
or
rorb
or
or
rcrl
push
inc
adc
lcall
flds
shrb
and
cmp
stos
inc
shlb
push
outsl
je
sbb
stc
aaa
push
push
imul
fldl
xchg
pop
stc
lods
pop
loopne
xchg
jae
inc
jle
jno
stc
push
mov
sar
pop
add
shll
lea
scas
dec
aaa
mov
es
hlt
cltd
out
dec
mov
xor
iret
out
sbbb
ja
pop
stc
xor
add
lret
div
pop
or
lods
idivl
jne
inc
lahf
testl
inc
jnp
or
sbb
loope
and
stc
loop
mov
jnp
daa
or
cmpsl
leave
je
add
xor
jno
rcrl
hlt
fidivl
aam
cmp
pop
jmp
jbe
movsb
sub
mov
xchg
jae
jl
or
xchg
sub
adc
mov
into
jmp
into
aas
mov
push
scas
cld
das
movsl
inc
cmp
fisubs
in
and
rcr
sub
and
pusha
dec
push
mov
add
mov
leave
xchg
inc
and
push
xor
inc
outsb
lock
pusha
test
sbb
and
insl
dec
and
fadds
out
sarb
vmwrite
add
fisubrs
push
or
dec
mull
jae
cmp
mov
push
shll
mov
mov
out
add
cmp
or
ds
push
pop
cmp
push
daa
or
xlat
lods
sbb
and
add
inc
dec
sub
fcompl
jo
mov
sahf
cltd
xlat
mov
dec
aaa
xlat
aaa
and
cli
jns
add
loop
lock
mov
dec
mov
and
test
jae
mov
sub
int
arpl
and
and
movsb
loop
push
push
ljmp
dec
sub
fldt
out
dec
repnz
dec
and
jmp
pop
inc
nop
jns
cltd
pop
insl
push
addb
lock
pop
pop
jecxz
add
repz
jp
or
dec
pop
push
sbb
adc
fildll
pop
dec
push
mov
repnz
inc
mov
push
daa
ret
mov
push
sbb
int3
and
mov
add
push
and
inc
cmp
push
insb
test
in
hlt
mov
arpl
and
out
push
mov
or
sbb
out
mov
sub
and
dec
pop
loopne
xor
jg
sbb
push
clc
inc
jb,pt
or
popf
inc
mov
mov
push
mov
xchg
jecxz
aas
push
sbb
mov
jbe
lods
inc
sbb
mov
xchg
movsb
cmp
dec
mov
jge
push
adc
rclb
aaa
fwait
inc
mov
jge
mov
js
sub
jae
int3
jl
push
xchg
loope
inc
dec
repz
and
xor
mov
sub
xor
inc
push
stc
sbb
jbe
andb
mov
mov
movsb
out
push
les
fbld
push
sbb
in
int
cmp
ret
push
stos
xchg
out
sbb
adc
cmp
dec
push
xchg
mov
sub
paddq
imul
testb
lret
nop
stc
push
dec
xor
mov
mov
bound
mov
sub
stos
sub
imul
call
imul
lock
in
inc
push
pop
inc
inc
ds
pop
inc
push
imul
loope
jmp
imul
fimuls
pop
imul
lds
mov
lea
xchg
outsl
nop
shrb
and
sbb
cmp
les
ds
jnp
xor
cmc
and
or
imul
dec
mov
xor
mov
pop
out
or
and
pusha
adc
cmp
pop
hlt
pop
in
or
inc
cld
test
push
pusha
mov
out
xchg
mov
add
cmc
loop
fdivs
inc
jbe
sbb
cmp
xchg
loop
pop
daa
outsl
push
mov
mov
rolb
sub
mov
mov
idiv
pop
xlat
mov
fisubs
stos
scas
pusha
cwtl
xchg
gs
cs
icebp
ret
xchg
add
test
sbb
mov
cmc
mov
repnz
mov
inc
sbb
aad
cmp
jno
mov
std
in
rcll
cs
dec
mov
ret
mov
sbb
movsl
push
inc
jmp
lret
packuswb
mov
test
lods
dec
test
pop
sbb
movsb
mov
pop
jns
aad
out
inc
add
jl
rcr
mov
dec
inc
fstpl
mov
ja
aaa
xchg
imul
pop
popa
xor
inc
xor
inc
js
jl
lods
push
xor
fwait
add
fdivl
mov
ret
xlat
lret
cmpsl
xor
or
cmc
mov
mov
les
sub
in
push
scas
aaa
test
mov
xor
inc
push
leave
mov
mov
jae
sar
inc
mov
js
loopne
rcrb
xor
imul
out
ja
out
sahf
into
xchg
push
add
adc
xchg
incb
xchg
jns
aas
rolb
mov
lahf
out
inc
lods
in
cmp
arpl
xorl
xor
ror
rorb
incl
mov
gs
adc
loopne
sbb
jne
cld
mov
sahf
add
insl
mov
out
lods
test
pop
inc
sti
push
pop
cmp
pushf
and
cwtl
movsb
mov
movsb
push
mov
push
scas
int
sbb
fdivr
jp
mov
mov
xchg
ds
adc
jns
fcmovu
dec
lret
adc
mov
in
incb
pop
sub
push
insb
inc
add
out
in
or
dec
lahf
ds
push
jae
or
test
inc
cltd
cmp
mov
fcoml
xchg
mov
dec
ffreep
negl
call
cmp
pop
cmp
ss
mov
ret
sub
in
call
adc
test
jg
sbb
xlat
stc
pusha
jmp
mov
add
adc
xchg
and
mov
xchg
nop
inc
cwtl
repnz
mov
in
les
rcll
lods
scas
inc
xor
mov
pusha
xor
fiadds
mov
mov
inc
in
rorb
lods
test
vorpd
les
sbb
cmp
sub
dec
sti
xchg
xchg
inc
lods
mov
shll
and
in
pop
xorb
inc
daa
xchg
into
cmp
push
test
xlat
lds
fdiv
xchg
addr16
dec
mov
push
jnp
mov
inc
xchg
mov
mov
popa
or
rcrl
addr16
stos
jne
xchg
in
xor
push
xchg
inc
sub
enter
dec
xchg
cmp
int
rcll
cli
and
lods
and
push
mov
xchg
mov
int3
ss
lret
cwtl
dec
fimuls
scas
in
cltd
fst
rclb
adc
mov
xchg
jnp
and
jle
dec
pushf
out
sub
imul
es
pop
inc
xchg
pop
jmp
adc
in
mov
addb
sar
jns
or
hlt
xchg
out
fwait
mulb
fucomip
mov
in
subl
in
push
test
cmp
rolb
fdivl
pop
mov
push
jecxz
cmp
push
fdivl
into
lea
out
push
mov
xchg
mov
loopne
call
or
dec
push
xchg
rcrb
data16
arpl
lcall
mov
out
inc
xbegin
or
test
push
es
push
and
repz
dec
lds
dec
inc
mov
push
in
filds
in
jge
push
pushf
cli
fwait
add
fisubrl
stos
cmp
cmp
xchg
cmp
mov
fwait
iret
leave
add
inc
pushf
pusha
or
cmpsl
inc
adc
mov
mov
or
push
xlat
scas
scas
fidivrl
js
arpl
push
cmp
mov
hlt
pop
fsubrl
inc
push
lea
mov
xchg
aaa
push
jmp
fiaddl
test
push
hlt
jp
fidivrs
push
sahf
hlt
loopne
lods
cmp
adc
cmp
xchg
stc
adc
xchg
jle
loop
outsb
add
pop
popf
dec
jb
aam
test
push
es
and
stos
pop
push
jmp
jl
cltd
push
lods
leave
adc
inc
hlt
add
fisubs
xchg
ja
adc
ds
pop
sbb
mov
fldt
mov
gs
pop
and
das
jmp
push
push
test
popw
fiadds
add
pop
neg
sbb
push
out
sbb
mov
mov
mov
pop
pop
jne
fldcw
mov
adc
lods
adc
int3
in
push
xor
jbe
orl
add
sbb
pop
sbb
fwait
mov
fiadds
insb
fistpl
xchg
out
sub
cmp
in
inc
das
jecxz
stc
jae
inc
popa
lods
push
test
mov
push
pop
lods
sti
dec
inc
sub
icebp
jl
inc
adc
mov
adcb
jl
iret
xchg
jmp
out
or
test
loope
out
lcall
not
and
fadds
adc
pop
sbb
mov
jmp
lret
pusha
cmpsl
inc
icebp
ret
lds
imul
jmp
int
jbe
xlat
and
aad
mov
xor
lds
lret
and
stos
std
inc
jae
jns
mov
flds
aaa
nop
sub
fs
dec
bound
mov
and
mov
inc
push
out
push
cmpsb
outsb
pop
xchg
addr16
popa
cmp
test
sbb
dec
leave
nop
fstps
inc
sbb
and
mov
push
xor
mov
push
dec
inc
pop
sub
pop
jne
std
add
repz
xchg
js
inc
aas
adc
pop
das
mov
lods
pop
in
mov
dec
test
push
dec
ret
mov
cli
in
pop
insl
shl
mov
fs
icebp
xor
test
decb
cmp
push
in
push
jne
lods
shll
out
pusha
mov
test
jnp
push
xchg
and
add
adc
call
dec
orb
pop
clc
or
mov
inc
leave
mov
pop
xchg
es
js
mov
in
jo
adc
out
inc
jnp
insb
repz
and
or
enter
pop
in
leave
sub
lock
cltd
xor
mov
and
jp
daa
fcoms
push
mov
inc
cli
fiadds
jne
sub
dec
pop
outsb
xchg
movsb
daa
add
jae
ret
pusha
scas
or
nop
cld
adc
jmp
push
push
mov
movb
repz
sbb
add
inc
or
pop
es
stos
cmp
push
lods
and
aam
aad
mov
sub
mov
mov
in
adc
or
in
adc
out
outsb
cmc
jmp
or
sbb
into
in
dec
nopl
sar
xchg
psubq
test
mov
mov
movsb
stos
arpl
mov
mov
inc
pop
out
cmpsl
mov
jge
push
cwtl
repz
mov
mov
pop
loope
ret
fistpl
push
rcr
sub
in
aas
and
loopne
or
and
xchg
in
ror
add
jp
fnstcw
mov
cli
dec
push
mov
mov
mov
leave
jmp
pushf
jno
imul
movsb
xor
cmp
push
adc
jnp
mov
lock
mov
mov
sub
jnp
lods
fsubl
inc
scas
or
xchg
xor
loopne
cmpl
pop
pop
fwait
or
shr
inc
fcmovbe
jmp
into
or
aaa
mov
pop
mov
fmuls
cs
sbb
aad
cmp
adc
or
les
mov
dec
mov
daa
lret
pop
pushf
push
addr16
fdiv
gs
leave
incl
ss
and
scas
lcall
loopne
mov
mov
pop
cmpsl
pop
stos
test
and
jno
pusha
int3
std
xchg
xchg
mov
and
mov
mov
jp
mov
sub
decl
mov
je
ljmp
sub
fistpll
inc
test
pop
xor
pop
les
ss
or
inc
stos
push
pop
mov
pop
mov
cli
jns
jnp
pop
leave
push
pop
adc
and
mov
cmc
inc
ljmp
mov
fdivrp
pop
loopne
in
adc
jb
mov
scas
pop
movsl
xlat
push
mov
popf
jno
pop
clc
shll
pop
and
test
cmpsb
push
rorl
xchg
add
int3
pop
push
jl
vmovlps
cld
mull
mov
out
adc
iret
pusha
clc
lret
lods
ret
roll
js
sbb
and
loop
inc
push
xor
fnstcw
mov
fmull
jmp
cmp
addl
lcall
push
mov
sbb
push
xchg
sbb
mov
xchg
cltd
or
mov
andl
cmp
push
mov
stos
in
sbb
int
fsubp
mov
xchg
sub
rolb
mov
mov
jle
inc
in
jae
cmp
jnp
stos
push
cmp
sub
enter
push
cmp
lahf
jbe
push
mov
in
sub
mov
hlt
ror
xlat
add
lds
addb
faddl
fs
jmp
call
fsubl
enter
xchg
aaa
pop
dec
lods
idivl
mov
out
cs
cs
dec
fs
std
into
ret
lods
pop
xchg
or
and
dec
out
fidivs
sbb
in
or
add
movsb
ss
pop
or
sub
lods
adc
push
das
jecxz
test
jns
push
and
loop
popa
enter
pushf
imul
pop
inc
and
push
dec
jmp
dec
sbb
cmpsl
sub
movsl
ss
jecxz
jl
xchg
fists
cwtl
iret
add
mov
mov
in
loop
mov
cs
cmp
clc
ret
je
aad
lahf
ss
push
push
add
adc
fstpl
adc
inc
mov
lret
data16
sub
xor
fiadds
and
jo
loopne
sub
xor
dec
mov
dec
mov
test
outsb
jge
adc
sbb
pop
mov
push
in
dec
lock
sbb
sbb
sub
sub
sbb
cmp
adc
cld
mov
lahf
gs
xor
mov
push
fidivs
loopne
int3
sub
imul
or
fdiv
inc
stos
push
cwtl
push
arpl
dec
cmc
jle
pop
add
sti
mov
sbb
cmovnp
scas
sub
lock
insl
aaa
bound
jbe
dec
into
xchg
mov
pop
or
test
es
mov
sbbb
or
mov
inc
cmpsb
xchg
and
pop
mov
int
inc
inc
jae
inc
cmpsb
push
rorb
out
mov
loopne
or
adc
xchg
cmpsl
add
or
xacquire
sbb
add
notb
imul
mov
mov
stos
mov
call
jnp
sti
adc
daa
push
loop
mov
gs
xchg
sub
notl
inc
inc
pop
xchg
lea
xchg
mov
loope
dec
mov
das
in
fmuls
pop
frstor
mov
xor
jl
insb
push
push
aas
scas
push
aaa
mov
xchg
mov
gs
xor
stos
js
xchg
fdivrl
sbb
xor
pop
fs
cmp
xchg
dec
sbb
imul
leave
mov
and
push
push
mov
cmp
cmp
jmp
cwtl
mov
in
aaa
inc
mov
popa
xor
pushf
pop
mov
xchg
push
adc
imul
or
sbb
popa
adc
adc
ret
push
aaa
js
adc
push
pop
lahf
inc
cwtl
add
loop
arpl
and
std
adc
nop
icebp
mov
xor
and
lea
mov
mov
fs
aas
adc
inc
inc
daa
aad
xchg
ljmp
xor
fimull
and
popf
add
jb
lds
int3
jo
out
in
jne
mov
sbb
xchg
xchg
lods
sbb
subb
out
fs
shlb
cmpsb
or
jge
inc
cld
xlat
dec
das
arpl
pop
mov
jb
imul
cld
aas
xchg
aad
fdivrs
push
mov
dec
xor
jnp
rolb
sub
aam
aas
imul
mov
cwtl
xor
mov
adc
mov
xchg
xor
shlb
jbe
add
inc
cli
into
je
dec
push
inc
imul
push
push
jecxz
mov
scas
push
inc
nop
fwait
sbb
mov
in
sbb
push
or
dec
cld
mov
mov
lret
lahf
push
pop
jmp
popl
sub
lahf
jecxz
cmc
enter
mov
cmpsl
or
flds
rclb
movsl
xchg
cmp
sbb
sub
adc
pop
pop
sahf
cmpb
aaa
scas
ja
mov
ret
cmp
outsl
rclb
jno
cmpb
pop
pusha
cmpsb
push
xor
outsl
mov
mov
shl
ret
inc
xchg
scas
lea
pop
cmpsl
pop
jle
sbb
jle
testb
xchg
jl
sub
notl
xor
pop
push
repz
cmp
out
xchg
fildll
or
ljmp
pop
test
cmc
sub
adc
negb
pop
sub
xor
sbb
cmc
sbb
cmp
test
movsb
in
ficoml
mov
or
mov
sahf
push
mov
inc
ljmp
mov
lods
mov
call
xchg
gs
lret
ljmp
mov
sahf
xchg
xor
mov
adc
loope
pop
mov
out
push
push
mov
stos
xchg
mov
jo
sub
xchg
or
jne
dec
mov
dec
dec
jp
int
or
cwtl
push
dec
pop
push
fcoms
cmp
insl
cli
mov
add
iret
fsubr
cltd
out
sar
or
add
pop
xchg
push
adcl
data16
push
sub
movsb
cld
loop
dec
pop
mov
stos
das
and
xchg
sbbl
xlat
leave
mov
test
and
test
inc
int3
in
rcrl
aad
mov
push
lahf
jno
imul
in
xchg
fwait
sub
sahf
push
lcall
adc
insb
cmp
pop
cld
cmp
cmp
lock
or
daa
rcr
mov
jb
pushf
bound
shr
xor
lahf
add
mov
je
test
pop
cmpl
sbb
ja
and
or
popf
aaa
lret
out
sub
xor
push
sub
scas
clc
ljmp
std
loop
and
test
lret
sub
or
call
stc
decl
test
orl
fsts
or
lcall
loope
ljmp
jle
mov
pop
repnz
dec
and
xchg
sbb
cmp
push
dec
mov
lea
testb
push
xor
xchg
mov
stos
jp
movsl
pop
stc
mov
sub
sub
xchg
and
sub
cmc
sub
test
jns
lret
clc
adc
adc
mov
je
ror
fisubs
call
jmp
jge
lret
push
fs
pop
inc
mov
mov
lcall
mov
jb
aam
push
repz
mov
pushl
fdivs
aaa
ret
ret
mov
shll
push
dec
inc
frstor
inc
jp
xor
fadds
jb
dec
fistps
int
fbld
jge
push
rorl
mov
inc
pop
mov
push
loopne
mov
jecxz
fs
mov
sub
mov
out
mov
xchg
dec
call
adc
test
dec
dec
dec
hlt
mov
aam
cmp
gs
scas
push
jnp
cli
push
cmc
sbb
mov
mov
push
xchg
stc
sub
cmpsl
pop
xor
sbb
jo
je
orl
dec
pop
fiadds
sbb
repnz
les
xchg
mov
pop
xchg
xor
addr16
mov
adc
sbb
stos
adc
sub
cmp
mov
call
scas
and
cli
lret
int3
sahf
pop
jge
pop
sti
jge
leave
pop
shlb
sub
sbb
sbb
int3
mov
or
mov
hlt
arpl
xor
insl
xor
and
pop
adc
cmp
js
pop
push
sbb
test
popa
es
imul
xor
pop
mov
lea
mov
jp
mov
inc
fmulp
adc
shl
outsb
xor
stc
shrl
insl
lds
aas
in
sbb
int3
cmp
daa
cld
jo,pt
xor
aad
rcrb
test
push
push
in
imul
sbb
mov
pop
jae
insl
push
mov
jb
cltd
mov
xlat
jo
cmp
inc
sbb
aaa
repz
js
mov
xor
xlat
and
adc
aad
testb
jecxz
aad
outsl
cmp
cmc
xor
mov
dec
loop
add
xor
pop
cmp
adc
sub
sub
cmp
xor
sub
and
push
cmp
xor
mov
scas
dec
mov
sub
pop
cmp
cmpsl
and
arpl
xchg
bound
pop
loopne
arpl
adc
sub
jbe
xchg
int3
and
xlat
sbb
push
pop
push
loop
pop
rcll
arpl
dec
les
pop
or
pop
jnp
dec
das
cmp
shrl
or
dec
mul
shl
testl
enter
sub
outsl
fsubrl
data16
mov
imul
pop
pushf
in
jp
cmp
hlt
in
push
out
insb
lods
cmp
stos
popa
je
pop
dec
adc
outsb
leave
mov
sbb
jno
cmp
out
adc
cmp
jle
addr16
add
ds
inc
mov
outsl
jmp
pop
insb
xchg
bound
into
daa
dec
inc
mov
cmp
and
leave
shl
gs
pop
and
outsb
sbb
aam
pop
addr16
or
xor
lcall
inc
fcompl
cmp
das
xchg
cwtl
lret
inc
inc
push
fs
dec
jnp
loope
popa
dec
and
aam
cwtl
xor
out
mov
push
push
test
xchg
mov
pmulhuw
sahf
xchg
stos
scas
jno
fs
sbb
sub
mov
xchg
sub
inc
stc
ljmp
testl
stc
jns
jg
pushf
outsb
rolb
jae
lmsw
lret
or
loopne
or
or
lea
imul
pop
push
xchg
iret
rclb
sub
les
sbb
mul
test
sbb
int
and
sub
adc
sbbl
in
sbb
popf
movsl
out
xor
sub
sbb
es
add
push
pop
lret
and
aaa
lods
dec
mov
aad
repz
xor
sahf
sbb
push
lahf
sub
out
addr16
lcall
push
dec
xor
out
add
push
mov
addr16
enter
cwtl
sbbb
add
repnz
aad
inc
mov
or
pusha
pushf
xchg
mov
stc
fiaddl
push
jecxz
mov
xchg
jle
mov
push
cli
int
mov
test
mov
stos
lret
pop
test
dec
inc
mov
idivl
int
and
fidivrl
test
inc
clc
into
ljmp
xor
pop
or
lret
pushf
std
ljmp
sub
or
sub
inc
sbb
cmp
lods
sub
cmp
stos
test
data16
dec
inc
xlat
fidivl
fwait
js
icebp
sub
cli
out
aam
mov
shlb
into
jmp
ja
or
out
xor
jp
xchg
out
das
xchg
xchg
mov
sub
xor
test
adc
dec
ja
pusha
std
or
jle
add
rcrl
loopne
test
pop
add
sub
ror
push
cltd
lahf
sahf
int
mov
xchg
inc
pop
leave
push
mov
jno
dec
fcmovnbe
inc
iret
outsb
pop
repz
test
mov
or
int3
sti
inc
stos
popf
aas
jmp
add
jg
sarb
mov
mov
aad
repnz
sbb
dec
or
inc
cmp
aaa
notb
push
sbb
xchg
mov
movaps
mov
outsl
push
jbe
out
adc
jne
mov
xor
add
add
lods
out
std
sbb
sbb
sbb
mov
lcall
popl
add
xor
xor
and
pop
lea
rorl
out
sbb
cwtl
mov
add
fwait
lods
rcrl
adc
pop
insl
test
add
dec
lret
sbb
jmp
add
pop
out
lcall
dec
mov
mov
in
pusha
js
pop
push
mov
data16
or
dec
cli
or
dec
xchg
push
lahf
mov
and
popf
popf
cmp
sbb
loopne
in
testb
inc
jge
adc
ljmp
and
das
mov
mov
mov
cmp
sbb
push
pusha
sar
outsb
rcl
pop
jae
jge
ret
mov
xchg
push
mov
add
imul
or
inc
dec
popw
sbb
insl
negl
cmpb
sbb
jge
sub
pop
pop
jns
pop
add
add
hlt
dec
and
test
lds
or
mov
mov
fstp
mov
mov
push
mov
icebp
cltd
push
jns
pop
fisubrl
nop
and
dec
cmp
or
or
popf
clc
bound
jmp
gs
dec
popa
dec
in
dec
scas
popf
arpl
aad
std
sub
stc
add
or
sbb
loopne
daa
cmp
sub
pushf
pop
jmp
inc
dec
mov
mov
push
push
out
mov
jmp
sbbb
in
dec
test
pop
dec
mov
mov
outsb
pushf
mov
xchg
in
testb
xchg
call
js
inc
ret
sub
pop
cmpsl
loopne
mov
idivb
loopne
dec
cmp
push
pop
sahf
xlat
int
mov
repz
popa
xor
mov
lret
shrl
xor
in
cmpsl
lahf
ds
xchg
idivl
xor
pop
and
add
mov
lea
les
inc
in
sbb
cmc
xor
lcall
loopne
sub
or
lea
mov
test
pop
jmp
adc
jg
xchg
sub
jle
dec
int3
push
xor
adcl
lods
mov
add
std
mov
aam
movsb
out
xchg
xchg
imul
adc
ds
mov
dec
in
sub
mov
pop
lds
test
pusha
pop
or
and
repnz
cmp
push
incl
sbb
dec
cmpsb
enter
popl
les
aas
jnp
jae
adc
fwait
push
adc
and
loop
inc
imul
shrl
ljmp
mov
add
mov
int
push
ret
lods
nop
aam
popa
cs
loope
or
push
cwtl
repz
or
stc
ret
lret
leave
xchg
adc
pop
rcll
mov
pop
cmp
ds
xchg
cmpsb
aam
icebp
mov
add
or
es
ret
out
inc
ljmpw
test
bound
cmpsl
inc
daa
incl
in
fistl
xchg
insb
sub
push
inc
rol
imul
cmp
out
sbb
ret
out
fidivrl
aas
fdivrs
icebp
adc
insl
aam
cs
aas
bound
out
loope
les
dec
scas
mov
out
dec
sti
cmpsb
sahf
sbb
mov
jp
and
jne
or
dec
push
xchg
xlat
xor
adc
xchg
mov
out
xchg
adc
outsl
lahf
repnz
push
xchg
push
pop
lret
or
rcl
xchg
arpl
pop
xor
push
xor
es
mov
push
jo
addl
aad
sbb
mov
aas
jae
scas
addr16
xor
fnstenv
xchg
mov
cmc
fildl
jne
jmp
xchg
mov
xchg
adc
sbb
cli
pop
sbb
jecxz
mov
pop
push
and
outsl
dec
push
cmpsl
mov
ja
jb
adc
or
scas
mov
jg
mov
mov
xchg
dec
insb
or
mov
sahf
jmp
xchg
sahf
sbb
push
xchg
mov
mov
mov
hlt
push
es
cmpsl
sti
inc
push
decb
lret
scas
out
fdivl
xchg
test
adc
int
das
filds
outsl
push
add
push
fmulp
jl
out
ret
dec
dec
jo
cmpsl
jge
mov
dec
dec
xor
and
pop
arpl
dec
xor
lahf
dec
ret
xor
jo
addb
je
lock
cmpsb
femms
fists
or
and
inc
add
ss
push
scas
sahf
dec
cli
adc
stos
push
sbb
xchg
cltd
push
inc
mov
inc
mov
push
incl
pusha
or
push
dec
xchg
jb
test
fistpll
ret
inc
pop
jb
and
fldt
add
xchg
push
adc
imul
xor
inc
daa
iret
gs
js
inc
gs
popl
ljmp
jae
mov
pusha
fdivr
out
mov
and
stos
sarb
lret
mov
mov
fisubs
out
pop
or
mov
pop
ja
icebp
out
mov
and
inc
bound
mov
sub
xor
ret
xchg
lods
mov
lea
mov
xorb
xchg
sbb
add
lods
xor
bound
jbe
les
rolb
cmp
push
fs
cmp
inc
ror
mov
pop
adc
rcll
icebp
dec
adc
push
das
pop
add
mov
fs
sti
pusha
jmp
or
mov
xor
les
add
xor
xchg
mov
push
repz
or
pusha
sub
es
mov
arpl
ret
es
roll
add
mov
xor
out
loop
mov
push
jmp
mov
and
jne
mov
push
dec
mov
xor
cltd
mov
shrl
sub
dec
inc
frstor
push
jl
mov
filds
push
enter
dec
dec
outsl
test
add
mov
and
xchg
cmpsl
out
push
cmp
inc
sub
aas
sub
mov
lea
es
xor
add
int
cmpsb
iret
lea
mov
loop
jo
pushf
pop
xchg
dec
in
sbb
fisttps
jbe
mov
mov
sub
sub
stos
xchg
ret
hlt
xchg
roll
fnstcw
out
mov
stc
in
pusha
ror
pop
rcll
test
out
mov
ljmp
xor
and
scas
xchg
icebp
mov
jecxz
mov
pop
test
sahf
push
iret
jl
mov
mov
jl
sub
dec
std
fs
sbb
lock
pop
imul
or
inc
pusha
scas
and
into
and
dec
xchg
dec
and
lds
adc
inc
sub
icebp
aam
cmpsb
insb
subl
xchg
fidivrs
cwtl
cmp
push
lret
clc
mov
ret
adc
xor
xor
sarl
movsb
shrl
push
test
pop
ljmp
and
dec
leave
daa
stos
hlt
pop
xor
outsb
cs
mov
orb
push
sub
mov
fmulp
sub
shrl
sub
call
mov
imul
out
pop
hlt
or
lods
jnp
xor
xchg
inc
pop
fdivrl
mov
and
lods
repnz
cltd
inc
fwait
outsb
ret
push
push
and
push
adc
shrb
xor
enter
hlt
add
nop/reserved
and
fidivl
cs
pushf
lods
rcrl
enter
cmp
xchg
sbb
dec
pop
hlt
mov
adc
jp
sbb
mov
add
icebp
xchg
or
test
dec
cmp
mov
int3
adcl
cmp
pop
jle
cmpl
in
xor
cwtl
lret
adc
and
fcmovnb
int3
sub
lds
mov
push
sbb
call
scas
cmp
mov
pop
xor
cli
sub
or
xor
in
lcall
dec
jmp
ljmp
mov
out
cmc
out
movsl
leave
jle
sarl
arpl
fiadds
cmp
int3
push
mov
pop
stc
lahf
push
add
push
xor
add
pop
js
xchg
mov
shlb
insb
push
add
dec
jge
insl
mov
test
lock
cmp
fnstsw
and
xchg
mov
or
cmpsb
inc
dec
sub
cmpsl
xchg
outsb
mov
outsb
cmc
lahf
imul
dec
fistl
cld
sbb
pop
repz
iret
jns
sub
mov
cmpb
rcll
xlat
cmp
loopne
sbb
xor
pop
mov
shlb
push
scas
sbb
pop
clc
mov
sbb
sbb
stos
xchg
std
iret
adc
mov
mov
ljmp
sub
or
push
nop
icebp
adc
cmpsl
mov
adc
and
xchg
xchg
dec
fwait
pop
pop
jbe
xchg
cmp
ret
push
in
mov
adc
int
mov
cwtl
aad
mov
adc
lea
test
std
push
dec
mov
test
das
sbb
mov
adc
dec
and
adc
push
jge
jbe
out
dec
or
pop
inc
dec
adc
sbb
jnp
mov
sub
imul
push
in
xor
adc
cwtl
and
fdivp
pop
sti
xchg
rcrb
inc
adc
nop
sub
mov
dec
mov
imul
xor
inc
insb
call
dec
lea
xchg
imul
mov
int
movsl
mov
pop
jno
in
rcrl
xchg
xchg
xchg
jne
lods
aam
mov
mov
xchg
and
jle
lret
jp
sub
shufps
icebp
mov
pop
insb
add
xchg
filds
sbb
out
push
div
insl
push
loop
daa
pop
pushf
sub
mov
addr16
addb
push
adcl
stc
cld
test
push
xlat
mov
xchg
into
test
scas
sbb
xchg
add
xchg
add
sbb
or
adc
sub
bound
sti
or
rcr
cmp
cld
dec
xlat
and
pop
xchg
push
int
sahf
xchg
movsb
adc
shrb
dec
in
cmp
xor
adc
sarb
std
dec
insb
rcrl
and
sub
xor
sbb
add
in
push
add
push
aas
cmp
sbb
adc
mov
inc
inc
in
pushf
popa
lret
mov
in
or
lahf
pcmpgtd
addb
xor
lods
jo
pop
inc
scas
jns
aad
repz
sub
sub
int
push
in
adc
push
repnz
popf
sbb
outsl
in
popf
dec
iret
dec
push
imul
rol
xorl
dec
jge
jl
add
int
pop
xchg
in
xchg
mov
adc
notl
xor
inc
push
call
mov
decl
movsb
mov
dec
lret
mov
pop
in
fdecstp
rep
out
mov
lret
loopne
gs
sub
je
xlat
cmpsb
arpl
pop
cld
jbe
stc
push
or
cmc
mov
mov
jnp
xlat
and
add
cltd
popf
or
out
out
mov
xor
sub
mov
sub
cld
jp
jns
sbb
cmp
call
push
enter
cmc
sbb
xor
xor
adc
jecxz
loop
mov
mov
cmp
pop
pushf
inc
or
pop
mov
dec
out
sbbb
in
in
pop
jl
pusha
in
adc
cmpsl
mov
xchg
data16
inc
fdivs
movups
dec
insb
cltd
or
je
les
mov
or
and
loope
mov
jo
xor
jecxz
pop
pop
adc
inc
mov
or
lods
xor
and
lret
lcall
fistpll
xchg
hlt
shrl
push
mov
pop
pusha
test
out
test
sub
in
and
shll
cltd
xor
loop
imul
dec
add
enter
dec
pop
mov
mov
or
call
inc
pop
adc
loop
js
sbb
or
ja
mov
daa
or
lahf
xor
mov
rcrb
or
xor
cmpsb
sbb
iret
mov
adcl
lods
adc
jae
or
xor
inc
sub
push
insl
dec
cmp
out
sahf
push
jb
mov
lcall
xchg
pop
pop
mov
bound
mov
shll
out
add
xchg
pop
decl
sbb
pusha
inc
cmp
xor
loopne
outsl
test
ficompl
not
pop
js
sbb
mov
pop
xor
sti
out
mov
pop
mov
in
dec
inc
hlt
shll
orl
mov
fdivrl
xor
rcrl
jnp
outsl
jbe
out
sub
mov
xor
jle
sbb
sbb
xchg
cmp
sarb
call
add
out
seta
inc
xchg
sbb
idivl
dec
dec
dec
in
arpl
xlat
scas
repnz
push
jmp
mov
mov
in
mov
or
out
test
call
and
fwait
and
sub
mov
cwtl
lods
aas
cld
mull
jb
push
mov
push
roll
lret
jb
iret
fidivl
jb
insb
arpl
ret
test
scas
rorb
daa
lds
bound
outsb
push
fwait
pop
lds
push
cmp
add
ljmp
dec
add
outsb
push
push
stos
loopne
shll
mov
mov
adc
ret
popf
adc
popf
scas
mov
sub
mov
scas
aam
sti
jle
mov
cs
in
inc
mov
sbb
leave
or
lods
cwtl
mov
mov
cmp
mov
subb
mov
fdivrl
rcll
add
jmp
popa
dec
ja
outsl
mov
pop
push
xchg
pop
out
inc
push
sbb
ret
mov
pop
arpl
mov
mov
or
call
or
test
fwait
mov
inc
sub
adc
add
or
push
fdivrl
movsl
xchg
jl
rcll
dec
mov
dec
adc
fisubrl
aaa
mov
mov
xlat
ret
iret
stc
test
mov
lds
jl
repnz
iret
inc
js
lcall
arpl
or
xor
sarb
inc
mov
cmp
sarb
hlt
jp
cmpsl
push
test
dec
dec
lds
mov
jae
pop
in
lea
mov
sbb
shll
jbe
mul
and
movsl
cli
xor
cld
xor
adcb
movsl
cmp
stos
mov
jle
pusha
xchg
xlat
pop
jne
inc
jmp
mov
into
sbb
fimuls
outsb
enter
sbb
inc
stos
and
mov
dec
mov
xor
jbe
mov
es
adc
inc
in
imul
movl
mov
loope
popf
jae
mov
out
jne
aad
ret
int3
and
xor
int3
rclb
stos
cmp
or
push
lcall
sub
and
ds
or
jae
and
mov
js
add
stos
lret
cmp
and
dec
jecxz
std
adc
add
xchg
outsl
int
pop
scas
jae
mov
adc
cwtl
icebp
mov
rolb
insl
dec
ljmp
je
sub
sbb
daa
push
loopne
ds
imul
sarl
pop
or
bound
adc
push
xlat
mov
scas
popa
sub
jmp
pop
xchg
test
xorl
adc
mov
add
mov
incl
movsb
ja
cmp
cmp
mov
fstpl
dec
movsl
jp
cli
push
outsl
jmp
out
lds
mov
je
xor
cmp
push
scas
rorl
jns
loope
movsl
decl
sbb
push
sahf
sbb
jnp
mov
nop
pop
imul
out
push
add
ret
fimull
pusha
mov
rcr
mov
test
mov
out
fdivl
popf
std
stos
cmp
scas
repnz
jbe
stos
test
fdivrs
or
mov
sbb
pop
cmp
xchg
mov
lcall
xchg
ljmp
ret
sbbl
jecxz
andl
fucomip
pop
lods
mov
xlat
cmp
andps
scas
in
dec
nop
or
adc
jg
mov
into
fistpll
mov
push
adc
lahf
loop
ljmp
les
sbb
jecxz
xchg
mov
pop
je
leave
out
outsb
adc
test
jmp
lret
and
cmp
jle
cmp
incb
ljmp
mov
stc
lods
int
xor
out
mov
stos
lret
adc
pop
jnp
in
jge
test
ficoms
cli
inc
cmp
dec
andb
xchg
loope,pn
mov
jp
outsl
xlat
adc
xcrypt-cfb
cmpsl
and
add
call
sahf
fcomi
sbb
sti
xor
fistl
test
mov
pop
das
dec
jo
mov
sbb
push
mov
mov
decb
dec
jg
insl
or
je
sub
mov
xchg
lods
add
cmp
into
or
ret
test
push
mov
push
push
std
int
fstpt
xor
rorl
mov
out
inc
push
pop
ss
inc
aam
jge
test
jle
dec
insl
in
cmp
mov
ja
push
hlt
mov
aas
lret
jb
inc
adc
dec
push
inc
roll
stos
test
sub
movsb
mov
xor
mov
pop
andb
dec
adc
cmp
loopne
adc
fcmovu
push
dec
push
mov
cmp
xor
loop
mov
call
sub
sub
add
nop
jne
dec
divb
data16
fwait
aaa
sub
mov
sahf
add
push
jbe
fs
sub
ss
and
stos
xchg
icebp
and
adc
inc
xlat
pop
jne
jge
shll
jmp
das
mov
inc
dec
add
jg
add
mov
inc
imull
cwtl
movsl
mov
out
gs
pop
sbb
pop
jno
xchg
mov
stos
push
cmp
cmpsl
xor
aad
add
cli
jmp
out
push
fsubs
shl
cwtl
not
loope,pt
mov
rolb
jmp
pop
add
mov
mov
sbb
movsb
or
repnz
jnp
ret
clc
lods
add
rcll
movsl
push
leave
aam
sub
idiv
xor
xchg
inc
add
xchg
sbb
ds
bound
push
fiaddl
stos
xchg
imul
or
add
push
xor
mov
xor
dec
lcall
cmp
inc
call
rep
adc
jecxz
cmp
mov
or
out
and
jg
mov
xor
and
xor
lods
out
mov
or
shll
pop
lock
xorb
in
jnp
adc
dec
out
push
sbb
adcl
popf
inc
dec
aaa
or
pop
pop
loopne
adc
je
push
sbb
das
cmpsl
mov
jl,pn
sub
leave
xor
loope
cmp
fwait
lcall
add
xchg
loop
iret
aaa
es
and
mov
test
mov
stos
test
xchg
xchg
xor
in
addr16
push
xchg
jle
test
fnsave
sbb
lahf
enter
inc
mov
push
js
or
aam
in
xchg
mov
ljmp
in
jle
pushf
aam
cmp
imul
push
inc
dec
or
mov
dec
sub
xor
lret
jecxz
mov
mov
mov
or
pop
in
popa
sub
xor
fldenv
dec
sbb
hlt
mov
aas
out
inc
test
mov
or
pusha
mov
jns
icebp
addr16
inc
data16
pop
pop
mov
jbe
movsb
xchg
ljmp
int3
sahf
lret
mov
dec
fnstcw
ljmp
adc
cmpb
mov
mov
popa
int
xor
in
cmpsl
pop
ss
out
scas
enter
insb
xchg
fiaddl
push
pop
xchg
addb
xor
out
ret
mov
lock
push
jp
fcomps
dec
mov
mov
sub
sbb
sbb
repnz
lea
inc
lods
test
xchg
je
daa
outsb
aaa
jb
sbb
cltd
xchg
inc
sahf
pop
ljmp
pop
in
roll
aam
mov
pusha
repz
lock
mov
pusha
jnp
jne
bound
push
jecxz
mov
dec
xor
xchg
mov
push
insb
push
or
out
xor
push
fst
adc
repnz
sahf
mov
ds
push
fdiv
add
clc
insl
jmp
adc
cmpl
xlat
or
insb
insl
mov
aam
shrl
push
popf
fnsave
pop
stc
loope
cs
incb
sbb
inc
ss
fsubp
xchg
pop
and
cmpsb
xor
dec
add
xor
xchg
dec
sub
pop
pop
sbbl
dec
cmp
and
push
adc
rcrl
jno
add
xor
dec
xchg
fmull
aam
sbbb
add
aad
cmp
mov
inc
pop
mov
mov
cmp
push
rcpps
mov
arpl
fsts
dec
test
dec
in
xchg
mov
aad
in
pop
push
aam
pop
pop
pop
adc
cld
jg
loope
hlt
sub
cmp
in
fsubrp
into
pop
shr
data16
pushf
jge
cmp
mov
push
pop
in
sarl
pop
pop
pop
mov
test
int
popf
add
adc
jl
xchg
mov
push
jno
sbb
dec
push
jle
js
add
inc
inc
mov
sbb
dec
ja
jl
inc
jne
je
xor
jo
nop
inc
and
sbb
fldl
inc
sbb
xchg
sti
push
cmp
js
cmp
dec
mov
jns
out
addl
mov
or
inc
jmp
add
test
out
aas
xchg
nop
inc
ficompl
mov
aam
pop
movl
push
ficompl
cmpb
test
cli
jg
das
test
ljmp
addb
jl
jo
mov
mov
xor
push
sti
nop
repz
je
test
fimull
jge
xor
mov
daa
pop
adc
xchg
jae
fwait
push
pop
adc
fildll
rcl
mov
xor
push
dec
or
inc
sub
mov
test
sub
js
jmp
mov
push
pop
in
and
call
push
sti
ljmp
sbb
sbb
adc
jecxz
push
jns
les
push
mov
popf
sbb
lock
mov
xchg
stos
mov
repnz
outsl
sbbl
mov
jae
fiadds
es
add
aas
rcll
xchg
jae
push
dec
pushf
lahf
xor
add
cmpsl
pop
mov
stos
popa
dec
jno
pop
add
js
xchg
rcl
stos
dec
cltd
lret
or
and
or
jg
pop
idivl
cmp
and
in
sbb
push
jbe
in
sub
inc
or
in
pop
and
xor
add
xchg
fnstcw
outsl
test
pushf
xor
push
test
jnp
pop
push
mov
nop
inc
add
icebp
mov
add
ret
fwait
xchg
sub
in
push
cmp
cmpxchg
cmp
jle
mov
in
or
mov
and
pusha
dec
push
xchg
sbb
jno
jne
pop
test
fidivl
add
pop
aad
hlt
cmp
icebp
aaa
push
pushf
mov
push
push
mov
xorl
addb
insb
push
sub
out
stc
stos
jb
xchg
stos
pop
jle
xor
jg
popf
sbb
outsb
pop
imul
jno
lret
xor
or
pop
xorl
push
es
push
pop
lds
cmp
dec
and
loop
xlat
ret
jle
leave
adc
bnd
outsb
stos
aad
int3
lret
dec
mov
out
subl
push
in
aam
sbb
push
cmp
insl
scas
mov
xchg
dec
cs
xchg
push
dec
push
sub
adc
sbb
enter
push
rorb
in
stos
xor
and
or
push
out
lret
imul
mov
dec
mov
nop
shl
jl
and
int
popf
jns
test
xor
out
xor
xchg
movsb
adc
insb
movb
or
xchg
push
mov
in
push
stos
mov
fmull
aam
aaa
outsl
mov
push
jns
pop
pop
jbe
jne
mov
inc
loope
push
xchg
mov
sbb
sub
arpl
sub
xchg
test
fsubrs
add
fnstsw
push
sahf
fists
pop
sbb
xor
push
adc
sub
inc
ret
fstl
gs
inc
mov
fisttpll
cmpsl
push
daa
jnp
inc
jns
ja
add
xor
and
out
inc
pusha
ljmp
bnd
or
test
xchg
sti
inc
test
call
inc
xor
sub
mov
push
gs
test
and
gs
pop
movsl
dec
lcall
imul
jp
push
out
decl
aam
cmp
outsl
fidivs
in
mov
aad
adc
lcall
fimull
in
jecxz
mov
xchg
movsb
adc
lds
call
mov
mov
jle
fisubrl
je
mov
add
lods
lods
int3
nop
cs
out
arpl
inc
sbb
pushf
out
add
hlt
pusha
das
dec
outsb
xchg
inc
outsb
scas
adc
fldt
cld
cs
rcrb
shrb
jb
in
mov
sar
push
sub
iret
lock
iret
mov
rcrb
dec
dec
lret
fldpi
mov
jnp
ja
call
lods
fisttpll
cltd
movsl
cld
sub
sub
orb
in
xchg
fstps
pushl
aad
dec
cmpsl
aam
rcll
cs
xchg
je
movsl
aam
popa
mov
pop
cmpsb
push
scas
jg
add
sbb
lahf
sub
insb
sar
dec
xchg
push
dec
test
mulb
dec
jmp
cmp
shll
les
cmpsb
shrb
stc
out
mov
adc
icebp
js
xchg
sbb
adc
movsb
fwait
scas
mov
push
inc
and
sub
mov
mov
xchg
js
pop
aam
stos
and
into
iret
fdivl
push
ljmp
adc
xchg
rcrl
andl
jno
or
pusha
dec
out
decl
jmp
lret
adc
aas
fcomps
fbstp
pop
mov
push
xor
fwait
pop
out
test
push
dec
out
arpl
mov
mov
cmp
fcom
iret
out
repnz
movsb
movsb
and
ljmp
in
and
mov
sahf
pop
sbb
mov
mov
xor
loop
mov
movsb
push
cmpb
and
aas
stos
jge
push
sub
sbb
mov
shrl
xchg
pop
aad
sbb
sbb
lds
pusha
fnstcw
xchg
outsl
xchg
pusha
or
popa
lock
or
out
js
sub
mov
leave
cs
out
into
mov
inc
cwtl
mov
arpl
or
xchg
or
sub
fiadds
cmp
mov
jg
and
inc
adc
sbb
sub
mov
sbb
jle
out
add
scas
int
out
fdivrs
dec
repnz
icebp
or
pushf
arpl
js
dec
cmp
addr16
popa
scas
push
mov
notl
out
adc
repz
inc
gs
push
push
test
in
xchg
rcrb
mov
xchg
mov
scas
jecxz
loop
pop
lods
add
jbe
sbb
mov
int3
cmp
inc
shll
push
test
inc
sbb
adc
test
aad
push
jmp
shrb
scas
sub
or
adc
test
jge
mov
and
dec
pop
adc
jns
rorb
inc
push
daa
jle
or
dec
pop
in
or
rcll
mov
decb
push
sub
nop
clc
and
adc
gs
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
mov
jns
lret
and
imul
cmp
rorl
repz
icebp
inc
pop
rcrb
into
in
stos
in
scas
push
xlat
pop
test
and
mov
dec
out
sahf
leave
pop
dec
imul
outsb
scas
lods
add
xor
inc
ja
jnp
sahf
dec
std
lock
into
rol
and
rol
xchg
hlt
aad
mov
adc
les
stos
imul
sti
add
cmpsl
xor
lods
mov
mov
inc
ja
pop
sub
dec
sbb
cmp
mov
inc
xchg
.byte
add
add
and
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
and
add
add
add
mov
add
addb
add
and
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
and
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
and
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
and
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
and
add
add
add
mov
add
addb
add
and
add
add
add
add
add
rolb
add
add
and
add
add
add
add
add
rolb
add
add
add
fwait
or
add
add
add
add
add
add
loopne
add
add
add
and
add
add
add
add
add
lock
add
add
add
fwait
or
add
add
add
add
add
add
add
add
and
add
add
add
add
add
adc
add
and
add
add
add
add
add
and
add
and
add
add
add
add
add
xor
add
and
add
add
add
add
add
inc
add
add
and
add
add
add
add
add
push
add
add
and
add
add
add
add
add
pusha
add
add
and
add
add
add
add
add
jo
add
add
add
and
add
add
add
add
add
addb
add
fwait
or
add
add
add
add
add
add
nop
add
add
and
add
add
add
add
add
mov
add
add
fwait
or
add
add
add
add
add
add
mov
add
add
add
and
add
add
add
add
add
rolb
add
fwait
or
add
add
add
add
add
add
rolb
add
and
add
add
add
or
add
add
add
and
add
add
add
or
add
add
add
and
add
add
add
or
add
push
add
add
add
and
add
add
add
or
add
push
add
add
add
and
add
add
add
or
add
push
add
add
add
and
add
add
add
or
add
push
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
add
and
add
add
add
or
add
add
add
fwait
or
add
add
add
add
or
add
add
add
fwait
or
add
add
add
add
or
add
add
add
fwait
or
add
add
add
add
or
add
add
add
fwait
or
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
pop
add
add
add
add
add
adc
add
add
add
add
add
clc
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
in
add
add
add
int3
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
push
mov
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
fiaddl
add
add
in
add
add
add
fcomp
push
add
add
add
add
add
add
add
fiaddl
add
add
in
add
add
add
in
push
add
add
add
add
add
add
add
fiaddl
add
add
in
add
add
add
lock
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
fiaddl
add
add
add
add
add
add
add
in
push
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
xor
xor
push
outsl
pop
clc
stc
push
sub
mov
int3
lret
int3
cmp
cmc
inc
std
insl
sti
mov
inc
xlat
sub
push
sti
aam
mov
mov
stos
leave
add
cmp
and
and
div
xor
push
ret
sbb
jne
mov
daa
push
mov
push
sahf
mov
push
adc
arpl
ficoms
sub
popf
inc
adc
fwait
out
jle
incl
jp
icebp
test
loopne
clc
repnz
adc
mov
jns
idiv
loop
jne
repz
cmp
out
cvtdq2ps
popf
mov
sbb
test
lahf
mov
sbb
bnd
dec
pop
push
stc
adc
push
inc
addl
add
sub
aaa
movsb
push
fdivrs
scas
xchg
scas
int
adc
fsubrl
mov
stc
les
pusha
movsl
mov
sbb
out
and
cmp
jno
xlat
pop
xchg
mov
push
inc
xchg
aam
nop
pusha
adc
into
mov
sarb
cmp
mov
out
outsl
pushf
retw
mov
fcoms
push
nop
loope
add
mov
xlat
or
dec
mov
pop
rolb
dec
movsl
hlt
testl
popf
mov
fcompl
imul
jg
jnp
ret
clc
dec
insb
mov
outsl
add
and
push
dec
mov
dec
mov
add
out
aad
ljmp
cwtl
sarb
xor
out
pop
fsubrs
aad
lea
fstpt
fld
adc
mov
dec
mov
jne
aam
sbb
xchg
aas
fst
sbb
or
mov
repz
cmp
in
adcb
mov
loope
mov
das
ret
xchg
sub
and
fdivs
pop
iret
cmp
addr16
mov
cmc
push
jbe
dec
xchg
cwtl
jno
and
push
dec
pop
pop
adc
movsl
dec
das
and
cmpsb
add
or
sub
movsl
dec
push
mov
xchg
lds
das
jecxz
out
fbld
xor
dec
or
iret
add
jle
push
loop
cld
lcall
jo
xor
lea
push
push
out
sub
pop
aad
imul
mov
pop
clc
hlt
xor
jp
orl
jae
sub
aad
pop
rcrl
mov
pop
inc
es
push
xchg
js
nop
sub
jecxz
lds
dec
ss
jle
mov
sub
mov
pop
mov
sti
mov
call
lods
scas
xlat
lcall
mov
dec
add
lret
push
and
leave
xor
inc
negl
sbb
iret
xchg
or
jno
sub
popf
adc
mov
insb
mov
add
stos
sub
cltd
imul
stos
negl
mov
loope
adcl
imulb
sub
outsl
cmp
loopne,pt
xor
sbb
push
cld
jp
sbb
into
movsb
loopne
sahf
mov
sub
add
push
pushf
aam
rcrl
outsl
pop
rolb
sub
cltd
pop
jbe
shl
arpl
orl
rorl
sub
sbb
cld
xlat
orb
ds
and
cli
jae
js
enter
or
inc
imul
lock
or
adc
roll
lods
xchg
ss
lcall
ret
jle
fildl
sbb
lahf
mov
rcrb
je
cmp
test
dec
ficomps
sbb
dec
fldcw
pop
jbe
mov
icebp
xchg
push
inc
adc
sub
loop
or
enter
orl
testl
cmpsl
jecxz
sbb
jl
int
mov
call
xor
lret
pop
iret
pop
xchg
sbb
cltd
adc
mov
jle
jp
hlt
push
push
ja
mov
push
rclb
in
aas
ret
pop
jp
push
es
int
or
inc
jns
jp
scas
pop
and
inc
fstpl
hlt
lds
cmpsb
pop
test
stc
or
jp
dec
xor
mov
cmpsl
and
xor
lock
aas
xor
mov
sahf
movb
jge
adc
sub
sub
stc
mov
das
sub
test
adc
and
push
sbb
push
inc
mov
loopne
out
sub
fdivrs
sbb
inc
cs
rcrl
negb
pop
nop
add
inc
rorb
popf
push
xlat
jbe
lahf
rolb
or
movsb
and
repz
mov
es
in
repnz
lret
das
or
jle
icebp
divl
or
add
lds
jl
loopne
xchg
testl
in
sbb
fiaddl
jno
es
jae
popf
test
sub
shr
push
fimull
jge
leave
inc
decb
rol
cmc
scas
fisubrs
push
repz
mov
sbb
and
js
jae
pop
xchg
repnz
add
ljmp
or
add
lret
inc
pop
xchg
lods
pop
dec
aaa
mov
mull
push
sbb
mull
or
mov
cmpsb
lods
in
aad
filds
lahf
mulb
xor
mov
jg
int
aad
inc
xor
mov
add
dec
call
add
push
jne
loope
ljmp
sbb
fldenv
inc
dec
xlat
inc
rcl
xchg
hlt
cmp
leave
cmp
data16
ljmp
aad
movsl
clc
mov
ds
iret
push
mov
fidivrs
fidivrs
loope
pop
pop
lret
jl
lahf
jnp
xchg
push
mov
call
inc
mov
and
mov
addr16
mov
loope
push
sbb
inc
out
imull
pop
je
dec
mov
sbb
dec
mov
js
lds
ds
loopne
xor
cmp
jmp
cwtl
and
sub
push
xor
add
call
cli
mov
cmc
aad
test
movsl
mov
pop
xor
loop
lahf
int
in
aam
xlat
add
popf
push
mov
mov
xchg
shll
arpl
sub
popf
pushf
sub
cmpsb
test
mov
pop
loope
iret
daa
sbb
add
rorb
add
mov
and
test
jge
inc
pop
pop
pushf
nop
jle
inc
add
sti
lods
lahf
jg
add
pop
push
jo
jl
xchg
bnd
jecxz
mov
test
lds
push
pop
addr16
push
ret
mov
or
shll
mov
mov
std
aam
adc
jne
xor
imul
lret
leave
in
rorb
pop
mov
mov
lcall
imul
adc
mov
mov
imul
xadd
lahf
xchg
cmp
and
and
add
aas
sbb
rcll
rorl
xchg
xor
mov
mov
xor
adc
popf
scas
cli
xor
inc
pop
repz
scas
loop
ss
cltd
add
je
inc
jo
jns
sbb
mov
dec
lret
mov
push
sub
fistpll
dec
push
push
sub
push
pop
shrb
std
sahf
into
pop
rcll
jge
add
loop
xor
rorb
stos
out
adc
jbe
repz
ret
out
mov
daa
int3
ret
sbbl
faddl
movsl
and
mov
test
jo
aam
adc
mov
push
out
lds
inc
jecxz
rcr
mov
jl
loop
ss
or
sbbl
std
insb
sbb
dec
or
outsl
pop
mov
loopne
fs
repz
sahf
and
nop
out
mov
js
rorl
mov
mov
shlb
imul
push
mov
push
stos
mov
mov
or
push
jo
mov
push
out
mov
pop
dec
hlt
stos
sbb
sub
repz
adc
movsb
push
jno
mov
adc
mov
dec
mov
xor
adc
push
repnz
fisubrl
test
lea
test
or
leave
mov
xchg
lods
adc
xchg
lcall
and
iret
push
xchg
lds
xor
sbb
pop
mov
ret
or
or
cmp
cmp
and
mov
mov
fdivl
mov
mov
push
and
inc
ja
mov
fdivrl
stos
out
fs
and
stos
into
imul
mov
or
aas
xchg
xchg
std
cs
push
adc
jg
pop
push
das
rcr
jl
int
call
push
xlat
mov
into
pop
jo
repnz
mov
aas
adc
or
adc
xchg
enter
mov
pop
fidivrs
test
xchg
mov
push
dec
mov
sbb
ret
inc
add
ret
jno
pusha
fistl
xchg
inc
lea
cmp
subb
mov
clc
mov
loope
xchg
add
mov
cmp
rcrl
js
lret
mov
and
ljmp
stos
jbe
mov
jns
cmpsl
dec
push
scas
add
int
add
fistpll
xchg
xor
jl
in
aam
push
lods
test
adc
in
mov
ljmp
pop
push
dec
fbstp
jo
outsl
mov
lods
push
mov
js
movl
pop
ficoml
and
sbb
shll
adc
and
daa
movsbl
sbb
out
mov
leave
sarb
jp
addr16
aad
and
lods
sbb
mov
popl
fisubrs
xor
movsl
sarb
call
cmc
dec
stc
dec
bound
push
mov
iret
ret
dec
xchg
je
aaa
adc
inc
mov
cmpl
cmp
imul
std
adc
fidivrl
or
add
sub
movsb
mov
aad
sbbl
push
xor
inc
ja
dec
cmp
dec
mov
mov
call
mov
js
xor
pop
sarl
or
jns
gs
enter
shll
mov
add
mov
in
sbb
repnz
mov
sbb
cmp
addr16
mov
hlt
adc
jle
mov
out
push
xchg
into
xor
mull
popa
xchg
adc
xor
and
pop
jb
fwait
sub
stos
mov
lods
dec
inc
pop
fdivs
scas
sbb
call
dec
mov
add
mov
ja
add
insl
out
push
mov
push
adc
daa
and
inc
shr
adc
fdivrs
pop
xchg
pusha
bound
dec
mov
dec
push
push
aas
cld
test
cmp
outsb
fwait
fs
call
lock
sbb
inc
sbb
aaa
ja
adc
sbb
sti
mov
mov
in
and
scas
ficoml
fcompl
cltd
xor
mov
icebp
pop
mov
cmpsb
adc
inc
add
mov
dec
jl
xchg
add
mov
out
inc
movsb
ljmp
mov
ret
fcmove
sub
subl
pusha
aam
xor
cmpsl
movsb
in
jp
movsb
inc
lret
xchg
adc
daa
fbld
inc
sub
mov
mov
and
js
pusha
cltd
mov
inc
push
js
rcl
cmpl
je
es
arpl
call
jl
push
aas
loopne
out
stc
out
mov
or
fs
sub
out
jmp
sbb
lahf
mov
stos
mov
popf
imul
in
pop
stos
sbb
add
mov
jecxz
xchg
lods
in
mov
add
mov
ja
pop
or
sub
out
add
mov
arpl
mov
inc
sub
aas
jns
call
mov
sub
pop
mov
mov
sub
jl
cmp
fdivrs
shll
jp
cwtl
pop
gs
cmpsb
aam
sub
clc
inc
cwtl
mov
mov
and
aas
or
pop
xchg
adc
push
jge
push
shlb
cmc
outsb
test
push
add
sahf
adc
jb
inc
lahf
int
push
aam
dec
outsb
daa
into
outsb
push
in
jge
cmp
sub
call
lods
popf
loop
insl
xchg
sbb
out
inc
cmp
es
sbb
pop
js
sbb
popf
popa
shr
ret
push
popf
adc
mov
sbb
mov
pop
into
sbb
dec
fisubl
cmp
jl
mov
out
and
dec
out
aad
and
test
fsts
jbe
out
push
out
inc
xchg
cmp
push
jbe
roll
inc
pop
cmpsb
push
out
mov
mov
cmpsb
xor
cmpsb
xchg
and
fadds
or
cmp
add
test
cmp
push
fwait
mov
pop
in
pop
mov
out
mov
rclb
xchg
adc
fistpll
rcll
or
adc
sbbl
ret
push
dec
loopne
std
lea
mov
mov
das
nop
rcrl
dec
cltd
lea
sbb
rorb
jb
inc
jo
mov
jle
sub
adc
jge
movsb
or
xchg
add
cmp
cld
cmp
call
sub
jb
ss
push
pop
int3
jns
movsl
push
or
xlat
jmp
ds
iret
loopne
pop
xor
dec
jge
ja
push
ljmp
stc
dec
out
push
addr16
mov
push
mov
inc
lods
imul
icebp
push
repz
scas
outsl
aam
orb
pop
movsb
cmp
or
cmp
xor
rorb
mov
xor
js
clc
pop
repnz
pushfw
nop
into
test
push
shll
movsb
lock
sbb
fwait
inc
jp
cmc
test
leave
jg
mov
aas
pop
sahf
imul
and
ss
xchg
xchg
xchg
test
mov
push
jbe
pop
leave
ret
dec
ret
fisubrl
test
and
xor
in
gs
fisttps
rcrb
xor
adc
xchg
mov
push
jb
inc
aaa
pop
mov
sbb
push
mov
add
ds
adc
xor
pop
in
pop
or
lds
inc
inc
adc
or
mov
clc
hlt
mov
iret
mov
or
cmp
and
xchg
mov
inc
out
mov
jge
fisubrl
mov
sbb
rcrl
mov
mov
imul
mov
mov
xchg
push
lcall
and
loope
mov
sbb
divl
lahf
adc
inc
in
in
jg
clc
mov
or
enter
in
inc
loop
adc
pop
sti
and
int3
sbb
lret
leave
js
sbb
les
and
insl
jg
and
outsl
std
add
scas
sub
sti
rorl
xchg
sbb
adc
test
cli
out
dec
pop
dec
adc
xor
dec
mov
or
icebp
sbbb
and
push
out
pusha
popf
scas
or
xor
push
push
mov
dec
cwtl
and
mov
movsl
arpl
rol
pop
jecxz
xchg
mov
ljmp
mov
and
sbb
gs
mov
in
gs
xor
sbb
xchg
enter
orb
mov
inc
inc
hlt
repz
imul
popa
and
xchg
pop
stc
scas
movsl
push
mov
adc
lretw
and
mov
mov
imul
jecxz
inc
add
and
loopne
int3
push
inc
adc
sbb
data16
push
clc
or
ljmp
push
shl
rcll
andb
bound
movsb
mov
xor
cld
je
jno
or
icebp
insl
ss
jno
pop
mull
insb
shlb
pop
push
push
stos
inc
sbbb
cli
push
sbb
arpl
mov
iret
ja
aaa
pop
jb
mov
cmpsl
std
ret
push
out
xchg
lods
setle
sub
cmpsl
iret
add
in
jbe
pop
sub
pop
push
fstl
cli
lcall
pop
mov
pop
outsb
roll
ret
inc
cmp
clc
sub
ljmp
shll
cmp
ljmp
sbb
jg
fstpt
mov
push
sbb
xchg
lock
imul
sarl
hlt
icebp
push
outsl
jl
ljmp
or
daa
gs
cmp
repz
jecxz
aad
jnp
mov
hlt
push
fbstp
shl
mov
lahf
mov
xor
dec
fildl
sbb
in
mov
stos
andl
xchg
mov
pusha
mov
sbb
xchg
jl
aaa
in
jae
aam
mov
stc
adc
repz
movsb
sarl
jle
xor
int3
int3
sbb
pop
cmpsl
inc
int
jns
mov
inc
aam
lods
sub
out
mov
sub
rcrb
in
push
fwait
mov
add
das
xor
pop
cs
push
push
xchg
and
cmp
aas
popa
cwtl
popa
xchg
inc
push
mov
push
mov
sub
push
pop
into
aaa
rorb
stos
pop
inc
mov
add
inc
push
call
mov
mov
jecxz
or
fs
sub
inc
addr16
sbb
jmp
sbb
xchg
sub
in
shr
popa
fsubrs
lahf
popf
mov
ljmp
pop
lds
je
fldcw
test
mov
inc
cmpl
call
loope
int
gs
in
pop
sub
int3
mov
add
xchg
ljmp
scas
pop
lahf
or
push
push
mov
mov
lods
out
sti
or
mov
pop
movsl
jne
mov
imul
out
inc
shl
push
xlat
jne
int3
pop
mov
mov
adcb
loop
adcb
aam
mov
mov
inc
sub
dec
and
bound
adc
add
aaa
sbb
mov
mull
rcrl
lcall
loope
mov
out
mov
xchg
dec
divb
filds
push
mov
aad
stos
frstor
sbb
lret
fldcw
xchg
or
add
out
cmc
push
mov
adc
stos
ja
mov
add
adc
push
cmp
xchg
cmpsl
packuswb
in
jno
nop
leave
adc
dec
aam
mov
outsl
mov
xor
pop
adc
ret
or
fdivrs
jmp
dec
inc
dec
call
push
sbb
fwait
sbb
daa
aas
mov
cmp
std
cld
stos
and
movsb
test
dec
mov
push
or
jno
sbb
mov
and
in
in
stos
rorb
loop
bound
loopne
xchg
lods
sbb
xchg
sbb
fcoml
incb
mov
lds
test
sbb
out
push
loope
add
add
in
mov
push
bnd
push
adc
sar
push
insb
sub
cmpsl
cs
and
adc
pop
in
or
inc
outsl
stos
iret
aaa
sahf
jge
sti
loope
leave
jbe
ljmp
mov
lds
cmpsl
inc
lods
int3
xor
push
enter
mov
mov
pop
dec
inc
stc
aaa
jnp
lods
push
adc
divl
aaa
push
jg
mov
or
xor
add
cmpsb
std
inc
adc
andb
mov
jecxz
idiv
insb
jae
leave
ss
adc
cmp
mov
fnstenv
jp
pushf
aaa
mov
dec
adc
sbb
pop
adc
lea
pop
test
call
adc
icebp
xor
mov
mov
adc
lret
clc
and
out
jmp
xchg
sbb
ret
and
push
in
sub
cmp
fmuls
mov
ret
mulb
jbe
gs
dec
aas
ss
cmp
test
test
adc
pop
jle
mov
fucom
cltd
mov
push
outsl
mov
xchg
xchg
bound
loopne
arpl
adcl
cmp
xor
dec
stos
mov
add
mov
mov
int
push
mov
movsb
mov
sub
lcall
jns
rcrb
mov
cltd
js
inc
xchg
ret
jno
and
nop
pusha
mov
sbb
add
push
out
jae
push
movsl
bt
int
add
js
add
dec
mov
test
mov
es
iret
call
mov
loope
push
push
jg
fwait
sub
push
pop
sub
inc
sbb
dec
push
or
lahf
sub
cmp
stc
lahf
loopne
push
push
cmp
insl
mov
movsl
mov
cwtl
xor
out
stos
push
imul
cmc
mov
dec
cmp
test
or
and
dec
add
mov
jnp
mov
scas
jmp
push
addb
repz
notb
xor
js
mov
fbld
add
insb
mov
shlb
cs
or
out
test
sbb
shlb
test
cli
xor
xorb
call
and
dec
dec
fsubrl
pusha
pop
mov
in
push
pop
fdiv
and
mov
into
add
inc
sub
arpl
addl
and
pop
popw
and
call
ds
or
mov
mov
sti
lock
aaa
sbb
and
jecxz
mov
mov
lods
inc
cmp
adc
std
les
inc
pop
xor
pushf
loopne
fildl
xchg
jle
pushf
in
cmpsb
sbb
repz
out
pop
and
inc
std
jne
or
xchg
pop
push
insl
test
sbb
aas
or
arpl
pop
outsb
icebp
push
call
and
ja
jge
sbb
dec
xor
or
sti
pop
popa
jne
mov
xchg
sbb
fbstp
add
repnz
pop
mov
mov
sbb
dec
mov
push
and
incl
xchg
cmp
mov
test
sub
xchg
jb
test
pop
jno
jns
aam
add
cli
jb
fprem
loopne
adc
adc
pop
push
push
test
push
dec
lcall
xor
mulb
or
mov
decb
out
ljmp
stc
popa
shll
loop
mov
cmp
pop
cmp
lcall
fidivrs
aas
ja
sub
inc
or
ja
or
sbb
xchg
hlt
loopne
ljmp
push
imul
cmp
cld
int3
add
or
aas
int3
scas
or
loop
jne
sub
xor
test
ret
adc
sub
mov
fsubr
cli
fidivrl
mov
xlat
pusha
add
inc
pusha
xchg
mov
popl
and
scas
jmp
orb
cld
sub
shll
out
inc
jle
in
je
jo
popa
cmp
push
mov
enter
gs
adc
sub
add
pop
loope
adcl
in
xor
ret
sti
lods
dec
aad
adc
mov
inc
cmc
stos
faddl
add
js
mov
lods
sub
jns
xchg
shll
mov
fwait
jbe
jae
movb
out
mov
or
aas
das
js
int
jecxz
stc
pop
push
mov
bswap
rolb
push
jbe
or
or
cli
sbb
clc
imul
out
ficoml
pop
xchg
xchg
sbb
mov
insb
fsubrl
into
cli
das
and
cmp
jnp
aam
sbb
lock
xor
xor
sub
mov
adc
push
lods
sbb
les
aas
fs
out
sub
stc
push
add
es
cli
lds
mov
aad
fistpl
inc
gs
outsb
int3
pop
push
pop
adc
push
mov
hlt
lock
add
cmpsl
dec
mov
xor
cmp
sub
dec
mov
mov
roll
add
sbb
push
addr16
sbb
xchg
lock
and
sub
stos
fnsave
sahf
nop
xchg
xchg
dec
movsb
pop
aaa
jbe
cmp
add
testl
jl
mulb
mov
push
mov
outsb
call
push
sub
inc
mov
out
sbbb
shrl
push
mov
shrl
push
fbstp
inc
adc
js
sub
dec
mov
xlat
divb
ja
leave
push
push
lods
dec
jno
or
xchg
or
outsl
int3
sti
add
sbb
xchg
cwtl
das
std
scas
and
sub
insl
outsl
xor
jp
cltd
sbb
push
out
inc
push
sub
sahf
insl
fiadds
iret
dec
xor
xchg
or
jle
stos
daa
push
or
dec
lock
push
mov
fmuls
shlb
bound
out
loop
mov
rol
mov
loop
dec
insb
loope
inc
mov
lds
andb
pop
ss
iret
push
and
mov
lret
jns
cmp
push
sbb
fiadds
movsb
mov
test
iret
sbb
imul
inc
jecxz
mov
aam
loope
and
das
xchg
mov
js
pop
adc
jae
subl
add
js
into
add
mov
outsb
push
out
daa
cltd
in
mov
sbb
inc
je
out
int3
daa
jae
jmp
daa
jp
mov
mov
stos
scas
fyl2xp1
mov
pop
lea
pop
xor
cmovp
hlt
jmp
sub
ret
fst
fnstcw
lods
mov
jno
xchg
mov
in
mov
jmp
jo
fistps
mov
cli
movsl
sarw
sbb
cmp
nop
mov
push
jns
add
in
mov
sbb
sbb
pop
mov
and
pop
mov
xor
dec
icebp
shlb
gs
sbb
add
fxch
out
mov
or
sahf
test
push
mov
push
aad
and
mov
or
jne
jmp
rcrb
jnp
sar
test
jecxz
pop
sti
nop
icebp
rcrl
push
push
mov
sub
enter
xor
aad
dec
mov
xchg
jb
and
xchg
sbb
ja
push
xor
inc
push
or
lods
jl
dec
mov
mov
outsb
lcall
es
imul
data16
int
out
lret
jl
push
sbbl
dec
mov
jl
push
sbb
mov
pusha
scas
mov
push
push
lret
rcrb
loopne
ror
adcb
imul
adc
out
clc
sub
add
sbb
pop
and
jno
push
stos
decb
sbb
mov
jl
mov
shlb
sbbb
mov
divl
inc
jg
lret
push
imull
aad
add
out
sub
aad
sub
lods
insb
cmc
xorb
sub
xor
std
jg
push
pop
lock
jecxz
popf
arpl
jae
fcmovnb
push
enter
mov
lcall
data16
int3
lret
addr16
or
mov
xchg
aaa
gs
sub
inc
imul
sbb
movsl
mov
mov
mov
cmpsl
leave
and
mov
lcall
add
fmul
ret
pop
nop
pop
lret
lahf
in
jo
jo
or
or
sub
test
int3
aad
cmp
jne
pop
andl
popa
jae
cld
pop
out
push
adc
out
mov
lahf
or
inc
inc
movsl
push
insb
pop
jl
cmp
mov
sbb
push
mov
and
mov
test
clc
or
push
mov
push
pop
jle
mov
sbb
sub
rorl
scas
shrb
dec
add
pop
inc
dec
pusha
dec
or
testl
cmp
std
mov
scas
inc
pushf
mov
xor
imul
test
push
in
pop
mov
enter
pop
sbb
dec
ljmp
dec
or
adc
fs
insl
pop
push
stos
pop
mov
dec
jge
cmp
popa
ja
add
adc
aad
sbb
dec
sbb
scas
push
xchg
in
xorb
inc
xor
ja
ljmp
sub
xchg
pop
sub
leave
in
and
leave
mov
jg
jle
adc
jp
mov
xor
cld
iret
cmc
or
sti
rorl
andl
pushf
iret
push
inc
adc
ja
inc
aaa
ds
pop
jne
in
shlb
pop
andb
dec
jg
mov
mov
push
pop
adc
add
pushf
xchg
inc
int
popf
inc
popa
mov
ret
inc
fstps
scas
nop
movsl
pop
pop
adc
mov
xchg
cmpsb
sahf
leave
bound
sub
test
sbb
lods
aas
sub
xchg
aam
cmp
lret
in
lods
mov
aaa
cwtl
and
test
pop
fwait
jge
lret
mov
jle
jae
js
sbb
fidivrs
scas
mov
lea
mov
aaa
jns
jp
xchg
pop
in
mov
jbe
mov
mov
dec
push
lret
jne
popf
aas
inc
loope
mov
mov
jg
std
cmp
adc
shlb
nop
dec
or
or
sbb
clc
pop
jne
aas
jmp
rclb
sub
mov
into
ss
xchg
xor
cmp
xor
shlb
cmp
mov
lcall
bound
and
es
xor
rcrl
add
pushf
cwtl
or
pop
mov
jge
mov
leave
lods
rclb
pop
cli
scas
shll
out
pop
pop
mov
fs
pop
mov
pushl
arpl
call
jecxz
mov
rcl
adcl
cmpsl
add
dec
inc
aad
fwait
pop
popf
jecxz
nop
iret
mov
sub
lcall
neg
jns
mov
sub
jno
nop
xlat
int3
and
scas
push
testb
in
push
decb
adc
adc
mov
pop
sub
xchg
mov
sbb
dec
pop
mov
cli
xchg
out
out
mov
add
sub
lret
pop
fistps
cmc
nop
add
int3
jo
imull
orl
bound
cmpsb
xchg
sbb
xchg
jg
es
xchg
sbb
or
push
js
daa
outsb
jae
xchg
mov
pop
pop
and
add
and
sti
sub
push
and
xor
dec
ret
dec
inc
popf
ret
mov
inc
test
cmpsb
mov
lret
cli
leave
icebp
in
pop
pop
rolb
inc
scas
cwtl
xor
jle
dec
jae
cmpb
ret
sbb
sti
mov
repz
sar
pop
and
inc
xchg
mov
mov
and
inc
mov
or
pop
inc
adc
arpl
inc
popa
xchg
pop
jnp
insb
mov
or
out
xlat
fidivrs
pop
popa
cmp
dec
sbb
sbbl
xor
shl
out
and
mov
das
nop
cmp
les
inc
test
lret
mov
adc
enter
jge
jo
xchg
in
mov
inc
jl
jge
movsl
outsl
push
jmp
jecxz
mov
xlat
xor
arpl
cmp
lret
jle
leave
lea
popf
dec
aas
mov
mov
pop
fmul
sub
lret
stos
pop
aam
inc
pop
pop
inc
movd
dec
test
cmc
xchg
iret
lret
ljmp
decl
push
inc
repnz
mov
sub
pop
popf
popf
cmc
jmp
addr16
push
mov
xor
shrl
pop
insb
loope
insb
mov
incl
es
dec
imul
rclb
in
test
sahf
fisubl
jg
stc
mov
popa
bound
sbb
adc
cmp
test
xchg
ljmp
pop
fisubs
adc
lret
jle
cmp
mov
and
sbb
push
or
xchg
enter
jp
hlt
incl
sbb
iret
ljmp
cmp
inc
jmp
inc
mov
jbe
daa
test
dec
rorl
mov
xor
xchg
outsb
pop
push
pop
ret
dec
mov
mov
enter
frstor
push
repnz
and
push
sbb
fmuls
imul
cmp
call
push
mov
subl
ret
xchg
mov
into
xchg
jns
aam
mov
fwait
out
mov
scas
xchg
test
cmp
nop
sbbb
xor
setp
xor
iret
fsubrs
cmp
jno
insb
ds
insl
lods
mov
popa
jne
mov
push
dec
ret
mov
lret
test
rcl
dec
ds
les
sbbl
lods
mov
pushf
and
test
and
or
ret
pop
mov
lahf
mov
popa
mov
les
mov
or
imul
pusha
mov
sti
push
jae
ret
or
xchg
cmp
jecxz
in
adc
popa
sub
mov
cs
adc
inc
hlt
push
push
jecxz
mov
and
mov
xchg
or
and
fcomp
inc
or
cmc
push
mov
xchg
mov
mov
outsl
fs
pop
pop
pop
xlat
mov
push
insb
inc
mov
cmp
sti
and
aam
pop
dec
lea
jbe
in
aad
roll
fcoml
xchg
in
adc
loopne
dec
cli
not
insb
xor
sub
cmp
mov
adc
divb
repnz
mov
aas
test
ds
inc
iret
fsub
outsb
icebp
xor
test
dec
shrl
jp
xchg
fmul
cwtl
and
cmp
jecxz
jne
mov
xchg
fnsave
mov
mov
cmp
fists
inc
idivb
lahf
out
sub
push
ret
pusha
fcoms
jg
test
and
dec
rcrb
imul
push
es
mov
pop
cmp
mov
test
mov
mov
js
jo
outsl
fbld
mov
sbb
jae
ret
xor
jno
sbb
jo
int3
fwait
mov
xchg
xor
into
cmp
aam
cmp
out
pop
mov
incb
jnp
lss
cwtl
cld
out
xrelease
int
dec
fdivl
adc
in
sub
daa
stos
insl
inc
aas
push
mov
mov
fnclex
jo
int3
xor
sbb
mov
adc
adc
dec
mov
cmpsb
sub
mov
mov
mov
neg
imul
daa
jge
je
out
aas
xchg
and
sbb
addr16
mov
jg
fnclex
outsb
int3
mov
pop
dec
leave
out
lods
xchg
xor
dec
mov
xchg
mov
dec
icebp
cmp
sub
cmp
notl
pop
dec
sub
jle
mov
ficoml
xchg
push
pop
inc
push
leave
mov
mov
jno
aaa
mov
ret
lcall
shrb
mov
sti
ljmp
inc
into
jns
inc
xchg
pop
shlb
jecxz
frstor
test
mov
jb
aam
fcomps
inc
mov
cmp
sbb
inc
ret
outsb
dec
or
pop
negl
daa
mov
lods
jmp
stc
push
filds
sti
test
cmp
push
fdivs
or
ret
out
mov
xchg
and
add
sbb
adc
cmpsb
lret
cwtl
lods
mov
mov
jno
sbb
mov
shl
in
jo
jne
add
movb
movsb
dec
jl
pop
jnp
sbb
xchg
dec
sub
jg
push
aas
inc
mov
insb
and
mov
xor
and
sarb
mov
fs
dec
xlat
cmpsl
cmpsl
cld
sub
gs
jp
cli
and
gs
pusha
or
inc
sub
dec
je
mov
mov
shrl
pop
roll
cli
sbb
and
mov
jle
xchg
xchg
xchg
and
scas
mov
jb
jne
mov
jo
sub
icebp
jbe
mov
outsl
mov
data16
addr16
fistps
divl
sub
xor
pusha
cwtl
and
cmp
sub
mov
mov
je
push
fdivrp
jns
bound
aaa
pop
jle
dec
aad
and
rsqrtps
xor
and
push
outsb
lods
and
inc
push
lock
addr16
out
inc
cld
cmp
insb
mov
out
xchg
fbstp
popa
pop
sbb
out
sbb
mov
inc
jge
and
mov
mov
movsb
dec
std
cs
lret
cwtl
addr16
rol
mov
cwtl
sahf
cmc
in
out
jmp
or
int
fwait
dec
outsb
hlt
cltd
ds
push
repz
adc
add
jmp
push
enter
push
mov
sub
pop
or
xchg
cmc
mov
leave
mov
scas
mov
lds
int3
loope
stos
inc
push
and
mov
mov
or
in
rep
mov
js
or
rcr
inc
ret
cmp
in
inc
repz
aad
pop
mov
push
lret
jge
jg
push
mov
jp
fstps
arpl
into
bound
divl
dec
lcall
or
push
int3
adc
cmp
jns
sbb
or
jbe
fnstcw
or
pop
scas
sbbl
sub
popf
fildll
sbb
daa
sub
sbb
cltd
inc
xlat
xchg
loope
cwtl
mov
fs
insb
rorb
cwtl
lcall
mov
dec
xor
dec
sbb
push
fwait
mov
imul
inc
loopne
es
cmpsl
cmc
pop
adc
jnp
or
mov
jmp
imul
stc
cmp
pusha
mov
stos
aas
cmpsb
adc
dec
xor
push
xor
cmp
or
aad
cmc
dec
testb
push
sbbl
adc
mov
pop
lea
dec
outsb
or
pop
push
sub
and
je
xor
jle
or
inc
in
cmpsb
js
fbstp
and
testl
add
pushf
cli
ss
xlat
roll
aad
mov
std
mov
stc
out
xlat
pop
bound
add
addr16
aam
mov
cpuid
fistpll
xchg
nop
mov
jmp
test
adc
scas
push
popf
mov
es
call
xchg
and
jge
inc
sbb
xchg
test
mov
loopne
dec
pop
xor
mov
xor
adc
mov
add
cmpsl
cmp
push
pop
inc
je
and
push
stc
in
fistl
mov
lods
xchg
repz
in
clc
adc
fadds
outsl
mov
sahf
insb
mov
cmc
mov
push
inc
cmpsb
mov
popf
xchg
xchg
xchg
xlat
mov
push
shlb
jge
or
pusha
inc
or
sub
add
mov
mov
sub
pop
or
inc
adc
insb
mov
or
mov
xchg
fistpll
lds
std
sbb
pop
mov
sub
xchg
pushf
mov
push
pop
cld
cmp
jmp
lds
pop
inc
pusha
nop
jne
stc
movsb
jae
xchg
or
fildll
sub
dec
mov
cmp
xlat
data16
shl
lahf
call
adc
mov
scas
and
cmp
sahf
sbbb
fwait
and
mov
das
mov
inc
mov
mov
and
lcall
subl
jns
push
ret
pop
test
xor
enter
xor
lahf
cmpsl
out
std
in
fidivl
data16
mov
aas
fidivrl
es
clc
push
push
orb
mov
mov
lret
xor
pushf
dec
roll
in
jo
push
xchg
push
sub
daa
mov
fistpll
xor
mov
mov
xor
int3
repz
fnsave
shrl
inc
mov
add
clc
out
std
adc
lods
sti
aas
and
or
jmp
dec
inc
and
aas
dec
lcall
in
xor
fsts
push
into
jbe
cltd
push
ds
fdivrs
pop
sub
and
xor
ljmp
and
paddusw
pop
loope
cmp
lcall
data16
jo
mov
jne
lds
sub
cs
mov
xchg
dec
push
adc
bound
or
jp
and
int
or
mov
decb
or
dec
cs
dec
sti
lds
dec
fimuls
in
add
shll
pop
andb
sti
inc
stc
jae
aam
iret
xor
out
in
jns
xor
or
add
xchg
loopne
xlat
adc
pop
arpl
loope
cmp
push
push
xorb
clc
push
xor
mov
adc
push
in
inc
lods
pop
mov
mov
cs
jns
divb
inc
popf
xsha1
cmpsb
lret
jb
cmp
mov
mov
mov
js
inc
fbstp
add
cmp
mov
sbb
adc
outsl
or
xor
sbb
out
cwtl
push
in
push
mov
stos
mov
dec
pop
cmpb
call
sbb
mulb
popa
cmp
fmuls
xor
pop
push
xchg
pop
cwtl
lea
sti
sti
xor
stos
jp
sub
cs
mov
mov
shll
add
cmp
or
fnsave
lahf
ret
push
int
xchg
mov
push
repz
mov
nop
mov
jp
sub
mov
mov
inc
and
and
dec
roll
push
enter
aam
mov
stc
xor
push
xchg
lahf
dec
es
and
xor
mov
jecxz
mov
mov
xlat
scas
pushf
cld
and
ss
pop
adc
inc
xchg
leave
in
movsb
pop
sub
lds
push
mov
pop
lahf
sbb
je
xchg
loopne
jns
pop
sbb
into
rcll
jnp
or
xchg
pop
clc
ss
js
add
clc
sti
push
xor
in
stc
cmp
std
push
push
add
out
enter
arpl
sbb
and
mov
mov
scas
and
aad
in
cmp
push
jb
mov
iret
push
stos
inc
ss
aam
das
pop
dec
add
insb
fwait
mov
das
dec
cmp
ljmp
pop
xor
mov
insl
add
push
lret
cmp
mov
cmp
mov
jp
sbbl
adc
and
xchg
and
in
inc
cmp
movsb
rorl
push
std
hlt
mov
cwtl
mov
imulb
ss
push
scas
call
fmul
mov
dec
cwtl
ficomps
adc
add
imul
jle
mov
imul
adc
sbb
mov
mov
or
imul
ret
enter
lcall
add
icebp
jae
add
arpl
inc
xchg
repnz
mov
mov
sahf
mov
sahf
jl
lea
fsubrs
or
enter
aad
fwait
dec
and
jno
and
jg
leave
pop
fmul
cmp
lea
lea
loop
push
xorl
cli
outsl
gs
pop
adc
outsb
popa
sar
sbb
jl
xchg
lds
xchg
lods
adc
shrl
lods
sub
fdivl
rcr
lods
cmpsl
mov
push
cmp
ss
xchg
xchg
add
push
add
movsb
fldt
jns
data16
bound
movsl
xchg
scas
mov
loop
test
jle
or
mov
nop
lods
cmp
cltd
xchg
xchg
pushf
test
inc
mov
sub
push
dec
cmp
in
out
sahf
jnp
jne
and
xchg
cwtl
add
xchg
mov
lret
inc
dec
rcrb
out
mov
cmp
cli
sbb
sahf
push
aas
pop
and
adc
lea
adc
inc
imul
out
add
loop
adc
lea
int3
or
adcl
pop
mov
push
add
outsl
mov
loopne
aas
xchg
cmp
out
enter
push
stc
inc
xor
lds
mov
xor
dec
cmpsb
repnz
call
mov
test
mov
push
fnsave
pop
mov
call
jne
cli
aaa
mov
mov
xchg
xor
push
out
gs
mov
push
and
cmp
add
scas
mov
loope
pop
loop
and
gs
dec
imul
aaa
adcl
call
cld
or
jne
icebp
leave
jp
adc
xchg
push
scas
flds
outsb
or
cmc
lods
push
cmp
orb
ss
pushf
ss
insb
ret
test
mov
lahf
mov
cs
loope
xor
popa
dec
jne
add
sbb
cmpsb
jae
loop
mov
jo
mov
jns
aad
push
hlt
pop
pop
ss
shll
arpl
xor
mov
loope
sbb
mov
add
cltd
loope
sub
mov
adc
mov
sub
sbbl
mov
sub
mov
hlt
lock
adc
sbb
loope
xchg
mov
xor
jns
cmp
addr16
lods
jns
mov
push
out
mov
popf
fs
cmpsb
xor
imul
pop
adc
movsb
xor
fs
mov
in
mov
pop
adc
dec
cmc
inc
adc
ret
lea
int3
mov
mov
jl
repnz
into
or
fldcw
push
mov
and
mov
xchg
repz
xchg
cmpsw
jns
movsl
stos
repnz
scas
pop
in
inc
rcrl
and
jle
pop
jge
cli
insl
fcmovnb
lret
in
dec
fcomi
test
xor
xor
dec
mov
inc
sbb
addr16
jns
push
adc
push
add
pusha
popf
pop
in
outsl
mov
xorl
rcll
in
or
gs
xlat
ret
mov
mov
lret
pop
jne
mov
sub
inc
sbb
orl
outsb
cmp
jbe
adc
adc
mov
out
ret
into
out
test
cmc
adc
push
test
fsqrt
adc
push
loop
pop
rcrl
cmp
cmp
in
inc
xor
ss
mov
sub
test
aas
psrlq
mov
pushl
jne
fldl
cmpsl
adc
lds
es
aaa
cmc
and
adc
lea
mov
xor
mov
frstor
cmpsl
lods
test
sti
in
cmpsl
in
hlt
stc
fwait
lock
add
out
aad
sub
pop
adc
pop
out
inc
mov
daa
scas
sub
lods
shrb
lods
mov
add
out
add
push
lahf
lds
pusha
lds
mov
or
mov
dec
fstpl
pop
bound
pop
dec
cmpxchg
or
fcom
or
je
dec
cmpsl
popa
push
xor
jbe
xor
test
push
xchg
js
jge
adc
xchg
enter
push
ljmp
xor
adc
or
and
int3
fstpl
mov
mov
mov
fwait
scas
mov
aaa
in
fiadds
ret
ljmp
mov
dec
mov
add
into
mov
aad
aad
popl
lds
loopne
xchg
in
outsl
mov
pop
or
xor
fiaddl
pop
pop
add
and
mov
mov
repz
cld
xchg
imul
mov
in
outsl
push
stc
jns
mov
inc
lods
xor
inc
fdivl
repnz
xor
cmp
dec
jmp
fdivs
mov
ja
loope
inc
pcmpgtd
movsb
loopne
movsl
jge
bound
in
sub
xor
out
imul
adc
or
shrl
mov
dec
add
lea
mov
jno
mov
sti
test
cmpsb
daa
pop
sbb
pop
movsb
aad
push
rcl
leave
jno
adc
pop
adc
cmp
popf
mov
add
mov
aaa
jb
mov
jp
mov
testb
leave
push
jge
pop
xchg
xchg
cli
add
add
xchg
sbb
je
insl
xchg
repnz
repz
hlt
daa
stos
sti
push
lcall
lcall
xchg
aaa
or
and
out
test
test
and
mov
movb
mov
arpl
je
sub
lcall
and
inc
mov
mov
dec
int3
scas
sbb
mov
jnp
ss
addl
sahf
pop
subl
push
rcrl
test
call
lcall
pop
jbe
jo
sti
pop
outsl
fsub
stc
fsubrl
jb
cmp
shlb
xor
push
iret
xlat
cmp
and
test
inc
scas
xorl
cld
sti
xor
xlat
and
aad
cmpsb
cmpsb
ljmp
or
repnz
adc
adc
sarl
aaa
lods
mov
fwait
push
cli
hlt
sbb
fnstenv
loope
popa
dec
out
popa
insb
mov
jge
add
inc
nop
sahf
sbb
iret
mov
cmc
enter
push
pop
clc
push
mov
ret
xor
ljmp
imul
push
xor
mov
lock
nop
out
cmpsl
icebp
bound
xor
fdivl
adc
ja
mov
add
inc
adc
adc
pop
inc
mov
dec
mov
pusha
arpl
in
mov
sub
sbb
fcmovnu
out
cwtl
insl
pop
mov
sbb
stos
mov
inc
push
mov
call
push
inc
mov
xor
add
cwtl
test
or
lods
cmp
insl
pushf
sbb
decb
mov
lret
psubsw
sbb
pop
add
pusha
out
fcompl
adc
add
dec
lea
add
jge
push
stos
enter
xchg
and
and
and
imul
loopne
add
sbb
test
cltd
xor
popf
outsb
cs
out
cmp
cmpsl
mulb
ret
int3
push
xchg
jns
outsl
mov
pop
les
mov
fisubrs
movsl
ljmp
roll
bound
imul
xor
out
push
mov
cld
das
call
add
sbb
lods
mov
push
inc
cmpsb
bound
in
aas
mov
movsb
jb
shll
pusha
mov
mov
lock
in
cmp
or
daa
fdivs
xlat
lods
fisubrs
xchg
sarb
mov
fistps
wrmsr
mov
lods
xchg
mov
cmp
fst
lret
iret
cmpl
test
mov
pop
loopne
aas
imulb
in
aas
dec
sub
pop
jg
jle
incb
adc
nop
inc
adc
jle
mov
sub
mov
addr16
cmc
test
pusha
mov
rorl
push
or
call
push
fs
mov
aas
aad
lods
lcall
adc
lds
arpl
add
je
lret
dec
fcomps
jmp
mov
xor
incl
sahf
mov
mov
dec
cmc
pop
xchg
mov
mov
outsb
or
adc
dec
fbld
xor
das
mov
cs
es
add
adc
pop
imul
movsb
les
add
cmpsl
inc
and
and
mov
inc
pusha
jb
push
mov
fiadds
lret
popf
inc
push
push
push
cmpsb
mov
mov
xchg
aas
out
sbb
ret
add
cmp
cmp
icebp
add
shlb
js
mov
or
ds
add
je
stos
mov
cmp
adcl
fmull
jae
cmp
mov
js
lea
or
das
and
decl
mov
adc
inc
test
mov
lea
out
push
addl
mov
scas
std
sbb
cs
fcoml
sahf
shrb
or
add
xchg
xchg
lea
dec
mov
pop
push
int
sbb
mov
test
mov
pop
pop
popf
push
out
sub
xchg
cwtl
fisubrs
js
cmp
adc
roll
cld
in
mov
or
push
nop
out
fdivs
outsb
stos
xor
jno
ss
jmp
push
dec
jecxz
xchg
das
call
outsl
push
lock
pop
mov
lret
add
jle
fucomip
pop
xchg
out
movsl
ror
sbb
arpl
xor
sahf
inc
stos
aam
mov
xchg
mov
in
add
xchg
and
inc
sbb
mov
in
jae
in
in
sahf
int3
ffree
pop
dec
push
out
pop
add
mov
addr16
mov
stos
stos
rcrl
and
xor
cmp
out
mov
or
xchg
fistps
pop
enter
vmaxsd
aam
inc
adc
movsb
inc
iret
loopne
push
in
movb
pop
jl
pop
leave
loopne
shrb
jecxz
subl
cmpsb
inc
loop
inc
jno
mov
pop
mov
cmpsl
daa
jl
or
test
rcrb
pop
bound
test
xchg
adc
or
faddl
jmp
push
fcomps
cmp
stc
add
cmpsl
and
iret
pop
cmp
std
popa
in
cld
mov
out
fs
sbb
mov
cmp
add
in
jecxz
add
push
and
cs
shll
sub
jp
inc
js
cmp
mov
lea
test
mov
ja
lods
sbb
cmpsl
add
pusha
mov
aaa
mov
sub
xor
mov
sahf
sbb
fdivr
ret
movsb
push
mov
int3
inc
rcll
mov
std
pop
outsl
xchg
cmpsb
cwtl
sbb
xchg
shrl
mov
xchg
dec
ret
cmp
popf
cmc
stos
mov
cltd
fistpll
jbe
mov
cmp
jns
cmp
and
dec
imul
loop
fstl
movsb
pushf
xor
dec
cmpsl
pop
adc
stc
push
and
inc
push
jecxz
lret
mov
sbb
test
movsl
mov
dec
pop
sbb
and
clc
jmpw
mov
movsb
dec
push
mov
mov
scas
xchg
call
cltd
push
mov
mov
loope
add
xchg
xor
mov
jl
rol
jl
test
mov
xchg
lods
xor
sbb
outsb
push
aas
popf
lods
inc
jg
ss
adc
inc
jmp
push
int
push
cmp
icebp
gs
xor
xor
aad
xchg
rclb
add
mov
mov
je
rcr
add
in
xchg
sbb
adcb
xor
aad
imul
inc
call
fnsave
out
nop
xor
xchg
in
mov
mov
mov
jmp
lods
add
inc
jp
adc
mov
and
inc
xor
xor
cli
jb
loopne
sti
jae
bound
shlb
cmp
push
xchg
fiaddl
int
and
or
mov
cld
test
negl
pop
xor
les
push
cmc
loop
lock
cltd
das
fidivs
pop
sarb
int
rcrb
cmc
repnz
scas
dec
mov
cmp
lds
mov
aad
lock
inc
mov
pop
xlat
sbb
push
in
add
sti
call
ss
or
sub
pop
inc
out
into
cltd
add
jns
scas
adcl
xchg
adcb
arpl
sub
jo
popa
cmpb
shr
sbb
sti
dec
jg
ret
loopne
shlb
andl
das
xchg
push
mov
rcll
pop
cmp
mov
cltd
fstpl
mov
xor
cwtl
pushf
outsl
imul
fidivl
sbbl
jge
cmpsb
mov
xor
test
aaa
repnz
push
loop
mov
xor
cwtl
int
leave
icebp
pop
jle
scas
xor
or
jb
jbe
push
shl
aam
popf
mov
push
jne
and
and
in
in
lret
iret
ror
fwait
sbb
inc
scas
cld
sub
addl
test
jecxz
dec
fcoms
lds
jmp
loop
pop
add
cmpb
or
jb
icebp
insl
test
inc
fcomp
mov
mov
cmp
fbstp
dec
xor
fwait
mov
lds
xor
leave
sub
dec
test
add
dec
push
inc
push
and
push
jp
movsl
ds
mov
repz
lods
mov
imul
inc
out
mov
adc
aaa
push
mov
sti
mov
lret
mov
add
iret
call
mov
mov
and
aad
ret
call
push
in
pop
insl
jmp
sbb
push
adc
jle
sti
xchg
in
or
movsb
jg
dec
aas
pop
xchg
jno
add
jle
lret
mov
std
push
aas
xor
movsl
pop
outsb
testl
loope
mov
dec
movsb
mov
mov
mov
push
mov
pop
inc
and
or
cmp
fbstp
iret
out
jg
loopne
cmp
lds
cmpsl
push
test
addr16
mov
mov
test
mov
mov
aaa
stos
es
mov
stos
and
outsb
shrb
and
inc
movl
shl
mov
mov
add
xor
adc
sbb
test
dec
dec
push
add
jne
in
iret
jbe
loopne
lret
shl
pop
jns
xorb
inc
fsts
or
cmp
push
mov
jae
in
fs
mov
ds
rcll
out
dec
fnstcw
das
mov
mov
stos
xchg
mov
outsb
ret
push
lods
test
mov
xor
sbb
push
mov
xchg
or
imul
imul
or
lods
sbb
push
cmpl
mov
or
shr
and
out
cwtl
push
cs
sub
xor
lds
pop
mov
push
mov
subb
leave
lods
jl
inc
xor
fwait
inc
xchg
xchg
gs
aam
stc
pop
ljmp
mov
sbb
jp
xchg
ret
jge
cmp
xchg
sub
inc
dec
cmp
ss
sarb
inc
cwtl
mov
jmp
jno
mov
rcrl
add
das
mov
shll
mov
mov
cltd
jecxz
jle
sub
mov
popl
inc
xor
bound
sub
xchg
push
inc
lock
in
mov
adc
inc
scas
outsl
rcrl
push
pop
and
loop
jmp
push
cltd
sub
xchg
stos
cmp
in
div
aad
out
pop
gs
xor
mov
xor
pop
cmp
ja
daa
cld
shr
lret
mul
sbb
and
sbb
xchg
cmpl
xor
pop
cmp
mov
stos
std
mov
xchg
pop
mov
add
xchg
jne
sti
arpl
push
jle
ret
outsb
push
outsl
lret
lea
adc
stc
pop
lock
test
insl
cmp
cmp
dec
test
dec
les
xchg
hlt
sbb
or
pushf
push
adc
jns
cmp
std
out
cmc
jmp
in
or
mov
lea
repnz
adc
inc
bound
lcall
sub
sub
test
adc
jns
add
in
inc
sub
sub
subb
jne
fld
cmp
test
std
repnz
xor
outsl
setb
push
adc
lock
adc
push
sbb
sbb
fcmovne
test
sub
sub
nop
pop
cli
lea
data16
pushf
cmp
inc
pushf
pusha
lods
movsb
sbb
cltd
dec
aam
xor
nop
cli
push
hlt
dec
daa
push
xor
leave
and
test
rcrl
shl
add
pop
test
xor
jnp
sub
sub
mov
dec
orb
inc
outsl
lret
cmp
out
cwtl
lret
sub
push
jg
or
mov
jle
dec
mov
ror
fsubrs
es
enter
je
sahf
sbb
insb
adc
mov
push
pop
mov
sarb
jbe
or
jge
jmp
inc
push
stos
das
lret
dec
jmp
ss
ret
bound
sbbl
in
into
inc
stc
sbb
mov
cmp
js
pusha
movsb
mov
cmovge
out
shl
call
pop
xchg
fwait
cwtl
xchg
fst
mov
aas
js
mov
and
cmp
adc
jl
popf
cmpsb
lcall
push
addr16
mov
outsb
les
out
lcall
and
pop
jno
pop
gs
shrb
out
or
into
jge
lds
nop
sbb
push
pop
leave
sub
out
sub
jle
push
mov
in
sti
cmp
scas
cs
or
cmc
adc
push
orb
mov
daa
cmpsb
and
cmp
movsb
cmpsb
push
jbe
lret
jbe
pop
mov
pop
jmp
popf
add
adc
cltd
xchg
jge
rclb
ljmp
lcall
mov
cmpsb
ret
scas
jecxz
std
ret
fldenv
fs
xlat
jnp
push
sbb
inc
mov
mov
inc
fcmovbe
xchg
mov
mov
mov
push
js
aaa
clc
add
ds
dec
and
or
flds
sub
xor
pop
cmpsb
outsl
cltd
out
and
lds
arpl
dec
imul
lods
jb
dec
icebp
ss
xor
movsl
mov
mov
enter
insl
out
push
leave
dec
test
jae
pop
outsl
sub
lret
das
stc
repz
or
jnp
fstps
xchg
sbb
xor
sbb
jnp
in
mov
mov
mov
or
xor
or
es
cmp
mov
pop
jb
push
sub
mov
or
dec
sbb
and
sub
push
lret
fwait
mov
cltd
rcrl
adc
insb
pop
cwtl
inc
dec
xchg
pop
aad
pop
lret
es
cmpl
mov
push
adc
addr16
popa
cmp
into
pop
mov
mov
test
bound
cld
mov
fbld
stos
ret
imull
add
push
mov
jns
mov
pop
cli
into
ret
mov
xchg
add
cmp
cmpl
push
pop
lods
out
mov
shr
jmp
mov
mov
sbb
mov
dec
sub
mov
mov
xor
lods
push
sub
test
jnp
xor
loop
push
leave
xor
popa
or
andb
lcall
mov
outsb
adc
aaa
subl
jne
cmp
inc
inc
or
sub
fidivrs
mov
lea
scas
mov
adc
pop
ret
pusha
adc
pop
mov
scas
mov
mov
xchg
sbb
cmpsb
dec
push
pop
int3
dec
or
add
mov
cmpsl
mov
ljmp
add
mov
cwtl
aas
js
mov
repnz
or
jb
mov
loope
mov
lock
rcpps
xor
adc
js
pop
add
sbb
mov
fisttps
lcall
les
push
sub
cwtl
mov
test
mov
outsl
sti
push
xchg
adc
adc
push
call
pop
pop
mov
call
bound
shl
xchg
fwait
push
pusha
cli
mov
inc
fldcw
scas
add
or
les
or
and
test
jg
into
mov
outsl
aaa
cmp
repz
jecxz
shlb
daa
xchg
mov
andl
add
add
pusha
or
je
test
add
jb
pusha
mov
add
sbb
mov
iret
clc
cld
sti
jge
xchg
adc
bound
add
iret
xor
sbbl
test
je
lret
push
or
sub
aas
sbb
popa
inc
cmp
xchg
mov
std
outsl
or
add
les
ss
xor
cmpsb
mov
adcl
call
add
cmc
stos
jnp
pop
mov
and
lock
mov
mov
mov
add
and
cmp
cmp
lahf
call
push
movsb
nop
cmpsb
mov
pop
lods
lea
pop
lcall
jl
out
xor
add
int
pop
pop
sub
out
in
xlat
loop
cmpsb
dec
jmp
and
mov
or
arpl
cmp
dec
pop
adc
cmp
jg
inc
jl
bound
sub
sbb
jp
in
mov
xchg
stos
fisubrs
xor
pop
hlt
push
je
sub
outsb
scas
cmc
jne
imul
mov
lcall
sbb
imul
adc
fmull
in
mov
rcl
sub
lret
add
xchg
les
push
sti
inc
pop
fistl
inc
dec
in
pop
jecxz
aas
pop
shrl
add
push
fstp
sahf
mov
int
or
push
and
add
sbb
call
push
cmp
pop
pop
fldenv
pop
push
pushf
pop
in
enter
mov
stc
mov
push
xchg
xchg
nop
mov
outsl
lods
mov
jl
dec
mov
adc
aam
lock
adc
out
mov
pop
test
bswap
iret
ficoml
pop
jne
cwtl
les
xchg
jle
push
mov
mov
fistps
sbb
loopne
push
in
dec
outsb
pushf
outsl
addr16
aas
add
adc
ret
pushf
aas
push
sub
scas
push
mov
or
pop
sub
inc
stc
sbb
sub
pcmpgtd
rolb
cmp
arpl
mov
xchg
push
sbb
cmp
add
pusha
sbb
dec
jnp
push
int
cmp
cmp
pop
or
insb
xchg
push
test
ljmp
ror
outsl
sub
aas
and
inc
faddl
cld
xchg
push
pop
xchg
sbb
xor
fldl
xchg
arpl
fstps
std
add
ds
jns
mov
cwtl
sub
push
ret
call
mov
mov
add
rcr
xchg
std
pop
inc
fucompp
pop
scas
dec
add
ret
cmpsb
jle
pusha
out
ljmp
insl
fstpt
adc
aas
sub
fdivs
add
stos
sarb
out
push
push
mov
pop
mov
shl
shlb
in
sub
rcl
test
and
xor
and
sbb
ss
clc
xor
cmp
gs
inc
push
in
or
pop
nop
mov
shrl
mov
daa
cmpsb
add
push
mov
int3
out
das
ljmp
or
inc
loope
jmp
es
add
mov
mov
xor
xchg
and
rclb
push
data16
fstl
btr
add
cmp
pop
fisubl
sub
sbb
dec
xor
mov
fs
cmp
jae
mov
xchg
adc
loop
jecxz
dec
mov
cmp
jno
and
mov
call
stos
inc
mov
roll
ret
push
push
pop
inc
pop
inc
push
pop
or
lret
pop
mov
dec
fisubrl
cmp
sub
mov
xor
xchg
pop
mov
shrb
sbb
movsl
push
call
pop
repnz
cmp
sti
jb
mov
lds
and
repnz
jle
mov
lock
push
mov
dec
mov
add
mov
daa
fwait
inc
out
sets
push
sbb
jne
imul
mov
es
je
and
dec
and
lods
imulb
imul
and
hlt
jnp
push
pop
sahf
sub
sarb
sbb
cmp
test
out
lret
inc
sbb
dec
sub
mov
fildl
andl
or
mov
xor
and
mov
stos
ljmp
std
lds
insb
xchg
scas
inc
or
fwait
mov
pop
scas
sub
sbb
js
push
cmp
stos
xchg
and
fstpl
mov
in
inc
and
in
mov
fs
pop
mov
leave
push
inc
and
mov
out
fdiv
push
mov
out
and
subb
or
js
mov
cmp
andb
js
sub
out
adc
loopne
push
test
int3
rorb
xchg
in
repz
mov
fnsave
cmp
jge
push
lods
sub
popa
call
mov
mov
repz
mov
mov
psubd
sub
pushf
movsl
in
popf
dec
outsb
nop
sub
inc
divb
jb
out
scas
js
scas
lds
ficompl
lcall
push
jecxz
cmp
into
mov
lahf
push
loopne
xor
movl
mov
out
jo
outsb
xchg
movsl
popf
mov
es
movsl
jnp
sub
mov
xchg
cmp
xchg
test
dec
movsl
pusha
neg
movsl
imul
ret
shll
and
int3
fstl
out
jmp
xor
xchg
push
pop
enter
adcl
dec
xchg
popf
cmp
push
bnd
inc
mov
mov
mov
or
fwait
sub
int
jmp
ds
ds
lods
or
ljmp
inc
stos
in
stos
add
cmp
stos
in
iret
adc
enter
lods
add
adc
push
pop
jno
shll
cmpsb
iret
add
and
ret
pop
je
pop
pop
les
fwait
adc
xchg
jecxz
add
xchg
adc
xor
addr16
scas
arpl
jp
call
xchg
out
push
dec
rorb
lds
shrb
mov
popa
movsl
push
cmp
adc
or
das
mov
int
adc
jmp
pop
inc
addl
rol
and
adc
fsubs
mov
xor
iret
rorb
lahf
pop
or
test
mov
cmp
pusha
fsubrs
mov
shrb
pop
pop
xorl
lds
loope
inc
daa
jno
popa
cmpsb
in
jge
daa
cmc
xlat
mov
mov
dec
mov
int
ja
xor
sbb
enter
das
xlat
scas
outsl
mov
or
in
xchg
fnclex
jge
xor
inc
pop
xor
ljmp
xlat
imul
xchg
dec
inc
es
aam
cmp
adcl
out
cmp
fcomi
leave
xor
movl
xchg
gs
cmp
jno
imul
mov
mov
aaa
xor
inc
ss
xchg
lds
pop
adc
in
push
jno
mov
xlat
jp
inc
pusha
mov
mov
mov
inc
fistpll
dec
ret
addr16
xchg
xor
lock
data16
push
popf
test
mov
dec
iret
daa
inc
cwtl
js
std
mov
iret
fs
pop
add
xchg
mov
outsb
dec
add
xor
xor
adcl
mov
xor
sti
aas
push
xchg
leave
das
or
lcall
xor
mov
je
ret
std
popa
lahf
xor
pop
cmp
gs
out
divb
std
popw
and
int3
adc
ja
jb
push
push
pop
mov
repz
test
mov
test
adc
cld
insb
fsubs
push
fsubs
test
loopne
subb
inc
dec
ret
xchg
cwtl
fistl
das
les
in
xor
loope
pop
pop
mov
mov
mov
xchg
cmpsb
and
xlat
sbbl
out
loope
popa
xchg
fisubs
jae
sub
jb
adc
xlat
pop
outsb
aam
sbb
loopne
stos
jo
arpl
inc
mov
xchg
pop
test
in
imul
dec
pusha
sbb
sbb
and
insb
icebp
out
lret
mov
xlat
js
pop
jp
dec
sub
pop
mov
movsb
repz
or
fldt
notl
push
xchg
add
adc
in
out
sbb
ss
movsl
dec
sbb
inc
and
imul
movsl
cli
dec
mov
lea
loope
pop
pop
xor
sub
jne
push
pop
insb
cmp
sub
pop
jl
loopne
imul
int
push
mov
imul
stos
mov
xchg
xchg
pop
mov
shld
push
dec
or
lds
xchg
mov
repnz
das
cmp
inc
cmp
push
movsb
nop
sbb
ds
xlat
push
adc
and
sub
xchg
jmp
xor
jg
lret
mov
mov
pop
jmp
out
les
fstps
pop
jae
sub
leave
sbb
mov
ja
lret
aad
and
icebp
or
sbb
xchg
int
in
pushf
sub
and
xor
dec
xor
repz
mov
add
jmp
pop
lret
in
sub
sub
outsb
cmp
fwait
out
mov
loop
call
ljmp
sbb
aaa
jle
push
push
gs
call
lret
imul
out
adc
out
imul
fmuls
lret
cli
jno
sets
adc
out
cli
ljmp
scas
cmp
ret
sbbl
insb
mov
das
xchg
out
or
adc
dec
adc
out
insb
pop
dec
mov
lock
jo
movb
inc
pop
push
xorl
test
pusha
push
lock
fstl
xor
mov
pop
fimuls
xchg
repnz
push
and
cmp
mov
jbe
cmp
je
add
xchg
pop
mov
aad
or
sbb
nop
adc
scas
dec
dec
adc
imul
add
pusha
repnz
enter
in
das
leave
std
dec
and
sbb
nop
jle
cmp
stc
mov
and
sbb
jb
in
jmp
push
dec
jge
pop
push
rcl
inc
popa
mov
nop
mov
lods
and
jge
sub
dec
mov
shr
mov
pop
add
jle
jmp
pop
dec
add
cmc
scas
cmp
std
inc
add
nop
fs
in
ss
cmpsl
cltd
lret
jle
rcrb
cltd
daa
mov
inc
fprem1
les
jo
inc
pop
jbe
cltd
adcb
outsl
loope
cmp
mov
mov
xor
pop
popa
test
xchg
fdivs
adc
test
and
jle
out
int3
movsl
jno
lret
pop
dec
lea
lods
call
xchg
push
jae
into
outsl
mov
fistpl
loop
inc
mov
orb
mov
push
xchg
and
out
push
hlt
ffree
pop
jb
mov
fcoms
movsl
and
loope
js
and
test
pop
test
jb
adc
pop
sahf
jbe
and
dec
cwtl
repz
outsb
imul
mov
movsb
xchg
ja
cmpsb
mov
mov
mov
cmp
xor
js
xor
push
test
movsl
loop
mov
aaa
std
mov
iret
imul
fnstsw
jbe
mov
pop
fcmovnu
sbbl
adc
sub
loope
and
xlat
adc
pop
lds
sbb
jg
cmc
add
or
mov
scas
dec
mov
push
mov
add
negb
arpl
orl
push
adc
stos
push
nop
dec
shll
xorl
and
bound
push
repz
sti
pop
lret
push
aas
fistl
dec
add
sub
mov
mov
insb
or
xor
mov
jne
cmp
insb
jo
movsb
cmp
inc
and
xor
ret
cmp
out
loope
adc
mov
and
test
cwtl
xchg
repnz
pop
inc
stos
sub
mov
out
inc
loope
in
push
and
dec
or
jmp
cmpsl
sbb
xchg
mov
addr16
movsb
cli
add
xchg
aad
std
jno
sti
jns
bound
loopne
adc
pop
rcrl
in
or
xor
inc
pop
loopne
bound
ss
imul
cmp
cmpsb
cmp
cmp
xor
cmp
mov
and
adcb
mov
xor
faddp
sub
shrl
mov
repnz
test
int3
shrb
cmpsb
xor
mov
cmp
xorl
xchg
clc
ret
mov
rcrl
call
cmc
lea
fwait
xorb
adc
stc
mov
fwait
mov
std
je
jmp
push
adc
pop
pusha
fstps
rcl
mov
push
dec
dec
cltd
fnsave
jo
add
mov
mov
shrb
ljmp
add
mov
into
push
and
jb
test
ds
je
andb
sbb
dec
insl
push
jle
call
loop
mov
sub
xchg
std
bound
gs
cwtl
jae
sbb
jmp
and
dec
mov
mov
aaa
clc
inc
xchg
lods
jns
js
std
add
push
mov
sahf
dec
push
and
xchg
ss
pop
inc
fstps
aad
fdivrl
fs
cmp
int3
adc
jns
in
lock
test
lcall
test
jl
movsb
dec
sub
stc
lret
sahf
lea
imul
call
add
sti
pop
enter
mov
mov
pop
jle
mov
sub
fstp
mov
into
loop
fbstp
clc
inc
mov
mov
mov
dec
or
sub
mov
jmp
mov
scas
dec
packssdw
and
xchg
mov
push
imul
push
orb
jp
decb
sbb
ss
nop
pop
in
jb
xor
imul
das
mov
lea
pop
ds
pop
xchg
push
pusha
mov
sub
push
and
adc
xor
addr16
cmp
adc
mov
rcll
in
shll
and
inc
out
call
mov
ds
fwait
sub
les
add
adc
cmp
cmp
xor
xor
shl
subl
paddw
das
shlb
xor
cmp
add
repnz
rolb
movsl
fists
mov
pop
mov
pushf
fstl
sbb
enter
in
fs
xor
ret
or
aas
movsl
out
push
inc
mov
in
dec
ret
mov
int3
stos
xchg
push
jmp
pop
addl
pop
shlb
call
jb
xor
outsb
cwtl
fisubl
mov
mov
std
mov
mov
sbb
xor
mov
lods
jo
inc
jne
sub
and
mov
dec
adc
mov
xchg
or
push
addr16
push
xchg
dec
push
imul
ja
out
mov
xchg
cwtl
stc
xlat
cs
xchg
pop
dec
dec
sub
movsl
xchg
xor
cmp
icebp
fwait
jp
sti
mov
aad
shrb
nop
out
xlat
popl
jae
ret
aas
popa
fidivl
inc
outsb
or
xor
into
sub
data16
sub
fcompl
jbe
and
gs
sub
mov
or
push
xor
adc
xchg
pop
adc
adc
stos
xor
pop
ficoms
xchg
jp
sbb
and
sti
xor
dec
xchg
fisttpl
xor
lock
dec
xchg
movsb
pop
mov
or
cmp
xor
xchg
fimull
mov
pop
lock
imul
ds
adc
add
loopne
xorl
sub
iret
pusha
aad
mov
jnp
cmp
pop
dec
mov
rorb
fs
cmp
shrb
insb
stos
adc
ret
and
jne
mov
ja
cld
aas
fwait
adcb
xchg
jmpw
les
inc
pop
je
iret
ret
hlt
mov
dec
repnz
shl
push
daa
push
outsb
and
mov
cmpsb
out
jp
mov
xor
out
mov
lcall
nop
and
mov
dec
outsb
mov
xor
or
jbe
xchg
stos
and
adc
pop
push
sub
mov
xchg
jmp
rclb
xchg
push
xchg
cmpsb
sub
dec
hlt
insl
daa
clc
std
push
pusha
pop
sub
adc
insl
mov
pushf
int
push
incl
int3
iret
das
push
sub
je
jns
jge
mov
jmp
xchg
fcoml
sub
mov
adc
jle
push
sub
jne
cmc
jmp
popa
pop
or
lock
cli
ljmp
cmp
xchg
std
mov
mov
rolb
addr16
pop
or
inc
mov
jle
lcall
cwtl
imul
or
sub
js
jecxz
xchg
hlt
cmc
and
and
cmp
loopne
adc
gs
push
add
jmp
cmpsl
ffreep
leave
push
or
ficomps
and
loop
addr16
adc
jnp
and
push
push
call
xor
push
rorl
fucomip
add
aaa
add
mov
das
dec
mov
xor
dec
mov
mov
cmp
outsl
inc
xchg
or
clc
pop
bound
push
aaa
aad
add
mov
mov
lret
or
mov
pop
loop
and
pop
push
push
dec
mov
jmp
lret
jp
pop
test
scas
push
test
addr16
mov
int3
mov
js
jmp
jae
addb
push
adcl
xor
sbb
mov
cmp
xchg
jge
enter
mov
stc
cmp
mov
and
mov
jge
test
dec
cmp
jb
xorl
stos
outsl
add
and
mov
push
jmp
or
stc
inc
clc
xor
pushf
xchg
outsl
imul
repnz
aad
repz
ds
loopne
jns
test
aas
sbb
fcoml
dec
sub
mov
sbb
sbb
cs
fcoml
out
jnp
push
sub
push
sub
in
out
and
jae
push
jp
inc
jp
loopne
pop
and
sub
out
push
sbb
mov
jge
int
sub
jns
popa
mov
xchg
ror
leave
sbb
fisubrl
dec
fldenv
je
shr
sbb
aad
mov
jae
sbb
jecxz
pop
les
cwtl
sbb
outsl
add
and
negl
mov
push
je
add
pushw
fwait
jo
or
js
and
dec
inc
sub
mov
or
pusha
das
std
pop
fldcw
mov
lret
lret
jns
push
sbb
fldenv
pop
xlat
popf
pusha
cmp
notb
das
lret
push
and
xchg
mov
imul
pop
rorl
adc
adc
fdivr
pop
nop
add
xor
inc
in
push
or
aaa
sub
mov
cmc
cltd
and
jmp
pop
pop
add
mov
inc
gs
lock
xchg
scas
enter
into
push
sub
nop
rclb
lret
inc
sub
imul
or
bound
mov
enter
push
jp
and
and
and
shr
push
test
mov
cmp
ljmp
push
daa
push
xor
mov
jnp
add
xchg
jg
out
sahf
sbb
sbb
pop
xchg
inc
mov
adc
adc
xor
dec
push
lahf
aas
mov
mov
cmpsl
movsl
inc
or
hlt
mov
push
push
sarb
fnstsw
mov
je
sbb
insb
lock
scas
mov
nop
dec
cwtl
sbb
jne
bound
stc
scas
sub
and
pushf
rcll
lock
adc
xor
pop
test
mov
scas
cld
aam
pop
loop
loop
push
out
aaa
jae
jbe
leave
fsubl
ja
mov
mov
inc
sbb
testl
loop
pop
inc
pop
out
aam
in
icebp
bound
int3
and
add
ret
sbb
or
movsb
lret
jae
xor
adc
adc
ret
test
in
sub
mov
sahf
rcrb
jge,pt
imull
push
mov
push
icebp
mov
mov
adc
push
dec
incl
inc
pop
sbb
cwtl
lahf
mov
cwtl
dec
push
insb
jo
aam
loopne
jg
ja
inc
fiadds
adc
call
push
jnp
push
es
stc
fwait
push
ljmp
sub
mov
aaa
iret
pop
xor
lcall
jmp
or
sarb
fbstp
aaa
sbb
jle
and
sahf
lock
cld
fildl
push
jecxz
ret
sub
clc
pop
push
cmp
mov
je
aas
mov
scas
fistpl
cmp
popf
mov
sub
mov
jecxz
sub
xor
shlb
mov
test
adc
arpl
xchg
push
push
aaa
jmp
fucomip
jb
das
or
mov
iret
adc
dec
movsl
pushf
mov
cmp
jae
and
inc
aad
in
jge
fildl
outsb
test
or
imul
das
push
sbb
push
jo
add
cmp
cs
lods
sub
mov
and
adc
stc
lahf
dec
xchg
in
aam
insl
filds
inc
pushf
xor
push
dec
mov
cmp
out
xchg
cwtl
mov
xchg
enter
dec
cs
add
xor
sbb
mov
jns
rcrb
out
lahf
jecxz
xchg
shlb
movsl
or
pop
repz
jmp
fldl2t
sbb
outsb
into
ds
pop
and
lret
bound
lahf
ja
pop
stos
and
mov
adc
jp
shl
roll
imul
pmullw
ss
xchg
mov
jp
and
sahf
dec
loopne
xor
in
cmpsl
mov
mov
mov
cltd
inc
arpl
add
push
test
mov
loopne
cld
fidivrl
pop
mov
aam
cmc
ret
mov
cmc
sub
cld
mov
mov
fcompl
inc
xor
insl
push
imul
sub
fs
xchg
pop
je
or
ret
rorb
sbb
fcmove
adc
insl
dec
cmp
jecxz
mov
in
dec
cld
mov
push
in
loop
fsubrl
sbb
mov
inc
pop
and
ss
cwtl
and
mov
mov
gs
sbb
loop
fildl
xchg
mov
cmp
pop
ss
clc
ljmp
cmp
add
add
lea
lock
mov
std
push
imul
ds
xlat
add
fimuls
gs
lods
inc
popa
rcll
ret
push
lock
jg
popa
scas
jmp
inc
sub
bound
cs
xchg
cltd
mov
scas
test
or
jno
and
sbb
mov
push
fdivr
in
clc
fidivrs
and
jne
ja
daa
pop
xchg
pop
in
in
and
add
and
adc
stos
test
cmp
loopne
repnz
stos
cli
ds
gs
int3
jecxz
dec
inc
negl
and
and
shrb
xchg
jb
scas
frstor
adc
sub
cmpsb
or
adc
cmp
fimull
adc
ret
insb
aas
mov
pusha
mov
push
push
xchg
loope
or
pusha
stc
data16
dec
nop
xchg
jl
fcmovnbe
dec
hlt
and
test
mov
js
subl
dec
bound
push
and
mov
les
sbb
dec
mov
mov
sti
imulb
cmp
xor
js
jo
inc
lods
pop
inc
pop
mov
jno
and
xchg
push
adc
pop
add
cmp
adc
outsb
aad
pop
std
call
shr
or
insl
push
les
lock
xchg
cmpsb
cmp
push
gs
dec
imul
inc
mov
scas
push
inc
stos
loopne
clc
add
test
shrl
shll
mov
imul
mov
out
test
sub
push
adc
loope
mov
push
mov
inc
aam
repz
sbb
or
stos
pop
jns
lods
jnp
sbb
clc
inc
adcl
jmp
push
lret
inc
pusha
cmp
call
sbb
clc
add
mov
int
loopne
jo
sbb
jnp
jb
or
inc
push
test
push
or
fwait
es
jb
lods
jns
aaa
neg
repnz
xchg
bound
xchg
int
clc
in
inc
mov
jecxz
lods
sbb
jmp
jno
clc
cmc
push
pop
and
aaa
addl
cmp
pop
roll
mov
arpl
cmpsl
clc
push
out
sti
fwait
mov
mov
dec
xchg
icebp
and
out
mov
or
xchg
nop
ljmp
imul
xchg
popa
jno
in
mov
sar
mov
in
add
ret
mov
cmp
repz
cmp
sbb
mov
jne
push
inc
scas
pop
fwait
jo
dec
daa
mov
mov
fwait
jns
cli
rolb
and
add
pop
cmp
movsl
lret
sbb
pop
daa
mov
sub
scas
push
in
pop
pop
mov
xchg
xchg
mov
mov
sub
jae
sbb
rorb
shll
or
test
xchg
mov
ds
imul
movsb
incl
push
cmp
lds
sti
jmp
inc
jno
push
fildl
lret
mov
push
and
and
arpl
rolb
and
addr16
pop
loope
or
pusha
mov
add
jnp
leave
call
data16
add
push
or
adc
mov
jnp
xchg
push
cld
dec
call
sahf
xchg
out
push
movhps
and
mov
cmp
jmp
pushf
mov
aas
je
fxch
jne
xchg
mov
jbe
dec
shll
out
mov
stc
push
ss
or
mov
in
fidivrs
dec
mov
pop
out
ret
pop
iret
dec
daa
xchg
lock
sbb
jns
sti
cmpsl
cmpsb
mov
inc
jecxz
out
xor
adc
sahf
stc
cs
jle
cmpsb
cld
push
jmp
rorl
sub
iret
setnp
negb
inc
mov
inc
push
cwtl
inc
popf
scas
mov
jne
das
sub
cmpsb
mov
push
in
out
xchg
cmp
fs
inc
push
shlb
and
mov
lcall
popa
rcrl
mov
xchg
adc
gs
std
aaa
js
add
cmpsb
mov
pop
fmul
xchg
and
jne
jecxz
les
adcb
or
add
lods
sahf
cmpsb
jle
out
xor
sarl
outsb
or
imul
adc
add
mov
pop
sbb
pop
out
lret
dec
stos
pop
pop
sbb
jmp
adc
push
scas
cwtl
imul
pop
fwait
mov
jns
scas
lret
jbe
lcall
enter
push
cld
cltd
test
insl
inc
jno
repnz
mov
cmp
pop
outsb
pop
dec
lock
dec
repz
aaa
jmp
dec
sbb
push
out
xchg
loopne
out
ja
scas
fs
in
dec
pop
adc
fwait
jg
cmp
stos
cmp
adc
cwtl
jp
xchg
and
idiv
jl
or
mov
loopne
movsl
inc
mov
jae
jno
xchg
pop
cmp
movl
adc
icebp
mov
loop
ret
sub
jns
push
dec
xchg
imul
pop
push
or
mov
aas
jge
ljmp
repz
add
movsl
jns
dec
jmp
or
dec
movsl
jmp
ss
mov
adc
pop
jo
and
dec
cmc
leave
pop
jge
cmp
cmp
mov
mov
es
mov
jnp
popl
stos
fldl
xchg
adc
jmp
stc
andl
xchg
inc
mov
pop
in
inc
cmp
cmc
pop
xchg
sbb
cltd
movsb
dec
cmp
pop
xor
loope
sbb
lods
fisubs
fwait
add
popf
movsb
mov
fisubrl
js
xchg
cld
insl
sbb
pop
fdivrs
sub
mov
jae
stc
xor
fwait
ljmp
mov
int
pop
fcmove
sbb
xchg
mov
fdivl
out
testb
rcrb
rcll
adc
push
add
popa
dec
orl
xor
mov
inc
dec
mov
pop
xor
adc
mov
or
movsl
hlt
lods
fildl
mov
jmp
out
mov
lea
jnp
inc
arpl
cmp
adc
pop
bound
icebp
push
push
stc
jae
adcb
sbb
add
push
popf
xchg
inc
mov
in
into
in
pop
inc
push
js
push
and
lds
pop
into
pop
nop
cltd
mov
push
mov
ds
cld
out
insl
add
mov
leave
sub
jnp
cmpsl
lret
lret
push
daa
inc
mov
adc
ret
lret
icebp
push
fidivs
mov
in
mov
popf
stc
push
addr16
or
mov
lcall
fcoml
or
rorb
dec
fistl
fcmovbe
fs
call
add
in
test
mov
cmp
dec
loopne
jp
or
add
popf
test
inc
in
or
pop
mov
push
jb
mov
push
cmpsb
dec
stos
ds
insl
divl
scas
inc
out
lea
testl
scas
rcll
out
jnp
bound
loope
pop
add
in
js
adc
clc
mov
adc
push
cmp
jl
sbb
hlt
repnz
add
dec
out
lcall
adc
adc
sbb
push
pusha
jae
paddq
in
loopne
push
popa
cmp
int3
or
iret
nop
data16
and
test
xor
les
stos
loopne
push
pop
pop
loopne
fwait
movsl
xchg
jmp
sub
push
iret
repnz
arpl
js
mov
mov
out
jmp
andl
mov
mov
mov
loope
cmp
push
fstl
pslld
jg
jle
sub
cmp
pop
shl
into
outsl
repz
in
cmpsb
stos
lcall
push
xchg
ja
ret
arpl
jge
pop
mov
sbb
mov
nop
pop
and
dec
mov
sar
sbb
repz
test
daa
push
mov
xchg
add
xchg
inc
cmp
cwtl
int3
js
sbb
push
pushf
outsb
incl
out
mov
pop
bound
ds
sbb
or
jmp
cltd
inc
daa
fsubrl
shlb
sarl
mov
hlt
mov
add
fs
dec
lds
jecxz
addr16
xchg
in
add
pop
data16
lea
roll
or
xor
pop
push
rol
jnp
iret
movsl
ret
jns
dec
add
push
lds
dec
cwtl
mov
dec
add
into
jmp
es
jno
pop
xlat
lahf
movsl
cmp
stos
add
shrl
and
mov
cmpb
xchg
lods
dec
das
mov
fstpt
or
ret
not
jnp
push
cli
lock
mov
popa
fidivl
sahf
cmp
cwtl
lret
sub
lahf
cwtl
cmpsl
or
je
push
insb
or
shrl
xor
jbe
fdivp
pop
add
jg
sub
and
mov
sbb
daa
sub
fcoml
mov
jmp
cmp
int3
and
xor
push
int3
add
scas
and
ss
dec
pop
movsl
cmpsl
je
xchg
push
inc
mov
testb
jns
mov
cmp
dec
xor
lcall
mov
inc
std
mov
add
dec
loope
gs
push
jg
in
scas
loopne
lret
cltd
stc
imul
inc
add
xchg
cmpsl
stc
pop
das
cs
pushf
or
faddl
push
cmp
bound
insl
inc
xchg
iret
cltd
inc
aaa
mov
mov
xchg
cs
loop
push
sbb
adc
fs
dec
and
lcall
repnz
mov
ja
rcll
idivb
xchg
mov
out
mov
aad
and
loope
fisubrs
ret
dec
pop
push
push
push
sarl
scas
add
xor
js
shll
jmp
inc
scas
out
xchg
inc
addr16
rolb
out
jmp
xlat
push
and
or
nop
or
popf
into
sub
data16
sbb
jg
or
add
les
xor
pop
pop
dec
shll
xor
jo
das
loopne
fdivl
pop
ss
xchg
jb
dec
ret
cmc
adc
mov
icebp
inc
je
dec
xchg
cmpsl
xchg
in
fs
and
scas
loop
cmpsl
orl
jno
fwait
jp
xor
pop
push
inc
ss
rorl
xchg
hlt
fistpl
cmp
sbb
gs
sub
nop
xor
jle
push
imul
inc
xchg
xor
jnp
jnp
das
daa
cmp
lods
sub
push
mov
js
ja
or
add
and
cmp
dec
ja
mov
les
adc
mov
in
js
xor
ss
jo
fnstsw
push
bound
into
mov
jp
cmp
dec
xchg
xchg
sub
or
leave
and
sub
into
jmp
add
cmc
push
mov
add
test
mov
jl
inc
repnz
lods
je
mov
je
pop
sub
rcrl
and
xchg
add
push
test
or
test
xlat
jne
jecxz
lahf
or
jg
test
adc
sarb
sbb
push
stos
xor
add
sbb
jecxz
push
jnp
scas
bound
inc
jl
aas
in
movsl
decb
das
mov
sbb
sbb
shll
xchg
testl
dec
out
addr16
mov
out
outsl
mov
push
jns
xor
sbb
and
jmp
and
push
fldln2
xchg
adc
icebp
pop
movl
push
jmp
jl
stos
jne
sub
add
sub
out
cli
or
xor
aas
fsubp
cmp
jmp
stos
xchg
xor
jge
sbb
pop
leave
inc
dec
inc
add
sbb
inc
push
mov
pop
leave
pop
leave
idivl
test
lcall
fstpl
jmp
lds
imull
movl
push
or
adc
adcb
mov
push
push
je
ss
daa
jmp
pushl
jecxz
and
pop
xor
scas
scas
pop
dec
sbb
add
inc
mov
sti
loop
dec
mov
lods
data16
xchg
and
mov
cmp
inc
push
add
push
cmp
pop
inc
pushf
pop
neg
rcrl
cmp
int
out
test
lahf
push
scas
mov
add
sub
and
icebp
stc
js
shrl
ljmp
push
push
cmp
mov
lahf
dec
dec
call
fidivrl
lock
pop
adc
fwait
lahf
dec
ljmp
movsl
inc
notl
or
xchg
pmulhw
nop
xchg
call
mov
push
test
dec
dec
out
dec
jp
inc
push
aam
inc
rcrl
stos
mov
stos
pusha
mov
xchg
lret
or
das
pop
or
push
jae
pop
jne
movsl
enter
sub
shrl
das
sbbb
and
aaa
mull
push
nop
sbb
xor
pop
jge
xlat
push
scas
fidivs
les
inc
nopl
mov
into
test
mov
sbb
adc
add
xchg
cmpsl
lahf
in
out
mov
sbb
lret
jno
dec
ret
test
into
lret
sub
mov
hlt
mov
popf
xor
xchg
cmp
arpl
pop
movl
popa
add
xchg
jle
jle
imul
pop
mov
popa
pop
aaa
or
inc
adc
lret
jg
cmp
xorb
xchg
add
fldenv
mov
adc
mov
mov
ljmp
and
xchg
fwait
pop
mov
imul
popf
hlt
and
pop
pop
cld
fsubs
nop
lods
inc
enter
aad
push
imull
out
jl
loope
stos
fdiv
scas
in
ljmp
shrb
inc
xor
loope
imulb
lcall
jl
cmp
mov
iret
out
loop
stc
lods
dec
dec
add
fstpl
pop
jbe
into
pop
cmpsl
cli
add
cmp
cmpsb
cld
dec
jnp
iret
cli
adc
mov
cmp
movsb
jp
xchg
cmpsl
stos
sbb
xor
adc
push
cmp
test
pop
or
pop
lret
xchg
push
sbb
mov
ret
dec
dec
jle
jmp
lret
sub
inc
add
js
into
mov
pop
add
fdivrs
push
sbb
push
sbb
mov
data16
cmpsl
inc
xor
mov
leave
cmp
roll
push
mov
adc
mov
outsl
stos
cmp
jmp
imul
imul
pop
mov
cmp
pop
or
hlt
add
adc
pop
loope
cmp
xchg
das
stc
push
push
xchg
stos
dec
cmp
lret
adc
daa
mov
das
dec
sbb
int
and
lock
mov
mov
xchg
xchg
xlat
pusha
mov
add
ds
dec
into
aas
sar
dec
shlb
movsl
repz
ja
bound
in
movsb
pop
bnd
popf
inc
push
xchg
loope
sbb
sbb
aaa
pop
sarl
cmp
pop
mov
sbb
loop
bnd
push
aam
push
or
stos
pop
sub
and
and
dec
std
mov
add
pop
pop
or
push
mov
std
popf
jg
outsl
and
in
sub
xchg
mov
pop
mov
daa
dec
or
jae
loop
mov
cmp
push
and
das
mov
xlat
mov
test
dec
and
or
test
xor
push
push
lcall
and
xchg
cmp
movsb
add
mov
push
inc
sbb
les
out
adc
js
add
clc
fistpl
xor
in
mov
xchg
xor
pop
xchg
fcomi
repnz
sbb
inc
pop
cmp
vsubss
and
and
sahf
fyl2xp1
or
daa
and
dec
mov
xchg
shrl
dec
xchg
iret
mov
test
cld
pop
or
mov
cmp
sbb
sbb
push
jbe
out
test
lcall
imul
and
jecxz
adc
xchg
cmp
or
pop
push
push
pop
loope
jge
jge
jmp
call
xor
add
mov
or
pop
scas
sti
mov
mov
mov
jg
call
jno
dec
shl
insb
adc
psubb
sbb
push
jecxz
std
adc
orl
add
movsl
outsb
push
inc
adc
addl
add
xchg
mov
mov
mov
jecxz
pop
cmpsl
out
push
add
pop
jnp
push
data16
and
sub
pop
test
bound
cmpl
pushf
mov
jge
subb
pop
xchg
sahf
jbe
fwait
adc
into
clc
cmp
dec
lds
inc
xor
jge
and
lods
mov
loopne
mov
add
xchg
test
fistl
xor
lret
mov
subl
mov
push
fwait
lahf
divl
fmull
mov
mov
in
add
int3
push
mov
mov
nop
or
stc
setnp
or
and
test
xchg
es
hlt
cmp
or
fimuls
jbe
push
rcrl
hlt
pop
shlb
sub
lods
in
adc
or
mov
fistps
daa
insb
mov
xchg
nop
inc
push
or
test
faddl
shlb
sbb
icebp
adc
repz
and
adc
dec
adc
inc
pop
cs
mov
cmp
push
xor
jo
daa
cmp
dec
or
js
out
cmp
shrl
gs
push
jp
sub
out
mov
dec
dec
in
arpl
cli
lahf
jp
test
lock
mov
pop
cmp
insb
rcll
inc
mov
xlat
mov
shlb
jbe
pop
fdivr
test
lret
inc
pop
push
mov
push
inc
movsl
cmp
scas
cwtl
lods
bound
mov
call
cmpsl
ret
mov
jb
sbb
xchg
mov
xor
mov
adc
imul
push
fildll
push
pushf
movsl
push
or
pop
dec
fstl
xor
and
xchg
xchg
test
xor
xlat
cmp
sbb
inc
cmpsl
mov
mov
scas
int3
mov
pop
fwait
sahf
sbb
cmp
imul
adc
ljmp
mov
push
mov
add
xchg
in
outsl
ret
frstor
xlat
stos
add
in
aaa
push
push
jnp
cli
test
int
jle
in
and
clc
push
jp
and
out
ds
clc
imul
jnp
testb
ljmp
mov
sahf
sbb
insl
mov
inc
enter
cld
pop
enter
cs
inc
cmp
cmp
cmp
iret
push
jns
xlat
dec
testl
fildll
sub
lods
xchg
int3
inc
insl
or
adc
lea
jbe
xchg
mov
add
cmp
mov
in
out
sub
sub
sub
sbb
pusha
test
mov
push
movsl
pop
ja
outsb
push
fbld
or
inc
dec
mov
in
dec
mov
pop
pop
or
mov
push
shrl
and
mov
push
aam
in
sbb
adc
loope
call
rclb
add
inc
insl
mov
xchg
cld
push
xchg
jl
in
xlat
push
lret
push
dec
xchg
xchg
push
push
scas
inc
or
mov
iret
adc
sti
mov
sarb
mov
sbb
and
lea
add
dec
sbb
adc
negl
dec
fildl
lcall
pop
xorb
push
mov
scas
xor
fmuls
std
xor
inc
mov
imul
mov
dec
imul
push
inc
std
mov
mov
mov
call
sbb
push
and
out
inc
shlb
inc
fidivl
lret
push
gs
cmp
push
pop
fcoml
dec
adc
lret
cmp
pop
push
loop
lock
pushf
sahf
cltd
cmpsb
jns
shlb
inc
popa
andb
push
daa
fwait
jo
ljmp
cmp
mov
dec
test
out
push
out
xchg
xchg
pop
imul
addb
out
icebp
outsb
xchg
adc
outsb
lods
dec
jg
or
or
push
in
outsl
dec
pop
sti
loopne
push
fs
and
add
xor
test
loope
and
in
and
mov
shll
xor
adc
cmpl
pop
in
imul
es
mov
je
scas
out
int3
fistpl
cmp
clc
shll
cmpsb
in
mov
push
inc
mov
mov
cwtl
sub
sbbl
lcall
stos
xchg
fcomps
ret
cmp
push
es
popf
rorb
mov
popf
fisttps
adc
xchg
inc
jl
jo
imul
sbb
insb
mov
mov
pop
lahf
mov
pop
cld
mov
les
call
mov
test
add
or
cmpsl
lock
loopne
scas
outsb
jbe
dec
jp
mov
push
call
jo
in
mov
jg
adc
call
pop
and
mov
push
fwait
jle
call
xchg
into
mov
ss
inc
lahf
and
mov
pop
sub
push
xorb
test
hlt
sahf
outsl
icebp
mov
mov
enter
or
cli
scas
test
andb
add
sbb
cmp
fcmovb
movsb
ja
or
mov
outsl
xor
pop
xor
push
jge
dec
mov
mov
pop
mov
repnz
and
jae
mov
adc
mov
mov
int3
lock
icebp
repz
inc
scas
and
push
xchg
sub
push
je
shl
test
data16
subl
mov
xchg
loop
xor
xlat
call
inc
xchg
pop
out
lret
mov
sbb
fnstcw
add
imul
push
insb
lods
loope
jmp
and
loopne
cmp
push
jb
pop
sbb
xchg
je
ljmp
push
es
jl
mov
mov
pusha
xchg
sub
pushl
xchg
hlt
adc
je
aas
fldt
loopne
roll
mov
movsl
notb
andl
adc
jge
jle
mov
lock
out
adc
iret
aad
shr
mov
out
mov
inc
mov
cs
fwait
gs
adc
iret
push
in
bound
jae
sub
push
iret
jl
mov
xchg
in
mov
mov
das
or
add
xor
movsb
in
push
arpl
stos
xchg
xlat
mov
xor
bound
xchg
ja
cs
cmpl
hlt
imul
inc
outsb
inc
or
xchg
aam
out
popl
das
lcall
push
jbe
mov
jne
inc
mov
xor
sbb
es
out
pop
inc
add
repz
outsl
mov
ds
jbe
inc
mov
add
addb
cmp
aas
mov
push
xchg
xor
mov
test
mov
add
add
into
js
sub
test
aad
test
insb
cmpsl
in
dec
inc
or
adc
jae
shr
inc
and
xor
cmp
faddl
dec
pop
push
pusha
loop
mov
leave
popa
jns
jb
jae
mov
push
repz
mov
and
fcomps
xchg
mov
xor
add
and
inc
and
mov
jo
sub
cmp
sbb
pop
jnp
fdivr
je
repz
mov
aad
mov
int
addr16
pusha
in
leave
mov
scas
stos
pop
push
xor
xchg
adc
mov
xor
inc
bound
xor
cmc
xchg
sahf
fsub
add
negl
push
add
or
mov
jae
into
in
fnsave
std
push
push
mov
adc
xchg
in
and
jecxz
gs
inc
fimuls
in
test
ret
cmpsb
push
mov
dec
clc
pop
daa
ljmp
sbb
pop
movsb
sub
mov
mov
idivl
in
xchg
imul
fisubrs
in
mov
jns
push
add
fisttps
sbb
sti
pop
iret
jbe
and
push
lret
mov
mov
test
add
mov
xchg
js,pt
adc
jmp
shll
nop
fwait
popa
mov
push
xlat
jne
les
push
add
daa
arpl
pop
fwait
dec
jno
push
lcall
movsb
adc
jg
sti
in
and
xlat
addr16
ret
or
sbb
mov
dec
jo
push
sbbb
jne
test
mov
cmp
dec
xchg
xor
ss
add
aam
mov
pop
cs
mov
sub
and
inc
fildll
push
push
xor
add
mov
cmp
mov
adc
mov
cmp
imul
dec
jmp
enter
fiaddl
mov
mov
fs
dec
cmpsb
jecxz
dec
xchg
imul
xor
mov
sbb
shlb
mov
mov
cmp
int
cmp
and
sub
mov
lods
sub
cmp
test
pusha
ret
fwait
add
push
in
into
and
mov
lods
xchg
and
and
lds
jo
push
ljmp
je
pop
out
andl
out
lods
scas
aad
daa
xchg
je
xchg
fimull
fucomip
mov
cld
inc
pop
mov
arpl
repnz
sti
dec
mov
mov
jnp
fdivrl
mov
test
stos
pop
mov
push
sbbb
hlt
inc
sub
jg
ret
int
lods
cltd
andb
dec
rclb
xor
xchg
pop
clc
jne
test
pop
pop
xchg
gs
mov
ja
clc
dec
xor
out
mov
or
xor
mov
verw
xor
inc
inc
cmp
inc
or
jmp
les
orl
cmc
push
fisubl
pop
rorl
mov
fcoml
xor
pusha
popf
in
push
mov
xchg
mov
cld
fldenv
cmpsb
cmpsl
sub
in
push
push
inc
out
pop
sti
sbb
divl
sub
aam
mov
xor
cmc
stos
punpcklwd
jmp
and
cltd
movsb
pop
inc
sub
inc
sub
xchg
push
xor
xchg
lods
pop
loop
scas
dec
sub
mov
fmuls
dec
or
mov
popf
sbb
xor
sbb
pop
or
inc
imul
insb
stc
stos
xlat
mov
push
sub
push
in
and
mov
ljmp
and
aas
push
jg
add
inc
ror
lods
pop
mov
cmpsl
jae
mov
jle
aad
adc
popa
or
stc
inc
mov
or
imul
fadds
hlt
cmp
mov
inc
out
imul
or
xchg
mov
inc
jae
pop
pop
ss
and
enter
addl
sub
cmpsl
pop
sti
popf
mov
mov
dec
xor
jmp
cltd
or
std
imul
hlt
adc
ret
cmpb
push
fdivrp
pop
and
jl
stos
dec
das
xchg
fsub
imul
push
insl
fldl
mov
push
xor
sbb
lock
fs
and
std
push
outsl
xor
sub
xchg
xchg
xor
mov
in
cmp
mov
and
mov
mov
jle
xor
mov
and
jmp
add
cli
mov
outsb
movsl
data16
pop
dec
jge
popw
xchg
inc
les
xor
mov
mov
cmpsl
dec
bound
sbb
dec
in
testl
int3
lock
imul
cld
push
in
movsb
sarl
fwait
sub
incb
js
out
jae
cmp
push
insl
sub
mov
pusha
push
push
dec
repz
add
push
pop
dec
inc
pop
repz
js
xor
push
xor
jb
xlat
pop
dec
das
ds
fs
fwait
pusha
or
mov
enter
jl
xchg
or
cmc
cmp
jp
adc
mov
les
movl
std
push
add
xchg
mov
clc
pop
xor
push
imul
pop
cmp
mov
clc
sbb
das
mov
cmpl
cmpsl
ret
push
lcall
addl
loope
das
pop
rol
and
aam
scas
and
in
pop
test
pop
pusha
dec
jmp
cmp
pushf
imul
xchg
clc
cmp
adc
outsb
push
imul
sub
lods
mov
imull
inc
jns
fcmovb
pop
das
adcl
adc
dec
shrl
add
add
sbb
jl
mov
aaa
cmp
mov
pop
mov
out
pop
cmp
jmp
or
repnz
movsl
call
pop
daa
clc
imul
shl
mov
adc
sarb
daa
mov
push
jb
inc
mov
loope
movsl
cltd
push
hlt
dec
jecxz
mov
stos
sti
enter
rcr
mov
dec
ss
inc
sub
or
jle
mov
das
movsl
add
xchg
inc
js
push
sbb
mov
mov
rclb
add
or
pop
pop
mov
hlt
test
lret
shrb
cmp
je
stos
into
mov
pop
jo
aad
cld
push
dec
cmp
xor
xchg
sbb
test
and
pushf
outsb
imulb
and
enter
in
lods
push
cwtl
data16
fidivrl
dec
rolb
mov
mov
mov
cli
iret
ljmp
xor
mov
sbb
cmp
fwait
add
into
fwait
sbb
mov
out
into
jo
dec
mov
jmp
cmp
ret
sbb
les
loop
cli
cmpsb
ss
decl
pop
shll
xor
int3
das
cmp
mov
jecxz
adc
mov
sbb
mov
repnz
and
sub
push
ret
insb
mov
pop
or
mov
inc
stos
and
in
adc
add
dec
sbb
jp
jb
dec
lea
lcall
cmc
cmp
outsb
adcl
add
cwtl
mov
xlat
dec
test
lods
jle
and
cmpsb
cmp
addl
shrl
xor
mov
sahf
mov
and
test
xchg
adc
cmpsl
aas
movsl
loopne
clc
or
lds
sub
xor
mov
scas
into
jle
mov
mov
stc
pop
pop
jns
cmp
dec
mov
repnz
rolb
out
mov
ss
out
jb
push
cmp
xchg
loop
outsb
addb
ficomps
js
or
dec
adc
or
push
mov
fbstp
movsl
sbb
push
jno
cmp
insl
dec
cmp
push
loope
pop
cmp
enter
fwait
cmp
cmpsl
adc
out
leave
stc
into
push
xor
or
adc
add
and
mov
sbb
add
jnp
push
add
lret
jmp
inc
cmpsl
xchg
xor
mov
popl
push
or
fcmovbe
dec
aad
icebp
addr16
rcrl
xchg
pusha
repnz
movl
cmp
and
and
pop
loope
pop
loop
dec
and
int3
cmp
fucom
sub
mov
test
fdivp
pop
inc
sub
dec
adc
jp
xor
fwait
shrl
pop
xorl
cmp
cmp
dec
mov
jmp
subb
faddp
sub
in
jp
sub
lea
xor
fsubs
pop
or
push
out
movsl
fcom
imul
movl
push
into
sahf
dec
dec
pop
imul
in
mov
mov
or
loop
xchg
push
xorb
loopne
dec
push
out
add
test
cmc
nop
cmpsb
clc
push
mov
mov
push
sbb
push
mov
add
cmp
loopne
cmpsb
out
movsl
lds
sbbl
rcl
outsb
cmpsl
inc
cs
jns
mov
jg
mov
mov
inc
push
repnz
iret
pop
inc
inc
jl
adcb
popa
sub
idivl
out
inc
or
sub
rcrb
push
cwtl
jae
xchg
data16
stc
pop
xlat
in
rcll
sbb
and
fld1
mov
into
dec
popa
lods
cmpsl
cmpl
out
sbb
movl
out
mov
jmp
mov
mov
sbb
call
adc
mov
push
jmp
mov
push
mov
sbb
lods
addr16
xchg
sub
out
mov
or
pop
pushf
sub
jl
add
dec
pusha
xor
mov
mov
sti
jb
mov
sbbl
repnz
jecxz
lret
jns
adc
mov
int3
pushf
sbb
jg
mov
rol
out
popa
leave
aaa
pop
add
ret
stos
ljmp
xor
mov
jnp
pop
mov
lods
idivb
fists
push
fidivrl
sub
imul
jne
push
call
fidivrs
sbb
sbb
ja
ret
idivl
push
inc
sbb
orb
mov
divb
add
sar
out
xchg
cmpsb
fbstp
arpl
cmp
rolb
and
add
fildl
ficoml
pop
divl
stos
ret
fcomps
or
jge
fxch
loop
fidivl
jmp
arpl
add
sarl
dec
push
mov
xor
inc
fcoms
lret
xchg
scas
daa
pop
stc
fisttps
jno
sub
frstor
and
movsb
aas
sbb
mov
nop
mov
fcom
add
push
rcr
ficomps
cld
jp
data16
or
ljmp
out
mov
push
sti
shrl
mov
adc
inc
pop
inc
adc
aad
cwtl
aad
iret
xchg
adc
inc
add
adc
jbe
sbb
mov
push
sub
pusha
push
lds
mov
test
adc
sub
push
movsl
rorl
xchg
and
jnp
mov
pushf
je
movsb
cmp
push
lcall
or
mov
xchg
in
daa
lcall
mulb
inc
push
sbb
and
adc
and
fadd
sub
sbb
sub
je,pn
in
mov
push
insb
push
notl
jmp
data16
cmpsb
mov
mov
bound
xor
push
das
cmp
mov
lods
cwtl
daa
cmp
fs
xchg
add
fwait
in
jmp
out
mov
out
mov
add
testl
icebp
and
cmp
fimuls
dec
daa
cmpsb
in
add
mov
pop
and
mov
fimuls
arpl
xchg
aam
dec
sub
test
call
lock
in
jb
movsb
or
jae
sbb
cmpl
imul
sub
ljmp
imul
dec
pop
popa
in
lea
mov
in
hlt
dec
push
mov
fisubrs
mov
pop
and
or
repnz
sbbl
inc
aaa
inc
cmp
sub
dec
xor
dec
out
xchg
and
xchg
or
dec
push
out
sbb
mov
mov
add
mov
movsl
pop
cmp
ret
jne
jne
cmp
clc
lcall
add
flds
sbb
bound
ret
pushf
xchg
lret
mov
pusha
lods
loope
es
lsl
sub
xchg
test
repnz
test
cmpsl
in
scas
in
push
cmp
test
add
pop
test
cwtl
call
xchg
adc
addr16
daa
pop
out
add
aad
lods
and
pop
pop
sub
divb
jbe
inc
test
or
cltd
sub
and
xchg
lods
mov
mov
pop
push
pop
fs
imul
jae
sub
pusha
cmpsl
stos
or
mov
and
xor
lea
jae
push
fs
sahf
push
ret
lahf
sub
loope
xchg
push
pop
push
lcall
loop
stos
push
xor
sub
jb
sbb
adc
out
dec
push
notb
enter
xor
xor
aas
jmp
and
popf
iret
mov
and
xor
cmp
fstl
mov
aas
mov
stc
or
mov
adc
mov
ja
sti
fsubs
aam
jmp
fs
movsb
xchg
iret
out
andl
insl
testl
dec
pusha
xchg
sub
push
lret
cmp
out
mov
fists
aaa
inc
xchg
inc
insb
mov
je
sub
jle
xor
dec
xor
jecxz
or
and
cli
lock
in
xor
inc
inc
add
and
sti
cwtl
cltd
mov
xchg
lods
clc
xchg
sbb
mov
pop
pop
inc
cld
lds
out
push
ljmp
std
arpl
popl
addr16
pop
inc
movsb
hlt
push
imul
pop
mov
sub
rclb
dec
sub
mov
test
pusha
adc
mov
sub
adc
mov
dec
sbb
jnp
jmpw
mov
xor
and
mov
xor
mov
je
aas
push
xchg
mov
add
and
loop
jle
dec
mov
push
mov
sub
pop
out
popa
xor
dec
and
cmp
inc
stos
mov
dec
imul
adc
pop
or
push
mov
cs
jnp
xchg
xchg
adc
cmc
daa
and
mov
xchg
xchg
jne
or
adc
in
mov
xor
ja
pop
fwait
popf
jno
ljmp
int3
jno
out
test
in
cmpsl
sbb
mov
scas
cmp
sub
dec
jecxz
xor
fwait
lods
jp
or
sub
fisubrs
js
int
repnz
mov
das
idivb
mov
daa
call
dec
shll
es
mov
dec
stc
pusha
adc
or
sub
in
or
or
inc
jg
jge
dec
xchg
imul
aas
sbbb
ds
addb
pop
inc
mov
inc
cmpsb
in
subb
push
xchg
imul
pop
loope
push
pop
xlat
push
cmp
mov
pop
xor
and
in
aaa
loop
aad
add
adc
roll
das
lods
fistl
xor
scas
add
sbb
divl
subl
inc
sub
in
inc
and
cltd
outsl
icebp
sbb
sbb
mov
jge
mov
pop
xchg
test
sbbb
adcb
das
or
push
sub
cmc
ljmp
mov
test
or
inc
cmp
cwtl
dec
icebp
in
int
das
int
mov
adc
enter
fwait
jbe
jl
ficoml
add
push
sub
dec
pop
mov
or
lahf
add
cmp
cmc
jge
pop
mov
xchg
iret
pop
cmp
ret
pusha
movsb
jns
cli
xchg
lret
aas
mov
lods
pop
xchg
mov
mov
inc
iret
ljmp
fwait
cld
call
divl
lret
ret
nop
fcmovb
lcall
jb
mov
xchg
xchg
add
cs
cmp
mov
js
and
hlt
inc
mov
jecxz
arpl
out
jp
fstpt
arpl
xchg
pop
mov
incl
or
or
xchg
loope
jge
imul
sub
sub
repnz
xor
cwtl
sub
sub
popf
mov
cmp
mov
and
dec
aad
sbb
mov
bound
jo
dec
mov
cwtl
cmp
scas
iret
mov
xor
add
or
ss
cltd
and
ficompl
sbb
push
movl
imul
mov
adc
repnz
in
lock
push
lods
call
inc
adc
jno
sahf
lods
gs
js
jl
outsl
mov
xchg
pop
cmpl
setbe
popf
subb
ljmp
mov
cmp
add
stc
xchg
cmpsb
fnstcw
leave
and
cmpsb
mov
jl
mov
mov
mov
and
push
ss
call
cmp
sub
jno
arpl
lock
cmp
push
call
xchg
inc
sbb
or
push
int
pushf
push
push
test
stc
xchg
nop
and
and
inc
cmp
imul
es
mov
ds
xlat
add
jg
inc
icebp
lods
and
test
into
cmpl
xchg
in
gs
jmp
inc
popf
daa
loop
push
das
cli
jecxz
ss
or
xchg
ret
clc
adc
pop
cmp
mov
pop
add
xlat
xchg
xlat
std
or
dec
cmp
stc
rorb
push
ret
bound
pop
loop
xlat
mov
mov
jp
out
and
push
imul
in
icebp
jb
sbb
or
jmp
pop
repz
sub
imul
out
pop
aam
lret
sbb
or
orl
movsb
and
and
movsl
jnp
mov
mov
cs
and
aam
mov
pop
pop
and
cs
clc
push
cmp
jnp
jbe
push
ljmp
mov
cmp
je
dec
sahf
mov
pop
imul
stc
imul
jl
fildll
push
mov
inc
es
cmc
push
sub
ja
adc
orb
repnz
in
jmp
jecxz
adc
dec
test
fwait
shrb
cmp
pop
insb
imull
or
dec
loopne
pop
outsb
shll
mov
fstpt
rcrl
aam
shll
movsb
push
dec
inc
lods
dec
push
repz
pop
cmpsb
icebp
ret
into
movsl
add
lahf
repz
add
xchg
push
mov
xor
sbbl
push
xchg
js
test
jae
mov
inc
xchg
ret
test
adc
pop
inc
jle
shll
jecxz
data16
loop
mov
fnstcw
push
pop
inc
lret
lea
adc
adc
int
lret
xchg
jbe
in
fdivr
popf
or
mov
dec
mov
sbb
mov
sub
push
jne
push
dec
sub
xchg
gs
ficoms
lret
lret
in
pop
jb
mov
sbb
jb
cmp
mov
cs
jb
stos
xor
imul
lds
jns
ds
inc
sub
and
sbb
push
in
cld
ss
outsb
inc
xlat
daa
adc
dec
lahf
sub
jnp
and
movsl
xchg
inc
fisttps
xor
push
add
or
sub
or
xor
cmpsl
cmpsl
sub
xlat
jge
ljmp
insb
pushf
stos
mov
lahf
dec
mov
repz
adcl
popf
adc
fwait
popf
pop
lds
jnp
jno
cmpsl
xchg
jnp
cmp
sub
add
shlb
fidivs
pusha
pop
insl
sti
or
pop
sbb
and
sti
test
addl
and
nop
sub
mov
into
lahf
dec
sahf
sub
fsubs
jmp
jnp
pop
loop
dec
push
jge
jae
xchg
sbb
scas
rorl
test
inc
sub
inc
fcoml
mov
fldl
jle
clc
add
rcl
pop
push
es
cwtl
dec
stos
mov
gs
outsb
fsubl
mov
or
int
ljmp
out
imul
push
loopne
rorl
mov
pop
inc
mov
pop
pop
jle
mov
je
mov
jns
out
pop
fwait
add
fmuls
in
or
xlat
sarl
ss
adc
or
fsubrl
dec
into
sbb
mov
dec
shlb
fwait
add
mov
insl
mov
js
xchg
sbb
insl
aaa
sub
enter
stos
push
mov
mov
mov
loop
sub
out
inc
mov
sbb
imul
nop
xor
cmpsl
sbb
xchg
incb
dec
je
sbb
roll
fnstsw
xchg
cmp
bound
push
mov
das
fsts
ljmp
call
fwait
shrb
and
add
xchg
lea
or
in
out
dec
xlat
adc
loop
iret
add
lods
push
imul
insl
pop
lods
test
jg
sbbl
push
jne
sbb
sub
popa
pop
cmc
loope
jbe
jns
mov
mov
sbb
inc
adc
mov
test
xchg
xchg
cmp
jge
dec
fsubr
xor
movsb
sbb
js
or
sahf
mov
xor
cld
mov
in
mov
mov
shrl
popa
adc
lock
cmp
imul
out
mov
sbb
lahf
out
aas
js
mov
dec
mov
iret
inc
jmp
mov
and
movsl
pop
dec
shl
xlat
jbe
jb
jl
mov
daa
into
imul
add
neg
pop
mov
sub
adc
adc
pop
popf
insl
aas
data16
push
push
pop
jns
xorb
add
sbb
mov
cmp
dec
scas
out
push
cs
xchg
adc
inc
sarl
into
test
rclb
jl
loopne
jno
sub
repz
xor
lret
add
scas
or
jae
dec
mov
iret
rol
cli
jge
movsl
hlt
fiadds
out
or
shlb
push
ds
push
pop
add
outsb
cwtl
adc
sub
cmp
imull
call
pop
jae
daa
adc
cmc
fisubl
cmp
xor
out
stos
mov
jg
adc
dec
lcall
fsubp
sub
push
mov
and
mov
push
push
jno
sub
flds
sti
pusha
sub
call
hlt
iret
push
xor
jb
xor
jbe
mov
lods
jmp
ds
fdivrs
sub
push
jb
into
lret
xchg
daa
cmp
aad
sub
sub
or
or
jp
xchg
xchg
dec
int
test
loop
lcall
test
stos
mov
into
fwait
mov
inc
and
jb
inc
sub
fisubrl
mov
insb
ja
push
sbb
sub
testb
cmc
xor
dec
pusha
movsb
pop
test
jmp
inc
testl
ret
push
push
mov
hlt
xor
in
mov
mov
fsubrl
imul
addl
das
into
or
push
sub
das
fbld
pop
sub
sbb
std
roll
add
gs
roll
cmp
pop
out
ss
jmp
lods
mov
movsl
jbe
out
add
outsl
mov
sub
lret
add
sbb
cs
inc
and
jge
aam
sub
sbb
inc
sbb
adc
mov
shl
sub
cld
mov
dec
shr
ljmp
lea
outsl
jbe
hlt
lahf
or
movsl
jp
lahf
js
mov
dec
pop
popf
push
sub
insb
mov
nop
mov
int3
mov
mov
jns
adc
repz
lods
mov
jmp
mov
cmp
xlat
dec
dec
and
push
adc
out
sti
or
sub
js
push
xchg
jnp
xor
sbb
cmp
sbb
arpl
mov
dec
mov
xor
ljmp
mov
cmp
ret
nop
dec
add
je
popf
outsl
cmpb
inc
mov
or
inc
pop
add
sbb
leave
push
cmp
bts
dec
into
xchg
inc
fcoml
add
fistps
out
rclb
xchg
lds
adc
xchg
pop
lods
push
adc
dec
push
lret
subl
rcll
or
jb
fwait
jo
jne
nop
push
fwait
sar
ret
or
shll
int
xchg
sbb
cmpsl
and
fsts
xor
sahf
subb
pop
jmp
cmp
mov
repz
mov
adc
push
cmp
fidivrs
repnz
imul
push
bound
sub
movsb
mov
int3
or
gs
adc
mov
dec
test
ds
sbb
mov
mov
push
inc
push
xor
btr
in
mov
inc
inc
mov
sub
mov
sub
lds
cmp
jl
xor
pop
inc
cld
mov
jle
push
gs
fadds
sub
jmp
xchg
cmc
mov
shr
scas
dec
sahf
xchg
adc
bnd
sbbl
sub
int3
lea
mov
mov
arpl
push
pop
sbb
je
jp
mov
xor
mov
jmp
or
in
xor
jl
lds
cmp
or
mov
and
imulb
cwtl
lods
xchg
push
imul
jp
jmp
mov
add
jl
cmpsb
sahf
mov
xor
sbb
or
and
fwait
aad
pop
test
decb
ljmp
jg
sbb
fisubs
sbb
cmp
push
add
pop
mov
push
push
pop
pop
push
adcb
inc
sarl
adc
push
jecxz
sub
in
jecxz
cmc
push
pushf
orl
pop
iret
fmull
imul
cmp
jg
mov
xchg
xor
fldpi
dec
cld
lret
cmpsl
xor
fwait
orl
dec
mov
in
sarb
aaa
add
sbb
bound
mov
out
xor
lods
dec
mov
lods
stc
nop
loop
add
xchg
xor
sbb
push
cmp
mov
aas
mov
ds
mov
popa
add
repz
test
movsl
ljmp
inc
mov
repnz
in
pop
fsubrl
mov
cmc
out
sbb
js
les
nop
or
xchg
subl
cmp
xor
mov
int
lods
mov
add
and
movsl
pop
cmp
mov
push
and
xchg
imul
xor
test
cmpsb
pop
dec
xchg
sbb
lds
mov
cs
add
popf
mov
sub
jae
sarb
aas
pop
and
mov
push
pop
add
mov
lret
movsl
jno
icebp
jbe
dec
xchg
outsb
inc
mov
aad
xor
xchg
popf
js
jb
jecxz
jo
sbb
pop
rcl
push
or
dec
sub
adc
into
xchg
add
sub
mov
or
pushl
jae
roll
dec
mov
or
jecxz
mov
testl
adc
enter
in
aaa
data16
loopne
jl
aaa
ror
jae
arpl
lods
lods
jmp
mov
out
mov
lods
jle
movsl
fbld
sahf
xor
lock
push
sbb
gs
cmp
dec
bswap
or
mov
fiaddl
xor
pop
jae
hlt
lahf
movsl
dec
mov
lret
adc
mov
arpl
jg
push
scas
xchg
fcoml
loopne
shlb
mov
xchg
shr
add
clc
clc
imul
pop
popf
mov
dec
lahf
orb
loop
setnp
ss
and
push
bound
fimuls
shll
add
mov
pop
insl
bound
inc
repz
pop
mov
mov
jb
push
mov
stos
jecxz
jmp
and
mov
mov
cmp
lods
pop
jb
pop
and
pop
in
pusha
out
std
adc
divb
flds
repz
add
shr
sub
jns
pop
add
push
shll
int3
call
rorb
mov
and
and
roll
xchg
push
in
mov
push
push
fisttpll
sbb
in
lods
jge
das
imul
sub
jnp
outsl
fidivrs
dec
mov
popf
dec
sahf
dec
push
pushl
insb
xchg
popa
or
push
xchg
int3
sub
ret
rcrl
mov
loopne
pop
aad
push
push
push
sub
es
mov
adc
inc
sbb
cmp
dec
pop
pop
pop
xor
inc
mov
insl
movsl
sbb
inc
lods
push
js
rcrl
cs
cmp
and
stos
out
cmpsb
mov
ret
or
add
sbb
mov
sub
mov
xchg
movsb
sar
push
xor
mov
and
mov
addr16
and
jbe
mov
fxch
sub
test
dec
jmp
add
jnp
enter
fisubl
xchg
in
xchg
test
jns
out
pop
movsb
mov
fsubrs
loopne
sbb
jnp
push
mov
out
std
es
dec
call
xlat
cmp
push
pop
mov
pushf
mov
loopne
insb
fildl
sti
insl
fiadds
scas
int3
inc
loope
xchg
mov
pop
adc
xchg
dec
mov
arpl
push
jae
std
inc
ret
int3
cmpsb
js
push
cmp
ds
test
jno
sbb
sti
dec
aas
fwait
inc
pop
popf
push
lods
dec
sbbb
pop
sub
sahf
xlat
aaa
rcrb
adc
lret
and
jne
pop
xchg
mov
cmpsl
mov
test
in
aad
pushl
movsl
mov
mov
in
pop
mov
inc
dec
in
mov
mov
dec
inc
xor
jne
aaa
test
mov
pop
fdivrp
or
xchg
int
and
inc
lcall
push
push
mov
fwait
mov
imull
and
out
pusha
push
sarb
sub
std
push
add
pushl
or
add
aas
popa
add
xor
les
movsl
rcr
push
xorl
in
push
jae
or
je
mov
loope
xchg
sub
mov
int3
fsubr
push
and
loope
xchg
jl
test
out
pusha
testl
mul
sub
mov
cmp
push
mov
adc
lods
fcom
pop
dec
and
scas
pop
push
fcmovnu
jae
test
scas
test
xor
lahf
pusha
insl
sub
mov
addr16
out
iret
ficomps
or
mov
jne
mov
aam
xor
fistps
cli
adc
loope
push
hlt
js
das
push
push
adc
add
or
fisttpl
cmp
xor
xchg
shlb
gs
popa
les
int
mov
lret
insb
add
adc
ja
in
mov
cmp
aam
test
repnz
push
popf
and
mov
mov
jae
ds
add
frstor
jmp
push
les
fcompl
xor
lcall
adc
mov
pop
je
movl
or
xchg
fildll
imul
test
jnp
shlb
fwait
adc
mov
insb
pop
cs
or
ret
jp
mov
enter
push
or
dec
dec
std
ret
jp
aaa
ss
mov
push
push
xchg
jle
fwait
inc
lea
inc
push
add
fsubrl
push
aad
ret
inc
je
pop
cmp
inc
pop
mov
xor
nop
sub
cmp
jge
lcall
in
mov
rcrb
sbb
fdivr
jo
mov
cmpsb
xchg
mov
lock
aas
adc
xor
mov
shrb
lahf
adc
jae
xlat
jl
stos
adc
push
inc
icebp
xor
das
xchg
jge
fldcw
neg
or
out
or
cmpsl
rolb
xor
xchg
xlat
mov
dec
xor
and
lea
jg
addr16
sub
mov
fdivs
jle
and
mov
jnp
cmc
dec
out
arpl
sbb
subl
cmp
add
je
mov
sub
addr16
in
in
outsb
neg
jns
sti
lahf
pop
mov
pushf
pop
mov
cmpsl
inc
lea
mov
add
pushf
push
push
add
add
mov
mov
mov
and
out
xlat
xchg
gs
rol
push
rorb
adc
sbb
sarb
hlt
nop
fcos
xchg
mov
or
addr16
fisubs
push
xchg
dec
adc
lds
rcll
xor
jo
dec
xchg
in
xchg
addb
fs
js
rcrb
ret
call
arpl
in
mov
pop
stc
mov
fiaddl
out
cli
adc
call
stos
in
loope
faddl
dec
lods
stos
or
cli
jo
jo
nop
jo
stc
inc
ss
or
lahf
pusha
jmp
jb
and
fnstcw
movsl
stc
add
xchg
cmp
in
add
negb
pop
push
stos
jge
stc
push
and
cmp
adc
pushf
push
ljmp
leave
pop
repnz
subl
loop
pop
ljmp
mov
lea
in
mov
pop
ljmp
and
push
inc
sub
jbe
mov
pop
shr
dec
es
adcb
push
test
fcomp
xchg
loope
xchg
dec
js
inc
dec
sub
jb
adc
int
push
scas
std
aaa
jnp
faddp
mov
int
stc
inc
insb
mov
fists
pop
and
mov
inc
std
mov
adc
jns
xorl
gs
lret
mov
mov
subb
jg
pop
xchg
inc
sub
cmpsl
sbb
mov
sbb
lods
mov
testb
pushf
xchg
fsts
mov
mov
mulb
jno
jl
pop
icebp
add
ret
cmp
in
int
push
push
jecxz
pop
xor
mov
lcall
mov
insl
push
fdivrl
jle
adc
mov
dec
in
adc
xor
jecxz
outsb
pop
ret
cwtl
pop
sbb
add
lret
rcll
sahf
pop
sbb
mov
add
adc
test
clc
leave
xchg
ret
or
dec
jb
ljmp
fdivrl
push
mov
fistps
loope
adc
ljmp
sbbl
and
jp
aas
xchg
idivl
popf
clc
popf
sub
shll
out
push
and
fdivl
and
rcrb
dec
icebp
pop
lea
xchg
mov
push
pop
ja
icebp
pop
push
jecxz
into
xchg
inc
mov
xchg
ret
shll
fmuls
divl
push
pop
jp
pop
das
sub
sbb
scas
jno
scas
mov
mov
xor
popa
adc
dec
adc
mov
addb
cmp
cmpsl
jmp
stos
stos
imul
xchg
jg
add
outsb
pop
movsb
xchg
daa
rcll
pop
xchg
cs
shl
jg
add
jmp
cld
inc
dec
divb
mov
aas
mov
and
mov
xor
pop
int
mov
lret
xchg
jecxz
imul
sub
mov
push
xor
js
ja
cs
out
cmpsb
dec
mov
aaa
pushf
push
and
jg
sti
jb
stos
xor
or
ja
arpl
cwtl
jmp
and
pop
popf
and
in
cltd
and
mov
add
add
pop
adc
mov
pop
insl
dec
xchg
repz
lahf
mov
mov
shrb
or
pop
mov
das
dec
in
out
fdivr
sub
fxam
sbb
imul
aaa
je
loop
mov
or
nop
inc
inc
push
mov
mov
rcrb
int
dec
xorl
cmp
test
ret
pop
ret
stos
stos
cwtl
xor
in
dec
adc
adc
sahf
dec
cwtl
sahf
inc
pop
aas
sarl
filds
pop
in
sub
cltd
mov
loop
dec
aaa
idivl
xchg
lahf
inc
xchg
xlat
dec
xchg
sahf
pavgb
pop
mov
mov
lods
loopne
mov
adc
pushl
popa
push
inc
lods
out
test
mov
or
and
js
cmc
cltd
cmpsb
aas
cmp
sub
cli
jle
mov
out
lods
sarb
add
fucom
jne
subb
lods
jle
xor
jecxz
shrl
std
aaa
clc
mov
pop
xor
xor
and
neg
enter
int3
adc
mov
ja
jbe
push
das
rorl
sbb
and
mov
outsl
mov
inc
xor
fiadds
loop
lock
cltd
sub
int3
add
inc
push
push
cmp
xchg
jp
xor
in
popa
fdiv
lds
mov
inc
lds
js
aas
jge
stc
dec
imul
pop
lahf
sbb
into
cld
mov
pusha
and
icebp
scas
cmp
pop
je
imul
xchg
dec
jmp
lcall
or
aad
xchg
in
roll
aas
adc
gs
int3
and
mov
cwtl
hlt
xlat
xor
outsb
cs
jno
sbb
popf
sti
inc
pop
cmpsb
insl
mov
cs
or
lret
mov
xor
in
jns
jmp
adc
mov
clc
adcl
mov
lret
add
cmp
add
popf
stos
xor
inc
pop
and
fs
mov
jb
outsb
mov
fidivrs
pop
aad
add
insb
adc
or
xchg
mov
sbb
inc
loop
sbb
and
jae
sbb
ljmp
mov
dec
pop
mov
enter
jecxz
push
add
xchg
bound
aas
jb
inc
sbb
push
out
std
cwtl
pop
mov
leave
insb
movaps
xor
rcrl
inc
aad
push
pop
adc
lahf
push
or
faddl
enter
jno
popw
lcall
dec
mov
stos
movb
ror
dec
dec
jns
mov
xor
sub
cmp
je
mov
movsb
ss
jb
movsl
in
dec
cmpsb
pop
mov
inc
pop
stos
in
pop
and
mov
xor
lods
mov
dec
lods
adc
inc
fcoms
sub
xor
pop
adcb
stc
xlat
aaa
cmp
outsl
scas
adc
pop
jbe
hlt
push
mov
mov
inc
inc
mov
mov
out
stc
scas
xchg
je
std
ror
pop
repz
jne
repz
int3
adc
stos
cmp
cmp
pop
lret
mov
and
sbb
jmp
lret
sahf
je
out
adc
in
outsb
sub
inc
push
push
gs
ss
out
imulb
xchg
jo
sub
lods
pop
add
xchg
ja
xchg
add
adc
cmp
or
roll
inc
out
cltd
jne
push
push
cs
ss
popf
mov
cmpsb
push
mov
adcb
mov
dec
xor
in
loop
pop
lds
dec
push
adc
fsubrl
mov
clc
mov
push
pushf
xor
jne
pop
dec
int3
out
divl
and
inc
sbb
mov
jg
ss
cmp
loop
mov
sbb
mov
pop
popa
hlt
xchg
pushf
in
jnp
sbb
ret
mov
in
cli
fwait
nop
addb
or
lcall
hlt
test
mov
std
sbb
inc
hlt
mov
adc
sub
mov
mov
add
xchg
xor
lea
jnp
xor
frstor
adc
in
decb
jns
sub
sbb
insl
lahf
fidivl
mov
xchg
mov
stc
adc
dec
jg
and
dec
xor
xor
adc
cmp
xchg
je
push
mov
sahf
adc
jp
cmpsb
test
jno
lock
adc
fs
in
das
xchg
xchg
sbb
cld
in
jp
je
mov
push
add
call
and
movsl
cmp
pop
dec
push
sbb
les
imul
clc
inc
jne
pop
add
mov
xlat
adc
loope
dec
pop
dec
mov
rorb
enter
lds
and
jno
lock
test
sbb
fisubrl
push
mov
notl
xchg
push
mov
addb
cmp
jae
ret
xchg
leave
arpl
insb
xor
jp
xchg
je
cmpb
test
adc
or
hlt
icebp
leave
data16
and
in
lods
pop
inc
in
nop
add
pop
ds
call
sub
cmpsl
nop
test
movsb
push
ffreep
xor
jecxz
inc
inc
xor
lret
bound
mov
popf
inc
mov
fidivrl
adc
xchg
and
sub
push
mov
repz
push
stos
cwtl
mov
pop
cmpsl
arpl
aaa
dec
cmpsb
movsl
adc
je
pop
xlat
int
xchg
jecxz
ret
out
lock
mov
mov
fwait
push
cmp
xchg
mov
dec
addr16
jp
xor
and
int3
sub
pop
mov
daa
xchg
notl
dec
and
mov
mov
loope
fs
mov
stos
sub
pop
adc
clc
fbld
cmp
inc
imul
cmp
inc
test
subb
call
je
stos
or
push
sbb
cmp
mov
jge
and
dec
cwtl
inc
movsl
loopne
sub
add
jns
imul
or
xchg
jmp
fdivrl
inc
cli
fdivrl
sub
jno
push
loop
rolb
add
aas
scas
inc
sub
dec
shlb
jbe
iret
inc
daa
and
sbb
add
pushf
mov
pusha
out
shr
sub
sbb
test
cmp
lds
nop
lds
dec
pop
mov
xchg
jl
stc
or
mov
mov
cmp
aam
test
test
xlat
leave
pop
add
inc
mov
xchg
and
jmp
inc
mov
push
sbb
scas
cmp
push
out
jo
insl
pop
aam
icebp
mov
pop
shlb
stos
loope,pt
mov
pop
xlat
outsl
and
xor
fs
in
jns
jl
loope
in
enter
insl
std
fpatan
or
fs
mov
mov
xchg
xchg
add
pusha
inc
mov
stos
jle
js
adc
sbb
add
shlb
inc
cmp
mov
add
push
jp
jbe
ret
lock
and
imul
test
out
fs
adc
int
int
mov
inc
push
mov
xchg
push
lock
pop
adc
int3
inc
enter
mov
and
shrb
jae
mov
jnp
mov
or
cmp
in
dec
roll
ret
lret
shrl
push
and
ss
ret
rorb
mov
roll
or
xchg
mov
jo
push
lods
push
push
fnstenv
fsts
popa
pop
lret
push
sub
loopne
push
pusha
sub
imul
out
je
lret
fs
das
lret
sub
add
xor
roll
xor
in
jns
xlat
mov
inc
jmp
push
lds
pop
xor
pop
aaa
pop
rorl
fldcw
cli
stc
incl
mov
in
fisubrl
and
jae
shlb
pop
mov
test
sti
mov
xlat
mov
lahf
jo
or
scas
out
enter
dec
adc
mov
mov
lods
xor
inc
je
out
addb
repnz
ja
mov
icebp
loopne
jno
dec
aaa
ret
jb
push
repnz
push
mov
enter
stos
scas
pushf
mov
mov
inc
mov
out
lret
push
cli
lods
aaa
es
insb
pop
adc
add
adcb
lret
out
neg
jne
pop
add
ret
mov
and
sbb
stos
ret
ljmp
xchg
dec
push
popf
or
lods
test
pop
push
iret
jne
shrb
pop
jmp
es
clc
cwtl
sub
orb
cmp
pop
or
xchg
movsl
push
test
dec
das
mov
cmpsb
mov
out
rorb
stc
pop
pop
adc
mov
adc
mov
aaa
and
sbb
jmp
adc
test
les
pop
enter
lret
test
mov
and
mov
jnp
xor
adc
mov
jbe
stos
sub
scas
mov
orb
mov
in
pop
fcomi
in
pop
dec
es
test
insb
in
mov
sahf
adc
ja
sbb
sub
sub
lret
mov
cmp
roll
pusha
mov
inc
push
popa
cld
in
push
scas
dec
inc
insl
fwait
push
je
scas
imul
std
xchg
xor
into
andb
ljmp
dec
fadds
xchg
daa
sahf
adc
xor
xor
sahf
add
or
lahf
mov
rorl
add
aad
rcrb
ret
jae
pop
lret
push
push
mov
arpl
push
xchg
repz
bound
xchg
and
mov
vmovss
lret
add
lods
mov
push
ficoms
sbb
movsl
cmc
cmpsb
cmp
out
jmp
xchg
mov
jl
or
outsb
pop
les
mov
inc
and
outsl
shll
loopne
out
rclb
mov
or
fwait
mov
leave
hlt
fstpt
insb
mov
mov
div
cltd
mov
in
jb
out
pop
jo
arpl
sub
in
bound
cmp
jne
in
fwait
testb
push
cmc
imul
push
sub
sbb
pop
sbb
pop
hlt
inc
dec
leave
pop
int3
cwtl
jae
imul
mov
jbe
arpl
loopne
ss
cwtl
js
xor
cwtl
dec
inc
cmp
inc
or
inc
pop
jo
sbb
jbe
mov
dec
jle
iret
inc
ljmp
loope
scas
push
mov
pop
mov
iret
js
in
xchg
shl
mov
dec
loop
xchg
rcl
mov
dec
int3
sbb
pop
jmp
movsb
xchg
mov
call
sub
xor
fcmovnbe
mov
xchg
sub
mov
fsubl
xchg
and
dec
push
popf
push
mov
jns
inc
pusha
fsts
mov
cwtl
add
repz
push
leave
pop
and
stc
hlt
inc
inc
mov
pushf
lea
in
fildl
out
loop
loope
jl,pn
add
loope
bound
imul
maskmovq
idivl
push
sbb
jo
push
cmp
xchg
loop
xchg
pop
out
xor
lret
in
cmc
dec
fists
adc
mov
std
push
loop
lock
movsb
jno
jnp
jg
or
js
mov
xchg
inc
jbe
mov
std
ja
out
mov
mov
pop
idivl
repnz
cmp
mov
add
adc
arpl
cmp
in
fcmovnu
cmp
cltd
je
test
mov
add
icebp
mov
mov
fmull
icebp
jb
inc
cs
test
sub
stos
roll
push
adc
xor
aas
jp
fcoms
jg
mov
std
jmp
push
mov
sbb
and
scas
mov
inc
xchg
fs
cmp
pop
addb
mov
push
andl
pop
mov
in
or
pop
test
cmp
xor
push
sub
jb
out
repnz
das
inc
sbb
add
and
sbb
lds
sti
lcall
dec
mov
adc
adc
roll
xchg
jne
and
mov
lods
sub
repnz
push
aad
inc
mov
mov
punpckhbw
inc
dec
test
imul
out
xchg
call
testl
movsl
ljmp
mov
jp
dec
cwtl
lahf
dec
xchg
mov
loope
jmp
xor
xchg
nop
push
xchg
addb
add
sbb
test
test
push
push
xchg
cmp
push
mov
lahf
xor
cli
push
jmp
mov
adc
sarb
out
sbb
pop
or
popf
cltd
mov
out
jmp
sbb
test
cmp
lret
iret
cmp
pop
dec
das
sub
in
push
out
rcrb
dec
inc
or
and
rcrl
out
mov
jne
je
push
les
scas
xchg
arpl
xchg
dec
fadds
fbstp
imul
fwait
scas
jae
and
sbb
adc
add
adc
sub
jp
loope
js
or
ds
lods
mov
inc
lods
fcoml
hlt
dec
xor
dec
jp
dec
in
ss
les
sbb
mov
repnz
mov
jecxz
fcom
adc
popf
or
insl
jbe
mov
push
or
sbb
test
and
insl
imul
hlt
pushf
dec
mov
jl
mov
cli
jmp
sub
push
movsb
xor
xlat
out
mov
arpl
lret
rcrb
mov
jl
out
mov
push
and
pop
jmp
and
push
push
cld
call
je
jmp
sar
outsb
call
jl
mov
push
dec
add
outsb
fwait
jge
lock
mov
xor
arpl
ds
jo
int3
and
xchg
add
cld
push
add
testl
push
arpl
lret
push
inc
mov
lds
clc
repz
push
test
xchg
test
lcall
lcall
mov
xor
adc
xor
gs
pop
movb
adc
mov
test
and
imul
not
lahf
iret
mov
lcall
or
pop
dec
cmc
cmp
stc
pusha
push
sahf
or
shlb
popa
mov
stos
cmpb
mov
add
jne
sbb
pop
push
push
pushf
inc
addb
or
cwtl
or
xchg
sahf
ljmp
pop
xlat
stc
addr16
in
stos
dec
sbb
insb
sbb
cs
cs
inc
ret
int3
movsb
mov
fistl
sbb
jnp
mov
pushf
xor
sbb
add
ficoml
hlt
xchg
aas
or
fstpl
pop
pop
sahf
cmp
scas
sub
clc
out
inc
jg
lcall
and
test
roll
inc
rclb
xchg
jle
out
jp
push
les
icebp
fldenv
or
icebp
xor
subl
xor
xchg
mov
shl
cmp
divb
roll
sbb
mov
lahf
imul
mov
or
fisttpl
sar
mov
cmp
inc
cmpsl
adc
cmpsb
or
lea
jmp
pop
mov
dec
jge
pop
arpl
lahf
jl
xor
andb
fmuls
pop
add
xorb
and
popf
cs
lcall
xor
sub
pop
pushl
and
push
es
loop
inc
jbe
push
xchg
xchg
mov
cmpsl
sub
scas
mov
stos
enter
lret
in
pop
out
add
mov
and
fwait
inc
dec
push
xchg
mov
xchg
sub
add
loopne
jp
inc
sub
and
sub
sbb
out
or
xor
inc
fnstcw
and
cmp
incl
jecxz
mov
fmuls
mov
shlb
das
pop
dec
popa
xchg
or
and
and
out
out
adc
jle
daa
int3
enter
jmp
jb
stos
stos
mov
xchg
or
repnz
add
out
rcll
or
test
lcall
xlat
lret
cs
ret
xor
popa
push
and
inc
enter
xchg
call
add
fildll
dec
insb
jecxz
pop
jmp
movsl
pop
inc
loopne
xor
xchg
dec
into
js
add
lods
push
and
push
xor
dec
arpl
sbb
mull
cmp
jmp
dec
sub
adc
xor
mov
pop
pop
mov
and
xor
out
cmp
sub
test
hlt
clc
dec
dec
jp
dec
outsb
jne
jno
ja
xchg
call
fiaddl
insb
fisttps
xor
jecxz
in
iret
mov
pop
xchg
jl
mov
push
push
out
fs
hlt
arpl
cmp
ljmp
fwait
add
push
cld
pop
int3
mov
mov
mov
hlt
arpl
pop
pop
xlat
addr16
repz
mov
fsubp
push
and
mul
and
adc
or
dec
inc
or
in
or
cwtl
and
push
push
mov
lea
lods
xor
mov
mov
packuswb
sbbl
mov
outsl
cmp
mov
mov
xchg
dec
mov
mov
add
mov
dec
mov
jl
and
std
pcmpeqb
mov
xlat
sub
adc
add
lods
lods
ret
pop
sarl
push
cmc
mov
imul
mov
jecxz
xlat
mov
in
lahf
inc
test
pop
dec
pop
mov
ja
adc
mov
js
dec
cmp
adc
int
icebp
jae
inc
test
mov
out
sbb
pop
out
cmp
stc
push
ret
push
push
mov
mov
or
xor
mov
enter
sbb
outsb
push
mov
data16
das
sub
pop
repnz
ljmp
out
mov
cs
inc
fstpl
testl
jae
test
add
jno
and
jmp
adc
cli
test
ljmp
test
jns
fwait
roll
insb
mov
mov
jle
rcrb
mov
jns
mov
and
inc
xchg
push
and
in
shlb
cmp
xor
data16
lcall
sub
movsl
xor
cs
pop
cmpsl
xchg
aaa
push
fdiv
push
popf
mov
mov
dec
scas
shrl
mov
adc
dec
ret
fnsave
push
pop
pop
xor
fwait
ljmp
and
pop
mov
in
or
outsl
addr16
inc
and
loope
cmc
daa
inc
out
mov
int3
repz
sti
cmp
pop
adc
dec
sti
cld
iret
dec
ficoms
xor
pop
mov
push
or
clc
mov
mov
mov
iret
ret
and
xor
and
xor
adc
mov
sahf
leave
mov
sbb
sbbl
pop
lcall
dec
jae
fnstenv
mov
add
xchg
xchg
insl
les
fwait
xchg
std
jb
sub
les
jmp
shrb
pop
jns
loopne
adc
out
xchg
dec
push
and
movsb
arpl
fsubr
pop
shll
xor
pop
jno
pop
dec
push
out
ficoml
pop
pop
sub
fnsave
das
cmp
and
in
bound
and
sarb
mov
int3
xor
popf
xchg
mov
les
clc
and
gs
leave
or
aam
lea
jl
mov
sbb
shrb
mov
in
or
jno
xchg
mov
cmp
aam
push
or
mov
push
jne
xchg
dec
into
jle
cwtl
bound
pop
push
sbb
and
addl
jecxz
out
in
scas
push
cltd
lret
sub
sub
mov
in
jno
xchg
cmp
in
fsub
mov
mov
and
test
sub
adc
push
jl
mov
ja
lret
mov
mov
sub
or
push
mov
xlat
push
fidivrl
cs
aam
cmp
loopne
inc
cmp
cmpsb
call
xchg
lods
pop
pop
mov
jmp
inc
add
dec
in
ret
push
stos
jns
out
notl
pop
mov
jge
divb
pop
lea
push
pop
cmpsb
adc
sbbl
dec
jns
lret
arpl
xchg
nop
push
xchg
push
or
push
push
adc
pop
fwait
cs
inc
fistl
and
inc
outsl
mov
pop
inc
push
out
scas
je
rorb
outsl
and
clc
pop
out
xor
xchg
cmpsb
shr
out
jae
call
pop
test
icebp
or
sbb
les
sbbl
fmuls
push
mov
mov
or
cmpsl
loope
xor
cltd
inc
mov
adc
clc
mov
and
fisttps
sbb
scas
loopne
inc
inc
pop
and
leave
lods
push
int
stos
or
adc
hlt
mov
push
mov
or
pop
adc
data16
xor
imul
dec
lea
mov
daa
stos
shll
mov
lret
push
xor
and
push
xchg
test
mov
aam
jg
aam
xor
inc
xchg
jecxz
in
pusha
addr16
insl
data16
pop
xchg
leave
inc
aas
cmp
mov
push
cmpsl
lcall
inc
add
xchg
push
cld
icebp
lahf
push
mov
ljmp
imul
lret
xchg
pop
insl
loop
adc
mov
scas
sbb
aad
out
rcll
jle
xchg
popa
aad
mov
fstpt
push
ret
inc
lret
ss
insb
testl
pop
mov
imulb
aas
and
fidivrl
je
inc
in
xchg
and
imul
sbb
xchg
xchg
aaa
iret
mov
xchg
mov
std
repnz
clc
es
adc
or
and
jbe
push
adc
xlat
adc
sbbl
mov
popf
pop
test
cmpsl
adc
imul
fwait
shlb
int3
sub
mov
jno
or
cmc
mov
daa
inc
aad
sbb
xor
cmpb
cmpsb
jge
pop
loope
xchg
mov
popa
es
inc
mov
pop
xchg
cmp
jnp
cmpsb
mov
push
mov
or
adc
sbb
nop
mov
push
shlb
xor
dec
cmpl
mov
mov
and
push
add
cmp
mov
imul
cmp
je
stos
pop
mov
xor
ret
in
lahf
adc
cmp
in
fwait
stos
inc
mov
loop
call
lock
dec
xor
add
cwtl
sahf
out
push
movsb
push
mov
int
daa
mov
mov
xchg
lret
push
push
data16
bound
sub
ja
xchg
mov
mov
push
mov
loope
lea
in
test
push
pop
outsb
into
mov
shlb
fstps
rclb
inc
xlat
lret
fisttps
ljmp
les
loopne
or
rcr
jnp
adc
loope
testb
test
insl
mov
push
lcall
lret
cltd
ret
loope
popa
push
jmp
mov
mov
cmc
push
jo
outsl
pop
lods
out
fbld
mov
xor
aaa
sbb
pop
inc
xor
cs
lods
sbb
push
cs
adc
sbbl
jo
cmp
mov
es
sub
inc
jno
mov
mov
in
xchg
mov
and
movsb
jl
inc
fsubs
rcr
iret
xchg
xor
movsb
fidivl
inc
pop
das
mov
hlt
lcall
push
inc
sahf
lods
dec
inc
int3
pop
std
push
sub
lea
pop
sbb
js
push
mov
pop
hlt
push
insb
fadd
inc
fs
leave
das
pop
jne
mov
hlt
imul
lcall
xchg
sub
je
pop
mov
mov
mov
sub
out
xchg
imull
dec
xor
pop
inc
lock
sbb
jle
js
stos
mov
out
test
xchg
lods
call
inc
std
pusha
and
out
dec
mov
ljmp
inc
das
in
or
mov
and
cmpsl
mov
fstps
inc
call
das
add
and
dec
in
fsts
fs
mov
dec
sub
xorl
fbstp
pop
cwtl
out
nop
and
lcall
rorl
mov
push
jp
push
xchg
nop
cld
push
outsb
sbb
xchg
xor
or
xchg
outsl
test
jno
jbe
inc
lret
arpl
cltd
cwtl
stos
out
add
inc
pop
push
mov
add
lods
adc
cmp
jae
stos
lret
and
fnstcw
gs
cmp
out
xor
dec
xor
in
or
push
mov
cs
inc
nop
lods
add
adc
cmpsl
jo
inc
cmpsb
inc
cmp
cmp
mov
xchg
jp
mull
add
xchg
push
sbb
lea
or
ljmp
jne
in
insl
jno
sbb
xchg
push
stos
daa
iret
das
lods
pop
pop
push
push
pusha
and
sbb
push
jne
dec
fdivp
mov
int
jl
or
sub
outsb
insl
push
in
jecxz
es
jecxz
hlt
insb
jcxz
xor
mov
fstl
lds
repz
adc
rol
sbb
aad
or
mov
fcmovu
mov
push
sti
dec
mov
mov
sub
pop
daa
mov
mov
repz
sbb
jno
lret
jne
sub
pop
shrl
push
xchg
or
cwtl
je
mov
aas
or
jge
je
scas
mul
mov
inc
pop
mov
sbb
xor
fldt
jno
sahf
sbb
add
adc
sub
or
lahf
cmp
pop
push
push
cwtl
mov
pop
lcall
sub
fsts
dec
cmpsb
subb
es
push
sub
add
mov
add
out
push
inc
jmp
push
scas
adc
call
add
add
lahf
mov
clc
inc
xchg
stos
jg
aaa
dec
lods
icebp
jb
das
pop
mov
aam
jl
inc
xor
rorb
hlt
mov
test
lret
jecxz
cwtl
mov
adc
imul
fmul
lahf
nop
cmpsl
and
test
xchg
mov
lret
hlt
xchg
scas
test
movsl
mov
push
lds
pop
mov
xchg
call
inc
mov
iret
add
push
mov
dec
mov
scas
es
xchg
push
pop
lahf
in
push
repz
ljmp
out
fwait
xor
push
into
ret
arpl
adc
popl
movsb
leave
add
sbb
imul
mov
shll
das
push
dec
mov
iret
and
pop
rclb
push
or
mov
adc
outsb
mov
sub
insl
push
xchg
inc
decb
dec
in
xchg
nop
cmc
dec
cs
movsl
hlt
lea
aas
and
scas
enter
test
mov
jle
or
testb
imul
xor
stos
inc
cmove
adc
out
cmp
xor
dec
ret
inc
movb
jle
add
jecxz
loopne
js
push
imul
dec
int3
inc
fs
cmp
inc
push
clc
pop
scas
mov
shrl
into
out
xchg
shrb
mov
lods
jnp
sbb
in
in
mov
adc
push
dec
lock
jne
mov
sbb
inc
pop
psubsb
mov
or
into
test
call
popa
int3
fldenvs
idivb
xorl
push
pop
mov
stos
xorl
xor
loop
xchg
mov
in
in
xor
xchg
jge
fisubrl
ja
mov
push
mov
mov
mov
cmp
push
nop
scas
adc
xor
xor
adc
push
out
sbb
cltd
push
addl
xchg
out
and
xor
mov
fs
adc
mov
je
lret
je
dec
call
xor
cmpsl
inc
push
inc
ds
mov
sub
lcall
repnz
daa
loop
mov
push
mov
push
dec
pop
push
fsubl
xor
in
aas
lea
mov
lcall
adc
jae
jns
dec
sub
fdivs
and
testb
push
test
push
subb
cmp
out
les
and
sub
das
and
and
jno
cmp
adc
or
lahf
fidivs
cltd
pushf
aaa
dec
pop
aad
lea
jbe
xchg
cmp
mov
mov
lods
mov
js
jb
xchg
fstps
arpl
movb
sbb
rolb
fistpll
push
imul
mov
jmp
dec
outsb
push
xlat
nop
cld
in
rorl
or
rcll
fs
or
mov
adc
daa
rol
sbb
sub
outsl
ffree
stos
out
cltd
inc
sti
mov
dec
pop
mov
lods
and
dec
xlat
adc
dec
jae
and
xor
inc
mov
pop
mov
scas
adc
pop
loop
push
movsb
sti
sbb
xor
daa
mov
sub
xor
jecxz
loopne
xchg
rolb
stos
cmp
cmp
nop
cmp
bound
imull
pop
ficoms
je
ficoml
ja
es
cltd
adc
sub
mov
pushl
popa
push
cmp
mov
mulb
or
xor
popa
lret
fdiv
xor
addr16
pop
jb
movsb
xor
add
jp
test
xor
cmovge
clc
fists
stos
shll
jl
inc
cld
jo
mov
xchg
jae
cmc
fmuls
cld
arpl
loopew
mov
mov
testl
dec
les
mov
mov
jmp
in
xor
xor
and
fistl
xchg
push
subb
sbb
arpl
shrl
or
jp
and
in
xchg
ret
movsb
fcoml
jae
push
lock
jb
jae
leave
pop
mov
and
fdivrl
lret
sub
mov
adc
pop
mov
add
mov
or
push
std
adcl
ret
dec
add
inc
hlt
sahf
pop
xor
ljmp
test
test
outsl
xchg
nop
adc
xor
inc
cwtl
xchg
setne
imul
gs
jmp
mov
mov
push
mov
xor
mov
add
xor
xor
lods
lds
xchg
jmp
into
pop
cmp
das
xor
inc
add
in
or
nop
sbb
cltd
insl
loopne
les
push
fildl
mov
or
data16
add
mov
sub
filds
cmp
jge
xchg
aam
pop
repnz
data16
push
icebp
incl
shlb
xor
fdivl
test
popf
push
or
iret
push
mov
mov
sbb
cmp
test
fstl
mov
inc
cmp
sti
adc
ds
sub
les
mov
ds
or
dec
pusha
sub
fdivl
pop
jecxz
jb
pop
xchg
sub
add
mov
push
insb
xchg
push
mov
fs
into
xchg
mov
sahf
sbb
cmp
ret
dec
jmp
lea
and
sbb
adc
mov
pop
inc
jmp
mov
lds
fisttpll
pop
imul
cmp
data16
lahf
es
in
insl
int3
sub
sahf
fmuls
ficompl
dec
xorl
sbb
xchg
jl
mov
lahf
test
in
jae
stos
lock
in
mov
sub
lock
lods
insb
sub
je
push
mull
pushf
stc
jge
loop
sub
fldenv
ds
or
aad
fcmove
in
jae
js
addr16
sbb
scas
add
in
inc
repz
add
or
mov
stos
in
inc
pop
cs
ljmp
rcr
push
mov
sahf
mov
les
fdivrp
xchg
xchg
mov
xor
cli
inc
popf
cwtl
and
adc
lods
xchg
cmp
lret
inc
fstpl
es
push
push
mov
std
and
pop
mov
dec
repz
jbe
insl
push
ficomps
xor
jno
clc
push
inc
add
dec
adc
or
movsl
mov
out
test
inc
nop
pusha
sbb
push
or
test
out
fsubs
andl
arpl
pop
frstor
test
jmp
stc
data16
loopne
in
out
jnp
push
iret
mov
jmp
in
xlat
aas
das
test
jns
ficoml
pop
iret
imul
notb
inc
adc
jg
ljmp
jno
xchg
push
jbe
xchg
sbb
scas
inc
jno
bound
or
pop
sbbb
dec
fistps
test
dec
je,pt
pushf
nop
adcb
sub
jbe
dec
add
xor
push
loopne
fsubrp
popa
ficomps
add
pop
xchg
jp
mov
std
mov
std
mov
and
dec
inc
aaa
std
cmpsb
mov
cmp
jecxz
push
insl
add
sub
cmp
mov
and
sub
je
data16
lock
shrb
mov
jl
pop
icebp
cld
imulb
pop
fisttpl
mov
mov
in
gs
addr16
jb
jle
out
push
test
cld
imul
addr16
sbb
mov
pop
call
pusha
and
inc
ret
test
pop
inc
xor
dec
int3
mov
mov
cltd
arpl
es
shl
mov
shll
sub
jle
inc
cmc
rcrl
mov
pop
jp
xor
in
outsb
arpl
pop
push
ds
cmpsl
test
dec
in
scas
xor
or
ficompl
mov
lock
stos
sub
arpl
or
xchg
add
jmp
jne
and
mov
fdivr
jnp
pushf
adc
cmp
fisttpll
dec
shll
loopne
and
movsl
shll
fcompl
mov
xchg
lret
add
dec
mov
icebp
scas
mov
mov
cltd
xchg
mov
mov
ss
cmp
add
xor
call
inc
mov
dec
push
movsb
ds
movb
dec
sub
test
adc
in
add
iret
stos
inc
mov
out
pop
js
push
mov
repnz
fisubrl
mov
cmpl
mov
dec
mov
cmp
xor
inc
or
lods
jecxz
movsl
xchg
and
test
movsl
sahf
mov
and
testb
or
addl
sbb
pop
mov
daa
lea
ficomps
push
out
ljmp
xchg
clc
push
rolb
aam
dec
frstor
mov
flds
sbb
pop
adc
mov
mov
iret
push
ret
out
fisubl
xor
adc
mov
and
mov
and
dec
cld
mov
xchg
das
mov
dec
and
lcall
pusha
sbb
repnz
xor
sbb
and
dec
cs
sub
lcall
sar
add
in
test
clc
in
mov
fidivrl
leave
psubb
ljmp
xchg
inc
int
jg
jno
dec
test
pop
sbb
xor
pop
arpl
push
cmpsl
in
mov
or
cmc
adc
into
jmp
ja
pushf
clc
or
test
mov
test
iret
jp
mov
jle
push
ja
das
dec
add
icebp
leave
dec
cmp
adc
fimull
mull
dec
sub
or
xchg
ret
lock
xchg
and
cltd
pop
loop
int
or
movsb
mov
fs
testl
insb
enter
pop
fldenv
or
inc
mov
insb
daa
ds
sahf
aas
sub
sub
adc
stos
push
push
std
mov
jno
imul
mov
ljmp
jbe
dec
jmp
imul
lods
cmp
inc
lock
loop
push
gs
lret
fs
addr16
cmp
test
mov
adc
inc
cmp
dec
adc
sbb
add
dec
xor
mov
repz
mov
and
mov
push
push
pop
pop
je
jg
or
repnz
clc
icebp
mov
ftst
jp
nop
addl
cmc
cs
stos
push
scas
scas
out
push
jecxz
and
push
mov
fisubs
jo
push
imulb
in
loop
jmp
xchg
je
inc
mov
push
pop
xchg
pop
icebp
scas
sbb
imul
xchg
or
mov
scas
ss
sub
in
arpl
pop
mov
mov
jmp
scas
fldenv
xchg
adc
and
divb
sub
sub
jecxz
scas
cmp
and
fiadds
adc
fadd
fisttpll
and
pop
dec
and
fnsetpm(287
lcall
cmp
sbb
push
push
imul
inc
sti
sub
jne
mov
mov
andl
push
mov
fildll
aam
adcb
sub
ret
cmpsb
inc
mov
mov
inc
fucomip
xlat
insb
mov
std
jae
mov
dec
mov
adc
push
cmp
or
mov
jbe
gs
test
leave
ja
test
stos
cwtl
fcoms
bnd
push
dec
leave
cmc
popf
scas
sbb
mov
mov
ret
jbe
iret
xlat
or
mov
push
insb
pop
lret
inc
pushf
roll
inc
imul
fnstsw
lret
cmp
in
mov
mov
mov
test
or
mov
lret
sbb
repnz
aaa
leave
addr16
adc
sahf
sbb
sbb
enter
add
gs
push
add
es
fwait
jae
sbb
pop
and
xor
push
dec
and
pusha
mov
or
jo
fwait
imul
inc
fisubrl
stc
in
add
ds
stos
roll
cli
stos
or
jge
jb
mov
inc
jnp
lods
sbb
movsl
mov
pop
cld
or
enter
lods
les
negb
int
mov
fwait
mov
inc
in
or
adc
sbb
fstp
xchg
iret
inc
mov
mov
push
and
cs
testl
and
mov
or
aad
test
stos
pop
inc
adc
nop
fsts
pop
ja
stc
insl
dec
xchg
add
push
lret
or
test
cmpsl
repnz
xchg
and
mov
ljmp
pop
inc
faddl
out
jne
and
pop
inc
add
cmp
push
sbb
fdivrs
mov
cmp
scas
cs
mov
mov
mov
arpl
add
xchg
or
mov
aaa
ret
mov
cmovae
ja
sbb
adc
rorl
cli
mov
mov
pop
push
inc
fistps
add
pop
mov
and
stos
dec
cmp
outsl
loopne
out
sub
scas
rol
jmp
mov
push
lods
and
ja
push
mov
inc
push
xchg
sub
mov
movsb
jge
testl
mov
aad
mov
xor
lret
fmuls
pop
ljmp
aaa
inc
push
scas
push
inc
or
test
das
clc
xchg
pop
add
inc
sub
xor
lods
push
dec
or
orl
lret
call
fidivrs
test
mov
sub
ja
and
and
into
sub
adc
mov
enter
sub
mov
jbe
inc
xor
lret
sub
in
jg
xor
push
imul
mov
xor
xor
adc
outsb
fcmovnb
into
mov
ja
cltd
pusha
mov
daa
push
mov
inc
adc
pop
push
insb
sti
lods
jge
sbbb
mov
pop
gs
jp
imul
jb
fwait
adcb
into
sbb
cld
cmp
addr16
inc
mov
cmp
fcomip
push
xchg
pop
adc
mov
or
jg
push
pop
lds
test
mov
mov
jnp
rorl
sub
sbb
mov
push
jmp
in
pop
repz
push
les
lods
jae
mov
add
pop
dec
inc
in
mov
aad
nop
mov
test
push
cli
dec
lret
movsb
out
jmp
push
imul
es
jns
push
into
push
pop
arpl
fistpll
adc
popa
sbb
aaa
and
data16
pop
sbb
cmp
loope
ret
xchg
push
dec
or
adc
popf
jns
pop
popa
inc
sub
adc
jnp
mov
jmp
or
clc
sbb
pusha
pop
mov
sti
mov
mov
sti
adc
in
js
mov
int
or
inc
xchg
push
mov
push
test
sbb
mov
daa
adc
jb
sub
sub
adc
adc
xorl
insb
mov
call
cmp
inc
jo
movsb
shr
rolb
sarl
fbstp
fwait
leave
sbb
sahf
js
mov
add
insb
jp
or
mov
xchg
jns
push
addr16
fcomps
push
repnz
cltd
mov
lock
jne
lds
xchg
ret
or
movsb
in
sub
in
inc
xrelease
call
ljmp
gs
cmp
xor
jno
ja
ja
test
pop
test
dec
mov
cmp
and
xor
dec
xor
adc
add
nop
dec
xor
dec
jp
sub
les
mov
dec
add
xchg
dec
in
fdiv
mov
testb
scas
adc
sbb
xchg
fwait
dec
push
push
or
mov
mov
and
stos
pop
push
in
addb
add
outsl
adc
addr16
paddw
jno
mov
cmpl
fwait
mov
push
sub
push
pop
mov
in
ss
lahf
adc
sub
mov
cmp
xor
int3
mov
cld
negl
outsb
jg
inc
lods
pop
fwait
ret
pop
aas
into
insb
sub
mov
test
popa
aad
sbb
mov
cmp
shufps
mov
cmp
int3
push
jb
xchg
mov
mov
adc
adc
adc
mov
push
repz
dec
xchg
inc
and
jle
adc
inc
pop
aam
nop
ret
scas
lcall
test
mov
pop
jle
pop
fstpl
xorb
cli
pushf
aaa
loopnew
cmp
ss
test
fisttps
lock
sbb
fnstsw
mov
es
stos
cpuid
add
icebp
cmc
mov
out
xor
add
push
cmc
out
lret
push
fdivp
add
mov
add
sbb
dec
jae
dec
jbe
push
sub
aad
cmpsl
popa
outsl
das
jae
nop
adc
lods
insl
jmp
in
pop
daa
dec
xchg
push
testl
ds
and
das
lcall
pop
add
cmp
insl
xchg
pop
cmp
jbe
in
adcb
or
inc
fidivrl
popa
push
in
mul
fnstcw
mov
xchg
push
adc
fsubs
mov
daa
push
fxch
jg
mov
xor
push
push
movb
jg
add
popf
gs
push
fsubrs
js
xor
push
test
ret
push
dec
dec
or
xor
test
jmp
ljmp
inc
adc
fucomp
test
ret
and
or
mov
rolb
pop
jne
dec
xlat
scas
inc
push
nop
add
repz
in
aad
inc
push
mov
insb
scas
pop
xor
lahf
mov
enter
mov
add
iret
int
pop
sarl
sbb
lods
in
xchg
addr16
sub
fcoms
mov
cli
inc
xor
adc
fiaddl
call
jnp
push
cmpl
aad
outsb
pop
push
jae
jae
das
dec
test
aas
nop
stc
into
dec
mov
ds
or
push
jmp
xor
into
aad
jg
mull
mov
mov
pop
sbb
inc
jnp
shl
das
mov
add
insb
inc
vsqrtsd
sarb
xor
mov
mov
shlb
jmp
outsb
lods
jo
jno
jl
pop
popf
adcb
scas
cmp
inc
es
insb
fwait
sbb
fdivl
mov
movsb
xchg
adc
mov
les
addps
mov
enter
mov
cmpsl
cld
cwtl
cmpsl
mov
fisttpll
xchg
vpmulhw
adc
insb
cmp
lds
shl
shll
out
jl
push
clc
mov
ret
rcll
ret
xor
mov
mov
xor
out
jmp
inc
dec
shll
pop
jne
dec
jl
or
xchg
dec
push
lods
fldcw
dec
stos
mov
push
adc
cmp
sbb
xor
in
add
xor
xor
or
sub
lcall
divl
aam
popa
decl
push
or
faddl
lea
sub
pcmpeqb
mov
repnz
push
pop
lret
adc
xor
imul
stos
pop
insb
call
or
cmp
dec
iret
mov
rolb
xor
jno
push
lds
loop
mov
or
loopne
sbb
arpl
pop
sarl
stos
sub
sbb
pop
mov
jbe
sbb
push
movsl
cmp
aaa
mov
xchg
adc
cli
into
and
loope
jmp
lods
mov
aaa
sbb
jmp
arpl
jno
xchg
ja
mov
mov
mov
pop
popf
adc
jns
inc
push
mov
inc
pusha
dec
and
std
add
lds
jb
jl
add
dec
xor
das
dec
in
add
dec
stos
dec
fldt
mov
insl
cld
cmp
xchg
cmpsb
test
rcrl
icebp
xor
inc
mov
shrl
mov
lock
rcll
and
xchg
clc
and
xchg
lahf
xor
push
mov
std
push
mov
stc
cld
cs
std
jmp
dec
jmp
add
pop
ds
incl
pop
ljmp
sub
loopne
aad
push
rcr
cmp
push
fisttpll
inc
and
scas
fildl
lods
xor
cld
pusha
push
mov
push
cli
imul
adc
ret
xor
add
push
test
lahf
mov
fwait
test
daa
icebp
ret
xor
cld
push
jae
aas
or
aaa
enter
xchg
adc
in
icebp
xor
mov
mov
and
or
cwtl
push
dec
insl
dec
and
inc
leave
aad
mov
cmp
bound
jecxz
pop
outsb
dec
sub
or
scas
cs
jns
sti
leave
mov
xor
imul
pop
sti
enter
aam
inc
aam
mov
std
dec
in
es
dec
lock
es
mov
jp
sub
int3
dec
adc
aad
mov
call
outsl
pop
test
sahf
test
xlat
mov
sbb
and
out
lods
movsl
mov
or
jae
shr
mov
stc
cltd
in
cmc
pop
clc
jae
fcomps
ret
fwait
xchg
stos
dec
or
imul
loopne
mov
mov
cld
fisubrs
insb
lods
add
jno
lock
pop
pop
mov
jg
and
mov
push
push
popf
pop
cld
inc
dec
fdivs
mov
std
mov
inc
dec
mov
clc
clc
mov
mov
push
iret
test
insb
mov
je
rcrb
mov
in
bound
cs
and
mov
mov
xchg
xchg
call
insb
fistl
inc
rcrl
jp
in
bound
loop
mov
mov
sbb
test
inc
mov
lcall
into
inc
push
popa
cli
sub
pushf
enter
sbb
or
pop
and
int3
jnp
ja
mov
daa
nop
pop
pop
pusha
push
jne
nop
nop
adc
fimull
subl
popa
mov
and
sahf
cmp
andb
shrb
mov
in
scas
lea
adc
jae
pushf
lds
dec
cmp
pop
and
dec
jno
cli
inc
mov
xchg
add
push
les
loopne
mov
adc
jnp
push
rorb
inc
jno
inc
in
dec
testl
jle
or
popf
mov
and
into
rorb
cmc
aam
inc
lock
pop
jns
jmp
jno
sub
shll
lea
and
aam
xchg
sub
sbb
and
sub
popw
icebp
and
int3
test
jmp
leave
mov
push
fcmovu
fucomi
push
mov
lods
adc
adc
sti
mov
std
cli
inc
pop
rcl
xor
fisubrs
inc
jl
retw
sub
dec
jecxz
add
mov
or
lret
pusha
mov
sub
sub
in
cmpsb
inc
mov
xor
aam
xchg
test
mov
movl
inc
outsb
sub
mov
sbb
data16
pop
leave
push
xor
add
jge
add
into
adc
imul
xchg
daa
cmp
jecxz
and
psubsw
mov
pop
es
dec
ljmp
into
shll
lds
sti
out
lahf
imul
lock
mov
clc
xchg
ret
adc
mov
cli
adc
pop
push
fisttps
decl
sti
icebp
das
xor
and
ja
sbb
or
adc
hlt
push
push
inc
sbb
xchg
and
mov
stos
in
fs
arpl
mov
bound
mov
adc
outsb
movl
mov
ja
stc
in
lods
movsb
es
ror
cmp
jle
mov
sti
and
pop
xor
cmpsl
inc
mov
mov
dec
aaa
cmp
out
leave
mov
mov
xor
out
pop
xchg
ja
aam
in
fisubs
inc
out
lods
push
popf
mov
je
out
add
mul
enter
in
push
push
clc
rcll
movsl
cmp
push
aam
jnp
out
shr
loop
push
and
testl
xchg
push
das
outsl
dec
loopne
out
push
push
jnp
lods
push
and
mov
push
rolb
loopne
fstl
sub
stos
out
jg
test
sbb
sub
xor
cmp
jne
mov
mov
rcr
and
loopne
enter
xor
fcoml
jge
dec
jb
push
xor
adc
inc
and
roll
js
bound
add
dec
stc
mov
pop
adc
std
and
fiadds
mov
cmpsl
call
cmp
cmpsb
cltd
pusha
test
stc
cmp
sti
jl
ss
xchg
mov
movsl
loop
clc
inc
push
test
imul
lret
sub
dec
shl
and
mov
push
repnz
dec
adc
sbb
push
sub
out
add
aas
add
in
ror
mov
clc
xchg
cmp
je
nop
dec
fs
cld
jb
enter
dec
sub
test
sbb
jle
mov
les
lret
cmp
mov
mov
dec
int
adc
push
adc
xor
ret
mov
push
roll
repnz
cmp
push
pop
outsb
jb
mov
push
movsl
sbb
popf
xchg
sti
xchg
imul
test
sub
enter
mov
ljmp
xchg
adc
divb
or
shll
sar
xor
cwtl
fs
add
push
mov
mov
int
cwtl
pusha
outsl
gs
movsb
cwtl
sahf
xchg
call
dec
fs
push
je
sbb
bound
insl
xchg
dec
das
pop
outsb
inc
dec
jge
int3
sbb
dec
addr16
pop
xlat
mov
mov
loopne
pop
cmp
xor
xchg
hlt
stos
std
jl
cmpsl
pop
xchg
in
jb
popa
adc
in
das
test
lahf
and
test
aad
sub
sbb
jmp
in
or
sahf
repz
std
addr16
push
add
dec
add
stos
dec
xor
push
cmp
mov
cmp
into
ss
sub
insb
mov
out
iret
mov
push
fnstcw
mov
cltd
push
xchg
insl
pop
xlat
aas
push
mov
mov
test
ret
mov
push
mov
xor
and
push
cs
push
dec
adc
mov
aas
inc
and
jecxz
movsl
inc
repz
add
cwtl
test
sbb
xchg
fs
adc
cmp
or
inc
add
imul
out
fstpt
mov
out
pop
loopne
inc
sub
push
inc
xlat
or
dec
stc
pop
imul
mov
jle
mov
into
push
lods
dec
adc
negl
sbb
aas
lea
xor
addr16
add
repnz
cmp
mov
cmp
test
and
ss
or
xchg
xlat
jl
dec
push
cmpsl
sub
cmpsb
inc
decb
cmp
inc
jb
inc
xorl
lods
adc
pop
or
inc
jecxz
jae
out
lods
sbb
negl
dec
cmp
jo
dec
loop
fcmovne
add
adc
loopne
xchg
fs
mov
jge
dec
and
test
or
leave
pop
push
mov
push
pusha
xchg
adc
addr16
and
lcall
jbe
xchg
xchg
pushf
cmc
cmp
faddl
and
pop
repnz
push
cmp
dec
cltd
test
jge
fimull
xchg
out
clc
mov
push
sub
cmp
add
jae
scas
push
jne
mov
loop
lcall
inc
dec
cmp
iret
mov
cmpsl
xlat
jle
ja
rclb
pop
add
bound
jle
xchg
add
stos
iret
imul
sub
sar
mov
cmp
sub
movsb
xlat
jg
xor
sbb
popf
orl
sarb
mov
jae
dec
scas
sti
repz
scas
insb
push
xchg
jo
and
mov
dec
mov
ds
push
jno
inc
fsubs
daa
jns
cli
mov
jmp
cmp
adc
call
and
leave
ret
mov
adc
in
pop
lods
pop
xor
mov
and
out
je
dec
xchg
lret
inc
sbb
test
mov
add
stc
ss
leave
sub
mov
jmp
ja
addl
xlat
xchg
insl
cmp
jbe
mov
out
in
xor
pop
fisubrs
and
repnz
movsb
movsb
mov
imul
sbb
ljmp
inc
aam
mov
mov
ss
scas
cwtl
adc
xlat
pop
xchg
aas
fmull
and
xchg
sub
leave
and
jnp
addr16
cs
mov
jo
cli
call
jno
jmp
or
inc
sbb
out
pop
push
fsubrp
insl
xchg
push
fbld
cmp
cld
jmp
leave
stc
push
add
repnz
es
sub
xchg
shll
pop
sub
outsl
out
into
fiadds
mov
mov
test
loop
call
push
std
imul
mov
cmp
sub
pop
in
lods
add
inc
rcr
fimull
in
xchg
ljmp
out
jp
sti
sub
adc
in
pushf
or
test
jmp
cmp
add
popf
dec
mov
stos
mov
push
scas
xor
stc
aad
pushf
popl
pusha
pop
push
sub
sarb
mov
es
add
and
xor
lcall
dec
mov
fildll
gs
jecxz
xchg
jb
dec
loope
mov
pop
das
insb
mov
jns
dec
or
fcomps
test
aas
enter
rorb
sahf
mov
mov
int3
sbb
sub
int
cmp
inc
ret
push
mov
pop
mov
mov
cmp
pop
cs
in
call
cmpsl
stos
xchg
adc
mov
fisttpl
ja
insb
push
push
in
inc
xor
push
out
inc
stos
fistl
enter
out
je
cli
lods
movsb
les
daa
insl
cmc
stos
shrb
inc
pusha
jbe
rcl
and
dec
dec
in
mov
jbe
mov
test
fidivrs
call
mov
arpl
dec
push
mov
stos
enter
repz
or
arpl
dec
inc
mov
popf
jecxz
roll
sahf
sbb
cmp
or
xor
lods
push
mov
mov
mov
scas
mov
ds
test
push
popa
popa
sbb
mov
add
ret
cmp
jl
lods
shll
insl
xchg
cs
insb
mov
and
mov
fmull
ljmp
inc
in
push
xchg
inc
test
xor
inc
andl
or
leave
jg
sti
mov
xor
gs
dec
cld
clc
jge
dec
dec
xchg
mov
and
xor
imul
int
mov
sbb
jmp
bound
std
mov
insb
adc
call
xor
sbb
ja
xchg
xor
aad
aas
or
cmpsl
mov
lock
cmp
enter
inc
cli
sub
cmp
mov
jns
mov
arpl
aaa
and
sub
sbb
pushl
pop
adc
xchg
aad
inc
rcrb
addb
scas
mov
cmp
inc
fimull
xor
out
jno
dec
or
je
mov
shrb
shll
iret
fsubl
mov
pop
jbe
push
mov
popf
jp
ss
jnp
push
mov
mov
inc
push
mov
movsl
int
int
ret
icebp
aas
jp
daa
adc
xchg
in
inc
cmp
rorl
icebp
pop
jecxz
jmp
jo
leave
add
lods
movsb
popf
xchg
inc
sbb
sub
sahf
inc
mov
insl
xchg
enter
pop
hlt
test
cli
out
sub
bound
mov
cltd
dec
adc
pusha
mov
lock
dec
enter
sti
xor
xchg
ja
jnp
mov
sahf
ljmp
xchg
roll
into
adcb
push
push
out
xor
or
imul
sub
add
xor
mov
xor
and
inc
out
xchg
lods
lahf
sti
xor
test
mov
mov
xchg
jne
add
sbb
cmp
stos
sub
hlt
cmp
gs
fstl
add
adc
outsb
xor
mov
and
xchg
mov
jp
add
dec
hlt
xor
rclb
jmp
pusha
es
sahf
fwait
adc
ret
push
sub
movsl
sbb
arpl
xor
mov
xor
in
ja
icebp
mov
ja
in
jbe
sbb
call
lds
mov
movsb
jno
jl
jge
scas
test
cmp
test
sbb
adc
mov
das
xchg
mov
leave
sbbl
jnp
frstor
mov
nop
sbb
repnz
cwtl
xchg
enter
jg
insl
int3
gs
xchg
aam
in
pop
xor
xor
jge
cmpl
cmpsb
ficomps
xchg
adc
dec
adc
test
lcall
or
sub
lea
xchg
loopne
inc
cmp
mov
out
add
cmp
fistpl
dec
mov
movsb
mov
fs
pop
in
scas
push
xor
and
in
jl
sbb
or
mov
es
adc
mov
mov
mov
popf
and
ret
pop
or
loopne
cs
loope
je
xchg
pinsrw
push
movsb
jnp
lahf
std
push
push
jnp
rcl
cmp
xchg
xchg
scas
lock
insb
inc
adc
scas
int3
dec
es
cmpl
cmp
js
add
inc
mov
push
stos
sub
subb
adc
jp
dec
jno
jg
mov
or
repz
hlt
mov
out
stc
ret
aas
lret
jle
xchg
push
loop
mov
xor
push
push
adc
push
popf
ret
repnz
and
int3
cld
and
dec
sub
loop
adc
push
out
xor
mov
mov
shrl
pop
xor
mov
cmp
mov
mov
mov
andl
loope
cmp
cmpsl
sub
repnz
jecxz
daa
or
rorl
lock
or
call
cmp
int3
jg
fidivs
dec
jge
jmp
test
into
mov
push
jg
xchg
jle
and
or
xchg
add
mov
insb
out
cld
clc
mov
mov
data16
push
cmpsb
push
stc
insl
es
lahf
shll
mov
adc
mov
movl
testb
js
pop
push
push
mov
pop
push
lods
in
cmpsb
rolb
lea
jmp
sub
cmc
mov
inc
js
ja
lret
lahf
adc
inc
or
or
jne
push
dec
dec
jecxz
sbb
adc
push
jp
jge
lock
xchg
shl
or
jle
dec
rcrl
xchg
adc
jmp
mov
outsb
aam
dec
loope
gs
sbb
das
lock
or
mov
mov
add
loopne
inc
iret
add
mov
movsb
xlat
stos
fnstcw
adc
ja
push
sub
fdivrl
icebp
mov
xlat
in
adc
fnsave
inc
dec
enter
imul
sbb
sub
fadds
enter
jno
add
xchg
mov
ss
adc
sbb
sahf
inc
lock
push
sub
out
inc
rorb
fcoms
sbb
enter
inc
imul
int
dec
add
and
xor
dec
xchg
xchg
dec
inc
push
pop
cmp
mov
mov
mov
mov
and
jno
push
inc
dec
inc
adc
xchg
aad
hlt
out
repz
lods
loope
cmp
lcall
jns
repz
loope
je
jne
test
ficompl
add
inc
aad
dec
or
imul
pop
out
mov
out
pushf
int3
incb
scas
sub
jnp
inc
jb
cmp
mov
pop
dec
rclb
xor
or
adc
dec
aaa
out
push
push
in
daa
pop
stc
and
out
test
inc
xor
sti
dec
dec
push
cmpl
xchg
adc
data16
ljmp
jecxz
dec
sbb
add
sub
sahf
inc
cli
loopne
pop
rcrl
sbb
jg
cs
or
xchg
or
popf
dec
lock
and
aaa
jmp
xor
push
and
out
mov
sbb
fists
ds
jne
dec
bound
fld
or
pop
jmp
dec
jg
push
mov
aas
or
mov
jb
loope
cmpsl
sbb
sti
sahf
gs
jns
add
xchg
and
insl
cmp
inc
imul
lods
mov
in
imul
mov
lcall
insl
andl
imul
and
cs
rclb
sbb
xchg
mov
mov
lock
sbb
xchg
ljmp
pop
gs
ljmp
sub
movsb
xchg
ljmp
jnp
cmc
sbb
fadds
sub
rolb
adc
mov
imul
or
cmp
lods
push
push
mov
pop
cwtl
loopne
stc
push
sbb
sub
cs
rcr
adc
clc
dec
bound
rclb
push
sbb
xor
sbb
push
jno
lds
arpl
add
push
mov
incb
enter
adc
jnp
fisttpl
stos
xchg
aam
xchg
insl
sub
stos
push
leave
cmp
test
dec
jns
mov
outsl
mulb
outsb
cmpsl
jmp
push
mov
inc
sbb
pop
adc
int3
aad
in
pop
jmp
adc
xchg
cmp
das
mov
add
movsl
jbe
test
daa
ss
iret
pop
add
test
enter
pusha
push
cmpsb
ljmp
mov
mov
ret
cmp
add
aad
popa
inc
mov
leave
mov
addb
add
cmpl
mov
lods
pop
pusha
and
add
cmpsl
testl
insl
mov
dec
es
add
outsb
add
iret
sub
dec
repnz
jl
fs
aas
and
and
pop
jae
repz
add
lret
outsl
adc
pop
mov
idivb
arpl
dec
fdivp
data16
imul
popf
sbb
push
xchg
test
mov
data16
or
push
addr16
mov
stos
mov
cmp
pop
bound
mov
inc
adc
shrb
faddl
lods
daa
dec
or
xor
pop
ja
xor
insl
push
test
xor
rcr
adc
cmp
arpl
stc
loope
outsl
mov
nop
jnp
inc
and
cwtl
pop
out
sbb
jl
les
int3
xchg
fadds
inc
mov
jbe
movsl
into
push
inc
add
fwait
mov
shl
xor
mov
sahf
jnp
notb
mov
aas
int3
xor
into
lahf
fwait
add
xchg
sbb
scas
aas
jns
jbe
rcll
imulb
or
int3
push
pop
ficompl
push
punpckhwd
fdivrs
loope
mov
inc
ljmp
out
or
in
sub
cmp
pop
lods
sub
cmpsb
lahf
or
cmp
push
loope
push
xchg
in
in
mov
in
cmp
fcomps
int3
mov
pop
xchg
add
push
mov
jmp
lret
es
or
add
mov
adc
mov
inc
je
pop
cli
push
insl
loopne
xor
shlb
lds
add
jno
sub
xor
sub
pusha
add
outsb
int
loope
push
test
sub
data16
sarb
push
les
or
test
adc
sbb
and
sub
sbb
add
ror
or
out
mov
pop
xchg
loop
adc
push
inc
outsl
lds
mov
inc
mov
hlt
adc
cmp
add
cltd
es
shl
loop
mov
jne
call
or
adcb
pop
call
sbbb
xchg
sahf
push
mov
lods
je
adc
cmpsl
push
movsl
inc
mov
pop
ret
std
sahf
or
je
or
mov
cs
rcll
daa
lret
aad
and
dec
popf
aas
clc
inc
scas
adc
out
fisttpl
xchg
adc
fmuls
addr16
sarb
mov
gs
loop
mov
or
cmp
insb
or
mov
adc
cwtl
test
ret
aam
add
mov
js
or
jge
test
jne
in
jg
xor
ror
loopne
add
repnz
mov
xor
adc
xchg
xor
cmp
xorl
pop
loop
jecxz
test
repz
mov
pop
sbb
ja
xchg
mov
xchg
mov
lods
mov
push
mov
xchg
imul
push
addr16
cltd
pop
mov
shlb
frstor
mov
add
and
pop
jae
dec
stos
iret
or
jbe
scas
stos
inc
adc
add
icebp
or
enterw
fmulp
out
pop
or
sahf
out
sarl
jmp
xchg
mov
loopne
mov
ljmp
mov
sti
and
ret
add
test
inc
popf
xor
jb
loop
xor
fstp
cmp
mov
je
adc
push
inc
cmpsb
jge
mov
in
and
dec
iret
push
push
inc
fnstsw
inc
loop
sahf
out
rorb
xlat
cmp
pop
nop
mov
xor
and
mov
cmpsb
cmpsb
sub
jns
xchg
scas
or
cmp
sub
out
add
movsl
push
or
or
std
sbb
cmp
jp
ds
stc
repz
popf
sti
add
scas
aaa
sub
sub
sub
mov
lret
sub
outsb
xchg
mov
daa
push
mov
fsubs
fs
hlt
lods
js
sarl
inc
icebp
aad
aas
shlb
in
sub
cmp
cli
inc
mov
jb
jge
dec
xchg
pop
sahf
cs
cltd
or
and
jp
mov
dec
in
push
notl
shlb
sub
aaa
movsl
ret
mov
add
ret
push
fstps
jbe
cmp
popa
out
dec
jno
pusha
lret
loopne
das
or
ss
cwtl
adc
dec
sub
lods
data16
sbb
cmpl
insl
xchg
loope
movsl
pop
push
loop
pop
push
dec
xlat
popf
andl
aad
xor
inc
andb
xlat
push
insb
scas
jno
pop
xchg
cwtl
imul
lea
fcmovu
aas
bound
mov
jnp
xor
xor
aad
jb
and
mov
push
iret
mov
push
leave
les
loop
sahf
negb
out
pop
add
xchg
dec
mov
es
inc
adc
xchg
call
sub
leave
jp
inc
xor
add
insl
enter
push
jle
in
scas
filds
push
push
sarb
fsubs
xor
xor
and
cmpsl
dec
mov
imul
scas
pop
cmp
hlt
xor
dec
jae
jno
cmp
das
outsl
push
leave
shr
xchg
pop
insb
dec
subl
sub
sbb
push
ret
stos
sbb
test
cmp
add
or
sbb
sub
hlt
cmpb
dec
dec
xchg
xchg
fs
cmp
divl
loope
jl
int3
add
rclb
into
mov
lret
xchg
fs
push
fistl
add
xor
popf
icebp
dec
inc
inc
mov
push
xor
mov
and
addb
mov
negb
mov
sbb
sub
fimuls
insb
mov
popf
outsb
mov
sahf
or
pop
test
mov
lods
pop
mov
jecxz
incl
test
imul
mov
out
popa
push
jns
xchg
leave
repz
and
push
mov
inc
insb
mov
stc
int
mov
dec
cmc
pop
mov
jo
mov
mov
mov
bound
adc
lds
out
and
cmp
jp
popa
push
push
ss
dec
call
lods
outsl
or
je
orl
cmp
shll
add
cs
jmp
cltd
fistl
push
mov
mov
movsb
loop
insb
daa
sub
pop
imul
out
cmc
mov
loope
rcr
repnz
arpl
incb
outsl
adc
pop
add
pop
stos
loop
inc
mov
stos
xchg
adc
dec
adc
sub
fimuls
xchg
adc
in
lcall
ficoms
outsl
adc
ss
mov
arpl
imul
pop
arpl
adcl
push
mov
pop
popf
mov
mov
adcl
test
lcall
push
dec
subb
fisttpl
mov
or
adc
outsl
or
lret
icebp
jecxz
mov
stc
jl
addr16
xor
mov
bound
mov
sub
cmp
xor
fmul
leave
imul
out
inc
loop
cltd
clc
push
das
subl
shll
sahf
push
jmp
xor
mov
call
nop
sub
dec
push
or
sbb
data16
mov
jge
lock
cmc
jbe
sbb
inc
cmp
sub
in
aas
and
je
inc
mov
pop
je
enter
jne
sbb
sub
fs
cltd
lea
and
sar
movsl
push
or
jge
cli
bound
lds
pop
test
mov
xchg
mov
or
jbe
jmp
std
imul
push
xchg
int
jnp
popf
divb
ds
scas
ja
cmp
add
mov
stos
lcall
pop
pusha
in
das
scas
jnp
fdivs
stos
cmp
inc
push
sbb
mov
enter
mov
pop
clc
popf
fcompl
inc
les
mov
dec
adc
addb
cld
add
xorl
jge
call
pop
jg
push
je
xchg
cld
in
icebp
test
jl
push
out
cmpsb
adc
in
push
lcall
push
cli
pop
in
jns
imul
inc
inc
sbb
fnstsw
cld
lea
mov
test
inc
sub
mov
enter
imul
ja
lock
sti
add
das
xorb
lock
inc
mov
adc
pop
push
xor
and
push
sub
gs
shrb
popa
or
jmp
or
jg
mov
dec
and
fstpl
das
inc
cmp
mov
push
sti
jns
adc
push
movsb
mov
out
test
or
pop
mov
cmp
in
dec
jo
bound
cmpsl
and
jp
cmp
sbb
and
loop
cmp
sbb
xchg
xor
jmp
mov
push
and
fisubrl
lods
pop
push
cmp
dec
adcl
sub
js
sbb
add
lcall
push
dec
cmpl
pop
icebp
cltd
sbb
mov
push
scas
push
add
xor
push
mov
dec
push
xchg
add
in
mov
movsb
add
cmpsl
movsl
mov
jecxz
test
push
push
clc
mov
pop
mov
mov
dec
dec
test
mov
aam
inc
outsb
inc
jne
and
aam
or
scas
sarl
pop
ss
mov
imul
pop
push
jae
jb
pop
lcall
cmp
push
popa
jp
or
push
dec
movsb
sbb
jle
xchg
xchg
pop
pop
jmp
mov
pop
out
or
cmc
pushf
and
push
cmp
sbb
pushf
sbb
es
mov
scas
cmp
lret
push
sbb
cmp
je
inc
lcall
movsb
in
push
sub
lahf
pop
jno
js
adcb
gs
fs
rolb
fists
testb
xchg
cmp
rorb
inc
mov
cmpl
imul
push
jmp
sbb
sbb
data16
insl
push
inc
ficompl
mov
cmp
incb
pop
jl
dec
cs
pusha
lods
jg
mov
or
in
mov
inc
daa
pop
arpl
cmp
add
pop
andb
fxch
int
xor
ds
nop
cwtl
mov
ljmp
xor
dec
add
push
std
mov
pop
mov
xchg
dec
mov
into
loopne
add
call
addb
add
adc
scas
and
lods
mov
or
inc
xchg
sahf
or
dec
and
aam
testw
scas
ror
mov
in
shr
les
cmp
mov
dec
jg
cltd
and
jns
call
pop
adc
js
popf
loopne
into
dec
mov
ljmp
shlb
into
es
sbb
test
insl
lahf
and
nop
ffreep
lahf
lret
add
jge
rclb
movsl
pop
jmp
adcl
lods
rclb
bound
pop
add
out
or
test
shl
jle
in
in
mov
into
jge
pop
insb
ds
push
filds
gs
adc
rcll
adc
iret
adc
das
sbb
rcrb
cmp
add
fdivl
scas
sbbl
fstpl
ror
mov
fdivrs
shll
shll
fmul
xchg
lds
jns
movsww
gs
sahf
jns
xor
stos
push
in
xor
lock
mov
xor
rorb
scas
insl
lea
sahf
outsl
test
icebp
sbb
pushl
out
mov
adc
push
jge
push
loop
xchg
lods
movsb
test
or
fwait
cmpl
and
sub
inc
bound
cld
or
xor
jnp
cmp
jle
pop
jb
dec
rclb
add
or
add
aam
je
sub
outsb
adc
addr16
and
cmpl
outsl
pop
pop
les
cmpsb
sbb
jmp
push
mov
push
loope
loopne
popf
ja
sub
add
pop
iret
pop
adcb
outsb
sub
or
cltd
insl
xchg
ds
dec
push
lret
mov
ljmp
fildll
add
cmpsb
mov
vpshlq
pop
dec
push
mov
imul
push
fs
mov
sub
inc
push
xor
xchg
call
adc
mov
xor
sbb
xchg
nop
lods
inc
dec
inc
repnz
stos
fldl
fucomi
insl
push
mov
cld
int
mov
push
insl
loopne
jb
pop
xorps
xor
push
in
mulps
mov
inc
out
and
add
adc
sub
subb
inc
lcall
pop
gs
test
push
pop
in
hlt
loopne
mov
insl
fadds
gs
stos
mov
lret
push
in
repz
adc
sub
push
sbb
fisubrs
sub
push
add
cwtl
inc
out
imul
and
sub
xor
or
add
in
cmc
test
inc
dec
mov
loop
inc
clc
sbb
icebp
mov
cli
mov
push
lahf
pop
mov
in
jle
test
xor
and
fld
loop
jl
mov
mov
jnp
gs
sbb
xchg
xchg
xor
push
imulb
out
dec
mov
inc
sub
mov
inc
mov
pop
push
mov
xor
sbb
cmp
adc
dec
sbb
adc
lods
mov
aas
cmp
jmp
fmull
mov
inc
xor
dec
xchg
mov
xor
push
in
sbb
push
adc
ret
and
imul
add
pop
aaa
sub
or
xchg
sub
or
sti
je
cmc
xor
mov
fdivrl
cmp
ljmp
push
std
and
xor
jmp
mov
push
int3
mov
add
adc
scas
out
int3
xchg
push
adc
push
popf
xchg
mov
or
nop
fldenv
shl
lret
pop
inc
mov
pusha
loope
dec
fisttpll
pop
pop
lods
dec
mov
dec
mov
push
sti
xchg
repnz
mov
and
rcrl
xor
jge
mov
cmp
aas
add
das
push
jmp
mov
add
cmp
pushl
pop
sub
xchg
push
subl
mov
dec
in
lds
pop
xchg
mov
add
stos
mov
xlat
imul
jo
xchg
pusha
stos
mov
mov
and
insb
jns
sbb
cmpsb
ss
xchg
mov
cmpsl
loopne
sub
jg
scas
insb
mov
add
imul
addr16
pop
ljmp
and
fmuls
gs
jae
lret
mov
push
pop
jbe
into
aaa
xor
iret
mov
fcmovnu
imul
xor
repnz
pusha
mov
iret
daa
js
repz
out
cmpsb
lret
cli
push
bound
outsl
dec
in
mov
incb
dec
mov
mov
mov
les
aam
dec
out
mov
add
fcoms
mov
and
and
xor
les
and
stos
repz
lcall
popa
lea
dec
jmp
aaa
and
movsl
mov
int
je
xchg
sub
enter
cmp
add
cmp
cltd
lcall
idivb
dec
arpl
mov
xor
or
sbb
pop
push
jmp
iret
out
jl
or
rcrl
iret
mov
stos
adc
mov
bound
ret
mov
pop
mov
push
clc
ror
mov
push
andb
loop
and
jnp
enter
dec
dec
subb
repnz
push
aad
and
add
and
cmp
arpl
test
inc
dec
push
test
mov
jmp
out
lret
lret
call
mov
xchg
stos
rcrb
lea
aaa
ja
sub
jbe,pt
push
or
cmpsl
cli
sar
bound
loope
stos
mov
ja
sti
hlt
and
pop
mov
iret
xor
aaa
cmpsl
push
and
mov
call
mov
jo
push
cli
inc
je
into
adc
test
dec
fisubrl
add
shlb
pop
dec
outsl
pop
pop
fwait
pop
dec
mov
mov
push
mov
stos
mov
jp
mov
jb
jp
nop
push
jge
je
mull
test
sarl
mov
lret
scas
mov
mull
push
orb
add
xlat
movsl
cmp
cmp
mov
popa
mov
cmpsb
popa
insl
xor
add
shrl
je
push
mov
dec
shll
int
addr16
notb
or
cwtl
lret
scas
mov
sbb
push
push
jne
das
fdivrl
or
fs
sub
xor
xchg
lea
js
fcompl
adc
mov
mull
sub
sub
pop
loope
fwait
dec
aas
addr16
cmpsb
xor
ds
sub
fdivs
icebp
pop
pop
pop
repz
adcl
loopne
jo
clc
inc
test
icebp
shlb
mov
call
and
enter
adc
imul
sub
xor
add
arpl
imul
out
xorl
test
inc
shrb
adc
pop
sub
sub
ja
mov
or
sub
xchg
movsl
push
cmc
clc
xchg
push
cmpsb
lock
mov
push
mov
add
aaa
and
ss
dec
cmp
orb
cmp
repz
leave
mov
ljmp
nop
pop
xor
shl
pop
dec
cmpsb
stc
adc
fistpl
mov
data16
xchg
ljmp
enter
hlt
fistpll
and
in
dec
aas
xor
push
jl
jno
cmp
lcall
rep
call
jg
scas
add
imul
movsl
rorb
push
dec
mov
lods
sar
fisttps
insb
mov
outsb
jnp
enter
stc
cmp
push
out
adc
out
aas
outsl
test
push
idivl
divl
mov
lret
leave
movsl
ret
add
mov
push
inc
arpl
rcrb
and
in
cmpsl
cli
pop
dec
pop
add
loopne
rorl
pop
out
aad
repz
ds
jo
cmp
inc
sarb
adc
not
adc
sbb
sbbb
inc
hlt
cmpl
push
stos
hlt
and
push
sub
les
or
xchg
nop
push
add
xor
xlat
sbb
adc
dec
out
mov
ror
jg
sub
xor
jle
and
cmp
jecxz
in
bswap
cmp
or
jnp
mov
pop
pusha
push
mov
dec
out
and
fcomps
leave
icebp
ja
mov
or
mov
cwtl
adcl
cld
ss
dec
cmpsl
movsl
lahf
dec
pop
outsl
jg
ret
pushf
cmp
cltd
popf
les
mov
jmp
mov
xor
mov
mov
or
sahf
pop
jae
mov
pop
movsb
xor
adc
test
sahf
add
add
or
xor
sub
enter
dec
push
jge
mov
and
je
sub
pushf
test
rclb
jmp
jecxz
repz
cs
push
and
loope
pop
les
sub
xchg
mov
and
andl
stos
add
adc
sbb
ja
jne
pop
orb
adcl
xor
push
shrl
xchg
inc
enter
pop
cmp
subb
pop
shl
pop
sbb
out
inc
stos
scas
push
pop
gs
stos
pop
fistpl
push
cltd
push
stos
sub
push
or
mov
jb
adcl
aam
testl
push
movsb
push
test
pop
pop
sbb
sti
mov
mov
ss
and
scas
aam
adc
push
stos
popf
int
mov
icebp
lock
inc
fwait
iret
xchg
adc
jecxz
inc
incl
inc
ret
ljmp
fs
popl
lds
mov
std
adc
xchg
xor
mov
pop
cmp
aam
fimull
jnp
push
in
testb
add
mov
cmpsb
les
push
shl
fistps
notb
stos
mov
es
or
mov
mov
sub
push
mov
jne
add
arpl
fildl
in
mov
push
mov
movsl
dec
sbb
or
loopne
cmc
dec
sub
cmp
lods
jecxz
dec
insl
jns
sbb
jb
cmp
mov
lret
mov
nop
dec
mov
hlt
pop
cmpsb
pop
jmp
mov
movl
jae
sbb
inc
cld
cmp
ljmp
jne
fdivp
ret
fs
cmp
in
ja
movsb
subl
add
inc
pop
inc
sub
dec
push
adc
xchg
and
out
mov
ret
sub
or
in
jo
dec
hlt
in
push
fstps
add
sbb
add
ljmp
outsl
xchg
mov
bnd
stos
sub
insb
mov
mov
sbb
test
jns
push
dec
pop
mov
fildl
push
cld
add
inc
fists
lds
imul
shrb
xor
rclb
mov
ret
cld
sub
aad
jne
adc
jo
lods
outsl
mov
add
out
lods
pushl
jg
adc
enter
nop
ljmp
aad
xchg
jb
jbe
addb
lods
js
pop
push
xchg
pop
daa
jge
int
pop
pusha
ja
cltd
jnp
adc
imul
push
jl
adc
jmp
cmp
pushl
lret
jecxz
shlb
mov
dec
cmc
cwtl
xlat
push
mov
pop
out
adc
mov
std
mov
ss
fstl
pop
iret
out
lea
ss
cmpsl
test
into
iret
cwtl
sar
and
xor
movsl
outsl
popa
test
xchg
inc
repnz
mov
mov
andb
pop
pop
fadds
dec
aaa
add
cmp
lcall
in
inc
adcl
xchg
loop
sub
lret
xchg
sub
sub
adc
insl
xlat
stc
aaa
sub
out
xchg
or
pusha
fisttps
sub
push
icebp
ret
insl
mov
mov
sarb
pop
sub
or
fcomps
popf
push
iret
mov
fs
push
and
jns
js
jp
xor
inc
mov
and
dec
and
in
cmp
jecxz
or
xchg
add
cmp
loop
sbb
lds
icebp
jo
aaa
and
popa
pushf
inc
movsb
daa
push
push
adc
mov
mov
imul
xchg
imul
and
push
sub
imul
xchg
ljmp
lcall
jle,pt
or
repz
loope
dec
and
popf
mov
imul
xlat
lods
mov
test
int
out
pop
notl
or
insl
aaa
add
adc
scas
sbb
mov
lcall
cmc
lods
sbb
sti
loopne
mov
jmp
nop
jecxz
mov
pop
pusha
cmp
xchg
xor
movsb
in
icebp
fistl
ret
sbb
ror
test
test
or
push
mov
fucomp
inc
dec
cld
cltd
jmp
add
movsl
cmp
xor
fisubl
cmpb
jmp
jb
sysret
push
add
add
int3
jmp
sub
xchg
and
lret
adc
dec
nop
pop
lods
orl
lcall
push
into
adc
sbb
sbb
fwait
push
test
push
jne
xchg
popf
push
mov
lds
clc
and
loope
lods
cmp
pop
loop
jl
nop
jmp
cmp
push
repz
arpl
inc
push
jmp
ds
or
and
cmc
inc
dec
push
test
mov
test
aam
decb
icebp
pop
roll
repnz
add
push
or
adc
inc
movsl
add
sub
or
in
xchg
incb
loop
in
mov
push
cs
xchg
dec
lock
stos
rclb
push
pop
movsb
mov
mov
pop
pop
pop
add
cmp
sahf
shll
out
ret
ljmp
xchg
leave
xor
push
pop
pop
cmpsb
inc
or
cltd
jg
les
dec
mov
mov
mov
dec
pop
mov
mov
mov
cmpsl
movsb
or
shlb
or
push
jo
dec
xchg
adc
inc
sar
push
shld
in
jmp
fs
es
inc
xor
dec
mov
sbb
int
mov
lcall
mov
shlb
in
mov
scas
mov
pop
bswap
imul
and
sub
mov
cs
sbb
sbb
mov
jbe
rolb
jbe
jl
sbb
enter
outsb
inc
dec
loopne
sub
xchg
ret
aad
mov
jl
sbb
xchg
push
lahf
loope
in
cltd
out
imul
jbe
inc
and
out
cmc
int3
inc
mov
andl
and
and
jl
mov
int
mov
dec
mov
xchg
mov
lds
jo
shll
jnp
xor
sbb
or
nop
push
adc
fiadds
xor
sbb
js
hlt
fwait
out
js
sub
cmp
test
insl
or
dec
mov
outsb
mov
jae
cwtl
mov
lret
std
out
xchg
add
mov
jo
jl
outsb
andb
in
leave
push
xor
push
add
cmpl
push
aas
inc
cmc
adc
mov
ja
sub
sub
jns
fwait
jg
and
pop
adc
dec
push
jmp
adc
cmc
sti
incb
push
nop
xor
cmp
insb
es
cmp
stc
in
outsl
les
outsl
daa
imul
xor
xor
adc
xchg
aas
jp
roll
sub
nop
xchg
dec
cmp
push
inc
xor
fsts
mov
push
xchg
popf
xor
or
jne
cwtl
in
cwtl
das
and
xchg
cld
and
aad
add
inc
pop
push
in
sub
imul
addl
in
jle
xchg
jle
mov
dec
xor
lds
push
lea
xchg
xchg
sub
test
or
aas
xor
and
jae
jge
aas
fsubr
scas
mov
jecxz
outsl
lods
add
insl
ljmp
fsubrl
rcrl
popf
fistpl
es
inc
push
jecxz
jo
rolb
jae
push
add
mov
mov
pop
xor
dec
sub
or
or
inc
mov
or
fisubs
jno
popa
add
imul
dec
mov
mov
js
lods
fsubl
pop
push
inc
fmull
sub
jo
or
pop
adc
or
test
les
hlt
std
out
adc
test
inc
pop
sahf
out
lcall
jge
ss
loope
repnz
push
gs
xchg
stos
push
out
xor
fcmovne
inc
scas
lods
lret
stc
mov
sbb
imul
add
lret
icebp
mov
dec
push
loope
shl
sbb
sub
out
push
and
lahf
push
lock
loopne
lods
pop
jmp
push
adc
xor
aam
xor
iret
pop
cmp
popa
jmp
jp
sti
ljmp
mov
pop
sub
or
pop
sub
xor
mov
push
jbe
mov
jbe
xor
hlt
sbb
jnp
sbb
cmp
ljmp
push
sub
adc
scas
pop
push
call
js,pn
pop
jae
xchg
rcll
loope
loope
shl
out
push
pop
addr16
pop
div
mov
or
insb
sbb
arpl
push
scas
lea
popf
adc
movsb
xor
popa
jae
lods
push
cmp
aam
gs
lret
jne
fnsave
or
pop
fsts
ret
push
gs
add
pop
cmp
mov
jns
and
adc
jecxz
or
add
sahf
jns
inc
lcall
push
jg
ret
fimuls
subl
movsl
and
pop
adc
mov
adc
fstl
sbbb
jge
jae
es
pop
call
ret
add
out
mov
adc
addr16
cmp
repz
out
jp
mov
and
pusha
divb
fisubrl
adc
pop
inc
or
cs
mov
cmp
dec
mov
xchg
in
or
outsb
inc
dec
call
int
iret
rorb
jmp
fistpll
mov
inc
xchg
xor
jo
or
jbe
xor
mov
inc
fxch
rorb
pop
pop
sahf
rcl
cltd
sub
add
fnstsw
cmp
sbb
loopne
scas
sbb
cmp
movsl
inc
lret
in
in
adc
movl
leave
pop
mov
and
xchg
and
mov
call
or
dec
xor
out
sub
and
pop
mov
stos
jp
jge
lcall
push
mov
sbb
lods
mov
jl
mov
fwait
add
sub
fiadds
mov
in
pop
cmp
cmp
leave
jno
jae
xchg
add
pop
xchg
pusha
lods
push
cli
mov
test
rcll
xchg
fldl
movsl
cmp
cbtw
pop
pop
popl
pop
or
mov
ret
jbe
pop
jbe
and
dec
scas
xor
mov
push
outsl
rcrl
fldl
out
rol
dec
pop
inc
bound
jmp
call
cmc
mov
adc
scas
outsl
sub
dec
stos
out
cld
sub
push
inc
sbb
add
add
xor
mov
loope
sbb
mov
xlat
popa
sbb
testl
add
and
lea
inc
mov
adc
addr16
aaa
scas
and
jnp
je
push
test
cltd
push
or
push
fsts
sti
mov
ljmp
xor
int
mov
xchg
clc
jae
clc
lea
outsl
lahf
sarl
fmuls
cmpsb
jp
rolb
mov
sbb
dec
cmpsb
mov
test
rcl
jne
dec
insw
lahf
daa
push
les
popa
dec
jb
xchg
or
outsl
shll
sub
mov
gs
xchg
mov
imul
or
bnd
call
add
cmpsb
lret
inc
jae
pop
pop
in
push
jmp
inc
and
adc
mov
push
push
dec
dec
jecxz
add
sub
pushf
mov
call
fisttps
mov
lret
sub
cs
xor
rcrb
or
lods
ss
inc
sbb
scas
inc
lods
arpl
fwait
and
push
xchg
mov
push
xor
jae
rcr
in
std
jns
cmp
in
mov
add
sbb
or
mov
testb
mov
xor
shl
in
push
into
sbb
xchg
cmc
rcrl
aaa
mov
arpl
shl
test
push
pop
add
mov
inc
dec
mov
mov
fistpll
xchg
adc
lods
in
xchg
test
add
xchg
stos
mov
pushf
jbe
xchg
inc
cmp
adc
fidivrs
xchg
sahf
xor
sub
mov
push
scas
popf
testl
xchg
fcoms
or
mov
lods
add
cld
in
xor
or
xchg
fwait
lahf
and
mov
pusha
rcrb
cmp
push
xor
push
mov
aas
pusha
mov
add
ja
xor
shlb
pop
mov
mov
mov
push
dec
pop
mov
jmp
stc
arpl
stc
lret
fsubr
insb
sbb
sbb
dec
push
sbb
xchg
xchg
dec
sub
addb
insl
ret
cmp
fucomi
adc
cld
fsubs
jno
out
xor
mov
jle
test
sub
jnp
inc
pop
aam
cmpsb
inc
xlat
je
pushf
fwait
lds
ss
mov
scas
clc
pop
cmp
std
sbb
cmp
mov
jl
scas
out
jbe
push
jecxz
call
gs
cmc
cltd
sbb
jmp
icebp
mov
dec
sub
lcall
and
loope
or
lcall
roll
cmp
ret
xchg
les
insl
xchg
inc
mov
xlat
mov
fstpt
pushf
jecxz
sub
out
jbe
test
adc
jmp
add
scas
xchg
mov
aam
mov
js
les
popl
inc
notl
in
push
arpl
lds
sub
out
xchg
mov
xor
mov
ret
jl
jecxz
out
mov
mov
pop
mov
xchg
in
adc
mov
xchg
push
or
mov
add
mov
pop
xor
data16
notl
arpl
sbb
push
mov
scas
in
sub
pop
mov
push
mov
and
push
cmp
jp
mov
lds
sbb
je
xchg
xchg
cwtl
test
mov
cmp
xor
push
ja
sti
or
pop
mov
stos
fstps
outsl
jo
mov
adc
fidivs
es
dec
sub
mov
mov
mov
cmp
pop
mov
push
roll
xchg
sbb
xor
sub
in
fmuls
pop
rcrl
add
or
add
lret
jae
inc
stc
jns
ficomps
mov
pushf
popf
lock
adc
xchg
xchg
fwait
pop
jle
mov
mov
inc
mov
movb
sti
inc
sahf
daa
push
shrb
jg
add
in
jnp
and
fsubl
jb
inc
mov
clc
mov
out
add
leave
cmc
fsts
xlat
andb
out
mov
mov
inc
sbb
add
dec
cmc
cli
ret
shll
out
cld
ret
xchg
jb
mov
clc
ss
dec
aaa
xlat
mov
jmp
inc
dec
cmpsl
push
clc
testb
repz
pop
icebp
das
push
xchg
aaa
or
bound
dec
push
mov
jnp
mov
xchg
cmp
ret
and
int3
loopne
cmpsl
or
xor
stc
outsl
jo
scas
sarb
cmpsb
push
and
inc
adc
mov
sub
std
aad
aaa
xchg
mov
or
pop
cmc
addr16
push
mov
mov
jg
jne
push
addr16
add
adc
inc
outsb
faddl
cmp
outsl
aam
cmp
jne
lods
push
mov
inc
cwtl
add
pop
enter
cmp
js
daa
repnz
sbb
or
clc
test
or
xchg
jo
out
pop
or
push
mov
inc
add
sub
stos
les
nop
test
mov
jge
in
arpl
rcll
loope
xchg
dec
mov
aas
sbb
fsubr
or
jl
xor
loopne
mov
pop
push
cmpsl
clc
cs
jmp
xor
dec
mov
inc
mov
xor
into
adc
sbb
push
and
inc
mov
dec
popa
fistpll
fsubs
sub
ret
jmp
fidivl
and
lea
pop
sub
fs
ret
push
les
es
or
mov
jne
dec
adc
mov
inc
add
or
adcl
fistpll
push
or
not
inc
dec
mov
sarl
loopne,pt
push
cmpb
test
push
hlt
shll
add
lods
cmp
dec
ret
jnp
out
xchg
sbb
mov
dec
push
xor
fucomi
push
mov
inc
mov
lods
add
out
mov
xor
inc
jg
negl
sub
jo
out
inc
sub
out
call
jne
in
mov
mov
cmp
add
pop
mov
adc
push
mov
push
xor
rorb
jle
mov
idivb
push
dec
cmc
jb
pop
mov
mov
push
jle
mov
mov
insb
cs
inc
jle
lret
jg
mov
inc
subb
add
mov
xor
icebp
scas
inc
mov
sub
jmp
cltd
shlb
or
mov
mov
punpcklwd
push
movsl
or
xchg
pop
mov
ljmp
idivl
mov
cmpsl
clc
stos
inc
jg
mov
testl
xor
fs
push
dec
dec
adc
mov
mov
dec
inc
inc
xor
imul
sub
mov
sbb
inc
nop
mov
xor
mov
or
cmp
ret
ret
inc
roll
cwtl
mov
jns
sbb
sbb
enter
int
add
push
lods
xchg
lods
lahf
pop
mov
xlat
in
jl
insl
ja
and
push
mov
push
cli
jle
dec
adcb
cmpsl
and
or
mov
in
xor
mov
dec
repz
mov
xchg
fstpt
add
fnstenv
xchg
in
dec
insl
push
leave
mov
lcall
push
das
fwait
xchg
aaa
out
adc
arpl
pop
xor
iret
sub
loopne
or
cmp
rorl
xchg
mov
in
dec
add
aad
ds
xlat
jp
pushf
loop
add
mov
cmp
adc
in
pop
mov
sti
add
push
mov
pop
adc
test
test
leave
dec
pop
ja
or
adc
add
cmp
sub
pop
ja
mov
out
xorb
and
xor
loop
mov
mov
aas
imul
or
xlat
test
in
mov
repnz
stos
out
or
lcall
inc
mov
loopne
movsl
lock
xchg
pop
ss
mov
xor
mov
and
out
iret
adc
out
into
inc
stos
jno
mov
add
adc
push
int
cmpb
push
cmp
mov
dec
push
sub
pushf
stos
add
andl
dec
mov
in
xchg
outsb
lret
hlt
mov
or
mov
jg
out
repz
pop
jbe
mov
int3
mov
orb
mov
bound
and
jg
xor
sbb
fcompl
lcall
pop
push
xorl
xor
aaa
rorb
clc
mov
and
je
aas
pop
in
in
pop
fsubrp
dec
push
mov
mov
mov
fdivr
sbb
out
mov
sar
mov
outsb
push
into
cmp
rcl
lcall
or
push
dec
cld
push
push
jl
je
les
pushl
and
cmpl
icebp
xchg
add
loop
pusha
sub
mov
inc
mov
iret
hlt
mov
xchg
mov
mov
fdivr
cld
mov
push
loope
bound
stos
insl
sub
inc
xor
adc
push
or
mov
or
dec
outsl
insl
jge
lock
adc
dec
lea
std
push
repz
mov
mov
mov
jecxz
jo
xor
pop
pop
inc
mov
mov
out
pushf
frstor
stc
push
andl
lcall
cmpsb
das
xor
cmp
mov
scas
ds
mov
aam
call
fisubl
mov
xor
leave
les
cmp
enter
push
sub
addb
stc
mov
inc
gs
pop
addr16
ljmp
push
test
aad
lods
push
push
insl
mov
mov
ja
and
into
dec
mov
out
mov
mov
js
jp
aad
and
pop
xor
cmp
in
add
sub
fldl
into
fisubrl
sbb
jle
jbe
cmpsb
popa
fimuls
aaa
cmp
jg
fidivrl
push
mov
ljmp
mov
addr16
lea
fistpl
sub
fisttpl
cmp
sbb
xor
enter
xchg
in
inc
inc
or
into
sbbl
jae
or
cmp
hlt
in
ljmp
lds
flds
push
movsl
int
stos
insb
xchg
jb
sti
das
xchg
iret
lahf
mov
or
adc
lock
data16
mov
aas
mov
leave
sbb
loope
add
inc
xchg
and
xchg
add
mov
pusha
shrl
inc
addb
or
mov
out
push
clc
pop
mov
adcb
test
mov
add
test
outsb
cmp
ret
ljmp
xor
jae
testb
adc
xor
xor
sub
xchg
in
lea
and
sbb
jae
mov
pop
pop
mov
stos
xor
sub
jecxz
aam
imulb
pop
mov
pop
xor
pop
pop
popf
int
insb
jnp
xor
popa
push
bound
dec
roll
aad
cmp
ret
addr16
outsl
cmp
sbb
inc
sbb
sahf
add
xchg
xchg
fisubrs
mov
push
sbb
push
sbb
sahf
ret
sbb
mov
aad
cs
lcall
pop
insl
call
leave
cmc
jae
ror
movsl
addr16
mov
cmpsl
xchg
frstor
add
adc
mov
mov
cmp
push
jae
pop
sahf
jl
jb
in
repz
icebp
ds
pop
mov
cmp
sub
inc
imul
iret
inc
mov
pushf
ja
out
aam
mov
pop
shll
cwtl
fwait
jmp
sub
jno
jb
dec
mov
dec
pop
test
ficoms
clc
in
add
push
add
jmp
mov
rcrb
test
arpl
addr16
adc
mov
mov
xchg
xor
sub
pop
stc
sbb
mov
mov
dec
or
add
jg
mov
test
out
mov
rcll
push
dec
neg
mov
dec
jae
fidivrs
push
inc
adc
sbb
arpl
test
lods
mov
pop
or
mov
out
push
lock
loopne
jnp
lahf
popf
pop
int3
dec
adc
jecxz
pop
scas
add
jns
mov
sub
je
mov
inc
std
dec
dec
inc
sub
cmp
or
xlat
les
push
mov
sub
sub
jbe
in
mov
loope
stos
jne
movsb
les
lahf
pop
int
xchg
dec
out
push
xchg
imul
mov
inc
mov
sub
pop
pop
imul
addr16
shrb
aad
dec
mov
std
mov
in
testb
subb
push
es
sti
add
pop
sub
and
pop
in
lcall
adc
xchg
ret
leave
sub
xor
pop
out
pop
xor
loop
mov
js
mov
dec
jl
inc
jb
lret
pop
xor
pop
sbb
in
mov
jo
leave
jno
pushf
inc
mov
fmul
or
daa
mov
aas
cmp
push
jo
lds
pop
pushf
xchg
jmp
std
fcoml
add
inc
mov
push
shrb
mov
jmp
cwtl
pusha
mov
das
cmp
testb
xor
sarl
leave
cmp
mov
out
xor
cmpsl
cmpsb
movsb
xchg
mov
pop
test
out
mov
dec
mov
ja
push
lret
push
scas
ret
pop
sbbl
dec
or
jne
inc
xlat
loope
jnp
and
cltd
fcomip
inc
aas
sbb
or
push
pop
nop
adc
addr16
and
xchg
test
or
sbb
test
sub
fnstenv
repz
pop
cmpsl
pushf
inc
mov
mov
pop
leave
sahf
test
cmc
fidivl
sub
mov
push
inc
jnp
fcomps
jge
sub
jnp
scas
mov
movsb
loop
jbe
mov
cmp
icebp
push
pop
fwait
insl
mov
cli
gs
neg
xchg
mov
fs
test
push
hlt
pop
lret
push
cmp
or
imul
movsl
repz
out
scas
jns
jne
lahf
aaa
mov
sbb
jle
xchg
mull
sahf
scas
cltd
bound
and
add
mov
inc
inc
bound
sbb
dec
int
rcrb
xor
ss
pop
jbe
xchg
hlt
sub
nop
sub
xchg
dec
mov
push
push
mov
test
les
and
leave
mov
jp
je
cli
xchg
rcll
inc
adc
stc
dec
arpl
decl
ss
lds
ss
out
inc
push
jg
clc
push
fidivrs
arpl
mov
xor
lock
mov
sub
xchg
push
loop
movsb
popf
cmp
orl
adc
shlb
inc
ret
push
and
fbld
mov
std
mov
lods
jmp
xchg
in
push
cmp
mov
mov
mov
push
decb
pop
cli
push
cmpsl
inc
jb
cmp
jecxz
sbb
fsubrs
mov
pushf
or
inc
sbb
pop
ficoms
jl
xchg
lea
or
jne
push
mov
ficoml
inc
sub
je
mov
mov
lock
mov
loop
mov
daa
mov
jo
mov
enter
dec
std
popf
out
xchg
add
bnd
ret
in
dec
jecxz
xor
jbe
jle
adc
and
sub
mov
add
lret
mov
roll
mov
and
xor
sar
lods
pusha
dec
adc
xchg
imul
arpl
sub
lock
xchg
imul
jns
fisttpll
in
xor
mov
xchg
xor
xchg
movsb
test
mov
and
rclb
fbld
dec
push
adc
test
push
fidivrs
ss
in
aaa
inc
mov
cmp
and
xchg
dec
es
fnstcw
adc
mov
xlat
cmpsl
dec
pop
outsb
and
popa
inc
addr16
xor
mov
test
shr
mov
cli
sub
or
mov
repnz
dec
cld
cs
pop
pop
inc
rcrb
xor
daa
xchg
xchg
loop
mov
inc
les
or
jp
cld
pop
aad
pop
fiadds
arpl
ss
pusha
jg
mov
or
pop
out
test
pop
mov
pop
mov
js
out
fwait
es
stos
dec
jae
jp
cmp
xor
jbe
xor
xor
ret
testb
mulb
dec
jge
cmp
xchg
jne
aad
mov
and
cltd
cmp
inc
cmp
push
pop
aaa
and
sbb
or
or
mov
iret
cmp
jge
mov
lret
pop
mov
xchg
and
pop
or
xchg
mov
in
gs
xchg
xchg
mov
das
xchg
jl
bound
fldcw
adc
mov
adc
ret
lock
add
jecxz
xchg
add
adc
jbe
outsl
rclb
test
gs
ficompl
sub
enter
and
pop
pop
std
xchg
mov
cmp
aaa
cmpsl
sarl
daa
sbb
insl
test
ss
sbb
stos
scas
fucomp
cmpsb
inc
xchg
cli
push
and
into
addl
popa
jg
cmc
inc
pop
arpl
lea
clc
insb
mov
stos
mov
daa
imul
push
mov
mov
mov
jmp
sbb
fstpl
mov
pop
push
dec
dec
scas
les
mov
jnp
mov
test
pop
cmp
lahf
push
lea
xchg
addr16
inc
aad
andl
mov
scas
adc
stc
sub
xor
pop
loop
ljmp
not
cltd
sbb
pop
xor
iret
xchg
imul
sbb
and
mov
ljmp
je
in
mov
dec
xchg
ret
scas
mov
rcll
fs
push
aad
sub
sbb
jb
lahf
xchg
cli
repnz
push
aas
je
add
dec
insb
rclb
pop
lahf
insb
or
cmpsb
xchg
jo
push
add
imul
sbb
bound
mov
push
sbb
mov
xchg
push
push
inc
cwtl
fcmovb
dec
into
and
mov
or
lods
movsl
dec
cmc
mov
cmc
cs
inc
jno
sbb
out
pop
fnsave
xchg
pushf
push
les
push
lret
xor
enter
stc
pusha
cs
repnz
testb
push
inc
das
stos
movsb
stos
aam
sbb
mov
push
lds
or
je
push
ja
jge
fstps
test
xchg
and
cld
adc
nop
cmp
scas
repnz
frstor
xor
jmp
packuswb
jp
or
mov
sbb
sbb
or
jbe
sub
es
jb
shl
pushf
and
cltd
xchg
mov
push
lret
out
sbb
adc
dec
inc
lret
into
test
adc
cmp
xchg
push
mov
in
mov
adc
and
adc
mov
xchg
adcb
and
mov
jecxz
data16
xor
inc
jecxz
lahf
jp
dec
std
in
mov
pop
dec
mov
xorb
test
es
lods
ror
push
lods
pop
movsb
int3
xchg
es
daa
xchg
jo
jnp
cmp
jmp
mov
push
imull
pop
arpl
sahf
in
push
lret
dec
jp,pn
mov
xchg
sahf
mov
loope
mov
loopne
push
pusha
pop
scas
xchg
xchg
pop
cmp
sub
std
push
xchg
sbb
movsl
iret
aad
in
push
inc
inc
add
mov
in
cmpsb
cli
pop
cmp
sbb
out
adc
cmp
pop
xor
shlb
cmpb
adc
fcmovb
push
or
push
jl
mov
stc
movsb
mul
and
outsb
mov
cli
mov
aam
aad
sbb
scas
and
clc
inc
sub
aam
popa
stc
aaa
popl
add
in
mov
mov
addl
and
mov
sub
inc
out
cmp
or
repnz
enter
dec
subl
jb
loope
lret
movsb
imul
xchg
cli
pop
repz
jge
and
arpl
je
shll
js
repnz
movsl
inc
mov
mov
rorb
jae
data16
and
ljmp
scas
enter
xchg
pop
dec
lock
jns
mov
mov
out
call
pop
sbb
inc
push
mov
mov
bound
clc
adc
xor
pop
cmp
dec
pop
ja
mov
arpl
mov
mov
push
negl
xlat
pusha
into
cmp
ret
xor
push
mov
jmp
push
mov
imul
xchg
ds
mov
jecxz
iret
dec
pop
daa
cwtl
pop
sbbb
add
pop
nop
xchg
xlat
clc
mov
sbb
stos
add
mov
outsb
mov
shrb
sbb
jg
leave
fdivr
cmpsb
push
aad
mov
subl
cmp
js
push
dec
in
shl
adc
mov
cs
and
jo
ds
jae
and
aaa
mov
out
add
or
add
push
out
mov
ss
cmpsb
addr16
adc
dec
js
out
pushfw
daa
pop
inc
mov
les
add
and
pop
jo
leave
sbb
sbb
mov
mov
test
xchg
lea
out
cmp
push
xlat
pusha
jg
sub
cmp
xchg
push
jo
sub
sub
mov
mov
out
jg
jno
lcall
push
sti
mull
adc
adc
dec
lock
jno
into
push
cltd
sub
mov
push
fadd
test
jb
insl
cwtl
fidivrs
jg
xor
repnz
sbb
mov
fists
jne
out
xor
dec
jmp
pop
dec
dec
jmp
ss
and
xor
pop
nop
inc
lcall
cmovns
inc
lods
jne
stos
std
ljmp
mov
push
mov
pop
pop
aad
test
filds
ss
test
insb
cmp
ja
xchg
xchg
test
dec
dec
leave
add
dec
outsb
mov
ljmp
jecxz
sbb
or
int
gs
dec
inc
pop
jns
dec
dec
pop
dec
pushf
popf
insb
rcrb
inc
aam
in
dec
jb
dec
sbb
inc
cmp
getsec
push
inc
int3
add
mov
push
ds
out
addr16
xor
fisubs
or
cli
addb
xchg
shll
leave
mov
loop
mov
mov
addr16
hlt
pop
push
sub
push
xorl
inc
sahf
insl
sahf
sbb
sub
ljmp
rol
xor
sub
jecxz
fcmove
iret
lock
sbb
notb
fisubs
fnstcw
sub
add
lret
xor
mov
mov
out
add
or
stos
call
cltd
addr16
ficompl
xor
cld
push
push
in
jp
icebp
or
mov
in
arpl
sbb
adc
jl
notb
ja
into
dec
jne
pop
data16
mov
or
cmc
sbb
pop
push
jno
not
cmp
repz
fisttps
repnz
mov
add
test
mov
and
sarb
sahf
enter
sbbb
mov
mov
mov
shrl
cwtl
icebp
xor
pop
and
loop
lods
jge
movsl
rcl
call
outsl
cmpsl
inc
mov
mov
xchg
dec
jge
jl
sbb
loop
pop
arpl
ljmp
inc
in
mov
sahf
out
mov
stos
mov
and
adc
gs
scas
dec
lods
ss
sub
movsb
jecxz
std
push
pop
sbb
scas
loop
add
lea
lret
dec
and
in
xchg
test
test
mov
cld
or
cld
cmp
dec
fiaddl
jmp
in
shll
insb
and
ss
push
pushf
int
mov
mov
pop
cli
cmp
add
sahf
or
call
sbb
lret
outsl
loope
ret
jbe
imul
nop
push
pop
or
pop
cmpsl
idivb
insb
pop
call
cmp
lahf
adc
xor
push
mov
adc
in
sahf
jp
pop
bound
ljmp
sahf
xchg
mov
mov
sub
fs
mov
mov
push
mov
popf
inc
fnstenv
add
mov
cli
aas
mov
loop
xor
sbb
or
or
nop
repz
sbb
ljmp
lods
roll
sbb
inc
pop
sub
xor
mov
push
js
lahf
fucomi
movsl
nop
mov
sti
les
xor
ljmp
mov
rorb
test
enter
cmpsb
mov
movsl
jae
into
jns
lahf
and
adc
loopne
sbb
lods
push
and
loop
jle
mov
dec
ljmp
mov
sti
mov
or
cmp
js
and
mov
adc
jns
and
movsb
lret
lsl
lds
inc
push
lea
ret
jl
cmc
mov
pop
pushf
jno
fnsave
imul
sti
in
jg
jp
inc
mov
adcl
jecxz
jbe
addr16
cs
cmp
dec
rcl
xor
bound
out
mov
pop
pop
sbb
sub
orl
jle
insl
nop
outsl
xchg
andl
dec
aaa
inc
mov
cltd
push
and
push
jne
imul
hlt
push
add
stos
imul
sti
or
scas
sbb
imul
ret
and
jle
fsubr
or
cltd
push
jmp
loope
jle
fwait
xor
sti
stc
jge
jo
fdivrs
add
insb
test
and
sbb
xchg
loope
nop
push
mov
xchg
cmpsb
int
sarb
bound
push
mov
cmpsb
push
arpl
jno
outsl
lock
or
pop
adc
and
leave
shlb
or
andb
stc
add
add
dec
jl
movsb
and
mov
repnz
or
jb
cs
movsl
scas
fsubs
cmp
lods
or
adc
imul
mov
xchg
adc
lcall
push
jg
and
add
jp
cmp
out
push
mov
or
sti
push
mov
adc
mov
mov
xor
aad
and
das
pop
pushf
pop
push
jns
nop
xchg
mov
int3
dec
xor
xor
mov
xchg
mov
in
cmpsl
in
cwtl
jbe
push
dec
and
test
sbb
xor
cmp
xchg
dec
jo
jne
mov
jae
test
add
mov
test
out
xchg
push
test
int3
lret
in
or
inc
ljmp
aad
add
ss
arpl
cmp
icebp
fmul
pusha
mov
mov
jecxz
loop
orl
cwtl
out
xchg
int
xchg
jecxz
es
out
pop
movsl
cwtl
lret
insl
cld
dec
xor
es
adc
sbb
push
testl
stos
add
xchg
nop
cli
jo
lcall
cmp
insl
push
inc
pop
adc
lahf
pusha
cli
es
cltd
inc
push
cmpsl
inc
inc
jo
out
pop
xchg
jle
repnz
out
lods
shl
mov
daa
sbb
insl
push
sarl
lods
push
inc
inc
pop
pop
cmc
jg
movsb
push
xchg
lahf
imull
mov
lds
jl
ret
loopne
in
adc
xor
push
aaa
or
or
pop
xor
es
aas
test
or
aaa
shl
orb
sbb
add
xchg
fsts
lods
push
mov
cmp
xlat
sbb
mov
inc
lods
in
add
ljmp
inc
cld
dec
jns
inc
dec
lcall
jns
mov
sub
shl
jo
mov
sbb
daa
nop
into
xchg
xchg
jo
pop
xchg
or
mov
mov
xlat
outsl
jp
pop
aaa
sub
sub
and
sbb
in
add
cmp
jmp
out
sub
shrb
or
js
jmp
inc
rorl
fiadds
outsl
leave
push
orl
mov
aas
iret
mov
adcb
lock
xchg
xor
into
into
es
xchg
fmull
insl
mov
popf
mov
cmpsl
sub
lods
sahf
mov
mov
out
xlat
sbb
imul
and
lds
das
lods
test
inc
loope
xor
insb
and
xchg
icebp
xchg
fdivrl
roll
stc
loop
mov
mov
push
cltd
or
je
shlb
stc
jmp
in
pop
testl
sbb
ret
dec
shll
fisubl
and
xchg
dec
stos
out
mov
add
push
loopne
fldt
rcll
pop
pop
mov
push
pop
push
daa
xchg
mov
inc
push
or
sub
sbb
roll
inc
scas
or
fstpl
cltd
jmp
inc
nop
jmp
lods
fdivrl
js
lret
dec
jecxz
mov
rorb
addr16
fwait
out
adc
sahf
sub
mov
fwait
inc
inc
xor
aas
sub
inc
mov
jl
fcmovbe
int
sti
push
cmp
xor
movsl
mov
and
test
sahf
mov
ss
out
repnz
cmp
pushf
loopne
fisttpl
leave
jge
stos
test
rclb
ds
sbb
test
push
repz
xor
mov
pop
test
jae
dec
mov
mov
push
cmc
jmp
dec
jmp
mov
outsl
jbe
jns
jb
rol
pop
stc
cmpsl
pop
xchg
xor
lock
addr16
addr16
mov
icebp
mov
jb
xor
aas
mov
mov
cmp
inc
and
je
scas
add
sub
mov
jno
xor
mov
inc
movsl
xlat
xchg
test
push
cmp
mov
jp
xchg
loopne
add
int
cltd
fcomi
aaa
sub
inc
mov
dec
mov
xchg
lods
mov
lods
cmp
inc
ficomps
xor
mov
xchg
inc
push
scas
cmp
mov
push
jmp
nop
test
mov
sub
iret
sbb
inc
pop
sti
test
jae
mov
cmp
inc
cmp
jns
and
aam
mov
movsb
push
ret
sbbl
mov
loopne
xchg
and
out
mov
and
sub
ljmp
xor
mov
dec
xor
jmp
mov
pop
dec
sahf
inc
movsl
sbb
sub
sti
je
fst
xchg
mov
push
movsl
loope
stos
and
mov
sbb
inc
aaa
dec
or
jmp
mov
jo
ret
or
sub
ljmp
fcoml
repz
pop
inc
push
pusha
sub
test
add
mov
sahf
test
out
jecxz
pop
leave
cmc
inc
or
xor
sub
stos
lods
cld
cmpsl
cli
insl
mov
outsb
fiadds
inc
mov
sbb
mov
icebp
jle
lock
inc
mov
sbb
inc
or
test
push
jns
xchg
sub
push
les
rcrb
push
loope
rcrb
mov
addr16
test
stos
repnz
jg
inc
mov
jecxz
test
jge
sti
inc
mov
jge
and
ds
mov
daa
and
test
fwait
icebp
rcl
sbb
call
and
sbb
fmull
sub
xchg
iret
daa
imul
insb
into
push
xor
jae
rcl
rcr
jp
inc
cmp
gs
cmp
outsb
fcmovne
mov
fcmovne
inc
dec
push
nop
mov
jge
jb
dec
xor
add
sub
inc
in
ret
mov
adc
pusha
imul
mov
mov
testb
cmp
sbb
rorl
testb
movsl
inc
orl
ja
loopne
call
jae
or
outsb
movsb
mov
cmp
xchg
hlt
cmpsb
inc
xchg
pop
mov
jae
mov
test
sbb
xchg
jno
fmuls
std
mov
sub
push
push
jno
nop
scas
mov
data16
lcall
or
popf
negl
sbb
lds
hlt
mov
mov
sti
mov
xchg
inc
pop
gs
ret
test
inc
lret
pop
std
push
pop
mov
aas
jp,pn
std
addr16
pop
movsb
mov
outsb
jle
sub
pop
int3
sti
lock
decb
cmp
cli
jmp
rcll
int
jnp
mov
dec
or
rorl
outsb
cmp
xchg
lods
test
fbstp
leave
lcall
mov
push
lcall
mov
mov
xchg
jmp
push
dec
ljmp
movsl
sub
or
mov
push
shll
and
adc
jl
jnp
xchg
jge
mov
icebp
push
enter
jne
push
xor
dec
push
jmp
pop
mov
enter
cs
sbb
outsl
mov
dec
repnz
mov
stos
fwait
mov
cli
scas
insb
mov
fnstcw
leave
cld
xchg
sub
aaa
mov
and
jb
adc
loope
pop
insl
xor
fsubrl
mov
pop
out
in
les
pop
rcr
mov
or
fistps
arpl
adc
rorl
cltd
into
add
mov
popa
stc
scas
pop
sbb
push
ljmp
fisubrs
mov
idivl
and
adc
das
xor
or
aam
xlat
loope
js
arpl
fdecstp
jmp
add
jmp
add
adc
xor
cli
out
pushf
mov
inc
loop
or
add
mov
add
sarb
cld
or
xchg
push
clc
pop
fdiv
xchg
or
mov
cwtl
out
mov
cmp
nop
out
adc
fistl
mov
mov
out
jmp
jmp
xchg
cmc
add
jp
xor
aaa
pushf
out
pop
inc
rep
cli
ljmp
ja
inc
cmp
lcall
call
scas
sbb
add
outsb
and
sar
fidivrl
int
push
push
mov
jle
push
jg
test
xor
push
leave
jecxz
orb
mov
daa
or
adc
sahf
dec
pusha
push
xchg
iret
xchg
jbe
orb
sahf
popf
repz
and
jne
cli
pusha
mov
xchg
pusha
jbe
inc
mov
andl
jne
loopne
xchg
jb
lahf
xor
adc
out
pusha
sub
mov
mov
cltd
ret
xbegin
daa
scas
jnp
and
pop
addr16
fstpl
pop
fsts
adc
jmp
cmp
fucomp
aam
lods
inc
lods
sbb
popf
sub
sbb
xlat
dec
add
ds
dec
int3
xor
subl
in
xor
out
cmp
xor
xlat
cmpsl
imulb
ficompl
cwtl
lods
add
push
lods
stos
insl
sub
rorb
dec
lds
movsl
sub
loope
push
out
pop
and
sub
push
or
sbbl
xchg
call
pop
push
add
push
add
jl
fisttpl
and
pop
sbb
scas
mov
out
cmp
les
mov
push
sahf
jae
xchg
pop
mov
sahf
inc
cmp
jbe
pusha
cmp
int3
das
cmp
repz
testb
jmp
loop
mov
adc
call
jp
add
cmp
lea
mov
insl
jnp
lcall
push
into
mov
call
push
push
clc
jb
in
mov
mov
jo
psllq
enter
addr16
xchg
sbb
push
jg
xchg
jne
enter
les
cmpsl
or
cmpsb
cmp
sub
mov
clc
push
bound
jg
pop
scas
lods
gs
mov
hlt
push
subl
popf
dec
xchg
cmpsl
inc
xchg
and
jp,pn
popa
pop
or
fs
pop
jno
pop
mov
leave
adc
dec
pop
jecxz
testb
xor
test
repz
hlt
lcall
inc
cmp
shrb
lahf
lret
sub
ret
pop
addr16
not
stos
cs
push
sub
jbe
mov
ficomps
pusha
rcl
mov
lods
mov
push
jb
enter
pop
stos
or
push
or
in
or
jbe
ja,pt
mov
pusha
std
pop
stc
adc
cmp
push
ljmp
ds
pop
aad
jbe
orl
sbb
outsl
cs
sub
and
mov
xor
into
xor
icebp
xchg
mov
clc
arpl
test
jne
dec
push
mov
repz
inc
fidivrl
sbbl
cs
outsb
dec
insb
insl
rcrl
or
stos
lcall
xchg
sbb
cmpsl
add
or
xchg
decb
xor
jns
sub
filds
or
outsl
pop
insb
inc
inc
std
dec
ret
sbb
jnp
fidivl
idivl
gs
lret
pushf
xorl
jo
xchg
dec
xor
pop
cmp
fiaddl
pop
mov
jg
shrb
ja
loope,pt
into
mov
jns
adc
push
add
lahf
lahf
lcall
pop
aas
or
flds
jge
sahf
xor
data16
dec
jl
mov
les
jbe
movsb
fwait
dec
or
push
cli
or
dec
sub
dec
cli
xor
jb
out
or
or
push
cld
ret
mov
sbb
or
sarb
pop
or
cmp
pop
das
xchg
dec
imul
inc
movzbl
cmp
adc
fcmovne
dec
and
sub
cs
icebp
inc
push
test
jmp
decb
fwait
xchg
dec
mov
pop
addr16
into
shll
iret
mov
fidivs
pop
adc
sbb
cmp
movsl
pop
loopne
push
xchg
mov
or
cmp
sub
lcall
mov
aaa
and
fcom
pop
inc
insl
mov
sbbb
xchg
sbb
in
mov
mov
lds
mov
ja,pt
pop
outsl
stos
mov
imul
mov
sbb
and
outsl
dec
mov
in
sti
and
push
cmc
add
scas
push
xor
dec
xchg
jbe
ret
int3
pop
and
push
test
bound
lds
imul
add
adc
pop
loopne
lock
mov
inc
insb
xchg
pop
pop
test
jno
mov
addr16
pop
mov
enter
cld
xor
aas
xchg
movsb
mov
daa
sbb
pop
icebp
sahf
in
jg
sbb
mov
insb
lret
call
pop
mov
jbe
cld
subb
cmove
mov
inc
xor
xorl
mov
scas
xor
adc
aas
push
adc
add
clc
adc
fbld
popa
loopne
mov
lcall
jge
xor
cmp
sbb
or
sbb
mov
out
mov
inc
dec
push
sarl
jne
sub
xor
pop
xor
ja
xor
dec
xchg
and
jo
and
ret
add
mov
cmc
pop
xchg
push
cltd
sarb
lea
lcall
in
aas
stos
fistpl
jbe
pop
sbb
ds
push
mov
lea
imul
stos
or
sbb
or
xchg
sarl
and
push
daa
icebp
push
fcomps
lret
mov
or
out
clc
sbb
fcmovne
lret
idiv
out
js
loop
lods
enter
jge
and
sub
and
aam
xchg
pop
or
mov
rolb
rcll
inc
push
in
or
xchg
mov
xor
rorb
ds
pop
sub
enter
repnz
pop
test
cwtl
mov
add
ret
xchg
stos
movl
sbb
add
jmp
or
sysenter
pop
dec
xor
or
movsb
cmp
mov
mov
jmp
xchg
lea
stos
in
sub
add
and
popf
mov
imul
andb
push
xchg
or
jl
popf
jne
jp
adc
push
sub
cmp
mov
out
je
sub
dec
or
mov
mov
mov
loopne
cs
add
test
cmc
rclb
sbb
add
movsl
pop
or
add
adc
cmp
cmp
inc
loop
outsl
dec
stc
and
xchg
enter
incl
fildl
lahf
popf
cmp
inc
and
mov
flds
shr
jmp
and
nop
push
pop
fyl2xp1
lods
insl
leave
repnz
loope
jbe
aas
xchg
lods
in
pop
repnz
cs
cli
enter
pusha
es
mov
sahf
pop
out
sbb
and
popf
ret
stos
mov
push
adc
mov
sarb
inc
mov
out
mov
outsl
fcomip
addr16
inc
adc
cmp
mov
cs
pop
jl
and
push
sub
vpunpcklqdq
add
test
or
mov
adc
hlt
or
xchg
lods
or
lock
or
push
ficoms
lcall
push
lcall
xorl
xchg
mov
cmpsl
inc
repnz
cwtl
nop
js
out
stc
insl
mov
pop
pop
jp
je
lret
add
sbb
les
mov
push
enter
movsb
adc
lock
arpl
repnz
fidivl
iret
mov
jg
out
mov
mov
adc
mov
cmp
stc
and
jbe
push
inc
ret
scas
scas
add
jle
shrl
jne
and
push
dec
jge
sub
xchg
in
ljmp
xor
inc
inc
pop
cli
mov
lock
sarl
mov
popa
sti
ret
cli
push
mov
movb
mov
mov
jp
inc
push
cmpb
lret
mov
out
test
adc
ss
test
cmp
mov
xchg
mov
push
daa
pop
xor
lahf
loope
mov
jge
hlt
jge
nop
test
lret
mov
push
in
xchg
inc
in
push
stc
mov
dec
mov
pop
pop
cmpsb
sub
pop
pushf
mov
idivl
jnp
jae
jb
xchg
inc
stos
std
sub
push
jge
push
push
ljmp
cltd
cs
cs
xchg
test
add
sbb
and
js
push
int3
repz
je
mov
dec
mov
mov
shrl
mov
push
inc
js
cmp
pusha
jg
rolb
sbb
in
shll
cmp
idivb
out
out
daa
fmuls
fidivl
dec
xchg
mov
arpl
pop
push
pop
test
inc
mov
cmp
push
jno
scas
ja
data16
and
pop
cld
enter
and
test
pop
in
das
and
cmp
jne
xchg
out
repnz
fistpll
test
sbb
sub
mov
mov
fnop
mov
sbb
jl
jo
jno
insb
push
mov
hlt
loop
negb
cmpsl
xchg
and
loop
add
xchg
lds
leave
or
sarl
xchg
ja
imul
and
sub
pop
xor
ret
lret
in
cltd
jp
and
sahf
pop
push
ret
loop
mov
dec
jo
mov
sarb
icebp
or
pop
xchg
adc
nop
enter
add
popa
mov
arpl
lcall
rorb
mov
int
dec
fsubl
sbb
movsb
je
jecxz
mov
nop
mov
ljmp
js
aad
mov
or
adc
xchg
shrb
incb
add
mov
inc
sbb
scas
stos
movsl
vmwrite
aaa
loop
nop
mov
adc
out
popf
add
in
fs
mov
test
loopne
scas
add
inc
mov
or
jge
xchg
enter
fisttpll
xchg
loop
sub
mov
and
xchg
cmp
ret
add
push
call
inc
adc
mov
pop
xchg
cmp
out
lcall
mov
adcl
jp
xor
or
fwait
pop
rorb
dec
mov
xor
cli
push
test
lahf
jb
and
cmc
cmpsl
push
aam
pop
sti
test
addr16
ret
xor
cmp
rcrl
mov
lret
xchg
add
icebp
push
movsl
ret
fsubrl
mov
or
and
loop
jne
dec
icebp
and
add
adc
das
sti
add
loopne
xchg
lcall
mov
add
adc
rorl
testl
push
sbb
movsl
xor
lcall
add
pop
and
fdivl
xchg
cmp
in
out
call
cmp
xchg
loop
push
mov
add
adc
add
shrb
xor
movl
pop
dec
dec
lds
mov
popf
and
dec
jno
pop
adc
enter
cmpsb
iret
fwait
stos
test
mov
push
aam
or
xchg
sbb
mov
sub
xchg
aaa
inc
scas
sbb
call
leave
push
jne
dec
xlat
cmovp
inc
mov
rorl
add
lcall
dec
cmp
icebp
jecxz
out
sub
mov
and
in
xor
or
mov
in
or
mulps
outsb
sbb
aam
inc
test
cmp
jp
inc
inc
mov
push
or
adc
out
xchg
xchg
mov
sub
in
aas
push
rol
xchg
jge
filds
lds
inc
pop
lcall
xor
fisubrl
pop
es
or
dec
sbb
jne
cmp
and
movsl
and
pop
cmp
cs
mov
cmp
addb
mov
jge
push
mov
xor
nop
int3
fistpl
xchg
data16
jne
cli
mov
out
je
pop
shl
cmp
es
add
mov
dec
into
std
fsubl
push
loop
iret
sub
sub
sub
dec
sub
fsubl
insl
pusha
aad
jo
adcl
mov
lret
push
push
xor
stc
cmp
inc
out
addr16
cmp
imul
cld
fistps
insb
mov
xor
jg
and
or
cld
xor
jo
dec
adc
gs
aam
inc
rcll
adc
inc
pushf
sub
arpl
sarb
cli
mov
scas
mov
outsb
inc
mull
dec
ret
lret
cmpsl
call
jle
push
sub
jl
dec
mov
jg
outsl
mov
mov
pop
add
add
sub
nop
pop
mov
flds
or
pusha
in
xchg
cltd
pushf
sbb
xor
cmp
test
sub
inc
out
mov
cmp
push
or
cld
test
out
pop
adc
stos
xchg
and
pop
cmp
mov
pop
inc
xor
sub
adc
into
xor
je
push
je
movsb
out
lcall
and
ret
and
in
repz
mov
dec
pop
daa
leave
vprotw
jo
adc
xor
inc
outsb
pop
add
fidivrs
enter
inc
sub
movsb
je
inc
adc
push
inc
or
test
leave
fisttpl
roll
inc
add
lret
xor
jb
subb
cmpsl
dec
add
xchg
mov
outsl
stos
shrb
repz
insb
decb
repnz
or
pushf
push
aas
pop
inc
jnp
adcl
xchg
jae
pop
dec
aaa
add
out
jge
lea
mov
dec
add
sbb
fisubs
int
pop
mov
test
pop
mov
outsl
xlat
sbb
push
test
push
pushf
fsubr
mov
mov
mov
sar
rcrl
xor
mov
add
fld1
mov
out
nop
mov
push
jg
sub
push
repnz
jle
sub
cli
mov
clc
mov
pop
fistps
and
pop
nop
jp
mov
dec
inc
add
daa
outsb
outsl
add
mov
sbb
inc
adc
outsl
add
imul
arpl
incb
pop
clc
pop
iret
orb
sti
mov
cmpsl
inc
pop
sub
pop
mov
adc
mov
sbb
dec
pop
int
insl
out
fwait
mov
bound
shll
push
inc
call
adc
in
xchg
sub
push
test
mulb
pop
and
jle
add
push
mov
pop
cmp
lret
jl
pop
rcrb
bsr
xchg
cmp
mov
pop
fs
push
test
push
xlat
fwait
pop
fcom
dec
mov
call
lahf
repnz
adc
cmpb
adcb
mov
ss
fnstcw
popf
jle
iret
icebp
xchg
inc
pop
mov
pop
lods
imul
movsl
cs
sub
insl
inc
out
pop
cltd
sahf
mov
sbb
and
jmp
lret
or
cmpsl
rorl
xchg
xchg
sub
jmp
adc
lock
mov
fsubrl
push
ret
fdivrl
mov
into
xchg
repz
jge
xchg
mov
pop
inc
out
jle
jecxz
jne
dec
repz
adc
pushf
cmp
mov
ja
scas
adc
daa
test
das
nop
aam
inc
enter
jo
aam
jne
adcl
mov
outsl
mov
cmp
mov
sub
inc
fwait
inc
setle
inc
in
insb
or
incl
mov
inc
test
mov
jb
mov
aam
sbb
add
sbb
jne
mov
push
lret
popa
into
dec
stc
in
jo
pop
shlb
stc
mov
outsl
sbb
addr16
scas
gs
or
mov
cvtdq2ps
jo
pop
add
sti
push
ja
pusha
mov
repz
cmpb
sub
add
out
fcompl
pop
push
mov
mov
mov
jge
cmpsl
push
mov
adc
mov
xlat
fmull
fdiv
mov
sub
lds
xchg
mov
es
adc
fs
fsub
sbb
mov
dec
cmp
jge
ds
gs
xor
out
push
jae
mov
loopne
cmp
fidivrl
js
mov
jae
cmp
insl
mov
es
cs
out
and
cmp
pop
ja
mov
lahf
ljmp
pushf
test
dec
out
out
std
xor
jo
in
into
scas
aad
mov
jns
shlb
jle
ds
sbb
cmp
jmp
ret
push
lock
lds
insl
and
xlat
rcl
or
jo
stos
in
popa
xchg
cld
add
and
pop
inc
dec
in
adc
mov
push
fs
clc
xor
ss
sbbb
sti
in
nop
mov
add
inc
es
leave
test
xorl
mov
outsl
cld
sub
and
jbe
pop
es
mov
sub
pop
bound
push
and
mov
ds
lock
out
push
mov
test
aaa
out
push
mov
nop
popf
or
push
fldlg2
jmp
sbb
imul
fcomi
pop
mov
repz
bswap
or
or
pop
rcrl
icebp
xor
sbb
test
sub
subb
xchg
cmpsl
cmc
test
xchg
push
cmp
jg
outsb
aas
enter
popa
cmc
hlt
dec
ffreep
lcall
std
lret
popf
stos
dec
sbb
mov
mov
inc
add
mov
dec
add
fdecstp
in
pop
jp
enter
mov
and
adc
pop
lods
pop
add
jg
mov
xorb
push
xorb
add
pusha
js
in
adc
call
adc
xor
xchg
xchg
cmp
add
adcl
movsl
bound
mov
pop
std
lahf
imul
mov
js
divb
inc
cmpsb
cld
xor
mov
in
lcall
imul
scas
and
xchg
jne
pop
scas
add
jbe
scas
fisubs
aas
dec
cmc
or
std
jecxz
fwait
cmp
mov
push
add
roll
insl
xchg
add
sti
sub
xchg
mov
or
mov
loopne
lds
dec
mov
jge
xchg
mov
jmp
jne
push
addr16
jae
and
xor
dec
adc
xor
decl
xor
lcall
mov
ljmp
mov
xor
dec
cmc
and
insl
mov
sqrtps
lcall
fwait
int
push
inc
xor
loop
xchg
dec
mov
in
pop
fmull
lret
es
pop
es
insb
call
ljmp
cld
fdiv
or
sbb
pop
ds
jns
xchg
jl
sbb
sbb
dec
movsb
adc
sbb
cli
int3
xor
lock
push
lds
xor
test
push
pusha
in
xchg
xor
sub
add
xchg
mov
daa
dec
xor
fidivl
in
sub
inc
ret
jb
inc
mov
jne
addl
push
inc
mov
lods
inc
outsl
sub
and
out
stc
mov
mov
cmc
shlb
pop
ja
andb
cmp
mov
lods
xor
xor
fmull
popf
lahf
adc
movsb
repz
fwait
clc
cmpsb
jae
in
loope
jns
pop
imul
push
pop
lcall
fcmovne
subl
mov
fsubrl
pop
jle
add
jge
insl
rorl
xlat
jg
sti
aad
pop
and
push
adcl
inc
lock
push
pop
dec
xchg
or
inc
mov
pop
pop
xchg
ds
xchg
ja
jb
popf
aaa
mov
imul
jno
xchg
xor
add
cmp
out
xchg
push
ficomps
mov
sub
leave
out
pop
insb
mov
push
sahf
xchg
jle
cmp
adc
shlb
call
or
adc
pusha
pop
cmp
xorl
dec
xchg
pop
mov
mov
inc
add
and
jnp
pop
push
stc
imul
sbb
in
out
aas
ss
push
je
mov
paddsw
xor
sub
lock
aas
and
push
sub
insb
xor
lret
dec
push
mov
cmc
loopne
loope
and
sti
hlt
loopne
push
jns
jp
cmp
adc
and
hlt
das
lds
pop
lret
enter
mov
scas
cs
outsb
jb
add
mov
add
fimull
pop
push
sub
xchg
dec
ljmp
cltd
adc
cltd
sbb
mov
pop
dec
movsb
lods
lock
sbb
add
xor
in
pop
or
pop
ljmp
ds
call
andb
lds
mov
clc
ret
jo
decb
or
or
inc
inc
add
scas
push
cmp
jecxz
and
cwtl
popa
xor
scas
or
lds
cmc
test
adc
push
sarb
idivb
daa
rcll
jge
gs
pop
cmpsb
fstpt
push
add
ljmp
sub
xchg
rolb
pop
subb
hlt
mov
xchg
push
xchg
mov
pop
loopne
mov
ret
xor
jns
dec
or
ja
movsb
pop
mov
pusha
lret
test
jnp
outsl
fnstcw
bound
dec
xchg
mov
adc
into
push
inc
pushf
mov
dec
popa
inc
popl
xchg
shlb
aas
scas
mov
ds
lds
xchg
mov
icebp
dec
xchg
scas
fcmovbe
mov
cmpl
into
adc
pushf
dec
out
mov
test
cli
andl
lret
pop
push
add
xor
inc
leave
enter
mov
cmc
pop
xchg
mov
inc
fwait
xor
andb
and
sti
jb
sub
bound
fcompl
enter
xchg
dec
mov
cwtl
and
and
adc
mov
roll
in
les
and
and
test
pusha
lods
rcrl
repz
shll
daa
jno
push
jle
inc
xchg
add
aaa
sbb
jnp
xor
pop
sarl
push
es
push
ss
fists
scas
shlb
sbb
jmp
sub
add
pop
xchg
mov
jl
and
cmp
lds
inc
hlt
add
sub
push
sbb
pop
movsl
popf
cltd
jmp
jecxz
cs
lret
jns
xchg
adcb
mov
pop
xchg
push
std
cmpsb
out
xor
sbb
jge
jns
adc
jecxz
jp
insl
pop
xchg
lea
xchg
ss
in
fists
xor
pushf
dec
stos
int3
or
cmc
mov
out
sbb
aaa
call
lret
add
inc
mov
add
xor
xor
lahf
dec
inc
dec
dec
int3
mov
stos
decl
jg
push
imul
adc
cld
mov
popf
sbb
fsub
sub
push
mov
int3
imul
iret
sub
rcrb
incl
mov
push
push
loope
mov
sub
notb
daa
adc
mov
cmp
nop
push
cmp
pop
jmp
jne
xchg
repz
repz
inc
popa
sub
shr
inc
ds
adc
out
dec
gs
pop
mov
test
movhps
jmp
sub
arpl
mov
ret
pop
sub
sbb
pop
lods
lret
das
addl
rolb
sub
push
insb
jg
notb
jnp
adc
pop
stc
pop
shll
adc
push
add
add
lds
xchg
mov
push
pop
adcl
adc
ds
mov
cs
xor
push
cmp
lret
jb
sahf
lock
cbtw
mov
jecxz
inc
jle
inc
pop
pop
cwtl
sti
daa
dec
in
push
icebp
les
ss
mov
jae
fs
lret
jmp
ljmp
push
mov
dec
clc
out
push
dec
push
fmulp
dec
enter
xor
mov
in
cmp
mov
sbbl
gs
dec
cwtl
add
push
and
push
xchg
lods
test
cmpsl
bound
mov
xor
std
enter
push
jns
mov
sub
dec
and
push
cmp
enter
push
mov
fstpt
add
rclb
test
pop
cmp
adc
test
int
xlat
push
mov
shrl
in
lea
daa
or
xor
xor
xchg
pop
lea
testb
fwait
data16
xchg
jl
push
push
jge
mov
test
arpl
insl
popa
mov
addl
bound
adc
cmp
jmp
pop
xchg
scas
leave
or
sti
push
scas
push
jb
orl
shll
ret
mov
push
cmpsl
push
out
or
mov
sahf
cmpsb
aad
dec
aam
cmc
add
add
dec
cmpsl
and
xchg
lea
cmp
sub
out
outsw
fisubl
ret
mov
rcrl
jp
bound
or
push
push
test
pop
jp
add
lahf
cmp
bound
in
dec
das
scas
test
int3
jno
or
jnp
ljmp
sti
stos
ljmp
cmc
rolb
and
xchg
and
pop
or
mov
sub
outsl
pop
cwtl
xchg
mov
lret
loopne
out
lods
aaa
mov
mov
test
roll
dec
lret
mov
mov
jp
push
pop
ss
iret
push
addl
xchg
adcb
daa
jmp
xchg
jecxz
lcall
icebp
jnp
and
scas
movsl
push
dec
cmpb
cmp
mov
lahf
sbb
inc
ret
cmp
add
mov
jg
mov
jbe
dec
add
mov
mov
cwtl
xchg
xchg
adc
iret
dec
test
push
and
or
sub
cmp
push
push
lcall
add
add
icebp
sub
inc
sahf
loop
or
lret
adc
mov
or
in
idivl
jne
sbb
push
sub
xchg
jae
xchg
or
adc
lea
add
lcall
fs
shlb
shlb
lret
popa
push
out
nop
imul
stos
lcall
adc
out
and
cltd
or
pusha
pop
gs
clc
aam
insl
and
into
push
and
dec
cltd
shr
je
lods
into
mov
add
cmp
std
pop
push
data16
jl
mov
mov
push
les
mov
imul
xchg
pop
aaa
cmpsb
enter
sub
in
loop
and
or
inc
fstpl
mov
dec
sti
adc
mov
xor
movsl
cmc
cli
iret
and
xchg
mov
comiss
xchg
inc
je
fsubl
xor
inc
outsl
xor
mov
nop
dec
pop
int
jle
sahf
test
sub
mov
ds
jecxz
es
jb
jns
cmpsb
inc
sub
adc
pusha
xor
mov
in
lea
out
js
pop
ss
mov
sub
movsl
mov
in
rdmsr
mov
sbb
push
ds
fdivl
cmp
mov
test
js
xchg
add
fadds
repnz
push
mov
lods
lret
lods
xchg
jmp
repnz
xor
aam
pop
mov
rcrb
cmp
push
mov
mov
adc
inc
aam
test
ret
pop
cmp
popa
sbbl
dec
hlt
mov
xorl
addl
jg
sbb
into
out
sbb
bound
pop
jge
test
bound
fs
ret
sub
andl
xchg
push
jmp
imul
rcl
xchg
push
mov
negb
ret
scas
sub
sbb
jg
stc
xchg
divl
fildll
int
mov
inc
rcrl
dec
pop
and
out
sbbb
dec
dec
inc
mov
imul
pop
dec
enter
jbe
aas
xor
inc
outsb
aaa
lahf
lcall
fstps
push
loop
adc
jecxz
inc
hlt
out
popf
sbb
push
lods
adc
pop
aad
adc
fmuls
adc
outsl
repz
add
sub
es
inc
cmp
xchg
notl
pop
icebp
rep
loopne
fstpl
aas
div
mov
out
fiadds
add
mov
xor
repnz
push
sbb
jl
xchg
js
mov
or
ja
je
mov
mov
jl
addr16
ds
add
pop
mov
pop
inc
lcall
daa
sub
dec
mov
or
aad
imul
jg
fists
sbb
lret
roll
pusha
in
mov
stos
loopne
adcl
fldl
fistpl
dec
or
std
xchg
xchg
nop
fstl
jge
imul
lods
push
sbb
xchg
mov
add
inc
cltd
popa
fwait
enter
lods
lahf
dec
pusha
push
stos
inc
jecxz
sbb
je
adc
stos
or
leave
pushf
cltd
addb
mov
es
add
nop
add
jb
pop
outsb
sub
xchg
and
in
in
aaa
iret
inc
out
cmc
hlt
call
packssdw
popa
and
mov
fs
je
movsl
jmp
push
rcrb
or
loope
push
push
stc
cwtl
dec
push
or
cmpsl
mov
sub
inc
xor
push
or
jmp
int
push
aaa
mov
fwait
adc
mov
out
leave
push
jmp
arpl
mov
mov
cmpsb
lret
andb
daa
mov
add
sub
jnp
add
imul
jle
lcall
lret
les
inc
mov
shlb
mov
cs
int
imul
or
scas
shrl
pop
jo
adc
lret
pop
div
in
fs
mov
sub
mov
dec
or
pop
js
pop
and
or
mov
enter
or
sub
rdpmc
sub
adc
inc
xor
aaa
xchg
mov
push
sbb
repnz
sti
lock
out
cmpsl
call
jecxz
or
mov
ja
es
xchg
stos
insl
sub
push
pop
xlat
and
sbb
ljmpw
lock
je
mov
ds
add
cmpsl
ds
out
nop
in
cmp
sti
arpl
rorl
inc
mov
push
xchg
xchg
hlt
shrb
test
and
adc
or
lcall
adc
les
mov
sahf
addr16
xchg
mov
pop
mov
and
adc
sbb
daa
mov
shll
mov
jl
xchg
jbe
and
cmp
sbb
std
notrack
movsb
add
jb
loope
mov
in
mov
push
lret
ljmp
cmp
repnz
dec
aam
mov
jns
adcb
in
rorl
xchg
andb
dec
and
dec
pop
stos
and
andb
imul
testl
ret
jmp
nop
sbb
loope
xchg
inc
push
sbb
into
cmp
jp
int3
add
mov
pop
loopne
and
push
sub
pop
mov
mov
adc
popf
cs
sbb
xchg
aas
pop
and
sub
bound
sub
clc
std
ret
pop
cld
dec
les
stos
dec
aad
aad
and
jo
ret
mov
jbe
adc
outsb
stc
inc
xchg
orb
lcall
dec
xor
adc
dec
mov
int
je
pop
stos
js
sbb
inc
popa
sub
xorb
dec
mov
xchg
negl
pop
repnz
sbb
addr16
push
ficomps
inc
lock
fistps
sbb
out
cmp
adc
inc
test
enter
sahf
inc
pop
mov
adc
sbb
lcall
xorl
sbb
in
dec
hlt
dec
adc
cmc
mov
mov
push
std
xchg
popf
sahf
jle
sbb
dec
int
cli
mov
hlt
fstpl
fldt
out
mov
xchg
aas
dec
push
roll
jno
pushf
xor
repz
ret
inc
jp
fisttpl
or
fildll
aas
mov
mov
xlat
mov
inc
mov
loop
push
arpl
out
fmuls
es
and
or
repnz
and
lods
mov
stos
loopne
pop
pop
jo
into
cmpl
xchg
pop
push
push
cmp
aad
aad
dec
and
fsubl
jp
shlb
fcomps
cmpsl
je
jb
jne
in
cltd
mov
xchg
cld
xchg
repnz
xchg
or
jb
into
xchg
daa
jl
pop
rolb
jl
out
jb
scas
mov
imul
add
push
inc
inc
push
lret
stos
xchg
iret
xor
mov
shl
pop
pop
clc
mov
daa
pop
fwait
or
jmp
xor
cmpsb
add
sub
inc
in
fdivs
pop
jno
mov
ds
jge
mov
push
call
sbb
cmp
pop
cmp
xchg
jp
ljmp
enter
fcoms
imul
fxch
push
and
push
pop
mov
jp
mov
aad
pusha
sub
test
and
xlat
inc
pusha
push
mov
jecxz
cmc
fldenv
fldt
dec
dec
add
test
mov
jl
sbb
ret
loopne
es
and
mov
testb
lds
inc
movb
addr16
inc
pop
rclb
mov
cli
aam
xor
es
fnsave
aaa
movsl
xor
jecxz
pop
or
xchg
les
scas
sbb
cwtl
fcoml
inc
je
sti
movsb
stc
insb
jp
aas
mov
adc
stos
enter
imul
sub
sub
fsub
pop
add
repz
aaa
out
ss
inc
lret
dec
fsubrl
mov
data16
add
lahf
mov
adcb
jae
pop
in
stos
push
xchg
ss
xor
iret
jp
mov
adc
insb
and
test
rcrb
jno
xchg
and
mov
mov
into
lret
mov
bound
out
ret
mov
xor
sti
and
inc
jg
add
push
pop
mov
jb
sub
nop
loope
testl
mov
cltd
push
lods
push
mov
cmp
add
mov
repnz
dec
jo
fsubr
out
xor
fwait
cmpsb
call
push
sub
test
das
test
lods
jp
push
orl
jnp
dec
sbb
leave
hlt
sbb
mov
cmp
test
push
stos
xor
lret
mov
lods
mov
mov
je
xchg
sub
lods
insl
dec
and
adc
std
faddp
stos
int3
outsb
or
loope
lret
add
imul
mov
add
and
int3
cmp
inc
jge
mov
xchg
rep
js
stc
out
jg
xchg
cs
adc
adc
aaa
out
jbe
sti
lret
jecxz
dec
loopne
js
mov
sbb
dec
shlb
xchg
dec
adc
ficomps
ljmp
fwait
xor
sbb
pop
rolb
jmp
cmp
mov
and
cltd
push
aaa
clc
cwtl
push
cmp
sub
loop
dec
xor
dec
out
roll
inc
push
cmc
fmull
jp
jne
out
hlt
shll
xor
dec
jae
test
push
test
dec
add
or
pusha
aaa
std
aaa
and
cmp
and
insb
aaa
mov
or
imul
xor
aas
or
out
xor
aam
sub
lock
out
jecxz
add
in
add
push
fistpl
push
in
cmc
mul
cmp
cli
push
mov
jg
sti
jmp
movsl
mov
push
lods
into
cld
ds
mov
insb
sub
xchg
cvtpi2ps
ja
or
push
lds
mov
icebp
addr16
mov
dec
sub
mov
lods
leave
and
mov
push
out
and
lock
ret
mov
jl
pop
jno
mov
scas
call
outsl
int3
fs
icebp
inc
jae
rcrl
mov
dec
fiadds
mov
and
jle
and
leave
mov
xchg
sti
add
fcmove
cmpsb
sbb
cmc
mov
in
pop
iret
pop
inc
mov
aas
xor
cltd
shll
dec
aam
lock
adc
mov
imul
int
scas
or
and
mov
dec
lret
and
xlat
ret
addl
loope
sti
push
adc
jmp
or
xor
jmp
repz
test
shll
test
outsb
mov
push
xchg
cltd
int
insb
mov
or
cli
and
or
testl
sarl
ret
mov
push
loope
pop
xchg
test
push
xchg
enter
leave
adc
subb
je
rolb
cmpb
rcr
std
aad
mov
into
add
sbb
cs
test
sbb
insb
add
shl
pusha
arpl
jns
scas
fcoml
out
shrl
sti
dec
mov
outsl
inc
leave
gs
lret
aam
rcrl
movsb
les
or
pop
setp
or
andl
pop
push
push
jg
icebp
cwtl
inc
inc
xchg
loopne
vmovhps
mov
repz
ds
pop
mov
jbe
pop
mov
and
and
imul
pop
mov
mov
cmpsb
fisttpll
xchg
aas
les
xchg
mov
imul
insl
dec
divb
or
mov
and
mov
push
je
int3
push
cmp
lods
cmp
push
hlt
aaa
mov
push
pop
out
xchg
sbb
inc
sti
cmpsl
mov
cmp
inc
pusha
mov
ficoms
inc
mov
sti
in
in
mov
and
mov
xchg
pusha
shrb
pop
insl
aad
and
mov
inc
push
dec
inc
mov
imul
or
cmp
lock
jae
jo
inc
lock
or
jns
in
das
rcl
jnp
mov
in
push
lock
lea
push
js
in
roll
hlt
inc
push
mov
jmp
mov
int
mov
test
cmp
insl
push
push
stos
xor
jne
out
adc
lcall
test
jg
and
call
add
js
outsl
out
sbb
sbb
adc
mov
push
sahf
out
fwait
ret
imul
sub
pusha
stos
insb
mov
mov
dec
cmp
leave
stos
neg
ja
cmp
xchg
stos
add
ret
iret
shll
mov
insl
scas
cmc
shl
popa
sbb
int
lret
int
loope
inc
cwtl
cmp
das
sbb
les
lods
sbb
imul
loop
enter
mov
mov
pop
repz
adc
rclb
dec
into
or
lret
aas
test
cmp
sbb
mov
cmpsb
adc
cltd
outsb
dec
mov
adc
inc
mov
lahf
xor
sub
pusha
inc
mulb
test
hlt
adc
xchg
in
cmpsl
scas
push
aaa
pop
cmp
lcall
cmp
dec
lock
sbb
adc
negb
mov
lea
in
dec
orl
iret
push
inc
pop
sbb
int3
or
cmp
in
dec
daa
jbe
arpl
test
sub
jae
popa
add
or
jae
mov
mov
popf
lcall
popa
negl
jne
dec
or
cs
add
dec
push
fldcw
sub
aaa
jge
les
xchg
scas
dec
jecxz
shlb
cmc
and
mov
mov
cmp
nop
and
ja
lahf
push
out
in
mov
jmp
lret
push
xchg
shlb
lods
hlt
mov
mov
cmp
pop
inc
pop
icebp
sub
out
ror
inc
mov
mov
int3
nop
int
aam
call
and
and
sahf
mov
mov
add
dec
out
xchg
rol
dec
push
mov
adc
addr16
bound
cmc
push
popa
xor
jg
mov
add
pusha
addr16
adc
cld
dec
inc
ror
sbb
movsb
or
fstps
in
push
dec
push
aam
fs
mov
fnsave
or
dec
sub
xor
mov
ds
popf
add
and
cs
xor
outsl
cld
push
add
ss
in
movsb
dec
push
cltd
xchg
push
test
lods
popa
and
aas
adc
xor
shl
and
pop
xor
cmp
mov
fisubrl
and
fs
push
addr16
es
cmp
push
enter
jne
cli
xor
fadds
inc
jge
ljmp
or
mov
std
leave
push
daa
and
cmc
or
outsb
nop
adc
aas
bound
out
mov
jae
pop
add
pop
xchg
and
mov
scas
movsl
cmp
in
cmp
ja
gs
cmp
jl
outsb
add
scas
stc
pop
testl
lds
clc
es
push
sub
xor
pop
mov
push
jge
clc
jo
mov
dec
sub
mov
sbb
pop
mov
adc
pop
mov
jo
outsb
aad
int3
imul
pusha
jl
cmc
push
push
xchg
jmp
add
stos
xchg
fiaddl
jl
add
mov
leave
icebp
outsl
mov
pop
int3
xchg
data16
pop
in
popf
add
je
int3
loope
ja
icebp
sub
adc
test
stos
and
sbb
add
mov
pop
jne
mov
xlat
pop
inc
mov
cld
loope
xchg
outsl
inc
mov
jns
fstpl
mov
daa
test
xlat
mov
push
xchg
mov
int
add
cmp
or
iret
xchg
divl
popf
stos
fldl
push
mov
insb
inc
insl
popf
mov
dec
int
lahf
cld
jle
push
pop
out
ja
push
sub
ds
iret
cmpsb
push
sbb
push
xor
addr16
std
push
fisubl
jle
inc
lods
mov
push
sub
outsl
lcall
sub
ret
aas
xchg
xchg
lods
outsb
jp
inc
repz
dec
lcall
mov
push
es
mov
insb
jno
push
pushf
gs
cmpsl
loopne
pop
add
addl
cmc
cld
bound
roll
idivl
mov
mov
fwait
hlt
fisttpl
ja
orb
fmull
jo
incl
dec
je
pop
mov
je
loope
jae
test
mov
call
imul
push
dec
movsl
outsb
mov
insb
daa
icebp
and
mov
into
iret
or
int
lock
incb
andl
imul
xlat
pop
push
cmp
inc
cmp
out
loope
sub
sbb
inc
inc
fsubs
test
mov
push
icebp
dec
xlat
nop
sbb
es
jmp
push
out
mov
jmp
jne
je
jnp
or
gs
xor
fildll
bound
stos
popa
mov
jmp
inc
mov
std
cmp
inc
inc
push
adcl
dec
jmp
ja
in
cld
push
push
pusha
orl
das
inc
into
es
sbb
clc
sbb
out
inc
xchg
out
imul
or
stc
and
imul
xlat
in
imul
mov
mov
outsl
push
out
push
mov
add
idivb
xchg
ljmp
inc
les
inc
rorb
cmp
jno
in
mov
inc
divl
dec
sub
lahf
clc
mov
jle
adc
ret
push
dec
mov
lods
adc
push
inc
int
lods
jmp
incb
and
mov
fwait
sbb
enter
push
in
jno
xor
add
mov
fidivs
xor
popf
movsb
dec
xor
cmp
and
push
push
push
push
nop
idivl
das
add
cltd
push
sbb
push
test
pop
lcall
push
fcomps
iret
lods
jnp
fnstenv
lret
shll
in
pop
xchg
das
xor
rol
das
mov
inc
cmpsb
inc
push
inc
gs
mov
sbb
movsb
xor
push
addr16
nop
loope
out
adc
js
outsb
pop
insl
push
hlt
cmp
ret
or
insb
bound
mov
pop
scas
or
jge
cmp
inc
mov
adc
jg
or
popa
inc
outsl
iret
inc
divl
fnstenv
subb
addr16
cli
stos
jl
arpl
fs
repnz
shl
push
xor
lahf
aad
std
cmpsb
sbb
and
dec
test
mov
push
add
mov
loope
stos
adc
cmp
insl
xchg
push
pop
sub
mov
int
leave
hlt
div
repnz
mov
loop
cltd
orl
pusha
dec
jae
aad
jne
shll
fmull
int
imul
cmp
mov
out
push
mov
xchg
aad
ret
fwait
jo
ret
push
cmpsl
test
fadds
cli
jae,pt
popa
add
movl
sub
sub
jecxz
push
stos
xchg
es
push
add
daa
psrlq
mov
mov
scas
jns
push
mov
out
sbb
dec
mov
mov
ds
sarl
test
lret
mov
add
jl
pop
cli
jl
cmp
mov
mov
mov
cli
jo
fwait
stos
in
sbb
jl
in
bound
lock
adcb
je
fwait
add
pop
cmp
out
jae
test
fs
lahf
xchg
aad
lret
or
push
mov
insb
sti
cltd
jae
sub
loopne
push
jge
push
lds
jb
js
fcomps
xchg
sahf
push
cmp
mov
scas
jmp
cld
stc
cmpl
dec
push
xchg
dec
mov
mov
cmp
push
or
aas
xor
and
pop
imulb
insb
hlt
xchg
jne
add
test
pop
dec
xchg
jne
test
in
cmp
call
pushf
pop
xor
sbb
insl
and
mov
sub
arpl
sub
inc
aad
nop
out
xchg
xlat
sbb
xorl
mov
mov
cmp
je
dec
push
jg
sbb
fidivrs
je
mov
mov
sbb
out
ljmp
movsl
sti
jg
test
in
jnp,pn
jl
imul
inc
or
inc
pop
imul
outsl
outsb
movl
xor
enter
and
push
out
movsb
in
lahf
pop
mov
cmp
sbb
insb
fdivs
aaa
popf
shll
and
inc
enter
popf
dec
cwtl
jae
xor
out
sbb
fsincos
xchg
and
pop
push
fstpt
and
mov
gs
mov
xchg
out
xchg
xchg
out
push
cmc
and
mov
popa
xlat
aaa
mov
test
cmpsb
pop
cli
lods
and
fs
das
adc
sahf
and
inc
rclb
cmp
int
lahf
daa
lds
out
mov
pop
sbb
ss
add
sbb
sub
fwait
negl
dec
or
push
and
fstps
movsb
inc
xchg
mov
pop
xchg
sub
sub
fs
mov
jne
daa
data16
jg
ljmp
push
ljmp
fcoms
cmp
jnp
in
lock
cmpl
push
pop
pop
push
push
sbb
in
mov
out
jl
addr16
jecxz
jmp
cmp
jmp
push
fcoml
push
jmp
lods
add
popl
mov
orl
iret
fcmovnb
or
xchg
jo
and
fs
int
sbb
pop
push
test
test
aas
mov
mov
scas
adc
bound
call
cmp
jno
movl
pop
lods
daa
xchg
jnp
pop
jae
js
xor
push
dec
jge
push
or
add
mov
and
pop
cmp
dec
jle
aas
push
repnz
sarb
in
jae
enter
test
push
aad
sub
mov
push
or
push
out
sbb
inc
in
jge
jae
xchg
aad
fimull
stos
and
pop
push
mov
inc
inc
stos
mov
dec
scas
out
rcl
lahf
faddl
adc
and
mov
push
hlt
mov
jl
sub
mov
loope
push
dec
cld
jno
jg
repnz
jp
mov
sti
pop
lret
dec
pop
inc
mov
pop
imul
xor
add
test
add
pop
adc
scas
not
les
aam
push
jb
add
mov
pop
mov
sub
add
mov
push
aad
sub
mov
mov
adc
jg
arpl
xchg
xchg
cli
xor
dec
test
hlt
jle
mov
xchg
add
inc
aam
aam
mov
popa
test
ret
js
js
mov
inc
hlt
cwtl
sub
lret
push
or
inc
cmp
ret
inc
fs
mov
in
jecxz
lods
in
orl
xor
aaa
jbe
or
lods
out
pop
leavew
jo
fistpl
mov
sub
or
sbb
ficompl
push
mov
mov
inc
pop
cltd
and
shl
dec
xor
cltd
psignd
pop
xchg
jne
lret
xchg
rcrb
push
cmp
je
xchg
dec
inc
sbb
std
jp
roll
cmp
sbb
push
dec
adc
lods
mov
in
daa
cwtd
mov
and
cmp
jb
inc
jp
jge
xor
in
mul
or
cmp
pop
inc
xor
mov
inc
outsl
jno
loope
arpl
jno
jle
and
jns
test
aad
mov
leave
xchg
out
in
mov
out
rcl
cli
xor
xchg
loop
loopne
lods
jnp
and
jae
jecxz
jle
sub
pop
outsb
mov
sti
jb
call
stos
arpl
lock
aaa
sub
cmpsl
xchg
jno
or
mov
iret
jb
cs
push
pop
ds
jmp
jp
push
xor
inc
push
cmp
xor
xor
and
pop
test
mov
sbb
pop
mov
xchg
xor
ficoml
loop
xor
std
mov
out
adc
outsl
cmpsb
xor
clc
inc
leave
mov
and
mov
fwait
or
mov
addr16
fadd
mov
cmp
mov
push
fmuls
pop
or
test
sub
sub
fisubrs
gs
movsb
hlt
pusha
add
lret
ret
mov
cmp
push
lods
aam
sub
ljmp
stc
jl
test
pop
add
shll
jae
nop
mov
cmp
data16
nop
jle,pn
cltd
scas
xor
add
cmc
and
lods
aaa
ss
inc
pop
out
imul
and
fwait
jbe
jl
insl
scas
repz
cwtl
xor
mov
jmp
cld
mov
jmp
push
clc
out
and
xor
jnp
out
addr16
enter
movsb
xchg
xchg
gs
mov
xchg
xor
cltd
mov
fimull
aam
mov
negl
fdivs
int3
ja
cmp
sti
inc
jl
push
jl
ljmp
rcll
ret
testb
add
jnp
cli
idivl
pusha
sub
lds
mov
movsl
sbb
jl
popf
cmp
je
and
jb
sbb
lods
std
pop
xor
pop
test
xchg
xor
pop
and
fnsave
sbb
dec
and
xchg
xor
hlt
adc
jecxz
lods
stos
decl
inc
adc
cmp
icebp
mov
pop
cmp
inc
push
neg
inc
pop
mov
jecxz
sarb
mov
xchg
sub
push
jno
adc
xor
leave
arpl
aas
scas
out
xorl
ret
orb
repnz
shlb
adc
lds
rorb
mov
jmp
shrb
dec
in
xorb
jno
outsl
lcallw
aad
js
push
pop
inc
dec
sbb
insb
rclb
dec
mov
mov
je
aam
xchg
clc
ret
dec
adc
push
mov
test
das
or
cmpsl
mov
xchg
mov
sbb
push
adc
inc
movsl
shlb
ja
or
aaa
cld
xchg
ljmp
call
adc
scas
insl
sbb
and
jo
clc
mov
cmpsb
add
std
mov
shlb
rcll
mov
cwtl
fucomip
sarb
xchg
mov
int3
jae
in
and
xchg
popa
jns
mov
push
lea
loop
or
xor
pop
inc
bound
fistps
and
sarb
les
notb
sbb
add
ss
or
call
stos
or
xchg
push
arpl
aad
mov
cli
mov
cmc
jmp
mull
add
jmp
sub
into
cmc
popa
scas
ljmp
jbe
jl
pop
pop
das
or
jo
test
out
push
mov
inc
call
fwait
jmp
popf
lods
sahf
dec
shrl
testw
ljmp
out
decb
sahf
push
xchg
xchg
aam
xor
mov
fs
adc
es
ja
push
and
cmp
xor
jae
mov
dec
fists
je
shlb
jae
inc
les
or
test
cmp
jle
adc
inc
fsubrp
pusha
fcmovnbe
jp
jge
jbe
mov
pop
mov
addl
mov
push
jmp
mov
lods
or
xchg
std
call
rol
inc
sbb
pop
imul
jg
adc
aaa
mov
mov
fldenv
xorb
mov
push
sbb
sub
mov
jmp
xor
andb
incb
jp
cwtl
jmp
mov
and
arpl
mov
popa
outsl
aad
sti
or
imul
jno
or
xchg
inc
and
add
negl
popl
movb
xchg
pushf
daa
mov
jns
movb
xchg
xchg
inc
fwait
pop
cmpsb
cmp
xchg
repz
clc
and
sbbb
mov
ds
jecxz
addr16
aas
sbb
xor
mov
enter
pop
or
dec
cli
sbb
ss
out
sub
mov
pop
call
roll
stos
mov
and
icebp
lds
jne
mov
cmp
mov
sub
pushf
es
mov
rcrl
mov
scas
mov
push
mov
jmp
dec
enter
addb
loop
xchg
cmp
test
mov
cwtl
bound
dec
pop
xor
mov
jl
enter
sub
call
mov
push
push
mov
int3
and
sbb
xor
and
xor
stos
xchg
aam
mov
inc
repnz
movsl
jo
std
ss
push
mov
cltd
xor
pop
mull
hlt
or
mov
imul
loope
negl
out
jne
rolb
loop
mov
lds
inc
adcl
pop
in
das
mov
in
shrl
mov
push
pop
push
fidivrl
pop
out
test
jae
ret
inc
or
andb
xor
rcr
dec
mov
push
negb
fnstsw
mov
cmp
or
jnp
mov
testb
dec
push
push
jns
inc
adcb
dec
fdivp
cltd
addr16
and
xor
mov
xlat
mov
mov
pop
hlt
mov
dec
inc
sub
cmp
mov
sbb
movsl
mov
gs
int
xchg
call
adc
xor
push
mov
mov
pop
jmp
mov
xor
test
inc
leave
xchg
pop
shll
out
inc
dec
cmp
les
pushf
call
dec
adc
xorb
cld
movsl
insb
test
pop
inc
or
and
add
jecxz
mov
mov
sbbl
aad
push
cwtl
push
mov
fmul
push
dec
ficoml
mov
loopne
cltd
inc
das
mov
jecxz
or
mov
enter
mov
les
inc
pushf
or
mov
mov
or
ljmp
jae
inc
or
nop
jbe
push
cmpsb
in
jnp
cmp
push
xor
xchg
call
and
add
cmp
je
stos
inc
xor
js
add
or
sub
or
cltd
cmovs
xor
mov
test
out
sub
sub
dec
mov
mov
add
and
mov
mov
jle
jae
lcall
lods
dec
out
loopne
inc
sahf
sbb
cmp
lcall
icebp
mov
mov
scas
sti
xchg
inc
or
push
mov
or
outsl
mulb
jb
into
mov
jmp
pop
repnz
movsb
cwtl
cmpsl
mov
push
jecxz
icebp
add
lods
or
push
adc
stos
sbb
adc
stc
lods
aas
inc
notl
xchg
and
shlb
int
shlb
push
js
scas
and
int3
faddl
dec
and
scas
in
mov
aas
xchg
fisubrs
or
mov
fisttpl
mov
push
daa
shrb
push
jbe
dec
aad
pop
in
mov
ffree
or
cmp
shlb
xchg
scas
fwait
or
push
inc
mov
lods
mov
notb
xor
es
push
loop
sbb
jnp
lcall
push
and
push
dec
sub
lock
adc
repnz
inc
ja
adc
into
outsl
mov
cmp
dec
popf
fistl
in
lock
scas
lret
or
lcall
in
cs
sub
push
mov
into
sbb
int3
xor
pop
dec
jp
inc
or
dec
fildll
jg
pop
sti
or
movsb
sub
data16
jg
jne
fnstenv
xchg
jmp
mov
xor
fdivrs
inc
das
pusha
popa
add
inc
mov
loop
std
push
je
jmp
outsl
mov
bound
lods
aad
or
lret
pushf
mov
cld
mov
add
pop
loopne
popf
mov
jno
mov
decl
push
daa
test
add
pop
dec
mov
in
andb
cld
inc
mov
pop
lods
das
data16
nop
jg
jbe
cmp
add
in
mov
ss
dec
pop
push
inc
jmp
mov
push
in
mul
xor
sbb
mov
xor
ficoms
pop
std
int3
or
aad
cmpsb
lds
scas
cltd
addb
add
inc
sub
daa
je
inc
sub
ds
push
insl
sub
push
cmpsb
sbb
cmp
push
sbb
or
in
cmp
dec
fildl
push
push
dec
aad
ror
es
aad
insb
js
cwtl
dec
lods
popa
movsl
adc
mov
jb
jb
nop
xlat
cmp
jp
pop
mov
movsl
adc
pushf
dec
cmc
mov
xchg
push
jnp
fs
xchg
xlat
pop
sub
cmp
mov
pop
std
not
and
aaa
out
nop
jl
subb
das
cmp
sti
in
aam
fistpl
mov
xchg
adc
mov
dec
daa
les
idiv
pop
pop
push
in
cld
cwtl
outsl
push
sbb
fnstsw
cli
lds
jecxz
push
mov
jne
pop
xor
aam
push
jnp
ds
iret
repnz
fisubl
and
add
loope
mov
in
nop
mov
push
adc
mov
mov
repnz
adc
shlb
push
std
mov
popl
xor
jecxz
ja
pop
or
mov
dec
push
jg
jecxz
or
test
dec
stos
inc
insl
adc
hlt
test
loop
pop
push
mov
stc
inc
imul
insl
lods
mov
hlt
push
mov
repz
ss
xchg
xor
lahf
jo
mov
lret
lea
jo
nop
frstor
fwait
inc
fs
loopne
dec
fldl
sbb
cs
nop
aam
inc
ja
cmpsl
sbb
add
jmp
fucomi
je
out
int
ljmp
cli
in
dec
loope
pop
adc
rcrl
in
add
jb
cmpsb
cmp
jb
sub
rorl
mov
fidivrs
cmpl
add
insb
or
mov
push
enter
fs
flds
cmp
pop
jae
loope
xor
lahf
push
js,pn
je
repnz
inc
int3
lahf
mov
fwait
push
dec
outsb
mov
pop
dec
inc
xchg
mov
lahf
push
pop
and
int
pop
ss
add
aam
sub
mov
ret
sti
lds
loopne
mov
in
jne
clc
fwait
mov
aaa
popf
scas
sti
mov
nop
cmpsb
addr16
cmpsl
push
lods
data16
inc
insb
jno
popa
push
mov
icebp
das
cmpsb
mov
pop
fwait
sti
test
push
add
scas
jne
mov
dec
cmp
cmpsb
add
mov
mov
ret
cmpsl
sub
xor
js
dec
in
xor
adc
jbe
inc
enter
outsl
bound
sbb
popf
pop
and
mov
dec
adc
aam
movsl
loop
ljmp
xor
fmull
or
mov
sbb
stos
dec
cmp
fisubs
mov
gs
ja
push
adc
mov
push
mov
int
sbb
data16
mov
ljmp
lods
cmpsb
lods
shl
popf
int
jge
pop
inc
hlt
andb
ds
clc
mov
sti
pop
inc
inc
push
pop
jl
lret
mov
push
pop
jl,pn
in
cmp
push
xchg
test
shl
mov
ljmp
jns
stos
loope
jnp
xchg
lds
jnp
jbe
dec
push
test
bound
dec
outsb
fcomip
negb
mov
jg
clc
dec
stos
add
xor
cli
inc
dec
sti
fstps
movsb
icebp
mov
mov
push
push
pop
cmp
xchg
xor
push
hlt
inc
idivl
jl
test
pop
insl
and
shlb
pop
mov
iret
or
jnp
sarb
das
add
sbb
xchg
and
bound
rcrl
dec
outsb
mov
and
lret
sub
lcall
lods
cmp
xchg
cmp
push
pop
icebp
xchg
jns
pop
test
popa
gs
out
imul
xchg
mov
mov
iret
fists
pop
adc
jno
ljmp
hlt
pop
lock
mov
into
mov
lcall
xchg
dec
sbb
mov
pop
je
adcl
int3
inc
jnp
mov
add
push
mov
mov
imul
inc
mov
in
xchg
imul
in
ror
push
xchg
adc
scas
test
dec
jl,pt
push
sub
shrb
in
add
push
jb
inc
push
outsb
pop
push
stc
jg
mov
lret
cmp
dec
dec
leave
add
or
pop
lret
xor
clc
fsubrs
dec
js
sub
imul
adc
cmp
jae
aam
cmpl
popf
push
push
mov
es
cli
out
sti
mov
sub
or
mov
jl
mov
rolb
jb
mov
cmp
mov
call
inc
lea
repnz
xor
pushf
cmp
inc
in
int
movsl
outsb
scas
fdivrl
lock
add
gs
push
mov
js
adc
mov
mov
xlat
pop
pop
mov
and
bound
dec
rcr
mov
jl
in
adc
es
aam
out
jnp
inc
mul
pop
xor
stc
mov
jl
rclb
xor
pop
pop
sbb
inc
testl
xor
xchg
imul
incl
mov
mov
mov
out
imul
cmp
push
xchg
dec
pop
xchg
in
cmp
psllq
pop
cmpsb
or
jae
bound
sbb
xchg
pop
fs
and
fldl
jmp
call
sarb
movsl
mov
push
pusha
mov
js
loopne
sarl
rclb
lock
push
dec
test
dec
mov
pushf
and
jp
mov
daa
jne
pop
inc
xchg
outsl
lods
aaa
or
clc
add
cld
idiv
dec
in
subb
pop
mov
outsl
mov
jl
dec
xchg
add
jnp
jg
mov
mov
out
out
xchg
leave
imul
repz
mov
ret
mov
xchg
lea
mov
aad
movsl
test
fimull
xchg
jno
je
in
shrb
sbb
js
ja
xor
pop
fsubrl
scas
inc
ljmp
popl
mov
iret
mov
and
pop
mov
xor
inc
ror
add
inc
in
inc
or
adc
pop
das
inc
xor
adc
cmp
fnsave
xchg
fidivs
loopne
hlt
jle
and
outsl
std
hlt
push
cltd
sbb
outsb
sbb
pushf
popf
shrb
mov
int3
sbb
loope
xchg
fninit
dec
sbb
pushf
push
es
and
mov
sbb
mov
lret
mov
xchg
jg
fcom
sub
mov
divl
push
jmp
cmp
outsb
dec
jp
movsb
mov
sbb
dec
and
or
leave
jbe
fdivrp
es
jl
inc
hlt
inc
dec
cmp
adc
sbb
cmpsl
push
bnd
push
repz
mov
cli
pop
and
cmp
out
jae
aas
fstpt
jge
and
mov
mov
xchg
loopne
test
mov
aas
lahf
adc
jmp
mov
hlt
jne
xchg
dec
sbb
push
clc
ljmp
in
or
xchg
sub
add
movsl
or
pop
mov
jl
test
scas
jl
cmp
inc
ss
push
mov
jg
cmp
outsl
mov
xchg
fwait
lds
jo
push
ret
jecxz
push
nop
xor
add
cmp
sub
orb
ljmp
scas
shrb
or
andl
mov
inc
or
movsl
ja
hlt
sti
add
xor
add
aad
jle
cmp
loope
jno
xchg
sub
mov
into
jmp
mov
pop
jle
push
leave
enter
mov
dec
rcrl
sbb
fcomip
jp
xchg
xlat
jl
mov
scas
iret
lcall
xor
rol
icebp
pushw
jno
cld
pavgw
or
roll
pushf
data16
dec
push
ret
dec
fistl
or
push
pop
dec
mov
xor
or
or
sub
testl
in
mov
push
cwtl
in
push
sbb
cmpsb
lea
scas
mov
in
hlt
enter
cmpsb
dec
vmaxpd
jmp
ljmp
add
aaa
fsubp
push
xor
xchg
cld
inc
push
push
loopne
jns
ret
pop
in
mov
clc
jge
jg
mov
pusha
and
das
inc
es
loope
mov
jp
nop
dec
add
fwait
add
add
jno
js
lods
shl
movsb
add
mov
push
int
and
jecxz
jle
adc
fwait
sti
dec
pushl
jp
adc
flds
cmpsb
rorl
dec
int3
inc
lock
mov
daa
mov
imul
repz
pop
or
jle
push
into
xlat
enter
inc
adc
xor
inc
rorb
lods
cli
xchg
test
jle
dec
lods
mov
jecxz
dec
ss
mov
xchg
sarb
scas
icebp
mov
sub
gs
pop
inc
xor
adc
out
out
aaa
call
mov
adc
enter
mov
add
loopne
mov
cmpsb
pop
lret
out
gs
mov
add
inc
mov
mov
rcll
and
mulb
mov
pop
rol
aam
sbb
xchg
mov
mov
hlt
insb
cmp
hlt
mov
out
dec
lcall
mov
mov
cmp
pop
lds
mov
jecxz
divb
ja
addl
mov
rcr
pop
jp
xchg
mov
push
in
jp
xor
mov
jp
clc
in
dec
inc
iret
and
call
ja
cltd
jge
in
adc
das
hlt
dec
ret
inc
cltd
jae
cmp
xor
cmp
push
sbbl
test
outsb
lock
sti
dec
sbb
inc
ss
rclb
repz
sbb
fimuls
and
mov
in
into
jb
or
jae
in
and
imul
cli
push
mov
stos
gs
das
pop
cmpsl
imul
mov
jg
lea
adc
pushf
sub
ja
xchg
add
mov
fcoms
rcll
in
pop
mov
jge
pushf
and
scas
ljmp
test
mov
dec
in
in
push
inc
jb
pop
adc
aad
call
dec
sub
aam
repz
ja
mov
cmp
fldl
sbb
jmp
mov
xchg
pop
lods
dec
imul
sbb
fstpl
adc
mov
out
js
xor
push
or
or
ret
pusha
scas
rclb
push
sub
es
jmp
mov
cs
rcr
inc
fcmovnb
lock
ds
pop
ret
push
daa
aas
sbb
cltd
lcall
fwait
clc
es
mov
sub
pop
xchg
enter
lods
inc
jecxz
js
hlt
xor
push
pop
fcomp
out
and
movsl
inc
pop
and
cmpsb
js
hlt
es
dec
int3
or
std
lret
rcrl
mov
mov
mov
popa
adc
pop
jo
call
int3
inc
push
imul
add
mov
dec
mov
pop
dec
mov
ret
xchg
xchg
loopne
mov
sahf
gs
iret
subb
mov
dec
into
dec
dec
adc
pop
jp
lret
test
stc
add
xchg
lds
lret
pop
dec
mov
mov
fs
insb
dec
or
add
jl
xor
push
imul
mov
push
mov
mov
into
inc
xchg
cmp
shrl
inc
fiaddl
xchg
jnp
mov
xchg
sbb
shr
xor
cmpsb
icebp
adc
rcrl
ja
nop
push
fistps
gs
dec
stos
mov
or
sbb
push
inc
out
cmp
pop
add
cwtl
pop
mov
cmpsl
movsl
ss
xlat
loopne
shl
sbb
lds
pop
sub
notl
dec
or
insl
mov
fcoml
idivb
sbb
cmp
mov
add
pushf
out
dec
xor
mov
stos
mov
mov
clc
adc
xor
sub
paddusw
outsl
jl
inc
xlat
int
push
popa
in
pop
aad
mov
xchg
call
jb
and
add
call
insl
inc
mov
adc
or
icebp
add
outsb
xchg
nop
and
inc
sub
addr16
and
roll
int3
dec
in
in
popf
scas
adc
ljmp
mov
mov
inc
dec
call
pop
stc
sahf
mov
enter
mov
push
sub
arpl
je
pop
xchg
inc
sbb
clc
sbb
mov
add
ja
fwait
inc
dec
in
dec
lret
push
cltd
fnsave
push
xchg
mov
and
inc
lcall
les
outsl
or
scas
push
gs
daa
mov
cmpsl
mov
fstps
push
xor
xchg
fwait
push
and
mov
or
xor
push
test
sti
cld
or
sbb
push
outsl
mov
cmp
clc
jns
rorb
and
push
addr16
mov
sub
enter
lret
inc
stos
dec
push
push
cmp
xor
adc
movsl
ret
xor
xchg
and
lock
pop
and
jp
int
cmp
imul
data16
mov
dec
jecxz
rol
inc
mov
fisubl
adc
dec
xchg
dec
ljmp
lret
testl
jo
jecxz
mov
ss
push
das
mov
jp
pop
scas
adc
mov
out
leave
pop
mov
dec
push
leave
jge
push
sarb
cmpsb
lods
jnp
call
sbb
in
push
xor
ds
dec
movsl
inc
addb
push
stos
pop
push
call
mov
sahf
in
pop
jmp
in
mov
dec
lds
outsl
outsl
xor
cmp
jns
addr16
or
sub
fwait
lret
orb
ljmp
cli
jbe
ret
aam
hlt
sbb
int
aas
sub
fdecstp
mov
mov
pop
mov
sub
lods
inc
and
rep
fcoms
rorl
add
lahf
test
sub
jo
pop
xor
dec
ret
sbbb
xor
jb
cmpsl
in
dec
add
ds
je
mov
add
cs
cmpsb
leave
adc
movsb
jno
push
pop
fldt
sbb
gs
lods
jae
shrb
sbb
xchg
sub
stos
repz
xchg
inc
or
sbb
and
cmp
mov
stc
mov
pusha
arpl
or
ret
or
cli
pushf
mov
xchg
mov
imul
and
push
cmc
sub
es
lods
addb
push
jmp
cmp
dec
into
std
jmp
lahf
or
fidivrl
dec
push
pushf
test
aam
cmp
bound
outsl
pop
hlt
push
enter
leave
push
scas
mov
ficomps
test
adcb
lea
cmpsl
pushf
gs
cli
add
stos
sub
nop
xor
jne
push
push
push
rcr
add
xor
xor
popa
jg
adc
imul
stos
filds
inc
adc
mov
or
fsts
add
xchg
mov
icebp
jbe
pushf
ljmp
shll
pop
push
adc
and
ret
aad
xor
jne
push
ja
pop
inc
mov
sub
scas
mov
lret
int3
push
mov
aas
cmp
add
cmpsb
push
cld
loopne
jge
xor
imul
cld
push
mov
out
add
add
inc
cmc
cmp
inc
fadds
repz
inc
aas
loop
cwtl
hlt
arpl
pusha
hlt
mov
test
mov
mov
pop
loope
mov
sbb
lahf
pop
or
mov
pop
jno
stos
cld
lock
cmp
lea
lds
cmc
lea
aas
popa
lock
jnp
stos
shl
xor
dec
arpl
sbb
divb
int3
test
inc
mov
out
jge
test
adc
jmp
test
pop
rcr
inc
loopne
pop
xchg
xorl
cmc
insb
mov
adc
arpl
fnsave
fisubs
lods
xor
xor
xchg
pop
mov
mov
std
dec
popa
sbb
xchg
or
testl
dec
xor
or
cltd
and
jb
sbb
or
cmpsb
xchg
test
int3
addr16
ficoms
iret
enter
enter
adcb
ficompl
inc
pop
or
orb
jl
dec
outsl
lret
cmpsb
lret
cmc
addr16
pushf
scas
daa
push
xor
dec
sub
xlat
jmp
cmp
mov
cmp
cmp
pop
and
hlt
data16
ljmp
push
andb
adc
add
shll
clc
fisubrs
xchg
ds
add
mov
adc
or
adc
adc
mov
popa
xchg
fst
pop
scas
imul
shl
popa
std
fmul
cld
inc
jb
lahf
in
ucomiss
and
sub
shlb
cmp
dec
aad
lds
cld
lods
mov
js
mov
inc
push
or
fistpl
subb
shlb
dec
aam
mov
push
imul
ret
stos
popa
cltd
scas
mov
fdiv
cmp
and
movsl
adc
sub
pop
scas
mov
aad
jns
dec
mov
andl
test
jno
pop
adc
mov
mov
out
pop
push
and
sub
fsts
sbb
data16
lcall
enter
in
mov
adc
scas
add
jae
or
in
loopne
test
divb
jge
sbb
sbb
arpl
mov
fs
sub
les
xor
jmp
sti
push
ja
adc
pop
popa
test
mov
decb
pop
and
add
insb
pushf
arpl
ljmp
rclb
and
in
out
repnz
sub
xchg
cli
add
shll
mov
jmp
xchg
cld
mov
and
push
cmpsb
sub
out
xorb
jg
fisttpll
insb
mov
push
cmp
dec
addr16
mov
std
inc
cwtl
clc
bts
and
push
in
sub
rolb
ds
adc
xor
xchg
cs
jb
lea
jnp
cltd
movsl
xor
ret
jp
sti
ss
scas
cmpl
push
pop
cli
test
and
mov
nop
push
adc
or
jl
push
mov
repz
jne
pop
dec
shrb
out
pop
or
jmp
lcall
sarb
mov
inc
or
push
jbe,pn
sbb
out
jp
add
dec
push
jmp
insb
inc
cmp
cwtl
cwtl
xchg
in
pop
or
mov
cmp
aas
lahf
inc
outsl
mov
push
adc
addl
push
int3
xor
popa
fcoms
push
adc
fisubrl
xchg
adc
sbb
cmp
insb
or
negb
icebp
or
push
insl
lea
aas
xchg
ret
rorl
cwtl
loop
jl
cmp
nop
xchg
xchg
push
adc
shlb
pop
xchg
cli
mov
push
dec
mov
daa
dec
ss
jp
push
pop
jae
lock
out
mov
int3
cli
push
dec
mov
adc
inc
sub
sbb
test
loopne
inc
jmp
mov
cmp
in
sbb
sbb
into
mov
mov
push
jo
scas
xchg
sub
shr
je
lock
scas
ret
xor
mov
cmp
movsb
mov
arpl
lahf
pushf
xor
sahf
mov
mov
jmp
cmp
mov
adc
push
pop
daa
sbbl
inc
loope
addr16
shrb
fwait
les
pop
jns
xchg
rol
loope
insb
push
mov
stos
ret
dec
cmp
xchg
bound
fsubs
mov
or
loop
imul
sub
jl
rolb
ja
inc
xchg
imul
out
cmp
push
push
sbb
inc
lods
pop
cmc
pop
pusha
add
sti
hlt
mov
jl
mov
add
ja
sahf
stos
push
stos
and
pop
lods
pop
jbe
cmp
xchg
xchg
dec
fldl
sub
jnp
mov
lds
cmp
movsb
jb
lods
xchg
sbb
test
sub
or
inc
or
test
loop
cmpsb
mov
repz
lret
xchg
push
mov
adc
mov
xchg
cli
mov
push
int
es
lahf
xchg
and
cmpsl
fcmovnb
imul
adc
or
insb
adc
sub
clc
add
push
mov
jns
cld
mov
xchg
imul
notl
in
mov
call
mov
int3
xchg
les
int
xlat
push
sbb
adc
mov
adc
out
lret
mov
imul
jle
push
mov
pop
ss
pop
adc
lea
mov
shlb
outsl
loop
out
jmp
push
jbe
push
and
cmpsb
inc
nop
and
jns
js
mov
test
or
jecxz
adc
xchg
stos
popl
dec
fucomp
lds
repz
jns
lods
or
xor
bound
push
cwtl
pop
lret
sti
enter
fistpll
sub
loope
cs
jg
je
mov
and
mov
outsl
cs
sbbl
sub
sbb
and
inc
pop
jmp
popf
cmp
hlt
lock
add
xlat
lods
hlt
xchg
repz
jae
mov
and
lods
jmp
fcomp
jmp
out
sub
push
cmpsb
sub
clc
scas
push
lcall
add
repz
scas
lret
fldl
push
lods
jbe
bound
mov
mov
jle
out
aas
cmc
dec
jne
xor
movsb
js
mov
adc
je
mov
or
scas
sub
in
pop
rorb
addr16
insl
pop
fmulp
stos
xchg
sub
mov
in
sub
out
fsubrs
xchg
mov
lcall
sub
dec
ret
aad
clc
shl
dec
push
lds
mov
scas
ret
jns
xchg
pusha
cmc
std
or
adc
push
pop
adcl
mov
jl
mov
and
rorb
daa
mov
and
or
inc
jmp
movsb
jecxz
sahf
jb
imul
xchg
sbb
mov
dec
dec
loope
sahf
test
and
ret
mov
xor
add
xchg
imul
ja
inc
mov
add
add
dec
inc
ret
cmpsb
lods
sbb
dec
lret
outsb
fstpt
jmp
nop
xchg
sub
aas
out
bound
cmp
and
fisttpl
aaa
jge
adc
cmp
jbe
fisubrl
sub
addl
adc
adc
sbb
sbb
test
mov
ljmp
push
pop
mov
jae
mov
clc
dec
adc
iret
add
xchg
jae
sbb
inc
lret
aas
dec
or
xor
sbb
shlb
sbb
and
or
xchg
cmc
js
cmova
mov
test
in
mov
nop
aam
mov
ret
jnp
addr16
cli
pop
sub
jle
ds
jle
rolb
out
insl
test
xchg
inc
hlt
popa
testb
mov
push
in
cmp
ja
iret
and
cmpb
ljmp
adc
push
stos
mov
lods
cmovnp
pop
inc
movsl
lret
adc
jmp
lahf
xchg
pop
push
sub
ds
ja
mov
std
push
movsb
mov
or
data16
std
addr16
aaa
in
add
sbb
sbb
mov
sbbl
lret
lds
je
loope
scas
cmp
and
je
enter
aam
fdivl
xor
jmp
in
dec
cmp
imul
mov
movsl
adc
scas
adc
mov
shl
jno
jnp
mov
adc
mov
mov
test
add
sub
cmp
push
je
mov
dec
aas
push
xor
inc
ret
push
add
add
popa
cmp
push
jns
dec
mov
and
cmp
pop
arpl
mov
sub
dec
push
imul
sbb
insl
sbb
dec
lahf
iret
popa
hlt
inc
loop
adc
icebp
adc
sub
loopne
insl
jns
pop
inc
ljmp
xchg
popa
push
lea
or
sub
pop
std
push
nop
push
loopne
cli
lds
or
pop
pushf
lret
pop
xor
sahf
mov
mov
test
xor
inc
movsb
push
pop
rclb
jnp
test
cmpsl
test
xchg
fdivp
movl
insl
or
test
std
lahf
call
adc
mov
xchg
sub
mov
push
lock
jg
out
lahf
or
mov
push
mov
and
sbb
pop
jno
loop
push
add
xchg
sub
lea
push
sbb
les
stos
test
xor
pop
stos
dec
cli
pop
jae
in
jl
mov
in
add
rcrb
inc
mov
xlat
loope
test
sub
popa
push
jmp
into
push
pusha
push
icebp
imul
ret
jno
testl
and
push
in
test
or
pop
mov
or
cwtl
cmp
imul
shl
popa
mov
rcll
mov
jns
fists
or
outsb
dec
shrb
dec
and
add
lds
pop
xchg
testb
inc
and
add
out
es
mov
xor
push
dec
das
fwait
jb
bound
push
aad
push
insb
and
mov
pop
or
pusha
scas
call
dec
fistps
pop
repz
jno
inc
xor
std
les
push
mov
cmp
in
aas
cmp
icebp
xchg
mov
mov
mov
test
xor
adc
imul
mov
popa
cli
std
jnp,pt
lods
ret
packssdw
inc
jecxz
pop
pop
mov
inc
cmp
push
pop
mov
xchg
stc
in
lret
sbb
mov
xchg
aas
ss
adc
xor
adc
fs
push
fwait
pusha
dec
push
rclb
sahf
lcall
xor
dec
in
lea
mov
cmp
or
mov
test
arpl
jo
int
aaa
add
lods
jne
xor
jecxz
jl
jb
mov
out
icebp
mov
rcrl
out
mov
movsb
mov
sbbl
jno
mov
sti
ret
sahf
mov
mov
movsb
inc
sti
idivb
sub
mov
jge
dec
add
scas
loopne
dec
adc
mov
in
popf
pop
or
clc
or
mov
adc
bound
imul
insb
or
xchg
mov
test
dec
xor
or
stos
or
in
cmpsb
cmp
enter
js
enter
and
inc
iret
jl
mov
sbb
push
imul
jnp
or
or
mov
mov
jae
pxor
outsb
scas
adc
mov
xlat
mov
sbb
int3
inc
sarb
inc
and
out
aaa
gs
adc
cmp
pop
leave
mov
loopne
adc
std
mov
sbb
rorb
add
mov
mul
iret
pop
cmp
mov
nop
loop
shll
cmc
notl
mov
popf
outsl
adc
xor
mov
or
adc
pusha
pop
rorb
cmp
in
inc
scas
or
ret
out
xlat
aam
fistpll
daa
out
and
fiadds
push
jl
pop
std
mov
jo
lret
ss
dec
stos
push
loope
aas
cli
sub
cmc
or
xorb
pop
popf
add
les
inc
out
xchg
cmp
mov
mov
pop
and
testl
mov
imul
loope
lcall
sbb
into
loope
jp
cmp
mov
adc
jp
xor
lret
dec
shrl
shl
push
scas
scas
test
pop
bswap
mov
push
inc
lahf
sahf
iret
inc
and
or
cmp
ljmp
mov
mov
pop
sbb
flds
jecxz
inc
pop
add
pop
inc
andb
int3
inc
popa
inc
clc
jecxz
sub
mov
mov
cmp
in
mov
and
cmc
popf
pop
or
jl
daa
aas
cmpsb
pusha
test
nop
jb
lock
lcall
int
push
xchg
mov
add
pop
mov
xchg
push
lahf
sbb
jle
test
fs
push
and
hlt
lea
xor
hlt
dec
fadds
dec
testb
test
adc
and
pop
add
mov
jne
inc
lret
or
call
iret
int
sahf
dec
and
shll
pop
sbbl
or
cmp
pop
cmpsl
lret
sbb
push
cli
lret
addr16
cmp
gs
subl
out
mov
jmp
bound
inc
orl
inc
pop
adc
mov
push
pusha
ja
xor
jle
push
xor
xchg
int
xchg
mov
cmp
push
loop
pushl
add
jbe
or
pop
fdivs
sbb
cmp
outsb
mov
shll
or
jp
daa
or
xor
mov
icebp
dec
or
in
xor
ja
pop
pop
icebp
jnp
into
inc
mov
lret
aad
andl
mov
jne
pop
das
adc
pop
xchg
mov
ret
popa
xchg
into
outsl
pop
mov
cmpsl
popf
fwait
mov
sahf
push
xchg
out
sub
loopne
sub
cmp
push
adc
into
jmp
jecxz
andb
insb
addr16
jae
pop
push
jno
out
mov
jg
push
dec
mov
mov
push
ljmp
adc
adc
mov
es
in
subb
faddl
mov
xchg
repnz
mov
sub
mov
fcompl
outsl
mov
cmp
shrl
sbb
fwait
gs
cld
sbb
mov
adc
mov
mov
les
imul
push
adc
cmp
mov
push
ja
leave
ds
inc
ret
std
sbb
inc
mov
cld
cmpsb
ss
loop
mov
dec
mov
mov
xchg
test
fldl2e
js,pt
lgs
mov
addr16
lahf
dec
sar
fidivl
pop
icebp
push
test
gs
inc
add
sti
insl
jmp
adc
mov
cld
fisubrs
ds
sti
mov
testb
ret
fcmovu
daa
movsl
dec
or
pop
aas
aam
mov
sub
and
fcoml
push
data16
jne
pop
rcll
xchg
addr16
pop
fnstcw
jne
sub
xchg
add
scas
das
pop
push
xchg
pop
aas
xchg
sbb
jno
test
push
js
fsub
push
fucomp
movsl
cld
add
cltd
fstps
xchg
sbb
cmpl
mov
fwait
xchg
out
push
and
jns
fsubrl
fs
stos
nop
sbb
mov
or
gs
and
mov
bound
jp
add
xchg
dec
incl
test
dec
and
xor
jg
jo
stos
or
adc
and
pop
movsb
xchg
pop
cmp
jmp
fcomps
or
xlat
aaa
mov
push
xchg
lret
mov
ret
jno
mov
test
pusha
sbb
add
bound
popa
es
mov
call
call
lds
add
pop
sbb
flds
ret
push
out
mov
pop
flds
leave
inc
mov
xor
inc
add
lds
lahf
movsb
ret
clc
xor
or
aas
add
lea
mov
int
xlat
dec
icebp
fsub
mov
cs
mov
and
cmp
pop
cmp
push
adc
dec
fcmovbe
cmp
mov
dec
lea
jbe
xor
popa
dec
inc
inc
jmp
dec
ljmp
jb
rcrb
inc
pop
mov
mov
mov
hlt
fiadds
and
mov
bound
loope
movsb
mov
test
cmp
sub
aas
and
arpl
jbe
loopne
roll
jno
sbb
jnp
je
push
mov
xchg
stc
sti
mov
jo
cmc
ret
mov
cmp
inc
fwait
aam
xor
repz
jg
jmp
lcall
popa
sbb
pop
enter
pop
or
fmuls
and
mov
data16
mov
daa
je
cmc
mov
fisttpl
test
pop
sbb
jb
insb
cmpl
enter
cs
sub
jo
inc
sub
inc
mov
test
jns
jne
jecxz
incb
in
push
push
es
fs
and
in
stos
mov
daa
daa
xor
lahf
pop
xchg
dec
sbb
aam
cmp
mov
push
push
or
sbb
loope
stos
lock
fsubrl
pop
imul
jbe
xchg
arpl
push
and
xor
xchg
repnz
imul
out
nop
test
or
clc
dec
movsl
push
in
sbb
adc
fs
xchg
mov
sub
dec
es
test
jbe
bnd
adc
mov
aad
xor
mov
push
movsl
xchg
push
arpl
js
icebp
sub
add
aas
inc
pop
out
xchg
cmpsl
fiadds
je
scas
jmp
xchg
xor
test
xchg
addb
cmp
out
daa
jl
aad
sahf
cmp
nop
loope
sub
dec
cmpsb
test
rolb
fs
mov
icebp
pop
iret
gs
scas
out
jne
cld
cmp
fs
cmp
and
lcall
loopne
sti
push
sub
ret
push
sbb
pusha
add
mov
daa
mov
insl
js
lcall
push
lret
fldcw
sbb
and
mov
stos
inc
adc
xor
add
lea
xchg
adc
sbb
lahf
mov
iret
shlb
popa
fwait
idivl
mov
xchg
and
push
or
adc
adc
or
mov
unpckhps
push
sbb
jne
jmp
pop
jmp
jno
sti
fadds
fbstp
cld
jne
mov
jae
mul
fidivrl
mov
xchg
cmp
pop
mov
push
push
aaa
sahf
push
enter
notl
orl
jne
jns
xchg
andl
sub
or
mov
loope
add
loopne
jns
iret
jnp
xor
mov
ret
out
lea
mov
mov
lret
jo
mov
rorb
dec
enter
or
out
pushf
ret
jbe
test
and
cmp
out
mov
xchg
dec
repnz
loope
shll
mov
outsl
sbbl
stos
ss
pop
mov
or
pop
xor
dec
ret
sbbb
out
imul
add
push
cli
pop
fwait
inc
scas
sbbl
notl
test
jno
imul
pushf
and
shr
jp
std
dec
ja
push
xchg
daa
mov
pushf
or
mov
clc
dec
aam
hlt
int3
push
push
jg
mov
mov
ja
int3
mov
js
ret
aad
dec
sbb
imul
mov
dec
mov
mov
ja
jns
push
push
mov
xchg
jmp
cmp
lcall
popf
xchg
cmpl
adc
dec
daa
loopne
xchg
add
stc
and
or
clc
int3
xlat
enter
arpl
or
dec
nop
cmp
xor
setno
add
xchg
xchg
stc
insl
add
popf
test
out
std
pusha
dec
cld
leave
cmp
xchg
shlb
daa
repz
adc
jecxz
es
xor
inc
jge
add
out
dec
jge
xchg
push
jno
daa
mov
stos
movsb
js
mov
or
mov
cld
inc
lcall
arpl
inc
xlat
fists
jb
aam
xlat
xor
in
dec
orb
movsb
outsl
in
loop
sbb
mov
jne
lcall
cmp
inc
or
test
lock
scas
jno
and
adc
cmpsb
adc
aad
sub
mov
push
inc
aad
ds
popf
scas
push
je
imulb
push
daa
test
cmp
cld
test
push
xchg
lret
ljmp
xchg
add
jge
dec
inc
cmpsl
mov
shll
dec
and
adc
js
int3
mov
addr16
iret
mov
lock
movsl
xor
mov
cltd
leave
mov
cs
cli
mov
cld
fisttpll
lahf
cmp
pop
pop
es
sti
and
xlat
xchg
adc
inc
adc
inc
mov
repz
cmpsb
inc
lret
mull
std
insl
loopne
jl
fstpt
inc
cmp
jmp
xchg
int3
dec
fidivl
scas
dec
xchg
xchg
adc
dec
xor
or
aam
cmpb
outsl
cwtl
cwtl
sbb
mov
hlt
in
sub
shrb
xchg
loopne
inc
lret
sarb
jp
pop
popa
test
sbb
imul
out
aad
xchg
ss
push
xor
push
nop
inc
xlat
mov
outsl
xchg
push
in
jbe
sbb
cbtw
lahf
or
test
lods
arpl
jne
mov
shll
push
or
test
xor
adc
mov
push
jbe
inc
and
and
inc
mov
and
sub
out
int3
les
dec
cmpsb
lret
and
push
mov
mov
mov
or
ss
test
ljmp
sub
iret
out
sarl
pop
xchg
mov
icebp
and
cld
dec
shlb
or
in
xor
xchg
cmpsl
out
cmp
decl
xor
jp
xor
inc
or
sahf
bound
cmpsb
adc
xor
mov
cli
insl
lds
std
adc
jle
mov
aaa
clc
mov
lret
divl
in
int
mov
sub
xor
popa
aam
push
scas
into
lea
jo
rcrl
and
popl
jecxz
xchg
mov
pop
pop
sti
dec
sbb
adc
ljmp
movsl
adc
les
mov
and
cmpsl
xchg
push
inc
call
mov
jl
sbb
fucomi
movsb
stos
fcmovnb
sbb
cmp
outsb
or
cmp
cmp
ds
sti
push
adc
fwait
adc
ja
insb
mov
pop
xchg
scas
lahf
fiadds
dec
scas
mov
cmp
and
inc
scas
push
test
mov
sbb
pop
add
call
adc
pop
pop
out
jae
push
mov
dec
sbb
or
xor
outsl
or
out
dec
sub
xchg
fnstsw
repz
xor
out
mov
roll
ss
lods
in
adc
sbb
jae
stos
ret
in
cli
sbb
cld
outsl
hlt
mov
mov
push
adc
cmp
and
pop
add
jnp
fcompl
xorl
daa
filds
dec
pop
xlat
adc
mov
sub
ret
stos
js
cmp
add
mov
push
adc
sbb
mov
addl
sub
movsb
ljmp
repnz
jnp
fldlg2
push
dec
dec
mov
xor
adc
push
xchg
sbb
dec
mov
dec
mov
adc
adcl
les
mov
loopne
jbe
pusha
js
xor
test
cmp
add
jecxz
out
dec
lods
mov
lcall
jmp
xchg
in
cmp
popa
nop
sub
mov
adc
pop
mov
scas
jp
shl
mov
sub
es
sub
inc
add
mov
adc
shrb
sub
aas
mov
add
shl
xchg
xor
or
aaa
pop
dec
insl
loopne
fcmovu
mov
pop
frstor
decl
test
std
sub
push
scas
xchg
mov
imul
xor
pop
loope
sbbb
addb
imul
stc
xchg
rclb
rorb
jecxz
push
and
lea
or
call
mov
push
std
or
outsl
mov
cmp
test
scas
les
cmpl
leave
fistpll
test
aas
loopne
pop
push
iret
jnp
push
jg
xor
dec
push
shl
outsb
cli
fstp
mov
cmp
mov
mov
add
adc
cmp
notl
jno
fadd
mov
inc
sub
std
mov
lcall
out
xchg
pop
insl
xlat
xor
pop
xlat
pushf
pop
shrl
mov
pop
jl
push
xor
xchg
cmpsl
adc
enter
bound
xchg
lcall
xor
in
or
popf
and
and
inc
mov
nop
aad
test
dec
pop
insb
and
jp
gs
ja
mov
xor
and
xchg
nop
in
push
int
ret
push
dec
pop
xchg
pop
popa
dec
in
ret
push
lcall
cmp
mov
add
jns
ficomps
out
cmpsl
jne
call
insb
test
mov
push
rcrb
push
dec
in
pop
sub
test
add
shrb
bound
shll
sti
xlat
std
inc
lock
dec
add
push
xchg
mov
ret
je
test
lock
xor
sbb
fnstcw
mov
jecxz
mov
mov
mov
in
dec
inc
cmp
and
mov
push
cmp
dec
sub
fnsave
push
addr16
in
aas
repz
sub
shll
or
sahf
adc
pop
flds
pusha
xor
ljmp
or
xor
nop
outsl
cmpsl
mov
ss
pop
aaa
sub
jnp
pop
sbb
jl
adcb
stos
mov
mov
jg
lcall
pop
jbe
pop
ret
inc
insb
cmc
fcomps
push
in
adc
sbb
adc
jno
cmp
pop
and
xchg
movsb
scas
in
xchg
inc
cmp
outsb
xchg
push
das
rol
lret
add
xchg
sbb
pop
push
daa
ljmp
dec
std
scas
push
push
fidivrl
lahf
hlt
in
ds
add
lahf
popa
ljmp
add
or
cmp
sbb
outsl
sub
cmp
pop
mov
bound
lock
mov
dec
xchg
adc
mov
adc
xor
add
jge
xchg
jo
inc
out
push
cmp
imul
pop
or
add
dec
int
push
cmp
ret
cmpsb
jge
loope
out
xor
test
pusha
xchg
mov
pop
jnp
push
dec
out
dec
add
sti
dec
lods
jmp
or
movsl
idiv
std
ds
inc
fs
and
jb
jbe
aad
sbb
cltd
lret
and
jnp
or
cmc
test
repnz
dec
mov
lret
pop
mov
sub
mov
mov
ret
lret
mov
inc
pop
pop
bound
ljmp
mov
dec
xchg
hlt
je
adc
sbb
sbb
mov
inc
mov
mov
mov
dec
xor
lret
fistl
bound
cli
test
and
arpl
sub
push
jns
mov
pop
out
fwait
xor
imulb
in
cmpb
push
push
popf
mov
test
fs
sbbb
cs
jecxz
ret
cmc
ds
ds
pop
subl
push
lock
int3
add
cmp
jae
ret
or
cmp
aas
movsb
push
call
stos
add
add
jo
pop
jp
dec
xor
xlat
xchg
fstpt
cli
fdivs
push
inc
pop
sub
fdivrs
jmp
inc
jne
xchg
pop
mov
out
xchg
into
mov
inc
xchg
bound
dec
aaa
xchg
pop
aaa
lea
cltd
xchg
xchg
hlt
dec
fsubrs
or
pop
lds
cmp
icebp
in
push
das
inc
add
or
inc
ljmp
push
or
div
popf
into
icebp
jge
add
sbb
lea
push
fisttpll
popa
das
xchg
enter
and
and
mov
enter
mov
or
ja
aas
jns
push
mov
sbb
sub
inc
sbb
mov
insb
aad
aad
jmp
fisubl
loop
jb
mov
out
hlt
iret
mov
mov
int3
hlt
sub
aam
pop
aaa
jns
pop
pop
add
mov
call
jnp
xchg
push
shrl
pop
pushf
xchg
xchg
xchg
pop
add
cmpsl
jecxz
data16
aas
jno
insb
out
dec
pop
fisttpl
xlat
in
adc
inc
call
and
into
in
inc
xchg
fwait
js
fs
insb
shlb
jne
inc
sub
mov
jp
sub
fcomps
loope
lock
xchg
adc
lds
cmpsl
scas
or
mov
es
ds
jecxz
test
rclb
inc
push
out
cmp
push
outsb
mov
jecxz
sti
sbb
lret
push
addr16
idivb
icebp
pop
popf
out
sahf
fistl
movsb
std
aas
sbb
jmp
enter
addl
test
insb
pop
test
pop
leave
dec
mov
leave
cmpsb
or
sub
out
lret
shlb
les
mov
or
add
and
imul
mov
mov
cmp
psraw
or
mov
mov
mov
mov
pop
movb
test
inc
inc
jmp
call
or
mov
lret
sub
stos
fadds
movsl
repz
xor
pop
jne
dec
movsb
es
pushf
push
add
les
push
fildll
fnstsw
fcoml
mov
popa
mov
xchg
lret
xchg
adcl
ret
adc
pop
loope
dec
mov
movsl
ss
out
sahf
ret
fs
mov
mov
xchg
add
dec
push
xchg
lock
and
jmp
cmc
in
adc
movsb
mov
mov
pop
cmp
add
push
jmp
xlat
add
cs
test
fwait
test
push
cmp
das
sbb
aaa
push
mov
dec
je
pop
movsb
pop
lret
cwtl
in
popa
lahf
jge
lret
mov
mov
xchg
sub
push
push
aas
fsubr
mov
or
xchg
in
cvtps2pi
and
sbb
leave
jns
scas
into
xlat
pusha
xchg
inc
lret
mov
int
test
pusha
lret
dec
mov
loope
add
mov
pop
movsb
push
arpl
push
pop
sbb
xor
mov
cltd
dec
and
je
jle
inc
push
shlb
add
add
lahf
pop
sbb
mov
inc
fldt
mov
jb
addl
sub
rol
clc
or
xlat
shlb
add
addr16
lcall
nop
mov
push
sbb
xchg
bound
popa
enter
dec
test
lock
pop
xchg
aad
rcrb
push
cmp
jmp
lods
es
sbb
jmp
nop
mov
jecxz
insb
cmpsb
sahf
pop
cmp
dec
xor
or
out
dec
jl
xorl
arpl
addr16
sbb
aam
mov
vpsubq
push
cltd
movsb
xchg
loop
xor
xor
and
in
ret
mov
addr16
aam
jge
dec
out
ds
outsl
push
xchg
add
ret
imul
int
mov
mov
adc
push
mov
or
pop
shlb
xor
xchg
jns
out
sbb
mov
push
lds
inc
xor
gs
xchg
sub
and
sbb
cmp
jb
cmp
psubusw
mov
sbb
push
sub
or
sub
mov
outsb
in
test
xchg
or
adc
cmp
mov
and
lea
cmp
lds
arpl
xchg
xor
xor
sbb
cld
sahf
shll
sahf
add
outsl
mov
xor
pop
xchg
pop
into
mov
push
xchg
push
test
in
ret
mov
dec
fmull
adc
and
lahf
ret
or
rol
pop
addb
loopne
cmc
jns
sbb
adc
adc
icebp
test
dec
into
adc
and
mov
repz
add
mov
mov
xor
mov
xchg
sbb
in
pop
out
add
aas
lods
inc
stos
inc
sub
dec
cmp
pusha
xchg
nop
jb
je
jmp
daa
mov
xor
outsb
and
add
aaa
rcll
outsb
fdivs
sahf
pop
outsb
pop
adc
or
inc
ret
push
push
xor
sbbl
push
shlb
adc
loop
adc
cmpsl
and
jbe
xchg
mov
jl
inc
inc
int
call
xlat
bound
scas
mov
mul
sti
addr16
mov
xorb
sbb
fistl
sbb
loopne
pop
lea
jg
and
testb
dec
cltd
push
add
imul
mov
xchg
adc
sub
mov
cmc
mov
jecxz
cmp
mov
mov
mov
dec
cmp
rep
push
xor
cmp
adc
scas
andb
stos
inc
inc
xor
or
push
hlt
aad
rclb
inc
rcl
ljmp
xor
push
test
cwtl
sbb
es
arpl
mov
dec
fmuls
pop
pop
jo
jo
xor
inc
sarl
jns
cmp
subl
test
hlt
sbbl
rorl
rclb
movsl
adcb
jns
repnz
aaa
lea
mov
stos
repnz
mov
test
jns
mov
addr16
mov
test
xchg
loop
add
push
mov
xchg
call
fwait
in
or
int
call
ja
lods
lcall
aad
inc
pop
das
das
add
inc
and
cmp
repz
lret
fucom
dec
mov
imul
xchg
push
xchg
xchg
mov
xor
out
add
lock
stos
ficomps
add
sbb
pop
mov
iret
inc
add
pop
pop
shll
movsl
mov
out
shrb
fists
dec
and
flds
idivl
add
cwtl
add
jmp
nop
aad
add
fdivrl
add
in
mov
add
ja
add
aas
cmpsl
jnp
dec
test
cwtl
adc
jb
and
jns
lods
lea
fldcw
pop
pop
daa
jecxz
lret
jl
je
icebp
neg
dec
hlt
dec
mov
adc
sub
subl
and
push
xor
sbb
test
push
xchg
xchg
pushf
int
test
adc
push
mov
sub
mov
cmp
add
sti
test
scas
cwtl
mov
not
add
add
or
jno
das
adc
cmp
ret
aaa
inc
xchg
cltd
stos
mov
cmp
and
mov
sti
insl
xchg
roll
outsl
fistpll
mov
xor
movsl
test
add
adc
sar
insb
in
insl
xchg
xchg
fs
test
jmp
sar
mov
mov
in
add
adc
das
rorl
out
aad
lret
in
xor
loop
rorb
xchg
push
test
outsb
xor
adc
jmp
mov
popf
shlb
xchg
mov
cmp
lds
jmp
imul
jmp
jbe
mov
sahf
cmp
pop
push
mov
mov
cmp
jl
add
clc
repnz
loope
call
pop
adc
stos
mov
push
inc
xchg
negb
sbb
mov
out
xchg
push
pop
int
out
inc
xchg
sub
and
mov
mov
mov
shrb
pop
ret
insl
je
aas
dec
cs
mov
jnp
lahf
xor
or
fistl
push
mov
dec
push
lcall
out
aad
push
test
cmp
xor
sbb
xor
mov
in
fcompl
mov
pushf
push
fbstp
and
push
fsubs
into
repz
dec
mov
mov
js
iret
cltd
jge
stc
pushf
and
movb
adc
jmp
sub
shrb
aad
mov
push
sbb
addl
test
aam
lock
dec
dec
les
jle
es
push
ds
movsl
test
out
fcoms
push
sbb
loop
push
xchg
pop
jae
pop
sub
inc
lcall
lds
and
pop
lock
adc
movsb
push
rol
xlat
inc
sbb
xor
nop
mov
xor
adc
mov
negb
test
sub
adc
sub
mov
push
dec
sbb
mov
push
stos
inc
in
jmp
lods
dec
movsb
imul
or
lret
or
sub
jo
aas
adc
das
arpl
pusha
add
movsl
es
ficomps
into
out
inc
cmp
or
int
adc
adc
pop
daa
or
push
mov
popa
cli
aaa
xor
lds
sub
ret
jno
cmpsb
lea
cltd
mov
js
and
shr
xchg
sub
out
push
sbb
stos
dec
ret
sarl
mov
stc
lret
sub
mov
stos
sub
and
idivb
mov
mov
test
dec
fstp
repnz
loopne
xchg
dec
sub
adc
xchg
push
repnz
aam
add
popa
imul
dec
stos
jl
sbb
rorl
xor
mov
fdivrs
xchg
mov
bound
test
sar
clc
mov
aas
xchg
mov
pop
lret
mov
fnstsw
xchg
sti
sbb
xor
test
cmpsb
mov
dec
cmp
inc
add
and
push
lcall
adc
or
movsl
aas
dec
daa
int3
and
lret
and
int3
jo
movsb
and
bound
dec
or
jb
js
in
cmpsb
push
jl
fdivs
addb
out
cmp
and
push
xor
repz
outsl
imul
clc
sahf
cmc
push
and
adc
sbb
pushf
in
sbb
sbb
xor
cmp
push
mov
pop
push
lahf
push
out
push
inc
jns
push
popa
adc
into
loope
out
push
dec
lods
ja
movsb
add
xchg
iret
lock
xor
fsubr
xchg
inc
in
push
add
pop
into
ss
adc
xor
in
stos
cli
pop
and
pop
xchg
push
lret
dec
in
xor
dec
nop
and
daa
push
cmpsb
shll
mov
cmp
sbb
mov
adc
ret
stc
in
xor
sbb
clc
icebp
subb
xchg
xorl
call
out
insl
stos
push
adc
push
jg
add
cmp
leave
cltd
in
or
lods
ss
and
aaa
mov
clc
jno
adc
ljmp
and
xor
mov
aam
mov
sub
mov
or
adc
aas
xchg
decb
mov
mov
dec
cwtl
stos
xor
clc
push
dec
out
adc
cmp
inc
lret
ret
xchg
pop
aas
mov
das
sti
cmc
add
test
xor
push
mov
icebp
sub
push
stos
cmpsl
movsl
aaa
pushf
inc
pop
push
repnz
inc
cli
mulps
jle
call
sub
popa
pop
jmp
or
icebp
mov
mov
pop
sub
xor
rolb
lock
inc
xchg
sti
jmp
pushf
fwait
or
and
ds
sbb
add
aam
sbb
add
inc
js
in
push
imul
inc
push
pusha
inc
cmp
fcmovu
popa
in
mov
nop
cmp
cmp
scas
adc
test
jo
lea
push
dec
xor
sbb
les
rcrl
fisubl
xorb
aaa
sbb
pop
push
push
jecxz
stc
mov
sahf
or
inc
and
pop
add
pushf
imul
mov
into
insb
and
jl
dec
push
scas
icebp
in
pop
sbb
je
dec
xchg
das
mov
mov
xchg
xchg
imull
imul
mov
aaa
xchg
add
dec
gs
or
dec
cmp
xor
pop
lcall
aaa
lret
cli
test
loope
inc
and
lret
xlat
sbb
mov
sbb
mov
cmpsl
xor
xor
xchg
js
sbb
push
bound
out
into
imul
ss
mov
fsubs
mov
xchg
dec
xchg
jl
stos
testl
fstp
out
jns
xor
faddl
bound
adc
mov
pop
adc
jp
xor
dec
xlat
adc
add
xchg
jmp
imul
mov
fdiv
inc
inc
loop
xlat
xchg
add
mov
fsubl
inc
add
lret
pop
mov
scas
dec
push
jb
jne
pop
adc
decl
js
pop
sbb
sbb
xlat
cmp
xor
dec
mov
out
rcrb
daa
mov
jge
add
mov
xor
ja
lea
ja
test
cmc
xor
aaa
je
sub
mov
jb
jne
ficoms
cmpsl
push
xchg
cmp
clc
cmp
dec
loopne
imul
inc
dec
add
jg
mov
ja
stos
cmc
sub
jns
xorl
mov
int
popf
cmpsb
sbb
jb
cmp
out
mov
lock
fcoml
fidivl
xor
fiadds
inc
jnp
push
pop
mov
jmp
cmp
mov
js
lret
loope
cmc
jns
inc
fisttps
cs
fisttps
das
xchg
mov
mov
push
rolb
xchg
cmpb
cs
pop
scas
fiaddl
adc
bound
out
xchg
cmpb
imul
mov
jns
aam
sbb
fstp
data16
dec
inc
mulb
aad
lret
pop
in
inc
jecxz
dec
cld
data16
decl
out
mov
or
and
jae
negl
movsl
xchg
mov
cld
sti
pop
outsl
in
addr16
inc
in
mov
cmp
cmp
clc
mov
stc
cmc
mov
fdivs
mov
mov
push
cld
shlb
std
xor
pop
push
push
fildll
ret
mov
adc
xchg
adc
fsubr
sbb
sub
cmp
repz
leave
clc
xchg
sub
out
aas
adc
pop
out
dec
imul
jge
iret
fimull
ret
cld
add
fsubl
pop
jge
insl
sbb
je
test
into
aam
pop
shll
sar
mov
mov
je
pushf
popl
add
imulb
xor
mov
test
and
cwtl
adc
into
jns
mov
sub
pop
push
andw
aad
shrb
mov
adc
and
adc
ja
imul
out
inc
add
sub
arpl
mov
jmp
xchg
adc
mov
add
dec
int3
mov
test
inc
mov
lock
outsl
adc
sub
sahf
xchg
inc
das
leave
lock
insl
ret
ret
xchg
pop
push
mov
out
popa
cwtl
fldenv
pop
mov
ss
insb
xchg
outsl
clc
std
jns
pop
sti
sbb
jne
daa
mov
cmp
mov
sub
insb
mov
popf
xchg
aam
mov
adc
pop
mov
gs
orb
sbb
dec
test
ljmp
fistpl
xchg
lcall
fcmovnb
ljmp
sbb
into
and
or
popa
mov
cli
or
roll
jb
jnp
mov
jmp
mov
jecxz
shll
iret
sti
dec
mov
std
pop
xchg
xchg
inc
push
push
mov
mov
mov
ficompl
push
mov
movsb
pop
sbb
repz
sub
lock
mov
cmpsb
test
cltd
fwait
adc
lods
stc
adc
mov
inc
sbb
enter
idivl
sub
cmp
or
xchg
and
adc
fs
call
jns
add
inc
repz
cwtl
shll
sub
pop
lcall
jmp
inc
je
rclb
and
lock
or
rolb
fidivrl
xchg
mov
push
dec
std
or
mov
push
pop
and
enter
dec
repz
ror
dec
jmp
stc
push
mov
inc
fcoms
fwait
out
aaa
nop
add
xchg
jecxz
mov
sbb
pop
scas
sbb
jno
out
bound
cmp
pop
in
cmpsb
enter
ja
mov
adc
inc
enter
sub
popa
xchg
pop
and
jno
mov
sbb
lret
scas
cltd
inc
insb
test
xchg
dec
and
loop
mov
shl
loop
mov
xor
gs
out
fmull
mov
lahf
imul
pop
adc
or
movsb
repnz
sub
hlt
repz
jp
sbb
mov
ss
pop
sub
push
pop
mov
xor
xchg
push
movsb
loop
leave
testl
pop
dec
sub
stos
dec
cmpsl
mov
mov
fcomps
inc
test
clc
lcall
aas
stos
mov
outsb
leave
dec
mov
jns
sbb
rcll
or
in
stc
mov
jae
push
xor
inc
dec
mov
jle
arpl
fistps
pop
jp
jns
lods
push
orl
inc
mov
rol
pop
js
adc
add
insl
mov
mov
sbb
mov
pop
aam
insb
mov
aaa
mov
push
lret
push
mov
imul
lods
pop
cltd
xchg
or
adc
and
stos
jp
mov
dec
imul
pop
cmp
inc
cs
dec
rcl
pop
mov
pusha
cmp
in
cmp
cmc
mov
xchg
xchg
sti
push
es
inc
sbb
les
subb
cmpsb
mov
imul
insl
sub
xchg
test
test
das
imul
dec
enter
int
out
xlat
arpl
hlt
aam
cld
jno
and
addb
push
push
pop
pusha
test
push
in
xchg
out
cmp
cmp
cwtl
out
nop
pop
pop
imul
std
lock
inc
pop
adc
orb
lret
mov
out
aam
sbb
repz
jp
cmp
adc
xor
mov
or
mov
jle
icebp
mov
cwtl
dec
mov
cmp
mov
lret
not
es
imul
add
icebp
dec
rorb
xor
adc
jne
movsl
std
dec
mov
cmp
dec
pop
and
mov
imul
xchg
lahf
or
jp
movsl
incb
ret
jg
mov
movb
stos
push
fidivl
sub
mov
pavgb
or
mov
jae
pushf
fwait
push
repnz
jp
daa
mov
sbb
out
ret
out
xor
and
add
sarb
adc
jne
data16
dec
mov
loop
pushf
fildll
lds
sbbl
xchg
cmp
lds
and
sbb
pop
add
pop
stos
mov
sub
fists
xchg
or
test
insb
in
insb
adc
ds
insb
cmp
sbb
gs
in
jl
pop
push
adc
pop
xchg
cmpsb
mov
dec
insl
add
int
jne
rclb
xlat
adc
loop
lahf
mov
dec
fdivrs
dec
inc
lds
push
lret
push
jg
or
and
js
pushf
add
std
in
inc
icebp
scas
xchg
fisttpl
iret
mulb
and
push
addl
ret
adc
adc
jnp
adc
mov
in
inc
pop
enter
enter
adc
xor
cltd
loope
test
adc
sbb
mov
jns
cmpsl
push
and
pushf
repz
push
lock
pop
enter
ja
fwait
rorl
push
leave
jns
mov
outsb
xor
pop
push
aaa
fs
loope
scas
push
pop
ret
pushf
mov
sbb
test
sub
sbb
jne
sbb
sub
add
sbb
std
mov
jmp
mov
les
enter
add
push
stos
xchg
xchg
adc
test
or
jge
cs
arpl
rcl
lock
xor
aam
add
push
adc
mov
inc
jecxz
xchg
outsb
lods
lods
mov
cmp
pop
cmp
mov
ds
sti
push
pop
lahf
mov
shlb
inc
fisubrs
stos
fwait
cmp
fnsave
mov
mov
jmp
jb
lock
pop
mov
mov
popa
mov
shlb
outsl
cwtl
fs
decl
rolb
in
xchg
mov
loop,pn
xor
cwtl
pop
ljmp
dec
in
mov
data16
fcmovne
lret
pop
out
insb
in
jae
int3
cmp
xchg
lds
cmp
fadd
dec
sbb
dec
test
jns
mov
mov
jmp
std
scas
sbb
xchg
mov
cld
mov
popa
mov
mov
fnstsw
sub
mov
aaa
mov
daa
dec
lret
call
insb
cmpsb
dec
imul
mov
push
in
mov
mov
bound
js
sbb
xor
push
es
dec
lock
adc
inc
mov
bound
outsb
gs
cmp
out
popf
icebp
mov
sub
jnp
cmp
scas
scas
push
or
ret
cmp
int
jge
stos
rcr
mov
fisubrl
xchg
push
outsb
pop
or
xlat
jnp
shrb
lret
sub
mov
xchg
out
adc
sub
and
lea
or
push
jmp
das
push
loopne
aaa
push
adc
or
test
push
pusha
jmp
ficompl
mov
loopne
jae
and
jmp
das
xchg
dec
mov
inc
stc
push
in
sub
stos
sub
xchg
fcompl
adc
hlt
push
add
leave
pop
fmuls
arpl
loop
add
outsl
pop
xor
adc
jno
jecxz
ss
cli
sbb
ret
pop
fisubrs
jnp
shll
stos
outsb
jl
das
dec
shlb
xor
jecxz
or
jnp
xchg
test
jne
inc
cld
sahf
ficoms
cmp
xor
sub
mov
cmp
jne
fiadds
inc
dec
xor
bound
loope
inc
cs
jle
push
test
adc
sbb
mov
adc
shl
mov
in
call
mov
mov
and
lock
xor
push
movsb
pop
notb
add
mov
negb
or
je
mov
jno
pushf
cmpsl
and
test
push
jl
push
sahf
sbb
das
loope
scas
sbb
loope
stos
stc
sti
aam
das
mov
mov
cmovo
andl
adc
lret
or
or
sbb
in
jne
mov
mov
xchg
out
dec
inc
add
cmp
mov
and
mull
sahf
in
lds
pop
lcall
in
cld
call
add
cmpb
adc
jo
push
aad
inc
out
inc
push
sub
xchg
mov
daa
scas
out
lods
xchg
cmovle
sbb
mov
mov
bound
ret
mov
lock
xchg
xlat
inc
ds
aaa
sbb
popa
adc
shlb
stos
xor
add
lods
loopne
int3
push
pop
in
fldt
cwtl
mov
mov
sbb
enter
mov
or
psubsb
lret
fdivl
adc
or
arpl
inc
je
cmpsb
fstpt
je
push
pop
xorb
xchg
sbb
rolb
imul
stc
gs
sub
mov
pop
ds
inc
adc
jl
or
stc
fcompl
mov
adc
in
in
testb
ret
pop
jne
push
fpatan
push
fildl
xchg
add
fwait
pop
fcmovbe
or
cs
fcoms
inc
dec
mov
xchg
push
sarl
and
mov
ds
add
xor
push
xchg
insl
cmpsl
adc
stc
sbb
xchg
sbb
add
or
cld
or
dec
mov
shld
sbb
sbbl
leave
lahf
push
add
add
and
jmp
insb
mov
icebp
fldcw
rcrl
push
or
or
xchg
leave
pop
cmpsl
mov
mov
pop
test
and
jno
js
add
adc
sbb
loope
lods
mov
jmp
popw
add
testb
push
fs
push
adc
sahf
xchg
mov
and
and
pop
cmp
dec
adc
das
fsts
sub
jg
ret
lcall
cmc
out
and
lods
repz
dec
mov
xor
cmpl
jge
cmp
pop
dec
js
scas
fbld
cmp
mov
push
push
dec
loope
mov
push
push
pop
push
jno,pt
inc
xchg
push
pop
mov
adc
mov
scas
fdivrl
repnz
xchg
rcll
sub
imul
mov
inc
lds
lods
push
fimull
jmp
jg
add
mov
push
lock
xorl
je
aas
push
or
std
fbstp
mov
loopne
sahf
outsl
dec
testb
pop
sbb
sbb
xor
mov
fnstcw
pop
in
jg
and
xchg
ss
leave
cmpl
in
bound
test
popf
je
dec
jo
cmpsl
sub
shl
pop
mov
roll
pop
sub
inc
inc
mov
push
mov
sub
push
and
out
pop
push
mov
dec
adc
pop
jmp
xchg
cmp
add
add
das
push
shll
fldt
sbb
rep
xchg
andb
pop
push
dec
mov
in
or
sub
mov
xor
add
js
ror
ss
xchg
push
out
jbe
mov
mov
pop
or
popf
sub
add
aas
mov
fwait
sti
mov
xor
xchg
sbb
sub
addr16
mov
repz
xor
push
rcrb
mov
lret
fistpl
addr16
loop
xor
mov
sti
je
subb
cmp
jb
sbb
pop
shrl
xor
cltd
jb
js
out
js
imul
sbb
out
int
adc
adc
lds
movsl
xlat
fsubl
mov
pop
int
sahf
sub
add
pop
and
xchg
sbb
out
fdivp
pop
dec
fld
out
sub
xor
jno
dec
sbb
inc
stos
xorb
mov
push
and
pop
and
mov
ja
hlt
int
and
iret
sarl
mov
sti
jnp
jecxz
insb
cmpsl
aas
fistl
leave
jmp
lret
jecxz
sbb
pop
int3
sbb
adc
mov
cmp
aas
add
mov
mov
dec
mov
js
fisubs
xor
jae
nop
push
das
movsb
xchg
dec
dec
inc
scas
and
or
pushf
sub
xor
ss
aam
daa
xchg
loop
imul
lret
xor
mov
jge
bound
notb
out
mov
jae
fcmovbe
fimull
gs
call
sub
pop
test
mov
and
pop
test
xchg
fisttps
cmp
and
repnz
add
mov
in
jmp
adc
hlt
enter
mov
jge
loope
jl
and
mov
jb
into
jmp
inc
sbb
mov
addr16
add
lock
sub
ret
add
and
sub
or
pop
test
loope
fwait
enter
push
pop
sub
testl
adc
js
jmp
stc
sub
in
jecxz
fbstp
cmp
mov
cmc
pop
pop
xchg
and
fmul
cs
into
jnp
push
aas
dec
in
mov
push
movb
push
sarb
sbb
repz
mov
in
dec
jg
push
sbb
shll
cmp
push
test
in
cltd
mov
ds
andb
cmpsb
mov
sbb
sbb
mov
sbb
fbstp
loopne
addr16
clc
cmp
cmp
cmc
sbb
out
xchg
xchg
pop
gs
aaa
cmp
fsubrl
xor
mov
mov
shlb
mov
cmp
adc
mov
adc
adc
xor
shlb
mov
lcall
mov
adc
xchg
shll
iret
jecxz
mov
push
mov
popf
out
ret
dec
sbb
or
push
push
sbb
fists
insl
lahf
adc
jnp
lods
sub
lods
mov
mov
sbb
adc
aad
repz
lea
data16
jae
mov
cmp
movb
imul
inc
lcall
and
xchg
pop
lods
fstpl
es
xchg
insb
xchg
inc
mov
pop
push
icebp
shrb
scas
in
add
clc
into
or
dec
or
mov
and
sti
std
or
test
cmp
xlat
mov
pop
mov
adc
sbb
jp
mov
into
insb
xchg
or
xchg
scas
xchg
icebp
sub
out
mov
xchg
xlat
cli
pushaw
sbb
sbb
lahf
push
xor
ret
insl
cmp
dec
jecxz
and
mov
test
pushf
dec
jb
dec
out
popa
or
popaw
dec
cld
jl
jg
dec
pusha
sub
adc
inc
stos
mov
hlt
dec
sahf
xchg
mov
and
cmp
push
cmp
loopne
mov
sbb
jecxz
or
movb
je
out
pop
or
sub
adcl
push
leave
outsl
ljmp
fcmove
icebp
pop
mov
out
clc
pop
jne
xchg
leave
xor
roll
fwait
inc
mov
pop
cld
es
xor
xchg
pop
inc
loop
sarl
leave
ret
repz
push
xor
mov
sub
xchg
adc
inc
cmp
les
enter
add
mov
lds
lret
jp
pop
in
mov
jmp
ffree
jns
fs
jb
fs
fsts
insb
int3
sbb
inc
and
and
xchg
sbb
jge
fdiv
jl
and
shrl
subb
mov
int3
fisubs
jns
add
data16
pusha
ss
pop
lods
adc
and
pop
mov
ss
cmp
testl
aas
and
out
pop
and
push
mov
mov
and
scas
pop
pop
add
lret
jle
insb
sbb
or
dec
pop
cmp
xor
pop
repz
pop
inc
and
mov
movsl
das
inc
test
push
cmpsb
sub
mov
lods
cltd
mov
sbb
add
into
mov
imul
andl
adc
mov
xchg
xlat
in
movb
scas
pop
insb
scas
pop
dec
push
dec
rcll
pop
adc
shrl
xor
ret
jp
js
mov
int3
cli
rcll
and
pushf
test
lds
mov
push
jo
hlt
enter
xor
push
or
jmp
pop
cmp
xor
xchg
ja
adcb
dec
jmp
sti
jp
sub
enter
fbld
hlt
adcb
inc
cmp
push
mov
les
sti
nop
mov
loop
repz
jmp
shrb
or
or
xor
mov
divl
in
out
mov
mov
fs
cmp
xor
jle
cmp
pop
cmp
adc
ret
pusha
js
ds
xor
cmp
lods
leave
enter
mov
loopne
jmp
aad
stos
mov
mov
outsl
in
mov
popa
imul
orl
xor
lods
xor
pushf
jno
int3
inc
out
cld
inc
mov
and
pushf
pop
and
hlt
lret
insl
xchg
push
mov
out
jnp
test
or
and
add
and
jns
outsl
lock
mov
jo
cwtl
inc
xor
inc
push
lock
jno
sbb
sbb
shl
jb
cmp
pop
addl
and
push
sbb
das
loop
pushf
loop
inc
sarb
and
and
push
mov
push
cmp
jae
data16
sub
xor
cmpsb
lea
lock
jno
push
adc
in
lods
mov
inc
xor
xchg
ljmp
and
arpl
movsb
xor
in
jp
xchg
stos
or
jno
sub
iret
adc
xchg
xchg
test
pop
sub
out
jge
cmpsb
outsl
scas
out
push
punpcklwd
or
adc
jle
fldenv
bound
std
dec
ss
xchg
arpl
or
adcl
repnz
movsb
xchg
les
scas
cmp
mov
outsb
cmpsl
subl
add
jl
and
int
arpl
movsl
mov
mov
sahf
inc
scas
mov
and
movsl
push
fndisi(8087
dec
jb
and
lret
test
cmc
pop
push
cltd
mov
push
push
sbb
jp
xor
cmpsl
xchg
or
loope
mov
push
stc
addr16
int3
lds
and
das
mov
std
sub
mov
hlt
lcall
add
imul
pop
or
or
gs
lcall
or
ja
sarb
popf
loope
cmp
loope
mov
jb
push
sub
mov
aaa
enter
mov
push
jg
mov
jle
jmp
pop
pop
lds
rcr
into
or
sbb
or
add
cld
sub
fwait
and
cmp
das
into
mov
repnz
jle
daa
inc
out
push
pop
fbld
jge
orb
sub
dec
inc
and
call
daa
stos
mov
sti
fcom
cmp
mov
rolb
xchg
mov
iret
aad
or
push
pop
dec
rorb
fwait
popf
jbe
pop
loope
es
jg
jae
pop
test
cs
fld
ret
lds
lock
cmpsl
pushl
ret
mov
out
or
fidivs
mov
lock
jns
adc
popa
jge
jnp
aaa
call
stos
test
cltd
mov
jle
lods
orl
pop
xchg
in
inc
or
in
pusha
je
rcr
cld
hlt
mov
das
cmpb
dec
adc
in
fstpt
rorl
sbb
in
scas
pop
push
sbb
loopne
sbbl
push
imull
dec
mov
dec
ret
aaa
sub
dec
shr
inc
adc
jne
in
flds
cmp
data16
pushf
leave
pop
push
lock
pushw
push
lret
addr16
jno
popa
in
mov
jmp
push
out
cmpsl
repz
aad
in
aam
in
stos
fldl2t
dec
scas
or
mov
arpl
jmp
mov
xchg
dec
lea
loop
mov
jge
subb
enter
push
mov
fcmovnu
jbe
pop
jnp
inc
mov
out
in
or
outsb
into
fcomps
sub
sub
cli
lock
imul
movl
lahf
fisubl
dec
inc
mov
push
dec
incb
dec
mov
fiaddl
testb
hlt
ficompl
inc
fwait
cmp
pop
pop
std
push
leave
xchg
int
mov
lret
dec
enter
movsb
push
push
fstp
xchg
mov
rolb
filds
pushf
sbb
inc
pop
mov
mov
fs
push
add
pop
lret
xchg
inc
sti
roll
cltd
and
pop
cs
jge
es
push
mov
scas
add
cmc
rorl
fsubrs
jo
or
popf
add
pusha
cli
enter
push
xchg
jno
pop
ss
pop
testb
add
dec
mov
scas
das
or
fadds
push
xchg
gs
push
leave
fcomip
adc
out
lret
sub
push
movsb
cmpsb
lret
xchg
movsb
push
mov
call
in
inc
cmpsb
ja
fidivs
out
jge
inc
subb
rorb
in
mov
sbb
rorb
movsl
in
out
jecxz
mov
or
clc
addl
add
lret
mov
into
jmp
jl
clc
sbb
jmp
mov
xor
xchg
out
adc
inc
xchg
inc
jp
pop
imul
push
sub
pop
popa
sub
mov
push
mov
xchg
shl
mov
or
adc
xchg
into
cli
movsb
mov
pop
rcll
ret
daa
jne
jecxz
mov
ss
test
fstpl
stc
cmp
cs
pop
jge
aas
mov
fisttpl
lcall
les
shrl
adc
fisubrl
xchg
xchg
fcmovnbe
call
and
adc
and
mov
pop
mov
adc
pop
lret
lahf
xor
xchg
mov
inc
in
or
adc
repz
and
sub
xchg
decb
subb
test
push
adc
dec
fcoml
pop
lea
sub
clc
or
data16
xchg
imul
sbb
jne
pop
or
shlb
xor
jnp
jno
push
fmuls
or
or
mov
push
cmp
outsb
jbe
into
push
cwtl
xchg
mov
add
decl
stc
xchg
mov
stos
popa
ret
std
ja
arpl
mov
cmp
jl
repz
out
dec
jecxz
fcoml
mov
popf
loope
roll
push
mov
add
gs
pop
ficoms
int3
aaa
jns
pop
repz
enter
add
test
imul
mov
sub
inc
sahf
cmp
cwtl
cmp
fnstcw
push
and
inc
adcb
sub
cmc
test
xchg
ret
push
lahf
rol
dec
sbb
fidivrs
daa
cs
in
xor
sub
fdivrs
push
lods
push
cmp
sub
clc
cmpsl
out
or
mov
mov
cmp
xor
nop
movsb
adc
xchg
sub
pop
in
or
dec
xchg
or
icebp
pusha
in
out
dec
lods
mov
nop
jo
cmp
pusha
and
movq
lock
popa
fcomp
icebp
ret
xchg
or
add
pop
mov
xor
das
bnd
or
out
pop
mov
jecxz
push
lock
pop
insb
das
daa
inc
out
pop
iret
add
sbb
inc
inc
pop
adc
std
xchg
int
mov
outsl
fistps
cli
sahf
unpcklps
jae
jge
or
cli
clc
fs
push
mov
lds
xor
out
scas
cli
sbb
nop
mov
pop
mov
mov
xchg
or
leave
or
inc
imul
sub
jmp
lods
add
mov
lcall
int3
xlat
lods
je
sub
push
arpl
jbe
mov
pop
outsb
imulb
pop
arpl
xchg
jne
aam
out
jle
or
jp
mov
push
dec
jbe
cli
pushf
push
mov
and
jl
ds
cmpsb
rolb
jge
dec
cltd
mov
adc
icebp
mov
in
ljmp
jo
jecxz
dec
repz
sti
dec
fimull
xchg
outsl
add
pop
imul
in
pop
test
mov
or
ret
mov
inc
jae
mov
imul
out
xor
xchg
es
fwait
adcl
aas
les
sbb
frstor
push
fs
adc
or
es
bswap
je
jnp
shll
jns
test
into
lock
jl
lahf
addr16
int
jb
adc
test
outsb
scas
jg
sub
fwait
insl
sbbl
icebp
mov
inc
fildll
arpl
mov
lret
arpl
hlt
stos
daa
outsl
push
das
fdivs
ljmp
jne
sub
test
jle
stc
aad
sub
mov
mov
ret
and
sti
arpl
dec
mov
push
and
mov
ret
lret
test
ss
in
es
lods
into
test
shrl
cmp
int
ror
adc
insl
mov
cmp
aas
rorb
int
adc
subb
or
dec
aaa
push
push
adc
loop
push
dec
add
jne
aas
test
xchg
cmc
adc
sub
fisttpl
sub
pop
jne
adc
pop
xchg
jl
sub
out
xchg
inc
xor
jg
jo
es
addr16
sbb
xor
fisttpll
adc
inc
out
or
lods
and
push
jne
scas
mov
cmc
int3
and
or
and
mov
lea
jo
inc
adc
mov
dec
jno
add
jmp
ljmp
outsb
orl
stos
jle
lock
call
lods
xor
int3
xor
dec
mov
imul
inc
xchg
and
shlb
int3
mov
fldenv
adc
add
mov
into
cltd
movsb
jns
inc
cmp
inc
xor
cmp
ja
imul
adc
and
push
out
adc
inc
jl
jne
test
mov
lcall
mov
sbb
xchg
push
call
pop
xlat
mov
test
adcb
rorb
cmpsb
lods
gs
push
jmp
repz
or
sub
xchg
cmp
sarl
dec
jp
cwtl
nop
cmp
sbb
enter
popf
out
push
adc
pop
ret
xor
popa
or
cmc
fstpl
lcall
aad
mov
dec
es
jp
inc
sbb
in
ss
push
bound
ffreep
fnstenv
mov
cmc
or
push
sbb
enter
mov
pop
dec
and
xlat
sbb
insb
aaa
stos
imul
add
push
push
push
xchg
pushf
adc
add
fcoms
rclb
xchg
sub
rorb
add
add
or
inc
imul
leave
pop
pop
test
xor
mov
push
pop
xor
push
in
pop
or
addr16
fs
in
xchg
icebp
jecxz
fldpi
mov
xchg
mov
bound
ds
cmp
lret
pop
adc
rorl
pop
je
fmul
outsb
add
xchg
dec
pop
idivl
popf
cmp
mov
xlat
jmp
pop
ds
inc
mov
iret
aam
jb
shll
jmp
lahf
mov
repz
sbb
cwtl
pop
je
testb
movsb
lock
or
insb
fdiv
gs
aad
jmp
or
pop
jae
push
and
and
mov
or
push
cmpsb
aam
add
mov
mov
xlat
call
sti
jbe
and
sbb
pushf
inc
add
aad
xchg
lcall
mov
aad
mov
popf
cmpsb
sarl
pop
xor
cs
xchg
cmp
jae
jae
es
mov
xchg
cmp
and
mov
or
or
and
adc
inc
add
push
shll
mov
adc
aaa
jp
into
lods
cmp
push
sub
sub
out
imul
or
das
dec
dec
jl
xchg
je
std
sub
stc
scas
fmul
xor
repnz
xor
fdivs
es
or
cwtl
mov
xor
hlt
jae
fbld
pushf
movsl
sbb
xchg
ficomps
loopne
xchg
mov
fs
jbe
or
cmp
jnp
pop
lds
cmpsl
pop
adc
xchg
dec
push
inc
pop
test
pop
and
and
cmp
jne
xchg
loop
mov
cltd
ljmp
lea
jp
mov
ret
mov
mov
pop
mulb
cltd
ficoms
call
mov
jl
bound
push
xchg
dec
xchg
pop
cwtl
mov
jns
jmp
xor
or
cld
add
push
test
dec
mov
and
mov
int
mov
dec
cltd
loope
jno
enter
mov
sub
jnp
in
and
notb
adc
adc
popf
aam
ja
fisubrl
fbstp
or
xor
add
mov
mov
in
sbb
int3
insb
jae
mov
cmpsb
cmpsl
rol
leave
or
sub
sub
stc
sarl
xor
jecxz
xlat
lock
aam
push
divb
xchg
push
call
icebp
das
clc
stc
or
adc
repz
cmpsb
add
sub
bound
call
xchg
clc
js
fidivrs
dec
ja
sahf
shll
cs
inc
sbb
pop
push
sbb
mov
cmpb
out
mov
push
push
aaa
es
add
push
inc
adcl
shl
lock
sub
insl
push
jbe
dec
mov
jmp
push
push
dec
cs
xor
std
dec
xor
inc
push
inc
mull
jno
mov
mov
and
cmpsl
outsb
or
arpl
imulb
mov
jp
lret
je
mov
mov
fistl
mov
xchg
icebp
leave
inc
add
enter
movsl
repnz
inc
adc
imul
push
jns
mov
mov
hlt
add
pop
enter
jns
arpl
popa
arpl
pop
cmpsl
cs
dec
test
jne
out
push
lahf
mov
test
repnz
imul
mov
in
adc
dec
cmp
add
mov
lret
bound
fcomps
adc
data16
gs
data16
aam
daa
cli
popa
aas
pop
mov
xor
out
mov
pop
mov
test
cs
sti
loop
xchg
mov
popa
fwait
ja
pop
gs
sbb
sub
movsb
push
mov
shll
or
aam
imul
or
fldt
aad
out
fstpl
or
mov
sbb
push
push
mov
pop
sar
add
pop
call
pop
push
rcll
mov
out
push
cmpb
imul
jno
dec
cmp
dec
cli
outsl
cmp
clc
popa
test
ror
mov
and
mov
pop
cmp
adc
loop
jo
fsin
ficoml
mov
mov
mov
sub
jno
sahf
mov
lret
jne
pop
cltd
out
inc
xor
std
push
ds
movsl
and
pop
jne
imul
cld
shl
xchg
jge
xorl
jmp
xchg
rcll
nop
xchg
lods
jp
xchg
mov
add
scas
mov
xchg
cmpsb
push
dec
stc
adc
xlat
popa
ss
out
cmpsb
jg
jge
inc
imul
movsl
dec
inc
xchg
movsl
in
sub
fnstcw
adc
inc
xor
cld
mov
xchg
mov
mov
out
fsubr
mov
in
and
cltd
fistpl
mov
mov
fildl
out
mov
mov
outsl
gs
clc
mov
cmp
mov
xor
pop
sarb
popf
push
pop
stc
sub
call
ja
clc
jo
ret
pushf
shlb
movsl
lods
adc
or
xchg
ljmp
mov
aad
xchg
jmp
pushl
outsl
ja
push
mov
or
mov
or
pop
add
cmpsb
mov
push
roll
or
xchg
not
sbb
sbbb
pusha
in
inc
out
in
sbb
lcall
adc
jns
adc
or
jg
insb
aam
push
fisubs
jae
inc
or
ss
insb
adc
push
loopne
hlt
test
popf
cmpsb
xor
int3
fsubs
inc
lods
add
roll
jae
repz
dec
pop
notl
xor
aam
jle
icebp
cmp
push
xor
daa
mov
inc
fbstp
dec
cli
cmp
shl
and
nop
nop
pusha
cld
pop
inc
out
ds
ret
or
lods
xchg
pop
call
add
je
mov
ljmp
cmc
dec
inc
fiadds
jae
mov
dec
shlb
popa
jmp
lea
mov
hlt
scas
imul
mov
push
jbe
mov
ret
add
ret
xor
mov
mov
mov
mov
sahf
dec
negb
push
mov
out
mov
lods
jecxz
mov
insb
lock
cld
adc
adc
jl
repnz
dec
xchg
mov
sub
xlat
lock
lcall
test
sub
dec
addb
dec
dec
rolb
lcall
xor
xchg
daa
mov
add
xor
fcomps
sbb
mov
mov
or
nop
pop
cmp
addr16
sti
aam
mov
aam
daa
aam
jecxz
lcall
repz
or
aaa
cmpsb
cmp
push
mov
pusha
push
fimull
imul
push
lods
push
xchg
stos
mov
adc
xchg
xor
or
arpl
pop
cmp
icebp
pop
xchg
hlt
add
je
dec
cltd
sbb
push
push
xchg
dec
lods
pop
movsb
sbbb
inc
mov
ljmp
cmc
pusha
lea
lds
dec
inc
fnstsw
shll
add
rcl
gs
push
lds
xor
insb
in
fiadds
jmp
mov
call
push
add
insb
push
cmp
pop
cmc
push
sbb
xlat
testb
dec
cs
and
aam
ret
cs
rclb
cmp
ja
adc
test
addl
cmp
inc
mov
xor
fwait
and
lret
cmpsb
or
cmovle
or
add
cwtl
jnp
fisubl
mov
and
or
pop
mov
std
loope,pn
leave
mov
in
clc
out
and
popa
mov
repz
iret
pop
int3
inc
fisttpll
out
stos
insb
adc
fcmovne
popf
xchg
sahf
jge
mov
adc
lods
mov
and
xchg
add
and
aas
adc
or
push
inc
pop
incb
push
pusha
sub
dec
loope
insl
xchg
dec
popf
adc
sbb
add
mov
cmpsb
outsl
into
xorb
inc
pop
mov
call
xchg
pop
dec
dec
pop
shlb
sahf
sbb
sub
mov
or
les
lahf
inc
mov
xchg
call
inc
xlat
out
pusha
fwait
pop
std
bound
xchg
hlt
inc
aam
out
clc
jns
adc
out
cmp
enter
pop
and
outsl
insb
scas
popa
movsb
pop
push
inc
inc
pop
xor
cld
or
adc
inc
jbe,pt
je
clc
cmp
sbb
mov
orb
stc
add
pop
pop
insb
aas
push
nop
and
push
and
fcompl
xor
mov
test
xor
rolb
or
test
xchg
dec
vmaxps
sub
je
push
femms
inc
popa
adc
imul
add
pop
inc
std
ljmp
mov
std
adc
cltd
es
gs
addl
out
push
out
cs
mov
xchg
stos
pop
int
daa
add
subb
mov
xchg
fs
mov
fwait
adc
mov
pop
xor
mov
pop
xchg
inc
sbb
pop
lock
pop
jne
in
mov
cmp
aam
mov
pop
adc
cmp
imul
mov
outsb
fnstcw
mov
pop
inc
movsl
sub
add
pop
push
jecxz
mov
lods
insb
dec
fadd
jle
jle
xchg
mov
jbe
lea
sbb
mov
xchg
xor
and
data16
pop
add
pop
xor
shl
mov
scas
adc
lock
jno
push
xchg
scas
adc
inc
imul
mov
cmp
pop
cmp
shlb
mov
ret
or
rclb
adc
pop
dec
mov
insb
ds
pusha
sub
sub
clc
sti
pop
insl
jnp
sahf
and
outsl
js
jne
xorl
ret
or
test
scas
pop
fcomps
loopne
sub
fs
jns
movsb
dec
jno
popf
cmc
nop
test
test
cltd
inc
cwtl
push
cmp
mov
mov
push
jmp
mov
lea
and
pop
xchg
repz
andb
shll
push
adc
je
and
in
mov
dec
fdivrl
and
enter
mov
inc
ret
and
out
mov
push
and
mov
int3
cld
cmpsl
or
xchg
adc
sbb
shr
and
ljmp
leave
pop
xchg
ljmp
dec
adc
jge
push
adc
nop
mov
push
in
xor
and
cmp
out
jg
std
and
icebp
pop
scas
ffree
and
inc
and
movsb
out
test
mov
sbb
and
std
sbb
xchg
push
cmp
push
sub
cwtl
mov
and
mov
cmp
push
imul
jo
imul
fimull
sub
ret
scas
xchg
in
inc
mov
fwait
popa
mov
mov
sbb
jge
xchg
mov
sti
lods
ret
cmp
fs
std
cmp
outsl
enter
test
xor
cltd
mov
icebp
enter
stos
in
lret
jb
cmpsb
jnp
iret
movsb
ret
aad
inc
test
inc
jg
rclb
dec
ja
lock
push
int
sbb
mov
out
push
movsb
and
insb
mov
lods
sub
or
nop
cmpsl
popa
aad
mov
sti
cs
and
mov
add
sub
stos
dec
jne
mov
pop
jb
push
xor
pop
ror
sub
cmp
decb
sarb
bnd
nop
xchg
push
ret
xor
pop
aad
in
mov
mov
cmp
aam
rcr
sub
dec
pop
out
cmp
push
jle
push
lea
loop
fisubrl
add
sub
pusha
outsl
arpl
outsb
stc
and
lods
aaa
aaa
adc
lods
movsl
fldt
pushf
sbb
push
xor
movsb
mov
lret
push
mov
dec
int3
pop
mov
fmul
mov
lods
jecxz
mov
outsb
daa
out
inc
and
imul
fwait
and
js
cmc
mov
xchg
mov
sbb
dec
aas
cmp
adcl
dec
mov
cmp
add
inc
or
mov
push
notl
mov
mov
into
mov
sbb
xchg
xor
xchg
mov
sarb
cmp
cltd
aaa
sub
repz
ror
sahf
daa
nop
inc
scas
dec
sub
inc
fcomps
ret
add
loope
mov
pop
out
sbb
jge
les
lods
or
bound
push
sbb
test
dec
mov
mov
mov
lcall
push
jl
pop
pop
pop
sbb
mov
daa
adc
push
push
sub
out
arpl
pop
mov
aas
add
test
scas
cmp
pop
xor
xor
out
lahf
sub
sub
sbb
cmc
add
test
dec
mov
inc
cs
push
dec
das
dec
shlb
out
sarl
imul
cmp
test
js
loope
push
aad
jg
stos
aam
fs
arpl
mov
rorb
push
call
lahf
xor
cmp
mov
lcall
in
push
cmp
sbb
xchg
xor
repnz
ss
dec
inc
loopne
lret
cmp
mov
fadds
jne
cmp
ss
sahf
inc
cs
jbe
push
sub
push
and
lods
fcmovnu
je
arpl
mov
and
lock
lahf
flds
clc
daa
pop
sub
push
and
mov
sub
cmp
sahf
pushf
int
cmpsl
lcall
pusha
push
fisubl
roll
movsb
add
je
mov
adcb
in
cmpsb
jnp
mov
dec
jle
sti
push
lds
andl
nop
mov
jo
rcll
or
clc
into
mov
sub
outsl
mov
jecxz
pop
jmp
jno
lock
pushf
pop
shll
int3
jae
aad
xchg
stc
mov
shll
add
adcb
testl
or
loop
popf
dec
pop
add
push
xlat
sbb
xor
clc
add
sbb
mov
es
cmp
sar
jae
stos
mov
push
and
fwait
test
rorb
fisubl
dec
hlt
popf
out
sbbl
adc
imul
cmp
inc
or
sub
in
cli
cmp
add
lock
repnz
lds
mov
popf
mov
mov
mov
xor
inc
gs
xchg
cmp
xor
mov
minps
pop
mov
sub
jl
jb
popf
xchg
xchg
in
aas
dec
dec
frstor
stc
leave
nop
mov
roll
icebp
ror
or
fxch
xchg
mov
or
xor
movsb
xchg
scas
mov
mov
addb
mov
mov
xor
outsl
lock
dec
int3
mov
mov
scas
and
push
jae
mov
mov
insl
movsl
sbb
add
lea
ja
xchg
push
mov
clc
sbb
movsb
dec
cmp
fistps
or
shlb
js
shlb
and
mov
inc
push
scas
jne
ds
pcmpgtw
test
popf
xchg
xor
test
mov
push
inc
fistpl
and
popf
sti
cmp
push
ja
mov
testl
sbb
ss
sub
mov
cs
sub
sbb
mov
adc
insl
cwtl
or
in
pop
pop
cmc
or
sahf
test
mov
pop
daa
rorl
jns
roll
xchg
dec
xchg
mov
mov
adc
inc
inc
push
xor
out
aad
je
sbb
inc
inc
popf
and
add
mov
jmp
mov
inc
ret
fidivl
rcrl
sbb
xchg
repnz
lret
xchg
outsl
dec
cmp
out
mov
pop
fldl
mov
in
mov
das
cs
mov
xor
inc
inc
or
mov
and
stos
ds
jmp
ja
jbe
aaa
das
fisttpl
cmc
sbb
fs
xchg
lds
jnp
mov
pop
adcb
cmp
call
sbb
movsl
push
bound
rorb
xor
pop
mov
test
xchg
or
dec
insb
mov
imul
xchg
mov
cmc
push
mov
or
mov
mov
in
push
jo
mov
sti
push
testb
dec
mov
add
adc
jae
imul
mov
sbb
dec
shl
and
cmpsb
jecxz
and
scas
jp
mov
dec
lock
or
out
or
ret
dec
adc
sti
add
inc
inc
les
cwtl
fisubs
call
add
ljmp
or
pop
fsub
xorb
shll
mov
cmpb
mov
lcall
sbb
mov
adc
xorb
jge
dec
dec
push
clc
mov
daa
push
cld
add
mov
or
or
jo
out
adc
jb
outsb
ret
xor
hlt
push
enter
xor
xor
dec
xor
mov
cmp
add
jge
movb
mov
popf
insl
push
arpl
pop
cmpsb
and
jne
sti
adc
loopne
jbe
mov
push
pop
and
in
fisttpll
rorb
dec
int3
or
jae
les
js
aaa
pusha
out
test
and
jbe
add
arpl
jne
cwtl
aas
std
mov
add
cwtl
inc
mov
xchg
pop
jb
jle
int
jo
inc
outsl
clc
mov
push
or
dec
pop
in
data16
ja
sarb
sbb
cmp
outsb
out
and
jle
push
push
adc
pop
rclb
repz
add
ja
jle
and
xchg
or
pushf
ds
std
add
stos
jl
and
or
shlb
xor
push
pop
pusha
mov
test
mov
sub
repz
sub
xlat
cli
mov
mov
push
xchg
inc
addr16
pop
insb
in
mov
and
and
adc
ja
jmp
push
sbb
aas
das
sbb
in
dec
imul
and
fcomps
lea
fcompl
mov
ficomps
lock
loopne
sbb
jae
insl
popf
imul
out
in
out
adc
sarl
arpl
jge
mov
push
int3
sbb
loop
das
or
xchg
and
ss
xor
jg
push
dec
lahf
inc
movsb
jns
sbb
push
xlat
pop
insb
pop
fstpl
ja
fcomp
int3
dec
or
sub
fcom
pop
aad
aas
idivl
lcall
ret
andl
cmp
stos
add
sbb
pop
jno
lret
sbbb
sub
xchg
xor
test
jo
aad
add
nop
push
cmp
adc
sub
push
popf
pop
xor
pushf
jmp
dec
add
repz
fwait
dec
into
pop
scas
fistps
mulb
jbe
pop
popf
std
outsl
mov
iret
or
jp
ss
xor
imul
repz
test
rcll
pop
lods
add
pop
shr
pop
lock
enter
jl
mov
pusha
incl
inc
and
cli
insl
in
scas
adc
push
enter
fimull
fcoms
or
mov
xchg
adc
jae
sub
jae
or
sti
pop
dec
xchg
in
rcrl
lea
ret
cmpsl
mov
pusha
aad
inc
or
loop
xchg
sahf
push
xor
mov
jg
cmpsl
aam
cmpsl
push
pop
mov
movsb
push
sbb
test
xchg
cli
adc
lcall
loopne
loop
and
jecxz
enter
aam
xor
cmp
repnz
lock
xlat
push
sub
jbe,pn
sub
cli
in
out
jbe
shrb
test
mov
xchg
icebp
mov
adc
inc
fsubrl
loop
fincstp
pop
mov
enter
popl
call
sbb
mov
lret
mov
inc
inc
inc
imul
sbb
jne
add
cmp
xor
nop
dec
sbb
cld
or
and
movsb
scas
arpl
sti
sbb
lods
cmp
fbld
add
xchg
inc
cwtl
aam
push
lods
shlb
and
dec
popf
inc
or
repz
sti
das
or
mov
pop
adc
mov
out
imul
aam
sbb
loope
insb
inc
jge
insl
into
adc
mov
iret
movsb
or
inc
ss
xchg
sub
pop
push
andb
pop
or
adc
into
xor
mov
cmp
mov
sbb
fdivl
xchg
out
sbb
lahf
mov
jmp
les
and
aad
pushf
dec
adc
nop
push
push
xor
test
jae
pop
cli
fwait
push
fistpll
cs
insl
mov
ljmp
mov
mov
iret
aad
mov
shrb
das
arpl
cmc
xchg
int3
sub
shlb
fwait
movsl
cmpsl
push
scas
mov
loope
add
pop
jecxz
pop
dec
or
popf
push
cli
cmp
inc
push
mov
sub
cmp
sub
add
decb
lods
mov
ljmp
sbb
gs
pop
lcall
pop
sbb
adc
push
loopne
cmc
inc
aas
push
std
dec
mov
adc
out
int
shrb
mov
xchg
adcl
das
lahf
mov
idiv
data16
jp
clc
movsb
lahf
dec
popa
push
push
ljmp
fcmovnbe
add
sti
or
mov
push
mov
and
inc
int3
push
jle
dec
and
xchg
mov
sub
into
lods
lods
xor
mov
pop
aaa
daa
push
cmovns
test
repnz
sahf
mov
sub
lahf
outsl
les
in
cmc
aam
jne
mov
xor
sar
mov
push
decl
outsb
jmp
xchg
popa
mov
push
mov
lret
repz
outsl
std
filds
imul
jecxz
cmp
push
sbb
jecxz
mov
push
aam
inc
test
lock
jg
mov
adc
sbbb
and
out
inc
lret
mov
popf
testl
mov
ret
rolb
daa
out
jae
nop
add
into
pop
icebp
out
mov
or
jg
popa
sbb
dec
clc
aas
sub
and
nop
aas
ffreep
push
cmp
cmp
insl
add
sbb
xchg
lods
flds
into
imul
mov
cld
fbstp
xor
or
das
frstor
negl
jge
cmp
dec
mov
jecxz
mov
pop
pop
imul
xchg
or
nop
pop
std
jnp
inc
rclb
or
and
push
sub
scas
test
popf
arpl
or
les
cltd
andb
pop
push
pop
in
cs
fldcw
adc
inc
rcrb
enter
bound
xchg
sarb
and
jae
xchg
mov
xchg
je
out
mov
jnp
and
ljmp
mov
sahf
dec
ljmp
addr16
mov
stc
aam
xchg
es
mov
mov
adc
pop
mov
push
lret
jnp
mov
movsb
or
fs
scas
arpl
and
push
aas
fcoml
pop
mov
xor
add
inc
clc
lret
movsl
icebp
adc
cmp
aaa
sbb
stos
cwtl
ss
mov
pop
fisttpll
sub
xlat
scas
call
sub
jo
gs
mov
out
int3
xor
call
test
and
stos
add
dec
inc
dec
rcrb
or
lock
das
push
dec
jge
loop
lahf
scas
pop
mov
pop
movl
test
enter
sbb
dec
shl
ljmp
lock
aad
outsb
cwtl
pop
or
add
push
jo
jge
xor
adc
ja
cmp
insl
out
in
cld
sub
popa
loop
add
cmpb
xchg
mov
leave
dec
mov
lcall
and
test
mov
aam
stos
in
jecxz
xchg
adc
dec
xchg
ss
lods
cmp
aas
jbe
fcomps
arpl
sbb
sahf
push
icebp
jbe
stc
sbb
xchg
data16
lahf
cmp
dec
fidivs
leave
push
pop
mov
lock
xchg
and
inc
cmp
cld
sbb
adc
dec
push
cltd
imul
fdivrl
push
push
add
push
out
add
jmp
xor
mov
pop
jge
xchg
jnp
mov
mov
int
ficoml
lret
and
out
js
xor
or
lahf
cmpsl
lret
adc
mov
loopne
sub
imul
cli
or
call
or
outsb
pop
addr16
mov
jbe
ret
mov
mov
divb
lahf
cmp
aad
sbb
dec
mov
xchg
pop
aam
jecxz
subl
daa
push
call
cmp
mov
stos
aas
jg
into
dec
vphadduwd
repnz
jae
add
ror
push
scas
cmp
lods
scas
xchg
push
das
mov
pop
call
rolb
cmp
imul
or
lds
stc
imul
inc
subl
iret
pushl
pop
mov
mov
out
jb
xchg
les
xchg
add
mov
inc
dec
jle
mov
jne
pop
sub
mov
xor
pop
leave
addr16
mov
lcall
lock
aaa
cmp
sahf
pop
outsl
sbb
or
add
cmpsb
aas
and
sbb
repnz
fwait
lods
sbb
inc
jle
jae
xchg
fidivrs
test
sahf
lods
mov
and
mov
sub
rcll
xchg
dec
mov
pushf
push
sahf
fsubrs
sbbb
movsl
movsb
mov
sub
sbb
int
mov
aad
lcall
andb
push
das
sarb
lret
enter
in
jbe
lock
xchg
lahf
mov
jge
shrb
mov
dec
cmpsb
jbe
jne
pop
jp
int3
lods
adcb
sbb
cs
cwtl
cld
call
mov
mov
pop
fdivp
cmp
shll
mov
pushl
clc
sub
aad
dec
js
imul
int3
mov
lods
xchg
sub
shlb
pop
outsl
xchg
jb
jp
cmc
xchg
or
xor
cmpsl
fsubl
sub
arpl
out
xor
mov
call
lret
outsl
dec
test
mov
push
call
push
ja
int3
icebp
or
lcall
lock
inc
nop
cmpsb
sub
int
push
xchg
gs
inc
inc
cmp
js
pop
ljmp
or
jo
pop
sub
in
xor
pusha
cmpl
jb
fwait
ja
std
adc
das
mov
xchg
test
jecxz
mov
jno
sub
testb
js
pushf
mov
iret
push
lea
loop
mov
loope
test
clc
sbb
sbb
jbe
imul
call
in
scas
cmp
lock
mov
insl
outsb
stc
pop
out
xor
pop
push
popf
shll
adc
cs
pop
cmp
jae
adc
xor
gs
in
and
mov
adc
xor
lcall
loop
repnz
fdivrs
scas
pop
sub
push
sbb
rorl
gs
fcompl
fnstenv
cs
mov
push
mov
dec
lea
or
pop
dec
cmp
test
or
test
orb
loopne
lahf
fidivrl
sub
std
fnsave
and
mov
lods
push
iret
fsub
dec
fcmovnbe
jnp
mov
enter
push
loopne
push
dec
mov
or
cld
fisubrl
in
stc
lds
mov
xchg
add
dec
movsl
je
cmpsl
pop
out
inc
out
inc
repnz
and
pop
es
xor
lds
xchg
pop
xchg
lret
es
jge
adc
mov
xchg
xchg
int3
or
mov
into
popa
push
mov
xor
pop
fucomp
and
mov
ja
adc
cmp
or
or
sub
sti
push
pop
jecxz
lods
out
movsl
inc
inc
test
cmc
sbb
loopne
les
pop
cli
mov
lods
loop
cmp
dec
std
or
sarl
push
push
cmpsb
int
pop
idivl
sub
mov
sbb
sub
add
inc
jno
xlat
ret
int3
repz
cmc
jg
inc
cmp
add
int3
insb
adc
decl
int
sub
xor
movsl
imul
test
xchg
and
jg
arpl
sbb
pop
insb
cmp
or
in
and
sbb
xorb
mov
mov
push
mov
push
push
push
fisubrs
outsl
xchg
jbe
int3
aaa
jae
jb
mov
movl
repz
std
aam
leave
ret
or
or
fistpll
fs
repz
aas
mov
push
sub
pushf
inc
and
pop
jbe
xchg
dec
xor
inc
pop
das
cmc
sbb
inc
in
add
fildll
mov
mov
in
cmp
int3
and
cmpsl
mov
sub
xchg
push
cltd
cs
roll
dec
fisttps
in
sbb
outsb
cltd
icebp
xlat
xor
hlt
dec
je
pushf
mov
dec
lods
cmp
xlat
in
inc
add
adc
sub
mov
pushf
and
orl
repz
fwait
dec
inc
lods
xor
test
mov
mov
mov
mov
cs
loop
mul
sub
xchg
and
adc
cs
aam
std
fwait
js
fidivrs
scas
out
or
sbb
fisubs
mov
test
xchg
push
push
clc
mov
movsl
les
stc
hlt
sub
rorl
push
push
sbb
out
cwtl
or
pop
push
mov
mov
or
and
rcll
push
or
fsubrl
test
sti
lods
xor
mov
inc
mov
mov
mov
cmp
les
js
sub
pop
cmpsb
adc
cmp
adc
loop
shll
pop
inc
out
mov
xchg
in
cmp
sub
aaa
mov
xor
mov
inc
fcom
pop
jl
jp
mov
fisttps
cld
push
xor
xchg
adc
jb
mov
lods
push
subl
addr16
mov
mov
shlb
jbe
push
pusha
lea
xchg
cli
mov
cmpsb
rolb
rolb
lods
stos
xchg
cwtl
loop
xor
loope
test
fs
fwait
push
mov
inc
lret
mov
inc
add
arpl
sbb
xchg
insb
xor
mov
outsb
and
in
jae
sti
addr16
iret
push
jmp
stc
jg
dec
ficomps
or
pop
iret
mov
fisubl
cmp
idivb
out
lds
je
js
iret
mov
xor
shlb
push
out
or
iret
aam
les
jnp
inc
cld
lret
cvtps2pi
xchg
pop
jmp
or
dec
shr
cwtl
icebp
sub
inc
sti
xor
cld
test
adc
cmp
popf
sbb
fiadds
daa
push
shrl
pop
fs
lahf
adc
push
into
out
cmpsb
add
faddl
fsubrs
sbb
in
pop
scas
pop
cs
sbb
insb
jne
mov
ja
and
sub
cwtl
and
xorl
popa
dec
out
sar
or
push
sbb
pop
sub
aam
gs
sbb
fcmovbe
lret
stc
cwtl
jns
imul
sbb
mov
repnz
imul
xchg
push
pop
xchg
jecxz
or
hlt
and
xor
pop
sti
outsb
inc
or
or
fisttps
cmp
dec
cmpsb
pop
pop
jg
jae
fcmovb
scas
add
push
xchg
xchg
mov
jne
dec
rcrl
pop
cli
pop
es
mov
jmp
push
dec
inc
inc
mov
pop
adc
enter
mov
mov
lds
mov
cli
jne
rorb
jge
lods
jbe
jle
mov
repz
xchg
inc
ja
cmp
xchg
sub
sub
dec
fstpl
or
pop
mov
stc
xchg
js
fbstp
add
xor
addr16
movsb
and
jg
lds
or
xchg
loope
pop
fldenv
jns
push
divl
int
loopne
inc
jno
fisttpl
mov
nop
xor
fdiv
je
push
test
jnp
mov
sub
imul
rolb
fistl
out
cmc
rcrl
xlat
adc
cmpsl
mov
push
push
push
xor
push
jge
xor
push
and
push
and
orl
jne
mov
test
dec
pop
xchg
lret
insb
icebp
inc
inc
pushf
fs
loop
sub
xlat
pop
xchg
inc
lret
mov
loopne
idiv
jbe
lods
loop
stos
lret
mov
clc
jno
aad
mov
aaa
sbb
push
ljmp
insb
and
push
pop
sbb
cmp
popl
arpl
or
popf
jbe
mov
push
adc
movsl
sahf
push
outsb
sbb
outsl
and
daa
ljmp
and
sub
or
push
push
and
push
addr16
pop
xlat
loopne
mov
cmp
cmpsb
or
mov
pop
popfw
xchg
xchg
mov
add
sahf
imulb
ret
adc
lcall
shr
pop
popf
sbb
aas
out
jb
sbb
mov
cmp
adc
inc
leave
xor
push
cs
sbb
mov
add
sbb
cmpsb
xchg
ss
out
in
ss
out
mov
xlat
push
je
or
cmp
and
stos
adc
in
lds
insb
cmp
mov
sbb
jb
imul
fnstsw
cli
push
shl
mov
out
pop
xchg
mov
xchg
aam
push
lds
pop
aam
test
aaa
test
push
fcom
pop
inc
cmp
repz
cs
cs
dec
mov
mov
int3
ret
pushf
mov
push
pushl
mov
call
out
in
add
test
lea
int
mov
int
jne
dec
inc
fimull
fwait
pop
sub
pop
mov
sub
jge
sti
addr16
and
rcl
popf
popf
test
adc
jne
iret
insb
lahf
pop
add
inc
and
push
and
cmp
enter
sarb
sahf
cmpsl
push
dec
mov
cmpb
repnz
das
in
jg
mov
push
mov
inc
lods
sbb
aad
push
cltd
mov
adcb
lcall
sub
cmpsl
cltd
mov
ss
fidivrs
xor
jl
pop
lret
fdivs
mov
mov
in
cmc
pop
sub
jle
in
cmp
jae
fimull
cmp
pop
mov
add
popf
or
pop
mov
cmpsb
cltd
mov
pop
mov
sbb
sbb
and
fsubrs
insl
and
loopne
mov
movsl
dec
jle
lock
and
or
push
mov
pop
pushf
test
int
mov
test
push
jmp
mov
inc
and
loop
lea
and
jge
push
mov
mov
sub
mov
pop
adc
je
adc
or
js
ds
outsb
xor
sub
in
mov
xor
les
outsb
loopne
add
roll
aaa
xchg
mov
jne
iret
and
repz
or
aad
in
out
inc
mov
insb
sub
jmp
ds
insb
fsubrp
insl
pushf
inc
mov
sti
mov
shll
jle
movsb
sub
jg
enter
addb
mov
mov
sub
jo
mov
fdivrl
repnz
popf
xchg
sub
fisttps
mov
fsts
pop
fidivs
sub
adc
pop
mov
in
pop
loop
or
int
mov
lahf
lods
mov
icebp
xchg
repz
hlt
and
sbb
jno
cmp
add
add
iret
xor
ljmp
jnp
ss
add
jnp
push
push
and
pusha
fdivrs
in
in
cmp
lahf
push
and
push
sub
jp
popf
cmp
data16
jge
sub
inc
das
add
mov
or
mov
cwtl
dec
icebp
push
mov
dec
aaa
mov
jge
jno
lahf
daa
mov
dec
iret
insb
in
jo
out
xchg
das
imull
shrl
movsb
ret
cld
cmc
mov
lods
cmp
adc
push
call
xor
sub
sub
mov
loope
lahf
test
ret
pop
and
xor
andw
sbb
dec
jo
adc
and
mov
adc
ja
popl
mov
arpl
and
mov
mov
hlt
sub
mov
inc
inc
xor
aad
sub
inc
clc
cs
into
outsb
mov
inc
fisttpl
dec
or
fldt
popf
in
into
std
loope
outsb
adc
and
mov
addr16
cmp
xor
inc
jno
aad
insb
addl
sahf
and
cmp
out
push
xchg
or
inc
inc
push
push
jge
mov
or
popf
pop
mov
iret
aad
push
stos
loope
lods
outsl
cli
jnp
cmp
xlat
int
mov
xchg
adc
popa
xor
xchg
das
movsl
shlb
leave
rorl
pop
jo
out
dec
jl
inc
pop
incw
lds
cmpsb
pop
aas
sub
rcll
hlt
dec
mov
mov
movsb
push
push
pop
scas
shlb
cmp
mov
mov
sub
repnz
stc
and
aam
js
adc
shlb
dec
addl
mov
mov
in
inc
repz
jns
inc
xchg
fistps
shll
shll
lods
cld
stc
sub
into
sahf
insb
inc
out
repnz
mov
push
mov
mov
test
xor
cmpsb
xchg
lea
inc
pushf
sub
test
cs
xchg
shlb
fdivrs
jne
jge
rolb
icebp
pop
jecxz
mov
cmpsb
pop
xlat
mov
pop
int3
or
into
or
jae
movl
sub
in
inc
fldt
inc
push
imul
push
mov
xchg
sbb
mov
and
jbe
data16
pop
lds
jge
cmpb
rorb
xchg
stc
pop
in
and
and
cmpsl
push
imul
cwtl
scas
sbb
jb
jne
inc
stos
add
mov
ficompl
std
mov
stos
jle
bound
mov
jne
sbb
jmp
gs
push
push
rcrb
in
cmp
cmp
aas
xchg
sub
je
shlb
jbe,pt
movsb
xchg
adc
mov
push
lock
cmp
lods
add
fdivr
shll
outsl
and
mov
mov
stos
cltd
dec
sbb
pop
fistpll
or
mov
mov
std
mov
and
push
and
adc
out
ret
cmp
mov
cmp
pop
pop
int
sbb
scas
cs
outsl
adc
cmc
sahf
lcall
xor
mov
pushf
jmp
int3
stc
mov
lahf
out
jo
push
lds
push
cmpsb
jb
repnz
scas
sbb
mov
movsl
das
mov
and
cltd
dec
mov
aaa
dec
push
add
push
imul
jo
add
imul
mov
pop
lods
call
push
inc
mov
mov
scas
pop
orb
mov
mov
and
movsl
and
jnp
cmpsb
mov
imul
pop
in
add
cmp
jo
insb
jl
mov
ss
das
add
into
clc
and
mov
xchg
sbb
or
mov
sbb
and
mov
test
loop
pop
out
test
rcll
xlat
and
push
xorl
movsl
insb
loope
xor
cmpl
add
out
xchg
jg
push
fisubl
jne
mov
sahf
test
pop
sub
xor
or
sahf
js
mov
sbb
popf
repnz
cmp
scas
test
sub
push
aas
fisubs
push
arpl
sub
lods
sbb
fs
add
dec
and
dec
dec
loope
pop
cmp
sub
adc
gs
xchg
int
xchg
push
ret
out
lods
xchg
daa
cmp
movsl
add
das
stc
mov
xchg
setle
jae
jecxz
lcall
sbb
and
test
adc
jmp
outsb
out
stos
dec
rcrl
ficompl
movsb
shrl
pop
jp
gs
jae
cli
clc
sub
outsb
std
xchg
xchg
mov
or
mul
lds
cmp
negb
jns,pt
mov
in
mov
dec
jbe
repz
xchg
lret
adc
inc
cmc
cltd
xchg
jp
push
mov
xchg
add
push
mov
aaa
jae
cmpsb
cmpsl
pop
sbb
daa
and
pop
fs
rclb
stos
int
ret
fsub
scas
jbe
nop
jo
xchg
hlt
aad
add
mov
insb
inc
sbbl
popa
sbb
ljmp
mov
imul
xchg
mov
mov
mov
sti
or
outsl
loopne
into
scas
or
fwait
clc
push
cmc
or
cli
repnz
mov
popa
mov
mov
in
cld
pop
insl
lods
lock
pusha
add
pop
test
sub
sbb
push
sbb
xor
xor
fidivs
ds
lret
cmp
pop
mov
fs
xchg
in
out
mov
insl
xor
lods
adcb
pop
xchg
or
pusha
pop
cmp
inc
cmp
loopne
repnz
iret
push
push
aaa
inc
push
dec
aam
mov
pop
sti
sbb
mov
mov
out
and
mov
pop
mov
insb
lods
call
aas
or
int
mov
outsb
mov
bound
jae
lret
hlt
jns
adc
mov
js
insb
add
jo
jbe
mov
dec
ficompl
sbbb
es
cli
or
js
xchg
add
repz
mov
mov
sti
sbb
sbb
movsl
push
mov
int
andb
es
xor
ss
jnp
aam
fidivrl
jbe
add
sbbb
lret
cmpsb
sbb
cmc
nop
xchg
jns
jns
mov
sbb
sbb
mov
rcrl
pop
adc
and
xchg
or
sbb
mov
sarl
dec
sti
inc
jl
addr16
inc
sti
jno
mov
push
les
sbbb
pop
cld
inc
sbb
out
or
addb
mov
in
cltd
adc
or
sbb
sbbb
xchg
arpl
push
sahf
jae
mov
subl
int3
xchg
in
ret
loopne
xor
lret
or
add
pop
mov
cltd
cs
jl
call
mov
push
mov
jae
fmull
jnp
sti
loope
out
test
push
inc
mov
sub
fs
out
scas
fistl
iret
enter
dec
faddl
cmp
out
fdivrs
cmpxchg
mov
dec
pop
icebp
lea
xchg
nop
aas
pop
rcl
subb
out
add
pop
pushf
push
call
daa
pop
cltd
pop
insl
mov
jmp
xor
xor
add
xchg
imul
push
mov
push
push
sub
inc
xlat
jb
negb
pop
test
repz
enter
add
cmp
lea
mov
cmc
xor
mov
xchg
jo
out
xchg
add
into
pusha
insb
jp
jnp
idivl
mov
and
push
ja
dec
adc
sysenter
adc
clc
stos
arpl
in
leave
push
push
mov
jae
fwait
cmc
add
pushf
xchg
sub
fsts
jmp
jmp
mov
push
add
enter
sbb
jp
andl
dec
lods
ds
xchg
adc
loope
hlt
and
jge
mov
and
test
rcll
lea
pop
cs
std
mov
fs
pop
das
lret
imulb
xor
jae
push
xlat
je
push
out
icebp
call
mov
adc
test
sahf
jp
fildll
fst
pop
mov
mov
fcompl
cmp
or
sahf
int
stc
popf
jg
nop
mov
jl
test
test
int3
lcall
cmp
adc
test
mov
jl
adc
push
or
jg
jp
lret
mov
mov
mov
test
xor
jmp
and
sbb
xor
cmp
push
mov
cltd
add
adc
sbb
test
cmp
pop
in
mov
inc
xchg
and
aam
sbb
outsl
xchg
lahf
dec
fidivrs
push
sbb
push
sub
fnsave
aas
in
sub
lods
push
push
mov
inc
insl
sbb
scas
ds
mov
icebp
sub
inc
popl
mov
dec
cmp
lods
or
dec
loop
mov
aad
les
mov
aad
mov
leave
push
outsb
push
lock
mov
daa
adc
lret
rorl
cld
jg
dec
movsl
out
mov
lea
loope
add
lods
adc
xchg
jno
mov
popl
lcall
xor
in
xor
lcall
cld
std
add
das
adc
push
mov
push
mov
or
icebp
aad
adc
push
jl
push
int
jno
dec
mov
insb
inc
fsubr
pushf
push
leave
stos
ret
and
daa
rorl
fimull
fwait
adc
repz
rorb
xchg
mov
sti
adc
mov
insl
add
loopne
cmovs
sbb
sub
push
push
mov
jno
mov
fisttps
jmp
xor
xchg
push
scas
sbb
andb
lcall
xchg
out
inc
in
mov
outsl
iret
sub
insl
push
imul
dec
jp
dec
out
bound
fsubl
inc
mov
sbb
fstps
and
add
push
xor
addr16
jg
or
sub
bound
mov
lea
xchg
aaa
ret
aam
mov
ja
sub
fnstenv
cwtl
push
add
lahf
lahf
adc
pushf
fs
sbb
jae
and
inc
xor
xorb
dec
jmp
nop
mov
inc
shll
inc
je
shll
xchg
lcall
in
loop
aam
mov
xlat
pop
lcall
sub
out
inc
lods
std
lods
hlt
xchg
xchg
jecxz
leave
leave
and
fidivs
or
dec
inc
mov
add
mov
loope
fisubrl
push
cli
mov
xlat
mov
add
pop
mov
lds
lret
add
mov
push
pop
dec
mov
in
loopne
add
jne
out
lahf
cmp
jp
js,pn
push
push
xor
sub
idiv
nop
test
sub
xchg
hlt
dec
dec
ljmp
and
lcall
cwtl
pop
mov
jne
xlat
sahf
int3
xor
fcoms
shlb
sbb
mov
cmc
lcall
dec
adc
lea
inc
scas
mov
scas
nop
or
mov
nop
mov
mov
imul
lcall
fnstsw
stos
stc
pop
into
in
mov
lret
out
xor
mov
out
add
out
mov
xchg
ljmp
fmuls
inc
icebp
push
add
xchg
addr16
dec
in
xchg
ret
das
push
leave
and
xchg
pop
mov
sub
lock
push
pop
imul
mov
scas
jns
sbb
or
lea
and
xchg
rcll
test
sarb
xchg
xchg
fwait
lea
xchg
dec
xchg
cmp
or
pop
cs
jp
ja
inc
mov
in
cmp
out
fdiv
inc
lods
jg
loop
in
orl
lea
dec
push
push
mov
fcmovne
call
stos
xchg
xchg
pop
and
imul
push
fbld
repnz
lods
test
lea
test
lret
mov
vpmuludq
xchg
fdivrs
mov
rcrl
push
cmpsb
mov
jo
or
lods
mov
ret
cld
mov
dec
or
test
pop
insl
jo
add
ss
pop
add
fldl
cmp
loope
lret
mov
fwait
out
or
fwait
sub
add
cwtl
inc
mov
outsl
scas
push
fsubs
dec
jne
and
dec
outsb
aad
push
push
insl
mov
sub
cmp
out
shrl
stos
inc
test
rol
in
dec
or
xchg
pop
ficomps
mov
sub
sub
inc
or
fldl
lcall
call
lods
aad
mov
scas
cli
or
add
jae
and
fildll
andb
xor
stos
or
je
mov
or
fdivp
jmp
xor
decl
inc
imulb
or
sbb
mov
sysexit
lahf
cmpsl
into
sub
ss
inc
and
jbe
inc
idivl
xlat
inc
fwait
jae
les
out
xchg
inc
pop
adc
imul
mov
subb
insl
jb
ja
repnz
or
xor
xor
and
test
mov
sbb
scas
lods
movb
imul
daa
lcall
adc
cli
add
rolb
pop
sbb
and
xor
jl
int3
xor
add
xchg
aam
cli
lahf
sub
mov
adc
fnsave
popa
add
inc
aad
sahf
push
mov
inc
and
inc
dec
xchg
push
int
lret
sub
mov
push
std
jne
jns
pusha
dec
sub
repz
aad
lods
into
adc
cwtl
fs
and
dec
jmp
cli
mov
jl
or
jl
push
pop
jg
fmull
scas
pop
push
mov
mov
fs
push
in
das
ss
and
adc
inc
insl
pop
dec
push
aaa
out
sub
rcll
mov
pop
sahf
mov
pusha
push
test
aaa
mov
pop
sub
loop
pop
jno
test
cmp
jnp
ret
xchg
xor
sbb
sub
cmp
sahf
das
dec
fscale
mov
jmp
es
mov
jns
iret
sbb
loopne
and
and
fcmovnbe
mov
mov
xorb
pop
movb
into
mov
enter
imul
loopne
jge
out
daa
jl
jb
faddl
scas
roll
push
fsubrs
int3
jle
in
inc
adc
xchg
pop
out
and
adc
xor
lret
xlat
mov
loopne
cld
cmp
push
xor
stos
stos
sti
andb
mov
dec
dec
aam
lods
loope
int3
mov
call
daa
out
xorb
or
imul
lret
pushf
push
mov
jae
call
enter
outsb
sbb
and
js
dec
xor
roll
in
hlt
out
dec
out
cmpsl
popa
cmp
and
adc
dec
mov
leave
pop
and
mov
popa
ja
xlat
jnp
xlat
shl
sti
insb
jmp
pop
pop
stos
stc
mov
mov
push
mov
xor
cmp
jle
sub
push
ja
pop
mov
jae
out
scas
push
inc
mov
or
shl
cltd
sbb
cmp
push
mov
cmp
add
add
sbb
pushf
es
btsl
stos
outsl
xchg
rcrb
cli
dec
pop
imul
stc
daa
repz
ds
fildl
jnp
jl
enter
jo
push
stos
enter
cs
lcall
add
nopl
fimull
lea
rcr
sbb
in
in
add
jo
pop
test
lret
xlat
nop
mov
jb
dec
es
jb
pop
and
lods
cs
jle
cmp
pop
fcom
out
in
jp
nop
js
mov
inc
stc
xchg
and
roll
loope
lods
push
iret
lea
lcall
in
in
pop
mov
mov
rol
inc
mov
ret
adc
and
lock
lds
add
pop
inc
jne
sti
lret
sbbb
out
shlb
out
shll
in
stc
outsl
xchg
jo
jno
xchg
push
push
mov
pop
inc
push
fcoms
inc
in
lret
xor
cmp
push
pusha
repz
fimull
test
por
shrb
add
lock
jae
push
nop
or
adc
ret
test
iret
in
mov
cmpsl
push
jp
daa
push
ljmp
sar
xchg
dec
mov
daa
pop
inc
out
repnz
cmpb
fwait
cmp
or
out
insl
adc
adc
pop
lcall
pop
jnp
in
or
call
incl
push
sbb
and
sub
jae
cmp
enter
sbb
fcomps
xchg
out
test
mov
lea
imul
js
sbb
or
push
dec
xor
lahf
out
pop
add
mov
and
ss
mov
push
inc
pop
and
lock
mov
leave
inc
mov
stos
das
mov
adc
dec
adc
leave
rcll
dec
sub
sub
loopne
jno
cmp
pop
and
add
push
cmp
andl
cmpsb
ljmp
jg
jmp
jmp
jl
dec
jge
sub
push
sbb
je
xchg
pop
dec
mov
fisttps
mov
sbb
iret
test
ja
cmc
mov
rcrb
std
scas
loop
movsl
imul
insb
xlat
and
sarl
pop
jg
fdivrl
ret
jnp
test
add
cmp
out
sti
cli
mov
lods
xchg
xor
shrl
lock
pop
ss
xchg
cmc
pop
cli
mov
pop
xor
ret
scas
ja
loop
rcll
popa
lret
dec
test
pop
jns
xchg
mov
push
push
hlt
mov
push
mov
mov
mov
jmp
movsb
dec
push
xor
add
insl
int
stos
xor
mov
pop
jb
sbb
and
push
cmp
das
jle
adc
sub
movsl
xchg
mov
or
call
add
lods
cmpsl
xor
out
je
jle
and
outsl
shlb
push
xchg
xchg
flds
into
in
aaa
outsl
push
aad
outsl
jb
js
xchg
lret
call
std
movsl
push
cmpsl
cmp
mov
adc
push
call
xchg
shll
dec
pushl
push
dec
dec
les
enter
daa
mov
lahf
stos
sub
aad
sub
inc
in
mov
jno
movsl
cmp
sub
sub
dec
mov
or
ffree
add
lcall
repz
leave
out
scas
ljmp
pop
push
mov
sarb
sbb
lods
shrb
push
daa
ljmp
imul
aaa
pop
ret
mov
cwtl
sub
leave
ret
mov
sti
sbb
xchg
popa
dec
test
adc
pop
loop
mov
inc
ret
jmp
lea
push
add
cmp
sahf
bound
fucomp
fdivp
mov
cmc
lea
ja
fcmovnbe
dec
sub
loop
cmp
sbb
sbb
fnstenv
push
sbb
or
mov
sub
rclb
mov
ja
add
subb
jp
add
insb
lahf
adc
inc
mov
mov
mov
daa
repz
data16
data16
xor
out
arpl
dec
inc
inc
xchg
pop
idivb
lea
push
sbb
sub
aaa
aad
ss
loopne
mov
dec
sbb
mov
and
fnstenv
imul
imul
test
lods
fsubs
stc
and
fidivl
ret
call
mov
lcall
push
cli
or
push
push
enter
jecxz
or
lahf
jno
adc
stos
add
mov
mov
adc
shr
jne
ds
add
xchg
xor
ficompl
rolb
or
test
aaa
mov
sti
insl
setle
jg
push
in
pop
clc
fadds
push
fwait
xor
sub
lcall
or
mov
mov
pop
xchg
scas
xchg
lods
sbb
adcb
je
je
mov
rcrb
test
ss
pop
xchg
mov
neg
sbb
mov
lods
adc
lahf
cmp
outsl
aam
cwtl
cli
aaa
mov
call
mov
xchg
jb
xchg
aad
icebp
scas
into
aam
cmc
mov
and
mov
aaa
add
xchg
out
pop
les
or
int3
lahf
fnstcw
jmp
mov
fs
orl
loopne
lds
stos
leave
cmpsb
add
pop
mov
imul
shll
cltd
cld
cld
jne
scas
mov
shlb
dec
cli
mov
sarl
mov
pop
cmp
pop
dec
call
push
aad
fwait
adc
adc
fisttpll
jb
idivb
mov
dec
inc
in
cmpsb
xchg
or
push
fldenv
xor
popf
or
cs
mov
inc
incl
stc
mov
insb
push
aas
popa
cmp
inc
lcall
xchg
cmp
dec
dec
push
cmp
mov
inc
cmp
add
fs
jle
pop
sub
fmull
xor
mov
sahf
sbb
pop
sbb
inc
jae
repz
pusha
or
sbb
jne
cmpl
adc
andl
or
test
je
pop
filds
cmc
movntps
and
loope
push
dec
mov
stc
movsb
ja
inc
sbb
and
mov
call
adc
movnti
and
add
mov
and
xchg
xchg
push
add
ret
inc
mov
push
add
test
insb
sub
fildl
jne
movsb
sbb
cld
mov
jle
pop
adc
mov
popa
inc
out
ret
push
mov
add
rcrl
mov
ja
in
in
cmp
inc
push
in
and
dec
cmp
shrb
sahf
adc
scas
imul
mov
fisubrs
mov
loop
pop
mov
or
push
test
adc
jnp
testb
mov
cltd
sbb
imul
xchg
dec
inc
cmpsb
int
push
fs
xor
mov
je
je
or
outsb
subb
test
add
addr16
dec
call
and
addr16
lahf
or
jecxz
pop
mov
arpl
jge
push
ficomps
popf
sti
xchg
fdivl
cmp
mov
packssdw
aam
xor
fsubp
mov
sub
dec
out
add
dec
adc
scas
movsb
xchg
inc
std
in
out
push
pmulhuw
lcall
cmp
xchg
inc
jo
hlt
call
loopne
sub
cs
out
mov
mov
lock
xchg
push
sub
pop
dec
xchg
mov
cwtl
mov
push
push
inc
repz
xchg
aaa
adc
push
jb
xchg
lret
mov
js
popa
out
and
test
aas
cs
repz
xchg
int3
xchg
aas
cs
lea
mov
jnp
pusha
xor
adc
addb
push
jecxz
movsb
in
adc
mov
repz
push
ss
pop
andl
inc
xlat
adc
add
nop
fs
das
sbbb
cmp
jp
mov
ja
pop
int3
lret
push
sub
mov
out
mull
bound
sarl
xchg
jo
cmp
mov
inc
pushf
inc
add
sub
int3
inc
add
aam
dec
fstps
inc
mov
mov
mov
out
mov
mov
mov
fcoms
jae
and
sub
cmp
xlat
roll
imul
into
cli
loopne
xor
int
jns
adc
hlt
into
jmp
push
xchg
adc
popa
ss
sub
add
xchg
push
scas
cli
xchg
jno
ret
test
mov
mov
loop
pop
outsl
mov
add
int3
jle
add
aad
xchg
fnstcw
mov
dec
and
repz
pushl
pop
pushf
xchg
push
mov
cltd
mov
sahf
pop
push
in
adc
jle
pop
and
les
hlt
pop
mov
aaa
aam
lds
cmp
nop
and
cmp
inc
setb
mov
mov
jle
sbb
push
popf
cmpsb
inc
jge
sbb
nop
cmp
jnp
ja
dec
xor
ljmp
mov
adc
pop
ret
jl
adcb
jmp
adc
pop
inc
cwtl
mov
dec
shl
sbb
or
inc
jmp
mov
loop
and
popf
stc
jl
int3
xchg
xor
leave
xchg
aad
mov
and
pop
adc
testl
mov
lcall
repz
jmp
daa
shll
push
mov
cmp
pusha
jo
scas
in
add
lock
pop
sbb
popf
stos
test
inc
mov
sub
bound
sub
dec
mov
mov
or
or
cld
repz
repz
add
into
xor
sbb
outsb
cltd
cmovnp
jp
xor
jne
cld
jp
push
dec
push
xor
mov
xchg
and
sub
add
pusha
out
lods
inc
jl
mov
imul
mov
cmc
sbb
ds
pop
xor
cltd
dec
add
sub
mulb
xchg
nop
movsl
aas
jnp
repz
dec
test
and
add
in
cmp
stc
mov
mov
sahf
shlb
fdivs
leave
std
ret
sub
add
pop
adc
jl
dec
jnp
pop
cmp
ja
loop
push
push
sbb
cmc
dec
xor
dec
cltd
test
jns
mov
inc
fcmovbe
xchg
lock
loopne
aad
jle
cmp
pusha
ret
and
mov
test
arpl
jl
pop
into
sbb
lahf
es
les
aas
aaa
movsb
bound
adc
lea
divb
lock
lahf
cmc
dec
sar
jecxz
popf
push
dec
push
jnp
xor
int3
dec
push
es
scas
jge
aam
int3
or
testl
xchg
jl
and
or
gs
adcl
lods
lret
gs
push
add
xchg
mov
pop
cmp
mulb
jge
sbb
jb
push
lret
in
cmp
fistpl
sub
xorb
fisubl
ljmp
pop
movsl
fstl
or
out
sbb
cmpsb
lret
pop
jne
mov
addr16
sbb
fistl
mov
repz
push
mov
leave
test
rolb
sub
mov
sti
or
stos
cmp
gs
add
jnp
jecxz
std
idivl
gs
inc
scas
sbb
jg
data16
xor
in
int
add
sub
bound
adc
insb
push
push
imul
jns
adc
das
dec
adc
mov
pop
sarb
add
ret
cmpxchg
jae
push
sar
push
fsubrl
stos
adc
ljmp
repnz
and
ret
jo
in
das
pop
bound
scas
cld
pushf
std
mov
scas
sub
xchg
pop
lret
aas
mov
xchg
ss
mov
xchg
inc
mov
or
jo
sub
pushf
mov
dec
mov
notl
mov
add
pop
pusha
cmp
push
nop
sub
adc
sub
iret
push
pop
dec
add
or
outsl
mov
sub
pop
inc
sbb
mov
lret
jge
add
int3
mov
movb
sbbb
aas
ja
jmp
aam
rolb
aad
mov
rcrl
sbb
adc
jg
sub
cmp
mov
lret
inc
test
jg
pop
or
fs
inc
lret
sbbl
daa
pop
push
fwait
aaa
push
ret
xchg
mov
out
add
lahf
adc
and
push
iret
xchg
lds
add
xchg
fiaddl
xor
jge
test
sub
add
sub
inc
insb
aas
outsb
rorl
xchg
sbb
cmp
add
or
roll
mov
dec
test
jle
bnd
insb
aas
movsl
or
inc
adc
xor
mov
adcl
xor
sbb
sub
subl
scas
sti
dec
aam
cmc
js
sbb
dec
js
cmp
mov
daa
push
add
int
and
lock
mov
mov
movsl
hlt
adc
or
mov
and
movb
and
inc
daa
inc
repz
fcoml
test
mov
and
sub
ja
mov
cs
dec
std
je
enter
ret
xor
push
roll
xor
ficompl
pop
imul
cmpb
mov
push
inc
shrl
lcall
jbe
rorl
push
fcmovnbe
mov
sbb
mov
movsb
cltd
mov
cmpsb
in
ja
mov
push
arpl
sub
inc
jl
push
xchg
dec
movsl
jg
xlat
leave
shr
and
jmp
pop
jl
sub
lret
pop
adc
out
mov
add
sbb
lret
test
scas
ret
add
jmp
add
stos
xor
pop
mov
lods
ljmp
push
mov
fdivr
sub
xor
lahf
insb
mov
mov
shl
and
and
add
jne
mov
mov
icebp
sub
lods
xchg
xor
decl
adc
shlb
or
push
inc
xchg
cli
xor
lods
and
push
pushl
pusha
inc
nop
mov
scas
push
add
mov
fstl
daa
faddl
popa
adc
popf
cmp
mov
mov
shrl
icebp
int3
adc
and
lret
mov
add
int
fldcw
fisubrl
push
loop
loopne
je
movsl
in
pushf
pusha
or
in
imul
adc
daa
movsl
cmpl
bound
xor
cmp
fwait
lds
hlt
xchg
pop
and
and
jecxz
inc
cwtl
sbb
adc
lret
mov
lahf
xchg
movsb
push
add
jb
dec
cmp
cld
sub
push
bound
outsl
hlt
xchg
jne
fxam
xor
mov
and
call
sub
out
dec
jl
daa
pop
adc
js
aaa
lock
in
dec
in
leave
mov
pushf
jge
mov
jmp
mov
in
push
add
pop
inc
push
sbb
cmpsl
leave
jno
jnp
add
or
xchg
das
icebp
fs
or
and
scas
call
mul
pop
xor
fbstp
adc
mov
out
mov
cmp
lahf
incb
cmpsb
push
insb
or
aad
bound
push
cmp
pop
sub
add
ret
xchg
add
ss
xchg
cltd
repnz
inc
add
sbb
cs
push
mov
xor
push
adc
repz
inc
jl
add
sub
mov
mov
call
enter
adc
jmp
pop
push
cmp
loopne
push
push
js
jne
cwtl
fstl
ja
add
out
inc
int
outsb
jbe
scas
dec
sarb
sbb
pop
push
ret
std
test
dec
pop
jecxz
stos
flds
mov
dec
xorb
pop
stos
sbb
lahf
out
mov
rol
fsubs
mov
enter
insl
subl
jl
mov
and
cmc
ret
aam
push
getsec
mov
sahf
jb
push
ficompl
movsl
xor
and
adc
sub
cwtl
push
mov
xor
mov
aaa
out
inc
xor
pop
fldl
lea
in
pop
lcall
cmc
cld
inc
ret
sbb
push
pop
in
popa
jae
mov
fisttpl
cmc
outsl
push
xor
mov
aaa
cltd
stc
mov
dec
fstpt
mov
data16
xor
pop
xor
aaa
sbb
fistpll
cmp
adc
stos
xor
pop
imul
dec
cmc
icebp
adc
sbb
repz
cs
jl
xor
lahf
inc
cmp
lock
daa
jnp
jnp
repz
lock
dec
inc
fs
xchg
push
and
lahf
adc
out
mov
adc
stos
dec
inc
jge
inc
jne
repnz
pop
add
jmp
pop
out
lahf
je
cmp
cwtl
xor
jbe
sarb
sbb
mov
out
cmp
daa
outsb
jg
mov
jnp
mov
movsb
jns
test
pop
aaa
daa
sub
cvtdq2ps
adc
je
and
jl
loop
pop
xor
mov
cmp
lret
inc
pop
addr16
jne
mov
xor
cmc
xor
clc
add
adc
aam
cmp
nop
outsb
xor
test
cli
sbb
ljmp
add
aam
jp
sti
or
ss
sub
jnp
jg
mov
int3
jle
dec
sub
out
pop
dec
arpl
negl
add
fisttpll
sarl
sbb
out
jp
lock
inc
into
adc
btr
cli
pop
inc
xor
repnz
sbb
int3
or
jmp
ljmp
subl
pop
rorb
pop
lock
mov
cmpsb
xchg
movsb
add
in
inc
xchg
jbe
mov
out
xor
dec
test
xor
sub
mov
loope
sbb
xlat
daa
int
jge
stos
mov
leave
hlt
xor
int3
sub
sub
pop
mov
lods
orps
scas
pop
test
mov
aas
icebp
mov
int3
lcall
or
sahf
push
mov
sti
add
add
jg
sbb
push
and
mov
jb
test
and
jge
aam
mov
mov
jno
jg
scas
adc
adc
sbb
sub
add
mov
push
enter
add
pop
ficoml
push
nop
mov
push
fsts
repz
pop
lcall
int
mov
xor
xchg
shl
movsl
xchg
jmp
sub
icebp
push
pop
mov
scas
ds
lret
jb
mov
scas
sbb
inc
or
mov
mov
pop
je
mov
dec
xchg
fildll
cmp
or
inc
lock
ret
jge
jle
xchg
mov
mov
fisttps
pop
push
mov
mov
aam
dec
shlw
test
sub
test
lods
mulb
sub
lock
clc
dec
mov
xorl
push
cmpsl
call
xchg
adc
insl
lds
inc
lods
add
adc
mov
leave
test
sub
dec
xchg
addr16
leave
xor
es
int3
xchg
mov
sub
push
adc
xor
aad
sub
jg
enter
repnz
daa
into
je
jmp
adc
out
outsb
sub
or
popf
repz
outsb
cld
and
loop
push
cmp
insl
push
sbb
xchg
mov
xor
mov
add
sti
jb
test
cmp
mov
lods
andl
jle
pop
outsl
sub
mov
lcall
dec
mov
movq
push
xchg
test
je
mov
mov
mov
rcll
mov
mov
and
shlb
push
stos
stc
fmul
in
push
sub
mov
inc
sub
mov
js
fisttpll
xchg
fxch
mov
adc
push
jbe
cmc
dec
pop
pusha
xor
out
jb
fcompl
push
shrl
fstpl
push
fnstcw
stos
std
ffree
test
fs
jmp
pop
mov
mov
xchg
or
inc
js
cmp
scas
aad
inc
fmull
jne
negl
lret
cmpsl
and
inc
pop
out
mov
popa
mov
jg
adc
jmp
rcrl
mov
stos
pop
cwtl
xchg
jl
adc
pop
stc
jecxz
test
mov
mov
pop
mov
fcomps
mov
push
shll
sbb
ds
sbb
sbb
add
hlt
pop
ds
jp
out
stos
push
rcr
repnz
idivl
cmp
shrb
mov
inc
mov
test
pop
test
or
nop
test
sub
test
out
xchg
ret
jno
or
fwait
pop
xchg
movsb
js
stc
out
mov
pop
adc
mov
insb
iret
mov
mov
test
mov
xlat
ss
sub
mov
out
stc
pop
push
inc
aam
movsb
aam
popa
daa
jb
fists
fsubl
jg
leave
outsl
insl
andl
cmpsb
mov
scas
loopne
cmp
dec
test
mov
add
rorb
jae
lods
push
add
sub
popa
faddl
xchg
xchg
inc
sub
lock
jp
fists
out
bound
pop
adc
ljmp
movl
mov
aad
pop
les
add
and
les
ret
mov
sahf
popf
daa
fmuls
das
stos
loope
cld
jmp
push
cmp
arpl
test
pop
cmp
jmp
push
adcb
mov
mov
fistpll
and
stos
outsl
call
mov
dec
imul
mov
iret
addr16
out
shlb
ret
shrl
dec
pop
and
add
dec
pop
pop
je
dec
test
cli
dec
xor
or
fnstenv
inc
and
or
popf
mov
pusha
fists
test
repz
inc
movsb
and
jbe
push
daa
or
cmpsl
mov
adcb
sarl
mov
dec
xchg
sub
mov
jl
sahf
mov
xorl
mov
insb
out
adc
sub
cmpsl
inc
push
mov
movsl
inc
cmc
outsl
mov
rcrl
inc
outsb
rorl
push
push
repz
mov
movsb
lock
imul
cli
add
mov
int3
fs
cmpsb
test
cmpsb
clc
roll
pop
xchg
hlt
int3
data16
cmp
cmp
push
mov
cs
and
imull
sbb
js
or
cmp
into
test
or
sbb
xchg
subl
add
out
pop
and
push
inc
sub
jb
mov
jo
inc
adc
add
incb
iret
pop
jp
fidivrl
pop
inc
repnz
add
bnd
inc
mov
mul
sub
leave
and
adc
lods
nop
sbb
lods
loope
insb
test
push
mov
and
push
inc
add
and
repz
sar
cmp
shlb
or
cmp
pop
mov
push
popa
push
test
push
xor
mov
cmpb
aaa
or
or
flds
or
add
inc
test
adc
ja
subb
je
movsb
gs
in
clc
scas
pop
lods
outsb
fucomip
cmpb
pop
jne
nop
bound
cld
cmp
loop
xlat
fadd
push
repnz
or
pop
mov
cmc
out
dec
fdiv
into
or
ds
jg
and
mov
test
sbb
shr
pusha
xor
movsb
adc
pop
add
aam
pop
ficoms
repz
jns
sbb
fdivl
call
lret
lods
and
insb
into
cwtl
enter
mov
in
mov
pop
xor
not
repz
mov
cmpsl
jg
fcompl
mov
cwtl
lock
ret
js
adc
push
sub
arpl
pop
fistpll
rolb
sbb
sbb
test
jnp
stos
icebp
orl
lret
int3
out
roll
call
push
mov
sub
adc
in
aaa
push
xchg
fldl
pop
movsb
inc
xor
mov
enter
jl
push
sbb
lret
lods
pop
sbbl
cmc
and
mov
and
ljmp
or
sbb
out
pop
xchg
and
adc
sub
cmc
in
movsl
cmpsb
rcrb
lret
scas
gs
mov
xchg
fisttpll
xor
test
sub
add
lods
je
add
arpl
es
pop
rorl
mov
cmp
inc
imul
pop
push
stos
xchg
dec
push
aaa
cmpsl
push
popa
aaa
stos
ja
out
cmp
inc
jo
loope
push
insl
cli
dec
shll
test
jae
xchg
cmc
fildl
push
push
xor
cmc
shlb
mov
lods
es
or
xchg
xor
insl
ja
lock
xor
pop
mov
jg
and
test
or
xor
lods
clc
pop
add
fsubrs
inc
jge
and
adc
lret
cs
fs
cs
das
sub
mov
add
cmpsl
push
mov
add
push
std
in
inc
adc
jno
or
sbb
mov
hlt
js
pop
ss
outsb
in
xchg
and
xor
ljmp
repnz
test
jbe
jo
push
shll
push
loope
in
and
nop
adc
push
popf
push
data16
ret
cmpsl
iret
shr
sub
jne
and
daa
mov
fstpl
push
cmpsb
or
movsb
sahf
int
xor
shll
pop
mov
jl
popl
cmp
cltd
pop
clc
xchg
inc
xchg
pop
mov
gs
mov
jle
sbb
push
cltd
mov
xorb
cmp
outsl
ljmp
dec
js
mov
insl
or
mov
lock
bound
imul
sti
xor
scas
fldt
insl
dec
push
sbb
push
ret
inc
pop
add
and
shlb
test
outsb
icebp
mov
int3
push
xor
jo
xchg
js
lds
ret
jno
inc
jnp
xchg
jnp
cmp
push
lods
xchg
jmp
jne
adc
in
loopne
mov
inc
aaa
stos
jns
push
fcoml
aaa
pop
inc
popf
ja
cmp
push
sub
cmp
popa
push
cli
cmpsl
sbb
aad
cmp
inc
js
andb
fisttps
dec
fsubl
repz
addr16
or
aas
in
jmp
push
jbe,pn
push
xchg
jne
ja
into
push
and
inc
xchg
daa
pop
shufps
adc
mov
ds
xchg
or
lods
adc
pop
sti
cmpsl
mov
mov
xchg
arpl
sub
sub
das
jns
and
loop
rcr
jns
mov
arpl
sahf
dec
das
repnz
cs
mov
mov
fstps
es
roll
xchg
jp
ret
jmp
xchg
lcall
shlb
es
rol
push
test
mov
data16
sbb
test
fcomi
cs
mov
clc
scas
cwtl
push
ljmp
sbb
fimull
pop
pusha
shr
or
lret
cmp
lods
xchg
daa
sti
repnz
adcl
ss
jno
je
mov
clc
fisttpl
inc
xchg
cmp
inc
push
xchg
lret
cmp
push
in
pusha
repz
andnps
mov
cmp
mov
rcll
push
jecxz
pop
xchg
ljmp
aaa
lock
insb
cmp
and
or
or
mov
add
imul
add
cli
cmp
iret
bound
jp
ror
fmul
aas
jmpw
sbb
les
add
xor
les
jmp
nop
in
adc
rolb
dec
gs
cmp
fwait
cmpsl
xlat
xchg
out
cltd
lods
jnp
cwtl
add
pushf
xlat
cmp
jne
je
add
pop
aad
jnp
in
subps
je
lret
mov
push
aas
leave
inc
fwait
in
es
or
dec
push
sub
jb
mul
add
add
insl
incl
push
ja
sbb
xchg
shlb
xchg
or
pop
jae
aas
cmp
push
rcr
mov
call
push
or
add
or
cld
mov
ret
jae
fists
insb
sub
push
pop
or
paddw
pop
push
add
clc
sub
mov
add
test
jo
iret
out
aas
int
mov
pop
fmull
xor
in
and
ljmp
dec
iret
mov
inc
mov
rcll
xchg
or
lock
andl
dec
clc
xor
mov
test
loopne
sub
loopne
cwtl
jns
jne
xor
push
dec
ja
dec
movsl
and
cwtl
sub
sahf
ret
push
das
push
mov
fnstsw
sub
stc
mov
mov
ja
shr
rclb
out
xchg
lods
add
movl
or
fwait
shll
shll
mov
mov
cmc
mov
lds
inc
stos
sarl
fcmovu
aam
stos
inc
mov
outsl
stos
jnp
pop
lock
ja
and
inc
aaa
cmp
and
mov
push
push
cmp
stos
sbbl
in
out
push
push
movsl
inc
inc
inc
and
ljmp
lret
jmp
jl
mov
lcall
dec
pop
movsl
rol
sbb
cmp
dec
sub
ss
ja
les
push
and
movsl
sahf
and
cs
push
push
xor
mov
cmc
imul
sbb
popa
inc
sti
shll
orl
jns
sub
sahf
push
jle
mov
add
add
movsb
adc
mov
outsb
mov
lods
sub
xorb
adc
and
decl
push
insl
aas
ret
mov
mov
sti
sub
push
outsl
out
out
ret
fisubrs
sbb
xor
out
enter
cli
cmp
ret
xchg
xlat
jecxz
mov
pop
clc
mov
sbb
and
bound
insb
int
out
out
lea
rcrl
jo
add
dec
frstor
ds
xor
dec
inc
cwtl
or
pop
mov
lcall
out
add
test
cltd
daa
or
xchg
int
cltd
jb
xchg
jne
out
leave
arpl
adc
cmpsl
jge
test
dec
pop
in
out
cmp
inc
test
pusha
mov
dec
ret
call
push
jnp
push
sub
pop
push
pop
icebp
dec
daa
stc
cmp
repz
in
jno
jae
sub
mov
ficomps
mov
stos
aad
dec
fwait
leave
imul
push
xchg
mov
imul
inc
cmp
mov
fwait
and
out
lods
xchg
xchg
js
loop
mov
add
mov
icebp
sar
pop
sbb
bound
and
cmp
sub
or
dec
adcl
sbb
jb
dec
std
clc
jecxz
and
push
mov
ds
sbb
push
jg
popa
into
repnz
fldt
or
es
int
into
mov
xchg
addr16
mov
cld
mov
iret
mov
inc
outsl
mov
mov
int3
cmpsl
push
scas
jp
cmp
and
sahf
ds
cwtl
mov
dec
out
insl
clc
mov
xchg
not
add
fwait
adc
stos
in
cltd
mov
push
fs
mov
je
or
jno
sarb
cmp
push
rcrl
xchg
mov
add
pop
repz
sub
adc
dec
mov
sub
jge
stc
push
movsl
push
cmc
push
pop
clc
xor
out
inc
es
xchg
adc
nop
or
fdivl
aam
push
cmp
cmp
sahf
add
dec
sub
add
cmpsb
fabs
xchg
mov
lods
out
mov
xchg
lahf
push
popf
stos
test
jo
mov
cltd
ds
neg
adc
sub
push
dec
int3
cs
dec
cld
pop
mov
pop
lret
enter
loope
inc
sub
mov
aaa
repnz
push
dec
mov
lea
push
sarb
add
push
xor
jnp
sub
xchg
sbb
les
mov
leave
pop
lds
lahf
mov
jnp,pn
cld
cmp
dec
test
sub
lods
sbb
in
imul
lods
lcall
push
dec
outsb
out
ja
clc
sti
sbb
pop
jecxz
inc
mov
hlt
int3
nop
xchg
pop
push
dec
fs
outsb
mov
test
cltd
mov
pushl
imul
jnp
add
out
sub
call
jmp
cltd
or
push
pushf
imul
aad
rcrl
jecxz
mov
fstpl
and
fs
out
insb
sub
push
iret
xchg
rolb
mov
mov
jno
stos
incl
mov
add
sub
movsb
jecxz
mov
dec
icebp
xor
inc
push
lock
jmp
jmp
add
cld
cmpsl
pop
repnz
mov
lock
push
dec
jmp
jae
jae
and
lahf
xor
cmp
out
pop
jae
push
xchg
mov
sarb
std
pop
pop
fimull
mov
inc
and
xor
pop
je
pop
and
movsb
test
call
jnp
mov
leave
push
sbb
mov
adc
and
or
stos
hlt
mov
xor
fcoml
add
mov
shlb
mov
hlt
neg
xchg
movsb
jne
lcall
mov
and
push
rolb
cmp
mov
inc
adc
and
call
or
pop
cmpsb
cmp
fimuls
push
dec
jnp
sbb
out
pop
scas
fsubr
dec
leave
addl
jbe
or
fistpll
int
dec
aas
movsl
leave
jl
in
popa
cmpsb
sbb
out
inc
push
fnstsw
jbe
out
es
and
push
jnp
or
pop
sbbl
test
inc
xchg
cmp
inc
xor
or
or
insl
mov
ret
sub
mov
mov
scas
xor
dec
pusha
pop
cli
enter
push
aaa
fs
mov
dec
lret
daa
lods
popa
movsb
dec
fisttpll
dec
decl
xlat
outsl
fidivrl
xor
jnp
mov
sahf
sbb
adc
push
jne
imul
repnz
push
xchg
cmpsb
loope
dec
push
adc
or
rorl
fwait
xlat
fnsave
cmpsb
rolb
xchg
dec
addr16
cmp
decl
cmp
pusha
cmpsl
jne
dec
clc
stc
fidivl
stos
inc
add
jbe
xchg
jns
adc
scas
outsb
rorb
or
andb
add
std
std
adc
dec
movsb
jne
sahf
cld
loopne
ds
jbe
mov
lret
push
icebp
ret
xor
idiv
adc
pop
das
aam
in
pop
sarl
ret
sbb
sub
scas
fdivl
fbld
mov
add
movsl
inc
lock
sti
int3
mov
dec
pop
insl
xorl
xchg
jno
iret
pop
jnp
push
xor
je
dec
sbb
add
push
jnp
imulb
fsubr
mov
adc
sbb
dec
fwait
cmp
sbb
mov
add
push
mov
call
into
movsb
and
push
insb
bound
inc
out
stos
xlat
addr16
mov
jb
inc
stos
push
dec
lea
pop
xchg
pusha
pop
cmp
pop
bsr
loopne
incb
cmp
sbb
inc
push
xor
fwait
sti
jle
mov
inc
aas
pushl
jmp
mov
pop
sub
test
mov
and
adcl
adc
xchg
adc
fsts
cmp
push
jbe
das
add
js
or
sbb
push
pop
mov
inc
cmpsb
imul
lea
xchg
inc
pop
push
daa
lods
mov
int
mov
int
add
xchg
xor
lret
jae
and
pop
push
cmp
pop
xchg
adcl
dec
bnd
mov
insl
inc
cmc
mov
std
mov
aaa
xor
nop
cmp
add
movsb
fwait
insb
clc
shl
fsub
sbb
sahf
mov
xor
xor
incb
adc
mov
inc
out
jno
pushf
bnd
ds
arpl
cltd
cmp
aas
pop
sbb
fwait
inc
mov
jge
cmpb
lret
repnz
les
test
ret
mov
ljmp
lods
add
lret
push
add
or
jp
divb
test
call
xchg
stos
adc
push
mov
mov
xchg
adc
mov
cmp
sub
notl
push
mov
xchg
movsl
into
add
outsl
push
test
add
mov
push
ds
jge
push
push
incb
loope
xlat
sbb
jp
or
push
sub
out
mov
fnstenv
jb
sbb
in
lahf
ljmp
or
and
cmp
and
mov
adc
fnstcw
jno
in
xor
fistps
mov
or
push
cltd
jg
dec
in
fwait
out
leave
mov
mov
jg
out
mov
shlb
jecxz
push
pop
xor
movsl
jle
push
shlb
out
inc
push
ljmp
insl
adc
gs
lcall
divb
mulb
popf
push
daa
adc
xchg
inc
xchg
cmp
fldenv
popf
pop
jmp
stc
mov
cli
adc
pop
xchg
sub
les
jmp
mov
adc
outsb
stos
add
mov
sub
mov
ljmp
cmp
sub
inc
movl
aas
cli
pop
idivl
test
sub
mov
addr16
adc
bound
mov
dec
and
das
movsl
nop
xor
or
sub
cld
fs
out
inc
jno
jle
xchg
hlt
popf
xchg
sbb
in
repz
std
mov
pop
sbb
cmp
jo
mov
leave
std
les
dec
and
sahf
iret
repz
dec
sbb
ds
mov
clc
sidtl
sbb
pop
mov
loope
inc
loop
fsts
add
or
ss
in
outsl
or
add
movsb
mov
test
and
mov
xor
test
clc
mov
add
pop
add
je
cwtl
xchg
pop
push
pop
mov
imul
lret
test
rorl
jmp
sbb
cmc
sub
or
mov
pop
mov
add
adc
sbb
dec
loopne
pusha
mov
pop
lock
enter
leave
xor
push
leave
jecxz
push
test
inc
popf
push
jbe
mov
cs
enter
xchg
push
xchg
xchg
arpl
lret
rcrb
dec
cltd
xlat
sub
andl
mov
jo
mov
inc
cmpsl
call
bound
mov
cmp
mov
aad
push
cltd
js
pop
inc
pushf
jmp
inc
mov
mov
mov
inc
mov
int3
or
test
test
push
psubsw
lock
add
pop
cli
or
or
loope
mov
jb
mov
dec
lea
push
inc
popa
cmpsb
cmpsb
inc
or
aas
and
rorb
cmp
fidivl
mov
mov
mov
inc
in
mov
push
mov
cwtl
and
movsl
xchg
pop
mov
pop
or
ljmp
stc
mov
inc
or
add
cmp
pop
mov
xor
and
imul
jb
or
je
sahf
dec
inc
and
mov
cwtl
cmpsb
fistps
mov
cmp
sbb
push
call
lret
jne
mov
loopne
imul
push
incb
shlb
sbb
inc
and
mov
add
fisttpl
jg
imul
repz
mov
fdivs
add
ss
leave
mov
shlb
fsubs
push
enter
sub
push
fwait
sub
adc
jle
loop
mov
mov
dec
xchg
sub
and
addr16
add
adc
jg
adc
inc
aad
pop
mov
lret
mov
int3
add
mov
fists
mov
shll
data16
and
lods
fcoml
mov
push
stos
lret
imul
pop
add
fimuls
insl
cmpsb
int3
inc
pop
hlt
jg
rcr
mov
fadds
cs
push
fnstenv
jle
add
and
inc
add
leave
push
inc
es
scas
xchg
arpl
ret
fildl
je
mov
dec
push
shrb
gs
xlat
xchg
outsb
dec
fwait
inc
push
xor
inc
xchg
sbb
sbb
dec
xor
ret
push
jae
imul
adc
jne
stos
sbb
insb
sahf
dec
outsb
loopne
add
add
inc
push
in
jecxz
iret
fwait
cmp
xor
imulb
in
mov
add
ja
cwtl
outsb
fwait
push
movsl
jle
sbb
fucomp
sub
insl
repz
mov
jno
gs
bound
jp
push
nop
imul
xchg
sbb
jne
ret
or
call
lods
jp
mov
sub
test
mov
inc
lahf
dec
test
xchg
mov
jge
outsl
mov
int
cltd
xor
lret
dec
add
inc
das
addb
ja
jmp
dec
fildll
andb
lock
clc
lahf
cmp
mov
data16
jl
adc
jae
sti
pusha
fimuls
push
xchg
mov
rclb
pop
insl
xor
orb
mov
inc
xor
mov
mov
lds
mov
shlb
lds
dec
call
outsb
pop
sub
adc
andb
stos
xor
push
dec
dec
or
loop
fimuls
mov
pop
into
loope
and
mov
fisttpll
ds
lods
out
sahf
and
or
repz
xor
pop
push
fwait
sahf
decb
and
jp
js
jne
addr16
mov
sbb
sub
aaa
xor
scas
imul
mov
jbe
in
mov
and
cltd
sub
cmpsb
push
jo
scas
ds
mov
lods
add
xchg
mov
inc
sub
flds
mov
and
mov
cmp
mov
dec
in
outsb
mov
in
ficoml
xor
add
out
inc
sub
cmpsl
sub
je
ficompl
jmp
add
xor
scas
pop
into
lret
push
lcall
int
mov
hlt
cli
adc
and
sbb
sti
repz
ror
add
insb
add
mov
pop
cmc
hlt
cltd
repnz
repnz
loop
cli
in
aam
mov
ret
push
fisubs
test
jno
or
cmp
lea
stc
sub
mov
std
adc
adc
div
dec
add
cli
test
into
outsb
fiadds
lcall
xor
enter
ja
inc
mov
mov
xchg
test
lret
and
mov
xor
mov
pushf
adc
jl
inc
cmp
imul
mov
cmp
nop
push
and
adc
push
lcall
cli
pop
sbb
cmp
ret
inc
dec
loop
add
cld
sbb
fnstenv
scas
mov
mov
nop
or
push
nop
pop
mov
push
lods
es
xor
jg
mov
test
fmul
mov
xchg
daa
adc
pop
test
pop
cld
sar
add
repz
pop
add
imul
out
fnstenv
dec
imul
fcmovb
dec
das
lods
pushf
pop
mov
jg
sbb
mov
lahf
ret
ds
cmc
mov
ret
ficomps
push
loop
mov
push
mov
jge
inc
jne
stos
ret
sub
lcall
lea
lods
xchg
mov
lret
clc
leave
insl
or
push
sbb
and
jbe
ret
imul
xchg
adc
lods
adc
inc
xchg
into
xor
cmp
pop
adc
scas
pop
sarl
mov
sbb
mov
mov
push
sub
and
std
jmp
stc
pusha
xchg
pop
pmuludq
inc
in
popf
jno
or
ja
out
icebp
roll
mov
in
jnp
sub
cmp
test
xor
popl
push
push
es
xchg
js
mov
aam
add
or
push
gs
sti
aad
js
lret
loope,pn
and
mov
jne
or
outsb
out
decl
outsl
hlt
cmpsl
mov
inc
shll
cld
inc
xchg
push
push
adc
sbb
xor
popa
rcr
fldt
lret
dec
cmpsl
lea
inc
sahf
pop
mov
mov
xor
jmp
jg
add
fcomip
adc
les
cwtl
push
mov
sbb
test
and
push
dec
sub
inc
jmp
jae
adc
push
imul
ss
insb
int3
xor
jne
xor
shll
dec
aam
adc
jnp
sahf
xor
js
lods
xor
aas
push
adcb
lret
movsl
add
dec
fdivs
aad
movsl
loopne
xchg
lods
sbb
icebp
inc
push
sub
cltd
stos
mov
ja
jns
mov
addr16
aad
xor
neg
testb
mov
sub
sbb
push
rorb
imul
pop
dec
inc
pop
xchg
pop
lds
add
flds
out
mov
sbb
lods
sbb
jnp
data16
push
cs
mov
jno
cmp
es
leave
aad
pcmpgtw
jg
xor
mov
in
sub
rcr
je
xchg
repz
sub
dec
and
scas
add
stc
or
push
arpl
popf
xor
sub
xor
sub
gs
mov
lret
push
int
push
data16
adc
fstpl
jge
inc
mov
insl
pushf
mov
cld
ljmp
sub
js
bound
dec
in
or
xor
test
popa
daa
or
xchg
cli
lcall
xchg
imul
lret
fistl
mov
or
nop
lods
shlb
xor
ljmp
mov
fs
mov
mov
mov
les
std
xlat
lcall
out
jmp
push
inc
aam
loopne
out
and
inc
pusha
and
mov
divl
rclb
test
xor
mov
jnp
jle
bound
testb
imul
pop
mov
shrb
pop
inc
jno
push
std
mov
gs
shll
mov
xchg
lea
mov
mov
xchg
sub
push
lods
mov
sub
fdiv
fcmovb
mov
fsubrl
ja
mov
movsb
cmp
in
dec
pop
mov
push
cmp
sbb
mov
fbld
sbb
enter
jbe
lea
movsb
divb
stc
icebp
ret
pop
out
jmp
or
insl
mov
cmp
jne
cli
dec
fnstsw
out
sbb
sar
lahf
mov
jns
arpl
sub
push
fdivs
xor
xchg
or
adcl
rolb
sti
loopne
jbe
mov
out
mov
out
mov
clc
lret
lret
ds
cld
sti
lret
pop
insb
cwtl
or
and
jp
ss
xchg
push
inc
sub
fiadds
bound
add
je
cmp
mov
clc
cmpsb
fcmove
repz
test
scas
pop
fldenv
pop
lods
xchg
ss
xchg
pop
lods
rcl
popf
aaa
loope
inc
lcall
ja
lret
cmp
pop
sbb
dec
nop
divl
cmp
rclb
adc
and
fmull
inc
cld
stos
int3
insl
into
jecxz
push
pop
lock
sti
mov
jle
dec
and
or
lret
dec
push
imul
xlat
movsb
xchg
push
imul
std
jns
sub
cmpsl
arpl
sub
sub
adc
push
sbb
imul
xor
leave
rolb
sub
rorl
clc
es
test
push
add
pusha
pcmpgtw
enter
std
jne
arpl
add
data16
insl
xchg
dec
addr16
pop
sarl
and
push
clc
out
in
sbb
mov
pop
or
test
xor
not
das
pop
bound
mov
or
test
mov
xor
leave
shl
sub
bound
aad
rcl
xchg
in
inc
and
sbb
int
xchg
fadds
mov
in
hlt
sub
in
xchg
xor
test
inc
inc
cli
xor
aam
xchg
sbb
add
loope
sub
sub
adc
loope
jle
dec
and
arpl
adc
aam
adc
inc
out
mov
popa
xor
xchg
imul
sbb
test
xor
jg
mov
adc
and
rclb
popf
pushf
pop
das
mov
mov
adc
cmpsl
mov
and
int
out
sub
jp
sub
mov
es
ds
xor
andb
sarl
jmp
sti
int3
push
dec
les
pop
cmc
mov
popf
and
and
mov
aas
or
push
push
inc
push
cmc
xchg
sbb
outsl
pop
add
cwtl
adc
pop
push
mov
imul
in
lods
mov
xchg
mov
mov
and
and
fdivs
adc
aaa
outsb
nop
stc
cmp
loopne
cmpsl
rol
pop
stos
popf
mov
and
divb
push
testb
xchg
mov
xchg
sbb
xchg
push
jns
loope
lret
xor
outsb
in
idiv
pop
stos
jge
stos
dec
nopl
pop
in
into
xlat
test
sbb
adc
xchg
and
dec
cmpsl
mov
mov
icebp
pop
add
xlat
sub
aam
fsubrs
adc
dec
test
mov
movsb
sub
stc
xor
sub
pushf
daa
fisubrs
fdivl
cmp
push
or
adc
jg
fnstcw
rorl
mov
inc
jmp
xor
in
lahf
in
and
mov
pop
cli
in
mov
das
add
popa
lcall
xchg
add
pop
cmp
push
push
mov
and
cmp
sub
ret
addb
mov
pop
mov
jp
scas
inc
les
pop
mov
xchg
in
repnz
hlt
in
adc
add
adc
mov
mov
scas
sub
lahf
fcmove
mov
fisubrl
add
cmpxchg
push
fbld
aaa
fwait
or
adc
sbbl
push
sub
dec
xchg
in
and
push
movsb
inc
fisubl
lahf
jp
push
sbb
adc
xchg
and
push
push
mov
aas
xchg
lods
dec
out
ffree
shl
push
lret
loop
xor
std
or
lods
out
ficomps
or
mov
mov
pop
sbb
mov
add
icebp
insb
in
loop
loop
enter
out
xchg
jmp
dec
xchg
xchg
aas
add
inc
mov
push
cmp
out
lock
and
shll
cli
enter
fisubrl
mov
gs
out
add
out
jns
lret
inc
fsubrl
ror
adc
xor
inc
push
arpl
jle
pop
mov
cwtl
cmp
cmp
add
mov
cmp
cmp
mov
inc
movsl
inc
mov
pusha
push
arpl
jmp
pushf
sbb
xlat
xchg
aam
nop
ljmp
xor
fwait
hlt
push
dec
xorb
pop
pop
pop
push
mov
jp
negb
nop
mov
mov
cmpb
add
das
insl
call
cmp
sti
in
jns
aaa
push
pop
push
dec
insl
adc
pushf
pop
popa
jl
icebp
xlat
push
dec
imul
popf
push
sbb
fcompl
repnz
aaa
in
cmc
movsb
jmp
xchg
ret
leave
xchg
push
aaa
adc
sahf
jne
push
idivw
in
sbb
imul
enter
nop
aad
inc
call
pop
mov
andb
add
jmp
mov
scas
rcrl
repz
loop
pop
jo
push
sbbl
clc
fs
scas
xor
adc
outsb
xchg
adc
inc
test
popf
pushf
mov
xchg
lds
adc
mov
lock
push
loopne
std
out
aas
push
inc
cltd
mov
cmpsl
push
gs
mov
pop
sub
arpl
into
jnp
cmp
mov
sub
or
xor
mov
mov
mov
andb
rolb
ret
es
arpl
jne
xchg
pushf
or
lds
test
lods
xor
sub
out
mov
outsb
lds
add
lcall
pusha
std
jae
rorb
mov
and
inc
dec
sbb
sahf
adc
pop
cli
shl
and
pusha
mov
nop
fs
les
xchg
xchg
pop
xchg
xchg
loopne
dec
ror
cmpsb
jp
inc
add
std
push
xor
inc
mov
mov
mov
icebp
pushf
pop
addb
cmp
aas
mov
fdivs
daa
fldl
push
or
sbb
lods
and
loop
rorl
es
jle
dec
enter
add
loope
daa
stos
cld
push
clc
xchg
scas
insb
cmp
bound
inc
push
push
daa
mov
jmp
lods
mov
insl
xor
mov
movsb
add
jns
xor
mov
cmp
mov
std
cmp
inc
mov
pop
xor
mov
rclb
test
adc
ror
std
cmp
xor
and
mov
pop
test
mov
mov
adc
push
adc
lret
xor
adc
jb
add
fsubrs
cmp
ds
sub
push
mov
dec
les
stc
and
arpl
inc
pop
test
sbb
movsl
mov
sarb
ja
add
xchg
xchg
aas
ss
xchg
xor
mov
push
ficoms
ss
lods
pop
out
adc
repnz
loopne
mov
in
inc
inc
and
mov
add
or
inc
dec
adc
or
cmc
test
cmp
fcoml
pop
and
push
jbe
inc
frstor
push
nop
cmc
cli
fstl
mov
stc
or
jge
stos
mov
or
leave
mov
or
mov
cmpsl
mov
mov
dec
sub
bnd
sub
loope
xchg
dec
push
lds
adc
pop
jge
int
mov
hlt
push
mov
imul
fsubs
adc
dec
and
xchg
les
dec
fnsave
mov
cmp
cs
je
cmp
xor
movsl
pop
lock
inc
pop
fstpl
jecxz
into
add
insb
into
mov
movsl
les
xor
mov
cmp
jmp
and
lods
leave
cmp
rcrl
ret
or
rorb
pop
jl
add
fldt
or
in
imul
outsl
scas
into
js
notb
inc
cmp
call
adc
addl
out
aam
lea
xor
aas
mov
jno
inc
dec
jns
ljmp
sbb
adc
icebp
fmull
cltd
pop
shrl
ja
fisttpll
add
ds
lcall
and
loopne
data16
popf
dec
movl
test
push
testb
mov
fsts
sub
pop
and
cmp
cmp
push
adc
xlat
xchg
xchg
jecxz
xchg
ss
adc
push
shrl
jnp
jl
negl
in
push
inc
je
in
popf
out
das
rcr
in
addr16
fistpl
jp
iret
sbb
in
lret
dec
push
jle
mov
pop
les
xor
sbb
cmp
hlt
clc
add
scas
and
inc
stc
icebp
cmc
adc
and
inc
repnz
cmp
pop
in
jmp
inc
sahf
fnstcw
rol
in
add
aaa
das
in
js
movsb
out
adc
lods
pop
movsl
shrl
shl
test
movsl
repnz
push
ret
fimull
int
push
mov
jbe
mov
scas
dec
and
pop
mov
jne
add
ret
icebp
or
in
fisubrl
clc
or
movsl
or
pusha
xor
and
popa
scas
sub
and
call
xchg
call
sub
mov
xor
sbb
lret
loop
mov
push
jne
jae
lods
and
sub
into
ds
fstp
es
jle
jg
inc
mov
test
sbb
or
inc
out
scas
sbbl
fidivl
jle
sub
jo
pop
xchg
fs
and
xchg
enter
insb
mov
enter
push
mov
rcr
xor
or
mov
rcl
push
ljmp
cwtl
sub
jl
mov
jb
out
cmp
cld
arpl
call
mov
mov
xorl
dec
or
imul
jecxz
fwait
sbb
xlat
das
rorb
bound
inc
in
leave
je
dec
rcrl
test
and
push
dec
inc
push
orl
dec
mov
test
je
push
push
push
mov
xor
mov
fcmovb
add
mov
inc
pop
orl
lock
mov
les
jns
push
jne
hlt
shlb
mov
cmp
fnstcw
scas
push
inc
jge
aas
fstpt
push
cmp
push
or
xchg
lock
add
pop
xor
iret
xchg
xor
dec
pushf
mov
shrb
subl
scas
pop
fistl
mov
lahf
in
sub
jg
sahf
xor
sbb
jg
jg
ret
mulb
jns
je
jg
add
fisubs
ret
fs
sahf
pop
xor
add
mov
sub
mov
test
push
mov
xor
add
jno
cwtl
int3
pop
mov
xchg
call
cmpb
xchg
xor
ja
jmp
mov
enter
inc
cli
push
pop
shl
addr16
test
jb
test
inc
movsl
fisubrs
jle
das
cmp
enter
fistpl
cmp
es
lock
inc
out
in
and
jg
pop
jno
push
lea
or
pop
adc
dec
je
cltd
push
out
repnz
mov
jno
jo
sti
dec
and
xor
cwtl
in
jo
repnz
cmp
sbb
insl
fistpl
inc
jl
cwtl
sti
or
and
inc
dec
lds
cmc
notl
push
stos
sub
outsb
js
mov
lahf
movsb
imul
dec
les
mov
and
shrl
inc
ficoms
dec
mov
lahf
mov
jno
sbb
mov
cmp
sbb
xchg
and
add
pop
leave
shr
das
xchg
inc
dec
sub
mov
lock
not
sbb
push
iret
jecxz
cmp
and
sub
scas
stos
jnp
aam
xor
sub
lods
sub
out
loop
fwait
repz
jge
jecxz
mov
jp
cwtl
jmp
push
movsb
pop
lcall
jne
mov
cmc
pop
lea
or
sbb
cwtl
in
push
inc
loope
xchg
xchg
dec
nop
push
fistpll
pop
jmp
or
test
sub
aas
out
orb
jmp
loopne
dec
mov
mov
test
mov
add
fsubl
aas
sbb
xor
pop
add
cmp
or
bswap
test
cmp
mov
imul
cmp
sti
aas
cmp
neg
adc
push
cltd
add
ret
mov
nop
adc
into
push
xchg
mov
mov
xchg
das
jno
arpl
pop
sub
mov
mov
inc
inc
mov
sub
push
push
popf
adc
sub
push
jb
xchg
lock
ja
jecxz
push
push
pop
fiaddl
mov
xor
je
sbb
call
fdivr
arpl
sub
dec
mov
and
lcall
idivw
cmp
xchg
dec
jl
lods
push
sbb
xor
push
addr16
repnz
jmp
movsb
jg
leave
add
jns
inc
addr16
xchg
iret
inc
push
xchg
sti
mov
xchg
and
insb
popf
or
sbb
mov
popl
iret
inc
outsb
inc
inc
push
sub
push
lods
jmp
divb
mov
arpl
pop
push
jnp
gs
mov
test
inc
loopne
fwait
rorb
push
fnsave
lret
or
jb
mov
in
cmpsl
sub
test
sarb
xchg
rcll
aad
cli
andb
cwtl
lret
scas
in
data16
jge
cmpsl
inc
mov
mulb
lock
and
iret
inc
fsubl
add
sti
shlb
xor
popf
nop
sub
aam
rclb
stc
lcall
jmp
cmp
inc
add
mul
outsb
mov
sub
les
lret
xor
add
mov
jecxz
imul
jecxz
inc
sub
cmp
push
xor
cltd
fiadds
enter
xchg
iret
test
xchg
fdivrp
jbe
sbb
sbb
dec
cmpl
adc
mov
mov
mov
mov
loope,pn
cmp
xchg
mov
mov
sti
adc
cmp
movsb
jo
pop
sub
enter
pop
fstp
sbb
push
pusha
adc
sarl
jl
cltd
jae
sub
inc
jb
rcrb
dec
in
stos
mov
push
xchg
mov
test
push
int3
icebp
out
inc
or
hlt
and
icebp
adc
cmp
addl
arpl
cmp
sti
repnz
mov
lahf
or
movsb
mov
mov
fldl
jle
jmp
fdivrs
inc
xor
testb
testl
mov
adc
mov
sub
adc
or
and
adc
pop
or
pop
pop
pop
push
jmp
sub
sbb
cmpsl
stos
shrb
jns
loop
mov
push
cli
jns
pop
dec
movd
notb
popf
push
outsl
mov
dec
ds
fs
std
insb
negl
fstpl
aas
fcoms
scas
mov
xlat
xor
inc
mov
fstp
lret
pop
hlt
lahf
jmp
roll
pusha
enter
jmp
mov
mov
lret
or
jl
aaa
push
dec
xor
dec
xchg
dec
nop
xchg
inc
repnz
shrl
popw
out
movsb
or
add
scas
cld
pop
or
jae
ja
mov
sahf
mov
dec
push
icebp
dec
stos
test
mov
dec
fimuls
inc
in
dec
ret
pusha
inc
adc
bound
pop
jmp
hlt
scas
pusha
test
ss
mov
push
gs
subb
or
scas
push
aas
lock
ljmp
data16
pop
aaa
sub
xor
xchg
in
test
add
xor
push
fisttpl
fsubs
sbb
jne
adc
sahf
call
cltd
sbb
push
loope
cld
jl
icebp
loopne
mov
jmp
sub
pop
jmp
xchg
lods
xchg
sarl
pmulhuw
cli
aad
adc
fs
inc
scas
pop
cmp
ret
mov
loop
add
test
push
dec
loopne
lret
out
stc
mov
movsl
sbb
xchg
pop
mov
cwtl
pop
aad
inc
popf
mov
mov
lret
inc
xchg
leave
mov
jecxz
pusha
icebp
xchg
mov
cld
sahf
cmp
insl
cli
in
mov
xchg
out
xor
fdivrs
bound
pop
mov
inc
in
jbe
add
dec
fldcw
andb
popf
arpl
pop
cwtl
dec
insl
in
pop
iret
fmulp
test
das
pop
sbb
inc
sbb
or
sbb
lds
pop
mov
cmp
add
stc
popa
xor
fsubl
aam
mov
pop
and
pop
lea
mov
push
cld
icebp
dec
push
jnp
xchg
pop
xchg
jg
lods
inc
jp
ja
push
stos
push
stc
insl
ds
inc
nop
fsubrs
adc
scas
cli
decl
in
sub
jbe
daa
outsl
stos
or
mov
pop
gs
inc
jbe
movsb
dec
mov
sbb
cmp
mov
rorl
sarb
push
addr16
ret
lock
mov
cmp
adc
imul
or
and
xor
adc
insl
dec
cli
rol
fldcw
dec
mov
test
ja
mov
push
cwtl
push
loop
push
sbb
fistpll
adc
cmp
mov
adc
xchg
leave
mov
dec
push
add
lods
mov
xchg
fxch
test
mov
mov
out
xchg
or
xor
push
mov
jo
rcrb
outsl
push
xchg
add
rcrb
dec
dec
inc
mov
shr
add
shlb
xchg
lret
and
adc
mov
ret
mov
inc
mov
xchg
imul
test
in
mov
into
push
arpl
adc
pop
movntps
int
ljmp
and
add
xor
popf
sub
leave
dec
lcall
js
stc
cmpsb
fidivs
popa
jae
fisttpl
fnsave
pop
mov
pop
sub
and
jb
imul
push
iret
outsb
dec
mov
hlt
cli
cli
stos
mov
cmp
mov
jle
aas
ret
or
xchg
clc
aaa
int3
cmc
inc
movsb
sbb
outsb
cmp
mov
jecxz
and
push
mov
mov
adc
movsl
mov
add
or
das
addr16
fs
jo
jge
lret
hlt
cmpsl
cmp
jb
dec
shl
jecxz
notl
mov
cmpsb
ret
xchg
negb
movsl
and
jmp
sbb
notb
test
inc
cmp
cmp
mov
adc
js
push
repz
addr16
xchg
or
notl
xorb
inc
test
xchg
popa
arpl
fdivr
clc
cmp
pop
loopne
inc
loopne
cmpsb
mov
add
int3
adc
push
sbb
mov
in
pop
jp
sbb
jmp
dec
lcall
les
xor
jle
shl
in
dec
das
sub
push
sbb
sbb
ss
pop
in
mov
jg
dec
sub
cli
lods
mov
jno
jns
addr16
imul
out
pop
lods
cmp
and
fdiv
fst
in
int3
mov
in
pop
dec
pop
dec
xor
pop
pop
test
jns
push
frstor
push
pop
out
jb,pn
hlt
and
pushf
adc
sbb
insl
test
sub
pop
inc
outsl
imul
pop
cmpsb
pop
stc
pushf
mov
bound
xor
mov
rcll
adcl
cmp
xchg
scas
pop
lret
mov
or
dec
out
pop
mov
ja
jge
xchg
aad
fdiv
or
sub
testl
outsl
xlat
xlat
fists
or
pop
inc
orl
cmp
jae
jg
xor
push
or
pop
outsb
push
jnp
adc
sub
pop
adcb
loope
orb
add
mov
outsb
adc
pusha
out
mov
enter
lret
shlb
mov
insl
sti
enter
inc
add
push
je
lea
lret
in
jle
pop
stc
dec
inc
xor
imul
js
andb
mov
or
cld
xchg
sub
push
std
femms
push
aas
jle
pop
adc
movsb
inc
mov
push
leave
add
icebp
pop
mov
xor
lods
dec
xchg
imul
out
jmp
inc
ret
decl
data16
add
mov
mov
iret
inc
mov
cmp
cmpsb
je
xor
jns
xchg
iret
sbb
xchg
adc
roll
icebp
push
pop
pop
icebp
inc
mov
dec
push
test
faddp
jmp
and
or
or
cmp
xchg
ret
mov
mov
jg
roll
fistpl
pop
mov
arpl
push
pop
jg
repnz
leave
in
test
pop
ret
repz
mov
jmp
shlb
mov
jae
fsts
aaa
inc
jp
lret
cmp
rcr
mov
icebp
xchg
dec
movsl
neg
icebp
out
aaa
and
gs
in
push
in
es
mov
pop
cmp
icebp
scas
cmp
inc
subl
or
fisubrl
mov
std
push
popa
cwtl
jle
icebp
or
mov
imul
mov
mov
cmc
jns
imul
dec
jo
into
scas
int
je
pop
pop
add
cli
jmp
sub
inc
mov
cli
mov
ljmp
jp
repz
roll
sub
roll
leave
fmul
nop
ficompl
pop
cmpb
add
adc
dec
ret
sbb
mov
push
add
cs
pop
repnz
jno
or
inc
xchg
sbb
hlt
xor
testb
mov
sbb
movsl
xchg
push
repnz
push
sbb
push
lods
mov
ds
pop
cmp
ss
cmc
testb
out
pop
or
cmp
mov
shrb
pop
ds
mov
add
test
jns
in
test
inc
test
mov
adc
loopne
pop
xchg
jmp
cwtl
dec
inc
xor
sub
push
addr16
out
stos
imul
cmp
dec
in
call
jb
rcrl
mov
pop
cltd
cld
into
in
popa
mov
out
xorl
push
sahf
call
mov
xor
out
pop
das
inc
cmp
sub
scas
mov
jbe
cld
imul
cli
fdivl
out
xor
dec
mov
jle
cwtl
popf
xor
add
xchg
jp
cmp
and
push
or
sub
out
jg
cs
int
aam
test
pop
orl
xchg
imul
pushf
sub
daa
cmc
jl
aam
test
int
sti
out
clc
adc
stos
nop
jbe
fldl
mov
pop
cmp
adcl
stos
xor
loopne
loopne
dec
das
lods
scas
mov
bound
test
negb
or
stos
mov
push
cli
push
jmp
lds
insb
mov
stos
add
pop
lock
dec
out
jecxz
mov
add
xor
push
movsl
shrl
xchg
arpl
das
jg
sbbl
mov
pop
add
bound
cmpsb
outsl
push
fwait
cmc
adc
and
lcall
jne
das
mov
cmc
dec
inc
out
mov
into
mov
push
pop
dec
iret
cmp
or
xlat
insb
sbb
daa
cmp
testb
sub
mov
aaa
mov
lods
rcrl
pusha
aad
enter
dec
sub
pop
add
lods
jg
es
mov
jmp
shrb
in
lahf
icebp
rcll
fisubs
jo
pusha
jecxz
lahf
sbb
stos
sti
jmp
icebp
or
outsl
int3
or
lret
push
pusha
and
and
mov
in
jg
lret
xchg
sbb
jl
jle
mov
xchg
mov
int
movb
mov
scas
outsb
jg
mov
sub
push
push
dec
stos
mov
mov
repnz
gs
pushl
push
movsb
mov
and
pop
push
movsl
mov
ret
test
sbb
std
xchg
and
and
hlt
inc
stc
gs
dec
pop
cmp
dec
fnstenv
pop
aaa
and
push
add
pushf
pushf
adc
jne
pop
mov
push
push
dec
leave
pop
shrl
cmp
iret
ss
popa
daa
add
push
ds
cld
stos
inc
sbb
and
jno
fildl
xor
cmpsl
sbb
fidivrs
aas
cltd
lea
stos
je
in
leave
lahf
subb
mov
mov
fidivl
sbb
lret
and
dec
std
js
mov
xchg
push
mov
cli
icebp
sbb
ret
mov
cmpsb
rorl
int3
mov
std
mov
jb
push
sbb
nop
je
jb
push
dec
dec
fiaddl
in
clc
scas
jp
lea
sbb
jo
lahf
rclb
or
fwait
mov
ja
rol
scas
adc
xor
cltd
ja
aam
cwtl
mov
cli
pshufw
outsl
dec
js
test
push
sarl
mov
xor
clc
mov
divl
mov
dec
test
dec
out
or
fildl
sahf
xchg
mov
loopne
push
mov
ss
js
jb
xchg
cwtl
enter
mov
adc
std
sub
jno
mov
cli
dec
out
arpl
jo
bound
nop
adc
add
pop
pop
push
push
xchg
hlt
mov
cmc
mov
daa
outsb
fs
sbb
mov
adc
jl
or
sub
adc
loopne
insl
shll
movsl
sbb
in
dec
cmp
xor
lods
imul
nop
insl
cmpsb
jns
out
bound
pop
pop
roll
adc
out
mov
jae
leave
sbb
inc
and
jnp
sbb
dec
aas
pop
rorb
setnp
in
jg
push
sub
sub
bound
jb
stc
xchg
pop
jne
mov
pop
loop
pop
jge
sbb
popl
sar
gs
in
leave
ret
popa
jbe
inc
lds
aaa
gs
adc
sbb
repz
pop
sahf
and
fs
dec
dec
sti
push
push
adc
push
add
out
xchg
mov
es
fs
mov
jmp
testl
movsb
arpl
inc
xor
sub
dec
and
inc
mov
inc
inc
in
xor
out
cltd
dec
adc
outsl
xlat
mov
pop
jle
sbb
cmp
mov
loop
pop
call
fistl
xchg
push
mov
jo
jmp
loopne
xor
push
jmp
lret
arpl
jae
add
xchg
adc
rorb
inc
int3
aad
ds
out
cmp
jl
inc
popa
jae
pop
fcmovne
mov
shrb
inc
and
int
jae
int
daa
mov
push
fldt
adc
pop
adc
mov
into
mov
sbb
pop
mov
add
pop
dec
add
and
lahf
adc
adcl
push
rclb
and
outsb
inc
enter
flds
aad
pop
addr16
mov
adc
push
sub
xor
and
dec
aam
lods
pop
test
mov
fiaddl
mov
add
test
xchg
pop
es
leave
das
pop
loopne
iret
rcl
sub
pop
sahf
ds
mov
sub
stos
mov
cltd
or
sbb
loop
mov
lds
and
inc
mov
loope
xchg
in
mov
xlat
pop
pop
or
sbb
arpl
lods
xorl
mov
insb
cmpsb
mov
xor
xchg
fsubrl
xchg
pop
xchg
inc
ret
push
pop
inc
push
lahf
cmpsl
mov
cmpb
fcoml
push
nop
shr
imul
inc
outsl
mov
push
sub
or
lahf
das
add
movsl
repnz
mov
sbb
rcr
mov
cld
loop
pop
sbb
mov
fldl
lea
adc
ljmp
xchg
xchg
aad
pop
adc
lods
pop
insl
mov
stc
sub
xchg
pop
mov
sbb
add
pushf
call
push
cmp
jae
adc
or
inc
dec
shll
sti
test
sbb
push
add
cmc
and
cltd
jcxz
mov
enter
pop
jp
in
xchg
fldl
jae
jg
xor
scas
hlt
push
xor
cs
pop
mov
mov
pop
and
rcrl
pop
fadd
push
inc
xlat
pop
lds
inc
js
mov
lret
mov
fistpl
add
in
mov
xor
loop
xor
mov
and
mov
dec
ret
push
call
jne
sti
mov
and
out
mov
nop
sub
mov
adc
dec
pop
dec
xlat
and
pop
xchg
sbb
iret
or
inc
sub
or
push
mov
inc
pop
shl
and
jmp
clc
icebp
push
cltd
sub
in
inc
loopne
mov
jb
imul
lret
xchg
push
sub
movl
loop
xor
into
lcall
xchg
mov
lea
adc
cmp
add
or
push
icebp
mov
jns
sahf
jl
mov
push
cmp
in
loop
jge
test
aam
mov
mov
push
adc
daa
dec
sub
mov
xor
gs
dec
and
loope
pop
or
and
xchg
fildl
sbb
mov
ja
and
ljmp
inc
xchg
mov
js
mov
mov
into
xor
lds
ljmp
fcmovne
or
xchg
inc
clc
push
aas
or
ror
punpckhwd
mov
add
lret
jge
outsl
cwtl
int3
insb
insb
cltd
pop
orl
xchg
call
out
and
cmpsb
inc
mov
sub
test
je
pop
pop
ljmp
test
and
adc
shll
shll
movsb
loopne
repz
fsubr
cld
fstl
imul
fdivrl
ret
jbe
repnz
inc
sbb
push
and
dec
push
lcall
push
dec
test
inc
sub
int
mov
movsl
andb
inc
lds
xchg
sub
cmp
pop
jp
bound
cmc
insb
mov
sub
mov
lds
lcall
fwait
or
push
popf
hlt
push
mov
out
jbe
cmp
orl
or
leave
push
insb
idivl
dec
xor
fwait
add
cmp
mov
enter
xchg
adc
loopne
cmpl
out
fadds
push
xor
xor
pop
pop
aaa
mov
popf
fs
cld
or
pop
sbb
xlat
js
nop
dec
pop
cs
fstp
popf
jb
xchg
gs
sub
ss
xlat
dec
cli
mov
jl
insl
in
pop
dec
mov
scas
adcb
in
orl
cld
enter
cld
jnp
push
lods
add
xor
das
scas
leave
fistps
inc
or
aas
repz
mov
add
icebp
mov
and
push
and
iret
jecxz
ret
rcl
sbb
dec
jno
js
inc
dec
add
xor
mov
lods
xorl
rolb
enter
daa
jl
mov
jmp
mov
andb
cmp
shlb
jne
popa
ljmp
add
cwtl
sbb
aas
pop
xchg
add
xor
add
sbb
push
mov
mov
sub
add
ljmp
push
add
pop
add
mov
push
outsb
popa
leave
ss
ret
lret
xor
push
sti
push
aaa
xchg
mov
and
mov
clc
js
xchg
mov
mov
push
out
and
rcrl
dec
mov
lahf
orl
rcr
testl
cwtl
out
into
into
loop
cmp
cs
dec
or
pavgw
out
jae
pop
or
int
fisttpl
mov
inc
repz
dec
test
lea
call
and
mov
into
or
dec
xchg
push
adc
jle
std
mov
daa
addr16
or
out
arpl
je
fadds
call
inc
je
fldt
pop
dec
sub
das
jae
dec
ret
outsl
push
jg
xchg
loope
sti
dec
jb
rorb
or
mov
iret
cld
inc
mov
mov
loop
ret
subb
or
mov
bound
mov
mov
mov
inc
inc
pop
push
xchg
rol
or
iret
and
pop
sbb
into
movsl
mov
add
mov
inc
js
cmp
mov
lods
fiaddl
adcb
add
andl
dec
pop
jb
pop
fmull
mov
push
daa
xchg
adc
and
push
bound
divb
in
xchg
mov
jmp
test
fadds
sub
add
aad
sbb
aad
xchg
jo
mov
jb
sub
cwtl
jno
inc
sti
in
sti
into
push
enter
inc
cli
iret
inc
outsb
mov
setle
test
mov
mov
adc
jp
and
lcall
jae
mov
sub
dec
repnz
mov
in
mov
addb
jb
out
inc
mov
filds
push
mov
mov
xor
scas
lea
xchg
iret
data16
sub
push
adc
jae
mov
adc
imulb
dec
inc
sbb
mov
aad
and
sbb
cmc
xchg
je
mov
pop
lods
sub
rorl
jge
mov
in
rcr
push
data16
pop
sub
adc
lret
ljmp
cmpsb
lret
pushf
pop
adc
ret
idivb
sar
popf
sub
sub
pushf
inc
lea
sub
jle
push
inc
pop
push
pop
fnstcw
xor
or
mov
scas
stos
adc
mov
out
jb
imul
ret
jmp
or
add
or
enter
mov
dec
aad
sbb
sub
cmp
sub
push
stos
xor
adc
imul
mov
outsl
movsb
fucomp
mov
ds
cmpsb
hlt
popa
out
adc
cld
rorb
pop
add
lock
and
cwtl
testl
mov
pop
adc
push
xor
negl
dec
shr
cmc
mov
in
imul
sbb
sarb
mov
cld
jl
jge
sbb
push
xchg
and
aas
inc
mov
sub
mov
loope
pop
push
es
shlb
jnp
ja
adc
xor
adc
shrb
cli
xorb
in
adc
insb
pop
pop
inc
adc
scas
pop
cs
fiaddl
inc
cmp
aaa
mov
call
ss
pop
ja
sub
or
fmulp
fcmovnu
push
dec
loop
stc
or
test
js
add
add
jnp
imul
mov
imul
lods
adc
lock
pop
notl
xchg
imul
or
je
sbb
mov
and
mov
dec
jae
loope
xchg
pop
loopne
dec
push
sub
sub
pop
dec
clc
xchg
mov
fsubl
popf
push
test
pusha
xchg
movb
ds
fcmovnbe
sub
loopw
in
dec
xchg
inc
std
and
in
inc
das
and
test
movsl
sub
sub
ret
fwait
cli
nop
cmp
rolb
pop
push
dec
lods
sti
dec
pop
dec
lods
pop
int
lret
iret
sbb
pushf
test
fistpl
cmp
into
xchg
aam
jecxz
popa
outsb
mov
fs
inc
mov
push
cmp
push
sti
icebp
std
movsb
sbb
shlb
push
sbb
mov
push
cld
aaa
push
cld
sub
cmpsl
dec
push
outsl
xor
leave
repz
push
ret
fiaddl
lret
in
inc
pop
sbb
add
mov
shrl
inc
les
adc
iret
je
test
adc
arpl
xchg
test
mov
cltd
and
dec
fisubl
jb
dec
jmp
inc
jbe
fisubs
das
inc
mov
mov
cld
test
sarb
mov
movsb
ret
insb
fstl
cltd
jge
cmp
ss
iret
jnp
mov
das
mov
orl
xchg
sub
mov
ljmp
push
cmp
in
add
cmp
or
ss
lahf
push
or
sbb
decb
mov
push
push
xor
xchg
sahf
sbb
push
mov
pop
out
xor
jno
cmc
mov
out
roll
inc
stos
cmp
adcb
pop
testl
inc
pop
les
daa
lods
scas
lods
add
sahf
xchg
fdivl
shlb
jno
cwtl
icebp
movsl
fs
pop
not
jg
jns
lret
gs
lcall
jmp
dec
cmp
push
ljmp
mov
std
lock
mov
add
push
mov
gs
insl
xchg
popf
jecxz
fiadds
mov
cwtl
pop
add
fdivrs
mov
insb
adc
mov
jge
roll
push
sub
mov
cmpsb
adc
cwtl
stos
mov
inc
cmp
enter
sbb
mov
aaa
clc
es
sahf
aam
imul
cli
adc
inc
outsl
jecxz
xchg
fcoml
xor
nop
sbb
dec
out
mov
push
mov
mov
jo,pn
repz
test
rorb
pop
mov
cs
fcmovne
sahf
xor
jge
scas
xor
imul
jb
shlb
dec
inc
push
mov
out
cmp
xor
add
mov
out
pusha
mov
add
cmp
cmpb
mov
push
xchg
in
rorb
pop
cwtl
dec
inc
mov
pop
cmp
add
mov
ja
mov
test
out
into
pop
in
ja
scas
shl
imul
lods
lods
sbb
mov
ret
xor
push
psubusb
sub
lcall
xor
loopne
or
sbb
pusha
sarb
dec
sbb
das
lock
fdivrs
popf
pop
jp
popa
data16
push
shlb
call
test
outsb
xorl
add
loope
xchg
subb
xchg
jecxz
xchg
rcl
pushf
lock
adc
shlb
or
cmc
ljmp
ss
mov
mov
dec
jo
add
and
pop
xchg
dec
add
aad
mov
arpl
imul
jle
repnz
les
popf
stos
xor
mov
ja
xadd
push
stc
fildll
cwtl
sbb
lea
inc
mov
lock
pop
mov
mov
dec
dec
sub
lods
xchg
jle,pn
mov
mov
notl
repz
and
cmp
mov
adc
xor
sub
pop
cmp
mov
jns
nop
sarb
ret
int
inc
mov
xchg
addr16
dec
add
fsubs
dec
enter
into
inc
sub
fdiv
out
dec
mov
pop
dec
shl
xchg
insl
dec
insb
push
hlt
pop
es
icebp
lcall
nop
cmp
or
mov
mov
out
outsl
dec
in
stos
mov
mov
fdivrl
mov
or
into
pop
push
testl
cmp
js
cmp
add
movsl
popa
pop
pop
xchg
inc
push
test
icebp
sub
popl
cmp
push
jle
inc
arpl
leave
jle
xor
mov
ss
xchg
stos
dec
dec
sarb
sbb
mov
stos
ret
into
mov
lss
pop
mov
enter
jbe
sbb
jns
dec
cmp
xchg
insl
inc
pop
mov
cmp
jno
pop
mov
add
mov
cmp
js
pop
out
xchg
pop
enter
push
inc
in
sbb
call
xchg
jo
popa
push
inc
xchg
lret
push
imul
xor
sahf
xchg
out
jg
xor
dec
mov
mov
hlt
push
gs
push
addr16
sub
adc
xchg
lods
movd
stc
jmp
dec
sbb
add
shll
sbb
xlat
pop
sti
mov
int
jg
call
sbb
cwtl
jae
arpl
jns
loope
out
jns
les
push
and
popa
dec
mov
cli
mov
xor
adc
stos
jo
sbb
add
pop
push
rclb
sub
data16
fsubr
or
repnz
mov
xlat
xor
pand
cwtl
out
out
pop
repnz
xchg
ja
xorb
add
mov
jb
adc
mov
jmp
jae
popa
mov
cmpsl
int3
pop
cmp
xchg
repnz
push
repz
mov
inc
lds
sbb
sbb
lahf
add
cmpsb
fwait
js
pop
inc
dec
lret
xchg
mov
outsb
push
or
sub
mov
add
je
into
fs
lods
cmp
jg
mov
scas
shll
int
lock
scas
sbb
xchg
push
pop
outsl
stos
loope
mov
rclb
cmp
enter
dec
lret
movsl
xchg
les
fidivs
jge
jge
mov
test
fstpt
scas
je
mov
pop
popf
lcall
cs
incb
sub
pop
xor
adc
or
jge
int
dec
sbb
aas
jno
outsl
fwait
pushf
setne
repnz
inc
arpl
lea
out
movsl
and
mov
ljmp
jb
dec
dec
lcall
and
orb
add
lock
fwait
scas
push
loope
mov
cli
mov
in
cltd
into
ss
add
fs
jp
in
sub
push
or
cmpsl
push
xchg
cmp
sbb
jge
in
pop
jno
sbb
bnd
add
loopne
enter
adc
cmp
push
lea
ret
mov
jge
scas
sbb
ficoml
xchg
mov
and
lods
insb
pop
cmp
push
dec
mov
mulw
ret
jmp
leave
mov
dec
enter
xchg
out
dec
ret
or
push
and
arpl
add
push
call
fldenv
inc
sar
insl
imul
pusha
movsb
loopne
call
inc
mov
push
ss
repz
pop
and
repnz
testl
jbe
je
rorl
sub
jo
arpl
mov
int
cmp
imul
das
in
out
imul
or
xor
cmp
sbb
js
in
leave
int3
sahf
xor
mov
enter
ja
daa
scas
fmuls
lods
mov
jp
push
dec
lahf
scas
and
push
inc
lods
mov
aaa
inc
imul
push
pop
rorl
dec
and
sbb
push
mov
cltd
dec
push
xor
sbb
int3
addr16
lcall
mov
xor
mov
lret
push
and
lds
sub
ror
pop
mov
cmpsb
data16
sti
cmp
sarl
cltd
or
mov
add
xchg
outsl
divb
mov
push
sti
mov
repnz
test
lret
and
imul
adc
and
dec
or
movsl
mov
decb
addl
push
hlt
lds
add
cmpsb
mov
mov
stos
fwait
lea
push
aam
loopne
sbb
mov
jl
push
call
roll
jns
jo
dec
inc
je
fstl
sub
clc
dec
mov
cmp
mov
cs
scas
sbb
inc
cmp
rorl
nop
lods
pop
sbb
mov
mov
andl
pop
stc
mov
inc
jmp
movsl
mov
mov
std
sti
sub
loop
pop
pop
sbb
pusha
and
jbe
scas
stos
push
fmull
mov
je
inc
pusha
sub
sbb
mov
xchg
and
int
dec
mov
les
inc
sub
sub
insl
ljmp
fisttpl
leave
test
push
add
and
jmp
jo
ljmp
testl
pop
in
mov
mov
add
xchg
out
je
addr16
imul
loope
ds
cmp
push
xor
scas
aas
cli
xor
xor
inc
orb
mov
mov
aad
fs
idiv
ja
push
xor
cmp
outsl
insl
sbb
icebp
pop
or
jns
xchg
and
and
das
add
rol
pop
test
int
push
xor
jne
push
insb
xlat
movsb
bound
insl
fnsave
jge
push
rclb
fidivs
cmp
push
mov
sbb
ljmp
jnp
fwait
lahf
dec
stc
loopne
xor
pop
fsqrt
adc
xchg
pop
stos
xchg
cmpsl
mov
stos
lods
call
sub
sub
cmc
cli
mulb
lret
cmp
jbe
or
jg
add
scas
cmpsl
mov
in
in
je
stos
jae
pop
fcomps
leave
mov
inc
fmull
cmc
sbb
or
mov
sarl
push
pop
in
out
add
out
jg
mov
or
xor
push
leave
fdivrl
mov
dec
xlat
loope
xor
and
data16
sbb
imul
andb
cld
cmp
jp
sub
in
mov
pop
mov
add
and
mulb
add
popf
dec
test
xchg
shr
xor
pusha
xchg
pop
add
sub
adc
jmp
jge
and
inc
jmp
daa
ficomps
ficoml
pop
inc
push
xor
sub
shrb
and
repnz
dec
sbb
les
out
fs
add
hlt
pop
or
push
in
cmp
jge
out
rclb
add
mov
in
adcl
notl
fsubrs
mov
xchg
fimull
push
stos
stos
aad
lahf
pop
fidivrs
jno
sbb
das
cwtl
or
pop
xchg
mov
rol
fisubs
imul
fcomp
repnz
sbbb
pop
subl
jl
pop
jnp
jmp
insl
push
hlt
sti
movsb
lods
es
mov
jae
int3
dec
lods
paddq
xlat
stc
inc
adc
nop
clc
dec
sbb
pushf
mov
xchg
and
pop
mov
stos
dec
mov
daa
add
jl,pn
cmp
pop
push
fidivrl
leave
mov
rolb
repnz
jle
cld
out
mov
xor
inc
stos
push
xchg
mov
aam
jge
fmull
outsb
and
push
out
sbb
pop
push
pop
xchg
out
mov
mov
mov
jns
ss
div
inc
jbe
std
cli
push
xchg
ja
jb
mov
out
jmp
xchg
fcomip
inc
push
lock
mov
fwait
gs
nop
mov
lret
adcb
roll
mov
out
pushf
mov
cmpsl
xor
push
sbb
and
sti
xchg
or
aas
adc
lods
jns
push
xor
xchg
subl
in
mov
cltd
lea
stc
push
negb
push
sub
aam
push
jne
push
test
xor
add
inc
cmp
stos
dec
pop
cmp
fsubrl
das
rol
or
adc
lods
add
fsubrs
cwtl
imul
test
clc
ds
push
xchg
leave
push
jp
lods
es
addb
pushf
outsb
rolb
dec
pop
lret
xchg
test
in
mov
or
xchg
inc
test
stos
test
add
imul
into
jle
test
jno
inc
sbb
movsl
enter
out
jae
shl
sarb
mov
cmpsb
mov
ret
test
in
pushf
push
xchg
mov
mov
mov
adc
mov
stos
pop
fs
or
cmpsb
mov
mov
mov
jmp
sub
inc
mov
mov
mov
mov
stc
xchg
pop
mov
aaa
fbstp
imul
sbbl
jo
pop
into
mov
movsb
mov
test
push
stc
js
push
shrb
data16
rorb
push
mov
jl
mov
dec
out
int
mov
scas
les
xor
test
mov
iret
pop
leave
addb
sahf
inc
call
sbb
ljmp
sarl
or
or
push
mov
aad
xor
adc
cltd
xor
aaa
push
shl
sbb
inc
mov
mov
pop
xchg
pushf
push
lea
rol
dec
push
ljmp
and
les
pop
repz
inc
push
ss
aad
movsl
mov
scas
and
sub
dec
inc
sub
aam
sub
movsl
out
xchg
push
scas
pop
lret
jp
jo
test
lea
inc
int3
pop
jmp
xor
cmc
popf
pop
inc
push
lods
sub
sub
pop
xor
pop
or
add
cmp
lods
das
add
adc
cmp
mov
xchg
sbb
xchg
sub
enter
fcompl
jp
or
xor
arpl
jo
push
mov
xor
jne
stos
pushf
mov
mov
or
sub
pushf
and
fwait
adc
dec
dec
fwait
scas
popa
and
ds
loope
push
adc
sub
xchg
dec
and
scas
out
dec
xor
mov
stc
mov
lods
or
js
inc
std
ja
add
mov
cmp
or
pop
xchg
jle
jp
pusha
xor
mov
push
sahf
dec
adc
fsubp
mov
cmp
pop
out
pushf
pushf
mov
call
lcall
fcomps
pop
mov
jmp
fs
add
mov
cmp
push
out
test
addr16
mov
shlb
jno
or
iret
inc
xchg
push
xchg
inc
call
insl
dec
out
mov
push
insl
scas
aam
stos
in
pop
leave
ret
cmc
sbbl
ret
pop
fidivs
stc
adc
push
mov
or
fbld
pop
mov
pusha
jno
rclb
addr16
pop
aas
aam
popf
push
sarl
pop
jp
imul
jp
xor
sbb
fwait
xchg
mov
aas
ds
ljmp
pop
stos
icebp
lods
je
mov
fildll
pop
or
mov
inc
ss
xchg
clc
data16
daa
divl
sbb
or
mov
sub
jae
les
adc
mov
and
mov
mov
cld
ds
mov
and
jb
int3
int3
sbb
add
pop
aam
inc
repnz
pop
outsl
adc
mov
xabort
sub
sbb
je
jmp
dec
enter
outsb
dec
aaa
mov
test
iret
cli
lods
int3
or
imulb
lahf
shll
into
mov
inc
mov
out
and
push
push
xchg
cld
in
add
xlat
push
int3
jl
fwait
pushf
dec
int
fdiv
pushf
mov
lods
jle
sbb
addl
inc
jo
push
add
push
xor
pushf
sbb
inc
jno
ror
sbb
mov
sbb
adc
inc
mov
cmp
outsl
test
push
mov
push
sbb
mov
pop
sahf
xor
arpl
ret
lds
or
arpl
and
sub
popf
xchg
lea
lea
gs
mov
xchg
pop
cmpsl
xchg
jge
pop
jp
int3
xchg
stos
sbb
and
pop
pop
mov
cmp
xchg
shlb
jl
mov
and
add
lret
bound
mov
or
ds
out
fcoms
ret
ds
push
cld
adc
pop
cmp
or
test
sub
pop
arpl
iret
dec
lods
out
jge
dec
push
repz
dec
aam
sbb
ret
push
aam
dec
pop
div
clc
pop
nop
mov
aad
outsb
and
dec
inc
pushf
rorl
sbb
pop
sti
sbb
lds
shll
mov
imul
jmp
cmp
arpl
xchg
jns
xchg
push
xor
test
or
pop
jl
pop
lcall
xchg
lods
inc
out
pop
add
and
aas
inc
in
ret
xchg
cmpsb
in
xor
addr16
test
jecxz
pop
sub
jae
shlb
cmpsl
mov
or
push
mov
jns
xchg
aam
aaa
mov
call
cmpsb
jge
xchg
test
nop
jg
out
cmpsl
int
mov
enter
hlt
clc
xor
out
arpl
stc
mov
mov
mov
xchg
pop
adc
mov
pop
mov
out
pop
jb
jecxz
cmp
dec
jl
aaa
jle
add
jbe
inc
pop
data16
jo
add
pop
sub
jle
jno
inc
jge
sbb
je
dec
and
cli
inc
mov
scas
test
ret
sahf
shlb
add
jns
jmp
mov
int3
sbb
xchg
cmpsb
inc
sbb
pop
loop
shll
stc
in
outsl
enter
imul
fsubrl
rol
jns
test
mov
insb
cmp
fnstenv
inc
imul
sbb
fmuls
jmp
movsb
inc
repz
xchg
mov
pop
inc
xchg
outsb
jns
mov
lock
xor
cmc
push
aam
std
add
test
add
and
stc
mov
test
mov
nop
cmp
call
scas
mov
pop
out
pop
sbb
out
int3
repz
cmp
popa
xor
imul
xor
add
mov
das
inc
sub
stc
push
mov
gs
cmc
xchg
sahf
sub
push
push
dec
ficoms
xor
mov
or
push
fsubrp
sub
xchg
pop
fldt
cmp
scas
fiaddl
setae
lcall
cltd
mov
push
sub
in
fwait
aad
and
out
outsw
or
push
sub
add
repnz
test
inc
cmpsb
in
out
mov
fcoms
sbb
inc
movd
out
or
ret
push
nop
hlt
xor
test
xor
test
das
jmp
stc
push
push
aaa
pop
loop
movl
cmp
push
dec
js
or
mov
sub
ret
jne
popa
test
xor
inc
xor
into
or
sahf
xlat
push
xcrypt-ctr
cmpsl
fnstsw
or
fisttpl
adc
das
cmp
faddl
pusha
pop
in
sbb
lahf
cs
andb
cltd
lods
mov
out
ljmp
xchg
dec
jne
sub
sbb
pop
adcb
pop
pusha
mov
mov
ljmp
sahf
mov
int3
mov
xchg
mov
cmc
add
xor
cli
cli
jnp
sub
add
std
div
nop
push
push
rclb
push
or
negl
push
cmp
sub
pop
aaa
sbb
mov
or
mov
repnz
xor
cmpb
inc
repnz
dec
scas
loop
mov
add
fnstenv
jnp
rolb
pop
add
xchg
lock
add
ja
adc
jecxz
add
into
mov
adc
ret
popa
cmpsb
cltd
push
loopne
sbb
cltd
imul
je
ljmp
cwtl
sbb
or
dec
daa
pop
adc
addr16
xlat
jl
xor
sbb
or
cmp
cmc
sbb
inc
fcmovnb
mov
pop
fwait
scas
leave
stos
jne
xchg
add
popf
adc
inc
mov
push
addr16
dec
mov
shl
adc
fstpl
les
dec
in
test
inc
shrl
inc
mov
test
out
cs
lock
push
inc
jge
flds
jecxz
aad
push
lods
sbb
pop
sbb
mov
jle
leave
and
punpckhdq
push
and
outsl
or
leave
cld
dec
addl
ja
pop
push
pop
adc
out
lds
fcmovne
lcall
out
mov
daa
xor
jns
mov
mov
adc
stc
outsb
in
xor
cmp
sub
out
movsl
cmpl
jl
movsl
neg
add
pop
dec
push
in
sbb
aam
rclb
dec
subb
jmp
mov
lret
inc
push
add
and
sbb
push
cltd
imul
adcb
dec
and
movsb
push
cmp
mov
mov
movsb
xchg
sbb
cmp
cmp
xchg
in
adc
jae
sub
rorl
add
adc
mov
mov
or
lea
call
shrb
ret
or
loope
std
sarl
rcr
cmp
pop
in
iret
fdivrs
lret
inc
lock
push
or
xchg
bound
sbb
inc
test
xor
adc
xor
notl
jecxz
out
rorb
adc
mov
ds
xor
cwtl
sub
adcb
js
xor
mov
ss
cmpsb
test
lods
mov
sbb
and
add
je
adc
sti
sub
rcr
fdivl
mov
out
lahf
ss
iret
ret
add
jno
inc
cmp
pop
repnz
xchg
cld
pop
lods
fadds
adc
cmpsl
push
in
push
js
imul
cmp
jae
mov
test
rol
into
sbb
cmpsb
xchg
data16
data16
sbbb
test
out
pop
xchg
loope
cmpsl
and
ret
ret
in
jae
mov
mov
xor
inc
fcmovnu
sbb
add
imul
inc
jge
lret
imul
fdivs
push
icebp
add
inc
add
bound
pusha
jns
mov
int3
stos
mov
push
psllw
cltd
dec
inc
cmp
mov
nop
aad
outsl
dec
fnstcw
fbld
test
pop
sbb
push
ja
sub
sbb
gs
mov
dec
mov
lock
push
add
and
fnstcw
lret
stos
lods
hlt
pop
lahf
inc
xor
cwtl
push
pop
dec
enter
inc
pop
push
js
xchg
pusha
pusha
cmp
sbb
dec
mov
add
and
lcall
or
xchg
cmc
test
push
fnstcw
imul
cwtl
push
stos
cmp
cmp
out
dec
sahf
hlt
pop
ret
sbb
rclb
sar
ret
sub
call
dec
cmc
sbb
mov
mov
dec
add
xor
push
sub
cmc
push
mov
lahf
mov
xchg
mov
and
fistps
sub
pop
cmp
cld
sub
pusha
out
push
adc
jge
push
xchg
pop
adc
xchg
aam
lea
pusha
inc
ljmp
pop
inc
dec
out
sbb
mov
inc
aam
pushf
sub
test
imul
mov
inc
inc
xchg
fisubrs
add
call
std
in
mov
out
loopne
sub
jns
scas
push
adc
divb
sub
and
ror
ja
push
jg
xor
loopne
ja
adc
jmp
add
inc
dec
andb
cs
icebp
adc
les
add
add
xor
mov
jb
lret
pusha
les
mov
mov
or
pop
scas
inc
cmc
imul
xchg
sub
fcmovbe
sub
imul
cmp
mov
cld
inc
test
std
cmp
adc
arpl
mov
cli
pop
sub
stos
cmp
fcoms
or
imul
push
pop
in
fdivrl
les
je
add
push
lret
dec
fs
iret
xor
mov
nop
sahf
pop
or
mov
ret
into
repnz
addr16
dec
movsb
mov
pusha
pop
or
jo
xor
inc
mov
xchg
imul
dec
dec
jp
shrb
inc
inc
cmc
ficoml
sahf
rcrl
add
or
insb
std
push
sub
cmp
insl
adc
dec
jge
sbb
xchg
add
fsubr
scas
in
das
push
test
inc
andl
xchg
cmp
mul
popf
inc
gs
inc
sahf
aas
je
fldenv
es
add
inc
nop
mov
or
fnstsw
lahf
sub
enter
movl
hlt
data16
pushf
shr
pushf
lock
bnd
inc
imul
das
ja
fsts
push
addr16
lret
imul
dec
decl
xchg
pop
inc
fdivr
repz
sbb
pusha
jno
les
adc
add
repz
es
fiaddl
int
inc
adc
aas
pop
add
out
stc
jno
stos
inc
mov
out
mov
repz
pop
fsubp
add
rcrl
push
cmp
leave
out
mov
clc
push
push
and
mov
cli
cwtl
cmp
imul
repz
xchg
pushl
stos
sti
sarb
pop
insb
mov
inc
adc
ja
mov
aas
mov
movb
cs
cmpb
pop
imul
dec
lea
sub
mov
mov
pop
jg
add
mov
xchg
pop
inc
or
ss
shll
test
imul
icebp
je
shrl
dec
clc
push
test
add
insl
lcall
pop
insb
clc
xor
sub
add
std
mov
mov
jg
fnstcw
lods
cmp
test
xchg
inc
adcl
cld
lcall
rcr
mov
xor
sub
mov
sub
fdivl
enter
cmp
adcb
stos
add
stos
ljmp
in
sbb
lahf
pop
test
pop
in
hlt
push
xchg
int3
pop
and
fsubrs
push
out
scas
sarl
sub
add
cs
imul
fistpl
sbb
push
lock
ja
xor
stos
inc
imul
or
dec
mov
mov
adc
push
pop
sub
enter
gs
in
mov
nop
loope
enter
dec
out
clc
push
mov
ret
inc
pop
stc
leave
dec
cmp
in
mov
and
jmp
mov
cmpsl
int
pushf
mov
arpl
lods
addb
daa
mov
xchg
mov
in
adc
in
xchg
cli
mov
lcall
mov
jae
pop
iret
sbb
fiadds
inc
fisttpl
iret
add
cs
dec
xchg
jno
hlt
pop
pop
or
xchg
sbb
out
ss
int
xor
outsl
loopne
mov
stos
inc
ret
or
add
pop
xor
xchg
mov
cli
dec
stos
pushf
and
enter
repnz
movl
adc
inc
push
and
jp
ret
jae
mov
mov
mov
int
nop
gs
inc
mov
test
pop
xchg
push
shrb
ja
xchg
mov
fnstenv
cltd
movsb
add
dec
mov
aaa
js
dec
push
lret
adcb
or
sub
ret
cmp
out
xor
dec
sub
add
lret
lock
xchg
fcomps
test
insb
pop
sbb
mov
pop
lahf
fwait
ljmp
orl
bound
mov
sub
pop
clc
pop
xchg
mov
cmp
pop
adc
mov
sbb
fs
mov
outsl
scas
jns
nop
pop
flds
push
sbb
cmc
test
adcb
push
in
ret
scas
pop
dec
or
adc
push
xor
test
push
fmuls
jp
sarb
ds
push
push
negb
int3
cmc
pop
das
jns
and
push
push
call
inc
rcll
inc
cwtl
dec
ret
mov
dec
test
push
ss
out
mov
stos
xchg
cwtl
add
js
fs
cmp
scas
cmpsb
popf
ja
pop
addr16
test
push
dec
sbb
fcmovb
and
lock
xor
push
xchg
dec
xchg
dec
in
aam
adc
mov
fisubl
and
and
nop
adc
call
xchg
inc
pop
ss
hlt
aaa
and
fcomi
xchg
addb
dec
jge
sbb
enter
lcall
scas
stos
stos
sbb
pop
aad
jge
mov
cmp
cmpsb
neg
insl
pushf
insl
fbstp
jmp
add
jbe
or
jnp
add
push
cmp
dec
sti
shll
jge
sub
adc
lret
ljmp
jno
xor
xchg
push
dec
test
out
nop
cmp
xor
stos
test
stos
mov
in
scas
shr
test
popa
xchg
cmp
sbb
mov
pop
inc
mov
out
xor
jae
xchg
cltd
test
adcb
ds
lahf
mov
jl
aas
loope
ds
cmp
repz
loop
sub
push
mov
inc
mov
fnstsw
dec
cmpsl
mov
jb
xor
repz
and
mov
mov
pop
les
inc
cwtl
sbb
pushf
jg
int
add
xchg
dec
pop
push
add
fildll
mov
xor
cs
jmp
test
jg
ja
arpl
insb
adc
or
aas
xor
notl
mov
cmpsb
aad
and
push
adc
roll
stc
pmaddwd
sbbb
jle
call
jne
shr
shll
in
cmp
xchg
cmp
or
cld
or
test
lret
adc
lods
aam
push
test
jno
mov
xor
loope
les
mov
es
aam
popa
mov
pop
popa
adc
je
adc
mov
or
popa
fcmovu
out
mov
aam
inc
mov
push
or
mov
call
or
mov
cltd
mov
add
out
jl
shlb
enter
sbb
mov
ss
aas
fdivrl
rcr
xor
in
arpl
movsl
push
jmp
daa
sbb
hlt
orb
je
repnz
and
test
xor
mov
cmp
mov
movsb
mov
orl
inc
push
pop
push
loopne
xlat
pop
es
jp
sbb
rclb
sub
shrl
mov
lods
push
pop
sub
js
jge
out
and
sbb
sbb
hlt
dec
sti
xor
mov
sub
jne
or
inc
xor
adc
mov
test
negl
pop
mov
cmpsl
fxch
cmp
dec
jg
nop
enter
and
mov
sub
mov
cwtl
adc
aad
sbb
add
add
cld
dec
dec
ja
adc
fistpll
jle
inc
dec
sbb
gs
mov
inc
inc
add
push
popaw
cmp
stc
pusha
cmc
sti
ds
xor
shlb
fdivs
push
aam
cmpsl
gs
cmpsl
addl
cmp
mov
mov
jo
mov
enter
outsl
jmp
imul
stc
inc
pop
je
adc
imul
mov
and
data16
sbb
push
jmp
shlb
and
mov
pop
mov
mov
pop
fisubrs
push
add
dec
andb
out
nop
mov
mov
jo
pop
loope
pop
mov
movsl
dec
pusha
out
sub
repnz
lret
lock
dec
mov
insb
out
jns
into
vpsubusb
dec
push
cli
inc
stos
mov
ljmp
dec
mov
pusha
cmp
add
mov
in
add
dec
jno
ret
repz
out
cmp
stc
stos
push
mov
jecxz
xor
aas
ret
popf
push
cli
add
xor
ja
testb
ja
mov
and
ret
movsl
aaa
ds
dec
and
imul
mov
mov
xchg
dec
lea
iret
and
ss
or
cmpsb
add
mov
lock
pop
push
in
jae
and
jmp
jmp
sub
clc
lds
inc
adc
je
retw
dec
or
mov
sti
jmp
addl
fimuls
dec
add
adc
inc
jb
dec
pop
dec
sar
mov
xchg
lock
rcll
pop
test
outsb
icebp
adc
mov
cmp
and
xchg
in
shrb
or
leave
adc
cs
fucomp
mov
sbb
sbb
lods
and
jno
imul
xor
aad
psllw
push
and
sbb
cmpsl
arpl
leave
inc
and
adc
pusha
mov
sbb
rorb
cld
outsl
jmp
push
mov
fidivl
repz
jg
mov
popf
cmpsb
dec
cltd
testl
xchg
or
rolb
iret
sarb
scas
add
daa
lods
sbb
imul
sbb
sahf
in
cld
pop
aam
lahf
hlt
or
and
jne
enter
dec
push
dec
out
enter
aaa
jecxz
aam
or
xchg
mov
inc
aas
pop
aaa
inc
cmp
outsb
push
push
inc
jg
gs
movsl
fsubrp
xchg
ret
jecxz
movl
insl
orb
lods
mov
loope
imul
sbb
cli
inc
inc
int
cmp
add
addl
mov
sbbb
out
xchg
movsl
pop
dec
test
cmp
push
fwait
out
loope
lcall
cli
mov
push
fldcw
addr16
push
jae
add
and
sarl
push
mov
ja
adc
push
dec
pop
mov
popa
add
mov
jp
int3
cmp
mov
ljmp
mov
inc
push
popf
inc
outsb
xor
cld
imul
pop
imul
pop
add
pop
xchg
mov
daa
adc
add
into
push
subl
cmc
sub
and
mov
mov
imul
push
rcrb
aad
mov
mov
pushf
lret
xchg
cmpl
xchg
and
jl
in
stc
jnp
cmp
mov
imul
pop
es
mov
xchg
unpcklps
sahf
mov
out
cmp
lock
jg
dec
push
shlb
std
jle
mov
fbld
in
or
mov
sti
out
xchg
adc
das
or
pop
xchg
jl
jb
jno
or
xchg
out
mov
adc
test
adc
insb
xor
cld
iret
adc
add
push
cmpsl
and
xchg
pop
adc
sub
xor
dec
enter
imul
fwait
xor
orl
filds
sub
int3
add
mov
mov
loope
test
mov
jl
add
adc
push
aas
inc
out
lcall
mov
xor
in
pop
push
pop
lods
jae
dec
jne
pop
movsb
mov
add
lcall
add
push
cmpsb
inc
adc
shr
mov
and
jmp
sub
movsl
into
popf
jge
stos
and
fldl
mov
push
adc
out
lods
jg
xor
outsb
mov
xor
lods
out
jb
aad
push
aaa
or
sahf
int3
and
cmc
mov
or
leave
mov
outsb
mov
in
sub
loop
xor
dec
mov
shl
dec
mov
test
dec
jl
lods
push
lcall
sub
xlat
dec
cmp
cmpl
in
push
jno
dec
dec
or
mov
mov
xchg
bswap
clc
insb
divb
mov
inc
push
jg
int3
out
or
jno
or
pop
mov
and
adc
and
lods
push
push
mov
mov
sbb
lret
cmp
out
orb
jle
xchg
icebp
pop
movsl
ret
pop
repnz
ret
aam
sbb
sub
lods
insb
mov
outsb
add
pop
lds
add
mov
data16
imul
rcrb
sbb
jmp
pop
dec
pop
in
jb
ljmp
pusha
sti
aam
jnp
xchg
mov
mov
sbb
aas
sahf
and
stos
mulb
movsl
push
push
cmp
push
cmp
inc
pusha
adc
xor
rorl
stc
movsb
stos
arpl
andl
cmpsl
and
mov
dec
push
sarb
daa
push
cs
test
movsl
in
adc
jmp
xchg
gs
negl
mov
imul
jge
out
rcrb
cmc
cld
out
enter
push
sbb
mov
repz
sub
jno
jb
mulps
lcall
and
mov
add
aam
enter
push
js
xchg
sbb
rol
enter
jmp
cltd
imul
arpl
add
lret
inc
jb
sti
call
lock
icebp
cmp
mov
mov
adc
scas
insb
pop
push
xor
lcall
popa
aam
scas
loopne
out
les
rcl
popa
inc
jecxz
sarb
scas
daa
xor
dec
divl
gs
pushf
sar
out
flds
pop
mov
dec
cmp
mov
adc
cmp
mov
mov
fs
cmp
jg
scas
jge
pop
setb
fnstsw
lods
mov
test
adcl
push
fidivrs
pop
mov
iret
push
or
cmp
clc
add
cs
outsl
cltd
std
repz
add
js
jmp
mov
lds
in
jecxz
inc
lock
repnz
test
fs
push
lahf
call
lret
mov
inc
in
mov
lea
aam
movsb
cwtl
jp
or
jg
add
pop
lcall
arpl
shl
scas
popa
stc
scas
orl
mov
inc
and
sbb
adc
fcmovne
and
nop
xor
mov
adc
ss
ret
insl
jae
xchg
sub
pushl
xchg
leave
sbb
mov
mov
fisubrs
sahf
dec
adc
fisubs
push
rcrl
sbb
ljmp
dec
adc
das
pushf
push
xchg
sbb
pop
push
or
fmul
stos
push
mov
std
cmp
das
hlt
popa
std
inc
or
mov
arpl
push
pop
mov
popf
stos
and
pop
lret
mov
inc
cmpsb
ret
xor
enter
adc
inc
pop
adc
cltd
es
mov
repz
sahf
decl
jl
mov
jge
jo
jmp
push
test
add
loope
adc
sub
and
inc
ljmp
cld
cmpsl
push
lret
fucomp
mov
push
add
sbb
insl
mov
shll
movsb
pop
in
sub
lret
or
jbe
into
stos
dec
push
arpl
fs
pop
lret
jo
fsubl
stos
ret
mov
out
cmp
or
cwtl
dec
stos
fwait
insl
sub
rcr
shlb
lds
lret
mov
ja
in
lret
cmp
arpl
nop
pop
insl
xchg
xchg
push
sbb
xchg
pop
push
loope
std
mov
dec
push
mov
jbe
and
adc
mov
sbb
jo
mov
push
or
shr
imul
push
pop
das
imul
iret
test
or
pop
rcrl
add
xor
movsb
jo
out
ds
jmp
data16
inc
add
sbb
and
test
ja
iret
enter
inc
dec
mov
mov
xor
ja
xchg
mov
adc
rorl
lea
dec
push
lock
fwait
lahf
in
lret
sbb
inc
rcr
lret
mov
inc
lds
pushf
out
inc
sbb
test
inc
add
mov
aas
pop
mov
stc
adc
daa
lods
dec
xor
jnp
imul
fnsave
dec
cmpsb
push
xlat
dec
outsb
xchg
shll
std
or
ss
inc
jb
lds
aad
xor
jmp
test
int
clc
stc
sbb
jmp
es
xor
cmp
pushl
pop
jg
fs
and
addl
inc
inc
mov
add
push
scas
xchg
addl
dec
push
loopne
fdivp
mov
push
jno
adc
jbe
std
xchg
je
jmp
pop
mov
sub
ss
outsb
sbb
push
cmpsl
shll
cltd
pop
mov
icebp
mov
sub
jo
inc
outsb
rcl
and
lods
fdivrl
sahf
fistps
inc
dec
pop
mov
cmpsb
ljmp
jmp
push
enter
fbld
movsl
adc
add
pushf
cmp
mov
add
jns
int3
xchg
inc
cmp
fs
inc
clc
adc
and
xor
mov
aam
fists
lret
inc
scas
mov
daa
in
int
or
jecxz
sbb
jecxz
cs
hlt
inc
or
push
mov
mov
setp
and
cmp
pop
sti
and
push
inc
and
and
dec
cmp
push
xor
lods
jg
adc
cmp
faddl
ret
repz
lods
mov
dec
sub
cmpsl
js
loop
jbe
jle
movsb
mov
fs
sub
push
cld
sub
cld
js
sbb
dec
inc
push
outsb
subb
lock
call
dec
in
jp
mov
ret
pop
in
scas
out
aaa
fistpl
rcll
imul
lods
in
and
cmp
ret
gs
pop
sbb
je
pop
mov
cmp
cmp
loopne
mov
out
add
jecxz
hlt
stos
mov
xor
scas
push
ljmp
das
popa
inc
dec
data16
repz
sahf
fisubrs
dec
lret
call
insl
sub
adc
xor
xchg
cmc
loop
sbb
imul
inc
pop
insl
cmp
stos
inc
xor
or
xchg
fistpl
popa
imul
in
shrl
add
add
aad
loop
pop
into
lahf
jl
xor
xchg
xor
mov
mov
add
shlb
rcll
ret
sbb
fsubr
sarb
mov
pop
dec
outsl
sarl
xchg
fadd
mov
mov
cmp
jbe
xchg
int3
push
sub
or
pop
mov
es
rorl
dec
xchg
or
sub
call
adc
dec
cmp
insl
xorl
dec
xchg
pop
fsts
ja
stos
scas
aaa
pushf
mov
or
movsb
mov
int3
mov
addr16
xchg
imul
xchg
in
pop
fldt
sbb
popf
std
je
xchg
pop
lods
and
out
in
mov
aad
outsb
dec
movsl
test
and
fs
cmpsb
ficompl
cltd
adc
or
sub
sbb
mov
pop
mov
repnz
ljmp
add
pop
mov
shl
loop
pop
mov
xor
xchg
ficoml
aam
jg
lds
sub
lods
call
and
out
cs
xchg
mov
mov
push
add
imul
mov
enter
jmp
jmp
cmp
es
xlat
fsubs
sbb
adc
mov
jb
clc
cmc
dec
pop
rcr
mov
sahf
out
mov
push
mov
fidivs
jo
cmp
es
pop
loope
aad
fstpt
push
add
fst
fisttps
data16
adc
in
data16
loop
jp
add
gs
loop
mov
jb
cld
mov
lods
and
mov
xor
int
jae
jbe
decb
shll
outsb
pop
ret
add
push
dec
fisttps
inc
movsl
ret
scas
fists
cmp
addl
inc
adc
rol
sbbb
cmpsb
popa
ror
addr16
outsl
popa
jnp
xtest
nop
dec
pop
xchg
inc
jp
pop
lahf
cltd
push
sub
xchg
mov
cmpsb
sub
mov
xchg
cltd
lahf
mov
cld
insb
fxch
jnp
jns
xor
adc
lds
dec
es
fnsave
xcrypt-ecb
cmpsl
bswap
inc
fs
out
daa
stos
adc
es
mov
adc
fbstp
pusha
inc
aaa
mov
jg
cmp
fisubs
push
inc
lods
cmp
and
or
xchg
jb
push
jnp
hlt
outsl
iret
aam
mov
out
jl
and
adc
jl
sub
fldcw
es
and
icebp
adcb
pop
adc
jo
jge
icebp
and
movb
dec
xor
jae
adc
jne
mov
pop
xor
xor
imul
mov
xor
xchg
fcoml
inc
dec
xor
jbe
dec
loopne
adc
mov
cmp
cli
pop
pop
ss
push
mov
loopne
mov
subb
js
mov
lret
xor
xchg
repz
xor
lret
push
push
jb
sbb
icebp
dec
arpl
jb
cmp
inc
hlt
xor
outsl
add
les
jne
movsb
das
xor
ja
pop
out
jl
ds
dec
or
aaa
mov
lahf
adc
add
xchg
sbb
cmpsb
cmp
outsl
cmpsl
jge
push
int
add
sub
pop
outsl
gs
push
or
data16
push
xchg
cmp
push
mov
push
xchg
std
pop
xor
ret
push
push
cmp
fistpl
mov
ljmp
inc
pop
cli
fistl
add
mulb
pop
xchg
sub
mov
shlb
dec
ficompl
jns
push
imul
cmpsb
dec
jl
imul
inc
lret
sub
rorl
cmp
xor
or
sbb
dec
notb
test
cld
out
ss
pop
jge
dec
loop
push
addb
bound
cmpsb
loop
insl
scas
jl
test
loopne
xor
xchg
xor
sahf
pop
adc
int3
shrb
cmpb
pop
lahf
gs
movsl
or
mov
sti
cmp
mov
push
pop
mov
cmpb
or
sti
shll
into
xor
xchg
or
cmp
inc
push
pusha
push
lcall
or
ret
jecxz
and
mov
and
pop
in
push
jge
faddp
mov
add
inc
in
pop
push
ds
jl
iret
adc
sub
enter
jp
out
je
adc
pop
sub
inc
mov
cmp
or
dec
xchg
pop
insb
xchg
subb
stc
aaa
je
inc
fwait
add
xchg
jb
fisttpll
sbb
imul
sub
mov
cmpl
cli
lret
cltd
data16
divl
xor
sbbb
mov
jg
mov
add
adc
aad
dec
mov
cmp
fisubl
adc
leave
into
cld
xchg
shlb
lods
push
sbb
and
jl
addr16
mov
sti
dec
loope
or
in
pusha
cs
ss
scas
lods
int
mov
jge
and
cli
sub
mov
mov
inc
mov
stos
lods
push
jb
pop
cmc
adc
int3
ret
out
js
add
add
mov
movsl
daa
push
ja
jno
jno
nop
inc
in
stc
and
jae
xor
dec
scas
and
ja
aaa
lret
call
aad
push
iret
sar
loop
xchg
dec
sub
add
dec
fs
pop
push
xchg
or
or
icebp
push
fwait
jmp
pusha
aad
mov
sub
fmul
mov
ja
adc
rcrl
ret
stc
mov
inc
jno
push
fsubs
push
mov
jg
add
sub
addl
clc
dec
shl
mov
in
jno
cmp
dec
aaa
repnz
add
aad
rorb
push
stos
mov
jns
push
push
insl
addr16
es
push
enter
cmp
sbb
pop
aad
les
outsb
xchg
outsb
hlt
xchg
pop
pop
notl
dec
shl
mov
int3
sti
push
jo
or
sub
jae
gs
cmc
jle
fs
ja
sbb
mov
mov
lods
inc
push
gs
adc
push
jae
sub
dec
imul
pop
sbb
test
pop
mov
inc
cmpsl
mov
mov
cmpsl
int3
daa
pop
mov
test
add
lods
mov
push
lea
adc
adc
outsl
in
test
jno
bnd
divb
sub
fdivrl
rcr
dec
lret
imul
pop
shl
dec
cmp
mov
or
int3
ja
repnz
xor
int
loope
dec
inc
pusha
testb
out
pop
loop
sbb
fimull
gs
andb
or
lret
push
mov
das
inc
in
popf
in
cmp
ljmp
ret
dec
roll
rorl
mov
sub
sub
jl
pop
push
lods
adc
lret
adc
loope
jge
mov
insl
inc
jp
je
dec
jp
stos
dec
mov
mov
sub
jb
loopne
add
sahf
addl
pop
fiadds
notb
test
lock
js
inc
cs
cmc
icebp
iret
and
ret
popf
cmp
add
std
repnz
sub
in
push
repnz
testl
bt
mov
rolb
enter
dec
add
out
push
fadds
inc
xchg
in
shlb
test
sub
in
cmp
or
push
adc
and
rorl
pop
fistpl
nop
mov
cmp
stos
inc
inc
loop
dec
inc
cld
movsb
push
push
cwtl
cmpsb
cwtl
outsb
jo
iret
popf
dec
adc
xor
push
mov
and
lods
das
mov
pop
sbb
movsb
inc
in
xor
sbb
cmp
or
mov
pop
inc
and
inc
popl
jle
and
aad
xor
push
mov
jge
push
lea
cmpsl
jecxz
stc
adcb
pop
cmpsb
out
ja
rcll
xchg
rorl
mov
push
xchg
daa
fstp
adc
sbb
push
mov
mov
or
and
inc
gs
sub
int3
and
sbb
adc
jo
adc
lret
sbb
mov
adc
or
pop
ret
or
sub
push
aas
cmp
jge
lret
ss
clc
call
test
push
pop
xlat
in
dec
inc
arpl
xor
sbb
mov
push
movsl
mov
adc
add
pop
jl
cli
inc
fisttpl
lods
stos
out
or
add
es
shlb
aaa
mov
xor
mov
outsb
stos
push
out
movsb
adc
mov
mov
jb
pusha
dec
push
aaa
xor
push
repz
js
fwait
mov
inc
dec
add
sub
sbb
sbb
push
push
add
mov
nop
das
fildl
aad
xchg
and
mov
popf
add
xchg
xlat
les
and
arpl
dec
fbld
inc
push
pop
mov
shlb
stc
rcll
and
sahf
push
mov
gs
pusha
cmpsl
adc
sbb
adc
cmp
pushf
fwait
stc
add
sti
sti
aad
test
pusha
ja
lahf
sti
xchg
aad
inc
imul
aam
xchg
sbb
mov
sub
lcall
stos
call
or
mov
jmp
sbb
mov
jge
sub
inc
cmp
mov
push
pop
mov
sbb
pushf
jg
push
dec
xor
xor
movsl
mov
cld
cmp
out
or
cmpb
push
dec
mov
rcrl
add
mov
jecxz
notb
addr16
push
rcrb
xchg
not
cmpl
scas
aad
push
test
fs
xor
or
cltd
sub
inc
ss
or
or
icebp
cwtl
pop
add
inc
mov
lret
sub
daa
stos
push
mov
jmp
cltd
lea
pushf
ja
shlb
shufps
inc
mov
sbb
add
push
neg
mov
push
xor
lahf
mov
cmp
jo
xchg
stc
adc
mov
mov
mov
sbb
scas
ret
xchg
xchg
jns
test
xchg
test
lods
jle
mov
xchg
je
stos
test
dec
movsl
test
sub
mov
in
jl
cs
xchg
jno
jnp
or
mov
push
jmp
xchg
pop
outsl
pop
push
movsl
mov
inc
adc
xchg
xlat
call
mulb
jecxz
mov
push
jl
sbb
xchg
in
clc
in
iret
lea
aam
in
and
pop
addl
jle
mov
xchg
ds
push
xor
je
cs
mov
in
inc
mov
and
xor
add
cmc
popf
dec
cld
out
sub
call
aaa
in
mov
out
mov
out
xchg
daa
dec
loop
jg
mov
inc
int3
xlat
scas
sbb
push
fisubrl
cmc
push
sbb
jmp
sbb
mov
fdiv
js
adc
adc
or
cmc
push
cli
xor
lods
and
movl
mov
mov
adc
pop
inc
cmp
insb
ds
add
lock
mov
mov
jb
lock
imul
dec
pop
daa
push
pop
daa
shlb
stos
adc
mov
mov
loop
jmp
fwait
push
addr16
xchg
adc
xchg
cmpb
sub
cmp
clc
icebp
aam
lahf
jle
movsb
out
arpl
xlat
in
mov
faddl
dec
mov
adc
repnz
mov
mov
push
aad
mov
and
arpl
cmp
add
leave
arpl
mov
ljmp
loope
mov
adc
or
mov
repnz
mov
notl
outsb
xor
sbb
es
pushf
loop
sbb
jp
jecxz
rcr
cmp
imull
add
or
pop
jle
scas
mov
sub
cmp
jmp
pop
jnp
push
pop
mov
imul
mov
and
insl
fmul
lea
pop
rcrb
cmc
xchg
bound
je
popa
int3
addr16
xchg
stos
je
pop
jb
lds
scas
popf
jecxz
inc
insl
aam
or
lods
sbb
nop
or
adc
cmp
dec
add
xchg
mov
scas
repnz
fisttpll
push
push
insl
sub
imul
lea
dec
inc
sbb
bound
dec
mov
stos
adc
jbe
dec
sub
mov
jmp
jg
xor
scas
push
or
xchg
inc
pusha
loope
pushf
cmp
xchg
mov
lea
neg
in
push
movsl
stos
cmp
mov
lods
test
leave
mov
add
sarb
and
mov
add
popf
cmp
cmp
push
xchg
repnz
pop
dec
stos
test
adc
sbb
pop
add
fldcw
out
ds
movsb
cmpsb
sub
jno
xor
xor
ss
out
push
fwait
lcall
mov
imul
test
pop
mov
outsl
cmp
push
push
pop
mov
leave
sahf
mov
imul
add
fwait
pmaxub
pop
insb
mov
xchg
mov
repz
sbb
nop
pop
pop
ds
test
in
mov
rorb
sub
dec
mov
xchg
ds
lods
push
push
pop
adc
push
in
fstpl
mov
repz
dec
add
cmp
in
dec
js
fimuls
adc
pushf
xchg
fwait
out
jnp
xchg
inc
fbstp
push
lret
cmp
sbb
push
cmp
dec
jg,pn
in
inc
gs
jnp
push
push
adc
aas
push
dec
ja
arpl
adc
jg
xor
les
jnp
push
mov
dec
imul
xchg
sub
mov
add
jne
clc
and
daa
repz
in
sub
push
jno
cli
call
dec
cs
xchg
push
pop
xchg
popf
mov
jle
or
or
xlat
vdivss
pop
out
xchg
dec
in
sub
mov
cmp
pop
push
push
mov
movsl
ja
popa
adc
cmpsl
mov
dec
push
rorb
mov
sub
lock
rorb
or
fdivrp
lahf
jl
fs
mov
stos
mov
test
out
jg
mov
pop
call
popf
test
mov
lds
int3
mov
dec
mov
sahf
pop
dec
dec
cmc
jns
push
and
inc
int3
xchg
cmp
xor
lret
hlt
mov
or
popa
cwtl
jae
sub
or
rolb
icebp
xchg
push
fdivrs
sbb
rcrb
sti
and
test
cmc
popl
mov
gs
imul
popf
xchg
cs
dec
cmpsl
mov
insl
out
subb
aas
lcall
popf
loope
cmp
dec
outsb
mov
std
dec
sbb
out
cmc
adc
data16
out
adc
pop
test
ss
das
sbb
dec
stos
sbbb
inc
outsb
cmpsb
push
filds
inc
fbld
imul
xchg
pop
inc
dec
les
movsl
and
bound
imul
cld
and
repz
sub
mov
mov
sbb
inc
imul
cmp
push
aas
fwait
jnp
ret
add
push
fwait
imul
add
loope
pop
aaa
jo
or
adc
sbb
jp
jne
aaa
mov
imulb
cli
mov
mov
sbb
sti
lahf
ss
xlat
mov
mull
cwtl
notb
adc
jp
sti
dec
in
test
xchg
adc
jno
fst
dec
lds
jle
fs
mul
jge
push
sbb
loopne
je
ja
mov
lea
push
or
pop
push
pop
xchg
shlb
inc
inc
cmp
push
faddl
ss
jns
and
sbb
rcr
jne
xor
fisubrl
aam
lcall
xchg
scas
jmp
cmp
js
in
jbe
cld
mov
push
and
sti
das
inc
sub
xlat
aas
fisttpl
sub
mov
jnp
jo
add
inc
xor
dec
push
push
add
dec
mov
inc
imul
push
iret
shlb
imul
cltd
sub
mov
xchg
sti
sbb
add
inc
scas
sbb
push
push
mov
sbb
pop
fsubr
fscale
movsl
inc
xor
ds
subb
push
cld
jae
mov
push
dec
scas
stc
sbb
dec
stos
cmc
rorl
mov
dec
call
sub
popa
fcmovne
xchg
sbb
adc
cmp
sbb
popa
add
push
push
or
clc
xlat
mov
cwtl
jp,pt
mov
sub
loop
lock
dec
push
ficoms
cmp
and
xlat
xchg
mov
fcmovnu
inc
movsb
xchg
inc
sub
mov
pop
sbb
pop
js
in
inc
test
rep
mov
and
xchg
test
aas
ds
push
pop
fucomip
inc
adc
das
xor
clc
adc
mov
stos
xchg
inc
inc
mov
fldl
mov
and
xor
loop
push
andl
adc
adc
mov
ljmp
sbb
push
dec
jno
dec
xor
popa
jle
call
cmpb
push
aaa
and
push
or
xor
sbbb
call
daa
rol
mov
push
lods
push
loope
adc
sub
inc
sub
mov
fiadds
imul
movsb
fdiv
in
xchg
insb
iret
test
xchg
ret
cltd
aaa
insb
sub
pop
add
dec
out
push
add
sbb
cmpsl
pusha
adc
dec
cmp
mov
fwait
adc
addr16
jg
sti
scas
js
xchg
roll
dec
stc
sub
or
test
xchg
xor
call
mov
pop
addl
jno
das
sbb
cmp
sarl
scas
mov
sub
cwtl
movsl
cltd
test
aaa
jecxz
out
shll
cld
add
mov
mov
pop
in
ss
inc
xor
sub
pop
ret
and
push
es
or
sub
pop
pusha
js
pop
or
test
repnz
movsb
push
cld
mov
fcoml
and
ds
adc
mulb
popf
pop
leave
pop
adc
push
pop
or
nop
out
jbe
insb
xor
sub
xchg
xchg
jne
cmp
mov
lahf
pusha
rol
out
loope
mov
test
pop
dec
adc
mov
adc
sarl
push
xchg
adcb
xor
dec
cltd
movsb
dec
test
inc
push
dec
loop
jmp
adc
sbb
push
cltd
add
rcll
and
add
iret
fcomi
aaa
std
jg
sub
inc
stos
sbb
or
iret
hlt
xor
push
pusha
mov
jae
loop
mov
xchg
fcompl
pop
pop
cmp
int3
inc
rcl
jnp
sbbl
jae
push
test
clc
jns
test
psubq
not
into
push
xchg
mov
adc
ss
inc
ret
sub
addl
pushf
sarb
lret
out
inc
popa
mov
inc
shl
popa
aad
subl
pop
xor
xor
inc
call
xchg
pushf
pop
cmp
pop
jmp
stos
outsb
aas
enter
pop
pop
lret
adc
jns
lcall
xchg
jnp
hlt
mull
js
loop
push
stos
loope
pop
cs
lds
popa
leave
shrb
addb
mov
daa
lods
icebp
mov
mov
fwait
inc
jl
js
pop
fs
xchg
out
and
call
and
sbb
mov
shr
cld
in
stos
xchg
xor
imul
and
xor
inc
mov
sarl
mov
or
fimull
fistpll
test
in
aas
xor
bound
aad
jb
repnz
mov
jl
mov
mov
cmc
sub
aad
jge
and
ret
ret
cwtl
movsb
dec
push
push
cltd
inc
insb
sti
stos
cmovl
dec
sahf
jno
and
xchg
mov
push
jmp
lea
testl
mov
cwtl
push
sti
in
jl
push
hlt
push
adc
sti
inc
aam
sbb
dec
and
scas
jmp
rcll
mov
mov
mov
xchg
pop
lock
fildl
lret
or
aas
mov
adc
vandnps
adc
cmp
popf
sub
adc
mov
xchg
xchg
sbb
rol
popa
sub
xchg
adc
call
mov
xlat
pop
mov
imull
and
mov
fistpl
push
xchg
stos
mov
aaa
mov
clc
wrmsr
gs
sbb
out
xchg
jnp
fsubrs
sarl
ja
sub
popf
and
xchg
mov
cld
inc
mov
mov
fildll
fcmovne
ss
mov
mov
cwtl
aam
sub
push
jle
push
cmpsb
xor
jle
ss
or
sahf
adc
sbb
xor
xchg
fs
sbb
jae
aaa
loope
notb
cmpsl
jmp
daa
movsb
fcompl
shl
sarl
cmc
icebp
push
or
fistps
sub
adc
sbb
imul
mov
iret
pop
bound
imul
pushf
std
jb
cmp
ja
cld
mov
mov
push
mov
dec
or
stos
sub
lds
push
or
inc
lods
push
xor
enter
jmp
mov
lock
pop
mov
jmp
scas
jne
push
push
or
mov
enter
push
mov
pop
pop
xchg
jge
aad
nop
mov
xlat
aam
outsl
mov
mov
fistl
cs
mov
adc
aaa
stos
adc
inc
adc
sbb
jb
rcrl
sbb
jnp
mov
jle
test
jge
xor
jo
sub
leave
pop
jae
adc
add
sub
jo
in
adc
xor
mov
subb
int3
mov
aas
add
push
sub
cmp
push
xchg
mov
jg
mulb
outsl
push
into
js
and
mov
sarb
nop
lock
pop
inc
out
loop
mov
in
ds
pop
popa
popa
lock
lahf
adc
push
xchg
mov
pop
sub
sbb
movsb
mov
lret
jp
bound
fwait
jne
in
inc
sub
mov
or
jno
mov
jp
ljmp
xchg
sbbb
mov
out
mov
inc
pop
insl
movsb
dec
push
js
jmp
pushl
les
pushf
dec
mov
loopne
mov
mov
jecxz
cs
mov
sub
xchg
lahf
lods
cmpb
inc
dec
bound
out
jne
adc
inc
sbb
dec
mov
decl
mov
inc
and
loopne
in
jecxz
jno
or
cs
inc
add
rolb
mov
test
push
fnstcw
sub
cmpsb
inc
fs
scas
push
es
jae
imul
mov
insl
add
fwait
outsl
out
sbb
das
fimull
shl
js
test
sti
xor
or
cmp
sahf
psrad
xchg
dec
xchg
divb
test
xor
cmp
ss
add
hlt
xchg
cmp
pop
fcmove
pop
rorb
jo
push
bound
in
xchg
cwtl
bound
jle
loopne
jecxz
mov
xchg
lret
xchg
pop
jg
jbe
in
push
lods
mov
dec
inc
mov
xchg
jbe
cmpsb
pop
add
sbb
enter
cmp
push
mov
fmuls
mov
pusha
adcl
dec
ss
mov
sbb
cmp
stos
fs
addb
add
inc
dec
in
mov
mov
xchg
icebp
dec
mov
xchg
mov
sbb
andl
mov
push
les
or
aaa
add
shll
shlb
and
gs
insl
mov
sbb
jo
mov
cmp
dec
loope
or
filds
xor
dec
cwtl
enter
pop
int
add
cwtl
sub
cltd
imul
sahf
and
std
sub
bound
out
stos
sub
mov
add
inc
mov
lret
dec
movsl
sub
push
je
jmp
jecxz
aam
mov
or
aaa
fptan
ss
movsl
imul
addb
pop
lret
adc
sbb
pop
iret
outsb
mov
mov
lret
or
pop
mov
mov
sbb
loop
xchg
cld
loop
fidivl
and
js
push
js
jl
push
add
ret
or
hlt
or
icebp
filds
xor
cmp
cmp
les
loop
xor
in
cmc
mov
loopne
mov
inc
xchg
inc
je
popf
addr16
xchg
in
gs
pop
lcall
in
movsl
and
cld
sbb
lock
iret
jmp
xchg
outsl
nop
loopne
mov
jae
mov
fwait
xchg
push
cmp
aam
in
adc
fdivrs
pop
dec
xor
fstps
adc
push
enter
int
and
movsb
dec
pop
cmc
xchg
xor
jle
aad
sbb
pop
inc
scas
or
enter
mov
xlat
rorb
push
mov
adc
xor
jb
das
inc
out
add
cmp
pop
sub
dec
mov
xchg
cmpsb
dec
push
mov
loopne
rcl
lods
xchg
jno
incl
fcoml
stos
adc
pop
cmpsb
adc
adc
xor
test
inc
and
in
lahf
and
popa
cmp
ds
cmpsb
rorb
and
xchg
loop
mov
lret
cmp
mov
adc
subb
sbb
cmp
std
cmp
xchg
cmp
mov
xchg
inc
add
bound
sahf
ljmp
sbb
jno
std
sub
stc
pop
nop
mov
adc
loope
ja
xchg
push
ljmp
test
or
bound
lret
and
mov
pushf
in
popa
cmp
add
jns
shr
sbb
pop
cmp
mov
mov
stos
cs
mov
dec
rcll
jo
ljmp
lock
fidivs
lock
pop
jne
xchg
mov
sub
adc
pop
jns
push
jnp
je
xchg
lahf
ss
sub
sti
adc
fidivl
test
fs
add
iret
shlb
dec
sbb
sbb
fmull
fcomp
mov
push
test
mov
sbb
mov
pop
and
je
and
clc
cmp
adc
push
sub
es
sbb
mov
xlat
jne
adcb
dec
or
repnz
sbb
push
ret
icebp
sbb
sub
xchg
stc
jle
cmp
xchg
push
inc
sarb
xchg
push
pop
cltd
cltd
sub
mov
adc
mov
dec
loopne
je
mov
arpl
imulb
gs
lock
inc
bound
pop
lods
mov
mov
mov
mov
and
pop
rclb
les
int3
loope
andb
xchg
std
sti
push
imul
fisttpl
pop
sub
cmp
lds
sub
adc
aam
adc
cli
loop
test
insb
outsl
enter
or
pop
ljmp
fucom
cwtl
leave
test
popf
mov
push
mov
test
xchg
out
lret
mov
push
pop
test
stos
les
cmp
out
test
pop
xchg
xchg
mov
out
sub
sbb
lret
jne
clc
sub
imull
xchg
cmp
sarb
mov
cwtl
sub
ss
xchg
jae
pushf
out
lods
inc
dec
mov
or
cmpsb
cmp
pop
mov
pop
adc
int
sti
cmp
xor
or
mov
mov
mov
and
imul
call
mov
adc
movsl
in
nop
fildl
pop
mov
fisubs
or
mov
pop
shll
dec
jbe
mov
paddsb
lods
dec
mov
daa
mov
js
aaa
mov
pop
cmp
or
pusha
dec
cli
jmp
xor
hlt
adc
mov
cmp
dec
repz
or
cmp
dec
jo
in
push
movsl
in
or
je
dec
add
mov
dec
jnp
stc
ss
xor
repz
adc
sbb
lea
mov
bound
cltd
push
mov
sub
scas
stos
jbe
filds
lahf
sbb
lods
cmpsb
sbb
orl
fstpt
cmc
lret
dec
or
out
daa
sbb
mov
and
out
add
test
mov
adc
dec
fidivrl
jmp
sub
inc
in
sbb
mov
shll
sahf
shlb
jge
shll
cmp
in
dec
test
cmpb
fdivrs
add
jb
lods
jo
lret
xchg
nop
mov
mov
pop
test
adc
ret
add
sbb
aad
in
idivl
inc
dec
in
addb
ss
mov
mov
iret
dec
xchg
xchg
roll
xchg
imul
insl
mov
jbe
sti
enter
dec
inc
les
cmpsb
mov
mov
mov
add
dec
push
jae
and
cmp
flds
pop
sub
dec
movsb
jne
in
and
xlat
shrl
fmull
cmpb
call
test
adc
cmc
xchg
cltd
orl
mov
fwait
and
mov
mov
mov
sub
mov
adc
pop
aam
loop
cmp
dec
xor
dec
in
push
movsl
and
pop
jmp
lock
add
inc
lret
push
push
xchg
mov
cmc
sub
pop
jp
enter
mov
clc
cmp
xor
iret
mov
popf
and
mov
sub
cmp
sbb
mov
mov
jmp
jecxz
sbb
loope
dec
popf
movsb
and
dec
mov
cmc
or
mulb
inc
daa
jne
mov
pop
shll
ret
dec
sbb
mov
xor
stc
aas
cmpsb
out
or
push
mov
jbe
dec
pop
ja
cmp
mov
sbb
xchg
and
ret
loopne
pop
add
mov
cmc
leave
outsb
imul
sub
and
cld
repz
rcrl
jnp
inc
lcall
test
jb
nop
cmpsb
dec
jnp
addr16
out
aas
sbb
push
add
cmp
rorl
add
pop
aam
fldenv
sub
ljmp
xor
sbbl
sbb
sub
adcl
mov
aam
push
repz
mov
mov
adc
mov
data16
stos
push
sub
mov
addr16
aaa
inc
cs
sub
pushf
xor
rcrb
inc
and
decb
adc
pop
dec
ss
cmp
push
sub
aaa
bound
pop
mov
sub
lock
sbb
sbb
push
cli
mov
mov
pusha
das
dec
lret
sub
sub
icebp
dec
inc
pushf
icebp
dec
cli
in
fnstsw
inc
push
cli
inc
mov
xchg
mov
push
jge
inc
lods
or
xor
shlb
lock
rclb
push
xchg
out
arpl
hlt
cmpsl
add
or
loop
mov
mov
in
out
sahf
inc
mov
inc
sub
sbb
das
jne
imul
les
lret
jge
sbb
mov
and
adc
mov
bound
cltd
data16
movsb
fldl
lea
aaa
cmp
lret
out
xor
hlt
jae
sbb
mov
mov
fucomp
push
inc
inc
ljmp
stc
mov
cmp
pop
jns
es
arpl
sub
insb
mov
outsb
je
ljmp
cli
subb
jl
and
loop
sub
sub
jecxz
mov
insl
sti
mov
into
xchg
into
in
lds
enter
orb
and
xchg
popa
ficompl
jge
sub
dec
pop
shlb
lcall
loope
stos
mov
sarl
movsb
inc
push
movsb
js
pop
cmp
jg
outsl
enter
jbe
pop
cmp
adc
lret
cmpb
aaa
push
cmp
ja
push
cmp
jle
imul
and
jno
sub
jmp
int
sub
idivl
bound
inc
push
repnz
pusha
adc
jecxz
repnz
mov
or
xor
cmpl
lock
stos
or
xor
mov
out
ja
jb
sahf
xchg
sbb
sarl
js
es
outsb
mov
mov
lods
pushf
int
sbb
orl
jbe
stc
into
xchg
ret
fiadds
les
daa
cmp
popf
jnp
test
mov
and
mov
pop
mov
insb
out
jbe
push
test
jne
pusha
arpl
jmp
rep
pop
stos
shlb
into
cli
add
mov
fldt
cmpsl
fld
xchg
mov
cmp
or
xchg
es
out
push
in
leave
dec
adc
movb
mov
and
out
or
testb
movsb
push
pop
add
push
lret
sbb
cmp
dec
dec
sub
mov
jns
and
scas
and
mov
cwtl
push
outsb
enter
mov
mov
jo
shll
and
mov
repnz
clc
cld
lods
lock
flds
cmpsl
aad
and
test
out
imul
xchg
int3
pop
mov
ret
xor
lret
inc
scas
sbb
clc
mov
int3
pop
cmpsb
mov
xor
mov
push
sub
stos
jo
fistpl
mov
decb
xlat
mov
add
fisttps
lds
xchg
inc
add
mov
cmpsl
cld
dec
sub
ljmp
or
cmpsl
dec
aaa
lods
jbe
add
and
inc
movsb
movsb
dec
mov
bound
jge
scas
lods
imul
sbb
insb
pop
jge
and
push
push
add
push
ret
shlb
xchg
adc
stos
add
adc
xchg
mov
and
jns
push
and
pop
cwtl
in
mov
test
mov
test
movsl
mov
mov
xor
cmpsb
push
repnz
inc
xor
cltd
fldenv
push
incl
adc
inc
jl
pop
xor
repnz
pop
or
sahf
into
jns
ret
fsubrp
pusha
or
test
mov
ljmp
scas
sbb
add
mov
mov
xchg
aam
adc
mov
pop
add
sbb
sbb
stos
push
xor
or
les
mov
movl
out
sub
insl
sbb
add
push
mov
outsl
shlb
adc
rcrl
pop
aam
mov
ds
sbb
call
js
test
in
push
dec
sbb
ret
popa
or
lss
mov
fdivs
mov
dec
lahf
stos
rol
cmc
inc
lock
xor
notl
call
in
ss
call
sub
stos
pop
xor
jmp
cmp
inc
mov
xor
or
jmp
bound
rclb
cmp
mov
outsb
jbe
adc
mov
lret
daa
add
aam
aam
jecxz
out
or
add
cmpsb
mov
and
jg
jne
xchg
push
jns
push
data16
lcall
out
into
icebp
xchg
dec
stos
dec
add
addr16
dec
mov
out
aaa
mov
xchg
ja
pushf
enter
mov
scas
mov
int
int3
add
sbb
inc
loopne
xor
cmp
clc
pop
popa
pop
daa
in
sub
test
aam
lock
or
mov
push
test
test
mov
mov
popa
adc
jle
jnp
mov
popf
aam
dec
rorl
push
cmp
sub
imul
jb
cmpsb
push
dec
sbb
mov
dec
arpl
mov
xchg
stc
dec
mov
popa
mov
movsl
push
dec
or
xchg
add
cmp
lock
lock
bound
lods
test
mov
cmp
sub
negl
lahf
xor
add
mov
test
jnp
push
movsb
push
jbe
adc
fiadds
out
sbb
gs
xor
ljmp
lahf
lods
xor
mov
dec
loope
flds
inc
xchg
or
add
ds
lods
testb
int
notb
pop
dec
push
aam
cmpsb
mov
jmp
clc
or
pop
inc
out
mov
dec
out
lret
shlb
xchg
inc
jnp
cmc
inc
sbb
pop
pop
lret
loop
scas
nop
cltd
mov
xchg
jb
ss
push
sub
cltd
out
sub
inc
ja
imull
push
xlat
mov
mov
clc
jae
pop
loop
mov
push
sbb
cmp
ljmp
push
mul
loop
inc
lahf
std
mov
movsb
inc
mov
hlt
dec
cmp
mov
insl
mov
int3
clc
leave
daa
cmc
mov
popf
movsl
jmp
mov
scas
xor
pop
push
pop
cmpsb
xchg
movsb
or
rcll
mov
xchg
stos
jmp
mov
loope
xor
mov
sarl
mov
std
mov
pop
lret
mov
scas
into
mov
mov
subl
out
add
sub
int3
dec
arpl
sbb
xor
fisubrl
das
dec
push
inc
mov
in
sbb
test
xor
fcompl
add
pop
mov
or
xor
push
mov
out
popf
subb
sbb
add
ja
jbe,pt
push
shrb
mov
test
sarl
mov
jle
mov
sub
rorb
xchg
or
inc
rolb
and
fs
in
cmp
out
push
call
shrb
cs
xorb
pop
mov
cmp
sub
gs
iret
repz
dec
or
test
xor
xor
cmp
and
push
xchg
popa
push
addb
cmp
frstor
lock
jno
mov
inc
or
leave
loope
lcall
in
sub
pop
gs
push
aam
fistpl
xor
or
aad
mov
ds
push
adcl
les
xor
sbbb
stos
push
cmp
pop
lcall
mov
cmp
sbb
push
xchg
push
sahf
imul
push
les
xor
jno
push
aas
cmpsl
insl
dec
mov
inc
and
mov
or
add
cmp
xor
inc
enter
xor
aaa
outsl
ds
cmp
mov
adc
repz
inc
outsb
repnz
cmpb
negl
fldenv
pusha
cmp
outsl
retw
jns
inc
das
mov
lea
xchg
mov
repnz
mov
sti
mov
pop
push
cmp
cmpsb
push
rcl
xchg
leave
jbe
dec
mov
mov
mov
xchg
jne
add
lret
aas
add
lcall
in
xchg
sbb
data16
push
pop
cmp
cmp
mov
adc
aas
sub
pop
xchg
or
repz
mov
adc
pusha
jle
mov
arpl
inc
dec
push
aas
xor
mov
arpl
xor
mov
flds
jmp
mov
inc
hlt
sbb
adc
or
ret
in
fsts
fcoml
hlt
mov
jnp
sub
or
icebp
dec
add
sub
sbb
or
jecxz
xor
push
jo
xor
mov
mov
pushf
inc
sbb
mov
dec
aad
add
lret
adc
repz
jg
nop
lret
sbb
and
push
pop
jp
adc
jecxz
sub
shrl
pop
add
jo
sub
in
or
nop
pop
and
aad
push
rorl
jae
add
mov
mov
inc
push
fisubs
push
dec
loope
test
daa
mov
push
jp
xchg
dec
lcall
sbb
outsl
sbb
xchg
pop
mov
bound
sub
push
jbe
xor
pusha
mov
sub
mov
pop
adc
pop
mov
xchg
mov
ss
adc
addb
shll
xor
popf
cmp
sbb
incl
insl
lret
movsl
out
jl
adc
cmp
das
pop
push
cltd
fsubs
cmpsl
ffreep
sub
add
adc
adc
rclb
aaa
das
and
test
pop
popf
insb
mul
icebp
sbb
or
outsl
and
xchg
test
cmp
rcrl
call
xchg
fwait
in
cmp
push
xchg
cli
xor
dec
pop
inc
into
cli
sub
xor
cmp
xor
cmpsl
outsb
push
inc
mov
mov
lock
subl
cmp
test
push
mov
and
lahf
and
inc
cs
jnp
add
outsl
scas
test
adc
sbb
xor
dec
fcomps
mov
lock
dec
rolb
jmp
fs
dec
mov
movsb
cmpsl
and
add
divb
jecxz
fsubrs
shll
jp
dec
scas
mov
inc
pusha
repnz
gs
jl
xor
jns
pop
fwait
mov
pop
sbb
pop
xchg
jb
lret
jae
push
shrb
lock
cwtl
xor
imul
or
sub
negl
pusha
pop
arpl
ljmp
sbb
mov
pop
ds
add
dec
jo
inc
nop
dec
mov
mov
sbb
test
push
or
dec
stc
stc
jg
scas
jo
je
mov
fdivrs
dec
jae
mov
lea
mov
stos
aam
fs
or
mov
mov
nop
orl
and
stos
jp
sub
movsb
lahf
cld
add
lea
rcrl
mov
lods
lds
fidivrl
call
int3
xchg
fisttpll
mov
sahf
fbld
cmp
iret
adc
ret
fsubl
xchg
or
lods
push
cs
jl
decl
push
ret
lret
inc
and
ja
fstl
pop
ret
mov
add
pop
lret
push
xchg
mov
add
xchg
inc
inc
lahf
add
lret
test
jnp
sahf
xchg
loope
scas
sbb
imul
jge
lods
pop
inc
pop
inc
push
mov
dec
mov
pop
lret
adc
adc
shrb
inc
aas
inc
jae
mov
sub
je
icebp
icebp
insb
inc
pop
mov
decb
outsl
add
adc
add
add
dec
add
mov
imul
dec
aam
mov
inc
add
jmp
das
xor
iret
out
pop
testb
cwtl
stc
mov
mov
int
cmp
test
aam
mov
pop
out
xchg
xor
mov
icebp
insl
mov
or
pop
pop
cld
fcmovnbe
and
dec
arpl
daa
or
jnp
fdivrs
push
push
clc
lds
lret
or
daa
jae
xchg
or
cmp
repz
push
je
xchg
push
jecxz
hlt
cs
sti
jnp
sub
addr16
loop
std
or
mov
fldcw
cmp
jae
popf
imul
cmp
loope
popa
lds
dec
mov
mov
xchg
leave
push
stos
xor
lret
fists
stos
inc
inc
cwtl
pop
fwait
lock
pop
jl
mov
dec
mov
daa
ficomps
data16
adc
setle
cmp
cwtl
stos
or
outsb
adc
out
popa
hlt
xor
sti
adcl
lods
in
dec
push
cmp
jne
ss
or
popa
dec
cltd
movsl
cmpsb
or
ror
adc
add
lods
pop
lods
xor
lock
sub
mov
dec
jbe
arpl
hlt
fimull
push
js
or
or
or
into
xor
sub
xchg
je
aad
nop
outsb
aad
popf
xor
loope
cwtl
fsubp
dec
cli
inc
and
lret
adc
into
jp
mov
mov
or
lcall
push
nop
lcall
push
fbstp
lock
fstpl
lods
inc
cmc
ret
aas
gs
fisubs
ljmp
inc
int
inc
and
xor
imul
jno
popa
inc
mov
mov
jecxz
inc
adc
mov
sbb
into
inc
adc
cmp
add
and
orl
adc
or
xchg
and
enter
shll
and
call
mov
arpl
xchg
sbb
add
repz
imul
ret
push
xchg
call
aaa
inc
jnp
insl
or
call
bound
mov
xlat
and
sbbb
in
lret
shll
push
dec
dec
in
mov
or
addr16
inc
pop
mov
push
cmc
add
and
ss
mov
sub
and
into
add
arpl
push
mov
cs
idivb
movsb
and
daa
popa
mov
mov
mov
icebp
jno
xchg
sub
fmull
pop
and
add
scas
addr16
push
pusha
bound
mov
insl
adc
lods
and
pop
or
push
jnp
pop
push
rclb
jns
cmp
test
bound
jns
xchg
pop
and
loope
jnp
add
jae
cmp
mov
mov
hlt
loopne
mov
loop
lock
xchg
or
aam
adc
in
inc
loopne
ret
pusha
adc
lods
mov
add
xchg
iret
and
jbe
lods
into
adc
lock
mov
fisttpll
aaa
pop
ret
or
xchg
lcall
xchg
push
movsl
dec
xchg
dec
sahf
jecxz
sbb
or
in
sbb
xchg
fwait
dec
fistps
mov
ret
ret
and
imul
push
jnp
push
dec
xor
negl
sbb
mov
stos
call
repnz
dec
movsl
testl
test
imul
ljmp
test
loopne
popa
dec
insl
out
and
arpl
mov
mov
and
cltd
adc
rcr
or
into
cltd
sbb
shll
mov
xchg
jl
jecxz
xor
divb
repz
repz
in
push
popa
jmp
imul
push
mov
adc
daa
fidivrs
jp
mov
int
mov
test
xchg
sbb
outsl
lret
jae
xchg
push
dec
push
and
jb
cmc
cmpsl
pop
jge
pusha
push
test
shrl
mulb
pushf
jae
cltd
call
add
je
pusha
cmp
stc
iret
ljmp
lret
xor
ret
rorl
xlat
sub
xorb
lods
mov
movsb
fidivrl
cmp
mov
xor
jnp
pop
mov
fcmovne
pop
js
cmp
mov
orb
xor
mov
test
pop
xlat
ret
test
nop
pop
push
xor
movsl
dec
jno
mov
lea
xor
nop
ljmp
mov
add
or
sub
xchg
ret
aad
dec
cmp
and
cmp
pop
pop
mov
sbb
dec
sub
mov
pop
hlt
fildl
leave
mov
fdivs
addr16
pop
push
mov
notl
fdivrl
dec
adc
shlb
shlb
sbb
shrb
mov
imul
test
cmpsb
ret
arpl
jmp
outsl
cltd
aad
lods
xlat
cmp
and
cmpsb
nop
inc
pop
movsl
push
sbb
fists
xchg
cmp
fstpt
lods
ds
out
sbb
dec
pop
xor
mov
sarb
sbb
dec
inc
int3
mov
loope
sbb
or
aas
add
jl
mov
mov
repz
jno
loope
int3
imul
or
loop
lods
aas
stos
into
mov
out
dec
cld
lock
out
cld
pop
mov
jge
or
mov
mov
stos
mov
es
int
cli
add
push
xchg
dec
mov
mov
mov
inc
xlat
inc
xor
insb
les
adc
cmp
sub
mov
mov
mov
adc
orl
dec
aas
and
mov
jg
jl
pop
das
add
xor
push
or
inc
pusha
iret
mov
in
out
cwtl
enter
cmp
xchg
dec
testl
cmp
ljmp
push
pop
add
cwtl
imul
bound
lods
imul
cld
adc
xchg
lret
aad
cs
xor
cli
jmp
push
psadbw
or
loope
xchg
adc
or
mov
add
lcall
ja
sbb
fwait
sahf
jecxz,pt
gs
mov
insl
xor
dec
mov
or
xchg
xor
pop
aas
shrl
adc
movsb
mov
ss
bound
and
and
adc
adc
js
insb
movb
pop
in
cmpsl
mov
fists
xchg
mov
sub
cwtl
or
cli
xor
movsl
into
fsubs
loopne
pop
and
lds
cwtl
imul
dec
lahf
add
movsl
mov
adc
sub
int3
or
data16
js
mov
ja
mov
arpl
movsb
cmp
ret
call
daa
jae
adc
in
roll
mov
mov
sbb
push
push
popf
xchg
loop
shll
sbb
sbb
push
les
cmp
cmp
add
fbld
test
pop
pop
mov
dec
add
xor
iret
or
sbb
and
jle
adc
cmp
stos
fisttpl
lcall
mov
add
out
cwtl
div
sbb
mov
clc
jnp
pop
mov
mov
mov
leave
sub
in
cmp
sbb
cmpsb
pushf
pop
jae
add
push
cmp
scas
push
lret
jmp
dec
in
dec
pop
push
sahf
push
jne
fchs
mov
test
arpl
inc
andb
jno
in
jo
aam
aas
mov
dec
adc
push
dec
test
push
dec
lret
in
jne
mov
popf
adc
inc
cmpsb
daa
jmp
scas
mov
loop
mov
push
lret
repnz
into
bound
xchg
icebp
pop
xchg
mov
inc
push
cmc
inc
outsl
ret
dec
pop
and
movsb
xchg
shll
pop
pop
aad
ficomps
mov
fmuls
mov
cmp
aas
pop
bound
jb
sti
inc
mov
bound
pushf
or
push
or
push
shll
in
sub
inc
push
mov
ja
jl
cwtl
add
dec
lret
out
dec
lahf
rcl
mov
repnz
outsb
add
jp
shr
test
stos
or
sbb
aas
xor
and
pop
jne
adc
mov
push
add
hlt
rcrl
push
cmp
pusha
sahf
inc
mov
outsl
stc
fiadds
icebp
stos
in
mov
lds
pop
shl
test
pop
aas
stc
sbb
sbb
loop
out
inc
pop
repnz
or
int
or
lods
gs
lahf
fdivrl
decl
sub
test
add
dec
mov
pusha
jp
and
add
les
jbe
xor
dec
push
mov
dec
imul
jbe
outsb
sub
das
lea
pop
into
pop
lret
push
mov
or
mov
rolb
std
loopne
sbb
jno
jp
cmp
pop
inc
sub
cmc
andl
mov
in
daa
cmpsb
pop
icebp
mov
bound
cmpsl
mov
call
fs
js
ds
out
push
sbbb
or
push
add
lods
out
into
imul
cld
mov
je
inc
xor
cmpsl
pop
addb
xor
xor
push
adcl
mov
dec
or
jmp
add
lds
lcall
cmpsb
daa
sbb
push
and
lcall
cld
cli
pop
imul
xchg
adc
jae
cld
stos
adc
in
sbbb
or
xchg
inc
mov
jo
pushf
je
fs
xor
jae
lds
push
pushf
adc
or
pop
es
dec
pop
dec
cld
fcomps
mov
lods
out
xlat
push
add
mov
add
push
into
cmp
outsb
repnz
sbb
cmp
inc
mov
mov
bound
loope
add
mov
lds
lcall
push
cwtl
xchg
pop
cmpsb
cmp
outsl
fwait
push
pop
sub
hlt
sub
call
loopne
push
mov
cs
enter
nop
jno
stc
sub
fsubl
loopne
popa
cmp
push
and
xchg
loopne
inc
jg
mov
int3
std
aaa
mov
mov
outsb
mov
stos
call
fldenv
int
fnstcw
jbe
ss
insb
scas
fstps
cmp
loop
pop
xchg
xchg
stos
cli
jecxz
fs
scas
andb
fwait
stos
ja
push
mov
push
lret
rcll
outsl
pop
add
inc
add
and
sbb
sbb
xor
or
jmp
add
mov
add
xor
and
mov
xor
loope
lods
or
and
out
add
bound
adc
pop
xor
xor
mov
mov
pop
das
xchg
je
xchg
es
inc
sbb
jo
xchg
sbb
cld
out
jge
inc
push
sub
jecxz
push
test
clc
push
mov
cmp
and
arpl
cli
push
lock
jbe
cmp
dec
adc
and
js
mov
xchg
cld
add
mov
lock
iret
jge
mov
fistpll
inc
insl
outsl
or
xchg
sub
mov
push
pop
stc
sarl
push
ss
dec
xchg
mov
out
mov
inc
lds
or
test
out
sbb
insl
push
jno
push
int
push
push
in
out
sti
or
dec
scas
mov
icebp
movsl
js
mov
mov
jae
xchg
daa
inc
adc
push
pop
jb
push
cmp
or
les
or
lahf
pop
insb
arpl
jmp
inc
mov
fisubs
pop
mov
sbb
loope
cmp
jp
cli
scas
in
mov
inc
jmp
mov
in
mov
sub
pop
push
movsl
or
les
or
mov
jb
in
push
xor
add
scas
aas
incl
mov
mov
hlt
cmp
jnp
mov
push
xchg
xor
lds
push
int
sahf
popa
aas
pusha
push
jg
cmp
xchg
and
and
fnop
lods
inc
popa
fs
add
dec
ror
negb
xor
mov
sbb
nop
mov
pop
inc
pop
sbb
cli
push
mov
inc
cld
adc
jmp
mov
fiaddl
mov
sub
rolb
cmpsb
fadd
cmp
jl
inc
fs
jmp
lcall
fs
mov
and
cmpsl
pop
push
test
mov
fcmovne
test
sbb
ret
repnz
fiadds
popf
sbb
or
out
mulb
incb
pop
inc
inc
test
mov
lock
cwtl
push
je
xchg
incl
add
in
fyl2xp1
push
addl
out
call
cwtl
or
fwait
xchg
pop
cmp
fwait
xchg
add
xor
mov
inc
mov
imul
sub
push
popa
cwtl
addr16
scas
aam
mov
test
dec
adc
pusha
pop
rolb
add
jne
pusha
mov
mov
std
sbb
push
or
sub
lds
clc
pcmpeqd
jecxz
mov
cmpl
dec
push
dec
inc
orb
add
lock
xchg
xchg
fidivrl
push
addr16
out
fsubl
das
out
pop
sbb
rolb
pop
fisubrs
sub
out
jecxz
fimull
dec
and
cltd
in
test
enter
push
jge
scas
cmp
fwait
jno
ds
inc
xor
loopne
adc
or
ljmp
test
mov
adc
ljmp
inc
imul
jmp
jle
idivl
bound
bound
xchg
into
push
aad
adc
repz
dec
push
pop
xchg
movl
xchg
loopne
ret
popf
test
jg
dec
dec
sbb
push
add
xor
xor
and
lahf
cmp
pushf
out
sahf
insl
nop
scas
xor
leave
sahf
call
mov
mov
push
add
pop
mov
repnz
stc
ret
cmp
mov
jge
in
add
mov
mov
mov
std
sti
pop
sarl
jbe
or
jmp
ds
adc
gs
mov
pop
sub
adc
int3
jns
or
sub
push
jo
jno
inc
xchg
rcrl
xchg
dec
std
in
add
movb
dec
imul
fidivrl
dec
fdivrl
mov
ds
or
cmp
jp
mov
sbb
inc
pop
xor
xchg
loop
cli
fs
in
mov
and
repz
adc
sub
insl
cmc
sbb
fists
hlt
jmp
das
mov
and
xchg
sub
loopne
sahf
cltd
mov
xor
div
rolb
jno,pn
sbbb
xchg
aas
cmp
imul
jae
mov
jae
push
xor
push
sub
mov
nop
xchg
jnp
out
arpl
in
faddl
lods
and
loopne
rcrb
adc
add
jne
adc
sbb
fadds
shll
jo
out
int3
rorb
and
push
xor
sbb
sti
jl
orb
pop
or
adcl
or
subl
ljmp
in
fs
into
xor
or
jl
adc
out
cwtl
inc
adc
dec
pop
nop
movsl
loop
aas
out
xchg
adc
sahf
dec
mov
in
jg
jbe
lcall
mov
ret
xchg
outsl
jecxz
out
test
cmc
insl
sti
push
loopne
aad
jns
mov
stc
subl
mov
insl
bound
insl
lods
aas
add
out
dec
push
test
scas
push
int3
jb
test
ss
jbe
mov
mov
adc
sub
or
es
pop
std
ljmp
add
dec
xchg
add
push
dec
sbb
lea
dec
mov
cmpsl
inc
push
or
and
push
add
mov
mov
mov
stos
mov
add
cmp
adc
test
sub
push
push
aaa
stos
movsl
sub
sub
cmc
mov
xchg
push
aas
mov
mov
sbb
fistps
mov
divb
insb
out
cmp
imul
push
roll
jb
sbb
xchg
ret
sub
mov
push
push
cmp
and
mul
add
sub
subl
std
dec
test
scas
and
push
adc
sub
fcomps
aas
dec
insb
fs
jnp
loope
pop
aam
xor
jl
sub
cmp
fdivrs
add
push
xorl
daa
stos
int3
sbb
lods
fcoml
push
outsb
cwtl
rep
insl
dec
ja
insb
sahf
jg
hlt
or
out
or
cmpsl
cmc
mov
fbld
xorb
popf
inc
fdivrs
sbb
outsb
aaa
inc
stos
cwtl
mov
xchg
sbb
xlat
dec
test
dec
cli
test
sbb
adc
mov
mov
push
sbb
mov
inc
daa
sub
pushl
mov
jg
stos
xor
pop
dec
mov
mov
add
jns
hlt
sbb
aam
add
jg
mov
xor
mov
jae
add
popf
imul
pop
test
repnz
ss
xchg
add
pop
mov
cmpsb
int
cmp
inc
test
adc
pop
loop
lret
das
xchg
jmp
nop
mov
ja
jbe
xor
outsb
stc
mov
pop
sub
sbb
pop
in
xor
lret
cmp
xchg
jns
mov
jge
or
and
shr
pop
xor
and
cli
out
decl
jns
hlt
out
pop
jns
dec
add
out
loopne
inc
popf
sahf
mov
xchg
mov
push
iret
push
je
lods
jo
jae
adc
out
addr16
mov
icebp
xchg
and
sbb
jmp
ficoms
adcl
sbb
je
imul
inc
jmp
pop
std
pop
dec
jp
jge
hlt
jp
jbe
loope
rcr
les
mov
mov
inc
popa
jge
dec
shlb
jo
xchg
mov
or
fists
adc
aam
mov
cs
push
push
pushf
divb
or
xchg
sahf
cmp
aam
pop
jnp
mov
cmp
push
adc
push
jecxz
push
pop
out
lcall
mov
dec
loopne
test
sub
lret
ja
push
push
pop
add
fwait
or
cltd
mov
aaa
dec
into
pop
xchg
lock
inc
js
repnz
xchg
shlb
sbb
or
mov
and
push
aad
cltd
inc
dec
sbbl
inc
cwtl
fstpt
or
mov
xor
inc
sbbl
data16
cmp
rcrl
cld
dec
cmc
cmp
mov
sub
sbb
mov
not
jp
in
jbe
out
test
fiadds
cmp
mov
insl
mov
sbb
repnz
in
rcrl
addl
fidivrl
dec
enter
insl
out
xchg
repnz
gs
sbb
js
imul
mov
mov
in
movsb
pop
mov
test
push
push
mov
test
cmpsb
mov
mov
jl
repnz
sub
filds
mov
add
push
shll
inc
mov
mov
jmp
jg
mov
pop
mul
into
daa
repnz
mov
or
or
scas
cmpb
add
loope
cmp
ljmp
cwtl
mov
mov
xor
xor
call
cmp
sbb
sarl
stos
insl
xor
arpl
sti
mov
sbb
fisttps
mov
ss
jo
inc
pop
scas
jno
or
dec
fbld
sti
push
popa
sbb
int
rorl
ret
cmp
xlat
dec
xchg
mov
dec
mov
xor
scas
lods
sahf
lcall
cmp
mov
xchg
divb
mov
push
cwtl
psllq
mov
lods
movsb
jnp
js
and
pop
lods
jl
jmp
jge
mov
scas
dec
xor
cwtl
cltd
js
gs
adc
push
mov
jge
arpl
push
adc
mov
cmp
in
jle
ss
or
inc
aas
xchg
and
clc
push
mov
int
pop
lret
pop
mov
xchg
out
fbld
sub
xchg
pop
es
stc
sbb
add
mov
js
out
add
inc
mov
mov
or
lods
popa
xchg
fwait
fs
lea
and
jns
pop
pop
inc
jmp
xchg
bound
lret
cmp
jns
int3
in
mov
xor
les
add
jo
xchg
arpl
in
imul
hlt
push
call
in
mov
in
repz
cwtl
push
aam
in
out
dec
pop
add
dec
ret
ljmp
mov
and
daa
shrl
and
icebp
pop
adc
mov
pop
adc
lret
xchg
fisttpl
rcr
out
jmp
sbb
jae
and
add
cmp
xor
dec
push
add
pop
xchg
int3
not
push
pushf
push
nop
out
dec
popa
mov
and
push
inc
mov
movsl
dec
pop
stc
lock
sub
iret
rcrb
adc
xchg
inc
jo
push
imulb
ljmp
insl
repnz
mov
sub
fs
inc
outsl
inc
pop
lret
das
call
push
inc
fsub
jg
mov
out
inc
or
cmp
pop
add
add
je
push
call
mov
sub
imul
adc
and
aam
aad
and
sub
out
cmpsl
insl
je
stos
add
dec
pop
addr16
movsb
sbb
inc
stos
add
mov
pusha
loop
and
mov
sub
ret
push
or
sub
mov
popf
mov
add
nop
psrad
push
fidivrs
movsb
sub
aad
mov
sub
jg
push
inc
add
add
mov
enter
sbb
inc
inc
adc
aaa
mov
dec
xchg
adc
and
push
cmp
call
popf
rolb
xchg
jb
in
insb
lock
or
lret
xor
out
cwtl
jns
fcmovb
fwait
xor
rcll
lret
inc
and
jb
pop
xchg
sbb
cmp
jnp
mov
push
dec
xor
bound
in
stc
outsl
jo
fistpl
in
out
dec
mov
imul
mov
jp
mov
mov
daa
divb
shll
xchg
int3
movsb
or
xor
mov
xchg
lcall
iret
cwtl
aam
jno
popa
movsb
sub
xchg
sub
cmp
out
fs
scas
push
mov
and
ficoml
bound
pop
push
mov
enter
or
jecxz
dec
ds
mov
outsb
flds
push
sub
dec
jp
adc
jle
and
push
cld
pop
mov
pop
out
movsb
enter
cmp
or
add
or
inc
jbe
loopne
out
cmp
cmp
stos
fildl
dec
cmpsb
in
adc
sar
pop
movsl
push
adc
or
add
xor
fnstcw
inc
inc
test
jg
dec
cmp
jmp
xchg
test
scas
mov
out
jae
shl
stc
fisttpl
push
jle
fdivrs
and
add
mov
imul
imul
dec
push
pop
xor
int3
mov
mov
subl
sub
and
sub
push
sti
bound
mov
fbstp
jns
pop
scas
pop
sbb
popa
fldenv
xor
cmpsl
cwtl
cli
cmp
aam
add
pop
sub
repnz
jecxz
xchg
dec
inc
push
cmp
popf
imul
test
cmc
add
xchg
lcall
push
icebp
mov
ss
push
add
xchg
push
es
sti
inc
inc
mov
stos
jge
movsb
xor
sbb
jecxz
pop
lea
inc
das
out
aaa
mov
jmp
cmp
cld
je
mov
push
scas
repnz
mov
jecxz
jbe
xchg
lock
jae
mov
loop
icebp
aam
sbb
jmp
cld
mov
and
fisubrl
push
fmulp
push
movsl
xlat
repz
mov
into
jns
sbbl
jae
push
lret
xchg
mov
add
pop
jle
cmp
insl
sub
lcall
jae,pt
ljmp
faddl
jg
movsl
repz
nop
fsubr
mov
jle
lret
adc
lds
add
inc
dec
test
adc
jne
or
mov
in
pop
cld
shrl
fwait
testl
inc
sbb
or
or
test
inc
cwtl
stos
push
lret
mov
xchg
aam
adc
test
mov
fdivrs
add
and
mov
push
sbb
inc
xor
add
ffreep
orl
popl
cmp
mov
jno
cmp
repz
push
clc
sub
inc
adc
ds
cmpsl
jne
push
lods
cmpsb
aaa
lds
jmp
call
aad
js
sbb
stc
test
test
push
nop
lret
inc
xchg
mov
divb
call
or
jecxz
adc
cld
and
jp
aam
lret
add
add
pushf
xchg
fcmovnbe
fldt
test
repnz
lods
ss
xlat
fildl
mov
lret
dec
movsl
out
sti
inc
mov
roll
jecxz
ret
divw
imul
mov
mov
mov
loopne
mov
mov
fcomps
or
daa
std
out
xor
imul
stos
shrl
rolb
mov
jge
loope
add
mov
cli
pop
and
out
sub
repnz
inc
arpl
cltd
fidivrs
loop
out
add
mov
lods
jmp
adc
in
push
sbb
dec
aaa
cmp
loopne
aas
sbbb
pop
sbb
pop
adc
push
add
fdiv
xor
imul
sub
scas
xchg
out
jp
xor
xchg
add
sub
cli
fmul
pop
lret
mov
cmp
js
pop
addr16
jge
cmp
es
xor
add
push
push
sbb
aam
and
test
mov
es
jns,pn
or
mov
daa
lret
sub
push
aaa
in
or
inc
mov
adc
push
xor
jo
inc
push
ja
cmp
xlat
mov
jle
ret
push
xchg
and
push
aaa
out
imull
adc
std
cmp
cmp
push
rclb
cmpsb
mov
into
test
cmc
out
jno
cltd
fidivrs
sti
hlt
sti
orl
out
inc
xor
inc
sbb
leave
push
lahf
clc
leave
hlt
pop
rorb
aad
pop
sub
sub
mov
loope
sub
jmp
jl
jmp
in
push
fwait
insl
adc
push
inc
rcrl
sub
bnd
ds
data16
xchg
pop
dec
mov
cltd
mov
int3
sbb
jmp
add
mov
mov
push
xor
mov
jae
mov
and
fcomps
loop
movsb
in
loopne
pop
das
loope
sub
testl
xor
add
fbstp
or
sbb
push
mov
jb
or
cmp
stc
ja
gs
pushf
push
int3
lods
sbb
fcomi
mov
push
add
mov
dec
mov
leave
mov
loop
shlb
lds
cs
inc
xor
imul
add
jg
xchg
js
das
xchg
lock
and
inc
sub
pop
out
inc
inc
gs
fdivr
rol
pushf
or
inc
jecxz
or
cwtl
sub
sbbb
test
xor
adc
filds
mov
cmp
loopne
outsl
push
xor
mov
enter
inc
xchg
adc
aad
pop
xchg
push
loopne
iret
inc
push
lret
lods
pop
dec
jg
lret
xchg
adc
jmp
mov
data16
pop
lret
inc
sub
arpl
jmp
pop
psllw
xor
jle
push
xchg
jnp
out
movq
aaa
cmpb
loope
hlt
add
jbe
mov
je
xchg
mov
adc
shlb
add
cwtl
jmp
fnsave
adc
jnp
mov
sbb
pop
lahf
lods
int3
adc
or
xor
jno
std
cli
in
psllq
mov
mov
repnz
xor
fsub
cmp
mov
test
js
add
scas
les
jmp
scas
data16
push
lcall
nop
mov
clc
cmpsb
stc
loope
push
jb
mov
pop
sbb
push
push
ds
xchg
pusha
inc
das
movsl
pop
mov
fs
mov
dec
jl
movsb
jp
jle
cmp
jno
lock
mov
cli
jg
sub
lods
pop
stos
mov
fiaddl
test
xor
fwait
clc
dec
outsb
sub
into
add
dec
sahf
mov
sbb
addl
pop
xchg
clc
xor
scas
push
mov
in
mov
fcoml
orb
jge
dec
xchg
lods
push
das
aas
mov
and
stos
dec
jge
jg
stc
mov
sub
sbb
xor
push
test
pop
sbb
xor
ret
add
gs
inc
inc
jg
jo
push
mov
lcall
cmp
pop
mov
xchg
dec
jnp
or
jge
out
scas
dec
out
loop
adc
xor
push
adc
cld
and
xchg
enter
inc
mov
incb
test
aad
scas
enter
movsb
cltd
dec
aas
iret
inc
mov
push
outsb
lcall
jae
fildl
dec
push
xchg
push
inc
daa
push
mov
mov
cmpsl
mov
lods
or
adc
cmpsl
dec
cmp
mov
imul
hlt
aam
pop
push
xchg
mov
ljmp
movsb
push
movl
and
enter
rclb
push
inc
jo
sahf
push
mov
or
jp
inc
add
pop
repnz
cmp
fstp
mov
jo
lcall
mov
and
shll
inc
cld
sub
lcall
xor
inc
cmc
and
mov
int
cmpsl
dec
xchg
test
mov
movsb
dec
cmp
add
sti
bound
cmpsl
outsb
fdiv
lock
mov
jge
mov
mov
xor
mov
cmc
fwait
sti
iret
jns
popa
mov
fimull
jmp
fildl
shr
aad
loope
andl
sbb
sub
jl
scas
andb
and
cltd
push
insb
add
sahf
jecxz
scas
pop
ret
jmp
ljmp
or
jecxz
inc
mov
fldenv
xor
out
add
in
pop
test
inc
or
xchg
scas
inc
xchg
movsb
out
dec
jg
cmpsl
push
imulb
sbb
or
pop
test
lcall
sti
lahf
add
test
mov
inc
popa
jb
into
inc
dec
sbb
cmp
push
xchg
arpl
dec
in
in
sub
inc
dec
repz
je
jno
cwtl
pop
jb
fdivrs
push
enter
and
lock
sbb
stc
xor
or
test
mov
shl
pusha
or
pop
pusha
daa
xor
imul
into
mov
mov
sub
jl
call
and
test
pop
mov
dec
or
fbld
push
movsl
xchg
mov
cld
fs
sbb
rolb
push
negl
jecxz
addb
and
test
fwait
and
and
adc
cmp
or
loopne
sub
outsb
push
sbb
mov
mov
cli
pop
es
jae
mov
std
ljmp
cld
clc
mov
bound
mov
hlt
add
mov
cmp
pop
fadd
sub
hlt
push
sub
scas
xchg
sbb
daa
dec
xchg
inc
push
rep
push
mov
test
aam
add
push
cmp
push
popf
icebp
cmp
mov
js
insl
sub
jbe
test
add
repnz
mov
repnz
movsl
cwtl
xor
paddsw
std
xor
push
xor
lahf
outsb
sbb
pop
mov
lods
ja
xchg
iret
xchg
in
or
mov
cmp
pop
das
push
test
testl
inc
xor
mov
sbb
in
aad
mov
das
mov
es
xchg
mov
pop
mov
pop
dec
aaa
cli
jne
iret
enter
add
orb
or
sahf
inc
cmp
sbb
mov
dec
pop
sub
mov
pop
ljmp
fsubl
movsl
add
lods
lret
sub
notb
jmp
pop
out
dec
mov
push
ljmp
inc
lret
inc
cmp
insl
int3
sub
fnstenv
iret
rorl
jle
fstps
cs
xchg
icebp
lret
cs
fs
shr
pop
gs
stos
xor
jbe
mov
add
push
lock
leave
xchg
add
popa
cmc
xor
xchg
lret
cmovl
ffreep
cli
test
dec
ds
mov
dec
dec
inc
fistpll
mov
and
push
lds
adc
popf
cltd
insl
ja
mov
push
stos
inc
clc
cmovbe
mov
enter
push
adc
pop
xor
ret
cmc
out
xor
sbbl
inc
jb
aaa
into
push
pop
inc
ror
dec
fidivrs
xor
and
mov
hlt
in
pop
xor
mov
popa
dec
sti
xor
xlat
jae
in
mov
ds
mov
sub
in
mov
pop
fidivrl
sahf
mov
and
lcall
popa
mov
jnp
mov
push
adc
dec
insl
pop
mov
je
jns
pop
rcrb
jl
icebp
mov
test
inc
xor
sti
sub
jae
adc
imul
lock
test
iret
cmc
xchg
notb
and
mov
mov
incb
dec
test
js
inc
and
shll
push
filds
xor
in
push
add
or
lea
adc
xor
call
jns
push
daa
and
test
fildl
out
inc
mov
pop
movsl
xor
imul
adc
mov
cs
lea
add
cmp
push
imul
in
sbb
popa
jl
mov
shrl
sub
push
outsb
scas
aam
xchg
jle
fmuls
enter
les
clc
jp
pusha
sbb
cwtl
cwtl
test
mov
and
nop
ljmp
sbb
sbb
es
xchg
dec
addr16
jp
inc
dec
inc
mov
jb
push
xor
jecxz
sbb
push
lcall
in
jmp
jbe
cmp
cmp
ss
fs
std
inc
aas
add
jecxz
lods
jp
inc
sbb
loopne
es
out
jae
lret
jno
jmp
jle
cmpl
pop
inc
das
in
repz
movsl
bnd
shrb
addr16
xlat
mov
das
in
sbb
rcrb
andb
push
jno
jnp
imul
je
mov
sbb
add
cmp
mov
or
and
div
sbb
push
sbb
cmpsl
push
shrl
enter
fneni(8087
cmpsl
test
mov
pop
xor
mov
dec
fldt
mov
popf
es
mov
mov
mov
mov
lods
iret
pop
cltd
and
fwait
lea
adc
push
sub
xor
jo
mov
pusha
lds
mov
repz
aas
sub
sub
cmp
push
push
bound
filds
mov
popf
jno
fbstp
adcl
pop
int3
lahf
sbb
fdivrs
push
and
dec
xchg
fwait
add
push
sub
mov
xor
inc
add
adc
xor
imul
out
gs
mov
dec
lods
in
in
insl
sbb
fnstenv
les
fisttpl
push
dec
xor
je
aas
pop
repnz
and
jo
test
sbb
hlt
je
cmp
nop
inc
mov
xor
cmp
pop
sub
je
dec
jg
sub
xchg
mov
mov
loopne
scas
xchg
xchg
shrl
lock
inc
xor
and
sub
lock
daa
or
jae
or
xchg
scas
mov
fs
aas
sbb
clc
mov
adc
mov
icebp
jp
or
imul
jnp
movsb
jno
icebp
les
loope
test
fwait
pop
movsb
popa
push
loopne,pn
idiv
sbb
cmpsb
popa
push
sbb
mov
movl
loope
pop
xchg
sahf
mov
sti
mov
pop
rclb
cmpsb
dec
or
fbstp
add
or
out
stos
jle
sbb
out
data16
mov
pop
pop
jo
cmpsb
jae
dec
mul
sub
sub
pop
andl
jno
fbstp
jb
add
and
and
or
sub
stc
dec
ss
les
sbb
jb
shrb
mov
and
push
xor
mov
cmp
xorl
fldt
loope
fwait
insl
dec
and
sbb
sbb
adc
out
shrb
lret
mov
sub
bound
imul
and
push
std
icebp
mov
dec
pop
scas
cli
adc
in
sti
insb
pop
cmp
xchg
fs
adc
adc
cmc
cmp
pop
imul
and
popf
jbe
lds
xchg
jb
push
cmp
in
aas
mov
or
rclb
das
hlt
arpl
imul
mov
cmpsl
jne
sub
jge
sbb
loop
testl
inc
jmp
and
outsl
mov
cmp
mov
ja
mov
ja
outsl
shlb
imul
rcrl
push
sub
mov
scas
xchg
in
dec
stc
loop
jae
pop
push
fisubrs
pop
ja
mov
out
dec
enter
inc
and
enter
xor
out
xchg
pop
inc
mov
int
push
fistpl
add
jmp
xchg
js
pop
out
cmpsl
mov
xchg
nop
subb
cmp
mov
push
ds
pop
std
pop
dec
adc
jne
out
imul
movsl
adc
jmp
out
push
aaa
xchg
push
mov
into
adc
jns
jae
es
int3
dec
add
pop
mov
insb
xchg
test
jbe
insb
mov
mov
imull
imul
fstpl
pop
push
push
dec
rcl
je
mov
sbb
mov
fiadds
in
aad
imul
imul
int
xchg
mov
or
insl
insb
adc
pop
fcomp
lds
pop
mov
mov
push
dec
add
aas
das
in
mov
ss
dec
sub
js
out
fimull
mov
fdivs
jge
mov
cmp
shlb
int3
rclb
inc
loope
mov
cmp
sarb
xchg
push
mov
les
lret
ret
jnp
mov
pop
dec
lds
inc
stc
cli
xorl
enter
and
xor
movsb
or
sub
xchg
into
les
mov
dec
sbbl
adc
pop
pop
jbe
or
sbb
mov
stos
mov
popf
sub
jecxz
ud0
mov
scas
sub
stc
and
push
jne
movsl
ficomps
sbb
in
pavgb
inc
mov
insb
push
lret
call
push
sub
push
test
popf
mov
mov
lcall
mov
out
push
es
mov
push
sarb
in
mov
and
hlt
adc
sub
lods
clc
fldcw
push
mov
mov
mov
sbb
test
sub
lcall
dec
mov
ljmp
dec
adc
or
fisubrl
pop
imul
push
push
stos
push
xchg
mov
arpl
xor
jp
pop
and
cli
and
xor
bound
adc
dec
aaa
and
mov
jl
das
fsubl
xlat
inc
imul
and
in
jnp
fnstenv
xor
into
cld
or
mov
addl
or
roll
xchg
sub
sub
dec
xchg
roll
test
jbe
int
mov
dec
jl
mov
or
pop
into
das
add
fsub
mov
jne
cmp
sbb
cmp
jo
push
sbb
cmp
lret
out
imul
bound
hlt
xchg
lds
pop
dec
xor
push
adc
mov
sub
rorl
rcrl
jmp
or
test
mov
and
out
sti
std
push
xchg
imull
mov
hlt
fucomip
cmpsl
xor
inc
subb
cwtl
adc
add
addb
sbb
out
lods
js,pt
mov
fldlg2
fs
lods
inc
int3
mov
mov
jo
movsb
popa
mov
fcoms
adc
mov
xlat
xchg
xorb
pop
mov
jo
cltd
xor
out
jle
mov
push
cmc
mov
or
push
lret
or
enter
fldcw
je
dec
fsts
testb
sbb
inc
dec
pop
and
adc
mov
cmp
fcoms
mov
cltd
enter
jnp
das
pusha
cmp
add
aam
jnp
or
or
xchg
fildl
sti
xchg
xchg
movsl
shrb
dec
jg
insl
jp
push
pop
insl
pop
push
cld
out
ror
push
and
inc
out
xchg
or
cltd
mov
adc
stc
or
andb
outsl
push
jl
mov
movsb
dec
mov
sahf
xor
jp
inc
daa
jmp
and
xor
ss
and
mov
push
inc
pop
insb
jp
push
pushl
ljmp
stos
aaa
xchg
cld
add
dec
sub
insl
into
repnz
jb
sub
inc
mov
inc
dec
lods
mov
les
sbb
loope
icebp
mov
mov
mov
ret
dec
sbb
mov
movsl
aad
dec
push
and
cld
test
pop
divb
pusha
or
std
pcmpeqd
sbb
add
clc
movntq
subl
adc
fdivrl
lret
push
popa
outsb
mov
lret
lea
ja
cmc
sub
sub
test
push
xchg
and
dec
adc
mov
mov
dec
sub
outsb
cmpsl
and
lock
mov
faddp
cmc
lahf
xor
pop
lahf
mov
jo
add
ret
in
call
add
popf
fildl
je
jnp
jp
jb
inc
add
aam
imul
sbb
data16
push
pop
and
scas
shrl
inc
cmp
outsl
add
or
add
inc
out
jbe
push
dec
loope
sbb
fcoms
rcll
cmp
sub
add
push
out
sub
mov
xor
lahf
mov
ret
mov
nop
mov
fstl
dec
sub
push
fnsave
mov
mov
xchg
cld
cmp
push
mov
mov
sub
push
push
int3
je
mov
mov
ss
mov
or
add
dec
sbb
ret
jns
pop
adc
sbb
pusha
inc
loopne
aad
dec
sbb
pop
std
inc
mov
lods
int3
xchg
sub
bound
jecxz,pt
mov
cs
fdivl
and
jne
pop
jp
pop
pop
push
xlat
les
shll
lods
iret
clc
std
loop
enter
bound
xor
xchg
mov
test
iret
sbb
dec
push
xor
cld
outsl
iret
adc
cmpsb
lret
sbb
popf
insb
xlat
mov
jbe
or
adc
movsl
out
jle
sub
sub
pop
lcall
in
sbbl
decb
pusha
leave
lcall
js
imul
add
jmp
jne
js
mov
push
xor
lods
add
bound
pop
mov
leave
adc
scas
mov
pop
sub
jl
repnz
cmp
mov
inc
popf
cld
jae
cmp
mov
mov
inc
jmp
adc
cwtd
inc
je
test
fistl
lods
adc
jno
xor
add
cld
cmp
push
xchg
shrl
aas
xor
js
jae
inc
pop
mov
cwtl
into
cmp
or
ret
push
inc
scas
inc
dec
movsb
sti
inc
in
jge
cmpsl
inc
std
adc
aaa
sub
and
lock
das
xchg
adc
ss
cmpsl
loop
aaa
repz
adc
call
cwtl
push
js
popf
xor
jae
or
cli
bound
push
inc
adc
pop
mov
cmpsb
pop
xchg
pop
lods
cmpsb
lods
pop
aas
adc
mov
lahf
stos
clc
inc
mov
ret
mov
mov
xchg
bound
leave
adc
popa
loop
outsl
rorb
adc
movd
jp
cltd
test
pop
aam
push
fucom
fs
push
mov
jb
dec
inc
int3
pop
lds
es
in
subl
sahf
jle
add
fnsave
jo
mov
pop
lea
leave
lahf
daa
adc
sbb
rol
rcrl
inc
fildll
mov
sbb
dec
inc
sbb
in
fimull
sbb
cmp
call
jmp
dec
movsl
mov
aaa
adc
push
call
movsl
ljmp
sbb
repnz
jo
stc
aas
icebp
mov
pop
movsb
das
icebp
outsb
stos
in
cmpb
lods
js
imul
mov
in
stos
mov
cmp
test
and
dec
xchg
cmc
mov
inc
imul
in
dec
lcall
xchg
pop
lret
sub
scas
sub
or
lcall
flds
aad
mov
movsl
cmp
ret
adc
push
push
jbe
dec
xchg
mov
pop
jno
inc
sub
mov
mov
int
push
pop
sbb
rcrl
sbb
pop
daa
sbb
mov
ret
imul
out
test
mov
out
xorl
aas
xor
xchg
cli
xchg
sub
enter
sbb
mov
jge
shl
xchg
fsubs
fisubrs
aad
xchg
es
mov
ret
cmpsl
push
sub
repnz
test
lret
jno
sbb
das
scas
xchg
outsl
pop
dec
sbb
mov
lret
nop
shrl
std
out
in
sub
sti
push
repnz
enter
sub
jo
ror
nopl
dec
sbb
cwtl
cmp
inc
fsub
pop
mov
push
add
loopne
sub
xchg
pop
sti
cmp
adc
movsb
push
jge
fs
stc
mov
add
pop
inc
faddl
jb
clc
xchg
push
pop
aaa
sti
sti
push
cld
adc
adc
push
in
les
leave
or
call
cli
pop
dec
push
ret
inc
pop
add
jecxz
roll
push
jg
pop
outsl
mov
mov
mov
insl
sahf
xlat
sub
dec
xchg
fwait
popa
mov
cs
push
mov
xcrypt-cbc
cmpsl
push
lods
push
sbb
mov
sarb
xchg
and
cmp
xor
iret
pop
fsubr
inc
xchg
loope
out
mov
adc
movsb
rcrl
pop
repz
mov
faddl
loop
dec
mov
sub
dec
loope
outsl
mov
cmpsl
jns
out
jne
cmc
cmp
imul
jg
dec
jns
xchg
add
push
in
mov
dec
fistps
adc
cld
arpl
adc
add
pop
cmp
lahf
adc
mov
addb
ret
lds
add
filds
xor
push
add
cmp
cld
xor
in
addr16
cmp
iret
push
cmp
shll
jnp
inc
pop
fdivs
sti
jle
out
outsl
dec
sub
pop
push
push
xlat
lock
jge
add
prefetch
or
rolb
cld
mov
sub
sahf
cmpsb
inc
cmp
pop
jmp
pusha
cmp
xor
test
int3
mov
cs
std
push
cmpsb
out
xchg
loop
cmp
mov
js
add
mov
aad
push
xor
add
pop
outsb
push
pop
mov
push
mov
sbb
inc
jecxz
lret
pop
cmpsl
ret
imul
test
dec
arpl
scas
pushf
xor
mov
push
std
ss
jle
mov
sarl
jecxz
push
je
in
cltd
sub
loopne
adc
rcl
xor
xor
test
cmc
mov
xor
mov
rolb
ljmp
mov
pop
push
adc
lea
push
cmp
movsl
xor
std
in
stos
and
xor
aam
jo
adc
push
unpcklps
loopne
js
nop
cmc
leave
cmpsl
inc
jmp
mov
es
rolb
push
fwait
mov
shr
in
pusha
xchg
push
aam
push
insl
add
scas
inc
fs
and
fildl
mov
push
mov
inc
lea
adc
and
and
cmp
out
xchg
inc
lods
xchg
xchg
and
dec
cmc
xchg
or
ja
push
aaa
call
fimuls
sbb
adc
and
or
icebp
icebp
xchg
cmp
dec
sub
sbb
gs
adc
sbb
push
adc
adc
sub
pop
push
fwait
test
test
mov
mov
adc
add
pop
cmpsb
aad
js
outsb
or
fnstcw
sbb
hlt
sub
cmc
in
lret
loope
adc
push
or
jle
cmp
js
sub
shrb
cmp
jb
xlat
push
xor
push
cmp
loopne
xchg
fwait
mov
jle
addr16
xchg
mov
inc
insl
mov
jle
xorb
sbb
mov
cmp
adc
and
push
sub
sub
fiadds
mov
push
sub
push
test
into
shl
inc
loopne
xchg
int3
data16
pop
xchg
xchg
pop
inc
sub
dec
xchg
dec
out
add
pop
mov
std
mov
dec
dec
sbb
add
lea
cs
add
sub
push
push
pushl
inc
loope
ja
xchg
test
push
mov
cmpsb
or
sbb
xlat
sub
cmp
xchg
out
cmovo
push
mov
cmp
xchg
cmc
inc
loope
div
fdivs
sahf
inc
mov
stc
aam
jmp
leave
push
out
in
insb
xor
mov
das
sub
andl
fistpl
movl
jno
imul
aam
rolb
fisttpll
in
cmpl
popa
cmpsb
outsl
push
lret
adc
call
or
loopne
pop
and
lcall
jbe
dec
sar
js
push
lods
push
sahf
ficoml
push
dec
jg
pusha
xlat
adc
loop
add
adc
sub
ret
les
mov
cs
pop
pop
std
popf
cwtl
outsl
or
ret
mov
xor
dec
xlat
inc
dec
cli
iret
ficoml
and
cmp
aam
dec
jl
or
bound
push
mov
mov
lods
or
imul
popf
and
xor
dec
dec
cmpl
cmpsb
cli
adc
or
adc
cs
rorb
movsb
xor
sub
jge
mov
pop
mov
jne
imul
cmp
fidivrl
and
out
sbb
arpl
xchg
jp
ficomps
mov
popf
push
xchg
sbb
cmp
mov
add
inc
sub
jbe
mov
jns
ror
nop
push
idivb
push
lret
popf
orl
scas
mov
subl
xor
mov
jge
adc
out
mov
fwait
or
sub
rclb
lds
or
sbb
jne
es
sub
jecxz
shrl
jle
xor
cltd
push
xchg
xchg
addr16
xor
add
bound
inc
out
dec
and
aad
add
and
daa
push
xchg
mov
ficoms
push
aas
pop
jo
int3
imul
jae
add
bound
ss
push
mov
inc
push
fucom
jge
loope
push
js
push
jmp
and
cs
mov
pop
rcr
and
jne
xor
inc
cli
hlt
xor
fldl
inc
js
push
add
cmp
movsl
mov
pop
jne
inc
pop
sbb
int
sbb
push
adc
imul
int
popa
mov
or
mov
js
into
xchg
and
xchg
pop
inc
xchg
call
pushf
arpl
jb
xlat
repz
cwtl
add
hlt
cli
add
jg
mov
das
rorl
daa
push
movsb
mov
and
fcoms
inc
cltd
or
fimull
mov
sub
inc
mov
sti
or
fcomi
sub
and
loop
enter
insb
mov
sub
xor
pop
repz
dec
mov
lret
frstor
int3
es
mov
jb
sbb
loop
ljmp
cmp
jo
push
movsl
loope
into
jp
bound
imul
push
xor
jo
cmpsb
icebp
inc
gs
push
out
int
push
xor
jbe
out
mov
xchg
or
or
rorl
jnp
sub
cmp
packssdw
mov
lahf
mov
add
mov
add
fwait
test
inc
jae
test
sti
pop
cmp
mov
push
hlt
sub
repnz
sbb
stos
cmp
xor
jmp
mov
cmp
sub
push
ret
imul
lret
cmp
mov
jge
cli
xor
inc
rol
push
dec
in
cs
hlt
into
in
or
add
xchg
arpl
sub
loope
push
and
test
cmpsl
je
sub
lock
data16
push
inc
mov
sub
out
cmp
jmp
push
jno
mov
sub
sub
sbb
jbe
mov
out
iret
ljmp
scas
popa
cmp
jg
mov
mov
jp
popf
sbb
xor
inc
dec
movsl
xchg
cmp
cmp
shl
subl
sub
mull
sub
mov
dec
shll
jecxz
mov
cmp
int
orb
mov
shll
mov
ret
push
mov
xor
inc
push
xchg
cs
addb
cwtl
aad
mul
out
jl
cmp
faddl
pop
lahf
or
hlt
inc
sub
lds
cli
push
mov
adc
jae
subw
mov
adc
icebp
mov
inc
mov
jge
insb
adc
xor
iret
mov
inc
sarl
int
pop
cmc
cmp
aam
ja
outsl
jmp
pop
mov
or
mov
sub
inc
inc
dec
sub
insb
lahf
out
sub
leave
xchg
xchg
hlt
lahf
lods
pop
jge
inc
sbbl
sub
push
xor
jmp
lods
sub
sti
adc
mov
inc
je
sub
mov
aam
data16
loope
pop
push
popa
fcomps
push
shr
lcall
mov
bound
fstp
dec
jnp
jg
cmp
rclb
push
stos
mov
dec
jecxz
xor
mov
dec
iret
ljmp
lock
leave
adc
jne
mov
mov
mov
cmc
loop
mov
les
loopne
arpl
inc
and
sub
je
ret
scas
bswap
mov
xchg
push
jae
add
fs
dec
pop
sti
sub
imul
sub
and
scas
int3
movsl
movsb
fiaddl
sahf
popa
dec
push
pop
push
sar
mov
jb
and
push
xchg
out
call
jecxz
sub
xor
adc
int
jle
xor
pushf
icebp
mov
add
cmpsl
test
jbe
jge
popf
jnp
mov
test
jg
pop
movsl
pop
cmp
dec
shll
or
daa
fdivp
cld
mov
mov
fdivrl
adc
jne
decb
push
push
in
imul
nop
pop
inc
fwait
pop
gs
jge
sahf
inc
push
adc
sbb
sti
dec
dec
push
rclb
sahf
lods
and
imul
mov
stos
sarl
adc
lods
into
xor
fisubs
push
sbb
dec
push
pop
xchg
dec
repz
xchg
adc
pop
inc
inc
test
xchg
add
and
pop
cmpsl
popa
loope
imul
into
loopne
jmp
lods
lods
data16
fdivrl
repz
arpl
sbb
adc
add
ret
stos
cmp
in
jo
outsb
mov
sti
dec
cwtl
adc
sbb
adc
add
scas
sub
orl
mov
mov
push
dec
sbb
pop
adc
and
clc
std
dec
cmp
xchg
push
or
cmpsb
xchg
sbb
stc
or
int3
jnp
pushw
lods
pop
je
nop
in
loop
cmpsl
test
sbb
in
fs
fcoml
mov
jle
pop
cmpsl
scas
mov
test
mov
gs
cmp
es
movsl
fs
inc
jg
xchg
jne
xchg
add
push
jmp
shr
pusha
into
in
mov
lahf
icebp
inc
inc
ljmp
add
in
arpl
inc
sub
add
push
shlb
push
or
dec
push
mov
mov
or
bound
enter
inc
mov
or
sbb
mov
sbb
sahf
orl
inc
jge
push
pop
enter
addr16
ljmp
xchg
subb
mov
xchg
xorl
mov
imul
push
pop
sbb
and
or
fildl
movl
lea
sub
push
mov
faddl
test
outsl
xor
jno
jp,pn
iret
andb
mov
addl
aas
dec
mov
jmp
cmp
enter
mov
jns
cmp
cmpb
mov
xchg
jnp
mov
mov
mov
lds
mov
jp
mov
ljmp
add
mov
mov
cmp
ljmp
cmp
and
adc
xor
pop
push
sahf
xor
or
subb
jmp
inc
std
lock
cli
in
cmp
xchg
pushf
mov
mov
and
inc
sub
cmc
cmp
dec
pushf
push
push
es
mov
mov
test
mov
out
sarb
push
xchg
mov
xlat
cmpb
inc
cmp
push
dec
inc
inc
xor
mov
enter
dec
and
repz
and
jg
icebp
jae
mov
cmc
sub
xchg
xchg
scas
aaa
scas
adc
or
inc
dec
pusha
mov
arpl
lds
push
dec
inc
jle
enter
test
adc
stos
sahf
lods
mov
ljmp
mov
insb
add
sub
adc
or
cmp
jecxz
adc
and
sub
nop
ret
sub
popa
aas
es
out
test
movsl
lahf
cwtl
adc
hlt
mov
inc
mov
jo
cltd
pop
xchg
push
dec
sbb
ret
and
or
push
inc
add
lock
enter
fxch
jecxz
sbb
fistps
jge
ret
jne
adc
insl
sub
mov
ss
mov
xchg
sbb
loopne
lds
pop
int
mov
xrelease
loope
or
and
jns
lret
daa
test
xor
fwait
scas
inc
sbb
ss
push
xchg
push
data16
into
and
int
jge
shrl
pusha
jmp
aad
shlb
aaa
loop
cmp
push
mov
sbb
leave
rol
dec
push
orl
cmp
ret
and
imul
jnp
cli
jp
test
adc
mov
and
pop
add
and
mov
jns
orl
insb
pop
xor
aaa
pop
dec
mov
sub
or
sbb
inc
dec
mov
mov
sbb
and
das
lods
iret
cwtl
je
inc
mov
dec
push
sub
jbe
scas
push
je
ret
dec
push
negb
jnp
push
leave
repz
sub
in
cld
mov
pop
and
mull
jp
dec
dec
test
add
int3
mov
xor
fistps
int
or
iret
mov
fists
cmp
xchg
lods
pop
jo
push
mov
push
jmp
fwait
xchg
sbb
adc
lods
and
orb
mov
mov
scas
insl
call
data16
fstl
daa
adcl
add
iret
or
xlat
dec
popa
jp
xor
jmpw
lret
iret
push
mov
jg
arpl
jbe
sub
shll
mov
cmp
sub
xchg
xrelease
bound
adc
adc
icebp
iret
push
fidivrs
push
mov
leave
lcall
adc
sub
outsl
sub
das
inc
lret
dec
jae
sbb
adc
scas
fdivl
sbb
pop
mov
lret
pop
out
push
add
push
sbb
icebp
out
cmc
dec
pusha
dec
cli
into
sbb
mov
cmc
jo
loop
es
cmp
xchg
sub
fwait
push
arpl
aaa
int3
or
out
iret
out
dec
arpl
cmp
clc
or
dec
call
push
movsl
fisttpl
es
clc
cmpsw
outsb
jae
int3
jp
fdivl
iret
and
adc
icebp
in
add
les
dec
clc
mov
lea
popa
push
mov
xchg
add
into
mov
out
adc
pop
fs
push
fwait
and
out
out
push
mov
pop
sbb
outsl
fldenv
push
stos
orb
mov
mov
and
int
xchg
mov
xchg
subb
sbb
dec
add
fidivrs
push
pop
test
ficoml
adc
out
pop
call
imul
pop
or
fsubs
sub
testl
fisttpl
sbb
dec
add
add
push
pop
es
xchg
out
ficoms
insb
and
mov
test
lods
js
mov
addr16
add
test
adc
or
xor
fwait
je
cmc
sbb
cmp
lds
aad
mov
lret
int3
xor
adc
aam
xor
stos
fsubl
in
push
int3
dec
xor
and
pop
cmpsb
jae
mov
cmp
daa
adcb
pop
push
aam
jae
sub
into
pop
mov
js
daa
sub
ret
and
icebp
jl
xchg
stos
lea
ds
loop
outsb
arpl
add
or
stos
rcll
mov
mov
cmp
lcall
loope
cmp
sub
mov
mov
cmp
and
enter
mov
mov
push
stos
les
xchg
std
bound
add
cmc
int
out
pcmpeqd
imul
cmp
push
fwait
lea
push
aas
les
lds
out
pop
xchg
mov
sub
or
je
std
adcb
cli
repnz
in
inc
js
clc
js
ret
cmp
pop
lret
or
sub
shlb
inc
insl
pop
cwtl
in
mov
add
inc
xchg
adc
out
fnstcw
lods
insl
mov
pop
lds
mov
pop
mov
jp
lret
sub
sbb
rorb
pop
cld
xchg
inc
xlat
movsb
pop
in
dec
shrb
mov
es
out
aaa
push
jp
aaa
test
repnz
fstp
fs
pop
movlps
add
inc
push
test
mov
pop
out
mov
sbb
in
repnz
xchg
dec
jecxz
push
mov
fucomip
mov
test
mov
jns
inc
out
pop
js
dec
cmp
ret
push
mov
mov
mov
add
sti
enter
and
ret
rcrb
pop
mov
sti
insb
mov
inc
push
sbb
subl
out
mov
nop
xchg
push
push
pushf
sbb
movsl
inc
dec
add
mov
jp
adc
sub
imul
and
movsl
clc
push
pop
aam
imul
cmp
clc
cmpsb
movsb
fdivs
nop
pop
xor
jecxz
shlb
cmp
jg
mov
lahf
out
jno
xlat
xchg
hlt
loopne
sti
andb
je
movsb
adc
push
jl
mov
js
cmp
pushf
repnz
loopne
fs
sti
lods
stc
lret
int
jl
shrb
push
mov
bound
dec
pop
adc
xor
dec
gs
xor
xchg
sahf
lea
dec
jb
outsl
or
cmc
or
leave
iret
fisubs
pusha
cmp
inc
pop
jle
shr
out
into
sbb
xor
cltd
push
icebp
insl
loope
dec
mov
gs
dec
fdivl
in
mov
mov
movsb
push
ret
out
mov
jmp
fldcw
adc
mov
jbe
int3
repz
neg
and
cmc
in
in
or
test
xchg
xor
in
sub
pop
push
ret
orb
mov
sahf
mov
xorl
popf
mov
jb
or
je
out
xchg
decb
add
fcoms
adc
mov
subb
push
mov
dec
lcall
mov
cmp
cmp
scas
movsl
xchg
test
push
cs
sbbl
aas
shl
fists
xchg
hlt
shr
xchg
lods
lret
or
push
jnp
dec
and
popf
insl
cmpsb
jmp
aas
movsl
add
push
bound
fsubp
pop
adc
mov
out
out
mov
inc
mov
ret
xchg
push
mov
mov
mov
add
stos
jbe
ret
sub
mov
pop
mov
insl
je
xchg
int
inc
xchg
clc
repz
cmp
mov
dec
rcll
ljmp
and
mov
push
push
mov
fs
int3
and
clc
xor
cwtl
out
cmp
sarb
test
push
add
pop
inc
push
adcl
pop
xchg
movsl
cmpsl
mov
in
lock
inc
sub
sbb
fnstcw
sbb
dec
pop
inc
fimull
and
push
inc
pop
mov
xchg
jae
jle
jp
sbb
movsl
test
mov
xchg
and
into
pushf
or
rorl
es
loope
out
xchg
and
ss
xor
xor
cmp
adc
pop
outsb
movsl
roll
insb
lahf
nop
xchg
stos
icebp
mov
int
jl
mov
xchg
sub
loope
mov
or
lret
orb
sub
les
shrl
stos
lds
xor
mov
outsb
out
jae
push
inc
push
fmull
mov
push
adc
lock
mov
or
sbb
xchg
pop
jns
dec
jl
add
and
loop
out
in
push
pop
test
mov
adc
lods
pop
fisttpl
or
lock
sbb
sub
adc
fcomi
or
pusha
out
stos
shrl
mov
mov
jns
scas
push
std
orb
jno
cmp
hlt
jno
ficomps
dec
mov
orb
sbb
inc
in
mov
xchg
movsb
outsl
add
out
je
jae
scas
pop
push
xor
mov
push
mov
fs
jmp
ret
ja
inc
xor
loopne
xorb
inc
pop
cmpsl
jb
mov
clc
mulb
mov
sub
rcll
cmpsl
mov
sti
add
xchg
stos
cmp
push
mov
and
push
xlat
push
dec
sub
leave
icebp
ret
cmp
xchg
mov
fsubrs
enter
xchg
mov
ret
lds
inc
fstpl
fs
jae
stos
jmp
ss
mov
adc
idivb
pushf
mov
jle
add
jne
inc
or
nop
push
mov
sahf
add
shrl
xor
test
out
in
jge
arpl
push
insl
cld
pusha
lea
ror
ja
sarb
mov
dec
or
clc
sahf
add
nop
mov
xor
in
xlat
ficompl
mov
aaa
jbe
sbb
fisttps
inc
in
jmp
call
push
dec
rcrb
pop
movsl
outsb
mov
mov
add
push
popa
add
push
inc
loopne
in
mov
loopne
xchg
leave
fsts
cmpsb
xor
leave
shlb
das
nop
push
sarb
aas
pop
add
adc
test
jne
jnp
push
das
dec
sbb
fstl
jmp
dec
enter
push
aad
mov
jbe
js
dec
cld
cld
xchg
push
push
sub
test
jno
jg
addr16
pop
and
addr16
sub
mov
js
test
mulb
jle
cmp
call
fsubs
int
arpl
push
jns
xlat
xchg
int3
mov
mov
adc
xor
out
pop
jle
shlb
xchg
sbb
push
scas
insb
push
out
gs
push
push
sub
cli
adc
or
fcomps
fwait
addr16
out
jle
adc
out
inc
lods
hlt
out
jnp
mov
arpl
xchg
lods
push
push
stc
cmp
rcrl
mov
or
cmp
jl
jecxz
decl
push
push
adc
push
jae
or
addr16
mov
mov
jae
inc
adc
adc
cmp
xor
fmulp
popa
fildl
shr
testl
pop
mov
and
out
push
inc
mov
lea
xlat
stc
out
push
scas
jb
ret
call
jns
dec
iret
dec
and
lock
fcmovnbe
fwait
in
mov
push
in
mov
jmp
je
lods
out
rcl
mov
add
push
cmpsb
dec
out
mov
xchg
pop
push
and
adc
test
inc
pop
movsl
into
lock
mov
loopne
loop
adc
inc
cmp
sbbb
adc
mov
outsb
js
add
push
fistl
mov
dec
mov
cs
sbb
jmp
cs
stos
mov
js
outsl
fistl
mov
movsb
cmp
cmp
out
sbb
fistl
lcall
and
rorl
jae
pop
adcl
sbb
inc
pop
cmp
dec
adc
jmp
scas
fists
jno
or
mov
aaa
ret
or
insl
fs
mov
xor
fcomp
sub
mov
mov
stos
pop
daa
ret
movsl
xchg
xor
jle
push
leave
js
xor
xor
inc
push
inc
or
mov
dec
cwtl
in
push
jns
adc
inc
sbb
cmp
jecxz
enter
shrb
les
daa
nop
sub
fwait
enter
lahf
mov
lea
push
rcrb
xchg
mov
xchg
inc
fs
inc
sbbl
mov
fld
les
je
in
ljmp
mov
sbb
add
dec
or
ds
rcll
pop
sahf
sbb
push
inc
sbb
inc
push
xor
add
fisubs
jle
repz
mov
inc
push
loope
jno
and
fsubl
lcall
outsb
sub
inc
in
daa
jbe
xor
iret
xor
inc
clc
lock
push
pop
outsb
jp
mov
movsb
cs
inc
gs
cmp
ror
pop
ss
mov
fsqrt
lahf
sub
or
add
scas
mov
int3
pop
sbb
fxch
and
out
cltd
xlat
es
nop
mov
push
adc
call
jne
int3
sub
sbb
cli
sub
aaa
pop
sub
adc
xchg
rcl
out
jne
adc
fadd
add
jle
sbb
imul
cmpsl
push
push
pop
mov
fldcw
sub
sti
pop
mov
jb
cmpsb
push
fadd
mov
mov
fcom
sbb
or
dec
adc
movsb
movsb
jp
fnsave
xchg
jp
jge
scas
les
aad
add
in
mov
std
or
into
mov
test
push
jae
xlat
push
imul
mov
aas
insl
dec
and
cmp
ss
nop
fisttpl
lods
dec
jb
mov
mov
adc
not
mov
dec
dec
loopne
xor
ljmp
loope
cmp
xchg
icebp
dec
push
mov
ljmp
sbb
nop
push
out
fdiv
adc
aas
addr16
mov
nop
in
fisubl
es
jo
dec
sub
adcb
mov
or
cli
mov
adc
xchg
xchg
mov
lret
xor
pop
jg
ret
push
jo
add
fs
push
inc
test
cmp
bound
mov
adc
imul
into
xchg
inc
xor
dec
bound
xchg
inc
pushf
leave
mov
add
movsb
xor
sbb
lret
or
das
cmp
repnz
iret
add
in
mov
sahf
and
and
mov
cld
fsub
into
mov
test
test
mov
add
and
stc
pop
sbb
insb
cmp
dec
popa
xchg
jge
push
notb
adc
mov
inc
pop
mov
repz
cmp
popf
mov
enter
into
gs
les
fistpl
pushf
jmp
mov
add
pop
xor
in
fnstenv
pop
movl
es
mov
rclb
push
xlat
or
and
pop
push
enter
mov
add
lret
idiv
push
cltd
cmpsb
stc
shlb
pop
xor
jnp
ret
mov
jns
cld
jge
pushf
lock
jge
push
push
in
or
mov
jns
push
cld
or
hlt
xchg
mov
fucomip
or
icebp
push
xor
inc
jle
cs
movsb
and
call
adc
xor
mov
jo
push
inc
outsl
addr16
icebp
ljmp
xchg
mov
lahf
xor
sbb
push
add
jbe
cmp
pop
pop
xchg
and
js
mov
xor
jge
ljmp
push
std
mov
add
test
jnp
mov
insb
and
jge
lock
call
sti
dec
mov
add
negb
movsl
ds
test
rolb
cwtl
insl
mov
ror
cmc
std
loope
add
or
inc
inc
cld
movsb
rorb
add
das
bound
xchg
scas
mov
xchg
jmp
push
cmp
and
adc
rol
cmpsb
xchg
sahf
jae
stc
cmp
jecxz
xor
xor
mov
pop
mov
dec
adc
gs
sub
insb
add
jns
sbbb
mov
test
lcall
xor
inc
pop
in
test
lea
stc
pop
add
mov
cld
fistpll
nop
inc
icebp
add
dec
jp
fcmovnb
mov
adc
loop
adc
loope
jg
dec
adc
das
sti
jbe
push
imul
or
fisttps
mov
imul
clc
je
fwait
test
stc
ret
lods
lahf
mov
push
xchg
sub
ljmp
test
les
scas
arpl
cmpsb
movsl
xor
pop
mov
pushf
jb
test
sbb
repz
fcompl
call
cmp
inc
ds
es
cmp
push
cmp
lahf
mov
sub
gs
xor
nop
xor
mov
ja
cmp
sbb
push
insb
push
push
lret
out
call
mov
addl
mov
mov
cmp
adc
inc
pushf
aad
sahf
push
or
dec
jmp
arpl
sbb
aam
smsw
das
sbb
push
mov
mov
frstor
lods
insb
cmpsl
add
dec
movl
lock
jae
pop
pop
pop
pop
dec
sub
mov
adc
push
pop
movsl
sbb
cmp
add
pop
xchg
repz
cmp
shlb
and
scas
cwtl
cmpsb
mov
xor
jl
and
sbbb
hlt
stc
stc
mov
pop
push
cmovp
push
jmp
popa
xchg
cld
sub
xchg
imul
adc
jb
lret
in
pop
dec
and
adc
add
mov
inc
mov
js
jge
jp
xor
lock
cmc
mov
cmp
out
fs
xchg
sub
sahf
cld
mov
or
push
dec
mov
cmp
ret
and
cmpsb
test
sbb
sbb
jg
das
inc
pop
outsl
call
shrb
xor
pop
jmp
mov
lahf
leave
mov
or
or
out
loopne
mov
mov
sub
into
lods
outsb
push
ss
stos
adc
jne
fnsave
mov
rolb
fdivrs
mov
jo
sbb
or
jb
inc
popf
sbb
cwtl
add
jle
cmpl
addr16
lahf
ret
fmul
insl
roll
mov
and
dec
push
mov
dec
orl
cli
add
mov
dec
inc
cwtl
imull
call
imul
mov
lods
pushf
nop
sub
cmp
sub
mov
lds
sbb
pop
jo
pop
lea
leave
rolb
add
outsl
jbe
adc
adc
enter
lds
fmulp
in
insl
hlt
or
jle
lcall
fcmovnbe
data16
sub
jo
xchg
subl
inc
sbbb
or
xchg
int3
lea
ds
call
mov
jo
pop
ret
int
fs
shl
stos
shll
cmp
dec
clc
mov
mov
aad
lods
jo
lods
xchg
arpl
scas
jl
cmp
xor
fdivs
or
mov
outsb
adc
pop
pop
iret
push
inc
negl
adc
or
inc
stos
xor
pusha
and
and
mov
and
vsubss
call
outsl
lds
mov
loop
rep
sbb
mov
cmp
in
sbb
test
mov
pop
push
or
mov
mov
repnz
xchg
jno
sub
xor
pop
sbb
xorl
sbb
scas
and
sub
inc
dec
cmp
jmp
jge
mov
arpl
jno
repnz
lea
lods
mov
test
add
aad
sarl
jne
mov
aaa
jle
out
mov
sbb
fadd
ljmp
lods
add
bound
scas
mov
push
mov
jmp
xor
loopne
mov
aaa
cmp
xor
mov
scas
test
mov
dec
icebp
or
in
sub
dec
mov
cmp
loopne
jbe
daa
lcall
ja
ficomps
dec
and
cmpl
jnp
mov
mov
dec
sub
inc
lret
je
imul
mov
sbb
popf
outsb
add
xchg
pop
lods
lock
inc
fs
cli
nop
enter
mov
clc
loope
pop
push
push
xchg
sub
imul
aam
ret
push
pop
outsb
rcrb
lods
mov
fwait
mov
in
insl
into
cmp
cmp
aaa
arpl
xor
lret
lcall
rclb
loope
sub
les
idivl
andl
xchg
clc
mov
jle
push
pop
popf
xlat
in
stos
xabort
fnsave
test
mov
pusha
fwait
cli
leave
push
push
sti
xor
mov
xchg
inc
test
add
sub
sbb
sub
pand
lods
std
xchg
add
mov
repz
inc
xor
lcall
pushf
bound
pop
cltd
sub
mov
or
sbb
mov
mov
repz
cmpsb
jg
lahf
mov
push
add
fnstsw
or
enter
fisubs
test
lret
jmp
hlt
or
cmp
fmull
dec
xor
rcl
jbe
fstp
push
cmp
insl
mov
pop
cmp
sahf
fnsave
xor
in
mov
and
out
xchg
and
movsb
into
int
int
jno
rclb
pop
cld
push
mov
dec
repz
movsb
or
jae
pop
mov
xor
add
cltd
inc
push
stc
cmc
mov
insl
sbb
jmp
xchg
jae
nop
lret
mov
push
inc
ljmp
lahf
sarb
dec
orb
mov
mov
inc
push
cld
jnp
xlat
es
fstps
sbbl
aas
sbb
xor
dec
inc
jnp
and
notl
cld
in
inc
add
cmp
push
ljmp
imul
mov
imul
popa
xchg
pop
xchg
pusha
jecxz
imul
lods
and
out
sti
xchg
mov
in
inc
or
dec
test
jge
xchg
pop
inc
mov
cmc
ljmp
aad
ljmp
gs
adc
mov
mov
out
ds
fdiv
mull
cli
sbb
ljmp
or
repnz
aam
mov
popa
pop
or
in
hlt
cmp
dec
cmpsb
lret
repnz
cmpsb
lret
arpl
add
lahf
fimull
cmc
addl
jb
and
in
inc
sbb
fld
or
xchg
xchg
scas
jmp
testb
xor
cmc
xor
sbb
out
xor
popf
sbbb
mov
in
pop
mov
pop
xchg
ret
xchg
int
arpl
imul
loope
and
xchg
mov
mov
jo
mov
xchg
jmp
inc
enter
call
dec
jnp
hlt
add
mov
enter
scas
scas
xchg
addl
mov
pop
aas
pop
mov
lahf
jns
out
int3
add
jmp
mov
je
mov
push
jp
pop
hlt
mov
fdivrl
dec
lods
test
jle
dec
add
add
mov
add
push
mov
xor
push
sahf
sbb
add
stos
pop
stos
sahf
cmpsb
mov
cli
add
ds
nop
sbb
or
lock
bound
pop
pushw
jb
lock
test
inc
and
adc
and
addr16
aam
and
lods
dec
sbb
dec
push
and
xchg
ja
bound
jg
inc
and
enter
cmp
xlat
test
mov
insl
cmpsl
push
loop
mov
dec
push
shll
xchg
mov
daa
xchg
cmpsb
xor
and
or
mov
call
jne
scas
inc
gs
cmp
push
in
inc
repnz
scas
mov
inc
sub
jne
insb
outsl
sub
sar
dec
inc
lds
scas
aas
pop
add
push
pushf
adc
sbb
add
cmp
pop
call
xchg
pop
inc
aad
fistps
shlb
sbb
mov
out
pop
jge
sbb
cli
inc
cltd
or
fbld
push
mov
cmp
mov
mov
or
mov
in
and
or
in
xchg
add
into
cmc
sub
outsl
dec
pop
push
shl
dec
test
sbb
jns
jl
scas
scas
mov
push
aas
jnp
xchg
pop
lds
cmp
xor
rcrl
ficoml
dec
loopne
sub
pop
imul
mov
sbb
addr16
xor
sbb
push
push
ficoml
cmp
shlb
ljmp
cltd
rolb
adc
adc
shrl
add
cmc
rol
or
and
mov
mov
inc
and
xchg
xor
adc
mov
mov
xchg
jne
dec
mov
dec
xor
xchg
scas
xor
xlat
pop
mov
or
fstpt
add
pop
in
fdecstp
inc
movsb
lahf
push
adc
js
repz
sbb
and
pop
test
imul
or
rcl
lahf
and
enter
hlt
cwtl
add
and
add
in
fidivrs
sbb
mov
into
nop
addr16
movsb
dec
test
sbb
inc
lods
arpl
lcall
jae
or
or
pushf
push
popf
fldcw
cmc
stos
or
push
icebp
out
mov
icebp
js
test
jp
pop
dec
ljmp
insl
adc
hlt
bnd
adc
lret
mov
aas
shlb
push
lods
push
add
cmp
outsb
jne
arpl
xor
jge
and
dec
cmp
lret
aad
cmpsb
out
xchg
mov
mov
dec
fxch
in
into
fdivrs
nop
and
jmp
es
xor
icebp
xlat
mov
adc
pop
cmp
popa
mov
pop
fidivrl
sarl
push
pusha
dec
std
mov
push
out
clc
mov
add
or
push
cmp
fs
inc
repz
adc
jbe
inc
push
fldenv
cmp
vpandn
push
mov
dec
pavgb
test
jp
push
arpl
pop
add
leave
mov
pop
clc
out
dec
mov
cmp
jmp
push
xchg
loop
pop
jmp
rcl
jae
aas
out
fisubrs
cmp
jle
sbb
cmpsl
das
mov
dec
pop
cltd
add
inc
xchg
jnp
scas
pop
push
mov
dec
lahf
lret
cmp
fmull
xorb
pushf
lcall
sti
mov
pop
cmp
daa
outsl
inc
push
into
or
xor
shl
in
jo
sbb
xor
push
xor
adc
lea
mov
movsb
adc
lods
cmp
push
in
insl
and
add
xor
push
xor
lods
in
scas
clc
iret
jbe
rcll
adc
repnz
outsl
out
sub
fcompp
lret
dec
shlb
ja
dec
fcoml
fidivl
fbstp
popa
inc
xchg
clc
popa
inc
and
ja
jno
es
mov
jo
or
ds
out
outsb
and
sbb
jecxz
sbb
out
imul
add
dec
inc
pushf
inc
inc
mov
ss
dec
push
sahf
push
lods
dec
daa
sti
xchg
sarl
push
repnz
imul
sbb
test
addl
fldenv
jge
xchg
xchg
jl
call
jmp
or
aaa
xor
xchg
int
cmp
test
test
sub
mov
fstpt
xchg
rclb
xchg
pop
xor
divl
scas
mov
xor
xchg
mov
out
mov
ret
inc
pop
mov
popf
inc
inc
inc
mov
sbb
aad
rorl
mov
xor
sti
xchg
test
movsl
cmp
push
xchg
sub
and
bound
adc
or
cld
imul
push
mov
cmpsl
out
sbb
mov
push
xchg
leave
xchg
xchg
push
xor
jle
xlat
mov
loop
mov
mov
call
push
stos
sbb
pop
push
adc
ja
out
sub
adc
imul
in
pop
dec
in
popl
xor
outsb
into
sti
fnsave
xor
mov
out
lcall
adc
fists
sub
jg
cmp
adc
inc
jbe
ret
xchg
push
push
dec
lods
icebp
or
rol
nop
pop
xchg
jle
push
lret
insl
lret
imul
mov
fidivs
mul
dec
and
sbb
xchg
inc
mov
out
mov
inc
pop
xor
repz
stos
aam
pop
les
cld
mov
movsb
xchg
out
lret
scas
aaa
ja
test
mov
lcall
dec
mov
sbb
mov
repz
arpl
inc
mov
idiv
out
push
insl
push
push
adc
pop
stos
les
cmp
adc
jno
in
ljmp
in
test
and
mov
pushf
dec
jmp
mov
sbb
push
xchg
and
sub
aad
enter
jnp
push
int3
outsb
dec
mov
add
jmp
scas
or
ficompl
aad
mov
out
xchg
jge
mov
dec
sub
dec
in
sub
aad
inc
dec
sbb
nop
push
push
je
pushf
cmp
pop
ds
xchg
and
mov
insl
pushf
pop
push
add
sbb
add
pusha
imul
hlt
aad
int3
int3
daa
test
stos
and
testb
cld
and
out
fildll
adc
or
mov
gs
decb
and
jl
inc
adcl
dec
cmp
add
xor
sub
rorb
icebp
or
out
test
shrl
int3
pmaxub
subb
and
xchg
aad
mov
pop
pop
aam
aas
jg
add
inc
stc
or
insl
test
cwtl
jns
inc
or
inc
mov
sbb
pop
mov
imul
cmpsl
or
or
pop
pop
jmp
clc
mov
mov
loope
test
clc
jb
sub
mov
ja
mov
push
daa
insb
stos
push
test
and
add
out
adc
cmpsb
pop
jle
popa
lcall
je
adc
les
jo
mov
pop
sub
stos
or
enter
jl
mov
add
das
sar
lahf
pushf
jg
inc
push
out
std
mov
repz
mov
adc
lcall
push
pop
cmpsb
rclb
mov
pop
imul
sub
mov
jbe
inc
gs
mov
jnp
les
aam
addl
loopne
cltd
ljmp
outsl
sub
mov
and
jp
js
pusha
mov
add
out
pop
xor
loop
outsb
movsb
push
into
mov
mov
mov
xchg
xchg
fidivl
jl
push
push
movsb
ja
push
cmc
jecxz
mov
insl
js
leave
cmp
mov
sbb
lds
cltd
jae
sbb
iret
sarb
pop
xchg
ret
push
and
ds
into
push
mov
sub
sub
sbb
xchg
cwtl
cmpsb
add
jne
out
in
fucomip
adc
aad
xor
movups
sub
pop
into
jno
loope
fxch
sbb
ljmp
sub
mov
js
icebp
mov
mov
mov
sti
or
cmp
adc
sbb
or
and
std
pop
loopne
daa
or
sarb
out
pop
sub
lock
pop
pop
and
adc
stos
cmpsl
imul
jl
seta
xchg
inc
xchg
sbb
jb
dec
cmpsb
jmp
or
jecxz
aas
inc
iret
inc
push
insb
mov
aad
sbb
cli
xchg
mov
mov
xchg
out
sbb
mov
cmpsl
pop
and
psubd
imul
icebp
cmpsb
loopne
dec
xchg
pushf
rcl
fidivrl
mov
or
stos
outsb
fwait
scas
cld
mov
and
jmp
in
mov
cmc
xor
cmp
push
xchg
xchg
push
cs
and
sahf
xor
cmp
fdivs
xor
rcl
jno
push
sbb
dec
insl
xorb
movsb
sub
mov
negl
ljmp
xor
dec
sti
ret
lods
sub
add
push
dec
dec
ficoml
hlt
repnz
iret
add
xchg
dec
push
inc
call
shl
int3
insl
mov
jbe
sub
cmpsl
sbbl
pop
mov
arpl
clc
ljmp
mov
push
or
ret
outsb
outsl
pop
pop
loop
lods
xchg
out
das
sub
imul
or
ss
jmp
sbb
push
scas
scas
cmp
outsb
movsl
movsl
arpl
add
sbb
popa
mov
xor
aad
mov
push
push
out
sahf
mov
mov
sti
ja
sub
or
inc
pop
cmp
in
into
cmc
insb
and
push
xor
pusha
add
scas
cli
jmp
cltd
jb
dec
and
pushf
xchg
adc
mov
sub
pop
dec
ret
insb
inc
scas
loop
xchg
fsubl
mov
pop
xchg
inc
fnstcw
insb
sub
mov
jl
test
pop
or
push
mov
scas
mov
or
adc
clc
mov
sub
sub
stos
add
jae
push
dec
xor
adc
arpl
addb
mov
gs
std
add
pop
xor
adc
lret
fwait
mov
in
call
dec
shrl
inc
jge
stos
sbb
pusha
pop
in
in
sub
andb
xchg
sbb
inc
fiadds
scas
inc
je
insb
xchg
add
jb
jbe
push
lahf
cld
loopne
imul
shl
pop
repz
and
out
out
xor
repnz
push
mov
jno
repz
mov
fs
or
sub
xchg
mov
sbb
into
inc
jns
fsub
pop
sbb
pop
adc
xchg
je
add
inc
rcrl
jns
mov
gs
int3
sub
faddl
sub
mov
jno
js
pop
xor
dec
cld
push
and
int3
push
inc
sub
imul
std
inc
leave
xchg
xor
jg
rorb
ret
sbb
repnz
cmp
cmp
sub
xchg
cwtl
jno
xlat
sub
ficomps
data16
lret
inc
rcrb
ret
sub
push
jae
fadds
sbb
lret
dec
mov
in
and
fsubs
mov
lcall
sub
jp
pop
mov
int3
int3
imul
jae
pop
sbb
icebp
and
or
or
and
addb
leave
int3
btr
or
sub
out
inc
cmp
hlt
dec
xor
mov
mov
or
sbb
pusha
int3
loopne
in
mov
or
sbb
daa
adc
jecxz
or
in
sbb
fs
mov
jb
mov
mov
add
push
pop
mov
je
sarl
dec
lea
mov
pop
pop
or
sbb
sbb
xor
mov
xor
rorb
adc
loop
inc
cmp
xchg
ja
fidivs
mov
out
adc
int
xchg
stos
mov
dec
dec
xor
jbe
imul
aaa
mov
dec
addr16
xorl
sbb
sahf
xchg
scas
subb
outsb
dec
sub
dec
iret
jl
push
dec
mov
and
jmp
repz
jecxz
jle
roll
adc
cmp
loopne
lcall
repnz
pop
dec
repz
mov
push
ror
into
dec
inc
mov
or
mov
ror
test
mov
pop
inc
push
test
mov
xchg
test
push
sahf
and
cli
stos
int3
test
sub
enter
movsb
outsl
sbb
mov
jle
mov
subl
dec
push
pushl
sbb
scas
int
inc
push
and
roll
nop
fs
les
push
ret
and
xchg
dec
mov
jecxz
pop
jmp
imul
add
mov
mov
pop
dec
lcall
and
jnp
fnstcw
jns
sbb
lret
test
mov
clc
cmc
cmpsl
sahf
add
jp
sbb
cmp
mov
adc
and
cmp
xchg
xchg
mov
sbb
xor
jnp
mov
inc
sbb
inc
outsl
cltd
test
cmc
je
ja
mov
mov
jp
shrl
add
mov
aaa
fadds
fcomip
and
push
fwait
sarb
mov
insb
xchg
pushf
dec
cmp
xlat
call
mov
fisubrl
sbb
imul
pop
dec
daa
sbb
js
pop
cmp
and
fbstp
adc
xor
mov
push
jae
es
lcall
cwtl
add
jae
fldenv
xor
je
mov
add
mov
lds
vphaddubw
shlb
mov
add
out
idivb
fstpl
mov
push
pmaxsw
xor
movsb
or
push
lea
es
mov
xlat
xchg
xor
cmc
push
stos
fwait
pop
flds
pop
pop
xchg
mov
into
lods
sub
mov
addr16
aam
jnp
test
daa
mov
test
lret
pop
sub
mov
push
dec
in
add
xchg
xchg
fisubrs
icebp
ror
xor
mov
inc
out
jb
pushf
mov
cli
jae
jcxz
push
lret
jmp
gs
ret
dec
jbe
out
adc
jnp
mov
and
mov
xchg
cmpl
xchg
ret
aam
jbe
mov
mov
lock
and
arpl
dec
test
xor
pop
and
test
jg
rcr
call
cltd
aas
shll
mov
pop
lea
cmp
inc
pop
sub
jl
aaa
arpl
ffreep
ret
mov
mov
decl
dec
xchg
int
sbb
mull
mov
sbb
and
xor
push
out
jle
in
sub
inc
mov
pop
aaa
push
in
jbe,pt
and
or
loopne
fstpl
daa
push
inc
mov
daa
sti
mov
test
push
popa
and
iret
iret
lods
cmpb
jecxz
or
mov
arpl
mov
pop
mov
aaa
sub
or
cmc
push
dec
push
ja
loope
dec
xlat
sub
filds
lcall
test
cmp
addr16
mov
and
xor
sbb
jmp
add
sub
repnz
jg
mov
mov
hlt
addr16
cli
stos
sbb
insb
nop
push
pop
mov
out
mov
cmpl
xor
fst
fbld
enter
adc
mov
ss
cmp
adc
das
ljmp
outsl
in
lea
add
cmp
jnp
imul
leave
cwtl
jmp
inc
ja
jmp
ficoms
sub
cwtl
xchg
inc
or
mov
cmp
xor
pop
xor
nop
xor
rorb
sahf
fst
pop
push
adc
mov
int
lods
and
xchg
int3
inc
xor
std
xchg
lods
into
inc
je
pop
inc
or
xchg
xlat
mov
push
test
fdivs
pop
aam
subl
lcall
dec
arpl
out
push
test
cmpsl
jmp
push
xorb
gs
dec
xchg
mov
lret
mov
mov
xchg
mov
and
push
lods
out
addr16
loop
sbb
add
cwtl
sub
mov
es
in
xchg
mov
lods
ja
shll
xchg
popa
jo
inc
add
hlt
fsub
push
ljmp
popf
lcall
inc
dec
xchg
inc
xor
pusha
sarb
nop
mov
sub
in
mov
sub
jge
or
jae
or
data16
jecxz
cmp
pop
mov
mov
int
sti
scas
iret
push
pop
call
adc
aam
insl
ljmp
inc
push
fidivrs
or
sbb
pushf
mov
leave
mov
out
out
testl
out
lock
cmc
or
enter
test
lea
mov
xchg
cmpb
jnp
arpl
imul
rol
mov
dec
repz
pop
js
int3
xchg
mov
adc
cli
mov
pop
sub
insl
pop
sbb
icebp
lea
nop
mov
ljmp
sub
xchg
aas
test
scas
outsb
or
out
adc
xchg
mov
int3
lcall
test
insb
mov
jle
pusha
repnz
aaa
xor
xchg
fcomi
scas
cmc
jp
dec
push
mov
test
mov
call
sbb
xchg
pop
jnp
xchg
idivb
lds
sti
jnp
push
xchg
test
xchg
sbb
les
aam
lods
cmp
icebp
adc
mov
sbb
fdivrp
inc
pop
pop
sahf
into
imul
jle
mov
mov
sub
iret
xchg
xor
repz
call
mov
mov
sub
loopne
inc
das
insl
ds
or
insb
in
ret
cmp
cmp
or
mov
out
cmpsl
adc
filds
xor
mov
cli
test
ret
jp
xor
jl
mov
push
adc
mov
xor
fs
rcll
shrl
inc
pop
or
test
inc
movsb
jg
loope
pop
in
in
sub
test
jo
repnz
add
test
mov
mov
jb
mov
lret
or
xchg
pop
fimuls
mov
lods
shlb
pop
push
dec
bound
outsb
adc
jmp
test
clc
or
jnp
and
add
jg
andl
test
iret
clc
leave
dec
inc
movb
mov
mov
negl
or
xchg
xchg
ljmp
leave
fstl
vphaddubd
int3
cmp
jge
push
jl
fsubrl
cs
jmp
add
stos
out
xor
popa
mov
mov
loop
lea
clc
adc
jns
data16
add
testb
cmpsl
test
pop
and
pushl
aam
add
xor
push
push
xchg
cli
xor
add
imul
shrl
imul
jmp
aas
arpl
mov
sbb
adcb
or
jb
shl
iret
mov
ret
scas
rolb
rcr
push
cmp
scas
jle
sub
pop
enter
push
fsubp
inc
outsb
dec
or
sti
jl
loop
mov
inc
lret
in
adc
imul
ljmp
std
mov
jmp
in
jb
push
inc
je
push
adc
jb
xor
in
jecxz
inc
pop
addb
xorl
pop
scas
push
sub
pmulhuw
mov
or
data16
add
xchg
mov
jns
dec
mov
ljmp
ljmp
ret
push
aad
inc
es
mov
pop
adcl
mov
shrl
xlat
mov
and
jge
mov
fisttps
mov
int3
test
push
dec
mov
xor
sub
in
dec
aam
mov
xor
xchg
packssdw
out
popf
push
mov
push
pop
push
xchg
cmp
leave
push
mov
sbb
stos
mov
out
stos
mov
pop
mov
scas
dec
pop
stos
test
mov
test
out
xor
mov
mov
mov
dec
scas
out
cld
stos
stos
cmc
js
push
sub
popa
and
sar
icebp
push
jp
aam
xchg
je
dec
int
jg
sbb
lret
sbb
lea
aad
aam
fldcw
sub
pop
cmp
pop
ret
out
iret
pop
cmp
fdivp
scas
ret
iret
pop
sub
inc
xchg
cmpsb
pop
hlt
sti
popa
ret
call
pxor
mov
outsb
xchg
mov
lods
pushf
mov
xor
xchg
leave
xchg
pop
test
mov
orl
fnsave
adc
pusha
fisubrl
orl
arpl
lock
pop
push
fldcw
shll
ljmp
dec
xchg
sahf
cmpsb
push
daa
cmpsl
sbb
jg
pop
js
pusha
aaa
add
cmc
xchg
jecxz
mov
lock
je
fisubrs
jbe
inc
aaa
pop
xchg
cli
and
pop
imul
call
sbb
outsb
push
mov
and
push
test
mov
cmc
pop
dec
and
adc
sub
fdivrl
icebp
pushf
repnz
jle
adc
pusha
add
mov
pusha
rcr
push
sub
xchg
jb
pop
mov
stos
xor
lods
push
out
xchg
mov
jle
rorl
mov
rcr
mov
push
add
in
or
cmpl
mov
adc
or
xchg
roll
mov
subl
test
outsb
xchg
les
lahf
ret
movsl
idivb
sarl
cmp
push
mov
out
imul
mov
add
inc
add
xchg
adc
mov
orl
leave
les
imul
push
pop
les
mov
movsl
sbb
out
xchg
call
cmpsb
mov
push
test
addr16
xor
fnstcw
mov
jecxz
repz
mov
test
packuswb
cmp
xchg
mov
jl
xchg
leave
sbb
sbbl
int3
cmc
loop
or
adc
mov
testb
adc
cmp
mov
push
mov
jnp
ss
sub
loopne
dec
ret
test
jp
popa
movsb
push
fnsave
int
data16
aam
data16
lods
pop
push
pop
pop
pop
mov
mov
fstpt
xlat
xchg
cmc
cmp
shrb
pop
iret
cld
rorb
lods
push
insl
cld
mov
and
aam
in
repnz
lea
es
add
push
dec
ds
mov
push
xchg
mov
dec
jno
gs
sbb
mov
fldt
popf
in
nop
push
mov
call
outsb
push
lods
test
in
mov
sub
ss
mov
rclb
pop
rcrl
cli
pop
xchg
testl
jecxz
or
mov
inc
cld
jg
cmpb
and
jle
push
mov
addr16
pop
movsb
shrl
das
bound
loopne
ds
push
inc
push
dec
aad
or
mov
sbb
xchg
inc
sbb
addr16
jecxz
or
dec
mov
divb
sub
xor
gs
mov
fcoml
and
cmpsl
fwait
repz
xlat
call
iret
sbb
insl
mov
scas
xchg
mov
js
push
sbb
push
cmpsb
lahf
push
ljmp
xchg
inc
cmpsl
call
out
xchg
sbb
repnz
jae
push
adc
in
fistl
add
movsl
repz
lea
inc
aaa
int3
lock
psubsb
mov
addr16
xchg
jne
testl
pop
xor
dec
imul
and
int3
lret
xchg
in
mov
cmpsb
adcl
jecxz
mov
pop
sbb
scas
jmp
daa
je
mov
or
lea
sub
sbb
or
xor
sub
ja
loopne
pusha
ds
icebp
jae
push
andl
jns
stc
mov
leave
data16
mov
sbb
ret
xor
lods
inc
lock
sarb
sub
aaa
mov
add
sbb
cmpsb
mov
push
mov
push
push
ret
sarb
adc
fmulp
pop
syscall
xchg
rorb
pop
lock
inc
push
pop
inc
movsb
push
das
jecxz
xor
dec
movsb
flds
imul
out
mov
cs
icebp
adcb
adc
int3
inc
mov
fdivl
push
inc
testb
stos
xor
popa
daa
fidivs
mov
xchg
or
rolb
inc
sub
xor
or
inc
fcoms
cmpsl
xor
inc
mov
ret
sti
js
adc
lcall
xor
iret
mov
insl
loop
pop
ret
add
iret
test
xchg
test
jmp
and
aaa
mov
adc
hlt
mov
enter
add
daa
and
jo
cmp
fs
push
cli
icebp
mov
subl
mov
daa
fwait
inc
xor
adc
popf
or
addb
or
dec
mov
xchg
aaa
sbb
fldt
and
fdiv
loopne,pn
insb
inc
sbb
sub
and
lea
mov
int3
inc
lods
inc
fwait
lds
sbb
xchg
es
xchg
xchg
mov
jle
push
ja
clc
aas
xor
repz
pop
mov
or
icebp
mov
jnp
stos
mov
outsl
lahf
fistpll
xchg
push
xchg
call
push
decb
mov
ret
std
mov
icebp
data16
loope
repz
and
repz
fisttpl
mov
sbb
jb
pop
lea
sbb
mov
sub
inc
push
jecxz
mov
cs
adc
dec
jb
fwait
mov
ficoml
test
test
sub
mov
popl
sub
orb
movl
add
leave
inc
popa
imul
xor
pushf
mov
sbb
cmpsl
cmpb
mov
and
cmc
addr16
aad
mov
enter
mov
ljmp
pop
jb
cld
pop
sub
cltd
lds
push
movsl
bsr
cld
add
sub
test
aad
cmp
adc
xor
and
mov
sub
push
leave
sub
fistl
inc
inc
xor
daa
push
idivb
iret
add
inc
push
mov
out
dec
js
loop
mov
mov
inc
outsl
rorb
jp
sub
xor
fldenv
sti
data16
test
std
xchg
jne
sbb
out
leave
mov
ljmp
xor
adc
in
cmp
sbb
cli
mov
lcall
test
xchg
pop
inc
sub
sbb
adc
mov
test
sarl
in
xlat
jp
loope
test
icebp
test
jl
xor
cli
lea
out
push
push
jg
loopne
lahf
lock
pop
jb
popf
push
add
pushf
push
cmc
ret
cli
arpl
stc
mov
mov
pop
loopne
mov
xor
pop
rorb
pop
or
adc
rolb
ss
pop
js
mov
mov
cmp
mov
jecxz
pop
andnps
ds
rorb
cmp
out
mov
lcall
jp
jl
shl
scas
sti
or
sub
jnp
and
rclb
leave
loope
add
popa
sub
into
mov
sbb
cmp
jg
mov
or
pop
sbb
ss
mov
cmpsl
jns
push
in
test
dec
mov
jp
aas
inc
pop
aaa
lea
mov
sub
mov
cmp
cmpsb
sbb
ja
mov
dec
xchg
add
pop
js
cmpsl
arpl
pop
xor
fbld
ret
dec
cmp
mov
inc
or
lret
push
pop
xchg
in
or
mov
mov
iret
lds
push
dec
jge
dec
sub
sub
mov
pop
pop
daa
or
pop
fs
ds
cmp
cmpsl
pop
jns
sub
sub
iret
int
mov
outsl
ficomps
fidivs
insl
in
pop
cmp
xchg
sub
mov
cs
mov
arpl
lea
mov
xor
rol
cltd
pop
test
cld
mov
std
ret
out
scas
arpl
sub
iret
fs
cmp
push
js
xor
inc
sbb
pop
into
sub
js
push
or
jns
push
cmp
cmp
es
xchg
sbb
inc
pushf
sub
xchg
mov
fimull
in
cltd
lret
cltd
scas
int
fidivs
fidivs
cmp
xchg
movsl
adc
pop
enter
lock
loop
and
sti
aad
mov
pop
jnp
testb
push
mov
pop
sahf
adc
pop
fisubs
mov
cmpb
stc
scas
fildl
ret
or
jae
push
ja
dec
jg
ret
fcmovne
mov
and
or
mov
mov
adc
push
les
into
out
outsb
test
cmpsb
lds
fistps
sbb
lcall
inc
and
cmp
jl
filds
shrb
add
imul
bound
mov
xorl
xsha1
cmpsb
mov
shlb
sbb
mov
daa
mov
pop
adc
shll
dec
movsb
dec
cmp
fs
sahf
adc
inc
sar
loopne
push
add
mov
cmp
imul
aam
add
or
xchg
shll
stos
mov
popa
pop
arpl
outsl
fs
call
mov
xchg
pop
in
rorl
pop
sub
sbb
inc
inc
data16
bound
or
adc
mov
sbb
jo
mov
out
iret
fldcw
sub
xor
dec
test
jge
sbb
pop
cmp
jge
mov
test
and
mov
mov
scas
dec
sahf
xchg
mov
inc
inc
and
out
iret
jb
push
imul
sub
mov
js
jge
bound
pop
sub
fnstcw
xchg
xchg
sbb
adc
sub
outsb
or
mov
or
dec
pop
dec
data16
ret
aaa
dec
adc
mov
pop
push
adc
cli
ret
cmp
mov
sbb
ss
jns
xlat
in
mov
fwait
dec
aas
loopne
pusha
pop
je
insl
mov
insl
pushf
xlat
push
mov
mov
inc
xchg
out
pop
imulb
adc
pop
aam
jb
inc
icebp
sbb
arpl
out
test
xchg
add
or
call
das
mov
mov
jnp
mov
jle
arpl
sbb
ss
mov
mov
stos
leave
pop
and
shrb
and
xor
cmpsb
pop
stos
jbe
and
inc
aaa
enter
js,pt
flds
push
jle
sbbb
push
xchg
bound
sub
add
jmp
dec
ljmp
ds
stc
sub
out
fidivl
cltd
movsb
add
lea
push
das
subb
js
icebp
push
mov
aas
insb
push
cwtl
aas
repz
leave
es
aam
in
test
pslld
jg
stos
or
fisubs
mov
mov
mov
xchg
movsb
push
lock
call
jge
push
push
adc
mov
xchg
mov
inc
sbb
lods
push
sahf
mov
add
loopne
and
xchg
xor
aaa
fdivs
pusha
repz
movsl
xor
cmpsb
mov
repnz
xchg
or
cmp
pop
lods
ljmp
mov
cmp
push
add
lods
int3
ds
mov
or
push
push
dec
pop
inc
inc
lds
rol
adc
xor
pop
push
ljmp
and
out
enter
sub
xchg
lcall
pop
data16
cmp
adc
ret
cmpsl
inc
mov
negl
add
nop
cs
xchg
popa
push
pop
sub
mov
mov
inc
daa
xor
pop
push
cmpsl
dec
sbb
mov
cmp
sub
jp
dec
aad
es
add
ds
popa
sbb
aaa
jno
cld
shl
pop
cmp
mov
xchg
js
adc
je
or
push
addr16
ret
mov
icebp
jnp
sbbb
ficompl
cmp
sbb
xchg
testb
sub
and
xlat
jo
scas
daa
push
testl
mov
imul
xlat
jne
ret
dec
je
rcrb
push
sbb
sbb
mov
dec
roll
or
pop
cs
jo
push
and
pop
stc
sbb
add
fnsave
adc
pop
mov
cmp
and
les
and
das
push
in
das
fstl
pop
xchg
call
dec
jo
mov
sbb
lock
xor
dec
jmp
lret
sub
enter
inc
lret
or
mov
jge
rcrl
push
mov
xchg
das
in
cmp
jecxz
mov
and
ror
sbb
adc
mov
insb
xchg
int3
jno
fistl
sbb
rcrl
outsl
gs
mov
add
cld
adc
enter
rolb
dec
cmp
pop
pushf
mov
leave
jmp
push
negb
push
fwait
adc
shrl
or
stc
imul
imul
mov
mov
lret
repnz
test
pop
add
jecxz
pop
clc
pop
jb
hlt
jnp
imul
push
sbb
pop
cmp
sbb
mov
lret
cmp
push
sub
dec
cmp
sub
in
inc
es
lods
or
push
fdivl
dec
sarb
test
mov
jl
mov
add
pop
adc
ds
push
imul
sub
cmpsb
popa
xchg
xchg
loop
nop
ret
in
jbe
pop
outsb
std
test
add
jno
pusha
lods
outsb
data16
ret
repnz
inc
xchg
lahf
test
lret
cmp
and
rclb
push
lret
adc
ret
jno
mov
pop
mov
cmp
xchg
stos
repnz
popa
jb
cld
enter
notl
fisttpll
fsubrp
cmp
inc
mov
xor
mov
js
xchg
jmp
in
std
xor
mov
fsub
dec
push
push
gs
ret
aad
addr16
mov
push
daa
push
scas
fsubrs
hlt
inc
int3
inc
insl
imul
ljmp
xchg
pusha
mov
pop
xor
xchg
cmp
or
std
xorl
dec
fucomip
sti
testb
push
popa
stos
pop
in
ficomps
and
mov
add
pop
and
dec
in
dec
das
aaa
daa
into
cmp
imul
mov
fdivrl
sub
out
pusha
sbbl
shlb
in
dec
shll
xor
pop
cmc
jae
mov
dec
scas
pushf
xchg
push
out
or
and
jmp
xor
mov
in
push
or
ljmp
loope
ficoms
in
cmp
cmc
push
pop
inc
sbb
scas
sbb
out
rolb
sarl
rolb
je
cmp
jb
in
fs
rcll
int
jo
int
adc
loopne
and
leave
mov
scas
fsubrl
int3
loope
sbb
es
jmp
mov
out
dec
inc
adc
fstl
inc
shr
jae
test
lds
pop
cltd
ret
dec
inc
mov
dec
decl
xchg
bound
ret
leave
mov
xchg
push
sbb
sub
mov
pop
aad
or
aam
inc
aad
sub
dec
nop
mov
sti
aad
in
xchg
int
cmpsl
mulb
mov
adcl
jecxz
sbb
jecxz
popf
or
cs
push
pop
out
mov
aas
push
inc
out
xchg
sub
add
and
cli
inc
loope
and
outsl
sub
addr16
mov
das
push
add
sbb
and
clc
mov
mov
movsb
xchg
ror
popa
call
inc
pop
dec
test
adc
notb
jbe
movsl
dec
push
jb
addb
es
cmp
mov
bswap
xchg
push
cwtl
hlt
mov
sub
xchg
lea
stos
add
adc
mov
sbbb
xchg
xor
lcall
fiaddl
xchg
ljmp
loope
adc
popf
aas
stos
jne
int
sti
das
jge
loope
push
inc
lret
mov
imul
sbb
out
mov
gs
ljmp
dec
xchg
sbb
mov
cmpsb
add
test
inc
inc
push
adc
add
lcall
imul
ja
jo
adc
or
lds
xor
jae
adc
inc
push
sub
fildl
push
test
mov
out
mov
fyl2xp1
lods
call
xorb
insb
adc
xchg
out
int
out
pop
mov
mov
push
pop
mov
ja
shll
js
mov
scas
mov
jno
testl
sahf
in
push
sub
pop
dec
cmp
bound
imul
jle
pop
sbb
jge
or
outsb
in
push
jo
sub
lret
mov
inc
lock
mov
sub
mov
arpl
andb
pop
and
adc
aad
aam
lods
addr16
inc
xor
push
xor
pusha
xor
lret
arpl
fldt
shr
dec
inc
rcll
into
and
pop
add
ret
fdivs
cmp
mov
adc
add
push
imul
jbe
xor
sub
cmp
adc
lret
orl
mov
pop
cltd
data16
jle
pop
in
sub
pop
sbb
cltd
mov
mov
push
cwtl
ja
fs
mov
aam
ret
jb
dec
xorb
hlt
ret
hlt
dec
fcompl
fadd
sub
jecxz
mov
xchg
cwtl
mov
xchg
pop
and
adc
ror
data16
mov
lods
sahf
in
dec
in
enter
ds
pop
out
sahf
mov
xchg
and
sub
out
xchg
gs
sbb
je
popa
icebp
xor
mov
scas
xor
lea
lcall
jno
jp
push
push
jp
fmull
jmp
lret
lods
push
cli
movsl
mov
adc
int3
fiadds
out
hlt
ret
and
sbb
push
fmulp
lods
or
xlat
adc
cmpsl
nop
jns
mov
adc
push
cltd
iret
divl
orl
out
jg
or
mov
insl
pop
loope
inc
inc
pop
repnz
and
sub
ds
cs
call
pcmpeqb
push
add
inc
or
in
arpl
fidivrl
lock
jmp
xchg
inc
stos
and
add
leave
sub
jns
jbe
popa
add
loope
or
aam
popf
arpl
dec
idivb
loope
scas
movsl
ds
enter
push
int3
stos
mov
xchg
js
jnp
jp
mov
add
push
sbb
push
dec
test
xchg
add
daa
cltd
xchg
imul
xor
cs
inc
cmpsl
popf
insb
mov
sahf
or
lock
push
dec
mov
out
les
pop
icebp
aam
xchg
fstpl
fcoml
dec
add
jg
push
mov
cwtl
les
out
add
mov
dec
xchg
insb
popf
cmp
mov
addr16
test
or
shl
subb
mov
loope
add
cmpsl
mov
pop
adc
jle
testb
mov
xor
icebp
sub
xchg
das
xchg
push
sbb
or
mov
pop
and
int
ljmp
into
jmp
stos
loope
inc
cli
xor
daa
dec
adc
jno
mul
in
push
jecxz
jge
and
in
or
adc
scas
jg
popa
mov
test
shrb
pop
push
in
pop
outsl
adc
xor
imul
mov
mov
ss
dec
sbb
sbb
into
repz
jg
jp
sahf
sub
dec
jecxz
flds
les
iret
fs
test
cmp
jmp
push
test
cmp
push
push
jo
jno
sbb
std
mov
or
inc
outsl
lcall
mov
mov
mov
in
loop
add
rcrb
and
cmp
shl
std
lea
out
fwait
and
xor
pusha
lea
pop
jmp
js
push
and
push
das
push
mov
jge
ret
mov
inc
aas
mov
sbb
test
stos
dec
pushf
mov
or
dec
push
push
lea
and
or
arpl
insb
cmpsb
mov
scas
pop
call
mov
lret
sub
xchg
cmp
roll
push
pop
shll
aaa
repz
sbb
jns
mov
shll
push
ds
fsubrl
jns,pt
lods
and
repnz
aad
cltd
or
into
hlt
adc
fs
mov
xor
and
sub
pop
and
sub
inc
iret
cmp
scas
and
imulb
mulb
cmp
outsl
aas
inc
or
xor
shlb
fdivrl
jecxz
leave
pop
mov
popf
mov
mov
mov
int
and
pop
mov
js
mov
sbb
xlat
push
mov
cmp
adc
aam
xor
fwait
mov
pop
dec
data16
push
or
inc
cld
fwait
lcall
js
out
aad
dec
shrb
dec
in
sub
insl
jns
mov
inc
gs
movsb
xchg
dec
mov
sbbb
jmp
ja
jae
mov
mov
jp
pop
ds
fildll
iret
rorb
loope
inc
and
xchg
aas
das
scas
xor
repz
xchg
call
ror
flds
popa
pusha
xor
std
addr16
repz
pop
jbe
int
jge
sub
mov
fwait
pop
xchg
sub
xor
stos
push
mull
arpl
pop
imul
call
adc
lcall
insl
jge
add
xchg
adcl
jae
aad
inc
or
scas
andb
nop
in
inc
insb
push
sub
xchg
outsb
arpl
mov
outsb
fimuls
jmp
lock
dec
scas
xchg
call
pop
pop
mov
mov
int3
cmp
cs
aaa
push
mov
stos
xchg
out
xchg
lcall
xchg
cmp
sub
push
sub
mov
in
call
mov
sub
les
mov
xor
movsb
jns
sahf
jno
mov
mov
aam
aam
push
add
xchg
shll
dec
ficoml
xor
jmp
mov
mov
popf
incl
jb
adc
pop
adc
and
jle
dec
jl
fldcw
add
mov
mov
fwait
lods
pop
je
jae
stos
pushl
nopl
xchg
lret
push
out
push
sub
outsl
imul
cmp
lock
popa
in
jmp
mov
setbe
xchg
mov
add
les
sub
iret
ficompl
xchg
js
cmp
jp
insl
jbe
in
mov
inc
decb
hlt
inc
adc
cs
stos
ficompl
push
xor
jg
test
xorb
fst
cmp
cltd
lret
out
ficoml
sti
xor
xor
test
adc
mov
add
out
xchg
rcl
jg
sub
xchg
in
aam
stc
pop
ret
pop
in
mov
xrelease
mov
fcomip
dec
xchg
clc
jp
imul
pop
push
sti
out
mov
nop
fisttpll
adc
lock
adc
sub
mov
or
iret
sbbb
mov
pusha
out
push
cmpsb
data16
or
add
aaa
pop
sti
jns
cmpsl
mov
in
cmpsl
lea
call
cwtl
fwait
add
xor
jecxz
imul
adc
ficoms
gs
add
ret
cmpb
adc
or
mov
dec
mov
int
ljmp
sub
inc
mul
jne
pop
adc
dec
push
adc
cmp
in
and
clc
xchg
orb
sahf
pop
loope
jb
xchg
mov
mov
fld1
push
inc
jnp
sub
pop
aaa
fisubrl
fdivr
mov
inc
pop
push
cli
lahf
push
cmc
mov
jecxz
fistpll
subl
mov
adc
mov
mov
fisubrl
ret
movsb
fnstsw
daa
jl
jp
push
xchg
in
mov
aas
addb
in
mov
lods
pop
lret
mov
mov
dec
mov
xor
mov
adc
leave
sbb
mov
fisubrl
rolb
incl
dec
sbb
jecxz
jle
sbb
add
lahf
fsubl
adc
sub
stos
cmpl
out
xchg
add
dec
jge
test
pop
xchg
fists
notb
shlb
sub
addr16
data16
cmpsl
ljmp
xorl
mov
in
and
pop
cmpsl
nop
mov
pop
xchg
or
lods
and
icebp
aad
stos
sub
xchg
sub
lcall
jmp
mov
inc
jno
or
jp
es
subl
insb
push
fdivrs
xchg
xchg
mov
add
es
jg
loopne
inc
dec
and
push
adc
xor
xchg
xor
sbb
out
cmp
sbb
sub
mov
cmpsb
scas
loope
jae
aaa
test
push
stos
stos
adc
xchg
mov
pop
ljmp
mov
or
adc
in
mov
loopne
inc
and
fsts
jb
push
cmp
dec
repnz
sbb
pop
cltd
aam
mov
aaa
inc
and
or
jg
sub
xchg
subl
inc
push
fimull
out
std
add
sub
cmp
sbb
fisubl
and
fdivrl
dec
cmp
aas
in
or
or
nop
add
mov
add
fbstp
out
jle
lea
jmp
xchg
add
repnz
sbb
jno
mov
xor
mov
das
out
cmp
mov
dec
xchg
mov
loopne
pop
or
pop
mov
xchg
push
add
ror
dec
out
sbb
or
cmp
xchg
fsubrs
loopne
fisttpl
adc
in
jmp
loope
push
jb
or
inc
mov
mov
xor
sbb
or
sahf
ret
into
popf
push
out
jge
inc
addr16
lahf
scas
clc
inc
mov
xor
xchg
inc
and
ds
int3
movsb
lods
js
aam
jae
jo
mov
mov
dec
lcall
sbb
cmpsb
sahf
pop
lret
mov
fisubs
es
mov
dec
lock
adc
mov
inc
jnp
lret
and
adc
cmpsl
pop
xor
pop
xchg
iret
cmp
call
push
mov
push
adc
test
jle
mov
mov
jns
into
dec
data16
pop
pop
ss
ja
jle
cwtl
shrb
jmp
test
sub
dec
nop
xchg
lcall
mov
xchg
cmpsl
adc
aas
cmc
cmp
push
popf
mov
dec
fs
stc
pop
aas
jmp
pop
scas
mov
leave
sub
movsl
sbb
sahf
movsb
jbe
xchg
lret
sbb
psrad
and
fmuls
adc
push
xor
inc
rol
fdivl
mov
xor
jmp
stos
mov
cmpsb
pop
xorb
insb
scas
scas
push
rcrb
mov
decb
mov
imul
adc
xor
sarb
adc
hlt
ja
add
bound
aas
mov
shlb
orl
in
dec
mov
jno
repz
mov
pop
lea
lcall
arpl
mov
lret
push
mov
ficompl
push
push
iret
pop
jo
xor
sahf
and
jae
add
xchg
push
and
xor
jge
xor
stc
mov
jbe
lea
mov
hlt
outsb
push
lock
xor
xor
jle
fstpt
shll
adc
add
aaa
push
rcrb
mov
jnp
jmp
push
cs
and
stos
inc
and
jne
adc
dec
pop
das
test
ljmp
loop
mov
pop
mov
pushf
ss
inc
repnz
cmp
adc
jne
out
movsl
pop
sarl
xor
mov
movsl
cmc
pusha
cmp
pop
sbb
ljmp
cmpsl
pushl
clc
mull
std
cwtl
shlb
call
out
outsb
cmp
inc
add
mov
jge
std
es
mov
cmpb
sbb
je
pop
jmp
dec
mov
and
fwait
push
outsb
hlt
shrd
std
pop
mov
cmpsb
mov
mov
cli
ljmp
lock
nop
xchg
lret
cmp
jecxz
es
insl
out
es
mov
xchg
and
int
xchg
sbbb
int3
adc
mov
arpl
push
jmp
int
dec
adcl
cltd
or
int
lods
add
imul
clc
les
testl
sbb
jbe
xchg
inc
lea
pop
jge
stos
cld
push
stc
push
rcrl
mov
xchg
out
push
mov
mov
xchg
stos
xlat
xchg
push
sbb
ds
adc
shlb
pop
mov
ror
push
mov
dec
adc
or
adc
jno
das
daa
jo
xchg
pop
les
mov
mov
and
push
into
scas
mov
push
push
outsb
dec
pop
sbb
ret
frstor
pop
mov
dec
cmpsl
test
cld
dec
pop
xchg
adc
mov
fcmovnu
dec
push
repz
daa
lods
popa
lret
mov
xlat
mov
xchg
cltd
or
test
dec
add
arpl
mov
shlb
dec
aad
inc
xchg
rorb
repnz
and
pop
add
dec
jg
stc
and
push
sub
jbe
daa
jle
mov
lcall
popf
in
or
adc
rcr
pop
cmp
adc
push
insl
loop
jl
dec
mov
inc
sub
sbb
pop
mov
mov
test
repz
push
mov
adc
adc
fwait
or
adc
outsb
push
sbb
popa
js
inc
int3
movsb
fdivp
inc
or
sbb
adc
add
rcrb
inc
movsl
aas
sub
xchg
ds
inc
and
pop
fucomi
jge
cmp
f2xm1
testb
andb
repz
cmp
pmuludq
jno
mov
jmp
jge
fidivrs
ss
mull
sbb
iret
mov
das
mov
dec
lods
cs
xor
jge
and
in
aam
adc
outsb
xchg
aaa
subl
and
jg
dec
mov
addr16
pop
push
jle
jbe
repz
adc
xor
leave
sub
out
aam
loop
dec
mov
dec
mov
sub
lret
mov
jg
in
push
enter
movl
or
xor
inc
leave
mov
jnp
push
ret
lcall
jge
push
mov
mov
scas
roll
mov
inc
stc
pop
call
or
rcr
jecxz
mov
fsts
lods
mov
ja
adc
add
out
std
lcall
mov
cmp
rcll
push
sbb
ret
mov
mov
mov
xorl
cmp
test
pop
mov
add
dec
jo
es
loopne
scas
xchg
out
sub
dec
jns
mov
jmp
add
xchg
aas
xchg
jp
scas
mov
push
aaa
sbb
pop
loopne
in
or
xchg
push
inc
jnp
xchg
mov
lods
das
jmp
hlt
and
push
testl
adc
pop
bound
arpl
enter
cmpsl
ret
xchg
push
loopne
xchg
aaa
or
repnz
test
adc
mov
cmp
scas
lea
scas
cltd
mov
adcl
adc
cmpsl
or
arpl
sbb
sub
add
push
xchg
lods
inc
sub
icebp
cwtl
nop
pop
pop
sbb
lods
jecxz,pt
lret
test
lahf
add
pop
add
sbb
lods
push
push
out
fstps
adc
lahf
mov
dec
cmpsb
out
lcall
mov
sahf
clc
icebp
rcrl
mull
lods
movsl
push
outsb
add
pop
pushf
mov
jmp
xchg
out
mov
mov
jb
xchg
ss
or
adc
in
jbe
out
jge
dec
dec
dec
jmp
out
xor
cmp
aas
lret
je
stos
mov
aad
iret
lock
fmul
xlat
push
xchg
add
sbb
sbb
aad
cmpsb
mov
scas
aad
push
ljmp
mov
in
mov
insb
xchg
sub
or
or
test
scas
daa
xchg
xlat
ja
add
jbe
fwait
cmc
jnp
jecxz
cwtl
sbbb
push
or
sbb
cmpsb
adc
je
xchg
adc
add
ja
jle
add
rcl
test
mov
jne
shll
cli
out
jmp
inc
inc
pusha
xchg
dec
lods
mov
jo
pop
orl
in
cmp
imul
int3
and
xlat
jae
sub
cmpsl
xchg
jns
aas
aad
les
outsl
xchg
int3
shlb
orl
add
push
mov
cltd
xchg
inc
push
xor
push
stc
mov
in
add
cmc
cmpsb
inc
stc
inc
cltd
dec
rclb
pop
jl
fiadds
pusha
outsb
adc
jae
shrb
lea
mov
shl
add
cmpsl
daa
shlw
aam
outsl
sub
subl
mov
xchg
rorb
rep
mov
out
pop
mov
cmp
divb
mov
or
ljmp
pusha
add
jae
sub
outsl
cmp
mov
cli
fdivl
or
xchg
adc
cmp
mov
pop
sub
sahf
sarl
decl
out
push
in
sbb
jbe
jmp
adc
mov
movl
mov
inc
sti
mov
cmpsb
iret
daa
rol
psrlq
pusha
mov
or
ljmp
inc
les
xor
out
xorl
stos
mov
fiadds
or
sahf
enter
cmp
lcall
outsb
ret
aam
loope
sahf
cmc
fldt
sarb
repz
push
in
inc
icebp
sub
dec
call
mov
roll
mov
add
andl
xchg
xor
enter
push
adc
xor
mov
pop
push
jge
inc
scas
adc
addb
paddq
push
add
dec
inc
xor
imul
ret
out
and
hlt
dec
jmp
dec
push
nop
repnz
dec
scas
pop
inc
jne
movsl
sbb
das
leave
mov
dec
jno
jge
cmp
fwait
push
call
xchg
fidivrs
lods
adc
xchg
inc
lret
test
int3
or
cli
adc
push
mov
scas
roll
jle
push
cltd
loope
jno
or
mov
dec
sbb
add
cmp
xor
mov
shlb
pop
out
and
outsl
addb
lea
popa
pop
or
mov
call
cwtl
test
stos
push
ss
pop
scas
jmp
jl
mov
lahf
xchg
xchg
mov
adc
adc
enter
in
jmp
jmp
mov
adc
ljmp
sbb
jl
shrb
mov
xor
xchg
inc
push
mov
bound
inc
mov
daa
jnp
mov
mov
lret
cmp
sub
dec
mov
or
fwait
cmpsl
jmp
loop
scas
or
int
fcmovbe
pop
ljmp
repz
pop
xchg
mov
test
jp
inc
repnz
dec
lds
mov
sarl
int3
sbb
push
sbb
movsl
daa
iret
pop
lret
jge
into
pop
pusha
xor
dec
insb
jecxz
pop
andb
fimuls
mov
sbb
pushf
sti
mov
jno
ds
imull
push
mov
std
mov
jmp
mov
and
dec
pop
xchg
jmp
mov
jbe
lret
negl
pop
bound
mov
xchg
fsubr
lcall
sarl
call
jecxz
mov
fsts
sahf
or
sub
pop
xor
mov
ss
xchg
ret
iret
cmpb
lret
shlb
pop
adc
int
pop
out
pop
ds
icebp
cmp
add
and
je
fisubrs
pop
or
aad
mov
loopne
fwait
push
add
cli
stc
ss
pop
jo
and
orl
lock
arpl
push
add
push
and
jge
sub
mov
lock
fcomip
in
xor
mov
or
dec
pop
cli
jo
pop
xor
dec
mov
mov
cli
mov
pop
aaa
inc
push
lret
insb
push
cs
adc
push
lret
fstp
add
jns
fmull
jle
push
mov
repz
pop
es
fs
mov
add
aaa
push
mov
adc
add
stc
dec
stos
aam
jge
add
pushf
add
add
lods
lds
or
fstps
push
leave
xchg
and
dec
outsl
out
mov
mov
dec
movsb
pop
dec
jg
mov
xchg
nop
fsubr
enter
scas
or
adc
icebp
scas
mov
in
movsb
stos
faddl
jecxz
jae
iret
cltd
dec
ljmp
xorl
fndisi(8087
cmp
push
lock
pop
cld
imul
or
sbb
xor
scas
jmp
adc
jecxz
mov
lcall
jbe
push
shll
mov
loop
loope
dec
in
sub
repz
push
call
pop
hlt
pop
jnp
popa
stos
xor
cmpsb
decb
fldenv
mov
aam
jnp
and
out
loop
sbb
pop
std
stos
lds
scas
xorl
iret
sbb
sub
inc
xchg
dec
add
xchg
inc
sub
das
cld
jle
jp
add
and
aam
push
jge
pop
mov
push
hlt
xor
pop
and
dec
cld
push
jno
xchg
popa
cmp
addr16
mov
mov
push
mov
ljmp
mov
sahf
clc
int
pop
xor
mov
outsb
enter
sub
gs
test
cwtl
xchg
dec
out
push
rcrl
xchg
or
sbb
insl
inc
fdivrs
mov
mov
push
mov
test
pop
aas
adc
push
sub
pushl
xor
jg
inc
subl
cmpb
dec
test
sbb
xchg
lds
sub
inc
inc
stos
push
popa
mov
les
scas
cmp
pop
jmp
aaa
mov
fcomi
mov
add
mov
adc
inc
jecxz
and
or
push
popf
xchg
push
pop
sbb
imul
dec
int3
fldenv
mov
and
outsb
sub
inc
fbld
push
cltd
sub
call
gs
xor
xchg
data16
adc
xor
pushf
or
add
movl
push
push
cmc
cmp
pop
ds
in
cmovs
mov
movsb
ret
jbe
incb
xorb
movsb
dec
push
push
pop
test
push
cmp
fimull
inc
test
js
add
sti
lret
jecxz
cld
inc
mov
xchg
insl
cmp
cld
add
insb
cmp
int3
fimull
jle
xchg
fistl
add
lcall
scas
adc
pop
jmp
ljmp
push
lods
adc
mov
sbb
dec
ja
push
orb
jbe
jmp
push
dec
sub
push
sub
push
sbb
clc
dec
ficompl
jo
adc
cmp
mov
xchg
outsl
clc
jmp
pop
sar
test
lcall
mov
dec
push
out
jnp
stc
loopne
push
les
dec
sbb
jle
mov
mov
rcll
or
movsb
lea
add
mov
test
shll
ss
pop
or
lret
push
push
mov
add
cli
fmull
sti
sbb
push
cmp
cli
fcompl
dec
xor
nop
inc
mov
push
pop
and
add
sub
mov
lods
pop
adc
or
adc
push
lods
mov
sbb
scas
xor
sub
xor
icebp
loope
and
add
incl
mov
fsts
mov
cmc
cs
add
add
mov
cld
shl
les
mov
pop
or
adc
subl
leave
sbb
and
jmp
rol
imul
and
pop
out
mov
enter
mov
imul
lret
jo
xor
adc
mov
lahf
sbb
fsubrl
je
sbb
popf
mov
leave
shlb
mov
jns
add
mov
popf
ljmp
gs
cld
frstor
or
sub
xchg
push
stos
icebp
int3
xlat
xchg
sub
sbb
shl
ret
pop
pop
jmp
xor
push
mov
enter
insl
aam
ja
xchg
push
and
jmp
jb
lret
adc
mov
jg
xor
js
sbb
and
lret
insl
fs
pop
pop
xchg
cmp
pop
jns
aas
xlat
loopne
jecxz
aas
mov
jp
sbb
mov
mov
add
into
ficoml
pushf
mov
mov
mov
test
jle
xlat
add
lods
push
movsl
repnz
pop
in
or
xorl
or
sub
test
rcr
cmp
jmp
nop
ret
insb
push
sbb
push
inc
mov
movsb
fsubrs
jbe
mov
shrb
mov
int
push
jb
or
jecxz
xchg
out
daa
loop
sarb
push
inc
sub
fldenv
icebp
mov
cmp
das
cmp
and
xchg
pop
fdivrs
les
lret
dec
add
movsb
lcall
test
or
xlat
sbb
sub
notb
jbe
jmp
cmp
insl
sub
dec
ret
cmp
ds
inc
mov
xchg
pop
pop
shll
and
je
sbb
mov
std
lahf
sahf
ljmp
lods
enter
js
repz
jecxz,pt
add
inc
pop
jmp
sbb
mov
sahf
vpaddusb
and
enter
adc
xor
sub
xor
out
loopne
adc
jo
imul
orb
mov
pop
cmp
dec
xchg
cmpsl
sahf
mov
addr16
hlt
scas
or
in
cmp
popa
push
hlt
lds
icebp
sbb
mov
jp
push
adc
adc
mov
add
rolb
sub
mov
incl
sub
pop
movaps
sar
mov
xchg
loopne
sbb
push
out
lret
jmp
jg
in
mov
cs
push
or
or
aaa
mov
or
test
mov
adc
jmp
sbb
out
push
xor
jl
lds
testb
mov
nop
jmp
enter
outsb
mov
outsl
dec
fldcw
or
sub
add
or
dec
xor
pushf
mov
dec
not
cwtl
iret
pop
sub
stos
aas
aam
js
mov
shlb
or
mov
and
ficomps
add
nop
lahf
cmpsl
mov
test
mov
sub
add
add
mov
shr
mov
cmc
mov
inc
inc
dec
ds
das
pop
gs
outsb
dec
mov
mov
outsl
int
cld
mov
mov
mov
pop
jo
adc
mov
dec
bnd
mov
fsubs
mov
lret
push
jne
es
sbb
dec
jns
stc
add
das
aad
jnp
sub
xor
ret
data16
xor
inc
js
mov
pusha
add
outsb
add
out
add
push
pop
es
mov
jecxz
or
dec
dec
mov
mov
add
inc
xchg
ljmp
mov
fcoms
es
sbb
cmp
inc
movsb
cwtl
jbe
sub
inc
out
fnsave
mov
add
stos
rclb
ds
insl
lahf
xor
jecxz
mov
jne
sbb
enter
aas
js
cmp
push
pop
sub
xchg
mov
push
and
xchg
in
jg
cwtl
mov
add
sahf
dec
fidivrl
aas
lds
sub
cld
fs
dec
cmpsb
int3
rorb
fidivs
add
loopne
mov
lock
aam
jg
adc
push
jo
rcr
loop
push
fcoml
icebp
xor
test
in
and
movsl
shrl
int3
dec
pop
insl
pop
loopne
mov
mov
sbbl
mov
imul
int
dec
mov
iret
xlat
cld
lea
ret
xor
xor
mov
pushf
jns
fiaddl
cli
xor
xchg
xlat
or
test
sti
xchg
cmpb
cs
pop
ds
mov
icebp
jg
out
ret
inc
aad
push
xchg
stos
mov
loope
dec
lock
loopne
push
imul
sbb
fidivrs
adc
or
adc
ud2
dec
ds
lret
mov
enter
or
orl
cmpsb
jno
dec
mov
push
lock
fwait
adc
imul
mov
stos
jnp,pt
scas
in
icebp
outsw
es
fiaddl
sub
test
adc
jne
lcall
or
lret
jo
iret
xor
bound
repz
out
js,pn
xor
add
adcl
pop
xchg
sub
shr
test
lods
jecxz
stos
pushf
in
and
faddp
sub
jecxz
jnp
cld
mull
lret
mov
arpl
adc
push
mov
daa
jae
pcmpeqw
insb
push
jo
fimuls
scas
hlt
add
jb
js
pop
scas
jae
aaa
adc
int
push
repnz
bound
jmp
sbb
adc
inc
fidivs
fcompl
jae
or
arpl
mov
repz
push
test
sbb
inc
lahf
xchg
push
aaa
add
dec
rcrl
sti
lret
pop
dec
jb
pop
test
mov
cld
jbe
cmpsl
sbb
shrl
das
xor
inc
inc
movsl
sbb
pop
push
lods
mov
jbe
into
xchg
stc
in
xor
push
ljmp
jle
dec
push
mov
fsubrl
nop
iret
lret
incl
cmc
mov
in
and
push
rcl
push
cmp
mov
sbb
and
fwait
cli
jb
mov
push
add
inc
pop
je
pop
in
jnp
push
mov
cld
mov
dec
test
push
pop
adc
mov
scas
mov
mov
jns
jb
pusha
rclb
repz
fsubr
jo
cwtl
or
push
xchg
leave
jae
push
dec
dec
fldcw
ja
inc
lcall
fstl
in
add
cmpsl
add
or
pushf
stos
inc
add
adc
sarl
mov
mov
fnsetpm(287
push
xor
dec
mov
mov
and
and
cmc
dec
pop
imul
add
lcall
jo
jb
pop
fisttpl
pop
insl
idivl
jnp
aad
dec
jae
es
cmpb
sti
test
test
sub
xor
shll
vmulss
and
fdiv
pop
jmp
scas
mov
or
jl
in
repnz
mov
rorb
shll
and
xor
dec
push
pop
sbb
rcrb
adc
or
mov
sahf
or
xchg
or
fimull
movsb
jecxz
in
lret
ds
sub
iret
xchg
ds
mov
pop
sub
lods
out
outsl
inc
lds
fildll
gs
lods
insb
sub
jge
sbbb
and
ljmp
fimull
sub
ljmp
sbb
and
adc
movb
rcll
xor
sarb
hlt
pushf
call
fsubrs
pop
cmp
pop
mov
jns
loopne
inc
xchg
and
dec
fwait
pop
push
adc
addb
cmpl
fwait
mov
add
sub
mov
mov
dec
mov
imul
and
shlb
sbb
push
jns
test
sbb
push
loope
and
clc
mov
fisubs
in
inc
sbb
lret
mov
pop
es
jbe
hlt
pop
in
dec
mov
push
scas
sbb
rclb
sub
clc
out
mov
xchg
mov
shrl
stos
jg
loopne
cmc
mov
push
je
xorl
stos
aaa
sbb
hlt
leave
mov
jae
test
pop
push
rcr
aad
mov
jmp
push
out
lret
inc
mov
sti
roll
cs
add
pop
push
pop
push
or
in
inc
clc
mov
jle
and
adc
das
xchg
js
fwait
outsb
test
pop
test
or
sub
dec
shrb
rolb
sub
xor
mov
cmpsl
sub
pop
mov
frstor
and
orl
sub
shl
sub
nop
scas
in
aad
out
cmpsl
lea
push
not
push
xor
mov
les
mov
ret
and
dec
jnp
push
mov
jl
lock
je
int3
std
mov
sti
loopne
fnstenv
mov
iret
in
test
cwtl
lcall
je
cmp
inc
inc
loopne
cmp
scas
pusha
lea
scas
add
pop
test
enter
cmp
subl
aad
sub
fldt
pop
test
adc
arpl
cmp
push
incb
mov
mov
xor
inc
mov
jnp
pop
push
mov
in
inc
pop
xor
add
call
push
adc
pop
inc
lods
or
bound
int3
or
lret
xor
pop
loopne
push
es
dec
mov
jo
andb
xor
lret
cmpsl
ror
ljmp
xor
adc
sub
aas
push
pusha
sahf
lret
xor
js
jnp
xor
cmp
and
push
pop
imul
mov
je
stos
and
push
add
sbb
or
ds
loop
and
mov
sbb
pop
add
push
sub
add
dec
ret
add
jb
stc
call
push
push
push
in
dec
mov
mov
inc
or
xor
lods
mov
or
sbb
pop
fnstenv
sbb
inc
pop
in
outsb
insl
xor
cmp
adc
cltd
xchg
pop
into
jb
xchg
or
pop
clc
or
xchg
mov
jb
jle
das
mov
rcr
adc
and
mov
neg
pop
lds
xchg
mov
insl
sub
lcall
lock
fcomps
inc
dec
inc
ret
add
sbb
out
fstl
fisubrs
or
int3
jge
outsl
fsubrl
inc
and
dec
mov
mov
push
pop
movsl
loope
push
mov
outsl
pop
popf
sbb
xchg
int
ds
es
xchg
lea
negl
fidivl
outsb
repnz
enter
inc
shlb
inc
mov
out
push
lods
ret
push
jl
pop
inc
add
sub
or
aas
mov
test
cmp
pop
test
inc
pop
mov
outsb
dec
push
clc
sahf
xor
mov
les
dec
pusha
cmp
pop
jmp
lcall
adc
jge
adc
push
cs
dec
movsb
push
sbb
or
loopne
movsl
mov
adc
mov
sbb
int3
sahf
push
adc
inc
or
sbb
mov
popa
mov
pop
outsl
dec
addr16
sbb
fdivrs
mov
sbb
jae
cld
dec
add
call
cli
dec
mov
scas
cmp
xchg
pusha
movsb
xchg
sub
daa
std
sti
jmp
fnsave
loope
jae
jne
ss
ficompl
jmp
dec
jecxz
js
xor
stos
testl
outsl
cmp
call
and
mov
insl
stos
movsb
mov
adc
ret
jnp
mov
jno
clc
dec
cmpsl
ret
in
add
daa
je
sbb
dec
dec
and
fsubl
pop
lret
push
push
fadds
xor
sbb
int
jge
dec
test
in
bound
movsb
mov
sub
loopne
in
cmp
outsl
adc
pop
and
jbe
mov
jge
sbb
push
lock
and
fs
ss
mov
ret
xchg
mov
out
mov
jle
addr16
stos
push
lcall
jge
dec
pop
and
and
andb
mov
inc
leave
dec
mov
and
loopne
push
stos
cmc
sbbb
daa
inc
rcr
ss
into
mov
jge
dec
loope
addl
xchg
cmp
pop
ret
movsl
mov
insl
adc
ror
inc
pop
fisubs
repnz
movsb
fwait
jmp
jnp
std
frstor
bound
jmp
cmp
lret
inc
sub
cltd
jl
inc
push
mov
sbb
int3
cmp
aaa
cmpsb
loop
dec
jb
pop
inc
sbb
cmp
cmp
or
cmp
cmc
mov
pop
leave
insb
scas
jmp
int3
lea
adc
pop
and
mov
shrl
push
out
je
cmp
sub
cmpsb
jmp
addr16
rcl
jb
mov
sbb
inc
inc
adc
enter
in
push
xlat
ss
aam
cmpsb
mov
adc
cmpsb
push
std
fstpt
add
adc
sbb
cmpsl
mov
or
dec
scas
xchg
int3
push
jmp
push
sbb
mov
push
lahf
jecxz
push
inc
mov
or
cmp
push
jo
jns
add
lahf
data16
ficomps
xor
push
es
nop
bound
mov
mov
jmp
sbbl
andps
in
inc
add
scas
or
test
adc
cli
cld
mov
inc
push
xor
rol
push
ss
lret
jno
cmp
cmpsl
cmc
inc
push
cmp
inc
idivb
push
lods
pushf
cwtl
popa
outsb
xchg
stos
add
aas
icebp
mov
pop
arpl
jp
hlt
pop
mov
push
or
cmp
insb
loopne
adc
lods
adc
jle
nop
sarb
and
and
aas
cs
scas
or
push
out
dec
ror
mov
xchg
jbe
jmp
mov
jmp
jg
lea
push
fmull
mov
jb
hlt
xor
and
pop
mov
leave
clc
and
sbb
xchg
in
push
cmpsb
test
ret
dec
and
xchg
add
mov
fdivr
dec
das
push
cmp
fbstp
das
aaa
sti
push
adc
lods
je
lock
sbb
push
cmpsb
push
sahf
and
out
mov
scas
or
dec
or
fs
pop
push
leave
shll
mov
jmp
movsb
xchg
mov
daa
xor
sbb
mov
lret
fs
mov
sbb
bound
test
call
jecxz
sbb
dec
or
ja
cmp
pusha
imul
inc
out
xor
push
add
sbb
pop
outsb
or
xor
mov
jl
mov
or
incl
cmpsb
dec
cld
pop
push
in
sbb
pop
mov
rcr
mov
jmp
outsb
in
mov
repz
dec
add
je
xor
add
jnp
out
push
outsb
rorb
addr16
inc
cmp
sub
lret
jmp
pop
imul
mov
fs
jp
movb
clc
fbstp
sub
scas
leave
insb
cmpsb
inc
mov
mov
test
mov
mov
leave
icebp
rol
fcomps
add
data16
je
jo
mov
mov
enter
jno
add
loopne
mov
fnstcw
dec
test
push
les
and
call
or
std
mov
lret
mov
dec
push
ss
test
daa
popa
ss
jns
addl
mov
lcall
or
nop
pusha
inc
and
mov
call
pop
pushf
inc
adc
pop
dec
fnstsw
lea
cld
lea
add
push
je
in
sub
in
xchg
mov
jne
push
in
adc
ds
fnsave
jle
mov
sub
mov
xor
or
pop
and
mov
mov
daa
sbb
pop
or
mov
xor
pop
cld
out
pop
mov
pop
test
bound
xchg
push
insb
ds
sahf
ljmp
inc
mov
dec
in
mov
add
lods
jbe
fld
dec
lock
imul
repz
sbb
lret
dec
cmp
mov
les
or
arpl
popa
sbb
out
xchg
jl
mov
cld
jl
push
aad
jne
out
sahf
sub
or
mov
and
or
jg
jecxz
mov
sub
xchg
push
out
rcrl
loope
test
shrb
lcall
push
pop
fcmovu
sub
test
packssdw
shll
movsb
sub
jo
dec
sarb
jno
or
aam
xchg
mov
push
xchg
and
push
adc
stos
pushf
fwait
push
mov
xor
bound
pop
dec
mov
push
in
or
push
sub
jge
xor
lock
jle,pn
aaa
sub
jp
pushf
mov
daa
das
in
pop
add
mov
pop
inc
mov
lock
inc
cmp
int
mov
fimuls
inc
pusha
sub
mov
fisttpll
sbb
mov
arpl
aaa
sub
pop
cmp
js
nop
repnz
sub
sbb
xchg
test
rcrl
cmp
cmp
inc
popa
pop
test
test
xor
int
es
push
adc
mov
lcall
jns
sbb
popf
xor
jo
pop
inc
loop
sub
and
aaa
jle
roll
faddl
inc
dec
ja
fistps
mov
notb
jg
dec
dec
nop
int
or
mov
xchg
lret
outsl
stc
adc
mov
fdivr
mov
jne
push
aad
push
lods
pop
loopne
popa
addr16
idivb
aas
push
nop
jg,pt
cmpsl
test
dec
mov
out
add
mov
rorl
cmp
jmp
repz
push
xor
xor
or
jbe
mov
or
jnp
fmull
inc
xchg
inc
insl
je
xchg
adc
fprem1
or
addr16
in
cwtl
icebp
push
xor
jge
bound
dec
stc
ss
fcomi
repz
jno
push
addr16
inc
mov
mov
pop
inc
mov
and
sbb
outsl
outsb
or
outsl
idivl
cs
fcomps
ret
mov
divl
or
inc
cmp
xchg
sub
mov
popa
data16
ret
fwait
loopne
stc
dec
xor
inc
or
rcrl
adc
aaa
out
je
cs
cmpl
mov
div
mov
cmpsl
enter
ret
cltd
adc
cld
into
xchg
sub
xchg
fmull
popf
push
xchg
jle
fmull
ja
sti
or
ret
mov
mov
mov
adc
out
or
jo
scas
xchg
bound
xchg
mov
add
or
mov
je
mov
data16
mov
jbe
sbbb
jg
aad
mov
xor
mov
fsts
ss
clc
addl
lock
out
mov
xchg
pop
cwtl
sbb
fwait
ja
lods
insb
fidivs
lcall
xchg
sbb
aad
cmpsb
mov
addr16
sub
and
fadds
inc
loopne
mov
cld
inc
and
and
mov
mov
add
dec
mov
repnz
add
icebp
jl
jno
in
lret
out
mov
push
dec
jnp
fidivl
aas
cwtl
sbb
inc
sub
jo
fisttpl
aas
fisttpl
pop
loopne
das
dec
subps
mov
mov
mov
xchg
push
outsb
arpl
out
xor
adc
or
cmp
sti
sbb
in
jecxz
add
out
mov
fdivrl
aas
daa
stc
inc
dec
inc
jb
or
roll
cmp
pusha
jecxz
cmpsb
pop
psubsw
mov
adc
or
cmpsb
push
pusha
lds
fldt
and
mov
fwait
repz
arpl
and
dec
pop
stos
fs
inc
enter
jecxz
sti
sub
or
inc
pop
sbb
jbe
jbe
cs
lods
mov
stos
adc
fstpt
dec
jp
lret
rcrl
mov
in
jg
xchg
dec
sahf
movsl
cmp
repz
insl
cltd
mov
sub
adc
imul
lcall
mov
push
ss
dec
ljmp
fdivrl
cmpsl
pop
dec
mov
sub
ja
lret
cmp
sub
cwtl
cmp
and
sahf
dec
or
nop
repnz
movsl
jnp
addl
decb
addr16
sbb
lea
push
lahf
ljmp
imul
xchg
lcall
leave
xchg
stos
ljmp
push
int3
sub
rcl
stos
icebp
jne
stc
add
roll
jne
xchg
hlt
mov
push
out
or
pop
pop
jae
loopne
sbb
xor
cwtl
ljmp
aaa
fcomps
shrl
dec
aaa
das
mov
pop
fwait
cwtl
cmpsb
jecxz,pt
pop
shl
outsl
mov
inc
sub
je
fildl
movsb
jmp
enter
jge
inc
notl
push
dec
push
xchg
iret
sbb
push
jl
add
je
fs
sbb
xor
into
pop
mov
push
jbe
cmp
sub
mov
jo
mov
push
mov
ret
jno
mov
mov
shlb
cmp
sub
pop
jp
push
rclb
jmp
inc
gs
jae
cmpsl
in
mov
jmp
aam
sbb
sub
sub
sbb
xchg
adc
lea
adc
push
dec
fs
mov
iret
mov
enter
push
inc
sub
and
sbb
xchg
add
jns
jmp
out
jne
sti
inc
and
movsl
mov
jg
push
icebp
fldl
cmp
les
ret
cmp
jns
mov
add
cmp
push
pop
idivl
dec
or
test
lret
inc
loop
ficoms
test
inc
xchg
jg
mov
repnz
cmp
push
inc
xchg
rorl
sti
in
cli
adc
mov
mov
orb
or
lds
daa
and
jp
roll
add
push
sbb
test
jmp
mov
sbb
data16
push
jecxz
aam
insb
loopne
mov
sbb
and
xlat
push
inc
jo
scas
xchg
mov
pop
ja
mov
fwait
dec
out
pop
imul
mov
arpl
or
in
jecxz
sbb
enter
dec
call
xchg
ljmp
fsubs
loope
jne
mov
lcall
mov
dec
dec
add
jns
jns
mov
imul
enter
xor
jg
adc
fisubrs
and
mov
jp
cld
sbb
stos
fmulp
sub
out
pusha
cli
jg
popf
pop
adc
stos
mov
scas
inc
add
daa
fsts
jnp
xor
roll
cli
fwait
iret
mov
and
adc
pusha
adc
or
das
in
mov
dec
ljmp
cmp
imul
inc
mov
rcrb
sub
xor
xchg
or
outsb
dec
std
inc
push
popf
ss
cmp
mov
or
mov
icebp
jb
aad
rcll
out
xchg
xor
scas
fcomps
inc
ljmp
dec
jnp
jmp
xchg
jmp
push
push
and
gs
loope
loopne
out
and
lcall
mov
pop
in
aad
add
loop
fstl
jae
adc
push
or
and
xor
jp
repnz
sub
mov
lods
mov
mov
cmp
jmp
cmc
mov
cmp
and
ret
dec
sub
inc
and
ljmp
loope
fwait
clc
xchg
imul
adc
xchg
lea
fstpl
cmp
rcrl
cmp
mov
test
pop
push
loopne
out
adc
pop
mov
fcompl
inc
outsb
dec
pusha
pop
lcall
xor
sub
gs
pop
or
add
lods
add
cli
push
in
cmpsl
outsb
inc
mov
sub
out
pop
sar
sarb
sbb
loopne
inc
pop
scas
adc
daa
stc
mov
mov
je
jle
add
and
leave
adcb
xor
les
pop
rcrb
outsl
imul
inc
rorb
popw
mov
in
pusha
sarl
xchg
dec
test
jle
pushf
jb
and
into
sarl
xchg
inc
pop
jge
sub
jp
pusha
push
hlt
jg
das
inc
inc
add
lods
mov
in
adc
inc
aam
std
push
sub
scas
cwtl
and
fs
mov
js
ret
test
clc
xor
fisttpl
sbb
mov
add
jmp
dec
fwait
adc
js
sub
add
aas
jg
andb
add
push
iret
test
ljmp
in
sub
sbb
add
mov
addr16
cmp
fwait
cmp
into
inc
mov
cli
aad
dec
mov
dec
out
sbb
jbe
inc
mov
fwait
pop
ljmp
jns
int
sbb
insb
and
mov
fcomi
xor
fs
sbb
dec
in
dec
pop
imul
mov
xor
sti
cmp
repnz
dec
xchg
rclb
insb
and
inc
in
leave
leave
jbe
and
push
mov
stc
lret
jb
in
subl
and
cwtl
cmp
es
gs
mov
mov
and
lcall
push
arpl
int3
dec
pop
aam
mov
dec
call
imul
mov
inc
adc
daa
cs
dec
int
pop
gs
rcll
mov
outsb
dec
pop
adc
xor
cld
cmp
add
inc
insl
mov
es
xor
dec
xchg
push
push
or
inc
add
push
nop
imul
cwtl
movl
jb
insl
aaa
out
in
sbb
jge
fwait
pop
cmpsb
cmp
pop
fildll
ja
fdivrl
les
int
cwtl
sub
cmp
jne
sbb
dec
aas
sub
call
in
xorl
hlt
sbb
gs
cli
cwtl
in
cmc
fldcw
mov
fcomps
mov
add
pop
adc
movups
mov
xor
push
inc
or
js
out
test
aaa
stc
bound
test
aad
fwait
jb
std
ljmp
out
sbb
xchg
sbb
sub
jnp
or
lock
and
mov
xor
sbb
mov
and
das
testl
sub
fdivr
cmp
dec
scas
xor
pop
mov
jno
dec
mov
rcrl
sub
inc
jo
rorb
mov
inc
leave
mov
cmovp
sbb
jns
into
jg
or
cmpsb
inc
jae
in
xor
movsb
test
pop
adc
movsb
and
ljmp
je
std
mov
inc
pop
jmp
jg
and
mov
dec
pop
xchg
mov
or
sub
pop
pop
cmpsb
push
or
mov
stos
bound
pop
xor
nop
lods
dec
aas
movsl
or
pop
cwtl
dec
pop
insb
pop
movsl
lcall
jae
adc
clc
lcall
cld
jns
pop
or
jne
outsb
mov
scas
sti
push
xchg
ret
scas
stc
sub
ja
xor
les
ret
das
mov
xor
mov
jecxz
sub
sbb
and
mov
or
loopne
cmp
sahf
xor
into
cltd
in
xchg
push
or
idiv
xchg
fimuls
jno
je
inc
sbb
roll
lret
cmp
movsb
getsec
cwtl
movsb
pop
jge
stc
xchg
sbb
push
inc
sarb
ret
mov
mov
push
push
insb
outsl
jae
jmp
sbb
fdivs
add
adc
imul
xor
ds
sub
in
cli
cmp
push
cmc
je
add
lods
or
or
shlb
inc
lods
jns
in
arpl
pusha
call
in
insb
andb
aaa
outsb
aad
out
lahf
mov
xor
jecxz
lahf
loopne
in
xchg
mov
add
fcomps
fwait
adc
int
mov
pushf
jle
mov
and
pop
pushf
in
insb
iret
nop
jp
push
mov
scas
lock
rcrb
inc
stc
fildl
test
jnp
ljmp
imul
mov
lds
cmp
aam
icebp
stos
addr16
adc
int3
mov
mulb
inc
out
subb
icebp
orb
sub
sbbl
mov
push
dec
lds
adc
ja
push
cmp
or
pop
mov
xchg
divb
fdivr
enter
mov
push
pop
sbb
shl
sbb
jp
dec
aam
jecxz
push
pushf
and
xchg
std
xchg
cmp
pop
adc
sub
lods
lret
insb
xchg
mov
pop
lds
jecxz
test
shl
roll
clc
jmp
fstp
pop
push
xchg
mov
bnd
xor
push
inc
hlt
fimuls
jp
push
dec
pushl
orb
mov
dec
and
sbb
mov
mov
test
imul
inc
xor
cld
push
popa
inc
lret
xorl
xchg
test
lock
push
cwtl
jno
xchg
lock
adc
rcll
dec
ds
sbb
stos
cmp
xchg
mov
xlat
lret
add
dec
xchg
mov
dec
sbb
cmp
push
cmpsb
out
jge
xchg
inc
sub
mov
stos
or
jne
imul
pop
pop
rcl
mov
dec
pop
int
pushf
shrb
inc
int3
mov
sub
cmp
ljmp
xor
std
stc
pop
push
mov
dec
inc
outsb
inc
lods
adc
int3
xchg
enter
stos
dec
aad
cmp
mov
add
stos
negb
inc
mov
enter
out
sbb
lods
pushaw
jge
leave
jne
mov
and
inc
xchg
mov
sub
inc
mov
pop
loope
test
js
in
mov
imul
into
push
int3
clc
cwtl
maxps
dec
dec
sub
sbb
lret
mov
repz
inc
sub
pop
lods
cmp
dec
mov
cs
push
rorb
iret
jns
mov
mov
cmpb
lcall
mov
push
dec
or
inc
xchg
lods
fcompl
aaa
cmp
add
adc
jb
cmp
jbe
stos
stos
lock
stos
das
cmp
unpckhps
ficoms
mov
xor
subb
fisubrs
push
int3
test
jb
jecxz
jns
jnp
or
pop
es
jge
and
out
or
xchg
push
das
divl
insl
andl
icebp
mov
pop
and
ret
js
inc
leave
sti
add
dec
aam
push
pop
sub
inc
push
and
ss
popa
mov
jle
stos
push
push
fistpll
jmp
mov
xchg
out
xchg
or
loop
sti
pop
ss
in
push
rcll
mov
out
in
cmp
xchg
xchg
testb
lret
cmp
int3
xchg
in
add
in
mov
shl
mov
arpl
sbb
pop
outsl
xchg
ds
popl
add
fildl
stos
push
xchg
add
xor
mov
dec
pusha
mov
mull
xchg
aam
xchg
push
cltd
push
cmp
jmp
sbb
fcoml
jp
xchg
push
pop
les
inc
add
outsb
repnz
pushf
fidivs
sub
out
dec
mov
mov
lods
pop
add
aaa
out
pop
sbb
stc
lea
push
mov
andb
stos
fldenv
out
jne
shlb
mov
in
cs
daa
in
shl
movsl
jnp
cmpsb
cmc
mov
jno
fsubs
test
push
or
xor
sbb
and
jns
sub
sub
rcr
in
adc
cmp
loope
aad
fmulp
lods
sbbb
pop
loope
push
xchg
dec
je
das
sbb
add
shll
xor
mov
cs
mov
sub
ret
push
mov
push
adc
push
mov
adc
xchg
es
jmp
push
dec
fs
adc
cmc
fisubs
repz
arpl
je
outsl
mov
cwtl
fldenv
nop
mov
cmc
imul
push
lock
dec
inc
mov
sub
inc
mov
mov
add
repnz
call
mov
push
fistpll
fildll
sbb
outsb
imul
adc
int3
push
ds
jg
mov
shrl
xchg
cmpsl
push
mov
mov
push
ss
test
fisttps
mov
mov
fs
pop
sbb
mov
mov
inc
push
xor
repz
mov
repnz
mov
cld
push
aad
push
shlb
cmpsl
inc
int
cld
leave
stos
jb
ret
and
xchg
ret
push
out
call
pop
cwtl
push
leave
dec
inc
clc
shlb
dec
in
fs
popf
shll
pop
lods
stos
aam
lock
mov
mov
test
xchg
lods
push
pop
lods
arpl
in
gs
sbb
push
hlt
std
lock
cmpsb
into
es
fcomi
jmp
inc
into
aaa
push
xchg
ljmp
in
xor
in
mov
aad
mov
inc
repz
out
sbb
xchg
pop
rcr
pushl
inc
xchg
fists
in
push
lahf
or
lahf
jae
jne
lret
ljmp
adc
aaa
std
jge
lcall
call
or
inc
aam
fadd
and
xor
movaps
loop
shrl
pop
fs
xchg
push
pop
movsl
adc
sbb
xchg
pop
call
xchg
stc
pushf
push
cmpsb
scas
jge
test
inc
loop
mov
std
sub
xorb
decb
movsl
jge
xchg
loopne
sti
orb
and
mov
aaa
fsubr
sbb
roll
rclb
jg
xchg
jo
fsubl
outsb
mov
lods
sub
inc
add
mov
mov
outsb
repnz
daa
jmp
int
push
lcall
push
lods
dec
mov
pop
push
scas
neg
mov
int
dec
cwtl
loop
xchg
stos
aad
xor
adc
in
pop
jne
or
mov
push
in
mov
jl
je
xchg
jp
sub
in
pop
test
daa
dec
bound
lods
mov
stc
pop
insl
hlt
sbb
je
arpl
arpl
adc
rcr
and
pop
push
movsl
mov
out
sbb
daa
test
pop
int3
das
dec
out
cmpsb
inc
ret
or
test
gs
lea
dec
test
xor
mov
outsb
jns
out
fistps
cwtl
mov
sub
fists
repz
lret
icebp
popf
pop
je
mov
jp
xchg
push
adc
fisubl
jp
cmc
mov
call
or
jo
adc
xor
outsl
or
repz
lock
pop
addr16
xor
in
adc
pop
sub
rcll
add
pop
imul
mov
out
lds
shrl
lods
xchg
xor
mov
cmp
mov
add
shll
cmpsb
and
lahf
or
mov
and
les
sahf
fbld
ret
ret
imul
fucomp
ret
add
fcompl
nop
stos
rcrb
call
add
insb
cmp
mov
in
adc
inc
push
rorb
cmc
xchg
inc
push
mov
cld
and
cmp
mov
push
adc
jl
clc
aaa
mov
iret
scas
adc
xchg
in
jb
test
jne
leave
mov
aam
jl
mov
adc
sub
mov
add
popa
in
xchg
xlat
mov
in
jp
lahf
xor
mov
into
mov
jbe
pop
int3
mov
push
push
jg
cmp
xlat
int3
cmp
repnz
jmp
add
adc
mull
push
pop
pop
xchg
inc
setp
adc
xchg
push
inc
ljmp
fmul
xor
pop
js
rclb
shlb
or
out
pop
out
jl
dec
add
and
addb
cs
xor
lods
mov
fucomip
add
orb
test
mov
lahf
gs
addr16
mov
mov
bound
sub
aas
mov
or
sahf
lret
test
out
xchg
jl
movl
pop
sbb
es
dec
leave
loopne
mov
std
xor
loop
mov
and
cli
mov
fstl
jnp
ret
fdivr
aaa
jb
dec
and
imul
pop
cli
loopne
loop
push
lret
xor
stos
add
jb
std
cmpsb
mov
fstl
ficoml
aam
mov
fists
rclb
lds
or
dec
in
ljmp
sub
inc
xor
add
les
inc
inc
int3
leave
scas
inc
lret
xchg
pop
add
mov
push
dec
mov
int3
out
push
pop
rorb
or
cmp
and
mov
inc
cmp
adc
xor
sub
movsl
mov
add
xor
dec
call
dec
jg
cmp
mov
mov
mov
dec
jo
push
pushf
mov
cmp
mull
mov
push
repnz
jp
push
clc
add
jnp
fdivrs
mov
lods
hlt
nop
test
mov
sbb
cmp
and
cwtl
or
inc
lods
xchg
cmp
je
aaa
jl
in
sub
xchg
shll
dec
fidivrs
add
dec
popa
test
mov
lea
rcr
xchg
sub
lret
xlat
lds
ds
sbb
mov
jae
in
out
aad
repnz
xchg
in
fwait
pop
inc
push
dec
cwtl
jecxz
pop
int
lds
jecxz
add
and
mov
out
mov
mov
cltd
movsl
cmp
cmpsb
add
inc
pop
add
adc
scas
fcmovne
mov
push
test
jle
adc
sub
test
hlt
dec
in
dec
pop
out
cmp
push
mov
outsl
out
jns
stc
add
cmp
aas
icebp
mov
inc
add
shlb
pop
out
jle
sti
pop
push
mov
test
pop
scas
and
jecxz
and
push
jnp
insl
or
cld
add
rcl
jae
in
and
imul
mov
mov
push
test
test
out
add
push
mov
mov
mov
ljmp
mov
or
pusha
jo
cmp
xchg
stos
data16
shrb
inc
int3
sahf
mov
add
fcoms
dec
pop
call
dec
xor
mov
jle
rolb
xchg
cs
shlb
in
imul
mov
movsb
and
idivl
mov
mov
or
insl
add
pop
add
ljmp
mov
sbb
adc
dec
push
mov
and
std
xchg
jg
pushf
cmp
in
xchg
faddp
lcall
cwtl
pop
mov
mov
leave
insb
dec
int3
push
mov
dec
cltd
push
cmp
and
outsl
inc
mov
nop
jle
loope
stos
ja
adc
ds
jo
xchg
mov
adc
adc
add
popa
rolb
in
sub
fcmovnb
sbb
mov
pop
in
xor
call
fs
jle
pop
in
mov
scas
pop
dec
iret
adc
mov
popf
push
cmp
jl
jecxz
lods
out
cmp
popl
imul
mov
mov
add
loop
loope
in
leave
mov
mov
ret
loop
in
jb
jecxz
lods
fists
loop
es
mov
and
mov
int3
mov
lods
test
mov
in
imul
ja
pop
sbb
out
xor
test
fwait
subl
in
daa
dec
inc
push
sub
dec
xchg
fdivs
nop
pop
pop
mov
dec
push
mov
mov
in
sbb
mov
test
pop
mov
jmp
cmp
fisubs
cli
xor
or
xor
fcmovnb
xchg
xorb
stos
cmp
repz
push
pop
push
jle
sbbl
mov
sub
fs
cwtl
lods
adc
adc
outsb
dec
mov
paddsb
lea
int3
aad
mov
mov
pusha
add
shrb
add
sbb
scas
jp
dec
cmpsb
xchg
out
mov
dec
dec
movsl
jge
vmwrite
dec
push
push
mov
jnp
sbb
gs
popl
std
sbb
popf
xchg
cltd
test
mov
lcall
cmp
mov
dec
test
sbb
sbb
adc
dec
mov
jb
pop
cmp
std
mov
lea
push
add
sbb
inc
xchg
orb
insl
sbb
or
adc
pop
rclb
jae
int
inc
pop
jo
dec
mov
xchg
push
xchg
ds
cmp
xchg
sbb
mov
rolb
mov
pop
xlat
mov
arpl
test
push
bound
ljmp
sub
dec
mov
aam
add
fxch
xchg
mov
sbb
in
xor
adc
pop
sub
cwtl
lahf
lahf
sbb
jl
sbb
xlat
scas
sbb
das
mov
aam
repz
xorl
jne
xor
repz
pop
sbb
adc
inc
add
repnz
adc
sbb
cli
mov
inc
loopne
jae
inc
push
push
test
loopne
enter
fdiv
fisubrl
call
jo
cmc
js
sbb
jae
fcoml
data16
pop
xorb
pop
add
push
and
stos
movsb
jbe
sarb
and
adc
pop
mov
or
sbb
movsb
lahf
lds
mov
int3
add
pop
jp
stos
cmp
jae
sbb
mov
xor
xor
add
mov
lcall
mov
jge
sub
icebp
nop
add
sbb
inc
decb
in
imul
xchg
xor
sub
lret
mov
ret
dec
pop
add
inc
in
notb
cmc
idivb
inc
pop
sbb
out
push
cmpsb
inc
enter
inc
cwtl
sub
aaa
inc
mov
pusha
test
mov
pop
xorl
mov
dec
popf
loop
and
add
xchg
pusha
mov
sbbl
cmpsb
sti
lahf
cwtl
outsl
lock
inc
xor
aad
push
cmp
jp
mov
jne
inc
mov
loopne
fmull
mov
pop
fnsave
add
clc
mov
jge
std
sbb
inc
je,pn
imul
in
mov
jge
fldt
dec
jp
cld
cli
mov
fdivrl
jp
inc
scas
out
sbb
shll
and
xchg
mov
push
aam
imul
mov
add
loop
xor
jo
sar
loope
mov
mov
mov
xchg
out
notl
sbb
stos
push
shlb
popf
lcall
scas
shrl
fbstp
ds
ret
mov
repz
lahf
xchg
push
mov
daa
and
into
sbb
lods
in
jb
jbe
push
inc
aas
xchg
lods
test
imul
jmp
stc
jle
sarb
mov
inc
lret
popa
fnstenv
movsb
les
mov
lods
pop
mov
mov
pop
movsl
data16
pop
mov
or
cmp
adc
push
inc
pop
lret
xor
adc
jae
inc
and
das
adc
pop
mov
or
leave
jnp
xchg
mov
out
jns
imul
push
repz
xchg
leave
hlt
sbb
lcall
cltd
inc
and
gs
jno
pop
xchg
test
iret
and
icebp
aas
sbb
aaa
and
in
sahf
mov
enter
pushf
daa
aas
xchg
inc
bound
enter
fmull
dec
xlat
xchg
jge
shll
jge
xchg
cwtl
mov
js
xchg
mov
xor
stos
lds
push
jns
sub
out
test
and
add
ljmp
mov
push
rorb
xor
shrl
push
outsl
lcall
loop
dec
scas
sub
insl
jb
cmp
ret
xchg
push
sub
in
push
mov
push
ljmp
insl
pop
rorb
subl
xchg
fcoml
cmp
or
xor
mov
mov
pop
out
nop
dec
fimull
or
jp
cmp
divl
xor
push
or
dec
dec
lea
cmp
mov
push
cs
or
dec
add
push
leave
or
pusha
das
mov
push
fldl
dec
cmp
mov
jb
leave
nop
popf
mov
aas
dec
mov
cli
pushf
cwtl
xchg
xor
pop
mov
pop
cmp
mov
mov
xor
daa
mov
inc
test
repz
outsb
jecxz
xlat
in
test
xchg
xchg
cltd
adc
gs
scas
in
and
lds
mov
or
and
fmull
je
lods
push
inc
je
jp
push
nop
sub
or
lret
jle
cmp
sbb
cmpsl
stos
xor
cmpsl
pop
xchg
adc
xlat
mov
rcl
loop
jl
test
xchg
mov
loopne
fdivr
test
mov
jp
into
mov
shll
dec
pop
loope,pn
xor
xor
shlb
test
dec
xchg
stos
xchg
std
lds
pop
xchg
aaa
mov
adc
mov
in
or
test
scas
shrb
out
push
les
or
xchg
push
and
push
add
jae
outsb
mov
adc
arpl
fidivrl
dec
rolb
xor
popf
sarl
jbe
pop
xchg
stc
cwtl
call
in
inc
int3
and
daa
into
mov
pushf
pop
cwtl
cmp
lret
pop
inc
add
fstps
imul
aas
hlt
sub
inc
sub
rorb
into
rclb
push
mov
jb
les
xor
aad
pop
lcall
subb
xor
pop
insb
mov
dec
repnz
loopne
inc
push
ljmp
inc
inc
mov
shrl
mov
fdivr
sub
ds
xor
jecxz
mov
fxch
aad
testl
lods
inc
je
mov
mov
insb
add
jge
inc
push
sbb
push
jecxz
sub
jge
cmpsl
mov
pop
pop
inc
mov
in
push
and
pushf
data16
mov
cmp
das
hlt
jle
movsl
push
inc
pop
test
aad
xchg
push
lods
jnp
sub
outsl
xchg
lock
fcoms
enter
loop
ljmp
in
mov
xchg
mov
xor
stos
fcom
lahf
cmp
fisubrl
ljmp
lods
cmp
push
icebp
aas
mov
daa
out
andb
push
repnz
xchg
mov
cmp
mov
ljmp
mov
cmp
ss
xchg
xor
int
cli
sbb
cli
fsubs
push
dec
cs
fimuls
mov
call
push
fisttpl
and
and
sbb
mov
push
push
test
cmp
ljmp
pop
lock
bts
cmp
jmp
jnp
int3
add
pop
add
adc
pop
jae
leave
cmpsb
mov
inc
aaa
cld
add
lods
cmc
dec
sub
xlat
lret
xor
aaa
ja
push
cld
das
push
fsubrs
inc
sbb
jb
jg
inc
cmpsl
leave
pcmpgtb
aam
sbb
rcr
in
add
scas
fistps
and
jo
dec
divb
jecxz
and
stos
sub
sub
nop
stc
and
lods
pshufw
fcmovnu
inc
mov
cmp
dec
xlat
dec
jno
sbb
sbbb
add
dec
adc
andl
enter
popa
in
test
push
popf
add
repz
sbb
imul
adc
lret
and
lahf
dec
mov
pusha
ja
sbb
shlb
add
dec
negl
clc
pop
cmpsb
xlat
inc
cmpsl
mov
repnz
out
fisttpl
js
and
cmp
lret
les
pop
or
jbe
jl
xchg
movsb
daa
push
xchg
cmp
mov
into
xchg
fsubl
jbe
leave
fadds
imul
dec
aas
mov
outsb
aaa
pop
mov
sbb
mov
int
push
xchg
movsb
pushf
imull
dec
pop
aas
inc
cmpsl
hlt
ret
inc
imul
push
mov
pop
sub
fisubs
js
icebp
sub
mov
mov
pop
je
mov
insb
mov
std
add
pushf
shll
je
mov
cs
mov
lods
and
mov
movsb
fs
push
pop
jl
pop
int
rcrl
lea
pop
or
outsb
pop
lahf
pop
mov
xor
daa
jmp
bound
jge
mov
pop
dec
mov
loopne
add
inc
mov
out
mov
pop
out
push
inc
negl
lods
in
cld
adc
and
dec
call
aad
cmp
outsl
cltd
jle
fldcw
aad
cmpsb
in
call
shrl
cmp
test
dec
xor
mov
jns
lret
adc
inc
test
jae
mov
lods
aaa
daa
xchg
je
out
ret
or
stos
lret
mov
jle
jb
xchg
andl
cmc
les
rcl
icebp
sbb
or
es
inc
fwait
jmp
cmp
ficoms
jno
cmc
nop
fidivs
inc
cmc
sbb
js
mov
dec
dec
bound
sub
add
mov
inc
enter
popa
shll
push
add
in
das
cmp
push
out
cld
in
dec
sti
shll
mov
lahf
in
lahf
dec
sub
add
add
or
cmpsb
xchg
mov
int
in
icebp
push
je
imul
cwtl
push
sbb
mov
fiadds
std
iret
dec
mov
sub
test
movsb
mov
mov
int3
mov
inc
mov
inc
push
rcrl
mov
mov
mov
inc
cmp
or
subl
aaa
dec
push
mov
sbb
inc
testb
iret
aam
or
xlat
adc
xor
push
in
mov
das
cmpsl
push
pop
sub
mov
push
xor
jle
pop
cmp
mov
mov
xchg
aas
mov
inc
push
mov
jbe
stos
pop
int
inc
and
in
cmp
pop
stos
icebp
adc
pop
add
xchg
mov
push
sbb
addr16
decb
add
cltd
lock
adc
mov
stos
idivl
cwtl
xor
xor
sub
mov
cmp
idivl
jbe
mov
stc
sub
and
out
mov
xor
mov
lea
xchg
mov
mov
or
sbb
ja
mov
addl
out
in
and
push
minps
gs
data16
stos
xchg
push
mov
or
pop
inc
stc
cmp
movsl
std
and
sbb
daa
scas
pop
xor
jnp
outsl
addl
xchg
mov
ret
xchg
cmp
movsb
cwtl
cmc
or
loopne
jo
push
jmp
or
lock
scas
lret
inc
movsb
push
push
sub
test
fs
fwait
push
sub
rorb
iret
pop
adc
mov
lcall
lret
jmp
adc
xor
xor
lds
loope
push
sub
js
ja
cmpsl
in
in
mov
addr16
iret
mov
arpl
push
ds
sub
add
or
jb
and
inc
mov
ljmp
xor
lds
in
sbb
mov
lret
orl
scas
out
jnp
out
pop
adc
fmulp
push
ret
fsub
xchg
mov
and
adc
ss
adc
pusha
dec
push
xor
cmp
or
fs
nop
add
bound
push
mov
movsb
xchg
or
inc
fdivr
loope
int3
vsubps
loopne
ret
outsl
aad
inc
and
cmp
mov
mov
cmp
cmp
sahf
cmp
jno
pop
cld
je
cmp
fsubl
cmpb
stos
fcompl
jno
mov
scas
push
inc
cmp
cmp
scas
jp
lea
stos
jae
cmp
insl
out
push
mov
fisttpll
sub
dec
lds
inc
test
sub
sbb
je
mov
add
push
mov
arpl
jp
out
dec
push
popf
cmp
es
cmc
cmp
or
sbb
sub
imul
dec
ljmp
ss
add
jno
jo
add
push
and
rcl
fldcw
scas
orl
addr16
mov
sbb
cwtl
add
ret
jbe
inc
js
ret
mov
adcl
ljmp
inc
mov
adc
lds
mov
add
mov
shr
sarb
stc
fdivrs
jp
inc
or
dec
mov
sub
pop
loop
xor
fisttpll
or
dec
jg
cmc
xchg
fisubl
inc
mov
mov
mov
shl
test
test
push
jnp
into
cmpsl
fsubl
pop
jle
mov
lock
and
xor
scas
adc
adc
mov
jp
int3
jns
test
loop
dec
jne
pop
sbbl
jb
mov
test
pop
insb
mov
add
cmpsl
das
mov
push
int
dec
ds
pop
aam
out
sub
add
lods
aas
xchg
sub
dec
ret
mov
mov
movsb
fcompl
mov
adc
scas
inc
cli
sbb
repnz
inc
or
mov
stos
xchg
xchg
pop
cmp
fstpl
dec
pavgw
jb
cwtl
lods
xchg
xor
jl
add
gs
lahf
jo
sbb
addl
fwait
sbb
push
mov
test
sbb
cmc
test
aaa
and
pusha
cwtl
addb
loopne
movsb
xchg
test
ljmp
push
push
repnz
loope
shlb
outsb
ss
cs
mov
scas
hlt
popf
in
adc
insl
fldt
lahf
dec
outsb
into
jl
xor
cmp
pop
push
aam
or
hlt
jne
add
jl
adc
sbbl
push
out
push
je
in
shrb
xlat
mov
rolb
pusha
cmc
and
inc
movsb
inc
test
sbb
fs
loopne
cmpsl
gs
sbb
roll
lock
mov
shlb
das
icebp
loope
push
push
in
mov
cmp
pop
mov
xchg
sahf
out
mov
mov
sahf
repz
or
shrl
xor
cmp
adc
daa
pop
pop
cli
lcall
daa
and
loop
fcom
adc
cmpsl
cs
hlt
shl
mov
repz
psubb
xor
shrb
or
mov
inc
adc
push
mov
mov
outsb
loopne
dec
pop
out
stos
iret
aam
outsl
das
popf
fnstsw
pop
clc
test
and
mov
push
cmp
jg
and
inc
jl
adc
push
lcall
in
add
and
mov
pop
cmpsb
and
push
push
data16
int3
rorl
or
repz
into
add
add
cmp
pshufw
and
arpl
enter
pop
in
pop
xchg
stos
popf
repz
es
inc
dec
dec
fidivl
cmp
in
mov
xor
test
mov
test
inc
xchg
cmp
test
pushf
dec
mov
rcll
movsb
push
pop
pusha
or
xchg
xchg
test
mov
add
stos
dec
int3
hlt
mov
leave
mov
mov
inc
js
lret
adc
mov
aas
xor
lcall
lock
scas
jne
aas
inc
sbb
push
daa
aas
dec
xor
test
add
xor
add
pop
cmp
fsubrl
mov
xor
pop
testl
mov
subb
psadbw
dec
repnz
push
das
mov
je
dec
sub
jo
cltd
hlt
and
test
pop
rorb
lock
fwait
sti
pop
mov
lret
insl
mov
mov
xor
push
jno
std
lds
ficoml
sbb
dec
mov
add
fsts
jge
and
dec
push
pop
dec
cmp
cmp
push
fiadds
inc
fcoms
mov
mov
int3
fsubrl
fmull
add
inc
aam
cmp
cmpsl
xor
lods
std
cli
cmp
inc
movsl
out
cmp
cmp
fldl
jns
aad
or
popa
push
sbb
sub
xor
sti
cmpb
nop
jmp
xchg
sub
jge
fistpll
mov
int
adc
outsl
in
xor
fs
cmp
call
imul
test
pushf
ja
cmp
outsb
sub
leave
faddl
fwait
mov
jge
push
add
inc
imul
sbb
or
test
fisttpll
add
pop
lret
jl
add
xor
fs
jb
jp
fdivrl
and
std
scas
xor
shl
or
push
push
xchg
mov
mov
in
fidivrl
cwtl
push
lret
adc
movsb
loope
out
int3
daa
pop
cmpsb
iret
fprem
fwait
push
sbb
or
mov
fcoml
stc
hlt
cmp
inc
sub
cmpsl
add
sbb
add
test
stc
jo
xchg
lods
fists
xchg
pop
pop
or
push
pop
or
jnp
in
adc
inc
and
das
sbb
sbb
mov
jbe
mov
push
test
xchg
enter
add
lret
mov
sub
stos
or
and
push
filds
imul
cli
divl
fldt
xchg
jne
dec
sti
cmc
sbb
arpl
mov
shrl
or
sub
fsubl
not
addr16
push
ja
pop
pop
mov
mov
movlhps
test
push
mov
jne
inc
or
inc
cmpb
stc
push
jl
mov
outsl
mov
in
repnz
sarl
pop
and
in
mov
test
loop
and
adc
int
nop
call
inc
inc
dec
ss
mov
inc
insb
jno
adc
outsl
sub
cmc
push
ret
mov
fstpl
pop
mov
pusha
inc
dec
push
jle
mov
push
cltd
dec
addr16
bound
push
sub
pop
popf
mov
mov
fcoms
mov
or
and
push
addl
mov
sbb
mov
mov
jnp
xor
dec
pop
xchg
pop
scas
add
pop
pop
add
jge
aam
mov
fstpl
cli
insb
mov
jge
xchg
sub
test
fnstsw
or
pop
fidivrs
mov
inc
das
or
out
mov
cs
push
mov
inc
push
lcall
fnstcw
pop
hlt
mov
leave
popa
xor
les
sub
movsl
test
xchg
sbb
pcmpgtw
jne
lcall
lds
dec
pop
sub
push
jnp
stos
bound
outsl
outsb
push
fistps
push
bound
mov
sub
das
and
inc
sbb
out
lcall
and
and
pop
jp
xorl
andl
push
and
fs
mov
sub
xor
in
mov
or
inc
in
jp
xchg
mov
out
inc
pop
stc
mov
mov
loopne
mov
push
popf
pusha
repz
pushf
mov
fsubp
lods
mov
jo
pop
and
mov
xchg
mov
jbe
pusha
in
std
scas
lea
in
sub
mov
out
sbb
inc
mov
adc
sub
orb
jnp
jecxz
adc
sbb
or
and
xchg
xor
mov
hlt
add
les
test
mov
neg
inc
push
shlb
jb
aam
adc
test
mov
or
shl
sub
stc
leave
jmp
lret
mov
cmp
xor
arpl
adc
xchg
add
mov
in
and
mov
pop
adc
icebp
cmp
icebp
dec
bound
push
repnz
sub
repnz
mov
mov
and
pop
iret
pop
shlb
fstps
fstps
push
cmp
in
dec
les
pop
mov
adc
pop
push
mov
xchg
fisubl
push
call
test
jns
popf
ds
rclb
icebp
popl
push
mov
mov
test
cmp
stos
xchg
cmp
cmp
rclb
out
stos
sbb
push
xchg
add
cmp
idivl
push
dec
je
adc
xchg
jbe
aaa
push
nop
adc
out
pop
mov
imul
mov
aaa
dec
cmp
rorl
pop
mov
inc
pop
xor
mov
inc
inc
stos
mov
insb
sti
mov
adc
mov
lahf
dec
cld
add
jnp
mov
jle
fs
dec
push
das
test
mov
mov
or
dec
adc
scas
loope
data16
pop
aad
lcall
or
and
lds
inc
push
mov
inc
xchg
push
inc
xor
outsl
mov
loope
mov
add
jl
into
ret
inc
and
pop
data16
or
test
mov
jno
push
sarb
out
pop
adc
into
inc
fiadds
loopne
mov
jne
xlat
cmp
xor
std
test
pop
mov
inc
clc
movsb
jge
iret
add
push
pop
out
stos
ficoms
bound
pop
sbb
pop
xchg
cmpsl
jmp
pop
int3
jno
xchg
or
mov
test
stos
pusha
stos
test
adc
xchg
stos
adc
mov
adc
call
jl
fnstcw
cmp
sahf
jl
xchg
test
xor
mov
addr16
fidivrl
xchg
xchg
adc
das
icebp
aad
psllw
lods
jmp
jle
mov
jecxz
aaa
mov
pushl
sbb
fwait
addr16
mov
push
fnstcw
insw
jae
xor
lret
cmpsl
pop
jle
test
jns
ret
nop
sub
and
push
adc
push
jne
pop
ds
test
xor
xchg
sbb
jnp
int
sbb
or
ss
test
adc
adc
mov
sub
jno
out
es
cld
sbb
mov
aas
data16
xorb
pop
pop
sti
int3
inc
fwait
cmp
dec
mov
fs
int
mov
cmpsb
mov
sbb
je
or
sahf
lods
pop
add
mov
cmp
sbb
gs
cmp
pushw
lahf
into
out
jb
mov
outsb
outsl
pop
and
inc
and
in
movsl
mov
or
out
pop
pop
mov
arpl
inc
and
int
cs
leave
stos
lcall
mov
push
xchg
je
add
adc
sub
leave
repnz
dec
push
std
leave
mov
lcall
sbb
je
test
xchg
or
mov
mov
adc
inc
mov
mov
cmp
lock
pop
jo
xchg
cmp
jne
xor
push
sub
pop
adc
sub
fwait
push
ss
jns
fistps
jmp
xlat
fsts
cmp
sub
mov
jle
or
push
movsl
adc
adc
addl
stos
lar
hlt
jno
sub
dec
lea
rclb
mov
push
dec
mov
dec
movsb
xor
bound
es
jl
add
test
pop
push
jne
fs
daa
mov
cmp
pop
outsl
add
cmp
popa
cld
pop
test
xor
lock
das
dec
in
les
int3
int
call
movsb
jb
xor
cmp
xchg
roll
cmpsb
out
mov
test
shr
mov
mov
mov
imul
bound
stos
clc
bound
lods
cmp
addr16
and
or
xor
xor
fnstenv
mov
push
das
pop
jae
jecxz
dec
and
loope
sub
mov
push
pop
cmp
out
pop
inc
insb
and
inc
push
movsb
mov
push
lcall
cmp
cmc
call
mov
sti
loop
mov
mov
sbb
pop
or
ss
cmp
fcmovnb
jge
push
shr
mov
and
sub
cs
mov
movsb
mov
les
push
mov
sahf
scas
aam
lods
dec
jmp
add
lret
cmp
aaa
xor
test
adc
lds
pushf
sbb
xor
inc
stc
xchg
push
xor
sbb
adc
cli
and
sub
and
das
aad
xchg
sbb
pusha
push
and
cmp
ds
cmp
bound
jecxz
mov
sti
pop
cwtl
jge
popf
xchg
jnp
ljmp
mov
jp
push
jb
iret
adc
jle
gs
xchg
push
loope
es
pop
dec
sbb
roll
xor
jle
fistl
outsb
fadds
hlt
sub
xchg
jne
mov
lahf
pop
lcall
xor
sbb
cmp
frstor
cmpsl
cli
cmp
fldt
mov
push
dec
push
adc
int
imul
xchg
jbe
sbb
daa
icebp
mov
loopne
xor
cmp
or
pop
movsb
lret
lock
mov
lcall
data16
out
repz
pushf
or
inc
or
or
pop
cld
push
hlt
inc
or
jno
icebp
sar
mov
das
mov
test
push
pushf
push
jp
ds
xor
out
data16
pop
sbb
adc
loop
ljmp
fcompl
mov
sbb
mov
add
jae
xchg
xor
or
xchg
add
popf
add
inc
xlat
movsb
mov
sahf
or
insl
add
nop
es
out
mov
sub
int
push
int3
ja
push
push
adc
mov
movsl
xor
es
fisubs
mov
out
add
and
or
xchg
ja
cwtl
adc
dec
pop
test
rcrb
test
movsl
push
call
jns
outsb
out
adc
mov
in
pusha
addr16
cmp
sahf
jge
insl
jmp
movsb
or
xor
shrb
inc
pop
xchg
xor
shl
inc
sub
test
mov
xchg
lods
jne
mov
fistps
jge
std
inc
jbe
test
in
outsl
fisttpll
ds
mov
push
les
push
hlt
imul
mov
dec
enter
mov
or
imul
mov
jb
inc
fnstenv
pop
fs
cmpl
xchg
pop
fst
xchg
push
enter
ficompl
lcall
adc
cmp
in
mov
mov
sbb
dec
arpl
pop
insb
test
push
gs
icebp
mov
enter
cmc
xchg
dec
sahf
out
test
cmpsl
pusha
add
mov
sbb
mov
and
adc
call
pop
jmp
inc
les
sub
divb
ja
sub
and
dec
into
outsb
mov
icebp
stos
hlt
cmpsl
out
fisttpl
mov
inc
inc
or
sbb
mov
shrb
jnp
push
addl
or
dec
xor
inc
fs
or
adc
sub
inc
lahf
xor
jle
stc
sbb
insl
je
test
or
push
adc
xchg
arpl
mov
mov
mov
mov
movsl
lahf
sub
add
pop
sub
mov
pop
cwtl
and
cs
cmp
repnz
loope
dec
int3
add
sbb
das
outsl
int
add
xor
cli
or
inc
mov
mov
out
pop
cmp
cmp
jge
nop
ds
fisubs
lcall
sub
rcll
sbb
push
inc
ja
mov
pop
adc
xchg
lcall
cmp
mov
notl
xchg
rcr
add
xchg
mov
fsubrl
inc
mov
cwtl
lods
adc
rcr
adc
inc
sub
enter
movsb
mov
adc
cwtl
xor
aam
mov
mov
negl
addl
inc
sbbl
mov
stos
and
push
mov
add
pop
imul
add
push
jne
stos
sbb
loopne
mov
ud0
jg
adc
leave
je
push
inc
lcall
sbb
sbb
dec
outsl
shll
mov
lods
in
lahf
mov
clc
gs
ret
dec
pop
pop
push
xchg
lret
sbb
add
out
mov
nop
pop
xchg
pop
fnstcw
xchg
push
aaa
or
push
push
int
cmc
insl
mov
adc
js
pop
sbb
mov
mov
add
out
cwtl
push
call
add
imul
orb
fstpl
js,pt
xchg
frstor
fcomi
lods
insb
xchg
out
pop
out
popf
cld
lock
dec
add
add
mov
ficompl
into
subb
or
add
int
test
imul
or
js
mov
and
es
push
jns
xor
in
test
fidivrl
sub
cmp
mov
pop
idivl
loop
out
mov
subl
lods
call
popf
icebp
add
ss
icebp
imul
test
and
cltd
jle
or
sub
jge
shrb
cmc
xor
and
mov
shlb
mov
cmc
ds
mov
xchg
jne
fwait
insl
xchg
cmpsb
inc
add
mov
pop
repnz
mov
xchg
test
push
outsl
popf
test
cmp
push
iret
es
fstl
popa
lret
inc
mov
inc
push
mov
vmovntps
lret
and
and
and
subl
incl
mov
dec
mov
mov
clc
sub
jbe
mov
add
lcall
stc
sub
xor
xor
fdivrs
dec
mov
push
inc
stc
fistpl
test
sbb
in
negl
add
aaa
popa
dec
popl
push
add
mov
adc
push
lods
fcomip
or
pusha
jmp
sbb
sub
sub
push
fwait
dec
mov
add
cmp
jo
ret
xchg
sbb
lgs
cmp
adc
pusha
dec
ljmp
pop
out
lods
mov
and
add
cld
stc
data16
addr16
scas
loopne
into
in
test
popl
pop
in
or
add
cld
sbb
xor
out
fld
jns
ffree
pop
and
fdivrl
jmp
jbe
dec
push
repnz
inc
test
idivl
lods
and
xchg
inc
addb
sub
xlat
iret
ja
mov
loopne
addr16
mov
mov
jnp
mov
push
sub
sbb
sahf
clc
adc
in
clc
rclb
pop
je
dec
mov
jnp
mov
push
pop
popa
ret
push
sti
sbb
nop
adc
sub
out
je
dec
fldt
hlt
pop
sbbl
xor
pop
js
lock
push
out
ja
xchg
fs
dec
xchg
sub
cs
pop
popf
add
sbb
stc
push
mov
into
in
xor
shrl
stos
mov
call
int3
or
dec
mov
lret
dec
rcl
incl
dec
scas
stos
add
vpcomuw
mov
xchg
push
fwait
jne
pop
and
cmp
push
std
daa
in
pop
or
pop
pop
sub
dec
andb
les
adc
dec
lcall
jge
in
adc
pushf
sbb
data16
cmp
jae
ss
icebp
inc
adc
xchg
arpl
fildll
sub
daa
in
push
cmc
sbb
mov
gs
sub
das
sarl
cld
cwtl
sub
paddd
sbb
push
clc
jo
addl
dec
or
movsl
jmp
push
push
mov
xor
popl
add
mov
cwtl
clc
lds
and
pop
push
std
sub
pop
xor
sahf
xchg
fwait
bnd
sbb
scas
ret
std
jae
rcll
add
inc
and
cmp
fsubs
xchg
or
or
dec
jecxz
fildll
adc
test
movsl
mov
fsts
lea
cli
loope
sub
gs
in
ss
int
adc
leave
dec
add
call
sbbb
inc
repz
push
xor
movb
movsb
xadd
push
add
fadds
adc
xchg
jnp
mov
popf
lret
xor
cmc
mov
mov
adc
and
decl
fstpt
pop
push
jbe
cmp
adc
sti
loop
cmp
push
out
notb
sbb
fsubrs
sub
int
test
je
pop
xor
aad
xor
cmp
hlt
shl
repz
lock
jo
test
pop
push
mov
sbb
cmp
jmp
push
aam
cmp
imul
inc
loope
or
jbe
roll
aam
lcall
mov
nop
mov
js
mov
dec
pop
pop
jle
xchg
push
rcrb
nop
hlt
push
lds
popa
add
fadd
rcl
in
mov
lock
movsl
sbb
push
xlat
scas
mov
xor
ret
stc
dec
cmc
clc
dec
sbb
out
or
or
lea
mov
pop
jb
sti
cmp
and
inc
xchg
rcrb
aad
jns
rcrb
inc
ljmp
into
notl
add
xor
jg
imulb
sahf
mov
mov
xchg
popf
mov
and
sbb
out
mov
pop
divl
in
fisubs
fistps
add
mov
xchg
sbb
fcomp
and
lahf
mov
pop
neg
add
leave
aam
loopne
push
mov
mulb
gs
test
cld
leave
stos
popf
sub
jae
and
mov
dec
mov
cld
test
fisubs
das
xchg
jle
rorl
dec
movsb
mov
jnp
push
scas
cmpsb
rorb
cltd
inc
pop
data16
adc
pop
sub
push
lcall
and
test
mov
test
push
incl
pop
pop
imul
rorl
ret
movsb
loopne
cmp
push
js
repz
adc
mov
fnstcw
enter
nop
gs
cwtl
dec
outsl
sub
and
sub
sub
mull
mov
push
fwait
subb
ds
jo
lcall
cmp
adc
adc
or
jb
int3
clc
and
fstl
je
daa
lahf
adc
scas
jg
push
cmp
xchg
bound
out
or
mov
push
mov
out
jle
out
ret
mov
ret
push
stos
shll
push
cmp
inc
les
out
shll
jno
cli
popf
xor
push
jne
jns
les
pop
lock
mov
cltd
movd
lahf
adc
mov
sub
adc
popf
clc
mov
xor
jl
dec
xchg
enter
decb
das
addr16
pusha
shl
xchg
in
adcb
jo
aas
inc
pop
les
lock
sub
stc
adc
cmp
iret
push
dec
inc
pusha
cwtl
pop
repz
xor
mov
or
inc
lods
test
popf
mov
mov
xlat
jg
or
div
sbb
mov
sbb
mov
pop
dec
arpl
push
cmc
lods
jno
xchg
ja
xchg
sub
daa
or
rcrl
filds
repnz
inc
aam
loopne
mov
pop
inc
dec
xchg
pop
push
test
and
ret
test
xor
aaa
pop
data16
xchg
xor
stos
pop
gs
pop
sbb
pop
pop
mov
clc
fs
ds
nop
push
test
hlt
sub
mov
outsl
ffreep
cld
mov
add
outsb
sbb
js
inc
push
mov
add
insl
into
rcll
pop
int
jl,pn
add
sbb
fbld
pop
cmp
insb
fmull
inc
enter
xchg
repz
mov
ds
add
sbb
cmc
dec
rclb
fs
test
fnstenv
cmp
lods
cwtl
out
clc
push
sub
je
cltd
jle
jns
cmpsb
pop
repz
push
int
push
mov
mov
insl
mov
mov
orb
push
add
and
repnz
stc
lret
inc
cmpb
cmp
inc
xlat
xor
sbb
dec
jle
stos
dec
dec
mov
mov
dec
or
bound
je
shlb
adc
jae
sub
xorb
push
daa
mov
into
add
cwtl
mov
xchg
into
xor
mov
pushf
mov
shrl
fdivl
sbb
lods
out
scas
movsl
jnp
xor
cmp
mov
dec
js
sub
int3
leave
jne
sub
in
jnp
inc
push
inc
cmpsl
arpl
stc
sbbb
cmp
push
jo
add
cli
xchg
mov
sbb
xchg
std
outsl
sub
sti
mov
lods
and
aam
lock
sub
fiaddl
xlat
and
insb
mov
sub
inc
jecxz
insl
dec
mov
mov
movl
mov
mov
std
popa
or
dec
jecxz
jo
pop
dec
popa
cmp
clc
pop
mov
leave
sahf
adc
and
scas
subl
mov
mov
xchg
sub
pop
or
inc
call
enter
pop
mov
inc
push
dec
jno
xor
mov
pop
push
xorb
cmpsl
in
push
sub
dec
adc
xchg
cmpsb
loope
imul
out
ds
dec
and
leave
push
out
mov
lods
and
mov
or
call
int3
add
and
ljmp
mov
testb
pop
and
call
push
cmc
mull
push
sub
mov
fwait
xor
push
push
jl,pt
shll
loope
loop
push
int
pop
imul
mov
and
mov
fxrstor
adc
int3
pusha
xchg
fstpt
mov
pop
lods
adcl
movsb
mov
mov
mov
negl
cmp
lahf
or
xlat
divb
push
stc
mov
cmp
add
aam
xor
dec
push
lahf
push
imul
cwtl
push
pop
xchg
hlt
scas
dec
data16
jp
das
ret
cmc
mov
add
mov
pop
pop
test
stc
cmp
pop
movsl
xchg
push
jecxz
xor
ljmp
daa
into
mov
push
rorl
xor
jle
and
pushf
or
pop
cmc
leave
jecxz
nop
rcl
scas
xchg
aad
or
and
ffree
inc
sti
ds
mov
repz
imul
push
stc
sti
inc
or
cmp
lds
sub
xorb
rorb
jl
stos
mov
xchg
enter
repz
ret
aas
sub
mov
xchg
in
jle
repz
mov
ret
mov
mov
cmp
or
adc
es
ficoml
adc
and
add
and
mov
scas
decl
dec
mov
js
xchg
add
pop
dec
mov
fs
jo
cmp
mov
sti
xor
nop
shrb
push
sbb
dec
ss
sbb
sahf
push
mov
dec
pop
stc
repnz
mov
out
int3
xor
inc
lock
sbb
fmull
xor
bound
add
in
inc
inc
xchg
mov
cmpsb
jnp
xlat
jle
lea
push
pop
inc
sbb
loopne
fmul
cmp
mov
mov
mov
mov
sub
jl
dec
adc
movsl
ret
xor
push
xor
fdivrl
jb
ret
test
scas
aad
pop
cmpsl
repnz
jmp
inc
out
sub
nop
inc
aad
dec
jle
cwtl
push
stos
inc
movsb
adc
push
push
int
mov
lahf
inc
daa
loop
mov
jmp
test
sub
in
mov
xor
xor
in
int3
fwait
xchg
xchg
sahf
stc
push
mov
cmp
inc
and
test
adc
inc
pop
or
sti
cmp
mov
xlat
sbb
push
jno
add
sbb
cmp
imul
arpl
add
fbstp
sbbb
sub
test
lds
hlt
xlat
xchg
ja
jbe
cltd
mov
scas
jb
sbb
insl
int3
push
or
inc
add
scas
or
out
cmpsl
mov
clc
idiv
mov
push
hlt
jne
pop
outsb
das
cmp
adc
inc
dec
orb
dec
sbb
mov
fwait
mov
sub
add
lcall
lcall
pop
shll
dec
aaa
lock
push
jb
cs
push
int3
or
in
aas
into
out
or
or
int3
fildl
xchg
ficoml
mov
mov
mov
iret
push
sahf
in
add
mov
cmpsl
sbb
add
xchg
test
jnp
jns
dec
xchg
add
insl
inc
and
mulb
stc
iret
cmpsb
iret
inc
jne
cltd
pop
pushf
add
dec
cmp
lods
push
sbb
sub
pop
adc
cmc
push
fimull
lds
cmpsb
push
push
lods
push
mov
shr
jl
into
cmp
push
adcb
sub
scas
sub
mov
mov
enter
andl
cmp
lret
adc
push
stc
inc
mov
imul
sbb
xor
mov
stc
dec
jne
pop
xchg
andb
int3
nop
adc
into
call
out
data16
loope
insl
scas
aaa
gs
add
adc
data16
sub
cmpsl
cli
daa
adc
mov
cmp
push
addr16
xorb
sbb
mov
push
negl
sbbb
pop
test
mov
fisttps
mov
in
outsb
out
les
cs
sub
and
aas
add
or
shl
fstps
or
mov
rcrl
out
inc
les
mov
add
sub
in
popa
add
les
icebp
dec
das
cmp
stc
gs
xchg
ret
ljmp
pop
sarl
int3
fimuls
cmpsb
xlat
arpl
test
insl
xor
cmp
lea
jmp
std
iret
dec
insl
add
shrw
push
inc
lcall
xchg
pop
push
or
inc
inc
pop
mov
sub
in
inc
in
and
jne
out
push
adc
mov
js
mov
push
mov
push
es
xchg
cmc
es
fcomip
clc
insb
dec
add
sub
pop
aam
fimull
adc
push
pop
and
movsl
out
cmpsl
ss
or
xchg
mov
jno
mov
adc
shl
popa
mov
xchg
lret
xchg
ja
ret
lock
xor
push
mov
add
mov
mov
ffreep
fbld
and
mov
pop
outsl
sub
dec
repnz
mov
add
std
add
push
jmp
ret
leave
xchg
push
fs
mov
and
mov
jnp
stos
imul
xor
mull
popf
insl
dec
data16
pop
jbe
orl
pushf
mov
pop
push
push
scas
mov
dec
jecxz
jo
pop
push
and
dec
scas
push
mov
cs
cltd
mov
mov
jl
fwait
push
nop
pop
xor
cwtl
xchg
mov
data16
stos
cltd
mov
inc
shr
bound
or
pop
imul
scas
leave
rclb
shl
movsl
and
push
int3
aas
add
popf
add
nop
jp
std
nop
rcll
daa
test
call
rclb
movsb
ret
pop
mov
pop
ljmp
sbb
pop
ficoms
inc
repz
cmp
in
mov
add
iret
sub
adcb
jle
clc
outsb
scas
int3
and
xchg
call
das
sahf
mov
mov
leave
dec
in
add
or
fisttpl
pushf
add
daa
mov
outsl
out
inc
push
pop
cltd
ret
jne
aam
sbb
in
add
lods
sbb
mov
jge
test
inc
ret
inc
nop
fs
xchg
and
mov
cmpsl
inc
dec
in
push
xchg
pusha
addr16
fidivrl
fwait
inc
jnp
push
call
cmpsl
xchg
and
mov
outsl
mov
call
fcomps
cmc
rolb
je
mov
fldl2e
pushf
pusha
js
std
xor
xchg
pop
mov
push
sti
inc
jecxz
add
add
popa
in
sahf
jmp
repnz
outsb
nop
push
push
test
or
pop
scas
popa
xchg
icebp
test
test
sub
aam
in
notb
mov
rolb
pop
stc
xor
adc
and
loope
test
jmp
cmp
xor
and
in
sub
push
xchg
rolb
test
stos
ret
int
mov
mov
addr16
xor
jg
loop
call
scas
cmp
push
dec
adc
jg
push
fstps
mov
fdivrl
push
insb
outsb
cltd
stos
enter
mov
pushf
aam
add
jno
mov
mov
test
insl
push
sbb
jae
jne
mov
jge
jl
sbb
clc
fcmovb
jg
scas
aas
pop
push
pop
je
imul
ljmp
or
test
or
popa
xchg
leave
repnz
mov
sub
dec
addr16
add
out
pushf
jle
arpl
sub
fwait
and
loopne
std
pop
sarb
lahf
or
pop
push
fistps
xor
add
out
jno
dec
or
jae
dec
mov
inc
dec
scas
rorl
rorb
push
andb
push
imul
push
daa
and
lcall
push
add
push
and
outsb
pop
mov
xchg
mov
add
cmp
rcrl
mov
in
add
fisubs
lret
mov
xchg
cltd
mov
fwait
icebp
lds
add
or
push
inc
and
fildll
out
shl
jecxz
mov
lock
mov
pop
xchg
mov
sub
sub
xchg
xor
in
dec
and
pushl
fs
push
and
jbe
sub
inc
fwait
popf
push
movsl
lcallw
add
mov
icebp
push
adc
cwtl
push
dec
mov
push
push
jns
cltd
sti
test
jp
mov
xor
and
std
movsl
fnsave
push
ss
faddp
mov
nop
lock
sarb
push
cwtl
cmc
fwait
das
pop
loopne
add
sub
scas
out
dec
fldt
sbb
out
insl
inc
cwtl
in
push
push
les
xchg
push
inc
inc
orb
sub
nop
into
insb
insl
mov
out
test
dec
std
xchg
lahf
imul
ljmp
pop
xchg
and
mov
add
mov
mov
lods
xor
jmp
xchg
sbb
movsl
ja
aas
or
sub
mov
rcr
jo
outsb
inc
cmp
dec
nop
and
outsb
or
xchg
cmp
clc
mov
test
jnp
xor
pop
pop
mov
loopne
pcmpeqd
mov
shlb
mov
fsincos
int
mov
out
loopne
cmp
iret
push
cld
xchg
fmull
mov
push
push
test
mov
fisubs
ss
frstpm(287
pusha
out
les
pop
cmpb
xor
xor
int3
jnp
loop
scas
andb
cmp
rol
sti
movsl
sub
lcall
ss
lock
push
add
loopne
cmp
cmpl
and
aas
fidivrl
sahf
jecxz
mov
mov
pop
add
push
sub
cwtl
xor
ja
int
xor
inc
out
xor
outsb
scas
stos
data16
sub
cmp
hlt
fisubrs
jns
jmp
aaa
push
mov
mov
in
jo
stc
shlb
sahf
fiaddl
cmpsl
mov
jg
pusha
xchg
enter
push
xor
das
cmp
adc
cli
in
pop
push
in
aaa
test
jae
sti
and
pushf
int3
push
lods
cmp
bound
popa
add
pop
sarl
icebp
sbb
fcompl
pushf
pop
mov
pop
add
xor
sar
pop
imul
in
into
insl
jl
mov
bsr
mov
mov
cmc
frstor
dec
into
dec
lret
bound
dec
cs
sbb
xchg
int3
pop
mov
dec
inc
xor
mov
outsl
dec
repz
mov
mov
bound
rcrl
shrl
lcall
pop
push
mov
hlt
stc
push
popa
mov
pop
std
dec
add
rcrl
push
and
adc
xlat
or
sbb
shrl
jge
stos
sub
test
cmpsl
out
cmp
repnz
mov
xchg
or
mov
leave
mov
pandn
xor
sub
xchg
pop
cli
jmp
adc
xor
fs
fdivr
inc
fstl
cmp
cltd
adc
psubq
mov
cmpsl
jne
mov
adc
push
mov
mov
addr16
dec
test
push
mov
ja
xchg
insl
out
push
imul
pop
cld
test
sti
inc
sub
mov
dec
push
cmpb
ja
push
jae
inc
loope
loopne
push
add
dec
or
sub
clc
sbb
mov
push
ret
pushl
mov
enter
ficomps
mov
push
stos
sbb
and
push
ss
push
mov
int3
mov
lcall
pusha
sub
add
inc
adc
add
xchg
ret
fstl
insb
add
es
inc
das
sbb
fisubrs
stos
enter
negb
push
xchg
in
pushf
scas
addr16
popa
mov
ljmp
mov
dec
out
xchg
mov
mov
clc
cs
inc
jmp
sub
mov
mov
icebp
mov
mov
cmp
cltd
f2xm1
push
mov
add
and
cmp
es
jae
push
and
les
pushf
inc
lods
imul
mov
xchg
adc
sarl
add
in
adc
push
cmp
sti
push
nop
sub
push
sbb
or
and
cltd
adc
icebp
in
mov
test
ljmp
inc
xor
jg
push
out
xchg
mov
fisubs
jbe
and
and
jle
mov
xor
ret
pop
sahf
dec
sub
fnstenv
dec
stc
xor
mov
sbb
push
out
inc
sbb
add
repz
cmp
or
ret
outsl
stc
jnp
ljmp
mov
mov
mov
inc
mov
fldln2
stos
insb
jo
inc
mov
push
sbb
inc
pop
push
mov
and
repz
lods
pop
pop
cmp
lahf
int
in
pop
fcmovnb
jns
loope
push
push
lcall
mov
into
push
jmp
rcrl
pop
rcll
lods
fdivl
in
mov
xor
in
jo
adc
fisttpl
mov
cmc
icebp
jnp
sar
mov
out
insb
cld
cmpsb
pop
cmpsb
stos
pusha
pop
pop
push
pop
fxch
and
xor
inc
es
jge
pop
mov
adc
or
xchg
push
test
jb
and
in
add
pop
mov
std
push
and
es
loopne
ljmp
inc
adc
mov
xor
add
shrb
lahf
sti
sub
repz
inc
sub
or
push
repz
shrb
sti
cmc
inc
mov
enter
or
hlt
call
mov
sarb
fcoms
mov
mov
pop
repz
pop
loop
and
mov
lea
fs
test
jp
scas
push
sbb
cmc
data16
add
jbe
lret
mov
xchg
sbb
in
xchg
dec
lock
lock
pop
negb
ja
jg
jmp
xchg
mov
stos
mov
in
lahf
inc
pop
push
adc
iret
scas
mov
push
mov
mov
pop
or
hlt
pop
into
jbe
out
imull
push
mov
xchg
mov
jg
lcall
mov
daa
pop
jmp
mov
stos
xor
dec
mov
cwtl
xorb
pop
dec
add
mov
xor
or
jmp
test
je
mov
in
inc
lcall
xchg
mov
int3
lods
inc
fs
ffree
in
sti
sbb
loop
cs
test
stc
push
dec
subb
pop
cmp
mov
xchg
add
sti
jnp
push
pop
lret
ret
shlb
outsl
sub
cmp
dec
jp
jae
add
in
ret
push
cmpsb
fucomp
jmp
dec
or
sub
push
sbbl
ret
rorb
cmpsl
inc
test
popf
xchg
into
sub
lods
sub
scas
add
mov
shrb
loop
orb
cmp
outsb
addr16
int3
mov
jmp
aaa
fdivrl
imul
xchg
dec
mov
icebp
aad
cmpsb
aad
shr
out
andb
mov
mov
push
jecxz
mov
into
jns
adc
mov
enter
sub
push
sbb
fiadds
sub
lods
scas
dec
jl
inc
pusha
adc
and
xor
lods
mov
mov
push
int3
scas
and
ret
ds
pop
ret
rorb
jbe
jl
pop
stc
inc
ret
jno
test
xor
jg
dec
popa
or
inc
inc
mov
addl
test
mov
mov
inc
mov
mov
lods
bound
cmp
in
sbb
stos
lds
test
daa
outsb
jl
sti
movb
xchg
test
xchg
sub
jb
mov
imul
inc
je
es
jecxz
jbe
andb
dec
aaa
mov
or
aam
je
fidivrl
lock
jg
sti
jmp
sbb
pop
cmp
jle
push
jne
test
inc
or
and
subl
scas
dec
je
lods
push
cmp
xlat
test
sbb
inc
cli
push
lahf
hlt
lea
mov
idivb
fildl
pusha
add
push
xchg
mov
mov
jl
xorl
arpl
cmpb
ret
inc
inc
stos
loope
cmpsb
pop
cmp
int
lds
scas
lods
jle
adc
addl
mov
adc
mov
das
sbb
mov
lock
ds
sub
sub
sbb
cmpsb
adc
sub
adc
and
or
and
xchg
mov
je
out
push
testl
in
mov
dec
iret
loopne
xchg
push
repz
into
jne
or
pop
mov
inc
xchg
fidivrl
xchg
stos
lods
rcrb
sbb
fcompl
push
addr16
mov
adc
or
pop
aas
loopne
push
mov
enter
mov
dec
xor
jecxz
imul
lods
xor
int3
insl
pop
xchg
movsl
test
push
fwait
jbe
in
rcll
in
xor
test
das
pop
jno
xchg
dec
out
mov
call
jmp
xor
cmp
xchg
cmp
jmp
mov
jb
mov
mov
aad
pop
rcrl
and
out
sub
adc
leave
jnp
add
andb
mov
cmp
push
js
imul
test
out
ds
enter
loop
into
flds
adc
scas
pop
pop
rcrl
sbb
jb
addb
adc
je
mov
testl
pushl
xor
dec
jns
inc
sahf
fists
xor
sbb
inc
xchg
stc
popf
and
in
bound
dec
inc
inc
call
pop
adc
push
js
dec
xlat
jns
mov
sub
popl
out
clc
jo
fcmovnb
je
out
sub
enter
loope
pop
lock
bound
data16
ret
aaa
leave
test
or
sarb
or
mov
lds
repz
call
dec
out
xor
xchg
add
addl
movsl
sti
dec
lods
add
ss
jmp
push
mov
dec
and
mov
repnz
popa
in
xrelease
or
pop
faddl
pop
sarl
cmp
adc
adc
mov
call
sub
jno
sbb
xchg
push
mov
hlt
jb
add
lret
mov
xor
xchg
out
pop
add
out
in
insl
clc
stc
dec
repz
mov
pop
xor
push
imul
mov
lret
inc
cmp
jb
xchg
dec
popf
out
je
fs
loop
gs
xlat
ret
out
sti
cli
push
fnstsw
or
sbb
push
rol
and
fwait
mov
jae
and
jne
ret
es
inc
dec
push
and
or
jp
lods
out
sub
sbb
loopne
rcrb
ret
fs
jecxz
pushf
stos
rcrb
shll
push
int3
call
movsl
pop
outsl
lods
lods
test
xchg
dec
out
cltd
dec
jg
lds
xlat
incb
fwait
out
xor
insl
lds
loopne
inc
mov
and
fidivs
mov
xchg
inc
mov
scas
fcomp
cmp
es
push
mov
sub
insl
mov
xchg
xchg
inc
cmc
iret
pop
dec
mov
daa
leave
xchg
push
shl
xor
negl
outsb
cmp
pop
adc
icebp
push
lret
lea
fst
out
push
adc
out
add
loopne
cs
push
or
lcall
scas
gs
inc
call
ljmp
idivb
pushf
mov
dec
jmp
in
add
cltd
test
adc
repz
xchg
out
mov
xor
mov
pop
jnp
inc
xor
mov
ja
ret
shll
sub
movsb
xchg
jge
lea
cmp
nop
les
jp
mov
movsl
xchg
je
in
sbb
xchg
push
cmp
cmp
cld
sub
inc
sub
cmp
xor
mov
mov
out
jns
in
sbb
push
ja
xor
jge
xor
repz
and
jne
psllw
imull
scas
daa
out
int
jecxz
repz
ret
faddl
leave
mov
inc
inc
fldl
jmp
mov
lcall
fsubp
sarl
jmp
mov
push
cmp
inc
sbb
stos
outsb
pop
movl
mov
xor
inc
rorb
push
sbb
fdiv
ja
sub
inc
pop
and
cmpsb
push
fadds
roll
shll
xor
inc
out
adc
fsubl
iret
adc
jle
movb
clc
test
js
ret
push
jnp
mov
sub
push
and
jnp
scas
and
bound
scas
fistps
pop
mul
sbbl
pop
test
fs
dec
flds
in
push
pop
jmp
or
leave
cmp
xor
push
test
mov
xlat
mov
fiaddl
push
xor
add
xor
cmp
pop
stc
mov
flds
inc
jnp
adc
cmc
xchg
cmc
push
out
ret
push
in
mov
les
add
insb
imull
repnz
cmpsl
add
arpl
sbb
flds
xchg
fsts
jle
outsl
mov
or
leave
mov
fdivr
test
and
inc
cmp
jmp
ja
sub
mov
subb
mov
jbe
mov
push
xchg
add
outsl
xor
cmpsl
cmpb
in
js
mov
test
add
cmp
mov
cltd
hlt
fsincos
sub
xor
push
cmpsl
or
icebp
int
test
pop
dec
jo
mov
mov
call
push
insl
loope
adc
frstor
xchg
cwtl
sbb
not
jp
pminsw
cmp
jg
mov
pop
and
ror
inc
xor
nop
jb
mov
popa
push
jae
and
and
or
shr
inc
lcall
or
iret
push
push
aas
xlat
jno
cmc
mov
pusha
cmp
aas
mov
xor
aas
stc
adc
and
inc
je
or
mov
push
mov
iret
loop
push
arpl
xor
subb
lea
ljmp
test
cli
sub
fisubl
and
sbb
in
outsl
pop
mov
push
ljmp
xchg
mov
jns
cmp
sbb
adc
xchg
pop
push
imul
inc
jp
cmp
out
fsubrl
push
nop
lock
cmpsl
lcall
or
inc
and
cmp
ja
ret
leave
sbb
call
inc
rcrl
inc
jno
ljmp
int3
loope
inc
xor
call
lods
cmp
pusha
push
clc
aas
push
andb
cli
movsb
mov
inc
inc
fiaddl
pop
xchg
shlb
mov
push
roll
or
xchg
push
and
loop
mov
dec
pop
pop
add
fs
mov
jns
push
pop
sub
test
stos
mov
dec
aad
mov
jo
sub
and
movsb
and
cmpb
pop
jle
aam
cmp
je
add
mov
cmc
lret
and
jge
hlt
aad
aaa
lahf
mov
sub
xor
pop
xchg
cmc
lcall
in
sub
mov
mov
pop
mov
mov
inc
daa
gs
push
cld
xchg
daa
jp
leave
mov
adc
or
jb
gs
lcall
mov
push
xchg
rorl
adc
mov
jae
pop
mov
addb
pop
sub
xchg
pop
push
adc
fidivrl
adc
std
ror
dec
dec
idivb
mov
scas
xchg
pop
adc
adc
mov
mov
out
push
das
xchg
cmp
and
movsb
inc
dec
sbb
jle
push
jnp
and
cmpsb
mov
sub
fld
pop
popf
stos
ja
mov
xchg
test
dec
shll
aaa
inc
icebp
iret
sub
jge
pop
testl
sub
insb
adc
ja
push
pop
mov
xchg
movsl
push
rcrl
ljmp
sbb
jo
mov
arpl
dec
movsl
je
sbb
cmp
pop
int
sub
push
cld
popf
sub
add
shr
adc
dec
or
or
pop
cld
ja
test
ficomps
iret
sub
enter
mov
cmpl
pop
outsb
sbb
and
lea
and
in
jp
stos
int
imul
jle
xchg
inc
sub
std
test
enter
and
push
jno
mov
scas
adc
and
cmpsl
push
mov
xor
fdivs
stos
and
mov
orl
push
into
sbb
add
outsl
sbb
sbbl
gs
cmp
fidivs
push
ljmp
in
cmp
sbb
xchg
pop
jo
int3
sti
popa
popa
push
xchg
repnz
leave
outsl
sbb
adc
sarb
loope
testb
mov
mov
pop
loope
dec
out
mov
jno
mov
pop
mov
test
sub
mov
leave
js
pop
shlb
js
repnz
sub
insb
and
and
mov
movsb
xchg
jns
sbb
mov
stos
xchg
fldl
int3
jg
xchg
or
add
mov
xor
lock
sbb
xchg
dec
push
mov
cltd
sbb
mov
outsb
adc
pop
sbb
lock
mov
push
subb
andb
nop
fwait
out
sub
movsl
mov
lods
sub
imul
sbb
ds
add
movsl
lcall
mov
mov
jae
sub
insb
mov
and
sub
mov
fists
or
jno
sub
inc
mov
mov
popf
mov
sub
jecxz
pop
add
std
mov
aam
aas
push
je
mov
vshufps
std
pop
push
mov
sub
dec
and
xchg
jmp
lods
inc
incl
adc
mov
shrb
scas
mov
push
sbb
jl
mov
pushf
data16
push
add
pop
and
dec
and
addl
pop
fstpl
pop
and
scas
sti
push
das
dec
or
aad
cmp
and
jle
jp
ds
sahf
sub
xchg
adc
jl
nop
mov
loop
repnz
and
je
xor
xchg
push
push
fists
je
iret
mov
jmp
jl
adc
jl
scas
mov
cmc
pusha
xor
ljmp
jnp
neg
int
dec
out
bound
popf
jbe
sub
xchg
jle
aaa
lret
sub
push
or
gs
and
scas
fwait
push
mov
fistpll
setnp
nop
daa
test
push
stc
fidivs
aam
shlb
stos
xorl
push
sbb
jge
or
jnp
mov
cmp
or
sbbl
ficoml
or
push
fsubrs
inc
jl
insb
xchg
js
mov
lods
xchg
ficomps
js
pop
out
adc
js
lret
xor
jb
jecxz
mov
ror
sbb
pop
add
lds
pop
xlat
fisubrl
jne
pop
or
xchg
int3
repnz
xchg
jmp
sub
adc
inc
aaa
fistps
jbe
lods
out
fcoml
push
pop
mov
mov
ds
jmp
int3
xlat
stc
js
shrb
and
loope
pop
scas
rcrb
mov
add
cmp
jae
push
sbb
push
add
jle
pop
or
in
jmp
dec
incl
out
mov
inc
mov
clc
inc
jns
add
testb
jecxz
nop
add
test
or
outsl
sti
jb
mov
cmpsl
lods
js
aaa
cwtl
inc
leave
clc
outsl
mov
pop
movsb
xchg
xchg
clc
inc
sti
aam
rorb
ret
xchg
sub
or
cwtl
roll
push
and
imul
loope
sbb
cmp
mov
int3
xor
dec
cmp
das
xchg
mov
jns
in
pop
insl
mov
add
ljmp
cmp
fnstsw
lahf
es
aam
push
idivl
cmc
rorl
cltd
dec
aas
dec
adc
sbb
leave
dec
out
das
pop
icebp
inc
xchg
inc
cld
int
scas
mov
jne
scas
adc
bound
mov
jecxz
negb
pop
and
pop
lret
jl
cs
sbb
mov
js
inc
add
xor
fstp
pop
mov
jno
mov
fidivs
xchg
sbb
mov
mov
and
xor
scas
aad
shlb
rol
dec
mov
popf
jmp
test
aam
jbe
pop
sbb
scas
xchg
jae
xor
icebp
sarb
and
mov
aad
sbb
out
cld
and
imul
cmp
pop
scas
inc
jae
push
scas
sub
cmp
inc
add
loopne
cmc
pop
cmpsl
scas
and
sbb
mov
lods
push
mov
aaa
adc
ret
test
into
enter
cmp
push
pop
sbb
xor
loope
mov
rcrb
lahf
mov
adc
loop
and
push
jbe
pop
adc
scas
xchg
pop
gs
pusha
or
mov
stc
sar
mov
jo
lock
xchg
lock
sbb
xchg
inc
mov
xchg
sbb
adc
jp
and
shrl
arpl
sub
popa
or
loop
sbb
dec
mov
jns
nop
mov
add
push
push
dec
sbbl
lcall
stos
fcoml
popa
ljmp
incb
cmp
jbe
jge
ror
fs
or
into
sbb
dec
pop
test
adc
aad
push
movsb
pop
jno
sbb
sub
lods
addr16
mov
jbe
jno
gs
push
rorl
call
stos
or
inc
pop
in
cltd
int
add
mull
sbb
push
inc
pop
aam
push
dec
loope
or
xor
jg
arpl
sub
mov
mov
call
inc
cmp
rcl
mov
rorl
mov
push
and
xchg
sub
js
movsl
stos
pop
jb,pt
loop
fnstcw
add
loope
push
loope
cmpsb
hlt
mov
sub
popf
jle
je
addr16
fldt
sub
add
sbb
ret
aas
aam
cmp
push
ret
adc
fstps
xor
xlat
fcoml
cli
in
sbb
jnp
pop
fdivl
sti
jmp
into
mov
aad
jb
push
outsl
push
jmp
pop
movsl
or
test
sub
ja
and
push
test
leave
sub
jns
mov
adc
xchg
cli
insl
push
pop
dec
push
lahf
iret
mov
ljmp
ds
or
iret
cli
lods
in
and
mov
mov
or
fwait
arpl
xlat
shlb
imul
bound
jp
push
clc
sbb
pop
xchg
div
push
xor
movsb
lret
or
loop
je
push
sbb
or
and
adc
push
out
dec
call
addb
xchg
dec
mov
add
dec
pop
jns
adc
pop
cmp
and
imul
loopne
movsl
push
out
lds
push
jmp
and
xor
lock
pop
shr
mov
mov
mov
pop
push
pushf
ficompl
sub
scas
push
out
fcoms
imul
cmp
pop
mov
mov
sbb
stc
mov
rcrl
sbb
in
ljmp
xorb
ret
cmp
pop
sub
lcall
icebp
scas
inc
fscale
enter
mov
loop
inc
decl
adc
jb
das
mov
into
es
out
add
imul
mov
lock
mov
pop
pop
push
lret
and
pop
fdivrs
scas
jl
in
rcrb
std
addb
adc
fwait
push
bound
xchg
sarl
das
outsb
ret
popf
adcb
xchg
addr16
sub
pushl
jno
mov
stos
cmp
movsb
lods
pop
add
adc
xor
mov
adc
mov
lcall
sbb
mov
push
sti
fwait
jae
jle
sbb
sahf
push
inc
aam
sub
test
je
add
cmc
jl
cmp
rcr
mov
fidivrs
push
jae
mov
push
pop
add
negb
hlt
pop
ret
and
xchg
mov
daa
inc
insb
repz
xchg
in
fistpll
outsb
lods
push
in
push
mov
shr
sub
xchg
xchg
sub
repz
adc
adc
orl
inc
loope
mov
sahf
adc
in
mov
cmp
and
pushf
xchg
xchg
rcrb
mov
push
or
leave
sub
jnp
int3
push
pop
hlt
mov
jo
subb
jle
shlb
testl
or
mov
push
cmp
mov
imul
mov
pop
cmp
mov
nop
cmp
mov
mov
scas
sarb
repnz
push
adc
mov
sub
out
lret
mov
jge
jb
push
movsb
cmp
inc
sbb
push
xchg
test
scas
addr16
inc
jmp
out
mov
mov
in
lock
adcb
mov
cmpsb
jmp
xor
pushf
and
aad
inc
xor
or
cs
push
sub
mov
leave
int
daa
mov
popf
mov
mov
popa
lahf
sub
xchg
lods
mov
xchg
adc
lahf
aam
sub
rolb
jae
in
repnz
orb
repnz
push
lods
into
xchg
aam
cmp
xor
cmp
cmp
dec
or
xchg
testl
fidivs
lods
dec
sbb
movsl
fs
sarb
cmpsb
dec
cmp
cwtl
sub
fdivl
sub
mov
aad
xchg
inc
jbe
mov
setge
inc
mov
js
or
roll
jo
fdivl
mov
cmpsb
jmp
js
loop
mov
xchg
pop
scas
movb
imul
sub
push
xchg
das
cltd
cwtl
or
xchg
aaa
lahf
and
and
xchg
outsb
rclb
adc
das
imull
popf
sub
jbe
sub
fwait
clc
or
xchg
jecxz
fdivrs
ret
jo
add
leave
sahf
imul
cmpsl
pop
nop
add
ret
outsb
or
and
xlat
aaa
pushf
xchg
jns
push
dec
cmpsl
pop
loope
rclb
mov
lock
fs
scas
add
xor
xor
int3
lahf
jne
repz
mov
jmp
jge
iret
mov
dec
mov
xchg
mov
loop
cmp
cmp
not
inc
mov
jne
sub
sub
int
insl
mov
xor
jle
es
or
jl
std
jno
cli
sub
jnp
sub
mov
lods
and
movsb
imul
and
outsl
sbb
cs
jle
xor
out
adcb
inc
adc
lea
popf
dec
jg
fiadds
add
or
cltd
jae
push
sbb
dec
aas
pop
push
pop
xchg
xor
push
stos
in
pop
jg
jge
sub
fisubrs
inc
jae
cmpsb
dec
mov
sbb
push
hlt
mov
loope
stc
sbb
cs
cmp
loopne
add
popf
enter
pop
push
push
insb
mov
pop
xor
fistpl
sbb
inc
push
cmc
sbb
inc
inc
icebp
cwtl
mov
xchg
cwtl
cmp
mov
xor
push
test
adc
mov
add
cmc
xchg
and
pusha
out
add
out
loope
fmulp
xchg
mov
jle
jg
shll
dec
sarb
outsb
add
add
cwtl
gs
cmp
sub
sbb
push
cmc
mov
lods
sub
push
adc
and
xchg
mov
mov
add
and
cmp
adc
loop
nop
mov
dec
ds
inc
sub
enter
out
sbb
jg
dec
ljmp
adc
pop
push
xor
mov
pusha
add
dec
and
lcall
sbb
sbb
ficoms
adc
jecxz
add
mov
aam
out
xor
mov
mov
dec
mov
pusha
push
negl
cmp
lea
test
inc
sub
fldcw
mov
mov
out
imul
out
xor
ljmp
inc
add
mov
pop
mov
and
mov
cli
leave
push
fnstsw
pop
xor
jmp
adc
pop
push
sub
sub
aas
jmp
pop
rclb
push
movsl
pop
popf
imul
mov
cld
outsl
adc
push
aad
lea
xor
add
insl
arpl
jecxz
and
and
jg
rcll
mov
adc
cmp
jecxz
jno
pushf
adc
and
loope
aad
scas
cmp
icebp
cwtl
icebp
lret
jbe
incb
out
bound
mov
inc
mov
mov
icebp
fs
push
push
orl
mov
sti
add
aaa
insb
sti
inc
inc
scas
xchg
lcall
and
inc
in
push
shll
push
mov
push
int
shl
cmp
loope
push
shll
mov
int3
jne
dec
mov
fcmovu
sbb
sub
jecxz
in
cmp
addr16
xor
mov
pop
push
pop
mov
notl
mov
push
jno
inc
push
sbb
cmp
jp
inc
ja
leave
sub
adc
cwtl
test
xor
jnp
pusha
cwtl
fs
inc
push
or
or
xor
sbb
stc
mov
or
adc
xchg
scas
cmp
jge
mov
or
mov
and
testb
ret
jne
pop
out
rol
sub
stc
pop
xchg
adc
push
dec
dec
hlt
pop
cli
std
dec
adcl
and
mov
inc
loop
cmp
or
inc
pop
mov
push
mov
imul
fisubs
aam
cmp
xor
js
out
mov
addr16
sbbb
scas
cld
lock
adc
ja,pn
sub
test
mov
and
xchg
cmp
inc
scas
push
or
mov
cmp
popa
lods
mov
in
dec
add
or
adcl
ljmp
cs
sarb
movsb
jno
add
aam
jne
dec
push
xor
dec
xchg
data16
rol
dec
push
mov
jns
scas
ja
push
mov
adc
cltd
andl
lods
xchg
ss
xorb
insl
jnp
mov
mov
fisubrs
mov
lods
test
add
mov
scas
lahf
jp
xor
sbb
fisttps
sbb
cmp
add
loop
ret
test
addr16
out
mov
cmp
fsubrp
std
testl
cld
cmp
cli
mov
cwtl
sbb
or
mov
jmp
aaa
mov
add
push
sbb
adc
repnz
loopne
lcall
addb
es
ljmp
sarb
outsb
add
shll
and
js,pt
ret
mov
test
or
andb
inc
dec
push
test
enter
addb
and
push
jge
jo
mov
xchg
sarl
cld
pop
lcall
push
xor
pop
stc
and
push
cmp
movsb
dec
rcl
jp
in
pop
pop
test
popa
fldenv
addb
add
mov
rcrb
cmpsb
sbb
jns
dec
jnp
fists
movsb
cmp
adc
iret
scas
sbb
fs
scas
push
dec
mov
test
outsl
movsb
push
sbb
adc
jbe
mov
stos
cmp
iret
push
pop
mov
mov
dec
inc
or
adc
push
pop
aad
js
mov
in
pop
add
jle
out
push
test
leave
mov
nop
jmp
into
call
lcall
and
cmpsl
adc
out
data16
or
je
push
mov
dec
lahf
add
xor
movsl
jo
inc
jmp
shlb
pop
dec
bound
xchg
lods
and
mov
jmp
fcompl
xor
push
mov
sbb
sbb
aam
orl
aaa
lret
xchg
push
idivl
dec
dec
dec
das
fistpll
mov
test
ret
mov
out
push
pop
fidivs
je
data16
or
push
and
scas
dec
cmc
sti
outsb
jne
outsl
insb
mov
mov
push
mov
movsl
and
icebp
cmp
iret
aaa
push
mov
xor
jge
push
hlt
fcoml
mov
fisubl
addl
mov
push
push
or
inc
adc
lcall
ss
adc
add
movsl
xchg
jno
sbb
sbb
shll
aaa
or
ja
cmp
call
gs
mov
add
es
test
mov
add
test
mov
or
setnp
push
popa
jb
sahf
xchg
arpl
mov
je
nop
mov
fldcw
add
xor
push
int
sarl
cmp
mov
pusha
pop
xlat
scas
xor
lods
lret
outsl
mov
adc
ffree
inc
call
mov
outsb
scas
push
pop
mov
mov
inc
sbb
sub
stc
xchg
imul
enter
imulb
test
mov
cmp
cmp
stos
enter
divl
jb
jmp
push
pop
lret
mov
das
or
cmp
push
stos
and
mov
lahf
rorl
stc
popf
faddl
lahf
dec
mov
fsts
pushf
mov
and
or
cmp
cs
test
xchg
and
pop
repz
jg
push
outsl
cmpsb
lods
jo
jno
movsl
adc
sbbl
xchg
cwtl
jecxz
js
scas
call
gs
lret
out
icebp
mov
jnp
ja
xor
and
dec
xchg
cld
mov
adc
xor
pop
and
out
adc
sahf
inc
pminub
and
adc
pop
mov
push
xor
and
addr16
push
pop
jg
jae
aam
mov
jle
stc
cmc
adc
test
and
mov
xchg
add
leave
cmc
jnp
jge
pop
push
test
imul
jb
iret
mov
lcall
pop
jle
push
pop
xchg
adc
cmc
xor
push
mov
pusha
fbstp
loopne
jg
aaa
mov
xlat
pop
sbb
pop
pop
sub
dec
sbb
push
xchg
push
scas
dec
and
pusha
add
cmp
cmp
mov
test
mov
cmp
lcall
adc
fiaddl
dec
addsubps
jbe
out
push
mov
pop
adc
int
mov
subl
push
pushf
and
lret
add
xchg
adc
rol
fisubrs
cmp
bnd
pushf
nop
ja
lea
fcomps
daa
sub
xchg
ret
movsb
gs
adc
leave
and
rcrl
mov
jg
xor
or
cmp
push
xchg
gs
fs
and
in
jecxz
es
ds
xlat
fdivs
jmp
sbb
mov
xor
or
jno
mov
push
add
in
or
adc
add
mov
jne
add
gs
xchg
push
into
mov
repz
push
lahf
cltd
adc
pop
push
repz
or
push
nop
xchg
leave
lods
push
fcompl
sqrtps
stos
xor
lahf
in
hlt
mov
mov
enter
jnp
pop
aad
sbb
cli
dec
idivl
shl
lret
insb
not
inc
cmc
xchg
fadds
push
and
out
cmp
mov
inc
sbb
dec
in
notl
and
mov
out
daa
xchg
scas
arpl
movb
jmp
or
push
cmp
cmp
cltd
bound
or
adc
test
mov
push
add
inc
int3
movsb
sub
mov
das
cmp
ficoms
adc
sbb
icebp
mov
stos
jecxz
fidivrs
idivb
push
fbld
imul
aam
xchg
shll
daa
sbb
push
xchg
mov
mov
fsubrs
cmpsl
dec
and
push
or
shlb
sbb
and
sbb
icebp
jbe
mov
mov
mov
pusha
mov
leave
inc
push
ss
push
lret
movsl
cld
pop
push
mov
pop
leave
les
rol
leave
xchg
sub
push
shr
jbe
or
xor
jae
loop
pop
imul
adc
bound
or
jo
lods
nop
lods
xchg
std
loopne
pop
jb
push
imul
nop
pop
jl
push
outsb
push
sbb
test
in
pop
add
adc
sbb
dec
push
repnz
iret
sbb
or
icebp
dec
filds
sub
arpl
add
xchg
ss
or
push
fwait
or
cmp
stos
aaa
push
shrl
int
outsl
sbb
or
sbb
jge
cli
aaa
iret
ret
in
push
bound
xchg
cmp
push
ret
xchg
loopne
int
sub
adc
loop
popa
dec
inc
test
xor
mov
mov
stos
pop
loopne
mov
push
js
test
fwait
dec
sbb
imul
mov
mov
jl
fmuls
je
lret
lret
push
lsl
mov
jae
adc
or
adc
jo
xchg
cmp
sbb
int
hlt
cmp
lret
sbb
and
xor
jle
jo
cmp
jbe
dec
or
popf
out
lea
loop
adc
fst
out
pop
cmp
subl
xchg
sarl
mov
lret
into
imul
bound
out
sahf
pop
mov
add
or
ljmp
mov
jb
adc
push
loopne
mov
nop
int
dec
lods
dec
mov
sbb
inc
out
xor
mov
inc
inc
sub
pop
jmp
adc
adc
push
dec
jo
pop
push
and
push
outsb
mov
cmpl
xchg
jmp
addr16
and
pop
iret
or
in
push
lods
inc
orb
aam
push
dec
and
dec
imul
jne
dec
cmpsb
push
mov
pop
xchg
outsl
jb
aad
mov
jb
add
lret
repnz
pop
dec
mov
xor
jl
les
mov
incl
lret
popa
xor
in
mov
sbb
add
xchg
xor
mov
add
pusha
push
addr16
movsb
mov
mov
xchg
sbb
loope
enter
into
xchg
lods
scas
lret
dec
mov
int
daa
int
int
cmc
push
loop
mov
decb
ljmp
jecxz
xchg
loop
clc
push
jg
cmp
xchg
mov
jp
sub
ss
pop
lds
mov
nop
les
xchg
cmp
cld
or
and
les
sbb
adc
inc
int
mov
rolb
mov
dec
rcl
test
or
mov
pop
jmp
mov
nop
add
je
or
mov
push
scas
mov
or
pop
cmp
imul
jl
inc
je
xchg
cmp
pusha
adc
and
and
or
mov
lds
mov
in
shll
insl
cmp
mov
mov
int3
out
inc
outsb
cs
jmp
dec
into
jbe
dec
xchg
dec
xchg
xchg
popf
gs
lret
jno
lret
cmp
test
mov
push
outsb
mov
fwait
jo
mov
leave
xchg
aas
outsb
jl
cmp
sub
adc
add
xchg
addr16
cmpsl
arpl
sbb
add
or
push
dec
xor
hlt
jge
lods
out
jno
sbb
push
cmpl
aaa
push
mov
mov
inc
or
jbe
pop
sub
out
adc
or
aas
jp
xor
test
xchg
push
and
fstps
insb
cmp
mov
push
add
mov
cmp
jle
mov
mov
and
pop
vpcmpeqd
ljmp
or
in
inc
mov
push
pop
mov
aad
xchg
pop
cmc
jo
pop
adc
mov
xchg
in
aas
push
sub
fstl
jae
test
xor
out
les
xor
divb
jbe
cwtl
ljmp
push
sbb
mov
lret
inc
flds
repz
dec
lods
or
clc
push
or
jbe
mov
ret
jmp
das
lahf
mov
add
in
inc
mov
and
inc
push
cmp
and
arpl
xchg
adc
mov
inc
ds
push
jl
aam
sub
scas
test
loopne
aaa
xchg
xor
adc
mov
aaa
mov
xlat
and
xchg
iret
stos
xor
dec
jo
mov
lds
fstl
pop
or
and
jno
jecxz
loope
scas
push
mov
dec
inc
test
repnz
repnz
stos
pop
out
inc
xchg
pop
incl
or
test
sub
scas
fwait
es
shl
mov
cmp
sub
es
cmp
push
dec
pop
in
sbb
dec
sub
mov
cmp
shll
lret
ljmp
jae
fs
stos
fsubs
jbe
test
cltd
rclb
pop
loopne
jne
or
mov
int
rclb
ja
hlt
insb
xchg
jl
notl
ret
lea
inc
mov
dec
out
mov
fadds
cmpsl
es
shlb
mov
sub
fmuls
xor
repz
imul
js
sarb
dec
cs
mov
pop
and
mov
push
pop
xchg
dec
xor
loope
repnz
divl
pop
adc
int3
mov
mov
jo
je
push
fstps
shlb
jne
loope
aas
mov
pop
dec
cmc
sub
das
mov
das
add
bound
cmpsb
jbe
and
es
inc
cld
inc
add
mov
sbb
shrb
inc
and
shlb
jno
adc
out
jmp
sub
aaa
xchg
mov
nop
insb
and
or
int3
rcrl
stos
pop
jne
dec
movsl
adc
in
jne
loop
stos
sub
adc
insl
cmp
jne
xchg
testb
negb
push
test
popf
jp
inc
xchg
dec
pop
inc
xchg
lods
pusha
pop
movsl
dec
ljmp
jbe
pusha
outsl
cs
ja
lcall
or
ret
popa
cmp
in
outsl
mov
test
mov
xlat
xor
mov
int
div
stc
insb
lret
sti
int
sbb
cs
cmpsl
lods
push
pop
or
mov
and
rcrb
mov
fbstp
loop,pt
fistpll
test
inc
xchg
jnp
or
andb
and
sar
lret
or
adc
jmp
xchg
lock
idivl
mov
push
dec
or
inc
lret
push
sbb
test
jp
aas
mov
andb
div
mov
sub
cs
cli
mov
sti
adc
stc
jle
and
sbb
cmp
call
fcompl
es
mov
cli
dec
pop
xchg
push
push
jge
xlat
mov
inc
mov
test
sub
rorl
pop
mov
sub
negb
mov
jge
sub
shrb
fstpl
test
and
sub
imul
inc
cmovns
arpl
and
push
stos
idivb
xor
fsts
sbb
rclb
jo
jo
imul
inc
lret
pop
scas
push
daa
pop
xchg
sub
xchg
pop
fs
sbb
xrelease
push
test
test
int
jmp
xchg
and
popf
ja
sub
push
xchg
xor
std
and
daa
push
cmc
push
inc
sub
and
adc
xchg
lock
inc
lahf
push
and
xor
notl
inc
dec
dec
leave
sub
sbb
push
cwtl
push
test
push
mov
in
inc
pop
or
bnd
popf
or
xchg
icebp
sbb
cmp
xor
push
mov
sahf
stos
sub
lock
dec
sub
add
or
mov
sbb
jp
mov
fldenv
lret
dec
adc
fistpl
mull
and
sub
cmp
or
movsl
lods
addr16
outsl
testl
lret
add
or
inc
pop
inc
lcall
xor
adc
andb
stc
mov
pop
mov
es
pop
push
dec
test
sub
cli
insl
xor
mov
cltd
popf
pop
or
insb
call
imul
testl
shll
push
inc
orl
outsb
negb
xchg
test
mov
add
or
mov
cs
insb
popa
sbb
in
jbe
mov
orb
ljmp
pop
insl
out
fisttps
jbe
scas
pop
sub
adc
pop
in
fisttps
outsl
and
xor
xor
mov
mov
gs
push
mov
dec
out
daa
mov
das
std
out
add
mov
jne
call
daa
je
cmpl
fmull
mov
fcoml
aaa
inc
mov
sahf
std
cmp
or
shrl
pop
mov
pop
aaa
out
cmp
notb
ja
mov
xchg
mov
lret
add
pushf
mov
out
into
adc
cltd
rcll
adc
adc
xchg
aaa
mov
xchg
add
stos
pop
icebp
fadd
dec
sbb
cld
mov
repz
sbb
mov
aad
repnz
and
out
imul
jge
fwait
mov
dec
cmpsl
cmpsl
call
stc
mov
cmp
aas
popa
lahf
mov
cmp
add
pop
pop
and
enter
outsb
ja
nop
dec
les
pop
mov
insb
repz
ret
repnz
mov
inc
jg
stos
dec
sub
xchg
mov
jne
rcll
test
mov
ror
fisubrs
xchg
into
pmaddwd
mov
or
adc
xchg
pmovmskb
cmp
mov
cmp
sbb
hlt
jns
sub
jo
in
scas
ret
mov
pop
xchg
ja
movsb
lds
sti
fdivp
bound
hlt
dec
or
mov
daa
xchg
cltd
cmp
loop
into
pop
ficompl
inc
add
loopne
pop
xor
ljmp
call
les
lods
dec
stc
sub
cmp
cmc
jae
sbb
pop
ljmp
push
xor
push
stos
push
mov
bound
inc
jmp
fwait
lods
jg
push
ljmp
pop
pop
cs
rcr
rclb
cli
sbb
mov
mov
push
daa
cld
jb
aad
mov
ljmp
add
adc
das
test
xchg
dec
xchg
mov
pop
xor
xchg
mov
dec
lcall
jns
cmp
or
pop
lret
mov
pop
mov
add
mov
mov
fwait
cmp
jle
mov
je
cmp
pop
jp
xchg
jge
js
mov
and
xor
fsub
jecxz
mov
fwait
pop
cs
mov
ret
jo
mov
xchg
and
dec
cli
mov
stos
dec
test
aaa
notb
sbb
lret
push
add
les
outsl
xchg
das
int
sarl
ror
or
int3
in
enter
popf
addr16
jo
leave
arpl
lahf
sbb
inc
cmpsl
cmpsb
mov
adc
shr
sbb
adcl
xchg
shll
xor
ret
pop
mov
sub
sub
push
jg
cmc
cmp
lret
inc
lods
sub
mov
pusha
pop
ficomps
adc
dec
dec
cmpsb
faddp
mov
dec
je
test
aam
movsb
jb
lock
jbe
or
fistpl
mov
push
mov
pop
inc
or
ds
mov
xchg
jg
xchg
xor
call
and
xor
cmp
mov
push
xor
push
std
lods
pop
fbstp
adc
movsl
es
ror
inc
lret
incb
and
int3
js
push
jge
out
ljmp
out
push
fs
neg
out
jecxz
ret
gs
pop
pop
loopne
shl
pop
pop
test
outsl
sti
cld
mov
mov
adcl
push
test
pusha
mov
lahf
push
lea
sti
adc
pop
xor
leave
inc
xchg
insl
pop
push
jne
mov
xor
aaa
mov
hlt
mov
imul
outsl
loope
nop
cmp
js
dec
test
test
shlb
lds
test
push
push
lock
pop
mov
and
or
xchg
cmc
mov
add
adc
addr16
scas
fidivrs
jecxz
or
push
inc
pop
popa
xchg
adcl
xor
push
shlb
addr16
inc
rcrl
or
cmp
in
fidivs
movsb
lret
jg
mov
sbbl
and
xchg
arpl
cmp
sahf
xlat
scas
or
popf
movsb
aad
mov
je
xor
lahf
jbe
push
push
sti
test
cs
jae
mov
ds
jbe
sub
ret
repnz
dec
mov
push
lcall
dec
ficompl
xchg
inc
enter
fwait
xchg
inc
cmpsb
gs
inc
adc
adc
int
int3
mov
test
and
xor
dec
aas
lods
jmp
idivl
xor
mov
pmaddwd
cmp
les
push
mov
push
adc
push
mov
jne
adc
fs
test
cmp
xlat
mov
cmp
pop
cltd
adc
add
dec
inc
adc
std
popa
inc
mov
lea
cmp
mov
jb
and
jns
xchg
inc
jle
jg
es
adc
inc
imul
aaa
or
jmp
repnz
adc
pop
dec
pop
pop
lahf
lock
and
fnstenv
or
jg
out
ret
cs
lahf
std
mov
ds
jae
mov
mov
ds
in
xchg
mov
xchg
pop
ror
test
pop
aas
cmp
insb
inc
push
iret
loopne
mov
out
dec
rorl
mov
sti
inc
aaa
popa
or
fadds
test
sarl
sbb
and
mov
jnp
sub
call
mov
push
mov
adc
and
int
and
stc
and
dec
fs
xchg
rcll
ljmp
push
xor
pop
xor
and
lea
lcall
adcl
adc
iret
aaa
sbb
dec
fs
cmp
mov
in
push
lock
outsl
sub
sub
dec
lcall
pop
adc
std
sbb
or
aam
stos
cld
sti
sbb
jo
test
inc
les
into
pop
sub
inc
stos
rcrb
xor
mov
popf
cmc
fucomp
mulb
imul
jns
and
pushf
enter
ret
sub
pop
cmp
ja
lret
sbb
je
fs
dec
sbb
sbb
ret
sub
jmp
xorb
test
mov
cs
and
int
insb
mov
sub
jnp
cwtl
dec
xchg
dec
push
sbb
pop
into
in
and
pop
pop
or
dec
imul
aad
pop
mov
or
and
pushf
mov
add
in
or
xor
xchg
mov
xchg
das
stc
mov
jge
cmp
icebp
xchg
jp
sti
movsb
int3
pop
fwait
or
lcall
sbb
jbe
mov
dec
fstl
pop
sbb
lock
repnz
arpl
jmp
mov
xor
int3
pushf
cld
add
sub
cmpsb
dec
push
into
pop
pop
sbb
test
hlt
outsl
testb
mov
add
call
pop
sub
shll
mov
leave
mov
and
imul
cmp
int3
into
mov
xchg
movsl
pop
arpl
lods
mov
aad
mov
add
hlt
imul
jl
aad
sbb
push
mov
and
or
stc
jne
and
int
sbb
test
xchg
xchg
iret
xchg
sub
adc
pop
push
popa
sub
cmp
pop
gs
adc
xor
aaa
xchg
popf
fstps
sbb
jno
sbb
sub
push
jnp
jmp
pop
or
lcall
cmp
js
ja
dec
and
xor
add
xor
dec
imul
notl
movsb
icebp
ret
in
jle
loopne
xchg
and
fcoms
inc
cmp
jae
frstor
and
inc
dec
inc
scas
insb
mov
faddl
pop
push
lock
fisubs
lds
or
and
cs
rorb
sbb
mov
cmpsl
pop
lods
pop
cld
andl
notb
xchg
sub
push
adc
idiv
cli
icebp
mov
sahf
push
and
shlb
inc
xchg
xor
xor
sahf
push
mov
fisttpll
sahf
push
push
mov
mov
loop
pop
jg
int3
in
sbb
dec
movsl
pop
pop
jle
ja
je
or
cwtl
push
and
mov
cmpsl
cmpsl
xchg
and
test
sub
push
aad
out
add
scas
mov
fisubl
push
pop
and
dec
outsb
idivl
ss
xor
repz
fs
in
adc
jge
mov
mov
das
push
das
mov
into
test
cltd
push
cmp
inc
xchg
mov
in
push
fstpl
sub
stos
cmp
or
xchg
out
xchg
ficomps
std
loopne
data16
cmpsl
push
sbb
mov
ljmp
cld
xchg
and
cltd
ljmp
and
mov
test
xchg
push
jae
push
test
xchg
not
jnp
mov
cmpsb
call
sub
movsb
inc
out
leave
xchg
dec
push
xchg
pusha
aaa
xor
push
xor
jnp
rcll
sub
pop
in
out
push
sbb
testl
bound
aaa
test
repz
ljmp
mov
jne
loopne
mov
clc
js
fistpl
push
jmp
sar
mul
xorb
iretw
jmp
fidivrs
aam
sbb
in
jge
pop
jecxz
std
in
pop
xor
fsincos
testl
test
and
and
lahf
push
xor
ljmp
cld
data16
lret
and
sub
push
arpl
sahf
pop
sub
lods
js
pop
pop
cs
loopne
lret
pop
stc
repz
mov
stos
and
lcall
dec
mov
hlt
xchg
stos
or
ret
jp
out
or
xor
cmp
mov
fwait
push
shr
shrb
das
mov
push
push
ret
bound
mov
jae
jbe
jae
adc
ret
repz
cmp
xor
scas
and
cmp
loopne
sbbl
and
mov
sub
lret
push
or
stos
test
sbb
or
repnz
stc
je
and
mov
mov
mov
sbb
lcall
xchg
sbb
mov
movsl
std
add
fisttpl
push
sbb
mov
jo
je
or
cli
cs
jns
push
into
or
arpl
mull
imul
xor
sbb
rolb
sahf
fidivs
int
push
movsl
xorb
andl
cmpsb
stos
mov
pop
loopne
scas
dec
adc
in
push
push
aaa
cmp
mov
push
and
inc
sbb
xchg
sbb
xor
sbb
loop
shll
mov
add
mov
push
fcoms
mov
mov
push
pop
xor
xchg
jns
sbb
sub
daa
cs
pop
sub
sub
lcall
out
mov
xchg
or
imul
xlat
int3
xor
ds
adc
inc
adc
push
adc
jnp
xchg
jno
xor
dec
adc
jb
or
push
push
mov
ret
ret
data16
daa
stos
sbb
cli
gs
daa
movsb
lret
insl
ds
loop
daa
mov
adc
test
xor
adc
out
into
jg
mov
inc
or
lahf
repz
mov
fdivs
lret
cmpsb
cltd
leave
cli
push
cmc
cs
add
and
adc
inc
hlt
clc
cli
inc
js
mov
int
xchg
xor
rcrl
sahf
lcall
mov
addl
out
inc
mov
mov
imul
xor
popf
jae
jmp
lcall
xchg
push
faddp
mov
ds
adc
imul
pop
add
dec
mov
cmp
jl
sub
lahf
xchg
cli
aad
arpl
lea
pop
rorb
sbb
les
test
add
or
xchg
jb
or
pushf
ret
adc
add
ret
std
jae
daa
jo
adc
sub
pop
dec
and
in
pop
ficoms
mov
aaa
pusha
pushf
pop
dec
push
mov
ds
mov
sbb
and
cmpl
pop
cs
fwait
and
cs
dec
outsb
push
dec
sub
shll
mov
imul
and
subl
cmc
in
rep
mov
lret
addb
fmull
lock
cmp
test
adc
inc
aas
push
popa
or
rorl
pop
rcrl
dec
or
xor
jecxz
out
xor
cmp
cmpsb
xchg
int3
leave
mov
mov
ret
lds
inc
in
ljmp
cmp
test
cli
cmpsb
js
inc
and
stos
into
dec
jecxz
push
popf
xchg
push
cwtl
out
pop
ja
aas
xorl
inc
or
xchg
push
dec
aas
in
sub
xchg
sub
xor
jno
cs
popa
jnp
aas
jecxz
add
or
ljmp
pusha
ret
subb
out
xchg
cmp
scas
mov
adc
test
or
shll
fistps
hlt
ljmp
outsb
xchg
mov
dec
sub
arpl
aad
nop
inc
jbe
int3
xchg
testl
and
cli
pop
cmp
push
ja
data16
dec
sbb
mov
jnp
mov
pop
jbe
stos
cmp
popa
inc
jmp
shrb
or
xchg
pushf
mov
inc
out
cmpsl
adcb
sub
aaa
fsts
mov
and
aad
add
loope
lcall
and
pop
and
pop
out
jg
or
mov
push
dec
xor
and
mov
cs
in
cmp
jmp
test
pop
pop
and
jne
dec
out
adc
sbb
or
adc
mov
les
pusha
nop
pushf
sbb
push
mov
dec
xor
aaa
push
lahf
pop
sahf
push
ds
test
cmc
push
ljmp
mov
imul
push
xchg
inc
pop
lea
scas
or
fidivl
cltd
and
rcrb
or
lods
push
pop
packssdw
and
es
mov
adc
lds
in
mov
in
sub
cmp
mov
cltd
daa
fimuls
cmp
add
pop
cs
mov
inc
pop
enter
sarb
lods
xor
sub
jl
sub
div
loope
jno
push
and
push
and
mov
imul
fisubl
add
out
fs
fwait
in
fs
mov
jns
sahf
popa
inc
leave
push
adc
sbb
mov
push
popa
lock
adc
lret
jnp
cwtl
cmp
into
cli
sub
xchg
mov
rorl
shrl
repz
mov
xchg
insb
loop
data16
cmpsb
cli
sub
jns
cmp
pop
xchg
and
sti
and
xor
icebp
sahf
std
xchg
push
fmuls
xchg
inc
xor
inc
push
ret
mov
cmpsl
and
das
jb
pop
loop
inc
insl
dec
cmc
sahf
jp
push
or
lock
adc
inc
stos
mov
out
rcll
fisubrs
test
addr16
dec
jno
mov
int3
and
mov
adc
cmp
das
sti
or
mov
mov
add
cmp
int
xor
movsb
or
xchg
out
sbb
mov
xor
aad
sti
fucomip
mov
push
ficomps
lea
push
data16
jnp
lods
mov
jl
xor
clc
rclb
out
lods
iret
movsb
sub
push
fistl
rcll
cmp
jne
mov
hlt
pop
and
adc
mov
test
dec
subb
in
add
aad
aas
sbb
aaa
cmc
adc
out
mov
xchg
inc
fs
inc
mov
dec
in
cmp
rclb
movsb
mov
adc
and
aas
and
movb
leave
xchg
mov
cmp
ja
in
cmpb
repnz
jmp
lret
or
add
xor
int3
pushl
fnsave
arpl
xchg
sahf
dec
das
jp
and
pop
fsubs
inc
push
in
arpl
hlt
jo
and
jp
outsl
mov
sub
pop
or
rorb
icebp
pop
lea
fs
js
outsl
lcall
jb
into
jg
jp
cmc
inc
cmp
shrl
sbb
clc
jnp
rclb
mulb
shrb
stc
sub
inc
and
outsb
dec
pop
loopne
in
pop
pop
repnz
nop
push
out
pop
xchg
adc
push
xchg
dec
xor
int
cmp
notb
cs
mov
in
out
lods
adc
rolb
lahf
pushl
sarb
pushf
sahf
loopne
ss
orb
sahf
repnz
jg
cwtl
loop
arpl
das
loopne
loope
scas
xor
loope
pop
push
call
outsl
jne
addr16
adc
pop
and
addr16
jae
xchg
das
fwait
pop
notl
add
lcall
pop
jmp
shrb
xchg
test
sub
push
mov
and
cmc
jbe
in
out
movsl
push
cmp
mov
dec
fistpll
aas
out
adc
sub
sbb
mov
cmp
lods
jg
lea
and
into
dec
sbb
jmp
out
mov
pushf
imul
out
jecxz
test
adcb
lret
std
jp
icebp
lods
add
stc
or
sbb
mov
dec
or
test
and
rcrl
pushf
dec
xchg
pop
das
xor
fnstsw
pop
test
je
fs
loop
add
pop
sub
sbb
aas
adcl
pop
push
sub
dec
aas
ljmp
pop
add
or
dec
je
scas
ret
js
dec
push
mov
mov
adc
mov
shlb
daa
xchg
mov
rcrb
mov
ljmp
xor
test
lret
xchg
mov
sub
add
iret
xor
loop
sahf
xchg
test
push
push
in
out
sub
pop
push
mov
jno
push
pop
mov
add
push
inc
dec
xor
push
mov
mov
jne
xor
cmpsl
imul
rolb
hlt
insb
dec
clc
rclb
fisttpl
inc
test
xor
mov
sahf
xor
xchg
xor
inc
sbb
fstl
push
subb
pop
fst
stos
pop
rol
aaa
jns
test
push
in
andl
mov
ret
push
fldenv
mov
push
xchg
pop
or
cmpb
std
mov
popf
ds
push
lock
mov
movsb
mov
imul
pop
repz
cmc
loopne
cmpsb
rol
mov
jne
inc
push
stc
cmp
jo
add
sbb
mov
push
mov
pop
pop
loop
and
sbb
lds
or
shrb
add
xrelease
stos
push
lret
sub
cmpsl
jmp
js
test
fwait
hlt
dec
pop
cmpsl
les
cmp
loope
and
mov
hlt
filds
add
stos
and
push
hlt
mov
push
and
ja
stc
pop
pop
add
fcoml
ret
lds
pop
adc
and
push
dec
int
imul
pop
jne
cmp
mov
pop
aad
xchg
in
xor
jns
and
nop
mov
pop
sbb
adc
dec
aad
test
pop
add
sbb
sub
outsb
inc
inc
adc
inc
arpl
in
mov
lahf
pop
push
popa
pop
in
out
out
stc
dec
pop
shrl
mov
ret
cmpsl
mov
pop
adc
add
popa
mov
xchg
mov
dec
cld
sbb
xor
test
jno
mov
sub
mov
test
cltd
outsb
mov
inc
inc
push
repz
jecxz
sbb
and
inc
lea
xor
sahf
ljmp
or
adc
aam
test
jge
push
xorl
mov
sahf
aad
jge
jb
mov
pcmpgtw
js
xor
js
rcrl
aam
sbb
bound
push
jns
rcrl
das
icebp
ficoms
shrb
insl
ss
xchg
jp
mov
jne,pn
lods
xor
lea
xchg
xchg
mov
sub
sbb
sti
jbe
ret
inc
or
out
push
dec
dec
jmp
rcl
aad
xchg
dec
add
mov
into
sub
jmp
mov
enter
mov
fnstenv
mov
or
or
pusha
jo
fwait
dec
push
cmp
pop
cmp
test
jns
in
scas
loop
out
inc
add
add
fists
jle
pusha
cmp
cmp
je
scas
in
inc
pop
test
mov
loope
popa
nop
test
mov
push
sahf
cld
ja
dec
jge
ret
mov
scas
inc
insl
sbb
fwait
jbe
mov
push
pop
cmp
dec
dec
ret
cmp
pop
out
jmp
xchg
mov
popa
sbb
mov
cmpsb
add
xor
and
pusha
imulb
sub
sub
inc
jae
push
xor
inc
out
xorl
sub
std
aas
arpl
sub
mov
and
lahf
push
inc
fdivr
sbb
adc
mov
mov
sub
shrb
sarl
cmp
cmp
lret
aad
add
pop
dec
or
pop
in
cld
in
push
adc
jmp
xor
mov
xor
stos
or
or
ret
lds
xchg
xchg
int3
xchg
add
push
adc
mov
mov
mov
push
int
leave
and
rcrb
mov
lods
nop
sub
mov
add
xor
or
add
js
inc
sub
xchg
inc
ljmp
sahf
movb
add
and
ret
pop
mov
call
pop
fs
into
out
je
ret
inc
jecxz
or
imul
jle
mov
in
xor
jecxz
cwtl
lahf
iret
andb
cli
jo
pop
mov
aaa
mov
xchg
cltd
and
mov
rcrl
sub
dec
cmp
std
repnz
int
push
pop
popa
pop
mov
enter
popf
sbb
stos
or
fwait
jle
push
cmp
sarl
jne
call
inc
cmpsl
cmp
les
sub
outsb
mov
cltd
ret
mov
mov
notl
inc
ret
sub
jbe
cmpsl
in
sub
jp
mov
jbe
or
imulb
les
pusha
ss
or
inc
aas
andl
sbb
pop
loope
sub
in
lods
ds
clc
call
xor
or
or
int
xlat
nop
dec
or
or
jmp
dec
stos
inc
sub
cmpsl
and
cwtl
pop
cltd
jg
fxch
or
leave
xor
fstp
scas
push
adc
or
divl
loop
jbe
inc
jl
mov
in
mov
lods
pop
push
in
jecxz
adc
and
xchg
mov
out
ds
aam
xor
cmc
shll
xchg
inc
and
jno
or
cmp
mov
cmp
rcll
sub
mov
outsb
loop
xchg
leave
push
sti
stc
in
out
xchg
mov
mov
jnp
arpl
roll
pusha
push
sti
dec
mov
addr16
insl
sub
and
jecxz
adc
jp
xor
enter
repz
lcall
xchg
push
fstl
mov
jmp
in
movl
jns
inc
movsb
dec
les
mov
sbb
push
cltd
jl
and
pop
dec
mov
lahf
flds
xchg
and
push
inc
mov
cmp
push
ds
add
hlt
lahf
aaa
jbe
pop
cld
mov
mov
add
jbe
mov
orl
add
out
push
aas
jg
ds
ret
imul
mov
pop
in
sahf
adc
add
pushf
stc
xchg
pop
fldcw
insl
cmp
bound
sbb
imul
daa
test
mov
pop
nop
loop
jg
ret
or
sub
inc
add
mov
push
push
jmp
inc
xchg
mov
xchg
into
adc
in
mov
imul
cmp
gs
scas
adc
xor
jb
enter
pop
std
mov
inc
xchg
ss
xchg
in
scas
fldl
mov
mov
mov
inc
das
add
je
sub
enter
sbb
shr
xor
dec
or
loope
pushf
xor
fidivrs
sbb
pop
shlb
fs
adc
xor
xchg
lcall
adc
mov
jo
mov
sub
into
outsl
mov
adc
int3
lea
inc
testb
inc
test
in
into
dec
push
push
inc
sahf
mov
jnp
mov
clc
mov
sbb
push
les
push
and
and
dec
sbb
rorl
inc
mov
sub
lods
imul
pop
cltd
ret
inc
loop
or
pop
mov
mov
scas
mov
sub
inc
add
clc
adc
andl
int3
sub
mov
dec
fiadds
ja
push
mov
sub
add
bound
xchg
pop
xor
cmp
ss
inc
push
jnp
lock
xor
mov
std
adc
sub
xor
push
repz
aam
adc
roll
sub
mov
int3
movsb
mov
add
pop
outsl
xor
jne
mov
pop
ljmp
cmpsb
xchg
and
fucomi
bound
inc
fcom
ja
and
clc
xor
dec
addr16
inc
and
fwait
xor
and
fidivs
popf
or
jecxz
shl
call
xchg
incb
insb
js
pusha
sbb
lret
insl
outsl
in
add
mov
push
jno
push
adc
sub
push
sbb
pop
mov
outsb
push
scas
lods
push
lea
cmpsb
outsb
data16
xor
or
lock
add
mov
mov
mov
inc
cld
iret
xor
push
and
dec
or
aad
adc
enter
mov
adc
xchg
in
push
in
int
mov
pushf
lret
cmp
push
or
adc
fistpl
xchg
fldcw
fwait
test
and
int3
mov
pushf
cmpsb
sub
mov
mov
inc
sub
sbb
jg
lcall
adc
pop
sub
pop
xlat
shl
lret
frstor
xor
into
jge
lea
xor
xlat
adc
add
mov
out
aaa
add
xor
mov
jbe
xor
adc
mov
out
mov
test
push
sub
xchg
enter
jl
pop
js
push
aaa
dec
xor
pop
loope
sub
mov
aas
jae
adc
jb
lea
call
cld
dec
lahf
push
dec
sub
mov
pop
pushl
fistps
in
hlt
movsl
pop
mov
xor
insb
rolb
mov
leave
repz
ret
push
repnz
clc
dec
and
fs
dec
hlt
pop
fnstenv
in
cltd
loope
fnstenv
sti
mov
stos
std
and
js
xchg
cmp
sbb
pop
pop
bound
loopne
and
out
jb
das
sahf
add
mov
cld
jg
mov
dec
test
xchg
in
xor
mov
in
cmpsl
cmpsl
push
push
rcll
push
es
xchg
pop
je
cmc
push
fyl2xp1
mov
or
lret
mov
aam
adc
mov
sbb
mov
pop
cmp
shrl
or
lods
bound
add
stos
cs
mov
out
cli
mov
xor
daa
inc
cmpsl
fdivrs
sbb
sub
and
cmp
jmp
jnp
lock
mov
loopne
push
in
out
push
inc
and
add
ret
dec
pushf
jg
pop
stos
ljmp
mov
orb
lret
rclb
ret
lcall
push
mov
push
and
sarb
test
sbb
insl
mov
push
mov
movsb
and
and
fdiv
sub
jae
loop
sbb
stos
push
rcrb
pop
mov
push
ds
insl
insl
pop
imul
xlat
cwtl
jecxz
js
sub
insl
movsb
rorl
or
das
lea
cmp
outsl
scas
add
imul
ja
jle
inc
jge
shrl
test
aaa
fbstp
sbb
mov
sti
cmp
mov
cmpsb
jo
dec
test
lods
shlb
ss
xchg
les
outsb
sub
push
aam
mov
mov
cmc
das
mov
int3
jl
add
xor
push
lods
rolb
mov
xor
icebp
mov
push
jecxz
pusha
and
arpl
out
push
repz
jb
xor
sub
or
sbb
mov
jmp
sbb
loopne
adc
in
mov
lret
jle
sub
cs
in
adc
jae
aaa
test
in
mov
enter
lea
std
lock
ljmp
and
xlat
xchg
subb
shll
mov
aas
mov
pop
inc
enter
fst
inc
or
push
mov
inc
mov
or
push
inc
lods
jo
inc
orb
xor
int3
insb
dec
push
stos
movsbl
pop
jne
xchg
jns
into
ds
test
cmp
inc
or
lods
mov
or
xchg
mov
mov
lods
inc
in
int
fidivrs
int3
lret
jb
jmp
arpl
mov
jecxz
cs
adc
int
adc
push
inc
lds
es
adc
push
xor
sub
call
jne
ret
rclb
inc
sbb
add
arpl
xor
xor
sbb
jecxz
sti
insb
push
test
ficomps
sub
lods
xor
lret
pop
pusha
fwait
fs
movsb
pop
mull
mov
mov
lds
decb
out
mov
and
jb
mov
lods
je
jg
xor
iret
and
push
fstpl
mov
sbb
shlb
lahf
xchg
sbb
pop
lea
fistps
push
inc
pop
xor
mov
add
push
push
lock
dec
sub
jne
pop
aaa
adc
loop
cltd
mov
add
pop
mov
push
sbb
inc
adc
cmp
jge
loop
decb
cmpsb
out
mov
lea
and
dec
popa
mov
cmp
popa
adc
and
mov
popa
mov
repz
push
fidivrl
push
xchg
inc
jns
jbe
out
sbb
dec
xlat
xchg
or
jl
mov
pop
lea
jnp
and
ja
adc
dec
insl
sbb
push
jns
mov
leave
aaa
pop
add
int3
xor
fcomps
mov
xchg
aad
mov
dec
into
cmp
jl
addb
fistpl
cmpsb
xchg
out
add
fwait
cmc
sbb
inc
pop
and
adc
mov
push
mov
mov
inc
aam
push
add
push
loop
jecxz
jmp
mov
xchg
sub
ret
xchg
daa
cli
mov
lret
pusha
adc
ror
inc
jg
sbb
shr
pop
mov
in
popf
imul
mov
mov
int3
rcrl
cmp
mov
pop
imul
in
or
int
xor
push
sub
sti
sbb
loopne
mov
subl
mov
cmpsb
sti
test
fcmovb
and
mov
and
and
call
fsubl
adc
mov
addr16
pop
rclb
daa
inc
mov
fsts
sub
mov
jbe
pop
divb
sub
subl
lahf
and
aam
and
cmc
rol
cmp
shrb
xlat
call
push
pop
cmpb
outsb
push
mov
call
dec
stos
out
cmp
mov
mov
dec
jle
or
stos
mov
adc
outsl
pop
pop
jmp
adc
gs
sub
outsl
arpl
rcll
cmpsb
sti
sti
mov
lock
jmp
jno
insb
jl
aam
sarl
sub
sbb
adc
mov
mov
ljmp
js
xchg
push
imul
and
in
mov
or
test
xlat
dec
xor
pop
movb
cmp
testb
ds
out
push
sub
cmp
cli
inc
jecxz
pop
insl
subl
faddl
pop
cltd
fisubrl
pop
notb
sbb
xchg
inc
xchg
dec
roll
aam
or
and
mov
leave
mov
shlb
or
sahf
inc
insl
cmp
or
add
xor
sbb
mov
mov
dec
lock
out
hlt
lret
scas
arpl
push
les
push
xor
aaa
fstpt
cmp
pusha
mov
ds
mov
cwtl
ret
push
sbb
sahf
inc
xchg
hlt
lret
test
cmp
sub
in
repnz
xor
xor
loop
mov
xchg
and
or
das
mov
adc
jnp
push
cmp
inc
subl
mov
scas
js
or
out
jo
popf
ljmp
add
adc
cmp
add
inc
and
xchg
and
cs
les
sub
sahf
or
loop
jbe
sbb
repnz
push
pop
in
cmpl
jno
and
in
cmpl
jge
mov
pop
add
fs
jle
lock
cmp
lea
stc
mov
pop
mov
aaa
add
mov
mov
imul
inc
fwait
push
dec
or
out
in
aad
jl
nop
push
mov
enter
fisubrs
loope
sub
pop
lea
jmp
mov
pushf
movsl
mov
test
mov
jae
and
jge
insb
push
out
cmp
and
loopne
imulb
or
repnz
fs
sub
jle
push
in
test
push
std
lahf
add
xor
jnp
fbstp
jns
pop
sbb
or
pushf
arpl
xlat
or
dec
cwtl
and
pop
mov
es
push
dec
add
cs
xor
push
jae
cltd
cmp
jno
and
repnz
mov
xchg
push
cmp
or
js
lds
mov
and
xchg
pop
sub
add
mov
mov
enter
adc
insl
stc
or
out
jl
sti
xchg
lods
in
mov
and
fwait
mov
mov
mov
nop
mov
xlat
sub
xor
mov
out
clc
or
xor
dec
push
xchg
test
fimull
cmpsl
add
cmp
push
subl
mov
dec
mov
and
mov
popf
fisttps
rol
test
xor
dec
jle
and
or
add
in
ja
push
movsl
cmp
pop
lea
jbe
enter
and
gs
cmc
pushf
sub
das
ss
fldt
push
mov
cmpsb
in
sbb
and
aad
dec
inc
mov
jmp
fwait
push
cmp
mov
aam
mov
roll
out
subl
sbb
pop
lahf
or
cs
pop
arpl
inc
sbb
mov
stos
test
inc
push
mov
hlt
sbb
inc
stos
out
add
jecxz
inc
cs
test
stos
jmp
jge
push
sar
jp
scas
sbb
pop
fstpt
adc
push
add
mov
mov
mov
xchg
fs
out
or
fs
jb
lods
sub
dec
xchg
xor
subl
add
adc
mov
hlt
lock
stos
and
cld
test
mov
movsl
push
add
mov
add
rdpmc
loopne
shlb
mov
ds
xlat
dec
or
out
fisubrl
mov
mov
jo
jo
aad
enter
dec
es
cwtl
das
jno
imul
and
add
test
sbb
ss
mov
shll
mov
adc
in
mov
fst
cmc
cli
pusha
lock
push
mov
ficompl
not
jae
xchg
jle
jmp
adc
mov
je
jns
and
pushl
pop
pop
fwait
adc
jp
sub
dec
jno
lcall
pop
dec
mov
xor
loope
dec
adc
pop
pop
sub
jle
adc
test
sahf
mov
mov
dec
test
or
inc
cld
mov
adc
inc
inc
lcall
jl
sub
fldenv
inc
rcll
into
and
mov
pushf
pop
shrl
jp
outsb
dec
and
gs
sbb
sub
cmp
cwtl
imul
dec
push
outsl
and
fstpt
mov
ds
or
testb
outsl
jbe
addr16
loop
cs
xor
cmp
dec
call
clc
xchg
leave
mov
pop
xchg
mov
and
adc
mov
mov
ljmp
xchg
cmc
test
and
inc
push
mov
adc
fnstsw
mov
iret
jmp
notb
lret
shrb
mov
in
ss
icebp
std
add
pop
loop
stos
push
sarb
and
sub
dec
xor
xchg
inc
pop
or
in
xchg
sbb
imul
and
or
inc
add
mov
outsb
ss
fsubrl
popf
imul
mov
cmpsb
mov
add
lcall
sbb
inc
cmp
or
icebp
cli
pop
lock
add
jnp
outsl
stos
push
jle
out
jae
dec
outsb
in
adc
add
or
mov
mov
lock
xor
pop
bound
mov
clc
movsl
cmpsb
jecxz
sbb
push
inc
lods
fcomps
imul
ret
add
or
out
dec
popf
add
jmp
lods
inc
adc
jg
push
mov
js
mov
pusha
fcomp
lods
imul
jne
loop
jmp
or
adc
fcmovnu
pop
mov
mov
loopne
call
hlt
ljmp
gs
lods
sub
pop
test
loop
cwtl
paddusw
push
xchg
xorl
or
out
mov
cmpb
insl
pop
add
xor
int
pushf
ja
loop
in
out
pushf
loop
jnp
inc
sbb
push
xchg
push
pop
jns
shll
or
jp
xor
xchg
jnp
imul
or
push
jbe
out
scas
mov
sub
icebp
inc
mov
in
jno
out
aas
ret
pushf
xchg
repnz
sub
cwtl
or
sbb
jb
idiv
pop
scas
sub
addr16
gs
xchg
pop
xor
xlat
pop
test
mov
inc
push
in
bnd
test
jle
adc
lock
xchg
sbb
xor
mov
and
mov
and
out
call
mov
jne
adc
loope
jle
push
add
jl
in
xchg
or
testb
pop
ds
push
push
mov
mov
sub
icebp
mov
incb
add
movsl
loopne
fimuls
dec
xchg
and
fnsave
lock
xor
in
jo
test
dec
sbb
popaw
mov
movsl
mov
mov
or
xchg
cmpsl
mov
fistps
cmpsl
cmp
add
xor
cs
dec
lds
xor
adc
je
mov
mov
js
dec
idivl
push
adc
jae
inc
push
and
inc
cmp
popa
pop
xchg
xor
ds
cmp
sbb
jecxz,pn
int3
or
add
in
mov
sbb
loop
cmp
xor
add
sub
fs
mov
dec
jae
cmpsl
and
mov
ss
pushf
divb
clc
adc
test
push
jp
jecxz
ret
dec
add
mov
xor
jb
inc
sbb
test
lret
mov
cmpsb
sbb
pushw
pop
mov
outsl
or
mov
inc
push
cmp
lahf
int
incl
pop
xchg
pop
lahf
sbb
inc
push
pop
xchg
fadds
mov
pop
imul
jg
out
movsb
data16
arpl
imul
or
outsl
xor
jecxz
and
sub
and
or
repz
inc
imull
pop
testl
jge
cmp
imul
insl
mov
xchg
lea
popa
jb
aad
in
xlat
shll
adc
jecxz
sbb
dec
popa
rcll
mov
cli
xor
popl
dec
mov
negb
sub
sbb
movb
jbe
loopne
lods
lods
inc
mov
cmp
ss
adc
pop
mov
imul
mov
xor
jns
outsb
stc
pop
out
push
jp
inc
push
push
iret
aaa
sub
inc
cmp
xchg
mov
movsb
cwtl
frstor
mov
adc
fsubrl
ficompl
lods
or
inc
in
push
sub
daa
mov
sub
adc
aam
xchg
data16
mov
mov
fdivrl
xchg
sub
pusha
rorb
pop
inc
es
cmpsb
jg
ds
lahf
jno
inc
adcb
sub
out
int
cmpb
cltd
frstor
fwait
cmc
or
clc
sub
fiaddl
scas
and
mov
out
cwtl
cmp
negb
movsl
into
jno
push
mov
pop
push
scas
jnp
xchg
js,pt
lea
mov
mov
dec
sub
mov
dec
and
adc
mov
xor
incl
in
cld
jle
int
adc
mov
into
xchg
inc
push
jge
icebp
pusha
sbb
loope
call
lahf
xlat
mov
mulb
inc
push
mov
lea
cs
hlt
in
push
cmp
sbb
jg
push
xchg
dec
and
popf
mov
in
jmp
repz
xor
sub
test
mov
inc
scas
pop
and
test
outsb
mov
pop
xchg
pop
cmc
ret
or
mov
jb
pop
lods
adc
repnz
int
jl
dec
inc
adcl
stc
shrl
gs
or
ljmp
jae
enter
pop
cmp
sub
nop
or
jg
arpl
lock
cmp
cmp
dec
sahf
lea
adc
adc
fldcw
jle
in
jp
js
add
jno
in
ret
dec
mov
and
xchg
sbb
or
pop
gs
fcomps
and
sub
fmull
iret
inc
pop
mov
dec
inc
cmp
ret
push
in
enter
push
cltd
dec
ljmp
fwait
mov
push
outsb
inc
fistpll
int
fs
jecxz
mov
mov
dec
les
pushf
mov
aas
aaa
rcll
ret
dec
and
pop
nop
lcall
jae
mov
adc
dec
out
sbb
mov
mov
lcall
mov
mov
inc
jae
nop
ljmp
out
je
aam
inc
movsb
in
je
sub
inc
lea
fcom
jp
add
mov
push
add
movsl
jne
xchg
pop
cmpsb
shll
xchg
inc
adc
dec
jae
fisttps
icebp
adc
jecxz
xchg
xor
ret
push
dec
push
adc
out
jns
movsl
shr
sub
out
cltd
push
rcrb
roll
sti
push
stos
ret
push
jecxz
das
out
insl
push
sub
pop
in
repnz
push
shll
int3
test
cs
dec
clc
dec
mov
fs
cmp
cmp
orb
mul
lret
and
in
gs
sbb
sub
shr
shl
mul
xchg
das
jle
in
lods
add
dec
stos
fistps
and
addl
jg
adc
lcall
mov
sbb
push
mov
iret
mov
sub
in
dec
pushf
jnp
mov
test
idiv
ja
das
inc
jae
int3
or
or
out
cmc
and
loopne
insl
mov
call
ljmp
add
lds
mov
aad
ret
dec
push
jns
in
test
outsb
pop
mov
mov
mov
mov
cmpsl
ss
cwtl
clc
cli
dec
mov
lcall
add
dec
cwtl
cmp
cmp
jno
subl
lret
xor
jl
mov
dec
pop
pop
mov
stos
add
xchg
inc
sahf
cmp
pop
or
test
adcb
mov
lahf
aaa
mov
scas
and
cmp
mov
addr16
mov
xchg
stos
sbbl
cmp
movsb
sti
out
std
and
aas
pop
iret
movsl
adc
mov
shlb
movsl
idivb
loop
mov
std
xchg
inc
psrlw
lock
fucomip
mov
fwait
dec
and
sbb
or
jnp
dec
jecxz
adc
aad
mov
jle
hlt
fcmovbe
xor
xchg
cmp
out
call
cmpsl
shlb
adc
out
jle
dec
jge
shrl
pop
sub
xlat
xchg
add
cmpsb
mov
lods
or
dec
ret
mov
sub
adc
icebp
je
lret
in
dec
mov
sub
pop
lret
jle
mov
mov
sub
mov
fadds
fldenv
mov
fndisi(8087
sbb
and
pop
jbe
mov
adc
fldt
cwtl
leave
xchg
fcmovnu
mov
mov
inc
popf
xor
jae
dec
add
xorl
das
stos
cld
dec
and
cmp
lahf
scas
sbb
aaa
insb
dec
faddl
mov
mov
and
xchg
gs
aad
xchg
shl
sbb
fs
adc
dec
sub
mov
clc
imul
and
bound
push
or
push
lret
mov
sbb
jb
or
or
in
rcll
lods
sub
icebp
enter
cmpb
ret
xchg
js
ds
mov
sub
int
xchg
mov
pop
mov
cmp
js
sub
fucomip
add
fcmovb
push
cmp
aas
rcll
int
sub
lock
cmp
mov
sahf
push
stos
into
add
pop
mov
fdivs
jmp
cli
mov
sub
mov
inc
test
int
std
push
jmp
sub
aaa
cmp
jmp
setns
or
xor
iret
mov
movsl
sub
int3
imul
repz
mov
jl
mov
sub
jne
or
push
jbe
in
xchg
outsl
mov
addr16
add
dec
std
shl
jae
push
pop
xchg
jne
mov
mov
jno
bound
mov
and
dec
aas
inc
pusha
scas
mov
jb
pop
xorb
shrl
pop
mov
dec
loopne
ret
pop
sarl
mov
lock
inc
cmc
jbe
and
imul
jmp
addb
out
aaa
outsb
push
pushf
insb
clc
loop
inc
sbb
mov
call
xchg
jnp
daa
stos
sbb
add
push
inc
mov
lcall
shlb
aas
mov
xlat
nop
xchg
notb
jmp
shll
push
ja
pushf
dec
inc
mov
int
roll
inc
arpl
sub
inc
sub
mov
fs
pop
lods
rcrb
and
jecxz
iret
mov
dec
push
push
es
jns
int3
fsubl
sbb
es
lods
push
inc
das
out
clc
or
cmpsl
jle
fisubs
sbbl
inc
mov
jecxz
addr16
fnsave
stc
push
inc
pop
stos
add
iret
popf
fcompl
scas
push
add
ret
xchg
int3
inc
cmp
mov
lret
add
sete
scas
or
mov
inc
adc
out
push
jo
pop
jb
test
xor
mov
cs
or
dec
mov
push
pop
bound
mov
jbe
adc
adc
mov
int
add
fldl
test
mov
jg
data16
adc
mov
andnps
xor
das
movsb
ss
ja
in
jnp
fsubrp
adc
mov
cmp
dec
push
and
mov
arpl
int
pusha
push
mov
aaa
cwtl
fs
repnz
add
pop
cmc
adc
mov
adc
mov
dec
xor
in
out
xchg
add
mov
stc
add
inc
iret
inc
push
aas
popa
and
dec
stc
pop
ss
repnz
sbb
test
cmc
jmp
lds
cli
or
mov
or
inc
adc
inc
or
addl
fmulp
push
fcoml
lods
les
cmp
xlat
pop
fidivs
dec
ret
jb
push
lret
push
hlt
cmp
xchg
xchg
cmp
stos
jbe
rcrl
cmp
fnstenv
fildl
lret
ret
jo
xor
xchg
scas
arpl
jmp
cmp
fisubrs
iret
mov
ljmp
jno
imul
pop
adc
repnz
add
test
jmp
jne
imul
mov
movsl
xchg
adc
in
insb
dec
mov
jl
pushf
icebp
xorb
add
pop
mov
lcall
pusha
or
jmp
std
xor
popl
aaa
outsb
mov
xchg
push
adc
cmp
push
and
aaa
push
xchg
pop
rcrl
xor
mov
jle
jecxz
jg
out
repz
pop
sub
and
mov
inc
jae
sbb
sbb
jo
push
push
mov
cmp
cwtl
clc
scas
inc
sub
lret
sub
xor
sbb
mov
inc
mov
and
xchg
jp
shr
cmpsl
and
out
cli
push
sbb
jns
inc
test
pop
push
int
mov
movsl
push
or
loop
adc
aaa
mov
std
in
loopne
pusha
pop
popa
xor
pop
aam
xor
cmpsb
mov
mov
enter
xor
scas
notl
stos
pop
ret
adc
jmp
mov
inc
xor
push
je
add
repz
stos
outsl
test
pop
add
sub
lea
mov
xor
test
cmpb
push
or
fcoml
cmp
test
mov
jbe
mov
and
mov
cmp
mov
or
pop
outsl
adc
jne
and
push
fcomi
nop
or
sbb
pop
mov
out
push
bnd
shl
movsb
stos
das
or
sbb
pop
jge
jo
mov
mov
xor
das
mov
test
mov
jg
or
popa
mov
xchg
adc
pushf
jle
mov
imul
filds
stc
jle
jle
test
and
pop
adc
mov
jno
xchg
sub
pop
jae
adc
arpl
mov
pop
sbb
stc
pop
jmp
xchg
cmp
mov
shrl
insb
push
repz
rclb
test
lret
xor
inc
mov
mov
mov
inc
inc
call
jg
jge
imul
imul
push
data16
dec
cwtl
lods
inc
adc
and
cmpsl
inc
ret
sub
ret
out
inc
lds
jo
out
mov
jl
scas
pop
nop
jle
or
xor
add
adc
cmpsb
xor
cwtl
and
shll
jno
fistl
loop
into
cmpsb
subb
bound
add
repz
aaa
aaa
outsl
push
lcall
and
movsl
pop
inc
dec
fsubrp
ss
xlat
mov
xor
mov
movsl
xorl
mov
jae
push
add
jnp
or
lahf
mov
mov
imul
mov
push
fcompl
popf
jne
popa
je
insl
xor
cld
xchg
icebp
popf
add
mov
push
mov
out
push
enter
pop
lcall
pusha
clc
adc
cwtl
dec
or
imul
jbe
or
push
lret
notl
mov
and
popa
subb
mov
jmp
jl
jle
adc
pop
sub
aas
lret
and
and
push
jl
pop
testl
loop
jg
jns
and
je
pop
pop
mov
ret
cmp
xchg
ljmp
sarl
lea
cmp
popf
data16
je
pop
dec
mov
or
and
xchg
fdivrl
ljmp
xor
push
add
xchg
push
dec
push
and
add
sub
dec
cmpl
xor
movsl
jns
lock
xor
int3
test
xorb
or
sbb
sbb
scas
sub
int
mov
lret
cmp
cltd
jb
fstps
call
adc
or
popf
inc
xor
inc
lcall
sbb
and
dec
xchg
bound
lcall
pop
popf
adcb
mov
js
push
or
mov
add
adc
dec
push
pop
loop
sbb
ljmp
ret
inc
enter
inc
pop
inc
push
pop
or
push
int
les
mov
push
xor
scas
mov
cmpsl
fwait
xchg
mov
cmp
lahf
add
sbb
js
adc
mov
and
dec
inc
sahf
rcll
mov
xchg
dec
xor
push
pop
adc
je
or
cltd
cld
mov
imul
adc
lret
lds
insb
ds
lahf
jno
fs
dec
pop
mov
cmp
jns
mov
and
andl
in
leave
push
pop
adc
jns
jo
movsb
sub
xorb
cmp
push
sub
je
lods
jp
mov
inc
mov
lods
shrl
ret
cmp
ja
cwtl
adc
mov
imul
or
clc
call
mov
inc
jl
addb
inc
mov
xchg
push
or
test
xor
push
fdivl
mov
jbe
das
and
lds
or
jae
adc
aas
in
xor
xlat
rclb
lret
aam
mov
mov
insl
mull
xor
push
int
mov
test
sbb
ss
pusha
pop
out
hlt
pusha
mov
lea
hlt
lea
add
scas
add
call
nop
cmp
jecxz
mov
jnp
mov
jg
push
aas
test
dec
fdivl
cs
cmc
mov
in
insb
aaa
inc
add
dec
loope
daa
push
jp
loope
test
test
ss
pop
mov
xchg
shlb
call
aam
push
push
jmp
xchg
add
add
inc
lock
or
into
or
mov
dec
pop
imul
push
mov
inc
dec
mov
arpl
mov
addr16
dec
jo
lods
out
xchg
in
push
rorb
ljmpw
minps
mov
xchg
aaa
pusha
push
andl
fs
testl
das
loopne
jge
jnp
mov
push
xchg
push
bound
inc
or
adc
push
push
and
inc
cmpsl
dec
das
out
cmp
ret
rcll
jbe
cmpsl
fcmove
mov
cmp
xchg
adc
test
mov
mov
cld
fdivp
scas
adc
ja
jp
hlt
mov
rcl
loopne
sbb
adc
icebp
call
adc
mov
scas
fsubrs
inc
inc
orb
sbb
mov
push
jno
mov
jp
jg
arpl
out
aam
jp
sahf
in
mov
cmp
add
or
mov
in
xchg
cld
arpl
repz
lods
push
lods
push
js
mov
enter
dec
aam
sub
gs
xchg
test
fdivr
xor
inc
pusha
add
lret
sbb
rol
ret
cmp
push
mov
shrb
adc
mov
iret
js
or
leave
cmp
imul
mov
jo
in
dec
daa
pop
xchg
mov
jbe
sub
movsl
push
js
mov
sub
fwait
mov
or
loop
cs
jbe
adc
data16
pop
xchg
jnp
sbb
lcall
mov
loopne
lcall
and
xor
or
test
rclb
lods
lea
dec
mov
and
jo
push
ror
mov
cli
fildll
nop
stc
repz
cmp
or
mov
mov
push
push
xlat
and
in
shrl
test
dec
dec
mov
mov
mov
xchg
scas
int
add
jb
xor
and
outsb
sbb
mov
fdivl
cmp
adc
bound
and
test
movsb
inc
outsl
sbb
movsb
sub
mov
popa
fsubrs
ret
mov
inc
int
xor
enter
jge
int
arpl
repz
stos
pop
out
inc
push
enter
and
mov
sub
fcoms
sbb
mov
add
jg
cltd
insl
das
lods
pop
or
push
cmpsl
xchg
push
aam
pop
inc
popf
xlat
sbb
orb
pusha
xchg
cmpsl
mov
xlat
inc
scas
adc
int
sub
pusha
fidivrl
xchg
lds
daa
clc
push
fs
icebp
push
and
inc
test
stos
pop
xor
pop
rclb
imul
clc
cmpsb
shrb
xchg
rcpps
xchg
push
cmp
in
out
adc
icebp
inc
aad
mov
xor
mov
mov
sub
rolb
add
jb
movsb
cmp
das
jge
hlt
movsl
std
cmpsl
xor
sub
filds
push
mov
scas
call
movsb
inc
mov
mov
das
pop
xchg
sbb
ja
push
dec
dec
lock
jp
rcll
add
dec
add
mov
xor
push
ds
scas
loope
pushf
or
and
addb
sub
or
stos
xchg
out
inc
pop
adc
mov
enter
jl
ljmp
add
in
repz
fcoml
xchg
imul
mov
dec
fwait
lahf
inc
addl
test
mov
fdivs
sub
adc
leave
lods
sub
cltd
stos
cmpsb
loop
jnp
cmp
cltd
mov
rcr
in
sbb
mov
add
scas
cmp
xor
sarl
mov
in
push
sub
ror
fmul
das
push
clc
test
xlat
popa
xchg
mov
aaa
jno
and
in
cld
int
xchg
popf
insl
das
fcoml
sub
mov
addr16
push
xor
cltd
movsb
inc
andnps
arpl
nop
xchg
rolb
fcompl
sub
and
push
stos
test
add
pop
add
movsb
sub
imul
adc
outsb
sarl
sbb
cmp
or
inc
or
jnp
push
jp
push
mov
cmp
lods
inc
shrb
int
shll
pop
cwtl
xor
insb
sbb
repz
mov
std
pop
inc
inc
test
negl
mov
lods
daa
je
mov
lods
and
jmp
dec
lods
imul
call
mov
outsl
movsl
jo
lret
xchg
int3
sbb
fisubrs
ret
push
daa
xchg
andb
xchg
mov
leave
sbb
test
nop
jl
nop
bound
push
cmp
sub
xor
or
fstpt
mov
negb
push
add
mov
adcb
or
xchg
sub
add
mov
xchg
fcmovnu
js
mov
scas
loopne
mov
aad
sbb
and
push
call
pop
and
je
add
xchg
dec
jmp
and
jnp
dec
mov
leave
scas
jb
pop
xor
jns
xchg
hlt
mov
sbb
adc
sbb
in
mov
mov
pushf
push
imul
ds
and
fbld
pop
fldcw
inc
ss
sbb
pop
pop
xor
int
adc
mov
test
or
cmp
push
push
xchg
add
and
lods
xchg
aaa
xchg
pop
pop
arpl
inc
cmpsb
cld
pop
fmull
loopne
sub
mov
xlat
in
sub
or
fs
add
cmp
iret
or
jo
sarl
dec
movb
addb
fimull
dec
xor
dec
add
ds
push
bound
out
inc
jns
or
out
cltd
mov
test
out
mov
mov
cltd
icebp
int3
div
dec
in
aad
out
jg
and
cltd
test
test
movsl
xchg
scas
and
fs
push
mov
jno
dec
or
sub
pop
out
dec
inc
cltd
and
xor
int
jg
loope
add
jo
dec
dec
mov
hlt
fcom
shr
sub
loope
jmp
adc
icebp
stos
out
or
xchg
idivl
cmp
sbb
inc
fistps
adc
in
mov
stos
fisubs
cmp
add
xchg
loope
mul
inc
cmp
cld
sub
sbb
idiv
loop
jno
sub
pusha
jb
cmp
xor
insb
add
xchg
out
lahf
jb
xchg
xor
sub
or
xor
stos
add
adc
adc
xor
push
and
ficomps
fcomps
stos
repz
push
fstpl
out
mov
push
lret
fwait
push
call
dec
lock
pop
hlt
mov
sbb
sbb
mov
lds
xchg
mov
rcrl
pusha
insb
xor
mov
mov
push
test
jno
jbe
dec
cmp
ficomps
cmc
dec
xchg
jo
sbb
std
xchg
and
lock
adc
les
cmp
inc
pop
mov
or
cs
xchg
jmp
add
insl
xchg
xor
jae
pop
lret
loope
in
cli
aad
loope
je
in
and
dec
jmp
pop
jae
fbstp
mov
mov
out
cmp
loopne
mov
or
jnp
fisttpll
mov
adc
data16
cwtl
or
out
ret
jns
pop
mov
out
xor
or
mov
andl
ds
ss
fs
jae
xchg
mov
and
int
sub
jl
stos
sub
mov
popf
push
xchg
xchg
addl
push
test
scas
ds
popf
dec
mov
inc
dec
lret
cmp
pop
mov
jle
aas
cmc
cmpsb
push
cs
mov
pop
loopne
arpl
and
cli
imul
in
pop
sub
fnstenv
aam
add
pop
ret
mov
lds
xor
fildll
cltd
pop
fs
dec
and
stos
mov
cmp
push
xchg
push
push
xchg
mov
sbb
fdivl
lret
sub
lret
fimull
push
and
mov
push
clc
xchg
repnz
xor
mov
cltd
cmp
call
mov
addb
jecxz
sbb
cltd
das
jg
mov
sbb
adc
mov
mov
and
das
loopne
and
lea
pop
pop
push
mov
aam
mov
std
jns
stos
push
scas
ljmp
stc
not
ret
jo
lret
cltd
loope
je
dec
add
incb
inc
push
fildll
scas
xchg
imul
inc
pop
jecxz
fs
jns
scas
and
mov
movsl
push
in
in
insl
sub
fisubl
aam
mov
mov
cmpb
add
sahf
lret
call
mov
or
std
adc
or
into
mov
jbe
lret
add
popa
inc
and
lret
jmp
cmp
pop
xchg
aas
divb
stos
aam
mov
data16
lods
add
iret
jmp
jno
jno
inc
popa
jecxz
and
scas
jns
add
adc
push
sarb
ljmp
cld
cmp
mov
push
inc
notb
leave
jp
scas
inc
mov
sti
xchg
mov
cli
fnstenv
pop
les
push
dec
xchg
and
cmp
jl
fnsave
fstps
and
pop
jnp
xchg
sub
push
in
cmc
xchg
push
loop
ret
or
jb
ja
push
fidivrl
and
xchg
js
inc
imul
push
cmp
xchg
cmp
hlt
mov
lret
jp
jecxz
in
enter
jne
cmp
in
xor
and
mov
sub
adcb
adc
jmp
cmpl
adc
inc
shll
jb
lcall
sub
movsb
outsl
in
sub
imul
inc
pushf
leave
cwtl
in
fsts
test
fwait
sub
dec
clc
adc
pop
sahf
dec
jg
push
push
xchg
cmpsl
test
xor
gs
xchg
mov
scas
push
mov
push
popl
hlt
test
stc
aad
fldenv
loopne
in
mov
daa
loop
or
fidivs
das
lds
push
dec
mov
sub
test
imul
cli
leave
push
push
dec
mov
and
or
mull
lea
dec
je
xchg
hlt
xchg
mov
in
or
push
jge
jecxz
ds
hlt
pop
jge
enter
sub
out
cmp
sub
jl
inc
js
xchg
xchg
xorb
mov
mov
mov
push
add
addr16
sbb
inc
mov
sbb
dec
jns
lock
adc
inc
out
xor
and
iret
rcr
subb
iret
sbb
xchg
mov
mov
les
stos
add
adc
inc
inc
fwait
or
pop
stc
xor
sbb
mov
popf
and
ljmp
mov
movsb
mov
movsl
lds
cmp
pop
divps
outsb
jmp
pop
dec
shr
mov
sbb
adc
dec
ds
lea
adc
test
fimuls
mov
cmc
push
push
dec
sbb
imul
or
sbb
mov
cwtl
inc
sbb
fsubr
adc
jns
aad
or
inc
jg
pushf
push
leave
push
subl
imul
mov
lahf
add
sub
roll
mov
pushf
gs
lret
cld
xchg
mov
mov
out
fdivp
ja
or
cmp
dec
sbb
out
sahf
test
movl
lods
dec
or
js
call
fnstcw
sbb
cli
sbb
leave
stc
adc
inc
mov
cli
ljmp
sbb
shr
mov
xor
ret
dec
sub
aaa
ret
out
inc
ror
xlat
ja
cwtl
xchg
int
mov
mov
mov
stos
sbbb
jns
pop
enter
bswap
ds
adc
pop
fidivrs
fimull
xchg
fists
and
enter
lret
inc
sbb
add
and
lea
add
and
add
inc
icebp
sti
xor
push
sbb
mov
sub
aaa
fimull
ret
shrb
xchg
sbb
ss
rolb
test
ficompl
pop
push
ret
mov
test
daa
ja
fwait
xor
rcl
ds
cltd
fists
cmp
adc
xchg
ret
ficompl
sbb
arpl
nop
es
hlt
xor
push
cmp
aad
push
add
lods
fs
push
lods
shll
jle
test
fs
mov
xchg
xchg
clc
insb
loopne
repz
inc
stos
lcall
dec
dec
xchg
add
sbb
add
bound
mov
test
dec
add
in
popa
pop
mov
mov
jg
dec
rol
jecxz
xchg
sbb
ss
cmpsl
xor
leave
jle
js,pt
rcrl
jecxz
jl
sbb
sti
enter
js
jle
xchg
icebp
push
jae
rcrb
dec
addr16
inc
inc
add
xor
push
fdivrs
pop
test
cli
repz
jnp
pop
fucomp
stos
cmp
mov
xor
push
lods
and
adc
pop
or
mov
jne
out
pusha
mov
xor
fistps
cltd
popf
and
jno
push
test
jle
in
mov
pop
or
lret
dec
sar
sbb
fistpll
pop
inc
mov
icebp
test
cmp
call
xor
and
jae
push
or
mov
push
gs
sbb
mov
enter
mov
inc
cltd
lods
push
push
movsb
sti
xchg
add
pop
inc
shr
enter
xchg
out
in
push
inc
ficomps
mov
cmp
adc
or
std
xchg
xor
in
push
sbb
ds
out
gs
jno
aas
aam
jmp
stos
jns
mov
xlat
mov
insb
hlt
lret
loopne
jge
mov
mov
into
add
outsb
jne
outsl
rcrb
ficoms
insb
dec
call
push
cmp
xor
out
pop
fwait
xchg
adc
adc
movsl
fwait
mov
mov
inc
aaa
push
or
test
orb
imulb
inc
xchg
jecxz
mov
shr
sub
shr
mov
nop
std
pop
faddl
push
add
dec
or
adc
and
xor
xchg
and
out
push
hlt
adc
fisubrs
jbe
xchg
xchg
push
es
or
push
xor
push
inc
out
icebp
dec
mov
mov
inc
lods
pop
out
push
cmp
jmp
pop
or
imul
fst
add
mov
jp
imul
scas
popf
dec
jecxz
aaa
jecxz
jle
repnz
insb
iret
inc
repnz
push
icebp
xorl
daa
in
into
mov
scas
ja
sbb
sti
mov
cmp
cli
cli
cmc
mov
inc
mov
enter
mov
into
inc
and
pop
dec
dec
jp
icebp
sub
int3
fldl
insl
mov
jnp
add
aaa
loope
gs
jg
lods
dec
pop
jne
popa
xor
pop
dec
inc
jge
hlt
adc
pop
cmp
mov
xchg
dec
push
scas
fldt
test
dec
out
fsubp
xor
mov
adc
add
add
repnz
rep
push
je
lods
loopne
jg
jecxz
dec
into
dec
jmp
js
adc
cmp
loop
or
jns
and
jecxz
div
sbb
popf
xchg
daa
push
mov
ret
sub
icebp
sbb
out
bound
icebp
movsl
insb
ret
idivl
iret
icebp
mov
and
insl
ret
outsl
inc
les
ret
cmp
sub
stc
nop
test
or
mov
pop
stos
mov
imul
out
and
out
in
dec
mov
jnp
cld
jo
or
scas
pushf
cmp
add
es
popa
mov
ds
or
lods
insb
sbb
xor
incl
test
fdivl
lods
add
in
idivl
xor
lret
bound
ret
add
or
adc
and
fwait
fs
add
add
jmp
out
repnz
or
and
mov
xor
jle
ret
out
xor
sahf
jne
add
fimull
xchg
pop
outsl
sub
es
loopne
cs
add
or
mov
or
jns
pop
jl
xor
mov
adc
negb
push
or
scas
sub
icebp
popf
xchg
xchg
ret
fwait
int3
fimull
int
adc
mov
inc
push
adc
pop
and
rcl
lds
sub
popf
mov
adc
daa
pushf
mov
pop
cmc
lcall
aaa
mov
loope
add
cmp
dec
mov
pop
add
jnp
push
cmpsb
popw
popa
fmulp
lret
jg
add
sub
jo
xlat
movsb
or
sbb
add
pushf
adc
jb
jae
or
movsb
add
shl
mov
mov
inc
cmp
and
mov
es
mov
inc
scas
mov
test
clc
das
lret
dec
push
sbbl
xchg
push
dec
add
outsb
mov
jge
in
sub
mov
dec
ja
sub
jg
cs
mov
subb
jnp
sbb
jecxz
add
test
mov
loopne
stos
sahf
xchg
xchg
enter
cli
inc
add
inc
movsb
fldenv
xchg
push
cli
sbb
jl
pop
stc
pop
dec
jo
mov
aam
lds
pop
loope
gs
or
add
cmp
mov
mov
jne
xchg
xchg
lock
mov
pop
mov
faddp
int3
test
pop
hlt
ret
push
mov
mov
dec
jno
xchg
sbb
enter
lret
test
scas
xor
lret
cmp
push
pop
divl
sti
test
pop
push
push
xchg
sub
stc
jl
cwtl
iret
test
testb
sub
xor
jmp
mov
pop
arpl
sub
dec
fnstenv
inc
fisttpl
and
daa
je
sub
xchg
sbbb
sub
nop
out
cs
aas
enter
out
adc
xor
add
mov
mov
jnp
pop
mov
faddl
jl
movsl
incl
or
xchg
dec
and
mov
mov
out
xor
pop
lret
and
loop
cltd
mov
xor
aaa
icebp
cmp
mov
adc
sbb
scas
sahf
test
jo
adc
lret
shll
or
cmp
loopne
and
sub
mov
mov
jmp
imul
imul
sarb
icebp
push
cmp
mov
adc
dec
mov
cs
jmp
stos
lods
xchg
push
mov
fs
subl
popa
insl
add
je
lcall
movsl
loopne
add
lret
fsubs
jns
aaa
sub
xchg
dec
imul
nop
sbb
pop
ja
inc
add
xchg
movsb
and
pusha
sbb
lahf
push
mov
ret
cmp
dec
xchg
adc
jne
jnp
test
jmp
mov
cmp
jb
xchg
fstpt
leave
inc
xchg
dec
popf
aaa
and
out
mov
cmp
jp
add
fdivrl
cltd
and
int3
mov
sbb
add
inc
pop
mov
mov
in
repz
fldcw
pop
xorl
in
pop
cld
fldcw
out
fwait
arpl
div
ret
imul
outsl
add
xchg
movsl
xchg
stc
cli
cld
push
mov
das
fmull
pop
mov
jge
mov
sbb
test
std
sbb
aam
jb
pushf
mov
push
test
adc
xlat
cmp
or
mov
xchg
add
sub
cmp
mov
pushf
rcl
pop
or
jb
adc
add
ds
cwtl
mov
scas
mov
outsb
addr16
jo
sub
mov
lods
les
jbe
mov
in
adc
imul
or
inc
dec
hlt
ss
inc
out
daa
loopne
jmp
adc
testl
push
dec
mov
outsb
in
mov
mov
test
ret
cmpsb
aaa
out
ret
xchg
lock
or
add
xchg
inc
movsl
in
int3
inc
fists
mov
into
imul
mov
mov
test
std
sbb
and
idiv
enter
jp
cmp
jb
lahf
mov
and
sub
movsl
iret
adc
test
sbbl
ret
mov
call
out
js
xchg
fisubrl
mov
aad
push
fucomip
inc
jg
repz
add
jae
jae
and
push
popf
adc
jae
test
mov
ds
or
add
fs
je
lret
adc
decb
mov
jl
xchg
adc
js
daa
dec
adc
lret
dec
inc
mov
add
shll
xchg
jle
cmp
mov
push
cmc
push
movsb
xchg
jp
pop
mov
xchg
mov
add
imulb
add
sbb
sbb
and
test
bound
outsb
xchg
rcr
dec
cmp
notl
mov
dec
jo
adc
pop
adc
cltd
inc
push
xorl
xor
xchg
cmp
inc
mov
movsb
sub
fwait
jns
mov
xchg
add
inc
loope
add
ficompl
sahf
sub
nop
sbb
fmull
xor
hlt
sbb
inc
pop
test
mov
adcb
fadds
popf
out
add
pop
xor
imul
xchg
pop
xchg
inc
jecxz
sub
popf
or
aad
or
cmpsb
push
cmp
xchg
add
and
adc
add
cmp
out
imul
xchg
add
imul
lahf
inc
rcrl
or
adc
xchg
jnp
fsubrl
mov
lret
movsl
xor
je
add
cmp
sbb
mov
sbbb
mov
stos
mov
mov
loop
xchg
loop
cmp
adc
jmp
pusha
lock
mov
jno
ret
and
jno
xchg
jecxz
insb
jnp
outsl
pop
fdivs
adc
push
mov
pop
push
dec
mov
push
jae
jmp
push
add
bound
call
call
adc
push
mov
and
mov
rcrb
subl
add
movsb
pop
sbb
and
sbb
scas
fiaddl
or
fwait
jne
enter
sbb
cmc
addr16
fdivrl
cmp
add
cmpsb
lods
div
sub
stos
dec
int3
into
ret
test
add
or
sbb
cmpsl
div
mov
pop
push
icebp
ja
mov
cwtl
jmp
pushf
jo
push
push
data16
jmp
out
test
or
test
push
rcr
jp
outsb
xlat
mov
xchg
add
mov
dec
test
pop
fsubrp
xchg
push
push
cwtl
sub
aaa
ret
and
outsb
pop
adc
in
mov
mov
aas
lret
inc
adc
test
add
mov
into
cmp
ja
dec
stos
inc
outsl
out
std
cmp
pop
sbb
pop
cmpsl
dec
out
test
pop
movsl
pop
mov
sub
inc
gs
mov
repnz
and
push
dec
add
jl
mov
les
xchg
jle
mov
lods
lods
xor
mov
lods
outsb
cmp
cmp
popa
lea
outsl
je
leave
and
in
lds
shll
mov
int3
test
loope
int3
xchg
lods
add
and
out
cs
sub
rorl
popa
fistl
mov
cmc
insl
movsl
jb
push
add
xor
push
cmp
xchg
lret
repz
mov
ficompl
out
push
fistl
loopne
jmp
pop
les
add
hlt
push
loop
fcoml
roll
addb
jg
mov
mov
cmp
and
cli
stos
push
stc
ja
mov
pusha
outsl
test
iret
scas
negl
sbb
mov
rorl
data16
mov
mov
dec
ds
dec
cli
sbb
inc
adc
or
pop
fldenv
or
mov
push
push
dec
mov
jl
jmp
fstpt
xor
cli
iret
out
cmpl
nop
je,pn
pushf
data16
pop
sub
dec
or
les
sbb
jns
mov
push
repz
arpl
fwait
gs
movl
add
add
test
ljmp
inc
rcrl
out
mov
stos
sub
push
push
pusha
iret
lahf
adc
das
or
mov
xlat
push
scas
sahf
push
iret
xor
stc
lahf
adc
and
mov
jne
dec
mov
sbb
addr16
sub
or
mov
dec
lret
scas
xchg
sbb
hlt
xchg
daa
push
dec
inc
loop
pop
daa
je
push
lret
cmpsl
in
stos
cmpsb
cmp
loopne
icebp
sti
dec
cli
mov
mov
hlt
push
push
mov
int
testb
adc
push
out
and
lds
loopne
arpl
jge
xchg
mov
mov
inc
cli
loop
scas
xor
repz
mov
inc
push
fdivs
mov
lret
sub
inc
lret
divl
pop
in
mov
fwait
insb
ss
daa
subl
inc
mov
ja
rcrb
jl
mov
cmp
add
mov
add
das
ficoml
stos
cmp
jg
aaa
pusha
cltd
jbe
push
pop
push
push
mov
cld
mov
jnp
cld
movsl
pusha
jge
daa
cltd
ja
jmp
xor
dec
rol
mov
out
popf
add
and
stos
mov
sarb
jne
dec
dec
adc
pop
dec
jns
xchg
mov
xchg
fisttpll
fiadds
lahf
inc
lret
push
cmp
test
cmp
roll
xchg
pop
int3
in
adc
cmc
cwtl
sti
ljmp
lods
push
or
loopne
jp
lds
or
ja
fcmovu
lret
lret
xchg
mov
in
aad
mov
sahf
mov
inc
fisubl
jmp
mov
and
dec
faddl
xor
push
mov
pop
cmp
pop
ret
mov
sub
pop
sbb
out
push
lea
mov
ret
lock
cli
cs
xlat
mov
jmp
pop
lret
inc
jae
xor
shlb
push
mov
movsl
push
adc
cs
push
mov
push
addr16
mov
pop
sbb
aad
xor
movsl
outsb
cld
sub
test
xchg
test
cmpsl
push
add
vmovq
adc
shr
leave
mov
sbb
out
xchg
aam
add
pop
mov
add
mov
enter
sub
push
sbb
fnstsw
js
add
lods
jns
rcrb
leave
cmp
addr16
xor
cmp
js
stc
leave
lret
inc
repz
add
ret
enter
shl
xor
out
inc
or
push
aaa
inc
sub
popa
cmp
sub
cli
mov
shll
cmp
sbb
std
mov
pop
insl
dec
cltd
fwait
insb
out
jle
sub
nop
enter
xor
shrl
xchg
js
add
push
mov
gs
mov
mov
lea
ficoms
jg
psubq
push
mov
push
push
and
adc
mov
lret
and
mov
mov
fmull
lret
mov
arpl
jg
sub
push
outsb
or
scas
fildll
and
push
mov
nop
lods
inc
ds
scas
sub
push
and
dec
inc
dec
adc
mov
icebp
stc
and
add
das
aam
rorl
push
add
dec
fildl
and
hlt
in
mov
xor
jg
cmp
cs
mov
and
xor
jbe
mulb
pop
mov
ret
insb
clc
pop
inc
fxch
popf
push
pop
test
test
les
loop
popa
lcall
test
push
pop
pop
push
jle
fs
sbb
in
notl
clc
inc
and
out
rclb
jno
mov
jae
ljmp
inc
adc
mov
movsl
pushf
pop
push
or
pop
popa
sbb
data16
outsb
fmull
or
jl
mov
mov
xchg
lret
test
enter
lock
xchg
test
dec
sbb
adc
add
add
enter
dec
push
xor
negb
lock
stc
dec
in
inc
lret
mov
lcall
int
mov
add
sub
pop
inc
pop
lea
push
jl
inc
dec
push
nopl
pushf
cli
jno
inc
les
inc
pop
lret
xchg
arpl
loop
adc
movsl
jmp
mov
in
repnz
in
pusha
xchg
addr16
mov
jecxz
aas
mov
jge
xchg
sub
adc
inc
jg
jmp
shrl
xchg
insb
mov
fucompp
js
and
mov
scas
int3
leave
jecxz
mov
sub
sub
pop
adc
aam
mov
or
jne
push
mov
jb
cmp
and
mov
jg
sarl
mov
mov
shrb
test
pop
out
js
fs
enter
addb
and
push
dec
mov
pusha
cmpsl
outsb
aas
dec
add
pop
stos
rcl
mov
fwait
lods
mov
repnz
insb
mov
icebp
je
pusha
dec
out
arpl
sti
xchg
fmul
bound
div
cmpsb
xchg
or
xchg
add
mov
sub
ret
mov
mov
pushf
xchg
rclb
rclb
or
xchg
andl
xor
inc
in
push
mov
sar
ss
xchg
aaa
in
pop
and
out
or
aad
rcll
mov
outsl
xchg
int
fnstsw
xchg
xor
inc
pushf
or
mov
adc
pop
mov
loop
mov
fdecstp
out
xchg
cld
icebp
mov
mov
ljmp
mov
out
cmp
inc
dec
es
lret
sub
arpl
cmp
insb
data16
mov
lret
inc
int3
add
xor
inc
jns
add
shlb
insl
lods
jno
dec
stos
cmc
sub
mov
call
dec
dec
ret
cmp
lds
ret
mov
sbb
xor
sarl
sarb
and
mov
icebp
mov
call
mov
push
mov
mov
aaa
mov
repz
fisubs
loopne
cmp
sahf
sahf
sub
mov
daa
je
jmp
ljmp
and
test
sbb
pop
js
loop
loop
test
xor
mov
repz
cmpsb
rcrb
ror
mov
inc
outsl
fists
dec
xchg
popa
mov
dec
punpckldq
sub
outsl
pop
and
mov
push
adc
mov
loopne
mov
shufps
jecxz
or
pusha
pop
add
fcompl
leave
testl
jno
or
cmp
rorb
jp
loope
aam
test
enter
jmp
dec
adc
inc
jge
pop
imul
sub
je
test
adc
pop
rcl
and
shlb
loop
sub
push
dec
repz
aaa
push
jb
shl
cmp
mov
fidivs
in
cld
scas
test
pop
xchg
es
jle
push
xor
int
pusha
out
inc
mov
out
xchg
jo
mov
mov
dec
jmp
and
and
sbb
adcl
ficomps
cmp
mov
test
fwait
add
fwait
add
enter
sub
fsubrs
add
pushf
xor
adc
mov
xchg
out
stos
push
inc
sbb
xchg
mov
cs
pop
rcll
mov
fistl
adc
mov
fnsave
mov
imul
inc
iret
adc
outsl
test
lret
pop
idivl
aam
and
adc
out
add
add
cwtl
mov
insl
call
mov
sbbl
int
jne
jno
jecxz
icebp
rcll
push
mov
push
adc
call
jo
pop
mov
push
and
stc
pop
ss
scas
sbb
sub
inc
loope
jns
adc
out
into
mov
pop
mov
scas
shr
inc
fistpll
rorb
rcrb
lahf
mov
xor
cmovb
ret
sub
xor
rorb
out
jecxz
sbb
clc
stc
xor
xchg
fbld
adc
mov
jb
dec
repnz
inc
icebp
jbe
push
sbb
ljmp
js
xchg
inc
sahf
lock
insl
cmpsb
mov
inc
push
bound
arpl
and
enter
int3
fildll
fisubl
insl
xchg
popa
mov
sarl
inc
dec
pop
cwtl
sub
lret
out
fildl
mov
push
in
into
fs
push
loope
loopne
add
popa
dec
mov
outsl
mov
fwait
and
inc
test
scas
and
mov
inc
push
in
ja
and
outsb
mov
push
xor
insb
sub
xchg
movl
and
cmp
xlat
pop
inc
loopne
xlat
mov
into
mov
mov
arpl
ja
pop
or
movnti
jl
push
movsl
xchg
outsl
stos
in
idivl
repz
jp
fisttpll
mov
insb
push
nop
and
js
push
adc
mov
inc
out
adc
bound
out
jbe
aam
push
adc
sub
clc
repz
mov
pop
rcl
mov
mov
push
aam
or
int
gs
sbb
mov
pop
xor
mov
sbb
insl
stos
pop
lods
inc
clc
outsb
sbb
push
xchg
cmc
jecxz
das
cmp
std
jge
ja
adc
pop
call
xchg
aad
dec
popf
stos
xchg
fld
push
repz
lahf
jnp
cltd
mov
jmp
push
call
leave
dec
outsb
xchg
cmp
mov
nop
inc
mov
sbb
inc
pop
int
aam
mov
cmpsl
adc
push
test
and
inc
call
icebp
rcl
fidivrs
or
pop
popa
push
sub
sbbb
mov
push
enter
daa
call
test
rcll
ret
aaa
aam
scas
mov
outsl
push
sub
cmpsl
and
vpcmpgtd
and
dec
xchg
mov
in
lret
repnz
mov
pop
aam
aas
jp
test
fs
ret
mov
adc
stos
add
or
stc
or
mov
mov
adc
scas
mov
pop
rcrb
lret
xlat
mov
dec
jecxz,pt
add
mov
sub
idiv
dec
adc
jle
popf
sti
mov
push
clc
in
jl
pop
aam
xor
mov
sub
test
xchg
popa
jb
xlat
xchg
sbb
mov
and
fs
dec
jo
ret
inc
fldcw
sub
iret
mov
sbb
scas
sbb
imul
fs
gs
nop
rolb
push
mov
add
iret
or
insl
or
jge
popa
inc
cmpsl
inc
mov
dec
mov
add
push
nop
sbb
push
mov
push
xor
mov
nop
xchg
sbbl
fbld
aam
push
add
fs
jb
ret
fs
movb
push
or
negl
rcl
in
imul
clc
pop
dec
xchg
stos
xor
gs
nop
arpl
push
lret
rolb
mov
jo
shlb
mov
mov
push
lret
outsl
or
jbe
adc
test
xor
xor
loop
out
push
and
stc
lea
es
sub
xlat
fnstenv
push
dec
inc
mov
inc
cli
out
loope
add
sbb
std
pushf
jmp
in
mov
dec
adcl
pop
fidivl
je
aas
jp
dec
sub
lret
test
xorb
lret
ss
sub
mov
jae
cld
mov
bound
cmpsl
pop
sbb
cmc
test
pop
sbb
or
sub
lahf
cmp
shl
ret
add
arpl
xor
jle
outsb
pop
lds
inc
push
scas
and
jbe
test
mov
std
mov
cwtl
loopne
in
ds
scas
jns
out
push
inc
jge
repnz
mov
adc
and
jmp
sbbb
xor
jmp
mov
add
out
dec
mov
mov
mov
dec
loopne
or
fs
pop
lcall
loop
or
idiv
sub
xchg
inc
jno
push
mov
aas
sbb
jle
jmp
rcr
inc
and
adc
xchg
andb
xchg
add
mov
scas
popa
mov
dec
and
adc
mov
jns
mov
add
mov
movsb
in
es
ret
ljmp
add
xchg
add
outsb
mov
pop
push
mov
dec
push
add
out
dec
imul
or
xlat
push
sub
std
cld
out
cmp
int3
xchg
hlt
outsl
clc
cmp
arpl
mov
mov
js
or
push
or
popf
inc
mov
xor
dec
aad
or
clc
push
insb
std
jae
add
mov
add
rcrl
and
nop
pop
pop
stos
xor
scas
push
jmp
push
and
xchg
push
jp
int
mov
jne
mov
jns
xchg
dec
in
mov
xlat
icebp
mov
pop
inc
inc
hlt
add
xor
sub
es
pop
popl
stos
mov
popa
sti
popa
xor
insl
aas
dec
lea
stos
pop
mov
or
push
ret
dec
and
push
dec
lds
add
clc
mov
aas
mov
test
addr16
lea
add
xor
fnsave
mov
insl
cs
lret
sbb
cmpsb
js
add
mov
sub
scas
sub
data16
xchg
mov
dec
fstpl
and
mov
mov
jg
jb
sbb
pop
or
push
stos
jns
xchg
test
pop
jnp
cmp
scas
inc
xchg
add
stos
mov
dec
push
push
jl
or
jl
fstpt
lcall
push
mov
xor
xor
xchg
pop
in
ret
mov
pop
and
fwait
loopne
sbb
add
mov
call
fstpl
mov
outsb
nop
dec
add
je
movsb
fisttpl
stc
into
clc
movsl
rcll
add
fisttpl
gs
fs
jmp
and
into
scas
dec
fildl
inc
cmp
ds
mov
jbe
fadd
jae
mov
fidivs
int3
sbb
les
jge
jno
push
addb
aas
xchg
cmpsb
push
sbb
sub
or
jns
aad
out
lret
popa
pop
xchg
pop
jno
xchg
loope
dec
ret
int3
pop
test
inc
push
xor
and
sarl
iret
jae
jp
jp
stc
dec
xchg
shl
dec
xchg
mov
es
push
icebp
cmpsl
mov
pushw
hlt
or
pop
jnp
addr16
fistpll
in
in
jmp
and
rclb
loop
fimuls
sbb
mov
sbb
pop
stos
insl
lret
or
cmp
pushl
enter
stos
out
fdivl
push
fld
or
test
xchg
and
out
loopne
xchg
inc
rcll
inc
aaa
adc
out
repz
stc
inc
sahf
sarb
dec
fwait
push
shrb
mov
inc
push
push
mov
cmp
lock
pop
ss
jecxz
shlb
jge
pusha
push
sbb
aad
ss
adc
out
add
les
lods
mov
add
cwtl
inc
sbb
sub
sbb
addl
mov
adc
or
mov
lock
lahf
lea
mov
sarl
push
add
cmp
sub
loope
out
dec
or
jmp
daa
dec
out
push
div
add
mov
das
sbb
loope
or
xchg
mov
xor
insl
test
push
jns
xor
xor
adc
in
inc
adc
mov
movsb
ss
inc
in
jmp
inc
pop
push
and
xchg
dec
add
fldl
js
movsl
cmpsl
xchg
ds
cs
mov
push
das
lcall
sub
cmp
mov
or
pusha
xor
or
jmp
pop
xor
aam
jmp
push
imul
in
add
inc
lods
stos
insb
adc
fsubl
cmp
pop
test
add
aaa
test
adc
fs
dec
pop
mov
jge
or
les
out
cmpsl
mov
daa
mov
jle
jg
xlat
sbb
aam
cltd
cmp
pop
mov
xor
lahf
outsb
pushf
mov
icebp
inc
mov
push
xor
stc
mov
ficoml
dec
push
sti
fisubrs
cmpsl
add
pop
imul
andb
xchg
jle
shlw
push
divb
xchg
gs
and
mov
pop
adc
dec
and
ljmp
mov
xor
jo
movsl
or
lods
lcall
jno
sbb
inc
mov
in
add
ficoml
movsb
icebp
push
popa
les
jle
rcrl
pop
cld
out
jp
lahf
mov
dec
mov
push
and
lea
ret
push
in
and
iret
stc
aaa
jno
sub
xorb
dec
dec
adc
sub
fmuls
push
xchg
out
pop
add
and
stos
call
cmp
std
or
and
ja
inc
call
dec
mov
mov
flds
add
push
jp
xor
sub
add
sub
dec
push
adc
mov
movq
push
hlt
lds
imul
lock
shrl
xor
jne
mov
dec
or
clc
pop
shll
icebp
pop
loope
or
sub
popf
sbb
and
or
sahf
incl
stos
icebp
icebp
adc
mov
xchg
add
lahf
and
test
das
mov
loopne
dec
xorb
pusha
mov
into
mov
cmpsl
cs
pop
iret
divb
fwait
sbb
sub
xor
mov
adc
xor
orb
mov
out
sub
xchg
sbbl
pusha
inc
xchg
inc
jmp
leave
outsb
push
popf
add
adc
and
shrb
push
xchg
test
stos
clc
sub
pushf
out
shlb
push
enter
les
lret
sbbl
or
loopne
push
int3
insb
pusha
push
adc
test
cmp
jmp
clc
scas
add
fdivs
xchg
adc
cmp
jg
push
dec
pop
and
mov
clc
mov
dec
jnp
dec
xor
jge
js
sbbl
rcrb
cmp
sbb
in
ja
gs
stos
adc
into
mov
addl
iret
push
mov
jp
pop
ljmp
fcoms
push
js
mov
das
movsl
mov
gs
cltd
scas
add
test
push
pop
and
inc
jg
mov
push
imul
add
xchg
and
adc
jo
or
iret
jle
repnz
movsb
sub
xor
test
sub
mov
pop
cmpsb
jecxz
rorl
mov
inc
stos
sbb
cld
outsb
fimull
and
jl
mull
xor
popa
xor
test
daa
icebp
inc
lcall
lds
clc
xorb
pop
addl
test
addr16
outsb
mov
xchg
cltd
sbb
and
dec
loopne
out
inc
xor
and
xor
imulb
mov
pushf
arpl
and
sahf
mov
or
sarl
cmp
stos
lock
negl
lods
scas
mov
in
sarb
and
daa
call
adc
mov
out
call
lock
aas
dec
js
lret
out
mov
jecxz
mov
adc
dec
cmp
dec
nop
stc
cmp
jp
mov
fistl
inc
jb
loope
sub
push
stos
enter
clc
ja,pn
and
push
dec
arpl
mov
push
sti
xchg
cwtl
sub
in
xchg
sbb
iret
in
push
decl
jmp
movlps
push
mov
fdivl
cmp
push
cmp
sub
insb
pop
rol
xor
ja
cs
jp
iret
push
or
outsl
daa
push
aam
loopne
clc
jb
cmp
movsb
mov
es
inc
add
nop
or
fistpl
jb
dec
call
pop
jg
mov
fcmovu
jmp
dec
mov
call
add
xchg
js
or
into
imul
mov
push
mov
mov
adc
stos
mov
mov
fsubs
out
test
pop
je
ret
mov
bnd
por
dec
fcmovnu
pop
jae
add
test
stos
popf
adc
sub
push
stc
movsb
xchg
sub
mov
dec
cmovb
aam
shll
out
pop
jecxz
pop
mov
jmp
jo,pt
jl
dec
lahf
or
push
lret
std
jno
gs
in
int3
mov
movsl
push
stc
xor
test
lret
add
sti
pop
jmp
je
jle
mov
lods
or
push
lahf
inc
scas
lods
fmull
cmp
insb
bound
neg
test
inc
inc
in
cwtl
jbe
out
lret
lahf
mov
adc
cmpb
cmp
and
shrl
jb
in
dec
inc
jmp
fwait
lock
sub
fisubs
push
mov
add
in
pusha
andl
jmp
push
cltd
andb
mov
addr16
xor
repz
mov
adc
clc
fs
mov
pop
decb
movswl
mov
ret
sub
mov
and
sbb
and
cmc
or
or
repz
inc
pop
lahf
sub
jbe
sbb
mov
inc
xor
push
sbb
dec
and
xor
adc
js
cmpsb
fnstcw
mov
mov
hlt
repnz
pushl
pop
ljmp
stos
insb
je
les
jg
or
inc
xor
push
inc
addb
push
xchg
clc
mov
adc
inc
fwait
ret
sti
and
imull
test
pusha
dec
mov
dec
addl
test
or
and
test
and
daa
sub
sub
sarl
mov
mov
mov
mov
loope
sub
test
bound
js
pop
ror
loop
xchg
fwait
sub
out
mov
in
repz
cmp
aaa
mov
sub
inc
and
hlt
lods
or
ror
push
push
js
mov
test
call
sarl
adc
leave
cwtl
mov
aad
fs
adc
rclb
or
add
pop
pop
and
sbb
xchg
push
enter
aaa
aas
dec
out
cmp
andl
cli
push
mov
repnz
push
mov
xor
ds
pop
cli
rcr
shll
jmp
int3
pusha
fwait
mov
int3
je
cmp
mov
pop
xor
adc
adc
lret
inc
pop
adc
test
mov
dec
sti
test
mov
mov
xchg
jbe
out
lods
xchg
std
repz
mov
enter
cmp
pop
mov
gs
sbb
fs
sbb
add
les
sub
mov
jle
js
in
sti
in
vaddsd
push
addr16
aam
mulb
push
xorb
dec
sub
or
and
xchg
xchg
aaa
jae
xor
mov
stos
ret
jmp
mov
mov
in
fildl
cmpsl
dec
int3
xchg
xchg
bnd
ret
aas
or
lods
or
clc
mov
lahf
aam
sarl
jno
fmuls
xchg
or
movsb
dec
in
test
call
sub
mov
in
pop
push
and
jbe
xchg
lock
fdivl
mov
cmp
fucomip
int3
repz
arpl
fdivs
dec
mov
or
pushf
popa
pop
cmp
inc
dec
ds
in
and
cmp
dec
fldl2e
jecxz
decl
sub
pusha
adc
popa
bound
decl
sbb
loope
in
jne
jbe
mov
dec
mov
lcall
adc
test
repnz
ret
ds
dec
jg
pushf
popa
jbe
aad
adc
xor
fimull
pop
outsl
jl
cmp
fst
test
rcll
xor
jp
stc
loopne
and
repz
mov
push
repnz
pop
dec
inc
je
pop
pop
or
call
cmp
ds
and
mov
pop
mov
pop
cmp
mov
outsl
inc
data16
gs
popf
lods
and
sub
adcl
cmp
sub
sub
push
sub
inc
jecxz
cmp
js
mov
mov
into
inc
xchg
fistpll
xchg
pop
rolb
mov
mov
adc
in
and
mov
cmc
std
inc
cmp
mov
jmp
out
and
rcrb
adcb
lods
arpl
pop
sbb
popa
ret
sbb
mov
jo
stos
inc
lods
jl
mov
leave
shrl
movb
inc
ret
ficomps
adc
sbb
or
dec
pusha
inc
inc
pop
sbb
adc
jmp
add
aaa
std
loop
imul
inc
arpl
js
mov
fbstp
dec
movsl
lock
sahf
push
data16
push
ret
sub
xchg
rcll
imul
cmc
add
lods
outsb
in
xor
pop
push
movl
jle
cmp
sub
xor
in
pushf
mov
mov
mov
xchg
mov
pop
adc
cwtl
jae
addr16
pushf
mulb
das
pop
dec
mov
jne
dec
in
push
dec
jae
sub
inc
push
add
sbb
sbb
out
nop
pushl
adc
daa
ja
pop
lcall
in
sbb
loop
loope
pop
arpl
add
je
loopne
sub
pop
lcall
gs
dec
mov
push
cltd
mov
adc
arpl
repz
fisttps
or
xor
ja
sti
push
rcll
sub
pop
addl
push
or
or
out
push
ss
dec
addl
mov
rclb
stc
adc
dec
mov
enter
sub
mov
pop
mov
ss
cmp
add
pusha
add
lret
xchg
push
push
movsl
cmpl
xor
lcall
pop
fdivp
clc
xchg
add
push
arpl
rcl
mov
test
fldenv
lock
imul
push
insl
mov
out
cmp
pop
sub
cmpsb
push
mov
adc
jno
sbb
ds
mov
dec
push
dec
test
xchg
sbb
sub
in
sbb
push
xchg
sub
push
cmp
mov
xor
jg
arpl
mov
push
je
fiadds
out
fs
adc
fucomp
shl
jns
xor
sarb
adc
rcrl
add
add
adc
rol
ret
sub
cmp
adc
pop
push
push
shl
icebp
sub
push
jbe
xchg
or
xchg
mov
icebp
dec
jge
fcmovnb
loope
dec
sub
xor
fdivr
mov
xor
pop
xchg
fnstcw
icebp
inc
lea
sub
dec
adcl
jmp
imul
mov
dec
das
lea
dec
in
mov
js
shrb
push
iret
and
pop
scas
stos
dec
test
adc
mov
and
pop
aaa
lahf
clc
popf
sbb
dec
hlt
aad
push
inc
stc
mov
sub
in
push
rorb
mull
mov
push
imul
jle
adc
mov
int
addr16
sub
dec
inc
mov
xchg
dec
sub
arpl
ficompl
rolb
popl
iret
fadds
mov
push
xor
and
clc
jmp
insl
push
scas
sarb
clc
fisttpll
out
pop
push
hlt
add
cmp
dec
jb
mov
rcl
push
aaa
sarb
shrl
sub
ss
mov
stos
andb
lods
fdivp
add
push
imul
je
inc
mov
int3
push
nop
shlb
adc
aad
in
inc
int3
xor
js
test
lea
movsb
sbb
fwait
bnd
cmpsl
dec
inc
test
fsubl
sub
int3
lods
cmc
test
ja
xchg
out
clc
fistps
mov
rep
arpl
movb
mul
sti
aaa
rcll
repnz
scas
push
adc
sbb
jo
or
mov
sbb
xchg
push
cli
nopl
movsb
fidivrl
aas
test
push
cli
fnstsw
mov
cli
jp
ffreep
sub
dec
cli
sbb
add
mov
fists
fisttps
push
std
pop
sub
push
cwtl
mov
out
sti
sbb
and
pop
xchg
xchg
and
push
sub
jb
mov
aas
es
dec
sbb
lock
repz
scas
lds
jmp
xchg
movsb
xchg
and
int3
daa
jbe
sbb
in
push
jl
insb
xor
fists
pusha
sbb
mov
lahf
jno
test
adc
call
pop
out
pop
fstpl
jp
fdivs
orb
mov
daa
loopne
push
xchg
popf
mov
pop
or
gs
std
mov
xchg
movsb
dec
out
xchg
movsl
sub
push
sub
hlt
or
dec
fsubs
call
sbb
jbe
in
aad
in
sarb
jns
pop
addr16
pop
xor
les
ljmp
xor
dec
xchg
xor
or
add
jge
sub
incl
mov
out
xchg
sbb
ret
and
out
xchg
clc
pusha
rclb
add
xor
mov
inc
mov
int
sbb
inc
in
lods
mov
xchg
js
push
xor
xchg
int
fnstcw
ds
mov
popf
daa
sub
jb
sbb
cmpsb
mov
sub
subb
sbb
rcr
or
lea
std
sahf
inc
and
in
mov
mov
or
lods
stos
rcrl
xchg
inc
jmp
mov
pop
lods
fsubs
pusha
pop
add
fs
and
or
xor
mov
pop
mov
jae
loope
cmc
mov
aas
jg
fisttpl
inc
les
cmp
lret
or
int
in
ljmp
js
shr
add
mov
adc
cmp
push
test
ljmp
outsb
orl
xchg
popf
sub
fildll
out
push
mov
in
clc
sub
inc
adc
jno
push
adcl
out
push
in
movsb
mov
jl
inc
pushf
pop
jbe
pop
inc
fldt
xor
std
push
sbb
outsl
jp
vmwrite
mov
aad
or
xor
cmp
shll
mov
decb
push
ljmp
cld
lcall
psubw
pop
xor
inc
inc
loopne
xor
cmpsb
xor
dec
mov
jo
and
scas
hlt
xchg
in
and
sbbl
enter
sbb
pop
push
mov
shl
push
add
lret
dec
sub
outsb
pop
repnz
dec
lods
ljmp
mov
fs
icebp
inc
jle
xchg
mov
xchg
loop
add
xchg
and
mov
xchg
sbb
out
cs
ja
jnp
push
sub
push
test
sub
mov
js
add
push
aam
shll
popf
int3
test
sub
ret
add
jp
popf
and
outsb
xor
xlat
push
hlt
xchg
and
mov
jg
cmpsl
insl
push
test
pop
in
pusha
mov
jle
mov
push
aaa
jl
pop
jbe
aad
jmp
stc
aas
mov
jne
dec
cld
lret
adcb
sbb
xchg
xor
imul
jecxz
cmc
xor
call
inc
and
fisubrl
icebp
mov
testl
sbb
sbb
sbb
aam
roll
xor
loop
mov
push
mov
adc
mov
in
incl
fcoms
aaa
ret
in
popa
lock
push
sub
sub
cld
enter
popf
addb
mov
jle
inc
cmp
pop
push
movsl
jnp
mov
popa
fisubrs
aas
into
les
jbe
call
adc
lds
test
cmp
aad
in
mov
inc
stc
les
push
adcb
rcrl
adc
int
jnp
test
mov
mov
ljmp
jns
shll
sbb
scas
xchg
call
xchg
addr16
mov
inc
iret
dec
push
lea
jbe
sti
mov
int
adc
jl
xor
push
sbb
mov
sarb
push
ret
xchg
pop
sub
or
in
decb
jnp
mov
mov
mov
pop
adc
test
push
out
or
xor
jae
jl
mov
aas
testb
add
push
ds
jns
and
lds
out
shrb
iret
sahf
out
aas
push
sub
scas
adc
es
gs
pop
jle
pop
lods
mov
inc
mov
test
testl
imul
int3
xor
mov
jnp
xlat
jecxz
fdivrs
shll
je
add
inc
or
mov
rol
xor
addr16
mov
mov
inc
cld
mov
dec
lods
cwtl
inc
inc
iret
cmpsb
je
pusha
orl
xchg
adc
repz
loope
bound
test
dec
sub
push
cmpsl
ds
or
sbb
in
push
cltd
popf
xor
aaa
aam
sub
aam
cmpsl
xchg
or
push
ljmp
repnz
sbb
mov
insb
cmp
rcpps
push
lods
dec
cmp
add
pop
cld
in
popa
add
loop
jmp
xchg
xchg
pop
out
adc
inc
xor
push
lcall
mov
inc
mov
in
in
rorb
jmp
cmc
sbb
cmp
repnz
std
adc
push
mov
adc
lcall
nop
lea
jnp
xchg
dec
or
or
movsl
push
roll
dec
lods
cmp
jnp
or
cmpsb
addl
mov
popa
insb
xor
je
lcall
loope
jne
sbb
leave
arpl
jg
in
mov
mov
xor
mov
mov
push
stos
pop
incb
aaa
shlb
dec
mov
pop
cld
dec
sub
jns
or
mov
adc
imul
push
mov
movsl
mov
cmp
push
sbbl
std
jnp
cmp
sbb
lahf
test
or
ror
fmulp
jge
pop
mov
cmp
cmc
jns
ret
mov
scas
fcmovnu
jl
push
popa
out
clc
cmp
lock
mov
outsl
inc
add
fwait
xchg
xlat
loop
mov
or
pop
inc
sahf
xor
outsb
aas
jge
adc
cmp
out
pop
pop
test
xchg
or
aaa
das
add
and
outsl
mov
cmp
sub
push
stc
std
es
sub
enter
out
inc
mov
sahf
dec
inc
push
pushf
dec
adc
pop
insb
mov
aaa
leave
mov
xor
je
mov
pusha
subl
lds
test
adc
adc
pushf
pop
rcrb
test
popf
push
xchg
mov
sub
and
mov
out
sub
cltd
push
js
pop
dec
mov
aas
fisubrs
ficoms
mov
test
cwtl
xchg
sbb
pop
in
dec
loop
and
call
idivl
inc
jmp
fcomip
outsl
pop
cmp
mov
mov
leave
cmpsb
shl
push
xchg
stos
or
mov
push
pop
ret
adc
ret
push
pusha
inc
mov
int
fdivrs
or
leave
jae
inc
out
jo
adc
icebp
ret
push
add
mov
and
faddp
push
nop
scas
sub
push
pop
ds
push
das
clc
push
cmp
cmp
pop
fimull
outsb
pop
push
dec
daa
xlat
int
fstl
push
repnz
out
decb
dec
hlt
sbb
push
or
aam
in
shl
push
mov
sbb
imull
outsl
mov
mov
ret
jmp
push
inc
aad
ret
aam
testl
xor
dec
jle
je
and
fsubrl
mov
pop
dec
xor
xchg
loop
mov
inc
stos
and
xor
add
cmp
inc
adc
or
imul
fisubrl
ret
fisubrl
into
iret
setbe
jecxz
inc
inc
out
cltd
mov
into
cli
scas
cmp
push
addr16
in
sbb
sbbb
lods
fnsave
lahf
push
sti
les
mov
jp
mov
out
insb
mov
push
out
jge
inc
or
je
iret
jl
push
jg
fdivrp
out
cwtl
cmp
sbb
mov
out
shrl
inc
sub
mov
push
inc
clc
cmp
out
outsb
sbb
test
jbe
pop
test
mov
out
repz
sbb
ret
mov
scas
inc
jne
push
mov
mov
push
add
xlat
fisubs
daa
roll
and
fucom
xchg
dec
mov
push
xchg
or
mov
les
cmpsl
sub
mov
dec
push
push
fsubrs
je
mov
mov
jl
jnp
push
push
dec
aam
ss
or
mov
sbb
add
cli
mov
jl
xchg
mov
in
xor
mov
ljmp
in
loopne
cld
shrl
add
pop
sub
or
nop
je
xchg
les
das
pop
pusha
fmul
icebp
adc
pop
scas
in
aaa
pop
mov
and
mov
cmp
cmp
ds
ds
ret
jmp
frstor
cmc
out
cmp
insb
aam
jl
dec
xchg
lcall
xchg
andb
daa
gs
jecxz
push
jne
xchg
xchg
or
je
mov
dec
push
insb
jo
xchg
add
cmpsl
mov
xchg
shll
cmpsb
je
out
pop
flds
push
jne
mov
sti
dec
in
data16
cmc
mov
and
or
sarb
xor
fs
fnstsw
mov
in
testl
add
insb
les
adc
sub
pusha
std
pop
mov
cmp
stos
stc
daa
movl
out
or
sbb
outsb
mov
scas
iret
or
into
or
insl
mov
int
lahf
ss
inc
fisttpl
push
sbb
and
sbb
insl
add
sbb
loope
lods
iret
mov
xchg
jno
xor
mov
aam
pop
es
xchg
mov
add
shll
lcall
roll
iret
into
outsl
sbbb
add
js
insl
jp
daa
fwait
mov
sub
inc
adc
gs
in
pop
sub
push
cmp
repz
mov
mov
sbbb
cli
pop
movsb
xchg
cmc
add
fcom
and
mov
xchg
stc
pop
icebp
aas
dec
inc
fdivp
pop
xchg
inc
scas
dec
push
cmpsb
mov
in
push
rol
mov
pusha
stos
sub
loopne
cltd
fists
add
fnstenv
aam
mov
fdivrp
test
push
pop
lock
test
lahf
pop
js
fsubrl
pop
iret
insb
xchg
lcall
mov
lock
test
push
xlat
test
dec
lahf
jne
in
std
clc
or
jmp
cmp
inc
dec
mov
pop
insb
cmp
dec
test
cmpsl
mov
add
and
loop
sub
in
adc
xor
pop
loopne
clc
jae
or
mov
cltd
or
dec
nop
cmp
lcall
sbb
inc
popf
push
sbbl
call
or
pop
mov
aas
push
jae
fwait
or
xor
cltd
cmp
push
and
add
sbb
dec
or
cld
cmp
push
pushf
pop
pop
fsubrl
mov
jge
jne
add
test
fstl
adc
lods
or
push
mov
enter
loopne
mov
inc
loope
cld
inc
inc
gs
cmp
dec
jp
mov
sub
sub
in
jecxz
fmul
test
ror
mov
andb
mov
sahf
xchg
imul
aaa
mov
cld
add
lret
out
mov
or
lahf
xchg
ffree
mov
cmp
sub
adc
xchg
jg
cmpsl
xchg
test
mov
fdivrs
mov
sahf
les
jl
cmp
mov
mov
addl
mov
out
fisubl
out
bound
or
cld
xchg
xlat
dec
or
and
xlat
out
jle
in
inc
into
mov
cltd
mov
mov
sub
nop
mov
mov
mov
lods
mov
repz
push
pushf
pop
xchg
shrl
and
orl
pop
loop
jmp
call
out
xchg
cmpsl
dec
pop
add
addr16
lods
push
scas
repnz
cmp
push
pop
add
repz
jg
add
xor
out
inc
in
scas
dec
jl
sbb
pusha
imull
insb
dec
inc
jno
loop
lahf
add
test
inc
xchg
ficompl
jmp
mov
out
scas
push
jle
test
jo
pop
icebp
inc
push
and
loope
push
sub
iret
fcmovbe
sbbl
mov
jb
insl
dec
je
ret
jp
mov
repz
pop
jns
inc
sub
pop
xor
je
adc
jo
inc
pop
jg
and
mov
jle
sub
xchg
sbb
push
repnz
jle
addr16
lock
lret
insb
insb
and
cmpsb
out
cmpsb
jg
and
filds
clc
ja
popf
push
imul
dec
dec
shll
rorl
je
mul
into
insl
adc
pop
inc
and
pop
cmp
and
cmp
jp
mov
push
cmp
es
in
bound
sub
fistpl
pop
movsl
sbb
movsl
call
pop
and
ss
stos
pop
push
xor
lret
jge
dec
into
push
mov
ss
cld
xor
sbbl
push
jb
pop
aad
loope
add
stc
cmp
lret
aam
cmp
jmp
test
mov
jne
inc
and
insl
cmp
sbb
test
xchg
imul
cmp
ja
mov
cmpsl
subl
and
jmp
cmp
movl
sub
iret
ret
fisubrs
pusha
mov
pop
in
add
aas
cmp
xor
fwait
sahf
test
cmp
vmovsd
fsub
jb
inc
mov
imul
mov
xchg
mov
xor
mov
je
xor
pop
sahf
lcall
cmp
lock
adc
out
je
iret
cmp
inc
xlat
jns
mov
mov
cmp
repnz
fcoms
pop
ja
or
ds
enter
push
jno
test
jecxz
adc
in
xchg
rcrb
pop
and
mov
xor
push
sbb
add
xor
sub
addr16
mov
adc
lods
mov
aas
adc
add
inc
out
fstps
lods
jb
je
std
push
mov
arpl
mov
push
shll
push
mov
cmpl
sbb
stc
mov
mov
mov
or
or
iret
jae
adc
pop
pop
dec
and
in
jne
hlt
cmp
dec
mov
les
test
push
pusha
lret
add
pusha
cltd
mov
out
icebp
aad
adc
mov
sbb
push
and
push
inc
jle
iret
int
pop
pop
dec
ss
gs
gs
popf
lods
adc
and
leave
sub
les
sbb
xchg
mov
repnz
jae
adc
push
cmpsb
repnz
call
std
xor
repz
out
jp
inc
jno
push
ret
adcl
gs
mov
addr16
lea
jecxz
fists
daa
loop
aam
divb
iret
xlat
cmp
and
stos
pop
jns
jl
add
xchg
sub
xchg
jne
adc
mov
cli
inc
fs
pop
cltd
das
fisubl
lcall
jb
outsl
out
movsb
xchg
sbb
js
bound
add
jb
int
mov
xchg
scas
lret
shrl
lahf
mov
pop
dec
add
mov
adc
cltd
nop
sarl
mov
cmpsb
or
mov
hlt
in
mov
or
in
or
mov
dec
out
cmpsb
push
hlt
out
notl
push
fbstp
adc
mov
jae
int
jns
call
clc
loop
popa
fsubrl
inc
stc
fadd
fstpt
sub
clc
xchg
adc
dec
push
cmp
ret
inc
and
sub
mov
hlt
cmp
lock
int3
mov
in
xor
cmpl
cmpsb
fdivr
pop
es
adc
mov
cmc
mov
or
imul
test
jnp
popf
sbb
in
mov
push
popa
hlt
jecxz
jbe
aad
mov
xlat
testl
bound
iret
out
sbb
pop
add
ficomps
adc
aaa
mov
jg
adc
lods
pop
stos
ds
mov
mov
roll
mov
xchg
loope
pop
pop
mov
adc
ds
xor
repnz
and
jmp
inc
push
imul
or
mov
inc
add
mov
sub
mov
cwtl
sbb
cli
repnz
dec
xlat
cmp
shr
insb
jl
rol
cmpsl
aas
or
imul
daa
imul
jno
xchg
andb
cmpsb
pop
xchg
xor
mov
mov
dec
test
add
push
jnp
sbb
repnz
xor
in
mov
movb
pop
pop
lret
movb
hlt
aam
jns
mov
bnd
test
dec
xchg
add
nop
pushf
push
iret
fs
dec
repz
add
cmp
jae
push
add
in
enter
stos
or
jne
cltd
pop
aas
sarb
movsb
mov
ret
mov
add
out
jp
out
stc
push
xchg
xlat
push
jb
pusha
int3
shll
mov
ret
adc
adc
je
fdivr
mov
lea
jge
aaa
into
and
jl
test
pushf
outsl
pop
aaa
mov
loope
push
jge
or
sub
icebp
inc
mov
add
pop
sub
add
cmp
ds
movsl
and
cwtl
jmp
xchg
push
xacquire
cmpsb
jmp
int3
add
rcrl
ret
pop
xchg
nop
clc
push
lods
fsubs
xchg
div
decb
test
arpl
inc
cmpsl
dec
cli
and
ds
sub
popl
aad
jecxz
icebp
inc
cmp
sub
incl
out
mov
pop
or
fldt
sub
push
clc
add
fsts
pop
push
xchg
ljmp
lock
pop
fstl
in
lret
xor
xor
jno
and
pop
xchg
and
sub
mov
imul
xchg
jl
ljmp
movb
addr16
push
inc
rcl
aas
ljmp
in
fiaddl
jno
mov
sahf
mov
mov
shrb
xchg
sub
call
mov
ljmp
ds
and
adc
lcall
ret
loop
lret
popf
sbb
rolb
in
mov
addr16
mov
push
scas
jbe
xchg
les
push
out
sub
dec
lcall
mov
mov
sbb
and
aad
mov
or
add
fadd
mov
ljmp
insb
jle
xor
dec
mov
loop
xchg
cmp
mov
movsl
cmp
popa
pop
push
mov
mov
clc
mov
xor
pusha
mov
pop
cmp
mov
dec
mov
call
adcb
jnp
int
nop
cmp
loope
call
mov
adc
in
outsb
mov
mov
push
scas
pop
int3
repz
cld
sub
and
jecxz
sbbb
ret
push
inc
sbb
divb
cmpsb
repz
dec
sub
inc
pop
jo
adc
xchg
or
out
push
daa
iret
fsubp
insb
lds
decb
cmpsl
arpl
shrb
lret
sbb
mov
pslld
sahf
fists
shr
mov
in
sbb
insl
outsl
push
std
data16
xor
test
ret
push
inc
pusha
jne
jo
in
inc
aas
das
and
fwait
rcll
notl
sbb
adc
inc
stos
out
test
ds
xor
nop
jbe
je
loopne
add
rorb
bound
call
pop
into
lea
imul
aaa
outsl
and
mov
andb
lret
sub
push
or
sti
int
scas
pop
jnp
adc
je
jo
xor
pop
shlb
mov
jmp
sti
mov
stos
jae
orb
push
jmp
or
das
jae
out
and
jbe
nop
mov
xchg
jb
popl
out
rcll
fs
add
ljmp
subb
outsb
pop
sbbb
imul
and
hlt
inc
pop
xor
aaa
mov
orb
inc
mov
push
mov
clc
aad
punpckhwd
push
fstpl
imul
les
fs
mov
cmpsb
push
adc
lahf
mov
out
rep
in
lock
adc
cld
push
pop
nop
imul
mov
adc
jo
sbb
push
dec
cmpsb
bound
scas
pusha
push
inc
inc
fwait
outsb
pop
xchg
movsb
sahf
int3
imul
jb
std
and
push
nop
lret
test
insl
push
sbb
movsl
aad
xchg
sbbl
js
das
cmpsb
data16
cmc
add
or
popf
mov
stos
test
sti
jb
jp
pop
sbb
sbb
xor
pushl
sbb
push
push
or
cmp
cmp
or
or
imul
mov
push
cmp
push
dec
mov
lods
or
pop
cwtl
sub
icebp
clc
adc
and
in
jmp
and
xchg
mov
icebp
push
pusha
faddl
adc
jne
pop
jmp
call
cmpsl
sub
or
adc
hlt
pop
push
or
dec
data16
sbb
sahf
pop
ret
movsb
cmp
mov
adc
or
ja
ljmp
mov
jmp
sbb
daa
enter
jb
fs
mov
cld
xlat
nop
inc
add
insb
sarb
pop
add
inc
sbb
xchg
test
lahf
popf
movsb
iret
xchg
pop
mov
xor
inc
xchg
sub
adc
push
test
jg
popf
xchg
aad
jmp
pop
out
aad
mov
inc
inc
sbb
xchg
loopne
nop
mov
push
test
movsl
push
std
insb
and
mov
xchg
sahf
sbb
mov
jge
mov
jo
jecxz
and
dec
out
lods
or
jle
sbb
push
dec
xor
xchg
mov
dec
fldl
mov
sbb
movlps
jb
inc
and
sbb
lods
add
xor
testb
push
push
pop
or
cwtl
out
add
sbb
popf
mov
fstps
lcall
push
lods
pop
stos
mov
sbb
push
mov
movlps
jo
data16
xor
pusha
sub
dec
fdivrs
pusha
sbb
inc
outsl
std
jl
cmp
hlt
mov
adc
pusha
fwait
xchg
std
pop
sbb
adcl
in
fwait
lea
setge
push
mov
stos
pop
sbb
xchg
add
push
mov
les
lcall
add
jb
mov
push
jg
test
aaa
repnz
jle
mov
imul
mov
xor
mov
push
leave
mov
pusha
test
cmpl
cli
mov
stc
sub
and
push
insb
push
pop
jmp
lret
loopne
andl
mov
mov
lcall
lret
clc
sbb
add
jnp
mov
adc
out
push
mov
inc
and
push
pop
xor
fbld
push
fdivs
adcl
push
sbb
mov
loop
andl
jnp
ds
hlt
add
xchg
repnz
clc
in
mov
mov
pop
mov
cmpsl
mov
mov
pop
cld
rcll
pop
les
inc
jae
shl
mov
sub
sub
cltd
push
and
outsl
mov
or
jns
push
and
mov
mov
movsl
sbb
sbb
dec
dec
ljmp
mov
xor
dec
shrb
ljmp
cmp
mov
xor
dec
hlt
ljmp
jo
xchg
ret
jmp
jae
xchg
cld
mov
mov
hlt
sub
cmp
mov
push
or
outsb
mov
ret
push
xor
lock
push
sub
inc
fcoms
pop
add
jns
lret
jnp
pop
clc
emms
leave
and
fildl
push
sbb
xor
jne
jno
dec
mov
ljmp
popa
stos
jno
pop
repnz
cmp
les
je
out
lock
je
lret
mov
cs
test
adc
mov
ja
out
iret
fsubrp
divb
mov
fs
mov
arpl
int
pop
dec
lret
stos
sub
lock
or
dec
jle
sahf
rorb
mov
mov
xor
rorb
xchg
sbb
push
inc
aam
gs
push
clc
cltd
mov
fcmovbe
jns
push
jmp
push
adc
xchg
lods
xchg
dec
mov
xchg
out
inc
insb
sub
hlt
cmp
xchg
adc
mov
cmpxchg
push
std
adc
adc
lds
fimuls
leave
ret
lret
or
jg
push
mov
lds
push
inc
cltd
pop
mov
cmp
xchg
in
jae
cmp
imul
inc
stos
mov
inc
dec
xor
out
insl
jp
incb
jbe
inc
or
cltd
sub
push
cmpsl
pop
xchg
dec
mov
test
cltd
add
outsb
xor
mov
mov
mov
mov
jnp
and
mov
mov
dec
sbb
or
inc
mov
and
insb
push
jne
push
xlat
pop
xchg
pop
repnz
stc
in
mov
adc
or
mov
sti
inc
jg
rcrb
daa
data16
inc
mov
clc
aam
pusha
xchg
jl
inc
cmpl
mov
and
out
bound
jle
or
lds
dec
ret
adc
jnp
mov
or
pop
add
cld
pop
sbb
and
sub
cmpsl
sti
ror
dec
inc
add
xor
fcmovnb
mov
cmp
sbb
mov
ret
mov
inc
stos
mov
cli
mov
sti
push
pop
lods
push
out
jmp
das
js
addb
sbb
dec
jnp
xchg
stos
push
push
and
xor
shlb
lret
pushw
mov
aam
jmp
xor
inc
adc
pusha
push
sub
mov
sbb
dec
bound
and
sub
lret
add
jns
cmp
mov
mov
test
push
or
mov
loop
pop
or
inc
hlt
mul
fwait
into
rolb
inc
dec
push
mov
inc
pop
pop
fdivrp
lcall
ret
xchg
sub
fcmovne
push
hlt
cmpsl
pop
iret
jle
mov
dec
cmp
into
daa
pushf
mov
xchg
mov
or
or
pop
scas
sbb
push
jbe
movsl
call
jns
in
jne
ja
pop
out
shll
mov
inc
mov
sahf
cmp
ljmp
mov
fcmovu
packuswb
mov
iret
mov
or
hlt
sbb
arpl
xchg
sti
imul
lahf
dec
cmp
adc
ljmp
ja
cmp
jg
inc
push
jnp
or
mov
xor
push
sub
ljmp
mov
and
pusha
mov
movsl
mov
and
xchg
sbb
xor
out
sarl
ret
dec
ret
jmp
mov
mov
jne
and
jmp
lret
push
xchg
stos
aam
add
mov
and
xor
jmp
imul
sub
arpl
or
repnz
stos
leave
or
arpl
sub
push
inc
nop
adc
sub
addr16
mov
out
ss
jl
aad
movsb
and
mov
outsl
cmp
xlat
jne
hlt
and
push
gs
add
sbb
std
pop
adc
or
mov
and
xor
incl
xchg
adc
mov
push
ss
sub
sub
daa
sbb
aaa
loopne
pop
movsl
push
shll
rcrb
es
mov
ljmp
adc
ds
inc
push
jo
mov
ds
pop
popf
or
pushw
sub
cmc
mov
xchg
orl
into
mov
add
pop
cmc
rcr
insb
cmp
lock
jo
mov
and
outsl
rdtsc
sbb
xchg
dec
mov
xor
fscale
dec
inc
add
adc
mov
ds
add
mov
ret
dec
jo
cmp
sbb
sub
dec
xchg
lahf
push
iret
cltd
imul
call
pop
mov
test
jge
add
mov
shr
into
sahf
add
cmp
or
cmp
or
jnp
inc
jno
rcrl
push
mov
lahf
cmpsb
out
jo
test
cmp
push
test
or
mov
xchg
pop
repnz
mulb
sub
or
push
inc
mov
xchg
das
stc
outsb
xor
imul
push
iret
call
inc
lea
xchg
inc
stos
jae
pop
sbb
stos
push
pop
mov
sub
ret
adc
jae
inc
data16
in
mov
enter
lock
pop
and
jmp
cmpl
xorb
leave
and
mov
adc
cmp
mov
adc
addb
and
fwait
ljmp
inc
cmp
sub
aam
adc
pop
leave
imul
cmp
sbb
push
mov
mov
or
pop
inc
cmp
pop
pop
dec
sub
push
movsl
addl
mov
in
jge
and
add
lods
out
addr16
push
or
pop
or
jle
fbld
rcl
jbe
push
cmp
out
xor
sub
dec
mov
fiadds
pop
pop
shrb
add
xor
or
pop
or
dec
mov
mov
sahf
jno
cwtl
lea
xor
ja
cmc
addr16
mov
cmp
and
mov
popa
ja
xchg
pop
js
jnp
leave
repz
sub
andb
mov
adc
pop
sub
inc
testb
push
stos
fstps
repnz
loopne
fstpl
popl
shr
pop
stos
jne
mov
and
out
popa
das
mov
js
xchg
in
dec
and
imul
push
push
in
mov
push
jg
out
xchg
mov
loope
jns
jno
xchg
jmp
xchg
orl
xchg
mov
sbb
jl
pop
or
rcl
push
inc
xor
cmpsl
adc
and
out
mov
pop
daa
call
orl
ljmp
xor
mov
jb
push
jnp
adc
mov
popa
mov
sbb
xorl
xor
jg
sub
sub
std
push
dec
adc
lea
jo
ss
daa
movsb
idiv
push
loope
xchg
sti
rcrb
ret
xor
xchg
xchg
lock
lds
cmp
add
shrl
mov
mov
out
divb
cltd
jns
mov
and
in
and
repnz
inc
enter
pop
add
pushf
shrb
adc
cmc
rclb
cmpsb
repz
or
dec
cmp
sbb
or
xor
es
fwait
imul
int
fwait
outsb
lret
sahf
push
cmpsl
mov
adc
stc
enter
adc
jae
pop
cmp
sbb
adc
pop
popa
pop
and
subb
dec
inc
push
jg
ss
sbb
cmp
and
xchg
arpl
xor
push
pushf
lcall
stos
mov
push
adc
cwtl
stos
negl
faddl
xchg
mov
cmp
mov
lret
jp
mov
dec
or
and
jecxz
jle
mov
jg
jg
daa
cmp
inc
mov
inc
lret
lds
cmpsb
xchg
sbb
ret
out
stos
lret
lods
fidivrs
and
push
ja
loopne
adc
xchg
cmp
pop
into
das
add
xchg
pusha
inc
out
jg
adc
mov
mov
jp
pop
and
add
insl
lea
or
dec
sbb
jno
inc
cmpsb
clc
xor
mov
mov
pop
outsl
hlt
pop
shll
jg
mov
pop
andb
pop
mov
leave
iret
jmp
mov
stos
mov
xchg
dec
mov
cmp
std
pop
jnp
enter
xor
xchg
add
jnp
add
std
cmp
rcll
add
add
pop
pop
jg
aas
outsl
jmp
mov
pop
mov
adc
xlat
pop
push
or
pop
stc
fs
push
loope
mov
stc
lods
outsl
adc
adc
divl
movl
rorb
test
mov
lods
pop
jg
xchg
icebp
sbb
mov
inc
sub
call
in
les
xchg
fwait
cmc
adc
stos
jbe
pushf
cmp
inc
jb
mov
push
sub
jmp
in
adc
xchg
push
repnz
subl
roll
outsb
cmp
stos
pop
shr
and
shufps
xor
subb
enter
add
pop
mov
xor
cmp
xor
dec
out
data16
push
cwtl
cmc
mov
xchg
inc
cs
loope
push
jmp
cmpsb
sbb
xchg
faddl
jmp
pop
andl
cmc
dec
xor
jp
fsubrl
popa
mov
cmp
sub
inc
jno
pop
daa
iret
nop
dec
test
idivl
jae
cli
add
sub
and
les
test
dec
call
push
jl
adc
lret
pop
in
xor
movsb
sti
sub
inc
sub
sbb
add
outsb
bound
xor
leave
cmp
ds
loopne
jne
xchg
insb
popf
pushf
mov
movsb
lods
mov
sub
cmpl
insl
sbb
cmpsl
stc
ret
pop
cmpsb
adc
bound
clc
daa
adc
xor
pop
pop
pop
cs
sahf
sbb
ja
lods
leave
xor
cli
add
dec
inc
mov
push
or
lea
and
rcrl
outsb
inc
popf
pop
pushf
dec
add
shl
sub
jnp
aam
fidivrl
mov
rcrl
aam
popa
aam
cwtl
cmp
jne
test
bound
mov
int
mov
adc
pop
sbb
movswl
ljmp
jle
fldenv
cwtl
add
pop
inc
mov
jns
mov
cmp
or
mov
mov
push
and
inc
sbb
mov
test
push
jg
ss
lahf
cmp
mov
adc
stc
int
fdivrs
jnp
sbb
add
sahf
push
push
iret
lahf
gs
scas
dec
inc
mov
or
push
insb
sbb
push
insl
icebp
push
mov
test
inc
sub
icebp
out
sarl
lret
dec
adc
test
lret
inc
sbb
sbb
cmp
inc
jne
xor
xor
ret
jl
and
mov
jno
incl
add
inc
ljmp
and
sub
push
imul
aad
mov
inc
and
sbb
movsl
int3
adc
mov
adc
fs
outsl
repnz
mov
xchg
xchg
lods
xor
lahf
push
aas
inc
xor
out
mov
outsb
mov
fildl
rorb
cmp
push
aaa
das
jb
pop
je
xlat
in
sub
js
stos
sub
fs
sbb
adc
jle
cwtl
in
testl
int3
mov
or
sarb
es
fmuls
fistpll
or
xchg
sub
popf
iret
push
inc
scas
lret
fsubrs
xor
sbb
push
repnz
cmc
mov
lods
dec
fisubl
sbb
cmp
enter
out
clc
into
imul
ds
mov
arpl
mov
je
xor
sbb
stos
add
stos
mov
push
fistps
outsl
or
mov
and
and
dec
mov
int3
inc
xchg
cmp
push
cmc
dec
dec
or
movsb
mov
xor
jle
cwtl
rclb
clc
push
lcall
inc
or
mov
call
das
addr16
std
mov
sbb
stos
pop
and
mov
insl
mov
xor
lret
fistpll
xchg
loop
cmp
test
pop
cltd
xor
insb
mov
rcrl
mov
pop
sbb
push
sub
mov
in
fisubrl
jns
shll
daa
outsl
punpckhbw
adc
dec
test
jno
bound
xchg
push
xchg
push
insb
xor
jb
data16
test
dec
jae
xchg
bound
or
xor
lea
adc
xchg
orl
fstpt
inc
adc
sbb
mov
adc
repnz
or
dec
sbb
or
fucom
cmpsb
cmp
movsb
les
mov
mov
cwtl
mov
lods
nop
stos
pop
subb
jo
shl
pop
xchg
popa
lds
out
jle
pop
dec
les
sbbb
mov
or
jg
push
ds
mov
push
lret
jae
out
call
cmp
or
sbb
fdivrl
loopne
xchg
xchg
imull
scas
push
mov
ret
lock
aaa
sbb
js
inc
mov
cmp
xchg
add
mov
es
inc
lods
fisttps
test
sbb
popf
sbb
les
fsubrs
repnz
test
pop
bound
pop
fs
push
or
lea
fisttpll
std
and
es
xchg
mov
and
jmp
sbb
jne
inc
push
lea
fnstenv
dec
mov
sbbb
sbbl
xchg
test
cmc
out
push
idiv
inc
loop
xchg
or
in
lret
test
jns
loope
test
testl
iret
cmp
mov
aad
pop
ficomps
mov
jbe
stc
jnp
xor
idiv
adc
insb
cmc
push
sbb
sbb
sbb
or
lret
imul
in
dec
scas
sub
das
and
jp
mov
adc
jp
aaa
mov
lds
add
loop
pop
mov
outsl
into
roll
mov
scas
rcr
es
imul
ds
js
xor
fcmovu
and
mov
sub
daa
pop
sub
orb
and
rorb
xchg
movsl
andps
ds
adc
mov
xchg
mov
adc
xor
add
les
xchg
adc
push
or
fwait
cmp
pop
ljmp
jmp
xor
in
out
push
jp
repnz
jnp
jle
idivb
stc
mov
mov
pop
and
mov
push
cmp
adc
adc
lods
or
and
mov
or
mov
repz
sbb
mov
cs
mov
sbb
stc
scas
cs
inc
and
jg
lcall
stos
or
jne
scas
mov
sbb
sub
movsb
adc
les
fidivrs
mov
lcall
movsb
test
mov
dec
or
cmpl
jmp
cmp
es
fdivrl
test
mov
cmpl
cmp
dec
sub
xor
shl
mov
mov
sub
ja
add
mov
push
popf
lds
and
fldl
stos
gs
scas
xchg
mov
push
int3
test
push
xchg
cmp
cmp
pop
pushf
std
in
pop
xchg
mov
xor
mov
add
fwait
icebp
adc
rorb
popa
jmp
mov
inc
or
dec
clc
pop
xchg
sbb
push
repnz
mov
mov
aam
ficomps
imul
aaa
sbb
into
or
shrl
mov
loop
bound
add
mov
mov
bound
cmp
fstl
pushf
clc
nop
pop
push
movsl
out
dec
into
pop
lahf
xor
xchg
bound
mov
leave
in
mov
loop
dec
cmpsl
mov
add
int3
shr
in
aam
and
es
xor
pop
pop
jbe
in
stc
sub
scas
or
mov
xchg
std
enter
cltd
dec
sub
xchg
loop
dec
es
jle
xchg
or
push
and
lock
sbb
dec
aaa
test
mov
push
cmp
jge
mov
mov
mov
push
cmp
push
inc
sbb
test
mov
dec
leave
lock
cmp
mov
leave
push
cwtl
xchg
mov
addr16
movsl
mov
in
test
jo
loopne
push
fs
mov
jnp
imul
xlat
ja
or
pop
insl
mov
nop
jne
mov
fwait
sbb
js
cmp
mov
pop
out
jne
push
mov
ret
and
inc
rorl
push
pushf
lea
jno
dec
xchg
aaa
add
in
mov
in
shlb
add
mov
ljmp
jo
mov
in
mov
hlt
outsl
xchg
popf
in
pop
mov
push
or
xchg
pop
push
xchg
pop
test
jns
dec
cmp
cmovl
idivb
cmp
jns
push
addl
or
dec
rcll
jle
mov
call
sbb
shrb
and
aam
add
pop
int
icebp
dec
loop
cld
pop
data16
xchg
addl
test
sti
lahf
xor
mov
mov
out
jmp
dec
xchg
and
test
cmp
add
cmpb
adc
pop
repnz
sti
int
lahf
clc
push
ds
outsl
xor
in
jecxz
addl
inc
lea
lret
mov
pop
and
dec
mov
loope
lret
les
loopne
pushl
push
loope
pop
testb
xchg
je
fldcw
loop
lea
xchg
ljmp
enter
cli
or
dec
push
rclb
imul
arpl
jp
sarb
es
mov
adc
and
cmp
pop
and
cmp
dec
test
jno
push
imul
incl
mov
cli
jnp
dec
mov
dec
pop
mov
cmp
dec
inc
fdivr
xchg
sbb
das
and
mov
loop
add
sub
popa
std
mov
out
cmp
or
mov
add
fdivrs
fldt
scas
pop
andb
sub
fldz
int
ds
jp
repnz
ja
std
stos
jl
ret
pshufw
mov
imul
bound
push
xchg
outsl
scas
sub
xor
stos
pusha
sbb
jo
push
pop
xchg
mov
sub
aaa
aaa
test
mov
in
mov
mov
das
leave
lcall
sbb
push
stc
pop
sbbb
sbbl
jbe
xlat
cmp
test
pop
mov
jo
xor
shrl
mov
jmp
jl
pop
movsl
jge
mov
sarl
adc
lcall
cmp
xor
aam
sub
test
xchg
cmp
add
and
int3
ljmp
jl
in
data16
lea
mov
arpl
xchg
jbe
dec
sbb
pop
cld
inc
les
and
sbb
rcrb
mov
shrb
dec
pushf
xchg
adc
or
daa
cmp
adc
aam
mov
test
movaps
mov
pop
lcall
or
xchg
leave
xlat
jge
bound
gs
and
cmpsl
sbb
sbb
aaa
adc
sbb
js
inc
pop
fsts
cs
adc
sbb
sub
xchg
xorb
arpl
repnz
inc
lret
aas
loope
and
or
rorb
push
enter
inc
push
rolb
test
add
cld
add
addr16
push
lea
sub
stos
pop
and
push
loop
cmp
cmp
mov
ja
insl
xor
gs
dec
out
mov
js
fsubrl
mov
pushf
sub
push
xchg
cs
adc
jecxz
jbe
sub
inc
in
xchg
mov
subb
rolb
and
in
push
enter
mov
das
cmp
sub
ret
repz
pop
sbb
daa
push
adc
fstps
mov
xchg
pop
aad
or
mov
push
rclb
add
or
cwtl
or
xorl
jecxz
inc
adc
pop
sti
pop
jmp
shrb
add
mov
xchg
jp
inc
push
stos
mov
lret
mov
ljmp
mov
jns
lock
cmpsl
dec
imul
cmpsl
data16
jmp
xor
cs
fldl
cmp
adc
mov
outsb
insl
xor
outsb
lcall
pop
fs
cwtl
jge
fwait
mov
loopne
mov
mov
scas
adc
mov
xchg
mov
add
inc
fdivr
add
outsb
inc
iret
mov
mov
inc
fs
xchg
cs
mov
pop
xchg
stos
ret
ljmp
xchg
iret
fbld
dec
adc
mov
xchg
iret
lea
push
fsub
sbb
repz
out
dec
stos
mov
add
mov
jno
addr16
pop
sub
loopne
pop
push
xor
and
sbb
cmp
in
pop
out
xor
add
inc
push
pop
loope
push
testl
xlat
sub
test
cmp
icebp
or
cmp
sub
and
test
lods
aam
dec
fistl
add
js
dec
daa
mov
jne
mov
pop
add
data16
loop
les
ficoms
jmp
or
dec
inc
push
iret
movsl
push
icebp
popf
loopne
mov
inc
jg
std
sarb
or
pop
pop
clc
insb
fwait
push
sub
loope
mov
cmp
dec
orb
or
pop
jge
lea
cmp
adc
push
es
push
bound
dec
clc
fwait
adc
aad
mov
xor
pop
inc
rcll
and
rorl
jae
xchg
cmc
shll
cld
sti
cltd
addr16
xor
les
je
imul
lds
jnp
jmp
testl
xlat
cmpsb
cmp
outsl
loop
jp
dec
xchg
fidivrl
dec
xor
adc
arpl
in
test
incb
jo
and
fsubs
mov
ficomps
lahf
and
cmp
lret
pushf
mov
sbb
sub
mov
push
sbb
jl
or
rcrl
inc
test
cmp
jecxz
fists
fbstp
mov
std
mov
xchg
mov
aas
roll
stc
loop
mov
sub
mov
loope
cmp
jge
add
jne
push
jmp
dec
loope
cmp
and
fisttps
adc
mov
pop
adcb
cmp
dec
pop
loop
or
mov
mov
ja
out
jle
daa
pop
arpl
movsl
ficoms
inc
lods
imul
pusha
test
mov
sub
fucomip
mov
cmp
push
hlt
inc
inc
addr16
or
pop
cmp
xor
roll
cltd
insl
or
out
inc
dec
mov
cmp
out
cmp
xlat
adc
xorb
inc
stc
ficoms
push
dec
and
or
fdivs
mov
jo
adc
scas
mov
stc
bound
adc
mov
lcall
mov
rcrl
mov
mov
xor
mov
cltd
mov
adc
cltd
xchg
lret
js
test
xlat
add
ljmp
fmuls
mov
out
loopne
jp
mov
pop
add
sbb
mov
push
cmc
mov
xor
inc
push
pop
pop
mov
inc
sub
jmp
jmp
jecxz
mov
push
and
lahf
mov
pushf
xchg
sbb
cmc
bound
and
rorw
clc
inc
movsb
sbb
hlt
pop
daa
and
fiadds
jne
pop
lret
out
pusha
negb
sbb
das
push
mov
cmp
jg
lea
ret
inc
pop
mov
push
pusha
xchg
dec
sbb
int
sbb
and
cmp
push
and
movsb
push
jmp
sbb
mov
and
adc
mov
sbb
mov
sahf
pushf
mov
xchg
add
mov
jae
rolb
mov
adc
xchg
dec
in
and
insl
jecxz
imull
mov
int3
lock
push
push
jne
mov
add
mull
es
cmp
out
mov
icebp
fsts
mov
cld
aad
shlb
pop
and
fidivrl
push
sarb
add
adc
cmp
rorl
aaa
mov
mov
fisubrs
popf
sbb
test
or
xor
pop
out
movsb
gs
sub
adc
fisubl
xchg
push
inc
push
popa
int3
jl
dec
adc
scas
add
fwait
sub
mov
cli
inc
movsb
pop
lahf
das
lea
imul
fucomip
fcmovu
adc
ds
out
mov
dec
lcall
mov
adc
inc
test
clc
fisubrs
sti
dec
xchg
adc
dec
cmpsb
or
sub
jp
mov
ret
js
out
aam
pop
xchg
fidivrl
in
pop
inc
cmpsl
leave
addr16
test
arpl
mov
adc
int3
or
shlb
je
push
test
mov
sub
cmp
pop
outsl
in
stc
subb
loop
js
in
add
les
adc
sbb
call
lock
xchg
mov
add
cwtl
mov
lods
adc
aad
cmp
xor
aad
test
xor
cli
jnp
ds
or
mov
out
fsubl
repz
outsb
mov
sbb
rcr
insl
pop
mov
ljmp
xchg
add
loope
dec
jns
dec
add
mov
adc
cmp
pop
push
fcompl
loop
jle
mov
or
scas
pop
pop
dec
inc
sub
icebp
mov
dec
in
loope
loopne
or
icebp
xchg
add
pop
fiadds
leave
mov
daa
adc
fs
lret
dec
loopne
pop
dec
incb
inc
push
in
mov
xchg
or
mov
cmp
xor
filds
sbb
jmp
imul
inc
mov
fcomip
sbb
cmpsl
inc
pop
and
xor
cwtl
push
jge
lods
outsb
add
adc
pusha
subl
loop
dec
or
push
adc
xchg
dec
jb
mov
adc
mov
test
cs
jmp
mov
mov
in
stos
xlat
shrb
pop
dec
push
add
xor
inc
jmp
mov
lcall
xchg
mov
mov
in
cmp
in
mov
adc
mov
xchg
shrb
cmp
mov
pop
jmp
ja
pop
adc
adc
scas
and
out
roll
and
sbb
xchg
ljmp
mov
add
jge
inc
or
push
adc
pop
push
and
cmp
nop
lret
icebp
out
push
out
aad
rcrb
fadd
and
mov
and
fildl
jne
or
push
nop
pop
popa
mov
and
pushf
xlat
rcrb
pop
data16
arpl
mov
insl
stc
mov
fldt
pop
jge
bound
dec
xchg
es
test
repnz
je
lret
int3
popf
pop
pop
inc
fiaddl
adc
les
inc
ret
xchg
nop
push
test
scas
movsl
aaa
jnp
cmp
cld
xor
or
push
inc
scas
or
movsb
pop
dec
or
mov
pop
je
ficompl
mov
pinsrw
mov
adc
adc
mov
xchg
lea
sub
xchg
push
lahf
mov
jp
adc
inc
aas
lock
enter
in
andb
or
sbb
cwtl
ljmp
cli
xchg
jae
pop
push
cmp
mov
in
arpl
pop
adc
cli
stos
mov
imul
into
jle
fwait
mov
loope
mov
aam
push
adc
lods
dec
cwtl
lret
imul
cmpsl
sub
jge
mov
inc
sarb
xchg
add
push
je
mov
sbb
hlt
fidivrl
jp
add
sbb
fiadds
sti
adc
pop
fdivs
and
fwait
lret
inc
add
or
out
pop
in
mov
or
sbb
mov
adc
mov
outsl
fisubs
test
shll
out
pushl
or
cmc
movsb
in
push
shll
pusha
and
adc
mov
mov
push
aas
sti
repz
sbb
and
ljmp
jns
push
pop
dec
cwtl
push
adc
idiv
xor
inc
das
adc
lock
sar
into
add
mov
stc
ja
mov
notb
adc
push
rorl
fdivl
add
cmp
mov
sahf
sahf
daa
pushf
mov
push
xlat
adc
test
adcb
icebp
dec
lahf
xlat
mov
sub
push
pop
and
scas
add
mov
xor
jns
dec
add
push
push
popf
pop
mov
xor
push
loopne
sbb
aad
imul
ret
mov
fisubs
je
imul
shlb
pop
cltd
or
or
mov
test
and
shll
push
mov
fdivl
jp
idivl
sub
sub
leave
fcmovu
leave
fstpl
int
push
push
repz
push
push
ja
cmp
mov
pop
jge
insb
adc
dec
pusha
aaa
push
loopne
je
out
jle
outsb
xlat
lret
inc
test
ljmp
mov
xchg
fs
or
pop
dec
es
jnp
cld
in
xor
push
mov
lods
push
jl
ds
and
mov
divl
rcrl
cmp
jecxz
out
xor
sti
pop
in
int3
inc
inc
sub
pop
loop
inc
fs
aaa
push
les
dec
ret
loopne
ss
outsl
mov
mov
cld
insb
xchg
jle
insb
cwtl
in
add
push
cmp
test
ljmp
push
popf
mov
dec
out
push
cmpb
xor
fcoms
jno
jge
rcrb
shr
mov
cld
mov
pop
cmp
les
cli
xchg
adcl
mov
jo
imul
test
sti
mov
push
add
out
xchg
add
les
mov
adc
sti
mov
test
xchg
out
xor
jge
cmpsb
stc
insl
push
out
insl
and
and
add
sahf
pushf
lock
sub
shll
add
cmpsl
mov
sbb
aaa
lds
xor
fildl
sub
xor
cmp
arpl
int
fnstsw
sub
cmp
and
and
jp
lret
sbb
or
lods
mov
repz
jecxz
jecxz
mov
stc
xchg
push
inc
sbb
xor
mov
xchg
lret
cs
or
call
pop
scas
dec
mov
testb
rcl
cmp
sub
add
jg
decl
in
mov
sub
push
gs
in
out
test
testb
pop
lock
cmp
lret
cltd
jmp
mov
pop
dec
xchg
jl
sbb
mov
ljmp
mov
aaa
daa
fldt
sub
test
popf
and
pop
ret
push
cs
out
pop
or
push
pop
shll
cmp
jnp
push
jecxz
sbb
mov
mov
mov
loope
xchg
or
add
popa
xor
xor
dec
xchg
das
rcl
adc
xchg
xchg
xchg
ljmp
pop
sbb
pop
insb
popf
fstpt
add
mov
ficoml
push
dec
pop
mov
or
add
sbb
jecxz
into
jge
sub
xchg
jb
lods
jno
fsubp
push
pop
pop
jns
daa
mov
jmp
push
xorl
cmp
call
test
shrb
idivb
repz
call
push
adc
mov
hlt
jl
test
test
mov
inc
mov
stos
xchg
jnp
mov
shrl
insl
pop
in
call
lret
push
fiadds
ss
xchg
test
jg
das
call
mov
mov
xchg
mov
leave
xorl
out
outsb
ret
test
jo
loop
dec
call
imul
sub
lds
mov
lods
stos
dec
adc
sub
ja
mov
cmc
test
and
imul
lods
cmp
push
cwtl
dec
mov
scas
jmp
sbb
push
jmp
add
daa
addr16
xchg
loopne
push
push
mov
jecxz
add
repz
xor
aad
mov
push
popf
pusha
jmp
out
push
push
dec
fndisi(8087
sbb
push
popa
push
das
adc
scas
pop
push
outsb
pop
rorb
push
ja
xchg
mov
dec
rcl
xchg
test
adc
or
lret
dec
in
lock
inc
pop
incl
inc
dec
jle
into
stc
rolb
push
xchg
ja
sub
adc
add
sbb
cmp
sub
fnstsw
mov
jo
push
or
ficompl
sbb
test
mov
mov
rorb
imul
add
sbb
mov
sbb
lahf
test
adc
dec
xor
shlb
pushf
mov
dec
lcall
push
es
mov
out
lret
and
cwtl
lret
add
lods
pop
iret
cwtl
push
movsb
jge
rcl
add
call
aam
add
xor
jp
xchg
ficomps
cltd
popa
mov
pop
lods
or
imul
ljmp
mov
cli
lahf
adc
sbb
lahf
inc
pusha
ret
jl
sbb
sub
js
jns
sbb
push
lds
movsl
hlt
xchg
mov
pop
push
rcrb
and
in
fadds
jne
test
or
pop
out
xchg
jle
cmpsb
dec
in
in
aas
repz
hlt
sub
repz
into
sbb
popa
in
mov
dec
gs
test
fisttpl
mov
loop
and
adc
mov
add
push
lods
adc
fildll
mov
sub
jae
sahf
jne
inc
jge
leavew
call
pop
loop
mov
lahf
daa
iret
xchg
lret
or
inc
jge
jb
lea
xchg
add
adc
mov
xchg
dec
inc
enter
das
jmp
push
test
popf
js
fsubp
pop
fidivl
sti
mov
scas
jle
aad
jbe
ds
mov
xchg
xlat
test
xor
xor
int3
xchg
xor
sub
outsb
mov
icebp
inc
push
pusha
push
push
lret
xchg
push
xor
or
xor
cmp
das
out
popa
leave
icebp
inc
test
dec
mov
xor
and
add
in
xchg
cmpsl
mov
pop
adc
test
andb
sbb
movsb
cvtps2pi
or
clc
leave
or
das
cmp
xchg
xorl
sbb
mov
shrb
add
dec
inc
iret
sub
call
fsubs
add
add
in
rcrl
loop
add
pop
xchg
mov
int3
ss
mov
dec
cmc
xchg
inc
pop
inc
xor
jp
pop
in
sbb
loop
dec
xlat
sbb
mov
sub
add
cmpsl
cs
hlt
push
and
add
pop
jo
call
ljmp
cmc
mov
push
xchg
in
add
adcl
pop
fsubl
adc
pushl
orb
inc
adc
daa
fstps
jge
adc
outsl
cs
push
cmc
mov
mov
enter
or
gs
push
loopne
lret
mov
push
mov
fisttps
pusha
pop
lcall
lods
and
add
imul
add
loop
ljmp
fdivl
sbb
jnp
adc
push
daa
pop
in
dec
sahf
fiadds
mov
push
shrb
movsl
sbb
js
loop
pushf
ret
mov
or
leave
lea
loopne
mov
in
aas
iret
aaa
and
movsb
insb
sbb
inc
sbb
adc
int3
xchg
decb
mov
push
jno
mov
mov
add
sub
cmpsl
jbe
cmpsb
out
jne
into
push
pop
inc
xor
lret
in
dec
xor
nop
dec
mov
cmp
inc
fistpl
xchg
push
push
pop
push
adc
mov
int3
inc
xchg
mov
out
shlb
xchg
out
mov
daa
cmp
xor
inc
sub
jbe
add
or
and
loop
out
lret
add
push
and
xchg
jmp
movsb
shl
in
test
mov
and
push
sub
inc
lret
enter
pop
jnp
jb
inc
xchg
or
lret
nop
adc
or
shrb
mov
inc
not
rorl
stc
push
in
sub
out
dec
push
lea
clc
xchg
ss
cmp
imul
dec
sub
lahf
push
imul
fistpl
ljmp
insl
sub
cs
shrl
dec
insl
push
lcallw
out
rcll
out
lcall
sub
in
int3
inc
aaa
cmp
xor
inc
jno
adcb
insl
movsb
and
imul
adc
pop
fwait
adc
jge
loopne
add
fildll
enter
pusha
int3
in
orb
jns
xor
sarb
jp
out
inc
inc
roll
pop
cmp
daa
nop
add
push
ret
pop
sub
test
mov
jmp
data16
fildl
cmp
mov
or
pop
ret
loop
js
add
xor
xor
push
rcrl
cmp
dec
and
lea
add
xchg
fcoms
rcrb
js
fbld
and
jno
loope
jmp
stos
mov
pop
fnstcw
or
push
jnp
insb
movsb
push
sahf
test
pop
dec
adc
out
jl
test
pop
hlt
cs
mov
mov
insb
mov
lds
inc
clc
jge
fidivl
stos
cltd
mov
sti
mov
lods
xchg
jge
pop
ljmp
test
jecxz
pop
aaa
adc
into
lret
sbb
mov
test
and
add
sub
jno
mov
mov
in
inc
inc
leave
lods
jecxz
int
cli
xchg
sbb
add
test
mov
hlt
pop
sti
in
xchg
repnz
shrl
mov
push
push
sub
add
jns
ret
aaa
lds
xor
or
insb
test
idiv
cli
pop
gs
testb
daa
mov
jge
mov
aaa
int3
inc
movl
insb
xor
aaa
inc
mov
loopw
push
mov
outsl
mov
hlt
pushf
and
adc
jg
lods
notl
pop
sub
and
sub
orl
nop
or
xchg
mov
cmp
in
pop
mov
sbb
nop
ret
mov
or
push
aad
adc
ficoml
fcomi
test
fistpl
inc
jle
dec
das
or
cmpsb
loop
mov
push
inc
jae
add
lret
adc
daa
sub
decl
sahf
push
pushf
int
xchg
pop
and
jle
scas
mov
cwtl
push
sub
sbb
jmp
xchg
aaa
rcll
out
arpl
jo
mov
cmpl
or
pop
add
test
and
fadds
cmp
fisubs
add
shl
sub
xor
pop
popf
mov
push
sbb
sub
lahf
rclw
xor
mov
jnp
mov
pop
pop
or
dec
sub
test
or
cmc
out
mov
out
daa
ljmp
lahf
and
stos
arpl
jp
jg
daa
push
lds
stc
cwtl
cmp
mov
inc
je
sar
andl
icebp
shll
es
ror
out
dec
clc
loopne
mov
sbb
movsb
stos
push
lods
ret
jp
ss
jb
mov
in
adc
xchg
es
addr16
hlt
rcr
push
xor
fidivs
inc
dec
sbb
pop
or
push
xchg
fidivl
flds
lahf
pop
fimull
loop
stc
and
insl
jecxz
addb
in
das
dec
xchg
testb
pop
stc
pop
fsub
xchg
les
ret
mov
pop
sub
cs
repnz
push
int
aam
loope
cmpsl
push
dec
out
ljmp
mov
cmp
js
mov
jle
jne
mov
adc
fs
jns
sbb
je
jb
aas
mov
out
mov
xlat
jbe
sbb
frstor
sti
lret
sub
movsb
dec
sbb
dec
jbe
sbb
lret
pop
mov
pushf
mov
dec
mov
xchg
ds
sbb
sbb
icebp
enter
je
fdivl
add
xor
and
lcall
loopne
xchg
imul
insl
movhps
push
jp
mov
mov
out
je
inc
pusha
mov
fsubr
push
rcrb
push
jo
xor
int3
or
mov
inc
frstpm(287
or
adc
inc
scas
dec
add
imul
mov
or
aam
and
inc
sbb
inc
decl
int
ss
pop
push
mov
pop
sub
jb
push
cld
stos
lret
mov
add
push
cmp
sub
adc
xchg
nop
loop
in
outsb
add
xor
jnp
cmp
mov
sub
push
ss
cltd
sub
cmp
movsl
test
xchg
and
add
xchg
lods
je
push
xor
add
cwtl
arpl
pop
fisubl
imul
mov
or
mov
jns
jp
aaa
adc
xchg
ret
scas
das
inc
subl
lods
push
push
in
stc
jb,pn
das
cs
sbb
ss
rol
adc
pshufw
scas
lcall
xchg
sub
enter
xchg
sub
or
test
push
out
sbb
jecxz
xchg
cltd
dec
add
mov
aam
sbb
or
cltd
pop
es
in
cmp
add
pop
inc
into
jmp
jecxz
push
lcall
std
mov
in
outsb
js
dec
shr
movsl
inc
test
sbb
and
ret
sbb
shl
xlat
ja
gs
ficomps
lods
push
push
jmp
mov
negl
push
daa
imul
outsl
inc
fsubp
loopne
push
dec
and
pop
cmp
jl
lahf
mov
push
filds
inc
inc
mov
repz
jb
jae
dec
adc
and
and
rcrl
dec
xchg
inc
sahf
adc
jne
insb
out
dec
cmpsb
out
push
fs
adc
lahf
inc
rorb
add
dec
lcall
adc
dec
dec
cli
cmc
and
loop
xor
lods
movsl
sub
insl
push
fadds
scas
inc
psubsb
adc
fmuls
ficoms
mov
inc
mov
sbb
jno
mov
jae
sbb
mov
or
and
movb
paddsw
jecxz
fsubl
sub
test
dec
cmpsb
mov
mov
cmp
int3
pop
push
mov
dec
fcmovnb
mov
iret
adc
nop
mov
inc
lds
xlat
gs
sbb
pushf
iret
rol
inc
movsl
les
push
mov
lock
pop
mov
clc
xor
imul
sub
dec
pop
mov
sbb
shll
push
int3
sti
mov
sub
push
mov
rorl
icebp
lahf
cwtl
xchg
sbb
insb
cwtl
jg
idiv
mov
test
lahf
mov
loope
mov
nop
iret
jle
popf
add
fimull
inc
in
or
fdivs
into
inc
mov
aad
out
lea
enter
mov
sbb
pop
into
das
roll
jb
repz
jp
xchg
test
dec
mov
jmp
pop
push
in
in
aaa
enter
movsb
fldt
pop
and
cmpsb
movsb
ds
dec
loop
mov
mov
test
pop
adc
mov
scas
js
sbb
jo
scas
icebp
movl
and
hlt
iret
jecxz
fbstp
test
inc
loope
push
ret
rcrl
notb
mov
sbb
inc
jae
add
jge
orb
adcl
jecxz
scas
rcrb
fucomp
pop
sbb
adc
imul
add
popf
test
adc
cltd
sbb
loopne
jge
cmp
insb
push
sbbb
xchg
out
out
jae
in
sub
pop
sub
fidivrs
and
push
loopne
mov
jbe
or
lods
dec
mov
xlat
mov
std
mov
out
and
js
lret
xor
and
or
sub
stos
add
cwtl
loop
cltd
and
arpl
scas
sarl
add
dec
mov
ficoms
add
xor
in
mov
aas
jae
popf
sar
xor
shl
jp
stc
lods
push
jae
and
xchg
inc
ret
mov
out
cwtl
adc
test
pop
pop
push
iret
sbb
push
xor
cltd
push
add
shll
or
shrl
dec
cmp
popa
fistl
fstpt
out
cs
mov
or
xchg
adc
dec
sbb
lock
mov
daa
dec
add
adcb
fmuls
mov
sbb
sub
jb
scas
pop
inc
sbb
push
jo
cltd
lret
jmp
hlt
fnstsw
aam
cmc
pop
sar
call
pushf
mov
jnp
test
mov
sbb
push
sbb
out
jge
mov
fimuls
mov
pushf
and
pop
xor
or
add
mov
mov
cwtl
in
mov
fisubs
jno
sbb
sbb
or
sbb
push
jns
adc
arpl
insb
xchg
dec
and
ljmp
pop
mov
test
pop
cmp
es
mov
ljmp
and
popf
cmp
pushf
lea
pop
movsl
adc
filds
dec
xchg
add
and
movsl
and
push
dec
dec
add
xchg
or
insb
and
inc
bound
aam
push
mov
mov
popa
jb
repnz
dec
sbb
cwtl
and
adc
sub
cmc
sbb
or
push
dec
pop
insl
shlb
push
scas
mov
jns
popl
cmc
pop
push
dec
pop
push
jle
sbb
push
lcall
push
addr16
imul
and
mov
daa
imulb
adc
stos
nop
aas
pop
sbb
rorb
jo
sbb
hlt
mov
subb
jmp
cs
fildll
mov
inc
into
dec
imul
sub
push
scas
inc
cmpsb
mov
lods
iret
inc
ljmp
cwtl
mov
add
adc
or
cmp
data16
sarl
fs
mov
mov
xchg
pop
push
testl
fdivp
xor
es
push
orl
das
stc
ljmp
jecxz
cmp
hlt
dec
mov
jns
popf
add
mov
dec
xor
mov
pop
jecxz
mov
add
sbb
int3
mov
xchg
cmp
ljmp
cmc
adc
and
sub
push
rol
vaddpd
mov
sbb
not
and
stos
outsl
ja
inc
adc
or
mov
push
jle
jnp
pop
in
mov
stos
movsb
pop
cltd
stos
xor
je
daa
cmp
dec
pusha
leave
pop
mul
test
lock
adc
jmp
mov
add
jo
mov
dec
inc
leave
pop
or
inc
loopne
mov
xchg
dec
in
or
dec
dec
rcl
inc
cs
push
jp
add
add
mov
mov
fcoml
lret
adc
shl
lea
inc
push
int3
dec
pop
push
sub
rclb
and
dec
sbb
sub
xchg
aas
xchg
push
xchg
imul
dec
les
mov
push
mov
cmp
sbb
mov
pop
pop
and
inc
gs
xor
test
xchg
data16
loopne
cmp
aad
mov
cmp
movsb
cmp
jne
shr
pusha
xor
mov
mov
sbb
iret
fmuls
hlt
mov
and
add
pop
push
pop
push
dec
pop
std
sbb
out
mov
xor
push
add
xchg
xchg
or
rcrb
ret
sti
xor
xchg
mov
into
inc
fwait
popa
aam
fwait
cltd
mov
inc
pop
add
jo
in
dec
lods
and
inc
mov
pushf
sbb
mov
fcomip
sahf
addr16
inc
sub
aaa
xchg
sub
cwtl
mov
mov
cmpsl
push
cmpsl
mov
jge
addr16
xor
stos
xchg
movsb
mov
movsl
aad
mov
or
add
outsb
xchg
cmp
arpl
push
incb
xor
mov
or
orl
jecxz
jns
sbb
scas
mov
jge
jmp
mov
mov
pop
push
add
shl
imul
icebp
fs
into
insl
lods
into
stc
xchg
cmp
pop
xchg
in
add
in
cmp
jns
cs
mov
aam
scas
sbb
jne
cmpsb
movsb
fmuls
push
dec
mov
sub
in
pop
jp
mov
xlat
nop
push
jbe
shll
or
xchg
sub
lret
cmp
pop
cmpsb
in
enter
dec
repnz
movsl
call
pushf
enter
or
cmp
jg
add
idivl
loopnew
in
pop
cltd
and
in
adc
mov
xchg
cli
sub
inc
sbb
push
push
out
push
das
mov
or
rcrl
rol
cmpsl
push
push
or
fidivs
sub
lea
cmp
push
mov
pusha
pushf
clc
hlt
pop
dec
add
test
loop
out
lock
adc
mov
out
es
out
xchg
imul
lret
ljmp
aaa
cmpb
pop
jnp
cld
jmp
xchg
inc
adc
add
shl
pop
insl
shr
dec
xor
scas
lret
add
mov
iret
subb
popa
les
inc
sahf
cmpsl
fcompl
cmp
or
mov
and
popl
or
mov
push
xchg
pusha
sub
cvtpi2ps
xlat
flds
mov
pop
mov
dec
pop
and
add
movsb
xor
mov
or
insl
mov
test
cld
dec
mov
jl
loope
xchg
cmp
jns
aas
mov
out
pop
sbb
insb
and
pop
cmc
mov
addb
or
push
mov
or
lret
scas
lret
jo
call
cltd
insb
adc
mov
jl
cmp
mov
pop
pusha
dec
ja
sbb
adc
cmpsl
leave
cmpsb
cmp
ljmp
sub
aam
mov
xchg
out
mov
aam
inc
adc
mov
xchg
out
add
adc
pushf
lock
and
jae
adc
pop
nop
dec
xchg
pop
add
cmp
mov
pushf
ret
int
jp
add
fs
add
fs
sti
cmp
aas
mov
imul
jne
jecxz
loope
xor
pop
inc
mov
sti
or
mov
test
push
jg
lcall
out
push
push
add
xor
popa
add
push
movsb
shrb
push
mov
inc
pusha
mov
xchg
pop
sub
icebp
xchg
loope
int
add
das
stos
stos
xlat
bound
daa
xor
sub
lods
mov
pop
movb
shrb
sub
pop
dec
jp
xor
or
and
inc
loope
sub
mov
sbb
pusha
out
out
xor
dec
andl
imul
mov
fsubl
push
dec
addr16
in
ss
aaa
out
mov
xchg
fistl
push
mov
lds
loopne
xbegin
and
mov
repnz
or
outsb
dec
sub
push
testb
dec
loopne
jo
xchg
cmpsl
jo
sub
xor
not
jo
imull
push
mov
add
mov
cmpsb
mov
xchg
jae
movsl
or
pop
mov
paddsw
repz
sub
movsl
nop
enter
mov
paddusb
cmp
inc
negb
cmp
dec
ss
jg
fsubrp
call
dec
inc
or
hlt
lret
addb
aas
aam
in
push
sub
mov
lods
sbb
sbb
mov
ss
adc
cmp
repz
dec
pop
mov
pop
jns
mov
jnp
data16
dec
iret
dec
dec
dec
xor
mov
or
gs
inc
dec
inc
mov
arpl
nopl
sub
lahf
inc
rolb
movsb
addr16
xchg
ja
mov
mov
sbb
or
mov
sub
hlt
test
leave
data16
jmp
adcl
inc
mov
jae
andl
ss
adc
cmc
or
mov
push
outsl
jecxz
pop
lret
std
sub
div
cmpsb
cmpsb
jge
inc
adc
cmp
jns
int
les
mov
cmpb
repnz
or
add
cmp
dec
mov
lahf
mov
scas
jno
jno
cmp
mov
cmc
mov
ja
xor
es
pop
cli
dec
xchg
test
outsb
add
sbb
popa
and
fistl
pop
xchg
mov
cmpsl
mov
mov
mov
sbb
inc
test
insb
mov
test
pushf
dec
scas
call
mov
test
xchg
das
shll
outsl
jg
and
xor
fld
mov
xchg
pop
lahf
inc
cmp
inc
jb
inc
inc
dec
jno
pop
pop
ror
push
sub
xor
or
cli
xlat
ds
sbb
sbb
in
jo
jp
cmc
sbb
xchg
push
lcall
repnz
in
outsb
xchg
pop
jo
rcl
pop
in
push
aas
jb
inc
xchg
test
mov
insb
dec
fsubs
shll
ss
push
push
lahf
nop
fstl
frstor
or
imul
push
sbb
cmpsl
cli
je
cmpsl
pop
cmpsl
mov
movsb
in
sub
jg
push
xchg
sub
daa
jbe
pop
mov
sti
cmp
sahf
xchg
and
fmuls
ret
push
out
call
jge
fldl
das
jo
int
dec
in
dec
loop
int
gs
cmp
fdivl
push
or
sub
in
mov
repnz
mov
loope
inc
sbb
in
sahf
sbb
xchg
add
cmc
faddl
sbb
aam
adc
mov
pop
rcrb
hlt
mov
xor
cmp
icebp
xor
test
mov
and
test
adc
ret
xchg
xor
inc
pop
sub
fcmove
in
adc
xor
lock
out
shr
stos
lods
cmp
fcmovnb
insl
test
notb
mov
loop
test
or
mov
or
dec
jbe
dec
xor
rol
xor
loop
push
cmpl
fldl
push
lock
mov
xchg
jp
insb
jne
xor
pop
or
ja
sub
push
fadds
loope
inc
popf
pop
rorl
mov
shufps
push
cltd
popa
and
sub
lahf
xchg
add
xchg
popa
adc
push
xor
fdivrs
pushf
insb
ds
jp
sbb
sub
xor
mov
jbe
cmpsl
jae
mov
call
lahf
sbb
lods
sub
pop
jno
out
and
scas
jg
cwtl
mov
roll
add
mov
clc
jge
xchg
push
inc
xchg
jmp
xor
lds
mov
sbb
psubsw
dec
pop
sti
testl
lret
xlat
popf
mov
push
dec
pop
mov
dec
pusha
push
popa
clc
nop
loop
or
push
sub
jno
aam
adc
lret
jno
or
push
fbstp
dec
mov
mov
mov
adc
xchg
lahf
xchg
adc
push
cmp
movsl
les
not
lahf
xchg
sahf
pop
fistps
data16
xchg
subl
fsubrl
mov
in
sub
jecxz
mov
mov
pop
push
ss
subb
rcrl
mov
push
xor
call
movsb
adc
push
push
and
outsb
lret
or
daa
cwtl
mov
into
or
and
pop
sbb
push
ret
xchg
sbb
insb
mov
jb
ret
mov
orl
mov
out
les
cmp
cmp
popf
lea
popf
xor
mov
mov
cmp
cmp
jno
aaa
sub
in
or
enter
sbb
scas
or
cmp
sub
jno
inc
xchg
daa
cli
mov
stos
inc
mov
sub
gs
dec
inc
sub
ss
daa
rorb
or
jbe
mov
mov
mov
xchg
mov
mov
fidivrl
jmp
push
pop
xchg
jbe
push
lock
xchg
push
adc
dec
push
cmp
sbb
mov
pop
jno
push
arpl
sahf
inc
and
mov
push
cmp
loope
pop
sbb
ret
pop
dec
jl
lods
es
cmpsb
into
pop
adc
lock
mov
dec
pushf
mov
dec
jnp
or
xchg
jp
and
sub
cmc
int
push
adc
lcall
lcallw
into
push
repz
mov
sbb
sub
jbe
sti
sbb
fwait
pop
cmpsb
inc
mov
out
fmull
icebp
stos
ror
or
fwait
and
incb
xchg
aam
mov
lods
pop
mov
xor
repz
or
xchg
push
sbb
jge
outsl
and
stos
pop
fwait
jle
std
lcall
cmp
dec
stos
add
adc
or
out
pop
mov
leave
pusha
dec
dec
jg
cmp
cld
bound
out
mov
xabort
movsb
push
repz
cmpsl
dec
stos
push
cmp
pop
xor
adc
sbb
push
mov
clc
pushf
xor
dec
inc
dec
sbbb
adc
jno
fcomi
lahf
sub
dec
mov
shl
cmp
pop
add
insb
fcmovu
out
mov
adc
xor
popf
push
int3
negb
cs
mov
cmp
xor
lahf
add
lea
pop
or
fstpl
cwtl
cmp
or
xlat
mov
add
dec
xor
leave
outsl
add
adc
repz
add
mov
xchg
inc
test
push
call
data16
sub
bound
sub
push
lea
mov
aad
dec
xchg
jl
jae
test
aam
sbb
movsb
sbb
inc
aas
mov
adc
xorl
jge
hlt
sbb
test
push
jp
clc
push
jle
pop
xchg
ret
or
dec
or
jmp
bound
jle
loopne
cltd
dec
jl
sub
inc
js
adc
sub
mov
xchg
xchg
jmp
mov
mov
push
push
push
popa
mov
push
es
adc
sahf
dec
sbb
imul
add
push
mov
xor
sbb
pop
mov
data16
xor
push
pop
adc
popa
xchg
sbbb
int3
popf
dec
xor
xor
ds
cmpsl
loop
rcl
mov
call
add
sub
jnp,pn
into
test
aad
adc
incb
mov
jge
daa
das
sub
mov
das
lds
scas
out
mov
push
rcrl
inc
rcll
out
fs
or
out
sti
push
dec
cltd
jg
loopne
outsl
pop
pop
cmpsb
push
xchg
inc
xor
loope
fwait
xchg
shl
movsb
or
adc
js
xor
fcmovnb
js
sub
insl
sub
mov
out
pop
xchg
inc
popa
pushf
int3
fwait
xor
or
xchg
cs
sbb
pusha
mov
shll
movsb
cmpsb
ja
int
mov
loopne
add
sar
popf
dec
push
hlt
arpl
or
and
pushl
sbb
pop
sbb
scas
inc
xchg
xor
rcrb
lds
hlt
mov
cli
rorb
and
xchg
scas
shlb
and
call
sub
xchg
mov
loope
pushf
fildll
int3
pushf
push
cmp
xchg
and
or
lds
mov
lcall
mov
out
inc
std
add
iret
or
vsubps
rcl
xor
les
leave
mov
push
arpl
enter
fsubs
mov
rolb
dec
fists
cmp
cmp
loopne
stos
mov
push
je
cmpsl
je
into
jno
cmpsb
mov
ss
cwtl
ficomps
lret
mov
emms
mov
shr
cmc
push
adc
dec
in
cli
push
in
cltd
xchg
jp
add
repz
bound
and
sarb
call
imul
jb
mov
cmpsb
insb
mov
add
cmp
out
cmp
sbbb
or
and
fdivr
xor
inc
adc
and
jge
sbb
cmp
sub
movsb
xchg
push
xor
inc
repnz
repz
test
push
test
jns
loop
mov
xor
ljmp
sub
jecxz
xchg
imul
and
sbb
xorps
test
jp
loopne
lret
dec
sub
sahf
lret
dec
and
pop
stos
mov
ret
fbld
push
pop
mov
pop
pop
adc
pop
aas
inc
xchg
cmp
and
push
xchg
or
scas
cmp
lds
sub
push
sbb
jecxz
dec
repnz
insb
cmp
mov
int
inc
ja
jno
movsb
sbb
loope
and
jl
xchg
lods
push
xchg
mov
mov
rolb
and
icebp
mov
sub
xor
jne
sahf
inc
lock
sahf
test
add
jge
out
ficoml
daa
xchg
mov
loope
insb
test
popa
pop
sbb
add
push
in
pop
xor
test
arpl
ja
lds
push
add
popf
shl
sub
clc
cmpl
cmpsb
sti
imul
sub
xchg
addb
mov
xor
ficompl
scas
je
mov
xor
adc
mov
into
add
imul
or
dec
rcr
dec
jo
fistps
pop
daa
xchg
push
call
lret
insb
fmull
jle
mov
arpl
mov
xchg
shll
xchg
jg
push
rcll
fwait
mov
cli
scas
stos
ret
mov
fwait
or
xor
adc
mov
push
jg
fiaddl
shl
popf
movsl
jne
in
daa
cmpb
stc
jg
js
pop
sarl
sbb
mov
inc
pusha
jbe
imul
inc
cltd
jbe
inc
fsubr
je
jg
mov
repz
in
mov
and
ds
jne
dec
xchg
in
cmp
inc
pop
inc
std
lret
scas
jbe
cmpsl
insl
jmp
fs
mov
fldenv
sbb
ror
les
cmpsl
jns
fists
and
adc
sub
dec
jmp
cmpsl
xor
pop
arpl
arpl
sahf
jl
sub
inc
stc
inc
push
cmp
mov
inc
lods
in
fisttps
pushf
popa
stos
insl
mov
push
popa
notl
out
jb
lods
cmp
pop
or
and
sub
ja
sti
cmp
adc
cmpsl
aad
enter
test
dec
sub
clc
add
sbb
xchg
loopne
rcr
hlt
jns
sub
pop
mov
outsl
inc
ficompl
mov
dec
in
insl
sbb
ret
ja
push
mov
cmp
mov
inc
out
ret
test
cmp
ss
sub
inc
loopne
rcr
pusha
adc
mov
ljmp
iret
mov
pop
out
gs
loop
push
push
mov
mov
inc
xchg
stos
add
shr
jo
inc
push
adc
call
adc
ret
das
or
scas
push
subb
arpl
xchg
popf
cmc
or
add
ja
inc
adc
pop
into
bound
stc
enter
insl
sbb
outsb
push
jns
xor
std
push
inc
aam
out
outsl
arpl
lods
inc
xor
pop
pushf
pop
scas
ds
mov
arpl
icebp
mov
push
imul
gs
xlat
mov
cld
pop
test
data16
xchg
mov
xor
xchg
out
fimull
jne
in
gs
pop
xchg
daa
cmc
or
inc
mov
mov
sbb
jmp
sub
in
xor
sti
jecxz
insl
push
iret
jno
push
ud0
dec
test
pop
mov
fisttps
aam
adc
lock
xchg
test
dec
sub
push
jne
bound
pop
dec
push
out
dec
stos
imul
mov
or
xor
jmp
outsb
adc
inc
mov
adc
mov
mov
loopne
aam
aad
aaa
movsl
je
mov
cmp
inc
adc
add
insb
jnp
mov
mov
inc
fistps
cmc
lret
inc
mov
push
sbb
mov
daa
fldl
xchg
sub
mov
iret
add
dec
out
int3
xor
fdivr
add
inc
call
inc
leave
rcl
lret
mov
xor
cmp
push
sahf
mov
jmp
insl
mov
js
in
cmpsb
pop
imulb
ds
stc
mov
inc
js
cmp
sub
scas
das
dec
ret
mov
and
fstl
int
cmp
mov
push
outsl
aaa
cwtl
aam
mov
rol
sbb
cwtl
or
push
fwait
pop
jp
cmp
fcmovu
mov
pop
fildll
push
sub
mov
sti
sbb
and
icebp
jbe
popa
pop
dec
and
movntps
loopne
cmp
fwait
mov
mov
mov
and
dec
add
jmp
pop
lret
sub
jmp
dec
cmp
dec
rol
pop
dec
test
push
aad
negb
int
mov
pop
push
nop
repnz
xchg
and
mov
cli
sahf
sbb
jp
cmp
loope
into
adc
cmc
push
fucompp
lds
pop
clc
adcl
pusha
fnstsw
or
xchg
lock
das
sub
mov
xchg
pop
jns
or
sub
push
dec
fadds
jp
imul
dec
mov
push
xchg
and
xchg
jne
rolb
xchg
mov
aas
mov
xor
lods
into
jo
movsb
mov
imul
lret
pop
popa
stos
es
cmp
in
push
xchg
and
test
lods
rcrl
sbb
push
and
dec
lret
push
sbb
fsub
in
add
push
cmc
sti
outsb
scas
and
jns
inc
fildll
sbb
or
cli
daa
arpl
out
pop
test
cmp
adc
sbb
cli
in
xchg
mov
insl
out
mov
shrl
jae
and
mov
xor
lods
sbb
movl
ret
xchg
test
sbb
pop
cmp
hlt
mov
shrb
leave
insl
ljmp
jle
push
add
test
pop
mov
rolb
cmc
cmp
ds
sbb
mov
lret
aam
or
insb
pop
mov
or
xchg
and
cmp
andl
aad
fldenv
add
pop
mov
cmp
xchg
stc
jge
dec
ret
xor
push
js
mov
out
jne
fbld
js
dec
xchg
xchg
pusha
gs
sbb
mov
push
cltd
mov
adc
bound
jbe
jno
repnz
push
popf
push
xchg
pop
pop
es
les
mov
add
stc
sbb
or
shrb
or
xchg
jl
dec
mov
pop
out
movsb
frstor
in
cmp
and
jge
mov
bnd
lds
jno
fs
sub
lock
jnp
jmp
ja
sub
push
int
mov
out
sbb
in
dec
movsl
add
pop
inc
aam
cmc
jae
les
jmp
repnz
cmp
pushf
xchg
and
xor
data16
cmp
clc
fdiv
xor
and
mov
dec
sub
sub
in
into
pop
divl
pop
ljmp
cmpsb
mov
loope
mov
data16
push
and
scas
push
dec
aas
fstl
and
cmp
sub
mov
pop
test
pop
movsl
clc
cmp
jns
daa
mov
ja
jno
jnp
push
mov
xchg
jae
sub
jp
pop
in
push
and
mov
mov
mov
cmpsl
inc
mov
int
jbe
or
or
call
gs
xchg
leave
loopne
or
shll
sbb
out
mov
cld
incl
rorb
lahf
dec
cmp
push
lock
stos
stos
fsubrs
aad
jmp
xchg
lods
fidivs
mov
push
rcrl
cmp
add
add
xor
imull
aam
ja
scas
je
sbb
cwtl
mov
dec
outsb
jbe
add
sub
test
pop
divb
push
jbe
dec
lahf
mov
inc
enter
std
mov
test
mov
xchg
jge
je
or
ret
ss
stos
or
je
xor
xchg
negl
inc
mov
jo
jno
lret
loope
mov
sub
cmp
iret
inc
cmp
xor
movsb
popf
fwait
push
fcmovnu
das
add
sti
dec
cmpsl
dec
push
push
mov
repnz
ficomps
or
lods
test
lahf
cmpsb
nop
jecxz
adc
movsb
sub
mov
inc
mov
inc
mov
push
and
jg
push
xchg
mov
push
fs
xor
adc
xchg
or
pop
aad
std
scas
rcrb
mov
push
push
aad
or
push
mov
sbb
mov
push
add
xchg
cld
cmp
fsubrs
dec
shrl
insb
mov
cmpb
dec
inc
push
and
cmp
sub
movb
adc
faddl
rorl
sub
loop
xchg
inc
outsb
push
movsb
call
scas
lock
push
jp
icebp
mov
jmp
cmpsb
jnp
add
shlb
lods
dec
sub
jns
mov
sbb
cltd
inc
insl
mov
jnp
in
inc
fdivp
lret
imul
pop
addr16
cmpsb
incb
repnz
cmp
lock
jns,pn
push
pushf
dec
jmp
inc
add
out
repnz
in
xchg
insl
loop
lret
push
rcrl
sbb
jbe
int3
sbb
cwtl
xor
add
sahf
in
xor
or
subb
jp
cmp
movsb
ret
aad
fcomps
sbb
cmp
adc
inc
repnz
push
int3
mov
and
adc
popf
iret
pop
cmp
push
xor
test
orb
test
and
push
lret
insl
popf
movsl
and
test
data16
pop
enter
mov
fildll
xchg
jns
rdmsr
sub
fimull
jecxz
ds
ljmp
dec
mov
push
addb
out
jp
testl
sbb
mov
and
jg
in
cmpsb
jno
fwait
in
lret
negb
push
sti
dec
lahf
mov
ja
int
cld
shlb
in
out
sub
dec
xchg
int3
inc
aas
pusha
ret
dec
jae
repnz
sub
dec
add
mov
ja
or
xor
cmp
fnstcw
rorl
pusha
dec
xchg
cltd
dec
shlb
out
jnp
adc
insb
or
mov
fwait
mov
push
inc
add
subl
xor
fs
mov
lahf
sbb
mov
notl
inc
loopne
sub
pop
sbb
push
fs
bound
jbe
and
pop
jg
dec
lods
add
mov
sbb
out
xor
aad
jae
leave
add
hlt
push
xchg
or
gs
loope
mov
jae
cmp
xor
inc
out
sbb
shrl
adc
mov
loope
mov
mov
in
cmp
add
outsb
mov
and
fwait
push
imul
cmpsb
mov
jp
dec
xor
sub
sbb
push
cmpsl
mov
jo
jmp
out
or
fwait
xchg
lods
das
imul
pop
sarl
in
xor
inc
sbbb
sub
mov
mov
push
mov
lods
and
lea
pushf
add
pop
pop
test
xchg
je
add
addps
filds
andl
fwait
rorl
call
add
cmc
test
mov
lret
popf
inc
dec
out
mov
cmp
cmp
sahf
inc
jo
insb
and
or
andb
in
mov
je
sahf
repz
jb
push
dec
jle
inc
mov
je
rorb
insb
sbb
pop
and
sub
pop
arpl
add
mov
cmp
add
push
fnsave
cmpsl
and
xor
mov
ds
cltd
in
xor
outsl
cltd
mov
loopne
dec
out
sub
subl
fwait
mov
push
cmp
sub
jb
sub
lahf
xor
push
fsubp
test
ret
jge
jle
aam
fs
and
dec
lret
fidivl
hlt
mov
xor
push
inc
and
testl
ficomps
into
ret
lret
daa
pusha
cld
push
repnz
and
sbb
rclb
jnp
fs
cmp
in
pop
lods
mov
sbb
xchg
jb
fstl
scas
aas
ss
pusha
fwait
xchg
or
pop
outsl
loop
arpl
cmp
cmp
loope
or
push
and
aas
test
push
pop
cli
leave
scas
sbb
cmp
xor
inc
cmc
dec
fadd
inc
lahf
cmp
push
out
dec
cmpsl
xlat
out
fsts
mov
jo
cmp
fnstsw
add
or
std
push
pushf
dec
loope
sub
ret
jmp
movsb
jbe
jnp
cmpsw
in
cmpsb
insb
out
xor
lcall
ds
mov
scas
jbe
aam
pop
ret
xchg
pop
les
push
xor
xor
je
push
sub
pop
icebp
aas
adc
jae
icebp
cmp
repnz
xchg
pop
loop
inc
mov
lods
sbb
pushf
shl
rolb
dec
mov
fildll
push
mov
rcr
stos
jl
adcl
rclb
sbb
xor
sub
sbb
inc
mov
or
pop
fsubl
jae
stos
add
bnd
inc
pop
mov
xor
mov
dec
andb
ss
add
xchg
aad
inc
push
outsb
lea
std
bound
xchg
sub
cmp
xchg
in
insb
xchg
xchg
cmp
lret
xchg
pop
scas
out
inc
loop
loope
or
push
daa
iret
arpl
mov
out
jbe
aaa
pushf
movsl
sub
clc
jnp
mov
test
scas
into
in
out
and
jg
cmp
addb
adc
mov
loopne
popa
ja
bound
pushf
cmp
jbe
sub
sti
in
bound
aad
sbb
test
xchg
imul
push
sub
lret
jbe
cwtl
push
or
cmp
mov
cmpsb
imul
inc
js
fildll
or
sbbb
imul
mov
push
jg
cmp
daa
push
fnstsw
pop
adc
fisubs
mov
inc
sbb
in
mov
pop
ficomps
sbb
adc
jl
dec
stc
xchg
fcmovb
add
sbb
mov
jge
mov
push
sti
lds
dec
scas
inc
data16
jb
jae
iret
mov
and
mov
push
lret
xor
repnz
jmp
sub
pop
push
or
xor
js
jbe
hlt
mov
jmp
out
mov
cmp
mov
in
adc
cmp
jl
or
mov
xor
outsb
lods
inc
fisttps
lds
sbb
or
out
in
loopne
jns
movb
add
and
xchg
aam
ds
dec
xlat
add
fldl
mov
lods
icebp
xor
mulb
std
mov
sarl
fst
in
jecxz
dec
loop
stos
adc
sub
add
push
scas
stos
out
in
insb
mov
mov
add
sahf
outsl
mov
popa
xchg
lret
ret
jb
pop
mov
int
jbe
imul
cltd
lods
fcmovnbe
out
jmp
ljmp
lods
in
jg
cltd
mov
scas
adc
ja
xchg
and
inc
jbe
enter
shrl
ds
pop
nop
lods
mov
out
mov
inc
pop
jmp
ds
insl
cmpsl
outsl
xchg
loop
mov
scas
popa
sbb
ffree
andl
test
dec
push
stos
inc
sbb
adc
ja
cli
dec
test
pop
cmp
mov
adc
je
jle
js
dec
inc
push
sbb
std
jnp
lahf
sbb
in
fstl
out
iret
sbb
mov
xchg
or
fdivs
adc
cmpsl
scas
mov
lds
jp
nop
test
mov
aad
adc
xchg
inc
loope
jnp
call
into
ret
rcl
pusha
dec
or
cmc
mov
dec
out
xchg
dec
mov
fs
mov
xchg
xchg
and
shl
mov
mov
sub
test
enter
and
push
fcomps
pop
gs
fildll
push
test
dec
jp
fcomps
mov
jl
ficoml
shlb
fs
push
pusha
cmp
popf
fcmovne
add
cltd
adc
mov
adc
cmp
add
xchg
push
loop
add
push
mov
subl
push
fadd
jle
jb
imul
mov
into
lcall
mov
je
mov
imul
mov
ja
or
and
inc
lods
cli
bound
movsb
clc
or
decb
mov
lods
sbb
jbe
dec
and
sub
xor
sub
mov
mov
jecxz
inc
std
push
add
jbe
push
std
xor
push
add
ds
das
xor
cmp
ficoms
pop
mov
in
fadd
mov
add
xchg
mov
rcll
or
out
pop
add
xchg
cmpb
push
pop
out
add
inc
add
cmp
mov
mov
xchg
and
cmp
mov
mov
mov
xor
push
jl
push
mov
inc
and
xor
mov
pop
xor
inc
sub
or
mov
xor
adc
aas
mov
xchg
movsl
popf
mov
jp
sbbb
mov
in
aas
shll
movsb
jae
gs
clc
imul
data16
ljmp
loopne
mov
mov
add
int
jo
mov
adc
hlt
inc
test
insb
lahf
mov
inc
ret
mov
xor
lock
push
lods
fdivl
test
cli
xchg
dec
movsl
push
mov
dec
ljmp
pushf
push
in
fdivrl
mov
mov
mov
jmp
or
dec
cmc
pop
mov
xor
sbb
hlt
push
sub
lahf
xor
sub
or
clc
dec
scas
pop
xor
pop
fdivl
sub
mov
sub
sbb
inc
sub
fbstp
jb
xchg
sahf
rcr
push
push
mov
and
insb
pop
xchg
jle
xor
pop
mov
shll
ljmp
jno
jo
push
xlat
jl
mov
jns
xchg
aaa
mov
movsl
pop
je
sarl
and
inc
sti
in
pop
mov
cmc
fwait
jne
fwait
mov
iret
xorl
jnp
xchg
dec
mov
pop
inc
push
mov
jo
cmp
aam
add
and
sbb
gs
add
pop
jecxz
xchg
mov
cmp
in
insb
mov
jle
outsl
nop
adc
inc
inc
mov
pop
popa
jbe
mov
mov
addb
fcoms
int
mov
pop
dec
sbb
lcall
dec
mov
lods
in
arpl
inc
jbe
rcrl
sbb
movsl
add
jmp
add
jo
cmp
inc
les
clc
repz
mov
add
and
lahf
enter
mov
pop
daa
iret
fdivrl
jbe
ja
shl
hlt
insb
cmp
ja
pop
xor
jbe
fsubr
mov
sub
dec
sub
inc
fistpll
cmp
and
cmp
mov
dec
sub
fistps
pop
aaa
testb
dec
cmp
mov
ljmp
mov
xchg
daa
push
out
adc
jl
arpl
mov
pushf
jne
icebp
lock
repz
shl
and
shr
and
xchg
dec
mov
dec
imul
pop
dec
push
or
xchg
mov
add
or
aas
jecxz
mov
popf
minps
mov
enter
repz
mov
push
or
push
cli
repz
jl
or
push
es
dec
mov
aas
xchg
dec
mov
mov
push
sahf
and
les
sub
dec
pop
xchg
or
inc
aam
out
test
jecxz
cli
loop
test
icebp
cmp
mov
in
scas
jae
fiaddl
out
sbb
mov
xchg
xchg
inc
xor
adc
fldenv
jnp
shll
sbb
or
lods
mov
mov
test
inc
rol
fwait
outsl
push
sbb
rcrb
mov
dec
bnd
lods
adc
cmpsb
or
push
dec
sbbl
out
in
mov
in
dec
mov
push
or
ror
shll
jl
int3
mov
sub
cwtl
js
testb
sub
es
mov
aam
outsb
or
fidivl
push
mov
fcompl
in
jo
and
inc
mov
cwtl
std
gs
adc
add
pop
jnp
prefetch
scas
mov
popa
mov
into
push
cmp
jp
mov
xchg
mov
push
push
cltd
inc
aaa
jns
inc
sahf
sbb
fdivl
or
mov
imul
cmp
jecxz
enter
dec
fdiv
stos
pop
std
pop
sbb
sahf
sti
and
stos
ds
push
xor
test
jecxz
push
fdivrl
xchg
mov
cmp
push
or
push
or
push
mov
xchg
mov
pop
daa
into
into
imul
aas
adc
sbb
mov
xchg
mov
out
loop
xchg
or
xchg
insb
aad
adcb
out
pushf
aas
adc
popa
add
icebp
lret
std
mov
fstpl
lods
ds
jmp
mov
jbe
mov
add
sbb
xor
lahf
rep
fdivrl
pop
push
add
sti
and
incl
xor
pop
int
dec
ss
sub
aaa
ret
ret
mov
daa
xchg
lea
adc
dec
lods
fsubrl
fs
pop
cmp
lret
insb
ljmp
clc
int
jmp
fistps
xor
add
xor
push
nop
push
daa
outsb
lods
fsubrl
xlat
cmc
xchg
lods
daa
cmpsl
loope
cmp
cwtl
stos
movsl
mov
mov
js
jbe
lods
leave
popf
lock
rclb
mov
and
add
out
ret
lods
mov
mov
fbld
bound
pusha
scas
dec
sub
pop
pop
lods
cmp
jne
cmpsb
addb
rcr
sti
std
xchg
orb
jp
sbb
and
and
inc
cmp
rcr
out
jo
lret
sbbl
in
jmp
sub
mov
mov
push
adc
cld
cmp
sahf
aad
cmc
mov
cmp
push
xchg
sbb
mov
repnz
pop
fcoms
mov
adcl
rcll
subl
ret
pop
adc
xchg
loop
jae
sar
scas
xor
jmp
cmpsb
adc
sub
mov
mov
popf
inc
stos
add
dec
xlat
popa
jne
pop
jl
or
add
sub
pop
icebp
lods
xor
ret
xchg
call
sbb
add
jae
xorl
add
mov
loop
fst
roll
lods
aam
divl
mov
adc
jecxz,pt
xor
push
or
xor
cmp
xchg
ror
adc
xlat
add
pop
lods
pop
loopne
jns
add
ror
xor
pop
dec
test
movsl
xchg
lret
or
test
test
hlt
inc
popa
aad
and
push
cmp
sub
scas
scas
mov
push
mov
aad
fcmovnb
jge
jp
lock
adc
sub
shlb
cmp
repnz
outsl
cli
push
insb
pause
rolb
push
push
mov
mov
scas
outsl
xor
outsb
imul
in
int3
sub
popl
dec
or
xchg
mov
lcall
scas
sahf
mov
sub
xchg
xchg
mov
add
pop
pop
push
sbb
fsubp
xchg
or
mov
and
push
mov
pop
adc
shll
jno
aas
add
jno
mov
xlat
mov
fdivrs
lock
out
lods
aad
shl
inc
ret
addl
cltd
sub
push
jae
leave
imul
rcll
or
repnz
movsb
jbe
xor
sub
out
aas
mov
mov
mov
je
test
mov
int
js
mov
test
shll
std
xchg
xchg
jb
lahf
repnz
add
cmp
cmp
pop
push
add
pusha
sub
cli
daa
push
sbb
in
sub
sbb
xor
xorb
ud2
xor
jb
adc
ds
adc
inc
notb
outsb
add
inc
mov
in
and
cmp
xchg
jns
push
pop
cmp
lds
add
lods
add
and
mov
js
std
jb
dec
push
jne
insl
adc
into
aam
xor
mov
cli
or
push
push
cmp
mov
into
jns
iret
cwtl
push
insl
xor
jae
xor
inc
mov
fistl
lods
sbb
sub
rolb
lret
fnstsw
mov
cwtl
xchg
loop
shl
mov
or
add
js
adc
pop
clc
imul
pop
aad
pop
xor
test
lcall
out
jb
fwait
jne
lret
push
lds
pop
mov
mov
inc
adc
sub
lds
cmp
lock
rol
cmp
push
test
leave
loop
mov
and
nop
sbb
add
jg
movsl
and
outsb
mov
test
jne
mov
inc
movsb
inc
xchg
lret
js
fistl
outsl
xor
xor
push
push
jb
cmp
jne
cltd
addb
scas
add
insb
sbb
mov
mov
in
and
inc
lock
push
or
pop
mov
sub
lcall
xor
jb
out
mov
sub
das
loope
aas
int3
ds
pop
ret
and
xlat
iret
mov
icebp
and
call
lret
in
or
jge
cmc
mov
or
push
add
inc
andb
add
mov
cmp
mov
pop
adc
test
mov
cmp
ret
decb
ss
cmpsb
add
cmp
inc
push
and
je
stos
jmp
cmp
push
enter
sbb
sbb
xor
pop
jnp
sub
cmp
and
pusha
mov
mov
pusha
lods
out
jge
inc
test
cmp
jo
fisubl
push
int
inc
xchg
je
arpl
xorl
adc
mov
fistpl
in
lds
push
in
jbe
xchg
push
mov
xchg
lret
cmp
sbb
das
push
mov
mov
ds
push
inc
and
and
addr16
int3
mov
jae
pop
cmp
test
adc
fisttpl
sub
aam
sbb
pop
stos
and
inc
stos
jl
shll
pop
fs
fcom
aad
icebp
jnp
pop
xchg
inc
inc
or
in
subl
push
outsl
push
pop
stos
out
sub
cmp
icebp
mov
test
in
cld
xlat
mov
or
clc
adc
stos
dec
push
mov
outsl
inc
cmp
orl
and
fsts
pop
movsb
jmp
out
repz
repz
cmpsl
xorb
jbe
mov
jle
xorl
push
adc
stos
bound
mov
dec
arpl
out
adc
sbb
ror
sub
fists
pop
fmul
pop
out
xchg
pop
das
ljmp
pusha
push
loopne
push
mov
sub
cmpsb
dec
mov
ja
hlt
ret
enter
push
test
sub
xchg
pop
mov
mov
je
outsb
cmpl
sbb
lahf
insb
psrad
pushf
rolb
inc
jno
test
mov
out
xchg
push
sbb
int3
xchg
inc
ret
sub
loope
add
loope
mov
test
shrl
sbb
aam
les
je
jbe
loop
int3
ss
or
fwait
mov
lret
dec
ljmp
push
mov
push
pop
inc
xor
ljmp
cmp
and
test
and
xor
fsts
and
mov
push
or
arpl
adc
incb
jg
xor
sub
out
dec
sub
fiaddl
push
leave
mov
mov
stos
mov
mov
testb
inc
jmp
test
and
xchg
sub
pop
mov
or
insl
loopne
ret
repz
sbb
ss
jno
push
int
xchg
addr16
pop
out
lahf
and
shrl
pop
jl
in
or
adc
hlt
repz
data16
or
rclb
sub
xchg
push
add
inc
lods
add
push
repnz
sbb
adc
jle
xchg
pusha
mov
in
pop
xchg
dec
and
popa
scas
or
pop
jno
push
lahf
jo
add
ljmp
sbb
mov
xchg
fsts
std
in
psllq
in
insl
sub
push
movsb
pop
xor
xchg
cmc
dec
ja
mov
cmc
cmp
inc
aaa
jge
pushf
mov
ds
xchg
loopne
stos
pop
sahf
outsl
outsl
popf
insl
push
mov
sarb
mov
hlt
push
push
mov
sti
sbb
rolb
arpl
xor
hlt
xor
mov
sti
out
mov
or
add
call
push
mov
cmp
cmc
jl
scas
dec
cmp
and
in
dec
sahf
mov
inc
in
mov
add
lret
das
ret
jle
mov
mov
pop
xlat
mov
mov
pop
loope
mov
dec
lret
and
inc
addr16
ss
repnz
imul
cli
je
ret
inc
xchg
ds
jecxz
aam
add
mov
add
in
xor
int
or
sbb
test
es
ret
les
in
dec
repnz
push
and
lea
jnp
cmp
sub
add
mov
cmp
mov
jno
push
test
cmpsb
lret
icebp
dec
push
xor
ror
fists
jo
xlat
aas
mov
mov
mov
js
sbb
stc
and
arpl
cli
bound
push
jp
sbb
repz
mov
loop
lock
xlat
iret
imul
adc
jp
push
dec
repz
push
into
aaa
fs
jecxz
jp
cmpsl
or
addr16
pusha
jl
loope
ret
popa
adc
push
leave
pop
test
add
jle
loopne
xchg
out
pop
cmp
enter
fdivrs
mov
test
jb
pusha
cmp
mov
mov
iret
push
mov
leave
mov
push
dec
jb
movsb
loope
or
add
or
mov
movsl
aam
inc
js
xchg
ja
xchg
mov
popf
xchg
add
inc
mov
lahf
jnp
adc
add
sbb
imul
lahf
lcall
mov
add
ret
jle
imul
ficoml
mov
aad
scas
in
out
push
pop
rclb
add
and
bound
inc
sti
movsl
inc
insl
ret
or
add
or
jb
cmc
cmp
out
mov
andb
aam
mov
dec
lcall
jge
cli
mov
mov
pusha
test
jo
sub
lea
shll
out
mov
jecxz
pop
xchg
mov
lret
add
aas
fs
pop
pusha
dec
xor
jnp
pop
ds
pusha
add
arpl
add
push
hlt
xchg
and
and
jge
mov
test
lods
sub
arpl
dec
aam
dec
jle
pusha
cwtl
mov
add
aad
xlat
bound
sbb
xlat
sub
lods
sub
hlt
sbb
insb
jmp
sub
dec
pop
lds
test
inc
subb
dec
mov
jmp
iret
outsl
enter
call
ds
pop
mov
cmpsb
stc
incl
cmp
add
int3
inc
leave
sbb
sub
jns
inc
jae
add
xchg
xchg
dec
dec
push
push
iret
and
mov
scas
pop
adc
shlb
adc
mov
gs
jno
jmp
in
or
sub
inc
sub
cmp
xchg
cmpsl
pushf
lcall
xchg
mov
jae
fistpl
cmc
cld
in
xor
imul
jns
js
lock
pop
scas
xchg
je
mov
mov
add
inc
loope
xor
add
lods
cld
dec
out
mov
sbb
shl
push
pop
jae
or
dec
dec
jmp
fstl
repz
jo
std
push
or
imul
jbe
data16
or
sub
test
xchg
lds
jns
inc
scas
ds
mov
xor
xor
in
cmpsl
pop
inc
or
js
lcall
scas
cld
faddl
sbb
jmp
adc
mov
je
divb
sbb
add
add
aam
scas
mov
popa
scas
xchg
add
pop
mov
fcomps
nop
jp
int3
cmp
je
imul
mov
js
insb
push
push
jb
cld
cmp
pop
in
test
jae
into
jge
mov
jecxz
inc
push
cld
and
mov
and
cli
dec
enter
imul
out
pop
leave
cs
pusha
es
lahf
mov
inc
xchg
sbb
pop
call
sub
dec
outsl
push
popf
imul
js
jnp
pop
jmp
aam
fwait
leave
xor
mov
lods
jnp
mov
mov
cmp
push
cmp
push
mov
loopne
aas
ja
inc
and
stos
lods
jp
xor
fcoml
push
sub
pushf
fwait
lods
ret
xchg
or
pop
jne
je
mov
pop
dec
xchg
stos
xchg
sub
les
adc
mov
lret
fisubs
mov
jns
aam
xchg
or
in
ja
dec
lods
sub
es
or
je
xor
cmpsl
xchg
and
xchg
test
or
cwtl
cmp
mov
push
inc
cmp
movsb
cwtl
loopne
leave
repz
jg
xchg
mulb
out
pop
pop
mov
bound
rcrb
fbld
rcrl
je
bound
mov
or
fadds
addr16
divl
add
lock
ret
repnz
repnz
jl
sub
vpsadbw
test
arpl
mov
pop
insb
and
jne
cmp
loope
or
push
dec
stos
rcrb
push
cwtl
inc
clc
dec
xchg
lret
or
mov
movsl
mov
out
adcl
sbb
psubusb
out
mov
in
out
fwait
cmp
add
pop
pop
jo
or
xor
insb
adc
fsts
sarl
pop
pop
in
sub
cmp
cltd
jns
and
dec
dec
test
pop
rorb
push
in
fsubs
daa
out
and
cwtl
scas
mov
jle
or
cltd
fcmovb
testb
sub
sub
loopne
inc
insl
mov
cld
inc
adc
sub
mov
xor
in
sub
lcall
add
cmp
nop
sbb
lea
test
push
rorl
pop
aas
inc
cmp
mov
push
jb
xor
in
jle
jp
xchg
insl
fsts
nop
pusha
cmp
push
int3
es
sub
loopne
pop
out
pop
insb
mov
rolb
frstor
mov
push
adc
cwtl
mov
sub
out
mov
testl
pop
sbb
in
mov
mov
cmc
mov
daa
stos
lods
xor
dec
test
addb
cmp
in
cmc
xor
mov
loop
xchg
mov
popf
scas
aam
push
call
fcomip
pop
jns
mov
fdiv
adc
cmpsl
movsl
sub
test
pop
dec
pop
std
jb
cmp
pop
pushf
jae
push
push
mov
pmaxub
xor
mov
jbe
cmp
push
sahf
sbb
icebp
xchg
mov
in
roll
and
adc
inc
add
jno
jo
and
sarb
mov
shrl
mov
fnsave
jle
mov
sar
pushf
out
pop
push
dec
mov
mov
add
and
pop
or
jl
push
outsl
dec
push
inc
cmpsb
pop
cmp
iret
jne
adc
jns
pop
call
and
xchg
ljmp
pop
notl
daa
xchg
ret
outsb
jp
js
hlt
or
dec
jecxz
cmpl
mov
rcll
idivl
mov
xchg
adc
adc
inc
xchg
aam
inc
push
pop
fdivrs
and
adc
dec
sub
and
push
pushf
cli
push
arpl
or
fimull
xor
outsb
mov
fmull
mov
pop
test
mov
or
cmp
clc
mov
mov
pusha
mov
movsb
pop
test
inc
cwtl
test
push
lret
fidivrl
ja
mov
sub
or
or
rol
push
push
mov
mov
bound
xor
sarb
out
or
push
mov
mov
dec
outsb
popf
add
mov
fdivrp
popw
lret
pop
push
cmp
cmp
nop
fwait
lcall
sbb
lret
ja
ss
int
push
pop
cmpsb
push
mov
jg
push
dec
sti
sbb
adc
sahf
gs
inc
jp
sbb
dec
cwtl
xor
xchg
jl
or
les
adc
xchg
pusha
sub
sbb
sub
push
rcrb
mov
jbe,pn
ret
and
xchg
aaa
lahf
stos
out
sub
cltd
out
stos
jl
mov
jle
ljmp
cmp
xchg
mov
sets
mov
cmpsb
ljmp
loop
dec
add
or
mov
fs
dec
jbe
dec
sub
xor
dec
cmp
xchg
mov
xor
lock
cmp
inc
orb
int
fsubrs
add
push
xchg
sbb
sti
or
icebp
adc
pop
iret
loope
push
sti
addr16
insl
movsl
cmp
xor
sti
shll
cmp
scas
jg
cmp
fnstenv
or
fdivrs
jle
sti
xchg
lock
scas
mov
mov
jno
insb
leave
test
cmp
daa
inc
arpl
repnz
outsb
int
and
sbb
popa
xchg
std
add
imul
and
jg
lret
stos
push
add
xchg
out
outsb
inc
add
out
lea
cmp
clc
int
jecxz
cmp
jnp
lcall
dec
mov
jo
mov
cmp
mov
icebp
push
scas
sbb
or
and
mov
xor
fisttps
mov
mov
pop
js
push
jbe
xchg
pop
daa
ds
fcoml
lahf
in
mov
inc
fwait
rorb
mov
ja
xor
mov
jnp
scas
add
push
std
and
enter
sbb
inc
es
ss
call
push
mov
pop
ds
cmp
xlat
mov
lret
push
aas
jns
sbb
popa
inc
add
sbb
jp
out
cmp
fnstsw
lcall
xor
test
loop
pop
cmp
push
std
sbb
mov
sbb
das
and
add
insb
xchg
pushf
jno
or
out
ljmp
or
adc
pop
or
cld
mov
add
push
xchg
add
inc
out
hlt
adc
xor
in
xchg
mov
ret
push
out
pop
inc
in
shll
dec
jge
data16
mov
mov
adc
push
push
jmp
aam
daa
enter
mov
cli
dec
es
fists
cmp
adc
add
jbe
fwait
push
jnp
dec
mov
mov
add
sub
scas
les
inc
hlt
lods
push
test
push
jne
dec
pop
mov
arpl
idivb
pop
jle
jnp
mov
out
nop
pop
pop
fwait
sti
daa
push
pop
stos
pop
fadd
sbb
loop
aad
movsl
imulb
cmp
pop
mov
imul
jo
xchg
imul
test
push
lock
xchg
lods
xchg
dec
out
jno
inc
push
mov
ret
push
bound
xorb
cld
fstl
fdivs
ret
inc
in
xor
adc
outsl
cltd
and
xor
lcall
scas
int
sbb
testl
jns
mov
js
sub
fcomp
dec
imul
pop
or
inc
jge
xor
imul
push
in
pushf
addb
daa
sbbl
jns
in
inc
and
sbb
mov
sub
int
xor
add
xchg
cs
xchg
inc
dec
push
xor
adc
popf
out
pop
rcr
outsb
insl
outsb
pushf
sbb
add
push
movb
mov
jbe
testb
push
mov
mov
imul
inc
inc
pop
sbb
popa
in
cltd
addr16
movsl
pop
and
sti
pop
dec
mov
cmc
pop
repnz
int
lret
dec
xor
inc
xor
cmpsb
lret
movsl
adc
call
into
lea
aaa
inc
cmc
arpl
jl
add
sbb
xor
jecxz
nop
cltd
xchg
pop
xchg
xor
and
or
int3
jg
popf
push
mov
mov
aas
mov
aaa
cs
push
mov
enter
iret
cmp
frstor
push
negl
push
xor
nop
lea
pop
rcl
fxch
jbe
shll
xchg
sbb
lahf
mov
or
orl
mov
ret
cmp
inc
fdivp
data16
outsb
inc
lahf
mov
xchg
int
jle
inc
add
ret
cli
test
repnz
lcall
ja
aad
cltd
jae
add
sub
cld
sub
mov
shlb
sub
pusha
dec
push
inc
fwait
cmp
repnz
xchg
push
cmp
mov
outsl
pop
push
or
lcall
negb
sbb
ljmp
sub
jnp
and
jne
and
shl
sahf
jae
push
rorb
sub
push
sti
jmp
push
std
stos
data16
xor
or
subb
sahf
and
das
ljmp
xchg
sub
int3
mov
in
mov
mov
aam
push
je
fcoml
dec
lahf
add
push
hlt
sbb
fildll
dec
popf
repz
push
leave
xchg
xchg
aaa
mov
cmpsl
sbb
xchg
cs
add
imulb
mov
cmpl
adc
push
mov
add
cld
call
jnp
ja
mov
pusha
pop
cmp
xchg
inc
push
mov
pop
iret
sub
jne
xor
das
adc
push
sbb
mov
aad
mov
cmp
push
imul
sbb
pop
loope
and
hlt
xchg
mov
push
or
ret
bound
std
or
xlat
notl
and
dec
dec
pop
loopne
ja
xor
inc
nop
sbb
cltd
jmp
jmp
lcall
int3
jbe
rcrl
sub
mov
adc
scas
outsl
push
loopne
sbb
xor
ret
test
cmp
shrb
pushf
aas
xchg
and
aad
add
loopne
xor
into
lea
cs
mov
cwtl
sarb
sarb
repnz
mull
pop
arpl
je
mov
cmpsl
out
cmp
sbb
cltd
aad
fisttpll
push
pop
mov
faddp
or
sub
add
ss
enter
mov
jl
mov
pushf
push
pop
iret
mov
push
cmpsb
or
insb
out
sbb
jnp
popf
xchg
inc
into
mov
inc
xchg
xchg
inc
lahf
adc
sub
push
push
scas
jno
lahf
test
jl
test
imul
dec
jb
mov
jmp
mov
sti
and
iret
jnp
mov
out
sub
xchg
mov
jnp
out
xor
fsubl
pop
mov
jbe
dec
ror
xor
mov
dec
mov
push
lahf
adc
lods
push
jecxz
out
inc
shlb
sub
hlt
lock
loop
sub
ljmp
pop
inc
add
scas
outsb
cmp
std
and
mov
in
hlt
push
mov
jl
push
or
dec
inc
fcompl
dec
in
data16
orps
std
incl
cwtl
dec
loop
dec
inc
xchg
push
jo
pop
mov
fcmovnbe
jle
and
mov
mov
mov
fcoml
add
pop
aaa
and
call
dec
ffree
jb
cmp
mov
jecxz
sbb
push
jmp
sahf
pop
push
out
hlt
pop
sbb
test
imul
sbb
pop
push
cmpl
into
jmp
les
adc
nop
cmpl
pop
imul
or
fistl
mov
push
push
iret
outsb
pushf
inc
xchg
fsincos
jge
dec
pop
aas
adc
dec
jo
btc
ss
xor
sbb
mov
insb
arpl
nop
pop
repnz
mov
xor
cwtl
xchg
cs
adc
cmp
call
xor
int
and
pop
leave
xchg
dec
xor
cmpb
and
cmpsl
xor
xor
jmp
push
in
dec
jmp
dec
add
xchg
cli
sbb
push
and
push
aad
ss
push
push
fwait
mov
pop
pop
cmp
cwtl
dec
rcrb
mov
dec
shl
sbb
jno
cltd
mov
in
xlat
sbb
cmp
std
cltd
inc
shll
inc
into
jle
sbb
pushf
nop
xor
fdiv
data16
cmp
dec
movsb
lret
dec
lcall
and
xchg
jb
imul
add
push
ficoms
inc
sbb
sub
popl
insl
and
test
mov
mov
sti
inc
inc
adc
lcall
js
das
cltd
call
div
shrl
mov
lock
jp
cmpl
pop
in
sbb
mov
or
jb
pop
xchg
xchg
pop
cmp
rclb
push
mov
les
sub
inc
jge
ror
jno
std
mov
scas
popa
or
sbb
mov
or
or
mov
or
mov
adc
mov
addl
and
data16
or
jno
jp
pop
rcrl
repnz
xor
mov
sbb
loop
mov
mov
notb
inc
enter
js
aas
lock
in
cli
dec
popa
repnz
xchg
adc
insl
rcrl
jo
push
fildl
mov
out
fwait
lret
push
mov
xchg
pop
cwtl
repz
jmp
dec
pop
mov
dec
adc
fcomip
push
sarb
addr16
sub
and
lds
add
mov
fildll
xlat
inc
jecxz
dec
push
xor
cmp
mov
aas
mov
clc
idivl
cmp
into
sbb
jbe
int
or
add
imulb
mov
or
pop
in
lods
or
dec
aas
orb
fmuls
fdivrl
aas
arpl
push
pusha
xor
stc
imul
push
pop
scas
mov
lahf
sbb
outsl
aad
es
push
add
test
push
gs
in
outsb
jnp
mov
mov
xchg
sahf
es
xchg
mov
repnz
sub
adc
add
xchg
je
out
stc
mov
loopne
imul
call
std
imul
sbbb
ljmp
clc
inc
xchg
cmp
jg
stc
mov
jns
ret
pop
xor
testb
and
inc
push
ficompl
jg
adc
sbb
mov
ss
movsl
xor
jmp
enter
gs
gs
add
hlt
sbb
cmc
test
mov
mov
sub
lahf
dec
iret
dec
divb
outsb
adc
pop
sbb
lahf
adc
add
mov
adc
cmpsb
movsl
ret
out
aaa
sub
pop
js
sbb
cld
add
push
in
cwtl
hlt
lds
inc
or
push
daa
icebp
and
scas
cmp
stos
sbb
mov
push
or
add
cmp
pusha
jns
insb
scas
cmp
cltd
scas
ret
mov
push
push
push
cmpsl
fsubr
cmp
in
push
andb
push
push
mov
cmp
add
cmp
fwait
push
cmc
outsl
cmc
jge
or
xchg
add
pop
bound
mov
push
adc
inc
add
xor
pop
sub
int
aas
in
push
push
sbb
pop
in
add
or
xor
pop
pop
cmp
pop
jmp
fwait
or
ficoms
rcrl
scas
scas
leave
popf
pop
in
adc
fmul
lods
pop
mov
fs
xlat
and
fldl
xchg
mov
push
sub
inc
into
xor
je
adc
das
push
std
test
jg
push
mov
scas
fidivrl
cmp
test
and
push
mov
mov
dec
aaa
mov
shll
in
popf
std
imul
mov
fwait
lcall
mov
mov
test
pop
jmp
pop
int
outsl
xor
jae
xchg
xor
or
pop
test
cld
or
vphaddbq
cmc
mov
outsb
mov
decb
pop
sub
stos
add
lret
out
dec
test
cmp
jmp
adc
dec
lret
movsb
das
push
loop
not
cwtl
and
jecxz
and
sbb
mov
cld
inc
test
jl
pop
push
xor
lods
popf
cmp
in
cwtl
arpl
add
mov
adc
inc
addr16
outsb
popa
fdivs
pop
imul
or
jp
addr16
cmc
mov
cmp
mov
js
call
arpl
fildll
pop
sub
jne
push
inc
mov
sbb
test
dec
xorl
mov
dec
pop
fwait
call
or
dec
inc
repnz
cmp
cmp
xor
mov
in
xorb
lcall
into
and
dec
inc
xor
je
inc
adc
ret
enter
leave
mov
shl
xchg
lret
sub
push
in
mov
movsl
nop
cmpsb
sbb
pop
jecxz
decl
movsb
lock
adc
sti
fists
add
dec
xchg
push
jnp
into
ret
xchg
test
mov
add
add
pop
iret
mov
xchg
arpl
or
adcb
jb
rorl
mov
loope
mull
loop
in
fidivrl
scas
hlt
push
push
push
pop
mov
ja
adc
adcl
sub
mov
inc
fsubs
xor
mov
jg
mov
jo
adc
cs
xchg
xorl
sub
pop
jp
ret
cs
xchg
xchg
fwait
mov
imul
fstpl
data16
jg
pop
pop
in
stc
rorb
mov
test
push
out
mov
shlb
lcall
xchg
lret
stos
inc
pop
cwtl
out
pop
xchg
imul
rcrb
pop
in
scas
sub
push
mov
fiadds
dec
sbb
daa
aas
lods
les
xchg
sarl
inc
cwtl
jp
ds
fstp
rep
icebp
out
sub
sub
test
pusha
call
repz
mov
lock
out
push
push
jne
jge
fcmovbe
lahf
andl
xchg
rclb
inc
aad
cmp
adc
insb
pop
icebp
insl
mov
int
daa
lea
mov
fdivl
add
mov
iret
push
and
stc
mov
and
sbb
mov
jl
repnz
sub
rcll
jp
sbbb
ret
sbb
inc
fnsave
mov
mov
lock
and
adc
das
sbb
xchg
shll
std
xor
bound
or
shll
jg
ds
xchg
mov
pusha
lods
fcomps
divl
das
sub
inc
inc
jle
jo
pop
loopne
jle
inc
lock
cmp
adc
lds
stc
push
lds
lods
sbbb
cmp
int
sub
test
sbb
push
lcall
and
data16
cli
dec
jae
outsl
or
jge
dec
xor
jecxz
insb
xor
jle
mov
push
xlat
popl
sbbl
pushf
adc
gs
inc
popf
adc
movb
adc
cmp
and
mov
xor
pop
repnz
cmp
shll
mov
pop
inc
clc
cmp
add
nop
pusha
das
inc
fisttpll
push
push
in
test
stc
fnstsw
roll
mov
cmp
rorb
aaa
clc
push
loopne
adc
jno
dec
andl
imul
test
shl
inc
cltd
int3
mov
cmp
outsl
dec
push
lar
roll
out
dec
stc
fsubp
cmpsb
fldl
dec
scas
addr16
inc
inc
and
and
mov
fwait
pusha
adc
jno
fbld
add
pop
jmp
or
enter
cmpsl
imul
insb
adcl
jp
sub
iret
les
call
dec
gs
jno
and
lcall
mov
fs
fstpt
or
mov
pushf
scas
es
dec
cmp
adc
sbb
testl
adc
xor
cs
int3
rorl
push
push
pop
mul
jecxz
mov
ret
bnd
lock
aad
pop
push
insb
scas
xchg
int3
mov
mov
inc
adc
in
xchg
pop
push
pop
jns
leave
rclb
stc
xchg
jns
dec
mov
nop
xchg
mov
sbb
sub
or
or
subb
xor
mov
std
dec
dec
clc
ret
inc
sub
and
sbb
cmc
call
push
mov
pop
xchg
mov
aaa
xchg
jp
hlt
jns
out
insb
int
mov
lahf
cmpsl
jbe
cltd
sti
cmp
jnp
xchg
or
mov
fs
std
push
ret
insb
add
and
xorl
shll
out
js
add
dec
ss
fsubrl
push
pop
ljmp
and
sub
adc
pop
out
fs
jb
fbstp
xchg
mov
jecxz
pop
mov
cmp
mov
cli
sub
adc
push
xchg
pop
stc
adc
test
aaa
mov
sbb
mov
push
sub
push
xchg
imul
push
loop
xchg
fnstsw
fisubl
dec
scas
and
push
fwait
and
popf
mov
insb
fadds
stos
cmp
sub
xor
rcr
cmp
cmc
xor
or
pop
push
shl
sti
adc
mov
pop
push
mov
inc
shl
stos
lret
add
stos
mov
shll
das
inc
xchg
rcr
inc
xor
mov
out
cwtl
mov
xchg
inc
out
stc
fists
jb
sahf
ds
ljmp
std
test
mov
cmp
xor
adc
fadds
mov
add
or
test
stos
mov
mov
cmp
pusha
pushf
orb
cmpb
xor
add
movsl
sub
js
nop
push
xchg
ret
sub
imul
jae
stos
fwait
sub
or
clc
add
cwtl
jmp
push
jl
dec
cwtl
rolb
push
pop
inc
inc
lret
and
fnstenv
sarl
sbb
xor
xchg
jle
xchg
xor
and
or
ficoms
push
loopne
cs
cmp
pushf
lahf
lea
scas
mov
lds
sbbl
lock
push
and
pop
outsl
insl
mov
dec
call
cmpl
cmpsl
jmp
xorl
add
xchg
push
lret
mov
dec
and
mov
iret
push
jecxz
pop
js
pop
loopne
icebp
stos
dec
popf
mov
xchg
das
push
shrl
iret
mov
dec
rclb
pop
subl
dec
pusha
mov
jg
std
push
sbb
pop
out
rorb
and
xor
mov
inc
xchg
mov
test
data16
inc
add
in
lret
test
cmp
insb
pop
js
jl
movsl
sub
xlat
into
push
jb
int3
test
or
xchg
movsl
inc
les
jmp
push
iret
fs
xor
jl
mov
gs
mov
adc
mov
push
xchg
scas
repz
in
fwait
push
or
imul
cmpsl
dec
adc
gs
and
pop
cld
sbb
pushf
cmpsb
out
data16
das
sbbb
jmp
xchg
push
inc
dec
jae
and
cwtl
xchg
inc
fidivl
gs
sub
jae
int
mov
xchg
sub
scas
xchg
inc
dec
cmp
inc
lods
cmp
sub
xchg
jecxz
cmp
and
mov
jle
into
cmpsl
shl
pop
push
popa
test
add
ud1
mov
mov
mov
loope
movsb
push
lea
aaa
pop
test
pop
stc
mov
push
jb
cmp
cmp
shrl
and
mov
repnz
call
push
test
mov
push
lods
sbb
repz
out
out
hlt
pusha
lds
pop
inc
xchg
dec
mov
cmpsb
mov
aam
pop
pop
repz
das
rcl
jmp
insl
sub
lcall
xor
pop
push
pop
mov
scas
push
fsubr
lods
arpl
in
ljmp
clc
pop
xor
sub
adc
add
push
fidivrs
or
je
leave
in
out
push
jle
sub
rorb
shlb
inc
mov
je
xor
popf
pop
sbb
fwait
push
cmp
ficompl
jnp
cmpsl
cmp
jno
roll
xor
mull
stos
insl
sbb
jp
cmovne
sub
xor
or
xchg
test
sbb
cld
sbb
adc
mov
pop
mull
sub
dec
loop
and
cli
xor
andl
sbb
and
jmp
jnp
imul
in
adc
mov
mov
test
mov
ficoml
jge
movsl
cld
fstpl
sbb
hlt
xchg
xor
dec
fistl
pushf
pop
xchg
cmp
iret
jmp
mov
push
jmp
sub
or
div
mov
call
ja
rorl
test
pop
in
pop
popf
xchg
jp
xor
in
xorl
inc
lret
pop
int3
dec
inc
call
jnp
sbb
dec
orl
pop
adc
sub
xchg
dec
lods
scas
push
pop
push
pusha
jmp
fdecstp
jae
push
out
jl
fwait
or
aam
mov
lock
popa
in
sbb
inc
imul
pop
out
in
mov
aad
andb
sbb
nop
add
xchg
into
sbb
test
dec
xchg
arpl
cmp
fbld
int3
pop
or
hlt
inc
and
mov
push
or
xchg
lcall
sbb
test
stos
dec
sbb
add
cmpsl
adc
pop
fsubrs
test
add
lahf
test
inc
ljmp
inc
int
pop
rclb
mov
hlt
inc
mov
cmc
push
mov
mov
push
outsl
lea
popf
add
loope
cmc
and
pop
in
push
pop
in
mov
stos
fiadds
out
jle
test
bound
imul
cmpsb
orb
test
mov
fists
repz
mov
or
mov
daa
and
icebp
idiv
adc
cltd
mov
jns
subl
aas
sub
and
dec
push
int
pop
xchg
lret
mov
stos
xchg
push
adc
cs
aas
add
outsb
idivb
jo
jge
shrl
scas
addl
lret
xor
in
mov
sbb
or
mov
and
cmpsb
adc
js
inc
pop
pop
pop
aas
push
push
mov
xchg
roll
push
and
and
pop
xor
push
popf
mov
imul
mov
jnp
jle
das
cmpl
rcll
cmc
adc
sub
out
mov
xor
frstor
add
mov
js
js
icebp
nop
fstpt
mov
xchg
cld
and
push
loop
inc
or
xchg
cmpsw
imul
mov
sahf
pop
inc
pushf
mov
loope
jnp
dec
mov
jns
repz
test
mov
sbb
mov
adc
in
lret
jne
or
pop
loopne
xor
inc
sbb
cmp
and
and
add
ds
lock
test
cld
std
cmp
cltd
mov
jecxz
dec
imul
mov
popf
sub
sti
out
add
in
fimuls
ja
lret
and
dec
add
scas
bnd
mov
pop
push
movsb
cltd
pop
dec
mov
pop
sbb
jno
pop
shl
jg
outsl
fnsave
pop
cmp
orl
sub
in
and
stos
dec
add
fistps
dec
test
inc
sbb
call
or
adcl
inc
xchg
jp
sti
push
jge
insb
test
xchg
pop
or
mov
inc
bound
add
out
orb
jge
fnsave
pop
mov
mov
mov
push
mov
loope
cli
dec
out
xor
jo
mull
cmp
in
mov
notl
or
es
roll
in
and
sarl
mov
mov
hlt
gs
or
mov
fwait
ljmp
int3
lret
dec
data16
lret
and
add
and
int
mov
inc
push
cs
xchg
sti
add
mov
push
and
out
stc
xlat
xlat
cmp
les
jne
call
daa
xor
mov
cmp
xor
jmp
sbb
shlb
jecxz
mov
xchg
fidivrs
add
jae
mov
test
and
out
je
test
aas
cmp
aad
pop
inc
mov
add
xchg
add
xor
fsubl
aam
sub
ret
jmp
pop
sbb
pop
test
sbbl
mov
ja
cwtl
testl
pop
xchg
rcll
cmp
fiaddl
stos
sub
movd
fsubs
mov
push
es
dec
repnz
out
pop
inc
pop
lods
inc
out
mov
and
sbb
faddl
int3
inc
sti
mov
xchg
sbb
loop
xor
in
push
push
jo,pt
int3
cmc
mov
inc
dec
enter
jecxz
jno
ljmp
cmpsb
scas
mov
jl
js
jg
out
lret
jbe
pop
jmp
mov
sti
push
xchg
int
cli
cmp
js
ds
xchg
fdivrl
mov
imull
sar
jmp
ficomps
imul
enter
test
mov
ja
ret
mov
insl
icebp
pop
pop
mov
and
or
push
iret
stos
test
mov
jmp
mov
mov
mulb
imul
inc
mov
add
xor
dec
ljmp
jge
shrb
lahf
ja
add
cwtl
stos
ret
gs
push
add
jle
test
add
or
cltd
cmp
mov
cmovl
cli
out
arpl
cmp
cs
imul
xor
sub
jne
push
enter
and
stos
jne
sub
sbb
dec
cli
sbb
in
add
pop
fcmovnu
sti
icebp
int3
andl
xor
out
jg
outsb
insl
mov
pushf
jp
mov
loop
sahf
test
popf
mov
pop
movsl
push
jl
sub
std
mov
xchg
jge
pop
jae
daa
jl
fs
aam
and
inc
mov
cmpsb
movsl
push
jnp
jge
jnp
mov
std
and
push
cmp
cmpsl
aad
inc
sbb
rol
and
cmp
and
xchg
dec
pop
repnz
and
sbb
adc
or
sbb
push
jge
imull
out
pop
int3
mov
pop
loope
leave
idivb
jmp
ds
sbb
clc
jae
add
hlt
inc
rorb
call
xor
pop
push
addr16
add
hlt
xor
addr16
iret
adcl
gs
mov
ja
dec
sbb
mov
sarl
jne
shlb
add
mov
lret
test
lods
dec
mov
sbbl
xchg
add
in
cs
clc
hlt
add
es
lods
xlat
xchg
add
jp
push
mov
arpl
dec
aad
mov
mov
shl
out
lds
out
sub
mov
subl
js
outsb
rol
adc
add
jns
aas
mov
push
fsubl
dec
arpl
or
jmp
and
mov
push
sbb
popa
jl
add
ret
push
shlb
mov
adc
jnp
rcl
push
data16
jle
cmp
mov
pop
mov
mov
jno
mov
testl
mov
inc
cmp
out
sbb
sub
or
mov
idivb
dec
cli
in
xor
mov
sahf
or
fmuls
add
rolb
xchg
inc
mov
lds
pushf
out
fs
sti
roll
lods
dec
xchg
ljmp
test
and
call
adc
jle
cltd
mul
pop
test
lea
dec
mov
incb
aas
fstpt
addr16
lahf
hlt
or
fwait
daa
add
cmp
jecxz
ss
daa
pop
jno
xchg
xchg
sbb
mov
mov
dec
lds
dec
pop
mov
push
xor
dec
mov
shll
lcall
rorb
adc
jno
pop
je
shlb
mov
sbb
cmp
outsb
mov
lcall
cmc
sub
rcr
cli
add
cs
jae
adc
cmp
push
icebp
push
fnstenv
sub
prefetch
jg
leave
push
inc
adc
push
sarl
and
mov
lds
xchg
cmpsl
popf
inc
jge
cmp
adc
dec
insl
cs
cwtl
pop
xchg
ds
out
add
pop
mov
xchg
xlat
xchg
dec
sbb
or
xchg
and
xlat
pop
mov
mov
pop
addr16
popf
daa
popf
add
mov
scas
clc
push
gs
push
sub
cmp
mov
in
loope
push
pop
or
add
ds
push
xorl
mov
les
in
fimuls
jecxz
pushf
inc
outsb
pushaw
mov
add
xor
sub
adc
sbb
std
push
sub
lds
das
adc
push
jae
push
lock
push
and
push
subb
int3
inc
scas
rcl
inc
in
xor
jmp
xor
jns
lcall
pop
aas
sbb
lahf
clc
es
aas
xchg
inc
ret
js
shll
mov
xchg
pushf
repz
jl
sahf
jo
mov
add
push
xor
lcall
sbb
or
dec
and
push
pushf
int
out
mov
push
sahf
cmp
dec
inc
pop
push
ret
lds
jg
lods
daa
test
popa
or
add
dec
mov
jmp
in
xchg
mov
xchg
pop
cmp
inc
test
loopne
out
and
push
jl
xlat
je
sub
mov
repnz
or
jg
cmpsb
js
push
lret
inc
sbb
sbb
jno
jnp
paddusw
shll
cmp
fst
enter
xchg
sbb
mov
insl
imul
add
mov
fstpl
stos
pop
mov
push
ficoms
insl
mov
in
push
push
hlt
dec
sub
pop
mov
dec
dec
mov
stos
cmc
jp
mov
xchg
fisubs
cmc
stos
xchg
aaa
aaa
pop
fmull
flds
ja
push
pop
ret
xor
out
jns
cmp
push
jle
adc
mov
mov
arpl
fisttps
int
push
cmpsb
push
aaa
mov
dec
jl
dec
mov
mov
je
iret
jae
adc
mov
lahf
and
addr16
adc
cmp
pextrw
inc
xlat
lock
ja
push
sahf
js
aam
popa
out
adcl
sbb
in
jmp
pop
daa
mov
loope
iret
imul
mov
mov
and
sahf
subl
push
fscale
std
inc
test
cmp
aas
loope
aad
push
mov
outsb
rcl
out
movsl
repnz
fnsave
dec
decl
mov
adc
repz
lods
dec
sti
pop
and
xchg
loopne
std
out
mov
roll
cli
mov
add
lods
pop
mov
cmp
jbe
pop
add
lahf
mov
mov
or
into
cltd
imul
mov
jle
cwtl
mov
mov
cwtl
pusha
sub
mov
out
pop
scas
mov
pop
xchg
ret
adc
mov
str
push
repnz
pop
jle
vpcomud
push
notb
ljmp
fisubrl
lods
inc
dec
aad
add
aas
and
insl
movsl
out
outsb
das
in
int
loopne
scas
mov
jle
xchg
outsl
cld
arpl
mov
es
shlb
xlat
mov
testb
popf
in
pop
cmpsl
not
xchg
popa
mov
cwtl
outsl
test
lahf
mov
sti
dec
and
fnstenv
push
int3
jo
dec
jecxz
mov
cmc
adc
out
movsb
in
arpl
aad
inc
jnp
inc
stos
pop
cmp
dec
es
je
aas
jl
mov
pop
xchg
sub
lret
jo
jo
inc
cmp
repnz
xor
cmp
add
mov
adc
xchg
cwtl
lret
push
or
inc
cmpsb
scas
mul
xchg
or
out
mov
xor
lods
std
cwtl
mov
in
lods
in
aas
pop
add
cld
add
movsl
movsb
jo
xchg
jecxz
sbb
imul
xlat
inc
dec
xchg
cmp
sbb
and
ds
fcomi
mov
outsb
pusha
test
sub
das
add
push
pop
iret
stos
lds
xchg
cld
mov
es
cmp
aaa
or
or
and
sar
call
pop
dec
addr16
mov
out
dec
push
cld
rorl
lock
push
jp
pop
dec
pop
sar
pop
cmp
push
fiadds
sbb
cld
inc
mov
xor
push
mov
lret
es
dec
jle
das
test
loop
pop
cmp
cmp
adc
cld
fsubrs
cmp
add
rorl
jg
push
inc
or
mov
mov
fmuls
pop
ret
lock
jecxz
loope
test
mov
mov
xor
xchg
stos
add
cmp
adc
cmp
push
std
mov
pop
xchg
and
sbb
nop
mov
subl
lods
or
xchg
ja
clc
mov
xchg
jecxz
lock
lock
pushf
add
xchg
jl
outsl
add
xchg
outsl
xor
jl
shlb
mov
shrl
pop
mov
xchg
scas
push
add
or
sarb
rclb
mov
cmpsb
jne
call
ja
cmp
test
fs
xor
xor
jno
popf
jae
pop
xor
int3
lods
loopne
jge
pmulhw
xchg
sub
xor
addl
and
push
jno
xorl
insb
pop
adc
inc
test
cmpsb
cld
ljmp
test
cli
jmp
jns
mov
stos
das
sbb
cmp
in
xor
and
xchg
xchg
xchg
mov
cmp
mul
enter
or
aad
aas
call
stos
out
add
out
bound
mov
xchg
fs
dec
sub
cltd
pop
adc
daa
arpl
cmc
mov
jno
fidivrl
in
and
add
cltd
dec
in
xor
inc
xchg
jg
in
sbb
sbbl
xchg
jns
loope
data16
jl
cli
adc
push
loope
mov
insb
aas
test
xor
jb
push
sub
sub
lock
dec
push
cmp
cld
inc
ljmp
jle
jecxz
or
pop
sub
aad
in
iret
inc
aaa
ss
mov
mov
xchg
and
pop
inc
loopne
clc
cmp
cltd
jmp
fidivl
push
mov
das
cmpsl
or
pop
xor
jb
aaa
and
and
adc
dec
cwtl
push
sbb
mov
nop
pop
mov
stos
jl
xor
adcl
stos
and
inc
test
loop
imul
xlat
in
loope
fsubrs
je
insb
dec
nop
sub
sub
scas
push
cmp
mov
add
leave
mov
mov
mov
shll
sub
pop
lods
int3
outsb
call
jns
lret
jmp
xchg
fcomp
push
jmp
cmp
into
out
xchg
aaa
outsb
cmpsb
sti
cmp
repnz
lret
lret
repz
shll
gs
movb
xchg
gs
mov
mov
out
add
xor
cmp
popa
fnsave
mov
clc
aaa
popf
push
cmp
sub
pop
pop
jge
arpl
ja
mov
push
popa
in
dec
jnp
sub
inc
lcall
pop
cs
out
fldcw
mov
nop
mov
test
lods
scas
js
xchg
xchg
outsb
pop
sub
mov
jmp
and
dec
or
popf
scas
dec
movsl
ja
lcall
pop
aaa
adc
and
pop
icebp
jmp
out
jo
rol
or
cmp
test
stos
mov
scas
lahf
call
das
dec
sarb
dec
xchg
mov
cli
sub
pop
inc
cmp
mov
aad
jae
cs
movsb
aaa
bound
scas
mov
sarb
inc
fnstsw
insl
xor
inc
ret
jb
mov
mov
aaa
out
pop
dec
jle
sub
hlt
fistl
js
pop
cs
js
mov
movsl
hlt
fcmovne
lahf
scas
xor
lahf
add
mov
clc
mov
dec
hlt
into
pmaddwd
lods
mov
mull
xor
in
addr16
imul
cmp
dec
push
push
shll
lret
rcll
lea
subb
negb
push
sub
mov
xor
scas
shrb
fs
sbb
hlt
imul
pusha
inc
xor
and
lcall
mov
jg
jns
lods
xchg
mov
push
cld
lods
jge
mov
pop
dec
fwait
xor
xchg
daa
push
sbb
data16
popl
filds
xor
or
pop
les
jecxz
and
inc
inc
in
pop
ljmp
ljmp
or
stc
ds
cmp
leave
and
mov
lret
lret
iret
xor
mov
inc
sbb
mov
insb
jns
sbb
rcll
das
lea
xchg
mov
lds
or
js
dec
dec
stc
dec
leave
xor
out
sti
mov
addr16
jge
push
adc
cmp
mov
dec
mov
add
add
mov
jne
sbb
bound
sahf
mov
mov
movsl
xchg
xor
jb
add
jae
jge
mov
pop
mov
mov
sarl
xchg
mov
mov
mov
push
out
cmp
cmpsb
adc
movntps
outsb
mov
dec
cmp
lret
jnp
loop
enter
mov
xorb
movsl
push
jmp
xchg
rcr
daa
rorl
cmpsl
push
test
leave
ds
enter
decb
rorl
loopne
mov
jb
dec
nop
pop
aas
xchg
gs
lcall
mov
adc
or
les
outsb
dec
sbb
mov
jb
sbb
jbe
ret
and
clc
incl
fs
fsubl
jl
adc
scas
hlt
inc
loop
add
adc
scas
cmpsb
subl
lret
cmp
fisttpl
fs
in
loopne
cltd
test
pop
inc
jnp
addr16
and
scas
iret
in
inc
test
das
add
sbb
mov
ud0
ret
push
mov
into
adc
int
cltd
cmp
enter
or
loope
out
fucomi
mov
sub
add
icebp
mov
mov
test
push
in
popa
or
repnz
dec
push
in
pop
fisttps
cmp
sub
xor
xchg
cmp
adc
test
sbb
jp
jmp
in
sub
iret
push
or
fwait
aad
pop
inc
adc
cmpsl
cld
movsb
push
adcl
xchg
push
arpl
in
aam
mov
lret
and
mov
jbe
movl
push
inc
movsl
repnz
in
and
out
lods
and
loopne
inc
test
stos
or
inc
test
cmp
aaa
scas
jl
gs
repz
mov
add
fldt
or
dec
pop
pop
xor
cmp
in
dec
xrelease
sub
inc
mov
mov
mov
lock
ja
lret
sbbl
and
lahf
sub
mov
insb
sbb
inc
stos
out
mov
cmc
sub
movaps
in
dec
mov
inc
and
inc
dec
lret
inc
rcll
and
cmc
pop
push
psubq
cmpl
mov
jg
dec
adc
hlt
in
and
mov
popa
int3
adc
je
push
mov
dec
addr16
push
inc
daa
into
or
aad
movsl
xor
in
jle
xor
nop
add
pop
push
jecxz
inc
cmpb
fsubl
cmp
fistpll
dec
lds
js
mov
sarl
test
xor
xor
sbb
test
mov
and
rol
cmp
adc
ss
aad
insl
daa
xor
dec
adc
cs
negb
mov
incl
scas
add
arpl
mov
and
adc
push
xor
dec
mulb
pop
cltd
mov
mov
outsb
test
sub
ljmp
filds
test
push
loopw
pop
inc
cmpsl
clc
dec
into
cmp
inc
js
int
mov
push
out
dec
mov
shlb
cmp
sbb
and
cmpsl
jge
notb
jns
push
push
or
pop
push
mov
clc
sbb
pop
fidivl
es
sbb
stos
pop
js
sub
sbb
jecxz
and
jle
xor
ja
dec
fwait
dec
or
js
xchg
xchg
jge
mov
shlb
jo
push
sbb
jl
je
gs
scas
cs
sbb
pop
add
sbb
add
pop
adc
arpl
rcr
ret
mov
push
insl
lods
dec
push
cmp
mov
inc
in
lret
ds
push
lea
jo
xor
jmp
addr16
inc
icebp
test
dec
aam
cmp
shlb
rcl
popa
or
push
jp
popl
adc
adc
pop
aad
ss
das
xlat
pop
cli
out
pop
cli
jmp
push
repnz
je
jmp
inc
clc
add
call
and
addl
mov
cmp
jb
xchg
mov
arpl
fstps
sbbb
and
xchg
inc
ret
adc
bswap
adc
add
dec
int
sub
shrl
test
add
and
add
jmp
cli
add
outsb
nop
pop
es
mov
xchg
enter
lock
mov
jmp
lock
jae
pop
push
jecxz
adc
push
mov
dec
push
cmp
clc
mov
arpl
add
test
es
lock
mov
cmp
push
adc
dec
pop
mov
in
pop
xchg
fldenv
imul
out
jl
dec
xchg
jl
pop
or
adc
rorb
push
repnz
and
imul
ss
mov
enter
xorl
int3
pop
push
daa
add
jecxz
push
sub
stos
add
jbe
adc
xor
pop
adc
scas
js
push
imul
xchg
cltd
dec
int
stos
cmp
lea
sub
fs
arpl
inc
inc
jp
jg
ficompl
adc
mov
mov
gs
rorl
rcrb
dec
add
rcrl
in
dec
jle
lock
in
mov
sub
sub
and
into
mov
push
mov
jmp
xorl
xlat
test
inc
out
and
add
repz
mov
pop
or
lods
repz
push
sbb
adc
out
push
push
pop
inc
iret
icebp
adc
in
enter
xchg
and
ret
adc
lock
or
push
in
adc
rorb
mov
jecxz
cmpps
dec
pop
push
jne
sub
dec
mov
inc
dec
lock
or
pop
ja
in
adc
scas
fucomi
mov
das
mov
int
jb
adc
test
mov
stc
cmpsl
mov
dec
mov
jge
mov
lds
cmp
mov
push
pop
push
in
je
inc
mov
pop
mov
out
test
lods
test
push
out
inc
ja
or
xor
sub
xchg
cmp
fimull
call
xor
ss
xchg
stos
repz
fs
fcoml
lods
dec
push
mov
jmp
sbb
cmc
dec
inc
add
nop
lds
push
jno
xchg
ja
mov
push
sbb
pop
push
push
test
dec
movb
scas
adc
mov
mov
cltd
cwtl
stos
push
xchg
pop
sbbl
hlt
push
arpl
js
xchg
jmp
pop
inc
xor
mov
add
das
daa
sbb
jno
mov
fprem1
pop
adc
jg
loop
cli
mov
sbbl
repz
das
lret
mov
into
or
dec
loopne
in
mov
rep
push
push
pop
adc
jnp
sub
sub
mov
jns
mov
ja
cli
push
clc
daa
jmp
movsl
add
fucomp
icebp
sbb
pushf
add
stos
pop
pop
addb
mov
sbb
fcoms
test
test
jnp
xchg
inc
ret
pushf
push
loope
mov
jno
add
lods
mov
mov
inc
cmpsl
ja
les
icebp
fists
jnp
fldenv
scas
sub
nop
inc
jae
adcl
pop
xchg
mov
mov
into
addb
je
and
insb
mov
sti
mov
cli
add
es
mov
rcrb
lods
inc
lods
iretw
sahf
adc
mov
scas
cli
and
or
dec
cmp
addr16
int
popa
stos
shl
movsl
xchg
addr16
sbbl
dec
loopne
inc
pusha
movsb
ds
out
sbb
icebp
jg
ds
out
fcmovnbe
cld
out
lahf
dec
sub
pop
sti
insb
pop
dec
and
cmpsb
cltd
cld
push
cmp
rcll
xchg
nop
fnstcw
mov
jnp
addl
movsb
arpl
out
out
int3
jbe
call
xor
ds
repz
mov
adc
int3
fnsave
rcrl
dec
aam
loope
adc
add
pop
xor
data16
mov
and
adc
add
stos
cmp
fdiv
test
mov
scas
ror
imull
mov
mov
ficoms
pop
cmp
mulb
cmpsl
xor
lods
adc
in
outsl
mov
xchg
xchg
mov
movb
divb
iret
decl
jnp
jb
lret
insb
sbbl
rorb
or
xor
out
cmp
push
xchg
push
xor
mov
inc
stos
adc
mov
cmp
fwait
push
mov
cwtl
jae
sub
lds
adc
outsl
xchg
cmp
push
push
fdivrs
int3
pop
cli
loope
ljmp
xor
mov
mov
popa
cmpsb
xlat
test
sti
jmp
or
jecxz
jae
cwtl
and
in
inc
movsb
mov
aas
jle
popf
sub
mov
xlat
push
out
adc
or
mov
lods
aaa
ret
add
xchg
sar
pusha
mov
pop
jae
xchg
fs
jle
fmull
orl
inc
pop
repnz
cs
int
add
fstpl
adc
adc
ss
push
xor
mov
mov
lock
mov
xor
jb
adc
cmp
xor
xchg
movsl
test
int3
jg
sahf
cmc
jge
dec
xchg
stc
not
test
mov
push
mov
jb
in
or
adc
xlat
inc
mov
repnz
xchg
cltd
sbb
scas
mov
push
xchg
jo
push
pop
mov
lods
sub
push
xchg
cmp
xchg
mov
mov
mov
add
les
in
in
pop
inc
stos
imul
add
pop
push
shll
adc
imul
and
ljmp
mov
xor
mov
ret
mov
pop
fcmovne
aad
sbb
lock
sbb
out
jbe
icebp
pop
enter
stc
mov
push
pop
pop
popa
cld
mov
or
ljmp
fsubs
mov
cmp
pop
addb
movsl
xchg
aaa
dec
fs
outsb
rep
adc
out
push
xor
mov
scas
dec
ficompl
xchg
cmpsl
push
sti
adc
sub
xor
jl
mov
or
dec
jle
xor
dec
mov
mov
movsb
outsl
mov
lahf
dec
ljmp
adc
nop
adc
and
mov
inc
stos
or
jno
inc
mov
push
loope
sbb
and
inc
ljmp
sbb
jnp
sbb
aaa
dec
lods
cmpsb
inc
mov
mov
call
mov
adc
xchg
test
xlat
push
out
sbb
fsubl
lods
stos
nop
add
xor
mov
loope
into
sahf
or
jmp
adc
jnp
push
aad
inc
in
mov
cs
lods
jle
dec
out
push
jne
cmp
test
outsl
pop
adc
daa
fisttps
or
sub
std
push
fsubs
or
jmp
sub
fsubrl
cmp
add
pxor
loopne
jns
mov
cmpsl
mov
dec
inc
pop
mov
pop
adc
dec
and
inc
setnp
icebp
and
rcrl
and
aas
mov
mov
push
lods
pop
pop
dec
mov
lds
pop
sub
ja
lcall
mov
sub
add
shr
mov
shll
mov
push
jb
stos
enter
sbb
ret
leave
fisubl
jg
pop
pop
insl
pusha
bound
and
in
in
out
movsb
call
int
and
les
subb
inc
jmp
mov
shrb
lcall
inc
pop
adc
in
ret
cs
xor
dec
fmuls
inc
iret
xor
fiadds
xor
stos
and
xor
jle
inc
push
movsb
mov
sub
out
enter
out
and
or
dec
mov
sbb
nop
arpl
and
fiadds
or
loopne
and
les
mov
lret
push
gs
lret
sbb
movsb
add
arpl
jae
in
or
mov
and
sub
pushf
rcr
or
cld
dec
stc
push
inc
sbb
mull
lds
scas
notb
jg
sub
popa
enter
outsl
xor
push
out
inc
and
std
cwtl
sarl
addr16
lods
and
jle
or
inc
add
xchg
push
imull
fildl
iret
jge
cwtl
fdivr
mov
push
sar
and
ret
inc
push
aad
mov
in
les
or
loopne
push
inc
lret
and
leave
test
bound
ja
scas
out
scas
hlt
testl
test
not
xor
fldl
lahf
mov
push
jmp
add
or
dec
clc
jle
mov
movsl
jae
fisttpl
cld
sub
cmp
mov
push
xorl
fs
cwtl
pushf
divb
sbb
out
xchg
repz
mov
add
inc
mov
mov
out
add
int3
inc
addr16
mov
cld
aad
sar
fiaddl
add
and
jb
mov
xor
dec
rcl
pop
adc
test
pop
outsb
xchg
sub
cmp
inc
mov
mov
jns
dec
mov
es
jle
and
cld
or
cmp
cmp
pushf
adc
jmp
xchg
lock
mov
popf
aad
mov
movsb
imul
outsl
fcomi
ret
inc
rclb
jo
inc
divb
ds
cltd
sub
js
add
sub
lods
out
shl
movsb
xor
jmp
lret
mov
dec
pop
int
jmp
pop
or
sbb
loop
or
rcrb
dec
aam
push
and
mov
movsb
dec
add
jmp
test
adc
mov
pop
out
sbb
and
test
push
pop
mov
pop
popa
xlat
xchg
push
xor
scas
les
test
bnd
out
sub
lea
mov
fsubrl
aaa
pop
loopne
dec
cmp
loope
push
cmp
rcr
cli
lea
inc
addl
shlb
mov
xchg
mov
or
mov
ret
lcall
mov
jmp
lcall
loop
arpl
sbb
and
add
xchg
add
add
dec
mov
movsl
cmp
cmpl
out
mov
xor
out
sbbb
subl
insl
ljmp
outsl
adc
fadds
adc
movb
imul
data16
imul
scas
sub
sbb
push
cwtl
inc
add
popf
fstpl
xchg
mov
jo
lret
and
mov
inc
mov
push
push
lret
add
add
mov
popa
dec
lcall
xchg
push
cmp
jbe
ficoms
lcall
add
outsl
inc
jo
in
mov
test
sbb
jns
test
pushf
mov
outsb
or
jg
sub
sub
lods
insl
fisttpl
xlat
out
aas
or
push
popa
outsl
cmp
scas
mov
flds
mov
imul
sub
sub
jge
lret
xor
popl
sbb
adc
movsb
lds
data16
cltd
clc
icebp
loopne
cmpsl
popf
or
imul
fadd
fistpll
gs
lock
enter
cmp
push
mov
outsb
sbb
mov
pop
not
ret
mov
lret
iret
aaa
mov
bound
insb
cmc
fs
jp
jle
jmp
pop
fs
dec
jne
test
jne
rolb
and
dec
xorl
mov
cs
das
sahf
into
js
dec
adc
push
movsb
addr16
xor
jp
adc
cmpsl
stos
and
decl
addr16
dec
adc
mov
mov
mov
pop
fisubrl
adc
push
or
xor
and
mov
jb
adc
adc
jb
aam
or
lds
add
repz
xchg
xor
mull
stc
xchg
dec
clc
out
jecxz
dec
ja
lea
out
sbb
mov
stc
outsb
incl
clc
stc
mov
sbb
sub
sbb
popf
push
stos
pusha
xchg
adc
xor
push
xor
lods
push
or
insl
in
xchg
divl
inc
in
das
xlat
lods
mov
push
or
stos
add
pop
mov
int3
adc
idivb
pop
jecxz
or
jno
lods
fwait
push
icebp
cmp
xchg
sar
sbb
sub
xchg
jb
inc
into
cmp
out
pop
mov
jecxz
adc
test
pop
movsb
rolb
lahf
ja
enter
scas
pop
xorb
pop
dec
add
ljmp
cmpsb
pop
gs
sbb
xchg
in
pop
push
mov
subl
xorb
adc
xchg
xchg
das
adc
das
out
daa
pop
sbb
fiadds
adcl
stos
decl
sub
sbb
int3
arpl
dec
fbld
pop
mov
shl
fisubrs
movsb
mov
jne
bound
imull
imul
jae
lahf
xchg
or
mov
cwtl
adc
sbb
es
aaa
push
ss
push
dec
sub
adc
out
lods
cmp
lea
movsb
fldl
mov
jae
mov
scas
mov
scas
adcl
mov
sbb
cmpsl
sbb
aaa
mov
imul
xchg
xchg
pop
cmp
fidivrl
into
jmp
adc
xchg
xor
vpmullw
lahf
cltd
lahf
add
add
mov
lock
xchg
insl
insl
rolb
je
jnp
fs
insb
imul
add
inc
push
adc
les
xor
jmp
add
test
jecxz
cmc
lds
sbb
pop
adc
sub
inc
leave
add
jbe
jmp
ret
jp
sbb
mov
pushf
cmp
add
add
pop
mov
popa
mov
ja
push
and
xchg
pop
lcall
adc
das
dec
into
sub
xchg
mov
sbbb
es
int3
icebp
fldl
cmp
push
stos
les
fistl
out
jg
jno
push
enter
push
fistps
loopne
cltd
ret
dec
cltd
daa
loopne
mov
test
push
cmp
fs
bound
sbb
adc
sbb
jmp
jne
cmpsb
fistl
sbb
aas
inc
mov
and
cmp
testb
out
mov
inc
out
aaa
icebp
add
aad
xlat
hlt
jne
xchg
adc
mov
es
xchg
mov
jge
imul
xchg
shll
jp
mov
and
inc
loopne
jecxz
les
jo
mov
int
xchg
jg
xor
outsb
cmp
or
and
or
dec
inc
adc
pop
imul
scas
lods
scas
je
cltd
mov
and
fwait
popf
and
sti
imul
push
cltd
mov
fstl
test
sub
fnstcw
movsb
fsubrs
ja
cmp
push
push
sti
jp
inc
or
pop
jle
mov
pop
xchg
inc
jge
cmp
or
lock
lds
mov
les
and
pop
out
std
fsubrl
push
fbstp
push
daa
cltd
dec
sbb
fisttpll
shll
jae
popf
sub
jle
xchg
mov
cmpsl
cmc
inc
xor
mov
adc
jnp
mov
stos
hlt
js
outsl
sbb
cmc
fsubrl
push
cmp
repz
jnp
sbb
mov
xchg
mov
aam
xchg
push
mov
xor
bound
push
fstp
xorb
mov
pop
cmp
je
jb
aam
imul
xor
popa
aaa
mull
cmp
inc
xchg
adc
xchg
insl
push
sahf
cmp
jae
int
push
sbb
sub
sahf
push
ret
or
fadd
inc
adc
jmp
dec
pop
pushf
mov
mov
shll
mov
push
cld
sub
out
insl
imul
mov
xor
xchg
sbb
ja
je
xchg
scas
xchg
jne
inc
out
subb
push
inc
ja
jo
inc
xor
mov
jne
cltd
int
xor
cs
test
cmc
jecxz
movsb
adc
ds
mov
push
pop
bound
adcb
mov
jb
daa
ja
cmp
inc
jg,pn
inc
and
dec
repnz
jl
mov
das
das
ret
lret
lahf
in
mov
push
mov
lahf
mov
in
lods
mov
cld
cli
repnz
cmp
mov
cmp
jno
sub
push
and
adc
movsb
or
roll
test
out
test
test
lock
push
xor
ljmp
and
dec
pop
adc
mov
pusha
dec
outsl
mov
loopne
in
add
mov
cmp
les
inc
out
inc
adc
inc
push
add
add
gs
fldl
xlat
jnp
mov
insl
add
inc
xchg
pop
mov
and
pop
mov
or
hlt
cltd
cltd
mov
mov
test
iret
push
int3
push
jl
out
mov
xor
call
xchg
in
fsubl
cwtl
fdivl
inc
xor
mov
add
pop
jge
adc
negl
dec
mov
add
jmp
pop
cld
daa
push
out
jmp
leave
xchg
loop
xor
cltd
add
lret
xlat
pop
mov
inc
lea
jne
addr16
push
push
inc
cmp
mov
cmp
cltd
out
lock
cmp
mov
jo
mov
loope
mov
inc
cmp
and
add
mov
add
xchg
xchg
jne
lahf
mov
jmp
pop
pop
jl
leave
cld
fisubrs
mov
adc
push
shrb
aam
push
lods
std
fmull
sub
ss
imul
mov
push
or
or
adc
stc
xor
adc
mov
xchg
insb
jmp
mov
fadds
mov
mov
js
filds
and
xor
loopne
inc
ljmp
mov
cmp
aad
sbb
and
dec
rol
mov
adc
cs
sti
xchg
pop
scas
std
std
iret
mov
dec
inc
ficoml
lods
fisttpl
and
cmp
dec
push
dec
xor
dec
cs
ret
jne
in
mov
jecxz
fsub
stos
mov
fistl
pop
cmpsl
pushf
and
mov
movsl
aam
push
cwtl
scas
push
imul
fwait
push
cmp
or
sub
and
dec
rorl
ss
outsl
cltd
ds
add
push
lods
cmp
loop
repz
jo
or
mov
movsb
lock
out
pop
sub
xchg
sub
mov
jmp
dec
in
loope
mov
fs
inc
imul
data16
push
or
imul
fcmove
xchg
out
push
int3
xor
mov
mov
sub
out
cltd
and
ljmp
sbb
pop
imul
leave
dec
mov
cmpsb
addr16
xchg
mov
pop
adc
test
xlat
fisttpl
test
pop
xchg
fistpll
in
mov
mov
push
sub
enter
test
ljmp
ret
push
ret
dec
xor
jg
out
fstpt
int3
lea
addl
mov
mov
in
loopne
mov
push
addr16
fmuls
mov
nop
sbb
lods
dec
mov
mov
and
in
aad
cltd
or
sub
pop
xchg
in
adc
xor
shr
shlb
icebp
adc
inc
insb
loop
xchg
sahf
add
aaa
sbb
movsl
sub
shrb
aas
xchg
xchg
inc
repnz
bound
movsl
sub
pop
and
adc
in
loop
push
repz
adc
jmp
insb
and
mov
jo
jno
shrl
mov
fwait
push
add
pop
inc
xchg
push
out
out
daa
fistps
mov
fucom
xor
daa
cli
fisubrs
xchg
or
inc
les
ficompl
cmp
fisttpl
mov
jl
jge
push
inc
xor
jnp
lcall
cwtl
es
sbbl
jge
inc
js
dec
sub
repz
shlb
push
pusha
test
sbb
cwtl
divb
lock
dec
jp
xchg
fxch
xor
and
das
stos
pop
add
insb
lods
inc
push
in
stos
xchg
mov
inc
into
stos
cli
outsl
sti
sbb
cmpsl
iret
decl
daa
sub
cmp
test
lea
mov
leave
dec
adc
aas
xor
add
push
outsb
test
inc
test
mov
sub
into
adc
adc
mov
cmp
neg
jne
cmp
sub
push
inc
xchg
mov
adc
push
sarb
pop
mov
mov
into
xchg
sub
lcall
pop
pop
aad
sbb
in
mov
push
cmp
xor
pop
mov
call
lock
and
in
loope
repz
test
dec
dec
daa
inc
and
lods
jns
divb
cli
lock
dec
cld
sbb
arpl
xor
xchg
dec
sub
clc
jne
cmp
nop
ret
inc
or
les
pop
cwtl
call
fwait
add
cmc
stos
sar
add
mov
and
adc
xor
dec
or
pop
testl
aad
jb
jo
hlt
ficoms
inc
out
les
mov
out
add
push
icebp
or
test
sub
dec
add
or
push
mov
out
sub
xchg
add
fmulp
inc
push
std
flds
sbb
jb
mov
jbe
je
test
fs
add
or
pop
sub
int3
mov
loope
iret
cld
hlt
addr16
mov
jmp
pop
data16
mov
inc
pop
jge
ficoml
daa
hlt
or
jp
adc
jle
xchg
test
jb,pt
mov
sub
pop
pop
adc
sub
jns
xchg
jnp
test
lret
add
sar
mov
sahf
jbe
leave
lods
inc
mov
mov
pop
xchg
jbe
movsl
or
fsubl
pop
faddl
mov
mov
lods
dec
mov
stos
movsb
adc
call
xchg
roll
stos
cmp
incl
xchg
cs
subl
jb
xor
into
mov
dec
test
into
insb
setne
stos
xor
test
and
sti
mov
jb
xchg
inc
popa
hlt
and
jbe
adc
mov
xor
jb
pop
jl
sub
mov
xchg
jg
aad
pop
xor
and
xchg
mov
add
loope
lods
in
adc
jno
jg
pop
jb
inc
jp
int3
jecxz
add
outsb
jo
outsl
es
mov
xorl
lods
mov
sbb
in
call
add
xchg
jecxz
mov
adc
rorb
jmp
mov
sbbl
repnz
cmc
lahf
neg
lret
fsub
jnp
push
stc
idivl
pop
mov
xchg
daa
sub
imul
sub
repnz
inc
loop
sub
dec
pop
cltd
fwait
cmc
lods
repz
shll
flds
int
xlat
inc
aad
pop
push
jecxz
outsb
or
mov
arpl
pop
add
bound
xchg
adc
sbb
push
mov
xchg
leave
or
add
jno
inc
add
das
fsubl
iret
inc
rorl
xlat
mov
clc
icebp
and
cmpsb
sbbb
outsb
dec
mov
jl
pop
cmova
rorb
bound
lods
jb
ret
pop
dec
inc
dec
rclb
sub
in
mov
fadds
push
lods
aaa
or
xlat
inc
xor
push
or
scas
je
sbb
and
inc
mov
xchg
cmp
pop
dec
ja
test
clc
mov
test
in
stc
out
les
pop
pop
lahf
adc
lret
call
lret
inc
push
dec
or
sub
lods
mov
inc
jl,pt
rolb
xor
mov
sbbl
xchg
lret
rorb
enter
push
adc
lods
mov
sbb
xchg
or
lcall
daa
repz
and
popa
movsb
dec
movsb
and
cmp
add
sub
test
popa
sbb
xchg
mov
pop
sti
addl
cmc
jnp
jecxz
lret
push
dec
fcomp
pop
mov
dec
cmp
shrl
inc
hlt
xor
mov
jne
shrb
loop
ret
mov
add
push
push
lock
mov
xor
scas
rolb
mov
movsb
pusha
stos
mov
out
test
mov
sbbb
dec
inc
pop
inc
dec
cltd
imul
aaa
repz
push
clc
pop
fmulp
inc
loop
jg
fmul
cmpsb
push
cmp
push
push
add
dec
push
rorb
movhps
mov
lods
and
inc
adc
mov
sub
into
add
sub
push
out
add
mov
add
or
addr16
out
xchg
jle
dec
rcl
jl
xchg
test
or
aaa
mov
inc
jp
dec
dec
mov
ja
xchg
aas
or
outsb
pushf
aas
add
mov
sub
gs
pop
addr16
pop
or
xor
jmp
aad
or
mov
add
sarl
add
std
xchg
arpl
sub
fnstsw
dec
xor
hlt
sub
arpl
jo
ss
add
push
cmp
adc
sub
stos
mov
sbb
or
lcall
xlat
mov
mov
mov
arpl
or
pushw
fs
mov
or
flds
loop
xchg
sub
and
bound
jns
leave
inc
popf
aas
rcrb
mov
push
xchg
dec
jb
sub
pop
mov
xchg
lahf
inc
dec
mov
or
lods
aad
mov
rcrl
sbbl
push
lret
mov
mov
push
pop
cmc
jg
out
into
cmp
or
sbb
jge
push
or
out
adc
rclb
iret
fdivrl
jb
outsb
mov
push
jge
jbe
pusha
int
jle
xchg
push
push
add
in
inc
xorl
mov
sahf
jo
push
movsb
mov
cmp
in
mov
ret
xor
sbb
xor
adc
jmp
mov
imul
xchg
xor
add
gs
mov
addr16
stos
shlb
xor
loope
inc
pop
ljmp
and
mov
mov
jnp
test
out
push
adc
cmpl
mov
xor
fistl
dec
pop
in
nop
jb
dec
filds
inc
sbb
fsubrs
adcb
push
in
decb
dec
insb
scas
xchg
rcl
jecxz
cmp
scas
mov
into
mov
sub
stc
or
jo
data16
add
mov
xchg
ret
fcmovb
mov
nop
pop
ja
inc
fcompl
movsb
jb
adc
pop
jp
push
push
and
add
ljmp
gs
lock
push
cmp
fs
add
inc
jmp
sbb
cltd
push
mov
or
push
sub
sub
xor
sbb
outsl
mov
lock
fidivrl
in
or
lock
pop
fs
je
lcall
jae
xchg
cmpsb
aam
add
and
int
jb
cli
pop
xor
xor
xor
xadd
xchg
sarl
rol
mov
iret
test
repz
push
cmp
cmp
dec
stc
loope
fucomi
pusha
mov
jp
inc
out
adc
lods
mov
shlb
push
pop
push
dec
inc
sub
scas
push
or
mov
out
dec
xchg
mov
mov
ret
scas
es
loopne
and
fcoms
out
sbb
sahf
js
xor
xor
jae
jae
cmp
loope
std
push
cmp
sbb
inc
inc
jp
and
push
push
push
or
mov
cld
push
push
fwait
cmp
mov
xorl
popf
dec
fsubl
inc
push
mov
dec
ret
pop
mov
push
shlb
clc
js
cmpsb
mov
call
hlt
loope
mov
sbb
sub
rclb
into
push
ds
bound
cltd
jbe
scas
mov
imull
gs
jle
inc
icebp
or
loop
hlt
in
cmp
leave
lock
jb
xlat
rcrb
sub
fistps
add
roll
in
push
sbb
out
jecxz
aas
mov
jno
adc
xchg
xchg
sarl
insl
rcll
int3
xchg
jp
adc
aaa
mov
es
mov
and
adc
ret
hlt
sub
xor
andb
dec
sub
fdivrl
xor
out
cs
xchg
movsb
xor
fs
mov
mov
dec
test
push
pop
xchg
rcl
leave
adc
pop
mov
rcrb
sub
sbb
lock
pop
ret
dec
mov
mov
shrl
insb
insb
adc
imul
adc
aaa
imul
mov
lret
adc
sbb
dec
andb
mov
mov
or
mov
mov
jmp
imul
xlat
xor
pop
dec
cltd
addr16
and
push
mov
lret
xor
lret
add
movsb
movsl
or
mov
mov
jnp
icebp
cld
add
jmp
cltd
cmp
xchg
jp
cmp
lret
add
adc
add
leave
call
andb
jl
jne
lahf
movsb
adc
in
ret
js
mov
jne
adc
inc
cltd
rolb
scas
out
lods
push
push
fiadds
out
xchg
test
adc
inc
dec
push
push
insb
lahf
jmp
mov
jge
jle
mov
mov
mov
cwtl
test
mov
cmc
pop
push
add
pop
jmp
mov
xchg
mov
sahf
sbb
mov
es
icebp
das
lcall
bound
outsb
lahf
idivl
push
xor
jp
loopne
push
in
iret
shlb
cmp
dec
outsb
add
mov
hlt
pop
and
mov
xchg
jne
sbb
jbe
sub
movsb
dec
and
stos
jno
daa
sub
rolb
jle
leave
adc
xchg
cmp
lahf
or
sub
sub
jecxz
imulb
cmc
mov
sbb
mov
adc
push
clc
dec
xor
mov
dec
mov
xchg
into
sbb
movsb
out
movsl
in
lahf
dec
xor
or
je
push
sub
je
push
sahf
call
imul
addl
jb
loope
xor
rcrl
xor
shl
js
test
in
call
adc
push
pushf
mov
inc
pusha
dec
push
and
jne
ret
mov
inc
dec
ljmp
nop
jns
in
pop
and
movsl
scas
orb
mov
in
lock
add
dec
pop
sbb
ss
mov
popa
ret
and
fsubrp
add
or
rorb
sub
fstpl
mov
xchg
push
xchg
xor
imul
call
dec
push
js
pop
mov
shll
add
daa
cmpsl
scas
insb
xadd
lret
cmc
cmpsl
cmp
inc
xchg
jo
dec
mull
and
cltd
dec
jb
adcl
rolb
movsb
movsl
iret
cmpb
sbb
adc
das
pusha
cmp
jle
in
sub
adc
pop
mov
xor
scas
scas
sahf
insl
or
xchg
pop
rcrb
std
es
divps
xchg
dec
xor
ficoml
fnsave
jbe
jb
js
mov
les
xor
jo
mov
aas
xor
sbb
and
mov
cmp
sti
in
mov
add
jmp
push
push
dec
pop
fs
xchg
sub
push
sbb
cpuid
mov
jg
scas
inc
mov
pop
add
jb
pusha
dec
inc
pop
push
xchg
ret
cmp
test
mov
and
test
xchg
xchg
xor
call
fs
jae
inc
lds
mov
popf
int
daa
cmpsb
movl
rcrl
dec
scas
jb
mov
sbb
ror
out
adc
jno
inc
stc
jae
jbe
stc
jo
scas
sbb
loopne
ljmp
int
add
adc
jno
sub
xlat
xor
mov
add
sti
sarl
dec
insl
lods
ss
insb
fst
push
sub
push
jmp
std
inc
leave
xchg
cs
incl
xchg
shlb
pop
iret
shlb
pop
mov
mov
jp
ja
fdivrs
int3
inc
or
lret
mov
loopne
in
sub
push
inc
jo
hlt
cmc
jns
lret
xchg
jb
test
xor
mov
jne
jbe
jb
jbe
and
add
push
mov
cmc
xchg
popa
jl
xor
sbb
movsb
or
rcrb
loope
fstpt
shll
xor
les
in
mov
iret
aas
mov
or
xchg
or
dec
enter
xchg
add
push
sub
pop
push
dec
dec
pop
dec
fstpt
cmc
adc
rclb
jl
xor
out
je
cld
xchg
push
add
jne
xchg
daa
xchg
sahf
pop
dec
sub
push
and
inc
push
adc
subl
iret
out
pop
loope
mov
push
cmp
pop
pop
ds
adcb
es
pushf
pusha
sarb
sub
iret
imul
add
cmp
imul
xchg
push
out
jo
push
and
out
mov
xchg
ds
rclb
pop
or
mov
mov
insb
or
pop
adc
and
mov
xchg
negl
stos
cmpsl
cmp
pop
idivl
in
mov
jo
push
jb
mov
jg
mov
add
push
out
cmp
xor
and
outsl
xchg
test
icebp
testb
xchg
ss
xor
jecxz
clc
pushf
test
in
jecxz
push
nop
xchg
jne
fistpll
mov
outsl
roll
xor
mov
out
lret
dec
and
push
imul
xchg
mov
js
stc
leave
popf
mov
mov
pop
push
lea
shl
sti
xchg
fcoms
loop
xchg
dec
pop
jle
ja
loopne
insl
jne
jl
ret
sti
push
les
sti
lock
cmpsb
pusha
pop
push
dec
pop
and
add
shlb
aam
add
mov
outsb
sub
jmp
xor
mov
push
lcall
pop
or
addr16
mov
in
jl
arpl
loopne
je
pop
shlb
push
enter
call
iret
in
leave
sbb
xchg
mov
out
les
mov
insb
cmp
mov
js
dec
inc
add
mov
loopne
rclb
and
int3
cwtl
movntps
fwait
xor
imul
xchg
arpl
mov
dec
and
mov
adc
jge
sbb
pop
mov
and
popa
sahf
pop
sub
jb
test
push
adcb
mov
fistpl
jl
std
aam
inc
cli
lea
movsl
es
imul
imull
gs
jg
inc
insb
nop
ds
daa
ljmp
xchg
sahf
loop
push
rcr
cmp
test
mov
adc
inc
addb
fstl
jmp
jecxz
mov
stos
cmp
and
popf
sahf
mov
inc
jo
leave
lahf
inc
add
jge
cwtl
sub
mov
add
add
xor
sbb
ds
scas
adc
insl
push
sbb
mulb
mov
test
ja
mov
cltd
lds
pop
and
and
jmp
jnp
inc
out
js
xchg
xchg
jmp
xor
cs
dec
pusha
inc
test
gs
divl
mov
xor
pushf
pop
jns
mov
in
and
rolb
mov
or
in
addl
adc
subl
lcall
push
xor
cmp
test
out
and
dec
sbb
add
xchg
pop
insb
or
cli
mov
sub
mov
xchg
fdivp
call
jge
enter
xchg
adcl
loop
adcl
lods
rclb
sarl
sub
in
test
mov
in
push
or
and
mov
inc
inc
sbb
jecxz
adc
rcl
fiadds
jnp
jae
cltd
enter
adc
out
mov
jb
test
adc
fwait
in
fstl
jb
hlt
ret
cmpsl
in
stc
dec
negl
push
jle
dec
sbb
jae
cmp
fadd
imul
add
shrb
mov
je
and
fidivl
adc
mov
dec
jb
sbb
inc
das
lock
dec
mov
add
enter
sub
pop
jb
push
dec
dec
add
arpl
sbb
das
and
loope
adc
pop
shlb
popa
enter
jp
gs
jnp
cli
xor
mov
jbe
lods
and
push
popa
bound
dec
xor
and
jns
mov
jl
dec
fstp
in
inc
test
pop
cs
push
inc
cmp
inc
cli
mov
out
gs
mov
cmp
mov
in
imul
frstor
das
add
andb
out
test
add
fwait
call
push
imul
and
push
test
adc
movl
imull
out
jecxz
hlt
push
out
mov
inc
lahf
shr
repz
mov
leave
shlb
push
ficoml
subl
incb
shll
add
leave
dec
shlb
mov
inc
sub
idiv
push
xlat
jmp
mov
dec
leave
jbe
mov
imul
adc
shll
int
xor
pusha
das
add
push
scas
std
movsb
dec
add
sub
xchg
adc
mov
fwait
sub
filds
imull
imul
cmp
sub
nop
movsb
push
pop
sbb
mov
mov
sbb
cmp
jbe
sub
jl
push
inc
std
mov
pop
mov
data16
not
jp
xor
neg
aas
inc
and
imul
xchg
mov
push
jecxz
mov
add
push
or
push
pushf
imul
xchg
out
jmp
mov
pop
mov
es
mov
aas
xor
mov
fiaddl
test
pusha
std
inc
cmp
addr16
ficoms
xchg
xor
and
and
cmc
adc
push
mov
xchg
call
decl
roll
int
lahf
or
and
cmpsl
icebp
cmpl
pop
jecxz
movsl
xchg
lcall
mov
cmp
int3
dec
movl
lea
mov
orl
test
sub
das
xchg
out
jnp
or
pop
sub
int3
aas
fimull
mov
lret
xor
sbb
mov
xchg
das
add
loopne
sbb
cmp
mov
lret
mov
pop
pop
mov
xchg
lds
subb
cmpsl
out
sahf
sub
fs
sahf
add
adc
inc
enter
sub
inc
sbb
insb
push
add
int
jge
pushf
pop
sbb
test
das
mov
xchg
pop
add
xchg
dec
xor
cmpsb
lret
pop
jnp
sbb
mov
mov
add
add
jg
aaa
push
or
cmp
mov
cmp
scas
fmul
pop
dec
jge
xchg
jne
mov
je
and
hlt
es
iret
dec
xchg
xchg
cltd
pslld
pop
call
in
iret
push
inc
adc
adc
sub
adc
cmp
push
ret
or
out
ljmp
rcll
int
adc
mov
cmpsb
push
mov
mov
sub
lahf
pop
jns
add
aad
push
and
stc
out
inc
negb
int3
pop
sub
sti
mov
cli
pop
ljmp
in
test
sbb
sub
dec
mov
jmp
fucomi
negl
lret
repz
out
test
mov
mov
fisttpl
arpl
jae
adcl
mov
out
jl
cmp
aam
stos
xchg
push
insl
dec
js
iret
jg
shlb
pop
in
pop
cmpsl
sub
inc
imul
mov
aam
dec
dec
insb
mov
dec
mov
xor
jle
out
dec
fwait
stc
pushf
sub
add
and
sub
icebp
xor
jb
sbb
repnz
cmp
xor
shll
pop
xor
into
sub
loope
int
mov
cmp
pop
mov
setne
xchg
orb
das
or
xchg
out
xchg
jmp
push
and
clc
pop
dec
sub
fistl
lcall
adc
jae
ljmp
mov
pop
dec
push
inc
gs
sub
je
and
stos
ret
push
stc
stc
push
jne
xchg
adc
push
or
sarb
inc
or
lds
fwait
jno
sti
cmp
lds
shll
mov
fstl
cmc
xchg
cmp
jp
data16
push
ret
xchg
or
mov
mov
xchg
mov
hlt
cld
jp
pop
mov
inc
loop
add
dec
fcomps
mov
jge
aam
mov
sbb
xchg
or
mov
shlb
pop
jge
mov
sub
stc
cmc
inc
or
adc
dec
push
mov
cmp
andb
push
out
pushf
mov
scas
scas
insl
pop
decb
push
int
dec
addr16
push
cmc
fisubrs
repnz
mov
mov
daa
mov
jb
cmp
sub
pop
jno
pop
inc
fidivrs
pop
fs
dec
adc
push
sub
dec
fistpl
mov
loop
or
sbb
aad
adc
daa
adc
push
mov
lret
sub
in
mov
ja
jmp
lods
mov
loopne
cmp
add
push
lods
mov
sub
lods
xor
ret
xchg
outsb
cmp
dec
xchg
sti
js
stc
repnz
mov
out
and
and
hlt
add
dec
out
pop
ds
inc
aas
mov
xchg
and
and
in
aaa
jb
pop
cld
mov
je
out
sti
out
in
xchg
daa
xchg
or
sbb
insl
loop
mov
aam
xchg
ss
cmp
fisubrs
fnsave
cwtl
push
shlb
xor
add
adc
push
js
inc
stos
adc
and
mov
adc
and
sti
fs
sbb
cltd
dec
push
pop
imull
jbe
lahf
movsl
movsl
mov
mov
test
shrb
orl
test
rol
xor
lahf
mov
dec
imull
repz
shll
push
clc
hlt
imul
in
push
or
call
dec
add
movsb
jle
adc
jbe
inc
js
icebp
jge
pop
jns
mov
cmpsb
mov
jmp
das
fsubp
sub
and
cmp
dec
cmp
in
push
jbe
and
cmp
xchg
outsl
jae
addr16
in
stos
adc
and
into
sub
ja
push
add
mov
or
inc
xchg
mov
xor
lock
out
sub
adc
add
push
arpl
xchg
rcr
imul
ficomps
jge
lods
xchg
push
sub
mov
rorl
pop
clc
pop
dec
cmp
loopne
jecxz
in
rcrl
lahf
pop
mov
daa
add
scas
pop
shlb
cli
xor
sub
sub
scas
xchg
mov
pushf
pop
jp
sbb
adc
bswap
and
pop
fadds
lret
cmpsl
cmp
push
sub
jle
jae
movsl
xor
mov
mov
or
jbe
out
mov
gs
and
xchg
lcall
inc
xor
in
lods
out
mov
adc
jo
shrb
gs
gs
and
aam
mov
mov
js
cmp
push
ja
dec
aam
mov
fs
jno
fwait
sub
push
pop
fisubl
lcall
orb
or
mov
sub
or
decl
imul
sub
into
add
mov
lret
iret
int3
dec
jno
cmpsb
cmp
or
mov
add
pop
out
xchg
js
inc
add
mov
popf
leave
rcrl
mov
outsl
jb
arpl
sbb
aam
jl
in
js
push
mov
outsl
push
cmp
outsb
rcrb
ret
or
ss
insb
mov
subb
inc
sub
inc
pop
mov
cmpsb
pop
jne
rol
outsl
pop
xchg
stos
stos
jns
mov
add
jnp
cwtl
nop
stos
push
not
inc
cmp
shl
cmp
out
pop
sub
cmp
jmp
ret
shlb
pop
shlb
movsl
add
mov
lcall
mov
push
ss
jne
dec
out
jb
cmp
inc
jae
les
push
fsubr
frstor
fs
mov
inc
mov
adc
dec
jg
jle
pop
fs
cmp
inc
or
leave
insb
aas
sbb
adc
or
inc
pop
scas
adc
cld
scas
aas
jae
lea
jae
outsl
repnz
jle
adc
inc
sti
pop
mov
pop
pop
loop
jbe
xchg
or
push
das
stos
xchg
pavgb
in
mov
scas
aad
lods
push
scas
mov
cmp
xchg
xor
mov
adc
cmp
js
jae
mov
push
xor
cli
push
dec
jp
loope
nop
ljmp
hlt
fists
cmp
xor
insb
push
push
cmc
cs
lock
xor
fwait
dec
mov
mov
gs
lds
addl
xchg
cli
push
cli
add
sbb
sub
repnz
leave
sbb
jg
repz
cmp
mov
mov
movsl
push
pusha
cmc
mov
fldenv
push
jbe
mov
jg
sub
add
push
mov
pop
lret
dec
xchg
popa
xchg
jmp
jecxz
mov
sub
fs
sub
in
aas
sbb
in
inc
mov
adc
cmc
xorl
jb
cmpsb
sbb
out
pop
or
out
fsts
mov
aad
stos
inc
sub
dec
cli
jae
sar
jns
bound
hlt
pop
in
add
mov
pop
bound
inc
popf
psraw
cmp
jle
sbb
xor
rcrl
cs
xchg
movsb
adc
pop
jge
and
jno
and
sub
push
sbbl
xchg
inc
ficomps
std
pop
sub
mov
cwtl
add
mov
lock
std
push
mov
leave
repnz
sbb
jns
xchg
mov
pop
out
clc
das
out
pop
fldcw
int
inc
mov
mov
pop
mov
sti
scas
mull
loopne,pt
aas
push
out
fwait
insl
outsb
dec
and
hlt
jb
sub
icebp
loop
into
add
shlb
bound
sti
sbb
and
mov
cmp
mov
pop
push
xchg
xchg
xchg
out
adc
sub
cmp
jle
cmpw
dec
jmp
add
sub
jle
outsl
sub
pop
xchg
inc
inc
dec
outsl
cld
and
jbe
mov
inc
push
jnp
cmp
hlt
jnp
mov
orb
sbb
push
mov
dec
push
popf
cmp
ja
add
sub
stos
fstpl
mov
fisttps
inc
into
xchg
idivb
push
jge
xor
dec
mov
pop
xchg
in
sub
xor
dec
dec
pop
mov
mov
pop
xchg
jmp
lock
insl
jge
jb
testl
cmpsl
mov
dec
xchg
ja
loopne
cmp
arpl
push
mov
cltd
lods
adc
loop
adc
orb
out
pusha
push
push
fwait
sub
fidivrs
lret
data16
lods
jl
mov
scas
mov
icebp
insb
test
fnstsw
fnstcw
dec
push
in
popa
adc
mov
xor
cmp
mov
and
out
xor
outsb
sbb
mov
push
and
xchg
xor
imul
sti
sub
lods
daa
jl
and
xchg
adc
jecxz
cwtl
or
pop
shrl
mov
in
les
xchg
in
dec
stc
ljmp
clc
inc
sbb
enter
stos
xor
scas
ss
jo
sbb
xchg
fsubl
mov
and
sbb
into
hlt
mov
dec
adc
lcall
xor
sbbl
jbe,pt
dec
jg
push
push
inc
xor
sbbl
xchg
sub
mov
pop
jle
sbb
insb
loopne
ret
sbb
stos
mov
inc
push
jmp
stos
mov
add
xchg
sbb
cld
insb
cmpl
push
mov
pushf
mov
ret
std
es
hlt
mov
jb
stos
shrl
adc
inc
shl
mov
push
out
adc
mov
mov
sarb
xor
imull
cmpl
into
mov
les
dec
loope
mov
pop
mov
jl
mov
movsb
pusha
xor
push
scas
aad
jl
dec
addb
mov
cltd
mov
popa
inc
aaa
test
mov
and
xchg
mov
mov
and
and
std
sub
xor
jmp
pop
dec
insl
mov
pop
or
mov
jecxz
cmp
jmp
lcall
add
jb
sub
mov
pop
lock
jbe
jb
clc
jne
inc
inc
inc
call
cmpsb
jnp
clc
jo
dec
adc
das
push
push
lret
lds
dec
or
sti
icebp
xlat
xor
mov
mov
shrb
or
jge
pop
ret
addl
mov
test
cmp
xchg
cmp
hlt
push
push
ret
mov
nop
fnstsw
xchg
cmc
push
dec
adc
icebp
loop
xchg
rcrb
loope
mov
test
xor
xchg
xchg
or
push
push
sbb
leave
pop
inc
and
adc
and
xor
fs
cmpsl
outsb
sarl
mov
mov
out
icebp
dec
inc
push
lods
out
push
pop
push
or
cltd
loope
xchg
or
scas
lea
and
xchg
mov
stos
mov
jecxz
or
lods
std
jl
push
xor
sbb
sti
ss
inc
mov
mov
out
les
mov
cld
cmpsb
or
subl
xchg
inc
pusha
push
bound
cmp
xor
cmpsb
dec
repnz
outsb
loopne
popl
fwait
xchg
add
pop
jns
xchg
hlt
push
mov
fidivs
pop
pop
add
gs
pop
imul
xchg
mov
hlt
mov
repnz
xlat
into
out
pop
dec
xorl
lods
in
cmp
cmp
mov
hlt
push
sbb
stos
mov
sarb
and
push
xchg
jecxz
lahf
pop
sbb
int
xchg
inc
sub
add
nop
je
xor
cmp
add
inc
stos
xchg
and
mov
push
decb
jns
add
jo
testl
jecxz
mov
mov
mov
mov
pop
mov
xor
jg
mov
into
outsb
add
and
loop
adc
mov
pop
pop
pushf
in
cmp
adc
jne
cmp
push
in
shl
jbe
popf
int3
add
adc
xchg
cmp
sub
adc
cmpsl
mov
in
xor
mov
subb
inc
test
and
push
or
popf
mov
test
xor
mov
jae
insb
lods
rorb
cmpsl
inc
sbb
js
adc
mov
or
std
loope
cmpsb
mov
lret
mov
je
fnstenv
cmpsb
cld
movsl
pop
mov
loopne
pop
and
fwait
arpl
mov
mov
inc
lods
or
ret
mov
xchg
dec
pop
outsl
scas
ds
in
push
push
add
mov
ss
repz
jp
dec
sub
int
mov
popa
cmp
dec
jb
lcall
xor
jecxz
aam
fldt
mov
fisubrl
int
xchg
aas
or
sub
adc
stos
dec
mov
mov
shrl
scas
aad
mov
lods
das
dec
cwtl
pop
and
scas
and
cltd
das
insl
jae
in
fs
je
aam
jns
push
test
decb
dec
mov
or
or
sbb
jl
aad
aaa
push
and
in
dec
xchg
mov
xchg
and
stc
jmp
loop
jbe
out
cmp
mov
fisttps
cli
push
adc
lods
sar
popf
popa
fst
cmp
jb
test
inc
arpl
scas
rcrb
mov
jmp
cmpsl
ficomps
inc
bound
sahf
daa
std
inc
repz
xor
sahf
and
dec
jns
movsb
imulb
fwait
jnp
xchg
dec
test
lods
or
loopne
sbbb
mov
fcomi
or
outsl
pop
insb
fadds
mov
sub
sbb
sub
mov
lock
mov
js
push
shll
jo
inc
dec
push
lret
lds
in
adc
sub
dec
adc
loopne
out
xchg
test
adc
dec
push
xor
mov
or
mov
sbb
mov
inc
inc
int
pop
or
stc
pop
into
ficoml
xor
mov
jo
cmp
inc
add
fldenv
in
mov
das
loopne
scas
pop
movsl
out
out
cmp
bound
mov
mov
mov
shr
test
push
mov
out
dec
loopnew
lock
nop
sub
test
dec
or
popa
in
rcrb
lcall
push
outsl
lahf
hlt
jnp
in
add
or
lock
test
insl
pop
adcl
out
stos
and
bound
lcall
inc
mov
fsubs
pop
sbb
push
in
and
inc
int
mov
mov
fnstsw
loope
test
subl
xchg
lock
cmc
mov
adc
movsl
add
int
and
ja
jmp
arpl
pusha
add
jp
data16
jmp
xchg
stos
mov
adc
pop
sbb
sub
aaa
stos
xor
adc
in
movsl
pop
push
call
jecxz
subb
aas
add
inc
rcl
or
jmp
cli
aad
ds
add
xor
or
mov
or
inc
xchg
cs
icebp
push
cltd
shll
fdivl
out
xchg
sub
ficoml
enter
das
jecxz
ret
xchg
hlt
lcall
and
or
jnp
rcll
cmp
xlat
shl
lcall
and
xchg
fcoms
imul
pop
in
fmuls
not
js
cwtl
cmp
vaddpd
pop
add
cmp
cmp
aad
jae
mov
ljmp
fimull
dec
mov
mov
push
mov
adc
int3
mov
or
inc
pop
lahf
add
mov
jae
xchg
push
fisubrl
mov
adc
test
sbb
and
xor
jo
push
ljmp
jmp
les
sub
push
pushf
loopne
mov
test
xchg
pop
test
jno
sub
mov
sbb
xor
cmp
into
jo
idivb
or
mov
jno
clc
cli
in
mov
jnp
cmc
dec
pop
stos
and
rcll
xor
or
test
fcmovbe
inc
jb
movsb
jns
fadds
mov
add
push
push
repnz
xor
add
cltd
outsb
push
mov
addr16
in
in
or
jge
icebp
xchg
icebp
addr16
leave
mov
adc
dec
outsb
xor
repz
xchg
insb
pop
pop
pop
cmp
jecxz,pn
and
mov
aaa
imul
push
test
aam
mov
push
mov
cmc
daa
orb
mov
loope
mov
pop
mov
push
fsubl
pop
or
dec
loope
push
aad
test
cmpsl
adc
mov
jecxz
xor
dec
adc
cmp
mov
sub
std
icebp
outsl
mov
mov
cltd
mov
mov
inc
cmp
test
fidivs
test
lea
sub
xor
cmpsb
add
shlb
inc
lock
cmove
lret
jae
jnp
jmp
je
jl
push
adc
movsl
in
fs
xchg
int3
daa
push
inc
pop
out
out
movsl
movb
fxch
sub
mov
cmpsb
xchg
inc
cs
mov
or
and
mov
sarl
sub
cmp
mov
orb
and
xor
ret
jns
pop
pop
dec
in
push
sbb
sbb
or
out
inc
loop
loope
ja
dec
pop
mov
loopne
cld
jns
push
imul
pop
pop
xchg
out
cmc
shl
nopl
movsl
cmp
scas
stos
call
movsb
xchg
ffree
out
adc
dec
cmp
pusha
mov
insb
shll
imul
rcl
push
jo
daa
xlat
fistpl
inc
dec
movsb
mov
push
cmpsb
pop
hlt
sbb
push
loopne
add
add
in
mov
cmp
test
mov
jl
sub
lods
cli
arpl
adcl
test
push
sub
push
xchg
ret
jge
mov
jno
jg
dec
enter
pop
ljmp
push
jge
and
mov
je
xchg
jmp
jmp
enter
mov
fs
inc
setae
aad
dec
dec
mov
cmc
push
xor
cmp
push
inc
sarl
mov
iret
lods
dec
mov
inc
jl
mov
lock
or
dec
roll
xor
inc
push
rcl
xabort
dec
fs
dec
popa
add
insb
mov
mov
pushf
popf
sbb
enter
xor
sbb
jnp
movsb
xchg
cmc
scas
arpl
jmp
ds
xchg
inc
adc
lcall
inc
pop
out
mov
out
test
xor
mov
xchg
int3
in
inc
adc
mov
lret
add
mov
insb
sub
push
test
pop
stos
dec
mov
push
insl
xchg
test
mov
dec
mov
add
mov
rorb
mov
xchg
out
sub
test
pop
inc
movsl
cmc
push
mov
imul
out
or
and
jg
push
fcoml
arpl
cltd
push
aam
mov
jle
xor
inc
bound
in
adc
xor
lods
loope
test
sbb
xor
addr16
mov
daa
jge
mov
push
loop
cwtl
mov
add
xor
fdivrp
sar
cmpsb
pop
sbb
or
push
cmp
lret
xor
sbb
fistpl
dec
push
push
jb
dec
cwtl
pusha
pop
jne
rcl
data16
mov
bound
sbb
cmp
sub
add
xchg
inc
mov
lcall
dec
mov
fs
inc
mov
aad
cwtl
mov
call
loope
xor
mov
imul
stos
mov
inc
dec
lret
lret
inc
adc
ja
nop
leave
lods
dec
ja
fidivrs
dec
lock
lea
lods
inc
dec
add
rcr
inc
data16
cmp
sub
sub
dec
xchg
repnz
and
out
daa
lret
roll
xor
xor
mov
jmp
nop
scas
cmpl
test
xchg
mov
dec
push
ret
aad
lods
out
sbb
jo
jmp
sub
out
xor
repnz
out
xor
jp
cmpsl
xchg
lock
ljmp
jo
xor
in
dec
mov
fistps
cmpsl
bound
xor
cwtl
sbb
pop
lahf
nop
imul
sub
mov
push
cmp
push
ds
fistpll
push
xor
xchg
or
shll
call
scas
mov
dec
mov
jns
icebp
dec
inc
mov
enter
imulb
add
das
xchg
ret
daa
inc
or
xchg
shll
aas
aas
ds
cmpsb
pop
mov
pop
or
mov
bnd
pop
adc
fildll
cmp
stos
adc
jl
sub
loop
push
push
inc
shlb
mov
pop
movsl
sahf
push
outsb
pop
xorl
jns
lods
pop
imul
in
loopne
test
add
xor
or
scas
push
jbe
dec
loop
push
sbb
fistpl
fldt
andl
jns
pop
lods
sub
sub
cmpsb
subl
add
int3
inc
xchg
adc
shrb
push
push
and
dec
icebp
pushf
iret
movsl
push
fs
shrl
or
cmpsl
push
or
repnz
insl
imul
ds
xchg
and
std
and
mov
push
pop
add
push
dec
mov
mov
std
xchg
fwait
les
aas
mov
daa
cmp
jns
xlat
insb
or
dec
flds
scas
ss
lea
and
cld
bnd
enter
ja
pop
cmpsb
pop
and
sbbb
pop
movsl
pop
out
int3
inc
rcrl
fwait
add
popf
mov
lods
cltd
jp
cmp
in
adc
cmpsb
jbe
pop
mov
lea
or
enter
mov
add
inc
adc
cmpsb
pop
cli
push
iret
js
push
pop
jns
jecxz
das
inc
pop
daa
mov
sub
clc
pop
jne
mov
fdivs
push
pop
testl
jmp
inc
mov
add
sub
and
lds
loope
cmp
mov
mov
sarl
xchg
scas
sbb
mov
test
pop
fyl2xp1
jnp
cmp
jp
pop
pusha
pop
mov
lock
outsl
jb
jb
ret
mov
xor
dec
out
mov
and
cmpsb
mov
inc
sub
dec
jge
jge
arpl
mov
addr16
mov
hlt
sbb
add
mov
push
and
fsubrl
mov
rcll
mov
inc
jns
cmp
frstor
dec
push
aaa
enter
and
or
add
pop
and
or
push
clc
adc
push
xor
sarl
clc
xchg
mov
in
shr
addr16
std
nop
pop
cmpsb
push
push
shl
leave
test
lret
or
xor
in
in
mov
aaa
mov
cmp
sbb
into
mov
mov
das
inc
popa
or
int3
sbb
iret
fisubs
pop
shlb
add
jp
xlat
mov
jo
fdivs
pop
jl
jne
rclb
mov
xchg
lret
cs
mov
xchg
fwait
dec
sbb
adc
int3
mov
mov
cmp
test
pusha
pop
dec
stos
stos
pusha
repnz
test
out
lret
push
lds
pop
push
mov
push
les
xor
add
divl
sub
mov
mov
outsb
or
ds
imul
push
cmp
lcall
xlat
adc
dec
inc
jl
push
sub
xchg
repz
mov
adcb
mov
add
jnp
out
test
outsl
maskmovq
testl
mov
movsb
pushf
out
in
xor
add
js
in
ret
movsl
pop
push
dec
mov
das
pop
xor
fcompl
fimull
cld
push
mov
adc
in
and
push
mov
push
jb
lock
adc
and
xchg
or
cltd
adc
lock
movsb
fs
inc
mov
pop
cmpsl
pop
fs
jge
pop
cmpsb
pop
mov
lds
in
loop
orb
add
sbb
in
xor
jecxz
in
aad
xchg
push
ss
faddp
push
stc
lock
push
ss
negb
inc
int
fs
push
scas
adc
inc
lock
dec
sbb
outsl
xor
test
pop
jle
cmp
pop
je
or
test
out
jmp
mov
cld
or
jno
movsb
fnsave
je
inc
sbb
testl
pop
cmp
icebp
dec
jmp
loopne
dec
and
push
sbb
adcb
popa
jb
or
jg
addr16
mov
mov
or
pop
out
mov
decl
push
push
push
les
sub
adc
xchg
mov
out
or
loop
loop
xlat
orb
sbb
aas
and
loope
or
insl
bound
leave
mov
sub
lods
adc
push
movb
shl
push
in
fs
or
pop
ffree
push
xchg
ret
cmp
inc
fucomp
out
and
aaa
arpl
cmp
sub
dec
in
enter
mov
dec
clc
shrb
movsb
xor
add
mov
outsb
cmp
pop
inc
insb
add
jns
test
scas
cmp
mov
aaa
es
sub
adc
xlat
jnp
push
mov
fwait
pusha
add
hlt
or
stos
sub
xor
add
addr16
cmp
testl
mov
mov
or
lcall
mov
rep
lock
ret
je
jno
add
cmp
xor
cli
dec
imul
pop
add
sbb
repz
pushf
sbb
aas
loop
pop
xor
out
mov
inc
popa
fistl
out
push
std
jl
mov
iret
dec
stos
jecxz
cmp
in
fcmovnb
and
iret
mov
cmp
stos
push
xchg
pop
xchg
push
xchg
inc
xor
jp
mov
push
adc
xor
cmc
or
pop
adcl
les
xor
test
loope
scas
push
pop
jl
cmp
fnstsw
xchg
add
pop
sub
arpl
je
adc
lret
test
and
xchg
and
stos
ds
out
xchg
push
xchg
jns
pop
pop
idiv
mov
hlt
push
sbb
and
adc
sub
outsl
add
test
pushl
push
daa
clc
inc
push
and
pop
push
int
sub
adc
adc
fistl
arpl
jne
sahf
xchg
lcall
xchg
out
push
test
sub
xchg
jb
sahf
enter
xor
jg
xor
push
sub
mov
mov
fldt
pop
sub
or
sbb
xchg
add
and
inc
sub
add
cmc
arpl
cmc
inc
push
sbb
mov
sbb
mov
mov
inc
fsubs
in
out
fimuls
xor
jo
pop
test
clc
dec
jmp
imul
sbb
jnp
fimull
test
ret
repz
rorl
xchg
jg
dec
repnz
or
xor
xor
ret
out
sbb
push
js
mov
and
xchg
jns
stc
cmc
movsb
inc
in
fs
mov
pop
stos
int
out
or
cmpsl
push
test
and
icebp
pop
xor
scas
mov
stos
jno
mov
scas
pop
jmp
jmp
xor
sti
test
ffreep
out
inc
pop
popf
mov
cli
pop
push
inc
stos
btc
jae
lock
mov
push
inc
sub
call
push
shlb
mov
insb
or
popf
out
xor
xor
sub
je
jge
cwtl
out
sub
scas
fcoml
js
lds
data16
jmp
leave
mov
jl
jo
notl
rolb
pop
dec
sti
jge
leave
adc
fs
mov
imul
sbb
testl
mov
push
mov
lods
call
sti
push
pop
sub
cmp
sub
lret
mov
jp
movsl
sbb
test
mov
jge
cmp
sbb
jnp
sub
push
in
pop
mov
and
pop
mov
add
jg
cmpsb
sub
sub
mov
xchg
cmpsl
push
pop
and
lret
rorb
setbe
push
xor
jne
dec
test
xor
ret
cmp
sub
dec
dec
push
aaa
cld
fiaddl
movsb
outsb
imul
aad
ret
mov
adc
dec
jno
cli
sbb
mov
or
add
test
push
mov
daa
lcall
ret
sbb
roll
inc
fidivrs
pop
into
lods
or
xchg
xchg
mov
ffreep
sarl
xor
push
jae
mov
lret
push
sub
in
adc
outsl
fdivr
ficomps
jbe
ret
inc
cmp
mov
push
insb
subb
or
iret
pop
xor
imul
pop
lret
neg
adc
dec
xor
and
mov
std
and
fs
addb
or
mov
sar
loopne
lds
xchg
dec
jae
pop
fsubrs
loop
lea
lds
rorl
pushf
sbb
jb
jge
fildll
pop
lods
mov
push
mov
jge
or
lret
insb
repz
add
and
nop
cs
sub
orl
test
pop
incl
jns
pop
fists
addr16
shlb
dec
pop
dec
inc
lock
in
add
pop
mov
sub
movsl
xor
pop
sub
lcall
jbe
enter
cmp
or
fdivrs
faddp
addr16
int3
stc
test
outsb
fildll
negl
mov
cmp
test
jns
sub
into
pop
push
xor
pop
mov
adc
in
mov
or
pop
mov
stc
cmc
ds
or
adc
sbb
cli
in
mov
mov
and
scas
andl
lock
dec
test
cmp
mov
das
adc
pop
jecxz
lret
mov
insb
mov
xchg
in
js
xlat
stos
and
xchg
jle
mov
add
testb
popl
cltd
dec
inc
cmpsl
fwait
stos
inc
pusha
loopne
xor
cld
mov
inc
adc
cmp
jp
mov
rcll
mov
push
and
push
mov
clc
mov
stos
lea
sbb
pop
in
in
mov
daa
lret
pushf
inc
pop
iret
jmp
mov
mov
jl
lahf
push
mov
inc
rcll
pusha
outsl
push
lods
test
push
dec
imul
in
pop
cmp
sub
lcall
pop
daa
add
and
inc
cmc
push
pop
cmpb
jne
sbb
imul
imul
xor
mov
call
pop
mov
into
rcrb
mov
rol
sbb
mov
add
inc
lock
pop
push
sti
mov
pop
fbld
fs
mov
jmp
int3
jno
or
push
adc
inc
pop
fmul
pushf
jne
dec
popa
push
hlt
inc
or
jmp
adc
fcmove
data16
pop
mov
xorb
fsubl
repz
daa
scas
inc
aam
xchg
push
pop
xchg
test
in
adc
mov
mov
jmp
mov
inc
inc
jg
insl
jge
dec
dec
sub
dec
jg
adc
iret
mov
dec
cltd
stos
cltd
and
add
enter
sbb
sub
push
lods
fnstcw
dec
xor
ret
adc
or
xor
jo
fldl
lret
cmp
mov
xlat
xchg
jp
jae
inc
jnp
js
mov
mov
cmpl
dec
jae
shl
adc
bound
mov
jecxz
sbb
mov
addr16
mov
nop
mov
xor
inc
xchg
xor
push
xor
cmpsb
jo
add
rolb
mov
cltd
shll
clts
cltd
adc
movsb
lods
insb
stc
mov
lock
or
or
fisttpll
les
cmp
adc
mov
inc
pop
push
dec
pop
je
or
mov
dec
xchg
in
pop
cltd
sub
sub
hlt
add
movsb
cmp
das
or
jmp
sub
orb
or
pop
sub
or
lods
adc
fldl
jg
test
mov
lcall
mov
sub
movsb
iret
insb
cmc
rcl
cld
push
cltd
jno
and
xchg
aas
add
arpl
jno
icebp
inc
jo
dec
hlt
jecxz
dec
push
sub
pop
jmp
cmc
fldl
lret
rcll
push
out
cmpsl
push
cmc
xchg
and
xor
jb
and
es
mov
xor
xchg
cmp
pop
xchg
scas
pusha
adc
mov
iret
repz
mov
cmp
in
test
test
shrb
add
lds
daa
pop
push
push
in
icebp
mov
les
fidivrs
andb
or
sub
lret
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
out
cld
test
or
add
addl
jle
sub
jmp
jno
xlat
les
cs
pop
gs
call
loope
hlt
sbb
fidivrs
ret
jno
add
sbb
mov
jmp
scas
mov
shll
std
repnz
sar
lahf
in
mov
add
push
roll
mov
sub
sub
jns
call
movb
rcrb
add
popl
sub
push
adc
pop
add
mov
dec
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
jmp
imul
xchg
popf
adc
loopne
pop
aas
or
jmp
ss
movsb
or
ret
test
ja
dec
mov
lss
sahf
cmpsl
jnp
ss
jno
and
das
ret
test
addl
lahf
inc
sbb
xlat
enter
add
adc
and
insb
sub
into
test
rolb
push
xchg
inc
out
mov
movl
jg
inc
stos
lret
xchg
enter
repnz
xchg
enter
adcl
push
das
ret
ret
ret
into
fmull
lock
xor
or
mov
aad
ret
test
jp
sub
test
cs
add
push
cmp
push
pop
pop
xor
push
ljmp
fnstcw
in
pop
and
cmp
outsb
sbb
mov
cmp
xchg
cmp
xor
mov
and
dec
andl
mov
or
cltd
sub
xor
lcall
pop
cmp
pop
pop
and
pop
adc
push
nop
dec
jecxz
xchg
inc
sbbb
in
jb
lret
loopne
jp
je
inc
rorb
cmp
dec
mov
in
jl
mov
mov
mul
sbb
jae
inc
movsl
sbb
in
movsl
lahf
add
or
in
pop
jb
and
in
and
push
sub
pop
pop
and
dec
sbb
lock
cwtl
mov
inc
or
sbb
and
sbb
adc
xor
or
sbb
in
pop
daa
lock
mov
lods
xor
imul
or
scas
jg
jns
fldenv
jo
jge
pushf
xor
in
je
cwtl
arpl
imul
movsb
imull
mov
mov
scas
sub
adc
testb
orb
mov
dec
xchg
pop
sbb
jns
xorl
orb
cmp
jnp
dec
mov
inc
adc
mov
fcmove
mov
imul
mov
ret
rolb
pop
or
les
das
mov
mov
cmpsl
adc
test
dec
test
dec
dec
test
outsl
loop
cmpsl
adc
test
sbb
xlat
add
push
lods
insl
push
xor
dec
out
xor
jecxz
stos
jecxz
cmpsl
push
pop
xor
pop
sub
inc
sahf
cmpsl
push
movsl
scas
dec
cwtl
and
sbb
push
add
cmpsl
push
sub
inc
sahf
cmpsl
push
movsl
dec
into
or
push
pusha
cmpsl
push
pusha
adc
jno
or
xor
arpl
loopne
pusha
cmpsl
add
mov
fisubl
pusha
cmpsl
cmpsl
xchg
push
popa
mov
push
adc
pop
in
or
inc
jecxz
cmpsl
push
cmpsb
stos
push
out
pusha
or
xchg
push
out
pusha
sub
fbld
push
fsubl
rcrl
cmpsl
push
adc
inc
and
mov
clc
sbb
push
popa
mov
push
in
push
out
pusha
sub
shll
push
testb
stos
sub
out
push
sbb
shll
push
arpl
sbb
push
and
push
lods
bound
and
push
stos
insb
pop
cltd
in
push
out
pusha
sub
pop
stos
cmp
jmp
cmpsl
push
std
les
outsb
adc
sbb
pop
loope
repnz
xor
or
mov
and
test
popf
xor
fbld
push
stos
cmp
sbb
pop
lods
xchg
lcall
push
cltd
in
push
out
pusha
sub
loop
cmpsl
in
sub
push
movsl
stos
sub
out
push
sbb
cmpsb
arpl
loope
sub
push
adc
or
stos
andb
jl
jecxz
mov
push
jne
push
enter
pusha
in
insb
out
pusha
cmpsl
push
pusha
cmpsl
sbb
hlt
stos
out
push
stos
test
fwait
push
push
in
pop
mov
pushf
jo
sub
push
icebp
and
fdiv
lods
in
pop
mov
insb
out
pusha
mov
push
and
inc
scas
mov
stos
loope
push
push
fs
insl
pop
fcoml
push
fdiv
lods
in
pop
mov
bound
fwait
out
out
sub
dec
inc
hlt
in
pusha
cmpsl
push
xchg
push
push
fs
insl
pop
fcoml
push
fdiv
lods
in
pop
mov
hlt
in
pusha
cmpsl
push
xchg
push
push
fs
insl
pop
fcoml
push
fdiv
lods
in
pop
mov
out
testb
xchg
mov
lods
subb
mov
cmpsl
push
mov
movsl
loope
push
push
fs
insl
pop
fdiv
xchg
jo
jmp
imul
and
testb
xchg
mov
pusha
mov
push
popa
mov
push
mov
loop
mov
data16
mov
sub
loope
mov
lcall
mov
pusha
fwait
cld
cmpsb
dec
dec
mov
cmpsl
push
and
cmpsl
imul
cmpsl
push
pusha
push
imul
cmp
jo
xchg
pusha
jns
push
lods
repnz
lret
fs
sbb
jecxz
sub
push
scas
inc
mov
test
lods
push
lods
push
in
cld
mov
push
pusha
aam
mov
notl
sbb
push
ljmp
cld
dec
push
imul
xor
lods
xlat
lods
fs
les
ljmp
pop
inc
lods
movsb
push
cmpsb
test
das
punpckldq
in
in
jmp
dec
mov
cmp
sbb
xlat
rorl
bound
cmp
jo
xchg
ret
in
add
mov
loope
aaa
inc
cmp
adc
out
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
push
cmpsl
bound
pusha
cmpsl
push
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
insl
out
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
stos
mov
push
pusha
cmpsl
push
pusha
cmpsl
push
pusha
cmpsl
push
mov
push
jg
mov
jecxz
imull
push
or
fs
gs
mov
jg
shll
test
cmp
cmp
subl
push
dec
xor
stos
push
inc
insb
hlt
out
daa
inc
insl
cmp
xor
sbb
ds
or
in
mov
leave
stc
inc
std
je
mov
lcall
xchg
test
out
test
xlat
testb
test
loope
xchg
in
dec
cmc
out
sbb
inc
aaa
push
push
xchg
andb
jo
sbb
cltd
fwait
cmpl
mov
data16
or
jno
dec
int3
cmp
stos
aaa
mov
add
pop
xchg
inc
fcoml
push
imul
pop
mov
iret
xor
addr16
mov
push
add
cmpsl
mov
pop
jge
or
xchg
std
mov
lret
jmp
inc
imul
clc
dec
fdivrl
icebp
fcoms
or
and
sbb
push
sti
cwtl
idivl
xchg
xchg
jne
loope
mov
jmp
inc
and
sbb
add
stc
adc
inc
xor
inc
dec
pop
sub
shrl
fsubs
inc
add
jmp
sub
xchg
adcl
or
jbe
pop
aas
aam
or
push
pop
sbb
into
xchg
test
push
push
fstpt
pop
ljmp
pop
or
push
pop
mov
and
neg
in
sar
dec
out
icebp
int3
aad
jmp
inc
notl
popa
scas
jbe
jo
sbb
movsl
rolb
popf
mov
hlt
in
std
mov
ficoms
jl
and
stc
mov
repz
mov
dec
lock
and
jle
xor
mov
pop
xchg
xor
dec
cmc
xor
cmpsl
push
test
push
test
aaa
xchg
aaa
pop
aam
jmp
xor
data16
or
mov
push
loop
lahf
fldt
out
lods
callw
and
push
adc
mov
into
cmp
loope
aaa
ljmp
imul
clc
repz
leave
dec
push
enter
push
div
inc
shr
mov
mov
repnz
push
stc
ret
loop
lea
and
ds
insb
js
xor
popa
stc
ficoml
leave
addr16
fldl
xor
mov
sub
jns,pt
xchg
add
add
pop
loop
lock
test
sbb
adc
cmpb
sub
mov
jbe
in
popa
push
mov
sbb
pop
or
jb
jno
or
add
add
add
or
add
adc
in
push
add
in
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
push
add
jmp
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
in
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
in
push
add
add
add
in
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
add
add
add
xlat
pop
and
inc
and
repz
inc
push
lret
dec
push
and
in
jge
roll
add
addr16
mov
out
popa
pop
add
push
repz
stc
and
jno
push
jno
sbb
cli
xchg
lcall
lahf
inc
lahf
ds
jp
mov
mov
jno
sbb
in
les
fucom
jbe
pop
testb
xor
xchg
sub
ror
and
fs
xchg
into
jno
subb
xor
pop
cmpsl
dec
adc
inc
cltd
mov
fcmovnu
dec
jp
cltd
divl
leave
sbb
gs
testb
and
cmpsl
lretw
scas
fldenv
mov
es
imul
clc
jo
mov
xchg
cmp
cli
mov
jmp
subb
bnd
push
addr16
inc
xchg
and
mov
rolb
cmc
mov
addb
jbe
push
mov
sub
mov
dec
fidivs
stos
and
pop
in
out
sbb
jbe
jmp
mov
rcll
lods
rorb
and
push
pusha
mov
adc
inc
stc
popf
lahf
divl
adc
movb
adc
pop
inc
daa
popa
xor
xlat
xlat
ss
sbb
jg
mov
pushf
fs
decb
inc
xchg
cmp
pop
inc
mov
mov
je
imul
loop
or
jnp
stos
lods
inc
rsm
das
sub
cmp
mov
movsb
or
or
mov
cmp
pop
or
pusha
mov
and
fdivr
sti
push
cmp
jne
inc
addr16
dec
aas
add
imul
pop
lds
test
adc
sbb
mov
jb
dec
mov
adc
xor
pop
sbb
imul
sbb
mov
mov
mull
sbb
dec
popf
sti
lret
nop
lods
test
push
pop
inc
pop
daa
sbb
mul
mov
daa
pushf
lods
inc
push
push
fnstsw
fcos
and
mov
loopne
insb
loopne
xor
inc
jbe
pop
dec
sub
mov
inc
dec
adc
mov
mov
cmpsl
mov
call
sbb
and
cvtps2pd
mov
dec
orb
andb
cwtl
xor
sbb
lods
sbb
jno
ret
xor
mov
adc
lret
jmp
test
fistpl
cmp
in
adc
ljmp
fisubl
cs
add
aad
mov
pop
push
leave
mov
ljmp
rolb
jecxz
xchg
cltd
dec
sbb
cmc
cmpsl
imul
scas
pop
es
mov
ret
pop
je
mov
and
and
sub
inc
in
cmp
popf
xchg
ljmp
icebp
imul
lods
add
es
xchg
andb
test
jmp
mov
and
pop
jno
dec
xlat
jnp
jge
fsubs
xor
xor
mov
fisttpll
mov
pop
pop
pushf
xchg
mov
int
lahf
fstps
cld
sbb
adc
sub
sbb
lods
lds
mov
add
mov
clc
ret
dec
dec
out
test
and
mov
paddw
leave
xor
fisubl
in
cmp
lea
popa
test
sub
pop
xchg
adc
mov
mov
lcall
lea
inc
mov
shrl
stc
sub
ljmp
dec
insb
mov
push
movsl
aam
test
adc
scas
sbbl
inc
divb
cmc
ss
inc
stos
push
or
call
push
icebp
lea
neg
mov
cwtl
dec
leave
jp
out
jp
adc
out
or
iret
dec
test
fs
test
insb
dec
and
mov
js
sub
leave
cmp
fsubrl
loop
inc
pop
shl
dec
adc
rorl
and
adc
push
lods
decb
les
in
lods
lods
push
repnz
mov
mov
lock
das
ljmp
shl
inc
bound
lret
or
inc
add
sub
xor
push
jne
add
push
inc
jne
pusha
jl
arpl
push
imul
sarl
xor
cld
out
cmp
lock
lret
shll
mov
pop
mov
outsl
jmp
pop
mov
stos
arpl
icebp
jle
pop
adc
imul
in
aas
fnstenv
sahf
sbb
mov
ret
xor
into
outsl
mov
and
add
pop
out
lods
mov
mov
inc
xor
sbb
cmp
xchg
or
out
push
sub
std
inc
add
jp
jmp
fldcw
pop
in
jae
ljmp
push
inc
or
test
xchg
in
mov
cmpsb
dec
in
daa
lahf
jle
pushf
mov
flds
jno
sub
push
rcrb
repnz
in
arpl
xchg
mov
cwtl
js
rep
add
mov
arpl
pop
xchg
cmc
xor
fwait
push
cs
adc
roll
rcrl
mov
or
ja
mov
mov
pusha
sbb
mov
jge
sbb
addr16
pop
jp
mov
pop
ljmp
adc
inc
inc
push
jl
add
and
sbb
or
in
imul
out
jle
lds
ljmp
fs
ret
outsl
fwait
lcall
imul
sahf
push
sub
push
adc
jp
data16
enter
cmp
xchg
push
add
xchg
in
xor
pop
scas
add
fwait
mov
ja
pop
add
shrb
xor
bound
repz
and
lahf
jns
fsts
aam
cmc
mov
jecxz
sti
jp
sbb
orl
xor
mov
or
lds
xchg
jbe
fldcw
outsl
mov
out
iret
xor
inc
and
rcll
jg
inc
fdiv
pop
popa
cmp
mov
data16
les
inc
mov
push
das
fsubl
pop
mov
push
clc
adc
sbb
es
ret
stos
push
xchg
sbb
or
push
inc
or
push
rorl
mov
int3
inc
pop
andb
flds
inc
mov
scas
cmp
sbb
loop
or
sbb
xor
xor
pushf
lea
arpl
push
jg
lods
xchg
je
xor
popf
cmpb
cli
aad
bound
movsl
xchg
push
jge
jnp
jns
lahf
rcrb
fstp
ljmp
pusha
jns
adc
out
lcall
lods
decb
push
pop
adc
or
scas
inc
daa
cmp
jge
or
pop
push
dec
aad
add
or
sbbb
mov
iret
or
arpl
out
sub
push
andb
mov
cmp
out
enter
lock
inc
int
pop
xchg
sub
or
push
rolb
cmp
cmpsb
mov
jg
rcrl
scas
cmp
xor
xchg
dec
test
dec
loope
cmp
fnstcw
cld
xor
adc
jbe
push
push
mov
xor
out
sbb
push
enter
xor
sbb
pop
lods
push
mov
outsb
push
stos
orb
mov
dec
ret
mov
sti
popa
xchg
mov
push
rol
mov
cmp
jp
or
data16
clc
inc
ja
jnp
dec
cld
push
pop
je
mov
adc
cmp
mov
or
fcoml
inc
adc
mov
test
test
jno
or
popf
xchg
push
ret
sbb
mov
pop
mov
clc
xchg
cli
mov
xchg
pop
pop
push
pop
pop
stos
jnp
pop
test
dec
jbe
push
and
and
aam
push
add
cmp
enter
andb
xchg
shrb
arpl
or
mov
mov
cmpsb
fcompl
lods
mov
mov
aad
lret
mov
push
jns
push
push
jns
push
hlt
insl
pusha
les
cwtl
lahf
je
add
xchg
dec
mov
sub
adc
xchg
jns
push
icebp
in
xorl
mov
mov
push
aad
pushf
add
ret
int3
push
pop
sbb
or
sub
or
mov
out
stc
mov
addr16
dec
cltd
xor
xor
dec
pop
inc
and
cltd
mov
in
rcrb
inc
mov
cld
ret
mov
cmp
sub
js
fbld
xor
inc
mov
push
sub
jmp
inc
aad
and
imul
faddp
jle
mov
ret
mov
inc
call
cmpsl
movsl
dec
divb
pop
in
les
pop
lahf
pop
dec
nop
inc
add
xor
aaa
jns
xlat
mov
xor
jl
adc
add
cmp
cmpsb
xchg
add
inc
fs
xor
es
je
sub
ds
jl
mov
pop
sub
inc
xor
cld
push
stos
cltd
cli
jp
mov
loopne
movsb
shlb
out
clc
mov
into
or
cmp
stc
pop
movsb
lods
adc
loopne
subb
push
fsubp
cltd
sbb
push
stc
cmp
dec
pop
sbb
inc
insb
stos
jnp
out
xchg
mov
loop
sbb
lods
sbbb
fsts
xchg
mov
pcmpgtw
mov
mov
sbb
int3
incl
jbe
xor
insb
push
xor
xor
sub
mov
mov
out
stos
sub
repnz
jbe
or
add
sbb
push
lret
mov
rcr
shll
jle
cli
jge
jge
sub
mov
pop
leave
sbb
negl
push
cltd
cmpb
fstpt
lods
xchg
jecxz
jnp
and
xchg
mov
pop
outsb
arpl
loop
sbb
nop
fcom
push
mov
pop
lds
push
add
mov
dec
xchg
orl
in
xor
sbb
xor
sbb
es
aaa
push
sub
mov
adc
cmp
pop
push
std
fcompl
ret
xor
jp
stos
sar
lock
jne
jge
mov
xor
push
and
rcl
testb
push
mov
aaa
in
test
jne
xor
push
pop
push
stos
jl
aaa
test
inc
stos
aad
add
icebp
push
cmp
inc
int
jge
fisttps
jns
push
push
aam
loop
out
cltd
inc
dec
push
hlt
aad
xor
mov
sar
pop
dec
repz
and
cmp
xchg
mov
jl
jbe
int3
xchg
xor
ljmp
leave
jmp
int3
fldl2t
cmpsb
xchg
mov
cmp
nop
in
mov
jg
mov
mov
sahf
push
and
mov
pop
jnp
jl
pop
xor
test
nop
mov
jne
sbb
popa
cmp
das
xchg
cmp
enter
out
aaa
nop
lcall
or
popa
daa
pop
sbb
lds
out
das
das
sbbl
data16
add
shl
sub
arpl
and
mov
and
jo
dec
pop
jp
pop
pop
jle
xchg
jge
shr
iret
add
int
jecxz
mov
jmp
mov
dec
lret
add
jb
xchg
cld
into
xor
jg
shl
call
xor
push
push
xor
sub
cwtl
or
or
mov
int3
jo
repnz
sti
das
sbb
outsl
lret
sbb
or
sbb
mov
add
loope
dec
imul
lods
push
xchg
adc
sub
sbbl
in
icebp
dec
dec
pop
fisttps
iret
addr16
add
out
inc
mov
mov
or
jl
jl
cli
cmp
pop
xor
and
cs
mov
int3
ret
dec
repz
or
dec
sahf
cmp
in
lret
push
movsl
enter
movsl
scas
sub
aas
bound
leave
out
adc
lret
cmpsb
pop
xchg
cmp
or
test
rcll
mov
cld
loop
daa
sub
mov
adc
add
or
jg
add
fwait
jecxz
jb
popa
dec
ret
push
mov
jl
sub
mov
in
or
inc
mov
push
fsubl
icebp
test
cld
outsl
adc
sbb
rol
add
fwait
leave
arpl
cmp
idivb
cmp
jge
test
inc
mov
pop
jecxz
je
mov
sbb
es
lea
roll
cmc
push
fs
loopne
rcll
aaa
dec
and
inc
inc
or
loope
mov
push
jnp
lods
push
shlb
and
pop
jbe
sub
lahf
inc
je
popa
fdivrl
or
xchg
lcall
popf
push
arpl
roll
rorb
cli
inc
gs
mov
cmp
pop
in
iret
or
out
cltd
lea
push
add
packuswb
mov
mov
and
mov
add
push
sub
sahf
push
test
push
push
mulb
or
es
out
sub
cmp
jb
pop
mov
adcb
notl
fcomps
pop
daa
mov
lods
and
jb
repz
pop
or
add
pushf
enter
pop
pop
cmp
in
lahf
jg
adc
shll
rcrl
and
ficomps
mov
pop
inc
or
icebp
shr
sub
jne
icebp
dec
in
add
sarb
mov
sbb
jl
cli
push
or
xor
ja
outsl
sub
push
jbe
and
bound
cmpl
leave
js
dec
mov
mov
fisubrs
cmc
pop
in
jb
faddp
out
mov
ret
in
mov
inc
add
fstpt
or
scas
addr16
std
outsl
jbe
push
mov
loopne
leave
xlat
je
pop
mov
mov
add
insl
pop
push
or
arpl
jge
dec
int3
stc
std
adc
inc
push
mov
push
iret
lds
xchg
jle
cmp
push
jg
xchg
sbb
jae
xorb
ficomps
xorb
movsb
pop
das
mov
es
sbb
lea
xlat
mov
fnstsw
loope
mov
mov
lods
outsl
dec
enter
add
jmp
not
int3
pop
cli
jecxz
es
sub
add
andb
jne
and
das
rcrb
orb
movb
and
cs
pop
lods
icebp
inc
icebp
lods
inc
shufps
cltd
test
or
fnstcw
int
add
xchg
xorl
aas
adc
andl
imul
and
inc
push
lret
mov
mov
addb
inc
lcall
adc
jbe
lret
ljmp
scas
sahf
adcl
jne
nop
imul
pop
sub
mov
je
xchg
cmp
mov
add
cs
fidivl
adc
sub
add
cmpsb
mov
mov
test
dec
dec
ficoms
ds
pop
out
ret
imul
movsl
xor
inc
and
xchg
rcr
jbe
mov
cld
fisubs
stc
outsl
repnz
popa
inc
adc
mov
inc
jae
faddl
mov
lret
mov
adc
loope
sbb
lds
rcrb
mov
jns
js
std
inc
jnp
jbe
mov
sub
mov
js
pop
mov
sbb
push
pushf
faddl
outsb
jnp
mov
mov
jp
mov
xchg
out
sub
adc
ss
mov
jl
pop
int
std
inc
lcall
inc
dec
xor
inc
inc
jge
test
es
xlat
in
sbb
inc
scas
pop
inc
inc
push
sahf
pop
inc
add
jmp
lods
sahf
out
notl
popa
mov
dec
add
mov
scas
jmp
std
js
arpl
and
in
bnd
cwtl
adc
stos
xlat
test
pusha
xor
mov
sbb
pop
sbb
incl
hlt
mov
push
adc
popf
movsb
roll
pop
mov
lds
cld
loope
inc
addr16
cmpsb
cmpsb
cld
cmp
inc
mul
clc
sbb
mov
inc
scas
icebp
jae
adc
shlb
mov
fimuls
dec
mov
mov
jp
scas
imul
imul
mov
cmp
add
out
aas
fcos
jae
cmpsb
push
pop
mov
mov
lea
inc
jne
aad
inc
sbb
pushf
loopne
mov
into
sub
mov
add
pop
std
aas
jnp
lret
out
sub
insb
cmp
add
test
push
sbb
hlt
icebp
vcvtss2si
cld
inc
int
adc
aad
push
ja
lahf
out
sar
jae
pop
stos
mov
pop
push
xor
inc
pop
mov
out
dec
sti
mov
in
mov
cmpsb
or
rcll
addr16
inc
stos
adc
mov
jb
aam
mov
mov
daa
and
pushf
cltd
sahf
jnp
jb
pop
pop
insb
repz
fucomip
call
pop
mov
xlat
stos
pop
or
and
mov
push
and
push
inc
gs
cmp
push
or
dec
ficompl
or
jle
xchg
push
sub
movsl
js
jg
movl
xchg
and
jmp
sti
push
xor
iret
inc
fcoml
xchg
outsl
xchg
or
fdiv
popf
mov
and
loop
inc
sahf
push
insl
dec
lock
cld
fwait
xor
mov
in
sarb
rcll
push
push
jbe
gs
jl
psraw
add
add
jae
mov
mov
rol
xor
hlt
cmpsl
daa
fstpt
push
icebp
repnz
cwtl
hlt
and
sbb
sub
in
inc
movsl
push
fistpll
mov
push
add
xor
jnp
and
jl
movb
js
repnz
dec
push
idiv
dec
ret
dec
test
sti
in
add
ja
jns
in
dec
mov
pop
jno
test
xor
outsb
cli
xchg
in
push
xor
inc
xor
popf
and
in
rolb
jmp
sub
xchg
clc
pop
or
rclb
loop
adc
push
sbb
cmpsl
fmull
push
pushf
outsl
adc
lds
sbb
mov
pusha
mov
shr
mov
mov
insb
mov
mov
inc
push
inc
push
jns
aad
out
out
int3
add
ds
jecxz
iret
pop
pop
mov
mov
mov
xchg
popa
inc
leave
in
mov
xchg
mov
pusha
subl
sub
rcpps
fs
in
sbb
ja
mov
add
xlat
jnp
sahf
in
das
xchg
ja
int3
jno
xor
add
push
inc
stc
xlat
mov
test
and
cmp
popa
mov
xor
xchg
lret
mov
mov
adc
aad
stc
adc
push
inc
les
inc
hlt
call
push
inc
dec
and
ss
stos
inc
in
inc
rcl
sbb
pop
call
popa
cmp
jl
jmp
sbb
ret
cwtl
push
movsl
push
rcrb
stos
or
mov
daa
and
sbb
jno
or
ljmp
jae
mov
adc
push
xchg
fsubrl
or
insb
loopne
ja
adc
das
sbb
or
in
jo
loop
fidivrl
mov
int3
push
clc
test
jnp
aad
stos
xchg
xchg
mov
xor
test
mov
adc
outsl
mov
or
mov
movsb
enter
add
rcrl
jne
add
xor
rcl
stos
stos
dec
jne
mov
sbbl
mov
mov
mov
imul
dec
push
jl
pop
adc
and
pusha
les
jecxz
clc
pop
aas
push
and
push
xor
movsb
sub
jns
xchg
add
jbe
xlat
insl
rcrl
cwtl
mov
aaa
jns
nop
popa
mov
push
repz
mov
call
xlat
sbb
inc
add
mov
clc
mov
sahf
adc
cmp
popa
inc
sbbb
fisttpll
orl
mov
mov
idiv
sub
sub
dec
cmp
lock
mov
add
mov
movsl
hlt
std
sub
icebp
repz
mov
xor
loope
loope
jmp
or
push
and
push
repz
pop
jne
sahf
dec
cmpsb
leave
sbb
notb
push
jb
mov
push
in
inc
sbb
shll
fisubrl
lock
lods
mov
push
popa
push
push
sbb
lahf
imul
adc
imul
cmp
mov
sahf
push
clc
leave
rolb
rcrb
mov
sarl
mov
sub
pop
sahf
jecxz
dec
insl
sarl
sub
lcall
add
dec
ljmp
jb
mov
loop
sbb
rolb
xchg
lahf
cmp
js
xchg
fsubl
mov
js
jno
jae
ljmp
in
mov
adc
fnstenv
jno
xor
test
ljmp
dec
cmp
cmp
in
dec
aam
push
iret
push
mov
sub
std
es
int3
push
sbb
lods
mov
jne
ret
loope
and
test
into
repnz
outsb
fnclex
movsb
adc
repnz
mov
and
cmc
ficompl
es
decl
and
and
push
pop
out
lret
data16
jo
in
cs
ja
sbb
fiaddl
push
mov
jns
stc
inc
cmc
cmp
shll
repz
mov
inc
in
stc
out
pop
or
lcall
mov
and
push
fscale
pop
into
repnz
stos
mov
jb
enter
into
aam
xor
or
pop
repz
in
movsl
enter
in
int
fxch
daa
dec
fisubrl
push
jo
pushf
ljmp
inc
cltd
or
adc
sub
mov
and
jg
sar
add
test
mov
and
test
inc
out
data16
cmp
mov
pop
gs
movsl
xchg
loopne
addb
les
cmp
pusha
in
cmp
mov
inc
dec
aaa
mov
mov
xchg
sub
in
lea
stc
je
push
mov
mov
popf
adc
iret
aaa
adcb
rolb
cmp
aaa
pop
scas
or
sub
cmc
dec
inc
stos
pop
dec
pop
sbb
scas
les
cmp
xor
xor
sub
mov
int
dec
xchg
adc
scas
mulb
xchg
and
imull
sub
xchg
sbb
sarb
sarl
add
movups
nop
outsl
cmpsb
and
adc
mov
cmp
mov
or
lret
mov
mov
or
push
mov
out
in
stos
mov
inc
inc
cmp
push
mov
in
adc
sbb
jp
mov
enter
jae
inc
add
das
jecxz
inc
ljmp
mov
mov
mov
mov
or
ljmp
bound
mov
cld
xor
or
mov
lea
push
arpl
stc
and
in
jbe
pusha
jle
cwtl
pop
sbb
or
mov
dec
adc
fwait
aaa
nop
add
push
daa
out
into
and
mov
mov
imul
ss
adc
xchg
cmp
jle
mov
push
pop
pop
loop
cltd
orb
jge
rclb
rclb
sti
loopne
push
or
les
jno
mov
sti
cld
outsb
icebp
jb
mov
mov
add
lods
or
add
loope
mov
ret
or
push
lcall
and
mov
add
mov
xchg
inc
cmp
data16
testl
cmp
loop
in
jle
aas
xor
iret
adc
ret
xchg
and
ljmp
dec
add
mov
out
std
popf
bound
sbb
dec
sub
pop
divl
mov
std
daa
add
mov
push
sub
pop
fs
movsl
rcrb
and
pop
es
jmp
jno
icebp
std
push
subl
cs
stc
jge
jnp
lock
push
out
inc
rclb
push
mov
push
push
and
jle
pop
mov
iret
pop
inc
sar
or
xchg
std
fnstenv
adc
stos
xchg
inc
leave
lret
clc
in
lods
aam
pop
es
cltd
mov
fnstenv
pop
das
sarb
or
dec
sub
aaa
xor
sbb
pop
add
loopne
cmp
int
ja
loope
adc
rcll
adcb
mov
jmp
flds
hlt
out
and
outsb
mov
lret
or
xor
outsl
mov
mov
rcl
cwtl
xchg
adc
sub
mov
pop
or
add
xor
push
mov
scas
cmp
popl
jnp
and
test
sbb
lock
lods
xor
shll
mov
cmpsl
pop
push
xchg
add
jnp
mov
mov
outsl
cmp
mov
mov
pop
jge
pop
cwtl
cld
loop
lock
rcr
or
push
cmpb
mov
mov
adc
shrb
incb
loopne
ds
ret
test
in
fnstcw
repz
mov
mov
ja
shll
and
xor
push
push
cmp
fidivrs
or
mov
bound
flds
cmpsl
insl
ret
test
add
gs
out
jnp
stos
lret
lcall
int3
aas
dec
sbb
jmp
sbb
mov
out
sub
inc
les
outsl
pushf
mov
and
mov
nop
pop
sbb
sub
push
pop
dec
and
pop
popa
sub
ror
pop
imull
push
fldcw
dec
in
in
flds
bound
rcr
mov
sub
test
or
xchg
xor
push
mov
sub
stos
outsl
call
mov
sar
fwait
pusha
sbb
scas
push
ljmp
scas
rcll
jle
jae
sarb
test
mov
xchg
xchg
loop
lods
ljmp
rorb
test
xchg
hlt
push
ret
imul
xor
inc
stos
scas
shl
out
cmp
xchg
sbbl
jl
nop
aam
shrb
ret
in
daa
mov
lret
mov
aaa
bound
cmp
jg
and
fisttpl
xchg
fcomps
stos
jbe
pop
insb
fdivl
jmp
xlat
add
jge
lods
dec
movsl
jb
pusha
sbb
and
push
test
into
movsb
addr16
jge
popa
mov
fsubrs
cmp
and
outsl
shr
clc
sbb
cltd
cmp
std
testb
shlb
sub
mov
xor
cli
std
mov
cmp
nop
mov
jge
sub
insl
cmp
fs
out
jns
push
sub
mov
stc
lcall
xchg
adc
inc
dec
mov
fwait
in
pop
outsl
pushf
in
fistl
ss
mov
lahf
xlat
xor
push
or
inc
cmp
das
add
mov
insb
clc
cs
dec
jmp
enter
lret
pop
push
pop
fsubl
jb
lret
jge
out
dec
nop
out
cmpsl
inc
dec
rcll
cmpsb
scas
xlat
filds
icebp
cs
sbb
sbb
lds
and
jmp
xor
test
adc
in
fcoms
xor
inc
bound
bnd
fcoms
sub
and
jp
xor
lcall
test
add
cmc
xchg
in
xchg
mov
lods
mov
sbb
fldl
test
arpl
sahf
or
push
jecxz
mov
adc
subb
or
mov
cmp
out
xchg
push
and
mov
xlat
jno
popf
pop
gs
mov
lcall
mov
pop
int
std
jp
fndisi(8087
ljmp
js
dec
inc
xchg
sbb
jno
outsl
loopne
addb
push
test
int
mov
outsb
or
test
leave
ljmp
add
mov
testl
notl
mov
and
push
addr16
das
mov
rorb
mov
mov
fadds
idiv
adc
jp
inc
fs
dec
sbb
jl
mov
loop
cmp
aaa
sbb
call
cmp
scas
push
mov
bound
ljmp
mov
outsb
xchg
mov
fwait
dec
adc
jne
scas
xchg
popa
aam
cli
and
mov
in
ret
sub
add
jo
imull
outsb
pop
test
shrl
pop
repz
fnstsw
dec
mov
outsl
ljmp
mov
sub
test
sbb
pop
cmp
push
push
mov
push
inc
and
sbb
bound
or
push
out
scas
mov
imul
lahf
and
pop
popf
aad
lcall
jge
push
and
shlb
inc
fmull
or
xor
stos
test
in
lods
rorb
outsl
cmp
popf
test
adc
stos
mov
nop
add
and
mov
inc
sub
cmpsb
lcall
xor
adc
in
cli
insl
cmpsb
loope
insl
add
outsl
movsl
sbb
sbb
jno
pop
xchg
inc
xor
iret
cmp
icebp
daa
adc
mov
pop
fisubrs
pop
sbb
jg
push
stc
shl
fsub
dec
sarb
shll
outsb
in
dec
pop
and
cmpsl
out
sbb
icebp
icebp
outsl
rep
sbb
inc
sub
ficoml
sbb
dec
aaa
in
stc
stc
cmp
ret
jo
enter
inc
xchg
mov
scas
mov
fstp
pop
xor
sarb
out
cmp
jmp
sbb
cmp
lret
ret
dec
cmp
stc
dec
mov
icebp
and
ljmp
insb
or
and
cmp
mov
or
popl
sti
mulb
lcall
jmp
mov
nop
cmc
jae
inc
push
mov
test
mov
mov
push
xchg
sub
loop
push
orb
xchg
into
jp
push
lds
xor
test
inc
fs
jge
bound
mov
mov
pop
xor
arpl
cmpsl
out
stos
gs
or
push
sub
adc
fcompl
stos
out
pop
or
fdivp
xor
jl
add
loopne
fcmovu
and
sahf
popf
lods
out
sub
mov
mov
pusha
jb
adc
jg
push
fcoml
dec
ljmp
sub
cmp
mov
mov
mov
dec
mov
pop
data16
push
sub
xchg
mov
mov
movsb
pop
cmp
dec
jecxz
jb
lods
leave
nop
je
xchg
lods
test
dec
arpl
sbb
cmc
sub
jecxz
test
add
or
mov
mov
mov
pop
loope
cmp
push
xchg
incb
inc
je
test
outsb
dec
add
inc
jp
push
cmpsb
incl
xchg
mov
pop
sbb
aad
dec
test
bound
aad
jp
dec
inc
lcall
sbb
adc
leave
loop
or
loope
add
and
xor
in
mov
je
cld
sbb
mov
push
mov
mov
dec
sub
pop
pop
fistps
sub
lcall
js
mov
or
dec
jp
movsb
and
lea
xchg
inc
xchg
inc
das
call
push
data16
ds
lea
test
jle
adc
mov
lea
xchg
and
xor
loopne
mov
xchg
push
test
cmc
mov
mov
sbb
mov
inc
mov
mulb
xor
or
push
dec
pushf
fstps
and
sub
or
pop
mov
ds
mov
cld
sti
cwtl
mov
push
xor
xchg
testl
jmp
pop
pusha
lea
sub
cmp
mov
in
dec
loopne
stos
xchg
addr16
das
add
adc
ficoml
movsb
sub
call
xchg
shlb
int3
test
bound
lods
add
pop
xlat
shll
pushf
or
movl
xor
andb
mov
lds
cmp
std
fs
stc
push
imul
int3
lahf
popf
jb
shlb
int3
jbe
mov
fisttpl
imul
dec
into
mov
xor
pusha
filds
jle
mov
mov
inc
test
leave
sti
adc
sbb
rolb
mov
jo
jb
or
xchg
sub
stc
movsb
imul
sub
sbb
imul
push
scas
dec
add
fcmovnb
xchg
and
imul
filds
mov
fmull
adc
flds
xlat
movntps
dec
fnstcw
cmp
clc
int3
sub
popa
jle
inc
mov
push
shlb
adc
add
xchg
sub
imul
lock
lret
hlt
div
xlat
sahf
sub
lret
test
pop
xchg
mov
add
inc
pusha
mov
mov
mov
lahf
sub
dec
insl
icebp
cmp
jp
test
sti
cmp
rclb
xchg
movsl
or
adc
jg
cli
jecxz
pop
call
dec
push
mov
xor
lea
dec
mov
cmp
mov
sub
ds
sbb
in
mov
fs
sbb
add
jp
adc
fs
inc
fcomi
fidivrs
fs
dec
popf
repnz
fnstcw
fdivrl
cmp
ret
inc
xor
jecxz
inc
xchg
movsb
inc
push
test
and
and
dec
or
into
in
mov
mov
pusha
mov
test
and
andb
pop
adc
and
mov
lcall
mov
mov
add
and
and
sbb
insb
cmp
lea
mov
sub
xor
sti
or
sbb
push
jl
xor
or
jbe
test
xlat
pop
sahf
cmp
movsb
push
cmp
sub
shlb
imul
lds
inc
js
cmp
test
cmp
jmp
ss
subl
inc
icebp
cmpl
xchg
nop
pop
shr
inc
pop
sbb
lea
out
stos
and
mov
push
orb
out
addl
mov
jae
mov
fwait
jne
pusha
jnp
outsl
cmpsb
and
jo
loopne
repnz
cltd
adc
cli
pop
shrl
mov
int
mov
push
fistpl
push
ficompl
stc
sbb
ret
test
lahf
push
arpl
mov
out
arpl
shrl
mov
enter
or
mov
mov
mov
sbb
xchg
jmp
cmp
jae
enter
int
sbb
jg
adc
imul
in
mov
or
dec
sbb
push
ljmp
sahf
mov
mov
das
xchg
jecxz
xchg
pushl
adc
mov
adc
mov
aas
xor
iret
mov
lcall
sbb
jo
mov
mov
imul
cmp
inc
mov
mov
ror
mov
pusha
imul
pop
mov
push
cld
insb
ret
xlat
sbb
jno
movsl
arpl
mov
pop
cmpsl
mov
in
mov
in
mov
mov
clc
fiadds
roll
add
ljmp
inc
jg
inc
adc
inc
in
mov
cmp
out
pop
xchg
push
sub
sub
xchg
xchg
addr16
test
roll
lahf
sub
test
mov
leave
xor
jnp
or
xor
out
in
mov
sarb
push
mov
push
and
sbb
daa
cmpsb
popf
insb
jg
aam
movsb
cmp
jle
jmp
push
jne
xchg
mov
sbb
mov
stc
jns
movsl
inc
or
adc
adc
pop
jle
adc
mov
popa
jecxz
cli
popf
mov
cmp
pusha
pop
add
cld
add
outsb
push
mov
out
xor
inc
cmc
push
push
xchg
sbb
in
mov
pop
mov
mov
ror
or
xor
nop
outsb
in
add
push
xor
sbb
fsubrp
pop
rcrl
test
fistpll
add
ror
loope
mov
mov
sub
cwtl
into
xchg
and
flds
pushf
iret
adc
or
add
dec
sub
jnp
scas
mov
loop
mov
mov
out
sbb
aaa
jecxz
jle
pop
sbb
add
loop
sbb
fidivrs
fdivl
ret
inc
loop
andnps
xchg
xchg
push
cmp
and
push
pop
lock
es
and
xor
aad
jecxz
aas
dec
call
cmpsl
dec
daa
add
in
out
roll
push
insl
sub
push
ret
cmp
mov
xlat
or
push
fcoml
into
notl
shlb
push
pop
mov
stos
cmc
imul
je
jmp
pop
pop
push
sarb
cld
loope
inc
cmpsb
dec
insl
mov
daa
sarl
jecxz
in
aas
test
dec
imull
cs
enter
cmp
adcb
or
stos
insb
or
rcl
leave
ret
push
sbb
int
fnstenv
enter
push
mov
xor
mov
adc
push
jmp
fldcw
mov
rcll
test
or
inc
dec
jns
cmp
imul
pop
test
int3
roll
mov
inc
cmp
scas
sbb
xor
xlat
add
cs
add
inc
rolb
iret
sub
mov
test
ds
sbb
push
lods
and
mov
sub
stos
daa
lcall
out
cmp
aas
iret
in
xor
lods
addr16
xchg
fadd
fwait
shl
push
add
sbb
ds
push
lret
mov
out
adcb
cmpsb
or
dec
adc
push
loope
jl
cwtl
xchg
xor
cmp
xchg
jmp
push
enter
jle
enter
sub
bound
cwtl
testl
popa
fmuls
lods
inc
sti
inc
icebp
jne
fwait
outsb
cmp
push
adcb
and
inc
cmp
fwait
daa
cmp
mov
xor
sbbb
xchg
ficoml
sub
mov
in
repnz
lcall
xchg
cmp
push
out
add
int
jle
adc
mov
mov
call
xorb
dec
jge
push
lods
popf
andb
shll
movsb
in
xchg
push
test
repnz
push
fidivl
inc
mov
ljmp
outsb
int
shlb
sbb
gs
ljmp
mov
jle
add
decb
push
mov
mov
cltd
cmp
sub
outsb
inc
xor
out
pop
cmpps
mov
push
andl
ret
mov
testl
div
jecxz
push
mov
shr
sbb
outsb
cmpsl
jl
popa
or
mov
adc
pop
or
dec
mov
pushf
addl
sti
pop
dec
sbb
inc
adc
jne
push
in
jno
xor
pop
and
mov
xchg
pop
sub
hlt
jae
or
es
loopne
bswap
hlt
push
mov
mov
stos
mov
fidivrs
mov
loope
mov
mov
and
mov
cli
dec
cmpsb
adc
pop
adc
popf
sub
lcall
push
cmpsl
stos
out
movsl
sub
xor
pop
stc
les
mov
pop
mov
aad
pop
mov
rcrb
in
xchg
mov
sbb
push
push
sbb
xchg
jg
push
ret
or
addl
sti
out
enter
push
out
pop
jbe
mov
push
xchg
and
subb
or
test
bound
fsubrp
popf
push
in
cs
mov
fcomps
add
cmp
and
and
mov
test
cmp
cmpsl
inc
push
imul
sub
mov
xor
pop
mov
sub
testb
sub
dec
inc
and
add
xchg
lahf
jno
jmp
pop
dec
push
add
shlb
sahf
scas
adc
sub
mov
dec
sub
or
mov
push
je
jns
mov
xorb
enter
pop
or
pop
cli
cmp
in
mov
mov
adc
jge
jecxz
jp
data16
stos
jae
cwtl
sbbl
mov
xchg
es
pushf
add
addr16
ret
scas
dec
pop
loopne
sbb
shr
jg
ret
push
ffree
mov
xor
mov
adc
sbb
jns
out
imul
aaa
nop
pop
jae
decb
dec
xchg
scas
shll
movsl
fwait
push
mov
in
ljmp
pop
and
pop
mov
pusha
fcompl
mov
dec
push
mov
mov
fidivrl
popa
je
push
add
test
mov
sub
cli
and
sub
push
cli
adc
hlt
outsl
mov
and
xchg
dec
gs
push
jmp
mov
mov
mov
lods
xchg
cmp
call
fistpl
pusha
pushf
movsb
ret
cmp
mov
or
dec
xor
sbb
pusha
fs
clc
push
jecxz
jbe
cwtl
addr16
jno
pop
ror
out
add
pop
push
shl
aam
mov
in
sub
ficoml
lea
in
jnp
inc
inc
shl
icebp
lods
sti
xchg
loope
imul
xchg
in
mov
inc
test
lea
push
sbb
loope
inc
pusha
push
lret
fstpt
aaa
xchg
sub
rcrl
cmp
and
data16
pushf
ljmp
jne
cmp
cmp
inc
icebp
jmp
or
lea
push
cwtl
dec
push
inc
mov
add
sbb
mov
out
add
rorl
bound
orb
mov
outsl
sbb
loop
add
pop
shl
mov
test
lahf
cmc
movl
or
inc
daa
ljmp
xchg
mov
inc
bsf
mov
iret
addr16
jns
movsb
rcrl
movsl
push
gs
out
xor
xor
mov
hlt
insl
jp
fdivl
lret
dec
fcos
dec
outsb
sub
stos
inc
test
push
dec
jle
int
jo
jl
xchg
icebp
jg
add
mov
add
lcall
xchg
jnp
orb
jmp
push
and
scas
loopne
mov
ret
rcrb
cs
ljmp
test
sbb
test
jae
or
and
scas
xchg
pop
dec
jmp
cmpsb
and
mov
adcl
daa
mov
sub
rep
jno
inc
das
cwtl
inc
nop
in
mov
loopne
sahf
pop
fists
xchg
or
aas
jecxz
pop
test
push
test
insb
or
in
mov
add
xor
mov
lretw
aas
xchg
lahf
shr
out
ror
push
clc
sub
mov
dec
sbb
clc
xchg
mov
lods
mov
dec
loope
pusha
pusha
add
xchg
testb
xor
sbb
add
mov
add
inc
push
or
decl
and
xor
mov
and
insl
popa
sbb
pop
aas
xchg
sub
insb
cld
int
gs
sbb
mov
fst
out
mov
inc
mov
inc
add
dec
js
aas
dec
adc
jbe
jg
push
mov
push
mov
jl
pop
adc
jbe
loope
mov
data16
xchg
test
mov
aaa
cmpl
push
mov
jo
adc
inc
dec
and
stc
fiadds
scas
imul
inc
add
es
fcmovu
jns
mov
cli
xchg
sub
or
xchg
inc
mov
mov
sbb
dec
or
adc
jnp
mov
lcall
cmp
mov
cmp
xchg
inc
sbb
adc
inc
call
push
arpl
in
leave
sti
mov
rcr
pmaxub
popa
jg
dec
mov
ret
aam
fcom
push
popf
fidivrl
es
mov
sbb
add
jecxz
fstl
and
inc
jb
cmp
int3
fstpt
dec
inc
jae
mov
ret
push
cmp
mov
insb
gs
cmp
xlat
dec
shll
out
push
call
fbld
push
add
dec
fdivs
inc
inc
mov
mov
jnp
lahf
test
jb
jnp
lret
mov
push
in
mov
roll
or
xor
popf
or
push
jne
sarb
test
mov
or
out
int
aaa
mov
push
jnp
nop
outsb
mov
ret
outsb
push
push
arpl
xor
mov
movsl
inc
mov
inc
aaa
sub
cmpsb
out
in
loop
jg
inc
xchg
pop
in
rcr
xchg
xor
mov
jno
sarl
pop
mov
add
out
xor
loopne
repnz
testb
roll
inc
sub
test
inc
roll
jl
jge
push
daa
insl
xchg
mov
mov
lahf
xchg
out
cmpsl
je,pt
or
cmc
mov
xlat
rcll
sbb
dec
fs
xchg
jo
mov
dec
push
test
aam
xor
xchg
sub
cmp
dec
sti
xor
add
xlat
mov
xchg
outsb
add
sbb
es
pop
lea
test
or
jge
aaa
cmp
xor
ret
outsl
mov
cmc
outsb
fmull
arpl
ret
fstpt
jnp
iret
mov
std
jecxz
ljmp
cwtl
ret
test
aas
dec
jge
or
sahf
mov
cmc
sti
xor
outsb
push
popf
test
ds
cmp
xlat
es
scas
push
sbb
imul
in
int
pop
push
dec
mov
mov
fisubrl
dec
add
add
pop
pop
or
fistpl
mov
dec
test
sbb
mov
rorb
push
cmpl
pop
and
cmp
xor
adc
push
popa
or
adc
mov
cmp
adc
out
lds
dec
sbb
sub
enter
mov
fdiv
in
push
dec
es
sbb
loop
outsb
xchg
imul
clc
mov
fldt
or
or
test
fiadds
loopne
inc
pop
ljmp
adc
jp
xchg
xor
nop
cmp
jae
cmpsb
pop
shlb
push
mov
sub
add
add
sub
imul
pushf
iret
pushf
jecxz
fbld
mov
arpl
divb
iret
repnz
pop
pusha
cli
dec
and
pop
fdiv
stos
and
loopne
mov
inc
push
movsb
adc
cmp
lds
xor
insb
inc
mov
jae
xchg
sub
push
adc
lcall
loopne
dec
in
or
faddl
sbb
mov
out
mov
pop
pop
lods
pop
hlt
pop
pop
je
add
push
add
shlb
push
mov
iret
mov
and
mov
and
sarb
push
dec
jnp
test
adc
call
jl
sbb
scas
rclb
jne
mov
dec
xor
cs
lea
dec
in
or
lea
pop
fwait
jp
xlat
sub
cmc
and
lret
movl
daa
sub
adc
xchg
pusha
clc
jecxz
add
xchg
cmc
add
pop
fcompl
bound
sbb
ljmp
les
cmpsl
fsubrs
xor
sbb
fcoms
orb
and
pop
push
xchg
mov
cmp
into
add
jbe
aad
incl
xor
test
jp
adc
xchg
aad
mov
adc
pop
jo
sub
dec
push
nop
jae
popf
xor
push
sbb
push
inc
or
push
mov
pop
clc
fs
sbb
mov
mov
or
gs
ret
or
testb
sti
xchg
pop
sbb
fldl
cwtl
pop
xchg
stc
adcl
xlat
dec
sarb
xor
cmc
stos
mov
cmp
lea
in
movzwl
sbb
mov
mov
lcall
fildl
popl
into
mov
test
fistps
scas
test
adc
push
aaa
push
es
lock
insl
fcompl
out
push
mov
mov
imul
and
int
jnp
mov
pop
cld
sbb
xor
sbb
clc
push
adc
mov
sub
cmp
xchg
xchg
addb
push
insb
mov
push
inc
fs
jge
inc
xchg
mov
mov
adc
and
scas
cmp
clc
fsubr
jno
repnz
xchg
xor
mov
sub
subl
out
sbb
push
aad
mov
arpl
dec
push
aad
add
cmpsl
mov
inc
jge
xor
fmuls
in
and
pop
jmp
sub
xor
aam
jl
jb
sub
mov
xor
sub
jns
or
je
or
pop
lcall
inc
xchg
dec
call
or
or
popf
push
fwait
mov
and
imul
adc
jge
ss
adc
jge
pushl
push
call
or
fs
mov
xor
pusha
fsubl
das
adc
les
fidivrl
sub
pushf
or
mov
sti
int3
jp
mov
in
sbb
aam
pop
jno
icebp
insl
jecxz
lcall
dec
pop
int3
sbb
xchg
inc
dec
jo
imul
enter
jo
rcr
mov
cmp
dec
jp
inc
fidivs
insl
pop
in
sub
or
pop
aam
loopne
mov
pop
adc
popf
insb
lock
insl
pop
dec
jno
sbb
ficomps
pop
jnp
imul
arpl
mov
inc
stos
cwtl
push
addr16
cli
xchg
cltd
mov
cmp
idivl
cmp
cmpsb
mov
outsl
je
adc
lock
add
sub
aaa
mov
cld
test
into
in
aam
mov
imul
scas
mov
stc
movsl
daa
std
xchg
pop
push
xchg
xchg
push
jae
mov
jbe
ret
mov
mov
jne
xchg
xchg
into
nop
sti
lods
mov
or
mov
or
pop
lret
mov
sahf
push
sbb
es
push
das
dec
scas
xchg
cmp
enter
jns
enter
cmpsb
cmp
xchg
push
int3
fimuls
out
mov
repz
dec
movsb
sbb
mov
sbb
push
lock
in
in
aas
push
lcall
jge
mov
lret
leave
fidivrl
adc
adc
push
repnz
mov
pop
cli
xchg
lcall
pop
push
addr16
outsl
mov
jo
aaa
rcrl
movsb
mov
loopne
loop
jno
addr16
sbb
jae
fstpl
sub
mov
std
mov
jl
push
sub
adc
push
mov
bound
cmp
ret
jl
popf
jns
mov
popf
cmp
inc
into
in
mov
ja
ret
xor
test
shlb
sbb
jne
outsb
mov
adc
insb
adcl
pop
sti
mov
je
push
decl
xchg
ret
je
rolb
push
in
sbb
sub
cmp
cmpsb
adc
or
mov
jmp
sub
xchg
in
cmpl
dec
pusha
sahf
pop
movsl
mov
ret
ja
mov
or
pushf
push
add
rcrb
imul
push
roll
ljmp
push
add
mov
push
xlat
aam
sbb
jnp
cmpl
push
aaa
sub
pop
sub
inc
jbe
push
sbb
sub
mov
jne
adc
add
popa
push
mov
and
lret
xor
imul
sbb
movsl
arpl
pop
add
test
push
shl
lods
dec
das
notl
mov
pop
jae
aam
xchg
or
mov
sahf
movsl
mov
lods
mov
aam
xchg
fildll
adc
xchg
xor
cmp
adc
push
cld
aas
push
jge
sub
imul
ficomps
outsb
movsb
gs
addr16
jne
addr16
and
fs
negl
dec
push
and
int
mov
mov
and
arpl
sbb
jmp
aad
stos
mov
cmp
fcmove
popa
add
mov
dec
lea
mov
cmp
and
push
sub
push
or
sbb
pop
in
cli
lea
push
sub
dec
dec
stos
iret
and
out
push
and
pushf
mov
pop
lahf
sbb
jl
ja
popf
inc
mov
fsubrp
mov
sub
push
imull
fistpll
fwait
testb
mov
ret
xor
sbb
in
mov
xchg
sbbb
js
int
jnp
cmp
ja
arpl
es
mov
es
icebp
adc
pop
aas
and
aaa
xchg
and
test
or
add
das
into
mov
inc
or
lea
call
adc
sbb
inc
or
mov
or
jae
xchg
rcll
jb
jo
sub
pop
cmpsb
and
shr
es
mov
aaa
mov
inc
sub
push
mov
inc
fbld
fldt
in
sbbb
mov
into
xchg
or
adc
cmp
mov
lcall
mov
adc
sub
aam
lret
lret
mov
in
cmp
dec
movsl
jnp
jmp
mov
mov
cmpsb
aaa
in
mov
enter
in
ficoml
xchg
push
aaa
dec
movsl
test
iret
adc
jnp
xchg
adc
pop
mov
rcll
mov
sub
xchg
les
int3
test
das
lock
adc
test
adc
sbb
lods
lods
fisubrs
outsb
push
cltd
adc
dec
dec
jle
adc
pop
jg
test
jecxz
ja
cmp
ffreep
lahf
stc
sub
shrb
pop
sbb
push
out
inc
stc
dec
rcrl
repnz
xchg
stos
adc
or
cmp
pop
leave
pop
incl
fcoms
sub
xchg
cmpb
std
add
xor
jp
or
sbb
js
lods
pop
pop
add
in
iret
fdivs
fsubrl
jecxz
cwtl
and
adc
clc
stos
mov
xor
js
lcall
in
mov
aaa
fadd
aaa
lcall
ret
adc
pusha
sub
dec
adc
cli
aas
cld
jmp
pop
aam
jecxz
sub
jecxz
insb
jne
out
mov
fs
cmc
pop
jne
les
enter
or
jecxz
enter
jne
out
pusha
mov
cmp
ss
cmp
dec
dec
cltd
test
and
shrl
test
jp
incb
or
pusha
mov
aas
push
subb
adc
cmp
sub
cli
adc
mov
xchg
dec
and
xchg
outsl
addr16
push
mov
add
xchg
jnp
sbb
mov
sub
jne
arpl
xchg
sub
mov
inc
sub
int
mov
inc
xchg
cmpsl
in
cmp
xor
hlt
dec
out
jg
adc
mov
insl
pusha
rcrb
mov
imul
jae
inc
pop
push
cwtl
rcl
mov
mov
sub
orl
call
jne
jecxz
mov
sub
xlat
pop
cmc
adc
pop
pop
stos
cmp
fwait
jge
lds
jno
lret
stc
adc
insb
std
outsb
out
adc
xchg
dec
or
mov
out
or
push
xor
out
cmpsb
adc
xchg
sub
in
imul
outsb
jmp
fmul
xor
xchg
lea
inc
sbb
dec
in
mov
filds
out
cmp
out
lret
arpl
or
popa
sub
or
inc
xchg
mov
xor
rorl
xchg
push
rcll
xor
test
dec
sub
or
mov
fwait
or
mov
mov
clc
inc
dec
jbe
aam
shlb
mov
call
fnstenv
cmpsl
pop
sbb
or
and
xchg
lcall
mov
imul
inc
push
cmp
mov
dec
xor
fsub
dec
int3
jge
pusha
xchg
imulb
ret
and
lea
and
jne
pop
or
ficoml
cmp
fisubrl
aad
ljmp
mov
mov
jge
inc
sbb
test
outsl
xchg
mov
daa
push
inc
and
jecxz
jl
jmp
adc
add
sbb
dec
sub
inc
and
outsl
jle
mov
imull
roll
pop
outsl
daa
inc
enter
xor
jnp
pusha
cmp
xchg
nop
push
insl
adc
testb
mov
jmp
sarb
stos
loopne
jmp
push
and
xor
adc
lods
push
lret
mov
push
xchg
xor
pushf
jns
subb
and
insl
les
add
push
mov
aad
sub
cmp
push
push
mov
pop
das
xor
add
orb
enter
cmc
shll
mov
bound
out
data16
hlt
jle
cmc
jge
scas
mov
jno
jecxz
mov
notl
sahf
insb
out
daa
push
lds
repz
cmp
icebp
daa
bound
jne
cmc
push
lods
aaa
mov
mov
push
inc
ret
mov
lcall
cmp
sbb
pop
pop
repz
jnp
pop
inc
leave
dec
inc
outsl
in
testb
insl
dec
out
xor
ja
std
mov
dec
mov
xor
adc
das
pop
mov
mov
push
or
xor
rcll
mov
loopne
out
popa
xchg
repnz
in
add
or
and
rcll
sarb
xor
sbb
pop
and
sbb
mov
jnp
ret
cmp
dec
lret
jbe
es
cmp
and
xor
sub
push
insb
ds
push
and
pop
ret
ret
rcrb
xor
pop
or
mov
push
mov
es
enter
mov
iret
push
dec
repnz
cmpsl
mov
push
sbb
in
xchg
cmp
aaa
add
popa
lahf
xorl
aas
mov
xchg
stos
pop
fwait
stc
mov
ficoms
push
mov
xchg
cs
pop
lock
outsb
subb
sub
sub
mov
lret
aaa
and
sbb
mov
lock
sbb
or
popa
sahf
mov
pop
adc
clc
rorb
arpl
fisubrl
pop
movsl
lods
xchg
movsb
add
xchg
xchg
add
js
aaa
int
or
popl
pop
and
add
ret
jmp
test
jne
popf
pop
bound
xchg
mov
addr16
jno
fwait
inc
cltd
mov
mov
cmp
jmp
popa
repz
fsub
loope
das
fcomps
imul
mov
push
or
mov
repz
mov
mov
mov
mov
loop
outsb
mov
pop
mov
imul
test
sub
mov
xchg
aad
xchg
mov
insl
xchg
mov
ja
fwait
insl
add
fcomi
hlt
fs
ret
loope
xor
dec
xchg
cmc
push
cmpsl
arpl
insl
push
in
sbb
lret
pop
mov
jbe
adc
or
sahf
xchg
aad
loop
imul
inc
leave
xor
mov
xor
pop
imul
sbb
lret
enter
les
lds
insl
push
inc
or
scas
jo
push
cld
lret
inc
icebp
xor
fisubs
inc
sbb
iret
xchg
mov
xchg
gs
mov
scas
into
lahf
rclb
cmpsb
dec
mov
or
and
test
mov
push
adc
lock
fnstenv
jmp
repnz
jb
fsts
xor
lods
fsubs
add
dec
jne
popf
dec
push
scas
lea
fcmove
adcl
mulb
jbe
xchg
and
repnz
sub
xor
push
jl
sub
imul
out
mov
subl
xor
ds
xchg
jb
jg
dec
repz
push
push
xchg
enter
jno
push
xchg
mov
add
jno
int
outsb
push
add
sub
or
out
test
pop
mov
shrb
insl
cwtl
jp
jle
clc
or
es
call
es
and
sub
out
pushf
imul
pop
cmp
ljmp
adc
jb
les
fsubr
mov
xchg
push
pop
mov
test
lds
sub
shll
jge
call
adc
mov
mov
xchg
inc
aad
rcrb
lds
test
jo
xor
cli
clc
leave
repnz
je
into
aad
fcmove
or
sbb
dec
and
push
mov
cmc
mov
dec
arpl
jo
pop
mov
inc
hlt
cmp
cmpsb
dec
sahf
add
sbb
xchg
movsb
lds
push
push
xchg
leave
xchg
cltd
js
inc
into
nop
in
decb
mov
test
mov
push
dec
rcl
cltd
pop
test
roll
je
in
cmc
xor
pop
xor
dec
mov
fimull
jge
imul
pushf
cli
movsb
fiaddl
repnz
dec
inc
cmp
lods
mov
mov
pop
adc
iret
sbb
sub
das
into
jnp
std
jns
pop
xor
lret
ds
mov
push
andl
mov
ja
pusha
xchg
and
push
lods
mov
lcall
or
sbb
jo
out
jb
xchg
aas
test
sub
xor
xchg
sti
jmp
lahf
xchg
add
dec
xor
or
ret
test
pop
cs
rcll
jecxz
dec
push
push
cmpsb
add
mov
shrl
mov
inc
mov
mov
sub
mov
xor
mov
jne
add
mov
fsubrl
xor
loop
pusha
mov
sti
cmp
leave
xchg
mov
push
and
jge
adc
outsb
frstor
das
fs
mov
clc
sbb
sbb
inc
movb
les
mov
xchg
into
push
filds
in
sub
stos
aad
pushf
test
movsl
adc
inc
cmp
test
roll
adc
adc
mov
pop
xor
push
add
mov
imul
sahf
inc
ja
mov
cmp
imul
fidivl
ljmp
andl
insl
mov
xor
test
cmpsl
sub
icebp
int3
cmp
cmp
subl
int
and
outsb
cmpsb
push
dec
insb
mov
fldenv
cli
mov
inc
push
adc
xor
push
jge
jecxz
lea
testl
shll
sbb
fisttps
mov
mov
filds
jl
pop
sti
out
test
movsb
jg
mov
loop
push
out
cltd
add
xor
es
push
outsl
loop
les
adc
adc
lret
and
popf
cmp
fadd
ret
inc
stc
imul
ja
orl
mov
mov
and
or
push
in
arpl
jecxz
sub
dec
ljmp
inc
movsl
cmp
popa
out
cmp
fiaddl
shll
mov
mov
jno
push
scas
pop
cs
dec
ficomps
daa
push
mov
push
sti
movsb
push
mov
jns
inc
sbb
popf
or
ret
push
jmp
mov
lahf
ss
push
iret
hlt
cmp
and
sti
test
dec
ret
lret
lods
stos
xor
adcb
jne
and
daa
nop
xor
xchg
or
js
sbb
imul
je
inc
mull
clc
stos
cmp
ret
sub
push
lods
aam
mull
rcll
loop
or
mov
push
aas
cmp
roll
movsl
xor
add
and
jmp
icebp
lock
leave
hlt
ljmp
xchg
push
mov
or
or
mov
adc
cmpsl
ficompl
inc
dec
xchg
mov
add
cmp
sti
sub
inc
mov
icebp
stos
daa
popa
push
sub
jge
xchg
cmp
and
lods
fimuls
push
jecxz
daa
mov
and
mov
jecxz
nop
enter
int3
sbb
repz
imul
pop
add
sub
dec
pop
xchg
outsb
push
xor
inc
ja
leave
bound
and
cltd
shrb
jb
stc
aas
pop
hlt
stc
pop
loopne
cmp
push
cmp
and
add
rcl
out
adc
or
cmc
retw
clc
or
pop
or
lahf
push
mov
mov
jp
js
pop
jecxz
iret
out
and
adc
out
cmp
fldt
xchg
pop
ljmp
pop
sbb
divb
leave
rclb
repz
xor
movl
ja
fsubs
movsb
add
insb
jle
movsb
clc
dec
pop
les
mov
or
push
add
adc
inc
xchg
jg
cmpsb
mov
dec
jle
ficomps
xchg
xchg
mov
insb
add
add
xor
fld
andb
icebp
clc
lds
aas
xchg
sub
and
fadd
mov
mov
mov
out
add
std
sbb
cmp
fnstenv
int3
lret
xor
sbbb
ss
ficoms
ss
xor
outsb
js
and
pop
mov
sub
insb
stos
ret
mov
push
jae
cmc
cmpsb
sub
lods
sbb
xor
outsb
lahf
mov
cmc
mov
test
mov
fmull
out
mov
sbbl
sbb
push
push
inc
add
dec
dec
shll
test
mov
push
loopne
add
lret
pop
mov
pusha
dec
jg
test
pop
out
movl
xchg
fiaddl
repnz
add
stos
lods
stos
mov
add
fwait
jo
xchg
push
rorl
cmpsl
inc
inc
sub
roll
fisubs
sub
cmp
xor
loope
dec
push
mov
and
jne
jg
out
sbb
jbe
sbb
add
jne
pop
push
lret
lret
outsb
out
outsb
inc
push
jne
adc
hlt
inc
inc
sbb
adc
mov
sti
fs
ret
repnz
inc
jno
add
cld
cmp
push
icebp
fsubl
push
out
pushf
push
add
cmp
cmp
stos
ss
jae
repz
mov
pop
int3
rolb
test
cwtl
dec
repz
xor
scas
popf
cmp
dec
js
pusha
addr16
add
jo
inc
test
mov
in
push
fs
add
cltd
pop
sbb
cwtl
cwtl
or
mov
je
mov
jno
dec
ds
dec
rcll
loop
dec
add
in
mov
or
iret
add
mov
dec
shrb
fldt
jns
mov
xchg
fs
mov
push
xchg
dec
inc
testl
xchg
fwait
inc
pop
ficoml
lret
push
fisubrl
out
subl
scas
loope
daa
jmp
mov
or
aad
insl
fcomps
adc
test
outsb
dec
or
dec
xor
int3
int3
push
mov
es
sub
or
fisubrl
nop
cmc
adc
cmpb
xchg
lods
gs
adc
and
inc
scas
fiadds
lea
mov
and
adc
lahf
pop
lret
pop
pop
cmp
clc
mov
imul
inc
or
xchg
mov
mov
and
mov
mov
push
push
pop
dec
ret
xor
push
jp
push
imul
pop
out
and
clc
gs
mov
cmpsl
rclb
mulb
fsts
inc
aam
xchg
push
cmp
dec
add
pushf
mov
fwait
dec
pop
in
mov
call
movsl
cmp
jae
mov
and
pop
xchg
mov
adc
mov
test
sets
xlat
mov
fisttpl
cmpsl
movsb
loop
int3
dec
dec
sarb
call
pop
es
pusha
fmull
mov
push
pusha
mov
jne
or
shrl
ljmp
loopne
cmp
push
fisubrs
aaa
sub
push
inc
mov
pop
and
faddl
idivb
mov
cltd
rolb
sub
sub
fnstcw
mov
sbb
mov
aaa
shll
add
xchg
mov
mov
inc
pop
les
mov
nop
int3
pop
out
cmp
adc
and
cmc
mov
sub
mov
mov
pop
ljmp
je
test
ss
mov
adc
cltd
insl
lidtl
cmpsb
imul
sahf
sbb
mov
fidivl
loopne
add
mov
jg
out
imull
iret
xchg
idivl
dec
add
or
not
insl
push
cmpsl
cmp
stos
imul
rorb
out
lcall
popf
fwait
into
sahf
jge
fyl2x
adc
aam
mov
bnd
insl
cmpsl
and
mov
fcomip
add
loop
stos
adc
xchg
in
xchg
jnp
inc
push
lock
or
pop
outsl
daa
int
stos
lods
sbb
push
pop
inc
scas
jb
jmp
mov
rclb
in
push
mov
or
ficoml
insb
add
ret
mov
dec
pop
aaa
sub
int3
inc
push
mov
inc
shlb
add
das
add
lods
adcb
stc
sbb
js
xchg
mov
xor
test
cltd
iret
movsb
push
out
call
mov
lret
xlat
sub
fwait
jae
pop
pushf
lea
sti
sub
sahf
enter
adc
xchg
rcr
lods
cmp
dec
push
cmp
mov
scas
jnp
and
mov
mov
mov
fs
lods
push
push
xchg
fs
or
daa
push
leave
push
fmuls
pop
aam
xchg
mov
jecxz
insl
fdivr
cmpb
cmc
xchg
inc
leave
dec
in
and
vmovups
mov
fiadds
jno
pop
push
dec
cld
in
inc
out
call
loop
pop
bound
xor
dec
cmp
outsl
or
dec
inc
in
mov
lahf
add
clc
pop
push
inc
notb
and
mov
adc
pop
mov
lret
jb
inc
adc
ja
lods
xchg
cmp
bound
mov
rcll
dec
xor
jnp
mov
subl
bound
sub
jb
stos
sbb
insb
js
roll
inc
es
pop
addl
jl
mov
push
iret
push
cltd
je
sub
push
jbe
jae
mov
and
add
pop
clc
out
test
mov
outsl
cld
add
inc
pop
fcompl
dec
rcr
loope
cmc
movsl
push
inc
mov
je
jmp
xchg
jb
fadds
pop
push
sti
pop
dec
mov
and
call
iret
shlb
imul
xor
cmp
aam
xchg
test
fisttpl
xchg
and
test
lret
mov
sbb
push
adc
add
mov
repnz
int3
jg
mov
mov
cmp
xchg
outsl
cld
repz
mov
fists
in
jne
add
pop
adc
or
pop
insl
pop
cli
lcall
out
jb
jmp
inc
push
push
push
dec
aaa
push
outsb
sub
mov
xorl
pop
setge
pop
push
cmpsb
and
and
cmp
sahf
cmc
and
out
push
daa
xor
sahf
mov
mov
dec
jno
repnz
mov
cmp
adc
and
mov
push
cmp
into
leave
pop
jmp
or
out
xchg
sub
das
aaa
xchg
and
rcll
loopne
aad
stc
and
mov
and
mov
fcoml
cmp
cmpsl
pusha
add
inc
movl
mov
cmpsl
mov
faddl
call
lahf
cmpl
psubd
sbb
shrb
icebp
mov
lds
out
mov
popf
and
mov
dec
cmp
adc
mov
jns
xor
and
movsl
mov
xchg
test
sub
jle
aas
bound
gs
fstps
cmp
xor
scas
bound
push
mov
push
mov
push
int
lds
movsb
int3
cmp
aam
mov
push
mov
into
and
push
das
mov
rorl
mov
sbb
inc
add
outsb
inc
aam
in
scas
shlb
fldenv
pop
lock
cmpsl
mov
insl
popf
sahf
add
js
mov
and
xor
mov
aas
xorb
fisttpll
sbb
push
push
dec
test
and
or
add
std
xlat
cs
out
push
pushf
repz
and
mov
xlat
push
adcb
pushf
push
inc
pop
sbb
xlat
pop
cmp
add
jb
pop
lds
push
xchg
repz
sti
pop
pop
push
pop
outsb
and
push
or
push
push
sti
jnp
add
push
inc
sbb
shrl
fistl
lahf
mov
inc
stos
andl
pop
jne
inc
fadds
pop
mov
nop
xor
ss
inc
test
and
lds
mov
jne
lods
inc
xchg
xor
jmp
aas
std
shrl
mov
sub
dec
mov
popf
pop
xor
fstps
flds
cmp
push
inc
in
sbb
pushl
mov
mov
cmp
pop
test
jmp
loope
movsl
fildll
pop
hlt
repz
cs
cli
dec
ret
or
cli
outsl
dec
aas
sub
dec
jb
pop
dec
mov
or
jno
pop
mov
or
sub
dec
push
repnz
mov
mov
add
xor
adc
adc
iret
dec
movsb
mov
push
das
sbb
mov
inc
push
inc
inc
imul
xor
lods
sub
cwtl
mov
movsb
mov
das
ret
into
mov
jecxz
stos
lea
mov
push
push
jo
out
pop
xchg
test
mov
nop
bound
call
daa
test
mov
rcrl
out
insl
scas
test
imul
addr16
fucomp
inc
sti
movsl
mov
pusha
dec
mov
lret
xchg
xchg
jbe
mov
in
add
adc
mov
pop
mov
jmp
inc
jnp
push
stos
jb
push
and
dec
mov
test
xchg
mov
scas
mov
add
loop
sti
xor
in
cltd
or
mov
mov
dec
sub
cmp
pop
shrl
adc
mov
mov
mov
pop
adc
sbb
add
std
nop
dec
and
sbb
in
subb
add
sti
xchg
aas
push
lds
in
test
out
pop
pop
or
dec
xchg
and
aas
addr16
aaa
repz
sub
inc
sbb
mov
jl
fnstcw
aad
jl
ret
jbe
mov
mov
je
rclb
fsubs
test
inc
data16
xlat
xchg
pop
xor
mov
in
push
cwtl
xor
mov
mov
lea
jg
loope
inc
cmpsb
fimull
shr
xchg
andl
out
push
imul
ret
mov
mov
int3
dec
test
xor
insl
adc
loopne
inc
ds
or
movsl
or
popa
in
push
pop
fisttpl
call
scas
dec
pcmpeqb
scas
jge
dec
sti
push
ljmp
imull
popf
rcll
leave
jbe
mov
pop
cmpb
adc
add
rcrl
or
mov
stos
shll
pop
add
or
fidivrs
jmp
ja
hlt
repnz
inc
aad
ret
mov
push
sbb
mov
sbb
flds
mov
ljmp
outsb
sbb
dec
sub
push
scas
stos
inc
and
add
xchg
cmp
xchg
in
fcompl
gs
subb
dec
jnp
dec
addr16
fisubs
sti
xor
mov
pusha
cwtl
inc
add
sbb
sub
push
test
test
cli
cs
movsb
pop
xor
fsts
add
add
mov
aaa
pop
es
mov
mov
push
cld
mov
leave
dec
sbb
xorl
adc
xor
lcall
test
jmp
xor
mov
pushf
sub
add
jle
arpl
add
push
cwtl
inc
leave
xor
mov
mov
gs
or
lea
pop
fldt
lea
pop
push
outsb
mov
lods
inc
mov
ds
cmp
pop
sbb
mov
lcall
hlt
adc
inc
out
jae
stc
subb
insb
jg
lea
rcrb
cmc
xlat
add
orl
xor
mov
push
mov
pop
nop
push
and
inc
mov
inc
push
xor
cmp
ret
and
fwait
cli
add
sub
xchg
mov
ja
mov
jne
jle
jbe
test
xor
jae
loope
out
fdivr
pushf
jle
push
add
ficomps
push
fistps
push
adc
dec
mov
nop
mov
mov
ficoms
mov
aad
lock
pop
mov
pusha
push
sub
jg
in
pop
jne
and
inc
hlt
jg
ss
jp
inc
mov
in
xor
call
pop
mov
add
pop
leavew
jp
pop
test
jle
es
jo
xchg
mov
fs
or
push
adc
xchg
mov
push
push
mov
iret
call
sbb
and
sbb
xchg
out
jo
mov
pushf
je
sbb
hlt
cli
movsl
or
pop
jp
jns
pop
inc
je
sub
lret
sbb
adcl
sbb
push
pop
cmp
insb
fs
pxor
ljmp
stos
insb
push
scas
imul
push
adc
popa
jne
mov
inc
sub
dec
mov
test
xorb
push
adc
mov
adc
mov
mov
ljmp
push
pop
loop
mov
adc
jmp
lds
sub
jp
pop
fs
mov
jl
das
loopne
inc
sbb
or
stos
or
pop
add
imul
stos
jnp
stos
ret
dec
fidivl
test
push
std
dec
cmpb
fidivs
mov
movsl
fnstenv
jb
stos
pushf
out
rolb
xchg
xchg
fdiv
subb
je
inc
in
sar
or
add
imul
out
add
aam
push
jae
pop
test
adc
leave
push
inc
mov
dec
enter
or
or
jl
sbb
out
xor
cmp
xchg
adc
mov
mov
and
repz
xchg
pop
out
lods
xlat
mov
in
nop
mov
or
jns
xchg
movsl
arpl
mov
dec
pop
sub
pop
or
repz
pusha
xchg
ds
xor
gs
adc
cmpsb
sbb
mov
addb
sbb
test
shl
jns
mov
push
push
adc
push
jp
adc
add
mov
lret
ds
xor
jmp
xchg
or
add
fisttpl
stc
and
dec
popa
xchg
inc
mov
popf
add
call
mov
cmp
sahf
movsb
xchg
push
js
xor
mov
xor
cmpsl
jbe
jl
sbb
out
jmp
cmpb
xchg
adc
sbb
mov
pop
out
sub
mov
test
sbb
aaa
imul
jge
jmp
xor
fstpt
aas
clc
lret
jbe
xchg
shr
pop
int
mov
xchg
push
inc
mov
sbb
mov
nop
hlt
fcomps
rcl
sub
loopne
or
shlb
out
jnp
int
icebp
repz
mov
and
mov
or
xchg
xchg
sub
js
mov
call
mov
mov
pop
lret
adc
loopne
jecxz
xor
flds
and
sahf
push
xchg
push
outsb
dec
xchg
pop
aam
pop
xchg
push
outsl
inc
xchg
aam
sbb
push
cltd
dec
lea
shl
fidivl
xor
mov
lret
pop
pusha
out
fisubl
add
fsubrl
jns,pn
std
xchg
js
fld
stos
nop
cmp
mov
or
repnz
mov
cmp
push
test
xchg
imul
push
inc
sti
jp
adc
pop
in
pop
mov
lcall
xchg
mov
jnp
sbb
fldl
gs
sbb
aas
xor
xor
negl
xchg
lret
outsl
fucom
dec
lock
loope
loop
gs
bound
mov
pusha
call
out
or
gs
dec
pushw
lds
push
mov
daa
push
adc
mov
rorl
cmp
dec
rcrb
inc
out
sbb
roll
div
mov
or
jae
outsl
sbb
jmp
je
andb
add
pusha
repz
imul
cmp
lods
sbb
adc
test
lds
je
psrlq
notb
movsl
pushw
into
mov
test
inc
xor
xlat
test
mov
dec
mov
lods
in
dec
int3
xlat
pop
push
aam
mov
or
test
test
push
lahf
inc
das
pop
xchg
dec
push
sub
jb
mov
pusha
popf
sub
mov
mov
fsts
pop
out
cmpsb
out
cmp
popf
pushf
repz
repnz
jmp
test
jl
cmp
pop
pop
scas
inc
mov
sbb
xchg
add
cmp
add
sbb
dec
insl
jno
idivl
les
add
mov
xor
sub
fstpt
push
pusha
xchg
dec
scas
inc
ds
jbe
push
movsb
mov
lcall
jb
insl
pushf
and
mov
ror
insl
pop
mov
fldcw
and
jecxz
call
or
mov
sub
lock
pop
rolb
aam
jae
lcall
or
sbb
xchg
push
lcall
cs
out
je,pt
sub
std
pop
and
cltd
cli
stos
test
dec
or
lods
insl
mov
je
push
cld
jmp
or
roll
pop
rcll
in
dec
hlt
es
mov
dec
out
dec
lahf
mov
int3
lahf
sbb
adc
and
sbb
outsb
adc
fidivrl
xor
std
mov
mov
cmp
gs
stc
movsl
push
out
rolb
sub
loope
mov
mov
test
lods
outsl
test
mov
xchg
jbe
imul
mov
push
fstpl
or
push
in
in
xchg
adc
inc
bound
dec
sbb
jo
test
scas
xchg
mov
sub
scas
ret
out
lcall
push
sub
jmp
xchg
inc
inc
lahf
add
adc
mov
pop
mull
in
inc
xor
sub
aaa
stc
pop
inc
dec
inc
mov
mov
frstor
jecxz
xchg
jb
shlb
fbstp
frstor
das
ljmp
mov
in
mov
jae
gs
clc
fs
inc
repnz
cmp
add
or
adc
jp
inc
xchg
das
js
stc
test
mov
imul
sbb
jmp
movsl
add
adc
jnp
test
popa
divb
iret
push
loope
sub
sub
inc
jle
movsl
xchg
sub
int
insl
shll
push
sub
mov
lret
scas
pusha
add
xor
mov
mov
pop
filds
sub
pushf
mov
int
mov
rorb
test
enter
subb
xchg
adc
test
mov
dec
xchg
and
add
mov
mov
cmp
jle
mov
loopne
mov
aaa
and
inc
lret
lods
fdivl
fisubrl
xchg
nop
insl
and
in
out
test
es
leave
lcall
leave
inc
pop
sub
rcll
dec
mov
fdivr
sub
and
dec
sub
scas
xorb
jns
xor
xor
int
daa
push
imul
and
mov
mov
sbb
sahf
and
sbb
out
push
notb
movsb
xor
mov
cld
ja
outsl
icebp
jle
out
repnz
pop
loope
ljmp
mov
push
cmp
adc
stc
loopne
mov
in
mov
xor
add
fiadds
cmpsb
adc
lret
xchg
out
mov
xchg
subb
add
jae
mov
test
loopne
mov
testb
jecxz
mull
dec
jbe
lea
jae
lods
sub
lods
push
and
pop
xor
jae
inc
in
pop
test
fistpll
and
mov
sti
adc
bound
pop
and
cmp
cs
dec
mov
mov
stos
push
clc
xchg
add
lret
daa
sahf
jmp
repz
imul
sti
cmp
scas
cmp
pushf
out
add
ds
or
or
pop
mov
xor
inc
cmp
or
repz
dec
mov
mov
adc
stos
ljmp
hlt
scas
sub
stos
mov
dec
out
sub
outsb
jecxz
mov
sbb
cmpsl
xor
loopne
cmc
sbb
cmp
cmpsb
add
int3
ljmp
out
mov
or
nop
dec
movsb
bound
fisttpll
mov
push
or
sahf
sti
aam
and
outsb
adc
inc
lret
ljmp
mov
inc
lret
fmuls
fucom
sbb
pop
mov
mov
sbb
addr16
mov
xor
inc
mov
ret
stos
mov
sub
and
mov
or
push
adc
repz
shrl
add
popf
adc
movsb
stos
adc
frstor
jecxz
sub
dec
ret
mov
pusha
fmuls
arpl
inc
adc
cmc
xchg
sub
cmc
aam
jp
mov
mov
sahf
cmpb
add
push
fadds
dec
xor
sub
ja
xchg
lret
int3
and
test
into
adc
sub
lods
std
pusha
mov
notl
sti
push
test
inc
sbb
jmp
or
or
ret
loope
cmp
pop
outsl
cwtl
addr16
fldcw
mov
jbe
shrb
jno
sbb
pop
pop
cmp
insb
mov
and
jg
sub
add
jle
push
xor
jg
push
add
inc
lods
add
test
push
test
rcll
xor
mov
jecxz
fs
bound
push
dec
mov
or
mov
sbb
ret
fs
rcrb
int3
or
movsl
and
xor
pop
inc
and
pop
es
xor
dec
push
aaa
shlb
popf
push
adc
shrl
and
sbb
sbb
aas
add
push
ss
xlat
push
cmp
iret
xchg
jle
cmc
divl
mov
fs
sub
jmp
loope
aas
fs
cmovns
test
jb
je
fidivl
push
mov
mov
test
fcmovb
mov
test
add
xor
or
cli
xor
and
lods
and
mov
test
imul
in
es
xor
call
call
xlat
adc
mov
pop
cs
lahf
js
cmp
push
shr
imul
scas
xchg
add
sub
push
in
or
cmp
mov
jl
idiv
sahf
pop
and
push
jmp
in
std
stc
mov
mov
xor
jnp
jl
mov
inc
mov
jp,pt
arpl
jmp
jae
into
dec
add
data16
adc
ss
lods
bound
testl
cmp
inc
test
and
inc
mov
gs
xor
in
in
outsl
dec
je
jb
mov
out
push
mov
mov
jnp
lods
adc
scas
mov
sub
push
adc
jmp
cmp
mov
movsb
or
pop
mov
cltd
sub
js
stos
jns
sub
sti
out
xchg
sub
mov
jg
xchg
sub
fiadds
push
les
gs
out
js
pop
jle
pop
jne
mov
int
ja
arpl
mov
and
jmp
cwtl
pop
sbb
in
orl
clc
repnz
xorb
xchg
xchg
push
mov
inc
in
daa
cmp
es
add
int3
mov
xchg
xchg
insb
mov
pop
mov
dec
insb
inc
clc
cmp
cmpsl
notl
pusha
inc
aad
stc
hlt
xchg
push
fistpl
jae
pop
add
push
xlat
xchg
sbb
mov
test
or
mov
int
mov
and
pop
xchg
mov
cld
mov
loopne
xchg
lock
xor
xor
leave
or
and
and
ja
xchg
mov
aad
inc
xchg
pusha
add
aam
and
mov
cmc
add
jge
cmc
mov
sub
and
rcrb
mov
outsl
xor
aad
dec
imul
popf
dec
fidivrs
jl
push
lahf
jmp
fs
notl
decl
adc
cmp
xchg
sub
jo
outsb
popf
popa
cld
adc
dec
das
cmp
push
sub
add
add
out
sahf
pop
idivb
jnp
pushf
iret
shl
and
xor
mov
stc
push
xchg
lcall
bnd
add
sub
ds
mov
jnp
and
inc
adc
lock
mov
stos
push
test
inc
push
add
add
inc
xor
lcall
rclb
pop
loope
test
adc
ret
loopne
push
fstpl
mov
mov
loop
inc
test
sub
gs
iret
outsb
mov
adcl
jge
sub
xlat
mov
cwtl
or
scas
pop
mov
leave
les
and
xlat
cmp
xor
je
cmp
lods
int3
lds
dec
adc
cmp
mov
insb
gs
xlat
clc
mov
imul
cmp
in
push
jl
or
gs
push
jnp
mov
pop
stc
movsb
push
jnp
scas
sbb
aad
ret
xor
jmp
mov
pop
xor
mov
loop
movsl
sub
ds
xchg
mov
sub
xor
ja
loopne
sarb
fnstsw
lcall
imul
outsl
and
xchg
js
sarl
xchg
pop
scas
lcall
loopne
sbb
les
rol
sahf
cltd
ret
repnz
sbb
arpl
ja
xchg
add
xlat
leave
mov
pop
or
xchg
loopne
and
pop
pop
dec
xor
push
dec
and
cltd
jl
sahf
into
inc
mov
fcompl
dec
mov
sub
push
cmp
lcall
xor
inc
loope
add
bound
xchg
xor
pusha
xchg
rcll
cld
sarl
or
iret
movsb
popf
lods
out
inc
test
shr
mov
cmp
lcall
ss
rolb
pop
dec
dec
into
xchg
mov
and
inc
popf
mov
mov
jnp
xchg
ja
xchg
in
jecxz
cli
es
mov
aam
push
mov
jae
and
daa
xchg
je
mov
and
push
insb
ret
jb
cmp
mov
dec
cmc
sarb
sub
in
mov
mov
sub
mov
cmc
adc
outsl
das
pop
mov
movsl
test
xchg
cs
ret
inc
push
push
jno
addb
orl
fwait
lods
and
xor
mov
jo
lods
and
cmpb
push
jecxz
dec
test
sub
fsubs
int3
popf
ficomps
jb
gs
stos
dec
dec
and
jle,pn
test
movsb
fstpl
or
cmp
push
pushf
jbe
sbb
leave
movsl
lahf
sbb
xchg
adcb
lret
jl
call
aad
dec
push
sti
fldcw
add
mov
xorl
fisubrl
pop
jo
enter
inc
cmpsb
mull
jg
jns
push
call
fwait
imul
cs
push
jne
or
xchg
and
and
movsl
mov
rclb
aad
lds
cmp
jmp
dec
gs
xchg
adcl
inc
or
cmc
stos
inc
xchg
xchg
dec
jl
movl
cltd
jg
add
iret
fwait
mov
adc
cs
pop
and
add
mov
loope
adc
leave
cmp
sub
sub
add
mov
push
xchg
pop
cmpsl
or
xlat
iret
jge
rol
cli
xchg
cs
cld
mov
inc
xor
stos
or
std
jge
out
mov
movsl
test
aaa
decl
lret
out
add
push
and
mov
into
push
out
xchg
jno
pop
fwait
inc
dec
and
jge
xchg
mov
dec
mov
incl
pop
jp
jns
and
fwait
pop
add
pop
je
testl
jns
leave
imul
dec
lret
call
xchg
jns
xor
push
cmpb
arpl
sub
jns
into
test
and
adcb
dec
xor
jl
sbb
sbb
inc
pop
lds
xor
call
testl
xchg
shlb
arpl
mov
add
pop
dec
and
lahf
and
cmp
movsl
fisubrs
jl
lods
mov
and
pop
cmpb
jmp
aad
sub
push
add
outsl
popl
add
aad
cld
mov
xor
cltd
sub
jne
movsb
daa
mov
fldenv
mov
push
aad
mov
pop
imul
gs
out
xchg
and
mov
pop
lcall
xchg
pop
jge
in
fdiv
pop
js
mov
dec
dec
cmp
fdivl
push
dec
mov
pop
pop
lods
daa
jp
popa
mov
repnz
or
ds
add
pop
mov
orb
lret
and
fildll
pop
push
cmpsb
jae
je
pop
nop
mov
xchg
fsubrl
push
pop
insl
xor
xor
or
pushf
dec
repnz
mov
jo
imul
or
test
popf
mov
ja
jmp
nop
fwait
sub
pop
and
xor
fcompl
push
in
pusha
xor
sub
ret
int3
push
out
inc
fdivl
push
mov
daa
enter
mov
sbb
jl
insb
xchg
mov
insl
addr16
xor
mov
sub
lret
adc
mov
leavew
mov
aad
pop
xchg
in
mov
sub
in
test
movsb
cli
pop
je
add
xchg
or
mov
add
pushf
into
in
or
cld
push
xchg
mov
xchg
mov
mov
xor
imul
lock
and
mov
in
add
pop
int
faddl
jno
push
fildl
add
js
xor
or
jns
daa
sbb
jecxz
mov
cli
fstps
push
or
fidivs
loope
hlt
inc
or
rcll
xchg
mov
insb
popa
dec
pushf
dec
repnz
test
add
mov
xchg
jo
mov
xchg
fbld
and
ljmp
fisttps
push
popa
or
or
add
sarb
adcl
stc
addr16
sar
nop
cld
xchg
enter
adc
adc
cmc
aam
mov
lods
rcrl
add
mov
je
push
test
jge
and
mov
jns
sar
add
sahf
jo
xor
scas
sbb
int3
aaa
outsb
clc
scas
dec
jecxz
lcall
jg
cmpsb
nop
push
dec
popf
call
dec
pop
xchg
cmpsl
adc
jo
jo
xchg
mov
mov
addps
push
movsl
sbb
cmp
jno
sbb
loop
adc
cmp
aam
ds
add
jl
loope
jne
mov
test
cmpsl
adc
push
inc
inc
push
inc
icebp
insl
xor
mov
mov
cmpsl
mov
jnp
pop
lods
daa
xchg
push
call
jle
add
and
add
cmp
xchg
popf
sarl
adc
test
bnd
mov
iret
sub
outsb
mov
fimull
or
jno
jne
dec
push
or
and
cmc
dec
sub
lds
sti
jno
jbe
or
push
xchg
jns
test
popf
ds
add
or
ljmp
jle
mov
mov
and
jl
inc
xchg
xchg
inc
add
shll
push
fdivrs
and
jecxz
incl
push
add
ds
and
int3
dec
popa
mov
cmp
shl
jnp
out
jnp
xor
xor
push
adc
loopne
sbbb
bswap
daa
data16
or
cmp
mov
je
fsubrl
jnp
xchg
xor
mov
ljmp
outsl
sbbl
cwtl
cmp
rorb
lods
and
cmp
loope
les
mov
jno
js
loope
sub
cmp
mov
dec
mov
fwait
jnp
xlat
fidivl
insb
outsb
lahf
test
adc
icebp
xlat
push
lock
stos
enter
iret
rclb
js
sbb
outsb
sahf
xchg
out
enter
in
mov
adc
mov
sbb
lahf
fnstcw
or
mov
xchg
and
jge
sub
frstor
sub
pop
outsl
mov
enter
xlat
clc
add
sub
dec
sbb
push
xlat
push
inc
adc
loope
subb
rcrl
sub
xchg
adc
push
mov
pop
in
adc
sbb
fisubrl
rorl
mov
add
push
add
insl
push
push
mov
dec
push
mov
test
xchg
jecxz
mov
fdivl
mov
inc
inc
xchg
shrl
cmc
dec
mov
jle
repz
sub
sub
inc
jmp
inc
xchg
xor
push
mov
lock
aaa
cmp
xchg
mov
insl
mov
jbe
iret
stos
mov
push
je
mov
movsl
popf
roll
adc
jb
popa
or
mov
mov
out
cmp
push
test
outsl
shlb
and
out
pop
les
mov
pop
push
inc
fnsave
push
pop
int
inc
das
dec
jne
es
das
mov
dec
cld
inc
fildl
imul
lods
insb
imul
addr16
popa
in
pop
ret
mov
xchg
xlat
outsl
loope
inc
pop
popa
mov
jb
arpl
arpl
pop
dec
shll
scas
sub
lock
cltd
xchg
or
xorl
jge
adc
push
jno
mov
mov
jo
pop
ds
and
cld
test
adc
mov
pop
stos
je
adc
and
xchg
inc
cmpsb
push
gs
aas
push
or
leave
cmp
push
test
pop
pop
mov
fsubrl
loop
mov
adc
scas
out
dec
cmpsl
out
leave
fwait
inc
and
insb
scas
sub
jae
repnz
repz
dec
lahf
cmp
adc
mov
sbb
fnstenv
adc
out
or
jne
and
call
pop
xchg
lcall
sub
repnz
cmp
arpl
add
push
out
in
sub
xchg
cmp
sbb
lcall
popf
test
mov
mov
outsb
adc
loop
inc
loop
test
push
shrb
addr16
sbb
push
xor
lcall
lret
inc
mov
js
jne
stc
int3
inc
push
cmp
mov
stos
daa
sarb
pop
out
lahf
sbb
imul
dec
or
or
imul
ret
xor
cli
mov
sbb
test
xor
es
out
pop
loopne
pop
imul
xchg
icebp
lret
add
cmp
or
notl
xorb
hlt
mov
das
out
push
int
stc
mov
call
add
cwtl
cwtl
int3
jmp
xchg
mov
mov
imul
in
sbb
out
fisttpll
cwtl
fwait
cli
shll
pop
lret
cmp
cmp
and
pop
out
sub
ud1
lea
add
movb
and
fistl
sub
push
xor
movsb
xlat
push
and
push
cmc
dec
mov
sub
lock
add
lods
stc
mov
lret
lods
outsb
lret
inc
cmp
adc
mov
mov
scas
test
lods
cmp
dec
shlb
or
ss
scas
jne
push
das
jns
push
mov
sub
push
mov
ljmp
fucom
sti
adc
pop
into
sub
cmp
adc
or
insl
mov
mov
js
out
cmpsb
stos
push
mov
add
or
mov
out
xchg
repnz
imul
rorl
mov
or
jbe
and
negl
mov
sub
dec
xchg
addr16
mov
mov
sub
lahf
jmp
pop
cmpsb
inc
out
test
cmp
push
dec
leave
push
adc
pop
and
insb
mov
mov
pop
and
lahf
sahf
push
cmp
subb
dec
enter
das
cmpsb
clc
fisubrl
sbb
or
jmp
or
mov
out
adc
adc
ret
mov
dec
jno
mov
out
mov
out
cli
std
push
pop
mov
pop
xor
insl
repnz
jno
loop
push
mov
and
subb
add
imul
jae
mov
test
xor
in
mov
fistpl
jne
mov
push
ljmp
push
inc
or
sbb
popa
lahf
andb
lret
in
fwait
repnz
pop
jae
call
out
lods
jmp
fsubrl
movl
jno
notb
mov
sub
in
xchg
fwait
in
mov
pop
fnstcw
dec
dec
in
lea
jl
pop
or
mov
jns
cmp
gs
clc
data16
out
push
mov
outsb
and
mov
cmc
ret
sbb
cwtl
das
ds
adc
jecxz
mov
rcrl
test
lcall
inc
mov
adc
lock
mov
ror
xor
pop
loop
lret
movsl
cmp
cmc
sub
rclb
or
and
mov
std
jl
inc
sbb
adc
pop
push
movsl
and
sbb
and
adc
sbb
mov
lods
mov
pop
xchg
data16
mov
in
xchg
and
repz
sub
arpl
add
mov
dec
ljmp
or
push
nop
mov
xchg
in
cmc
sub
mov
sarl
outsb
cmp
jg
mov
filds
adc
xchg
daa
xor
dec
mov
push
mov
inc
add
and
lahf
push
popf
jo
mov
aam
mov
iret
stos
pop
pop
jp
xchg
dec
mov
adc
jne
jbe
decl
mov
mov
or
or
aad
mov
mov
fsubs
and
loopne
pcmpgtd
in
aaa
and
and
pop
sbb
movsl
cmp
mov
ret
addb
test
and
arpl
roll
mov
pop
mov
aad
fstpl
in
arpl
loope
xor
das
ret
pusha
jg
adc
or
clc
inc
mov
pop
cli
fcom
rcl
js
xchg
push
and
inc
data16
movsb
or
jl
fidivrl
or
or
sbb
imull
adc
add
mov
cwtl
bound
xor
stc
outsb
ds
clc
adc
pop
mov
rol
xor
mov
out
mov
adc
outsb
xor
pop
jbe
xchg
lret
xorl
aam
rep
repnz
jns
push
rcll
out
loopne
scas
cmpl
out
ss
in
sbb
inc
inc
daa
mov
cmpsl
inc
mulb
add
hlt
ljmp
pop
jb
negl
mov
dec
pop
pop
cltd
hlt
xchg
xor
mov
out
adc
insb
pop
and
dec
push
stc
loop
sub
jbe
icebp
cltd
inc
lods
xchg
and
ljmp
loope
lock
fstl
insl
pop
ljmp
mov
add
cmpsl
cmp
aaa
call
mov
mov
dec
xchg
aas
mov
cmp
sahf
inc
aam
mov
adc
aam
xchg
inc
jnp
inc
adc
repz
adc
popa
nop
mov
mov
inc
int3
and
mov
aad
cmc
sbb
xchg
jmp
out
int
jnp
push
imull
jp
sbb
fsub
pop
icebp
out
push
sbb
fs
hlt
jb
add
xor
jle
pavgw
push
shl
iret
popa
aaa
stc
repz
xchg
pop
inc
adc
test
ljmp
fmul
xchg
stos
rolb
jmp
imul
xchg
push
incl
jg
mov
dec
pop
add
test
scas
daa
sub
imul
sbb
cmpsl
sbb
mov
push
xor
push
mov
add
lods
rcrl
push
int
movsl
rclb
imul
sub
test
shl
or
aam
sub
nop
bound
cmpsl
cmp
int3
mov
push
fistps
ljmp
mov
bound
repz
mov
pop
fsubl
push
subl
jno
out
dec
push
xor
aas
out
rcrb
dec
dec
mov
loopne
push
rcrl
mov
add
ret
sub
leave
lods
popf
add
out
vpaddsw
xlat
sbb
dec
fstpt
rclb
xor
repz
aam
xorb
push
mov
repnz
faddl
xor
cmp
insb
sub
pop
std
dec
cmpsb
push
jno
fnsave
gs
mov
jns
nop
cli
aas
xor
adc
xor
and
test
push
cmp
mov
push
pop
add
dec
jle
sbb
pusha
xchg
mov
mov
adc
mov
sarb
fidivs
mov
mov
lahf
mov
shlb
dec
push
pop
jp
mov
sbb
nop
mov
lahf
mov
mov
imul
push
in
negb
inc
das
push
mov
shrb
adc
or
aas
push
stos
incb
ret
dec
les
and
stc
stos
add
data16
outsl
scas
popf
push
mov
iret
add
enter
dec
and
jp
testl
jmp
mov
mov
pop
subl
sbb
add
mov
push
pop
out
jl
push
sbb
xor
mov
jb
mov
rclb
sbb
jne
sub
ja
ss
jl
loope
ja
jns
dec
xchg
negl
jmp
mov
add
pop
inc
popa
xchg
mov
jge
insl
scas
xchg
rorb
add
push
mov
pop
sti
dec
lret
bound
out
ja
sbb
out
mov
mov
sahf
cmp
and
xlat
sahf
loop
aas
dec
iret
mov
jbe
lods
and
aaa
inc
jecxz
or
fdivrp
xor
stc
adc
sub
test
push
inc
in
stos
imul
stc
loop
or
fiadds
jmp
int
or
xor
fidivs
dec
cmp
xor
xchg
ljmp
sbb
jae,pn
push
mov
aad
jb
and
lahf
mov
jae
popa
xchg
rcrl
inc
mov
jns
test
dec
xor
add
lahf
mov
stos
ljmp
movsl
mov
cmp
fdivrs
ror
scas
cs
in
je
iret
jno
ret
aaa
xor
jae
adc
ljmp
push
push
popa
xchg
cmp
rcrl
sahf
pop
aam
ss
divb
in
mov
push
mov
jmp
in
pop
lea
jge
or
cmp
push
aas
sbb
inc
sub
andw
dec
sarl
int3
sbb
mov
xor
dec
and
jmp
xchg
or
mov
pushf
sub
stc
jmp
mov
iret
sub
jo
fcmovbe
pop
fnstcw
dec
mov
daa
jnp
pop
jl
mov
jle
in
into
aad
cltd
jg
cmpsl
fs
lea
out
cmpsl
imul
push
insl
ljmp
mov
mov
add
in
jp
sbb
lret
jns
pop
xor
loop
les
push
mov
cmp
jo
shl
sbb
outsl
out
scas
dec
ss
lock
andl
movsb
lods
and
sbbl
xchg
mov
pop
movb
int
mov
stos
push
fisttpl
sbb
and
fmull
push
lcall
add
stc
nop
pop
push
push
pop
cld
cmpsw
push
push
mov
test
xchg
enter
and
movsl
loopne
inc
and
aas
dec
inc
mov
cmpsl
dec
xor
or
cld
lret
push
jge
jp
fcmove
rolb
lds
add
add
scas
dec
adc
xchg
cltd
scas
inc
scas
push
fstpl
or
addr16
incb
mov
push
inc
mov
dec
gs
jg
pushf
mov
fldt
test
inc
into
sub
js
mov
pop
lcall
out
mov
pop
dec
movsb
xchg
mov
add
mov
add
aad
call
adc
aam
ror
add
add
mov
dec
mov
dec
cli
jbe
jo
mov
sbb
data16
ret
inc
les
dec
pop
clc
in
add
loope
fists
sbb
jl
jbe
mov
push
sub
mov
mov
stc
insb
adc
ss
mov
out
mov
call
mov
push
jae
mov
sub
or
push
jl
pop
jl
push
adc
sbb
es
mov
lock
and
nop
stos
sbb
xor
push
aad
dec
or
popa
rcrl
popa
pop
and
sub
adc
push
repnz
pop
mov
xor
lahf
stos
lods
mov
je
lock
movsb
bndldx
fldl
push
andl
ret
pushf
or
xchg
adc
sbb
pop
jl
in
insb
cld
les
dec
lea
outsb
clc
inc
dec
sbb
out
int
daa
testl
pop
cli
lods
jbe
shrl
cmc
and
adcl
add
jnp
push
aaa
out
sub
andb
pop
cltd
mov
push
xor
js
jp
insl
lcall
aaa
inc
nop
call
fldt
or
call
outsl
mov
test
mov
mov
mov
ljmp
out
push
fists
jle
mov
adc
popa
pop
les
sub
leave
pop
insl
mov
cli
insb
inc
insl
ljmp
mov
aad
enter
in
faddl
test
add
sub
mov
ret
mov
or
imul
dec
roll
jl
add
out
loope
pop
or
dec
sti
cwtl
js
jmp
sbb
mov
out
hlt
stos
xchg
outsb
fistps
xchg
mov
outsl
inc
mov
insb
pop
loope
ret
out
into
mov
dec
call
jne
dec
sub
mov
nop
mov
sub
jo
cmp
pop
add
fisubrs
ds
or
in
daa
out
mov
add
notb
mov
movsb
adc
int3
mov
rcrl
mov
aam
mov
pushf
movsb
ljmp
lahf
jae
adc
lahf
neg
mov
scas
push
je
push
daa
jns
adc
addl
cmp
pop
jecxz
mov
testb
xor
mov
xchg
jne
jno
pavgw
jb
repz
xchg
jne
dec
push
cmp
enter
imulb
sbb
or
mov
adc
pushf
enter
adc
into
scas
repz
dec
mov
leave
pop
sbb
in
push
cmp
test
jbe
lods
sub
jnp
cmc
cmc
out
aam
xchg
xor
iret
or
mov
adc
aaa
inc
cmpb
mov
test
and
jle
jnp
shrl
mov
pop
fldcw
int
test
or
les
xchg
int3
loope
pushl
fcomps
insl
cmpb
movsl
jmp
cltd
scas
bound
sbb
inc
sub
je
lcall
push
sti
ds
lds
scas
jo
mov
clc
pop
das
je
lcall
or
jne
sbb
cs
into
int3
repnz
lret
repz
adc
popa
repnz
adc
movsl
sti
scas
dec
sbb
test
cli
mov
out
enter
fcmove
pop
stc
sub
call
lock
scas
fcomp
stc
pop
jne
mov
mov
cmp
das
fisttpl
out
pop
mov
sub
out
push
roll
rcr
pusha
cmp
sub
mov
pop
jmp
imul
es
xor
aaa
jae
xchg
paddq
dec
adc
mov
inc
mov
dec
les
xchg
cmp
andl
jo
es
inc
push
dec
stos
xchg
fisubrs
outsl
subb
ss
dec
dec
or
cltd
mov
xor
cli
mov
loop
jl
push
aas
jl
lods
jnp
and
pop
sbb
mov
xchg
outsb
push
jge
xlat
xchg
insl
xchg
mov
dec
dec
cmp
cmp
dec
dec
scas
lds
mov
roll
push
sub
stos
push
mov
push
sbb
stos
test
dec
and
mov
dec
jle
cwtl
xor
cmp
sarb
xchg
neg
sub
inc
mov
lret
cmp
dec
xchg
mov
mov
inc
add
jo
and
or
pop
dec
aaa
and
decl
aad
xor
mov
inc
mov
in
ja
lds
inc
pop
ljmp
mov
add
add
leave
mov
ja
inc
repnz
and
jp
mov
add
pop
int
dec
leave
xchg
scas
enter
aas
xchg
mov
bound
sub
into
push
push
cltd
inc
xchg
stos
repz
xchg
xchg
repz
xchg
add
add
cmp
push
fldl
in
mov
rorb
neg
xor
fmull
stos
or
and
in
mov
cmpsl
adc
jo
cld
insb
xchg
shlb
lods
cmp
mov
mull
addr16
repz
cld
and
jns
adc
movsl
icebp
push
insl
lods
jg
pushf
or
add
sub
or
and
testb
fwait
or
xchg
push
pop
les
push
testl
call
inc
dec
push
notb
pop
cmc
movsb
inc
sub
dec
mov
inc
inc
push
fldcw
shll
push
loop
test
movsl
mov
mov
fisttpl
xchg
jne
sub
adc
mov
push
cmp
mov
cmp
push
test
push
and
sub
cmp
jge
cmp
outsb
push
aaa
pop
inc
pop
jns
notl
adc
mov
mov
push
lahf
adc
mov
or
xorb
xchg
xor
lods
push
pop
fmull
mov
mov
loope
scas
mov
sbb
arpl
cmpxchg
xor
and
xchg
mov
enter
fmull
xor
add
xchg
and
pop
jns
andb
jecxz
fidivrs
les
mov
insl
mov
cwtl
or
arpl
nop
cmpsb
ljmp
mov
ljmp
hlt
cwtl
mov
pop
sbb
jae
ljmp
xchg
sub
or
daa
jbe
adc
lahf
pushf
xchg
or
cltd
inc
mov
sahf
call
or
push
and
push
sti
sti
sub
inc
jne
insb
mov
aas
mov
or
mov
addr16
pop
sarl
das
fcoml
bound
push
and
cmp
mov
lods
cltd
outsl
sbb
sahf
xchg
das
lahf
jae
jecxz
test
ret
pop
shrb
loopne
sub
push
jns
push
jae
xchg
or
mull
pop
lahf
sarl
fisttps
mov
stos
lahf
mov
jge
mov
xchg
fidivrl
jne
dec
xor
jl
inc
xchg
je
les
adcl
aad
outsb
xor
xlat
jb
insl
insb
icebp
es
rep
mov
loop
push
push
sub
movsb
pop
sub
jle
dec
lods
lods
sahf
add
imul
and
mov
popf
xchg
inc
scas
ja
shlb
shrl
adc
xor
cmp
ret
popf
and
pushf
sbb
push
or
cwtl
out
cld
mov
sbb
and
xchg
jae
ds
lret
push
and
xchg
jns
pop
imul
ss
inc
inc
lret
xchg
cltd
mov
or
sbb
cli
hlt
jnp
or
push
pop
sbb
xor
push
mov
mov
and
call
xlat
call
xor
inc
xor
fmull
jnp
inc
je
cmc
mov
fldt
jecxz
fwait
push
ret
mov
loopne
jge
aaa
mov
in
in
sub
gs
sbb
xchg
mov
sub
jns
in
and
or
jb
jl
inc
outsl
sarb
cmp
dec
add
mov
daa
test
out
pop
lret
leave
lahf
repnz
sbb
dec
or
pop
pushf
in
aas
or
sbb
rdpmc
cs
data16
sbb
daa
xor
lods
xchg
pop
sub
lds
or
cmpsb
pop
push
inc
mov
enter
fnstcw
movsl
or
das
ss
repz
fsub
outsb
xchg
xchg
mov
dec
cwtl
cmp
or
stos
out
push
jnp
push
adc
daa
ret
loopne
fwait
xchg
mov
pop
test
inc
mov
cld
or
adc
and
stc
xlat
sbb
add
cmc
ficoml
mov
xchg
fidivl
mov
fdivl
sbb
popa
int
inc
scas
sub
stos
mov
add
jp
xlat
fs
fs
out
pop
inc
ljmp
mov
mov
jbe
outsl
rclb
inc
and
xchg
push
mov
xchg
mov
psubusw
mov
in
out
jb
cs
xor
movsl
stos
and
ljmp
push
cmpl
push
mov
sub
push
cli
mov
or
scas
mov
test
xchg
movsb
mov
push
lcall
inc
and
ss
arpl
movsb
and
or
out
mov
mov
xchg
cwtl
or
sub
inc
mov
loop
test
popf
mov
je
mov
iret
cwtl
push
jo
mov
stos
add
iret
jecxz
xchg
fsubl
mov
jg
xchg
jne
xchg
push
cmp
mov
pop
mov
in
jg
mov
enter
pop
xlat
into
xchg
lea
or
xchg
or
imul
add
iret
imul
mov
in
rolb
in
inc
sub
rcr
roll
or
and
outsl
xor
cmp
fwait
and
push
dec
ljmp
cmc
jmp
ja
cwtl
push
xchg
dec
cld
sbb
popf
mov
mov
mov
push
fcomps
sbb
test
loope
dec
sbb
mov
xchg
xchg
sbb
mov
outsb
mov
in
daa
cmc
add
push
imul
sahf
and
xchg
gs
gs
or
scas
xchg
mov
shll
pop
mov
mov
popa
mov
xchg
loope
or
sahf
sahf
xchg
cmovno
or
mov
push
faddp
pop
mov
lods
inc
sub
shrb
dec
lea
js
loopne
xchg
pop
ficomps
mov
fcmovnb
iret
ss
jo
popf
add
pop
stos
loopne
and
mov
push
in
aad
out
enter
cmp
xorl
nop
inc
or
in
out
enter
jp
sarb
sbb
ds
sub
sbb
es
movsl
sbb
ret
aas
and
sub
pop
inc
or
cwtl
and
dec
fisttpl
jg
pop
jb
cmp
cmp
dec
test
jecxz
mov
repz
lahf
mov
imul
rolb
cli
mov
and
or
scas
push
and
incl
lret
test
fnstsw
xchg
jl
rclb
inc
mov
xor
aas
add
movsl
call
test
xchg
add
into
pop
inc
in
jecxz
jbe
stos
nop
jp
cmp
je
leave
and
div
jbe
pusha
push
lret
scas
xor
and
dec
mov
frstor
inc
mov
mov
cmpsl
xor
ljmp
inc
cltd
mov
test
lret
sahf
pop
cmp
and
hlt
cmp
sar
push
out
notb
mov
push
fs
fucomip
sub
cmp
mov
jg
sbb
adc
out
lods
insl
scas
mov
add
mov
lret
mov
dec
sbb
push
inc
jmp
imul
push
xchg
sub
mov
into
and
lods
push
xchg
rolb
movsl
jge
rcrb
imul
rorl
sub
cmp
add
ljmp
sbb
add
orl
adc
and
arpl
ficomps
in
jns
add
jns
data16
dec
mov
scas
xchg
jge
and
repnz
notl
inc
popa
lea
repz
adc
adc
pop
out
mov
ret
push
gs
out
dec
or
xor
ss
data16
ret
test
inc
jle
repnz
sub
push
xor
cmc
push
mov
loopne
out
addr16
in
les
ljmp
inc
mov
or
jp
rcr
fs
xlat
sbb
jne
ds
mov
sbb
xor
aam
push
fimull
mov
paddusb
fistps
or
xchg
mov
js
cwtl
leave
sbb
arpl
pop
lahf
xor
xchg
int3
xchg
das
cmpsb
jo
mov
loopne
xor
jge
lret
dec
test
cmp
add
dec
out
cwtl
jns
fcompl
or
std
push
insb
in
sub
sbb
lods
xor
aad
sbb
pop
inc
inc
xchg
push
cmc
std
insb
mov
pop
insl
inc
aam
jae
add
sti
pop
imul
jbe
dec
xchg
xor
pusha
jl
lcall
loopne
sub
popf
push
pop
loopne
int3
inc
pop
iret
aas
test
loope
mov
xchg
or
shlb
sbb
jae
movsb
adc
inc
adc
sub
call
scas
sbb
push
cli
xchg
xor
and
outsb
xor
cli
dec
mov
cmp
arpl
mov
push
aaa
xchg
dec
push
push
push
in
add
imul
push
mov
fisubl
cmp
insl
pushw
loop
ja
sarl
rorb
iret
dec
jge
cmp
scas
popf
fwait
cmp
js
outsb
mov
xchg
lret
jns
or
hlt
mov
dec
std
out
xor
pop
cmpsl
iret
movsb
cmp
testb
mov
push
xchg
dec
mov
fldl
ret
mov
in
mov
and
sub
fbld
shrl
jmp
outsl
lret
fimuls
jae
repz
and
sbb
cmc
add
and
int3
xlat
test
sbb
mov
xor
inc
les
xchg
pop
jae
xchg
pushf
xorb
divb
mov
mov
mov
in
xchg
jecxz
sbb
je
mov
shrl
pusha
stos
xchg
xchg
outsl
xchg
loopne
or
outsb
push
push
mov
int
xchg
das
decb
mov
insb
cmp
rcrb
xor
loopne
push
into
sub
rolb
data16
mov
xchg
xor
scas
mov
xchg
inc
out
shrl
pusha
es
imull
pop
inc
add
sub
dec
add
shll
fimull
push
xchg
icebp
movsl
pop
test
enter
and
call
mov
cmpsb
shr
or
mov
sbb
fstpl
in
xor
cld
xchg
mov
mov
inc
jmp
ja
mov
and
out
jge
fs
or
mov
lds
dec
inc
push
push
in
fcoml
xor
pop
gs
jg
xchg
stc
rcll
inc
pop
mov
out
pop
xor
push
repnz
mov
aas
pushf
lcall
mov
inc
dec
xorb
les
gs
push
xchg
mov
xchg
adc
inc
and
ds
call
gs
pop
dec
push
aam
imul
sbb
push
xchg
sbb
and
in
push
outsl
rorl
es
jge
movsl
in
jg
sbb
lock
out
dec
mov
mov
scas
cmp
dec
jne
mov
push
or
add
and
jmp
pop
je
dec
sar
fldcw
nop
adc
sub
pop
popa
dec
aam
push
inc
mov
jle
xchg
nop
mov
and
lahf
mov
fiaddl
sub
mov
mov
into
or
xor
cltd
push
sub
xchg
xor
lahf
adc
pop
xchg
fcomp
lret
mov
and
fidivrs
and
test
xchg
aam
in
xor
test
lret
aad
std
or
in
fstl
pop
je
sub
pop
xchg
xchg
jne
mov
int3
clc
mov
push
mov
adc
jge
mov
xor
xlat
sub
lcall
movsl
or
or
pop
sbb
cmp
aam
div
idivb
pop
lahf
rcr
xor
out
add
paddw
xchg
cmp
arpl
push
xchg
inc
push
out
popf
push
daa
in
lret
into
aad
xor
add
leave
into
cmp
adcb
dec
adc
xlat
xchg
ret
gs
mov
add
add
pop
bound
and
adc
fdivl
and
push
mov
bound
mov
imul
insb
dec
insl
outsb
aaa
pop
dec
sarb
add
orb
cmp
xor
scas
cmp
fmul
loope
pop
mov
cmp
gs
pop
xchg
pop
sub
cmp
xchg
inc
gs
sub
inc
icebp
jbe
push
dec
mov
shrb
ja
jmp
push
push
sbb
pop
add
cli
movsl
outsb
mov
outsb
insl
aad
inc
dec
mov
mov
ljmp
int3
push
pop
push
int
sbb
pushf
mov
data16
xor
ret
fucomip
pop
movsl
sahf
adc
mov
inc
cld
pop
int
jmp
mov
adc
adc
cmp
mov
das
add
xchg
out
test
fbld
or
pop
mov
or
sar
int
pop
stos
inc
aad
lahf
mov
test
outsb
test
int3
js
inc
pop
push
and
leave
and
lods
sbb
ret
into
push
lods
stos
pop
cmp
push
test
aad
popa
sahf
fs
cmc
sbb
inc
pusha
in
sbb
ja
or
and
lret
stos
sarb
andb
inc
xchg
xor
add
insb
sarl
push
dec
scas
jp
mov
xchg
mov
jne
inc
inc
add
outsl
push
adc
fnstenv
push
movsl
push
addr16
jp
sti
pop
dec
shrb
fwait
push
inc
aas
insl
sarl
adc
insl
mov
xor
mov
adc
mov
cmp
cmp
xor
push
fisubrs
xor
test
shrl
xchg
cwtl
lock
mov
ret
lret
mov
je
mov
fildll
or
out
dec
lock
pop
shll
imul
sbb
lea
mov
out
clc
loop
cmp
pushf
aas
lods
fsts
inc
sbb
push
repz
pop
mov
shlb
in
les
dec
sub
sbb
push
aas
test
and
and
sub
icebp
cltd
repz
xlat
repz
imul
xchg
dec
pavgb
dec
jne
sub
pop
xorl
fsubl
nop
mov
outsl
mov
push
inc
addr16
and
movsb
stos
rorl
sahf
push
lret
add
xchg
jge
xchg
mov
push
lods
insb
out
mov
orl
pop
les
jle
adcl
hlt
pop
imul
push
jb
pop
pushf
fbstp
arpl
mov
jge
xchg
inc
test
or
or
mov
push
mov
adcl
push
das
jo
xlat
test
cmpps
adc
xor
je
mov
xchg
mov
lock
fs
sub
idiv
xchg
pushf
lret
jmp
xchg
add
sarb
jb
jb
xchg
mov
lods
mov
adc
add
fs
and
xor
and
push
push
push
out
js
in
jns
loop
data16
rcll
test
push
daa
xor
dec
add
xor
xor
add
jmp
insl
lock
fsubrs
ret
movsl
bound
and
lods
pop
and
sub
arpl
rcrb
stc
std
push
mov
scas
jmp
xchg
xor
mov
in
fdivl
or
int3
xchg
xor
sub
subb
ljmp
pop
cld
ret
out
cmc
or
fbstp
neg
lods
stc
pop
push
pop
call
sub
mov
pop
aas
mov
and
dec
outsb
dec
pop
dec
xorl
xchg
lock
mov
movsb
out
fwait
pop
insb
arpl
out
or
or
push
test
test
mov
ds
into
pop
or
fisubrl
xor
ficoms
sub
mov
cmpb
add
jns
mov
and
ljmp
cwtl
or
pop
jecxz
pop
out
inc
adc
inc
sbb
pop
roll
push
xchg
jne
xchg
andb
lret
xorb
mov
lods
inc
insb
hlt
shlb
adcb
jno
xlat
mov
mov
push
das
xchg
jg
inc
jb
pop
test
imul
inc
and
add
mov
jbe
enter
pop
stc
xchg
pushl
push
sahf
shlb
sbbb
rorb
adc
mov
rorl
jo
icebp
xor
into
or
jnp
and
mov
pop
jge
mov
dec
xorl
nop
xor
xor
inc
push
sbb
nop
jmp
aad
pushf
inc
add
jne
pop
mov
sbb
inc
cmc
cmc
test
in
sahf
jae
cs
mov
xlat
or
xchg
cld
fs
jle
xor
std
pop
into
pop
push
or
mov
jle
sub
divb
inc
lods
subl
mov
mov
mov
rolb
jae
test
movsl
sub
adc
pop
fnstcw
dec
test
arpl
je
push
scas
scas
cmpsl
rep
rolb
fcomp
gs
push
inc
iret
outsb
shl
xor
adc
xchg
push
jg
mov
pop
push
mov
clc
pop
call
or
fsubs
pop
movb
mov
stos
mov
pop
std
cmp
xchg
popa
cmp
int3
aad
adc
and
adc
mov
pop
lods
inc
mov
mov
pop
xchg
imul
dec
clc
mov
adc
in
and
rcll
mov
sbb
cmpsb
sub
or
mov
jle
es
scas
sub
stos
push
lods
repnz
shlb
mov
stc
lea
jecxz
outsb
daa
push
pop
fdivrs
or
clc
ss
inc
mov
push
pop
cmp
jno
jnp
scas
scas
jno
addl
jmp
popa
sbb
mov
mov
pop
cmp
add
mov
mov
mov
mov
adc
call
dec
gs
inc
outsb
divb
stc
aam
stc
mov
and
push
test
pop
jmp
pop
pop
and
fldt
push
test
push
nop
mov
mov
and
dec
shll
mov
push
sahf
dec
mov
jg
sbb
pusha
pop
lods
jl
xchg
mov
daa
loop
sub
and
inc
or
push
mov
inc
xlat
bound
or
lea
in
rcll
je
bound
push
lcall
xor
imul
mov
jne
xor
mov
pop
sub
sub
mov
cwtl
xor
mov
and
adc
xor
lds
daa
out
mov
stc
xor
out
xor
mov
sbbl
or
das
pushf
negb
and
adc
xchg
leave
pop
fwait
sub
jle
push
in
ret
lret
push
push
inc
push
dec
cs
push
jl
mov
clc
mov
cmp
jo
lods
out
xchg
push
icebp
shl
mov
push
push
jns
cmp
int
sbb
mov
push
aam
pop
xchg
mov
repnz
lods
lea
jecxz
xchg
sbb
loope
fldenv
and
jno
cld
into
xor
add
fucomp
sub
repz
xor
addr16
xor
sbb
pop
or
lods
adc
adcb
jnp
add
mov
int
and
js
mov
xchg
add
xor
addl
pushf
jmp
inc
pop
xchg
lods
negl
xchg
lods
push
int
mov
jg
xor
rcr
out
clc
fiadds
xor
out
mov
sbbb
mov
mov
sbb
adc
add
inc
pop
outsl
add
std
repz
pusha
jae
and
adc
xor
pop
icebp
in
shl
ljmp
add
adc
orb
push
mov
mov
mov
sarl
mov
mov
aad
adc
pop
aam
xchg
cmpsb
les
push
xchg
mov
sub
loopne
or
cmp
nop
mov
fsts
insb
ss
cs
cmp
mov
inc
jbe
das
aaa
lods
icebp
cmpsb
leave
and
sub
scas
pop
sbb
scas
xorb
xor
push
add
lods
and
xor
repz
mov
loop
mov
shrb
adc
sbb
push
out
mov
dec
lock
outsb
daa
xor
inc
push
outsb
xor
xor
xchg
mov
testb
repnz
das
mov
das
dec
pmulhuw
or
jp
sbb
cmp
add
push
ds
cwtl
cltd
jnp
lods
mov
rcrl
lock
cwtl
ds
notl
in
cmp
push
pop
sub
mov
imul
movsl
jbe
jg
add
add
mov
push
inc
arpl
mov
test
lds
inc
and
pop
dec
jo
out
test
ret
aad
inc
icebp
xor
xor
sub
add
insl
enter
and
incb
cld
lcallw
jg
cmpsl
and
or
jle
movsb
mov
jbe
sub
pop
jno
xor
jnp
pop
xchg
push
sub
rcrb
add
insl
jmp
int
and
arpl
xchg
push
pop
xor
out
jns
pop
sahf
xor
jl
and
jle
test
ffreep
push
addr16
cmp
xchg
sbb
cmp
xor
cli
jo
and
inc
cmp
aad
xorl
outsb
mov
fadd
fsubl
xor
or
jp
push
scas
popa
insb
je
xchg
adc
mov
sbb
out
dec
loope
add
dec
mov
push
into
stc
add
std
pop
jns
sub
jbe
lods
mov
out
push
mov
lds
add
mov
mov
cmp
std
mov
push
jle
bound
outsb
pop
mov
enter
mov
cmp
int
jb
repnz
loopne
mov
shll
sbb
and
in
popf
loop
fldl
in
xor
xchg
icebp
mov
lods
jne
sub
stos
or
pop
loope
and
jl
push
cmpb
mov
mov
into
jecxz
fcompl
cli
inc
pop
sbb
xorb
push
ret
push
pusha
jmp
jbe
push
js
pop
movsb
fstl
outsb
test
sbb
je
cmp
and
aad
sbb
mov
in
adc
test
fisubrs
insl
or
incb
iret
ljmp
test
decl
pop
test
cmp
fisttpl
test
cmp
dec
mov
mov
dec
push
lea
pop
sub
ret
cmpsl
mov
stos
pusha
inc
add
and
hlt
hlt
add
jae
aam
ds
in
xchg
push
mov
inc
fbld
popa
clc
ds
mov
inc
sub
lea
in
shr
test
sub
cmpsb
ds
and
jg
push
loopne
jo
xchg
aam
fwait
adc
xchg
cmpsb
aaa
andl
es
popa
test
in
rclb
in
mov
not
mov
lock
adc
jbe
mov
push
js
call
test
lret
and
ja
mov
repz
lret
mov
call
lods
fwait
cmp
sub
les
repnz
test
fcoml
insl
shrb
dec
push
outsb
mov
aas
call
das
je
fcoml
jp
jle
jae
adc
das
push
mov
push
mov
repz
jnp
int3
out
out
decl
lea
mov
mov
repz
pusha
out
push
xchg
in
les
repz
mov
mov
outsl
add
lcall
push
lds
hlt
mov
cmp
sbb
sub
xchg
mov
test
xor
sbb
fs
adc
out
add
mull
mov
out
iret
or
pusha
xor
pop
mov
cwtl
gs
imul
cld
insb
sti
dec
add
insb
mov
add
cmp
and
lea
cmpsl
cld
lock
popa
arpl
lock
mov
movl
xchg
jmp
mov
lcall
xchg
jp
ds
adc
push
jmp
stc
rcll
outsl
pop
adc
mov
pusha
cmp
or
cmp
cmpsb
sbb
mov
adc
mov
adcb
jp
cmc
push
cmp
out
cmpsb
pushf
xor
cmpsl
add
sti
in
insl
mov
mov
jge
jp
ficoms
in
cs
mov
in
dec
fsts
mov
dec
les
gs
inc
insl
lds
mov
popa
add
pop
pop
loope
enter
lcall
dec
add
ljmp
mov
int3
mov
push
adc
inc
inc
xchg
test
xor
lea
mov
or
int3
mov
stc
imul
sbb
xor
sub
xchg
dec
iret
inc
mov
stos
cmpb
cvtps2pi
fs
or
push
xor
jno
fidivl
cld
sbb
adc
pusha
push
cli
mov
aaa
mov
cmpsl
subb
mov
jl
xor
jbe
rcrl
cmp
mov
cmp
push
test
aam
cmc
push
arpl
pop
arpl
pop
sub
mov
pop
xor
mov
inc
pop
in
mov
sbbl
int3
sub
bound
sbb
in
cmpsl
in
and
and
enter
stos
addr16
xor
aam
or
mov
mov
int3
test
jno
inc
lahf
pop
in
adc
inc
push
idivb
cmp
adc
fildll
ljmp
jge
lock
sti
add
cmp
les
loop
mov
lret
rorl
or
aas
pop
add
push
push
sub
lahf
cmp
movsl
in
lcall
int
mov
fildl
add
push
xchg
popa
dec
sbb
push
and
fsts
push
jb
mov
cmpsb
push
ficoms
std
inc
mov
push
push
aaa
inc
das
aad
fwait
aam
push
gs
into
push
inc
push
add
cmp
or
cmpb
push
rorb
mov
fldl
shlb
jmp
inc
pop
jne
ss
loope
mov
ja
shlb
repz
loopne
icebp
pop
add
push
push
rclb
xlat
pop
pop
cld
cli
xor
cmp
mov
lret
stc
popa
push
adc
cmpsb
sub
or
sub
adc
sbb
addr16
mov
loope
dec
aaa
xchg
pop
mov
xor
mov
in
xor
shrl
push
lea
dec
ljmp
cmp
jmp
cmc
insb
lods
lcall
xor
ficompl
jl
mov
adc
lods
pop
sbb
leave
sbb
das
mov
and
xlat
stc
and
mov
mov
sub
test
or
adc
push
popf
daa
push
jbe
or
adcl
jge
lds
or
cmp
sbb
sarl
add
sub
sbb
cmp
mov
sbb
das
inc
inc
cli
test
shlb
dec
mov
push
push
jmp
faddp
aam
scas
adc
push
pusha
jle
pop
movsl
inc
jge
or
clc
sbb
inc
ss
subb
push
jg
out
scas
clc
or
test
pop
movsb
xchg
loope
xor
jl
inc
mov
add
pop
fld
push
daa
cmp
pusha
add
adc
cmp
sahf
mov
movsl
repz
jae
inc
mov
outsl
sbb
xchg
repnz
sbb
add
fstl
test
cli
decl
add
mov
test
loope
and
imul
gs
gs
mov
cmpsl
xchg
mov
mov
cmp
and
movsb
or
aaa
sti
jne
sub
dec
std
jge
cmp
cmpsl
aad
xchg
mov
push
leave
mov
ror
rorb
adc
scas
cmp
cwtl
js
jg
ljmp
inc
sub
xorl
loop
les
sbb
dec
stos
shl
push
push
fwait
std
jmp
inc
push
subl
lea
out
into
cltd
outsb
cs
nop
lods
pop
cmpsl
sti
divl
clc
pop
xlat
scas
add
std
addr16
adc
xchg
xchg
out
cmpb
gs
add
lret
push
jae
and
sub
ss
ss
mull
js
mov
mov
mov
imul
stos
cmp
cs
push
sti
in
or
mov
mov
insl
mov
es
outsb
mov
daa
idivb
dec
div
inc
push
adc
pushf
lret
adc
push
cld
jge
leave
test
arpl
dec
mov
stos
mov
jecxz
lods
push
inc
or
ja
mov
outsb
dec
push
out
and
rorb
and
lea
repnz
mov
andb
cmc
adc
jmp
sub
mov
ret
scas
and
fcoml
inc
mov
aaa
in
sbb
popa
sub
test
mov
icebp
adc
sbb
inc
fisubl
addr16
jnp
leave
pushf
nop
aam
push
lea
dec
ss
adc
es
adc
ret
and
fs
jo
push
test
push
rol
xchg
call
ret
mov
or
sbb
mulb
push
int
push
ret
pop
in
sbb
xchg
shll
ret
lcall
jae
adc
cwtl
xchg
lock
in
jge
adc
inc
sub
fidivrl
cwtl
mov
das
dec
inc
orb
lcall
lret
or
ret
ret
adc
in
xchg
pop
adc
mov
inc
bound
aad
icebp
push
ret
daa
push
mov
jnp
hlt
out
popa
inc
or
ret
movsl
aas
mov
dec
xchg
mov
fs
push
jne
ljmp
xchg
cmp
jmp
push
jg
sti
ret
call
sbb
jnp
dec
mov
data16
sub
push
aas
outsb
xor
outsl
push
cmp
outsb
fidivrl
xlat
ficoml
mov
lods
jmp
js
mov
mov
out
pusha
cmp
mov
clc
mov
outsl
sub
cld
inc
mov
fcmovne
sub
loopne
jb
notb
xchg
outsb
sbb
cmp
movsb
sub
jg
in
xor
shrb
and
or
lods
loopne
pop
jecxz
jne
sbb
add
mov
loopne
cmp
mov
mov
ret
leave
lds
fildl
inc
lods
insl
imul
mov
mov
mov
fs
or
push
sub
imul
or
popa
adc
bound
jnp
pop
xchg
je
icebp
or
mov
scas
xchg
fsubl
cmp
sbb
jbe
out
sbb
inc
lret
jp
sub
and
scas
pushf
cwtl
dec
push
dec
and
and
mov
jmp
clc
inc
cmp
jmp
xchg
sar
or
std
movsl
popf
in
push
subb
mov
or
xor
stos
lods
cld
dec
push
pushf
dec
dec
adc
lret
imul
mov
mov
daa
ljmp
add
adc
test
rclb
into
out
mov
es
cmp
sub
out
mov
js
loop
and
mov
dec
repz
lds
xor
inc
push
leave
pop
sub
lods
push
mov
dec
popl
repnz
pop
mov
cs
adc
mov
lcall
int3
ljmp
jno
fstps
dec
jae
ljmp
daa
cmp
insb
aad
test
cltd
aad
xchg
jno
popa
push
ja
cmc
es
jae
stc
push
aad
mov
outsb
cmp
pop
pop
dec
xchg
stc
stos
inc
cmp
int
dec
arpl
addb
aam
in
and
sub
fcmovu
inc
sbb
jmp
inc
dec
jmp
cmp
xor
mov
movsb
dec
icebp
outsb
adc
push
scas
jp
xor
jp
sub
jnp
mov
aaa
adc
mov
mov
mov
sub
xchg
aas
mov
pop
movsl
mov
jg
and
xchg
sar
sub
cmp
dec
dec
mulb
test
repz
aas
movsl
and
xchg
mov
or
insb
hlt
add
jb
in
adc
fsubs
nop
pop
data16
aam
pop
idivl
add
and
jl
adc
mov
and
enter
sub
push
jb
add
jecxz
or
and
ja
xchg
cwtl
adc
scas
call
call
in
movsl
out
mov
add
nop
pop
loop
add
sbb
sbb
and
shll
push
adc
adc
cs
push
pushf
dec
cld
mov
mov
stc
push
dec
jecxz
outsb
or
push
data16
inc
scas
dec
stos
pop
ljmp
lret
mov
ljmp
aaa
sub
pop
sbb
adc
enter
into
mov
sti
lret
sbb
push
stos
sbb
loope
lock
mov
add
shr
mulb
adc
adc
dec
fmull
mov
xchg
nop
pusha
ljmp
xor
xchg
mov
lahf
xchg
mov
mov
cmp
ds
jns
pop
fcoms
mov
jno
mov
orl
rcll
arpl
popa
mov
jecxz
std
lock
inc
pop
pop
jnp
mov
ret
ds
mov
lock
add
xchg
cmpsl
cmp
fildll
or
and
sbb
lret
fs
adc
dec
jne
imul
mov
mov
gs
fimull
sahf
dec
push
sbbl
fisubrs
push
cmc
jmp
cmp
jle
pusha
jne
rcrb
push
cli
ljmp
pop
cmp
roll
sbb
cli
in
out
pushf
addr16
cmp
pop
enter
adc
loope
aad
fdivrs
and
ret
sti
add
icebp
incb
mov
test
leave
mov
cmp
add
jae
or
pop
fcoms
subb
mov
jl
shrl
sbb
dec
mov
or
jg
repnz
fsub
dec
add
ss
jecxz
inc
pop
cli
sbb
data16
mov
sub
or
lcall
rorl
int3
stos
js
pop
dec
fwait
xchg
std
ss
xor
pop
adc
xchg
test
sbb
dec
xor
ss
mov
mov
push
inc
or
jno
lods
inc
push
xlat
imul
xor
outsl
or
xchg
ja
jecxz
dec
push
flds
mov
xchg
xchg
aas
pop
sub
insb
pop
adc
scas
or
out
inc
cmp
push
xor
add
cltd
push
stc
push
aaa
cmp
shrl
jb
inc
in
loopne
insl
push
ret
lret
mov
pop
adc
sbb
test
jmp
adc
pop
sbb
stos
xchg
mov
in
xchg
xor
dec
and
cs
pop
ss
dec
cmp
mov
in
jae
iret
cld
inc
sbb
or
shlb
and
jecxz
sbb
inc
repz
xchg
xchg
loopne
inc
daa
mov
loopne
adc
cmc
fimuls
stos
lcall
fnsave
push
jg
js
rcll
jmp
push
dec
fs
dec
dec
push
lret
push
jns
movsl
dec
xor
ss
sahf
cmc
xor
mov
outsl
push
xchg
xchg
mov
in
pop
sub
jecxz
flds
xlat
data16
clc
loop
mov
les
and
lret
nop
cmpsl
push
addb
push
call
fs
jge
shl
jns
jo
push
mov
cmpsb
shlb
or
xchg
mov
out
xor
sbb
push
lds
mov
daa
jae
dec
inc
rol
shll
and
sbb
jbe
or
mov
rorl
mov
lahf
mov
ss
ret
mov
sbb
movsw
mov
or
lods
out
push
jo
shlb
push
jnp
cmc
imul
jb
sahf
fs
push
not
loop
mov
xor
or
cmp
lods
ljmp
daa
mov
out
adc
mov
dec
orb
pop
out
adc
ja
lret
out
loope
cmp
mov
cmc
add
push
sbb
cli
test
fdivrs
mov
mov
das
push
pmaxub
rorl
imul
pop
repz
adc
imul
jl
movl
js
inc
jge
mov
xchg
fdivrl
clc
ljmp
and
xor
push
fwait
lcall
es
cmp
in
add
scas
jne
pop
pop
out
push
lret
jnp
lea
xor
ja
popf
hlt
jle
and
dec
orl
xchg
pop
negl
push
mov
hlt
sub
pop
pop
cmpsb
outsl
pushf
sarb
mov
or
lret
cli
adcb
std
leave
shll
repnz
pop
push
jle
cmp
and
pop
or
data16
jo
jmp
jnp
stos
sbb
pop
inc
dec
sbb
mov
test
cli
lea
pop
clc
inc
roll
cli
xchg
jle
fcomps
outsb
mov
add
scas
rorl
ds
sarb
into
add
int
icebp
xchg
es
orb
pop
out
xchg
popa
adc
xchg
clc
sbb
jmp
sub
pushf
mov
loop
pop
test
pop
pop
push
xor
jae
mov
aas
adc
sub
scas
and
mov
popa
repnz
cmp
add
xor
add
call
fwait
hlt
add
xlat
sar
sbb
pop
pop
xchg
cmp
pop
cmp
shll
jmp
push
jl
sbb
xchg
ss
sahf
or
outsb
out
jecxz
jmp
xchg
dec
aaa
inc
in
rcrb
int
rclb
add
mov
push
jnp
mov
int3
ffree
mov
add
and
bound
test
in
lea
mov
pop
inc
cmc
adc
out
pop
xchg
add
pop
jmp
fisttpll
jne
fs
and
dec
repz
sbb
adc
popf
bound
in
test
xchg
sub
cs
push
xor
sub
dec
pop
cmpsb
gs
and
cmpsb
fcoml
cs
leave
data16
fstpl
les
push
adc
and
in
js
adc
add
sub
pop
and
icebp
lods
call
ja
xor
div
inc
jl
sbb
dec
pop
xor
adcb
sub
dec
lret
icebp
pop
sub
cmp
mov
outsb
mov
xchg
xchg
lret
dec
addl
outsl
jg
popa
mov
or
repnz
jne
push
pop
jns
jmp
mov
mov
xor
add
dec
rcrb
pusha
and
std
jp
push
dec
add
andl
ret
mov
push
or
sub
cmc
call
jg
push
sub
mov
in
lea
cwtl
dec
dec
and
test
aaa
xor
jecxz
mov
rcrl
cmp
int3
xor
pop
ret
enter
inc
mov
imul
jbe
mov
mov
aaa
ret
out
hlt
push
jns
mov
and
mov
pop
xorb
jae
mov
pop
add
push
mov
mov
push
cwtl
mov
add
ljmp
stos
pop
int
rcrb
mov
xor
fnstcw
je
daa
shll
aam
mov
push
pop
dec
push
xchg
sbb
add
sbb
mov
push
mov
cmp
jl
mov
std
sub
inc
lods
aad
dec
jae
icebp
mov
dec
push
add
mov
mov
xchg
mov
dec
mov
mov
lods
xor
imul
insb
ret
or
add
xchg
in
inc
ja
jo
fs
mov
imul
xchg
out
push
adc
shrb
movsb
lahf
mov
xchg
pop
add
xchg
in
fdivl
add
or
pop
mov
dec
jecxz
lret
pop
cmp
enter
push
leave
xor
ds
cwtl
push
out
arpl
imul
pop
addr16
dec
in
addr16
test
jo
sti
lret
mov
inc
inc
cmp
mov
pop
mov
out
les
jae
mov
sbb
xlat
sahf
arpl
pop
icebp
insl
pusha
mov
mov
pop
inc
not
pop
pop
mov
mov
enter
mov
dec
pop
push
xor
mov
popf
jb
mov
inc
mov
les
mov
push
adc
stos
lcall
lcall
sbb
sub
insb
movsb
jo
xchg
jb
mov
orl
jno
es
or
fisttpl
mov
pop
xlat
lahf
mov
leave
xchg
jge
push
outsb
aaa
rcrb
inc
add
int
sbb
test
subl
and
outsl
cs
push
js
jge
mov
fdivrs
cmpsb
push
lock
xchg
fildll
and
xor
or
pop
dec
mov
and
cmp
xchg
lds
cmp
add
pshufw
loope
fnstenv
dec
mov
jne
shrl
xchg
sub
jle
dec
in
cmpl
pop
icebp
imulb
ret
push
add
leave
mov
repnz
dec
ja
std
xchg
jge
fdivr
stos
cli
fdivp
xor
lods
mov
lock
lret
fcoms
xchg
jbe
pop
push
cld
arpl
shlb
mov
add
xchg
es
mov
push
dec
cltd
xchg
and
jne
cmp
jecxz
or
xchg
cmp
repz
mov
jle
cwtl
inc
jns
inc
fcomip
bts
jne
mov
fimuls
jp
dec
aad
or
cmp
jnp
cmp
movsl
jbe
and
dec
pop
lret
in
arpl
pop
subb
cmp
shlb
movsb
pop
cltd
ja
mov
and
push
jb
cmp
xor
or
inc
out
cmpsb
mov
mov
lret
lds
insl
adc
push
sbbl
xor
xchg
add
mov
movsb
jo
call
mov
stos
jge
aas
sbb
jl
mov
pop
jo
test
cltd
adc
loopne
fdivrs
dec
insl
xchg
or
xchg
and
or
pop
jmp
mov
mov
ljmp
push
iret
or
int3
ss
mov
les
adc
lea
inc
push
ljmp
mov
repz
xor
sbb
dec
mov
xor
adc
mov
movsl
mov
xor
lret
stc
mov
or
ds
xchg
clc
pop
inc
nop
jnp
xchg
add
xchg
or
movsb
adc
mov
pop
mov
add
jne
jg
add
and
ja
cmp
inc
or
inc
lds
push
pop
test
xchg
or
lock
repz
jg
xchg
inc
and
and
push
addr16
loopne
push
and
push
cli
dec
lahf
push
lcall
xchg
scas
push
xchg
jmp
sti
testl
dec
jge
in
xchg
or
and
inc
sbb
inc
push
inc
int
xchg
pop
leave
in
jle
sahf
jnp
and
fisttps
adc
daa
sbb
mov
add
in
repnz
ss
lret
xchg
mov
dec
xchg
cli
or
fisttps
xchg
jbe
adc
xchg
mov
mov
iret
fidivl
jo
int3
bound
ljmp
mov
mov
pop
test
test
mov
jbe
aas
cmp
xchg
bound
mov
imul
xlat
cli
xchg
enter
pop
mov
jo
ret
ds
sbb
mov
sarl
enter
add
add
pop
mov
int
dec
dec
ret
insl
hlt
mov
insb
daa
stc
shl
subl
jl
mov
xchg
sbb
lods
inc
dec
add
mov
or
fldcw
or
out
add
divb
orb
cs
cmp
sbb
shll
lret
sbb
imul
push
mov
mov
daa
repnz
insl
stc
xor
mov
mov
cltd
into
jo
jmp
jmp
jns
sbb
pop
ja
cs
mov
pusha
nop
stos
pushf
or
fiaddl
mul
jg
fxam
imull
add
lahf
arpl
sahf
addb
bnd
push
xor
sti
or
pusha
insl
icebp
jl
pop
and
cmp
mov
or
add
and
mov
xchg
bound
mov
out
pop
mov
pop
adc
xchg
fcmove
sti
ljmp
lds
sbb
mov
push
sbb
mov
lds
repnz
ja
cmp
pop
shrl
xor
inc
pushf
jge
jne
mov
sub
stos
lods
jg
add
out
xchg
xchg
sbb
xor
insb
call
cmp
mov
pop
adc
xorl
jb
jmp
jl
inc
xchg
xchg
insl
adc
push
sbb
lea
push
fcomp
int3
lock
inc
stos
lods
inc
adc
dec
sbb
or
test
lods
xor
insb
pop
pop
das
in
int3
and
imul
sub
add
sbb
sbb
lret
push
daa
mov
sub
add
mov
stos
hlt
push
cmp
inc
test
fldt
rol
inc
sbb
inc
push
adc
or
mov
sub
or
jmp
inc
clc
jecxz
sbb
loope
pop
xor
mov
push
shll
ret
repz
lods
mov
int3
mov
xchg
sahf
dec
lea
sub
xorl
or
jns
jmp
pusha
out
and
mov
add
add
dec
int3
sub
ds
and
or
ret
pushf
inc
cmp
incb
jmp
jmp
test
cmp
push
aas
inc
rol
outsb
fxtract
jmp
jo
jns
pop
inc
bound
xchg
inc
gs
cmp
out
icebp
aaa
jmp
fadds
mov
dec
incl
mov
pop
or
and
hlt
ja
in
ss
sbb
adc
cmp
fs
int3
je
and
or
pop
pop
mov
ds
xor
dec
jmp
sbb
push
cmpsl
pop
xor
cltd
cmp
fnstenv
mov
es
imul
stos
xchg
imul
ljmp
pshufw
adcb
mov
test
subb
out
mov
test
testl
xchg
stos
inc
inc
dec
subl
cs
call
sbb
aad
repz
push
loop
cmp
daa
movb
pop
scas
loopne
inc
inc
jle
add
inc
and
pop
mov
dec
adc
into
jbe
mov
pop
insb
outsl
mov
mov
sub
ds
inc
mov
and
cltd
adc
cli
ss
stc
cs
and
fwait
xchg
int
xor
push
mov
repnz
out
inc
or
decb
mov
xchg
xchg
ds
movsl
sub
pushf
loope
lret
lock
or
dec
push
pminsw
pop
jae
lea
test
mov
sbb
lds
pop
mov
jne
xchg
rcrl
sbb
sbb
sub
xorl
mov
cli
push
scas
stos
xchg
adc
cmp
jne
xchg
in
xchg
cmp
pushf
lock
arpl
int3
fbld
lods
sbb
sub
push
xor
adc
pop
sbb
lcall
sub
mov
cli
cmp
int
push
idivb
jle
mov
dec
xchg
mov
xchg
sub
out
ljmp
sti
data16
mov
loop
jmp
push
dec
jb
jbe
addr16
inc
das
push
pop
sar
jge
in
xor
fbstp
aas
pop
fcoms
lods
push
adc
jmp
add
jg
ret
imul
inc
jl
sub
push
in
out
push
add
popa
cmp
xor
insl
in
fwait
ss
loope
stc
fmulp
iret
cs
mov
xor
jp
in
fildll
jle
shrb
mov
pushf
add
xlat
sbb
js
ds
lret
data16
outsb
sbb
mov
mov
das
inc
dec
loop
cltd
sbb
divb
test
xor
jnp
sbb
rcll
xor
push
push
push
ret
adc
pop
sbb
xchg
inc
out
out
mov
rclb
push
dec
sbb
stos
test
out
mov
jno
repz
push
xor
sbb
das
cmpsb
push
inc
xor
mov
test
sbb
mov
out
movsb
mov
jae
lea
sub
pop
loop
jp
xor
sub
push
cmp
push
sbb
or
mov
out
push
popl
jecxz
cmpsl
fs
cmp
ret
clc
call
jne
or
mov
dec
fcmovu
iret
sub
cmc
or
push
and
or
push
flds
mov
outsb
pusha
pop
lahf
inc
push
fs
pop
fsubrp
dec
fimuls
inc
mov
ljmp
or
push
in
filds
cmp
jl
pop
movsl
jp
in
repz
hlt
pop
cmpsl
in
sub
mov
ret
stc
inc
sub
movsb
push
cmp
rcll
aam
cltd
cmp
ds
iret
lds
clc
xor
stc
aad
or
fisttps
pop
test
rorl
sub
pop
les
nop
jnp
fwait
repz
dec
inc
out
divl
cwtl
push
mov
xor
je
pop
sub
rcrb
movsl
lods
jne
xor
adc
inc
fisubl
ret
out
lock
xor
test
addl
dec
inc
cmp
xor
pop
stc
out
cmc
pop
in
pop
repz
loop
push
daa
loop
xchg
cmpsb
adc
cmp
std
aad
inc
push
stc
ds
xchg
fsts
add
mov
popa
jmp
adc
cmpsb
xor
dec
xchg
test
js
jmp
test
mov
jmp
xchg
or
rcll
pop
xor
mov
fadds
cmpsb
mov
and
or
ret
out
test
or
push
clc
mov
stos
imul
je
es
push
xor
xchg
lahf
daa
mov
xchg
mov
xchg
adc
jge
shl
fbstp
inc
test
insb
inc
lods
cli
xor
mov
xchg
pop
cld
pop
adcb
inc
popa
lahf
stc
dec
jle
gs
dec
push
call
shll
shrb
mov
lahf
lahf
insl
scas
dec
sbb
mov
gs
pusha
call
sahf
jbe
adc
repnz
dec
dec
add
mov
aaa
enter
mov
jmp
faddl
jo
cmp
int3
aaa
jge
mov
outsb
outsb
mov
test
loop
cld
pop
ret
adc
jnp
cld
inc
mov
aam
out
es
mov
sbb
sahf
xor
cs
es
adc
xchg
adc
add
movb
inc
out
and
cs
testl
addl
icebp
xor
cmp
xor
xor
pushf
repnz
dec
lret
xchg
sbb
cli
xchg
push
push
addr16
add
jne
and
inc
adc
movsl
jle
sahf
push
stos
idivb
cs
notl
push
push
sub
push
push
sbb
jmp
hlt
fwait
das
aad
push
cmp
or
push
pusha
arpl
gs
sbbb
negb
xchg
mov
adc
adc
and
sub
ljmp
hlt
in
in
call
xchg
in
into
mov
cmc
adc
pop
push
notb
add
jl
pop
jae
outsl
jbe
lods
sbb
sbb
mov
aam
insb
psrlw
sbb
fs
popa
es
mov
jns
inc
cmpl
test
arpl
in
lcall
fsubl
xchg
int3
sub
stc
nop
mov
es
mov
ss
imul
push
es
loope
lods
arpl
loope
out
jo
movsb
bound
pop
or
repnz
outsb
repz
ss
mov
push
cmp
shll
sbb
fdivs
xchg
jb
sub
dec
sub
aam
icebp
push
mov
repnz
test
mov
movb
fwait
mov
xchg
dec
mov
mov
mov
dec
dec
rcr
mov
mov
pop
dec
jbe
or
daa
or
pop
lea
in
mov
fwait
add
jb
int
xor
dec
mov
or
push
sub
sub
xor
dec
scas
andl
sub
shl
add
jmp
rcr
fcomip
and
sarl
mov
enter
xchg
movsl
pusha
inc
push
loope
pop
sub
jb
jb
mov
xchg
ret
lds
push
jmp
cmc
jl
sahf
inc
data16
xlat
add
push
jae
les
adc
loop
xor
sarb
test
cmp
push
fldl
lcall
jl
dec
cwtl
inc
inc
imul
sub
push
das
adc
leave
cmp
add
xchg
es
cld
cltd
shl
sbb
stos
fcomps
sbb
adc
push
sbb
in
arpl
cmp
mul
add
add
push
or
jno
int3
pop
lcall
mov
pop
mov
out
shll
sbb
jl
and
lock
ss
add
les
movsb
sub
ljmp
mov
out
int3
sbb
stos
imul
dec
in
mov
ja
in
xor
cs
in
pop
lcall
outsl
add
xchg
or
clc
enter
aas
fdivl
push
sub
cli
sub
notb
dec
jns
push
jno
decb
icebp
and
sub
nop
mov
out
stos
xor
or
cmpb
stc
je
pop
sbb
jno
or
mov
lret
mov
pop
fcom
mov
lods
pop
inc
arpl
pop
jle
dec
or
pop
idivl
loopne
sub
mov
ficomps
stos
sbb
scas
scas
dec
xchg
out
xchg
arpl
and
jecxz
fidivl
aas
cmpb
mov
dec
loop
xlat
fwait
stc
stos
and
ret
enter
push
lods
mov
and
leave
outsb
out
xchg
mov
xor
outsl
or
imul
lea
xchg
mov
push
out
sti
out
xchg
xchg
das
sub
into
and
xchg
aad
into
dec
push
or
adc
bound
pop
xchg
sarl
dec
sbb
ret
lcall
sahf
add
mulb
cwtl
and
ret
mov
cmp
cmp
mov
jp
loope
pop
push
lea
push
ficoms
rep
fcmovu
rcrb
mov
in
and
jo
xor
mov
push
mov
mov
sub
ss
pushl
or
dec
mov
and
fwait
or
mov
lock
fwait
or
data16
ds
sahf
push
mov
adc
jmp
les
or
jmp
jl
popf
push
or
pop
inc
out
and
test
cmp
jbe
sub
sbb
push
cmp
inc
push
es
aam
dec
hlt
pop
and
pop
and
mov
mov
imul
pop
aas
cmp
fsubrp
push
jo
cmp
lret
push
icebp
xchg
mov
push
sti
subl
cli
fists
inc
repz
pop
sub
sub
dec
jp
cmp
js
add
add
shl
sarb
push
pop
mov
lea
jp
arpl
fs
scas
fucom
sbb
mov
lods
cs
adc
aad
call
inc
shll
xor
in
aas
cmp
hlt
pmulhuw
das
lods
fdivp
sbb
cmpsb
stos
es
jmp
popa
fldz
fwait
gs
sub
insl
cmp
in
or
xchg
mov
cs
shll
or
insb
es
mov
rcrl
mov
mov
out
jmp
fnsave
jae
jne
jmp
mov
sbb
lahf
sub
sahf
call
xchg
mov
insl
sub
pop
xor
xchg
xchg
outsl
enter
jne
fmuls
popf
data16
mov
testb
adc
add
dec
xchg
mov
cld
or
mov
inc
in
out
dec
test
notb
or
fnstsw
mov
add
inc
aam
pop
jne
icebp
sub
imul
adc
pushf
shl
mov
mov
call
lods
adc
cli
mov
push
aad
fadds
mov
rcr
test
cmp
xchg
add
mov
enter
das
add
arpl
stc
repz
jns
pop
out
lret
xor
les
jnp
aam
jmp
ror
stos
stc
sub
pop
sbb
enter
cltd
jne
push
cld
lret
test
shl
dec
xchg
mov
aad
pop
sti
jg
or
punpckhbw
push
fwait
cmp
lods
stos
cmp
loopne
test
out
mov
mov
jmp
aas
or
mov
insb
fwait
rorl
dec
ffree
pop
aad
cmpsl
movsl
push
ret
adc
fs
inc
pusha
inc
add
aad
sti
fsubrl
cmp
jge
out
in
jge
dec
jbe
xor
xchg
imul
in
gs
loopne
movsb
inc
xchg
xlat
aad
cmp
mov
ljmp
mov
mov
cli
fnstsw
mov
inc
sahf
xor
lret
dec
mov
ljmp
pop
filds
je
enter
mov
jp
stos
addl
add
xor
pop
mov
daa
xchg
andb
xchg
test
mov
mov
fistl
push
fcmove
adc
scas
mov
xlat
pop
mov
xor
and
daa
pop
aad
lret
push
enter
js
je
icebp
stos
mov
jle
sbb
sarb
popa
pop
ficompl
insb
clc
jnp
loopne
pop
in
mov
mov
incl
cli
and
inc
movsl
sbb
rcrb
mov
cld
dec
pop
int
in
clc
sbb
jae
mov
mov
and
aaa
push
mov
dec
stc
std
jmp
push
add
cmp
lcall
push
mov
out
into
push
sti
aaa
jb
pop
lds
cmp
push
inc
pop
sub
push
sbb
cmpsb
in
or
or
sbb
jns
out
push
sub
add
push
push
fadds
jmp
shlb
jnp
push
inc
in
xor
frstor
cmp
mov
out
and
icebp
out
or
cmc
jnp
add
and
add
and
lds
cmp
push
fdivr
inc
cwtl
js
repz
jge
pusha
lea
fcmovne
and
sub
push
inc
out
xchg
mov
sbb
shlb
add
xor
stc
push
mov
push
dec
push
test
mov
mov
add
cmpsl
and
xchg
jae
jecxz
fcmovb
or
jg
ret
test
int
int
ret
push
outsl
mov
dec
sbb
pop
xchg
add
lret
push
adc
mov
mov
pop
shlb
inc
jbe
or
lcall
jl
jl
repz
shl
std
mov
jbe
incb
xchg
inc
icebp
or
fiadds
cmc
xchg
cmp
je
mov
enter
and
push
jl
nop
jae
outsb
jb
mov
roll
cmp
sbb
pop
ds
jb
pusha
and
push
fidivs
push
pop
xchg
dec
mov
push
orb
push
xchg
insl
in
push
ljmp
jae
aaa
and
pop
mov
lods
pop
pop
mov
lahf
ret
mov
push
xchg
mov
std
fnstsw
fdivrl
xor
cmp
cltd
jne
test
mov
pusha
into
push
lret
lcall
cmc
push
or
addl
mov
mov
iret
mov
sub
mov
out
push
sbb
pop
add
xchg
imul
inc
addr16
or
test
arpl
insl
sub
mov
pop
in
add
cmp
lods
cmc
shl
mov
push
repnz
pop
shlb
aam
cmp
inc
sarb
and
mov
xlat
xchg
out
mov
inc
inc
imul
push
out
inc
cltd
and
mov
mov
push
jmp
in
or
jge
dec
mov
rclb
lcall
inc
pop
fnstcw
call
adc
movsl
ja
fnstsw
fisubl
jns
and
test
sbb
aas
cs
inc
push
in
xlat
mov
cmp
out
test
xor
insb
inc
jecxz
into
lds
das
fidivrl
xor
pop
or
and
in
outsb
lods
adc
mov
shl
jecxz
cmpsl
mov
bound
adc
add
xor
lcall
sbb
xor
outsl
lods
lcall
or
outsb
sbb
arpl
fnstenv
xor
mov
inc
mov
lea
jnp
loope
insl
lret
int3
pusha
in
push
ds
movswl
sbb
jbe
mov
pushl
aam
mov
mov
arpl
mov
xor
repnz
insb
jnp
push
jo
cmp
jbe
xchg
xchg
inc
inc
sub
mov
stos
ljmp
dec
pop
xor
mov
xchg
and
je
leave
mov
xchg
cld
pop
inc
pop
clc
jne
or
ss
sbb
adc
and
push
mov
test
sahf
shrl
xor
notb
mov
popa
mov
and
xlat
add
icebp
and
out
push
dec
enter
leave
mov
mov
cmp
pusha
jg
loope
fsubrl
jl
adc
loop
sbb
jge
loop
mov
mov
mov
imul
sbb
pop
mov
rcr
aam
jbe
xchg
dec
test
push
aaa
push
test
inc
push
loopne
xor
imul
rolb
xor
ja
xlat
or
mov
popf
jge
jno
mov
aad
lods
jnp
add
and
cmp
inc
test
jge,pn
scas
popa
lods
popf
xchg
sbb
ss
add
pusha
sbb
push
xchg
shlb
inc
ret
testl
cmc
inc
adc
xchg
fstpl
outsb
push
jle
rcr
repnz
push
call
sti
and
inc
loopne
loopne
pop
mov
lcall
adc
inc
lods
push
pop
dec
repz
push
sbb
jnp
add
and
testl
mov
add
mov
xchg
and
fmul
add
das
sbb
cmp
xchg
inc
in
jae
shlb
sbb
les
or
loop
or
dec
test
and
pop
cli
stos
push
mov
int
mov
in
ja
mov
jo
cli
or
mov
push
out
add
and
fs
sub
movsl
push
je
push
pusha
add
stos
xor
das
mov
add
imul
scas
addl
inc
inc
mov
dec
xchg
lods
sahf
call
push
jl
imul
loopne
sbb
ljmp
push
mov
pop
push
bound
jne
mov
aam
jno
mov
fdivr
je
stos
sbb
jne,pt
and
out
popf
dec
or
out
ljmp
shl
rol
xor
shll
loope
ffree
clc
pop
repnz
std
insl
movsb
and
xchg
cmp
pop
sti
cld
push
cltd
mov
jg
mov
and
sub
dec
push
xor
shll
adc
call
pop
mov
jb
xchg
mov
adc
ljmp
repz
cmp
bound
incb
imul
or
mov
and
sub
dec
pusha
and
pop
cli
in
icebp
or
xchg
daa
add
lahf
idivb
pop
dec
repz
xchg
push
pop
jg
loope
push
jno
imul
mov
add
cmpsl
xchg
pop
mov
lea
stc
dec
es
std
cmpsb
loope
add
and
xor
adc
pop
pop
pop
test
stos
mov
push
xlat
jno
jno
ss
push
pushf
jne
mov
movsl
loopne
pop
dec
jno
xor
sbb
and
dec
jle
ss
pop
loopne
mov
mov
icebp
push
jb
adc
es
out
add
mov
enter
adc
fistps
incb
pop
add
mov
pop
push
mov
je
bound
pop
jmp
dec
in
addr16
pop
jg
movsb
sbb
outsl
jbe
pop
dec
cmpsl
pop
in
ljmp
adc
push
int
lods
icebp
imull
mov
xlat
pop
mov
push
mov
addr16
cmp
pop
mov
sbbb
sbb
xor
inc
scas
jg
jle
test
jg
imul
jge
int3
xor
dec
xchg
fs
cmp
into
xor
push
cs
ficoms
jge
adc
lcall
lock
and
aad
or
out
fwait
cmpsb
ds
inc
pop
in
ds
or
adc
dec
in
push
enter
gs
mov
mov
jg
sarb
sub
pop
cltd
and
pop
cmp
xor
adc
imul
lods
jb
sub
jge
ret
jg
sbb
fimull
bound
jns
mov
cmp
loopne
shlb
adc
stos
sub
cmp
adc
call
movsl
push
jl
xlat
push
sbb
dec
loopne
clc
sbb
insl
or
es
test
cmp
xor
ret
xchg
lret
call
dec
jns
push
lret
pusha
int3
xchg
cmpsb
sti
test
mov
push
dec
cltd
mov
scas
or
jo
andb
add
push
xor
ror
cwtl
and
push
xor
xchg
xchg
push
das
pop
hlt
or
push
jge
xchg
loop
stc
add
add
dec
adc
imul
lahf
movsb
push
aaa
adc
mov
and
push
sub
cli
aad
cmp
test
pushf
mov
jp
int3
movsl
daa
mov
ljmp
cmp
ret
arpl
push
pop
cmp
or
sti
outsb
loopne
inc
fisubrl
sbb
mov
xorb
sbb
xchg
arpl
arpl
push
mov
jle
sbb
inc
or
repz
aaa
clc
in
test
xor
in
jno
sub
cmp
mov
sar
cmp
jbe
cld
shrl
sbb
pop
and
inc
adc
fstps
rcrl
fcomip
cmp
pop
jge
pop
add
popa
ljmp
in
sub
push
addr16
sub
jb
mov
loope
inc
sbb
jo
es
jmp
clc
mov
lods
insb
aas
pop
add
addr16
push
pop
cmp
jl
scas
lods
add
fdivp
mov
mov
cli
push
add
cmpsl
subb
push
into
xor
adc
lcall
inc
push
mov
push
push
push
imul
movzwl
dec
xchg
inc
and
icebp
das
sbb
pop
jmp
pop
jmp
in
mov
inc
popf
popl
push
cmp
mov
xchg
imul
iret
cli
sbb
xchg
push
mov
outsb
jnp
mov
or
je
mov
jae
ljmp
pop
sub
add
loope
pop
mov
fs
mov
push
int3
ljmp
jmp
mov
inc
adc
test
mov
jbe
push
enter
push
pop
mov
mov
mov
add
cmp
shlb
iret
inc
popa
and
xor
test
out
cli
dec
or
stc
aaa
add
fcomps
iret
xchg
cmp
mov
inc
sub
cmp
test
sub
addl
clc
movsb
and
or
xlat
or
lret
dec
movsb
add
cmpsl
push
mov
cmc
cmp
pop
cmp
sub
mov
inc
pop
stc
pop
jle
cmp
push
xor
cmp
and
enter
jmp
cmp
mov
add
leave
das
insl
jmp
movsl
loopne
push
movsl
das
jle
ret
add
cmp
aas
in
das
xlat
outsb
cmp
js
pop
js
jae
dec
sbb
outsb
test
gs
scas
cwtl
or
negl
repz
and
insl
xchg
push
xor
imul
jge
cmpsl
mov
pop
daa
lods
dec
push
test
lods
sbb
gs
cmc
pop
xor
notb
push
clc
test
xchg
add
dec
pop
add
inc
sarl
pop
ss
ljmp
sbbb
mov
aaa
cs
scas
or
or
dec
popa
cmpl
cmp
and
or
sbb
cwtl
xor
shrl
loop
out
cmp
push
sarl
jle
rorb
enter
in
fwait
dec
in
aad
adc
xchg
sbb
into
lock
xor
xor
mov
stos
push
jnp
in
mov
dec
jae
mov
push
pop
cmp
aaa
insl
xchg
pop
pop
stc
pop
pop
int
sub
lds
in
mov
pop
dec
dec
cli
hlt
mov
sub
mov
push
cwtl
jnp
gs
xchg
adc
andl
inc
xchg
inc
cmc
or
data16
jne
pop
jnp
andl
data16
mov
vmulss
xchg
sub
icebp
cmp
inc
mov
int
mov
iret
cltd
outsl
arpl
pop
mov
xchg
sbb
lea
pop
pushf
adc
pusha
mov
push
jl
roll
test
shl
mov
rep
cs
inc
xor
xor
or
xor
jbe
fidivs
jl
sbb
push
repnz
pop
mov
cwtl
sti
aam
and
fs
daa
roll
movsb
mov
cmc
cmp
jnp
xchg
into
inc
and
ret
xchg
adc
cmovno
cmp
sub
mov
in
pushl
mov
cmpsl
push
jp
imul
arpl
subb
ds
sbb
xchg
xchg
dec
xchg
or
popf
dec
cmc
mov
xchg
push
cmp
test
push
lret
mul
aaa
cmp
aad
sbb
je
pusha
add
pop
arpl
or
pop
pop
lods
inc
hlt
inc
mov
aaa
ljmp
call
hlt
mov
ja
mov
nop
sub
inc
push
ret
jb
push
and
push
and
inc
jb
popf
pusha
jne
xchg
insb
inc
out
xor
or
pop
pop
mov
add
fdivs
adc
mov
in
idivb
scas
cmp
mov
in
test
xchg
xchg
icebp
imul
pop
mov
xchg
dec
jle
jge
jne
iret
mov
out
iret
xlat
xchg
jp
sub
int3
cmp
iret
add
cmp
arpl
and
mov
dec
adc
jl
mov
flds
arpl
pop
std
sub
repz
push
or
xchg
or
lret
test
cltd
xchg
lahf
lock
imul
stos
addr16
out
test
sub
es
add
call
insb
aam
adc
lock
testl
std
or
jb
pop
jnp
mov
call
lock
pop
stc
pusha
push
xor
dec
dec
mov
lea
lds
fcoms
lcall
jo
and
pushf
movsl
jb
mov
loop
lahf
and
mov
pop
popa
pop
mov
sbb
inc
mov
cld
pop
sub
add
xchg
ljmp
out
jg
movsb
dec
loope
adc
add
or
sbb
mov
int
out
inc
add
nop
dec
imul
or
sahf
outsb
iret
pop
mulb
push
rcrl
stos
inc
stos
int3
adc
mov
jb
adc
cmp
movsb
lret
scas
stc
in
stos
jo
addr16
insb
aad
jmp
test
mov
imul
pop
adcl
daa
dec
sbb
sbbb
xor
cld
insl
mov
sbb
adc
push
inc
jl
or
sub
inc
push
sbb
loopne
mov
addb
fcompl
loopne
mov
xchg
dec
imul
mov
gs
xor
addr16
push
xchg
jnp
pop
mov
sbb
jne
and
lret
out
dec
and
sbbb
xchg
mov
mov
lret
or
imul
loope
mov
adcb
cmp
test
aam
or
push
and
sbb
mov
movsb
test
test
xor
mov
icebp
mov
scas
daa
add
inc
sub
rcrb
sub
fmull
orl
sarl
aaa
xor
loopne
inc
sub
sub
outsb
sbb
cld
inc
insl
shr
test
jge
jnp
xlat
dec
stos
testl
std
cli
es
adc
fldcw
inc
stos
incl
repz
mov
in
repnz
mov
xchg
sbb
mov
mov
mov
mov
pusha
inc
sbb
in
data16
inc
iret
jno
jecxz
and
inc
push
sti
mov
sbb
in
push
jecxz
inc
mov
ds
movsl
repnz
cwtl
imul
rcrl
push
lock
mov
inc
gs
loopne
fidivrl
shrl
ja
xchg
insb
cltd
std
mov
nop
imul
cld
pop
fmuls
stc
lret
nop
addr16
insb
sub
inc
xor
mov
mov
adc
adc
adc
pushf
repz
div
outsl
lret
mov
cwtl
fisttpll
shrl
jbe
cwtl
les
sbb
push
cmp
out
loope
mov
cmp
pop
lahf
ja
cmp
sub
adc
xchg
add
sahf
lcall
xchg
inc
adc
scas
cwtl
call
ja
xchg
insl
pop
popa
out
or
or
cmp
dec
in
test
mov
jecxz
movsb
cwtl
push
sbb
scas
sbb
pop
loop
mov
iret
push
ret
insl
jge
inc
dec
bound
xchg
xor
leave
mov
outsb
mov
dec
xchg
cltd
sbb
fs
push
push
push
or
xchg
repnz
jp
shrb
pushf
adc
xchg
arpl
xchg
pop
mov
cmp
and
negb
stc
dec
pop
idivl
mov
sbb
pop
and
xor
fldl
fsqrt
and
inc
in
pop
pop
cmp
jmp
push
mov
fidivl
or
insl
iret
xor
dec
movsb
fadds
cmc
imulb
cmp
fidivrs
fisubrl
and
sti
mov
test
push
jp
iret
pop
sahf
int3
sub
arpl
bound
xchg
fs
lcall
fiaddl
push
bnd
in
sbbb
xchg
out
inc
pusha
jl
xchg
int3
ja
push
jmp
fdivl
call
in
or
adc
add
mov
sub
je
in
inc
add
xchg
mov
pop
dec
std
iret
aad
cs
movsl
cltd
pandn
test
lcall
mov
xor
or
arpl
xchg
subl
rcll
fcoml
mov
outsl
stc
loope
cmp
jecxz
pop
ret
subl
outsl
and
add
jbe
or
adc
aas
sub
sbb
nop
into
movsl
inc
xchg
jno
sub
push
push
and
insb
and
fsubr
out
xor
mov
xor
enter
mov
and
into
fmul
setle
shl
jbe
enter
es
sbb
fdiv
stos
les
xchg
int3
lret
filds
jb
xlat
add
mov
out
lock
rolb
repnz
push
pop
push
ljmp
adc
jno
popa
fwait
sub
stc
sar
cwtl
pop
jge
jge
jmp
gs
or
lock
xchg
sub
stos
clc
or
inc
fidivl
push
faddp
call
gs
std
in
adc
lcall
lcall
cmc
sbb
mov
icebp
xchg
mov
and
sbb
pop
popa
ljmp
xchg
cltd
decl
xor
arpl
push
xchg
shl
rcrl
inc
mov
push
neg
cwtl
das
or
and
adc
add
inc
icebp
ret
add
or
int
xchg
push
sbb
add
insl
or
inc
mov
into
mov
sub
fistpl
jno
testb
sarl
cmp
or
cmp
jo
sub
mov
loop
movsb
jl
and
imul
lret
imul
ljmp
sbb
adc
in
mov
push
int
ss
inc
and
xor
cmpb
add
cs
insb
lods
pop
dec
mov
stc
ret
pusha
add
daa
ds
xor
mov
iret
cmp
loope
aas
ja
push
jp
stos
push
shll
sbb
push
push
sub
int
repz
push
ret
into
cmpsb
ds
stos
flds
sbb
sub
pushf
lds
sbb
mov
mov
out
mov
lcall
pop
fsubr
dec
jge
pop
push
sbbl
fsub
jne
jae
mov
push
jnp
mov
arpl
adc
dec
or
shrl
mov
fs
call
mov
insl
mov
mov
jmp
notb
adc
dec
xchg
jp
js
push
in
mov
adcl
push
mov
aad
xchg
inc
fsubl
xlat
mov
push
les
push
lcall
scas
stos
mov
jo
cld
imul
sub
stos
sub
and
xor
add
insb
ficoms
jge
mov
add
push
jmp
scas
jo
add
push
fdivrp
cltd
std
fs
cltd
inc
das
mov
out
call
dec
mov
pop
jae
cld
subb
popf
push
adc
mov
adc
jbe
movsl
and
pop
xor
jmp
scas
sbb
jp
pop
mov
loop
mov
test
cmc
inc
inc
int3
jle
push
xchg
mov
mov
imul
jp
orb
jg,pn
or
das
push
sbb
das
jp
in
jge
cmp
cltd
in
ds
dec
jmp
pop
or
lods
lea
sbb
lea
cmp
enter
xchg
add
push
jp
push
fucom
or
dec
push
hlt
xchg
mov
lock
xor
aad
inc
mov
dec
cmpsl
xchg
mov
shll
aas
cmp
loopne
push
jno
popf
cwtl
inc
adc
cld
ret
daa
aas
mov
sbb
mov
mov
and
cmp
arpl
jp
lds
jno
in
add
inc
adc
into
mov
sub
insb
clc
pop
mov
lret
cmp
jo
cmp
jno
dec
xlat
push
jne
mov
xchg
outsl
xchg
pop
pushf
test
mov
pop
scas
or
jl
or
xchg
loopne
hlt
pop
and
loopne
xchg
or
cmp
movsl
ds
jle
rcrl
and
rorb
out
dec
mov
mov
int
xchg
dec
lea
aaa
mov
es
cmp
xor
lcall
imul
pusha
xchg
imul
addr16
sbb
mov
test
std
leave
fwait
push
pop
add
cwtl
ret
pop
xchg
insl
or
jmp
fldcw
aam
xchg
out
in
in
lcall
pop
mov
or
xchg
nop
push
mov
inc
ljmp
mov
jae
jno
pushf
add
test
xlat
and
arpl
push
xchg
mov
mov
mov
ret
push
xor
mov
je
es
cmp
sti
addr16
mov
cwtl
add
andb
mov
repz
es
popa
push
inc
jne
je
cwtl
icebp
jle
pop
pop
jmp
add
test
loop
mov
mov
mov
outsl
aam
and
fldl
mov
lcall
ss
lcall
jl
jbe
inc
icebp
inc
insb
jne
dec
and
push
push
or
pusha
aam
int3
arpl
push
dec
jb
int3
jbe
cmp
jb
sbb
pop
cmpsl
and
xchg
adc
roll
mov
add
adc
fsubr
repz
ret
ljmp
sbb
add
jne
out
scas
sub
in
mov
and
dec
add
fadd
sub
ss
ret
cmpsb
jle
sub
dec
ret
pop
bound
ds
insb
mov
or
inc
fidivrl
sbb
dec
repnz
rcr
das
dec
iret
pop
ss
jle
outsl
jnp
dec
mov
subl
jnp
xor
mov
loope
or
pop
add
and
stc
sub
push
fs
mov
xor
cli
adc
sbb
add
cmp
and
fisubrl
cltd
sti
mov
jl
addr16
and
inc
movsb
in
ds
pusha
cmc
pop
mov
xchg
clc
ja
jge
fisubrs
push
mov
inc
movsb
adc
and
add
lds
push
ret
xchg
and
dec
jb
jl
sbb
jcxz
push
mov
cwtl
mov
test
pop
mov
push
jmp
inc
stos
out
mov
adc
lods
adc
inc
test
pop
sarb
inc
arpl
scas
dec
movsl
daa
mov
test
sar
jge
inc
ss
pusha
pop
dec
cmp
mov
pop
iret
sub
arpl
cmp
mov
mov
insb
inc
jmp
mov
fs
dec
adc
test
push
movsl
inc
pushf
jne
pop
test
mov
inc
and
push
cli
pop
out
push
adc
outsl
sub
ljmp
mov
dec
sbb
inc
lods
ss
or
data16
sub
into
jbe
cmp
jmp
pop
ficoml
cmp
je
lods
push
mov
or
pop
in
mov
mov
xchg
sub
sub
pmullw
fsubp
mov
lahf
out
mov
outsl
decb
inc
lods
push
fwait
push
and
jg
cmp
xor
loopne
mov
fnsave
dec
jae
mov
jae
ljmp
jmp
xor
push
mov
mov
xchg
pushf
fs
dec
ljmp
or
jmp
jl
es
add
outsb
sub
shlb
and
adc
sub
cs
sbb
and
inc
jle
push
outsl
es
lock
outsb
and
cmpsl
lret
pop
dec
shrl
mov
insl
jne
clc
push
shl
daa
std
mov
dec
sub
and
add
or
jno
and
cld
mov
pop
cs
mov
mov
ljmp
daa
or
mov
inc
insl
cmp
xlat
lahf
pop
pop
and
movsb
icebp
gs
ret
xor
jecxz
outsl
jg
cmc
or
xor
repz
gs
xor
and
pusha
xor
jae
dec
adc
inc
mov
cmpsl
sahf
ret
xor
or
add
pop
push
adc
not
cmpsb
in
inc
cmpsb
sbb
stos
frstor
fmuls
aam
xchg
ja
andl
or
pusha
into
in
in
shlb
fsub
adc
roll
cld
dec
jno
jl
or
mov
jle
test
pop
jge
jnp
in
in
out
and
scas
xchg
shrl
pop
test
push
cltd
xor
shl
add
das
jge
push
rcr
cmpsb
mov
cmp
in
or
xor
pop
pop
push
push
mov
neg
pop
sub
xchg
pop
sbb
sub
add
shl
es
mov
scas
inc
or
inc
cmp
and
in
lret
rcrl
fsubr
jmp
mov
add
lock
adc
ficomps
dec
mov
push
adc
push
inc
ss
into
popa
push
in
push
insb
adc
sbb
xchg
in
and
das
imull
adc
push
pop
push
xchg
mov
mov
mov
adc
imulb
sub
dec
addr16
mov
xor
pushf
mov
pop
push
push
mull
sub
mov
jo
sbb
xchg
mov
jae
mov
sbb
test
shll
pop
jl
or
and
rcrb
stos
sub
stos
jnp
lcall
cmpsb
lods
shl
mov
adc
mov
and
sbb
stc
popa
sbb
cld
aas
xor
adc
xor
loop
inc
sbb
dec
int
pop
sub
xor
lock
nop
cmpl
fwait
or
mov
fsubrs
jp
sbb
aam
add
mov
mov
lahf
enter
cmp
add
mov
mov
adc
stos
and
sbb
push
sbbb
faddp
jp
jecxz
adc
push
cmpsl
scas
pusha
aas
mov
gs
push
cld
push
jge
dec
fldl2e
scas
dec
movsb
lods
or
sub
fcmovnu
jae
aam
mov
insl
jmp
fdivr
pushf
not
mov
xor
add
das
inc
out
xor
xchg
xor
jmp
cmc
mov
fs
inc
testb
mov
stc
sbb
call
loop
xchg
int3
rcrl
hlt
sti
dec
sarl
daa
cmpsl
adc
mov
push
nop
icebp
sub
cs
cmpsl
es
xlat
stos
xor
fadds
ss
imul
sahf
insw
jmp
xor
pushf
or
xchg
les
pop
andl
pop
and
addb
mov
divb
shll
dec
ljmp
or
addl
pop
xor
push
or
jecxz
adc
hlt
subb
jns
rcll
pop
pop
repz
adc
or
std
push
mov
outsb
popa
push
push
daa
pop
or
jl
rcrl
or
gs
test
adc
std
or
aad
sbb
loope
mov
adc
dec
ror
lcall
sub
jecxz
push
push
hlt
add
push
stos
cmpsb
push
mov
sbb
imul
push
mov
mov
lock
or
xor
sete
jae
aas
popf
bound
movsb
sarb
adc
mov
mull
pop
aas
in
sub
xchg
dec
movsl
pop
movb
loope
aad
add
pop
sbb
push
inc
pop
mov
in
xchg
adcb
pushl
xchg
pop
jl
dec
jns
repnz
inc
cmpsb
and
sahf
test
or
sub
dec
out
jns
adc
bound
pop
pop
inc
out
mov
xchg
cltd
sbb
fbld
mov
lock
aam
jnp
xor
out
and
xchg
xor
sub
lds
popf
cwtl
jmp
lods
sbb
mov
xor
fldcw
gs
mov
addr16
xchg
cmpsb
or
pusha
push
sub
sbb
mov
pushl
and
mov
add
pop
or
cwtl
loopne
imul
and
stos
test
or
push
mov
rcrl
sub
roll
int3
push
pop
sbb
fsub
jo
xchg
iret
adc
push
iret
mov
mov
imul
ja
or
pop
jle
adc
call
call
jg
jne
jb
jl
sbb
mov
data16
sub
pop
aad
jl
add
sbb
cmp
lahf
xchg
push
add
into
pop
dec
cmp
sbb
fcomp
stc
popf
rorb
inc
xchg
pop
jecxz
lock
inc
xor
push
sub
lods
shl
sbb
pop
xor
sub
in
cmp
pop
pusha
cs
mov
stc
adc
add
or
mov
in
mov
push
aas
outsb
imul
push
in
mov
aaa
pop
lret
or
and
aam
sbb
out
inc
jnp
fcoml
pop
gs
mov
adc
mull
lock
sub
in
cmpsl
std
inc
mov
lret
cmpsb
addb
jg
add
fadd
cld
and
sbb
icebp
cmpsl
cmp
jle
lods
ret
jg
xchg
std
imul
cmp
cmp
loope
mov
popa
int3
std
mov
jae
push
dec
ficoms
adc
xchg
out
xorb
and
lea
mov
xor
mov
test
test
mov
lahf
fdivrs
test
sbb
mov
xchg
dec
inc
pop
xchg
outsb
cwtl
movsl
insb
xchg
icebp
lods
and
and
add
arpl
loope
ja
mov
gs
aam
mov
adc
mov
lret
ljmp
jp
jg
pop
push
ret
or
xchg
shlb
repnz
out
mov
movsb
mov
or
cmpsl
and
test
movsb
mov
lock
loope
push
in
cmp
or
sub
dec
into
jp
fdivs
inc
add
movsb
inc
test
aaa
and
jno
in
gs
jo
arpl
repz
and
or
in
push
sbb
lods
jb
jo
addl
mov
popa
or
in
sbbb
add
fdivl
cmc
sub
and
int
xchg
jns
fimuls
dec
push
dec
test
rcll
rcll
fabs
mov
push
cmp
dec
or
mov
and
notl
mov
rcl
sbb
pop
mov
push
orl
jns
popf
inc
or
ror
sub
or
in
rorl
xacquire
adc
and
popa
shrl
arpl
mov
clc
adc
push
imul
cmpsb
jp
xchg
xor
or
xchg
bound
shrb
popf
stc
adc
insl
fcoms
flds
pop
clc
loop
stos
dec
inc
fiadds
cmpsl
test
ds
push
imull
lret
int
test
ror
in
sahf
out
out
test
pop
pusha
mov
scas
mov
loop
cmp
push
mov
mov
mov
xchg
xor
xchg
adc
jne
sbb
inc
jo
movsl
insl
setae
outsl
arpl
dec
pop
repz
mov
mov
hlt
in
and
lret
jl
xchg
inc
imul
stc
and
fisubs
stos
add
outsb
outsl
leave
fcmovne
dec
push
aaa
xchg
cmp
or
pop
sub
test
aad
out
out
stos
ss
and
mov
sarl
lahf
sbb
push
sahf
repz
sub
test
inc
addr16
ret
xor
sub
xor
jmp
bnd
mov
ja
pop
scas
mov
inc
cltd
lods
test
xchg
or
dec
sub
scas
mov
dec
jge
mov
inc
jb
loopne
push
iret
xchg
inc
adc
push
lcall
in
adcb
add
inc
push
add
lcall
jno,pt
xchg
popa
popf
ss
or
push
or
add
mov
cmp
and
jnp
aam
pop
adc
insl
and
jmp
push
movl
ret
mov
lods
dec
repz
mov
out
lds
hlt
mov
fwait
arpl
push
cmpsb
mov
ds
jns
hlt
arpl
sbb
push
sub
mov
lret
or
pop
pushl
mov
or
ret
mov
jle
scas
gs
cmp
scas
daa
and
dec
mov
jnp
mov
push
cmp
mov
dec
mov
mov
lea
jl
mov
cld
loope
push
cmp
lock
mov
jnp
aaa
enter
addl
adc
popa
jle
inc
mov
inc
hlt
add
loope
sub
cmovp
int
and
aam
lods
mov
into
mov
fldl
sbb
aaa
xchg
pop
add
adc
dec
in
loopne
xchg
popa
ljmp
stos
ret
adc
sub
push
roll
in
mov
fwait
idivl
jne
adc
and
stos
mov
jbe
sbb
clc
loope
xor
xchg
sub
fisttpl
and
jge
mov
test
mov
les
pop
sub
cwtl
jp
mov
fmuls
mov
jae
imul
sbb
addr16
or
xor
fistl
loopne
xor
aas
ficoms
pop
sbb
ret
outsl
mov
pcmpgtb
dec
pop
cmp
out
mov
pop
mov
test
sbb
sbb
jecxz
xchg
ljmp
and
stos
sbb
mov
push
testl
sbb
fwait
xor
jne
push
jg
jl
cld
call
lods
jb
add
cmp
inc
jo
add
add
jno
sbb
clc
lret
hlt
xor
jecxz
push
pop
in
push
sbb
cwtl
adc
sub
jns
cwtl
jbe
in
repz
dec
mov
std
cmpsb
pop
cmp
test
mov
pop
lea
cmc
push
pop
mov
out
push
outsb
jbe
test
mov
jg
into
pusha
aas
mov
jb
in
or
hlt
mov
pusha
in
add
stos
xor
mov
ds
xchg
cmpsb
sbb
pop
jb
mov
lods
inc
or
sub
mov
loopne
out
sbb
ret
push
test
icebp
and
addr16
repnz
sub
or
fwait
js
fwait
lahf
xchg
mov
movsl
cmp
dec
adc
movsl
out
or
mov
push
insl
in
xchg
pusha
leave
lcall
ss
inc
lds
rorl
pop
int
adc
add
cmc
sahf
jbe
insb
scas
leave
stos
pop
mov
jl
cld
adc
push
hlt
dec
adc
std
pop
mov
push
leave
cmp
jbe
test
sbb
sub
mov
cmc
and
pusha
mov
and
or
mov
xlat
add
mov
jo
inc
or
mov
push
adc
add
and
test
adc
mov
sti
stos
pusha
ljmp
push
mov
add
out
inc
jb
and
jno
sub
adc
dec
push
xchg
in
icebp
mov
addl
push
inc
xchg
dec
cmpsb
xchg
inc
mov
lea
scas
cmp
jae
or
sbb
addr16
std
cmpsl
insl
sahf
mov
mov
adc
mov
dec
scas
mov
ss
xchg
sti
stos
push
or
jp
mov
dec
cli
xor
mov
pop
mov
mov
rcrl
push
out
fcompl
aam
fiaddl
jbe,pn
stos
in
xchg
ss
fisttps
and
popa
in
fidivrl
and
dec
insl
mov
in
dec
inc
lea
and
pusha
psllw
jae
pop
lods
add
icebp
js
xor
xor
pop
add
and
push
movsb
call
add
adc
add
adc
sti
adc
insb
add
or
adc
mov
lea
ss
and
xlat
push
add
inc
sub
insb
into
aad
cmp
outsl
mov
mov
gs
jg
out
out
int3
mov
xor
lock
fistps
mov
xchg
pushf
hlt
shl
inc
jl
mull
sbb
cmpsl
xchg
std
iret
cmp
js
stos
add
lods
and
callw
fstps
mov
notb
mov
sub
sbb
mov
or
dec
std
mov
fs
sbb
and
inc
mov
pop
daa
sbb
mov
or
mov
rcl
jg
fldl
into
mov
sub
idiv
ja
cmc
add
xchg
xchg
push
adc
xlat
sbb
aad
ficompl
add
decb
lahf
adc
addr16
fldenv
iret
push
fsubs
push
sub
bound
cltd
sbb
call
cmp
dec
lea
mov
or
adc
pop
push
sub
scas
sbb
aam
fcoms
pop
js
jmp
push
rorl
push
sub
inc
sbb
sub
mov
jg
or
lahf
roll
inc
xchg
jge
dec
sbb
divb
xor
out
fsub
xor
dec
sbb
aad
ds
lods
shlb
mov
ljmp
popa
icebp
jne
push
add
fnsave
jmp
and
dec
ret
cmpsb
sbb
mov
pop
add
push
mov
jno
lret
ja
jg
test
sbb
cltd
mov
aam
shlb
scas
or
mov
mov
call
jbe
push
imul
sbb
mov
enter
fmull
or
mov
sbb
cltd
ds
mov
push
les
mov
fwait
shrl
sti
adc
ss
std
adc
add
and
add
into
cmp
fcoms
xor
imul
push
dec
cs
mulb
in
mov
mov
cwtl
mov
xor
into
pop
pop
jb
arpl
ja
jne
xchg
leave
and
cmpsb
adc
test
push
mov
push
imul
xchg
fwait
mov
test
mov
sti
in
jns
push
dec
mov
push
mov
test
cmp
cltd
mov
mov
xchg
jp
test
loopne
rcrb
push
mov
gs
nop
lret
decl
jbe
inc
dec
fwait
jp
xchg
push
fcmovbe
mov
add
push
popa
jecxz
cli
imul
and
ret
add
jne
dec
popa
sbb
ret
lods
test
fprem
jg
ret
sarb
cmpsb
jne
clc
and
test
out
pop
out
jle
fs
dec
cltd
inc
jne
and
sub
roll
push
xor
addl
imul
shll
dec
in
mov
adc
mov
imull
lret
mov
sub
xchg
push
push
lods
testb
inc
ret
xchg
ret
sar
into
xchg
mov
hlt
daa
aas
icebp
xorl
lds
cmp
xchg
push
insb
push
jle
loopne
adc
cmp
push
xor
inc
pusha
cmp
jmp
cltd
add
movsl
bound
add
aam
arpl
mov
pop
aam
in
insl
adc
gs
mov
sub
insl
jns
mov
popf
in
negl
and
inc
mov
out
xchg
sbb
adc
jl
sub
fwait
pop
add
mov
add
dec
sbb
cmp
sbb
pop
in
or
nop
add
jg
int
xchg
cmpsl
inc
arpl
or
sbb
and
repz
shl
lret
xlat
mov
jg
mov
pop
aam
movsl
push
rorl
scas
sub
inc
int
loop
xor
leave
test
sub
in
dec
xchg
repnz
stc
repnz
mov
shll
outsb
pop
shlb
xchg
scas
leave
mov
inc
stos
stos
and
shlb
pop
idivl
cmp
pushf
dec
pop
xlat
and
imul
rcrb
repnz
imul
push
cmp
jecxz
sbbb
pop
mov
or
add
clc
mov
outsb
jmp
mov
lret
jns
cmp
lea
mov
pop
inc
mov
leave
dec
cmp
scas
cmp
or
insb
in
sub
inc
mov
jns
dec
xor
rcll
xlat
loopne
andb
gs
inc
jae
jbe
lock
aam
inc
xchg
mov
into
xchg
and
push
and
cld
xchg
in
aam
add
int3
stos
ds
mov
arpl
out
popf
push
sbb
pusha
xor
sti
sarb
gs
repnz
cmc
dec
in
jae
inc
sbb
mov
movq
mov
jno
add
btr
rorb
and
xchg
add
pop
es
mov
ret
call
push
out
outsl
sbb
sub
jne
stc
push
mov
lds
pop
je
lahf
subb
xor
mov
hlt
iret
and
mov
mov
adc
mov
jbe
jge
aas
repnz
adc
out
mov
cmp
insl
pop
popa
mov
sub
or
mov
int
mov
call
inc
pusha
lcall
xchg
and
dec
sahf
loope
stos
sub
scas
into
test
cmp
fisubl
dec
int
adc
movsb
shrb
mov
and
int
cmp
inc
jl
xchg
test
sbb
pop
out
pop
xchg
adc
mov
push
push
xchg
jp
or
xchg
pushf
ret
xor
mov
nop
fs
rcl
sahf
mov
mov
adc
mov
test
xchg
mov
sub
push
das
rclb
xor
out
ljmp
repz
inc
testl
cmp
pushw
cmp
and
mov
mov
mov
gs
push
das
in
mov
xor
pop
lods
aad
jnp
es
push
in
in
outsl
adc
fdivl
inc
xor
mov
or
inc
xchg
inc
addb
mov
adc
aas
das
pop
xchg
push
mov
push
test
add
xchg
dec
data16
outsb
inc
sub
in
dec
imul
roll
cmp
pop
lret
mov
fs
outsb
scas
imul
mov
pop
mov
adc
loopne
sbb
fisttpll
adc
sti
fistpll
mov
add
xchg
and
xor
mov
mov
fidivl
push
adc
in
mov
cmp
or
pop
ljmp
int3
nop
imul
fnsave
add
jmp
cmp
clc
ficoms
imul
mov
pop
rol
data16
sbb
cld
mov
cs
sub
inc
add
adc
xor
shll
outsb
icebp
loop
lcall
sahf
movsl
xchg
mov
mov
fdivrp
add
leave
adc
sub
jl
repnz
add
jnp
cmp
mov
push
aas
inc
adc
push
pop
test
xor
dec
cmp
ret
mov
out
pushf
push
pop
rorb
inc
xor
jno
test
jmp
sti
sub
push
xchg
int3
push
adc
loope
fimull
lret
sub
insl
sarb
mov
add
jge
mov
das
fucomip
adc
mov
jge
addr16
dec
outsl
jno
xchg
scas
cmpsl
jbe
test
adc
ja
pop
cmp
sub
pop
add
loop
and
cs
lods
pushf
lds
push
mov
xlat
popa
push
pop
pop
into
aaa
shr
mov
add
mull
xchg
scas
fildll
mov
cmp
fdivl
movsl
push
daa
fistpll
push
jno
js
jp
aam
cs
mov
lds
add
mov
pop
shl
inc
mov
cmp
leave
fisttpl
mov
jmp
or
call
mov
pushf
xor
inc
lret
fs
or
mov
cs
cs
shll
daa
data16
movb
xchg
mov
mov
lods
cli
test
ret
cmp
xchg
xchg
push
stc
sub
shlb
repnz
in
cld
jo
push
repz
push
aam
dec
imulb
jmp
stos
xchg
push
shl
nop
cmp
imul
dec
and
imul
cld
clc
xchg
inc
icebp
mov
js
fstpt
mov
cmp
inc
fimull
icebp
pop
cmpsb
out
leave
xchg
js
add
xchg
xchg
es
jmp
xchg
ss
xchg
add
xchg
rol
mov
pusha
pushf
add
jo
dec
mov
xchg
xor
sub
cmp
pop
in
sbb
mov
mov
int
sbb
sub
push
and
jmp
sbb
push
or
xchg
push
fs
mov
ss
arpl
inc
push
inc
dec
cmpsb
dec
xchg
and
dec
xor
jmp
mov
add
push
xchg
adc
inc
dec
rol
loope
and
arpl
std
mov
rolb
test
sahf
xchg
sub
sti
push
aam
xchg
test
dec
iret
cmp
cmc
lds
pop
lods
jnp
mov
inc
mov
lds
xchg
or
negl
xchg
push
jmp
pop
int3
mov
ds
and
test
aaa
arpl
rcr
insl
cli
mov
gs
mov
sub
or
loopne
imul
clc
xchg
pop
ret
mov
mov
dec
add
lods
inc
es
push
test
jmp
sbb
dec
out
cld
out
adc
mov
insb
lods
orb
inc
ficomps
xchg
cmc
out
les
pop
cmc
inc
push
fsubrs
std
in
pop
cmp
sub
mov
in
xchg
lods
inc
push
sbb
add
or
sub
adc
repz
clc
loop
stos
xor
movsl
fcmovnu
xchg
push
daa
mov
jo
adc
js
enter
loope
jo
ds
push
jo
leave
mov
out
test
adc
sbb
stos
int
mov
lcall
or
hlt
in
push
adc
inc
mov
fnsave
inc
jnp
test
lret
push
pop
or
mov
shrb
jmp
xchg
pop
fincstp
mov
sbb
pop
mov
sub
pop
sbb
stos
mov
sti
data16
rol
call
popf
and
stos
push
mov
aaa
adc
xor
ja
rcl
sbb
push
pusha
adcb
dec
pop
rcrb
fsubs
orb
jbe
mov
sbb
jae
mov
mov
sahf
mov
cwtl
xchg
push
push
pop
lock
inc
jo
aad
ret
ret
in
or
js,pn
and
mov
fdivs
pop
fistpll
int
pop
jmp
ret
xor
into
push
jae
lods
pop
das
jae
dec
xchg
rclb
mov
sub
daa
dec
mov
xor
jge
sbb
std
sbb
imul
jnp
push
xchg
pop
jb
loopne
xchg
outsl
jge
in
xchg
into
mov
ljmp
sbb
push
psllw
mov
into
fcmovnu
sub
nop
insb
loop
mov
mov
or
jge
push
loop
jns
jns
int
jmp
mov
cmp
lea
imul
push
mov
out
adc
loop
dec
xlat
xchg
sub
scas
call
mov
and
std
mov
sub
push
pusha
repz
cmpsl
push
sbb
mov
stos
outsl
push
jg
xchg
lahf
xchg
inc
add
ljmp
in
out
test
xchg
sub
mov
jnp
or
xlat
mov
daa
repnz
inc
add
cmp
jb
mov
daa
dec
xchg
push
mov
fsub
cmpsb
xlat
pop
ret
xor
outsb
mov
arpl
or
mov
repnz
outsb
mov
xor
push
cmp
outsl
loope
cmc
mov
jo
jle
cmp
pop
push
hlt
fwait
pusha
and
sub
mov
sarb
mov
pushf
jmp
ja
inc
mov
les
insl
cmp
jno
jl
push
adc
clc
loop
into
inc
fsts
cmp
lret
popf
xor
mov
andb
lods
ss
add
imul
ffreep
sub
mov
xlat
test
or
mov
in
cld
dec
pop
mov
pop
out
insb
mov
fadd
rolb
sbb
cmp
ja
mov
cwtl
xchg
jno
clc
sti
inc
popf
add
cltd
mov
or
jae
pop
mov
pop
test
sbb
adc
and
jb
in
incb
mov
jns
cmp
movsb
rorl
cmp
aad
mov
mov
xor
dec
imul
push
sbb
out
repnz
out
cwtl
in
loop
xchg
jno
loopne
repz
lcall
cmp
xlat
jne
adc
stos
xchg
inc
loopne
cli
jnp
insl
jp
ss
sub
jb
mov
jecxz
inc
cmp
sti
jns
shlb
pop
enter
ljmp
rcr
or
sbb
or
cmp
fidivrl
scas
mov
loop
aaa
jb
pop
jle
adc
cwtl
arpl
adc
test
mov
scas
sub
daa
sub
push
xor
outsb
jns
testb
daa
or
loope
stc
jo
jge
lahf
fcomps
lcall
pop
mov
popa
xchg
roll
sbb
xor
or
mov
movsl
jnp
or
cmc
pop
mov
shlb
movsb
and
fsubrp
call
add
cmp
bound
pop
ud2
and
leave
pop
adc
mov
lds
sarl
xlat
bound
popf
or
inc
ss
pushf
xor
stc
xor
cmp
cmpsl
and
xchg
loop
gs
sahf
adc
inc
pushf
lods
scas
push
das
push
cwtl
inc
pushf
add
aaa
jo
pop
sub
add
fs
mov
ljmp
in
popaw
xor
cs
dec
cmp
cmc
dec
jb
cmp
popf
fcoml
xchg
pop
cmp
insb
push
into
mov
pop
mov
imul
push
sbb
xchg
hlt
in
subb
in
xchg
pop
test
xchg
jle
mov
repnz
add
sbb
pop
jg
leave
dec
dec
movsl
push
inc
lock
add
scas
inc
jecxz
sub
out
push
je
sbb
ja
push
ss
push
mov
test
jno
jbe
mov
rcr
sarb
test
fnstcw
pop
push
jb
je
cmp
lock
xor
cmp
cmp
aas
cmp
push
pop
or
insl
cmpsb
mov
jecxz
mov
adc
jmp
ljmp
push
loope
mov
gs
das
sbb
adc
nop
int
fxch
dec
scas
leave
xchg
jno
out
popa
daa
mov
adc
mov
mov
sti
jl
div
cmpl
pop
inc
es
je
add
sarb
pop
leave
cmpsb
add
mov
push
cmp
leave
jecxz
gs
fistl
and
adc
dec
in
cli
push
mov
sahf
in
add
push
add
pop
and
push
lret
or
cmp
mov
cmp
adc
push
js
mov
inc
scas
sub
dec
mov
and
jnp
leave
sub
shrb
push
std
je
dec
sub
les
adc
pop
in
push
dec
jbe
cmp
sub
testl
xchg
les
movsb
ds
ljmp
or
sub
xchg
fdivr
dec
mov
mov
ljmp
xlat
or
rcr
jmp
adc
in
js
sbb
jge
repz
mov
mov
jno
mov
mov
in
addl
scas
push
xlat
add
dec
lret
enter
out
add
jb
cmpsl
mov
adc
inc
cld
daa
mov
jecxz
dec
testl
loop
mov
lret
push
mov
cmpsl
movsb
scas
imull
imul
pop
movsb
mov
sbb
hlt
cmp
adc
sbb
jmp
push
jbe
fiadds
pop
xlat
jo
xor
loope
das
xor
aas
adcb
sbbb
divl
stc
movsl
cmpsb
pause
lods
fldcw
popf
orl
mov
mov
cmpsl
push
loopne
stos
out
and
push
gs
lods
pushf
xchg
pop
in
push
nop
pop
je
pop
test
mov
por
inc
lret
xorb
sbbb
cmp
je
xchg
inc
add
ss
pop
xchg
pop
pop
xchg
cmp
aad
je
inc
xchg
jbe
pop
inc
xchg
adc
sub
in
cltd
fst
imull
fcompl
outsb
mov
xchg
divb
int3
lods
push
and
jg
rorb
mov
mov
cmc
push
daa
arpl
pusha
adc
mov
push
mov
inc
dec
daa
lahf
mov
outsl
mov
fadds
push
jecxz
iret
scas
pop
lahf
jl
pop
jb
rclb
shl
xchg
xor
push
jle
jae
pushf
xchg
jl
push
ret
cmpl
add
ret
int3
fmul
inc
xor
aam
push
jns,pt
xchg
pusha
sahf
fs
or
mov
js
in
ret
inc
push
scas
jbe
repnz
repz
popa
mov
lret
xchg
aam
aam
lahf
mov
jno
iret
cmpsb
dec
cmp
mov
xor
call
inc
subb
out
sti
pop
andb
inc
mov
cmp
push
jne
jne
js
psrad
and
xor
lods
xchg
add
icebp
ds
fucomi
outsb
sbb
shrb
jge
sbb
push
cmp
mov
jge
dec
mov
dec
cli
xlat
dec
cmp
mov
xchg
xchg
arpl
leave
js
pop
sahf
pop
int3
adc
xchg
call
pusha
pop
vpsllq
xchg
imul
push
xor
add
scas
cmp
lock
std
adc
and
es
movsb
and
shlb
mov
sbb
push
rclb
in
or
enter
xor
aad
xorb
push
shlb
sbb
fistl
jecxz
notb
mov
test
pop
repnz
das
or
sbb
mov
adc
out
mov
lock
dec
mov
inc
inc
jno
and
fdivrs
xor
sbb
xor
mov
cld
xor
push
cli
pop
adc
mov
shl
in
in
clc
lods
pop
in
andb
ret
incl
mov
dec
inc
aaa
push
xchg
cmpsb
and
xchg
je
or
imul
testl
xlat
push
rclb
inc
dec
std
insb
rol
pop
cli
in
mov
sbb
add
xchg
pop
bound
ss
out
lcall
push
mov
jl
sub
and
rcrb
je
std
jmp
sub
cmp
fcmovnbe
rcrl
stc
xor
out
repnz
jne
in
sbb
subl
fldln2
sarb
pop
or
mov
mov
ret
jg
sti
or
jae
les
cmc
sub
lock
das
inc
popa
pop
stos
cld
std
xchg
fmuls
ljmp
lret
popf
sarb
mov
pop
xor
or
dec
fwait
adc
adc
and
mov
inc
jmp
stos
adc
out
nop
lock
shlb
adc
pusha
mov
lods
aas
sub
xchg
push
lret
xor
mov
test
mov
sbb
mov
inc
inc
andb
stc
mov
mov
cmp
aaa
mov
lods
out
fs
rclb
stc
stos
loop
sub
sahf
out
orb
sbb
shlb
adc
mov
sbb
sbb
mov
in
rorb
data16
xor
push
cmpsl
cmpsl
sbb
sub
or
xor
inc
je
adc
inc
daa
push
fcoms
jb
mov
mov
loope
rcrb
push
push
xchg
adc
add
cmp
out
mov
enter
push
stos
cld
pop
sarb
daa
mov
cmp
subb
mov
inc
and
fucomp
fwait
xchg
imul
xor
fmuls
rorb
fs
mov
popl
pop
xchg
sbb
ret
xchg
sbb
inc
iret
std
insb
sub
lret
dec
dec
mov
test
sbb
mov
addr16
pop
lahf
ss
sub
jns
je
outsb
inc
mov
pop
or
pushf
fwait
push
rcr
fs
pop
or
adc
scas
repnz
adc
test
shr
jmp
nop
pushf
mov
cwtl
pop
add
or
mov
jae
pavgw
in
aad
movups
mov
dec
cmpsb
mov
sti
mov
mov
iret
ja
lock
out
push
push
out
push
lds
roll
xchg
data16
sbb
adc
into
cmp
mov
dec
jb
add
fs
sub
add
negb
jmp
xchg
or
pop
lock
stc
push
mov
hlt
sbb
clc
mov
rcll
pop
out
fwait
jg
adc
jle
or
fdivl
loop
xchg
dec
mov
hlt
ficoms
xchg
call
jl
fisubrl
mov
loope
enter
add
inc
sub
rol
cs
fisubl
data16
dec
pop
insb
and
fstpl
xor
jne
add
popa
hlt
inc
xor
push
enter
inc
std
or
cmp
xor
fistpll
dec
lds
inc
adc
cmp
jb
sub
insb
sub
push
jl
scas
push
notb
repz
ja
cwtl
clc
mov
fnsave
mov
into
push
les
cltd
insl
mov
add
sahf
push
rorl
pop
xor
loop
aad
xchg
xor
push
data16
addb
and
ljmp
out
push
mov
roll
adc
repz
xlat
aad
push
cmpsb
scas
lods
inc
mov
mov
lock
bound
jo
fisttps
and
sbb
add
mov
pop
aaa
mov
repnz
push
imul
jbe
xor
dec
loope
mov
fisubrl
push
hlt
push
std
mov
out
xor
roll
adc
dec
clc
nop
int
push
cmp
xchg
mov
repnz
lods
mov
out
pop
add
sahf
mov
je
pop
push
test
xchg
shlb
mov
mov
popf
inc
insb
ja
cmp
in
pop
imul
dec
cmp
sbb
arpl
int3
imul
mov
inc
mov
loope
movsb
int3
xchg
ja
inc
int3
xchg
in
adc
inc
mov
xchg
pop
mov
dec
inc
push
roll
popf
ret
aas
sbbb
mov
push
xor
push
and
repz
jp,pn
push
sub
push
rcll
cmpsb
shlb
call
std
mov
insb
xor
test
jae
cmp
mov
inc
fwait
mov
push
and
call
mov
mov
pop
mov
inc
sub
sbb
push
ljmp
movsb
xchg
cli
add
adc
adc
adc
scas
es
cmc
pop
les
sbb
cmpsl
xor
data16
xor
je
cmp
fdivrs
inc
pop
push
xlat
sub
jae
and
fwait
dec
lcall
in
sub
jb
sahf
or
loopne
jmp
jle
or
cmpl
cmp
inc
mov
adc
inc
test
add
jp
mov
fldl
aaa
je
adc
add
push
jmp
das
adc
xor
adc
xor
cmp
pop
adc
and
pop
cli
aad
outsb
loope
jbe
mov
mov
inc
xchg
jae
dec
cmpsl
icebp
outsb
dec
mov
outsl
leave
lods
les
push
mov
out
pop
leave
xchg
mov
mov
out
or
push
shl
out
xchg
xorl
and
mov
add
test
fisttpl
mov
or
push
and
cmp
push
ret
dec
pop
imul
sub
insl
or
idivl
jg
ja
es
int
mov
test
and
loopne
mov
cmp
lods
sub
mov
mov
in
xchg
outsb
cmpsb
das
dec
js
in
adc
push
ret
fidivl
test
enter
mov
mov
ret
cmpsb
cli
aam
aas
adc
jno
and
mov
pop
loope
sub
loope
push
push
jmp
pusha
push
in
aas
pop
mov
out
add
push
mov
mov
pop
in
test
xchg
test
adcb
shlb
dec
push
adc
leave
rol
xchg
pop
dec
iret
cmp
outsb
cmp
dec
cmp
repz
jmp
pop
mov
cwtl
mov
rcll
sbb
pop
pop
mov
xchg
cmp
adc
and
jb
push
movsl
jne
addl
int3
aad
cmpb
adc
iret
mov
popf
loopne
dec
jbe
std
test
imul
fs
jecxz
stos
subl
lock
add
ret
popa
push
test
movsl
and
testb
or
dec
add
imull
outsb
and
addr16
repnz
insl
jecxz
lcall
out
cmpsb
es
mov
scas
jmp
push
jge
inc
mov
aad
ss
sarl
test
mov
in
sub
jl
aam
xorl
xor
or
jecxz
stos
cli
jb
inc
mov
xor
aaa
data16
xor
and
sub
mov
mov
fcom
inc
frstor
xor
adc
lock
fsts
pop
add
fisubl
mov
jle
les
test
imul
scas
xor
mov
movsl
lods
aas
js
jmp
hlt
stc
cmp
mov
pop
fs
movsl
jns
in
add
mov
inc
fwait
addr16
mov
pop
lcall
push
enter
add
popf
jb
xor
mov
sub
pop
rcrl
shll
or
adc
aam
xchg
or
mov
dec
iret
call
jo
lcall
lea
xchg
add
dec
test
imul
cwtl
lret
mov
hlt
and
pushf
fstpl
outsl
inc
mov
testl
sub
aad
xchg
sub
enter
jge
jnp
out
xchg
push
int3
push
dec
or
clc
xchg
mov
fwait
outsb
push
fwait
popa
push
clc
xor
add
sbb
daa
mov
cmpsb
cmpsl
in
sub
dec
add
pop
or
outsl
mov
sub
mov
mov
aam
adc
inc
test
jns
add
sbb
lock
pushf
int
push
andb
mov
and
xor
aam
dec
mov
sbb
outsl
xchg
ss
rolb
ret
je
push
andl
aas
sbb
ret
sbb
mov
and
or
lahf
push
cs
sbb
cwtl
les
push
sbb
pop
cmp
mov
jg
sbb
out
push
mov
xchg
jmp
and
shl
aas
dec
fwait
cmp
jmp
aam
hlt
mov
sub
arpl
loop
sub
gs
xor
xor
cld
cmp
jno
jle
push
xchg
mov
jg
or
push
popa
push
ficoml
ja
ja
ficoms
in
mov
dec
and
mov
adc
test
push
daa
int3
out
push
lret
push
ljmp
push
stc
jge
add
mov
les
mov
mov
mov
stc
pop
add
or
xor
push
mov
lods
cmp
and
adc
icebp
push
push
dec
cmp
and
sub
xchg
and
call
fcmove
push
das
adcl
push
test
addr16
cmpsl
xor
or
mov
test
hlt
ljmp
add
mulb
repnz
mov
xchg
int3
add
iret
cld
sbb
std
xor
cltd
xor
mov
add
out
and
scas
lea
cmove
pushf
cwtl
mov
cld
mov
cs
xchg
inc
popf
loope
push
repz
xor
pusha
add
cmp
pop
test
dec
xchg
mov
sbbb
adc
mov
or
sbb
cs
call
mov
push
or
sub
lock
loope
mov
adc
into
lds
mov
lret
dec
mov
pop
inc
jns
ljmp
mov
add
and
sbbb
xchg
fldt
adc
cmpsb
faddl
sbb
xchg
std
push
test
into
aaa
or
mov
mov
mov
js
out
sbb
sub
xchg
push
sub
inc
mov
loop
jecxz
arpl
in
pop
push
test
outsb
testb
mov
pop
inc
xchg
add
sub
or
pop
cwtl
jbe
push
dec
cli
je
dec
jae
pop
dec
pop
leave
jmp
cmc
push
cwtl
pop
sub
cmp
clc
in
xchg
push
mov
fsts
jno
int
cmc
sbb
fs
and
add
and
inc
aam
sub
xchg
xchg
jecxz
cli
fwait
int3
cmpsl
lds
dec
and
jb
add
popa
pop
cltd
cmp
pop
jne
mulb
jg
inc
bound
pop
lcall
push
fstps
inc
cmpsb
aas
mov
or
xor
and
daa
or
xor
xchg
repz
dec
push
push
out
sbb
pop
mov
jne
ret
sahf
mov
inc
push
lret
and
jne
inc
push
adc
inc
and
fdivrl
sub
ljmp
mov
fcomi
pushl
lods
mov
scas
insb
cmpsb
sahf
or
lods
push
mulb
popf
pop
movsb
or
pop
inc
aad
xor
xor
mov
pop
rorb
cmp
fistl
pop
pop
test
xor
mov
inc
or
mov
lret
icebp
mov
pop
js
cld
stc
add
in
fsubr
lret
jl
push
in
cmp
push
aas
xor
call
aad
loope
inc
mov
ja
fisttps
mov
pop
leave
in
inc
in
aam
bound
lret
sub
inc
outsl
aaa
lock
xlat
call
outsl
frstors
cmp
jp
sbb
dec
push
sbb
mov
pop
mov
in
push
sbb
or
ucomiss
adc
xor
popa
xor
sbb
loope
sub
dec
sbb
out
fdivrp
mov
in
lret
and
fwait
xchg
inc
pop
jno
mov
inc
in
fidivs
test
mov
mov
fwait
adc
mov
andl
jmp
cmp
ret
jo
push
dec
sub
idivb
popa
pop
pop
clc
lcall
sub
repnz
decl
xchg
int
lret
mov
push
or
and
or
sbb
sbb
adc
leave
clc
add
xchg
repnz
inc
or
inc
out
jl
xchg
lods
iret
cmp
jb
lret
inc
cmc
mov
push
repz
adc
lods
incb
sub
mov
stc
xchg
xor
pop
sti
in
xor
cmp
sub
dec
jae
mov
icebp
mov
xor
pop
ret
in
cltd
dec
pop
cwtl
sub
pushf
into
imul
pusha
push
out
jmp
cmpsb
adc
pop
loop
outsl
mov
scas
mov
mov
lret
inc
mov
sti
and
push
test
adc
cmpsl
int3
fwait
jp,pn
push
jecxz
inc
enter
in
mov
cmp
in
fwait
out
shlb
mov
icebp
xor
push
rcr
in
fisubs
addr16
sub
sbb
jo
in
in
lcall
popa
mov
pop
sub
lods
pop
inc
arpl
test
stos
cld
cld
push
mov
push
fistpll
jae
fwait
jg
in
push
jnp
into
dec
cmc
lods
cmp
dec
test
jge
and
lods
cmp
sub
sti
ds
scas
filds
icebp
leave
das
jp
cs
hlt
push
stos
mov
js
sub
in
sub
mov
rclb
scas
test
bnd
sbb
xor
adc
test
pop
arpl
mov
mov
and
leave
lahf
out
mov
pop
aam
adc
jb
adc
jmp
mov
out
aaa
sbb
jl
jns
aam
aas
jne
mov
mov
jle
xchg
fsubrl
or
movsl
or
xlat
in
hlt
cmpsb
mov
leave
lret
xchg
lret
icebp
or
mov
jecxz
push
xchg
or
sub
and
pop
aad
cld
push
jno
pop
adc
xor
jmp
icebp
mov
je
adc
xor
insb
outsl
inc
out
and
scas
imull
cmp
sbb
popa
mov
fadd
xorl
rcrl
jne
push
stc
imul
cmp
adc
iret
stos
add
inc
push
ret
clc
stos
lcall
pop
std
pop
js
imul
jae
fsubrp
cmp
add
cld
push
adc
or
rcl
add
adc
mov
dec
mov
bound
xor
cmpsl
dec
cmp
xor
sbb
inc
mov
cmpsb
scas
add
pop
rcrb
sahf
sbb
ds
ror
push
popf
xor
adc
cmp
dec
add
fdivl
iret
inc
jp
popf
icebp
testb
insl
mov
mov
scas
xchg
pop
stos
movsb
mov
sub
sahf
pop
xor
js
dec
jae
xor
inc
dec
sbb
or
push
add
test
adc
adc
mov
das
add
fcomip
mov
sub
fisubrs
repz
and
repnz
add
loop
cmpsb
sbb
push
cmp
or
sbb
dec
xor
fildl
and
mov
leave
xor
in
fldl
xor
sub
imul
aad
call
repz
in
aas
cmc
and
in
sti
push
fstl
cmp
std
fwait
dec
jl
mov
mov
hlt
ljmp
test
sub
js
mov
jo
inc
xchg
jno
mov
mov
add
mov
xorb
ret
xor
sbb
mov
xchg
push
aam
xchg
lret
lds
adc
cmc
fsubl
gs
insb
jp
jg
xchg
pop
push
xchg
sbb
test
push
cmpsb
mov
ret
pop
ffreep
mov
jp
lret
insl
pop
cmc
or
cmp
jmp
inc
jns
pop
decl
push
into
fcomps
js
js
in
iret
xchg
sbbb
mov
imul
pop
pop
es
mov
out
fnstsw
sub
mov
xchg
jl
sbb
bound
xchg
das
push
insb
push
and
outsb
outsl
or
cli
lret
sub
outsb
xchg
insl
or
sti
mov
jge
ficompl
push
ror
dec
xor
cmpsl
out
push
mov
fcoml
stc
lahf
stc
inc
adc
adc
sub
mov
fs
arpl
push
jb
cwtl
mov
mov
adc
mov
mov
js
scas
mov
nop
test
addr16
mov
fistl
mov
jmp
rcr
int
lret
dec
push
mov
dec
sbb
idiv
mov
mov
pop
pop
inc
xor
loop
repnz
ret
adc
sbb
push
mov
mov
and
in
xchg
movsl
and
lret
xchg
xorb
or
popf
repz
mov
jae
pop
pop
mov
jp
sub
shll
mov
iret
stos
test
or
adc
xor
rolb
xor
pop
sbb
pop
lods
testb
push
or
pop
xchg
iret
fwait
fwait
icebp
mov
les
mov
sbb
lahf
push
enter
sub
outsb
xor
fnsave
rep
pop
and
loope
push
adc
ss
cltd
jnp
pop
sahf
xor
xor
jns
pop
adc
std
jmp
loope
push
jns
adc
jae
fwait
addb
hlt
outsl
stos
cmp
push
adc
dec
jb
cmp
push
ja
mov
cmpsb
scas
xchg
lds
mov
lret
pop
cwtl
push
fs
push
sbb
pop
test
mov
mov
adc
dec
in
sub
ffree
js
sub
cmp
mov
shlb
adc
adc
jnp
jp
cld
mov
cmp
fadds
cli
popf
xor
lods
stos
loop
test
jecxz
pusha
pop
pop
in
mov
loopnew
in
lret
pop
add
bound
js
add
sbb
ja
repnz
insb
pop
arpl
inc
xor
dec
push
insb
aam
dec
xchg
mov
aad
stos
adc
pop
in
dec
adc
push
jbe
lods
aam
dec
loope
adc
fucom
jmp
imul
jp
dec
stos
cltd
sub
pop
xor
adc
add
arpl
fwait
enter
std
push
jge
leave
cltd
mov
movsb
fiadds
pop
dec
test
push
ret
mov
sub
push
adc
mov
mov
jno
sub
pop
ljmp
test
test
and
mov
jno
mov
jge
imul
lods
dec
push
movsl
cmp
or
xchg
xlat
pop
loope
stc
push
fdivrs
inc
add
mov
popa
gs
stc
pop
dec
cmpsl
pop
sbb
cmpsb
inc
aas
testl
pop
cmp
bound
add
jno
fisubl
add
mov
add
jp
or
pop
stos
retw
mov
les
stc
in
out
adc
pop
aaa
jb
cmp
sbbl
jle
pop
test
call
scas
xor
aas
clc
add
cmp
mov
inc
mov
push
jne
push
fs
lds
sbb
or
sbb
sub
ja
gs
jl
movsl
rol
xchg
loopne
test
dec
sahf
xchg
adc
xor
fdivrl
inc
loopne
xchg
push
sbb
adc
fnsave
ret
aas
jbe
ds
das
mov
jg
or
mov
outsl
xor
int3
cli
fldl
daa
dec
fnsave
or
rcrl
add
mov
xchg
mov
jns
inc
cmp
jg
icebp
add
jl
ret
addr16
pusha
push
adc
test
sar
mov
aad
push
adc
inc
jbe
add
sub
mov
inc
sub
or
stos
xchg
mov
das
out
jo
je
pop
pop
lahf
mov
and
into
xchg
stos
ljmp
loopne
push
inc
ss
aam
cmpsb
add
fildll
test
mov
ljmp
jnp
rcrl
jg
jmp
xchg
push
push
pop
movsb
shrl
testb
mov
in
push
repz
xchg
out
or
es
shll
ror
sub
push
push
adcl
mov
pusha
pusha
xchg
xchg
loop
je
xchg
ljmp
pop
subl
pop
rcr
adc
sbb
add
xor
inc
pop
jno
cmc
in
imul
pusha
lods
jle
mov
inc
test
icebp
rol
xlat
lahf
imulb
push
repnz
out
adc
add
in
jae
cld
popf
or
jb
sub
xchg
mov
pop
imul
je
xor
xor
lahf
xchg
push
mov
adc
mov
adc
dec
mov
dec
aad
fsubs
xor
cmp
sub
or
pop
jp
push
pop
mov
dec
jnp
leave
sbb
out
or
jbe
das
outsl
push
ljmp
insb
fdivs
out
push
js
xor
inc
jg
jl
sbb
adc
xchg
jg
xchg
loopne
pop
push
imul
push
dec
out
jo
mov
mov
xchg
jne
mov
daa
sbb
xor
shll
jbe
mov
adc
lcall
shlb
push
sub
popa
xor
jle
sub
cld
mov
nop
mov
xor
aam
cld
sbb
js
cs
movl
out
and
cmp
loopne
jo
inc
iret
fadds
jp
das
dec
das
inc
mov
and
movsl
sbb
outsb
lret
cmp
pop
mov
in
cmc
mov
divb
les
xchg
pop
push
mov
and
add
js
and
cmpsb
data16
push
inc
sbb
test
mov
je
cmp
cmp
imul
jb
sub
mov
cmp
cmp
movsb
sahf
mov
inc
hlt
jo
ret
leave
push
pusha
pushf
push
test
repnz
xchg
fs
test
pop
push
sbb
adc
adc
jnp
sub
mov
outsb
jmp
xchg
mov
lret
cmp
xor
cmpl
fnstcw
ret
cmp
add
and
mov
in
cmc
insl
cmp
cmc
or
sbb
dec
add
roll
test
jp
popf
adc
test
cmp
enter
clc
idivl
aad
lods
pop
call
jmp
movsb
fs
push
cmp
add
fcmovne
stos
inc
pop
pop
insl
fucomip
ljmp
mov
sti
sti
sub
cmovnp
inc
mov
xchg
nop
pop
push
jecxz
pop
jg
out
mov
shlb
mov
sti
xchg
idivl
fs
scas
in
xor
sub
mov
xchg
aam
sbb
and
sub
jbe
mov
mov
pop
cmp
push
or
jmp
add
push
sub
add
inc
lods
cmp
jge
frstor
fmuls
das
clc
pusha
dec
inc
ret
fwait
dec
and
ja
and
test
and
mov
imul
push
push
xchg
rclb
xor
leave
daa
rcl
sbbb
inc
fs
movsl
sbb
call
aad
xchg
and
rcll
pop
test
add
add
pop
daa
dec
cmpsl
fldt
mov
out
mov
mov
in
cmp
xchg
mov
mov
fsubrl
push
lock
xor
adc
push
mov
subl
jecxz
or
test
or
lods
dec
ret
jne
sbb
adc
sub
hlt
cmp
jnp
shll
jge
inc
das
loope
inc
xor
jae
out
push
push
in
mov
gs
or
add
push
mov
fistpl
sbb
inc
or
fisttps
cmp
adc
pop
mov
and
jne
lds
scas
pop
cmpsb
test
inc
sub
cltd
gs
pop
and
stos
mov
push
test
add
popf
push
fildll
cli
mov
scas
pop
mov
sbb
mov
lret
sbb
xor
mov
lret
dec
or
dec
pop
inc
inc
adc
mul
push
mov
push
pop
or
ss
and
fsubrs
lds
adc
lods
sub
xchg
inc
test
imul
inc
dec
push
cmp
aam
mov
repz
leave
inc
iret
sub
fistps
in
mov
cltd
fldt
dec
das
testl
xlat
mov
notl
pop
decb
fists
push
jecxz
fwait
rclb
clc
cmpsl
into
jmp
adc
cmp
mov
or
push
mov
dec
test
loope
mov
fisttps
sub
movsb
and
in
jl
scas
addl
xchg
sar
stos
mov
cmp
mov
lods
mov
aad
fisttps
cmp
add
gs
movsl
std
add
pop
mov
daa
adc
cmp
lods
push
xor
insl
data16
pop
std
push
push
push
mov
inc
negb
jmp
jae
mov
repz
sbb
xchg
jne
sbb
fwait
stos
adc
fisttps
sahf
fadds
cld
insb
pop
idivl
insb
insb
jp
aad
inc
push
xchg
jb
mov
mov
jns
mov
pop
cwtl
add
je
mov
jnp
or
pop
lret
out
stos
and
cmp
mov
scas
imul
mov
add
push
daa
sub
push
retw
subb
jne
lcall
lock
and
push
int
mov
std
mov
sbb
fimuls
loop
js
pop
addb
xchg
fsubr
mov
pop
add
cmp
into
dec
cs
or
push
addr16
mov
lcall
std
loopne
mov
dec
pop
sbb
mov
sub
jle
sub
jns
lds
mov
dec
xchg
mov
mov
popl
push
dec
mov
aaa
mov
aaa
mov
xchg
xor
mov
or
roll
ljmp
sti
push
and
cmp
sub
push
rcrl
rcll
sets
ret
cli
insl
in
mov
test
insb
movl
xlat
int3
gs
jne
lds
push
jns
outsl
lods
xor
mov
lods
mov
call
pop
push
sbb
and
pushf
sub
ret
mov
mov
rorb
xor
scas
arpl
push
add
ret
sti
cmp
dec
pop
and
xor
adc
sbb
out
sarl
inc
dec
inc
mov
mov
nop
dec
nop
jl
sub
mov
inc
sbb
call
lock
add
es
cltd
data16
inc
push
jg
push
test
in
shrl
into
adc
rclb
test
lcall
aad
mov
fs
or
jbe
scas
mov
leave
or
cmp
pushf
push
mov
out
loop
orl
cli
in
xor
outsl
mov
jg
xchg
jp
mov
add
or
push
cltd
add
dec
dec
ret
and
xor
add
fdivs
enter
loope
adc
jno
int3
push
int
mov
ret
aam
loopne
sub
add
inc
mov
test
lret
push
xor
bound
mov
sub
pop
insb
es
xchg
fs
iret
jno
or
hlt
xchg
cmpsl
daa
and
les
stos
cwtl
jb
inc
fisttps
mov
mov
mov
mov
sub
jle
cmpb
jae
mov
xchg
repz
push
xchg
xor
daa
add
psrld
push
mov
xchg
add
jo
adc
sbb
imul
ret
popa
ds
add
sbb
push
stc
fs
imul
lcall
or
dec
lret
adcb
adc
jae
mov
stos
fcomp
ret
add
ficoms
and
int3
dec
aam
mov
sbb
mov
out
push
aas
loop
or
dec
aaa
inc
lahf
pop
daa
or
cmp
add
mov
pop
dec
je
mov
dec
push
inc
jle
dec
clc
in
mov
jge
test
push
leave
int
cli
jecxz
cs
fisubs
pop
inc
loop
xchg
mov
ja
cmpsl
fisubrl
xchg
test
cwtl
xor
rorb
xor
lods
test
fwait
add
sub
pushf
cmp
lds
push
fsubl
adc
mov
mov
mov
jbe
inc
stos
jmp
loope
or
mov
and
cli
push
cmp
out
or
fmuls
xor
push
mov
daa
mov
inc
xor
or
xor
cmpb
jne
cwtl
mov
cs
fdivrs
ror
sbb
imul
adc
popa
xchg
pop
sysexit
mov
inc
push
push
aad
pop
data16
cmp
add
push
add
data16
xor
pop
mov
mov
loop
mov
jne
js
xchg
mov
sbb
adc
ss
jge
bswap
fldcw
jecxz
mov
in
push
pop
lds
sti
daa
jb
push
movsl
cmp
adc
sub
pusha
add
mov
inc
push
xchg
xorl
shll
and
inc
xchg
fldz
xchg
pop
cmp
mov
and
jle
nop
jl
adcl
push
sbb
mov
mov
cmc
inc
lret
jae
xchg
test
or
mov
scas
scas
icebp
stos
fistps
adcb
cmp
adc
ja
push
insl
pop
dec
vmovaps
popa
jg
dec
xchg
ret
nop
xor
xchg
mov
cmpsl
sub
push
in
sbb
iret
shlb
movsl
pop
sub
adc
cmp
jo
dec
inc
and
adc
test
iret
aaa
aam
pop
fwait
mov
or
stos
fucomip
inc
and
push
inc
lcall
leave
dec
in
out
lret
stos
xchg
adc
test
and
sarb
jae
push
ficompl
jle
je
test
add
inc
mov
pop
jb
bound
insb
mov
fcoml
inc
aas
push
iret
mov
inc
imul
ja
adc
das
sbb
rolb
push
lea
and
sbb
inc
mov
daa
sub
insb
test
sub
or
in
mov
add
pop
lret
enter
sti
lret
addr16
inc
xchg
jno
inc
fcmovbe
and
push
insl
inc
cli
dec
xchg
loope
adc
out
adc
or
xchg
outsl
lds
mov
xchg
fdivrl
cmp
andb
lea
rolb
fsubs
iret
popa
lret
dec
out
push
movsb
loop
adcb
xchg
cltd
outsb
add
mov
ret
stos
jae
jmp
mov
xor
pop
std
leave
sbb
imul
fwait
jecxz
sahf
cmp
popa
shrb
push
icebp
sub
and
test
jae
popa
cmp
stos
shl
push
cmc
leave
jne
ret
and
cwtl
mov
mov
outsl
cltd
add
data16
xor
lea
mov
cmp
xchg
stc
and
test
pop
push
xlat
imul
out
cwtl
pop
or
into
test
pushf
and
mov
inc
xchg
adc
dec
fcomps
pop
adc
inc
xchg
pushl
cmpsl
out
or
fwait
xor
cmpsb
fisubl
xchg
dec
test
jmp
in
jecxz
push
mov
rcrb
out
mov
push
jp
mov
pop
cs
mov
cmp
mov
rorl
dec
les
jae
and
adc
repnz
rclb
in
mov
cmp
adc
xlat
scas
cmpsl
inc
jno
mov
outsb
inc
lock
fs
push
dec
adc
lcall
sbb
jle
mov
mull
mov
push
or
fidivrs
add
cmp
cmp
sub
pop
ljmp
cmp
in
or
movsb
cmp
sub
fcoml
ds
and
push
xor
bound
mov
and
mov
popf
mov
push
mov
mov
clc
xchg
mov
cli
or
outsb
mov
inc
pop
xchg
test
imul
adc
decl
das
addl
mov
pop
push
jecxz
mov
fimuls
rcll
out
es
xor
repz
push
jns
mov
lods
popf
sub
fisttpl
inc
stc
mov
push
inc
inc
xchg
inc
xchg
jb
pop
mov
jle
gs
add
or
mov
or
pop
cs
mov
xor
inc
fdivr
or
add
call
xlat
mov
insb
xchg
sbbl
cmpsb
cmpsb
push
push
push
ret
subb
arpl
shll
sub
call
pop
dec
cmp
dec
xor
sbb
pop
mov
pop
and
inc
cmp
jmp
popf
aam
cld
push
cmpsl
mov
pop
jg
adc
mov
add
jnp
daa
into
subl
dec
push
cs
movsl
insl
cmp
cmpsl
xchg
cmpsl
dec
ja,pt
push
and
adc
push
jb
jmp
loopne
movsb
dec
push
insl
jmp
mov
xchg
xchg
mov
scas
adc
sub
dec
or
jae
and
insb
sbb
cmp
rorl
cli
lahf
aad
pop
negb
sub
fdivr
pusha
push
aas
jb
adc
sti
les
test
cmc
xor
daa
push
pusha
filds
leave
fisubl
out
mov
xor
xor
es
jl
xchg
stos
les
fdivs
scas
scas
movsl
popf
lods
or
cltd
lret
jp
or
aad
std
ds
arpl
rep
jge
ljmp
dec
or
inc
jnp
push
popf
push
ss
xchg
xchg
subl
add
lret
and
push
mov
aad
cmp
adc
push
data16
fsubs
std
pop
das
mov
adc
jae
xlat
mov
push
mov
leave
and
or
in
xchg
adc
jecxz
mov
mov
loopne
pop
xchg
mov
inc
fmul
mov
cld
fsubp
aaa
cmp
jge
jnp,pt
xor
sbb
imul
lds
sbb
loopne
pop
call
iret
test
cmp
jnp
pop
mov
imul
dec
stc
decb
jg
shlb
clc
scas
add
scas
icebp
push
jge
addr16
adc
stos
fwait
jg
adc
testb
or
fcoms
es
in
gs
and
loopne,pt
popa
ljmp
push
es
lods
icebp
mov
lret
inc
pop
pop
or
push
and
ss
adc
or
fmull
mov
fidivrl
fisubrs
movsb
mov
inc
outsb
adcb
jg
jo
pushf
repnz
cli
pusha
jo
mov
mov
pop
jns
xchg
addr16
dec
sub
inc
hlt
xchg
sbb
into
clc
sbb
mov
add
in
xchg
push
mov
ds
cmpsb
loope
or
mov
dec
aaa
aam
ljmp
mov
pop
mov
sub
push
push
js
cmc
jae
or
shll
fsubrp
pop
xor
adc
cmpsb
xchg
lret
mov
jne
dec
mov
xchg
lea
jg
xchg
sub
testl
mov
mov
sub
subb
sahf
xorb
adc
outsw
movsl
repnz
in
push
jg
gs
inc
lods
mov
or
shll
xchg
cltd
lods
sub
sbb
lcall
push
lret
inc
pop
sub
lret
or
shrl
imul
insb
fisubs
int
push
dec
push
mov
mov
roll
push
loop
movl
lods
xor
xor
cwtl
push
cmpsb
adc
nop
mov
bound
xor
mov
cmp
jo
add
push
mov
mov
pop
icebp
cmp
xchg
jl
mov
cmp
movsl
or
hlt
adc
or
outsl
or
in
mov
sub
out
add
xchg
jae
pushf
sahf
jp
xchg
data16
or
into
ficoms
fs
mov
orb
outsl
out
cmp
test
ret
mov
xor
add
pop
in
jle
xchg
rorl
rcr
shl
xchg
jmp
xor
mov
mov
mov
enter
add
icebp
in
jp
push
jns
jecxz
mov
pop
cltd
push
fdivs
cmp
pushl
scas
imul
jo
loopne
mov
popa
addb
pop
ret
inc
mov
pop
popf
hlt
cmp
lods
imul
dec
pushf
mov
arpl
xor
scas
and
push
pusha
push
xor
loope
fwait
lock
push
pusha
adc
pop
dec
ret
sub
jg
adc
adc
sub
mov
jbe
push
or
loopne
inc
cltd
int3
sub
mov
sub
or
jb
enter
and
sbb
int3
shrb
sahf
sub
xchg
jno
mov
and
inc
mov
push
mov
push
and
cmpsb
outsl
push
xchg
cmp
lahf
ret
lcall
sahf
test
adc
mov
fbld
pop
mov
scas
mov
dec
sub
mov
and
mov
adc
gs
je
cwtl
mov
out
xchg
imul
mov
jl
mov
and
outsl
mov
jne
mov
ljmp
mov
adc
mov
aam
lea
mov
test
pusha
mov
xor
mov
xchg
mov
or
es
stc
xor
scas
aad
cmp
sub
add
test
stos
adc
mov
or
jle
jnp
shlb
push
sbb
or
push
jp
jecxz
sub
mov
pop
add
inc
sbb
and
mov
and
ljmp
sub
xor
jbe
mov
adc
pop
dec
xlat
add
sahf
mov
bound
movb
dec
pop
scas
mov
jle
jae
sbb
inc
int3
push
vphaddbw
jnp
add
or
sub
sub
cmp
test
mov
push
je
jle
sbb
fildll
repnz
out
xor
lds
mov
fnsave
mov
jno
out
mov
lret
movsl
adc
cmpsl
aas
dec
sbb
outsb
gs
aad
shll
sub
fcom
xchg
cmp
rcll
or
inc
cmp
pop
jb
mov
loopne
cs
fsub
sub
or
std
adc
or
xchg
or
mov
add
and
adc
pop
and
jp
fcoml
adc
adc
adc
jl
notb
adc
hlt
and
jmp
aam
pop
jno
repz
dec
xchg
or
xlat
call
mov
ljmp
movntq
xchg
or
insl
jp
lock
xchg
dec
mov
pop
cwtl
dec
mov
jae
and
mov
pop
std
stos
inc
lea
pusha
icebp
in
jb
pop
xor
es
push
xchg
jno
jo
lcall
lret
outsl
pop
adc
js
subb
popf
push
outsl
aad
sbb
pxor
lock
insl
inc
popf
cmp
sbb
inc
stos
sbb
and
pusha
mov
and
repz
fiadds
lahf
xor
cld
psrad
in
or
mov
pusha
rcll
sarb
mov
xchg
scas
repz
lahf
mov
dec
sub
inc
mov
dec
or
or
adc
dec
xchg
add
inc
push
mov
dec
lds
add
shl
out
inc
pop
dec
dec
fdivrs
imull
enter
jmp
cmpsb
outsb
sub
cmpsl
notb
in
imulb
jecxz
enter
ret
xchg
dec
lock
sbb
mov
mov
test
cmc
add
cmp
imul
inc
adc
mov
or
cmpsb
lret
and
xchg
test
xchg
xchg
ds
mov
leave
sarl
jae
mov
fstpl
push
lock
add
lcall
inc
add
xchg
mov
das
push
enter
jp
sub
add
test
mov
movsb
or
sbb
inc
lea
fwait
jge
ret
jmp
cmc
mov
push
cmpsb
dec
mov
push
cmp
pop
add
iret
cmpl
popf
xor
jl
pop
xchg
std
fidivrl
out
jno
addr16
add
xor
sub
call
popa
jo
pusha
rorl
les
icebp
xchg
push
das
adc
mov
lcall
in
ljmp
sahf
mov
nop
les
arpl
cmp
adc
xlat
insb
int3
dec
xchg
fdivr
inc
ror
inc
fcoml
cmp
dec
loope
in
cmpsb
push
xchg
aad
dec
aas
sub
jecxz
push
or
vmread
in
fwait
push
or
adc
cmc
dec
jno
loop
adc
into
push
mov
xchg
xor
push
and
cmp
jle
ror
movsb
daa
and
push
mov
xchg
push
inc
and
sub
test
test
pop
fiaddl
in
push
pop
pop
jl
outsb
inc
cmpsb
ficomps
xor
mov
movb
sti
jb
int3
out
rol
push
push
loop
out
jge
jae
lea
xchg
mov
push
adc
repz
hlt
jnp
push
movsb
adc
js
dec
mov
leave
mov
adc
rcl
cs
xor
xor
xchg
cmp
movsb
stos
stc
mov
and
xor
mov
mov
addr16
add
jmp
pop
push
mov
fstl
cmc
dec
aad
out
call
out
test
add
cmp
push
hlt
mov
mov
push
into
cwtl
pop
cmp
mov
sti
rol
xor
ja
lods
stos
leave
cmp
shll
mov
jbe
arpl
fidivs
and
js
lahf
add
dec
cmpsl
shrl
mov
ret
gs
aad
push
icebp
cld
out
test
pop
jb
pop
fwait
xchg
divl
sub
lds
xor
mov
add
lock
adc
popf
push
cli
push
dec
or
push
insb
pushf
inc
dec
mov
leave
popa
outsb
flds
jb
or
fildll
mov
cmp
dec
mov
jae
in
pusha
xchg
pop
leave
xor
pushf
pushf
mov
jnp
push
addr16
sub
jle
pushf
dec
test
cmpsl
pop
lcall
hlt
imul
mov
or
sbb
sar
mov
add
subb
adc
push
mov
mov
adc
jno
fldenv
inc
scas
push
addl
pop
mov
loope
push
mov
je
shl
mov
cwtl
mov
mov
adc
out
xchg
in
repnz
stos
and
xor
sbb
cmp
stc
aas
xchg
and
loopne
push
lods
aaa
push
insb
testl
rol
dec
cld
push
xchg
out
scas
mov
cltd
cli
das
xchg
mov
flds
adc
xor
and
sbb
popw
add
push
inc
dec
stos
enter
add
inc
fistpll
push
ret
pusha
cmp
adc
adc
dec
adcb
dec
out
mov
xchg
jge
push
mov
ja
lret
jmp
shr
pop
jo
sub
int3
dec
subl
pop
fldcw
push
dec
lea
or
sbb
loope
adc
inc
pushf
rorl
gs
call
pushf
std
out
mov
fs
xchg
fwait
cmp
test
imul
jp
fwait
push
imul
sub
in
aaa
mov
je
and
mov
outsb
ss
mov
and
pushf
aas
mov
push
in
adc
adc
mull
cmpl
lcall
sbb
xchg
cmp
adc
xchg
push
mov
sub
fmull
mov
mov
repz
mov
push
jl
js
jns
mov
jns
push
mov
mov
scas
add
dec
push
pusha
sbb
mov
sbb
sarb
add
mov
and
repz
popa
call
loope
pop
jg
inc
test
push
mov
dec
mov
pushf
je
ljmp
or
mov
jp
fs
adc
adcl
fmuls
pop
pushf
sub
filds
add
shl
mov
xchg
repnz
aam
fcomps
call
mov
cmp
adc
push
or
lret
pushf
xchg
ss
mov
add
add
les
cmp
add
int3
hlt
nop
and
lcall
pop
pop
adc
mov
xchg
out
pop
mov
loopne
cmp
out
xlat
fidivrs
leave
cwtl
mov
jecxz
xchg
or
mov
xor
je
jnp
int
fcoms
stos
ret
out
push
loop
and
adc
sahf
ficomps
and
test
mov
lds
fcompl
rclb
mov
adc
in
shll
jno
shlb
cltd
and
jnp
adc
mov
mov
ljmp
jno
jo
dec
aas
mov
test
xor
adc
pushf
sti
insb
nop
xor
out
and
sbbl
fbld
clc
xchg
add
lds
in
push
or
kxnorb
jo
xor
scas
or
dec
ja
adc
and
sub
arpl
jae
adc
hlt
ljmp
lds
cmp
pop
push
cltd
pop
addr16
sbb
movsl
inc
mov
mov
outsl
push
lret
mov
flds
mov
sbb
out
fwait
dec
call
and
fwait
movsl
test
in
das
sti
imul
xor
in
xlat
pop
dec
push
cwtl
pop
ljmp
mov
lock
out
fbstp
in
or
jmp
mov
xchg
aas
lret
pop
jno
fwait
call
adc
aaa
inc
jo
imul
adc
pushf
rol
scas
pop
shrb
or
mov
add
push
xor
in
inc
inc
dec
lods
add
or
subb
mov
sbb
aas
mov
mov
inc
ret
add
add
dec
add
addr16
adc
xor
add
outsl
ret
dec
cmpb
pop
ret
add
repz
lock
and
jbe
in
xchg
sbb
mov
xchg
mov
cmc
mov
jp
pop
fsubrs
cmp
xchg
fistl
mov
shll
dec
inc
xchg
stos
fdivl
fwait
rorb
mov
mov
cwtl
sbb
dec
dec
inc
jle
lahf
movsl
lret
data16
stc
rolb
gs
adc
push
movsl
mov
pop
divb
test
mov
jae
xlat
nop
xchg
jbe
movsb
cmp
sbb
inc
adc
ljmpw
or
push
arpl
push
lds
pop
movsb
cmp
cwtl
pop
xchg
fldcw
pop
call
cltd
mov
dec
mov
bound
aas
jp
push
mov
fimull
es
ds
aaa
rcll
push
pop
add
sub
push
out
mov
xor
imul
dec
mov
pushl
into
mov
xor
sbb
inc
lds
cmpsl
push
in
pop
pop
lock
jnp
adc
cld
popa
icebp
mov
push
fadds
hlt
pop
sub
cld
mov
sarb
inc
popa
imul
push
rcrb
outsl
popf
lock
movsw
xor
cmp
mov
dec
cmp
test
stc
jg
dec
and
jo
mov
xchg
pop
lcall
cwtl
xchg
mov
inc
xor
dec
mov
and
adc
push
inc
push
jno
loope
insl
rorb
adc
fnsave
sbb
sbb
in
xchg
leave
xor
enter
sub
and
and
pop
xchg
loop
jbe
mov
xchg
xchg
nop
cltd
outsb
sub
pop
cmpl
cmp
xor
scas
cmp
mov
mov
pop
fs
icebp
push
insb
and
test
fisubl
jp
popf
jne
daa
pop
add
mov
enter
cwtl
or
xchg
mov
cs
sub
xchg
dec
repnz
jle
mov
mov
pop
imul
mov
dec
out
cmc
out
jecxz
outsb
mov
mov
scas
pop
push
int
int3
jno
sahf
repz
push
aad
loop
xchg
fadd
jg
push
push
je
pop
xchg
xlat
mov
mov
xchg
pop
or
mov
ljmp
xchg
push
ret
push
or
popf
js
addl
out
jle
pop
mov
inc
adc
dec
mov
sub
xchg
adcl
test
or
add
aad
repz
lret
push
sbb
cmp
popa
out
mov
js
pop
sbb
sbb
cmp
pop
and
jns
pop
imul
mov
push
sarl
add
mov
out
cmpsb
xchg
add
enter
lahf
xor
ljmp
lahf
inc
jmp
test
lahf
mov
int3
data16
subl
sarb
push
and
cltd
xor
imul
lahf
test
push
jmp
jbe
hlt
inc
mov
ret
rolb
cli
jne
mov
cmp
lahf
adc
cmp
scas
cmp
pusha
sub
push
jb
in
out
cmp
pop
adc
outsb
cmp
loope
cmc
sbb
imul
add
push
xor
sub
cld
repnz
lcall
pop
popa
jno
sub
and
shll
shlb
ss
mov
scas
imul
adc
scas
push
inc
mov
pop
out
push
pushf
xchg
icebp
push
push
aaa
insb
dec
adc
test
dec
call
mov
add
mov
repz
in
sbb
aaa
les
fs
xchg
nop
mov
or
outsb
cld
loopne
dec
cmc
mov
inc
fldt
pop
cmp
mov
jl
push
aas
ljmp
rol
int
cmp
push
sub
ss
clc
int3
lret
mov
shr
jge
mov
mov
jp
pop
loope
lea
test
dec
add
push
out
push
faddl
push
cld
push
jno
rcr
sub
in
dec
out
fs
mov
mov
xchg
cmp
pushf
inc
lea
fidivs
outsl
mov
repnz
push
inc
leave
test
orl
pop
xor
jg
enter
roll
mov
dec
ret
mov
add
jp
fldenv
pop
jnp
hlt
cmc
cmpsl
iret
aas
add
lret
enter
inc
dec
aaa
lods
push
aad
push
add
sub
inc
outsb
in
mov
ss
movsl
or
pusha
pop
add
mov
out
pop
or
cmc
adcb
out
mov
cld
not
movsl
jae
mov
push
dec
aas
xchg
stos
sbb
pop
xchg
rclb
test
insl
jbe
in
jle
inc
icebp
je
inc
pusha
and
lock
push
enter
jno
pop
inc
push
leave
test
mov
sbb
push
xchg
sbb
pop
adc
sti
stos
or
arpl
adc
mov
xchg
cmpb
and
xchg
mov
lods
call
xchg
ds
dec
jle
jnp
outsb
sub
cmp
push
sahf
mov
das
mov
fldenv
cltd
test
gs
pushf
clc
jae
sub
sub
xchg
mov
daa
xlat
pop
outsl
cmp
push
mov
insb
stos
je
push
aaa
add
lret
and
dec
mov
sti
test
xchg
push
dec
add
in
int
ljmp
ss
sbb
dec
popa
sbb
adc
dec
insb
xor
xchg
pop
xchg
xchg
fdivl
adc
insb
push
inc
pop
push
inc
test
adc
out
adc
push
and
xchg
xor
xchg
jo
pop
push
fstps
cmp
in
adc
outsb
popf
imul
icebp
aam
mov
orl
fldl
mov
cmpsb
cltd
push
cmp
mov
mov
mov
imul
xchg
pop
int
jns
jb
mov
addl
cs
leave
sarl
cltd
ja
shll
jb
adc
push
mov
in
cmpsb
lods
push
es
push
cmp
mov
jmp
vfmadd132pd
mov
lret
test
mov
mov
cmpsl
sub
mov
cmp
aam
popa
mov
ret
and
sbb
mov
inc
loope
cmp
in
mov
movsl
add
inc
jbe
and
test
push
xlat
cmp
roll
mov
pop
pop
push
inc
or
jae
pop
imul
dec
pop
and
and
mov
sahf
bound
add
fdivrl
cmpsl
cmp
adc
lret
adcb
inc
pop
mov
repnz
gs
roll
and
and
push
mov
xchg
insl
xor
jno
mov
clc
inc
inc
js
mov
adc
jecxz
dec
ret
lock
pop
dec
pop
pop
push
mov
mov
bound
inc
mov
andb
xchg
mov
repz
out
mov
cmp
lret
adc
or
mov
mov
call
pop
and
arpl
shrb
inc
sar
and
push
xor
sbb
pusha
fidivl
ljmp
cmp
xchg
sbb
fisubrl
xchg
call
out
scas
andl
jmp
xor
dec
sbb
incl
ds
shll
inc
lcall
add
lret
mov
fcmovnu
or
sub
int
int
mov
mov
dec
imulb
in
add
sub
push
popa
or
aas
sarb
xchg
xchg
xlat
add
fmul
jecxz
jg
ret
cmp
std
xchg
pop
sbb
mov
and
cli
xor
xlat
mov
lret
js,pn
test
jle
imul
insl
mov
lock
imul
arpl
lock
xor
jnp
jns
jo
jl
adc
dec
push
xchg
popf
lock
inc
ret
dec
mov
mov
inc
pop
fbstp
sbb
jns
jmp
jp
clc
xchg
pop
shl
xchg
inc
shll
ja
cmp
out
jnp
lret
jp
mov
outsl
fwait
mov
insl
or
jl
xor
addl
sti
ljmp
mov
and
or
cmp
jae
lods
mov
orl
test
adc
clc
sbb
popa
pushf
in
pop
and
push
aaa
sub
in
aas
jle
push
pop
stos
hlt
push
in
hlt
mov
sti
push
lcall
les
push
xchg
rcrb
adc
and
pop
scas
push
clc
das
into
sbb
inc
cs
rorb
add
jne
icebp
xchg
push
data16
cmp
push
add
mov
mov
add
jno
or
cli
call
nop
ljmp
outsl
inc
or
popf
pop
inc
cmp
scas
xchg
sub
adc
repnz
jg
scas
add
xlat
push
cmp
mov
fidivs
mov
xchg
jl
lcall
push
push
enter
adc
gs
push
xchg
xchg
fsubrs
mov
insb
out
loopne
xchg
shrl
dec
mov
adc
mov
call
in
adc
xor
shll
cld
cmpb
lahf
mov
mov
and
sbb
fists
mov
cmc
mov
sub
mov
insb
push
loop
xor
movsl
or
addb
jg
popa
jae
inc
out
int3
js
jnp
aad
mov
jno
cli
gs
outsb
in
mov
jne
sbb
xchg
cmc
push
mov
shr
add
pusha
adc
push
mov
adc
and
icebp
push
add
in
cmp
add
cmc
or
mov
roll
xchg
cmp
lods
mov
adc
bound
cmc
mov
in
dec
push
inc
jns
cmc
cmp
inc
sbb
scas
stos
leave
cmpb
xor
orl
mov
xchg
ljmp
cmp
das
push
push
xor
xor
dec
sbb
dec
leave
xor
faddp
sahf
mov
test
mov
or
cli
cmp
jae
inc
jle
mov
xchg
out
sub
dec
mov
mov
add
ds
sahf
repz
rcrl
add
hlt
xchg
clc
pop
adc
jns
imul
pop
into
jp
test
inc
or
int
push
popa
fmuls
inc
insl
jle
sbb
les
orb
xor
loopne
out
adc
mov
xchg
sahf
cltd
insb
stc
jne
and
push
arpl
lcall
cwtl
mov
mov
in
fwait
cld
loop
jecxz
fwait
int
lea
scas
cmp
mov
push
xor
mov
cmp
sub
insb
ss
pop
add
jnp
inc
mov
movsl
cmp
dec
imul
sub
cmp
rorl
negl
mov
add
pop
pop
and
cli
insb
xchg
adc
ja
or
adc
shlb
orl
in
pop
and
fldcw
daa
push
xchg
dec
test
push
std
dec
and
adc
shld
into
clc
jns
inc
or
test
push
sub
fisttpl
adc
lds
popa
fadds
out
shlb
ljmp
icebp
xchg
sub
ret
inc
dec
in
lds
sbb
loope
popf
iret
or
cs
inc
jno
mov
not
loope
fisttps
sbb
shlb
push
mov
popf
mov
push
push
lods
and
call
xchg
mov
ret
ss
sub
fwait
inc
adc
sub
push
int3
cmp
mov
jmp
aam
test
cld
cmpsl
sub
sub
leave
mov
push
xchg
mov
pusha
mov
icebp
jb
push
test
mov
cmp
pop
aaa
cwtl
cli
mov
lahf
push
icebp
pusha
outsl
jne
cli
stos
jae
pop
xor
mov
cmp
dec
add
dec
lock
sbb
mov
sub
xchg
clc
cmp
jns
cmp
aas
insl
add
lock
mov
and
push
dec
sub
test
cmp
xchg
inc
push
fmuls
aas
cmp
push
enter
mov
cmpb
push
mov
adc
das
mov
cmp
popl
outsl
ljmp
dec
insb
stos
xchg
mov
mov
ret
cmp
ret
aam
in
adc
dec
test
popf
push
mov
aaa
leave
pop
mov
int3
push
scas
mov
mov
popa
rorl
adc
add
push
jns
fptan
or
cmpsb
sub
dec
xchg
xchg
int
scas
das
pop
add
fidivrl
jg
mov
lret
shlb
mov
sbb
rolb
cli
out
sub
repz
lock
push
rcrl
jbe
aad
cmpsl
push
stos
cmp
fiaddl
ljmp
push
stos
enter
sbb
cli
xchg
sbb
sub
mov
xchg
jae
imul
lds
inc
xor
cmp
test
and
test
inc
xchg
fwait
arpl
mov
or
add
je
mov
out
scas
add
pop
sub
jle
add
and
cmp
loopne
aam
xor
into
mov
movsl
sbb
xlat
fcmovne
rcll
fldcw
push
mov
pop
pop
insb
addb
mov
jecxz
push
in
ds
sub
andl
fsincos
out
cmpsl
jae
js
push
xchg
es
pushf
ljmp
outsl
mov
sbb
jae
dec
mov
mov
mov
scas
hlt
pushl
pop
mov
add
adc
mov
cs
sbbb
cwtl
cli
mov
dec
push
mov
ss
loop
dec
lea
cli
push
jb
iret
push
call
roll
insl
int
popa
cmp
fimuls
mov
and
mov
jmp
jg
sbb
inc
cltd
push
push
cmp
lock
addr16
mov
js
test
cli
fs
mov
movsb
ja
push
push
jcxz
mov
mov
pop
idivl
aas
pop
or
fistl
fcom
js
ja
js
ss
dec
fsts
divb
inc
dec
push
push
inc
and
dec
lock
fwait
ss
fs
loopne
adc
add
jle
cltd
inc
mov
pop
js
fldcw
push
mov
dec
test
call
and
aad
nop
loop
push
pushf
in
xchg
push
rcrl
mov
flds
pop
cs
jmp
mov
mov
sbb
sbb
adc
inc
jmp
fwait
or
lds
sub
test
xor
fsubrs
decb
insb
out
enter
mov
cwtl
loopne
icebp
incb
call
hlt
movsl
sub
mov
sbb
push
push
mov
cltd
mov
adc
add
dec
bound
leave
or
xor
inc
jae
dec
and
imul
test
pop
jnp
dec
dec
xchg
push
mov
mov
dec
addl
xchg
inc
inc
mov
into
imul
jp
pop
fs
mov
ljmp
pop
jno
mov
push
sub
pop
movaps
int
cld
out
add
test
enter
mov
cmp
retw
int3
fcmovb
lcall
mov
les
adc
in
ss
test
sub
loop
push
sti
fwait
push
jae
xorb
lods
fs
dec
xor
js
je
xchg
aam
dec
jno
push
cmp
sahf
sbb
lods
sbb
sub
mov
and
mov
stos
push
mov
hlt
xchg
test
mov
xchg
xor
fwait
xchg
adc
adc
pop
into
dec
idivl
jp
push
cs
leave
out
sub
sbb
and
jae
dec
and
jnp
add
xor
fbld
cld
rolb
mov
lods
sbb
mov
mull
and
or
lock
into
int
mov
cmpsl
mov
rol
mov
push
sarl
push
bound
add
push
cmp
mov
push
sub
pop
adc
xor
aas
stos
subl
or
insb
xchg
sbb
dec
aad
lods
mov
jne
push
jne
inc
nop
jmp
sub
mov
stc
insl
add
or
mov
mov
jns
fisubl
arpl
pop
inc
inc
fisubrl
stos
cmp
rolb
insb
push
das
jle
mov
cwtl
arpl
and
cmp
xchg
ja
pop
mov
jo
add
fbstp
jl
jle
es
mov
negl
ret
pop
xor
push
adc
mov
data16
scas
test
push
dec
int
sti
mov
mov
push
test
add
jg
lods
or
in
jle
or
xchg
pop
hlt
je
sub
cs
loopne
add
sub
sub
mov
call
jg
or
shll
nop
jge
jo
xchg
aam
dec
fistpl
shl
outsb
subl
iret
pop
sbb
mov
in
inc
shr
add
imul
aam
xchg
pop
fidivrs
mov
daa
sbb
mov
ljmp
adc
iret
into
mov
mov
or
jae
enter
add
jle
outsl
or
jl
popa
pop
fistpl
jp
inc
stos
and
popf
std
je
out
xchg
pop
jg
jns
loope
xor
mov
dec
rcrl
jns
add
test
xor
pop
dec
cwtl
mov
insl
sti
addl
je
movsl
in
rol
push
mov
int
mov
adc
iret
add
mov
aad
sbb
jne
sub
stos
ja
icebp
faddl
pushf
add
xor
pop
fstpt
jne
ja
and
jg
xor
dec
iret
movsb
cld
jae
stos
add
pop
xor
ret
mov
test
inc
dec
cmp
movsl
mov
push
mov
and
pop
sub
inc
sub
ret
mov
adc
pop
jae
sub
adc
inc
in
in
into
or
data16
pop
std
cli
test
pop
insb
and
aad
mov
jmp
sub
xchg
jmp
mov
fwait
push
out
outsl
daa
js
loop
and
inc
popf
call
sbb
add
sbbb
or
lea
pop
jl
mov
add
pop
out
and
sub
gs
lret
push
mov
sub
mov
or
dec
push
imul
test
mov
fsubs
stc
mov
cld
jnp
add
mov
arpl
mov
push
mov
jb
lahf
neg
dec
jp
adc
pop
vaddsd
push
fcompl
pop
jbe
movsb
negl
rcll
push
out
testl
pop
cmp
in
and
mov
xchg
jg
or
daa
cwtl
fs
jns
ja
dec
int3
pushf
add
pop
scas
shl
jne
mov
test
stos
movsl
je
mov
das
mov
mov
fxam
bound
mov
test
push
in
frstor
repnz
inc
sar
sub
xchg
and
jae
stos
cmpb
mov
jmp
add
stos
roll
xchg
shl
fists
inc
xor
mov
lock
mov
cli
jle
inc
cmp
movsb
cmpsl
test
jecxz
das
pcmpgtd
repnz
es
sub
incl
sarl
rcll
sbb
mov
push
and
pop
addl
js
and
adc
rcrl
popf
xchg
sbb
ret
jno
push
xlat
cmp
arpl
lcall
fnsave
test
cmpb
dec
lds
in
xlat
sbb
cmp
iret
mov
cwtl
jne
loopne
dec
pop
std
add
lea
inc
mov
ret
xchg
pop
andb
in
shlb
iret
cmp
inc
adc
xor
mov
add
push
test
sbb
sbb
xchg
loop
adc
rcrl
pop
cli
cmp
sub
rclb
dec
push
xchg
xchg
pop
cld
mov
popf
xor
dec
fwait
mov
push
ss
aad
inc
cltd
out
jle
push
adc
mov
mov
imul
jb
jns
xchg
adc
repnz
jle
xorb
pop
push
and
cltd
inc
in
ss
fcmovb
pop
lea
cmp
sub
fcmove
adc
sbb
cmpsl
scas
imul
or
ret
mov
out
fstps
fidivl
repnz
dec
insl
stos
inc
lods
push
mov
aaa
movsb
lcall
jg
out
test
xorb
inc
sub
pop
mov
mov
in
jne
aas
add
cmp
lea
outsb
jbe
lds
es
hlt
mov
aaa
js
sub
and
push
scas
int
ljmp
int3
and
jl
cmova
inc
aaa
mov
js
pushf
sub
je
out
push
out
jnp
mov
mov
dec
lret
inc
pop
and
pop
movb
insl
aam
lods
icebp
mov
mov
add
add
test
mov
fbld
lea
lcall
or
sbb
dec
mov
jge
aad
loop
dec
in
ja
pushf
mov
and
sahf
in
xchg
xchg
inc
out
fdiv
test
jns
jmp
sti
jb
jae
stos
lods
fs
idivl
cmpsb
hlt
add
aad
rorl
loop
cmp
mov
cmp
lcall
xchg
mov
sub
data16
sbb
push
andl
push
aam
ret
push
ucomiss
insl
cmpsb
mov
loope
cmp
scas
out
pop
sbb
into
and
or
dec
cltd
sahf
and
pop
test
mov
inc
sub
scas
xorb
push
mov
jle
cli
mov
inc
imul
les
dec
jmp
cmpsb
jecxz
lds
ljmp
lahf
bound
outsb
gs
inc
pop
pop
popf
dec
test
gs
pop
iret
push
or
xor
mov
aaa
lods
clc
pop
andb
jo
xor
loop
sbb
sti
xor
leave
movsb
inc
int
xchg
pop
repz
popa
add
sbb
sbb
mov
or
cmpsl
mov
xchg
mov
pop
xor
je
mov
cli
xor
lahf
sub
push
in
xchg
adc
aad
xor
mov
mov
inc
loope
mov
fucom
out
push
popa
push
lret
mov
pusha
lea
test
sub
leave
hlt
inc
sbb
inc
mov
dec
jns
out
js
sbb
cmp
push
loopne
xchg
mov
jp
pushf
xor
call
cmpsl
popa
je
jmp
mov
pop
xchg
pop
push
dec
cmp
adc
add
fwait
sbb
repz
inc
jecxz
out
fwait
pop
fiaddl
sbb
pop
sbb
testb
adc
insl
add
fadds
fisttps
movsl
jmp
inc
jae
mov
cmp
mov
leave
dec
inc
push
xchg
mov
into
shrl
fcomip
sbb
sti
pusha
rcl
mov
ja
loop
outsb
into
or
data16
mov
jne
test
test
fidivrl
shlb
dec
or
movsb
mov
mov
mov
inc
pop
sbb
mov
jmp
mov
outsl
sbb
jno
stc
nop
push
pop
enter
inc
cmpsb
xchg
incb
jl
sbb
mov
dec
or
mov
adc
imul
out
subb
push
ja
xchg
cmp
inc
popa
mov
daa
mov
add
test
addb
rolb
in
imul
outsb
sub
mov
fsubs
cmp
push
push
dec
mov
std
xchg
mov
std
xor
fmuls
adc
xchg
xchg
push
xor
jbe
or
push
shll
push
mov
out
push
sub
cmc
push
or
fdivrs
shrb
mov
les
popf
jp
xchg
lds
sub
jo
jbe
pop
into
xor
cmp
cld
popa
testb
mov
ss
call
sbb
jle
test
mov
inc
out
or
out
lret
mov
imul
xchg
cmp
cs
in
ret
das
and
adc
jo
push
jle
sub
lret
mov
inc
leave
mov
lcall
adc
andl
repnz
add
push
push
xchg
xchg
or
adc
loop
cs
mov
les
inc
mov
cld
xchg
daa
inc
xchg
inc
js
outsw
mov
ret
imul
into
cmp
movl
xchg
lods
pushf
pushl
arpl
sbb
jo
fisubs
fdivl
sub
in
sbb
cmpl
xor
or
cld
aaa
jb
repnz
pop
sub
ds
test
es
sarb
fsts
mulb
in
or
push
mov
jbe
movsb
cltd
dec
xchg
inc
push
fld
jnp
stc
je
jno
sub
mov
xchg
jg
jl
mov
inc
mov
or
mov
adc
icebp
jle
int
mov
pop
xchg
into
fndisi(8087
ret
popa
xchg
mov
les
inc
pop
jbe
adc
scas
stc
push
add
sbb
pop
push
inc
clc
test
xchg
aas
and
data16
fmull
add
mov
adc
es
orb
mov
mov
loop
jo
aam
jl
mov
imul
mov
mov
movsb
inc
icebp
outsb
push
or
push
icebp
nop
sub
nop
in
fidivrl
or
or
fcoms
test
cmp
gs
aam
xor
aad
cwtl
fidivl
loop
jmp
hlt
enter
nop
dec
test
cmp
inc
js
loop
les
pop
xchg
je
pop
dec
and
inc
xorb
insb
pop
andl
cmpb
mov
pop
std
cmpsl
leave
fstl
stos
scas
mov
dec
jmp
rol
mov
sbb
xor
test
xchg
sbb
pop
dec
jbe
xor
push
dec
mov
cmpsb
xchg
lods
cmpsb
and
mov
pop
fmuls
jecxz
sub
mov
push
xchg
lret
mov
push
jbe
aam
cwtl
insb
jmp
xchg
popf
out
repnz
inc
adc
or
fisttps
pop
cmpsb
cli
cwtl
dec
add
mov
push
insb
bound
xchg
and
mov
iret
stos
xchg
std
outsb
pushf
arpl
mov
cmpsl
and
repz
xchg
or
jne
inc
rorl
sub
adc
inc
test
sbb
adc
jecxz
rorl
lahf
andb
jge
add
mov
jg
repnz
clc
mov
sub
movsl
pop
sahf
dec
scas
or
jne
and
int
fmulp
push
push
lcall
sarl
add
cmpsb
mov
lods
lock
add
or
cwtl
js,pt
mov
xor
or
mov
clc
test
jns
sarb
lcall
out
dec
and
cmpsl
out
lods
inc
jle
in
in
or
jmp
xchg
push
mov
in
das
mov
subl
mov
out
sbb
lds
imul
mov
dec
dec
sub
mov
push
das
insb
xchg
in
rorb
push
xchg
xchg
sbb
inc
jbe
sub
xor
repz
cmp
sbb
ja
xor
mov
mov
jb
lods
test
pop
fs
negl
mov
sub
jecxz
in
lods
and
in
add
das
push
xchg
leave
mov
push
jne
xor
push
lea
jl
push
mov
pop
test
test
mov
jne
inc
mov
add
and
pushf
push
test
cmp
and
sbb
pop
sbb
push
jp
cmp
lret
clc
sbb
addr16
jb
or
mov
mov
adc
jl
xor
xor
sub
jno
cmp
mov
gs
pop
dec
inc
mov
cmpsl
dec
ja
gs
movsl
sbb
stc
jns
cmp
jecxz
scas
jnp
sub
push
jnp
inc
call
add
add
popf
mov
jns
dec
push
mov
fildll
push
out
into
cwtl
xchg
add
dec
mov
xor
pop
dec
lds
jnp
push
lods
dec
int3
int3
pop
in
push
mov
ds
xchg
or
xchg
or
add
out
sbb
js
aaa
mov
aad
mov
or
bound
xchg
xor
adc
shll
dec
mov
shll
lds
sub
and
mov
xchg
lds
nop
jmp
loop
jl
pop
mov
imul
cmpsb
daa
add
lahf
xor
scas
idivb
gs
fcoml
iret
inc
lds
mov
and
dec
pop
push
jmp
ja
lods
jbe
fs
cld
add
aad
lods
mov
or
cmp
inc
sub
lods
incb
sbb
cs
pop
mov
or
insb
or
subl
xchg
mov
scas
push
and
xchg
nop
ss
pop
or
scas
rorb
xchg
and
je
xchg
push
mov
pop
fsubrl
sub
sbb
cmp
pop
mov
jno
sub
mov
notb
add
shl
add
jne
sub
or
mov
movsb
test
testb
fidivs
repnz
sahf
nop
cmpsl
mov
dec
push
aaa
adc
sbb
lret
pop
mov
pop
shll
push
jae
or
mov
stc
shll
repz
adcb
aas
mov
add
add
push
dec
test
push
loop
fadd
sub
cmp
adc
popa
cmpsb
fcomi
adc
xchg
lea
sub
xchg
mov
pop
jnp
cmp
jb
adc
movsb
inc
dec
imul
sbb
cmp
push
in
mov
pop
ss
cmpsl
lret
sbb
pop
lret
push
pop
xchg
lahf
decb
lods
hlt
shrb
sbb
addr16
cmp
jmp
fstl
push
movsb
jo
in
in
shrb
outsl
push
sbb
push
in
dec
in
and
fdivrl
in
push
add
test
movsb
xchg
out
std
lods
xchg
enter
mov
adc
xchg
mov
mov
mov
push
stos
paddsw
aaa
test
add
movsb
pop
mov
xor
xlat
or
pop
dec
mov
mov
div
dec
mov
xchg
inc
out
or
adc
mov
mov
leave
es
stos
pop
shll
scas
sub
gs
jbe
dec
xor
inc
lret
aaa
sarb
rorl
and
cmpsb
xchg
ficoml
ds
jno
das
mov
movsb
and
mov
stc
aaa
in
push
sbb
push
sbb
fcomip
sbb
aad
or
mov
cwtl
sbb
mov
ja
sub
mov
jge
cltd
int3
xor
pop
rorl
push
js
xor
jl
sbbb
lret
cmc
push
stc
cmp
jl
push
xor
push
push
mov
push
mov
cmp
add
dec
or
fisubrl
std
out
adc
push
fists
jl
cld
rcl
popa
loopne
mov
sub
cmp
pop
scas
jb
insl
push
cmp
int
adc
cltd
mov
mov
jle
xor
popa
movsb
scas
push
adc
or
sbb
mov
ljmp
add
push
jmp
pop
lds
mov
rorl
movsl
mov
das
push
out
imul
insb
test
xchg
int
cld
fdivrl
outsl
cmp
and
bound
push
jecxz
xchg
and
daa
scas
ficoms
jge
lcall
lahf
or
inc
inc
out
cmp
jns
pop
push
jg
add
js
sub
leave
fucomp
mov
jns
cltd
cmp
js
in
ret
movsb
je
addr16
das
cmc
push
adc
cs
mov
adc
mov
add
add
jb
and
ljmp
in
push
sub
hlt
insl
xor
sahf
fs
and
mov
push
out
scas
gs
adc
stc
loop
test
je
or
jae
or
dec
mov
cmp
pop
adc
shl
outsl
daa
and
pop
rep
xor
mov
insb
push
out
leave
movsb
in
xchg
push
ret
jnp
inc
cld
andl
jae
jbe
and
jl
popf
sub
jne
int3
sbb
test
add
push
fmull
xor
movsb
mov
push
cmp
sbb
pop
mov
in
shl
mov
popa
sbb
mov
sbb
mov
or
mov
into
movsb
jmp
std
fwait
popa
cmpb
fcoml
jb
push
gs
dec
add
iret
sbb
mov
mov
js
sub
dec
icebp
jl
adc
faddl
xor
iret
les
clc
ds
or
shrb
push
mov
outsl
xchg
lahf
xchg
cmc
add
pop
imul
out
xlat
add
leave
inc
mov
fldenv
pop
xchg
mov
ljmp
push
int
ds
mov
sub
sub
cmp
adc
adc
insb
ja
sbb
mov
jnp
cmp
jno
and
inc
xor
inc
lods
icebp
cmc
ss
jne
or
aaa
lock
mov
xchg
add
faddl
and
icebp
incb
sub
pop
ljmp
clc
jnp
int3
mov
idivl
into
add
jmp
stos
push
rclb
rcl
dec
push
std
push
pusha
popf
movsb
mov
and
sub
mov
push
dec
add
dec
pop
add
cmpsl
movsl
jo
xor
adc
xchg
mov
aas
inc
cmp
insb
mov
cmpsb
pop
dec
push
imul
popf
jbe
loope
das
sbb
decl
ja
and
mov
cmp
mov
loop
xchg
ljmp
insl
adc
sub
sbb
pop
inc
in
test
fldl
in
jbe
mov
mov
sub
js
cli
add
xchg
imul
sbb
jb
mov
inc
aam
dec
xlat
dec
lock
test
popa
jno
push
out
and
in
shlb
popa
loop
xchg
mov
jge
xchg
popf
imul
and
cmc
inc
pushf
xor
dec
insb
sub
int
mov
aas
jecxz
inc
cmp
lret
add
mov
test
adc
out
sub
jns
mov
das
test
cmp
xchg
sbb
sbb
ljmp
cld
mov
popf
or
xchg
test
mov
daa
inc
jg
jmp
adc
jnp
ds
test
mov
xchg
loopne
stos
fsubr
rorl
movsb
inc
idivl
cmp
leave
inc
test
push
and
xor
mov
or
into
dec
sbb
mov
outsl
ret
push
pop
lret
mov
fnsave
pop
sbb
sub
mov
cmp
cltd
inc
lahf
mov
sahf
jno
push
pusha
movsb
push
adc
movsb
cmp
arpl
addr16
mov
cmpsb
sbb
add
dec
dec
pop
dec
cs
pop
pop
out
dec
out
cld
fisubrs
lea
xor
loope
mov
fwait
jmp
dec
jb
clc
scas
or
and
insl
stc
dec
mov
mov
call
std
out
or
xchg
sbb
mov
bound
jp
mov
and
mov
jmp
dec
mov
inc
adc
repz
js
or
or
dec
xor
xor
pop
mov
mov
rolb
sub
push
test
fnstcw
pop
fwait
ds
cmp
iret
pop
in
adc
push
xchg
push
das
pop
pop
rcrl
xchg
or
in
cs
fwait
out
cmp
jp
jne
pop
fxch
repz
pop
jmp
and
push
sti
ds
dec
adcb
or
pusha
mov
icebp
jp
dec
dec
xchg
scas
jns,pt
inc
add
sbbl
cmp
xor
test
sub
inc
add
mov
clc
jno
push
xor
cwtl
sbb
sbbl
sbb
roll
out
rclb
cld
mov
xor
pushf
andb
fcmovb
mov
mov
adc
sub
in
sub
sbb
pop
and
movsb
fucomip
jbe
int
jecxz
es
add
leave
call
sbb
movsl
in
jge
jo
fstpt
stos
les
pop
mov
repz
fsubr
leave
dec
adc
sub
sahf
dec
dec
pop
sbbb
xor
repnz
jne
or
xchg
xchg
and
jo
mov
mov
clc
xor
xor
in
shrl
movsb
dec
daa
sub
pop
daa
jns
mov
cmp
js
jecxz
jmp
adc
jp
add
out
sti
imul
pop
push
mov
ret
sub
aaa
jb
stos
ss
orb
loope
into
inc
or
mov
jae
cmp
cmc
lret
jae
cmp
sbb
imul
pop
lods
rcll
jp
or
shrb
lods
pop
fisttpll
dec
out
adc
and
sub
int3
dec
adc
push
xor
dec
pop
add
out
jmp
inc
xor
aam
cmc
in
pop
mov
test
mov
xchg
add
lcall
or
test
cmpsb
pop
in
mov
rcl
nop
sub
test
sbb
cmp
xchg
fstpl
cmp
sahf
mov
sub
dec
xchg
xor
cmpl
mov
jl
les
lcall
cmpb
scas
popl
jge
mov
loope
movsb
sahf
push
pop
fnstsw
inc
movsb
mov
inc
pop
sub
jmp
push
cmc
or
lcall
pop
push
sbb
outsb
push
pushf
or
dec
add
dec
mov
daa
add
push
out
pop
enter
gs
lea
testl
dec
loop
fwait
adc
mov
pop
dec
shrl
insb
test
push
pop
cmp
mov
push
add
cwtl
mov
orb
dec
mov
inc
stc
pop
popf
xorl
mov
out
lock
or
push
push
inc
and
aas
hlt
xor
jne
adc
jnp
sti
push
xlat
xchg
mov
adc
push
into
or
add
dec
mov
in
bound
ja
adc
movntq
or
aas
test
lahf
ficompl
outsl
mov
add
mov
dec
xchg
push
adc
loopne
les
or
mov
stos
test
shrb
or
mov
push
std
rcrb
pop
dec
xchg
in
jecxz
loope
daa
jl,pn
in
sub
or
stos
and
lds
mov
call
inc
test
dec
add
cwtl
xor
fidivl
inc
aaa
jp
ss
test
push
pop
mov
xchg
leave
adc
dec
push
inc
stos
sti
push
loope
sahf
flds
fnstsw
or
inc
insl
adc
cmp
push
ss
adc
xor
jb
insl
mov
aaa
sub
mov
or
jbe
and
lods
aad
dec
ret
out
clc
std
lods
outsb
jnp
mov
xor
xchg
xchg
insl
ret
cmp
imull
adc
xchg
outsl
rcrl
dec
cmp
decl
or
mov
in
inc
cmpl
data16
xor
insb
into
insl
inc
jge
jnp
ret
jbe
aam
xor
xchg
adc
and
nop
sbb
mov
or
jno
in
scas
std
out
fsub
mov
jnp
or
leave
xchg
rcll
mov
mov
imul
aas
scas
in
ds
jp
inc
push
imul
pop
mov
cmpsb
insl
cmp
and
addr16
jbe
addr16
mov
outsb
data16
push
test
fsubrp
fwait
test
fsubrs
data16
stc
aad
dec
jb
xor
push
idivl
stos
inc
adc
mov
rcll
ret
imul
and
xchg
aaa
add
inc
mov
jbe
outsb
push
mov
push
push
adc
mov
push
test
mov
inc
xchg
pop
mov
mov
xchg
inc
and
test
aam
test
add
iret
dec
mov
pop
fldl
cmp
and
into
cmp
movsb
inc
fisubrs
aas
int3
std
clc
ficomps
mul
xor
repnz
pop
addb
mov
mov
cli
adc
fldt
call
shlb
dec
cmp
inc
mov
shl
mov
cwtl
ret
sub
dec
bound
js
pusha
push
into
pusha
xchg
cli
xor
ret
xor
lock
div
shrb
sbb
jnp
icebp
mov
dec
nop
cld
mov
test
push
mov
xlat
mov
loope
jne
fwait
mov
add
sub
das
cmc
outsl
cmp
sbb
rorl
push
cmc
mov
jb
les
loopne
gs
pop
data16
dec
test
addr16
cli
in
imul
shrb
call
js
xorl
pop
insl
mov
dec
push
mov
and
push
fmulp
push
fsubl
mov
jge
decb
xor
mov
cmp
dec
mov
pop
cmp
xchg
jge
je
or
sbb
mov
inc
inc
ret
sahf
mov
mov
lcall
pusha
jbe
push
jmp
andl
sar
test
pop
adc
xchg
inc
test
dec
pop
jmp
jns
dec
sub
push
jle
or
pop
fadd
insl
adc
cmp
std
cmp
mov
enter
mov
insl
adc
hlt
imul
aam
sbb
mov
adc
cmp
xorl
shl
icebp
out
dec
mov
cmpsl
inc
inc
jns
sbb
gs
push
add
sbb
add
sub
std
sub
sbb
jo
dec
push
lock
mov
sbbl
mov
out
mov
gs
dec
mov
pop
xor
jb
sub
sub
cmpsb
mov
pop
adc
subl
pop
movsb
sub
jo
fcoms
movsl
mov
aad
daa
inc
push
lods
rcr
arpl
dec
ljmp
js
cmp
aaa
xor
repnz
add
sub
pop
xor
mov
mov
out
je
and
rol
and
sbb
xchg
aad
popa
pop
cmp
iret
test
cli
add
xchg
pop
adc
cmp
jno
mov
pop
aad
xchg
insl
sub
mov
push
jp
dec
movsb
lahf
sti
scas
in
dec
xor
add
fistl
movsl
lcall
xchg
ret
and
leave
pop
add
mov
pusha
and
xchg
dec
push
push
test
adc
mov
cmp
in
mov
adc
jmp
mov
mov
adc
or
dec
xchg
test
push
insl
mov
std
scas
mov
iret
test
popf
das
jmp
mov
mov
and
fstps
mov
pop
or
jle
sbb
xor
ret
fistps
adc
out
push
adc
adc
jno
mov
or
cli
movsb
gs
fisttps
data16
inc
subb
mov
xchg
loopne
add
push
mov
sub
xchg
stc
aam
add
mov
scas
xor
pop
mov
mov
add
mov
inc
inc
jecxz
aam
das
test
push
mov
or
jo
pop
pop
adc
mov
scas
inc
orb
fcoms
mov
outsl
lock
pop
pop
fldcw
imul
and
sub
inc
or
sbbl
sbb
xchg
and
push
sbb
popf
and
mov
jl
into
popa
test
aad
push
lret
bound
pop
dec
rorl
mov
into
out
fistl
mov
push
pop
xchg
inc
mov
cmp
dec
int3
jae
add
inc
sbb
and
mov
cmp
jae
jge
xchg
adc
movsb
xchg
shl
out
test
cmp
xchg
cmp
dec
pop
push
arpl
sbb
inc
xor
stos
sub
dec
add
stos
inc
rclb
pusha
push
bound
shl
sbb
fstl
or
xor
sbb
mov
jno
push
int
pop
pushf
xchg
pop
add
xor
pop
fdivrl
fadd
in
push
stos
cld
xchg
mov
stos
cmp
xor
test
cmp
sbb
aam
pushf
je
mov
out
rcrb
pop
mov
jle
push
imul
mov
jae
inc
mov
pop
sbb
mov
cwtl
jns
cmp
popw
inc
bound
mov
mov
repz
push
xchg
int
outsb
aam
or
push
outsl
scas
enter
fucomip
xchg
scas
cwtl
jne
sub
mov
or
mov
jne
inc
inc
push
pop
or
shlb
mov
jae
push
punpckhdq
adc
pop
mov
enter
gs
pop
push
cmp
scas
call
pop
dec
sbb
add
lret
aad
mov
jecxz
mov
mov
sarb
dec
daa
out
mov
push
sbb
movsl
xchg
mov
aas
mov
movsb
mov
or
adc
aam
data16
testb
inc
outsl
insb
in
mov
js
mov
push
inc
jp
ds
repnz
adc
cmpsb
xchg
mov
std
fstpt
pop
push
roll
arpl
pop
ffreep
mov
pop
xchg
lahf
mov
sbb
push
mov
ret
and
inc
test
mov
jne
inc
movsl
mov
sbb
mov
out
rcrl
xchg
cmpl
cmc
aad
insl
jae
mov
popf
testb
rcll
push
imul
shll
add
mov
fwait
mov
cmp
imul
add
icebp
pop
sub
jno
or
mov
lret
or
push
pop
cmpsl
loop,pt
fsub
push
pusha
xchg
jmp
adc
test
test
or
or
aam
jnp
and
enter
push
insl
jae
sbb
arpl
lea
inc
mov
or
into
cwtl
xchg
bound
out
cs
mov
out
imul
and
add
nop
xbegin
fistl
loope
and
cmp
mov
adc
pop
mov
inc
push
scas
into
std
xor
xor
ret
xchg
xor
jo
pushf
mov
and
inc
insl
imul
lods
cmp
test
sub
mov
cs
data16
mov
fildl
aam
dec
imul
jno
adc
stos
jp
out
icebp
pop
cmpsl
pop
dec
xor
inc
test
push
jmp
imul
leave
jne
push
cmp
sub
scas
and
sub
mov
xor
dec
clc
dec
rolb
addr16
xchg
cmp
lahf
mov
inc
into
mov
push
out
ret
adc
or
cld
or
cwtl
lahf
inc
mov
sbb
out
sbb
push
aam
pusha
aad
xor
sub
xlat
adc
sbb
lahf
mov
shrl
sub
iret
nop
mov
pop
in
inc
mov
mov
in
insb
xor
jbe
dec
cli
add
fisubs
and
mov
js
out
pop
andl
mov
mov
cmp
imulb
into
cmp
push
shl
sti
mov
pop
jle
lret
sub
push
add
dec
jo
pandn
aad
jle
inc
sub
ljmp
outsb
lcall
decb
test
int
sti
xchg
cmpsl
test
push
out
ljmp
fdivr
cltd
cmp
nop
int
inc
mov
popf
les
bswap
sub
lods
push
fcomps
sub
outsb
mov
cmp
jmp
shll
mov
outsl
fisttpll
call
jae
and
scas
mov
mov
and
pop
in
loopne
insl
mov
in
pop
push
outsb
push
mov
out
and
fdivrp
cli
fldpi
sbb
add
sbb
jmp
pop
jmp
sbb
adc
je
fnstenv
dec
sub
cwtl
push
and
cmc
hlt
das
jae
andl
xor
decb
scas
and
jp
sbbb
push
mov
jg
mov
or
mov
in
cmpsl
cmpsl
mov
xchg
icebp
inc
or
add
cld
dec
sub
shrb
push
into
subl
sbb
pop
in
insb
jbe
push
scas
jl
sub
jns
lock
add
xor
mov
xor
mov
out
and
jnp
clc
mov
ret
add
popf
mov
inc
mov
inc
pusha
inc
mov
pop
cmpsb
pop
sahf
cmp
sbb
mov
push
addr16
fiaddl
xor
sub
jge
sbb
adc
shll
push
jg
stc
xor
int3
dec
adc
add
mov
mov
cmp
imul
jns
sbb
dec
mov
addr16
push
inc
pop
xlat
pop
ffreep
test
xor
xor
cmpsb
mov
push
or
lods
or
add
or
mov
dec
dec
dec
xchg
and
dec
push
or
test
sbb
xchg
jp
xchg
add
fists
ret
and
into
les
inc
inc
sbb
into
inc
cli
test
jg
mov
loop
in
cmp
mov
insl
scas
xchg
ret
push
xor
push
xchg
jg
jb
xchg
test
mov
lock
xchg
and
mov
pop
xchg
adcl
dec
or
fwait
sarb
add
ja
stos
testl
imul
xchg
and
sub
pop
xchg
jns
cmp
pusha
int3
out
adc
sarl
push
add
sub
xor
pop
mov
mov
aaa
imul
jne
pop
add
xchg
push
sbb
nop
push
lret
rcl
xchg
enter
movsb
push
mov
addl
inc
jbe
add
fs
cmp
pushl
movsl
or
inc
sarl
dec
imul
punpcklwd
movsb
add
jnp
pop
outsb
xlat
mov
add
xchg
push
sub
adc
dec
mov
test
push
popa
in
xchg
lea
push
aas
or
push
cmpsl
dec
rorl
pop
ja
aas
inc
sub
jmp
pop
mov
imul
fldenv
into
cld
xor
repnz
dec
sahf
sub
adc
out
cmp
and
pop
add
fs
jmp
data16
addr16
lock
add
sbb
pushw
add
loop
out
sbb
in
push
and
push
clc
movsb
lds
imul
pusha
fadds
rorb
icebp
repnz
mov
and
ds
out
rorl
lock
cmp
lret
mov
enter
popa
int3
cvtdq2ps
mov
mov
aaa
add
sarl
mov
ja
movups
cmp
sbb
push
scas
push
out
mov
mov
lea
sbb
rolb
imul
push
clc
push
jg
jb
out
jnp
repnz
jge
or
cwtl
cmp
int3
inc
mov
dec
in
shlb
jmp
mov
out
cmpsl
push
xor
lds
inc
push
inc
rcl
mov
rorb
out
insb
mov
ljmp
dec
and
fsqrt
loopne
pop
ds
inc
cltd
inc
scas
sub
lods
fistps
dec
mov
and
dec
stc
ds
punpcklwd
pusha
mov
add
add
add
stos
and
adc
push
or
dec
dec
sbb
push
push
fildll
dec
fwait
or
out
push
or
jmp
test
in
inc
lock
dec
mov
cmpsl
test
popa
out
movsl
adc
aaa
in
test
jmp
jbe
int3
jne
fldt
das
mov
cmc
and
xchg
movsl
mov
sub
sbb
xor
add
mov
pusha
and
daa
mov
inc
sahf
scas
mov
outsl
dec
bnd
das
in
popa
sub
test
bound
sti
sub
stos
jecxz
inc
jnp
dec
mov
ds
jp
adc
nop
push
dec
sbb
push
negl
leave
push
daa
ret
fidivrl
and
movsl
addl
and
rcrb
shrl
clc
pusha
mov
inc
and
pop
dec
jp
push
fstpl
adc
mov
ret
ret
xchg
push
xadd
or
mov
jno
hlt
xor
rcrb
movsb
push
and
fsub
stos
pop
push
push
jb
jecxz
popa
loopne
pop
jl
mov
mov
sarl
or
je
inc
pushf
insb
mov
push
shrl
sub
movsl
out
sub
mov
pop
cltd
ja
or
repz
fnstsw
jl
enter
pusha
js
inc
imul
jle
mov
xor
in
or
fcomps
add
jne
mov
loopne
dec
jnp
sub
dec
movsb
push
rolb
jbe
mov
and
cmp
add
xor
or
push
loop
pop
in
push
jl
pop
xlat
jbe
fcoms
inc
daa
push
jge
pushf
les
sarl
mov
mov
scas
cmpsb
test
ret
jg
mov
mov
inc
sub
lret
dec
jbe
in
or
repnz
jnp
repz
insb
mov
jecxz
xor
movsb
pop
in
sti
lds
pop
cmpsl
movsb
mov
mov
jecxz
outsl
mov
xlat
add
mov
mov
dec
shrb
inc
leave
cmp
adc
out
aad
push
into
sub
jg
insb
das
inc
sbb
shll
pop
aam
pop
frstor
ds
inc
sbb
add
add
adc
jp
jecxz
sbb
and
add
fists
ret
mov
out
dec
sub
inc
test
ds
scas
cmp
push
sarl
ljmp
sub
cld
arpl
int
lcall
lahf
sub
xor
sti
mov
fildl
fisubrl
cmp
jns
adc
and
cltd
test
dec
or
in
rorb
rorl
es
jae
popf
xchg
loop
out
mov
push
mov
xor
movsl
lahf
fucom
out
and
cmpsl
dec
mov
xchg
insb
sbb
or
dec
outsl
push
or
xor
mov
push
or
xor
pop
pop
fadd
cmp
shrb
add
lret
sub
leave
mov
mov
stos
pusha
mov
pop
ret
dec
and
lahf
jnp
ficoms
filds
lret
arpl
mov
ja
mov
dec
popa
iret
or
out
inc
adc
push
push
inc
inc
push
push
adc
xchg
mov
cmp
fwait
push
adc
cwtl
xor
inc
ja
xchg
push
pop
cmc
jno
sbb
mov
jle
mov
add
and
imul
out
icebp
ja
sahf
int3
inc
push
movsl
xchg
mov
cmp
mov
xor
cmpsl
aam
dec
xchg
mov
and
adc
fsts
pop
pop
sub
pop
inc
cmp
pop
insl
call
ret
jns
sub
cmpsl
out
inc
pop
clc
ljmp
or
lcall
push
addl
mov
in
das
scas
mov
in
and
outsb
nop
mov
in
xchg
mov
mov
xchg
stos
lret
cli
add
xor
mov
pop
mov
cmp
movsl
push
jg
lods
loope
adc
sbb
scas
pop
jg
xlat
lods
mov
xlat
rcl
out
shrb
jl
mov
test
subl
cmpsb
cmp
out
inc
adc
loope
lcall
cmpl
adc
aad
sarl
call
into
lret
cmp
daa
std
xchg
push
roll
adc
mov
sbb
test
mov
sub
mov
mov
ljmp
popf
incb
jb
add
add
mov
or
inc
pop
jmp
cmp
or
and
mov
mov
jo
xor
roll
hlt
mov
in
xor
arpl
jne
xor
or
push
jl
jg
cmp
lret
jl
out
add
es
add
push
popf
std
mov
testb
and
sub
xor
push
mov
inc
push
push
push
xchg
hlt
inc
pushf
jge
inc
outsl
shll
adc
in
cmp
add
daa
pop
aam
mov
cmp
mov
mov
call
push
loope
xlat
sti
icebp
xchg
lret
js
stc
mov
pop
cmp
dec
mov
jl
pusha
pop
lret
test
or
lret
sbb
cmpsb
arpl
mov
testb
int3
cltd
stc
mov
mov
adc
lea
sbb
cmpsl
adc
inc
fsubr
mov
push
push
bndstx
fisubrl
stos
add
inc
ja
mov
push
out
idivl
xor
sub
adc
mov
ss
mov
mov
mov
jg
sti
push
jg
dec
push
cwtl
sbb
fldt
pop
cmp
pop
in
sbb
fcoms
lret
ds
mov
xchg
loope
inc
mov
mov
or
cmp
insl
pop
and
pop
add
push
das
mov
cmp
cli
push
aad
subb
push
pop
testl
mov
sub
push
cmpb
jmp
fiadds
jg
mov
cwtl
pop
xchg
pop
push
jmp
in
in
sub
jne
inc
and
add
and
aam
movsl
xor
int3
adc
mov
ss
scas
mov
cld
adc
push
sub
cmp
add
mov
in
or
dec
add
push
xor
lret
jecxz
imul
push
aam
jb
lods
sub
mov
fwait
loopne
inc
xchg
dec
sti
dec
pusha
mov
arpl
push
aaa
popa
fmull
shl
cmp
test
int
fisttpl
mov
and
in
fwait
jecxz
pop
push
lods
lea
and
jg
pop
movsb
outsl
hlt
fidivrs
mov
addb
inc
add
sbb
mov
mov
mov
int3
loope
je
jne
cli
pop
shrb
jno
mov
cmpsb
dec
pop
jae
pop
daa
in
sarl
dec
inc
xchg
pop
xor
call
test
mov
adc
mov
andl
push
fiadds
ficoml
pop
pop
jbe
and
sub
xor
inc
lods
aad
mov
push
shl
loope
hlt
lret
pop
sub
sbb
push
ffreep
inc
pop
push
add
stos
dec
mov
mov
xchg
cmp
mov
mov
dec
xor
cmpsb
insb
lcall
int
test
int
int
or
fadds
lods
popa
pop
xor
fwait
data16
and
iret
int
jo
and
inc
xorb
push
loope
and
inc
rcrl
mov
test
or
in
into
enter
test
xchg
mov
pop
pop
cmp
add
std
sti
stc
mov
lods
addl
vpcmpgtb
xchg
das
subb
fldt
movsb
sti
mov
xor
pop
inc
pop
mov
fwait
test
cmp
in
mov
sbb
sbb
or
fwait
stos
pop
mov
push
inc
enter
push
pop
ret
js
dec
mov
mov
mov
arpl
jle
xor
popf
fwait
lahf
cli
cltd
mov
mov
pop
mov
mov
push
sbb
stos
pop
xchg
mov
push
xchg
adc
fcoml
cld
repnz
cmp
arpl
sbb
push
inc
cmp
scas
push
repnz
test
cmc
in
sub
add
inc
mov
push
xchg
mov
shlb
lcall
js
ds
das
cs
andb
push
fiaddl
pop
cwtl
in
jecxz
inc
loope
pop
push
jae
call
out
lahf
mov
subb
outsb
jne
jge
and
jecxz
les
xchg
dec
mov
int3
dec
jge
fmull
sub
dec
ds
cli
ljmp
jg
mov
xor
mov
xlat
fisttpl
mov
mov
sbb
adc
in
jnp
jle
add
out
add
shll
data16
mov
popa
dec
pop
out
sub
mov
mov
dec
and
push
cmpsl
outsb
in
hlt
aaa
xlat
jae
mov
inc
iret
push
jle
call
xchg
fistl
arpl
stos
jl
mov
sarb
sahf
rol
test
punpcklwd
stc
inc
mov
into
xchg
mov
es
add
test
mov
mov
add
iret
cmp
cli
lar
pop
sahf
sbb
cmpsb
das
mov
rolb
insl
imul
add
out
movsl
dec
sub
pop
sub
int3
mov
sarl
push
andl
fsqrt
sub
push
mov
cmpsb
jle,pn
xchg
sbb
jecxz
sub
pop
pop
jne
rcrb
jmp
mov
rorb
lret
shll
xchg
les
loope
sbb
xor
mov
repz
sub
xchg
cs
jno
mov
lret
xchg
stc
aaa
xlat
mov
lret
lahf
mov
aam
leave
pop
xchg
mov
out
sub
add
xor
scas
or
gs
ret
adc
jo
les
lret
or
add
out
int3
test
jmp
out
mov
push
mov
jb
xchg
adc
out
xchg
jbe
and
es
xor
scas
lods
xchg
sbb
pop
inc
add
in
std
stos
icebp
adc
add
shll
or
and
cmp
cmpsl
mov
scas
das
popa
cwtl
and
pop
lret
outsl
mov
mov
outsl
mov
loope
cmpsl
jae
fucomi
push
stos
pusha
out
mov
rcrb
sbb
jl
scas
ret
es
pop
mov
rclb
bound
mov
mov
pop
xchg
xor
push
dec
pop
ja
mov
pop
je
neg
jo
lods
push
mov
clc
mov
pusha
roll
push
hlt
es
inc
pushf
loopne
jo
sbb
or
xchg
and
imul
cmp
sub
adc
and
fs
mov
sub
push
push
or
insl
popf
adc
push
push
xchg
outsb
mov
sarb
sub
and
in
pop
sbb
cs
orb
pop
shlb
or
push
cltd
mov
pop
aaa
das
and
pop
xchg
xchg
js
pop
or
add
sub
mov
test
push
fmull
call
dec
pusha
inc
pop
push
popa
lea
and
mov
rcr
or
in
addb
dec
or
aad
inc
lea
es
or
jno
push
push
mov
cmp
push
sti
lret
pop
arpl
jecxz
or
bound
stc
xor
cli
out
mov
push
push
push
loop
cli
add
ret
and
loopne
aad
xchg
outsb
inc
and
fmul
jecxz
sub
call
xchg
jge
jmp
cmpsb
mov
xor
mov
ret
je
pop
insb
jo
push
push
and
ret
cltd
add
push
push
inc
mov
leave
push
ja
lcall
push
rcrl
js
adc
aas
lods
hlt
mov
stos
in
roll
pop
insl
stc
add
dec
lahf
jb
aaa
inc
mov
addr16
cmp
adc
icebp
jno
xor
adc
mov
fcoms
and
scas
lods
jmp
lds
mov
mov
sub
mov
push
ret
push
jmp
push
pop
jge
mov
movsb
add
inc
add
dec
scas
inc
pusha
fiaddl
orb
js
jg
xchg
rcll
test
aad
or
std
xor
jp
push
xchg
mov
sbb
mov
mov
lods
hlt
les
leave
cmp
aam
ss
mov
mov
jo
xorb
pop
xchg
cmp
dec
dec
lret
faddl
and
pop
or
sbb
sub
sub
xchg
push
jmp
dec
mov
aaa
jns
sub
push
xchg
ja
pop
cmp
scas
mov
jo
outsl
aaa
cld
insb
pop
negb
jl
sbbl
add
pop
rcrl
jle
into
fnstsw
je
out
pusha
mov
xchg
insl
cld
dec
aad
shl
jg
jno
jae
call
mov
andl
jnp
push
movb
enter
pushf
frstor
xchg
dec
xchg
iret
out
or
test
ja
xor
mov
adc
rcll
jmp
sbb
inc
and
rcr
add
subl
mov
jg
and
xchg
mov
adc
rolb
mov
xchg
call
in
gs
ja
add
xchg
pop
or
test
arpl
loopne
dec
lret
and
scas
push
jge
push
div
dec
negb
mov
loopne
sub
ja
stos
pusha
push
mov
gs
dec
lods
mov
lcall
push
adc
rcl
sub
shrb
dec
into
repz
inc
out
adc
jg
jg
test
mov
or
pop
aaa
loope
xchg
data16
mov
push
mov
scas
push
cmp
pop
adc
popa
xchg
xchg
adc
jg
cmp
jp
sub
popa
insb
mov
fwait
mov
dec
jne
movsb
notb
xchg
xor
xor
xchg
loop
out
andl
sbb
add
dec
push
mov
mov
sbb
adc
mov
mov
shr
push
fcmovnb
lret
popa
lea
das
outsl
orb
dec
ljmp
xchg
pmullw
jmp
aas
add
or
lds
jmp
mov
icebp
xor
nop
rcrb
mov
inc
in
mov
add
sbb
cld
mov
xlat
mov
xor
xor
pusha
add
into
and
mov
xchg
adc
repnz
inc
jmp
push
mov
repz
push
cwtl
int
sahf
movsb
sbbl
jp
mov
test
inc
call
add
lahf
lret
dec
les
and
inc
sbb
push
or
stos
mov
shr
inc
nop
sti
stc
outsb
pop
or
add
ret
ror
stos
out
sbb
and
push
outsl
jmp
sub
cmp
ret
cmpsl
and
imul
xor
push
arpl
loopne
jae
repz
into
jp
jecxz
pop
out
pop
dec
push
jg
out
cmp
jne
push
gs
or
fwait
pop
mov
xchg
push
mov
jl
pop
xchg
clc
jecxz
data16
add
dec
sbb
aas
mov
lods
decb
push
adc
stos
enterw
mov
xchg
pop
daa
mov
stos
push
stc
add
test
dec
or
leave
push
std
xor
xor
or
iret
cmpsb
jns
inc
mov
loop
mov
sarb
mov
ffreep
sub
stc
ffree
imul
xor
outsb
shl
xchg
mov
mov
rorb
push
leave
pop
lret
repz
and
dec
in
test
jl
movsb
dec
icebp
jle
int
jnp
mov
pop
push
shll
cmp
push
sbb
and
pop
cmpsb
inc
mov
rcl
sub
jne
es
test
pop
pop
adc
icebp
bound
neg
leave
call
mov
or
iret
sbb
mov
cmp
mov
mov
imul
in
stos
xor
mov
loop
or
fsub
and
jae
mov
std
jg
mov
push
mov
fldcw
repz
mov
adc
enter
pop
xor
sub
shlb
push
jo
in
movsb
sub
xchg
pop
xor
push
outsl
mov
scas
negl
stos
dec
mov
add
xor
pusha
cli
lods
push
cmp
out
and
fisttpl
pop
fiaddl
adc
xchg
arpl
xor
outsl
in
push
push
jbe
pop
inc
pop
cmp
jecxz
inc
stos
dec
cmp
cli
sub
insb
stc
clc
add
stos
add
cmp
mov
xor
jnp
lahf
xchg
gs
test
ret
adc
mov
leave
pusha
cmp
insl
sahf
inc
xchg
add
inc
testl
push
bound
mov
mov
dec
push
aad
jne
es
inc
add
in
stos
int3
pop
push
push
sub
bnd
loopne
pop
mov
jl
aas
cmp
jo
mov
pop
jo
mov
or
sbb
cmpl
arpl
subl
test
add
call
lods
mov
imul
dec
mov
cmp
lahf
inc
popa
stos
test
fs
sbb
pushf
mov
in
sub
cmp
lahf
jl
iret
sbb
rcll
out
add
bound
xchg
je
sbb
mov
add
or
ds
push
shlb
or
jp
mov
or
inc
dec
loopne
js
jg
jl
xlat
xor
mov
push
shrb
sahf
daa
xchg
mov
pusha
push
mov
sbb
xchg
and
sahf
pushf
sbb
stos
movsb
pusha
arpl
sub
inc
dec
and
sub
ss
dec
scas
repnz
fiadds
adc
cld
fisubrs
std
lea
repz
mov
loope
jge
xchg
mov
repz
sbb
inc
les
pop
ljmp
dec
sbb
adc
lahf
out
lods
inc
mov
cmpsl
add
test
fisttps
mov
pop
stc
cmp
mov
iret
js
pop
lea
lcall
cmc
mov
pop
sbb
jle
sbbb
in
or
shlb
imul
cmp
adc
mov
mov
mov
jae
pop
pushf
and
js
adc
pop
mov
stos
and
adc
mov
cmc
sbbb
roll
jns
adc
pop
sarl
push
out
add
add
into
insl
cmc
aas
js
xor
mov
aad
pop
mov
push
adc
mov
out
test
insl
pop
int3
jmp
test
out
add
mov
dec
cld
xchg
aad
nop
in
loopne
sbbb
test
movsb
jecxz
xor
fisttpl
loop
and
call
sbb
mov
mov
sarl
add
xor
lods
aam
mov
enter
add
popf
int
cmp
cmpsl
int
dec
adc
pop
jmp
test
mov
shrl
xor
inc
pusha
setnp
mov
insb
test
adc
loop
cmp
repz
std
outsb
jge
jb
adc
pop
hlt
jmp
push
sbb
sub
adc
clc
jb
icebp
insb
push
fwait
push
jae
fsubs
mov
sub
inc
xor
hlt
mov
mov
data16
dec
or
test
pop
in
dec
mov
xchg
push
xor
xchg
mov
and
add
imul
fistps
nop
pop
fisttpl
fcompp
repz
lahf
inc
lcall
aad
je
aaa
fstl
je
fsubr
pop
adcl
jnp
and
ret
xchg
data16
cmpsb
add
repz
jp
pushf
mov
xor
push
mov
cli
sub
addr16
push
mov
adc
pop
lds
nop
imul
push
push
out
jb
inc
adc
cwtl
leave
sub
pop
dec
ljmp
and
push
and
inc
gs
dec
mov
sub
jns
dec
mov
pop
insl
mov
push
insl
sub
xchg
iret
cmpsl
mov
pop
push
bound
cmp
mov
inc
or
std
shlb
loopne
es
inc
sbb
push
jb
dec
leave
out
pop
jle
outsl
jge
iret
rclb
cmp
cld
insb
ljmp
push
in
nop
jp
insb
mov
and
pusha
int
shll
push
enter
pop
add
or
jae
pushf
lcall
dec
into
and
add
and
in
hlt
pop
push
and
cld
jo
ja
lret
int3
xor
cwtl
enter
xor
dec
jno
addr16
pop
shll
lcall
jmp
xchg
cmp
orb
pop
push
repnz
jecxz
aad
imul
mov
mov
dec
mov
cmp
mov
clc
dec
icebp
ss
int3
sbb
ss
sub
pop
push
jno
stos
cmp
pop
pop
pop
data16
orb
pop
xor
push
jb
inc
pop
imul
es
popf
dec
outsl
mov
and
and
pop
aas
xor
pop
dec
mov
cmp
mov
xchg
jmp
jns
inc
mov
fs
pop
out
sar
cmp
add
sahf
jl
xor
test
jge
jg
mov
stos
data16
cli
stos
mov
push
push
adc
sub
dec
jl
les
fiaddl
ficoml
in
into
aad
cmp
jl
jno
test
in
xor
lds
sbb
xor
add
mov
fst
cmc
push
dec
xchg
loope
push
jle
je
mov
mov
xchg
cld
roll
xchg
mov
lcall
ss
xchg
sbb
testb
movsl
inc
mov
iret
mov
mov
iret
das
insl
xchg
xlat
negb
fs
inc
jbe
add
or
cld
dec
mov
and
outsb
andb
dec
popa
dec
out
xchg
aaa
inc
or
mov
mov
test
pushf
int
pushf
mov
and
add
insb
popa
in
cli
xor
pop
xchg
jmp
imul
lea
cmp
xor
add
inc
aaa
mov
or
in
es
icebp
mov
adc
roll
movsb
inc
sbb
in
ds
nop
ret
rcll
xchg
daa
push
int3
jb
dec
and
repz
dec
arpl
cmp
int
adc
data16
push
js
cli
and
adcb
or
mov
pop
clc
into
in
adc
leave
nop
sub
fisubrs
decl
mov
dec
adc
pop
aam
sarl
enter
mov
stos
outsl
push
xorb
add
imul
jmp
mov
mov
lea
or
out
pslld
mov
mov
mov
adc
dec
jne
aad
repnz
push
out
pop
test
fwait
jnp
fs
sub
push
adc
jmp
sti
inc
and
loopne
push
frstor
lods
jmp
adc
cmp
cmp
push
rcrl
leave
cmp
or
pushf
mov
je
xchg
out
dec
je
jle
cld
gs
loopne
jg
rorl
lods
iret
test
rol
push
mov
sbb
push
dec
jno
sti
pusha
nop
rcrl
sub
dec
lcall
shr
jno
jmp
adc
adc
jge
mov
dec
subl
dec
cmp
fmuls
push
push
rcrb
mov
std
fstpl
fcoms
jb
cmpsb
out
mov
stos
jno
pop
xor
out
mov
std
mov
sbbb
jb
pushf
andb
arpl
fnstcw
adc
dec
adcl
sbb
sbb
notb
mov
adc
cmpsb
daa
popa
repz
lahf
icebp
dec
mov
pop
mov
dec
sbb
test
fisubrs
fwait
divl
popf
lock
call
ret
sahf
inc
xor
add
add
and
movsb
sub
outsb
bnd
lds
adc
shll
xlat
repnz
xchg
bnd
mov
dec
cmp
cmpsl
scas
pop
or
mov
xchg
jge
fiadds
mov
notl
mov
loope
int
ret
outsb
pop
dec
jp
std
imul
out
loopne
aad
xor
repnz
ds
out
xor
loop
orb
les
mov
push
push
mov
cmp
out
mov
and
mov
aad
xlat
cmpsl
jb
cmp
icebp
mov
cmp
dec
popa
xchg
fucomi
and
cs
or
cs
test
jbe
int
mov
ja
scas
arpl
xlat
repnz
cli
scas
out
enter
cmp
xchg
das
fildll
gs
xor
mov
adc
fwait
sub
data16
xchg
mov
xlat
test
aam
cs
jl
lea
sub
push
addr16
xchg
outsb
sbb
test
dec
loopne
insb
xchg
mov
ror
icebp
mov
adc
and
fisubrl
in
aad
dec
popa
mov
adc
mov
repz
ljmp
dec
jbe
std
shrb
and
inc
mov
shl
push
testl
push
cmpsb
call
jne
inc
mov
jne
xchg
and
or
iret
movsl
into
jge
aas
arpl
nop
ret
repnz
pop
or
out
in
outsl
sub
and
shl
or
add
stc
push
sahf
rclb
dec
cmp
mov
dec
aad
loopne
sub
mov
stc
adc
notb
xchg
mov
int
add
sbb
pop
popa
sbb
jmp
add
fsubrl
push
rcrl
pop
sbb
loop
adcb
lcall
jae
jg
inc
lret
mov
adc
iret
push
mov
xchg
lods
and
ss
adcl
mov
sbb
xor
cmp
add
jg
out
hlt
push
imul
gs
pop
roll
loope
dec
mul
push
int
fistps
mov
xor
add
leave
and
jb
pop
push
jge
movsl
push
jmp
and
and
xor
subl
in
sahf
jl
adc
jl
xor
or
js
pop
arpl
xor
gs
or
outsl
pop
fwait
pop
xchg
stos
sub
scas
adc
dec
lods
dec
pop
mov
sbb
aaa
jecxz
mov
xor
sub
into
push
inc
lea
xchg
inc
orb
jnp
rorl
pop
jl
jmp
repnz
mov
stos
push
add
push
or
cld
pop
loope
cmp
clc
loope
ficompl
dec
and
xor
in
jp
sub
imul
add
arpl
in
cmp
mov
cmpsb
xchg
movsl
mov
xlat
pop
adc
pop
mov
psrlq
arpl
stc
mov
jae
rolb
idivb
pop
xor
add
inc
les
dec
pop
mov
or
popa
decb
test
inc
push
daa
mov
jg
scas
les
push
das
jg
call
cwtl
jo
push
xor
jecxz
imul
xchg
pop
je
adc
sarb
leave
lds
repz
addr16
rol
pop
out
cmp
xchg
and
and
into
add
lret
push
xor
jae
in
jae
shrb
cmpsb
xchg
mov
lahf
xchg
adc
nop
jp
xchg
add
jo
mov
in
int3
cmc
pop
insb
movsl
push
ret
and
pop
xchg
dec
mov
repnz
push
mov
ret
nop
testb
dec
push
bound
cld
ss
loop
test
ret
adc
push
mov
add
add
mov
out
dec
je
and
xchg
out
and
test
add
jmp
aam
adc
outsl
enter
pop
fwait
js
dec
xor
test
add
jg
pop
mov
loopne
jb
adc
test
push
fnstcw
scas
sub
jmp
mov
outsl
adc
decl
stos
push
outsl
bound
lret
mov
jg
inc
cmpsl
call
aam
insb
testl
rorb
add
dec
jl
rcl
and
je
pop
fiadds
add
aas
faddp
in
mov
or
inc
jge
pop
add
sarl
xchg
and
mov
push
xor
out
outsb
or
mov
cmpsl
popa
repnz
sbb
push
jmp
or
jmp
loope
ss
cmc
cmp
es
xchg
das
adc
or
lods
fsubrl
shl
push
inc
cmp
fistpll
mov
out
mov
xchg
dec
sahf
or
in
push
pop
sub
pushf
xchg
lret
jns
sti
inc
cmp
mov
xor
arpl
or
adc
or
or
ret
add
adc
cmp
xor
mov
or
xchg
and
adc
mov
ss
mov
pop
mov
neg
cmp
xchg
inc
jg
jp
sarl
aad
inc
and
xor
push
mov
jle
dec
or
or
add
std
add
mov
inc
nop
xlat
lds
pop
decl
pop
mov
out
push
lret
outsl
sbb
xchg
aam
push
stos
ficomps
push
dec
and
xchg
shlb
adc
mov
jb
js
subb
xchg
divl
sarl
mov
insb
xor
in
pop
cmc
or
or
lret
repz
push
pop
lock
stos
es
mov
cmpsb
rdtsc
out
ret
fildll
lea
jmp
xchg
sub
or
insb
lretw
aas
setle
inc
cmp
mov
xlat
push
in
fwait
in
add
cmp
enter
xchg
mov
cmp
mov
dec
adc
bound
inc
pusha
lcall
jmp
jnp
fldenv
push
or
pop
and
imul
inc
loope
adcl
or
sbb
xlat
mov
cs
jle
mov
pop
ljmp
mov
xchg
imul
out
xchg
mov
xchg
cmp
aaa
pop
and
mov
addb
mov
jl
mov
mov
pop
xchg
out
cli
ss
mov
xchg
scas
jne
jns
push
inc
test
in
mov
lret
or
popf
jg
ds
in
cmpl
and
cli
imul
in
mov
cmp
mov
clc
push
stos
inc
cmp
jo
dec
pop
inc
mov
fld1
out
cmpsb
xor
dec
mov
js
ja
clc
stos
fdivp
jecxz
jno
xorl
pop
sahf
mov
jbe
test
ffreep
mov
or
pop
cmp
stc
jnp
loop
pop
js
dec
shr
and
testb
out
mov
sbb
mov
jecxz
jecxz
sub
sbb
pop
ret
inc
pop
scas
mov
das
negl
jge
roll
xchg
scas
jmp
xor
arpl
rcrb
mov
sub
sbb
nop
add
aas
and
rorl
push
mov
aad
imul
inc
push
xor
jo
imul
in
popa
jle
neg
jnp
push
shrl
gs
fidivs
adc
or
xlat
cmpsb
data16
add
fwait
and
cmp
fcmovne
es
out
arpl
or
sbb
les
or
xor
popf
xchg
icebp
nop
sub
loop
out
lds
mov
test
xchg
dec
fcmovu
in
loope
rcrb
xchg
inc
push
enter
insl
push
dec
mov
idivb
pop
adc
cld
xor
jecxz
adc
inc
aaa
or
jb
sub
inc
pop
cmp
pop
gs
test
test
cmp
cmp
ret
fsts
sbb
cli
fadds
ss
loopne
mov
or
fcomp
out
sbb
sbbb
mov
mov
xlat
pop
lret
mov
rcll
pop
mov
jecxz
call
mov
popa
mov
rol
pop
jmp
sti
test
xor
fisubs
lcall
js
lods
repnz
dec
jne
stos
add
test
pusha
mov
jle
imul
outsl
test
loop
mov
mov
sbb
or
inc
xchg
push
lea
lds
pop
cmpsl
pop
mov
jbe
mov
sbb
lahf
and
mov
outsl
mov
sbb
iret
or
cmpsl
inc
das
iret
push
jecxz
add
sbb
test
dec
push
cmp
xor
hlt
notl
je
mov
pushf
ljmp
push
movsl
loop
sub
dec
or
push
push
jecxz
inc
test
movl
stos
mov
cwtl
cmp
dec
test
mov
repz
call
in
shlb
cmc
sbb
cmp
sub
cmp
bndldx
cwtl
rcl
negb
sbb
in
push
pop
sub
pop
ret
xor
repnz
xchg
data16
sub
cmp
dec
sbb
je
sbb
xor
cld
xchg
jae
jno
sub
ret
scas
ficoms
xorl
mov
mov
jl
or
cmp
loope
mov
repz
addr16
adc
sub
lcall
inc
push
gs
out
je
subl
loop
fstpl
fiadds
aas
loopne
in
pop
std
data16
enter
jle
out
push
xchg
roll
pop
xor
sarl
fs
and
test
in
dec
out
dec
aad
adc
and
pop
xchg
or
sarb
mov
test
dec
mov
mov
sub
lahf
aaa
sbb
jo
mov
jno
cwtl
mov
aad
cwtl
sbb
sub
pop
inc
fstp
cmp
push
push
test
dec
cwtl
in
out
or
add
and
pop
jae
dec
in
dec
rclb
and
push
mov
adc
pop
outsb
fisttps
addr16
imul
leave
xchg
xchg
cmpsl
dec
xor
rorl
and
inc
fcomps
popl
xchg
xor
in
xor
sub
fs
xchg
jo
stos
hlt
or
in
and
shl
sub
repz
call
pop
sahf
mov
stos
into
lret
add
pusha
mov
es
enter
jne
mov
mov
shl
movl
jecxz
adc
daa
cmp
ss
mov
cmp
push
cltd
or
inc
inc
pushf
and
xsavec
loope
jne
invd
movsb
scas
fst
test
xor
mov
xchg
subl
xchg
scas
jo
mov
push
incb
push
cmpsb
cmp
add
adc
repz
sbb
div
psraw
subb
je
sub
pusha
mov
nop
and
mov
je
and
cmp
pop
mov
adc
jl
xchg
ljmp
icebp
push
xlat
andb
repnz
push
ret
addr16
cmp
pusha
rcrl
sarb
inc
mov
sbb
add
pusha
push
push
outsl
mov
loopne
aad
cli
inc
xchg
loop
jo,pt
and
xor
cmp
push
loop
pop
add
addr16
in
dec
jnp
cmpsb
rcrl
xor
aam
aas
or
jg
bswap
pop
pop
popa
imul
cmp
pop
mov
jae
lahf
into
dec
inc
or
mov
loopne
test
dec
in
nop
cmpsl
cmp
movsl
fcmove
mov
mov
xchg
test
stc
jno
or
scas
mov
lret
cs
inc
cmp
push
adc
add
data16
lods
mov
out
dec
jmp
outsl
ljmp
lock
inc
dec
jne
jp
push
cmpsb
mov
add
mov
inc
pop
cmc
mov
cld
push
out
mov
jg
inc
mov
mov
inc
mov
pushf
popf
pop
leave
imull
inc
outsl
int3
rolb
jp
mov
pushf
ljmp
jmp
dec
scas
stos
or
lds
arpl
aam
sti
jae
mov
push
add
pop
sbb
cmp
mov
mov
jl
adc
xor
xor
or
sbb
lods
jl
and
xor
jge
jae
cmp
push
ss
mov
cld
mov
leave
cmc
dec
jo
sbb
push
mov
mov
out
fdivp
mov
ja
dec
cmp
xchg
cmp
sbb
inc
mov
addr16
mov
das
loopne
mull
or
movsl
les
decl
je
leave
push
out
sub
mov
jbe
xlat
sbb
dec
xor
jae
xchg
fisubrl
out
and
ret
mov
sbbl
ret
ret
aaa
inc
mov
and
jmp
jl
lahf
xchg
ljmp
fimuls
dec
adc
sub
inc
shll
movsb
dec
pop
add
inc
xor
pop
iret
movsb
xor
imul
imull
mov
jmp
or
fisubrs
sub
add
out
popa
sbb
cwtl
fildll
mul
pop
mov
iret
fsts
mov
push
stos
sub
orl
ljmp
mov
pop
daa
and
xor
out
enter
shlb
out
or
fs
sbb
adc
mov
inc
cmp
outsb
inc
outsb
or
icebp
pop
pop
mov
inc
jb
inc
cwtl
jge
dec
rorb
loopne
xlat
push
push
mov
xchg
mov
mov
xchg
shlb
ja
in
dec
fimuls
pusha
dec
mov
stos
sbbb
cmp
repnz
mov
jnp
addl
and
sub
push
sarl
lret
dec
cmpsb
dec
call
test
sbb
and
adc
mov
gs
adcb
cmc
repz
mov
shrl
mov
or
pusha
dec
jl
dec
dec
lds
push
and
imul
aas
fimull
sub
pusha
repz
inc
and
jne
gs
loopne
int3
xchg
pop
mov
into
mov
dec
cmp
jmp
dec
pop
mov
stc
push
and
lcall
arpl
hlt
cli
jnp
push
jmp
lret
call
cmp
inc
add
and
aad
jl
jmp
and
jne
inc
adc
leave
icebp
aad
lods
ret
cmp
fisttps
imul
sahf
idivl
mov
jmp
mov
xor
or
aam
add
daa
mov
dec
mov
vaddsd
in
aas
call
iret
stos
lock
mov
gs
or
in
adc
or
fsubrl
adc
xchg
imul
fsubrs
push
ret
int3
cltd
push
call
adc
sbb
mov
js
fstl
cmp
push
or
fwait
add
mov
dec
pop
or
lods
aam
fisubrl
xorl
mov
ja
outsb
cld
out
pop
frstor
fnstenv
in
xor
cmp
xchg
push
and
orl
dec
in
mov
mov
jg
adc
xchg
push
sbb
clc
or
mov
sub
arpl
push
mov
ret
stos
mov
test
mov
and
push
enter
xchg
jecxz
xchg
xor
bound
inc
mov
movsb
insl
repz
gs
je
pop
rol
xchg
icebp
pop
cmp
clc
and
mov
jmp
int3
adc
xchg
cmp
pop
mov
mov
cmpl
jb
mov
call
adc
call
inc
lea
or
mov
add
dec
adc
lock
lret
push
inc
or
pop
adcl
pop
mov
inc
int3
pop
or
pop
mov
mov
scas
sub
cmpsl
cld
jno
xor
pop
lods
repz
mov
pop
rcll
andl
push
jno
add
rcr
xchg
push
dec
mov
sahf
push
ljmp
push
shrb
cmp
or
lock
add
inc
scas
sbb
add
xchg
xor
pop
outsb
pushf
inc
sahf
push
mov
inc
movsb
jne
push
nop
popa
movsl
inc
add
aaa
cmc
inc
aad
xchg
fmulp
xchg
test
jo
inc
ret
cli
lahf
adc
cmc
push
mov
loope
nop
pop
pusha
nop
and
pop
fimull
aas
mov
lahf
xor
inc
mov
or
cli
push
jnp
enter
nop
or
das
mov
lret
xor
push
mov
es
push
imul
xchg
pusha
or
fisttps
mov
jnp
mov
jecxz
sti
out
addr16
jb
xchg
xor
jmp
mov
lcall
cli
adc
mov
add
bound
ljmp
adcb
add
cmp
or
repnz
adc
bound
jae
and
andl
inc
lods
loop
and
xchg
std
sub
out
xchg
orl
gs
fidivs
jae
repnz
push
sbb
gs
aas
rcrb
xor
xor
jp
mov
lods
xchg
test
scas
das
dec
fcoms
cmp
push
or
dec
dec
leave
fldt
add
stc
xchg
shll
jle
adc
pop
dec
sahf
outsl
es
cltd
lcall
cwtl
mov
jne
inc
pop
jne
mov
pop
push
iret
je
inc
adc
add
inc
mov
push
addr16
inc
xor
addr16
jno
fstps
mov
xor
in
mov
pusha
cmp
jmp
cmc
sbb
cmc
mov
cld
xor
jle
dec
push
add
lea
shlb
movsl
das
cmpl
push
sti
stos
aam
or
icebp
lock
fimull
or
jg
dec
jecxz
dec
add
inc
cltd
or
imul
das
out
mov
jle
push
fs
dec
test
cmp
outsb
in
jno
aam
push
push
fiaddl
ja
jno
lea
push
adc
test
lock
into
popa
dec
movsl
xor
xorb
das
or
insl
mov
mov
loop
outsb
arpl
sub
cmovae
push
mov
fisubrl
imul
or
pop
pop
imul
xchg
push
mov
dec
lret
dec
sahf
testb
adc
lret
iret
push
jne
pop
subl
ret
jecxz
lds
sbb
adc
scas
lahf
in
addr16
add
sub
adc
das
jmp
xchg
add
out
dec
orb
and
imul
pop
mov
mov
je
mov
mov
les
inc
lahf
dec
jb
push
mov
orb
jmp
pop
dec
inc
mov
pushf
add
movsl
repz
sub
in
daa
mov
call
dec
lods
into
pop
loopne
and
out
or
loope
sbb
repnz
inc
and
lahf
sub
fisttpl
ljmp
adc
ficompl
pop
es
insb
test
int3
fsubl
push
inc
lods
rcrl
push
mov
pshufw
jle
push
fnstenv
and
add
movsb
and
pusha
std
mov
and
pop
xchg
ret
rcrl
lret
cld
xlat
movsb
nop
mov
or
mov
mov
int
cli
dec
cmp
outsb
or
into
add
mov
pop
cli
sbb
add
dec
xchg
scas
cmpsl
xor
xor
bound
jl
sarb
sahf
shll
jae
cmp
cmp
in
mov
pusha
hlt
iret
jo
js
xor
jo
pop
pop
adc
push
outsl
mov
fisttpl
sbb
xor
testl
les
pop
fisttpl
mov
out
lds
mov
or
push
cmp
notb
into
movsl
ja
sbb
push
stos
pop
push
fwait
cmp
jle
xchg
movsl
xor
mov
mul
cmp
mov
aad
lret
aas
dec
push
scas
repnz
enter
inc
jno
scas
loopne
push
rcrl
add
mov
aaa
fsts
out
lcall
fidivl
ja
xchg
xchg
fsubl
into
popa
cmp
xchg
lret
mov
lock
dec
cmp
dec
outsl
dec
add
inc
lods
fstpt
lret
mov
xor
mov
out
dec
sub
lahf
cmpl
push
sarl
lret
daa
pop
xchg
cmp
addl
cmp
ds
stos
and
jge
jge
jg
in
xchg
mov
cli
dec
orl
stos
dec
xor
mov
daa
push
and
scas
enter
stos
or
es
out
iret
ljmp
sbb
inc
outsl
orl
push
sahf
xor
dec
mov
lods
decl
push
mov
mov
push
inc
sbb
sbb
xlat
cmp
es
push
das
jle
push
inc
xchg
inc
repnz
stos
sahf
addr16
adc
and
sbb
lods
jecxz
sbb
cmp
mov
cmp
push
xlat
outsl
inc
xlat
jno
jle
push
mov
sub
fs
mov
movups
mov
dec
adc
int3
mov
dec
jp
icebp
inc
adc
mov
add
inc
or
push
cmpsb
push
in
push
std
popl
in
xor
sahf
bnd
xor
cs
clc
pop
divb
icebp
push
and
and
test
pop
popa
jne
sbb
cmp
stos
push
enter
xchg
incl
sbb
xchg
outsb
in
xchg
jge
cmp
jge
sub
xchg
movsl
push
mov
cs
repz
loop
cwtl
lret
sbb
jo
leave
out
bound
push
xor
and
cld
and
imul
inc
scas
and
pushf
fdivr
enter
sti
loopne
push
ror
leave
icebp
in
jp
loop
lock
inc
ja
pushf
mov
lret
xor
mov
add
jne
lods
shl
sub
push
pop
push
cmp
scas
xchg
arpl
pusha
mov
or
mov
popa
adc
push
pop
bound
dec
fwait
clc
sub
jl
icebp
fwait
jmp
inc
xor
and
xor
jle
or
xor
add
into
sti
cmpsb
and
les
adc
daa
sbb
adc
pushf
sbb
hlt
adc
sbb
push
dec
imull
push
orb
xchg
fsubl
mov
in
mull
nop
rorl
jns
inc
cmp
cmpsb
movsl
mov
hlt
decb
push
lds
jb
push
int3
jle
mov
xor
lret
pop
ds
cmp
cltd
sbb
and
cmp
mov
xor
xchg
jbe
cmp
loope
pop
enter
and
sub
sbb
mov
pop
push
lods
mov
insb
cmp
xchg
movsb
gs
dec
mov
adc
xchg
adcl
fwait
mov
mov
cmp
lock
rorb
repz
testl
cwtl
mov
push
lods
loopne
mov
push
sbb
add
std
bound
movsl
sub
inc
inc
int
out
fs
cltd
jl
scas
sub
lods
and
push
mov
adc
shlb
push
rcll
pusha
pop
adc
xchg
xchg
out
js
and
bound
fwait
push
xlat
nop
fwait
push
mov
add
push
add
sub
aad
iret
ret
popf
add
mov
test
add
testl
pop
add
adc
call
fisubs
or
outsl
sub
movsl
bound
test
adc
out
repz
push
hlt
adc
jne
repz
add
pop
xchg
cs
jp
stos
dec
imul
adc
mov
pop
xor
test
arpl
cmpsl
xlat
xor
and
int3
in
test
dec
dec
cmp
scas
adc
dec
mov
daa
das
jae
dec
lock
in
call
out
add
je
add
mov
pop
jge
mov
xchg
push
loopne
je
js
insb
mov
popl
or
test
mov
inc
and
cmpsl
insl
and
lds
jnp
fwait
inc
adc
pop
scas
popa
call
mov
pushf
fwait
icebp
lret
push
mov
push
jns
stos
lret
repz
and
ret
mov
sti
mov
iret
inc
sub
pop
das
lret
js
daa
test
popa
xor
inc
or
push
push
dec
xchg
cmp
xchg
test
shlb
add
push
mov
daa
repnz
push
and
jp
jle
out
mov
push
cli
lock
pusha
xor
test
out
mov
xchg
lahf
mov
js
adc
addl
mov
pop
into
dec
sarb
test
fsubl
out
lds
sbb
loope
inc
mov
xor
test
mov
out
pop
test
outsb
notl
jle
or
lods
sub
sub
cmp
and
out
xor
jnp
cltd
fadd
pop
jne
pusha
adc
add
js
repz
testl
jae
sbb
pop
fwait
outsb
sbb
ret
or
fistpll
dec
dec
cmp
popa
or
aad
dec
adc
stos
dec
mov
andb
stc
sub
cmc
cmpsb
fisttpll
andl
cltd
loop
cmp
mov
dec
lcall
lds
in
dec
mov
daa
cs
pop
add
sub
and
xor
in
or
jmp
fwait
dec
push
test
pushf
clc
mov
popa
mov
lret
or
es
leave
mov
add
shll
mov
imul
into
jge
fs
mov
lods
dec
or
inc
xlat
loopne
push
dec
int3
stos
jno
jg
addr16
rorb
mov
es
or
cmp
ja
fsubl
ss
addr16
and
out
cs
jns
rorb
mul
les
hlt
and
cwtl
cwtl
bound
add
outsb
dec
lds
mov
and
adc
mov
or
pop
push
push
scas
and
adc
and
outsl
and
push
icebp
jmp
fwait
aas
ds
out
leave
push
sub
test
stc
pop
insl
push
adc
ds
aaa
ds
jg
lret
or
rclb
mov
scas
fisubrl
sti
filds
cmpsl
cmp
mov
and
jle
mov
cmpsb
inc
leave
es
mov
fisubl
fisttps
and
or
mov
push
jo
scas
insb
push
xchg
mov
int3
sbb
lret
pop
cmpsl
or
xchg
mov
dec
loopne
mov
dec
out
xchg
call
fbld
out
jle
jle
cwtl
push
lock
inc
or
daa
lds
in
dec
sub
push
leave
jecxz
stc
jns
sbb
cmp
mov
cmp
push
jae
cmp
push
add
pop
lods
out
cmc
mov
sub
das
aad
adc
pop
jo
shlb
loop
aam
jg
mov
movsl
adc
dec
pop
out
adc
sub
divl
test
xchg
gs
push
addr16
sbb
sub
das
pop
mov
sub
jo
aaa
inc
aas
sub
enter
xchg
inc
pushf
add
cmpsb
fwait
sub
lahf
fbstp
mov
pop
jge
rcrl
push
sti
push
rclb
mov
in
cmc
mov
fmull
enter
push
in
out
inc
mov
xor
mov
dec
adc
jmp
test
test
enter
sbb
out
push
xor
sub
lret
jnp
call
aam
or
add
test
push
mov
lock
in
mov
push
les
add
int3
xor
shlb
and
mov
test
xchg
sub
push
in
cmp
dec
dec
mov
or
pop
xor
cld
mov
cltd
mov
test
pop
add
xor
ja
dec
mov
idiv
neg
add
mov
jns
daa
scas
sti
out
adc
inc
icebp
test
pop
fdivrp
popf
lret
popf
jg
repnz
frstor
inc
dec
push
mov
mov
cmp
mov
ja
adc
insb
sbb
movsb
int
or
cwtl
or
lret
pop
push
inc
outsl
ficoml
inc
cmp
xor
mov
int3
xchg
hlt
movsl
mov
cwtl
add
adc
pop
lds
enter
xor
mov
xchg
out
mov
and
xchg
lahf
psubsb
jg
roll
adcl
mov
xor
mov
cmpsl
je
das
dec
call
cmp
sub
test
aam
sub
add
jecxz
jp
mov
push
cmpsb
xlat
lods
mov
fsts
lods
shrl
in
loop
push
popa
xchg
pop
mov
push
add
cmpsl
scas
ds
mov
cmp
xor
mov
mov
fadds
in
add
push
mov
mov
data16
jae
psubd
fsubs
mov
pop
aas
push
pop
popf
jmp
adc
mov
ficomps
xchg
pushf
pop
mov
aaa
xchg
fisttpll
sub
mov
pop
movsl
addr16
jecxz
cs
cmc
xchg
mov
clc
add
out
mov
mov
jge
xchg
in
dec
arpl
pop
fmulp
inc
fsubl
mov
mov
xchg
mov
dec
stos
ljmp
push
lret
xchg
repnz
or
iret
pop
add
test
ret
aad
cmp
out
daa
inc
mov
jns
sbb
es
cmp
jecxz
mov
test
mov
mov
mov
and
loope
pop
shrl
in
stos
jnp
jecxz
xlat
push
int
mov
adc
jmp
es
mov
lds
jbe
pop
mov
fisttpl
sub
lret
add
out
sbb
icebp
mov
jns
imul
fisttps
out
test
dec
ljmp
cmpsl
inc
clc
sahf
xchg
imul
movsb
pop
inc
jle
es
xchg
es
roll
std
enter
ja
stos
jge
inc
push
inc
and
xor
push
fwait
adc
movsl
mov
das
dec
outsl
enter
sbb
out
jne
cmp
sar
movsl
mov
adcl
iret
adc
lret
je
xor
stc
or
lock
ficoml
mov
inc
xchg
shrb
rorb
jb
lock
or
lods
aam
xchg
jl
push
or
movsb
pop
scas
incl
adc
insb
xchg
sbb
enter
rcrb
jl
cmc
sahf
rorl
pop
testl
loopne
pop
add
push
or
xor
or
pop
and
out
addr16
fld1
int3
adc
dec
insb
dec
cmp
pop
xchg
push
fwait
xlat
sbb
cmp
imul
push
xor
inc
mov
push
mov
mov
mov
leave
xchg
call
mov
jl
jle
or
xchg
scas
aaa
and
and
xchg
jecxz
dec
in
jb
les
jl
jp
inc
jmp
sti
dec
gs
mov
bound
pop
push
sbb
int
mov
add
jp
insl
cmp
test
or
filds
insl
mov
or
cmp
rolb
loopne
outsb
fwait
pop
jns
mov
ret
xor
imulb
xor
xor
add
inc
xchg
push
xchg
inc
sbb
and
shr
jl
pushf
divl
lds
jnp
mov
jnp
rolb
movsl
hlt
push
addr16
push
mov
inc
cltd
in
and
add
pop
out
cltd
addb
add
fldenv
movsb
push
adc
cs
pop
nop
iret
adc
lahf
push
sub
pushf
in
cmpsb
inc
jns
and
test
sbb
mov
mov
pop
shl
xor
int3
lcall
in
popf
jl
or
xchg
sbb
jl
mov
fisubs
icebp
shl
mov
adc
push
mov
pop
or
repnz
mov
out
mov
add
test
push
dec
call
lock
dec
jno
mov
mov
out
cmp
cmp
mov
xchg
mov
ficoml
dec
push
inc
push
out
add
pop
add
nop
into
mov
add
repz
inc
mov
jle
or
jle
add
mov
test
inc
cmp
ret
mov
jecxz
gs
sbb
stc
push
pop
pop
pusha
out
jg
cli
adc
jns
cmpsl
in
mov
cs
mov
dec
mov
and
add
hlt
push
aas
xlat
rcl
xorl
test
push
and
pop
xor
dec
dec
mov
inc
pop
mov
les
test
push
inc
dec
push
inc
cmp
fildll
out
add
addr16
jae
sbb
push
dec
iret
jmp
js
and
popf
rcrl
jbe
insb
adc
mov
clc
test
add
jecxz
cmp
movsl
mov
loopne
cmp
jne
mov
pop
pop
ss
and
push
jmp
mov
mov
movsl
aaa
arpl
outsl
rorb
mov
ljmp
test
inc
mov
inc
call
mov
jo
outsl
fnstenv
xlat
fcmovbe
jmp
mov
mov
shl
into
or
adc
stos
iret
mov
test
pop
xor
xor
mov
mov
pusha
inc
adc
test
sar
mov
push
lahf
dec
outsl
pop
adc
aas
mov
sub
jo
sbb
and
repnz
dec
cmpsb
sub
push
mov
rcr
out
lea
mov
push
or
stc
sub
ret
inc
lods
lds
jmp
aam
fsub
dec
pop
sti
inc
adc
notl
jb
subl
xchg
mov
insb
push
stc
or
and
cmp
bound
mov
cmpxchg
mov
pop
and
sti
cmp
and
pop
fists
filds
ret
fldenv
bound
adc
xor
mov
out
pushf
inc
add
jae
out
pop
xchg
dec
imul
hlt
aas
movsl
jle
fiadds
mull
mov
mov
jnp
mov
hlt
push
push
nop
xor
xchg
mov
xor
jp
cltd
rol
rcr
fwait
cs
adc
xchg
mov
addr16
push
lods
jnp
dec
push
add
mov
notb
inc
mov
dec
loop
mov
add
dec
mov
addr16
or
cli
leave
mov
gs
mov
hlt
shrl
adc
sub
or
aaa
imul
mov
jecxz
push
jecxz
and
and
mov
das
out
insb
lods
sbb
dec
or
aam
jo
cmp
lahf
das
ficompl
dec
out
es
popf
pop
push
jmp
int
js
sbbl
pop
cmp
lods
cld
add
imul
stos
and
add
jmp
mov
leave
mov
subl
xor
push
jmp
pop
cmc
je
jmp
sub
scas
push
fistpl
pop
call
adc
lods
pop
fistpll
mov
lods
adc
mov
mov
jb
pushf
cwtl
jmp
add
pushf
shll
mov
mov
cmp
lods
test
out
push
mov
pop
shl
mov
and
xchg
fists
cld
push
xlat
popf
dec
xchg
and
jb
pop
or
aad
movsb
lods
mov
outsb
xor
ljmp
cli
in
cs
mov
jb
adc
xor
fucomi
pop
add
mov
ljmp
fildll
add
fmul
popa
sahf
xchg
add
mov
push
sbb
jmp
iret
jae
repnz
xor
jecxz
jecxz
ret
dec
test
mov
adc
outsb
test
jbe
inc
fdivl
ljmp
jns
add
aas
mov
maxps
adc
divb
jbe
cmpsl
and
imul
fcomip
cli
mov
int3
xchg
sbb
mov
xchg
pushf
lcall
jns
fdivs
popf
stc
lcall
xor
jg
mov
or
push
cs
or
xor
iret
out
movsl
movsb
pop
mov
jnp
xchg
addr16
negl
add
jmp
sbb
pop
pop
lret
or
mov
and
jmp
sbb
xchg
iret
adc
movsb
lods
cmc
nop
ljmp
icebp
in
push
arpl
stc
mov
imul
in
faddp
cmp
pop
inc
js
ret
fmull
loope
xchg
sahf
in
mov
mov
mov
and
inc
mov
push
aas
cmp
and
add
xchg
lock
mov
outsl
sbb
xorb
jmp
sub
inc
add
loope
mov
mov
loop
add
cwtl
jp
loop
andl
mov
sub
clc
dec
loope
test
push
push
clc
mov
out
repz
gs
sub
ret
iret
imul
mov
sub
pop
dec
scas
negl
rol
je
lret
xchg
cli
pop
data16
adc
xor
addr16
inc
incl
sarl
addr16
ljmp
imull
sbb
gs
inc
push
add
xor
xor
pop
std
and
mov
mov
stc
filds
cmp
xor
jg
add
add
or
xor
sbb
sbb
mov
cmp
add
lcall
sbb
loopne
lret
test
cmp
sub
icebp
lods
push
cwtl
and
pop
xor
fnstcw
adc
cmp
ret
lea
or
sahf
jnp
sbb
and
jne
enter
adc
nop
lds
test
jne
jb
rolb
and
cmc
cltd
lret
in
sub
decl
mulb
movb
push
dec
xchg
call
cmp
xchg
ret
xchg
movsb
subl
add
sbb
fwait
push
dec
pop
loop
pushf
ret
lds
aam
sub
pop
mov
dec
jge
mov
jmp
inc
jge
add
dec
and
pusha
dec
mov
loopne
sti
xor
jp
jns
push
adc
mov
lahf
mov
pushf
fsubrl
adc
pop
mov
gs
lods
mov
jnp
out
mov
jle
popf
mov
adcl
repnz
stos
xchg
push
push
pop
mov
push
add
xchg
shll
adc
je
sbb
push
test
pop
mov
icebp
call
xchg
insl
movsb
cltd
fidivs
cmp
stos
ljmp
sbb
pusha
out
or
sub
dec
js
mov
mov
mov
or
push
mov
into
adc
popa
lds
aas
stc
ljmp
dec
add
icebp
push
pop
test
pop
stc
xchg
pop
jge
ret
add
imul
mov
mov
pushf
notb
mov
push
jns
ds
jbe
movsl
push
aaa
stos
push
jo
xchg
icebp
jecxz
sub
push
dec
lock
jmp
fsubl
mov
aaa
in
xor
jmp
mov
mov
outsb
sub
popa
cmc
nop
loopne
mov
jnp
xor
das
hlt
cmpsl
mov
adc
ror
pop
in
mov
mov
gs
ror
call
aaa
pop
psubusw
cmpsb
xor
add
dec
push
iret
adc
sarb
movsb
les
stos
mov
adc
jp
call
xor
dec
test
cmpb
add
icebp
clc
pop
roll
or
leave
jp
add
int
int3
mov
or
push
fstps
push
iret
inc
push
rcl
aaa
or
stos
lcall
outsb
in
ljmp
mov
test
mov
push
adc
jg
cs
push
cs
add
fiaddl
xchg
add
pusha
push
sbb
inc
add
aad
push
mov
adc
test
jno
outsl
sub
lods
or
ret
aad
orb
xor
loop
leave
rorb
jnp
ret
test
arpl
xchg
stos
bound
mov
stc
dec
jmp
pop
or
shrb
add
push
sahf
or
dec
outsl
push
lahf
mov
ficoml
mov
fcomp
pop
xor
adcl
jmp
and
aas
movsb
sub
jb
sub
ret
push
push
or
out
daa
lret
int
dec
xchg
lods
inc
dec
inc
loopne
adc
pop
or
outsb
cmpsl
mov
idivl
movsl
xchg
add
repz
test
push
push
add
jmp
xchg
mov
loop
jg
push
imul
jo
test
sbb
and
pusha
sub
cmp
into
jae
mov
xchg
iret
pop
outsl
xor
lahf
push
mov
mov
mov
inc
je
push
enter
cmp
jo
lret
sti
test
sbb
and
stos
mov
test
mov
xor
or
js
pop
loope
and
and
sbb
repnz
dec
push
jb
movsb
dec
insl
mov
mov
cmc
push
stc
mov
daa
ljmp
pushf
cmp
or
test
out
mov
dec
mov
roll
add
ret
sub
mov
test
ja
ret
nop
outsl
nop
dec
movsl
sub
sub
or
fwait
mov
add
or
inc
push
out
push
scas
dec
pop
jl
ret
or
shlb
sub
adc
popf
fs
dec
stos
cmpl
jge
mov
xorb
cmp
sub
push
imul
cmpsl
mov
out
insl
cs
mov
jns
cmpsb
mov
mov
sbb
in
xchg
cwtl
into
and
dec
pop
xchg
lods
xchg
mov
lret
ret
clc
into
add
lea
aam
addr16
in
negl
flds
xchg
sbb
xor
leave
ffreep
adc
jne
mov
into
sbb
or
addr16
and
movsb
test
xchg
inc
mov
cmc
xchg
add
sbb
xchg
leave
lods
cmp
cmpb
jno
addr16
xor
or
insb
data16
sub
hlt
test
sub
in
ds
stos
out
aad
fcmovnu
pusha
mov
dec
mov
inc
scas
cmp
cld
mov
lret
popa
test
jg
or
xchg
testb
aam
cmp
pop
sbb
push
inc
xchg
sub
cmp
xor
inc
push
inc
fldt
aaa
popa
push
xchg
cmpsl
xorl
dec
mov
das
cmp
push
shl
mov
or
rcll
in
push
adc
add
jbe
cmp
call
lcall
push
imul
mov
enter
ret
jbe
xchg
repz
les
sub
xor
int
pop
mov
xor
mov
sub
adc
push
sbb
pop
or
and
or
push
jne
daa
mov
sub
jbe
add
rcrl
push
scas
jno
int
aad
mov
push
pusha
jbe
arpl
hlt
fcoms
xchg
mov
sub
cli
cmp
jge
adc
mov
sahf
adc
cwtl
inc
adc
fsts
insl
add
mov
mov
lret
notb
push
pop
jle
out
push
push
jecxz
subl
cmpsb
add
sbb
jo
pop
nop
xchg
daa
imul
repnz
sbbl
lds
add
pop
push
gs
lret
push
imulb
dec
std
pop
int
push
daa
fstpt
mov
sbb
adc
mov
inc
xor
mov
jb
fmul
jl
jmp
lcall
out
int3
mov
push
repz
add
clc
or
cmp
mov
mov
push
push
pop
mov
sub
popf
stos
incl
or
je
in
mov
fistps
jg,pn
enter
pop
aam
sti
push
mov
sbb
imul
xchg
pop
outsb
rcr
arpl
pop
orl
rolb
into
call
jle
add
cmp
dec
ret
outsl
sub
ss
jb
adc
jmp
ljmp
xchg
addr16
les
jecxz
insb
neg
jne
into
ljmp
out
stos
icebp
sahf
mov
mov
dec
add
lret
int
lret
sub
nop
or
jmp
mov
jl
iret
cmpsl
inc
adc
inc
jbe
inc
loopne
jge
test
mov
dec
push
jbe
cld
adc
lret
les
sub
jg
sub
cmp
sub
icebp
or
insb
and
daa
repz
and
or
sub
lret
icebp
les
and
fldl
outsl
xor
jp
push
xor
mov
std
std
test
inc
and
cmpsl
scas
movsb
fsubl
adc
das
imul
pop
xor
test
inc
shll
fwait
test
dec
and
lock
aas
push
outsb
and
dec
xlat
dec
mov
stc
lcall
movsl
sbb
imulb
fldt
popa
mov
hlt
mov
xor
dec
imul
sbb
scas
mov
jo
jmp
loopne
push
and
dec
pop
xor
rclb
cmc
pop
idivl
jno
fildll
loope
out
jne
xchg
add
daa
scas
adc
rcll
icebp
mov
lods
pop
dec
movsl
icebp
cmpsl
stc
stos
scas
xchg
lret
enter
push
nop
daa
insl
in
mov
sbb
int3
jg
inc
ja
cwtl
jns
inc
jg
lock
imul
inc
in
adc
fbstp
cs
stos
push
mov
fisubrs
fs
dec
adc
and
ficompl
hlt
xor
bnd
mov
repz
or
cmp
xchg
cltd
lods
mov
daa
lret
adc
dec
jns
pmaxsw
aam
sbb
adc
call
adc
clc
push
adc
fld
ss
pushw
lahf
xor
jne
repz
sbb
xor
shlb
adc
imul
je
aam
std
movsl
scas
xor
sti
std
push
mov
sub
xchg
mov
push
xor
lods
stc
call
push
imul
lcall
out
ja
mov
stos
and
aam
inc
out
jp
les
lret
mov
jnp
mov
add
jo
imul
jbe
sbb
movsb
sbb
pushf
popa
std
fwait
lods
push
jo
mov
arpl
xor
pushf
add
mov
sub
popa
inc
xor
movsb
cmp
ja
in
sub
insb
rcrl
lds
adc
ss
imul
repnz
pushf
scas
xorb
fcmovu
movsb
pop
dec
or
psrlq
adc
pop
in
test
shrb
orl
xchg
mov
jmp
push
cmc
je
decb
adc
js
pop
cmp
xchg
pop
aad
dec
sub
or
push
xorb
mov
mov
hlt
mov
popa
pop
mov
lds
imul
sub
fnstenv
out
cmc
adc
in
leave
lret
movsbl
js
fstps
dec
arpl
rcll
leave
pop
shl
loope
xlat
pop
rol
std
xchg
mov
pop
jnp
mov
fsubrl
or
dec
cmpsb
cmpsb
cwtl
dec
xor
xor
mov
cmpsl
pop
mov
mov
and
adc
xor
jbe
fcmovne
outsb
sub
lods
ljmp
xlat
mov
clc
mov
mov
ret
jg
add
je
mov
jns
test
mov
mov
aas
push
cmp
ljmp
xchg
popa
jns
xchg
sti
ret
stos
adc
les
js
push
add
lcall
out
fiaddl
sarb
lods
movsb
lds
enter
pop
pop
mov
loop
and
push
xchg
sbbl
xor
jb
roll
inc
fincstp
jb
xchg
dec
sub
repnz
mov
xchg
es
sbb
scas
xchg
fsubrp
repnz
int
cmp
lods
test
stos
add
cli
in
jne
repz
cmp
and
aam
sahf
adc
or
int
pop
add
aam
or
xchg
mov
xor
lret
cli
sarb
xchg
fidivl
mov
pop
mov
sbb
shll
insl
lcall
cmpsb
and
xchg
repz
orl
jge
iret
xor
cmp
xor
into
sbb
mov
push
pop
sbb
pop
test
sub
jo
andb
xor
fcomip
lods
rcr
ss
mov
jg
sbb
stos
push
lods
shld
ret
push
adcl
leave
rcll
loope
mov
ret
jp
xchg
icebp
xchg
in
in
xchg
pop
adc
adcb
xchg
and
fimull
and
lcall
push
lea
xchg
sub
lock
dec
lds
mov
sub
cld
xor
loop
xor
jno
jbe
testl
xor
mov
pop
push
in
and
lcall
cs
pop
xchg
ja
jae
jl
or
xchg
jns
in
scas
lea
add
rorb
xchg
add
insb
jl
in
ja
insb
mov
or
mov
repz
ss
lds
mov
pop
sbb
fwait
cmpsl
movsb
dec
fmul
cmpsb
and
aam
rorl
sahf
push
test
sub
push
lods
cmp
jecxz
mov
test
inc
loopne
add
ljmp
add
pop
test
stos
leave
add
jbe
in
xchg
push
push
xor
scas
stos
aaa
jns
ret
mov
and
shrb
imul
sbb
pop
sti
fmull
sbb
leave
add
pop
xchg
inc
mov
daa
jl
lahf
jnp
jecxz
jo
mov
mov
rolb
xor
bswap
int
cld
mov
push
mov
jno
cmp
addr16
popa
and
dec
lock
xchg
push
push
cmpb
fwait
or
jb
mov
pop
mov
out
xlat
push
jecxz
lret
dec
mov
mov
cmp
ljmp
mov
fiadds
pop
sub
arpl
adc
stos
add
dec
lock
hlt
js
out
fucomip
push
push
mov
divl
jg
jl
jl
pop
mov
movsl
lds
js
adc
iret
loope
fimull
testl
pushf
sti
das
push
sbb
xor
add
jle
je
add
mov
mov
clc
mov
andl
inc
test
push
orl
mov
out
push
je
rol
movsl
aam
repnz
lcall
ss
and
loopne
je
inc
or
push
mov
sti
lahf
xor
sub
out
ja
bound
cmp
xchg
cmpsl
or
popl
fistpl
ficompl
je
cs
xor
lock
add
je
or
in
or
mov
jg
jp
mov
push
popf
pop
mov
adc
addl
in
dec
add
insl
mov
stos
jle
ficompl
inc
mov
aam
jge
test
je
daa
jg
lcall
es
rolb
adc
inc
xchg
push
and
cltd
es
jp
pop
mov
jecxz
fwait
and
xor
jbe
movsb
mov
cmc
sub
and
bound
or
pop
mov
rorb
aaa
pop
jb
push
sbb
push
pop
popf
xlat
lods
loopne
pop
push
decl
push
mov
add
xchg
es
cwtl
fldcw
jg
sti
fmuls
dec
in
mov
js
repz
push
sub
int3
jnp
add
addr16
and
mov
out
jb
cmp
add
dec
sahf
xor
pop
sbb
jge
lcall
loopne
lret
inc
pop
mov
ret
ret
fwait
ret
js,pt
repnz
cmp
js
add
jb
outsl
cmp
scas
or
pop
out
ds
imul
andl
xchg
movsl
int3
jp
loope
mov
addl
dec
pop
jmp
repz
add
cmp
or
pop
outsl
xchg
fmuls
repz
dec
dec
pusha
into
inc
dec
aad
sarb
jo
mov
push
ja
jns
rcr
push
push
ja
or
xor
repnz
mov
and
in
xchg
mov
test
es
jl
pop
inc
out
inc
int3
dec
mov
pop
loopne
add
sub
dec
adc
or
inc
xor
loope
iret
out
cmp
lock
ffree
mov
out
inc
sbb
sbb
add
icebp
lods
adc
inc
and
orl
cmp
cmp
push
xchg
sbb
loop
pop
mov
xchg
inc
out
inc
jmp
pusha
test
cmp
in
push
lods
mov
in
cmpsl
xchg
inc
jl
lock
pop
xchg
out
jns
and
rcrb
loop
add
add
jle
xchg
cld
dec
push
and
mov
push
mov
cltd
sub
jmp
add
xor
inc
jmp
mov
mov
mov
popa
loop
push
loopne
ss
mov
bound
pop
das
xchg
jmp
lret
repnz
mov
mov
adc
and
and
sub
roll
add
or
int3
mov
in
and
inc
addr16
xlat
test
adc
sub
bound
mov
mov
push
leave
mov
mov
add
das
jno
lret
adc
adc
stos
lret
lahf
dec
inc
arpl
or
pop
aad
stos
xor
pop
adcl
jb
roll
adc
pop
fidivl
xor
cmp
add
adc
mov
mov
sub
fcompp
inc
xor
adc
outsl
mov
popa
mov
push
sahf
sub
pop
sbb
adc
loop
push
mov
in
inc
pop
ja
push
mov
ljmp
push
xchg
add
and
imul
lock
pop
pop
mov
fcoml
lret
adc
fcmovu
pop
stos
jo
out
shlb
dec
or
mov
fistps
js
roll
inc
mov
pusha
outsb
xor
scas
enter
or
repz
dec
sub
ss
add
fucomi
push
cmp
mov
fimuls
dec
addr16
or
and
clc
out
push
mov
sbb
nop
sbb
mov
or
rcr
jge
sbb
mov
sbb
or
pop
or
test
mov
mov
outsl
inc
adc
cmp
cli
inc
sub
and
je
cmc
test
and
fiadds
lret
fcmovb
pop
aas
es
aas
dec
dec
ret
lret
xchg
inc
loope
mov
or
cmp
push
rcrb
cmc
push
mov
mov
movsb
jmp
jg
shrb
mov
mov
mov
loopne
cli
in
dec
mov
add
les
sub
scas
pusha
xchg
outsl
addb
push
mov
gs
or
lret
and
stos
and
cs
cmpl
and
sbb
pop
sub
mov
aas
das
movsl
adc
bound
xorb
test
sbb
out
leave
push
test
jg
inc
pushf
lods
mov
mov
fnstcw
sbb
into
and
jl
mov
std
push
pop
or
lret
lcall
sbb
cltd
into
jo
sar
dec
pop
loope
mov
sbb
sbb
pop
lods
push
movsl
fstl
fistpll
and
aad
ret
push
dec
add
cwtl
mov
xor
aas
out
mov
cld
popf
xchg
xchg
sub
into
ret
jns
mov
mov
stos
adc
push
lcall
push
push
fcoms
fldl2t
movl
xorl
dec
sbb
std
bound
mov
ficoms
std
adc
dec
push
pushf
pop
add
push
pop
rcr
dec
adc
dec
adc
sub
in
shlb
test
mov
adcl
mov
fdivp
add
aad
mov
cmp
pop
cs
stc
iret
inc
sub
lea
jnp
mov
int
imul
loope
and
pop
mov
repnz
popa
fs
icebp
scas
mov
roll
sub
aam
jmp
scas
push
es
mov
jo
xchg
cld
or
pop
bound
and
jno
adc
scas
pop
and
mov
lahf
mov
cmpl
pop
jne
popf
xor
add
add
dec
jae
je
insl
jo
sbb
mov
adc
movsl
and
xor
loop
sub
mov
mov
shlb
stos
pop
xrstor
and
inc
movsb
cwtl
fnstcw
mov
jne
ljmp
mov
repz
icebp
jge
lret
sub
into
mov
rorl
pop
mul
sbb
inc
imul
outsb
andb
stos
sub
jae
xor
mov
or
int3
call
js
out
aam
mov
xor
xchg
ja
push
rol
mov
stos
out
pusha
std
daa
mov
outsb
and
or
xchg
pop
inc
fildl
dec
imul
mov
or
arpl
pop
cmp
daa
iret
pop
nop
lock
adc
cwtl
in
and
outsb
data16
inc
ret
test
push
xchg
xor
cmp
mov
ror
mov
sbb
mov
inc
test
test
xchg
jne
fnstsw
daa
pop
pop
mov
scas
call
test
addr16
movsl
movsb
pop
mov
popa
in
jmp
scas
xchg
xchg
fcomps
xor
sub
pop
dec
outsl
adc
pushf
in
dec
roll
push
stos
pusha
mov
or
out
push
pop
in
ja
adc
xchg
bound
jl
scas
pop
imul
push
inc
sbbb
push
cwtl
mov
cmp
xor
pop
adc
out
scas
fisubl
sub
mov
fiaddl
nop
dec
push
sub
xor
sahf
adc
out
je
sub
dec
cmp
mov
arpl
pop
cmp
xchg
xor
cmc
mov
rorl
dec
mov
fistpll
ret
in
stos
mov
test
subl
iret
xor
xor
add
iret
sub
xchg
scas
or
sbb
ds
xchg
mov
fs
iret
mov
aad
stos
push
insb
pop
lcall
shll
push
jnp
mov
cmc
aas
and
cltd
call
add
std
test
push
cmc
mov
jmp
jmp
add
jg
sub
repz
test
jae
dec
add
sub
jb
and
aas
lahf
adc
xor
cmc
movsb
or
and
insl
or
mov
xor
lret
cmp
loopne
rorb
sahf
jns
loopne
cmp
cmp
into
push
pop
jg
in
sub
pop
pop
test
cmp
lods
xchg
sub
shrl
push
adc
xor
hlt
adc
sbb
les
and
popa
subl
imul
cld
adc
sahf
ss
add
into
ljmp
xchg
pop
push
mov
pop
xchg
cld
mov
ljmp
cmp
mov
jo
ret
sub
test
mov
xchg
cmpsb
mov
sbb
ljmp
dec
lock
imul
adc
pop
pcmpgtb
bound
sub
jo
addr16
shll
sub
cmp
pop
push
inc
dec
sub
repnz
jg
inc
movsb
mov
rcrl
shrb
and
pop
es
jno
and
cwtl
and
fcmovne
daa
cmp
xchg
iret
add
les
sbb
repz
cwtl
xchg
push
mov
add
ficompl
ror
cmpsl
xchg
sbb
je
data16
in
popa
adc
xor
fidivrs
sbb
aas
test
or
jnp
mov
lods
cmp
repz
xchg
adc
cmp
imul
xchg
mov
pop
pop
xor
adc
mov
adcl
cwtl
and
jp
xchg
and
ljmp
xchg
xchg
xor
mov
ss
jmp
mov
or
adc
les
jne
mov
lods
gs
xchg
lock
mov
add
xchg
cmp
aaa
cmp
or
fnstenv
clc
or
nop
mov
int3
xchg
add
insl
mov
imul
sbb
flds
test
out
push
sub
jne
in
and
mov
jmp
and
data16
add
pop
outsl
or
insb
mov
push
mov
sbb
cwtl
add
call
ficompl
shll
lds
in
gs
cmp
lret
ds
rcr
mov
clc
cmpsl
push
fistl
push
mov
jle
cmp
or
inc
sahf
movsl
scas
repz
adc
xorl
scas
icebp
lock
int
or
push
pop
pop
jecxz
pop
scas
aas
push
and
mov
xor
cmpl
pop
lret
xlat
ss
lret
or
mov
sub
push
mov
data16
sub
cmc
leave
dec
mov
lahf
lock
mov
add
xchg
mov
mov
mov
xchg
ds
mov
test
or
xchg
jp
cmp
icebp
xchg
xor
mov
dec
insb
iret
mov
inc
xchg
iret
clc
ret
mov
add
enter
mov
aad
xor
or
jle
lods
aaa
int3
dec
aad
in
cld
les
repnz
outsl
or
loop
shll
aaa
sbb
fisttpll
movb
sub
fiadds
add
imul
mov
dec
scas
ja
push
cmp
or
add
xchg
lahf
fst
dec
insb
dec
dec
arpl
and
or
loop
bnd
sahf
push
jle
jg
push
mov
mov
dec
cmpsb
dec
xor
adc
add
mov
nop
mov
xchg
xchg
pop
out
insl
div
int3
sti
lret
sub
leave
int3
cld
je
out
jbe
scas
je
jle
adc
pop
testl
call
push
and
mov
xchg
shrb
jmp
push
xor
and
jno
mov
hlt
inc
xor
sbb
aam
jbe
jae
rcrb
mov
add
sbb
mov
jmp
mov
adc
lret
mov
fldenv
xchg
or
pmaxsw
pop
inc
mov
lock
inc
mov
and
and
mov
cmp
add
pop
pusha
cmp
push
repnz
and
arpl
cmpsb
pop
mov
cmp
in
orb
clc
lcall
leave
bound
jle
fsubs
xchg
add
es
adc
retw
mov
sub
cli
pop
xchg
popa
mov
cld
pop
vsubsd
fisubrs
sbb
sbb
clc
aam
jg
mov
cmpsl
sub
xchg
cmc
adc
sbb
cmp
mov
sub
cmpb
dec
jmp
push
rcrl
inc
mov
sti
test
pop
cmp
mov
je
or
inc
iret
test
repnz
cli
cmc
jo
inc
pushl
lahf
push
jecxz
mov
movb
pop
negb
dec
sbb
inc
mov
mov
push
adc
popf
jnp
pop
data16
aad
xor
and
lock
les
jnp
lret
mov
mov
sarb
aam
sahf
popa
fbstp
call
push
mov
scas
ret
pop
sti
xchg
mov
jle
xchg
daa
lds
xchg
xchg
repz
push
fimull
stos
xchg
test
cltd
pop
mov
in
sub
mov
stos
jae
or
add
int3
scas
mov
shr
sbb
push
push
stc
and
inc
ret
cmp
add
cmp
xor
inc
repnz
jp
push
dec
je
fnstcw
jbe
aad
data16
inc
sub
sbb
or
in
pop
mov
nop
scas
jno
inc
js
and
add
ljmp
into
jecxz
mov
dec
pop
ret
or
cltd
add
lods
inc
test
add
xor
add
fildll
fsubs
or
xlat
movsl
mov
fdivp
push
xchg
cmp
dec
or
and
mov
jb
add
insl
pop
dec
andl
imul
mov
divb
lds
cs
adc
sbb
addr16
inc
cmpsl
dec
sbb
in
in
fistps
jbe
cld
dec
orl
cs
mov
lock
std
and
jbe
shll
sub
cli
pop
cmp
mov
cli
std
cwtl
mov
data16
inc
adc
mov
nop
sbb
bound
jle
insl
roll
shrl
adc
add
xchg
cld
in
jnp
shrl
adc
ljmp
jns
ja
sbb
jns
pop
push
popl
jno
cmp
mov
xor
push
notb
call
pop
pushw
scas
clc
aam
xor
mov
daa
sbb
ret
in
xchg
adc
insl
in
inc
or
xor
lods
mov
call
js
cmp
sub
and
iret
sarl
enter
push
sub
sub
sbb
cmp
pop
or
xor
xchg
fcompl
inc
rcr
xchg
inc
loop
stos
jbe
sub
nop
stos
stos
jl
mov
lcall
ss
iret
dec
and
ret
subb
daa
popa
clc
je
mov
jno
add
aad
sbb
xchg
pop
jne
xor
xchg
cmp
push
sbb
mov
cmpsb
or
addb
cwtl
fwait
mov
in
cmpsb
sub
loopne
add
mov
cli
push
jb
jmp
scas
mov
fimuls
mov
mov
dec
daa
loope
cs
scas
push
gs
cmp
sub
fs
loopne
test
xchg
push
aas
mov
movsb
int3
nop
arpl
adc
adc
cmpsl
leave
add
xchg
push
jge
insl
movsb
cmp
inc
mov
add
shrl
sbb
dec
lret
jb
in
cmp
or
xchg
addr16
insl
jnp
in
mov
bound
pop
fs
pop
lret
int3
in
inc
jle
mov
push
outsl
fnstcw
std
cmp
cmp
dec
inc
stos
and
adc
mov
adc
mov
and
ljmp
gs
outsb
jo
and
in
imul
pop
dec
adc
add
mov
mov
mov
mov
jno
mov
jmp
dec
pop
fs
and
leave
scas
clc
xchg
gs
xor
push
xchg
inc
jnp
adc
sbb
mov
ljmp
xlat
xchg
in
sahf
les
dec
and
lods
mov
aad
dec
inc
outsb
insl
test
rclb
jg
test
mov
dec
les
hlt
sub
dec
mov
mov
add
lret
mov
dec
out
arpl
in
mov
repnz
push
ret
nop
push
mov
push
or
inc
movsl
mov
imul
mov
xchg
mov
push
xchg
cli
or
mov
adc
sbb
jg
int3
xor
out
jp
sub
in
pusha
daa
adc
in
push
xor
fwait
push
lahf
dec
es
inc
mov
sbb
dec
popa
inc
mov
push
cmpsb
shll
aaa
push
adc
push
lcall
scas
mov
and
mov
adc
xor
shll
divb
mov
xchg
fsubl
loop
sub
imul
sub
notl
mov
xchg
add
out
xchg
mov
rcl
mov
jo
xchg
mov
sub
icebp
js
push
mov
adc
dec
or
hlt
jnp
ret
and
das
out
repnz
push
es
push
aad
xor
mov
inc
mov
sarl
shll
push
popa
adc
incl
inc
stc
xor
cld
pop
sub
outsl
fdivp
add
shlb
add
les
sub
lods
arpl
jge
in
and
jbe
mov
shlb
shll
push
or
mov
cmpsl
or
xor
fistps
jl
pop
insl
inc
subl
pop
dec
sub
lods
push
int3
mov
in
mov
aaa
mov
test
dec
popf
lret
xchg
repz
daa
repnz
enter
ljmp
lea
or
pop
jne
mov
jae
xchg
sub
mov
out
iret
sub
scas
insl
push
sbb
xchg
idivb
jmp
add
mov
pop
cli
push
sub
mov
inc
fimull
adc
and
xchg
push
gs
cmp
pop
sub
rcr
loopne
cmpsb
mov
jbe
loop
call
add
xchg
rcrb
in
sub
and
lea
mov
cli
sti
adcl
ret
mov
or
add
fwait
pop
inc
xor
fldcw
mov
pop
sub
push
push
xchg
lret
repz
out
std
fdivrl
int
in
add
dec
mov
arpl
jecxz
mov
cmp
loopne
push
testl
icebp
adc
inc
adc
daa
ljmp
psubusw
xchg
mov
adc
in
push
mov
push
pop
xchg
leave
lret
test
or
jne
dec
cmpsb
mov
pop
ja
imul
fs
push
jge
cli
inc
mov
push
ss
jne
cwtl
idiv
jl
in
pop
sbb
xor
shrb
popa
movsb
and
dec
adc
jmp
add
lods
sti
jnp
fwait
sub
test
push
xchg
xor
fsub
sub
xchg
in
aas
adc
cltd
or
rorl
fwait
lcall
lcall
jecxz
cwtl
mov
aad
add
aad
mov
in
out
jbe
pusha
ret
xchg
inc
fcom
movsb
mov
mov
xor
cmp
inc
mov
mov
adc
jmp
mov
cmp
mov
cld
dec
aam
leave
test
sbb
pop
aad
cltd
imul
das
into
mov
and
mov
dec
loopne
xor
cmpsb
push
xor
stos
imul
mov
and
pusha
pop
std
imul
or
and
adc
sub
icebp
mov
inc
shufps
testb
mov
insb
gs
test
sahf
adc
ret
scas
xchg
loope
mov
or
loope
fmull
pop
imul
mov
xor
outsb
cmp
divl
jns
mov
push
mov
adc
repnz
jp
or
outsb
and
lock
mov
popa
fmull
test
pop
mov
out
cmp
cmp
or
fmul
xlat
push
pop
test
add
fimuls
out
inc
loopne
xchg
lahf
loope
and
fwait
jne
mov
fdivr
cmp
sub
or
enter
or
sub
or
movsl
or
mov
lods
adc
rcrl
mov
push
push
sub
xor
or
ret
leave
sar
lock
nop
gs
inc
clc
mov
cmp
mov
or
mov
pop
adc
cmp
adc
add
in
lods
mov
or
xorl
test
flds
hlt
fidivs
sarb
test
sbb
pop
pop
lock
inc
int3
rclb
inc
pusha
mov
and
fisubrs
imul
mov
or
inc
cltd
loopne
insb
mov
in
dec
mov
add
ja
sbb
push
fldt
cmp
fiaddl
xor
stc
jb
xchg
mov
divb
ja
sbb
mov
outsl
cmpsl
std
iret
jecxz
cmp
ss
jmp
in
movsl
out
xor
inc
and
or
iret
fimull
mov
lods
or
mov
cs
lock
push
pop
cmp
sub
sti
and
jns
mov
hlt
adc
sub
movsl
adc
adc
repz
xor
aas
cli
xchg
xor
repz
sub
mov
mov
push
repnz
loope
test
inc
in
pop
lret
jl
lods
mov
cmp
push
icebp
and
call
pop
lea
pop
addr16
mov
cmp
hlt
in
out
sbb
push
adc
mov
rcll
aam
insb
pop
push
stos
stos
loop
pusha
jl
jge
push
addl
dec
inc
mov
fnstenv
pop
mov
cmp
js
and
dec
fstpt
jle
push
mov
movsl
push
xchg
sub
mov
enter
or
jge
mov
mov
jp
aaa
push
dec
jle
mov
adc
cmc
dec
jns
pusha
or
jnp
push
pop
stc
out
pop
ret
sbb
push
jl
dec
inc
inc
pushl
scas
daa
cmc
nop
popa
test
push
cmp
pop
xchg
es
andl
push
xor
jmp
lret
mov
dec
push
dec
hlt
jle
xor
xchg
push
inc
rep
inc
cmp
mov
and
cmp
push
sbb
and
mov
mov
add
mov
stc
sub
jle
fdivl
dec
or
popa
sub
sub
sub
stc
lds
sub
movsb
sub
js
pop
addr16
loope
mov
fmuls
daa
fldl
sub
inc
fninit
mov
test
mov
push
sbbl
out
adc
icebp
mov
dec
addr16
inc
dec
test
subb
inc
mov
mov
jmp
shr
repnz
jp
stos
imul
push
repz
and
sbb
sbb
je
nop
insb
xchg
xor
fbstp
mov
jecxz
add
sbb
dec
cmp
mov
data16
loopne
xchg
das
dec
mov
mov
or
cmp
dec
movsb
loope
push
adc
or
aas
dec
push
sub
push
popa
clc
add
sub
and
adc
cmc
outsb
xor
icebp
int3
dec
insb
in
pop
mov
xor
imul
shll
pop
cmp
dec
pop
pop
mov
xchg
ja
insb
insb
inc
push
sub
sub
aad
sub
mov
xchg
mov
clc
fs
cltd
mov
sbb
mov
movsb
mov
xor
add
aas
dec
dec
sbb
out
sub
iret
xchg
sbb
lock
arpl
into
dec
sbb
jb
les
sub
mov
out
push
and
push
js
sub
push
mov
nop
push
pop
call
jl
cltd
ljmp
mov
pop
jne
in
push
sbb
dec
scas
leave
je
mov
fisubrs
decl
fcomp
out
lods
mov
sbb
fists
es
in
mov
fcom
and
mov
dec
ficompl
mov
xor
aam
cmp
xor
rcrb
cmp
shl
mov
push
mov
sub
mov
dec
pop
loope
or
mov
cs
out
xor
pop
pop
mov
idiv
fsub
in
and
jns
xor
lea
nop
testb
clc
adc
fmuls
in
aam
data16
xchg
and
ds
dec
lret
mov
pop
je
mov
jb
nop
pop
nop
sbb
and
add
adc
xor
jnp
mov
sub
sarb
imul
popf
push
xlat
jo
or
pusha
addr16
cmpsl
jb
pop
into
add
dec
shlb
aad
std
pop
pop
ss
and
lea
mov
ja
js
js
xlat
fldt
mov
outsb
sbb
subb
imulb
and
mov
dec
or
in
pop
out
ljmp
lds
push
das
add
orl
sub
sub
js
aad
mov
add
ja
inc
mov
rorb
push
xchg
insb
aam
push
dec
push
mov
fldenv
jne
lods
or
cmp
xchg
daa
loopne
xchg
sbb
hlt
adc
or
add
jmp
sbb
in
xlat
xor
icebp
mov
lret
lahf
out
addr16
aam
loop
cmp
movsb
scas
in
scas
jns
cmp
inc
pop
cmp
xchg
mov
mov
bound
mov
and
push
adc
lret
push
add
int
mov
outsb
pushf
push
xor
jmp
jb
xor
cli
cmp
enter
xor
xchg
aas
sbb
es
cmpsb
and
orl
fs
and
inc
fstps
add
inc
mov
xchg
adc
data16
pop
mov
sub
leave
mov
daa
lahf
push
pop
imul
inc
incl
rcrl
or
pop
test
outsl
scas
sub
jae
loope
mov
xchg
push
pop
test
push
inc
fdivrl
movsb
insb
sar
or
xchg
pop
pop
in
pop
rcrl
jo
dec
adc
leave
das
imul
push
jne
loopne
pop
into
push
in
into
or
rorb
inc
xlat
fldcw
fs
test
test
jg,pn
rorl
pop
jbe
or
daa
scas
and
std
imul
inc
mov
in
pop
sub
push
mov
aaa
cld
aad
bound
enter
pusha
push
shl
cld
faddl
inc
dec
xchg
push
in
xor
inc
dec
cmovae
subb
push
mov
fnstcw
push
mov
jnp
out
cmp
dec
jl
dec
sbb
mov
scas
jae
ss
dec
hlt
pop
inc
jecxz
pushf
xchg
or
notb
mov
in
in
dec
cld
jb
lock
in
mov
or
jecxz
sub
movsl
push
push
xchg
add
inc
loope
jle
rcrl
xchg
inc
aad
test
rorb
mov
stos
adc
mov
xor
shrb
push
arpl
adc
aas
mov
inc
aam
sub
sub
scas
fwait
add
mov
add
popa
repnz
pushf
lahf
pop
mov
adc
jmp
das
in
stos
mov
test
fs
popa
test
movsb
mov
pop
jo
xchg
sub
repnz
push
adc
xor
cli
pushf
test
ret
dec
sbb
pop
es
push
adc
cwtl
xchg
inc
or
mov
mov
jae
inc
xor
fnstsw
sub
add
xor
jp
xchg
mov
and
cwtl
jecxz
xchg
lock
out
sub
mov
add
out
cmpsb
sub
mov
push
out
cmp
mov
cmpsb
push
push
sbb
pop
adc
or
sub
sub
shr
fidivs
mov
into
xchg
xor
dec
cmp
and
out
jg
lods
cmpsl
mov
lahf
sbb
lret
fsubr
sub
cmc
mov
mov
jp
sbb
je
adc
loop
aam
dec
shrb
out
xchg
mov
mov
cmpsb
nop
cwtl
fisttps
jae
dec
imul
xchg
mov
vmptrld
andb
fisubl
pextrw
xchg
pop
std
and
loop
jb
or
fs
sub
rcll
movsb
pop
add
mov
push
stc
adc
pop
test
lds
test
dec
xor
cmp
ret
adc
dec
sub
push
out
xor
fdivp
jbe
mov
jnp
jecxz
sbb
mov
push
xchg
sub
jns
fcomps
add
inc
repz
imul
out
xchg
nop
and
mov
sbb
sub
dec
lret
or
add
xchg
out
jecxz
push
mov
bound
mov
fcoml
push
or
mov
dec
jl
sbb
test
sub
pushl
mov
pop
fucomi
out
out
jno
mov
ss
sub
mov
sbb
cmp
xchg
sbb
negl
cmp
imul
and
testb
mov
mov
inc
test
xchg
repz
push
mov
ljmp
xor
push
lcall
adc
ret
inc
inc
stc
mov
jb
outsl
es
out
jge
loopne
xor
repz
clc
cli
add
fwait
xlat
int3
aam
testl
sub
ret
lret
jne
lods
in
stos
cmp
cwtl
mov
mov
mov
ds
jo
mov
dec
push
cwtl
rclb
and
stos
mov
outsb
xchg
sub
sub
dec
repz
push
out
sarl
and
jno
dec
adc
lcall
push
ds
sub
inc
ja
in
sub
bound
inc
scas
cs
cwtl
incb
bound
lret
mov
repz
push
mov
call
mov
shll
call
in
ja
adc
lea
pop
xchg
scas
xchg
jae
movsl
mov
out
cmp
mov
rcll
cmp
mov
iret
add
push
pop
inc
loope
stos
jp
dec
dec
int3
lds
imul
dec
add
mov
push
loope
xor
fsubrl
loope
pop
dec
jb
mov
mov
pop
les
mov
mov
sbb
imul
dec
adc
and
mov
dec
out
in
and
stos
in
push
pop
add
test
and
push
push
scas
xchg
shl
push
les
movd
mov
loopne
cmp
push
xor
adc
or
in
dec
xor
ret
inc
mov
lcall
mov
shll
add
in
cwtl
shlb
push
scas
pop
movsl
lods
mov
xorl
pop
fucomi
push
mov
mov
dec
cmp
int
cmpsb
mov
jp
lods
push
arpl
pop
stos
outsl
imul
divb
divl
aam
xor
pop
les
loopne
xchg
insl
add
sbb
es
sbb
pop
daa
cmpl
cltd
insb
jne
jns
add
imul
rcrb
addr16
and
sbb
ret
mov
fstpl
mov
in
jnp
dec
push
adc
xlat
adc
inc
imul
mov
mov
fistps
shll
pusha
popf
xor
popf
mov
inc
and
and
rcrb
mov
jns
cmpsb
sti
ds
icebp
sub
je
push
mov
cmp
call
int3
mov
pop
xchg
mov
mov
rcrb
shlb
fstl
pushf
das
mov
push
sbb
popa
push
icebp
fwait
imulb
push
addr16
jge
mov
cmpl
xchg
ret
adc
js
out
xchg
pushf
dec
popf
shlb
push
pop
xchg
out
sub
fwait
fwait
out
dec
stos
add
push
xchg
sbb
clc
stos
push
outsl
jne
enter
push
push
lret
jb
arpl
in
clc
dec
sub
int3
lods
pop
fs
cmp
jo
jb
push
fstpt
das
iret
xchg
push
mov
mov
lcall
in
ret
icebp
fidivl
cli
jns
jge
xlat
and
lock
xchg
das
scas
mov
test
jno
imul
aas
stos
mov
fnstenv
mov
xchg
xchg
pop
inc
dec
rorl
imul
mov
icebp
sbb
add
lea
xchg
sub
adc
ror
test
jne
lods
mov
insb
cmc
dec
outsb
aam
scas
push
fldl
or
adcl
repz
dec
sub
inc
ss
imul
fimull
inc
mov
in
dec
push
dec
ret
sub
arpl
pop
lods
std
lcall
jnp
outsl
xor
cmp
scas
out
cwtl
cmpsl
pop
loope
xor
cmp
inc
push
aad
sub
popf
lahf
daa
push
push
aaa
xchg
idivl
mov
int
mov
jne
add
cmp
lahf
jno
rcrl
sbbb
test
jo
mov
and
dec
test
cmpsl
cltd
popa
adc
bound
cmp
out
dec
xchg
jne
not
lret
adc
or
add
ds
lret
cmp
inc
outsl
pop
ret
data16
or
mov
lods
xchg
jo
cmc
cmp
cld
je
rorl
and
dec
testb
add
insl
lret
add
cmc
jcxz
sarl
sub
pop
call
push
jb
jecxz,pn
lret
cwtl
out
xchg
or
inc
and
cmp
add
cmp
cmp
lods
pushf
inc
stc
jae
aam
test
sbb
push
sub
xor
andl
stc
outsl
ret
cmp
dec
xor
hlt
or
lock
jecxz
xlat
addr16
fwait
dec
push
in
pop
sub
clc
movnti
adc
inc
dec
inc
cld
lret
xchg
xor
lods
push
inc
xchg
cmp
sub
adc
mov
rcll
push
adc
add
sarb
push
mov
inc
loopne
jne
sbbb
dec
je
scas
dec
movsl
inc
into
adc
scas
mov
pop
mov
imul
call
xor
or
repz
sbb
bound
repnz
and
and
outsb
pop
ret
fistpl
sbb
icebp
cmpsb
sbb
loop
js
xor
push
and
sub
jno
scas
and
clc
xchg
jb
pop
inc
jns
add
mov
scas
shll
push
leave
cmp
outsl
je
adc
mov
pop
insl
in
faddl
jno
sbb
call
andb
lea
rorb
xchg
repnz
pop
mov
inc
sub
mov
jnp
xchg
cmc
pop
orl
stos
add
loopne
or
arpl
in
sarb
sbb
xchg
mov
push
call
icebp
lock
mov
in
mov
mov
fcomip
flds
mov
rclb
mov
fnstenv
push
scas
popl
push
stos
sub
gs
or
scas
lea
lods
jle
pop
jmp
lods
loopne
cmp
add
sbb
mov
scas
cmp
in
pop
insl
pop
and
lods
fwait
mov
addr16
std
fisubs
fildll
lret
pop
jge
xor
and
rorl
orl
scas
sbbl
mov
jne
pop
dec
in
pop
lods
jge
push
cmp
mov
xor
loopne
or
testl
mov
test
adc
lahf
dec
or
mov
jmp
cmpb
adc
jmp
dec
outsb
xchg
xchg
lods
pop
pushf
cmp
pusha
repnz
jb
adc
inc
dec
and
inc
pop
ds
push
adc
jle
and
push
or
jge
jge
rcrb
push
in
sub
cli
fsubs
into
pop
cmpl
xor
jmp
pop
adc
daa
xor
mov
mov
mov
cmp
roll
std
shl
xor
test
jle
inc
test
aas
icebp
js
stc
cltd
cltd
push
int
push
push
idivl
repz
pop
sbb
lds
sbb
rol
xchg
int
divb
jl
pop
and
dec
adc
cmp
inc
daa
jl
cmp
adc
and
inc
dec
jbe
ljmp
and
cwtl
mov
jbe
jmp
aad
sbb
lahf
mov
insl
lods
call
aam
jbe
xchg
mov
mov
add
xor
push
inc
adc
add
add
andl
fcompl
ret
loop
divb
xchg
inc
inc
pushf
std
pop
mov
fsubr
mov
and
loope
mov
push
aad
and
aam
and
bound
std
jae
adc
rclb
sahf
dec
jmp
aaa
rclb
roll
adc
ljmp
xchg
sub
push
sub
mov
aaa
ret
test
xchg
sub
fs
sub
lret
and
adc
lret
clc
mov
rorl
loopne
das
inc
adcl
in
mov
out
jmp
outsb
push
fwait
cmp
xchg
cmp
jbe
data16
movsb
xor
rcr
lods
ds
and
shlb
mov
inc
push
mov
sbb
int
and
xchg
imul
dec
enter
mov
jge
pop
dec
jb
mov
and
cmc
out
cmpsl
arpl
fwait
outsb
leave
jmp
xchg
cmp
adc
in
mov
xchg
rcrb
loop
stc
add
data16
jns
ret
lods
fimuls
push
or
add
fildll
pcmpgtw
push
pop
insb
das
loope
sbb
out
loope
inc
cli
pop
pop
das
hlt
jbe
push
and
rorl
cli
fwait
mov
cmpsb
cmpsl
cmp
fwait
lods
jle
pusha
lcall
mov
lods
jb
lahf
xor
cli
ss
ret
std
into
popf
cli
and
xchg
xchg
cmp
xchg
scas
inc
popa
inc
push
xchg
fcmove
cli
imul
into
mov
lret
mov
fmul
insl
xor
les
sbb
mov
xor
ljmp
push
push
stos
test
les
cmp
or
mov
out
movsb
add
addr16
in
xor
in
repnz
mov
mov
push
into
inc
je
add
pop
enter
fcmovnu
fisubrs
push
adc
sbb
mov
cmc
pop
aam
dec
popf
das
mov
int
inc
leave
fs
addr16
xchg
inc
mov
dec
ja
in
enter
jmp
popa
and
cmpsb
push
mov
fdivl
nop
insl
pop
popf
mov
pop
cwtl
push
xchg
push
sti
xor
shll
sti
cmc
ror
outsl
adc
cltd
jmp
mov
cmp
out
mov
sbb
stc
pop
mulb
pop
xor
cli
lcall
jge
add
xchg
mov
lahf
dec
leave
jl
sbb
cmp
sahf
pop
data16
sub
mov
xchg
mov
push
add
sub
daa
add
aaa
imul
inc
cltd
aas
cmp
mov
adc
out
dec
repnz
cmp
lahf
stos
cmp
mov
cld
scas
stos
ljmp
fcomp
sub
out
pushf
jecxz
loopne
fmuls
imul
push
ret
leave
enter
insb
xor
loopne
cmc
xchg
js
jge
popf
into
dec
and
das
ss
std
enter
cmp
in
cmp
xchg
jo
mov
push
adc
in
xlat
dec
jns
rorb
loope
test
sarb
mov
int
sbb
cmp
lret
loop
mov
lret
ljmp
ss
push
xchg
mov
and
jo,pn
movsb
insb
mov
leave
adc
sbb
scas
dec
lret
stos
loope
fildll
stos
lock
cs
mov
push
cmp
lcall
inc
pushf
bound
jne
daa
jbe
cmpsl
lock
das
mov
mov
lods
sti
cwtl
dec
scas
pop
fidivrs
or
out
cli
push
daa
lds
xor
outsb
les
xorb
jp
mov
pushf
mov
pop
aas
cmpsb
push
pop
popa
pushf
in
ret
mov
out
cmp
outsl
popf
mov
pop
push
xor
fiadds
andb
test
adc
jg
addr16
or
jne
das
dec
orl
cmpsb
movsl
adc
dec
loope
sub
imul
mov
sub
int3
push
mov
in
push
pop
or
test
clc
sbb
adc
mov
jmp
int
jne
dec
ds
jecxz
lods
mov
test
sahf
jg
xchg
sbb
dec
mov
fimull
sti
test
sti
mov
rolb
pop
dec
jle
xchg
adc
pop
and
sbb
lock
decl
add
mov
and
pop
mov
aam
outsl
xchg
jecxz
add
push
and
pop
push
mov
ja
xchg
mov
xchg
repz
inc
dec
cmp
sar
add
xchg
popf
addl
jbe
dec
add
or
pop
xchg
stc
pop
push
loop
and
lret
jb
mov
std
push
push
mov
sbb
sahf
adc
aaa
jmp
popa
hlt
inc
push
mov
out
dec
add
pop
divb
into
xor
jl
jg
andb
lods
xchg
pop
dec
sub
cltd
fsts
sahf
addr16
jge
shll
std
cmp
stos
mov
dec
push
push
mov
popa
sbb
jmp
mov
fisubs
cmp
add
dec
lret
enter
imul
inc
cmp
lcall
jnp
cwtl
mov
test
in
add
mov
lods
jne
xor
jmp
dec
sub
fsubrl
pop
in
nop
sub
mov
jl
fmull
in
and
inc
or
addr16
loopne
in
pop
mov
movsb
and
mov
inc
xor
lret
sbb
mov
jnp
or
lea
cmpsb
dec
out
ljmp
push
jbe
push
xor
imul
mov
std
enter
les
pop
jmp
jge
cwtl
cmp
fs
jbe
mov
arpl
inc
fisttps
sar
mov
movsl
mov
jg
call
stos
movsb
es
rcll
cli
push
xchg
mov
and
inc
pop
clc
mov
dec
nop
inc
mov
addb
out
mov
sbb
push
cmpsb
inc
pop
push
pop
and
mov
and
push
jbe
lret
jmp
test
cwtl
jmp
call
and
test
sub
in
cwtl
imull
cmc
pusha
rolb
pushf
mov
pop
cmp
add
fdivrl
jecxz
jnp
iret
push
fdivl
iret
inc
mov
es
sub
jg
pushf
cmp
push
inc
mov
jae
cmp
pushf
stc
cmp
pusha
fistpll
enter
testb
out
mov
cwtl
and
dec
jge
jbe
inc
mov
fwait
adc
sub
xchg
mov
ucomiss
jmp
int
popa
push
dec
lcall
test
dec
out
adc
and
pop
ljmp
add
lock
sti
sahf
in
lahf
lods
or
mov
xchg
add
sub
fnstenv
mov
mov
sub
sbb
and
insb
loope
inc
rorb
lcall
movsl
aaa
outsb
sbb
cld
push
pop
lods
shll
pop
sbb
inc
xchg
pop
out
or
insl
cmpsl
jmp
das
repnz
inc
ljmp
push
and
ret
mov
inc
insl
leave
adc
mov
dec
sti
pop
push
lcall
fsubrs
fs
rolb
sbb
scas
xchg
mov
cli
std
sahf
inc
add
pop
in
push
andl
leave
iret
dec
es
rclb
push
test
in
sarl
aad
out
movsb
xchg
popf
jbe
push
and
lock
ljmp
ret
adc
add
xchg
enter
xchg
jbe
aad
daa
jae
or
movl
pop
mov
and
add
data16
pop
imul
arpl
loop
cmp
dec
and
outsw
shlb
dec
push
cmp
ljmp
das
jno
scas
cmc
lods
jge
mov
or
nop
scas
adc
jle
jge
mov
xchg
das
aas
push
js
fwait
loop
bound
mov
and
mov
gs
movsl
push
mov
sbb
call
push
pop
xlat
daa
push
pop
cmpsb
mov
adc
dec
cltd
fwait
cltd
adc
jle
js
dec
mov
pop
sub
cmpb
and
mov
pop
nop
decb
sbb
aas
mov
xchg
sub
test
mov
push
push
xor
adc
aaa
ljmp
lret
inc
xor
pop
out
ljmp
pusha
cld
add
ss
dec
stos
ljmp
dec
popa
nop
imul
push
ja
adc
rorb
mov
fwait
jnp
enter
xorb
int3
ret
mov
es
sbb
mov
out
push
add
cmpsb
test
adc
xchg
and
test
ficomps
fistpll
push
in
jp
fwait
scas
pop
stos
out
imul
scas
push
and
pop
imul
xchg
jne
imul
add
scas
pop
test
xchg
loop
popa
sbb
mov
inc
enter
jns
add
xchg
jne
sub
xchg
out
dec
movsb
pop
test
cmp
sar
scas
addr16
sub
adc
fdivr
dec
pop
ds
out
inc
enter
jp
sbb
xchg
pop
or
fisttpl
movsb
aas
jp
js
pop
xor
in
filds
push
rcrb
rcll
repz
sub
push
repz
jo
movsb
pusha
and
push
push
pop
in
cmp
mov
fsubrs
adc
lea
aam
shll
loope
mov
xchg
jne
dec
stos
cmp
in
jecxz
add
add
jns
scas
mov
in
fimuls
cmc
or
rcll
subl
testb
out
dec
push
and
mov
dec
lods
leave
bound
jb
mov
fcmovnu
mov
jle
xchg
xlat
cmpsb
nop
das
popf
in
mov
push
test
mov
mov
orl
aam
mov
scas
fdivrs
mov
xor
repnz
popa
ret
push
pop
mov
xchg
pop
lock
push
sbb
mov
adc
push
outsb
sub
jnp
stos
insb
add
cmp
pop
fwait
dec
js
mov
fldcw
sbbl
in
in
mov
inc
or
push
imul
mov
xlat
cli
jmp
bound
lret
push
call
xchg
cltd
rorl
and
adc
pop
loopne
movb
mov
jl
inc
lock
add
popf
out
das
lret
cwtl
in
aas
mov
and
sahf
ss
repz
test
aam
mov
stos
or
lret
shlb
jge
in
out
in
pop
rcll
pusha
jbe
pop
mov
fwait
ror
or
aaa
pop
jge
lahf
pushf
aaa
fsubrl
jmp
jl
sti
or
call
lods
lret
bound
sbb
sahf
test
pop
lds
push
or
movsl
lea
aaa
out
call
sbb
mov
leave
sti
jle
icebp
jo
pop
shr
push
call
leave
popa
jmpw
push
adc
addb
int3
std
jg
scas
inc
xchg
clc
mov
into
jo
sbb
fcomi
insb
dec
mov
xchg
push
mov
loopne
ret
test
pop
pop
bound
dec
lds
xchg
inc
mov
push
xchg
xorb
sbb
enter
ret
fdivl
push
adc
je
mov
sub
inc
xlat
push
rorl
imul
insl
add
lret
jge
aam
ds
dec
mov
repnz
dec
psrad
mov
xchg
movsb
sahf
push
pop
push
and
xchg
fwait
scas
cmp
adc
rcrb
sbb
adc
adc
mov
inc
jae
sub
mov
dec
sub
js
or
pop
sub
arpl
scas
bound
pop
insl
mov
int
push
divb
push
std
in
mov
iret
inc
or
dec
or
jno
cmpsl
cmpsb
movsb
push
push
lret
jecxz
mull
xchg
dec
and
pop
mov
std
loope
dec
adc
and
dec
adc
fcomp
lahf
aad
ret
xchg
hlt
jae
lds
xchg
loopne
and
mov
ljmp
in
sbb
shrb
xchg
pop
outsb
mov
adcl
xor
das
pop
fcoms
pop
mov
in
aas
rorl
pushf
in
nop
popf
push
xchg
jl
stos
jg
inc
push
insl
outsl
or
cmpsl
data16
ficompl
test
dec
in
cmp
lds
rorl
push
dec
std
push
outsb
mov
push
lret
xchg
jae
pop
lcall
jae
je,pt
or
push
sub
jb
mov
add
mov
cmpsl
jbe
popa
cmp
push
in
lds
dec
mov
out
cmp
inc
cmp
popf
rolb
or
or
sbb
out
add
sbb
lahf
inc
shlb
dec
lahf
test
ds
aad
pop
repz
inc
adc
int3
mov
mov
out
xchg
cli
outsb
std
flds
loopne
lods
ds
addr16
push
mov
xchg
adcb
popf
sbb
lods
jge
push
xchg
call
mov
popa
cli
mov
gs
xchg
orb
scas
inc
xor
xchg
sub
mov
xchg
popa
int3
es
enter
insl
inc
scas
outsl
jge
subb
testl
bound
frstor
jmp
shrb
dec
imull
repnz
cmp
sbb
fwait
cmp
mov
js
fwait
mov
inc
test
mov
pop
mov
jne
sbb
inc
push
jmp
mov
in
xor
aas
lret
aam
jns
shlb
cmp
and
push
int3
cmp
cmp
xor
xor
lods
mov
and
pop
push
push
dec
add
dec
cld
jns
aam
adc
aad
sbb
imul
repnz
xchg
adc
dec
jg
je
hlt
xor
inc
rcll
and
push
inc
iret
push
add
pop
cmpsb
test
or
das
aas
imul
pop
aas
mov
test
out
in
mov
decb
fildll
cmc
stos
pop
or
aaa
inc
aas
test
movsl
sbb
push
lds
jge
inc
push
fcmovnbe
out
sbb
mov
loop
test
leave
lahf
jg
stc
pop
in
pop
push
cmp
pop
daa
sub
fisttpll
cmpb
popf
ret
addl
data16
pusha
push
cmp
push
fcoms
leave
mov
insl
pushf
dec
jo
adcb
addl
hlt
cltd
out
lahf
sub
xchg
outsl
sti
xchg
mov
int3
aas
enter
jbe
insl
pushf
test
sbb
push
or
xchg
cld
push
jno
ret
mov
push
mov
jle
das
ja
cmp
xchg
mov
pushf
jg
jo
hlt
push
adc
sbb
sub
ja
mov
imul
jae
cs
jae
push
loop
sbb
mov
cmp
mov
mov
add
jne
jns
add
outsb
inc
in
sub
xchg
add
xor
xor
dec
dec
dec
mov
std
jmp
cmp
dec
ret
mov
xor
sbb
arpl
mov
xor
out
shlb
sti
rclb
mov
pop
daa
les
mov
mov
sub
incl
ljmp
fsubl
aaa
push
jp
mov
int3
push
jo
pushf
iret
cwtl
jge
je
pop
adc
roll
ljmp
and
adc
jp
adc
loop
rorl
cwtl
push
sbbb
pop
xor
nop
lahf
stc
call
or
cmp
push
test
cmc
jmp
xor
pop
inc
adc
fwait
sbb
aad
or
daa
repz
mov
sbb
pusha
fsts
sbb
jb
loope
negl
test
jno
je
clc
into
pop
lret
js
addb
sti
adc
inc
lret
pop
mov
push
xor
cltd
out
bound
lret
xor
fwait
cli
ja
call
sub
push
shlb
lds
cmp
lods
jl
mov
popf
ss
xlat
mov
cmp
xor
fsin
aad
imul
inc
mov
xor
push
js
push
in
arpl
xchg
ret
and
imul
aaa
ds
in
inc
adc
pop
mov
cld
inc
or
ficoml
hlt
pop
push
icebp
sahf
inc
mov
aaa
test
mov
inc
adc
orb
or
and
jle
mov
sbb
popa
pop
push
push
dec
cmp
xchg
outsl
mov
lock
xchg
fcmove
xchg
and
inc
in
and
xor
fldcw
jnp
adc
push
xchg
push
mov
xor
fwait
std
ljmp
mov
addb
scas
shrb
and
adc
pop
mov
inc
xor
stos
add
inc
jle
adc
ds
sub
int
push
mov
rcll
mov
jg
pop
das
add
xor
clc
jbe
adc
cmp
pop
mov
jge
or
push
loop
mov
adc
rep
jnp
negb
adc
fwait
bound
and
mov
fisubrs
cmpsl
jbe
mov
bound
das
jmp
cld
je
pop
jecxz
leave
lcall
icebp
lock
xchg
sbb
dec
dec
mov
mov
mov
and
outsb
clc
cld
push
adc
push
jmp
add
dec
aas
insl
das
push
mov
mov
call
push
mov
lea
jle
jg
and
ret
in
jns
adc
and
pop
shll
sbb
jns
lcall
cld
jbe
and
js
adc
sub
inc
or
rclb
mov
pop
jmp
lahf
dec
cmpsb
sub
mov
add
add
fildll
lea
sti
mov
jge
lret
xchg
sbbb
pop
pop
test
sahf
test
adc
mov
enter
stos
and
js
scas
adc
adc
lock
pop
xor
aas
ret
dec
mov
mov
in
inc
popa
and
in
shr
jb
das
or
add
rclb
mov
mov
push
ficoml
lret
mov
sbb
dec
shr
int3
xchg
ljmp
in
das
popf
shlb
out
cmp
mov
pop
pop
pop
inc
and
and
pop
subl
adc
loope
and
dec
inc
stos
add
movsl
xor
decl
push
test
mov
add
push
in
movsl
xchg
mov
daa
jecxz
jnp
nop
stc
test
mov
cltd
inc
mov
out
loopne
or
in
add
nop
lret
inc
les
or
sarb
call
pop
gs
fs
in
sub
mov
jecxz
in
jo
incb
mov
cmp
ret
mov
and
popf
ret
pusha
dec
mov
int3
push
pop
and
dec
sub
movsl
test
in
cmpl
adc
ret
mov
sbbb
sti
rclb
test
test
mov
dec
inc
fmull
lahf
inc
ret
dec
mov
and
mov
jae
nop
insb
and
mov
clc
lret
inc
pop
jg
jmp
xor
push
imul
ljmp
add
shlb
xchg
push
fstpl
xorl
movsb
adc
mov
mov
sub
mull
into
pop
pop
pop
push
sti
dec
pushf
ja
inc
sbb
push
xor
lret
mov
loope
repz
mov
jp
cmpsb
jmp
inc
sahf
adc
inc
xchg
or
lahf
add
sbb
inc
xchg
mov
cmp
movsl
pusha
imul
cltd
lock
pushf
jecxz
movsb
sub
shrb
or
jecxz
aaa
shll
jns
push
inc
or
add
cmc
pop
push
fdivl
inc
mov
ret
sub
jecxz,pt
dec
xor
aas
push
inc
sub
inc
frstor
std
movsl
jbe
pop
arpl
movsb
xor
icebp
mov
icebp
mov
arpl
inc
cwtl
inc
lahf
test
daa
fisubrs
repz
call
mov
sbb
xchg
cld
test
dec
aas
pusha
jmp
es
stos
sbb
cmc
push
aas
pop
xchg
popa
fldcw
ficoml
push
loope
jge
pop
jle
dec
fbld
aaa
ret
jp
and
add
loope
shr
push
mov
and
dec
in
mov
xor
cwtl
xor
movsb
ljmp
enter
inc
push
lret
jmp
inc
icebp
inc
test
adc
cmpsb
adc
iret
lods
xchg
outsl
mov
mov
outsb
and
adc
js
xchg
data16
ljmp
or
xchg
push
scas
push
lods
aas
jg
shrb
test
out
pop
mov
in
and
mov
or
inc
addr16
cmp
aas
hlt
and
ret
insb
shlb
pop
fadds
lods
sbb
xor
sti
ret
mov
lods
mov
pop
mov
sbb
test
mov
adc
mov
xchg
push
into
sbbb
push
rclb
mov
jns
mov
xor
or
xchg
nop/reserved
pusha
daa
xlat
xor
mov
fs
stos
xor
out
jae
mov
cmp
in
cmpsl
or
adc
ficompl
pop
movsb
mov
mov
pop
dec
imul
in
leave
adc
cmp
sti
push
inc
leave
popl
jmp
inc
ja
sub
mov
or
cmp
insb
xor
fs
adc
sub
inc
outsl
dec
lods
sbb
mov
shll
cmp
scas
dec
adc
pop
add
mov
xchg
mov
dec
shrb
int
in
insl
daa
inc
mov
lock
ljmp
ret
into
pushf
xor
pop
xor
pop
mov
and
cmp
or
pop
rorl
dec
mov
hlt
pushl
ss
dec
outsb
or
aam
mov
stos
scas
push
dec
or
push
inc
pushl
inc
pcmpeqd
or
stos
cmp
mov
sub
je
push
mov
les
inc
shlb
insb
mov
mov
cmp
dec
xchg
xor
dec
and
mov
push
push
mov
mul
xor
in
sti
or
out
xor
lods
loope
lahf
mov
imul
xchg
pop
xchg
das
outsl
rcrb
fcoms
jb
dec
cmpsb
xor
addr16
imul
mov
mov
mov
jns
je
repnz
pop
pop
lret
enter
sbb
and
scas
addb
mov
fnstenv
jmp
test
cmpsb
ds
add
in
xor
scas
repz
repnz
js
scas
int3
adc
test
inc
xor
xor
push
fisubl
int
test
xchg
imul
or
lock
add
rclb
xor
add
out
jl
cmp
dec
sbb
sbb
jg
mov
inc
mov
popf
out
xchg
mov
popa
cmp
and
es
inc
jmp
fldenv
xchg
jge
or
xlat
sbb
cmc
outsl
rcrl
xor
imulb
loop
inc
or
cmp
aad
ret
fdivs
and
cwtl
stos
push
mov
xor
fdivrp
inc
mov
sbb
out
xchg
das
sbb
push
inc
push
out
pop
in
pop
jp
xor
pop
sub
test
inc
push
not
adcb
rolb
aaa
insb
or
cmp
je
dec
lods
mov
movsl
insb
loopne
adcb
pushf
cmp
filds
mov
jno
test
and
mov
jge
test
adc
inc
addb
lock
inc
out
sub
loopne
jae
dec
rcrl
int3
jmp
pop
inc
mov
mov
iret
in
mov
out
leave
lahf
mov
cmpsb
mov
jp
xchg
std
xchg
xorb
xchg
jmp
jge
jo
cli
call
push
je
pop
push
je
std
aad
je
inc
cmp
or
mov
mov
pop
mov
xlat
in
dec
shlb
mov
push
aas
mov
or
jge
xchg
jmp
aam
decl
in
or
icebp
pop
mov
mull
adc
jb
call
jae,pt
in
dec
iret
push
cmp
add
cmp
dec
cld
xchg
std
stc
in
sub
or
xchg
cld
icebp
decl
ror
in
inc
iret
gs
stos
stos
mov
repz
jecxz
test
xor
sbb
mov
stos
test
lcall
sub
mov
inc
sbb
mov
push
imul
popf
dec
push
lret
lahf
repnz
pop
js
mov
add
adc
mov
shl
add
adc
out
mov
and
push
jl
fldcw
mov
mov
ljmp
popa
sbb
shlb
sarl
popf
dec
pop
adc
js
in
xchg
push
pop
cli
push
cmp
loopne
les
lds
lret
je
push
push
sti
and
loop
aad
dec
in
push
shll
arpl
cmp
aam
jne
push
jecxz
shrl
pop
and
bound
pop
pop
xor
jge
andb
dec
mov
fcmovu
test
sbb
pusha
cmp
iret
sbb
std
clc
push
cmc
cmpl
sub
aas
or
leave
ljmp
cmp
lock
scas
les
cmp
movsl
xchg
insl
push
cmpsb
insl
jl
pop
fists
fdivrl
pop
scas
daa
cwtl
mov
aam
in
xchg
ljmp
pop
mov
pop
xchg
xchg
test
in
dec
and
popa
sbb
jne
jp
sbb
sti
pusha
xor
ds
jno
xor
push
pop
push
mov
shlb
ret
push
dec
jo
into
push
push
mov
or
add
lcall
inc
stos
inc
into
mov
sbbb
fisubrs
bound
cmp
jecxz
adc
aas
adc
lea
in
bound
sbb
mov
dec
sbb
xor
sbb
xchg
lret
jmp
into
mov
pop
jecxz
jno
dec
inc
insb
mov
cld
clc
cmpsb
test
dec
in
push
sbb
repnz
aad
adc
and
mov
lret
inc
mov
lret
rolb
outsb
xchg
ret
inc
push
jb
jne
xchg
xlat
fdivp
xlat
mov
add
int3
xor
testl
test
jb
xchg
dec
or
xor
inc
sbb
sbb
sub
cmp
mov
jg
cwtl
adc
in
popf
or
shrb
sti
dec
rclb
lods
imul
out
incl
mov
dec
lret
mov
mov
add
sub
jmp
mov
push
inc
inc
leave
inc
int3
icebp
jae
sti
enter
pushf
gs
jmp
sub
mov
and
lahf
mulb
lock
and
pushf
mov
sbb
in
scas
inc
stos
jmp
loope
pushf
rol
pushf
xchg
repz
mov
and
pop
pop
lds
jbe
andnps
into
pop
jb
pop
ljmp
push
xchg
jecxz
lcall
sub
repnz
lret
in
push
aam
jecxz
aam
sbb
je
mov
loop
lods
decl
mov
cmpsb
xchg
push
adc
sub
jle
add
movsb
ret
jb
inc
add
cmovs
mov
pop
cmp
out
cld
xchg
js
dec
inc
dec
shl
add
dec
mov
mov
push
or
rol
push
add
adc
push
cltd
in
gs
xchg
negb
pop
push
jbe
mov
pop
scas
ss
add
adc
arpl
out
mov
mov
fcoms
insb
dec
fiadds
adc
push
sbb
ror
jnp
clc
push
shr
lods
inc
push
jp
push
shr
xor
sbbl
xchg
xchg
ret
test
dec
in
xchg
lret
loope
cs
les
out
jns
sbb
add
cld
pop
add
and
or
xor
orl
dec
fstp
popa
xchg
mov
out
leave
pop
push
lds
shrb
mov
out
cli
sub
push
jb
xchg
add
jge
sbb
out
add
fs
mov
dec
int3
ja
pop
in
adc
or
jns
fcmovbe
jmp
add
call
out
and
add
and
fs
test
pop
rcrb
fmulp
jmp
mov
pop
dec
mov
outsb
in
sti
sub
mov
cmp
jns
rcl
mov
push
cmp
mov
addr16
xchg
mov
mov
mov
xchg
jae
fiaddl
inc
jmp
pop
sbb
xor
orb
push
cwtl
dec
testb
push
scas
push
nop
fisttpll
add
pextrw
and
loopne
jbe
xchg
shlb
jmp
and
sub
js
mov
jbe
pushf
push
mov
outsl
loopne
shll
jl
hlt
outsb
loope
sbbb
outsl
add
or
fwait
jno
adc
out
out
sbb
lcall
and
jnp
inc
adc
aas
pop
mov
adc
testl
mov
aam
pop
mov
xor
sti
lds
cmc
xchg
jo
jl
add
aam
imul
sti
xchg
dec
jp
ret
inc
pop
es
inc
and
pop
and
sahf
popa
sbb
mov
out
dec
sub
inc
push
enter
mov
loope
cmp
ret
jae
pop
mov
push
test
add
imul
pusha
dec
adc
sti
mov
push
sub
gs
or
xchg
mov
repz
jl
inc
stos
cmp
cmpsl
xchg
or
cld
pop
xor
sub
mov
das
xor
cs
lods
sub
inc
or
lock
xor
xor
inc
jb
pop
xor
push
cmp
adc
in
xchg
pusha
sub
int3
cmp
push
mov
aaa
jmp
and
in
into
incb
test
jmp
imul
pop
in
gs
xor
pop
pop
addl
jge
insb
test
or
rcrl
jecxz
lods
sbb
mov
jae
insl
push
rorb
data16
jnp
test
and
pop
and
nop
mov
cwtl
adc
jns
sbb
lret
repnz
out
comiss
loope
add
xchg
xchg
cmc
cmp
pop
ja
cld
lods
aam
or
xchg
dec
xchg
mov
jnp
push
sti
addr16
orl
mov
cmp
cs
fs
gs
mov
sbb
push
xchg
ss
pop
push
or
dec
dec
cld
nop
mov
nop
pop
xor
das
mov
jl
sahf
mov
cs
fildl
fcmovu
inc
outsl
stos
fstps
mov
test
test
push
add
mov
inc
rcll
mov
out
and
dec
dec
inc
inc
and
sbb
fsubrp
sahf
adc
repz
fistps
jmp
push
jmp
xor
or
test
pusha
scas
pop
mov
add
cmc
push
idiv
mov
mov
cld
or
adc
arpl
jns
ss
movsl
add
inc
mov
xchg
add
xor
and
outsl
cmc
sub
sahf
outsl
incl
ret
sbb
add
pusha
test
fisttpl
xor
sti
mov
test
or
loope
xor
das
test
push
push
dec
cmp
insb
out
out
jbe
mov
rclb
xor
scas
insb
rorb
loope
push
ret
clc
fadds
push
test
sbb
sbb
sbb
add
mov
daa
call
in
scas
sub
cmpsl
inc
xchg
imul
inc
ljmp
call
aam
es
jnp
cmp
mov
cmc
and
xchg
insl
shll
push
cltd
and
test
lods
pop
mov
pop
popa
repnz
sbb
mov
dec
leave
sbb
mov
pop
or
push
movsl
call
in
rorb
fisubs
repz
leave
and
mov
and
jns
dec
ds
mov
fimuls
push
jb
pop
push
jmp
in
rcr
outsb
stos
in
out
add
fildll
ret
lods
mov
fadd
and
sbb
xor
pushf
test
add
mov
repz
mov
mov
xor
popa
sub
ror
icebp
add
jg
insb
push
in
push
repnz
mov
cmp
mov
pop
adc
or
sti
int3
cli
ret
inc
xor
insl
sbbl
jno
movsl
in
inc
movsb
inc
xor
cld
aaa
inc
jno
lods
movsl
pusha
cmpsb
iret
pop
jecxz
pop
inc
adc
fmuls
jle
xchg
ss
int
dec
enter
in
dec
add
cmpsl
inc
jmp
std
leave
and
ljmp
push
cmpsb
jnp
cmpsb
arpl
sub
xor
out
mov
push
xchg
fwait
jbe
jmp
xchg
adc
xchg
push
cld
adc
push
popa
sbbl
or
inc
jae
repnz
mov
inc
sub
jbe
sbb
testb
std
rcll
push
int3
icebp
and
dec
inc
inc
inc
add
dec
scas
and
jne
addl
inc
add
sub
jbe
mov
lods
sarb
pushf
shl
add
push
scas
pop
fildl
cmp
sbb
cmp
pop
pop
xchg
loopne
jae
xor
mov
or
xchg
jge
dec
les
and
mov
mov
sub
cmp
lcall
adc
out
cmp
out
pop
sub
mov
divl
xchg
push
dec
dec
ss
inc
jb
aas
sub
and
es
idivb
pop
mov
test
push
lea
movsl
dec
lock
cmp
cmp
inc
bnd
cmp
cld
test
aad
loopne
pop
bound
mov
lahf
xorl
lock
stos
xor
jecxz
out
ror
lock
jmp
ss
jecxz
divl
bound
dec
scas
popa
xchg
bound
sbb
cli
cmc
xor
push
dec
and
pusha
push
pop
pop
test
mov
pop
cmc
or
dec
dec
shlb
sbb
sti
in
dec
xor
xchg
sbb
mov
cmp
mov
dec
stc
sub
js
or
mov
inc
rcrl
sub
cmp
mov
cmpsl
dec
inc
pop
sub
mov
pop
lret
ja
test
sub
sub
xchg
cli
mov
push
cs
iret
mov
fdivr
test
push
orb
pop
pop
sub
in
inc
mov
xlat
cmc
sbbl
xchg
loope
test
popf
sub
xchg
mov
dec
xchg
lds
aam
rorb
cs
push
sub
dec
mov
mov
jmp
sbb
add
or
mov
jle
pushf
out
xor
js
inc
ds
fwait
xchg
jle
sub
ret
add
out
cmp
fiadds
cmc
movsb
movsb
sarl
mov
addr16
insl
or
push
lret
push
xchg
mov
cli
lcall
and
les
iret
cmp
lds
pop
adcb
and
pop
stos
loope
adc
sub
jns
pop
cwtl
push
fcoms
sub
inc
mov
das
dec
rcr
dec
jge
dec
adc
xchg
mov
push
daa
push
aam
dec
into
mov
inc
stos
cwtl
pop
imul
pop
add
jne
inc
jo
test
cltd
je
xor
xor
aad
scas
out
call
bound
inc
out
dec
inc
sbb
jecxz
sbb
sbb
dec
in
leave
ja
daa
fldenv
dec
das
cli
adc
aas
cmc
es
push
in
xchg
loope
ljmp
cmp
imul
pop
cmpsl
jge
sahf
movsb
inc
adc
leave
insb
inc
icebp
fwait
ds
lahf
aad
sbb
mov
xor
and
test
aam
xlat
lods
push
outsb
xor
les
pop
test
pop
and
cltd
add
add
mov
clc
je
mov
mov
les
xor
mov
adc
les
sub
sbb
jne
mov
dec
testb
popa
nop
xchg
repz
add
rorl
rol
and
sbb
stc
es
cwtl
pop
and
adc
mov
addb
in
sub
pushf
repnz
jmp
stos
fidivrs
dec
fstps
jmp
fdivrp
loopne
dec
sub
into
pop
add
fwait
jb
pop
sub
push
call
cmp
mov
popf
mov
in
ljmp
ss
jo
jle
cmc
aam
xor
xchg
jmp
cltd
popf
lcall
lea
leave
push
roll
xlat
popa
jno
in
xor
xor
cmc
test
jo
jne
jl
or
mov
lret
cmp
outsb
out
xlat
test
jo
mov
stos
adc
ror
or
fbld
jl
loope
pop
fwait
outsl
int3
sub
in
fstpt
pop
mov
xchg
adc
stos
mov
sub
shll
aad
fstpl
popa
cmp
out
iret
mov
sub
jge
addb
leave
push
cltd
push
sub
push
test
test
dec
je
push
call
cmp
incl
xchg
sub
repz
adc
push
mov
adc
cmp
or
ret
xor
and
cld
lods
xchg
cmpsl
repnz
mov
push
movd
jl
sbb
mov
icebp
jle
fcmove
out
in
fstpt
pop
sahf
loope
mov
push
mov
jle
dec
add
add
popa
outsb
mov
iret
jmp
addr16
jmp
add
inc
adc
orl
in
cs
fcomps
into
mov
aad
mov
bound
cmp
int
jle
mov
or
repnz
cltd
repnz
imul
add
xchg
inc
jo
shrb
mov
push
jg
pop
rclb
xor
loope
mov
shrl
adc
jae
lret
mov
jg
sbb
mov
jbe
push
pop
shrl
pop
leave
test
pusha
int
or
cmpsb
sbb
sbb
lahf
mov
orl
xor
xchg
mov
movsl
add
xor
fistpl
pusha
xor
push
or
icebp
xor
sbb
pop
push
add
in
dec
loopne
push
cmp
mov
jnp
jmp
daa
fbld
inc
add
loopne
add
call
nop
push
and
nop
mov
imul
lahf
add
mov
data16
lods
sbb
and
xchg
decb
loopne
pushf
pop
mov
mov
push
sbb
add
adc
lods
movsb
daa
fucom
jp
push
into
mov
and
lcall
lds
iret
fsubrl
in
pop
fstp
insl
push
jo
add
xlat
push
xor
mov
xor
cmpsb
out
mov
mov
jle
jp
inc
sub
xlat
insl
les
imul
jmp
mov
and
mov
jle
faddl
mov
mov
cmpsb
cmp
xor
loope
pop
cmp
loop
mov
mov
mov
sub
mov
push
addb
je
outsb
and
test
dec
insb
adc
mov
dec
rorl
cs
movsb
testl
mov
fdiv
sar
pop
sbb
or
mov
pop
cmp
rclb
mov
cmpsb
sarl
divl
test
xor
outsb
cltd
pop
push
jmp
mov
sub
ds
jl
lds
jns
imul
pop
xor
xchg
jbe
push
jno
jmp
cwtl
cld
sbb
and
sub
pop
bound
inc
imulb
pop
jo
xor
loope
push
psubsb
into
repz
pop
push
fstpt
or
inc
cmpsb
mov
test
xor
iret
fcompl
or
pop
push
dec
jnp
sti
loope
jecxz
mov
push
jne
and
add
out
ljmp
inc
fcmovne
in
lds
sti
mov
mov
jge
inc
lods
cmp
ret
adc
push
in
jge
jg
mov
pop
dec
jmp
ret
mov
js
sbb
movsb
aad
jge
jge
arpl
sbb
xchg
jb
rcll
out
shll
mov
inc
add
mov
push
jecxz
fmuls
mov
aam
scas
or
repz
or
mov
mov
sbb
adc
sbb
cmp
pusha
addr16
or
and
dec
inc
xchg
push
inc
add
fsts
ljmp
rorl
push
xchg
and
pop
adc
push
outsb
outsl
push
sub
insl
adc
mov
ljmp
movsl
cmpsl
out
mov
mov
mov
mov
jmp
jnp
inc
and
in
icebp
cmp
fsubp
popf
xor
cmpsl
ret
imulb
sti
sbb
vpalignr
fnstsw
push
push
lock
inc
sti
sbb
or
mov
sub
xchg
aaa
pop
add
in
add
dec
subl
js
pop
push
jae
es
pop
rolb
ds
jns
add
in
cmp
xor
dec
scas
lahf
add
fcmovnb
xor
xlat
out
mov
je
pop
or
and
or
sub
andl
mov
xchg
ret
sbb
test
gs
lds
cmp
pop
xchg
lods
mov
push
xor
sarb
in
call
arpl
cmp
fwait
cmp
stos
sbb
pop
js
sub
mov
leave
in
xchg
add
aam
popf
push
ds
mov
and
pop
setbe
mov
popf
push
movsl
inc
cld
imul
push
test
orl
lock
sub
or
push
ret
mov
mov
fdiv
lret
sti
cmc
add
in
xchg
xchg
cmpsb
aad
cmpl
ds
inc
gs
and
adc
jecxz
movsl
pop
leave
movsl
les
sarb
fisttps
fiaddl
mov
pop
mov
mov
test
notb
mov
jmp
sbb
ret
cmp
aas
cmpsb
cli
push
xorl
mov
push
jne
nop
mov
mov
pushf
lock
and
mov
stos
aad
test
test
movsl
int
icebp
jg
fcoms
fldcw
idivb
mov
nop
das
scas
add
sub
sti
add
mov
cmp
push
jo
movsb
mov
push
movsl
mov
lock
inc
fmulp
sbb
inc
mov
dec
pop
dec
rcrb
mov
lock
push
push
pop
jno
and
gs
jle
and
fcoms
inc
inc
and
andb
or
iret
es
fistps
aad
push
or
xchg
pop
cmc
push
sbb
cltd
mov
das
adc
testb
ret
cwtl
test
inc
fwait
movsl
lret
xchg
ljmp
xchg
rcrl
sub
push
mov
push
dec
imul
pop
cmp
cmp
push
mov
aam
stc
xchg
ljmp
or
push
rcr
push
pop
in
pop
inc
mov
call
enter
pop
xor
sub
out
ljmp
pushf
fwait
inc
call
xor
sub
sbb
sbb
xor
adc
xor
sub
imul
jmp
xor
nop
rcpps
aas
fs
lret
lds
outsb
sahf
mov
aad
sbb
and
loop
cmc
outsb
mov
jge
and
mov
or
iret
dec
dec
mov
dec
sahf
in
sbb
movsb
xchg
scas
gs
fsubl
das
fs
xchg
xchg
mov
in
cmp
ret
dec
es
xchg
mov
dec
sub
insb
inc
mov
jae
addr16
mov
cmpsl
jecxz
push
push
inc
jp
imull
inc
and
insb
aas
and
hlt
cmp
js
nop
add
movsb
call
sahf
aam
arpl
cmpsl
jb
dec
lret
outsl
mov
sahf
out
out
mov
xchg
push
imul
rclb
ds
test
push
jno
xor
lods
sbb
ss
addr16
sub
add
cmp
mov
pop
jnp
adc
cltd
pop
fcoml
test
pop
mov
sbb
lock
or
fdivr
ret
es
std
sub
push
mov
in
push
push
pop
pop
shr
cli
push
mov
mov
sub
sbb
mov
scas
cmp
loopne
fsub
push
movsb
cmp
dec
test
dec
jne
and
adc
mov
pop
jecxz
jl
xchg
outsl
jno
mov
and
mov
push
hlt
movsb
hlt
into
shl
sahf
jns
in
mov
push
aam
fbstp
test
cmp
cmpsl
mov
out
inc
sbb
xchg
fs
jg
jb
add
scas
aaa
fidivs
cltd
push
subl
movsb
cmpsb
pop
in
pop
inc
xchg
cli
sub
shrl
mov
clc
add
shlb
sbb
in
cmpsl
mov
test
hlt
popa
in
mov
hlt
loopne
cmpsb
sub
rcrb
rcl
cwtl
out
jecxz
fcomps
push
add
dec
lret
test
sub
jno
ret
insb
hlt
ss
sbb
dec
cmc
pop
mov
das
cmpsb
inc
popa
push
ss
push
push
decb
loope
mov
push
faddl
xchg
sbb
dec
jno
fsubrs
xchg
mov
pop
sbbl
pop
push
out
adc
test
mov
movsl
insl
cmp
cmp
mov
ret
es
push
inc
cs
daa
xchg
jne
sbb
scas
mov
mov
js
je
push
xchg
sbb
mov
scas
mov
mov
das
lcall
sbb
add
jo
xor
icebp
ss
testl
out
test
ds
sbb
jo
cmpsb
xchg
cmp
push
inc
loope
xor
sbb
fildll
mov
xchg
mov
xchg
jae
lods
push
push
rcrl
movsb
nop
jb
les
push
push
sti
jo
jecxz
cmp
jbe
inc
inc
sbb
adc
pop
or
push
mov
mov
in
push
lahf
outsb
scas
mov
add
popf
movsb
add
mov
es
movsb
dec
lret
mov
inc
movsb
xor
cmp
repz
int3
pushf
das
int3
cmp
or
fnstcw
and
fdivr
es
cld
xor
jae
push
cmpsb
test
rorb
cmp
setl
popf
fs
repz
add
cmp
dec
pop
cld
or
mov
mov
mov
sub
mov
sbb
imul
ss
jb
pop
inc
rorl
aam
mov
mov
or
add
push
sub
xor
mov
mov
pop
cmp
jno
cltd
xchg
icebp
and
aam
mov
fsubr
xchg
popa
divb
sbb
dec
adc
adc
stc
fidivrl
inc
in
leave
sub
sbb
lds
cmc
pop
inc
sub
js
sub
cltd
add
inc
lret
loopne
or
mov
ret
push
xchg
jp
aad
xor
inc
pop
pop
add
out
inc
outsb
and
shr
in
or
sti
adc
xchg
push
cs
xchg
pop
cs
addr16
shl
jb
push
arpl
pop
mov
cli
aad
rcrl
cwtl
popa
xor
xor
pop
mov
aam
mov
addr16
dec
xchg
xor
or
push
mov
into
inc
in
pop
ret
push
xchg
insb
imul
popa
sbb
adc
sqrtps
jne
or
pop
arpl
adc
mov
add
push
pop
adc
gs
adc
call
pop
or
mov
push
das
mov
cli
inc
les
lock
leave
popf
scas
js
lcall
pop
jno
xor
dec
sub
je
cmp
cs
stos
aam
das
gs
sbb
lcall
cmpsb
int
push
sbb
mov
out
cs
add
ss
lcall
dec
add
cwtl
in
pop
data16
test
js
inc
es
repz
aas
icebp
outsl
std
pushf
data16
fsubs
cmpsl
xlat
inc
push
cmpsb
shlb
and
or
push
mov
jbe
inc
xor
adc
loope
inc
xor
mov
std
jb
jnp
popf
jecxz
sbbl
out
inc
imul
shl
xchg
sbb
lods
mov
sbb
js
sbb
cmc
stos
add
mov
xchg
data16
ja
imul
rcrl
cld
cmp
nop
cmc
mov
repz
shlb
xor
inc
outsl
jb
cmpsb
mov
pop
mov
push
fsubrp
cmp
pop
mov
inc
inc
add
mov
stos
mov
xchg
dec
push
or
lcall
movsl
push
aam
mov
dec
xchg
popf
pop
out
div
loope
je
mov
mov
js
movsl
scas
xor
mov
inc
test
sbb
cld
sbb
or
scas
cld
jecxz
and
clc
repnz
jg
adc
pop
nop
aam
lcall
push
rorb
mov
icebp
mov
lods
pop
call
or
cs
adcb
in
js
fwait
or
imul
mov
add
dec
inc
std
mov
xor
mov
add
in
jnp
adc
mov
leave
jae
shll
mov
lods
or
rcll
ffree
dec
cli
jg
movaps
pop
add
int3
mov
imul
je
or
xchg
scas
fistl
insl
cmc
das
jne
mov
icebp
and
cwtl
adc
std
nop
cli
loopne
insb
mov
and
dec
xor
nop
scas
pushf
fisttps
lods
jb
xchg
mov
sub
icebp
adc
inc
lods
arpl
mov
loope
in
fldenv
movsb
pop
sbb
sub
repz
xor
lret
adc
int3
movsb
jnp
push
aaa
leave
fdivrs
outsl
pop
and
mov
or
jmp
dec
dec
cmp
lock
bound
push
movsl
mov
dec
mov
jo,pn
call
mov
and
jns
ljmp
xchg
jmp
sub
jne
pop
out
pop
fcomps
aad
sbb
xchg
jne
cld
add
lock
cld
aaa
mov
or
cld
loopne
fdivl
pop
lret
popa
fistpll
inc
movsb
je
or
in
cmp
jecxz
jecxz
and
sub
fstl
and
sti
dec
ds
xor
test
xor
or
into
mov
xor
xor
xor
mov
mov
or
icebp
std
pop
daa
xor
lods
inc
mov
shl
sbb
pop
sbb
xchg
jbe
int
lahf
inc
enter
push
das
mov
pusha
adc
aas
sub
jno
test
aad
rcrb
inc
daa
or
pop
vmread
and
mov
jp
lcall
sub
sbb
ljmp
sub
dec
add
adc
sbb
sub
adc
dec
addl
stos
xchg
xchg
int
jns,pn
pop
stos
out
daa
pop
xchg
jnp
movsb
xorb
pop
lods
fidivrs
in
pop
hlt
pop
inc
xor
lods
jmp
mov
mulb
cmpsl
fcomi
leave
sbb
push
pop
mov
push
out
mov
pop
int3
movsl
dec
shl
push
mov
sbb
fs
jb
fisubrs
mov
cld
andb
push
arpl
lods
inc
ss
outsb
fsubrl
lret
dec
call
mov
dec
rcrl
xchg
xchg
mov
movsb
mov
scas
faddl
ds
or
mov
add
mov
cmp
aam
push
pop
stos
push
loope
or
dec
mov
repnz
sub
xchg
rorb
mov
incl
loopne
loope
out
enter
add
fnstsw
pushf
mov
aaa
dec
push
dec
mov
mov
rclb
xlat
pop
dec
or
fwait
lahf
dec
fwait
out
xchg
mov
jmp
dec
jecxz
jmp
fiaddl
pop
fldt
ror
sub
enter
insb
sahf
dec
ss
scas
xchg
mov
push
jo
stos
cmp
loopne
push
cmp
dec
subb
in
inc
inc
in
push
mov
stos
cltd
call
inc
lods
xchg
cltd
and
popa
xchg
fsubp
cmp
push
sub
jne
adc
out
mov
int
mov
push
jno
push
add
or
imulb
jmp
jp
das
sub
std
mov
jae
insl
rclb
popa
push
popf
mov
and
cmpsl
stos
ss
jae
rcll
push
dec
mov
jae
mov
cmc
imul
sbb
imul
enter
add
add
stos
sbb
mov
mov
fcmovbe
adc
ret
insb
push
sbb
adc
adc
shlb
mov
mov
in
sbb
inc
push
lods
sahf
or
pop
cwtl
sbb
mov
je
sub
sbb
cmp
leave
stos
pop
les
call
dec
popa
jo
mov
outsl
test
fwait
cmovg
and
jbe
outsb
mov
divb
pop
jp
aad
outsl
dec
stos
jle
lret
out
nop
js
xchg
test
jg
lcall
jp
or
cmp
inc
int
lcall
cwtl
xorl
dec
rcr
mov
sbb
inc
jmp
pushf
jne
ds
int
mov
insl
jecxz
aam
outsb
dec
insb
roll
negb
pop
xor
sbb
in
mov
push
lahf
popa
jno
push
cmp
pop
xchg
mov
andl
hlt
jecxz
sti
fcmovnb
pushf
decb
mov
adc
mov
xor
add
ja
outsl
fsubrl
jmp
aaa
ss
sub
mov
xchg
push
jp
cmpsb
loopne
int3
sbb
mov
les
mov
arpl
imul
sbb
jne
pop
mov
ja
jbe
sbb
test
dec
jge
mov
iret
pop
je
mov
mov
test
out
stos
push
movl
ja
mov
es
sbb
test
xor
sub
shr
mov
in
loop
mov
ljmp
std
jge
add
pop
es
pop
in
or
std
cmpsb
arpl
jecxz
sub
and
push
jecxz
dec
cld
inc
call
pop
jo
mov
mov
fisubl
inc
mov
xlat
nop
push
jmp
sub
inc
jge
fs
mov
arpl
adc
mov
dec
jge
mov
addb
mov
out
push
into
sti
or
stc
sub
or
xchg
inc
ret
dec
push
jg
aaa
mul
les
fdivs
sub
pop
jne
push
mov
pop
leave
int3
movsl
push
mov
inc
jg
push
push
inc
mov
in
sar
lods
add
push
mov
sbb
sbb
add
cmp
push
push
or
hlt
in
jmp
and
fdivr
mov
jge
imul
xchg
cld
test
out
sub
int
hlt
or
add
repz
cmp
mov
xchg
xchg
jmp
nop
cmpsb
dec
jp
jmp
lret
mov
xor
or
mov
mov
sbb
cmp
or
dec
ret
repnz
movsl
mov
add
mov
call
mov
mov
adc
cmp
push
lods
xchg
jle
lock
and
mov
push
std
aas
fnsave
xchg
and
xchg
sahf
mull
movsl
cld
cs
pop
dec
push
test
jge
loopne
sti
jg
sbb
in
into
sub
ljmp
clc
jecxz
sbb
lahf
pop
lea
fmull
jle
cmc
or
inc
jno
jb
cmpsb
sbb
jg
jne
sbb
loop
push
inc
sub
pop
jmp
je
push
and
jecxz
add
mov
test
int3
push
pusha
outsb
cld
and
icebp
mov
out
lret
mov
xchg
mov
cli
mov
dec
or
jns
cmp
pop
leave
fisubrl
sbb
lods
fld
sbb
enter
repnz
cmp
mov
cs
lods
jmp
xor
sti
mov
popa
int3
leave
add
and
cmpsb
jae
pop
ds
lock
cmp
push
xchg
xor
das
inc
pop
jns
xor
insl
cwtl
jns
push
int
mov
push
aas
adc
cmp
stc
test
fcomip
ret
mov
adc
aas
pop
aas
add
cld
push
out
mov
rcrb
outsl
jae
add
xor
in
out
inc
xchg
mov
imull
js
cmp
add
xchg
xchg
and
aad
or
push
inc
inc
dec
andb
rcrl
inc
mov
movsl
sbb
scas
sub
jne
cltd
adc
pop
pop
mov
aad
sbb
loop
cmpsb
in
lock
push
push
inc
mov
mov
hlt
ljmp
jo
xchg
mov
cwtl
test
sub
cmp
and
adc
mov
lods
imul
icebp
addr16
mov
push
fbld
push
outsl
jp
cmc
mov
fidivrl
lods
jb
sbb
or
sbb
push
dec
call
mov
mov
jl
pop
mov
xlat
icebp
add
cmp
or
mov
test
jne
imulb
lret
jne
xor
ret
packsswb
pop
shll
add
pop
hlt
clc
das
stc
lods
inc
jg
push
add
xchg
shlb
or
push
mov
je
imul
push
movsl
callw
jp
mov
enter
push
inc
xor
jne
lcall
aam
mov
outsl
mov
dec
sub
push
es
cmpsl
js
sbb
pushf
mov
jle
aam
cltd
loop
inc
xlat
lds
fs
inc
das
fs
aam
xchg
repnz
jle
mov
jle
mov
pushf
jbe
sahf
push
daa
call
pushf
push
jmp
sbb
dec
mov
lcall
imul
fisubs
push
dec
pop
fnsave
into
jnp
pop
inc
mov
pop
nop
std
rcrl
gs
and
daa
js
rol
call
ret
pop
mov
xchg
sbb
jmp
movsl
mov
mov
cmp
test
dec
inc
les
int3
mov
or
shr
xchg
mov
pop
push
sbb
rol
pop
adc
fdivrp
add
xor
std
aas
int3
andl
mov
add
popf
decl
mov
pop
fchs
push
imul
pop
push
adc
lret
sub
cltd
jbe
leave
jecxz
jecxz
xorb
jmp
pop
inc
ficomps
push
cmc
sbb
jno
lods
data16
sarl
or
ficompl
test
xorb
cmp
or
cli
fidivrs
xor
aas
push
sub
adcb
sub
fcoml
xchg
add
scas
jecxz
lcall
inc
adcl
sub
push
push
and
pusha
cmp
ja
or
push
lods
mov
lahf
mov
into
and
popa
mov
out
jmp
fisubrs
sub
jg
sbb
icebp
pop
es
mov
add
out
je
fcmovnb
mov
fsubrl
arpl
or
adc
in
mov
pop
push
xchg
mov
lods
pop
out
add
arpl
mov
fsubrl
outsl
push
popf
pop
pushw
sbb
xor
cli
adc
push
movsb
cmp
inc
call
je
and
sub
xchg
ret
xchg
outsl
lret
icebp
gs
loop
dec
outsl
mov
mov
rol
loope
loope
fcoms
dec
aas
in
fists
jg
fbstp
pop
jmp
adc
frstor
ljmp
cmp
xchg
jmp
repnz
ret
or
sub
jmp
stos
fidivrs
or
mov
int
sub
repz
adc
ljmp
nop
mov
xchg
push
push
xor
lods
test
jno
xor
sahf
jbe
mov
pop
dec
into
dec
out
or
sub
lds
test
push
jns
sbb
das
das
inc
rclb
or
cli
cmovb
xorb
dec
out
jmp
cmovp
aaa
xchg
in
dec
shll
rclb
inc
cs
iret
stos
leave
mov
sub
jno
sti
inc
add
push
orl
dec
dec
stos
fnstenv
add
jmp
push
mov
push
push
jo
fildl
ds
dec
adc
popa
test
and
shll
into
push
pushf
movsb
scas
xor
mov
pop
xlat
jno
inc
dec
hlt
jns
adc
cmpsl
loopne
cmp
scas
rcr
pop
cmp
add
out
cs
je
aaa
push
push
sbb
cli
dec
pop
push
in
movsl
push
push
xchg
xchg
sarb
in
fcmovb
cmp
fdivs
and
or
xchg
push
or
pop
mov
pusha
test
aam
xchg
pop
test
lea
jae
sbb
push
mov
movsb
adc
inc
mov
pushw
inc
lock
les
and
mov
cmp
xchg
mov
in
aas
rorl
in
push
test
mov
sar
inc
fmul
in
enter
xchg
in
sarl
push
add
mov
mov
or
pop
cltd
xchg
dec
andb
cltd
cmp
mov
in
aaa
or
bound
mov
sahf
std
cli
lea
js
test
jbe
push
stc
subb
es
imull
imull
cmp
adc
icebp
lcall
sub
xor
gs
sub
cmp
hlt
shl
xor
sbb
js
insl
mov
mov
in
fisubrs
clc
leave
dec
xlat
xchg
mov
or
xchg
adc
sub
jbe
leave
shll
dec
jno
cmp
mov
pshufw
inc
or
push
ljmp
das
xchg
mov
dec
into
mov
add
sarb
ret
sub
pop
xlat
dec
dec
outsl
pop
jle
xchg
sub
outsb
aas
jge
mov
fstpt
shll
push
cli
movsl
sub
jl
push
or
pushf
and
mov
jne
xchg
loop
repnz
loop
loop
adc
jbe
cmp
leave
push
push
sarb
pusha
jg
cmc
cli
adc
adc
lret
pop
movsb
xor
js
out
pop
ret
sbb
out
xchg
inc
xchg
push
repz
mov
ss
fimull
mov
out
mov
mov
iret
outsb
frstor
inc
repz
jmp
cli
stos
mov
je
dec
lods
enter
xchg
imul
icebp
mov
bound
out
cwtl
mov
out
pop
mov
int3
popf
lods
cwtl
pushf
fwait
inc
daa
aaa
xor
pop
int3
inc
inc
lods
nop
scas
push
lcall
shl
or
xchg
dec
std
lahf
inc
mov
les
sarl
xor
ds
scas
mov
call
loope
mov
nop
push
dec
mov
adc
mov
push
loope
dec
jg
cld
pop
cli
cmpsl
cmp
loop
pop
mov
xchg
and
pop
mov
cmp
or
stc
fisttps
inc
lods
cltd
pop
into
jns
sub
inc
inc
addb
jle
les
fs
aas
sete
call
cmpsb
repz
fs
inc
inc
stos
xchg
mov
daa
cmpsb
pavgb
push
lods
pop
ret
push
test
mov
pop
sbb
mov
sbb
jge
or
xor
dec
jmp
roll
mov
add
lea
pushl
into
leave
jge
fdivs
add
sahf
mov
ret
sub
push
lea
nop
fnstenv
mov
inc
sarb
xor
divb
or
jnp
xchg
push
dec
popf
push
jg
cmpsl
movsb
movsb
inc
xor
push
fs
iret
cltd
in
fsubrl
sbb
inc
in
loopne
sbb
inc
cmp
jae
and
and
adc
icebp
or
mov
jmp
fdivl
inc
ficoml
fdivr
es
pop
push
mov
or
std
inc
into
sbb
mov
or
enter
xor
jmp
mov
scas
cwtl
cmp
imul
xchg
or
push
mov
jo
dec
push
cmp
cmp
repnz
mul
in
jae
repz
pop
adc
adc
cltd
jbe
clc
aam
loop
insl
aaa
dec
bound
cmpsb
in
popf
sbb
adc
cs
sahf
xchg
pop
aad
add
and
jg
dec
cmpsb
pop
mov
dec
push
pop
inc
and
mov
add
movsb
mov
addl
aad
test
fidivrs
fdivrl
cltd
xchg
icebp
les
xor
add
shll
rorb
aaa
testl
xor
test
add
cmp
add
sbb
or
push
sbb
ja
pop
dec
jbe
xchg
push
cli
and
mov
or
mov
xchg
and
movl
aas
in
adc
add
lock
add
or
dec
ror
mov
cwtl
jns
leave
sub
lahf
loope
mov
adc
and
jg
loope
push
add
imul
movsl
xor
lods
insl
add
mov
imul
mov
pop
jo
test
in
dec
hlt
out
test
cwtl
in
cld
clc
in
pop
cmpsb
mov
sahf
scas
jmp
mov
jne
in
mov
pop
ret
and
adc
test
xchg
sub
cmp
insb
mov
lock
cli
cmpsl
sbb
popa
repz
dec
cwtl
xlat
daa
sbb
or
jne
je
inc
cmovo
lret
pop
pop
js
add
mov
imul
in
push
mov
and
fwait
or
sub
and
addr16
push
popa
or
fwait
lds
fistpl
shrb
int3
mov
pop
sub
mov
in
inc
rcll
in
int3
pusha
movd
pop
sbb
btr
adc
outsb
cmp
mov
jecxz
add
lods
fbstp
shrl
stos
decl
sbb
add
sub
inc
sub
jne
cmc
loope
ja
mov
mov
mov
add
ljmp
out
adc
ljmp
push
mov
jecxz
dec
push
inc
in
addl
add
int
dec
daa
decl
in
aaa
bound
mov
ja
dec
pop
shlb
popa
stos
and
popf
sub
inc
call
sarl
outsb
xor
shlb
or
mov
sub
sub
out
mov
ficomps
jmp
and
or
cmp
or
xchg
shrb
int3
out
mov
aam
inc
movsb
cmpsl
cmp
sbb
imul
jns
inc
outsl
pop
xchg
aam
int3
mov
test
pop
roll
xor
jp
pop
aas
xchg
mov
mov
pop
leave
pushf
inc
divb
cmp
lret
addr16
notb
jae
mov
inc
push
fimull
lock
loop
and
icebp
xlat
rorb
dec
jbe
pop
xor
cmpsb
ficoms
nop
lods
mov
adc
push
loop
icebp
mov
xchg
test
mov
jge
push
pop
sub
das
pop
jae
mov
push
mov
les
filds
xor
or
add
sbb
xchg
dec
popf
sub
outsb
loope
fbstp
cmpsb
add
out
pop
sub
inc
cmp
lods
lcall
sub
cmpsl
rclb
pop
popa
movb
push
lds
xrelease
xchg
dec
xchg
iret
and
adc
adc
in
mov
hlt
sahf
in
push
mov
lock
and
mov
test
mov
mov
mov
popa
sub
push
call
fnstcw
mov
sbb
lret
xor
mov
icebp
stos
jl
cwtl
sbbb
loope
shll
xchg
jo
leave
cmp
popa
out
add
mov
cmpsl
dec
push
xchg
pop
adc
or
mov
push
pusha
lods
ss
xchg
jno
dec
aad
imul
push
movsb
jb
cmp
xor
int3
ret
call
ret
outsl
inc
dec
mov
idiv
sbb
and
push
cmp
pop
lcall
popf
push
xchg
pushl
rcr
sti
inc
test
xchg
cld
out
leave
xchg
inc
pushl
in
xchg
push
daa
int
call
aas
sub
dec
fstps
or
mov
lcall
es
adc
jno
pop
pop
insl
dec
test
mov
neg
sub
push
xor
clc
push
in
add
aas
adc
mov
das
mov
add
aas
inc
pop
loopne
outsb
jns
xchg
fisubs
pop
adc
test
push
lods
repz
lock
lret
cmp
int
lret
push
mov
dec
popa
clts
mov
push
in
pop
push
repnz
mov
andb
js
push
jb
push
sub
adc
pop
jmp
lret
into
leave
xor
filds
adc
xchg
pop
insb
out
adc
pop
loope
jg
adc
cwtl
mov
or
push
xchg
mov
lock
xor
mov
aaa
in
mov
xorb
mov
push
mov
lcall
sub
inc
and
jb
mov
and
inc
pop
or
int3
in
mov
pop
ficoml
test
imulb
enter
push
enter
cmp
rorb
pushf
insl
icebp
sub
add
subl
adc
lahf
dec
xchg
xor
mov
mov
xor
and
mov
iret
dec
jns
arpl
jae
cmp
and
movsl
bswap
and
sub
push
inc
inc
mov
jmp
aam
cmp
mov
loop
dec
pop
mov
pop
cmc
mov
sbb
dec
mov
das
sti
mov
fcmovu
mov
shrl
dec
mov
xchg
les
rol
ret
jae
inc
jo
xchg
aas
test
pusha
push
addb
push
push
and
mov
add
orb
hlt
addr16
push
push
sub
push
std
ljmp
loopne
push
fwait
xchg
pop
jle
push
mov
jnp
pop
cmpsl
call
pop
add
push
sti
push
and
pop
mov
sub
fcmovne
pop
sub
xchg
orb
movsl
dec
jg
pop
push
and
mov
popf
jns
rclb
or
in
dec
xchg
jecxz
push
sub
les
mov
pop
pushf
and
fwait
scas
jp
push
insl
and
sbb
cmp
leave
cmpsl
outsb
js
mov
mov
je
pop
jno
aad
pop
xor
pop
add
mov
mov
adc
std
push
les
xchg
dec
cmp
lcall
rolb
idivb
xor
pop
pop
outsl
rcrb
into
je
test
mov
mov
leave
stos
jmp
icebp
xor
movsl
sub
lret
push
notb
loopne
jae
lret
scas
stc
outsb
repz
aad
mov
sub
inc
popf
sahf
lcall
cmpsl
push
mov
dec
dec
and
aas
cwtl
inc
dec
ret
cmp
mov
inc
xor
mov
rclb
sub
add
jge
and
or
sahf
popa
inc
cmp
cmp
jl
test
popa
xor
adc
sub
adc
repz
aad
or
sbb
inc
clc
or
cli
sbb
imul
lds
rcll
and
out
xchg
jo
adc
das
inc
bound
pushf
dec
pop
ret
sub
fcom
andb
ds
mov
sbb
mov
and
cmp
fldt
sbb
lea
es
repz
sub
dec
jecxz
in
cwtl
mov
pop
or
or
imul
jp
mov
dec
push
pushf
jns
cmp
dec
inc
jmp
cli
rcrb
sbb
repz
or
push
add
lret
adc
scas
in
xchg
jecxz
dec
dec
in
in
adc
xor
add
pop
adc
inc
xor
xlat
gs
stos
les
pop
sbbb
outsl
sbb
aad
jmp
mov
adc
aad
rcrb
push
sbb
pop
dec
jl
repnz
scas
andl
xor
pushf
sub
and
pop
push
mov
xor
es
cmp
clc
cmp
and
push
les
lret
inc
sub
push
and
mov
or
pop
sbb
outsb
push
int
push
adc
jno
cltd
out
ret
pop
les
cmp
adc
fisubrl
adc
cs
loopne
pop
movsb
lret
xchg
neg
js
loopne
repnz
scas
cmpsl
xchg
in
mov
mov
loopne
or
cmc
fwait
and
pusha
or
sahf
sbb
mov
out
xchg
and
push
ljmp
mov
loope
test
in
or
bound
int
mov
or
in
stos
sub
and
movsl
mov
repnz
int
add
iret
cmc
scas
mov
jno
dec
mov
scas
dec
xor
out
push
fisubrs
les
mov
sub
jle
inc
jmp
shrb
push
mov
mov
adc
mov
aad
stos
push
flds
inc
or
loop
mov
in
mov
and
movsb
xchg
cli
xor
and
push
jle
mov
bound
adc
out
mov
fisubrl
fmull
sar
or
aad
rolb
incl
stos
and
fdivp
hlt
mov
out
clc
into
push
sub
insb
and
mov
cmc
gs
pop
in
xchg
xchg
xchg
push
mov
xlat
mov
test
xchg
or
rcrb
cmp
mov
fcomi
loop
in
jmp
mov
push
xor
jbe
call
mov
sbb
add
out
push
clc
mov
push
out
or
push
mov
lahf
cld
push
out
sub
xchg
stc
aas
jp
push
cld
xor
xchg
mov
add
out
test
js
mov
inc
fwait
mov
jno
rolb
adc
test
push
cwtl
jnp
cmp
pop
pop
lock
addr16
int
dec
jg
jbe
jae
push
push
mov
clc
mov
xor
fcmovb
ja
jne
pushf
jo
inc
bound
or
sbb
inc
popa
lret
mov
aas
outsb
sbb
loopne
fiadds
roll
xlat
inc
movsl
negb
adc
mov
movb
fxtract
and
sub
pop
sahf
jb
test
notb
aam
cmpl
faddl
aad
leave
je
fldenv
dec
mov
push
test
lock
sbb
aas
lret
jo
sub
cltd
mov
push
inc
fwait
inc
adcl
fdivs
or
inc
movsl
inc
test
pop
or
cmpsb
shrl
fsubrl
addr16
into
mov
test
jmp
jae
jmp
or
movsl
lahf
mov
xchg
or
aad
push
mov
shr
stos
jl
mov
incl
sub
inc
insb
mov
sbb
jno
int
je
inc
in
in
sbb
cwtl
jmp
test
pop
and
cs
and
xchg
jle
jle
test
adc
lcall
or
daa
dec
or
cmp
push
scas
scas
jmp
mov
ret
lea
mov
or
loope
rol
std
xchg
rolb
mov
imul
pop
mov
iret
cmpsl
shlb
aas
sarb
jnp
out
jae
fstpt
push
xchg
adc
sti
aaa
fistps
hlt
mov
and
ss
clc
jg
sub
pop
outsb
cmpsl
pop
jl
in
cmpsb
mov
and
in
in
cmp
cli
jp
test
dec
outsl
jae
sbb
cmp
fwait
pop
sti
adc
push
in
xchg
mov
pusha
jne
loope
push
fstps
loopw
popf
out
jb
cwtl
sar
in
jle
mov
or
pop
inc
fcomps
daa
push
sbb
call
addl
inc
and
out
int3
mov
push
xchg
mov
mov
sub
leave
pop
enter
pop
hlt
in
pushl
add
dec
scas
imul
aaa
push
fmul
test
in
mov
mov
int
adc
popf
sti
mov
les
push
mov
subl
mov
dec
mov
leave
test
aas
add
std
adc
push
xchg
ja
inc
sbb
rcrb
xchg
jge
sub
cwtl
mov
andl
dec
push
sub
dec
mov
popf
cmp
stos
jmp
cmpsb
push
push
add
int3
mov
xor
out
cmc
add
stos
push
ljmp
orl
xchg
xor
push
repnz
or
push
adc
std
imul
popa
sub
push
data16
jb
sbb
cwtl
pop
jmp
imul
and
mov
mov
out
cmpsl
jnp
aaa
dec
roll
jae
sub
xlat
fists
divb
ret
mov
loopne
nop
adc
and
xor
ljmp
or
xchg
pop
mov
int
mov
clc
lods
mov
not
ljmp
push
mov
scas
je
std
sbb
inc
cld
cmp
aad
mov
arpl
adc
fs
shl
sbb
push
sar
ret
stos
xchg
cwtl
xor
inc
fisttps
movsl
mov
imul
mov
xchg
stc
ja
jmp
jmp
inc
xor
cmp
push
mov
adc
rcrb
mov
rcll
mov
fs
movsb
jl
or
cmp
call
roll
arpl
and
sbb
outsl
sahf
adc
mov
cmc
jecxz
pop
inc
xor
out
orb
mov
sbb
cmpsb
pop
adc
imul
sbb
mov
lret
dec
or
stos
mov
pushf
flds
test
arpl
xchg
lret
mov
jno
daa
and
xchg
pop
push
push
jge
cld
rcr
inc
pushf
daa
and
fadd
dec
push
jns
aam
test
scas
arpl
sbb
push
cwtl
xchg
aas
mov
pushf
xorb
pop
pop
pop
pop
mov
lahf
data16
repz
mov
iret
add
jecxz
pop
in
into
pop
jl
sub
sbb
cmc
add
sahf
movsb
cmp
and
mov
enter
or
cld
sar
mov
adc
xchg
stos
dec
incl
mov
mov
roll
lods
test
xlat
push
and
cmp
fildl
cld
gs
mov
fwait
imul
scas
out
jmp
mov
sub
adc
test
arpl
outsb
dec
ljmp
xlat
insb
sub
sbbl
stc
jle
lret
fisubs
jge
dec
inc
roll
sti
imul
xchg
jno
test
popa
or
fstpt
cmp
aad
in
data16
pushf
pop
test
iret
mov
xor
aad
call
lock
xor
adc
cmp
int3
fwait
or
lahf
lret
mov
dec
jne
xor
sbb
addr16
in
vmwrite
popf
xchg
mov
mov
lods
out
cmp
cmp
mov
adc
adc
pop
and
xor
dec
insl
std
aas
pop
dec
cmp
sub
pushf
shl
or
push
xor
in
pusha
add
test
jns
dec
xchg
aaa
in
ljmp
xchg
jl
cltd
clc
leave
iret
imul
scas
xor
xorb
xor
and
es
popf
sahf
sbb
clc
or
mov
idiv
push
pop
repnz
dec
movsl
data16
xchg
mov
rorl
test
out
pop
sti
pop
xchg
movsl
scas
mov
cmpps
and
add
cmp
and
fidivs
loop
cmpl
stc
mov
and
push
cmp
stos
bound
or
mov
jle
fs
cmp
mov
std
fnstsw
in
xchg
in
add
push
add
sbb
dec
adc
shrb
xlat
mov
inc
inc
pop
mov
or
outsl
fidivrs
cmp
ret
leave
jb
inc
adc
mov
xchg
shr
mov
popf
push
jle
and
ret
push
dec
mov
inc
add
in
std
iret
lahf
dec
fsubrl
xchg
test
jbe
fwait
loopne
out
cmpsl
lock
adc
test
sar
push
adc
cwtl
cmp
negl
test
jne
stos
and
mov
sahf
mov
xlat
jp
popf
arpl
jg
jp
pop
jg
int3
data16
xlat
je
inc
inc
mov
cld
sarl
add
loop
jg
shl
pusha
xor
jmp
out
into
cli
jp
lods
shrb
ret
xchg
jno
mov
push
repz
in
cld
add
test
fs
jnp
mov
push
sar
push
adc
xchg
xchg
adc
sahf
hlt
loop
movsl
mov
xchg
loope
cmpsl
je
add
iret
mov
add
and
out
in
adc
pop
aad
lods
dec
mov
scas
jbe
mov
or
mov
push
cmp
cwtl
testl
add
sbb
xchg
stos
mov
jne
mov
mov
leave
repz
lods
shll
rcrl
js
arpl
int3
jmp
mov
insl
imul
andb
stos
adc
sahf
or
xchg
pop
ds
pop
push
push
and
pop
mov
data16
movl
add
cmp
daa
pusha
xchg
stos
ja
fsts
addl
mov
jmp
jns
loopne
shlb
sbb
mov
sbb
xor
sub
test
inc
push
les
mov
push
shlb
xchg
sub
mov
cld
test
jp
frstor
fstps
pushf
js
bound
jnp
pop
xor
pop
arpl
lock
pop
rcrb
je
jp
ret
daa
idivb
insb
test
pop
mov
add
ljmp
and
adc
or
ret
push
loopne
xor
fdivrs
fisubrl
test
mov
adc
xor
popa
mov
xchg
ljmp
adc
mov
jne
sbb
ror
in
inc
loopne
in
fucomi
pop
mov
push
mov
call
clc
pop
push
insl
outsb
lock
les
stos
adc
mov
jl
popa
sti
mov
jo
inc
loopne
iret
loop
mov
sbb
pop
loopne
and
xchg
sub
or
loop
inc
jmp
add
mov
incb
andb
pop
sbb
mov
outsb
jns
out
lcall
insl
adc
cmp
jg
shrl
adc
adc
xchg
push
inc
dec
aaa
xor
sbb
add
sbb
mov
cltd
sbb
addb
fs
fimull
dec
add
scas
dec
mov
push
xor
push
aam
dec
inc
stos
mov
push
mov
ret
mov
xor
lret
addl
subl
mov
loop
outsl
sub
pop
cmp
cmp
jecxz
mov
jg
jg
xor
movsl
stos
sahf
inc
sahf
movsb
jp
addl
aad
cmp
xchg
popf
fnsave
mov
movsl
sahf
or
add
adc
jle
mov
mov
decl
inc
sub
int
mov
push
xchg
sbb
mov
push
ffree
mov
movsl
popa
push
xchg
pusha
jmp
sbb
arpl
pop
test
test
xchg
sbb
insb
and
mov
jne
ss
pop
les
and
and
pop
fldcw
adc
fdivrs
jns
sarl
fistps
addr16
mov
inc
jae
popa
jb
outsl
bound
pop
or
rol
outsb
mov
sbb
jge
movsl
mov
jmp
outsl
and
mov
fistl
scas
stos
sbb
gs
shll
shrl
stos
xlat
fstps
mov
ja
fistpl
mov
dec
xor
sarb
fisttpl
push
jecxz
jbe
fdivrl
cmp
popa
fucomi
or
inc
ljmp
cltd
jb
pusha
dec
cmpsb
cmp
mov
sti
mov
adc
cmp
lock
aaa
push
imul
dec
out
test
mov
arpl
push
pop
enter
pop
rclb
jl
sbb
test
lds
std
sbb
lods
mov
into
mov
sbb
or
dec
or
sbb
jge
mov
or
adc
outsl
lret
aad
jno
idivl
popa
cmp
pop
jge
idivl
clc
leave
jge
mov
mov
hlt
xchg
int
in
cli
pop
outsb
inc
rcrl
jns
push
pop
ficomps
inc
xchg
cld
lods
movsl
dec
rclb
push
xor
and
mov
mov
mov
psrlw
lret
sti
lods
and
push
pop
push
rcl
repnz
mov
push
mov
xorb
es
cmpsl
adc
in
pop
jns
int
dec
sub
arpl
push
popa
jb
dec
pop
arpl
lock
mov
test
loope
sub
push
cmp
dec
jnp
xchg
push
sarb
cld
pop
xor
dec
cld
sub
in
mov
cmp
sub
ja
fucom
jmp
jl
jns
adc
xlat
nop
sub
das
push
loop
cmc
addr16
or
lea
dec
mov
cmp
ds
loop
inc
push
aas
lret
adc
das
sahf
sbb
inc
dec
cwtl
lahf
jne
shl
add
xor
arpl
or
ss
test
or
cmp
xchg
mov
mov
insl
ret
xor
and
pop
outsb
xlat
hlt
inc
fiaddl
iret
add
sub
dec
sbb
mov
pusha
mov
cltd
scas
pop
in
inc
or
sbb
cmp
cmpb
stc
data16
and
ljmp
rcll
inc
std
shlb
cltd
iret
cmp
cmp
or
jmp
in
addb
sub
out
xchg
or
cmp
jno
rcll
pop
test
imull
jae
je
iret
sub
inc
loop
js
or
outsb
shll
popa
call
inc
mov
push
sbb
loop
push
enter
mov
in
adc
cli
je
sub
divb
sbb
pop
iret
push
add
inc
xor
je
popf
mov
add
pop
jecxz
fisttpll
test
and
das
dec
or
fstps
cmp
push
fcmovnbe
jecxz
or
or
mov
cmp
aad
mov
push
dec
fcmovbe
hlt
stos
push
and
js
int
mov
jnp
fsubp
jmp
loope
pop
xor
sub
push
aas
or
clc
sbb
scas
mov
xor
ret
lret
add
push
mov
xchg
lret
gs
fs
adc
iret
or
cld
xor
je
cwtl
jge
sub
call
lods
push
test
daa
lcall
leave
lock
scas
xor
jb
mov
popa
jbe
cmp
mov
jbe
je
lds
sbb
jl
lret
push
sbb
fs
test
cmpsb
lods
add
inc
add
sbb
adc
cltd
push
push
repz
jle
mov
xchg
imul
into
lea
push
popf
mov
jmp
add
test
sahf
notb
cli
lea
mov
pop
jnp
lret
gs
sub
loop
sbb
inc
jns
pusha
cmp
int3
cltd
stc
sub
cmp
das
in
adc
in
lcall
sbbl
jns
fimuls
cmp
test
pushf
pop
cmp
xchg
fwait
sbb
mov
pop
popf
out
sub
in
loopne
and
aad
and
sub
lods
cvttps2pi
cmp
push
lods
sbb
push
pop
out
xchg
imul
pop
xor
sahf
fildll
and
cwtl
cmp
add
push
loop
fcomi
shll
test
mov
fwait
xor
jecxz
repnz
enter
mov
push
push
and
cmpsl
ficompl
pop
int
xchg
adc
iret
lcall
sbb
subl
mov
enter
mov
test
inc
shr
cmc
add
inc
lock
inc
dec
call
sub
xor
or
xlat
pusha
jmp
mov
dec
sahf
jne
sub
jge
xor
mov
lods
xor
dec
mov
adc
pop
sbb
pop
and
sar
fwait
sbb
and
mov
mov
xlat
repnz
dec
fdivrs
fldcw
mov
out
lods
rcrl
jnp
int3
data16
mov
lods
and
inc
dec
xchg
jb
fimuls
scas
mov
xor
cs
popa
mov
xchg
out
mov
sub
test
mov
jbe
push
addr16
jae
stos
ljmp
hlt
loopne
daa
pop
cwtl
loop
and
xchg
xchg
inc
inc
movsb
adc
pop
and
mov
xor
pop
ss
jecxz
xchg
int3
lret
or
decl
mov
jb
cmpsl
sbb
cmp
adc
fmulp
in
out
lret
mov
mov
jle
jecxz
jp
sbbl
dec
jp
fstps
inc
push
xchg
icebp
fsts
xchg
and
int
and
push
jb
jmp
rcl
dec
test
ret
jno
sbb
fstl
or
push
leave
dec
and
int
je
xchg
xchg
pop
jle
inc
es
sbb
out
xchg
add
and
xor
xchg
dec
mov
jbe
pop
stos
and
fimuls
cmpsb
pop
gs
ret
mov
out
inc
mov
aad
xchg
sbb
lcall
imul
sub
xor
aad
pop
push
and
or
adc
outsl
dec
push
cli
cmp
mov
lar
in
stos
icebp
in
xor
cmpsl
movsl
push
bound
or
jbe
xor
fdivr
xchg
lahf
hlt
pop
aaa
mov
movsl
xchg
gs
fwait
cs
add
mov
roll
callw
inc
rorb
std
sarb
divb
cmp
loop
pop
adc
fsts
int3
addb
add
push
push
bound
mov
repz
sub
push
inc
pop
fsubs
loope
int3
xchg
mov
iret
push
repz
mov
clc
cmp
rolb
fwait
ss
sub
ljmp
sub
pop
pop
shl
and
add
mov
mov
mov
es
xchg
sti
xor
jp
cmp
in
dec
out
test
jp
and
mov
sbb
jnp
shr
lds
adc
int
push
cmp
jae
jno
inc
cmp
bound
jnp
stos
sbb
lea
xchg
je
lahf
jae
rcrl
dec
xchg
pop
das
xor
insb
push
jle
ljmp
inc
push
add
mov
aas
mov
mov
push
fimuls
or
aaa
inc
in
jns
ret
mov
daa
push
jmp
mov
cmp
aam
add
push
scas
fcompl
aas
xlat
mov
test
cmpsl
pop
fldl
sti
xchg
pusha
jmp
dec
mov
jp
push
fwait
enter
lods
mov
mov
jae
adc
mov
or
lds
inc
adc
xchg
dec
mov
push
or
mov
and
push
mov
and
push
pop
mov
mov
stos
sub
adc
cmp
cmpsb
push
push
pushf
pop
adc
add
or
addr16
jle
push
out
ja
xlat
inc
and
mov
roll
xchg
fwait
dec
fsubs
ret
jo
sbb
pop
cwtl
pop
iret
mov
movb
add
adc
cmpsb
out
mov
inc
jnp
mov
loopne
testb
xchg
cltd
dec
xchg
in
call
std
cmp
ja
fnsave
pop
mov
test
cmc
test
sbb
pop
sbb
pop
test
lret
and
cli
push
dec
mov
dec
jo
popa
mov
out
filds
test
and
sbb
xchg
fs
or
mov
push
jmp
out
sub
adc
adc
repnz
dec
clc
jae
sbb
test
xlat
js
inc
or
adc
mov
nop
cmp
sub
test
clc
xor
mov
cmp
and
int3
cmc
dec
mov
mov
or
push
sub
pop
push
lods
gs
sti
imul
cld
movnti
lock
dec
lret
nop
icebp
cmp
hlt
in
ja
mov
xchg
iret
sub
out
jae
bound
push
cmpsl
jg
jmp
lret
out
mov
outsl
sub
stc
and
lcall
mov
sahf
into
push
jb
inc
fwait
pop
sbb
sbb
mov
pop
xor
ja
inc
js
adc
push
mov
aaa
pop
mov
dec
sbb
and
lcall
pop
xchg
or
mov
pop
mov
pop
ror
inc
sub
in
pusha
das
lods
mov
pushl
fs
adc
jb
clc
push
aam
cmpsb
and
push
and
enter
inc
mov
cld
xchg
xchg
call
divl
jg
mov
cmpsl
jbe
push
ja
ret
and
cmp
cmp
test
icebp
loope
push
cmpsb
arpl
push
inc
ja
in
push
mov
lods
lahf
dec
gs
rcrl
mov
xor
jno
daa
repnz
repnz
mov
add
shrb
and
lds
mov
push
mull
lock
orl
mov
xor
add
movsl
shrb
repnz
lret
lret
mov
push
clc
rolb
test
mov
xchg
cmc
push
dec
cmp
fsubrs
push
add
mov
mov
test
cwtl
xchg
cli
jge
mov
hlt
and
rcrb
cli
xchg
dec
xchg
mov
daa
aaa
adc
sti
push
aad
jp
pop
lahf
test
and
cmpsl
pop
push
loope
fcomps
mov
jb
adcl
int3
mov
fidivrs
jb
shr
clc
out
popa
je
xchg
mov
or
dec
js
inc
in
out
lcall
outsl
sub
aaa
loop
pop
dec
pop
orl
push
cmp
xchg
cmp
inc
cmp
sbb
jno
sbb
inc
std
add
mov
aaa
sbb
inc
xchg
addr16
aas
ljmp
push
dec
push
mov
mov
lods
sub
lock
add
and
push
imul
movsb
mov
dec
js
sub
mov
push
int
outsl
lock
or
rclb
push
inc
cli
fs
xchg
sub
jno
sarb
xor
and
mov
or
es
adc
mov
lods
outsl
add
int
inc
push
jle
je
imull
arpl
stos
mov
xchg
lret
jb
push
push
push
dec
xor
mov
hlt
imul
pop
jne
jg
dec
and
pop
pop
out
pop
dec
test
or
inc
mov
gs
and
addr16
sub
cmp
mov
xlat
xlat
imul
mov
nop
and
add
push
inc
add
xchg
in
inc
and
and
js
loopne
jns
sbb
shlb
dec
mov
out
cmpb
dec
pop
or
push
lods
nop
add
test
push
dec
push
rclb
jo
cld
xchg
jne
sti
push
shll
and
mov
out
ficomps
pxor
gs
scas
sbb
push
sbb
push
inc
aad
inc
jecxz
fwait
div
mov
mov
sarb
cmp
call
jae
cmc
int3
jbe
ds
insb
mov
and
adc
push
inc
sahf
lcall
and
push
lret
aam
into
insl
push
and
daa
fistpll
cltd
jno
out
sub
js
pop
aaa
xchg
adc
sub
and
adc
and
cmp
mov
pop
fsub
inc
xchg
inc
sub
mov
cmpsb
adc
mov
xchg
or
cmp
fs
add
cmpl
sub
pop
hlt
xchg
lds
fucom
cmpsb
push
pop
add
or
ljmp
sbb
and
adc
add
pop
inc
inc
push
in
pop
sbb
vpsrlvq
mov
jmp
leave
sub
mov
sbb
sub
and
xchg
add
mov
mov
or
pop
std
jb
in
rorl
push
push
jge
addr16
fsubr
std
dec
sub
test
insb
mov
lock
xchg
dec
or
loope
cltd
sub
ss
jb
sub
insl
fcmovu
xor
pop
xor
gs
lds
cs
mov
push
ret
add
inc
adc
push
xchg
scas
dec
imul
aaa
jecxz
or
mov
hlt
push
cmpb
test
jle
lock
out
push
popf
lret
ja
sbb
cli
lahf
push
out
aaa
mov
ret
scas
shlb
cmpsb
je
loop
inc
jge
xor
or
mov
rclb
or
add
mov
outsl
fcmovnu
cmpb
das
dec
mov
in
loope
repz
pop
adc
pop
pop
testl
dec
dec
repz
aam
sbb
cmpsb
pop
xor
data16
xchg
mov
xchg
xor
push
sbb
xchg
adc
imul
or
xor
sub
lods
cmpsb
xor
aam
das
pop
jns
push
jno
xor
and
inc
aas
jae
clc
push
mov
sub
js
jbe
mov
xchg
xor
jl
shrl
pop
popf
lea
add
aam
je
pop
and
sub
cmpsb
cmp
mov
stc
fldt
adc
out
sbb
push
cmp
lds
mov
add
adcl
shl
cmp
push
add
les
fwait
sbb
test
pusha
in
pop
pusha
mov
push
sbb
pushf
xchg
mov
lods
stos
gs
jmp
add
out
fcom
pop
jbe
xchg
out
sahf
adc
scas
jno
mov
std
stc
xor
lods
or
insl
cmp
push
mov
loopne
adc
idivl
fstl
loope,pn
aam
push
hlt
test
pop
cmp
fwait
idiv
jg
and
mov
push
in
adc
mov
in
jo
sub
xchg
fsubrs
fnstenv
out
cmpsb
js
data16
xor
pmulhuw
mov
mov
rcrb
xchg
pop
mov
out
mov
and
mov
add
push
pause
xlat
cmp
in
lret
daa
loopne
xchg
sub
inc
std
inc
jb
cli
xchg
cmpsl
mov
ja
push
lea
mov
jl
mov
aam
sub
rcrl
pop
js
lcall
cmp
cltd
pop
ljmp
popf
cmp
add
das
ret
idiv
fwait
aaa
cmc
sub
fcoml
xchg
dec
push
or
cmp
push
jl
mov
out
add
add
imul
out
sbb
xchg
pusha
daa
push
mov
ss
xor
ss
xor
lcall
jmp
test
jge
cmpsl
cld
insb
push
imul
add
xchg
data16
mov
sahf
in
sbb
dec
pop
imul
adc
push
pop
push
outsl
call
or
xchg
sub
imul
into
sarb
xchg
jle
insb
jmp
pop
adc
shl
dec
push
aam
xor
pop
cmpsl
out
lds
pop
cmp
pop
inc
dec
adc
dec
xor
or
jne
sbb
call
or
mov
je
fsubl
sbbb
pusha
and
ret
int3
lcall
inc
adc
popa
lock
jno
pop
insl
mov
pop
push
sub
out
xchg
scas
sbb
lahf
pop
aas
cwtl
iret
cmp
insb
pop
mov
add
mov
or
insb
out
out
xor
xor
daa
test
pop
divl
dec
stos
lret
adc
push
icebp
imul
and
sbb
and
lret
arpl
jl
sbb
fmuls
pop
cli
inc
data16
xchg
jmp
push
pop
dec
adc
lods
repz
shll
mov
dec
ds
pop
rcr
movsl
jl
fmuls
lret
es
jmp
xchg
inc
mov
sbb
xchg
jne
xchg
push
inc
xor
movsl
sbb
sub
add
push
les
aad
xor
sub
lods
xchg
fdivrs
shl
dec
jb
pop
cmp
cmp
rcll
faddl
inc
pop
adc
cltd
push
scas
movsl
mov
mov
in
add
add
cli
ret
std
jno
mov
mov
cmp
xor
out
and
in
pop
int3
xchg
cmp
popf
mov
pusha
push
divb
xlat
lock
add
call
and
xchg
push
cli
popf
jno
mov
in
dec
cmc
fidivrs
xchg
movsl
mov
dec
mov
add
dec
jecxz
mov
testb
dec
sbb
dec
adc
jp
repz
mov
loopne
push
xchg
mov
cltd
adc
xor
xor
jl
in
mov
test
fistpl
jne
push
pusha
add
pop
push
cmp
push
lds
jo
jnp
insl
mov
mov
cmp
orl
adc
cld
push
cmp
mov
repz
xor
inc
mov
fisubrs
or
stc
xchg
or
xchg
out
add
mov
repnz
inc
test
push
add
jmp
inc
jge
test
add
xchg
cmp
arpl
push
in
pop
popf
or
adc
mov
mov
mov
xchg
mov
adc
cmpsl
mov
adcb
testb
xlat
dec
les
mov
aam
ficompl
add
cltd
cmc
movsb
imul
mov
cmc
xlat
pop
push
les
ret
stos
mov
push
enter
push
outsl
dec
or
jmp
pop
xchg
push
fwait
xchg
mov
xchg
dec
lea
fwait
pop
adc
mov
data16
pop
movsl
iret
jle
mov
pop
xor
mov
popf
cmpb
dec
sub
jnp
sub
or
cmp
leave
aaa
inc
mov
pop
fs
push
imulb
jb
das
sub
push
enter
icebp
roll
daa
jmp
mov
inc
add
sub
movsl
jg
mov
and
jl
repz
or
xorb
mov
shl
push
xor
add
cli
xor
dec
xor
lock
dec
popf
xor
or
xchg
outsl
and
sub
mov
mov
sbb
notb
inc
insb
pop
negl
out
add
pop
xor
xor
int3
adc
cmp
mov
xor
mov
and
lret
adc
sbbl
ja
push
mov
sbb
insl
mov
or
cmp
sbb
xor
nop
push
cs
adc
pop
jno
inc
nop
mov
jge
inc
lret
push
out
pop
push
mov
arpl
adc
sbb
xor
aad
insb
lods
sahf
fnstsw
push
je
mov
jns
pop
add
pop
outsl
test
jns
outsb
clc
mov
pop
mov
insb
stc
es
mov
jo
add
imul
movsb
xchg
jecxz
popf
inc
jno
jecxz
xor
dec
add
icebp
std
je
addr16
mov
adc
ljmp
arpl
and
int3
stos
jo
movsl
lods
push
packuswb
pop
subl
icebp
pop
jl
ja
subl
pop
in
sub
push
loope
push
xor
lea
dec
or
cmp
clc
sbb
push
clc
out
aad
jno
xorb
sahf
xor
jb
pop
dec
sahf
mov
add
jmp
or
lods
cmpsb
pop
adc
sbb
push
stc
xchg
pop
jmp
cli
cmp
push
inc
shrb
or
mov
mov
mov
loope
fcmovbe
popl
push
je
ret
not
leave
aam
nop
in
popa
push
mov
add
adc
cmpsb
mov
shll
sti
sbb
scas
cli
popa
les
in
and
in
shr
fucomi
pop
or
out
mov
in
xor
cld
push
subl
pusha
into
mov
outsb
loopnew
aaa
mov
add
filds
pop
xchg
setno
mov
jb
int
sbb
xor
inc
outsl
aam
lods
movsl
pop
aam
jne
jge
sti
sub
ljmp
inc
scas
push
inc
pop
popa
int
int
adc
out
adc
xchg
dec
mov
sub
jmp
enter
xchg
xor
dec
cmp
mov
sbbb
aad
adc
jo
cwtl
popf
xchg
adc
and
xor
and
xor
dec
jge
dec
cmp
sub
test
xor
lea
and
out
dec
mov
movsl
sub
or
pop
dec
sub
cmp
push
jnp
and
xchg
lahf
mov
and
jp
divl
add
lea
lods
push
in
ret
mov
bound
setle
iret
in
pop
roll
cmp
aam
les
adc
xchg
jmp
int3
ja
stc
mov
aaa
jecxz
stc
add
dec
mov
rcll
idivl
movsl
leave
jb
dec
filds
iret
pop
xor
fidivl
jnp
pusha
jae
in
mov
cmp
cli
sti
pop
xchg
push
pusha
pop
adc
sub
xlat
mov
cs
mov
rol
lock
and
cmpsl
test
shlb
push
fisttps
mov
or
inc
sbb
inc
sub
and
lcall
jg
ds
mov
negl
mov
mov
scas
and
bound
aaa
stos
cltd
push
mov
jmp
pop
xchg
je
and
jae
mov
imul
sub
das
pminub
mov
push
mov
push
ja
xchg
jmp
pop
adc
xor
es
jge
mov
pop
sbb
and
mov
imulb
add
add
pop
ds
stos
adc
in
insl
add
sbb
mov
fdivrs
int3
movsb
decl
or
adc
push
xor
negl
push
test
stc
rcrb
mov
jge
mov
daa
outsl
out
cltd
fs
in
imul
jle
inc
int
adc
sti
add
pushf
es
push
call
pop
push
inc
and
inc
add
shrl
shll
add
lret
push
js
into
mov
daa
incl
popa
cmp
call
push
orb
ret
sahf
ret
mov
dec
cmp
js
add
outsl
push
sbb
fsts
pop
push
push
popa
dec
in
ret
jmp
mov
cwtl
add
sbb
mov
jl
hlt
or
repnz
pop
outsl
out
mov
and
les
mov
rol
push
iret
stos
popf
std
sub
imul
ljmp
aam
mov
out
dec
mov
xor
and
enter
movsl
push
movsl
or
inc
and
sarb
adc
xchg
dec
imul
jns
and
hlt
pop
push
fadds
test
repz
shrl
pop
daa
add
xor
jle
sarl
lods
idivl
xchg
lea
dec
ds
mov
cmp
push
mov
cmpsl
outsb
fcompl
cmp
jl
pop
and
cmc
pop
push
sub
ficomps
mov
outsb
xchg
xor
xor
pop
dec
pop
aad
add
leave
xor
mov
mov
in
jb
sbb
jns
push
mov
and
fs
mov
pop
inc
imul
stos
jne
xchg
fildl
jp
jae
mov
cmp
imul
jno
dec
ret
out
xor
addr16
pop
dec
or
jnp
dec
or
add
in
cs
fcomip
out
dec
aaa
inc
push
fs
push
lcall
push
xor
dec
repz
fsubr
pop
mov
pop
mov
cmp
mov
mov
fbstp
arpl
or
imul
inc
or
xchg
cwtl
insl
pop
add
flds
inc
inc
divb
and
cmp
push
add
pusha
into
inc
mov
flds
pop
std
adc
out
cld
js
sbb
loope
or
aam
cli
lcall
cwtl
test
cmpsl
stc
and
lret
repnz
push
sbb
add
jp
jno
call
mov
inc
and
lock
and
repnz
sbb
outsb
fisubrl
aas
out
stos
fidivrs
push
loop
jno
insb
push
pop
sub
jl
jle
push
movsl
sub
cmp
sbb
inc
adc
out
sarb
not
leave
les
dec
insb
jmp
aaa
testb
jl
sub
add
rolb
lods
int3
int3
mov
fiaddl
push
in
cld
dec
fmuls
mov
inc
push
sub
pop
jmp
ficoms
adc
add
iret
ror
mov
insl
cwtl
mov
cmp
popa
sbb
lahf
mov
or
dec
gs
ds
iret
leave
push
and
lods
out
pusha
cmpsb
mov
movsb
pop
xchg
movsl
lret
dec
test
repnz
dec
outsb
inc
fsts
jne
repz
movsb
mov
sti
jbe
inc
cli
mov
pushw
mov
outsb
int3
cmpsl
push
and
sbb
in
dec
dec
pop
pop
mov
or
mov
xchg
push
sbb
scas
mov
aad
mov
lock
fcmovnbe
sub
aad
lods
jno
dec
and
dec
xchg
mov
add
repnz
push
mov
add
movsl
push
lahf
int
or
xlat
sahf
in
jmp
mov
fisubrs
shlb
imul
mov
push
scas
fisubl
mov
sub
or
mov
xor
pop
cmp
and
dec
popf
xchg
cmc
mov
loope
cld
inc
sub
mov
test
aaa
mov
nop
shld
aam
lods
cmp
pop
sarl
or
dec
jno
lret
cmp
xchg
push
dec
in
aas
mov
les
mov
jne
xor
xchg
fcom
scas
mov
ss
mov
or
jge
xor
cmp
sbb
push
cmp
inc
es
ja
insl
rolb
popa
push
aad
push
and
pop
add
xchg
mov
ljmp
aam
in
aad
jnp
enter
daa
jecxz
adc
push
xchg
lds
out
mov
cld
ljmp
cs
ret
mov
or
mov
cltd
mov
jg
push
pop
js
jle
mov
rorb
or
push
push
out
daa
adcl
jle
je
movsl
xchg
sub
int
cltd
inc
cmp
push
sbb
push
das
aam
mov
sub
std
sbb
inc
jmp
bound
mov
je
inc
sub
mov
rorb
mov
mov
clc
cmpsb
inc
mov
cli
xor
fnstsw
in
adc
sub
push
pusha
dec
and
pop
stos
jnp
mov
cs
in
and
push
sarl
mov
test
jns
add
ja
inc
adc
lods
mov
jo
sub
pop
enter
push
add
push
in
or
cmc
pop
xor
cwtl
icebp
leave
add
pop
adc
rclb
test
test
pop
lods
enter
xor
negl
lahf
lret
popa
stos
f2xm1
sahf
cld
sahf
pop
outsl
pop
sbb
lret
fstpl
xchg
call
xchg
fisubrl
mov
pop
pop
adc
push
in
mov
xor
movsb
lahf
fbld
fstpt
lret
ds
pop
xchg
mov
ljmp
cs
dec
sub
ljmp
sbb
ja
mov
push
and
pop
sub
andb
pushf
in
enter
add
clc
mov
mov
cmp
je
xlat
mov
push
imul
iret
mov
sti
sbb
imulb
sub
js
add
dec
mov
std
sub
iret
cmp
fbld
jno
insl
inc
jns
push
mov
pop
rclb
mov
rcl
dec
pusha
arpl
cs
push
shl
hlt
pop
cmpl
jp
mov
cmpsb
scas
mov
pushf
in
mov
inc
mov
daa
outsl
iret
jecxz
pop
jnp
dec
and
sbb
add
mov
dec
add
addr16
icebp
cwtl
pop
push
pop
loope
test
push
stos
das
mov
out
dec
pushf
std
cmp
lcall
inc
jo
aam
push
cli
inc
mov
or
aaa
mov
inc
fs
fsts
enter
sub
mov
sbb
rcrl
stos
jmp
jmp
xchg
mov
aam
subl
or
bound
call
cmpsb
jae
out
jge
xchg
test
xor
aas
mov
pusha
mov
cmc
jb
rcrl
fcmovne
pop
push
and
dec
and
hlt
aas
movsb
js
jle
test
jne
add
idiv
adc
add
inc
notb
enter
or
and
xchg
push
loopne
sarl
jmp
out
mov
lock
mov
arpl
xor
mov
add
aad
js
xor
cmp
call
jb
imul
push
push
and
cmpsl
out
out
xchg
pushf
jge
incl
xchg
rcrl
sub
inc
lods
sub
arpl
xor
out
adcl
adc
sbb
mov
pusha
cmp
sbb
xor
addr16
lods
mov
cmp
push
sbb
in
das
fldenv
pop
mov
jne
sub
sbb
push
pop
cmpsl
or
mov
fnstenv
fistpl
xchg
lret
inc
or
sbb
fildll
xor
ja
xor
cmpsl
test
jg
inc
scas
fwait
rcrb
imul
lods
ljmp
mov
stos
shrl
out
test
cmp
jnp
icebp
or
xor
lock
sub
xchg
mov
jl
and
xchg
pop
sbb
and
divb
loope
test
test
sub
pusha
and
clc
mov
pop
adc
cmpsl
cld
push
mov
pop
sub
movsl
xlat
sbb
call
pop
insl
inc
loopne
inc
dec
mov
mov
aad
and
dec
mov
xchg
sahf
repnz
shlb
jne
int3
sub
les
push
inc
adc
jg
cld
jle
shr
das
xchg
sti
movsb
pop
inc
movsb
xlat
mov
mov
out
adc
xchg
jb
dec
out
pop
lds
js
adc
out
push
adc
xor
push
stos
push
testb
mov
or
inc
imull
or
jecxz
mov
fisubs
ss
cmpb
sbb
pop
outsl
imul
js
dec
outsb
jg
cli
push
pop
and
mov
mov
loopne
mov
int
pop
ret
outsb
arpl
test
cmpsl
xor
push
sbb
adc
adc
hlt
js
jnp
in
fwait
xchg
jl,pn
xchg
clc
and
pop
xchg
fcoms
mov
inc
xlat
jo
das
out
lahf
lds
repz
dec
shlb
push
or
or
jmp
in
push
std
mov
sub
and
out
cmp
cld
nop
lods
fwait
xchg
clc
push
outsb
inc
out
sbb
push
push
push
into
mov
and
cmp
rol
cmp
mov
jne
mov
add
dec
jp
and
int
stos
push
xchg
jl
xor
loop
xor
nop
hlt
cmpsb
rorb
pop
or
mov
in
xchg
andl
mov
and
aas
cmp
ret
push
xchg
jnp
xchg
sti
jge
push
sub
push
int
ljmp
cltd
sub
ret
addb
pusha
xchg
add
mov
adc
inc
lock
inc
push
loop
jl
pop
and
adc
inc
mov
sahf
cmp
insb
clc
sbb
paddusw
pop
dec
sbb
and
insl
mov
addl
push
pushf
mov
shlb
mov
cmp
cmp
sbb
int3
aad
out
jecxz
cmp
std
push
insl
das
popa
cltd
sbb
aam
fsubrs
ss
repnz
fs
dec
adc
out
pop
and
movsl
xchg
movl
pop
lahf
int
in
ret
fists
cmp
sub
mov
lcall
ret
pop
sub
xchg
push
cmp
pop
mov
negl
scas
jne
rorl
rcrb
and
cs
xchg
je
ret
cmp
or
rorb
and
mov
jnp
pusha
ljmp
mov
sbbb
fldln2
xor
test
inc
mulb
or
fnstcw
rol
push
sbb
fmulp
loop
mov
jge
sbb
cs
jb
outsl
out
and
xchg
jp
aas
push
data16
or
mov
pop
in
jge
ja
daa
cmp
sbb
dec
mov
jnp
stos
popa
test
cmp
xchg
out
push
das
lcall
scas
fstl
js
dec
daa
mov
push
ds
lods
enter
pushf
pop
std
addr16
mov
fisubl
mov
cmp
dec
inc
lret
jmp
fidivrs
popa
pop
pop
lret
imul
mov
leave
or
jmp
jns
inc
cltd
fmull
ljmp
lss
cs
fisttpll
jmp
pop
sahf
rol
loopne
leave
mov
xor
add
jp
push
mov
xchg
in
in
inc
push
pop
je
stos
movsl
fdivs
mov
pushf
pop
inc
or
pushf
mov
cmpsl
push
aaa
jnp
std
push
ret
fistpll
mov
adc
or
add
jnp
inc
sbb
pop
xlat
adc
repnz
test
outsl
nop
shrb
mov
xchg
ret
je
xor
inc
inc
scas
pop
cmp
or
mov
sub
pinsrw
pop
xlat
xor
or
add
andl
jno
and
jmp
pop
xchg
test
mov
add
ds
pop
aas
insl
test
push
cmp
push
stc
test
fchs
jns
push
sbb
mov
ss
rolb
sub
mov
iret
movsb
insl
jae
adc
icebp
xchg
sti
test
jecxz
jp
jle
jo
jp
xchg
sbb
lret
fidivrs
adcl
lds
dec
cmc
xor
es
stos
and
loopne
sbb
imul
out
lahf
cmp
jns
add
pusha
jns
cmp
push
xchg
cmp
pop
inc
adc
or
pop
dec
mov
mov
sub
push
jg
fldt
mov
add
mov
xchg
je
incl
popa
mov
push
cmpsl
jbe
mov
fwait
pushf
jnp
iret
and
lods
cs
mov
pusha
rclb
scas
arpl
or
inc
outsb
dec
aam
stos
loopne
mov
inc
adc
sar
sar
loop
jle
xchg
add
sub
cmp
adc
out
xor
repz
cmp
fcoms
rcrl
jecxz
out
call
pop
push
lods
fs
ficoms
mov
pop
bound
fldl
or
mov
jbe
stos
repnz
or
sti
xlat
mov
jge
push
mov
push
cmp
jbe
sar
mov
cmp
xchg
mov
xchg
xor
add
or
clc
jg
fadd
jne
xor
push
stc
push
test
sbb
iret
adc
imul
pop
mov
cs
mov
data16
test
lds
xchg
popa
sub
jae
cmp
fnstcw
mov
in
dec
sub
rcrl
pop
mov
lds
aam
cmp
push
inc
mov
add
js
push
sub
enter
mov
enter
xchg
rorb
or
lods
cmp
in
push
ja
pop
inc
cmp
xchg
out
pop
pusha
mov
mov
repz
in
jl
cltd
in
bound
push
xlat
das
je
sub
nop
inc
mov
push
repnz
mov
mov
punpckhdq
jne
mov
cmp
es
lods
and
jo
in
and
push
pop
fsts
fsubrl
push
add
cld
push
pop
inc
test
les
loop
mov
cmc
lock
scas
xlat
mov
adc
inc
mov
cmp
imul
test
sbb
and
test
mov
xor
mov
lret
xchg
dec
js
adc
das
arpl
aad
cmpsb
inc
dec
cld
stos
inc
fstl
mov
xor
pop
and
ljmp
adc
dec
out
call
jl
or
cltd
inc
jge
cmpsl
mov
lret
or
jbe
mov
std
adc
daa
mov
addr16
cmp
js
or
cwtl
fstpl
adc
lea
mov
or
fs
les
sbb
test
mov
push
mov
add
in
jbe
mov
fmull
fcmovu
add
adc
cwtl
enter
jl
and
xchg
mov
dec
sti
jns
push
ret
push
popf
push
dec
out
in
xchg
mov
repnz
out
fistpll
fnstenv
mov
push
fs
adc
lods
insb
xchg
jecxz
adc
add
mov
js
sub
pop
insb
dec
sbb
std
fisubrl
lahf
mov
scas
mov
xchg
arpl
mov
jecxz
jl
es
mov
dec
subb
push
sub
pop
pushf
fdivs
mov
cli
jbe
daa
lods
jae
mov
add
mov
adc
jle
cwtl
mov
or
lock
cli
sub
pop
fnstenv
xchg
xor
sbb
cld
push
lods
adc
scas
jge
dec
mov
ficompl
enter
cmpsb
push
sbb
push
loop
cmp
push
test
xchg
cmp
sub
push
testl
xor
and
ficoms
mov
mov
xchg
daa
ror
fcoml
mov
ror
js
pop
xor
les
adc
fstpl
icebp
jl
subl
sub
fnstenv
nop
pop
jle
xchg
push
stc
dec
cltd
pop
jp
add
cmp
stos
aas
add
xchg
lea
imul
jecxz
mov
enter
imul
mov
mov
pop
ljmp
outsb
aam
pop
mov
fs
aaa
push
aam
xor
cld
dec
cmpsb
or
mov
mov
mov
xchg
test
mov
add
call
ds
lds
push
mov
sbb
xor
xrelease
arpl
jns
jl
jae
adcl
andb
mov
push
jg
mov
add
dec
push
sbb
outsl
cmp
dec
mov
xchg
or
loop
push
pop
insb
adc
popf
sbb
add
mov
das
aas
shl
popf
push
sbb
fwait
add
add
mov
sbb
push
jmp
into
xor
lcall
lea
cmp
mov
push
leave
rep
pop
push
mov
rcl
cmc
bts
les
aas
insb
dec
rclb
sti
lea
and
in
lret
jb
cmp
leave
loopne
mov
fbld
jle
call
xlat
adc
mov
and
push
cltd
bound
inc
mov
xchg
lea
and
jnp
nop
nop
call
ljmp
lea
jecxz
sub
xor
into
data16
adc
ds
cmp
incl
cmpsl
stos
mov
cld
fs
dec
mov
add
or
xor
inc
pop
mov
xchg
pop
cmc
fisubrs
out
js
adc
insl
add
stc
inc
pusha
push
push
cmp
xor
les
xchg
jg
jp
sbb
pop
xchg
xchg
sbb
sub
jae
fs
ss
add
push
loop
addr16
mov
dec
je
ret
push
xchg
sbb
mov
mov
add
cmp
fisttpl
mov
jge
mov
pop
sub
mov
mov
cmpsb
and
xor
xor
pop
stos
lods
sbb
jo
ss
push
add
sub
sahf
push
pop
xor
stos
xor
inc
inc
rclb
dec
imul
push
push
mov
stc
lcall
mov
push
push
mov
fidivl
shrb
fbld
mov
fcoml
cmp
sub
test
stos
std
push
and
ret
in
push
jge
pop
out
cmp
mov
push
cmp
mov
pop
jle
xor
push
les
int
push
repz
xor
jle
shlb
repnz
cmp
mov
pop
lret
call
hlt
jg
mov
mov
mov
and
xlat
lock
cmp
shll
lds
mov
push
test
fistpll
mov
ficoml
decl
sbb
add
ret
movb
loope
xor
sar
dec
sahf
icebp
in
cmp
mov
sbb
bound
cmp
movsl
sub
or
pushf
std
jge
mov
mov
into
pop
sub
dec
aad
sbb
shll
sbb
out
movsl
lcall
mov
loop
daa
xchg
sub
gs
mov
fwait
loope
jle
push
mov
pop
test
and
enter
aad
cli
aad
pop
add
ljmp
pop
jp
sbb
jne
sti
push
mov
mov
lock
sub
lea
insl
movsb
hlt
ljmp
adc
fcompl
mov
or
xchg
sbb
or
adc
repnz
pop
or
fadds
mov
push
dec
repnz
sbb
sub
mov
imul
adc
push
movsb
mov
mov
daa
mov
aam
lods
jecxz
pushf
pop
mov
icebp
fbld
or
sub
xchg
inc
and
test
cmp
ret
ret
aad
in
popa
xchg
es
cmp
repnz
mov
sbb
popf
icebp
cmp
negb
aas
into
dec
cmc
push
gs
shl
mov
int
and
ficoml
es
call
repz
test
cltd
dec
mov
imul
xlat
sub
test
push
xorl
loope
or
inc
ljmp
sub
int3
mov
loopne
cli
or
cmpxchg
hlt
and
adc
add
add
sbb
adc
das
mov
es
jmp
hlt
add
lock
jle
cmpsl
mov
gs
popf
pop
mov
xchg
or
imul
pop
in
sar
xchg
cmpsl
insb
jle
sub
pop
loopne
mov
outsb
add
rcrl
adc
stc
push
dec
mov
ja
rcll
xchg
lock
in
cld
add
nop
sub
jae
sti
mov
pop
pop
inc
push
dec
movsb
jns
cli
cmpsl
sti
test
sbb
pop
mov
dec
loope
movsb
popf
inc
dec
aad
lret
pop
sarb
scas
sbb
push
popa
xor
movsl
push
lret
cld
shlb
imul
jno
jb
test
test
sbb
lcall
loop
mov
xor
lock
nop
cli
cltd
and
stc
insl
sbb
sub
stos
or
stc
jle
imul
scas
test
adc
cmp
add
ds
push
mov
push
aad
leave
lds
in
cmp
mov
cmp
cmpsl
push
dec
and
mov
jbe
sub
push
xchg
or
sahf
outsl
out
test
cmp
lods
faddp
push
cmp
jne
push
in
test
sbb
push
clc
test
or
test
sbb
cmp
mov
out
insb
sub
cmpsl
push
cmp
sbb
cld
imul
test
pop
ss
jp
in
pop
pop
mov
jns
out
push
lcall
imul
testl
mov
mov
repz
and
mov
jnp
cwtl
or
jmp
icebp
xchg
or
inc
jns
pushf
ds
into
loop
add
mov
lret
adc
adcb
pop
sub
xor
jo
movsl
lods
andb
jo
les
lahf
mov
gs
cli
popa
stos
jbe
xor
lods
ret
push
scas
in
sbb
ret
pop
nop
cmp
and
hlt
jns
mov
adc
pusha
aam
fbld
mov
xchg
xchg
data16
push
mov
mov
ds
std
xor
sub
out
mov
mov
movsb
xchg
stc
in
mov
pop
insb
divb
adcl
jne
mov
mov
pop
jno
push
push
xor
inc
inc
es
enterw
jnp
mov
cmp
rorb
jmp
add
dec
fbld
fbld
or
mov
and
jo
mov
imul
or
and
jg
inc
lock
cmp
pop
push
add
scas
lods
lret
sbb
mov
adc
in
cmp
sub
xchg
fs
mov
loopne
jb
push
push
cwtl
xlat
adc
xchg
je
dec
sti
shl
and
mov
pop
cmpsb
dec
add
xchg
dec
pop
mov
pop
out
pop
fst
cmp
jnp
loope
xchg
dec
xchg
push
pop
pop
cmp
push
sub
shl
dec
xor
idivw
add
in
es
pusha
mov
rclb
sub
mov
mov
jno
adc
cmp
fdivl
sbb
push
lret
mov
std
adc
lret
sub
enter
pusha
mov
inc
mov
push
lods
cltd
push
inc
push
dec
sahf
push
mov
aaa
xlat
std
shlb
in
loopne
insb
push
sar
das
pop
sub
xor
test
nop
sub
mov
mov
mov
loop
adc
mov
aad
or
mov
xor
cmp
clc
int3
mov
jle
cld
insb
loopne
movsl
mov
mov
orb
cmp
xchg
insl
inc
repnz
or
inc
cmp
out
jae
ds
pop
loop
aas
or
xor
inc
movsb
insl
mov
or
cs
add
jg
adc
pop
push
sub
imul
mov
sbb
mov
xor
and
mov
mov
in
jg
inc
loope
mov
mov
daa
and
iret
cmp
sub
test
ljmp
scas
push
imul
push
push
cld
fs
push
sbb
sbb
add
adc
scas
adc
push
inc
push
xchg
clc
or
out
add
add
xchg
rcll
xlat
repz
push
cmpb
int3
mov
aad
and
cmp
das
bound
mov
rcl
lds
imul
pop
and
imul
sbb
push
test
arpl
or
push
cmp
push
test
xchg
cmp
data16
xor
pop
and
in
daa
inc
scas
out
sub
push
roll
push
gs
aam
sbb
fwait
test
inc
bound
sub
int
cmp
xor
jb
jo
sbb
test
aam
rol
lcall
mov
idiv
lods
idiv
push
mov
sbbl
rorb
scas
mov
push
leave
sbb
cmp
into
pop
movsl
adc
into
mov
repnz
imul
jns
ret
lret
adc
gs
mov
xchg
ljmp
add
mov
cltd
jmp
loope
mov
inc
mov
push
js
clc
push
pop
pop
mov
xchg
imul
into
jg
pop
aaa
cmp
mov
fcmovbe
sarb
inc
sbb
je
cmp
mov
lods
push
mov
jge
mov
out
repz
jl
xchg
stos
jb
pop
clc
sbb
dec
xchg
and
lods
orl
mov
mov
addr16
pushf
mov
test
mov
push
bound
mov
sbb
dec
jo
in
pop
fs
and
adc
or
jecxz
das
lock
lds
mov
outsb
pop
subb
lock
sub
mov
int
adc
or
and
test
mov
movsb
adc
js
pop
adc
add
bound
fwait
sar
fsubr
xchg
or
fs
rorb
test
sub
sbb
cmp
shll
ret
mov
stc
dec
les
stos
mov
fwait
dec
push
mov
adc
flds
xchg
inc
jno
pusha
in
cmpsb
jge
jnp
jge
mov
pop
pop
lock
cmpsl
movsb
xor
das
dec
mov
nop
in
repz
adcb
push
jg
fs
in
push
fnop
nop
into
or
jp
scas
call
cmp
out
xrelease
pop
push
imul
adc
jns
push
stos
lret
dec
movsl
adc
sbb
rclb
sti
cltd
bound
jo
popf
scas
lock
mov
xchg
or
cmpsl
in
push
mov
mov
or
clc
shrb
das
movsb
insl
ss
sub
mov
leave
lods
xchg
rcll
idivb
out
cmp
cmc
xor
sub
or
repnz
mov
rorl
mov
adc
push
inc
mov
cmp
sbb
dec
push
mov
xchg
shll
bound
mov
push
dec
or
mov
and
jo
pop
lret
adcl
pop
cmpsb
mov
outsb
add
mov
out
dec
into
xchg
ret
nop
xor
movsl
test
movsl
repz
push
add
imulb
aaa
mov
jmp
mov
sbb
pop
adc
ficoml
jmp
adc
repnz
lahf
fsubr
stos
sub
data16
mov
push
dec
fstpt
aaa
adc
aas
or
sub
pop
sbb
fwait
lahf
pop
ret
cmp
inc
adc
mov
mov
mov
adc
fwait
xorb
push
adc
call
fcomps
divl
int
push
adc
js
jns
movsw
xchg
pop
xor
nop
out
jmp
cld
pop
fdivs
xchg
jl
loop
mov
cmp
aaa
std
lods
mov
mov
xchg
pop
xorl
into
fsubs
cmc
mov
inc
mov
addb
cld
int
movhps
fsubs
sub
and
stos
lock
push
cmp
inc
sbb
sbb
push
cld
cltd
and
sbb
push
lock
push
jbe
cmp
icebp
adc
int3
jecxz
and
imul
mov
pop
mov
xor
scas
sbb
add
jbe
pop
loopne
std
pop
xchg
pushf
mov
dec
es
call
aas
pushf
sbb
mov
and
insb
data16
jge
into
into
jmp
sub
fisubrl
pop
pop
orb
push
clc
fstpl
jp
adc
aas
push
pop
pop
inc
icebp
js
shll
ss
imul
add
dec
add
in
xchg
dec
jnp
push
repz
scas
sar
sarb
and
jg
mov
pusha
in
xchg
push
sahf
sbb
pop
stc
and
add
gs
aaa
sbb
xchg
aam
push
out
stos
xchg
fsubl
shlb
xor
push
mov
push
ret
or
pop
xor
xchg
inc
divb
arpl
lods
loope
mov
test
icebp
in
push
jno
js
ds
pop
jae
jnp
orb
pop
int3
mov
fistpll
test
xchg
in
movsl
dec
and
call
mov
adc
push
xlat
xlat
add
outsl
cmp
into
pop
iret
roll
cs
in
sahf
daa
sbbl
movsb
push
dec
xchg
or
stos
test
mov
int
arpl
inc
in
jnp
and
or
or
mov
arpl
inc
pop
movntq
lods
pop
push
sub
mov
fsubr
push
mov
add
in
push
jecxz
adc
or
lods
xchg
iret
arpl
ret
bound
jecxz
sbb
pop
lock
inc
push
push
insl
xor
pop
push
cmp
add
testl
aam
mov
mov
add
pop
xchg
xor
xchg
test
notb
mov
fwait
sti
fst
inc
mov
push
pop
je
sub
pavgw
mov
sbb
adc
add
lds
jno
ljmp
mov
repz
ljmp
xchg
test
stos
dec
jb
pop
xor
stos
fiadds
or
lea
jo
shr
mov
inc
cmpsb
jb
lahf
push
mov
aas
cmp
jb
cmp
shr
pop
xchg
add
xchg
mov
jb
and
inc
fldenv
call
push
inc
shll
mov
rolb
in
inc
inc
sub
mov
push
pop
mov
xchg
add
loop
xor
iret
adc
imul
shll
xchg
ja
dec
pushf
test
cmp
pop
dec
add
fwait
adc
call
into
xlat
arpl
xor
xchg
inc
es
inc
aam
clc
bnd
push
aas
pop
jl
dec
pop
repz
jmp
adc
dec
das
dec
shrb
sarl
rcrl
jns,pn
out
xor
push
mov
mov
xor
pusha
sub
or
and
lds
arpl
sti
imul
mov
lds
jno
xchg
mov
cs
mov
sbb
pushl
jbe
add
add
cmpsb
sub
jno
dec
arpl
adc
sub
or
xlat
pusha
test
push
int
loope
sub
call
cmpl
icebp
movsl
mov
cmp
mov
pop
fwait
out
ljmp
xor
shl
pop
ds
fadds
mov
cmp
ja
test
popf
mov
xchg
out
adc
and
jno
lret
inc
mov
add
mov
push
nop
or
and
push
add
jmp
pop
test
lock
scas
adcl
push
out
mov
mov
jbe
pusha
or
jl
ret
jae
mov
fdivrs
cmpsb
std
mov
insl
jb
cmpsb
iret
das
fildl
dec
cs
popf
and
xor
sbb
jo
out
push
xor
pop
scas
dec
int3
call
ljmp
xor
xchg
test
push
std
es
out
mov
push
sub
ljmp
inc
and
mulb
mov
add
sub
fisttpl
adc
inc
imul
test
int3
jo
out
dec
inc
cli
jle
adc
push
popf
sub
jb
mov
movsl
andl
ret
add
mov
mov
fdivrs
jmp
sub
clts
cmpsb
fists
jbe
icebp
mov
enter
mov
and
ds
dec
cmp
cmp
out
imul
push
or
aad
and
notl
mov
sub
int
cli
xor
scas
movsb
dec
inc
cmp
push
or
xchg
ds
push
xchg
fcmovnb
sbb
lea
dec
xchg
clc
pop
gs
in
inc
dec
pop
aad
adc
sub
cmp
fiaddl
cmpsb
cmp
dec
sti
sub
lods
jl
test
gs
jle
rclb
insl
mov
icebp
mov
xor
scas
mov
cmp
fistpl
sarl
lods
test
imul
sub
dec
sbb
clc
aaa
stos
lret
pop
mov
or
xor
popf
aad
push
daa
jb
cltd
in
sbb
push
push
popf
add
xchg
in
faddp
fwait
stos
clc
ret
pop
or
mov
enter
sub
mov
jmp
aam
push
in
pusha
cli
loopne
enter
adc
push
leave
dec
xor
mov
das
insb
sbbb
cltd
cmpsl
movl
jbe
inc
jns
lea
push
mov
insl
xchg
lahf
dec
or
fldcw
dec
stc
xchg
movsl
mov
dec
cmc
mov
xchg
mov
fs
xchg
cmc
ds
arpl
fcom
imul
and
xchg
loopne
adc
mov
push
jno
test
dec
cmp
scas
and
cmp
push
sub
lods
push
flds
add
inc
adc
popa
mov
in
rcl
sub
test
xor
jae
push
mov
add
cmp
imul
lods
or
lds
adc
imul
addr16
cld
popf
xchg
daa
repz
fs
into
les
andps
fisttps
icebp
inc
sbb
ja
dec
ss
lret
and
fisttpll
stc
cmp
or
inc
js
mov
roll
push
adc
pop
ret
into
mov
add
xchg
mov
fdecstp
icebp
jns
fmull
jg
sbb
jp
cli
cltd
inc
je
jno
rcr
or
insl
cmpsl
adc
cmp
and
add
jbe
mov
dec
jp
push
cld
popf
pop
shlb
or
jo
jmp
in
aam
xchg
repnz
jns
call
fbstp
dec
sbb
add
xchg
lcall
daa
inc
pop
mov
cwtl
jno
insb
jnp
inc
std
pusha
nop
jmp
xor
pop
out
sub
in
xchg
lret
mov
jmp
fidivs
ss
imul
pop
pop
outsb
popa
mov
xor
pusha
ret
mov
jl
mov
cmp
bnd
ret
addr16
nop
cmp
jno
inc
shll
cmp
jecxz
pop
jge
inc
xor
clc
xchg
into
sub
pop
mov
cmp
fwait
outsl
idivb
ljmp
and
sahf
xchg
adc
add
mov
sbb
xchg
fnstsw
mov
lahf
sub
movsl
or
sbb
push
insl
pushf
inc
es
push
rclb
sub
xchg
jno
jg
movsb
mov
inc
mov
mov
out
sahf
das
mov
in
lahf
pusha
dec
push
repnz
out
pop
inc
stc
fdivrs
hlt
pop
pop
mov
xor
das
mov
les
out
fs
in
mov
lds
pop
enter
cli
adc
pop
jnp
sbb
scas
sub
arpl
xchg
ss
sbb
and
inc
mov
insb
fst
mov
aam
mov
xchg
push
mov
and
stc
jecxz
fisubrs
ljmp
cmpb
lods
fildll
pop
push
fwait
add
lock
and
mov
dec
ret
popf
arpl
addr16
into
stos
sbb
movsb
lcall
icebp
pop
cmp
add
jle
fdivp
cmp
pop
mov
or
and
jno
push
lret
sub
adc
test
sti
testl
ret
shrl
rorb
andl
jo
pop
pop
ret
mov
cmc
sbb
xorb
subl
jo
negl
or
sbb
gs
jbe
or
stos
xor
hlt
fsts
or
fistpl
int
inc
shl
sub
movsl
push
mov
cli
dec
jae
ss
inc
imul
xchg
sub
push
cld
mov
scas
std
mov
pop
cmp
les
jb
inc
loopne
xchg
mov
call
and
xorb
lods
pusha
sub
mov
stc
inc
mov
jo
filds
mov
fisttpll
sbb
cmp
mov
and
scas
das
loope
add
or
or
and
mov
mov
sub
sti
js
aaa
inc
popf
iret
jmp
in
lcall
xor
fwait
inc
push
mov
lock
cmpl
and
ds
inc
ret
leave
cmp
and
jp
stos
std
scas
pusha
adc
or
and
and
subl
pop
adcb
sbb
fcmovu
jp
syscall
pop
push
cmpsb
cltd
xor
in
sub
add
inc
mov
inc
shll
call
test
test
mov
sbb
stc
jmp
inc
test
ret
xchg
ret
sahf
test
pop
out
orb
push
push
inc
les
xor
repnz
mov
out
pandn
fst
add
popf
cmc
sub
daa
mov
mov
mov
mov
fisttpll
inc
jp
sbb
ret
mov
aaa
decb
inc
andl
adc
stc
mov
pop
push
dec
popa
test
jae
repnz
pop
adc
adc
push
cmpsl
xchg
sarl
scas
sub
cmp
jo
imul
sub
cs
cld
sti
jecxz
sbb
ret
out
sub
fiadds
and
xchg
lock
jecxz
lahf
and
push
sbbb
xor
mov
outsl
addr16
call
jmp
xchg
in
and
ror
cmpsl
sub
xor
and
lods
add
xchg
inc
fs
lret
mov
fmull
push
or
xor
mov
bts
rcll
outsb
jg
cwtl
sbb
test
mov
into
fistl
cmp
ja
jno
fsubr
inc
jl
rolb
das
inc
mov
lret
jg
cltd
or
inc
sub
xchg
adc
mov
inc
mov
mov
icebp
fcompl
sub
mov
mov
dec
nop
sub
fwait
pop
and
inc
mov
sbb
idivl
add
or
push
inc
pop
fsts
sbbl
nop
test
cs
or
movsb
and
out
add
mov
mov
je
subl
aad
fisttpll
sub
push
imul
lahf
lret
mov
jno
sbb
xchg
xchg
add
lcall
adc
out
ljmp
fisubs
imul
aas
mov
xor
dec
xchg
imul
hlt
loop
mov
add
and
scas
xchg
pusha
sub
pusha
pop
in
pop
push
xchg
and
xlat
or
mov
cmp
int
sti
decb
aad
push
loopne
movsl
les
in
inc
ret
push
mov
cld
cmp
inc
xchg
mov
scas
ret
addr16
jge
mov
popf
push
and
inc
mov
nop
sbb
cmpsl
add
push
dec
add
cmp
jae
out
adc
bound
dec
aas
xor
je
adc
lods
xor
dec
es
inc
add
stc
in
rorl
out
nop
sub
std
out
jns
inc
push
lods
cmp
sub
outsb
mov
outsl
stos
addr16
cmp
iret
mov
cltd
pop
lret
sbb
dec
push
lock
mov
mov
add
int3
lock
push
rcrb
dec
out
test
and
inc
cmp
adc
ficomps
push
sub
aam
arpl
ds
or
pop
jl
adc
cwtl
incb
or
xor
jno
sbb
xchg
xchg
lret
xchg
test
xor
add
adc
mov
inc
insb
add
lods
push
scas
jbe
mov
lret
sub
std
jo
or
pusha
mov
and
mov
pop
movsl
mov
sub
in
ss
fsubr
xchg
mov
sub
in
jns
popa
fisttps
mov
add
fs
xor
inc
iret
cld
sub
and
dec
dec
mov
ret
xchg
push
test
mov
sub
adcb
shl
lahf
mov
ljmp
cltd
or
adc
push
cmp
push
stos
cmp
test
pop
insl
leave
or
sub
xor
jg
pop
test
daa
addl
insb
pop
cmp
daa
cmpsb
inc
lahf
les
out
mov
mov
jne
neg
adc
fwait
pop
repnz
jl
scas
xchg
and
sarb
add
mov
iret
sub
sub
jle
imul
mov
mov
test
jbe
sahf
enter
test
push
out
cmc
test
popa
ror
dec
push
xchg
pop
fstpt
jecxz
mov
jnp
int
inc
ret
xchg
ret
shrl
or
dec
jmp
call
outsb
in
push
xchg
lock
mov
sub
das
push
cld
repnz
ss
notb
scas
lea
mov
clc
mov
in
sarl
sbb
and
stos
fmul
mov
insb
das
js
std
stos
sub
pxor
xorl
xor
movsb
sub
orl
adc
mov
sbb
dec
and
inc
mov
and
out
int
or
imul
pop
in
or
andb
sbb
or
pop
cmc
fmuls
pop
lahf
out
mov
sarl
or
ja
and
loope
cli
xchg
sbb
into
pop
xor
push
jle
xor
pushf
leave
inc
ss
aad
bound
subb
jmp
sarb
jbe
push
aam
repz
mov
mov
dec
insl
adc
sbb
dec
js
sbb
imul
jmp
insb
pop
cmpsl
inc
iret
xchg
mov
sub
inc
icebp
inc
rol
xchg
lcall
outsb
test
das
lcall
inc
shrl
inc
sub
pop
sbb
jnp
dec
mov
or
nop
dec
lahf
test
xchg
dec
fsts
gs
lods
loopne
sahf
fcmovbe
jae
leave
pop
sub
ljmp
fdivrl
dec
cmpb
dec
ljmp
stos
lods
in
stos
sbb
jnp
pushf
or
cmp
js
das
aam
xchg
in
mov
jae
popa
pop
rolb
sub
jg
lods
jge
xchg
xchg
hlt
jne
mov
in
jecxz
jbe
insl
or
xor
jb
test
leavew
loop
jmp
add
lods
outsl
nop
imul
adc
cmc
and
mov
test
push
lcall
repnz
push
lahf
bound
adc
out
shrb
pop
and
mov
or
mov
mov
and
ret
icebp
mov
xchg
inc
std
ret
jecxz
std
ja
dec
cwtl
jp
push
popf
or
mov
xchg
xchg
and
lret
lahf
jmp
pop
stos
pop
pop
jne
pop
fbld
jo
aaa
movsl
cld
mov
mov
subl
aam
enter
mov
cmp
cltd
lea
lock
mov
int
out
xlat
clc
cmp
out
xchg
add
cmpsb
clc
jl,pn
sbb
sbb
xchg
lds
or
fs
js
adcl
mov
xchg
ret
int3
mov
inc
stc
or
rorl
nop
inc
adc
fstl
mov
pop
imul
addr16
cld
adc
xor
fldenv
inc
sbbl
xor
inc
nop
adc
arpl
push
inc
adc
sahf
push
push
popa
rcll
rorb
add
xchg
aas
subb
push
push
leave
dec
and
inc
push
in
mov
addr16
mov
lock
mov
aam
cmc
ret
popf
sub
dec
and
push
das
dec
pop
fdivr
out
lods
push
push
movsb
pop
inc
enter
out
call
mov
push
jl
in
add
jl
aam
and
jae
mov
sarl
pusha
cmp
push
mov
inc
mov
sbb
icebp
xchg
add
shll
ret
jg
mov
in
xchg
pop
leave
int3
nop
leave
clc
lods
pop
pop
repz
lods
in
xor
mov
mov
sti
int
sarb
xor
scas
xchg
cmp
jg
stc
stc
mov
mov
cmc
leave
addr16
ror
sbb
pop
push
push
insl
xchg
mov
pop
test
ficomps
ljmp
aad
rclb
test
mov
lret
push
in
je
or
cld
cmp
sbb
repz
add
clc
cmc
ret
pop
pushf
cwtl
ja
jno
lcall
loopne
pop
mov
pop
dec
mov
daa
and
xchg
mov
dec
mov
mov
mov
and
ja
orb
or
dec
outsl
cltd
pop
xor
xchg
les
sbb
mov
mov
fidivs
les
adc
lds
in
dec
popf
push
pop
pop
icebp
inc
sti
cwtl
dec
mov
repnz
insl
adc
push
push
push
sub
xchg
cld
mov
iret
std
daa
inc
jmp
fnstcw
in
dec
sti
test
fiadds
and
push
ja
fldt
gs
adc
xchg
movsb
xchg
dec
push
sbb
out
nop
add
outsb
aam
cmp
mov
or
dec
adc
fwait
cmp
hlt
mov
xchg
aaa
leave
dec
or
loop
lods
imul
aas
jmp
es
out
lods
dec
jbe
sub
and
in
mov
push
sbb
jge
xlat
repz
mov
adc
imul
xchg
mov
sahf
int
mov
sub
jge
pop
xor
xor
fdivs
xchg
arpl
or
xlat
sbbl
jbe
or
jae
jo
sub
aaa
cwtl
test
fisttpl
add
push
fnstenv
sarb
cmp
adc
xor
cwtl
aas
arpl
sub
sbb
or
test
std
lock
movsl
pop
lods
popf
in
iret
push
ret
and
pop
jge
jne,pt
dec
daa
xchg
out
push
imul
sub
cmc
fs
fbld
fwait
shufps
push
xchg
cmp
filds
mov
dec
js
call
jns
pop
mov
aad
iret
mov
outsl
lds
fcompl
jnp
in
sbb
dec
enter
cmp
xchg
inc
jge
mov
call
push
lret
adc
sub
mov
lock
mov
jae
cwtl
push
mov
stos
push
shl
out
insb
mov
cmp
xchg
ss
iret
sbb
aaa
jae
mov
mov
repz
sub
or
outsb
mov
jecxz
mov
pop
lods
cmp
jle
movsb
shl
mov
lahf
push
or
adc
aam
rolb
out
in
and
shll
jns
insl
xchg
cmc
push
loopne
data16
rclb
je
jnp
out
push
adcb
xchg
push
sub
shl
add
mov
outsb
jecxz
sti
and
lods
lahf
or
ja
sub
push
subl
jo
jae
jbe
out
repz
sub
ret
movsl
hlt
mov
rorb
loopne
shrl
xor
pusha
push
out
pop
mov
rcl
pop
stos
jae
sbb
and
sbb
cmp
pushf
ret
imul
or
lods
mov
mov
nop
xchg
push
das
rcrl
sub
test
sub
fld
outsl
jg
mov
sbb
call
dec
add
orb
imul
dec
out
and
inc
mov
gs
nop
cmp
repz
cwtl
ljmp
ja
sbb
loopne
fs
dec
sahf
cmpsl
int
orb
adc
pop
or
inc
adc
jmp
pop
repz
jl
pop
enter
pmaxsw
shll
bound
and
lret
xchg
arpl
cli
jae
inc
mov
xlat
fcoms
dec
xchg
scas
dec
xchg
cmp
and
pop
es
daa
mov
inc
jg
mov
mov
insl
adc
mov
stos
inc
xchg
and
lret
pop
sub
or
pushf
stos
pop
jae
jmp
ds
inc
pop
cmp
mov
ss
cmp
outsb
mov
jo
test
stos
in
mov
adc
mulb
and
ret
cltd
or
add
out
movsb
rcrl
cmp
push
adc
push
add
add
or
inc
mov
stos
sub
xor
mov
mov
cmp
fdivrs
jbe
inc
and
push
sbb
fwait
lods
adc
aad
adc
ret
lods
pop
xlat
fcoml
xchg
shl
fstps
and
lahf
inc
add
cmpsb
popf
adc
fbstp
pusha
movsl
loope
in
shrl
jl
pop
mov
cmp
call
push
sbb
vcvttps2dq
xor
push
in
prefetch
aaa
jae
jg
das
call
mov
mov
sbb
jnp
xchg
dec
pop
adcb
pop
movsb
aaa
mov
mov
mov
sub
dec
or
test
cmp
pushf
push
loopne
mov
repz
in
lods
lret
adc
mov
mov
imulb
movsb
into
inc
xor
mov
jl
add
mov
mov
or
push
sti
cs
sub
pop
mov
push
movsb
test
mov
fcomps
jp
notl
push
pop
mov
lahf
ja
push
imul
mov
insb
icebp
jl
add
in
mov
pop
aas
insl
pop
jae
jl
loopne
inc
stos
call
icebp
cltd
ljmp
dec
enter
sbb
xchg
fnstsw
test
mov
cmp
pop
sub
jmp
xlat
xchg
sbb
and
cltd
pop
sub
clc
dec
xchg
aaa
jmp
test
cmp
pop
mov
inc
jns
ljmp
test
cmp
jl
sbb
bound
xor
lods
lcall
mov
test
je
fcoms
add
pop
mov
sbb
frstor
cwtl
push
inc
add
sub
cs
mov
ret
jl
or
fsubr
and
aaa
sti
stc
nop
mov
cmpl
sti
mov
or
sbbb
pushf
pop
lcall
cmp
repnz
dec
imul
mov
and
pop
imul
push
daa
lds
inc
ds
fwait
stos
mov
adc
call
jae
mov
or
and
cli
jae
xchg
inc
xor
das
popf
dec
cmpsb
cltd
out
data16
ja
push
stos
out
xor
and
es
add
dec
jo
push
ret
dec
dec
cmpl
lcall
jp
hlt
loope
ror
mov
js
loope
xchg
lret
xchg
xor
adc
add
sbb
xchg
mov
cmp
push
out
outsl
scas
addr16
inc
es
adc
mov
notl
dec
or
pop
aaa
test
outsl
inc
sahf
fldl
dec
dec
cmp
bound
or
insl
add
dec
and
mov
jae
movsb
ror
faddl
nop
or
js
sbb
cmp
mov
ja
out
pop
add
lock
mov
lret
mov
jnp
rclb
mov
adc
aad
or
cmp
inc
fwait
call
in
imul
xor
sub
sub
sbb
jae
mov
adc
pop
jns
mov
pop
out
rol
sub
add
shlb
mov
inc
arpl
fimuls
repz
inc
hlt
xor
cmp
sbbl
xor
sbb
aas
stos
cmc
dec
scas
repnz
lcall
cs
loope
push
xor
in
or
lret
leave
fwait
hlt
mov
sub
xchg
xchg
xor
jbe
mov
pop
fdivr
push
xchg
xchg
mov
and
mov
or
inc
mov
inc
add
inc
xchg
mov
js
subl
jg
out
or
sub
clc
push
ds
pop
or
outsb
lds
fnstcw
sub
repnz
pop
lahf
out
or
cmpb
sahf
inc
mov
cwtl
adc
push
sub
jb
sahf
push
push
iret
mov
scas
aas
loope
rcrl
int3
hlt
fwait
daa
xchg
cmp
loop
add
loope
cmp
pop
xchg
mov
fwait
out
in
mov
adc
stos
xchg
jmp
scas
sbb
xchg
mov
ret
pusha
rcr
movsb
ja
arpl
test
sub
negb
call
add
mov
add
fldt
mov
in
in
mov
mov
pop
dec
sbb
int
jge
ljmp
andb
repnz
call
mov
or
mov
lahf
cmp
pop
xor
sub
inc
stos
ficoml
lahf
pushf
es
jl
jge
xchg
ja
adc
lea
sar
sub
fsubrp
add
sub
rol
pop
add
sub
out
inc
movsl
sbb
lods
addr16
outsl
insl
imul
aaa
loope
push
mov
das
rcrb
mov
repnz
cmp
js
mov
lock
sbbb
mov
inc
mov
push
pop
pop
and
xchg
pop
add
mov
iret
sub
in
mov
pop
cmp
shrb
cmp
cmpb
loopne
hlt
andb
pusha
popf
ret
in
inc
sti
or
mov
push
adcb
dec
shrl
ss
cltd
dec
hlt
inc
add
insl
add
adc
push
mov
insb
push
and
jne
mov
mov
mov
js
in
sahf
add
sbb
mov
pop
movsb
stos
adc
jb
leave
orl
scas
push
push
xor
push
das
repnz
cmp
cltd
cmp
lods
out
ja
mov
ljmp
and
je
mov
xor
jge
pushf
andl
pop
leave
fbld
rcll
fmulp
scas
adc
addr16
add
mov
inc
push
dec
mov
mov
lea
out
and
nop
mov
jecxz
pop
test
or
adc
xor
int
sbb
push
pop
lods
insb
mov
subl
cmovno
mov
ret
test
pop
addr16
adc
and
adc
outsb
fimuls
sbb
das
subb
iret
and
dec
ja
pop
gs
jae
sub
adc
jle
filds
sub
push
enter
inc
ret
stos
mov
imul
pop
repnz
xchg
mov
mov
dec
push
aad
inc
xor
lea
cmc
cmp
mov
stos
int
dec
in
leave
xchg
int3
imul
repz
js
lahf
test
in
testl
lcall
sbb
adc
sarb
pop
add
dec
clc
inc
inc
aam
inc
xor
shlb
mul
iret
and
xchg
ficoml
enter
das
out
sarl
inc
push
xlat
loopne
and
xchg
cltd
xchg
mov
out
push
mov
mov
das
adc
mov
bound
fisttps
mov
arpl
jbe
dec
ljmp
jnp
jbe
xor
loopne
or
outsb
mov
scas
pop
repnz
pop
xchg
cmp
pop
movsl
xchg
faddp
pusha
mov
add
int3
mov
fstpl
jmp
notb
jnp
cmp
jmp
ja
pop
repz
dec
pop
sub
ss
cmp
cmpl
stos
std
sbb
and
mov
into
loop
idiv
inc
jmp
and
imul
popf
in
ja
and
movsl
sbb
ljmp
adc
add
cmp
and
iret
out
mov
push
mov
inc
int
jae
lock
pop
ror
fcmovnb
in
inc
mov
xor
mov
pop
pop
daa
das
lods
mov
push
xor
pushf
out
inc
fidivl
xchg
cmp
jmp
add
popf
lret
into
lods
movsb
test
jp
in
scas
cmp
cmp
scas
sti
clc
fdivs
or
dec
in
push
sub
lret
inc
xchg
or
push
inc
stos
fldcw
push
mov
js
ss
mov
xchg
fs
cmpsl
imul
insl
inc
je
push
addr16
push
scas
std
test
xor
fstps
fistpll
es
mov
and
fisttps
xor
shl
mov
lods
cmc
push
stos
mov
adc
scas
inc
adc
and
or
movsb
xor
sbb
push
or
js
cmp
testl
movsb
movsl
ds
ss
int3
add
xchg
add
lods
xchg
outsb
hlt
push
test
sub
pop
gs
int
mov
add
inc
mov
outsb
andb
push
and
add
lock
cmp
push
div
insb
cld
cwtl
and
xchg
jmp
cmp
out
pop
enter
insl
ljmp
insb
xor
xor
pop
imul
movb
sub
mov
rorl
stos
cmpsl
xchg
add
shrd
icebp
xchg
inc
xor
xorb
imul
loope
test
in
adc
mov
adc
icebp
jge
sbb
loop
jne
inc
jge
xchg
cmp
sarl
popa
imul
cmp
in
adc
dec
aas
pop
test
and
shll
mov
mov
mov
ret
lsl
xor
dec
sbb
jg
in
dec
test
sbb
nop
cmpl
mov
mov
scas
inc
adc
out
inc
mov
and
sub
mov
test
mov
in
int3
cli
es
mov
fistps
push
xchg
sti
mov
push
push
push
scas
mov
adc
or
mov
je
in
xchg
xlat
xor
fisttpl
adc
daa
movsb
pop
xchg
test
pop
sub
fcmove
xchg
jl
pop
cmpsl
out
dec
nop
addl
sub
mov
sbb
notl
sub
cmp
cmp
daa
addr16
icebp
add
and
lret
roll
imul
jmp
pushf
mov
bound
mov
cmp
pop
cs
mov
lahf
lods
ret
push
inc
addl
stos
dec
cld
pop
stos
xchg
movsb
jp
push
sahf
movsb
inc
and
das
add
inc
cmp
xor
adc
ret
lds
lret
repnz
movsl
mov
xor
or
int3
mov
mov
dec
es
pushl
add
jae
call
mov
int
lcall
mov
inc
pop
dec
aam
xchg
lea
pop
adc
dec
bound
stos
xor
gs
int3
jno
jb
cmp
push
and
in
outsb
popf
das
dec
cmp
fldl
aas
lret
adc
clc
jne
loopne
mov
movsl
shlb
pop
js
and
mov
jl
add
orl
inc
adc
imul
cmp
pop
adcl
subb
and
adcb
int3
xor
or
sti
movsb
cmp
mov
xchg
enter
jnp
inc
inc
mov
cli
mov
pop
pop
adc
xchg
cli
adc
lds
and
ds
test
test
ret
push
pushw
and
int3
addr16
and
and
jne
mov
mov
inc
xor
xchg
cltd
lea
pop
rcll
push
pop
push
xor
cmp
add
jge
bound
and
movsl
cmc
mov
xchg
pop
sub
mov
notb
mov
rcll
clc
out
aad
fmuls
imul
pop
shrb
inc
jne
and
cmc
imul
pop
push
xchg
cpuid
add
pop
ret
cmpsb
push
add
inc
xor
shl
xchg
sub
xor
and
cltd
xchg
in
add
movl
out
or
popf
out
jge
fdivrl
jp
or
pop
sbbb
popl
push
fnstsw
std
xchg
lcall
or
mov
into
cmp
and
adc
inc
jno
xor
push
push
sahf
nop
xlat
cmp
mov
cmpb
cmp
aam
ret
jae
stos
filds
dec
mov
pushf
inc
fsubl
jno
in
xchg
push
or
jl
sub
push
push
cwtl
call
mov
das
rcll
xor
leave
push
pusha
dec
mov
lret
aaa
loopne
add
or
push
jo
loopne
add
lock
fdivrs
pop
jp
adc
jge
fs
int3
pop
and
mov
outsl
fdivrs
jno
out
dec
dec
push
xor
popa
fnstenv
mov
pop
in
inc
pop
dec
inc
ret
cld
push
out
cmp
sbb
leave
adc
adc
pop
jecxz
leave
adc
or
mov
mov
paddb
xchg
das
jnp
adc
pop
std
push
ja
inc
cli
sub
mov
insb
