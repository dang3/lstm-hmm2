aas
push
fisttpl
pushf
sub
sub
cmp
pop
pop
sarb
imul
jge
xchg
or
fnstenv
inc
ret
mov
mov
enter
das
out
lods
and
mov
ja
mov
push
hlt
cmp
mov
fdivrl
cld
outsl
inc
leave
movsb
pop
lahf
add
dec
fcomps
shlb
xchg
sbb
sbb
cli
inc
lahf
cs
inc
arpl
adc
mov
mov
jo
xchg
fnsave
icebp
cmp
movsb
mov
outsl
icebp
lea
loop
mov
xchg
sbb
sbb
dec
or
sahf
add
lcall
dec
jno
pop
sub
popa
cmp
cmp
fisubrl
imul
mov
out
mov
mov
sub
jne
loop
mov
push
inc
icebp
es
fdivr
xchg
cli
mov
shr
rorl
sub
pop
and
pushf
bswap
pop
movw
mov
push
pusha
push
call
cmp
sub
jmp
call
bt
clc
sub
push
rep
not
bswap
lea
mov
mov
mov
movb
lea
jmp
inc
mov
jge
mov
mov
pop
mov
mov
pop
pop
outsl
push
jae
fadds
mov
cwtl
or
or
adc
sub
outsl
fmulp
int3
pusha
lcall
xor
aam
dec
pop
in
sub
in
sbb
sbb
es
mov
mov
icebp
push
std
inc
addr16
push
shll
ljmp
cwtl
cmpsb
test
loop
lods
push
push
rcll
pop
in
adc
clc
sbb
mov
jae
or
dec
fsubrs
sbb
scas
dec
repnz
das
sahf
dec
sub
mov
xchg
pop
pop
lock
xor
xchg
pop
adc
call
ja
sbb
fnstsw
rol
pop
stc
adc
pop
enter
mov
mov
mov
in
addr16
jecxz
pusha
std
push
push
add
in
pop
fcmovnbe
pop
insl
mov
mov
xor
xchg
inc
movsb
sub
in
sar
stc
aad
jns
cmp
mov
test
and
inc
outsb
push
int
dec
leave
stc
fimull
lock
clc
fnsave
mov
add
filds
lret
adc
aad
popa
xlat
in
jmp
cwtl
jns
adc
test
xchg
mov
imul
bound
push
std
js
sub
icebp
imul
ljmp
out
js
pusha
notl
fsts
cmp
xchg
aad
aad
pop
sbb
add
test
and
xor
xlat
add
in
mov
shr
xor
or
xor
icebp
fisubl
mov
mul
ret
push
aas
jmp
or
xchg
test
out
jns
cwtl
fcompl
rorb
and
adc
test
mov
fdivr
xlat
clc
popf
mull
insl
test
jp
mov
mov
cmp
jns
pop
test
xor
sbb
test
push
push
loopne
xchg
pushf
mov
pop
mov
test
rcrl
icebp
shrb
insl
xor
push
imul
in
add
shlb
sbb
dec
jnp
cli
jne
mov
rcl
ljmp
sub
outsl
ja
clc
pop
fimull
mov
add
xchg
test
cmp
mov
push
pop
xchg
bnd
stos
adc
orl
push
inc
mov
sbb
xor
pushl
pop
stc
fists
pop
idivb
xchg
mov
mov
gs
xchg
aad
jge
mov
aaa
shlb
repz
mov
inc
sbb
push
rcl
pop
inc
add
mov
fdivr
outsl
jmp
loope
ficoms
adc
push
filds
inc
fst
int
xorl
push
pop
cmp
filds
clc
or
in
jae
lcall
xlat
mov
push
mov
mov
sub
mov
fcmovu
pop
sbb
imul
shlb
int3
in
add
xchg
and
cwtl
xor
pop
loopne
pop
pop
xchg
add
push
xchg
xchg
xchg
fcmovbe
ja
in
push
xor
mov
push
or
inc
inc
test
fsubrs
stc
rcrb
push
mov
div
sub
cmc
and
subb
rcrb
loopne
pop
add
rcll
movsb
or
adc
idivb
jns
mov
inc
pop
pop
pushl
mov
and
push
leave
stc
rolb
aad
jge
cmp
jbe
in
jge
shrb
testl
xchg
mov
sub
inc
xchg
loope
shrb
push
or
in
jecxz
lea
or
outsb
dec
nop
icebp
ja
stc
insb
scas
xchg
not
mov
fbld
das
pushf
jne
mov
sub
movb
fistps
lds
push
push
push
mov
ja
cs
cmp
adc
or
iret
cmpl
adc
add
loope
sbb
fmuls
sub
pusha
stc
mov
mov
icebp
lock
stc
pushf
popf
int3
clc
adc
inc
out
flds
mov
add
lods
loope
fstl
fidivrl
push
mov
call
adc
or
rcll
dec
sbb
pop
sbb
or
loope
lea
mov
xchg
into
rorb
in
repnz
pusha
insb
dec
mov
push
imul
jl
test
sub
jbe
scas
push
mov
mov
int3
adc
fsubrp
or
fwait
adc
or
jecxz
hlt
sub
loope
rorb
or
inc
push
pop
push
xchg
ret
inc
pop
jno
xchg
pop
sub
jbe
fsts
lret
mov
leave
inc
push
jo
mov
ljmp
mov
loop
ja
stc
repz
arpl
mov
popf
pop
jbe
adc
in
ficoml
add
jmp
cmpsb
xchg
fisubl
sbb
sbb
imul
push
js
mov
sub
loopne
jecxz
decl
in
mov
xchg
mov
sub
jmp
pop
xchg
cmp
repz
inc
xchg
fcoml
or
repz
push
outsl
xor
sbb
dec
fimull
addb
push
jno
repnz
in
in
xchg
std
fistpl
popf
fs
pop
shrb
inc
roll
or
xchg
fcmovnb
es
pop
jb
pusha
and
push
pop
aaa
sbb
fnstcw
sahf
nop
inc
sub
jb
xor
xchg
sbb
mov
dec
pop
aam
js
mov
mov
fisubl
test
call
mov
pusha
in
or
fsubrs
xchg
jmp
hlt
mov
sub
sbb
inc
sbb
negb
jecxz
xor
imul
iret
mov
mov
stc
add
call
pop
sub
stc
adc
rcll
xchg
cmp
fists
push
cmp
sub
jl
test
into
jb
cmpl
fadds
nop
dec
and
xchg
jb
add
enter
addb
mov
movsl
inc
jbe
fstps
or
std
mov
cmc
pop
and
add
adc
mov
mov
cld
imul
out
cwtl
adcl
or
daa
add
subb
add
mov
cmc
sbb
fs
sahf
loopne
add
outsb
push
xorb
xchg
inc
cmp
test
insl
jmp
test
cmc
ss
sub
pop
dec
lea
sbb
sbb
mov
dec
mov
mov
aad
xor
and
push
add
inc
xlat
ret
call
adc
adc
cmp
outsl
xchg
mov
mov
jo
cmc
sbb
je
popa
inc
es
sbb
cld
shrb
iret
xchg
into
fsts
adc
ret
int3
mov
mov
lods
shll
test
js
leave
adc
call
sarl
mov
push
mov
scas
fs
mov
fldcw
enter
jns
out
loop
stc
pop
fimull
call
push
or
jno
jo
sub
jg
ficoml
add
es
js
or
push
push
add
xchg
cmp
push
sub
mov
push
push
cmp
test
sub
cltd
loope
ret
enter
pop
clc
sbb
fldt
mov
cmc
cltd
leave
cs
jbe
xlat
add
fs
sar
mov
push
fisttpl
and
int
enter
ficompl
mulb
fnsave
push
inc
lahf
popa
xchg
fstpt
cmp
pushf
fcmove
sbbl
icebp
rorb
mov
mov
fprem1
mov
mov
adcl
scas
sbb
mov
add
enter
mov
ja
imul
ret
ja
mov
popf
jmp
mov
jg
test
sbb
popa
adc
xchg
stos
pop
in
xchg
lahf
mov
jmp
jg
sbb
xchg
xchg
pop
dec
add
clc
push
push
and
loopne
inc
adc
sbb
add
pushf
cmp
sbb
mov
adc
adc
inc
xchg
jno
push
sub
jge
jl
mov
pop
mov
stos
xchg
cmp
rol
dec
push
stc
mov
aas
sbb
shrl
ficoms
mov
pop
mov
fwait
mov
inc
push
iret
orl
mov
mov
loope
pushf
mov
fldl
jb
sbb
and
fiaddl
repz
inc
inc
in
pop
ret
pop
mov
ret
push
and
movsb
call
mov
icebp
xlat
push
mov
pushf
sbb
icebp
push
stos
sub
pop
outsl
loopne
pop
inc
mov
ret
iret
push
rol
mov
mov
incb
pop
mov
repnz
lret
jecxz
mov
fsub
loop
sbb
dec
test
fnstcw
push
inc
sub
adc
mov
xor
mov
mov
gs
fidivrl
inc
and
rcrb
shrb
or
test
push
leave
or
insb
fistpll
call
orb
icebp
fcompl
hlt
notb
jns
mov
adc
push
popa
shl
and
xchg
js
test
pusha
mov
fbld
ljmp
dec
daa
mov
jnp
sarb
mov
scas
les
sub
cltd
nop
mov
mov
andb
mov
rorl
cwtl
shlb
shll
iret
cmp
adc
shll
mov
aaa
and
es
pop
add
das
jge
inc
push
dec
bound
jp
leave
push
enter
inc
and
popa
sub
fnsave
pop
mov
push
and
sarb
test
cli
sbb
sbb
loop
std
cmp
inc
sbb
mov
adcb
pop
pop
xchg
outsb
sbbl
mov
dec
aam
sbb
shll
hlt
push
xlat
xchg
out
push
in
mov
xchg
loopne
mov
dec
and
outsb
fwait
movl
jmp
cltd
xlat
fdivs
fnstenv
jne
fsts
cld
mov
pop
icebp
pop
or
rcr
addr16
xchg
call
inc
xchg
lods
andl
dec
adc
fldenv
pop
mov
mov
ss
mov
jmp
dec
xor
icebp
nop
ret
int3
pop
jb
stc
or
mov
pop
fcomp
xchg
inc
shl
fucom
push
cmp
xor
sbb
mov
and
xor
add
lods
xor
push
popa
shrb
scas
nop
pop
cmc
fimull
inc
fwait
in
insl
sbb
xor
es
dec
aaa
rolb
gs
jno
push
and
push
int
add
cmp
psubusw
inc
shl
pop
inc
sbb
pop
in
push
xchg
and
movsb
push
clc
cmp
or
into
mov
test
xor
repnz
jno
mov
fs
mov
cltd
add
imul
and
jae
jle
imul
sbb
test
int3
push
jmp
xlat
jne
mov
adc
or
je
test
aas
and
xlat
or
std
repz
sbb
leave
test
add
mov
popf
rolb
jmp
nop
cli
inc
js
pop
mov
cltd
popa
xor
push
jmp
sub
rclb
jb
push
mov
xor
loope
imul
in
aas
sbb
rcl
jnp
rcr
sti
ficompl
cwtl
call
pop
jg
jl
sbb
xor
cli
pop
xlat
sahf
push
fistpl
scas
sub
pop
aam
pop
add
sbb
cmp
rcrb
jns
mov
xor
testb
push
aad
adc
xchg
mov
icebp
je
jae
pop
xor
pop
sbb
imul
inc
fists
lahf
jp
mov
cmp
std
adc
call
push
mov
sbb
jmp
loop
xchg
mov
cmp
loop
sub
jge
jno
lods
clc
sub
mov
fcmovu
pop
jg
test
test
jmp
cltd
mov
mov
jns
lea
push
pop
shlb
gs
cs
mov
fcomip
jae
mov
fiaddl
jns
xchg
repnz
mov
ret
push
fcomp
dec
insb
pop
loope
js
ja
or
xlat
icebp
mov
mov
jns
xor
sti
pop
pushf
dec
jmp
filds
or
mov
xor
xchg
jns
xlat
or
xor
mov
xchg
call
mov
jecxz
inc
cmc
or
stc
mov
xchg
mov
adc
shll
cld
in
divb
push
lods
push
mov
jae
jnp
pop
cmc
test
mov
mov
jb
ljmp
jg
test
jae
sub
fwait
sysexit
mov
pusha
in
mov
popa
xchg
out
pusha
mov
push
pop
arpl
jo
push
mov
or
jl
add
andps
sbb
sbb
mov
stc
or
xchg
arpl
out
jmp
push
lods
jbe
shll
lret
sbb
ficoml
jns
shrb
cmp
ret
xchg
cmp
stc
dec
mulb
fwait
outsl
sub
leave
push
dec
test
mov
mov
push
push
scas
invd
add
and
push
shr
cmp
sbb
mov
outsl
aad
xor
jle
mov
adc
bnd
or
das
pop
and
xlat
arpl
sbb
jle
sub
lahf
mov
je
adc
fistpl
adc
xchg
mov
lods
jae
xchg
loopne
sub
sbb
pop
lock
test
push
or
shlb
leave
rcr
lret
pop
sbb
sarl
mov
mov
mov
xor
jge
add
cmp
sub
int
xchg
loope
push
fdivr
xchg
add
fldenv
sub
sbb
xchg
cmp
testb
mov
adc
loope
mov
mov
jns
fimull
adc
dec
inc
mov
jb
add
mov
les
adc
pusha
mov
pop
inc
js
repnz
jl
test
adc
sub
xchg
mov
fimull
push
movsb
fsubr
pop
test
push
aas
ret
xchg
mov
stos
cmp
jns
addr16
sbb
int
sbb
out
imul
sub
mov
rclb
test
mov
addb
xlat
popf
andb
jge
mov
push
mov
pop
pop
mov
repz
daa
push
mov
mov
jge
rcl
inc
pop
not
shlb
push
push
mov
pop
jle
pop
sbb
fildl
or
aaa
decb
mov
or
pop
ffree
pop
pop
push
dec
sarb
dec
dec
and
out
sarl
leave
test
aad
in
jmp
xchg
fchs
jg
mov
sbb
jns
cmp
pop
xchg
adc
pop
cmc
or
fnstcw
or
cmc
mov
xor
and
cmp
xchg
sbb
fmul
push
pop
pusha
icebp
repnz
xchg
jo
fmull
push
push
neg
imul
pop
fimull
mov
cmpsl
push
scas
xorl
jg
mov
lods
loopne
roll
test
repnz
nop
push
lcall
pop
push
hlt
nop
jg
gs
xor
inc
pop
lock
inc
sbb
push
add
jb
cmp
jp
fstl
out
ljmp
es
fucomp
jbe
xlat
mov
jge
notl
adc
loope
in
fidivl
lods
test
sbb
leave
out
fpatan
sbb
push
and
push
scas
pop
xor
fwait
push
mov
mov
arpl
sub
daa
jmp
lcall
sarb
sub
or
jecxz
shl
ret
repz
push
bound
sbb
push
jb
sbb
push
loope,pt
xchg
fwait
imul
mov
inc
mov
stos
test
xor
pop
or
loopne
jg
adc
movsl
xor
and
subl
js
sbb
pop
iret
jae
vpshlw
sub
or
leave
xchg
sbb
push
clc
xor
call
push
sbb
dec
pop
mov
outsb
inc
pop
loopne
addr16
push
adc
lock
sub
add
test
shl
mov
add
cmp
xchg
cmp
fidivl
lahf
arpl
stc
pop
add
daa
add
adc
jnp
mov
mov
lcall
sub
adc
push
add
mov
insb
xchg
adc
insl
ds
ljmp
and
xlat
in
rcl
pop
aaa
pop
pop
ret
rclb
adc
and
xchg
clc
into
scas
add
mov
cmp
pushf
stc
xchg
out
repnz
dec
ficoml
std
push
loope
add
div
stc
jmp
in
xchg
rcrl
mov
jno
lods
clc
cmp
mov
mov
fisttpll
pop
jb
cld
pop
fwait
add
cld
out
dec
es
adc
add
xor
pop
inc
ja
lahf
jno
cmp
call
mov
sbb
fadds
cmc
mov
xchg
or
test
inc
and
les
fs
daa
jae
add
fcmove
mov
nop
in
leave
xlat
inc
shll
fadds
add
and
negl
push
enter
pushf
popa
rcrb
in
sbb
fcompl
push
mov
inc
xorb
ret
inc
sti
dec
adc
fwait
dec
sub
xor
dec
mov
mov
outsb
aaa
test
xor
cmp
sbb
ret
pop
data16
pushf
sbb
adc
and
gs
int
mov
test
jae
mov
sub
xchg
inc
stc
aaa
cmp
xor
mov
or
pop
cmp
rorb
dec
sbb
out
jns
loope
iret
shll
or
cmp
stos
inc
xchg
jne
cmp
xchg
xchg
xchg
fsubrs
sbb
shl
xchg
mov
adc
ficompl
cltd
xchg
imul
add
mov
popa
test
test
dec
cmp
shrl
pop
or
jge
push
sbb
leave
cld
and
sub
cs
hlt
pop
fisttpll
pusha
xlat
xchg
mov
jle
rcrb
adc
jl
out
mov
push
ljmp
cmpb
mov
int3
mov
push
imul
mov
fs
ret
mov
mov
cmc
cmp
test
sbb
sbb
pushf
fcomps
adc
jge
or
push
loop
jns
shl
sub
sarb
movsb
jmp
fisubs
xchg
rorl
cwtl
mov
jno
rorl
push
mov
xor
fucomi
mov
adc
addr16
mov
jecxz
adc
std
leave
ret
out
cmc
mov
sti
mov
push
std
daa
cld
shl
lret
outsb
icebp
mov
mov
jmp
adc
jo
xor
stc
push
test
lods
jae
adc
add
pop
outsl
cmp
adcl
push
mov
and
pop
xchg
stos
js
popf
jno
mov
ror
incb
negl
cmp
cs
cwtl
mov
dec
push
sbb
jae
xchg
sarl
cld
mov
or
shlb
inc
cmpsb
and
cs
adc
or
ja
outsl
movsl
pop
fstl
fcmovu
fmulp
jg
jle
inc
test
xchg
sbb
mov
int
ret
leave
pop
inc
popf
sub
cmp
pop
icebp
xchg
and
fstpl
sub
jmp
fstpl
movsb
or
xchg
adc
jae
or
movsl
rcrl
pop
in
test
adc
stc
mov
jle
mov
jne
dec
clc
pop
xchg
push
mov
movsl
les
add
shr
daa
add
sub
fisubrs
mov
jno
sbb
or
js
sbb
das
pop
adc
scas
roll
jge
xchg
adc
pop
adc
cmp
sbb
outsl
mov
push
push
and
sbb
js
mov
fwait
loope
imul
dec
les
stc
imul
adc
sub
das
xchg
lock
pop
jbe
adc
imul
or
lock
mov
push
mov
push
sub
mov
sahf
repz
cmpsl
cltd
or
shr
popa
or
jle
mov
mov
in
lds
or
hlt
push
pop
fidivl
cmp
mov
push
dec
shrb
out
bound
push
add
mov
pop
cli
in
fbld
dec
pop
cmpsl
ffree
divb
in
and
ficoms
lcall
mulb
add
and
push
loope
lahf
sbb
jae
cmp
ss
lahf
mov
cmp
mov
mov
xchg
mov
scas
fnstenv
inc
ss
sbb
add
lods
repz
into
push
or
shlb
stos
fcos
in
ja
xchg
xchg
ret
jo
jne
mov
rcl
fisubl
andl
lods
leave
bound
mov
xchg
out
pop
lcall
or
push
filds
lock
test
clc
pop
jns
adc
push
lods
xor
shl
dec
ljmp
ret
xlat
mov
fdivr
mov
fcmovb
sbb
xchg
ret
out
xchg
mov
mov
je
fisubl
ss
cmpsl
lahf
xchg
sub
pop
push
popf
rolb
imul
sbb
inc
cld
sbb
jb
ret
dec
adc
add
in
es
jmp
stc
sbb
ljmp
xchg
mov
xor
icebp
addr16
mov
subb
lcall
int3
xchg
in
ret
xchg
lea
pop
xchg
or
idiv
mov
int
cwtl
adc
test
roll
jl
jge
jno
cmp
jb
add
insl
and
cmp
push
sbb
push
iret
dec
xchg
ret
jg
xorl
int3
notl
divb
mov
idivl
ret
fistl
call
mov
pop
popa
mov
sbb
les
sub
cltd
push
inc
popf
mov
pop
lret
fwait
pop
lret
test
or
into
iret
addr16
add
pop
or
jnp
js
push
fcomp
inc
je
int
not
repz
cmpsb
fwait
scas
shl
fdivrl
popa
push
add
test
pop
ja
add
jb
pop
push
loop
aas
pusha
and
rolb
bound
push
sub
push
addl
jns
fisttpll
aaa
outsl
sbb
rcrb
jns
push
sbb
xchg
fisubrl
data16
into
mov
push
mov
in
mov
mov
xchg
loopne
aam
push
cltd
cwtl
sarl
jp
incb
out
pop
mov
xchg
gs
adc
mov
and
outsl
icebp
inc
lds
push
jp
adc
push
adc
test
enter
outsl
xchg
push
mov
dec
fmulp
pop
add
jne
imul
jbe
pop
jecxz
outsl
icebp
repnz
dec
dec
pop
xor
mov
xchg
adc
adc
pop
jb
fildll
xor
mov
scas
mov
adc
add
dec
cmp
fstpl
sbb
pop
out
aaa
inc
sar
mov
pop
inc
add
sub
pop
sahf
addr16
ja
pop
lods
push
cmp
lcall
or
mov
pop
stc
push
sti
arpl
outsl
rcll
adc
xchg
inc
pop
sarl
les
pop
and
or
lock
pop
push
fs
in
xor
test
pop
cmpsb
in
sbb
jge
sbb
pushf
or
mov
lea
jmp
fisubrl
mov
and
mov
and
es
mov
cmp
addr16
mov
fcom
xchg
aaa
fsubl
cmp
cld
fidivl
or
mov
pop
add
cld
int3
fiaddl
int
inc
ljmp
je
fs
pop
or
mov
adc
xchg
imul
test
repnz
xor
cmp
push
sub
pop
push
xor
dec
xchg
mov
subb
call
mov
ss
notl
and
cmp
mov
fs
cmp
jne
in
xchg
jnp
fmull
push
insb
fcmove
es
mov
mov
adc
sub
imul
call
sbb
je
in
ficoml
enter
adc
shlb
xchg
ret
mov
dec
inc
scas
shll
js
arpl
stc
sub
mov
je
mov
imulb
addr16
fisubrs
fdivrs
icebp
push
dec
aad
test
sub
out
pop
ja
ficompl
fwait
cli
roll
adcl
jg
stc
pop
xor
push
xor
ja
js
cmp
int
or
or
cmpsl
adc
and
sbb
movsb
fcomps
mov
mov
add
xchg
insb
fcmovbe
lahf
sar
test
les
cmp
cltd
push
repnz
adc
sbb
call
xchg
mov
ja
sbb
stos
testb
xchg
std
inc
out
pop
cmp
cmc
sub
sub
lds
test
das
mov
mov
test
bound
shll
inc
popa
fnstenv
stos
nop
arpl
jg
stc
xor
mov
sbb
push
popf
pop
jecxz
push
lea
call
roll
jecxz
add
mov
repz
out
mov
pop
mov
iret
js
pop
mov
sbb
xchg
xchg
fmuls
xor
cmp
pop
xor
shl
fdivrl
xchg
cmp
rcll
and
inc
jae
test
or
rcl
cli
jecxz
fistpll
in
push
xchg
xor
mov
jns
lret
mov
inc
notb
push
jecxz
or
scas
or
push
inc
lods
push
mov
pop
mov
mov
loopne
shl
adc
adc
outsb
mov
mov
movsl
es
cmp
and
popa
xchg
rol
sbb
sti
and
aad
mov
lock
flds
jl
cwtl
testb
sahf
jae
cltd
jns
xor
cld
cmpsl
fimull
mov
test
fadds
stc
push
cmp
jne
inc
xchg
sbb
mov
shrb
and
rorb
or
fidivl
fistpl
fcomps
aad
movsl
insl
pop
aas
shlb
xor
xchg
or
mov
mov
jb
xor
mov
sbb
push
dec
nop
aad
sbb
int3
repnz
fmuls
sar
loop
and
push
aas
and
pop
mov
ljmp
sbb
test
cmpsl
loope
mov
int3
mov
test
mov
lea
es
sub
fmul
lock
bound
shll
int
out
sbb
sar
xor
stc
and
mov
cld
fsubrs
mov
fidivs
and
jno
insl
loop
das
in
aam
jmp
test
dec
fcoml
xchg
sbb
cmp
or
dec
pop
shll
and
nop
rol
cmpsl
jne
inc
mov
and
jnp
idiv
cmp
sahf
jns
cs
pop
jge
jecxz
sbb
add
push
call
icebp
test
aam
push
dec
insl
cld
mov
icebp
outsl
popf
push
aaa
push
pushf
mov
pop
and
cwtl
xchg
adc
cmp
push
rol
inc
faddl
loope
adc
fucomi
scas
add
cmp
aad
or
lahf
push
in
testl
push
fnstenv
hlt
adc
lahf
or
adc
cmp
test
xchg
push
cmpsl
xchg
out
stos
push
mov
xchg
pushf
sbb
mov
xor
aaa
and
xchg
mov
mov
and
shl
adc
loop
push
imul
lret
mov
xor
addr16
out
and
movsb
movsl
fbld
sbb
nop
pop
shrl
bound
or
push
push
gs
add
outsb
dec
and
rolb
xchg
fstpt
xchg
fcoml
ret
sbb
push
fildl
xchg
sahf
xor
loop
arpl
sub
cmp
or
das
xchg
add
int
aaa
dec
pop
inc
adc
pop
pop
stc
bound
mov
sub
or
clc
sub
mov
fs
jne
mov
std
fldenv
jae
add
xlat
push
mov
cmp
fsubrl
push
or
lea
jg
fs
aad
mov
lret
adc
arpl
shrb
add
scas
inc
into
aaa
sbb
push
jge
in
test
dec
in
xchg
shl
lods
popf
mov
pop
push
int3
dec
rcrb
jne
jns
lret
fstpl
jle
or
xor
adc
xchg
adc
cmp
in
mov
mov
ret
push
aad
mov
xor
mulb
inc
ffreep
divl
imulb
fnstenv
insl
fmuls
outsb
rcr
dec
dec
hlt
xchg
popa
ja
mov
inc
test
sarb
sbb
in
mov
push
push
ret
fcmovu
xlat
jle
sti
hlt
mov
xchg
rorb
lret
cmpsb
mov
jl
das
fcompl
xchg
repnz
popf
outsl
js
xor
adc
faddl
push
repnz
cltd
dec
clc
orl
or
lret
adc
push
xor
or
es
iret
les
lret
addr16
mov
jle
jns
subl
push
or
sbb
mov
sbb
rorb
xor
rcrb
mov
pop
lock
ds
outsb
mov
mov
push
cmp
add
outsb
pop
fadd
jmp
std
sbb
jl
dec
adc
and
sbb
rcr
xchg
xchg
cltd
jns
imulb
mov
fildll
shlb
dec
pop
ficoml
push
xlat
outsb
int
mov
in
cmpsb
pop
inc
inc
cmc
mov
or
mov
daa
jb
stc
xor
or
fidivl
std
sbb
sarb
sub
ficoml
inc
stos
subl
add
lods
push
lea
mov
negb
repnz
ret
loopne
cmc
fs
mov
das
stos
cmc
fidivl
loop
shll
xor
js
mov
or
rcr
popa
in
push
xchg
mov
cmp
jle
ds
mov
xchg
or
cmp
rcr
ja
sbb
inc
outsl
sub
xchg
add
cmc
ja
mov
test
sti
ja
add
sti
cmp
cmp
jp
insl
jmp
lahf
cmp
ja
fisttpl
and
sbb
push
xchg
jge
cs
stc
fidivrl
mov
push
aaa
xchg
mov
and
sbb
inc
mov
notb
imul
xor
popa
cli
cmp
cmp
js
cmp
sbb
dec
das
scas
sbbl
and
and
jbe
fiadds
or
xchg
push
lahf
mov
push
push
xchg
scas
cmp
fildl
clc
xchg
repnz
xor
shll
and
rorb
clc
fmuls
cmpsl
lods
cld
mov
test
clc
xorl
stos
or
ret
ffree
hlt
jb
pop
fsts
ja
repnz
jbe
jge
iret
out
add
imul
repnz
iret
xchg
mov
outsl
in
stc
lods
sbb
push
mov
imul
dec
xor
enter
or
adc
int3
filds
aas
jl
dec
addl
sbb
std
aad
mov
sbb
sub
shl
and
stc
sti
movsl
ss
sahf
mov
lods
into
repnz
jmp
shrb
cmp
push
mov
xchg
negl
rcrl
fstpl
cmp
pop
test
rorl
xchg
loopne
pop
and
adc
or
repnz
stos
fs
cli
sub
pusha
sub
mov
xor
stos
adc
ljmp
scas
xchg
fwait
sbb
sub
movsb
iret
in
cmp
dec
mov
jns
test
ret
lods
mov
movb
xchg
jno
xorl
pop
shrl
push
fadds
mov
inc
xchg
aas
fdivs
mov
popf
negb
sub
pop
sahf
adc
lcall
push
decl
xchg
push
cmp
mov
into
in
cmpsl
xchg
jmp
cli
xchg
cmc
ret
xor
scas
js
xchg
je
mov
aam
adc
mov
sbb
ret
into
xlat
push
adc
insb
push
pop
dec
jle,pt
lret
add
mov
xchg
icebp
insl
sub
sbb
xor
sbb
inc
cs
cmp
mov
popa
push
in
repnz
out
add
imul
mov
add
outsl
inc
pusha
cmp
push
xchg
pop
loope
inc
mov
rorb
jbe
or
js
ja
sarb
push
in
rolb
sub
adc
icebp
dec
fucom
inc
in
shll
call
aas
call
movl
add
js
mov
push
fiaddl
stc
and
ficoms
dec
mov
lock
pop
call
ja
xor
mov
into
inc
test
cwtl
shlb
lock
xchg
inc
xchg
test
push
add
rcr
gs
or
push
xchg
clc
jb
or
add
iret
mov
aam
mov
repnz
stos
orb
scas
insb
pop
andl
adc
xchg
std
cmc
into
fisubrl
shrb
icebp
stos
inc
rolb
mov
or
adc
test
push
cmp
ja
add
xchg
add
add
dec
clc
stos
fcomip
mov
shrb
stos
lock
inc
pop
lcall
cs
pop
push
push
sbb
test
mov
popa
cmp
push
repnz
xchg
cmp
dec
adc
shll
or
pop
adc
dec
sbb
loope
dec
sbb
idivl
mov
stc
pop
shrb
fwait
mov
rcl
mov
or
push
pop
xchg
lret
or
inc
xor
in
and
shll
or
repz
ficomps
xor
popa
fidivrl
inc
daa
lahf
and
insl
jns
mov
pushf
lcall
test
mov
sarl
aam
xor
outsl
lret
xchg
out
sbb
mov
xchg
add
outsl
test
sub
lret
loopne
push
jle
cmp
leave
lock
xor
lock
sbb
xor
andl
jne
pop
fyl2x
push
sbb
add
shlb
pop
push
mov
jne
cwtl
data16
icebp
and
add
daa
cmp
dec
xor
les
negb
push
mov
jp
push
aas
adc
fs
cmpsl
and
or
mov
push
fcoml
jno
push
popf
lahf
pop
pop
add
pop
inc
inc
mov
mov
fcoml
cmpsl
call
xchg
push
jbe
enter
shl
adc
fwait
xchg
xor
inc
iret
xchg
mov
fsubrl
mov
shl
lea
pop
xchg
ss
movsb
popf
jno
xchg
mov
sbb
push
mov
push
aad
dec
mov
mov
sub
sbb
ret
stos
jp
sbb
dec
test
sbb
sbb
xchg
mov
repnz
daa
mov
push
mov
adc
inc
or
mov
mov
inc
sub
frstor
xchg
das
push
jb
inc
and
imul
pop
sbb
dec
or
leave
stos
xchg
adc
cs
rolb
jp
inc
imul
push
roll
push
ror
les
mov
sbb
stos
into
push
iret
je
dec
xchg
mov
imul
jno
jo
xlat
cwtl
mov
ficompl
push
sub
gs
sbbb
push
ja
cmp
aam
or
push
arpl
mov
push
xchg
ficompl
push
daa
jbe
movsl
push
ja
ja
icebp
repz
sahf
adc
sbb
dec
sub
icebp
dec
push
sti
push
adc
add
sbb
addr16
cltd
das
pusha
jl
sub
push
xchg
mov
loopne
xchg
adc
cmp
outsl
ret
movsl
sbb
sub
push
jb
and
sahf
int
repnz
cmp
sbb
addb
jb
push
ja
call
frstor
fsubrs
mov
push
es
cs
icebp
lods
shlb
cmp
cmp
test
dec
outsl
testl
pop
loope
sahf
stos
movsb
cli
lds
mov
lock
fs
in
adc
add
add
ja
xor
lds
scas
mov
mov
sbb
out
loop
aad
sub
sub
repz
das
jp
subb
je
in
mov
lret
in
scas
sbb
imul
inc
pop
loope
xchg
leave
jb
xor
mov
idivb
push
xchg
sub
cs
mov
push
sub
push
outsb
xchg
push
sub
aam
cmp
shlb
lret
dec
movsb
push
sti
rcll
mov
stos
and
je
mov
jo
inc
sub
sub
test
sbb
lods
xchg
sbb
popf
rcll
mov
mov
or
pop
stos
pop
imull
xchg
mov
repnz
lcall
xchg
pop
sub
and
xchg
test
sbb
mov
sti
js
adc
jecxz
pop
ror
fincstp
inc
dec
adc
mov
add
jbe
in
push
cwtl
xor
cld
xchg
jl
jae
sbb
mov
sub
jns
push
and
add
xchg
sbb
lcall
push
inc
jno
sbb
sbbb
stos
data16
sub
call
dec
push
bound
pop
sub
xlat
xor
adc
sub
and
mov
std
imul
mov
xchg
jns
movsb
pop
push
sbb
dec
sahf
roll
sub
mov
jne
ss
rcrb
idivl
int
xchg
aam
or
sub
or
popa
xchg
icebp
cltd
pop
and
xlat
sahf
push
add
fstpl
rorb
push
cmp
mov
cs
testl
das
mov
and
inc
xchg
lea
test
and
lret
aaa
leave
adc
push
and
int
imul
push
cmp
sub
lcall
mov
push
sbb
mov
stos
pop
shl
jbe
shlb
ja
push
scas
add
iret
repz
lahf
fidivrl
jns
cmp
sub
jno
insb
inc
pop
adc
push
xlat
xor
hlt
push
lods
sti
jo
cwtl
adc
push
mov
cmp
sub
jnp
mov
dec
jns
lods
pop
xor
adc
jb
ss
inc
fdivr
jge
out
xchg
add
mov
xchg
dec
aad
adcb
push
sbb
arpl
and
adc
mov
aam
stos
adc
imul
sub
jo
push
pop
push
cmc
sbb
data16
cmp
pushf
out
test
xorl
or
stos
or
cmp
call
push
inc
pop
sbb
xchg
sbb
bound
out
or
pushf
push
adc
das
jno
pop
xor
inc
lods
jne
out
stc
and
xchg
pop
adc
loopne
sbb
xchg
repnz
sub
cli
inc
popf
push
push
scas
dec
lahf
js
lods
lret
sbb
pop
bswap
jl
or
adc
pop
push
xchg
xlat
scas
lcall
lcall
mov
pop
jns
shll
push
xor
neg
push
cltd
and
divb
push
cs
and
fldenv
cmp
xchg
xchg
divl
scas
cmp
sbb
jle
xor
dec
xor
sbb
mov
xchg
scas
outsl
or
out
cmp
sub
movsb
jp
add
mov
jmp
rorl
inc
pusha
test
pop
or
icebp
pushf
pop
adc
jmp
jnp
fcoms
rclb
adc
std
dec
push
xor
in
ds
cwtl
lods
es
dec
test
push
cwtl
sbb
adc
jg
adc
mov
in
jae
lods
xchg
stc
jae
icebp
shrl
or
pop
es
repnz
rcrb
pop
popa
cmp
imul
inc
jl
cwtl
cmp
push
pop
add
jg
push
inc
push
push
lods
lret
pop
test
xchg
fistps
mov
fcmovu
fwait
insl
out
sbb
mov
cmp
mov
mov
pop
jae
mov
ja
pop
sub
fcom
rclb
sub
cmpsl
fistps
cltd
subb
xor
add
mov
leave
scas
fwait
sbb
das
pop
mov
cmp
cltd
adc
ss
clc
pop
loop
addl
js
call
cmp
sbb
pop
jne
cli
call
fisubl
adc
xchg
cmp
ljmp
sub
into
mov
hlt
pop
push
xchg
adc
mov
sub
jbe
fcoml
push
jne
sbb
lret
mov
pop
repz
loopne,pn
lock
into
ja
clc
sub
mov
aad
stos
or
mov
xor
xchg
loop
push
xchg
pop
fistl
sub
push
xchg
push
lods
pushf
cli
xchg
xchg
adc
xor
mov
fisttpl
add
cs
scas
imul
jns
adc
sbb
fcmove
jg
pop
aaa
mov
out
imul
clc
arpl
outsl
shrb
idivl
sbb
jbe
cmc
sbb
sbb
das
aaa
dec
add
add
xchg
dec
push
out
dec
stc
sbb
cmp
sbb
stos
sub
pop
scas
aad
cmc
xor
pop
scas
cltd
into
cli
push
imul
repnz
cld
and
mov
sarl
push
or
inc
sbb
sub
lret
jbe
push
jae
ja
stos
or
mov
fwait
pop
push
mov
fdiv
mov
cmc
cld
mov
sbb
notb
mov
mov
out
mov
sbb
add
dec
pushf
xchg
push
add
mov
push
push
mov
pop
mov
out
pop
cmpsb
mov
pop
cwtl
xlat
inc
dec
mov
add
dec
lods
or
mov
jb
adc
ret
dec
adc
rcrb
mov
lea
ljmp
push
popf
ficomps
push
xchg
mov
push
out
and
aaa
mov
andb
jne
pop
xchg
sub
imul
lods
or
pushl
add
pop
shll
pop
adc
inc
movsb
dec
jns
sub
rcrl
mov
inc
les
adc
add
testl
loopne
adc
repz
sbb
mov
mov
push
sbb
imul
adc
cmp
rclb
imul
sbb
jp
add
mov
cltd
mov
pop
nop
cmp
sub
icebp
arpl
mov
sti
lahf
leave
jns
xor
aaa
xor
cs
icebp
jg
andl
fs
or
xchg
pop
cmc
icebp
fwait
out
push
add
sbb
cltd
lcall
push
jb
jno
cwtl
sbb
fsts
add
sub
frstor
xchg
mov
and
ja
cmp
push
xlat
xchg
mov
adc
fbstp
or
inc
outsl
sbb
pop
js
adc
loope
outsb
mov
push
js
enter
stos
icebp
push
dec
enter
notl
dec
jno
movsl
sarb
mov
cmp
aaa
mov
scas
or
jbe
inc
hlt
pop
out
adc
test
sbbb
push
in
mov
ror
les
inc
stc
data16
jo
and
sbb
xlat
xlat
rcll
shrb
inc
sbb
popf
in
rol
pop
cmpsl
push
test
jae
mov
jle
rcrl
lods
mov
sbb
xchg
outsb
fstps
or
mov
outsl
pop
adc
sahf
adcl
mov
int3
ss
loope
xchg
mov
push
repz
lock
xchg
and
xor
and
adc
cs
into
cmp
sbb
sbb
mov
mov
in
leave
shr
pop
jbe
push
scas
insl
push
bound
jae
xor
sbb
fstpl
mov
mov
out
cmp
rclb
in
loope
fdivl
cwtl
push
and
mov
sub
movsl
fidivs
loope
cwtl
fsubs
mov
ja
out
or
lcall
push
fdivrs
aaa
and
add
jb
mov
cmp
lcall
das
fnstcw
cmp
or
adc
adc
leave
xchg
stc
lret
adcb
jmp
xor
push
aaa
add
mov
test
stc
xchg
fiaddl
scas
leave
jp
rcl
inc
icebp
push
mov
or
and
inc
xor
mov
mov
imul
xchg
flds
add
jecxz
adc
adc
mov
pop
or
mov
leave
sbb
mov
mov
lods
add
mov
push
xlat
and
repnz
jbe
scas
add
mov
sbb
xlat
inc
je
pop
pop
fsubr
xchg
mov
xchg
jns
fldcw
inc
jb
xor
mov
add
or
jne
shlb
out
sbb
jns
pop
int
das
xor
pushf
xor
xchg
mov
fwait
bound
aad
dec
in
aad
sub
push
test
adc
rclb
pop
sub
cld
jne
sbb
push
xor
movsl
repnz
lret
sub
stc
sbb
cmpsl
ret
js
xor
sbbb
jmp
adc
dec
lock
out
sbb
xchg
or
sbb
push
stc
add
stos
push
xchg
jo
rcll
aam
gs
and
leave
xor
xor
push
ficomps
mov
mov
sub
and
jb
dec
xchg
xchg
cmp
movsl
ss
ss
adc
stos
jp
sbb
hlt
cmp
pop
jns
ret
loopne,pt
xor
push
arpl
addr16
sahf
lret
fmuls
sub
inc
xor
icebp
pushf
add
xchg
xor
repz
pop
ljmp
pop
cmc
dec
daa
out
push
sbb
loopne
leave
mov
adc
xchg
xor
call
jle
push
rcll
scas
les
in
lret
fwait
cwtl
aaa
stos
and
andl
mul
imul
loopne
and
jmp
pcmpeqb
scas
mov
int3
out
push
add
rcll
mov
notb
sub
push
ds
stos
icebp
movsb
inc
xor
add
adc
sahf
cwtl
test
jns
fldcw
sub
pushf
mov
je
repz
roll
sbb
jne
xchg
repnz
adc
push
cmp
aad
out
cmc
push
and
gs
pop
iret
aas
sbb
sub
inc
sub
push
adc
xchg
add
sti
inc
or
addl
xchg
push
repnz
stc
push
pop
jns
test
lods
xor
push
adc
push
insb
pop
jns
push
rcrl
lds
xchg
or
jne
pop
int
adc
insb
shrl
jnp
mov
icebp
mov
hlt
pop
fists
push
sbb
mov
imul
add
push
outsb
mov
mov
mov
or
call
leave
icebp
inc
xor
jmp
jno
add
mov
sar
mov
adc
or
inc
push
xor
sub
and
scas
push
mov
out
pop
ja
cmp
in
test
mov
jbe
sbbl
pop
cmc
and
and
push
or
mov
sub
add
mov
xchg
mov
jb
shr
shrl
sub
pop
jns
inc
call
mov
jns
imul
adc
or
inc
push
sbb
neg
jb
sub
mov
mov
xlat
or
or
cmp
add
lcall
mov
lcall
adc
lods
pop
repnz
push
lods
mov
ja
push
scas
adc
mov
mov
fldcw
adcb
jns
mov
push
aas
ds
pop
js
cs
add
sbb
mov
sbb
jle
adc
pop
pop
sub
mov
rcl
xchg
push
repnz
xchg
sti
mov
mov
cs
icebp
mov
sbb
push
xor
fsubrs
xlat
iret
mov
sub
xchg
arpl
pop
lods
mov
add
hlt
pop
xor
js
xor
fnsave
xchg
xchg
push
xchg
adc
sti
adc
lods
cmp
xchg
sbb
jne
dec
and
call
push
sahf
xchg
xchg
fldcw
je
pop
aam
or
push
pop
subb
xor
sbb
push
xchg
lea
adc
out
jns
push
mov
repz
adc
push
xor
xchg
mov
xor
adc
mov
jb
pushf
loope
jp
xchg
movsl
cmpsb
xchg
mov
and
jae
loopne
dec
mov
and
pop
pop
jns
pop
sbb
add
sbb
xchg
sub
loope
aas
das
cmc
movsb
rcrl
and
xchg
mov
ja
out
jae
sbb
sub
or
loopne
push
loope
sbb
stc
adc
sub
shll
pushl
fisubs
jo
push
enter
sysret
pop
sbb
and
push
fyl2x
inc
push
inc
hlt
xor
sahf
jne
icebp
ljmp
add
sbb
pop
movsl
stc
cmp
negl
push
jb
jno
mov
pslld
and
in
mov
test
cld
xor
add
mov
les
cmpsb
and
aaa
mov
mov
jo
sbb
aaa
frstor
adc
mov
mov
test
sbb
faddl
mov
mov
xor
repnz
sub
adc
and
xchg
pop
rcr
inc
lcall
icebp
repz
mov
or
dec
or
push
popf
arpl
push
xor
insl
gs
test
sbb
icebp
loopne
pop
xor
andb
sbb
sub
repz
pop
sbb
xor
cwtl
pop
or
or
xchg
push
jb
cmp
stos
fstps
and
add
std
add
or
bound
outsl
pop
pop
hlt
jle
faddl
adc
insb
test
pop
pop
jbe
sarl
ds
pop
cmc
mov
out
pop
mov
push
aam
jbe
lds
xchg
bound
clc
sbb
scas
cmpsb
gs
xor
xchg
pop
mov
xchg
and
popf
cwtl
push
cs
icebp
sub
aam
cmp
sbb
pop
aad
xchg
mov
lds
push
xor
call
mov
daa
adc
push
mov
aam
or
or
pop
jp
xchg
gs
inc
pop
mov
clc
push
stos
filds
xchg
pop
and
mov
or
push
sub
das
and
fbstp
add
inc
inc
xor
inc
jge
xchg
mov
sbb
mov
push
in
dec
mov
mov
pop
aam
into
sub
cmp
inc
notl
push
cmp
clc
cmc
sbb
mov
jb
xchg
cmpsb
push
pop
mov
scas
inc
xchg
sub
cmp
jmp
aaa
cmc
pop
mov
mov
adc
sti
js
adc
inc
cmp
sub
rorl
xor
mov
push
scas
push
pop
js
push
int
fcoms
push
cltd
cmc
mov
push
mov
dec
fwait
xchg
or
jge
lock
adc
adc
jne
or
aam
or
leave
roll
ss
xor
iret
xchg
adcl
ljmp
mov
push
shrl
call
das
xchg
or
lret
mov
pop
xor
ds
xor
add
unpckhps
in
pusha
sub
push
mov
push
and
xchg
stos
and
xchg
fdiv
mov
mov
lods
stos
cmc
sbb
scas
repz
je
jb
pop
sub
mov
push
iret
rcll
imul
fst
xchg
not
mov
pushl
enter
pop
push
sub
addr16
xchg
sub
test
sbb
imul
pusha
pop
mov
push
cmc
mov
shlb
cwtl
xchg
sub
xor
fprem1
mov
outsl
push
jns
dec
daa
aam
das
inc
adc
xchg
clc
aad
cmpsb
cmp
mov
dec
sbb
loopne
pop
stc
push
jne
lock
pop
jb
fcmovnb
cmc
fdivrs
pop
repnz
adc
pop
in
repnz
mov
je
insl
insb
imul
sbb
inc
aaa
test
clc
adc
in
adc
jne
dec
push
lods
lahf
repnz
xchg
inc
sarb
sub
mov
inc
call
push
push
inc
adc
xchg
pushf
idivb
clc
ljmp
repz
sbb
or
lods
in
xchg
stos
lahf
notb
cli
xor
mov
xor
sbb
sbb
mov
enter
mov
icebp
cmp
hlt
sub
adc
testl
pop
jae
ret
push
sub
jne
xchg
push
loopne
lahf
adc
notl
lods
xchg
inc
mov
scas
aam
inc
fsts
push
ja
push
bound
pop
orl
adc
push
sub
dec
xor
bound
inc
nop
cmc
mov
or
add
cs
lods
inc
xchg
add
call
mov
sub
mov
sbb
sub
popf
pop
jmp
popf
mov
adc
movsl
pop
jge
jae
scas
icebp
lret
sub
sti
popa
mov
push
mov
rcrl
lods
xchg
shll
rolb
lods
hlt
xor
aam
mov
inc
cwtl
mov
pop
pop
inc
add
fs
fdivl
pop
mov
sub
ja
xchg
push
hlt
fnstenv
sarl
mov
mov
inc
xchg
adc
pop
aaa
adc
xor
pop
mov
adc
jmp
mov
repz
or
push
arpl
cwtl
mov
shll
and
out
loope
or
push
stos
adcl
lret
stc
shrl
mov
pop
adc
ds
aad
jns
stc
imull
outsl
popa
mov
aaa
ds
pop
repz
icebp
pop
or
mov
lret
loope
je
xchg
scas
xchg
push
xlat
push
mov
jb
fcom
fldt
sub
xchg
loopne
daa
mov
sbb
and
pop
push
stos
jp
rol
or
hlt
add
inc
lcall
icebp
inc
jge
and
cmp
ljmp
fldenv
or
negl
outsb
or
push
test
fldenv
pop
imull
lock
sti
xlat
rcrl
xor
push
xchg
stos
int
sub
cmpsb
stc
cli
ret
push
xor
inc
xorl
aas
es
sti
ja
xchg
das
out
dec
cld
mov
xchg
dec
lret
fcom
sbb
push
mov
popa
dec
mov
sahf
aaa
cli
sub
xchg
scas
mov
mov
out
pop
int
andl
cltd
pop
ja
adc
xchg
outsb
sahf
jo
jne
adc
mov
aas
clc
push
sub
and
fcoms
movb
sbbl
stos
cmp
shll
sbb
mov
popf
out
adc
cltd
dec
es
xchg
nop
loope
into
dec
mov
sub
fwait
jmp
aaa
cwtl
xchg
mov
inc
push
sti
arpl
pop
sbb
jno
or
adc
mov
pop
testb
or
aam
mov
es
pop
sub
mov
lods
stc
js
xchg
adc
push
push
or
add
mov
pop
push
push
inc
or
std
rclb
mov
mov
iret
push
mov
pop
stc
in
push
mul
cmp
xor
and
xor
pop
push
cmp
cmp
xor
roll
or
jno
sti
aam
adc
repz
dec
push
divl
adc
xor
movsb
lods
subl
lods
adc
fldenv
adc
icebp
fldcw
jb
mov
fldt
sbb
test
pusha
jb
gs
lahf
xor
xchg
test
clc
daa
data16
push
shll
push
arpl
call
sub
dec
push
xor
imul
into
pop
adc
data16
stc
loop
pop
sbb
or
scas
add
pop
aam
sub
icebp
ljmp
inc
sub
xor
xchg
mov
int3
push
loope
icebp
cmp
and
rol
mov
xorl
out
stc
imul
pushf
repnz
dec
cwtl
xchg
and
xchg
cmpl
insl
mov
inc
imull
adc
mov
sahf
pop
pop
test
xchg
mov
and
push
sub
cmp
sub
int
sbb
addr16
mov
and
aaa
fldenv
cli
jmp
scas
sbb
or
xor
int3
pushf
sub
lock
xor
mov
stc
or
push
xor
dec
sbb
stos
inc
or
stos
scas
lahf
fdivs
xchg
cmpsb
cmp
dec
or
pop
and
and
cs
xor
ja
mov
enter
lods
bnd
cmp
mov
mov
mov
sbb
lods
cltd
jp
push
inc
scas
mov
and
jl
mov
and
js
int3
aas
gs
sbb
out
sbb
mov
push
repnz
lods
mov
or
fwait
icebp
add
jbe
testb
lret
es
sub
adc
push
into
xor
cmc
mov
sub
jnp
bts
adc
xlat
pushl
cmc
ret
enter
ss
fdivl
cmp
lret
cld
inc
sbb
add
mov
push
stc
sub
rcll
std
movsb
pop
adc
ja
ja
or
jns
jae
lods
sahf
test
mov
xchg
cmc
xchg
bound
push
test
idivb
push
mov
fcoml
adc
sbb
dec
mov
cltd
sbb
test
sbb
mov
bnd
push
mov
pop
xor
incl
sub
push
push
push
lock
call
cmc
rcrb
mov
pop
sbb
fstpt
cmp
inc
cmp
push
mov
fxch
dec
cmp
sahf
mov
ror
cmp
mov
mov
lahf
xchg
sbb
jge
rorl
ss
shll
pop
cwtl
sbb
add
and
push
add
pop
rcrb
cli
lods
pop
out
jne
test
call
xor
sti
testb
ret
mov
sbb
rolb
xchg
add
cmp
and
mov
popf
mov
fdivr
sbb
or
mov
jb
push
into
add
aad
sbb
bound
xlat
js
ror
je
mov
xlat
mov
lock
jae
or
or
inc
repz
and
mov
insl
push
mov
jp
xchg
call
mov
or
push
cs
add
adc
push
mov
adc
pop
sbb
xchg
push
inc
mov
cmpsb
fprem1
push
scas
inc
mov
ljmp
adc
pop
fdivrs
jecxz
sbb
mov
pop
jae
sub
aad
lods
lds
xchg
ret
push
jne
adc
into
ss
pop
rcrl
adc
pop
fdivs
iret
sbb
lock
sbb
and
adc
popf
test
out
pop
push
cmp
es
cmp
sbb
and
xchg
scas
mov
sbbl
push
push
out
jmp
jnp
xchg
inc
mov
or
outsl
xchg
out
cmc
filds
rorl
rol
xor
std
push
pusha
daa
jge
push
dec
push
das
enter
or
cmp
dec
mov
mov
push
int3
lahf
or
inc
xor
adc
into
jo,pn
push
cmp
sbb
scas
insb
iret
stos
fldenv
mov
cs
cmp
xchg
mulb
hlt
pop
cmp
mov
fnstenv
inc
stos
sub
and
sti
fcomps
cmp
jbe
cwtl
dec
lods
or
mov
mov
ret
pop
xor
loopne
mov
jae
icebp
mov
ret
sbb
cmpsl
loopne
hlt
test
pop
pop
add
sbb
mov
test
mov
and
mov
add
stos
ljmp
clc
jl
icebp
das
push
mov
xor
jae
fsts
lcall
mov
mov
mov
jmp
ds
fwait
pop
cmp
mov
ret
xlat
adc
push
sbb
push
clc
jb
xor
mov
add
xchg
rcll
mov
sub
scas
cwtl
pop
cmp
adcl
sbb
push
fstpl
mov
xchg
test
fdiv
pop
lods
jge
cltd
fld1
xor
xor
lods
push
iret
xchg
sbb
fildll
mov
adc
jb
scas
mov
mov
cs
daa
sub
imul
inc
ja
stc
lahf
dec
call
das
or
sub
xor
aaa
repnz
notl
push
pop
dec
pop
fnstenv
sub
xchg
push
xchg
loop
xor
push
jo
push
adc
mov
push
sub
jne
pop
adc
add
inc
aam
rclb
cwtl
xchg
or
lods
test
sbb
xchg
xchg
mov
or
xorb
dec
sarl
sarl
fdivs
jbe
sbb
xchg
mov
hlt
sbb
xor
into
xchg
fldcw
jle
add
es
bound
sub
or
repnz
mov
orl
dec
and
push
inc
fdivrs
imul
push
loop
and
jb
sbb
mov
imul
xor
cli
and
ds
jle
dec
sbb
jg
scas
insl
push
lock
push
mov
lret
lods
xchg
xchg
or
orl
lret
mov
mov
enter
pop
daa
icebp
test
shl
adc
xchg
adc
mov
adc
mov
rcll
adc
imul
mov
sbb
popf
pop
sbb
sbb
xor
sbb
mov
ss
and
test
fstps
mov
test
inc
sub
je
mov
pop
adc
lods
xlat
xor
push
xchg
xor
mov
or
pushf
cmc
jg
sbb
stos
add
rcr
xchg
jp
and
jo
mov
xlat
jecxz
jns
je
push
mov
lock
fninit
clc
push
jbe
enter
adc
insl
rclb
mov
ds
jo
mov
mov
push
dec
push
pop
xchg
in
xchg
mov
stos
imul
adc
sub
dec
scas
fisubl
decl
sbb
adc
lods
jbe
xchg
dec
cmp
es
xlat
sub
faddp
into
dec
mov
sbbl
add
das
lret
sbb
mov
xor
cmp
movsl
sbb
gs
out
rcrl
sub
pop
push
les
push
jae
xchg
negl
movsl
sbb
rcl
or
lahf
cltd
scas
loope
mov
mov
xlat
cmp
clc
add
add
mov
pop
xchg
push
sbb
push
mov
pop
mov
stc
inc
lahf
pop
das
sbb
insb
sbbl
lods
loopne
mov
dec
push
cmp
xor
scas
jp
cltd
iret
lahf
mov
int3
loope
xor
push
push
cmp
mull
pop
dec
add
or
pusha
fsts
sub
jnp
aas
fidivrs
aam
or
pop
bound
mov
xor
cmpsl
mov
repnz
xor
pop
inc
adc
mov
mov
popa
lahf
les
push
repz
test
clc
sbb
sub
fisubl
xor
jns
mov
bound
int3
mov
push
in
fnstenv
pop
dec
scas
push
stos
mov
jmp
push
sbb
dec
mov
test
xor
xchg
aam
fstl
clc
add
mov
xlat
push
cwtl
cmp
mov
dec
adc
push
add
sbb
xchg
sti
mov
loop
mov
add
je
mov
inc
mov
adc
in
pop
xor
hlt
push
xchg
xchg
sub
aad
mov
or
mov
adc
dec
shlb
aam
jg
int3
xor
pop
fs
push
sub
leave
sahf
lods
aas
mov
mov
ja
sti
push
leave
and
sub
adc
cmp
mov
dec
and
pop
daa
inc
xor
sahf
pushl
cwtl
xor
mov
pop
mov
cmp
jne
fnsave
pop
push
out
scas
fsubrs
sub
xchg
cs
repnz
and
fdivrs
sahf
js
hlt
inc
inc
jo
hlt
or
sbb
fwait
adc
xor
repnz
mov
repnz
xchg
jno
fsubl
mov
lods
jo
inc
fwait
mov
adc
or
jp
lods
int3
adc
cmc
jne
or
mov
aad
sbb
adc
mov
aad
push
repnz
dec
and
loopne
xchg
mov
adc
xchg
stc
sub
jmp
sahf
sbb
aad
sub
push
sbb
pop
mov
lods
dec
inc
insl
fists
cwtl
or
mov
cmp
js
xor
xor
sbb
sub
je
xchg
push
cmc
lcall
rcrl
into
aad
cwtl
sbb
je
pop
jne
sub
inc
jmp
and
add
movsl
cmp
adcl
inc
jmp
push
pop
loope
fdivs
pop
sar
sbb
sbb
xlat
xlat
push
push
or
aam
or
adc
into
movsb
pop
inc
xchg
sbb
push
jbe
roll
je
fstps
push
bound
push
sub
or
shrl
and
xor
adc
sahf
inc
ficompl
xchg
cmp
lret
sub
cmp
lcall
outsl
dec
test
adc
shlb
pop
xchg
add
std
jg
mov
cs
stos
movsb
scas
fsts
pop
jbe
gs
mov
mov
pop
or
fnstcw
cmpsb
shlb
shll
sub
dec
es
and
mov
mov
mov
addb
shll
popa
aaa
xchg
leave
push
lea
leave
pop
das
mov
call
ss
adc
or
sbb
hlt
xor
sbb
adc
movsb
dec
cmc
xor
adc
mov
sub
cmp
pop
xor
rorl
add
sbb
aas
push
negl
sbb
dec
cltd
cmp
sbb
lock
jns
add
ja
adc
cwtl
jns
xchg
and
mov
mov
cli
adc
push
sti
fistps
fldl
dec
cmp
sbb
push
inc
iret
push
addl
xchg
mov
jo
icebp
mov
iret
jb
je
add
lock
shl
xor
cmp
ss
incl
stos
cmpsl
icebp
cmp
ja
sub
std
mov
stos
jbe
xor
jp
or
shr
ds
push
add
lods
jne
mov
inc
push
test
xor
and
adc
jl
xchg
sbbb
cmp
push
cmp
adc
insl
sbb
pop
mov
fwait
push
xchg
jbe
cmc
push
roll
cld
ss
ret
sti
sbb
adc
sub
xchg
inc
dec
sbb
pop
mov
cmp
loope
pop
mov
dec
adc
mov
pop
mov
aam
sub
fs
dec
pop
stc
mov
mov
bound
jle
inc
push
xchg
pop
cwtl
sub
iret
mov
cmp
std
xor
xchg
sbb
inc
adc
lret
add
jnp
add
lods
or
mov
mov
sahf
bound
pop
sbb
pop
rolb
leave
je
push
jp
push
xchg
add
sbb
adc
jmp
push
in
dec
pop
pop
push
pop
daa
xchg
pop
into
pop
jbe
bound
xchg
cmpsb
je
idivl
and
lods
xchg
int3
xchg
mov
inc
push
negl
push
movsl
jb
or
test
mov
mov
aad
mov
add
jge
aam
mov
adc
jae
push
icebp
mov
repz
and
or
enter
dec
jp
test
mov
lods
stc
pop
testb
fninit
mov
fisubrl
stc
lods
lahf
data16
add
adc
aad
vmaxsd
pop
rol
cltd
jne
push
cmp
shl
aaa
pop
jns
xchg
push
cmp
and
sarb
lds
rcl
insb
inc
hlt
adc
dec
cwtl
xchg
cs
inc
sbb
mov
push
or
inc
or
inc
hlt
fdivs
and
adc
pop
and
dec
sub
adc
orl
aas
ss
jns
xchg
insl
mov
dec
mov
xor
push
imull
int
rdmsr
dec
hlt
or
mov
dec
fcoml
cwtl
loope
xor
jp
mov
adc
or
mov
testl
imul
sbb
adc
cmp
sbb
or
sub
pop
scas
js
dec
mov
push
mov
push
or
test
loope
xchg
dec
sub
adc
sbb
push
push
or
jbe
pop
daa
jne
xchg
hlt
pop
add
sbb
jo
dec
scas
pushf
cmp
dec
pop
mov
push
iret
daa
jo
pop
cmp
xor
pop
repz
inc
bound
add
lods
out
cmc
xchg
insl
sahf
dec
xchg
clc
add
fs
adc
or
lds
gs
clc
mov
and
xchg
ja
push
xchg
adc
cmc
pop
mov
imul
dec
inc
aam
int3
jge
xor
jl
sbb
out
sbb
sub
jb
push
stc
sub
pop
adc
test
sahf
jb
jmp
adc
inc
xchg
cli
popa
pop
and
mov
orb
adc
mov
mov
mov
xor
in
cwtl
repz
ror
dec
dec
cmp
lock
pop
mov
xchg
jb
clc
jbe
hlt
adc
and
ror
clc
clc
sbb
push
fwait
xchg
mov
repnz
rclb
inc
pop
jbe
jp
push
rorb
fidivs
fmuls
push
mov
and
add
pop
xchg
aad
push
mov
sbb
lret
xor
mov
icebp
sub
mov
test
psadbw
adc
mov
jae
cmp
in
lea
jne
adc
shll
xchg
xor
xor
pop
das
jbe
jp
xor
popf
sbb
arpl
cmp
cmc
sub
insl
sbb
sbb
cmp
stos
dec
push
pop
add
jne
js
pop
loop
cltd
adc
loop
adc
popf
fwait
out
or
sahf
stos
pop
jg
shrb
lret
stc
jo
mov
aas
int
xor
mov
push
mov
lods
pop
cmc
push
mov
xchg
fwait
mov
push
push
cmp
scas
push
sbb
enter
outsb
or
rcll
ss
leave
sub
sahf
jb
dec
idivb
sbb
repz
enter
push
sub
add
push
lods
mov
shrl
push
adc
and
je
das
mov
jecxz
mov
mov
orb
cld
jbe
xor
jns
dec
jbe
das
pop
sub
dec
ja
pop
sub
push
add
xchg
fwait
cmp
jl
adc
and
push
mov
mov
add
mov
jno
sbb
cmp
cmc
push
cmc
icebp
push
mov
mov
dec
cwtl
je
mov
xor
sub
ja
pop
lret
aam
xor
adc
xchg
bound
and
clc
mov
sbb
xchg
pop
add
fidivl
clc
adc
notb
loope
xor
out
outsb
imul
sbb
in
out
mov
aaa
fbstp
notl
cmp
test
xor
xchg
pop
cltd
push
insl
dec
aaa
rcll
adc
je
and
xor
std
in
xor
divb
sbb
test
push
pop
push
sbb
scas
mov
xchg
leave
mov
pop
subl
fstpt
pop
clc
imull
lods
popa
jb
sar
dec
pop
sbb
lret
xor
pop
jle
sbb
aad
jne
in
xchg
clc
jb
stos
in
lcall
push
xchg
mov
jb
ret
das
inc
push
pop
adc
aas
xchg
xchg
and
roll
negb
mov
xlat
cwtl
cmp
adc
inc
lds
gs
flds
daa
stc
sub
bound
push
pop
loope
adc
ffree
out
xor
push
mov
jge
cltd
lods
loopne
popf
sbb
pop
cmc
mov
dec
xchg
pop
insl
test
cmp
mov
xor
cmp
xchg
fs
add
cmpsl
rcl
leave
mov
ja
stos
test
sbb
mov
out
dec
push
cltd
les
int
and
push
xlat
jg
push
sahf
sahf
mov
sub
ret
ja
mov
icebp
mov
lea
rcll
push
xor
fcmovu
leave
pop
cs
xchg
xchg
jbe
je
xor
nop
aad
and
fs
jno
les
scas
sub
pop
or
adc
cmpsl
push
stos
jne
sub
mov
mov
pop
xorb
push
jae
push
pop
je
cmp
scas
int
dec
or
test
in
add
jb
and
push
pop
imul
sti
add
sbb
shrl
jne
pop
out
ljmp
icebp
jbe
or
das
lds
insl
mov
ja
dec
mov
into
rcl
fldcw
or
outsb
and
and
mov
push
adc
adc
sub
pop
test
cwtl
stc
mov
lock
pop
pop
cmp
std
sub
daa
popf
or
sub
aam
pop
adc
aad
inc
cld
xchg
xchg
push
cmp
mov
inc
adc
and
mov
jp
push
fldenv
jae
lret
push
fbstp
xor
adc
add
insb
cmp
pop
testl
lahf
push
sbb
aam
aad
mov
or
fsincos
cmc
dec
lds
mov
push
mov
push
push
adc
sub
insb
lret
imul
push
rclb
hlt
xor
jecxz
adc
adc
mov
xor
xor
movsl
push
xor
pusha
jmp
lret
je
ss
je
xor
jbe
imulb
jecxz
shll
mov
shll
or
mov
inc
sbbb
aaa
mov
mov
iret
dec
mov
loopne
lods
sbb
shlb
push
cmp
jb
cmp
test
jae
sbb
test
jns
mov
lret
cwtl
mov
or
jg
imul
je
lret
rorl
clc
repz
or
or
testb
adc
popaw
fimull
adcb
popf
and
sbb
sar
mov
jbe
or
mov
inc
jo
fcoms
loop
ja
ret
stos
mov
adc
loopne
xchg
push
mov
push
lea
mov
pop
cmpsb
shl
repnz
pop
mov
loopne
push
ja
jg
clc
sub
test
or
int
nop
outsb
andl
xchg
jns
fwait
xor
scas
adc
fwait
adc
sub
aas
mov
mov
sub
imul
adc
je
and
inc
int3
adc
dec
pop
repz
mov
xor
xor
stos
dec
sbb
sarb
mov
inc
adc
ret
movsb
xor
stc
les
repz
push
call
je
shlb
fcomip
push
push
hlt
jnp
sti
dec
out
adc
mov
xchg
ja
cmp
stc
lcall
adc
jp
or
mov
fsts
jmp
jp
sub
jno
rcrb
xlat
dec
inc
lock
adc
rcr
pop
movsb
push
sbb
mov
dec
cmp
lods
cmp
adc
sub
ss
ljmp
scas
add
pop
out
cmp
cs
xor
sbb
aam
das
xor
inc
pop
adc
clc
pop
hlt
adc
bound
inc
cltd
ret
lea
mov
jno
pop
cwtl
das
imul
das
loopne
sahf
imul
daa
mov
imul
in
insb
je
and
ss
ds
das
xchg
lods
and
mov
pop
stc
repz
nop
xorb
jne
daa
icebp
pop
jb
lds
cwtl
test
imul
test
push
repnz
adc
pusha
cmp
orl
add
and
mov
lcall
pop
xlat
pop
add
push
push
sbb
pushf
mov
xlat
clc
cmp
pop
repz
xlat
lods
mov
cmc
rcrl
aaa
dec
inc
mov
iret
test
and
mov
mov
out
adc
fwait
rcrl
adc
sbb
es
jecxz
pop
push
ja
mov
sbb
adc
cs
sbb
xchg
push
and
icebp
xchg
rcll
pop
sbb
cmp
xor
lret
pop
sub
add
jecxz,pn
mov
pusha
mov
mov
mov
xor
repnz
mov
pop
sahf
dec
cmp
adc
xor
add
jg
mov
les
xchg
mov
icebp
mov
lahf
sub
mov
test
nop
adc
inc
out
xchg
adc
into
cmp
xchg
cltd
ljmp
or
jo
out
je
cmc
push
mov
std
fdivrl
scas
adc
pop
repz
jo
push
push
mov
mov
inc
cwtl
adc
scas
stos
rcrl
fisubl
adc
mov
cmp
xchg
rcll
push
xlat
lcall
cmc
test
std
aas
cmp
cwtl
stos
and
xorl
or
or
popf
adc
adc
jb
stos
or
and
pop
push
imul
pop
sbb
scas
cltd
dec
sub
push
mov
lret
cmc
pop
sbb
aaa
icebp
add
push
mov
xchg
and
cwtd
pop
mov
or
sbb
jp
cmc
adc
lds
jg
cmp
pop
xor
test
lcall
cs
dec
stos
dec
rclb
pusha
movb
popf
jp
xor
jne
scas
dec
out
mov
sub
mov
lea
and
aam
out
sub
imull
mov
xchg
mov
xchg
inc
xor
xchg
push
sbb
inc
insl
inc
popf
hlt
adc
push
cli
dec
int
orl
cli
cmc
push
fsts
fst
mov
cmpsl
imul
xchg
sbb
out
push
out
pop
xchg
sub
sbb
out
mov
hlt
push
adc
stos
xchg
xchg
or
pop
push
sub
adc
iret
push
mov
xor
mov
rcrl
out
movsb
test
jns
lods
aad
out
jl
mov
dec
dec
addr16
pop
sbb
and
dec
xchg
clc
shlb
fdiv
fisttps
mov
neg
les
sbb
inc
shrl
mov
scas
in
add
adc
stc
dec
jp
push
sbb
jmp
sbb
andb
xor
mov
sub
sub
adc
addl
xchg
insl
icebp
push
sbb
or
ret
leave
or
pop
fstps
scas
jb
mov
imul
je
mov
aam
jg
sbb
fadd
loope
mov
lret
imul
mov
mov
mov
sbb
and
cwtl
clc
sub
shll
cwtl
cmp
aaa
inc
push
push
xchg
sub
xchg
out
repz
mov
int
rcll
jmp
cli
mov
xchg
mov
push
jns
lock
adcb
add
inc
adc
mov
mov
fstps
cs
jnp
roll
inc
sahf
jb
arpl
mov
xchg
inc
scas
add
and
stc
inc
sub
mov
stc
dec
mov
xor
out
stos
push
fimull
add
mov
lea
in
scas
fcmovnbe
push
mov
inc
xchg
push
dec
mov
push
xlat
mov
dec
and
push
sbb
sbb
xchg
dec
mov
ret
cmpsb
mov
stos
icebp
loope
mov
fsubr
push
sub
jnp
adc
pop
dec
jp
xorb
push
fldcw
mov
pushf
into
bound
adc
popf
das
push
sub
pop
or
enter
stos
pop
imul
aam
sbb
or
les
dec
and
imul
sub
out
sub
pushf
inc
cmpsb
xchg
jns
jb
mov
cmpsl
add
call
and
push
cwtl
stc
std
mov
sub
xchg
pop
repnz
pop
icebp
js
xor
lods
ljmp
sbb
stos
xchg
dec
outsb
xchg
push
adc
xor
dec
das
shl
add
aas
mov
sbb
mov
mov
xor
and
shr
inc
fsubrs
xchg
add
adc
xchg
imul
pop
pop
or
and
js
mov
xor
mov
hlt
pop
notl
or
sbb
cmp
imul
xor
insl
repz
gs
jge
mov
inc
dec
je
jle
lock
lret
pop
femms
es
and
and
cmp
dec
xor
mov
and
rcl
sbb
stos
daa
and
pop
pop
scas
dec
icebp
nop
sahf
mov
imul
jo
and
das
jae
data16
and
push
addl
stos
fsubs
jne
xchg
push
imul
lcall
cs
add
push
push
ror
in
pop
xlat
out
inc
adc
cltd
or
xor
lock
cmc
test
jp
cmp
pop
pop
pop
aaa
pmullw
inc
cltd
das
adc
enter
pop
xchg
push
lret
push
mov
xor
jo
shlb
xor
inc
mov
jp
pushl
xchg
scas
outsb
xor
and
das
or
cmp
mov
outsl
jo
mov
push
sbb
lds
cmc
imul
push
out
cmc
pusha
jecxz
sbb
and
icebp
push
xchg
mov
lods
js
or
mov
cwtl
ljmp
lea
inc
jns
add
adcb
fnstenv
lods
xor
and
enter
subb
or
xchg
adc
mov
push
sarl
xchg
cltd
jmp
mov
push
sbbl
out
xchg
sub
fcomp
xor
mov
jge
pop
cmc
or
xchg
test
out
sbb
xor
pop
adc
lret
pusha
jge
mov
push
sbb
jb
push
adc
jp
repz
push
hlt
nop
movsl
inc
arpl
pop
mov
cld
adc
push
adc
and
test
sub
fisubrl
ja
sbb
movsb
or
push
es
dec
fdivrs
popf
jbe
xchg
mov
std
push
xlat
sbb
mov
daa
sub
push
push
int
clc
pop
mov
inc
mov
mov
aas
pop
push
cwtl
subb
sahf
mov
sahf
sub
or
cmp
mov
dec
mov
pop
ja
inc
xchg
cli
sbb
call
fists
xchg
bound
iret
adc
or
xchg
sbb
push
jge
cmc
push
in
movsl
jbe,pn
cmpsl
insb
adc
and
adc
jb
movsb
adcl
mov
bound
movl
pop
xlat
cltd
repnz
mov
add
enter
jno
xor
inc
mov
hlt
lods
out
xor
and
imul
dec
sub
push
movsl
add
clc
loop
sbb
gs
out
clc
adc
sub
push
mov
xor
jg
cltd
cmp
and
aaa
loopne
aas
sahf
pop
out
cs
inc
ss
push
mov
and
xchg
lock
sbb
aas
push
xor
or
push
cmp
aad
push
mov
scas
pushf
and
xor
outsb
cwtl
xor
insb
cli
jns
jecxz
jp
xor
adc
jle
mov
das
call
insb
xchg
cltd
mov
add
stos
inc
lods
popa
call
rcll
lahf
jb
sbb
mov
aaa
cld
icebp
out
out
push
int
rcll
mov
inc
xor
dec
mov
adc
adc
mov
into
shll
lds
and
adc
loop
push
xchg
and
cmp
inc
sub
xchg
stc
pop
fdivrs
mov
cmp
leave
push
mov
mov
in
push
inc
insl
gs
daa
xchg
pop
sub
or
mov
scas
loope
add
mov
jns
lret
cltd
fxch
mov
push
or
lock
or
lock
push
push
push
adc
cmp
xlat
aam
pushf
xchg
test
cmp
movsb
icebp
mov
xchg
sub
icebp
sbbb
repnz
adc
jns
in
sbb
push
fildll
notl
lods
ret
sub
pop
xor
add
shlb
adc
into
cs
pop
adc
inc
leave
xor
test
xor
incl
jb
icebp
loope
scas
add
dec
mov
bound
jle
pop
add
xchg
sub
ror
ss
push
sbb
and
mov
jno
xchg
rcrl
and
insb
scas
subl
loope
add
xchg
xor
mov
stc
inc
jl
inc
das
test
adc
adc
scas
push
push
aas
dec
xchg
lock
sub
test
sbb
addr16
rclb
inc
cltd
dec
sbb
mov
pop
clc
mov
push
out
inc
xchg
xchg
jns
notl
dec
lds
cli
test
lods
enter
inc
jo
jp
jbe
sub
sub
fldlg2
inc
xchg
rorb
sbb
inc
and
in
ljmp
scas
rcll
xchg
mov
scas
in
and
fiadds
and
mov
sarl
xchg
aaa
ja
sarl
lret
adc
push
push
rcl
adc
mov
and
sbb
stos
xchg
push
or
loopne
bound
jb
xchg
lret
fadds
in
icebp
ds
sub
mov
sahf
sbb
inc
or
push
popa
fnstenv
sub
cmpsb
and
insb
mov
or
sbb
fcomip
xchg
adc
dec
loopne
jns
sbb
push
sub
push
xlat
sbb
stos
xor
pop
xchg
add
inc
lods
pop
ret
test
pop
mov
lret
ja
xor
pushl
mov
iret
or
insl
xchg
pop
and
inc
push
shlb
mov
xchg
xor
sbb
test
cmpsl
enter
stc
jecxz
mov
and
cmp
xchg
jne
rcll
pop
mov
test
fdivs
cld
adc
push
pushf
xlat
jae
pop
cmp
loope
js
cli
push
cmp
addr16
mov
lret
mov
mov
xchg
xchg
sbb
jns
xchg
int
sbb
xchg
std
sbb
daa
lea
push
push
jns
xor
ljmp
jne
in
int
bound
add
mov
pop
cli
mov
jne
in
bound
mov
popf
add
out
or
orl
pop
mov
sub
pop
dec
outsb
shll
lahf
sbb
sub
mov
inc
out
jl
shrl
mov
xchg
xchg
lock
jbe
les
sbb
call
ds
lahf
sbb
das
test
popf
data16
dec
jb
loopne
cmc
xchg
cs
cld
aam
mov
lods
cwtl
sbb
outsl
dec
jns
mov
sub
sarb
and
xlat
dec
jae
outsb
shll
xor
jne
sbb
stos
in
rcll
mov
aam
jbe
mov
inc
in
idiv
dec
mov
pop
push
push
jmp
imul
sbb
in
ret
dec
repz
mov
cmc
and
pop
movsl
dec
movsl
pop
sub
adc
cmc
adc
aad
in
fstl
jg
dec
or
lock
negl
or
push
fwait
xor
xchg
cmp
mull
sbb
xchg
adc
and
cmp
fnstcw
push
imulb
lret
pop
push
mov
jns
xchg
cmp
push
loope
or
repz
xor
pop
xchg
mov
dec
push
mov
sar
mov
push
dec
ljmp
clc
sub
and
dec
ljmp
cmp
aam
cld
repnz
leave
and
sbb
movsb
xor
adc
je
add
in
jbe
add
jle
or
test
push
fs
sbb
rorl
sbb
ss
aam
pop
or
push
pop
cmp
stc
cmp
sub
xor
arpl
xchg
jecxz
cmp
mulb
mov
jb
das
sub
lods
pop
jns
xlat
call
sub
fistpll
lock
pop
aam
sub
es
cwtl
adc
jl
or
inc
cmp
cmp
or
scas
adc
mov
cltd
xor
jo
and
xor
shrb
rcl
testb
pop
popf
mov
sub
jg
lret
push
fsts
mov
in
xchg
repz
loopne
das
xchg
stos
movsl
into
xchg
or
sub
hlt
loop
jb
and
leave
pop
mov
inc
into
cmp
xchg
insb
jbe
jnp
in
das
jge
ss
out
fstps
scas
xor
mov
xchg
and
cmp
cmpb
xor
lret
adc
sbb
mov
or
pop
bound
notl
insl
jnp
adc
add
adc
push
andb
sbb
aam
call
jb
jmp
xor
mov
jne
jle
cmp
pushf
push
outsl
ja
push
push
jae
pop
fmuls
movsl
pop
popa
repnz
push
sbb
sub
push
mov
adc
pushf
popf
mov
call
xchg
test
push
cmp
dec
out
daa
aad
insl
gs
inc
push
push
push
xchg
dec
test
sbb
sub
xchg
push
cmpsl
add
push
pop
sbb
mov
aam
scas
xchg
shrl
out
movsl
jnp
jne
xchg
or
fs
pop
insl
repnz
xlat
data16
and
mov
incl
sub
cli
out
adc
push
xchg
cmp
xchg
mov
xlat
clc
adc
push
pop
ss
adc
lret
cwtl
clc
xor
fcoms
dec
xchg
pop
dec
lcall
out
xor
mov
scas
or
mov
adc
mov
lret
fs
push
adc
subb
or
push
cmp
test
clc
pushf
int
jns
je
sbb
lods
fdivrl
jle
mov
push
loop
jg
clc
xchg
and
push
lods
je
and
pop
outsb
xchg
lods
xor
mov
rorl
sbb
arpl
mov
inc
jnp
stos
cwtl
sub
fildll
pop
daa
rcrl
jnp
adcb
push
fstl
into
mov
mov
jp
aas
cwtl
xchg
push
nop
daa
mov
push
adc
pop
pop
rcl
sub
or
fmuls
sbb
cld
out
pop
mov
dec
jne
jb
bound
shll
xchg
jnp
pushf
xlat
dec
sbb
das
popa
push
ret
mov
cmc
loope
mov
lahf
jb
dec
mov
bound
xor
pop
psubw
je
add
xchg
mov
mov
mov
mov
dec
stos
push
sbb
push
cltd
stos
hlt
shrl
xchg
inc
jle
lods
out
jle
loopne
loopne
js
sub
cs
add
xor
imul
jnp
cmc
lcall
xor
xchg
jb
cs
push
xchg
ja
push
mov
das
pop
pop
hlt
jne
xchg
repnz
xor
popa
popa
cld
push
add
xor
icebp
push
stc
mov
outsb
pop
xchg
iret
add
adc
jl
jge
sbb
push
scas
data16
mov
dec
add
mov
sbb
scas
subb
and
pslld
cld
sarb
mov
sub
testl
add
inc
push
cmp
cmpsb
out
in
or
rorb
imul
lea
test
inc
and
mov
push
dec
cwtl
loopne
ja
push
adc
les
cwtl
fsubs
xor
mov
adc
jp
mov
scas
movsl
push
xorl
push
or
add
or
je
loop
xor
cltd
std
push
cmp
xor
mov
mov
ja
or
push
and
bound
aad
jb
and
or
icebp
jnp
adc
mov
stc
test
adc
js
xchg
sub
or
stos
push
mov
inc
xchg
clc
pop
subl
add
or
push
xor
popf
cmp
and
mov
mov
dec
xchg
xor
cmp
sub
pop
roll
loopne
adc
or
scas
jnp
push
cs
adc
mov
stc
push
sbb
sbb
adc
push
and
lock
mov
movsb
mov
and
clc
sbb
lods
xchg
fcoml
div
jmp
sub
xchg
mov
pop
cmp
xchg
xchg
dec
jne
jns
sub
adc
mov
add
outsb
sbb
pushf
xchg
sbb
sbb
add
stos
loope
or
ror
and
cwtl
add
push
icebp
lahf
mov
pop
xor
dec
mov
add
xchg
or
mov
xor
out
xchg
outsl
add
lock
pop
fwait
bound
rorb
jp
scas
lret
xor
aas
jns
add
nop
adc
sub
and
scas
pop
dec
xchg
loope
fistpl
adc
stc
mov
clc
adc
nop
cltd
inc
jns
push
je
adc
jno
push
push
adc
daa
or
sub
jns
outsb
pop
push
dec
lret
cmc
push
xor
movsl
inc
or
push
xor
aas
mov
pop
push
movsl
sub
clc
das
dec
lret
repz
push
stc
and
jge
push
xor
icebp
jo
xchg
or
stos
sarb
in
ds
and
fsubrs
popa
push
bnd
xor
sub
sar
dec
mov
out
pop
jne
scas
icebp
sub
ds
mov
popa
je
pop
xchg
stc
hlt
lock
jnp
inc
xor
adc
gs
lock
cmp
mov
push
enter
cmp
push
cmp
mov
adc
or
add
jg
loope
lret
pop
std
fistps
sbb
push
insl
test
mov
mov
ss
cmpsl
mov
call
rorl
jge
mov
cs
jne
dec
cmp
push
sbb
cwtl
data16
add
movsb
movaps
inc
jns
xor
pop
adc
sbb
xor
jnp
cmc
icebp
pop
stos
ficompl
movsl
xchg
cltd
sub
push
inc
mov
xorb
lcall
xor
mov
nop
ja
or
aad
mov
adc
lods
in
ja
pop
scas
cmpsb
test
and
jecxz
mov
cld
faddl
cwtl
mov
xchg
xchg
lret
or
bound
jb
ds
jnp
mov
mov
lock
and
mov
sub
shrb
mov
and
inc
pusha
mov
insl
test
out
xchg
inc
das
xor
adc
xchg
cmp
loop
aam
adc
stos
int
sbb
bound
push
adc
pop
push
call
push
sahf
movsl
fnstenv
test
or
inc
cmp
adc
cwtl
sbb
lods
insl
or
outsl
jns
inc
loopne
adc
std
dec
sbb
mov
adc
push
in
mov
rcrb
bound
xor
cmpsb
cmp
stc
inc
pop
mov
mov
or
pop
xchg
nop
add
repz
pop
dec
stc
mov
xor
inc
mov
and
clc
xrelease
mov
sbb
jo
mov
mov
jne
xchg
push
dec
nop
popf
mov
add
out
sub
mov
sub
ret
int
pop
pop
jmp
scas
js
popa
and
or
into
lret
pop
das
pop
rclb
stos
mov
jne
jge
cmc
push
sub
xchg
sbb
adc
sti
inc
bound
and
mov
pop
sar
mov
aaa
xchg
sbb
xchg
movsl
cli
sub
add
adc
push
dec
pop
sbb
mov
rclb
cmp
and
movsb
mov
addb
mov
adc
push
fists
xor
push
and
cmc
and
lret
mov
and
pop
xchg
cmp
xor
ret
jb
repz
push
jns
inc
cltd
mov
dec
inc
sub
aaa
adc
adc
in
mov
movhps
pushf
pusha
dec
and
int3
clc
adc
and
imul
daa
fstpl
mov
fsubs
cmp
mov
pop
nop
lret
mov
jbe
sub
insb
sub
or
sub
inc
fwait
xor
movsb
mov
adc
in
xor
inc
lds
adc
xchg
sahf
xor
hlt
mov
adc
and
ja
lods
fwait
mov
repz
xchg
adc
jae
dec
mov
xchg
loop
mov
rcll
jb
and
pop
pop
popf
xchg
sbb
bound
ret
aaa
xor
xor
mov
icebp
jge
lahf
and
sbb
xchg
push
test
ja
arpl
jns
inc
sub
sbb
insb
out
adc
fwait
mov
adc
lds
pop
sti
hlt
fstl
stc
adc
in
inc
mov
push
stc
mov
push
adc
aam
ja
mov
lret
mov
mov
les
and
jle
jg
push
fwait
pop
jbe
pop
call
lcall
sub
push
push
mov
mov
add
lods
jo
pop
mov
push
cwtl
sbb
pop
ret
hlt
cltd
jecxz
push
xor
les
or
add
fadds
mov
pop
adc
call
call
jmp
psubusb
int3
test
jno
jo
mov
xor
mov
lcall
adc
ss
adc
ror
in
sub
xlat
fldenv
rorb
jb
pop
scas
and
adc
ja
push
cmp
sub
pushf
mov
rclb
das
imul
mov
call
sub
xor
scas
enter
adc
pushf
stos
fldcw
push
aad
mov
pop
bound
fnstsw
cltd
jo
jb
mov
sub
pop
jge
cltd
fnstsw
mov
xor
ss
mov
bound
ret
gs
jbe
cwtl
nop
scas
fcmovnbe
aad
adc
mov
test
cmp
mov
ss
xchg
cwtl
inc
cmp
sti
push
push
sbb
mov
pop
xchg
insb
mov
inc
cwtl
sbb
fnstcw
test
pop
xchg
and
loop
push
adc
into
adc
lods
jb
pop
cmc
mov
jle
xchg
mov
cmpsb
shll
pop
mov
pop
lea
mov
ret
adc
das
sbb
roll
fwait
jo
jns
sub
jge
add
xchg
sbb
mov
mov
fsubs
push
push
insl
enter
adc
ss
cltd
push
and
test
push
bound
clc
push
jge
imul
test
test
fnstenv
xchg
pop
lods
loopne
and
pop
repz
sbb
and
push
push
hlt
cmpsl
xchg
pop
cli
cwtl
sbb
jno
das
lret
sbb
mov
push
dec
xor
and
jecxz
pop
push
in
gs
push
or
push
fcoms
mov
cmp
test
ja
sub
push
sbb
xchg
push
mov
cmpsb
xchg
dec
in
add
mov
fldcw
mov
fcomp
cmp
das
mov
mov
call
mov
fdiv
push
inc
pop
jbe
push
and
pushf
roll
rclb
shll
repnz
xchg
mull
sahf
push
and
cmp
stc
mov
mov
inc
int
imul
jp
xlat
fchs
fbstp
pop
ret
mov
mov
fisttps
notl
pop
fiadds
mov
sbb
jns
popf
xchg
add
or
or
aad
aad
in
mov
stos
mov
imul
or
xor
rolb
adc
mov
ret
cmp
pop
xchg
lods
sahf
adc
lds
xchg
mov
push
adc
or
inc
cltd
das
icebp
add
adc
movsl
cld
popa
pop
outsb
mov
inc
icebp
jmp
cmp
mov
push
xchg
es
fldlg2
jnp
inc
and
lods
outsl
ljmp
push
stos
xchg
std
and
fwait
push
xor
or
xchg
lods
shll
and
imul
push
jp
cmp
jo
test
hlt
adc
scas
add
push
pop
jle
aam
popf
mov
mov
xchg
adc
pop
mov
es
sbb
in
sub
in
inc
ss
xor
lret
xchg
stc
sub
add
mov
sub
movsb
lea
sub
mov
cs
mov
mov
call
incb
pop
test
sbb
mov
jb
mov
scas
jae
shll
negb
xchg
or
xor
adc
inc
xor
je
stc
and
xlat
int3
and
push
jmp
pop
jmp
orb
push
push
adc
mov
imul
aad
add
jl
xor
sub
pop
jnp
mov
mov
stos
cmp
cwtl
in
jge
jns
lcall
mov
scas
xchg
ss
jb
pop
lods
jns
fwait
loopne
adc
mov
stos
cs
les
xchg
cmp
pop
pusha
mov
call
pop
mov
xchg
movsb
and
sub
shl
jl
hlt
push
pop
pusha
push
sub
mov
shrl
xchg
sbb
mov
shll
aaa
divb
xor
and
cmp
or
jmp
mov
je
cltd
icebp
xchg
inc
scas
pushf
jns
pop
push
fcoml
xchg
lea
loope
and
or
cmp
mov
adc
clc
scas
adc
xchg
sub
lcall
popa
jl
xor
pop
sub
repz
sarl
negb
pop
sub
pop
lret
insl
pop
adc
shr
xchg
fidivs
xchg
xchg
cltd
lahf
jge
sbb
and
aas
cmpsb
icebp
pop
inc
inc
outsb
push
rorl
mov
mov
mov
sbbb
xchg
lret
and
xchg
cwtl
dec
inc
sbb
jl
inc
xor
mov
cltd
and
bound
scas
or
add
adc
xchg
fdivrs
repz
jmp
push
adc
mull
dec
loope
stc
sti
pop
push
jae
loopne
scas
aad
int3
lock
shrl
rcrl
jp
cwtl
fisttps
and
ja
jae
scas
popf
dec
in
add
cltd
adc
cmp
adc
nop
imul
push
xor
pop
sbb
dec
lods
push
aad
mov
mov
daa
and
sahf
inc
pop
jge
lods
cltd
xor
xor
test
cmc
push
lret
pop
fnstenv
dec
sbb
imul
test
xchg
and
fistps
mov
adc
cmp
sarb
mov
adc
data16
sub
pop
xchg
ret
repz
jge
mov
mov
popa
mov
ss
cmp
je
pop
aam
bound
or
dec
pop
push
and
dec
mov
mov
stc
xchg
int
push
jb
push
fisubs
and
sbb
stos
ljmp
ret
idiv
das
in
jp
push
mov
loope
lds
lods
sub
cmp
dec
mov
scas
stc
les
mov
lret
push
imul
mov
or
sbb
sub
pop
bound
dec
inc
adc
adc
cmp
cltd
push
imul
and
loopne
ja
fnstenv
rcrl
jne
xchg
lcall
sbb
jl
mov
xchg
out
js
leave
fsubl
nop
pop
das
in
shll
xchg
aam
pop
sbb
and
pop
sub
scas
pop
movb
sbbb
cmp
clc
jge
jb
xchg
adc
jmp
fldcw
loopne
cli
movsl
push
push
mov
fdiv
sbbl
fcmovbe
push
or
popa
jo
and
xchg
mov
pop
js
adc
xor
leave
stos
mov
mov
out
mov
sbb
scas
lods
ret
mov
hlt
sub
push
out
pop
aam
fdivs
cmp
push
sarb
mov
dec
push
push
stc
repnz
mov
adc
test
jp
mov
dec
icebp
cmp
xor
mov
sbb
mov
lock
sub
int3
cmp
add
or
pushf
aaa
mov
mov
cmc
ja
pop
stos
hlt
dec
dec
jno
xchg
xor
cmp
and
jl
inc
xor
xchg
pop
dec
int
inc
iret
fs
sbb
test
pop
mov
rcl
and
aam
cltd
jns
stos
pop
cs
xchg
cmp
add
mov
fsts
mov
cli
cmp
mov
sub
iret
fwait
data16
push
jae
push
xchg
pop
cmovs
cltd
dec
add
sub
test
xor
imulb
in
imul
jae
js
adc
jno
add
sub
inc
ret
in
test
fistpll
mov
aad
mov
cltd
xor
or
pop
hlt
xchg
sbb
nop
sub
lahf
jge
xor
lahf
push
push
test
push
je
push
pop
xchg
sub
mov
push
bound
ss
sub
mov
outsl
xor
fwait
imul
inc
ja
xor
xor
les
push
add
shr
push
pop
hlt
pop
rcrb
icebp
call
cwtl
mov
jo
sub
mov
cmp
and
mov
push
fcomps
stos
leave
js
push
ret
mov
xchg
mov
cmp
leave
rol
cmp
repz
cli
pop
cmp
push
cltd
pop
enter
cwtl
shll
inc
bound
or
lahf
rolb
les
aad
mov
fistpll
sbb
aam
mov
cmp
in
jbe
roll
ja
xchg
push
and
or
push
mov
or
jns
or
jge
xor
xor
jge
adc
imul
push
dec
pop
lock
xor
push
adc
clc
pop
sbb
or
cmpsl
bound
mov
and
add
js
iret
jno
mov
cwtl
subb
push
adcl
mov
ljmp
mov
jae
daa
pop
pop
push
mov
mov
add
push
sub
stos
sbb
les
pop
xlat
adcb
in
cmp
outsb
mov
pop
adcb
inc
pop
sbb
sbb
xlat
pop
push
fwait
int3
mov
ja
mov
adc
or
adc
push
sti
inc
test
cwtl
add
or
stos
lcall
push
xchg
mov
mov
sub
cwtl
xchg
lods
cmp
sbb
dec
fcoms
or
aaa
rorb
xchg
pushf
fstps
xor
iret
mov
xor
aam
and
add
pop
adc
jno
scas
rol
mov
pop
pop
sub
push
pop
pop
sbb
aad
cltd
ret
out
cmp
xchg
fldcw
fnsave
inc
sbb
movsl
mov
call
icebp
sub
cwtl
push
scas
in
sub
mov
adc
mov
rcrb
push
mov
xor
dec
sbb
inc
xor
push
cmp
lret
xchg
jns
cmp
xor
mov
mov
ja
pop
mov
xor
lcall
adc
addr16
adc
fiadds
add
push
inc
lock
cs
test
mov
xchg
cmp
pusha
push
sbb
xchg
icebp
fnsave
sbb
sub
sti
inc
pop
inc
stos
fdivr
fldcw
loop
sbb
mov
sub
lock
in
lea
mov
push
mov
in
pop
cmpsb
jg
push
cmc
sbb
mov
xor
adc
je
into
imul
scas
jnp
adc
pop
sbb
inc
ss
adc
aas
cmp
ss
loopne
push
xchg
imul
lret
mov
push
adc
sahf
aad
and
pop
push
xchg
enter
mov
xchg
cli
insb
xchg
int
xor
sub
push
add
pop
sbb
loop
fistps
and
mov
stos
cltd
das
lock
xor
outsl
aad
pop
or
inc
scas
jmp
jae
jp
stos
mov
leave
sbb
ja
jb
addr16
sti
push
mov
js
andb
add
out
adc
sbb
sub
push
and
cmc
sub
jbe
pop
jae
imul
xchg
pop
push
pop
xchg
mov
cmp
mov
cmp
and
jb
mov
push
xchg
adc
das
nop
shr
sub
xlat
fistpl
and
fcomp
mov
aaa
jae
xchg
xlat
mov
stc
cmp
movsb
push
push
adc
sti
lods
scas
mov
cmc
sbb
sbb
xor
or
xchg
or
shrl
sbb
jb
dec
lds
clc
pop
cld
adc
clc
pop
xchg
imul
mov
mov
and
pop
adc
call
cmp
inc
out
repnz
mov
jo
xchg
mov
scas
xchg
xor
add
or
ljmp
shl
aad
pop
xchg
add
mov
xor
imul
and
and
fs
sub
xor
stc
push
lea
cmp
ror
leave
ds
inc
xchg
pop
mov
rol
shlb
ja
lods
push
test
jge,pn
mov
aaa
ss
scas
xchg
dec
sbb
clc
cmp
pop
pop
and
xor
or
dec
sub
inc
repz
mov
push
cmp
shrl
push
mov
adc
imul
adc
adc
and
pop
andl
push
adc
cmp
mov
sub
stc
pusha
push
rcrb
mov
or
jp
cmp
sub
mov
xor
pop
je
mov
aad
lods
push
out
xchg
cmc
dec
shll
dec
scas
xchg
lea
add
mov
fdivrp
xchg
es
adc
sbb
movsl
mov
icebp
mov
push
hlt
stc
jle
int3
cmp
cwtl
idivl
icebp
shll
pop
xlat
cmp
das
pushf
mov
icebp
sub
fcomps
mov
sbb
imulb
enter
jl
mov
out
push
xchg
push
stc
repnz
jo
pop
xor
xchg
dec
fs
or
push
in
bound
daa
add
push
adc
imul
repz
mov
bound
cmc
pop
pop
lods
cmp
jmp
push
sub
pop
push
jno
mov
xchg
adc
sub
pop
aaa
mov
mov
mov
pop
and
push
cltd
pop
jge
aad
sbb
push
sub
mov
add
in
push
jns
xchg
rcrl
dec
push
ficomps
adc
pop
sti
fnstcw
jb
pop
push
mov
dec
mov
push
and
or
mov
and
bound
cmp
xchg
js
push
push
std
jmp
adc
dec
and
xor
cmpsl
xor
jno
mov
rcll
adc
lcall
icebp
mov
adc
cmp
cltd
push
cmp
jne
xchg
dec
xchg
sahf
push
add
cltd
das
xor
sti
jae
push
rcl
pop
xchg
mov
pop
jbe
cltd
cltd
test
xchg
xor
mov
adc
adc
fstpt
push
xchg
orl
ror
roll
ja
pop
push
pop
xchg
push
scas
repnz
push
aad
neg
call
add
sub
fstp
jl
pop
bound
inc
xchg
mov
adc
and
mov
pusha
inc
dec
mov
scas
stc
insb
in
jb
test
sbb
mov
pop
inc
and
scas
enter
mov
int
jp
inc
xchg
sub
xor
pop
push
push
sub
cmp
pop
or
aas
adc
stc
pop
mov
mov
cltd
dec
and
adc
fs
xlat
mov
xor
sbb
xor
push
pushf
mov
data16
jp
mov
pop
jne
pusha
sar
push
dec
mov
lea
popf
mov
or
jg
in
jmp
leave
fdiv
xor
sub
sub
xor
or
ja
cmp
jmp
lock
lcall
push
sbb
or
cwtl
dec
cli
divl
sbb
adc
es
mov
aam
shll
xor
pop
fnstcw
stc
jno
inc
and
adc
jae
or
sub
addr16
clc
push
sub
cltd
add
lret
pop
add
sbb
das
cltd
sti
std
inc
add
cmp
lods
or
idiv
hlt
lock
pop
push
cmpsb
fistps
div
pop
push
mov
sbb
jmp
adc
push
cmp
push
cs
repz
adc
mov
test
xor
nop
cld
mov
mov
cmp
cmp
xchg
jae
dec
push
fdivr
xor
cwtl
cmp
int3
push
fbld
pop
and
xchg
inc
pop
xchg
ret
push
xor
or
sar
shll
xchg
pop
xchg
enter
push
cmpsl
iret
test
or
adc
push
int
int3
mov
movsb
notl
mov
mov
stos
mov
xchg
arpl
mov
addr16
cvtps2pi
iret
test
testb
stc
sub
scas
lock
inc
or
push
adc
pop
pop
push
scas
ds
push
je
stos
lds
test
sbb
add
sub
adc
push
shll
pop
push
mov
andl
or
mov
flds
push
jp
or
mov
aad
scas
test
fcmovnbe
ds
or
repz
aad
fsts
mov
arpl
mov
adc
je
mov
fsts
mov
cmp
xchg
into
daa
push
and
pushf
aam
sbb
das
xchg
adcb
mov
scas
ja
xchg
addr16
sub
js
jb
sub
xor
sub
sbb
pop
xor
repz
add
shl
and
xor
cmp
xchg
in
mov
lods
or
fldpi
adc
out
cmp
xchg
push
push
cmp
sbb
xor
stos
movl
cmp
sub
jge
rclb
cmp
js
mov
pop
add
das
or
aad
pop
mov
icebp
dec
or
cmp
das
or
cmp
adc
mov
stos
inc
xchg
sbb
mov
inc
or
xchg
push
xlat
clc
jl
aaa
pop
sub
dec
jb
or
jp
mov
mov
pop
int3
xchg
fwait
mov
stc
push
pop
adc
xchg
xor
adc
push
nop
inc
jae
mov
xchg
mov
push
fidivrs
in
loope
icebp
arpl
mov
sbb
sbb
fisubrs
adcb
inc
roll
xlat
adc
js
mov
or
mov
mov
movsb
lods
xorl
bound
xor
dec
inc
mov
sbb
dec
jb
stos
adc
pop
add
aaa
adc
cmp
lret
aam
mov
call
mov
ret
pop
stc
mov
stos
sbb
and
leave
iret
out
pop
clc
push
sub
xchg
mov
aad
adc
push
sub
testl
pop
xchg
xchg
clc
push
fnsave
lock
inc
sahf
jbe
das
lret
pop
xchg
push
lods
out
jle
dec
cmp
jbe
into
incl
mov
stc
gs
jg
in
pop
jmp
cmp
pop
jns
adc
add
jmp
push
rcll
scas
notl
push
lods
mov
insl
adc
clc
mov
mov
jg
adc
push
fsts
or
lods
subl
lret
stc
mov
stos
mov
sbb
jo
sti
xor
aam
sbb
mov
push
push
sets
sarl
mov
nop
addb
pusha
xchg
or
push
sti
movsl
push
rorb
xchg
dec
mov
ret
sbb
dec
lret
stos
xorl
rorl
or
dec
adc
jnp
xor
ss
mov
testl
ret
jne
and
rcrb
sbb
stc
outsb
inc
lret
xchg
pop
mov
jb
adc
cwtl
adc
fisubl
je
lock
pushf
and
outsl
repz
adc
jecxz
sti
xlat
stc
aad
inc
sbb
and
pop
inc
int
icebp
out
stc
arpl
xchg
les
push
push
js
xor
xchg
sub
or
sbb
mov
shl
fcomps
jno
or
ja
cld
shll
sbb
add
scas
xchg
jecxz
out
mov
push
das
ret
adc
movsl
jge
jp
xlat
adc
pop
movsb
aas
fisubrl
mov
mov
and
cld
mov
jae
aaa
sub
mov
test
es
cmpsl
adc
push
test
lret
movsl
stos
shlb
sbb
add
mov
pop
aaa
mov
loope
push
mov
aaa
icebp
adc
int3
jp
xchg
inc
pop
rcr
rol
add
daa
ss
pop
repz
std
sub
icebp
inc
dec
or
sbb
push
push
push
loopne
bound
adc
cltd
clc
xchg
xchg
xor
or
clc
pop
inc
es
xchg
inc
mov
push
xlat
sbb
mov
inc
and
mov
aam
addr16
sbb
js
mov
movsb
xor
incb
adc
loope
outsl
ja
in
mov
call
xchg
repz
dec
nop
mov
nop
xchg
shll
xchg
mov
dec
jg
inc
pop
loop
xor
test
scas
sub
sub
cld
mov
scas
push
stos
hlt
dec
xchg
inc
add
clc
or
xor
inc
dec
jg
pop
or
pop
and
movsb
lret
mov
cs
mov
sub
jge
hlt
sub
mov
clc
inc
sbb
scas
cmp
mov
sbb
lahf
out
sti
sub
rcr
lahf
insl
imul
pop
stc
shll
cltd
mov
cltd
or
lods
repz
adc
and
mov
negb
xlat
adc
mov
mov
mov
in
popa
stos
mov
shrl
cmp
pop
push
das
aad
mov
stc
mov
pop
pushf
rcrl
add
push
mov
sub
push
sub
push
sbb
inc
xchg
data16
lahf
add
nop
xlat
stos
sbb
stos
add
jg
outsl
in
push
insb
imul
lret
sbb
lods
xor
pushl
nop
sbb
sbb
mov
lds
pop
mov
push
pop
add
pop
push
push
sub
int
dec
scas
mov
js
push
cld
jns
dec
inc
adc
int3
xchg
mov
xlat
push
adc
cmc
mov
and
jle
mov
mov
or
das
cltd
scas
cli
cld
or
testl
cmp
outsb
cwtl
aam
rcll
pop
dec
aam
and
jae
mov
lods
lock
scas
push
mov
mov
rcrb
cwtl
rclb
dec
cli
sarl
push
ljmp
mov
cmp
adc
test
inc
sub
out
mov
sbb
stos
add
in
adc
pop
icebp
sbb
adcb
inc
stos
scas
lods
shll
mov
call
insl
cmp
stos
push
sub
frstor
ss
xchg
lcall
mov
pop
add
cmp
jns
mov
adc
inc
or
aam
scas
adc
pop
aad
mov
daa
std
into
cmp
not
sub
xchg
clc
leave
lods
xchg
ja
xlat
inc
push
das
dec
shll
imul
push
mov
cwtl
xor
mov
inc
sbb
jg
xchg
mov
dec
lea
bound
jp
push
push
xor
xchg
sbb
cmpsl
insb
aad
sub
scas
and
ja
push
clc
mov
xor
pusha
inc
xchg
pop
mov
inc
mov
cmp
sub
aas
push
loopne
xchg
data16
loope
and
cmp
push
xor
cmp
and
xor
ror
inc
outsb
mov
cmp
xor
rorl
or
xlat
out
insl
gs
lock
sbb
push
das
dec
mov
adc
adc
sarl
xor
xchg
cwtl
push
iret
or
and
lret
mov
or
scas
sub
repz
push
pop
push
mov
xchg
adc
out
lret
xchg
pop
popa
jne
dec
fcom
das
or
cwtl
jbe
inc
cmp
cwtl
and
push
out
dec
and
jmp
xor
inc
or
lods
fiadds
mov
xchg
or
xchg
mov
mov
cltd
cmc
adc
pushf
notl
dec
xchg
cmp
stc
fcompl
adcb
cmpsl
notl
push
dec
cmp
bound
arpl
adc
jp
xor
insl
sbb
or
scas
fisubrl
or
mov
mov
xchg
fsts
imul
push
inc
push
push
push
test
cwtl
adc
jns
xchg
adc
mov
mov
repnz
rolb
sub
xchg
ret
inc
lock
push
sahf
mov
out
shrl
bound
rcll
push
lods
mov
ja
cmp
add
mov
cmp
lods
xchg
xor
xchg
out
lea
pop
cmp
pop
cmp
mov
mov
cmp
shll
pop
jp
testl
mov
subl
icebp
pop
mov
and
jmp
aam
dec
inc
mov
stos
mov
shlb
adc
popf
loopne
mov
cmpsb
jo
dec
sarl
sbb
out
lea
fs
dec
push
mov
cld
or
cmc
aam
cli
inc
pop
addr16
adc
sbb
aaa
jae
xchg
mov
jnp
lret
xlat
pop
cmc
roll
xor
rclb
cmp
pop
test
xor
xlat
sbb
adc
add
cmp
enter
mov
mov
mov
jae
xchg
popa
pop
enter
or
jp
pop
sub
std
pop
mov
mov
gs
inc
mov
ja
adc
cld
jae
mov
pop
push
dec
fbstp
test
sbb
test
loop
mov
roll
pop
enter
sbb
nop
arpl
push
inc
or
testl
and
bswap
cwtl
sbb
push
sbb
leave
stc
ja
adc
jmp
mov
scas
inc
and
fdivs
sbb
mov
scas
cmp
xor
or
test
scas
fstpl
int
test
test
adc
testl
bound
icebp
mov
sbb
xchg
jg
mov
jge
int
lock
ds
ss
or
out
cltd
jae
and
sub
ror
cltd
xor
mov
aaa
mov
cmpsb
dec
cmp
pop
lds
rcrb
hlt
les
xchg
leave
push
bound
jbe
int
out
pop
xorl
lock
sar
stos
mov
shrl
cmp
out
add
cmp
push
dec
mov
lock
mov
in
sbb
push
aad
jo
cmpsl
lret
xchg
fistpl
aam
and
push
adc
xchg
push
mov
lds
cwtl
cwtl
push
roll
mov
stos
out
icebp
cli
outsl
mov
and
xchg
and
xchg
xor
rorl
mov
or
test
sahf
cmc
or
sbb
mov
mov
cmp
daa
push
mov
cli
or
jo
fildll
push
hlt
ret
cmp
xchg
std
sbb
popa
mov
int
popa
mov
cwtl
popa
or
adc
mov
stos
test
shll
xor
in
mov
jns
ss
lea
and
int
jl
push
push
pop
push
xorb
fimuls
push
xor
hlt
mov
popa
lds
popa
or
mov
dec
stc
out
sbb
fisttpl
jbe
outsb
movzbl
pushf
outsl
xor
jmp
push
in
inc
jg
push
das
insb
shll
aas
xor
pop
sub
clc
xchg
xor
test
or
jp
xor
xchg
pop
and
movsl
xchg
lock
sahf
pop
aam
or
mov
pop
stos
and
and
imull
push
jg
xor
and
inc
addr16
xchg
outsb
and
xchg
bound
xor
lds
mov
stc
pop
hlt
push
xor
sbb
push
pop
mov
jb
xchg
xchg
mov
pop
stc
negl
and
push
jbe
loope
daa
jle
sti
fisubl
lahf
push
movsb
rcrb
cmpsl
adc
dec
leave
xchg
out
xor
dec
add
out
xlat
mov
or
xchg
mov
mov
and
xor
mov
and
dec
jbe
lods
inc
push
push
push
sbb
and
ss
cmpsb
push
push
sbb
nop
std
in
testl
out
pop
and
xor
stc
rcrb
in
in
mov
jge
mov
xor
lock
jmp
mov
sbb
mov
and
sub
pop
xor
in
push
gs
ja
inc
lods
ja
repnz
lea
inc
sbb
mov
and
xchg
pop
in
cmpsl
pop
cld
loopne
xor
push
add
aam
cs
shl
cmp
push
push
jne
mov
or
sbb
inc
loopne
xchg
shr
pop
cmp
bound
scas
lods
or
sbb
ja
cs
in
lret
pop
aad
loope
inc
insl
aam
push
inc
dec
pop
dec
repnz
aad
sti
pop
adc
inc
adc
push
inc
imul
dec
test
je
outsl
mov
push
dec
xchg
xchg
add
call
out
scas
gs
fists
cwtl
cltd
test
inc
pop
mov
sub
mov
orl
mov
clc
repz
ja
mov
or
adc
xor
mov
inc
mov
lea
push
int
push
xchg
cmp
jnp
mov
sbb
sub
stc
push
scas
xchg
stc
adc
cmc
test
out
nop
scas
daa
pop
or
scas
pop
data16
pop
mov
and
lods
jb
pop
inc
xor
sub
cmp
dec
lods
push
cld
rcr
mov
test
dec
jp
sbb
movsb
lock
push
adc
xchg
pop
in
mov
jmp
xor
pop
mov
jecxz
shrl
xchg
pop
xchg
pusha
mov
imul
pop
jno
in
inc
cmp
mov
jecxz
sub
cmp
pop
and
call
adc
loop
push
push
adc
pop
push
subb
shll
scas
adc
lock
andl
jne
add
sbb
jb
cld
mov
and
test
je
mov
stos
fistpll
cmpsl
fdivs
inc
mov
arpl
push
cs
mov
mov
fldcw
sub
repz
mov
push
dec
xchg
xchg
cmpsl
xchg
mov
mov
pop
mov
push
stc
fsubr
jecxz
jb
and
test
out
mov
outsb
cmp
clc
loop
ss
xor
push
sub
or
xor
test
mov
stc
lods
out
mov
mov
fwait
xchg
pop
push
shll
push
push
cmc
xchg
fs
cwtl
pop
mov
ror
sbb
xchg
lret
adc
pop
cmp
or
pop
and
stos
mov
movsl
sub
push
mov
rol
push
add
mov
insl
xchg
cmc
jno
xchg
pop
xor
stc
sub
adc
adc
outsb
push
stos
nop
int3
ja
fiaddl
out
test
xchg
scas
adc
push
loop
and
or
sub
nop
push
cmpsl
inc
das
cmp
adc
gs
pop
bound
ret
inc
dec
sbb
stos
pop
add
and
iret
mov
mov
lea
xor
sub
ss
push
xor
aad
scas
or
stc
mov
aaa
pop
xor
idivl
loopne
shlb
push
push
push
mov
aam
cs
mov
arpl
push
xor
cwtl
ret
rclb
add
dec
mov
fldcw
xor
adcl
ljmp
mov
or
loopne
mov
test
lahf
inc
mov
pop
mov
call
nop
xchg
mov
fadds
and
mov
notl
aam
dec
xchg
cs
lock
pop
cltd
pop
sbb
cld
pusha
lcall
or
mov
and
xor
fistps
sbb
jns
cli
sbb
xchg
das
pop
lods
sahf
insl
sbb
sub
ljmp
sub
mov
push
outsb
arpl
adc
daa
repnz
fcoms
cmp
pop
fstpt
packssdw
and
loope
mov
hlt
and
lcall
cmp
decb
mov
push
sbb
sbb
pop
adc
xor
in
dec
dec
adc
push
repz
scas
jl
rcl
scas
icebp
push
fistpl
xchg
shl
or
pop
je
stos
mov
aad
sub
mov
test
in
mov
clc
adc
pop
notl
inc
and
adc
fldenv
aad
fwait
xor
nop
cmc
sbb
pop
test
in
loop
push
push
stos
and
and
cli
xor
push
and
cmp
mov
mov
fistl
lods
ror
jae
sahf
je
bound
adc
shrw
jns
test
cs
pop
push
jmp
imull
fcoms
sub
jb
aam
bound
mov
add
mov
xor
pop
or
or
hlt
mov
push
repz
xchg
xor
out
repnz
not
je
int3
bound
xchg
shlb
mov
adc
pop
jb
push
scas
repnz
mov
push
aad
ja
dec
insb
jecxz
xor
pop
pop
add
jmp
or
sbb
xchg
xchg
jl
sbb
ja
cmp
push
adc
cmp
bound
mov
rcr
bound
cmpb
xchg
add
lods
cmp
pop
lret
pop
lahf
mov
push
sbb
push
sahf
or
adc
push
pop
fidivs
lds
fadds
sarl
jne
repz
inc
test
xor
out
push
aad
inc
movsl
std
sub
sbb
push
pop
movsb
mov
jno
ret
call
out
aas
adc
scas
gs
int3
enter
lods
or
scas
outsb
and
adcl
hlt
sbb
push
dec
cltd
int
stos
popa
cmp
cmc
xchg
sbb
add
jns
or
insb
repnz
xchg
aad
jmp
cltd
inc
sbb
xchg
xor
imul
push
dec
lods
push
bound
cwtl
push
sub
xlat
jo
inc
in
shlb
mov
add
push
cli
stc
mov
fcoms
ja
int3
test
in
xor
rcr
push
dec
clc
adc
jmp
sub
bound
adc
pusha
lock
sti
adc
test
pop
ja
das
mov
dec
mov
repz
mov
call
out
cmp
outsl
jg
mov
mov
hlt
sarb
loope
insl
loop
cld
or
xlat
sbb
and
addr16
pop
sub
mov
mov
push
loopne
shlb
push
cmp
push
aaa
push
pop
enter
jl
push
mov
fistl
xchg
std
test
add
mov
xchg
adc
bound
scas
cld
imul
add
mov
cwtl
mov
mov
fs
lea
int
mov
nop
mov
adc
std
lds
adc
push
loopne
call
adc
inc
dec
rorb
sets
fildl
ja
cmp
or
xor
stos
or
sarl
je
sub
leave
fisubrl
je
dec
stos
stc
jmp
pushf
mov
mov
xchg
lahf
out
cltd
bound
int3
and
loopne
mov
lahf
xor
mov
rcrb
push
or
inc
test
or
jmp
and
pop
rorl
aam
testl
xor
pop
in
clc
leave
mov
xchg
movsb
cwtl
xor
out
mov
inc
xchg
bound
aad
mov
aas
out
adc
pop
imul
mov
push
cmp
dec
xchg
mov
pop
jne
cwtl
stc
cs
movsb
stc
mov
adc
push
mov
mov
inc
xchg
leave
mov
cwtl
sbb
stos
sbb
pop
push
cmp
call
push
bound
sbb
fnstsw
pop
push
jl
jbe
fyl2x
adcl
sub
adc
std
xor
lods
pop
in
and
dec
xor
or
into
jbe
adc
out
lcall
dec
sarb
jle
leave
or
adc
jo
inc
xor
xor
jne
mov
fcoms
rolb
cs
testl
fwait
mov
push
aas
xchg
fstps
cmp
cmp
call
fs
mov
push
cmp
xchg
sub
test
int3
das
cmp
stc
adc
cltd
mov
scas
xchg
je
int3
mov
cmp
enter
sbb
int
lcall
push
and
int
leave
cwtl
mov
rcrl
lods
icebp
pop
pop
lods
mov
or
mov
roll
pop
xor
pop
lock
pop
mov
push
out
fimull
mov
cmc
xlat
dec
fistpll
adc
scas
lods
push
stos
lcall
shlb
cltd
rcrb
mov
cmp
xchg
mov
clc
jae
xchg
sub
je
push
push
and
fidivrl
fdivrl
jns
dec
mov
xor
dec
xchg
cwtl
adc
and
pop
push
and
sub
add
lods
cmp
in
xchg
sub
adc
ss
aas
fisubl
push
lock
pop
call
cmp
jb
cmp
dec
push
loope
mov
roll
sub
clc
lods
js
cs
stos
jle
icebp
mov
or
push
dec
int3
push
push
loop
or
mov
xor
xlat
shll
rcl
fstps
popa
pusha
xor
inc
enter
cltd
adc
adc
iret
fsubrl
mov
jg
xchg
stos
rcrb
adc
insb
sub
das
mov
inc
push
push
xor
jmp
cmpsb
int
mov
pop
pop
pop
pusha
test
ja
scas
incb
push
bound
and
xchg
pop
cmpsl
pop
pop
xor
xor
sbb
lahf
insl
sbb
inc
rcl
inc
clc
or
adc
dec
pop
push
sbb
adc
xchg
dec
imul
das
and
shll
push
imul
push
sarb
mov
jl
mov
sub
jbe
adc
es
mov
jbe
adc
sbb
cmpsb
xchg
stc
add
jno
dec
loopne
push
movsb
mov
sahf
fs
jp
adc
mov
mov
sub
in
pop
sub
cmc
push
scas
ret
cmp
lret
das
repz
inc
push
rcll
cwtl
xchg
and
cmp
jnp
xchg
cmpsl
fcompl
and
pushf
push
arpl
and
pop
inc
bound
adc
mov
das
dec
cmc
cmpb
mov
lods
mov
mul
out
test
dec
pop
pop
je
xor
xor
ds
push
aam
sbb
push
add
daa
xchg
push
aam
nop
stc
mov
mov
mov
ret
sbb
and
mov
add
outsb
cwtl
aaa
divl
enter
xchg
aas
aaa
mov
lds
mov
leave
mov
or
cmp
scas
addr16
ds
xchg
mov
or
clc
xor
push
jmp
cli
fnsave
pop
jne
push
push
xor
popf
jae
cs
divb
jp
ja
stos
pop
icebp
jne
mov
enter
pop
push
add
pop
sub
pop
pop
pop
fldcw
mov
mov
sub
cmpsb
push
and
sbb
int
lods
imul
movsb
xchg
xor
adc
lahf
add
pop
jbe
cltd
gs
xor
push
or
repnz
shlb
data16
or
mov
sub
sbb
adc
xchg
pop
ds
imul
fwait
cs
je
add
clc
mov
scas
jecxz
sbb
pop
test
aam
xor
bound
or
jge
out
mov
mov
cmp
adc
cmp
xchg
ret
les
arpl
cmp
aad
jp
scas
stos
popa
and
inc
popf
ja
loop
clc
shrd
and
sahf
jge
mov
push
adc
mov
mov
cmp
ret
clc
sbbb
bound
cwtl
fimull
xor
mov
xor
insb
gs
push
sub
das
sbb
js
push
popf
xorb
xchg
or
jo
jns
pop
xor
adc
or
cltd
xchg
inc
lock
jno
add
bound
jne
fdivs
mov
cmp
fsubrs
or
mov
out
cwtl
adc
pop
aad
lods
or
pop
clc
pop
loope
mov
es
push
adc
mov
adc
pop
pusha
xor
push
lds
sahf
cwtl
sub
mulb
std
jg
xlat
enter
jb
mov
inc
stc
out
inc
xor
in
ss
lahf
xchg
adc
jb
xor
cmp
bound
or
sub
xor
adc
jecxz
and
pop
loopne
cmp
cmp
mov
jb
sub
test
mov
mov
xchg
and
push
aad
repz
loopne
cmpsl
aaa
hlt
jmp
push
pop
imul
cwtl
adc
dec
in
adc
cwtl
clc
shll
fldcw
stos
jns
aad
push
shll
xchg
in
xor
adc
or
adc
ficoml
call
cltd
xor
push
or
push
pop
sti
push
mov
hlt
das
push
sbb
imul
push
outsb
rorl
dec
mov
and
int3
cmc
add
mov
mov
stc
push
subb
push
mov
jae
add
fmuls
jecxz
or
rcll
xchg
jb
sub
or
repz
add
out
or
in
push
clc
xor
xorl
xchg
sub
push
pop
iret
and
jg
inc
insl
xchg
ja
mov
adc
pop
pusha
adc
mov
xchg
xchg
insl
xor
adc
ret
popf
jns
sbb
sub
dec
sbb
aad
and
dec
cmc
inc
mov
bound
cmp
xchg
inc
cwtl
adc
inc
jns
fsubs
jl
adc
jb
cmp
outsb
xor
pop
push
mov
aaa
addr16
or
rclb
jbe
jg
js
mov
jne
icebp
ds
jno
or
neg
xchg
ds
mov
je
es
mov
xorl
pop
fdiv
ret
data16
adc
jo
mov
ud0
sti
leave
rolb
mov
clc
sbb
xchg
fldcw
loop
push
scas
scas
hlt
sbb
lds
xor
jns
pop
pop
aam
push
lret
arpl
fwait
sbb
leave
push
inc
movb
push
mov
push
xchg
aad
sbb
cmp
dec
ret
in
pop
std
insb
pop
ret
out
push
lods
and
pop
adc
sub
std
inc
cwtl
xchg
fs
sub
push
fsubrs
jbe
clc
push
pop
sbb
mov
ja
mov
push
pop
mov
cwtl
sbb
and
xchg
xor
sbbb
xchg
andl
cwtl
push
adc
je
push
negb
xchg
and
add
xlat
push
mov
aam
js
push
lods
mov
repz
jmp
lds
sub
cwtl
std
push
cmp
inc
rcrl
inc
sbb
in
je
inc
loope
notb
pop
inc
out
mov
repz
clc
add
dec
dec
sbb
inc
xor
mov
fdiv
ja
push
repnz
cs
inc
sub
fstpt
das
pop
mov
inc
andb
aam
aad
mov
mov
stc
aaa
jns
mov
or
shll
dec
mov
push
mov
xlat
push
jbe
negl
fcomps
daa
add
mov
push
int3
mov
mov
mov
mov
and
jns
xchg
sbb
clc
mov
push
sbb
test
and
int
lock
cmc
popf
in
test
lret
add
adc
popf
lods
push
lock
sub
pop
icebp
push
xchg
mov
imull
adc
aam
mov
das
mulb
fs
or
aas
push
push
cli
loop
dec
or
fcomps
sbb
lret
cmpsb
sbb
add
fidivs
push
fists
fcmovnb
jnp
cltd
cmp
outsl
mov
push
cld
sti
mov
or
sbb
ror
bound
cmc
mov
cs
repz
idivl
push
lock
jbe
adc
xor
adc
clc
mov
push
rorb
iret
jno
cmc
lds
mov
cwtl
push
call
dec
add
jp
fmuls
and
adc
call
scas
loope
inc
ds
add
sub
sbb
pop
and
cmp
lret
stc
in
mov
dec
jp
cmp
dec
stos
punpcklwd
insl
test
push
inc
xor
push
mov
pop
xchg
inc
bound
sub
ret
stos
pop
xlat
push
lods
popa
mov
out
and
xchg
hlt
xlat
stos
push
pop
sarl
xor
pop
aam
imul
cmpsb
es
lock
push
imul
push
fdivs
js
fsts
aad
xor
das
scas
xchg
imul
fdivr
clc
test
in
jp
shl
mov
xor
aad
mov
add
xchg
clc
and
inc
ljmp
xorb
fwait
and
js
or
pop
scas
jmp
mov
sub
fiaddl
dec
imul
scas
pop
inc
mov
aas
jbe
pop
int
fdivs
pop
repz
stos
into
fs
nop
pop
mov
push
adc
sbb
jb
imul
adc
in
inc
cltd
subb
or
and
jb
push
rcr
xchg
fdivs
adc
push
ret
leave
xchg
sbb
or
jns
in
mov
stc
out
inc
rorl
xchg
sub
cmp
sbb
sub
xchg
cmp
fwait
mov
fldenv
xchg
rorb
mov
int
dec
push
xor
xchg
lahf
mov
ja
ja
adc
loopne
jns
hlt
orb
xchg
push
sarl
mov
movsb
fwait
jb
pop
cmpb
pushf
popf
xor
jns
push
sbb
test
repz
lods
mov
push
ja
pop
daa
xor
mov
fistps
sbb
dec
cltd
mov
and
pop
mov
mov
mov
sbb
je
pop
push
adc
inc
scas
cwtl
mov
rcll
or
and
add
mov
xor
push
pop
sub
lds
push
lock
fldcw
test
push
push
and
sub
cmpsl
sbb
sub
cmp
xchg
adc
sub
rclb
push
bound
jecxz
add
push
adc
lock
push
movsl
icebp
jge
pop
pop
mov
jne
or
mov
cmp
adc
lock
xchg
inc
xchg
inc
aaa
insl
out
scas
aam
mov
or
and
dec
sarl
dec
ds
push
sti
mov
sub
shlb
push
orb
cs
mov
stc
dec
mov
push
xor
push
inc
fstpl
pop
scas
aam
lock
push
bound
xor
outsl
in
adc
xchg
insl
mov
xor
lret
pop
adc
mov
cmpsl
xor
xchg
fptan
sbb
pop
and
add
sub
jge
lahf
sbb
adc
mov
sbb
arpl
xor
cmp
dec
rcrl
sarl
insb
pop
xchg
sti
sub
and
stos
lahf
rorl
inc
or
mov
in
cwtl
mov
ljmp
pop
mov
jae
imul
stc
arpl
outsb
jmp
aad
lods
das
popaw
fstps
cmpsl
bound
jp
mov
inc
xchg
int3
andl
pop
fistpll
pop
cmp
scas
popf
sbb
xchg
xor
scas
push
outsb
or
adcl
mov
cltd
daa
mov
aad
icebp
push
rcr
adc
inc
add
bound
cmp
stos
push
and
adc
sbb
fistl
daa
or
idivb
lea
cltd
stos
adc
into
mov
push
stc
popa
xor
cmp
add
inc
xor
adc
mov
int
mov
jb
pop
das
rorb
leave
subl
xor
dec
and
push
scas
mov
popl
cs
subb
rcr
inc
cmp
lret
cmp
mov
ss
jecxz
xor
jmp
data16
aas
pop
xor
xchg
aad
adc
jae
or
fs
push
jmp
push
pop
add
cmp
stos
inc
adc
je
gs
xor
fcomps
call
xchg
mov
mov
lods
loope
add
scas
fistpll
sti
fcom
adc
fsubrs
call
push
or
dec
cmpsl
shrb
push
xlat
pop
scas
jo
mov
cmc
inc
icebp
xchg
xor
pop
shll
mov
jae
jg
adc
aam
mov
sbb
loop
or
in
pusha
ret
test
clc
fists
xchg
inc
add
sbb
sub
pop
scas
int
cltd
mov
gs
out
ret
mov
sub
xchg
popa
push
popf
inc
mov
mov
icebp
xchg
push
orl
fwait
mov
push
mov
push
adc
pop
or
xor
pop
inc
adc
imul
sbb
xchg
push
outsl
jb
push
inc
sbb
cmc
mov
jns
fwait
rcrb
ss
xor
adc
mov
or
pop
xchg
or
push
cmp
shll
push
adc
push
mov
fsubrs
lcall
incb
add
inc
pop
sbb
mov
ret
add
pop
sbb
lcall
sahf
stc
pop
jns
aas
pushl
sbb
add
call
scas
xchg
fs
jg
sub
jb
sbb
xchg
jno
mov
stos
or
xchg
addr16
xchg
pop
je
into
cmp
push
pop
push
adc
shrl
adc
sbb
mov
mov
or
push
inc
or
jecxz
adc
mov
icebp
inc
movsb
pop
mov
or
jp
add
fdivrs
js
push
sbb
xor
sarb
and
inc
fsts
cltd
call
xor
sub
iret
jno
sahf
pop
outsl
mov
xchg
cmp
jae
xor
fstps
mov
shrb
push
xchg
scas
xor
and
aaa
fnstcw
dec
xor
mov
sub
ljmp
mov
hlt
ljmp
xchg
sbb
roll
loope
jp
sbb
adc
or
lods
pop
adc
hlt
outsb
cli
sub
inc
adcb
sub
mov
dec
imul
cltd
ds
imul
mov
dec
lods
cmc
shll
inc
movsb
lret
repnz
lock
dec
sbb
pop
mov
cmp
out
or
mov
dec
clc
xchg
pop
data16
ja
lret
and
rcrl
fidivs
or
adc
and
mov
clc
mov
mov
xlat
sbb
pop
call
sbb
pop
or
xor
xor
shr
not
dec
lea
add
jle
dec
cmpsb
xchg
stc
push
pop
cmp
sbb
mov
mov
dec
push
ror
lret
push
sbb
test
push
inc
cwtl
xor
loope
sti
add
sub
adc
pop
pop
push
sub
or
ficomps
cmp
ljmp
xchg
push
gs
jbe
call
leave
nop
mov
sub
mov
cmp
sub
jae
lock
sub
outsb
gs
cmp
push
mov
bsf
lock
sbb
in
xor
inc
xor
insl
cwtl
adc
xchg
test
sbb
jmp
dec
fwait
xchg
inc
dec
scas
xor
les
insl
and
cs
or
shr
movsb
push
add
outsl
mov
or
dec
out
jbe
loope
xor
push
popa
mov
divl
dec
stos
xor
push
sarb
mov
aas
icebp
aam
mov
fwait
mov
out
outsb
or
cwtl
aam
in
add
cli
push
push
pop
or
push
pop
arpl
in
cmc
or
fcoml
ljmp
or
mov
mov
cs
dec
sar
adc
push
mov
aas
incl
shll
dec
bound
sbb
scas
stos
cmp
notb
ret
sbb
cmp
loope
jae
and
aad
subb
mov
pop
push
es
dec
or
add
add
xor
cmp
stc
cs
push
pop
add
movsl
repnz
pop
push
stos
into
rcrl
das
xchg
mov
dec
pop
adc
rcll
xchg
and
icebp
push
ja
pusha
add
pop
mov
mov
mov
xchg
inc
cmp
pop
mov
xor
xor
test
or
mov
fbld
orl
out
lods
clc
pop
sbb
and
cmp
rcll
cld
insb
xor
pop
sub
sub
adc
outsl
pop
sub
push
shlb
popf
xor
mov
dec
xchg
pop
adc
mov
mov
jle
out
repz
pop
pop
cmc
and
xor
xor
pop
mov
in
xchg
repz
cld
cmp
popa
xchg
std
inc
shlb
adc
xor
add
scas
mov
cmpsb
pop
sbb
or
cmp
lock
cwtl
mul
hlt
fsts
bound
inc
adc
jle
fs
adc
popf
add
iret
lcall
rcrl
out
mov
das
out
cwtl
clc
and
lea
pop
xchg
mov
inc
or
dec
or
cmc
pop
cltd
sub
add
inc
add
pop
xchg
js
insb
xorb
int
push
xchg
subps
stos
sub
pushf
push
rol
leave
rcll
xchg
into
aam
push
lret
jb
mov
mov
xor
std
leave
mov
mov
cltd
lret
shrl
push
scas
gs
test
add
pop
jp
xor
dec
js
stos
push
and
pop
dec
inc
cwtl
repnz
dec
pop
shll
lods
push
xchg
lods
dec
icebp
shl
xor
or
imulb
xchg
cmp
and
loopne
adc
mov
inc
mov
test
jns
shll
lods
mov
addr16
mov
icebp
aaa
hlt
xor
cmp
cmc
sbb
jae
shl
popa
xchg
fcomps
mov
jmp
enter
jbe
imul
cwtl
sbb
xchg
dec
jo
call
scas
jl
pop
jns
push
ds
sbb
enter
push
lahf
mov
std
jle
mov
push
testl
dec
in
sbb
aad
fmul
insb
push
mov
mov
or
inc
xchg
mov
xor
xor
pop
xchg
and
jp
mov
cmpsb
stos
push
cwtl
add
xchg
push
push
repz
fsub
push
popl
push
pop
xchg
cli
sbb
pop
jns
mov
pushl
scas
aad
popf
sub
mov
pop
hlt
iret
mov
xchg
fstl
push
pop
mov
into
mov
in
adc
push
and
push
negl
adc
shrb
dec
mov
cld
mov
xchg
pushf
ret
bound
rcl
out
sub
int
cmp
mov
std
mov
imul
gs
shlb
ret
jne
add
sub
mov
or
cwtl
push
aam
xchg
ror
mov
sub
test
pop
adc
sub
aas
sbb
xor
pop
clc
adc
mov
fs
or
lahf
xchg
mov
aam
xchg
pop
add
ret
shlb
dec
cmp
mov
sub
imul
sbb
add
aad
adc
fbld
cwtl
adc
cmp
sahf
imul
aam
lret
or
lods
cwtl
mov
aam
dec
and
xchg
xchg
xchg
cmc
fisttpll
fcoms
mov
sbb
scas
mov
adc
jae
xchg
and
xor
fmul
mov
xchg
push
gs
sbb
imul
nop
dec
aaa
sbb
jne
pushl
loopne
lahf
jo
adc
cwtl
push
and
scas
fidivrs
clc
sbb
xchg
mov
mov
lcall
xor
dec
scas
cwtl
test
adc
pusha
jns
or
xchg
cmp
dec
xchg
in
xchg
and
adc
push
mov
adc
shl
lods
dec
xor
in
dec
pusha
xchg
xlat
pop
stos
or
fsub
das
jge
xchg
jnp
cwtl
xor
loopne
into
aam
loope
lods
test
lret
push
adc
pop
adc
aas
pop
lahf
sub
hlt
stc
mov
mov
adc
mov
cld
push
fdiv
xor
shrl
adc
pop
fsts
stos
sbb
testb
and
jmp
xor
mov
jns
push
and
js
lods
adc
mov
bound
inc
ret
add
cwtl
pop
ds
notb
xchg
mov
sar
jmp
in
and
inc
stos
xchg
mov
dec
arpl
or
sbb
adc
add
dec
mov
cmp
test
or
mov
int
cltd
or
mov
xor
push
sub
lock
daa
andl
push
aam
mov
adc
or
lret
pop
repz
and
sbb
add
or
stos
cmp
or
adc
rcll
push
sub
in
jg
pop
mov
or
pop
adc
scas
mov
insl
outsb
rclb
push
xchg
push
pushl
inc
shrl
ljmp
in
mov
cwtl
xchg
and
inc
aam
scas
jl
loopne
outsb
out
xor
mov
mov
repz
sahf
xlat
lods
pop
sbb
xorl
enter
out
mov
mov
sti
in
nop
xor
xor
dec
push
xor
pop
jl
push
push
lds
cwtl
jb
or
or
mov
mov
es
cmp
jae
sub
nop
sbb
cmp
xchg
ret
or
call
inc
and
lock
pop
clc
push
cmp
pop
pop
inc
stc
aad
or
jp
push
push
out
test
fidivs
cmc
xor
adc
imul
sbb
sti
mov
sahf
imul
cmc
push
leave
leave
push
int3
popa
mov
stc
xchg
mov
inc
sbb
mov
pop
pushf
test
jmp
or
pushf
mov
shrb
js
int
sub
cmp
dec
test
lods
mov
fldenv
push
xor
movl
je
mov
pmaddwd
push
out
push
adc
xchg
or
push
flds
stc
xchg
push
test
push
mov
cli
push
notl
or
xorl
test
jp
sahf
push
out
mov
cmp
repz
dec
stos
mov
test
cltd
mov
mov
jae
lret
repnz
adc
addr16
add
gs
mov
mov
sbb
sti
sub
mov
repnz
popa
xchg
adc
notl
repz
fcompl
mov
inc
mov
ret
js
aad
pop
aad
mov
jb
pop
adc
adc
sbb
addl
sub
pop
popa
mov
inc
cmp
adc
shl
int3
mov
cmp
mov
cld
jne
insl
push
cmc
push
push
popf
or
jecxz
sub
jae
cs
ja
pop
push
stos
je
addr16
xchg
fldenv
das
stc
sbb
fadds
xor
adc
data16
dec
adc
in
and
mov
jecxz
lea
cmp
data16
push
adc
flds
scas
pop
mov
cwtl
lods
dec
enter
push
jno
push
sbb
hlt
sbb
rclb
jae
cmp
mov
mov
cwtl
mov
mov
lret
mov
mov
ret
xchg
jne
insb
pop
ja
or
loope
inc
jns
repz
lods
mov
or
or
rclb
push
push
xchg
mov
scas
lods
sbb
pop
rclb
js
adc
nop
cmp
clc
jmp
lea
sbb
xor
int
sub
push
mov
lret
aam
out
dec
ja
adc
or
in
cmp
ficoml
insb
and
testl
neg
push
fnsave
fbld
ret
xchg
cltd
lret
mov
jl
xor
loope
lcall
std
ficoms
dec
sahf
pop
push
mov
das
push
leave
into
pop
cltd
enter
ja
xlat
mov
cmp
lods
cwtl
loopne
leave
int
add
xlat
add
push
mov
out
mov
daa
and
jb
sbb
mov
xchg
stos
inc
cmp
and
pushl
sbb
xor
dec
dec
xlat
lret
das
xchg
loopne
test
add
mov
push
in
aad
sub
arpl
lock
inc
lcall
push
adc
jnp
fstl
and
sub
hlt
or
les
andb
das
xchg
out
int3
addr16
cmp
addl
xchg
inc
jne
xchg
sbbb
pop
pop
cld
stos
lea
xchg
sub
xchg
imul
jl
in
xchg
or
jbe
pop
test
cmp
xor
mov
ds
xchg
pop
aam
das
call
dec
lret
xchg
sub
lret
in
xor
sbb
out
lahf
sub
push
push
lock
dec
adc
push
data16
jb
rorl
insl
out
jb
push
stos
mov
vunpcklps
cs
stc
adc
jo
aad
sub
push
add
xchg
pop
xchg
aad
and
add
cmp
insl
xchg
inc
or
mov
leave
mov
sbb
sbb
or
and
pop
adc
fldenv
pop
mulps
xchg
sbb
add
lret
add
xchg
lahf
adc
xchg
adc
pop
in
bound
cmp
mov
lock
and
icebp
leave
jo
insl
fcoms
and
iret
ret
clc
xlat
cltd
adc
cltd
dec
inc
cmp
cs
mov
jp
lret
popa
repnz
cmc
sbb
add
cmc
insb
loope
fimuls
pop
sub
scas
mov
rolb
hlt
adc
mov
clc
imul
pop
scas
and
inc
xor
bound
cmp
sub
sarl
adc
sbb
mov
or
mov
push
shll
jnp
add
and
fbld
stc
or
pop
sbb
xchg
pop
stos
push
mov
adc
xor
xor
cltd
mov
or
jmp
adc
push
jne
add
pop
ja,pt
leave
scas
or
insw
mov
data16
dec
cmp
adc
xchg
stc
sub
test
mov
push
addr16
scas
dec
adcl
out
xor
jne
rcl
adc
sarl
imul
repz
movsb
mov
fdivrl
ret
push
lods
das
repnz
sbb
xchg
orb
xchg
pop
cmp
push
dec
fdivs
cmp
pop
popf
xchg
or
pop
xor
cmp
jo
cwtl
clc
adc
and
sbb
insb
sub
test
adcl
pop
xchg
sub
arpl
mov
adc
mov
ds
adc
fdivrs
mov
loopne
xchg
pushf
pop
lahf
push
popa
mov
sbb
sbb
sub
in
push
mov
jae
xor
cwtl
push
testl
repz
xchg
test
cmp
shl
testl
ja
push
daa
stos
cmp
jg
cli
push
aad
push
inc
je
notb
lahf
hlt
pop
pop
lret
ljmp
cli
lret
cs
cmpsb
xor
cmp
push
and
inc
stc
push
add
cs
sub
dec
scas
pushf
loope
mov
call
popa
mov
jae
adc
movsl
push
cmp
shrb
inc
inc
ja
movsl
icebp
cmc
pop
pop
insl
loopne
mov
ds
sbb
jns
pop
gs
cmp
mov
aaa
jbe
scas
push
jb
addl
jo
xor
adc
push
xchg
js
and
push
aad
and
xor
mov
jno
lcall
rcl
sbb
ja
xor
jp
lret
inc
ds
mov
adc
cwtl
push
fs
fldt
lret
mov
data16
push
adc
push
pop
xchg
hlt
mov
clc
subb
lret
jns
push
pop
imul
jno
cwtl
cmc
stos
cmp
flds
sbb
pop
pushf
rcrl
insl
mov
fisttpl
imul
pop
aas
sbb
popa
sbb
nopl
in
jge
aam
pop
fcoml
push
testl
xor
mov
or
pop
push
xlat
pop
scas
mov
mov
push
push
cmpsl
in
lods
insb
xor
xor
enter
adc
in
ret
sbb
push
push
decl
ljmp
cmpsb
xor
sub
xor
sbb
push
bound
inc
add
movsb
rcll
out
sbb
xor
sub
mov
addr16
movsl
cmp
insl
repnz
mov
and
pop
fnsave
pop
in
push
gs
rolb
adc
pop
jae
int3
je
xchg
xor
cmp
jmp
xchg
xor
cmp
rolb
insb
or
xchg
xchg
or
pop
sahf
ficompl
test
pop
dec
push
push
cwtl
and
rclb
fadd
push
nop
testb
sti
xchg
stc
ja
cmpsl
xor
push
xchg
roll
loopne
loop
add
or
sbb
sbb
int
jno
jnp
sbb
scas
ds
cmp
xor
adcb
imul
loopne,pt
cmp
cld
icebp
sbb
mov
es
cmpsl
jnp
pop
xor
cmp
data16
pop
sbb
add
bound
mov
into
and
out
sub
ds
cmp
inc
scas
mov
gs
out
mov
mov
and
js
mov
stos
add
pop
shrl
jp
sbb
mov
idivl
dec
adc
sbb
iret
or
mov
sbb
in
pusha
sub
pop
fistpl
xchg
icebp
xchg
cli
mov
je
int3
jnp
xchg
adc
repz
pushl
inc
adc
bound
xchg
ja
outsl
add
ss
mov
popa
shll
mov
xchg
rcl
loop
loop
icebp
cltd
xor
xchg
adc
sub
and
xchg
xor
adc
scas
into
mov
adc
inc
imul
gs
mov
mov
ret
jns
loopne
xchg
es
xchg
std
pop
mov
icebp
dec
shr
ret
je
push
sbb
cmp
movsl
inc
outsl
cwtl
je
vmovaps
nop
test
push
jmp
push
bound
sahf
loop
cwtl
adc
movsl
pop
lea
jg
adc
sbb
cs
int3
int
jno
lahf
pop
imul
clc
lods
xchg
push
cmp
push
dec
out
aas
jbe
mulb
push
movsl
cwtl
mov
pop
or
loopne
push
shrb
jnp
fildll
test
pusha
dec
cmp
stc
ds
pop
xchg
xor
adc
loopne
jb
jns
push
ss
xchg
jecxz
inc
jp
xor
xchg
imul
cmc
mov
lcall
sbb
jns
cli
inc
mov
lret
cwtl
or
int
stc
push
mov
push
sbb
sarb
push
scas
mov
daa
inc
js
lods
adc
fcmovnu
lcall
les
clc
loop
push
dec
fmul
xor
cwtl
insl
cmp
push
sbb
divb
inc
scas
push
lods
roll
std
rcrl
xchg
outsb
pop
pop
pop
imull
dec
xchg
jae
jns
sub
sub
in
push
dec
adc
sbb
push
push
mov
mov
adc
push
lcall
jb
loopne
mov
out
stc
mov
push
cmc
xor
test
push
jmp
sbb
repnz
xor
push
stc
xlat
dec
daa
lahf
movsb
lret
push
lock
data16
push
and
inc
imul
adc
or
int
xlat
push
adcb
add
pop
ss
and
lods
mov
xchg
imul
pop
repz
dec
push
add
sub
jbe
xchg
xchg
cli
sub
icebp
pushw
popf
mov
jns
or
aad
scas
icebp
dec
popf
push
loop
push
mov
and
xchg
sbb
mov
sub
inc
adc
stos
and
hlt
xor
or
xchg
jmp
cwtl
test
cltd
push
adc
xchg
sbb
xor
cmp
out
bound
add
lret
sbb
cmp
and
cmp
repnz
push
cmpsl
ret
add
add
xchg
xor
leave
xchg
sub
or
dec
mov
mov
mov
mov
inc
daa
adc
imull
sbb
aam
aad
das
or
mov
adcl
xchg
xchg
and
pop
push
lcall
lea
cltd
lods
jno
cli
mov
sbb
nop
cmp
mov
pop
xchg
push
inc
sub
enter
icebp
rcrl
push
out
fwait
stos
sbb
lods
arpl
stc
lahf
jge
adc
sbb
push
dec
test
in
adc
iret
xchg
addb
pop
xchg
dec
push
push
dec
scas
jns
or
loopne
push
xlat
loopne
mov
mov
cli
and
rcl
sbb
xchg
popf
or
push
sbb
cmpl
lret
lret
pop
stc
mov
fbld
push
mov
mov
ret
xor
leave
adc
pop
sub
test
xchg
out
scas
push
mov
outsl
rcll
scas
or
loope
hlt
xchg
aas
testl
cltd
stc
pop
flds
ja
nop
cmp
cld
ret
cltd
xor
dec
sbb
stc
xchg
jp
cmp
orb
sub
push
scas
stc
fsts
imul
cmpsl
insl
jns
popa
pop
leave
repnz
cmp
cmpl
scas
insl
shrl
pop
notl
dec
mov
cmpsl
adc
jb
jne
in
sti
push
jbe
pop
mov
mov
push
pushf
xchg
push
dec
test
ja
out
pop
popf
dec
xchg
add
fdivp
mov
aam
fst
test
inc
cmp
cmp
xlat
inc
icebp
jne
out
ljmp
fistl
pop
push
lods
sbbl
pop
mov
jnp
fdiv
xchg
lock
mov
jb
ror
arpl
roll
icebp
in
and
testb
shll
push
cmp
or
mov
shl
xor
lret
mov
stos
mov
repnz
sbb
pop
iret
dec
jle
in
or
scas
add
js
mov
push
xor
add
bound
repnz
mov
es
xchg
xchg
adc
add
cltd
push
imul
popa
and
idivl
and
xor
push
xchg
adc
fldt
cltd
test
lret
mov
scas
test
cltd
pop
xlat
cmp
mov
or
mov
pop
inc
cmpsl
div
mov
out
add
pop
stc
imul
or
or
dec
sbb
cmc
mov
pop
sub
adc
test
adc
fists
mov
and
and
imul
sbb
sti
dec
imul
or
xor
or
jo
enter
and
addr16
into
sbb
popa
rclb
adc
dec
xchg
inc
mov
and
push
add
push
js
inc
sub
mov
pop
cltd
mov
sub
aam
clc
lods
fsubs
pop
xchg
repnz
inc
mov
fldenv
add
enter
stc
fildl
mov
stos
shlb
mov
cwtl
pop
pop
call
lods
pop
notl
fcomp
fldcw
mov
xor
out
push
lods
xor
fcoms
je
cmp
push
xchg
add
mov
mov
mov
pop
fcomip
jns
adc
and
cmp
sub
or
shr
notl
mov
jmp
out
fld
push
push
bound
arpl
mull
push
sub
pop
testl
jl
lds
pop
pop
push
mov
out
mov
pop
inc
mov
adc
jnp
fadds
mov
outsl
or
daa
out
or
cmp
pop
jb
add
adc
mov
pushf
aam
cs
xchg
sbb
nop
orl
pop
jmp
dec
cmc
cwtl
popf
out
mov
xor
icebp
sti
or
icebp
inc
pop
jo
mov
xor
push
pop
sbb
cmpsl
xor
cmc
test
sti
lock
mov
mov
loopne
repz
xchg
or
sub
push
pop
fisubs
cmp
repnz
and
and
sbb
push
inc
mov
stc
xor
xchg
xor
mov
adc
stos
insb
add
into
mov
lods
mov
mov
inc
fdivrs
call
dec
stos
and
gs
pop
ret
test
mov
fwait
mov
sbb
or
in
adc
cmpsl
and
xor
imul
popa
push
mov
lret
scas
notl
icebp
in
inc
loopne
xchg
sbb
sahf
aaa
divl
aam
dec
or
sbb
sti
call
add
nop
into
xchg
loope
xor
sub
mov
mov
jns
aad
dec
inc
push
mov
jb
sbb
cmc
jnp
and
clc
loop
pop
adc
push
cld
pop
xor
enter
ljmp
sbb
jle
dec
and
hlt
inc
je
mov
or
aaa
gs
jae
pop
stos
insb
aas
push
sbb
cltd
dec
mov
rorl
sub
cmp
shll
pop
push
inc
scas
cs
dec
jmp
sbb
mov
cld
xchg
shll
xorb
push
jb
shr
pop
cmp
test
mov
popa
test
cs
pusha
arpl
div
push
pop
adc
decl
sbb
xchg
mov
inc
ja
mov
or
dec
xchg
dec
sbb
push
pop
adc
lods
sbb
pop
xchg
sbb
testb
xchg
sarb
in
inc
sbb
lods
and
rorl
aad
lahf
push
jae
scas
dec
cmpsb
sbb
sbb
in
jno
or
sub
ss
or
lods
imul
dec
clc
and
mov
stc
adc
cmp
bound
dec
rolb
sti
jmp
and
sbb
xchg
loopne
jae
mov
test
out
aaa
pop
outsb
insl
aaa
bnd
lcall
es
shrl
inc
shlb
xchg
xchg
inc
rclb
fucom
js
jns
sbbl
dec
shrl
xor
loopne
in
xor
mov
fstps
insb
aam
adc
cs
xchg
rcr
cwtl
fnsave
in
data16
lods
mov
aam
scas
stos
stc
movsl
pop
xchg
rclb
mov
fisubl
push
insb
jbe
adc
outsb
lret
movsb
xchg
rcrl
sub
jae
bound
xchg
cmp
jb
loop
ret
mov
popa
in
cwtl
adc
out
int
iret
shll
idivb
cmp
loope
mov
push
mov
sbb
mov
js
or
inc
cmpsl
aaa
leave
add
mov
and
aam
gs
or
mov
jae
inc
stos
ret
mov
adc
int3
mov
jno
into
or
push
mov
mov
test
pop
sbb
or
jno
mov
pop
fldenv
stc
sbb
notl
stos
cmpsb
add
push
push
repz
push
dec
and
pop
mov
fsubl
sahf
inc
cmpsl
dec
mov
jp
adc
fwait
mov
push
push
iret
outsl
bnd
xchg
mov
std
pop
inc
push
clc
adc
mov
aas
mov
pop
aaa
xchg
push
push
inc
dec
notb
add
mov
sbb
jl
fmulp
ror
mov
cmp
pop
jbe
ret
imull
je
leave
dec
xor
cltd
ja
mov
mov
aam
adc
fs
std
inc
lahf
addr16
sbb
sub
push
pop
push
add
loope
jnp
or
cld
push
je
sbb
cltd
xor
dec
stc
jl
pop
lret
push
cltd
ds
mov
xchg
mov
mov
xchg
mov
fldcw
icebp
icebp
sbb
pop
lret
aam
jmp
jno
jg
sub
lahf
cmp
sub
sbb
dec
dec
mov
or
daa
aam
push
cmp
sub
push
pop
and
shlb
pop
sbb
push
mov
adc
sub
dec
add
sbb
push
sbb
lahf
mov
dec
sbb
sub
lods
cmp
mov
push
cmp
xchg
iret
xorb
and
cltd
call
mov
stc
or
cmp
xor
pop
xor
cwtl
sub
cltd
lods
or
jecxz
mov
stc
jg
mov
xchg
xor
movsb
not
dec
push
sbb
pop
or
pop
xchg
or
cmpsb
mov
adc
dec
add
or
mov
xchg
mov
inc
insb
jne
and
cmp
scas
sub
mov
fnstcw
rol
push
int3
pop
cmp
out
fidivrl
in
push
movsb
stc
mov
mov
adc
mov
arpl
movsb
or
sub
rclb
sub
push
in
cwtl
hlt
sub
cltd
inc
sub
add
pop
adc
and
push
xchg
xchg
or
push
clc
stc
push
dec
xor
inc
stc
inc
rep
mov
fdivs
sahf
mov
stos
mov
dec
cwtl
sub
jae
xor
popf
int3
das
mov
add
stc
hlt
sub
or
jno
inc
test
pop
sub
lcall
mov
mov
add
clc
push
adc
sbbb
and
sub
pop
mov
xchg
mov
mov
aad
enter
mov
xchg
cwtl
dec
add
xlat
pop
cmp
sub
xor
sbb
lds
sub
xchg
icebp
cwtl
mov
mov
add
xchg
pop
jbe
xchg
add
push
notb
scas
cmp
cmpsb
mov
cmp
rorb
pop
sbb
in
inc
sbb
scas
fcomps
in
push
fs
pop
scas
dec
mov
fnstenv
and
fistpll
cmc
adc
ret
cmp
and
mov
sbb
sbb
inc
pop
and
xlat
lahf
lret
jns
popa
cmpsl
mov
and
inc
sbb
sub
push
pusha
jb
and
adc
mov
sbb
mov
or
xchg
iret
inc
stc
mov
movsb
mov
das
or
roll
aam
dec
adc
shlb
push
loop
or
xor
repz
mov
or
xlat
add
cmp
mov
and
adc
mov
sbb
scas
mov
mov
cwtl
inc
dec
push
cltd
test
cs
xlat
pop
add
stc
hlt
inc
sub
rorl
stc
mov
adc
sub
add
pop
fcoml
adc
jmp
add
cmp
flds
scas
fucomip
stos
imul
aad
sti
and
pop
dec
mov
jmp
push
bound
dec
xlat
adc
jb
loopne
repnz
icebp
mov
ja
mov
dec
push
adc
leave
in
inc
mov
pop
sub
pushf
jno
mov
pushl
mov
sbb
in
sti
iret
mov
cmpsb
lahf
je
sub
sbb
pushf
xor
xchg
clc
stos
nop
inc
imul
lea
inc
cmc
loope
ret
mov
lcall
xchg
ret
and
test
data16
fs
cmc
out
dec
adc
sub
enter
mov
jg
mov
xchg
aad
and
xor
xchg
and
sbb
cmpsb
nop
xchg
sub
dec
and
jl
mov
loopne
dec
cmp
cmp
popf
sbb
mov
xchg
adc
add
int3
mov
ret
sub
pop
jge
mov
aaa
cmp
jg
pop
dec
test
pop
and
inc
imull
hlt
shrl
mov
jmp
xchg
lock
movsl
adc
pop
test
scas
adc
and
pop
stos
sahf
jp
popa
rclb
aam
dec
sarb
xor
jns
jb
or
fs
fcomps
adc
fs
or
jne
adc
and
scas
lods
out
in
sbb
jno
mov
xor
imul
add
add
mov
pop
and
add
jg
jle
enter
mov
mov
pop
xchg
loopne
or
movsl
cwtl
pusha
xor
out
push
or
repnz
pop
adc
cmp
lock
test
test
bound
sti
jns
fisubs
pushf
xchg
sub
push
sbb
sbb
shlb
imul
cli
loopne
nop
sbb
lahf
push
cmc
aas
fnstcw
jae
ja
jbe
hlt
movsl
push
sub
sub
cwtl
or
mov
mov
out
cs
sahf
inc
xor
repnz
push
scas
or
or
cltd
pop
dec
mulb
adc
cwtl
cwtl
jbe
adc
push
sub
push
scas
sahf
mov
xchg
out
sbb
iret
js
xor
mov
push
push
cmc
xchg
call
stos
stos
or
inc
cld
push
jge
gs
adc
cwtl
pop
jle
ds
sbb
adc
pop
test
xchg
cli
scas
fistps
popa
sbb
ds
mov
loopne
adcl
adc
inc
leave
gs
lret
stos
out
es
add
loop
aas
and
mov
pop
pop
push
mov
out
scas
cmpsl
ljmp
mov
dec
xor
sbb
jmp
mov
xor
jp
ljmp
and
pushf
jns
and
xchg
adc
mov
outsb
fimuls
or
scas
xchg
cs
and
shll
jbe
inc
adc
adc
cs
push
xor
push
or
jno
inc
sbb
lret
xchg
leave
xlat
shlb
mov
cmpl
scas
frstor
into
scas
std
fdivrl
mov
aaa
pop
mov
sbb
das
aas
and
pushl
lods
loop
xchg
cmp
shll
ss
mov
fnstcw
adc
xlat
mov
fs
lods
jle
mov
movsb
mov
xchg
adc
jo
imul
fadds
test
dec
pusha
gs
xchg
psubusw
inc
xchg
or
jnp
push
adc
lds
repz
sbb
and
inc
pop
mov
mov
xchg
push
aad
pop
xchg
add
xor
xchg
push
in
decb
or
loope
mov
stos
or
negb
push
dec
mov
mov
sarl
movsb
pop
mull
out
inc
pop
enter
xlat
jns
cs
imul
xlat
xchg
pop
cs
adc
sbb
sub
pop
xor
push
sub
mov
in
stos
pop
and
pop
daa
lods
test
push
inc
add
lock
adc
outsb
idivl
jb
das
adc
push
cmp
adc
inc
nop
pop
xchg
ficomps
xor
dec
aad
inc
and
inc
push
bound
in
jmp
dec
jp
and
popa
lret
rcrl
fldl
lock
lcall
push
mov
push
xlat
and
nop
outsb
popa
pushl
adc
push
or
loope
cpuid
xchg
jecxz
cwtl
xchg
mov
sarl
hlt
and
cwtl
leave
test
xlat
in
daa
push
adc
push
repz
cmp
popa
mov
test
mov
pop
push
pushf
scas
cld
adc
aam
hlt
dec
leave
xchg
inc
jmp
pop
push
das
icebp
dec
enter
sahf
push
add
and
xchg
stc
das
repnz
mov
pushf
xchg
cmp
jnp
mov
loop
sahf
ja
cmp
mov
roll
push
imul
into
dec
pop
xchg
mov
sbb
cmc
sub
jne
sbb
lods
out
jle
xchg
fcmovnb
jb
xor
nop
cmp
mov
adcb
mov
pop
mov
adc
and
scas
gs
mov
es
scas
push
mov
dec
mov
sbb
fdivs
sub
aam
into
mov
pusha
ja
mov
cltd
int
imul
sub
scas
pop
in
ret
xor
in
hlt
add
and
leave
jp
xchg
std
mov
add
jne
adcb
adc
jns
push
push
mov
jae
or
push
outsl
pop
fmuls
jmp
int
cs
mov
imul
pop
inc
frstor
push
xchg
jb
ret
je
lret
scas
mov
pushf
test
je
aaa
divl
mov
shrb
or
mov
push
pop
ss
shlb
fcmovbe
sbb
sti
loopne
sahf
push
xor
aaa
mov
popa
aas
notl
in
sahf
push
pop
fisubs
xchg
or
sahf
xchg
xchg
aad
push
fists
pop
jecxz
xor
fdivs
xchg
jge
xchg
cmp
mov
fcmovu
mov
in
loop
mov
push
repnz
popf
xchg
push
mov
xchg
pop
dec
xchg
push
lret
enter
fcomps
adc
lock
imul
mov
sbb
pop
mov
xlat
das
dec
pop
or
push
sub
popf
call
and
popa
jecxz
cmp
sub
cli
fcomi
rcr
stc
cwtl
imul
cmp
adc
pop
sub
mov
jge
push
pop
and
outsb
gs
adc
sbbb
sub
lds
jb
push
lods
outsl
gs
sbb
mov
push
xchg
cmpsb
rcll
scas
cwtl
pop
sub
xlat
xchg
xor
clc
es
push
adc
sub
sbb
pop
mov
or
jle
inc
sbb
das
mov
mov
mov
cwtl
xchg
push
sbb
jae
sub
ja
add
cmpsl
mov
push
lret
stc
xchg
mov
mov
xchg
sbb
lahf
popf
push
rcrb
pop
push
add
pop
sub
ja
dec
xchg
fdivr
es
mov
lret
test
out
and
xchg
xorb
inc
lods
mov
ficoms
jp
mov
dec
or
ja
sub
xor
cmp
lods
rcrb
inc
daa
push
aad
lret
iret
out
vcvtdq2pd
xlat
xchg
stos
xchg
and
inc
loopne
and
pop
nopl
enter
adc
mov
mov
cwtl
xchg
push
sbb
imul
bound
adc
xchg
mov
push
push
sub
fstl
icebp
sbb
pop
mov
ret
pop
hlt
push
push
cmp
mov
icebp
jb
dec
dec
xor
fldcw
rol
sbb
loop
xor
mov
or
cltd
pop
cwtl
push
aaa
js
dec
popa
push
idivl
sbb
xlat
ficomps
sbb
aas
loope
aad
sub
mov
fstps
lods
shll
lret
push
pop
jae
xchg
push
mov
cli
popa
jb
adc
lock
mov
mov
xchg
push
sub
in
mov
adc
adc
out
mov
addr16
add
shl
ja
aaa
adc
xchg
xor
leave
xor
ss
jge
add
adc
cmp
or
push
adc
push
push
in
idivl
push
adc
arpl
out
ja
stos
aad
or
enter
push
loop
in
shlb
push
out
adc
dec
mov
fldcw
jne
iret
mov
xchg
fcomps
sbb
loopne
xor
pop
stos
xchg
cmp
push
jne
add
fsts
cmp
in
out
arpl
jge
sub
sbb
mov
sub
inc
xor
dec
rcl
mov
es
mov
ljmp
add
shrl
jb
mov
je
xchg
mov
rorl
cmp
cs
shl
pop
xor
pop
mov
adc
jns
xchg
imul
in
jge
stos
sbb
gs
es
sbb
sarb
lea
mov
push
rol
xchg
sub
add
jmp
gs
xchg
ret
loop
aad
test
pop
xor
xchg
pop
and
and
shll
dec
push
push
xchg
jg
inc
in
je
mov
xor
imul
int3
icebp
mov
sbb
xchg
mull
xor
sub
pop
lcall
pop
cltd
mov
and
pop
jbe
sti
lret
stos
loop
or
pop
clc
push
pop
mov
gs
nop
or
and
jg
scas
adc
xor
xchg
sub
ficoms
imul
test
jns
test
icebp
fnsave
adcl
push
sbb
lock
arpl
sbb
or
js
icebp
outsl
dec
push
xor
repz
sbb
lods
call
jae
loopne
pop
cmpsl
scas
xchg
mov
loopne
jnp
xchg
xlat
lods
mov
stc
cmpsb
mov
jmp
test
mov
insb
or
psubw
xchg
inc
fdivs
andb
inc
mov
ret
cmp
scas
and
lea
clc
jns
push
hlt
aaa
push
xchg
ja
sub
icebp
and
mov
mov
pushf
mov
sti
push
popa
sbb
push
cmc
aas
or
jp
push
dec
flds
out
je
jb
cmp
or
inc
adc
jnp
push
std
popf
dec
inc
sbb
mov
cwtl
sbb
mov
pop
jle
dec
jno
xchg
pop
or
mov
mov
iret
sbb
xchg
mov
loopne
enter
or
lret
inc
push
les
mov
push
jmp
lea
insb
adc
movsb
xorb
pop
sub
stos
jb
xchg
push
push
pop
es
lret
jp
ficompl
push
mov
mov
call
out
rcl
pop
adc
add
jge
fsubrs
insb
mov
cwtl
xchg
das
xlat
fs
leave
lods
sbb
pop
mov
inc
icebp
mov
sbb
lock
mov
add
jg
repz
cmp
xchg
xor
movsb
sub
sbb
jle
out
call
shrl
sbb
mov
inc
jns
lods
xchg
sbb
aaa
adc
roll
xor
mov
fildll
mov
imulb
fcmovnbe
or
or
sub
add
std
loop
fwait
dec
rcrb
pop
jno
arpl
adc
inc
pop
test
out
icebp
mov
xchg
add
push
push
int
lods
fistpl
fs
rsqrtps
jg
shrb
cmc
gs
call
mov
adc
sti
ret
pop
and
roll
add
ror
aas
sbb
dec
pop
rclb
fcmove
movl
daa
sets
pushf
mov
xor
cmpl
add
add
sub
sub
fidivs
push
test
js
xchg
sbb
fldcw
mov
dec
ss
mov
push
add
xor
fdiv
xor
or
movsl
shlb
push
movsb
cwtl
cmc
push
cwtl
rcrb
add
add
push
mov
pop
inc
adc
add
xor
pop
popa
jmp
mov
rol
sarb
mov
adc
popf
flds
fxch
inc
div
cmp
iret
add
pop
xchg
cmp
ficoms
ljmp
fadd
add
inc
outsl
sahf
adc
es
push
pop
mov
pop
and
jae
or
mov
into
mov
push
mov
ret
lods
xchg
je
adc
shlb
gs
dec
lret
repnz
mov
sbb
xchg
mov
aaa
pop
xchg
cmp
and
popa
clc
les
sbb
xchg
push
idiv
nop
shll
stos
lcall
aad
pop
mov
jp
jnp
xor
or
es
fwait
xlat
pop
add
cltd
and
xchg
lahf
lret
sbb
sub
dec
and
adc
pop
cmp
mov
xchg
arpl
sbb
aaa
in
adc
adc
push
push
mov
sub
loope
ds
ficoml
movsb
mov
fsts
nop
ret
fcmove
add
mov
xchg
sbb
and
pop
outsl
insb
sub
adc
xchg
mov
mov
adc
mov
ret
int
bound
jbe
pushf
xor
sbb
iret
xchg
js
cmp
in
lods
xlat
adc
mov
outsb
xchg
fisttps
cwtl
mov
dec
pop
stos
or
lahf
in
jb
mov
sub
lcall
dec
dec
mov
adc
scas
test
cltd
bound
sbb
xchg
lock
imul
push
and
or
inc
sub
flds
xchg
push
push
mov
leave
outsb
aas
xchg
and
adc
pop
xorl
mov
dec
inc
lahf
mov
sub
dec
push
jg
jns
aad
push
xchg
adc
adc
js
xchg
pop
stc
lock
mov
jb
adc
rcr
push
rclb
push
dec
das
adc
fidivs
lods
cltd
inc
sbb
sbb
ret
cmp
popf
sbb
pop
in
pop
push
inc
outsl
mov
pop
icebp
cmp
xor
mov
mov
push
xor
jg
pop
sbb
xchg
or
insb
jbe
adc
mov
cmp
sub
fs
out
jbe
notb
sahf
fldenv
mov
repnz
lahf
jns
ficoml
sbb
mov
stc
push
pop
mov
popf
dec
jle
push
xchg
addr16
push
enter
jge
add
push
xchg
repnz
cs
sti
jbe
ja
repz
push
andl
pop
xchg
push
push
dec
and
xor
insl
push
or
adcb
es
lahf
out
adc
xchg
adc
repnz
jle
push
jmp
outsb
mov
das
movsl
inc
xchg
xchg
sub
mov
push
adc
lds
int
adc
dec
aad
lock
xchg
pusha
loopne
jge
jne
imul
pop
xchg
in
pop
push
shrl
fisubrs
cli
jae
test
jne
mov
and
push
rorl
pop
push
mov
mov
rcll
adc
and
push
jne
stc
jbe
lret
sbb
and
pop
sbb
xor
test
repz
sbb
xor
mov
xchg
rorl
push
push
or
cs
push
xchg
xor
lret
lods
mov
pop
mov
cmp
pop
shl
jmp
cltd
xor
movl
pop
gs
lret
js
inc
movsb
cwtl
jb
xor
fidivl
divps
dec
xor
cwtl
jne
jae
sbb
loope
iret
mov
inc
add
jae
roll
cmp
shll
and
out
cmpsb
rclb
pop
das
fistl
sbb
inc
fnstenv
or
out
jae
pop
lods
and
or
stos
in
add
loop
jecxz
scas
mov
cmp
jne
test
ret
arpl
insb
into
int
shrl
rcr
mov
aaa
mov
pop
stos
cs
xor
add
xor
mov
xor
sub
jo
mov
fldenv
xchg
sbb
dec
scas
jp
ss
or
cmp
dec
shll
or
je
pop
js
push
clc
and
push
xchg
cwtl
or
adc
das
loop
out
push
xchg
cmpsb
xor
mov
jl
fs
icebp
cmpl
cwtl
xor
push
mov
push
shll
xlat
frstor
aaa
cmp
or
push
push
mov
push
test
pop
rcl
xchg
jg
push
xor
mov
pop
flds
sub
pushl
mov
and
xor
xlat
outsl
fidivrl
xchg
ss
arpl
mov
cld
dec
sub
pop
pop
pop
xor
das
stc
out
lock
add
pop
push
nop
cli
sbb
fadd
addr16
jbe
shlb
not
mov
lret
mov
data16
loop
aaa
xor
fildl
or
dec
lahf
dec
mov
mov
clc
xchg
sub
das
mov
test
pop
dec
mov
inc
mov
push
cmp
mov
sub
push
in
aas
aad
das
mov
adc
lea
dec
mov
ret
or
lods
xchg
test
cwtl
inc
xor
aam
in
stos
sbb
or
jns
imul
cwtl
lock
push
test
filds
pop
jae
xchg
or
stos
pop
loopne
adc
scas
xchg
jmp
push
cmp
rorb
ffreep
xchg
push
sbb
mov
mov
dec
in
push
pushf
and
idivb
mov
rclb
sbb
pop
cwtl
xor
adc
push
popa
jnp
xor
adc
aad
shlb
add
aam
stos
pop
xchg
jmp
cli
push
sbb
repnz
scas
icebp
push
or
popa
sub
sub
xor
call
sbb
add
lds
mov
cmpb
cmp
xchg
mov
mov
subb
test
cmp
and
fstps
cmp
jp
pop
lods
cwtl
aam
mov
loop
push
orl
pop
and
pop
xor
cmp
lret
fldenv
xchg
push
sub
ficoml
inc
popa
sub
pop
and
aad
loope,pn
mov
push
push
push
icebp
roll
pop
xchg
adc
mov
push
add
cmpsb
pop
std
inc
mov
mov
mov
jge
outsb
inc
enter
sbb
loop
cmp
in
sbb
and
jns
and
jbe
adc
lret
xor
xchg
bound
cli
xchg
mov
sub
adc
mov
and
jns
jbe
cltd
sub
and
dec
in
jmp
jne
mov
sub
sub
pop
jbe
aas
or
jmp
and
and
cmp
daa
lahf
stc
dec
sbb
and
push
cs
push
ljmp
push
or
cmp
dec
and
in
scas
arpl
movb
fdivs
xor
xlat
and
movsb
mov
add
push
cmp
ja
ds
mov
sbb
and
rolb
or
repnz
jno
mov
xlat
sbb
inc
adc
fnstsw
mov
sub
push
fbld
xchg
icebp
pop
add
sbb
imul
xchg
push
sub
clc
inc
cltd
xor
push
mov
inc
dec
sub
mov
xor
and
fcoms
popf
loope
pop
mov
sbb
inc
fiadds
jl
xor
lret
hlt
xchg
mov
pop
xchg
sbb
sbb
loope
push
xor
ja
clc
adc
outsl
cld
dec
jno
push
stos
pop
sbb
les
mov
sbb
cmp
pop
repnz
aam
or
je
into
push
xchg
push
icebp
inc
and
mov
xor
shlb
pusha
mov
stos
cld
mov
notb
jecxz
mov
lahf
mov
and
leave
stc
jle
mov
and
fcompl
lods
ja
jb
sub
test
xchg
mov
adc
mov
scas
or
outsl
mov
movsl
aas
ss
mov
mov
leave
aam
stos
mov
add
xorb
push
sub
or
rcrl
lds
cmp
pop
fwait
in
test
and
push
loopne
xchg
stc
mov
push
lcall
or
xor
xchg
mov
mov
icebp
mov
pop
add
call
fsubs
je
push
mov
dec
mov
pop
and
xlat
scas
adc
sub
jl
sar
and
pop
inc
stos
or
ret
rcrb
xchg
mov
aad
mov
stos
les
xor
in
pusha
mov
xor
lea
push
pop
push
xorb
fs
fistpl
in
outsl
and
out
xorb
les
and
rol
in
sbb
and
inc
lds
xor
push
cli
push
mul
out
aaa
aad
pop
and
push
push
cmp
add
adc
repz
scas
scas
xor
mov
fs
fidivl
sbb
xchg
dec
sahf
ss
cs
and
xchg
cmc
adc
orb
out
lock
push
or
cmp
pusha
fwait
stos
out
inc
pop
cltd
xor
lret
sub
sbb
scas
jmp
adc
aad
das
and
popa
outsl
aaa
xor
ss
xor
jb
mov
cwtl
out
jp
push
lods
ja
out
test
sbb
mov
push
enter
sbb
fcoml
inc
add
aad
and
dec
rcrb
push
xor
insl
subb
fcomps
and
jno
inc
sbb
or
outsl
shlb
cmp
xchg
ja
test
imul
fidivrs
sbb
mov
mull
dec
adc
addr16
arpl
das
fldt
and
pop
call
jg
shrl
bound
dec
aad
cltd
lcall
aaa
sub
int
or
stc
and
test
mov
or
clc
stos
lock
add
cmpl
scas
mov
dec
xor
push
adc
shl
lock
or
adc
rolb
enter
adc
push
xrelease
leave
xchg
push
push
in
pop
fcoms
cli
jne
xchg
nop
dec
cmp
fincstp
add
dec
stos
popf
clc
mov
inc
pop
icebp
mov
push
xor
ds
shl
shlb
sub
lret
aad
jecxz
push
inc
loope
divl
or
shl
cmc
sbb
insb
ja
ja
xlat
std
xchg
lock
out
and
ds
sub
daa
sar
ja
mov
adc
mov
xchg
push
pusha
outsl
rorb
fldt
xor
add
imulb
fisubl
cmp
adc
mov
js
add
dec
loope
jecxz
xchg
flds
pop
loop
sub
jo
test
xchg
movsl
sbb
sbb
scas
nop
mov
movsl
xchg
shlb
adc
loop
push
cld
cmpsb
mov
pop
push
cmp
pop
xchg
mov
mov
test
pop
aaa
scas
out
adc
sub
push
outsb
add
cwtl
iret
leave
lret
orb
mov
jns
adc
dec
stos
sahf
mov
push
call
pop
push
mov
inc
xor
mov
cmp
fstps
gs
ja
xlat
pop
or
jge
inc
pop
cmpsl
mov
sahf
push
ja
stc
mov
push
shll
testl
pop
push
cmp
xchg
pop
stos
mov
sbb
mov
in
icebp
cmp
dec
js
push
scas
loop,pn
push
xchg
adc
and
jae
aad
mov
adc
clc
sti
lret
push
and
rolb
movsl
arpl
push
jae
sbb
cmp
dec
mov
out
mov
sub
xor
lods
imul
cmp
mov
jg
push
lcall
sbb
xor
pop
sub
movsb
xor
mov
in
test
pop
push
xchg
push
sahf
call
popa
fldenv
pop
popa
xchg
das
xchg
mov
lahf
pusha
stc
cltd
nop
imull
or
sbb
and
jmp
dec
push
xchg
arpl
mov
pop
test
mov
sar
push
push
ja
lock
cwtl
adc
and
dec
ret
rcl
xor
jl,pn
mov
stc
pop
push
mov
ds
in
mov
das
pop
sarl
mov
cltd
mov
loopne
in
fstps
mov
mov
inc
movsl
and
xorb
pop
in
scas
rcrl
jne
inc
subl
vpminub
jbe
push
jns
jnp
xchg
xchg
push
imul
fbstp
jp
adc
mov
shlb
sub
loop
loopne
cmp
dec
sub
dec
jb
sbb
and
aaa
icebp
push
out
pop
inc
and
fldenv
mov
inc
mov
jo
inc
imul
xor
insl
dec
mull
mov
or
hlt
xchg
lret
lods
mov
pop
fbstp
ljmp
mov
xchg
inc
jno
sbb
pop
sub
testl
mov
mov
xor
adc
cwtl
test
add
cmp
mov
sbb
xchg
aaa
sub
push
fldl
in
ss
cmp
into
push
mov
pop
imul
mov
jns
pop
shrl
cmp
xchg
sbb
imul
aad
xor
fdivrs
jge
push
ss
xchg
fnstenv
push
hlt
call
cmp
es
cmp
adc
js
xor
pop
sbb
or
cmp
scas
xchg
pop
ja
jb
jo
sub
sbb
add
ss
and
push
mov
cwtl
xchg
outsb
scas
aaa
and
sbb
repnz
xor
push
xor
jnp
xchg
stc
xchg
sbb
icebp
mov
push
outsl
imul
pushf
iret
pop
and
push
pop
xor
push
fucom
adc
xchg
and
lret
push
xchg
sbb
adc
jg
hlt
pop
or
xchg
mov
es
ljmp
inc
xor
add
dec
sub
pop
ror
sub
and
xchg
cmpsb
inc
add
adc
mov
or
sub
xor
or
fsincos
sbb
inc
sbb
jb
cwtl
xor
push
lods
mov
pop
stos
lods
jg
xlat
repnz
and
push
popf
lock
xchg
imul
cmp
adc
into
sarl
clc
mov
jae
aam
add
jmp
shr
out
out
adc
sbbb
fnstcw
ss
add
jo
rcrl
jp
aam
aaa
pop
sub
mov
fcompp
and
jae
xor
add
testl
jmp
dec
or
aam
cs
lret
mov
daa
aad
mov
adc
cli
pop
jl
jb
jp
mov
mov
xchg
xor
sbb
std
mov
and
inc
inc
jnp
aad
das
or
push
pop
clc
push
mov
add
arpl
cmp
push
repnz
sbb
and
es
mov
aam
sbb
sub
repz
outsl
mov
or
mov
es
mov
and
stos
scas
adc
lock
inc
sub
int3
pop
pop
xor
pop
inc
xor
push
lods
sbb
xchg
adc
cltd
inc
in
jp
mov
fcoml
mov
js
ss
add
mov
adc
fdivr
lcall
sbb
pop
aam
adc
jb
sub
das
ss
arpl
or
cmpsb
std
js
imul
sbb
and
or
sbb
xchg
xor
mov
pushl
and
jne
mov
mov
jne
xchg
stc
adc
mov
hlt
sbb
lret
sub
jge
xor
mov
mov
cmp
mov
iret
out
pushf
cwtl
cld
outsl
pop
pop
push
or
das
jp
fnstsw
sahf
xchg
in
jle
fldenv
xor
or
push
mov
je
roll
push
rorb
push
in
add
mov
mov
or
je
push
push
fsts
data16
pop
int
mov
push
fdivrp
mov
jp
xor
lods
push
xlat
cmc
ficoms
or
movsl
inc
sbb
adc
leave
imulb
cmp
or
and
xchg
nop
xlat
and
scas
mov
push
lock
sbb
jnp
xchg
fsubrl
loope
in
mov
call
aam
push
add
daa
cmpsl
mov
adc
pop
cwtl
xor
sbb
imul
fsubs
dec
fs
fprem
fwait
icebp
xor
push
lock
dec
testl
dec
pop
jl
push
js
mov
mov
push
mov
jno
mov
das
cmpl
out
push
or
pop
cmp
push
sarl
mov
test
jle
pop
scas
add
jbe
xchg
xchg
push
cmp
pop
loope
mov
clc
pop
pop
aaa
push
sub
hlt
add
sub
adc
lret
test
cmp
lods
int
pushw
cs
shlb
loopne
ja
adc
xchg
sbb
inc
bound
icebp
aaa
lock
sbb
adc
arpl
rclb
or
push
shll
fs
arpl
dec
shlb
sbb
cs
push
ljmp
das
jp
sbb
or
bound
pop
mov
aas
es
cwtl
adc
div
xchg
dec
fcomps
mov
adc
shrb
xor
pop
cmc
dec
sbb
mov
pop
fwait
xchg
and
adc
jns
sahf
mov
sbb
or
loope
mov
ljmp
hlt
and
adc
enter
add
ret
adc
shlb
cwtl
jne
push
mov
negl
adc
push
into
xor
adc
cwtl
dec
stos
stos
loope
ret
test
sub
mov
cmp
mull
sbb
cmp
xchg
add
push
lret
push
outsl
pop
adc
repz
movsl
into
ds
xor
mov
adc
lret
fstpt
das
jns
popa
xchg
xor
xor
sbb
xchg
adc
fsubr
mov
xor
inc
add
push
mov
xorb
push
xchg
pop
iret
mov
xchg
repz
dec
int
imul
mov
mov
push
pop
stos
dec
loop
mov
das
xor
xchg
outsl
movb
stos
xchg
mov
push
movsb
cwtl
xchg
push
jmp
sbb
mov
bound
add
xor
sbb
pop
sbb
or
add
and
push
scas
ja
stc
mov
sbb
loop
idivl
mov
inc
lods
xchg
imul
xchg
nop
cmp
pushf
sub
xor
std
fdivrs
movsb
test
xorb
or
dec
push
push
decb
dec
push
sbb
fdivr
adc
xchg
or
cld
adc
imul
pop
sbb
in
shll
push
notb
mov
xchg
and
cmp
xchg
icebp
mov
jno
sbb
movsb
sub
mov
lock
pop
push
scas
mov
repz
mov
fadds
repnz
insl
adc
imul
loope
adc
filds
hlt
push
inc
cmp
cwtl
mov
fwait
pop
je
mov
inc
sahf
push
rcrb
hlt
in
mov
mov
leave
push
pop
pop
push
sub
pop
cmpsl
out
ja
rorl
fwait
or
cmp
mov
insl
popf
movsl
cwtl
push
mov
insl
jns
dec
adc
aad
mov
mov
adc
inc
stos
pusha
or
sbb
ret
repz
jmp
xchg
loope
sbb
clc
push
test
movsb
in
inc
clc
push
adc
adc
sahf
cltd
insb
push
pushf
xchg
push
scas
lods
ret
sub
loop
pop
sbb
scas
adc
data16
add
push
sbb
outsl
or
nop
out
and
ret
roll
mov
push
jecxz
jb
xor
inc
mov
hlt
adc
cmp
fdivr
xor
and
cmc
lcall
sbb
xchg
cmc
scas
jg
fstpl
loop
cmpsl
mov
fxtract
xor
sub
rcll
add
sbb
cmp
cmp
jns
cmp
push
stos
enter
enter
stc
xchg
es
pop
dec
int
jno
pop
sbb
dec
bound
je
push
mov
inc
cltd
scas
test
mov
fcoms
add
push
xchg
push
adc
das
dec
adc
cltd
sarb
push
sub
aam
dec
fcomp
pop
mov
or
xor
sarb
dec
addr16
lock
pop
je
push
and
cmc
mov
pop
in
inc
mov
ja,pn
xchg
or
jl
hlt
outsl
xchg
repz
sbb
pop
jb
cmpsb
pop
jg
jns
mov
data16
and
sbb
jp
in
imul
or
pop
fsubs
lahf
aaa
cmp
cwtl
push
and
test
xchg
adc
cmp
sahf
pushf
pop
dec
gs
out
stos
xchg
jmp
scas
xor
push
xchg
dec
mov
stos
or
fdivr
insb
cmp
mov
sub
jbe
pop
hlt
loopne
fwait
aam
aas
cmp
outsl
lret
das
stc
jnp
mov
and
pop
cmc
pushf
outsl
sbb
das
adc
inc
jg
pop
push
cmp
sub
loope
loopne
mov
stc
mov
pop
push
push
or
prefetch
and
cli
cs
xchg
stc
pusha
inc
mov
jns
aas
jmp
in
scas
repz
inc
cwtl
push
jo
xchg
ds
push
rcl
sbb
push
sti
sbb
or
xchg
adc
push
push
in
pop
shrl
xchg
test
adc
scas
dec
shlb
pop
pop
sbb
dec
inc
sti
fnstenv
jae
and
jg
adc
lock
pop
mulb
adc
sbb
out
adc
xlat
push
arpl
dec
ss
adc
mov
pop
fmull
xchg
imul
mov
leave
pop
hlt
adc
fs
ret
enter
stos
push
add
sbb
pop
shrb
scas
jb
push
ja
ret
xor
jge
sbb
test
push
sub
repz
clc
mov
imul
adc
push
push
mov
pusha
lds
pop
mov
mov
adc
mov
std
stc
fs
cwtl
dec
xchg
push
divb
leave
or
dec
scas
fiaddl
mov
xchg
cs
gs
pop
xchg
mov
mov
dec
lods
aad
ds
dec
push
loopne
sti
imul
xor
mov
cmpl
dec
cmp
xchg
adc
mov
sub
pop
shlb
push
jns
js
sbb
adc
jns
sub
push
repz
aaa
sahf
aaa
in
sbb
lahf
mov
loop
es
flds
mov
fisubrs
mov
jnp
dec
lods
aas
mov
xchg
cmp
push
push
int3
push
xor
icebp
jb
inc
sbb
inc
push
jae
stc
inc
ret
pop
mov
push
loope
mov
xchg
scas
int
push
xchg
mov
xchg
sub
push
adc
mov
rcrl
movsl
leave
xchg
ja
cwtl
scas
call
sbb
rclw
dec
sub
sub
adc
scas
mov
movsl
shl
add
jb
ror
loop
cmp
das
adc
jp
dec
aad
scas
loope
imul
push
fcoms
and
and
xchg
rcl
jcxz
or
push
sbb
dec
push
mov
stos
inc
mov
les
mov
mov
repnz
xchg
bound
aad
jbe
clc
adc
fildl
pop
sub
sbb
cwtl
sbb
movsl
adc
inc
inc
int
lock
lcall
dec
adc
jmp
jb
push
or
mov
adc
dec
push
jne
jp
pop
sub
inc
fcoms
sub
adc
inc
push
and
mov
mov
cwtl
pop
not
add
xchg
push
cltd
stc
bnd
lds
sub
call
jbe
lock
push
dec
aam
adc
xchg
sbb
and
push
xchg
les
or
adc
dec
imul
push
xchg
cs
sar
repnz
sahf
dec
das
jb
cmp
or
ja
movsb
ss
icebp
inc
mov
push
inc
pop
cmp
stc
mov
mov
or
adc
bound
adc
push
cmpsl
roll
rep
or
fcoms
xor
stos
fnstsw
lock
imulb
or
in
movsl
sub
aam
scas
or
shlb
out
pop
sbb
mov
aam
and
loope
jae
imul
push
jge
or
xchg
cmp
repz
xorl
das
push
jbe
xchg
ret
or
cmp
mov
adc
push
pushf
cmp
testl
jnp
mov
jns
fsub
xor
push
cmp
push
push
adc
xlat
cmp
mov
inc
push
add
push
xlat
les
inc
inc
scas
repz
jp
pop
shrl
and
or
xchg
push
and
mov
int
addl
testb
jmp
jb
xor
out
mov
mov
lods
or
arpl
push
pop
push
and
das
pop
xor
mov
mov
mov
stc
inc
pushf
xchg
sub
mov
lea
xorl
xchg
push
adc
xchg
pop
lods
leave
subl
cmp
push
in
lock
lea
sub
mov
fs
cmp
jb
cmc
cld
mov
cwtl
mov
cmp
hlt
sti
div
das
roll
adc
push
mov
enter
mov
push
in
pop
fistpl
xor
stc
mov
shl
xchg
sti
rorl
loop
mov
imul
fldl
stc
cwtl
or
push
cmp
sarl
jo
movsb
rcll
add
mov
repnz
jb
dec
and
sbb
sbb
mov
movsl
add
sub
sub
xchg
lock
xlat
stos
cmp
outsl
dec
test
xchg
test
divb
or
hlt
pop
push
xchg
scas
dec
or
dec
sub
xor
pusha
nop
jae
jne
lahf
sub
cli
lods
pop
cmp
mov
lcall
dec
ljmp
push
dec
add
popf
or
push
sbb
and
or
lods
cs
sbbb
adc
push
inc
push
mov
icebp
xor
imul
shll
or
jb
stc
mov
jne
inc
push
xor
fnstcw
push
hlt
test
xor
aad
stos
stc
xor
gs
inc
xchg
jl
mov
adc
push
or
mov
add
lock
outsl
gs
inc
jne
adc
cli
xchg
cmp
sub
jnp
loop
adc
bound
add
pop
add
ret
jno
jg
jb
mov
or
test
into
shrl
out
pop
mov
and
push
push
stos
popf
fwait
mov
sbb
loope
cld
cwtl
xchg
inc
ror
fxam
mov
sub
pop
in
jge
adc
mov
pushf
std
imul
jecxz
or
insb
movsb
sti
push
mov
out
cltd
xor
rolb
test
add
out
xchg
pop
cmc
in
mov
mov
xor
sub
or
fistps
dec
fiadds
test
xchg
insb
jno
xchg
jns
mov
add
outsl
mov
adc
sti
jb
ds
jns
xchg
rolb
in
imul
mov
ss
sbb
mov
and
js
and
sub
cli
cmc
or
insb
scas
xor
cmc
imul
aaa
inc
test
jbe
fs
iret
dec
in
mov
mov
nop
scas
or
popa
adc
cs
push
cs
decl
cmp
sbb
mov
mov
sub
shrb
mov
icebp
int3
adc
xor
cs
sub
mov
daa
lods
adc
cltd
cmp
push
sub
stos
mov
xor
pop
ljmp
stc
ds
popa
mov
divl
es
xchg
adc
push
arpl
rclb
xchg
xchg
pop
mov
xchg
adc
mov
sub
adc
mov
mov
test
sub
testb
mov
xlat
pusha
jbe
xor
das
mov
and
and
shrl
jle
fsubrs
jne
inc
and
daa
push
xchg
leave
inc
lret
sbb
popa
and
hlt
inc
mov
in
sub
xor
loope
push
push
pop
push
xchg
daa
lods
mull
jb
jae
dec
pop
cmc
push
mov
imul
cmc
or
xchg
loopne
cmp
fwait
jae
pusha
and
aam
cmp
stc
xchg
sbb
sbb
cmc
mov
xchg
imul
or
jns
xor
sub
lods
dec
xor
push
xchg
xor
jl
xor
lret
push
pushl
xchg
xor
repnz
push
xor
test
subb
repnz
aam
and
xor
pop
fildll
pop
push
mov
cmpsl
ja
ss
push
pusha
dec
jne
pop
xchg
insb
adc
or
sarl
adc
and
push
mov
or
mov
xor
xchg
sub
scas
clc
test
xchg
fisttpll
jl
or
mov
and
in
shl
xchg
inc
subb
int
jae
add
and
adcl
mov
pop
xchg
fimuls
xchg
addr16
or
cmp
cli
ja
scas
push
mov
inc
mov
jmp
fists
pop
fs
pop
leave
sti
adc
pop
in
jae
add
lea
cmp
mov
sbb
pop
inc
aad
hlt
mov
pop
xor
imul
xor
data16
mov
clc
push
push
pop
pop
shll
lods
pop
xor
pop
or
lcall
arpl
sub
xchg
scas
push
test
mov
sbb
insl
cmp
push
mov
or
mov
sbb
mov
leave
ret
xor
pop
cmp
push
dec
test
rol
test
push
ret
cmp
xchg
pop
iret
sarl
in
call
mov
adc
movsb
cmp
xchg
mov
sarl
sbb
rdmsr
nop
xor
dec
repnz
cs
ret
fisubrs
pop
cmp
xlat
sbb
xchg
xor
aaa
dec
lea
decl
sbb
push
outsl
imul
or
inc
add
dec
bound
pop
scas
push
shrb
or
out
dec
std
lcall
cmp
pusha
enter
or
jp
loope
push
push
rcrl
inc
aam
lods
call
js
mov
lods
add
xchg
and
or
bound
enter
adc
loope
or
xor
xor
cmc
stc
rcrb
fldt
sar
cmpsl
pusha
rcll
scas
cmp
push
fwait
cltd
inc
mov
pop
mov
pop
das
xor
ja
ja
mov
lds
cs
aas
mov
xor
xchg
push
in
cmp
pop
xor
test
or
pop
mov
int
lods
pop
ss
add
push
add
xchg
xchg
pop
lods
lahf
xor
jbe
pop
xor
mov
push
mov
stc
test
sbb
scas
cmp
cs
fnstenv
adc
mov
push
and
popf
loope
cmc
adc
pop
enter
mov
gs
dec
xchg
adc
cmp
pop
rcll
outsl
xor
xor
loopne
fwait
cmp
ljmp
push
or
mov
pop
outsl
lahf
jbe
cmp
push
cmc
sub
pop
das
dec
sbb
and
imul
jmp
mov
sub
cmpsl
xchg
push
mov
mov
mov
or
scas
xchg
pop
xor
call
jne
sti
sbb
movsl
je
mov
push
stc
test
push
jbe
cmp
mov
aad
hlt
ja
add
jle
jae
push
shr
xor
jno
dec
pop
fidivl
xor
inc
pushf
dec
addr16
out
jae
adc
inc
leave
imul
adc
jns
leave
ss
out
jb
pop
out
imul
dec
sbb
enter
mov
cmc
sbb
push
enter
and
pop
cmpsl
xchg
mov
inc
mov
or
test
insl
inc
sbb
daa
xchg
loop
xchg
add
xchg
sbb
xor
and
inc
dec
or
add
jp
shrb
cwtl
xchg
mov
mov
mov
rcrl
daa
cmp
pop
xchg
leave
jecxz
fcoms
int
adc
mov
jae
adc
scas
mov
repnz
cmp
das
inc
scas
jae
pop
lods
ja
ss
outsl
lock
adc
push
jle
xchg
push
jbe
lcall
out
enter
and
jge
pop
xor
xchg
test
notl
das
notb
fldt
enter
xchg
mov
or
mov
xor
xchg
xchg
inc
pop
pop
shll
enter
and
push
cmovb
cmp
xchg
push
sbb
lods
aam
stos
mov
xchg
mov
loopne
jmp
out
adc
pop
add
xchg
and
inc
cmp
sbb
jns
incl
test
adc
call
cmpl
jns
divl
lods
adcb
xchg
fdivp
popa
iret
pusha
mov
call
andb
scas
test
repz
cmp
jb
ficompl
dec
push
push
push
icebp
int3
push
scas
and
pop
stos
ja
or
shr
lret
fdivs
mov
call
stc
push
push
lock
clc
pop
adc
dec
int3
mov
sbb
scas
inc
out
mov
sbb
push
ret
mov
leave
sbb
sub
cmp
ffree
aaa
adc
or
sbb
jle
push
lods
sbb
jbe
aad
sub
popf
xchg
movsb
push
adc
sub
push
dec
daa
pop
ret
push
fabs
sbb
xor
jg
pop
jl
xorb
adc
iret
int3
or
mov
bound
xor
scas
jge
push
adc
ret
ret
lock
clc
add
ficomps
mov
jb
jge
xchg
pop
push
push
and
test
and
inc
and
xchg
ror
cwtl
out
or
xor
loope
lcall
adc
push
in
mov
imul
mov
jp
enter
adcl
movsl
mov
imul
lret
mov
add
sbb
cltd
push
push
pop
xchg
stc
fwait
adc
mov
sbb
push
frstor
leave
cmpsl
jno
stos
xlat
in
imul
pop
mov
shlb
mov
popf
roll
mov
sbb
and
pop
cmpsb
test
movsb
xchg
popa
dec
jns
jb
jns
fdivs
in
cmp
and
arpl
out
addb
stc
mov
push
or
push
divb
pop
shl
imul
xor
add
xchg
pop
loopne
pop
push
js
push
adcl
bound
xchg
popa
xor
popa
xor
adc
imul
adc
mov
bound
aam
imull
mov
sbb
adc
mov
cmc
sbb
push
hlt
pop
fadds
xor
pop
push
sub
inc
fwait
daa
add
lcall
aad
sub
out
lahf
jno
leave
int3
clc
push
xchg
add
adc
cmp
pop
jns
pop
jo
jns
add
icebp
mov
ljmp
or
pop
mov
in
loope
dec
scas
add
xor
xchg
rorl
test
xor
adc
jns
das
outsl
shl
repnz
fsubp
add
ret
xchg
pop
pop
adc
pop
mov
fldenv
jge
enter
repnz
mov
mov
adc
push
loope
mov
mov
loopne
mov
mov
cltd
shlb
cwtl
xchg
mov
mov
fmull
jl
clc
cmp
aad
and
leave
mov
push
stos
aam
xor
pop
enter
or
outsb
iret
jnp
xchg
jbe
pop
rcll
mov
cmc
decl
stos
cmp
shl
add
loop
das
or
rclb
pop
pop
pop
jo
clc
xchg
push
add
mov
adc
inc
imul
pop
jns
jg
push
stos
and
icebp
sbbb
xchg
xchg
stos
aad
sbb
and
xchg
rclb
jl
push
push
das
xor
loop
scas
push
lret
adc
pop
ja
add
xchg
xor
inc
ja
push
mov
sub
fwait
xchg
shrl
jp
jne
testl
sar
dec
stc
adc
add
xor
outsl
dec
insl
lahf
aam
mull
inc
xor
mov
mov
daa
mov
in
lock
sbb
xlat
xchg
pop
je
mov
ja
pop
lahf
flds
aas
push
rcll
daa
lret
popa
xchg
mov
xor
push
mov
mov
jne
aad
ja
pop
mov
stc
aas
jg
jae
push
adc
mov
cltd
lock
addr16
sub
in
adc
push
cmc
lahf
push
imul
add
cmp
mov
js
adc
inc
mov
jbe
xchg
stc
inc
aad
clc
xlat
stos
bound
nop
cmp
leave
inc
cmp
jns
adc
lds
push
movsb
pop
ds
popa
push
in
or
ja
lahf
testl
mov
pop
clc
pop
lahf
mov
lock
test
repz
bound
stc
mov
outsl
and
cwtl
adc
iret
xchg
mov
cli
lea
xor
in
push
and
imull
nop
lea
push
mov
jns
sub
adc
sbb
lods
pop
aas
pop
push
sbb
rcll
xchg
jl
push
add
fldt
imul
ss
rorl
aas
pop
cwtl
div
or
xchg
inc
push
pushf
cwtl
lahf
push
es
pop
xor
bound
das
inc
ds
xor
add
int
cltd
mov
cmp
dec
test
push
sub
outsl
cmpb
out
bsf
inc
fcom
insb
mov
scas
andl
xor
pop
lcall
push
mov
ret
shrl
test
mov
sub
xchg
insb
jbe
xor
push
adc
mov
std
aad
sarl
fs
icebp
mov
inc
mov
mov
sbb
in
pusha
lcall
bound
dec
mov
xor
sub
cmp
cmc
push
mov
mov
dec
loope
leave
sbb
xlat
adc
push
bound
call
repz
dec
and
je
nop
data16
andb
scas
or
cwtl
xor
pop
push
xchg
xor
mov
jl
xchg
ja
sbb
push
mov
inc
int
das
xchg
in
lods
cmp
clc
sbb
pop
jg
mov
xor
mov
xchg
xchg
sbb
cmpsl
dec
pop
push
inc
dec
cmc
insl
push
notb
and
or
sbb
pop
dec
rol
mov
scas
aas
ljmp
clc
das
in
xor
cltd
dec
stos
adc
ss
shl
out
sahf
dec
jns
push
lods
pushf
adc
xchg
mov
jecxz
dec
lods
icebp
gs
xor
stc
mov
or
adc
mov
lahf
xor
pushf
bound
pop
ds
outsl
xor
push
lods
push
arpl
push
daa
pop
pop
jb
addr16
in
fs
sbb
push
xor
pop
int3
xlat
fnstsw
jecxz
xchg
inc
jb
ja
mov
scas
add
or
or
in
lds
push
outsl
dec
inc
test
popf
sub
push
xchg
mov
adc
or
jns
xchg
ds
repz
int
pop
pop
push
mov
push
das
clc
cmp
rcr
pop
pop
lret
test
dec
xchg
gs
cmp
enter
push
cmp
mov
cwtl
xor
dec
inc
mov
sbb
inc
pusha
xchg
fildl
dec
mov
dec
push
cmpsl
mov
xor
xchg
mov
mov
rep
add
into
aam
xor
xlat
add
sub
mov
aam
mov
stc
push
jmp
aad
aam
fcoms
inc
sub
shl
sub
js
adc
jecxz
test
dec
pop
mov
xchg
shr
and
cmp
mov
outsb
cwtl
xor
xchg
mov
push
cmp
lcall
sub
jp
fdivs
push
mov
push
hlt
sub
lock
aaa
popa
stos
jp
loope
xchg
and
mov
adc
add
mov
scas
lahf
mov
adc
push
inc
jg
test
out
or
sub
push
and
roll
pop
xchg
add
push
jb
shlb
out
cwtl
std
cmc
mov
adc
adc
fdivp
aam
gs
xor
push
mov
sub
rcll
mulb
xor
lock
les
mov
xchg
pop
mov
bnd
rclb
xchg
sbb
loope
sub
jne
test
shll
das
adc
cmp
xlat
mov
push
mov
adc
lret
mov
or
mov
xor
and
pop
xor
mov
push
stos
ss
adc
xlat
hlt
adc
mov
shll
cmp
stc
mov
xor
push
lods
or
push
or
sub
es
pop
jne
and
jne
adc
daa
sub
loope
notl
sbb
jne
cmpsl
aas
sbb
cmc
inc
pop
xchg
mov
movsl
cmp
xchg
push
and
inc
xor
cmp
sti
ror
cmpsb
std
cs
xchg
leave
mov
jmp
outsb
mov
xchg
cs
mov
xor
cmp
push
jge
mov
push
shlb
adc
loopne
inc
lret
out
xor
jg
sub
jecxz
sbb
push
push
idivb
das
lret
mov
sub
xchg
xchg
dec
bound
adc
cmp
fcomi
mov
movsl
stc
and
ljmp
adc
sbb
out
mov
aas
pop
xor
into
or
pop
lods
stc
pop
imul
orb
rcl
repz
fstl
cmp
dec
sbb
adc
scas
lods
ds
stos
sbb
outsb
mov
cltd
in
pushf
mov
cwtl
xchg
sub
addr16
xchg
or
inc
sarl
je
pop
clc
repz
pop
andb
mov
mov
arpl
jne
mov
and
lods
mov
adc
daa
addr16
fcoms
or
aas
jbe
loop
clc
nop
xchg
dec
adc
sub
jnp
xor
push
testl
adc
push
cmp
sar
dec
jne
mov
mov
daa
cmc
pop
mov
mov
je,pn
leave
xor
push
xlat
sbb
dec
cltd
cmpb
jns
jns
mov
xchg
xchg
adc
icebp
mov
pop
aam
lods
push
ja
stc
pushf
imul
dec
aaa
lock
push
aas
out
or
clc
lahf
int
and
gs
mov
mov
das
mov
xchg
sahf
mov
push
dec
jne
jb
push
fsubl
gs
cwtl
inc
pop
xchg
in
sbb
hlt
add
push
xor
or
ret
vpmacsww
mov
mov
lea
jns
shlb
push
push
add
jp
mov
divl
xchg
push
fsubs
mov
push
cmpsl
and
xchg
dec
mov
loope
lret
xchg
or
out
xchg
icebp
scas
dec
inc
add
pop
mov
call
popa
and
mov
adc
xor
stc
push
inc
scas
cli
mov
dec
pop
cmp
dec
and
pushf
xchg
xchg
das
cwtl
adc
int3
xor
in
jb
loope
pushf
mov
je
sub
cmc
jns
test
cwtl
ja
fwait
inc
insb
fs
sub
push
and
mov
mov
in
das
lret
ja
sahf
pop
inc
in
sbb
cmpsb
jb
int
jl
adc
pop
add
push
sbb
lods
sbb
sbbl
ffree
imul
jno
pop
repz
push
rcr
xchg
imul
scas
outsl
mov
pusha
adc
mov
ret
cmc
adc
fldcw
cmp
xchg
push
aas
cwtl
ficoml
lock
push
jns
cmp
push
or
mov
jl
add
in
mov
stc
sbb
xchg
mov
pop
cmp
inc
scas
push
xor
push
mov
mov
idivb
and
ss
jmp
hlt
cmc
adc
mov
dec
mov
cs
or
add
pusha
cmp
stc
pop
stos
je
fwait
imul
add
sbb
mov
je
xchg
and
sub
mov
shll
mov
fwait
insl
sub
rclb
mov
mov
mulb
pop
fnstsw
push
push
jno
push
pop
cmp
cwtl
push
scas
dec
push
mov
mov
pop
pop
fstps
cs
call
cmp
test
dec
test
pop
adc
minps
out
push
xchg
lods
inc
sub
cmp
sbb
xchg
and
orl
xlat
push
inc
jle
sub
or
jne
mov
or
int
mov
xor
or
sbb
sbb
ja
xlat
sbb
ss
pop
scas
mov
jb
adc
pushf
out
mov
mov
aas
cmp
mov
addr16
mov
sbb
in
aam
fstpt
push
pop
and
js
push
sbb
jmp
cmp
mov
xor
xor
sar
xor
xchg
leave
mov
fmuls
mov
out
rcr
add
jnp
mov
pusha
js
jb
repnz
fcomps
sub
adc
push
cmp
into
icebp
pop
add
inc
jg
adc
andl
mov
into
pop
adc
arpl
aaa
dec
shll
or
fcoms
fs
lods
stc
mov
shrb
dec
mov
add
pop
adc
lahf
xor
push
xchg
lods
adc
hlt
ret
jb
mov
add
jle
sbb
cld
iret
stc
je
xchg
sbb
imul
cltd
dec
movsb
adc
or
lods
int
mov
push
mov
rcrl
mov
sbb
stos
das
xchg
push
je
mov
inc
shrb
adc
pop
jo,pn
rcrl
push
pop
je
mov
sub
sbb
or
rorl
mov
stos
outsl
test
cmp
aas
or
cmp
sub
sbb
sub
ss
xchg
pop
mov
mov
sbb
xchg
test
adc
sti
out
sbb
dec
fcoms
fdivs
jb
imul
xchg
or
es
cmpsl
test
shl
and
inc
orl
sub
mov
mov
push
or
popa
mov
adc
jb
mov
insl
lods
mov
stos
stc
lock
adcb
pop
rorb
iret
loope
add
mov
lods
adc
test
arpl
test
xlat
test
push
push
lods
jecxz
mov
loopne
das
std
aaa
push
test
outsb
dec
push
push
rcll
sub
pop
jb
push
sbb
push
iret
xor
inc
adc
loope
popf
mov
push
sarl
dec
push
jnp
xchg
push
sti
add
lock
js
and
sbbb
mov
fisubrl
jns
movsb
out
hlt
push
push
in
popf
jae
xor
mov
in
adc
insl
or
pop
imul
mov
xchg
adc
adc
data16
mov
pop
jns,pn
xchg
in
pop
out
pop
lret
or
pop
sbb
js
dec
adc
cmc
dec
rcrb
sarb
repz
movsb
test
std
cmc
jmp
lret
rolb
test
je
mov
jg
xlat
xchg
bound
movsl
mov
cmp
cmp
jg
js
and
scas
in
sbb
cmpsl
jp
pop
test
or
sbb
inc
outsb
push
adc
divl
adc
dec
dec
xlat
adc
inc
add
daa
shlb
mov
js
xchg
ja
cmpsb
stc
push
xchg
inc
xchg
sbb
and
insb
leave
mov
inc
xlat
push
ds
sub
das
mov
ja
pop
sub
jl
add
dec
sub
xchg
inc
jne
or
mov
adc
push
ja
sbb
adcb
jno
popf
shrl
into
push
sbb
xor
push
push
pop
je
pop
negl
cltd
pop
stos
adc
sbb
push
aaa
fwait
test
mov
xor
pop
inc
jbe
clc
icebp
in
fidivrl
mov
or
or
adc
loope
pop
cmp
xor
imull
push
mov
xchg
sbb
xor
pop
rcrl
fcoml
jns
roll
scas
aaa
mov
dec
icebp
fiaddl
add
loopne
jb
pop
scas
aad
cmp
mov
clc
sbb
int
push
cli
fcmovbe
push
adc
jo
shl
mov
or
and
mov
sbb
add
das
lret
out
int
mov
cmp
jae
xchg
sti
jno
xchg
mov
outsb
xchg
jo
lods
cmp
sbb
mov
push
add
jge
mov
mov
fbstp
cmp
fcoml
or
cmpb
cmp
out
xlat
pop
hlt
cs
icebp
mov
xor
xchg
adc
push
rcll
hlt
xchg
mov
imul
jmp
jecxz
pop
xor
scas
inc
sbbl
jns
clc
loope
or
sar
push
pop
push
enter
mov
addb
push
add
pop
xchg
pushl
xor
push
es
adc
or
nopl
push
lret
dec
imul
pop
xchg
aas
imul
daa
push
push
push
into
sub
int3
lret
sarl
dec
mov
mov
out
xor
sbb
jbe
insl
loop
outsb
sbb
mov
lods
pop
hlt
lods
jmp
pop
xor
push
xor
adc
adc
imul
xor
sbb
scas
or
push
sti
jp
adc
xchg
cwtl
cmc
and
push
mov
int3
jnp
mov
das
or
pop
mov
xor
lea
lds
test
adc
and
shll
cltd
or
jb
sub
jns
movsb
clc
mov
lret
sahf
int3
scas
shlb
aaa
dec
cmpsl
or
and
fwait
cwtl
push
jp
mov
pop
sub
in
stos
dec
call
fcomps
pusha
cld
aad
sbb
pop
pop
adcl
das
insl
shrb
jg
xchg
fcoms
das
lock
push
mov
rcr
movsl
dec
xor
aas
push
push
push
mov
iret
adc
xchg
xchg
sbb
gs
and
movsb
push
mov
outsb
test
mov
jae
mov
cmp
add
jne
and
sarl
inc
or
pop
xchg
pop
xor
pop
push
pop
push
repnz
inc
mov
imul
inc
addl
cmc
dec
mov
push
ret
xor
int3
pop
jp
and
decl
scas
fs
notb
pop
xor
adc
into
ja
js
xchg
pop
sbb
mov
adc
lcall
mov
xchg
mov
mov
das
sbb
packuswb
xlat
jb
cli
inc
lods
int
pop
push
sub
aam
outsb
ret
imul
sbb
jno
xchg
pushf
mov
dec
push
sub
cmpsb
mov
data16
mov
mov
insb
mov
subl
sub
xchg
call
mov
jns
sahf
lahf
cmp
xor
jnp
fstpt
mov
icebp
cwtl
clc
add
and
loopne
and
lock
adc
add
movsl
lock
mov
cmp
dec
cmc
and
lods
rcr
jne
cwtl
jae
cmp
lret
push
dec
in
xchg
and
xchg
pop
pop
sbb
jae
xchg
test
push
adc
cmp
lret
ficoms
inc
int
xorl
sbb
mov
pop
call
ss
xchg
push
and
jmp
and
adc
mov
into
ljmp
jns
sysenter
jp
ret
push
jns
pop
mov
cs
cmp
ja
add
aam
es
and
pop
gs
loope
rcll
rcll
mov
mov
xchg
ret
mov
pop
icebp
inc
dec
insl
loop
adc
pop
out
fbstp
lcall
sbb
addr16
push
clc
adc
adc
jno
xchg
sub
xorb
mov
sub
or
or
xor
mov
lds
lea
jno
mov
daa
cmp
xchg
or
in
aam
sub
fists
inc
push
lds
cmp
push
aad
jae
push
mov
jae
imul
lahf
cs
loope
lret
in
dec
push
mov
push
sbb
outsl
jne
fcomps
pop
sbb
sub
shll
rcr
aaa
pop
cmp
sub
add
sahf
into
jecxz
jns
scas
ret
psubd
xor
mov
gs
push
mov
xor
leave
jp
cld
jl
xor
sbb
push
adc
xchg
push
ret
jle
xchg
adc
push
sbb
push
xor
stos
fdivr
cmp
rolb
cmp
pop
dec
ret
jp
adc
cmp
pop
sarl
sub
test
in
mov
jl
push
inc
ret
insb
mov
or
add
in
orl
shll
sub
unpckhps
les
loop
or
lret
loop
call
and
push
mov
mov
push
sub
push
cmpsl
add
cmp
cmp
je
insl
cs
adc
shlb
sti
stos
test
das
movb
xlat
inc
popa
mov
push
imul
adc
pop
push
jbe
sbb
sub
push
ljmp
lods
arpl
inc
test
adc
sub
xchg
pop
jg
inc
jns
div
in
decl
sbb
ds
xor
adc
bnd
mov
xchg
sbb
js
push
and
dec
mov
jns
push
ret
push
mov
pop
and
insl
movsb
stc
push
mov
jns
out
mov
sbb
add
or
sbb
lods
pop
mov
mov
rcrl
push
aas
jns
imul
loop
or
fiaddl
mov
adc
xchg
sub
add
adc
sbb
rcr
popf
mov
mov
and
xlat
leave
call
push
sub
mov
loopne
xchg
gs
aas
xor
inc
cmc
xchg
xlat
mov
push
xor
adc
push
addr16
cmp
adc
xor
push
rcrl
push
mov
jnp
hlt
lea
mov
mov
loopne
push
fwait
jne
cltd
clc
sub
clc
fstl
ret
aas
fstpt
sub
push
loop
mov
repnz
cmp
pop
and
movsb
mov
clc
sbb
cwtl
xchg
rcrl
pop
cmc
jb
mov
mov
cmp
jno
pop
push
sub
clc
div
jns
cs
adc
xchg
adc
popa
repz
sbb
sbb
mov
sbb
pop
sub
xlat
xor
xchg
xchg
jb
jmp
aam
push
cltd
fdiv
add
mov
fisubs
jmp
cs
sub
pop
das
or
mov
ss
cwtl
mov
or
cmp
mov
in
les
xor
hlt
jnp
pop
sub
ret
pop
mov
push
lea
or
pop
rolb
in
cmp
mov
daa
dec
adc
mov
xor
xorl
ds
sub
sbb
test
dec
aad
lods
add
repnz
push
jns
jmp
addr16
je
cmp
out
jbe
cmp
sub
pop
aam
sub
sarl
inc
cmp
adc
test
sbb
xchg
jbe
out
ss
aaa
bound
and
adc
or
xor
mov
and
adc
adc
ljmp
push
lods
mov
cmp
push
call
or
testl
fwait
inc
int3
scas
fdivrs
repz
mov
cltd
add
pop
jb
mov
lock
ja
sub
jg
loopne
pop
jb
das
pop
js
mov
adc
sbbb
or
jne
push
cmpsb
js
jns
rcrb
xor
fsubs
rep
pop
out
push
or
sbb
rorl
adcb
notb
mov
stos
push
or
mov
daa
shll
aad
cwtl
xor
inc
fcoml
mov
adc
fmuls
mov
mov
lods
pop
lea
fyl2x
cmp
push
dec
das
cmp
xchg
adc
jne
std
iret
test
and
push
ja
sbb
std
push
stc
and
xor
je
aas
imul
stos
rol
xlat
sbb
stos
sbb
push
jbe
adc
lret
jle
adc
lea
sub
lcall
imull
mov
es
jbe
stc
in
ds
and
ja
xlat
sub
mov
hlt
mov
testl
push
jns
insl
pusha
rcrl
and
cmp
cmp
lahf
addr16
ss
jae
push
push
add
lods
mov
das
mov
pop
or
cltd
xor
pop
add
std
push
sbb
pop
and
xor
jnp
sbb
push
call
sub
jae
aad
and
jmp
lret
xor
push
mov
mov
stc
xor
stos
cmp
xchg
push
pop
push
mov
addr16
stc
in
std
xor
bound
or
jmp
lds
shl
lds
xchg
fsts
das
orb
data16
dec
shl
lods
cwtl
or
ja
mov
lock
aas
pop
je
in
fisubrl
repnz
adc
pop
push
or
pop
and
aad
lods
mov
jp
push
cld
push
mov
fcompl
stos
dec
or
mov
ljmp
push
popa
push
fsts
hlt
xchg
inc
jo
push
mov
shrl
or
imul
or
aas
xor
push
xor
mov
das
in
mov
mov
push
popa
dec
pop
idivb
sti
js
xchg
cmc
push
aad
jnp
sub
test
sbb
sbb
inc
mov
or
xchg
mov
push
aaa
mov
push
adc
mov
outsb
dec
mov
sahf
dec
test
lea
fcom
inc
iret
scas
mov
lock
pop
xchg
push
stos
dec
xchg
mov
or
or
cmp
jb
inc
cmp
and
aaa
jns
sub
lock
jo
sbb
ss
bound
rclb
ss
pop
pop
sahf
pop
cltd
clc
icebp
cmc
jo
mov
cmp
cmpsl
out
or
sbb
jae
xchg
xor
add
and
sarl
cmp
jmp
xor
icebp
jne
xor
lods
imul
lods
sbb
adc
addb
stc
pop
adc
cmc
das
adc
in
aas
js
push
xor
rcll
insb
xchg
adc
sbb
jl
ja
iret
mov
mov
stc
push
lea
sbb
mov
mov
dec
push
sbb
inc
dec
jo
popf
dec
xchg
push
int
cmp
sub
fdivs
ret
hlt
lock
fstps
jle
fldcw
sahf
pop
clc
adc
stos
test
popa
rorl
inc
enter
adc
push
movsl
xchg
jb
mov
negb
mov
push
fstpt
lods
addr16
xchg
jnp
pop
stc
ja
push
cs
push
fmull
mov
cwtl
and
insl
dec
ss
and
testl
jb
pop
test
popl
pop
scas
adc
cmp
jns
std
push
adc
test
clc
cmp
inc
push
xchg
je
out
ja
pop
cltd
adc
loope
mov
sbb
mov
outsb
arpl
test
das
and
and
pop
scas
dec
and
mov
adc
cmc
and
and
mov
xor
pop
jb
push
and
xchg
ret
shl
das
divb
test
cs
js
out
fistl
adc
mov
div
into
and
ss
xor
pusha
jb
pop
lods
jns
sbb
xor
ss
push
xchg
mov
arpl
and
sub
cmp
adc
pop
rol
fists
adc
ss
push
imul
push
sbb
cmp
sbb
inc
in
cmp
cwtl
ret
movsb
sub
or
push
outsl
mov
mov
iret
xor
mov
and
push
int
sub
in
pop
push
pusha
xor
push
cmp
push
inc
and
xchg
xchg
adc
sbb
lock
xor
and
outsl
mov
or
inc
cltd
push
mov
jle
dec
push
int3
int
popa
jno
mov
loope
push
jbe
xlat
mov
mov
lret
jne
fnstenv
in
and
jb
cmp
mov
addr16
adc
jns
test
mov
stc
dec
xchg
mov
sub
xchg
jge
hlt
jns
ret
scas
cwtl
sbb
lret
mov
and
xchg
outsb
mov
pop
movsb
push
push
stos
addr16
pop
add
sub
lods
cwtl
imulb
add
stos
cwtl
xchg
mov
pop
daa
pop
mov
fmull
pop
stos
das
pop
push
repnz
push
mov
xor
cmp
les
dec
mov
stos
pop
in
enter
sub
fwait
mov
ja
aas
sbb
xchg
aam
scas
pop
shll
pop
jg,pt
ss
inc
mov
cmpsl
mov
jne
sbb
pop
xchg
inc
rclb
adc
movsl
ret
repnz
mov
adc
cmp
outsb
or
push
and
jb
sub
subl
stc
cmp
fwait
inc
fs
stc
inc
lock
daa
mov
sub
jmp
push
xchg
adc
adc
fldcw
mov
cmp
push
or
sub
xor
xchg
cmpsb
icebp
loopne
and
xlat
scas
and
pop
or
mov
je
sahf
and
push
insl
xor
push
jecxz
fcoml
and
jne
mov
pop
push
jmp
sub
pop
outsl
pop
and
sbb
mov
jp
or
aas
sbb
and
or
pop
mov
cltd
or
adc
mov
imul
jp
push
inc
lock
adc
outsb
lock
cmp
lock
test
pop
push
cmpb
and
xchg
and
aas
xor
daa
mov
hlt
arpl
cmc
iret
clc
leave
pushf
adc
mov
fwait
xchg
cmp
lods
pushf
add
out
adc
push
jbe
dec
cmp
push
and
xchg
mov
or
adc
jns
aam
xor
cli
or
cltd
dec
aam
jno
mov
push
or
in
leave
mov
mov
adc
add
icebp
push
aad
or
cltd
jns
ficoml
cmp
lret
aad
add
icebp
push
pop
pop
pop
cmpsb
hlt
mov
repnz
adc
lahf
clc
das
shll
jmp
push
mov
xor
aam
scas
lret
rcll
repz
adc
in
fists
call
insl
gs
pop
aad
dec
adc
push
shll
test
ss
int3
mov
pop
xchg
ja
cwtl
mov
fbld
lock
imul
icebp
add
xor
pop
fbld
popa
repnz
push
adc
push
and
pop
jp
sub
fsub
roll
and
jle
adc
xlat
outsb
aad
push
into
or
push
add
dec
mov
sub
dec
pop
xchg
push
scas
cmp
jg
fistpl
cmp
mov
and
mov
xor
dec
push
in
adc
ror
mov
sti
mov
sbb
fwait
mov
push
jns
cmp
mov
sbb
inc
jl
mov
sbb
or
push
imul
das
adc
ret
cwtl
adc
push
push
pop
mov
and
sub
push
adc
shrl
fcmovbe
pop
stc
sbb
aam
xchg
std
adc
add
lds
jno
or
test
adc
das
aad
repz
aam
je
xchg
aam
sub
push
add
mov
push
das
roll
sbb
cwtl
push
imul
les
call
jae
cwtl
xchg
or
pop
pop
jbe
push
pop
js
sbb
pop
cmp
sbb
mov
xchg
jp
mov
pop
push
push
aaa
dec
es
cmp
and
sub
dec
cmp
jbe
dec
cwtl
ja
mov
xor
jp
sbb
dec
sbb
sub
add
movsl
or
jb
mov
push
xor
aam
loopne
xchg
dec
inc
pop
push
ja
cs
stc
shll
pop
nop
inc
scas
pop
adc
ja
jae
ss
xchg
push
repz
lret
cltd
mov
loope
inc
xchg
adc
repz
adc
xor
jecxz
xchg
pop
adcl
sbb
mull
pop
inc
inc
stos
sbb
jmp
rorl
xchg
push
rolb
je
das
dec
adc
jns
frstor
adc
cs
iret
sbb
jo
xchg
jb
out
adc
xchg
clc
or
sbb
leave
jae
cmp
jg
cmp
adc
popf
lods
insl
sub
xor
sahf
dec
jp
mov
test
xor
sbb
xchg
mov
aaa
mov
mul
fs
pop
stos
sub
cmc
insb
test
sbb
or
imul
stc
jns
shrb
fstl
es
adc
lods
and
or
cmc
pop
mov
aad
psrld
xor
jae
or
nop
push
mov
imul
xchg
xchg
xor
push
xor
xchg
push
cltd
and
or
gs
inc
mov
mov
xchg
mov
xchg
rol
xchg
and
pop
mov
sub
or
inc
dec
sbb
sub
out
jns
inc
mov
rcrl
flds
stc
add
and
push
xchg
enter
sub
rol
cmp
gs
clc
fists
sahf
mov
lods
cmp
xchg
lret
int3
cli
lock
and
popf
mov
adc
dec
cs
aas
lds
int
aam
pushf
xchg
jmp
and
sub
cmp
lea
cmp
cmove
gs
subb
stos
sbb
int
jne
mov
push
jge
into
das
sbb
mov
sbb
push
or
lods
ret
dec
call
adc
pop
aam
mov
cld
popf
ja
push
pop
int3
hlt
xchg
sbb
and
aad
cmc
mov
xor
sbb
add
rcrl
xchg
imul
call
das
mov
mov
push
stos
pushf
fucomp
cmpsb
int3
xchg
cmc
sbb
push
xchg
pop
add
jb
andb
adc
js
push
adc
mov
adc
jns
sub
adc
mov
adc
push
lret
sub
xor
mov
jmp
sti
sbb
adc
and
jne
pop
das
adc
shl
mov
mov
adc
or
mov
xor
and
pop
push
mov
and
add
push
mov
rcr
add
mov
bound
or
divl
adc
test
psubb
xchg
dec
int
or
lret
xchg
lock
rorb
fdivrl
jne
xor
mov
adc
cmp
xor
jle
push
add
sbb
jae
sub
cmp
fcmovb
pop
enter
mov
fwait
leave
shrb
push
mov
push
sub
mov
jae
xchg
push
int3
xlat
xchg
jl
cwtl
adc
clc
mov
sbb
popfw
in
ret
lds
xchg
push
sub
pop
fcomp
or
mov
adc
ret
pushf
shl
jle
div
cmp
push
sub
jns
jno
or
and
pop
negl
or
outsl
pop
sbb
xor
insl
xchg
xchg
stc
pushl
or
lods
mov
xchg
push
insb
dec
repnz
xchg
xchg
inc
ret
gs
push
test
sbbb
negb
mov
cltd
jecxz
inc
push
scas
jnp
rorb
jmp
repnz
das
pop
lret
adc
and
ja
bound
insb
xchg
ja
ja
es
inc
je
jl
sbb
adc
mov
cmpsb
push
imul
scas
pop
jp
inc
rcrb
pop
jo
cli
pop
stc
sub
mov
xor
int3
adc
cmc
push
xor
mov
stos
icebp
imul
mov
sbb
pop
mov
rcll
or
push
xchg
push
adc
test
lods
loopne
pop
mov
inc
mov
stc
push
and
inc
sub
push
add
std
push
repnz
icebp
inc
lock
add
sub
or
ljmp
adc
fidivrs
push
lock
shl
jne
lahf
test
pop
frstor
cltd
andb
inc
inc
lret
inc
xchg
push
dec
mov
bound
shrl
lahf
out
icebp
mov
or
push
scas
pushl
adc
push
and
mov
dec
js
dec
adc
loopne
adc
fists
pop
inc
or
scas
and
pop
hlt
adc
jae
popa
loopne
ret
and
shr
sti
mov
mov
int3
test
sub
imul
fldenv
or
sti
jne
mov
rcrb
inc
aaa
imul
roll
divb
aas
xchg
adc
cmp
divl
aam
repnz
add
adc
cmc
push
ljmp
pop
scas
icebp
ret
push
pop
test
arpl
lret
int
in
xlat
or
mov
add
cmpsl
loopne
add
pop
inc
aad
and
pop
vmovaps
or
sbb
inc
rcrl
sbb
lods
ss
dec
shlb
and
cwtl
mov
popf
inc
cmp
and
mov
adc
ds
mov
sbb
xchg
or
fsubl
rcr
ret
movsb
sahf
sbb
int
lahf
jbe
push
sbb
sbb
popf
sbb
lock
xor
or
in
and
sarl
xchg
push
jb
sahf
cmp
jecxz
idiv
repz
pop
in
sub
pop
or
bound
pop
stos
sub
jp
push
cltd
or
xchg
fisubrs
cmp
adc
xchg
mov
mov
shlb
cmp
das
pop
mov
iret
adc
lods
mov
loop
lock
sub
and
ds
lock
loop
stc
out
mov
adc
fsincos
and
inc
pushf
pop
enter
mov
adc
or
inc
xor
rcrb
sbb
cs
aam
push
inc
inc
cmc
sbb
xchg
adc
cmp
idiv
std
sahf
jbe
sbb
mov
and
test
shr
lods
add
adc
xchg
jbe
jno
jae
dec
scas
or
adc
movb
pop
sbb
aam
xor
aaa
push
sbb
dec
sub
cltd
pop
mov
lock
pop
jnp
cmc
es
sahf
xchg
mul
dec
add
adc
mov
push
mov
adc
test
fcom
loop
sbb
sub
sbb
cltd
nop
mov
pop
add
xor
mov
xchg
ss
xchg
shr
jp
aam
add
push
ja
scas
loope
loope
xorl
rcrl
inc
loop
cli
xchg
cmc
cwtl
xor
xor
push
or
push
fidivrs
je
mov
adc
lods
push
pop
ss
mov
jp
or
idiv
pusha
cmp
mov
jnp
mov
or
dec
pop
pop
aam
jne
mov
lcall
and
scas
dec
int
mov
push
xor
sub
fmuls
sbb
adc
jle
push
pop
inc
sbb
inc
xor
dec
arpl
xlat
jb
imul
sarl
ds
aas
fwait
jns
cmp
test
or
mov
ds
jb
pop
das
in
movsb
loopne
cwtl
cwtl
int
jp
je
outsb
imul
push
sub
xlat
pop
ja
push
cld
mov
push
mov
adc
mov
adc
rclb
or
scas
pop
fwait
adc
mov
pusha
ss
mov
xchg
cmp
popf
mov
loope
cmp
call
mov
push
mov
mov
out
or
call
sbb
jns
fldcw
xlat
rcl
out
lods
and
mov
sbb
or
icebp
stos
xchg
into
inc
xorb
jp
ret
push
mov
push
bound
icebp
aad
sbb
mov
aaa
adcl
cwtl
adc
lods
ret
mov
mov
out
or
xor
mov
cmc
push
xchg
rcrl
lods
fnsave
mov
aad
inc
jle
xchg
pop
xchg
jge
xchg
xchg
iret
into
cwtl
adc
std
jmp
dec
lods
dec
adc
scas
in
repz
mov
mov
sbb
xchg
adc
adc
lret
ljmp
mov
xor
out
fwait
jno
cli
loop
lds
repz
orl
bound
xlat
push
mov
add
mov
ss
or
pop
sbb
mov
mov
jbe
and
lahf
mov
mov
jne
adc
fcoms
divl
inc
push
scas
push
add
lcall
and
push
push
or
adc
mov
sahf
leave
loop
cmp
movsl
loop
pop
pop
mov
add
faddp
sub
adc
faddl
loopne
adc
lret
cwtl
mov
jns
mov
sbb
jae
arpl
in
ja
adc
cwtl
and
xchg
push
in
inc
daa
sbb
mov
fnstsw
mov
sub
sub
pushf
out
lret
scas
lds
push
cmp
pop
testb
mov
xor
pusha
fcoms
cs
jb
clc
cli
scas
mov
roll
cmp
cmp
mov
je
scas
lcallw
dec
bound
and
mov
imul
pushl
jae
mov
cld
bound
adc
test
mov
and
loop
test
stc
sti
stos
sbb
popa
mov
jns
fstl
jmp
xchg
das
fcomps
sarl
lods
cmp
inc
adc
xchg
pop
pop
adc
addr16
out
loope
outsl
dec
mov
es
mov
shll
xchg
xchg
es
imul
sbb
push
fists
adc
jg
clc
mov
and
cmpsb
push
adc
push
adc
add
inc
cmc
xchg
mov
add
pop
xchg
rorl
dec
bound
int
ss
adc
mov
and
aam
cli
js
cmp
xor
pop
cmc
cmp
xor
pop
lods
cwtl
lds
es
inc
stos
adc
ja
jns
jns,pn
cmpsl
and
fdivr
xchg
mov
inc
adc
inc
push
popf
je
pop
fnstcw
sbb
lret
dec
or
aad
scas
adc
int
mov
stos
into
cwtl
jbe
into
in
inc
and
adc
xor
mov
ja
push
ror
and
scas
nop
outsl
call
sbb
outsl
sbb
xchg
mov
pop
ror
push
ret
pop
push
scas
mov
mov
fldenv
arpl
sbb
and
adc
es
mov
inc
add
sti
push
mov
cwtl
scas
mov
call
pop
ss
flds
xor
lods
sub
adc
push
inc
pop
out
cmp
fistpll
mov
and
or
lods
cmpsb
test
repz
xor
xor
in
jge
sbb
inc
je,pn
outsb
and
fstl
mov
dec
lret
aam
mov
fists
push
iret
stc
fiaddl
cmp
push
sbb
dec
mov
adc
mov
lods
cmp
xchg
xor
pop
and
aam
lret
sub
xchg
inc
mov
cltd
push
pop
sbbl
mov
cmp
sbb
mov
movsl
jns
clc
jmp
jmp
push
stc
mov
add
jno
dec
mov
sbb
mov
or
nop
sub
out
jne
rcll
cmpsl
cmp
mov
mov
push
or
xor
in
pop
test
inc
rcrl
cltd
inc
sub
or
bound
add
mov
das
imul
jg
in
lods
popa
addb
sub
jmp
rorl
mov
rclb
xchg
fdivs
push
or
mov
cmp
stos
jle
js
dec
icebp
xchg
xorl
xchg
and
or
cmp
gs
adc
adc
cwtd
cmp
or
leave
pop
and
imul
adc
scas
shrb
add
sbb
mov
mov
movsl
loop
add
push
mov
loopne
arpl
js
shlb
push
das
mov
inc
adc
adc
xchg
dec
pop
cwtl
das
lret
add
sti
xchg
test
int3
rcrb
or
sub
mov
mov
adc
push
sub
notl
loop
dec
or
clc
dec
and
mov
xor
add
stc
inc
sbb
xchg
push
mov
jmp
and
jp
mov
jne
pop
stos
les
fsts
addl
inc
fdivl
push
adc
mov
sub
dec
loope
std
jmp
jbe
pop
push
pop
mov
lock
pop
aaa
clc
inc
lds
add
test
add
jns
jbe
add
in
incb
xchg
inc
clc
mov
mov
jno
mulb
imul
xchg
xchg
adcb
xor
sub
or
fcomps
orl
sub
bound
mov
cwtl
fwait
pop
push
mov
xor
xchg
sbb
mov
pop
sbb
shlb
rcl
scas
leave
cmp
push
xor
sbb
xor
cmp
fbstp
sbb
sub
aaa
enter
pop
xchg
jb
stc
pop
pop
mov
lods
lock
mov
int3
push
cwtl
outsl
xchg
pop
mov
sbb
mov
adc
into
filds
fdivrs
add
adc
xchg
rorb
test
imul
sti
pop
sbbl
push
xor
adc
ja
mov
scas
std
push
jns
push
outsb
sbb
notb
lret
in
mov
push
cltd
mov
xchg
pusha
pop
push
call
xchg
insb
mov
xchg
and
dec
cwtl
and
in
adcb
clc
mov
cmpsl
inc
xor
add
mov
sbb
mov
push
bnd
jb
xchg
xchg
jb
push
movsl
lret
xchg
dec
jge
sbb
lcall
out
cmp
sub
jb
sbb
cmp
movsb
fisubs
inc
lds
and
roll
adc
popf
mov
xor
sub
push
xor
cmp
rcll
mov
int
imul
je
outsb
shlb
loop
and
jge
testb
push
jge
mov
shll
sbbb
xor
sub
repz
ss
out
test
push
lds
pop
sti
mov
lret
loopne
push
sub
mov
push
shrb
xor
fidivrl
fldenv
imul
loop
adc
and
es
xchg
test
xchg
jge
repz
outsb
mov
shrl
sbb
mov
pushf
stos
sbb
xor
sbb
push
lock
ja
push
xchg
insl
jbe
in
or
dec
sbb
fistps
movsl
rolb
mov
cwtl
cmp
data16
push
scas
add
dec
sbb
sub
shrl
pop
push
jne
pop
sub
xchg
mov
adc
mov
cltd
call
cwtl
stc
sub
push
jle
out
sub
mov
pop
cmpsl
push
and
push
mov
test
push
fsts
aam
push
xor
push
pop
and
daa
mov
pushf
or
sbb
xor
out
out
ret
adc
push
cwtl
mov
je
lods
loopne
pop
outsl
cwtl
mov
and
ss
stc
leave
pop
sbb
pop
scas
dec
imul
jae
ret
push
pop
inc
std
stc
adc
aam
sub
loope
cltd
push
xor
rcrl
stos
jge
mov
inc
in
xor
push
xchg
sbb
pop
mov
clc
rolb
xchg
cs
dec
mov
mov
pop
push
stos
hlt
stc
xchg
cltd
inc
dec
push
sbb
sbb
sub
lock
push
xchg
cmpsb
sbb
stos
adc
xchg
ja
push
sub
dec
sbb
mov
scas
add
sub
out
jecxz
push
cmc
or
push
aas
mov
sub
std
sub
jl
cwtl
push
adc
sub
sub
jp
ror
jne
xchg
cmc
pop
pushf
sbb
inc
or
mov
jnp
loopne
adc
mov
cld
mov
jne
mov
daa
push
xchg
out
out
cmp
sbb
pop
mov
xchg
ja
xchg
lock
cmp
adc
jmp
testl
divl
push
dec
pop
adc
cmp
pop
lods
xchg
xchg
add
adc
jno
xchg
or
mov
ss
lahf
leave
jge
adc
and
push
dec
scas
rcl
jmp
or
adc
pop
rcrl
je
dec
aad
clc
dec
stc
xor
adc
jb
in
xchg
pushf
sbb
xor
xchg
dec
rorb
cmpsl
dec
jl
mov
fldcw
in
mov
adc
cld
test
les
or
cmp
das
test
jle
mov
mov
cmc
lahf
mov
xor
in
rcll
dec
fwait
aad
jp
daa
and
dec
pop
push
adc
inc
fwait
pop
xor
ja
je
mov
dec
pop
nop
xchg
stos
loopne
shll
sub
push
scas
xor
sbb
sbb
xor
xchg
rclb
jb
adc
add
lret
sub
fdivr
inc
xor
xor
pop
popa
adc
or
sub
orl
mov
sbb
shl
push
push
mov
dec
mov
repnz
jo
cmpsl
lret
mov
adc
aaa
inc
lds
push
imul
and
jne
shrl
xor
pop
mov
mov
inc
sub
push
and
sbb
lods
pop
sub
fnstcw
lods
gs
sbb
jns
and
jb
aam
pop
inc
popa
test
sbb
daa
lahf
stos
fdiv
add
push
mov
aam
bnd
push
push
inc
xor
jne
cmpsb
adc
roll
inc
jns
mov
sub
add
lods
clc
fs
aad
jne
xchg
jne
insb
pop
mov
jno
xor
orb
and
hlt
das
or
ret
out
jb
stc
add
test
stos
xor
mov
mov
jne
adc
adc
jb
gs
popa
popf
or
pop
mov
outsb
arpl
pop
cmpl
aad
sbb
mov
cmp
adc
sahf
adc
rcl
sbb
mov
into
xchg
daa
rcrb
pop
mov
cwtl
mov
xchg
aad
xchg
mov
aaa
lods
jns
jp,pt
adc
out
pushw
dec
rcrb
leave
adcl
rcll
sarb
fwait
cmp
xchg
push
lahf
js
stc
add
sbb
lods
cld
shl
out
pop
or
stc
push
cmp
ficompl
inc
xor
add
mov
cmp
call
scas
mov
push
cmp
sbb
xchg
int3
xor
mov
cmpsl
int3
mov
adc
dec
cs
popf
popa
xchg
push
pop
add
xor
xchg
and
or
insl
into
add
jp
lret
decl
push
mov
xor
push
test
ljmp
cmpsl
jg
xchg
sub
stos
or
mov
sbb
dec
jnp
push
in
adc
mov
test
pop
jne
push
std
andl
or
xchg
mov
pop
xor
adc
mov
iret
mov
fcmovu
pop
inc
sbb
int3
push
pop
mov
pop
xlat
xchg
and
dec
sbb
pop
pop
xchg
gs
and
or
cwtl
push
aaa
sbb
movsl
push
mov
mov
notb
cmp
jns
test
mov
std
pop
push
sbb
pop
xchg
ret
jp
xchg
test
leave
xchg
lods
pop
cwtl
mov
and
out
inc
pop
push
movsl
jge
push
adc
mov
rcll
xor
stc
lret
addl
push
enter
insl
push
mov
mov
jge
adc
sub
jle
aad
bound
and
inc
jb
iret
inc
sub
repnz
push
xor
dec
xchg
xor
aas
mov
aas
es
push
sbb
xchg
sub
xchg
hlt
ljmp
sbb
loopne
add
sub
scas
xlat
and
sub
popf
pop
iret
out
jns
sub
sti
icebp
inc
fbld
fdivrl
ficomps
xlat
scas
inc
sahf
test
mov
cmc
cmp
mov
sbb
mov
jl
push
aam
xor
out
push
dec
lea
mov
xchg
insl
and
gs
popa
pop
out
adc
cmp
cmp
in
jo
mov
cli
mov
mov
ss
mov
lea
and
sar
or
gs
lock
pushf
push
inc
adc
adc
sbb
xor
rol
jno
push
push
and
inc
and
cwtl
bound
dec
cmp
jae
cmp
mov
mov
mov
push
je
xchg
push
jns
pop
lea
andb
or
outsb
jne
push
jb
push
xor
fnstenv
xchg
adc
das
or
cmpl
andl
cmp
jle
mov
or
in
inc
bound
push
mov
add
jp
ss
sub
aam
adc
roll
inc
shlb
pop
mov
daa
push
stc
sti
mov
rcrl
outsb
push
cmp
addr16
xlat
sbb
pop
xchg
cmpb
adc
rolb
push
shrl
hlt
xor
jecxz
adc
cmp
and
sbb
stos
loope
mov
shll
mov
in
mov
in
mov
mov
jecxz
mov
and
mov
mov
popa
add
stos
lods
sub
dec
xchg
cltd
dec
cwtl
jb
sub
cmp
sbb
xchg
pop
mov
push
in
fnstsw
jne
subb
dec
cwtl
mov
rorb
sbb
xor
push
lret
cs
jns
repnz
data16
dec
popf
test
mov
pop
or
mov
mov
fcomi
mov
or
sbb
mov
scas
mov
ss
rcll
jnp
xchg
xor
xchg
sub
scas
int3
xor
lods
stc
cwtl
jge
in
stc
add
arpl
roll
out
imul
jge
shlb
cmp
pop
rclb
sub
mov
aad
aam
xchg
mov
jmp
mov
cld
add
movsb
xchg
cmc
sub
mov
and
or
push
pop
dec
jge
stc
xchg
icebp
idivb
hlt
inc
adcb
sbb
test
sbb
sub
adc
clc
mov
mov
jo
and
push
mov
rorl
nop
xchg
mov
adc
inc
enter
stc
mov
dec
xchg
loope
lret
sbb
adc
outsl
mov
mov
inc
flds
out
sub
in
cmp
in
loopne
jns
ret
aaa
clc
or
push
pop
sub
insb
inc
std
push
je
mov
push
sbb
das
popf
ja
int
incl
jp
mov
mov
loope
sbb
mov
in
popa
mov
jp
repz
aam
pop
mov
and
or
lds
sbb
iret
jp
adc
ss
test
mov
push
daa
cmp
das
stc
stc
push
adc
sub
jne
arpl
movsl
mov
adc
mov
repz
adc
cs
les
pop
cltd
cmp
aaa
cmc
push
pop
shrl
push
xchg
push
cmp
mov
scas
repz
sub
inc
fnstcw
add
ss
lods
xor
cmp
mov
lock
mov
or
mov
push
rcrl
jns
jmp
pop
cmp
push
mov
cltd
orl
test
js
sbb
adc
adc
test
add
pop
stos
cltd
sub
xor
aas
sub
or
imulb
jp
push
sub
mov
test
clc
clc
scas
xchg
lods
stc
jecxz
mov
rolb
scas
add
sbb
mov
xchg
xor
xor
lock
rcr
jecxz
or
shll
xor
add
pop
dec
xor
les
out
sbb
or
sub
lock
jg
clc
or
fstl
adc
cmc
imul
das
xor
push
or
sbb
jnp
xchg
or
dec
ror
jp
ss
lock
jne
mov
ja
sbb
ljmp
pop
pop
mov
pop
pop
xor
add
cwtl
sbb
xor
scas
pushf
test
sub
xlat
fmuls
fcmovnb
sbb
scas
pop
clc
fstl
lds
loopne
fcoms
js
jb
adc
cmpsl
adc
inc
xchg
mov
sub
mov
jge
push
lret
shll
cmpsl
push
sub
ret
popa
dec
pop
lret
leave
shll
push
mulb
push
mov
out
jge
in
aas
loop
or
inc
pop
sub
out
adc
ss
mov
cmp
pushf
mov
sbb
es
adc
pop
inc
cwtl
ret
enter
jbe
push
adcb
enter
test
jno
jbe
push
jb
sub
sub
xchg
pminub
jns
fldcw
icebp
dec
push
pop
scas
adc
mov
fwait
div
jb
rclb
repnz
rcll
cmc
cltd
xor
fdivs
mov
cmpl
jb
xchg
mov
or
imul
mov
jp
xchg
mov
add
xchg
or
pop
fstpt
or
adc
lcall
call
ret
xor
adc
lock
sbb
das
sub
pop
mov
insl
pop
mov
sub
add
push
sub
das
cld
sbb
jno
dec
in
lods
rcrb
cltd
scas
vunpcklpd
lods
mov
orb
aad
dec
clc
sub
scas
adc
add
lods
push
sbb
inc
xor
fdivs
add
and
and
fwait
stos
ja
pop
mov
out
popf
pop
hlt
in
jnp
push
out
inc
mov
push
stos
mov
add
push
mov
testb
cmp
retw
pop
xorb
ljmp
mov
xchg
outsb
rcr
push
cmpsl
aam
lret
repz
and
mov
sbbl
sub
rcr
mov
sub
mov
popl
push
popw
add
test
mov
pop
pop
inc
xchg
push
sarb
jae
mov
stos
cltd
jb
std
or
rclb
xor
cmp
mov
lret
jl
clc
in
pop
push
xor
cmp
mov
push
xchg
xchg
ja
es
shll
xor
cwtl
mov
rclb
mov
adc
dec
or
mov
enter
inc
xchg
cmp
lret
xlat
adc
dec
add
cltd
addr16
in
cmp
dec
jnp
inc
movsl
mov
jne
add
or
or
push
hlt
mov
ds
mov
jnp
mov
or
cmp
imul
sar
les
sbb
roll
aaa
cmc
out
push
xchg
popa
stc
mov
movsl
hlt
imul
push
sti
mov
rcl
pop
aad
push
or
mov
imul
sbb
lret
enter
dec
idiv
fmuls
push
xor
scas
sti
adc
jp
or
cmp
cmp
push
in
sbb
mov
sbb
xor
mov
inc
arpl
xor
xchg
and
xchg
fcos
cmp
adc
test
mov
xor
je
cmp
jno
fcoms
stc
adc
loop
das
mov
mov
jb
leave
dec
or
fldt
adc
inc
dec
divl
aad
add
fdivrs
dec
ret
adc
push
pop
shl
hlt
sti
cwtl
aad
into
jp
sbb
mov
rclb
shrl
mov
jae
test
int3
movsb
and
cmc
int
cmp
mov
jge
cwtl
js
pop
jno
mov
or
mov
arpl
pop
cmpl
cmp
stos
scas
jge
fiadds
push
sbb
sub
xlat
dec
stos
xchg
sti
or
cmp
mov
or
notb
iret
ret
push
shrl
out
das
sti
push
roll
mov
and
arpl
insb
cli
pusha
xlat
jno
out
bound
dec
es
sbb
cmp
jb
push
adc
gs
lret
cmp
test
mov
loopne
cmc
mov
loope
pop
push
adc
mov
sbb
sub
mov
mov
popa
jl
cmp
jne
cli
or
icebp
pop
pop
je
nop
inc
cmp
xchg
scas
xor
enter
cwtl
mov
imul
and
push
imul
and
sbb
add
xor
scas
xchg
adc
ret
loopne
imul
fs
sbb
xchg
inc
cwtl
inc
or
rcrl
outsb
jb
dec
stos
arpl
cwtl
mov
cwtl
inc
adcb
sbb
mov
mov
cmp
mov
adc
js
mov
sbb
sub
push
and
testl
cltd
or
mov
sub
clc
inc
push
jae
sub
out
roll
xchg
pop
and
sbb
hlt
mov
fnstsw
xor
fcomps
or
lock
rorb
mov
movq
inc
es
jl
xlat
stos
out
mov
fistpl
gs
xchg
ja
mov
or
shlb
push
popa
ficompl
loop
rcrb
fwait
xor
fwait
cmp
mov
invd
push
and
push
and
sbb
mov
sar
fsts
std
adc
jbe
inc
jmp
iret
bound
cmc
imul
pushf
roll
add
aad
cmc
shlb
repz
popa
inc
adc
bound
sahf
call
loop
fwait
sbb
pop
pop
xchg
push
and
out
or
jp
stos
xor
fwait
aas
outsb
cmp
and
or
jb
xor
cmp
push
inc
lods
popa
rorb
mov
or
aas
pop
cmp
xchg
imul
push
mov
sub
dec
mov
imul
sbb
mov
mov
test
shll
mov
xchg
xor
inc
insl
mov
fldcw
adc
adc
cmpsb
pop
shll
and
fsubs
xchg
push
pop
and
icebp
jl
cmp
jno
arpl
cmp
mov
inc
dec
lock
sbb
fdivr
xor
push
pusha
pop
fadds
imul
add
sbb
push
pop
mov
or
nop
jl
out
loop
dec
aam
icebp
mov
push
stc
sbbl
cmp
jg
push
cmc
adc
cwtl
lods
pop
stc
push
push
sbb
sbb
mov
add
dec
fcoms
pop
jb
lock
mov
cltd
pop
scas
dec
rorl
pop
fcomps
push
das
add
test
sahf
in
or
fldenv
movsb
jo
das
xor
fisubrl
xor
fldln2
dec
roll
xchg
mov
mov
cmp
loop
loope
fstpt
inc
cltd
and
or
dec
push
dec
xchg
jp,pn
mov
fmull
jbe
xchg
ss
xorb
popf
les
stc
adc
cmp
pushl
stos
mov
int
lock
xchg
push
cmp
repnz
test
pop
push
push
and
outsl
lcall
mov
out
cmpb
test
outsb
lcall
pop
dec
sbb
iret
scas
mov
sub
and
incl
push
mov
cmp
inc
lods
add
or
xor
sahf
movsl
mov
rorl
fsts
push
cmpsl
push
and
insl
or
sub
shll
pop
sbb
arpl
repnz
mov
sbb
and
xchg
sub
pop
cmp
mov
cmp
push
xor
or
push
int
cli
mov
push
add
inc
or
xchg
inc
sub
mov
scas
cmpsl
cmp
mov
iret
pop
xchg
push
sub
andl
adc
notb
mov
mov
adc
fwait
out
adc
mov
lahf
stc
cmpsl
scas
mov
pop
testl
mov
cltd
dec
adc
mov
mov
jae
ja
fidivs
imul
xchg
mov
scas
or
mov
cltd
inc
scas
adc
pop
pop
dec
arpl
lock
in
je
mov
je
scas
sbb
mov
jne
xor
cmp
cmp
sub
mov
and
push
cmc
cmpsb
pop
cmc
and
aas
bound
stos
sbb
push
pop
sbb
pusha
xchg
js
out
fsub
sahf
das
sti
aaa
std
pop
or
cwtl
push
movsb
lahf
shl
divl
ja
adc
jne
repz
mov
push
add
lock
das
pop
mov
pop
lea
cwtl
shrl
push
mov
stc
sbb
das
and
mov
daa
ja
adc
push
bound
cmp
in
sbb
fisubrs
push
repnz
push
push
icebp
fistpll
popf
mov
xchg
and
mov
stos
scas
sub
mov
adc
clc
dec
mov
loop
ljmp
pop
jle
jmp
jae
lahf
or
cwtl
push
outsl
sbbl
push
fcmovbe
push
pop
pop
or
imul
les
adc
fs
lahf
stos
aaa
mov
sbb
and
dec
jae
adc
arpl
rcrb
lcall
add
jp
xor
push
and
push
sti
popf
nop
mov
adc
mov
xchg
inc
pop
in
icebp
push
dec
adc
push
movsl
adc
loopne
jno
xchg
aam
test
mov
dec
stos
push
pop
xchg
cmc
mov
je
ss
fdivrl
push
ja
fildl
daa
mov
popf
rolb
repz
mov
adc
adcl
shl
push
cmpl
mov
cmpsb
and
cld
xchg
fnstsw
ss
cmp
mov
xchg
push
std
cmp
stc
xor
xlat
imul
pop
pop
into
lret
adc
shrl
or
or
push
xor
icebp
sbb
xchg
xchg
push
pop
cmp
jge
push
clc
adc
orb
push
push
and
in
push
mov
dec
scas
push
outsl
setg
in
ja
mov
cmp
in
or
and
xchg
xchg
adc
aam
insb
dec
cmp
sahf
or
and
aad
adc
aam
insb
cli
sub
jnp
push
sub
aad
dec
bound
jno
mov
gs
push
out
jecxz
lahf
js
fdivrl
pop
cmp
mov
stos
outsl
sahf
xor
mov
mov
icebp
cmp
pop
repnz
rcll
mov
adc
pop
adc
je
icebp
pop
jns
popa
jbe
ja
dec
insb
lahf
push
xchg
push
lret
scas
frstor
xchg
adc
adc
mov
mov
jno
xor
cmpsb
repz
in
push
clc
and
xor
insb
icebp
scas
mov
shr
je
sbb
inc
aad
js
xchg
ret
daa
xchg
jno
sub
add
add
fstps
dec
stos
cmp
das
hlt
mov
or
jp
inc
enter
jb
jne
into
cmp
ja
shlb
xchg
sbb
xchg
jne
mov
cmpsl
push
lods
ret
push
and
pop
push
mov
loopne
xchg
sbb
push
dec
in
and
sub
xlat
cmpsl
or
xchg
xchg
stc
push
in
jae
sbb
insb
mov
push
icebp
push
pushf
pop
push
mov
adc
fcom
adc
imul
in
dec
sti
lds
xor
adc
clc
lods
nop
repnz
cmc
not
adc
xchg
mov
pop
sbb
fldcw
or
sbb
pop
hlt
ss
not
call
mov
in
pop
jns
pushf
fnstsw
imul
adc
xor
push
ret
mov
sbb
sbb
cltd
jns
and
dec
sub
pop
les
xchg
enter
in
movsl
leave
out
dec
outsb
negl
xchg
js
pop
mov
sahf
daa
scas
jle
rcll
fidivs
xchg
stc
mov
lgs
lods
aaa
mov
ja
and
xor
cltd
fidivrs
adc
jbe
jnp
es
adc
jns
imul
addr16
mov
scas
stc
add
push
mov
mov
xor
push
sub
sbb
lcall
or
push
adc
lret
lods
xorl
lock
mov
stos
sahf
mov
push
mov
pop
sbb
int
cltd
sbb
std
mov
push
je
pop
sub
mov
and
pop
adc
adc
adc
iret
dec
inc
aad
lret
or
xor
sbb
aas
sahf
push
push
movsb
or
mov
and
in
ljmp
or
push
repnz
sbb
push
dec
add
mov
jo
imul
cmp
or
ds
sbb
cltd
mov
arpl
nop
sub
hlt
mov
fmull
dec
mov
fdivs
jmp
inc
and
push
scas
sbb
xor
jecxz
xlat
cwtl
inc
les
sub
fcmovu
dec
mov
sub
clc
xchg
adc
jns
pop
sbb
sub
stc
dec
mov
push
adc
frstor
btcl
xor
outsl
iret
mov
stos
std
lods
sar
jl
or
icebp
push
les
mov
not
les
sbb
mov
adc
test
xchg
cmp
jp
fcmovne
sub
lcall
packsswb
ds
adcl
mov
sbb
in
xor
ret
push
cs
sbb
test
stc
inc
fbstp
daa
add
movsb
xor
adc
add
mov
sbb
scas
mov
addr16
add
xchg
push
mov
cltd
xor
daa
sar
add
or
je
into
mov
out
and
out
ja
sbb
ficompl
mov
pop
movlps
cmc
dec
std
inc
arpl
sub
pop
scas
stc
push
int3
aam
test
pop
lret
jb
popf
xlat
jne
roll
shrd
movsb
popa
and
hlt
lock
cmp
mov
out
mov
das
pop
or
push
jp
aam
sub
dec
xchg
daa
cmpsl
and
sahf
test
stos
mov
pusha
imul
mov
mov
divl
adc
shll
call
or
sbb
std
add
xor
data16
ja
or
dec
sbb
mov
insb
mov
aas
push
adc
xchg
test
adc
fldenv
push
pop
lret
repz
or
call
idiv
jns
out
js
aam
shll
ljmp
in
ret
lret
aad
sub
cmp
sarb
nop
jne
ds
imulb
push
jmp
jecxz
sub
insb
push
xor
adc
add
aam
cmp
fldcw
mov
inc
sbb
and
mov
pop
mov
out
mov
pop
and
shrl
dec
pop
cmc
inc
ret
cwtl
mov
cmpsb
adc
icebp
xor
jo
push
mov
jb
and
push
hlt
pushf
into
sub
loopne
xor
pop
pop
xchg
daa
mov
cld
scas
into
mov
jae
aaa
push
scas
add
ss
xchg
sub
cli
stos
sahf
xchg
add
jecxz
mov
icebp
stos
pop
je
es
shlb
pop
js
and
scas
jb
push
adc
fwait
mov
inc
dec
and
and
adc
popa
addr16
jae
testb
push
mov
pop
fbld
sbb
and
lret
or
loope
lods
lcall
rcll
xor
pop
jns
mov
and
push
cmp
rcl
popa
cwtl
lcall
adc
add
push
jmp
xchg
repz
lcall
xchg
nop
subl
jg
pop
test
push
xor
js
loope
addb
adc
fnstenv
mov
cmp
cmp
jp
adc
jo
lods
mov
adc
mov
rorl
mov
xchg
xor
fstl
jb
sarl
inc
or
bound
mov
mov
xlat
xchg
lock
mov
adc
pushfw
mov
xor
icebp
mov
sbb
bound
hlt
add
cmp
mov
aad
ja
rorl
sahf
movb
rol
cltd
cwtl
into
inc
jae
mov
cmp
mov
sar
fstl
push
push
dec
mov
das
mov
xchg
lock
dec
sbb
sub
jo
fldt
jbe
ret
aaa
mov
push
lods
jns
adc
sub
sub
push
mov
into
aas
and
leave
rcl
xlat
scas
mov
xor
mov
fbstp
xchg
pop
and
mov
dec
xor
stos
es
jg
pop
sbb
call
xor
xor
icebp
jo
loope
mov
clc
xlat
imul
lds
adc
jne
jns
push
jae
push
xor
dec
outsb
pop
sbb
and
xchg
stos
pop
push
push
stos
fcoms
pop
jns
out
sti
sbb
dec
loop
mov
jae
xlat
mov
push
or
jnp
push
xor
cmp
ss
mov
sbb
pop
mov
push
lock
xchg
cwtl
dec
ret
mov
ret
cmp
push
fsubs
andl
pop
jbe
insb
imul
push
scas
xor
imul
jb
pop
xor
cmp
test
aam
pop
das
and
adc
gs
fidivrl
xor
fwait
clc
push
jecxz
xchg
lahf
push
lret
jno
xchg
test
sbb
out
mov
into
fcompl
sbb
rcrl
mov
mov
popa
xor
sub
sahf
js
jbe
sti
mov
xor
cltd
shl
shll
stos
lea
cli
aam
aad
les
pop
sbb
adc
and
pop
mov
mov
jge
jno
fimuls
push
cs
fistl
sbbl
or
jmp
jg
pop
mov
adc
nop
test
mov
imul
cmc
sub
cmpsl
fiadds
aam
mov
xchg
xchg
or
sbb
sbb
cli
cmp
inc
stos
adc
into
push
pop
das
repnz
cmp
xchg
sbb
popa
inc
aas
xchg
pop
dec
mov
jo
xor
pusha
ljmp
rcrb
pushf
clc
push
imul
push
je
xchg
roll
pop
xor
cli
test
jo
sbb
dec
out
inc
lahf
sbb
in
sbb
adc
push
cwtl
sbb
xchg
cmp
cmp
sbb
cs
push
mov
fsubs
cwtl
and
push
push
cmp
or
adc
sub
pop
or
dec
adc
lea
push
sbb
aad
lock
cmp
adc
pop
out
xlat
cwtl
push
push
cmp
push
push
mov
cltd
stc
xchg
adc
mov
sbb
mov
xchg
pop
mov
add
push
roll
lret
cwtl
cwtl
mov
jne
cltd
or
add
lcall
jmp
test
enter
adc
popf
data16
cwtl
clc
scas
out
out
adc
lock
jne
enter
aaa
stos
test
xchg
adc
or
adc
das
or
out
cmp
push
ljmp
das
dec
push
iret
lock
adc
push
jb
cmp
pop
shlb
jbe
or
push
je
loop
xchg
subb
sbb
adc
ja
arpl
mov
add
mov
sub
lock
repnz
imul
sbb
test
sub
xchg
cwtl
fxtract
inc
jge
fcoml
imul
cmc
inc
dec
lret
icebp
ret
cmp
xchg
jb
int
mov
sbb
sub
or
mov
adc
sbb
push
cmp
or
push
popa
lods
sub
sbb
imul
test
enter
scas
stos
mov
sti
ficoml
mull
push
insl
push
mov
mov
mov
push
mov
xchg
cmpl
stos
add
and
push
loopne
cmp
push
enter
sarb
adc
xchg
xchg
mov
dec
adc
cmpsl
push
fsubr
inc
push
mov
pop
adc
pop
fs
xor
push
xchg
aam
sub
xchg
bound
dec
scas
sahf
xor
xchg
repz
mov
xchg
arpl
call
mov
bound
ficomps
scas
push
cmp
sbb
and
mov
int3
cwtl
jb
jp
icebp
or
cwtl
repnz
dec
push
adc
cmp
xchg
enter
adc
pop
mov
jns
adc
cwtl
push
sar
mov
aam
stc
pop
mov
stos
es
xor
mov
sub
jb
pop
rcl
lods
jmp
mov
test
stos
xor
adc
aad
mov
xchg
sbb
lods
scas
hlt
pop
sub
mov
inc
push
cmc
test
push
sbb
adc
imul
inc
bound
mov
cmp
sub
scas
or
sbb
movsb
lock
lds
cmp
xchg
pop
test
xor
sahf
mov
mov
clc
sbb
das
adc
insl
stos
fsubrs
sbb
and
or
inc
mov
jmp
jp
xor
or
mov
in
push
repnz
test
fsubs
push
dec
stos
test
push
add
push
jns
lret
bound
scas
pop
je
inc
inc
iret
xchg
and
xchg
and
cwtl
xor
xchg
jne
cwtl
sbb
sbb
das
xchg
js
xor
sub
pushf
sub
cmp
xlat
push
outsl
mov
or
cwtl
xchg
xor
and
lahf
repnz
cmpsb
push
leave
cmc
adc
shll
sbb
int
fucom
call
fwait
sbb
xchg
jl
sbb
roll
inc
pop
cmp
pop
loopne
adc
test
or
cmp
sbb
aam
cs
cmc
mov
pop
leave
sub
mov
scas
insl
int
mov
arpl
add
cmc
cmp
push
movsb
mov
popa
hlt
push
and
cmp
push
lock
push
mov
loopne
xor
lret
cli
rorl
mov
mov
mov
xor
rorl
pop
inc
imul
sbb
mov
add
adc
popa
data16
adc
xor
dec
rcr
pop
subb
cmpl
add
push
push
cwtl
hlt
sarb
jnp
xchg
sub
mov
scas
pop
and
repnz
xchg
iret
out
or
roll
mov
sub
sub
jb
sbb
roll
subl
jnp
and
lahf
ret
imul
les
sbb
push
out
jae
dec
or
bound
lcall
xchg
pushf
pop
sti
sub
scas
aas
mov
sub
inc
ret
push
rcll
lods
or
mov
cmp
sbb
sbb
adc
in
xchg
or
daa
mov
outsl
push
rcrb
test
in
xchg
lcall
cltd
and
or
dec
mov
push
mov
ds
pop
mov
xchg
fadds
sahf
mov
mov
xor
cmpsb
push
push
ds
mov
repz
push
or
das
or
mov
cmp
lods
popa
outsl
mov
fnstenv
stos
fcoms
push
mov
subl
movsb
shlb
dec
or
adcl
xchg
mov
es
leave
jg
and
push
imul
hlt
push
xor
jae
mov
shlb
push
hlt
insl
mov
xchg
ljmp
imul
cmc
imul
pop
sub
jb
or
fs
push
push
or
leave
add
out
mov
sub
movsb
mov
cmpsl
daa
ret
xor
aad
imul
jno
daa
je
jne
adc
in
cmc
rorl
cwtl
adc
mov
mov
sub
jae
pop
dec
inc
hlt
adc
jne
enter
mov
std
mov
xor
push
outsl
inc
or
lock
push
mov
rclb
mov
mov
xchg
mov
push
adc
mov
icebp
call
aam
jle
aam
xor
inc
sbb
mov
roll
push
mov
je
nop
lea
adc
pop
pop
push
or
stc
loop
data16
jmp
popf
fsts
sbb
sub
fiadds
push
push
sbb
fsts
sub
dec
mov
mov
rclb
adc
int
and
mov
js
daa
push
or
add
hlt
and
adc
fwait
push
push
xor
cmp
adc
stc
fwait
imul
cmp
stos
mov
pop
lods
pop
pop
je
pop
sbb
repz
adc
adc
jae
enter
xchg
pop
jo
xlat
mov
scas
xchg
in
mov
cwtl
dec
and
jb
or
mull
and
pop
cltd
mov
flds
rcrb
cmc
pop
ja
adc
push
fcomip
notl
loopne
dec
cmp
enter
adc
pop
sub
mov
push
xor
pop
daa
pusha
lret
push
jns
adc
sbb
pop
loope
lret
cmp
daa
aad
and
push
fcomps
xchg
adc
daa
add
ja
push
push
je
mov
mov
fstps
pop
hlt
or
pop
pop
mov
push
dec
or
add
bound
dec
sub
pop
clc
mov
mov
and
inc
mov
xchg
jl
cmc
mov
cmpsl
mov
jo
add
sbb
stos
cmp
dec
out
jne,pn
inc
or
and
mov
xchg
xchg
xadd
or
ljmp
icebp
cmp
lahf
mov
aas
dec
xchg
ja
sbb
push
or
jb
push
fisubs
mov
dec
in
mov
pop
mov
jno
mov
nop
xchg
les
or
sbb
outsb
hlt
dec
jbe
xor
mov
inc
enter
dec
push
adc
movsb
ja
cmp
or
jl
imul
subl
sub
mov
push
hlt
xor
jb
cmp
cmp
jb
or
sahf
sub
aad
cli
dec
ja
pop
roll
out
jne
ja
cli
and
rcrb
dec
inc
or
std
sbb
lods
lret
pop
sub
add
cmc
leave
subb
insb
pop
mov
je
rolb
dec
negb
sbb
clc
insb
mov
sbb
into
cltd
popf
adc
das
or
ja
rcrl
jmp
pop
jns
mov
out
dec
and
icebp
pop
pop
dec
fcompl
clc
addr16
mov
cwtl
mov
sub
pop
xor
imul
mov
sbb
push
or
adc
pop
xchg
mov
ds
shll
scas
lret
xchg
out
out
push
push
shll
xchg
cltd
ds
push
sub
ds
push
dec
gs
inc
pop
or
mov
mov
ror
mov
xlat
or
stc
je
enter
sbb
dec
mov
push
cltd
mov
cli
xlat
push
pusha
and
pop
sti
xlat
inc
pop
pop
pop
push
adc
in
int
mov
sbb
out
xchg
mov
mov
repz
pop
cmc
pop
sbb
lds
outsl
js
repz
inc
push
and
lock
ret
lock
sbb
dec
cwtl
mov
xchg
jns
mov
push
aad
scas
mov
mov
fldcw
adc
dec
data16
pop
sbb
push
cltd
pop
insl
movsl
pop
hlt
xlat
pop
pop
nop
lea
sub
inc
push
lock
sbb
or
sbb
xchg
fisubrs
mov
xlat
sbb
xor
inc
loopne
stos
cmp
sub
pop
scas
int3
pop
adc
xor
ljmp
repz
adc
xor
inc
push
cmp
movsb
fwait
adc
xchg
mov
gs
addr16
xlat
adc
sub
pop
xchg
pop
cwtl
mov
fdivl
stos
or
lahf
mov
lahf
sbb
outsb
or
jb
xor
mov
lcall
jp
lock
pop
rcrb
pop
lea
clc
mov
lods
js
sub
sbb
add
bound
nop
popa
addl
std
dec
fs
icebp
in
mull
mov
sub
inc
lahf
pusha
inc
aad
stos
icebp
scas
dec
push
loop
lret
sub
imul
xor
cwtl
inc
add
dec
sub
movsb
insb
clc
or
lock
jg
jne
cmp
scas
das
out
or
jo
mov
outsb
cmpsb
hlt
icebp
mov
sbb
insl
or
jb
mov
vmovhpd
jb
loop
stc
adc
pop
xor
inc
mov
imulb
sbb
sub
push
aam
fldl
mov
sbb
adc
fdivl
fbstp
dec
stos
push
icebp
mov
add
aam
adc
test
jbe
adc
dec
daa
test
sbb
int
rcl
aas
pushf
xchg
ss
mov
mov
or
das
and
pop
das
into
push
ja
icebp
pop
insb
imul
push
cs
and
jmp
sbb
sub
imul
and
fcoms
sbb
lahf
push
jns
sub
push
adc
push
lret
sbb
notl
mov
icebp
xor
out
insl
pop
cmp
sub
bound
pop
mov
cmp
mov
mov
adc
sbb
or
adc
mov
cmp
dec
mov
and
aas
push
jb
pop
or
jne
gs
and
aad
jl
dec
popa
rclw
pop
mov
mov
xchg
xchg
dec
aas
insl
mov
jo
inc
jno
aaa
push
pop
sbb
mov
enter
fdivs
mov
sub
lock
add
cmp
cwtl
stc
adc
mov
mov
push
lds
add
lods
mov
js
dec
rcrb
xor
mov
mov
pop
mov
jle
push
cmp
fisubrl
repz
fxch
sub
sub
out
jns
ss
pushl
adc
xor
shll
jns
mov
xchg
aam
push
cmp
jmp
xor
sub
enter
inc
movsb
cwtl
sarb
aaa
insl
cwtl
push
lods
cmp
pop
mov
adc
or
fstl
ja
mov
mov
mov
cwtl
testb
jno
xor
push
lods
scas
lds
xor
mov
pop
cmp
dec
sub
push
cmc
and
stos
push
popa
push
repnz
call
xor
enter
lcall
mov
fadd
repz
rolb
jp
mov
test
push
xchg
adc
test
sbb
cli
mov
mov
pop
jle
inc
xor
stc
lahf
push
inc
pop
push
inc
call
sub
and
test
cwtl
mov
pop
lock
push
adc
movsl
test
flds
imul
mov
outsb
adcb
jns
call
add
mov
pop
and
jb
mov
fs
adc
rorb
xchg
cwtl
stos
xor
fcmovne
stc
jnp
xor
inc
ds
xor
pop
push
mov
pop
pushf
repnz
das
fs
call
in
mov
test
cwtl
push
sti
lods
in
test
sub
shr
shll
mov
inc
rorl
sbb
std
xchg
fiadds
sbb
and
insl
jb
lcall
push
in
stc
sarb
push
enter
idivl
mov
pop
filds
cwtl
or
aad
dec
push
cmp
loope
mov
inc
add
cltd
push
loope
pop
xor
lods
cmpl
sahf
adc
sbb
pop
arpl
pop
imul
adc
pop
mov
mov
inc
push
and
xor
pop
mov
xchg
jecxz
jmp
or
cmpsl
fsts
das
jle
xchg
adc
mov
aad
cwtl
inc
xor
stos
cwtl
adc
jns
mov
popa
push
test
rcl
inc
pop
pop
xchg
push
sub
xchg
and
fstps
stc
aam
xor
aam
mov
repz
sti
pop
mov
fnsave
jne
sub
out
mov
pushf
adc
sti
mov
testb
jmp
addr16
fcoml
repnz
push
and
lahf
jp
aaa
sbb
sub
pop
push
enter
push
xor
or
ljmp
mov
push
icebp
shrb
xchg
adc
xchg
inc
dec
or
or
stc
sbb
pop
sbb
adc
dec
cs
mov
icebp
jle
push
fidivrs
jae
push
jne
insl
pop
push
divb
outsl
or
jp
push
addr16
mov
rorb
xor
popf
js
cwtl
xor
les
or
cmp
jl
push
movsl
das
jno
test
pop
shl
mov
mov
pushf
cmpsb
in
stos
adc
aaa
rcll
inc
cmpsl
cmp
fisubrs
or
mov
jp
push
push
xchg
bound
push
push
push
xor
leave
and
mov
outsl
leave
xchg
mov
stos
rcrl
call
mov
out
push
cmc
push
roll
int
repz
xor
ds
mov
sbb
jge
hlt
ficomps
pop
sub
rep
push
xor
mov
cltd
mov
pop
adc
loopne
pop
cld
push
mov
mov
sahf
lcall
ret
mov
add
testl
in
addr16
cld
inc
mov
or
or
xor
leave
andb
cltd
push
and
pop
mov
out
mov
shlb
mov
lret
jnp
push
enter
loope
mov
jg
aad
push
idivb
dec
test
jb
and
cmp
je
mov
or
std
xor
mov
mov
in
js
xchg
lods
cs
aam
scas
jge
mov
xchg
adc
hlt
aam
dec
subb
adc
mov
loop,pn
or
sbb
xchg
sbb
pusha
pop
gs
out
mov
pop
xor
imull
mov
repz
pop
fsts
das
add
mull
adc
into
cs
jbe
xor
mov
test
js
sbb
hlt
cmp
mov
mov
jb
jbe
sbb
shll
aam
icebp
pop
int3
add
lcall
push
jbe
ss
mov
je
mov
pop
jmp
aas
imul
clc
insb
stos
cmp
test
sbb
dec
stc
push
pop
adc
das
imul
xchg
shll
sbb
inc
cltd
pop
sub
rcr
xchg
pop
das
out
icebp
sub
mov
call
add
add
pop
push
insl
lret
jnp
or
testl
leave
mov
push
cs
pop
jo
push
push
pop
repz
inc
pop
xchg
dec
lea
sub
xor
add
add
shl
repz
xlat
pop
sub
mov
sub
sbb
push
or
push
push
mov
xor
jne
ds
cmc
push
xchg
fildll
cmp
sbb
jae
lods
add
cmp
adc
xor
sub
cwtl
imull
pop
clc
sbb
test
fstl
lods
sub
xchg
adc
push
jp
sub
cwtl
aad
mul
aam
xchg
xchg
and
neg
pop
test
pop
loop,pn
ds
jnp
fld
or
out
push
addr16
cmp
bound
in
or
jo
int
cmc
pop
pusha
push
or
and
cmp
mov
clc
pop
push
pop
lret
shl
fcoms
lcall
dec
flds
push
mov
jmp
cmp
jmp
dec
in
out
rcll
xchg
mov
cmp
xchg
mov
imul
adc
cmc
sub
faddl
adc
cmp
mov
mov
scas
inc
cltd
add
push
xor
call
jns
enter
push
cld
imul
jmp
pop
test
aad
xlat
std
push
xor
ja
test
adc
push
mov
jb
scas
lds
xchg
jp
lret
lods
add
inc
and
aas
cmp
xor
mov
xor
adc
push
sub
hlt
stos
sbbb
nop
adc
cltd
lds
shlb
arpl
mov
push
push
sarl
je
pop
stc
mov
or
adc
inc
mov
and
push
sbb
mov
sub
in
notb
mov
xchg
xlat
xchg
stos
xor
cmp
outsb
test
test
mov
pop
dec
lea
adc
push
push
pop
xchg
mov
enter
es
fldenv
mov
icebp
adc
testl
cmp
inc
cmpsl
dec
fdivl
lret
arpl
iret
mov
cwtl
and
xor
sub
lock
and
push
cmp
lock
flds
lret
mov
or
rcr
inc
ja
movsl
in
dec
xchg
adc
mov
test
aad
sbb
jp
dec
decl
fs
or
aam
jae
aas
test
je
jno
notl
xchg
and
in
std
cmpsb
cltd
jb
adc
dec
add
sbb
jp
fisttps
stos
cs
and
mov
or
xchg
aas
leave
test
cli
je
push
push
inc
mov
scas
or
push
push
pop
sahf
cs
sub
xchg
in
adc
sub
pop
xor
xor
loopne
ja
ja
loope
inc
pop
iret
leave
iret
pop
flds
stos
rcrb
dec
lods
or
aam
sbb
pop
lret
add
push
push
pop
fs
sbb
adc
xchg
cmp
aam
daa
xchg
mov
cs
push
hlt
loopne
dec
ja
ficoms
cmpsb
outsb
jg
das
sub
pop
pop
cli
aaa
jbe
das
andl
inc
sbb
lds
sbb
lret
adc
dec
aad
ret
cltd
in
ss
pop
sbb
jge
push
pop
jbe
imul
sub
push
jne
mov
cmp
sbb
adc
add
sbb
sbbl
or
inc
push
xor
adc
push
mov
mov
jp
mov
sbb
push
push
iret
or
sbb
testb
jbe
inc
xchg
pop
scas
or
aad
or
ds
xchg
insb
fsubrs
xchg
adc
gs
cmp
ljmp
adc
and
pop
jo
mov
test
sub
cmc
sbb
sti
xchg
xchg
adcb
test
mov
jno
das
outsl
stc
inc
shrl
push
push
clc
xchg
cmp
push
and
adc
or
xchg
lret
fcmovbe
loope
icebp
mov
cmp
sub
pop
mov
jae
std
sub
sub
ss
imul
mov
cli
jb
dec
push
outsb
pop
aaa
add
icebp
cs
and
sbb
mov
cmpsb
nop
ss
jle
xor
jno
sub
mov
cmc
sub
cltd
repnz
jno
std
or
lds
aaa
imulb
mov
mov
jmp
adc
mov
arpl
xor
mov
lock
faddl
mov
movsl
cmp
sbb
adc
pushl
xchg
sub
or
shlb
stos
push
int
mov
and
ja
mov
frstor
fcom
cmp
roll
pushl
popa
cwtl
add
scas
pop
jns
cltd
rorl
mov
mov
xchg
mov
aas
fistl
jl
mov
add
mov
inc
les
rcll
movsl
cwtl
mov
xor
fnstsw
jbe
int
jns
jle
sbb
mov
outsl
jp
and
in
je
decb
push
rcrb
jecxz
notb
stos
push
xchg
pop
stc
cmp
dec
sarb
adc
sti
loope
mov
scas
dec
xchg
popa
scas
in
push
andb
sbb
mov
icebp
gs
out
mov
and
ja
jb
fnstsw
xchg
psubusw
bound
push
lahf
negb
outsl
push
xor
jbe
cmpsb
and
loop
jg
pop
sbb
or
pusha
jecxz
data16
rol
fxtract
xor
popa
clc
sbb
mov
cmp
xchg
stc
xor
mov
mov
movb
fcmovne
pusha
jae
sbb
scas
mov
stos
stc
insl
push
xchg
jmp
push
shrb
jbe
loope
aam
test
sub
inc
mov
fisttpl
push
or
call
icebp
nop
aaa
cli
mov
dec
jne
xchg
push
sub
inc
dec
cwtl
lea
aaa
lret
repz
and
lods
sti
lds
mov
rol
xchg
data16
lret
cs
sarb
daa
push
cwtl
mov
jl
cmp
roll
and
cltd
aaa
scas
sub
push
mov
lcall
gs
jbe
jp
lret
jnp
jns
das
mov
mov
mov
bound
sbb
into
call
cmp
xlat
jns
sahf
xchg
cwtl
aad
bound
mov
clc
xor
pop
mov
mov
testl
mov
lock
mov
jno
lock
and
jg
cmp
test
mov
stc
inc
fdivrl
sub
sub
mov
sub
pop
and
aaa
mov
cltd
and
cltd
sti
xchg
jp
ja
scas
cmpsb
stos
out
push
iret
mov
pop
add
and
lahf
jecxz
cwtl
push
and
adc
adc
sbb
and
mov
clc
push
or
mov
ja
and
jl
aam
stos
ljmp
cmp
enter
out
notl
cmc
xor
cwtl
shlb
push
or
pop
or
xor
jecxz
push
call
xchg
pop
cltd
mov
mov
cwtl
shr
ljmp
add
mov
lods
in
pop
cs
inc
adcl
mov
scas
push
fs
pop
push
cwtl
push
das
int3
lods
movsb
into
movl
fmul
rorl
ja
bound
insb
imul
xchg
add
mov
lock
cs
ss
sahf
lret
shrl
sarl
outsl
sti
jne
lahf
dec
ja
jb
faddl
push
sbb
add
mov
cmc
test
aam
scas
sub
dec
push
mov
mov
enter
sub
lods
cmpsl
roll
test
lahf
xor
cwtl
fldl
ret
xor
adc
and
rorl
jne
gs
push
xchg
mov
sbb
stc
pop
jb
fsts
rorb
das
push
je
repnz
scas
stc
lret
xor
and
mov
stos
stc
pusha
lock
pop
jbe
test
sub
and
rcrb
cmpsb
mov
sub
jb
ret
adc
or
cmp
cmp
push
aaa
mov
mov
mov
lods
shrl
cmp
clc
fstpl
pop
jne
inc
and
add
pop
aad
bound
push
xchg
flds
notl
in
cwtl
pop
or
cmpl
adc
sbb
push
insb
adc
push
jb
push
xorl
das
std
and
xchg
sbb
pop
xlat
arpl
scas
jb
aam
fwait
push
add
cmpsb
push
xchg
mov
add
sahf
call
push
sbb
cltd
cmp
mov
divl
ret
pop
dec
dec
pop
sbb
pop
sub
cmp
mov
mov
sbb
and
shrl
sarb
xor
dec
cli
mov
mov
adc
out
or
pop
jg
cmp
pop
dec
mov
js
ljmp
jne
pop
loop
jno
shlb
sbb
xchg
scas
push
ret
adc
pop
pushf
movsl
repz
pop
mov
lods
test
push
scas
nop
or
xchg
sbb
sbb
shrl
push
adc
addr16
lahf
pop
cmp
rcr
jns
fwait
leave
dec
xchg
sub
movsb
push
repnz
clc
mov
pop
stos
mov
pusha
rol
jp
mov
lock
adc
jge
subb
xor
stc
rcll
pop
adc
pop
ret
mov
ss
and
setp
les
sbb
xor
or
inc
adc
push
mov
adc
push
add
out
xchg
or
in
xchg
mov
stos
add
cli
mov
lahf
cld
fwait
dec
xor
pop
dec
popa
push
das
in
xchg
flds
mov
dec
push
cmc
adc
leave
rcll
cwtl
jb
push
pop
in
xchg
mov
sub
cwtl
shl
inc
loop
stc
fwait
dec
xchg
popf
mov
add
cs
mov
shlb
imul
push
cmp
fs
lcall
xchg
imul
outsl
test
inc
mov
out
clc
test
imul
movsl
pop
push
scas
arpl
lahf
clc
mov
bound
cwtl
push
inc
cmp
clc
fstpt
jp
adc
pop
lods
sahf
stc
in
sub
adcb
push
push
dec
jge
adc
sub
cltd
xchg
out
mov
push
fisubs
jge
mov
add
pop
fadds
jb
mov
aam
mov
in
dec
in
iret
xchg
ds
ret
push
xchg
imul
adc
pop
jns
pop
mov
add
mov
and
in
pushf
loopne
xchg
clc
popf
xor
cltd
imul
sub
push
sbb
pushf
mov
or
bound
out
push
insl
das
push
aad
add
xlat
icebp
data16
dec
add
out
add
movsb
push
xchg
xchg
ja
push
mov
rcll
push
std
sbbl
sbb
xchg
push
xor
imul
aam
xchg
adc
inc
lods
push
xor
es
or
cmp
mov
insb
mov
inc
mov
sti
std
push
lcall
movb
or
push
std
ljmp
lret
lods
enter
insl
daa
shl
pusha
fwait
repz
idivb
xor
sbb
hlt
shlb
sbb
ja
xlat
sub
mov
ret
mov
mov
mov
mov
je
test
idivb
mov
sub
add
xchg
enter
out
adc
scas
jp
push
xchg
jmp
add
mov
xchg
and
mov
cwtl
push
in
scas
push
or
push
stos
roll
repnz
xchg
lahf
xchg
test
xor
xchg
aaa
popa
push
xor
sbb
add
loope
sbb
sub
pop
mov
fwait
pop
adc
inc
test
test
push
addr16
sbb
pop
cmc
sub
jb
push
mov
mov
daa
cmpsl
test
aaa
stos
aam
jb
cltd
jb
push
lods
xchg
mov
xlat
cmp
add
mulb
popf
in
push
ds
loop
aas
gs
xchg
ss
jb
inc
pop
jp
loopne
push
push
mov
or
fidivrl
cmpsl
sbb
ds
stos
sbb
jmp
fsts
adc
and
inc
jnp
mov
sbb
decb
pop
xchg
es
add
and
dec
pop
sub
out
push
jae
push
fs
jo
xchg
iret
sbb
sbb
stos
popa
repnz
icebp
adc
sbb
jb
sahf
xor
pop
mov
and
add
adc
imul
je
xor
ds
xchg
dec
and
xchg
jae
clc
cmp
sbb
or
out
mov
inc
jle
pop
ss
push
add
mov
sbb
es
sub
xchg
lret
dec
dec
shll
sub
icebp
gs
cltd
xor
xor
sbb
cltd
daa
or
add
test
stos
xchg
add
pop
notb
or
sub
je
xor
rcrb
loopne
es
mov
pop
sahf
inc
mov
cmc
pusha
dec
stos
xchg
aad
mov
xor
xor
mov
dec
mov
xor
nop
push
movsb
mov
xor
and
push
inc
mov
jns
xchg
jae
inc
adc
mov
jb
cwtl
clc
cli
jle
arpl
push
stc
sub
jmp
fmuls
xchg
imull
aad
jno
jae
push
lods
or
adc
sahf
bound
dec
shrl
inc
lea
mov
inc
ret
jg
ss
lea
xor
sub
cmp
adc
stos
shrl
mov
push
inc
cltd
xor
in
mov
sbb
mov
cmp
aam
and
cmp
repz
mov
xchg
scas
mov
cmc
aas
cmc
mov
cs
data16
es
mov
sbb
test
mov
sahf
xlat
push
das
or
scas
pop
mov
add
dec
cmp
pop
xchg
mov
jl
rorl
ss
outsb
pop
xchg
or
aad
repz
test
fidivs
clc
aas
or
cmpsb
bound
jb
repnz
icebp
jl
jbe
mov
mov
imul
mov
fmul
xchg
or
aam
cmp
fsubl
mov
xchg
inc
xor
lock
sti
cmc
fstl
jp
push
pop
jae
ljmp
mov
dec
inc
xor
jne
pop
push
mov
ja
lcall
inc
pop
inc
cmp
outsl
aam
mov
movsb
adc
push
sbb
lods
pop
insl
mov
mov
aad
sbb
dec
xor
mov
mov
imul
scas
add
sub
repz
aaa
outsb
imul
loop
xchg
test
push
test
jbe
push
fisttpll
jle
das
call
lods
mov
orl
dec
data16
and
lret
dec
fsubrs
das
cmp
jb
push
loopne
icebp
dec
mov
lahf
fistpl
sub
std
outsl
fs
xor
mov
lret
shll
sbb
mov
xor
xchg
popa
insl
and
fldcw
mov
movsb
xchg
cwtl
mov
icebp
icebp
inc
out
jne
sub
js
or
orl
hlt
xchg
movsl
mov
and
xchg
push
or
shll
push
enter
jbe
addr16
lret
and
xchg
ljmp
dec
or
jmp
aad
jae
adc
lds
xchg
adc
sub
mov
cmp
xor
shlb
xchg
outsl
xchg
push
std
daa
aas
imull
adc
testb
cwtl
push
sbb
popa
lock
xchg
fxch
push
xor
lods
scas
fnstenv
aad
add
sbb
arpl
cmp
sbb
push
dec
clc
mov
mov
jb
scas
iret
loopne
repnz
in
mov
aad
jnp
aad
cmp
sbb
roll
aad
jecxz
gs
and
repz
or
in
pop
mov
hlt
xchg
lret
or
outsl
out
push
shrl
xchg
xchg
pop
into
ss
enter
adc
mov
adc
dec
mov
gs
cs
cmpl
sbb
out
rcll
xor
mov
push
mov
aaa
xchg
xor
or
clc
out
adc
jnp
xchg
adc
sub
hlt
out
or
sti
pop
cwtl
push
cs
xor
pop
cltd
mov
test
jne
mov
stc
repnz
movsl
pop
int3
mov
adc
add
cmp
lock
add
orl
repnz
aaa
sbb
mov
mov
add
or
mov
pop
xor
sbb
aaa
sbb
mov
push
inc
mov
pop
jecxz
adc
out
jb
stos
xchg
cwtl
fidivrs
imul
stos
push
bound
inc
sub
lcall
sbb
cltd
shlb
sahf
push
add
mov
adc
cmp
fmuls
xchg
cld
jb
xchg
xor
lea
fdivrs
js
je
push
and
mov
sub
daa
stc
adc
popa
and
in
push
daa
icebp
add
test
mov
cmp
stc
add
sahf
pop
mov
dec
sbb
addr16
pop
cmp
mull
jge,pn
jnp
xchg
pop
mov
push
pop
push
cmp
mov
jmp
lock
fs
add
jle
adc
icebp
push
jno
into
mov
xor
lcall
aad
stos
mov
sub
mov
xchg
adc
bound
inc
cmpsl
push
fstps
nop
cmp
mov
xorb
push
mov
or
sub
ret
jb
mov
push
mov
sarl
pop
push
sub
pop
ja
push
mov
shll
out
dec
cs
inc
push
pusha
cwtl
mov
fcoms
loop
dec
cmc
adc
mov
movsl
shl
scas
leave
je
xchg
xchg
adc
cmp
mov
lock
ja
add
test
movsl
mov
push
push
sbbb
scas
mov
pusha
cmp
adc
cmp
fadd
mov
mov
repz
mov
mov
test
push
or
dec
rol
in
mov
lcall
leave
mov
lcall
aas
and
in
rorl
and
push
mov
mov
shrl
mov
cmp
js
popa
push
lret
push
mov
mov
add
push
xor
test
jnp
push
sbb
int
inc
ficoms
out
fs
adc
dec
cli
mov
xor
lcall
clc
and
lret
cmp
fcomp
xor
or
mov
lds
pop
push
aaa
mov
aam
push
fcomp
bound
jne
enter
or
cmpsb
fucomi
push
cmp
leave
imul
pop
xchg
clc
scas
xchg
rcl
xchg
inc
adc
ret
mov
es
xor
das
insl
stos
mov
cwtl
aad
scas
lock
ja
pop
sbb
mov
pop
js
adc
mov
pop
pushf
int3
cs
and
fsts
sbb
pop
mov
push
mov
rcrl
sub
dec
xor
or
dec
scas
adc
test
sub
pushf
dec
jns
sbb
in
sub
adc
sbb
mov
mov
sbb
sbb
test
mov
pop
stos
or
test
idivl
sbb
push
sub
aad
and
inc
mov
push
mov
stc
nop
xchg
bound
je
es
loopne
adc
cmp
xor
jb
push
xchg
pop
idivb
cmp
clc
rep
icebp
jo
push
mov
dec
cli
mov
sub
cmp
mov
cltd
pop
mov
sahf
aad
jp
lods
mov
jns
or
das
in
push
jl
scas
jge
imul
lods
push
jne
cwtl
xchg
scas
aam
stc
lcall
adc
leave
add
mov
xchg
scas
xorl
notb
push
stc
xchg
outsb
push
clc
pop
ja
mov
adcl
fbld
sbb
imul
add
bound
sub
push
mov
mov
cmp
fadds
jmp
mov
or
push
ljmp
mov
jb
test
in
xchg
pop
mov
cltd
sbb
bound
stos
xchg
or
sbb
aas
out
jae
push
pop
adc
mov
or
inc
or
push
lods
popf
sub
pop
jp
adc
xlat
push
push
daa
cwtl
je
in
call
jns
inc
cwtl
mov
shlb
loopne
jbe
cli
sbb
push
mov
leave
mov
ja
insb
sbb
cmp
loope
loopne
loope
stc
rcll
adc
push
cld
dec
aas
ja
ss
cmpsb
bnd
mov
xor
xlat
jle
addr16
push
sub
mov
and
lret
mov
call
jp
push
inc
in
jns
xchg
push
mov
pop
fs
push
push
stos
mov
repnz
pusha
int
mov
data16
and
mov
mov
mov
inc
fcoms
adc
pop
stc
imul
int
jle
xchg
cmpsl
xchg
xor
jno
jecxz
cmp
flds
dec
cltd
push
scas
loopne
xchg
shll
leave
leave
xor
push
int
mov
adc
dec
ss
push
or
or
mov
aad
cwtl
push
scas
xchg
test
adc
add
pop
xchg
pop
mov
outsl
fwait
jmp
iret
xor
icebp
nop
adc
or
cwtl
mov
or
lret
or
or
in
mov
jno
push
push
sbb
into
push
hlt
push
int
push
loopne
inc
pop
cltd
add
cs
lret
lahf
jne
ja
icebp
add
push
cmc
mov
mov
push
lods
cltd
mov
fdivl
push
dec
mov
jae
push
mov
out
sbb
cmp
rorl
inc
xor
jle
xchg
or
bound
or
in
out
test
pop
lods
adc
mov
push
push
and
scas
pop
pop
adc
and
xchg
push
xchg
cmp
outsl
add
mov
jle
enter
cmp
jns
add
push
xchg
mov
sub
mov
pop
sub
inc
xchg
out
mov
repnz
pop
sti
or
push
scas
js
stos
pop
cmp
sbb
mov
sarb
and
packsswb
popf
push
cs
pop
fcoms
sar
jnp
movsb
cmp
pop
xchg
pop
xor
cmp
push
mov
in
cmpsl
je
xchg
jae
or
or
loopne
and
sub
xchg
and
adc
pop
popa
insl
inc
jae
cwtl
xor
jge
in
mov
lods
or
mov
jmp
lods
pop
das
int
shll
push
out
or
push
repz
adc
in
mov
or
pop
aad
sar
xor
ficoml
and
imul
pop
push
adc
mov
lret
in
dec
xchg
popf
pop
sbb
mov
cmc
icebp
push
in
dec
cmp
mov
jnp
sbb
sub
lcall
sbb
mov
enter
arpl
cld
add
cwtl
fwait
in
popa
insb
xor
jae
imul
inc
xor
scas
scas
mov
fstps
and
aam
mov
sub
sbb
push
mov
imul
aaa
popa
dec
cmc
sub
clc
fsts
repnz
add
stos
popa
hlt
popa
pop
mov
mov
mov
push
sub
inc
push
fdivl
fs
xchg
push
push
test
ret
mov
xchg
gs
add
jg
inc
loopne
dec
xor
pop
cs
sub
jecxz
sbb
lods
jne
lret
adc
cmp
fs
pop
hlt
mov
add
or
xchg
loop
stos
outsb
popl
iret
xor
mov
scas
lcall
push
cli
js
push
fdivs
push
leave
xchg
adc
mov
faddl
push
bound
insl
dec
xchg
aaa
sub
xchg
mov
pop
dec
pop
mov
sahf
lahf
push
push
mov
sbb
sub
mov
mov
pop
mov
fcmovbe
lahf
sub
dec
cs
ja
adc
dec
scas
lock
jl
push
jbe
xchg
sbb
flds
xlat
out
pop
xor
mov
es
and
xchg
sub
mov
lods
pop
adc
jo
push
xlat
xor
leave
sub
and
pop
add
dec
aad
pop
mov
push
movsl
xchg
dec
push
icebp
cmpsl
add
jb
xchg
lcall
sbb
and
dec
mov
mov
adc
dec
movups
or
mov
jns
mov
cmp
xor
idivl
sbb
jg
inc
aad
mov
sub
or
mov
jb
xchg
das
test
and
out
mov
cwtl
cltd
scas
rorl
xor
add
jae
xchg
pop
ljmp
sub
out
pop
icebp
pop
mov
test
clc
lods
lahf
repnz
lret
sbbl
enter
sbb
stc
cmpsl
shrl
rolb
aad
std
inc
push
sbb
inc
jecxz
add
adc
outsb
jg
mov
inc
pop
push
adc
mov
cld
dec
scas
scas
cmp
aam
clc
push
jne
and
xor
pop
sbb
mov
lea
gs
aam
pushf
mov
push
cmc
push
push
stc
lock
cli
aam
pop
clc
pop
js
lret
sub
fldl
repz
out
or
push
lea
push
xor
mov
nop
pop
cmc
adc
inc
lds
daa
push
or
cmp
ja
xor
dec
inc
sub
xchg
or
add
aas
aaa
pop
jae
scas
jecxz
lahf
xlat
and
imul
xchg
jb
scas
or
loop
leave
jecxz
push
pop
lcall
sbb
and
xchg
dec
enter
fwait
cli
std
mov
mov
rcrb
pop
sbb
loopne
mov
aas
dec
es
mov
jle
jbe
add
mov
and
in
dec
dec
jb
jp
mov
mov
ja
push
insl
inc
dec
cwtl
sbb
sti
push
leave
inc
pushf
or
xchg
inc
aaa
divb
cs
or
aam
add
out
aad
dec
imul
pop
push
xor
mov
fs
sbb
jl
mov
and
pushf
push
or
mov
negl
sub
idivl
sbb
lods
leave
daa
loopne
test
gs
mov
push
ja
icebp
or
mov
aam
xlat
in
jecxz
push
pop
scas
mov
jnp,pt
xlat
adc
repz
adc
dec
ss
dec
pop
stc
xor
push
shr
or
mov
cwtl
fsubrs
xchg
jmp
fimuls
ss
mov
insl
bound
dec
and
in
sub
or
inc
xor
and
lods
jg
mov
sbb
mov
xorb
mov
push
nop
xor
push
push
dec
mov
push
rcll
xchg
movsl
popf
xchg
xchg
cs
lahf
sbb
clc
sub
addr16
enter
pop
inc
mov
fsin
jg
push
and
rcrb
clc
adc
getsec
pop
mov
cs
loope
stos
lret
push
push
cmp
ds
test
or
xor
jns
add
sub
xor
pushf
pop
leave
call
and
pop
fcomps
inc
mov
loopne
jg
shlb
and
cld
dec
jns
cmp
lds
push
test
push
add
aaa
jo
pop
pop
push
add
int
scas
fcoml
shr
adc
call
mov
dec
inc
cmpsl
sbb
mov
inc
je
out
lret
jb
es
sbb
push
xor
push
test
sti
enter
pop
stc
sbb
adc
flds
add
xor
lods
ss
jb
hlt
cmp
cmp
adc
mov
mov
sub
outsb
int3
mov
sti
insb
aam
and
add
sahf
std
and
fsubrl
cwtl
jbe
pushf
loopne
mov
dec
or
or
arpl
fildll
xchg
sub
xchg
dec
cwtl
repnz
stc
cwtl
or
aas
pop
das
sbb
lahf
or
gs
xchg
mov
call
rcl
add
adc
push
pop
cmpsb
sub
push
sub
daa
lret
inc
lock
add
jle
pop
jae
iret
les
popa
adc
stos
adc
mov
movsb
pop
mov
fnstcw
and
loope
mov
adc
ret
aam
jnp
xchg
aam
bound
imul
cld
arpl
int
pop
jae
ret
xchg
mov
jp
bound
les
jp
imull
adc
pop
jg
idiv
ljmp
adc
andl
sbb
sarl
fisttpll
lods
push
ds
xor
mov
fstps
repz
jle
sbb
cltd
popf
adc
adc
orb
inc
adc
push
insb
jp
inc
jg
mov
aam
mov
lcall
jnp
mov
cmp
xor
inc
loopne,pn
rcrb
xchg
loopne
shll
adc
pop
mov
lahf
jb
mov
clc
ss
dec
inc
inc
sub
dec
imul
loope
ljmp
mov
dec
sbb
jb
hlt
fxch
xchg
push
sub
daa
inc
cmc
clc
jns
xchg
sbb
dec
dec
mov
loopne
pop
push
adc
mov
jmp
adc
mov
xchg
arpl
idivl
xchg
out
adc
inc
dec
cwtl
push
mov
push
push
inc
dec
js
cltd
cmp
fcomps
xor
das
jns
push
scas
adc
iret
dec
fcomps
mov
mov
scas
dec
scas
mov
shl
sbb
mov
xlat
lods
or
out
and
ret
push
das
sets
jmp
xchg
bnd
rcrl
scas
mov
pop
movsb
pop
clc
sbb
loop
xchg
xor
and
add
pop
pushf
out
sbb
mov
icebp
sbb
mov
aas
es
das
sub
icebp
call
aaa
lock
lock
adc
mov
push
xor
push
push
adc
in
sbb
mov
adc
push
gs
sbb
xchg
xor
mov
dec
jb
insb
xchg
clc
cmp
dec
out
jp
adc
scas
push
sbbb
mulb
sub
jae
xchg
lea
mov
fwait
mov
call
loope
lcall
xchg
cld
pop
notl
das
cmpsb
ss
pop
sbb
adc
jo
sub
stc
mov
bound
sub
xor
xorb
dec
xlat
sbb
pop
fldcw
icebp
and
xor
sbb
and
xor
cmp
fldl
pusha
loopne
repz
rcrl
jbe
push
sbb
add
pushf
mov
xchg
ljmp
push
jecxz
stc
lcall
push
dec
pop
push
sbb
imul
lods
inc
rcrl
jbe
out
adc
push
sub
js
cltd
xchg
stos
orb
cli
xchg
loop
sbb
jns
jno
mov
jp
push
xor
lahf
ja
pop
sub
dec
mov
adc
fisttpl
dec
push
scas
icebp
and
sbb
subl
sbb
divl
cmp
icebp
aas
inc
sbbb
inc
mov
mov
adc
test
jne
pop
add
out
loope
mov
push
dec
cmp
je
cmpsb
pop
adc
mov
dec
das
adc
mov
outsl
inc
shl
hlt
ret
shll
notb
xor
jno
sahf
adc
cwtl
sub
stos
pop
es
and
cmp
add
sbb
mov
scas
dec
mov
addb
jns
xlat
inc
push
movsb
ret
ss
xor
dec
iret
jg
ja
shl
mov
js
mov
mov
sub
popf
xchg
push
js
sub
jp
out
mov
cmp
popf
leave
xor
xchg
cli
jle
cmp
lock
pop
jns
enter
jp
out
lcall
adc
pop
dec
fdivrs
sbb
repnz
xchg
dec
aas
roll
js
fstl
cmp
adc
push
ja
insb
fisttpll
clc
lods
xor
movsl
enter
lahf
nop
cmp
sub
lret
jne
mov
mov
cmp
jp
jns
lcall
push
adc
push
cmp
sub
or
sbb
enter
stc
dec
xor
icebp
and
mov
hlt
or
mov
pop
mov
push
and
and
xchg
sbb
shrb
adc
cmp
arpl
stc
or
mov
push
sbb
push
jns
clc
mov
in
jmp
je
cmpsl
mov
out
lret
aaa
mov
es
jmp
cwtl
sbb
sti
stc
sbb
pop
dec
inc
add
int
jns
xchg
cmp
repz
sbb
jg
mov
cwtl
int3
out
sbb
pop
push
mull
jb
and
or
dec
inc
les
adc
cwtl
popa
popa
push
mov
shrl
or
inc
dec
or
mov
repz
jb
adc
in
imul
loope
faddp
dec
mov
push
xor
adc
mov
dec
scas
xchg
cwtl
cmp
mov
lea
loope
adc
outsb
arpl
mov
sub
jne
cs
xor
or
xchg
jb
sbb
dec
mov
pushf
pop
push
xchg
mov
insb
stos
stc
mov
notb
rclb
mov
stos
mov
pushf
pop
jg
push
repnz
pop
jno
rcrl
shll
pop
pop
xor
out
adc
mov
popa
incl
push
outsl
jmp
push
adc
fs
int3
mov
xor
scas
bound
push
fs
cmpsl
fucomi
sbb
pop
jmp
mov
outsb
sub
jae
xchg
xor
adc
xor
xor
push
sahf
mov
dec
lahf
js
cltd
pop
out
push
sub
sub
mov
adc
icebp
inc
ja
cld
dec
mov
pop
stos
add
pop
les
cld
sti
xchg
aam
adc
jne
push
scas
and
hlt
sbb
rorl
push
dec
fnstcw
jg
pop
lods
push
add
ja
cmc
outsb
adc
pop
jbe
ss
rcll
cmp
xchg
push
ficoms
xor
and
loope
stos
leave
sbb
cmp
push
mov
mov
pop
cs
and
jb
push
std
push
out
push
sub
rcrb
andb
clc
cs
lret
test
adc
xchg
lods
sbb
call
rcl
mov
je
and
gs
mov
jns
jo
fdecstp
cmp
outsl
lcall
sub
shrl
push
jae
ja
in
xor
mov
mov
dec
and
scas
and
xor
hlt
cltd
jecxz
push
dec
add
fisubl
ja
sbb
jle
cwtl
popf
shrb
sbb
xlat
nop
mov
adc
xchg
flds
xorl
test
lock
call
push
dec
das
push
aas
lret
adc
add
jns
cmp
or
mov
add
movsb
mov
mov
push
adc
sub
in
cmp
in
sbb
sub
rcrl
sub
das
jecxz
icebp
movsl
sub
aaa
in
sub
cld
sar
or
and
push
outsl
pushl
pop
pop
cmp
cmpsb
pusha
fcoms
bound
xlat
fistl
das
cltd
mov
xor
lods
stc
dec
or
and
pushf
popa
xchg
inc
add
sbb
sar
cwtl
int
push
push
xor
ljmp
ja
icebp
lea
dec
add
popa
adc
xlat
push
mov
pop
loop
adc
jl
inc
call
lods
push
push
das
jp
or
nop
jo
dec
hlt
aas
ljmp
push
loopne
push
pop
mov
lea
mov
inc
lahf
jle
sbb
dec
repz
leave
aaa
dec
push
ror
rcl
mov
mov
rcr
das
cmc
cwtl
clc
popf
mov
sbb
stos
sbb
sbb
shlb
bound
and
jbe
jecxz
sbb
shr
je
xchg
mov
cmc
xlat
xor
jmp
fwait
mov
and
jbe
fbstp
scas
jb
and
add
and
stc
jns
les
push
xchg
xor
cmp
mov
jae
int
sbb
push
scas
push
jbe
sbb
loope
scas
call
pushf
add
jp
sub
mov
xchg
cmc
adc
lods
jmp
mov
and
lds
clc
iret
xlat
mov
jg
je
sahf
xchg
and
lret
pop
and
gs
xorl
xchg
xchg
inc
in
or
push
mov
cmp
es
push
lahf
roll
sbb
and
pusha
gs
data16
mov
dec
das
jb
pop
mov
fdivrp
data16
or
pop
adc
aam
xchg
sar
jge
mov
dec
test
clc
sbb
or
xchg
outsl
pop
mov
clc
bound
ss
cmp
mov
stos
cmpsb
mov
mov
popa
data16
sahf
xchg
faddp
mov
adc
pop
and
jns
add
sbb
mov
sbb
call
das
mov
pushf
adc
sub
xor
testl
sbb
das
rorl
leave
dec
sarb
xlat
jns
xor
sub
and
xchg
ds
mov
xchg
xor
shll
adc
mov
lcall
sbb
jge
sbb
cmp
popa
ss
mov
fistpl
or
mov
pop
push
mov
popf
push
jge
sbb
mov
int
cmp
xchg
adc
or
cmp
pop
call
and
adc
jb
xlat
xor
push
adc
xlat
push
jge
xchg
push
dec
mov
jge
jb
js
cli
int3
cmpsl
loopne
sub
std
fsubrl
xor
ret
mov
leave
mov
repz
xor
das
in
xor
push
and
adc
dec
fcoms
xchg
add
fdivr
rcll
aad
and
dec
aad
sti
xor
mov
scas
or
adc
dec
ss
bound
sub
lcall
inc
pop
hlt
in
lock
stos
icebp
sar
or
int3
pop
push
sbb
dec
enter
std
xchg
jbe
lret
repz
loope
cmpsl
jno
sbbb
stos
cmp
cmp
jmp
xchg
sti
sbb
push
mov
xchg
cs
mov
icebp
sahf
ja
fsubs
out
adc
adc
hlt
jns
xorl
cld
inc
jno
push
xchg
cwtl
sbb
push
jb
adc
js
roll
xchg
das
pop
pusha
pop
imul
add
or
pop
pop
stc
mov
pusha
xchg
and
cmpsl
gs
push
test
sbb
into
imul
pop
stos
out
mov
aad
sbb
pushf
pop
fidivrs
and
imull
xchg
inc
in
mov
int
adc
xchg
test
cmp
jmp
pop
cwtl
cmp
push
mov
cmpb
xor
xor
rolb
pop
repz
and
inc
inc
sbb
mov
dec
lods
insl
mov
insl
rorb
xor
lods
jbe
cld
popa
pop
sbb
and
stc
mov
xchg
loopne
out
loop
or
xor
push
pop
scas
jle
inc
lods
ljmp
sub
mov
mov
insb
lret
adc
imul
dec
ja
test
inc
push
sbb
lods
stc
mov
stc
lret
sti
xchg
jmp
xor
add
sbb
pusha
pop
jne
in
xchg
push
inc
pop
ss
mov
sub
jbe
adc
lods
and
pop
sub
push
sub
adc
jbe
push
cld
jp
bound
outsb
or
cmpl
adc
test
gs
ret
sbb
push
mov
xor
add
aam
dec
xchg
adc
mov
jge
aam
and
sbb
sub
mov
sub
xchg
scas
sbb
subb
jns
jecxz
adc
scas
xor
dec
outsb
and
bnd
push
cltd
xlat
jb
mov
cmpsl
dec
cmc
fsubs
and
or
pop
sub
push
pop
es
iret
mov
enter
cmp
sbb
out
pop
popf
dec
or
fs
cmp
int
mov
gs
push
pop
xchg
cmpsl
shr
mov
push
push
bound
sbb
xor
pop
icebp
jae
mov
and
mov
jne
aam
fcoms
adc
sahf
adc
adcb
fildll
hlt
mov
stc
or
push
stos
pop
aaa
push
je
xor
pushf
push
lods
or
sub
ror
inc
cmp
mov
push
fmuls
jle
fwait
push
push
inc
decb
sbb
out
lret
jp
iret
std
cmc
add
mov
xchg
adc
call
inc
cmc
sbb
sahf
push
adc
or
xor
sub
mov
imull
jns
outsl
and
sti
adc
pop
ret
movsl
dec
mov
mov
push
rol
imul
adcl
pop
mov
std
jbe
bound
mov
scas
xor
sbb
sub
mov
jmp
jno
adc
xor
bound
adc
rol
mov
out
mov
and
in
lods
inc
js
iret
inc
pop
aam
inc
adc
push
sbb
rcrb
push
sub
jl
xor
out
or
ss
jle
fisttpll
sbb
mov
xchg
enter
mov
out
subl
pop
mov
stc
mov
scas
mov
hlt
lods
xor
xor
sbb
mulb
cltd
ja
push
sbb
xlat
push
test
cld
mov
mov
xor
notl
xor
mov
dec
xor
sub
loop
adc
xlat
push
movsb
leave
imul
xor
xor
pop
push
movsb
jge
lahf
ja
dec
fadd
rorb
scas
or
lock
js
push
adc
mov
dec
xchg
inc
scas
mov
jns
add
jg
sbb
lock
pop
xor
inc
call
test
or
push
subb
cmc
sub
xor
mov
shrb
xor
sub
push
jns
stc
fmull
sbb
mov
test
icebp
push
std
xor
xor
mov
sub
addr16
mov
test
outsb
cmp
mov
jbe
sub
stos
xor
mov
xchg
push
mov
gs
sub
or
das
incl
cwtl
xchg
lock
fwait
xlat
lar
out
cmp
mov
dec
sub
pusha
pop
pop
cltd
dec
sub
xor
shl
hlt
or
pop
cmc
inc
lods
push
inc
popa
movsl
adc
push
stc
sbb
subb
mov
adc
fldl
jb
dec
mov
mov
shl
sahf
sbb
and
insl
lcall
daa
mulb
sbb
imul
lahf
and
pop
pop
in
sarb
mov
das
nop
cmpsl
cltd
shll
jnp
mov
stc
pop
pop
add
repz
xor
inc
xor
inc
imul
insl
cmp
mov
sbb
repnz
test
xor
andb
es
test
or
das
lcall
xchg
mov
mov
stos
cwtl
mov
inc
test
ljmp
jb
add
cs
outsb
push
enter
cwtl
pop
sub
pushf
addl
add
add
das
jnp
inc
rcl
or
adc
sbb
lcall
mov
inc
mov
scas
test
or
das
dec
push
inc
jecxz
or
mov
xchg
mov
out
add
mov
xor
adc
rolb
xchg
push
push
xchg
scas
pop
sbb
mov
outsl
insb
fstps
loop
ja
mov
push
and
pusha
sbb
in
sbb
adc
cmc
sbb
xchg
in
movsb
inc
stos
sti
push
xor
xor
cltd
scas
js
xchg
xchg
stc
stos
sbb
xchg
dec
mov
into
fildll
cwtl
ja
sbb
sbb
or
sub
xchg
push
sub
sub
in
popf
cld
push
jp
xchg
adc
cmp
ss
pop
pop
xor
lret
dec
sub
sbb
lret
push
clc
xchg
loop
cmc
adc
mov
sbb
scas
push
inc
xor
jne
mov
sbb
pop
mov
mov
push
fists
jl
dec
cmp
add
mov
das
jae
xor
imull
jle
sbb
addl
leave
mov
xchg
mov
xor
push
push
sbb
or
fsts
dec
xor
cmpsb
mov
mov
testb
das
rol
les
gs
cmp
mov
adc
std
call
rclb
jl
dec
icebp
lods
inc
xchg
jecxz
push
sbb
movsl
jnp
lock
jmp
lahf
jbe
or
bound
clc
das
push
or
rcrl
xor
stc
ja
mov
bound
push
mov
lret
mov
jae
imul
jp
daa
out
fs
push
pop
sbb
sub
jg
repz
cltd
pop
jp
push
test
stos
mov
into
mov
and
negl
mov
movsl
mov
mov
icebp
int3
enter
sub
mov
push
jle
clc
lods
fdiv
arpl
scas
enter
and
cmp
rcll
xchg
popa
inc
push
addr16
xchg
insl
cltd
bnd
loope
cltd
fcmovu
iret
mov
lahf
fwait
xor
cmc
adc
js
push
popa
jg
and
lock
movl
insl
std
lret
aam
je
mov
mov
mov
adcl
mov
cmpsl
jne
testl
scas
pusha
mov
push
xchg
cmp
lds
clc
stos
stos
xchg
sar
iret
add
notb
rcll
aaa
sbb
int
imul
inc
out
mov
fidivs
lds
mov
loop
aad
push
stos
orl
out
sbb
mov
push
stc
add
xor
pop
faddl
cs
push
daa
push
repz
pop
pushf
std
test
cwtl
test
mulb
stos
jecxz
stc
scas
ficoms
push
mov
addl
xchg
adc
enter
sbb
inc
push
test
iret
jg
movsl
push
popa
sbb
mov
cmp
pop
mov
and
add
sbbb
jbe
pop
fs
ja
dec
aam
xchg
cs
lret
sbb
jp
lock
dec
rclb
mov
pop
hlt
mov
lods
jae
jg
mov
mov
push
int
mov
or
ljmp
insb
mov
call
mov
push
and
dec
push
inc
fcoms
xchg
xor
mov
add
pop
sbb
inc
insb
cmpl
out
xchg
rorl
nop
add
sbb
xorl
cmp
call
xchg
ror
push
scas
add
xchg
inc
dec
shrb
push
jmp
or
fsubrl
rclb
scas
push
outsb
cmc
xor
movsl
xor
jae
cmp
stos
sub
dec
push
enter
mov
push
nop
push
hlt
xor
ljmp
lahf
mov
jmp
and
or
fcomps
outsl
xorl
mov
xor
or
out
rol
pop
push
ja
adc
xlat
cmpsb
sbb
stos
and
cmp
rcl
clc
mov
iret
orl
jns
scas
or
push
je
leave
int
and
mov
cmc
inc
cmpl
push
push
mov
push
loop
push
sbb
test
pop
icebp
add
sbb
sub
cmp
bound
dec
pop
and
les
or
lods
mov
in
int
push
aam
mov
jno
jecxz
fdivs
jae
pop
pop
jle
mov
stos
arpl
and
adcb
pop
push
mov
das
jae
or
xor
movl
mov
js
pop
jns
pop
or
addr16
push
fs
inc
mov
cwtl
sbb
lahf
add
mov
pusha
mov
faddp
add
push
adc
es
mov
lock
push
mov
nop
insb
std
je
mov
mov
std
out
mov
adc
jmp
stos
push
jb
xor
adc
mov
and
or
jecxz
lods
sbb
outsb
and
cmp
ja
adc
push
xchg
lcall
stc
sbb
cs
nop
rcll
dec
sarl
pop
mov
and
mov
sbb
aas
das
test
adc
fidivrl
rcrl
packssdw
scas
cmpb
sub
adc
and
pop
pushf
mov
or
jo
push
push
mov
mov
pop
sub
cld
pop
pop
push
cltd
xor
push
xor
xchg
rol
fsubp
push
stc
mov
dec
mov
data16
loope
scas
mov
outsb
jecxz
or
xor
sub
rcrl
rclb
mov
lock
aad
and
adc
aaa
sbb
sub
and
mov
mov
lret
xor
dec
fidivrl
sub
and
ret
call
inc
adc
ret
cmp
push
fildl
ss
fidivrl
mov
scas
push
ret
cmpsb
inc
mov
sbb
jg
std
testl
dec
hlt
adc
orps
sbb
fldenv
sub
push
dec
mov
xchg
dec
cmp
sbb
inc
xchg
xchg
stc
cmp
xorb
pop
pop
push
push
rcl
in
sub
push
adc
cmp
pop
jne
cmp
jb
sbb
push
cmp
and
dec
stos
aad
push
js
loop
xor
sti
sub
sbb
sub
repnz
sub
jns
insb
insl
bound
dec
stos
aad
or
subb
stos
lret
jmp
push
push
stos
xor
cmc
into
mov
pop
xor
sub
test
pop
mov
mov
repz
cltd
xchg
fadds
xchg
insl
loop
mov
std
loopne
mov
adc
cwtl
xor
mov
and
stos
fsubrs
jo
lret
ficoml
xor
cmc
lods
stos
icebp
jbe
lahf
push
js
aaa
jmp
and
mov
add
cwtl
and
cli
inc
fs
mov
or
sbb
adc
popf
arpl
pop
outsb
fmuls
xlat
rcrl
test
popa
jns
sbbb
cmp
jbe
push
push
xor
pop
cltd
inc
das
push
stc
add
push
pop
out
dec
push
cmc
pop
enter
stc
and
push
inc
mov
popf
sbb
push
add
bound
imul
leave
or
and
push
mov
sub
push
adc
out
stos
rolb
call
cmp
fadd
leave
sahf
bound
rcrb
xchg
adc
ja
mov
mov
jns
push
loopne
sahf
mov
jnp
mov
mov
and
dec
in
mov
mov
xlat
pop
lcall
or
add
and
xchg
notl
lock
jecxz
xchg
push
leave
fs
sti
push
test
jge
cmp
fsts
sub
push
add
jmp
sar
stos
adc
push
call
cmp
xchg
aad
clc
repnz
xchg
adc
shl
push
scas
mov
mov
dec
in
les
scas
or
add
cltd
lods
sub
jb
loope
sub
adc
and
xchg
xchg
or
pop
pop
das
adc
xchg
fs
dec
call
repnz
cmpb
test
pop
sbb
and
fwait
inc
imul
adc
jne
push
mov
mov
xchg
push
jnp
dec
push
pop
in
stc
mov
repnz
mov
scas
or
sbb
sbb
loopne
pop
jns
clc
mov
sti
loope
sbb
push
sub
push
jge
pop
fcomp
push
arpl
mov
push
dec
pop
push
push
fcmovb
rcl
cwtl
loope
inc
mov
inc
aam
clc
dec
push
sub
int3
cwtl
xor
lret
mov
repz
les
sub
pop
push
pop
jno
jg
ja
lock
sti
xor
push
aaa
pop
cmp
xlat
mov
out
push
lret
imulb
pop
cwtl
pop
inc
rcr
mov
stos
xchg
adc
sub
push
add
scas
or
sub
outsb
xor
cmp
aad
subl
adc
mov
in
fs
sbb
aaa
dec
addl
lods
xor
adc
je
into
outsb
add
jb
pop
xchg
addr16
push
and
sbb
rcrl
icebp
imul
fstps
adc
aas
xchg
out
inc
lret
lods
sub
lods
xor
mov
sbb
jne
enter
bound
stc
addb
xor
scas
mov
das
hlt
notl
imul
pop
les
jl
push
aam
adc
int3
xlat
adc
add
aad
jae
adc
jb
pop
lods
xchg
inc
sub
icebp
xchg
mov
push
jns
mov
xchg
and
stos
sub
ja
in
cmpsb
loopne
pop
jp
push
push
rcll
pop
pop
fyl2x
ds
adc
adcb
add
lahf
push
ja
enter
jge
and
andb
scas
or
popa
fnstenv
xchg
pop
mov
mov
repz
rcll
insb
les
clc
sbb
loope
daa
ja
mov
xor
imul
xlat
dec
lea
fwait
jb
lea
sbb
popa
pop
sub
insl
rcrl
push
icebp
bound
cli
adc
push
mov
lods
icebp
push
aam
and
test
inc
das
jae
jb
sub
stos
mov
aad
cmp
pop
push
push
insb
mov
push
flds
hlt
xor
outsb
cli
daa
nop
mov
and
push
sub
test
pop
mov
mov
dec
cmp
push
repz
push
sub
push
fsin
mov
and
mov
xchg
popf
cs
cwtl
dec
scas
shll
xor
nop
daa
cwtl
sub
xor
das
push
les
sub
xchg
js
or
cmp
sbb
pop
jno
mov
ja
icebp
pop
stos
jbe
sahf
add
cli
pop
int
add
cmp
push
mov
jno
pop
add
scas
ret
push
mov
stos
fwait
out
shll
mov
xchg
push
imul
hlt
cwtl
or
rclb
stc
push
push
adc
push
fmuls
pop
popa
or
xor
mov
sbb
shll
adc
pop
call
dec
das
adc
or
sub
xlat
mov
adc
jbe
sbb
jns
mov
xchg
xchg
push
mov
adc
inc
dec
popa
adc
or
sub
mov
adc
addr16
adc
clc
dec
push
int
mov
inc
ret
add
dec
div
pop
sub
sub
jecxz
icebp
push
push
xchg
jmp
stos
sbb
pop
or
punpcklwd
nop
xor
and
out
mov
or
xchg
jecxz
cli
push
inc
sbb
adc
ja
in
or
inc
sbb
fldl
adc
pushf
mov
fcoms
adc
pop
mov
loope
stc
add
push
push
in
adc
jb
into
or
arpl
jnp
aam
js
out
fadds
fiadds
inc
xchg
mov
hlt
lret
stos
fldcw
lods
cmp
pop
mov
mov
pop
cmc
sbb
fldcw
imul
call
popa
popf
or
testb
sbb
ja
jae
inc
xchg
loopne
push
scas
or
scas
into
cwtl
sbb
sbb
popa
push
jae
mov
or
loopne
cwtl
xchg
shll
xor
mov
rolb
pushf
flds
mov
pop
fwait
jb
jns
adc
mov
mov
loopne
movsb
mov
adc
adc
inc
push
push
rcrb
stos
icebp
or
stos
mov
cwtl
rep
repz
stc
ljmp
clc
imul
pop
push
cmp
clc
xchg
fsubrs
inc
orl
or
cld
xchg
sbb
jle
cmp
test
test
xor
popa
arpl
das
and
pop
push
or
lods
lret
push
stos
or
cli
into
jecxz
loope
insb
mov
loopne
scas
icebp
and
lock
cli
pop
pop
and
jne
jge
xchg
cmp
pop
ja
mov
fnstcw
mov
fdivrs
xlat
mov
adc
fldenv
and
hlt
test
shlb
sub
aam
dec
sbb
mov
sbb
rcrb
push
mov
or
xor
adc
fs
aaa
rcll
jp
xchg
cmpsl
mov
stc
adc
hlt
xchg
mov
mov
imul
pop
pop
jbe
xor
rorl
add
shrb
pop
fmul
inc
jmp
and
pop
mov
or
adc
inc
add
ret
xor
push
subb
insb
jbe
out
scas
outsb
push
repz
lods
push
xor
movsb
jb
sub
add
rcrl
bound
xor
mov
fwait
mov
lods
lods
call
out
mov
int
andl
cltd
cmp
push
lods
pop
je
popf
xor
in
mov
dec
cltd
mov
rcr
out
pop
loop
xchg
es
xor
pop
add
push
xlat
xchg
lods
fwait
cmpsb
imul
fld
aaa
dec
in
adc
or
pop
pop
inc
js
ret
aas
rclb
adc
cmc
jmp
sbb
dec
add
push
dec
pop
aam
jl
shr
or
outsb
clc
repnz
mov
test
sbb
fiaddl
mov
aam
sbb
inc
pop
and
test
jb
adcl
sbb
sbb
dec
pop
insb
out
cmp
scas
inc
aam
stc
dec
mov
jmp
aas
pop
xor
xor
icebp
ficoml
mov
mov
gs
inc
pop
push
inc
adc
lock
lods
out
mov
stos
cwtl
aaa
lods
mov
mov
cli
push
stc
lcall
dec
xchg
push
imul
rcrl
pop
xchg
in
mov
fisubrl
mov
push
aad
imul
js
enter
xor
int
imul
ds
or
clc
lods
pop
xlat
in
repz
stc
push
dec
scas
push
inc
nop
imulb
cwtl
push
hlt
sub
aad
xchg
push
flds
xchg
sahf
cli
rclb
stos
push
sbb
scas
pop
push
repnz
lret
in
inc
sahf
repz
insl
daa
test
lods
nop
and
cltd
xchg
int3
cmp
ret
aam
scas
pushf
rcl
pop
mov
xchg
scas
push
sub
xchg
add
jp
lods
add
sbbb
mov
mov
push
lods
fadds
int3
fists
ja
scas
xchg
daa
cmp
enter
push
pop
std
push
xchg
jp
es
push
test
xor
pop
pop
push
iret
mov
cmc
xchg
pop
add
scas
cmp
insb
inc
cli
in
sub
xlat
subl
push
push
pop
cmp
outsb
sahf
mov
pop
adc
and
js
gs
sbb
imul
xchg
pop
in
xorb
leave
inc
cld
xchg
adc
jae
stc
mov
inc
data16
in
xchg
lods
mov
leave
repz
xor
pop
dec
imul
sti
gs
or
sub
adc
cwtl
adc
stc
shlb
rclb
sbb
jnp
repnz
mov
xchg
cmp
and
sbb
cmp
pop
ja
adc
adc
mov
cmc
mulps
lods
xchg
cltd
scas
pusha
stos
imul
adc
inc
gs
arpl
fnstenv
xchg
cmpsl
out
xor
or
push
mov
push
mov
stc
xchg
mov
loope
fisttpl
stos
sbb
xor
add
mov
std
fs
les
xorl
fisttpl
ljmp
inc
imul
xor
shlb
mov
daa
pop
pop
and
sub
xchg
add
es
sbb
mov
mov
add
outsl
pop
push
pop
sbb
cmpsb
jno
int3
push
stos
adc
lret
ss
pop
stos
scas
adc
push
mov
push
pop
sarl
push
out
out
jns
ljmp
lds
test
bound
dec
stos
sbb
stc
sbb
pop
inc
fbstp
loop
sub
push
and
xchg
out
push
fwait
sbb
flds
inc
movsb
sub
pop
push
pop
shlb
push
mov
gs
out
negl
jmp
cltd
insl
mov
adc
jnp
cmpl
rcr
psubusw
sbb
add
leave
stos
sub
dec
das
lds
aam
cmp
test
pop
cmc
lahf
enter
cmp
and
adc
repnz
sub
lahf
lds
and
pop
pop
repz
adc
xchg
mov
xor
orl
insl
jb
fisubrs
pop
shrl
pop
xor
xor
out
lcall
clc
les
sahf
clc
pop
push
push
add
xor
stc
xor
and
pop
and
pop
scas
xor
cmp
cmpsb
xchg
imul
and
ljmp
test
xchg
cmc
mov
adc
add
adc
inc
sbb
mov
test
pop
rcrl
lods
add
push
inc
ffree
je
cmp
xchg
sub
pop
sub
push
stc
jbe
dec
clc
sbb
int3
stos
daa
xlat
xor
stos
jae
mov
sbb
mov
cmp
imul
xchg
adc
dec
sbb
sub
mov
lock
add
cmpsl
fwait
sub
js
or
sub
push
sahf
mov
ss
rcl
rorl
fldenv
push
loopne
mov
fists
sahf
fisttpl
std
cmp
in
shrl
dec
xchg
jno
xor
mov
push
insl
es
imul
xlat
jnp
push
sbb
jmp
sub
sti
fcoms
bound
mov
leave
xchg
mov
pop
xor
dec
pop
adc
jg
sbb
divb
push
mov
lods
fwait
inc
in
addr16
aas
xor
loope
jecxz
pop
pop
stc
divl
mov
rcll
xchg
mov
pop
jae
fstpl
xchg
sub
xor
dec
sbb
scas
test
shll
cwtl
aam
cmc
stc
stos
pushf
stc
inc
jb
mov
cmp
xchg
cwtl
jnp
sbb
sbb
cmp
jae
loop
or
dec
out
shrl
jle
repnz
stos
inc
arpl
pop
lods
mov
mov
and
lret
aaa
mov
test
xor
pop
cmpb
push
jae
sbb
mov
dec
aam
add
pop
repnz
in
inc
bound
sbb
mov
cmpsb
xchg
pop
and
xchg
imul
pop
ss
jns
jmp
sub
das
fcoms
xor
stc
sahf
cld
mov
scas
idiv
stc
sbb
mov
jecxz
inc
clc
add
add
movsb
mov
clc
ljmp
mov
in
cmp
xor
ja
js
or
sbb
xor
pushl
adc
sarb
mov
repz
jo
scas
repnz
popf
adc
or
sti
mov
cmp
push
cmp
mov
stos
jo
cmc
push
cmp
xor
pop
fstp
adc
dec
rcr
jb
xor
sahf
mov
push
pop
repz
sbb
lahf
js
aad
lods
inc
add
nop
add
dec
sub
aam
push
push
push
mov
fwait
lea
lret
push
xlat
xor
push
inc
sub
out
adc
lret
stos
sub
jg
cltd
adc
jo
das
mov
xchg
xchg
push
sarb
lcall
rcll
ret
sbb
and
pusha
sbb
lods
dec
mov
out
or
lcall
pop
lea
dec
xorb
sbb
cwtl
scas
pushf
cmp
daa
aaa
and
repz
push
xor
gs
das
sub
cwtl
pop
hlt
sub
jb
maxps
fnsave
mov
xor
mov
addr16
jbe
push
int3
int
lock
imul
jnp
mov
shll
aas
dec
cwtl
sbb
mov
mov
mov
push
xchg
xrelease
xchg
cmp
sbb
cld
es
call
test
rorl
leave
scas
or
pop
aam
and
lea
das
pusha
or
cmp
jno
shll
jecxz
loope
sbb
jge
loop
adc
popf
lods
andb
cmp
xlat
push
sbb
jo
and
aas
push
daa
scas
shll
pop
loope
and
xchg
sub
addr16
dec
out
popf
jbe
and
lods
addl
pop
mov
outsl
insb
cmp
push
adc
mov
cmp
pop
sbb
mov
sbbb
shl
enter
out
jmp
push
adc
gs
pop
lcall
les
fistl
sub
add
ja
test
ja
rcrb
lds
lods
fadd
insl
aaa
add
push
or
mov
xlat
cltd
lahf
leave
aaa
push
jp
bnd
stc
sbb
sti
cmp
mov
push
adc
repnz
push
icebp
xchg
es
fwait
aam
xchg
pop
das
or
bnd
pop
add
popf
add
mov
pop
mov
jae
fnstenv
je
ss
dec
js
xor
pop
das
ds
call
push
and
sub
cmpsl
dec
lret
sbb
cltd
xchg
loope
cmp
mov
das
aad
cwtl
xchg
lods
pop
xor
jnp
mov
cmpsl
mov
cmpsl
arpl
pop
in
ds
stos
in
or
jg
stos
ret
int
pop
sbb
cmp
mov
jp
aam
jb
pop
out
ds
clc
outsl
es
mov
dec
sbb
cli
loopne
bound
stos
mov
push
cwtl
repz
loop
xchg
pop
jae,pt
lock
dec
xlat
adc
add
notl
loope
mov
je
lret
push
adc
fld
mov
and
xchg
lock
xchg
aas
dec
or
aaa
fdiv
outsb
push
mov
xchg
shll
jecxz
cmp
outsl
int
lods
xor
ljmp
adc
sbb
pop
mov
das
cli
jns
mov
push
push
daa
lret
into
jns
movsl
xchg
pop
sbb
pop
or
icebp
flds
sub
jge
xchg
cmpsl
or
cmp
xor
pop
or
or
in
lahf
jne
aam
hlt
adc
pop
stos
cwtl
int3
call
aam
in
clc
cmp
jae
xchg
cwtl
sbb
insl
add
testl
lret
push
push
and
outsl
push
sub
jb
lock
ja
push
loope
and
aad
mov
lds
call
sub
imul
aam
sub
daa
notl
aaa
or
mov
jecxz
stc
push
push
fisubs
stos
or
adc
jmp
fidivrs
xchg
cmp
or
sahf
out
jbe
pop
mov
push
cli
push
lds
sub
mov
aam
insb
test
mov
outsl
inc
cwtl
sub
lods
test
add
fsubp
aam
lods
testl
mov
pop
mov
add
repz
push
push
dec
repnz
xor
sbb
pop
pop
sbbb
int
cs
sbb
cmp
scas
repz
sahf
pop
pop
je
push
aad
bound
cli
xchg
scas
mov
hlt
lods
pushf
stos
mov
sbb
movsl
jl
mov
xor
stos
popa
in
sbb
dec
sbb
push
and
add
dec
cltd
sub
stc
xchg
pusha
push
decb
sbb
and
pop
fldcw
push
cli
xchg
pushf
jmp
mov
cmp
popl
jecxz
push
pop
jp,pn
sbb
cltd
call
and
andb
sbb
sbb
repz
xor
sbb
xchg
mov
cld
bound
loop
or
sbb
jns
push
stos
in
fldl2t
out
cs
and
cmp
aas
call
jp
mov
adc
pop
dec
bnd
inc
cltd
cmp
jg
data16
fisubrs
clc
clc
xor
lock
push
adc
push
int3
xchg
xchg
out
pop
jns
ja
mov
inc
bound
push
pop
loopne
pop
and
and
scas
lret
cwtl
adc
mov
mov
mov
leave
xor
sbb
jo
push
inc
out
xor
mov
cmc
ja
clc
push
add
push
xor
pop
jp
and
loope
stos
inc
xchg
clc
inc
and
xchg
jp
pop
adc
arpl
xor
mov
rcrb
pop
jbe
or
sbb
cmp
mov
out
in
idivl
sbb
push
and
sbb
or
sbb
xchg
loopne
inc
mov
popf
clc
out
ss
leave
pop
lods
ret
sub
sbb
pop
cmp
jb
ret
sbb
jmp
or
add
int
push
mov
push
xchg
jo
push
jl
push
xchg
bound
xor
lahf
jp
sahf
cmpsl
iret
fimull
lea
push
pop
pop
or
leave
push
push
rcrl
in
sub
sti
jbe
mov
fldcw
sti
xor
xor
push
jns
fnstcw
and
lea
sub
adc
ficoms
cwtl
or
outsl
clc
or
push
adc
dec
cmp
rclb
or
adc
push
lret
int3
in
push
imull
jb
sub
adc
imul
dec
and
lods
mov
rclb
or
push
aam
ljmp
popa
cwtl
adc
nop
stc
out
mov
aad
xor
jne
cmpsb
cwtl
shrl
add
xor
dec
test
jb
dec
mov
lds
cmp
inc
shll
call
adc
xchg
adc
mov
push
rcrb
and
shlb
xchg
icebp
cmp
hlt
ficoml
push
rcrl
cmp
sbb
lods
inc
dec
lret
mov
xor
rolb
push
mov
cs
insb
repz
jb
mov
inc
popa
mov
dec
pop
push
es
adcl
add
aad
lods
mov
or
std
out
fxch
jmp
pop
aad
sub
in
mov
sub
cmpsb
xor
call
sub
cld
lcall
pop
aad
mov
push
add
jae
aam
dec
xchg
dec
ljmp
pop
out
inc
jl
push
xchg
add
xor
bound
push
out
mov
or
dec
cmp
lods
or
aad
dec
jo
hlt
pop
loop
in
adc
dec
shll
cli
mov
cmp
sbb
scas
enter
fldl
ret
push
push
lock
cmp
sahf
adc
leave
clc
mov
cwtl
sbb
lds
movsl
cmp
pop
icebp
push
mov
push
inc
adc
repnz
push
adc
cwtl
lods
add
pop
or
leave
sbb
fs
pop
sbb
cli
sbb
and
test
sbb
sbb
fcmovu
lea
or
jecxz
xor
out
mov
imul
pop
lret
mov
or
sub
xchg
mov
mov
push
mov
imul
xor
inc
rolb
mov
sbb
and
mov
sbb
cwtl
add
sbb
lods
shlb
das
adc
sbb
nop
in
icebp
xchg
daa
int3
sub
repnz
jmp
and
dec
push
cmpsl
sbb
push
fwait
punpckldq
hlt
leave
repnz
sbb
ret
scas
cmp
mov
mov
cmpsb
adc
dec
jg
add
mov
fwait
mov
jl
sbb
mov
lret
xor
adc
xor
or
lcall
loop
in
cwtl
xchg
sub
out
mov
pop
sbb
lods
or
test
xchg
sbb
and
sarb
shll
sbb
loop
lock
push
dec
dec
out
adc
cmp
dec
mov
sbb
or
push
stos
push
imul
mov
add
pop
xchg
push
fldenv
pop
mov
xchg
negl
xchg
mov
mov
imul
dec
insb
jnp
in
cmpsb
adc
cmp
push
out
in
push
ja
or
test
mov
shll
pop
test
sbb
inc
in
icebp
xchg
loope
jecxz
aam
adc
iret
out
sbb
insl
in
sbb
xor
jecxz
push
sub
cmp
dec
pop
sbb
xchg
in
fwait
adc
xchg
sub
pop
sarl
adc
sbbl
sahf
stos
loopne
push
xchg
in
sbb
jle
mov
cmc
adc
repnz
xor
test
mov
adc
pusha
or
fnstcw
sahf
mov
fcmovnu
loop
fdivr
sbb
xor
arpl
jmp
sbb
icebp
ljmp
in
and
pop
sbb
cli
rcrb
es
test
sbb
mov
add
adc
add
mov
sub
cmp
push
and
mov
mov
mov
into
sbb
ljmp
adc
sarb
clc
jg
jae
movsb
xchg
test
into
scas
sbb
sarl
adc
incb
pop
cltd
out
sub
ljmp
out
outsb
insb
punpcklwd
jb
insl
rcrl
pusha
cltd
sbb
sti
fcoml
int
mov
sbb
orl
pop
jbe
adc
push
lods
test
sbb
pushf
ds
sbb
data16
call
cmc
hlt
adc
jge
gs
dec
test
imul
lods
and
xchg
and
adc
cmp
sbb
iret
jnp
js
inc
loope
fcomps
add
mov
rcrl
sbb
in
add
push
ja
scas
ret
sub
push
inc
push
sub
movsl
mov
add
ret
mov
add
sbb
push
xchg
sub
das
sbb
push
mov
loopne
jecxz
cmp
xchg
cmpb
mov
push
popf
sbb
push
lods
unpcklps
xchg
nop
sbb
jno
cwtl
shlb
into
stc
lods
xor
adc
lahf
dec
popf
aad
inc
xchg
cs
loope
cli
insl
fcomps
cmp
mov
loope
nop
add
xchg
je
fdivl
sbb
ret
test
xchg
push
cs
sbb
std
sbbl
cli
xchg
sbb
fs
mov
sbb
sbb
stos
ret
jle
xchg
push
sbb
cmp
mov
out
pushf
push
movsb
sti
daa
sbb
sub
or
inc
push
mov
insl
and
sbb
mov
cmp
sbb
std
mov
cmp
and
jno
add
sbb
adc
dec
je
sbb
sarl
adc
das
pusha
inc
pop
sbb
sbb
and
add
fst
sbb
sbb
aas
cmp
enter
sbb
lahf
ret
pop
cmp
and
xor
jle
sbb
lods
mov
push
invd
adc
dec
jbe
xchg
aad
sbb
out
test
push
aam
xor
fwait
sbb
aas
cli
xchg
jmp
sbb
rcrb
jge
sbb
sbb
or
les
jno
aam
or
xchg
enter
xchg
push
or
jg
hlt
sbb
add
push
dec
jmp
jle
mov
or
inc
jb
xchg
lret
fnstcw
add
xor
daa
bound
aas
sbb
pop
cmp
fldl
in
inc
mov
int3
xchg
sub
icebp
mov
adc
sbb
xor
stos
adc
lcall
nop
push
sub
gs
xlat
fwait
adc
jb
rcrb
aaa
ds
or
test
sbb
mov
inc
xchg
and
lcall
dec
sbb
cmpsl
push
jo
sbb
ret
mov
pop
sub
add
xor
push
out
cmp
test
enter
cmp
addr16
pop
movsb
mov
test
xor
mov
xchg
and
std
jge
sbb
adc
dec
shlb
ds
cmp
sbb
dec
addr16
and
xor
pop
je
mov
in
call
mov
mov
in
push
mov
cld
aad
std
xchg
cmpsl
sbb
dec
icebp
imul
sub
iret
ljmp
test
jns
test
add
mov
push
sbb
ljmp
lea
push
sbb
cs
push
pop
dec
daa
stos
jmp
add
adc
loop
sbb
xlat
push
shll
xor
sub
push
pop
pop
push
inc
fsubrs
mulps
xchg
xor
mov
push
loop
xor
call
test
xor
mov
add
pop
stos
xchg
cli
push
cmpsb
and
sbb
mov
dec
sbb
mov
outsl
sbb
les
dec
and
push
inc
or
in
cmp
imul
jl
jbe
add
int
add
mov
xchg
lds
mov
jg
cmc
fsubl
sub
sbb
shlb
sbb
sbb
out
sbb
and
insl
jg
mov
push
jmp
xchg
psubsb
adc
or
mov
add
xchg
lahf
adc
cmp
movsl
shlb
sbbl
mov
adc
js
lret
pop
and
sarb
cmp
add
mov
inc
hlt
sub
mov
or
mov
push
xchg
sbb
imul
rorb
iret
test
sbb
sahf
mov
pop
sbb
shll
mov
ja
js
xchg
call
out
fcompl
inc
test
xchg
mov
jmp
dec
fildll
xchg
jns
inc
sbb
xchg
sbb
test
xchg
insl
popa
sbb
lret
shl
cmp
shll
sbb
orb
adc
pop
adc
cmc
jb
hlt
adc
ss
xchg
jo
sbb
mov
cmpsb
mov
or
rolb
xor
mov
mov
adc
addr16
push
mov
adc
mov
fidivl
pop
fstpl
dec
outsl
sbb
iret
mov
push
stc
clc
mov
and
inc
int
adc
xchg
sbb
gs
ret
shll
push
sbb
cmpsb
push
outsb
xchg
test
inc
push
lret
sbb
cmpl
adc
inc
aad
popa
add
mov
clc
jp
in
sbb
rcll
sbb
xchg
leave
pop
nop
cli
sbb
arpl
movsb
xchg
jl
imull
aad
mov
out
add
hlt
jns
in
ficoms
scas
adc
addr16
adc
stos
inc
sbb
mov
inc
and
mov
dec
pop
jns
mov
in
push
sbb
stos
and
imul
pop
outsb
sbb
lods
gs
xchg
mov
inc
push
push
sbb
fst
subl
jnp
dec
add
test
xor
lret
pop
xor
xchg
fsubrs
inc
cltd
mov
and
ja
jmp
mov
add
push
add
jbe
jle
aad
in
adc
or
sbb
add
lret
ja
bound
lds
push
sub
push
pusha
sbb
mov
insb
jmp
cmp
push
jecxz
jbe
repz
and
clc
cmc
mov
repz
sbb
sbb
mov
fldenv
lret
dec
icebp
out
dec
sbb
jno
movsb
or
push
adc
dec
sbb
sub
push
adc
stos
add
out
stos
shlb
mov
or
and
ljmp
adc
pushf
int3
dec
repz
mov
clc
push
inc
sub
rcl
mov
xor
sbb
jbe
sbb
mov
cmp
cmp
in
ja
or
sub
inc
jge
sbb
mov
int3
lahf
sbb
jecxz
xlat
xor
leave
dec
xor
outsb
in
ds
popf
and
lea
xlat
mov
outsl
sbb
push
or
fadds
pop
leave
shll
mov
clc
sub
sbb
test
jecxz
icebp
daa
nop
repz
add
sbb
notl
sti
mov
ret
sbb
cmp
push
jg
scas
sbb
addr16
clc
clc
or
stos
inc
push
jecxz
popf
cli
mov
pop
sub
fnstsw
adc
mov
mov
xor
shrl
adc
dec
dec
adc
sbb
rcr
mov
xor
adc
pop
jne
dec
or
mov
sbb
sub
mov
nop
jne
in
and
sbb
add
scas
adc
sub
outsl
sub
test
cmp
sbb
in
shl
sbb
mov
add
mov
movsb
cltd
fwait
insl
cs
sub
dec
sbb
sub
mov
sbb
cmp
jp
xor
jbe
out
cmp
test
push
es
aad
jo
adc
inc
and
fildl
pop
sbbb
xor
sub
and
outsb
push
loope
sti
and
adc
push
movsl
and
pusha
adc
adc
jae
leave
sub
repnz
xchg
pop
clc
sbb
ds
mov
orb
hlt
sbb
imul
stc
push
mov
nop
lods
push
rclb
jo
out
mov
iret
mov
sbb
dec
xlat
nop
test
pop
rcr
mov
in
inc
adc
and
xor
fcompl
sbb
mov
dec
sbb
cmc
xchg
cld
push
mov
jg
inc
xor
mov
add
lock
arpl
call
push
and
into
add
jle
adc
add
add
add
mov
add
loopne
push
cmpsl
add
insb
xchg
lea
ljmp
andb
movsb
shl
xor
xor
rorb
cmp
sbb
fcomps
push
add
jmp
adc
mov
call
pop
inc
sbb
push
and
mov
and
xchg
int
mov
mov
mov
cs
add
xchg
jle
xchg
les
xor
add
dec
xorl
xchg
out
sbb
add
push
jge
jg
sbb
into
sbb
loope
mov
stos
lahf
in
sbb
outsl
nop
xor
popl
jbe
ret
cmp
fdivrs
cmp
cmpsb
sbb
sbb
cli
add
stc
sbb
sub
std
sbb
mov
fwait
das
jle
sbb
adc
dec
jae
inc
fcmovnbe
and
dec
sub
mov
outsb
xor
fwait
enter
iret
imul
pop
test
loop
xchg
cmp
inc
mov
adc
sti
popf
int
xchg
xor
sbb
adc
xchg
add
jo
jnp
jae
test
pusha
sbb
xor
xchg
cs
inc
or
push
jmp
and
test
sub
sbb
jbe
and
dec
ret
push
loope
and
cmp
sbb
ss
daa
fldenv
scas
and
sbb
dec
lds
and
add
sbb
mov
mov
aam
clc
mov
and
pop
add
mov
pop
pop
sbb
mov
jns
test
push
or
sbb
mov
jae
adc
fstpt
call
cwtl
jb
jae
sbb
test
mov
rcll
xor
or
xchg
pop
imul
aaa
ss
and
adc
add
je
mov
stc
pop
nop
cmp
cmp
adc
das
insl
in
repnz
jg
cmp
jbe
sbb
fcmovnu
mov
aam
mov
and
lret
out
mov
xchg
jnp
push
jge
add
ljmp
in
cltd
aaa
mov
jp
je
ja
loope
dec
in
xchg
push
aam
adc
sti
mov
cwtl
jb
sbb
mov
jnp
shll
xor
mov
aad
pop
sbb
enter
xchg
sbb
daa
sbb
aad
mov
cmp
xchg
outsb
arpl
sbb
sbb
fs
cmp
repnz
les
adc
or
data16
repz
adc
and
xchg
cmpsl
jno
add
int
loope
xor
setp
pushf
loopne
mov
movsl
pop
fs
js
mov
in
push
mov
xor
loop
sbb
ret
popa
xchg
add
fcmovb
addl
sub
adc
pop
push
aad
cli
sbb
divl
dec
mov
sbb
mov
aad
adc
sbb
outsl
imul
aam
cmp
jl
xchg
int3
dec
ficompl
lcall
sahf
loope
add
out
cltd
xlat
lods
and
sbb
outsb
adc
cmp
add
mov
movsl
leave
adc
ss
insl
push
in
ljmp
sbb
not
shlb
sbb
fistpl
sub
sub
sahf
push
adc
inc
stc
sti
in
daa
and
sbb
cmp
inc
aam
or
adc
pop
ljmp
pusha
out
data16
pop
sub
mov
sbb
test
hlt
ja
loope
dec
popf
pop
adc
xchg
mov
lods
xor
mov
mov
adc
in
movsb
mov
xor
ss
dec
inc
sbb
dec
xor
jae
jge
shl
popf
mov
in
push
lahf
insb
sbb
int
add
xchg
mov
shlb
sub
or
sub
testl
fistpll
sbb
push
movsl
inc
and
popa
jecxz
fistl
test
and
arpl
lret
pop
sbb
stc
test
xchg
push
inc
sbb
push
ret
mov
lods
push
loope
pop
xchg
add
sbb
lahf
push
shll
push
pop
xor
cli
or
inc
cmp
loope
call
mov
jmp
add
push
and
sbb
jl
adc
push
dec
mov
std
sbb
lods
out
and
jle
cmp
sbb
shl
ret
add
inc
sbb
xor
frstor
jl
sbb
xor
outsl
xchg
add
rcr
sbbl
js
and
cwtl
jecxz
aaa
jp
cld
mov
inc
shll
sub
sbb
adc
inc
sbb
mov
ljmp
lret
jg
fsubp
sbb
pop
and
mov
cltd
jns
addr16
loop
cs
fdivrs
das
adc
mov
incb
cmp
sbb
dec
gs
xchg
mov
out
adc
add
jl
pop
imul
aam
mov
jmp
out
mov
mov
sbb
pop
in
xchg
push
or
push
sbb
add
mov
test
cld
xchg
lret
jge
xor
arpl
xchg
inc
push
cmp
jmp
pop
dec
rol
lahf
mov
mov
cmp
lcall
int
push
fbstp
lea
pop
sbb
mov
inc
sbb
daa
int3
mov
dec
ja
imul
mov
sub
lret
insb
lcall
pop
cmc
push
cmp
cmp
addr16
mov
inc
mov
mov
add
mov
sti
mov
jb
cwtl
mov
sub
sbb
xor
sbb
stos
inc
jns
leave
in
mov
cmp
call
or
cmp
xor
in
movsl
shl
mov
inc
and
push
pop
adc
lock
and
std
popa
xor
cs
cmp
ljmp
insl
cli
xchg
notb
sbb
cmp
enter
imul
jae
fcompl
pop
jno
jl
jae
jg
mov
sbb
jge
dec
pop
dec
std
shrd
int3
sbb
cld
sbb
push
cltd
ss
dec
repz
fst
stos
sbb
aas
mov
jbe
js
bound
pop
mov
add
sub
inc
jnp
rorl
sbb
mov
sub
js
dec
xchg
dec
adc
mov
mov
popa
sbb
shrl
outsb
jge
dec
sbb
clc
adc
xor
sbb
cmp
sbb
pop
hlt
push
jmp
sub
add
mov
or
mov
sbb
jge
fstps
xor
mov
sbb
mov
out
orb
fstps
in
adc
adc
pushf
pop
jne
and
daa
ficompl
pop
test
add
pop
orb
pusha
es
shl
dec
mov
push
xor
adc
cmpsb
incl
jg
ds
test
test
imul
scas
adc
arpl
pop
sbb
mov
pop
xchg
outsl
stos
sbb
mov
icebp
jg
out
jmp
je
add
xor
cmp
stos
xchg
popf
push
ret
sbb
stos
pop
out
dec
in
sbb
mov
inc
xor
out
sbb
jg
pop
imul
lea
sub
mov
jmp
sti
xchg
and
pushf
and
adc
mov
loope
mov
push
jecxz
pop
xor
pusha
lock
pop
inc
push
sbb
loop,pt
add
pop
sbb
jae
hlt
sub
sbb
push
xchg
sbb
dec
cld
stc
xchg
push
sbb
jo
dec
mov
popf
jns
lcall
adc
pop
orl
inc
loopne
mov
push
mov
in
cmp
aas
dec
or
fsubl
or
out
inc
or
inc
push
add
push
mov
add
xchg
sbb
fstpl
popa
jb
adc
or
cltd
arpl
push
lret
push
mov
mov
pushf
mov
adc
lods
sub
rcll
pop
cmpsb
jge
adc
shl
cwtl
xor
stos
stos
sbb
or
loope
jmp
fwait
mov
das
pop
out
sbb
outsb
push
out
fucom
rclb
lds
outsb
addb
std
mov
icebp
adc
addb
shl
fcompl
cmp
imul
jb
in
aam
negl
xor
arpl
add
fdivs
cs
and
scas
and
stc
inc
jp
pop
ja
mov
mov
nop
dec
out
adc
inc
inc
pop
ficompl
ljmp
xor
mov
xchg
or
add
jo
sbb
cmp
ljmp
mov
sbb
adc
iret
loope
fnstenv
fisttpll
sbb
inc
mov
in
sbb
enter
or
sbb
pop
adc
lret
sbb
mov
mov
adc
roll
dec
add
sbb
mov
or
push
scas
outsl
xor
or
pusha
jnp
adc
test
aaa
fldenv
xor
mov
sub
push
jmp
outsl
push
sbb
sti
pushl
sbb
and
sbb
ret
cmc
adcl
xchg
inc
sbb
sbb
xchg
lcall
sbb
inc
mov
sbb
imul
sbb
insb
stc
xchg
dec
push
push
and
bound
dec
or
lock
and
mov
mov
xchg
popa
adc
dec
daa
push
movsl
push
popl
xlat
into
repz
adc
inc
out
test
adc
xlat
cmp
inc
sbb
das
sub
or
fildl
jae
xchg
into
rorb
mov
scas
xchg
lock
test
out
push
pop
rol
cwtl
rcrb
les
scas
dec
fwait
sarb
mov
insb
sbb
das
jbe
ret
cmc
clc
push
push
imul
inc
sbb
sbb
roll
or
push
and
xchg
int
adc
or
jecxz
push
sbb
sub
filds
fwait
pop
das
dec
push
loope
popa
aam
add
mov
xchg
fistps
push
push
mov
test
jb
sub
mov
sbb
and
icebp
mov
fstpl
dec
mov
daa
addr16
adc
gs
dec
or
outsb
ja
push
ret
lcall
cmp
dec
jnp
sbb
in
testb
pop
dec
pushf
pop
pop
nop
sahf
das
stos
shr
and
xchg
cmpsl
fidivl
mov
imul
add
jb
cmp
mov
shll
jle
mov
xchg
and
sbb
push
jne
sbb
bound
sub
nop
daa
pop
xor
int3
stos
es
xchg
dec
cmp
add
jle
jmp
adc
ss
sbb
pop
imul
push
mov
sbb
ljmp
stos
jmp
lea
test
pop
sub
push
inc
sbb
cmp
xor
push
sbb
cmp
push
sbb
mov
and
stos
sysret
xchg
jg
dec
sbb
lods
and
cmp
mov
xchg
mov
je
xor
sub
cmpl
adc
add
add
pop
adc
ds
inc
arpl
hlt
movb
rcrb
lcall
inc
adc
adc
sbb
outsb
loope
jbe
inc
iret
sbb
jp
nop
sbb
sahf
into
cli
mov
sbb
addl
sbb
shrb
jns
add
das
xchg
fsubrl
loop
xchg
cmp
sbb
hlt
lret
mov
lock
push
adc
fmull
jg
sbb
mov
and
push
out
cmp
aas
ret
arpl
insl
sbb
stc
idivl
mov
shl
add
lods
dec
sub
loope
push
xchg
jns
sbb
mov
shrb
xor
shr
lahf
movsl
sbb
inc
mov
cli
loope
fmuls
in
adc
sbb
rcrl
je
test
mov
test
dec
adc
imul
adc
add
out
aas
adc
sbb
mov
ret
js
loope
push
pop
pushf
xchg
lss
sbb
sbb
mov
push
test
idivb
dec
sbb
add
jmp
adc
pop
cwtl
ss
mov
xchg
mov
push
mov
cmp
push
mov
jmp
sub
inc
mov
shr
pushf
jb
mov
mov
out
add
cwtl
insb
dec
jns
inc
ficoms
fstpl
das
andl
adc
aam
mov
lods
sub
dec
jb
ret
push
stc
sbb
dec
pop
movsl
test
or
sti
insl
xchg
ja
sub
rorl
inc
push
pop
jno
mov
xchg
scas
fs
mov
pop
fwait
pop
icebp
test
xor
clc
lret
fidivs
cmc
sbb
mov
jmp
mov
add
sbb
mov
or
sub
or
cmp
jbe
sbb
pop
xchg
and
pop
sar
push
sbb
daa
lcall
in
mov
inc
or
dec
adc
inc
insb
rorb
jle
push
test
cmp
inc
push
sbb
gs
mov
cmp
pop
cmc
lods
insl
sub
vunpcklps
xchg
xlat
jl
sbb
shll
insb
aaa
sub
sbb
or
lcall
mov
xor
push
sbb
and
lret
push
or
pop
and
sbb
lock
inc
mov
adc
call
inc
sahf
pop
sbb
and
rclb
push
sub
mov
data16
imul
cmovae
sbb
daa
jg
cmp
hlt
sbb
in
and
jl
pop
push
cmp
and
mov
out
mov
add
mov
inc
aaa
jb
sbb
fwait
pop
inc
or
sbb
aam
mov
repz
sbb
mov
mov
sbb
rcrl
pop
mov
loope
mov
nop
and
push
inc
lret
pusha
jbe
imul
mov
adc
mov
movsb
mov
cmp
repnz
xchg
mov
test
je
orl
pop
mov
sbb
pop
mov
xchg
cwtl
je
and
ja
cmpsl
and
dec
mov
rcrl
sahf
mov
pushf
mov
sub
shr
and
fldcw
cmp
int3
sbb
out
outsb
xchg
bound
push
fisubrl
insb
xor
scas
pop
pop
ficoms
xor
mov
sbb
bound
sbb
mov
sbb
test
les
pop
outsl
mov
and
push
push
sbb
ljmp
sub
and
divl
nop
pop
outsl
add
sbb
in
xor
xchg
sbb
xchg
or
cmp
or
sbb
mov
pop
mov
sbb
shl
mov
xlat
pop
out
repz
decb
sahf
dec
jle
add
push
sub
adcb
xor
adc
adc
and
and
inc
xchg
or
std
movsb
mov
fwait
jg
loope
push
leave
lret
sbb
or
cltd
mov
js,pt
test
adc
ja
xor
jp
sbb
or
sbb
lods
pop
mov
sbb
test
iret
scas
sbb
ss
testb
or
shl
xlat
sbb
sarl
mov
in
test
imul
cmpsb
test
sbb
test
pop
cmp
sbb
fcoml
sbb
push
lret
xchg
add
ds
push
stos
lret
sub
aas
sbb
test
dec
push
icebp
loop
jae
scas
sbb
and
push
push
sbb
jo
lods
cmp
sahf
cmp
aad
sbb
add
xor
lahf
cli
pushl
loope
leave
push
fdivrs
sbb
mov
dec
xchg
add
jge
std
je
xchg
lahf
ffree
adc
mov
movsb
enter
push
sbb
push
int
in
xor
out
repz
adc
mov
xlat
sbb
ret
loopne
sbb
xchg
sbb
xor
pop
cmp
out
sbb
adc
jno
sbb
add
fwait
sahf
jg
imul
outsb
mov
inc
rcrl
outsl
inc
cmp
xlat
xchg
nop
sub
pop
sbb
xchg
ljmp
mov
mov
adc
inc
test
lret
push
sub
rcrb
into
ret
sub
mov
push
daa
cmpsl
and
lea
mov
mov
and
cmp
test
xchg
pop
and
dec
sbb
mov
sbb
repz
and
shlb
lahf
scas
jno
sbb
les
jnp
add
aam
lret
repnz
pusha
and
or
mov
lods
sub
sbb
rorb
mov
jecxz
sub
or
sbb
filds
inc
and
test
sbb
mov
daa
sbb
ds
sbb
push
orb
lds
rep
adc
sbb
sbb
lret
sbb
in
mov
inc
clc
test
lea
and
fidivs
xchg
inc
mov
loop
movsl
xlat
nop
sbb
lcall
sbb
mov
xchg
repnz
mov
add
call
scas
movsb
push
aas
jae
jb
rcr
stos
mov
dec
and
int
sbb
in
cltd
lock
jbe
and
xchg
fidivrs
push
and
mov
dec
jl
adc
push
sbb
fwait
cmc
loopew
fxam
mov
adc
pop
inc
filds
lock
xchg
push
xchg
adc
sub
jns
mov
int3
xor
sbb
fwait
cltd
inc
out
xor
mov
ja
rcrl
xor
in
aad
or
js
add
pusha
mov
mov
pop
mov
adc
xchg
dec
mov
js
mov
push
mov
pop
xor
int
cwtl
push
xor
cmp
ret
fs
mov
lea
cld
pop
cmp
stos
sbb
xchg
xchg
sbb
dec
punpcklbw
int
jne
xor
pop
mov
inc
es
jnp
test
out
sbb
loop
lods
push
jmp
cwtl
ret
jecxz
xor
test
sbb
push
sahf
fistl
sbb
int3
ss
push
sbb
push
dec
dec
push
mov
dec
adc
jmp
fldt
xchg
ficoml
sti
enter
aad
sbb
sbb
mov
inc
sbb
pop
mov
mov
push
cltd
pop
sub
mov
ror
push
jge
test
ret
popf
in
sbb
out
push
jp
and
xchg
gs
jmp
int
push
rclb
jb
add
movsl
fstpt
sbb
sub
repnz
or
add
sbb
cli
push
outsl
dec
sbb
je
mov
and
leave
inc
sbb
dec
pusha
pop
in
pop
or
push
sbb
push
sbb
or
mov
adc
or
mov
inc
mov
jo
out
test
iret
and
jle
and
ljmp
sbb
mov
mov
in
dec
hlt
add
xchg
ja
cld
data16
inc
movl
sbb
cli
pop
arpl
pop
mov
sbb
lock
inc
loope
add
sbb
jne
sbb
push
popa
add
cli
push
xchg
in
sbb
aas
pop
cmp
sbb
jl
insl
stc
inc
jle
pusha
push
cmp
aad
xchg
sbb
dec
enter
in
sbb
mov
push
xor
aam
sbb
insb
xchg
inc
jle
adc
test
push
fmul
mov
jmp
xchg
out
xchg
je
repz
ffree
adc
test
fistpl
clc
ja,pn
or
in
sbb
and
inc
cld
out
fs
fxch
sbb
add
daa
ret
dec
sbb
push
rolb
xchg
xchg
sbb
push
xchg
imul
testb
rcrb
xor
xchg
xor
cwtl
mov
sbb
mov
dec
or
cmpb
cmp
sbb
ljmp
lret
lcall
add
cli
sbb
fiadds
sbb
das
cltd
notb
fwait
incb
push
and
sbb
pop
stos
sbb
sbb
xor
pushf
std
inc
pop
and
pop
mov
mov
dec
adc
xor
rcrl
xor
jne
jbe
mov
std
cmpsb
sbb
lods
xchg
test
ljmp
xor
adc
das
pop
shlb
add
shrb
jnp
adc
xlat
test
loope
push
jbe
insb
fiaddl
xor
int3
and
arpl
sbb
mov
movsb
je
add
hlt
dec
cltd
adc
sbb
push
fstpl
lds
iret
loope
js
push
fcomps
movsb
sub
bound
rcrb
out
mov
movsl
xor
rcrl
sbb
mov
fsubs
outsl
jl
sbb
jne
rclb
lret
jge
jae
sbb
clc
lcall
ljmp
cmp
dec
call
or
jmp
sbb
rclb
pop
and
xchg
pop
mov
inc
and
and
cmp
mov
sbb
ret
jne
insl
sbb
icebp
es
add
data16
sub
lods
pop
adc
in
mov
sbb
ret
or
inc
lret
mov
lret
scas
aaa
mov
jg
dec
scas
int
adc
jle
in
xchg
sbb
inc
or
js
push
sbb
lock
into
jl
or
adc
icebp
aad
xchg
mov
dec
xor
pop
and
push
add
scas
or
sub
popf
out
insl
push
insb
sbb
in
cmp
pop
repz
sbb
sub
xlat
bound
push
pop
xchg
xor
and
cld
mov
xchg
arpl
cmpsl
cmc
or
cltd
xor
imul
inc
mov
sub
xorb
jp
add
jge
xchg
jne
adc
fidivrl
test
test
call
insl
and
sbb
in
sbb
adc
dec
les
arpl
lds
movsb
push
dec
in
test
xchg
push
bound
push
sbb
cmc
push
dec
add
or
dec
pop
sub
adc
sbb
cltd
mov
sub
rolb
into
jmp
mov
cmp
xchg
popf
cmp
leave
sbb
push
mov
push
sbbb
jb
dec
mov
stc
inc
sbb
ret
pusha
xchg
shrd
and
call
jno
subb
xlat
sbb
lds
testl
mov
sbb
jl
mov
inc
clc
sbb
jg
insb
leave
pushf
jecxz
or
push
mov
ds
sbb
hlt
data16
arpl
cmpb
stos
push
rcrl
or
pusha
xchg
arpl
clc
dec
jo
sbbl
xor
push
daa
iret
mov
mov
sbb
dec
inc
jmp
and
mov
in
pusha
cmp
pop
mov
sbb
out
faddl
sahf
sbb
jmp
pop
sbb
out
cwtl
cld
or
mov
cmpsl
lret
sbb
adc
lods
cmp
push
jns
popa
adc
push
decb
jb
aas
das
adc
sbb
or
xor
mov
decb
outsl
push
shlb
lret
je
adc
sub
jp
or
adc
mov
or
iret
cmpsl
xor
and
adc
icebp
cld
loope
sbb
mov
jg
mov
into
mov
add
clc
je
push
jbe
fldl
dec
fcompl
mov
cmc
sbb
iret
pop
mull
inc
jae
sub
sbb
mov
inc
push
pop
out
push
jne
jno
mov
movsb
adc
in
mov
test
dec
xorb
scas
lods
push
ret
cwtl
mov
repnz
jle
icebp
int
rcr
adc
cmp
jle
nop
ret
inc
in
ljmp
aas
pop
mov
mov
xchg
loope
cmp
inc
sti
ficomps
mov
sbb
sbb
mov
sbb
std
clc
push
lret
sbb
dec
adc
mov
popa
out
sbb
jb
mov
imul
or
fistl
mov
mov
xchg
repz
pop
inc
sbb
mov
test
test
pop
test
adc
sbb
sub
sbb
inc
jp
sbb
fs
mov
dec
mov
jecxz
or
imul
cwtl
pop
xchg
rcl
aaa
and
push
sbb
lds
daa
ds
sbb
lods
inc
sbb
push
sbb
pop
fisubrl
pushf
push
or
fnstsw
sbb
xor
sbb
mov
pop
fmull
sbb
add
loopne
sbb
xchg
push
lods
pop
jl
cmp
in
movsl
test
jg
mov
out
push
inc
lcall
cmp
mov
pop
mov
call
pop
or
jo
shrb
xor
dec
adc
mov
push
inc
lock
xlat
or
dec
test
add
push
sbb
xor
test
adc
mov
into
inc
loope
ret
pop
sbb
movsl
xchg
or
int
ficoml
sbb
xor
int3
xchg
inc
adc
jp
ret
xchg
js
test
mov
sbb
test
daa
mov
mov
sbb
jo
xor
mov
outsl
loopne
cmp
pop
mov
icebp
mov
movzbl
mov
nop
inc
mov
adc
neg
sbb
or
push
push
xchg
lods
cmp
fisubl
sbb
mov
push
ss
pop
cmp
mov
inc
jecxz
sarl
cltd
cmpsl
out
sahf
sbb
adc
push
xor
movb
pushf
nop
fdivrs
out
sbb
mov
cltd
in
adc
push
clc
sbb
fidivl
addl
sbb
pop
dec
js
cli
loopne
insb
sbb
das
in
dec
pop
jnp
adc
sbb
push
mov
outsl
xchg
mov
push
nop
mov
sbb
out
dec
or
mov
fldenv
adc
cmc
or
sbb
or
ret
push
movsb
xchg
iret
cmpsb
pop
into
fs
sbb
sbb
loope
cmpsl
xchg
push
out
adc
sbb
mov
pop
sub
mov
and
xchg
test
dec
sbb
orb
jo
or
mov
xchg
sbb
jp
mov
ljmp
sub
or
test
add
sbb
mov
jmp
loope
sbb
rolb
fisttpll
or
rcrb
imul
loope
inc
add
test
xor
movsl
cmp
cmp
push
cmp
pop
pop
xor
adc
mov
add
push
cli
sbb
iret
mov
push
pop
sbb
dec
sub
mov
pop
sbb
loop
cmpsb
test
sbb
xor
rcrl
jle
inc
std
cmp
cli
sbb
mov
repz
sub
icebp
push
push
adc
and
inc
arpl
daa
addl
push
repz
push
cmp
fsubrs
xchg
repnz
xchg
and
mov
sbb
ret
push
mov
sbb
cs
sbb
test
mov
jmp
add
test
je
subb
in
sbb
pop
imul
hlt
mov
sbbl
lods
and
add
push
test
cs
lret
cmp
mov
push
adc
push
scas
sbb
shll
pop
add
loope
jbe
jle
xchg
negb
or
lods
add
sub
jp
pop
sbb
cwtl
rclb
jp
cmp
mov
push
cli
ret
fpatan
nop
cmp
pop
in
inc
ljmp
movq
sub
test
data16
inc
add
cld
jecxz
ficoms
adc
cmpsl
push
shlb
adc
sbb
shl
and
xchg
sbb
mov
lds
pop
enter
imul
aad
xchg
test
ljmp
mov
and
or
mov
sbb
inc
and
jnp
jge
test
and
xor
adc
rolb
push
push
jmp
mov
sbb
mov
rcrl
jecxz
bound
lock
sbb
rolb
imul
sbb
dec
mov
sbb
jns
in
daa
sbb
dec
cmpsb
cmp
mov
sahf
insl
sbb
insb
mov
enter
jo
push
and
jae
loope
ror
cmp
xor
out
add
jmp
and
imul
lret
mov
xor
push
xchg
xchg
adc
mov
sbb
lcall
stos
push
cmpsb
jae
adc
shlb
xchg
dec
and
int
adc
mov
pop
add
dec
cmp
adc
pop
sbbl
es
das
lods
cmpsl
sbb
imul
addr16
pop
out
mov
mov
sub
das
call
jo
mov
sbbl
sbb
fstpt
sbb
adc
xchg
xor
dec
jl
inc
in
jle
push
sbb
into
mov
sbb
scas
outsl
fs
js
or
sbb
sbb
insl
hlt
icebp
gs
sbb
fimuls
add
jp
in
int
ds
inc
inc
sbb
outsb
mov
test
pop
frstor
insb
lea
in
repnz
cmp
pop
xchg
sbb
cmp
jno
xchg
repz
ljmp
mov
xor
push
inc
inc
mov
out
mov
pusha
iret
hlt
push
dec
inc
push
xorb
push
mov
loopne
jne
push
push
fcmove
rorb
add
push
mov
cmp
imul
push
sbb
dec
fldcw
dec
sti
adc
les
xor
jnp
mov
fwait
cmp
sbb
xchg
mov
pop
orl
jecxz
sbb
xchg
lahf
stos
sbb
sub
xchg
gs
movsb
rep
adc
into
cld
jmp
add
popf
aad
aam
sbb
add
jp
leave
sbb
ret
mov
lahf
jne
out
stos
pop
bsf
sbb
adc
fisttpl
sbb
sub
or
xchg
popa
inc
push
sti
adc
scas
and
sbb
mov
jp
adc
sbb
leave
insl
aaa
out
pusha
sub
xor
sarb
sbb
leavew
mov
es
hlt
adc
adcb
jno
or
sub
xchg
or
imul
sbb
fnstcw
stos
sahf
and
adc
dec
loopne
mov
adc
mov
push
in
sbb
pushl
rorl
jecxz
rcrl
pop
xchg
push
xor
xor
sbb
push
jns
push
mov
cmp
cmp
sbb
popa
cs
mov
sbb
sahf
arpl
pushf
nop
adcb
cmp
dec
into
mov
push
push
scas
pop
adc
sbb
sub
or
sbb
rcrb
pusha
xor
outsb
lahf
adc
or
inc
movsl
movsb
ret
pop
rcrl
fcomp
push
push
mov
jmp
fwait
xor
je
sbb
lahf
fstl
rorl
nop
sbb
push
mov
add
mov
jl
mov
sbb
rcrl
inc
cmp
mov
push
pop
test
sbb
dec
adc
push
stc
xor
clc
adc
jbe
scas
mov
mov
sbb
out
cmp
jge
nop
jbe
adc
loopne
ret
loope
scas
sbb
cs
pop
sbb
sub
dec
cwtl
dec
jns
sbb
xor
in
cmp
fs
mov
test
sbb
and
das
mov
mov
adc
add
enter
imul
jg
xor
pop
stos
gs
mov
movsl
repz
pop
fdiv
mov
dec
scas
popf
jbe
add
je
jnp
lods
mov
ror
jae
sbb
inc
fnsave
dec
sub
push
je
xor
in
clc
aas
xor
lahf
sbb
sbb
xchg
mov
cmpsl
insb
pop
sub
pop
aaa
inc
sbb
dec
xlat
mov
adc
add
mov
adc
push
cmpsl
sbb
and
ss
push
pop
std
sbb
or
ror
mov
dec
jbe
out
fwait
mov
popa
sbb
lods
mov
xchg
push
mov
cwtl
es
aaa
lods
lret
add
jecxz
cmp
fldl
enter
cmc
xor
mov
sbb
sub
sbb
js
inc
jp
es
dec
jae
push
or
sbb
jno
sbb
jne
loopne
and
orb
lds
lods
sbb
fisubl
imul
jmp
in
pop
cmp
sarb
in
fucom
mov
pop
icebp
cmc
sbb
sahf
pop
sbb
daa
or
mov
xchg
mov
std
loopne
mov
push
sub
sbb
iret
cmpl
dec
sar
in
jb
jmp
mov
in
cmc
adc
or
lret
and
mov
test
jle
push
pop
adc
sbb
lret
in
xor
sbb
fdivl
dec
fists
sbb
jns
repz
mov
mov
and
pop
jns
cmp
pop
jb
add
hlt
repnz
xchg
cld
push
or
cli
stos
xor
iret
sbb
in
outsb
cmpsl
sbb
test
and
sbb
lea
sbb
mov
fldenv
sbb
test
loop
sbb
inc
jne
sbb
test
sub
adc
pop
xchg
sbb
inc
es
test
push
cmp
adc
sbbl
test
in
or
jb
iret
sbb
xor
jo
testl
int3
lret
sbb
xor
cmc
sbb
jp
push
sbb
pop
into
jne
jo
sbb
popf
add
call
push
out
jbe
cwtl
sbb
fsub
mov
pop
ss
fstl
outsb
fnclex
out
sbb
aad
test
adc
mov
sti
and
loop
sbb
mov
push
adc
push
leave
lds
pusha
daa
sbb
jl
outsb
sbb
jge
mov
adc
cmp
mov
push
push
mov
pop
sbb
fsubr
push
lods
jae
roll
ljmp
test
iret
inc
sub
cmpb
cmovs
mov
rcl
fsubrl
mov
inc
in
loope
out
mov
pushf
sbb
fcoml
das
xchg
mov
clc
insl
inc
xchg
pusha
arpl
sbb
popa
hlt
sub
mov
sbb
jb
cld
sbb
xchg
loope
popa
and
aad
push
imul
mov
cmp
lcall
mov
sub
push
pop
xor
jb
inc
sbb
push
mov
cmpw
fcoms
sbb
je
push
sbb
int
adc
push
clc
sub
fnstcw
jbe
stos
add
sbb
pop
je
mov
into
mov
mov
push
add
clc
std
adc
xchg
and
pop
sbb
sbb
sbb
ret
loop
hlt
push
sbb
sti
mov
sarl
mov
pop
test
lods
sbb
pop
push
stos
and
mov
daa
jle
mov
mov
int
push
sub
shll
push
cmp
dec
ficoms
inc
and
and
int3
jbe
sbb
dec
enter
fwait
sub
out
jge
add
xlat
loop
jns
je
fisubs
pop
iret
sbb
mov
mov
xor
sbb
or
dec
test
int
xor
push
push
enter
imul
shll
sub
test
movsb
cmp
mov
mov
sbb
fcomp
movsl
pop
das
dec
stos
xchg
and
std
dec
scas
xchg
xchg
jns
lcall
xor
or
ror
fsubrs
xchg
movsl
ret
test
xorb
rorb
lock
adcl
jecxz
leave
and
or
cmpsl
fidivs
mov
xchg
loope
xchg
and
xchg
push
popf
add
and
decl
not
daa
or
sbb
mov
mov
xchg
in
push
icebp
push
insb
shll
stc
push
push
pushf
es
dec
sbb
mov
in
sbb
repz
mov
lcall
xchg
jne
imul
lret
sbb
jne
lcall
xchg
and
lret
mov
cltd
xlat
inc
call
jae
xor
push
jae
movsl
inc
shrb
ss
cmpl
and
sbb
adc
dec
jb
add
loopne
sahf
mov
cmpsb
outsl
pop
push
sbb
ret
push
push
insl
cmp
outsb
lcall
aad
mov
mov
pop
cmc
push
add
or
sbb
xchg
xchg
sbb
dec
loopne
mov
dec
dec
ror
in
push
mov
or
add
cwtl
adc
mov
in
lock
ljmp
xchg
rorl
sbb
push
test
and
sbb
ret
sbb
lcall
adc
adc
sbb
out
outsb
mov
or
outsl
inc
fs
jg
sub
xor
pop
sbb
test
sub
jp
push
sbb
sub
out
cltd
rcll
mov
jbe
fs
pop
and
ror
sbb
pop
push
fnsave
loop
dec
inc
push
fwait
mov
sbb
mov
jmp
test
std
dec
sub
adc
rcrl
cwtl
jo
es
dec
out
test
adc
scas
jo
jmp
mov
int3
add
imul
sbb
loope
xchg
xchg
and
stos
sub
inc
dec
push
jg
xchg
sub
sbb
cmp
mov
popf
push
sbb
inc
out
lcall
adc
pop
mov
sbb
and
lret
adc
xorb
fistl
popf
add
stos
pop
sub
mov
cmp
pop
dec
das
sbb
jns
mov
ss
sub
adc
add
pusha
xor
ljmp
xchg
dec
xchg
test
dec
sbb
pusha
insb
mov
enter
or
lods
mov
jmp
adc
fmull
icebp
iret
shll
sahf
mov
outsb
inc
dec
out
inc
loopne
adc
shrl
jmp
cmp
jnp
hlt
mov
cwtl
fsubrl
mov
subl
push
cld
sbb
sub
jno
inc
xchg
ja
shlb
or
pushf
sbb
cwtl
push
lahf
jo
sbb
dec
jae
arpl
jl
sbb
popf
mov
add
xchg
cmp
jle
cmp
daa
xchg
sbb
jno
mov
sbb
sub
lret
sbb
inc
jb
loopne
loope
sub
fsubrs
and
jecxz
outsb
sbb
add
sbb
frstor
sub
dec
cs
and
xor
out
inc
sbb
xchg
xorb
sbb
sbb
jl
pop
ret
pop
push
insl
push
cli
sahf
push
push
sbb
subb
pop
mov
notb
sbb
add
dec
enter
jle
cwtl
sbb
mov
adc
push
adc
fucom
mov
inc
xchg
push
lahf
aad
mov
cmpl
sbb
pop
jns
dec
fidivrs
int
mov
jae
or
push
cmc
fwait
sbb
cmp
sbb
xchg
xorl
enter
imul
pop
adc
or
xor
mov
adc
repz
or
iret
scas
repz
je
xchg
mov
mov
icebp
test
into
aas
lret
xor
sbb
add
sbb
jmp
dec
xchg
sarb
push
ja
jecxz
add
sbb
xchg
jbe
xor
fildl
push
loope
sbb
stc
fmull
les
dec
jns
sbb
ss
out
sbb
data16
insb
xor
dec
push
stos
push
fidivrl
lcall
sbb
ds
xchg
dec
pop
mov
sbb
mov
stos
sbb
mov
and
inc
adc
jp
adc
cltd
xor
pusha
icebp
mov
and
in
ret
add
xlat
jge
stos
mov
or
push
or
jae
stc
faddl
mov
push
push
movsl
add
xor
xchg
add
mov
into
sbb
mov
sub
insl
cmp
leave
sbb
add
sbb
and
cmc
imul
or
sbb
ret
adc
dec
jge
jno
mov
int3
gs
test
mov
andb
mov
in
dec
or
js
arpl
bound
mov
lea
js
rorb
pusha
dec
in
test
jge
adc
subb
adc
outsb
mov
pop
push
sbb
jg
cmp
pop
int3
or
and
pop
pusha
xlat
add
pop
sub
dec
stos
inc
sbb
lds
sbb
movsb
int
sbb
fs
sub
mov
mov
adc
enter
fnstenv
insb
mov
adc
loop
sub
sbb
cmp
fadds
dec
pop
call
sbb
or
lret
dec
sub
push
mov
push
push
cmp
sbb
les
pop
outsl
mov
sbb
cmp
imul
xor
sbb
pop
loopne
or
rcrl
jg
or
fmul
sbb
enter
xchg
ds
out
addl
repnz
out
pop
ficompl
sbb
dec
outsl
sbbb
push
out
sub
loope
adc
sbb
fldenv
insb
or
dec
dec
jne
call
adc
aas
call
cmp
test
pop
data16
outsb
ds
cmp
mov
ret
push
fdivrp
hlt
add
icebp
push
test
adc
lods
test
xchg
push
jo
ficomps
pop
test
push
sbb
ss
fcompl
sahf
add
in
dec
sbb
fwait
loopne
iret
add
roll
outsb
and
add
mov
add
xchg
fnsave
cld
lock
sbb
inc
adc
sbb
sbb
pushf
sbb
push
adcb
push
mov
mov
arpl
add
in
lods
mov
jg
push
adc
aad
sub
push
in
sbb
jno
push
mov
sbb
dec
sub
fdivrl
mov
in
xchg
iret
fmuls
in
mov
jmp
and
divl
sbb
push
push
test
mov
cs
sti
adc
loope
not
and
adc
mov
sbb
pop
nop
ret
sbb
insl
xchg
push
cmp
int
mov
sbb
sbbl
adc
add
test
lds
jp
flds
testb
je
pop
cmp
sbb
repnz
inc
sbb
cld
ja
ljmp
or
dec
adc
push
aaa
test
aam
or
push
adc
fidivs
out
jae
ret
xchg
cli
adc
mov
and
xor
dec
mov
pop
mov
cltd
xor
sbb
add
popa
adc
stos
call
ret
add
mov
sbb
repz
mov
mov
scas
movsb
jle
pop
xchg
in
mov
xchg
les
fstpl
xor
fiaddl
xor
xchg
cmp
aam
jbe
sbb
jmp
and
pop
add
mov
inc
mov
movsb
adc
adc
fisttps
out
and
gs
lcall
cwtl
out
addr16
rcrl
dec
inc
enter
cmp
ficompl
adc
in
ja
dec
xor
gs
nop
cmp
mov
jmp
cmp
mov
adc
inc
sbb
sbb
add
push
or
jge
mov
xchg
ds
lret
mov
xchg
pop
lcall
push
arpl
xlat
sbb
addl
test
jae
ret
rol
jo
sbbl
pop
into
and
add
lret
lock
dec
push
je
mov
fwait
cmp
test
push
ret
pushf
inc
insl
dec
push
add
xchg
sbb
jo
mov
xchg
mov
ss
adc
sbb
pop
inc
stos
lea
test
lret
outsb
ljmp
dec
mov
dec
std
pop
imul
mov
add
push
dec
lret
in
sti
sbb
aam
iret
sbb
in
or
or
sbb
or
sub
movsb
sbb
test
dec
push
stos
sbb
sbb
aad
outsl
out
sub
push
push
jne
ja
push
and
fs
popf
or
repnz
pop
pop
sbb
or
shrb
xchg
push
cmp
sbb
arpl
int
jecxz
xor
imulb
push
inc
sbb
cmc
out
shrb
sbb
mov
mov
or
or
stos
mov
jne
sub
ficompl
in
mov
mov
push
and
in
adc
cli
mov
es
sbb
dec
repz
sbb
adc
sub
push
outsl
lret
pop
je
test
mov
pop
jnp
mov
addr16
test
popf
pop
fimull
sbb
stos
aas
pop
sbb
jno
xchg
jg
inc
sbb
movsb
dec
push
push
into
pop
mov
cmp
mov
ljmp
xchg
out
lcall
adc
xor
dec
inc
jb
or
jge
mov
xor
sub
jecxz
adc
insb
sti
sbb
enter
add
icebp
mov
pop
rcll
sub
leave
rsqrtps
push
pop
rorb
add
ret
aam
mov
sbb
hlt
mov
ja
mov
lods
sahf
bound
add
sub
sbb
ljmp
sbb
mov
push
mov
add
repz
add
mov
sub
ja
mov
cmp
xchg
sahf
scas
sub
jecxz
aam
cld
mov
mov
inc
xchg
xor
jmp
push
jns
adc
fdivrl
jp
dec
adc
aas
fistps
loopne
arpl
aad
andb
into
out
stc
in
iret
push
imul
or
dec
ds
lods
jge
dec
mov
sub
mov
dec
push
fisubl
xchg
xor
inc
mov
inc
inc
sbb
in
fdivrs
fiadds
mov
sub
pop
je
out
fnsave
out
push
cs
cvttps2pi
std
sbb
inc
and
inc
mov
push
jns
sbb
pop
cmpsb
ret
sub
jbe
push
mov
shlb
fs
push
sbb
repz
cld
mov
cltd
scas
fistl
push
cwtl
lods
sbb
icebp
and
add
xchg
mov
sbb
leave
nop
xchg
mov
inc
push
pop
fucomip
push
aam
pop
aad
mov
and
add
pusha
loopne
jns
shrb
fimuls
inc
sarl
mov
out
ficoml
ret
cmpsl
out
and
sbb
pop
dec
inc
divb
dec
sbb
fistpl
in
inc
sbb
cmp
retw
pop
sbb
mov
outsb
mov
jo
repz
lock
push
mov
scas
cwtl
fsts
jnp
xor
dec
lret
loope
adc
rcrb
xchg
lea
fadds
mov
hlt
call
mov
jecxz
movsl
scas
or
repz
jle
xchg
out
data16
pop
sbb
jle
sbb
insb
movsl
les
mov
jnp
dec
pop
push
add
push
adc
lds
addr16
insb
cwtl
sti
cmp
jmp
repz
cmp
push
pop
bound
mov
mov
mov
jb
add
pop
into
das
inc
xchg
cld
xor
push
push
hlt
pop
movsl
pop
ror
sbb
and
inc
add
jbe
call
insl
in
sarl
sbb
aaa
leave
aas
call
or
mov
jae
inc
pop
sbb
pop
lods
cmp
and
mulb
xchg
add
adc
dec
sbb
mov
icebp
mov
decl
adc
inc
sar
testb
sarl
aaa
jns
xlat
out
sub
in
pop
xchg
or
xchg
je
sti
push
aaa
xchg
push
sbb
inc
jge
push
jns
int3
jbe
addr16
push
cmp
dec
js
xchg
add
sbb
xorl
adc
es
or
push
xor
fcoms
lock
mov
movsb
icebp
push
sbb
push
sub
sub
jge
mov
adc
and
in
outsb
ret
pop
sub
out
icebp
sbb
xlat
mov
fsubs
decl
bnd
sbb
push
mulb
sbb
sbb
fidivrl
xlat
sbb
cwtl
xor
adc
sbb
inc
inc
sub
out
jbe
mov
pop
pop
stos
inc
adc
loop
or
jne
push
mov
test
test
mov
and
pop
xor
sbb
nop
ficoml
dec
mov
into
push
mov
cld
inc
push
shrb
les
bnd
outsl
leave
or
push
lea
sbb
pop
stos
push
xchg
scas
pop
pop
sbb
aam
add
jmp
stos
xor
add
xchg
mov
bound
movsb
cmp
sbb
cmp
add
popf
sub
sbb
loop
out
xchg
fistl
lahf
jns
mov
pop
pop
out
mov
adc
fdivp
outsl
fcmovne
push
jle
clc
loope
xchg
sub
fstl
sbb
inc
ljmp
dec
lcall
adc
and
leave
addr16
xor
pop
or
sbb
pop
mov
popl
inc
xor
push
scas
sbb
pop
or
fldcw
adc
push
test
sbb
sub
sahf
fwait
add
push
dec
add
pop
loopne
push
pop
push
aad
mov
mov
out
aam
add
test
cmp
loope
xor
sbb
mov
gs
or
xor
sub
out
inc
mov
sub
cmp
jl
or
push
pop
aas
xchg
in
arpl
sbb
pop
xorb
jge
push
test
icebp
xchg
and
cmp
cmp
scas
cmpsb
arpl
outsb
adc
mov
inc
xor
xchg
fldl
sbb
add
cwtl
xchg
int
cltd
sbb
mov
push
loope
xor
cmp
cmp
or
jns
test
pop
cs
mov
push
es
decl
and
xor
push
fcompl
mov
sbb
test
and
shr
push
xor
add
mov
inc
testb
mov
or
sbb
cwtl
leave
jle
sbb
out
mov
roll
push
and
out
mov
ljmp
xchg
inc
mov
sbb
add
cmpsl
sub
jns
or
fiadds
jl
mov
inc
test
fcompl
inc
jp
jg
mov
test
adc
ss
sbb
push
fwait
mov
push
pushf
pop
outsl
sbb
inc
gs
push
test
mov
fcmovne
repz
sarl
daa
mov
lds
lahf
jnp
shll
lret
loop
push
jns
push
xchg
ret
inc
inc
mov
lods
sbb
stos
mov
jecxz
add
mov
fistps
cmpsl
mov
jae
cmp
mov
adc
daa
scas
stos
sbb
dec
aad
lods
mov
rcrb
adc
adc
test
test
cmp
je
jg
inc
lea
add
lock
or
push
jae
les
add
xchg
push
xor
sbb
sub
add
ss
sbb
pushl
lcall
fcmovu
in
jmp
xchg
xlat
sbb
pop
push
mov
sbb
lods
popa
or
dec
pop
jae
push
lcall
push
cwtl
sbb
and
sbb
insb
xor
and
lods
sbb
dec
addr16
mov
js
pop
pop
aaa
mov
ret
stc
insl
sbb
rcll
mov
rorl
inc
addr16
fcomps
mov
pop
cmc
pusha
inc
pop
rcrl
rcr
popa
xor
mov
xchg
jb
push
fnsave
xor
mov
mov
sbb
add
aam
sbb
sbb
mov
sbb
lret
in
nop
cmp
js
daa
not
sub
add
test
dec
pop
jl
sbb
clc
cmpsb
mov
or
adc
push
ret
adc
cs
fnstsw
sbb
mov
and
fs
and
sub
repnz
fistpl
pop
or
jg
popa
hlt
mov
adc
sbbb
xor
cmp
rcrl
lock
arpl
loopne
xchg
sbb
mov
sbb
loop
adc
push
mov
dec
jne
clc
push
fidivrl
data16
insl
push
cmp
pop
outsb
leave
dec
cli
pop
push
aas
es
inc
sbb
mov
push
pop
adc
adc
outsl
lret
pop
scas
push
rclb
sbb
xor
shlb
xlat
pop
mov
sbb
sbb
inc
sbb
dec
jo
xchg
movsb
mov
add
and
cmp
sbb
inc
adcb
out
mov
xchg
mov
aaa
push
add
add
psraw
add
dec
push
movsb
subb
test
adc
scas
cmp
adc
sbb
mov
add
sbb
and
pusha
sbb
push
pop
daa
and
notb
sbb
push
enter
sub
jmp
adc
mov
movsb
loopne
jo
sbb
outsb
iret
sti
lods
xchg
ss
ret
sahf
aam
pushf
dec
mov
sbb
jmp
movsb
rorl
or
sbb
ret
into
icebp
sbb
xchg
fwait
cmp
cmp
add
mov
xchg
xchg
mov
sbb
mov
cld
dec
inc
cmpsb
dec
push
cmp
repz
test
xor
out
out
lret
lods
push
fsubs
cli
stc
push
xor
adc
add
mov
mov
leave
stc
cmp
jb
lcall
sbb
inc
lods
sbb
xchg
sbb
lret
jno
sbb
cmpsb
push
push
icebp
rorb
daa
xor
push
xchg
iret
loope
test
adc
cmp
fmul
sbb
mov
push
sbb
rorb
sbb
inc
push
push
test
lret
push
test
fs
push
xor
pop
inc
mov
bound
mov
rol
xchg
std
ret
cld
loop
sbb
repz
push
sbbl
stc
push
imulb
les
mov
out
mov
add
ds
test
in
cld
sbb
xor
shlb
xchg
rcll
and
cmp
cmp
inc
sub
add
and
aas
mov
rcrl
in
jg
scas
jns
sbb
ficomps
sbb
cs
loopne
dec
adc
adc
pusha
and
pop
inc
pop
xchg
loopne
lahf
sbb
std
sbb
mov
lcall
mov
sbb
adc
mov
dec
mov
loope
pop
adc
and
push
lret
inc
mov
adc
inc
fisubrl
fs
enter
cli
xchg
adc
inc
mov
sub
in
jnp
std
mov
bswap
cmp
add
out
pop
pop
mov
sbb
mov
sahf
sbb
loopne
sti
sarl
sbbb
jno
insb
mov
adc
sbb
inc
lds
cltd
dec
and
jnp
push
dec
dec
cmpl
bound
icebp
mov
fsubl
pop
pop
cltd
int3
sbb
and
add
xchg
dec
or
mov
call
rclb
dec
lcall
mov
in
jecxz
jl
inc
xchg
sub
mov
sbb
jae
aaa
sbb
scas
lods
adc
mov
icebp
fs
and
arpl
cmpsl
loope
test
lfs
sbb
pop
ret
loopne
pop
popa
in
push
sbb
sahf
cmp
cltd
pop
sbb
aas
xor
or
add
pop
adc
popa
sbb
lret
and
push
and
pop
jge
pop
mov
int3
xchg
aaa
mov
data16
cmpsl
dec
inc
pop
adc
in
jecxz
aam
lret
mov
cmc
imul
pop
js
xorb
shll
leave
push
mov
mov
dec
lcall
mov
and
adc
adc
repnz
cmp
loope
movsb
xchg
sbb
rorb
pop
stos
fwait
dec
pop
jge
arpl
xchg
test
dec
jle
adc
repnz
test
xor
xor
pushf
push
movb
or
out
call
cmp
sub
mov
mov
xor
sub
pop
fidivl
shll
sub
movsl
pop
mov
cli
das
jb
sbb
outsb
sub
dec
fwait
test
mov
add
adc
ljmp
aad
adc
fistpl
cmp
das
adc
sub
push
stos
pop
sbb
sbb
lods
jbe
inc
clc
mov
cltd
in
sbb
pop
ja
movsb
movups
sbb
push
fiaddl
mov
mov
out
cmpsb
call
ljmp
cli
push
imul
sub
std
push
fisttpl
xor
imulb
dec
repnz
mov
jmp
and
pop
xchg
dec
scas
loope
cwtl
mov
jge
adc
lods
or
mov
pop
sbbl
push
sub
adc
pop
inc
lock
mov
cmp
aad
inc
cmp
lods
test
pop
sbb
into
pop
push
cld
mov
int3
xchg
dec
pushl
loopne
pusha
cld
sbb
es
mov
add
mov
push
push
ja
rcrl
xchg
jnp
sub
pop
xchg
sub
cld
adc
push
sub
arpl
cmp
ret
mov
es
fcompl
or
fisubs
and
sahf
push
sbb
cwtl
aas
and
dec
arpl
lret
sub
stc
rcrl
lock
sbb
or
sti
jno
xchg
js
xor
movsl
xor
or
daa
sbb
mov
inc
sbb
test
jmp
or
add
in
fiaddl
dec
inc
int
je
cmp
fstpl
clc
xchg
lds
push
sub
leave
imul
mov
sbb
dec
mov
adc
ret
push
sbb
inc
push
in
push
loopne
cmp
push
mov
lcall
add
inc
sbb
cwtl
adc
sbb
mov
rcll
loope
nop
jg
push
sbb
cld
cmc
mov
cmp
addr16
out
inc
sti
add
repnz
cmc
or
push
jne
or
out
mov
sbb
insl
push
decb
scas
nop
and
aad
pushf
dec
fsubrs
push
enter
iret
imul
or
js
in
sti
sbb
sbb
mov
cmp
out
repz
adc
pop
faddl
or
pop
fidivs
xchg
sbb
xchg
sahf
test
jno
lret
repz
xchg
push
cmp
inc
sbb
aad
jmp
xchg
shl
stc
mov
mov
out
sbb
cmp
inc
sbb
fildll
cli
xor
sbb
incl
aas
sbb
jge
dec
loop
dec
insl
sbb
add
lds
sbb
push
data16
add
push
push
jmp
push
rolb
pop
jne
mov
mov
xchg
fs
jl
xor
inc
lret
lret
xor
ret
jno
lcall
pushf
popa
in
sti
rorb
mov
jb
adc
xchg
gs
xchg
pop
sbb
jae
inc
int
out
sbb
and
call
push
sbb
and
xorl
mov
mov
adc
sbb
ja
outsl
pop
push
push
sbb
fidivrs
fldt
sbb
sub
jnp
cmpsb
push
adc
mov
xchg
les
jge
popa
jg
mov
sbb
jo
aaa
push
out
fwait
push
inc
sbb
mov
fucompp
jns
add
sahf
imul
scas
cwtl
or
js
aaa
jbe
mov
fcmovb
popa
sub
push
adc
adc
mov
mov
mov
sbb
cmp
mov
movsl
out
ss
mov
xor
outsb
push
pop
bound
outsl
mov
and
xchg
jb
mov
sbb
loope
in
mov
shrl
sbb
mov
test
push
in
stc
jo
rorb
pushf
mov
adc
ljmp
mov
dec
sbb
push
rorb
lret
cmp
adc
xchg
xchg
test
sbb
jnp
lock
mov
out
and
xchg
push
pop
dec
sbb
ss
mov
movsl
xchg
adc
xchg
cwtl
adc
push
mov
aaa
adc
loope
cmp
imul
hlt
cs
xchg
enter
sub
nop
stos
pop
dec
movsl
cltd
push
jp
mov
movsb
jecxz
rcrl
xor
jae
rorb
jbe
pop
mov
sbb
add
cld
mov
clc
sbb
shrb
sbb
jb
repz
fcmovnb
add
add
sub
rcrb
and
mov
sti
lods
mov
sbb
loop
sbb
shr
xor
pop
adc
push
mov
and
cli
pop
push
sahf
cmp
fldenv
xlat
mov
sbb
ss
pop
cwtl
loope
push
jbe
mov
lods
sbb
xchg
push
jo
dec
repz
test
sbb
movsl
push
sahf
shll
dec
adc
xor
rcrl
pop
push
ret
mov
xchg
xchg
sbb
add
pop
sbb
sti
outsb
xchg
cmp
sbb
cmp
xlat
movsb
sbb
add
sbb
mov
fnstenv
mov
popa
outsb
jbe
push
sbb
pop
arpl
subb
stc
sbb
xchg
outsl
push
test
adc
es
insl
lea
movsb
cmpsb
sub
mov
xchg
lahf
push
pop
jle
inc
call
stc
sbb
fcomps
lods
mov
jmp
mov
sub
xchg
add
test
add
sbb
jo
push
stos
scas
cmp
popf
lcall
les
sub
push
out
popf
ret
sbb
pop
iret
push
mov
push
sbb
jnp
xor
lea
cmpl
ss
pop
push
xchg
jnp
repz
scas
sbb
flds
inc
outsb
pushf
jp
lret
adc
mov
push
sub
sbb
int
ret
nop
mov
hlt
call
jmp
sbb
mov
sbb
aas
out
mov
std
sub
das
sbb
mov
mov
cmp
cwtl
adc
inc
hlt
add
inc
adc
int3
cltd
sbb
dec
imul
loopne
cmp
sbb
xchg
pop
pop
add
cs
xor
jae
mov
mov
add
sbb
mov
fsubrs
xchg
mov
mov
jp
push
ds
jne
sbb
xchg
stos
add
add
jmp
out
shrb
push
sbb
mov
or
add
fucomip
mov
rcrl
pushf
sahf
push
sbb
test
or
dec
jno
sbb
push
jmp
fadds
insb
data16
sbb
les
bound
lods
mov
insb
pop
sbb
gs
sbb
push
jle
sbb
mov
lret
inc
inc
sbb
xor
sub
sbb
in
repz
sbb
mov
test
bound
popf
jae
sbb
into
xorl
imul
or
and
or
and
mov
inc
sbb
ret
subb
xchg
adc
cmp
out
shll
in
sbb
push
mov
cmp
scas
or
xchg
and
pop
jge
loopne
mov
int3
push
arpl
aaa
xchg
in
push
fwait
test
adc
jnp
sbb
out
mov
sbb
cmp
xchg
jae
js
add
sar
mov
mov
sub
out
sub
inc
loope
xchg
loope
jg
add
sbb
xchg
dec
adc
pop
mov
jl
adc
cld
outsb
jecxz
inc
jb
pop
ret
sbb
js
popf
lea
inc
sbb
repnz
pop
aas
stos
sbb
pop
dec
mov
sbb
xlat
ror
jle
mov
test
int
and
xor
adc
inc
add
mov
jns
clc
stos
repz
add
mov
dec
dec
loop
push
sub
sbb
jne
and
sbb
jae
cmpsb
adc
sub
jb
adcb
adc
addl
sbb
test
bound
in
push
mov
shrb
jmp
cs
sbb
jg
mov
sbb
repnz
out
xor
adc
mov
iret
sbb
shlb
into
mov
mov
mov
mov
mov
pop
cmp
bound
mov
sbb
out
push
sbb
vmread
fbstp
sbb
int3
xor
sub
dec
mov
sti
sbb
daa
and
xor
add
adc
cwtl
loope
leave
or
mulps
lods
push
int3
lods
xchg
out
sbb
adc
outsl
into
and
sbb
adc
push
sarb
imulb
mov
dec
jo
xor
xor
push
or
ss
push
sahf
sbb
adc
ljmp
push
lret
cwtl
in
pop
xchg
and
adc
jmp
outsl
fsub
sbb
subb
sbb
ret
neg
sub
cmp
inc
sbb
add
sbb
or
sbb
popf
aas
mov
jl
repnz
sbb
and
iret
push
ret
sbb
inc
testl
loope
xchg
jno
fs
cmpsb
pop
mov
adc
xor
mov
sbb
roll
hlt
loope
sbb
lock
mov
cltd
sbb
xchg
jmp
push
sbb
je
push
sbb
sub
and
test
mov
repz
ret
std
pop
push
mov
and
pop
jp
outsb
mov
sub
gs
es
inc
push
push
nop
push
cmp
sbb
push
int
sbb
adc
les
stc
sbb
scas
clc
cmc
mov
xor
movsl
adc
push
cmp
xorb
add
inc
imul
sub
or
mov
mov
jne
in
add
jge
jno
xor
call
das
cmc
sbb
sub
sahf
sbb
jg
mov
sbb
fnstenv
mov
out
enter
imul
pop
add
xor
loope
jecxz
mov
xor
cmp
pushf
fwait
push
pop
popa
sbb
xchg
or
jg
scas
sarb
or
push
jnp
call
rolb
outsl
pop
sbb
out
sbb
cmpb
rolb
xlat
mov
jecxz
inc
adc
dec
test
or
cs
fistpll
sbb
aaa
shlb
sbb
jecxz
test
pop
testl
test
cmp
sbb
lock
mov
ja
cmp
scas
iret
in
aam
mov
pop
push
clc
loope
ss
sbb
push
add
xor
mov
xchg
mov
and
test
aad
fistpl
sbb
sbb
lcall
pop
in
or
enter
mov
xor
call
std
cli
les
adc
adcl
inc
and
aaa
pop
sub
mov
adc
insb
out
sbb
dec
mov
mov
dec
push
pop
stc
push
push
and
adc
cli
jnp
aam
push
sbb
xchg
cmp
rclb
popa
sub
dec
mov
mul
cmc
jne
push
sbb
stc
inc
shlb
pop
add
sbb
mov
and
cmp
cmpsl
xor
fwait
dec
cmp
sti
adc
xor
adc
mov
in
ds
or
js
int3
aas
rorl
xchg
mov
jb
adc
adc
xor
and
pusha
dec
xchg
sbb
imul
xor
sbb
push
jl
outsb
std
mov
sbb
cwtl
bound
ja
ds
stc
lea
pop
sbb
repz
cmpsl
subb
lea
dec
xchg
or
data16
stc
adc
mov
std
sbb
xor
dec
pushf
cmpsb
sbb
pop
out
add
inc
inc
fstps
push
jmp
xchg
ffreep
mov
loopne
adc
jge
adc
sub
sbbl
cli
jbe
data16
es
push
dec
and
dec
cltd
mov
or
xchg
push
les
mov
outsl
in
dec
sbb
jns
shll
push
mov
or
scas
sbb
movsl
movl
insl
mov
sbb
dec
movsb
mov
je
into
dec
dec
or
sbb
sub
lods
push
sbb
mov
add
fistl
cmc
orb
and
push
leave
sti
cmp
sbb
das
mov
inc
out
adc
in
mov
jbe
sbb
pop
jge
ds
dec
data16
push
in
pop
and
lods
or
cmp
aaa
mov
lods
int3
mov
xchg
dec
sbb
outsb
jo
imul
sbb
or
iret
push
pushf
inc
ss
dec
sahf
stc
movsl
into
dec
and
adc
add
scas
sbb
mov
arpl
mov
adc
ja
out
jb
lods
mov
adc
sub
sbb
andb
es
mov
or
out
aad
fcompl
sbb
or
mov
dec
arpl
out
data16
outsb
pop
aas
andb
cmp
or
inc
stc
ficoml
cmp
mov
push
mov
cmp
lods
stos
inc
mov
jno
sub
cmpsb
sti
test
sbb
ret
negl
inc
mov
sbb
int3
inc
and
fsubrs
push
mov
lods
fcmovbe
xchg
dec
sbb
enter
and
push
pop
scas
loopne
out
pop
dec
sbb
icebp
sbb
sub
jo
pop
sbb
add
sbb
add
ret
sahf
sbb
push
or
push
push
sbb
sub
adc
sbb
addl
lahf
inc
pop
stos
inc
test
insl
sbb
add
sub
sarl
call
cmp
rcrl
test
sbb
int
inc
leave
mov
xchg
sbb
mov
jecxz
sbb
popa
dec
fiadds
popf
cltd
inc
es
pop
jno
fstps
xchg
mov
int3
or
or
xchg
pop
xor
sbb
lcall
sbb
shrb
mov
pop
sbb
repnz
fwait
xor
stc
sbb
mov
xor
xchg
repz
pop
cmpsl
adc
pop
into
scas
out
stc
lock
inc
loopne
sbb
xchg
cmpsb
jl
cmp
sbb
jmp
das
and
jle
mov
mov
scas
sbb
xchg
jbe
or
dec
sbb
and
and
push
sbb
sbb
sbb
jmp
jge
push
js
sub
test
or
push
in
inc
jmp
sbb
mov
xchg
sbb
jnp
scas
pop
xor
xchg
dec
js
xchg
jmp
int
jl
dec
and
lret
pop
test
mov
inc
outsb
sbb
fs
add
jb
mov
jecxz
vandnps
inc
sbb
test
jae
scas
das
sbb
shrb
subl
mov
and
test
stc
lock
cltd
popf
and
pushf
in
sbb
aas
or
adc
ret
dec
jb
jns
push
push
jecxz
adc
aas
addr16
xor
icebp
cmc
cmpsb
enter
sbb
or
out
mov
xchg
inc
sti
pop
jge
sbb
mov
test
pop
repnz
sbbl
es
out
and
ret
or
je
iret
mov
in
mov
add
xchg
dec
roll
add
icebp
add
outsb
ret
loope
into
dec
and
and
lock
xchg
sbb
lret
outsb
divl
stos
sbb
dec
hlt
cmp
jo
sbb
lea
pop
movsl
xor
outsl
mov
pop
lret
aaa
jmp
clc
stos
xchg
xchg
and
and
xor
cmpsl
rcrl
push
int
ss
xor
sbb
ljmp
mov
shrb
mov
mov
mov
in
add
push
iret
xchg
clc
push
push
fstps
jne
into
hlt
fcmovbe
sbb
test
les
mov
mov
add
cli
dec
inc
mov
inc
mov
mov
lret
jl
in
les
sbb
icebp
push
jp
pop
cmp
imul
inc
mov
mov
dec
scas
add
sbb
inc
cltd
mov
pushf
movsl
jg
cmpsl
mov
sbb
ret
cmp
shlb
xlat
xchg
sbb
das
push
adcb
mov
in
out
sbb
sahf
ja
xor
sbb
xor
sub
mov
adc
inc
stos
loope
clc
jo
and
mov
imul
adc
stos
inc
leave
xor
sbb
mull
pop
icebp
std
xor
cmp
adc
lret
jp
int
hlt
dec
dec
fcoml
sbb
adc
jle
push
inc
lods
outsb
xchg
test
sbb
xor
sbb
and
xchg
jg
loopne
movntps
rol
scas
sub
in
jecxz
add
lahf
push
out
fcoml
adc
sub
mov
jle
sbb
mov
xchg
inc
pop
mov
loop
sbb
jmp
mov
xor
aas
inc
jg
popf
arpl
xor
stc
sbb
adcb
jg
push
sbb
mov
mov
cmpsb
jmp
ljmp
mov
mov
pop
add
push
fadds
push
cmpsl
jmp
add
or
fstpl
iret
test
sti
cmp
cs
jecxz
sbb
call
inc
jo
inc
pusha
xchg
sub
sbb
in
ret
imul
mov
xchg
push
sbbl
pop
int
rorb
divb
sbb
jne
in
push
add
xor
data16
sbb
es
mov
sbb
je
ss
mov
xlat
cmp
sbb
inc
xor
cli
aad
add
mov
out
push
mov
sbb
test
fdivp
xchg
adc
mov
out
dec
das
add
xchg
or
or
mov
sbb
jle
mov
and
sub
lret
and
in
sbb
mov
add
sub
sub
xchg
sbb
mov
in
lcall
adc
testb
sbb
fcoml
sbb
add
jp
mov
sbb
es
jbe
fwait
mov
xchg
sbb
xor
add
call
lea
gs
adc
dec
add
and
xor
ret
sbb
mov
sbb
bound
xor
data16
pop
jb
mov
lods
push
push
sbb
cmpb
cld
lret
in
call
in
lcall
test
stos
sbb
xlat
stos
out
es
push
bound
or
rorb
jp
sbbl
insb
gs
sbb
adc
lock
sbb
and
add
xchg
lds
inc
pop
loop
sbb
loope
fsubrs
adc
addr16
mov
imul
or
int
mov
xchg
push
xor
jge
bound
bswap
cmp
sti
aaa
hlt
sbb
ret
xchg
pop
dec
push
lahf
adc
aam
push
inc
mov
in
dec
sbb
js
adc
jno
jo
mov
cmp
mov
icebp
ret
hlt
sub
daa
ss
cmpsl
fstpl
in
pop
imul
and
daa
push
sbb
dec
dec
sbb
or
pop
repnz
or
push
pop
fldl
sbb
dec
stos
lahf
int
xchg
sbb
fs
adc
and
push
mov
pushf
cmp
or
push
outsl
mov
mov
or
dec
adc
push
out
fidivl
xor
and
and
test
inc
or
lahf
aad
pop
push
sbb
cs
cmp
add
adc
loope
hlt
outsl
or
adc
pop
cmp
test
and
sbb
xor
mov
bound
jg
out
mov
add
push
movsb
xchg
and
cmp
jne
sbb
and
out
fidivrl
sbb
movsb
lcall
out
scas
nopl
adc
in
arpl
sub
iret
fsts
out
sbb
int3
ret
inc
and
dec
rcrl
fisttps
adc
loope
dec
stos
jp
adc
dec
pop
adc
test
das
mov
pop
cld
out
push
xchg
sbb
jb
ficomps
cmp
xchg
xchg
pushf
sub
sub
test
das
inc
xlat
xor
mov
inc
mov
mov
sar
cmp
roll
inc
xchg
add
sbb
leave
ja
std
mov
cmp
xor
lret
push
mov
sbb
sbb
sub
xlat
push
mov
lcall
mov
mov
fstl
jbe
or
push
cltd
push
arpl
pop
push
xorb
sbb
sub
inc
push
lods
add
jecxz
push
mov
and
jno
dec
xor
jp
xchg
clc
xor
sbb
inc
andb
push
pop
sbb
mov
aaa
out
sbb
jge
insl
add
push
mov
mov
clc
aam
sbb
dec
jecxz
push
inc
pop
cmpsl
std
mov
dec
sub
nop
and
xor
add
roll
push
pop
xor
sub
leave
cmp
not
and
pop
aas
jl
inc
add
stos
insl
scas
sbb
cmp
ljmp
dec
rorl
cmp
sbb
xchg
add
mov
out
repz
mov
out
movl
jns
sbb
jb
inc
sbb
pop
stos
das
sbb
insl
adc
and
test
and
sbb
fwait
enter
jmp
sbb
sub
sbb
sub
pop
cmpsl
jbe
cmp
lret
mov
mov
sbb
pop
xor
jl
or
int3
scas
icebp
lahf
push
sbb
aad
add
adc
xchg
iret
xor
ret
xchg
adc
mov
sbb
aam
add
into
xchg
sbb
jle
pop
or
insb
jbe
mov
filds
test
sbb
and
sbb
sti
daa
repz
pop
mov
push
pop
sbb
xor
icebp
dec
push
stos
or
bound
lret
clc
xchg
int3
xor
add
pop
ret
xchg
ds
jl
pop
xchg
iret
push
loope
add
xor
cmp
jbe
dec
in
adc
sbb
mov
mov
call
mov
jae
mov
rcrb
sbb
xor
fistps
and
push
inc
adc
rcrb
jae
and
mov
popa
push
pop
cmp
into
or
inc
cmpl
sbb
push
cmp
out
cmp
or
addr16
cmc
sub
cmp
inc
pop
outsb
jb
sbb
mov
or
faddl
pop
xchg
lcall
les
int3
mov
xorl
fwait
push
mov
jge
shl
cwtl
sbb
shr
mov
sbb
or
scas
sbb
rcll
mov
jl
jb
rcll
ja
dec
icebp
sahf
sbb
sub
icebp
cmpsl
cs
fsubrs
push
loope
fwait
mov
outsb
adc
sbb
fisubs
cltd
testl
pop
push
inc
add
loope
arpl
je
lock
scas
mov
sbb
or
xor
into
stos
sbb
xchg
push
call
fidivrl
mov
sbb
mov
daa
movsb
loopne
bound
movsl
and
jmp
insl
mov
inc
adc
sub
add
cli
fstpl
icebp
loope
lret
mov
push
test
lock
stos
outsl
or
jb
push
into
pop
adc
imul
mov
sbb
or
add
out
xchg
sbb
sarl
daa
sbb
adc
jl
cmp
into
xlat
jae
loope
sub
inc
pop
add
pushf
out
cmp
sbb
out
fistpll
setbe
or
je
xor
sbb
push
subb
repz
and
sbbb
fisubrs
adc
adc
cmp
stos
xchg
sbb
iret
or
data16
sahf
mov
xchg
hlt
cwtl
out
push
push
loope
pusha
or
xlat
sbb
neg
jo
or
push
test
mov
pusha
loopne
sahf
fst
aam
outsb
pop
inc
jmp
sbb
mov
mov
loope
or
inc
cltd
push
ja
xchg
sbb
jne
cmp
sub
dec
pop
inc
cld
call
test
loopne
push
sbb
mov
fptan
sbb
je
inc
push
cld
push
push
pop
lahf
aas
aam
frstor
sbb
data16
nop
adc
fs
sbb
adc
out
pop
lods
cs
xchg
and
sbb
repnz
mov
lahf
mov
mov
adc
roll
sbb
adc
sbb
push
test
sbb
jne
mov
jbe
int3
sbb
dec
fcomps
nop
cmpsl
inc
sbb
imull
push
addr16
ret
sub
sbb
inc
mov
pop
in
sub
sbb
pop
insb
ret
sub
sbb
cli
fists
cmp
sbb
jge
mov
pushf
repz
orb
scas
adc
sub
cwtl
sbb
sarl
ss
sbb
leave
inc
push
sbb
pop
xchg
cmp
mov
mov
clc
sub
rol
cmp
mov
adc
mov
pop
add
mov
loope
hlt
xor
adc
sbb
cmp
les
lcall
sbb
pushf
sub
test
pop
fisttpll
dec
sbb
mov
lahf
loope
mov
cmp
ficomps
pop
scas
idivb
mov
sbb
push
hlt
test
mov
push
shlb
add
xchg
jmp
sbb
mov
jecxz
test
out
sbb
pop
inc
in
loop
aas
lahf
and
jne
jmp
shrl
daa
out
xor
adc
push
pop
sbb
sbb
xchg
push
push
nopl
sub
cmp
mov
sbb
data16
xchg
stos
sbb
enter
push
pop
sbb
pop
jl
test
push
or
dec
test
test
pop
das
inc
cltd
lret
in
sub
aaa
xlat
daa
pop
fcomps
mov
adc
lods
lahf
jae
outsb
out
rcrb
in
sbb
aam
pop
adc
lock
mov
and
push
out
sbb
and
adc
jns
push
ret
mov
fwait
adc
sub
dec
jae
add
bound
mov
stos
cmc
lods
sbb
push
pop
pop
cmp
or
cmp
xor
out
jge
sub
mov
int3
dec
mov
inc
bound
add
cs
in
out
sbb
push
mov
in
shll
or
js
pop
xor
outsl
out
mov
dec
and
loope
xchg
icebp
sbb
loope
xchg
stos
jb
test
adc
adc
cmp
outsb
push
add
inc
push
out
mov
adc
pop
push
xchg
push
lea
mov
in
pop
push
and
pop
inc
fildl
test
push
ljmp
sbb
int
pop
loopne
sbb
push
pushf
ret
pop
les
cmp
loope
and
fwait
or
loop
mov
push
insb
jne
xchg
jmp
test
in
test
push
sbb
scas
lods
jb
xchg
pop
ret
mov
bound
leave
mov
xchg
xor
adc
inc
sbb
movsb
xchg
outsl
sbb
adc
push
in
dec
cmp
imul
movsl
testl
sbb
stos
xorl
jbe
mov
pop
movsb
sbb
add
insb
dec
cmp
call
popf
mov
lret
cmp
out
ljmp
inc
insb
sbb
xor
jb
sub
inc
jno
mov
dec
jns
adc
xchg
push
sti
sbb
and
dec
clc
push
push
lds
faddp
es
ficompl
movsl
leave
sbb
pusha
xchg
scas
sbb
pop
push
fcompl
jp
je
lcall
dec
pop
add
fistps
dec
or
imul
xchg
in
mov
scas
test
xor
dec
lods
sahf
pop
pop
sbb
dec
fsubl
movsb
rcll
inc
and
cmpsb
sub
sbb
sub
mov
subb
fmul
sbb
xchg
add
les
imul
lcall
pop
inc
mov
sbb
lods
sbb
mov
popa
lcall
clc
aas
stos
mov
cmc
inc
loope
mov
sbb
push
cmp
aam
pop
sbb
xchg
pop
pop
xor
jno
in
data16
lahf
jns
inc
rorb
mov
add
jnp
push
cltd
sbb
in
pop
mov
sbb
adc
addb
dec
ja
xchg
mov
mov
or
sbb
sahf
xchg
movsb
std
dec
sbb
xlat
inc
repz
adc
leave
shlb
ret
xor
jae
adc
xchg
push
divl
test
push
lock
subl
dec
inc
pop
lret
jae
add
or
rcrb
push
jle
sbb
pop
rcrl
imul
push
arpl
sub
sbb
mov
sbb
rorl
add
xchg
pop
stos
test
das
and
push
push
xchg
xor
ds
dec
rcrl
pusha
and
sbb
pushl
imul
mov
push
xor
push
gs
loope
mov
stos
and
pop
add
jp
or
test
scas
or
sbb
xchg
cltd
inc
loopne
imul
jge
aam
inc
xor
xchg
pop
xor
inc
lock
adc
jmp
push
jb
pop
push
imul
or
jmp
pop
jne
sbb
ds
mov
adc
call
pop
dec
mov
das
ficompl
push
xchg
dec
insl
lds
sbb
xchg
es
push
lea
or
sti
add
fmul
mov
call
push
add
mov
cmpb
jl
inc
xlat
movsl
sub
dec
out
push
sbb
inc
add
sub
pop
push
push
mov
call
mov
or
lods
aaa
xchg
jmp
mov
inc
sbb
pop
and
rcrb
ret
ss
mov
add
and
rorb
pop
push
idivl
insl
cltd
xchg
test
pop
cmp
fldt
mov
cmc
inc
sbbl
pop
push
lcall
mov
in
pop
sbb
adc
and
ret
lods
mov
cld
scas
sbb
fwait
test
sahf
dec
mov
and
loop
dec
aam
loope
push
mov
xor
les
cli
mov
cmp
test
dec
fwait
sub
push
aad
cs
sub
data16
addr16
ud1
mov
insb
adc
mov
cmpsb
jg
pop
hlt
icebp
fs
div
lea
in
repnz
xchg
sbb
loopne
pop
mov
std
fldcw
xor
jle
push
mov
cmpsl
insl
and
adc
xor
sbb
xchg
rol
sub
andl
xor
movsb
shl
sbb
push
jns
in
jne
adcb
clc
ffree
sbb
movsb
push
jge
ret
xlat
cli
insl
sbb
dec
fbld
arpl
xchg
out
push
sbb
cmp
pusha
outsl
push
cltd
mov
push
sbb
push
cmp
outsb
add
testl
pop
out
popl
scas
aam
stos
xchg
add
jg
add
adc
in
jge
xchg
call
pop
sahf
inc
es
pop
out
out
jb
and
ja
sbb
xor
cmp
pop
repz
aam
fcmovnb
mov
addb
adc
sub
sub
xchg
sti
sarb
push
push
jmp
int3
mov
cmp
leave
jae
xchg
xlat
pusha
sub
shl
pop
sbb
pushw
cmp
hlt
out
cmp
inc
dec
sbb
mov
inc
lods
jmp
sbb
cmp
sbb
mov
jns
ss
mov
jle
loopne
stos
pushf
shll
jl
jg
xchg
dec
in
sbb
ja
sbb
leave
faddl
xor
xchg
or
sub
pushf
shll
sub
inc
sub
cltd
push
mov
push
sbb
insl
loope
xchg
les
cwtl
negb
cmp
sbb
fadds
push
js
inc
push
mov
push
lods
les
jne
xchg
adc
insl
jno
add
cmpsb
je
sbb
add
lret
iret
sti
sbbl
call
and
push
sbb
and
add
loope
leave
shl
fldl
in
add
push
mov
rorb
dec
inc
sbb
mov
and
sbb
cs
sbb
clc
xor
addb
push
cmp
push
pop
sbb
push
inc
add
test
scas
daa
sub
cwtl
push
mov
int
flds
leave
bound
inc
nop
mov
or
push
popf
ljmp
pop
cmp
in
mov
dec
jns
sbb
ficomps
sbb
mov
sub
inc
cmp
insb
push
cmp
aam
and
sbb
mov
lahf
and
jmp
enter
out
imul
fistpl
cmp
xor
popa
sti
gs
jb
mov
rcrb
repz
mov
pop
clc
xchg
nop
sub
add
lret
sbb
leave
mov
cmp
xor
xchg
xchg
and
jmp
sbb
shlb
sub
jbe
lods
sbb
es
or
bound
xor
sti
xchg
leave
imul
mov
roll
fldenv
mov
and
sbb
jmp
and
loope
add
jmp
cmpsl
or
adc
mov
inc
bound
sbb
clc
mov
sbb
add
mov
movsl
push
loope
jl
aaa
cmp
adc
or
and
data16
in
bndldx
xlat
ja
fdivrs
call
sub
mov
jae
sbb
shlb
js
sbb
loop
lods
ss
cmp
adc
idiv
sbb
popa
mov
inc
cld
adc
or
jb
mov
imul
shll
jb
sbb
popa
mov
jno
sbb
cld
test
lea
or
sub
xchg
push
sub
jae
cli
dec
mov
loop
pop
ss
std
sbb
cmp
into
jmp
sbb
aam
icebp
xor
es
and
js
outsb
nop
rcrl
ljmp
mov
xor
sub
fistl
icebp
jmp
push
xchg
test
cld
out
pop
adc
xor
lcall
push
mov
lea
mov
repz
daa
jb
pop
adc
sbb
sbb
cld
fstpt
sbb
inc
lcall
xor
repnz
add
out
xor
fstps
cmpb
mov
movb
push
adc
jne
shrb
sbb
mov
cmpb
jns
std
adc
jge
test
sbb
ret
sbb
adc
popf
sbb
insl
mov
repnz
push
cmp
sti
cmp
sbb
cltd
mov
or
ja
ds
cs
inc
lahf
sub
adc
enter
and
into
jge
or
sbb
mov
dec
mov
inc
pop
nop
adc
cli
cmpsl
sbb
inc
mov
push
mov
xchg
mov
ret
in
fildl
scas
sbb
cmpb
pop
mov
mov
sti
jmp
mov
sbb
pop
stc
mov
and
loope
mov
inc
leave
jmp
call
push
pop
mov
xchg
push
sbb
mov
push
add
push
mov
mov
pop
lods
cli
sbb
cmp
sbb
adcl
and
sahf
adc
out
enter
mov
pop
mov
shlb
inc
add
shlw
xchg
insb
fcompl
pop
jge
xchg
push
sub
sbb
push
cmpsl
mov
inc
or
iret
xchg
pushf
pushf
lock
mov
lods
in
popa
scas
movsb
mov
int
xchg
fdivrl
xor
inc
arpl
sbb
add
rcrb
daa
push
into
mov
push
cs
imull
scas
sbb
adc
or
cmpsb
popa
xlat
dec
icebp
sbb
cmp
jmp
and
cmp
cld
sbb
fcomps
popa
mov
jmp
sbb
adc
dec
xchg
fstl
push
daa
test
adc
mov
xchg
sbb
in
xchg
dec
std
fistl
or
or
movsb
mov
sbb
mov
push
lds
push
inc
xor
lea
adc
mov
sbb
jae
add
std
add
cmpsb
push
sbb
mov
sub
jp
inc
loope
lret
rcll
out
jne
repnz
sahf
inc
xchg
adc
stos
aad
sbb
sbb
rclb
add
fldl
icebp
jns
sub
ficomps
test
xor
push
sbb
aas
lds
xchg
push
incb
pop
dec
scas
sbb
outsl
mov
in
adc
enter
imul
dec
pop
dec
popa
fsubl
gs
jb
int3
dec
sbb
mov
push
sbb
mulb
scas
push
dec
sbbb
jecxz
stos
jnp
pop
test
adc
xchg
xor
xchg
in
cli
mov
nop
popf
mov
hlt
mov
mov
push
out
adc
clc
add
jbe
jnp
jp
and
test
and
in
sbb
rcrl
daa
xchg
mov
xor
push
push
and
loope
lds
jmp
push
sub
adc
cmp
sub
loope
popa
ret
gs
cmp
rcrl
add
jnp
add
xchg
ficoml
xor
stc
int
ss
adc
xor
pop
xchg
sbb
in
or
push
xlat
scas
pop
sbb
jno
mov
or
xchg
mov
sbb
jp
imul
clc
and
icebp
mov
xchg
lock
mov
and
jne
dec
xor
loope
dec
loop
pop
pop
fcoms
inc
ret
int
movsl
mov
push
iret
sbb
cwtl
pop
bound
add
adc
and
out
or
jge
cmpsb
mov
aas
dec
xor
fistl
pusha
mov
aam
dec
aaa
orl
in
loope
mov
aam
cltd
sub
adc
add
mov
adc
jne
shll
adc
sub
mov
and
sub
sbb
mov
adc
mov
sbb
push
push
das
mov
push
cmp
lea
sbb
pop
pop
push
pop
jno
sbb
stos
mov
sbb
xchg
sbb
xor
int
push
sbb
scas
shll
inc
addr16
out
sbb
sub
lret
loop
bnd
mov
test
fimull
jmp
nop
pop
sbb
cli
cld
mov
repz
cmp
in
loopne
sub
and
sbb
outsl
and
dec
lds
pop
cmp
cmp
data16
mov
out
je
repnz
fwait
add
sbb
stos
cwtl
push
stos
cltd
adc
movsb
jg
jl
jae
fstpl
into
cmc
stc
mov
push
popf
xchg
xchg
inc
repnz
inc
out
imul
or
cli
mov
je
out
inc
sbb
lds
inc
fistpl
xor
pop
stos
out
sub
adc
loopne
dec
cld
iret
sti
cmpsl
test
or
jl
adc
mov
sub
adc
lds
leave
inc
les
xchg
cmpsl
xor
pop
out
adc
jecxz
ljmp
sbb
aaa
mov
enter
xchg
jge
lods
repz
adcb
push
movb
or
sbb
or
push
mov
loopne
loope
jb
mov
mov
into
sbb
cli
ja
xchg
cmp
fcoml
sub
sub
ljmp
adc
adc
aad
mov
imul
sbb
shlb
adc
push
and
xor
sbb
dec
aas
idivl
arpl
sbb
mov
push
add
sbb
xchg
mov
add
shrb
rclb
mov
lahf
dec
mov
pop
mov
jae
enter
icebp
sbb
hlt
data16
xchg
cmp
sbb
dec
stos
push
test
push
sub
push
add
movsl
add
xchg
cmp
sbb
or
inc
lahf
and
clc
sbb
sbb
ret
imul
jbe
push
jle
push
xor
nop
loop
push
test
sbb
test
sbb
loope
jp
cmpb
sbb
stos
pop
cmp
dec
sbb
scas
pop
mov
dec
dec
sbb
int3
fnstsw
mov
incl
inc
sbb
jns
xchg
popa
mov
xchg
pop
shrl
ss
out
fcompl
adc
popa
mov
ret
sbb
enter
imul
fmuls
movsb
add
fs
jae
js
sbb
repz
push
pop
pop
stos
cmpsb
sbb
outsb
call
sbb
dec
cmp
sbb
test
xor
and
ljmp
sbb
push
jae
addb
jbe
sbb
mov
and
dec
xchg
sbb
rcr
sbb
test
jnp
mov
in
add
iret
xor
jg
sbbb
mov
insb
mov
ljmp
inc
hlt
adc
bound
mov
sbb
add
jp
mov
mov
testl
jp
ljmp
push
xor
sub
fiaddl
movsl
in
dec
or
jo
mov
call
cmp
stc
mov
shlb
bound
sbb
sarl
and
push
and
inc
mov
icebp
movsl
pop
xchg
lcall
insl
mov
stos
jg
cmp
icebp
addr16
sbb
push
pop
sbb
outsb
or
xchg
push
sbb
cmp
push
test
pop
insl
sbbb
sbb
loopne
iret
sbb
aam
sbb
mov
cld
test
adc
sbb
adcb
loopne
in
out
nop
cmpsb
add
push
sti
sub
sbb
push
dec
hlt
call
mov
inc
dec
mov
xchg
sbb
fsubrs
inc
push
push
popl
fs
cmp
lahf
sbb
sbb
clc
mov
or
pop
loop
lret
psubsb
xchg
dec
sbb
movsb
jnp
cmpsl
sbb
fwait
cmp
cmp
add
sbb
fistps
out
inc
sarb
rclb
mov
movsl
cld
sbb
mov
jecxz
sbb
fcmovnb
fcmovbe
add
sbb
roll
pop
dec
pop
dec
cli
xor
es
and
addr16
and
adc
popf
icebp
les
mov
adc
ret
cmp
imul
sbb
pop
lret
fs
test
cltd
test
push
cld
cmpsb
movsb
hlt
fwait
imul
popf
adc
add
dec
rorb
add
cmp
xchg
cmc
mov
bound
hlt
out
push
clc
cmovl
sbb
fistl
repz
sub
imul
jnp
out
and
ficompl
mov
ja
mov
jno
sbb
leave
mov
mov
pop
pop
or
cmpsb
ds
movsl
mov
pushw
sbb
hlt
sbb
lods
jnp
inc
repz
lret
lods
or
add
jo
jecxz
test
iret
pop
je
shll
sahf
sbb
icebp
dec
data16
xchg
fwait
sub
mov
sbb
jmp
ja
ret
fsubr
nop
add
adc
roll
and
sbb
cmpsb
inc
sbb
mov
cmp
adc
popa
mov
mov
push
sbb
pop
push
aas
into
loopne
arpl
xchg
xchg
or
stc
dec
adc
repnz
pop
mov
cld
negl
out
jmp
fsts
jno
xchg
mov
xadd
int
fwait
lahf
das
cs
inc
clc
sbbb
loope
insb
pop
fsubrs
lods
push
jo
in
xchg
pop
jl
sub
xorl
sbb
test
mov
sbb
std
imul
and
inc
adc
mov
push
ret
rcll
push
xor
ret
push
je
adc
xchg
push
addl
in
push
popa
add
dec
test
cwtl
fdivr
inc
insl
sbb
adc
sbb
jno
push
loop
nop
add
in
ljmp
mov
mov
out
push
add
ds
jns
pusha
inc
fdivp
inc
sbb
das
dec
push
aad
add
xchg
and
xor
popf
dec
test
adc
jg
rcrl
sbb
push
inc
pop
sbb
jmp
sbb
outsb
lcall
jmp
leave
pop
scas
sbb
insl
gs
ss
jnp
mov
pop
test
nop
out
lret
sbb
xchg
jg
sbb
inc
lcall
or
mov
xchg
lods
jecxz
in
add
cmp
fcomps
jbe
sbb
fbstp
or
mov
cmc
push
pop
sbb
push
xor
daa
gs
fs
jg
and
sub
insb
sbb
xlat
sbb
pop
mov
loope
mov
cmp
clc
mov
push
sbb
sub
mov
sub
cvtdq2ps
ret
push
pop
xor
sti
sub
in
add
inc
sub
orl
xor
xchg
call
or
in
jae
sbb
rorb
and
add
and
cmp
in
lock
fbld
cltd
mov
push
xor
mov
pop
test
in
pop
movsl
ret
pusha
or
jge
push
and
sbb
xchg
addb
insl
sbb
adc
jbe
enter
or
mov
xchg
adcl
xchg
sbb
in
sbb
lahf
inc
pop
fwait
lds
leave
dec
and
into
mov
out
clc
fwait
add
mov
xchg
enter
sbb
xchg
rol
sbb
dec
mov
jbe
movsb
pop
ret
into
fwait
aaa
icebp
dec
iret
shrb
insl
adc
out
jns
adc
push
outsb
cmp
jmp
roll
test
lea
fdiv
lods
xchg
repz
pop
sbb
stos
hlt
add
xchg
arpl
jle
ss
cmpsl
pop
push
push
loope
mov
fidivs
xor
xchg
mov
fprem
adc
loope
push
bound
sbb
xchg
stc
fbstp
pop
xchg
ficompl
xor
test
ja
pop
addr16
cli
mov
pop
es
jge
dec
icebp
sbb
inc
adc
faddl
sbb
push
mov
sbb
fldcw
dec
and
in
xor
pop
or
add
cwtl
sbb
cltd
ret
test
addr16
movsb
loope
or
sbb
je
cmp
or
leave
jb
pop
hlt
pop
adc
aas
mov
pop
in
out
test
push
jb
push
ds
nop
xchg
sbb
fwait
mov
pop
sti
aaa
sbb
and
cmp
inc
xor
xchg
add
leave
adc
sbb
pop
cmp
ljmp
mov
xchg
or
decl
es
ss
mov
ds
sbb
in
ficompl
ss
mov
sahf
fnstsw
dec
fsub
push
loopne
dec
cmp
mov
sahf
push
dec
arpl
sbb
or
in
push
into
sub
xor
bswap
cld
jge
hlt
sub
sbb
popl
lea
mov
sbb
and
popa
sbb
adc
sbb
test
shlb
adc
cltd
stc
mov
jne
push
sbb
lret
mov
lds
xchg
sub
sbb
aaa
mov
sbb
shll
xor
and
fstps
inc
imul
or
pop
jge
ret
fiadds
jmp
mov
add
pop
sbb
jmp
and
mov
adc
daa
mov
and
inc
lods
sbb
dec
leave
das
sbb
cmp
push
dec
mov
xor
fisubl
push
inc
sbb
test
pop
daa
mov
add
add
adc
sbb
js
jp
jl
mov
cmp
test
cmp
mov
nop
ficoms
mov
loope
ljmp
or
mov
out
jae
add
mov
sbb
xor
mov
lods
das
inc
xchg
sbb
outsl
repnz
insb
inc
int
and
or
mov
add
mov
sbb
inc
dec
rcrb
add
adc
scas
or
repz
xor
rorl
or
and
into
sub
pop
jmp
test
out
in
pop
inc
sbb
xor
mov
push
push
push
hlt
xor
jmp
out
rcl
rcrl
mov
cltd
xchg
insl
jecxz
cmpsl
sbb
scas
lea
loop
jle
add
mov
sbb
sbb
scas
incl
adc
test
dec
sbb
bound
push
push
nop
sbb
lds
mov
xchg
push
dec
sbbl
dec
sbb
clc
jno
mov
outsb
hlt
loope
xchg
pop
mov
push
add
mov
inc
test
lods
jl
lret
movsl
mov
inc
sbb
lcall
jbe
in
pop
std
sbb
cli
pop
sbb
and
or
imul
inc
hlt
mov
add
sbb
adc
lock
fwait
cmpsb
and
xor
sbb
das
ret
adc
pop
sub
add
jle
pop
mov
fldenv
clc
ljmp
out
jb
int3
test
or
sbbl
mov
into
push
outsb
sbb
xlat
clc
aaa
sbb
and
sbb
push
pop
mov
int3
mov
icebp
or
movsb
repnz
sbb
fcompl
sub
mov
push
push
icebp
or
sbb
loope
add
jecxz
add
adc
or
sbb
sbb
and
cwtl
pop
cmp
jno
jnp
rcll
repnz
push
lods
mov
mov
ffreep
xchg
nop
sbbl
pushf
cmpsl
jmp
dec
xor
sbb
flds
iret
sub
sub
test
and
xchg
sbb
std
mov
out
push
clc
test
xchg
mov
pop
lcall
push
sub
and
je
das
mov
dec
aaa
adc
cmp
outsl
sub
sbb
cmp
out
sbb
mov
pop
divl
pop
push
pop
xchg
insb
add
call
cs
cltd
sbb
inc
mov
movsb
rol
sub
push
dec
and
out
imul
popf
outsl
jmp
inc
cmp
jnp
sbb
pop
in
shlb
out
xchg
imul
xor
out
adc
addb
rol
jg
adc
jp
or
pushf
and
testl
jg
aaa
scas
je
leave
ljmp
push
bound
dec
ds
inc
out
sbb
xor
lret
test
movsl
push
fsts
add
xchg
xchg
jbe
jo
movsl
faddl
sub
imul
notb
sahf
sbb
test
dec
xor
xchg
and
xor
sbb
movsl
inc
add
or
cmp
push
inc
adc
mov
sbb
xor
sbb
cld
xor
in
mov
or
sbb
cmp
sbb
ds
into
int3
insl
push
sbb
xchg
pop
pop
adc
loope
incb
andb
sbb
out
cmc
popf
push
lret
test
lahf
es
dec
jp
mov
cmpsb
or
push
popa
inc
xor
fs
inc
sbb
xor
sbb
push
in
outsb
pop
jmp
add
sbb
repz
xor
test
cli
sbb
adc
jb
loope
and
and
adc
sbb
arpl
jne
loopne
sbb
fildll
insl
xor
adc
inc
adcl
jno
repnz
sbb
cwtl
das
outsb
add
jp
addb
mov
mov
cmp
ret
fnstenv
add
push
in
aad
mov
mov
out
call
sbb
fimuls
push
stos
cmc
das
pop
xchg
adc
sbb
and
shll
mov
fists
sbb
int
imul
push
mov
xor
add
gs
lcall
pop
and
pop
loope
mov
or
adc
xchg
mov
cmpsl
test
cmp
sbb
adc
inc
outsl
aam
mov
sbb
sti
mov
jecxz
test
or
inc
pop
or
filds
push
xchg
sbb
sbb
daa
jmp
dec
jle
xor
ret
mov
sbb
sbb
dec
add
bound
iret
pop
push
jp
push
sbb
sti
mov
add
in
sbb
add
movsl
mov
jg
loope
jl
sbb
xchg
xchg
bound
ret
mov
xchg
jg
jle
repnz
out
push
xor
xlat
inc
call
push
mov
or
iret
dec
sar
push
rcrb
stos
je
cmp
rorl
push
inc
push
dec
icebp
sub
push
and
aas
sahf
dec
insl
mov
dec
dec
pop
or
aad
mov
sub
cmp
mov
and
add
mov
jo
ljmp
and
sbb
mov
xchg
fstpt
iret
mov
int3
notb
aaa
adc
jmp
fwait
pop
dec
lret
adc
mov
fcompl
push
hlt
xchg
mov
in
cwtl
bound
js
lahf
jg
push
outsb
sbb
mov
rorl
ficoms
sbb
jno
incb
sbb
jp
adc
adc
dec
gs
fidivrs
fmuls
outsb
sti
sbb
push
cmc
mov
pop
or
das
fs
add
lea
mov
mov
cs
lcall
stos
sbb
jb
xchg
mov
movsl
jle
add
cmpsl
sbb
int
loopne
dec
xor
jne
pushf
int3
adc
lret
adc
out
pop
ljmp
mov
xchg
loop
inc
sbb
push
cmpsb
iret
popf
jne
jge
scas
fisubl
inc
sbb
ja
pop
mov
sbb
es
dec
sbb
dec
psubsw
mov
iret
sbb
dec
and
outsw
inc
sti
xor
insb
cmp
sarl
dec
ljmp
add
xchg
inc
mov
cmp
sbb
ret
rep
sbb
jbe
cmp
push
mov
scas
out
outsb
pop
sbb
mov
movsl
sbb
out
xchg
psrld
sbb
push
ret
in
fstpt
mov
sbb
lahf
sbb
sti
adc
sbb
mov
test
push
adc
loope
leave
in
pop
pusha
sbb
aad
pop
movsb
adc
adc
fnstenv
mov
and
or
aad
out
push
sub
cmp
or
into
lods
sbb
jmp
jo
nop
subl
out
inc
ss
lods
push
sbb
mov
push
fcmovb
rcrl
and
in
fdivp
in
cltd
xchg
add
iret
xlat
rcr
mov
aaa
xorl
out
sub
adc
mulb
pop
inc
scas
mov
mov
data16
mov
sbb
in
popa
les
sbb
test
sbb
cwtl
xorb
push
stc
inc
pop
sbb
push
add
and
sbb
lods
repnz
xchg
fs
jno
adc
cmpsb
jmp
aaa
int3
fwait
xor
and
imul
jno
xor
xlat
jecxz
push
xchg
and
xchg
inc
and
jne
mov
stos
fisttpll
fistl
push
loope
test
mov
and
inc
mov
sbb
sbb
out
ret
add
push
push
xchg
sbb
mov
xor
inc
add
and
sbb
int
fistps
mov
lcall
sbb
loop
cmp
roll
cmp
pop
nop
popa
sbb
cwtl
push
stc
loope
insl
cmc
push
aad
enter
sbb
in
push
lret
fs
ljmp
mov
jne
das
push
data16
adc
std
sti
jg
cwtl
and
sbb
mov
or
sbb
enter
lahf
pop
shlb
mov
mov
gs
or
xchg
call
shr
int3
mov
scas
aaa
xchg
sbb
xchg
mov
lods
jnp
and
pop
lret
aaa
xor
xchg
inc
adc
mov
xlat
sbb
jmp
insl
shlb
fsubl
xchg
push
sbb
jbe
ret
fists
fldcw
sbb
jnp
mov
sbb
inc
dec
loope
jne
mov
xchg
out
push
pushf
push
aam
insb
shl
sbb
push
xchg
adc
add
out
dec
mov
xor
pop
dec
mov
sbb
mov
xchg
pusha
sbb
movsl
mov
test
sbb
inc
aam
sbb
in
insb
outsb
loope
push
mov
mov
or
stc
cmp
ret
sbb
mov
adcl
adc
inc
sbb
cmp
dec
sahf
decb
divl
mov
or
std
ljmp
push
scas
xlat
cmp
mov
add
or
stos
cmc
ljmp
in
shlb
add
jge
pop
mov
adc
aaa
xchg
cmp
dec
popa
mov
in
mov
pop
push
push
mov
cmp
cld
sbb
ret
mov
mov
sbb
sub
jl
push
and
pushf
adc
loopne
sub
outsb
pop
loope
aaa
mov
mov
popa
cmp
xchg
sub
or
out
stos
repnz
xchg
sbb
pop
mov
leave
loope
jecxz
in
sbb
cmpsl
xchg
mov
int
pop
jae
xor
subb
sbb
fstps
jg
loop
sub
in
jno
mov
and
hlt
int
ja
sub
push
jns
sbb
icebp
pushf
test
inc
and
adc
inc
inc
pop
loopne
lea
rorl
sbb
mov
xchg
sbb
adc
and
outsl
pop
sbb
cmp
imul
fisubl
adc
jbe
add
mov
lods
stos
rcrl
adc
push
sahf
sub
aaa
into
shll
xchg
popf
icebp
adc
out
sub
bound
mov
and
mov
punpckhdq
sbb
notb
out
sub
sbb
add
fstpl
and
inc
jbe
mov
popf
inc
adc
test
adc
pop
mov
cmpsb
xchg
lret
inc
cs
push
or
mov
cmc
push
popl
add
and
imul
pusha
int3
popf
lods
and
lcall
cmp
xor
adc
sbb
sahf
pop
cltd
loop
cmp
dec
mov
roll
xchg
mov
mov
mov
ja
fstpt
insb
fcoml
push
sbb
sub
sbb
les
dec
inc
sbb
sub
mov
mov
ds
mov
ficoml
xchg
push
mov
loope
sbb
sti
xorb
sbb
jl
movsl
push
lcall
mov
add
mov
sbb
lahf
dec
ss
xchg
jge
loope
sbb
fadds
sub
iret
sbb
mov
mov
mov
out
popa
push
ffree
sbb
pusha
test
add
cs
xor
std
mov
push
sbb
cmp
ret
add
ljmp
push
adc
loop
adc
xor
jbe
dec
push
andl
sbb
into
add
aas
scas
outsb
test
std
cltd
jp
stos
jle
xor
pop
sbb
cmp
sbb
push
inc
cmpsb
rorl
ljmp
jnp
sbb
incl
out
lock
xchg
gs
sbb
cld
mov
mov
or
sbb
scas
mov
inc
and
jge
add
push
out
sbb
mov
enter
insb
imul
pop
sbb
shrb
sbb
aam
sbb
daa
dec
or
arpl
stos
xchg
sbb
push
fidivrs
lods
jl
stc
add
lret
xor
xchg
mov
and
and
push
dec
sarl
movl
jbe
lret
aad
pop
rcrl
jmp
and
es
sbb
xchg
hlt
sbb
jo
push
daa
loop
adc
in
xchg
lcall
xlat
stos
xor
mov
stc
add
push
into
imul
outsb
mov
mov
adc
push
sbb
xor
xchg
add
sbb
aam
jl
cs
movsl
sbb
inc
lret
mov
aaa
mov
lcall
fs
loope,pt
xlat
nop
sbb
mov
call
rcrl
push
jae
aam
mov
orl
and
xchg
fcompl
ficoml
test
test
sbb
jge
sbb
xor
or
ret
js
insl
flds
lds
push
das
and
mov
mov
test
xchg
or
adc
sahf
adc
jge
int3
jmp
inc
lcall
aaa
sbb
clc
fwait
loop
and
paddsw
mov
add
mov
sbb
or
mov
xor
sahf
mov
adc
sub
pop
xchg
scas
imul
icebp
insb
jno
sub
dec
xor
dec
push
xchg
mov
inc
test
sahf
xchg
mov
mov
sbb
push
xor
sbb
push
pop
das
add
jbe
sbb
stos
loop
fcoml
popf
sub
push
push
movsb
je
sbb
out
xor
in
pushf
sbb
adc
out
sbb
mov
cltd
cmp
mov
jb
or
mov
xchg
jmp
jne
adc
fidivl
xchg
or
test
push
sub
idivb
pop
add
or
es
loope
dec
sbb
je
push
jle
adc
mov
sbb
push
or
and
cmp
mov
mov
jno
les
and
push
add
cwtl
fcompl
push
jg
addr16
pop
aam
mov
sbb
imull
xor
xlat
push
les
imul
cmpsl
cwtl
push
sub
mov
andl
psubsw
inc
loope
or
jo
and
pop
sub
repnz
sbb
sub
jl
and
push
addr16
sbb
movsl
adc
cs
mov
and
pusha
sar
sbbb
pop
inc
ds
pop
or
fsubs
mov
and
xchg
push
or
sbb
ljmp
loop
loope
or
push
iret
clc
sbb
ss
jbe
sahf
stos
shl
dec
jle
sbb
fs
and
loope
sbb
mov
hlt
call
les
cmp
mov
jns
sbb
pop
in
sbb
dec
inc
sbb
das
pop
sbb
mov
sub
nop
push
push
mov
loope
arpl
xlat
sbbb
push
loop
push
mov
jecxz
xor
mov
mov
cmpsb
jno
bnd
sbb
aas
xor
sbb
gs
inc
sbb
ljmp
mov
xchg
repnz
int
je
test
scas
fstl
fsubp
test
sub
std
xchg
sub
out
lret
inc
into
pop
and
sbb
pop
ret
shl
shrb
insl
add
push
imul
xor
inc
adc
repz
dec
and
push
scas
addr16
xchg
adc
mov
jbe
mov
sbb
push
rcll
sbb
cmp
push
push
inc
sbb
repz
sbb
mov
sbbl
push
imul
ficoms
pop
mov
pop
sbb
adc
mov
push
and
dec
sbb
lea
aaa
ja
and
push
mov
fwait
pop
ret
xchg
xor
fsubs
mov
test
push
lret
push
movsb
stc
or
lds
push
jno
mov
or
xchg
jnp
xchg
push
test
sbb
flds
or
inc
xchg
or
lret
je
pop
mov
jecxz
in
or
sbb
xchg
fildll
jb
xchg
xor
or
jns
jl
ja
xor
mov
int
arpl
push
mov
cmp
sbb
sub
ds
adc
sbb
call
loope
dec
bound
out
clc
repnz
and
add
mov
out
xor
arpl
movsl
push
fisttpll
lret
dec
mov
lcall
jo
in
jl
adc
mov
add
pop
fucomi
outsb
adc
jae
in
add
shlb
subl
sbb
and
adc
lock
fwait
and
jle
dec
hlt
sbb
fidivl
sbb
ret
xlat
insl
out
loope
cwtl
push
sti
mov
cmp
ss
sbb
les
cmp
pop
in
dec
lcall
or
sbb
in
pop
ret
xchg
lds
push
leave
int3
nop
clc
es
aam
pushf
mov
xor
popf
mov
adc
sbb
or
sbb
popf
push
sarl
inc
std
sbb
fninit
into
adc
sub
xchg
sub
push
scas
add
sbb
cld
adc
or
mov
outsb
push
mov
jl
lds
cmp
insb
test
sbb
out
xchg
pop
imul
loope
sti
adc
mov
push
inc
fsubl
sbb
ja
lock
stc
xchg
adc
out
sbb
xchg
fld
mov
pop
mov
sub
push
jbe
sbb
pop
ja
fimull
lret
subl
jl
arpl
add
ret
enter
pusha
sbb
adc
lcall
outsl
insb
imul
ret
cmc
sbb
negl
dec
repnz
add
lret
add
test
adc
sahf
cltd
nop
scas
jg
jbe
or
xchg
pop
cmp
adc
mov
out
cmp
sbb
xchg
lods
mov
lret
sbb
mov
xlat
fstp
dec
dec
adc
sub
push
icebp
adc
pop
cli
in
sbb
mull
dec
sbb
rcrl
leave
das
or
pusha
sbb
enter
mov
shlb
inc
cmp
hlt
rcr
sbb
cmpsl
sbb
lods
cmp
mov
xchg
jns
pop
jo
sbb
test
iret
lea
jb
cltd
lcall
dec
aam
sbb
loopne
mov
rcl
xlat
add
mov
push
fimull
lock
jecxz
fcompl
nop
inc
xchg
mov
adc
cld
push
mov
mov
sub
sbb
inc
loopne
add
inc
cmpsb
popa
out
rclb
xchg
sbb
faddl
stc
push
mov
push
add
jnp
push
popa
adcl
out
adc
shlb
cmpsb
mov
aaa
xchg
xor
out
adc
inc
addr16
loope
cmp
in
cmpsl
mov
jmp
sub
movsl
je
lock
push
jp
test
add
push
cs
scas
outsb
push
ret
adc
dec
and
inc
inc
nop
push
inc
xchg
sbb
dec
pop
pushw
xlat
sbb
push
test
hlt
xor
and
cmpl
sbb
mov
sbb
jo
or
jp
pop
sbb
shrl
sbb
adc
jae
mov
aad
xor
js
cmpsl
cmp
out
jb
push
add
fs
jns
cmp
dec
fisubrs
inc
sub
jg
mov
sbb
cltd
and
mov
bound
xor
jne
in
add
or
pop
sbb
mov
sbb
push
jp
jb
add
in
scas
pop
mov
cwtl
mov
xor
cmpsl
test
or
lret
sbb
das
fdivs
incb
scas
jmp
mov
pop
push
mov
sbb
or
inc
ljmp
outsb
add
outsl
sbb
mov
mov
xor
loope
int3
mov
cmpsl
push
push
data16
add
push
shlb
push
sbb
and
cmp
jnp
bound
sub
sbb
ret
pop
and
add
mov
sbb
std
mov
pop
sbb
movsl
cmp
aaa
xor
lcall
out
lods
sbb
loopne
imul
or
sti
pushf
jae
and
rclb
and
adc
sbb
cmp
test
lock
test
dec
adc
cwtl
mov
xchg
insb
pop
stos
xchg
adc
loope
in
sub
cmp
pop
jne
cmc
sbb
mov
fldcw
mov
adc
nop
stc
les
xchg
jo
push
jge
into
cli
xor
sbb
adc
sbb
or
sbb
iret
in
xor
aam
cmp
lods
in
mov
sbb
mov
push
inc
mov
push
sbb
inc
xchg
dec
pushf
div
adc
cmp
push
jo
jg
outsb
fs
push
xchg
add
sbb
jno
sub
dec
rcrl
lea
stc
mov
and
lret
sbb
push
aas
xor
jle
pop
scas
cmpsl
add
mov
rclb
loope
ds
mov
jns
push
fldl2t
lcall
loop
cltd
mov
pop
jne
cmp
test
repnz
sbb
push
dec
jns
cli
cmp
push
es
xchg
sbb
push
cmp
les
xchg
movsl
outsb
and
daa
cmp
jno
mov
out
rclb
sbb
push
adc
fadds
cltd
mov
sbb
jno
pop
ss
xchg
and
and
inc
push
mov
lods
mov
jmp
mov
inc
inc
mov
int3
jb
rcrl
pushf
sbb
cld
adcb
icebp
stc
adc
sub
sti
in
mov
mov
cmp
push
adc
lret
xchg
or
out
jae
pop
and
and
data16
jns
out
cwtl
arpl
je
push
mov
or
xor
fstl
jo
pop
fldcw
iret
add
shll
inc
adc
push
cmp
dec
add
add
clc
lcall
push
sbb
dec
ja
mov
sbb
fcomps
std
xchg
mov
xor
xchg
repnz
sbb
addr16
push
inc
shrb
mov
push
pop
sbb
in
mov
int
sbb
arpl
add
sbbb
stc
movsl
out
stc
push
inc
or
push
adc
test
xchg
or
stc
jno
dec
sub
cmpsb
sbb
and
pop
and
sbb
roll
adc
mov
mov
jmp
xlat
lock
je
mov
rcrb
jno
ja
push
add
scas
sbb
aad
and
imul
fistpl
es
sub
mov
push
sbb
ret
movsb
daa
inc
push
mov
cmp
xor
push
jg
jmp
dec
jno
imulb
pop
aam
sbb
js
jne
jns
pusha
sbb
or
lea
mov
sub
popa
cmp
call
js
loope
mov
ljmp
mov
jo
lods
jge
repz
add
sbb
sahf
mov
sbb
and
sti
adc
dec
and
fstl
push
mov
jp
sbb
sbb
dec
imul
cmp
or
xor
ja
adc
and
mov
mov
in
adc
scas
push
sbb
jnp
inc
std
test
test
out
mov
mov
xchg
push
mov
inc
arpl
fimuls
les
int
jecxz
inc
std
or
int3
mov
fistpll
ret
xor
and
cwtl
lcall
fstps
dec
sbb
outsl
mov
mov
push
sbb
xor
insb
sub
pop
sbb
cltd
imul
pop
mov
xor
mov
or
leave
inc
mov
cmp
fdivl
sub
pop
xor
sbb
hlt
inc
jbe
in
mov
int
xlat
or
cmc
sbb
or
movsl
sbb
sbb
std
stc
xorl
mov
mov
call
lock
into
and
ljmp
mov
cmp
jae
sbb
and
sub
lods
dec
ret
addr16
or
std
cmc
mov
sbb
pop
jp
das
or
repnz
xchg
cltd
cwtl
lcall
or
xor
jle
and
pop
fwait
sbb
andb
add
sbb
mov
fisubrl
sbb
in
mov
or
js
pop
pusha
rcrl
lret
mov
imull
cmp
cmpsb
push
adc
out
icebp
mov
clc
sub
jne
sbb
cmp
mov
adc
outsb
stos
fdivrs
push
jle
sbb
push
sarb
cmp
cmpsl
sbb
fs
lret
or
repnz
mov
mov
test
xchg
jns
mov
dec
dec
iret
cmpsl
adc
or
orb
jg
and
andb
inc
cwtl
flds
adc
sbb
fdivrl
push
push
sbb
shll
push
add
call
sahf
cmp
or
cli
repnz
jo
cltd
pop
sahf
dec
mov
push
fnstsw
mov
dec
les
push
outsl
jo
cmp
pop
lock
sbb
icebp
mov
jl
sbb
cmp
adc
sbb
mov
loop
out
sbb
movsb
xor
not
into
lret
cmp
sbb
jne
pop
jge
inc
mov
dec
outsb
hlt
repz
inc
mov
add
sub
aad
mov
adc
fsubs
clc
sub
cmp
sbb
int3
stos
sti
mov
push
sbb
aaa
push
fsubp
mov
pop
cwtl
adc
push
fcmovbe
pusha
icebp
push
adc
inc
xchg
mov
push
push
rorb
hlt
and
sbb
out
sbb
push
jo
lods
dec
sbb
mov
sbb
dec
test
iret
sahf
push
les
out
incb
sbb
test
mov
cld
rcll
lea
or
test
add
and
fsubl
adc
xchg
sub
sbb
xchg
cld
jecxz
repnz
sbb
inc
inc
pushf
mov
mov
int
xchg
popa
cli
sbb
ss
or
aam
scas
sbb
icebp
and
pop
jbe
push
popf
xchg
push
xor
das
sbb
pop
add
or
loope
xlat
xor
popa
inc
inc
inc
xor
pop
hlt
fwait
pop
and
mov
je
ljmp
and
outsl
and
fucom
inc
adc
outsl
adc
push
sbb
std
mov
jbe
inc
push
or
or
sub
mov
out
jae
push
push
sbb
stos
mov
push
add
or
pop
movsl
jmp
add
nop
mov
cwtl
sbb
lods
ret
test
mov
sarl
fs
fbld
push
dec
sbb
test
aas
fwait
xchg
or
lea
add
ficoml
jge
jb
cmp
test
das
jmp
adc
pop
or
shlb
lock
or
mov
mov
dec
aad
mov
pop
stc
cld
add
sbb
data16
mov
or
or
add
mov
loopne
jb
scas
sbb
rcll
sbb
aaa
push
test
jne
lret
sbb
fisttps
mov
sbb
add
inc
out
sbb
shl
jno
mov
jecxz
xorb
jbe
js
fcomip
sbb
inc
xchg
mov
adc
aaa
roll
lahf
sbb
daa
fsubs
outsb
mov
push
sbb
hlt
push
lret
lds
add
cli
insb
repnz
sahf
adc
bound
pop
sbb
push
mov
scas
mov
push
pop
mov
sbb
mov
outsb
nop
mov
sbb
int3
movsl
add
inc
xor
lock
ljmp
xlat
xor
mov
cltd
call
stc
dec
add
push
sub
and
sub
lock
lcall
dec
pushf
mov
sbb
pop
and
ret
adc
stc
and
cmp
xor
pop
xchg
mov
sub
dec
pop
mov
out
xor
dec
xchg
lret
loop
push
xor
mov
sub
mov
fwait
or
sbb
gs
call
mov
notb
xchg
sbb
pop
or
sbb
sti
inc
roll
add
mov
mov
cvtpi2ps
out
fists
push
sbb
mov
ljmp
pusha
and
dec
inc
mov
adc
rcll
outsb
and
sbb
jecxz
cmp
xchg
sbb
fs
lea
loope
sbb
fldcw
test
adc
jae
out
jle
add
cmpsl
inc
mov
mov
xor
dec
adc
add
inc
push
out
mov
sbb
mov
lcall
pop
loop
add
push
jne
loope
ficoml
test
notl
sub
jl
pop
sbb
int
es
adc
dec
ds
mov
mov
rol
daa
add
jbe
xchg
push
cld
bound
loope
mov
lds
adc
arpl
loope
inc
add
xchg
push
stos
loop
and
cltd
push
mov
jg
add
into
inc
loope
aas
cmp
xchg
popf
push
jl
bound
push
out
js
inc
pop
icebp
or
dec
sbb
adc
aad
invd
sub
sbb
sub
ljmp
fidivrs
mov
sbb
sbb
mov
push
outsb
adc
pop
add
repz
pop
jl
sbb
ds
add
xchg
ret
mov
lret
inc
outsl
sbb
pop
pop
sbb
lea
call
ss
aas
negb
adc
pop
daa
loopne
lea
adc
cmp
in
mov
add
push
xchg
imul
repz
sbb
mov
xor
sub
fstl
mov
sbb
lret
push
and
hlt
jge
clc
adc
sbb
fidivrs
ret
sbb
outsb
arpl
stos
sub
stc
push
leave
push
ror
int3
xlat
push
dec
sbb
lods
sub
xchg
push
cmp
dec
jno
stos
mov
shlb
xor
add
ds
test
push
cwtl
loope
jg
dec
fadds
popf
mov
add
stos
and
dec
fnsave
mov
sbb
bound
push
xchg
jmp
sbb
gs
jae
fyl2x
xor
sbb
sbb
sub
ret
jne
push
test
xorb
gs
add
aas
cld
adcl
fcompl
pop
imul
cli
rcrb
int
jle
mov
inc
sarl
sub
xor
ret
outsl
xchg
inc
sbb
jbe
aad
pop
add
mov
xor
cltd
insl
pop
push
jns
stos
movsl
ficomps
je
adc
sub
push
stos
add
adc
divl
jae
ret
mov
pop
jmp
cmp
dec
adc
imul
cmp
or
push
xor
sbb
gs
mov
pushf
sbb
repz
les
xchg
rorl
jo
mov
jno
sbb
add
adc
loope
lret
cli
xor
test
adc
insb
jmp
ret
rclb
jae
jcxz
and
add
jbe
push
lahf
fildll
stos
xchg
es
mov
call
sbb
insb
dec
test
mov
pop
sbb
inc
in
lds
or
xchg
sbb
cmp
lods
sbb
mov
mov
mov
cltd
mov
out
add
loopne
xchg
sbb
fidivs
lret
insl
mov
mov
sbb
hlt
in
pushf
mov
and
call
sbb
ret
rolb
jb
jns
inc
mov
adc
lock
pop
iret
and
mov
jo
mov
lret
es
addr16
ret
xor
lock
xlat
xor
mov
out
cmc
sbb
outsb
rcrb
repnz
or
inc
sbb
push
xchg
sbb
sarl
or
fstpl
jnp
mov
mov
jns
fistpll
in
in
sbb
inc
aam
and
add
jge
in
int
sbb
rep
js
es
adc
mov
push
sub
pop
lock
daa
cmpl
sub
ret
xor
mov
adc
sub
lea
sahf
outsb
mov
lret
sbb
xchg
xorb
orb
test
cmc
testl
stos
adc
nop
xchg
cwtl
movsb
jle
icebp
mov
push
jecxz
pop
test
xor
xchg
pushf
mov
xor
inc
in
jle
out
xchg
sub
sbb
push
test
outsb
pushf
push
xor
outsl
or
jne
lret
lods
add
lahf
sub
jg
pop
fldt
cli
xorb
addr16
repnz
in
mov
cmpsb
mov
adc
or
les
aaa
outsl
lcall
cmp
imul
sbb
push
add
repnz
stos
decl
iret
cltd
cmp
jnp
in
movsb
push
xchg
sbbl
fistl
or
popf
mov
pop
inc
out
pop
or
sbb
daa
pop
nop
cmp
shl
inc
clc
xchg
push
setg
stos
jb
lds
fldt
mov
add
push
sub
jg
cltd
adc
sbb
sti
inc
add
sbb
dec
enter
mov
stos
ficoml
loope
outsb
rol
sub
jecxz
push
cli
hlt
pop
xchg
repnz
jns,pt
clc
data16
push
sbb
js
fs
jg
push
in
inc
sbb
cmp
test
adc
imul
dec
call
pop
sbb
sahf
or
sbb
loopne
fadds
sbb
test
mov
dec
mov
sbb
fdivl
xor
shrl
loopne
cld
jae
test
faddl
mov
sbb
pop
movsl
shufps
jecxz
scas
mov
aas
loope
add
test
sbbb
mov
push
push
movq
jnp
mov
and
cmpsb
dec
lea
adc
rol
sti
lahf
xchg
cwtl
xchg
inc
sbb
or
fcomps
xor
clc
jmp
add
pop
je
inc
sbb
fnsave
or
jge
push
cwtl
dec
enter
adc
cmp
inc
addr16
arpl
sbb
test
in
fnstcw
ret
push
es
pop
push
sub
add
pop
add
adc
loop
pusha
pop
cmp
sbb
mov
int
std
cmpl
push
aad
jb
push
push
adc
es
out
or
add
sarb
fmulp
xchg
pop
sbb
fwait
add
xor
flds
bound
inc
xchg
out
pusha
in
dec
push
mov
mov
mov
sbb
enter
adc
jb
xor
dec
sti
leave
gs
sbb
sbb
fs
ljmp
or
and
sbb
cmp
jnp
push
sbb
js
push
lret
sbb
jb
les
sbb
xchg
xor
stc
inc
inc
icebp
mov
cld
sbb
jbe
xchg
mov
lea
xor
push
sbb
das
mov
dec
xor
imul
inc
xor
subl
pop
insb
pop
popf
push
push
sbb
and
sbb
mov
adc
sbb
negb
push
add
mov
adc
xor
sub
aam
in
sbb
call
dec
lcall
pop
push
in
xchg
stc
add
andl
push
cmpsl
or
push
xor
cmp
push
cmpl
and
pop
je
adc
push
jo
mov
dec
mov
sub
xchg
pop
mov
fistpl
repz
mov
mov
stc
fs
addr16
xchg
sbb
cmc
js
add
xchg
inc
jle
inc
mov
jne
jge
xor
sbb
int3
xor
cmp
cmp
jbe
in
push
sub
push
mov
jecxz
jbe
ss
int
rcll
ds
adc
push
lock
in
outsl
clc
dec
mov
shlb
adc
mov
cmp
inc
xchg
sbb
das
mov
xchg
jbe
sbb
xor
loope
fdivr
aam
xchg
scas
subl
testb
inc
push
ss
int
or
xor
cmp
hlt
gs
cltd
sbb
flds
test
out
js
xchg
loope
jne
mov
adc
test
sbb
sub
jp
pop
mulb
cli
pop
sbb
mov
pop
jne
dec
dec
sbb
das
mov
sub
sbb
loopne
lds
sbb
push
inc
mov
jbe
imul
mov
imull
mov
dec
add
std
pop
stos
hlt
mov
sbb
lock
jl
movsb
cli
jnp
mov
pop
movl
mov
sbb
push
ss
pop
and
loopne
lds
push
pop
shlb
mov
add
mov
pop
dec
sub
outsb
dec
sbb
add
and
mov
stos
sbb
and
sub
sub
and
pop
sarb
ds
mov
add
push
xor
adc
and
push
outsb
outsl
mov
lods
lods
pop
imul
sub
sbb
and
js
ss
sbb
cmp
loopne
adc
adc
aas
jmp
ret
sar
xchg
push
stc
ja
or
pop
addl
aad
dec
sbb
sbbl
shrl
faddl
dec
mov
sbb
inc
repnz
andb
movsl
ret
xor
mov
cmpb
stc
inc
sbb
push
push
pop
enter
loope
xchg
movsl
pop
xorb
sbb
shlb
call
lahf
cmp
push
inc
jnp
gs
pop
clc
jo
push
push
in
mov
roll
fnsave
mov
sbb
or
js
push
outsb
push
jmp
mov
daa
inc
sbb
out
aaa
sbb
sbb
inc
and
xchg
loope
cmp
push
rclb
xor
test
push
insb
lds
testb
jns
cmc
or
add
pop
dec
scas
xchg
pop
test
jp
fcompl
test
inc
xchg
stc
cmp
stos
and
push
sbb
lods
repnz
aad
ret
fwait
daa
add
out
out
test
test
sub
jns
sbb
mov
leave
shrl
loopne
adc
sbbl
and
mov
jmp
sbb
sbb
sbb
lret
popf
mov
pop
push
sbb
xor
aas
in
or
dec
outsb
mov
ja
repz
sbb
jmp
or
and
scas
xor
test
mov
aaa
add
mov
loope
jp
mov
sbb
jge
sbb
popa
dec
hlt
shlb
mov
mov
aam
cltd
sbb
ljmp
mov
adc
mov
and
les
sbb
daa
repnz
sbb
test
cli
bound
push
fmulp
xlat
lds
cltd
shrb
push
aad
and
cmp
sahf
out
mov
push
inc
clc
adc
pop
imul
test
adc
push
rcrw
push
jns
fcompl
repnz
sbb
sbb
mov
call
pushf
push
sbb
aad
sub
push
mov
ds
pop
and
sbb
lock
mov
pop
sbb
dec
mov
fsubrl
pop
cmc
addr16
ret
add
insl
sbb
push
test
shl
sbb
mov
mov
lret
push
pop
fwait
adc
outsb
mov
sbbb
jge
or
sbb
lret
cli
pop
aaa
les
rorl
out
fcomps
mov
sbb
out
aam
jge
mov
in
pop
mov
js
mov
rorb
sub
jmp
sbb
fwait
icebp
sbb
sbb
sub
inc
adc
xor
cmp
aad
jb
cld
sbb
and
push
popa
sub
cmc
mov
lea
pop
fistps
repnz
movsb
sbb
add
stc
xchg
sbb
aas
cmpsl
sbb
and
nop
xchg
cwtl
xor
loopne
push
pushf
dec
outsl
roll
in
add
fsts
shlb
loop
call
nop
pop
jne
lods
pusha
ficompl
cmp
sbb
sub
cs
dec
pop
sub
cli
adc
std
or
xorb
pop
sbb
loope
jl
outsl
nop
xchg
xchg
mov
sbb
push
imul
xchg
fcoms
testl
cmpsl
aaa
jmp
stos
add
cltd
sbb
ja
movsb
xor
movsl
adc
in
pop
xor
jp
icebp
popf
inc
cmp
mov
xchg
dec
mov
adc
mov
mov
sbb
jp
scas
xchg
xor
sbb
inc
repz
mov
int
in
adc
loopne,pt
sti
rorb
and
cmp
popa
dec
aad
sbb
push
pop
mov
cld
mov
dec
and
pop
loop
ds
js
mov
sbb
sbb
or
popa
cli
outsl
xchg
push
ja
push
test
iret
mov
ss
sub
sahf
xchg
sbb
sbb
lods
and
outsb
mov
sbb
mov
pop
and
das
fmull
mov
test
pop
sbbb
mov
inc
sbb
add
push
popa
inc
repnz
sub
push
cltd
outsl
or
popa
repnz
in
sbb
dec
mov
and
out
arpl
xor
jl
stc
sti
jbe
push
mov
sbb
leave
xchg
fsubp
test
dec
cmpsb
push
push
dec
rorb
sbb
xorl
fwait
loope
pop
neg
xor
sbb
lret
mov
mov
je
ds
push
mov
pop
test
lock
xchg
adc
repnz
je
push
out
mov
pop
clc
sbb
jbe
sbb
mov
sub
shlb
adc
xor
sbb
psadbw
inc
movl
xor
mov
mov
xlat
jl
ficomps
cmp
cmp
mov
mov
ljmp
sbb
mov
adc
mov
cmp
jns,pt
rcrl
sbb
adc
shll
jmp
stc
xor
ja
sbb
jg
sbb
cmp
sub
xchg
dec
jae
jbe
repz
fcompl
gs
unpckhps
and
push
inc
in
inc
shl
xchg
cmpsb
lea
scas
sbb
pushf
jnp
in
adc
adc
fs
xor
pop
add
rolb
fldl
ljmp
stos
pop
jecxz
inc
jg
sbb
stc
jbe
cmp
fcomip
sbb
clc
xchg
adc
and
dec
imul
mov
xchg
pop
adc
add
mov
pop
pop
push
adc
into
push
adc
adc
push
add
sbb
jo
test
sbb
pushf
int
sbb
xchg
add
mov
or
jl
xor
sbb
add
in
inc
lcall
push
jl
movsb
sub
jns
sbbl
add
jno
stos
jmp
sbb
insb
sbb
repnz
out
sar
and
leave
mov
ljmp
dec
test
cli
mov
push
pop
add
cmp
push
les
mov
jle
cmc
mov
sbb
mov
xchg
outsl
loop
jge
sbb
lods
int3
inc
sbb
insb
aaa
jg
add
mov
or
sbb
aam
and
mov
in
es
js
sbb
sub
mov
xchg
sub
dec
adc
stos
cmp
or
push
push
pop
dec
lret
popa
xchg
sbb
jecxz
fs
ljmp
xchg
push
xor
outsb
cmp
and
fs
fsub
lea
adc
pop
popa
sbb
mov
and
xchg
dec
test
jle
sbb
push
cmpsl
jmp
pop
int
popw
xor
cltd
push
pushf
xchg
or
inc
sbb
and
out
test
mov
sbb
jne
cs
sbb
lods
int
xchg
push
out
test
call
pop
inc
sbb
xor
loope
jns
sub
push
push
lret
mov
adc
sarl
mov
xchg
aam
cmp
push
popf
mov
cmp
imul
push
addr16
negl
pop
negb
into
xlat
add
sub
cltd
test
aad
jg
outsl
popf
movsb
int3
dec
mov
into
lods
add
adc
sub
out
out
addr16
dec
stos
add
mov
xchg
mov
push
sbb
es
dec
jb
mov
sbb
sub
jb
adcl
inc
push
int
adc
mov
popf
daa
adc
inc
push
leave
aaa
sbb
adc
jb
sbb
shll
sahf
data16
xchg
cs
push
pop
push
cli
call
lods
loope
aas
xchg
popf
sbb
dec
adc
pop
sbb
fwait
ss
in
sahf
in
inc
inc
movsl
rcll
inc
cmp
sarl
and
add
cmp
ss
jns
faddl
push
scas
sub
sbb
call
xchg
sub
decl
mov
sbb
lods
test
ret
lds
test
sbb
add
gs
adc
repnz
sbb
mov
push
test
jmp
xchg
imul
fbstp
cmp
and
adc
aas
sbb
enter
ret
xchg
in
cmp
sub
fsubs
ret
jmp
add
aaa
mov
fstpl
cwtl
test
mov
test
sbb
jb
ficomps
and
or
xchg
sbb
xchg
bound
lock
fcompl
push
xchg
repz
cmp
mov
mov
test
pop
cmp
add
sbb
je
xlat
sbb
jne
mov
cli
mov
rcll
pop
fsubrl
sbb
push
mov
negb
and
pop
insb
mov
sbb
sbb
jns
sbb
cli
ficoms
sbb
gs
sbb
inc
xlat
mov
test
sbb
enter
imul
fwait
xor
xchg
push
xchg
adc
pop
pushf
mov
fsts
sbb
pusha
or
sbb
dec
pop
push
sbb
mov
lret
js
jp
add
xchg
adc
aaa
inc
fsts
sbb
shlb
xorb
movsb
fs
jbe
sbb
xchg
cld
movsl
and
pop
sbb
jb
mov
cmp
pop
or
inc
jbe
adc
insl
adc
lds
lcall
push
and
push
push
xor
jo
xlat
stc
js
mov
aaa
push
pushf
cmp
jb
rolb
push
loop
sbb
es
cmp
movsl
lahf
sbb
sbb
mov
in
mov
stc
mov
mov
jbe
sbb
jae
cmpsb
push
and
in
je
andl
shll
movsb
insl
push
pushf
mov
pop
in
dec
cmp
jp
sbb
insl
sbb
pusha
cmp
cmp
pop
jg
addr16
sahf
inc
mov
pop
scas
xchg
mov
cmp
mov
adc
dec
mov
xchg
sbb
int3
fmull
aaa
sbb
popf
fwait
jp
inc
adc
outsl
aad
jg
mov
or
mov
rcr
xchg
inc
sbb
int3
sarl
sbb
sbb
jecxz
ret
test
sbb
sbb
out
mov
adc
repnz
adc
mov
in
or
nop
sbb
and
in
sbb
sub
pop
xchg
cld
inc
sbb
jle
add
xchg
sbb
mov
les
mov
pushf
rcrb
test
inc
pop
lods
out
mov
and
mov
fildll
loop
sbb
push
lea
add
fcmove
loope
test
xchg
pop
sbb
cmp
jl
jo
enter
sbb
add
test
dec
sarb
mov
fcoms
les
sub
test
sbb
sbb
xchg
imul
adc
shl
addb
mov
sbbl
outsb
jg
and
movsb
test
std
lahf
adc
iret
sub
popf
cmpsl
mov
pop
xlat
lods
out
jnp
fs
lret
mov
push
sbb
inc
bsr
mov
fstp
adcb
sub
sbb
adc
cmp
sbb
pusha
push
les
test
or
dec
loop
push
push
jnp
cwtl
adc
aaa
mov
sbb
mov
sbb
dec
cmpsl
ds
mov
jge
xchg
aad
sbb
push
jo
push
xor
jp
sub
xchg
sbb
xchg
test
rorl
xchg
sbb
clc
dec
sbb
fnstsw
rcll
sbb
mov
pop
sbb
movb
sub
ja
sbb
xor
fidivrl
xchg
jae
sub
push
mov
movsl
pushf
sub
cltd
sbb
inc
jb
sub
ret
sarl
xchg
xor
jmp
les
push
jbe
sbb
mov
orb
movsl
stc
dec
mov
jbe
mov
sbb
sbb
sbb
psrld
sbb
sbb
xor
mov
mov
jge
enter
ret
lahf
push
outsb
jmp
add
jge
xchg
icebp
fdivrp
test
push
xor
outsl
cmpl
push
or
andb
cltd
inc
mov
mov
add
sbb
mov
scas
sbb
jmp
pop
sbb
inc
jae
push
xor
nop
or
xlat
shrd
out
dec
scas
mov
shrl
adc
add
mov
shr
sti
cmp
ja
subl
insb
test
push
jp
pop
xchg
in
add
mov
fsubrp
xor
mov
mov
adc
and
xchg
adc
push
dec
and
or
mov
movsb
mov
pop
enter
imul
xor
xor
and
fwait
jne
jg
ljmp
fldlg2
lcall
adc
sbb
jns
adc
sbb
xor
repnz
es
sbb
mov
jmp
mov
lret
mov
pushf
sbb
loopne
jns
cmp
sbb
fildll
sbb
push
sbb
sbb
decl
sub
push
sbb
into
dec
jecxz,pt
mov
loope
dec
push
test
xchg
lds
daa
jne
push
pop
ss
loope
int
add
mov
cmp
jmp
sbb
xchg
mov
pop
outsl
jg
jmp
pop
aas
lret
add
xchg
sbb
cmp
lcall
xlat
push
in
mov
adc
or
inc
push
or
inc
dec
jae
loope
push
sar
sub
sbbl
test
inc
lock
pop
add
push
shll
fistpl
push
ljmpw
test
push
push
mov
xchg
addr16
mov
cmc
pop
and
pop
pop
data16
pop
jecxz
and
mov
push
jge
test
dec
ss
push
xor
loopne
fwait
mov
dec
jae
das
sbb
in
jae
std
aam
cmpsl
inc
cs
xor
or
js
shl
sbb
stc
insl
int
pop
jl
fs
movsl
sbb
icebp
cmp
and
mov
mov
adc
cmp
mov
movsb
sbb
push
xlat
rcr
mov
ss
sbb
sbb
fadd
pop
std
xchg
dec
pop
sbb
jle
stos
xor
xchg
pop
xor
outsl
sub
and
sbb
test
sub
sbb
inc
in
mov
mov
and
dec
mov
fcomps
vpgatherdd
loop
cmp
pushl
push
fiaddl
inc
sbb
xor
or
sbb
es
xchg
push
dec
insl
or
mov
aam
sbb
lods
sbb
outsl
sbb
leave
lret
cmp
imul
push
push
popa
pop
push
sub
inc
add
fimuls
jge
repnz
pop
lds
aad
sahf
scas
pop
into
jbe
adc
cmp
jae
add
and
jns
fwait
out
ja
dec
sbb
push
mov
sbb
int
jb
cmp
movsl
push
xor
enter
shrl
and
pop
and
fwait
add
mov
inc
mov
adc
pop
xchg
ret
pusha
adc
fidivrl
pop
popa
bswap
jae
adc
test
sub
add
hlt
mov
loop
or
sbb
lods
je
das
xchg
out
dec
sbb
jo
jmp
sbb
lea
fwait
push
dec
mov
loopne
mov
test
in
jl
add
call
pop
loopne
popa
adc
fsubrs
sbb
movsl
cld
pop
xchg
dec
sub
cmpsb
dec
out
push
or
test
cli
sbb
and
xchg
jo
adc
dec
xchg
push
test
sbb
arpl
pushf
xor
stc
loop
mov
fs
add
mov
iret
xchg
inc
sbb
mov
pusha
cmpsb
sbb
xor
xor
push
insl
mov
inc
xor
adcb
mov
jae
sbb
add
outsb
je
popa
sbb
test
stos
sbb
xchg
pop
adc
inc
adc
mov
sbb
out
xchg
push
mov
sub
xacquire
xchg
call
imul
mov
jb
sbb
out
add
mov
mov
jp
dec
jne
mov
fs
jle
and
mov
inc
sub
jb
sub
dec
enter
cmpsl
sbb
add
inc
sbb
jns
test
fisubs
adc
jo
sbb
test
mov
xchg
cmp
add
and
mov
pop
adc
dec
sti
enter
loope
mov
xor
xor
sbb
cmp
test
sbb
jo
and
or
or
jmp
scas
xchg
adc
aaa
xchg
lahf
push
sarb
inc
loope
add
lret
xor
xchg
cmpsb
in
cmc
inc
scas
sbb
jmp
mov
jbe
mov
je
mov
or
negb
add
sbb
fldl
pop
sbb
add
push
dec
daa
decl
dec
jp
pop
add
dec
sbb
add
push
sti
push
sub
or
mov
sub
enter
bound
sahf
in
clc
xchg
xor
movsb
xchg
inc
add
mov
jb
or
mov
cmp
nop
xor
xchg
lcall
sub
loope
and
inc
stc
sbb
call
mov
sbb
sbb
aaa
mov
mov
and
mov
xchg
lock
jo
and
icebp
inc
ja
inc
ds
jg
push
popa
pop
adc
mov
icebp
push
orl
adc
mov
daa
cmc
into
cmovl
sbb
xchg
or
sbb
movsl
xchg
shlb
jge
sbb
xchg
in
sbb
inc
aaa
addr16
fwait
or
dec
cmp
push
adc
cmpsl
sbb
in
sub
adc
mov
inc
push
rcrl
je
sahf
sub
add
sbb
mov
ret
dec
push
pop
sarl
adc
push
mov
adc
sti
sbb
rclb
add
cs
iret
mov
lea
adc
jae
adc
pop
cmp
pop
pop
imul
or
sbb
mov
mov
rcrl
cmp
lods
pop
mov
pop
push
fistps
mov
mov
loop
mov
lods
jne
pop
mov
pop
push
add
dec
sub
notb
into
sbb
or
cmp
fcomps
cmp
out
xchg
mov
mov
push
pop
out
xchg
repnz
lods
das
push
push
je
pushf
lods
sbb
imul
movsl
fwait
sbbl
cwtl
mov
cs
ficompl
sbb
jae
xlat
aas
inc
sbb
cmp
push
aad
inc
jmp
adc
mov
mov
dec
adc
out
push
es
cwtl
lahf
jb
rolb
pop
fistl
push
jnp
sbb
pop
imul
inc
adc
call
push
lea
adc
add
mov
lret
sarb
adcb
popf
jp
leave
cmp
jle
pop
andl
mov
xchg
inc
xor
hlt
insl
xchg
leave
jmp
stc
lods
xlat
inc
xchg
mov
leave
mov
test
fimull
ss
les
in
inc
loopne
cwtl
push
shrl
xor
adc
push
and
jl
sbb
fsubrl
and
sbb
sub
sbb
sub
sub
popf
pop
xor
xchg
mov
sbb
jns
movb
sbb
popa
cmp
push
pushf
cmp
aas
dec
sbb
addb
iret
cltd
stc
lcall
push
sbb
add
xchg
jle
cmp
cmpsb
mov
insb
shrb
imul
addb
lea
fdivrl
jmp
stos
or
inc
dec
sbbb
daa
movsb
add
cs
out
and
mov
jecxz
daa
and
xchg
mov
mov
lcall
ret
push
push
sbb
mov
ljmp
xlat
xchg
test
adc
jbe
or
dec
testb
inc
pop
popa
mov
add
cmpsb
sbb
scas
lret
cwtl
pop
inc
or
adc
push
mov
sbb
in
cmp
pop
outsl
nop
rorl
aam
inc
sbb
ljmp
mov
adc
stc
add
mov
lret
pop
jg
jns
andb
mov
int
xchg
pop
push
cmp
push
and
mov
out
mov
icebp
outsl
xchg
sbb
cmpsl
sbb
add
mov
test
gs
test
mov
out
sub
push
mov
inc
lret
mov
mov
sbb
test
push
lret
add
sti
or
pop
cld
jmp
lret
sarb
aad
mov
jecxz
or
mov
iret
andb
cmp
xchg
dec
and
add
js
push
sbb
fnsave
daa
jecxz
adc
mov
push
fcompl
pop
outsl
es
lds
jae
sbb
sbb
fwait
popa
pop
bound
jl
cld
clc
cmp
lret
adc
xchg
mov
xchg
scas
stc
sub
jnp
movsl
inc
jmp
mov
lock
and
push
ror
es
xchg
add
jp
int3
jge
cmpsb
xor
call
or
lods
adc
cs
sbb
and
sub
push
sbb
subb
add
push
pop
sti
and
mov
dec
mov
mov
aaa
movsb
push
sbb
aam
push
cmpsl
iret
cmp
mov
push
mov
sbb
jae
dec
xlat
pop
repnz
addr16
aas
add
jne
and
lahf
int3
data16
and
adc
jl
inc
sbb
dec
test
test
aas
aam
mov
lcall
arpl
js
sub
shll
les
sub
sbb
pusha
sub
in
sbb
adc
sbb
movsl
mov
outsb
mov
and
xlat
cmp
mov
sbbb
popf
repnz
inc
push
sbb
cmp
fcoml
sub
sbb
shlb
mov
aam
cmp
push
xchg
out
leave
dec
push
fistpl
jae
ret
jne
loop
adc
cmp
xchg
ficompl
xchg
mov
test
call
imul
push
es
in
push
sbb
mov
dec
lock
push
les
fisubrs
cmp
xchg
mov
imul
and
xlat
sub
add
xchg
jecxz
mov
and
sub
in
mov
popf
xchg
sbb
or
out
xchg
mov
dec
les
mov
sbb
adc
cmove
daa
imul
fbld
mov
sbb
icebp
pop
sti
mov
fcoml
mov
push
xchg
sub
xor
fcoms
leave
xchg
pop
fldenv
sbb
sahf
pop
mov
sbb
aas
sbb
jge
sbb
std
dec
push
movsb
test
sbb
cmp
mov
adc
xchg
iret
push
push
mov
pop
sahf
add
sbb
shr
loopne
int3
pop
sbb
andb
pop
enter
sbb
das
jbe
ja
mov
in
xchg
repz
mov
cmp
sbb
je
cltd
inc
adc
scas
sbb
or
sbb
gs
mov
inc
imul
aas
or
int
scas
jecxz
xor
xor
addr16
push
mov
pop
mov
imul
push
sbb
adc
jle
sbb
xor
test
call
loope
dec
push
mov
adc
icebp
jmp
test
adc
jnp
mov
cmc
mov
sbb
addr16
mov
sbb
inc
sub
adc
imul
test
in
push
fwait
push
dec
push
shlb
push
stos
add
push
popf
push
sbb
lock
sbbb
mov
push
scas
ret
jne
cwtl
sbb
jp
pop
inc
mov
rcll
xor
jns
sbb
nop
pop
jnp
inc
icebp
dec
sbb
ljmp
adc
mov
add
mov
push
fidivs
jecxz
and
les
adc
mov
mov
dec
mov
sbb
mov
fidivrs
pushf
sbb
lea
imul
sbb
dec
bound
xor
jne
pop
mov
xchg
sub
xchg
xor
or
adc
sbb
fiaddl
jbe
sbb
and
xchg
cmp
cmp
imul
add
push
sbb
insl
mov
or
adc
add
inc
lea
xchg
dec
cmpsb
and
repnz
scas
xor
lcall
fidivrs
jnp
sbb
cwtl
jns
mov
lds
dec
sbb
push
ret
cmp
add
fisubs
clc
sbb
shl
cmp
add
mov
les
mov
movsl
cmp
lret
sbb
das
lcall
push
sbb
jnp
xlat
sbb
xchg
enter
mov
mov
call
xor
orl
and
sbb
lock
sub
shll
test
and
insl
adc
xchg
push
bnd
add
addr16
pop
xor
in
mov
imul
and
xor
mov
pusha
jo
aaa
mov
loopne
lahf
cwtl
scas
outsb
dec
sub
aam
dec
clc
sbb
dec
add
call
js
push
sbb
xor
add
icebp
test
mov
mov
hlt
adc
in
xchg
sbb
sbb
push
pop
int3
mov
push
incl
lea
call
pop
les
pop
cmp
cmp
stos
push
shrl
sbb
and
stc
xor
xor
dec
imull
mov
loope
mov
sbb
popa
add
or
adc
jne
xor
fisubrl
cmp
sub
push
jae
pop
sbb
enter
cmpsb
cwtl
in
dec
sbb
or
mov
or
les
int3
sbb
push
sbb
pusha
cmp
imul
imul
jae
or
icebp
adc
jg
mov
clc
movsb
inc
repnz
adc
pushf
lods
cmp
and
jmp
sbb
inc
mov
movsl
out
fwait
cwtl
sbb
push
rcrb
cltd
out
xchg
and
fstpt
loope
jb
mov
xchg
mov
nop
push
sub
sbb
dec
out
sti
sbb
daa
in
dec
sbb
data16
sbb
xchg
leave
or
mov
dec
inc
int
xlat
xorl
test
sbb
popf
hlt
mov
iret
xlat
or
adc
cli
lods
lahf
mov
stc
push
inc
cmp
push
or
sbb
hlt
xor
jns
sti
sahf
sbb
aas
dec
mov
fcoml
je
mov
lods
sbb
add
cwtl
sbb
sti
xor
xchg
pop
mov
sbb
je
adc
mov
xchg
sbb
mov
sbb
xchg
shll
sar
dec
and
sbb
jg
aas
sbb
mov
arpl
adc
subb
mov
repz
dec
sub
ljmp
sbb
adc
aas
sbb
inc
xor
lods
outsb
lahf
ds
iret
inc
inc
in
pop
xchg
popf
fs
sbb
jp
and
mov
cmp
push
je
sahf
cld
sbb
mov
sub
add
mov
or
xchg
sbb
mov
stos
xchg
mov
xlat
jo
sbb
jne
ret
and
hlt
sbb
sti
cmp
or
sbb
gs
and
ljmp
pop
notb
out
add
pushl
scas
fcompl
ss
mov
sbb
mov
in
add
jb
and
pop
nop
xchg
loopne
inc
pop
add
dec
push
mov
xor
mov
and
test
push
inc
test
fimuls
lret
xor
jne
adc
test
jge
cs
push
popf
mov
scas
outsb
sbb
jmp
icebp
lcall
sahf
mov
lea
cmp
repz
dec
sbb
adc
fwait
push
and
mov
subb
push
pop
sub
xchg
mov
lods
sbb
mov
nop
and
mov
cmp
sbb
leave
imulb
sbb
jno
pop
sbb
xor
sbb
insl
sub
daa
mov
push
sub
popf
pushf
fs
pop
xor
jl
inc
sbb
push
cld
dec
cmp
mov
sbb
sub
mov
daa
pop
sbb
insb
add
mov
icebp
adc
jl
sbb
jbe
sbb
xor
sbb
lcall
pop
mov
aam
fwait
xlat
lret
or
loop
aaa
pop
or
je
jae
test
adc
sbb
sahf
mov
and
lock
cli
mov
sub
dec
in
push
push
mov
sbb
or
mov
and
push
repz
cmp
mov
sub
inc
cmc
pop
jmp
xchg
mov
inc
mov
pop
dec
sbb
or
mov
int3
ja
mov
mov
jne
loope
in
xchg
ret
mov
addr16
in
adc
push
mov
outsl
jecxz
rcll
xchg
xchg
mov
adc
loopne
push
icebp
outsb
sbb
dec
test
adc
sbb
xchg
jle
mov
pop
xor
outsb
push
xchg
and
js
ret
cmp
push
mov
aad
sbb
bnd
pop
lret
pop
pop
rolb
stos
sarb
stos
pop
test
cmp
sbb
or
cmpsl
push
lcall
sbb
dec
and
xor
ljmp
inc
xchg
in
mov
ret
pop
loope
gs
stc
sbb
in
sti
push
daa
repz
jne
pushf
ficoml
test
aad
sub
sub
sbb
nop
inc
int3
es
mov
adc
adc
repnz
xor
sub
push
outsl
ret
rorl
call
fcomps
mov
fincstp
lods
js
xchg
pop
sbb
das
stos
xor
xchg
rclb
movsb
cmp
xlat
jae
cwtl
mov
mov
inc
adc
xor
pushf
sbb
movsl
mov
jbe
out
sbb
scas
rcpps
shlb
and
imul
adc
push
clc
sti
inc
push
out
and
inc
push
sbb
addr16
lret
fs
pusha
dec
js
sbb
ret
sarl
xchg
popa
pop
inc
sbb
dec
or
hlt
pop
jle
sbb
jl
or
adc
lods
cwtl
cmp
xchg
mov
jo
sbb
add
push
adc
into
sahf
pushf
mov
dec
dec
sbb
push
rcl
sbb
mov
in
mov
adc
ja
je
cmp
xor
dec
xchg
xor
sbb
sbb
cld
sbbl
ret
jbe
das
sbb
mov
cwtl
sbb
ss
les
sbb
sub
and
sbb
add
pop
dec
xorb
popa
into
push
mov
test
xorb
sbb
jno
sti
mov
push
mov
mov
mov
sbb
inc
mov
adc
sbb
xchg
cmc
pop
mov
jmp
xor
push
jo
or
fildl
mov
adc
out
shll
xor
addr16
pop
jno
sbb
sbb
or
mov
repnz
adc
push
xchg
sub
sbb
pop
mov
loope
inc
xchg
sbbb
xchg
add
mov
scas
aad
ficompl
jp
sub
mov
roll
int
in
adc
test
adc
mov
sbb
shrl
sbb
sbb
sbb
push
sbb
xor
ficomps
inc
xor
mov
rclb
adc
test
out
and
pop
pop
cs
sbb
pop
sub
stos
js
xchg
push
sbb
inc
test
gs
fwait
or
mov
push
ret
repz
inc
pop
mov
adc
addr16
xchg
cmp
sbb
sbbb
test
push
sbb
push
xor
inc
dec
or
sub
cmpsb
sub
mov
jecxz
pop
lods
or
adc
jbe
scas
jmp
pop
xchg
sahf
test
ljmp
lret
adc
sbb
inc
mov
ss
ljmp
push
mov
shl
fstl
mov
inc
lods
mov
lds
xchg
cmp
sbb
pop
xchg
test
shlb
lret
mov
jae
outsl
lcall
stos
imul
out
push
xlat
loop
sbb
add
and
fisubs
sbb
or
mov
outsb
sbb
xor
adc
test
lahf
adc
sbb
cmp
push
pop
or
jl
subb
xor
sub
js
unpckhps
addr16
xchg
nop
mov
push
cmc
sbb
jnp
fldl
imul
ja
call
sbb
add
cmp
or
fwait
sub
popa
push
in
scas
cmc
aam
xchg
push
sbb
imul
js
add
nop
orb
dec
fcompl
icebp
sbb
cmovge
jns
add
sbb
test
outsb
sbb
mov
xchg
cmp
xchg
les
fs
loop
lea
mull
adc
jmp
pop
aad
dec
stos
or
or
insl
outsb
adc
dec
jno
mov
fmul
sbb
pushf
cmp
cwtl
inc
std
lcall
xchg
sti
sbb
mov
repnz
rolb
mov
jne
cmp
scas
fidivrl
repz
outsb
aaa
xor
imul
mull
je
jge
sbb
or
xor
adc
jne
les
xchg
jl
xchg
test
stc
cmp
xor
mov
shl
add
inc
cmp
push
add
add
stos
dec
xor
negb
dec
daa
sbb
pop
sbb
sbb
mov
pop
push
inc
sbb
std
icebp
sbb
cli
sbb
sbb
push
and
ljmp
mov
in
push
adc
adc
sbb
pop
test
mov
mov
sahf
sbb
mov
xor
inc
pusha
pop
xchg
mov
lods
ds
pop
dec
data16
sbb
or
sub
or
ja
lods
sbb
adcb
add
cmp
cld
cmp
sbb
sahf
aad
sub
sub
sti
loopne
addr16
or
sbb
imul
bound
sbb
jle
fdivl
pop
add
xchg
mov
and
push
and
stos
ret
pop
adc
inc
test
sbb
sbb
ficompl
fwait
stos
movsb
pushf
popa
pop
jo
cs
cmp
xchg
mulb
mov
insl
xorb
sbb
push
lock
push
adc
loope
or
xchg
adc
sbb
rolb
shll
imul
roll
sbb
cwtl
fdivs
lret
push
dec
xor
sbb
sarl
jmp
sbb
fisttpll
inc
test
lret
mov
js
sbb
mov
pop
inc
sbb
mov
mov
rclb
dec
xor
repnz
pushf
sbbl
jecxz
pop
pop
cmp
mov
scas
out
push
or
jp
stc
dec
mov
rcrl
inc
cmp
jge
lret
nop
daa
adc
inc
and
in
push
aad
cmp
sbb
aas
sbb
add
pop
jns
lea
sbb
jmpw
inc
sbb
das
loope
mov
hlt
xchg
cmc
cmp
add
sti
add
adc
cmp
mov
push
or
enter
imul
clc
push
xor
ret
out
push
cmp
mov
sbb
mov
or
cmc
sbb
scas
int3
loop
xchg
push
addr16
jnp
and
cli
test
fldl
lea
sbb
sti
movl
movsl
mov
clc
push
jl
sbb
or
inc
lods
push
fists
lock
adc
and
xor
push
daa
xchg
sbb
out
mov
sbb
lds
cltd
inc
test
inc
mov
sub
jmp
lcall
inc
pop
adc
pop
add
sbb
hlt
push
xchg
dec
mov
jb
movsl
in
push
loope
push
xchg
lcall
inc
shr
in
es
sbb
xchg
sbb
fimull
push
int3
jp
shlb
rcrb
and
sbb
lock
dec
adc
dec
cli
cmp
pop
loope
mov
ret
mov
push
mov
jb
cmp
jp
xchg
mov
adc
xchg
pop
adc
mov
rclb
mov
bswap
in
xchg
mov
xchg
scas
pop
mov
int3
mov
mov
addr16
xchg
dec
inc
outsl
sbb
aam
dec
xor
in
vpexpandd
rorb
js
cmp
popf
mov
jae
sub
arpl
into
psllw
loopne
add
dec
add
sbb
adc
jae
cs
sbb
push
les
adc
fs
cld
jnp
repnz
add
stos
fsubrs
stos
arpl
mov
push
cmpsl
push
sub
pop
int
mov
xor
pushf
sbb
lahf
inc
inc
push
fdivrs
cmp
adc
mov
loop
cld
aam
add
dec
outsl
jne
aas
push
fidivl
fadds
gs
mov
cli
and
imul
dec
pushf
aad
mov
push
rcrl
pop
cld
mov
outsl
out
and
fidivrs
sbb
imul
test
adc
add
lods
pushf
xchg
stos
inc
xchg
ss
sbb
sti
je
add
imul
add
cmp
push
and
mov
mov
fsubr
cmpsl
xchg
or
mov
mov
push
and
push
sbb
bound
mov
mov
enter
sub
movsb
jno
mov
shlb
and
mov
sbb
cs
xor
push
lcall
ds
push
data16
fmuls
cmpsl
jns
loopne
popf
push
or
mov
adc
fldl
jl
jns
pop
ss
sbb
sahf
das
sub
cld
push
and
shll
add
sub
jge
mov
mov
push
sbb
sbb
vpaddusb
push
jg
xchg
mov
jbe
sbb
loope
adc
cltd
sub
dec
jno
inc
cmp
sahf
sbb
arpl
sbb
sbb
movb
enter
in
rcll
stos
cmpl
arpl
sbb
stc
fsubr
mov
aaa
sbb
cltd
lods
test
jno
xchg
cmp
enter
cmpsb
xor
adc
push
xor
lahf
sbb
jecxz
mov
sbb
test
popa
xlat
stc
mov
adc
xor
dec
sbb
cmp
fstpl
test
cs
sub
and
ret
and
inc
dec
pushf
mov
fildl
add
push
adc
int
sub
adc
insb
dec
negb
sub
mov
cwtl
sbb
mov
mov
shrb
sarl
adc
sahf
nop
jo
push
and
fwait
jmp
ljmp
pop
mov
imul
test
repz
sarb
repnz
mov
ljmp
adc
lret
sbb
xchg
aad
rcrb
dec
loope
cli
push
cmp
popa
sbb
enter
imul
xchg
pop
sbb
dec
movsl
xor
iret
dec
xchg
outsw
repz
sbb
pop
fstpl
or
sbb
scas
leave
dec
lea
jnp
push
inc
test
cwtl
jge
loope
lcall
push
in
sbb
inc
adc
sbb
lcall
pop
pop
fsub
push
loop
or
pop
inc
jbe
icebp
clc
mov
scas
mov
xchg
frstor
xorb
dec
pushf
xchg
and
jge
jecxz
and
push
scas
jl
lds
insl
mov
sbb
xor
jns
sbb
bound
and
mov
mov
pop
lret
sbb
push
mov
imul
outsb
sub
add
lods
xor
dec
dec
lcall
push
mov
cld
fcmovne
xlat
sbb
inc
pop
mov
sbb
loope
mov
adc
add
jg
mov
ja
jno
cld
push
xor
imul
dec
jne
movsl
sbb
cmp
ret
mov
into
push
jle
sbb
test
addr16
sbb
mov
sub
or
fs
xchg
sbb
je
jge
aas
mov
int3
adc
or
fwait
mov
xchg
mov
adc
pop
xor
loope
in
stos
inc
mov
fmull
xor
rcl
mov
fbstp
sub
add
add
ret
es
sbb
dec
xchg
xor
adc
mov
adc
mov
sbb
cltd
in
push
cmpsb
bound
and
repnz
addl
in
sbb
jle
out
cmpsl
popa
add
cmp
xor
or
pushf
adc
lret
out
icebp
in
adc
dec
mov
mov
sub
push
mov
mov
fiaddl
sbb
cmp
jl
jb
pop
mov
pop
cli
out
mov
es
aaa
scas
dec
xchg
sbb
adcl
adc
add
sbb
inc
or
hlt
cmpsb
leave
and
push
xchg
in
mov
sbb
pop
pop
cld
mov
or
stos
pop
jmp
cltd
sbb
aaa
movsb
call
cmp
lcall
pop
cld
pop
out
mov
or
mov
xlat
xchg
dec
adc
test
adc
fldt
sbb
sub
xor
sti
scas
cmp
sbb
out
inc
dec
daa
xor
je
inc
lcall
pusha
outsb
gs
sbb
shlb
rolb
mov
cld
hlt
pop
sbb
xor
ja
push
or
mov
sbb
dec
ds
dec
cmp
push
push
push
in
ss
das
loope
push
inc
add
cld
sbb
and
pop
pusha
in
repnz
push
in
fwait
xor
mov
aaa
mov
fcompl
xchg
add
sub
sbb
jp
fsubs
xchg
js
mov
mov
mov
jle
icebp
jnp
nop
mull
aaa
leave
push
cmp
sbb
addb
stc
xchg
mov
push
movb
hlt
shrb
xchg
push
data16
inc
xor
rclb
xor
sbb
mov
loope
sbb
fcomps
and
mov
jmp
shr
loop
je
inc
inc
ljmp
lock
rcr
in
mov
sahf
out
and
inc
mov
mov
inc
inc
ret
lret
repnz
repz
or
dec
and
push
push
cmpl
imul
push
add
lock
sbb
pop
add
orb
shrl
cmp
mov
mov
sbb
cmc
les
mov
sahf
push
xchg
add
lods
dec
neg
and
out
ja
cmp
sbb
inc
outsb
and
sbb
sarl
xchg
out
sbb
dec
jle
sbb
xorl
mov
xor
jbe
sbb
jnp
call
xchg
or
fiadds
sarl
inc
or
push
push
xor
jbe
es
xchg
stos
mov
inc
daa
jmp
data16
shrb
shl
hlt
mov
sbb
xchg
mov
les
xchg
push
and
test
sbb
sbb
outsb
loopne
xor
test
push
loop
xchg
vandpd
insb
sbb
push
popf
dec
jg
dec
sbb
nop
bound
loope
pop
clc
and
pop
lods
cmp
add
cmp
cmc
sbb
ds
imul
jg
sbb
lcall
enter
xchg
mov
imul
dec
mov
adc
xchg
or
push
jmp
adc
into
sbb
xor
lods
adcl
shll
pop
rcrl
shl
lock
cmp
mov
jne
or
cmpsl
pop
push
sub
ret
sbb
push
or
mov
inc
sbb
je
inc
mov
sbb
cmc
push
lods
in
pop
test
inc
mov
sbb
cli
push
or
xchg
int
xchg
sbb
and
cltd
js
aaa
add
cmp
stc
jge
dec
pop
sbb
in
mov
push
aam
or
jmp
adc
sbb
push
or
shl
sbb
mov
sub
cmp
cmp
inc
icebp
jo
jbe
adc
stos
cld
dec
sbb
sbb
adc
sbb
in
cmp
sbb
mov
mov
sbb
xor
adc
inc
sbb
js
jne
test
sbb
cld
jmp
cwtl
repnz
int
cmp
aaa
xor
push
mov
outsb
jno
inc
sub
mov
out
stc
push
add
mov
sbb
loop
lcall
jns
push
fimull
jle
test
jecxz
pop
aam
cld
ja
mov
sbb
xchg
dec
mov
sbb
stos
adc
push
cltd
int
repz
loop
jl
sub
push
dec
cmp
call
dec
mov
jmp
popa
pop
xor
jmp
sbb
ficompl
sbb
pop
cld
into
jbe
sbb
popf
inc
sub
jbe
mov
adc
mov
sahf
push
and
add
iret
inc
rorl
sbb
lahf
jb
sub
xchg
adcb
scas
sub
scas
xchg
sti
sbb
frstor
ficoml
repnz
jnp
adc
test
leave
push
int3
gs
sbb
rcrl
xchg
jp
sbb
xlat
movsb
mov
pop
sbb
negb
adc
or
cmpsb
push
mov
fs
sbb
and
daa
test
iret
adcb
push
sahf
mov
aas
dec
shr
push
mov
inc
sbb
jge
lret
or
fistl
add
xchg
sbb
xchg
xor
test
scas
push
sub
in
sbb
mov
sbb
adc
cwtl
popa
gs
xchg
cmpsl
xchg
push
aas
add
sbb
sbb
add
sbb
in
dec
push
ret
jecxz
push
sbb
jg
xchg
xlat
repnz
sbb
es
loope
cmp
rcr
inc
xor
sbb
lahf
cwtl
popa
inc
push
mov
cmpsl
sbb
aaa
inc
sbb
mov
mov
sbb
je
adc
neg
sub
popa
sub
add
and
fwait
xchg
std
push
aad
or
inc
pop
shll
cltd
sbb
jl
ret
test
aas
sbb
sbb
cmp
xor
mov
push
into
ret
out
movb
pop
pop
mov
add
mov
sbb
cwtl
arpl
sbb
xchg
mov
imul
mov
nop
or
sbb
inc
pusha
jmp
sbb
add
mov
out
mov
scas
jns
mov
iret
fisubrs
pop
mov
ret
xchg
inc
adc
sbb
lahf
icebp
and
out
and
addb
sbb
lcall
imul
sbb
xor
imul
sbb
repz
xchg
sbb
and
scas
shrl
pop
push
test
sbb
lret
mov
or
call
xchg
std
popf
nop
cmp
mov
sbb
jb
jbe
xlat
sbb
fistpll
inc
or
and
or
pushf
decl
lea
inc
add
adc
mov
adc
sbb
inc
pop
lds
xchg
insb
sbb
adcb
ret
cmp
negl
inc
and
sbb
pop
out
sbb
add
xor
mov
jl
testl
sbb
fsubrl
icebp
lcall
fsubr
or
xorl
mov
or
sbb
jae
movsb
imul
sub
and
lods
push
adc
lock
sub
popa
mov
sbb
dec
mov
lea
xorl
cmp
mov
adc
sub
fcomi
or
hlt
sbb
dec
les
idivb
xchg
mov
adc
xchg
sbb
out
mov
int3
sub
aaa
movsb
pushf
nop
sbb
addl
lods
cmp
mov
and
scas
js
jns
rcrl
dec
btc
cmp
stos
sbb
into
icebp
xor
sbb
dec
xchg
xchg
sbb
push
bnd
add
jb
outsb
hlt
outsb
stos
sbb
daa
cmp
fucomip
sbb
jl
test
mov
push
xor
adc
inc
inc
pop
movsb
cli
stc
and
mov
mov
jnp
push
jle
xlat
push
aad
cmc
int
rclb
pushf
adc
jmp
dec
rcr
fcmovbe
jl
push
cmp
pop
loop
push
mov
shlb
aaa
call
ficoml
sbb
sbb
pop
add
imul
sbb
jg
sbb
mov
inc
mov
pop
les
inc
jle
lock
sbb
push
dec
mov
cmp
imul
loop
pop
notl
fisubrs
pop
cmpl
push
stos
outsb
sub
jg
add
sbb
dec
pop
xchg
pop
sub
inc
mov
icebp
xor
pop
xchg
mov
sbb
test
xor
adc
push
std
mov
xchg
je
sbb
cld
cltd
adc
cmp
sbb
jb,pt
and
xor
pop
mov
testb
leave
jle
outsb
xchg
stos
adc
lcall
xor
fldenvs
in
pop
xchg
mov
ja
push
add
test
mov
and
lods
int
pop
xchg
inc
jle
popa
jo
xchg
sub
jl
bswap
pop
sub
cmp
imul
sbb
dec
sub
inc
loopne
xchg
mov
stos
cmp
mov
roll
mov
mov
or
loopne
icebp
xchg
sbb
leave
call
sbb
sub
pop
and
ret
xor
or
sbb
or
cmc
xor
jnp
pusha
push
frstor
js
sbb
dec
daa
subb
jp
push
adc
push
cs
out
mov
adc
rcrb
sbb
sbb
and
push
dec
sub
sbb
mov
inc
loope
int
lret
fsubrs
add
jmp
shr
sarb
jbe
adc
sbb
inc
cs
jne
push
mov
sbb
sbb
shlb
mov
adc
sbb
rol
fwait
sbb
push
dec
imul
inc
xchg
xor
xor
push
addl
mov
add
les
cwtl
nop
add
adc
sub
sbb
movsl
mov
cmp
adc
inc
pop
mov
ljmp
cmpb
lret
sbb
sahf
add
cld
jns
mov
fidivs
int
aaa
das
push
rclb
sbb
cmp
and
lahf
outsb
and
jne
mov
aas
dec
push
sbb
push
fildl
push
imul
push
pop
aad
ds
add
es
push
sbb
add
sbb
jl
pop
test
insl
or
xchg
stos
scas
loopne
lcall
inc
pop
sbb
lret
and
xchg
ds
mov
lds
xor
mov
jecxz
mov
or
push
xor
loop
dec
fbstp
cmp
and
inc
mov
sbb
push
daa
and
dec
and
inc
inc
push
jns
or
cmpsb
mov
sbb
xorb
push
sbb
jo
sbb
pop
xor
sbb
dec
xchg
push
xchg
loopne
sbb
movsl
mov
add
xor
stos
out
inc
imul
in
mov
mov
hlt
sbb
push
outsb
mov
jae,pt
rolb
rol
es
subl
gs
aam
adc
lock
fwait
aad
dec
test
mov
lods
hlt
loope
jb
andb
cmp
sbb
push
mov
gs
cmc
sbb
sub
or
outsb
mov
int
icebp
dec
pop
in
jge
adc
mov
int3
push
sbb
aaa
pop
dec
push
fwait
sbb
add
sbb
lret
jns
xchg
mov
in
mov
or
js
inc
mov
lret
mov
test
popf
sbb
roll
sbb
out
aam
dec
sub
sbbl
or
iret
shl
outsb
clc
je
sbb
mov
cmp
int3
sbb
cmp
repnz
and
pop
adc
stos
xchg
test
daa
sbb
movsb
jle
scas
sbb
int
ret
movsl
mov
pushf
lock
inc
cmc
mov
sbb
or
xor
mov
mov
loop
dec
and
pop
xor
sbb
dec
fcmovu
jae
test
mov
mov
and
test
cwtl
movhps
mov
push
aas
add
jge
add
sahf
push
dec
outsl
negb
mov
fidivrl
imul
sbb
mov
int
dec
and
ljmp
sbb
movsb
scas
in
sahf
into
ret
sbbl
hlt
cmp
sbb
or
out
pop
mov
lock
loope
out
xchg
orl
jb
sbb
cmp
and
and
xchg
sti
stc
in
cmpsb
scas
repnz
inc
inc
mov
fldpi
or
adc
leave
sbb
pop
or
pop
sbb
xor
cmp
data16
popa
and
jnp
mov
movsl
push
mov
push
sbb
jnp
pop
jo
scas
xchg
js
stc
inc
enter
lcall
test
adc
or
push
shll
sbb
and
add
sbb
lock
fbld
sub
sbb
shlb
adc
cmp
sub
pop
or
mov
sbb
test
cmp
jns
or
adc
aas
sbb
or
into
jno
sbb
mov
outsb
push
sbb
in
push
rcl
lods
sbb
pop
cmp
xchg
mov
cmpsb
sbb
sbb
loop
sbb
test
cmpsl
lahf
and
push
inc
sub
mov
mov
mov
jmp
addr16
adc
sub
jle
sbb
stos
fs
cmp
or
test
jecxz
lods
bound
gs
lock
out
sbb
repz
push
mov
sbb
lods
das
xor
lcall
adc
outsb
mov
stos
add
cmp
outsl
cwtl
mov
pop
xchg
jp
inc
sbb
mov
mov
adc
popf
ja
inc
cmp
push
je
aad
sbb
mov
inc
jb
xchg
add
adcl
clc
stos
cmc
xchg
mov
add
jge
pop
sbb
and
pop
dec
repz
sub
mov
mov
sbb
enter
imul
pop
mov
icebp
sbb
hlt
andb
sbb
mov
repz
out
or
ja
scas
in
jb
xchg
adc
cmp
data16
adc
sahf
mov
xor
xchg
add
jns
mov
imul
rcrl
mov
rclb
xor
jecxz
daa
add
pop
adc
sbb
cmp
inc
mov
xchg
scas
adc
sbb
out
call
notl
cmp
xor
out
add
int3
lods
leave
lds
sbb
jnp
add
into
add
xchg
pop
in
bound
loope
xchg
adc
cwtl
pop
jae
pop
cwtl
add
jge
xchg
add
lret
cmp
movsl
jp
sbb
lret
in
jb
xor
sbb
lcall
sbb
sbb
movsl
sbb
call
or
jns
jae
outsb
sbb
rorb
jb
addl
adc
orb
mov
dec
loop
sbb
mov
add
pop
jecxz
sbb
ret
cmp
cmpsl
push
in
fstpl
mov
and
pop
mov
imul
pop
mov
stos
or
test
push
mov
popaw
sbb
sub
mov
int3
cmp
sbb
roll
dec
pop
loopne
stos
in
fbld
pushf
mov
in
dec
cmc
or
js
mov
rcrl
fbstp
mov
sub
jo
push
sbb
cmc
les
leave
mov
pop
jne
adc
sahf
pop
xor
outsb
loope
out
xchg
dec
and
push
lds
dec
lea
cwtl
aam
repnz
pop
cmp
xchg
or
stos
nop
in
push
inc
loope
or
cmpsl
aad
mov
out
xor
negb
insb
scas
and
adc
mov
jne
ljmp
push
and
dec
xor
jle
sub
xchg
test
repz
nop
jg
pop
sbb
inc
cli
pop
std
and
add
cmp
imul
mov
add
repnz
jle
sbb
popf
or
movsl
push
sub
stc
xor
adc
pop
push
sbbb
add
push
mov
jo
sbbb
ljmp
insb
push
into
pop
cwtl
adc
or
das
adc
sti
js
test
fcomi
add
test
mov
xchg
ja
sbb
jb
test
shl
adc
mov
sbb
das
cmp
mov
sbb
dec
shll
lret
sbb
push
mov
cmp
test
adc
lahf
sbb
ds
jno
pop
movsw
mov
clc
mov
hlt
sbb
pop
pop
push
cwtl
fnsave
loope
dec
inc
lods
fisttps
dec
jo
push
aam
iret
sbb
rolb
mov
in
sbb
add
adc
mov
in
into
les
sbb
gs
aad
in
fcompl
ds
xchg
inc
das
sub
sbb
adc
dec
negl
data16
movsl
sbb
mov
fwait
sub
in
cmp
pop
sbb
push
sub
aas
pop
jl
xchg
imul
roll
das
mov
rolb
rcrb
mov
mov
inc
sbb
cmpsb
push
and
leave
sarb
xor
sbb
lahf
jo
xchg
inc
xchg
xchg
fmuls
adc
loope
dec
addl
sbb
je
lods
mov
stc
outsb
testl
dec
or
mov
dec
mov
inc
out
sbb
sbb
adc
adc
sbb
push
add
test
push
scas
xor
sub
inc
neg
cltd
adc
pop
xor
insb
sbb
ljmp
and
rcrl
cmp
add
xchg
sbb
movsb
ljmp
mov
mov
sbb
lods
std
in
jns
ds
ficoms
sub
mov
fidivs
sub
and
adc
dec
mov
mov
mov
sbb
and
or
push
pop
movsb
inc
add
xor
loopne
gs
xchg
shll
sbb
adc
pop
xor
push
push
xor
inc
sbb
fisubrl
lret
push
xor
xchg
shlb
sbb
aad
dec
ror
adc
sbb
jecxz
sub
or
sbb
filds
sub
adc
mov
cmc
cmp
or
sbb
stos
sarl
pushf
cwtl
std
mov
adc
pop
adc
ja
mov
dec
push
ds
bound
outsl
dec
mov
mov
pop
rcll
sbb
pop
sub
push
and
and
movsl
push
dec
test
lret
xor
add
sbb
xor
in
adc
or
ret
mov
call
mov
or
rolb
rcrb
pop
mov
cmp
push
and
fsubp
out
adc
mov
imul
dec
sub
aas
xor
cmp
adc
insl
xchg
aam
and
stos
pop
adc
cmp
repnz
daa
pop
leave
jb
data16
out
es
lahf
add
mov
inc
sbb
mov
jb
sbb
fwait
pop
dec
sbb
dec
mov
sbb
leave
pop
xchg
mov
in
push
loope
mov
cmp
sbb
or
mov
pop
loope
sub
push
sbb
pop
stos
icebp
sbb
nop
rorl
aas
js
mov
mov
adc
sbb
push
mov
dec
sbb
adc
fwait
xor
mov
push
lcall
cltd
popf
out
jns
sbb
int3
aad
cmpsl
nop
repz
int
pop
xor
cltd
sbb
pushf
mov
pop
shr
add
flds
and
ss
daa
je
arpl
cmp
fisubrl
and
sub
jns
stos
cli
fiadds
jmp
outsb
mov
cmp
les
pop
cwtl
add
push
sbb
adc
out
sbb
scas
sbb
mov
mov
sbb
ja
jne
jb
xor
push
sbb
movsb
jno
sbb
aam
mov
popf
sbb
pop
inc
push
inc
push
out
sbb
mov
stos
mov
mov
adc
outsl
ret
inc
jb
mov
sahf
and
cmp
sbb
cmpb
push
sub
sbb
bound
xor
sbb
and
mov
notl
sbb
test
insl
sub
ret
outsl
fdivrs
sbb
push
insb
data16
jl
mov
xchg
outsb
pushf
push
ljmp
adc
fdiv
adcb
cmp
test
iret
movsb
add
mov
sahf
fiadds
orl
adc
adc
mov
in
sub
or
inc
xchg
je
fdivl
sbb
add
inc
sbb
push
cld
iret
lock
inc
imul
pop
mov
shr
sbb
jns
xchg
popa
test
sbb
aad
sbb
cmp
sbb
push
in
dec
xchg
push
adc
lods
mov
xchg
repnz
outsb
ret
rcrl
shl
clc
xor
mov
outsl
int3
inc
icebp
adc
push
jl
xlat
xchg
push
mov
jmp
loope
inc
xchg
je
adc
es
push
pop
cs
mov
fs
pop
std
jns
addr16
inc
jle
jecxz
loope
repnz
pop
imul
cmp
sub
aas
jl
fidivl
scas
xor
mov
flds
lea
es
add
outsl
sbb
or
adc
sbb
out
mov
add
call
inc
add
sbb
and
push
mov
adc
sbb
add
mov
loope
fimuls
push
inc
das
cmp
fstl
mov
mov
adc
aad
or
xor
sbb
xchg
aad
push
fwait
sbb
fcmovb
in
xor
mov
push
jns
mov
xchg
sbb
or
adc
neg
inc
inc
sbb
test
mov
test
jmp
lret
aas
xor
xchg
push
fisubl
inc
sbb
add
sbb
test
in
xor
sbb
cli
or
cwtl
jbe
jmp
pushf
fists
or
sbb
icebp
lcall
addr16
cmp
jmp
push
sbb
aad
mov
ds
scas
fsubrs
push
and
dec
sub
and
sbb
dec
xor
clc
arpl
sbb
or
add
mov
pop
xchg
sbb
pop
jle
movsl
dec
push
sbb
xor
ja
mov
in
loope
lods
scas
xlat
and
inc
xchg
dec
fisubs
call
or
adc
jae
pop
popf
rclb
push
adc
adc
lock
mov
and
divl
sbb
loope
sbb
mov
aam
sbb
cmp
xchg
sbb
cmpsb
jns
mov
js
cmc
stos
int3
fcoms
stc
popa
or
jbe
pop
mov
sbb
loopne
mov
int3
dec
ja
aaa
inc
mov
add
sub
push
aam
mov
bound
in
fisubrs
or
js
sbb
jnp
mov
call
sub
notl
loop
sub
xor
sbb
sub
clc
xor
outsb
pop
dec
movsb
sbb
ret
shl
dec
sbb
xor
repnz
daa
xchg
pop
sbb
pop
inc
jle
sahf
stos
or
icebp
add
jns
or
xor
lods
test
push
inc
xor
out
sub
cltd
add
jl
xchg
loop
adc
push
inc
xchg
jne
sarl
test
mov
xor
pop
and
loopne
mov
sbb
dec
inc
push
data16
lds
add
inc
or
cmp
push
jmp
std
adc
mov
cld
push
lds
adc
pop
stos
adc
jns
push
stos
mov
sbb
add
pop
jg
sbb
into
insl
pop
sbb
cmp
movsl
mov
sbb
adc
pop
sub
sbb
pop
add
out
inc
push
cli
comiss
jge
sbb
dec
stos
addb
popf
mov
adc
pop
push
push
sti
push
mov
and
adc
push
and
enter
lods
adc
xor
fmul
adc
pusha
lcall
cwtl
andl
in
sbbb
add
mov
inc
shrb
push
and
aam
lods
loope,pn
in
loop
xchg
sbb
out
popa
test
iret
xor
fdivl
sbb
int3
sahf
sbb
dec
sbb
xchg
inc
loopne
mov
pop
sarb
sbb
xchg
sbb
ja
sub
push
xchg
add
mov
sbb
adc
inc
mov
sbb
sbb
lahf
xor
in
inc
hlt
popa
cmp
fistpll
lods
imul
arpl
test
stc
jle
enter
call
or
rcrb
jno
call
cwtl
mov
push
jae
and
inc
inc
push
call
fstpt
fmuls
sbb
dec
cmp
sbb
push
cmp
push
sbb
addb
bnd
cs
int3
push
fwait
sbb
std
dec
pushf
mov
adc
loope
hlt
int
mov
pop
sub
loope
push
ret
cmp
dec
mov
push
sbb
xchg
xor
repz
sbb
andl
mov
inc
add
sbb
pop
scas
das
out
into
cwtl
cmp
jg
andl
cmp
imul
in
ljmp
sub
mov
push
pop
jle
repnz
out
jns
xchg
sbb
adc
sub
out
in
jbe
lret
add
mov
fwait
shll
inc
cmp
cmc
lea
adc
sub
pop
clc
test
or
rorb
repz
leave
mov
cwtl
xor
jbe
scas
or
loope
cmpsl
jnp
ds
sbb
test
inc
cmp
xchg
pop
jmp
inc
std
negb
movsl
rcrb
jo
jecxz
inc
adc
loop
xchg
push
jbe
pop
mov
xchg
sbb
xchg
jnp
iret
sbb
inc
sbb
dec
cmp
jecxz
daa
enter
cld
xchg
cs
out
push
xchg
mov
push
dec
push
mov
push
bound
sbb
fiadds
pop
clc
pop
stc
push
aam
ja
sbb
push
push
cmp
loopne
bound
lret
jae
in
outsl
add
inc
lcall
rcrl
and
insl
xchg
cmp
stc
inc
fisttpl
sbb
mov
cmp
sbb
and
sbb
adc
arpl
fcmovb
and
mov
xchg
push
cli
fstpt
jbe
call
in
cmp
clc
addr16
jae
mov
cld
cmc
sbb
daa
pop
push
push
and
data16
lahf
mov
loope
sbb
mov
int3
les
cmp
test
mov
popf
adc
sbb
mov
pop
cmpsb
sbb
lds
js
insl
sbb
mov
mov
int
in
xchg
dec
sub
mov
mov
sbb
add
popa
adc
jle
sbb
push
push
xchg
sub
scas
push
ret
mov
lea
xor
imul
mov
mov
mov
in
cmpb
adc
cmpsl
push
arpl
xchg
push
adc
or
sbb
xchg
mov
out
and
xchg
push
mov
lret
repz
test
jb
insl
sahf
jne
shlb
sbb
in
adc
push
sub
fwait
push
cli
outsb
sbb
es
aaa
out
dec
rcrb
out
mov
add
adc
les
imul
adc
loopne
cmp
xor
repnz
xor
das
sbb
xchg
stos
xchg
popf
cltd
and
mov
cmp
adc
push
cmp
cmc
repz
sbb
out
out
vmovq
cwtl
das
mov
xor
sbb
cmpsb
jae
jb
sbb
jle
add
dec
sub
stc
adc
loope
jecxz
sbb
and
adc
ss
inc
mov
xlat
leave
rorb
inc
pop
lahf
add
add
ficoml
outsl
clc
dec
xchg
sbb
push
hlt
in
ret
push
jg
mov
lods
loop
icebp
mov
jo
popa
xor
push
pop
loope
mov
lahf
ss
aam
sahf
xor
sbbl
xor
loopne
mov
inc
lock
cs
in
ret
jle
push
lahf
jne
ficompl
pop
dec
xor
adc
jge
mov
icebp
sbb
push
add
push
xor
mov
mov
sbb
xchg
or
pop
popa
cltd
xchg
sti
push
adc
push
mov
mov
cld
addb
scas
stc
push
loope
push
push
jns
and
mov
sbb
xchg
jb
and
cmpsb
jns
mov
push
xor
xchg
inc
into
pop
sub
adc
push
sbb
inc
cli
mov
and
fiaddl
test
shlb
out
fstp
notb
test
inc
sub
jecxz
sbb
mov
aaa
and
mov
mov
pop
jbe
push
scas
sbb
xchg
std
add
xor
push
adc
or
fisubrs
roll
push
cmp
jmp
pop
pop
xchg
dec
shlb
sbb
scas
sub
cwtl
push
push
mov
or
rol
and
pop
sbb
mov
ficomps
loopne
into
jno
jbe
sbb
out
loope
add
push
dec
sbb
into
scas
mov
les
mov
sbb
dec
decb
and
rcr
dec
add
sbb
sbb
push
imul
mov
sbb
cli
repnz
aaa
cs
mov
mov
icebp
repz
iret
jbe
pushf
cmp
subb
popa
insl
jnp
xor
lahf
lret
adc
xor
sbb
mov
jmp
icebp
idiv
sarb
mov
xor
out
sbb
push
aas
gs
add
sarl
and
ficompl
mov
push
inc
sbb
mov
jle
sub
adc
les
fs
loope
xchg
lds
mov
into
insb
lods
push
push
push
sbb
jae
jb
loop
mov
mov
mov
pop
add
mov
mov
loope
push
push
popf
jmp
add
xor
or
sub
adc
in
cmp
sbb
sbb
rcr
in
stc
enter
and
mov
xorb
adc
dec
and
pop
xor
lock
push
and
fstps
aad
mov
rcrl
push
pop
or
and
ljmp
or
cmp
loope
addr16
xchg
mov
stos
popa
cmc
cmp
xchg
push
pop
lods
cltd
adc
arpl
mov
loope
dec
mov
jge
adc
sub
pop
lds
ret
lahf
push
fwait
xchg
add
dec
decl
cmp
sbb
jb
cmp
movsl
fwait
ret
ljmp
js
adc
push
lock
mov
out
loope
sub
sub
xor
daa
sub
dec
ret
mov
adc
pop
sbb
push
xor
cmp
stos
jns
fidivrs
lea
repnz
cwtl
gs
sbb
lret
stc
pop
sbb
in
stos
push
mov
xchg
cltd
jle
mov
mov
lea
leave
sbb
push
xchg
pop
inc
push
cmp
add
cmp
loopne
xchg
loop
pop
pop
cs
sbb
sub
imul
pop
cli
mov
out
mov
adc
stos
xchg
mov
enter
fnstcw
sbb
cld
sbb
outsl
sub
xlat
sbb
cmp
inc
gs
fdivp
fdiv
push
pop
sbb
pop
add
stos
add
adc
pop
sbb
into
jle
sbb
cmp
xor
inc
lds
stos
out
sub
inc
test
fcos
xchg
out
xchg
pop
bndldx
movsl
mov
fistpl
pop
and
xorb
sub
pop
adc
in
stos
sar
in
pop
or
dec
adc
xchg
mov
sub
jle
leave
loopne
sbb
pusha
scas
mov
pop
mov
sbb
inc
fstpl
push
pop
mov
hlt
nop
movsl
sbb
push
mov
jecxz
push
lods
sti
cmp
xor
xchg
pop
test
sbb
lock
icebp
dec
sahf
dec
mov
mov
loopne
jns
dec
rcrl
loop
sbb
jmp
ja
je
fcompl
push
xchg
pushf
xor
jnp
add
adc
push
pop
iret
xor
inc
sbb
adc
sbb
aas
xchg
scas
gs
lret
sarb
fstpl
dec
arpl
out
addb
mov
jnp
sbb
mov
lods
fisubrl
xchg
sbb
mov
sbb
rcrb
cmp
lahf
sbb
inc
sub
mov
adc
sbb
xchg
test
sbb
jl
jo
adc
lods
popa
adc
sbb
and
inc
sbb
and
pop
sbb
push
imul
sbb
push
aas
push
dec
or
xor
scas
dec
push
jne
adc
xor
jp
push
scas
inc
add
pop
data16
xor
jmp
adc
sbb
fidivrs
add
xchg
in
ljmp
xor
mov
out
fstps
sbb
inc
pop
jns
pop
pusha
ficomps
push
pop
mov
and
das
sbb
mov
pushf
test
adc
pop
mov
sub
out
enter
fildll
fldcw
xor
out
adc
sbb
fmull
sbb
and
sbb
xchg
call
cmc
mov
test
mov
cwtl
lods
xor
in
jb
inc
inc
ljmp
shrb
sbb
mov
adc
stc
cli
roll
sbb
and
lea
rcrl
test
daa
xchg
pop
mov
mov
push
xchg
and
hlt
lds
loope
insb
cmpsl
xchg
ljmp
mov
bound
jmp
loope
in
clc
outsb
xchg
negb
sbb
add
jl
loope
xchg
fistpll
push
sbb
movsl
imul
sbb
xor
into
cmp
sbb
xlat
lods
push
sbb
cltd
mov
call
or
sub
sarb
and
jle
cli
test
sbb
push
lock
pop
ljmp
lea
fistpl
push
rcr
in
sbb
push
aad
sbb
cmp
dec
add
mov
ss
adc
ret
pop
sbb
mov
push
mov
xchg
cmp
push
jge
xchg
mov
sbb
lret
imul
andl
dec
push
sbb
ss
icebp
mov
in
jnp
or
dec
jns,pt
shll
imulb
xchg
stos
dec
adc
xchg
sbb
mov
je
inc
dec
push
lcall
adc
sbb
mov
and
bound
cmp
aam
fs
jl
sbb
repnz
lcall
pop
mov
sbb
xchg
push
movsl
jle
int3
sbb
cmpsl
cmp
mov
xor
push
icebp
jp
mov
xor
out
push
and
mov
out
cli
loop
jne
push
xor
out
mov
sbb
or
sub
push
enter
test
push
call
mov
jge
test
and
push
icebp
add
pop
outsl
and
push
insb
cmp
xchg
cmp
aas
push
sbb
mov
sbb
add
and
cltd
xor
dec
jg
daa
inc
movsb
sbb
into
testb
cmp
mov
stc
popf
mov
out
shlb
popa
jle
jg
scas
push
loope
out
dec
add
cltd
xor
or
lods
fistpl
jns
pop
sbb
sub
jbe
adc
fstps
aaa
sti
test
andb
daa
sub
dec
icebp
push
mov
mov
call
punpcklbw
jmp
hlt
ds
sbb
cmp
fmuls
sbb
push
push
or
loope
or
sub
push
bound
push
or
adc
loope
js
add
add
sbb
ds
rorl
pop
push
mov
lret
cmp
xor
imul
sbb
xchg
mov
sbbb
or
sbb
lock
sub
lea
ret
mov
sbb
rcrl
adc
mov
push
aas
sbb
push
popf
arpl
sbb
jg
gs
push
cmp
xlat
mov
lods
push
mov
xchg
push
sbb
pushf
mov
rclb
mov
lahf
shl
popa
push
inc
fwait
sbb
fsubrs
or
insl
imul
xchg
sub
mov
mov
adc
test
loopne
xor
insl
push
inc
nop
push
mov
push
mov
xor
adc
cmp
loope
jnp
fs
xchg
dec
cwtl
push
or
daa
or
xchg
pushf
filds
xor
push
scas
shlb
mov
adc
mov
shl
int
cmpsb
xor
nop
sbb
push
inc
stos
and
sbb
movsl
aad
les
sbb
mov
out
or
and
aaa
cmpsb
sbb
adc
mov
xchg
sbb
adc
fldl
sbb
jb
mov
das
push
sbb
adc
imul
jae
sbb
xor
fmul
sub
xchg
pop
inc
inc
in
sbb
jge
or
loope
scas
adc
jmp
adc
shll
lret
imull
sbb
pop
xchg
and
inc
and
add
rorb
or
jecxz
sbb
repz
and
fistps
hlt
xchg
loope
outsl
sbb
mov
call
sbb
push
xor
sbb
push
jo
movsb
lds
mov
pop
push
clc
sbb
cmp
jns
and
mov
dec
pop
sub
mov
add
jne
jmp
pop
jl
sbb
aad
out
jae
lret
adc
push
or
push
aaa
pop
lcall
or
dec
sbb
dec
xlat
les
mov
call
cmp
divb
shlb
xchg
in
sbb
stc
rcrl
jne
sub
lock
and
cmp
aam
mov
subb
xchg
ja
ret
call
lea
fs
sbb
pusha
out
lods
cmp
sbb
testl
mov
jbe
mov
xchg
push
stc
sarb
cmp
nop
mov
sbb
push
fwait
mov
in
in
xchg
adc
push
push
popa
bnd
sbb
cmp
in
push
and
js
scas
sbb
xorl
loope
sub
push
adc
sub
leave
sbb
adc
test
push
outsb
aas
test
sbb
dec
sbb
xor
sbb
mov
xor
cwtl
out
es
and
jle
cmpsb
test
cmpsl
adc
sub
push
sbb
pushf
jmp
sbb
call
loope
lahf
iret
xor
mov
sbb
mov
sahf
ficompl
adc
test
inc
sub
sbb
fcoml
inc
jp
cli
mov
stos
inc
es
cmc
pop
dec
push
loope
adc
push
ja
gs
in
sbb
sbb
and
sbb
sbb
fsubs
mov
hlt
sbb
sub
adc
lret
jle
add
js
stos
scas
sbb
xchg
xor
jg
mov
sbb
into
push
push
cmp
fnstsw
mov
or
mov
xchg
subl
iret
cmovge
mov
xchg
sbb
repnz
rol
adc
push
and
jl
add
and
xor
xor
sbb
mov
sbb
pop
sahf
pop
push
inc
and
cmpsb
sbb
sbb
sahf
hlt
out
adc
push
inc
push
hlt
sbb
iret
mov
push
rcrl
xchg
jo
es
sbb
pop
add
cmp
cmpsb
push
bound
arpl
pop
fsub
dec
sbb
add
cmpsl
aam
add
sbb
ja
popa
and
out
cmp
mov
xor
xchg
sub
inc
cmp
add
negb
dec
or
cmp
xchg
out
pop
mov
adc
aas
iret
mov
arpl
fistpl
adcb
jo
push
pop
dec
outsb
push
icebp
xchg
out
movsb
in
push
jecxz
xchg
std
or
mov
add
dec
jmp
xor
loope
in
fcomps
lods
jno
mov
inc
test
add
lahf
add
int3
frstor
mov
cmp
and
sbb
std
insb
mov
js
mov
adc
dec
mov
xchg
sbb
or
ret
fisubrs
pop
push
xchg
xchg
sbb
push
les
popf
ljmp
adc
pop
or
push
add
jge
mov
xchg
add
jl
aam
xchg
and
sbb
fnstsw
pop
iret
sbb
adc
mov
push
inc
aad
mov
loope
out
out
sbb
sbb
pop
push
mov
add
and
loope
adc
and
adc
sbb
mov
cmp
cmpsl
enter
imul
mov
xor
mov
pop
xchg
and
pop
sbb
cwtl
enter
cltd
scas
sbb
or
xchg
xor
jnp
mov
shrb
ret
cmp
sbb
mov
jmp
push
mov
mov
jecxz
or
or
pushf
jbe
sub
repnz
cli
mov
mov
xchg
or
sbb
bound
dec
lret
cmp
adc
mov
add
inc
insb
adc
aaa
push
loope
stos
add
adc
outsb
mov
in
clc
mov
jnp
add
mov
sub
movsl
test
movsb
enter
xchg
mov
test
scas
sbb
sbb
addr16
cltd
shll
or
sbb
pop
shlb
in
and
adc
adc
adcb
sbb
jg
dec
push
mov
in
pop
out
sbb
or
mov
ja
mov
adc
loope
xchg
daa
into
insb
addr16
mov
outsb
dec
mov
clc
pop
ja
pop
cmp
mov
lea
adc
sub
sbb
addr16
test
out
pop
push
pushf
scas
cmc
fwait
adc
and
pop
in
xchg
mov
mov
push
sbb
or
repz
rorl
sbb
jae
js
je
rcrl
lds
sub
movsl
daa
addr16
jne
icebp
dec
xor
mov
mov
adc
or
adc
add
push
cmpsb
pop
sbb
rcl
fs
sbb
lea
xor
mov
paddusw
pop
pop
fistpl
ja
sbb
pop
jle
jge
cmpsl
push
int3
sbb
int
in
xor
outsb
jb
sbb
outsl
cld
inc
cmp
out
inc
sbb
fprem1
repz
mov
andb
loop
push
jae
cwtl
bound
jl
sub
mov
leave
push
push
pop
mov
push
cli
lea
es
pop
mov
mov
mov
stos
mov
rcr
dec
outsl
aaa
sbb
push
sbb
cltd
loop
sbb
test
iret
cmpsl
sbb
mov
push
add
mov
inc
stos
mov
dec
mov
pop
movsb
out
inc
xchg
into
sbb
mov
cmp
inc
adc
xor
or
pop
into
mov
mov
in
out
enter
addr16
sbb
add
pop
pop
subb
repz
fs
lods
and
fwait
ret
xor
insb
adc
mov
pusha
loope
test
xor
adc
mov
adcl
and
lods
pop
mov
push
lret
and
sbb
xlat
jno
sbb
pop
xchg
repz
mov
dec
cmp
mov
loopne
dec
inc
roll
fwait
push
fsub
sbb
leave
add
aas
push
mov
sbb
xchg
hlt
mov
cli
sbb
imul
arpl
repnz
inc
lcall
pop
sbb
jecxz
mov
movsl
cltd
sbb
add
aas
xchg
ds
push
xor
das
repz
mov
insl
mov
push
pop
add
mov
sar
jno
sbb
pop
cmpsb
adc
sbb
out
xor
xor
sbb
outsl
loope
sbb
fs
push
stc
mov
jmp
mov
sbb
jmp
cmpl
xor
ret
sub
repnz
sbb
sub
and
sbb
add
std
add
adc
jmp
push
mov
mov
xor
and
cli
sbb
jnp
out
sub
test
cmpsb
scas
inc
subb
jp
test
jg
shl
jl
cmp
push
stos
nop
fisttps
cmpsb
imul
aad
or
int3
aaa
dec
adc
mov
daa
add
jb
add
add
cmp
xchg
or
inc
sbb
adc
les
insl
mov
ljmp
pop
mov
sbb
or
imul
xchg
iret
leave
test
xor
mov
out
stc
mov
lcall
sbb
pop
scas
es
mov
rclb
js
pop
push
clc
icebp
xor
jmp
sbb
jmp
arpl
rcr
pop
sbb
xchg
xor
push
or
lods
sbb
filds
xchg
aaa
xchg
jge
mov
int
push
xchg
adc
pop
in
sbb
mov
addr16
fcmovnb
rcrl
aaa
insb
push
fwait
add
fistps
loop
shlb
and
clc
pop
rep
pop
sbb
mov
mov
xchg
inc
daa
sub
sbb
testl
xor
negb
mov
in
pop
lock
xlat
adc
and
imul
lea
orb
xchg
jae
inc
cmp
rolb
sbbl
xchg
andb
sub
sbb
scas
repnz
xchg
push
dec
jle
movsl
dec
sarl
dec
mov
xchg
ret
lret
insl
adc
push
test
push
dec
inc
sbb
jno
xchg
mov
ret
sbb
or
rcl
push
cmpsl
and
mulb
add
leave
aaa
fnsave
sbb
dec
xchg
cmp
sbb
mov
in
ja
xchg
jnp
sbb
pop
rcll
lcall
loop
fcomps
icebp
or
sub
push
pop
sbb
aad
mov
adc
jp
arpl
xor
outsb
dec
jle
push
adc
fdivrs
sub
insl
aam
test
add
xchg
xchg
mov
dec
sub
popf
es
adc
dec
rcl
pop
sbb
mov
sbb
fldcw
cmp
and
sar
push
sub
push
jne
fs
imul
icebp
pop
shlb
pop
lahf
call
cmp
es
jne
fs
aad
adc
sbb
fcmovb
ss
push
jge
cmp
imul
cmp
ja
xchg
pop
push
push
mov
je
stos
mov
fcompl
jg
push
aam
ret
into
nop
xchg
add
in
mov
imul
sbb
push
call
mov
sbb
dec
subps
sub
rcrb
lahf
jne
sub
sbb
jo
add
adc
mov
in
and
push
lods
dec
test
std
adc
mov
sahf
pusha
into
in
dec
jb
sub
data16
in
xor
aas
negl
int
fstl
ficoms
sbb
mov
sub
ror
repz
sahf
xor
in
pop
xchg
repnz
push
xor
adc
or
pop
mov
fdivl
xor
sub
pop
mov
lea
loope
and
daa
mov
and
fstps
mov
popa
iret
lea
pop
push
imul
pop
and
xor
subb
sbb
rorl
nop
loope
lods
sub
add
sti
push
sarb
inc
inc
lahf
mov
ret
loope
test
fsubs
adc
inc
jmp
add
add
je
pop
sbb
xor
addl
aaa
mov
mov
sbb
sti
mov
sbb
and
cli
mov
jne
js
jbe
loope
insl
loopne
push
dec
adc
xor
xor
popa
sbb
adcl
jp
mov
sbb
scas
pop
dec
and
adc
ret
shlb
rorl
sbb
nop
sbb
push
inc
add
cltd
mov
sbb
test
lcall
mov
fimuls
fbld
das
pop
sbb
sub
jnp
and
lods
xchg
lret
mov
int
xchg
subl
sbb
sti
and
cmp
sbb
rcll
mov
mov
and
pop
pop
dec
adc
mov
xchg
scas
cmp
mov
jnp
push
adc
sub
xchg
lret
or
xchg
or
or
jmp
cmp
pop
jp
mov
jecxz
cmpsb
inc
or
sbb
ss
in
mov
sbb
pop
xchg
in
fisubs
imul
movsl
jmp
loope
jb
sbb
aam
dec
rolb
lock
adc
in
push
inc
jb
lds
mov
subl
push
sbb
cmp
jmp
orl
or
sbb
mov
xchg
jl
sub
addb
sbb
pop
add
add
out
sbb
or
dec
ljmp
adc
jb
xor
jmp
rcrb
cmpsl
mov
adc
lock
dec
and
sbb
add
pop
sbb
icebp
ret
cmp
sbb
jmp
push
jbe
ljmp
push
inc
mov
jno
out
cmc
cmp
mov
sbb
fimuls
jo
mov
adc
aad
rcl
in
test
sbb
mov
imull
daa
aaa
loope
cmp
dec
repz
in
adc
or
add
jbe
test
repnz
sarl
inc
cltd
ret
add
test
mov
mov
sbb
fstpl
sti
data16
dec
jnp
popf
mov
adc
rol
fildl
add
mov
movsb
cmp
jb
dec
sbb
int3
pusha
push
mov
dec
loop
pop
sub
stos
fsts
iret
sbb
and
enter
stc
bound
sbb
adc
out
push
call
pop
lcall
xchg
leave
sbb
cmpsl
xor
jne
mov
aas
or
xlat
sbb
pop
mov
pop
cli
sbb
sbb
aad
add
xor
adc
or
mov
xlat
sbb
inc
mov
push
or
gs
or
je
sbb
das
lock
and
push
mov
stos
mov
jg
cltd
inc
jmp
xor
mov
movsb
mov
ja
sbb
cmpb
xchg
repz
sub
push
int
sbb
mov
pop
sarb
rorl
scas
ret
psrlq
lcall
fstpt
xorb
sub
out
adc
rorb
sbb
cmpsb
dec
sbb
std
call
push
inc
inc
enter
test
pusha
push
adc
pop
mov
ficomps
ds
add
scas
adc
pop
hlt
rolb
jae
sub
stc
xor
shrb
xchg
jo
pushf
test
iret
call
xor
hlt
dec
scas
fwait
xchg
loopne
ffreep
jbe
sbb
ljmp
sbb
mov
xchg
adc
mov
adc
xor
lahf
cld
push
pop
sub
mov
stc
inc
scas
or
mov
sbb
test
popa
sbb
cmp
push
mov
jo
sbb
xor
jle
sbbb
jae
stc
add
mov
add
fidivl
sub
push
lods
repz
xchg
imul
push
cmpsb
sahf
out
sarb
mov
aad
adc
inc
cmp
push
sbb
fcomps
xor
mov
test
stos
or
fstpl
or
test
dec
push
sbb
sbb
movsl
xchg
push
and
mov
xchg
je
sbb
pop
xchg
pop
test
or
rol
call
or
cmp
andl
lret
pop
mov
xorl
push
out
cwtl
repnz
sbb
jp
lret
inc
sbb
pop
roll
jb
dec
stos
xor
dec
mov
ljmp
rcr
mov
out
xor
insl
jns
pop
jb
ret
mov
xlat
mov
dec
test
pop
cld
bound
or
je
popf
xchg
xchg
in
sbb
enter
imul
pop
mov
adc
cmp
adc
imulb
push
pop
int
push
or
nop
cmp
scas
cmp
popf
xchg
mov
ljmp
lret
cmp
in
repnz
xchg
sbb
xchg
es
sbb
call
mov
jecxz
or
sbb
je
into
push
xor
test
and
sbb
movsl
or
icebp
sbb
inc
bound
push
popf
rcll
lds
out
outsb
insb
sbb
popa
push
cltd
pop
push
cmp
jb
leave
push
push
test
test
inc
add
add
cltd
mov
jbe
adc
ljmp
mov
xor
xor
mov
adc
cs
rolb
cmp
pop
loope
or
addr16
sbb
rcl
lret
jle
xchg
add
adc
push
repz
stos
sbb
cmp
loope
and
pop
call
xor
pop
sbb
ret
push
mov
adc
mov
xorl
dec
mov
mov
sbb
lahf
pop
pop
sbb
or
sahf
inc
mov
xchg
stc
aad
xchg
pop
ficoms
mov
xorb
and
scas
aam
jo
add
scas
in
and
aad
mov
xchg
or
js
ss
shrl
mov
add
icebp
cltd
sbb
xor
fbld
dec
stc
sbb
mov
outsl
sbb
and
adc
loop
sub
cld
les
fs
lds
out
xor
repnz
or
mov
add
cmp
or
jle
pop
shlb
int
sbb
pushf
pop
sbb
mov
jl
adc
push
or
jle
in
mov
sbb
jae
cmp
push
jne
sbb
clc
ss
sbb
sub
and
in
sbb
sub
aam
mulb
repnz
or
adc
sbb
pop
outsl
push
inc
and
push
cmp
mov
inc
sbb
test
pop
in
sbb
add
mulb
cltd
add
scas
jg
mov
rclb
mov
rclb
popf
cli
out
inc
or
push
out
sub
mov
jnp
xchg
roll
push
fmull
imul
inc
jb
in
xlat
fstpt
mov
mov
fstpl
sti
fwait
test
jle
dec
xchg
das
jbe
adc
adc
sbb
out
leave
pop
iret
xchg
pusha
ficoml
xor
pop
cmpsb
pushf
arpl
jb
ljmp
dec
jmp
xor
mov
push
addr16
or
cmp
lods
sub
xchg
jl
push
sub
jnp
test
sti
arpl
iret
jge
js
dec
sbb
inc
dec
add
insl
out
rorl
in
push
in
sbb
imul
rorb
data16
jnp
add
xchg
mov
sub
push
pop
cmp
cld
lds
sbb
ja
mov
sbb
and
sbb
push
mov
adc
loope
mov
xchg
stc
mov
jge
sbb
lret
push
lods
add
pop
imul
cmpsb
fisttpl
rcrb
icebp
xor
or
fcomps
xchg
mov
loope
sti
into
fmuls
xor
sbbl
ljmp
outsb
sbb
or
les
mov
clc
push
fdivrl
sbb
mov
and
inc
cmp
lahf
mov
in
inc
sbb
sbb
lods
ret
jo
fisubrl
add
iret
xor
jnp
push
cmpsb
push
subb
sbb
add
and
jle
in
jp
xchg
clc
mov
rcrl
adc
nop
xor
inc
rcr
lea
jo
adc
sbbb
push
mov
dec
sbb
add
push
jns
mov
sbb
mov
push
inc
adc
mov
mov
dec
fistps
pop
inc
mov
and
enter
imul
xor
push
push
lahf
mov
outsl
sbb
scas
xchg
sbb
icebp
add
push
dec
mov
hlt
jnp
push
pop
inc
sub
sbb
lret
cmpsb
xor
xchg
popf
ret
rolb
xorb
jmp
jge
rcrb
fwait
add
mov
or
sbb
pop
dec
test
xchg
andl
pushl
aas
sbb
push
jmp
dec
in
imul
test
fmuls
movsl
lds
sarl
loop
lret
sbb
xchg
bound
sbb
adc
mov
adc
add
xor
mov
jl
lcall
lret
mov
repnz
cwtl
adc
xor
in
gs
xlat
popf
and
mov
cmp
orl
xchg
mov
das
out
cli
inc
and
mov
adc
lock
cmp
sbb
xchg
mov
xor
sbb
or
adc
push
add
inc
push
lea
xchg
inc
out
push
loope
daa
xchg
cmc
xchg
clc
sbb
xor
mov
sbb
dec
mov
sbb
or
mov
aaa
aas
dec
pop
fwait
jecxz
fcoml
dec
enter
and
push
aam
loope
daa
mov
jns
hlt
loope
or
add
out
mov
aad
leave
mov
mov
mov
rcrl
mov
cmp
mov
adc
sbb
arpl
add
cli
cmp
fs
xchg
sub
jne
lea
adcb
jp
pop
and
jae
sbb
xchg
data16
jecxz
out
mov
sbb
sbb
pop
sub
int
je
xor
sbb
push
inc
rcrb
inc
cltd
out
bound
xchg
fsts
jae
dec
loop
add
xchg
push
mov
aaa
xchg
test
inc
xchg
outsl
sbb
out
in
shlb
or
sbb
arpl
dec
sbb
cmp
adc
lds
jnp
push
sbb
stos
push
push
pop
icebp
loope
repnz
sbb
int3
push
nop
mov
xchg
in
jle
int
pop
and
add
aaa
mov
sbb
in
cltd
add
and
arpl
push
mov
iret
inc
aam
pop
jnp
cmp
inc
data16
pusha
out
sub
jae
pop
sbb
and
loop
jns
jb
ja
fisttpl
inc
sbb
push
je
adc
add
sti
push
xchg
xchg
sbb
mov
bound
and
movsl
adc
or
shll
xor
rcrb
xchg
fnstcw
pushf
cmpsl
mov
mov
in
ss
xchg
sub
mov
xchg
enter
lods
and
pusha
sbb
cld
adc
aam
icebp
sbb
stc
loope
incl
sahf
stos
das
jecxz
jnp
xchg
loopne
jmp
shll
mov
jb
mov
xchg
or
adc
sbb
mov
stos
sub
ficoml
aas
push
sub
sbb
pusha
mov
mov
test
or
push
aad
mov
arpl
inc
adc
push
out
sbb
push
mul
sbb
ss
sbb
inc
jno
and
cmpsb
mov
dec
dec
imul
test
sbb
inc
add
dec
stc
loope
insb
fcoms
push
sub
push
jmp
leave
mov
repnz
adc
stos
add
inc
adc
std
adc
mov
mov
ljmp
clc
ret
fcomps
sti
hlt
push
dec
cs
pusha
sbb
xor
mov
adc
clc
push
cmpl
daa
adc
addb
sbb
iret
scas
push
sbb
out
ja
out
mov
rcrl
xchg
xchg
sbb
nop
cld
addb
dec
ds
pop
lock
sub
pop
add
jns
pop
push
ficoms
sbb
imul
sbb
adc
pop
ja
dec
push
cs
sbb
sbb
lods
adc
imul
pop
shrl
mov
cmp
mov
inc
pop
pop
pop
pop
sbb
or
mov
adc
jle
mov
daa
lret
xor
xchg
shlb
pop
sbb
mov
in
sbb
pushf
mov
jecxz
out
or
jl
rcr
orb
outsl
adc
and
add
inc
sbb
add
pushl
sti
adc
mov
xchg
fcompl
mov
cli
rcl
in
adc
sbb
bound
cwtl
jbe
clc
testl
mov
loope
xchg
jecxz
addr16
call
cmpsl
lret
dec
sbb
aas
popf
lcall
mov
xlat
mov
std
push
out
sub
popf
or
lea
ret
sbb
sbb
dec
ret
sub
adc
lock
mov
lcall
dec
pop
inc
and
ret
hlt
iret
insl
loopne
enter
je
cmp
sbb
sbb
push
sbb
cs
aas
push
mov
out
pop
add
push
cmpsb
in
push
mov
xchg
inc
sbb
jge
pop
push
mov
int3
xchg
or
aaa
dec
pop
dec
cmp
jb
sbb
pop
mov
in
sbb
sbb
inc
cmp
add
fmull
div
sub
into
push
movsb
ret
imul
aas
add
adc
mov
and
add
mov
push
jno
inc
jp
cmpsl
mov
fs
add
sbb
jecxz
divl
pop
bound
jmp
stos
cld
mov
sbb
sbb
outsb
fisubrs
sbb
and
sbb
jp
cld
fxch
sbb
test
das
mov
adc
jne
mov
xchg
adc
lods
sub
bound
loopne
ficomps
es
mov
sbb
adc
out
xlat
sbb
imull
and
push
ja
or
imul
cmp
pop
jno
inc
popf
add
js
stos
fsubrl
mov
cltd
add
pop
fsubl
jae
mov
dec
and
lea
sbb
pop
test
cmp
xor
andl
sbb
adc
push
xchg
js
jp
adc
inc
sbb
imul
adc
rcll
sti
sub
jo
and
and
sbb
in
push
dec
adc
sbb
leave
sub
xor
sbb
iret
pop
repnz
movsb
ds
bnd
data16
ss
push
adc
hlt
fstpl
dec
mov
or
inc
leave
lods
sbb
and
jo
pop
shrl
mov
rcrb
dec
fldenv
loopne
out
mov
fstl
add
ja
sbb
in
pop
dec
add
mov
cmp
mov
hlt
dec
xchg
adc
add
cld
push
scas
push
sub
lea
sub
sbb
xor
mov
sbb
push
or
sbb
aas
jo
push
arpl
js
sub
add
outsb
adc
lods
sbb
mov
in
xor
pop
push
dec
or
rcl
inc
js
cmp
xor
out
inc
fs
loope
outsb
mov
fcomps
lahf
stc
loope
push
push
push
add
push
fidivs
stos
neg
push
repz
test
mov
push
pop
push
sub
loope
sbb
in
inc
sbb
mov
rcll
sbb
push
adcb
add
out
mov
cmpl
fwait
jbe
push
adc
sbb
sbb
inc
in
sbb
lods
mov
jmp
adc
inc
js
add
jbe
aad
mov
adc
out
divb
sbb
add
jbe
das
insb
sbb
fisubrs
rclb
jo
in
adc
sbb
sar
inc
shll
inc
and
dec
dec
std
int
mov
sbbb
enter
imul
cmp
xchg
xor
lea
fistps
repz
jae
pop
cwtl
xlat
iret
sbb
aaa
fcompp
scas
pop
pop
outsb
adc
xor
nop
cmpsl
push
xchg
or
negb
xchg
xor
and
jno
jmp
and
mov
jecxz
leavew
or
jg
xchg
jbe
nop
xor
addr16
xor
and
stos
sbb
in
sbbb
add
push
daa
shll
dec
cli
inc
out
mov
int3
jb
push
and
lds
sbb
pop
push
adc
or
enter
sahf
cmc
push
cmp
mov
and
addb
sbb
xchg
adc
cwtl
movsl
push
push
lret
enter
xor
repz
pop
xor
sbb
jne
pop
xlat
in
xor
mov
or
dec
sbb
insl
and
lcall
popa
sbb
ret
cmp
notb
lock
jbe
clc
les
add
xor
adcb
add
out
mov
xchg
cmp
inc
out
addr16
pop
mov
lahf
imul
pop
and
xchg
fstps
mov
jge
jae
movsb
data16
mov
adc
adc
mov
xchg
pushf
jbe
les
xchg
sbb
and
mov
sbb
in
mov
in
mov
pop
scas
shll
fcom
push
mov
hlt
sub
mov
sbb
icebp
cld
or
test
outsl
mov
cmp
inc
jge
sbb
je
push
xchg
xor
sbb
std
pop
repz
lods
repnz
fadds
add
stos
cmc
and
jle
pushf
aas
cmpsl
jnp
out
dec
int
add
xor
movsb
mov
inc
cmpsl
out
out
jb
in
out
xchg
sbb
adc
aad
lds
jne
jle
outsl
fcmovb
lahf
inc
test
fldcw
mov
jbe
mov
push
lods
aam
cmp
sbb
es
dec
sbb
mov
push
jle
loope
int
outsl
arpl
cmpb
jle
xor
notl
ficomps
and
aaa
add
or
cltd
sbb
rcll
adc
into
xor
add
inc
adc
out
adc
int
mov
jbe
jle
dec
inc
push
psubw
hlt
sbb
popf
sahf
pop
adcb
push
mov
xchg
pop
and
out
jl
push
rorl
sbb
in
mov
add
jb
rcll
inc
push
sbb
into
adc
sub
lods
cmp
and
sbb
lock
dec
cs
or
xchg
imul
adc
sahf
push
jb
jecxz
call
ss
in
les
jl,pt
dec
inc
ret
loopne
jne
dec
shl
xchg
mov
in
lcall
ja
cmp
sbb
xchg
mov
test
and
adc
inc
rcll
mov
sbb
mov
ja
in
pop
xor
mov
inc
aas
mov
add
stc
mov
dec
ret
out
push
pop
sbb
sub
sbb
gs
or
jnp
orb
xor
sub
push
aam
cmp
scas
mov
jmp
jb
adc
je
push
mov
cs
or
xchg
fwait
js
or
mov
xor
sbb
lods
sbb
test
jp
jo
mov
or
mov
push
adc
add
popa
mov
aad
imul
jne
cwtl
scas
jb
xor
in
fnstsw
addr16
out
and
shrl
scas
cmp
xchg
lods
nop
sbb
inc
out
push
popf
ljmp
ficompl
adc
clc
inc
push
add
sbb
mov
in
jb
shlb
rcrl
ja
pop
adc
add
rolb
add
daa
movsb
jmp
sbb
mov
push
mov
enter
movsb
imul
in
pop
mov
jecxz
jbe
addr16
sbb
xchg
push
mov
movsl
or
xor
push
jge
xor
sbb
jnp
stc
stos
test
and
int
jbe
xor
gs
icebp
xchg
add
leave
xchg
bound
jecxz
dec
fimull
int
sbb
mov
test
push
sbb
sbb
pop
inc
sbb
into
xor
mov
mov
xchg
dec
push
mov
sbb
insb
icebp
popf
and
sbb
xchg
andl
mov
adc
add
mov
push
outsb
lods
jl
loopne
adc
pop
sbb
lcall
popl
rorb
cmp
mov
cld
adcl
jae
inc
or
shl
int3
lock
cmp
scas
adc
add
sub
and
test
sub
mov
and
fnstcw
lock
cld
ljmp
cmp
in
inc
sub
cmc
mov
js
pop
jnp
cwtl
or
or
sub
les
jp
lcall
mov
stos
in
movsb
or
daa
xor
adc
add
pop
sbb
rcl
fucomip
mov
in
movsl
inc
or
js
fnclex
ror
les
mov
and
sub
pop
rclb
push
pop
sub
sbb
dec
adc
test
adc
subb
push
daa
push
int
xchg
cmp
xor
jns
lea
push
imul
loop
sbb
pop
and
jo
mov
jle
jne
jmp
int
sbb
xchg
xor
xor
pushf
and
sbb
push
pop
shr
inc
fdivr
fnstcw
push
push
loop
xchg
or
rcll
aad
push
sub
sbb
fwait
popa
mov
test
mov
cli
repz
es
cmp
mov
mov
outsl
sbb
les
jno
mov
cmp
imul
pop
or
gs
jg
push
aam
inc
add
jae
stos
out
std
lds
jg
push
xor
mov
lret
insb
stos
xor
inc
loope
popf
adc
inc
into
shll
popf
dec
sbb
ja
test
pop
sbb
jno
sbb
orb
mov
sti
sbb
mov
shll
ja
pop
add
pushf
leave
cld
jmp
pusha
cli
outsl
sbb
ds
mov
mov
hlt
sub
mov
mov
or
sbb
xchg
enter
jo
mov
dec
sahf
iret
test
enter
imul
insb
shll
mov
sbb
and
sub
add
sub
jne
in
subb
inc
int3
jmp
mov
dec
pop
ss
ds
sbb
subl
in
push
push
loope
push
aas
push
jle
arpl
push
sbb
cmpb
push
sbb
scas
xchg
lods
adc
dec
jns
pop
rcll
cmpsb
jg
pusha
shr
xor
and
lahf
push
jge
sbb
scas
out
dec
add
fmuls
pop
mov
jmp
pusha
inc
sbb
je
lcall
test
and
loope
push
jno
push
adc
xlat
sbb
push
fisttps
jne
and
sbb
push
imul
out
in
xor
ljmp
testb
and
shrb
sbb
into
jp
stos
in
sti
mov
sbb
lcall
xchg
inc
inc
call
push
and
adc
mov
out
add
rcrl
dec
sbb
jns
test
fidivrs
dec
mov
mov
push
jl
adc
leave
shll
fldt
mov
sbb
dec
xor
sub
or
call
xor
push
lahf
pop
mov
je
sbb
pushf
pop
and
push
xor
scas
popa
cmp
jnp
sti
movsl
test
mov
mov
xor
mov
fcmovbe
add
rcrb
std
repnz
mov
call
inc
push
and
ds
fildll
adc
and
sbb
sbb
mov
nop
pop
sbb
test
lods
sbb
mov
filds
cmc
mov
cmpsl
lds
sub
push
ret
cmp
pop
popa
mov
xor
cli
and
push
pop
mov
mov
mov
xchg
imul
daa
dec
xchg
stos
movsl
sbb
mov
push
xor
loope
lcall
test
test
mov
mov
sub
push
out
repnz
jae
jo
shl
dec
cmp
andl
sbb
lock
and
out
sbb
xchg
adc
ret
sbb
repnz
push
arpl
cmp
sbb
addr16
lcall
cmc
es
pop
mov
in
and
mov
jbe
push
cmp
sub
int3
and
decb
jl
dec
cwtl
bound
sbb
repz
pop
mov
in
sbb
or
fistpl
movsb
jns
or
mov
push
or
mov
hlt
loope
stos
pop
and
push
ss
dec
jmp
outsb
jns
shlb
adc
jb
sbb
out
in
jnp
pop
inc
das
testb
arpl
xchg
xchg
test
sbb
cmpsl
dec
ret
repz
sbb
pop
movsl
pushf
jge
out
inc
je
out
add
cmp
aaa
jb
mov
push
xchg
loop
mov
xchg
jne
adc
add
push
or
add
cld
pop
movsl
adc
jl
lea
fdivl
sbb
xchg
icebp
rcll
sbb
ja
ss
sbb
int
push
xchg
mov
imul
sbb
push
pop
inc
jl
add
xor
stos
jecxz
sbbl
movsb
sbb
mov
inc
popf
mov
cmp
arpl
or
push
out
dec
aad
add
sbb
push
leave
mov
wbinvd
jno
jb
cmp
in
xchg
mov
adc
lods
mov
jmp
das
and
dec
dec
sub
sbb
adc
push
sbb
pop
sbb
inc
ds
dec
lret
cmp
hlt
sbb
lock
fisubl
xor
mov
add
mov
sbb
mov
test
sbb
les
lcall
lods
loopne
test
pop
mov
in
push
add
mov
sbb
ja
mov
fsubl
sbb
xchg
jge
enter
sbb
cld
mov
xor
js
fisubs
mov
enter
sub
mov
popa
stc
fsubs
push
jbe
sbb
les
add
subb
stc
aad
pop
push
sbb
test
push
xchg
inc
jmp
es
or
xorb
or
shlb
xor
and
lahf
cmpsl
mov
sbb
loope
repz
fmuls
icebp
sbb
test
imul
rcll
mov
je
adc
fstpl
test
push
leave
arpl
adc
cwtl
lret
sbb
std
data16
incl
fcompl
sbb
sbb
ret
jb
and
sbb
dec
and
sbb
push
push
adc
mov
xor
daa
xor
sbb
scas
test
les
jp
repnz
shll
into
adc
test
nop
adc
xor
adc
ljmp
sbb
mov
enter
add
sbb
mov
jne
mov
movsl
sbb
add
dec
sbb
stos
clc
andb
sbb
dec
je
pop
mov
sbb
add
dec
sbb
imul
jns
xor
cwtl
xor
repnz
adc
dec
repz
or
push
sbb
jge
adc
xchg
lods
dec
adc
cmp
jb
fcomps
xchg
mul
es
inc
adc
loope
pop
pop
fcmovbe
or
mov
loope
fcompl
dec
jbe
sbb
xchg
test
and
sbb
sbb
idiv
push
xor
pop
dec
xchg
sbb
inc
pop
xchg
loope
popf
xor
xchg
ljmp
bound
sbb
sbb
xchg
adc
adc
add
adc
mov
fwait
mov
movsl
lock
push
add
outsb
dec
mov
lcall
cmp
in
popf
sbb
popa
mov
call
mov
xor
xchg
arpl
pop
ss
roll
insb
sub
lock
adc
xchg
sbb
les
push
xchg
out
add
mov
push
cmp
adc
sbb
pop
rcrl
add
mov
inc
push
dec
sbb
call
sbb
sub
mov
je
push
and
jl
dec
fmull
add
and
mov
stc
in
mov
pop
or
jns
aad
pop
dec
adc
in
lock
jg
and
jno
icebp
dec
mov
or
int
rorl
pushf
push
outsb
mov
sbb
cmp
sbb
lahf
lea
xor
cmp
cmpb
pop
orl
stc
imul
test
ja
dec
cmpsl
xor
or
sub
xor
adc
mov
loop
inc
adc
sbb
lcall
lods
mov
cmpsb
ret
adc
int
push
pusha
jne
shl
cld
adc
test
outsb
fwait
dec
sub
outsl
xchg
pop
rol
sbb
es
or
dec
mov
stos
cmp
jp
jns
das
outsl
push
mov
mov
cmp
imul
mov
mov
sbb
pop
lcall
fildll
cmp
sbb
jl
xchg
movsb
add
adc
cmp
jae
popf
loope
repz
xchg
jb
pop
mov
leave
and
mov
sub
cmc
xchg
std
seto
sbb
in
cmp
icebp
sbbb
sub
ficomps
mov
sti
dec
sbbb
and
jmp
sbb
or
cmp
loope
cmp
pusha
prefetchnta
pop
xchg
dec
sbb
data16
sbb
jns
jl
jb
stc
push
int3
scas
sar
int
loope
mov
adc
fnstenv
in
cwtl
test
sbb
stos
in
sahf
sbb
mull
jae
mov
sbb
add
mov
in
sub
inc
sub
sub
push
fdivrl
mov
ljmp
xchg
inc
and
je
shrl
xchg
jbe
inc
sbb
les
sbb
nop
arpl
fwait
and
push
lods
inc
in
aas
push
in
mov
dec
int
jmp
stc
mov
sub
sbb
lods
aas
xlat
dec
xchg
sbb
aad
cmpsb
inc
push
xchg
mov
sti
xor
xor
sub
sbb
push
push
sbb
pop
ret
fdivrs
cmp
mov
jmp
jg
shlb
cwtl
jae
arpl
test
jle
push
and
sbb
es
sbb
rcrb
loope
jl
ljmp
sbb
push
push
xor
add
push
xlat
fldt
pop
mov
mov
sbb
in
cwtl
insl
mov
jp
or
mov
and
nop
push
add
inc
push
xor
ljmp
rcrl
ret
push
add
adc
and
int3
jns
bound
dec
mov
sbb
pushf
out
and
adc
dec
scas
arpl
sbb
mov
pop
sarl
xchg
nop
imul
scas
add
inc
vpunpcklbw
sub
subb
scas
repz
test
or
sbb
xchg
xor
lret
adc
push
arpl
sbb
sbb
lret
sbb
xor
dec
je
jecxz
scas
mov
and
sbb
inc
mov
sbb
sub
or
jbe
mov
popa
dec
xchg
adc
mov
movsl
call
hlt
push
dec
push
inc
sbb
pop
pusha
sub
test
sbb
cmc
lret
or
or
sbb
push
mov
inc
cmp
jne
mulb
push
cmp
test
push
jne
add
mov
mov
rcll
movsl
fld
sbb
lret
loop
and
pushf
hlt
sbb
mov
and
push
xlat
mov
sbb
call
or
adc
rcr
mov
mov
and
repnz
lock
sti
and
cmp
dec
stos
imul
je
pop
sbb
push
cli
insl
sbb
popf
xchg
push
mov
add
loope
inc
cmp
lods
sbb
jne
scas
pop
inc
imul
sbb
mov
cwtl
push
jge
ret
lock
sbb
sbb
add
lret
cmpsl
in
push
mov
aam
inc
stos
mov
call
aaa
push
xchg
js
jle
mov
cwtl
leave
rorb
sub
inc
cmc
sbb
shl
sbb
sub
cmp
loope
in
fdivrs
push
rcrl
pop
iret
dec
outsb
test
aam
xor
pop
cmp
jae
fs
cmp
xor
rcrl
out
pop
fnsave
and
insl
sbb
scas
sbb
jge
ljmp
xchg
sbb
xor
psllw
dec
lret
mov
ja
xchg
cmp
sub
arpl
sbb
pop
mov
hlt
std
cmpsl
test
movsl
sub
pop
adc
repz
cli
inc
pop
pop
inc
es
push
sbb
pop
mov
mov
adc
addb
in
xor
outsl
sbb
jne
cmp
imul
pop
mov
imull
pop
fdivs
jl
nop
iret
hlt
stos
cmc
pop
sbb
jg
aas
sbb
movsb
incl
loope
cmp
stos
lea
out
mov
shr
jge
dec
push
adcl
out
leave
aad
dec
sbb
adc
mov
mov
sub
rcrl
adc
mov
sbb
and
adc
dec
push
jmp
inc
mov
outsl
adc
sub
outsb
leave
sbb
andl
int
xchg
ds
add
data16
sbb
xadd
hlt
sbb
mov
sbb
lods
pop
test
xchg
inc
jl
bound
push
in
test
iret
and
mov
cltd
sub
loope
sbb
loopne
sbb
mov
cmp
stos
dec
jl
ret
jge
in
ja
push
jb
repnz
sbb
xchg
lods
pop
sub
loope
jecxz
cld
dec
loopne
xchg
or
loope
mov
sbb
mov
mull
pop
popa
test
bound
push
loop
arpl
lahf
push
std
cmpb
stc
add
mov
imul
sbb
lods
xor
cli
xchg
mov
cmpsb
xor
shrb
xchg
cli
push
js
pop
lahf
xor
into
adc
push
lea
push
lcall
movsl
or
add
int3
push
je
loop
and
cmp
and
dec
push
sbb
lea
and
inc
decb
push
sub
rcrl
loope
pop
sbb
xor
sub
pop
subl
mov
pop
push
ret
movb
jae
scas
sbb
cmc
addr16
and
mov
adcl
roll
cmp
xchg
imul
mov
ljmp
fiaddl
out
push
daa
add
test
push
ficomps
push
testl
sbb
mov
es
ret
push
enter
cmpsl
jb
sbb
adc
imul
lahf
loope
pop
add
fimuls
repz
pop
add
clc
mov
scas
js
mov
or
sbb
push
test
sub
xor
nop
mov
inc
or
leave
arpl
bound
jbe
sbb
flds
cmp
jbe
loop
adc
sbb
xor
mov
sub
jecxz
aaa
sbb
push
xchg
dec
xchg
shlb
fbld
xor
outsb
push
inc
insb
adc
scas
push
rcrb
gs
fsubl
or
bound
in
in
pop
test
sbb
sarb
xchg
loope
outsl
movsl
lret
lret
jg
testb
xor
enter
jb
in
lods
mov
sbb
pushf
into
jb
or
les
sbb
pop
lret
stos
adc
cmp
and
adcb
and
sbb
sbb
notb
ds
push
movsl
ss
in
push
adc
mov
add
cwtl
aaa
jmp
mov
pop
pushf
loopne
or
rclb
loope
xchg
xchg
xor
add
lods
xor
aad
jne
sbb
insb
fstpl
sbb
inc
clc
aam
jo
push
mov
loope
dec
cmp
les
stc
shr
cmp
ljmp
inc
add
pop
icebp
xlat
test
dec
sbb
xchg
jecxz
sub
fldl
ja
or
imul
in
jae
cmpl
orb
xor
adc
sbb
jg
stos
sub
fprem1
jle
loope
cmpsl
notl
out
xchg
and
sbb
dec
test
mov
stos
test
flds
adc
sahf
stos
fdivrl
adc
sbb
fidivrl
mov
test
adc
sub
sub
insb
sbb
adc
push
sbb
dec
and
stc
sahf
xchg
sbb
cli
or
and
sbb
push
fs
add
mov
add
xchg
pop
das
jl
sub
std
fs
or
call
jg
sbb
movsb
aam
xchg
into
in
and
sbb
ficomps
dec
and
push
sbb
lds
sbb
scas
sub
outsb
loope
xacquire
sub
sbb
sti
rcl
adc
and
sahf
jbe
sbb
add
jno
mov
sbb
mov
pop
out
sbb
push
imul
jno
test
add
test
mov
push
inc
xchg
sbb
jo
notl
or
fcomps
sahf
xchg
adc
dec
repz
in
into
fstpt
outsb
mov
xchg
add
es
sbb
fmull
pop
xchg
in
xchg
xor
cld
add
icebp
sub
sbb
es
inc
sbb
sbb
sahf
fwait
cmp
sbb
aas
and
enter
stos
mov
in
lock
mov
dec
lods
inc
sbb
sahf
xchg
mov
jl
jne
cmpsb
sbb
rorb
fcom
lahf
pop
or
inc
rcrb
fabs
outsb
sbb
xor
push
pop
loope
shlb
je
clc
call
mov
mov
das
push
push
jno
std
rcrl
cmpsb
and
jne
daa
pop
mov
popa
mov
xchg
ret
mov
push
xchg
mov
jb
loope
pop
and
jp
adc
pop
loope
mov
pop
sub
mov
pop
in
push
jl
ljmp
cmp
mov
sbb
or
sbb
ret
dec
aam
push
push
dec
and
nop
jns
sbb
enter
and
das
stos
cmc
adc
repnz
and
adc
add
pop
pop
push
mov
push
imul
xor
sbb
add
repz
xchg
mov
xchg
stos
lea
pop
xchg
sbb
test
test
mov
lret
stc
xor
xchg
fistpll
jb
pop
adc
rcrb
lret
roll
or
xchg
jmp
test
dec
sbb
in
or
fcoms
fwait
in
mov
inc
gs
sub
shll
imul
sahf
push
or
xchg
push
bound
sbb
xchg
xchg
pop
ficoms
fcoms
mov
add
adc
insl
test
or
mov
loope
mov
and
mov
and
movsl
daa
rcl
ficoms
jmp
js
and
jge
mov
cmp
outsl
sbb
dec
and
loop
adc
out
bound
dec
mov
in
xchg
pop
dec
arpl
ret
xchg
and
lret
add
mov
mov
adc
addr16
es
sbb
pop
pop
rcrb
inc
or
mov
or
iret
sbb
lock
insb
push
mov
add
inc
sbb
aaa
jl
les
dec
add
push
int
faddl
aam
movsb
inc
mov
in
das
mov
test
adc
mov
and
mov
sub
rcll
mov
stos
inc
sub
jge
add
cmp
ret
sbb
adc
enter
sub
pusha
or
lahf
sbbl
addr16
repnz
shrb
push
stos
and
push
xchg
sbb
cmpl
loopne
push
stos
xor
test
lcall
cld
out
mov
mov
mov
lds
loop
add
lahf
push
repnz
pop
shl
shll
ficompl
push
test
sbb
adcl
ljmp
int
push
sbb
mov
sbb
push
adc
lret
xor
mov
xchg
ss
push
lcall
clc
imul
sub
mov
nop
sbb
lods
stos
or
push
sub
movsl
sahf
push
jg
adc
xor
sbb
clc
stc
popf
jb
dec
inc
adc
or
push
mov
rcrl
out
inc
dec
jg
sbb
scas
fisttpl
push
sahf
sbbb
mov
aas
lock
data16
sbb
xchg
mov
and
jne
sbb
lods
mov
fimuls
add
in
jb
pusha
adc
mov
and
in
push
push
xchg
mov
sbb
addr16
mov
mov
xlat
sbb
lods
arpl
jnp
jo
cmpb
adc
inc
fmul
movsl
ds
cmp
loop
sbb
imul
adcb
out
test
jp
jno
add
mov
sti
fcompl
cmp
daa
sub
sbb
mov
push
sub
es
inc
lock
or
sbb
adc
mov
inc
or
push
pop
jp
aas
out
adc
sbb
xorl
mov
push
xor
test
mov
hlt
and
sbb
test
pop
mov
lahf
les
dec
push
inc
dec
mov
loope
sbb
or
jmp
push
sbb
je
in
fstpl
shll
fs
int3
dec
std
test
sbb
or
push
stc
mov
cs
ret
adc
stc
ja
scas
push
jle
mov
addb
push
jo
pusha
hlt
negb
jp
andl
cmp
test
add
mov
repz
rcll
shll
lcall
mov
sti
pop
fidivrs
push
inc
sahf
jns
mov
inc
sbb
test
jmp
and
lret
xchg
cmp
sbb
clc
cld
rclb
loopne
sbb
jl
pop
sbb
mov
rcrb
adc
out
jno
sbbl
pop
add
push
scas
addb
fnstsw
out
sbb
test
push
push
lret
sbb
xchg
adc
out
dec
jmp
int3
sbb
mov
jecxz
outsb
cmp
lock
dec
or
insb
xchg
xchg
mov
inc
mov
ljmp
mov
sbb
xor
mov
int3
mov
xchg
push
outsb
lea
adc
push
push
daa
aaa
sbb
xor
outsl
aam
dec
loop
sbb
xor
sbb
add
jecxz
sti
xchg
sbb
xchg
shll
cmpb
pop
addr16
lcall
ds
add
mov
call
add
push
shlb
test
sbb
fs
int
lock
into
out
dec
sbb
jg
mov
and
xor
jb
push
sbb
jb
pop
inc
jns
sbb
cmp
jl
and
je
or
jmp
lahf
or
cmp
bnd
loopne
xchg
es
sbb
aaa
pop
xor
sbb
jle
call
loope
shlb
loope
mov
mov
sarl
xor
sub
sub
mov
dec
inc
mov
dec
loope
xor
pop
outsb
stos
mov
and
sbb
rorl
repnz
mov
pop
xchg
push
fisubl
sarb
cmp
cmpsl
leave
mov
cmp
xor
adc
pushf
sarl
cltd
mov
sbb
cmp
cmp
loop
lcall
jne
mov
add
cmp
jge
xchg
cli
mov
or
sbb
lds
ret
jnp
les
mov
int3
push
push
xor
sbb
repz
ret
add
push
shl
jne
cmpsl
mov
jge
stos
sbb
fidivs
ret
jg
cwtl
movsb
sbb
scas
lret
cmp
int3
pop
jbe
iret
sub
mov
add
jl
cltd
les
test
xchg
xchg
add
jb
jns
fistpl
cmpl
mov
rcr
xchg
sbb
sti
xor
jge
sbb
mov
scas
cwtl
and
outsl
push
in
pusha
sbb
push
negb
xchg
loope
or
sbb
loop
push
add
jg
imul
xchg
mov
and
add
dec
test
sbb
xchg
cld
ss
nop
sahf
or
scas
in
adc
cmc
outsl
sbb
sub
dec
in
push
mov
add
mov
push
mov
xchg
push
movsl
push
sub
aaa
push
sbb
xchg
mov
xor
jae
adc
test
push
je
popa
and
sbb
aas
mov
inc
or
inc
xchg
stc
ljmp
loopne
mov
mov
rclb
pop
nop
lcall
push
adc
xor
inc
fstps
cmpsl
dec
mov
loope
aam
fcomp
xchg
mov
nop
mov
adc
sbb
push
sbb
fstl
xchg
sbb
cs
dec
std
push
push
cmp
mov
dec
and
aad
push
ret
mov
push
and
popf
push
push
mov
fisubrl
sub
jno
repnz
or
pop
fldl
add
in
scas
mov
sbb
cmp
fsubl
loopne
sbb
nop
js
mov
adc
mov
adc
adc
cld
mov
pop
xchg
cmp
dec
jne
outsl
jns
jle
fsubrp
dec
sbb
mov
sahf
adc
pop
imul
and
xchg
mov
mov
dec
sbb
sbb
inc
outsl
sbb
imul
cmp
push
or
mov
cmp
mov
or
jb
xchg
scas
lahf
mov
mov
sbb
xor
sbb
xchg
push
in
inc
inc
add
sbb
jbe
adc
mov
xchg
out
sbb
jbe
add
fstp
test
insl
shrl
stc
push
sbb
dec
aad
dec
les
sbb
cmc
dec
aas
mov
mov
add
out
push
test
lods
cmpl
push
jbe
cmp
mov
lret
mov
sbb
loopne
fistpl
popa
jo
sub
andl
jl
sbb
movsl
jne
xor
bound
jle
cs
add
inc
dec
stos
aad
mov
sbb
mov
call
sub
inc
cmp
mov
sbb
lock
sbb
dec
int3
test
pop
mov
ret
fdivl
callw
jnp
insl
daa
sbb
pop
push
adc
xor
dec
mov
mov
xchg
pop
inc
xchg
sbb
or
dec
mov
xchg
mov
xor
sbb
data16
push
inc
dec
aaa
sbb
outsl
fwait
mov
fsubs
je
jno
sbb
cmp
mov
sbb
sub
xorb
mov
pop
sahf
sub
sbb
fcomps
incl
test
pop
dec
shl
jmp
sbb
jae
add
sbb
push
popa
push
mov
push
imul
test
sbb
fmull
pop
sbb
ljmp
jb
sbb
cwtl
stc
mov
imul
sub
fsts
cli
pushf
sub
lods
loope
out
mov
inc
xchg
sub
push
cmp
sbb
push
or
jne
cmc
sbb
pop
inc
test
sbb
sub
fcoml
cwtl
js
inc
cli
jp
imul
sbb
pop
mov
bound
sbb
stos
aad
or
lcall
mov
push
push
pop
pop
mov
xchg
mov
test
leave
mov
xchg
jg
sbbb
fwait
inc
aaa
into
ja
sub
cmp
fstps
sbb
inc
out
js
imul
mov
out
mul
lea
bndldx
mov
out
fistpl
fistpll
sub
xlat
and
adc
dec
push
sti
sbb
push
pusha
dec
mov
adc
pop
adc
sbb
leave
movl
inc
sahf
shll
data16
xor
arpl
push
cmpb
or
rol
test
xchg
adc
out
jo
and
jb
mov
dec
fwait
mov
sahf
sbb
das
dec
mov
loopne
mov
jecxz
aaa
xor
in
icebp
mov
out
ja
mov
adc
or
sub
call
imul
sub
push
mov
push
sub
xor
lds
or
loopne
arpl
aas
jne
outsb
jno
ret
sbbb
xor
or
push
or
sbb
lods
pop
fisttpll
jno
push
test
sbb
mov
inc
sbb
and
loope
pop
sbb
fdiv
cmp
mov
jmp
adc
xchg
sbb
fucomp
fstps
xor
cs
push
sbb
push
addl
add
dec
sbb
inc
adc
sub
jno
sbb
and
mov
in
sbb
push
std
dec
mov
push
push
sbb
out
cs
adc
cmp
mov
mov
nop
cwtl
daa
enter
mov
xchg
sbb
gs
cmp
icebp
mov
sub
xchg
sbb
dec
shrb
stos
out
popw
add
sbb
fisubs
adc
pop
mov
sbb
das
mov
dec
adc
sbb
pop
add
mov
sbb
mov
jb
imul
dec
pop
std
or
sbb
and
push
cmpsb
movsl
sbb
ror
mov
xchg
loope
sub
scas
xchg
fnstenv
jne
sbb
and
test
push
mov
cmp
xchg
cmpsl
loope
inc
mov
aaa
pop
and
add
ret
mov
jns
int
or
in
jbe
sbb
std
mov
mov
and
fwait
sbb
and
mov
push
sbb
dec
mov
xor
push
sbb
lds
or
cmp
data16
push
jae
mov
sbb
mov
fsubl
clc
test
jl
movsl
in
popl
mov
ja
add
mov
push
shlb
xchg
sbb
cmp
aad
test
inc
mov
arpl
int
xorl
mov
call
mov
jns
insl
sarb
sarb
repnz
sbb
jb
jmp
sbb
dec
pushw
and
cs
pushf
mov
fcmovnbe
jl
test
ret
das
test
lahf
push
lds
in
addr16
adc
cmc
lret
clc
sbb
pop
mov
loop
scas
mov
push
test
jge
mov
mov
sbb
and
fs
add
dec
dec
subb
aam
or
orl
jo
data16
xchg
sbb
js
add
rorl
mov
fimull
sub
inc
xchg
icebp
divb
push
dec
loope
cmp
xchg
int
aaa
adc
into
ljmp
sbb
pop
cwtl
cmp
jae
mov
icebp
inc
xchg
je
js
pushf
pop
cmp
shr
dec
xor
sbb
jnp
jle
inc
mov
sbb
out
sbbb
or
ror
ret
or
fsts
pop
mov
dec
mov
std
push
popf
lcall
pop
xchg
pop
mov
sbb
mov
lret
sbb
mov
xor
jmp
je
call
sbb
mov
subb
or
add
popf
jns
imul
mov
aaa
or
xchg
jle
stos
das
fnstenv
cltd
and
xchg
inc
jg
add
bound
imul
cmp
push
popf
aad
xchg
sbb
and
out
mov
adc
rcll
loop
sbb
bswap
mov
mov
aam
lret
sbb
in
hlt
sti
rcr
outsl
adc
jae
dec
clc
xchg
mov
dec
jl
adc
cs
mov
jle
and
sbb
clc
mov
imul
xor
sbb
dec
aaa
pop
lods
mov
sub
xchg
or
out
xchg
dec
stos
add
fcmovnbe
shll
sub
cmp
sahf
mov
sbb
fucom
int
test
outsl
xor
cwtl
mov
xchg
jge
iret
ja
or
inc
fcoml
and
add
sbb
and
addb
mov
cli
sbb
sbb
push
jmp
popa
cmp
repnz
xchg
sbb
cmp
arpl
sbb
and
lahf
sbb
shlb
cmp
jo
push
pop
lods
insl
out
and
mov
mov
cmpsb
mov
int
mov
mov
sub
loope
loop
sbb
das
mov
pop
and
pusha
or
add
dec
sub
add
movsb
hlt
test
std
loopne
mov
gs
xchg
loope
mov
lods
push
sbb
jb
sbb
pop
arpl
sbb
cmp
fdivr
add
push
or
jns
testb
pop
push
mov
add
pop
scas
lret
mov
sbb
sbb
cmp
mov
xchg
je
cmp
loope
lret
or
inc
mov
rolb
movb
aad
push
lahf
mov
out
sub
loope
jns
mov
fidivrs
fbld
sbb
aaa
lcall
sbb
pop
loope
popf
dec
ds
mov
imulb
sbb
enter
imul
sbb
lock
jo
nop
out
loope
mov
rcrb
mov
movsb
inc
sbb
sarl
mov
test
mov
leave
test
push
cmp
inc
dec
sbb
addr16
xchg
cld
movsb
sbb
inc
push
imul
xor
mov
adc
dec
jbe
stos
sbb
jno
sbb
sbb
or
daa
sub
sbb
dec
rcrl
rorb
cmp
lock
sti
mov
sbb
cmp
pushf
mov
bound
jge
mov
sbb
rolb
sbb
xchg
lods
scas
cmpl
adc
jg
xor
mov
cmp
sub
lds
dec
xlat
jg
int3
sbb
sbb
movsb
stc
or
pop
xchg
jae
jp
rolb
in
push
and
sub
lock
xchg
cwtl
sbb
outsb
fisttpll
aaa
sbb
test
sbb
xor
dec
insl
xor
test
cmp
sbb
shl
and
pop
repz
or
imul
xchg
add
and
loopne
mov
xlat
jb
jecxz
adc
dec
sbb
lods
mov
xchg
mov
pop
dec
sbb
incl
loopne
inc
jns
mov
in
xchg
es
clc
sbb
mov
sub
inc
pop
mov
sbb
push
das
movl
sub
cs
or
mov
repnz
sub
js
xor
or
scas
stos
dec
daa
add
sti
adc
mov
sbb
cmp
xor
bound
mov
cwtl
out
icebp
ret
fnstcw
pop
mov
pop
outsb
loop
sbb
push
sbb
xchg
int
test
sbb
jge
lock
aas
sbb
add
or
int3
into
sbb
mov
mov
adc
rol
xchg
sbb
outsl
mov
ret
push
cmp
ja
push
mov
imul
pop
push
and
mov
adc
stos
and
int3
cltd
sbb
push
jg
jp
movsb
loope
sbb
into
mov
add
aad
pop
out
mov
jmp
mov
mov
ret
inc
jnp
fbstp
ljmp
subb
adc
in
jle
sbb
inc
pop
and
outsb
jecxz
adc
mov
xchg
sbb
mov
xor
and
pop
mov
out
add
lock
xor
hlt
push
sbb
or
xchg
mov
mov
adc
sbb
xor
fistpll
sahf
or
fwait
jne
push
xchg
mov
lds
rcll
xchg
adc
in
push
in
sbbl
ja
fnstcw
pop
xchg
sbb
lock
cli
sbb
icebp
sub
incb
add
outsb
push
add
mov
sbb
shlb
sbb
push
mov
in
add
arpl
cmp
subb
push
push
xchg
ja
push
sbb
add
lods
int
xchg
sbb
leave
icebp
cmpsb
cmpb
xorl
and
mov
inc
out
sub
pop
mov
inc
xchg
test
sbb
dec
fwait
adc
sbb
xorb
fucom
jl
add
data16
fnstenv
cmp
inc
loope,pn
mov
adc
sbb
sub
call
push
in
mov
sbb
pusha
xor
stc
aam
sbbl
iret
mov
scas
adc
xchg
negl
aam
add
rcll
cmp
pop
xchg
lock
adc
aad
adc
mov
adc
xor
add
in
jns
pop
loope
push
fidivs
jecxz
pop
das
lds
jg
xorb
adc
mov
dec
repz
xchg
bound
enter
imul
xor
sbb
add
sbb
jnp
mov
mov
scas
cmpsb
mov
xchg
sbb
hlt
fidivrl
clc
dec
test
filds
lret
push
xor
xchg
xor
or
js
inc
jmp
lcall
mov
jecxz
adc
or
mov
jbe
push
jne
fisttps
cld
out
movsb
adc
lods
adc
outsl
call
adc
dec
sbb
xchg
and
sbb
repz
insb
cmp
or
push
pop
iret
bound
je
decl
pop
shll
push
pop
xor
test
imul
mov
leave
negl
jl
shll
lret
stos
adc
xor
stos
js
lcall
fsubr
fstpl
jle
xlat
xchg
in
mov
call
lret
sbb
cwtl
ror
adcb
and
fcmovnu
lock
rcrl
mov
mov
sbb
pop
pop
mov
sbb
xchg
push
sub
lcall
sbb
fcomps
pop
dec
mov
xchg
inc
sbb
and
cmpsl
adc
icebp
mov
pushl
sbb
mov
dec
js
dec
adc
mov
aam
test
aaa
adc
inc
cmc
rorl
pop
sbb
movsl
rcrl
aas
shlb
adc
sub
xchg
jnp
sub
dec
mov
adc
cmpsb
nop
jmp
fcomps
gs
aam
fs
or
imul
adc
pop
lds
lahf
mov
xor
repz
xchg
adc
mov
movsb
pop
cmpsl
push
data16
add
adc
pushf
clc
jp
mov
out
fisubl
div
mov
adc
loop
insl
xor
lea
jl
out
mov
mov
push
sbb
adc
movsl
xor
mov
cmc
pop
aad
in
jnp
sbb
mov
sbb
cmp
imul
push
test
stc
adc
fcoml
add
fs
stos
xor
js
jg
mov
movsb
adc
cmp
adc
add
in
push
inc
mov
adc
sbb
cwtl
mov
jo
out
xor
sub
jb
and
push
lock
mov
loopne
adcb
lret
dec
push
test
add
adc
add
dec
mov
dec
ds
arpl
mov
adc
mov
pop
push
sbb
mov
sbb
nop
test
xor
and
test
iret
in
test
ss
aad
sahf
inc
inc
xchg
dec
mov
and
loopne
sbb
sarl
sbb
daa
add
sbb
inc
sbb
adc
ljmp
pusha
sarl
inc
xchg
sbb
mov
sbb
fcmovb
faddp
sbbl
inc
loope
push
in
aaa
cmpsb
xlat
aas
pushf
sbb
arpl
pop
ret
and
sbb
out
cmpsl
dec
push
insl
mov
add
lods
jg
mov
adc
sbbb
jnp
xor
repz
pop
hlt
lahf
shll
sbb
loope
adc
jg
ret
rorb
xchg
add
adc
fnstsw
jmp
sbb
push
add
sar
jo
dec
push
and
ret
mov
push
dec
sbb
jecxz
mov
push
cmp
rcpps
xor
sbb
push
adc
xor
notb
mov
fs
cli
pusha
push
scas
fldl
dec
jp
insb
mov
rorl
sbb
sub
xchg
add
xchg
dec
inc
enter
mov
mov
test
add
sbb
or
fiadds
jmp
mov
das
fcoml
jo
mov
aad
outsb
and
negl
dec
dec
stos
adc
mov
aas
ds
test
sbb
pop
push
mov
gs
jbe
mov
sahf
faddl
repz
or
sbb
cmp
xchg
xchg
les
cltd
mov
jbe
mov
sbb
sbb
inc
ljmp
adc
mov
xor
cmp
out
ffreep
xchg
call
and
sbb
ljmp
mov
mov
mov
test
sub
lds
lea
add
dec
push
cmp
shlb
sbb
in
adcb
sbb
pop
mov
xchg
sbb
add
mov
jl
adc
sbb
push
mov
xor
shr
test
icebp
sbb
jae
mov
jnp
mov
call
inc
in
dec
jle
inc
jp
sbb
and
lahf
pushf
lea
sbb
add
sbb
mov
xor
sbb
pop
rol
orb
inc
dec
outsb
push
clc
push
mov
cmp
jne
fldenv
mov
pop
sub
cmc
mov
in
pop
mov
fisttpl
sbb
jg
mov
mov
adc
mov
in
aaa
insb
jmp
inc
fwait
aad
or
jl
xchg
push
stc
aam
lret
dec
mov
in
push
and
js
lods
into
rcrl
sarb
mov
cmp
sbb
xchg
jp
aas
dec
sti
pop
xchg
mov
sbb
inc
mov
sbb
fbld
cmp
fistl
out
sbb
pop
cwtl
bnd
sti
pop
jmp
mov
mov
xchg
xor
popl
cmpsl
enter
dec
mov
xor
mov
test
jne
out
adc
push
fxch
push
cmpsb
sbb
jmp
sub
xlat
lret
adc
movsb
sub
cltd
cmp
xor
dec
or
ljmp
and
sbb
lret
les
adc
es
movsl
pop
cmp
imul
xorb
mov
jle
add
sbb
sub
xchg
sbb
xchg
jg
xlat
cld
movsb
aas
and
into
sbb
ret
sbb
sbb
fimuls
xchg
adc
mov
add
pop
out
enter
mov
jb
sbb
fcomi
or
xor
dec
cmc
sub
xchg
push
pop
loop
sti
inc
sbb
scas
and
pop
dec
pushf
xchg
fldcw
mov
sbb
push
daa
nop
xchg
xchg
push
pop
rorb
adc
push
cmc
hlt
push
xor
sbb
in
lods
loope
pop
adc
cld
jmp
adc
imul
in
pop
dec
xchg
js
stos
loopne
pop
sbb
xlat
ja
mov
in
xchg
pop
add
inc
or
movsl
sbb
fdivl
cmp
subb
mov
cld
push
cli
jae
inc
scas
in
inc
test
adc
sbb
xor
mov
push
jmp
cwtl
push
loope
ficomps
cld
stc
xchg
push
sbb
mov
sbb
je
push
xchg
jecxz
mov
add
cmpsl
adc
push
scas
sbb
mov
out
je
test
loop
movsl
fsubrs
xchg
sbbb
js
sbb
xchg
lret
pop
add
cld
cmp
fisttpll
sbb
and
sub
std
xor
out
inc
and
cmp
lgs
add
dec
cmpl
fisubl
push
sahf
sbb
xor
sbb
dec
sbb
fiadds
push
sbb
scas
cwtl
ret
sbb
out
mov
roll
sbb
lret
sub
ljmp
fmull
mov
xlat
sbb
add
test
jp
dec
xor
mov
dec
hlt
das
shll
mov
jno
stos
and
xor
xchg
mov
insl
scas
inc
sbb
pop
mov
outsb
push
pop
sahf
aam
xor
mov
mov
adc
pop
repz
dec
pop
sarl
or
mov
xor
add
outsl
dec
aas
xor
in
dec
in
xor
les
push
and
stos
mov
mov
or
sbb
adc
nop
sbb
pop
cmp
xchg
mov
sbb
jmp
dec
sbb
daa
mov
ds
adc
sbb
pop
fneni(8087
push
adc
jbe
cmp
daa
das
bound
repnz
sbb
pop
and
stos
inc
mov
adc
xchg
jl
sbb
inc
lret
mov
js
add
inc
pop
bound
in
ljmp
mov
fistpl
stos
sub
sub
jae
call
lret
sbbl
cmp
and
xchg
adc
lock
jbe
sbb
popa
inc
dec
imul
lods
sub
jno
nop
insl
pop
sbb
and
das
mov
cmp
sbb
adc
fxch
mov
xor
cmc
push
sbb
sbb
push
add
ss
je
push
jge
push
mov
es
add
sbb
pop
mov
fwait
sub
mov
inc
in
mov
mov
cmpsl
mov
adc
and
or
js
sbb
enter
subl
icebp
push
jecxz
sbb
push
cmpl
cmpsl
adc
std
lods
sbb
mov
mov
lcall
push
xorl
sbb
mov
test
repnz
int3
adc
sbb
add
lcall
push
lds
movsb
add
cmpsl
aaa
dec
dec
int
pop
adc
xor
lret
adcl
inc
cli
sbb
out
ljmp
cmp
aas
sbb
add
addr16
and
ficoml
je
test
test
sbb
jb
pop
sbb
and
add
push
mov
aaa
mul
adc
sbb
rol
out
sahf
outsl
rcll
adc
adc
mov
repz
aam
jge
dec
adc
cld
pop
popa
lods
sub
ror
sub
push
aam
jg
in
cmp
pop
into
sub
cmp
mov
mov
out
lods
cmp
fidivs
out
push
jmp
sbb
jb
sbb
andb
test
adc
or
sti
adc
loope
xor
push
xchg
dec
adc
inc
mov
popa
xor
adc
add
leave
rorl
pusha
pop
aam
pop
sub
movsl
addr16
sbb
sbb
add
pop
sub
mov
adc
sub
mov
std
sbb
sub
ret
jbe
sahf
sbb
dec
xor
loopne
sbb
roll
adc
mov
in
mov
lret
sbb
stos
sbb
lea
sbb
cs
in
sbb
and
loope
ds
out
mov
sbb
mov
scas
aas
rcrl
pop
xor
push
cmp
fdivl
pop
mov
sbb
clc
stc
ds
lods
xchg
push
push
xor
lods
sbb
adc
mov
lcall
xor
dec
lahf
sarl
inc
sbb
insb
xor
scas
cmp
fcomps
iret
addb
sarl
jmp
add
gs
inc
lahf
ret
dec
insb
mov
cs
push
dec
push
pop
bound
std
sbb
and
and
sbb
in
sbb
mov
dec
ret
jecxz
push
aam
mov
iret
lcall
mov
test
mov
call
jae
add
shrl
scas
out
jne
cwtl
sbb
inc
pop
jp
xor
lret
pop
pop
cmp
sbb
nop
sub
jl
out
mov
add
xchg
adc
dec
sbb
lea
jno
sarb
pop
mov
ficoms
sub
push
clc
adc
out
enter
sbb
lock
inc
dec
sbb
inc
mov
in
sbb
enter
imul
popa
pop
mov
loop
sbb
int
push
into
adc
repz
jnp
mov
mov
loope
out
scas
int
pushf
xchg
push
lahf
add
jnp
mov
test
jno
lret
or
xor
sbb
xchg
mov
jmp
cmpsb
cmp
mov
jecxz
int3
mov
pop
jbe
pop
repz
push
xchg
in
push
and
loope
push
xchg
std
into
icebp
daa
loope
adc
dec
outsb
xchg
shlb
push
push
lret
or
fsubs
cmp
popa
bound
test
adc
ficoms
dec
xchg
sbb
les
xchg
inc
pop
out
jl
sbb
mov
cmp
cmc
icebp
xor
cmpsl
jle
push
movsl
dec
inc
into
sbb
sub
in
icebp
xlat
adc
mov
adc
mov
in
or
dec
and
loope
sub
mov
add
dec
and
sub
adc
sbb
test
sbb
scas
pop
sbbb
mov
insl
push
xor
push
sbb
fs
inc
xor
sbb
push
cmc
or
cltd
cmp
jp
xchg
mov
pushf
xchg
lods
rclb
mov
int3
mov
aaa
sbb
sti
testb
movsb
mov
aam
ret
sbb
mov
imull
jae
sbbb
shr
stc
arpl
mov
sub
xchg
xchg
sbb
test
icebp
loope
inc
sub
inc
dec
enter
sarb
adc
out
dec
sbb
test
xchg
push
call
popa
lcall
std
and
lret
pop
sbb
and
mov
outsl
sbb
cmpsl
sbb
shlb
int
ret
sbb
and
inc
sbb
ljmp
sbb
cs
pop
insl
xchg
mov
aaa
mov
add
sbb
ja
sub
les
pop
subl
dec
es
rcr
dec
popf
push
xor
adc
mov
pusha
outsl
xlat
movsl
hlt
push
sbb
jae
cmp
sbb
xchg
negl
lock
pop
cmpsl
mov
add
stos
mov
stos
dec
cmp
xchg
out
pop
jg
enter
inc
pop
into
sbb
jae
popf
sbb
pop
out
sbb
xor
mov
fucomip
mov
cld
dec
jl
sbb
shlb
push
cli
fistl
andl
sbb
mov
mov
rcl
and
dec
mov
xor
lret
push
idivb
leave
xor
pop
pop
mov
ds
sub
cmpsb
adc
movsb
outsl
pushf
push
sarl
lret
push
movsb
insl
lods
mov
fistl
jo
add
test
jb
xchg
movsl
sbb
inc
sahf
and
sbb
shrl
or
sbb
mov
sahf
add
pop
push
ja
maxps
sbb
roll
rorl
sbb
out
cld
sub
daa
push
sub
bound
adc
or
insb
sbb
dec
adc
sbb
inc
popa
push
mov
outsl
out
aas
es
fisubl
stos
cmp
aad
push
push
sbb
jno
push
jne
out
lods
adc
pop
sub
or
dec
lock
sbb
pop
sbb
addb
cmpsb
fsub
sbb
mov
sbb
jge
add
and
sbb
das
lret
test
sub
sbb
mov
sbb
and
stc
inc
imul
insl
push
jbe
fdivrl
sbb
push
notl
mov
ljmp
push
cmpl
push
inc
add
call
inc
sbb
jp
icebp
dec
mov
rcll
sub
nop
test
adc
cmc
sbb
mov
sbb
mov
fs
fadds
and
sbb
nop
call
sbb
pushf
scas
and
loop
dec
sbb
dec
mov
ss
sbb
enter
imul
xchg
pop
rolb
add
xor
lods
pop
gs
scas
mov
cld
cwtl
sbb
enter
sbb
pop
mov
ret
mov
test
dec
sbb
lods
popa
xor
xchg
push
mov
cmpsb
sbb
jmp
stos
sbb
shl
ret
xor
sbb
call
inc
xor
mov
sub
cmc
and
jg
int
mov
adc
dec
in
sbb
mov
rorl
jb
jp
int
adc
insl
push
mov
repz
mov
push
ret
leave
pop
push
adc
cld
add
and
mov
in
jl
adc
sbb
xor
sbb
inc
lcall
sbb
in
std
fidivs
mov
stos
xchg
sbb
loopne
xorb
call
dec
and
aad
movsb
mov
xchg
std
inc
sbb
and
xor
sbb
mov
cmp
cwtl
test
sbb
shll
cmp
fsts
mov
xchg
lret
pop
sub
push
cmpsb
inc
sbb
add
stos
adc
out
mov
int3
adc
adc
mov
and
sbb
aam
fmuls
mov
out
cwtl
jno
or
push
mov
xchg
or
pop
pop
je
sbb
stos
sub
movsl
dec
lods
test
and
dec
xchg
das
mov
adc
inc
movl
sti
sbb
fnstsw
call
sarl
push
out
sbb
mov
cmp
stos
jge
arpl
loope
sahf
cmpsl
or
test
xor
sbb
rcrl
and
cli
out
flds
negb
mov
jp
loop
xor
push
lret
jne
ret
fiaddl
movsb
pop
test
jg
sub
pop
pop
mov
call
sbb
dec
sbb
int
mov
daa
adc
push
xchg
subl
dec
sbb
into
cmp
imul
push
jo
negl
mov
fldcw
adc
mov
in
lods
sbb
cmp
das
jbe
mov
aaa
sbb
mov
sbb
xlat
mov
and
out
sbb
inc
jb
subl
cmpb
das
sbb
inc
pop
sbb
scas
movsb
test
in
push
sbb
or
sbb
dec
add
leave
stos
xchg
xor
cmpsb
and
adc
ds
sbb
add
push
ja
hlt
push
push
lea
or
mov
jmp
jo
xchg
cmc
test
iret
pcmpeqb
mov
imul
sbb
std
cmp
push
sbb
mov
xchg
loope
mov
stos
jp
ja
mov
xor
push
sbb
cwtl
mov
jne
js
loope
fldenv
adc
and
jecxz
mov
jl
sbb
cmpsl
test
sbb
leave
popa
pusha
idivl
sbb
sti
sbb
test
push
stc
lea
and
fwait
pop
cld
xchg
sbb
test
dec
add
cmpsb
sbb
repnz
xor
mov
mov
inc
sbb
adc
sbb
mov
jne
jb
sbb
rcl
cwtl
je
or
mov
test
fidivl
pop
in
lahf
outsl
sbb
and
enter
push
adc
sbb
mov
sbb
push
add
mov
push
xor
idivb
imul
add
icebp
sub
dec
mov
sbbl
lea
sub
iret
pop
sbb
divb
mov
sbb
sbb
sbb
cmp
sbb
sbbb
mov
and
lods
sbb
lock
dec
iret
fstpl
dec
xor
into
pop
adc
dec
insl
out
mov
sub
mov
and
mov
xor
sbb
adc
jo
lock
pop
adc
mov
adc
xchg
movsb
rcrb
xchg
test
gs
lret
xor
xchg
lods
push
mov
sbb
mov
out
and
sbb
shlb
sbb
mov
pusha
jbe
jg
fists
iret
sbb
or
and
push
insw
sbb
push
xchg
or
xor
movsl
push
jecxz
mov
ret
xchg
sbb
nop
out
dec
ja
sbb
jmp
and
clc
cs
dec
pop
lods
shlb
cmp
xchg
fwait
jo
jl
jnp
sbb
dec
lahf
test
xor
jecxz
lcall
add
in
cmc
xchg
repnz
pusha
pop
sub
mov
xchg
int3
jae
pop
int
cmp
xor
sbbl
and
push
push
inc
lock
daa
sub
mov
dec
add
fcom
mov
jno
pop
repz
sbb
cmpsb
fwait
test
addr16
aad
cmp
bound
push
daa
cmc
pop
fwait
mov
pop
test
sbb
sbb
inc
inc
sbb
push
stc
mov
int3
sbb
into
fwait
repnz
in
mov
pop
lret
push
imul
or
or
lock
lret
test
sbb
or
icebp
jno
mov
sub
add
dec
xchg
cmp
jmp
adc
sti
xchg
outsb
in
mov
dec
cmp
sbb
fs
call
sbb
adc
clc
pop
xor
mov
pop
dec
jbe
stos
cwtl
cmp
fstps
sub
jle
and
cmpsl
icebp
sbb
or
pop
out
xor
sbb
mov
inc
sub
push
repnz
stos
fldcw
xlat
mov
xor
loop
push
jne
inc
jbe
lret
enter
dec
cld
sbb
jmp
pop
fstps
mov
jmp
sbb
stos
jno
mov
stc
fistpl
out
cmc
adc
lret
sbb
inc
xor
and
stos
sbb
cld
mov
bnd
dec
xor
xor
test
add
mov
stos
push
adc
mov
jg
aas
sbb
fisubrl
adc
push
rolb
fstl
jae
and
out
mov
jns
mov
popa
dec
mov
int3
dec
and
fimuls
adc
je
cwtl
mov
sub
sbb
sbb
mov
sti
arpl
jmp
lds
roll
jo
test
stc
leave
add
pop
pusha
imul
inc
sbb
pushf
testl
push
lret
bound
push
sbb
mov
sub
jo
mov
test
iret
andl
ss
push
sahf
mov
mov
repnz
icebp
mov
js
lea
orl
or
fstpl
xacquire
lock
xor
out
sub
and
and
stos
cmpl
aam
sbb
push
movsb
pusha
adc
arpl
mov
sbb
jnp
stc
and
les
pop
lods
cwtl
jb
scas
xchg
mov
jno
out
out
cmpsb
sbb
enter
shll
sbb
pop
lahf
cltd
jnp
inc
sbb
xor
mov
mov
mov
sbb
jmp
add
dec
je
iret
sbb
cs
outsb
or
aad
fistl
les
std
sbb
enter
dec
inc
loope
adc
sbb
add
sub
clc
push
std
jne
aas
lcall
push
or
inc
xor
push
or
add
sub
scas
sbb
dec
mov
push
xchg
shll
mov
sbb
and
sbb
js
emms
xor
xchg
mov
bound
xchg
sbb
add
imul
lret
das
shrl
xor
test
push
fistl
cmpsl
adc
cld
or
mov
fistl
jo
pop
or
enter
imul
pushf
pop
sbb
mov
fs
in
push
mov
js
repz
sub
imul
mov
dec
dec
sbb
mov
pop
test
idivl
xor
xchg
jmp
out
mov
rcrb
inc
insl
add
sub
push
daa
xor
sub
and
lahf
in
push
decl
sti
daa
sbb
orb
ds
aad
add
aas
mov
mov
xchg
push
mov
cmpsb
cmp
or
out
rorb
leave
ret
push
jp
and
ss
fstl
sbb
sub
movsl
lods
pop
pop
lret
xor
sbb
xor
sbb
lcall
outsl
adc
push
dec
cmp
add
jnp
in
fnstsw
jae
jmp
shlb
and
and
sub
lock
jecxz
and
xchg
jmp
arpl
push
push
mov
sbb
insl
mov
sub
push
iret
mov
cmp
pushf
jno
imul
and
rorl
incl
adc
sub
mov
xchg
sbb
jge
scas
inc
mov
sbb
bound
fwait
push
inc
mov
push
shlb
aam
and
sub
in
sub
jno
test
xor
addl
out
pushf
dec
lds
int3
sbb
sub
loop
add
xchg
imul
push
mov
outsb
sbb
aaa
lahf
push
inc
das
imul
pusha
push
push
cmc
repnz
lods
pop
sbb
dec
pop
test
sbb
cwtl
pop
jle
sbb
pop
cmpsl
ror
cli
int
popa
dec
ja
cmc
xchg
cwtl
pushf
test
sbb
mov
out
sbb
inc
in
xchg
fadds
loope
push
inc
loop
push
decl
shll
movsl
xchg
ficoml
adc
pop
sub
or
pop
xor
dec
and
sub
adc
push
fmulp
outsl
icebp
pusha
icebp
inc
push
inc
jne
adc
jp
imul
repnz
pop
sbb
imul
xor
mov
enter
cmp
dec
push
jno
popf
pushf
lcall
cld
inc
sub
out
int3
mov
cs
xlat
sbb
repz
adc
js
sbbb
and
mov
daa
sbb
aas
cli
in
mov
sbb
dec
xor
push
xlat
leave
sbb
jnp
xchg
pusha
adc
stc
adcl
and
push
hlt
scas
xchg
ret
push
add
adcl
sub
sbb
test
adc
mov
sbb
add
and
push
sbb
mov
test
fsubp
gs
add
adc
dec
mov
scas
inc
sub
ficompl
dec
sub
sbb
pop
jo
cld
imul
lcall
add
sbb
push
adc
sbbb
ficompl
std
das
aas
mov
cmp
sbb
adcb
stc
fcompl
bound
push
mov
sbb
sbb
xchg
shll
imul
sbb
mov
lock
into
inc
in
fsubs
daa
jbe
sbb
jmp
loopne
lret
loope
out
fstl
sbb
daa
loopne,pn
sbb
sti
cwtl
out
repz
cmpsb
inc
sbb
jno
push
rcrb
sbb
fcomps
inc
ret
nop
bound
push
mov
sbb
sbbb
push
inc
lea
jne
push
jb
pop
lods
add
push
scas
icebp
or
sub
push
push
sbb
sarl
sbb
cmp
push
sbb
inc
ret
pop
pop
push
sbb
mov
out
inc
ret
jbe
pop
jns
rcr
mov
loope
mov
das
repz
mov
adc
aam
adc
ret
loopne
out
fidivrl
js
pop
repz
imul
push
pop
push
sbb
push
fistpll
ret
mov
cmp
repz
push
or
test
add
sbb
lahf
mov
pop
sub
lret
dec
xor
xchg
aas
nop
mov
cmc
sbb
shlb
and
mov
mov
inc
sbb
jbe
or
je
sbb
and
sub
outsb
daa
push
xchg
hlt
dec
addb
mov
lds
mov
lret
xchg
push
test
pop
sbb
fstl
sbb
mov
outsb
adc
pop
cmp
mov
mov
xchg
in
or
in
movsl
xchg
imul
aas
lcall
pushf
or
push
leave
fcmovnbe
sbb
sbb
call
or
jg
mov
push
adc
lret
andl
xchg
and
sarl
lock
inc
dec
cltd
and
aad
dec
push
mov
rcrb
cmp
pop
ret
or
inc
pop
sbb
clc
pop
cmp
popa
sbbb
inc
mov
rcrb
test
mov
ss
sbb
imul
xchg
dec
push
stc
jge
rcr
mov
int3
mov
loope
rcrl
call
sbb
aam
push
repnz
in
mov
or
js
pusha
and
test
mov
data16
sbb
sbb
sub
xor
dec
sub
xchg
fistpl
stos
dec
adc
int3
in
outsb
stc
mov
push
sbb
and
lea
and
popa
xchg
xor
pop
int
adc
sbb
adc
bound
out
lods
adc
je
adc
sbb
pop
inc
repnz
fistpl
out
add
int3
fnstcw
adc
and
mov
sbb
push
into
inc
jne
and
test
fnstcw
test
andb
adc
inc
cmp
sbb
or
movsb
dec
mov
mov
inc
adc
adc
les
outsb
out
push
jl
add
xchg
orl
mov
mov
push
negl
fsubrl
inc
jb
sbb
and
sbb
sub
xor
into
les
pop
sbb
nop
inc
xchg
enter
mov
fs
sbb
out
ret
cmc
jns
lret
fldt
arpl
jecxz
sbb
adc
adc
repz
sbb
xor
adc
out
inc
leave
shll
pusha
shlb
push
xor
mov
ds
inc
data16
loope
lcall
xor
push
pop
dec
mov
sbb
enter
ficompl
test
xchg
cs
ss
fldcw
sbb
sbb
add
sbb
enter
pop
and
out
or
xor
xor
ret
or
jle
sbb
push
sbb
or
iret
cld
xor
add
test
adc
sub
movsl
ret
jb
dec
sbb
jmp
dec
sub
or
cmp
je
pop
mov
push
adc
int3
push
lods
mov
loope
dec
jno
ss
push
pop
sbb
movsl
lsl
in
and
fadds
sbb
jmp
push
sbb
fnstsw
iret
inc
sbb
jecxz
aad
adc
ret
mov
inc
sbb
and
add
mov
push
paddb
sbb
in
push
loope
arpl
pop
out
jle
and
sub
cwtl
mov
or
mov
rcll
fcompl
mov
xchg
nop
sahf
scas
pop
inc
sbb
inc
fucomp
pop
js
aad
sbb
xor
push
test
add
adc
mov
icebp
stc
movsb
push
mov
xor
adc
rcr
and
sbb
addr16
fadds
sbb
int
sbb
imul
add
loopne
in
xor
push
movsl
gs
dec
xlat
and
addr16
pop
sub
push
scas
out
inc
xchg
xchg
mov
subl
adc
aas
xor
je
add
jmp
push
imul
xchg
jne
mov
mov
lret
pop
or
jbe
in
push
ffreep
cmp
and
in
rcrl
sbb
sbb
dec
pop
add
cmp
int
inc
lds
sub
and
push
or
js
xchg
sbb
push
aaa
sbb
mov
sti
add
dec
icebp
sahf
push
xchg
add
mov
scas
lcall
push
push
ficompl
inc
sub
in
push
cmp
xor
out
call
or
out
jae
popf
sub
sbb
mov
rcll
mov
lock
add
sbb
jns
dec
cwtl
push
mov
test
ret
push
insl
andl
xchg
sbb
mov
cmp
aas
mov
sbb
cmc
push
pop
dec
cli
repnz
jbe
mov
xchg
arpl
push
adc
cmp
push
aaa
testb
xor
pop
cmp
in
shrb
push
mov
cmp
xor
loope
shl
nopl
jno
cmpl
les
add
in
mov
mov
adc
mov
sub
pushf
aad
cmp
xor
fisubl
inc
lea
add
out
mov
clc
stos
xchg
push
push
xchg
push
sbb
dec
cmpsl
movsb
sbb
int
daa
aaa
xor
sbb
jae
xor
pop
inc
popa
and
test
loope
jae
jmp
mov
loop
or
mov
popf
fisubrl
sbb
test
xchg
sbb
pop
pop
jb
cli
or
loop
es
in
dec
xor
out
and
add
rol
imull
test
push
inc
test
xchg
add
imul
mov
sbb
divl
pop
push
pop
pop
sbb
add
jmp
jae
push
mov
pusha
int3
sbb
test
mov
popf
das
enter
sbb
scas
out
fdivl
cmpsb
adc
xchg
out
xchg
scas
adc
adc
sbb
adc
cmp
sbb
int
into
sbb
dec
inc
sbb
adc
call
sahf
pusha
adc
pop
pop
push
sbb
ds
data16
stc
mov
push
cltd
push
dec
repnz
movsb
xchg
lods
sarb
xchg
xchg
pop
pshufw
sbbb
out
sti
ret
bound
and
mov
xor
dec
stc
push
loopne
push
inc
rcrl
lock
or
in
xor
fsubrs
jae
pusha
adc
xor
inc
sbb
adc
sub
scas
data16
fstps
xchg
mov
sbb
daa
popa
sbb
and
adc
inc
movsb
arpl
mov
gs
lret
stc
sub
les
mov
std
lods
mov
or
jno
mov
sbb
bound
sbb
push
les
xor
test
sbb
fiadds
repz
icebp
push
and
ds
je
pop
in
cmp
repnz
incb
mov
pusha
std
mov
sbb
gs
call
sbb
cwtl
sbb
cmpl
and
dec
lods
jge
movsb
sbb
xchg
push
pop
sbb
loope
pop
dec
pop
xor
or
add
je
scas
push
mov
in
or
mov
lods
cmp
dec
outsb
cmp
sti
or
cwtl
sbb
mov
cmc
sbb
idivb
add
daa
add
mov
jmp
popf
mov
xchg
sbb
in
jns
out
movsl
sbb
push
mov
or
popa
adc
enter
dec
imul
or
test
int3
mov
gs
ret
stc
mov
add
pop
pop
or
or
xor
dec
imul
sbb
repz
sbb
cltd
jmp
xor
xchg
rorl
cs
leave
xor
sbb
not
rcrb
sbb
jo
insl
or
sbb
je
add
jmp
and
sbb
ljmp
sub
dec
popf
rcrb
mov
imul
mov
push
cmp
xchg
lahf
cmp
push
bound
int3
movsl
jne
pop
into
cwtl
push
add
mov
xor
jns
jl
ja
movsl
pop
pop
lret
arpl
xor
in
push
sbb
cmp
sbb
add
inc
mov
call
addb
mov
mov
cmp
shr
and
cmc
adc
lock
shlb
sbb
dec
sub
mov
sbb
test
cmp
mov
ds
xchg
and
sbb
clc
sbb
jle
mov
movsb
or
testl
inc
push
add
pushf
aam
jge
add
scas
mov
mov
imul
mov
mov
dec
mov
fucomip
aam
ret
loop
mov
xor
in
pop
lds
js
ret
adc
xlat
mov
sub
adc
dec
aaa
icebp
nop
bound
dec
xor
dec
fidivrl
rcrb
repz
sbb
push
mov
push
cmp
cmp
mov
sbb
mov
pop
pop
pop
loopne
sbb
jmp
fisubrs
jbe
xor
jle
sbb
adc
push
test
push
xor
fs
pushf
mov
jne
daa
leave
sbb
adc
icebp
adc
sub
xchg
fisubl
jae
test
sub
jbe
jno
fistps
sbb
ror
test
inc
mov
mov
lock
loope
subb
sbb
lods
sbb
pushf
call
out
movsl
xchg
sbb
mov
fcomps
stos
jbe
lahf
cltd
aad
jb
jg
mov
cmp
adc
jo
inc
sbb
push
inc
push
outsb
xchg
add
fdivs
lock
ficoml
mov
loope
cmp
insb
adc
sbb
inc
insl
fstpt
movsl
inc
sbb
xor
dec
loope
lods
sub
sti
xchg
cld
xchg
and
dec
leave
dec
rol
push
outsb
adc
jp
loope
mov
sbb
rcll
inc
xchg
sub
repz
xor
xchg
push
dec
push
jmp
mov
sbb
inc
pop
xlat
jo
loope
test
movsl
cwtl
push
adc
push
jae
fbld
rorb
shl
loopne
push
lods
rcrl
mov
and
and
inc
add
sub
repz
into
sbb
push
ss
aaa
sbb
adc
sub
sbb
in
sbb
loope
jb
jbe
push
popa
xchg
xchg
sbb
shl
aas
pop
mov
push
cmp
or
ret
sbb
in
inc
push
jmp
mov
sub
jno
sbb
movsb
outsb
dec
sbb
hlt
sub
xor
repz
sbb
push
iret
add
aam
jb
mov
push
mov
add
xor
je
cwtl
jns
dec
sbb
mov
cs
shl
push
imul
lods
xor
jg
scas
mov
sbb
pop
sbb
and
ret
leave
sbb
shrb
jae
push
fistps
mov
xor
gs
sub
and
test
pop
sbb
cltd
test
add
jp
es
mov
ret
xchg
aaa
cmp
sbb
nop
and
inc
bndldx
ljmp
fisubrs
adc
out
mov
lret
fnstsw
ficoms
sbb
jecxz
adc
lods
lcall
sub
stc
mov
dec
add
enter
imul
fcomps
pop
filds
icebp
test
ljmp
mov
lret
sbb
jp
in
jnp
jg
test
push
inc
lret
movl
xchg
pop
sbb
inc
mov
ret
sbb
mov
jecxz
or
es
iret
cwtl
fists
push
jge
in
andb
or
sbb
pushf
ljmp
sub
sub
jl
push
adc
lods
mov
dec
and
sbb
pop
sbb
cmp
adcl
mov
inc
jmp
adc
mov
add
adc
setb
lret
jb
mov
pop
pop
sbb
pusha
mov
mov
rcrl
inc
xchg
push
in
sbb
scas
xlat
sub
jmp
loop
cs
sbb
jae
les
xchg
ret
sbb
adcl
stos
sbb
lock
cmpsl
adc
dec
movsl
sbb
or
jae
iret
ret
aam
insl
popf
xchg
rcll
pusha
jmp
sbb
loop
mov
scas
mov
lret
cltd
dec
mov
jle
adc
push
cwtl
in
mov
adc
xlat
aaa
inc
sbb
fcoms
and
test
aam
xlat
sbb
pop
ret
mov
fistpll
shrl
mov
out
sub
sbb
ja
xchg
loope
sub
or
lret
cs
std
push
inc
dec
stos
outsb
repnz
imul
adc
push
insl
lea
scas
fistps
mov
pop
inc
add
mov
sbb
jle
sbb
cmpsl
jbe
mov
or
push
sbbb
push
ljmp
sbb
pop
loop
sbb
inc
jne
sbb
or
mov
sbb
jae
scas
adc
mov
xchg
clc
cwtl
es
inc
outsl
pushf
adc
enter
mov
xchg
test
cmp
imul
mov
testl
cmp
mov
mov
mov
cmp
add
cmp
stc
inc
xchg
mov
inc
int
les
in
fists
ret
push
dec
sti
pop
out
push
or
mov
push
mov
lea
push
subb
cmp
ret
ss
sbb
pop
add
and
shlb
push
xor
data16
icebp
nop
adc
sbb
leave
sbb
sub
cli
pop
bound
leave
test
cmp
inc
test
push
hlt
dec
xor
mov
adc
in
ljmp
or
sbb
sbb
test
mov
adc
adc
movsb
roll
repnz
in
sbb
add
fistps
ja
cld
loope
mov
sbb
or
sub
sbb
mov
fsubrs
jge
lret
sti
sbb
mov
sub
loope
xlat
test
sbb
push
jnp
mov
push
arpl
iret
adc
stc
jnp
and
cmp
jg
adc
push
inc
enter
and
cmpsb
xchg
mov
sbb
lahf
or
sbb
loope
pop
adc
add
dec
mov
jb
dec
js
adc
and
cs
sub
xchg
test
jle
xchg
or
nop
imul
dec
add
and
inc
cmc
xchg
jns
stc
mov
cwtl
cmp
ljmp
adc
cmp
xor
xor
push
arpl
dec
mulb
sub
pop
int
sub
or
idivb
sbb
mov
mov
cmp
xchg
movsl
sbb
addr16
daa
pop
clc
add
inc
inc
in
fsts
in
or
fisubrl
mov
shlb
cld
mov
push
pushf
sub
add
xor
ja
lds
xor
out
mov
sbb
sbb
repnz
add
pop
cmc
jl
xor
pop
push
fwait
gs
push
mov
in
psubq
outsb
int3
mov
lods
push
and
scas
pop
lahf
les
jnp
loop
test
push
sbb
xor
xchg
pop
orl
int3
jmp
out
pop
rclb
xchg
ret
mov
jecxz
cmpsl
imul
xchg
loope
fists
fwait
adc
xchg
sbb
lcall
sbb
and
mov
and
mov
xchg
adc
lds
inc
ja
insb
xchg
movsb
into
push
xchg
add
mov
std
mov
bound
out
sbb
in
fdivr
sbb
push
pop
sbb
mov
mov
xchg
mov
cmpl
sbb
xor
insb
mov
or
or
cmpsb
hlt
xlat
mov
psubd
or
cltd
cwtl
dec
jae
jl
rcrb
jmp
sub
int
daa
and
push
dec
sbb
les
jmp
sahf
add
sbb
clc
es
lret
das
ret
push
insl
xchg
sub
push
adc
fists
mov
mov
pop
cmc
inc
jg
pop
push
add
xchg
mov
xchg
out
scas
inc
jge
roll
mov
cmp
into
sub
fwait
adc
add
cmpsl
in
in
push
adc
clc
mov
in
scas
push
or
js
push
dec
rcrl
movsl
inc
xchg
mov
xlat
pop
sbb
and
and
pcmpgtb
sub
test
mov
imul
es
sbb
mov
cmp
movsl
daa
fs
stos
lea
sbb
repnz
dec
pop
out
pop
repnz
mov
movsb
mov
loope
push
into
cli
cmpsl
outsl
sbb
mov
xor
imul
push
inc
xchg
push
arpl
out
and
cmpsl
leave
mov
fsubs
jae
add
jne
ljmp
sbb
sub
les
test
es
sbb
or
sarl
lcall
fwait
mov
les
jp
sbb
adc
imul
jbe
imul
mov
sti
pop
jmp
sbb
stos
mov
xchg
cltd
sub
and
sub
movsb
inc
mov
pop
pop
cmp
mov
and
call
and
sbb
cmp
iret
xcrypt-ctr
cmpsl
sbb
jb
dec
cltd
fcmovne
sbb
addb
adc
adc
mov
sti
or
push
and
sbb
dec
in
push
btr
inc
sbb
cmp
leave
jne
lea
pusha
xchg
sub
sbb
pop
es
insb
mov
sbb
jmp
jo
dec
or
jecxz
pusha
xchg
addb
into
xchg
sbb
test
mov
cmp
sahf
push
imul
inc
mov
lods
xchg
shrl
mov
mov
lock
enter
imul
fmull
dec
fldl
sub
sahf
mov
cld
push
and
lods
sbb
pushf
inc
jno
lods
mov
bound
push
xchg
or
fyl2xp1
lea
or
into
arpl
or
addb
adc
adc
sbb
jb
lcall
mov
xchg
ja
sbb
mov
imul
push
nop
iret
push
scas
xchg
lahf
sbb
ljmp
loop
dec
fsubs
dec
adcl
data16
popf
je
dec
pop
fstp
mov
roll
sbb
mov
in
std
or
sbb
inc
mov
mov
mov
push
or
pop
push
jns
push
sub
sbb
push
xor
dec
sbb
or
mov
push
lcall
in
xor
mov
rcl
mov
call
fndisi(8087
sbb
aas
clc
xchg
aad
pop
and
out
push
add
inc
sbb
jae
ficoms
fistps
jg
leave
push
jno
and
dec
push
mov
hlt
jmp
pop
xor
mov
sbb
outsl
addr16
sbb
pop
and
sbb
sbb
jp
mov
fdivp
push
test
xor
mov
mov
sbb
xor
outsl
test
daa
push
lret
sbb
xor
cltd
jg
fs
push
push
ss
mov
das
clc
xor
fadd
jecxz
imul
or
gs
das
outsl
fistps
loope
in
mov
shlb
sub
sbb
test
mov
push
mov
sbb
push
ss
insb
xchg
pushf
pop
push
sbb
fisubs
mov
sbb
stos
adc
add
movsl
fs
xchg
cmpsl
xchg
and
push
movsl
sbb
stos
lret
sbb
xor
xor
push
scas
lcall
test
sbb
xchg
popa
xlat
jns
sbb
mov
ljmp
sbb
jns
rcrb
and
add
mov
int
push
sbb
push
fistpll
stc
jmp
in
cs
push
or
orb
cmp
mov
xchg
fsubrp
xor
popf
add
lods
outsl
and
push
jmp
xor
or
jge
fisubrl
int3
pop
and
sbb
inc
hlt
dec
sbb
pop
add
lock
aam
dec
or
loope
xlat
ja
pop
adc
js
fistps
test
mov
test
sub
popf
pushf
cmp
inc
sub
xchg
jecxz
ljmp
ret
adc
mov
adc
add
cmpsl
adc
cmp
xchg
sub
fistpl
movsb
lea
mov
add
shll
mov
ss
sbb
cli
enter
xchg
int
sub
xor
mov
sbb
inc
or
fldz
cmp
sub
mov
repnz
pop
push
add
jne
pop
xchg
fimull
push
dec
sbb
pop
xchg
pop
sbb
loope
cli
daa
sub
xchg
test
mov
lds
out
shlb
les
cltd
je
outsl
jbe,pn
push
sbb
lods
pop
cmp
loope
movsb
cmp
aad
sbb
pop
xor
ja
inc
sbb
stos
popf
jge
cltd
push
dec
sbb
movsb
and
in
cmpsl
push
popf
dec
or
pop
out
cld
mov
or
mov
popf
adc
sbb
lea
aas
cltd
adc
pop
pop
test
cmpb
sub
jno
and
mov
in
sti
in
ret
xchg
jecxz
dec
sbb
mov
sub
sub
pusha
scas
clc
add
mov
inc
ds
mov
data16
jbe
sbb
hlt
sbb
es
or
std
pop
xchg
xor
cmc
jo
repnz
iret
dec
outsb
ret
push
ret
dec
sahf
mov
sbbb
loopne
jb
rcll
push
sub
add
out
inc
add
jns
repz
push
andl
sbb
sbb
sbb
loop
outsb
repz
sti
pop
and
mov
test
sbb
es
push
loope
cs
arpl
and
insb
addb
sbb
push
rcrb
push
and
or
jno
jg
test
imul
rcrb
mov
addb
mov
mov
push
inc
dec
mov
jmp
push
xchg
sbb
fstl
sbb
cs
sbb
push
out
insl
push
std
fisttpll
xchg
and
push
shll
jle
pop
pop
ret
or
push
sub
push
cmovns
xor
mov
xchg
imulb
sbb
adc
fildl
mov
loope
jp
fnstcw
int3
loop
rcrl
xchg
xor
or
hlt
xchg
xor
mov
ljmp
sbb
arpl
out
push
sbb
int3
mov
sbb
imul
mov
pop
xor
das
xor
xchg
incb
negl
inc
and
or
int3
mov
add
sbb
enter
imul
popf
pop
roll
dec
xor
fildl
cmp
and
or
jbe
or
clc
dec
jmp
push
repz
insl
jnp
jo
test
pop
sbb
mov
xor
xchg
out
dec
adc
movsl
jmp
ret
inc
shlb
sbb
mov
adc
sbb
sbb
fbld
mov
sbb
and
test
sbb
lret
or
daa
cltd
cmpsl
sbb
dec
mov
pushf
test
push
lds
sub
push
push
fldt
fimuls
inc
xchg
xor
mov
pop
clc
imul
add
jge
add
jl
addl
lret
test
mov
movsb
lcall
imul
sbb
pop
dec
xlat
mov
lock
or
jl
inc
jae
jecxz
rclb
and
frstor
sti
adc
sbb
movsl
aam
mov
push
dec
sbb
in
mov
sbb
pop
mov
inc
rol
jmp
pop
mov
lds
xchg
rorb
addr16
pop
pop
lret
cmc
xchg
adc
les
mov
sbb
inc
out
test
inc
sbbb
xor
pop
sbb
sar
sbb
dec
loopne
fwait
xor
push
sbb
in
hlt
mov
aam
sbb
mov
pop
loope
orb
out
popa
xor
ss
nop
mov
test
cwtl
pop
sqrtps
jp
mov
sub
shll
pop
arpl
xchg
sbb
aaa
adc
lea
aas
adc
jge
es
push
jecxz
inc
cmp
outsb
xor
fs
aad
sbb
pop
push
or
mov
or
adcl
sbb
in
repz
xor
add
jae
negl
xor
fcompl
imul
adc
mov
cmc
scas
loop
push
sbb
adcb
fcmovbe
sbb
jecxz
mov
call
cli
stos
scas
loope
jge
das
dec
cwtl
add
lods
adc
stc
xchg
les
test
pop
xchg
push
popa
cli
pop
sbb
cmp
andl
mov
pop
sbb
mov
add
mov
push
stos
xchg
sbb
jg
sbb
movsb
adc
out
into
notl
xchg
cmp
fcoml
popf
mov
or
mov
sbb
jnp
jno
scas
cmpsl
mov
out
inc
rorb
movsl
pop
sbb
lret
xchg
pop
ja
sbb
pop
f2xm1
sbb
mov
sti
test
pop
mov
cli
ret
add
mov
push
xor
pop
aaa
leave
inc
or
inc
pusha
test
andl
in
cs
xor
mov
hlt
cmp
pop
xchg
or
mov
outsl
mov
mov
test
movl
es
cld
pop
push
loope
add
lods
loopne
cmp
mov
or
imul
stos
add
bound
sub
sbb
mov
or
in
gs
out
call
adc
jle
movsl
mov
clc
test
xchg
sbb
popa
cmpsb
outsb
sbb
in
idivl
stc
daa
test
adc
aam
mov
pop
scas
movl
sbb
das
mov
jno
inc
pop
jg
dec
icebp
xchg
rcrb
mov
lahf
rcl
stos
push
inc
push
pop
shl
repnz
sbb
mov
jmp
xchg
pop
push
or
popa
frstor
fadds
push
cmp
std
cltd
sub
and
sbb
fiadds
cs
arpl
push
cmp
jo
sbb
push
xor
movsb
or
sbb
cwtl
cltd
pop
xchg
xlat
testl
scas
xor
ficoml
sbb
mov
mov
shl
sbb
nop
loope
imul
ljmp
fsubrl
mov
out
mov
lahf
add
or
mov
mov
mov
xchg
mov
adc
dec
pop
fimuls
sbb
and
cmp
sbb
xor
std
imul
ljmp
cmpsb
mov
adc
sbb
push
aaa
call
or
pusha
int3
aam
adc
pop
add
pop
xor
mov
sbb
lret
mov
xchg
and
cmova
mov
sbb
test
sbb
es
and
cmp
repz
fistps
jp
sti
xchg
dec
decl
es
daa
mov
test
sbb
mov
pop
pop
lds
mov
inc
push
add
sbb
push
bound
or
cltd
clc
pop
in
fisubl
jae
add
mov
stc
mov
rep
sbb
xchg
gs
adc
add
lcall
push
addr16
dec
or
xlat
sbb
jbe
mov
or
aas
sbb
shlb
sbb
adc
lock
imul
adc
and
mov
pop
xchg
rcrb
pop
test
lock
push
sbb
es
cmp
fisubs
stos
jo
mov
test
cmc
sbb
mov
cmp
outsl
lods
mov
sbb
outsb
jge
nop
dec
mov
int3
outsl
movsb
dec
aaa
sbb
xor
sbb
daa
or
add
cs
inc
sbb
mov
gs
mov
rclb
pop
mov
mov
ljmp
adc
xor
insl
icebp
jae
sub
iret
sbb
dec
fcoms
sbb
dec
adc
xchg
push
xor
xor
cmp
cli
sbb
testl
sbb
std
negb
pop
mov
add
fwait
stc
add
stos
iret
inc
sub
inc
int
loope
cmpsb
loope
cmpsl
add
jp
cmp
scas
sbb
pop
add
fbld
out
dec
or
fisubrl
nop
sbb
loop
and
sbb
push
les
cmp
fcmovu
sub
sbb
lret
sbb
pop
dec
aad
sbb
mov
jge
push
rcrb
pusha
xor
xor
adc
insl
movsb
les
xchg
add
aam
push
xchg
cmp
imul
and
vmwrite
jl
add
adc
scas
test
divps
bound
test
into
sbbb
dec
cmp
pop
aam
outsl
push
cmp
or
xchg
in
sbb
jecxz
or
cmovle
outsb
fistpl
inc
pop
inc
sub
and
xchg
sti
jge
stos
sbb
stc
xchg
dec
jns
insl
sbb
sbb
mov
dec
sbb
pushf
sub
test
sbb
stos
sub
in
sbb
rorl
int3
sbb
mov
jb
adc
pusha
loop
pop
add
mov
clc
mov
inc
dec
dec
push
dec
and
loope
cmp
mov
movsb
inc
lahf
mov
sbb
xchg
pop
fsub
sbb
sub
sbb
in
cld
cmpsl
mov
adc
inc
or
cmp
or
test
mov
mov
push
js
push
sbb
jmp
aas
rcrb
sbb
adc
mov
jmp
fstl
sbb
adc
cmp
cmpsb
cmp
dec
adc
inc
sbb
and
inc
repnz
push
loope
insl
aam
mov
scas
xchg
out
xchg
testb
adc
lock
dec
fstpl
jecxz
xor
and
push
cmp
sbb
shll
sbb
sub
sbb
sbb
ret
push
sbb
movsl
xor
sub
orl
lods
xchg
lock
dec
leave
push
lods
fimuls
jp
lahf
movsl
jl
sahf
inc
mov
add
mov
xor
mov
sbb
ja
inc
push
jne
adc
int3
js
hlt
repnz
fistl
inc
jns
rcrb
imul
push
bound
and
dec
adc
adc
jno
and
imull
mov
movsl
lret
adc
arpl
xor
lds
sbb
outsb
gs
lea
mov
or
dec
repz
jecxz
mov
scas
sub
cltd
dec
jnp
addl
lret
mov
jmp
jno
and
pushf
lcall
shlb
je
inc
jecxz
or
sarb
jbe
push
imul
or
outsl
mov
in
inc
negl
bnd
xchg
xor
mov
push
dec
mov
mov
lds
insb
push
test
mov
adc
bound
std
xchg
inc
clc
mov
jl
imul
stc
push
sti
xchg
das
jp
movsl
add
test
adc
adc
lcall
subl
xlat
icebp
dec
jne
and
fistps
call
mov
jmp
jae
fadds
xor
push
lods
and
incb
mov
and
sbb
dec
pop
or
mov
sbb
stc
ret
xchg
xchg
mov
daa
fs
cmp
icebp
xchg
test
test
adc
outsl
out
cmp
cmc
in
pop
pop
js
sbb
scas
aad
mov
xchg
mov
xchg
jge
lret
movsb
sbb
or
push
aaa
xchg
sbb
and
dec
and
movsl
test
add
sbb
mov
inc
lret
in
cmpsl
js
cmp
xor
inc
test
sbb
push
jecxz
dec
sbb
push
dec
outsl
sbb
lahf
adc
add
outsb
xor
pop
pop
push
mov
mov
sbb
fimuls
repnz
js
pop
add
xor
pop
loop
shrl
sbb
jo
sbb
outsl
int
jb
sbb
xor
dec
inc
ss
sbb
inc
inc
pop
fptan
push
mov
aam
cwtl
int3
xlat
xchg
cltd
rclb
sahf
ficoml
jnp
test
stos
xchg
pop
imul
jno
es
loope
loope
sti
inc
xchg
mov
pop
mov
and
fisubrs
sbb
rorl
push
mov
fdivs
imul
rcl
neg
xchg
out
mov
adc
movsb
adc
or
xor
jmp
in
into
or
mov
leave
sbb
out
or
inc
lret
loope
outsl
mov
mov
sbb
lds
jb
mov
lods
lcall
sbb
adc
dec
cmp
and
std
popa
dec
add
add
adc
cltd
add
pop
scas
lods
pusha
mov
lea
mov
adc
or
jmp
sub
mov
psraw
pop
orb
sbb
lods
or
sbb
in
push
sbb
fmuls
addr16
and
loopne
inc
or
out
xchg
sbb
nop
dec
fstpl
add
dec
ja
jp
mov
ret
sbb
adc
ds
sbb
loope
push
sub
lahf
xchg
inc
fwait
and
sbb
xchg
pop
and
call
jp
push
xor
fisttps
xchg
add
pop
andb
aad
mov
xchg
imul
push
ja
xor
adc
adc
mov
popa
sbb
sub
adc
loop
rcrl
and
and
add
fadd
sar
mov
jmp
movsb
sbb
push
je
sub
sbb
xchg
daa
sbb
push
mov
stc
sbb
scas
call
sbb
pop
and
xor
outsb
push
or
sbb
xor
and
mov
jo
mul
sbb
inc
jg
push
into
mov
scas
inc
movsb
xor
repz
jp
out
sbb
negb
test
loop
shlb
lea
inc
jge
shr
pop
ja
sbb
pop
adc
mov
out
jl
add
enter
add
fidivs
mov
mov
out
das
inc
inc
loopne
adc
pop
outsb
xchg
pop
adc
mov
dec
cmp
mov
push
test
and
movb
pop
int3
nop
divl
xor
sbbl
mov
movsb
pop
pop
cmp
in
jmp
daa
mov
popa
sbb
jp
push
pop
or
or
data16
mov
add
inc
not
sbb
sbb
sbb
aad
aam
mov
sbb
icebp
jbe
and
mov
out
stc
adc
das
mov
sbb
inc
pop
dec
inc
mov
mov
shll
push
add
inc
lds
addl
push
inc
adc
cmp
inc
or
bound
out
jae
push
sbb
pop
mov
icebp
add
mov
pop
mov
xor
movsl
mov
sub
xor
test
lcall
push
test
pop
and
xlat
or
mov
mov
jecxz
or
inc
add
inc
sbb
rolb
cmp
and
sbb
enter
lock
xchg
sbb
cmp
sbb
daa
jl
ret
sti
cs
sbb
push
pop
push
gs
sbb
jle
imul
into
sbb
sbb
movsb
sbb
ror
mov
int3
jo
test
fwait
sbb
sahf
mov
mov
push
aam
and
in
leave
neg
in
je
or
js
insb
push
rcrl
sbb
lods
mov
pop
xchg
addr16
icebp
add
cmc
add
push
mov
add
sbb
rcl
push
push
dec
mov
push
fstpl
cmpsl
pop
cmp
or
enter
sub
inc
xor
popa
pop
sbb
sub
mov
mov
stos
shl
sbb
sbb
jecxz
pop
int
sbb
xor
jns
pushf
jne
mov
pop
sbb
cmp
loop
lods
loope
sub
sub
mov
insb
pop
push
test
and
int3
sub
inc
clc
pop
ss
inc
jbe
inc
sub
and
insb
dec
jb
sbb
mov
addr16
mul
mov
mov
push
shll
sbb
scas
pusha
push
imul
inc
jo
divl
pop
loope
js
add
cltd
jnp
mov
sbb
cltd
std
test
jg
adc
and
push
push
sbb
add
popf
popa
aas
inc
inc
test
aad
sbbl
dec
outsb
mov
minps
inc
pusha
fldt
add
sbbb
sub
sub
push
into
adc
mov
jl
or
mov
mov
adc
hlt
push
iret
pusha
sbb
lock
push
push
sbb
lods
ss
repnz
adc
cmp
or
or
adc
jo
cmpsl
inc
cwtl
test
sbb
test
clc
push
in
sahf
sbb
xlat
xchg
dec
xor
pop
xchg
mov
cmp
hlt
in
je
sbb
or
mov
dec
mov
jns
shll
nop
add
push
push
adc
cld
xchg
aaa
sbb
sub
push
inc
push
rcl
mov
sbb
int3
ret
adc
fwait
add
push
pusha
pop
adc
pop
add
arpl
jnp
subb
scas
push
push
loope
js
int
xchg
sbb
sbb
xchg
xchg
dec
mov
jno
sbb
mov
setl
mov
lahf
ror
mov
je
pop
sub
and
xor
mov
cmp
xor
adc
sbb
xor
push
xchg
xchg
push
mov
loope
std
cld
xor
xchg
cmp
inc
ret
push
mov
lahf
or
ja
sbb
lods
cld
pushf
push
push
sbb
out
dec
xor
les
xchg
and
adcl
sbb
add
repnz
pop
addr16
cwtl
and
stos
sbb
xor
mov
cmp
sbb
jbe
rcl
sbb
push
les
push
mov
jp
mov
push
jns
pushf
neg
sbb
loope
loope
inc
int3
adc
add
sbb
popa
sbb
lret
fnstenv
sbb
fcomps
add
popf
in
loop
push
fcompl
scas
adc
sbb
mov
pop
js
and
xchg
push
scas
cmp
xor
jnp
push
jo
sbb
les
xor
xchg
or
mov
popa
inc
xchg
sbb
mov
ret
sbb
cld
arpl
jecxz
lods
decl
sbb
sbb
fwait
jl
inc
ret
insb
cmp
adc
sbb
xchg
ljmp
testb
fcoms
push
inc
sub
sahf
lds
or
insb
enter
push
jl
std
cmp
mov
scas
mov
add
jecxz
adc
mov
add
xchg
fwait
add
xchg
jno
notl
lcall
jecxz
cmpsl
cmpsb
add
pop
sbb
fstps
jo
or
in
push
loope
xlat
dec
notb
call
stos
push
and
inc
adc
popf
mov
cmpl
xlat
push
sbb
or
stc
repz
adc
cs
cli
pusha
adc
fidivs
pop
ret
enter
stos
cld
push
jae
je
adc
mov
sarl
sbb
fdivrl
add
jge
ret
movsl
pop
xchg
sub
hlt
cmp
mov
mov
int3
clc
jnp
aaa
out
xchg
mov
and
mov
adc
mov
in
lcall
js
clc
inc
rcll
sbb
sub
mov
icebp
fmulp
xchg
sbb
int
dec
jl
mov
adc
inc
loope
outsb
inc
cli
dec
xchg
negl
mov
push
mov
fs
fwait
call
std
jo
pop
pushf
xor
pop
sbb
in
inc
stos
ror
cmc
xchg
sbb
loopne
cmpsl
sub
and
int
add
rcrb
call
repnz
push
mov
loop
rclb
dec
xchg
push
test
icebp
int
push
loope
adc
xor
test
mov
mov
mov
push
lret
jo
adc
sbb
add
dec
arpl
dec
lock
les
jg
loopne
add
ret
xor
imul
sub
sbb
xchg
add
mov
xor
pop
or
and
cmp
dec
pop
mov
push
test
imul
push
mov
rcl
test
dec
ljmp
sbb
paddq
sbb
cmpb
sub
je
and
enter
mov
sbb
cmp
adc
mov
leave
out
cmpb
pop
pop
pop
xorl
out
fists
push
lret
sbb
hlt
xlat
jle
push
cs
lods
push
out
pop
xchg
sbb
adc
test
iret
jmp
scas
push
jnp
adc
dec
and
out
push
fcompl
push
push
sbb
mov
pusha
pop
pop
inc
movsl
pcmpeqb
sbb
fdivrl
and
sbb
cmpl
popf
and
inc
mov
mov
sbb
xchg
mov
sub
ret
leave
mov
adc
pop
mov
sahf
sbb
or
push
sub
in
lods
hlt
push
xor
data16
jnp
jecxz
cmp
cmp
arpl
cmp
and
inc
cmp
inc
adc
adc
pop
fcoms
sbb
mov
hlt
imul
add
adc
addl
sbb
xor
nop
mov
jge
adc
mov
dec
adc
int3
rol
stc
add
dec
sbb
adc
mov
mov
inc
test
or
iret
vcvtss2sd
and
scas
push
or
cwtl
inc
lock
jp
testl
pop
cmp
cs
fdivrs
jbe
outsl
cmc
jbe
sbb
pushf
mov
push
sbb
xchg
jns
sbb
fisttpll
das
push
and
adc
shll
mov
xlat
mov
and
sub
sarl
imul
inc
stos
pop
adc
shll
leave
imul
lods
mov
push
adc
pop
into
adc
cwtl
imul
mov
jnp
stos
adc
lret
inc
cmp
loop
push
push
or
je
jmp
fs
add
jo
mov
xchg
add
jge
mov
mov
sbb
sbb
cmp
dec
jmp
adc
sbb
call
lds
arpl
dec
push
xchg
cwtl
call
dec
push
or
clc
movsl
js
or
sub
insl
mov
pop
lret
jl
xor
movsl
call
cmp
push
xor
test
cli
lcall
or
sbb
jmp
mov
call
icebp
in
xorb
push
pop
aad
mov
adcl
xor
loope
adc
ljmp
iret
dec
rclb
xchg
call
sbb
ret
and
fisttpll
jle
mov
pusha
loope
addr16
repz
pop
rclb
pop
push
repz
or
sub
insl
xchg
testb
andl
sbb
pop
dec
sbb
xor
and
mov
in
mov
sahf
add
mov
add
sbb
pop
push
sub
iret
popa
mov
icebp
xchg
test
lods
sub
cmp
dec
ljmp
cmp
sbb
adc
jb
adc
gs
mov
sbb
cltd
js
pop
add
pop
sbb
pop
adcl
inc
adc
int
adc
lods
xor
pushf
or
lods
inc
jno
mov
adc
and
repnz
pop
dec
mov
cmp
sbb
add
imul
test
sub
add
pop
sub
inc
cmp
idivl
pop
outsb
lea
mov
iret
sahf
adc
add
cmp
adc
loope
sub
cmp
mov
dec
out
mov
jae
ret
shrl
dec
add
fdivl
sbb
lret
sbb
jp
sbb
aas
sbb
mov
loope
sub
cmp
mov
push
out
test
sbb
clc
mov
sbb
mov
bound
jo
add
loope
jbe
xchg
push
cwtl
dec
xchg
cli
push
push
mov
sbb
xor
leave
push
clc
enter
jne
pop
mov
mov
sbb
jg
sbb
mov
cmp
jl
sbb
push
xchg
lods
sub
ret
testl
lock
jmp
sbb
inc
outsl
mov
push
sbb
sub
fstps
adc
mov
cwtl
sbb
inc
jbe
add
pop
sbb
dec
or
add
inc
inc
sbb
mov
movsb
sbb
sub
ret
out
sbb
outsl
sbb
popa
fcoml
xlat
xor
sbb
jmp
xorb
push
lods
xchg
orb
pushf
sbb
aad
lahf
sbb
outsl
jno
shrl
rcrb
xlat
xor
push
adc
or
loope
sbb
dec
ret
sbb
jmp
dec
xchg
test
sbb
xor
lds
xor
dec
inc
gs
rcll
std
mov
inc
and
xor
dec
insb
mov
sub
jb
and
jge
sbb
xchg
xor
mov
sbb
js
sbb
and
sbb
arpl
test
add
scas
int
adc
cwtl
jnp
xchg
mov
mov
rcrl
and
test
sbb
aaa
aad
dec
ss
out
icebp
pop
add
rcr
neg
sbb
sbb
sbb
imul
adc
dec
mov
xchg
and
pop
ja
shlb
mov
sbb
ss
imul
mov
aaa
sub
xchg
gs
sbb
pop
add
gs
scas
dec
sbb
xchg
aam
mov
mov
lret
pop
scas
xor
sahf
jnp
sbb
fld
jmp
cld
jno
rcrb
ljmp
and
rcpps
ds
sbb
iret
xchg
sbb
sbb
push
xchg
daa
fwait
sbb
dec
out
xor
outsb
sbb
fnstcw
lds
aam
inc
push
rclb
push
bound
push
xchg
clc
push
test
pop
popf
sbb
add
stos
add
adc
xor
mov
int3
sbb
xor
inc
loop
jle
add
bound
mov
call
aad
sbb
jae
dec
pop
shrb
mov
sbb
add
push
and
adc
adc
sbb
or
dec
sbb
mov
pop
sbb
xchg
insl
sbb
sarl
das
pop
cmp
inc
mov
addr16
mov
cmp
test
sub
nop
adc
or
mov
test
sbb
ret
int3
or
aaa
push
lods
cmp
dec
lds
in
and
pop
or
in
jbe
push
or
push
inc
add
out
inc
lret
adc
stc
jns
ret
adc
xchg
test
icebp
aam
int3
sub
clc
xor
add
loopne
sbb
mov
adc
inc
dec
sbb
jmp
test
dec
in
push
sbb
ror
std
add
sbb
iret
push
jle
lahf
nop
repz
scas
in
es
shlb
xor
lcall
inc
xlat
pop
xchg
arpl
sbb
fsts
push
xchg
loop
test
push
mov
adc
fidivl
push
adc
sub
mov
pop
sbb
shlb
cli
lods
xchg
pop
es
inc
inc
dec
push
pop
fs
outsb
push
lock
mov
jmp
cmp
xlat
xor
repz
imul
jnp
mov
pop
and
mov
and
sbb
imul
frstor
and
fidivrs
fldcw
add
xchg
out
sub
pop
mov
sbb
jnp
and
jecxz
mov
jb
cmp
and
adc
and
out
sti
pop
adc
inc
and
in
insl
sbb
jae
addr16
mov
jle
sbb
xlat
cld
ds
or
fimuls
jb
mov
sbb
jbe
pop
push
mov
test
iret
bnd
ss
shrl
adc
jo
inc
loopne
repnz
and
mov
adc
in
sbb
sbb
xchg
aaa
dec
ja
ret
faddl
or
movsl
push
pop
push
sbb
sbb
cld
sahf
daa
jp
xchg
sbb
test
sbb
movsb
mov
movb
or
push
sbb
aas
mov
and
dec
sbb
stc
pop
fcmove
push
mov
push
repnz
repz
lods
pop
adc
xchg
mov
in
push
sbb
inc
push
sbb
test
lahf
or
sbb
xor
loope
jecxz
sbb
and
xchg
lock
mov
fmull
fstl
loope
test
adc
nop
push
clc
test
std
adc
adc
rol
mov
and
ret
aad
stos
push
test
adc
push
push
cmp
mov
mov
add
cmp
lret
cwtl
sbb
xchg
adc
pop
push
rcrl
xchg
cmp
jb
nop
std
mov
ret
add
jg
jns
mov
sbb
sbb
es
add
loop
jns
orb
push
cmp
cmp
das
bound
adc
lea
pop
and
pop
sbb
jl
mov
scas
sbb
sbb
stos
fbstp
movsb
pop
insl
sbb
push
inc
test
sbb
mov
loope
inc
inc
imul
mov
xor
sbb
leave
jnp
gs
loope
cmpsb
lret
addr16
xchg
shrl
inc
sbb
jmp
sbb
shlb
inc
mov
jecxz
loope
or
jno
xchg
fildll
mov
je
lret
loope
sti
pushl
popa
xchg
daa
std
pop
ficomps
dec
gs
xor
push
sub
in
adc
outsl
dec
push
loop
outsb
cmp
sbb
loope
xchg
inc
rorb
clc
hlt
push
push
pop
xlat
outsb
aas
clc
add
movsb
or
xchg
call
jmp
sbb
lret
dec
scas
xor
dec
sbb
push
lcall
adc
in
jle
clc
xlat
mov
dec
dec
mov
sub
or
sar
jae
adc
data16
pushf
sbb
and
gs
lock
arpl
pop
and
mov
ljmp
ret
and
loope
jo
std
dec
sub
addr16
imull
pop
sub
fcomi
cmp
jg
out
rclb
hlt
or
push
iret
xchg
aaa
dec
sub
jge
into
add
fmulp
lcall
fwait
xchg
cmp
jo
adc
adc
mov
shl
in
pop
sbb
js
mulb
fstps
cmp
rorl
xchg
push
xchg
mov
and
sbb
dec
or
mov
adc
in
or
aaa
shlb
clc
test
cmp
test
sbb
mov
repz
push
bnd
popa
sbb
pop
pop
and
adc
jle
mov
cmpsl
mov
fstpt
int
sbb
cli
pop
fstpl
mov
jecxz
fstps
lret
rolb
sbb
sti
jne
pop
jmp
fimull
xlat
adc
pop
xor
test
adc
cwtl
add
or
les
pop
in
push
je
sbb
lret
imul
adc
pop
jle
test
sbb
sbb
jecxz
movsb
sbb
into
mov
mov
sbb
out
cmp
mov
or
out
push
xchg
add
jnp
push
jb
inc
dec
mov
inc
xchg
mov
mov
add
sub
dec
adc
int3
mov
sub
mov
arpl
jecxz
add
cli
adc
mov
leave
and
sbb
pop
divl
cmp
pop
test
int3
push
pop
pop
hlt
fcmove
dec
fstl
cmp
or
mov
cs
jae
sub
movb
iret
rorl
push
sahf
in
lock
sbb
stc
test
jle
push
shl
fucompp
bound
adc
popa
mov
sub
cmc
fcompl
pop
inc
mov
sbb
in
movsb
cld
push
loope
add
mov
inc
cmp
test
mov
sti
sub
xor
popa
loopne
lock
jl
xchg
aas
jno
mov
repnz
mov
add
sbb
imul
sbb
sub
loope
out
andb
insl
sbb
xor
test
lahf
rcr
jb
subl
fcomps
pop
and
jmp
sahf
pop
sub
mov
lea
test
push
cli
sbb
lret
push
and
sbb
cmpsl
and
das
inc
push
jno
mov
fcoms
xchg
out
ret
dec
sub
push
imul
xor
sbb
icebp
xorl
pushf
int
sbb
pop
scas
das
scas
jp
orb
or
xchg
mov
shrl
pop
nop
aaa
mov
inc
pop
mov
sbb
ja
pop
aad
dec
cld
sbb
jnp
sbb
add
jns
xchg
jo
ficomps
add
int3
das
jno
add
adc
je
incb
pusha
icebp
and
push
dec
push
mov
icebp
sbb
mov
adc
stos
adcl
xor
cs
gs
push
cwtl
cmp
cli
jle
pop
cltd
stos
rorb
xor
sbb
push
icebp
dec
xchg
daa
loopne
or
xor
xor
adc
xchg
fstps
js
sbb
sub
or
push
jmp
aaa
test
and
jecxz
insb
scas
or
aaa
popa
and
inc
movsb
push
cltd
add
pop
add
ss
jle
incl
mov
rclb
adc
shll
push
push
pop
out
insb
call
sbb
cs
call
in
clc
mov
sub
fs
mov
push
dec
movsl
jl
jbe
ret
inc
or
fldt
adc
jbe
in
stos
push
mov
ljmp
dec
call
or
bndldx
mov
sarb
fucomi
and
cmp
mov
lods
lock
repnz
test
sbb
xchg
call
mov
insl
out
jmp
adc
fadds
aad
testl
pop
sbb
sti
ljmp
lcall
jge
and
sbb
mov
adc
aaa
sbb
jnp
dec
sbb
push
dec
aam
test
dec
mov
inc
xchg
rorb
lea
cmc
rcl
pusha
call
loope
push
sbbb
hlt
daa
icebp
sbb
jb
sub
cltd
dec
mov
xor
fwait
popa
outsb
data16
dec
push
cwtl
jbe
andl
or
repnz
push
arpl
pop
mov
mov
sbb
push
js
add
ret
dec
cmpsl
jo
popf
int
sbb
dec
pushf
jmp
mov
out
mov
out
jae
xchg
and
push
loop
sahf
sbbl
jne
lods
lahf
sbb
lds
mov
hlt
mov
pop
push
add
cli
cmp
mov
cltd
xor
dec
adc
sbb
inc
dec
test
sub
xlat
push
adc
ljmp
sbb
mov
outsl
cs
mov
xchg
pop
cltd
mov
repnz
sahf
mov
push
jno
adc
xor
cmp
call
test
inc
cmp
mov
mov
push
loope
out
inc
pslld
pop
sbb
sahf
adc
mov
sub
mov
adc
stc
adc
out
xchg
pop
and
loop
aas
mov
sbb
or
push
xlat
pusha
jmp
sub
dec
ds
bound
sbb
cmp
loope
pop
hlt
jbe
dec
jnp
test
fcompl
sbb
xchg
mov
sbb
inc
test
add
cld
xor
dec
lret
pop
sahf
aas
test
push
shl
jbe
mov
shl
lods
xchg
mov
add
cmp
cmpsb
mov
sbb
shlb
adc
or
cs
cmc
cld
xchg
loop
test
adc
aad
xchg
xor
xor
push
ss
popa
out
add
sbb
aas
shr
in
arpl
jne
adcb
test
adc
out
push
ret
pop
lods
sbb
int
xchg
iret
push
sbb
mov
cmpsb
xchg
pop
adc
push
inc
push
shlb
leave
inc
inc
push
sbb
mov
sbb
jmp
inc
je
cs
sbb
stos
or
test
mov
jg
inc
mov
std
xlat
pop
push
and
fstpl
jae
mov
pop
sub
out
aaa
or
sbb
adc
push
mov
fs
cmp
sbb
cli
int
inc
fisubs
adc
outsb
clc
push
pop
cmpsb
repnz
pop
jno
jae
jmp
insl
jp
lods
mov
in
cld
ljmp
sbb
movl
jns
aad
sbb
bsf
and
jg
test
xchg
sbb
in
loope
xlat
repnz
mov
aad
repz
jno
sbb
and
or
push
or
mov
lahf
imul
pop
mov
adc
xor
and
adc
mov
xor
pop
cwtl
pop
out
push
or
push
pop
sbb
sbb
mov
test
ret
push
lret
mov
xor
mov
out
sbb
aad
ret
rol
and
mov
jecxz
sbb
or
outsl
ret
jbe
int3
in
mov
test
and
push
movsb
sbb
pop
mov
push
stc
jb
lret
xchg
pusha
adc
aam
mov
pop
cmpsb
cmp
mov
rcrl
cli
fdiv
push
adc
sub
cmp
sbb
movsb
mov
clc
inc
or
leave
pop
fs
addl
xchg
xor
sbb
jl
dec
mov
lret
pop
idiv
xor
xlat
cmp
js
loope
in
mov
stc
xchg
add
mov
call
loope
mov
cmp
jns
notb
fistps
xor
lahf
adc
lock
or
in
orl
cmp
mov
loopne
xchg
xchg
out
std
lods
sbb
scas
push
cmp
loope
inc
mov
inc
cmc
sbb
icebp
testb
jb
pop
mov
xchg
out
ljmp
jne
int3
or
sahf
or
rcl
push
dec
sbb
jae
aam
fsubl
mov
sbb
mov
daa
js
and
loope
int3
push
pop
cs
jg
sbb
mov
icebp
mov
ja
mov
mov
sarb
sbb
outsb
jo
adc
push
lret
cmp
adc
loope
aaa
lock
sbb
cmp
jge
cmp
loope
sahf
rep
add
sbb
jle
mov
cmpsl
pop
ficomps
add
jo
ss
add
mov
and
or
flds
mov
push
loop
dec
adc
push
pop
jmp
xor
fiaddl
pop
test
sbb
fistl
mov
add
xchg
adc
xor
mov
clc
cmp
mov
add
mov
enter
cmp
push
sub
das
mull
cmp
xlat
mov
push
stos
out
popf
cmpsb
add
loope
cmp
int3
jl
sbb
xchg
pop
popf
adc
shlb
daa
out
dec
loope
cmc
fsubr
xchg
mov
adc
sbb
and
jp
xchg
ja
fcmovnbe
shrl
mov
rcrb
test
cmp
cltd
dec
mov
cmp
mov
jne
pop
addr16
icebp
sbb
inc
pusha
sti
mov
das
mov
in
mov
sub
cmpb
xor
pop
or
inc
sbb
repnz
jo
lock
test
nop
jae
ss
js
std
dec
mov
mov
pop
shrl
mov
mov
in
cmpsb
les
and
stos
sub
jmp
fcoml
and
subl
mov
es
in
mov
mov
mov
rcrb
leave
pop
popa
cld
cmpsb
sbb
push
pop
rorl
in
xchg
repnz
sbb
push
lahf
nop
push
cmp
sbb
cmp
push
jno
ja
in
cmpsb
jl
int3
shr
icebp
scas
xor
lods
sbb
ss
push
loope
or
mov
cs
sbb
popa
cmp
je
dec
sbb
fucom
push
enter
sbb
push
jle
sbb
std
stos
shll
and
inc
push
stos
inc
mov
or
and
nop
ret
pop
jo
push
jne
mov
sarl
add
rcll
mov
pop
xor
pop
jp
add
in
imul
sbb
cmp
testl
sarl
add
nop
leave
and
inc
aad
mov
add
int
mov
sbb
jbe
add
mov
fcoms
xchg
jl
sbb
out
scas
lea
sbb
lds
aam
js
rcrl
mov
das
mov
adc
sbb
enter
imul
cmpsl
pop
sbb
xor
fcompl
lods
mov
jl
dec
loopne
pop
sbb
sbb
or
sub
push
xchg
adc
jmp
lret
xor
les
cmpsb
xor
mov
fildll
jmp
in
push
sar
mov
dec
mov
push
mov
or
inc
dec
inc
jbe
adc
add
xchg
adc
push
xchg
cmp
sbb
xchg
dec
call
cmpsb
ret
add
mov
in
addr16
sbb
sub
lds
and
mov
cwtl
sahf
mov
cwtl
bound
mov
add
clc
sub
xchg
adc
push
int3
add
mov
pusha
shll
jl
dec
fisttps
add
ja
xor
lcall
jb
in
xchg
xlat
sbb
add
mov
xor
add
jae
mov
sbb
subl
sbb
out
mov
leave
mov
and
push
call
out
pop
sub
inc
sbb
scas
push
insl
repz
push
push
sbb
adc
data16
addr16
fidivl
stos
cmp
mov
aad
loope
sbb
mov
int3
fistl
sbb
mov
mov
aaa
fiadds
fwait
or
sbb
lahf
in
inc
xorb
clc
xchg
sbb
mov
push
or
int3
or
rclb
and
or
sub
xorl
pushf
sub
mov
enter
sbb
push
movsl
dec
stos
out
mov
enter
dec
std
jge
jb
add
push
in
mov
les
push
lea
pushf
pop
jge
jmp
outsb
pop
stc
dec
jl
pop
fwait
sub
add
inc
pop
and
jb
cmpsl
push
loop
xchg
jbe
popa
xor
jmp
out
inc
jns
out
leave
add
fstps
xor
xorb
xlat
cmc
mov
jne
inc
inc
jae
push
or
test
jp
sub
xor
pop
mov
mov
xor
pop
sbb
mov
mov
and
les
std
aaa
outsl
js
test
sbb
mov
pop
imul
mov
mov
inc
xor
jle
stos
sbb
push
jg
cmpsl
jb
movsb
sub
into
sbb
mov
je
dec
popf
sbb
or
js
out
sbb
sti
or
jg
cmp
sbb
sbb
dec
mov
sbb
sub
daa
sbb
sti
ja
sub
and
xchg
mov
sbbb
adc
jecxz
push
pusha
cmc
sbb
ds
sbb
dec
sbbb
sbb
push
fstpt
adc
arpl
insb
lods
dec
xor
or
cli
scas
push
test
mov
xor
sahf
shll
dec
stc
adc
popf
loopne
adc
roll
sbb
mov
fbld
es
ja
lret
and
push
xchg
dec
sub
sbb
cld
mov
aaa
mov
inc
fcomip
xchg
mov
sbb
xchg
cld
cwtl
xchg
adc
popa
sbb
lods
add
shl
test
adc
pushf
subb
stc
sbb
push
aad
mov
daa
lods
and
or
adc
add
shlb
into
test
lahf
push
push
ret
inc
mov
inc
js
fadds
je
mov
jmp
call
cmpsl
enter
cltd
push
test
dec
sub
push
add
aad
sarl
popf
hlt
jns
sbb
push
ja
or
sbb
fcoms
xchg
outsb
adc
push
pop
rolb
mov
and
sbb
dec
xlat
mov
test
inc
sbb
xchg
xor
sbb
xor
cmp
outsb
xchg
nop
sbb
test
ljmp
sbb
mov
out
lcall
jns
add
fidivs
xlat
inc
mov
into
scas
adc
sbb
lods
decl
sbb
ss
mov
sbb
sbb
dec
or
mov
in
xor
xchg
cmp
sbb
jmp
jl
jbe
jp
or
stos
xchg
stos
adc
sbb
mov
sbb
xchg
loop
xor
clc
sbb
sub
xor
jmp
inc
sbb
pop
xor
mov
jecxz
cs
fisttpll
into
lock
xor
xchg
mov
sbb
dec
mov
daa
xchg
pop
fstl
dec
xchg
dec
mov
je
push
dec
fmul
xlat
lods
cmp
push
bswap
pop
push
andl
xchg
cmp
push
popf
bound
lods
mov
clc
xchg
xchg
fwait
pop
jae
mov
cmp
push
add
xchg
test
dec
mov
loop
outsl
ror
xor
aad
lcall
or
mov
push
xor
sbb
lret
lods
fwait
jae
test
cmp
xchg
fidivl
dec
dec
pop
adc
lock
or
dec
sbb
scas
mov
call
xor
jns
add
sbb
addr16
and
pop
ds
mov
pop
out
mov
xchg
in
jns
ud1
mov
mov
sbb
fwait
pop
dec
ljmp
push
popa
not
sbb
stos
xor
sbb
mov
or
sbb
xor
pop
enter
lock
pop
adc
pop
xchg
clc
bound
outsb
sbb
dec
imulb
ficoms
push
lds
dec
sbb
pop
jns
cmp
das
and
lea
mov
push
pop
loope
jae
stos
adc
adc
jle
and
cmpsl
and
jnp
xor
cmp
adc
inc
out
add
out
sbb
mov
mov
pusha
shrb
popa
jmp
daa
aad
scas
pop
sbb
imul
sub
dec
sbb
pop
frstor
cli
test
inc
sbb
cld
dec
mov
xchg
adc
loope
les
sbb
outsl
mov
sbb
cmp
sub
sbb
les
pop
sbb
jmp
stos
push
icebp
inc
sbb
jge
sbb
movsb
or
clc
into
fnsave
and
xlat
inc
jg
and
add
push
push
mov
test
out
xchg
ds
jb
xor
mov
adc
sbb
not
or
and
pop
dec
and
imul
or
jmp
inc
cwtl
mov
add
pop
cwtl
adc
jae
xchg
sub
fisttpll
sbb
mov
jno
ljmp
adc
imul
push
sbb
repnz
sbb
insb
sbb
mov
or
add
mul
adc
sub
jnp
sub
in
adc
add
jecxz
sbb
mov
xchg
mov
lea
loope
movsl
or
jne
aaa
sub
push
test
pop
mov
sbb
jae
nop
mov
jo
push
mov
pushf
mov
out
sbb
mov
scas
stos
rcll
sub
push
push
add
jbe
xchg
pop
push
fwait
sbb
cmpsb
dec
mov
sar
sbb
xor
je
lahf
std
jmp
adc
loope
inc
repnz
sbb
jmp
and
sbb
and
jg
lret
sbb
paddw
sbb
and
inc
imul
mov
cmp
push
outsb
dec
push
sub
xor
rcll
lods
sbb
fmuls
leave
jge
mov
mov
lock
cwtl
push
push
outsb
jp
inc
pop
mov
ror
jle
in
push
cwtl
sbb
pop
add
sbb
xchg
ret
js
push
sbb
or
adc
lret
adc
into
movsl
nop
mov
stos
push
popf
int
sbb
lods
mov
fs
sbb
loopne
lock
add
dec
xchg
out
int3
sbb
test
push
sbb
pop
pop
and
push
sbb
inc
scas
jb
sub
sbb
xchg
enter
push
ret
sbb
fxtract
dec
scas
jl
push
sbb
push
xor
test
mov
xor
xchg
dec
sub
inc
sbb
lods
sarb
sbb
mov
sub
xchg
or
shlb
sbb
xchg
xor
pop
and
mov
sbb
and
daa
je
xchg
dec
adc
pop
lock
jne
xor
repnz
imul
xchg
push
bound
and
mov
clc
sbb
mov
dec
lret
movl
xchg
sbb
xchg
pop
movsl
sbb
out
lret
jecxz
call
or
shl
loop
jbe
sbb
xlat
mov
cmp
movsl
pop
xchg
or
add
jae
adc
rcr
mov
roll
push
ss
pop
lock
insb
cmpsb
and
cltd
pusha
push
dec
stos
mov
pop
dec
push
mov
fld
in
fldt
pop
cmpsb
push
mov
sbb
cmp
cs
addr16
lcall
xchg
jb
mov
mov
mov
leave
mov
xchg
pop
lret
test
sbb
movsb
inc
mov
sbb
jmp
fwait
sbb
pop
in
mov
sbb
js
faddl
pop
mov
or
sub
sbb
mov
icebp
jo
hlt
mov
sbb
xchg
and
jnp
mov
mov
cmp
push
es
adc
subl
cmc
mov
jmp
scas
cmp
fistps
fs
icebp
orb
cmp
pop
sbb
cld
pop
push
push
stos
add
ret
inc
xchg
clc
xchg
insl
cmpsl
sbb
pusha
int
and
xor
fsts
add
loopne
add
rclb
out
sbb
loop
adc
gs
adc
clc
pop
test
add
sub
cmp
rcrl
cmc
es
aas
push
dec
dec
scas
sub
pop
sbb
adc
ljmp
push
dec
dec
sbb
imul
adc
jno
popa
sbb
add
mov
repz
mov
movsb
cld
cmpsb
and
xchg
mov
xchg
cmp
sti
mov
push
out
pop
cli
sbb
pop
sub
sahf
out
lds
sbb
sub
fstpt
mov
and
sbb
mov
sbb
daa
cmp
icebp
bound
jo
mov
add
in
and
pop
pusha
or
les
ds
outsl
popf
rcrw
and
push
cltd
jp
adc
pusha
call
or
or
jb
test
adc
sbb
ss
ja
int
pop
adc
dec
out
fstpt
sbb
inc
insl
mov
in
mov
add
in
inc
ja
nop
int3
fcompl
repz
sub
sbb
pop
cld
repz
in
sub
add
xor
sbb
pop
leave
hlt
mov
lock
mov
rcll
pushf
dec
mov
stc
inc
pop
sub
bound
lods
xor
cmpsl
pop
inc
jno
cld
fisubl
shlb
xor
mov
push
inc
jge
mov
sbb
xchg
fcoms
int
sbb
lahf
mov
add
xor
repnz
mov
dec
cmpsl
and
cmpsl
jecxz
adc
divb
and
inc
lcall
mov
adc
pushf
sbb
dec
lret
push
fwait
xchg
je
pop
imul
sbb
mov
push
loope
and
or
pop
rolb
rcrl
out
shrb
xchg
mov
mov
mov
cmp
lods
jae
inc
lea
push
aad
mov
sbb
out
xlat
inc
add
mov
lahf
push
fiadds
add
adc
xchg
lods
pop
test
cmp
sbb
push
dec
sbb
push
fstpl
enter
imul
adc
ljmp
outsb
aam
fs
xchg
pop
add
sub
inc
push
xchg
sbb
adc
jnp
test
outsl
mov
push
sub
push
push
inc
pop
or
jmp
imul
addr16
mov
std
mov
adc
int
imul
mov
xchg
cmp
out
sbb
in
sbb
outsl
lods
and
sbb
lahf
push
shlb
sbb
sbb
sbb
test
scas
sbb
or
lret
clc
loop
mov
sbb
shlb
sbb
xchg
les
mov
jo
repz
cmp
hlt
sub
aaa
in
scas
and
or
inc
mov
call
sahf
shlb
xlat
sbb
sbb
lcall
or
outsl
adc
repnz
leave
adc
lret
sub
ficomps
sahf
fcomps
idivl
inc
ret
sub
insl
push
clc
or
xor
les
lret
orl
adc
mov
cmpsb
iret
or
mov
addr16
cmp
sbb
and
sbb
cmc
int3
int
sub
aaa
sbb
in
dec
scas
dec
test
adc
jbe
mov
adc
js
adc
sub
in
int3
popa
mov
or
sub
jae
pop
ja
jo
icebp
fmuls
add
xor
aaa
addr16
mov
adc
clc
pop
scas
fistl
push
imul
sbb
add
repnz
push
push
pop
sbb
push
pop
stos
sub
adcb
adc
sbb
out
cmc
pushf
sbb
mov
out
mov
sbb
push
loop
fwait
in
push
jo
jl
stc
inc
or
fidivrl
push
in
test
jle
pop
sub
or
sbb
cli
adc
ret
es
cmpsl
sbb
dec
nop
dec
mov
sub
in
enter
inc
sbbl
outsl
lcall
cmp
imul
in
mov
or
add
add
loope
pop
stos
or
mov
cmpl
fldenv
out
jl
data16
sub
dec
mov
add
jns
sbb
out
pop
scas
push
sbb
mov
fcomi
xchg
js
subb
repnz
jecxz
sbb
mov
add
and
cld
fwait
dec
xlat
out
add
mov
lea
leave
test
adc
pop
in
sbb
or
fisubl
lods
cmp
test
push
sarb
pop
mov
lods
imul
mov
out
jo
sarl
test
mov
roll
sahf
xchg
mov
jg
scas
and
aam
mov
adcl
push
sbb
inc
ja
xchg
outsb
xlat
jnp
sbb
jo
sbb
pop
aaa
sbb
add
adc
sbb
cltd
push
mov
sbb
sbb
adc
std
sbb
imul
mov
in
fldl
std
sbb
push
mov
dec
push
ljmpw
xchg
rcrb
jle
adc
loop
rorb
xorb
sub
sbb
sbb
outsl
pushf
pop
fcomps
gs
add
jmp
add
xor
test
jbe
lea
shlb
sbb
std
lret
sbb
jbe
int
mov
jae
sbb
aam
sbb
mov
add
test
sbb
xor
jno
or
mov
out
mov
dec
outsb
mov
mov
jns
scas
mov
dec
int
jp
cs
mov
rcrb
adc
cmp
nop
out
cmpsl
jp
jecxz
jmp
outsb
pop
xchg
aad
dec
pusha
sbb
or
add
or
push
loope
add
pop
aaa
repz
push
lods
das
stos
adc
adc
pop
scas
dec
and
dec
iret
mov
xchg
fsubl
enter
imul
sbb
inc
std
test
sbb
loopne
inc
sbb
imul
sub
jnp
lods
jg
inc
and
lret
nop
ret
xor
shl
push
jb
jno
sbb
fmull
fwait
mov
jmp
sub
lea
pop
fistps
cmp
xchg
inc
out
sbb
inc
dec
adc
aad
pop
sbb
mov
cmp
inc
push
or
dec
sub
ficompl
adc
fsubrp
dec
insb
adc
add
popf
cmp
mov
sti
test
adc
clc
sahf
cmpsb
or
in
jns
push
pop
push
jmp
sbb
cmpsl
xchg
or
outsb
rcr
movsl
test
xor
sbb
sub
xor
test
fiadds
out
sbb
jecxz
mov
call
adc
lock
or
shlb
sbb
and
sbb
adc
call
lea
mov
xchg
mov
jae
stc
pop
dec
pop
adc
sbb
sub
test
mov
adc
mov
leave
data16
pop
push
add
or
sbb
xor
and
pop
int3
inc
dec
cmpsb
aaa
adc
add
or
pop
aam
sub
add
in
and
imul
sbb
sbb
cmp
cmp
icebp
scas
sbb
push
sub
fcompl
cltd
dec
int
lret
mov
adc
cmp
adc
xchg
cmpsb
das
push
test
shlb
sub
mov
sbb
mov
sbb
push
sysret
xor
sbb
sbb
cmpsl
in
out
int
sbb
cmc
xor
dec
sub
xchg
inc
adc
dec
out
mov
aam
cmp
cmp
ja
mov
repz
mov
adc
xchg
sbb
lods
sub
mov
cmpsb
cmp
fstpt
es
andb
fs
stos
imul
sbb
mov
sbb
rclb
cmp
imul
adc
divl
push
jb
insb
loope
push
stos
or
xchg
cltd
mov
fsubl
movsb
into
mov
sbb
sarl
mov
popf
jae
js
inc
cmpsb
andb
lods
jmp
sbb
inc
add
jb
sub
fistpl
inc
sbb
addb
xor
sti
xchg
cmp
and
iret
fists
outsb
std
dec
mov
repz
inc
leave
xchg
xchg
loop
push
sar
pop
sbb
shlb
sbb
hlt
sbb
push
cld
repz
lods
sbb
mov
fildll
sbb
pop
cmp
lcall
shll
in
mov
in
push
mov
rclb
jbe
sbb
popf
faddl
jp
sub
sbb
mov
xchg
sub
rorb
push
inc
icebp
jmp
mov
sub
jp
mov
and
cmp
ficoms
mov
call
pusha
loope
push
adc
loopne
add
inc
push
push
aaa
pushf
jb
sbb
add
sbb
pop
andb
xchg
adc
sbb
repz
or
jmp
arpl
push
fsubs
rcll
movsl
mov
insl
shlb
sbb
test
adc
xlat
mov
push
xor
mov
pop
push
addl
pop
repz
dec
sub
sbb
add
push
sbb
pusha
lea
push
stos
stos
adc
sbb
pop
test
mov
sbb
imul
cwtl
loope
dec
es
lahf
js
push
bnd
loope
stos
or
fcoms
sarl
mov
lock
into
mov
gs
sbb
mov
xchg
loope
ficoms
cli
ljmp
loopne
add
sbb
fisttpll
and
xchg
sbb
mov
mov
mov
xor
imul
sbb
xchg
or
gs
xchg
sub
repz
mov
pop
sbb
adc
sub
xchg
dec
xchg
int3
jnp
mov
push
jmp
and
xchg
push
inc
sahf
inc
sbb
cmp
mov
sbb
mov
pusha
or
into
xchg
jbe
mull
das
fildll
pop
xchg
out
push
and
lock
or
daa
cmp
mov
adc
outsl
out
lds
adc
das
add
daa
push
and
sub
fscale
add
clc
xor
sbb
pop
add
jnp
dec
push
xchg
and
sub
aas
sbb
addl
mull
xchg
xchg
sbb
in
mov
repz
push
call
or
adc
jae
adc
test
andl
pusha
xchg
aaa
clc
sbb
lock
in
and
sbb
into
mov
sbb
mov
sbb
in
push
aas
mov
sbb
push
and
sbb
orb
aaa
inc
sbb
out
outsb
mov
xchg
sbb
mov
mov
int3
fisubrs
aaa
adc
popf
loopne
jl
imul
add
jno
daa
aam
sbb
mov
lods
cmp
or
push
pusha
insl
sarl
xor
mov
pop
int3
add
lds
mov
push
call
js
sbb
xor
mov
push
outsb
lods
addl
cmp
daa
sbb
sbb
lea
outsb
negl
repnz
add
mov
leave
fldcw
jo
test
dec
xchg
shr
sbb
int
test
xor
or
xchg
fnstenv
inc
addl
data16
or
mov
sbb
js
jne
jo
sbb
iret
push
test
stos
das
sbb
ds
pop
pop
jp
std
loope
mov
mov
sub
mov
or
adc
mov
sbb
inc
inc
outsl
scas
push
mov
push
cmp
enter
mov
bound
mov
mov
adc
cltd
fistl
inc
jg
sbb
mov
mov
sbb
popf
rcl
adc
jo
out
jge
rcl
leave
sbb
out
mov
pop
xchg
out
add
sbb
sub
test
rolb
cmp
and
hlt
cmc
sbb
push
cltd
and
in
fwait
mov
mov
test
leave
insb
push
loope
and
in
xchg
xor
data16
push
cwtl
xor
push
jnp
aaa
inc
add
or
lods
jge
dec
xchg
mov
lods
xor
sbb
add
insl
dec
iret
lret
and
inc
sahf
sub
insb
dec
adc
add
loopne
divb
mov
mov
sbb
or
repz
lods
pop
fcompl
adc
xchg
popa
subl
xchg
xchg
enter
push
lock
dec
aas
sbb
popa
mov
and
xlat
loope
cmp
push
adc
call
mov
inc
sbb
stc
dec
scas
dec
jnp
mov
cmp
das
xchg
sub
inc
stos
cmpsb
loope
mov
pop
sbb
xchg
xor
rcrl
inc
movsb
lcall
fcomp
xchg
sub
jmp
sahf
add
sti
mov
stc
push
push
dec
cmp
inc
push
popa
pop
fdivrp
pop
loope
sti
and
and
sbb
cmpb
mov
in
enter
shrl
xchg
subl
push
xor
jae
loope
ficomps
cltd
cmp
sbb
cwtl
pop
push
jp
repnz
shl
mov
sbb
ja
jns
rolb
loope
cs
dec
sbb
nop
lock
dec
push
test
fsubrp
adc
mov
cmp
xchg
js
sbb
add
mov
dec
and
les
sbb
inc
sbb
shrb
push
pop
les
iret
fnsave
insb
loope
shll
sbb
jno
sbb
xor
mov
pop
rcll
or
xor
xchg
push
fiaddl
lret
dec
add
imul
inc
dec
adc
jmp
xchg
shlb
pop
sbb
sahf
in
fisttpl
jae
mov
sbb
rcrl
xchg
push
std
pop
sbb
cmp
dec
xchg
daa
repnz
pop
mov
pop
or
mov
xchg
mov
repz
pop
into
sahf
cmp
jne
iret
sbb
fimuls
in
xlat
cld
outsb
sbb
add
mov
pop
mov
xchg
add
push
popf
xorb
dec
add
lcall
mov
rcl
cwtl
push
sbb
inc
dec
movsb
pop
or
push
mov
fmull
cmp
pop
jmp
fadds
cwtl
fists
stos
in
sbb
aad
sbb
das
mov
sbb
sub
sub
sbb
enter
loopne
aaa
xchg
push
cmc
sbb
or
insb
dec
or
js
fiaddl
and
push
in
and
mov
int3
pop
pop
into
adcl
fwait
mov
jae
in
sbb
je
jmp
call
in
lock
or
js
dec
std
shll
repz
pop
add
addr16
cmp
loope
fildl
fistpll
sbb
mov
cmpsb
xchg
sbb
inc
aaa
cmp
push
xchg
pop
sbb
sub
int
out
repnz
mov
pop
ljmp
imull
xor
or
xor
sbb
mov
xor
cmp
pushf
dec
sbb
inc
out
shr
mov
sbb
mov
add
cmp
test
jne
sbb
fimull
push
push
test
fcomi
sub
out
sub
sti
pop
fimull
outsl
test
xor
scas
jmp
ds
xchg
xor
jbe
sub
jecxz
jp,pt
sbb
add
pop
repnz
rcrb
add
mov
ja
cltd
hlt
push
jle
push
dec
in
sbb
and
sbb
fs
add
inc
jae
jo
jns
add
mov
js
out
icebp
inc
cmp
aaa
lods
adc
aas
xchg
test
fcmovnbe
mov
adcb
sbb
xchg
sti
es
xchg
dec
jnp
mov
test
inc
cmp
leave
push
xchg
or
sbb
fwait
jmp
popa
ret
inc
sbb
sub
cs
loope
push
xorl
mov
cs
sbb
pop
test
iret
dec
popl
xor
sahf
jno
jo
orb
sbb
mov
inc
shll
sbb
dec
addr16
push
ja
mov
fcoml
lret
xchg
xchg
sub
sbb
and
insb
in
sbb
test
inc
movhps
mov
jne
adc
or
and
lods
pop
aas
jbe
or
lock
push
push
addl
cmp
sbb
jno
and
cmpsb
rorb
sbb
add
lahf
sub
lods
inc
pop
ja
loope
fwait
and
call
push
stos
sbb
je
adc
in
outsl
push
test
pusha
add
mov
std
aam
jle
sbb
inc
inc
adc
xorb
aad
addr16
jmp
mov
test
sbb
enter
ljmp
imulb
sbb
add
mov
cld
cwtl
and
in
jp
inc
pushl
sbb
shll
mov
nop
lret
jl
das
pop
inc
ljmp
sarb
mov
cmp
out
push
fs
and
sbb
sub
mov
xor
ret
pop
add
aaa
and
or
movsb
and
cmp
inc
push
lcall
mov
leave
sbb
xor
mov
loope
mov
and
xchg
xlat
mov
scas
rorl
mov
push
xchg
jae
inc
test
adc
lock
mov
pop
shll
int
inc
rcl
xchg
sub
or
jbe
test
loopne
sbb
fistps
xor
and
push
mov
push
lcall
add
lahf
daa
or
inc
lock
adc
std
lret
test
push
insb
cmp
aas
mov
bound
movsl
sbb
call
sub
lock
cmpsb
sub
xchg
sbb
das
mov
je
sbb
jl
pop
mov
lret
lcall
add
or
add
mov
mov
xlat
addb
popf
mov
xor
jmp
adc
cmp
aam
js
cwtl
and
sbb
lock
insb
sbb
and
add
rcrb
mov
push
pop
adc
fdivrl
and
mov
pop
sbb
cmp
and
dec
mov
shl
cmpsl
mov
cmpsl
rcll
mov
adc
mov
clc
repnz
and
mov
out
xor
xchg
imul
mov
inc
fistl
aam
test
mov
cmp
in
adc
or
adc
inc
rorl
aas
cmpsb
adc
insb
sub
sub
sbb
adc
xchg
idivl
sbb
dec
pop
add
jmp
lret
adc
inc
push
sbb
push
adc
outsb
mov
jp
sbb
hlt
cmp
jo
add
test
lea
push
bnd
sbb
pop
xor
sbb
xchg
lret
inc
jle
movsb
sbb
fldcw
pop
xor
mov
pushf
addr16
pop
inc
inc
sbb
dec
out
lret
lds
pop
mov
out
loop
sbb
out
out
sbb
ficoml
lds
sub
pop
rolb
aad
rolb
sbb
adc
mov
push
mov
mov
call
mov
add
mov
adc
mov
jne
outsb
pop
sbb
sbb
xchg
push
stos
and
jns
cltd
cs
jg
roll
jne
and
sbb
pop
mov
fcomi
inc
in
ja
out
sbb
jns
adc
pop
sbb
bound
sbb
into
popf
out
jb
addr16
adc
movsl
add
sub
aad
adc
les
int3
and
adc
sbb
mov
outsl
rcll
lahf
sbb
leave
cmp
sbb
in
test
pop
test
xchg
mov
jb
hlt
outsl
lret
mov
ret
mov
adc
lods
push
lea
xchg
pop
fmul
jo
jns
sbb
fsubrl
or
es
sahf
mov
add
test
adc
shrl
ds
and
pop
xchg
jle
fstps
ja
xor
fsubrl
in
sbb
or
add
andb
cld
and
sub
mov
sbb
sbb
add
jle
popa
cmp
sahf
iret
cmc
aas
dec
sbb
arpl
and
sbb
jmp
push
rcrl
icebp
gs
jge
sub
insl
xchg
sbb
sbb
and
xlat
xor
ret
adc
jns
sti
cmp
push
movsl
fsubrs
in
mov
jmp
xchg
mull
dec
loope
add
sub
sarl
adc
inc
mov
mov
and
inc
cwtl
pop
out
mov
pop
mov
sbb
cmpsl
dec
ret
push
dec
sub
push
adc
flds
push
sbb
xorb
inc
pushf
pop
sbb
push
add
outsb
scas
sbb
fcom
cwtl
push
pushf
cmp
sbb
fwait
mov
xor
sbb
sbb
or
inc
or
push
sbb
imul
and
loop
pop
dec
adc
call
aam
mov
adc
clc
inc
sbb
adc
aas
orl
sbb
test
inc
mov
push
pop
sbb
jle
icebp
cmp
adc
sbb
int3
push
or
inc
xchg
les
sub
xlat
jp
out
sbb
lret
push
xor
xchg
std
pop
xlat
inc
sbb
shr
cmp
xchg
mov
jecxz
push
orb
int
jbe
cmpsl
push
scas
fbstp
inc
mov
insl
sti
jp
sbb
fildll
sbb
in
aas
dec
dec
out
or
cmp
lds
jmp
insb
xor
add
outsl
bound
jle
cmp
sbb
xchg
mov
xchg
mov
jmp
call
lret
pop
adc
orl
jno
in
sbb
pop
xlat
jl
xchg
mov
call
cmp
orb
and
rolb
loope
jns
mov
imul
or
or
xchg
fidivrl
enter
jge
mov
cmp
add
inc
mov
cmp
imul
out
jb
cmc
push
hlt
lcall
in
sbb
xchg
push
xchg
outsl
jge
shlb
and
push
stos
fiaddl
fwait
inc
les
in
test
sub
aam
int
aam
iret
and
in
dec
insb
or
js
loope
roll
adc
sub
mov
adc
xchg
dec
sub
sub
out
adc
mov
adc
int
mov
outsb
mov
jno
push
es
jmp
fs
test
shlb
pop
repnz
cmp
pop
fidivs
sbb
out
stc
adc
dec
popf
cmpsl
sub
rclb
and
das
pushf
mov
dec
sbb
xchg
adc
mov
jne
int3
sbb
loop
xchg
pop
lods
push
and
adc
ficompl
xor
xor
pop
sbb
xchg
gs
or
lahf
es
xchg
xchg
dec
jl
iret
mov
adc
add
cmp
sub
outsl
mov
xor
ficompl
fwait
pushl
negl
cli
pusha
xchg
sub
stos
sbb
ja
jg
in
pop
movsb
push
mov
in
push
rcrl
daa
push
inc
add
das
out
mov
call
mov
bndldx
es
xchg
aad
loope
in
mov
sub
or
jle
adc
and
push
das
mov
push
xchg
dec
mov
adc
xchg
sub
sbb
cmp
decb
fsubs
mov
cmp
push
mov
sbb
xchg
mov
sbb
jo
addl
stc
iret
pop
ret
fcompl
inc
sahf
or
sbb
fs
loopne
into
sbb
test
mov
in
fxsave
stc
sbb
fsubl
ss
sub
sbb
and
lods
sub
int
sbb
sbb
mov
add
scas
popa
xor
pop
push
mov
les
mov
repz
scas
stc
xor
fcoml
sbb
push
aam
jp
arpl
pusha
lea
push
sbb
test
sbb
xor
cmp
inc
jmp
sbb
adcl
ja
out
daa
jmp
add
jbe
sbb
jge
in
test
movsb
enter
stos
cmp
sbb
and
das
sbb
mov
hlt
sub
xchg
mov
ret
mov
xor
pop
mov
shr
subb
mov
push
cli
cmp
xor
add
push
or
aad
adc
cmc
xchg
add
loope
imul
pop
lret
sbb
inc
sti
in
xchg
ljmp
adc
out
add
pop
cmc
jns
push
sbb
fidivrs
adc
xor
adc
ljmp
rorl
ret
xorb
fsubs
enter
pop
imul
add
xchg
mov
jmp
ja
dec
mov
sbbl
lcall
mov
adc
add
fdivl
sub
sbb
jg
xor
sbb
shr
jne
mov
sbb
xchg
jno
sbb
pushf
pop
jecxz
mov
jbe
push
pop
aas
sub
xor
scas
test
push
mov
pop
test
sbb
imul
push
mov
lds
fldl
push
insb
dec
cwtl
mov
sbb
xor
bound
jns
dec
mov
rclb
fsubs
push
cs
or
or
inc
pop
sbb
lret
stos
aaa
mov
adc
movsb
mov
stc
clc
xlat
xchg
lock
leave
mov
add
and
sbb
xchg
and
mov
mov
push
sbb
lret
pop
mov
lods
xor
adc
push
nop
cmp
xchg
sbb
adc
dec
cmc
mov
or
fmull
test
inc
mov
xchg
daa
jmp
jge
test
mov
int3
lock
sbb
mov
popf
fwait
xchg
mov
dec
mov
or
aam
push
cmp
inc
sbb
in
repnz
or
js
lret
loope
movsl
lcall
fnstsw
adc
fsubl
cld
icebp
xchg
insl
sub
sbb
mov
pop
pop
sbb
out
mov
int3
fstpl
fwait
push
push
inc
mov
loope
icebp
into
adc
repnz
fwait
pop
fcoms
xor
sbb
xchg
sbb
mov
bound
aad
data16
jge
stc
cwtl
lds
movsl
out
sbb
movsb
fldcw
scas
inc
loop
jmp
lret
leave
jne
cmp
out
test
scas
xorb
sbb
add
ds
scas
dec
imulb
mov
sbb
mov
into
lahf
push
push
xchg
fs
imul
mov
div
push
jno
sbb
out
lcall
cmp
push
cltd
jo
loop
sbb
ds
sbb
mov
gs
test
add
add
xchg
int3
sbb
xchg
mov
push
outsl
out
xor
jmp
fstpl
or
sub
in
sbb
ja
sub
icebp
or
adc
adc
sbb
jmp
dec
test
lods
pushf
push
adc
js
leave
sbb
jecxz
inc
lret
pop
pop
sbb
adc
ds
push
aas
stos
hlt
loope
cmpsl
inc
push
pop
sbb
pop
lods
xchg
mov
sbb
imul
in
adc
ss
or
xchg
jp
dec
jns
and
ljmp
inc
mov
sbb
popa
testb
jge
ja
xchg
inc
rcr
inc
ret
xchg
notl
sbb
fadds
cld
mov
adc
insl
pop
sbb
inc
xchg
jae
mov
sbb
mov
lods
popa
inc
stos
pusha
push
ljmp
into
arpl
test
and
stc
jmp
or
outsb
jg
push
sbb
cmpsb
lods
sbb
mov
jno
jmp
xlat
adc
add
xor
xor
sbb
push
into
inc
inc
je
loope
sbb
mov
out
cmp
outsl
xchg
lcall
add
mov
fbstp
jno
out
adc
inc
inc
movsl
roll
sbb
rcrl
pop
or
sbb
testb
shrl
xor
or
push
adcl
jbe
add
enter
jb
cwtl
sbb
xchg
push
mov
rcll
cmp
adc
nop
xchg
xor
faddl
xor
fwait
aad
int3
mov
out
sub
add
sbb
fiadds
call
lahf
enter
lret
adc
adc
loope
fcomp
and
cwtl
iret
dec
dec
std
add
scas
sbb
outsb
jecxz
dec
imul
stos
pop
gs
dec
xor
mov
sbb
fiadds
test
or
daa
scas
mov
add
push
lcall
xchg
icebp
sbb
xchg
addb
inc
out
xchg
add
rclb
in
iret
jl
ds
push
or
cltd
adc
outsb
fbstp
ret
jne
xchg
cwtl
and
sbb
ljmp
popa
repnz
mov
xor
adc
sahf
push
shlb
pushf
sbb
insb
dec
loope
push
inc
adc
sub
bound
adc
clc
adc
sahf
rol
dec
call
scas
xchg
sti
insl
cmpb
push
movsl
push
cmp
sub
xor
faddp
mov
sbb
in
in
mov
xlat
sbb
jb
mov
and
adc
or
push
clc
jae
repnz
rcrb
adc
jne
sbb
and
lock
aad
dec
out
or
mov
pop
cli
dec
sbb
ret
subl
cmc
in
cmp
push
shlb
mov
arpl
mov
sbb
cltd
jle
sti
insb
sbb
notl
push
sbbb
jge
xchg
jp
repz
sbb
int3
jns
aaa
popa
xor
test
ja
xor
cs
sbb
aam
dec
nop
mov
in
pop
cmp
je
sahf
js
popa
pop
sub
shll
inc
xor
xor
movsb
inc
icebp
pop
push
dec
sub
jg
push
dec
cld
out
mov
adc
cwtl
loop
and
push
mov
cmp
in
mov
lods
jmp
lock
adc
sbb
pop
lods
sbb
stos
push
fcompl
pushf
xchg
xor
or
inc
pop
shlb
mov
pop
pushf
dec
lea
mov
out
shr
jae
lds
mov
leave
cmp
out
and
test
psubb
ficoml
addb
pop
and
cmp
lcall
loope
cmpl
call
out
jnp
xchg
sbb
sub
imul
jle
xor
loope
fadds
mov
add
jg
lcall
into
xchg
sbb
cmp
add
popf
and
stos
inc
adc
sbb
sahf
or
adc
sub
jb
push
dec
mov
loopne
icebp
sbb
imull
adc
pop
adc
inc
dec
fisubl
xor
pop
dec
popf
dec
test
adc
imul
sbb
sti
pop
or
xor
and
js
dec
push
inc
hlt
push
mov
push
stos
add
push
shrd
or
cmpsb
test
test
cmpsl
lock
dec
xchg
inc
lahf
loopne
pop
imul
mov
and
out
sbb
and
fdivl
out
xchg
popa
push
push
sub
sbb
lret
loop
sub
sbb
inc
and
loope
mov
sbb
xchg
add
cmp
sbb
inc
pop
push
push
or
loope
arpl
cltd
lods
cmpb
push
sbb
outsl
inc
lods
jne
dec
xchg
callw
jno
sbb
aad
rcrb
push
les
inc
mov
scas
loope
xchg
sub
fcomps
jns
pop
jmp
sbb
out
cmp
adc
pop
enter
mov
push
push
and
xor
adc
inc
cmp
sbb
adc
add
ret
addl
xchg
mov
mov
adc
xlat
sbb
subl
xor
and
push
movmskps
scas
sbb
repz
enter
sbb
sbb
rcrl
push
sub
enter
sbb
lea
ljmp
fcompl
mov
aam
dec
fldl
push
repnz
cwtl
mov
sbb
sub
das
and
pop
push
adc
je
jp
cmp
dec
icebp
cli
mov
jmp
mov
enter
xchg
imul
sub
fwait
stos
cltd
xor
mov
repnz
push
repz
test
push
or
mov
cmpb
repz
lret
sbb
xor
lds
sbb
inc
inc
scas
ds
mov
cli
mov
cmp
or
push
and
mov
sbb
inc
loope
ficompl
ljmp
adc
mov
sbb
fmuls
mov
sbb
xchg
push
sbb
xchg
lds
pop
pop
mov
mov
cmp
in
cmp
mov
jb
daa
mov
adc
add
mov
sbb
js
jl
aad
movsl
stc
cmova
mov
jnp
lcall
or
in
out
adc
xlat
in
aas
sbb
rclb
leave
sbb
xchg
jae
xor
push
adc
push
adcl
popf
and
dec
andl
lock
sub
and
sbb
rorb
mov
loope
ret
pop
xor
ret
sub
insl
pop
test
mov
cmp
jg
rcrb
sbb
and
pop
pop
fists
pop
or
sub
xchg
jns
pop
jge
push
sbb
add
sbb
add
dec
fwait
sub
mov
dec
adc
addr16
sbb
std
dec
sbb
sbb
sub
sbb
inc
mov
and
aas
cli
sub
adc
pop
insl
movsl
sub
in
jmp
mov
adc
push
xor
mov
subl
lods
adc
and
ja
imul
adc
pop
or
jb
stos
insb
insl
sub
inc
out
adc
pusha
test
fiadds
andb
inc
outsb
inc
lcall
sub
jmp
cli
fscale
sbb
ljmp
adc
lcall
jno
inc
jbe
add
sub
scas
adc
push
cli
push
mov
into
adc
add
mov
xor
xchg
sbb
add
push
les
sahf
push
mov
mov
xchg
imul
push
iret
pop
push
jp
add
fadds
stos
dec
jle
sbb
dec
xchg
mov
movsb
sbb
into
sub
cmp
jo
adc
lret
mov
mov
dec
out
pop
pop
paddsb
mov
push
mov
sbbb
lret
add
mov
inc
sti
adc
and
movsl
aam
mov
cmp
sbb
pusha
test
push
sbb
inc
or
pop
out
arpl
es
in
add
loopne
pop
shrb
adc
ss
into
outsb
test
iret
pop
sub
xlat
inc
mov
loope
int3
out
loopne
imul
arpl
add
ret
cmp
pushf
in
ja
fsubrs
fmull
push
or
sub
daa
out
sbb
inc
xchg
pop
sub
sbb
jo
mov
loope
mov
xchg
popa
pop
icebp
or
pop
pusha
push
pop
arpl
xor
inc
mov
push
cli
jo
push
sbb
lds
lods
mov
xchg
adc
loope
mov
and
sbb
dec
lahf
lret
cld
inc
adc
mov
cmp
jmp
lret
pop
es
jle
mov
sbb
cwtl
test
add
pop
pop
and
and
mov
lods
mov
sbb
and
cmpb
sti
xchg
bound
push
mov
push
mov
push
xor
sbb
iret
push
sub
push
xor
pop
mov
xor
add
fwait
jp
loopne
xchg
and
cmp
mov
sbb
jg
mov
inc
daa
add
ljmp
push
xor
sub
xor
pop
std
test
xchg
sbb
mov
cmpsl
das
jmp
aam
adc
push
sbb
xor
ljmp
je
push
lods
sahf
mov
adc
mov
repnz
icebp
sbb
mov
andl
sbb
repz
sbb
push
mov
jecxz
lods
sbb
push
mov
jl
test
sbb
adc
pop
pop
fs
sbb
inc
and
jmp
ret
rcr
adc
sbb
push
lret
test
dec
sbb
or
fists
sbb
adcl
xor
in
push
aad
mov
sub
in
push
push
sub
lds
into
shrb
pop
dec
sbb
cmp
cmp
daa
sbb
fcmovne
jns
adc
add
sub
jle
dec
and
gs
stc
loop
movsl
out
adc
cmp
pop
adc
jmp
jecxz
xlat
sbb
inc
and
call
push
mov
fmuls
stos
rcll
orl
repz
lock
dec
push
arpl
cld
shll
mov
addl
pop
push
inc
push
xchg
cmp
sbb
addr16
mov
sbb
add
pop
push
cli
call
mov
stos
popa
push
ja
sbb
sbb
sbbb
loope
imul
cli
sbb
rclb
mov
in
insb
xchg
or
mov
fs
dec
mov
fidivs
sub
inc
push
sbb
sbbb
sub
push
pop
add
ud1
loop
adc
inc
mov
mov
xor
das
movsl
sbb
adc
mov
mov
fmull
adc
iret
scas
mov
arpl
pop
jl
dec
ret
fldl
xchg
test
add
sbb
mov
sub
push
push
pop
xor
sbb
mov
fucomp
fildl
outsb
jle
out
jecxz
cld
fsts
dec
inc
sbb
mov
stc
sbb
cmp
add
xchg
xchg
sbb
mov
mov
test
pop
mov
dec
es
mov
dec
sahf
add
mov
les
aad
test
xchg
pop
outsl
fsubs
push
shl
xor
cmp
cs
mov
popf
idiv
cmp
add
fs
sbb
jecxz
mov
mov
push
in
into
mov
push
fcmovne
popf
push
jmp
sbb
lcall
out
rorl
rorb
dec
cmp
fs
sbb
or
xchg
add
xchg
sbb
jnp
adc
pop
int3
data16
pop
push
out
dec
lods
dec
sbb
cmpsb
or
sbb
loop
aaa
enter
push
sbb
lahf
sbb
movsb
imul
lret
pop
push
push
push
sbb
pop
or
inc
mov
imul
pop
test
jae
sbb
jg
ds
and
sbb
mov
mov
push
mov
mov
add
adc
pop
fadd
ret
test
adc
frstor
pop
cltd
scas
cld
sbb
pop
ljmp
add
cmc
inc
ds
cs
sbb
es
or
addr16
aas
sbb
sub
arpl
into
mov
mov
xchg
out
jb
inc
lods
sbb
js
jno
jns
lock
xor
jecxz
and
out
insb
or
call
adc
mov
fcoms
and
jmp
inc
das
sbb
fstpl
push
add
cs
sbb
scas
std
fstpl
and
inc
sbb
stos
mov
lret
and
sbb
ret
push
or
jl
sbb
xor
divb
and
xchg
push
xchg
pop
pop
add
adc
scas
jmp
adc
test
daa
movsl
mov
rcll
in
push
mov
mov
popf
jne
cs
sub
mov
movsb
shlb
jns
mov
sbb
mov
jb
push
sub
xchg
and
leave
sbb
rcll
sbb
sbb
and
das
mov
cmpsl
xor
jae
gs
repnz
in
pop
test
adc
mov
pop
xchg
andb
test
jo
pop
lret
pop
xor
xchg
pop
cmp
inc
sbb
rclb
mov
adc
outsl
jecxz
out
sbb
or
xor
jbe
sbb
mov
cli
sbb
and
mov
push
daa
jl
add
in
xor
push
sbb
arpl
insb
sbb
or
rcl
sbb
repz
mov
adc
ja
inc
pop
push
repz
add
mov
loope
aam
jl
adc
lret
pop
int
xor
cld
xchg
sbb
mov
and
and
push
in
sarl
addr16
call
loope
xchg
sbb
out
ret
shl
lcall
and
out
out
lock
cmp
adc
mov
add
sbb
enter
dec
ret
bound
xchg
push
push
jo
and
sahf
mov
xor
push
hlt
mov
sbb
or
loope
nop
mov
ret
ret
jge
scas
andl
sbb
aad
mov
test
push
ss
popa
aad
mov
in
xchg
and
or
iret
push
dec
shll
sbb
xchg
sub
loop
pop
jp
sbb
sub
dec
dec
mov
test
mov
jnp
fwait
ss
sbb
push
outsb
in
push
pop
push
lock
push
fs
sbb
lea
repnz
jo
pop
out
mov
xlat
aaa
pusha
dec
inc
add
mov
push
aad
lret
push
loope
int
mov
iret
sub
int3
movsl
imul
sti
adc
mov
mov
test
dec
push
sbb
push
fiaddl
sbb
sub
xor
adc
out
cli
jmp
inc
lock
sbb
xor
adc
sbb
shrl
sbb
negb
xor
cmp
or
sbb
xchg
cmpsl
sub
pop
jns
add
push
mov
and
inc
enter
jo
adc
in
jle
dec
cmpsb
inc
pop
test
mov
mov
aas
sbb
fstps
inc
sub
adc
fistpl
cwtl
cmpsl
xorb
clc
push
sub
push
cld
adc
cmp
sub
adc
rclb
mov
sbb
adc
ror
scas
cmp
ja
jb
sbb
aam
mulb
adc
sub
pop
notl
jns
or
movsl
lods
mov
sbb
adc
mov
ss
xchg
bound
orl
sub
rcrl
mov
in
sahf
adc
stos
mov
aas
adc
pop
push
push
xchg
cmp
sbb
cld
rcrb
dec
pop
inc
mov
orb
jge
pop
sbb
push
mov
cld
aas
std
push
cmp
mov
jge
dec
aaa
adc
in
adc
pushf
rcrb
xchg
insb
cld
jo
dec
mov
sti
cmpsb
and
or
pop
in
xor
and
insb
ja
mov
sbb
jp
jmp
add
ret
fnsave
inc
jae
inc
pop
xor
xchg
ret
stos
pop
mov
lods
icebp
jno
mov
xchg
shlb
sbb
sbb
int3
jb
imul
imul
or
push
cmpl
fcoms
mov
scas
cli
dec
scas
cwtl
loope
pop
cmp
cltd
xchg
shrl
mov
nop
sahf
mov
int
repz
ljmp
dec
jbe
es
pop
out
mov
sbb
jns
mov
fisubrs
fwait
sbb
cld
cmp
icebp
lcall
mov
dec
ds
adc
cmp
mov
enter
clc
imul
push
pop
push
jle
xor
add
mov
jge
pusha
pop
push
or
xor
ror
adcl
mov
or
lret
cmp
add
inc
and
gs
add
sbb
mov
sbb
jbe
sub
jb
ds
data16
sbb
loope
lcall
mov
mov
push
cli
adc
sbb
mov
insb
xor
add
dec
inc
xlat
jp
in
imul
sbb
cmp
in
push
sbb
scas
sarb
pop
scas
pop
stc
add
sbb
or
jl
xor
and
sbb
and
jno
mov
push
inc
nop
pusha
jnp
loope
xchg
icebp
xlat
insl
xchg
jb
push
clc
sbb
test
or
subl
sarb
dec
in
pop
repz
adc
mov
mov
cmp
xchg
incl
mov
or
pop
sbb
push
mov
insl
sbb
pop
push
xchg
stos
lcall
jbe
add
mov
push
or
sbb
mov
sbb
int3
xchg
stos
sbb
aaa
or
mov
repz
dec
sbb
sub
sbb
aad
mov
jns
cmp
add
pop
push
sub
lret
mov
sub
inc
xchg
les
ds
icebp
jp
cld
push
sbb
dec
or
push
lahf
mov
mov
sbb
lock
repnz
out
cmpsl
sbb
and
add
fmull
pop
adc
sbb
mov
pop
dec
in
stos
inc
ja
mov
jle
imul
fs
xor
adc
cmp
inc
and
sbb
out
rep
mov
scas
sbb
loop
fistpl
jmp
jne
lret
mov
sbb
inc
mov
adc
cli
mov
sbb
sbb
test
dec
stos
roll
adc
in
xlat
les
iret
sbb
outsl
in
mov
xchg
imul
jp
mov
cmc
pop
xor
cmpsb
sbb
stos
push
push
xchg
cltd
ss
sarl
xor
mov
mov
test
dec
jae
inc
mov
xchg
out
mov
aas
clc
lds
out
dec
or
jae
sbb
fistpl
pusha
out
sbb
outsb
jns
add
aad
and
push
adc
mov
xchg
xor
sbb
lret
bound
pop
ds
mov
push
int3
div
clc
ja
push
lret
pushf
sbb
adc
sbb
sub
sbb
and
add
int3
cmpsb
sbb
lret
mov
adc
shll
mov
push
in
xchg
or
mov
push
int
and
sbb
xor
insb
sbb
mov
out
and
out
inc
inc
dec
icebp
clc
mov
sbb
daa
inc
popa
addr16
dec
push
test
rcrl
arpl
movb
and
mov
lds
xchg
sbb
adc
xchg
test
in
cmp
push
cmpsb
push
gs
shrl
jge
and
sbb
pop
sub
mov
aad
fdivrs
pop
loop
xchg
lds
jmp
push
pop
xor
je
jbe
lret
icebp
and
repnz
leave
push
xor
push
test
push
sub
out
ret
add
insb
mov
cmp
cmp
push
cmp
and
pop
sbb
push
rcrb
mul
mov
pop
push
adc
clc
xchg
nop
or
cwtl
sbb
cmp
xor
arpl
add
mov
or
nop
or
push
gs
into
mov
je
pop
jbe
add
cs
sbb
bound
mov
sbb
clc
pop
stos
adc
loopne
xchg
mov
and
add
lods
sbb
enter
cwtl
imul
xchg
pop
cmp
jae
xor
cli
gs
xor
sbb
adc
insb
push
push
or
cmp
sbb
fisubrl
sbb
sub
push
lret
sbb
ds
loop
pop
inc
jecxz
arpl
jmp
xchg
adc
les
int3
std
push
mov
repnz
ret
jbe
sbb
fbstp
push
mov
movsl
and
sbb
cmp
inc
or
daa
dec
sbb
mov
mov
test
mov
xchg
insb
jnp
cmp
push
mov
mov
sbb
fdiv
clc
dec
gs
jmp
sbb
mov
mov
sbb
movsl
stos
jnp
inc
lret
faddp
ret
jecxz
or
xchg
idivb
fsubr
sbb
dec
stos
xlat
test
enter
mov
mov
add
rol
fdivrl
jae
push
fistl
sbbb
lock
and
je
mov
xchg
push
sbb
ret
jns
sarl
adcl
mov
addr16
pusha
xchg
push
mov
arpl
and
clc
adc
and
sbb
push
stos
mov
loope
jae
aaa
cmpsb
sbb
inc
and
and
in
shll
mov
sbb
lret
ljmp
mov
stos
jg
push
xor
icebp
ss
sub
inc
sub
dec
xchg
sbb
adc
add
pop
sahf
and
lock
push
dec
push
xchg
inc
aad
xchg
jp
repnz
mov
cwtl
pop
cmpsb
aam
subb
xchg
or
insb
jle
inc
sbb
int
icebp
sbb
xor
jnp
pushf
test
xchg
popl
fldenv
sbb
loop
push
loop
adc
sub
jne
out
cmp
lcall
test
pop
add
inc
cli
jns
in
es
jb
dec
ret
ljmp
pop
sbb
les
lcall
inc
dec
loopne
faddl
or
ret
add
in
loope
pop
mov
sbb
push
lea
cltd
outsl
inc
push
jg
outsb
jge
movsb
mov
pop
into
test
or
xor
aad
ljmp
int
std
sbb
xor
mov
or
and
pop
push
sub
orb
sub
mov
gs
xor
daa
and
pop
sbb
cmp
mov
in
pusha
jl
mov
jbe
lock
jecxz
out
sbb
hlt
lods
insb
or
movsl
or
loope
or
dec
int3
scas
jo
or
jae
sbb
xchg
adc
ss
arpl
sbb
and
lahf
sbb
js
jmp
mov
bound
add
sbb
push
xchg
dec
stos
sub
pop
xchg
pop
cld
bound
sbb
fiadds
hlt
inc
lds
sub
in
inc
add
popa
jge
pop
and
mov
mov
arpl
adcb
and
rcll
push
sbb
enter
or
push
mov
ficoml
cmpsb
cli
sbb
insb
xchg
fdivs
add
jmp
mov
mov
xchg
sbb
test
sbb
mov
jmp
loope
inc
sbb
jbe
arpl
call
pushf
loope,pn
xor
push
lock
adc
and
in
nop
inc
aam
divb
sbb
push
mov
popf
jbe
icebp
push
lret
dec
push
sbb
or
sbb
adc
push
inc
cmp
testb
lods
add
dec
scas
or
dec
add
pop
mov
adc
sarl
mov
cmp
ds
sbb
push
add
call
mov
pusha
sbb
jns
sbb
inc
fidivrs
sbb
add
mov
and
jnp
push
mov
jo
sbb
push
out
sbb
cmpsl
fcomps
jmp
sbb
xor
sbb
int3
push
dec
sbb
jne
or
ljmp
inc
inc
pop
xchg
push
daa
loope
jmp
xor
xchg
xor
push
pop
dec
aaa
sub
sbb
jge
fidivrs
dec
loope
adc
cmp
jbe
into
push
fbstp
gs
xchg
dec
xchg
mov
mov
sbb
and
adcl
test
adc
test
fisubrl
or
push
jmp
aam
fldt
push
sub
aad
mov
sbb
mov
cmp
add
sbb
pop
xchg
ljmp
add
push
loope
push
xor
jne
lcall
pusha
or
pop
enter
mov
and
call
or
loopne
jae
sbb
ror
dec
test
and
scas
cmp
adc
inc
sbb
and
mov
push
pop
add
scas
test
jecxz
insl
sbb
xor
into
aas
jbe
sbb
addr16
cli
outsl
mov
movl
or
mov
sub
sbb
jge
test
mov
int3
movsb
ds
push
loope
daa
fwait
xchg
dec
in
sub
in
vunpckhps
jae
fsubrl
and
xchg
mov
or
pop
sbb
pop
mov
xor
test
sbb
loop
sub
fwait
sahf
dec
sub
or
mov
inc
fsubs
push
outsb
repnz
ret
stc
add
cmp
ficompl
outsb
sbb
pop
into
pop
in
pop
adc
loope
mov
sbb
cmpsb
cmpsl
rcrb
push
xor
loope
aam
cli
and
sbb
add
rcr
mov
nop
sbb
push
aaa
stos
jbe
xchg
inc
sbb
popa
inc
fcmovbe
xchg
xchg
test
mov
pop
and
inc
and
dec
add
push
aam
mov
pop
mov
push
rclb
jg
mov
nop
mov
outsl
sbb
lret
xchg
pop
ds
lea
out
pop
pop
mov
rcll
test
cltd
dec
sbb
xlat
cmp
lds
xor
inc
subl
sbb
push
out
mov
out
addr16
cmpl
std
push
pop
mov
add
repz
shlb
stos
sbb
movsl
mov
push
adc
adc
push
andl
mov
pop
lock
jbe
xor
push
rcrb
jge
push
hlt
dec
scas
out
push
mov
fcoms
add
mov
sbb
adc
sbb
nop
aam
adc
pop
push
and
lds
dec
add
pop
insb
xchg
add
in
negl
ja
push
js
out
inc
adc
inc
cmp
jge
cmp
xchg
sub
push
mov
pop
adc
inc
or
mov
sbb
push
cmc
stos
jne
inc
xchg
ja
arpl
outsb
sub
mov
xchg
cmp
push
sbb
cmpsl
pop
lods
mov
loope
ret
out
cmpsb
push
jnp
shl
dec
imul
and
das
dec
push
loope
mov
sbb
mov
negb
jmp
imul
and
fnstsw
sbb
dec
cs
notb
sbb
xchg
aaa
std
jecxz
xor
inc
imul
mov
sbb
repz
cmc
xchg
loope
add
pop
push
xchg
daa
imul
sbb
push
push
divb
sbbl
out
es
sbb
mov
mov
into
daa
jp
fidivrl
xor
mov
xchg
mov
lahf
xchg
inc
aas
sbb
ljmp
cmp
mov
sub
xchg
add
into
jns
xchg
sub
push
imul
sbb
mov
push
sbb
arpl
js
jns
sbb
popa
and
sbb
in
mov
lret
imul
xchg
repz
subb
bound
or
mov
inc
adc
pop
and
je
inc
data16
out
loope
sub
sbb
mov
nop
lret
push
xor
xchg
jne
jge
mov
fistpl
sbb
push
jbe
jecxz
sub
fstl
lcall
roll
test
sbb
ljmp
fs
adc
mov
or
aaa
lds
sbb
add
sbb
cmp
test
sbb
adc
cwtl
clc
push
ret
xchg
pop
jne
mov
sbb
aaa
xchg
repnz
test
movsl
jae
stos
sbb
out
xchg
dec
xor
fsubs
lcall
test
pop
sbb
aad
cmp
call
add
push
pop
jae
les
rolb
push
addl
mov
pop
mov
and
sbb
dec
cltd
mov
mov
mov
cs
ret
push
test
sbb
cwtl
sbb
sbb
stos
rorl
pop
inc
jo
lea
or
sbb
mov
push
mov
mov
int3
cmp
adc
push
adc
shrl
sarl
in
ss
js
cmp
rcrl
subb
sub
adc
mov
sbb
out
ret
inc
daa
dec
mov
push
lods
inc
adc
and
push
outsb
or
sbb
push
xor
ds
xchg
dec
mov
or
pop
test
or
dec
pop
jne
xchg
loope
lcall
jle
sbb
out
test
adc
jne
jae
sub
inc
outsb
jno
out
sbb
aaa
fnstenv
push
mov
shll
or
lahf
pop
popf
and
sub
inc
adc
sub
imul
sbb
push
aad
cli
or
mov
insb
dec
xor
xchg
mov
xchg
fistl
hlt
sbb
outsl
lar
xchg
push
leave
cmp
and
hlt
adc
pop
nop
insl
divl
inc
sub
adc
add
ss
stos
jp
cmp
jg
pop
mov
into
pop
add
stos
aam
jp
mov
sbb
push
out
jnp
mov
adc
pop
out
lahf
movddup
or
jb
adc
sbb
cmp
jbe
inc
xchg
repz
iret
cmp
cmp
inc
rcrl
mov
push
sbb
jmp
cmp
adc
xor
cmpsl
sbb
repnz
and
push
xchg
xor
or
push
rcll
cmp
jo
adc
test
sub
xorb
popa
clc
sahf
xchg
sbb
rcll
std
mov
sbb
push
mov
ja
popf
push
fdivl
ret
sbb
xor
rcrb
adc
sbb
cld
stc
pop
inc
sub
pop
enter
icebp
mov
popf
lock
lods
push
lods
stos
popa
sbbl
cli
pop
aas
adc
sub
sub
jns
data16
or
push
mov
mov
lods
mov
xchg
xor
sbb
sarb
xor
sub
lahf
adc
insb
inc
mov
sbb
filds
or
mov
jl
inc
sbb
lock
adc
repz
test
test
pusha
lret
push
dec
sbb
and
jmp
movsl
sub
ss
or
outsb
rep
push
adc
push
mov
movsl
mov
push
sbbl
test
pop
cmp
mov
cmp
out
sbb
in
movsl
adc
jp
in
mov
roll
cmp
lahf
loope
fdivs
ljmp
ret
push
cmp
xor
add
adc
pop
fimuls
and
mov
mov
push
pop
call
loope
mov
mov
mov
or
daa
pminub
bnd
pop
cmpsb
cmp
int
aam
mov
lcall
pop
aaa
push
lcall
cld
js
xchg
xchg
repz
jnp
xchg
inc
lret
adc
xor
insl
notl
inc
sub
out
or
xlat
push
xor
int
ljmp
push
rolb
or
xchg
aam
cmp
pop
filds
xchg
mov
xchg
xor
sbb
mov
sar
repnz
add
push
or
inc
lds
sub
std
xor
cmp
bound
sbb
clc
rcll
pop
iret
sbb
adc
pop
sbb
xchg
cmp
sbb
out
lret
fs
adc
sbb
arpl
inc
cmp
leave
in
pop
adc
xlat
push
sbb
push
mov
and
adc
sbb
adc
pop
xor
cld
in
stc
daa
and
cs
sbb
aad
pop
and
pop
xchg
sbb
insl
mov
push
add
cmp
int3
fcmovnbe
mov
push
cmpl
addr16
mov
and
cmc
hlt
dec
push
pop
ret
push
in
or
xchg
pushf
mov
xchg
push
or
sbb
cwtl
int3
mov
inc
xchg
scas
xchg
sbb
xchg
dec
mov
xchg
in
aad
xchg
dec
aam
sbb
in
sbb
or
scas
sbb
in
aam
push
sub
sbb
fisubl
adc
sub
adc
mov
adc
pusha
pushf
sbb
stos
insb
push
sbb
add
leave
lea
cld
out
repnz
es
loopne
sbb
stos
xchg
aad
xchg
jae
sbb
into
inc
std
cmpsl
lcall
jg
mov
lods
pushf
sbb
cmc
dec
out
mov
xchg
cmp
es
loope
notb
jne
mov
arpl
mov
sub
sbb
mov
adc
sbb
push
loopne
sbb
popa
mov
add
int
xor
xchg
sub
mov
nop
add
jmp
jae
push
xchg
dec
add
sbb
mov
ja
sub
sbb
mov
mov
in
cmpsl
mov
loop
sub
popf
gs
out
pop
push
fnstcw
loope
mov
push
rcll
popa
lret
loope
add
push
fcmovu
cmp
push
sbbb
adc
adc
nop
sti
subl
jo
xor
mov
add
or
test
adcb
pop
jecxz
ds
mov
popf
in
popl
xchg
inc
adcl
mov
inc
bound
jo
mov
dec
jne
cmpsb
and
outsl
push
sahf
sbb
pop
inc
dec
insl
mov
pushf
imul
iret
mov
in
jae,pn
sbb
dec
ja
and
fs
xchg
sbb
sbb
data16
push
sarl
inc
insl
fsubs
mov
sbb
mov
pop
dec
or
mov
push
inc
scas
sbb
sub
sbb
aam
incl
psubw
dec
push
out
test
sbb
xor
jno
rcrl
aaa
cmpsb
test
aas
sbb
testl
cmp
mov
loope
dec
adc
fcomp
mov
xor
push
push
pop
mov
je
pop
sbb
loope
jno
test
inc
sbb
push
pop
out
jae
sbb
sub
inc
jo
sbb
mov
das
and
addb
ret
movb
shll
sbb
push
sbb
mov
test
mov
sbb
stos
loope
cwtl
or
push
xchg
cmpsl
in
movsb
mov
push
les
sbb
nop
sub
pop
icebp
ja
jp
sub
xor
adc
out
sbb
add
xchg
mov
fiadds
repz
das
adc
sbb
mov
sbb
test
sbb
test
fwait
stos
mov
adc
rcrl
pop
fcoml
xor
outsb
inc
mov
ret
sbb
mov
cmp
lea
mov
or
push
scas
stc
sbb
sbb
scas
sub
sahf
lret
outsb
sbb
or
subl
cmp
es
nop
cli
leave
mov
sbb
cmp
jbe
jns
fistps
xor
and
sbb
idiv
imul
orl
pop
std
push
adc
mov
sbb
fcmovnu
cmp
and
sbb
test
mov
sbb
cmpsl
pop
or
popl
mov
sbb
lret
out
add
lret
lock
dec
xor
mov
insb
lcall
and
das
stos
out
sbb
and
sbb
repz
cld
mov
pop
rclb
sbb
and
mov
push
lock
sbb
and
mov
mov
flds
pop
ss
mov
mov
rep
sahf
push
xchg
push
xlat
sbb
cmp
lcall
xor
cmp
lods
adc
pop
adc
ds
mov
mov
loope
jge
push
mov
int3
sbb
dec
aaa
dec
outsb
hlt
fwait
loop
outsb
inc
sbb
or
aam
pushl
lret
enter
inc
insb
sbb
inc
jbe
sbb
push
lret
scas
shrb
cmp
outsl
xor
push
lret
test
sbb
rcrl
sbb
jle
sbb
push
hlt
outsb
adc
jmp
sarb
or
mov
repnz
pop
push
push
pop
xchg
push
xor
inc
adc
stos
lods
rclb
jle
mov
addr16
int
add
inc
aam
lods
sbb
in
test
dec
fnstcw
lods
mov
sti
loop
and
sbb
lock
dec
push
fidivrl
or
sub
scas
fisubrs
pop
es
scas
dec
dec
mov
xchg
jns
scas
adc
inc
fdivrl
lds
outsl
sbb
popa
cmp
mov
call
iret
or
mov
aam
sbbl
fistpl
stos
outsb
add
inc
xlat
push
sbb
jnp
jg
inc
outsb
movsb
insb
mov
push
sbb
pop
push
icebp
inc
lret
out
sbb
repz
add
mov
xchg
or
dec
pop
mov
jb
dec
jmp
fstpt
andb
out
sub
xchg
mov
idiv
pop
jb
and
and
mov
test
lods
xchg
aas
sbb
xor
pop
cmpb
shll
adc
cmpsl
popl
push
dec
hlt
sarl
test
or
inc
sbb
mov
stc
jo
pop
addr16
cmp
cmp
ss
int3
jmp
sbb
xlat
dec
ret
jb
sbb
das
movsl
or
dec
pop
stos
sbb
or
lret
and
xchg
sbb
shl
xchg
mov
adc
push
sbb
adc
ret
mov
sub
insl
mov
out
push
popa
popf
adc
or
movsl
push
aas
sbb
add
cmpb
xor
test
push
pop
in
dec
lods
sbb
not
xchg
pop
mov
sahf
cmpsb
pop
sahf
sbb
rorb
mov
sbb
mov
add
fmuls
test
mov
jmp
add
or
test
hlt
sub
cs
push
jge
popf
inc
sbb
dec
mov
and
inc
imulb
mov
mov
sbb
aas
bnd
push
enter
idivb
xor
mov
sbb
andw
inc
scas
stc
pop
into
add
add
mov
and
stos
sbb
jno
push
sbb
push
lea
add
mov
xchg
push
inc
bound
sbb
sub
mov
inc
inc
aas
sbb
inc
leave
stc
add
add
shr
insl
sbb
adc
test
mov
je
dec
loope
bound
fistpl
adc
cmp
negl
rorl
pop
ljmp
sbb
imul
test
daa
pop
nop
scas
add
popf
push
xchg
cwtl
mov
jnp
sarb
mov
mov
lock
sbb
lahf
inc
lcall
pushf
adc
jo
mov
jecxz
dec
inc
or
in
imul
adc
xchg
pop
xor
mov
jmp
sub
enter
dec
mov
adc
sub
lods
lds
xchg
insb
xchg
jecxz
push
mov
and
cmp
sbb
mov
fdivr
adc
ljmp
aad
repnz
pusha
outsb
xor
or
jne
cmpl
lcall
aam
in
daa
movsl
rcl
pop
test
sbb
repz
jnp
or
adc
shr
insl
sbb
xor
xor
adc
gs
mov
push
dec
xor
mov
sbb
rolb
std
ret
negl
xchg
loopne
push
xorl
cmp
push
and
sti
loopne
mov
sbb
inc
gs
pop
out
sbb
push
daa
xchg
mov
jmp
ret
aam
mov
sbb
sti
scas
mov
sbb
inc
mov
sbb
adc
mov
xor
mov
or
outsl
aaa
rcl
icebp
nop
mov
outsb
sbb
and
push
jbe
test
rcrb
mov
adc
adc
imul
data16
pop
lds
push
negb
icebp
fs
adc
fisttpll
repnz
out
mov
aaa
push
xchg
lds
sarb
push
bound
sbb
mov
pushf
sbb
push
ja
mov
and
mov
das
loop
sbbb
jne
and
mov
push
jnp
sub
leave
push
xchg
cli
pusha
dec
andl
lods
lock
dec
push
nop
test
xor
inc
cmp
enter
fistpll
insl
xchg
lea
mov
jge
sbb
mov
int
mov
lret
and
loope
mov
and
pop
popf
testl
sub
enter
and
dec
out
inc
adc
test
push
jb
outsb
imull
addb
sbb
adc
sahf
sbb
and
sbb
dec
out
aad
mov
jnp
lock
in
dec
leave
jb
mov
pop
sbb
adcl
lock
fwait
inc
popf
hlt
and
jge
xor
insl
or
in
mov
adc
fnsave
xchg
call
inc
sbb
mov
test
adc
sbb
in
sbb
lods
add
ja
mov
add
sbb
xchg
sbb
push
sub
sub
testl
inc
mov
sbb
pushf
xchg
and
add
xchg
xchg
xchg
sbb
aas
mov
lods
arpl
or
and
push
jae
je
sbb
push
cmc
xchg
jb
sbb
cmpsb
jae
mov
rolb
mov
inc
shll
inc
dec
xchg
and
movsl
cmc
loope
dec
aad
and
inc
adc
and
adc
and
out
add
pop
inc
fstpl
rorb
loopne
push
ss
test
push
mov
inc
std
loope
mov
dec
xchg
jmp
dec
pop
sbb
jl
ret
loope
push
adc
adc
mov
push
xor
mov
pop
sbb
and
scas
mov
push
xchg
into
jp
je
push
mov
xchg
out
cmp
push
loop
nop
mov
cmpsb
aas
ljmp
pop
ret
adc
xor
mov
sbb
fmul
mov
xchg
test
incb
or
sbb
sbb
bound
mov
pop
scas
sbb
insb
loope
mov
pop
and
xchg
xor
loop
gs
ds
push
add
ja
sahf
sbb
scas
add
jmp
shrl
imulb
cmp
aaa
stc
xor
xchg
sbb
xchg
inc
push
push
cmp
sti
test
lds
xchg
and
fs
and
mov
rorb
cld
cmpsb
xchg
mov
sub
les
sbb
adc
mov
and
sbb
jmp
repz
in
push
cmpsb
sbb
mov
sbb
mov
xchg
clc
sbb
arpl
mov
pop
pop
idivl
test
sbb
add
fnstenv
adc
loope
lcall
sbb
pushf
int
jbe
sbb
mov
out
lock
jae
mov
push
shlb
jnp
adc
in
fstl
cmp
popf
xor
addr16
stos
or
or
insl
xchg
inc
outsl
sbb
popf
imul
fwait
pop
sbb
and
addb
sti
xchg
pop
scas
adc
or
mov
push
mov
jge
push
cmp
icebp
mov
pop
out
sbb
xchg
xor
fwait
lock
loope
icebp
stos
push
in
scas
adc
aam
mov
mov
in
sbb
js
sbb
mov
sahf
cld
lret
push
dec
add
icebp
in
sub
addr16
les
out
adc
mov
ret
je
outsb
sub
sbb
push
cmp
push
out
rclb
pop
cli
repnz
xor
mov
lar
mov
adc
es
cmpsl
inc
out
int
rcrl
lahf
xor
ja
pushf
pop
call
leave
cmp
adc
je
xchg
sbb
dec
dec
push
in
mov
sbbl
test
cmpsl
cmp
inc
and
sub
pop
adcl
into
mov
rcrb
rcll
les
cmp
push
push
popa
in
int
imul
and
rcrb
sbbl
insl
add
push
imul
xor
sbb
js
and
into
jo
mov
cmp
popf
dec
sbb
jnp
std
and
sbb
mov
and
out
lcall
add
cmc
xlat
fucomi
sahf
sbb
pop
shlb
adc
gs
out
dec
or
and
dec
or
ret
pop
mov
test
sbb
leave
ljmp
sbbb
out
adc
cmc
inc
lods
add
lcall
mov
cli
sbb
mov
sbb
jo
cmp
lock
iret
dec
std
sub
push
sbb
dec
cwtl
adc
loopne
jae
rcll
inc
adc
mov
icebp
sbb
out
mov
or
fcoml
repz
call
adc
cld
xchg
icebp
or
pop
hlt
mov
mov
rol
pop
inc
popa
hlt
mov
in
aas
cmp
mov
arpl
xchg
push
addb
cmp
rcr
push
sub
fsubrl
push
sbb
and
sbbb
lahf
test
xor
or
stos
adc
loope
and
xchg
loope
cltd
pop
fdiv
repnz
cmp
xchg
or
jmp
pop
adc
je
call
mov
mov
sbb
dec
sbb
jmp
scas
std
fidivs
insb
inc
inc
add
les
mov
imul
ret
add
push
sahf
out
bound
repnz
enter
lret
jp
sbb
jb
mov
pop
sbb
scas
cmp
leave
adc
xor
sbb
shll
add
push
enter
insb
inc
aaa
xchg
jae
ljmp
test
cwtl
add
sub
lret
insb
adc
mov
sbb
mov
xchg
cli
add
in
dec
stos
sarl
sbb
aad
and
pop
inc
sub
pop
gs
test
mov
pop
mov
pop
pop
mov
or
xchg
scas
adc
lods
xchg
adc
notl
lret
dec
xor
xchg
out
jmp
lcall
jmp
inc
jo
outsb
inc
and
dec
sbb
jecxz
loopne
or
cmp
inc
jbe
pushf
cltd
fbld
dec
push
loope
sub
and
adc
adc
dec
mov
jl
mov
mov
push
lds
mov
lret
mov
mov
or
mov
xchg
leave
clc
pusha
adc
fadds
mov
sarl
jl
mov
adc
xor
pop
sbb
pop
in
aaa
push
sbb
scas
sbb
mov
ret
stc
add
addr16
pop
int
sarb
cmp
cld
sbb
adc
hlt
loope
lret
and
pop
xchg
dec
dec
mov
imul
out
mov
jp
xlat
adc
cmp
test
mov
mov
shl
xchg
pop
pop
mov
or
xor
mov
sbb
mov
or
inc
sbb
ficompl
push
and
sbb
xor
aam
repnz
mov
add
sbb
or
dec
xchg
xlat
sbb
aaa
or
jb
xchg
mov
pop
imul
jg
icebp
mov
inc
sbb
pop
xor
dec
pop
xor
sbb
clc
jmp
adc
mov
pop
test
mov
add
inc
repnz
sbb
pop
jl
and
mov
push
stos
mov
push
sti
xchg
sbb
pop
jle
cmp
sbb
fmulp
test
clc
xor
sbb
pop
inc
and
push
out
daa
sbb
and
mov
sbb
push
sbbl
out
mov
sbb
xor
mov
stos
sbb
sbb
mov
dec
out
rcll
mov
ret
sub
push
sbb
or
xchg
outsl
and
outsb
mov
cmp
xor
test
testl
mov
scas
in
stos
xchg
dec
in
push
jmp
adc
xchg
ficomps
movsb
pop
mov
mov
cmp
and
stc
xchg
adc
out
sbb
jo
lock
loope
into
out
inc
adc
mov
cli
jb,pt
jg
fistpl
sbb
test
sbb
xor
mov
mov
sbb
inc
dec
repnz
fsubs
adc
inc
loope
sbb
negl
setae
sbb
xorb
hlt
ss
imul
sbb
sbb
jo
jns
test
enter
sbb
adc
sahf
std
jbe
dec
pop
paddb
loopne
xor
shll
or
xor
int
sbb
and
aad
cltd
mov
sbb
sub
loope
cmp
loopne
sub
dec
inc
sbb
push
xor
sbb
lahf
mov
adc
cmpsl
sub
push
loop
adc
sbb
push
pop
arpl
push
jge
stc
addr16
or
push
lods
fld
push
dec
mov
mov
sbb
xchg
mov
int
xchg
mov
imul
loope
fstpl
mov
cli
push
push
add
adc
mov
test
cmp
popf
mov
cmp
xchg
mov
sbb
inc
lcall
push
sbb
fstps
pop
stos
dec
sbb
push
jge
shll
stc
cs
sbb
aam
negb
adc
add
xor
in
mov
into
addr16
movb
shl
sahf
cmp
test
pop
nop
dec
xchg
loopne
sbb
je
aad
lret
aam
mov
sbb
outsb
fistpll
test
rol
mov
xchg
das
cmp
add
jne
sbb
pop
dec
and
leave
inc
add
cmp
xor
and
and
sbb
fcomi
push
sbb
jno
scas
or
push
scas
push
inc
jnp
sbb
sub
int
ret
cmpl
xor
xchg
and
hlt
and
jmp
je
rolb
add
jns
mov
adc
fistpll
data16
rclb
fstl
xorl
daa
xor
loope
dec
aaa
xor
mov
ja
xor
jp
out
lds
inc
rcrl
repnz
inc
cmp
ret
and
jge
imul
pop
and
add
mov
negb
adc
das
movsl
loope
mov
in
push
loope
pop
lcall
xchg
dec
sbb
xlat
movb
ret
addr16
cmp
clc
ljmp
negb
jecxz
rep
loop
ja
stos
add
int3
outsl
or
xchg
test
enter
mov
mov
stos
icebp
ret
mov
push
push
sbb
imul
mov
movsb
sbb
jecxz
mov
sbb
les
xchg
push
inc
addr16
test
sbb
int3
pusha
mov
aaa
jecxz
fwait
xor
mov
jo
into
js
in
add
pop
popa
aam
lds
mov
in
bound
or
js
adc
rorl
out
pop
or
lods
mov
pop
sbb
je
loopne
xor
fldenv
mov
dec
sbb
outsb
xor
or
cmp
loope
and
pop
ret
scas
xchg
popa
repnz
imul
shrb
push
jle
or
push
pop
out
sbb
cmp
and
sbb
cmp
out
dec
movb
jmp
mov
sti
pop
loop
lock
loope
pop
cmp
xchg
jp
fcmovu
sbb
fiadds
int3
add
ljmp
pushf
mov
pop
adc
movzbl
in
les
into
outsl
cmp
jno
cmp
imul
push
sbb
and
push
pop
int
sbb
add
push
xchg
stos
mov
les
or
repz
into
sbbl
aam
popf
fistps
add
out
push
test
push
inc
sbb
or
rorl
dec
addl
fistpl
sbb
sbb
mov
adc
sbb
or
jle
lret
sbb
dec
dec
jb
ja
jo
loop
adc
push
leave
mov
mov
ficoms
adc
add
loope
cmpsb
push
dec
pop
mov
and
mov
sub
iret
pop
and
sbb
gs
loop
loopne
enter
jb
in
sbb
add
ds
jp
loope
jb
mov
mov
sbbb
sbb
cld
test
movsl
sub
ds
leave
mov
inc
mov
push
pusha
sbb
cwtl
push
adc
stos
jnp
shrl
xchg
sbb
adcb
pop
adc
xlat
rolb
sti
sbb
push
lods
out
pop
xchg
lcall
inc
push
jno
iret
cmpsb
cmp
push
test
dec
sbb
push
lahf
sub
das
inc
negl
data16
add
push
fsubrs
scas
sub
jmp
add
jge
je
push
inc
popa
frstor
xchg
ljmp
cmp
outsb
std
inc
sbb
and
sbb
mov
adc
jmp
jne
push
fistl
push
xchg
and
push
jns
pop
push
sub
imul
push
jecxz
add
scas
mov
scas
dec
out
cwtl
or
jmp
push
stos
fwait
xchg
rcll
push
sbb
xor
add
sbb
dec
push
sbb
aad
enter
rcll
scas
xlat
sbb
test
jns
aas
add
fdivrp
outsl
pop
mov
or
adc
shlb
push
push
in
add
dec
sbb
push
ljmp
inc
dec
mov
ss
push
out
push
nop
fnsave
jle
in
xlat
sbb
sbb
add
sbb
or
lahf
xchg
xchg
imul
xchg
xor
adc
out
lds
xchg
out
xlat
xchg
sarl
movsb
inc
push
fstps
or
mov
adc
in
or
mov
jbe
cmp
dec
mov
push
xor
int3
sbb
ret
pop
cmpsl
test
pop
dec
int
divb
push
mov
movsb
lds
sbb
xchg
push
sub
adc
rorl
clc
mov
mov
adc
mov
xchg
sub
push
jl
repz
icebp
movsl
ret
lret
adc
mov
or
jnp
lcall
pop
or
inc
mov
or
xchg
cmp
mov
sbb
rorb
inc
sbb
andl
and
rcrl
or
test
mov
dec
pop
push
sbb
cwtl
adc
pop
loopne
add
mov
les
mov
cmp
sbb
mov
mov
and
es
pop
jns
sub
sbb
lea
xchg
andb
jge
jbe
fwait
mov
call
sahf
inc
fstps
enter
sub
and
in
sbb
aam
or
mov
in
lret
out
ret
popf
js
in
adc
int3
sbb
mov
stc
sub
int
mov
inc
sub
and
pusha
mov
mov
adc
ja
cmp
push
test
sbb
cmp
pushf
andb
cmp
stos
sti
sbb
pop
test
stos
sbb
pop
xlat
xchg
bound
jle
jno
repnz
add
inc
int
mov
add
pushf
and
or
out
inc
inc
test
fstps
mov
jb
rcrl
int
xchg
pop
bnd
sbb
ficoml
fdivrs
xor
ret
push
pusha
pop
inc
cmp
bound
es
mov
sbb
mov
ljmp
mov
cmp
sbbb
imul
roll
lcall
movsl
xor
xor
bound
sub
inc
or
lea
inc
mov
sbb
mov
and
dec
out
sbb
push
jb,pn
or
and
sbbb
mov
unpcklps
pushf
ds
xor
cltd
and
adc
mov
adcl
sub
adc
adc
mov
xor
cwtl
cmp
stc
jnp
pop
add
mov
sbb
hlt
test
push
lcall
pushf
lods
lods
cwtl
or
jo
cwtl
aam
xor
loopne
fsts
test
adc
fistpl
loopne
inc
dec
in
roll
sti
fwait
mov
in
rcr
jb
loope
ja
mov
add
sub
sbb
jns,pt
jo
ret
hlt
jnp
inc
pushf
jae
mov
sbb
clc
adc
add
fwait
stos
pop
mov
jmp
stc
sbb
and
sbb
sbb
in
inc
jno
insb
adc
cld
shrb
les
imul
fbstp
xchg
loope
fchs
fadd
outsb
sbb
fs
psubsw
push
sbb
add
rcrl
dec
mov
test
ljmp
push
pop
fwait
loope
std
and
xchg
cltd
mov
inc
sbb
add
sbb
cmp
or
inc
pop
mov
xor
fnstcw
push
adcl
jge
cmp
lret
add
sbb
fs
jp
sub
jae
je
dec
shl
and
sbb
add
inc
sbb
mov
aad
sbb
push
mov
cmp
dec
sbb
or
cmp
ficomps
xor
mov
das
sbb
adcl
lahf
popa
adc
push
and
xor
inc
mov
sub
sbb
push
and
jecxz
rcrl
xor
push
jo
mov
push
ds
cmp
cmp
or
icebp
scas
sub
cld
sub
push
push
add
lret
repnz
mov
lahf
test
jmp
cmp
rcrb
push
mov
les
lods
lds
lcall
mov
xchg
adc
and
mov
sbb
mov
sbb
in
inc
sbb
mov
inc
ds
add
pushf
fisubrl
push
cs
test
adc
imull
movsl
jbe
push
in
sbb
cmp
sbb
dec
jp
sbb
mov
mov
aaa
or
sbb
inc
test
xlat
in
pop
loopne
pop
sbb
mov
sbb
or
mov
jae
sbb
sbb
leave
mov
pop
aam
lds
add
pop
lea
roll
add
movsl
mov
xlat
pop
pushf
sub
and
mov
lret
push
pop
fists
ljmp
or
ret
es
cmc
lcall
lret
loope
fldenv
test
mov
adc
add
sbb
cmp
fwait
push
dec
lret
sbb
out
adc
aam
sbb
mov
sub
js
pop
sbb
sbb
jg
mov
push
loop
in
iret
push
sbb
xchg
dec
out
inc
mov
adc
inc
movsl
gs
outsb
dec
and
and
incb
xchg
sbb
mov
push
xor
push
pop
mov
sbb
inc
xchg
lahf
jg
jle
ret
cmpsl
call
loope
sbb
mov
and
pop
test
mov
sub
adcl
dec
add
mov
insl
push
inc
test
sbb
mov
cli
inc
inc
dec
sbb
daa
shlb
ja
jge
mov
add
clc
div
cmp
stc
add
jl
push
fcomps
not
cmp
out
enter
sbb
idivl
xor
pop
pop
inc
mov
out
jmp
stos
mov
mov
enter
add
dec
cmp
pusha
sbb
xor
jl
out
push
pop
adc
in
mov
movntq
mov
test
adc
inc
adcb
ret
mov
shl
mov
mov
adc
les
imul
rcll
stos
sbb
push
leave
mov
jp
shl
sbb
cmp
sbb
outsb
or
hlt
xor
call
or
push
push
mov
jo
jae
test
iret
outsb
out
fbstp
cmc
xlat
pop
sbb
xor
sub
loopne
xchg
dec
sarl
rcrb
mov
in
sbb
push
and
leave
fdivrl
mov
xchg
xor
sbb
lret
cld
cmp
adc
jmp
dec
inc
inc
pop
sub
ficomps
fistps
cmpsl
pop
pop
lods
dec
popa
rcll
push
insl
out
and
sbb
movsl
in
mov
outsb
xchg
sbb
pop
daa
push
lret
sbb
dec
loope
sbb
in
cli
cmpsb
or
inc
loope
mov
lcall
inc
inc
les
and
fdivr
stc
mov
jmp
xchg
cmc
push
add
sbb
fnstcw
test
adc
xor
aaa
push
cmpb
lret
cmpsl
stc
and
inc
cmpsb
daa
mov
test
lea
mov
inc
cwtl
xor
cmp
xor
imul
adcl
jl
mov
add
push
scas
pop
test
dec
cwtl
sbb
jp
ss
mov
rorl
nop
adc
inc
adc
xchg
mov
pop
xchg
xor
xor
adc
xchg
out
add
add
jge
xchg
mov
cs
lea
repnz
and
das
pop
push
bound
daa
pop
pusha
cmp
and
mov
sbb
enter
imul
pop
sbb
jns
xor
push
gs
pop
mov
repz
or
sbb
icebp
lds
lea
test
cmp
lods
jne
xor
sbb
lret
test
sbb
aaa
out
pcmpeqd
add
adc
or
push
pop
push
jne
mov
adc
xchg
push
sbb
sbb
jmp
xor
and
mov
mov
add
lds
test
jno
repz
in
ds
mov
out
push
clc
mov
sbb
add
mov
jle
push
xor
xor
dec
xor
cwtl
lcall
fidivrs
cmp
xlat
dec
sbb
mov
mov
imul
arpl
icebp
adc
jae
jecxz
sbb
sahf
lret
cmp
js
and
out
jmp
loop
sbb
and
enter
sbb
jbe
jg
mov
mov
lods
push
js
addr16
sbb
mov
sbb
xor
cmpsl
pop
push
mov
push
mov
ficoml
pop
jge
xchg
mov
loope
or
jmp
push
fwait
push
inc
sbb
cmc
pop
push
in
push
add
add
lahf
repnz
in
xor
jle
adc
js
mov
rcrl
mov
in
sub
lods
sub
xor
dec
rcrl
std
sub
sbb
adc
jns
inc
fstl
outsb
inc
xor
add
push
icebp
cmp
pop
xor
inc
or
in
test
cli
jecxz
mov
jne
pop
sub
xchg
loopne
shr
add
or
cmp
int
xchg
sbb
pushf
iret
lcall
out
push
in
fstps
dec
insl
pop
mov
fdivrs
sbb
sahf
push
test
push
adc
movsl
dec
sub
iret
fsts
sub
lcall
sub
push
push
and
add
cmp
adc
rol
sbb
outsl
inc
cmp
fidivrs
imul
sbb
xchg
mull
rclb
cwtl
xor
jp
mov
cmp
jg
cmc
sti
shll
adc
out
mov
popf
cmpsl
adc
mov
adc
xor
adc
pop
mov
jb
sbb
mov
cwtl
mov
xchg
fstpt
das
xorb
xor
jne
insl
adc
sbb
sti
leave
mov
and
push
popf
clc
mov
sbb
aam
in
lods
leave
in
lret
ret
pop
mov
sbb
add
and
sbb
int3
xor
hlt
aam
and
push
das
daa
jl
repz
sbb
fidivs
jo
dec
and
push
sbb
pop
lods
rol
sahf
sbb
scas
jbe
mov
and
push
jbe
or
in
sbb
data16
call
lock
sub
mov
adc
and
ret
inc
mov
adc
jnp
cwtl
js
sbb
mov
push
sbbl
fbld
cli
and
cmpb
stc
push
inc
push
push
sub
adc
and
push
sbb
bound
cmpsb
call
cmc
xchg
sbb
stc
roll
xchg
adc
push
in
adc
xchg
dec
add
jmp
mov
xor
fisttpll
cmp
push
adc
out
mov
addr16
mov
fwait
test
sbb
sbb
mov
push
sbb
pushf
push
push
pop
mov
cld
sbb
push
subl
int3
dec
pushf
pop
mov
sub
add
cmp
icebp
add
in
ja
inc
sbb
rorl
sub
inc
sbb
insb
cltd
pop
inc
dec
adc
ljmp
lds
mov
push
sbb
push
jns
mov
faddp
sbb
inc
mov
add
push
adc
adc
in
repz
mov
and
sbb
adc
jecxz
jae
ficomps
or
ja
push
sbb
adc
ret
gs
mov
adc
sbb
fcoms
or
scas
xor
aam
jnp
push
test
lret
push
sub
enter
jmp
out
shlb
cmc
fists
mov
xchg
or
or
sub
ljmp
and
sahf
mov
in
cmpsl
icebp
stos
daa
sub
pop
out
mov
test
push
ffreep
sub
jnp
cmp
push
push
ret
pop
sub
clc
mov
cwtl
sbb
add
xchg
pop
addr16
xchg
pop
sbb
pop
movsl
rorl
sbb
cmp
pop
loope
mov
dec
inc
xchg
sub
add
sub
call
hlt
sti
sbb
sbb
adc
sbb
xchg
jb
and
mov
popa
adc
jmp
lahf
pop
dec
loop
es
mov
cmpsb
pop
mov
in
ret
jp
fidivs
add
push
scas
and
sti
addr16
sbb
loopne
hlt
add
loope
sub
mov
ja
je
pop
xchg
repz
cmpb
mov
sbb
mov
fwait
push
mov
sbb
sub
shlb
push
inc
aaa
in
fwait
or
or
jbe
test
rol
sbb
sub
rol
adc
ljmp
sbb
xchg
mov
adc
dec
xlat
sbb
outsb
push
pop
call
and
inc
cmp
movsl
mov
adc
fdiv
xchg
lcall
xlat
pop
xor
sbb
jge
xchg
or
stc
cmp
jge
push
dec
int
pop
and
jae
pop
and
inc
push
xchg
shr
insb
add
fnstenv
sbb
mov
into
adc
jne
jb
ficompl
std
pop
add
fistps
sbb
loop
pop
out
test
xor
dec
dec
test
mov
pop
add
xchg
xchg
sbb
aas
nop
outsl
pop
rol
push
sbb
mov
imul
push
imul
sbb
lcall
sbb
inc
or
mov
repz
sbb
mov
cmp
cmp
mov
mov
stos
mov
xor
cld
dec
or
sbb
push
popf
jb
cmc
xor
jmp
lods
sub
jno
adc
or
sti
popf
xchg
or
loop
sbb
xchg
into
or
dec
adc
out
jge
pop
fstps
test
pop
test
sbb
ds
mov
data16
adc
hlt
xorb
adc
rorb
add
xor
jo
out
stos
test
iret
jg
jbe
inc
cmp
sbb
pop
cmpsl
test
loopne
jmp
test
sbb
cmp
sbb
push
rcr
loope
dec
sbb
sub
test
sbb
out
inc
and
sbb
outsb
adc
outsl
popa
fstpl
sbb
xchg
fwait
aas
in
popf
sbb
pushf
xorb
push
adcl
xor
xchg
and
leave
xchg
pushf
icebp
mov
xor
ja
cmpsb
fnsave
ror
dec
dec
xor
xchg
aam
adc
mov
cltd
and
loope
and
fcoms
ret
sbb
add
dec
add
shlb
aad
mov
add
dec
adc
ficomps
inc
mov
lea
and
inc
xor
mov
or
xor
jp
push
push
aam
push
cmpsb
sbb
xor
dec
push
subl
add
mov
xchg
scas
popa
mov
sbb
jp
or
ret
rcrl
ds
push
ret
and
lahf
ljmp
jmp
add
adc
dec
data16
jns
push
sbb
push
or
mov
insb
adc
sbb
dec
add
jl
shl
shl
push
sub
sbb
fldenv
imul
sahf
or
out
xor
test
mov
mov
fisubl
xchg
fxch
or
sbb
test
xor
lahf
sbb
mov
cmp
jmp
sbb
pop
sarb
lret
shll
dec
lock
enter
fcoms
out
and
inc
lahf
sbb
cltd
mov
jg
daa
or
mov
sbb
push
shr
sbb
test
adc
push
int
mov
cmp
push
dec
sbbb
or
xchg
push
add
lods
test
push
xor
jbe
stos
pop
mov
lret
mov
arpl
dec
lcall
push
in
sbb
xlat
lahf
daa
gs
call
sbb
jae
jle
shrb
adc
repnz
dec
and
jnp
add
mov
sbb
pop
dec
jge
addr16
sbb
pop
push
or
imul
aam
das
push
in
cmp
inc
sbb
sub
mov
mov
pop
xchg
sbb
or
lds
sub
adc
sub
int3
add
xchg
or
sbb
ret
mov
aam
xchg
lahf
mov
in
in
cmp
js
repnz
call
loop
push
sub
ja
je
push
gs
outsl
sbb
pop
cmp
stos
call
push
adc
sbb
push
pop
imul
sbb
cmp
adc
sbb
lea
stos
repnz
popa
adc
sub
incb
cli
jns
stos
in
ret
pop
adc
nop
push
cmpsl
lret
or
mov
dec
insl
rcrl
aam
push
out
fs
fcmovnu
cwtl
inc
sbb
mov
js
loop
and
cmp
mov
mov
fisubl
or
pop
adc
cmp
scas
adc
stos
insb
mov
xchg
lcall
jge
and
or
push
pop
mov
xchg
imul
out
popf
cmp
popa
jo
push
add
call
fsubrs
cltd
sbb
jg
mov
movsb
mov
and
cmp
loope
popf
cmp
add
inc
push
popa
lea
adc
jo
test
in
pop
xchg
out
fcomi
repnz
sbb
subl
ficompl
test
and
cmp
scas
mov
stos
sbb
je
inc
leave
mov
pop
pusha
sbb
pop
fisubrl
test
ds
push
sbb
stos
cmp
fbstp
loope
and
xchg
push
mov
ret
lods
and
adc
push
jo
popa
pop
test
repz
sahf
lods
jno
dec
inc
jge
push
loopne
in
xchg
shll
mov
aam
cmp
cwtl
cmpsb
ja
enter
inc
shrb
xchg
lods
dec
lds
adc
das
sbb
cwtl
call
fdivrs
mov
enter
jle
xchg
xor
sarl
push
sbb
add
sbb
orb
pop
stc
push
lods
push
mov
sbb
push
clc
shrb
xchg
sbb
arpl
sarb
xor
xor
inc
sbb
out
loope
push
test
mov
add
xchg
sbb
fstpl
jg
jb
lods
xlat
cs
inc
or
std
jbe
add
rcrl
dec
sbb
pop
mov
loope
pusha
enter
cmpsb
jg
dec
sbb
push
ds
pop
pop
negb
rcrb
mov
add
bound
ret
cwtl
xchg
inc
fcompl
jp
shrl
adc
and
cmp
shlb
imul
negl
lahf
insl
loope
loope
and
push
jns
sbb
imul
arpl
out
lods
dec
dec
sbb
mov
push
and
fsubs
sbb
mov
xor
sbb
enter
imul
pop
push
xchg
xor
fcomps
fimull
hlt
repz
xor
push
in
fimuls
shl
xchg
inc
push
adc
jo
cs
lret
sbb
xor
aam
mov
and
cmp
adc
jae
test
jecxz
push
addr16
sbb
jle
xlat
fildll
testl
sbb
pushw
roll
stos
daa
cli
mov
arpl
mov
std
lock
insb
out
stos
add
cmp
bound
xchg
push
push
mov
stc
jp
pop
fdivrs
add
mov
jle
loope
jl
repnz
lret
inc
dec
xor
xor
xchg
lcall
xlat
imul
jg
dec
push
mov
and
mov
das
fildl
or
push
jbe
loop
inc
shrb
int
push
sbb
or
sbb
mov
and
sbb
in
divl
pop
aaa
inc
in
sbb
int
add
ljmp
jns
sbb
dec
dec
addr16
mov
pop
add
xor
data16
sbb
xchg
jnp
test
mov
mov
jge
loopne
out
xor
fwait
int3
popf
cmp
adc
nop
ret
cwtl
sbb
dec
cmp
xchg
and
adc
push
sbb
or
aam
test
push
mov
sahf
sub
add
out
and
sub
cmpsb
mov
dec
or
adc
adc
pop
mov
cmp
repz
outsb
insl
xor
push
jnp
sbb
test
push
sbb
hlt
mov
in
sub
lods
mov
jmp
cmp
adc
push
mulb
test
inc
ror
pusha
push
sbb
sbb
dec
mov
out
jl
in
fld
into
pop
mov
sbb
xchg
push
dec
sbb
lea
push
add
mov
xor
test
pop
sub
and
inc
cli
data16
ret
add
or
aas
les
push
inc
cli
aam
in
sahf
outsl
sbb
mov
imul
sbb
inc
pop
jnp
mov
mov
fdivp
dec
rcrl
out
stos
outsl
movsb
imul
iret
dec
cmp
adc
fidivrl
sbb
sbbb
jge
xchg
mov
test
out
lcall
jb
xchg
sbb
sarb
sahf
test
adc
lods
popa
jge
sub
fnstcw
dec
cmp
ucomiss
iret
sbb
mov
sbb
loopne
je
hlt
mov
ds
in
aaa
data16
and
nop
adc
cmp
test
cmpsb
lods
push
dec
mov
js
add
iret
ljmp
sbb
ss
adc
sahf
out
or
adc
jg
leave
xchg
pop
mov
in
inc
dec
add
sub
sub
push
inc
fcompl
adc
jbe
mov
testl
ja
cmp
mov
sbb
or
sbb
cli
inc
popa
loope
or
push
aad
aas
jp
xchg
arpl
or
inc
or
stc
loope
xchg
cs
or
fwait
push
pusha
inc
sbb
lods
sbb
sbb
lret
xchg
xor
rcr
mov
cmp
shll
inc
data16
pop
loope
mov
fcom
jo
mov
jmp
adc
adc
jae
push
pop
aam
add
subl
push
sub
sbb
mov
inc
cmp
test
lcall
adc
sbb
mov
pushf
sbb
pop
call
sbb
divb
sbb
mov
pushf
cwtl
lret
jp
sbb
mov
scas
clc
rorl
jmp
fwait
clc
nop
xchg
leave
mov
pop
ljmp
inc
arpl
incl
fidivrs
les
mov
fldt
das
jp
mov
sbb
incb
add
dec
push
stos
in
out
push
mov
xchg
sbb
enter
imul
inc
pop
mov
pop
xor
sbb
gs
stc
or
repz
pop
xchg
sbb
or
mov
lahf
cmpsl
xchg
and
or
gs
in
lret
xor
xor
sub
and
sbb
add
cmp
stos
shrb
mov
gs
fsubrs
cmp
adc
xchg
fildll
insb
test
and
ret
sbb
pop
sar
inc
adc
daa
aad
adc
dec
cld
out
mov
xchg
push
sbb
test
cmc
dec
insb
pop
jmp
cld
jg
lret
jge
lea
pop
and
inc
sbb
jp
sbb
popa
dec
mov
sbb
in
jl
pop
movsl
sbb
insb
aas
lret
ret
xor
sti
mov
inc
inc
loope
inc
shr
xchg
xor
out
aad
cmp
add
jb
loope
jecxz
sarb
or
and
cmp
out
lock
andb
dec
repz
sbb
mov
push
lods
pop
pushf
shl
fadd
and
and
mov
cmp
adc
xor
mov
sbb
mov
or
jg
loope
fwait
out
notl
cmpsb
sbb
in
mov
adc
sub
fwait
js
mov
cmp
ss
sbb
movsl
sbb
mov
in
loope
or
mov
roll
jns
out
mov
jb
adc
dec
sub
lahf
bound
scas
adc
pop
iret
jg
xchg
imulb
clc
push
xor
enter
scas
andl
mov
repnz
pop
rcrl
sbb
ss
rcrl
stos
negl
pusha
das
xchg
pop
sbb
jle
sbb
fisubl
in
and
xor
pop
mov
test
test
sbb
call
xchg
es
push
sub
dec
fcmovb
push
jne
and
fistpll
xchg
cltd
fwait
sbb
pop
arpl
rorl
add
jmp
cmp
adc
xchg
les
aam
outsl
gs
push
scas
sbb
lea
jo
push
test
test
mov
scas
insb
stos
rcrl
and
cltd
mov
sbb
movsb
pop
sbb
into
xor
and
stos
popf
in
mov
or
xor
sti
test
pop
out
test
dec
add
repz
int
sbb
lahf
stos
in
adc
aad
sub
sbb
or
adc
dec
dec
xor
daa
fwait
adc
mov
mov
adc
or
dec
mov
das
jbe
sbb
sub
and
mov
mov
push
sbb
mov
jbe
lods
aaa
arpl
lods
inc
clc
sbb
or
test
iret
add
adc
jbe
dec
dec
addr16
ja
mov
ljmp
sahf
test
add
stos
sub
cmp
xchg
mov
sbb
aam
cld
das
ljmp
inc
lret
cltd
xchg
sbb
vaddss
aaa
popa
lret
sbb
and
mov
ljmp
dec
std
adc
movsb
ret
adcb
repz
cmp
js
sbb
xchg
or
sbb
jle
cmpsb
test
push
mov
sahf
mov
lahf
pop
sbb
inc
sar
mov
dec
fdivs
sbb
imul
shrb
stos
mov
jo
pushf
or
push
and
push
inc
pop
sbb
std
fmuls
sbb
sbb
mov
bound
sbb
sbb
ret
mov
sbb
mov
loope
fwait
push
inc
xchg
iret
imulb
jp
pop
xlat
icebp
push
add
int
scas
je
in
out
jp
mov
fstps
mov
and
mulb
cmp
arpl
nop
sbbl
jmp
jne
aad
rclb
sbb
repnz
loope
test
loope
ret
ficoms
and
das
sbb
adc
jbe
push
xor
stos
xor
jmp
mov
cmp
loope,pt
jo
repz
loop
mov
in
mov
call
iret
jp
xchg
jecxz
stc
pop
loopne
mov
scas
push
test
je
add
xchg
lret
sbb
xchg
sbb
jmp
outsb
pop
sbb
ret
movsl
sbb
sbb
xor
sbb
iret
pop
test
mov
mov
or
jns
adc
pop
pop
jecxz
adc
movb
std
ret
jae
in
push
iret
scas
push
sbb
xchg
insb
and
adc
adc
push
cmp
arpl
mov
dec
jne
pop
gs
sbb
add
mov
or
cmp
rcrl
and
push
lret
pop
mov
stc
lcall
pop
in
into
daa
sbb
or
mov
sbb
or
cmc
mov
push
xorl
clc
and
mov
lock
jnp
and
insl
jmp
sbb
xchg
sbb
sahf
adc
mov
dec
loope
cmp
mov
sub
subb
jge
sbb
xchg
xchg
mov
xor
and
lods
add
sub
jg
int
mov
in
dec
sbb
stos
aam
in
mov
loope
cmpsl
fisttpl
sub
xor
sbb
sub
fistps
xlat
cltd
adc
mov
pop
test
je
ret
sbb
pop
adc
cwtl
inc
outsb
xor
push
push
iret
push
push
cmp
mov
jae
jmp
daa
lea
ret
repnz
je
pop
test
pop
jle
xchg
mov
jecxz
cmpsl
push
cli
inc
int
jno
popa
sbb
cs
sbb
addb
jmp
mov
push
fsts
in
sbb
sbb
lcall
loope
hlt
ficompl
adc
popf
mov
push
or
sbb
xchg
cli
cmc
fistl
orl
add
sbb
xchg
jnp
xor
pushf
cmp
imul
inc
mov
push
aas
bound
retw
add
push
pop
push
stos
loopne
pop
cltd
loope
adc
fdivrl
into
sbb
mov
popf
sbb
bound
inc
scas
mov
out
sbb
rcl
addr16
mov
mov
push
hlt
bndldx
aas
pop
fistpl
roll
andl
outsl
in
cmpsb
jg
sti
sbb
or
jle
sbb
mov
ficomps
add
cmc
iret
pusha
cld
loope
sub
popa
xchg
ds
adc
push
dec
scas
hlt
add
xchg
movsl
push
add
or
inc
jno
xchg
ret
fnsave
and
test
iret
test
jl
sahf
jns
sbb
dec
test
shl
vphaddbw
and
or
add
in
call
pop
fidivs
sbb
pop
xchg
pop
adc
push
inc
call
push
mov
mov
sbb
push
sbb
popa
std
orps
sbb
add
imul
push
xchg
push
nop
ret
push
aas
je
lods
das
jnp
dec
xchg
xor
dec
les
in
sub
xor
xchg
add
stos
cwtl
inc
loope
add
cs
adc
mov
jmp
push
sbb
negl
out
sbb
test
mov
cs
sbb
jnp
cmp
pop
dec
ret
lcall
dec
add
and
int
aam
lcall
fdivrs
xor
push
pop
add
cmpsb
sbb
pop
sub
add
ljmp
push
cwtl
sbb
fidivs
push
mov
sarl
ljmp
inc
mov
aad
leave
sbb
out
repnz
jns
jae
fisubrs
aas
lods
jle
xor
lea
into
aad
sbb
adc
test
out
sbb
aam
push
loop
jbe
in
sbb
xor
jmp
mov
jecxz
dec
fisttpl
test
sbb
scas
imul
clc
test
mov
cmpb
adc
sbb
fidivl
enter
mov
enter
xor
pop
stos
add
or
sub
xor
or
adc
int
pop
pop
xlat
mov
ficompl
adc
push
arpl
imull
clc
ja
fidivl
pop
jno
xlat
out
leave
stc
sub
xor
xchg
add
arpl
push
jle
inc
mov
leave
gs
mov
adc
xor
jns
jge
in
xor
mov
rcr
test
call
xor
pop
filds
xor
push
jg
adc
lea
mov
fisttpl
push
stc
xchg
mov
in
jge
pop
pop
pop
std
pop
in
lret
cwtl
mov
jg
mov
pop
lods
jo
add
lods
dec
in
ss
movsl
aam
sbb
mov
xlat
lds
sar
xor
fstpl
repnz
ret
fisttpll
or
outsb
into
icebp
hlt
or
out
push
sarb
xchg
cmp
adc
enter
ja
dec
out
and
inc
or
adc
int
test
xchg
xchg
mov
pop
out
mov
js
sbb
scas
stos
js
popa
cltd
enter
add
mov
cwtl
mov
pop
stc
pop
ja
andb
or
jecxz
cwtl
test
pop
add
sbb
xchg
mov
or
dec
out
sbb
fs
or
or
icebp
mov
lcall
aad
js
fcmovbe
inc
jne
hlt
mov
f2xm1
xlat
les
shrb
jnp
sub
mov
leave
pop
aad
hlt
sbb
or
lods
loop
shll
cmp
fsubrs
std
adc
outsl
ficoml
xchg
sbb
push
clc
inc
mov
pop
cmp
pop
test
mov
outsb
sbb
mov
adc
out
iret
imul
sbb
dec
push
jmp
push
orb
fsts
shlb
popf
repnz
mov
outsb
push
test
xchg
inc
push
aas
sbb
stc
jo
xchg
xchg
and
lcall
addr16
mov
jg
push
ret
push
ds
jmp
inc
jbe
dec
inc
fidivrl
hlt
inc
fmul
test
fisttpll
les
pop
cmp
cmpsb
sarb
divb
xchg
adc
or
lret
push
in
mov
aam
ror
cmp
or
or
sbb
aam
aam
dec
sbb
sbb
lcall
sbb
mov
daa
test
ja
jno
sti
mov
push
mov
mov
bound
mov
rorl
inc
xchg
adc
adc
ljmp
js
fldl
jns
cmp
mov
xchg
xchg
imul
xrelease
add
in
icebp
or
fildll
adc
int
popa
mov
cwtl
inc
cld
pop
xchg
fucom
dec
sbbl
test
jo
loopne
data16
in
push
xchg
jnp
cmp
int
mov
inc
sbb
mov
jnp
rolb
or
out
pop
mov
xchg
movsl
cltd
aad
mov
fadds
mov
jo
cmpsl
call
loope
sbb
adcl
push
loope
pop
rcrb
in
xchg
mov
scas
idivb
shlb
adc
ret
dec
xchg
or
mov
movsl
mov
repnz
inc
adc
jl
xor
jns
mov
jmp
cmp
aad
dec
adc
jmp
xchg
addr16
iret
sub
cltd
rcrb
clc
lcall
loope
iret
xlat
lcall
and
pushf
call
notb
dec
in
adc
jecxz
inc
mov
dec
fdivs
push
cmp
push
mov
fstpl
jae
addl
cwtl
movsb
or
hlt
les
stc
mov
sbb
sbb
popf
sub
call
cld
or
cmp
mov
sbb
and
adc
lahf
hlt
incl
mov
ja
push
fisubl
mov
mov
fldl
sub
les
int
pop
adc
jae
ljmp
cli
aaa
and
push
shlb
mov
adcl
popf
or
rcrl
divl
stc
dec
lret
cltd
icebp
fists
jge
dec
repz
xlat
sbb
push
icebp
mov
rcll
add
mov
mov
cwtl
and
mov
cltd
test
pop
and
adc
sbb
pop
test
rorl
stc
fnstenv
sbb
div
push
mov
inc
jmp
sbb
lods
dec
cmp
movsl
hlt
fnstsw
mov
and
imul
sub
ja
push
filds
xchg
in
notb
mov
into
xor
sahf
sarb
sub
clc
mov
rcl
adc
rcr
or
negl
ficoml
mov
mov
cli
pop
inc
xchg
cwtl
insl
push
sti
aad
push
cwtl
jmp
and
jp
les
mov
mov
movl
push
cmp
cmp
ret
stc
mov
cmc
pop
xchg
xchg
into
loopne
xor
adc
mov
pop
es
out
or
push
inc
arpl
mov
rolb
imul
xchg
mov
pop
fmuls
aad
sbb
push
fdivs
xchg
jg
sahf
jns
into
xchg
sarb
fnstsw
jge
inc
sbb
mov
out
and
sbb
mov
andl
dec
rcl
das
xchg
test
lock
imul
push
push
aad
pop
int
adc
lahf
push
dec
sub
jne
rcrb
and
xor
popf
mov
xor
xlat
and
ret
inc
push
dec
loop
fistpll
lahf
adc
ds
adcb
add
or
jns
test
pop
push
cmp
inc
pop
cli
or
fstpl
negl
cltd
add
fcomi
cltd
lahf
xchg
push
daa
xor
push
jae
test
pop
test
add
aam
mov
and
mov
dec
jmp
stc
and
or
fcompl
mov
outsl
fnstsw
cs
daa
inc
test
fistl
imul
in
fdivs
outsb
adc
cwtl
add
aad
mov
inc
cld
jg
int
fstpl
aad
or
inc
test
jl
pop
xchg
cld
add
lds
aad
jb
add
pop
jp
rclb
pop
int3
sbb
call
fcmovb
dec
fwait
je
std
test
jg
mov
adc
loope
mov
fisubl
jno
rclb
aas
bound
stc
icebp
fildll
rorb
fistpl
neg
push
adc
xchg
cwtl
xor
push
roll
js
jns
adc
push
and
pop
shl
mov
mov
inc
mov
mov
inc
xchg
push
iret
insl
aam
loopne
imul
lcall
lods
mov
std
cmp
pop
mov
jno
sbb
insl
adc
mov
jns
mov
inc
add
dec
flds
inc
push
adc
sbb
mov
dec
mov
repnz
pop
das
rclb
or
aam
cltd
xor
push
lahf
sub
loop
adc
in
sar
mov
and
pop
xor
inc
loop
mov
out
mov
and
aas
mov
mov
int3
mov
jecxz
add
mov
xor
cltd
not
mov
dec
push
addl
sub
mov
fildl
add
jo
sub
loopne
insb
push
in
pop
call
mov
arpl
xlat
sbb
dec
or
add
call
ljmp
jle
mov
xchg
or
xlat
pop
pop
mov
popf
pusha
mov
or
ss
es
subl
loopne
clc
jb
dec
and
call
lret
pop
mov
fisttpll
mov
xor
inc
test
lds
es
sub
xchg
cli
lea
inc
inc
nop
cmp
fstps
pushf
mov
mov
inc
lahf
roll
push
lret
or
lods
mov
fs
jmp
add
nop
not
test
xor
pop
adc
cmp
js
cltd
mov
ja
sti
out
adc
xchg
popa
xchg
clc
push
fwait
lahf
fisubrs
sahf
gs
mov
push
fldt
fidivrl
cltd
and
shlb
shr
sub
or
jmp
ds
mov
xor
popa
aam
jge
mov
out
stc
push
pop
xchg
sbb
mov
js
cld
sbb
mov
jge
add
push
adc
hlt
xchg
push
xchg
pop
add
jle
sbb
jp
daa
cltd
insl
loope
inc
mov
and
mov
push
out
mov
pop
adc
mov
cltd
add
popf
ficoml
pusha
in
mov
cmpsb
add
pop
cmc
mov
leave
enter
fistpll
push
add
lcall
mov
repz
roll
das
negb
sbb
int3
lds
out
pop
adc
or
xor
cmp
mov
sti
pop
mov
notb
mov
jmpw
fisttps
fcmovb
xchg
cmpsb
mov
cmc
mov
lcall
pop
jne
stos
mov
ja
mov
lret
fwait
gs
jbe
sbb
sub
sub
sarl
insl
or
in
dec
mov
imul
add
data16
test
repz
imul
lock
addl
fisttps
and
push
jg
jmp
hlt
lret
rcrb
das
mov
aaa
adc
or
pop
out
faddl
mov
out
outsl
fisubrl
movsb
adc
mov
and
movsb
cs
pop
jne
cmp
pop
sub
lahf
inc
clc
in
push
sbb
add
push
out
xor
push
inc
mov
cltd
insl
pop
add
and
aam
or
mov
mov
insb
mov
mov
xchg
xor
sbb
xor
out
shl
lret
cltd
cmp
sar
sarl
jmp
mov
ss
sub
sahf
xchg
mull
xchg
js
add
push
clc
pop
test
xchg
xlat
repz
and
stc
lds
aam
mov
lcall
sub
pop
rorb
int3
ret
mov
jb
lods
mov
xor
icebp
addr16
xchg
pop
shrb
stc
jl
das
mov
fistpl
fdivl
push
mov
dec
or
aaa
adc
pop
xor
cli
pop
adc
mov
add
add
stc
jno
adc
iret
dec
and
cmc
inc
pushf
outsb
mov
add
cmp
sbb
pop
bound
inc
xor
hlt
mov
adc
mov
gs
pop
aad
loopne
sbb
push
repnz
xchg
inc
inc
test
pop
mov
cltd
mov
lahf
adc
pop
xor
pop
sahf
ja
push
jge
aas
lea
lods
cmpsb
adcl
pop
inc
push
popa
stc
cld
xchg
push
imul
dec
mov
xor
jne
pop
jae
mov
fildl
cmpsl
xor
rolb
pop
sbb
orl
cmp
adc
add
mov
mov
hlt
pushf
fcmove
clc
xor
sbb
sbb
mov
pop
loopne
cmp
push
sub
pop
jo
arpl
inc
mov
in
jns
mov
fstpl
mov
sbbb
sarb
out
jecxz
aad
jge
es
roll
add
aaa
add
icebp
jnp
xchg
bound
movsl
sarl
jbe
add
aas
inc
fldenv
and
shl
cltd
mov
mov
sti
mov
dec
mov
aam
pop
inc
add
addr16
or
xchg
in
mov
lret
sbb
jmp
jo
xchg
xor
fcmovnu
repz
add
push
push
and
push
fldt
cld
xchg
push
icebp
fsubrs
movsl
outsb
mov
push
pop
rcll
popa
fwait
bound
cmpsl
sub
xor
push
add
idivb
call
ja
sbb
fs
cwtl
pop
flds
or
movsl
push
out
dec
mov
adc
xchg
lcall
inc
sbb
sbb
test
rorb
adc
das
imul
jl
or
or
jns
add
mov
scas
aaa
xor
sti
scas
lock
mov
popa
iret
mov
add
jge
shlb
sub
rcrl
push
cmp
dec
int
insl
divb
popa
cwtl
fidivrl
std
cmpsl
sbb
shlb
outsb
test
frstor
mov
and
cltd
mov
push
movsl
pusha
ficompl
fldl2t
jg
cmp
xor
or
xor
or
ja
adc
lds
push
mov
push
mov
or
subl
inc
mov
sbb
dec
xchg
jae
jnp
incl
inc
fiaddl
inc
test
mov
jno
add
dec
call
mov
negb
leave
out
cmp
push
rcll
mov
je
ds
test
pop
cltd
mov
xchg
lods
pop
ljmp
popa
shlb
sbb
aaa
adc
mov
cmp
pop
lcall
inc
mov
dec
fcmovbe
xor
jecxz
xchg
testl
gs
addr16
inc
mov
push
fwait
insl
leave
std
es
sbb
out
movsl
js
pushf
imul
sub
in
int3
adc
cmpsl
test
xchg
lahf
xor
xlat
push
cltd
or
movsb
neg
jge
or
push
fstpl
gs
shrl
adc
dec
mov
inc
shll
hlt
mov
push
inc
ss
jnp
cld
mov
aaa
test
cltd
popf
outsb
push
sar
lock
sbb
ja
int
repnz
mov
adc
insb
cmp
cwtl
pop
outsl
lea
sub
popa
sbb
outsl
stc
fimull
imul
push
inc
adc
adc
fstpt
rorl
add
xchg
test
cmp
addr16
cmpsl
iret
push
in
inc
mov
sbb
lock
sub
pop
inc
cmp
or
xchg
mov
sbb
outsl
mov
sbb
imul
inc
adc
sub
pop
nop
jge
lock
adc
rcrb
mov
outsb
mov
fucomip
sbb
mov
out
lret
bound
es
lock
cmp
rcrl
sbb
adc
roll
push
cmpsb
cmpsl
test
lods
jb
sbb
push
and
and
pop
sbb
pop
cld
and
lock
data16
icebp
adc
adc
cmp
lods
call
or
or
xlat
idiv
adc
neg
mov
rorl
aad
nop
cwtl
jne
dec
in
ja
notl
sub
jmp
fimull
jmp
ret
xchg
pusha
push
das
aas
gs
push
inc
lods
lods
xchg
mov
xlat
or
aas
xlat
pop
xor
cmpsl
pop
cmc
cmpsb
push
in
bnd
dec
loop
gs
aas
mov
mov
fisubl
cmp
mov
or
popf
push
jmp
outsl
in
lds
lds
push
adcl
sub
fcmovbe
xor
call
movsb
fcomip
jnp
fstpl
cwtl
add
or
mov
in
sbb
sbb
lahf
mov
fldl
mov
push
xchg
pop
int
stc
sub
outsb
add
rcr
and
and
fnstsw
xor
dec
xchg
sti
fsts
and
in
jle
aad
enter
fbld
mov
cs
out
hlt
jmp
push
jle
pop
push
pop
or
push
sbb
push
imulb
loopne
pop
fadd
jne
test
push
push
rclb
sbb
mov
fstl
scas
stos
pop
fcmovu
lock
xchg
xchg
rcr
repz
rolb
xchg
mov
sub
mov
shlb
int
je
cltd
lahf
stos
cmp
mov
aam
jnp
jae
ljmp
inc
fldt
pop
mov
cmc
jmp
orb
jns
mov
flds
or
xchg
imul
jg
cmp
mov
sbb
sbb
cmp
xorl
divb
cmp
pop
cwtl
xchg
mov
pop
mov
xor
mov
mov
insb
pushl
jge
xchg
sbb
add
and
subl
push
js
and
xlat
pusha
rol
lods
or
add
xchg
fisubrl
push
xlat
add
pop
mov
push
shr
adc
mov
sbb
add
push
fs
push
pop
call
sbb
dec
out
rclb
jns
add
pushf
adc
enter
stc
test
and
cmc
mov
sub
popa
leave
xchg
jbe
mov
pop
inc
add
fnstsw
rcrb
sbb
mov
iret
xor
pop
cli
rol
push
je
scas
xor
jge
cs
sbb
or
xor
repnz
mov
out
or
adc
xchg
stos
dec
and
mov
mov
insl
cmp
cwtl
push
and
pop
pop
xor
fcmovne
pop
mov
loop
cltd
xor
sub
cmpsl
std
dec
inc
mov
popf
rcrl
or
xchg
pushf
mov
cmpsb
adc
lods
outsb
jnp
lds
xor
popf
add
incl
notl
mov
in
push
xchg
icebp
or
and
dec
xor
ret
arpl
into
adc
lret
and
dec
dec
call
pop
push
xchg
pop
xchg
cltd
jo
stc
cmp
add
or
adc
popf
shl
xchg
sub
xor
push
xlat
rcrl
gs
fidivl
mov
xchg
push
dec
fcomps
jne
test
ret
mov
push
jnp
cmp
mov
xor
jnp
inc
sbb
inc
push
movsl
mov
out
xchg
cmp
clc
aad
adc
fstpl
fistps
shlb
push
cmp
insb
fsubrl
outsl
cmp
mov
cltd
stc
hlt
ds
xchg
push
sub
sub
add
enter
fdivrs
adc
fildl
es
pusha
mov
loopne
xor
adc
imul
xchg
rorb
dec
sub
std
adcb
stos
mov
xchg
je
insl
lods
int
and
push
jmp
lock
or
orl
push
ja
lcall
cmova
fiaddl
cli
jp
adc
shlb
jecxz
adc
sbb
fnsave
shlb
sub
xor
dec
sbb
and
jge
mov
jle
mov
push
mov
adc
xor
push
fcomps
ja
sbb
and
sub
mov
lahf
add
cli
daa
mov
rorl
test
jg
movsb
mov
fistl
pop
ja
rcrl
jo
shll
jb
dec
pop
out
popf
push
mov
dec
popa
dec
movsl
push
fiaddl
adc
lods
rorl
iret
cmc
xor
popl
mov
and
mov
stc
sub
lret
adc
inc
and
push
sbb
repz
mov
and
jno
dec
fbstp
sbb
js
pop
cmp
mov
idivl
testb
shl
xchg
mov
sub
ret
repz
push
xchg
sbb
mov
les
cmp
mov
loop
and
pop
lea
xchg
lahf
fimuls
fdivrs
dec
cltd
xchg
xchg
sarl
pop
out
push
dec
icebp
and
fsts
or
jbe
sahf
mov
or
stos
cmc
ficompl
sarb
xchg
and
loopne
pop
mov
dec
out
bound
int3
mov
sub
pop
sahf
adc
ret
adc
push
cwtl
repz
cmc
mov
sbbl
dec
inc
setnp
rorb
outsl
pop
pusha
js
fimuls
ja
sbb
inc
xchg
adc
lahf
and
adc
fldenv
int
lock
scas
push
dec
int3
inc
mov
outsl
fbstp
int3
xor
dec
in
ret
mov
inc
popl
add
enter
and
inc
cwtl
inc
js
gs
or
push
nop
add
sbb
cmp
inc
ljmp
xchg
sbb
dec
jl
aas
dec
jo
pop
pop
pop
cmp
cltd
lods
aad
insb
stc
mov
inc
push
movsl
cmpsb
pop
jb
push
mov
pushf
jp
cmp
mov
std
mov
fsubrs
loope
inc
adc
aaa
repnz
ja
adc
mov
icebp
fidivrl
pusha
jae
push
insb
fcom
cmp
mov
mov
data16
inc
xchg
push
fcmovu
je
push
fisttpl
popa
and
dec
add
inc
lea
jns
clc
mov
cmp
js
enter
nop
pop
cmp
outsl
lock
aad
xor
sbb
cmp
fsubp
xchg
test
xchg
call
int3
cmc
dec
loop
jo
xchg
out
je
in
lahf
mov
stc
adc
leave
xor
outsl
and
insb
xchg
jp
pop
mov
rcl
jmp
loope
test
ffree
cwtl
push
jo
aas
xchg
fidivs
lcall
cmp
das
xor
in
xchg
mov
inc
loope
cld
jbe
jns
clc
cmp
xchg
pop
pop
ret
filds
mov
leave
jecxz
clc
mov
cvtps2pd
sbb
popf
stc
sub
popa
mov
push
jmp
lock
test
xchg
in
bound
adc
push
cld
dec
add
fs
jmp
out
sbb
fisubl
push
inc
popa
ss
mov
movsl
lods
ja
add
pop
jle
xchg
insb
popf
xchg
and
rcrb
jae
xchg
inc
negb
cmc
cmp
insl
xchg
loopne
or
por
mov
lahf
dec
sub
bound
jnp
sub
xchg
aad
mov
fimull
or
sbb
sar
fildll
ficoml
or
lds
jnp
sub
cs
pushf
and
fsubs
mov
ror
lods
mov
fwait
jp
or
outsl
xchg
loop
xchg
sbb
mov
or
ficoml
imul
ljmp
mov
inc
nop
push
ret
xchg
popf
clc
dec
jno
and
jo
cld
in
shr
adc
push
adc
sbb
fiaddl
mov
cmp
scas
cld
js
sub
leave
outsl
dec
sub
test
sub
cltd
mov
popa
xchg
xor
mov
iret
lock
popa
xchg
ja
mov
adc
or
jo
aaa
fistl
mov
pop
stc
lds
xor
push
jbe
mov
push
sub
push
and
mov
adc
leave
and
call
sbb
pop
adc
shl
rcrb
stos
mov
mov
sti
fs
cli
arpl
inc
ret
xor
cld
fcoms
loop
imul
gs
mov
xchg
iret
outsl
clc
lret
mov
push
mov
popf
add
je
fstpt
js
mov
mov
imul
mov
shll
xchg
fcomip
imul
rcll
xor
sub
sub
ja
sarl
and
xchg
push
hlt
jns
sbb
paddw
xor
push
lret
push
mov
pushf
mov
fidivl
ja
push
lock
mov
cli
jnp
cmp
pop
mov
mov
addr16
inc
adc
pop
xchg
lea
cs
iret
fcmovb
and
out
pop
movsb
shrb
inc
int3
adc
rcrl
mov
or
ss
sbb
mov
pop
gs
fldl
push
push
dec
into
push
pop
dec
arpl
adc
sub
xchg
sbb
cmp
add
rcr
add
iret
add
sbb
and
dec
stc
stos
aaa
inc
dec
outsl
addl
pop
push
sub
pop
dec
repz
sbb
je
imul
xor
pushf
aas
xlat
lahf
jle
test
outsl
push
cwtl
mov
in
nop
cmp
push
jp
int
fcmovb
xchg
insl
mov
pop
jb
jno
pushf
mov
inc
mov
or
adc
jno
mov
lret
lcall
jge
mov
jb
fisubl
add
dec
push
xchg
push
mov
jb
int
idiv
repnz
aad
out
test
shr
dec
je
xor
jecxz
shll
fiaddl
repnz
popa
insb
adc
test
and
push
mov
ljmp
mov
daa
fnstenv
sbb
inc
jle
adc
flds
and
fucomi
mov
fiaddl
mov
js
es
mov
and
out
pop
cmp
xchg
mov
mov
xchg
aas
xor
xchg
movsb
or
jae
lock
jmp
repz
rcll
js
cmp
in
stc
add
sub
jns
cmp
add
fisttps
scas
imulb
add
movsb
xchg
in
fisttps
cltd
jnp
xor
outsl
ja
add
pop
fiadds
mull
dec
cltd
shlb
jae
pop
insb
mov
lret
sub
xchg
pop
xor
lret
push
rcl
fwait
add
filds
dec
lods
and
add
loop
cs
sbb
fisttpll
not
out
lock
jns
ret
push
int3
dec
cmp
mov
rclb
pop
fucom
jge
clc
jno
imul
lea
lock
loope
mov
test
dec
iret
cmp
negl
xchg
out
insl
xor
or
jno
cmpb
out
xchg
add
cmpsb
xor
addr16
push
dec
xchg
stc
sahf
movsl
mov
or
adcb
les
xchg
cli
in
enter
outsb
lods
cmpl
cmpb
stc
ficompl
jl
xor
test
ljmp
aad
int
inc
fiaddl
repnz
repz
sub
jmp
xchg
lea
sbb
xchg
adc
fisubrl
and
adc
mov
and
in
popa
and
xor
and
inc
xchg
test
andb
inc
dec
mov
jmp
xchg
pop
fdivrs
push
pop
push
push
xor
push
pop
add
and
in
sbb
xlat
lock
inc
inc
push
rcll
addb
adc
push
push
dec
push
lock
cwtl
dec
std
stc
pop
js
mov
cld
fadds
jmp
or
ret
notl
in
pop
test
andb
popf
enter
rorl
cmc
out
add
test
cmc
daa
jp
int
cmpsb
scas
push
std
fcmove
push
or
loope
dec
arpl
outsl
add
sub
sti
adc
push
loopne
ret
pop
sub
mov
mov
or
les
je
mov
mov
push
xor
mov
out
cltd
in
cmpsl
mov
arpl
jb
push
or
adc
cwtl
lock
jmp
xchg
jg
sti
inc
int
lock
stos
aam
add
loope
std
lds
roll
add
adc
mov
test
cwtl
mov
loop
test
cmp
adc
stc
das
ja
rclb
ss
jne
adc
es
mov
pushf
clc
cld
enter
fstl
gs
adc
mov
mov
ss
aad
mov
lret
and
daa
xchg
push
push
pop
mov
lret
adc
shll
stc
jp
cmpsb
dec
fs
insb
jnp
xor
cli
sbb
or
hlt
dec
outsl
aam
sbb
ret
dec
or
inc
icebp
ficompl
test
mov
and
or
mov
sbb
pop
shr
xchg
jp
lods
pop
pop
lret
adc
adc
ljmpw
aad
xchg
loop
popa
fiaddl
imull
push
push
rclb
stos
int
lcall
add
mov
sbb
push
pop
add
sbb
jle
sarl
rcll
sbb
push
daa
mov
add
fwait
test
mov
add
fcoml
bound
jnp
mov
mov
cmp
int3
pop
rcrb
xor
push
mov
mov
pop
inc
stc
mov
or
push
xor
xor
scas
mov
rorb
push
stc
bound
mov
cmpsb
adc
lcall
cmp
add
bound
sti
cltd
pop
vpsraw
or
push
jo
push
rolb
xbegin
mov
ljmp
negl
aaa
into
loopne
add
jne
mov
sar
and
xchg
sub
jp
ret
aam
loope
adcl
je
cltd
or
push
sbb
imul
mov
bswap
push
or
adc
rclb
lcall
cli
pop
gs
in
xchg
dec
add
mov
ficoms
sbb
lods
jbe
pop
scas
pop
inc
mov
xor
push
push
sub
sbb
or
movsb
sbb
push
push
xchg
repz
out
sub
inc
mov
scas
jne
dec
fimull
rcrb
add
pusha
addl
pop
mov
xchg
inc
mov
rclb
pop
xchg
push
out
xor
sub
mov
iret
shlb
or
mov
jbe
dec
cmc
cmpsl
jns
mul
jbe
push
fs
dec
mov
inc
add
repnz
jmp
adc
sti
pop
sub
inc
enter
mov
cmp
mov
call
sub
mov
ret
mov
xchg
sbb
rcrb
and
fsubr
loopne
inc
ljmp
mov
push
adc
in
sub
arpl
shll
mov
mov
negb
popf
jmp
mov
mov
in
adc
xchg
push
dec
aad
and
inc
push
mov
jge
std
or
mov
mov
ficoml
test
push
mov
or
mov
enter
loopne
mov
mov
pushf
ljmp
sar
xorl
fdivr
lret
imul
or
insl
jbe
cmp
cld
outsb
filds
xor
pop
lock
stc
cmp
mov
frstor
xlat
movsl
sar
sub
jns
cli
leave
aas
inc
push
out
dec
or
addr16
inc
mov
mov
fimuls
lret
orl
push
mov
pop
inc
jp
orb
lret
ficompl
shlb
mov
mull
adc
mov
mov
rolb
bound
mov
imul
shll
and
shrb
dec
jmp
ficoml
movsb
outsb
lahf
in
iret
mov
int3
xor
xor
push
xchg
adc
shll
leave
cmp
out
adcb
fistps
fiadds
leave
mov
cmp
aam
xchg
xchg
test
out
xchg
stos
dec
pop
pop
rorb
testl
clc
mov
sbb
fnstenv
xchg
out
sub
outsb
or
loopne
mov
mov
pop
stos
or
out
shlb
lods
dec
sub
andb
mov
jecxz
std
cmp
xchg
or
add
dec
ljmp
or
ret
add
outsl
leave
ss
mov
mov
xlat
arpl
adc
xor
loope
mov
sbb
loopne
push
adc
mov
push
js
lret
adc
jg
jne
les
cmpsl
fwait
sub
pop
mov
push
stc
xchg
or
mov
add
xchg
xchg
aaa
or
stc
push
sub
mov
add
rcr
push
jnp
scas
mov
in
mov
cltd
es
jb
xchg
pop
push
shlb
and
jl
cmpsl
pop
mov
dec
pusha
mov
sarb
inc
out
lods
shl
xchg
xor
xor
lea
xchg
add
and
cmp
inc
sbb
or
fldenv
xchg
sub
xchg
fsubrs
mov
adc
pushf
js
mov
les
jnp
jp
ror
sub
lods
fmuls
les
cwtl
addr16
adc
mov
gs
mov
ja
adc
psrad
test
pop
sbb
nop
add
bound
out
xchg
mov
hlt
call
pop
sbb
or
and
gs
mov
cmp
adc
xchg
sub
pushf
ret
pop
lret
mov
dec
and
pop
and
push
rclb
sbb
lds
add
jne
mov
sbbl
xchg
test
lods
fisubrl
push
bound
mov
inc
jle
daa
xlat
xchg
mov
mov
test
mov
cmpsb
mov
sub
je
xlat
lret
scas
outsl
icebp
xchg
mov
in
and
xchg
popf
jae
movsb
fwait
daa
stc
push
add
call
sti
adc
sbb
out
or
pop
je
xchg
dec
lea
aad
jbe
cmp
cld
lret
mov
dec
add
lods
jo
shr
dec
pop
mov
jl
fisttpl
fnstenv
pop
mull
mov
loope
adc
push
mov
jmp
cltd
inc
pop
cmp
adc
sub
sbbb
and
aad
mov
push
addl
xor
clc
sbb
jb
call
xchg
adc
out
mov
mov
dec
movsl
xor
or
or
sub
ja
test
mov
mov
mov
aas
test
pop
pop
lods
push
dec
pop
xchg
pop
shlb
inc
mov
and
add
mov
loop
outsl
pop
call
dec
hlt
ror
push
mulb
sbb
and
aad
cli
jp
xor
pop
mov
cmp
cmc
jg
push
test
mov
je
enter
fisubl
xor
out
data16
mov
dec
push
push
or
sub
adcl
fisttpl
jge
jb
ret
mov
loope
int3
aam
xor
stc
mov
inc
loop
insl
jge
cmpsl
int3
adc
lahf
add
aam
fucom
mov
cmp
gs
cwtl
jns
sub
je
inc
add
pop
mov
insl
pusha
nop
mov
pusha
mov
nop
xchg
negb
inc
insl
jae
lock
fs
test
mov
push
fiaddl
push
enter
cmpsl
push
ret
jo
xorl
cltd
mov
adc
les
jnp
fisubl
aas
js
outsl
lret
stos
mov
or
pop
imul
test
jl
push
test
add
gs
lret
dec
out
lods
popa
out
push
shll
and
jecxz
sub
int
pop
mov
inc
mov
imul
add
loope
adc
leave
test
sbb
inc
sub
int
pop
pusha
icebp
notb
rclb
fisttpl
dec
aas
test
outsl
loopne
or
inc
adc
pop
clc
pop
adc
mulb
insl
stc
mov
pop
cmp
leave
fsubs
test
and
enter
xchg
iret
xor
and
out
gs
xchg
mov
jae
sbb
adc
jecxz
pop
outsb
mov
add
mov
mov
sti
mov
std
mov
mov
repnz
sarl
jns
test
mov
cmp
call
jb
shlb
iret
push
in
repz
jle
lock
cwtl
je
jns
adc
or
icebp
out
push
insb
out
push
popf
fstl
outsb
std
imull
sbb
jne
inc
cmp
mov
imul
push
daa
cli
mov
pop
inc
int
enter
push
mov
dec
subl
push
add
sahf
mov
notb
add
lret
cmp
aas
cltd
mov
sub
stos
xlat
sbb
mov
inc
adc
loope
jg
and
hlt
outsl
data16
test
stc
cmpb
sbb
cmp
test
push
insb
sbb
mov
pop
and
xlat
pop
rorb
shrl
xor
dec
stos
lret
mov
push
and
in
sub
mov
insb
daa
clc
lret
cmp
enter
push
stc
rclb
notl
nop
jns
repnz
mov
pop
mov
lahf
pusha
mov
adc
stc
pusha
out
scas
mov
or
mov
cmp
jmp
mov
ficompl
enter
jnp
push
addr16
pop
dec
neg
pop
fsubrl
ja
ret
inc
ss
inc
mov
test
adc
cld
xlat
jl
push
jo
and
mov
mov
nop
inc
repz
add
sub
popa
cmp
cltd
enterw
jb
rorb
popa
xchg
pop
add
lods
mov
or
popf
xchg
rcll
lods
push
xor
popa
out
mov
mov
sti
fnstsw
jl
stos
sbb
add
dec
or
outsb
dec
idiv
pop
cmp
cmpsl
andl
mov
test
push
fmul
pop
ja
lock
jae
sbb
arpl
sub
or
xor
daa
push
sbb
arpl
orl
push
push
outsl
push
xchg
std
rcrb
xchg
test
mov
loop
fs
jne
icebp
xor
ret
mov
sub
adc
in
push
pop
daa
push
jmp
test
mov
mov
push
fistpl
ds
push
or
sub
or
cmp
dec
xchg
or
xchg
push
jo
xlat
mov
xor
ret
out
ds
repnz
loope
aam
and
adc
or
xor
jo
std
pop
aas
fcmovne
mov
test
adc
xchg
lret
sub
sbb
rclb
sbb
adc
pop
loopne
push
cmpsl
clc
aad
lahf
sbb
jo
fimull
mov
fsubr
int
jnp
xchg
stc
repnz
dec
mov
cmp
fmuls
cs
jns
mov
xchg
or
pop
stos
repnz
repz
ja
pop
out
xlat
mov
enter
mov
adcl
mov
dec
imul
imul
sbb
sbb
cmp
loopne
scas
fdivs
add
sbb
xchg
sbb
sbb
cmp
sub
sbb
loope
subl
xchg
sbb
pop
sbb
adc
xlat
ret
add
pop
lret
stc
pop
rcll
jno
push
xchg
bound
cmp
xor
or
out
fistpl
or
jne
in
stc
jo
fcompl
out
lods
stos
aam
sbbb
xchg
ror
mov
std
fcomip
cmpsb
push
imul
je
int
xchg
ss
insb
and
sbb
cmp
cmpsb
pop
cmp
adc
xchg
shlb
adc
es
sahf
push
cmpsl
aam
pop
dec
jae
mov
xor
inc
sbb
filds
cmp
adc
daa
lcall
cmp
adc
bound
jmp
push
lret
pop
out
xchg
sbbb
xor
pop
push
fucom
test
pop
je
nop
pop
jb
xlat
sbb
lret
jmp
mov
cmpsb
negb
mov
insb
popa
mov
je
xor
cli
pushf
shll
jmp
xor
xchg
loop
cmc
mov
push
sbb
sub
addb
sub
data16
cltd
gs
sbb
adc
pop
pop
push
ret
aad
imul
adc
adc
loop
adc
push
shll
mov
rorb
sahf
fdivrs
pusha
xchg
sbb
push
sbb
mov
jae
push
repz
imul
push
jge
out
cmc
popl
push
cmpsb
sbb
jmp
mov
push
push
pop
cmc
ret
rcr
lock
or
and
pop
mov
sbb
add
pop
stc
jle
popa
mov
adc
mov
push
sub
jecxz
cmp
xor
push
cmpsl
outsl
mov
xchg
xchg
pop
push
notb
arpl
cmc
enter
sbb
pushf
movsl
jle
pusha
xlat
jb
xchg
in
or
cli
xchg
sbb
sbb
jp
mov
add
jmp
xor
sub
shl
sarb
xor
imul
add
mov
lahf
aam
mov
mov
adc
ljmp
adc
sarb
and
add
outsl
jecxz
out
loope
mov
adc
cmp
mov
lahf
xchg
push
xor
mov
mov
out
sbb
sbb
or
fsts
push
pop
xor
push
leave
jae
dec
jecxz
xor
jl
jge
sbb
push
roll
rorl
or
sbb
int3
divb
sbb
daa
sub
jecxz
pop
push
aas
test
sub
pop
aad
test
add
cltd
pop
adc
jno
mov
mov
jmp
icebp
xor
push
or
xor
cltd
ljmp
pushaw
cmc
popa
sbb
cmpsb
test
or
mov
jl
xchg
insb
pushf
adc
fcmovnu
pop
or
xchg
sbb
sbb
pop
sbb
sbb
lea
dec
xchg
in
cld
mov
pop
push
push
call
adc
mov
inc
and
push
mov
ds
cli
xchg
shll
pusha
sub
mov
sbb
xchg
sbb
imul
gs
push
subb
sarl
mov
push
add
sbb
fmull
inc
sbb
mov
and
jmp
je
sub
adc
xchg
dec
sbb
fildll
sbb
mull
inc
adc
xchg
sub
pushf
sbb
pop
pop
rorb
roll
lock
subl
lods
adc
sti
dec
aaa
call
push
out
jg
lcall
sahf
rcll
arpl
scas
mov
mov
xchg
jle
xchg
pop
mov
insl
loope
shll
lahf
and
out
sbb
enter
or
andl
and
push
cmp
adcl
into
daa
seta
and
outsl
sarb
sbb
push
ret
cmpsl
or
in
sbb
push
out
loope
mov
inc
incb
sbb
in
push
xchg
fcompl
mov
mov
add
sbb
pop
sub
ss
lret
cld
sbb
cmc
add
das
sbb
sbb
mov
or
push
sbb
mov
fdivs
adc
insb
sbb
dec
in
inc
jno
push
pop
dec
sbb
add
sub
xor
push
fnstcw
sbb
popf
and
sbb
lcall
sbb
push
add
or
lds
and
test
or
jbe
sbb
jecxz
jnp
dec
adc
mov
pop
lods
in
stos
mov
push
xor
inc
fists
cmp
pop
sbb
pop
mov
sbb
je
loopne
adcb
or
test
stc
and
mov
lock
sub
sti
or
pop
ret
lcall
jge
jns
mov
pusha
cld
ret
or
test
or
fstpl
stc
lock
jne
mov
push
pop
pop
xchg
mov
adc
dec
mov
repnz
dec
std
add
xchg
mov
into
sbb
and
sbb
push
sbb
mov
add
inc
lret
enter
loop
fsubl
dec
sbb
mov
testl
cs
mov
fisttpll
push
scas
sbb
adc
cmp
lods
add
adc
mov
push
push
pusha
or
stc
jbe
xchg
cmpsl
or
xor
imul
jb
add
dec
or
sbb
in
adc
sub
add
and
push
and
push
lea
mov
sub
test
ljmp
mov
sbb
cltd
adc
cmpsl
mov
stos
das
add
outsb
vmread
or
add
pop
sahf
outsb
sti
or
out
jg
cmc
testl
lret
cli
into
xor
call
sbb
leave
mov
adc
sbb
pop
mov
mov
aad
sahf
adc
mov
xchg
or
sub
stos
push
clc
in
sbb
xchg
xor
movsb
xchg
popf
aam
dec
call
pop
fnstenv
out
cltd
xchg
jno
icebp
xchg
or
jo
insl
sti
xlat
icebp
mov
push
mov
jb
mov
nop
adc
pop
sub
push
mov
pop
sbb
push
mov
pusha
fwait
adc
loope
sbb
ljmp
in
pop
xchg
mov
mov
lods
adc
ds
dec
lret
sbb
fsubrs
mov
push
pop
lea
stos
pushf
and
sbb
repz
dec
je
sub
xlat
mov
or
mov
shrl
fidivrl
fsubp
sbb
lret
sar
lock
mov
pop
loope
cli
jne
or
test
shlb
lcall
cmp
fsub
or
mov
adc
mov
inc
sub
pushw
xchg
mov
lret
mov
sarb
add
in
in
mov
cwtl
clc
rcrl
xchg
into
mov
pop
shrb
xchg
mov
fwait
xor
je
stos
iret
adc
dec
add
or
ficomps
jne
adc
jnp
in
sbb
mov
sbb
cmc
fstpl
adc
pop
jg
mov
inc
lahf
dec
insl
adc
sbb
ljmp
hlt
jae
sbbl
xchg
sbb
cmp
add
adc
push
sbb
out
cmpsl
push
adc
das
inc
xor
in
mov
adc
add
fnstcw
insl
pop
sbb
sbb
fdivrp
stos
enter
paddq
pop
sbb
pushl
aaa
andb
enter
sbb
mov
sbb
enter
xchg
mov
add
gs
adc
mov
mov
mov
sub
push
sbb
mov
into
aam
xchg
xchg
jne
fwait
sub
lods
lahf
or
js
jp
sbb
or
jl
enter
mov
pop
sbb
stc
loopne
int
inc
xchg
mov
rcr
push
jno
adc
sub
fistpl
js
cmp
aas
sbb
scas
adc
and
cmc
lcall
lds
daa
push
add
jg
fstps
push
cwtl
mov
adc
notb
stc
push
fdivs
fs
push
lahf
push
mov
or
test
incl
in
iret
xchg
mov
ljmp
pop
sbb
add
xor
inc
mov
dec
sbb
cltd
dec
test
sahf
sbb
push
fstps
sub
aad
sti
stc
jbe
mov
or
sbb
addb
std
stos
outsb
clc
sahf
or
push
imul
or
dec
aam
aaa
fisubs
push
adc
push
sbb
pushf
fiaddl
cmpsb
sbb
mov
movzwl
clc
adc
xchg
jne
fsts
std
and
mov
add
lret
sbb
les
push
push
repnz
push
lods
dec
in
inc
jno
sbb
jecxz
mov
roll
adc
sbb
dec
sti
mov
and
mov
push
adc
pop
mov
and
jb
xor
das
push
movsb
cli
adc
mov
sbb
xlat
mov
arpl
push
sbb
inc
cwtl
fldl
mov
shrl
pop
xlat
and
fistps
fdivs
insb
adc
mov
repnz
xchg
jns
pop
inc
stc
js
inc
es
mov
cmp
ds
shrb
fimull
stos
or
xlat
rcrb
or
mov
jae
jns
push
mov
andb
mov
xchg
push
xchg
add
mov
xchg
pusha
notl
clc
popf
adc
cld
xchg
imulb
aad
cli
sbb
or
add
mov
xor
pop
je
rclb
sahf
mov
or
dec
loopne
inc
mov
data16
test
or
adc
mov
xchg
push
push
pop
lret
adc
or
xorl
xchg
push
pop
sub
mov
clts
mov
sbb
and
sbb
sub
les
jmp
xlat
movsl
cmc
xor
pop
popf
sbb
push
mov
imul
sarb
mov
repnz
push
pop
and
sub
mov
or
cmp
sbb
adc
cltd
jne
xor
cmp
cmp
sub
and
sub
adc
mov
xchg
sub
stc
nop
xchg
loopne
out
jle
pop
in
ds
jge
hlt
ljmp
xchg
ljmp
adc
repnz
add
mov
add
movsb
lea
push
dec
cmpsb
lret
ljmp
shr
push
push
call
inc
push
cmpsl
adc
mov
subl
or
cmp
js
dec
mov
or
mov
mov
in
mov
mov
or
adc
shl
sarb
jb
push
inc
xor
push
xor
xor
leave
push
sub
dec
jo
in
xor
movsb
push
ja
sbb
fcoml
xchg
jbe
sub
adc
inc
xor
xor
push
mov
cmp
test
sahf
movsl
inc
stos
xor
lock
lea
mov
add
or
xchg
mov
rolb
mov
xchg
mov
xor
push
xor
xor
xor
xor
shlb
xchg
xor
cwtl
inc
xchg
cmp
and
dec
pusha
and
aas
mov
arpl
stos
or
pop
pop
or
mov
or
mov
push
shlb
xchg
xor
add
inc
ja
cs
sub
pop
bound
movsl
je
test
movsl
loop
xor
jl
xor
aad
sub
push
mov
sbb
js
inc
rolb
jp
gs
xchg
insb
pop
imul
xlat
cmp
xor
and
and
test
mov
jle
xchg
jb
push
mov
test
lcall
dec
mov
xchg
jbe
jne
ss
xor
loopne
out
add
repnz
pop
and
fcmovnb
fwait
inc
pop
xchg
ret
fimull
or
mov
cmp
xor
call
loope
nop
add
sbb
imulb
int
popf
mov
mov
and
lock
daa
or
mov
loop
adc
repnz
test
fisubrl
in
xchg
push
pop
pop
sbb
push
mov
ret
push
xchg
jbe
test
addb
fnsave
cmp
in
lock
out
ds
popf
in
lods
in
push
jmp
ljmp
cmp
and
ljmp
mov
int3
jp
xor
jecxz
cmp
pop
dec
push
or
cwtd
push
imul
imull
bts
stos
sub
or
js
lea
and
or
mov
dec
mov
mov
mov
rorb
repnz
rolb
cmp
push
xchg
pop
add
cmp
insl
loope
sub
jbe
in
lea
repz
jae
and
and
call
jns
cmp
cmp
push
mov
mull
mov
ja
aaa
mov
and
and
and
and
and
repz
and
and
stc
jo
aam
pop
clc
sbb
ljmp
aaa
ljmp
ss
xor
je
xor
inc
mov
jae
and
xor
xor
push
push
cmp
clc
xor
and
and
and
and
and
and
call
and
sub
jb
pusha
jns
sbb
pop
mov
notl
xor
push
repnz
xor
xor
xor
xor
push
xor
adc
repz
es
es
xor
jbe
mov
ss
es
xchg
cmp
sub
gs
aam
xchg
stos
je
push
stos
xor
adc
rep
roll
adc
adcl
stos
jns
pop
scas
cmp
fsubrs
and
ljmp
mov
mov
mov
push
mov
repz
mov
mov
xor
push
dec
pop
cmp
clc
sub
sub
sub
sub
push
sub
cmc
sub
xchg
gs
mov
xchg
stos
jae
push
stos
xor
shlb
clc
jbe
mov
aas
mov
inc
push
pop
shlb
sbb
mull
ja
jbe
ss
es
es
mov
xchg
inc
and
xor
and
push
ret
sub
mov
xchg
sub
clc
lock
pop
arpl
sbb
divl
and
and
sub
and
push
sub
hlt
sub
xor
shrb
jb
push
sub
cwtl
loopne
scas
cmp
cltd
mov
mov
ja
push
es
mov
jne
push
es
aam
mov
xchg
and
and
and
and
xchg
push
sub
dec
flds
cmp
and
and
and
and
and
and
and
and
xor
adc
repz
and
nop
xor
fwait
cltd
pop
jns
sbb
cmp
clc
xchg
jno
ja
aaa
xor
xor
xor
xor
xor
xor
xor
adc
repz
pop
jae
push
pop
xchg
dec
push
or
push
in
stc
xor
pop
fstpt
fwait
sbb
mov
or
in
pop
mov
mov
push
push
cmc
es
es
aad
inc
xchg
stos
jne
aam
rcrl
movsl
jae
push
mov
in
add
mov
iret
pop
int3
inc
loope
imul
xlat
ljmp
inc
mulb
pop
es
jae
push
xchg
xor
push
jne
loope
mov
aaa
out
pop
out
imul
in
mov
cmc
ljmp
push
subl
es
xchg
es
push
cmp
adc
and
jmp
stos
in
sbb
pop
push
popf
fistpl
sbb
xchg
mov
inc
es
es
popf
cmp
fsubs
fcompp
inc
sbb
mov
xor
gs
xchg
out
or
cwtl
loop
dec
adc
jle
jo
dec
ds
push
test
js
mov
sub
sbb
sub
jl
pop
pop
cmpsw
pusha
sahf
push
mov
jle
outsb
jle
ds
std
ds
movsb
mov
idivl
test
and
pop
sbb
cmp
nop
mov
inc
mov
xchg
sarb
fstpt
jo
pusha
loope
pop
inc
push
xchg
loopne
imull
dec
xchg
leave
inc
pop
repnz
shrb
inc
jbe
mov
pop
daa
adc
xchg
jbe
mov
cmp
xchg
test
jg
into
xchg
cltd
xchg
or
je
mov
mov
mov
xchg
add
bound
and
cmpsb
shrb
mov
xchg
cld
jne
and
testl
dec
push
inc
cmp
test
inc
pop
sbb
fiaddl
pop
xchg
jbe
repnz
lcall
into
xchg
and
orl
add
mov
and
addr16
push
push
cmp
and
arpl
and
and
mov
test
xchg
test
jmp
cli
xor
mov
sbb
adc
test
xor
nop
xchg
addr16
shrl
pop
sbb
and
xchg
cmp
adcb
aas
loope
js
clc
ficoms
and
mov
cltd
push
and
aas
imul
bound
cmp
out
sbb
aas
sbb
pop
push
rcrl
scas
and
pop
test
movsl
test
cmpsl
les
fisttpll
and
psrld
ss
es
aas
jnp
and
loopne
stc
cmpsb
bound
repnz
xchg
and
enter
pusha
or
es
es
cmpsl
mov
test
jns
pop
sub
cltd
mov
cli
clc
mov
in
jmp
dec
adc
imul
iret
push
clc
adc
sbb
lcall
add
dec
jnp
xchg
nop
lock
shrb
mov
push
mov
cmp
cmpsl
lods
movsl
cmp
sbb
jne
repnz
test
pop
cmp
js
push
xor
inc
xchg
es
test
leave
inc
or
mov
fisttps
add
xor
mov
jge
or
orb
leave
icebp
pop
xchg
fwait
pop
fdivs
dec
ljmp
jmp
push
rclb
jae
jg
mov
hlt
loope
bound
jmp
fwait
and
addr16
xchg
neg
adc
xchg
or
xchg
call
and
mov
out
xchg
out
jbe
push
in
ss
push
rcl
mov
mov
xor
and
stos
xor
adc
adc
pop
leave
xor
fldenv
jns
pop
mov
clc
mov
mov
stos
cmp
sbb
mov
xchg
lret
ja
mov
cwtl
es
push
aas
push
push
push
sub
fs
sub
cmp
dec
adc
repnz
xchg
es
pop
xor
sbb
push
data16
cmp
push
xchg
mov
pop
mov
and
and
and
and
loopne
in
imul
andl
hlt
cmp
mov
or
roll
adc
cmp
xor
inc
cltd
loopne
popf
mov
test
loop
scas
and
cmpsb
in
and
push
adc
mov
es
mov
mov
sbb
imul
cmp
and
loopne
std
test
xchg
ret
xchg
xor
imul
imul
pop
hlt
inc
repnz
inc
repnz
call
test
repz
and
jbe
adc
inc
xor
mov
cmp
fwait
or
adc
sub
inc
mov
lock
xchg
dec
stos
or
stos
out
lahf
stos
outsl
stos
aaa
stos
out
fstpt
push
adc
lea
pop
xor
fs
imul
popf
adc
popa
mov
or
mov
add
ffreep
pop
pop
loopne
imul
scas
ljmp
int
test
or
pushf
es
es
jmp
mov
loope
xor
sub
enter
daa
flds
aad
mov
aam
mov
mov
xchg
ljmp
test
das
rol
push
pushf
add
mov
cmp
sbb
xor
mov
and
lock
arpl
push
repnz
adc
mov
lea
stos
test
pop
cmp
xor
popf
xlat
lock
adc
pop
pop
idivb
ret
mov
inc
and
and
adc
repz
push
repnz
push
mov
cmp
cmp
cmp
jae
xlat
call
mov
mov
cmp
xor
dec
mov
fists
ss
xor
cmpsl
and
mov
mov
fisubs
pusha
cmc
call
mov
xchg
xor
inc
repnz
lea
loopne
push
inc
dec
aas
ret
mov
call
mov
fwait
sbb
js
xchg
fs
mov
out
sub
mov
in
stc
stos
ljmp
cmp
div
mov
sbb
jno
cmc
test
fists
clc
pop
jmp
test
adc
fcomp
push
sbb
in
clc
test
inc
test
data16
and
shl
mov
gs
and
sub
in
lds
xor
and
xor
xor
inc
inc
ror
js
xchg
mov
jmp
add
mov
inc
sti
rclb
mov
and
cwtl
outsb
ds
jne
mov
push
repnz
fidivs
mov
push
sbb
fstp
mov
and
cmp
fsubr
mov
xchg
imul
jns
stos
ljmp
icebp
aam
inc
mov
xchg
lock
and
jae
ljmp
mov
push
mov
mov
cmp
and
sub
xchg
cltd
xor
stc
push
stc
lods
in
or
sbb
mov
rorl
icebp
or
xchg
adc
ret
or
push
cmpl
mov
add
nop
fisttps
test
and
sub
mov
loopne
out
das
out
into
in
outsb
in
push
jmp
cli
popf
adc
xor
and
mov
inc
mov
xchg
stc
pop
shl
mov
sub
insl
call
and
ljmp
xchg
test
ss
es
jne
xor
gs
test
es
jb
xor
stc
shll
test
jbe
js
cmp
ja
aaa
xchg
gs
mov
test
mov
jne
xor
lret
sub
test
pop
repnz
stc
dec
xchg
xchg
sbb
pop
xor
popa
mov
movsl
and
test
pop
xor
call
jnp
mov
cmc
or
ret
ficoms
adc
rcrb
mov
push
nop
inc
dec
lds
inc
in
or
ss
test
js
aam
lock
adc
fiaddl
adc
rcrl
adc
enter
jo
lea
dec
mov
or
mov
add
stc
push
jae
cmpsl
mov
scas
in
lea
mov
and
inc
and
test
or
mov
insl
icebp
ja
xchg
cld
push
mov
xchg
lcall
mov
cmp
frndint
xchg
cwtl
or
mov
xchg
xor
or
jne
push
xorb
aam
mov
push
repz
inc
es
xchg
es
push
cmp
jns
mov
flds
mov
jmp
ljmp
jne
and
insl
testb
push
inc
es
rcll
xchg
adc
push
test
stc
mov
aaa
jb
shll
stc
out
sbb
addb
xchg
es
push
rcll
pop
adc
adc
push
ss
loopne
adc
xchg
cmp
adc
js
shr
push
xor
out
cwtd
push
jns
pop
cmp
sbb
clc
das
js
inc
aaa
stos
pop
stos
test
sbb
xchg
inc
cmp
xorb
das
mov
inc
push
stos
xor
adc
repz
mov
xchg
pop
jae
mov
push
sub
push
cmp
sbb
ss
and
std
xchg
inc
jbe
push
xor
and
mov
aad
xchg
xor
xor
jne
aaa
stc
shll
mov
pop
add
testl
push
mov
inc
and
lea
xchg
pop
cwtl
adc
add
xchg
mov
cli
clc
xor
std
and
stos
xchg
sbb
cmp
pop
loopne
pop
mov
nop
push
clc
pop
negb
ja
push
stos
aaa
stos
rcl
in
add
rcrl
out
enter
les
aas
insl
popf
imul
lahf
movsb
xchg
adc
xchg
xor
stc
add
or
adcl
fdivs
cmp
scas
adc
push
adc
push
pop
xor
sbb
fptan
or
pop
out
mov
cmc
push
sbb
lock
data16
pop
aad
mov
pop
and
xor
jbe
jo
clc
fsts
inc
pop
xor
lock
fdivs
push
pop
mov
in
xlat
shll
mov
movsl
iret
add
xchg
daa
test
daa
gs
popf
mov
fists
xchg
add
push
daa
xchg
pop
cmp
test
xchg
jne
insl
cmc
gs
xor
lock
inc
fdivrs
jne
pop
cmc
sbb
xor
lock
sbb
mov
jne
enter
push
add
or
jae
push
mov
adcb
hlt
imul
les
push
sub
xchg
push
mov
sbb
out
pop
cli
notb
xor
push
insl
in
inc
push
repnz
adc
es
mov
je
adcb
and
test
add
mov
add
jb
repz
hlt
mov
xchg
mov
xchg
xor
push
push
jne
mov
cs
dec
xchg
cmp
daa
sub
and
loopne
sbb
xchg
pop
inc
pop
es
fsubrs
mov
push
sub
hlt
test
push
lock
aas
mov
push
lock
stc
clc
testb
xchg
mov
and
adc
repz
xchg
cmpsl
lock
push
lret
js
iret
movb
stos
push
sub
xchg
xchg
xor
jmp
cmp
inc
xchg
es
and
fs
aam
fnstsw
enter
out
fdivs
and
test
imul
push
ljmp
daa
je
aaa
adc
stos
repnz
add
out
divl
cmpsl
lods
hlt
lret
je
and
aaa
insl
sub
fadd
lret
cmp
pop
pop
repnz
and
inc
xchg
aaa
sbb
pop
push
sbb
push
enter
mov
xchg
or
fiaddl
push
or
out
adc
lahf
push
lods
cmp
xor
and
push
jns
mov
lock
sahf
and
lret
push
lock
in
arpl
lea
mov
callw
scas
rcll
pop
push
fnsave
mov
pop
inc
clc
xchg
lcall
jo
out
data16
testb
adc
mov
mov
dec
inc
add
ss
push
lds
inc
cmpsl
cmp
hlt
stos
push
negb
push
mov
mov
and
mov
push
mov
adc
loopne
add
sbb
test
xchg
cmp
xor
cmp
shll
cmpsl
fisttpll
dec
pop
xchg
test
bound
add
dec
dec
sub
loop
cmp
inc
cmp
xchg
xor
sub
and
cmc
cmp
cwtl
aas
cld
adc
and
xchg
arpl
dec
cmpsl
popf
stc
mov
xor
fwait
jmp
jnp
loopne
pop
lods
test
or
clc
mov
xor
loopne
loope
jbe
movsb
adc
fadds
adc
mov
dec
insb
cmc
push
and
jge
lods
mov
test
sub
insl
xor
dec
stc
add
jo
fadds
shlb
inc
mov
dec
or
xchg
ret
daa
xor
mov
test
push
xchg
push
ja
loope
push
mov
rcr
xchg
call
data16
mov
xchg
jl
shll
stos
xor
and
sub
adc
push
push
push
aaa
in
pop
or
cmpsl
fwait
jg
add
out
mov
jae
ret
repnz
pop
imul
or
mov
test
arpl
sub
test
imul
push
ds
insl
loope
decl
test
mov
shll
jne
adc
xor
popa
push
push
sub
nop
adc
mov
out
test
push
xchg
xchg
jp
or
test
fstl
inc
add
jnp
mov
cmpsl
pop
push
cmp
test
addb
popf
imull
mov
push
movsb
dec
jnp
lret
in
daa
adc
pop
and
adc
cwtl
pushf
cli
jl
mov
xor
js
push
or
lock
pop
cwtl
add
push
roll
ss
pop
cmp
xor
iret
out
stos
out
cmp
mov
outsl
push
cltd
inc
fisubrl
push
stos
xchg
xorl
xlat
hlt
xchg
repz
adc
mov
push
mov
cmpsl
pop
add
jge
or
and
xor
loope
push
ret
loopne
pop
push
dec
fcom
dec
sub
or
sbb
dec
fst
loope
jmp
lret
cli
stos
mov
and
dec
loopne
sbb
ljmp
push
mov
mul
movsl
arpl
cltd
adc
rorb
adc
xchg
and
fildll
pop
loopne
fisttpl
push
jecxz
data16
inc
inc
ss
add
jecxz
cltd
mov
mov
and
es
ret
andb
dec
inc
test
push
or
sub
pushf
popa
mov
add
std
jbe
sub
mov
fwait
adc
leave
enter
pop
imul
pop
sub
cmc
loopne
loope
movsb
hlt
push
mov
xlat
in
add
dec
push
cld
incl
mov
inc
xchg
or
mov
adc
mov
shl
jbe
add
js
repnz
jo
test
add
inc
fisubl
mov
adc
xchg
stc
das
lcall
add
js
scas
fisubrl
aas
pop
movsb
pop
jmp
ret
cltd
popa
xor
loope
add
mov
repnz
xor
clc
xor
sti
or
arpl
push
and
jns
inc
clc
mov
clc
testl
xor
popa
mov
fdivs
shll
xor
inc
mov
mov
jb
call
push
mov
js
enter
mov
push
mov
cmc
lret
mov
enter
mov
cmpsb
add
enter
in
xor
imul
ds
pushl
call
jbe
mov
mov
aad
cmpsb
shl
sbb
xor
mov
jne
insl
jb
push
shll
push
inc
iret
push
jno
test
fidivrs
cmpsb
roll
mov
stc
pop
sub
push
mov
add
scas
xchg
xlat
xchg
fldl
add
cmc
test
inc
iret
adc
lret
mov
leave
divl
push
fs
orb
aam
xor
cli
lret
dec
sub
or
das
pop
cvtps2pd
test
divl
lret
sti
hlt
mov
xor
ficoml
movsl
cwtl
cmp
ljmp
out
sbb
in
pop
and
pop
push
add
jecxz
jbe
xchg
xchg
fs
sbb
aad
xor
jl
pop
push
adcl
test
xor
mov
sti
or
bound
and
call
xor
test
xchg
ret
movsb
inc
arpl
sbbb
push
ret
mov
popa
pop
test
repnz
mov
imul
sti
je
leave
cmpl
sub
or
cmp
mov
loopne
ret
xchg
cmp
push
push
sub
aaa
sbb
insl
stc
clc
adc
sbb
inc
dec
or
fs
mov
cmc
les
pop
xchg
cmp
test
or
xchg
clc
pop
add
aad
cmp
xchg
lea
dec
add
adc
popf
adc
adc
scas
add
out
idivb
int
lods
stos
mov
mov
mov
cltd
dec
sbb
movl
cmp
repnz
fwait
adc
popf
push
pop
notb
sbb
divl
ja
pop
gs
iret
pop
push
lock
mov
pop
enter
mov
in
cmc
push
loope
rorl
push
ror
test
fsubs
in
push
inc
pop
sbb
mov
inc
cwtl
xchg
or
mov
push
scas
mov
outsl
jge
add
push
xlat
cmp
dec
and
cmp
fnstsw
out
inc
scas
xorl
push
sub
iret
push
push
loop
inc
or
cs
fldcw
push
jbe
sub
cltd
and
test
fadd
sub
cs
in
iret
addr16
lret
xchg
or
sub
mov
cmp
lds
inc
inc
cmpsl
push
inc
dec
addl
push
js
xchg
adc
mov
adc
daa
loope
jo
clc
movsl
push
push
rcrl
push
es
sub
sbb
inc
and
mov
adc
movsl
inc
jecxz
adc
jne
and
leave
cmp
cmp
pushf
imul
popa
je
xor
mov
push
pop
mov
fwait
add
hlt
loope
cwtl
call
jnp
push
mov
mov
cmpb
sbbb
mov
test
orb
leave
call
daa
test
rcr
cmpsl
pop
ret
inc
cmp
mov
int
add
adc
cs
xor
bound
and
fcmovne
fwait
lret
cltd
or
stc
test
mov
dec
and
mov
dec
cli
mov
neg
aam
dec
pop
inc
gs
loope
pusha
clc
push
aam
loopne
adc
rcrb
cmp
fdivrs
test
cmp
xor
or
scas
test
lret
or
mov
andb
sbb
sub
fisttpl
adcl
pop
sbb
test
xchg
push
or
lock
clc
mov
jmp
cmc
jne
and
pop
cmp
repz
cmp
cwtl
shrl
aaa
pop
rolb
insl
loope
out
mov
andb
mov
sbb
fisubl
rcll
push
jb
data16
clc
cmp
stos
lea
adc
sbb
inc
mov
das
inc
test
stos
mov
cwtl
or
adc
test
orb
data16
cmp
adc
sbb
jne
popa
push
push
xchg
mov
repnz
xor
inc
loope
dec
cmc
adc
push
loopne
sub
xchg
inc
roll
push
hlt
popa
test
lods
rorl
inc
out
pop
adc
shrl
xchg
pop
aam
stc
sbb
push
aad
cwtl
iret
rol
test
adc
xchg
iret
or
enter
int3
in
out
jo
clc
sbb
add
stos
sbb
fs
loope
inc
mov
mov
adc
subl
fnstenv
mov
xchg
sbb
fcomps
push
or
push
iret
dec
test
orb
push
sti
outsl
mov
loope
inc
out
inc
gs
loope
sub
adc
pop
fprem1
adc
mov
ja
mov
out
xor
pushl
mov
xchg
sub
fcomip
jne
jecxz
into
shll
dec
mov
or
jbe
lock
mov
mov
out
data16
call
xchg
or
inc
mov
or
and
shlb
sub
sub
sub
fmul
cmpb
dec
in
mov
sub
cmp
adc
pop
vrcp28ss
lahf
mov
push
gs
shlb
imul
xor
inc
xchg
push
push
pop
cmc
call
cmc
ss
sbb
xor
cmp
sub
sub
gs
stc
push
cmp
adc
stc
push
hlt
sbb
inc
lock
sub
xor
loope
lock
pop
jle,pt
add
insl
andb
sar
movsl
sub
adc
icebp
push
mov
filds
popa
mov
ljmp
xchg
popa
rorb
or
lods
orl
sub
adc
into
mov
ss
fisttps
out
mov
mov
lcall
in
jb
push
popf
xor
xchg
es
lods
es
pop
es
or
dec
cmpsl
ljmp
mov
or
and
cmpsb
lock
xchg
jb
mov
or
cmp
cmc
sbb
push
test
les
sbb
mov
pop
sarl
sbb
and
insl
mov
inc
ja
mov
test
xor
addl
stc
loopne
rcrb
cld
dec
clc
or
lea
out
inc
out
xor
dec
loopne
or
fidivl
xchg
pop
push
pop
clc
xor
insl
pop
push
adc
adc
insl
icebp
xor
xchg
pop
add
adc
leave
dec
cmpsl
adc
xchg
inc
cmp
inc
lods
cmp
lea
iret
nop
test
cmp
cmpsl
repz
push
xchg
clc
xor
loope
sahf
testb
adc
out
clc
mov
insb
loope
sar
imul
cmp
test
sub
subl
mov
sti
push
add
pop
dec
jmp
sub
cli
jb
cmpsb
test
push
lds
rorl
pop
pop
xchg
pop
jl
roll
pop
mov
cmp
push
cmp
lock
stc
out
fildll
ss
sahf
jmp
flds
ss
xchg
push
sub
adc
mov
mov
lcall
fcomi
loop
repnz
mov
inc
xchg
jbe
data16
lock
les
sbb
cmpb
pop
cmpsl
fimuls
outsb
mov
cmp
xchg
lea
inc
cmpsl
sbb
cmpb
es
subl
jmp
push
inc
leave
loopne
pop
mov
cmp
xchg
adc
int
lds
cmp
xor
sbb
xchg
dec
adc
mov
sbb
rcr
imul
and
repnz
pop
mov
cmp
lock
push
xchg
jne
in
out
cmp
ret
imull
test
repz
rcl
repnz
ss
mov
in
pop
sahf
ljmp
xor
jmp
lret
xchg
inc
cmp
ret
xor
xchg
test
mov
and
lea
cmpb
popf
and
jl
add
shl
jae
aam
mov
pop
je
lock
fs
imul
push
adc
xchg
mov
lret
xchg
int
or
les
pop
add
test
cmpsl
fnstcw
test
sub
mov
sub
sub
cmp
and
into
or
cmc
andb
es
push
test
and
mov
jl
in
sahf
push
pop
into
dec
shll
pop
ljmp
lods
cmp
pop
xchg
addl
loope
adc
mov
imul
jb
or
xor
scas
dec
and
dec
call
lea
scas
mov
lret
cmpsl
pop
arpl
les
imul
test
repz
stc
push
cmp
dec
add
push
add
dec
push
aaa
and
test
not
add
fisubrl
in
inc
adc
std
mov
stc
xchg
xchg
or
in
pop
pop
cmpsl
rcll
push
sbb
inc
adc
loop
fs
mov
xor
cs
repnz
sbbb
aad
jl
add
test
loopne
repz
mov
ret
xchg
push
jl
imul
jmp
jge
sbb
gs
adc
pop
dec
roll
out
sbb
cwtl
test
lock
xchg
call
pop
xchg
fildl
bound
iret
fisubs
sbb
pop
jge
adc
dec
lock
rcr
daa
aad
jbe
clc
insl
cmc
aad
sub
cmp
test
jecxz
bound
xor
int
xchg
je
mull
xchg
mov
jl
dec
mov
add
dec
daa
mov
imul
stos
sahf
stos
jle
int
movsb
pop
hlt
stos
pop
imul
cmp
in
xor
insb
sahf
push
and
inc
adc
mov
push
fadds
mov
jl
hlt
xchg
ljmp
subl
or
out
clc
in
and
inc
div
fisubrs
gs
sbb
test
xchg
cmpsl
dec
xchg
stc
out
jb
pop
shlb
xchg
sbb
pop
mov
push
insl
test
inc
mov
aaa
inc
xor
pop
aaa
pop
pop
fdivs
mov
cli
jbe
test
xchg
andb
rol
lock
jne
inc
repnz
fistpl
xchg
sbb
push
jb
ja
xchg
rcrl
push
adc
loopne
xchg
cli
je
or
stc
daa
cmpsl
fcom
es
sti
push
sti
push
xchg
cmp
jne
pop
popf
pop
fcompl
pop
mov
adc
push
lock
test
push
mov
es
daa
add
test
sub
ja
push
add
sbb
fiaddl
sbb
add
ja,pn
and
insb
cwtl
clc
rorl
out
bound
cmpsl
das
rcr
cld
xor
jnp
mov
iret
mov
jns
xor
ror
xchg
xchg
iret
fcmovnb
mov
adc
and
daa
fiadds
sbb
sub
lock
adc
adc
int
gs
mov
bound
adc
test
lds
rcr
int3
andb
jns
sbb
push
and
cmpsb
andl
cmp
mov
mov
call
mov
xchg
pop
inc
cmpsl
xchg
dec
mov
loope
lods
cli
lea
pop
xor
fwait
jl
jae
and
jae
orl
sub
push
sub
jmp
mov
rorb
sub
std
mov
adc
mov
inc
push
xchg
inc
add
daa
sub
pop
fnsave
or
or
fwait
sub
xchg
or
callw
cli
mov
lock
jecxz
and
push
es
into
add
lret
stc
xchg
cmp
mov
adc
mov
addr16
inc
inc
xlat
cmc
xchg
popa
xor
xchg
movb
inc
add
outsl
push
sub
sbb
js
jo
and
xor
xor
mov
sub
lods
cmp
push
cmp
xor
es
push
imul
jmp
adc
dec
push
dec
jmp
scas
test
xchg
fidivrs
pop
js
xchg
inc
js
push
not
push
insb
stc
sbb
and
inc
adc
imul
dec
clc
sbb
sbb
hlt
sbb
or
pop
daa
sbb
repnz
xor
jne
notl
or
fisubrs
push
dec
lock
out
test
pushf
repnz
test
mov
and
lea
iret
sbb
fsubs
gs
int3
jge
pop
or
stos
rcl
mov
scas
jns
jae
pop
loopne
sahf
adc
gs
cmp
shll
inc
push
out
or
xchg
mov
sub
cwtl
lock
push
cltd
test
jne
test
cmpsl
in
ret
pop
cmc
out
mov
and
iret
add
jl
or
jns
xor
and
imul
popa
ror
cmp
mov
fwait
cmc
into
lock
mov
inc
mov
scas
and
jbe
loopne
test
add
push
cmp
mov
fistl
pop
out
jg
cmp
in
lds
movsl
es
gs
imul
and
jmp
imull
pop
je
and
test
xchg
bound
mov
imul
scas
pop
xchg
xchg
popa
repnz
push
or
jg
mov
repnz
rcrb
insb
and
stc
and
push
jbe
xchg
cmpsb
xor
inc
and
and
and
and
call
push
scas
xor
clc
or
mov
inc
gs
jne
cmp
and
jne
sbb
loope
arpl
and
add
repnz
test
daa
ljmp
in
test
jns
jge
inc
and
lods
fbld
mov
fisttpl
mov
and
arpl
test
adc
jge
test
repz
loopne
pop
cwtl
pushf
pop
mov
push
jecxz
jle
or
adc
popa
push
iret
push
push
insb
xchg
jbe
repnz
xor
insl
decl
xchg
jne
insl
mov
push
in
dec
sub
push
xchg
xor
daa
jecxz
add
flds
inc
cmp
out
call
in
test
clc
imul
ror
pop
in
xchg
jne
js
scas
lea
or
dec
mov
sbb
cltd
negl
clc
cwtl
cmpsl
cmp
out
js
pushf
jg
in
pushf
nop
mov
add
imul
dec
out
jnp
jmp
adc
mov
pop
rcll
arpl
mov
mov
push
ret
daa
mov
push
mov
and
and
cmpsl
cli
movsb
xor
pop
imul
xor
jne
shlb
sti
js
gs
scas
fldlg2
pop
inc
fidivl
imull
imul
outsl
pop
dec
pop
lds
sbb
test
bound
pop
sub
rcrb
insl
in
push
cmp
clc
pop
push
mov
rorb
test
ret
or
push
inc
aas
pop
cmpsb
xor
sub
ja
xor
loopne
adc
xor
fbstp
xchg
pop
int3
je
and
mov
and
adc
push
cmpsb
ret
xchg
push
pop
and
pop
push
enter
adc
mov
sbb
iret
sbb
cltd
sti
addr16
cmc
nop
in
mov
pop
adcb
jo
hlt
add
sub
pop
jmp
fs
lcall
rcrb
out
addl
insl
push
in
orb
dec
gs
mov
push
add
jb
jae
sti
xchg
ficomps
pop
xor
mov
cmp
cmp
xor
ljmp
xor
daa
mov
push
lds
iret
push
mov
lret
cmp
mov
inc
shl
sub
adc
mov
stos
cmp
mov
dec
bound
xchg
arpl
insb
loope
add
lock
adc
shlb
adc
ja
and
mov
jne
xor
pop
mov
daa
into
test
test
imul
push
aaa
dec
add
fcmovnb
and
cmpl
push
xchg
es
jne
loop
mov
aam
jl
cwtl
insl
and
push
pop
push
ret
push
out
fidivs
and
leave
leave
inc
test
dec
rcrl
enter
xor
dec
mov
call
and
cmc
mov
jp
pop
stos
cmp
adc
mov
xchg
add
sub
lock
inc
and
les
xchg
stc
bnd
movsb
xor
or
fincstp
xchg
and
test
xchg
lds
push
mov
iret
xorl
or
mov
ss
iret
cli
jae
jle
negb
cmp
and
inc
inc
sub
test
mov
mov
inc
dec
and
xor
fbld
loopne
je
push
adc
adc
repz
inc
mov
xchg
mov
dec
pop
xor
xor
insl
push
movsl
jmp
scas
std
xor
jge
gs
fisubs
test
xor
sbbb
push
lea
xchg
jne
sub
adc
rep
xor
inc
shll
fbstp
pop
add
push
xchg
in
add
mov
or
sbb
dec
push
jmp
or
and
gs
leave
fidivs
pop
jecxz
ret
inc
sarl
xchg
jmp
or
sbb
pushl
pop
jnp
in
aad
movsl
bound
pop
sti
pop
fistpl
inc
mov
pop
cmpsl
add
loope
popa
push
lds
and
fsub
pop
jns
and
ljmp
xchg
lcall
mov
repz
cmp
jge
pop
mov
mov
and
and
ret
icebp
js
jl
ret
or
aas
fcmovnu
push
jns
sbb
sbb
or
lret
mov
lock
loopne
mull
or
test
cs
sub
inc
loopne
cmc
orb
adc
or
leave
inc
lock
jmp
jge
cmpsb
and
or
movsl
cmc
je
xchg
test
jne
xor
int
mov
jge
and
test
add
and
gs
imul
sub
cmpsb
dec
sub
mov
fisubrs
std
mov
shlb
cld
and
repnz
push
mov
imul
xor
lahf
in
pop
in
inc
sti
push
push
test
sbb
sti
pop
mov
xchg
mov
mov
cwtl
or
subl
es
dec
xchg
mov
iret
clc
pop
loop
push
xchg
xor
out
repnz
rcrb
xchg
or
or
mov
mov
popl
xor
cmp
pop
lea
push
push
movsl
dec
cmp
idivb
pop
push
addl
rcl
je
lahf
push
pop
fwait
nop
neg
ss
sbbb
movsb
dec
cmp
adc
xor
and
mov
mov
loope
sub
imul
out
adc
aaa
imul
xchg
lock
mov
xchg
jl
xchg
jl
dec
test
mov
lret
push
sbb
lea
insb
cld
and
push
cmpsl
fs
ret
shll
cmp
cmc
je
stc
xchg
adc
cwtl
das
ficompl
jle
ror
lret
jbe
test
popf
push
repz
movsl
dec
movsl
test
es
ss
mov
in
mov
lea
add
fldt
mov
mov
push
enter
movsb
sub
test
mov
test
cmpsb
pop
test
mov
jmp
addl
pop
add
cmpsb
add
push
cmp
hlt
es
sub
inc
and
sbb
xlat
sub
mov
cmp
movsl
imul
adc
rolb
shll
addl
dec
and
gs
xchg
rorl
cmp
jecxz
mov
lock
pop
inc
mov
inc
mov
movsb
lock
stc
xor
popf
cmpsb
aam
dec
xor
add
in
pop
or
or
cmpsl
jae
and
push
xor
jo
fs
lds
fdiv
mov
mov
adc
daa
ja
jne
xchg
enter
rclb
cmpsl
jbe
icebp
pop
aam
ja
je
imul
data16
xchg
fnstcw
lock
xchg
cmp
sub
shl
test
cmpsl
jecxz
lods
xor
mov
js
fwait
push
rol
sbb
cmp
cmp
sbb
hlt
repnz
inc
in
sub
add
out
cmc
iret
int3
rcr
cmp
loop
dec
mov
inc
xor
push
dec
pusha
loopne
adc
add
out
fdivr
loopne
jmp
lock
jbe
scas
roll
xor
lcall
xlat
sahf
xchg
lcall
rorl
xchg
sbb
inc
lock
or
pop
pop
cmp
es
mov
sahf
sub
xor
andl
push
and
cs
xchg
cltd
xchg
stc
push
enter
das
lock
pop
xchg
mov
xor
jl
or
stos
daa
lret
pop
and
and
cmpsb
push
in
inc
hlt
push
push
aam
loopne
adc
inc
cmp
push
sbb
mov
ret
scas
f2xm1
sub
xor
fnsave
stos
inc
hlt
je
pop
inc
les
mov
mov
pop
enter
inc
adc
hlt
pop
movsl
cmp
fs
rep
scas
shll
les
sti
xchg
dec
mov
sub
ret
outsb
pop
jns
sbb
test
xor
jbe
and
test
push
or
push
imul
push
adc
call
ljmp
mov
repz
inc
xchg
pop
pop
out
pop
cmpsb
pop
xchg
mov
push
push
test
mov
cmpsb
rcll
sub
fs
and
and
mov
cmp
and
mov
bound
cmp
cmp
imul
rcrl
leave
xchg
sbb
or
movl
das
out
js
insl
loope
popf
bnd
cmpsb
lock
repz
pop
inc
outsl
jmp
sub
xor
repz
ret
shlb
std
daa
mov
lret
repnz
cltd
adc
subl
ficompl
jg
ss
inc
cli
daa
aam
int
xchg
xchg
mov
mov
test
sub
je
mov
fldenv
mov
xchg
inc
hlt
jae
inc
rcll
sbb
and
out
mov
mov
cwtl
mov
or
add
xchg
imul
arpl
mov
push
rcll
dec
sub
push
call
addl
ss
fwait
adc
adc
mov
loopne
ljmp
lea
mov
push
insl
pusha
movsl
loope
pop
and
adc
fisubs
fstp
in
aad
testl
loopne
lds
imul
bound
fcoms
hlt
sub
sbb
mov
in
loop
in
lcall
fs
fsub
dec
mov
pop
push
movsl
inc
int
stc
ljmp
out
jbe
inc
cmpsl
add
dec
adc
shll
insl
stos
adc
bnd
cmc
test
xor
mov
xchg
or
or
sbb
test
jb
adc
out
cmpsb
jbe
in
inc
les
pop
adc
or
test
adc
pop
adc
cmpsb
test
inc
test
xchg
cmp
sbb
test
adc
aas
cmp
cmpsb
movsl
rolb
test
imull
adc
cmp
pop
adc
cs
movb
xor
and
popa
ljmp
dec
jns
push
into
rcll
mov
push
inc
xor
xor
mov
mov
icebp
pop
mull
fwait
loopne
xor
out
push
mov
mov
sub
test
enter
inc
frstor
outsl
loopne
imul
aaa
loopne
pop
pushl
pop
xchg
testl
cli
dec
roll
xchg
push
bswap
inc
adc
and
stc
mov
dec
adc
xchg
cmc
add
rcl
xchg
scas
shl
push
rcr
mov
insb
icebp
mov
movsb
rcl
push
fdivs
fists
cs
lea
icebp
mov
shrl
pop
mov
stc
insl
dec
dec
int3
test
loopne
jb
sbb
push
adc
fidivrl
fsts
nop
aas
test
mov
stos
stos
roll
ja
xor
roll
daa
pcmpgtd
iret
pusha
scas
adc
rcll
dec
push
mov
sub
aaa
scas
jb
fsubrs
in
out
in
gs
hlt
push
xchg
push
stc
or
js
adc
mov
test
or
pop
or
dec
movl
mov
test
jge
xor
fdiv
cmp
icebp
test
or
js
dec
hlt
or
fdivs
fbld
popa
es
stc
scas
add
xchg
ss
imull
or
xlat
adc
or
lods
xor
push
xor
or
lahf
cwtl
ds
or
sub
test
ret
and
ss
mov
rol
loopne
mov
mov
ret
fildl
adcl
inc
fcmovne
mov
add
pushf
pop
enter
fcoml
popa
popa
cmp
push
adc
jle
loope
sub
notl
dec
mov
cwtl
xchg
pop
fnstsw
cmp
jl
sub
arpl
pop
adc
call
xor
mov
mov
adc
mov
divl
xor
addl
jbe
imul
bound
loop
scas
cmc
xchg
repnz
xor
push
pop
inc
push
xchg
sub
repnz
cltd
push
test
push
cmp
sbb
test
and
mov
push
or
cmp
and
icebp
mov
pop
xchg
mov
mov
nop
or
pop
test
adc
mov
xor
pop
hlt
dec
repz
fidivl
clc
mov
cmpsl
cmpsb
imull
inc
mov
test
push
aam
xchg
mov
loopne
mov
test
rcl
dec
inc
test
lods
lds
sarl
xor
stc
jp
adc
add
push
test
inc
gs
lock
and
fsts
jbe
pusha
xchg
dec
dec
mov
js
add
test
push
ja
lret
fidivrs
cld
dec
repnz
loopne
push
add
inc
xor
xchg
push
fwait
pop
in
jmp
cmp
int3
in
aad
decl
xor
and
sahf
cmp
jecxz
xchg
arpl
and
jns
or
test
repnz
dec
in
stc
xchg
arpl
sub
jge
xchg
cltd
xchg
jns
or
cwtl
bound
ss
pusha
js
ret
pop
aas
test
shrb
lahf
jbe
dec
decb
mov
add
shll
hlt
dec
sub
loop
stos
sbb
pop
and
and
adc
pop
pop
mov
stc
js
xor
mov
and
xor
adc
mov
pop
cmp
or
fldenv
in
test
cmpb
rcl
xchg
sbb
pop
test
rep
cmp
imul
xorb
fildl
or
dec
in
mov
sbb
stc
and
fcmovbe
and
pop
or
scas
movl
es
mov
je
dec
cld
and
lea
push
movsb
mov
jne
cmpsb
rol
scas
and
popf
xchg
dec
stos
fisttpl
es
cmp
mov
stos
inc
test
mov
fcmovnb
sti
hlt
and
out
xor
std
rcrb
andb
jbe
and
and
mov
movsb
dec
adc
xor
iret
sub
and
and
xchg
stc
clc
adc
fnstenv
fbld
lock
divl
test
push
add
stc
and
sub
aam
adc
sub
out
mov
aaa
and
or
or
lahf
inc
mov
sbb
jbe
shll
push
push
fcoms
call
fs
dec
add
inc
test
jnp
call
icebp
adc
loopne
imulb
test
scas
fisttps
add
xchg
add
stc
mov
jne
push
mov
jne
scas
inc
xor
pop
adc
sbb
test
xchg
arpl
jle
divb
xor
mov
movsb
in
and
mov
daa
jle
clc
popf
push
jb
test
insl
cmpsl
pop
movsl
loop
bound
and
es
or
imulb
popa
mov
or
imul
popa
addr16
xor
aas
adc
call
adc
xchg
stc
push
adc
test
jb
ja
rolb
call
inc
leave
xchg
jecxz
mov
jle
add
imul
inc
or
incb
push
dec
shll
dec
lcall
adc
fwait
cmp
shr
dec
xor
popa
push
xchg
jo
and
cmp
xor
sub
xchg
cmpsl
xor
xchg
movb
push
mulb
fs
movsb
pop
aam
enter
aaa
xchg
iret
xchg
insb
pusha
ja
out
cmpsl
ljmp
ljmp
push
mov
push
jb
addb
adc
jb
push
std
xor
repnz
xchg
cmpsl
fwait
fs
pop
cmc
adcl
inc
es
loopne
arpl
push
rorl
xchg
mov
scas
push
aad
xorb
cmp
cli
cmpsb
sarl
sbb
sub
je
push
xor
xchg
adc
les
ja
mov
lods
jle
add
sub
xor
lock
ljmp
pusha
insb
stc
jne
push
add
adc
into
rcrl
mov
mov
xchg
push
test
shlb
fldl
mov
mov
std
stc
mov
add
sbb
xor
out
sub
sbb
clc
mov
test
push
ja
je
jae
inc
int
int
arpl
sbb
jl
clc
stos
sbb
cmpsb
add
mov
dec
shl
sbb
dec
xor
xchg
notl
out
imul
out
mov
loope
sub
xor
mov
cli
std
lcall
mov
imul
or
mov
mov
push
cmp
test
mov
faddp
add
popf
push
divb
mov
aad
mov
adc
mov
and
cwtl
inc
ds
hlt
sti
lret
pop
ja
adc
dec
test
outsl
imulb
or
pop
iret
and
inc
jecxz
xchg
notl
jne
adcl
cmpsb
scas
push
jns
andb
popa
lock
xchg
ja
pop
iret
fildl
ja
push
cmpl
stos
mov
popf
jmp
pop
mov
cmc
in
mov
or
icebp
outsb
cwtl
fsubl
shll
lret
cmpsl
rcll
fs
mov
test
jo
push
fildl
addr16
imul
shll
movsl
mov
mov
imull
xor
xchg
mov
or
or
mov
ljmp
mov
xchg
jo
stc
addb
cmpsb
or
pop
or
hlt
xchg
mov
xor
idiv
xchg
or
and
lea
cmpsb
loopne
adc
call
cmp
ljmp
inc
cld
es
aaa
stos
test
and
push
pop
sbb
adc
stc
and
cmpsl
add
mov
test
testl
xchg
test
or
in
xor
jmp
mov
jo
imul
iret
fcmovnbe
xchg
lock
lock
pop
les
add
je
jnp
cmp
repz
sub
pop
dec
repz
test
neg
xchg
mov
loopne
pop
daa
or
arpl
popa
clc
or
in
push
add
int
icebp
cltd
add
inc
enter
into
out
ret
addr16
mov
aaa
push
imulb
out
push
mov
jp
mov
iret
fistpll
xchg
ss
iret
lods
xchg
xchg
mov
and
mov
dec
stos
add
adc
imul
xchg
add
stos
sbb
dec
aad
inc
fs
pusha
orb
or
dec
mov
and
xorl
push
add
int
inc
iret
movsb
mov
push
cmp
mov
clc
movsb
mov
lock
cmp
insl
out
movsl
mov
mov
and
popl
bound
push
xchg
icebp
or
add
loope
rorb
pop
clc
mov
inc
fsubrs
xchg
jb
xchg
xor
mov
call
adc
sbb
mov
hlt
push
scas
jae
test
fst
pop
stc
cmp
fs
inc
test
lock
xchg
xor
lds
push
dec
sub
mov
enter
inc
or
cmpsl
sub
cmpsl
xchg
inc
inc
mov
addb
pop
popa
adc
cmp
loop
pop
es
cmpsb
lock
movsl
jbe
gs
and
in
mov
fs
andb
cmp
or
cmc
cltd
pusha
adc
shll
ja
and
lret
adc
js
add
jecxz
add
ret
push
sub
lahf
loopne
sbb
mov
and
loope,pn
dec
ljmp
ret
jmp
decb
jle
mov
lret
pop
fstpt
push
call
sub
ja
leave
sets
stos
rcll
adc
cmp
pop
mov
aas
mov
add
ds
inc
sbb
pop
sti
pop
mov
pop
shll
mov
or
inc
shll
cmp
in
loop
xchg
xchg
and
orl
and
lea
scas
xor
imul
push
or
loope
pop
cmc
pop
andl
adc
xor
inc
mov
push
sbb
popa
dec
nop
inc
xor
hlt
push
jle
push
jne
and
lea
or
inc
cmp
push
das
sbb
data16
cs
push
dec
lea
add
in
xor
mov
xchg
xchg
addb
iret
das
aad
les
and
gs
push
clc
mov
pop
lcall
movsb
mov
into
jbe
data16
push
divb
push
and
jle
push
and
lock
clc
ss
stc
or
clc
imul
repz
fisubs
pop
xor
and
mov
sbb
push
stos
vunpckhps
repz
jnp
shrb
mov
ficoms
xchg
adc
leave
sub
jmp
stos
test
cmp
insl
cmc
jns
xor
xor
and
loopne
pop
adc
sub
push
arpl
shll
jmp
andb
mov
add
arpl
sbb
icebp
dec
or
jne
push
js
dec
or
movsl
test
popa
and
push
mov
dec
or
sub
mov
pop
fldt
nop
cmp
test
xor
cmp
xchg
or
scas
add
fistpl
jbe
cmpsl
mov
aad
test
aas
data16
popf
add
add
test
test
xchg
ss
mov
lea
xchg
popf
clc
rorb
dec
add
lret
std
fstl
or
dec
shrl
fmuls
test
push
xchg
push
push
xchg
imul
adc
cmc
sbb
rorl
fidivs
sar
jb
push
jbe
fucomi
loop
cmc
mov
orb
test
std
mov
xchg
jecxz
cld
adc
ljmp
movsb
sbb
push
fs
xchg
test
inc
iret
inc
shl
push
ret
jb
xchg
pop
xor
pushf
fidivs
adc
pop
cwtl
and
push
and
cli
das
icebp
shll
sbb
psubusb
ljmp
push
fstps
clc
popa
or
mov
rcl
call
cmp
mov
testl
loope
ljmp
mov
push
subb
fs
stc
inc
lret
add
xor
hlt
es
cld
adc
xor
ret
adcb
xorl
xor
test
test
push
or
cmp
rolb
in
and
test
mov
je
sbb
jo
push
ficompl
xor
xor
dec
inc
push
sbb
sbb
xor
aas
push
mov
fs
push
hlt
adc
jb
mov
push
aad
cwtl
decl
ret
mov
xchg
push
mov
mov
addr16
mov
and
and
int
mov
fnstcw
xchg
mov
imul
sbb
add
xchg
addl
es
jbe
mov
movsb
jbe
das
addr16
add
insl
and
out
ficompl
add
rclb
sub
test
pop
and
xchg
or
sbb
cwtl
test
sbb
testl
mov
fiaddl
push
js
gs
in
xor
imul
inc
push
adc
loopne
lahf
adcl
and
push
sbb
push
sahf
dec
insl
js
adc
or
leave
and
cmp
pop
enter
out
out
out
aas
cmc
out
xchg
dec
outsl
lock
icebp
scas
mov
push
push
test
mov
setns
js
rol
test
fnstcw
cmp
cmc
push
push
call
jo
rcl
insl
pop
xchg
and
imul
pop
js
add
or
pop
mov
xchg
inc
shrb
cmp
lock
std
xchg
sub
aas
fsubl
xchg
test
les
mul
jae
sbb
mov
adc
cs
lahf
loopne
pop
jecxz
cmp
sub
xor
xor
in
mov
jp
in
insl
cmc
inc
subl
xor
test
adc
stos
repnz
sub
out
repz
and
std
push
cmp
lods
loopne
ja
andl
and
pushf
lock
add
ret
sbb
push
nop
repnz
enter
jge
hlt
pop
lahf
pop
xlat
xchg
mov
in
mov
pop
push
push
aas
fwait
movsb
xor
lock
jecxz
scas
cmp
mov
dec
imul
ja
cmp
xor
movsb
leave
inc
imul
stos
pop
call
mov
call
loopne
lds
adc
arpl
sbb
jb
lock
rolb
ficoms
mov
sub
mov
sbb
adc
sbb
cs
aaa
pop
cmc
jge
sub
inc
mov
and
and
adc
xchg
fcoms
or
push
and
xchg
daa
mov
out
mov
mov
std
cmp
push
pop
jge
xchg
sti
push
xchg
dec
xor
cmpsl
or
jno
loopne
sbb
out
and
loop
and
or
sbbl
sbb
jmp
out
test
inc
in
add
loope
cmpsl
dec
popl
call
mov
cmp
cwtl
inc
xor
dec
sub
movsl
cmp
repnz
push
jecxz
xor
mov
shll
push
mov
cmp
mov
stc
jge
out
idivb
dec
xchg
jno
jb
into
shll
cmp
add
test
sbb
inc
fidivrl
scas
mov
mov
test
mov
and
or
jmp
out
test
sub
test
int
jecxz
adc
ljmp
mov
sbb
fildll
cmc
mov
push
imul
es
xchg
pushf
aam
lock
xor
mov
sub
add
sub
fdivrs
mov
adc
jmp
fcoms
movsl
push
scas
jg
mov
cli
pop
fadd
xchg
test
loopne
or
jb
xor
test
pop
shlb
es
inc
cmp
push
jne
aad
fmuls
xor
rorl
pop
inc
dec
pop
gs
test
loopne
lcall
xchg
push
loope
notb
les
push
sub
sub
push
in
maskmovq
notl
popf
pop
mov
rcrl
sarb
add
push
push
out
js
xor
call
imul
sbb
cmp
xchg
jbe
dec
das
mov
sbb
pop
dec
aas
test
xchg
fsts
push
dec
xchg
mov
sbb
sbb
push
inc
lock
xchg
mov
es
mov
xchg
xchg
xor
xlat
cmpsb
push
or
sub
cwtl
adc
fadd
inc
sahf
cmp
dec
pop
sub
or
jmp
ret
cmp
dec
and
and
mov
sbb
scas
sbb
sub
jl
call
lods
aam
and
inc
mov
xor
in
repz
fcoms
lock
test
hlt
xchg
jne
test
inc
shll
aas
xchg
cwtl
mov
fstp
js
mov
sub
icebp
pop
ds
std
and
and
adc
adc
jb
or
pusha
sub
and
mov
out
jae
out
cwtl
lods
xchg
fildl
push
insb
les
pop
clc
dec
and
mov
sub
or
jbe
push
aam
shl
mov
mov
push
push
jl
jae
mov
loopne
aad
adc
sub
popa
nop
push
xor
cli
mov
sahf
call
jmp
ss
xchg
arpl
add
fnstsw
xchg
jns
xchg
sub
lea
xchg
ret
mov
scas
int3
xchg
cmpsb
sbb
shl
aas
shll
hlt
push
clc
sbb
dec
sbb
jmp
enter
lock
loope
leave
pop
ds
hlt
imul
jbe
mov
or
ficoml
dec
test
dec
aad
xor
fdivrp
sub
fsubs
sbb
sti
mov
jmp
arpl
bound
aas
cmc
icebp
xchg
test
shlb
push
jnp
push
inc
push
ss
jne
bnd
xchg
jp
pop
arpl
mov
push
bound
push
lock
loop
cmp
fidivrs
sub
lcall
ja
jl
jns
sbb
lock
out
or
out
test
or
je
cmc
add
xchg
push
and
cltd
jmp
repz
pop
jecxz
pop
out
cmc
cmpsb
add
imul
clc
xchg
pop
shlb
imulb
xchg
sub
mov
push
int
addr16
dec
jmp
repnz
scas
ret
cld
mov
rol
test
shll
adc
add
mov
jb
imul
arpl
adc
sbb
xchg
and
iret
repnz
repnz
loopne
xchg
add
fsts
movsl
pop
cmpsl
and
xchg
js
xchg
xlat
or
movsl
xchg
aaa
aas
mov
mov
xchg
jns
inc
ret
dec
and
xchg
mov
mov
std
mov
xchg
add
push
sub
push
es
sbb
xchg
test
mov
jmp
cwtl
repnz
inc
jbe
lret
push
mov
js
mov
cmp
adc
shr
stc
dec
insb
addl
adc
push
mov
outsl
stc
or
cmp
test
push
and
lock
xchg
clc
cmpsl
sbb
push
mov
inc
lret
xchg
xor
push
fisubrs
js
push
inc
test
adc
mov
xor
sub
sbbb
xlat
jge
sub
sbb
fstl
inc
fistpll
movsb
xor
std
ja
test
shll
popa
stos
push
and
dec
mov
and
mov
mov
out
add
jae,pn
and
les
bound
and
pop
jae
inc
shll
push
push
shl
inc
inc
clc
repnz
jb
stos
xchg
mov
sub
cwtl
add
scas
mov
rol
inc
jb
xchg
pop
push
ret
inc
test
gs
jne
in
stos
int3
lret
xor
mov
dec
xor
stos
or
ficoms
iret
movsl
add
pushf
xchg
ret
es
add
lahf
iret
popf
push
pop
insb
outsb
cmc
gs
rcll
and
and
or
aaa
addr16
test
sbb
inc
and
loopne
xor
xor
imul
jns
and
lock
pop
push
test
and
mov
pop
cmpsl
xchg
les
push
push
and
ja
pop
fistl
mull
out
mov
jmp
ret
inc
adc
imul
xchg
out
sub
dec
cmp
sub
and
sti
icebp
dec
add
jbe
pop
add
push
add
rol
test
out
outsb
aam
xor
and
xchg
xlat
dec
loopne
pop
xlat
lea
xor
or
mov
mov
loopne
inc
and
lock
sbb
or
insb
mov
cmc
xor
ret
jo
push
cmpsl
lods
push
movsb
mov
dec
das
add
cmp
imul
cmc
sbb
sbb
jns
fnsave
mov
ret
iret
rcrl
shrb
das
lret
mov
lods
ljmp
jae
ficoml
iret
cs
notb
or
mov
jae
cmp
bound
lret
mov
es
aas
jl
test
and
into
loope
or
repnz
mov
scas
pop
adc
xlat
adc
jmp
push
arpl
mov
jb
cmp
gs
les
movsb
inc
aad
mov
leave
ror
push
adc
and
and
jae
sbb
mov
fsubrs
insl
lea
mov
and
js
test
xchg
mov
movsb
sbb
icebp
scas
shll
adc
cltd
sub
loopne
sbb
add
or
test
jae
sbb
je
popa
push
add
push
push
xchg
daa
das
sarl
daa
push
and
mov
test
inc
xchg
iret
dec
mov
add
cmp
imul
inc
sub
cmpsl
mov
inc
dec
outsl
loopne
cmc
cmpsl
shll
mov
cld
aaa
cwtl
insl
sub
sbb
addr16
add
into
bound
and
cltd
xor
sub
iret
test
xchg
or
pop
add
jle
leave
jg
les
in
cmp
mov
or
and
bound
jo
iret
and
mov
xchg
lock
fwait
push
cmp
mov
or
test
xor
clc
sub
push
and
push
sbb
pop
mov
push
scas
aad
xlat
adc
lock
push
inc
js
cmp
or
xchg
pop
adc
cwtl
ds
push
es
xchg
shrl
cmp
xchg
pop
popf
cwtl
cltd
or
nop
aas
push
clc
add
xchg
xchg
idivl
lock
push
push
and
jne
lock
sbb
and
fcomps
fists
xchg
aaa
iret
fadds
jno
xor
xchg
mov
push
push
ja
push
adc
aas
dec
daa
mov
or
lret
addb
add
mov
std
push
mov
lret
call
xchg
jmp
jae
lret
xchg
xchg
loope
xchg
pop
mov
jns
daa
push
push
dec
fcmovu
je
sub
or
in
testl
jge
push
cmp
mov
mov
shll
xor
insb
icebp
loop
xor
and
andl
jbe
iret
xchg
lock
xchg
push
cli
inc
lret
dec
add
iret
pop
add
push
fsubs
lret
mov
mov
adc
jne
stc
mov
push
fs
push
mov
sbb
sub
je
test
mov
mov
and
lcall
jg
fsubs
lods
and
pushf
sbb
sub
mov
imul
jg
daa
jne
and
addl
cmpl
call
push
cmpl
shrl
mov
inc
loope
loope
xchg
dec
fcmovnu
mov
xor
xor
sbb
inc
addb
popf
bound
push
inc
leave
fiadds
or
push
addr16
ja
fs
jge
pop
pop
inc
jl
add
popa
pop
iret
rcll
daa
or
add
loopne
out
xchg
imulb
insb
icebp
sbb
mov
sbbb
addl
imull
mov
in
inc
mov
repnz
push
pop
xlat
mov
mov
rol
add
js
pop
jge
or
push
iret
rolb
in
lret
sub
add
add
fdivr
stos
push
adc
inc
inc
add
test
mov
setb
scas
xor
xor
xor
inc
loop
jl
xchg
jae
outsl
push
and
cmp
imul
lea
xor
cmp
ret
sbb
stc
dec
push
out
push
gs
dec
inc
pop
ss
cmpsl
and
xlat
and
test
fcmovne
and
sub
rol
sub
les
lret
jp
hlt
xchg
xchg
sbb
cmp
add
mov
push
sub
cmpsb
add
dec
fbstp
in
movsl
mov
imul
adc
mov
movsb
test
rcll
push
mov
outsl
test
mov
data16
mov
jae
ret
vhaddps
popf
jbe
inc
jae
insl
sub
sbb
mov
mov
lds
loopne
cmc
repz
or
aas
in
js
repnz
lea
fimuls
and
js
aad
push
jl
jmp
mov
imul
mov
popf
lret
jge
bound
stos
ret
rorb
push
push
push
scas
dec
shll
and
mov
mov
mov
test
push
clc
ss
das
adc
pop
int3
test
fsts
data16
jp
mov
push
ja
loope
push
adc
fcoms
lock
xchg
xor
adc
sub
push
xchg
add
push
inc
pop
sub
pop
push
arpl
in
or
enter
adc
shl
js
rcll
cmpsb
test
clc
sbb
pop
repnz
jb
fwait
orb
push
lret
sbb
hlt
ret
cld
xchg
xor
xchg
stc
sbb
mov
xchg
xor
fnsave
bound
xor
adc
mov
pusha
mov
jbe
out
aaa
xchg
push
sbb
add
and
outsb
xchg
popf
xor
or
loop
ret
sbbb
inc
pop
and
mov
gs
arpl
sti
les
out
test
das
inc
test
mov
cmovb
hlt
xorb
xchg
mov
out
jbe
mov
xchg
enter
push
ret
int3
int
push
idivb
push
out
mov
fwait
pop
pop
mov
adc
push
xor
cmc
push
dec
loopne
daa
scas
insb
adc
fstps
stc
hlt
cmpb
push
add
adc
push
lock
pop
xchg
jl
sub
and
jle
xchg
xor
cltd
test
push
mov
jge
movsb
xor
js
inc
mov
out
or
repz
or
mov
mov
adc
pop
cmp
xchg
add
push
test
imul
push
test
adc
ret
loopne
xchg
ret
rcl
jp
inc
jecxz
lcall
insb
in
test
and
and
roll
cwtl
sub
jno
fcmovne
jle
cwtl
repz
test
scas
aam
je
cmpb
mov
sub
es
pop
in
mov
adc
push
and
add
sbb
xchg
mov
sub
push
jg
dec
data16
and
hlt
loope
or
fxch
test
clc
js
push
loopnew
xchg
pop
jbe
data16
inc
cmp
add
and
xor
push
enter
mov
cs
mov
inc
dec
ja
sti
rcl
jecxz
cli
and
push
subl
std
stc
dec
popa
stos
test
lock
imull
in
lret
roll
adc
gs
negl
xor
add
sub
push
jg
inc
scas
cmpsl
adc
xchg
sub
cmp
fnstcw
mov
arpl
cmp
iret
aam
and
das
mov
jb
nop
cmpsl
in
inc
mov
xchg
jecxz
addl
scas
test
inc
ljmp
dec
test
daa
push
push
pushf
push
xchg
adc
push
dec
dec
stc
mov
xchg
push
es
pop
and
sbb
mov
cmp
mov
and
pop
pop
and
sub
movl
and
stc
adc
loope
nop
test
scas
xor
mov
adcb
mov
dec
xor
movsb
xor
loopne
pop
shl
nop/reserved
mov
lret
les
ds
repz
push
xchg
mov
je
xor
cmp
push
xor
sahf
jne
sub
add
sub
cwtl
xor
xchg
push
sub
lea
in
and
pop
mov
cmc
dec
jno
push
aas
sub
movsb
xor
mov
ret
or
das
push
aad
xor
std
xchg
repnz
rcl
jno
xor
push
mov
frstor
fsubl
lret
inc
mov
sub
mov
cmp
xor
sub
and
pop
rcll
test
mov
stos
out
lods
mov
imul
sub
sbb
test
iret
push
sub
cmpsb
daa
bound
xchg
scas
add
mov
shl
adc
fld
xchg
cmc
mov
les
rolb
inc
adc
sbb
rcll
lahf
or
fstpt
int
int
push
or
add
mov
adc
and
sub
loop
dec
push
or
dec
mov
sub
loope
inc
pop
cmp
push
shrl
out
jle
push
and
roll
clc
and
mov
iret
out
mov
nop
inc
xchg
stc
cmove
inc
jne
mov
imul
cltd
mov
ds
adc
xchg
or
repz
mov
jmp
jne
addr16
and
mov
pop
js
rdseed
add
insl
xchg
dec
add
fdivl
lcall
daa
andb
xlat
stos
int
lcall
adc
cmp
xchg
sub
dec
mov
and
js
fwait
adc
push
xchg
jo
test
jbe
scas
jecxz
jns
movb
lods
shrl
pop
inc
insb
pop
or
mov
insl
stc
js
inc
sub
mov
out
jg
inc
scas
cli
push
test
fbstp
fildl
sbb
sub
mov
jbe
xchg
imulb
inc
mov
jb
icebp
cmp
jg
mov
sub
std
repnz
out
lea
bound
mov
data16
pop
mov
loopne
rorb
mov
dec
subb
adc
adc
xor
repz
into
shl
pop
xor
cmp
cwtl
ja
cmpsl
adc
mov
nop
push
push
mov
sub
enter
mov
add
pop
outsb
in
and
ljmp
mov
cli
mov
pop
push
xchg
loopne
sbb
loop
lcall
sbb
sbb
sbb
leave
js
lea
inc
test
aas
inc
es
das
dec
xor
scas
or
mov
adc
sti
inc
push
push
dec
fcmovnbe
ljmp
pushl
sub
cltd
or
dec
popa
in
xor
call
xchg
adc
in
iretw
movsl
mov
in
or
data16
in
int3
scas
mov
fistpl
inc
cmp
inc
add
je
lret
and
gs
xchg
aaa
int3
inc
test
push
inc
push
push
ss
jp
jns
nop
push
clc
adc
cmp
imul
jnp
ss
mov
cmp
lock
fs
push
or
enter
sbb
adc
and
outsb
and
and
and
push
iret
lods
mov
push
cmc
jg
mov
repz
sub
jbe
xor
push
scas
xor
jecxz
data16
pop
push
out
int
jns
mov
inc
dec
aam
lock
aam
xchg
fldcw
mov
mov
dec
or
cmp
push
push
mov
push
pop
dec
mov
jbe
xorl
push
sti
aaa
adc
mov
int
jg
and
lock
xchg
sub
xchg
bound
sbb
stc
or
dec
push
add
aam
adc
jmp
cli
xor
lods
inc
scas
out
stos
and
cmp
cmp
call
fdivs
popa
pop
and
push
addl
hlt
mov
add
mov
add
pop
pop
shl
loope
pushf
pop
push
test
inc
iret
or
cmc
lret
fwait
daa
into
mov
test
sub
test
hlt
mov
sub
movsl
lea
stos
mov
or
mov
inc
outsl
xor
pop
pop
cmp
mov
xlat
in
xchg
inc
mov
inc
lods
adc
sub
rorl
cmp
loop
lret
inc
adc
dec
or
std
pop
pushf
es
jae
pop
adc
mov
imul
mov
stos
dec
add
push
clc
outsb
test
sahf
pop
pop
int3
jg
cmpsl
jge
pop
call
divb
rcl
pop
sbb
test
push
test
ss
xor
pop
loopne
mov
mov
sub
jb
aam
cmp
or
shl
mov
dec
insl
lods
adc
mov
cmpsl
std
shll
pop
adcb
sub
fndisi(8087
rcr
mov
xchg
xor
or
jp
and
adc
test
es
cmpsb
sbb
stc
jbe
jecxz
cwtl
or
add
mov
xchg
sbb
test
push
xchg
mov
fstpt
test
push
mov
dec
push
sbb
push
cmp
sub
jge,pt
popa
mov
test
push
cltd
sub
add
xchg
xchg
xchg
test
fdivr
xor
mov
mov
xchg
xor
sbb
mov
je
xorl
fbld
call
es
inc
adc
xorl
int
xchg
or
and
jae
fadd
outsl
sbb
js
push
xor
cmpsl
and
cmpsl
pop
mov
dec
lock
test
xchg
test
imul
notb
ss
syscall
call
sub
and
pop
sub
es
popf
mov
sub
inc
cmp
ds
aaa
and
mov
cmc
jb
jl
loop
and
pop
sbb
cmpsb
push
push
je
inc
cmpsl
iret
cwtl
ror
xchg
adc
xchg
cli
loopne
sbb
xchg
or
and
cltd
dec
push
leave
cwtl
jle
or
fidivl
pop
mov
mov
add
xchg
hlt
das
lods
adc
or
roll
push
lea
fwait
and
test
cmpsl
cld
movsl
pushf
fisttpl
hlt
sub
addr16
xor
cmc
and
or
xor
xchg
es
sub
add
push
fcomps
sbb
bound
mov
roll
dec
stc
fldl
fidivl
xchg
testl
orl
mov
dec
outsl
jmp
mov
adc
repnz
fnstcw
test
jae
xor
xchg
ss
inc
adc
and
adc
adc
std
push
sub
add
notl
aas
push
test
mov
js
into
xchg
hlt
jl
push
inc
subb
xchg
jns
pop
hlt
pop
jge
clc
mov
and
sub
leave
mov
repnz
in
cltd
add
aad
adc
adc
popf
sarb
inc
inc
pop
dec
in
xchg
out
test
fbstp
arpl
popa
mov
enter
imul
pop
push
scas
push
fxch
mov
cmc
out
dec
xorl
mov
adc
dec
nop
into
adc
orb
std
mov
rol
and
lret
sbb
and
mov
fcmovnu
adc
mov
push
cmp
and
add
aaa
mov
loop
fldcw
fstpl
loope
shl
mov
sub
push
filds
adc
jmp
stc
subl
add
pop
cmpsb
clc
mov
sub
mov
jle
xor
test
stos
inc
shll
xchg
cmpsl
ljmp
lret
xor
lock
cmc
dec
inc
sub
cwtl
repnz
xor
push
fidivs
mov
in
push
push
xor
cmp
insb
push
fcoml
shrl
cltd
mov
xchg
rorb
xchg
xor
js
xchg
shll
scas
jle
and
xchg
popa
data16
mov
pusha
loop
jno
adc
inc
push
cmp
lret
test
sub
clc
jmp
shl
sbb
mov
mov
sbb
inc
dec
and
dec
push
ret
push
sub
repnz
ja
xorb
xchg
sbb
bound
inc
pop
ret
push
cs
cmpsl
sti
test
sub
cmpsl
push
frstor
jae
push
sbb
sbb
imul
or
or
sti
mov
cltd
leave
dec
aad
shrl
dec
mov
sbb
sar
push
and
shll
push
sub
add
sub
loopne
adc
test
add
jmp
push
mov
into
stos
cwtl
daa
std
xor
push
xchg
xor
fildll
fistl
or
notl
inc
lock
mov
stos
ret
stos
sbb
jle
ja
leave
das
adc
mov
dec
outsl
and
mov
dec
stos
sbb
push
pop
jns
rcl
pusha
mov
mulb
inc
addl
ffreep
rcrb
test
inc
mov
iret
fs
dec
iret
push
lods
dec
into
in
mov
cmpb
hlt
inc
jbe
push
jne
xchg
iret
mov
scas
hlt
add
dec
push
call
movsl
add
push
iret
mov
xchg
mov
loope
cmp
cli
sub
leave
pop
xchg
ret
lock
clc
out
and
inc
mov
and
rcl
jo
and
push
mov
and
mov
mov
sbb
cwtl
pop
nop
into
xorb
xor
lock
popa
outsb
push
sub
mov
sbb
rorb
mov
xchg
sub
les
cmp
jbe
out
or
in
lea
je
and
lret
imul
sub
inc
mov
xchg
neg
ja
add
xor
adc
sub
xchg
xchg
cmpsl
cmp
xor
lea
or
sub
dec
mov
icebp
push
lea
les
mov
mov
adc
test
xor
and
sbb
test
xchg
test
xor
fldcw
rcl
icebp
adc
push
test
push
sbb
jae
icebp
shll
adc
mov
jne
and
mov
adc
dec
and
inc
push
mov
mov
push
lret
pop
leave
sbb
mov
out
mov
sub
out
ror
xchg
add
arpl
iret
imulb
icebp
xor
mov
or
mov
add
test
mov
outsb
jno
jb
dec
mov
adc
imul
cltd
add
loopne
push
or
push
mov
cwtl
pop
jb
xor
and
fcoml
jnp
lret
pop
jp
stc
jbe
movsb
je
xlat
xchg
fsubrl
jmp
mov
inc
mov
lret
pop
test
adc
lock
push
fldl
xchg
xchg
movsb
sbb
leave
enter
shr
mov
xchg
pop
repz
inc
sub
rclb
xchg
mov
lock
add
les
sbb
inc
pop
xor
jb
les
mov
lahf
jns
jb
sub
mov
adc
enter
call
pop
clc
lods
mov
mov
cmp
andb
subl
rcll
das
cmp
and
scas
push
loopne
testl
mov
dec
add
mov
xchg
imul
jmp
repnz
xchg
adc
xchg
adc
or
call
lock
jno
ss
xchg
lds
inc
ret
cmpsb
mov
clc
jmp
stc
rol
adc
clc
aam
in
cmp
stc
jbe
ret
shll
push
fdiv
push
outsl
pusha
setbe
mov
jl
xchg
jle
ret
test
mov
dec
dec
inc
mov
jl
jecxz
and
sbb
adc
jge
in
mov
xor
notb
int3
je
mov
nop
cmp
lcall
sub
mov
fsubr
mov
sub
rcl
pop
mov
sub
shll
rol
in
cmp
xchg
repnz
push
adc
rolb
mov
sub
iret
xor
clc
pop
pop
stos
push
cltd
dec
or
and
and
fistpll
mov
roll
in
xor
cmc
add
push
mov
xchg
or
mov
cli
fiadds
das
cmc
cltd
pop
adc
mov
and
add
dec
shlb
or
loopne
negl
xor
xor
sub
sub
xchg
push
cmp
ss
andl
stos
xor
pop
insl
arpl
mov
cmc
cmpsb
movsb
hlt
or
xor
push
inc
push
xchg
movsl
dec
aad
inc
cmp
or
nop
mov
xor
lock
mov
or
jns
push
lea
add
ss
daa
punpckhwd
leave
sarb
sahf
gs
shlb
loop
loopne
repnz
jae
pop
les
cmp
mov
mov
cld
and
shl
daa
cmc
and
loopne
neg
movsb
repnz
inc
push
cmpsl
fsubl
mov
fldcw
xchg
loope
pop
cmpl
jge
add
mov
ss
jle
xor
push
testl
add
push
ret
xor
das
push
ret
lea
test
pusha
xor
mov
cltd
and
insl
testb
cmpsl
jne
repnz
mov
arpl
repz
adc
outsb
inc
out
jb
inc
dec
push
xorl
pop
xchg
mov
adc
and
test
ret
adc
out
push
lock
icebp
loop
in
das
pop
sbb
pop
shll
clc
pop
dec
or
xchg
rol
pop
sub
out
lcall
aam
test
push
pop
dec
shll
or
ds
inc
es
sbb
int
sbb
cwtl
push
mov
inc
roll
mov
sub
xor
xorl
fcmovnbe
mov
cli
sbb
xchg
adc
sub
test
push
inc
push
aad
push
inc
addr16
aam
mov
pop
rcl
jbe
push
inc
loopne
cmc
cltd
adc
adc
sbb
adc
and
xchg
cltd
repnz
add
cld
cwtl
lret
mov
and
lea
jle
jb
adc
ss
xchg
lret
sarb
add
test
repz
fs
lret
cld
lods
jbe
test
je
repz
lods
cmpsl
int3
test
bound
stos
mov
lock
pop
lret
or
rol
mov
call
mov
and
xlat
js
test
xchg
and
mov
in
push
or
push
inc
ror
sub
xchg
xchg
xchg
cmpsl
or
add
adc
shll
push
inc
nop
add
call
stos
or
xchg
mov
lret
inc
sub
shll
fnstenv
xor
cmp
scas
js
insb
pop
aam
mov
flds
xor
adc
adc
add
xchg
out
or
cmp
push
adc
xlat
imul
sub
mov
inc
lock
sbb
mov
add
rcr
adc
pop
adc
dec
xlat
inc
lcall
xor
lret
add
pop
sub
adc
inc
sbb
int
jo
xchg
jmp
shll
pop
adc
jp
ljmp
mov
push
jg
rcl
xchg
mov
push
fsubs
push
sub
xor
sub
aaa
arpl
push
cmpsl
loope
pop
outsl
inc
xchg
mov
rcll
lret
adc
cwtl
mov
test
adc
call
xchg
cmp
sbb
pusha
pop
pop
test
icebp
test
lds
scas
inc
sub
pop
pushf
jne
sub
hlt
jne
xchg
xlat
loopne
es
rclb
sbb
hlt
jmp
pop
mov
dec
iret
cli
push
add
fildll
inc
xchg
dec
sub
leave
lock
inc
adc
scas
sub
insl
adc
mov
adc
push
cltd
rcrb
adc
jecxz
daa
push
mov
lock
aas
pop
xor
jge
mov
shll
adc
cwtl
stc
pop
enter
es
xchg
cli
outsb
pop
loop
fstpt
push
xacquire
xor
push
xchg
stc
pop
fists
jp
adc
add
sbb
cmc
mov
mov
lock
mov
fcompl
cmpsb
sub
xor
aas
sub
test
xchg
aaa
iret
icebp
adc
jl
and
and
movsl
ljmp
aad
test
xchg
roll
and
out
cmpsl
pop
clc
inc
push
mov
sbb
cmp
scas
sbb
sub
and
xchg
or
add
outsl
xor
mov
jbe
xor
xchg
sub
and
iret
add
out
inc
xlat
sub
js
clc
sbb
push
clc
jge
mov
sub
fbld
cmp
loopne
xchg
mov
fldcw
cmpsl
cld
add
popa
fnsave
jp
or
int3
rorl
push
mov
outsb
icebp
xor
mov
or
arpl
iret
ljmp
pop
aaa
and
dec
popa
lahf
push
jne
mov
xchg
adc
push
xchg
stc
mov
jnp
je
fdiv
sarl
dec
jle
mov
lods
add
jb
loopne
cwtl
xchg
hlt
adc
sbb
sub
jmp
adc
inc
mov
cmp
cltd
scas
inc
add
push
xchg
ja
inc
popa
cmp
sbb
sub
sbb
jle
jecxz
leave
mov
sbb
xchg
xchg
repz
jbe
push
cltd
push
stc
mov
jns
inc
repz
pcmpeqb
mov
add
pop
loop
sub
in
or
adc
jo
rol
push
pusha
jg
test
pop
sbb
pushw
stc
sti
test
fadds
sbb
cmpsb
in
fs
mov
sbb
pop
push
enter
cmc
clc
out
rcr
or
stc
and
movsb
push
push
mov
je
sub
dec
cltd
inc
and
data16
outsl
mov
xor
mov
fsts
movsl
xchg
fcmovnbe
xchg
or
mov
or
js
fidivs
inc
sbb
lret
add
in
cmpsl
rolb
aas
std
pop
test
mov
xor
call
pop
mov
clc
sbb
xor
sub
sbb
enter
push
xchg
inc
test
add
sbb
ljmp
lods
pop
add
jb
imul
add
movsl
addb
push
seta
cwtl
dec
adc
hlt
adc
xchg
mov
pop
movsl
sub
sub
jns
jecxz
mov
cld
rorb
cmc
outsl
jl
push
inc
loop
inc
add
xchg
arpl
roll
dec
add
mov
lret
aas
add
adc
jmp
ss
fs
adc
mov
imul
leave
push
add
adc
movsl
cmp
fisttpll
adc
jnp
lea
movsb
test
insb
lret
jl
or
and
sti
jl
xchg
mov
fidivs
add
dec
lret
neg
gs
aad
mov
pop
inc
xor
bound
nop
lret
jge
sbb
or
pusha
sub
in
outsl
fistl
and
push
sbb
xchg
inc
fsubr
push
xor
add
test
push
sub
cmc
jmp
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
loope
lcall
sub
mov
mov
pop
cmp
jge
or
sbb
sub
or
gs
ljmp
test
nop
cmp
mov
xor
inc
pop
fstl
vmaxpd
aas
out
cli
das
aam
add
lea
or
cwtl
mov
jno
push
or
inc
test
sub
nop
and
jecxz
xorb
movl
push
sbb
out
das
sub
cmp
clc
repnz
pushf
jmp
adc
mov
pusha
mov
movw
lea
jmp
sbb
adc
or
mov
adc
add
pop
jb
pop
adc
rcl
add
mov
fldt
adc
push
inc
pop
ret
xor
and
cmp
sbb
mov
sahf
xchg
jle
jbe
cmp
mov
jp
xor
push
nop
mov
sbb
adc
add
jmp
cmpsb
sub
xchg
sub
mov
sub
leave
lds
pop
daa
lods
adc
push
xor
jbe
fcompl
adc
jecxz
shl
or
aad
jbe
push
test
shll
rclb
leave
xor
xchg
push
push
lret
hlt
xchg
mov
aaa
call
divb
sbb
rcl
mov
jne
xor
je
xor
repz
mov
jae
xor
repnz
jb
xor
stc
data16
mov
or
idivl
idiv
mov
ja
aaa
or
divl
cmc
clc
mov
jne
xor
jae
add
popf
stc
shl
repnz
adc
popf
jne
mov
adc
xchg
out
add
aad
ds
es
jbe
fsub
shlb
fldenv
xor
cmc
pop
add
push
cwtl
mov
mov
sbb
pop
sbb
outsl
or
push
xchg
adc
xor
hlt
shll
mov
cltd
mov
adc
xor
mov
fnstcw
mov
popf
pop
or
cmc
jne
aam
push
clc
rcl
push
popf
rorb
push
sbb
xchg
negl
fstpl
mov
ret
jmp
xchg
mov
dec
xor
shll
ja
out
cltd
xchg
pop
fcmove
pop
hlt
std
repnz
sbb
notb
adc
mov
cmpsb
mov
cwtl
pop
fiadds
mov
mov
rcrb
cltd
lods
xchg
mov
cmp
push
sbb
mov
sbb
adc
dec
js
negb
xor
pop
sbb
jg
sbb
mov
negb
push
mov
in
xchg
xchg
ja
or
adc
mov
leave
cmp
xchg
or
mov
mov
popf
xchg
or
xor
add
repnz
inc
adc
cmp
xchg
pop
fnsave
xlat
aad
dec
or
add
mov
pop
cltd
mov
sbb
fnstsw
sub
not
xor
xchg
xchg
xchg
and
add
dec
jne
xchg
jno
aam
fstl
icebp
clc
jae
jmp
adc
lea
aam
lcall
mov
or
negl
pop
sbb
push
fstpl
xlat
aad
pop
or
jne
pushf
clc
mov
test
xor
or
clc
popf
sub
sbb
leave
repz
xor
aam
and
mov
ljmp
mov
loope
leave
push
push
push
stc
mov
pusha
roll
rclb
jbe
pop
roll
sarl
push
cmpsb
jno
aas
push
sar
pop
cltd
fdivrs
gs
push
sub
out
xor
push
cltd
adc
fcom
shll
in
les
jmp
mov
xor
mov
fmuls
cmp
mov
je
divl
fnsave
xor
repnz
mov
jb
xor
mov
xlat
push
adc
notl
lods
cmp
push
shll
push
dec
jp
fstps
xchg
sarl
lret
jp
jl
nop
adc
sbb
jns
repz
fnstenv
fxch
adc
or
cmp
cltd
popf
mov
rorl
repnz
fstps
add
popa
movsl
out
stc
add
in
xlat
ficompl
movsl
out
icebp
add
test
cmp
jb
jp
pop
rcr
stc
cltd
xlat
pop
popf
sbb
fdiv
cwtl
pop
jns
push
adc
mov
xlat
cmp
cmp
mov
loop
xchg
push
xchg
mov
pop
mov
xor
pop
out
mov
jb
test
add
pop
rcll
pusha
jns
mov
cltd
repz
mov
inc
mov
jecxz
fcos
pop
rcl
clc
popf
pop
or
divl
mov
push
mov
popf
push
or
push
out
push
sarl
xlat
mov
notl
push
fnsave
or
in
in
popl
sbb
cmc
rcrl
cmc
fcmovnb
adc
clc
sbb
add
mov
shrl
or
sbb
call
cmp
fnsave
mov
popf
pop
or
push
aam
push
xor
xlat
xchg
popf
jp
repnz
fisttpll
cmp
xlat
lcall
stos
fstl
mov
popf
or
adc
xchg
fcoms
subl
insl
stc
lods
xchg
outsl
mov
xlat
js
pop
jno
test
ficoms
mov
mov
add
pusha
adc
mov
inc
outsl
mov
inc
clc
ret
out
fimuls
pop
divl
sbb
fldenv
popf
cltd
xchg
jns
fnstenv
inc
xchg
and
in
adc
jnp
push
jbe
movsb
loopne
cmc
mov
stc
lea
pop
cmp
mov
adc
mov
pop
fistpl
clc
hlt
xchg
je
enter
xor
mov
imul
in
push
pop
popf
ror
or
not
inc
fisttpll
xor
cmp
sub
stc
cmc
fldl
mov
clc
push
xchg
testl
clc
or
shll
push
testb
movsb
xor
jns
push
add
jno
fldln2
pop
add
leave
clc
mov
out
cld
adc
add
fstps
push
or
ret
cs
dec
add
xchg
arpl
aas
pop
sbb
mov
test
sbb
pop
mov
loope
jno
mov
pop
movsl
push
cmp
xchg
cmp
shll
mov
push
xchg
aam
adc
mov
mov
jns
cmp
mov
inc
rcrl
or
pop
and
push
mov
mov
sbb
fnstcw
xor
cltd
xchg
pop
sub
repnz
sub
pop
movsb
aad
mov
out
pop
mov
sub
xor
dec
cmp
mov
shrb
sahf
xor
jmp
in
cli
mov
sbb
in
xlat
lea
loopne
cmp
loopne
cmp
repnz
push
fnstsw
push
fstl
and
cmp
cmc
lcall
shlb
fstps
out
cmc
or
cmp
push
mov
fcom
jns
cltd
setno
shl
mov
jns
cltd
xor
clc
cltd
mov
test
cltd
pop
pop
sbb
jne
cltd
xchg
push
pop
sbb
jg
sbb
xchg
sbb
cltd
adc
sbb
fcompl
out
enter
push
in
fcomps
push
mov
repz
aad
jbe
cltd
stos
aad
adc
push
push
in
xchg
lcall
or
nop
mov
or
cmpb
out
imull
adc
mov
in
xor
add
adc
notb
cmc
xlat
xchg
popf
xor
adc
mov
push
clc
repnz
xchg
popf
xor
negl
mov
in
pop
sub
cmc
push
fbstp
sar
popf
cwtl
or
notl
adc
cltd
mov
hlt
cltd
mov
xchg
pop
incb
rcll
xchg
push
fmuls
fnstcw
push
cwtl
psubw
xchg
repz
pop
add
cltd
popf
stc
and
xlat
cltd
mov
mov
jmp
mov
stos
jge
jno
pop
xchg
adc
je
div
xchg
push
pop
push
add
aam
cs
sub
imull
stos
dec
clc
cmp
and
out
mov
cltd
icebp
cmp
and
pop
xor
push
idiv
fdivrl
cmp
ds
xlat
jg
cmp
mov
dec
cmp
aaa
mov
xchg
inc
push
mov
mov
push
pop
cltd
xchg
shlb
inc
sahf
pop
pop
xorb
jmp
arpl
sbb
and
push
push
pop
mov
nop
jl
xor
pop
push
pop
les
pushf
rclb
nop
cld
shrl
push
adc
xor
cmp
xchg
xlat
sbb
cwtl
xchg
or
cltd
adc
mov
mov
inc
mov
jno
dec
lea
popf
rorb
idivl
pop
dec
push
xor
shrb
sahf
push
fistpl
sbb
adc
jne
xchg
cmp
aaa
push
stos
fldcw
xor
adc
popf
lcall
mov
scas
lcall
mov
aam
cmc
fmuls
sbb
shlb
out
es
inc
into
sbb
pushf
adc
and
stos
fsubs
rorl
prefetcht1
into
pop
adc
add
cmp
aam
push
ss
movl
nop
mov
rol
jo
cwtl
cmp
inc
adc
or
cltd
add
xor
je
mov
into
fadds
lahf
insb
sbb
pop
ficoml
cld
and
aam
repz
nop
xchg
cmp
xlat
dec
sbb
lahf
inc
cld
xlat
pop
xor
xchg
lret
in
or
fldl2e
insb
rcll
push
pushf
xchg
mov
cs
dec
lds
or
nop
xchg
and
in
push
sub
testl
push
into
mov
fldenv
push
sub
mov
push
cmpl
xor
pop
nop
into
xchg
arpl
out
cmc
sti
cmp
mov
mov
jmp
jecxz
rcrb
sbb
xchg
das
dec
enter
fnstenv
clc
aam
jecxz
cmc
or
and
out
xchg
cld
les
and
mov
insl
aad
pushf
xchg
or
lds
stc
sbb
jns
dec
fisttps
aaa
dec
jo
push
mov
lds
pop
fwait
rcrl
mov
pop
adc
jp
fbstp
pop
xchg
jl
fprem
shll
or
mov
shl
mov
inc
sbb
ret
mov
fcom
call
int3
in
idivl
mov
adc
mov
and
aam
stos
rcll
aad
loope
jecxz
jmp
adc
insl
mov
cmc
into
push
in
xchg
repz
fisttps
clc
mov
jl
xlat
dec
sbb
mov
or
sub
cmp
je
leave
xchg
sub
popa
or
aaa
adc
pop
adc
out
insl
fdivl
dec
ret
mov
aam
shl
xor
xchg
clc
adc
xchg
mov
push
repnz
cmp
dec
mov
js
pop
in
nop
xchg
js
xorl
scas
mov
sbb
shll
popf
je
mov
push
js
adc
adc
sbb
adc
xor
adc
lret
sahf
jne
negb
ret
cltd
jb
xor
xchg
fcomip
cmpl
fnstsw
ret
sahf
xor
xchg
mov
testb
adc
cwtl
repnz
xchg
xor
repz
daa
adc
fcomps
mov
lcall
adc
xchg
cwtl
jne
ja
fistps
shll
jns
ss
adc
insb
call
aaa
sarb
psllq
fcomps
push
sbb
jne
push
push
push
mov
sbb
push
mov
pop
mov
fists
mov
orb
cltd
pop
fstl
adc
pushl
mov
xor
stc
xor
lahf
cltd
call
cmp
je
enter
test
push
mov
adc
mov
pop
jb
xor
lahf
cmp
pusha
pause
mov
mov
push
jb
xor
xor
jae
adc
and
mov
cmc
pop
fnstsw
shl
pop
nop
push
pop
cmp
xor
dec
sbb
sub
sbb
repz
pop
out
xchg
idiv
lahf
je
mov
aam
rclb
xor
shlb
and
pop
jne
cmc
pop
nop
sbb
jns
shrl
xchg
imul
pop
pop
cmp
aaa
pop
adc
cltd
cltd
xchg
nop
repnz
mov
js
xor
mov
pop
mov
clc
dec
out
mov
fidivl
pushl
mov
scas
push
mov
js
inc
push
xchg
scas
push
push
rclb
xlat
xchg
sti
test
pop
push
popf
stc
pop
shll
inc
cmc
popf
xor
xor
js
pop
ja
aaa
call
shlb
fcoml
pop
jb
shlb
mov
cmp
xchg
ja
sbb
nop
jne
xor
divb
lret
sahf
cmp
shll
mov
shlb
mov
adc
pop
jae
xchg
test
mov
sbb
pop
fcomps
mov
adc
hlt
roll
mov
mov
je
testb
cmp
jae
loop
cmp
cltd
js
js
lahf
ja
fidivs
repnz
je
sbbb
cmp
adc
xlat
xor
daa
shll
pushf
xor
out
shll
lcall
lahf
ficoms
clc
cmp
dec
ss
xor
adc
jae
out
in
arpl
push
aaa
clc
mov
mov
mov
xlat
out
pop
ja
clc
pop
xor
aas
sub
out
js
out
pop
mov
divb
push
xor
cwtl
test
sbb
mov
xchg
mov
lcall
subl
sti
adc
and
push
mov
cmp
mov
push
ja
add
adc
pop
sti
mov
adc
rcrl
lret
mov
sub
mov
mov
stc
xchg
imul
mov
push
int3
js
jle
add
popa
enter
out
jae
lret
xchg
mov
std
cmp
jb
jl
mov
notl
fs
jne
jmp
into
mov
jbe
pop
shlb
jp
inc
test
lds
dec
and
decb
shl
bound
fistpl
ljmp
add
ret
lret
jmp
dec
insb
mov
mov
xchg
xchg
xchg
fwait
push
rcrb
std
sub
pop
loop
cltd
icebp
shl
inc
xchg
in
repnz
test
lock
cmc
jbe
xchg
or
or
mov
test
mov
sbb
sbb
mov
sbb
pushf
push
xchg
xor
pop
stos
add
jb
popa
outsb
je
insb
gs
jb
shrd
btr
neg
add
call
ja
mov
ss
ds
pop
mov
not
ret
mov
jno
mov
in
add
sub
insb
add
xchg
xchg
mov
jns
cmp
and
bound
add
mov
shr
stc
xchg
mov
mov
jle
xor
ret
xchg
xchg
scas
add
sbb
cltd
fcompl
push
sbb
in
std
and
sbb
lock
jnp
sub
pushf
jge
notb
jbe
repz
rcll
aaa
inc
sti
or
adc
inc
pop
dec
scas
pop
leave
xchg
dec
js
in
push
ss
insl
pop
mulps
pcmpgtb
dec
gs
xor
out
jne
pop
leave
mov
aas
mov
loop
mov
test
addl
dec
in
xchg
mov
push
inc
fistps
jnp
xor
mov
push
sbb
sarl
lcall
and
into
leave
pop
add
fidivrl
push
fdiv
insl
or
jmp
arpl
test
pop
shll
mov
push
cmp
mov
hlt
fucomp
add
adc
pop
sbb
ljmp
pop
pop
xor
dec
dec
mov
xor
adc
dec
out
cmp
loop
sbb
add
mov
dec
enter
or
ret
mov
loopne
fisttpl
sub
mov
roll
daa
sti
jmp
cmp
mov
add
stc
btr
mov
call
dec
out
test
or
cmp
loope
imul
int
mov
or
fnstcw
dec
push
fcomps
mov
jle
lret
gs
push
leave
dec
movsl
stc
ror
jg
mov
imul
mov
out
jns
ret
jns
adc
push
cmp
mov
les
dec
enter
add
xchg
ja
icebp
pop
inc
xchg
sbb
cmc
movsb
jb
icebp
sahf
negl
lret
dec
adc
mov
ffreep
and
push
push
dec
ret
fcomp
lret
and
cltd
andb
insb
jp
dec
xorb
ljmp
faddl
hlt
mov
imul
clc
pop
inc
mulb
mulb
lods
jno
adc
and
dec
sub
adc
aas
pop
adc
pusha
inc
and
jo
sti
mov
cmc
xor
push
rorb
fdivrs
bt
xor
movb
rol
pushl
push
call
jmp
pop
icebp
adc
aad
jmp
xor
fnstcw
pop
mov
ret
jb
add
lret
jecxz
fs
or
fisttps
repnz
and
daa
aad
bound
mov
adc
xchg
in
xchg
js
sahf
mov
mov
pop
push
jp
das
pop
clc
pop
or
repz
int3
cwtl
xchg
ljmp
dec
sbb
shrl
icebp
loop
in
lock
pop
mov
fistps
sahf
dec
mov
fdivl
rorl
shll
jmp
mov
testl
js
cmp
xchg
sahf
mov
xor
leave
call
movsb
xchg
push
fadd
test
or
dec
mov
lea
inc
add
out
test
sbb
jae
inc
xor
std
aam
cmp
pushl
fs
pop
cmp
ficomps
mov
xor
lods
or
cltd
mov
adc
cld
jge
stos
and
out
call
inc
push
bound
pop
adc
inc
mov
subb
pop
leave
xchg
mov
dec
iret
sbb
adc
push
add
fstpl
and
imulb
in
sub
data16
jmp
mov
push
inc
jbe
pop
mov
cwtl
dec
cld
mov
mov
roll
stos
add
jmp
dec
movsl
jnp
js
or
mov
loope
call
xor
test
jno
into
jle
mov
xchg
scas
dec
out
mov
fwait
sub
repnz
dec
leave
inc
aas
dec
leave
test
jmp
sarb
push
pop
lock
test
outsb
mov
aas
and
and
not
rcl
je
mov
lock
idivb
in
test
rol
xlat
xor
lds
sti
xor
cmp
mov
shl
mov
fwait
pushf
data16
jae
jo
jb
xchg
lock
push
sbb
dec
pushf
pop
xchg
out
pop
test
push
inc
fwait
inc
and
movsl
jb
inc
daa
enter
call
ret
jge
cwtl
xor
je
add
dec
pop
arpl
adcl
mov
xor
xchg
shll
sbb
stc
xor
xor
jo
pop
xor
xchg
mov
ds
lahf
xchg
xor
mov
fisubl
push
scas
dec
arpl
and
rclb
aaa
mov
adc
leave
sahf
popa
fwait
mov
lret
push
mov
sub
pop
popf
inc
lock
jge
bound
pop
sbb
jge
jg
stc
ss
add
mov
push
sbb
push
rclb
pop
pop
dec
imul
pop
cmp
data16
xchg
or
fwait
sbb
stos
ss
sbb
decb
cs
fcmovbe
xchg
cmp
pop
pop
jns
popa
je
jbe
negb
push
mov
ja
add
jle
sub
repz
ja
dec
daa
xchg
pop
jg
push
js
repnz
repz
jp
sbb
pop
mov
jmp
lea
ja
call
pushf
jmp
lea
call
pushf
pusha
pusha
mov
mov
pushf
movw
lea
jmp
sbb
push
lods
adc
pushf
or
or
pusha
add
ljmp
and
out
movsb
sub
leave
cmp
add
inc
push
mov
lea
aaa
call
loopne
iret
lcall
add
mov
pop
push
nop
inc
out
xchg
inc
lea
sub
pop
pushf
scas
enter
and
addr16
insl
pop
in
outsl
stos
or
sbb
fwait
dec
xchg
ss
cmpsl
test
pop
fiaddl
ljmp
data16
ljmp
mov
rorl
dec
stos
jg
ss
cmp
arpl
cli
outsl
arpl
loopne
push
xchg
jge
pop
adc
sub
or
fwait
mov
mov
jl
xchg
pop
ret
push
adc
cmp
stos
mov
pop
shll
cs
and
aaa
cmp
sub
ljmp
pusha
push
sbb
inc
lods
add
add
add
inc
jmp
lea
jb
stc
call
inc
test
bt
test
xor
pushl
cmc
jmp
mov
test
cmp
call
lods
pushf
stc
neg
mov
xor
bt
bt
rol
pushf
call
add
sbb
add
mov
cmp
pushf
pop
lock
loope
inc
adcl
pop
dec
hlt
repz
mov
ss
jecxz
xchg
aas
inc
das
sbbl
stos
xor
sub
push
aam
fs
add
push
mov
pop
ljmp
dec
outsl
loope
int
pop
jp
aaa
out
out
ds
icebp
je
aam
int
mov
insl
movsb
fdivrl
jg
mov
jb
jne
std
mov
divl
push
mov
add
mov
push
int
dec
sub
and
enter
movsl
add
ds
jg
mov
sbb
stos
adc
fcmovne
or
mov
mov
fnstcw
dec
dec
sbb
or
mov
fs
cmc
aam
insl
xor
in
lcall
jge
sbb
pop
pop
jno
xlat
icebp
mov
icebp
xor
mov
mov
decl
stc
add
jmp
cmp
aaa
mov
xchg
inc
or
cmpsb
jns
jnp
inc
sub
clc
pop
pushf
test
daa
push
fmuls
jns
into
pusha
push
test
xchg
cmp
cmp
pop
push
push
pusha
outsb
in
or
adc
icebp
sbb
js
jg
les
and
push
leave
adc
ljmp
gs
push
lock
dec
les
rcrb
mov
shlb
insb
les
lcall
shrb
mov
mov
or
xchg
movb
ret
push
sbb
jecxz
fs
sbb
call
cltd
xor
inc
and
inc
mov
out
movb
pop
inc
movsl
add
rcrb
and
cmp
add
outsb
in
repnz
push
cmpsl
ja
dec
loop
push
inc
sti
call
imul
movb
cmp
retw
inc
imull
or
push
fiaddl
in
fmull
into
jnp
pop
adc
hlt
shl
mov
jae
in
out
inc
jecxz
addr16
and
mov
ljmp
aam
sbb
das
push
ret
arpl
lods
and
sbb
push
mov
mov
mov
ret
mov
fs
or
push
sub
into
imul
cmp
inc
jb
int
shlb
aam
inc
jmp
add
stos
dec
and
inc
cltd
nop
movsl
ss
iret
loope
out
ljmp
fs
add
add
dec
es
cld
mov
pop
adc
mov
ficompl
xchg
cltd
rcrl
fcompl
pop
adc
cld
cld
ljmp
pavgb
in
loope
outsl
mov
sub
in
jo
int3
addr16
pusha
cli
testb
jnp
jbe
enter
dec
lea
xor
insl
pop
test
enter
dec
dec
and
out
pop
sbb
and
stos
lods
fs
add
scas
mov
sbb
in
lcall
sbb
cmp
mov
mov
xor
push
mov
notb
ja
jle
jae
sbb
xor
in
rorl
mov
add
adc
inc
xor
cmp
ret
jns
xchg
shlb
push
dec
outsl
sarl
out
jl
fistpll
out
gs
pop
rclb
push
adc
sarl
mov
cmp
je
cmpb
xabort
sbb
cld
addr16
pushf
das
mov
rcr
das
bsr
push
bswap
btr
aad
cmc
mov
stc
cmc
test
push
jmp
bsf
shl
mov
xor
rcr
stc
sbb
mov
stc
push
pushf
pop
shl
mov
pusha
pushl
jmp
or
jno
in
fs
shrb
lods
inc
sub
cmpsl
rclb
xor
out
push
subb
xor
pop
imul
jecxz
mov
xchg
mov
aas
mov
mov
scas
mov
test
dec
sbb
pushf
mov
push
sbb
sti
mov
mov
in
sbb
les
inc
and
repz
mov
xor
inc
jle
stc
cmp
mov
mov
mov
frstor
loop
ljmp
inc
imull
into
test
adc
insb
rclb
jns
lret
outsb
das
jb
in
inc
adc
pop
xchg
lock
add
lahf
enter
jge
lock
bnd
aad
daa
mov
xchg
push
push
lar
mov
frstor
roll
loope
fadd
inc
push
xlat
dec
int
rorl
xchg
xchg
mov
pop
int
sub
xchg
mov
mov
pop
pop
jle
lds
adc
test
mov
pop
jge
movlps
cmp
loopne
imul
arpl
sti
inc
xchg
dec
pushf
mov
lea
ja
dec
inc
jmp
lea
jae
btr
bsf
mov
cmp
mov
adc
mov
bt
cmp
jmp
pushf
mov
push
mov
lea
ja
pushf
lea
jb
stc
test
test
cmpb
pushf
pushf
lea
jne
shrd
cmp
shld
mov
bt
cmc
pusha
stc
add
cmp
jmp
call
push
call
call
mov
pusha
inc
call
icebp
fstl
adc
je
xchg
xchg
movsl
lahf
and
or
fldl
lahf
adc
adc
loope
lahf
mov
js
adc
jle
hlt
js
adc
jle
jl
or
pop
xchg
push
xchg
adc
or
fldl
lahf
adc
adc
jecxz
mov
je
or
adc
mov
adc
adc
jecxz
push
hlt
js
adc
jae
out
jne
add
sbb
subl
roll
lahf
adc
adc
mov
pusha
jns
adc
mov
cwtl
lock
adc
daa
xchg
in
jp
adc
inc
push
cltd
mov
xchg
clc
js
adc
push
add
js
and
inc
push
or
stos
xchg
movsb
jns
adc
inc
pushf
xchg
jnp
add
shrl
add
decl
mov
sarl
sti
xor
sbb
push
and
js
mov
inc
xor
mov
movsl
or
pop
jp
push
xchg
fsts
sbb
jne
xor
xchg
decb
or
mov
sub
adc
inc
xchg
adc
adc
adc
sub
or
data16
xchg
in
jp
adc
inc
rep
loope
xchg
incb
jnp
adc
andl
insl
xchg
lock
adc
arpl
adc
push
call
jl
sub
insb
xchg
pushf
jnp
sbb
jne
jl
or
pop
add
or
pop
add
xchg
lods
jns
adc
in
js
mov
jnp
adc
iret
inc
pop
mov
sarb
adc
mov
adc
adc
loope
addl
and
adc
paddsb
cmpsl
lahf
push
jns
adc
cli
stos
loope
xchg
xor
or
aaa
shrl
adc
lods
lahf
adc
adc
loope
and
js
push
aam
jnp
add
add
jns
sbb
fwait
pusha
jo
mov
adc
adc
scas
lods
and
sbb
adc
and
fsts
shr
dec
add
and
sar
mov
test
add
push
pushf
call
not
call
clc
movzwl
ror
adc
mov
pushl
stc
test
add
cmc
cmp
stc
mov
call
pusha
pusha
jmp
dec
clc
stc
call
call
jmp
lea
jne
shld
movzbl
mov
lea
sub
mov
bswap
not
mov
push
pusha
lea
jmp
mov
jmp
push
pusha
lea
jae
bsr
mov
shrd
lea
lea
mov
stc
mov
jmp
add
xchg
loope
push
sub
cmp
rolb
fdivrs
bound
xchg
mov
sub
popa
mov
cwtl
mov
in
xchg
dec
fadds
movsl
outsb
test
sbb
enter
ficoms
arpl
adc
mov
repnz
ja
cltd
mov
jg
cmpl
aaa
jnp
jb
xchg
clc
cmp
cli
push
sbb
fmull
shrb
in
mov
mov
fdivrl
push
xor
sti
mov
lret
popf
xor
pushf
mov
xor
movsl
imul
dec
push
jge
sar
mov
mov
stos
les
sbb
fcmovnu
pop
sarl
rorb
push
xchg
lods
xor
pop
mov
mov
sub
jl
add
sarl
cmp
inc
data16
xor
cmpsl
movsb
outsl
das
bound
out
lods
sbb
testb
inc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lea
je
pusha
pushf
pushl
lea
jmp
cmp
test
sub
dec
pop
xor
lcall
hlt
sbb
mov
daa
js
xchg
mov
iret
pop
out
mov
repz
dec
sub
imul
enter
dec
pop
jo
ds
jp
fiaddl
pop
xchg
xchg
lea
test
pop
pop
add
mov
cmp
sbb
mov
cwtl
sbb
xchg
lret
mov
xchg
xchg
push
lods
sbb
rclb
pushf
pop
push
fstpl
sbb
subb
cmpb
pushl
movb
lea
jne
movzbw
daa
sub
ror
daa
mov
setns
stc
rcl
add
mov
ror
cmp
mov
jmp
adc
and
sbb
cwtl
and
adc
jb
lock
aam
stos
xchg
mov
cmpsb
cmp
cmp
push
arpl
mov
mov
inc
adc
loop
sub
xor
mov
ret
shrl
dec
test
or
movsb
xchg
cmp
pop
fwait
xchg
add
icebp
jmp
into
mov
push
mov
jno
pop
pop
lret
jle
stos
mov
mov
es
es
adc
sahf
ficomps
fistpl
push
jae
sbb
push
mov
imull
mov
or
es
popf
jo
std
pop
jle
jle
jle
outsb
and
stos
jo
icebp
sbb
xor
mov
xchg
ds
mov
cmpsb
mov
aam
shl
xchg
cmp
and
mov
mov
sub
mov
push
es
sbb
pop
lock
add
lret
and
lcall
xor
xor
mov
xchg
xlat
sti
aas
js
jg
lock
jae
push
sbb
fdivrs
xchg
add
push
imul
outsl
dec
jne
je
inc
jns
add
cmp
lods
dec
sbb
adc
sub
dec
addr16
lahf
stos
add
and
adc
setno
jl
xlat
add
dec
sub
sbb
movsb
and
xchg
sbbb
inc
or
js
add
inc
push
inc
add
push
sbb
call
and
jbe
pushf
pusha
lea
jbe
cmc
shr
sub
shl
shl
bswap
mov
ror
shld
cmp
xor
mov
shld
dec
xor
add
adc
btr
movsbl
sub
shr
call
out
lcall
mov
shlb
scas
inc
in
pop
push
and
inc
push
lea
add
loope
mov
xlat
test
push
push
cmp
pop
add
and
pop
mov
rcrb
je
addr16
inc
push
ficoml
std
push
popf
sbb
sti
adc
or
cmpsb
mov
jne
push
mov
dec
iret
and
enter
inc
orl
jp
int
mov
jmp
jbe
aam
arpl
out
adc
jnp
sbb
push
sbb
jnp
mov
lcall
pop
xchg
mov
sub
mov
cmp
jg
dec
es
jg
fidivrs
mov
roll
add
or
pushl
mov
pop
mov
lods
aam
stc
nop
dec
outsb
clc
popf
mov
sbb
popf
jne
shll
adc
das
jns
clc
xchg
notb
jg
jnp
jl
fwait
sub
fcoms
dec
loop
dec
cmc
into
arpl
xchg
test
and
cli
adc
or
mov
dec
cmpsb
aad
dec
ret
inc
cmpsl
sbb
fld
out
fs
push
add
mov
pop
mov
mul
xchg
notl
push
jbe
jbe
jo
clc
cmp
jl
push
sbb
pop
push
pushf
loope
cmpsl
test
stc
cltd
jle
ja
jp
std
lcall
fs
add
imul
mov
dec
jp
pop
push
add
sbb
cld
mov
inc
jmp
push
adc
dec
std
sbb
jnp
pop
mov
push
sbb
pop
mov
leave
iret
lock
iret
int
leave
scas
xor
jle
cmp
out
lods
mov
or
leave
mov
mov
jnp
dec
jle
or
ljmp
pop
aad
aam
and
mov
mov
add
movsb
xchg
mov
add
in
in
fadds
add
push
jns
aam
dec
inc
sbb
inc
jne
scas
or
sti
and
push
popa
arpl
adc
inc
lds
push
cmp
jge
addr16
orl
call
dec
pushf
cmp
and
pushf
xor
jg
jmp
jbe
and
jmp
adc
aad
fisubrs
sbb
sahf
push
adc
adc
push
sbb
mov
mov
enter
pushl
pushf
call
lea
ja
pushf
lea
jb
cmc
test
call
not
stos
call
pushf
add
pusha
cmp
movb
lea
jb
pushf
cmp
pusha
pusha
jmp
lea
jne
pusha
call
inc
in
mov
push
sbb
jge
mov
mov
xor
cmp
aam
push
mov
push
lock
test
addl
cwtl
bswap
cmp
sbb
outsl
loope
and
and
call
stc
dec
sbb
adc
negl
pop
mov
adc
loope
loope
stc
fistl
add
in
pminub
adc
mov
sbb
test
inc
cmovg
movl
lret
out
sbb
mul
cmp
or
lret
dec
imul
add
add
in
or
jmp
fldt
sarl
dec
pop
stc
dec
mov
dec
shll
pop
popf
fidivrl
dec
das
cwtl
out
sbb
cmpsb
xchg
sti
inc
sub
inc
ja
repz
or
mov
push
jge
xor
push
lds
scas
scas
xchg
icebp
rcl
push
xor
inc
dec
push
in
fsts
and
pop
push
fstpl
int3
mov
sbb
pop
andl
pop
cwtl
fsts
sub
add
je
and
dec
es
scas
into
imul
js
nop
or
mov
jmp
fnstsw
fcmove
data16
mov
and
addr16
fistps
in
sti
xor
icebp
push
xchg
or
inc
rcll
jmp
subl
fisubrl
fistpll
ficompl
fucomip
pop
lcall
scas
pop
scas
mov
in
jmp
jp
jnp
lcall
cmc
lcall
sub
inc
or
adc
lods
jns
ret
into
dec
pop
in
arpl
inc
inc
mov
adc
out
bound
or
dec
adc
dec
cvttps2pi
ljmp
bswap
or
jp
test
dec
or
dec
push
sbb
jno
mov
xor
cmp
add
call
sub
mov
jp
pushf
add
and
pop
or
mov
push
jg
divl
push
repnz
in
add
mov
enter
pop
gs
dec
dec
das
sub
andb
sub
sbb
cmpsl
test
ret
scas
call
daa
cli
mov
je
outsl
call
scas
or
jne
and
mov
std
dec
mov
stc
ret
mov
enter
out
cld
and
or
lret
call
xchg
jb
clc
cwtl
sti
sbb
xchg
jae
negl
lret
mov
pop
fwait
fwait
and
push
xchg
jae
xchg
push
mov
jge
dec
cmp
clc
pop
xchg
ss
adc
dec
in
bound
hlt
push
mov
stos
cmpsb
inc
sub
xor
out
leave
jp
mov
stos
into
dec
imul
lds
inc
mov
or
mov
add
in
out
sub
jl
push
cmp
or
out
mov
insl
enter
xor
inc
jmp
in
inc
mov
enter
pop
jl
pop
sbb
or
insl
and
gs
imul
push
jne
gs
ret
data16
push
add
iret
jbe
mov
push
repnz
pop
repz
pop
xchg
pop
pop
xchg
stos
xorb
sbb
and
pop
imul
xchg
scas
add
cmp
loope
adc
out
push
add
pop
mov
sbb
sbb
adc
dec
mov
jnp
jg
es
cmp
data16
sahf
pushl
sbb
or
fdivl
fdivrs
add
decb
inc
add
cld
loope
sbb
pop
repnz
sahf
decl
mov
pop
pop
ficoms
in
add
xor
and
add
dec
sub
dec
cwtl
ret
insb
sub
fcmovne
jecxz
xchg
cmpsl
push
sbb
cltd
inc
jl
nop
gs
lret
scas
sbb
call
jle
sub
cld
in
rorl
jne
inc
sbb
xchg
mov
mov
push
gs
jmp
push
adc
adc
pushf
rclb
xor
sbb
mov
or
addr16
sub
inc
es
sub
stos
addb
fisubrl
xor
jmp
xlat
sbb
leavew
cmc
push
pop
mov
lock
push
cld
jmp
inc
cli
jmp
jmp
push
or
subl
sub
daa
repnz
sub
and
sub
mov
sbb
addr16
and
fs
jbe
bswap
bswap
bswap
mov
btc
jae
add
movzbl
clc
lea
mov
cmp
sub
add
ror
shl
rcr
movl
shld
mov
cmp
cmp
pushf
call
sbb
test
in
push
or
loopne
push
out
gs
add
inc
push
add
pop
jae
pop
jmp
iret
pop
imul
jmp
mov
inc
and
mov
push
mov
fcomps
out
shrl
mov
pop
icebp
jmp
ss
enter
out
xchg
mov
xchg
sbb
mov
or
mov
dec
push
daa
xor
sar
dec
clc
and
mov
mov
sbb
leave
mov
out
addr16
push
ljmp
and
popfw
pushf
inc
call
test
mov
das
out
arpl
aam
subw
mov
fwait
mov
shlb
push
inc
data16
pop
dec
cmpsb
adc
rclb
push
cwtl
mov
fistpl
lock
mov
cmp
iret
or
inc
xor
add
mov
cmp
push
cld
outsl
mov
cmc
sub
inc
xchg
cmp
leave
mov
mov
push
jp
xchg
push
popa
mov
mov
and
mov
fistpl
push
sbb
sbb
movsb
movsl
int3
sbb
mov
movsb
icebp
or
rorb
mov
sbb
inc
mov
das
sub
es
test
push
or
lret
fnstsw
sbb
push
rcrb
lea
or
fstpl
lahf
loopne
mov
in
sbb
es
push
stc
mov
push
cmp
daa
add
fimull
pop
mov
mov
inc
xchg
jmp
add
pop
jae
sbb
pushf
nop
sbb
pushl
mov
add
fs
xchg
movl
sub
lcall
xchg
push
outsl
imul
mov
int
leave
stos
jge
nopl
fcomps
mov
movsb
sbb
add
inc
loop
pop
sbb
mov
mov
call
sbb
in
insl
rorl
sbb
jae
test
dec
lods
jecxz
adc
mov
lahf
xchg
mov
and
push
add
out
ljmp
ds
mov
xor
sbb
rclb
mov
jae
cmpsl
xchg
ds
mov
and
jne
xchg
jp
sbb
shrl
mov
cmc
loope
sbb
xchg
leave
adc
js
std
mov
or
lahf
gs
sbb
inc
scas
cld
xchg
mov
xchg
in
cld
adc
insl
aam
int
imul
and
stos
loopne
mov
sub
sbb
mov
sub
sbb
or
sbb
sub
sbb
jae
in
insb
fistps
scas
movsl
xor
loope
mov
cmp
cmp
filds
and
sbb
js
outsb
in
dec
and
sbb
jmp
pop
or
icebp
and
out
sbb
sub
test
or
pop
arpl
mov
test
jbe
fimull
dec
sbb
repnz
sbb
shll
hlt
popf
jl
lret
lods
sbb
or
aaa
std
sbb
and
in
xor
lock
shrb
das
push
outsl
sbb
bound
adc
imul
scas
inc
mov
out
fistl
adc
ljmp
lods
push
sub
scas
add
cmp
and
jbe
cmp
and
add
xchg
add
dec
mov
lahf
enter
sbbb
pop
ds
pop
adc
push
mov
mov
add
call
jecxz
in
jae
aad
mov
sbb
jo
sub
jne
sub
and
test
push
jb
add
sti
sbb
xchg
push
sbb
dec
add
fwait
sbb
rol
mov
movsl
mov
ficoml
or
decl
mov
adcb
or
and
push
out
jo
sbb
xor
dec
and
ss
lods
add
add
mov
push
jae
leave
mov
data16
push
mov
lret
pop
inc
cmpsb
sbb
mov
mov
stos
sbb
pop
scas
cmp
jle
adc
mov
sahf
xor
dec
jle
stos
pushf
push
xchg
push
sbb
add
daa
push
ficoms
inc
inc
sahf
sbb
xor
push
sbb
loope
sbb
sbb
mov
movhps
js
pop
out
push
push
std
mov
mov
je
push
popa
les
dec
inc
xor
jae
sbb
shr
mov
sbb
xor
enter
push
mov
dec
sbb
nop
rolb
sbb
or
push
arpl
in
sbb
stos
clc
add
test
sbb
in
movsl
xchg
sbb
insb
insl
push
jmp
push
js
dec
mov
mov
mov
cmp
and
and
sar
mov
fcomps
mov
testl
jnp
sbb
dec
pop
pushw
ljmp
pushf
add
and
scas
push
xor
pop
and
sbb
std
mov
jbe
imul
sbb
mov
pop
call
imul
leave
cmp
inc
ret
mov
mov
in
pop
jno
inc
sbb
cltd
leave
jge
sbb
stos
fmul
movb
xchg
xchg
data16
sbb
rorl
add
pop
aas
jae
mov
inc
cmp
es
mov
mov
sub
ja
xchg
repnz
and
xor
cmpsb
cmp
mov
xchg
cmc
in
cmp
sbb
sub
xor
sub
sub
sbb
mov
cli
bound
dec
mov
pop
jnp
push
in
lods
out
cli
jbe
pop
rclb
push
mov
mov
sahf
sbb
enter
xchg
or
fistpll
and
icebp
mov
imul
xchg
cmpsb
clc
push
cmpsl
jl
and
mov
cld
lea
aaa
xchg
mov
imulb
pop
cwtl
loop
sbb
push
lea
stc
inc
cmp
lds
xchg
cmc
mov
lods
mov
imull
xchg
rclb
and
adc
xlat
sbb
int3
push
push
sbb
or
sub
pop
sbb
sbb
mov
test
adc
mov
popa
out
pop
jle
fdivr
xlat
outsl
adc
inc
out
imul
dec
fsts
and
or
inc
and
sbb
in
out
mov
loopne
pop
lods
out
pop
push
inc
std
call
add
fxch
cmp
sbb
int3
ret
inc
popf
inc
jge
in
out
mov
cmp
sbb
rorl
sbb
adcb
fsubp
sbb
pop
or
fldt
stc
pop
adc
jnp
enter
test
dec
loope
pop
dec
mov
rdpmc
mov
adc
sbb
pop
xor
cmp
sbb
nop
add
jmp
add
sbb
fstl
cmc
popf
clc
inc
sbb
stos
dec
fsubrs
out
jmp
sub
popf
dec
cli
leave
and
into
adc
call
xchg
pushl
sbb
dec
fwait
jl
cltd
rcll
xor
mov
sbb
cmp
xor
sub
or
and
hlt
out
sbb
js
xchg
jnp
jae
ss
pop
sbb
mov
in
adc
mov
and
pushf
outsl
sbb
mov
cmp
jnp
dec
cmc
push
rcll
insb
cli
aad
jg
add
inc
stc
fisubrs
jl
xchg
jmp
sbb
sbb
push
xchg
ficompl
jmp
push
scas
mov
test
push
push
sbb
cmp
push
push
jns
xchg
cmpsb
test
jecxz
enter
pop
clc
sub
jle
push
lds
mov
sbb
xchg
sbb
xor
fcomps
clc
xor
faddl
push
dec
lea
push
push
fsubrs
mov
pop
insw
stc
lock
negl
mov
dec
xor
push
dec
cwtl
inc
and
loopne
jo
mov
or
mov
sbb
fwait
mov
xor
shrl
lods
add
mov
adc
sbb
enter
mov
inc
sbb
add
sub
sbb
sbb
push
jp
sbb
adc
jnp
rorb
insl
rcll
sbb
outsl
lea
pusha
xchg
imul
sbb
fmull
mov
ds
mov
addl
dec
gs
data16
xchg
sbb
push
int
cs
dec
pop
inc
mov
mov
cmp
pop
mov
mov
nop
sub
out
fidivs
adc
insb
fwait
cmp
mov
pop
jle
es
xchg
and
loop
hlt
push
cmc
xchg
sbb
jmp
iret
push
rcr
sbb
mov
mov
adc
sbb
sahf
roll
imul
jns
push
popf
cmp
je
push
add
jl
iret
rolb
stc
std
out
add
sub
stc
repz
or
sub
in
adc
mov
xor
fucomp
pop
in
test
sbb
jo
adc
mov
push
iret
sti
loope
mov
bndstx
icebp
mov
push
xchg
lcall
cwtl
clc
push
push
sbb
and
push
sub
adc
lret
sub
xlat
imulb
or
repnz
ret
dec
jge
push
sbb
sarb
movl
hlt
addr16
loope
sbb
xchg
mov
mov
pop
push
in
adc
loopne
sbb
jge
dec
xor
sbb
pop
xchg
lret
mov
outsl
and
ret
push
mov
sbb
sub
scas
pop
sbb
or
inc
nop
ror
mov
push
incb
lods
mov
aas
xchg
xchg
fbld
int
jae
push
lods
sbb
sub
pop
jmp
xor
dec
push
adc
inc
xor
imul
bound
dec
add
or
popf
lea
xchg
test
lock
inc
adc
icebp
sti
sbb
push
pop
or
sub
test
outsl
in
jl
mov
daa
sarl
loope
push
ret
and
inc
sbb
es
mov
into
sbb
add
jb
hlt
and
jle
out
xchg
dec
sbb
dec
sahf
mov
jnp
pop
pop
and
outsl
xor
xchg
enter
and
aaa
mov
xor
loope
cmp
dec
pushf
fistl
sbb
cmpsl
sbb
loope
jbe
pop
mov
sbb
leave
lea
les
xlat
adc
and
ljmp
xchg
adc
mov
das
xchg
sub
sbb
push
ja
shll
test
add
sbb
sub
lahf
test
sbb
sahf
jae
push
sbb
cmp
dec
lds
test
jnp
fs
inc
push
push
movsl
repz
andb
push
shr
mov
divb
and
xchg
adc
sbb
ljmp
xlat
and
mov
les
xor
xchg
notb
cmpsb
xchg
mov
fs
mov
out
rcrl
jno
ret
add
mov
push
rolb
push
in
sti
adc
rclb
sbb
dec
pop
adc
ficompl
adc
loope
push
and
add
out
mov
dec
mov
fcomps
out
cmp
mov
rcrl
pop
sbb
ret
push
test
sbb
test
mov
mov
push
dec
addr16
inc
sub
jecxz
loope
xchg
xchg
push
ret
jo
push
sbbl
ds
enter
loope
xor
addr16
cmpsl
dec
cmp
imul
aas
js
sbb
sbb
add
lcall
inc
xor
jns
jmp
add
cld
adc
pop
push
and
or
jp
dec
push
aam
inc
pushf
sbb
je
inc
dec
pop
lahf
cmp
mov
mov
adc
or
or
imul
cmpsl
xchg
sbb
outsl
inc
dec
adc
adc
loopne
sbb
orb
ret
pop
push
dec
scas
xchg
pop
sbb
out
or
rcrl
int3
stc
cmp
mov
mov
sahf
jns
and
sbb
adc
rcr
repnz
xchg
iret
mov
faddl
js
ljmp
int3
divb
sbb
popa
sub
cli
dec
xchg
cld
add
in
popf
cmp
daa
fiadds
rclb
lods
scas
push
mov
stc
ljmp
or
jge
or
mov
nop
sub
lcall
jo
das
iret
sub
cmc
add
mov
mov
sbb
loopne
xchg
push
xor
mov
push
std
push
nop
insb
sbb
or
iret
dec
adc
adc
arpl
stos
jae
jo
test
add
daa
fcoms
dec
push
jne
stc
cmp
jbe
push
imul
mov
inc
xor
pop
pextrw
push
xchg
inc
fmuls
rcr
and
call
adc
nop
jp
stc
notl
add
push
jmp
call
cmp
push
sbb
out
pop
add
ds
or
lock
lods
push
add
sbb
inc
out
movsl
sbb
cmovns
mov
imul
cmp
inc
sbb
mov
ljmp
xor
js
add
jns
xchg
sub
adc
mov
popa
loopne
dec
inc
mov
and
fstps
xchg
sbb
out
xchg
popa
leave
ds
xchg
negl
adc
jne
mov
jmp
cld
scas
jb
mov
sub
and
jnp
add
jle
mov
in
pop
push
push
mov
les
pop
or
pop
call
or
push
mov
sub
push
push
rcll
sbb
or
push
sbb
daa
in
jnp
int3
loope
add
pop
sub
imul
push
mov
repnz
jno
scas
or
bnd
xchg
cltd
jnp
xor
mov
loope
ficomps
push
aas
mov
xchg
insl
sbb
jmp
lret
icebp
or
enter
dec
and
jmp
popf
js
push
pop
fsubrp
jo
xor
cli
imul
negb
mov
pushf
shlb
sbb
sti
cmp
lds
es
push
jns
bndldx
les
cmpsb
or
adc
mov
xor
loope
adc
data16
push
sbb
addr16
pop
sahf
sbbl
adc
pop
mov
fstpl
pop
jge
dec
mov
int
movsb
add
pop
rcl
scas
inc
or
arpl
fiaddl
movsb
loopne
jbe
insb
push
ret
notl
or
ja
sbb
fdiv
xlat
fsubrs
fnstsw
adc
ret
in
xor
xchg
adc
sbb
outsb
gs
jge
test
adc
loope
sbb
shl
sbb
add
mov
cs
rcll
cmp
imul
std
fistpl
jg
sbb
or
addr16
sbb
xor
and
xchg
hlt
inc
push
sbb
push
out
adc
imulb
cwtl
fwait
dec
sbb
jb
inc
cmpsb
adc
push
subb
push
in
rcrl
add
fwait
addr16
fnstenv
xchg
adc
repz
popfw
xchg
jle
sbb
sbb
jns
jge
xchg
aas
sbb
adc
pop
sbb
xchg
xor
pop
inc
ja
mov
sbbl
sbb
cltd
jbe
test
in
dec
xchg
push
clc
aad
jns
push
or
scas
cwtl
mov
xlat
mov
and
jns
xchg
bnd
or
sub
mov
enter
sub
pop
jmp
jge
pusha
imul
mov
mov
ja
cwtl
and
notb
pop
rolb
sbb
addl
jnp
add
mov
mov
imul
sbb
dec
sbb
and
mov
sahf
insl
in
pop
sub
test
push
fsubr
adc
outsb
lahf
ret
xchg
mov
dec
xchg
loope
cmp
out
inc
test
pop
and
and
pop
lock
cli
xchg
jb
test
sbb
mov
scas
push
xor
pop
or
jbe
test
test
inc
cltd
sbb
stos
mov
add
std
clc
fwait
xor
push
lock
adc
mov
sbb
bound
jp
imul
push
pop
adc
push
sbb
mov
pop
jg
sbb
add
push
sub
adc
ret
inc
add
sbb
jecxz
and
cltd
pop
into
icebp
cmpsb
push
popl
pop
adc
sub
mov
bound
in
pop
push
aas
fnsave
dec
and
fs
stos
repz
mov
test
loop
sbb
inc
xchg
adc
lret
in
xlat
push
rcl
loope
jae
adc
mov
dec
sub
sbb
int
push
add
sbbl
cld
nop
fwait
sub
xchg
sbb
mov
ss
and
and
xchg
mov
xchg
scas
and
xchg
mov
fbstp
sbb
movl
xchg
js
xchg
add
inc
mov
sbb
push
push
inc
mov
pushl
lret
nop
add
outsl
imul
outsb
hlt
sbb
lahf
jb
dec
ror
fwait
sarb
test
sbb
sbb
mov
lea
lds
dec
xlat
addb
xchg
ja
xchg
add
jb
inc
lods
mov
sbb
sbb
mov
mov
adc
adc
in
jmp
sbb
fstl
mov
push
insl
xor
pop
pop
dec
or
push
and
out
sbb
push
movsl
mov
sbb
sbbl
mov
sti
mov
mov
mov
sbb
hlt
cmp
fs
sbb
cmpsb
lret
pop
mov
ss
sbb
jmp
jo
cmp
cltd
push
push
inc
add
lret
push
andl
sub
je
push
jnp
sbb
ss
cmpsl
lcall
cmp
xor
fs
andb
push
sub
mov
rcrl
inc
ss
movsb
mov
push
fwait
push
jb
pop
shr
repz
sbb
in
int3
sub
pop
rcr
scas
sub
aam
sbb
rorl
mov
xchg
push
mov
imul
inc
lock
cmp
fistpll
lods
cvttps2pi
imul
mov
jns
and
leave
andl
mov
ds
sbb
sbb
xor
cmp
data16
fsincos
inc
imul
xchg
js
add
add
lods
push
pop
sub
sbb
test
addr16
mov
stos
nop
cmp
inc
loope
xchg
adc
jnp
test
sbb
ljmp
and
ljmp
adc
dec
xor
sub
mov
pop
pop
push
cltd
sbb
adc
mov
sbb
test
bound
loopne
aas
jle
xchg
push
sahf
mov
out
jmp
enter
jae
xlat
test
push
mov
push
lock
mov
pop
daa
push
xchg
and
stos
sub
inc
enter
scas
sbb
in
int
jne
inc
xchg
or
outsl
xor
xchg
test
pop
arpl
mov
sbb
or
adc
jl
adc
cmp
xchg
xchg
xchg
fistpll
cld
sbb
xchg
leave
and
mov
push
sbb
jno
loope
push
in
cltd
in
sub
cmp
nop
or
sbb
popf
ds
and
sbb
jbe
dec
sbb
inc
jb
sbb
jecxz
push
stos
fdiv
sti
sbb
out
sbb
jnp
mov
or
mov
dec
call
pop
mov
test
popf
cmp
mov
xchg
and
or
sbb
add
lret
call
shll
mov
mov
cmp
sub
fisttpll
notb
mov
push
push
gs
sbb
cltd
inc
mov
push
inc
jns
sub
dec
pop
adc
push
jge
cmp
sub
add
sbb
mov
popf
icebp
pop
ret
scas
xchg
dec
xchg
nop
sub
sbb
in
cwtl
dec
in
popf
push
add
sub
shrl
lods
fistl
jge
sti
dec
cs
inc
ja
rcll
pop
sbb
int
loope
repz
adc
xchg
shlb
mov
stos
rcrb
mov
adcl
test
sub
lahf
add
icebp
push
ss
repz
add
push
es
out
test
pop
jnp
cld
data16
xor
aam
stc
xchg
mov
bound
jne
mov
xchg
jl
mov
mov
sbb
adc
dec
lahf
imul
cmp
loop
push
and
enter
sbb
and
cmp
rcrl
and
mov
hlt
sub
jo
lds
xchg
or
test
push
aaa
sub
mov
loopne
mov
xor
pop
sbb
pop
pop
inc
sti
mov
jbe
add
cmp
jle
jmp
jp
leave
jge
sbb
mov
mov
mov
mov
pusha
sbb
add
daa
sbb
pop
clc
in
ret
sub
das
test
gs
xchg
or
jmp
movsl
cmp
les
jp
lcall
mov
repz
cs
into
decl
cmp
inc
sbb
cmp
pop
xlat
out
and
out
push
lret
or
mov
mov
inc
std
sbb
or
unpcklps
push
adc
mov
xchg
xchg
mov
xchg
pop
sbb
fdivl
mov
fidivrs
pop
jnp
jb
push
inc
cmp
outsb
andl
out
add
rcrl
test
stc
mov
xchg
push
mov
sbb
jecxz
jl
add
or
cmp
sub
mov
and
ljmp
sub
movsb
pop
add
ret
jno
fs
hlt
sbb
push
loope
adc
cld
pop
lcall
push
fistpl
and
jae
adc
lahf
mov
sbb
xchg
shlb
add
sbb
jbe
sub
adc
mov
dec
aas
sub
mov
icebp
inc
mov
add
das
imul
sbb
jae
scas
sbb
inc
mov
sbb
test
rorb
sbb
adc
jmp
cmp
insb
push
or
lret
mov
or
ret
aaa
adc
mov
sarl
in
jo
sbb
inc
out
mov
add
shr
outsl
fcmovnu
les
call
push
xchg
sbb
iret
add
xchg
cmp
in
xor
cmp
sbb
test
cmpsl
dec
or
shlb
cmpsb
or
add
add
loope
jne
xchg
mov
dec
shll
lahf
cli
xor
loope
iret
or
leave
mov
loope
jmp
push
fdivp
or
add
sbb
inc
push
mov
ficompl
sub
jl
ret
sub
fidivs
pop
test
outsl
push
adc
xor
mov
cmp
popa
add
push
sbb
xor
and
xchg
lcall
and
popa
jmp
mov
popf
mov
cmp
test
sti
fldcw
inc
ds
dec
add
mov
sbb
sbb
addr16
stc
xchg
push
adc
inc
lret
enter
xor
pop
sbb
scas
test
xor
cld
add
bnd
cmpsl
ljmp
fbstp
jnp
sbb
cmp
mov
sbb
jno
mov
cmpsl
xorb
out
inc
and
add
add
imulb
enter
int3
hlt
jo
add
sbb
adc
mov
cmp
cltd
or
sbb
into
jae
test
sbb
fsubrs
or
mov
iret
ret
bound
test
adc
xchg
sub
lds
xchg
sbb
js
lods
xor
push
adc
jle
sbb
sbb
jge
add
xchg
shr
xchg
dec
sbb
or
pop
jae
add
inc
loope
sbb
xor
ss
cmp
loop
sbb
jbe
add
push
cld
sbb
js
add
or
xchg
xchg
pop
add
mov
push
inc
enter
jbe
fdivl
adc
sahf
add
add
mov
pop
inc
fdivl
jge
test
sbb
push
xlat
pop
sbb
scas
inc
addr16
sbb
dec
and
pop
pop
inc
jne
imul
dec
sbb
ret
pop
xor
leave
scas
sti
pop
inc
and
out
push
cmpsl
cmp
outsb
cs
xchg
test
test
repnz
adc
inc
stc
mov
adc
push
dec
xchg
fists
adc
das
adcl
jae
pop
adc
dec
inc
int3
push
rep
mov
jb
adc
in
adc
adc
les
repz
fsubs
outsl
andl
mov
xchg
push
shl
movb
hlt
sbb
lds
xor
std
test
mov
cmp
push
mov
popf
sbb
pop
inc
sub
inc
xor
mov
movsb
cmpb
icebp
jg
cmp
adc
sbb
in
test
sbb
hlt
dec
jno
mov
inc
xor
outsl
xchg
or
push
xor
jg
push
sub
cmpsb
aaa
cltd
add
mov
xchg
in
push
jo
testl
lcall
in
gs
xchg
stos
push
cld
ja
adc
xor
or
pavgw
jo
xor
ffreep
call
vmovlpd
les
adc
stos
sbb
pop
sub
call
rol
fmull
adc
sbb
adc
movsb
jp
lret
inc
mov
inc
sbb
loope
xchg
fsubr
sbb
dec
jmp
mov
sbb
pusha
jne
stos
inc
popa
arpl
lahf
outsb
jle
xor
adc
add
out
push
ja
pop
testl
bound
shrb
stc
test
sbb
pop
lock
aad
sbb
fidivrs
cmp
scas
mov
stc
adc
xchg
xchg
repz
jne
xor
sub
sub
xlat
rcl
sbb
subl
std
fsubrl
ficomps
xchg
pushf
cli
fstps
xchg
imul
shlb
dec
and
fists
xchg
das
sbb
les
sbb
adc
dec
mov
scas
cmp
cmp
stos
or
and
aas
sbb
orl
aaa
adc
cmp
jo
sbb
pop
iret
out
dec
and
xchg
imul
cmp
popa
mov
sbb
mov
aad
adc
inc
aam
adc
movb
in
loopne
test
xchg
sbb
jge
loope
push
xlat
outsl
lret
sbb
or
add
sbb
ljmp
sub
lret
sbb
xchg
fwait
adc
mov
mov
xor
int
sbb
inc
xchg
and
int3
sbb
cs
adc
es
in
pop
rclb
mov
sbb
push
sbb
jp
or
inc
jle
push
sbb
cmpb
sbb
and
sbb
pop
sbb
sbb
ret
mov
shl
xor
addb
pop
inc
adc
insb
js
add
into
dec
adc
push
inc
mov
mov
das
mov
cld
push
sti
inc
scas
adc
cmp
xchg
call
and
inc
pop
int3
jnp
adc
sbb
mov
in
adc
adc
divb
inc
fcomps
xchg
fwait
pusha
adc
test
fstl
sbb
push
scas
mov
in
adc
lcall
and
idivl
inc
sbb
adc
push
mov
sbb
pusha
fildl
sbb
fists
mov
adc
or
std
push
adc
or
lret
sahf
test
inc
pushf
lds
in
xchg
movsl
in
adc
mov
sub
ds
and
pop
pause
in
adc
sbb
mov
test
sbb
sbb
arpl
dec
cmpsb
repnz
jae
aad
inc
sbb
out
daa
sbbb
sub
xor
mov
and
push
in
rcrl
comiss
xchg
lea
rcr
sbb
rcr
sbb
pop
iret
call
pop
inc
cmc
shlb
sub
or
in
fldl
xchg
adc
fwait
not
loope
insb
mov
inc
inc
push
sbb
adc
sub
jp
inc
jae
jmp
scas
add
out
xor
ret
cmpsl
sbb
add
btr
outsb
mov
jp
cmp
icebp
lret
xor
xchg
cmp
adc
sbb
or
loope
mov
sub
es
sbb
outsl
movsb
adc
icebp
jns
insb
bound
sub
xor
jnp
dec
mov
fsubl
aas
int3
ss
and
adc
adc
sbb
dec
scas
xchg
xchg
sbb
dec
shll
inc
add
and
sub
ds
adc
bnd
sbb
rolb
mov
add
mov
loope
pop
leave
xchg
clc
gs
cmp
repz
sbb
popf
loop
add
jl
xchg
lret
inc
aaa
xchg
in
mov
cli
sbb
cmp
sbb
out
push
in
xchg
enter
xchg
xor
insl
inc
push
repnz
aas
fistpl
mov
movsl
xlat
mov
test
adc
mov
push
mov
and
cld
cs
out
mulb
sti
imul
mov
and
mov
mov
sbb
ret
aas
sbb
add
push
mov
cmp
rcrl
clc
push
mov
mov
push
sti
cld
mov
subb
sbb
rcll
fldl
jge
xchg
test
icebp
decl
or
mov
loope
aam
cli
ficoml
int3
adc
cltd
sbb
mov
mov
mov
cs
mov
xchg
pop
xchg
les
test
imul
andb
push
pop
push
gs
mov
scas
xor
xor
jb
arpl
int3
xchg
mov
push
push
pop
test
push
fadd
pop
fwait
push
shrl
daa
push
xchg
addr16
sbb
popa
dec
xor
jns
xchg
cmpsb
mov
fwait
bound
push
or
mov
and
adc
test
pop
movsb
and
nop
inc
mov
xchg
xor
test
test
mov
xchg
fwait
or
mov
in
enter
loope
ret
cmpsl
loope
or
xchg
je
push
adc
ljmp
sbb
sbb
sbb
shlb
sub
repnz
add
cmp
xor
mov
daa
xlat
push
push
data16
loopne
jg
int3
dec
sbb
cmpsb
dec
push
xorb
addr16
es
into
lahf
ljmp
mov
cli
add
jle
push
adc
test
dec
pop
aaa
pushf
add
lods
loop
fists
jne
loop
cmp
mov
sbb
xchg
cs
movsb
or
dec
push
inc
inc
sub
adc
inc
xor
lea
xchg
cmp
fimull
or
aad
stc
cmp
and
push
xor
sbb
mov
out
add
hlt
or
out
sbb
pop
insl
leave
cmp
inc
mov
push
mov
testb
adc
incl
inc
sbb
fstps
xchg
mov
pop
sub
jecxz
dec
scas
mov
adc
icebp
repnz
incl
nop
imul
sbb
inc
test
ret
adc
push
xchg
xlat
aas
pop
cld
xor
sbb
xor
and
mov
adc
mov
jne
and
sbb
push
adc
push
mov
dec
sub
shlb
repnz
inc
ret
sbb
xor
jo
fldt
adc
rcl
or
loope
xor
loop
push
int3
fwait
lahf
adc
sub
in
jg
cwtl
test
jb
sbb
test
and
dec
add
pusha
mov
push
addl
test
jns
adc
mov
jl
jle
test
sub
popa
add
pop
adc
xor
negl
jne
pop
test
nop
outsw
sarl
lret
inc
mov
rorl
out
sbb
xor
sbb
xchg
mov
cwtl
push
and
push
aaa
shr
dec
cmp
int3
mov
aas
sbb
loope
cld
jne
and
cwtl
scas
sbb
and
lock
cmp
in
sub
push
xor
rolb
adc
xchg
sbb
sbb
and
mov
jno
adc
out
clc
xchg
test
test
and
movsb
or
ds
pop
adc
cmp
pusha
cmpb
lods
sbb
out
inc
xor
push
sbb
aas
xchg
ret
movsb
jb
shr
mov
aad
sbb
mov
movsb
out
movsl
fwait
ret
add
add
lock
fstl
subb
inc
jmp
sub
jbe
out
sbb
cmp
stos
pusha
jnp
shl
stos
in
sahf
lcall
dec
mov
mov
clc
xor
jle
push
mov
push
cwtl
fwait
mov
sbb
mov
or
out
test
sbb
mov
dec
sbb
lcall
cmp
adc
leave
int
add
sub
mov
sarl
shrb
jmp
push
sbb
lea
pushf
stc
push
sbb
mov
xor
or
adc
and
idivb
jb
in
adc
or
icebp
cmp
adc
add
repnz
jge
sbb
adc
shlb
cwtl
sarl
jge
push
adcl
xchg
sub
adc
adc
adc
aad
lock
adcl
out
or
dec
pop
out
bound
jbe
in
fdivr
adcb
dec
cmp
mov
lcall
das
aad
mov
add
jle
pop
and
sbb
ja
sbb
mov
stos
test
mov
push
sub
andl
xchg
push
sbb
xor
adc
cmp
sub
jmp
jl
pop
movsl
loopne
sub
push
push
loopne
sbb
inc
cwtl
int
movsl
sbb
aam
xchg
or
fcoml
rcll
into
sub
and
call
mov
out
hlt
stc
push
sti
mov
das
lret
jno
dec
movsl
mov
xchg
loope
cmpl
sbb
rcrl
xchg
into
or
cmp
cli
xor
sbb
stc
dec
add
lcall
add
imul
jbe
sbb
mov
xor
push
in
scas
and
push
aaa
cmp
inc
imul
sbb
int3
push
inc
sub
fistpl
pop
push
imul
mov
pop
sub
test
or
arpl
loop
jmp
sbb
aaa
test
sbb
mov
jl
mov
out
push
xchg
icebp
sbb
cwtl
inc
push
adc
pop
lds
cmp
cmpsl
xchg
add
aaa
aas
xor
lcall
je
push
adc
fdivrp
orb
sbb
xor
mov
adc
xor
xor
add
out
iret
jg
sbb
stc
fwait
test
sbb
rclb
cmp
and
and
je
mov
push
scas
cmc
adc
mov
jbe
and
fistpl
inc
in
push
insb
inc
mov
and
dec
adc
ficoms
pop
enter
pop
fwait
or
mov
sub
cmc
repnz
pop
sbb
xchg
test
in
xchg
std
sbb
sbb
add
mov
and
rorl
push
cld
xor
sub
push
add
lods
xchg
mov
cmp
clc
push
nop
loope
mov
cmc
addr16
xchg
sbb
add
xor
bound
xchg
lods
inc
dec
sbb
and
rclb
insb
lea
xchg
mov
pop
pop
retw
xchg
mov
icebp
in
jle
xchg
dec
xor
sbb
in
int
sub
imul
imul
fs
cltd
pop
out
fstpl
mov
mov
mov
lcall
and
fsubrl
xchg
cmp
or
adc
mov
jns
or
mov
xor
cwtl
lea
dec
out
xor
adc
insl
mov
lods
xchg
jns
add
xchg
sbb
icebp
sub
hlt
sbb
and
loope
pop
rclb
pop
mov
xchg
adc
add
add
xchg
sarb
xchg
arpl
test
idivl
call
pop
sub
pop
pop
sbb
lcall
sbb
test
or
jae
aaa
mov
xchg
inc
jmp
adc
sbb
icebp
inc
sbb
sbb
mov
out
sbb
mulb
aaa
call
scas
sub
mov
divl
xchg
pop
pushf
or
push
neg
add
push
sarl
clc
mov
stc
fwait
mov
xchg
and
js
xor
mov
sbb
leave
adc
dec
insb
fidivl
adc
push
pop
xor
xor
iret
mov
loop
sbb
cmp
add
out
push
xor
push
es
or
add
lock
push
dec
stos
pop
mov
bound
mov
adc
sbb
xor
jmp
pushl
push
mov
push
mov
call
mov
push
not
pushf
mov
pushl
lea
jge
push
push
mov
pushf
jmp
imul
gs
xor
cs
insb
add
lds
pushf
ljmp
xchg
notb
dec
xchg
ret
sti
aam
jecxz
bound
lods
or
out
add
fwait
inc
jle
fiadds
fldl
inc
ja
leave
into
stos
mov
insb
xor
pop
loopne
shll
lret
aam
in
bound
pop
imul
int3
sbb
mov
mov
mov
cmp
shl
in
ret
lock
dec
mov
dec
add
mov
sub
mov
int
xchg
jo
add
mov
or
or
outsl
or
sbbb
push
leave
arpl
jb
mov
jbe
lret
mov
sub
dec
in
dec
mov
stos
push
std
loope
imul
pop
popa
mov
sbb
inc
xchg
mov
jne
addr16
pop
fiaddl
adc
sbb
shrl
push
test
les
pusha
xchg
cmp
not
sub
sub
lcall
push
adc
xchg
pop
fcompl
pop
nop
fstps
push
sbb
aam
add
lea
je
shl
bsf
add
cmp
not
mov
clc
bt
call
adc
lods
mov
stos
xor
xor
shlb
push
push
rolb
sbb
push
jbe
add
jbe
sbb
rolb
adc
cmpsl
mov
pop
dec
jmp
imul
sub
lcall
inc
lea
xor
addr16
pop
les
pop
test
sbb
push
lret
movsw
add
xor
mov
clc
adc
mov
cmp
lret
jp
ja
stc
fsts
mov
stc
cmpsl
push
and
les
cmp
cmp
push
cmp
mov
mov
push
pushf
iret
cmc
sub
or
insl
pop
push
push
and
add
mov
mov
pop
push
in
stc
xor
xor
jp
push
adc
sub
mov
push
iret
les
mov
and
xchg
xchg
sub
outsb
rclb
out
xchg
xchg
mov
pop
lahf
push
adc
scas
adc
pop
push
sbb
fidivs
push
jl
test
stc
das
lds
clc
lahf
cld
pop
adc
inc
sbb
pop
out
mov
xor
imul
repnz
xchg
pop
jno
add
push
or
mov
mov
daa
jp
rcll
pop
daa
jp
mov
rdmsr
inc
call
dec
popa
xor
mov
in
and
push
and
inc
push
stc
or
mov
out
ja
loope
rorl
inc
push
rcrb
cmpsl
mov
das
call
pop
mov
xchg
mov
or
xchg
das
and
xor
rcrb
adc
subl
and
dec
sub
sahf
leave
sub
mov
cli
loop
sub
movaps
cmp
add
es
stos
dec
sahf
in
add
and
daa
imul
shrl
out
pop
adc
loop
scas
in
jae
mov
mov
dec
fiaddl
stos
pop
push
gs
sar
jne
push
sbb
add
fwait
dec
pop
ljmp
subb
push
pop
fwait
popa
mov
inc
push
or
push
insb
or
arpl
push
aas
jnp
fidivs
js
fisttpll
neg
add
inc
cmpsl
or
dec
pusha
adc
shrb
scas
xchg
mov
test
dec
sahf
loop
xor
inc
push
int3
mov
pop
xchg
pop
arpl
bound
jo
scas
jbe
repnz
imul
nop
rcll
aam
adc
sbb
aad
xchg
xchg
sub
sub
dec
es
sub
mov
jo
jp
push
xor
negb
mov
mov
add
dec
xchg
insb
xchg
jl
sbb
jge
icebp
fimuls
xor
xlat
adc
push
push
arpl
and
pop
shr
aad
loope
scas
jb
mov
jae
cmpsb
jle
imul
ret
or
push
inc
dec
or
inc
add
push
arpl
cmp
lock
addb
test
sub
sbb
movsl
arpl
inc
jmp
inc
fdivrl
push
mov
ds
xchg
xlat
jecxz
jmp
inc
stos
or
cs
pop
and
popa
fidivl
or
push
fdivl
xchg
jae
outsb
mov
test
xlat
repz
fmulp
inc
xchg
xor
popf
mov
cmp
sbb
ret
inc
lods
mov
lahf
mov
push
jp
in
sub
sbb
adc
mov
or
push
aad
aas
dec
stc
mov
mov
adc
pop
pop
ja
sbb
dec
jnp
stc
inc
or
lret
mov
ret
push
sbb
mov
inc
data16
jns
inc
cmpsb
dec
scas
dec
sub
dec
daa
dec
lcall
in
jl
or
jne
jmp
je
dec
imul
nop
lret
xlat
sub
xchg
cli
movsb
mov
push
jno
pop
fidivs
sti
adc
pusha
mov
cmpsl
pop
mov
sbb
mov
xor
shll
cli
rolb
in
in
enter
xchg
repnz
xchg
pop
adc
nop
adc
cltd
pop
ficoms
mov
lea
jae
clc
cmp
jmp
sbb
push
rcrb
xchg
rcrb
rcll
les
jmp
or
inc
stc
rcrb
add
xchg
pop
pop
dec
sbb
dec
rcrl
scas
int3
scas
push
jbe
fiaddl
int
aaa
shll
cmpsb
push
inc
std
push
cmp
cld
fcmovne
subl
or
sub
and
lods
lods
gs
mov
cs
out
scas
enter
xchg
sub
pop
lret
mov
fdivrl
push
jle
call
pop
lahf
ficomps
pop
pop
push
push
sbb
ljmp
push
xchg
dec
sarb
jmp
aad
pop
mov
mov
mov
sarl
sbbb
ds
pusha
xchg
xor
sub
lcall
ror
jns
inc
lods
scas
in
faddp
sbb
pop
and
fiadds
mov
mov
mov
sbb
iret
push
push
lret
fdivrl
ljmp
dec
test
test
jno
pop
fsubrl
cwtl
fisttps
nop
rcll
test
pop
push
lods
xchg
xor
xor
mov
push
mov
imul
test
andl
dec
jbe
sbbb
fisubl
rorb
in
ljmp
add
and
ja
shlb
xchg
cli
sbb
fsubp
sahf
mov
fstp
fists
pop
inc
stos
dec
adc
jo
xchg
pop
xor
xor
push
xchg
push
jb
popa
pop
sbb
mov
adc
push
imull
sub
imul
shr
scas
in
test
push
sbb
fs
jne
call
pusha
pusha
lea
je
btr
clc
clc
push
mov
rol
shld
bswap
add
shld
mov
bt
pushl
call
pusha
jmp
pushf
lea
ja
push
inc
pushf
jmp
pop
cld
adc
popa
pushf
xor
mov
in
mov
insb
push
out
dec
test
loopne
adc
lods
loope
pushw
mov
jg
loopne
aam
negb
nop
mov
sbb
loopne
mov
ret
inc
mov
or
cmp
dec
push
or
scas
lea
pushf
cli
pop
add
mov
add
cmp
sbb
pop
sbb
sbb
lods
xchg
fildll
jb
sbb
add
je
outsl
fs
gs
imul
add
ret
lcall
outsb
mov
out
test
inc
push
xor
or
cmp
adc
jp
aas
out
adcb
dec
repz
in
add
dec
push
gs
sub
enter
xor
mov
adc
sbb
pop
dec
movb
pop
jo
rorl
add
jae
mov
es
add
out
pop
sbbl
jl
adc
add
std
cmp
xor
mov
mov
push
sbb
movl
jmp
clc
jmp
xor
jo
jl
xchg
jbe
je
mov
inc
mulps
push
js
dec
nop
cmpsl
inc
shl
fwait
inc
jmp
or
outsl
jno
add
jecxz
ds
inc
cmp
sub
mov
stos
mov
in
xchg
mov
pop
aaa
add
mov
rcrl
mov
fcom
jb
movsl
jmp
lea
ss
and
movsl
popa
stos
jecxz
push
in
ret
out
adc
or
les
insb
pusha
push
mov
push
sbb
add
mov
push
bound
jecxz
or
dec
mov
and
sbb
xchg
add
xor
test
sbb
sahf
icebp
fnsave
and
popa
or
cld
jl
mov
sahf
sub
aaa
push
jl
iret
call
rcl
jle
dec
push
shl
ljmp
xchg
lret
jg
pop
iret
or
or
rcrb
fcomi
mov
repz
out
insb
or
aaa
mov
inc
ret
pop
xor
push
mov
xor
mov
cmp
and
pop
decb
xor
or
imul
pop
and
push
insb
lret
xchg
or
inc
lahf
sub
aas
xchg
les
stos
xorb
xchg
jbe
add
mov
jl
ja
add
fwait
mov
sbb
push
aam
into
adc
pushf
jae
xorl
jno
or
enter
mov
lods
out
leave
add
mov
mov
test
pop
mov
cmp
push
sbb
out
fiadds
add
add
addr16
insb
outsl
jae
dec
gs
mov
mov
xor
adc
mov
jmp
call
stos
ss
and
fildl
inc
repnz
adc
adc
sbb
pop
nop
add
sar
out
in
aad
rolb
ja
mov
dec
popa
fcompl
jg
mov
adc
in
mul
jno
or
in
push
cmpsl
xchg
call
ret
imul
push
test
xchg
lds
inc
popa
push
sbb
cs
pop
inc
push
lock
xlat
add
cmp
mov
cmp
sahf
sahf
hlt
inc
inc
mov
test
btc
cmpsl
mov
push
fwait
shrb
xchg
mov
push
and
idivl
fidivs
stc
mulb
mov
jmp
pop
sbb
add
xlat
jle
cmp
daa
inc
inc
jp
fs
xchg
ds
xlat
mov
pop
imulb
sub
add
cs
arpl
test
xlat
insl
stos
out
jmp
cmpsl
xchg
mov
lds
add
fnstsw
rolb
test
insl
mov
or
push
aas
fstpt
mov
lret
push
out
les
out
xor
mov
sbb
push
jo
loope
stos
adc
and
dec
nop
lea
cmp
add
sub
lret
int3
out
iret
inc
add
xchg
xor
jmp
lret
insb
daa
xrelease
scas
into
ljmp
imul
insl
sub
push
sbb
sub
xchg
bswap
bt
shl
movsbw
mov
cmp
neg
cmp
mov
movb
clc
cmc
call
xor
scas
jno
mov
sub
and
mov
pop
pop
pop
or
mov
mov
repnz
mov
imul
or
femms
daa
xor
mov
jns
call
daa
xor
movsb
or
ret
jge
xchg
and
aaa
adc
call
xchg
xor
fwait
lods
jno
adc
cmp
and
cltd
cmpsb
rolb
inc
test
dec
add
or
sbb
fs
jb
call
test
pushf
movb
lea
je
pusha
sub
mov
pushl
pushf
cmp
cmp
pushf
pushf
pushf
pushl
lea
ja
jmp
neg
sub
shl
pushf
mov
test
clc
pushf
pushf
and
test
cmp
push
cmc
add
movw
lea
jmp
jmp
cld
test
dec
int
ret
mov
push
add
add
dec
js
xor
dec
lcall
das
mov
inc
mov
mov
push
mov
in
inc
adc
outsl
iret
out
pop
clc
mov
mov
push
jno
pop
sbbl
mov
scas
cltd
out
imul
test
pop
out
rolb
in
mov
mov
mov
xlat
or
cmp
dec
das
arpl
sbb
jae
fdivr
mov
or
mov
mov
mov
push
fwait
push
mov
dec
mov
xor
push
mov
mov
out
mov
popa
arpl
mov
sti
shl
in
inc
movsl
xchg
aaa
xchg
adc
sbb
mov
xchg
push
and
fwait
mov
mov
sub
mov
lret
mov
mov
xor
pop
addl
mov
int
sub
enter
imul
out
or
jne
ret
into
call
movb
add
addl
push
pusha
cmp
jmp
lea
jae
pusha
pusha
cmp
movl
push
movw
push
lea
jae
clc
clc
cmc
cmp
jmp
insb
adc
repz
xor
inc
xchg
dec
lods
dec
sub
jmp
push
dec
ss
packssdw
pop
jmp
dec
fs
lret
insl
adc
sarb
sub
jne
push
lds
push
cmp
scas
test
lea
push
in
ja
mov
xlat
xchg
fcomps
stc
popa
aad
js
fucomp
or
sti
pop
mov
dec
jecxz
cmpl
sbb
icebp
repnz
xchg
and
cmc
and
push
jb
mov
aam
inc
pop
call
xchg
and
stc
pop
jne
lcall
sahf
mov
or
sbb
lds
sbb
mov
push
sub
xchg
call
xchg
push
xchg
push
push
sbb
or
mov
sub
cs
popf
ja
dec
stos
inc
test
inc
sti
add
add
mov
pop
dec
push
insb
movsb
cltd
and
add
or
jle
scas
inc
jecxz
lods
push
mov
or
xchg
cmc
lret
or
fwait
lock
or
mov
fsts
or
sub
dec
sahf
aam
gs
rcll
push
cltd
fstl
push
sbb
stc
rolb
add
mov
movb
pushl
ret
push
call
xchg
sbb
mov
ret
test
jno
jg
jge
cld
lahf
cli
sub
fldcw
sub
int
in
stos
ja
popa
push
jle
jge
mov
mov
xor
mov
or
jle
jb
push
mov
aam
fwait
pop
insl
xlat
xchg
push
xchg
fstps
or
hlt
into
push
and
fidivs
mov
ret
in
leave
mov
repz
lods
lods
cmp
lds
dec
scas
cmpsl
mov
dec
lods
mov
sub
fisubrs
xor
cmpsb
sbb
cltd
xor
push
adc
push
pop
int
pop
and
cwtl
rorl
rol
or
stos
rcl
aam
iret
adc
shr
push
and
outsb
inc
mov
jbe
andb
cli
cmp
shl
out
mov
lahf
xor
or
loopne
arpl
and
popa
dec
aad
mov
cvttps2pi
adc
sbb
cmp
pop
and
popa
mov
jmp
xorb
or
inc
inc
push
sbb
xchg
loop
jecxz
loope
jmp
inc
aas
in
fldenv
xor
in
sbb
jne
push
jp
cs
fbld
cltd
pop
psrlq
and
in
insl
movsl
sub
icebp
rorl
fdiv
cmc
push
push
push
lds
jnp
sub
push
sbb
popa
inc
xchg
xchg
pop
fdiv
shll
decb
pop
outsb
ss
dec
cmc
push
push
cs
push
mov
or
out
xor
mov
aaa
divb
clc
mov
mov
mov
cmp
xor
pop
mov
insb
push
das
or
inc
add
push
sbb
fs
call
jmp
frstor
mov
clc
insb
mov
insl
mov
or
mov
into
add
mov
push
cmpsb
pop
mov
ffreep
data16
pop
outsl
scas
lods
push
ss
cmc
movsl
fwait
insb
pop
test
ljmp
pop
xor
push
mov
pop
stos
ret
mov
push
pop
popf
mov
sbb
cld
imul
mov
movsl
mov
and
mov
mov
lock
mov
dec
and
ds
mov
add
ret
push
movb
test
push
sbb
scas
int
out
divb
cli
jmp
insb
xchg
call
mov
inc
ja
icebp
aas
stc
mov
pop
mov
lcall
lret
outsb
iret
enter
push
gs
jl
sub
insl
in
lret
cmp
loope
cltd
mov
jbe
jb
fwait
je
insb
movsl
xchg
aad
ljmp
jmp
scas
rcrl
xor
stos
lea
push
je
aaa
fdivs
xor
push
xchg
pop
cltd
pop
sbb
adc
cmp
stos
mov
mov
push
adc
gs
leave
lcall
leave
sub
mov
testb
in
ret
bound
in
shl
dec
inc
jle
lcall
nopl
or
mov
dec
cmp
sub
scas
out
les
jge
test
pop
test
inc
ss
add
push
push
xchg
push
xchg
rcll
shl
push
adc
test
push
lea
je
shl
rol
add
setg
sub
dec
sub
ror
mov
shr
dec
lea
push
mov
sar
add
xor
ror
test
pusha
add
sub
call
movb
pusha
lea
jae
jmp
mov
jmp
pop
mov
in
jmp
scas
jne
jb
lock
icebp
sbb
cltd
mov
mov
cmc
out
dec
stos
or
call
pop
xchg
aas
sbb
test
or
mov
loopne
push
sbb
adc
inc
sbb
test
dec
xor
clc
push
mov
enter
rcr
fadds
insb
ljmp
mov
cmp
adc
jmp
jnp
loope
inc
or
stos
pushf
sub
sahf
mov
mov
test
mov
jae
dec
mov
movsb
shll
sub
and
sub
adc
adc
scas
adc
in
adc
insb
repnz
stc
add
lcall
movl
data16
mov
mov
dec
fs
cmp
push
jno
pop
aam
jae
mov
call
into
inc
aaa
jecxz
mov
xor
hlt
aad
les
cmp
ss
cmp
mov
dec
mov
sbb
lret
stos
mov
jns
or
pop
cmp
aad
sarl
push
jb
jl
pop
jg
nop
loop
ret
test
in
add
clc
imul
mov
cmp
or
mov
out
push
mov
gs
adc
ljmp
cld
xchg
xchg
add
aad
mov
cmpsb
xchg
shl
xor
stc
cmp
xorb
push
sbb
fs
jb
test
pushf
movb
cmpb
push
pushf
call
clc
test
pusha
lea
je
jmp
jmp
pop
adc
add
inc
shll
pop
cmp
mov
fnstenv
inc
or
out
adc
cwtl
sub
xchg
hlt
push
or
les
mov
aaa
push
inc
jecxz
xchg
arpl
xor
inc
iret
and
inc
aad
outsl
je
cwtl
fiaddl
push
loopne
sarb
nop
jg
jge
aad
jno
flds
aaa
xor
scas
stos
fbstp
xor
adc
cmp
into
clc
addl
push
sub
or
call
inc
add
inc
xchg
adcl
and
jne
out
out
xlat
cmp
shlb
pop
cmp
pop
pop
xchg
in
cs
sahf
cmp
aad
xchg
pushw
repz
mov
test
ror
add
xor
clc
pushf
adc
sub
jl
push
xchg
into
jbe
mov
sahf
dec
and
mov
insl
mov
mov
mov
lea
inc
lea
mov
lahf
xor
inc
and
xchg
pop
std
push
push
lea
jmp
insl
adc
test
jle
push
daa
mov
movsb
ret
movsb
dec
lods
dec
lods
int
stos
lahf
mov
rcrb
push
rolb
mov
jae
in
jno
jle
add
xor
hlt
addl
fdivr
clc
pop
inc
ds
sbb
mov
pop
push
bound
ss
shrl
dec
jle
jb
mov
xchg
cmp
outsb
inc
fidivrl
dec
insl
call
add
inc
loope
pop
sbb
sbb
xchg
push
sahf
pop
out
rcll
lahf
sbb
movsl
mov
add
pusha
push
jmp
call
stc
ror
pushl
bt
xor
cmc
pushf
test
neg
pushf
mov
stc
push
add
cmp
call
mov
xor
sub
jmp
xchg
je
cli
fwait
ljmp
je
call
sub
test
scas
jg
jo
xchg
je
jno
push
sub
imul
inc
sub
or
les
xchg
jp
inc
push
xchg
rcrl
add
mov
rclb
push
or
push
xor
popa
mov
ror
ljmp
inc
jecxz
add
in
jno
gs
cmp
add
pop
pop
pop
imul
std
fdivr
mov
jl
divb
push
sbb
xor
stos
movb
lds
mov
push
pusha
adcb
subb
inc
movsbl
lods
lods
mov
jl
mov
adc
dec
xchg
and
pop
inc
int3
lods
out
out
and
leave
xchg
sub
aam
inc
mov
ret
inc
scas
pop
push
mov
pop
xor
imul
xor
out
lret
dec
gs
insl
sub
stos
mov
or
sbb
flds
es
lods
shl
aam
loop
push
inc
jb
orb
or
mov
das
push
sbb
clc
xor
stos
pushf
pushf
pushf
pushl
lea
jmp
mov
mov
push
sub
arpl
addr16
scas
outsl
pop
xlat
cltd
insb
je
push
int3
out
frstor
push
in
fnstsw
mov
imul
xor
xchg
ret
outsl
ja
sub
add
les
insl
mov
cmp
push
mov
xor
aas
fnstenv
adc
mov
daa
pop
pop
dec
repz
mov
push
sbb
pop
lahf
pop
adc
aam
cmp
sbb
jbe
push
add
lea
fsubs
or
ja
clc
pop
js
sti
lcall
sbb
add
mov
push
mov
lcall
mov
push
push
xor
and
jns
into
dec
les
std
sbb
mov
push
idiv
cmp
sub
jbe
xchg
sti
roll
leave
jmp
cmp
outsb
rcrb
leave
or
add
xchg
jmp
cli
or
add
or
mov
cmp
pop
sbb
push
sbb
mov
xlat
mov
mov
push
push
sahf
inc
cmpsb
inc
sub
inc
xchg
dec
movsl
jno
add
jle
in
sti
add
push
push
dec
sbb
cmp
out
jae
cld
sub
xchg
mov
add
call
or
scas
or
int
aas
sub
out
sub
push
call
push
pop
pop
mov
das
test
mov
bound
xor
cmp
fcomps
ret
and
sub
push
dec
bswap
int3
push
mov
dec
or
push
sbb
mov
cs
inc
push
int3
sub
inc
mov
add
add
lahf
dec
mov
mov
jo
and
popa
push
out
std
pop
mov
adc
mov
and
lea
fstpt
popa
inc
stos
mov
cmp
jmp
dec
or
leave
addb
ret
push
sbb
movb
stc
pushf
cmp
jmp
push
dec
pushf
rol
jmp
lock
and
pop
cmp
xor
outsb
add
mov
cli
cmp
insb
cmp
and
aad
repnz
mov
repz
cmpsb
xchg
sbb
repnz
jg
push
jl
es
lock
adc
mov
mov
jbe
cmp
pop
dec
fsts
mov
mov
cmp
sti
mov
xchg
inc
xchg
sarb
jle
push
mov
std
test
icebp
sbb
lahf
jbe
xchg
mov
movsb
stc
push
mov
lds
mov
fisubrl
cwtl
inc
jno
stos
and
insb
fstpt
pop
loop
adc
shlb
xchg
mov
lahf
cmpsl
xor
dec
dec
fstpt
out
mov
jmp
cli
aad
fstps
enter
repnz
jo
sti
divb
push
sbb
fs
jne
jo
stos
push
pusha
lea
jmp
pop
in
and
scas
shlb
push
add
fidivl
cmpl
aam
ds
repz
cwtl
mov
add
ficompl
ficomps
mov
or
add
imul
movsl
lret
pop
icebp
movsb
mov
jle
jg
jnp
xchg
push
sbb
sub
xor
leave
sub
sub
stos
lret
mov
add
and
out
dec
addr16
fmuls
and
daa
jp
addr16
loop
es
pcmpgtw
dec
jecxz
mov
lds
sub
or
call
add
fimuls
scas
cmpsb
jno
repz
add
adc
loope
pop
lahf
cld
pop
nop
xchg
cmp
push
icebp
inc
xor
pop
movsl
insb
dec
outsl
sub
inc
add
dec
or
inc
lea
cs
sbb
fs
jne
push
adc
adc
rcl
mov
movb
add
pushf
movzwl
rcr
pusha
pushf
bt
mov
call
shrb
pop
aad
push
sahf
dec
test
cmpsb
shlb
and
mov
sub
xor
insl
inc
fwait
adc
ds
pop
bound
and
in
fcmovnb
cmp
popf
aad
incb
out
inc
lahf
andb
scas
push
pop
scas
outsb
ds
xchg
cmp
stc
xor
adc
insb
dec
cmp
lods
dec
and
outsb
dec
add
leave
lret
stos
lods
mov
push
adc
push
sbb
cmp
sub
out
insb
and
faddl
push
sbb
sti
sbb
mov
mov
fisttpll
outsl
and
flds
and
cmp
int3
outsb
pop
push
popf
scas
xchg
fildl
lea
jnp
mov
pop
xchg
sahf
inc
sub
enter
push
pop
mov
cmp
add
fwait
push
add
aaa
in
out
cmp
cmpsb
andl
into
aam
icebp
sub
fwait
and
jmp
mov
xchg
lret
cwtl
xor
sbb
sbbl
mov
call
lahf
push
faddl
and
movsb
fwait
xor
repnz
shrl
sub
and
insl
add
hlt
dec
mov
cmp
or
scas
out
xor
in
inc
lds
movsb
les
dec
jle
add
dec
or
xorb
push
sbb
pop
mov
loop
outsl
mov
test
filds
cs
jne
sahf
adc
adc
inc
lock
test
jbe
cli
in
movsl
adc
sub
inc
cwtl
or
aam
mov
xchg
and
push
loopne
mov
fildl
xchg
or
loop
lds
pop
pop
jne
dec
push
inc
or
mov
push
sbb
inc
and
mov
mov
pusha
pushf
push
mov
movzbw
call
call
scas
and
add
jo
shlb
inc
and
int
mov
and
loopne
dec
loopne
lcall
adc
in
push
or
and
rcr
aas
xor
pop
or
jg
or
xor
out
cltd
cmpsb
mov
jge
jg
nop
inc
mov
jl
movsl
add
xor
mov
and
or
loope
in
imul
test
and
dec
outsb
ja
sub
add
or
add
ficoml
stos
mov
enter
push
mov
lods
nop
xor
fmulp
dec
mov
ja
add
sbb
xor
stc
dec
aas
push
scas
mov
aaa
in
das
lds
inc
mov
popa
movsb
sbb
fwait
mov
pop
push
mov
sub
loopne
xor
pop
or
mov
sub
pop
orl
push
sbb
mov
scas
outsb
loope
mov
add
out
rcll
push
mov
repnz
es
pop
imul
pop
pop
adc
xchg
icebp
pop
push
testb
idivl
jns
icebp
mov
push
sbb
decb
call
push
das
dec
sbb
aam
xlat
shrl
mov
aam
pop
mov
jne
testl
repnz
in
push
icebp
inc
mov
leave
repnz
fsubrs
sub
fadd
inc
mov
mov
xchg
jge
mov
cmpsb
pop
xor
dec
lds
rorl
and
mov
inc
xchg
add
xchg
push
sbb
add
pushf
movzwl
neg
mov
stc
clc
test
push
add
cmc
mov
mov
test
movl
pushf
lea
je
call
shll
loope
push
xchg
dec
mov
dec
sub
sub
xchg
push
in
mov
cld
push
cld
jmp
push
inc
dec
xor
pop
call
xchg
ret
je
lcall
adc
mov
int3
cmpsl
dec
arpl
je
push
int3
fldcw
arpl
lods
jo
adc
bound
das
je
jbe
push
ss
inc
data16
test
pop
dec
out
addw
xor
int
dec
mov
push
sbb
out
andb
icebp
cwtl
sbb
sub
arpl
popa
add
xor
enter
mov
fwait
pushf
push
mov
mov
mov
pop
dec
movsl
jae
pop
mov
cmpsb
sub
cltd
andb
push
mov
jmp
jne
push
notb
pop
and
in
dec
pop
xchg
jbe
sti
pop
jns
add
mov
add
xchg
not
sarl
aam
dec
int3
aam
out
lods
dec
add
lods
into
lea
outsb
es
addr16
imul
push
sub
lcall
sub
leave
cltd
xor
rclb
sub
and
fs
sub
inc
aam
pop
insl
mov
xchg
pusha
lret
pop
cmp
adc
add
imul
dec
cmp
outsb
cwtl
lods
and
adc
mov
sbb
pop
sub
xor
jp
and
sub
push
sbb
cld
add
pushl
lods
cmc
cmc
rol
cmc
call
push
stos
movw
lea
jmp
mov
scas
or
and
imulb
and
das
inc
and
aam
sti
add
add
mov
or
repnz
xor
dec
loope
stc
rorl
divb
leave
popf
jp
pop
dec
insb
into
xor
and
lret
pop
inc
inc
push
out
pop
dec
jecxz
jge
lea
mov
xor
push
rolb
sti
sub
mov
pop
adc
cmp
cmp
adc
pushf
mov
movb
mov
pushl
ret
push
not
movw
jmp
mov
call
fisubrl
int3
data16
pop
aaa
imul
jbe
je
jo
cli
sub
cwtl
cld
sbb
clc
dec
jge
dec
pop
mov
pop
push
je
test
mov
iret
push
push
out
fsubs
cmp
ret
inc
mov
xchg
sbb
inc
stos
mov
jns
fs
jp
sub
pop
inc
call
fisubl
lods
xchg
in
xchg
mov
into
mov
in
rclb
rcrb
sbb
jg
sbb
popa
subl
bound
loope
gs
add
into
or
mov
cmp
or
nop
push
xchg
repnz
out
sbb
test
lea
push
cmp
out
int3
fsts
cld
xor
cld
adc
movsl
mov
adc
add
adc
aas
shr
push
cmpsb
into
gs
jl
mov
add
adc
push
hlt
aad
shl
mov
rcll
push
pop
push
xchg
adc
xchg
mov
mov
call
loop
ret
inc
xlat
push
cmpsb
int3
adc
lcall
aas
cld
dec
jae
das
out
ret
nop
and
pushf
lock
mov
add
mov
jmp
pop
js
mov
scas
out
add
cmp
std
and
lret
xchg
popa
loop
cmp
movq
inc
push
cmp
fisubrs
popf
push
xchg
push
adc
pop
stc
push
sbb
sti
pop
aas
cmp
mov
jmp
fdivrs
xchg
push
pusha
push
gs
add
fsubp
jp
in
add
cmp
repnz
xchg
fiaddl
add
leave
lcall
call
fistps
xchg
xchg
mov
fmuls
inc
in
movsb
aam
ret
mov
or
jecxz
divb
pop
jge
add
jle
cld
dec
jae
sti
cmp
repnz
xchg
xlat
aas
sahf
add
dec
jmp
sub
repz
ret
sbb
push
xchg
and
lock
in
inc
push
jp
in
loop
lods
fdivrl
sub
jg
dec
pop
mov
std
je
movsb
inc
sub
cwtl
cmp
lahf
fs
sbb
pusha
jg
lret
jle
aaa
cltd
mov
out
mov
mov
movsl
xor
neg
adc
lcall
mov
mov
dec
inc
sar
int3
mov
stc
lcall
sbb
fsubrs
sbb
fistps
sbb
rcrb
fisubrl
pop
add
dec
mov
add
jge
add
add
imul
adcb
addl
add
ret
roll
add
call
add
cmp
bt
cmp
test
cmp
pushf
lea
jb
push
test
cmp
pushf
pushf
lea
jae
and
shl
bsr
and
mov
movzbw
inc
setp
neg
mov
neg
sub
jmp
mov
xchg
xchg
or
in
rorb
outsl
mov
andb
and
test
in
fbld
xchg
inc
in
sbb
cwtl
loopne
in
loopne
sbb
call
xchg
out
cld
and
pusha
xor
lea
push
push
inc
lea
push
push
push
lea
call
call
xchg
gs
pop
in
push
mov
in
lahf
in
adc
lods
mov
lahf
imul
aas
xchg
gs
push
pushf
lcall
in
test
cmp
add
push
pcmpgtw
sahf
inc
xchg
mov
lock
inc
jb
ret
pop
repz
mov
dec
sahf
cmp
fdivrs
adc
mov
add
enter
shrl
aaa
rclb
loope
push
dec
add
gs
repz
in
cmpsl
insb
mov
fisttps
std
loop
ficoml
mov
ds
add
fdivl
fdivp
mov
movl
fwait
mov
mov
nop
fdivrp
sti
mov
repnz
js
test
push
sbb
movl
push
push
rep
bswap
mov
mov
movb
movb
lea
jmp
mov
setp
pushf
inc
inc
pushf
push
setl
mov
push
lea
call
jmp
pushf
rep
lea
mov
pushf
mov
pushf
lea
jmp
pushf
inc
call
mov
fdivrp
pop
mov
mov
scas
dec
das
enter
dec
loopne
mov
mov
stos
mov
adc
imul
pop
sub
frstor
je
or
pop
shlb
jg
xor
popf
mov
sbb
cmp
outsb
mov
test
jp
popa
cwtl
jae
lret
mov
popa
fcompl
imul
adc
xchg
nop
xor
je
or
je
sti
jge
add
add
cmc
mov
shrb
inc
inc
push
movb
add
mov
push
sbb
clc
adc
adc
sahf
daa
mulb
lcall
std
fwait
cld
nop
inc
adc
pop
lcall
repnz
cmp
pusha
mov
sbb
lods
or
std
fadds
imul
add
jo
or
movsb
fs
or
mov
stos
lahf
fsubrl
push
stc
jl
insl
lret
leave
add
xchg
les
mov
xlat
pop
mov
dec
and
cld
xor
jl
xchg
cmp
test
push
mov
mov
xchg
sbb
sbb
jp
lret
pushf
inc
and
sub
lods
popf
sub
cld
loopne
popa
push
mov
dec
cmp
js
adc
sub
push
and
cmpsb
imul
inc
aam
pop
jbe
push
lcall
bound
pop
cmpsl
sbb
adc
push
sbb
inc
cwtl
inc
cmc
stc
pushf
rol
bt
pusha
cmp
xor
pushf
pushf
pushf
dec
clc
ror
call
inc
push
xor
push
ror
push
dec
mov
test
test
push
cmp
movzbw
lahf
cwtl
cwtl
lea
bswap
jmp
or
aaa
mov
dec
jbe
xchg
fmuls
shll
fdivrs
out
shll
stos
mov
nop
xor
rclb
pop
call
test
xchg
sbb
dec
std
or
or
adc
inc
mov
aas
and
fadd
test
out
mov
imul
rorb
inc
mov
loop
aad
in
jo
xor
fbstp
mov
dec
es
dec
fs
scas
insb
es
in
arpl
adc
dec
cmpsl
push
and
aaa
popf
cmp
ja
cwtl
stc
lcall
ja
cwtl
sub
scas
rorl
sahf
cld
clc
pop
jmp
shll
mov
mov
test
insb
jmp
sbb
xchg
lret
ds
aas
sub
jecxz
call
imul
xor
mov
scas
jns
jl
mov
adc
mov
jno
repnz
push
sbb
fs
jae
bt
jmp
cld
push
mov
xor
cmpsl
cwtl
leave
sbbl
shrl
inc
popa
mov
sarl
dec
xorl
mov
movl
sub
in
data16
movsl
fs
addr16
xchg
pop
jle
leave
jecxz
or
mov
pop
cmpsb
jb
xchg
lcall
divb
sbb
add
pushf
mov
pushf
pushf
lods
cmp
push
cmc
jmp
inc
add
shl
push
pusha
xchg
add
mov
neg
mov
shl
sbb
neg
inc
mov
cmp
bt
call
mov
pushf
setae
lods
mov
neg
pusha
cmc
test
pushf
xor
jmp
stc
cmp
clc
sub
cmc
repnz
pusha
pushf
movb
jmp
cmp
mov
xor
mov
xlat
mov
cmp
mov
mov
mov
hlt
jae
xchg
push
mov
dec
pop
pop
insl
ret
add
sti
cld
xor
xchg
in
pop
sahf
mov
mov
push
or
hlt
push
add
es
pop
jl
sahf
mov
pushf
fsts
rclb
aad
push
sbb
insb
aas
and
cmp
push
jmp
pmulhw
stos
aaa
sbb
jnp
ror
rcll
mov
pop
push
xor
imul
dec
imul
adc
sbb
adcb
xor
sub
push
popa
fidivs
pop
mov
pop
or
and
mov
push
mov
out
cmp
jle
xor
fists
lcall
dec
xor
pop
fldenv
inc
test
cmpsl
inc
sub
stos
inc
and
jo
outsb
out
fistpll
fisttps
xor
push
sub
pop
sahf
jge
push
sarb
pop
xlat
test
lods
xchg
inc
pop
jnp
lea
jae
int3
roll
jbe
jg
inc
test
xor
dec
push
push
jl
loope
fdivr
inc
add
aad
sahf
xor
add
cmp
jle
adc
fmull
xchg
std
pop
outsl
pop
popf
xlat
xchg
rcrb
ficompl
pop
pushf
pop
pop
push
sbb
sbb
fcom
sbb
push
adc
add
cltd
sub
rcl
stc
flds
sub
loope
mov
xlat
inc
popf
inc
cltd
cmpb
add
rcll
xchg
std
shl
rclb
es
push
cs
mov
pop
notl
stc
popf
adc
push
repnz
popf
shll
lods
mov
jle
enter
jnp
adc
aam
nop
mov
aad
test
nop
xchg
adc
movsb
leave
xchg
or
mov
sbb
cmc
mov
pop
aad
inc
dec
fldenv
xchg
mov
popf
adc
adc
fsts
fnstenv
and
and
mov
sbb
sbb
adc
js
or
xchg
out
adcb
sbb
adc
cmp
shll
pusha
ss
add
popf
shll
or
adc
push
mov
push
out
mov
xchg
lock
jbe
dec
jno
loope
pop
and
adc
test
cwtl
mov
jb
mov
jne
jns
and
add
shl
mull
test
xor
push
icebp
sbb
sbb
xor
jns
mov
xor
mov
xchg
cwtl
sbb
icebp
push
mov
xor
rcll
xchg
cs
adc
stc
in
xchg
jno
stc
bound
clc
js
or
inc
xlat
imul
xchg
lret
imul
stc
dec
mov
enter
fcompl
movsl
push
push
adc
sbb
adc
xchg
sbb
cmc
repnz
mov
sbb
xchg
adc
cltd
xlat
add
sbb
and
sbb
in
adc
loope
xor
test
or
xor
xor
stc
aas
xchg
xchg
mov
xlat
stos
test
dec
pop
sbb
jmp
out
add
jno
adc
cmc
mov
pop
or
nop
or
dec
or
pop
xor
mov
repz
mov
push
loopne
add
cmp
dec
sub
sbb
unpcklps
adc
and
neg
sbb
mov
xchg
rorb
stc
or
or
jnp
cmpsl
xor
stc
push
mov
cwtl
inc
aad
js
mov
rcrl
cs
subb
popa
js
xor
fwait
mov
stc
add
loop
push
shrl
in
or
or
adc
push
stc
add
out
push
mov
jne
mov
push
test
xchg
gs
xchg
fwait
cmp
ss
pop
sbb
out
pop
hlt
sub
sub
mov
cltd
dec
stc
mov
cltd
add
pop
cltd
xchg
fnstcw
call
xchg
sbb
test
xchg
jp
and
push
mov
ficoms
imul
rcr
or
cmpsl
push
xor
push
mov
shll
xchg
cltd
mov
shl
mov
adc
adc
mov
rcll
lahf
out
sbb
and
sub
add
xlat
cltd
mov
mov
and
out
sbb
rcll
inc
test
fucom
jge
inc
jo
jne
stc
aad
imull
fdiv
rcll
adc
popf
shll
cltd
push
and
and
movsl
mov
inc
lcall
jbe
fisttpl
pop
fsts
repz
fsts
adc
pop
mov
or
test
popf
cwtl
clc
mov
mov
push
out
outsb
lcall
adc
cltd
stc
rcll
shl
loope
fistl
xchg
rcl
aad
and
fsts
push
cltd
push
in
mov
pop
mov
mov
orb
adc
jnp
xchg
cmpsb
add
pop
or
adc
aam
mov
pop
leave
push
int3
fdivr
xchg
imul
rclb
ja
inc
mov
jns
vphaddubd
outsl
sarl
sbb
jns
cmpsl
adc
or
rclb
fcoms
mov
rcrb
mov
rclb
sbb
ja
xchg
add
dec
xchg
js
repz
lods
mov
push
pop
mov
js
lds
out
test
jns
or
popf
test
shlb
xchg
sar
sbb
call
or
dec
dec
cmpsl
jge
xor
jb
push
shl
test
mov
pop
jecxz
dec
push
mov
clc
loope
lods
pop
dec
test
clc
scas
pop
push
rcr
cltd
dec
or
decl
mov
idivb
rolb
test
leave
test
dec
pop
leave
rcl
scas
sub
lds
xchg
push
push
aas
jns
or
dec
je
xchg
mov
push
in
push
sti
and
sub
jb
icebp
andl
mov
ds
push
adc
jnp
rorl
ja
fdivrs
in
adc
push
mov
stos
add
adc
push
test
adc
fsubs
sub
mov
jne
xor
sbb
mov
std
leave
les
fmuls
scas
mov
out
and
testl
sub
aaa
add
je
jns
loop
push
push
test
dec
cmp
notb
out
add
fdiv
push
mov
mov
shl
outsb
cmc
jns
js
rcrb
out
mov
adc
add
jle
jns
movl
jae
sub
pop
mov
call
stc
mov
or
adc
int
mov
lahf
icebp
xchg
xchg
hlt
js
rclb
and
mov
vmwrite
mov
sbb
in
jns
sbb
add
fidivrl
hlt
out
jne
repz
addr16
mov
or
pcmpeqw
ror
test
push
mov
push
pop
out
add
fistpl
rcll
add
or
clc
mul
adc
loopne
adc
mulb
les
push
lock
jne
std
mov
js
cli
cmpsb
andl
xchg
xchg
jns
les
test
bswap
push
cs
idivl
mov
and
gs
or
leave
clc
mov
mov
mov
pop
repz
shl
mov
nop
into
mov
pop
mov
xchg
int
int3
jns
clc
jp
jns
outsb
cmpl
mov
lea
shrb
jns
scas
inc
jns
scas
sarl
scas
jns
loopne
jns
scas
xchg
es
xchg
loopne
jnp
loopne
es
xchg
popf
add
scas
add
mov
xor
push
in
sub
sub
or
cmc
cmp
mov
xchg
js
insb
sbb
scas
inc
cltd
or
lds
jae
ret
imul
sub
cli
xlat
mov
dec
push
loop
fdivl
lods
mov
push
or
cmp
rolb
push
add
add
cltd
test
xchg
ror
push
push
xrelease
insl
jge
shr
shl
repz
or
mov
xchg
cmp
sbb
add
hlt
push
scas
in
jnp
cmpsb
inc
dec
pop
orl
cmp
rolb
xlat
divl
cld
push
nop
add
jle
and
mov
lds
cmp
pop
xchg
rcl
jo
sbb
mov
cli
cmp
shl
scas
enter
sub
push
jns
mov
lods
dec
fsubr
sub
push
adc
les
jne
or
push
mov
or
add
fsubrs
ss
cltd
stc
jg
and
addr16
cld
ja
jae
xchg
inc
or
test
cwtl
push
in
mov
sbb
in
push
not
pop
loope
sbb
lea
loopne
inc
cltd
push
flds
movsl
in
and
xchg
jns
leave
xchg
rol
mov
stc
xlat
adc
pop
lock
arpl
rcrl
mov
sub
scas
dec
shll
pop
popf
mov
sub
dec
adc
daa
add
mov
in
testb
mov
pop
incb
pop
xlat
mov
xchg
pop
xchg
or
mov
sub
shl
pop
mov
sub
sbb
pop
mov
mov
or
rcl
out
sti
and
sub
mov
out
pop
mov
push
adc
or
shll
push
rcrb
sub
push
rcrb
sub
mov
sub
mov
lcall
adc
popf
pop
or
add
ja
mov
shrl
inc
ds
clc
mov
sub
and
stos
popa
rcrb
loop
shrl
popa
rcrb
loop
sar
out
mov
loop
sar
out
clc
mov
repnz
cmpb
or
cmp
out
pop
inc
clc
sub
shrl
outsb
rcr
pop
popa
rorb
cs
xor
add
adc
int
das
add
shl
fstpl
shrb
pop
fildl
gs
mov
pop
fnsave
and
stos
mov
mov
in
loop
shrl
popa
push
popf
mov
dec
fcompl
shl
popa
push
sub
inc
cmpsb
cmp
adc
xlat
pop
insl
mov
scas
jns,pn
push
or
mov
cltd
test
sub
adc
cmp
adc
testb
xchg
imul
push
out
push
adc
popf
pop
push
cmpsb
push
imul
cmpsb
xchg
add
mov
xchg
aam
loope
scas
sahf
adc
stos
lcall
mov
imul
mov
jno
adc
addr16
out
add
jno
or
xor
out
xchg
std
push
xorl
sub
pop
xchg
aam
int
enter
dec
adc
imul
and
xor
pop
add
add
jns
icebp
jns
icebp
pusha
jns
dec
hlt
mov
dec
cmp
add
imul
test
data16
mov
je
pushf
xchg
outsl
jle
adc
jp
xor
in
mov
mov
adc
cmpsb
adc
xchg
or
fcmove
movsb
mov
or
pop
push
jmp
icebp
stc
add
lret
or
sub
dec
adc
jbe
daa
inc
or
push
mov
aad
mov
xlat
sbb
fwait
enter
lahf
imul
xchg
out
cmpl
dec
or
sbb
cwtl
or
inc
add
popa
or
inc
jns
adc
fidivrl
arpl
adc
jns
inc
out
call
dec
mov
lahf
xchg
call
inc
inc
mov
sub
add
lret
outsl
jnp
adc
sbb
add
push
out
imul
movsl
std
adc
cmp
imul
icebp
add
das
fistl
imul
pop
out
pop
mov
and
outsb
sbb
push
icebp
mov
outsl
jg
je
add
icebp
je
push
incb
fcoms
jne
imul
je
jno
stos
add
in
fisttpll
jmp
mov
out
and
popa
mov
fs
xchg
sbbl
inc
sub
add
cmp
out
fisubs
repz
mov
xchg
addr16
jg
jmp
mov
dec
adc
imul
rcl
adc
js
data16
imul
pop
cli
loop
adc
mov
xlat
je
adc
push
movsb
lret
adc
icebp
or
aad
sbb
add
inc
lods
mov
jg
loop
adc
and
pop
sub
mov
jg
scas
loopne
cmp
inc
lods
sbbb
clc
inc
enter
ds
mov
cmp
inc
decl
pop
enter
mov
fwait
out
pop
ds
adc
aas
push
sub
pop
js
out
or
negb
or
pop
xorl
mov
push
roll
cltd
mov
or
push
xchg
je
dec
jmp
sbb
add
je
adc
fwait
movsl
and
add
and
imul
icebp
sub
dec
imul
and
jnp
add
stc
push
das
mov
sbb
adc
or
sbb
lods
push
xlat
adc
rcrb
ja
sbb
push
adc
jne
jg
or
cmp
add
mulps
push
movsb
sub
add
bound
mov
and
adc
rclb
out
pop
mov
sub
adc
cmp
or
or
daa
dec
adc
inc
adc
cmp
adc
cmp
adc
inc
cmp
hlt
inc
in
adc
mov
sub
adc
stos
xor
xor
xor
out
in
out
sbb
ljmp
ss
int3
sub
adc
shll
cmp
in
xchg
or
es
in
push
out
out
aaa
cld
repnz
inc
and
add
dec
movl
and
sbb
sbb
cli
rcrb
xchg
mov
mov
lcall
lret
hlt
fiadds
push
outsl
lods
movl
xor
inc
imul
loop
pop
repnz
cmp
sti
mov
lcall
sbb
lcall
lret
and
sbb
mov
sbb
push
daa
push
int3
stos
add
inc
insl
in
cli
inc
cltd
and
or
sbb
sbb
orl
sbb
aas
sbb
jne
icebp
mov
push
xchg
ficoms
adc
pop
lret
mov
imull
mov
sbb
sbb
mov
lcall
or
addr16
pop
scas
fidivs
out
adc
outsb
jne
jg
fwait
cltd
jg
movsb
lret
std
and
rcll
int
lahf
sub
add
cltd
or
mov
sbb
cmpsb
mulb
cld
test
pop
push
mov
mov
scas
and
sbb
cltd
test
ss
pop
and
xchg
push
push
leave
cltd
mov
add
incl
adc
cmpsb
leave
push
mov
inc
sub
dec
testl
cmp
jmp
xchg
in
ja
dec
daa
jb
sbb
dec
adc
pop
lcall
push
mov
mov
sahf
in
push
adc
adc
pop
xchg
das
xchg
cmp
repz
fnstenv
sbb
stos
or
jae
mov
daa
ja
scas
clc
adc
and
push
dec
mov
mov
imul
imul
cwtl
fnstsw
jns
popf
int
mov
js
test
adc
cltd
mov
into
lds
test
mov
ljmp
shrl
cld
and
pop
xchg
lcall
lods
shlb
and
rorl
and
fs
out
push
out
push
jne
sti
push
pusha
out
fucom
fmuls
stc
add
sub
stc
out
and
sbb
sbb
jmp
xchg
mov
sub
int3
push
push
or
std
add
adc
add
pop
shrl
sbb
and
sub
ljmp
lahf
sarl
imul
mov
xchg
cmp
std
adc
lcall
ret
fwait
std
cld
repnz
adc
fwait
repnz
rcl
hlt
into
adc
jmp
jmp
and
jno
mov
and
pop
loop
lcall
and
push
xchg
sub
pushf
cli
ljmp
cmp
adc
aaa
mov
pop
aaa
inc
push
js
std
movsb
rclb
stos
jbe
jb
sbb
cmp
mov
cld
pop
adc
pop
xchg
fwait
mov
iret
ljmp
jmp
stc
loope
fstps
outsb
mov
jmp
loope
loope
jmp
push
xchg
ja
leave
adc
in
iret
or
jecxz
mov
das
stc
mov
rcrl
adc
pop
mov
pop
jno
std
icebp
sbb
sbb
pop
push
mov
push
push
jbe
adc
ja
out
adc
aaa
sbb
xor
xor
sbb
in
enter
vmovapd
jecxz
out
jge
xchg
icebp
lock
cmovge
enter
ja
push
jno
cmpsl
fistps
or
xchg
fdivr
mov
dec
faddp
shr
movsl
mov
cwtl
cmpxchg
test
test
fcomps
cmp
xor
push
jg
jmp
pop
xchg
pop
jo
std
ja
push
jle
jo
or
imul
cltd
out
mov
andb
fdivs
out
push
jo
jbe
and
fdivl
popa
fmull
nop
pop
jno
mov
pop
cmc
pop
add
add
xchg
mov
xor
fildll
pop
filds
into
pop
xor
sub
mov
cwtl
shr
es
scas
mov
jne
inc
mov
aas
xchg
xlat
loopne
or
lds
loop
lock
xchg
adc
xchg
jl
fsts
jle
test
sub
push
cmp
mov
fdivl
pop
xor
sahf
pop
xchg
clc
push
mov
mov
add
mov
out
scas
adc
loope
bound
xchg
sarb
xor
test
mov
jmp
mov
mov
add
adc
test
xor
add
test
pop
pop
mov
ss
or
mov
sarl
inc
xchg
icebp
adc
and
jns
movsl
mov
jns
push
mov
pop
mov
pop
stc
clc
out
loop
aaa
or
loop
pop
loopne
aam
xor
lock
mov
cmpsb
push
mov
cmp
sahf
lret
mov
dec
mov
mov
pop
and
mov
pushf
xchg
cmpsl
leave
mov
xchg
mov
jo
negb
in
or
pushf
mov
xor
sbb
mov
test
shl
popa
xchg
pusha
xor
jne
fnstcw
or
cmpsb
cmpsl
adc
push
shll
leave
repz
mov
and
movsl
jmp
popa
shll
dec
jecxz
icebp
inc
repnz
mov
gs
outsl
ror
clc
sbb
push
lds
push
stc
xchg
xor
inc
adc
and
mov
andb
push
js
jae
cmp
cli
stc
inc
cmp
gs
movsb
xorps
dec
sbb
pushf
out
jns
xor
jno
outsb
mov
push
xchg
add
clc
jbe
test
icebp
mov
mov
mov
push
mov
and
cmpsb
sti
leave
xor
push
jns
mov
or
leave
clc
scas
mov
pop
mov
imul
mov
xor
lock
jg
hlt
pop
jns
xor
clc
int
cmp
movsb
cmp
dec
lds
pop
addr16
cwtl
fdivrp
neg
mov
lahf
movsb
pop
stc
sbb
outsl
inc
fidivl
into
jns
pushf
or
fs
pushf
mov
loope
out
xor
pop
mov
cmp
inc
mov
ret
inc
push
inc
mov
inc
mov
jno
or
mov
xor
push
cld
sub
push
out
call
pop
repnz
mov
fsubs
out
mov
aaa
dec
jecxz
push
das
mov
xchg
or
cmpsl
pop
jp
push
add
inc
test
roll
cmc
decl
add
pop
inc
cmp
out
jmp
aaa
jns
xor
incb
jo
or
add
int3
push
cltd
lods
in
add
in
roll
mov
pop
push
xchg
cmpsl
add
mov
xbegin
xchg
mov
movsb
xlat
jne
cmp
jg
cmp
mov
jmp
dec
dec
shlb
pop
je
mov
imul
xchg
ja
mov
adc
pop
testl
fistpll
adc
sub
test
test
mov
cwtl
push
cmc
and
imul
xchg
shlb
cli
dec
popa
mov
push
push
jmp
jg
jle
xchg
aam
ret
add
stc
pop
ffree
mov
push
clc
in
inc
cld
cmpsl
jmp
xlat
test
out
je
pop
jle
adc
nop
mov
sbb
test
push
enter
xor
addb
jne
lds
ret
xchg
pop
fidivl
mov
or
pop
xor
scas
mov
popl
xchg
dec
addr16
fimuls
pop
leave
notl
cltd
aad
adc
subb
sti
es
lret
mov
test
xor
aam
fucomip
adc
and
imul
cmc
imul
mov
mov
icebp
push
mov
mov
loopne
inc
out
aam
xchg
leave
xchg
inc
enter
mov
scas
scas
aaa
xchg
mov
and
cmc
xchg
hlt
enter
and
push
mov
sbbl
js
mulb
mov
fisubrs
mov
add
and
arpl
sub
pusha
cmp
dec
in
lds
aam
outsl
mov
dec
les
sarl
sub
sahf
loope
dec
insl
xchg
pop
dec
jg
aaa
test
sbb
jecxz
aas
or
pop
iret
mov
mov
icebp
lret
push
xlat
pop
xchg
jmp
sub
test
cmp
push
loope
xor
hlt
xchg
aas
imul
hlt
cltd
in
inc
int3
mov
rorb
cmpsb
inc
insl
test
test
mov
int
dec
daa
pop
aam
cwtl
js
mov
xchg
sbb
adc
mov
les
out
inc
ja
lock
pop
mov
mov
mov
mov
sti
data16
fidivs
add
cltd
xchg
jmp
xchg
hlt
scas
int
xchg
push
je
popf
mov
mov
test
or
out
les
xchg
mov
mov
jo
leave
call
sbb
jb
test
negb
je
hlt
popf
mov
mov
hlt
pop
cmpsl
lea
fidivs
ret
ja
outsb
sbb
inc
addr16
pop
xchg
fisubs
mov
outsb
mov
mov
ja
add
add
or
shrb
les
fstps
shll
mov
in
sti
cli
enter
xor
js
xchg
sub
xor
mull
pop
out
out
aad
xor
outsl
pop
xlat
mov
loop
jbe
lods
loop
push
jl
lods
imul
rolb
sbb
pop
pop
inc
cli
testl
inc
xor
add
jge
ja
mov
cmpsl
lods
push
iret
jns
scas
pop
or
lock
shl
pop
faddl
cmpb
fsubp
add
cwtl
rolb
mov
sbb
movsl
mov
xchg
mov
and
mov
mov
xchg
inc
cmpsl
pop
enter
jle
xchg
and
xrelease
push
data16
sbb
loop,pt
xchg
dec
push
iret
sahf
mov
mov
cli
scas
out
adc
mov
cld
mov
enter
mov
adc
xchg
clc
xchg
push
sbbb
jbe
aad
out
cmp
xorb
out
aaa
jbe
adc
pop
dec
test
inc
mov
pop
pop
lret
fiaddl
add
inc
loopne
movsl
scas
popa
rolb
rcrl
jo
xorl
lods
jmp
pop
inc
pop
adc
cmpsb
lds
clc
into
sbb
mov
cmp
xchg
xorb
test
ss
cmp
loop
lret
cli
daa
fwait
popa
sbb
out
imul
xchg
scas
mov
pinsrw
hlt
insb
pop
inc
jne
xrelease
jae
add
addr16
popa
movsl
daa
test
aam
dec
test
pop
popa
cld
ja
sbb
xchg
xor
lods
xchg
mov
aaa
sub
and
push
fdivs
dec
insb
fistl
sbb
mov
dec
test
pop
repnz
xchg
fs
ret
xchg
mov
mov
movsl
test
pop
pop
decl
and
in
cmp
jbe
rolb
imul
push
mov
xchg
fwait
test
or
fistpl
mov
pop
iret
pop
jg
xor
jae
xchg
and
xchg
into
cmp
jno
pop
incl
test
mov
adc
inc
dec
sbb
inc
enter
pop
roll
scas
push
loopne
sub
dec
mov
repnz
cmp
repz
pop
ret
scas
xor
out
pop
in
aaa
and
mov
mov
jl
jmp
xchg
leave
jl
add
cmp
jge
fidivl
pop
out
inc
mov
enter
stc
jbe
cmpsb
test
push
push
cld
int
test
call
add
mov
xor
xchg
movsb
shl
rsqrtps
cli
mov
mov
xlat
jne
mov
cltd
test
idiv
xchg
pop
xchg
test
mov
and
adc
jge
push
lret
fs
daa
fimuls
arpl
fwait
out
mov
ret
mov
rol
add
out
pop
cmpsl
pop
push
dec
dec
jne
pop
cmpsb
shrb
insl
and
mov
push
jge
test
mov
test
imulb
movsb
aas
stc
je
fdivs
and
sub
shl
xchg
clc
hlt
sub
xchg
pop
aam
sub
sahf
cmp
movsl
cli
mov
out
inc
addr16
clc
pop
popa
iret
dec
dec
shlb
ret
sbb
mov
xchg
clc
aaa
loopne
insb
fcompl
inc
mov
inc
jno
incl
fidivl
imul
xchg
cltd
pop
or
out
pop
cltd
mov
jle
aam
inc
ds
test
in
shll
jmp
rcl
sbb
cmp
imul
pushf
xchg
notb
xor
pop
and
popa
stc
or
cld
rclb
scas
repz
xor
clc
or
mov
mov
mov
lds
xchg
aad
add
pop
js
stc
cmc
mov
pop
leave
mov
mov
adc
mov
xchg
insl
xchg
push
clc
pop
pop
or
xchg
ret
scas
cltd
fnstenv
fmuls
fldenv
jbe
adc
xor
int
xor
pop
cmp
dec
pop
xchg
xor
clc
push
incb
insl
lea
jbe
mov
jns
fistpl
jle
inc
lock
jns
push
mov
test
and
sbb
xchg
repz
mov
push
movsl
enter
sahf
movsl
shll
or
test
popa
popl
add
bound
fistl
xor
addr16
lock
imul
mov
decl
cmp
out
hlt
sahf
add
push
dec
xchg
xor
out
call
lcall
inc
push
dec
ja
adc
loopne
js
pop
inc
scas
jno
cmpsl
sub
arpl
test
les
bound
mov
andb
ja
mov
fcmovu
pushl
ja
bound
mov
stos
shr
and
test
mov
in
xlat
fsts
mov
mov
xchg
fstpt
push
call
jbe
pop
ret
out
inc
xchg
aaa
shl
data16
mov
push
scas
pop
ja
cltd
cld
mov
fwait
data16
dec
sbb
shlb
lods
mov
cltd
shlb
inc
jle
push
idivl
mov
popa
dec
aam
cli
test
pop
xor
test
mov
pop
lods
and
xchg
jns
test
cli
xchg
inc
adc
les
rcll
jg
add
fiadds
sbbb
xchg
fstl
mov
or
cmp
xchg
pop
lea
insl
pop
mov
pop
jb
mov
outsl
cltd
pop
subb
gs
ja
mov
ret
sbb
mov
mov
cmpsw
in
xchg
sbb
cmp
out
out
fadds
mov
or
or
mov
aaa
jae
nop
dec
test
xor
insb
sub
cld
into
pop
mov
jmp
clc
jns
pop
inc
fisubrs
cmc
int
jno
in
sub
gs
mov
and
in
iret
lcall
add
mov
lahf
out
out
dec
dec
mov
pop
imul
ja
adc
jne
xchg
inc
sti
ret
jbe
shrb
pop
ss
test
mov
cmpsl
mov
ja
pop
bound
push
mov
jns
mov
inc
sti
sbb
enter
aaa
cmp
call
cltd
inc
mov
push
inc
ror
cld
pop
fwait
cltd
incl
cwtl
clc
xchg
sbb
cmpsb
push
fadd
lods
xor
fldt
aaa
dec
clc
inc
sti
xchg
repz
addr16
sub
jge
sbb
les
call
push
pusha
sbb
or
popa
dec
dec
mov
push
or
pop
jbe
addr16
outsb
jne
and
add
sahf
mov
pop
fidivs
push
add
jle
jbe
scas
or
and
cmpsb
mov
mov
pop
cltd
idivb
cmpsb
inc
or
mov
cmp
outsl
or
imulb
ja
xchg
js
cmp
mov
mov
jno
mov
sub
adc
xchg
pop
data16
push
xchg
out
mov
sbb
xchg
push
lret
outsl
test
xchg
test
pop
xchg
loopne
xchg
mov
ss
cmpsb
pop
inc
cs
clc
push
mov
stc
add
out
xchg
mov
fdivp
vmwrite
add
pop
lods
out
orb
notb
adc
and
pop
enter
enter
or
adc
ljmp
ja
mov
in
popf
popa
cld
mov
jno
cmp
push
ja
cwtl
fwait
sbb
mov
mov
in
cmpsl
ret
notb
imull
lret
mov
xchg
fnsave
cmp
mull
loopne
and
popa
jns
xor
scas
pop
mov
dec
xchg
ljmp
push
and
stos
jg
mov
push
push
jb
push
mov
imul
push
inc
push
add
dec
sti
clc
jns
in
mov
nop
fldt
adc
push
or
in
inc
jle
aam
pop
sbb
jle
pop
and
pop
cmp
mov
stc
or
mov
mov
out
xlat
cmovle
pop
xchg
cwtl
mov
jp
into
xlat
adc
scas
fadds
xchg
mov
inc
pop
inc
xchg
imul
xor
xchg
mov
xor
mov
into
add
loope
push
inc
or
xor
dec
scas
adc
xchg
out
imul
mov
sub
adc
sbb
out
mov
adc
or
or
jo
loope
sarl
shl
sbb
xchg
out
sbb
xchg
sbb
call
jns
orl
imul
outsl
cltd
xlat
insl
popf
shrb
mov
adc
xlat
inc
addr16
neg
js
in
push
pop
jae
xlat
je
pop
in
out
popa
push
out
or
out
xchg
rcll
fdivp
xchg
xchg
mov
jbe
cmpsb
adc
or
mov
mov
push
int
testl
xchg
and
out
pop
or
inc
dec
scas
push
and
mov
notb
cmp
push
nop
sbb
ret
popa
fildll
fadd
or
pop
xchg
in
addl
aaa
mov
push
xchg
cmpl
pop
in
push
call
pop
dec
push
testl
out
mov
in
inc
cmpsb
das
clc
ret
pop
push
rcl
sub
mov
ja
xchg
out
mov
clc
lea
hlt
jns
cld
lds
ret
jbe
test
xchg
mov
std
lahf
pop
adc
loope
pop
mov
cmovbe
add
lahf
adcl
or
pop
mov
cwtl
and
out
data16
jns
inc
shll
add
leave
adc
mov
rorl
in
movsl
out
mov
test
add
push
gs
sbb
mov
jg
test
ljmp
xlat
js
mov
incb
gs
incb
jp
hlt
test
int
test
lods
sti
ja
xchg
xchg
mov
div
pop
jbe
popf
jecxz
jecxz
cmp
sub
xchg
xchg
movsl
scas
outsb
pop
xor
and
scas
add
loope
jno
mov
push
test
frstor
leave
ja
fadds
mov
hlt
loop
cmpsb
jp
clc
nop
dec
pop
or
notl
mov
js
mov
xor
cmp
push
shll
loop
add
mov
movl
sbb
jno
icebp
movsl
cmc
test
orl
repnz
leave
daa
cmpsb
sti
rcrl
push
pop
sbb
sbb
in
ret
imul
jns
mov
cmc
cmp
test
imul
xlat
mov
repz
xchg
shl
les
std
scas
iret
pop
or
push
nop
push
pop
iret
movl
aas
std
push
inc
dec
pop
hlt
adc
loope
xlat
dec
push
repnz
addr16
mull
pop
xchg
test
cmp
jmp
or
inc
fnstsw
jl
adc
dec
sbb
mov
inc
adc
cmp
dec
clc
movsb
mov
pop
jle
inc
lock
jbe
fildll
mov
adc
push
cs
push
sub
rcrl
fisubrl
imul
mov
or
sbb
sbb
loop
xchg
stc
sbb
or
pop
jle
add
mov
push
jecxz
stos
cmp
sbb
sbb
jae
repnz
cwtl
icebp
jecxz
std
cltd
rcrb
sbb
sbb
ss
cwtl
daa
or
cltd
xchg
sti
cmp
sbb
xor
cltd
sbb
rcrb
cmp
xchg
fisubs
lock
popf
addr16
pop
imul
scas
mov
fwait
mov
adc
arpl
add
cltd
xchg
inc
pop
xor
mov
and
cltd
and
aam
jbe
xor
outsb
scas
inc
sub
cs
scas
dec
imull
ljmp
add
mov
scas
rcrl
sbb
scas
repnz
sbb
aas
lods
arpl
xor
scas
xchg
sbb
scas
shrb
xor
rcl
stos
xchg
and
repnz
mov
sbb
adc
int3
cli
loop
insb
pop
scas
rcrb
shlb
sbb
and
notb
into
jne,pn
movsb
xchg
insb
pop
scas
xor
adc
or
ret
xchg
out
test
test
test
mov
cmpsl
mov
pop
adc
mov
lods
pop
out
add
rorl
push
test
mov
jb
mov
scas
test
ljmp
loop
mov
jle
pop
xchg
lods
push
out
cltd
iret
inc
add
pop
cmp
mov
push
pop
cmp
std
mov
in
shll
dec
sbb
ja
pop
cmpsb
cmpsl
mov
test
and
insb
out
mov
xchg
or
repnz
add
cli
xchg
stos
std
push
adc
aas
jns
stos
pop
add
adc
and
test
mov
imul
aad
xchg
pop
pushw
sub
stc
fcompl
add
cs
mov
pop
lahf
call
dec
ss
outsl
xchg
mov
lahf
testl
leave
sbb
mov
mov
stos
ds
mov
roll
xor
rorl
xchg
popf
ficompl
mov
mov
pop
lods
lcall
fiaddl
dec
daa
xchg
cmp
mull
pushf
lret
ja
lock
ret
sbb
mov
add
imul
decb
mov
mov
or
stos
icebp
imul
xchg
jl
pop
lret
leave
mov
daa
rcl
jns
inc
cmc
sbb
repnz
mov
pop
in
and
dec
fstl
sarb
inc
xchg
mov
shlb
fstp
enter
shlb
flds
jge
xchg
cmp
mov
shrl
mov
jle
es
jmp
xchg
cmp
cltd
mov
push
scas
test
sbb
ja
jae
cmpsl
mov
incl
inc
daa
imull
dec
insl
rolb
sub
xchg
fisubs
rcr
jbe
lock
pop
mov
test
sarl
repz
rorb
or
rcr
repnz
or
ret
lret
mov
stos
cmp
fwait
mov
sbb
push
mov
adc
jns
xor
jecxz
xchg
jge
scas
leave
fxch
pusha
cld
out
push
out
pop
mov
loop
mov
sbb
addb
icebp
xor
mov
daa
jge
xor
test
cmp
inc
xchg
cwtl
lret
sbb
and
ror
test
stc
daa
pusha
stc
pop
mov
lahf
loope
js
sbbb
and
stc
leave
mov
pop
test
aas
leave
pop
shlb
pop
mov
lods
adc
xchg
and
movsb
pop
pop
test
iret
mov
mov
jp
outsb
or
push
rcrl
inc
inc
nop
xchg
stc
imul
iret
in
ljmp
pop
lret
cltd
outsb
mov
test
sbb
mov
sbb
adc
out
pop
test
xorl
icebp
xchg
rcrb
notb
dec
test
xlat
repz
xchg
gs
pop
fstl
cwtl
in
lahf
negl
cwtl
mov
in
mov
and
or
add
jge
jmp
push
dec
das
jge
pushl
cmp
mov
ret
cmpsl
sub
mov
xor
insl
mov
scas
orb
popa
xlat
jg
adc
or
fisubs
sarb
adc
and
jle
add
sbb
push
bound
sbb
sbb
les
ret
ret
imul
pop
adc
add
push
push
mov
test
arpl
scas
dec
jmp
scas
xchg
mov
stos
adc
add
sbb
sub
xor
sbb
inc
jbe
inc
mov
sub
inc
jle
adc
cmpsl
inc
push
add
aad
outsb
testl
imul
and
dec
cmc
xchg
mov
mov
mov
mov
int3
sub
repnz
into
push
out
adc
mov
push
cmpb
es
fmuls
pop
push
mov
xchg
mov
or
outsb
cli
dec
shl
hlt
xor
lahf
in
rcr
lcall
out
scas
inc
imul
insl
jno
cmp
xchg
outsl
cmpsl
lods
testb
push
dec
mov
std
fcomip
pop
enter
aad
jle
pop
dec
or
xor
in
loopne
out
mov
mov
in
arpl
mov
mov
ret
pop
lahf
mov
sub
rclb
xchg
add
outsb
sub
or
jecxz
daa
outsl
cmp
fidivs
repnz
sar
hlt
stos
push
sub
loop
outsb
loopne
loopne
push
scas
shl
adc
stos
popf
shrl
adc
jle
ror
push
notl
and
mov
das
cmp
testl
outsb
icebp
sbb
fsubrs
imull
push
pop
dec
enter
pop
add
adc
icebp
cmp
sbb
jno
push
loope
cmpsb
add
ret
stos
ret
dec
inc
out
sahf
iret
mov
lods
add
repnz
mov
lcall
lods
dec
notb
mov
adc
popf
pop
mov
inc
sahf
adc
int
pop
xchg
filds
or
insl
das
sub
sbb
inc
cmp
cld
mov
and
push
xchg
in
data16
call
jl
mov
mov
popa
mov
xchg
sar
cmpsb
xchg
mov
rcl
cmc
push
mov
or
sub
hlt
sub
push
std
xlat
xchg
cltd
ja
jns
cwtl
sub
rcrb
stos
xchg
repnz
in
fst
pop
or
aas
mov
scas
pop
push
cmp
or
jae
pop
add
mov
add
clc
adc
repnz
lahf
dec
xchg
icebp
jae
mov
sbb
mov
and
xor
mov
cmpb
cwtl
in
adc
dec
test
pusha
aas
inc
dec
movsl
inc
cld
sub
lcall
sub
aas
imul
sub
loope
fldenv
pop
and
push
push
xor
and
fwait
push
or
repz
addr16
stc
arpl
and
subl
popf
mov
adc
dec
mov
fsts
cmpb
inc
cs
test
lods
int3
push
ds
lods
ja
mov
xlat
nop
jmp
fidivrs
or
add
or
int
xchg
pop
dec
or
addr16
imul
add
adc
fimull
or
jp
dec
cmp
add
xlat
js
fimuls
call
insb
out
out
test
add
cmc
push
cmp
jbe
inc
leave
jp
movsl
and
xrelease
ja
mov
mov
push
xchg
add
sbb
ss
xchg
mov
and
popf
and
jo
jle
jmp
adc
insb
mov
aad
adc
out
cmpsl
es
jns
scas
xlat
rcr
push
aaa
inc
pop
int3
imul
mov
leave
jns
ss
bound
fimuls
fisubl
in
jae
aad
mov
jns
mov
jl
pop
js
popf
cmc
loope
jns
mov
imul
lods
jp
shlb
mov
jp
stos
jno
jno
hlt
cltd
jns
adc
inc
sub
mov
js
popl
or
mov
loopne
cld
std
jno
ret
inc
mov
test
pushf
movsl
popl
mov
cmp
shl
shr
jle
cmp
jp
out
enter
adc
cltd
mov
mov
jmp
adc
ljmp
out
inc
leave
shrl
sbb
adc
xchg
in
popa
rolb
inc
jmp
inc
ljmp
push
rclb
add
sub
cmp
fildll
test
jg
rolb
and
xor
push
jae
test
xor
mov
push
lods
ja
push
std
push
mov
add
mov
inc
sbb
jp
inc
pop
subl
imul
pop
mov
pop
aad
fimull
cltd
pop
add
enter
add
std
cld
and
mov
imul
clc
jb
std
imul
xchg
repz
sbb
std
xor
push
adc
addr16
mov
testl
or
out
rol
push
aaa
icebp
dec
jmp
sahf
repnz
pop
adc
cmpsb
sarb
sar
add
mov
push
jnp
fstl
mov
mov
and
jp
jns
xchg
movsl
jp
lods
ja
or
enter
js
xor
das
into
add
or
ret
mov
pushf
add
sbb
or
pusha
sbb
icebp
jmp
lock
adc
shrl
lods
inc
mov
rcrl
mov
loope
lahf
xlat
cltd
jae
cmc
shll
stc
imul
das
dec
adc
pushf
inc
and
outsl
fsubp
fldenv
insl
sahf
xor
or
mov
lock
cltd
pop
mov
xchg
lock
pop
outsb
negb
mov
fstps
popa
dec
adc
mov
jge
int3
fwait
mov
xchg
scas
mov
jo
mov
adc
sbb
inc
popa
mov
sbb
add
jecxz
movb
or
orl
mov
leave
sbb
cmc
cltd
vmovntdq
sbb
and
repnz
sub
jmp
aas
leave
mov
ror
lock
jge
ds
cmc
js
mov
cltd
mov
aam
mov
inc
mulb
xchg
roll
fadds
sbb
cltd
scas
or
hlt
into
cltd
nop
data16
scas
out
shl
subl
sbb
repnz
xor
nop
lahf
inc
cs
sbb
ret
fstps
adc
sahf
adc
dec
sub
shr
and
mov
out
stos
jno
cmc
push
adc
xchg
xchg
jge
jne
leave
in
movsl
cmp
mov
ret
sub
adc
sbb
add
push
mov
jp
test
fisttpll
dec
std
scas
dec
or
mov
push
in
int
push
sahf
xchg
or
mov
mov
pusha
nop
cltd
dec
xchg
push
push
pop
lret
push
and
inc
sahf
mov
cmp
decl
push
add
or
sbb
xchg
and
xchg
test
out
mov
xlat
or
repnz
rol
fdivrp
inc
loope
add
mov
cmpsb
or
mov
mov
adc
pop
lret
sub
addr16
push
adc
in
cli
sbb
sbb
add
aad
loop
or
adc
out
ret
or
mov
fnstcw
dec
dec
mov
mov
pop
loope
movsb
jmp
iret
mov
add
ret
mov
insl
xor
pop
aad
adc
mov
test
jne
pop
jecxz
popf
mov
push
push
xor
pop
scas
xlat
gs
int3
fsub
jns
xchg
bound
movsl
mov
xchg
adc
add
insb
pop
sub
stc
push
call
rolb
pop
inc
cltd
pop
fcoms
arpl
xchg
jge
or
lods
mov
outsl
dec
xchg
xchg
clc
popf
stc
fdivl
adcl
sbb
inc
ljmp
stc
or
xlat
mov
mov
in
sbb
jp
inc
mov
pop
adc
cltd
arpl
adc
xchg
xchg
shlb
enter
inc
cmp
sbbl
adc
loopne
roll
popa
dec
push
repnz
lods
lea
or
hlt
sbb
xchg
or
mov
sub
mov
stc
xchg
mov
xchg
xor
stc
push
stc
stc
jns
mov
stc
dec
and
cmc
rol
sbb
mov
in
stc
rcrl
lods
stc
mov
mov
sbb
stc
imul
xchg
mov
sbb
mov
stc
lahf
xlat
dec
sahf
or
push
lods
jno
cs
adc
je
mov
jns
sub
les
sbb
rcr
mov
adc
es
clc
mov
xchg
add
hlt
push
stc
int
ljmp
fnstenv
ficomps
mov
out
adc
mov
mov
hlt
icebp
xor
jb
js
stc
ficompl
cwtl
lret
in
push
je
or
rolb
jg
xchg
mov
sbb
fnstcw
add
repnz
hlt
pop
fmuls
lds
into
jnp
xor
xchg
inc
inc
divl
stos
insb
mov
push
jnp
cmpsl
inc
xlat
shll
jp
ret
cmp
adc
lret
sbb
xchg
fcomps
mov
cmp
mov
sbb
xchg
adc
push
and
mov
mov
mov
xor
clc
cmp
adc
mov
mov
jne
sbb
fnstenv
je
in
in
popf
sbb
dec
xchg
and
pop
cmp
stc
pop
mov
add
sub
je
fidivl
cmp
push
cmp
icebp
enter
mov
push
into
cmpsl
pop
jnp
xor
ffree
stc
fwait
pop
add
std
pop
lds
je
adc
sbb
mov
or
inc
sbb
aas
xlat
inc
xor
hlt
fs
jb
push
into
xor
aam
orl
mov
xchg
sbb
lea
orl
inc
rep
xor
stc
fistl
cmp
sbb
sbb
fyl2xp1
pop
popa
fcoms
gs
sbb
sbb
mov
cmp
xor
add
js
fdivrp
push
sbb
lods
mov
mov
and
jb
lds
flds
push
pop
jb
aaa
jb
sbb
sbb
xchg
pushf
push
add
mov
push
sub
add
mov
out
cmpsb
and
sbb
jns
push
stc
cld
mov
adc
jns
stc
mov
xor
cmp
lret
inc
shll
and
loopne
xor
rcrb
or
cmp
test
cltd
inc
ret
pop
lcall
cs
enter
sbb
mov
fld
xor
mov
stc
ds
mov
jne
fiaddl
repz
xchg
mov
add
gs
mov
sbb
je
jb
stc
inc
lds
sbb
stc
mov
int3
push
jns
jo
js
dec
stc
xlat
sbb
call
pop
jae
fnstenv
iret
xchg
mov
clc
stc
dec
push
rcrl
clc
xlat
sbb
push
sbb
arpl
add
dec
cld
sbb
dec
push
add
jge
fdivr
cltd
pushf
xchg
jno
lcall
xlat
sbb
sti
xchg
dec
mov
pusha
adc
repz
xor
xor
test
or
push
lcall
clc
mov
inc
rcr
or
rcr
xchg
movsb
fsubrl
rolb
lods
call
adc
mov
pushf
push
sub
fdivrs
or
addr16
stc
xchg
sbb
cld
sahf
mov
repnz
xchg
cli
xor
fbld
mov
dec
mov
jns
lcall
fists
push
or
inc
lret
sbb
aam
iret
or
push
cmp
in
popf
sbb
stc
xchg
ja
xor
repnz
stc
jne
gs
lock
popf
stc
mov
push
cmp
sbb
aam
xor
stc
call
jl
hlt
stc
inc
fdivrs
pop
shl
rclb
mov
or
jne
test
repnz
add
js
or
clc
into
push
sti
mov
cwtl
loop
or
stc
cmp
jns
jno
adc
stc
jae
push
sbb
scas
xor
stc
inc
xchg
push
sub
mov
flds
ja
jns
imul
repz
fdivs
mov
sbb
enter
fwait
adc
movsb
jns
xchg
adc
mov
xor
stc
ficomps
test
adc
lock
jno
inc
mov
sbb
xor
xchg
arpl
sarl
xchg
jo
or
stc
jg
call
fistl
sbb
ret
xchg
inc
lea
xor
stc
bound
loop
inc
adc
stc
popf
stc
xchg
addr16
xlat
adc
xor
mov
aas
adc
cwtl
sub
cld
mov
jb
adc
cli
jne
add
ss
mov
je
stc
jne
insl
repz
mov
mov
xor
mov
xchg
insb
or
fldenv
and
lret
movsl
fwait
or
cmp
repnz
xchg
ja
int
fistps
stc
add
push
mov
cmc
fadd
xor
ljmp
xchg
cltd
stc
iret
mov
xor
push
mov
pop
rcll
test
test
mov
mov
lret
std
jae
fst
mov
mov
cltd
fstpl
jge
ret
adc
test
addl
test
in
xor
jb
pop
aam
xchg
outsl
into
and
jne
insl
out
mov
rcrb
aaa
mov
sahf
stc
jnp
fdiv
jno
in
pusha
jns
rcr
loopne
xchg
push
cs
jb
dec
sar
les
mov
outsl
je
jb
mov
les
jns
xchg
mov
push
xchg
push
adc
mov
orb
push
mov
movsl
jae
js
cmp
sub
cmpl
repnz
ret
dec
pop
loope
mov
icebp
imul
cld
cwtl
mov
and
mov
fidivs
mov
frstor
mov
dec
inc
xchg
xlat
mov
rolb
sub
ficoms
push
mov
das
bound
iret
xorl
arpl
rolb
push
popa
cli
mov
fisubrl
arpl
pop
sbb
fnstenv
push
inc
cmp
std
stc
mov
pop
mov
pop
mov
stc
xchg
mov
xor
icebp
dec
hlt
sahf
xchg
add
push
add
int3
mov
xor
push
les
mov
adcl
clc
je
stc
mov
mov
rcr
aas
mov
mov
push
lea
js
adc
clc
adc
push
inc
cwtl
and
pop
stc
push
mov
sahf
dec
dec
xchg
arpl
lea
lcall
test
and
ret
sbb
pop
in
add
inc
push
data16
loopne
testb
pop
push
outsl
in
lret
int
aad
clc
dec
stc
cmp
stc
push
pop
add
cmp
clc
mov
sar
fistl
jbe
add
cmp
rcrb
adc
shll
or
popf
xchg
push
cmpb
sbb
xor
das
ret
cmp
xor
lcall
pop
mov
mov
or
xor
int3
shlb
ja
mov
hlt
rclb
push
stc
lock
adc
dec
sahf
adc
adc
les
pusha
js
xchg
dec
sbb
mov
shlb
mov
xlat
repz
adc
pop
xchg
push
pop
mov
jg
push
jmp
xchg
dec
stos
test
ja
mov
test
ss
dec
cmp
sub
nop
dec
mov
daa
sarl
shlb
sbb
xor
pop
xor
clc
sbb
cltd
scas
stc
adc
dec
sbb
xor
or
inc
enter
pop
xchg
pop
push
stc
dec
scas
mov
push
aas
push
andl
sbb
xchg
sbb
popf
orb
jbe
jle
mov
sbb
stc
lock
aad
pop
fidivl
dec
push
or
cltd
insl
pop
repnz
js
lahf
stc
push
jl
scas
and
sbb
lahf
stc
xchg
mov
jnp
xor
stc
pushf
stc
mov
adc
sub
repz
push
enter
les
fadd
xchg
push
mov
mov
repz
stc
push
mov
fisttps
sarb
jns
js
sbb
xor
xchg
xlat
fnstenv
pushf
clc
xchg
inc
outsb
sub
jb
std
stc
xor
sbb
daa
xchg
test
push
dec
inc
pop
mov
in
cltd
in
in
cmp
test
cld
mov
mov
shl
neg
push
stc
xlat
push
and
xor
inc
pop
sbb
cmp
imul
in
or
das
inc
xchg
fstpl
stc
cmpb
clc
sub
xchg
clc
sbb
xor
sbb
iret
js
les
stc
pop
xor
mov
mov
shlb
test
xchg
mov
leave
cmp
stc
cmc
and
fstpt
mov
clc
shll
xchg
iret
xchg
mov
rolb
pop
sbb
sbb
add
sbb
xchg
andl
inc
add
iret
xchg
divl
xchg
mov
loopne
cltd
clc
and
pop
lret
in
xor
xor
xlat
jb
xchg
iret
repnz
adc
in
or
fnstcw
fxtract
stc
inc
notl
mov
jnp
lret
jl
xor
stc
fistps
aaa
cwtl
test
flds
mov
and
mov
mov
inc
ja
mov
sarl
repz
insb
push
hlt
dec
popa
cwtl
lock
push
mov
ret
push
mov
rorl
enter
xchg
jns
push
push
cltd
je
mov
sbb
mov
aad
mov
jo
pushf
jns
mov
neg
xchg
xlat
sbb
aam
mov
hlt
sbb
enter
push
pop
cmp
cmp
test
mov
push
hlt
inc
xor
fadds
mov
jb
mov
lods
xlat
cmpl
stc
fidivl
mov
sahf
mov
negl
push
cltd
lods
stc
inc
sbb
jne
je
mov
sbb
bound
sarb
fsts
mov
push
in
push
xchg
fnclex
mov
call
test
jge
fs
jns
push
flds
adc
je
pop
cmc
xlat
addr16
stc
cmpsl
mov
mov
and
cld
and
gs
xchg
mov
stc
pop
stc
cld
enter
mov
xor
clc
mov
out
xor
mov
arpl
shlb
xchg
clc
pop
clc
sbb
xor
sbb
fcomp
push
stc
fs
xchg
test
insl
pop
push
orl
pop
stc
les
sub
push
pop
sbb
sub
ficompl
cmp
fnstcw
push
mov
aas
dec
sahf
xor
insb
jb
or
xor
mov
mov
sbb
int3
rcll
out
pop
cld
mov
pop
jne
clc
jne
jge
push
cld
push
aaa
popf
sbb
mov
loopne
je
cmp
cmc
addr16
xor
sbb
in
stc
stc
inc
adc
xor
lea
cmp
jb
cltd
shrb
mov
cld
mov
mov
cltd
sbb
stc
mov
jne
mov
loopne
xchg
fisubs
xchg
mov
mov
fnstenv
cmp
jbe
push
cmc
aas
mov
and
sub
mov
push
iret
pop
sbb
pop
rcrl
out
sub
xor
dec
and
shlb
inc
mov
cmc
bound
xchg
stc
inc
cmc
xchg
push
sbb
out
pop
je
fldcw
aaa
dec
stc
xchg
push
push
pushf
dec
xor
sbb
push
or
popf
sbb
sahf
or
ds
xchg
sbb
stc
sbb
stc
jl
jb
xor
stc
pushl
xchg
fidivrs
das
and
adcl
lods
mov
inc
sbb
mov
call
addr16
jbe
mov
xchg
mov
sbb
fdivs
movsl
stc
gs
sbb
test
add
scas
rcl
inc
ret
xor
sbb
sbb
lret
xor
mov
int3
cmpsl
jae
ret
push
sbb
cltd
jb
mov
test
jne
ja
sbb
imul
nop
jnp
mov
lret
jbe
mov
push
test
pop
fisttpl
push
dec
call
jb
pusha
sbb
mov
stc
ret
push
inc
add
jno
mov
in
test
xchg
jl
sbb
sbb
jg
jno
sbb
jb
cmp
fnstcw
ja
adcb
xor
push
xlat
jns
cs
repnz
push
fsubrl
xchg
add
test
or
push
sbb
inc
and
jp
sbb
ljmp
rcll
stc
xor
mov
jnp
pop
xor
push
cld
push
xchg
popf
sbb
sbb
jnp
xlat
stc
repnz
rolb
sbb
pop
cmp
adc
jl
xorb
or
jg
mov
push
inc
adc
rclb
pushf
adc
stc
enter
sbb
fs
hlt
mov
jae
stc
fistpll
je
add
hlt
flds
push
adc
xor
jns
fnsave
xlat
pop
lock
out
test
xor
xor
sbb
aam
js
jns
jge
adc
sbb
fwait
sbb
sbb
xor
sbb
rcrl
xchg
mov
sbb
int3
inc
movsl
pop
into
jo
mov
jo
mov
jge
or
xor
call
addr16
stc
out
sbb
rorl
cwtl
lea
divl
ja
loopne
fadds
mov
cli
test
fcomi
dec
sti
push
xor
dec
xor
xorl
xlat
mov
or
add
es
out
je
add
lret
pop
daa
mov
adc
jbe
pop
or
and
stc
jo
cmp
hlt
negb
data16
adc
mov
inc
aas
lds
out
xchg
stc
fbstp
adc
pop
fiadds
imul
inc
fdivl
mov
push
cmp
adc
sbb
mov
adc
cmc
sbb
mov
or
adc
aad
cmp
es
mov
push
pop
int
sbb
fiadds
mov
fisubrl
adc
push
sbb
js
sar
or
pop
xchg
mov
push
mov
xchg
push
xchg
xor
pop
divb
sarb
adc
jne
iret
mov
mov
dec
mov
jns
xor
jne
add
imul
cmpsb
stc
inc
test
lcall
and
fidivs
pop
push
sbb
sahf
or
push
iret
jno
mov
out
scas
cltd
xor
mov
addr16
sbb
jns
mov
xlat
cwtl
jl
push
pop
fcomp
pop
xor
pop
push
imul
xchg
stc
xor
mov
sub
jb
sbb
decl
and
xchg
aad
ljmp
jne
enter
bnd
loop
movsl
out
data16
lock
push
stc
mov
cld
jo
mov
push
mov
fucomip
imul
mov
sub
xchg
mov
scas
cmpsb
aaa
lea
rclb
into
arpl
insl
or
je
inc
stc
xchg
js
jg
jno
jge
and
jb
mov
inc
enter
stc
mov
arpl
xor
jne
lret
mov
je
xor
arpl
outsl
lret
inc
das
aad
adc
sahf
mov
mov
sahf
pop
inc
push
repz
cmp
mov
fsubs
sbb
xlat
imull
rcrb
je
stc
int3
roll
je
xchg
ja
push
je
push
push
inc
xchg
adc
inc
sbb
or
or
rorb
cmp
movsl
mov
cmpsl
sub
pop
imul
fldcw
jl
adc
adc
pop
adc
pop
into
xchg
jle
xor
js
or
imul
stc
cmp
pop
jl
repnz
jecxz
dec
pop
shlb
lahf
stos
inc
pop
xor
les
stos
cwtl
hlt
es
nop
xchg
mov
push
imul
xlat
stc
ss
mov
test
popa
push
add
jns
lret
scas
jne
popf
in
fadds
mov
jne
repz
fs
in
adc
sbb
cmp
fld
repz
pop
hlt
push
push
xlat
cltd
mov
scas
mov
dec
jle
rcrb
mov
repz
push
hlt
gs
jb
ret
xlat
jb
sbb
xchg
xlat
push
sub
je
xchg
fldl
mov
mov
fldcw
cmc
jae
flds
bnd
mov
cmpsl
jbe
les
xor
fcmovb
aam
cltd
inc
cmp
clc
iret
notl
sahf
xor
repz
push
xchg
fidivs
hlt
or
xchg
mov
btc
jge
lret
ja
int3
push
cltd
jb
pop
or
dec
lcall
ja
xlat
out
xchg
lds
mov
cmp
test
mov
xchg
cmpb
cmc
aad
add
imul
cmp
mov
and
std
add
sub
aad
ret
jns
xor
xchg
mov
inc
xchg
in
jne
mov
cwtl
fbstp
inc
not
cmp
rclb
test
jle
mov
stc
add
mov
shlb
pop
hlt
data16
int
dec
cltd
xchg
pop
sub
push
xchg
adcl
js
adc
jae
aad
jns
rorl
call
fldl
xchg
sbb
sbb
mov
ja
xchg
sbb
cmp
cmp
fwait
push
jbe
xor
sbb
sbb
hlt
or
sahf
cmpsl
pop
push
xor
pop
cmp
sahf
in
cmp
jne
xor
xchg
jb
sar
mov
xchg
inc
inc
sbb
cmp
repnz
ja
adcl
lahf
xchg
cmpl
adc
pop
js
movsl
stc
jne
cld
jne
cmp
rcr
jo
xchg
test
movsl
xchg
jne
in
lds
xchg
rcll
lock
clc
sbb
mov
pop
sbb
stc
shl
add
xor
adc
sbb
jae
std
lods
xlat
dec
mov
scas
stc
ret
push
xchg
cld
aaa
cld
lea
rcr
shll
das
js
gs
flds
cltd
xor
or
xor
out
jae
stc
adc
adc
push
add
test
mov
adc
fcomps
push
ret
sbb
stc
mov
xchg
lea
f2xm1
push
pop
bound
sbb
repnz
cld
push
adc
xchg
divl
cltd
xchg
fisubrl
mov
in
sbb
stc
jae
rclb
xchg
xchg
in
stc
rcrb
mov
pop
pushf
sbb
stos
xchg
insb
aad
push
xor
jg
mov
mov
xchg
cmp
jno
aaa
push
pop
push
add
mov
mov
stc
jb
cmp
mov
sbb
stc
mov
fsts
add
fdivrs
call
xchg
jb
pop
out
push
div
and
fsubrs
mov
jb
jne
mov
int3
cmc
push
sub
aaa
int3
stos
push
out
xchg
jge
out
xchg
jnp
xlat
sbb
imul
jae
xacquire
sti
push
clc
aaa
fdivl
nop
jbe
clc
xchg
pushf
jb
cmp
jne
inc
sbb
gs
cld
push
xlat
stc
mov
jne
pop
insb
add
incl
push
cmc
stc
cmpb
addr16
lds
mov
stc
jle
mov
sub
out
mov
mov
pop
stc
sarb
cmpb
clc
dec
push
int3
stc
mov
cmc
in
cld
dec
cltd
clc
xor
je
les
into
jns
test
in
les
mov
lds
fistps
lds
xchg
imul
cmp
sbb
lret
aad
shl
xor
xchg
mov
xchg
pop
lret
or
xorb
rorl
sahf
sbb
fdivrs
jb
aas
adc
sub
jns
shll
cmp
rcrb
fnstcw
xor
shl
lock
js
stc
xorb
call
fwait
push
clc
jb
flds
idivl
pop
aam
mov
pop
mov
xchg
cmp
xorl
inc
rorl
xor
inc
adc
sbb
fldlg2
xchg
jbe
mov
sbb
sub
pop
sbb
xchg
jbe
call
xor
rcrb
mov
dec
mov
clc
pop
cld
ja
xchg
push
sti
stc
mov
push
xor
stc
jb
xchg
add
mov
hlt
adc
jae
rclb
cmc
scas
xor
mov
js
sub
push
repz
ret
mov
jb
push
stc
sbb
stc
ficoms
mov
out
pushf
stc
add
xchg
ret
hlt
sbb
mov
xor
push
push
sbb
js
dec
imul
pop
fistpll
dec
xchg
mov
mov
or
inc
add
dec
sbb
jns
jns
jl
adc
iret
jno
mov
sub
inc
cltd
inc
sbb
pop
aad
jne
scas
dec
xor
mov
stc
rorl
movsb
or
xor
movsb
or
data16
fnstenv
xlat
stc
hlt
and
ss
xor
cld
je
cmp
xchg
int
inc
cmp
les
rolb
shlb
mov
out
dec
mov
mov
stos
or
push
inc
jp
xchg
jae
loopne
rcrl
xor
insb
mov
xchg
pop
fistpll
xlat
xchg
addl
jg
jo
ja
xor
mov
sbb
test
xchg
sbb
fxtract
pop
mov
sbb
stc
pop
stc
arpl
push
mov
jg
fistl
adc
popf
fnstcw
cmp
mov
repz
mov
xchg
inc
sar
sbb
jae
jbe
sahf
idivb
adc
leave
sbb
movsl
add
int
aaa
xor
and
cmp
push
aas
mov
sbb
popf
pop
hlt
fcomp
push
les
popf
sbb
xchg
cld
lcall
loopne
fnstenv
aad
xchg
inc
fdivs
insw
sti
push
ret
js
cld
xor
push
pop
fcom
cwtl
jb
sbb
rcrl
int
pop
aad
push
xor
add
xchg
xchg
xchg
push
repnz
xchg
test
mov
mov
lock
jno
int3
adc
rcr
js
sbbl
jns
test
jne
jb
push
xor
inc
mov
push
adc
sti
jns
sbbb
js
jne
mov
xor
add
jae
sbb
fchs
sbb
jb
pushw
adc
shlb
andl
stc
int3
movsl
jmp
mov
push
jbe
out
sarl
stc
hlt
jne
add
xchg
xchg
jne
inc
jo
mov
mov
xchg
cld
inc
sbb
xchg
stc
clc
jne
into
xchg
jnp
iret
clc
xchg
sbb
aam
adc
pop
adc
or
inc
sbb
inc
xorb
rcll
xchg
xchg
stc
sub
hlt
cmp
das
stc
xlat
stc
arpl
mov
jae
lret
stos
fstp
add
cld
pop
jb
push
iret
pop
mov
sbb
push
jae
xor
stc
sub
fcomp
mov
fwait
sbb
sbb
fnsave
lcall
fdivr
stc
fiaddl
cmc
jns,pn
cld
xchg
lock
pop
add
arpl
ficoml
popf
xchg
fisubrs
dec
mov
aaa
adc
int
dec
sbb
lret
mov
lahf
push
adc
adc
inc
sbb
vcvttpd2dqy
sbb
xor
push
fldenv
or
leave
adcb
inc
mov
repz
in
gs
dec
cmp
xor
xchg
je
xor
xor
stc
fdiv
or
or
fistps
hlt
adcb
test
sti
shll
jle,pn
insb
mov
fnstenv
or
xor
mov
sbb
jns
xor
clc
sbb
das
mov
push
iret
ficoml
mov
fimuls
mov
cmc
xchg
aam
sbb
xor
jb
stc
sar
sbb
xchg
or
jns
les
out
les
pusha
stc
hlt
stc
mov
fidivs
xchg
mov
fbstp
pop
sarb
shll
push
jno
or
jbe
fcmovb
sbb
insl
xor
cmp
es
mov
repz
pop
mov
fldcw
cmp
mov
sbb
sbb
shrl
adc
mov
sbb
lock
fdivr
sbb
fistps
cmpsl
rcrb
jns
or
adc
push
hlt
mov
stc
jge
aaa
cld
jb
xor
sbb
mov
xor
stc
sar
imul
rcrl
xor
cld
xor
fnstenv
stc
inc
fdivl
pop
ja
fnstenv
stc
inc
fcomps
rcrb
mov
jge
mov
fxch
add
out
jl
xor
sub
adc
adc
inc
push
in
fs
mov
fwait
jns
hlt
xchg
jge
aad
jns
cmp
enter
sbb
sbb
jbe
xchg
stc
enter
gs
clc
sbb
xchg
pop
stc
loopne
shl
push
mov
outsl
xor
arpl
stc
iret
aam
jp
ja
xor
push
mov
aam
mov
les
stc
sbb
inc
je
push
jge
push
andl
or
hlt
mov
fdivl
pop
rolb
jge
js
jnp
js
jne
mov
adc
sub
cmp
adc
ss
xchg
sbb
fidivrs
hlt
mov
roll
cmp
sar
sbb
in
push
fidivs
fprem
sbb
in
ffree
rclb
jns
bound
cmc
mov
stc
enter
ja
ds
pop
mov
cmc
jbe
jb
or
mov
inc
or
pop
sahf
xor
adc
xor
jbe
push
xlat
cmc
mov
movsb
rcr
ja
push
push
hlt
mov
cmp
sbbl
add
fdiv
xchg
inc
push
xlat
jb
stc
xor
mov
lock
dec
sbb
loop
gs
std
xlat
into
push
out
iret
cmc
mov
mov
inc
stc
fistps
cld
and
aam
sub
or
jb
cwtl
dec
dec
jns
fstpl
pushl
xor
ret
mov
ror
ja
adc
xor
divl
sbb
int3
mov
jb
push
divb
cltd
ffreep
stc
mov
iret
nop
ret
neg
sbb
inc
cltd
cmc
mov
stc
fistps
repnz
xor
xor
xor
or
cld
rcrb
add
hlt
sbb
push
cmpsb
and
cld
cmp
xor
imul
xor
movsl
sbb
jge
mov
test
daa
movsl
ja
lcall
sbb
add
cmp
push
jge
stc
ficoms
cltd
repz
fcmovu
hlt
push
sbb
xor
add
aaa
bnd
cltd
mov
pop
cmp
push
cwtl
jge
jg
cmpsl
xor
lea
xchg
cltd
fidivrl
sub
jne
inc
jbe
daa
adcl
jg
test
cs
xor
cmp
inc
aaa
sbb
xchg
stc
enter
rcr
outsl
cmp
inc
rclb
stc
enter
push
fistpll
push
test
xor
jae
xchg
je
push
mov
and
clc
in
sarl
sarb
mov
push
fidivl
adc
xchg
sbb
cmp
aaa
xor
or
sbb
sbb
xchg
sbb
xchg
xor
jae
jb
sbb
sub
loopne
sbb
bound
xor
fldenv
aaa
xor
into
jbe
push
mov
iret
add
test
xor
adc
push
jb
mov
stc
jo
or
sbb
int3
lods
xchg
call
cld
hlt
dec
sbb
pop
test
mov
mov
cs
sbb
sub
pop
idiv
inc
call
les
push
fwait
sarl
add
pop
mov
sbbl
xor
sbb
jae
adc
push
xchg
mov
and
push
xlat
cltd
mov
pop
adc
lret
dec
sbb
rcrb
sub
or
fmulp
stc
xor
add
imul
jb
repnz
outsl
dec
jne
jns
jns
sbb
fcoms
inc
xchg
in
test
cld
jae
sbb
jb
pop
cltd
subl
fstps
and
dec
enter
mov
inc
xor
ja
pop
fldenv
cltd
inc
mov
mov
cmp
sahf
push
mov
push
outsl
in
fdivl
in
mov
shl
push
hlt
ja
sarb
cld
xchg
aaa
xchg
xchg
cmp
dec
jbe
idiv
and
test
iret
js
inc
shlb
xor
adc
xor
aam
xchg
and
fdivp
xor
lock
mov
scas
popa
xchg
fstpl
inc
fstl
inc
jge
fistpll
jbe
cmp
xlat
aas
jns
cmp
fstpt
mov
sub
fsts
popf
push
addr16
cmp
in
mov
stc
aam
fxtract
cltd
lods
js
adc
cmp
xor
cmp
iret
xor
lret
mov
mov
and
hlt
mov
rcr
jg
dec
cltd
mov
dec
jne
stc
dec
xor
loopne
jl
inc
jp
js
stc
out
test
stc
sub
cld
xor
jno
enter
in
fists
jge
xchg
outsl
fidivl
push
sbb
call
les
mov
push
push
cld
xor
sub
xchg
filds
xchg
out
test
pushf
mov
push
jg
cmpsb
dec
clc
aaa
hlt
cmpsl
clc
mov
int
cmp
xor
xchg
fwait
stc
sti
pop
lret
and
inc
cmp
lcall
in
int
mov
mov
popf
cltd
iret
lds
xchg
cltd
fistpl
test
int3
push
xor
mov
sub
shrb
push
je
repz
test
pop
stc
jg
lds
mov
rcl
fistps
adc
cmc
mov
scas
js
js
lret
lds
loopne
addr16
fcoml
add
cmp
sub
adc
jge
rorl
jno
mov
js
scas
cwtl
rclb
sub
xor
jb
shl
xchg
mov
cmp
pop
xchg
jp
jns
mov
pop
das
mov
sbb
sar
adc
aam
je
out
stc
jb
adc
xchg
sbb
push
pop
jne
into
and
inc
out
mov
in
push
xchg
sbb
sti
push
jae
adc
ja
fisttps
push
inc
out
adc
push
xor
jl
push
shlb
mov
push
pop
jge
jns
stc
loopne
js
or
imul
stos
xor
sahf
sub
std
int3
fs
or
mov
mov
add
mov
fdivl
mov
rcl
jb
mov
shlb
pop
fists
int
fsubl
aaa
xchg
repz
cltd
aaa
stc
cmp
jae
and
cltd
das
ja
adc
int3
test
xlat
sbb
iret
push
adc
mov
fsubl
xorb
mov
fnstsw
cwtl
shlb
dec
adc
push
jbe
fwait
rclb
jbe
push
orl
jb
mov
or
mov
test
jge
mov
scas
sbb
hlt
xor
scas
push
cmp
lret
pop
push
lock
jne
fsubrs
fstpl
flds
js
ljmp
jg
les
int3
sti
mov
ret
xor
mov
pushf
sbb
pop
cltd
das
rclb
out
push
mov
fdiv
xor
fldcw
js
xchg
enter
fidivl
stc
and
jne
sub
jae
ficompl
outsl
mov
les
rcr
ljmp
flds
dec
test
test
fidivl
sbb
jbe
outsl
and
inc
ds
lds
xchg
cmp
push
ds
jns
jb
jb
push
xorl
fwait
stc
iret
cs
insl
dec
mov
shl
jns
popf
cltd
cmp
js
lret
cmp
aad
pop
xchg
arpl
mov
aad
jle
pushf
xor
add
xchg
aad
lahf
hlt
mov
repz
cwtl
push
or
cmc
idivl
sahf
fadd
shlb
je
push
into
popa
pop
movsb
rcrb
es
cmp
cltd
cmpsl
lds
stc
or
dec
push
clc
test
or
mov
jl
adc
xchg
pushf
push
fsubrl
lock
outsl
push
mov
hlt
lds
repnz
push
stc
xorl
xor
movsb
bound
adc
int3
cmp
jne
stc
addl
in
xor
divl
or
out
cmc
jne
movsl
or
xlat
add
mov
xchg
popa
stc
sub
mov
adc
cltd
lret
xor
jns
push
aas
adc
mov
stc
dec
lds
mov
ss
sbb
mov
and
daa
sub
ss
mov
xchg
fildll
dec
push
stc
sub
mov
jo
enter
xor
push
shlb
push
fisubs
call
clc
jb
cmp
jns
push
mov
fstps
rclb
jns
mov
xchg
xchg
loopne
jb
js
lods
stc
rclb
adcl
jne
mov
shrb
sbb
sbb
sbb
sub
les
insb
pop
mov
cmp
sbb
mov
fidivs
xor
sbb
xor
sub
xchg
scas
fcmovnbe
jnp
jg
jg
push
je
stc
xchg
fidivs
push
inc
pop
mov
jne
sub
lret
je
sub
stc
ret
addr16
pop
inc
jnp
enter
mov
xchg
fildll
pop
ss
lcall
mov
js
int
out
push
cld
jge
mov
add
andl
enter
into
add
push
pop
stc
push
sbb
xor
rclb
mov
mov
mov
ficomps
mov
aaa
dec
xor
pop
push
mov
push
stc
sti
pop
cmp
inc
mov
xor
mov
pop
stc
inc
fcoml
inc
repz
mov
cmc
arpl
push
sub
jb
enter
or
je
push
iret
and
sbb
sbb
inc
lds
sbb
mov
inc
stc
in
pop
stc
pop
sbb
xor
inc
xchg
das
xor
ret
jae
push
sar
sbb
cmpsl
xor
mov
xchg
cld
jns
test
jl
sbb
test
hlt
lds
jg
fdivr
cld
mov
addr16
mov
sarl
sarl
push
test
movsb
cmp
stc
arpl
push
jg
sbb
xor
xchg
xor
sar
mov
xor
hlt
fnstcw
xor
mov
repnz
pop
iret
jle
xchg
test
jge
testb
cmp
sbb
or
adc
xchg
ja
jbe
pop
pop
pop
in
int3
push
dec
ror
xor
and
gs
sbb
addr16
stc
movsb
mov
mov
push
in
sar
mov
jb
xor
xchg
inc
mov
sbb
arpl
sbb
mov
aas
stos
mov
pop
jns
int
cmp
pop
xchg
push
jle
sbb
mov
pop
push
pop
jg
fs
jge
xlat
sbb
movb
adc
divl
pop
lea
sti
push
xor
lea
sbb
lret
jnp
stc
lock
enter
mov
ret
jbe
xchg
sbb
xchg
and
push
fcoms
push
jnp
daa
fcompp
jg
mov
jg
ret
xchg
iret
cmc
xchg
push
lods
ja
fidivl
fcmovu
cmc
out
sbb
jle
push
or
mov
lcall
push
push
mov
dec
sbb
pushf
push
push
mov
out
inc
adc
xlat
idivl
int
inc
pop
push
inc
pop
mov
sub
flds
imul
ss
lods
sahf
mov
cs
mov
pop
ficoml
sbb
clc
sbb
popf
sbb
pop
mulb
xchg
cwtl
xchg
xor
ficoml
lcall
call
push
jne
fisubrl
mov
arpl
movsb
rcl
pop
ja
addr16
mov
aad
mov
faddp
xchg
and
xchg
pop
sub
mov
ss
xlat
outsb
js
sub
jbe
inc
aas
and
test
pop
push
add
adc
test
rol
xor
cltd
stc
adc
loopne
xchg
gs
add
aaa
cmp
lods
push
fcomps
mov
loopne
aam
call
loopne
xchg
mov
lcall
push
sub
add
cmc
mov
dec
fists
mov
js
lret
cmpsl
ficoml
push
mov
pop
mov
push
fwait
xor
stc
mov
je
push
xchg
cmp
pop
std
push
xchg
push
lret
jbe
jns
out
gs
jno
loopne
mov
sbb
xor
push
inc
adc
pop
adc
and
fcmovb
shlb
mov
cmpsl
cmp
subl
cmc
lcall
stc
jne
pop
or
vcomiss
aam
xchg
mov
lcall
cmpl
cli
adc
mov
js
loopne
test
lahf
xchg
clc
sbb
mov
push
mov
jl
xchg
and
add
mov
out
lds
fcmovb
push
jb
stc
lea
pop
mov
fldcw
xor
mov
mov
xchg
ja
clc
lock
jb
ret
xor
jne
inc
nop
xchg
jmp
mov
stos
jbe
push
mov
sbb
sub
xor
jne
jb
stc
dec
flds
ja
cltd
cld
jge
and
xor
popf
sbb
stc
jb
rclb
pop
lcall
pop
xchg
in
mov
jae
das
mov
and
sbb
call
mov
lods
aaa
stc
addl
movsb
hlt
mov
push
stc
jl
mov
push
cld
divb
xor
imul
mov
cs
sbb
les
push
subl
insb
repnz
in
cmp
push
mov
movsl
sbb
lcall
movsb
xchg
lock
cwtl
lock
xchg
ret
xchg
lahf
fnstenv
jae
fnstcw
pop
pop
aad
sbb
dec
xor
jb
clc
cmc
push
mov
jns
sbb
insb
push
jg
iret
clc
jg
or
arpl
push
mov
enter
inc
shlb
inc
dec
shl
jbe
xor
sarl
sub
arpl
idivl
dec
push
push
hlt
cmc
leave
push
jnp
mov
addl
ljmp
dec
mov
pop
ret
and
adc
adc
out
xlat
mov
adc
fld
push
cld
repz
stc
pushf
fnstenv
rcrl
std
clc
rclb
cmp
mov
inc
sbb
mov
stos
ss
jns
rcll
mov
and
push
js
sahf
xchg
iret
ds
sub
sbb
push
xchg
jbe
adc
xchg
js
jnp
add
xorl
jns
inc
fstps
cmp
pushf
pop
js
lock
movsb
xor
shll
jae
outsl
inc
xor
repnz
xor
orl
stc
xlat
sbb
sbbl
cmp
mov
mov
subb
int
fimuls
push
adc
stos
xchg
mov
xor
jb
sbb
and
test
fimull
add
jecxz
test
in
insl
inc
jb
dec
push
das
les
dec
mov
xor
push
enter
les
xor
jb
jb
fnstenv
xor
push
mov
or
das
or
stc
das
ds
mov
iret
inc
ds
mov
fldenv
mov
cmp
cmp
jb
stc
add
jns
insl
cmpsb
push
sub
in
mov
lret
mov
cld
jno
mov
shlb
movsb
jle
sub
jg
mov
push
or
jp
mov
hlt
rcr
in
sbb
pop
pop
jg
mov
push
mov
mov
stc
jnp
and
xor
dec
add
fcmovu
mov
int
pop
sbb
rclb
imul
xchg
in
lea
mov
stc
fiadds
lcall
lods
add
popa
adc
xor
rcll
andl
shlb
icebp
stc
xor
shlb
jl
push
inc
lds
sbb
shl
lock
data16
shlb
aad
mov
jae
mov
pop
aaa
or
ret
push
flds
sbb
jg
mov
inc
stos
pop
jnp
out
jl
notb
adc
xlat
sbb
sbb
xor
lock
mov
sti
jbe
sbb
repnz
push
jb
std
pop
int
ficomps
xor
adc
rclb
push
jle
jne
dec
xor
jg
jns
and
pop
xchg
cmpsl
lock
xchg
arpl
cmc
dec
cmp
sbb
cmp
daa
add
jp
mov
xor
cmp
xor
xor
mov
cltd
xchg
sbb
mov
cwtl
mov
je
cmpsb
mov
cmp
adc
aaa
xchg
xor
lret
jle
jae
fld
sbb
inc
xor
sbb
sbb
fwait
js
sub
mov
jg
mov
es
or
add
je
shlb
sbb
mov
cli
rcrb
aam
lock
mov
add
dec
mov
pop
cwtl
hlt
aad
xchg
hlt
subl
pop
xor
loopne
mov
jne
xlat
sub
cmp
xchg
xorb
xchg
jo
dec
lds
lds
cmpsl
sti
xchg
rcrb
cmpsb
test
fsubl
or
test
nop
stc
aad
jecxz
inc
rcl
sbb
or
popa
js
vmovntdq
clc
mov
sbb
sbb
jbe
popa
aaa
pop
aaa
dec
ljmp
sbb
mov
insl
ljmp
outsb
dec
adc
mov
mov
jne
jl
pop
mov
push
mov
mov
jg
jno
movsb
cmc
xor
mov
or
ret
jge
scas
lock
fstl
popa
clc
xor
pop
js
lcall
mov
test
aam
rcrb
in
shll
ja
inc
mull
push
fimull
pushf
cmp
jno
cltd
jb
pop
cmp
xor
mov
sbb
insb
test
shl
cltd
adc
cmp
mov
pop
out
xchg
je
in
test
js
xor
sbb
mov
jns
jne
lock
sbb
in
pop
push
xlat
xchg
mov
fiadds
out
jne
mov
gs
adc
aaa
mov
stc
inc
jle
xor
jl
xor
xor
xchg
fildll
ss
mov
mov
lods
stc
mov
push
push
loop
cmp
jle
shlb
arpl
add
xlat
stc
fdiv
push
aam
int3
arpl
cltd
jp
cltd
adc
inc
xor
sbb
repz
ret
xchg
fdivl
pushf
sbb
rolb
in
mov
jae
or
mov
mov
iret
jb
std
ja
xor
add
jae
fistps
hlt
inc
stc
std
pop
stos
ret
mov
cmp
jnp
xchg
arpl
sbbl
stc
cwtl
aam
push
cmp
aaa
lret
mov
xlat
movl
loopne
repnz
jp
mov
aaa
push
dec
push
cld
pushf
cmp
sarb
inc
fstps
fcomps
fidivrl
int3
std
stc
les
jge
lds
pop
rorb
into
sarb
test
js
sbb
testb
test
mov
ret
mov
pop
cld
fnstsw
xor
movsl
push
jl
aad
je
adc
js
jbe
pop
dec
mov
push
in
popf
sbb
mov
in
jg
test
sub
enter
jae
adc
mov
xor
cltd
je
and
xor
xor
popa
rol
jbe
xchg
out
mov
mov
add
cmp
mov
or
sub
out
sbb
jmp
mov
mov
hlt
insb
arpl
cmp
es
pop
add
jns
shlb
es
mov
lret
daa
roll
arpl
test
cli
clc
inc
adcl
fistl
aas
repnz
repz
lds
ret
jb
test
mov
jne
insb
rcll
mov
pop
aaa
in
cmp
jge
clc
aas
lock
sbb
shll
ss
pop
push
das
repz
fcoml
xor
shrl
data16
lds
adc
push
iret
cmc
aad
ss
cmc
std
xchg
add
xor
aam
xor
mov
outsl
je
in
insl
adcl
fdivrs
jno
je
mov
mov
jne
cld
xchg
jae
neg
jle
xlat
cmp
mov
insl
dec
mov
push
loopne
jns
shll
cmp
fbld
jnp
aam
mov
call
rclb
les
xchg
aam
test
rcl
xchg
cmp
cld
or
repnz
push
aas
mov
lods
inc
cmc
mov
inc
sahf
or
jno
clc
movsb
cmp
lock
push
jge
push
daa
sahf
xchg
cli
inc
mov
mov
dec
sti
inc
mov
xlat
push
pop
je
mov
mov
stc
fld
xor
hlt
xor
adc
mov
jne
mov
xchg
jmp
mov
aam
mov
hlt
mov
pop
push
xbegin
dec
mov
xchg
scas
clc
mov
mov
fs
lret
inc
mov
repnz
inc
stos
jb
xchg
aaa
push
les
mov
mov
lods
js
jns
js
sbb
pop
fists
test
lods
pop
mov
sbb
fstpl
in
xor
mov
cmc
cld
popa
pop
xchg
aad
aam
aam
rorl
out
test
clc
mov
hlt
shl
inc
repz
sti
ja
push
dec
stos
sarb
inc
inc
sbb
sarb
cltd
arpl
mov
cmp
jge
scas
pop
push
fimull
flds
ja
xor
mov
inc
int
inc
mov
divl
roll
flds
pop
mov
shll
pushf
aam
ficompl
addr16
fwait
mov
ficoms
jne
mov
mov
mov
dec
sbb
stos
xor
repnz
push
inc
ret
repnz
sarl
mov
fs
cmp
mov
mov
in
cld
cmp
lock
sbb
sbb
sub
xor
xchg
cld
js
cmp
sbb
sbb
outsl
js
push
call
in
jbe
call
push
and
and
push
and
xor
lods
ficomps
mov
xchg
inc
shlb
jb
sbb
mov
ja
les
mov
dec
push
iret
jg
mov
or
gs
cs
aam
sbb
ret
inc
cmp
xor
stc
dec
std
push
lret
cmp
lods
mov
clc
sar
imul
xchg
mov
js
sti
ja
xchg
mov
jg
ret
push
push
pop
clc
hlt
sarl
in
out
cmp
fistps
imul
test
and
cmpl
jb
mov
fstpt
sahf
sbb
xchg
mov
jnp
xlat
insb
and
sbb
ss
jle
xchg
sarl
xchg
pop
stc
xchg
adc
jg
sbb
cmc
lret
pop
xor
jbe
cmp
xchg
hlt
sbb
push
cli
test
jne
mov
arpl
xchg
mov
lods
js
adc
add
add
lock
dec
cwtl
aaa
imul
mov
jo
cs
adc
pop
stc
arpl
sbb
enter
push
stc
into
sbb
sbb
fcoml
lods
inc
sbb
cwtl
lcall
dec
jns
pop
jnp
cmpsl
ret
xor
arpl
cmc
fcmovnbe
cltd
gs
jae
ja
push
pop
cld
cmp
dec
sbb
xchg
js
jge
mov
and
mov
ret
xchg
les
adc
aam
mov
mov
xor
idiv
mov
lock
sbb
jne
scas
stc
pop
fld
sarb
mov
cmp
lods
cltd
cmc
lret
adc
das
add
aam
in
mov
mov
ss
sbb
pop
lds
mov
stc
mov
jae
insl
repz
xor
jg
ret
jg
test
aad
outsl
mov
shl
mov
xchg
sbb
xor
aam
or
and
rclb
or
hlt
and
sbb
mov
mov
mov
sbb
ja
jb
pop
sbb
fstl
outsl
insl
sbb
xchg
mov
sbb
jns
cmp
xor
frndint
xchg
lods
mov
cwtl
hlt
sbb
cmp
hlt
rcr
inc
cs
sbb
aad
add
fdivs
pushf
mov
pop
mov
mov
jg
push
notb
js
ror
xchg
fwait
cmc
dec
xor
iret
jno
xor
sbb
ret
mov
xor
jns
mov
cwtl
sbbl
scas
sbb
mov
fstpt
ror
sbb
jge
in
cld
pop
hlt
sbb
cld
jb
lahf
sub
aam
stos
mov
fxtract
inc
sbb
push
lods
xchg
imul
mov
mov
mov
or
xorl
ja
bnd
fld
push
mov
sbb
mov
mov
sbb
xor
xor
add
mov
cmp
imull
dec
fldenv
fcoml
xlat
add
jb
cltd
mov
pop
and
xchg
cmp
fists
sbb
add
xor
repz
xchg
lock
mov
mov
cltd
je
arpl
xor
pop
xchg
sub
pushf
mov
mov
lahf
not
fnstenv
les
out
test
and
cmp
pop
sub
test
cmc
imul
sbb
cltd
cmp
insl
sbb
inc
ljmp
sbb
outsl
inc
push
xor
mov
adc
in
sub
or
xor
xchg
lds
jnp
das
ficoms
hlt
lahf
flds
sbb
mov
mov
sub
fdiv
imul
cltd
in
mov
je
imul
adc
jne
xchg
cmc
stc
inc
push
outsl
mov
lret
jbe
int
sbb
aas
jmp
mov
sbb
mov
jnp
cmp
sub
jbe
dec
sbb
cmp
pushf
rcr
inc
inc
push
sbb
and
cld
cmp
mov
out
je
mov
cltd
insl
or
ret
jne
shrl
test
cld
push
les
insb
push
cmp
xchg
inc
sar
xlat
clc
aaa
mov
mov
cmp
jge
enter
lret
ror
int
sbb
pop
shll
mov
ja
es
sbb
jl
xchg
imul
mov
jb
ds
xor
fiaddl
dec
sbb
xlat
sbb
xor
push
lea
xor
and
inc
aas
dec
mov
fmul
mov
sar
mov
ret
sbb
xchg
enter
inc
push
xor
dec
jb
jo
mov
xor
daa
xchg
fnstcw
adc
cmc
push
push
cwtl
test
shl
hlt
jne
int3
inc
sbb
hlt
enter
mov
xor
stc
pop
push
test
fcompl
bound
sbb
fildll
aad
jp
cmp
test
add
jnp
dec
ret
xchg
jae
inc
mov
fcoml
ja
lret
xchg
ficoms
sbb
pop
or
stc
fildll
push
sub
les
aad
push
xor
daa
mov
outsl
xor
in
call
jg
push
hlt
cmc
xchg
pop
je
xor
neg
pop
testb
sbb
inc
push
fdivl
jns
sbb
adc
cmc
inc
int3
xchg
sub
lods
dec
shl
lcall
add
fsts
js
inc
int3
aam
aad
dec
stc
push
xor
lods
mov
cmp
sbb
in
rcl
push
jne
lret
cmp
stc
jle
mov
sbb
fld
and
clc
shlb
cmp
fnstenv
stc
iret
jle
in
sbb
xlat
mov
mov
dec
sub
fistps
int3
xor
icebp
cltd
jne
into
mov
adc
mov
outsl
sbb
sbb
mov
mov
push
xlat
sbb
or
hlt
sub
std
stc
divb
jae
sub
rclb
jne
mov
dec
sbb
xor
je
and
shlb
fcoml
jbe
mov
push
sbb
inc
fidivs
sbb
je
cld
push
loopne
xchg
jge
jbe
loope
cmp
xchg
cld
or
out
test
and
fiaddl
mov
inc
xor
test
test
repz
add
mov
imulb
fistps
mov
xchg
jg
dec
xor
push
flds
xchg
aas
cli
cmp
cltd
cmp
cmp
cwtl
sti
fistpll
cwtl
test
mov
mov
arpl
in
jg
mov
sbb
mov
and
xchg
xchg
adcb
aam
mov
clc
sbb
pop
cltd
ficoml
jno
jno
flds
push
stc
cmpsl
lods
and
xchg
cmpsl
cmc
pop
push
jbe
shll
mov
xor
mov
testl
mov
stc
add
pushf
mov
mov
cmp
idiv
in
stc
cmpsl
xor
shlb
mov
lods
rclb
dec
xor
popf
hlt
data16
rcrb
jp
cwtl
test
jb
stc
dec
sub
mov
jo
daa
xor
mov
xor
mov
mull
cmpb
adc
dec
data16
in
xor
jb
stc
andl
xchg
jbe
ja
xchg
insb
jno
mov
push
hlt
sbb
ss
inc
xlat
rclb
push
add
fsubr
mov
rcrb
mov
ja
and
iret
and
jae
dec
iret
ror
jne
cmp
dec
mov
xor
ja
adc
rcl
mov
aam
cld
xlat
das
inc
repz
ljmp
sbb
push
lds
mov
xchg
lods
aaa
into
mov
imul
shlb
mov
push
rcrb
jo
shlb
mov
add
out
mov
ficomps
push
enter
xchg
cld
lods
lods
sbb
xchg
push
stc
cmp
ds
test
mov
adc
sbbb
jge
mov
loopne
hlt
fcompl
and
jg
jb
aad
sbb
push
stc
push
jge
daa
ret
aaa
scas
pop
cmp
sub
cmp
xchg
cmp
cmp
xchg
pop
xlat
xor
jle
xchg
lock
test
adc
shll
mov
jns
add
enter
mov
bound
arpl
inc
push
cmp
lods
mov
sbb
xchg
cld
push
jne
dec
cmp
je
je
cltd
orb
orl
cli
cmp
sbbl
jns
mov
dec
and
xchg
mov
xlat
daa
push
fwait
adc
pop
adc
stc
pop
cmp
push
fisubrs
ss
pop
insb
int
divb
inc
mov
push
lret
jns
mov
adc
mov
jb
cwtl
and
repz
fidivrs
xor
sbb
ljmp
xor
ds
mov
mov
lret
mov
jg
mov
lock
lahf
clc
stc
sbbl
jns
fs
jge
xor
sarl
mov
jne
and
jne
lock
repnz
push
sbbl
int3
shlb
je
push
pushl
hlt
fistpll
mov
pushf
fidivl
mov
aad
pop
das
sti
jns
test
mov
out
cmp
clc
jbe
add
pop
pop
push
lods
ljmp
push
rclb
test
sub
aaa
xlat
stc
neg
jns
jl
sbb
and
xor
ret
jns
pop
ja
push
pop
cmp
sbb
inc
xor
adc
shlb
sarb
xor
mov
out
push
mov
lods
lahf
xchg
cs
aad
aaa
pop
daa
test
pop
jne
ss
cmp
jne
pop
popf
fadd
repz
cltd
add
lcall
aaa
and
aaa
push
shl
stos
xor
testb
outsl
cmpsb
mov
arpl
subb
call
js
int
xor
mov
aam
aam
dec
ficomps
divl
jne
insb
js
into
mov
mov
mov
fld
movsb
lret
jbe
sub
fistps
movsb
lds
pop
sarb
ds
enter
xchg
sbb
xchg
div
jge
int
xlat
je
shll
xchg
sbb
fxch
int
push
shlb
mov
in
push
clc
push
loopne
hlt
into
mov
sbb
divb
jge
push
xorb
lock
inc
push
shlb
jns
lahf
mov
jb
cmp
les
mov
insl
movsb
jle
sub
push
or
fcoml
leave
lods
jmp
cmp
sub
push
and
add
rcrl
shll
push
cltd
xchg
push
loope
fistps
adc
out
push
aad
xchg
shl
rcr
adc
adc
mov
std
loope
xchg
mov
pop
pop
add
xchg
adc
loope
loopne
push
mov
push
sbb
add
sahf
pop
adc
in
cltd
rcrl
mov
adc
and
and
sti
sbb
sub
mov
popf
sbb
loope
leave
test
cmp
xchg
xor
adc
xchg
adc
ja
cltd
in
mov
cld
cltd
and
sbb
and
cmc
adc
cs
shlb
push
lret
adc
fwait
push
hlt
dec
adc
xchg
mov
push
aaa
and
shll
adc
in
mov
shlb
adc
and
sub
andb
add
and
sbb
xor
cltd
jbe
mov
lock
adc
pop
adc
neg
cltd
neg
rcrb
cltd
jns
cmc
popf
sbb
push
cltd
inc
push
sbb
add
sbb
sbb
xor
and
rcll
pop
lea
rclb
shrb
sbb
pop
cltd
mov
sbb
cltd
xlat
or
cltd
mov
sbb
fsts
fldl
add
inc
adc
stc
cmc
mov
xor
mov
fmuls
xchg
rclb
and
cltd
add
push
adc
mov
and
sbb
mov
push
lcall
stos
xor
sarb
pop
or
mov
adc
sub
or
adc
adc
jae
push
sbb
mov
sbb
mov
xor
sbb
aad
jnp
xchg
stc
mov
and
fcompl
xchg
or
fnstcw
mov
or
cltd
push
pop
sbb
pop
add
fsub
adc
mov
xor
or
adc
in
jns
sbb
cltd
and
ss
cltd
push
or
cmp
cwtl
adc
fisttpll
imul
cltd
ja
lcall
lods
rcrl
pop
pop
sub
clc
cwtl
mov
sub
sbb
ljmp
lds
hlt
mov
insb
movsb
stos
insl
js
push
loopew
js
cmp
dec
rcll
mov
out
push
cltd
jnp
fadds
jecxz
cmc
sbb
mov
adc
adc
fldcw
sub
and
gs
push
lret
inc
cs
stc
and
adc
sub
adc
loope
and
rcll
sbb
and
stc
adc
cltd
mov
or
sbb
adc
or
add
or
and
lds
sbbl
stc
stos
jne
fistl
mov
lcall
adcb
add
aam
cltd
xor
dec
popa
shlb
adc
xchg
or
and
jne
xchg
cltd
movb
sbb
push
pop
cwtl
xor
push
cmp
enter
enter
xchg
and
xor
movsl
push
and
sbb
dec
xor
dec
cltd
clc
sbb
dec
fiaddl
fnstenv
rclb
xor
mov
call
sub
popa
sbb
and
popl
jne
out
adc
mov
sbb
pop
pushl
and
cmc
push
in
outsb
loope
idiv
add
cltd
push
fldl2t
adc
adc
out
outsb
jne
jecxz
leave
inc
push
filds
xor
dec
xor
cmp
js
outsb
cwtl
fistpll
pop
pusha
flds
cltd
sub
fnstenv
mov
ljmp
rcll
cltd
lahf
je
je
cltd
adc
aaa
ficomps
and
mov
stos
sti
mov
adc
dec
fstpt
out
sbb
test
sub
jne
test
mov
fmull
xlat
roll
fs
jae
mov
sbb
fisubs
test
scas
out
stc
cs
adcb
jbe
xchg
adc
pop
ljmp
push
repz
cmpsl
jne
vmovntdq
hlt
nop
jns
in
out
jnp
lods
loop
andl
mov
gs
repnz
fs
inc
test
xchg
cmp
cmpsl
lret
shll
adc
sbb
lds
mov
ja
pop
mov
dec
inc
int3
and
mov
repnz
cmpsl
pop
mov
jb
cmp
xchg
and
and
rcll
jp
push
loop
leave
add
mov
imul
inc
icebp
ja
xlat
popa
mov
mov
mov
dec
cmpsl
sbb
sbb
sbb
or
cltd
in
bound
in
enter
mov
stc
mov
mov
mov
aad
mov
jge
flds
xchg
imull
mov
push
loopne
out
mov
outsb
out
sub
das
loop
out
pop
push
mov
push
sbb
adc
fstpl
jne
mov
sub
mov
xor
or
pop
gs
stc
dec
fwait
or
pop
shlb
jecxz
jl
or
push
or
inc
pop
push
add
ret
jmp
pop
leave
aaa
out
or
lods
push
inc
xchg
xchg
aad
movsl
xchg
std
jno
mov
jns
sbb
mov
orb
adc
aad
stc
sub
mov
aaa
dec
pop
jb
adc
mov
jecxz
push
test
jbe
ret
push
out
or
scas
sahf
mov
aaa
fwait
or
shll
sarl
jg
inc
sbb
arpl
cmp
fldcw
std
sbb
xor
push
inc
pop
adc
out
xor
repnz
stc
std
cmp
test
add
fsts
cmc
test
mov
mov
add
div
push
in
or
sbbl
pop
sti
push
push
adc
imul
inc
fnstenv
push
stc
imul
fcomps
sbb
jmp
xor
shll
shl
adc
xor
push
and
inc
aaa
or
jne
sbb
push
fdiv
mov
xor
aad
sub
ja
push
mov
clc
repnz
cmp
stc
rcrb
pop
jecxz
and
cmc
jnp
mov
fisubs
or
push
mov
jbe
push
add
js
xchg
cmp
lahf
arpl
nop
push
sbb
jecxz
cmc
jp
sub
das
sbb
test
scas
cmc
cmpb
les
ss
les
stc
enter
adc
mov
cmc
into
cltd
xchg
or
or
push
xchg
je
data16
xchg
add
sub
sbb
jne
addr16
add
and
push
stos
fbstp
mov
mov
or
dec
push
clc
jae
divb
or
ja
mov
mov
jl
stc
bound
jge
cmp
pop
pushf
ss
cmc
rcrl
divb
aad
sub
jge
mov
sbb
add
push
cmp
cmp
jl
mov
pop
mov
loop
repnz
mov
push
nop
ss
cmp
mov
cmp
push
testl
cmc
cli
jns
push
int3
leave
push
mov
std
lods
lret
mov
sbb
sarb
repnz
mov
mov
jl
mov
ficomps
hlt
test
cltd
inc
jns
sti
mov
popl
lcall
cmp
push
xchg
push
cmc
push
into
out
out
xchg
shll
imul
jbe
sbb
sbb
xchg
push
aam
sbb
mov
xchg
adc
mov
fnsave
mov
push
mov
xchg
out
fdivp
push
pop
fcoml
sbbl
cmc
pop
das
sbb
xchg
push
ret
popf
ss
xor
push
or
mov
xchg
xor
cltd
movsl
add
jne
pop
clc
arpl
push
push
add
jge
xlat
adc
mov
shrl
jmp
mov
xor
mov
insb
push
fcompl
sbb
cmc
ss
push
push
inc
mov
adcb
sahf
sarb
inc
xor
clc
push
int3
adc
lock
mov
mov
xchg
add
js
sbbl
xor
adc
mov
push
cltd
mulb
inc
mov
hlt
jl
cmc
jnp
cmp
pop
jnp
add
fists
push
push
push
mov
cli
lods
cmc
stc
bound
les
jnp
xchg
push
jo
jne
fs
rcl
fadd
pop
sbb
push
or
cmc
ret
sbb
fnsave
dec
inc
adc
push
imul
mov
int3
adc
mov
aaa
clc
jge
shll
stc
fdiv
negl
in
stc
push
in
cli
stc
or
repz
lahf
sub
cmc
cli
rclb
xor
dec
lea
or
sbb
ret
aad
stc
inc
adc
addr16
mov
mov
lret
xchg
lock
repnz
jl
sbb
aam
nop
adc
and
cmc
stos
add
sbb
dec
adc
stc
sti
sbb
or
pop
imul
pop
xchg
insb
or
inc
fwait
push
daa
mov
leave
flds
fwait
or
push
and
int
aam
shll
pop
mov
push
ss
andb
stc
xchg
js
mov
xchg
jno
ss
hlt
pop
sub
cmpsb
aad
jge
sbbb
mov
jno
cmpsb
push
arpl
push
cli
pusha
cmc
aad
out
fld
cmp
pop
std
xor
repnz
pop
push
push
dec
pushf
sub
inc
pop
arpl
dec
push
cmc
dec
je
cltd
cltd
xchg
cmp
stos
out
and
xchg
cmpsl
shlb
stc
jae
push
ret
cmp
movsl
lock
xor
mov
dec
stc
push
dec
mov
cmpsb
add
hlt
xchg
cwtl
fstps
and
rcll
imul
movsb
ss
push
xor
sbb
mov
mov
cmc
jg
fnstcw
aaa
mov
cmp
icebp
mov
adc
fs
sub
repz
pop
repnz
adc
cld
mov
popa
xor
jg
push
dec
popa
mov
and
xchg
fcompp
fistps
enter
repz
les
and
jl
ds
fdivrs
je
and
addl
xor
dec
xor
icebp
cmp
ss
mov
xor
mov
cltd
jne
hlt
jge
test
inc
sbb
jbe
and
mov
xor
and
push
xchg
mov
fimull
mov
stc
mov
xor
adc
mov
stc
aad
stc
movsb
xor
insl
aad
stc
les
popf
push
les
std
pop
fistl
sub
adc
popa
ret
xor
mov
stc
jge
outsl
push
mov
jae
hlt
enter
adc
push
fwait
stos
pop
push
xchg
ret
adc
jno
inc
mov
jp
fldenv
jle
or
pop
mov
movsb
fldcw
push
stc
and
js
adc
inc
test
pusha
je
sbb
sbb
adc
mov
cmp
push
xchg
fwait
lcall
stos
lcall
cltd
test
mov
jb
repnz
pop
aam
pop
lret
sahf
out
stc
push
cltd
aam
or
jns
xchg
cmp
jl
clc
ja
mov
mov
pop
js
stc
jmp
outsl
dec
cmp
repz
add
sbb
xlat
xchg
cmp
mov
stc
xchg
lahf
fwait
leave
cmp
fwait
xlat
rclb
jae
xchg
xchg
stc
inc
pop
shr
mov
leave
cmp
cmpsl
ljmp
repz
ja
jg
ss
div
enter
sub
shl
je
push
pop
aad
fmull
cmc
push
aas
loopne
xor
stc
cwtl
hlt
push
cmp
mov
fs
popf
rol
pop
or
xchg
mov
xchg
fdiv
idivb
push
lret
adc
stc
cmc
cld
pop
sbb
xchg
repnz
cmc
fcoml
jae
shll
hlt
dec
cmpsl
fldenv
imul
clc
cmc
fisubl
or
popf
push
clc
mov
mov
xchg
negb
jne
or
test
ret
push
jp
jnp
lods
mov
clc
jge
jo
sbb
mov
jge
xchg
mov
in
pop
pop
jmp
xchg
jge
test
leave
stc
leave
mov
enter
push
fdivrp
push
fnstenv
movsl
hlt
jnp
xlat
jae
xlat
push
repnz
out
mov
je
push
cmp
mov
mov
xlat
jo
cmpsb
push
arpl
adc
flds
insl
push
into
push
pop
insb
jno
shlb
icebp
faddl
push
test
lock
sbb
dec
mov
xchg
hlt
sbb
pop
fbstp
or
pushf
mov
push
fld
sbb
data16
push
rcrb
jecxz
addl
fnstcw
xchg
fstps
cmp
sbb
dec
jmp
cmc
pop
or
add
push
inc
dec
repz
xchg
jae
mov
mov
lock
fsubrs
fnstenv
scas
stc
cwtl
or
mov
push
into
shll
clc
mov
adc
cltd
hlt
xchg
xor
rclb
in
mulb
push
sar
xor
jno
rclb
scas
stc
ret
push
jb
aad
es
xchg
fsubrp
or
rclb
bound
lods
cmc
add
push
mov
mov
mov
mov
rcrl
lock
out
jl
aad
push
jg
dec
mov
sbb
push
outsl
push
je
divb
notb
stc
xchg
inc
pop
scas
stc
push
jbe
shl
adc
clc
sbb
sbb
jbe
jnp
mov
repz
push
jns
cmc
daa
dec
push
cmc
jae
aam
enter
dec
rcl
jae
xchg
or
cmp
neg
mov
fcmovne
xchg
aad
stc
sarb
testl
insl
sti
test
aas
xchg
jnp
clc
xor
fwait
pop
mov
inc
or
fcomp
aam
push
bound
loopne
push
jb
cmpsb
fisubs
in
stc
les
cld
push
sbb
sbb
int3
push
fidivrs
les
mov
dec
xchg
cwtl
test
pop
xor
pop
jno
js
add
pushf
fs
rcrb
inc
inc
xchg
pop
dec
stc
aam
xlat
sbb
jne
jae
push
clc
repz
test
xchg
mov
jno
fildl
adc
push
arpl
inc
fldcw
call
test
push
fs
jns
push
roll
fld
xchg
xchg
stc
js
ljmp
out
stc
xlat
aam
pop
cmp
cltd
ja
push
mov
mov
pop
jne
fwait
sbb
imul
lahf
je
daa
xor
mov
sub
insl
add
lret
push
push
jne
jae
gs
daa
and
repz
sbb
push
cmc
jmp
mov
cmpsl
cmp
shlb
push
mov
xchg
mov
stc
pop
push
fstpl
mov
fnsave
dec
fcmovnbe
leave
mov
out
adc
ret
push
fcoml
jb
lret
cmc
inc
lahf
pop
lret
mov
adc
xor
pop
mov
jl
xor
repz
jg
in
clc
in
std
sbb
jae
xchg
xchg
sbb
ffreep
ret
out
vmovaps
lds
sbb
push
xchg
pop
fidivs
pop
mov
dec
jbe
mov
aaa
fcomps
pop
and
jae
cld
jge
ret
xor
push
lcall
mov
pop
iret
push
hlt
cmc
sbb
xor
hlt
fstp
sbb
in
js
lods
stc
stc
in
pop
inc
push
jmp
xchg
pop
into
fbstp
mov
roll
jmp
mov
fwait
xchg
push
mov
dec
ss
push
or
cmp
mov
lods
pop
xor
adc
cld
push
js
sbb
mov
cmp
xor
mov
mov
into
rcrb
pop
mov
push
xor
repnz
mov
xor
rclb
push
data16
ss
cmp
dec
sbb
roll
lds
push
fdivl
dec
xor
push
cld
sub
jg
inc
sub
sbb
fildl
dec
xchg
mov
mov
inc
shrl
iret
sahf
sbb
jns
test
fld1
pop
in
je
xor
dec
mov
sbb
lock
shl
add
xor
adc
rcll
jge
jae
pop
push
jle
sbb
xlat
adc
fstl
push
les
outsb
jne
jge
cmp
pop
push
lock
cwtl
lock
mov
rolb
sbb
xchg
pop
mul
stc
jb
adc
lds
inc
xchg
push
stos
pop
xchg
popf
push
addr16
lret
fcmovu
xor
mov
fldcw
aad
push
mov
push
inc
std
xchg
push
aaa
hlt
xchg
push
xchg
inc
adc
fidivs
stc
dec
xor
in
adc
push
sbb
sbb
mov
push
iret
lds
hlt
inc
sbb
fdivrs
into
shrl
mov
adc
addr16
test
out
and
sub
xchg
xor
ss
mov
sbb
push
fbld
out
js
sti
aaa
lock
xchg
jl
dec
add
ret
push
hlt
adc
xor
adc
or
mov
arpl
sub
dec
jae
xlat
jae
adc
push
mov
adc
aad
push
aas
fisubl
cs
fcoml
les
in
test
adc
mov
jge
push
lods
leave
push
aas
cld
pop
mov
stc
mov
int
fwait
sbb
insw
mov
in
fnsave
xor
push
insb
shll
xchg
xchg
fwait
out
je
mov
enter
push
fwait
push
jg
jne
stc
cltd
lods
movsl
mov
shlb
fyl2x
sbb
xchg
and
pop
test
mov
shrl
cli
mov
dec
fdivrs
pop
jg
test
sub
ljmp
repnz
std
sbb
jne
pop
mov
sub
xor
sbb
popf
std
lret
xor
repnz
mov
repnz
out
push
lcall
sbb
mov
pop
inc
push
jnp
xlat
xor
push
ret
xchg
mov
inc
xchg
cld
xchg
inc
jg
mov
sti
stc
lret
cld
xchg
mov
pop
push
test
cmp
jne
jle
in
rclb
add
xchg
pushf
je
mov
hlt
cmc
mov
mov
int3
mov
enter
mov
inc
jg
neg
int3
cltd
dec
xchg
fdiv
cmp
push
mov
xchg
adcl
cltd
lods
rorl
xchg
ja
rcll
xchg
daa
fadds
imul
sahf
cld
push
inc
xor
data16
das
sbb
adc
mov
push
xchg
xor
cmp
js
shlb
pop
iret
ss
hlt
scas
cltd
lret
aad
clc
jge
js
inc
sti
push
add
aaa
xchg
pop
jg
push
add
insl
lcall
push
jg
add
aas
jo
call
and
mov
cmpsl
cmpb
pop
bnd
mov
ret
cwtl
fists
cmp
stc
xchg
xor
push
cld
cmc
iret
add
lcall
aaa
mov
fidivl
cmc
mov
test
mov
cmc
fbld
lock
xchg
js
sbb
rcr
lcall
rclb
inc
fdiv
daa
xor
jge
fisttps
cmp
push
es
push
mov
fbstp
ret
gs
inc
mov
adc
cwtl
js
jns
rorl
cmpsl
std
fdivrs
aad
lock
push
sbb
andl
mov
loop
jae
fsts
ss
mov
mov
xchg
fcoml
inc
stc
mov
in
add
sahf
repnz
jo
pop
cmc
int3
xchg
push
xchg
push
in
mov
mov
fiadds
jns
cmp
xchg
movsl
adc
das
add
pop
icebp
jns
ss
mov
pushf
shll
test
mov
pop
rep
jns
stc
xchg
pop
lahf
sbb
shl
mov
sub
mov
mov
push
repnz
rcll
inc
enter
clc
ret
in
cmc
outsl
jns
cs
lea
mov
stc
xchg
push
jae
xchg
pop
add
mov
adc
jae
jns
xorl
mov
arpl
cmpsl
or
xchg
movsb
jno
push
mov
push
or
or
stc
jnp
iret
enter
fdivr
cmp
cmc
cmpsl
sub
xchg
daa
push
das
cmp
cmp
dec
or
cmp
fistl
iret
mov
pop
aad
mov
jnp
mov
fs
in
mov
pop
js
pop
or
jbe
cmpsl
fistps
icebp
scas
dec
mov
pop
pop
cmc
xchg
or
lock
xor
inc
divb
inc
test
cld
pop
jns
inc
outsl
mov
bound
ja
xchg
push
xchg
adc
cli
xchg
ret
je
les
out
insl
or
jne,pn
in
push
iret
cmpsl
cmp
xchg
xchg
jne
cld
sbb
mov
adc
xchg
jnp
mov
cwtl
push
or
test
xchg
lahf
mov
data16
lds
jecxz
cld
push
adc
iret
imul
mov
sub
mov
fs
inc
adc
pop
pop
xchg
enter
push
mov
push
xchg
xchg
stc
cld
leave
rcll
jg
inc
cmc
ss
sbb
inc
pop
jb
xchg
push
mov
fistpll
mulb
ja
cmp
aad
push
sti
mov
push
xchg
push
int3
int3
xchg
pop
xchg
out
jge
mov
fdivs
lods
fstl
push
test
popf
mov
push
ja
jb
xchg
inc
push
jle
xchg
mov
imulb
and
shrl
push
dec
xlat
jne
cmp
iret
push
jg
pop
hlt
sbbl
out
je
stc
xchg
int3
rcl
dec
lods
aam
mov
xchg
loopne
mov
lahf
xchg
ret
test
dec
stc
push
add
sbb
cmc
pushf
ss
fcomps
fiadds
aam
sbb
xor
pop
lcall
jae
cltd
jle
jae
xchg
add
iret
lds
push
push
jge
divb
test
jg
or
mov
sbb
push
out
adc
outsl
push
push
stos
pop
test
cmc
out
xlat
rol
xor
test
push
pop
lods
fmull
je
cli
cwtl
enter
aad
sbb
fnstenv
lret
fxch
cmc
mov
lds
push
jne
mov
icebp
mov
mov
cmc
mov
xor
scas
sbb
cld
jne
cmpb
aaa
idiv
ja
push
lret
test
call
clc
loopne
push
xchg
arpl
gs
aaa
xlat
mov
xchg
iret
out
ret
push
jg
sub
xor
sti
cltd
shl
repz
stos
ljmp
cwtd
inc
jg
jbe
mov
mov
sbb
ljmp
inc
sarl
jne
xor
or
jnp
les
mov
push
dec
and
jge
into
cmc
jg
dec
mov
pop
leave
cmc
lds
sub
mov
push
out
jmp
sub
jne
insb
cltd
cmp
andl
cmc
cmc
fdivl
jbe
pop
jge
push
sbb
push
push
sub
cmp
insb
add
sbb
std
adc
pop
adc
test
xchg
jl
js
push
pushf
push
fidivs
xor
pop
mov
sbb
mov
mov
sub
adc
jge
cmpsl
inc
test
xchg
into
or
popf
jb
arpl
loop
or
dec
jge
push
jg
mov
popf
stc
test
adc
mov
shll
inc
push
lea
cmc
call
sbb
je
lret
iret
mov
je
xor
mov
lock
mov
pushf
cmp
daa
in
cmp
cmpsl
fstps
lahf
push
xlat
adc
idivl
ss
mov
xor
cld
or
cmc
hlt
push
mov
dec
fcoml
mov
xchg
hlt
lock
aas
add
jb
cmp
mov
mov
ds
in
cld
lcall
push
and
arpl
push
push
hlt
dec
adc
aad
push
jo
loopne
je
adc
cmp
jb
stos
test
jae
mov
ja
add
mov
shlb
adc
fdiv
pop
add
repnz
mov
stc
in
xchg
aad
xlat
cs
dec
pop
inc
fnsave
xor
sub
in
cmp
adc
inc
fdiv
inc
xchg
xchg
pop
cld
cmc
hlt
jb
iret
jo
loopne
mov
jg
cmp
ja
jb
adc
sub
cmc
aaa
xchg
jp
cwtl
dec
js
mov
hlt
sub
jge
mov
xchg
lock
xchg
aad
stc
xlat
adc
cltd
aam
rcl
xchg
stc
sarl
push
out
xchg
or
mov
aad
enter
xchg
xor
cmpsl
jnp
lods
cltd
push
stc
lods
out
aaa
hlt
out
mov
dec
iret
sbb
jge
aam
iret
cmpsb
cmpl
icebp
inc
xchg
das
cmpsl
aam
int
das
jne
cmc
sbb
adc
std
stc
push
ret
sbb
loopne
xchg
loopne
mov
jne
xor
cmc
adc
loop
push
mov
imul
outsl
xor
clc
xor
mov
test
push
xor
cwtl
cmc
xchg
jge
xchg
inc
cltd
pop
dec
stc
les
dec
pop
fists
insb
test
cmc
call
mov
pop
cltd
fwait
out
cmc
enter
adc
adc
sbb
mov
pop
cmc
inc
je
mov
in
les
stc
aam
fdiv
xchg
mov
aad
ss
inc
cmp
sbb
cmc
sub
rclb
cmc
mov
data16
jns
adc
xchg
inc
xor
psubd
or
xor
jnp
std
adc
mov
push
push
or
add
ss
scas
mov
jl
push
daa
popa
xchg
mov
mov
ja
push
jl
repz
push
xor
out
stc
mov
stc
jmp
pop
xor
shl
fdivl
loopne
stc
gs
xchg
xor
pop
clc
cld
add
fs
test
cmp
push
notb
push
inc
mov
sbb
aam
mov
rcl
aaa
rcr
inc
clc
jne
les
sarb
xchg
les
enter
xchg
xacquire
addr16
flds
adc
hlt
xor
cmc
fisubs
adc
xor
jbe
jns
les
mov
fld
jbe
stc
cmc
cld
push
inc
les
js
neg
push
mov
jg
iret
cmc
mov
ja
push
fwait
stc
jge
fsubrl
hlt
xor
out
sbb
cmpl
mov
js
or
ret
mov
push
jns
imul
dec
dec
push
repz
fdivl
repz
cltd
ja
lret
cltd
pop
push
iret
mov
scas
push
addl
jl
xchg
test
inc
push
lea
push
mov
test
dec
ret
mov
xor
mov
test
xchg
inc
adc
mov
int3
fsts
je
gs
fidivl
add
mov
mov
push
cmpl
xor
jns
les
lret
cmp
fcmovne
sbb
xchg
arpl
mov
sub
cmc
arpl
aad
push
repz
dec
stc
pushl
js
or
shlb
mov
arpl
mov
xor
jne
test
jbe
mov
inc
fadds
cmp
mov
jne
mov
sbb
js
sbb
lahf
push
push
cld
xchg
cmp
lea
imul
or
js
std
mov
xor
jbe
lahf
xchg
sbb
add
push
subb
xchg
fcmovu
cltd
je
rclb
jae
push
les
push
dec
in
cmpsl
xchg
loopne
xor
jne
push
ja
adc
iret
fnstenv
bnd
push
mov
push
pop
push
push
xor
movsb
xlat
iret
xchg
idivl
sbb
mov
ja
daa
sbb
jle
ss
ss
dec
fldcw
shrl
xchg
fs
mov
stc
pop
cmc
cld
outsl
cmc
lds
xorl
add
cmc
sti
ror
lds
arpl
dec
push
repz
fists
test
xchg
test
jle
enter
arpl
jge
inc
rcrb
hlt
mov
lods
jae
imul
ss
add
mov
mov
sbb
xchg
cld
repz
int
jg
iret
push
push
in
mov
mov
xor
xlat
mov
push
mov
jne
push
dec
cli
pop
dec
cltd
mov
xor
les
jne
les
aad
push
hlt
fnsave
sub
stc
cld
lcall
sbb
shrb
mov
js
fadds
test
fnstcw
fstl
adc
mov
sub
mov
xchg
shl
shl
inc
rcrl
shl
jl
mov
jae
and
jno
adc
int3
push
imul
shll
repnz
mov
je
stc
xor
loopne
popf
cwtl
test
inc
xchg
lcall
imul
hlt
jns
jne
pop
mov
inc
stc
shrb
mov
hlt
test
mov
cmc
and
mov
fwait
mov
enter
jl,pn
rclb
fisttps
fstps
ja
xchg
stc
jns
dec
cmp
test
push
sbb
movsl
xlat
mov
jae
push
mov
adc
in
fisubs
ret
jge
fistps
neg
cmc
jae
aad
xchg
mov
xchg
das
xchg
hlt
jge
jl
ds
xor
jp
pop
pop
fidivrs
imul
xchg
xlat
adc
cli
stos
adc
cmp
pop
adc
push
stc
in
aam
stc
inc
fcoml
xor
mov
stc
rcrl
mov
fcoml
into
ds
inc
je
lcall
shlb
dec
cmp
js
sti
adc
aad
rcrb
or
addr16
enter
mov
push
xchg
push
sbb
ja
xchg
shll
cmp
and
cmpsl
negb
ret
fstpl
pop
leave
adc
iret
fst
lock
cmpsb
mov
sbb
mov
sahf
adc
cmpsb
mov
mov
push
fimull
sbb
cld
jg
push
dec
jo
or
hlt
iret
xor
pop
inc
fs
cmc
mov
sbb
xor
fsubl
cmc
xchg
mov
stc
sbb
frndint
sbb
cmp
mov
dec
cmp
les
inc
inc
jne
push
mov
lea
aad
insb
mov
sub
xchg
jl
clc
jnp
hlt
mov
daa
xlat
outsl
cmc
jne
jb
pop
xchg
jne
xor
push
jb
adc
in
je
clc
push
shll
les
add
scas
test
cmp
inc
xchg
insb
push
fsubp
push
popf
xor
adc
gs
cwtl
into
fldcw
xlat
les
das
cmp
push
jns
pop
clc
mov
adc
loope
mov
push
jg
dec
fld
aaa
cmp
sbb
sub
push
loopne
xor
outsl
cmp
fisttps
xor
call
push
mov
fdivrl
jne
arpl
ret
jne
popa
adc
push
test
jb
adcl
push
adc
pushw
adc
xlat
xchg
xchg
jge
xchg
loopne
mov
xchg
fsubrs
lahf
stc
mov
jbe
add
sbb
xor
enter
repnz
cmpsl
imul
int3
enter
inc
repnz
sub
pop
add
and
sbb
pop
fcmovb
xchg
and
xor
aaa
imul
in
lds
xchg
das
cmp
add
subb
pop
and
cmp
jle
mov
adc
gs
mov
roll
enter
jb
call
mov
aaa
sbb
outsl
add
insl
push
fisubs
sbb
ret
dec
ror
xchg
ja
addr16
xor
push
mov
xor
hlt
pop
stc
inc
fdivs
hlt
jae
int
jl
push
rcll
lahf
aad
mov
mov
mov
test
sbb
push
in
jae
outsl
ss
fnstenv
xchg
adc
jle
aam
push
jbe
or
jne
jae
cmc
mov
cmp
jae
bound
cmp
hlt
and
jge
outsl
push
je
mov
lret
jp
cmc
push
cmp
mov
stc
into
xor
pop
or
pop
jb
push
pop
mov
jbe
mov
clc
scas
cmc
stc
mov
jno
clc
mov
ficoml
xchg
ja
repz
out
stc
push
or
xor
movsb
mov
or
in
adc
push
pop
cs
js
movsb
dec
adc
das
movsl
push
popf
push
cli
ficoms
jg
mov
jg
rcrb
cmp
inc
mov
xlat
hlt
mov
sbb
pushl
cmc
cmc
mov
inc
sbb
push
fnstenv
test
pop
int3
cmc
sbb
int3
fs
and
stc
shlb
cmp
xchg
mov
mov
jns
cmp
xor
clc
fistpll
icebp
pop
mov
dec
shlb
stc
xchg
repnz
push
mov
fnstenv
test
clc
jb
mov
das
mov
push
jnp
sbb
xor
push
jge
xchg
push
fucomi
jne
push
stc
ss
lock
je
jge
divb
xchg
aad
jne
dec
push
inc
jge
rclb
jge
js
int
jg
mov
inc
sbb
stc
in
lds
insw
stos
sbb
rclb
fst
cmc
out
jg
enter
inc
sbb
cmp
test
sbb
je
cmc
into
pushf
jne
push
push
lea
leave
stc
aad
xor
dec
xchg
mov
push
or
in
push
cmc
dec
mov
idivb
xchg
add
aam
stc
ret
ss
stc
fcmovnu
cmp
neg
lcall
cmpsl
cs
aad
mov
pop
pop
xchg
jge
cmp
xchg
mov
in
or
lods
loop
fdiv
xchg
stc
pop
ja
and
negl
push
fwait
sbb
cmp
push
jbe
cmp
vmovhps
and
stc
xchg
sbb
adc
cs
test
movsl
aam
jns
lods
or
test
push
add
and
mov
add
xor
pop
pop
dec
pop
pop
xchg
or
ja
fnstcw
roll
mov
ss
add
mov
and
push
sti
sbb
cmpsl
pop
cltd
inc
push
test
xor
repnz
mov
addl
mov
xchg
push
jl
ja
jne
push
cld
and
repz
rcl
ss
mov
repz
pop
mov
fcoml
inc
das
inc
sbb
mov
test
fstps
int3
pushl
adc
add
pop
cmc
lahf
push
enter
push
cld
sti
xchg
ret
cmc
test
lds
push
xchg
sbb
mov
ja
cmp
xchg
std
repz
push
mov
pop
dec
sbb
jo
cmpsl
push
xorl
cld
jle
and
out
push
jp
push
ud1
hlt
jge
push
mov
mov
push
cmpsl
xchg
idivb
cmpsl
mov
ficoms
repnz
cwtl
cld
aad
repz
xchg
xlat
int
iret
sbb
push
xchg
idivb
xchg
idivb
pop
cmp
fmul
push
dec
fidivrl
jbe
mov
add
adc
push
mov
mov
inc
insb
cmp
cmp
or
fs
arpl
rclb
fnstcw
outsl
sbb
fsubrs
stos
sbb
cmp
rcr
lcall
and
or
cli
enter
lea
rorl
aam
jns
aas
sahf
repz
lahf
sbb
flds
jns
je,pt
jnp
push
mov
icebp
mov
lret
xor
int3
mov
sbb
je
xor
push
lds
jg
mov
out
cmp
adc
push
lock
dec
mov
pushf
pop
fidivs
mov
cs
xor
jge
xlat
es
jae
flds
jg
dec
aad
mov
jo
lahf
clc
pop
jae
inc
adc
in
xchg
dec
pop
push
jbe
ss
mov
inc
xor
test
mov
push
stos
sub
cmp
dec
aaa
or
and
push
hlt
lret
mov
in
mov
fdivrs
jg
cmp
aad
sbb
xor
push
xchg
push
cld
pop
sbb
lds
subl
repz
cmp
js
and
jns
push
bound
ffreep
xor
push
mov
sub
jg
mov
sbb
cld
xor
iret
sbbb
stc
iret
push
jge
iret
sub
mov
bound
jb
mov
sti
cmpsb
call
aad
repz
ret
mov
pop
shlb
jbe
cmc
shlb
sbb
xor
jle
lods
sub
mov
xor
mov
sub
sbb
xor
inc
cmp
ja
mov
push
insl
mov
ficoms
es
fisubrl
fld
push
cld
imul
js
scas
hlt
lock
sbb
ret
cltd
jno
ss
in
clc
jae
cmpl
push
jb
fstl
insl
pop
push
jb
push
cmp
adc
imul
sub
xchg
iret
push
cmp
ljmp
sbb
or
imul
loopne
xchg
mov
jne
push
js
mov
mov
int
leave
lods
iret
or
in
arpl
clc
mov
jnp
sbb
es
rorl
push
popf
stc
mov
xchg
addr16
aaa
fisubrl
sbb
cmp
adc
sub
ja
dec
addr16
hlt
inc
sti
clc
sub
sbb
jno
repz
stc
mov
hlt
and
daa
std
pop
inc
lds
hlt
rclb
mov
adc
ret
pop
jo
mov
xchg
js
int3
rorb
je
adc
fmul
pop
push
lea
out
adc
es
xchg
jbe
and
je
clc
iret
sti
adc
cmp
aam
iret
movsb
enter
cmp
jl
aaa
add
dec
xchg
sbb
adc
sbb
cltd
inc
push
jge
xchg
int3
jg
sarb
pop
and
ret
fisubs
sbb
stc
inc
scas
sbb
ds
jae
ljmp
sub
sub
mov
mov
jnp
rclb
cltd
xchg
mov
push
insl
sbb
mov
movsb
addr16
sbb
xor
sbb
pop
push
cmpl
mov
fcoml
les
xchg
dec
scas
adc
mov
add
test
aam
fdivl
movsl
adc
inc
jge
sbb
xchg
mov
mov
mov
gs
jle
inc
popa
sbb
sbb
mov
adc
xchg
mov
rcrb
les
pop
les
fnstcw
scas
dec
test
jg
dec
test
test
adcl
pop
enter
push
cld
dec
push
iret
int3
push
cwtl
cmpsb
add
jno
shlb
scas
repz
jge
sub
fidivl
mov
xchg
sub
notl
les
cmpsl
push
inc
fwait
out
adc
inc
outsb
fnstsw
outsb
jne
lods
push
pop
ja
push
mov
movsb
rorb
pop
sub
lcall
je
xlat
sbb
jecxz
loop
sub
cltd
les
aaa
mov
rorb
stc
and
rclb
adcl
rcll
mov
add
int3
cmc
push
inc
test
xchg
stc
and
sbb
jle
cmp
push
aam
lods
ss
call
xlat
test
les
adc
ja
push
arpl
xchg
cmpl
sbb
push
je
xchg
ficoms
push
cmp
push
push
insl
aaa
xchg
lret
pop
mov
pushf
cmc
mov
xor
push
scas
cmpsb
sbb
or
push
dec
jbe
push
repz
push
lods
jb
sbb
push
dec
add
test
sub
dec
js
fldenv
push
xchg
insb
lea
inc
jp
push
inc
dec
shlb
push
xor
jl
xchg
xchg
cltd
jg
imul
ds
pop
repz
xchg
push
pop
imul
stc
inc
fcoml
xor
rorl
push
mov
je
push
inc
lods
sbb
xor
bound
es
sub
and
sbb
mov
ret
fcomps
xchg
jnp
xchg
inc
pop
gs
sbb
fnsave
jmp
lock
cmp
jne,pt
pushf
cmc
iret
sub
dec
push
sub
insl
mov
jl
ja
mov
xlat
hlt
pop
push
insb
dec
push
ret
pop
jge
mov
fldenv
clc
ja
shrl
ficoms
pop
aad
sbb
add
adc
cmpsb
xorb
xor
xchg
js
dec
repz
mov
fwait
or
adc
cs
xchg
inc
call
jp
jns
rcrl
jo
lods
jae
es
mov
pop
xchg
inc
aas
pop
andb
push
inc
jle
clc
xchg
push
lock
mov
je,pn
inc
pop
insb
dec
ss
aad
ds
pop
dec
jmp
mov
mov
xchg
or
mov
ja
inc
sbb
hlt
mov
jge
hlt
sti
jb
adc
movsb
scas
mov
cld
shll
add
imul
lock
insl
ja
push
insl
xor
outsl
aad
adc
cmc
adcl
stc
jae
stc
iret
cmc
cld
add
xlat
or
mov
int3
cmpl
mov
lea
mov
mov
mov
hlt
pop
hlt
les
jbe
dec
sbb
clc
hlt
aam
add
jbe
dec
or
cmp
pop
mov
je
push
repnz
adc
mov
bnd
pop
sar
or
add
inc
ds
cmp
push
outsb
mov
in
cld
aaa
mov
jg
xchg
hlt
hlt
jb
push
das
fwait
testb
fildl
xlat
cmp
loopne
cmp
stc
xlat
adc
enter
xchg
aam
push
inc
or
jp
pop
les
jae
push
cmp
stc
movsb
xor
rcl
push
push
sbb
popa
xchg
sub
cmp
insl
imul
out
mov
arpl
test
cmpl
ja
lret
dec
xor
es
inc
mov
lds
mov
xlat
jns
stc
movsb
jg
push
je
push
out
fsubs
lods
repnz
mov
stc
daa
jbe
mov
mov
lret
fdivr
dec
repz
sbb
ja
inc
lds
lods
fnstcw
push
jge
add
xchg
and
imul
push
fidivs
insl
aaa
repz
xchg
nop
xor
enter
xor
pop
sub
jbe
cmpsb
adc
lds
mov
inc
mov
inc
pusha
adc
pop
insl
xor
fcmove
sbb
cwtl
mov
xchg
stos
sub
lds
rcrb
outsl
shll
ss
addr16
xor
dec
stc
rclb
adc
dec
stos
js
pushf
mov
inc
cmp
fstps
fidivs
pop
add
stc
lea
inc
repz
jbe
jae
lods
test
mov
cmp
test
lret
mov
rcr
leave
adc
mov
sub
mov
xor
sub
dec
xor
dec
arpl
insl
jno
ss
cmpsl
mov
out
stc
xchg
fimull
testl
sti
pop
sub
jae
insl
pushf
mov
pop
adc
xchg
out
mov
mov
xchg
pop
xchg
int3
jg
mov
ss
xor
call
repnz
idivb
arpl
adc
cmp
inc
add
gs
ss
pushl
stc
jg
fdivr
lods
jnp
add
xchg
cmc
adcb
push
inc
sub
fcoml
dec
scas
shll
inc
fsubrl
lcall
jb
adc
cmc
jno
push
mov
inc
or
cmp
scas
pop
adc
js
or
xlat
jp
adcl
sarb
push
jbe
cmc
jbe
jns
xchg
aaa
in
cwtl
lret
adc
ss
xchg
bound
ret
ja
shl
insb
ss
adc
mov
jae
lock
lock
push
jge
ret
cmc
lret
mov
stos
repz
gs
int
jl
ja
cmc
mov
fcmovu
mov
bound
aad
shl
pop
push
inc
in
popf
stc
pop
sbb
stc
ret
divb
push
js
and
xlat
dec
mov
push
jb
dec
xchg
xorl
cmc
fsubl
ss
jne
sarb
out
adc
push
adc
ss
test
push
inc
ret
xor
clc
aas
out
push
xlat
cltd
xchg
pop
jb
fwait
sbb
pop
adc
gs
cmc
lcall
clc
cmp
fbstp
xchg
daa
xor
stc
inc
cmp
inc
jne
pop
cmp
fmul
aaa
cmp
sahf
pop
lret
add
jg
div
inc
jne
aad
lds
pop
cmp
mov
sbb
mov
ret
push
stc
fildl
mov
aam
insl
push
mov
push
mov
xorb
xchg
rclb
cmpsb
xor
cmp
mov
dec
push
jp
cmc
mov
fs
lcall
mov
mov
fsubs
aam
push
inc
addr16
xor
sub
sbb
lds
xchg
aam
mov
cmc
in
ja
jbe
mov
sub
es
pop
flds
outsl
cmc
dec
xor
sub
ss
cmp
lahf
dec
xchg
cmc
fmul
fstl
push
fcoml
inc
das
shll
das
test
arpl
outsb
shlb
fnsave
jbe
jns
shrb
jae
inc
into
shrl
jae
push
dec
sbb
cmc
adc
cmp
jge
mov
cmpl
stc
ret
push
das
les
mov
xchg
jge
cmc
mov
pushf
cmc
iret
sbb
xor
fadd
lea
push
les
popw
push
mov
and
jbe
sbb
insb
arpl
mov
gs
fisubl
sub
and
ss
lock
mov
stc
jge
shlb
ja
lds
fcmove
pop
push
mov
rcrl
fisubs
fnstenv
lcall
add
cld
and
adc
push
iret
mov
ss
hlt
jb
cs
mov
clc
rcr
inc
fdivrl
imul
faddl
cmp
cmc
popl
bnd
cmp
dec
js
dec
push
sar
push
and
adc
daa
ss
movsl
xchg
popf
js
jg
add
stc
js
stc
pop
clc
inc
sarb
add
aaa
adc
ss
dec
cmc
hlt
jb
xor
fidivl
mov
inc
adc
push
jle
stc
mov
adc
ss
dec
arpl
ss
or
pop
cs
cmc
arpl
pop
jg
inc
repz
das
sbb
hlt
sbb
fs
cmp
jp
mov
sub
cmc
sbbb
ja
push
int3
jg
sub
push
cld
cmp
aaa
jg
add
cld
pop
imul
fidivrl
push
xlat
int3
cltd
es
mov
nop
inc
pop
subl
repnz
dec
mov
unpcklps
hlt
dec
cmp
mov
push
mov
in
je
dec
lods
adc
ss
mov
rclb
lock
lods
pop
jns
ss
add
pop
ret
jge
jge
mov
lahf
pop
adc
cmpsl
dec
lea
loope
pop
outsl
mov
mov
int3
xchg
cmp
pop
xchg
mov
adcl
mov
adc
fwait
mov
outsb
mov
mov
and
adc
ret
sub
inc
xor
mov
lods
cmp
and
xor
ljmp
cs
push
and
mov
notb
push
loope
sbb
pop
mov
ljmp
and
lods
cltd
adc
mov
inc
cmc
push
and
adc
xlat
dec
push
lahf
xlat
inc
lods
mov
mov
xchg
ret
cli
adc
sbb
jb
lds
sbb
cs
fists
lret
pop
loope
mov
cs
icebp
pop
fwait
mov
rclb
and
mov
jge
mov
mov
loope
push
push
dec
cmc
mov
mov
repnz
jbe
and
mov
mov
scas
xor
aas
pusha
mov
dec
mov
jg
cmp
cmp
enter
sub
es
sub
dec
and
insl
pop
add
ss
lahf
xor
sbb
sbb
clc
clc
jecxz
leave
mov
push
and
pop
add
pop
mov
fistpll
cli
sub
mov
and
ss
adc
mov
fs
test
sub
xchg
in
and
roll
xor
loope
adc
rorb
xchg
outsb
pop
add
mov
popf
sub
movsb
rolb
ret
adc
mov
fs
test
sbb
mov
mov
mov
sub
fwait
xchg
hlt
mov
jns
mov
fcmovnbe
icebp
mov
push
and
push
adc
pop
pusha
shlb
mov
and
mov
int
mov
push
call
mov
xchg
fldenv
xchg
mov
push
loope
push
or
or
inc
sbb
insl
mov
mov
cmp
bound
push
loope
and
mov
xor
push
sub
mov
push
repnz
dec
das
mov
cmp
push
fldcw
and
pop
sbb
and
mov
push
push
lgs
bnd
push
lret
es
aam
clc
mov
jne
and
cs
cltd
cmc
sbb
mov
push
jno
xchg
sbb
mov
test
gs
xor
push
cmp
call
sti
sarl
add
cwtl
xchg
sub
xchg
push
adc
hlt
sbb
sub
xor
pop
les
mov
xor
mov
xor
mov
mov
fdiv
dec
js
mov
adc
xchg
out
jle
add
xchg
jmp
mov
sti
or
icebp
pop
test
inc
rorl
xchg
pop
jbe
mov
loope
lock
mov
divl
jmp
stos
popf
xor
inc
lahf
and
xchg
cmpsb
jbe
aam
in
add
cmp
cs
adc
push
scas
ss
inc
rorl
add
jbe
out
pop
mov
test
stos
xchg
out
or
das
add
adc
leave
xor
cmpb
or
push
jbe
aam
adc
jb
xchg
test
decb
rorb
xor
mov
pop
sub
or
fscale
xchg
scas
mov
sbb
cltd
xchg
jb
mov
sbb
mov
pop
mov
xor
mov
lods
push
or
ficoms
stos
cmp
imul
or
leave
int
ret
mov
pop
pop
sub
enter
in
clc
or
out
repz
icebp
mov
mov
cld
sbb
sbb
fsubrs
mov
rcll
dec
sarl
pop
in
adc
mov
xlat
or
sti
aaa
push
leave
insb
shl
out
push
sbb
in
fnstenv
xchg
pop
mov
jns
fnstenv
add
mov
movl
mov
jb
cltd
int3
push
test
imul
fsubrl
call
push
rcl
sti
nop
rcrb
mov
pop
cld
cmc
test
ficoml
imul
sub
mov
mov
xchg
mov
fsubs
popf
pop
sub
or
leave
outsb
mov
filds
ja
mov
cwtl
xor
mov
das
out
data16
and
add
pop
jns
icebp
rclb
jno
mov
push
and
fdivrp
adc
dec
xchg
pop
negl
adc
ja
xlat
fisubrs
vpsraw
scas
iret
jg
sahf
sahf
es
inc
iret
std
cltd
push
insb
push
dec
leave
push
inc
dec
das
mov
mov
shll
lock
das
iret
aas
inc
dec
fidivrl
mov
out
es
stc
mov
flds
or
add
jo
movsl
add
clc
pop
xlat
mov
sub
adc
clc
pop
xlat
mov
sub
sub
push
popf
pop
or
adc
cmp
mov
sub
out
sti
and
sub
out
pop
mov
cmp
mov
fnsave
fnsave
and
stos
mov
mov
sub
shll
daa
add
mov
movsb
fstpt
popf
shl
cs
sub
stos
pop
shl
mov
mov
lret
xchg
push
jmp
mov
icebp
pop
stos
rcrl
sub
fwait
or
mov
lea
daa
add
mov
lea
dec
adc
das
add
mov
cmpsl
jg
adc
or
mov
cmpsl
fimuls
or
ds
out
jb
mov
sub
cmp
and
sub
mov
fwait
or
adc
int
das
add
sub
int
xlat
mov
fistpl
fildl
movsl
rorl
sub
and
int
fildll
dec
shll
shrl
call
shrl
popa
push
sub
sub
pop
adc
popa
push
sub
sub
pop
adc
mov
fwait
cs
pop
test
lds
stos
or
out
pop
mov
jb
push
sub
fstpl
mov
mov
int
xlat
mov
mov
out
xor
add
pusha
cmp
adc
clc
pop
fbstp
push
add
or
adcl
push
or
mov
test
push
cli
test
inc
adc
sbb
jl
clc
stc
push
fidivl
jle
inc
pop
jecxz
mov
aam
mov
add
shrb
adc
or
repz
in
jns
and
je
jmp
or
mov
push
dec
adc
mov
mov
or
push
cmp
or
push
sub
dec
sbb
cwtl
fs
inc
sbb
inc
sbb
dec
test
arpl
adc
adc
add
dec
inc
adc
js
xchg
inc
dec
negl
push
in
in
xor
sbb
pop
adc
xor
adc
pusha
lahf
subl
adc
jmp
fisubs
icebp
lock
addr16
pop
imul
or
shr
arpl
add
cltd
mov
rol
and
add
leave
lret
lret
lods
cmp
mov
cmp
sbb
jge
and
fwait
sbb
lret
scas
cltd
dec
xchg
cmp
popf
sbb
sub
ja
xchg
xor
ret
sbb
mov
or
sub
rclb
mov
mov
or
stos
loopne
call
shl
push
pop
shr
rcr
lock
call
fdivrs
test
pop
outsl
loope
jbe
pop
aad
pop
fwait
add
test
je
mov
dec
xchg
movsw
or
push
fdiv
lock
mov
cmc
test
mov
push
dec
mov
cltd
pop
fsubrl
negb
or
insl
cmp
inc
pushf
or
jecxz
iret
dec
jl
mov
pop
imul
pop
jle
insl
in
push
fisubrs
cmp
cld
imul
adc
sub
cvtps2pi
fimuls
mov
cmp
mov
outsl
xchg
pop
rcrb
inc
cld
mov
pop
lahf
and
push
mov
jg
mov
ljmp
loope
movsb
sub
cs
insl
insb
dec
push
rcr
andb
scas
adcl
mov
xor
cmp
ljmp
mov
xchg
data16
push
pop
and
stc
and
sbbl
out
test
roll
ss
shl
add
xchg
push
adc
scas
loope
adc
inc
jno
xlat
adc
adc
jnp
cmp
loopne
push
jl
outsl
sub
ficomps
pop
mov
xchg
gs
mov
lock
and
jns
adcl
or
mov
imul
fdivs
pop
lcall
cld
or
dec
ja
aaa
xor
gs
mov
fs
mulb
inc
loop
scas
or
mov
fnstcw
pop
add
loopne
mov
pop
jg
es
xchg
mov
add
add
call
xchg
add
sub
into
inc
shll
xchg
add
pop
cld
test
iret
inc
movsb
fsts
mov
addr16
push
sbb
aas
inc
fidivrl
mov
cmpsl
fwait
loope
iret
push
testl
or
jge
bswap
and
gs
mov
leave
js
fsts
cmc
loope
cld
xor
js
movsl
ds
jno
sbb
push
loope
test
jg
and
call
mov
jns
sarl
adc
add
ljmp
sbb
jmp
mov
mov
hlt
lods
push
xor
sub
mov
test
cltd
scas
and
jg
dec
jge
out
lods
idivb
inc
fnstsw
xchg
mov
sub
and
add
test
rorl
sub
leave
ret
rcll
or
ret
cltd
aas
inc
pop
inc
jmp
dec
jae
nop
xlat
loope
mov
test
cwtd
sub
ds
ds
jo
in
test
adc
and
mov
mov
js
ret
jns
fnstenv
std
repnz
mov
rcl
daa
or
cmp
xchg
icebp
xor
std
ljmp
sbb
xchg
dec
out
imul
out
in
xchg
test
or
push
daa
mov
js
inc
lret
push
sbb
rclb
mull
mov
push
mov
cmp
frstor
adc
jl
dec
decb
or
or
push
or
sbb
and
test
dec
xchg
mov
cmp
add
daa
lds
add
dec
imul
dec
pop
js
sbb
aad
push
push
fstpl
fsubs
imul
dec
cwtl
jp
into
and
sbb
xchg
jo
cld
pop
sbb
notl
test
jno
ret
jg
mov
insl
popa
pop
outsb
fwait
xchg
or
jg
cs
imul
lods
mov
cltd
mov
dec
jbe
cmp
fs
sub
out
leave
add
mov
xor
adc
pop
outsb
rcrb
push
sbb
outsb
jl
call
lea
jne
shl
mov
mov
call
sub
mov
sahf
iret
scas
leave
scas
int3
es
stos
dec
loope
or
inc
mov
out
fisttps
loope
xchg
daa
jae
xor
add
out
push
lret
movsb
mov
fldt
cltd
inc
jo,pn
xlat
aam
jl
add
and
pop
jge
xchg
jl
jno
dec
scas
movsb
out
or
mov
enter
mov
pop
xor
mov
and
xor
mov
inc
add
cmp
mov
inc
push
push
add
adcb
add
stos
ljmp
mov
push
sbb
mov
je
je
xchg
dec
xlat
xor
mov
mov
pop
xor
movsl
jg
adc
js
iret
icebp
outsb
inc
sbb
testb
lods
add
push
movsl
pop
sub
sahf
xchg
mov
xchg
jns
or
daa
xchg
inc
jmp
or
rclb
pop
movsl
adc
lcall
inc
add
addr16
outsl
mov
push
push
clc
sbb
dec
aaa
push
adc
jb
jns
jnp
jo
mov
sbb
pop
lret
pop
iret
xor
lock
cltd
or
or
in
cmp
out
packsswb
andl
sbb
daa
mov
cmp
in
addr16
jae
jae
mov
cwtl
inc
mov
xor
cld
sbb
insb
xor
add
cmp
mov
in
jecxz
out
clc
fcoms
dec
sub
addl
rclb
insl
push
xor
inc
shlb
scas
outsl
and
fwait
sub
xlat
inc
xchg
dec
mov
movb
movb
push
pushf
pushl
ret
xor
sbb
mov
xor
mov
cmp
aas
pop
xor
stc
mov
iret
insl
inc
mov
out
mov
movb
xor
into
and
adc
ljmp
mov
movsl
mov
jnp
xchg
mov
adc
mov
inc
arpl
inc
movsl
cmp
je
xchg
and
popf
lods
push
push
xchg
push
xchg
pop
fsts
aad
in
xor
inc
cmp
and
push
or
imul
dec
lea
add
push
mov
pusha
cmp
push
repnz
and
sub
adc
mov
or
mov
outsl
sub
add
push
inc
adc
sahf
mov
or
inc
mov
xchg
js
bound
scas
mov
jmp
nop
out
outsl
or
dec
cmp
mov
mov
xor
add
lds
aam
js
cli
out
dec
outsl
aas
jo
mov
repz
stc
sub
cwtl
jb
lock
jge
mov
stos
xchg
cmp
xchg
nop
mov
loopne
fucomip
xchg
xor
or
call
cltd
jle
lahf
sub
dec
shrl
sarl
xorb
fdivl
loop
test
push
je
aad
adc
pop
pushf
stos
sbb
adc
aam
sbb
or
add
mov
jle
pusha
push
not
pushf
call
jmp
stos
jle
lahf
rorb
insb
mov
push
mov
add
subl
clc
data16
mov
stos
sbb
in
push
push
cltd
inc
jmp
mov
sub
ficomps
push
fdivrs
rorb
stos
je
in
clc
adc
xchg
test
cmpsl
cmp
cmp
out
cltd
mov
mov
pop
sahf
fstpl
mov
push
sbb
cmp
add
xor
popf
movsl
cmp
inc
and
mov
ret
and
mov
sbb
icebp
sub
aaa
mov
jb
aam
mov
in
or
mov
ret
pop
in
sahf
andl
adc
or
jne
dec
test
xor
cmp
jecxz
cmpsl
jae
mov
cmp
pop
stos
std
add
mov
movlps
push
imul
sahf
fdivrs
inc
and
cmp
mov
aam
mov
mov
sub
pop
mov
lahf
push
out
out
sbb
sti
outsl
dec
arpl
xchg
push
and
or
loopne
cmc
rolb
xchg
rorl
or
mov
xchg
mov
pop
in
dec
dec
fwait
mov
sub
arpl
ss
cs
inc
sub
out
xor
sbb
sub
xor
mov
mov
mov
or
xor
push
adc
jb
adc
sbb
lcall
sub
lods
push
das
inc
bnd
aas
stos
ret
sub
inc
mov
inc
mov
cli
add
adc
xchg
or
xor
pop
xchg
ljmp
xor
xchg
clc
xor
xor
mov
js
das
icebp
cmp
arpl
cmp
mov
push
inc
jp
sub
data16
shlb
adc
adc
fcoms
xlat
xchg
pop
lahf
scas
xchg
mov
sbb
and
sbb
mov
mov
notb
jp
pushf
mov
shr
in
js
jae
sub
in
vpaddw
add
test
pop
mov
pop
sahf
xchg
sub
xor
or
hlt
fsub
push
sti
nop
xchg
ret
pop
adc
ja
aaa
adc
and
dec
lret
mov
dec
or
or
push
sbb
jae
cld
push
dec
xchg
mov
leave
xor
mov
pop
mov
push
loop
jb
sub
xchg
or
adc
imul
dec
test
out
mov
push
add
rol
addr16
movb
and
leave
mov
xlat
push
ss
jp
push
mov
dec
out
push
lcall
jmp
jp
clc
insl
frstor
add
or
dec
pop
adc
xlat
mov
cmp
outsl
mov
cltd
ljmp
andl
and
mov
ret
push
imul
pushf
movl
test
add
pusha
push
push
lea
jmp
inc
jmp
call
mov
pusha
pushl
ret
push
mov
push
mov
leave
lods
inc
cmpsb
dec
sub
into
test
dec
sti
push
push
cmp
in
aam
subl
sbb
repnz
xchg
mov
and
mov
mov
fadd
inc
popa
pop
mov
mov
add
xchg
test
imul
sub
inc
dec
dec
in
push
sub
mov
push
sbb
pop
mov
call
mov
jmp
jmp
xor
cmp
into
and
and
nop
inc
es
das
dec
das
xchg
fimuls
cmp
jbe
adc
mov
imul
pop
pop
enter
mov
cld
ficoms
repnz
xor
adcl
or
sub
sub
pop
lcall
filds
inc
das
adc
cmc
xchg
notb
pop
jg
pop
jo
jl
mov
jns
jp
push
sbb
dec
mov
jp
bound
sbbl
mull
shrb
das
mov
mov
test
push
add
pop
and
dec
leavew
xor
mov
add
es
jp
adc
mov
mov
adc
je
andl
push
push
mov
sbb
insl
dec
pop
in
sub
pop
mov
insl
scas
jecxz
loope
in
push
sbb
push
int3
adc
outsl
inc
orl
fidivl
push
xor
sbb
ja
cld
mov
int
rcrb
jmp
sbb
and
ss
inc
mov
push
cmp
test
insb
lds
fsubs
scas
jbe
subb
sub
sbb
add
rorb
push
je
mov
scas
adc
jmp
fstpl
push
sbb
jmp
mov
in
gs
andl
out
lods
insl
dec
cltd
stos
sub
push
cli
xor
cmp
outsb
fisubl
or
hlt
lock
out
int
push
add
aam
arpl
nop
jae
mov
pusha
inc
pop
popl
push
inc
inc
mov
aam
pushf
xor
roll
ret
insb
mov
lret
xor
cs
ljmp
cmpsl
jmp
adcl
sbb
adc
shr
pop
push
add
mov
ror
mov
jmp
sbb
lods
icebp
out
add
imul
outsl
test
add
mov
sbb
dec
mov
ss
enter
addr16
daa
iret
addr16
invd
mov
fsubrs
loop
lcall
in
imul
leave
mov
lret
jns
lcall
cltd
mov
fidivl
ljmp
rorl
add
ret
dec
aad
es
mov
lret
fyl2xp1
mov
mov
scas
lret
lea
cmp
mov
jecxz
stos
in
pop
jmp
and
sub
leave
push
sbb
loopne
rcrb
mov
jl
jne
repz
jno
cld
push
jg
push
mov
sub
ret
dec
xchg
adc
fldcw
xchg
or
mov
sub
inc
ljmp
xor
cmp
lret
lret
in
popa
push
add
xchg
mov
sbb
mov
bnd
or
ds
push
gs
jb
daa
adc
fisttpl
loope
lea
mov
or
lcall
push
jbe
aad
push
sbb
movsl
jno
push
push
adc
out
xchg
pop
fwait
pop
adc
push
sbb
imul
aas
out
icebp
aam
sub
out
jnp
enter
ja
icebp
xchg
sub
lds
stos
ljmp
jns
sti
dec
cmp
dec
push
lods
xchg
dec
lcall
mov
in
add
dec
push
push
jb
test
les
xlat
or
popa
jnp
push
or
pusha
cmp
movb
mov
push
sub
jne
push
and
mov
add
or
inc
push
cmp
push
sbb
out
pop
and
mov
mov
push
jmp
push
in
stos
addr16
adc
mov
jecxz
jb
mov
pop
or
sub
xchg
daa
fdivrp
aam
test
jg
int3
iret
fstps
lret
sub
stos
imul
out
rorb
out
icebp
lcall
jl
dec
sbbl
loop,pt
stos
dec
outsl
pop
and
loopne
int
jne
cmp
test
scas
sub
addr16
lods
popa
mov
arpl
push
sbb
dec
mov
lea
jle
inc
mov
call
call
test
mov
cli
adc
jp
cmc
xchg
jne
jb
cmp
pop
lea
mov
or
lock
cmpb
aas
or
cmpsb
fsubrp
lock
arpl
adc
int3
and
clc
in
dec
push
push
std
adc
xor
jne
iret
jmp
daa
mov
loop
call
loopne
pop
push
stc
aam
pop
insb
push
xchg
push
xchg
rcll
push
sbb
jae
xchg
cltd
sarb
sub
sahf
jb
rcrl
push
pop
loop
loope
in
mov
in
adc
out
mov
std
cli
imul
mov
mov
cmovbe
dec
mov
pcmpgtd
or
popf
cmpl
lahf
stc
pop
divl
push
add
dec
or
rorl
addb
orl
pop
test
adcb
into
test
dec
stos
clc
cs
cmc
shl
fadds
sub
pop
cmp
xlat
xor
sub
insb
clc
push
inc
inc
mov
stos
movsb
enter
sbb
fstpl
mov
push
jl
pop
mov
movsl
stos
xchg
xor
pop
push
lret
mov
cmp
int
dec
cmp
jne
pop
in
or
lea
lret
jns
dec
push
lea
sub
or
cmp
or
into
push
sbb
lock
popa
push
stos
int
dec
pop
push
imul
jg
jo
jno
dec
xchg
je
sbb
pop
ss
lcall
movsb
cmpl
jnp
jle
das
xchg
ret
dec
and
in
lods
imul
repnz
inc
jp
call
out
lock
arpl
jle
pop
daa
pop
popa
inc
sbb
not
xchg
xor
nop
cmp
xlat
add
in
out
lods
out
and
loope
jmp
jmp
push
sbb
fisttpl
xlat
jmp
cs
aaa
fwait
cmp
and
inc
scas
mov
leave
push
or
stos
mov
sbb
dec
imul
cmc
and
sub
mov
push
lods
dec
pop
ficoms
push
mov
mov
push
scas
imul
ret
movsb
out
xor
sub
outsb
stos
insb
cs
sub
lods
jmp
or
leave
lahf
dec
shr
ret
clc
lcall
cmp
call
add
pushf
jmp
pushl
ror
clc
clc
stc
xor
stc
pushf
test
cmp
neg
cmp
test
bt
mov
pusha
movb
add
clc
bt
push
test
pushf
mov
jmp
xchg
call
cmp
xchg
jle
jno
jae
jns
cli
fstps
dec
aas
sbb
flds
or
jne
outsl
sub
bnd
outsb
fnstcw
ret
push
insb
jnp
cli
sti
in
mov
jmp
sti
bound
loope
flds
lds
mov
je
cmc
stc
sub
inc
pusha
and
cld
pop
fisttpll
mov
int3
pextrw
test
test
mov
mov
jmp
frstor
sub
out
out
xchg
notl
jnp
popf
jp
jg
sbb
sbb
dec
aad
pop
pop
in
inc
stos
cmp
sub
jns
loope
pop
sti
push
testb
movsl
push
leave
jns
push
mov
shl
outsb
jecxz
pusha
xor
pop
dec
mov
shll
xor
shrb
mov
cmp
popa
dec
mov
bound
mov
std
lods
jno
push
mov
mov
ret
rol
pop
dec
dec
and
clc
hlt
imul
inc
mov
dec
mov
call
out
cmp
sbb
insb
sbbl
aas
fidivl
adc
sub
jmp
adcl
sbb
sub
out
in
cs
fdivrs
std
xor
fcoml
dec
xor
je
cli
xor
lcall
sbb
push
sbbl
fwait
add
cmp
push
push
aaa
push
mov
mov
gs
ja
inc
push
int
imul
pop
push
test
inc
cmp
insb
xor
sahf
sub
jle
stos
sbbb
outsl
mov
fdivrp
fnstcw
cmpsl
cmpsb
mov
mov
mov
or
aad
rcr
hlt
inc
or
imul
pop
inc
push
jge
pop
ds
push
jb
mov
cli
cld
das
pop
jnp
dec
icebp
mov
mov
jl
jbe
push
sbb
aad
sarl
mov
imul
push
xor
cmp
in
mov
mov
stos
adc
mov
fdivrs
fcomip
bound
loop
das
repnz
dec
mov
mov
jp
or
sahf
inc
mov
push
je
adc
sbb
cmpsb
mov
aas
add
icebp
mov
mov
add
idivl
push
or
int3
push
mov
mov
or
mov
enter
pop
jns
cwtl
mov
ftst
add
sub
in
mov
push
insb
dec
push
sbb
bound
repz
inc
bound
rcrb
fwait
jo
jno
xor
inc
fadds
std
roll
movsl
mov
pop
fucomip
or
jecxz
ljmp
or
mov
sti
add
popa
mov
lret
inc
movsb
jmp
inc
mov
mov
or
popa
loope
mov
push
mov
vmovddup
push
out
xchg
aad
pop
xchg
rcll
lds
hlt
call
call
push
clc
sete
and
pushf
mov
ror
lea
mov
neg
ror
call
mov
jmp
aas
xchg
jl
pop
sub
negl
dec
xchg
jo
ljmp
xor
ret
je
jge,pt
cmpsb
mov
in
fidivl
and
xchg
mov
pushf
push
dec
negl
das
es
lret
sub
lret
pop
inc
inc
imul
push
cmpl
loopne
test
cmp
std
xlat
jns
testb
les
and
lds
stc
popf
cmp
les
int3
pop
and
stos
outsl
mov
imul
push
sbb
aad
sarl
shlb
inc
and
pop
lea
jb
push
cmp
pusha
jmp
mov
sub
js
imul
xchg
lock
jns
lock
mov
cmp
sub
add
dec
test
fildll
adc
jmp
push
xchg
into
jbe
iret
lods
mov
pop
cmp
cmp
and
pop
xchg
lea
sub
ss
inc
scas
jnp
jmp
jl
in
test
inc
pop
adc
es
push
out
pop
push
mov
imul
nop
push
pop
push
adc
sbb
sbb
outsb
jl
cli
or
sbbb
sub
cs
sub
mov
stos
fwait
mov
inc
adcb
sarl
sub
xchg
or
pop
and
xlat
fisubs
cmp
ret
loop
repnz
and
jne
repz
mov
ja
dec
pop
fdivs
gs
aam
mov
in
mov
aas
mov
push
add
in
sbb
clc
sub
outsb
outsb
mov
loop
push
adcl
sbb
adc
pop
jp
fcmovnb
flds
push
push
fdivs
aam
fisubrs
or
lds
repz
fwait
pop
lret
jp
popa
inc
sub
fs
aam
adc
push
clc
loopne
roll
or
movsl
test
addr16
dec
push
clc
pop
dec
xor
jecxz
inc
js
cwtl
test
repnz
lds
mov
pop
loopne
das
sub
movsb
rcrb
dec
outsl
pop
mov
xchg
adc
inc
sub
ljmp
xor
push
xchg
cmpsb
sbb
adc
sahf
sub
push
adc
ret
testl
pop
repz
jo
mov
fdivrs
push
in
jbe
out
jecxz
lock
dec
bound
mov
ja
inc
pop
or
sbb
scas
add
mov
xchg
test
hlt
xorl
inc
test
daa
cmpsb
mov
mov
jecxz
clc
sbb
in
pop
xchg
cmpsb
pushf
pop
lcall
sbb
movsb
jl
add
dec
cwtl
pop
or
adc
jb
jns
jnp
mov
add
stos
xor
lea
adc
daa
pushf
es
cmovg
insb
push
add
inc
mov
add
sbb
cmp
ret
mov
mov
and
loop
mov
and
clc
xchg
cli
fcmovnb
jno
mov
push
dec
or
movb
add
push
sbb
sti
out
jl
jg
mov
ds
out
fbstp
shll
fdivrs
mov
cmp
inc
pop
daa
mov
push
lock
arpl
pop
cli
fdecstp
cli
xor
push
xchg
mov
and
dec
inc
push
outsl
in
pop
test
insl
xchg
scas
fwait
sbb
aad
std
aam
push
cmp
dec
jmp
out
outsl
insl
cli
and
sbb
xor
mov
addr16
bound
rolb
pop
mov
cs
pop
ret
out
jmp
mov
jb
dec
pop
bound
addr16
sub
sbb
adc
push
subl
and
inc
and
ret
iret
jp
dec
and
mov
sahf
push
flds
sub
mov
jmp
or
fdivs
je
sahf
daa
pop
mov
pop
pop
loop
movsb
jae
mov
scas
repnz
js
add
mov
lcall
arpl
ljmp
shrl
add
pop
stos
stc
aad
xor
js
mov
cmp
cmp
cmc
mov
sub
scas
test
push
in
lahf
push
imulb
icebp
mov
fistpl
mov
or
xchg
jnp
stc
xor
decb
mov
push
xor
push
mov
and
mov
movsl
jecxz
out
out
sub
fildl
lea
ja
pusha
imul
mov
pusha
add
pushf
pushf
lea
jmp
add
dec
gs
popa
addr16
outsl
js
add
pop
jns
pop
mov
lret
and
and
push
cmpsb
jl
cmp
mov
add
imul
xorl
vphsubwd
dec
fnsave
lret
fs
inc
inc
pop
negb
ret
inc
scas
mov
cmp
inc
scas
and
fdivrl
xchg
mov
in
sti
cmp
je
decb
xor
cmc
jbe
sbb
pop
xchg
aad
dec
push
int
call
mov
push
mov
push
loopne
out
xchg
cwtl
mov
cmp
sbb
loope
push
jbe
ss
xor
and
fcom
jno
jecxz
mov
lret
cmpb
lds
fadd
arpl
out
arpl
repz
pop
imul
dec
scas
push
mov
adc
and
into
dec
popf
xchg
out
leave
popf
jge
mov
sub
push
ss
mov
rcrl
adc
pop
pop
sbb
push
sbb
xchg
xlat
add
push
shll
dec
aaa
cmp
mov
shrd
bsf
mov
cmp
bt
stc
cmc
sub
pushl
push
rep
movzbl
pop
pop
movzbw
mov
pushf
mov
pushl
lea
jmp
lods
outsb
sbb
add
add
in
and
add
add
pop
scas
sbb
add
add
adc
sbb
add
add
cld
mov
add
dec
xchg
and
add
add
jne
sbb
add
add
nop
cmc
and
add
add
stos
cmc
and
add
add
fbld
add
jg
sbb
sub
test
and
shrl
and
add
add
add
add
cld
add
jmp
xchg
cmp
pop
dec
addl
fs
movsb
dec
lods
jl
dec
stos
inc
and
into
loope
jecxz
push
stos
sbb
out
fstpt
cmp
movb
out
mov
inc
out
in
int3
jp
xlat
or
push
ss
movsb
bound
cs
stos
or
arpl
mov
jle
dec
cwtl
les
pusha
enter
inc
and
idivl
add
jo
xchg
mov
jg
rcll
mov
sbb
push
xchg
xchg
dec
mov
jle
stos
outsb
call
fs
fsubs
popl
movsb
and
or
loopne
sub
push
lcall
dec
int
push
arpl
mov
xchg
repnz
movsb
add
xchg
movsb
cmp
lcall
add
jmp
fmull
sub
lahf
subl
inc
loop
stos
adc
inc
xor
inc
hlt
lea
lods
repnz
inc
cmp
or
lds
and
and
adc
loop
sbb
movsl
xchg
ds
in
in
neg
sbb
fists
stos
pop
jge
sub
lea
fdivl
movsb
add
dec
sbb
inc
arpl
loop
push
or
pop
cmp
xor
ljmp
pop
jae
shrl
add
je
int3
in
xor
mov
xor
jno
sbb
stos
negl
dec
loope
pop
lahf
pusha
pop
loopne
and
xchg
lock
lcall
or
loop
fldl
push
mov
faddl
out
iret
hlt
mov
cwtl
jl
lahf
sub
push
xchg
xchg
shll
adc
icebp
push
sbb
add
xchg
out
mov
adcl
mov
mov
xor
out
xor
xor
pop
test
stc
fisttps
lret
add
push
sub
cmc
fcompl
mov
cli
push
data16
pop
cmp
mov
subb
mov
pop
cmp
jg
aad
cld
sbb
std
es
cmc
push
sbb
jbe
fidivs
xchg
shrb
fs
fisubl
mov
xor
filds
addb
sub
or
fcmovnu
dec
andb
or
pop
mov
movl
dec
imul
in
pop
ja
lock
daa
inc
mov
jne
lret
scas
leave
out
scas
add
test
jge
shlb
fcmovu
lea
pop
and
lods
test
je
dec
jl
inc
pop
fdivrp
lock
inc
push
popa
xchg
cmp
mov
pop
cmp
ret
push
mov
in
sbbl
jmp
pop
js
popa
mov
shlb
outsl
adcb
lahf
add
out
pop
push
add
xlat
pop
insb
cld
bound
imul
sub
push
sbb
dec
in
inc
sub
push
sub
inc
pop
add
or
mov
imul
inc
dec
fldenv
pop
movsl
pop
cmpsb
pop
mov
out
popf
mov
aaa
ja
fs
mov
mov
and
and
adc
sub
and
fidivrl
or
addb
jnp
sub
fsincos
out
mov
push
ljmp
movsb
loopne
and
mov
std
xlat
movzbw
shl
add
neg
neg
mov
shr
inc
clc
mov
add
cmp
shl
stc
movl
or
mov
cmp
test
pushf
cmp
pushf
lea
jbe
movzbw
xchg
bsr
mov
sub
and
mov
mov
btr
ror
stc
push
mov
movzbw
call
push
std
popf
ds
lock
xor
or
jbe
adc
sbb
xchg
movsb
fdivl
cwtl
mov
les
sub
movsl
jns
or
xchg
inc
pop
hlt
jmp
xchg
mov
xchg
pop
mov
lods
je
sarb
pop
mov
cltd
pop
jmp
push
xchg
nop
push
sbb
xor
pop
dec
repnz
leave
popa
inc
lods
inc
scas
into
and
adc
js
add
repnz
sbb
lret
dec
or
push
push
sarl
or
int
mov
sbb
fadds
ss
stos
scas
mov
mov
mov
imul
daa
pusha
js
lock
xor
mov
call
push
or
dec
push
aam
repnz
mov
mov
or
sbb
fwait
repnz
pusha
into
andb
lret
add
std
mov
mov
repz
pushf
mov
cmc
test
cmpb
pusha
pusha
pushf
lea
jne
call
cmp
pushf
pushf
lea
jae
pusha
mov
bt
clc
cmp
pusha
call
mov
jmp
mov
popa
ljmp
cmp
in
out
subw
in
jbe
lret
cld
sub
lret
mov
das
inc
sub
push
repz
push
and
jns
popf
imul
bound
dec
cmp
push
and
push
pushf
out
cmp
cs
and
dec
leave
mov
pop
pop
sbb
divl
push
scas
jb
fwait
mov
and
inc
popa
inc
inc
and
or
mov
add
sbb
and
cmp
mov
mov
andl
dec
shl
cltd
jg
in
adc
mov
jl
daa
or
lahf
test
sbb
in
div
sub
pop
cmp
sub
popa
jae
fwait
mov
int
in
call
mov
dec
insb
pusha
lret
adc
or
inc
aas
sbb
xor
scas
add
pusha
arpl
adc
inc
xor
fcmovnbe
hlt
mov
aam
rcll
aad
mov
xchg
ss
sbb
pop
cltd
sbb
add
or
cmpsb
xchg
adc
icebp
out
mov
mov
stc
ja
jle
mov
or
add
pop
sub
xchg
sbb
xchg
loope
cmpsb
cmp
out
mov
stc
lock
pop
sub
cs
push
adc
pop
leave
mov
outsl
scas
xchg
add
jns
xlat
push
push
stc
fcos
push
cmp
or
add
push
fisubs
mov
xchg
aam
leave
mov
test
xor
xor
sbb
cmp
pusha
pop
mov
notl
xor
pop
jo
ja
loope
scas
pop
mov
jbe
xchg
push
push
mov
pop
pop
repnz
mov
dec
mov
mov
xchg
out
psadbw
inc
fdivr
loope
out
test
adc
clc
jmp
mov
cmc
leave
or
pop
jg
das
popf
rcr
adc
sub
dec
in
xchg
and
mov
mov
cltd
jb
aas
push
jne
cmp
hlt
in
xor
lcall
cltd
sbb
leave
ret
rcr
sub
sub
sub
xchg
pop
jecxz
add
push
jnp
sbb
aad
and
cltd
and
sbb
aad
mov
or
pop
outsl
cmp
pop
and
jno
sub
cmc
pop
rcll
pop
push
push
pop
xchg
ret
mov
xchg
test
mov
jns
push
xor
out
mov
xchg
inc
cwtl
jg
or
cltd
enter
sbb
daa
xchg
pop
push
stos
ja
sbb
in
adc
out
test
fwait
xchg
jge
ja
lret
pop
lds
jp
fsubrs
adc
repz
leave
test
xorl
sbb
sub
int
pop
and
aad
jae
dec
add
adc
jle
ja
das
lods
pop
in
outsl
mov
mov
mov
test
pushf
jge
cmpsl
testb
dec
bnd
in
in
inc
sbb
mul
jmp
in
fldl
ss
fldcw
stc
jb
xchg
cmpsb
int
in
adc
cltd
sbb
pop
bound
mov
mov
fstl
sub
sar
xor
push
sbbl
xor
stc
inc
pop
popa
mov
xor
sbb
mov
sub
pop
xorb
out
aad
inc
adc
sbb
dec
int
fcoml
jl
leave
mov
cmp
enter
frstor
xchg
cmpsb
push
jmp
daa
rorl
inc
cs
hlt
inc
subl
lds
or
xchg
outsl
jg
pop
pop
mov
push
fucom
fimull
xor
push
sbb
sbb
add
lods
inc
dec
sarl
js
cmpsl
mov
fnstenv
loope
mov
imul
popf
and
adc
jle
movsb
mov
push
pushw
leave
aas
das
pop
in
or
lds
fs
push
push
jecxz
add
mov
lods
mov
sub
das
dec
mov
sub
outsl
aam
test
fldcw
test
push
pop
jle
cltd
rclb
jo
addr16
shrb
lret
dec
add
gs
and
test
ds
rorl
js
movsl
mov
pop
test
aam
cmp
jge
sbb
loop
js
insb
cltd
jecxz
xchg
div
int
push
xlat
push
and
mov
jns
loope
loope
lret
jecxz
pop
mul
hlt
pop
fucom
mov
adc
jmp
push
cltd
js
add
push
fldl
pop
jbe
sbb
jne
enter
testb
xchg
sbb
jno
jmp
xchg
mov
fnstsw
mov
inc
sbb
data16
int3
xchg
mov
sbb
pop
jle
daa
pop
xchg
and
std
add
xor
pop
std
pop
sbb
div
sbb
add
mov
push
ja
xchg
jns
mov
and
lret
call
xchg
add
aaa
cmp
inc
add
mov
mov
cmp
roll
js
inc
mov
std
xchg
sbb
imul
jmp
into
repz
dec
push
aad
cmp
push
scas
jbe
mov
iret
mov
shlb
sub
cmp
jae
leave
out
xchg
not
repz
jmp
xchg
lahf
sar
fwait
loopne
jbe
fwait
jo
or
cmp
sbb
fwait
insb
dec
imul
test
add
xorl
arpl
add
sbb
lret
loope
jmp
pushl
inc
andb
jp
xchg
data16
sub
leave
mov
aad
cltd
push
mov
shr
fcoms
shr
dec
mov
divl
lret
cmpsb
jge
and
int3
aad
and
aaa
mov
pushf
xchg
cli
ret
mov
shll
adc
adc
notb
mov
xor
in
cmp
sbb
inc
inc
sub
imulb
mov
adc
cmp
adcl
or
leave
or
xchg
mov
pusha
pop
sbb
decb
or
popa
adc
push
out
jbe
or
dec
lret
pop
icebp
inc
mov
mov
call
fsincos
shlb
test
mov
fucomp
cmp
test
mov
or
sar
cltd
jmp
ljmp
jno
jbe
cmpl
loope
fmuls
mov
jb
sarb
pop
mov
adc
rcl
jo
in
mov
and
cmpsb
inc
adc
xchg
or
mov
aaa
aas
jb
addb
faddl
mov
pushf
out
js
adc
iret
stc
add
js
mov
inc
cmp
in
inc
cmp
rolb
xchg
test
xchg
inc
push
push
cli
popf
cltd
xchg
in
shl
ja
aam
out
clc
mov
lock
scas
add
ja
fmuls
inc
data16
ret
lret
inc
adc
rcl
cmp
cltd
push
mov
loopne
dec
shlb
rcl
push
xchg
cmpsb
xlat
sbb
mov
fldenv
neg
test
popf
push
cmp
mov
cld
inc
rcl
pop
cmp
sbb
sub
rcll
push
xor
xchg
imul
pushf
pop
dec
mov
xchg
push
adc
mov
pop
out
pop
das
jg
sbb
mov
xor
cmc
sbb
test
jb
xor
fmul
adc
jmp
xor
dec
ror
dec
jg
sbb
rcrl
adcb
adc
adc
test
jecxz
cmp
aam
push
adc
or
out
or
lret
push
test
aas
or
mov
sbb
push
push
ljmp
mov
adc
call
add
jmp
push
push
call
inc
shr
inc
pop
repnz
movsl
fistpll
nop
cltd
jle
call
or
sti
jno
adc
mov
xor
lahf
mov
add
std
jle
mov
mov
or
leave
or
adc
dec
lea
aas
cwtl
mov
inc
icebp
popf
or
jle
fists
jno
shll
mov
push
inc
popf
cmpsl
js
jle
popa
std
sbbl
add
sbb
or
jb
iret
cld
popa
leave
int
pop
inc
adc
clc
fnsave
popf
jb
sti
lea
cltd
je
mov
lret
inc
lcall
fidivl
fstl
adc
xchg
mov
mov
or
test
testb
out
xchg
adc
clc
inc
call
mov
xchg
adc
ss
pop
push
sbbl
mov
or
leave
mov
or
sbb
js
cs
adc
popa
mov
dec
in
sbb
mov
fadd
or
insb
xchg
stc
rcrb
leave
cmp
add
sbb
or
addr16
lahf
fcomip
jo
loopne
pop
shr
jbe
jp
stc
leave
inc
push
or
pop
rclb
and
bound
lods
jp
and
shl
dec
jmp
xchg
inc
clc
repz
sti
mov
and
or
andb
xchg
fcoml
pop
lret
push
stc
clc
aam
jle
std
jno
andb
jecxz
xchg
flds
sub
and
inc
stos
ja
jb
mov
dec
xchg
pop
mov
push
fdivr
lods
mov
mov
jmp
push
out
push
xchg
mov
clc
dec
cs
and
and
and
jge
imul
arpl
pop
jmp
iret
cmp
xlat
push
mov
roll
cmp
adc
push
jnp
xor
outsl
mov
mov
cmp
jle
pop
bound
xchg
leavew
mov
rorb
lock
push
xor
mov
inc
or
in
xor
xchg
enter
loop
push
popf
inc
pop
add
sarb
mov
data16
std
adc
pop
xlat
cltd
push
adc
ja
scas
jg
in
ds
pop
or
fcmovbe
or
addr16
into
fincstp
jmp
sub
dec
mov
cmp
push
ss
call
adc
sbb
btc
push
pop
jns
cld
pop
xor
pop
xor
es
movl
std
lret
icebp
jns
rcl
mov
sti
loope
cmp
mov
sti
lahf
or
shll
mov
xor
shl
adc
add
mov
test
loopne
push
dec
push
mov
mov
pop
adc
enter
rorl
mov
mov
popa
inc
mov
addl
scas
dec
sbb
sub
sete
mov
inc
xchg
pop
dec
jae
add
mov
repz
pop
cltd
or
fstl
das
mov
ror
push
test
sub
pop
into
lahf
fs
mov
xor
cs
mov
jb
push
dec
push
or
int
pop
inc
clc
hlt
repnz
xchg
dec
sbb
ficompl
cmpsb
mov
arpl
mov
or
imul
and
inc
pop
roll
loope
outsl
and
fsubrl
stos
in
push
sub
pop
xor
cltd
data16
inc
aas
xchg
push
shl
leave
push
jne,pt
jmp
fcmovu
sar
or
cmp
inc
faddp
adc
clc
mov
inc
inc
cs
push
lret
loopne
in
push
loopne
fisubl
add
mov
sbb
ss
adc
mov
lret
xchg
push
jle
xchg
mov
sarb
xchg
sub
mov
into
xchg
jne
gs
cmpsl
fimuls
icebp
jle
sarb
ret
movsb
xchg
mov
adc
xor
data16
repnz
xchg
or
test
test
or
testb
icebp
dec
inc
jg
xlat
push
mov
jp
jg
adc
lret
call
clc
mov
jmp
hlt
cld
and
pop
jle
and
in
test
xchg
clc
fsubp
sbb
xchg
jb
add
scas
scas
mov
mov
mov
pop
fmull
popa
sbb
popa
std
ror
pop
stc
cmc
fidivrl
mov
mov
fdivl
scas
daa
or
sbb
cmp
insl
lock
inc
mov
call
data16
repnz
jne
addr16
lock
fmuls
and
fnop
lret
mov
out
loopne
mov
jnp
clc
aas
push
or
adc
or
or
mov
sbb
inc
or
mov
fbld
ja
jbe
fbstp
mov
loope
iret
add
negl
push
xor
fists
and
aad
cs
popa
shl
xchg
mov
shrb
icebp
cltd
out
jle
xlat
shrb
push
fdivrs
adc
icebp
rolb
sub
int3
pop
push
imul
jbe
xchg
je
stc
jne
repnz
mov
mov
xchg
dec
cmpsb
xchg
jp
push
stc
adc
xchg
add
rcll
mov
nop
movsb
sarb
mov
jb
test
lock
imul
mov
pop
jno
aam
bnd
and
mov
cltd
imul
xchg
adc
fidivrl
xchg
cltd
mov
cmc
inc
jno
shlb
or
mov
push
sarb
aaa
loopne
out
loopne
adc
icebp
fcmovbe
mul
rcrb
sbb
add
push
mov
xor
dec
out
rorb
add
ja
int
dec
shlb
movsb
pop
push
in
jno
scas
rcr
and
mov
sbb
incb
scas
shl
test
je
shl
xchg
dec
rcll
fstpl
sub
popa
rolb
ja
pop
je
sti
scas
std
in
loopne
movb
sti
sbb
cmc
pop
mov
jb
ret
jnp
mov
jnp
aas
and
lret
cmp
mov
cwtl
xor
push
rcrl
jne
imul
shl
pop
xchg
jo
iret
vpminub
and
or
inc
in
dec
mov
subb
adc
push
push
xchg
push
mov
jo
push
mov
push
int
inc
pop
inc
mov
lret
stc
mov
aas
lcall
inc
xchg
or
lock
sbb
or
fsubl
arpl
lea
aad
fimull
test
arpl
dec
es
lods
test
jno
xchg
fdivs
loopne
jmp
rclb
and
mov
jbe
std
int3
mov
neg
push
sub
rol
rcrb
inc
dec
mov
or
xchg
fscale
xor
jbe
xor
rorl
xchg
xlat
sbbb
push
ficoml
or
ja
test
adc
jle
cmpl
cltd
icebp
xchg
xchg
std
mov
ljmp
aaa
xchg
push
add
xor
movl
ror
adc
in
mov
mov
and
and
sub
call
sub
push
jns
fnstcw
ljmp
aas
add
repnz
clc
xor
test
xlat
dec
sbb
mov
insl
push
xlat
push
stc
sbb
mov
outsb
leave
cmp
or
push
mov
jmp
mov
icebp
push
adc
xchg
xor
sti
xchg
xchg
add
pop
inc
push
xlat
jle
icebp
nop
adc
push
jns
ss
ret
enter
arpl
sub
fucom
int
movsl
sbb
leave
jmp
sbb
add
inc
rclb
ss
sbb
sbb
arpl
mov
xor
cli
nop
fisttpl
mov
sbb
rcl
loope
rcl
add
ja
jne
pusha
mov
inc
jne
mov
fwait
mov
imul
push
push
sbb
or
cwtl
mov
aad
sbb
dec
xchg
lds
in
ss
push
leave
xchg
cmp
mov
jmp
add
ja
ror
loop
adc
mov
xchg
subb
das
rolb
pop
xchg
sbb
or
out
clc
nop
dec
jns
pop
mov
out
sbb
mov
cltd
push
pusha
mov
add
out
mov
mov
shlb
cmp
mov
or
adc
mov
mov
sub
testl
mov
sbb
std
cwtl
pop
adc
xor
add
clc
jmp
push
and
bt
xor
rcl
scas
stc
jbe
pushf
imul
mov
mov
in
inc
or
adc
addl
loope
repnz
icebp
js
out
xorl
insb
mov
lcall
frstor
lods
roll
mov
outsb
rorb
test
jns
fnstcw
sub
cmp
xchg
std
jbe
jbe
sub
cmp
leave
mov
dec
mov
hlt
popf
jns
movb
rcl
push
jmp
test
mov
sbb
shrl
sub
out
adc
mov
mov
fisttpll
push
dec
fcmovnb
leave
adc
fidivrs
std
mov
lret
data16
cs
aad
jmp
sub
or
lods
pop
jmp
cs
sti
adc
sbb
ret
call
push
pop
jle
aaa
movl
pusha
add
fldcw
lret
imul
add
cmp
test
and
adc
imul
sub
adc
jno
pop
cmp
out
mov
cmp
xor
subl
sbb
in
sahf
fptan
dec
idiv
cmpsl
xlat
xlat
cltd
inc
push
pop
push
adc
add
cmpsl
pusha
push
xor
push
leave
jle
cmpsl
mov
stc
mov
xor
dec
stos
pusha
mov
aaa
fistl
mov
jo
out
mov
sbb
rorl
jno
das
loopne
call
add
sub
icebp
or
rcrl
jbe
xchg
jl
test
rclb
clc
fsts
inc
push
push
cmp
cwtl
jle
int3
fcoms
clc
xlat
popa
add
mov
sbb
stc
mov
mov
cwtl
adc
shrl
push
push
rclb
and
into
push
jg
mov
and
ja,pt
dec
cmp
sub
es
push
mov
or
and
outsb
add
xor
rorb
cmc
pop
testb
jne
mov
sbb
pop
or
pushf
fisttpl
stos
stc
pushf
addr16
pop
mov
pop
nop
mov
mov
pop
call
pop
dec
notl
xchg
fcomps
pop
mov
xchg
sub
or
sbb
pop
rcr
jle
inc
lods
sbb
or
clc
mov
mov
mov
enter
incl
fists
mov
or
mov
leave
mov
push
repz
fldl
leave
and
test
daa
and
shl
jbe
sbb
xlat
pop
cld
out
sar
jbe
mov
inc
or
movsb
or
sarb
push
pop
or
cltd
pop
aad
push
pop
lret
cmp
int3
dec
out
jns
pop
mov
push
shrb
leave
popf
and
icebp
std
flds
mov
xchg
or
movsl
xchg
clc
jb
push
push
gs
imul
push
fmul
mov
jge
sbb
xor
inc
add
cltd
cld
jae
call
cmc
popf
adc
push
jb
loop
mov
or
cwtl
cltd
stc
sub
fildl
js
sti
test
add
test
shll
sbb
add
lds
aad
mov
sti
lret
adc
push
inc
popa
insb
call
sbb
in
sbb
je
outsl
leave
and
fmul
sbb
inc
add
cmpsl
sbb
pop
lahf
pop
inc
xchg
sar
push
xchg
pop
out
scas
out
jg
sbb
sbb
lods
sub
mov
jne
push
push
sub
push
aaa
push
cli
rcrl
sub
cmpsl
out
stc
mov
pop
mov
sbb
scas
xor
shlb
aam
sti
cmp
jmp
push
fs
sbb
sti
imul
adc
mov
push
fucomi
inc
xor
loop
rcrb
into
jg
push
mov
sbb
mov
fbld
lret
les
aaa
push
mov
sbb
mov
shlb
cmc
ss
idivl
leave
xchg
dec
loope
hlt
sub
push
movsb
cltd
mov
sbb
xchg
rol
sbb
push
sbb
out
pop
add
sub
push
push
out
popf
test
push
or
push
in
data16
xlat
mov
inc
sbb
test
mov
int
and
sbb
cld
mov
pop
stos
xor
fstpl
adc
push
mov
sub
shll
dec
insl
sbb
or
jle
pop
jnp
pop
xchg
jo
movsb
ret
dec
or
rolb
jge
sbb
mov
and
jle
and
push
add
mov
mov
jbe
jbe
scas
inc
pop
je
adc
insb
icebp
gs
mov
jecxz
in
fists
mov
sti
and
or
fistpll
jmp
cmpsb
jb
inc
pop
dec
xchg
pusha
fsts
fstps
inc
arpl
lds
cs
divl
lock
pop
ss
out
sahf
mov
xor
dec
and
mov
and
rol
add
fnsave
push
sbb
adc
scas
xchg
inc
idiv
lods
xchg
fimuls
xchg
push
out
jg
mov
or
dec
or
cmp
push
inc
jle
aad
imul
sbb
fcmovnb
test
test
sub
aam
add
inc
xor
in
push
cmp
mov
push
stc
push
xchg
addb
push
mov
lahf
xor
mov
stos
pop
addl
xchg
xor
fisttpll
cmp
int
mov
push
adc
pop
mov
sbb
jge
push
add
repz
cwtl
enter
orl
xchg
mov
loope
adc
sub
lret
int3
xchg
iret
push
nop
adc
or
mov
xchg
xchg
push
adc
sub
stc
sbb
lret
jae
xor
rorl
repz
push
dec
mov
sbb
or
or
lods
push
jecxz
push
sbb
loope
rcrb
out
ficompl
in
fwait
push
pop
xchg
sub
fldenv
xchg
add
mov
or
sbb
push
int
cmp
mov
mov
repnz
daa
xchg
rcl
in
push
shll
scas
fcomps
cmc
enter
fisubrl
add
xchg
inc
jb
lods
or
mov
pop
sbb
lods
mov
push
call
jge
dec
push
mov
mov
rcr
cmovo
aas
adc
call
js
out
xchg
mov
push
clc
mov
pop
lock
lods
push
mov
addr16
xchg
xchg
das
in
lret
cltd
ljmp
jbe
or
test
movsl
loopnew
mov
push
test
mov
push
loopne
rol
icebp
push
pop
adc
fstl
adc
xchg
adc
imul
push
fwait
adc
fists
push
fstpt
xchg
leave
movsl
jb
push
xchg
outsl
gs
xchg
dec
xchg
push
fbstp
push
jmp
or
pop
aad
bound
adc
rcll
xchg
sti
shr
aam
pop
push
push
push
mov
ljmp
popf
andb
cwtl
stos
mov
cmp
push
xchg
fnsave
jne
rcl
cld
rep
shl
push
lea
xchg
mov
stc
mov
mov
mov
sub
adc
inc
xchg
cmp
push
mov
lcall
pop
xchg
fistl
nop
mov
pop
lds
fiadds
mov
daa
jno
data16
jecxz
lds
mov
icebp
adc
push
dec
lret
outsl
aaa
jl
or
nop
jmp
or
mov
or
scas
xchg
rcll
jns
jmp
loope
xor
lret
cmp
rclb
inc
adc
push
out
ss
dec
jb
pop
ja
push
test
fstl
fcompp
icebp
jmp
stc
sti
pop
and
inc
in
rol
leave
dec
adc
fisubl
mov
fadd
flds
shlb
inc
idiv
pop
jae
cltd
sub
stc
mov
mov
notl
sbb
sbb
xor
pop
xchg
aaa
sub
inc
mov
jns
xchg
cmp
add
popa
xchg
mov
xor
std
in
leave
fsts
mov
ficoms
cld
pop
xchg
stc
fwait
push
or
test
icebp
loope
loop
pop
add
push
int
adc
push
ficoml
jle
mov
push
add
sbb
xchg
in
xchg
nop
js
enter
into
inc
popf
xchg
rcrl
sar
mov
jg
stos
pop
sub
dec
outsb
iret
rcrl
lret
std
adcl
xlat
jns
mov
arpl
sub
cltd
pop
push
or
cmc
lcall
ljmp
push
push
push
mov
jbe
shl
and
mull
mull
xor
mov
jge
gs
mov
int3
or
add
dec
ret
mov
sbb
sub
jno
mov
pop
rclb
xor
xlat
stc
iret
or
enter
xor
clc
xchg
lcall
adc
and
movsb
pop
xchg
xchg
cmpsb
adc
das
fabs
jg
out
cmpb
or
out
cmp
push
pop
mov
aad
mov
enter
mov
cmp
pusha
push
and
jno
cltd
scas
pushf
jbe
sbb
push
or
mov
jle
or
xlat
popa
movsb
push
pop
sarl
fbstp
sbb
mov
sti
adc
sti
cmp
mov
fisttps
push
leave
adc
loope
inc
scas
cmpb
divb
outsl
test
xchg
jbe
shll
rcr
xchg
popa
jbe
mov
xor
jb
xchg
push
jns
test
daa
mov
mov
push
pushf
adc
add
cmp
push
jne
arpl
cltd
sub
call
sar
in
push
ret
addr16
push
or
fisttpl
frstor
in
hlt
scas
data16
or
xor
add
call
adc
fchs
mov
push
lahf
ja
or
inc
ss
jg
fwait
clc
clc
pop
pop
ror
popf
add
testb
outsl
mov
loope
jns
xor
nop
or
cwtl
jmp
push
outsb
xor
push
mov
ror
sbb
mov
lea
inc
mov
icebp
adc
aas
cmp
nop
cmp
mov
leave
dec
cmpsl
test
jge
pushf
jbe
push
inc
ret
testb
iret
jbe
test
mov
scas
nop
add
jmp
ret
add
mov
mov
push
jb
mov
movsl
rcrl
xchg
outsl
mov
cmpsb
sbb
xlat
jb
mov
gs
push
rorb
xchg
cwtl
sbb
xchg
jns
mov
enter
andl
mov
inc
adc
fisttpl
imul
jmp
jmp
jecxz
adc
dec
imul
mov
ss
ss
ss
cmp
mov
aas
push
clc
dec
clc
out
fstp
clc
sbb
xchg
orb
shr
pop
rcll
bound
ficomps
int
aaa
hlt
jg
mov
push
xchg
roll
jbe
xor
fstl
std
inc
mov
imul
or
fcomi
mov
pop
dec
mov
fiaddl
push
adc
or
pushl
add
scas
mov
lods
add
adc
jns
sarl
sarl
aaa
xchg
jae
inc
imul
sbb
in
or
pop
pop
add
ds
and
ja
daa
mov
inc
jg
cld
and
inc
iret
ds
adc
adc
add
sub
push
ror
test
cmpsb
cmpsb
movsl
rcrb
fucomp
jns
leave
out
xchg
adc
dec
jne
inc
jno
or
es
push
mov
pop
jno
mov
loop
xchg
aad
pop
xchg
nop
aad
imull
jmp
icebp
rcr
push
cmc
sarl
sub
or
ret
jno
nop
pop
mov
adc
jecxz
js
popa
pop
lahf
lock
daa
int
push
mov
dec
imul
rorb
adc
divb
icebp
jle
daa
das
dec
enter
mov
iret
xor
lret
jne
push
add
cmpsl
mov
xchg
xchg
push
pushf
cltd
pop
int
cmpsb
xchg
sti
or
mov
icebp
push
add
aam
jmp
fsub
dec
xor
push
fists
leave
pushf
cmp
adc
popa
sub
test
mov
sbb
loop
xchg
xor
in
icebp
add
push
push
add
mov
test
pop
or
jns
outsb
cmp
jmp
sarl
hlt
lahf
push
jb
xlat
xchg
push
jne
out
loopne
add
frstors
jno
shrw
js
mov
mov
cmp
sub
dec
scas
sbb
rolb
adc
mov
adc
jb
or
adc
popf
pop
pop
inc
or
js
aad
andl
jb
mov
inc
mov
mov
dec
je
and
jne
push
dec
fsubs
fcmovnb
jmp
cmp
pop
adc
jle
adc
mov
lods
aas
mov
mov
jle
xor
enter
loop
push
jbe
xor
xorb
inc
and
mov
imul
inc
sti
stc
jbe
jb
addr16
shlb
pusha
jle
add
movsl
adc
pop
scas
fnstsw
shl
dec
sub
addr16
sahf
loopne
add
sti
fcmove
xor
add
lods
icebp
idiv
fimull
adc
cmpl
adc
push
fbstp
cltd
xchg
sub
test
or
out
ljmp
popa
arpl
xchg
xor
jmp
movsb
enter
fnop
ljmp
test
cmpsl
mov
xchg
pop
repnz
push
jmp
sarl
repz
pop
xlat
mov
lret
push
cmpsb
in
std
ss
mov
jl
sbb
xchg
leave
lds
enter
daa
sbb
clc
xchg
jle
mov
clc
adc
icebp
cmp
rolb
divl
or
fstl
test
and
mov
ficoms
ds
fucomip
data16
adc
add
lcall
rclb
fdivs
pop
lahf
mov
mov
mov
push
cmp
mov
push
repz
popf
shll
lcall
pop
cwtl
cmc
fcmovne
das
mov
mov
fsubs
pusha
ficoml
sbb
dec
shll
rclb
loopne
mov
dec
and
pop
mov
xor
std
or
dec
cltd
cmpl
xlat
pop
icebp
in
dec
mov
js
fcmovnbe
xchg
xchg
leave
mov
mov
leave
or
scas
add
lret
loope
fstpl
mov
call
push
xchg
inc
pop
sbb
test
js
lret
leave
or
popf
dec
cmpsb
enterw
cmp
adc
jmp
movsb
aam
loope
push
adc
das
fcmovu
notl
pop
icebp
jmp
repz
loopne
sbb
rclb
xchg
push
pop
ss
mov
fstps
test
sbb
insl
hlt
es
push
imul
xor
sub
clc
mov
outsl
loop
int
sub
std
adc
mov
jnp
jmp
scas
cmp
pop
cli
out
cmp
sbb
negl
or
cmp
inc
cltd
or
add
xor
fiaddl
push
movsl
mov
mov
add
push
mov
and
inc
push
int
aad
shl
jge
sqrtps
vfrczpd
sbb
subb
sahf
add
ret
fidivl
mulb
filds
aam
xchg
cmp
mov
jns
jbe
iret
push
cmc
in
in
and
lret
fadds
imul
fidivrs
test
popa
imul
fildll
mov
inc
mov
pusha
add
iret
lret
lcall
xor
cmp
jbe
adc
iret
fdivrs
jecxz
push
jge
ljmp
pop
inc
aam
push
mov
adc
push
xchg
sahf
pop
in
push
pop
into
int
ret
cmp
mov
sbb
icebp
popa
push
jb
dec
test
lret
stc
test
mov
mov
insb
std
in
aas
pop
dec
cmp
test
add
push
or
pop
push
imul
push
jl
dec
add
mov
pop
call
fisttpll
dec
sbb
lcall
xchg
cltd
in
jo
mov
and
stc
push
jns
fstl
push
push
xor
lods
fsts
or
cmp
cmc
sbb
ss
push
inc
ds
and
mov
cs
xchg
cltd
fs
out
lret
ds
sub
add
cld
inc
push
dec
sarl
add
cwtl
sbb
cmpsl
ss
jge
ds
rcrb
xor
or
cmpb
add
sbb
or
in
addr16
pop
jg
adc
mov
scas
ds
jno
push
imul
stos
into
mov
ds
sarb
out
push
push
push
push
js
sub
jmp
pop
push
lods
push
int3
jge
ret
cmp
mov
mov
sub
int
xor
pusha
push
inc
out
es
mov
inc
gs
adc
nop
xor
or
hlt
push
test
xlat
xchg
nop
inc
xlat
adc
lods
add
push
push
adc
xor
rolb
rcrl
push
adc
jo
test
push
insl
push
test
sub
fcomps
push
rolb
inc
xlat
popf
mov
push
lcall
add
repnz
ffree
push
mov
cld
jl
pushf
repnz
test
xchg
fcomp
xlat
cltd
int
iret
test
test
addr16
mov
adc
jae
shl
jb
mov
jae
mov
or
xor
pushf
gs
imul
mov
bnd
push
sub
aas
add
or
nop
es
lret
cmp
add
pop
lods
aad
adc
cmp
xor
mov
jno
cld
imul
or
imul
mov
sub
fstp
jmp
stc
pushf
mov
sbbl
test
shlb
xlat
negl
js
mov
shrl
insl
call
xlat
nop
xor
imul
shll
xchg
pushf
xor
dec
sbb
aas
insb
sbb
enter
iret
inc
pop
or
or
ret
rcrb
loopne
adcl
mov
and
push
cwtl
lahf
imul
movsb
lock
iret
test
xchg
in
pop
inc
and
orb
xchg
std
dec
jns
push
fstl
cmp
add
dec
cli
stc
pop
popa
adc
dec
push
xor
inc
mov
testl
repz
jbe
test
jge
das
cmc
or
mov
arpl
ljmp
loopne
xlat
enter
adc
or
mov
lods
subb
cmp
leave
xchg
jb
fcmove
push
and
mov
ljmp
jns
iret
test
fldl2t
mov
test
mov
test
pop
lar
sbb
mov
sarb
mov
push
mov
jns
xor
xorb
xchg
dec
cwtl
adc
mov
xchg
and
jnp
push
sub
xor
sub
sub
mov
push
pop
sbb
mov
mov
sub
pushaw
inc
pop
adc
mov
imul
fisubrl
pop
mov
sar
movsl
loope
fmuls
lret
push
shll
out
in
cs
das
jno
pop
std
xchg
adc
flds
lret
add
rcl
test
cmp
cmp
xchg
add
cmc
sbbl
cmp
not
leave
fidivs
rcrb
jg
xchg
cld
xchg
pop
stc
adc
mov
scas
xor
scas
push
lahf
fyl2xp1
mov
sbb
or
rcrl
dec
int
sub
mov
lds
mov
xor
leave
mov
cwtl
xchg
leave
outsl
nop
push
test
test
xor
jns
sbb
data16
or
ds
xchg
inc
jecxz
adc
or
pop
call
rorl
clc
mov
cmp
xlat
clc
pop
add
push
lret
sbb
or
mov
dec
mov
dec
xchg
sbb
jmp
push
fnstcw
pop
mov
leave
push
pop
adc
les
xor
mov
jns
xchg
xchg
pop
xchg
ds
sbb
pop
mov
shll
mov
push
mov
fisubl
pop
sub
lret
adc
xchg
or
test
test
jns
jne
fldcw
outsb
icebp
jb
out
mov
and
pusha
or
jbe
pop
xchg
pop
rol
subb
push
pop
or
cli
lret
out
outsb
aad
out
jns
and
cld
imul
xchg
jg
aam
jle
dec
outsl
and
xrelease
out
leave
xchg
xchg
ficoml
pop
cmp
imul
loopne
sbb
into
mulb
adc
jp
cmp
pop
mov
flds
addr16
jns
mulps
push
dec
out
cltd
test
xor
in
push
es
es
int
add
jle
bound
data16
imul
shll
cmp
lods
push
push
sbb
ljmp
faddl
out
fisttps
orb
xor
mov
mov
subb
mov
xchg
mov
sbb
fcomp
sbb
call
ss
insl
adc
jecxz
imul
aaa
pop
cmp
adc
lret
shrb
clc
jbe
sub
rolb
add
cmp
inc
cmc
jns
or
jae
or
mov
push
popa
sbb
jns
inc
mov
lds
stc
xchg
mov
inc
pop
inc
jmp
mov
adc
push
push
ljmp
jp
mov
pusha
mov
mov
outsl
dec
adc
adc
out
lret
add
lock
or
lret
cs
jmp
mov
cmp
hlt
adc
std
adc
flds
fcompl
add
mov
pop
push
pop
icebp
shl
data16
in
jg
pop
enter
ror
sbb
mov
or
fbld
cmp
mov
cs
pop
xchg
xchg
test
popf
sub
sti
lret
xchg
jbe
scas
mov
jle
icebp
jbe
test
test
add
xor
jbe
mov
inc
leave
push
ret
cmp
add
cmpb
pop
xor
shrb
clc
xlat
movsb
loopne
pop
mov
pop
pop
push
fcmove
pop
lcall
jb
inc
repnz
cmp
cli
ja
mov
int
or
cltd
rcr
fs
push
negl
inc
fnstcw
loope
pop
cld
and
imul
bound
pop
fimull
push
xchg
push
and
ds
cmp
mov
sub
pop
rorl
adc
jns
xchg
or
sub
jmp
mov
push
movsb
loopne
push
xchg
nop
jns
xchg
jbe
or
decb
or
aas
xchg
pop
adc
push
xchg
xchg
inc
orl
push
pop
pop
adc
mov
add
stos
ror
mul
mov
mov
fldenv
scas
jle
inc
lret
mov
jnp
lock
ds
inc
mov
ret
add
pop
inc
popf
cltd
popl
inc
cmp
jns
fidivs
and
push
push
add
mov
imul
sti
fstpl
rorl
jecxz
push
jg
shlb
fsubs
sbb
stc
clc
mov
iret
xchg
in
cmp
loope
sahf
mov
jb
cwtl
into
cmp
iret
jle
ljmp
into
cli
pop
and
adc
push
in
bound
rol
daa
jns
jb
incl
sub
push
jle
sub
repnz
or
out
loope
lds
jae
dec
push
test
jae
iret
xorb
add
jns
pop
iret
es
ret
xchg
add
or
cld
xchg
xchg
shr
sbb
xor
push
mov
jmp
enter
repz
push
addr16
repz
cmpsb
xchg
rorb
jle
rcl
adc
add
rclb
and
out
repz
pop
inc
mov
int
insl
push
pop
push
fldcw
aad
jb
pop
xor
shll
inc
mov
fnstenv
mov
scas
aad
mov
add
jle
arpl
test
hlt
jecxz
push
pop
mov
leave
xchg
or
cltd
cs
dec
je
lds
jmp
fimull
xchg
ja
push
loopne
mov
pop
fnstenv
push
push
adc
push
and
not
aad
adc
mov
mov
cwtl
mov
cmp
ds
jbe
mov
popf
int3
push
and
nop
rcrb
fidivrl
pushf
outsl
xor
pop
jne
adc
sub
jmp
push
xchg
or
xlat
lahf
sub
gs
test
jg
dec
xor
shlb
pop
movsl
jp
jns
sarl
popa
xlat
adcl
jno
add
movb
lahf
addb
int3
std
nop
or
loop,pt
ljmp
xor
push
mov
out
outsl
push
push
js
mov
out
mov
push
repz
mov
sti
fdiv
mov
sbb
cmc
xor
rorb
in
arpl
movl
fisttps
cmpsl
sbb
std
fidivrl
jns
push
jne
mov
into
cmp
xchg
test
imul
inc
jbe
mov
cmpsb
out
xchg
pop
pop
cmpsl
fwait
mov
nop
push
xor
jno
mov
ret
sub
pop
fsts
mov
push
ret
in
inc
sbb
or
push
rol
xor
sub
cmc
out
add
pushl
xchg
movsb
dec
jb
mov
pop
lahf
jmp
jo
sbb
std
rolb
rcrb
cmp
and
aad
int
pop
rolb
sbb
out
std
sbb
cmp
scas
pop
stc
hlt
sti
mov
pop
or
xor
or
loopne
inc
add
stos
and
out
rclb
push
mov
mov
add
or
xor
push
cmp
fucomip
or
ds
mov
mov
dec
incl
mov
lret
arpl
fstl
and
jbe
xlat
clc
inc
sti
cmp
jbe
int3
pusha
dec
cmp
icebp
iret
imul
rclb
mov
les
outsl
fxch
bnd
je
jle
xchg
jns
mov
popf
cmp
pop
insb
fldt
cmp
dec
xor
sub
pusha
clc
or
adc
xchg
dec
ret
xchg
xlat
out
cvtps2pd
mov
pop
mov
add
pop
push
mov
cltd
loope
and
dec
outsb
xchg
ss
inc
sbb
mov
shrl
xchg
jle
inc
xor
rol
sbb
in
xchg
fsts
pop
mov
mov
dec
push
loopne
int
inc
sbb
lahf
xchg
lods
popf
test
cmp
lock
cwtl
addl
jg
pop
add
pop
int3
sbb
dec
aad
loopne
or
xchg
add
sub
push
andl
xchg
insb
lcall
sbb
push
and
aaa
lahf
int
sub
sbb
stc
fsubrs
leave
inc
cmp
sbb
stc
push
jle
ret
or
push
or
das
push
push
movsb
cmp
dec
loopne
iret
and
rolb
sarb
pop
inc
icebp
push
inc
jle
jg
in
mov
in
in
clc
dec
js
sub
pushf
and
dec
popf
mov
sub
mov
lea
mov
mov
pop
mov
mov
dec
or
or
push
pop
fldcw
xor
inc
lahf
add
mov
or
jmp
popf
je
lcall
out
and
push
xchg
popa
fidivrl
mull
push
roll
xchg
das
or
mov
xchg
out
cmpsl
jl
mov
call
shl
scas
adc
popl
movsb
jg
jne
shll
xor
cmp
fcomps
sbb
sbb
insl
sbb
or
mov
flds
adc
jnp
dec
mov
xor
outsb
aad
mov
jecxz
inc
add
sbb
xlat
pop
mov
push
ss
aaa
loopne
pop
cmp
insb
jns
adc
inc
sub
aad
cwtl
out
pop
push
mov
nop
mov
aas
xor
sbb
lret
lret
adc
cmp
or
cmp
add
ret
ja
or
lret
pop
adc
call
movsl
or
adc
dec
mov
jle
xchg
int
data16
cwtl
std
or
sbb
xlat
cmc
shlb
mov
inc
xchg
mov
mov
xchg
mov
pusha
push
and
inc
mov
xchg
cltd
fcmovbe
adc
pushw
mov
fsubs
xchg
fmull
push
shl
jb
and
mov
sbb
sbbl
mov
mov
sbb
or
sbb
dec
and
jns
fstps
cmp
dec
out
std
dec
inc
fucomp
test
mov
sbb
jmp
ret
test
mov
mov
jns
push
push
or
movsl
cmp
roll
xchg
sub
xor
xchg
xlat
and
jb
test
push
aaa
bound
jo
pushf
dec
loop
jle
cmp
jns
leave
push
testb
jbe
push
push
sbb
mov
lret
pop
xchg
jecxz
hlt
insb
hlt
jg
jmp
lea
daa
mov
and
push
xor
loopne
ret
andb
sub
test
les
lock
rcrl
jns
xchg
pop
or
lret
dec
or
jecxz
cli
scas
lods
outsl
cmp
and
vprotw
xchg
jne
mov
pop
push
movsb
lods
inc
jno
push
push
mov
add
lret
xor
ret
loop
cmp
mov
ret
cmpb
in
aad
pop
jmp
fdiv
push
cmpsb
adc
das
stc
xchg
ds
jl
arpl
push
and
mov
fnstcw
inc
packssdw
dec
dec
xor
fwait
les
enter
mov
ljmp
jb
pushf
pop
xchg
sub
out
sbbl
ja
sbb
ss
sbb
daa
add
lea
jl
divl
and
mov
xchg
push
jno
pop
pop
xchg
lock
loope
add
adc
push
cltd
or
orb
aad
lret
push
popf
pop
cmc
jge
aad
xlat
lret
xor
inc
iret
out
jns
add
cmpsl
insb
rorl
adc
pop
shlb
lret
cld
push
pop
nop
xor
or
rorl
adc
out
rorb
xchg
xchg
cli
pop
clc
push
sbb
push
mov
imul
jecxz
mov
xchg
mov
adc
mov
aaa
and
sbbl
xchg
imul
cmp
inc
mov
cmp
in
xchg
ret
leave
pop
cmc
not
lock
stos
push
xor
icebp
jbe
shrb
xchg
rcl
out
sbb
mov
mov
mov
movsb
mov
jno
lret
add
sbb
cwtl
inc
negl
pop
decl
stos
mov
idivb
adc
jecxz
pop
xchg
sbb
adc
xor
cmc
rolb
push
loope
mov
mov
jecxz
sbb
jle
or
loopne
add
sbb
push
xlat
jno
lds
xor
test
mov
inc
cmp
adc
sbb
xor
bound
add
cltd
push
repz
mov
sti
negb
mov
inc
inc
popf
loope
xchg
rcrb
fdivrl
ficompl
sub
push
addr16
jb
sbb
inc
imul
adc
mov
pushf
adc
mov
ficompl
adc
mov
fwait
shll
insb
jg
and
xchg
push
mov
js
mov
cltd
pop
adcb
or
data16
add
scas
inc
testb
in
imul
fimuls
sarl
into
leave
out
bnd
in
divl
out
pop
mov
xlat
push
mov
out
xchg
rcr
cmpsb
pop
movsl
or
and
cmpsl
xor
xor
movsb
mov
or
xchg
sarl
test
rclb
fildl
pop
cmp
and
push
fidivs
outsl
or
mov
jmp
sub
xchg
divl
pop
mov
rolb
jl
adc
jno
xchg
icebp
cmc
mov
cmpsl
out
xchg
lds
pop
jne
xchg
add
int3
cwtl
test
js
xchg
aad
mov
fstps
pop
outsl
jns
mov
fcomps
xchg
out
mov
cmpsb
jns
sbb
fcomps
jns
jnp
fldl
and
cmpsl
mov
adc
fstp
aad
inc
ret
sub
push
or
jmp
fadds
call
cmc
lret
mov
pop
adc
xchg
xor
aad
pop
mov
push
push
xchg
add
push
mov
shrl
xchg
sti
sub
nop
adc
das
or
xchg
push
mov
cmc
sti
sbb
out
sbb
leave
and
out
cmpsl
xchg
mov
imul
popf
cwtl
fs
push
mov
test
add
pop
cltd
rorb
arpl
sbb
mov
cltd
mov
jo
push
xchg
adc
cmpsl
xlat
jns
sti
faddp
notl
mov
jo
leave
mov
xlat
jge
push
or
fwait
xchg
sub
xchg
fstpl
dec
dec
cwtl
aam
and
push
shrb
rcll
sahf
dec
push
cltd
test
aam
pop
pop
push
push
xlat
adc
ret
sub
out
scas
push
cltd
pop
inc
hlt
pop
enter
sbb
leave
add
push
add
shl
mov
sub
ja
stos
add
cmc
push
push
stos
cs
and
out
test
inc
pop
adc
mov
popa
pop
cmc
outsb
cli
clc
push
scas
cwtl
mov
sub
xchg
mov
negl
faddl
fcomps
pop
add
jmp
xchg
xchg
sbb
inc
out
call
push
jg
out
xchg
push
scas
test
ret
xchg
push
stos
pop
cltd
xchg
cmp
jmp
adc
mov
ficoml
pop
sbb
dec
adc
xchg
adc
xor
test
rcrb
mov
pop
imul
xchg
test
xchg
sbb
notl
dec
testl
lods
jbe
pop
jo
push
push
aad
add
xchg
sbb
imul
lods
fsubs
add
pop
in
cmpsl
push
test
hlt
push
call
or
xchg
rolb
popa
cwtl
ljmp
or
sbb
mov
sar
or
rcrl
push
xchg
sbb
aas
in
sbb
push
jno
pop
sbb
popf
repnz
nop
sbb
cltd
imul
xlat
push
adc
sbb
imul
add
aad
popa
pop
push
adc
adc
outsl
rcrl
mov
rcl
sub
jecxz
movl
stos
imulb
sbb
adc
adc
fildll
sti
call
rcrb
outsb
cltd
jb
gs
loop
xchg
ja
mov
push
sub
push
enter
pop
cld
sub
or
push
pusha
hlt
stos
jl
cwtl
cmovge
sbb
push
out
cltd
lret
inc
pop
mov
jg
mov
pop
push
imulb
jecxz
movsb
fildll
cvtps2pd
test
repz
fdivrs
xchg
jbe
or
mov
and
sbb
ret
cltd
sbb
adc
cwtl
mov
xchg
in
or
dec
cmp
xchg
xchg
add
push
in
roll
push
scas
sbb
cmpsl
cmc
clc
push
mov
pop
pop
pop
lea
icebp
imul
jmp
and
jp
xchg
mov
stos
nop
repz
cltd
mov
aad
sbb
pop
push
int3
outsl
ret
xchg
mov
cwtl
push
and
aam
mov
push
popa
or
fs
adc
inc
out
adc
mov
adc
mov
xchg
xchg
push
push
cwtl
xlat
out
repz
in
fwait
add
xchg
pop
lret
inc
pop
adc
mov
popf
scas
call
sets
mov
nop
lahf
sub
aam
adcb
pop
cs
xlat
and
xchg
xchg
adc
lods
cltd
push
mov
sub
cltd
filds
xchg
out
movsl
out
cltd
adc
jmp
push
push
pop
mov
dec
sbb
push
std
std
adcl
push
xchg
inc
push
cmc
fcomps
lock
pop
stc
xchg
add
adc
cltd
pop
ja
imul
lea
mov
dec
pop
mov
aas
not
mov
flds
lahf
fsubs
fmul
outsl
ficomps
mov
jne
xchg
pop
pop
and
xchg
mov
mov
jno
rclb
std
aaa
or
stc
idivl
out
xchg
adc
xlat
xchg
fstps
inc
adc
test
addr16
xchg
clc
jne
xlat
add
roll
out
scas
loope
sbb
xchg
cmc
cmpsl
push
pusha
jge
pop
push
jle
fcoms
push
adc
ja
xchg
leave
cmpsb
mov
test
fsubr
lahf
mov
cltd
jmp
leave
mov
fcomp
nop
div
push
outsl
sbb
pop
pop
lcall
and
lds
sub
jecxz
mov
sbb
das
mov
fstpl
shlb
out
iret
ficoms
aam
pop
daa
adc
xor
push
jne
cwtl
cltd
and
xchg
aam
adc
cmc
fstpt
cmc
mov
loope
sbb
mov
lahf
push
and
jecxz
enter
cmp
cmp
mov
pop
mov
xchg
rorl
cltd
and
fistpll
xchg
xor
fcom
xor
test
test
xchg
in
out
mov
mov
adc
insl
cmc
push
xchg
jl
or
push
xorl
cmp
dec
pop
sar
sub
pop
ficomps
call
mov
enter
mov
push
cmpsl
das
roll
or
inc
dec
push
jns
add
cwtl
std
dec
fists
adc
xchg
sub
sbb
mov
adc
loop
xchg
cwtl
test
popa
pop
jnp
add
xchg
neg
fldcw
sbb
dec
mov
dec
xchg
pop
push
mov
cltd
scas
adc
sbb
push
fs
pop
xor
sub
inc
xchg
xor
sbb
sarb
add
popf
test
xor
jo
or
push
insl
adc
bound
or
xchg
xor
pop
fstps
xchg
mov
stos
mov
or
add
cltd
jbe
and
test
mov
xor
rolb
sub
lahf
mov
sbbl
xor
movsl
sbb
dec
into
lock
mov
rcrl
clc
cmp
sbb
xor
outsl
scas
gs
or
mov
aas
add
sbb
dec
push
cltd
jnp
and
ja
pushf
shlb
cltd
mov
rcll
xchg
popf
daa
sbbb
inc
mov
sbb
repz
jns
ljmp
cmp
or
lds
mov
inc
add
jns
sbb
cmc
leave
push
push
icebp
lret
add
xor
in
push
inc
jmp
inc
xlat
hlt
add
pop
out
decb
push
jp
rorl
xchg
mov
jns
enter
cltd
mov
scas
jle
pop
out
adc
cli
das
mov
xchg
ror
inc
nop
lahf
add
sub
cmpsl
cmp
enter
mov
mov
jbe
mov
pop
pushf
in
popf
push
add
adc
xchg
jo
or
lcall
jb
jp
push
push
xchg
inc
cmp
out
xor
cmp
adc
sbb
add
cli
movsl
out
loop
ljmp
xchg
push
mov
mov
stos
popf
xchg
rcrl
push
jae
jnp
push
imul
inc
rorl
xor
sub
popf
add
or
repz
push
jecxz
jmp
out
roll
fistpl
mov
mov
movsl
out
xchg
add
je
jl
cmp
push
add
rorl
xchg
and
sub
out
adc
rorl
push
in
in
movsl
out
aam
fcompl
mov
sahf
sbb
or
cltd
sti
in
cltd
ss
nop
leave
or
ja
fidivs
xchg
push
loope
test
add
mov
push
adc
xchg
repnz
nop
ror
pop
outsb
insb
lahf
mov
pop
into
adcb
outsb
cmpsb
in
arpl
scas
negb
dec
mov
xchg
inc
sar
sbb
xchg
jbe
scas
cmpsb
mov
outsb
arpl
cmp
push
jmp
scas
xchg
cmp
ja
leave
sbb
jecxz
test
xchg
lods
pop
xchg
lods
aaa
notb
xchg
jno
mov
jbe
out
mov
fildll
aaa
ret
jae
outsl
fdivrl
cmpsb
cmp
pop
daa
push
cmc
mov
dec
pop
mov
xchg
cmc
push
test
pop
adc
sahf
mov
mov
repnz
bound
repnz
test
cmp
add
inc
cwtl
push
pop
std
xchg
leave
decl
neg
data16
push
dec
scas
xchg
jne
push
shll
aam
stc
xchg
cmpsb
out
decb
mov
clc
mov
push
lods
out
scas
outsb
inc
jbe
xlat
dec
mov
mov
mov
xchg
adc
repz
xchg
je
push
or
imulb
push
xchg
push
stos
lahf
neg
insb
addr16
xchg
xchg
outsl
ss
sbb
std
mov
pop
sbb
aam
jae
leave
jg
negb
xchg
add
sbb
dec
test
aad
mov
scas
mov
std
aaa
lods
aaa
divb
outsl
mov
jmp
xchg
aaa
pop
push
test
scas
inc
xchg
call
lods
mov
cltd
dec
decl
adc
mov
pop
movsl
or
daa
pop
shll
aam
call
mov
icebp
pusha
xchg
mov
push
adc
adc
into
pop
push
adc
inc
sbb
testl
mov
xchg
jno
push
mov
lds
add
xor
bound
xor
rorl
add
pop
clc
scas
testb
add
pop
aam
push
pop
cwtl
pop
xchg
xchg
push
aaa
pop
push
mov
ret
push
push
aaa
jb
shll
cltd
sub
fxtract
jno
addr16
mov
push
sbb
pop
push
pop
out
pushf
cmp
push
xchg
add
add
xlat
fsin
fxch
or
jg
out
shll
aad
xchg
pop
shrb
arpl
test
clc
popf
jge
rcrb
pop
gs
ret
adc
xorl
pop
divb
xlat
stc
mov
stc
adc
fimull
inc
aas
cmc
jmp
pop
into
fstpl
mov
jg
ss
testl
popf
rcr
or
xor
fnsave
mov
sbb
xor
xor
sahf
push
xor
ja
nop
mov
xchg
adc
sbb
daa
mov
sbb
cmp
clc
ja
jle
push
and
ss
mov
push
add
outsl
cmpsb
inc
fsubs
jle
xchg
sub
ljmp
push
aam
data16
fucomi
xorl
lret
test
mov
xor
xorb
jge
mov
push
mov
imull
je
dec
adc
sbb
lock
jnp
fnstenv
stc
lahf
sbb
pop
mov
mov
sbb
mov
fildl
flds
mov
cmpsb
jmp
or
xlat
mov
not
cltd
hlt
pusha
xor
add
mov
adc
into
push
and
fidivl
pop
jne
popf
push
shrb
aas
test
sub
lret
mov
lds
loopne
aad
sub
ljmp
cmp
xchg
das
sbb
repz
ss
roll
dec
xor
fstpl
fwait
das
sbb
fisttpl
mov
fldcw
sub
mov
inc
lock
xor
roll
add
or
mov
jle
ret
push
adc
pop
add
daa
lahf
sbb
lds
sub
mov
xchg
leave
ret
push
inc
lds
sbb
push
sbb
jbe
add
jmp
jbe
cli
push
push
or
jno
xor
aas
dec
cmpb
jg
push
movsb
jno
in
mov
add
xchg
bound
out
stc
dec
dec
rorl
jno
dec
xchg
js
imul
std
sub
or
or
xchg
xchg
dec
sbb
sbb
sub
fstps
pop
fdivl
ds
adc
or
or
in
adc
lahf
arpl
pop
sub
jne
xor
pop
fbld
jecxz
mov
out
mov
enter
sti
xchg
dec
ror
lret
loope
mov
loope
cwtl
and
sbb
jb
ds
cmp
mov
xor
lret
cmpsl
enter
mov
add
mov
jg
lret
outsl
mov
mov
lds
out
sahf
mov
cmc
mov
orb
xchg
fimuls
iret
vpsubw
xor
leave
inc
xor
jns
mov
lds
fs
lret
lds
sbb
add
mov
leave
mov
pop
mov
leave
pop
fstps
jmp
inc
cli
data16
fnstcw
fistl
adc
test
push
dec
xchg
mov
cmpsl
aad
pop
or
leave
push
xchg
nop
subl
test
dec
xchg
in
loope
imul
rcrb
adc
arpl
add
stc
mov
cwtl
jle
mov
push
mov
nop
fildl
jne
adcb
mov
cltd
data16
pop
cwtl
faddl
addb
push
jbe
sub
adc
sbb
cwtl
aaa
leave
rorb
adc
adc
mov
out
xchg
fcomi
stc
cmp
push
mov
mov
rclb
loopne
push
shrb
icebp
sub
sub
push
jno
and
and
or
fmuls
cmpsb
or
inc
xor
dec
pop
cwtl
cmp
push
repz
adc
mov
lret
or
stc
cmp
add
sbb
adc
pop
lret
stc
lret
lret
cmc
add
mov
sub
sbb
insl
jecxz
jb
xchg
xor
or
mov
mov
aad
enter
sbb
jle
enter
fdivl
lea
out
push
sub
out
arpl
rcr
ss
sbb
aaa
shlb
outsb
shll
lret
xchg
ds
pushf
ret
or
jns
ja
pop
aad
jmp
dec
lds
mov
mov
add
not
stc
push
bound
rcr
dec
xchg
mov
cmc
je
addr16
ss
jns
sbb
pop
fnclex
mov
push
cltd
sub
xor
fcom
mov
hlt
cli
ja
fadds
pop
loope
mov
pusha
dec
sahf
mov
adc
xchg
shll
shrb
jns
jno
jnp
dec
xor
call
repz
pop
sub
std
bound
mov
out
inc
push
mov
addl
adc
jge
iret
mov
lds
clc
out
jle
std
xchg
imul
push
dec
test
xchg
dec
mov
xor
test
adc
rclb
test
pop
sbb
xchg
mov
sbb
lds
jne
popf
mov
add
adc
movsb
divb
fcoms
mov
push
fcmovnbe
lcall
and
loopne
push
dec
lahf
jno
scas
sbb
enter
clc
or
je
jecxz
rcll
jns
cmp
xchg
xlat
int
xchg
popa
fnstenv
loope
negl
cmpsl
daa
out
stos
xchg
mov
aaa
push
or
sbb
cmpsl
push
push
add
rcrb
jo
dec
fwait
into
lahf
push
orl
scas
movsb
sub
add
in
sbb
rcrl
cld
inc
divl
insb
jns
dec
fcoms
loop
sub
insb
add
rcrb
fcmovb
xchg
fcompl
xchg
jne
sahf
ds
push
das
aam
or
push
shl
hlt
mov
push
loope
or
xchg
mov
add
sbb
mov
data16
lock
xchg
enter
jl
neg
jmp
rolb
bnd
iret
inc
data16
mov
dec
or
adc
jno
mov
loopne
inc
pop
ja
mov
in
hlt
imul
jmp
shrb
dec
push
jb
jmp
iret
xor
mov
or
mov
jae
idivl
xchg
lret
or
insb
dec
rcr
scas
jl
xlat
add
outsl
fcoml
cmc
je
jg
js
mov
setbe
push
push
fwait
jbe
popf
imul
cltd
jle
inc
loopne
jnp
jmp
push
into
cs
leave
cwtl
rolb
pop
aam
enter
in
scas
push
jne
movsl
lock
xchg
cltd
ret
in
aam
rolb
or
jecxz
dec
test
sarb
daa
sub
ror
inc
repz
sti
lds
cmpsl
and
out
shll
sbb
pop
add
xor
out
out
sub
in
fstpt
cmp
fisttpll
pop
fnstsw
fnstcw
mov
testl
push
fs
push
sbbl
mov
push
push
add
fldl
les
cmp
icebp
pop
jns
mov
stos
mov
cltd
inc
push
dec
int3
lock
add
fs
pop
jbe
stos
dec
rorb
lock
mov
sbb
adc
push
xchg
cmp
mov
rcll
adc
repnz
cwtl
inc
and
cmp
jbe
xor
inc
sub
icebp
jl
shlb
inc
pop
push
lret
jne
fistpll
fcmovbe
lds
sub
push
mov
jge
shrb
and
push
inc
aad
imul
or
jle
scas
cmp
inc
mov
push
and
lods
inc
jne
inc
push
call
mov
pop
vaddsubpd
adc
dec
add
jb
fmulp
aaa
stos
loopne
sub
mov
pop
enter
arpl
cmp
dec
mov
pop
adc
test
xchg
mov
jle
add
or
into
test
jb
xchg
fnstenv
rcl
jb
movsb
scas
xchg
push
roll
mov
sar
rclb
mov
aad
pop
cmpsb
bound
ficompl
fildll
xchg
push
push
subb
jb
jg
mov
jb
scas
xchg
insb
cmp
xchg
pop
sub
mov
call
sub
fldl
pop
sbb
ss
aam
cmc
cmpsl
cmpsb
xor
adc
sbb
xor
popf
add
mov
xor
push
sbb
rcl
rcr
imul
pop
push
mov
int3
adc
rorb
xchg
sbb
into
ret
mov
push
sub
test
add
imul
aas
or
daa
das
or
xchg
loopne
out
mov
std
fistl
cwtl
ja
adc
ds
mov
mov
mov
or
push
xor
shrd
mull
mov
std
ret
add
dec
mov
mov
loopne
stos
cmc
fcom
push
fwait
xchg
sbb
jecxz
xchg
out
cs
andl
cli
iret
out
mov
data16
adc
lock
inc
iret
inc
mov
ret
inc
jbe
push
shll
ss
shll
pop
mov
mov
lret
sub
pop
jmp
leave
sub
int
lds
dec
xchg
jle
jae
push
fisttpl
sbb
add
mov
frstor
rcrb
mov
mov
outsb
xchg
add
outsl
aad
lds
das
sub
mov
lds
mov
in
or
lods
aam
or
insl
daa
pop
adc
push
cmpb
rep
inc
jbe
jae
les
xor
dec
ja
and
out
and
lods
and
mov
leave
mov
cwtl
mov
out
rorl
dec
icebp
dec
aaa
mov
mov
in
test
inc
out
adc
mov
ljmp
jge
stc
cmp
sub
into
jmp
testb
mov
lock
xor
enter
jbe
inc
xor
mov
int3
arpl
mov
lods
mov
push
clc
jne
mov
pop
icebp
std
xchg
nop
popf
mov
add
outsl
ds
push
shll
xchg
mov
movsl
push
add
call
shl
fiaddl
arpl
xchg
pop
pop
and
jge
jae
icebp
mov
mov
es
jb
add
mov
sbb
xchg
cmp
or
inc
mov
push
and
lcall
adc
mov
movsb
dec
push
push
ds
ds
js
hlt
shr
mov
les
ds
mov
leave
xchg
push
cmp
pop
bswap
and
lds
enter
cwtl
xchg
push
push
outsb
and
lea
xchg
mov
or
add
test
push
fisubl
sahf
movsl
shll
test
mov
cltd
add
mov
in
in
cmp
xchg
std
ret
sub
sub
sbb
fadds
xchg
sbb
mov
jmp
clc
jge
pop
insb
jmp
cmp
add
cltd
insl
or
js
psubw
adcb
shr
rcr
xchg
pop
int
jae
nop
outsl
out
xchg
or
rcrb
sub
call
xchg
push
mov
cwtl
test
cmp
leave
sarl
je
lret
in
imul
push
push
cmp
mov
xchg
lds
popf
pop
lock
icebp
sub
fldl
into
add
icebp
lret
fisttpl
adc
sar
mov
xchg
ror
xor
pop
pushl
inc
icebp
xchg
push
mov
sbb
sarl
pusha
arpl
lods
pop
roll
stc
sbb
xor
outsb
sbb
and
rclb
jne
out
scas
cli
pop
push
lcall
mov
cltd
jb
xchg
lret
clc
insb
in
mov
mov
dec
pop
out
jbe
and
cmp
xchg
or
out
mov
add
cmpsl
shrl
pop
lds
mov
jo
mov
mov
add
lock
xor
inc
adc
test
sbb
push
push
mov
fsts
xchg
sbb
test
stos
or
sub
rorb
dec
inc
insl
or
fmuls
cmpl
ljmp
repz
xor
rcl
aaa
push
pop
loopne
outsl
lahf
cld
mov
mov
xor
sbb
fstl
sbb
mov
ljmp
cmc
insl
loop
cmc
scas
push
imul
mov
mov
fwait
push
jns
fidivl
mov
fadds
imul
enter
cli
cltd
and
fcomps
pop
notl
sub
mov
ss
pop
mov
mov
fcomp
mov
jne
pop
sbb
inc
push
ss
mov
les
jle
fldl
adc
mov
scas
test
std
jmp
inc
dec
ds
jmp
lret
jge
cltd
adc
das
and
xchg
addr16
popa
fldenv
lret
stos
ds
inc
dec
popa
fptan
sbb
aad
les
mov
push
jne
lock
aad
loopne
fists
sti
mov
fcmove
lds
les
xchg
push
push
daa
push
push
jae
bound
popa
mov
sub
in
flds
push
xchg
cwtl
jb
cmc
in
mov
std
addl
cmpsb
stc
jle
jne
push
testl
cmpsl
es
jl
mov
mov
leave
cltd
or
out
rcrb
xor
pop
test
dec
cwtl
out
rclb
xchg
out
mov
inc
daa
cmc
mov
fildl
xchg
mov
push
cs
lods
imul
jbe
and
outsb
rcrl
xchg
fs
fnstsw
in
inc
shl
mov
sti
xor
sbb
pop
pusha
cmp
shll
daa
dec
loope
cmpsl
out
adc
mov
jae
sub
arpl
les
mov
int3
mov
pop
cmp
pop
lea
push
sub
dec
xlat
lds
subb
mov
dec
mov
nop
or
push
adc
repz
int3
in
loope
lahf
push
fcomp
setg
push
jge
in
jecxz
and
pop
xor
and
fcmovne
xchg
inc
aas
mov
sub
jae
rclb
test
or
mov
adc
inc
mov
adc
lret
cmpsl
xchg
push
jbe
leave
fst
xlat
sbb
mov
or
sar
jg
fbstp
iret
jle
or
mov
xchg
cmp
or
dec
xchg
mov
sarb
pop
subb
gs
popf
xchg
xchg
pop
fnstcw
adcb
push
pop
lret
sbb
sarb
lret
pop
mov
adc
cmp
sub
xchg
mov
js
mov
jmp
jle
jb
pop
test
add
leave
addr16
call
xor
out
clc
enter
and
dec
sbb
push
pop
fmul
sarb
mov
dec
and
es
fs
rorb
rclb
cmp
dec
rorb
adc
out
cltd
roll
jo
test
inc
xchg
push
fists
push
pop
or
int
roll
dec
dec
inc
scas
push
sbb
and
mov
inc
lcall
scas
push
fadds
int
mov
fidivrl
push
dec
leave
rclb
iret
inc
xchg
ret
xchg
add
pusha
mov
cmpsl
and
hlt
mov
fwait
jle
pushf
imul
mov
cmpb
fidivl
or
dec
shlb
push
jle
inc
inc
mov
icebp
fwait
fsts
push
sbb
or
xorl
mov
add
ffree
add
or
dec
sub
jb
lret
jno
adc
xchg
leave
ret
rclb
mov
stos
adc
dec
cwtl
cmp
cmp
adc
jo
nop
cmp
inc
push
int
lret
js
inc
push
xchg
fisttpll
jmp
jp
mov
sbb
jg
adc
dec
adc
xlat
sahf
lods
in
jns
mov
shlb
or
dec
lret
push
xchg
jo
add
imul
dec
repz
mov
inc
rcl
fmuls
arpl
iret
sbb
mov
clc
lcall
push
push
ret
cmpsl
mov
sbbl
out
xor
addr16
fwait
or
mov
stos
sub
dec
mov
clc
sbb
cmp
lea
pushf
insb
jecxz
rorb
jmp
and
mov
xor
adc
or
mov
xchg
xor
pop
mov
sbb
mov
fmuls
xchg
push
mov
push
ss
or
sub
mov
lcall
adc
mov
and
iret
or
jge
out
inc
aaa
shr
aad
ror
push
jle
lret
das
divb
es
test
arpl
pop
out
sti
les
jae
dec
cmp
adc
loopne
lock
xor
ficompl
jo
mov
and
cmp
lock
icebp
leave
jns
loope
jle
out
out
inc
lods
iret
xchg
cmp
rcl
es
neg
add
add
add
mov
inc
je
fdivrp
adc
mov
sbb
cmc
push
mov
pop
sbb
test
pop
add
xchg
dec
lods
iret
mov
pop
push
in
dec
cmp
bound
adc
inc
iret
insb
mov
sub
sub
jle
mov
push
dec
dec
ljmp
push
repnz
imul
adc
movsl
lds
pop
fstps
pop
mov
outsb
test
cs
iret
mov
xchg
mov
and
jo
lock
test
mov
xchg
sbb
and
out
pushf
lahf
nop
sbb
hlt
and
adc
cmp
push
xor
xchg
mov
fldl
aad
call
mov
mov
pop
cltd
cmp
jmp
sbb
fwait
mov
mov
add
in
sbb
sbb
fmul
sar
and
enter
cs
push
inc
mov
mov
sbb
hlt
test
call
mov
enter
leave
xchg
and
in
cmp
sbb
fpatan
dec
lret
inc
pop
or
inc
jle
movsl
adc
mov
mov
push
mov
stc
rcrb
adc
mov
fsub
loope
fcoms
and
jg
xor
sub
fistl
test
ljmp
mulb
mov
dec
pop
add
stos
fwait
mov
mov
sub
sub
mov
adc
jl
fs
pop
dec
xlat
pop
test
out
mov
lcall
pop
adc
out
shrb
rclb
inc
inc
push
adc
jle
fstl
ja
clc
mov
xchg
or
hlt
in
sub
and
cmp
sbb
jle
mov
adc
mov
pop
xor
sub
or
sub
leave
mov
xor
sbb
ret
lds
jle
push
jne
enter
cmpl
inc
jb
or
jl
imul
aas
push
test
mov
adc
fistpl
jae
aad
sbb
add
adc
mov
or
aad
inc
dec
or
xchg
xchg
cmpsl
mov
adc
pop
adc
repz
mov
pop
xorl
leave
sbb
sub
cmp
aad
xchg
aad
std
mov
mov
clc
test
xchg
lret
fldl
xor
add
cmp
daa
cltd
xchg
ret
cltd
add
and
adc
sbb
bound
sahf
les
xchg
je
and
mov
jnp
sbb
dec
mov
dec
repz
mov
pop
pop
mov
frstor
push
dec
orl
mov
push
test
push
popf
xchg
cmp
imul
inc
jge
jp
xchg
mov
jle
mov
pop
pop
mov
out
push
pop
or
sub
or
sub
or
push
sbbb
xchg
mov
add
fwait
loope
aad
arpl
hlt
mov
mov
test
stc
fsts
pop
dec
in
adc
xchg
daa
sahf
lods
in
icebp
lret
hlt
mov
cmc
or
js
cltd
jmp
shrb
push
mov
shl
mov
lret
pop
inc
call
cmp
lcall
stos
loopne
mov
rcrl
cmp
adc
sbb
adc
xchg
pop
notb
jns
push
pusha
and
cmp
addb
and
pop
xchg
adc
mov
xlat
in
push
lock
call
cmp
popf
push
and
cmp
sti
iret
xor
jae
add
adc
cmp
loopne
in
push
or
xchg
mov
mov
pop
sahf
and
cmp
pop
add
or
outsb
neg
inc
xlat
jne
es
jecxz
adc
add
and
pop
xlat
jle
mov
in
pop
push
ficomps
fwait
movsb
addb
jecxz
rclb
pop
sub
push
mov
scas
xor
mov
add
lock
pusha
cld
fimuls
repnz
lock
clc
jae
mov
xchg
sub
fnstenv
fcmovne
add
jns
add
loope
push
jnp
push
pop
pushf
dec
or
ss
fcmovu
fmul
lahf
or
flds
adcb
mov
popf
rcrb
xor
fisubrs
leave
cs
enter
test
into
clc
sub
stc
jno
enter
push
cltd
aaa
jl
fcom
xorl
notl
push
dec
and
pop
mov
mov
xchg
orl
cmpsl
out
ficoml
iret
shl
cmp
out
jecxz
xchg
jno
cmp
stc
sbb
xor
push
sarl
mov
imul
push
lea
sbb
fnstcw
sarl
out
mov
dec
jnp
ret
push
and
addr16
pop
push
pop
pop
lret
jne
mov
sarl
ja
ret
sarb
lcall
pop
rcrb
inc
mov
add
dec
sub
jo
out
add
jne
cwtl
jae
shlb
adc
dec
mov
dec
jle
ret
or
addl
jns
adcl
xchg
adc
lret
test
std
fcoms
pop
aad
or
xor
aaa
push
or
lret
ds
inc
call
js
mov
sarl
push
adc
jge
mov
jbe
and
pop
cmc
fisttpll
jb
data16
das
cmp
push
mov
pop
sbb
jmp
xchg
mov
xchg
cmpb
and
jecxz
mov
cltd
or
nop
mov
bnd
and
in
rclb
jns
dec
and
or
jecxz
repnz
push
sbb
mov
loopne
pusha
pop
jg
mov
ror
std
pop
push
pop
out
addb
xchg
add
xchg
mov
inc
hlt
mov
adc
cltd
add
insl
inc
or
cmp
push
fidivrs
cld
push
jecxz
jge
rcrb
in
xor
jmp
add
imull
inc
xchg
cwtl
jbe
leave
mov
ds
repz
add
cmpsl
xchg
jbe
ret
into
shrl
lret
xor
dec
pop
adc
test
jne
dec
or
mov
insl
fadd
in
or
fldenv
lock
mov
xchg
push
hlt
bnd
jle
xchg
inc
call
rcrb
cmp
jge
push
fnstenv
add
push
xorb
pop
notb
cli
inc
insb
clc
daa
xor
fs
out
in
in
aad
push
fwait
mov
adc
dec
mov
outsb
shl
mov
cltd
aam
jle
inc
xchg
mov
fnsave
fidivs
mov
xor
or
jle
push
fcoms
pop
cwtl
mov
shrb
jns
cltd
adc
mov
into
insl
pop
fsts
popf
popf
xchg
xchg
push
or
adc
xor
fistl
insl
push
movsl
lcall
jle
shl
mov
push
mov
popa
xchg
aas
loope
insb
mov
or
push
mov
lea
sbb
or
adc
jmp
imul
mov
cltd
imulb
jmp
into
bound
pop
xchg
xchg
sub
and
xor
mov
aas
sub
int3
stc
sub
scas
mulb
adc
ret
add
and
loope
aad
fstl
mov
push
aaa
mov
mov
push
insl
xchg
mov
sub
std
xchg
mov
addb
cmc
mov
adc
or
mov
cltd
push
adc
jno
icebp
cltd
mov
mov
pop
sbb
movsb
test
xchg
fnstcw
mov
in
and
add
jg
and
in
rorl
push
sbb
clc
call
lcall
clc
ficoml
ss
out
xchg
inc
stc
mov
fadds
call
jne
mov
call
or
jb
sub
xchg
ljmp
or
shrb
jae
and
sub
adc
sub
inc
and
jb
push
xchg
mov
repz
nop
xor
std
hlt
jb
jge
dec
add
repz
cltd
push
roll
jl
gs
js,pn
in
inc
mov
cltd
cmp
imul
cmpsl
rclb
mov
imull
fsub
int3
leave
rorl
sbb
add
cmp
sub
lds
lret
jns
lea
mov
clc
cmc
xchg
insl
mov
shll
fcmovb
repnz
cmp
sbb
fs
xlat
mov
push
add
orb
out
leave
icebp
xchg
pop
xor
test
or
mov
push
out
push
addr16
fistpl
jle
inc
idivb
pop
xchg
sub
rcrb
push
popa
mov
add
inc
xchg
idiv
sahf
mov
fnstcw
xor
rcll
popa
add
push
sub
push
mov
ret
and
sbb
jmp
lret
div
data16
mov
es
mov
sti
sub
xchg
push
adc
add
adc
xchg
mov
fistl
and
rclb
popf
movsl
adc
test
cmpsl
enter
sub
jg
shl
or
hlt
fsts
fdivrl
xchg
popf
out
cmp
in
test
push
push
mov
sahf
xor
jle
or
inc
imul
call
sbb
stc
psubsw
aad
fcmovb
jo
and
adc
popf
adc
adc
or
sahf
addr16
lock
adcb
cmc
xchg
mov
lret
xchg
xor
adc
xchg
mov
adc
or
test
bound
xchg
nop
iret
or
push
je
outsl
jge
cltd
ljmp
add
stc
or
and
jmp
dec
pop
mov
and
fwait
xchg
or
mov
lahf
sbb
sarl
icebp
mov
mov
loop
outsb
xorl
or
fsts
fists
fldl
into
cmp
jo
mov
clc
call
outsl
or
pop
lock
push
cli
cmp
test
clc
adc
sub
jb
fwait
addr16
imul
cmp
clc
fwait
dec
pop
imul
rorb
leave
mov
addr16
lret
pop
and
xor
loopne
outsl
aad
cmp
test
aas
mov
cmpsl
lods
notl
bound
xchg
ljmp
mov
fsts
bound
cmp
notb
int3
shl
call
lret
push
adc
fsubrs
insl
inc
nop
stc
rol
xchg
cmp
ret
fsts
jns
aaa
insl
mov
jne
pop
pusha
das
jns
inc
and
cld
adc
inc
push
inc
cs
frstor
mov
imul
popf
in
inc
ret
arpl
sub
jmp
repz
aas
jns
andb
adc
add
lds
ja
test
add
incb
scas
xlat
sbb
xchg
and
xor
loope
bound
mov
rcrb
scas
mov
aad
mov
fstpl
test
cwtl
cld
sbb
outsb
add
cld
jg
push
jge
cli
push
pop
sarb
js
repnz
arpl
shlb
das
push
xchg
aam
add
sub
popa
jnp
mov
push
mov
xchg
pushf
nop
pop
shll
add
jmp
adc
dec
repz
and
push
mov
rcrl
aad
clc
inc
mov
in
and
subl
jb
sbb
stc
clc
jle
sub
jl
mov
sub
add
out
sub
sub
jbe
push
leave
cmp
cmc
push
mov
dec
mov
orb
xlat
xchg
out
mov
and
sub
ret
neg
mov
add
dec
adc
mov
or
add
aas
mov
lods
sbb
ss
jecxz
pop
push
adc
les
xchg
dec
xchg
or
rorl
shll
push
fstps
popf
inc
xchg
jbe
pop
and
mov
int
sub
inc
dec
insb
push
pop
dec
jle
int
push
push
jge
js
push
xor
repnz
psubusb
clc
xchg
aaa
lcall
pop
addb
add
dec
sbb
xor
or
into
adc
bound
cmp
push
xor
pop
push
nop
lret
sub
add
gs
mov
inc
imul
adc
lods
jmp
mov
pop
adc
hlt
rcr
mov
rcll
les
inc
push
lcall
pop
enter
rcr
pop
fucomi
jnp
mov
repnz
stos
push
rcrl
add
jno
and
push
rcrb
fstps
movsl
lret
enter
cmp
adc
or
mov
mov
xor
mov
mov
mov
aad
ljmp
mulb
outsb
ret
test
cwtl
inc
or
orl
fsubr
fisubrl
sarb
jb
and
xchg
cmp
lret
cmp
dec
jp
aad
xchg
xlat
lods
fnstsw
push
shl
and
mov
ds
or
mov
stos
push
xor
js
clc
mov
popf
mov
stos
add
jbe
jns
cmp
inc
shll
cmpsb
jo
adc
lret
cwtl
dec
outsb
jne
xchg
bound
jle
shl
push
inc
nop
sbb
xor
jns
pinsrw
pop
imul
gs
testl
sbb
add
push
mov
mov
or
pusha
sahf
inc
push
mov
rcrl
push
arpl
sbb
lahf
call
shl
xor
mov
bound
add
movsl
jns
jg
pop
std
cmc
mov
test
dec
push
xor
push
or
add
faddl
jg
inc
in
mov
sub
mov
pop
popa
push
mov
or
fstl
les
push
jecxz
push
decl
xchg
push
add
xchg
mov
or
mov
mov
test
call
sbb
ret
xor
rclb
mov
outsl
mov
icebp
sub
jnp
sbb
arpl
mov
pop
loopne
or
mov
mov
jmp
cmp
loope
pop
leave
push
xchg
mov
jne
out
lods
pop
jbe
or
leave
popf
pop
roll
sbb
out
jns
mov
nop
in
pop
jo
or
test
fdivl
dec
lcall
inc
cltd
scas
pop
aam
out
pop
cmc
clc
out
je
jbe
out
mov
jle
adcl
and
iret
popa
stos
xchg
inc
mov
add
movsb
add
shlb
les
lret
iret
xor
int
jo
push
inc
repz
imul
popf
mov
mov
mov
ss
fwait
mov
mov
test
adc
cmp
jle
mov
xchg
cmp
out
mov
popa
outsl
in
imulb
inc
cltd
mov
sahf
call
push
lret
test
add
mov
cmp
mov
and
rcl
not
jnp
pop
sub
or
adc
fs
or
xchg
pop
xchg
mov
pop
les
gs
mov
imul
ret
cmp
mov
mov
rolb
negb
mov
lods
stc
mov
pop
adc
lahf
lods
sarl
push
inc
cmc
loopne
mov
add
neg
and
mov
mov
test
pop
std
push
or
hlt
adc
icebp
vmovupd
divl
cmpsb
mov
lret
lock
push
imul
and
cld
iret
push
xchg
xor
cmp
leave
data16
in
div
sub
fcom
lock
faddl
and
inc
push
cwtl
sub
sarl
jl
pop
mov
fimuls
mov
add
xlat
insl
repz
pop
std
pop
les
add
push
addr16
xchg
inc
xchg
and
add
dec
jns
jle
pop
cmc
fldcw
clc
shll
insb
cmc
dec
in
push
sbb
mov
xor
adc
rcl
fldenv
cmc
cmc
and
adc
enter
in
aad
mov
push
fnstcw
xor
mov
addr16
rcr
jmp
mov
bound
lret
es
and
add
xchg
mov
lret
and
mov
or
pop
sahf
sub
adc
clc
sub
sbb
or
dec
sti
fistl
les
fcomps
push
push
sub
leave
xor
push
push
test
shlb
loopne
push
mov
cltd
outsb
inc
pop
sbb
dec
in
push
pop
dec
leave
rolb
add
cmp
lods
pop
insl
outsl
fldt
sbb
or
cmp
stc
addr16
lret
rcrl
xchg
xchg
mov
imul
fiaddl
mov
out
addr16
xchg
jle
movb
xchg
lods
xchg
les
fnstenv
dec
jae
inc
sub
cmpsb
cmp
sbb
cwtl
ja
popf
daa
push
pusha
ss
adc
jns
mov
cltd
std
xor
out
mov
or
mov
xchg
jecxz
mov
out
pop
inc
cmp
add
rcl
sub
sbb
add
rorb
mov
scas
mov
sbb
je
cwtl
sbbl
int
jb
mov
test
mov
inc
sti
xor
test
mov
sub
add
xor
insb
or
inc
pop
in
mov
loopne
fwait
xchg
hlt
mov
adc
out
and
es
call
aad
xchg
pop
xor
add
sub
lcall
pop
ret
cwtl
jp
pop
jbe
adc
xchg
pusha
push
jne
imulb
test
mov
mov
cli
lahf
lods
jnp
push
mov
and
cwtl
and
cmc
adc
inc
ret
out
jecxz
mov
push
xchg
loop
add
into
pop
hlt
or
jns
fnstenv
mov
mov
push
cltd
jp
mov
push
hlt
add
bound
cmp
arpl
flds
jmp
push
test
cmp
fld
cmp
rcl
sub
push
xor
cmpsl
cmp
add
hlt
jns
jb
push
adc
lret
lahf
jl
es
adc
push
test
rolb
or
sbb
sbb
mov
sbb
adc
fimull
mov
jl
test
lds
pusha
ljmp
lods
loope
ss
test
fsts
dec
pop
js
ret
sbb
sbb
sub
xchg
sub
int3
push
mov
push
or
adc
inc
fnstsw
aam
stc
mov
xchg
daa
mov
in
push
icebp
push
repnz
adc
sbb
repz
or
mov
mov
test
sub
test
ljmp
jge
outsl
push
gs
clc
xlat
shlb
push
icebp
sbb
jp
adc
daa
jb
ja
add
adc
jae
out
je
cmpsl
xchg
dec
xlat
stc
xchg
push
in
int3
insb
mov
shll
leave
dec
push
xchg
or
hlt
aas
xor
adc
popf
dec
and
push
imul
popf
cmc
sbb
loopne
cltd
or
add
push
mov
sub
scas
lods
xchg
mov
adc
rcr
push
mov
movsl
jge
lea
outsb
pop
xchg
adc
inc
push
dec
rcrl
sbb
test
inc
fs
jge
in
rcrl
and
mov
mov
insl
adc
aam
xor
test
enter
adc
sarl
mov
mov
out
lret
or
pop
jae
mov
jge
jne
pop
cltd
push
outsb
cmc
in
or
cli
shrl
adc
mov
imul
jecxz
cmp
cmp
mov
orb
add
pavgw
push
ss
into
data16
movsl
xchg
adc
xchg
cmp
push
push
pop
outsl
adc
frstor
test
sub
bound
adc
dec
sarl
add
dec
jmp
cmp
and
test
repnz
fists
outsl
pop
mov
ja
xchg
or
cmp
and
ret
xchg
mov
jns
jmp
cmp
push
clc
rcrb
xchg
and
jbe
push
rcrl
xchg
lret
push
cltd
or
add
divl
xlat
lcall
jbe
loope
xor
pop
rcll
jle
push
jge
cmp
repz
icebp
push
mov
cmp
fists
pop
sti
fwait
dec
xor
das
aam
jmp
pop
pop
aaa
inc
popa
sarl
jb,pt
push
clc
xchg
repnz
sbb
adc
pop
cmpl
jae
addb
pop
ja
enter
lcall
pop
mov
mov
gs
js
xor
cmp
stc
ficoms
mov
pop
xchg
sbb
popf
aaa
push
pop
leave
add
push
sub
or
out
lahf
jo
fsub
xchg
imul
xor
adc
jmp
loope
push
rorl
stc
mov
test
aam
subl
out
push
fimull
aas
imul
xchg
mov
push
mov
sub
cmpsl
xchg
gs
xor
call
mov
xchg
xchg
or
push
aad
pop
stc
push
cmp
pop
mov
sbb
ds
cmp
std
fs
push
inc
imul
push
mov
divl
pop
imul
cmp
xchg
jge
pop
adc
dec
lret
imul
sti
sub
int
sbb
hlt
dec
adc
shl
ja
cltd
shll
xchg
pusha
add
movsl
aam
sbb
insl
jne
cltd
ja
shl
ds
inc
aad
aas
in
add
add
xor
nop
xchg
mov
div
add
adc
xor
lea
popf
test
sahf
xchg
frstor
add
int
ss
cli
dec
lds
xor
dec
lret
loop
call
xchg
push
ss
ret
push
fdivs
std
cltd
leave
mov
sub
sub
jg
mov
pop
popa
cwtl
dec
pop
xchg
pusha
mov
push
cmc
adc
scas
shll
pop
pop
lock
push
xchg
push
into
mov
cltd
mov
pushf
add
cltd
outsb
or
ror
scas
int3
out
mov
fsts
cwtl
sti
mov
or
fnstenv
stos
cmc
call
mov
or
cwtl
sbb
push
ret
adc
fnstcw
bound
push
jp
lahf
pop
jb
mov
rcll
and
out
cmp
fisttpll
ret
mov
fisttpl
jne
orl
mov
xchg
into
imul
mul
push
outsb
aad
adc
sar
mov
add
push
push
std
cltd
adc
cmp
pushf
mov
sub
ja
jb
testl
add
xchg
xchg
push
lods
adc
jle
mov
mov
or
rcrl
cld
rcll
pop
sub
push
xor
jne
adc
ss
xchg
jno
es
add
dec
sti
lret
rcrb
test
or
or
int3
xchg
ss
sarl
sbb
cmpsb
test
int
pop
jo
jg
in
aas
mov
imul
pop
adc
dec
xchg
mov
ret
rcrb
sub
mov
adc
hlt
dec
push
sub
mov
sub
enter
xchg
xlat
xor
mov
adc
cltd
sbb
mov
popf
dec
fistl
lcall
push
jns
cmp
lret
push
lods
xchg
decl
xchg
sbb
mov
xchg
cmp
mov
push
adc
fisttps
adc
stc
loope
or
add
or
int
loopne
daa
pop
xor
test
mov
clc
jbe
cwtl
aad
push
inc
sub
push
mov
add
sbb
sub
shlb
inc
push
cltd
int3
jmpw
shll
adc
popa
shr
jg
push
jge
or
lock
dec
loope
push
cs
stos
pop
repz
mov
push
or
lock
pop
divl
cwtl
xchg
add
ds
inc
mov
jl
pop
jp
cld
cmp
xchg
lret
out
pop
jno
mov
xchg
jg
aas
mov
aad
jnp
aam
mov
mov
push
movsb
jge
and
pop
sub
aaa
jge
stc
cld
aas
bound
incb
and
jle
pusha
fmuls
clc
pop
stc
adc
stc
iret
inc
dec
push
outsl
cs
and
das
bound
fdecstp
roll
andb
clc
pop
ss
fucom
mov
cmc
imul
call
and
test
mov
fstl
xchg
xor
js
ror
mov
xor
push
cwtl
test
loop
clc
pop
cmp
imul
add
daa
cltd
mov
fisttpl
aad
dec
repz
fldcw
pop
xchg
xchg
aaa
je
push
cmp
jbe
jns,pn
movl
inc
inc
push
mov
out
dec
pop
mov
aad
mov
inc
or
aaa
pop
xor
cmpb
test
fidivrl
loopne
adc
xlat
jge
stos
fstpt
mov
push
mulb
les
clc
push
inc
push
jbe
add
outsb
loope
int
test
push
cld
bound
push
cltd
stos
lahf
mov
sbb
jbe
jnp
insw
mov
dec
ficoms
adc
pop
mov
add
add
mov
ficomps
inc
mul
push
jecxz
sbb
adc
rorl
test
cltd
in
shll
rorb
popa
mov
fstpt
stc
add
mov
and
arpl
xchg
int
and
divb
sbbb
movzwl
mov
dec
repnz
dec
adc
push
mov
ret
out
cmp
cmp
loope
leave
rol
inc
mov
add
sti
cmp
cwtl
xchg
inc
mov
inc
les
popa
popa
repnz
add
inc
add
sarl
test
mov
xchg
push
inc
test
mov
and
push
push
icebp
loopne
popa
rcr
lock
adc
pop
jbe
mov
push
rorb
movsb
in
pop
cmp
inc
or
leave
push
xchg
daa
jae
rolb
lea
lock
rclb
push
sahf
pop
jb
xor
jecxz
xchg
push
cltd
inc
je
xor
pushl
sbb
cmp
and
push
jmp
lea
sub
xor
enter
jmp
enter
dec
add
decl
mov
xor
int3
in
and
pop
lret
jle
cmp
and
out
test
xchg
mov
dec
js
push
xchg
sbb
and
js
mov
adc
or
sbb
jmp
cmc
outsb
shll
jns
notl
aad
jle
test
adc
or
jno
cli
stos
testb
clc
mov
nop
pop
mov
ror
xchg
or
arpl
pop
pop
shl
mov
mov
mov
mov
addl
test
sub
jg
cmp
jns
push
cmp
inc
out
sbb
and
push
aad
add
mov
call
jge
ret
or
or
sbb
xchg
and
testb
inc
push
clc
pop
or
jbe
adc
adc
dec
and
mov
daa
xor
add
add
xlat
xchg
fcmove
test
popa
rolb
insl
out
dec
jo
icebp
xor
enter
xchg
pop
loope
push
pop
shl
scas
and
out
cld
ja
push
xor
filds
pop
inc
pop
leave
inc
sar
insl
fdivrl
enter
push
popa
and
call
inc
adc
jns
pop
mov
add
sbb
insb
orl
or
into
enter
rolb
sbb
push
inc
repz
cmc
idiv
pushf
jns
inc
mov
add
add
add
rcll
mov
pushf
clc
aad
mov
xor
jg
pusha
mov
nop
mov
mov
andl
into
xchg
jae
mov
sbb
fdivl
xchg
mov
push
xchg
cmc
negl
jns
inc
sub
aad
lds
adc
xchg
fcom
rcrl
jg
push
push
sbb
mov
xchg
or
cwtl
ljmp
xor
push
imul
and
push
repnz
jl
int
xchg
arpl
and
negl
call
popa
cld
scas
xrelease
add
cmc
pop
and
mov
xlat
add
pop
sbb
je
repz
and
cmc
cmpsb
jl
scas
jle
jmp
adc
inc
nop
mov
mov
or
rorl
les
mov
cmpsl
imul
fwait
pop
inc
or
ficoms
xchg
mov
sahf
jl
je
ja
pop
jmp
cli
cmpsb
jbe
mov
push
idivb
or
pop
mov
leave
mov
clc
dec
ljmp
fs
cltd
sbb
dec
dec
mov
xor
mov
leave
dec
xlat
pop
lret
mov
mov
inc
sti
mov
fnstsw
xchg
jecxz
pop
xchg
mov
mov
sbb
pushf
decl
repnz
adc
mov
mov
repz
addr16
cmp
mov
test
inc
mov
pop
rclb
mov
sahf
hlt
decl
out
pop
clc
xchg
sub
adc
jle
adcb
orb
mov
les
stc
xlat
int3
add
clc
fld
sub
push
fmuls
pop
lret
add
int
repz
scas
aam
jecxz
jno
mov
mov
sbb
nop
mov
or
xor
push
ss
mov
orl
adc
into
out
lcall
sar
push
adc
dec
pop
test
sbb
cmpsl
jle
sub
mov
cltd
stos
fstl
sbb
aad
clc
aam
mov
das
clc
cmp
ret
imull
mov
pop
bound
cmpsl
out
or
fwait
pop
lds
push
add
movsl
std
pop
mov
loope
inc
cltd
pushf
cs
xchg
pop
lahf
shlb
nop
or
xchg
and
cmp
clc
mov
js
sub
cli
xchg
xlat
adc
leave
mov
jg
push
mul
push
mov
cmp
mov
inc
stc
jle
push
int3
adc
inc
xchg
hlt
dec
xor
icebp
in
jp
inc
mov
in
jmp
fldlg2
imulb
cs
cmc
dec
fstps
mov
stos
outsb
sub
pop
jle
js
or
add
xlat
stc
scas
mov
xor
sub
push
stc
aad
jbe
cwtl
add
adc
inc
push
pop
rorb
lahf
push
push
dec
adc
imul
outsl
pop
das
out
imul
mov
inc
push
xor
out
jbe
sbb
mov
neg
out
cltd
jns
or
lahf
in
jns
ficomps
cmpl
imul
fnstcw
pop
xlat
sarb
mov
fisttpll
mov
cmpb
aad
jns
jae
cwtl
popf
repz
jo
mov
adc
dec
mov
jg
ja
pop
mov
pop
and
jne
cltd
loop
out
dec
xchg
or
inc
sbb
in
xchg
cmc
inc
jecxz
nop
inc
sub
fcoms
mov
jnp
pop
jl
aas
push
jmp
dec
leave
and
pop
xorl
clc
xor
push
in
loope
in
pop
push
dec
adc
adc
push
jle
pusha
cmp
or
iret
mov
fsubs
jecxz
xlat
inc
ljmp
cmp
stos
pop
push
xchg
sbb
add
cmpsl
popa
sbb
cmp
dec
ljmp
xchg
pop
in
xor
bound
and
adc
add
in
inc
dec
rolb
xor
jle
sbb
dec
rcr
and
ret
jbe
in
jle
call
lret
out
lods
xchg
adc
cltd
mov
fbld
popa
sbb
in
fchs
jmp
mov
mov
hlt
push
sbb
cmp
push
scas
in
stos
xchg
enter
insb
and
std
rcrl
pop
xchg
repnz
sub
std
imul
lahf
pop
imul
xchg
pusha
add
mov
pop
fsts
repnz
dec
lds
sarl
jp
enter
cmpsl
daa
dec
rorl
scas
cltd
mov
adcb
repnz
int
mov
orb
dec
push
sub
inc
stos
cs
das
imul
sub
inc
cmp
or
cmc
inc
adc
pop
cmp
popa
ja
sub
mov
adc
out
push
popf
scas
and
sub
adc
jp
mov
jb
roll
nopl
inc
sbb
pop
and
xchg
cmp
sbb
out
aad
xchg
in
push
movsb
out
fiadds
out
jg
inc
and
or
rorb
roll
idiv
cmp
push
cmpsl
adc
roll
cmp
xchg
sbb
lret
sbb
jl
cwtl
xchg
xchg
insb
lea
adc
jns
lahf
xchg
or
adc
repnz
aam
xchg
mov
notl
fstl
aad
mov
push
mov
nop
push
fnsave
rcll
pop
push
sub
popf
notl
mov
clc
sbb
cmp
pop
fdivr
xor
xchg
sbb
nop
cmp
fistpl
aad
mov
idivl
in
lcall
fstl
xor
push
mov
nop
xlat
xor
push
adc
mov
jb
or
fnsave
mov
fdivrs
rcr
adc
mov
adc
divl
xor
push
cwtl
notb
aam
divb
ss
notb
mov
push
mov
repnz
xchg
cwtl
notb
sbb
divb
clc
clc
notb
mov
mov
clc
mov
pop
mov
aam
push
xchg
lock
mov
pop
clc
push
mov
sbb
xchg
mov
pop
mov
aam
pop
mov
push
testb
xchg
add
cmc
xchg
imul
enter
xor
xor
sbb
push
fbstp
test
imul
aad
inc
rol
clc
mul
nop
xchg
jecxz
cli
cltd
cmp
cltd
xchg
cmc
lcall
jno
imul
xchg
adc
rcll
mull
leave
and
popf
fidivrs
fstps
fsts
arpl
aam
xor
ret
in
aas
jno
adc
aad
notl
fstl
or
aad
or
clc
pop
or
cltd
pusha
neg
adc
mov
push
adc
pop
outsl
imul
push
repz
loop
push
or
push
mov
int
je
inc
lods
push
add
jno
dec
push
xor
sbb
shr
mov
pop
mov
in
cli
shrl
aad
jb
inc
xchg
cld
mov
shl
or
add
push
sbb
inc
mov
dec
scas
xchg
jg
sub
cs
sub
xorb
adc
test
lret
push
out
loopne
jns
xchg
xchg
shlb
jns
xor
pop
adc
xchg
movb
or
ljmp
mov
outsb
cwtl
inc
pop
daa
in
imul
adc
mov
clc
dec
fsts
sbb
loopne
jg
inc
pop
xor
je
mov
jno
mov
add
ds
dec
mov
enter
mov
ficoml
mov
cmpsl
shlb
xor
add
mov
aam
cmc
mov
or
inc
std
xchg
fidivl
std
jne
push
push
sbb
mov
pusha
adc
daa
mov
repnz
push
imull
sub
dec
dec
add
xchg
adc
ja
int
rcr
cs
ficoml
push
rclb
movsl
std
add
fisubrs
sbb
cltd
mov
mov
and
jle
aad
pop
imul
fiaddl
inc
ficomps
repz
shrb
add
mov
jnp
fxch
xchg
dec
adc
cmp
xchg
fldenv
hlt
scas
mov
int
adc
pop
jbe
insl
repnz
mov
sbb
loop
ja
sbb
aas
data16
push
add
in
dec
xchg
lock
lea
pop
xor
xchg
insb
loop
xchg
push
dec
and
call
dec
aas
pop
xchg
lahf
jbe
inc
push
out
push
fucom
popa
jg
aaa
call
push
jb
orl
mov
fnstcw
mov
in
in
aam
push
cltd
pop
aad
divb
adc
je
adc
repz
or
xor
mov
add
adc
xlat
loopne
and
repz
xchg
cs
rcl
push
negl
mov
hlt
fsts
cmc
add
adc
idivl
jae
cmp
fstl
cs
push
adc
dec
add
ficoms
push
or
cmp
repnz
mov
cmc
add
cs
mov
or
adc
notl
dec
cmp
xchg
in
mov
cli
popf
jb
imul
jbe
mov
scas
bound
out
incb
pop
add
ljmp
fnstcw
adc
pop
cmc
jle
jo
cmc
mov
jo
dec
fcomip
mov
pop
scas
push
pop
adc
cmc
nop
push
scas
mov
xchg
mov
scas
gs
xchg
call
lcall
decb
sbb
or
pop
in
sbb
cltd
xchg
sbb
cltd
adc
xor
xor
stos
fdivrp
addb
les
add
shlb
sbb
aad
int
rcrl
sbb
add
leave
or
rcll
add
mov
xor
fisubrl
stos
add
cmc
pop
jns
inc
aad
fnstenv
xlat
popf
fmuls
div
cltd
cmc
sbb
mov
mov
push
adc
or
rorl
fcomps
sub
xchg
fcomps
loope
je
je
xchg
in
xchg
mov
int
stos
sub
add
jge
pop
imul
loope
addr16
pop
stc
xchg
and
dec
not
jno
mov
decb
testb
push
divb
test
mov
out
lcall
ljmp
adc
jne
bnd
loope
mov
push
cmpsl
mov
push
xor
push
daa
pop
push
and
into
idivb
pop
jns
subb
add
push
xchg
add
stos
adc
push
and
mov
add
mov
cs
jne
add
popa
std
cmp
xor
xchg
and
clc
dec
cli
push
dec
notb
push
and
jno
adc
jp
dec
imul
test
inc
divl
sub
xor
mov
xchg
push
stos
cltd
pop
xchg
jle
adc
out
test
pop
jb
ret
adc
fnstcw
hlt
iret
repnz
jmp
xor
mov
into
cmpl
or
jg
mov
enter
dec
ficomps
cmc
js
sbb
fnstenv
xchg
add
adc
repnz
ret
or
jae
test
daa
outsb
mov
mov
add
jp
adc
fldt
lahf
jp
adc
mov
jp
fwait
inc
std
add
inc
and
divl
cmp
cmp
adc
or
sub
xchg
xor
out
aad
or
jns
adc
mov
aad
bound
mov
and
jge
jae
lret
push
xchg
shlb
leave
push
or
cs
push
ret
icebp
push
mov
jbe
mov
fadds
sub
divl
jmp
mov
fbstp
xlat
loop
and
sbb
cmp
cs
jge
ss
icebp
stos
or
fnstcw
mov
pop
cmp
cmc
jno
or
mov
or
xchg
inc
mov
daa
or
mov
adc
fildl
stos
cwtl
fldenv
jge
call
mov
mov
pushf
xchg
xlat
lcall
out
inc
push
ss
lock
call
add
sbb
sbb
dec
xchg
orb
in
sbb
dec
fstl
fldenv
or
adc
clc
jns
call
clc
push
cmc
xchg
xchg
call
jl
leave
xor
aad
fdivrp
mov
div
xchg
enter
sub
mov
xor
xchg
mov
jae
repz
mov
cmp
push
pop
shrl
test
scas
js
adc
or
push
roll
push
sbb
push
sub
sbb
scas
fsubrs
cs
and
push
scas
cmp
or
push
cltd
and
fistpl
into
cltd
rcl
xor
aam
gs
ficomps
fistl
mov
xchg
lcall
pop
pop
stos
or
xchg
cld
add
notb
sbb
test
cmp
aaa
pop
push
sbb
lcall
cmp
or
jne
rolb
sub
jns
sbb
or
leave
out
sub
push
add
arpl
lcall
and
sbb
or
xchg
or
or
push
pusha
xchg
jns
xlat
sar
movsb
inc
sbb
aaa
sbb
repz
dec
push
fxch
std
pop
and
jmp
sbb
xchg
outsl
icebp
loope
shl
and
imul
mulb
fdivr
or
subl
jbe
hlt
lock
push
push
adc
push
mov
jp
sub
leave
cmp
jmp
jecxz
rol
rcl
cs
mov
push
clc
fcoms
sarl
sub
or
push
inc
xchg
pop
sbb
sarb
or
jg
mov
fsubs
movb
out
iret
and
add
pop
loop
mov
call
lock
cmc
jbe
jbe
fwait
test
outsb
cld
imull
or
jae
mov
pushl
mov
fldcw
int
cli
enter
and
shll
jns
es
shl
ret
dec
dec
int3
adc
adc
jle
es
pop
mov
pushl
push
int
cltd
push
addr16
js
push
inc
sbb
repnz
push
dec
lret
cltd
pop
mov
adc
lock
sub
imull
sbb
inc
sbb
or
and
sub
jmp
xchg
das
notb
insl
adc
mov
aam
add
repz
aad
gs
mov
in
sbb
sbbl
inc
das
cmp
pop
xor
xchg
and
jb
cmp
xchg
mov
repnz
adc
push
cmp
mov
fucomp
pop
push
cmp
jmp
ds
shrb
mov
pop
imul
clc
push
jnp
jns
xchg
mov
xlat
sbb
in
and
ffree
int
les
cld
pop
sbb
cli
cmp
add
mov
aad
inc
pop
xchg
jp
or
lret
test
push
add
mov
and
test
imul
outsb
push
test
clc
sub
pop
aaa
arpl
xchg
call
mov
lret
fldl
mov
inc
mov
or
mov
sbb
pop
test
enter
mov
imul
and
pop
push
cld
fstpl
jle
lret
push
frstor
mov
daa
lea
inc
mov
push
movsb
jle
ret
test
ss
leave
mov
jnp
mov
sub
pop
mov
jns
pop
imulb
cmp
push
cs
shlb
sbb
dec
nop
mov
inc
jmp
dec
xor
xchg
pop
out
shl
lret
loope
push
mov
cs
mov
adc
push
push
scas
or
xor
mov
fucom
xor
dec
adc
add
or
adc
jmp
test
cmc
jae
mov
jp
and
xchg
inc
or
push
jb
test
cmc
lcall
sbbb
fists
or
or
aas
cmp
xchg
scas
pop
fdivs
fldenv
adc
cli
push
fisubrl
popa
jno
flds
adc
sbb
cmp
rorb
fldcw
cmp
xchg
insl
inc
or
jg,pn
sahf
lock
mov
stos
and
add
xchg
inc
xchg
int3
test
mov
loopne
push
dec
test
sbb
ja
and
mov
fs
pop
inc
imul
stc
or
outsl
lret
std
lock
rcrb
aaa
std
shl
mov
cwtl
std
repnz
dec
outsl
loopne
addr16
insb
push
jg
xchg
mov
mov
sbb
push
ds
push
jbe
sub
push
xor
or
lret
pop
div
push
jb
cltd
mov
mov
xor
sub
adc
or
push
rcrb
fld
dec
out
je
rol
pop
test
push
pop
loope
or
push
inc
jns
in
pusha
lock
mov
inc
shl
frstor
add
not
popf
push
or
repz
or
sub
inc
shl
imul
xor
negl
push
popa
xor
mov
mov
sbb
loop
jge
aad
lcall
jp
or
cmp
or
sub
push
mov
sbb
adc
inc
push
sub
jo
cmp
call
ficomps
jbe
imul
imull
icebp
cmpsl
lcall
adc
repnz
cld
popa
mov
inc
jb
fwait
dec
es
lret
adc
inc
aad
sarb
pusha
aad
and
into
fdivl
add
xchg
repnz
out
adcb
mov
popa
sbb
xchg
and
xor
push
sub
add
push
jge
mov
orb
or
pusha
inc
sub
or
pop
imul
xchg
rcl
inc
mov
decl
mov
xor
xlat
cmp
and
fnstenv
mov
jne
insb
and
cmc
cmp
loope
sub
add
and
std
xor
rcll
push
clc
mov
and
adc
sub
xchg
neg
repnz
std
stos
stc
push
mov
hlt
stc
sbb
icebp
notl
aaa
jns
clc
or
cltd
stc
xchg
test
iret
not
std
fldl
mov
push
xor
add
les
xorl
cmp
mov
pop
cmc
lret
dec
test
xor
xor
fxch
mov
cmp
je
mov
not
sub
sub
xchg
rolb
xor
mov
repnz
aad
ds
movl
rcll
aam
out
test
test
fdivrs
fdivl
hlt
jns
xchg
pop
push
and
and
cmp
mov
or
push
call
or
enter
addr16
sarb
sbb
clc
hlt
dec
pop
sbb
enter
lcall
in
dec
xor
sub
xchg
sub
shrl
xchg
idiv
fcom
and
fs
mov
ja
fstl
ret
outsl
fadds
pop
or
lock
sub
rclb
aam
scas
fsubrs
je,pt
ror
dec
iret
adc
fsubrs
cmpsb
jo
insb
loopne
push
xchg
jne
add
and
jp
aas
pop
flds
jle
rol
cltd
addl
mov
lcall
mov
cmpl
sbb
and
jl
lahf
push
xor
cld
repz
mov
add
scas
mov
lahf
lods
neg
adc
sbb
hlt
in
cltd
push
add
pop
sahf
cmp
xchg
adc
int
sub
sub
call
xor
aam
enter
xor
sbb
sbb
xor
dec
push
and
sar
and
test
std
mov
pop
sar
or
or
sbb
push
aam
arpl
push
es
push
stc
lcall
add
lds
sbb
mov
cmc
nop
faddp
mov
mov
or
jb
pushf
fidivrs
leave
adc
cltd
inc
mov
or
and
pop
rcrb
adc
and
test
xchg
mull
dec
mov
clc
loopw
repz
sbb
mov
repnz
xorl
fstpl
and
mov
ljmp
add
rorl
mov
mov
loopne
ss
mov
pop
mov
jae
shrb
xor
mov
shl
push
ds
mov
lcall
inc
fstp
and
inc
and
ret
test
xchg
mov
mov
push
xchg
shll
testl
cld
cltd
adc
fldl
insl
clc
je
repz
dec
xor
mov
test
dec
pop
test
sub
mul
jge
jo
sub
shr
jge
jo
sub
rclb
andb
add
jns
cmp
std
popf
mov
push
sub
sbbl
mov
jns
out
hlt
adcl
adc
pop
mov
shll
rclb
inc
mov
push
inc
ljmp
add
cmp
dec
std
fnstcw
repnz
mov
cmp
sbb
fsts
push
and
icebp
cmc
fwait
js
mov
and
dec
loopne
push
icebp
insb
xchg
popf
js
mov
add
cltd
not
xchg
repz
adc
jo
xchg
xchg
dec
cmp
push
outsl
out
loope
clc
push
sub
xchg
mov
stc
cmp
cltd
adc
sbb
pusha
lcall
int
aam
icebp
aas
jmp
xchg
test
cmp
push
sub
into
lcall
loopne
fsubrl
ficomps
mov
dec
sbb
out
ss
xchg
shlb
xor
xor
lret
stc
rcr
inc
repnz
and
adc
push
mov
shll
repz
mov
mov
fnstsw
test
push
arpl
xchg
push
jge
push
xchg
add
pop
push
shrl
mov
xchg
mov
aad
fldl
inc
cmpsb
loop
daa
in
pop
or
mov
out
jae
cmpsl
jle
sbb
cltd
popf
fnstcw
faddp
cmpsb
jbe
xchg
loope
les
pusha
sbb
cltd
imull
mull
add
loopne
packuswb
cmpl
popf
std
fdivrs
addl
repz
ljmp
clc
sub
js
jle
pop
mov
lods
into
jmp
outsb
push
push
idiv
enter
cmp
clc
icebp
clc
cwtl
out
rcl
andl
mov
xchg
cltd
outsl
out
idivb
sbb
pop
jns
lea
shrl
jns
or
mov
and
shll
stc
int
out
ljmp
imul
fistpll
rcll
test
pop
xchg
dec
inc
xchg
sti
scas
shlb
pop
in
adc
test
cmc
lret
sarb
lods
inc
arpl
lock
and
mov
sti
adc
adc
xchg
or
mov
jge
mov
xchg
fsubrs
mov
mov
js
push
pop
repz
cmp
mov
sbb
jns
sbb
or
adc
xchg
xor
dec
mov
push
push
mov
std
sbb
shrb
pushf
rcr
mov
push
add
mov
pop
std
cld
sahf
add
hlt
xchg
out
sbb
mov
bndstx
xor
mov
shlb
xor
xchg
add
xor
clc
stos
iret
sbb
dec
mov
push
adc
clc
and
shlb
fsts
push
iret
cltd
outsl
sbb
inc
iret
push
sbb
pop
arpl
imul
jl
movsb
cltd
jno
cmpsb
nop
lods
jle
jb
jbe
stc
adc
inc
not
mov
adc
push
adc
or
fistpl
nop
jae
jmp
or
repz
pop
inc
xchg
mov
push
add
lret
dec
pop
scas
outsl
lahf
push
loop
inc
fs
ds
inc
dec
stc
mov
and
mov
setns
fstl
call
div
jo
sub
xchg
dec
mov
cmpsb
xchg
push
mov
sbb
pop
jecxz
inc
pop
inc
push
sub
mov
mov
push
int3
lcall
aaa
fstpt
dec
ja
sti
mov
das
xchg
add
sub
mov
mov
fisttpll
or
inc
aas
and
clc
cmp
mov
push
mov
xchg
add
jns
mov
mov
std
mov
imul
divb
outsb
xor
inc
xchg
test
cmc
adc
loopne
lds
mov
lods
shlb
sbb
repnz
xchg
fldcw
mov
lret
iret
frstor
rcll
add
push
pop
stc
inc
dec
and
add
xchg
fldenv
lea
xor
sarl
imul
cmp
sub
sar
lret
or
xchg
sbb
xchg
sub
inc
test
loopne
xchg
push
mov
ds
aad
sub
dec
es
icebp
sbb
xchg
mov
push
or
sbb
xor
ret
cmp
inc
add
sub
adc
cmc
push
or
mov
jns
cld
mov
cmc
cmp
adc
test
and
xor
pop
subb
adc
imull
xchg
xchg
adc
sbb
dec
mov
ss
out
add
adc
inc
xor
xchg
testl
test
fisubrs
pop
sub
pop
dec
pop
cli
push
mov
mov
pop
fsubs
adc
ftst
lock
and
call
xor
inc
aam
jl
jb
xchg
mov
cmp
jle
pop
cmp
loopne
ja
leave
push
repz
jno
xlat
mov
popf
or
lret
out
imul
mov
imul
xchg
jmp
xchg
cmc
scas
push
ret
sahf
pop
push
push
push
or
inc
cmpsl
mov
push
test
jp
jno
cmp
cmp
or
push
or
mov
das
repz
xchg
mov
sub
dec
xchg
mov
mov
in
mov
mov
ss
pop
or
lds
adc
fldenv
ret
clc
loopne
stos
lea
lods
add
repnz
movsl
out
insl
add
pop
roll
dec
xchg
movsl
out
sub
roll
repnz
xchg
push
std
cmp
movsl
out
in
add
popf
fst
xchg
movsl
out
lods
add
imul
aad
adc
push
mov
or
or
cwtl
dec
adc
bound
xchg
xchg
xchg
jbe
lds
xor
std
cld
sub
insl
aaa
jne
aas
sahf
je
adc
fs
das
mov
inc
add
fistpl
repnz
adc
cmp
loope
mov
test
mov
mov
inc
adc
addb
push
push
stos
int
sub
aas
rcrl
mov
sbb
push
xor
lods
lock
rcrl
push
das
cmp
fstps
dec
jno
mov
pop
mov
lods
sub
out
and
jne
mov
or
lock
jbe
xor
cmp
add
push
stos
popa
dec
mov
and
iret
outsb
xorl
jecxz,pn
popa
xchg
aam
xchg
inc
in
fldcw
inc
cmp
mov
adc
dec
fcomp
mov
push
sub
xor
cmpsl
shl
ss
in
insb
jno
inc
jo
jmp
jbe
push
push
push
or
jns
pop
sub
mov
sub
push
das
cwtl
jbe
push
add
shlb
mov
out
inc
js
mov
mov
cmc
jbe
mov
adc
iret
test
std
aad
stos
fidivs
popf
sub
sbb
push
and
cs
mov
mov
pushf
aam
xor
fdiv
fldpi
sbb
mov
nop
repz
test
adc
xchg
sub
or
and
lcall
nop
adc
loopne
cmp
sub
and
fimull
into
mov
jne
orb
jno
xchg
addl
fmul
xchg
nop
aam
icebp
lret
cld
lret
cmp
jg
add
fstpl
lahf
lds
ljmp
push
nop
dec
inc
push
aam
pop
or
insb
ss
or
dec
xor
mov
sbb
push
dec
push
ljmp
sbb
push
clc
pop
inc
jle
int
stc
int
jmp
push
push
cli
sub
fiaddl
and
jns
and
sti
ljmp
mov
adc
in
jl
jbe
sbb
das
or
xchg
jno
add
xchg
insb
adc
or
fldt
mov
fucom
insl
mov
sbb
int3
xor
add
push
adc
inc
mov
dec
das
pop
lds
inc
mov
add
mov
outsb
push
es
stc
fucom
std
bound
sti
inc
mov
es
xchg
and
jbe
jle
aad
push
mov
or
and
xchg
outsb
mov
roll
dec
fwait
mov
lds
leave
xchg
rol
stc
in
or
jo
and
mov
and
add
das
sarl
push
inc
add
adc
icebp
inc
pusha
push
push
stos
sub
add
daa
sbb
push
inc
ficoms
dec
jle
ffree
and
shll
mov
bound
cwtl
sub
push
arpl
loop
xchg
aad
mov
fucom
mov
lds
std
jp
movsl
xchg
pop
flds
gs
cmc
scas
push
sbb
mov
jle
fwait
sbbl
add
sbb
xor
call
sub
sbb
mov
je
push
mov
dec
rcrb
cmpsl
inc
cltd
inc
xor
and
pop
sbb
sahf
jmp
inc
sub
aad
insw
push
and
call
sbb
or
sahf
das
movsb
hlt
repnz
mov
arpl
daa
dec
cs
pop
insl
shrb
sbb
rcll
clc
imul
or
add
mull
push
adc
adc
insl
daa
ja
xchg
mov
inc
mov
insl
adc
repnz
cmpl
dec
lods
call
sub
or
xchg
nop
and
pop
pop
jge
scas
xchg
cmpsl
aas
sub
out
mov
nop
jno
es
and
into
les
cwtl
jge
dec
adc
mov
inc
icebp
jns
ss
int3
and
xchg
or
repz
sub
adc
jecxz
jmp
test
iret
popf
mov
inc
mov
iret
sbb
es
arpl
cwtl
out
fwait
es
lea
sub
pop
dec
popa
cmp
nop
imul
ljmp
mull
mov
or
fwait
les
inc
les
xchg
scas
jne
das
lods
or
into
pop
ret
cmc
dec
fdivrl
and
jne
cltd
push
dec
rcrb
aas
sbb
xor
rolb
mov
mov
aam
shrl
cmpsl
fdivs
xlat
test
xchg
rorl
jbe
pop
test
cltd
adc
dec
repnz
xchg
scas
push
xchg
ja
adc
lret
ds
mov
xor
hlt
loope
cmpsl
mov
hlt
fcmovnbe
add
jns
pop
pop
mov
inc
inc
cltd
dec
lret
imul
mov
aad
lret
mov
ds
sbb
imul
or
mov
and
ja
xor
cmp
adc
int
pusha
sar
or
lahf
mov
sub
xchg
movsb
mov
add
cwtl
cmp
cmpsl
sub
cltd
jnp
movsl
inc
iret
movsl
mull
fistl
jmp
mov
and
and
mov
stc
mov
mov
shr
clc
xchg
lds
fstps
dec
fcmovbe
push
mov
xchg
cmp
push
sub
mov
stc
movsb
fldl
adc
fiaddl
dec
sarb
add
jb
sbb
xchg
test
lret
inc
add
idivl
fnstcw
clc
addr16
mov
xor
int
das
mov
mov
xor
clc
dec
push
mov
jno
es
fstl
incb
pop
cmp
add
outsb
inc
lret
int
cmp
jae
daa
ror
mov
cld
mov
imul
inc
mov
cmp
pop
stos
leave
cmp
inc
lea
popf
sub
sbb
andl
and
push
mov
and
push
xor
pusha
push
fnstcw
pop
jle
sub
stos
repnz
xlat
xor
mov
stc
or
int
pop
addr16
and
lods
gs
xchg
subb
xor
in
daa
pop
jbe
lcall
stos
decl
xor
jecxz
sub
stos
imul
out
mov
inc
loopne
mov
imul
pop
inc
loope
mov
aas
fs
pop
enter
jle
sbb
dec
push
je
dec
or
xchg
push
test
ja
pop
push
xchg
dec
inc
adc
negl
ja
mov
fsubrp
cmpsb
mov
xchg
stos
sbb
mov
pop
mov
out
push
cmp
mov
mov
xchg
add
mov
inc
xchg
cmp
pop
mov
xchg
enter
push
adc
das
mov
fdivr
cmp
fcom
ja
push
fdivp
das
adc
fsub
add
pop
negb
leave
ja
or
fldcw
icebp
jno
cmp
pop
in
jno
das
int
xchg
stc
mov
sbb
enter
imul
aam
loope
pop
jmp
jbe
cltd
dec
xchg
sub
add
jecxz
push
out
push
ja
stos
cltd
mov
incb
mov
rclb
jmp
ficoml
adc
ja
xlat
mov
add
stc
cld
stos
sarl
xchg
js
rclb
cmp
xor
shll
iret
imul
sbb
inc
xchg
ja
dec
pop
cmp
jle
and
fsts
rcll
lods
jmp
mov
cltd
dec
test
dec
pop
lea
lahf
jbe
shrb
shlb
or
mov
enter
ja
cwtl
mov
lcall
into
out
aad
and
je
push
mov
push
fists
aaa
or
shrl
inc
push
out
cltd
mov
dec
ja
xchg
push
adc
rcll
cmp
outsl
ror
mov
mov
mov
outsl
xchg
push
pop
xchg
daa
push
rcll
dec
xchg
fists
cli
xchg
outsl
mov
test
aad
inc
fimull
jbe
mov
js
dec
aaa
jne
stc
mov
mov
push
cmp
xchg
push
dec
clc
or
cltd
mov
xchg
push
dec
push
adc
push
cmc
cmp
imul
pop
test
repz
xchg
push
repnz
hlt
das
outsl
jne
je
sbb
pushl
cmp
mov
lods
aaa
xchg
inc
push
fistl
movsl
loopne
sarb
addr16
mov
adc
xchg
xchg
ja
fnstenv
fyl2xp1
pop
push
shl
ja
push
mov
je
adc
mov
fistpl
mov
sti
jl
cwtl
inc
push
adc
cmpl
pop
push
test
mov
mov
cltd
pop
mov
inc
jne
stc
ja
cltd
jns
push
clc
dec
fnstcw
cmpb
pop
adc
cwtl
adc
push
enter
add
cmp
clc
aas
insb
add
push
xchg
pop
mov
mov
jno
add
lds
dec
sbb
adc
paddusb
repnz
pop
push
mov
scas
sbb
xchg
push
repnz
xchg
jmp
aaa
fldt
sbb
clc
xchg
repz
push
push
je
stos
or
cmp
jnp
leave
xchg
xchg
stc
mov
clc
cs
fisubl
je
hlt
sbb
cmp
fnstcw
das
push
mov
testl
push
pop
xor
int
mov
mov
psllq
xchg
fists
xlat
mov
fs
mov
xor
xor
sbb
cltd
fstpl
push
push
das
pop
js
pop
xlat
sbb
mov
rcll
xchg
mov
pop
pop
and
mov
xchg
aad
push
sub
enter
ja
push
shl
notb
or
xor
jae
xlat
lahf
mov
sub
sti
xchg
stos
adc
mov
xchg
pop
and
xor
addr16
pusha
xchg
xor
xlat
js
clc
jae
inc
test
cltd
sarb
out
hlt
inc
mov
jns
fcompp
aad
push
xchg
sarl
shrl
pushf
sahf
pop
xor
hlt
pop
pop
rcl
mov
lods
xor
mov
cmp
test
mov
xchg
ss
xchg
xor
mov
roll
xchg
mov
mov
fbstp
ret
xchg
push
jmp
jbe
jns
lcall
aad
test
sub
pop
in
repnz
sub
cltd
add
subb
push
divb
je
push
popf
xor
cwtl
cltd
cwtl
xchg
mov
pop
outsb
call
cltd
push
adc
add
hlt
push
cwtl
xor
xchg
cmp
cwtl
pop
jle
xorb
hlt
dec
cwtl
mov
pop
adc
rcll
mov
rcrl
jae
add
mov
fsts
loope
xchg
rclb
xor
call
push
push
sbb
repnz
shl
hlt
cltd
xchg
negb
ror
shl
ja
jae
push
xchg
test
jo
aas
aad
ss
push
rcll
fcoms
ja
and
cmpsb
and
clc
push
dec
push
xchg
jns
cmc
js
fsts
adc
mov
jbe
not
cltd
in
mov
jne
sub
cmp
das
fldt
dec
addr16
shlb
repz
jns
sbb
rcrb
add
jae
mov
inc
test
mov
pop
jge
pop
xchg
push
mov
rcr
push
or
inc
lock
adc
repnz
jns
pop
push
dec
xor
scas
xchg
jmp
push
stos
cs
cltd
and
mov
push
lret
shrl
mull
push
sub
xlat
fistpl
mov
scas
push
mov
nop
jns
lds
adcb
cmc
cmp
mov
mov
sbb
call
adc
testb
or
stc
jae
adc
jbe
pop
test
xchg
call
push
sbb
xchg
xor
pop
fists
push
fisubrs
fidivrl
repnz
fsubrs
aad
xor
jmp
pop
inc
test
or
call
rcl
push
aam
xor
rcll
fsts
pop
mov
shll
and
loope
test
test
jb
imul
push
pushf
loope
ss
jae
leave
ss
ss
neg
cmpsl
jecxz
cmpb
loope
sahf
pop
in
dec
fwait
add
add
sbb
je
mov
push
fiaddl
pop
clc
fs
or
and
jae
dec
lcall
leave
mov
cmp
push
adc
mov
clc
out
xlat
jg
das
scas
xchg
mov
add
mov
ljmp
aas
mov
fdivrs
aad
cmp
adc
cmp
mov
push
xchg
je
or
and
nop
aaa
insb
xorb
fs
inc
lcall
push
push
xchg
xchg
dec
add
pusha
pop
fsts
push
push
fs
adc
cltd
dec
aaa
orb
or
adcl
and
jp
jb
mov
or
lcall
hlt
rcl
clc
adc
jb
repz
aad
rcrl
mov
push
adcl
sahf
xchg
xlat
mov
cld
xchg
aam
and
ret
aas
sub
lock
xchg
stc
stc
mov
call
ljmp
leave
stc
adc
xchg
jnp
ja
out
test
xchg
adc
xor
xchg
rcr
sbb
call
jne
cltd
ja
or
sysenter
xchg
out
mov
into
push
popf
xchg
lcall
push
sbb
cmp
adc
adc
pop
adc
aam
idivb
shll
xchg
xor
mov
push
xor
and
adc
or
xchg
and
adc
xchg
dec
mov
mov
pop
aam
jg
das
mov
jge
lret
out
orb
cld
xchg
test
xchg
xorb
enter
fdivs
pop
fdivrl
xchg
xor
insl
jbe
imulb
push
pop
mov
sbb
sbb
shll
sbb
out
xchg
lods
push
divb
push
fcomps
adc
mov
jnp
fists
dec
stc
sbb
idivb
xorl
pop
imul
addl
bound
sub
mov
mov
push
xlat
xchg
or
inc
lret
sar
inc
cmp
jge
jae
aas
fldcw
sub
in
jmp
sbb
lret
out
jbe
mov
imul
mov
or
cmp
xchg
lret
xchg
push
jp
cmpsb
stc
xchg
add
xor
and
aad
mov
aas
mov
outsl
or
stc
mov
fldl
add
mov
clc
or
jns
xchg
mov
lds
cmp
mov
or
fisttpl
mov
sti
xchg
sarb
into
ljmp
cwtl
ja
in
sbb
ss
push
out
jge
inc
cmp
xchg
or
cmpsl
push
sbb
dec
adc
inc
test
sbb
cwtl
enter
jle
xlat
add
jno
push
sbb
ja
xor
std
xchg
mov
iret
adc
jmp
adc
clc
mov
jns
inc
mov
sub
add
sbb
xchg
cmp
enter
xor
out
inc
cli
dec
push
lds
repz
pop
mov
cmp
sbb
mov
mov
popf
pop
add
shr
cmp
mov
imull
jno
mov
or
cmp
aad
push
fnstsw
rcrb
mov
mov
add
or
and
pop
lods
pop
push
fbstp
js
sub
aad
iret
cmp
jbe
aad
xchg
cmc
cmp
neg
outsb
mul
mov
lock
mov
test
daa
xor
cld
ret
leave
jno
bound
dec
test
in
nop
pushf
mov
mov
ror
sti
nop
sarl
push
jne
fs
addr16
xlat
hlt
jo
ss
xchg
fcoms
inc
jbe
nop
cld
push
push
test
mov
pop
cmpsb
xchg
sub
add
or
xchg
call
fldl
shl
pop
sarl
shlb
fmul
push
xor
cltd
jb
xchg
adc
sbb
add
mov
jecxz
lock
adc
imul
jns
or
out
mov
push
mov
imul
mov
ja
mov
lods
pop
popf
mov
mov
xor
xor
jnp
pop
fisttps
shl
jns
test
test
mov
adc
sub
jecxz
sub
stc
fincstp
sub
cltd
movsl
fstl
push
xor
adc
aad
push
push
pop
xchg
sub
mov
xor
cltd
sub
add
imulb
sar
xchg
loopne
push
idiv
movsb
mov
inc
xlat
or
push
jle
shlb
inc
fnstsw
xchg
lea
cltd
daa
bound
test
imull
mov
adc
jg
testb
jb
mov
outsb
loopne
cmp
dec
jle
add
imull
adc
add
pop
jg
xor
jp
mov
ss
pop
ja
sub
lds
js
mov
inc
inc
jmp
jbe
jp
int
fsub
mov
mov
cmp
movl
cmc
pop
xchg
inc
leave
jle
rorb
int3
shll
pop
mov
xor
mov
pop
mov
adc
mov
xor
mov
and
adc
shr
push
repnz
das
scas
jge
in
push
daa
pushf
loop
ljmp
and
and
cltd
add
movsb
std
mov
jno
ds
cmp
bnd
lds
xchg
push
cmp
leave
sbb
xor
xchg
shl
test
push
push
fnstcw
sbb
leave
lea
test
mov
ss
sub
pop
nop
in
lock
xchg
jns
iret
lahf
and
inc
fstl
loopne
cltd
in
mov
sub
jo
lds
sbb
jg
aaa
leave
repz
ljmp
mov
mov
and
shl
adc
push
ds
jbe
dec
filds
shl
cwtl
push
dec
cltd
sbb
adc
insb
sahf
mov
inc
aad
hlt
rcr
sbb
test
mov
jmp
stc
rcl
stos
loop
pop
xchg
cltd
ds
repnz
and
movsb
frstor
daa
cmp
cmpl
shrl
adc
push
stos
bound
mov
addl
push
push
std
flds
nop
push
es
movsb
add
xchg
arpl
push
popl
pushf
or
andl
clc
mov
aad
sbbb
xor
pop
pop
push
mov
xchg
mov
mov
dec
cs
iret
cld
cltd
cmp
fildl
outsb
lahf
or
lahf
iret
jne
add
xchg
ds
ds
lcall
std
loopne
pop
rorb
imul
xor
inc
cld
add
inc
xor
and
cmp
iret
lea
repnz
xchg
xor
pop
push
cmpsl
push
ret
std
fistl
lds
aad
push
pop
ds
inc
repz
xlat
fwait
cltd
adc
shlb
sbb
sub
lea
hlt
pop
dec
cwtl
daa
mov
popa
lahf
mov
outsb
jns
mov
sbb
std
adc
jno
dec
pop
pushf
rcll
popf
xor
sbb
scas
mov
sti
mov
mov
xchg
stos
cmc
add
add
mov
xor
inc
push
or
repz
or
xchg
mov
dec
cltd
int
add
and
cld
xchg
aaa
jle
in
dec
test
xlat
stc
xor
pusha
fnstcw
or
xchg
lret
es
das
scas
xor
idivb
lods
xchg
lds
or
xor
mov
sti
xor
and
stos
or
cmpsl
push
pop
daa
fdivr
lret
adc
xor
cmp
push
stc
jle
mov
adc
lock
fwait
sub
js
popf
cmpsl
lahf
lahf
or
adc
jl
sbb
xchg
aam
fistpll
cmc
negl
dec
sarl
iret
mov
leave
xlat
lret
or
adc
sbb
rclb
mov
sub
js
inc
add
cltd
or
stc
pop
ja
ret
lcall
lds
flds
xchg
ficoms
cmc
lock
push
aas
dec
cli
push
or
test
sbb
cmpsl
icebp
or
mov
pop
xor
cmp
fcompl
jmp
jne
mov
ret
xchg
inc
push
out
push
cltd
test
stc
jge
xchg
jecxz
pop
imul
adc
and
pop
push
add
rorl
mov
andb
lret
sbbb
jmp
pop
movb
shlb
xor
cmp
outsl
xlat
js
repz
pop
out
cwtl
fs
sbb
cmp
pusha
jmp
and
jno
xlat
push
outsb
mov
add
aam
mov
aas
inc
xchg
push
push
push
or
std
push
repnz
cmp
frstor
jae
fcoms
dec
mov
out
add
daa
negb
cmc
stc
jne
jno
sbbb
add
adc
gs
popa
mov
fbld
cmp
ja
pop
fs
leave
xlat
lock
cltd
xchg
test
dec
push
nop
push
adc
push
dec
jmp
jle
rcll
xchg
jns
mov
call
push
repz
mov
nop
imul
inc
jo
xor
mov
xchg
push
shll
leave
scas
or
gs
movsl
push
jge
popl
sub
or
test
stc
ret
rcll
push
mov
dec
lea
sbb
lcall
shlb
sbb
ret
jns
out
inc
push
xchg
pop
xchg
add
mov
shrb
xchg
mov
inc
mov
lahf
loope
bound
ds
jg
rcl
in
rorb
pop
mov
mov
ret
push
out
addr16
out
clc
dec
push
pop
push
pop
cmpsb
jns
sbb
fnstsw
imul
mov
rcll
xor
xor
vaddsubps
add
inc
dec
pop
cltd
mov
fiadds
fiadds
and
add
xchg
aad
adc
add
mov
jecxz
mov
xchg
push
jns
fwait
adc
js
dec
mov
imulb
mov
xor
jno
and
or
xorb
aas
sub
fsts
shl
xchg
ds
rclb
or
mov
testl
or
or
arpl
ljmp
mov
adc
inc
jle
xor
fnsave
fldt
mov
add
sahf
subl
and
mov
mov
fnstenv
outsl
out
lock
lods
cmpl
loope
ja
cmc
lcall
mov
jl
clc
adc
cmp
imul
mov
sbb
xor
push
inc
sbb
test
add
movsb
jmp
xlat
scas
sub
data16
cltd
cli
add
sub
adc
mov
inc
mov
fnstcw
loope
push
stc
in
jns
jle
jle
mov
fildl
cs
es
inc
xchg
fabs
add
shll
adc
loope
shlb
aaa
imul
push
in
xor
xchg
push
ret
cmp
icebp
jns
aam
inc
cmp
xlat
xor
fildl
add
mov
enter
shll
fildll
add
adc
mov
xchg
aad
sub
addr16
jl
cmp
outsl
nop
sbb
lahf
jle
cmp
adc
filds
lret
cmp
nop
arpl
add
and
mov
add
outsl
pop
stc
xlat
int3
shll
pop
pop
leave
add
lea
les
icebp
push
fst
rcl
or
adc
adc
cmpsb
popa
sub
mov
cs
scas
notl
jne
or
adc
js
aam
mov
and
push
push
and
push
xchg
jge
mov
mov
fucom
or
dec
sbb
and
dec
adc
and
mov
and
insb
lret
sbb
cmpsl
outsl
adc
push
fwait
out
mov
inc
pop
movl
add
outsl
aaa
mov
fcomip
aas
gs
cltd
fstpl
and
clc
adc
mov
repnz
push
push
notb
cmc
push
aam
add
jle
aaa
cltd
or
dec
lret
fsubs
test
inc
fcoms
pop
cmp
lret
sahf
sbb
xchg
xor
add
lods
scas
mov
shll
out
push
loopne
popf
push
jns
cmp
pushf
cmpsl
push
pop
test
jns
cltd
shrl
mov
cmp
pop
mov
jae
pop
mov
ss
lock
jg
idivl
sbb
mov
mov
js
inc
xchg
push
or
lock
xor
subb
or
es
sub
sbb
ds
jle
and
icebp
int
mov
sub
rcrb
cli
or
jbe
shlb
js
fwait
and
xor
arpl
xchg
inc
call
sbb
cmp
or
jge
mov
jnp
or
push
adc
sub
cmp
cmp
loope
cltd
or
mov
pop
push
inc
dec
cwtl
mov
int
xchg
push
pop
inc
push
lret
or
mov
pop
orb
adc
cmp
xchg
fs
imul
bound
lret
inc
and
jbe
test
adc
push
inc
mov
outsb
jmp
imul
in
jp
cmp
mov
mov
test
loope
out
mov
inc
inc
dec
mov
lahf
je
and
xchg
aam
test
xchg
or
aad
and
std
push
in
test
mov
xchg
loop
scas
int3
ds
pop
sbb
dec
leave
das
xchg
inc
xor
mov
mov
aas
xchg
sbbb
das
pop
repnz
adc
add
call
dec
iret
add
pop
adc
mov
mov
or
ja
pop
mov
mov
cltd
add
rcll
ljmp
mov
xlat
stos
adc
insb
enter
loopne
mov
outsl
cmp
inc
cltd
sti
je
sub
imul
rcr
mov
or
jb
mov
mov
rorb
outsb
pop
push
pop
jno
mov
imul
jl
inc
dec
nop
mov
add
or
aas
js
aaa
test
xchg
push
pop
cmp
dec
iret
push
add
test
pop
add
push
inc
pop
int3
sub
hlt
mov
mov
stc
in
aas
rcll
mov
add
mov
sbb
pop
test
mov
xchg
pop
and
test
ffree
test
int3
or
dec
cltd
aam
out
jle
or
fs
shl
inc
sbb
cltd
mov
shr
sbb
xchg
clc
aas
out
mov
lret
repz
pop
mov
inc
jne
jb
sbb
mov
mov
ds
pop
or
fnstsw
lcall
jb
mov
les
je
cltd
popf
repz
xchg
aas
cwtl
push
sub
add
sub
inc
push
fwait
fwait
icebp
cmp
lock
pushf
repnz
fnsave
nop
call
xchg
sbb
test
inc
xchg
stc
xchg
movsl
popa
push
es
mov
lea
inc
cmp
out
ja
xchg
out
mov
cli
xchg
push
leave
ja
jno
ret
mov
pop
inc
gs
lcall
inc
loop
sub
bound
es
fstps
xchg
push
dec
inc
mov
cmp
jno
in
call
js
orb
mov
mov
pop
cmp
movsl
das
adc
sahf
push
sbb
dec
mov
cmc
and
push
add
loop
js
adc
or
mov
add
mov
idivb
into
iret
xor
mov
adc
jbe
mov
and
cmpsb
bound
xchg
inc
and
imul
enter
clc
mov
lret
and
and
mov
sbb
insl
or
fcmovnb
push
aad
pop
es
jo
icebp
jmp
mov
push
mov
mov
pop
inc
pushf
adc
out
or
les
subl
rcll
je
lret
int3
rcll
cmc
test
bnd
jge
popf
sub
inc
shl
push
mov
fcom
jno
mov
push
arpl
fcmovnbe
test
push
insl
xlat
sbb
cmc
test
mov
fnsave
push
insb
test
add
add
push
in
inc
mov
js
popf
mov
sbb
cmc
pop
xchg
fst
ds
adc
mov
mov
jge
pop
loope
dec
js
mov
popf
es
pop
add
adc
mov
mov
je
cs
aad
adc
mov
stc
xlat
mov
push
inc
jbe
xor
and
cmp
sub
sub
jg
xchg
fisubrs
inc
push
pop
dec
loope
mov
pop
jg
jb
or
cmp
push
sahf
xor
mov
cmpsl
pop
pop
into
repnz
cmp
adc
cwtl
jbe
jne
xchg
push
jnp
out
mull
xchg
mov
imul
loopne
clc
push
aaa
cmp
pop
xrelease
push
testb
lods
xorl
xor
bnd
clc
sub
sbb
adc
movsl
pop
inc
mov
ret
xchg
test
int3
ret
push
and
sbb
jns
clc
sub
mov
jae
jg
sbb
sub
sub
jns
xchg
rolb
mov
clc
or
ret
mov
stos
or
lcall
shlb
jmp
jge
jp
decb
out
sbb
fsubrl
shrb
daa
jbe
std
xor
pusha
out
jb
jb
js
push
pop
xchg
or
pop
loope
adc
mov
xchg
ret
popl
sarl
xor
jns
addr16
rcl
push
outsl
roll
scas
jle
imul
rol
jns
popa
roll
pop
inc
mov
sbb
sub
fstpt
dec
stc
out
mov
mov
jns
add
ret
cmc
inc
stos
stc
frstor
mov
test
sub
test
lock
out
and
outsl
fistpll
mov
test
mov
inc
add
jns
repz
fdivrl
pop
jmp
mov
push
out
hlt
js
rorb
insl
mov
jbe
cmp
jge
ja
ficompl
adc
ror
xchg
dec
xlat
shl
inc
or
cvttps2pi
fnsave
test
sub
mov
fisttpl
sbb
mov
pop
pop
jns
xor
pop
stos
cli
mov
xchg
jecxz
das
movsb
mov
cmp
mov
lahf
xor
push
popf
pop
xchg
xlat
stos
mov
dec
ret
les
lahf
ror
xchg
inc
push
cmp
inc
arpl
call
xchg
lahf
or
xor
inc
cmp
dec
daa
cmp
xchg
xchg
in
or
or
fwait
push
into
out
fimuls
fprem
out
mov
xor
jbe
aad
testb
cmp
dec
cmp
sbb
movsb
jnp
sub
shll
hlt
jo
aam
test
lahf
dec
dec
jle
sub
lock
mov
or
stos
push
xor
or
hlt
fcoms
push
mov
and
cltd
test
sub
aas
cs
aam
imul
push
and
sarl
stc
jg
aaa
xor
push
roll
and
xor
lcall
cmp
sbb
test
pop
xor
daa
sbb
add
sbb
inc
das
aas
rcll
inc
inc
inc
mov
mov
jnp
test
arpl
mov
push
int
or
jle
fimuls
mov
aam
fwait
std
or
dec
cltd
call
setnp
mov
imull
rorb
inc
mov
outsb
fs
and
inc
fildll
rcll
fadds
inc
cltd
lods
jae
test
xlat
andl
or
ficoms
xchg
jecxz
insl
pop
pop
and
push
mov
mov
pop
jge
or
arpl
lea
mov
mov
clc
mov
out
push
movsb
mov
clc
jecxz
icebp
ficoms
dec
jge
je
fisttpl
cmc
fists
adc
mov
mov
jnp
addr16
push
fdivp
mov
cmp
loopne
mov
aas
ljmp
xchg
hlt
pop
out
les
mov
cmp
xor
in
xchg
dec
mov
loop
mov
cmpsl
jo
pusha
fnstenv
insl
jle
in
mov
jmp
lahf
sbb
mov
movsl
stos
sti
rclb
js
bnd
stos
jno
aaa
sub
mov
sbb
shl
sub
enter
add
rol
insb
cmp
jle
out
iret
pop
cmpsb
add
out
add
sub
aas
xchg
pop
mov
sub
fwait
jbe
push
sub
out
pop
inc
push
addb
cmpsl
mov
mov
xor
fcomps
xlat
sub
repz
cmc
loop
fst
dec
mov
sub
xor
dec
push
or
lahf
cmp
insl
fwait
mov
popa
das
in
arpl
mov
sub
cmc
loope
mov
insb
std
test
push
pop
je
frstor
clc
in
push
mov
lock
out
push
daa
lock
stos
push
mov
out
mov
iret
outsb
jg
rcll
cmp
mov
jle
ret
aam
dec
mov
roll
imul
arpl
jns
int
daa
sub
xchg
lret
pushf
pushf
and
pop
fistpl
inc
xchg
adc
stos
push
mov
jnp
xor
in
jno
mov
lret
mulb
push
inc
ret
sbb
cmpsb
shlb
fpatan
mov
ret
lods
mov
ret
lret
rcrb
lea
test
sub
push
pop
mov
pop
xchg
mov
fldt
cmp
sub
test
push
pop
mov
das
subb
outsl
out
pop
sub
outsb
stos
xchg
jbe
or
cmc
jnp
faddl
in
adc
mov
push
mov
nop
pop
xor
mov
aaa
popf
push
pop
mov
dec
mov
jo
outsl
push
mov
or
testb
cmpsb
cwtl
pop
push
cmc
add
mov
xchg
jae
cltd
les
sahf
jns
frstor
xor
jne
xchg
sahf
sti
xlat
or
rol
testb
filds
scas
cmp
and
push
rorb
std
in
pop
lret
lret
add
or
jmp
cli
bound
subl
ret
imul
shl
mov
lcall
adc
mov
lock
xor
jae
dec
push
sbb
jno
push
pushf
out
pop
jmp
mov
mov
pop
iret
scas
inc
sub
jbe
shrl
inc
leave
mov
push
adc
push
in
push
dec
mov
fsub
pusha
push
shrb
push
jns
dec
inc
cmpsb
clc
ja
repz
push
jae
add
xchg
sti
xchg
aam
hlt
movsl
mov
xchg
adcl
mov
mov
hlt
and
xchg
stc
sahf
sbb
push
adc
loopne
lret
inc
jnp
adc
xorl
sub
ror
lret
rcl
adc
mov
adc
push
inc
mov
pop
aaa
mov
add
hlt
jmp
test
ficoml
lret
dec
ljmp
loopne
xor
cli
into
mov
mov
movsb
and
or
stc
stos
call
adc
push
jns
in
xor
mov
loopne
jns
stc
add
add
mov
rolb
in
lret
jne
sub
jmp
adc
aad
jge
xchg
lock
mulb
push
sbb
clc
or
fdivr
mov
andb
and
pop
mov
jno
imul
cmpl
xchg
es
fcomps
add
aam
cld
or
cmp
push
clc
pop
jns
adc
test
pop
jmp
mov
cmp
xchg
cmp
lret
aaa
dec
ficoml
negl
xchg
out
aad
inc
ds
mul
test
sub
xchg
sbb
push
movsl
cmp
enter
fmuls
addb
sbb
iret
jns
ret
inc
adc
cltd
or
shrb
mov
int
das
mov
jns
adc
in
jg
mov
dec
loope
jmp
mov
push
incb
jns
mov
pushf
cli
push
sbb
cmpb
out
std
ljmp
mov
lret
dec
xchg
xchg
daa
or
push
mov
leave
pop
sbb
aam
adc
dec
xchg
aam
sub
xlat
mov
pop
mov
xchg
test
add
lock
xlat
fisttpll
mov
and
mov
lret
out
push
dec
add
fistps
jg
jbe
ds
mov
push
dec
inc
fnsave
jns
jle
adc
adc
cs
ss
jns
and
es
testl
add
push
push
scas
adc
cmpb
mov
js
fistpl
mov
xor
mov
stc
frstor
out
inc
cmp
out
mov
outsl
pop
popf
and
and
xor
and
push
or
test
cmp
cmp
fsubr
inc
daa
mov
mov
xchg
xor
stos
push
sbb
lret
dec
and
into
addb
popf
es
sbb
sub
ja
push
cld
pop
jp
pop
jge
fnsave
sbb
mov
xchg
neg
lds
push
fs
cmp
xchg
call
mov
xchg
mov
mov
mov
fistpl
xchg
lds
add
fnsave
in
mov
lods
out
rcr
fnstcw
adc
int
addr16
push
add
sub
out
insb
sbb
ss
cmpsl
mull
cs
mov
xchg
clc
rolb
enter
xchg
jle
leave
scas
add
add
cmp
es
int3
mov
imul
jnp
movsl
es
sbb
add
iret
mov
outsl
pop
cmp
jb
jbe
xchg
push
inc
leave
sub
test
and
in
icebp
or
rcrb
mov
jmp
out
inc
lock
je
xor
cmp
popf
and
aam
xor
sub
fcomps
icebp
adc
add
inc
push
rcr
ret
add
xchg
rcll
or
lahf
fstps
stos
fistl
pop
jp
dec
test
insl
dec
sub
jnp
cmp
dec
sti
aad
add
fwait
or
adc
mov
insl
das
inc
idiv
jno
rcl
cmpsl
ret
sar
test
pop
cmp
cltd
mov
div
pop
xor
mov
xor
fistpl
push
xchg
or
xorl
pop
cs
call
mov
xor
add
inc
sbb
mov
orl
stc
movsb
ja
inc
push
cmp
jecxz
int
push
dec
shlw
xchg
xor
or
in
cli
insl
sub
out
mov
mov
add
testl
test
rorl
fcomi
aas
or
and
cmp
cmc
iret
fldl
aas
add
inc
rorb
dec
push
lcall
xchg
lds
loop
cltd
mov
xchg
sarb
aad
aad
add
push
lcall
pop
frndint
or
adc
add
call
ja
lods
xchg
int
jl
stos
pop
cli
fsubrs
sub
xlat
inc
js
out
and
mov
bound
lcall
aam
stos
out
xor
mov
shlb
iret
or
xlat
sbb
imul
and
cmp
mov
push
or
mov
jmp
imul
and
lret
pop
movb
dec
or
shll
ds
test
addr16
jl
pop
pop
lret
dec
mov
shlb
sbb
pop
rolb
push
mov
inc
cmp
fsubrl
out
cmp
dec
mov
jnp
mov
loopne
imulb
inc
das
mov
cmp
and
and
dec
int
pushf
add
adc
push
adc
push
call
pop
adcl
jge
shlb
enter
sahf
sbb
push
dec
sbb
popa
pop
add
mov
test
jb
mov
cltd
cmp
xlat
into
js
and
cltd
inc
cmp
sbb
pop
jns
mov
xchg
test
pop
addr16
push
cmp
scas
arpl
inc
aam
mov
push
mov
pushf
sub
push
sub
out
add
dec
mov
lea
xor
movsl
and
repnz
popl
pushl
adc
jno
addr16
lcall
leave
stos
data16
push
mov
xchg
repz
inc
outsl
daa
or
sarb
mov
rcll
pop
mov
or
mov
xchg
shrl
repnz
repnz
leave
lahf
and
ds
out
rcrl
insl
add
mov
adc
not
pusha
sbb
dec
rdmsr
out
jge
test
ds
push
adc
mov
ret
lahf
cmp
cltd
cld
sub
push
repz
out
subl
movsl
sub
inc
stc
cltd
shl
cmc
adc
mov
inc
jno
xor
xchg
adc
hlt
fists
vpsrld
jge
pop
and
mov
xchg
std
mov
into
dec
mov
loopne
sbb
bound
inc
mov
icebp
jmp
jmp
adc
or
xchg
pop
sarl
jbe
pop
sub
leave
lret
and
jmp
inc
aam
sbb
shl
mov
dec
fstps
mov
pop
mov
xor
mov
repz
ror
add
stc
lret
adc
xor
fwait
inc
pop
adc
xor
iret
xor
lcall
push
cltd
inc
dec
xor
pop
sti
ljmp
and
xchg
push
mov
out
mov
sahf
xchg
push
dec
add
mov
fisubrl
push
sbb
aas
mov
jb
andl
iret
mov
jg
ja
adc
xchg
out
in
sbbl
cmp
add
push
xchg
jns
jmp
mov
cmpsl
cmc
pop
icebp
addr16
mov
and
ret
loopne
mov
sarb
xchg
xlat
and
add
mov
xchg
xor
cltd
loopne
lcall
add
mov
imull
mov
aas
das
lcall
insb
or
push
sbb
and
xchg
arpl
adc
inc
ljmp
cwtl
adc
fcmovnb
jmp
mov
pushf
xchg
lret
cltd
adc
movsl
or
xchg
push
add
push
pop
inc
or
xchg
dec
insb
scas
mov
jle
pop
push
pop
cli
fstl
jb
std
and
icebp
pop
jo
loop
jns
iret
in
xchg
xchg
das
dec
or
cmpsl
xor
fstpl
dec
data16
adc
mov
add
jns
stc
mov
push
repnz
mov
cmp
fcoms
xlat
lret
xor
inc
add
cmc
jg
dec
cmpsb
xchg
movsb
in
sub
dec
outsb
mov
fs
insb
not
jns
jle
push
cld
pushf
aad
adc
arpl
testb
in
insb
cli
xchg
sub
sub
ss
or
fadd
leave
ja
adc
jle
jo
pop
push
inc
and
pcmpeqb
repz
daa
cld
outsl
or
clc
pop
xchg
fs
sub
sbbl
dec
inc
or
jo
xor
imul
lds
aaa
push
stos
arpl
outsb
loopne
and
loopne
jb
adcb
mov
jnp
xchg
repnz
cmpsl
or
mov
idivb
sarb
stc
fsubr
add
mov
mov
adc
rcl
daa
jb
bound
cmp
insl
push
out
adc
xchg
cmc
cmp
inc
add
sub
stc
call
add
cmc
orl
loopne
push
cli
xchg
iret
aas
pop
xchg
inc
cmp
imul
aaa
cmpsb
or
int
lret
inc
push
fsts
mov
mov
lcall
push
add
push
addl
xchg
iret
push
ret
push
mov
push
jo
cmpsb
pushl
inc
pop
rcll
mov
int
or
insb
mov
mov
cmp
js
jle
lahf
arpl
out
stc
mov
mov
sub
jno
mov
repz
stc
pcmpeqd
xor
fwait
scas
call
insl
idivb
div
xchg
mov
jb
push
push
add
hlt
cmp
or
sarb
fsubrs
repz
cs
mov
imul
mov
add
notl
lret
adc
mov
shll
andl
jo
pop
orl
pop
cmp
mov
jg
call
lahf
cmpsl
dec
mov
or
dec
jno
lret
adc
fnstenv
xchg
popf
int3
pop
pop
in
mov
daa
ja
mov
das
loop
adc
push
arpl
rol
in
push
movsb
sub
lods
adc
push
out
cmp
ret
jno
xchg
mov
or
xchg
mov
xor
xchg
mov
mov
loope
call
sahf
mov
xlat
lcall
in
jg
dec
scas
or
sbb
push
testl
xchg
jle
jb
fdivrs
cmp
addr16
popf
ror
inc
cmp
jge
xchg
inc
jecxz
pusha
mov
xor
jns
aad
add
movsb
les
outsl
xor
mov
lahf
mov
rcl
pop
popf
lret
mov
aad
cmpsb
xchg
lods
mov
imul
cltd
push
stos
cmc
jb
sar
in
les
adc
jbe
je
cmp
test
sbb
fdivrl
insl
into
js
push
fdivl
scas
repnz
add
fs
xchg
pop
je
dec
sbb
out
shlb
out
pop
in
inc
dec
inc
mov
scas
loopne
das
out
fstps
dec
push
enter
cltd
aad
mov
ds
mov
dec
nop
add
mov
xchg
adc
jns
sub
mov
cmp
jae
outsb
inc
loop
jbe
mov
nop
test
mov
pop
adc
mov
cmp
cwtl
jbe
push
sub
cltd
adc
dec
jecxz
loopne
adc
mov
aad
les
lds
iret
sti
sti
add
aad
idiv
xchg
cmp
mov
pop
gs
hlt
lds
enter
push
adc
sbb
push
sub
xor
add
sub
cltd
mov
dec
push
roll
ja
add
fisubrl
bound
mov
test
arpl
mov
mov
loop
mov
test
adc
cltd
ja
scas
xchg
rcll
pop
cmp
pop
push
cmp
mov
imul
push
push
in
xchg
sbb
cmpsb
aad
rep
enter
mov
hlt
rcll
outsl
mov
cltd
mov
shr
in
sub
sub
jns
popf
mov
add
mov
sub
std
ficomps
mov
adc
mov
xor
push
mov
xor
test
push
imul
push
lods
jns
lahf
btr
push
push
in
data16
movsb
ljmp
mov
jb
jle
jo
adcl
adc
lods
imull
dec
mov
inc
loope
adc
lret
nop
orb
std
sahf
jge
rcr
test
das
and
or
arpl
ret
scas
jne
mov
les
jns
rclb
and
fneni(8087
push
sbb
mov
popf
add
shrb
or
mov
lods
fdivrs
adc
push
xor
xlat
xchg
add
dec
add
or
imul
cmp
jecxz
nop
mov
test
push
xchg
fxam
or
test
sbb
mov
dec
aaa
or
adc
ds
fldl
aas
or
dec
enter
xchg
mov
rcrb
lret
popf
dec
mov
push
sbb
jb
ret
jae
adc
shlb
mov
pop
mov
and
push
inc
xor
fstp
push
jne
mov
cmp
push
lret
sbb
lret
into
cmpsl
push
add
leave
xchg
xchg
rorb
push
pop
ret
adc
lret
mov
subl
sbb
or
sub
ljmp
pop
xchg
arpl
shlb
push
ret
loopne
sbb
movsb
cwtl
push
cltd
daa
cmp
les
roll
dec
pop
lods
sub
test
popa
mov
jmp
mov
lds
mov
lods
rcr
test
mov
push
addl
je
test
aas
jecxz
xchg
mov
push
je
mov
sbb
stc
sarb
push
test
movsb
xchg
lret
or
mov
test
lahf
pushl
lds
leave
mov
in
dec
lcall
cmpl
js
adc
xor
xchg
hlt
gs
cmp
pop
mov
xchg
mov
loopne
sub
mov
jnp
stos
movsl
push
dec
das
pop
xchg
mov
stc
dec
add
sub
mov
icebp
mov
mov
push
test
xchg
cmp
cmp
jle
fldt
and
fnsave
mov
or
xor
out
xchg
cltd
aaa
in
jmp
int3
fdivs
xchg
cmp
aad
add
push
popf
adc
jbe
xchg
or
push
out
out
jbe
mov
out
lret
jmp
push
out
enter
stos
add
sbbb
lahf
sbb
push
jle
aad
push
into
xchg
aam
into
nop
js
adc
sbb
mov
rolb
cmpsb
aam
in
or
push
out
ldmxcsr
inc
or
sbb
lods
mov
stc
sbb
stc
dec
xchg
stc
cmp
lock
insl
aad
test
out
xchg
xchg
mov
popf
das
pop
dec
xor
jno
or
xlat
inc
out
int3
jo
mov
jns
lret
lret
mov
fcomps
jb
lahf
mov
popa
sub
adc
or
movsb
xlat
xchg
add
push
ret
sub
insl
incl
or
popa
ficompl
popf
jns
push
xchg
gs
dec
mov
adc
add
mov
aaa
in
or
pop
imulb
das
lds
int
out
and
and
out
hlt
xchg
lahf
mov
movsb
push
jge
lret
sbb
insb
sbb
shlb
sbb
outsl
mov
sarl
stc
shr
idivl
test
xchg
push
dec
push
fst
xchg
jns
je
sbb
or
or
push
fisttps
shll
jno
mov
mov
in
pop
cmp
fdivrl
lds
loopne
dec
adc
and
jp
jge
mov
jg
pop
gs
jl
inc
imul
sbb
sub
mov
cmp
push
mov
pushf
and
inc
mov
imul
movsl
push
idivl
cmpsl
lret
and
jns
cmp
addr16
dec
lret
xorl
dec
decl
test
icebp
sbb
and
popa
scas
loopne
and
pop
out
and
mov
cmpsl
jp
jle
mov
dec
xor
mov
leave
int
cmpsl
testb
mov
repnz
pop
cmpl
or
movsl
xchg
mov
jno
lcall
sbb
adc
mov
mov
pop
ror
sub
xchg
inc
or
leave
lret
popf
inc
add
push
push
or
sbb
dec
dec
xlat
jns
nop
mov
sub
sar
dec
lret
bound
mov
in
push
int3
xorb
in
shl
popf
xor
shrb
cwtl
fstl
sub
mov
cmp
adc
enter
flds
cwtl
mov
sub
neg
mov
std
xor
and
imul
gs
jae
or
in
gs
jne
int
pop
out
xchg
or
lret
leave
mov
jb
mov
inc
pusha
out
je
neg
les
push
fwait
sbb
sbb
cmp
sbb
push
cmc
push
jo
push
dec
fmul
popf
pop
and
fdiv
rolb
sub
or
std
mov
enter
xorl
cld
mov
cmpsl
jge
cmp
xchg
xlat
cmp
icebp
adc
jae
leave
insl
pop
nop
test
into
test
xchg
jb
sub
sarb
add
xchg
jb
testl
mov
clc
fldenv
fstps
dec
fnstsw
outsb
jbe
out
adc
xchg
sbb
jnp
mov
clc
mov
cltd
push
inc
int3
movsl
jb
sbb
cwtl
mov
or
add
jne
std
xchg
ret
cmp
or
cltd
shll
adc
mov
mov
in
and
imul
icebp
and
ds
push
pop
clc
pop
mov
fsts
imul
pop
cld
xchg
popf
insl
sbb
jecxz
xchg
shrl
xchg
hlt
popa
shl
push
inc
scas
pop
jle
mov
mov
xlat
cltd
sub
adc
adc
icebp
inc
stos
jp
addl
es
fcompl
dec
and
mov
arpl
leave
xor
pop
sbb
push
ss
jne
sbb
jb
mov
jmp
pop
or
scas
imull
jmp
xchg
outsl
jb
in
fadd
imul
pop
popa
push
cmp
mov
pop
insb
or
fistl
test
mov
jp
pop
in
inc
scas
adc
cmpl
sbb
aad
aad
pop
mov
clc
xchg
cmp
jle
pusha
inc
mov
xchg
xchg
adc
shl
dec
lods
rclb
or
dec
arpl
lcall
nop
push
xor
mov
xchg
mov
jle
outsl
shrl
daa
and
pop
iret
add
jg
cmp
xor
adc
sbb
sub
xchg
mov
lock
cmovbe
repz
fdiv
movsb
enter
movsl
add
addr16
fld
cmpsl
sbb
mov
into
jb
rolb
clc
lea
and
sbb
jo
outsl
sub
ds
push
cmp
mov
test
aaa
jecxz
loop
jns
dec
mov
push
rolb
mov
jb
xchg
scas
dec
rol
sahf
leave
inc
adc
add
test
lcall
loope
stos
jae
pusha
cltd
dec
int3
out
fiadds
cmp
xchg
pop
es
sub
test
cs
cmp
sbb
popa
loope
call
xchg
shlb
push
xchg
shl
popf
inc
imulb
out
dec
cmp
add
adc
repz
push
lods
sbb
xchg
xchg
pop
test
ror
jecxz
out
out
xchg
out
sti
pop
xchg
sbb
scas
inc
adc
ficoml
in
clc
push
lea
mov
pop
xchg
ds
jo
mov
sub
cmp
push
push
not
mov
add
xchg
jbe
sub
rcl
das
cmp
cld
or
mov
outsb
dec
mov
repnz
lock
dec
or
jmp
xor
xchg
sbb
mov
or
xchg
addr16
cmc
lret
je
push
jnp
rcrl
cwtl
mov
xchg
je
add
and
ds
das
xchg
dec
lahf
jne
imul
out
into
mov
xchg
aad
je
jge
jb
ljmp
rclb
mov
shlb
mov
std
cmp
data16
xchg
icebp
rcl
aad
push
out
cmp
mov
mov
test
outsb
xlat
aam
mov
lods
leave
xchg
mov
sub
or
xchg
jp
xchg
fstpt
sub
push
cld
sub
in
or
adc
add
pop
adc
sbbl
dec
imul
mov
mov
mov
lods
das
fidivl
ficoms
lock
lds
or
push
cltd
mov
popa
enter
subb
adc
xchg
sbb
popf
in
add
and
jns
fstl
clc
pop
xchg
fistpll
or
std
adc
sub
aaa
jne
sbb
fidivl
inc
or
rorl
cmp
popf
mov
out
adc
xchg
insl
daa
clc
shrb
or
inc
or
roll
sahf
sbb
dec
mov
and
repz
fsub
adc
shr
jg
inc
sub
pop
push
clc
orb
push
scas
fnstenv
fwait
mov
add
pop
flds
mov
xchg
mov
loope
fnstenv
mov
dec
insb
sub
pop
mov
fcmove
imul
fisttpl
js
pusha
mov
sbb
pop
ds
or
aam
sar
dec
and
repnz
popl
cmc
adc
mov
stos
idiv
add
hlt
cmpsl
xchg
xchg
mov
dec
fidivrs
andl
and
dec
sub
popa
push
jns
xchg
sbb
fs
fldenv
fwait
loop
add
addl
add
push
cmp
test
clc
arpl
jb
outsl
jbe
mull
je
pop
add
lret
sbb
rolb
outsb
jle
fstpl
test
sub
rcrl
loope
mov
js
int3
xor
jae
push
push
icebp
xor
sbb
shrb
lods
mov
mov
test
pop
or
cmp
jge
into
lea
mov
pop
fbstp
push
call
xor
xchg
mov
mov
into
imul
push
cli
cmpsl
das
inc
cld
repnz
mov
ror
ficoms
fdecstp
or
or
lods
nop
xchg
ret
or
adc
push
js
cmp
cltd
mov
loop
or
mov
or
jo
cmp
ss
outsb
mov
cmp
outsl
xor
stc
js
mov
mov
xchg
scas
xlat
fbld
xchg
sbbb
xchg
shl
xchg
in
jno
je
mov
movsl
or
pop
push
rcll
cltd
dec
test
jle
lock
xlat
push
adc
jmp
jnp
loope
imul
mov
adc
fmull
xlat
xchg
ret
cld
into
bound
sbb
sub
fnstenv
test
lea
inc
sbb
notb
or
sub
ss
repz
cltd
fs
adc
jne
or
mov
outsl
jecxz
xlat
fldcw
mov
repz
fdivl
inc
lret
and
popa
jmp
cmp
jmp
in
lods
pop
adc
in
push
cmp
enter
icebp
cmp
mov
xchg
pop
or
test
cwtl
mov
lock
ss
jns
add
js
loopne
movsb
adc
int3
or
dec
push
or
bound
in
fdivrl
gs
sub
in
ja
xchg
inc
mov
and
add
rcrl
lock
adc
mov
leave
adc
clc
adc
or
jns
mov
xor
cmp
das
out
outsl
lods
cmp
je
pop
in
in
cmpsb
pop
in
sbb
mov
or
imul
jp
inc
addl
dec
mov
xchg
or
mov
mov
xor
xchg
dec
adc
dec
test
xor
add
loop
dec
sbb
jecxz
dec
pop
fnstcw
push
mov
xchg
out
pop
dec
add
inc
pop
xor
rorb
scas
aam
inc
xchg
pop
loop
jmp
test
or
or
out
fstps
ror
fcompl
jns
add
adc
cwtl
rclb
or
and
mov
xchg
mov
rcr
movsb
push
sahf
fxch
jmp
and
aam
xchg
dec
jns
inc
and
push
add
jne
mov
arpl
sbb
push
xor
lcall
out
mov
decb
aas
inc
call
repz
mov
lret
jbe
sbb
sbb
out
popa
lock
lcall
or
pop
push
popf
call
mov
js
mov
pop
repnz
add
cmp
cld
pop
pop
inc
fmuls
loopne
or
divb
dec
test
inc
dec
fisttpll
mov
mov
dec
les
test
xor
stc
subb
faddl
xchg
fdecstp
dec
sarl
sar
repnz
xlat
cmpsb
jne
cltd
shl
popf
lods
or
ret
mov
ficoml
aad
fs
pop
outsl
ret
arpl
test
lret
pop
xchg
stc
cmp
cmc
or
add
xchg
push
aad
mov
ljmp
push
popf
mov
je
inc
inc
adc
fidivrl
xchg
das
vpmaddwd
sarl
stos
out
ret
negb
imul
push
notl
inc
pop
xor
and
je
push
or
mov
mov
mov
xchg
scas
push
aad
int3
xchg
push
dec
jne
or
and
and
mov
pushf
pop
mov
movl
jnp
jne
shr
jb
cltd
shlb
ss
test
jb
clc
mov
fnstcw
mov
lds
inc
add
aam
subl
leave
andl
mov
bound
fcoms
outsl
mov
aas
nop
shll
xchg
inc
ficompl
jge
test
test
dec
cwtl
mov
jge
inc
mov
cmp
out
repz
pop
mov
or
stos
les
add
dec
pop
xor
and
pop
jbe
shlb
pop
hlt
out
cltd
ja
cmc
enter
pusha
enter
cltd
xor
and
xchg
mov
xlat
dec
xlat
in
push
cmp
xor
and
sub
out
imull
outsl
sbb
imul
pop
xlat
push
pushf
lret
mov
aam
push
notl
mov
not
loop
rol
ja
or
test
jo
jbe
lahf
ret
and
insl
inc
repnz
jne
cmp
mulb
insl
scas
cmc
imul
lret
mov
call
daa
loopne
fwait
aaa
filds
adc
shr
mov
pushf
dec
iret
lods
dec
movb
fwait
test
lods
repz
in
or
xchg
cwtl
aas
mov
test
jnp
jno
test
lock
sbb
mov
xor
add
push
pop
cld
shll
cmp
cmp
inc
shl
add
pop
add
sbb
xchg
clc
sti
insl
mov
push
sub
adc
pop
loop
inc
lcall
add
or
inc
jge
sbb
dec
imul
add
mov
mov
mov
insb
inc
jb
shll
ffreep
pusha
xor
push
icebp
jo
lock
xor
push
xor
clc
out
mov
f2xm1
xchg
das
pop
push
call
or
enter
or
cmp
fwait
shll
shll
shlb
and
addl
leave
xchg
mov
nop
pop
call
aaa
clc
jbe
repz
testb
cltd
or
mov
not
xor
lds
pushf
scas
fld
push
sbb
mov
cmc
test
and
or
or
sub
sub
call
orl
daa
pusha
loope
add
fcomip
xchg
mov
add
mov
imul
fdivrs
ljmp
mov
fcoms
xchg
nop
std
fprem1
gs
mov
pop
js
xchg
lret
inc
pop
mov
aam
aam
fsubs
sbb
push
add
mov
cmc
sbb
sti
dec
insl
mov
ds
mov
test
aas
and
sahf
idivl
aaa
int
lcall
sub
dec
ror
out
adc
popf
fstps
insl
adc
dec
xlat
aaa
arpl
rclb
mov
shlb
lret
imul
adc
adcl
insl
mov
negl
dec
jae
js
xorb
ljmp
rcll
stos
imul
test
mov
mov
push
popf
movb
mov
adc
lret
inc
hlt
inc
fldcw
jmp
aad
call
nop
xor
pop
mov
out
mov
in
dec
outsl
xorb
mov
aas
cmp
inc
aaa
cmp
out
sbb
or
mov
inc
and
lret
push
sbbl
sbb
or
js,pn
push
test
jne
xchg
mov
ja
push
test
popa
outsl
mov
jg
and
fcompl
mov
pop
cltd
test
js
das
faddp
es
xor
push
lahf
sub
divl
jecxz
xlat
cmp
jle
aam
push
into
sbb
lea
repz
aas
repz
sbb
pop
lret
sbb
imul
mov
in
repnz
sahf
fldenv
decb
pop
insl
lods
adc
mov
xor
mov
push
daa
and
xor
and
out
outsl
ljmp
mov
mov
fiadds
xor
mov
jbe
and
ds
loop
mov
lahf
xor
and
pop
mov
js
rcr
sbb
popa
add
xchg
sahf
mov
negl
dec
sbb
std
xlat
sarb
test
mov
jbe
bound
int
xor
je
xlat
mov
ss
testl
dec
es
psubb
inc
test
mov
inc
xchg
jno
jo
fs
pop
adcb
cmc
xchg
out
dec
xor
pop
push
jle,pn
jecxz
mov
fidivl
rol
adc
xchg
sbb
jle
out
adc
push
mov
inc
mov
enter
xchg
cmc
or
fdivrs
pop
pop
mov
or
fwait
lcall
xchg
or
mulb
dec
rcrb
or
lods
das
inc
jmp
aaa
and
es
pop
in
mov
cmc
cmp
es
inc
cmp
push
cmp
pop
cwtl
adc
clc
frstor
adc
mov
das
or
xchg
out
rcrb
popf
dec
mov
sbb
iret
push
shlb
addr16
fists
mull
pop
mov
pop
mov
jmp
and
mov
fcom
sahf
xchg
or
mov
into
xor
out
sti
push
decb
sbbl
adc
jbe
sub
icebp
inc
out
int3
push
push
aam
push
fucom
arpl
sub
test
cmp
mov
push
lcall
jnp
dec
cmp
push
sbb
push
sahf
lods
xlat
jns
aad
insb
icebp
sbb
rol
and
pop
xchg
sbb
add
pop
cwtl
ret
cltd
aad
sbb
lods
inc
push
outsb
add
imul
or
xchg
scas
add
leave
mov
divb
dec
cmp
fists
imul
jp
fldcw
inc
push
sahf
jno
fisttpl
jmp
lcall
adc
pop
mov
rolb
out
jl
xchg
shl
xlat
xchg
lds
aam
std
push
cld
outsw
mov
fsts
cmp
pop
rcrl
pop
enter
int
loopne
fwait
cmp
pop
adc
xor
jle
out
sbb
sub
out
mov
or
roll
jle
pop
lea
fstps
push
daa
cltd
dec
push
sbb
or
or
gs
enter
test
sub
pop
mov
loope
stos
lea
popf
rcll
jge
pop
aaa
iret
mov
dec
lock
jmp
fnstsw
lods
xorl
pop
jle
icebp
mov
sub
out
int
jl
outsb
call
jb
aad
sub
mov
jg
iret
loopne
push
stos
inc
push
add
inc
outsl
sti
je
das
mov
pop
push
out
dec
jmp
xor
xchg
outsl
sarl
xchg
or
jge
inc
cmc
lea
cmc
push
aad
ret
dec
xchg
add
mov
mov
lods
fisttpl
mov
add
xchg
add
mov
insl
repnz
xchg
fists
rcl
add
popf
mov
fidivl
aaa
jae
and
pop
lsl
or
adc
cwtl
stc
mov
dec
push
jl
subb
lret
mov
ret
test
jg
les
sbb
inc
das
jle
xlat
nop
jne
dec
mov
clc
lock
nop
mov
mov
mov
or
jnp
aaa
scas
jns
add
test
add
leave
mov
xor
fnstcw
fnstenv
jno
aam
cmp
add
orb
cltd
and
sub
add
arpl
enter
fildl
or
and
xorb
pop
jl
scas
inc
stos
adc
sub
sbb
fnstsw
movsl
sarl
jae
and
xchg
mov
mov
pop
movsl
jmp
lret
mov
out
mov
adc
sub
sbbl
mov
adc
fsubrs
iret
mov
and
inc
leave
jp
xor
fnstenv
xchg
sub
mov
sub
ret
call
push
in
pop
pop
cmp
nop
outsl
call
outsl
arpl
xchg
inc
arpl
add
adc
gs
pop
out
lret
mov
je
mov
loope
jmp
icebp
test
lcall
cmp
imul
rolb
mov
mov
aaa
mov
std
in
outsb
int3
lea
fadds
int3
push
jbe
pop
pop
in
jnp
or
xchg
inc
fucom
mov
pop
lret
mov
aas
and
nop
sub
shll
cld
or
mov
cmp
es
cmp
sub
rolb
sub
gs
jle
jae
dec
dec
aaa
ret
dec
das
mov
mov
outsb
jbe
lahf
xchg
mov
leave
outsl
xchg
jmp
add
jbe
movsb
adc
jp
repz
push
enter
stc
jl
js
sbb
push
es
cmc
sbb
inc
mov
jae
xchg
xchg
cltd
popa
inc
sub
push
sbbl
push
or
popa
or
repz
push
dec
flds
add
mov
push
movsb
lds
js
add
stos
or
mov
push
flds
push
mov
jne
inc
xchg
cwtl
jmp
clc
in
fistpll
mov
mov
cmp
sub
mov
pop
stc
and
test
push
adc
or
mov
push
rcrl
insl
push
sbb
movsl
pop
into
pop
out
sete
jge
movsb
mov
fstps
stc
sub
mov
and
out
pop
mov
movsb
push
inc
jle
pop
popa
lret
shlb
aaa
cmp
leave
inc
outsb
cwtl
in
mov
fucomp
lcall
test
icebp
sbb
imul
or
test
inc
or
add
xor
mov
dec
xchg
xchg
loop
or
insl
mov
imul
aas
mov
scas
fldl
je
sub
lea
int3
fsubrs
cmp
pop
icebp
pushf
loope
in
popf
int
push
mov
mov
call
xchg
mov
jle
xchg
mov
and
pop
add
cltd
add
cwtl
out
fxch
cmp
lret
fcomps
shl
int
xchg
inc
pushfw
push
mov
les
lds
mov
rorb
lahf
fcomip
xchg
lock
push
push
es
push
add
xchg
aam
push
jns
ficoml
xchg
inc
aas
negb
loopne
cltd
add
nop
sbb
std
cmpl
xchg
shll
das
nop
mov
aad
push
daa
ds
icebp
xchg
pop
movsb
mov
fidivl
add
sti
arpl
out
aad
das
sub
add
add
rol
inc
fs
insl
mov
and
mov
or
sbb
es
adc
not
mov
xor
dec
mov
pop
sub
test
pop
imul
xchg
pop
std
shl
rorb
mov
mov
jle
adc
mov
pop
jl
orl
jle
add
xchg
jno
dec
icebp
fadd
loop
out
xorps
shl
pop
gs
mov
mov
push
shl
or
jl
aaa
loope
jmp
rorb
pop
test
cmp
std
shl
lock
inc
fcoms
pusha
sub
and
clc
out
add
or
stos
out
cmp
and
shrl
aas
jle
mov
inc
bound
es
popf
cmp
jecxz
test
pop
fistpll
stos
sbb
pop
lret
aad
ficompl
adc
leave
xchg
jg
movsl
jno
cmp
xor
mov
pop
cltd
test
xor
push
mov
xor
adc
repnz
mov
test
pop
ds
popf
dec
sbb
aad
int3
push
pop
mov
mov
testb
lods
lods
cltd
in
stos
adcl
adc
out
cwtl
push
stos
mov
cmc
sti
push
push
shr
jmp
cmp
repnz
not
or
js
lret
sbb
jno
nop
or
outsb
test
in
mov
mov
gs
loopne
pop
jg
jne
and
shrl
mov
pop
enter
into
call
adc
push
jbe
jmp
stc
sub
gs
pop
xor
das
add
pop
cltd
cmp
sbb
clc
test
inc
mov
push
mov
and
imul
and
dec
mov
ja
jge
add
sbb
subl
mov
sub
xchg
movl
jae
mov
mov
ss
stos
mulb
std
inc
loop
dec
nop
mov
aad
jns
movsl
fldl
int
adc
lock
icebp
push
sub
movsb
add
rclb
sub
mov
mov
sbb
jle
icebp
and
test
int3
push
adc
fucomp
mov
jle
sbb
shl
jns
inc
jno
sub
out
repnz
leave
jecxz
mov
andl
mov
or
jo
jecxz
xor
adc
ss
fcomp
jo
xor
and
dec
popa
scas
arpl
cltd
test
mov
addr16
insl
test
lahf
icebp
or
ja
inc
repz
xor
popf
push
push
cmp
inc
mov
cmc
stc
je
loopne
loop
cmpl
jp
xor
mov
cmp
and
xchg
filds
fldenv
xchg
jb
out
and
jno
dec
push
and
or
mov
jne
xchg
jne
js
inc
scas
rcl
fsubl
idivl
in
shl
jp
push
xor
jp
push
je
stos
mov
xor
push
cltd
sbb
scas
stos
xchg
jbe
aad
testb
cmp
icebp
jle
push
int
push
sub
inc
cmc
mov
mov
pop
ret
jl
push
push
mulb
nop
insl
or
mov
rclb
mov
push
aaa
sbb
cmp
mov
add
fwait
jo
in
jno
sti
xchg
int
data16
pop
or
pop
mov
jns
mov
push
or
mov
push
aas
aas
cmp
mov
adc
ret
pop
jmp
rcll
and
daa
or
push
rol
jae
xchg
mov
sbb
sbb
or
mov
push
push
div
lret
xor
xchg
ds
aad
mov
movsw
out
outsb
add
pop
roll
dec
xchg
push
cmp
movsl
out
add
popf
pop
roll
repnz
shl
incb
movsl
out
fiadds
popf
into
shll
push
scas
cmp
xchg
jg
addr16
outsl
cmp
pop
add
dec
shll
repnz
xchg
push
das
cmp
movsl
out
adc
or
incl
xlat
movsl
out
filds
out
iret
add
repnz
xchg
movsl
out
addb
popf
jo
push
push
push
cmp
out
inc
add
popf
xor
sub
and
or
popf
lock
repnz
fcoms
cmp
movsl
out
rolb
popf
mov
test
mov
cmp
sarb
cwtl
mov
and
aad
sbb
iret
jmp
xchg
pop
or
dec
dec
fcomp
sbb
xchg
xchg
movsl
out
xchg
xchg
xchg
xor
xchg
xor
inc
orl
add
ja
or
jbe
ficomps
inc
mov
shrl
push
pop
jle
jbe
mov
jae
lret
cld
imul
cmpsl
or
xchg
pop
jno
leave
shl
cmpsl
inc
mov
cltd
adc
mov
inc
mov
jae
sub
xchg
mov
xchg
cmp
lahf
pop
aad
jmp
push
jbe
js
rorl
cmp
pop
push
push
into
push
scas
jle
aas
dec
or
xor
pusha
rcr
mov
jb
add
xchg
cmpsb
out
add
loope
gs
mov
pop
mov
icebp
sub
mov
mov
add
sti
dec
mov
lods
decl
dec
out
xchg
or
sbb
stos
sub
add
lret
mov
out
adc
into
push
xchg
outsl
push
jbe
and
jmp
sti
pop
pop
rcll
xchg
mov
lock
hlt
mov
inc
inc
popa
add
xchg
mov
mov
leave
xlat
lock
sbb
inc
push
leave
or
push
fxch
cltd
popl
flds
icebp
or
add
or
clc
pop
out
mov
out
cltd
xlat
es
fiadds
aam
out
dec
xor
imul
in
cwtl
fnstsw
xchg
or
xchg
dec
adc
fwait
jne
out
rclb
fistpll
sbb
or
cmp
mul
jno
mov
or
loope
jno
std
das
mov
add
pop
pop
mov
pop
aas
inc
out
dec
aam
adc
add
div
lea
icebp
adcl
pop
mov
call
jbe
or
mov
mov
std
sbb
mov
mov
pop
xchg
shl
rcll
adc
imul
test
pop
and
adc
pop
sub
inc
or
pop
icebp
mov
cmp
in
mov
cld
push
shr
xlat
cmp
jmp
mov
testl
mov
mov
pushf
adc
push
push
jne
sbb
and
icebp
mov
xchg
push
je,pn
adc
shr
push
out
test
call
testl
lods
cltd
xchg
mov
dec
inc
adc
xchg
loope
mov
jo
jo
paddusb
rcll
test
jge
ljmp
pop
adc
in
mov
pusha
fcmovne
test
gs
jae
xor
fwait
or
sbb
sbb
sbb
sbb
add
sbb
add
mov
jae
test
pop
rcrb
push
lcall
and
mov
mov
xchg
or
push
repz
fildl
fsubs
pushf
mov
lds
es
repz
xchg
das
je
jns
cltd
add
jns
jb
pop
or
or
repz
add
icebp
mov
and
shlb
mov
mov
cmp
xchg
sbb
fistpll
sti
scas
mov
lock
fxch
fwait
imul
fwait
sahf
cld
icebp
sub
stc
cltd
mov
popf
and
jp
arpl
aam
jg
hlt
subb
mov
lock
mov
adc
xchg
pushl
in
cmc
aam
sub
outsb
jle
xchg
jno
cmp
stos
les
pop
jae
sub
xlat
fildll
repz
test
aam
xchg
dec
push
shrl
or
xchg
divb
scas
loop
jl
and
sahf
cs
adc
or
mov
push
xor
xchg
sbb
ja
rolb
fwait
and
xchg
xchg
mov
push
adc
xchg
jg
xorl
mov
push
lods
add
sub
fidivrl
add
leave
test
jl
shrl
imul
inc
call
inc
xor
scas
pop
test
ret
test
mov
imul
arpl
mov
rcr
push
loopne
nop
jle
xor
sbb
rcrl
pop
mov
pop
mov
mov
imul
xchg
or
xchg
out
sahf
xor
fdivp
fsubrs
jmp
adc
cltd
nop
fldcw
sbb
je
loope
sbb
scas
cmp
aaa
add
shlb
insl
bound
mov
inc
fmul
push
xorl
sbb
lcall
fcomps
jbe
fidivrl
test
add
push
xchg
sarl
xchg
sbb
scas
push
rcr
loopne
mov
fdivs
jb
pop
mov
loopne
add
js
pop
rcrl
jle
aam
pop
push
loope
shlb
pop
xchg
mov
xor
notb
mov
add
inc
push
roll
mov
mov
mov
popa
mov
clc
stc
fsts
fcomps
push
imul
leave
xchg
mov
dec
cltd
or
mov
sbb
popf
adc
cmc
stos
xchg
pushf
pop
rolb
xchg
sarl
dec
adc
adc
cmp
fstps
nop
call
cmp
xchg
push
adcb
fcompp
fdivs
lret
repz
lcall
clc
adc
outsl
aad
pop
dec
aam
lods
adc
xchg
sarl
sbb
pop
add
lcall
xchg
sbbl
push
push
adcl
mov
fildll
sbb
pop
sub
xor
sbb
mov
push
mov
cltd
dec
xchg
rcrb
leave
loope
shlb
mov
mov
out
push
mov
xor
xlat
pop
xlat
lods
enter
adc
leave
ja
psubsb
aaa
add
je
divb
js
negl
ss
or
repnz
cmp
add
hlt
popa
mov
aaa
ljmp
push
mov
mov
xor
mov
rcll
cltd
jns
xlat
or
push
inc
icebp
mov
add
xchg
shr
sub
ss
xlat
loop
insl
xor
dec
cmp
add
pop
cmpsb
iret
fbstp
roll
cmp
sbb
icebp
mov
or
jle
bound
ret
out
cmpsl
sbb
and
cmp
pop
stos
xor
xchg
aad
xor
inc
js
mov
dec
fnsave
mov
xchg
jl
xor
cmp
arpl
and
inc
or
daa
popa
push
lret
testb
add
inc
xchg
jno
jle
xlat
mov
lods
mov
cltd
mov
inc
in
xor
fwait
loopne
jle
sub
sbb
push
stc
iret
and
xchg
insl
add
and
inc
or
gs
xchg
loope
cltd
aam
cmp
mov
std
cs
adc
or
imul
pop
mov
imul
mov
sbb
and
or
push
push
stos
daa
jne
mov
ds
repz
stc
jle
js
add
xchg
jb
add
push
mov
and
pop
inc
pop
inc
sub
js
outsl
pop
ja
in
sbb
popf
push
leave
hlt
out
push
lods
mov
xor
pop
decl
out
adc
adc
aaa
push
shr
jns
sub
enter
dec
cltd
xor
xorl
mov
stos
into
mov
adc
sub
popf
cmp
lcall
lods
adc
out
stos
mov
shll
fwait
sbb
mov
or
je
sti
dec
mov
xchg
fnsave
aas
mov
in
daa
lock
js
das
mov
fmulp
rorl
aad
push
daa
fxch
sub
mov
dec
aaa
dec
cmp
sbb
dec
mov
roll
repnz
cmpl
push
cs
bound
jae
scas
shl
xchg
cmp
in
cmc
xor
fldt
scas
imul
push
fnstenv
popa
xor
aas
xor
fsubrl
test
addb
mov
or
insl
inc
sahf
rorb
mov
lock
sbb
testb
std
clc
mov
cmpsb
cltd
mov
jge
mov
pop
xchg
pop
cld
imull
test
lods
xor
fdivs
pop
xorl
push
fsubrp
xor
cmp
notl
js
pop
xor
scas
outsb
hlt
leave
xchg
jle
not
and
sbb
mov
pop
mov
pop
je
cmp
push
ret
icebp
mov
mov
into
xchg
or
mov
cmpsl
pop
xchg
add
jns
test
nop
cmc
or
pop
adc
data16
sbb
outsl
inc
into
dec
imul
int3
out
xchg
sub
push
adc
jbe
out
jbe
loopne
xlat
add
sarl
pop
sar
rorl
mov
push
in
add
xchg
mov
jns
popa
mov
neg
jge
cli
xchg
aaa
push
sbb
shl
test
mov
push
sbb
js
jns
mov
sbb
xlat
scas
jne
mov
cltd
inc
sbb
cmp
xchg
inc
cmp
cmp
ftst
sbb
jno
je
jns
add
cmpsb
mov
cmp
repz
js
push
jns
shrb
pop
out
xchg
frstor
mov
cld
add
jmp
idivl
cmp
cwtl
and
roll
xor
fdivr
mov
jns
loopne
shll
pop
movsb
shll
rcrl
xchg
mov
jge
dec
adc
cli
loopne
mov
leave
add
adc
sub
sbbb
xchg
mov
jns
cltd
cmp
mov
cmp
jns
mov
and
cs
dec
jns
adc
cmpsl
fildll
add
cmp
add
stos
notl
out
jg
ja
inc
pop
sbb
scas
mov
mov
ja
mov
adc
ljmp
clc
cmpsl
out
incl
scas
or
iret
nop
out
add
or
or
clc
or
stos
out
sub
add
shlb
sub
jg
iret
gs
xor
fdivp
jmp
filds
cld
pop
or
adc
adc
pop
push
pop
mov
cmc
jg
adc
cmpb
popf
mov
mov
ja
mov
int
lods
scas
aam
push
xchg
imul
cltd
idivb
and
ss
dec
and
cmp
fcomps
mov
daa
std
bound
cmp
loopne
push
pop
dec
imul
and
sbbl
jbe
mov
rcll
imul
leave
mov
ja
cmp
shlb
mov
add
rcrl
scas
inc
and
sbb
jle
jecxz
fnstenv
adc
out
mov
idiv
aaa
leave
fldl
and
pop
adcb
sbb
jae
jb
mov
jmp
pop
lret
es
sbb
cmp
addr16
aam
frstor
scas
cltd
div
jbe
adcb
scas
rcrb
frstor
test
int3
scas
push
jae
std
mov
inc
ret
cmpsl
xorl
sarb
inc
xadd
or
pushf
aas
push
jne
ds
shll
iret
dec
jae
pop
mov
cltd
sbb
lock
jae
lret
mov
or
jne
xchg
cmp
ja
sub
ret
push
rolb
xchg
stos
test
imul
adc
xor
adc
inc
pusha
pop
pop
push
fisttpll
push
sub
adc
ficompl
lret
cld
inc
insl
fisubl
cmc
rclb
or
lahf
jg
hlt
adc
xchg
pop
jbe
fnstsw
fdecstp
aam
je
aaa
cmp
xor
nop
jp
mov
mov
scas
push
mov
das
pop
pop
push
sub
mov
mov
mov
aad
lock
stos
sub
cld
and
fyl2x
shl
mov
andl
jmp
xchg
xchg
sbb
loope
or
or
jae
idiv
mov
fnstcw
dec
lods
mov
fnsave
sbb
add
rcl
pop
and
sub
inc
aam
mov
inc
sbb
push
inc
loopne
lods
fdivr
sub
dec
xor
xor
fs
jns
mov
cmc
push
pop
stc
inc
dec
scas
jecxz
inc
push
fsts
pop
push
xor
jge
shr
fsts
or
sub
xchg
adc
adc
rcrb
mov
mov
push
adc
xlat
lcall
sub
push
add
aad
ljmp
fsubs
int
jnp
push
jmp
push
and
lock
inc
sahf
pop
rol
inc
fsubs
inc
repz
sbb
xchg
in
mov
jg
loopne
mov
cmpsl
cwtl
dec
add
mov
push
pushf
push
add
cmpsl
push
sub
adc
outsl
mulb
shll
inc
nop
aaa
pusha
or
inc
mov
push
mov
fsts
cmp
add
iret
mov
je
lahf
xchg
xlat
repz
mov
sub
inc
ja
push
sub
imul
add
rorb
adc
lds
xchg
jecxz
xchg
pop
push
sbb
cltd
out
push
xor
lds
aad
mov
mov
cwtl
insb
repz
rcrb
es
in
adc
aaa
and
sti
stos
popf
test
lock
sub
add
iret
gs
inc
ss
popa
mov
lods
stos
or
jecxz
stc
in
cltd
jle
mov
mov
inc
push
mov
push
lret
aad
xor
pop
push
jns
push
outsl
stos
jb
pop
dec
cmp
xor
lcall
repnz
adc
mov
stos
lds
sahf
repnz
mov
test
cmc
xchg
and
mov
and
bnd
adc
roll
repnz
stc
notl
and
add
cltd
imul
bnd
hlt
xchg
sarb
mov
adc
sbb
cmp
mov
in
ja
inc
mov
mov
mov
add
das
jl
pop
xlat
push
pop
lock
jge
push
xchg
sbb
push
jno
cmp
or
and
popf
mov
shlb
frstor
fbstp
out
push
ret
cmp
xchg
push
flds
and
mov
xor
inc
add
add
cmpsl
and
xor
fsubr
repnz
mov
rcl
mov
out
shll
xchg
mov
out
sahf
mov
xchg
cmc
jbe
jge
inc
mov
adc
add
pop
subl
push
dec
orb
data16
je
push
ja
insl
in
pop
cmp
out
lea
fcmove
add
jno
insl
rcr
sahf
lret
iret
gs
sarb
adc
clc
adc
jns
in
mov
add
jno
adc
lret
mov
xor
mov
std
dec
sbb
and
mov
sbb
push
dec
adc
out
xchg
aaa
cmp
hlt
in
dec
sbb
stc
jbe
ror
cltd
imul
mov
popf
orl
push
cltd
pop
adc
cltd
xchg
cltd
nop
jle
sar
mov
std
sbb
and
sbb
sbb
cmp
cmp
outsb
sbb
lods
pop
push
add
idivl
sahf
mov
rcrl
clc
fidivrl
test
cmc
negb
scas
in
outsb
mov
out
pop
pop
adc
scas
fbld
rol
pop
adc
mov
mov
push
sub
sbb
jb
aad
cmc
pop
imul
jge
sub
aaa
sbb
test
cmp
sbb
cmp
pop
lcall
rcrl
into
leave
sbb
jge
xchg
das
test
jle
lea
repz
outsb
dec
idiv
fsts
ss
fcmove
aas
mov
or
or
leave
lock
or
push
andb
and
nop
adc
jmp
sub
lock
dec
push
xor
dec
xchg
popl
sub
popf
jle
sbb
sti
imul
adc
bound
and
or
lret
data16
dec
out
mov
push
push
sbb
dec
imul
inc
leave
push
adc
das
shl
cmp
adc
xchg
cmp
rorb
mov
xchg
adc
lock
lret
xchg
mov
iret
inc
pop
add
rcrl
jb
add
imul
test
xlat
fidivrl
clc
add
fldt
add
lea
dec
mov
push
jmp
or
mov
xlat
bound
repnz
je
aaa
jns
in
jno
loope
aas
test
sub
rcrb
xchg
sub
mov
sbb
xor
jae
call
push
mov
cmp
in
shll
sahf
lea
pop
xor
mov
repnz
xchg
ret
xchg
dec
push
iret
mov
sahf
dec
ja
mov
icebp
dec
lods
xlat
lock
or
lahf
rol
pop
addr16
mov
fnstenv
xor
sbb
popf
jmp
jne
fcompl
jb
sbb
dec
stc
xlat
mov
dec
leave
test
xor
stos
and
xchg
pop
jmp
sarb
daa
mov
or
movsb
mov
pop
adc
enter
dec
add
loopne
pop
mov
sbb
sub
jge
subb
push
ret
mov
or
sahf
insb
adc
sbb
cmp
iret
sbb
sub
xor
mov
sub
jbe
add
xor
hlt
in
in
lods
lock
out
js
sbb
out
addr16
cmc
xchg
js
xchg
nop
mov
adc
fstl
mov
add
cltd
sub
dec
xchg
imul
inc
shrl
outsl
pusha
cmc
cmp
mov
div
adc
enter
dec
rolb
xchg
mov
cmpl
pop
mov
jae
mov
test
sub
dec
rcrl
adc
rorl
mov
shlb
lods
test
ja
inc
sbb
cmp
sbbl
inc
dec
in
or
fstpl
jno
mov
scas
or
jno
cmp
mov
adc
ja
jbe
mov
cmpsl
rcr
add
jge
or
or
imul
inc
or
add
xor
adc
sub
fbld
rcrl
push
mov
je
out
aam
xchg
or
iret
sti
lock
in
out
mov
cmpsb
lahf
xor
or
adcb
fiadds
mov
gs
inc
xchg
xchg
xor
mov
repz
cmpsl
push
dec
ja
stos
stc
pop
movsl
leave
xchg
push
add
and
or
or
les
push
in
add
je
add
lock
mov
dec
fsub
xor
fyl2x
adc
sarb
aad
jecxz
shll
jmp
sarl
or
xchg
xchg
addl
sub
xor
add
push
subl
mov
push
clc
insb
jae
pop
lahf
pop
clc
and
rclb
repz
fmuls
lock
xchg
push
mov
loope
mov
xor
dec
or
movb
test
pop
incb
inc
xchg
loopne
and
mov
addr16
jae
xchg
dec
sar
stc
mov
mov
fcom
adc
int
adc
loopne
into
sti
xchg
adc
loopne
mov
int3
xchg
leave
jg
je
daa
dec
in
pop
pop
xlat
out
lds
into
popf
push
adc
negl
daa
push
xor
pop
mov
mov
stc
mov
sbb
cli
cmc
rcrb
sub
fdivr
cmp
scas
sbb
sub
movsl
xlat
adc
add
dec
dec
adc
pusha
sbb
add
mov
sub
xor
mov
sbb
in
cmp
popf
neg
jnp
pusha
and
add
inc
sub
add
and
mov
pop
lock
psubusw
fmull
adc
cmc
and
pop
subl
and
push
fldcw
or
in
adc
dec
or
out
mov
xorl
loopne
daa
push
ret
pop
hlt
test
mov
and
sub
jmp
xlat
shll
mov
leave
mov
aad
inc
xor
lret
inc
je
mov
js
cwtl
jbe
ja
addr16
test
outsl
add
xchg
cli
jns
inc
in
ds
adc
cltd
daa
add
push
jns
cwtl
cld
push
add
insl
mov
lock
mov
mov
rcrl
clc
add
pop
push
nop
sub
or
adc
sbb
cmc
call
xchg
faddl
and
dec
cmp
jns
sbb
stc
pop
dec
sbb
push
or
push
pop
cwtl
sbb
pushf
cmc
xchg
mov
aam
inc
jb
pop
ja
or
xchg
ret
dec
ret
xchg
adc
xorb
jb
imul
fsts
das
and
xlat
test
jl
add
stc
pushf
cmc
out
fisubrs
jl
dec
sbb
pushf
dec
iret
shlb
cmp
xchg
loopne
decl
mov
mov
cmp
ss
iret
sub
insb
push
jns
repz
mov
xchg
lret
pop
out
adc
or
mov
pop
xchg
xlat
push
icebp
push
shrb
pop
hlt
sti
js
adc
shlb
in
cmc
iret
mov
mov
pop
cld
xchg
xchg
mov
jb
pop
pop
fnsave
out
adc
jmp
call
add
ss
aam
fisubs
fisttps
cmp
les
insb
incb
pusha
xchg
lret
in
lret
fisubrs
push
xor
jge
rclb
pop
sarb
push
in
push
ds
mov
hlt
ficomps
xor
in
xchg
pop
cltd
mov
rorb
rclb
jp
mov
shl
repnz
loop
and
jecxz
sarb
mov
push
xchg
cltd
push
pop
out
push
add
fbstp
cmp
and
or
test
fdivr
mov
dec
and
inc
loop
cmp
das
mov
mov
add
or
mov
or
and
sbb
fwait
jbe
cmp
and
mov
jns
aas
es
and
push
pop
or
inc
aas
mov
jle
or
lods
xlat
adc
adc
cmp
test
dec
jo
lret
and
or
push
sar
les
xchg
fcomps
xchg
push
or
neg
mov
sub
clc
incb
mov
mov
add
xchg
subl
mov
aaa
inc
and
test
loopne
mov
cs
mov
mov
or
loop
adc
cltd
cmp
mov
jge
aam
jns
fdivrl
mov
sbb
mov
jno
outsb
loopne
lret
xor
mov
sarl
xchg
push
fidivrs
xorb
pushl
test
inc
and
mov
cmp
jle
adc
rcl
aaa
xchg
in
out
out
addr16
lock
xchg
jbe
add
or
cltd
bound
jbe
mov
mov
mov
ds
and
ret
shl
pop
outsl
adc
inc
inc
dec
fadds
fadd
or
inc
sub
mov
mov
xchg
rol
or
push
xor
dec
shrl
rol
das
std
in
cltd
shlb
mov
sub
rcrb
aad
jns
cmpsl
add
lds
inc
xor
sbb
scas
jle
push
sub
std
or
shr
mov
int
stc
jmp
icebp
sbb
mov
jmp
mov
mov
mov
or
cli
fcompl
das
fists
cld
lock
xchg
sbb
sub
mov
fnstenv
or
nop
dec
movsl
loopne
jmp
or
cltd
ljmp
cmp
sub
cmp
dec
out
std
or
addl
sti
xchg
pop
sbb
aad
clc
pop
popa
inc
sti
testb
xchg
add
or
lahf
pop
sub
push
dec
cltd
mov
mov
push
fnstenv
cmp
pop
mov
adc
adc
mov
sbb
or
leave
or
xchg
cmp
cmpsl
aad
insb
aam
mov
sbb
push
mov
ja
sub
js
das
jns
ror
sub
xor
mov
cmp
add
fs
mov
shrb
je
notb
push
inc
push
and
push
xor
mov
paddq
adc
hlt
or
push
scas
arpl
stos
or
mov
pop
cli
mov
das
nop
sbb
testl
out
jne
adc
fxch
or
adc
shrl
cmp
pop
mov
movsb
aam
xchg
cs
pop
fisttpl
or
mov
fidivl
iret
call
cld
inc
out
testb
pop
pop
mov
sbb
sub
and
rcl
or
repz
push
ss
mov
rcr
cltd
ror
icebp
repz
test
pop
rcl
mov
jnp
and
jne
stc
fldl
cs
andl
pop
jbe
push
xchg
rcrb
rol
sbb
mov
dec
add
or
popf
aam
imul
mov
mov
push
ret
fwait
fldcw
adc
test
nop
sbb
push
sbb
fisttpll
jns
and
adc
xchg
xlat
fmuls
pop
xor
pop
cmpsb
mov
loopne
fdivrs
xor
add
xchg
out
stc
jle
add
leave
icebp
leave
popf
idiv
aas
loope
jbe
jnp
or
int
and
mov
xlat
add
test
rcrl
jo
outsb
stc
pop
cmp
insl
adc
iret
scas
lods
sti
leave
leave
lods
push
mov
mov
jmp
sbb
mov
jns
shlb
test
xchg
dec
mov
cltd
adc
xor
icebp
fnstenv
cmpsl
mov
or
cmc
push
sub
jp
aaa
or
in
pop
cwtl
add
xchg
jle
xchg
xchg
xor
pmaddwd
pop
cwtl
lock
jbe
arpl
push
lea
repz
sbb
jne
adc
shll
dec
mov
scas
sub
hlt
stc
ss
mov
xchg
and
sub
or
das
sbbl
enter
inc
add
call
adc
sub
cmp
ja
xor
shll
lret
xor
aas
push
jp
and
xchg
mov
stc
mov
shr
dec
pop
ficoms
mov
and
enter
add
push
pop
jle
mov
push
jge
xchg
in
xor
mov
or
sbb
xchg
repnz
jg
push
jl
clc
mov
cmpsb
fisubrl
sbb
scas
dec
in
dec
push
clc
mov
or
mov
or
dec
shll
cltd
jg
mov
lret
aad
test
pop
flds
test
push
rclb
imulb
je
mov
and
jecxz
adc
pushf
sbb
add
pop
adc
repnz
ror
ss
mov
xchg
popa
mov
shlb
xor
xchg
out
jle
or
jg
in
xor
ljmp
popa
lret
jnp
movb
shrb
xorl
jge
xchg
inc
sub
xchg
out
adc
rorl
jns
lret
sub
rcrl
mov
jns
rcr
jl
sbb
flds
push
mov
or
or
jne
mov
xor
inc
mov
fstps
adc
mov
push
mov
or
repz
xchg
hlt
out
pop
mov
pop
addr16
jmp
pop
xorl
mov
or
sub
je
xor
stc
loope
arpl
xchg
mov
lea
adc
xor
das
sbbb
mull
xchg
and
mov
jg
pop
icebp
ja
push
rcr
fmul
ja
add
cmc
or
shl
iret
outsl
sbb
xchg
add
adc
cli
mov
mov
and
push
out
cltd
cmp
jge
inc
adc
push
xor
mov
mov
mov
inc
ja
clc
pop
inc
xchg
sbb
fcmovu
lcall
lret
les
ss
xchg
fadds
mov
leave
xor
lret
lret
or
flds
fmuls
jnp
add
add
in
iret
jecxz
mov
jecxz
popa
mov
test
adc
out
add
mov
pop
loope
mov
jl
fld
fldenv
fsubrl
jnp
lret
fildl
sbb
clc
mov
inc
or
add
fdivp
orb
mov
icebp
xor
jns
mov
xor
cmp
mov
mov
sar
push
loop
ret
xchg
fs
jmp
fisttpll
sbb
mov
icebp
push
or
or
add
add
mov
vpshlw
mov
insl
mov
cs
addr16
jl
lret
jo
bound
out
std
fiadds
cmp
add
xor
push
loop
notb
xchg
aas
test
fsubl
mov
lea
mov
pop
sbb
pop
test
sahf
cs
sarl
push
loopne
enter
or
mov
adc
popf
jecxz
rclb
ss
lahf
mov
aad
dec
fisttpll
cwtl
frstor
mov
aad
cmp
or
dec
popf
inc
and
cmp
xlat
jns
add
or
xchg
aad
rcl
je
sbb
cltd
sbb
shlb
add
cmc
icebp
repnz
xchg
xor
or
imul
mov
or
adc
test
xorl
rcll
stos
shrb
push
lcall
sbbl
ret
adc
lret
std
push
arpl
repnz
xchg
nop
adc
jnp
mov
hlt
std
loopne
sarl
adc
arpl
pop
jmp
lds
sbb
xchg
movsb
sbb
mov
sub
je
int3
ja
imul
adc
lret
mov
xor
les
xchg
in
jp
jne
xlat
mov
shrb
jmp
mov
xor
roll
fadd
xchg
add
add
xor
in
dec
test
scas
jns
jno
sub
cmp
xchg
loop
xor
je
sahf
out
imul
sbb
addr16
insb
movsl
std
sbb
xchg
push
mov
cltd
jge
dec
mov
js
sub
and
ja
jno
ret
lock
dec
mov
push
mov
pop
ds
cmpsl
mov
mov
inc
sub
ss
xchg
ds
jbe
jg
lea
sbb
mov
add
jno
jns
fld
lods
int
xchg
add
pop
je
xor
clc
and
and
movsb
mov
lods
dec
mov
xorb
imul
jo
into
arpl
jno
xor
mov
or
push
sub
push
addr16
adc
xchg
jb
in
jb
jecxz
shlb
xchg
shll
add
fsubrl
xor
clc
pop
mov
sbb
sarb
bound
sbb
inc
mov
sub
xchg
sub
call
les
mov
enter
clc
push
daa
je
fstl
sbb
lcall
pop
into
outsb
fwait
sbb
stc
popa
or
adc
shll
pop
int3
pop
test
outsb
pop
sbb
xchg
sbb
lds
lret
fstps
lret
inc
fildl
pop
xchg
lcall
cwtl
sbb
adc
gs
xor
pop
mov
or
dec
xchg
adc
fcmovbe
leave
xor
push
xchg
push
mov
test
shrl
cltd
dec
sub
stc
repnz
js
fwait
push
adc
adc
popa
stc
mov
adc
pop
repnz
dec
popa
aam
xor
sbb
mov
jle
mov
rolb
xchg
movsl
sbb
xchg
inc
mov
xor
adc
push
pmovmskb
adc
fstps
fst
mov
inc
xchg
mov
jmp
jb
adc
cli
xlat
scas
hlt
inc
ss
pusha
stc
dec
adcb
jb
aad
xchg
and
out
bound
fsubrs
lret
xchg
adc
mull
test
lds
xchg
lahf
xchg
testb
outsb
mov
mov
push
pop
mov
js
and
inc
fcoms
inc
inc
or
push
ret
fnstenv
or
push
push
fnstsw
jns
scas
pop
rorb
push
scas
ds
data16
ret
and
adc
dec
leave
or
xchg
hlt
fmull
and
jo
into
and
sub
popa
dec
or
add
test
inc
push
scas
into
pop
out
push
dec
pop
pop
cmp
jp
fadds
push
call
insl
es
jae
mov
push
mov
test
mov
outsb
xchg
fwait
mov
or
es
cmp
xchg
add
mov
jns
sub
or
jns
ds
daa
out
mov
xor
lahf
or
mov
daa
mov
lea
testb
mov
sbbb
dec
js
push
mov
dec
jnp
cmp
adc
xlat
push
inc
sbb
jbe
jne
jmp
bound
js
repz
scas
cwtl
insl
dec
ret
lret
cltd
lea
mov
pop
data16
imul
sti
cwtl
mov
sbb
daa
mov
mull
jmp
cmp
pusha
mov
int
cmp
ror
xor
push
shll
call
scas
xchg
xchg
clc
mov
sub
mov
nop
arpl
rorb
push
jnp
clc
orl
enter
cli
xlat
mov
push
cmp
inc
xor
cmc
subl
xchg
fnstenv
out
inc
cmp
add
rclb
pop
ds
jbe
insl
cmp
loope
jae
in
sarl
fnstcw
fsts
stc
dec
mov
mov
cmc
mov
and
test
icebp
rorl
loopne
stc
xchg
repz
cltd
push
mov
sbb
frstor
cli
rclb
xor
xchg
cmp
aad
div
cmp
xchg
pop
loope
push
xchg
shl
sub
jg
xchg
movsl
lock
and
push
fidivl
and
sub
xchg
xchg
lock
sbb
enter
shlb
lods
mov
mov
gs
pop
sub
push
enter
nop
mov
mov
inc
adc
lahf
pop
daa
pop
push
lahf
xchg
ja
mov
ficoms
not
cli
xor
jne
inc
xor
dec
mov
add
pop
cmc
out
add
das
into
lds
in
dec
cmc
or
loopne
aas
jns
lock
dec
daa
push
ss
lcall
stc
ss
pop
mov
jge
sub
test
fisubrl
leave
aaa
sbb
subb
jno
fsubs
fisttps
pushf
test
xor
mov
clc
sbbb
inc
fsts
int
dec
fildll
dec
push
xchg
flds
or
or
inc
push
jle
aad
mov
les
dec
outsl
fs
insb
bound
lahf
mov
imull
xchg
jno
add
dec
push
int3
push
mov
mov
xchg
dec
lods
pop
mov
popa
or
mov
sub
jns
icebp
push
or
mov
xchg
push
xor
dec
add
push
std
es
or
shll
adc
xchg
xor
xchg
xlat
push
mov
rcll
jno
test
cld
push
std
inc
xchg
cmp
jg
pushf
dec
leave
imul
fnclex
lret
inc
test
jle
dec
bound
lahf
repnz
fadds
jo
jle
out
int
int3
jnp
inc
imul
jp
cmp
daa
xor
clc
push
mov
and
or
cmc
sbb
push
in
pop
add
inc
adc
sub
mov
popf
test
pop
cltd
lret
sbb
pop
fisttps
je
loopne
ljmp
jns
mov
jno
sbb
push
fstl
mov
or
jno
pop
mov
mov
adc
rcrb
andl
fs
fimuls
and
pop
or
insl
jg
adc
sar
and
push
push
mov
cmp
mov
pop
pop
adc
mov
rclb
pusha
pop
jae
jae
mov
jo
imul
sbb
cs
repz
dec
add
or
push
ss
or
push
dec
jns
inc
lock
xorb
mov
push
je
fsubrl
in
shl
or
cli
pop
movsb
loop
gs
adc
jns
roll
pop
stc
mov
jp
lock
mov
push
imul
fdivp
shrl
cmp
cmp
adc
jle
sbb
xchg
and
lock
push
sbb
xchg
lods
mov
stc
sar
pop
in
aaa
scas
rclb
xchg
imull
cmc
inc
xchg
test
jecxz
sbb
std
aaa
lret
stc
frstor
mov
dec
mov
push
notl
movsb
push
xor
rep
inc
push
cmp
stos
mov
rcl
xchg
mov
xchg
js
imul
push
in
and
dec
push
rcrb
das
fwait
push
ja
xchg
mov
push
sub
mov
lret
fsubs
rorl
insl
std
cmp
test
sbb
xlat
rcl
xchg
enter
sbbl
push
inc
std
stc
inc
clc
cmp
out
dec
mov
bound
mov
outsb
cwtl
sub
les
rcll
adc
pop
sub
jmp
lea
dec
fcomps
clc
iret
sbb
fdiv
push
mov
xor
ds
xor
or
push
lds
mov
mov
sub
inc
fldenv
sbb
aaa
adc
stc
jg
lock
push
sub
daa
push
enter
fldenv
cmp
aaa
mov
jns
cwtl
and
xchg
push
out
xchg
test
into
lcall
lds
fwait
xor
imul
aas
loopne
add
xchg
sbb
shlb
test
sub
stc
mov
outsl
and
cmc
dec
mov
addl
andnps
adc
int3
push
mov
aad
push
ja
aad
cltd
in
cmpsl
add
nop
jmp
jbe
test
inc
fs
divl
lods
clc
xor
mov
or
fs
shlb
push
outsb
es
lock
sahf
hlt
sbb
lock
pop
call
cmpsl
loopne
test
sbb
cwtl
addr16
out
mov
inc
shrl
push
lds
sbb
pop
ss
xchg
cmp
adc
adc
cmp
adc
jl
add
push
aaa
mov
jns
ficompl
jne
push
cltd
push
lahf
mov
in
mov
sub
push
add
fcompl
mov
mov
nop
or
cmc
cmpsb
cltd
cmp
insb
mov
pop
mov
pop
test
js
fdivrs
sti
push
cltd
xchg
cmp
fisttpll
aad
mov
andl
ud1
fcoms
mov
test
sbb
lods
fildl
push
iret
cmp
rcrb
mov
cld
cmp
scas
mov
lock
bswap
mov
mov
in
ss
sub
xor
test
loopne
mov
ss
dec
xlat
je
push
dec
sub
pop
mov
sub
aaa
in
adc
inc
mov
jne
rol
jg
push
iret
jns
xchg
sbb
fcomps
jne
in
pop
or
loop
and
repnz
fldenv
test
ja
negb
into
and
mov
cltd
cltd
fsub
sub
lret
mov
jbe
int3
xchg
imul
dec
rorb
push
cs
fiadds
adc
ud1
outsl
and
add
cmp
fisubrs
xchg
jbe
pop
push
sbb
loop
fisttpll
sarl
adc
lods
dec
mov
jbe
lock
xchg
addr16
pop
shrb
cltd
in
sub
dec
dec
adc
and
pop
inc
cmp
cmp
push
mov
mov
test
sub
popf
sbb
in
stc
mov
or
dec
mov
mov
xor
aam
push
adc
fdivp
cwtl
lea
cld
cmc
lock
ljmp
imull
nop
cmp
cmp
cmp
shrb
ror
push
mov
loopne
jbe
stc
and
mov
xchg
pop
mov
fstps
push
pop
sub
push
sub
mov
testb
sbb
cmpsl
adc
ds
mov
ss
arpl
das
add
inc
idivl
fdivs
or
call
cmp
and
xor
mov
add
dec
sub
or
into
div
mov
dec
xor
inc
pop
pop
lret
mov
dec
xchg
daa
cmp
mov
push
and
mov
jg
or
sarb
inc
das
cltd
lret
movsl
dec
inc
pop
sub
inc
cmp
or
loopne
aas
add
mov
and
imul
je
rcrb
ja
xor
and
cmp
rorl
push
imul
add
pop
ret
in
push
jae
jmp
mov
inc
and
in
sub
pop
push
cmp
out
scas
sub
rcr
jg
repnz
pop
dec
or
ret
add
cltd
mov
and
arpl
inc
adc
mov
jb
mov
rclb
jmp
int3
dec
mov
rclb
inc
sbb
mov
lds
mov
adc
fdivs
cmp
test
push
mov
test
sbb
shlb
xor
mov
and
call
ret
fisttpl
cmp
xlat
or
popa
sbb
movl
jnp
mov
or
push
and
lods
fldl
push
outsl
pop
and
pop
test
dec
push
lds
aad
xchg
mov
stos
sub
ret
dec
add
cmc
jge
xchg
idiv
iret
test
jge
fs
push
push
jbe
push
dec
data16
loope
mov
or
add
mov
xor
inc
lcall
nop
sbb
xchg
sbb
and
xchg
adc
xlat
cmc
push
or
inc
pop
ds
cmc
cmp
out
rcrl
jb
xchg
mov
dec
js
xchg
inc
sbb
pop
cltd
jbe
rcl
adc
mov
adc
lahf
pop
test
pop
mov
xchg
xchg
push
sahf
push
push
mov
xchg
ret
sahf
fsubr
xchg
pop
mov
sub
jl
push
push
jge
stos
sbb
sbb
and
sub
jae
cmp
lods
out
inc
xor
add
cmc
dec
push
call
dec
mov
push
repz
cltd
pop
incb
lret
sbb
push
insl
mov
mov
mov
pusha
pop
fs
in
loope
jle
sbb
jns
iret
cmc
push
jae
sbb
xor
xchg
dec
popf
jno
loopne
jnp
adc
mov
inc
mov
insl
cltd
stos
pop
test
loope
out
pusha
cmp
es
add
mov
fdivp
popa
jae
mov
push
push
mov
xchg
daa
mov
dec
xor
test
xor
cmp
xchg
lds
push
fidivrl
jl
inc
hlt
jmp
rcrl
mov
pusha
insb
fisubs
cmp
jo
push
js
sbb
out
leave
dec
mov
pop
insl
xor
sbb
sahf
or
inc
xchg
int
shll
fdivl
fdivr
repz
pop
cltd
pop
fbld
jo
push
mov
daa
inc
ret
out
mov
jp
popa
dec
pop
repnz
int3
push
inc
jnp
mov
mov
add
add
mov
lret
jno
cltd
out
xchg
push
sub
xchg
sub
cs
popf
shr
push
pop
test
imul
shll
xchg
fwait
test
sbbl
inc
shl
cmp
mov
xor
test
dec
push
std
iret
xor
fidivrs
push
mov
push
js
or
mov
sbb
clc
imul
mov
test
mov
pop
mov
rclb
push
push
or
jmp
test
cltd
ret
push
notl
sbb
xor
into
mov
sarb
pop
hlt
sub
aad
xchg
push
in
pusha
fldcw
int3
jo
cmc
stc
leave
mul
jno
cltd
in
cltd
jnp
mov
addr16
out
mov
les
jnp
add
xlat
push
insb
add
pop
push
loopne
mov
shrb
jmp
ds
js
inc
stos
xlat
mov
jo
repz
je
loope
xchg
fidivrl
add
movsb
call
int3
int
xchg
xor
lret
stos
nop
cmc
jbe
xlat
fsubs
lds
fsubrs
nop
or
push
call
adc
jmp
fcomp
inc
repz
mov
out
inc
es
mov
sub
outsl
outsl
out
stc
and
and
mov
mov
adc
mov
push
sarb
sbb
and
leave
cltd
lret
xor
mov
in
push
mov
adc
cwtl
pusha
xchg
pushl
addl
sti
faddp
jecxz
mov
pop
aaa
push
jl
ss
cmp
shl
popl
pusha
mov
mov
sbb
aam
pusha
mov
data16
neg
lock
icebp
jnp
cmc
cmc
jns
dec
push
sub
aam
loopne
add
or
inc
pop
dec
stc
inc
push
sarb
stos
sbb
fmul
fldcw
jne
nop
cmp
nop
scas
mov
sub
addr16
or
lret
lcall
jne
ljmp
pop
xchg
or
cmpsl
push
push
in
lret
and
pop
mov
mov
push
and
and
and
stos
and
je
daa
inc
imul
fnstsw
adc
inc
imul
iret
cwtl
aas
out
and
mov
imulb
adc
mov
in
adc
xor
cmp
mov
xor
jns
test
pop
js
mov
mov
jno
jns
cmpsb
inc
imul
mov
ds
adc
jg
pop
and
xor
fsts
lea
jge
sbb
xchg
lock
clc
sbb
sub
cmpsl
jle
xor
dec
scas
xor
std
mov
or
ss
sub
mov
shll
mov
lcall
imul
jbe
nop
cmpsb
sub
jle
dec
add
call
fwait
popa
jmp
push
sbb
add
notl
loope
xlat
and
adc
inc
cmc
inc
sbb
loopne
sub
test
xor
cld
sbbb
and
lea
sarl
inc
lock
xchg
pop
in
out
or
or
aad
fnstsw
cwtl
dec
ja
cmp
aam
cmp
test
ja
or
sbb
push
pop
ds
push
mov
inc
adc
inc
mov
pop
test
sbb
sbb
mull
out
fcmovb
jg
test
mov
jle
dec
xor
not
loope
push
cmp
push
xchg
fisubrl
xchg
lret
or
movsl
testl
shrb
stos
pop
test
xorb
mov
out
imul
xlat
call
xchg
jg
adc
add
cs
cld
leave
mov
adc
mov
sub
mov
fldcw
mov
outsl
fsubp
xor
xchg
ljmp
mov
sub
xchg
push
adc
loop
das
jmp
mov
fiaddl
pop
mov
jae
jb
mov
sub
into
xor
pop
lds
adc
lock
push
insb
cmpsl
sub
call
sbb
lahf
jle
mov
mov
adc
add
clc
lret
fistpl
sbb
cltd
jbe
inc
lods
adcl
or
sub
or
cmpsl
sbb
es
testb
jecxz
xchg
test
or
and
aaa
push
imulb
inc
inc
clc
std
ss
jle
cld
stos
cmp
dec
data16
repz
ds
sbb
orl
stc
xor
lock
add
jg
stos
fadds
sti
iret
xor
test
mov
dec
mov
inc
insl
inc
xchg
mov
xor
mov
sarl
jl
inc
sub
adcl
popa
cmp
stc
ret
jmp
stc
imulb
lahf
sub
negb
pop
push
xlat
in
xchg
pop
sub
je
jg
dec
sarl
push
mov
setne
mov
shrb
notl
xchg
mov
or
lea
outsb
out
xor
pop
inc
pop
test
fsubrs
in
xorb
test
adc
mull
push
sti
rcl
or
arpl
and
push
pushf
int
push
cld
shll
in
inc
mov
in
rcl
mov
mov
xor
dec
lds
pop
sub
clc
cmp
data16
xchg
push
mov
dec
js
xlat
leave
or
cmp
cld
and
in
hlt
scas
dec
add
sbb
rcll
cli
enter
xor
or
jns
sahf
enter
cmp
fcmove
inc
cmp
out
pop
xchg
repnz
repz
mov
lahf
sbb
insw
roll
clc
push
mov
mov
ds
dec
stos
or
subb
push
mov
sbb
shl
sub
inc
sarb
lock
and
push
jmp
mov
mov
frstor
rclb
cmp
aas
fld
mov
gs
bound
adc
cltd
xchg
pusha
ja
jno
push
cmpsb
fadds
jb
sbbb
pop
test
leave
mul
adcb
add
in
loopne
add
xchg
dec
aas
xor
pusha
fs
and
cmc
popf
push
xchg
xchg
jns
rorb
repnz
xchg
add
jle
rol
js
pop
pop
inc
mull
push
jae
lret
jbe
cmp
or
hlt
addr16
jecxz
stos
adc
gs
mov
push
adc
lret
xor
xchg
adc
xchg
cltd
enter
loopne
fcomps
ret
cmp
outsl
scas
and
mov
dec
xchg
jl
cld
lcall
and
cltd
push
ds
clc
jmp
xor
dec
rcr
mov
cmp
repnz
mov
rolb
xchg
insl
call
pop
cmp
sbb
or
or
jle
adc
out
inc
jae
dec
adc
testl
shll
lods
cwtl
xor
push
xor
sub
dec
push
jb
and
sbb
jp
test
jns
jmp
lret
jb
stos
mov
jns
xor
mov
mov
inc
jno
jno
or
mov
rol
mov
mov
xor
push
push
aam
iret
cli
push
add
int
cwtd
pop
insl
shrl
pop
into
call
adcb
adc
movsb
mov
pushf
stc
not
rorb
adc
fcomps
shr
and
inc
testl
jle
call
cli
jno
ret
in
outsl
mov
outsb
dec
lret
mov
sub
adc
push
addl
pop
insl
imul
lret
sub
insb
push
loope
inc
and
mov
jl
lds
insb
push
mov
dec
outsb
mov
cmpsl
hlt
push
push
mov
xchg
rcr
xchg
jp
xor
fst
cld
push
push
call
in
sarb
push
loopne
fs
clc
test
jo
shrl
push
xchg
cld
lret
ret
outsl
mov
push
adc
sarb
inc
jge
pop
cmp
xor
lret
scas
cmp
imul
stos
mov
pushf
push
sti
int3
mulb
aam
int
pop
mov
cwtl
mov
xchg
loope
jp
aad
in
jns
loop
imul
dec
xchg
jb
add
cmp
mov
mov
cmp
jge
imul
mov
daa
push
int3
xchg
aaa
sbb
shll
sbb
mov
add
test
movsb
icebp
shrl
sub
jb
mov
lods
fldenv
inc
add
jl
lods
daa
jns
pop
leave
lea
push
mov
mov
sub
mov
std
call
inc
aam
mov
push
stc
in
cltd
movb
push
fstl
int
clc
cwtl
xchg
mov
pushf
into
fcomps
dec
lock
xchg
fidivl
popf
adc
jl
clc
lret
insb
sti
cmpl
mov
popa
in
mov
out
mov
scas
mov
out
inc
fld
loope
mov
sub
out
call
cltd
scas
shlb
addl
dec
xor
ret
cmp
rcr
add
mov
call
sbb
filds
cmp
andb
adc
xlat
push
mov
frstor
adc
rorl
lock
divl
cmp
test
push
lcall
mov
sahf
std
push
fisubs
xchg
push
pop
xchg
mov
lock
inc
mov
lock
cltd
mov
addr16
xchg
push
push
push
fcmovnb
fdivr
outsl
cmpsl
dec
mov
cmp
cmpsl
mov
mov
incb
adcb
dec
mov
lods
adc
fbstp
xchg
js
or
mov
imul
imul
jo
in
sti
cmp
pop
pop
and
out
loope
mov
mov
fldcw
push
int3
pop
or
jbe
inc
sahf
jns
popa
mov
test
stc
int
lret
lock
das
cmpsl
cltd
aad
adc
and
lret
mov
movsl
cmp
mov
es
push
cltd
adc
mov
hlt
pop
cwtl
and
iret
cltd
ret
repnz
jnp
stos
sbb
loope
push
xchg
or
xlat
mov
out
pop
push
jle
aas
inc
ds
xor
dec
pop
xchg
test
cmp
xchg
dec
daa
incb
push
jnp
rcrl
iret
fwait
or
or
mov
inc
and
imul
or
dec
jle
mov
call
mov
pop
adc
fwait
mov
xchg
mov
add
iret
sub
mov
rcrb
adc
inc
mov
sub
mov
xchg
xchg
sbb
leave
sub
js
cmp
or
movsl
push
aas
scas
mov
in
arpl
dec
push
pop
ret
and
add
and
fstps
ret
jmp
jns
scas
hlt
fs
pop
adcl
iret
insl
jns
insb
or
mov
inc
fdivs
arpl
shrl
movsb
pause
dec
shl
inc
lock
ja
repnz
sub
icebp
pop
fiaddl
mov
aad
nop
xchg
jb
jecxz
in
lods
repz
or
popf
pushf
movsl
xor
inc
shll
ss
sbb
xchg
cltd
mov
mov
or
aad
xor
push
rorb
in
lahf
jmp
in
mov
shl
test
xchg
jecxz
orb
mov
arpl
mov
push
outsl
mov
xchg
cltd
adc
xchg
jns
cmc
mov
movsl
adc
div
lret
mov
jle
in
pop
rclb
dec
jecxz
xchg
xor
sahf
sbb
fsubs
lods
dec
adc
loopne
mov
fwait
mov
stc
xor
dec
repz
fsubrs
inc
test
dec
sbb
mov
cltd
xor
cmc
gs
rol
jecxz
cwtl
adc
sbb
loope
pop
repz
mov
or
xchg
mov
or
jne
adc
push
inc
xchg
cmp
test
repz
sub
xchg
arpl
or
shlb
and
arpl
jecxz
scas
aam
jl
and
js
sarl
iret
enter
out
jb
hlt
lock
mov
or
les
insl
pushf
adc
ret
sbb
cmpb
fnstenv
xchg
ljmp
sub
adc
dec
mov
ljmp
dec
inc
sbb
xor
ljmp
jnp
adc
cmp
mov
pop
nop
lds
adc
xchg
test
cmp
cwtl
scas
rcrb
loope
fcompl
ljmp
xchg
loop
fcom
adc
or
mov
std
ljmp
into
das
fidivrl
or
pop
std
lcall
test
fsts
mov
lock
lcall
aaa
scas
cmpsb
mov
mov
adc
inc
mov
pop
xchg
sub
fmulp
outsl
icebp
clc
testl
jb
push
xor
loop
mov
movsb
rcl
roll
dec
negl
xlat
test
or
push
insb
push
aas
repz
fcomp
mov
iret
cltd
xor
xor
mov
pop
int3
adc
mov
test
xchg
mov
pop
jg
fwait
cld
mov
into
imul
int
jle
mov
rorl
mov
jmp
cwtl
enter
enter
and
jecxz
inc
push
inc
sub
rcrb
xchg
rcr
cltd
cmp
adc
jecxz
sbb
inc
jg
push
sbb
adc
pop
adc
enter
repnz
inc
add
push
and
jmp
enter
jle
int3
rcl
test
sub
xor
insb
add
popa
je
repnz
mov
mov
or
cmpl
sbb
inc
sub
mov
clc
mov
popa
sbb
xchg
outsb
push
push
sti
jns
insl
push
push
fisttpll
negl
mov
inc
xlat
cmp
xchg
jl
adc
jle
xchg
mov
lea
push
cmp
icebp
or
pushf
scas
sub
aas
mov
mov
pop
pop
xchg
add
push
mov
adc
fsubrs
mov
lds
sbb
rcrb
imul
mov
add
clc
sbb
enterw
mov
pop
aaa
xchg
mov
ret
mov
xor
jle
gs
std
xchg
stc
xlat
cwtl
pop
imul
lret
jns
fs
xchg
imul
lods
xchg
mov
jb
cltd
push
lcall
pushl
inc
mov
push
ret
lock
sahf
xor
mov
imul
loope
mov
sub
ror
xor
and
hlt
hlt
or
cmc
xchg
repz
mov
xchg
cmp
push
cmp
loop
push
xchg
bnd
insb
ficompl
pop
ret
js
cmp
outsb
je
stc
test
scas
daa
push
ja
int
xchg
cmpsb
andl
lds
fs
out
push
or
add
dec
mov
scas
data16
ret
pop
ret
inc
jne
xchg
cmp
push
xchg
sbb
xor
cmp
outsb
leave
and
xchg
jne
jl
lahf
xchg
lcall
xlat
arpl
lods
push
nop
rclb
mov
flds
xchg
stos
inc
clc
add
mov
iret
and
jns
lcall
sbbl
jns
sub
insl
imul
por
ds
lock
push
cmp
push
mov
loope
adc
sbb
test
nop
inc
lock
sbb
idiv
aam
fadds
fnstcw
pop
xchg
dec
mov
mov
outsl
sarb
mov
data16
aaa
lock
dec
mov
dec
dec
repnz
loope
jo
fidivl
ret
dec
ljmp
xchg
fldl
scas
push
and
repnz
adc
les
xchg
popf
jb
lret
mov
mov
mov
nop
xchg
mov
aaa
dec
push
sti
fldcw
push
fmuls
fnstcw
xchg
mov
sarb
ret
fsubr
sub
jne
in
das
adc
lock
xchg
inc
fildl
adc
inc
mov
sar
bound
jne
into
enter
outsl
imul
out
fldcw
pushf
pop
xchg
cmp
sub
and
sbb
pop
out
pop
cwtl
leave
scas
mov
mov
inc
hlt
sbb
jmp
jns
mov
aas
test
jp
fstpt
fptan
das
rolb
ret
pop
jle
mov
icebp
mov
adc
cmpsl
add
xchg
push
popa
popf
repz
sbb
fnstenv
mov
test
cli
push
lock
pusha
fcompl
sbb
clc
cmc
iret
xchg
or
testb
or
cmpsl
xor
cli
lahf
mov
cld
insl
bound
xchg
fsubrs
out
fisttps
lahf
and
out
and
sbb
push
mov
fnstenv
adc
cltd
cltd
lds
lods
mov
ss
xchg
sbb
push
sbb
xor
jmp
xchg
shll
nop
test
xchg
or
push
ds
test
in
jecxz
mov
adc
out
out
std
and
stos
push
cs
mov
cmc
sbb
sub
xchg
test
mov
repnz
push
add
mov
adc
shl
add
adc
mov
sbb
adc
iret
inc
aad
jmp
mov
cmpxchg
fisttpll
cmpl
lcall
iret
cltd
xor
repz
lret
addr16
jae
add
in
repnz
xlat
cmp
pushf
adc
clc
fcmovne
mov
stc
push
xchg
inc
faddl
sahf
clc
mov
gs
hlt
mov
std
mov
insb
fnsave
inc
test
jb
sbb
in
iret
add
stc
jle
cmp
cmp
cmpsl
fmuls
test
xchg
xchg
not
mov
push
ds
xchg
mov
mov
inc
mov
dec
fwait
sub
in
lea
mov
int
rorl
adc
aam
js
adc
mov
mov
mov
aaa
pop
aam
cld
sub
mov
fnstsw
inc
jbe
inc
sub
jge
mov
adc
js
pusha
push
mov
mov
sub
stos
jmp
xchg
jle
fisttps
imulb
jbe
test
enter
enter
or
ja
mov
adc
fldenv
lods
xor
mov
mov
popa
dec
pop
xchg
lea
push
cmp
js
xchg
add
adc
rcrb
mov
dec
popf
inc
jmp
push
fisttpll
in
jg
push
bound
mov
mov
push
cwtl
test
fildll
aaa
lds
or
dec
imul
ficompl
imul
lock
cltd
dec
cld
mov
pop
out
xchg
aad
inc
in
or
mov
ret
imull
lahf
mov
sbb
mov
pop
push
pushf
xor
push
push
fadd
aad
idiv
stc
push
enter
std
popa
jmp
lcall
or
jmp
mov
adc
ret
data16
sbb
or
or
push
addr16
dec
pop
int3
daa
pop
arpl
xor
sub
int
cltd
hlt
sbb
sarb
mov
xor
or
lock
jns
cli
or
loopne
daa
fists
dec
fidivl
cmp
xor
xchg
rolb
iret
mov
lret
push
xorb
mov
pop
sbb
std
sub
in
mov
push
xchg
push
pop
jmp
sub
jge
cmp
test
adc
and
or
push
inc
insb
pop
aas
out
pop
ja
rcrb
rcrb
cmp
xchg
and
cmc
lods
xor
lret
xchg
inc
or
divl
adc
pop
mov
js
pop
fwait
dec
repnz
shll
cmc
mov
adc
lret
call
fsts
je
into
adc
into
insb
mov
pop
daa
or
aad
add
movsb
loopne
mov
imul
lock
imul
iret
int
scas
mov
mov
xor
sarb
fidivrl
adc
fimuls
rcl
mov
divb
pop
insb
pop
dec
mov
dec
hlt
lods
jno
xor
add
test
rolb
rclb
or
icebp
mov
fcomps
mov
mov
xchg
ret
insb
xchg
ja
jns
xlat
xor
cvtdq2ps
jge
xor
fwait
mov
in
pop
faddl
arpl
sbb
jecxz
xor
inc
inc
push
or
pop
lcall
xchg
cmp
jg
insb
nop
cmpsb
rorb
insb
lret
pop
jnp
inc
je
cmpsl
icebp
jno
mov
inc
cmc
and
add
cld
cmp
jb
cmp
xchg
mov
mov
jnp
adc
pop
lret
ss
add
adc
xchg
pop
push
pop
jns
cwtl
and
cmp
push
adcl
rcll
mov
insl
jp
mov
adc
and
clc
add
push
out
shr
jae
divb
xchg
adcb
mov
or
or
dec
jnp
mov
imul
push
sahf
cltd
mov
into
jae
xlat
in
sub
test
sarl
in
aaa
cwtl
add
push
adc
cmp
sub
push
leave
jmp
cmpsb
sub
push
mov
outsl
ss
jge
rcll
fstpt
xor
push
cld
pop
je
inc
push
xchg
mov
sarl
pop
adc
mov
add
shlb
or
jnp
je
mov
mov
mov
loope
or
popa
fdivl
and
push
in
or
addl
rorl
pop
pop
int
outsl
inc
dec
adc
push
fldcw
movsl
nop
mov
mov
clc
js
dec
jg
fisttpll
std
xlat
inc
pusha
push
push
inc
icebp
stos
push
je
sub
repnz
pusha
sub
stc
xchg
adc
and
pop
ret
mov
fwait
add
add
shlb
dec
aad
call
push
push
mov
xchg
out
scas
push
pop
movsl
cmpsl
mov
sub
rcrl
sbb
jge
shll
mov
xchg
pop
jbe
incb
scas
inc
mov
jge
add
cmc
adc
clc
rcr
nop
hlt
mov
fwait
out
pop
lock
jns
adc
xchg
add
jge
aaa
xchg
sub
lods
int
xchg
xchg
sub
push
testb
dec
fildll
scas
popf
cltd
or
fnstcw
push
fsts
imul
sahf
jecxz
xchg
dec
int
call
push
stos
inc
sub
pop
out
or
inc
ficompl
int
dec
sbb
lock
sub
movsb
push
cmc
orl
jb
rcrb
imul
sar
loopne
mov
sbb
mov
bnd
sbb
mov
sbb
nop
fcompl
sub
adc
mov
mov
shlb
sbb
sub
push
aas
sbb
test
sbb
pop
icebp
xlat
push
shll
sbb
in
add
mov
or
jge
lock
outsb
pop
adc
push
dec
sarl
out
and
add
cmc
dec
adc
gs
fnstcw
test
mov
cmpl
inc
mov
mov
add
inc
subl
aas
loop
mov
imul
test
stc
gs
add
fnstenv
or
inc
jae
aad
mov
push
sub
repz
add
enter
inc
test
rcrb
jle
cmpsb
mov
xchg
sbb
and
les
inc
sbb
mov
xchg
frstor
jo
pop
cmpl
das
scas
cmc
leave
mov
jmp
jnp
shrb
push
repnz
mov
or
leave
xor
or
xlat
or
std
pop
push
dec
cmp
mov
jno
sbb
cmp
jno
mov
adc
push
mov
je
js
cmp
cmp
cmp
js
arpl
mov
adc
psrld
rolb
pop
adc
loope
mov
mov
icebp
lcall
and
adc
add
arpl
xlat
hlt
jo
xchg
and
mov
mov
aad
retw
sbb
std
xchg
out
aad
pop
xchg
adc
test
adc
insl
or
pushf
clc
stos
aam
xchg
std
xchg
cltd
xorl
pop
sub
sbb
addr16
test
aaa
orb
mov
xchg
inc
xchg
jl,pn
adc
ja
ret
fdivs
lret
adc
sub
and
jmp
test
jge
out
cltd
cltd
idivl
pop
sbb
mov
pop
div
sbb
rcr
sahf
mov
push
sbb
or
jae
rcll
fst
scas
xor
jns
ja
fsts
or
lock
es
scas
xchg
daa
shll
cld
jnp
hlt
sbb
or
sarl
and
push
cmp
xchg
neg
in
hlt
aad
cmp
jmp
and
into
lret
mov
dec
adc
mov
lret
lahf
xor
mov
jle
inc
out
jns
ljmp
push
es
enter
ljmp
pushf
fiaddl
movsl
popa
les
lahf
stc
insl
aas
test
inc
mov
std
in
cmp
sbb
repz
sahf
in
insb
mov
mov
sbb
or
sub
pextrw
adc
dec
xchg
mov
mov
lea
mov
sub
dec
mov
xor
pushf
sbb
adcb
rol
cmc
adc
fwait
repz
cwtl
xchg
mov
out
roll
adc
push
test
jle
js
insl
in
xor
pop
jbe
jno
imull
sbb
sub
or
psubsb
orb
fbld
fcomps
and
mov
call
pop
cmc
jne
clts
lods
cmp
rorl
int
bound
and
jns
mov
xor
push
push
sbb
mov
adc
sub
dec
daa
fldcw
orb
cld
cmpsl
sbb
push
xchg
sub
and
or
pop
cltd
inc
aaa
or
in
xchg
xor
push
add
addb
push
xchg
testl
push
rcrl
add
or
stos
negb
rcl
lods
scas
lock
add
xor
sub
sub
xchg
fstps
sahf
jb
push
cmc
push
mov
cmpsl
xchg
test
xchg
subb
pop
inc
cmp
jns
inc
out
lds
push
fcomps
outsl
xlat
xchg
clc
add
mov
inc
cwtl
aam
fcomps
pop
int
cltd
lea
xchg
shll
xchg
mov
cmpsb
mov
xchg
sbb
inc
cld
shrb
pushf
xor
dec
sub
rorl
loope
icebp
std
pusha
adc
push
xchg
push
and
mov
jnp
ss
mov
push
out
sbb
fwait
xchg
xor
loopne
xor
shrb
pop
shlb
fldcw
bound
aam
mov
ror
push
shrl
push
ret
mov
pop
mov
mov
and
lret
or
outsl
push
xor
dec
int
jp
pop
ds
dec
rcr
mov
mov
cmc
int
pop
movsl
loop
mov
jp
inc
test
ds
add
cmpsb
xchg
fyl2xp1
xchg
or
fdivrp
leave
mov
fsubl
jo
push
daa
push
adc
mov
and
lock
es
insl
test
jmp
leave
pushf
or
add
mov
adc
and
add
cmp
cld
pop
shlb
xor
mov
xchg
xchg
jae
cmp
enter
sar
adc
or
cltd
adc
or
push
mov
lret
cwtl
in
insl
add
or
lret
aam
sub
cmp
or
outsb
mov
lret
pop
xchg
popf
sbb
pop
xchg
aaa
lds
cld
mov
sub
and
ret
cltd
or
aam
adc
stc
mov
les
cmc
jne
std
insl
fmul
call
clc
or
add
ds
cmp
or
jb
dec
testb
pop
xchg
push
mov
out
sub
mov
mov
xchg
sub
xor
pop
pop
cmpsb
loope
inc
into
sarl
dec
pop
push
subl
mov
cwtl
fsts
dec
add
icebp
frndint
insb
subb
adc
cltd
addr16
xchg
ja
lods
daa
jmp
clc
push
push
sub
aad
cmc
mov
pop
or
mov
cmp
cwtl
dec
jns
sbb
mov
adc
aaa
out
mov
mov
aad
sbb
rolb
aad
cmc
insl
sub
cs
aaa
sahf
sahf
std
push
mov
out
test
or
jmp
or
push
or
lods
pop
cwtl
sbbl
std
pop
outsl
sub
xlat
mov
mov
or
stc
loope
enter
dec
fstp
fwait
cltd
fwait
outsl
pop
jl
cmp
xor
add
push
sub
mov
fs
scas
mov
xor
mov
mov
push
inc
imul
stc
outsb
xor
xor
fistl
mov
inc
sarl
pushf
lcall
mov
xchg
ds
ja
and
imul
jp
sub
nop
add
lret
adc
out
psubw
jo
inc
jns
jno
popf
jne
sub
int
or
jb
jmp
xrelease
mov
pop
rorb
enter
mov
icebp
hlt
arpl
mov
mov
fnsave
xchg
or
scas
xchg
cltd
mov
leave
jns
xchg
xchg
or
negb
xchg
or
loopne
xchg
test
mov
add
mov
pminub
mov
sbb
xchg
xor
addr16
push
jbe
js
add
adc
xchg
nop
andl
roll
adc
xor
pop
adc
scas
pop
mov
lret
sub
ret
aad
xchg
roll
arpl
jmp
and
jo
dec
test
jb
aad
arpl
push
cmc
mov
arpl
sub
scas
sub
stc
mov
jle
jno
icebp
xchg
xchg
sub
iret
pop
movsb
cltd
cmp
add
ss
sbb
dec
mul
lahf
mov
add
xchg
pop
mov
je
mov
xlat
dec
cli
mov
outsb
pop
jb
data16
idivb
ss
sarb
das
pop
aam
jg
inc
jbe
mov
scas
xchg
push
insl
cmp
cs
adc
loopne
clc
cmc
jno
cltd
mov
xor
adc
jae
push
loope
repz
lock
nop
leave
sub
mov
lcall
stos
pop
mov
jge
imulb
popf
std
or
push
mov
dec
xlat
or
lret
or
fmull
xor
add
or
inc
pop
mov
sarl
pop
xchg
aaa
testb
cwtl
xchg
push
adc
push
or
repz
mov
in
hlt
pusha
clc
xchg
repz
mov
lea
in
out
jno
imul
or
jp
les
push
xor
cmp
or
xchg
outsb
es
dec
or
outsb
ja
inc
jge
repnz
repnz
push
xchg
mov
push
mov
jns
imul
mov
add
repnz
rorb
jo
scas
int3
sbb
push
pop
xor
in
shrb
out
adc
leave
lds
aaa
cmp
jb
sbb
mov
imul
pop
and
push
sbb
lcall
xor
mov
scas
aam
add
dec
clc
pop
push
adc
gs
sub
cmp
sar
test
addr16
push
cmp
int
cmp
data16
sub
addr16
test
stos
or
xlat
repnz
jbe
lock
clc
test
adc
push
ss
sub
add
sahf
mov
add
idivl
jne
ss
pop
add
sahf
inc
rcll
testl
lret
scas
call
fnstenv
adc
hlt
lock
divb
add
mov
xchg
popa
xchg
enter
pop
xor
test
popf
lds
and
aam
arpl
es
shrl
repnz
in
add
int3
xor
iret
lahf
push
or
adc
fsub
iret
jle
das
sub
iret
xchg
and
cli
and
mov
push
push
adc
cmpsb
cmp
or
pop
sub
mov
mov
mov
call
cmc
lods
sbb
stos
pop
in
pop
es
pop
cld
pop
or
insl
sub
outsl
daa
sub
int
cltd
jns
je
imul
enter
jge
mov
popa
mov
cmp
fimuls
pushf
jle
jg
inc
sbb
es
roll
xor
cmp
jne
test
cltd
cmpsb
or
jns
repz
aam
into
cwtl
adc
adc
in
sbb
mov
sbbl
imul
outsb
jle
xchg
into
sbb
jae
adc
rolb
sti
mov
in
and
shll
push
mov
movsb
pushf
ds
cli
dec
dec
jae
add
clc
or
jecxz
jg
adc
es
xlat
jle
dec
xchg
sub
test
std
scas
fsubrs
and
and
repz
rorb
mov
lea
js
xor
and
add
xchg
mov
xchg
xlat
adc
ds
inc
cmp
or
out
cltd
push
sub
imul
pop
insb
bound
xchg
xchg
repz
int
cmp
jge
out
lret
cmp
pop
mov
ror
clc
cmp
cmc
nop
sti
and
sbb
movsl
insl
ret
sbb
bound
cmp
movsb
out
int3
adc
fnstsw
pop
out
mov
xor
dec
rcrb
mov
jmp
clc
pop
push
pop
push
jbe
aad
and
in
dec
icebp
js
js
push
jns
pop
jns
scas
push
or
dec
or
fs
mov
mov
push
or
sarl
push
cmp
mov
or
mov
xor
sub
sbb
push
sub
xor
xor
cmpsb
xor
loopne
add
daa
and
sbb
mov
ja
in
xor
pop
xor
jns
adc
in
jg
nop
mov
mov
push
loopne
fcoml
sbbl
fsubrs
mov
lods
ret
sbb
jns
sbb
jmp
aad
dec
or
insl
xor
cmp
aad
adc
bound
mov
jle
rcll
push
cmp
callw
adc
out
dec
add
dec
leave
push
arpl
inc
mov
sbb
mov
adcl
shlb
dec
pop
cmp
imul
or
lret
cs
sahf
add
push
mov
jno
jb
enter
cmc
rcll
test
or
mov
out
cmp
shlb
int
sub
pop
jno
sub
out
or
filds
or
add
div
lods
jle
das
pop
mov
daa
sbb
mov
pop
std
and
push
jecxz
dec
aaa
push
fistpl
or
shr
scas
sahf
sbb
lret
sbb
int3
std
int
push
inc
test
stc
test
lret
test
enter
inc
scas
stc
fstpt
inc
testb
rol
dec
aam
repz
push
rol
inc
or
fnstsw
sub
cmp
and
mov
lcall
notb
push
lock
dec
inc
lds
psubusw
sti
repz
fs
fsts
icebp
shll
fyl2x
imul
fcmovnu
jg
cs
cmp
pushf
add
clc
out
xchg
movb
push
call
mov
push
sbbb
cmp
add
xchg
inc
pushf
icebp
inc
das
pop
stc
adc
sarb
fcoms
xchg
shrb
push
fnstcw
hlt
mov
pop
lea
jo
mov
in
rorb
pop
sub
rclb
shrb
sar
xchg
add
jl
nop
or
push
add
out
sbb
mov
orb
mov
add
sti
rcrb
mov
repnz
ret
aam
add
cmc
pop
pop
icebp
jle
loop
push
jbe
sub
dec
cmc
cmc
add
mov
mov
inc
and
jne
push
xor
sahf
mov
addps
xchg
enter
cmc
sbb
or
insb
mov
jno
and
inc
jnp
jne
xor
xchg
aaa
mov
push
in
push
mov
jns
fidivrl
lock
push
mov
xchg
call
rorb
cltd
mov
mov
adc
scas
xchg
sub
int3
xchg
fstp
jo
dec
xchg
bound
sahf
mov
sbb
in
sbb
std
fnstenv
sub
adc
cmp
xchg
xchg
xor
push
xor
mov
sbb
repnz
fdivs
cmp
aaa
in
inc
es
fprem
xchg
sub
pop
in
push
adc
idivl
loopne
not
mov
test
mov
fmulp
pop
mov
daa
pop
dec
movsl
inc
out
cmp
or
jg
imul
adcb
mov
cmpsb
stos
or
cwtl
leave
scas
outsb
imul
cmc
jb
pop
inc
mov
jns
mov
leave
jns
sbb
andb
fs
aaa
mov
in
cltd
or
ss
sub
cltd
mov
inc
js
outsb
jbe
das
pop
mov
xchg
sub
pop
cmpsb
imul
int3
orb
push
idivl
adc
lods
out
lahf
mov
fstp
cwtl
sbb
jb
lahf
andl
aam
push
mov
lods
in
aad
mov
mov
sub
sbb
xchg
xchg
addr16
adc
lcall
fcomps
or
gs
ljmp
pop
mov
cli
adc
aaa
mov
add
aad
fwait
push
sbbl
fdiv
sbb
int3
mov
rclb
aam
testl
rcll
fst
sbb
dec
inc
sbb
adc
hlt
js
or
pop
shl
repz
mov
xchg
pop
jne
out
add
repz
mov
xchg
pop
je
out
add
jecxz
repz
rcl
mov
xchg
pop
jae
push
pop
xor
xchg
rcl
mov
xchg
pop
jb
push
pop
xor
hlt
loope
flds
mov
repz
pop
cmp
out
add
repz
jo
adc
int
pop
fmul
and
stc
ret
mov
iret
mov
dec
jbe
sub
push
mov
push
inc
mov
fldcw
in
cld
ffree
jno
in
idivl
int
stc
repz
dec
jns
sti
clc
mov
js
or
aad
xlat
shrl
cmp
or
jne
push
rcrl
push
or
cmc
out
adc
add
aad
notl
shll
cmc
out
push
adc
xchg
pop
dec
inc
mov
cmp
cmc
or
xchg
imul
divl
sti
xchg
adc
mulb
xchg
jbe
sbb
push
lods
fnstenv
ds
xchg
aad
repnz
or
push
cmp
or
rcll
push
xchg
adc
mov
cmc
out
push
adc
popf
sub
out
sbb
mov
repnz
or
xlat
cmp
cmc
or
pop
xchg
insb
aad
notl
inc
clc
push
xchg
movsl
or
adc
xchg
hlt
shrl
push
aas
fstps
iret
cltd
jns
xchg
repnz
or
adc
loopne
or
add
xchg
jno
sbb
pop
test
cwtl
cmp
out
xlat
adc
cltd
mov
or
cmc
or
push
xchg
fmul
pop
push
mov
mov
xor
cmpsl
inc
cmc
xchg
mov
sbb
jle
jbe
incb
jp
adc
fucom
add
dec
mov
sub
insb
or
fists
cmp
xchg
jmp
mov
sub
lret
leave
jns
roll
cmp
cmp
xchg
aaa
fdivl
cmpsl
dec
loopne
loope
mov
sbb
je
decl
jg
push
cmp
mov
idivb
out
xchg
sub
in
fstpl
sub
dec
mov
subl
xchg
std
cltd
or
sub
sbb
adc
scas
pop
js
cmp
xchg
mov
arpl
repnz
sbb
push
cwtl
in
cltd
enter
jne
cld
mov
ret
idivb
je
cmp
arpl
scas
dec
test
out
push
sub
fcomp
mov
push
pop
aam
push
or
mov
jns
sub
sarl
stos
std
cltd
fsubrl
cltd
lret
xlat
cltd
xchg
in
jns
sub
push
in
test
xor
xchg
mov
out
adc
fwait
lcall
out
xchg
fistpll
sub
jb
pop
rcrb
jl
add
icebp
popl
out
add
test
pop
xor
imull
jo
ja
sahf
hlt
inc
cmc
call
lods
in
push
int3
stc
loopne
inc
inc
test
jno
iret
xchg
test
cltd
jo
insb
sbb
sub
xor
pop
jecxz
mov
test
mov
cmpb
add
fldcw
mov
add
mov
sub
or
sub
fdivrl
fisubrs
lahf
xor
cmp
cltd
hlt
ror
pop
xchg
dec
adc
ja
xor
adc
mov
jne
push
xchg
jns
cmc
add
fwait
jmp
mov
sub
aaa
aad
pop
pop
dec
adc
xchg
movl
popl
jbe
mul
sbb
loop
or
iret
insl
push
push
jmp
es
outsl
cltd
ja
mov
inc
adcb
xchg
negl
popa
cmpsl
outsb
push
aam
cmp
mov
mov
add
add
in
cmp
div
addr16
adc
xlat
mov
lods
movsl
mov
sub
notl
sub
mov
out
aad
imulb
cmp
mov
cltd
lahf
fcomps
xlat
rcll
cmc
stos
mov
xor
adc
cmp
push
pop
adcb
fnstenv
xchg
mov
fidivrl
sbb
movsl
push
adc
add
mov
adc
pop
divl
ja
or
xchg
repz
add
js
jmp
stc
cmp
sbb
movsb
movsl
sbb
or
add
idivl
mov
sbb
icebp
add
enter
ja
push
pusha
push
mov
cwtl
adc
scas
cmpsb
xor
xchg
jbe
adc
inc
cmp
mov
shll
fbstp
xlat
call
cmc
jo
scas
out
push
jl
addr16
xchg
dec
imul
pushf
and
inc
test
mulb
sbb
clc
xlat
ljmp
mov
push
ficompl
mov
lret
inc
mov
test
jns
gs
out
cmp
jbe
inc
jne
pop
mov
cmpsl
mov
orl
out
cltd
out
add
mov
adc
jmp
jo
jmp
lds
adc
xchg
addl
cs
inc
push
add
test
cltd
ja
sti
aad
jl
push
insb
jns
and
xchg
and
sub
in
into
jno
pop
mov
inc
clc
gs
dec
aad
pop
addr16
mov
test
out
test
divb
push
movntps
clc
out
cwtl
sub
cmp
adc
mov
icebp
idivl
add
pushf
pop
out
push
mov
xchg
mov
loopne
mov
xchg
nop
xchg
or
nop
pop
pop
mov
icebp
out
pop
mov
pop
fs
xchg
popf
test
add
fsts
ss
mov
xchg
orb
add
in
jl
leave
mov
out
xor
sub
inc
xchg
jbe
cltd
xchg
mov
xchg
je
ss
jae
rcrl
or
add
les
icebp
aas
pushf
cwtl
pop
mov
mov
out
xchg
or
bnd
mov
les
ret
cmp
mov
shll
mov
idiv
inc
test
push
xor
mov
jbe
mov
inc
or
push
enter
dec
lock
rolb
or
sub
add
adc
out
xchg
jl
xchg
pop
mov
imulb
arpl
or
or
xor
out
leave
add
hlt
pop
xor
iret
cld
iret
mov
mov
fstl
aas
mov
call
and
sub
test
jns
ja
jae
adc
fimull
xchg
insb
leave
inc
inc
aaa
pop
cmp
xchg
test
andb
lcall
or
aad
popf
jb
adc
insl
or
ret
xchg
adc
push
ja
adc
stos
cmpsb
aam
jge
mov
enter
fs
pop
cmp
fsts
push
aad
pop
pop
push
sub
test
adc
bound
inc
data16
xor
cmp
pop
inc
inc
je
adc
pop
xlat
xchg
int
cs
js
imul
sbb
repz
xchg
testl
ljmp
outsl
ja
mov
or
imul
add
mov
mov
push
mov
lock
jno
cwtl
adc
push
xorl
cltd
pop
imul
addr16
add
sbb
xchg
sbb
stc
and
sti
dec
sub
adc
jle
aas
stc
sub
and
ds
rclb
fstl
fsts
and
sub
popa
or
addr16
clc
add
jo
es
cltd
fucomp
das
das
dec
jbe
mov
or
pop
data16
out
adc
js
mov
test
jae
lret
stc
mov
adc
inc
cmp
icebp
rcl
shlb
adc
sub
jge
rol
mov
jbe
push
push
pop
push
pop
inc
lahf
adcl
xchg
test
mov
adc
sbb
test
xchg
cmp
lret
and
outsb
xorb
xchg
mov
cmp
dec
dec
push
inc
dec
outsl
jae
inc
inc
imul
push
jle
push
fidivrl
pop
sub
and
daa
sbb
and
adc
jb
arpl
mov
stos
insl
cmp
mov
aad
daa
cmp
mov
out
cmp
jp
cltd
sub
popl
xchg
sbb
and
std
jecxz
or
daa
cmpsl
leave
adc
and
repnz
add
rcr
dec
inc
in
jns
ds
add
repnz
repnz
imul
add
pop
mov
xchg
adc
out
enter
cwtl
shlb
add
ljmp
stos
cmp
divb
pop
add
lock
xor
jnp
jns
leave
int3
aad
xchg
xchg
ja
xchg
jg
jne
jns,pt
sub
sub
sub
js
outsl
call
outsl
mov
push
cmp
pop
ret
pop
lret
dec
or
fsts
pop
push
xchg
sbb
jp
inc
hlt
jb
or
aad
xor
mov
push
int3
adc
insl
cltd
aaa
or
xchg
aam
add
inc
testb
loopne
loopne
add
cld
rorl
jo
fcomps
mov
mov
fldl
das
push
cmp
pusha
jmp
mov
adc
sub
repz
push
fildl
xor
pop
loope
out
daa
push
mov
push
pop
cmpsl
sar
sti
int3
rorl
or
jns
mov
mov
std
mov
cmc
orb
imul
imul
cmp
rcll
loopne
and
jle
push
push
sti
fimuls
or
cmp
test
mov
nop
test
pop
aad
cltd
hlt
aad
cmpsl
xchg
adc
and
sbb
jmp
push
inc
ret
xchg
clc
and
dec
push
stc
fcoms
lds
ffree
pop
xor
lahf
test
jle
push
add
out
out
rorb
hlt
dec
mov
adc
pop
out
jp
cltd
hlt
adc
mov
aad
mov
adc
mov
push
push
leave
cmpsl
lods
sahf
adc
or
fwait
xor
cli
or
sub
popa
sub
push
imul
ret
inc
xor
hlt
and
xor
js
out
outsl
push
dec
notl
mov
ret
sarb
insb
add
xchg
xlat
mov
sarl
arpl
xchg
sbb
sbb
into
mov
mov
sbb
aaa
pop
jle
mov
xor
push
jg
adc
jp
idivl
popa
sbb
hlt
pop
fisttpll
jnp
fdivl
lds
lods
or
dec
cmp
jnp
leave
jns
jle
sub
sbbl
push
sub
lds
inc
addr16
call
cmpsb
add
shrb
sub
add
imul
xor
sbb
dec
push
stos
sub
test
adc
int
test
bound
jb
xchg
pop
add
je
inc
jl
icebp
movsb
rorb
faddl
cmp
fld
push
and
mov
sbb
mov
and
adcl
or
push
cmp
shll
rcrb
push
dec
add
rol
mov
sbb
and
mov
loope
aaa
mov
icebp
int
sarl
sbb
pop
les
bnd
push
sbb
mov
inc
mov
or
test
negb
outsb
leave
in
aam
aad
mov
adc
mov
push
push
outsb
int
rcl
js
in
cmp
push
roll
push
movsl
fucom
adc
adc
testl
mov
xchg
scas
mov
jae
mov
jne
leave
and
fcompl
xor
shll
fldl
not
push
jp
mov
ljmp
mov
insl
sub
pop
rolb
xchg
mov
sarl
iret
aaa
push
sbb
cli
psubd
lock
sub
stc
mov
xchg
xchg
testb
repz
or
popf
dec
cmp
inc
jge
lock
or
repnz
mov
pop
shl
mov
jle
lcall
fs
lret
lret
shlb
add
daa
jge
imul
jne
adc
test
clc
fmuls
xchg
push
clc
push
mulb
jmp
ss
pop
jg
mov
ret
aaa
test
mov
mov
aad
rcr
ljmp
mov
ret
mov
jno
adc
jle
rorl
sub
test
js
or
pop
inc
dec
cmp
adc
repz
aam
int
or
inc
inc
jne
rcl
test
aas
lcall
jecxz
push
fdivr
shl
ds
test
sarl
sbb
cwtl
enter
rolb
gs
test
cmp
cltd
push
adc
lods
lahf
movsl
lret
enter
mov
sub
adc
sbb
mov
repnz
hlt
jecxz
jne
das
xchg
dec
jle
add
adc
loopnew
das
pop
inc
outsl
shlb
or
inc
in
xchg
ss
dec
cmpl
sti
pop
scas
popa
mov
inc
adc
mov
shl
pusha
xor
ja
mov
mov
jecxz
mov
iret
icebp
jb
xchg
jmp
push
push
mul
adc
mov
ficompl
arpl
int3
lods
outsb
fst
sub
std
stc
in
pop
shl
sub
cwtl
lret
push
in
xchg
ds
loopne
es
pop
loopne
push
cmpsb
lret
filds
push
xchg
ficomps
xchg
cmpl
mov
cwtl
cmp
jg
cmp
testl
jge
ds
push
inc
sub
pop
cmp
testl
xchg
test
and
push
xchg
or
cwtl
cli
pop
in
cld
imul
xor
cmpsl
xchg
scas
movsb
mov
jns
jge
cltd
paddd
adc
scas
pop
xchg
cltd
lea
cwtl
jmp
iret
incb
inc
imul
jno
push
inc
add
sahf
aad
stc
xchg
cmp
rcll
clc
inc
test
or
sbb
aad
adc
fidivrs
in
jecxz
pop
fdivrs
dec
mov
cwtl
pop
mov
test
mov
cmp
mov
stos
adc
out
push
mov
dec
pop
fdiv
divb
jbe
cltd
std
out
pop
and
xchg
lret
scas
imul
icebp
lock
push
imul
xor
sbb
aad
xor
repz
mov
not
idivl
mov
mov
adc
mov
pop
pop
push
xchg
xor
pop
jae
shll
mov
mov
repz
push
int
mov
xchg
lock
mov
into
pop
js
mov
or
shll
mov
lahf
sbb
dec
adc
jnp
cmpsl
jno
ja
rclb
lcall
push
mov
iret
adc
adc
jl
stc
and
fsubrs
sub
and
lods
sub
cmc
adc
adc
mov
mov
js
sub
fisubrl
aam
add
xchg
pop
div
xchg
jmp
pop
jno
cltd
rcr
mov
mov
testb
addb
push
pop
aam
push
mov
mov
ljmp
negl
stc
xchg
loop
je
subb
push
shll
pop
mov
pop
push
sbb
push
jb
hlt
jmp
fsts
pop
nop
mov
fsts
fiaddl
mov
xchg
fstpt
out
sarl
adc
fldl2t
ja
pop
fcoms
sbb
xor
and
or
xchg
cmp
les
push
icebp
pusha
mov
cld
cwtl
pop
enter
sbb
push
sbb
cmpl
fstl
jne
or
mov
mov
call
adc
mov
test
cmpsb
aam
lcall
shl
imul
xchg
cmpsb
fisubs
inc
jbe
xor
fmulp
leave
push
jne
out
add
mov
xchg
aaa
hlt
or
dec
fisubrl
push
sub
add
popf
pop
jae
out
mov
add
mov
xchg
and
insb
rcr
rcll
lcall
into
enter
or
sbb
adc
and
cli
push
jp
add
cmp
inc
jmp
mov
xor
cld
idivl
enter
xchg
inc
mov
sbb
insl
xor
sub
pop
popa
adc
xchg
cmp
mov
sub
sarl
int
inc
sar
stc
push
cwtl
adc
insl
fsubl
or
cltd
fsts
jge
lods
jne
xchg
adc
or
or
mov
inc
adc
jge
scas
mov
xlat
adc
addr16
add
rcrl
popf
jmp
mov
sbb
into
pop
mov
pusha
cwtl
xor
cmp
cwtl
mov
fadds
lea
div
push
cmpsl
xchg
sbb
rcrb
loope
xchg
add
fdiv
mov
fnstenv
xchg
int
ss
mov
jge
imul
scas
or
roll
sbb
xor
xchg
pop
jbe
xchg
add
pop
ret
xlat
xchg
mov
adc
mov
and
mov
lock
jge
mov
adc
sar
jg
xor
loopne
xor
shl
iret
cs
popa
push
les
hlt
lahf
sub
dec
lock
scas
insb
xor
cltd
fisubl
rcl
call
mov
mov
push
cmp
idivl
cmp
fwait
jbe
mov
mov
sub
mov
test
rcr
and
loope
mov
push
or
lock
imul
adc
into
mov
into
jns
mov
fnop
repz
rorb
rcll
xchg
inc
push
in
jo
out
push
cli
fcoml
jns
clc
jl
repnz
cltd
adc
sbb
ror
pop
rclb
add
cwtl
pop
pop
nop
clc
out
fnstenv
jmp
fucomp
push
fistpll
pop
pop
ja
mov
je
aaa
cltd
jae
sbb
aad
push
rcrl
push
jg
adc
mov
fpatan
mov
jne
xchg
shrb
xchg
nop
or
sbb
aam
mov
sbb
movsb
xor
aad
xor
fiadds
xchg
xchg
lahf
out
aam
ret
pop
cmp
js
pop
mov
pop
jnp
push
rcl
ja
pop
xchg
xchg
xchg
mov
not
loope
ret
fldcw
movsb
mov
push
add
fucomip
jl
shlb
fmuls
loope
mov
xor
bound
in
xlat
xchg
cltd
mov
add
frstor
sbb
pop
or
fdivs
shrl
dec
cmpsl
rcrb
loopne
negb
leave
test
xchg
icebp
popa
mov
frstors
mov
xchg
das
movsl
rcrb
cltd
ss
jns
mov
lock
or
popa
das
mov
stc
and
jp
mov
imull
mov
dec
pop
fst
das
test
xorl
adc
call
cmpb
popf
jmp
cmp
clc
xchg
pop
ja
sbb
add
outsb
out
cmp
lods
repz
mov
adc
imul
popa
push
adc
in
xlat
pop
pop
test
pop
or
in
add
clc
push
int
jg
adc
test
rcl
aad
out
scas
notl
flds
loopne
stos
xchg
inc
inc
adc
aaa
or
push
sub
fld
mov
and
jle
or
jns
sbb
xor
pop
fistps
fsubrs
bound
sbb
or
ljmp
inc
add
jno
jp
out
in
adc
push
and
or
lds
sbb
mov
js
and
xor
mov
inc
pop
jp
repnz
rolb
aad
fcoml
shll
aas
cmp
call
pop
xchg
fs
call
leave
loop
mov
fwait
int3
pop
fsubs
inc
mov
xchg
addl
hlt
insb
fsubrs
adc
ja
xor
xchg
mov
out
daa
ffree
mov
out
nop
or
pushf
xchg
int3
dec
js
cld
in
sbb
ret
hlt
clc
add
lahf
test
xchg
sbb
mov
into
fcompp
mov
repnz
enter
xchg
int
addr16
lea
and
mov
xchg
pop
and
roll
aad
outsl
xchg
pusha
jb
insb
adc
popf
sbbb
ret
xlat
jbe
repz
add
push
jmp
mov
stc
or
inc
cld
mov
dec
jge
bound
stc
shlb
mov
dec
adc
data16
xchg
pop
mov
clc
xlat
sub
scas
push
lret
repnz
popf
pop
xchg
jbe
jne
scas
call
and
flds
je
jne
out
ss
xor
mov
xchg
mov
out
add
xor
inc
sub
cltd
mov
out
pop
dec
out
add
sahf
add
mov
enter
rcrl
sub
popa
sub
adc
mov
mov
dec
and
or
xlat
ja
xchg
xchg
outsb
adc
pop
neg
mov
jne
stc
xchg
int
aad
loope
push
out
or
adc
ss
fstps
xchg
push
adc
jne
pop
and
shlb
or
ja
xor
pop
jns
xchg
cli
or
mov
pop
sbb
sub
mov
icebp
mov
je
dec
mov
fs
cltd
std
sbb
mov
xchg
mov
cltd
andl
imul
push
mov
cmp
stos
mov
jb
insl
push
clc
dec
mov
fwait
adc
pop
xchg
sub
xchg
mov
popa
divb
test
sub
cltd
and
adc
daa
or
push
or
sahf
add
test
mov
lock
adc
xchg
add
rcl
outsl
xchg
ror
mov
mov
fldt
jecxz
cmp
xor
lods
cmpsl
push
inc
pop
negb
pop
leave
xchg
imul
lcall
push
mov
rclb
push
call
push
mov
test
jecxz
cmp
add
mov
je
xchg
cmc
cmpsl
adc
aaa
sbb
subb
ja
loopne
inc
int3
test
jae
or
xor
xlat
mov
dec
es
iret
pop
jg
or
lret
out
cmpsl
jns
cltd
lds
sbb
cmpsw
fldcw
mov
sub
dec
pushf
mov
mov
rcrl
mov
cmp
fisttpll
xchg
push
push
lret
mov
aas
push
push
daa
jns
out
xor
clc
out
inc
push
loopne
scas
inc
inc
dec
sbb
fisubs
movsl
sbb
clc
mov
pushl
stos
xchg
outsb
cmp
mov
adc
cmp
sahf
jne
fisubrs
loopne
mov
popl
add
stos
xchg
js
pushf
aad
inc
icebp
fistpll
out
jle
add
xchg
popl
push
clc
sarb
mov
das
add
mov
jg
aaa
and
sbb
gs
adc
adc
cmp
pop
adc
inc
js
cs
ret
sub
cmp
inc
std
bound
out
sub
xchg
push
clc
cltd
dec
cmp
cmp
out
xchg
shlb
and
aaa
push
and
mov
repz
xor
lret
push
sub
out
push
divb
lret
jno
sbb
es
cld
notl
loopne
test
movsb
push
jns
inc
xchg
jle
fdivrs
mov
or
lods
shr
mov
ja
test
shl
cld
xor
pop
sub
mov
scas
push
ret
sbb
rolb
loopne
rorb
enter
xlat
ja
loope
stos
dec
jno
nop
push
mov
aad
dec
rcll
scas
lret
ret
js
inc
aas
and
shrl
imul
jo
pop
xor
ret
sub
jg
xchg
xchg
testl
and
std
hlt
adc
sbb
pop
and
cmp
jle
ss
or
xchg
cld
or
push
push
sti
shl
js
or
dec
xor
test
or
push
jne
into
dec
adc
pusha
push
cmp
push
mov
dec
ror
mov
sub
inc
lret
repnz
in
sbb
popf
push
xchg
vdivps
mov
stc
aad
sub
cmc
aas
cltd
cmc
nop
and
js
xlat
jge
sbb
mov
lds
mov
out
and
lahf
inc
sub
and
aas
cmpsb
jo
gs
flds
xor
gs
je
stos
sahf
sub
adc
cmp
dec
pushf
sub
cwtl
cmp
mov
sarb
cld
xor
pop
sub
lret
mov
mov
add
js
xchg
pop
movsl
sub
aad
lret
mov
mov
mov
cmc
push
mov
clc
into
cmc
jbe
jge
mov
and
xor
mov
scas
jl
xchg
jge
cmp
test
jp
sub
xor
mov
sti
mov
out
xchg
pusha
pop
push
loope
xchg
pop
push
jbe
aad
fld
stc
rorb
cmc
sub
xor
mov
aam
pop
xchg
push
xor
nop
adcb
dec
and
cltd
inc
add
add
push
push
dec
aaa
test
out
mov
leave
es
mov
push
ret
mov
iret
cs
sbb
mov
cmc
mov
rorl
sahf
stos
or
cmp
jle
xchg
or
xor
and
mov
lea
inc
hlt
repz
decl
fimull
out
call
movsb
and
push
flds
xlat
lret
cmpl
scas
adcl
leave
push
add
orb
mov
fwait
mov
nop
or
mov
xchg
insl
cld
outsl
push
filds
cmp
fimull
rorb
dec
pop
mov
sub
mov
ficoml
jmp
mov
fucom
sbb
mov
jns
cmc
push
dec
hlt
stos
stos
stc
cltd
pop
mov
lea
adc
rcrb
je
clc
inc
cwtl
in
pop
mov
mov
jb
insl
lahf
aad
push
mov
insl
adc
movb
cld
sub
jne
in
mov
or
mov
adc
or
out
xor
lret
lock
movsb
xchg
xchg
test
sbb
imull
add
push
sub
jecxz
loopne
mov
and
call
out
in
stos
fadd
inc
adc
pop
lock
movsb
pop
orl
out
push
or
adc
fnsave
sbb
scas
test
jp
adc
movsb
stos
stc
mov
lcall
mov
xchg
dec
xchg
sbb
in
aad
leave
shr
and
xchg
inc
dec
cwtl
nop
sbb
leave
shrb
fcoml
inc
out
pop
mov
rcrb
mov
mov
movsl
cmp
mov
cld
stc
xor
data16
mov
outsb
add
xchg
xchg
push
or
shl
mov
push
add
inc
pop
mov
jecxz
inc
xchg
push
shl
mov
xor
jle
fistl
sbb
xor
loop
push
rcrl
lods
ja
out
loopne
push
xchg
test
adc
iret
addr16
fldcw
push
xor
push
sti
lahf
push
inc
xor
std
iret
push
xchg
imul
ljmp
cld
scas
mov
mov
add
test
sub
push
cmpsl
add
daa
xor
fsubrp
xchg
mov
xchg
fldcw
pop
or
mov
push
call
fld
jmp
outsb
jge
push
sub
pushf
insb
fucomp
or
push
lods
sbb
push
jne
sub
testb
cltd
pop
mov
or
das
aaa
mov
mov
sub
mov
iret
addr16
mov
mov
mov
mov
rcr
repz
add
jbe
inc
mov
repz
add
dec
adc
xor
xchg
mov
mov
imul
cmpsb
cmp
mov
call
xchg
adc
rorl
push
bnd
stc
xchg
xor
inc
push
ror
popf
test
push
xlat
pop
xchg
jmp
sbb
xor
or
test
sbb
sub
call
pop
jne
inc
jns
cmp
call
popa
add
pop
xchg
pop
lea
xchg
rcrl
xor
or
lods
enter
xlat
mov
add
scas
lock
push
aam
and
testb
and
lds
inc
jp
mov
jle
popl
rolb
or
adcl
push
cmpl
xchg
fwait
inc
mov
mov
jp
and
flds
in
int
std
stc
push
stos
stc
or
adc
repnz
outsl
cmp
dec
out
lret
repnz
or
inc
call
mov
or
repz
call
les
pop
sub
aad
xchg
xchg
fmuls
sub
xlat
cmp
fisttpll
add
js
dec
xchg
pop
pop
xchg
scas
aad
jp
aaa
sub
xchg
rdmsr
jecxz
out
scas
xchg
push
imull
push
mov
daa
inc
xchg
jbe
stos
fbstp
push
add
xchg
aaa
and
xlat
and
push
das
aaa
adc
stc
outsb
cltd
or
orl
arpl
neg
cmc
cmp
mov
inc
or
pop
add
push
shll
sarl
sar
or
push
push
push
xlat
cmp
mov
cmpsl
imul
xor
je
mov
jl
adc
xchg
idiv
mov
inc
mov
pop
loopne
lea
mov
rcrb
push
sub
stc
test
iret
inc
inc
mov
sbb
iret
in
and
popf
out
inc
mov
sbb
rolb
imul
out
mov
int3
movsl
xchg
scas
int3
mov
dec
aam
jle
jge
push
rorb
xchg
arpl
pop
jp
rep
loop
sbb
sbb
sti
jmp
les
lods
adc
roll
push
insl
sbb
push
repz
and
push
cltd
scas
pop
push
mov
rorl
aaa
bound
aam
jbe
aaa
je
inc
lds
rclb
push
cmp
mov
xor
pop
xchg
push
cmp
jmp
popa
xchg
cmp
cmp
xchg
sbb
xchg
int
mov
addr16
faddp
push
cwtl
loope
jno
xchg
fidivs
mov
ficoms
rcrb
add
jo
cwtl
cltd
repz
leave
cs
and
imul
jecxz
es
inc
xchg
mov
ret
notb
lock
push
in
sbb
lods
fidivrl
push
aas
pop
sub
aaa
push
jg
std
xor
loop
mov
shlb
lock
mov
je
cmp
div
push
push
pop
mov
xchg
pop
ret
je
mov
adc
jmp
push
and
loopne
cmp
loop
lea
and
arpl
lods
cmp
add
pop
push
or
movsl
out
dec
out
cmp
sub
mov
lea
sub
fsubl
pop
and
pop
push
inc
pop
fnstenv
leave
sbb
mov
jecxz
add
movsl
mov
out
adcl
add
jge
xor
cmpsl
and
add
sbb
xchg
stc
mov
inc
push
or
imul
xchg
aad
jmp
sbb
shrb
inc
je
shr
ds
daa
xchg
adc
popf
cmp
dec
stc
aaa
stos
cld
adc
jmp
fistps
mov
push
repz
mov
inc
mov
jp
insb
dec
push
dec
cmc
jle
hlt
sub
cmc
dec
mov
inc
adc
testl
push
mov
stc
mov
jge
push
pop
jne
test
repz
fldcw
ret
repnz
sbb
enter
cmp
lds
ror
mov
in
aam
sbb
dec
icebp
int3
call
movsb
cmc
imul
insb
dec
adc
push
cwtl
rcll
lods
dec
ds
adc
cmp
xor
adc
jecxz
in
jg,pt
rcrb
push
and
rclb
pop
stos
fldenv
outsl
bound
shl
inc
dec
repz
negl
rcrb
push
frstor
jns
mov
in
loopne
lods
add
inc
lret
jge
ss
std
addr16
xlat
add
mov
popa
mov
adc
scas
insb
jb
xchg
mov
insb
and
pop
pop
xchg
inc
pusha
or
pop
stos
and
xchg
xchg
adc
sub
std
rcrb
sti
fisttpll
andl
inc
inc
out
movsb
push
mov
mov
xchg
inc
aam
cs
cmpl
adc
xchg
aad
pop
cmpsl
repnz
and
shll
mov
shrl
sub
fcoml
jp
arpl
sbb
xchg
inc
shrl
lret
dec
dec
lea
xlat
push
dec
fildll
xchg
sbb
fisubrl
je
push
inc
adc
icebp
ss
push
jns
es
hlt
testl
fstl
jo
and
jb
xchg
hlt
mov
into
add
xchg
jmp
mov
push
out
add
flds
add
pop
sbb
dec
std
sub
xorl
data16
scas
clc
cltd
popa
popf
loopne
lods
fldl
test
popa
enter
out
adc
add
jnp
push
iret
xorps
pop
mov
outsb
insb
je
dec
mov
outsb
subb
addl
mov
pop
inc
clc
cmpsb
fmull
sbb
stc
inc
std
push
les
out
mov
in
adc
xlat
rorb
add
call
fidivrs
jl
mov
fldl
jae
cmp
out
ds
cmc
inc
inc
aas
mov
pop
xchg
cltd
fcom
mov
je
xor
or
fistps
sub
or
cmpsl
and
jbe
sub
mov
lods
mov
ja
inc
rolb
aas
addr16
cmp
shlb
push
xchg
pop
in
out
push
add
inc
sarl
repnz
add
adc
or
popf
icebp
shr
repnz
fsts
cmp
movsl
out
roll
popf
mov
test
and
movsl
out
addb
popf
jb
jp
bound
pop
movsl
out
inc
add
xor
cmp
adc
or
dec
mov
pop
adc
mov
fstl
xlat
aam
pop
or
xchg
mov
popf
sbb
push
negl
fstpl
xlat
popf
sbb
pop
negl
fstpl
xlat
xlat
push
negl
aad
push
push
pop
mov
popf
fmuls
sbb
xchg
popf
cltd
or
neg
adc
cmc
das
add
push
sub
xchg
xchg
fst
mov
clc
adc
or
xchg
xchg
fst
mov
clc
push
xlat
adc
push
dec
fstl
xlat
aam
pop
or
xchg
mov
popf
sbb
push
negl
fstpl
xlat
popf
sbb
pop
negl
fstpl
mov
push
add
or
mov
pop
test
dec
mov
leave
into
push
in
add
es
cmp
cwtl
clc
push
rcrl
mov
fidivrs
mov
stos
mov
lea
les
push
rcr
pop
loop
jle
push
xchg
push
repz
push
mov
cltd
popf
aaa
or
sub
shl
inc
loop
ds
cmc
sbb
push
jbe
push
mov
mov
rcrl
leave
into
aam
add
mov
fprem1
aad
cwtl
adc
jns
clc
dec
lock
in
push
dec
lds
or
or
shlb
nop
fadd
jns
cltd
add
xchg
cmp
xchg
push
mov
loop
sub
add
adcl
inc
rcrb
jg
cmp
and
repnz
dec
adc
jle
jge
fstpt
fisubl
popa
mov
in
or
ficoms
outsb
sub
xchg
lds
sbb
stos
push
cmp
jns
sbb
lahf
sbb
or
in
movsb
sub
fisttpl
sub
push
addr16
add
xchg
fadd
mov
adc
jp
mov
cli
lods
inc
movsb
lock
mov
jno
sbb
negl
mov
imul
ror
or
dec
pop
aas
and
mov
cli
dec
test
lods
clc
mov
es
xor
orl
push
mov
or
adc
sbb
movsl
or
xor
mov
push
pop
neg
lock
push
jle
dec
pop
cltd
jns
sbb
xchg
imulb
sub
cmp
xchg
cltd
xchg
int
pop
xor
adc
inc
loop
in
fmuls
xchg
xchg
and
test
push
lret
movsb
cli
into
rcrb
aaa
out
add
xchg
int3
addr16
mov
lea
push
loop
leave
add
adc
xchg
mov
aad
fwait
aad
adc
or
jns
add
idivl
and
insb
lahf
xchg
testl
js
push
movsb
push
xchg
adc
pop
sbb
cmp
add
jbe
and
inc
mov
and
mov
ljmp
int
out
ret
bound
sbb
cmp
sub
imul
or
cmp
mov
aad
push
cld
inc
jle
fcoml
jg
mov
cmp
je
cmc
add
lahf
rclb
cmc
repz
cltd
lcall
ja
xchg
push
fisubl
imul
cmpsl
sub
and
push
sahf
pop
push
popa
xor
jb
xchg
mov
cs
pop
repz
mov
ds
hlt
lret
mov
mov
sbb
jbe
mov
sbb
or
jecxz
sub
and
test
sbb
cmovo
and
add
sahf
xlat
xchg
mov
mov
sbb
lods
arpl
xchg
mov
test
inc
mov
aad
mov
mov
jo
cltd
in
out
cmc
loopne
xchg
ss
shl
lret
in
fists
idivl
xor
ficomps
es
push
xor
shll
mov
cmp
gs
xor
aad
in
xchg
xchg
and
add
jmp
mov
pop
imul
and
add
sbb
roll
out
fistpl
and
cwtl
mov
jp
mov
ja
scas
mov
xor
add
mov
mov
fadd
pop
mov
xchg
fs
clc
pusha
mov
mov
enter
dec
ds
adcb
outsb
fdiv
mov
adc
leave
ja
jle
cvtps2pi
push
xlat
cmc
xchg
ret
sbb
lret
std
xchg
push
add
mov
pop
sub
aad
stc
aaa
idivl
mov
push
jne
jbe
add
aam
jne
testb
push
xor
ja
push
mov
push
mov
xchg
xchg
push
push
lahf
repz
cli
push
xchg
pop
rcrb
jns
cmc
sbb
imul
mov
cmpsl
adc
dec
or
xchg
xchg
lret
shlb
out
push
testb
adc
add
dec
fstps
add
hlt
cmpsl
xchg
mov
xchg
dec
test
fucomip
and
sub
and
stos
sub
imul
out
jae
mov
in
xchg
mov
test
sar
orl
idivl
fstl
mov
mov
or
cltd
stc
xchg
push
arpl
rcl
adc
xchg
cmp
scas
addl
or
mov
push
cmpsl
ljmp
mov
or
adc
xor
and
leave
ret
shll
sub
xor
add
rcl
hlt
xchg
jns
cltd
push
es
jl
lahf
xchg
aad
ljmp
lcall
mov
push
xchg
add
sti
stc
inc
sti
add
jno
repz
gs
mov
scas
outsb
mov
mov
out
cmp
fsub
mov
mov
sub
add
loop,pn
aas
ror
xor
pusha
lcall
xor
fwait
inc
leave
lea
fbld
or
xor
in
rolb
dec
repz
movsb
fadds
sbb
imul
movsb
jle
xchg
pop
dec
add
jg
rcrb
imul
in
sub
int
push
xchg
and
mov
pop
cmp
cmpsb
mov
mov
je
fnstenv
push
stc
mov
mull
jmp
xchg
icebp
test
xchg
cmpsl
scas
loope
cmp
ficoms
xchg
aam
inc
out
aas
out
arpl
fxch
xrelease
dec
rcrl
mov
rcrl
pop
scas
xchg
pop
cmp
mov
push
push
fcoml
andl
rcr
popa
jecxz
fsub
mov
jne
bswap
mov
rclb
adc
or
pop
push
mov
mov
adc
push
push
idiv
jne
xchg
aam
loope
fwait
aam
sbb
cmp
xlat
jle
fisttps
adc
sub
mov
fiaddl
stc
jns
cld
pop
mov
sahf
jmp
sub
out
dec
test
lret
gs
xor
fsubrl
add
mov
push
enter
dec
mov
scas
divl
nop
pop
dec
je
or
dec
out
clc
pop
or
jno
sub
add
fmuls
hlt
and
hlt
das
cmp
test
xor
mov
mov
fcmovnu
adc
cmp
shrl
aaa
dec
xor
in
lahf
pop
cmpsb
int
imul
fistpl
xchg
adc
xabort
adc
and
insl
shll
imul
popf
xor
pop
sub
sub
imul
loopne
adc
out
or
leave
iret
imul
mov
in
fstps
lcall
mov
call
adc
bound
inc
negl
clc
adc
mov
xchg
cmp
bound
loop
repz
xor
inc
xor
xchg
sub
cmp
cmc
jl
and
ja
inc
frstor
cmc
lds
adc
xor
jno
adc
rorb
cmp
sahf
add
loopne
cmpsl
and
lock
push
mov
push
cltd
rcl
popf
aad
mov
add
cmp
fsts
hlt
push
mov
aam
mov
sbb
sbb
or
jle
hlt
push
cltd
cwtl
pop
cltd
stc
outsb
mov
ja
cs
sti
jbe
xchg
mov
loope
mov
cmc
test
mov
repnz
jns
sbb
jb
fnstenv
jns
into
imul
push
jb
sbb
dec
stc
faddl
notb
sahf
scas
and
rcrb
sti
ja
mov
sub
inc
cmp
add
ficomps
enter
xchg
ret
mov
int3
mov
repz
js
cs
push
xchg
cmp
xchg
testb
stc
ss
imul
cwtl
mov
mov
dec
arpl
mov
in
dec
push
mov
mov
jg
ret
xor
adc
push
cmc
sbb
repz
je
call
rclb
jno
clc
js
sahf
push
repnz
mov
shrb
and
xor
xchg
lods
jge
sbb
adc
pop
jge
inc
lods
pop
xchg
pushf
jmp
stc
lahf
fnstsw
aad
or
and
pop
sbb
aam
push
inc
imul
cwtl
xchg
stc
mov
push
into
and
les
sarb
scas
shlb
popa
and
xchg
lods
push
loopne
jg
aaa
sbb
xchg
std
int3
dec
rorb
dec
jb
add
xchg
xchg
sbb
lahf
dec
lock
jl
clc
je
int3
adc
jne
shrb
xchg
test
das
enter
sub
or
stc
ss
xchg
dec
test
fists
in
pop
or
xchg
jmp
lea
cmp
jle
push
xor
cmpsl
inc
xor
push
imull
jge
jmp
inc
movl
mov
xor
inc
jecxz
js
jg
jbe
sbb
imul
xlat
test
das
push
loopne
xchg
cmc
bound
shl
xor
ljmp
cs
and
add
sub
arpl
or
add
dec
add
fsts
sub
sarl
das
cmpsb
cmp
jae
jmp
mov
or
ss
mov
sarl
out
sbb
ss
or
and
push
les
jns
test
scas
push
dec
jo
les
sbb
jno
xchg
nop
xor
cmp
rclb
cmpl
dec
hlt
or
stc
es
cs
lahf
adc
dec
sbb
jbe
sbb
idivw
aad
sbb
stc
inc
jo
push
adc
rcll
jbe
cmp
dec
add
and
int
adcl
and
subb
xlat
push
mov
jmp
icebp
dec
xor
xor
sbb
add
sbb
mov
push
push
cld
mov
sarl
jge
aad
xor
aad
and
int3
xor
test
push
xchg
scas
jmp
xchg
int3
mov
daa
and
add
sbb
arpl
int
addr16
int3
add
outsb
not
sbb
add
sub
and
and
and
inc
adc
shl
or
and
aas
dec
adc
dec
push
sbb
or
lret
pop
shll
cltd
sbb
lret
adc
mov
stos
xchg
shlb
pop
jnp
loopne
mov
xlat
mov
cmp
and
shlb
aad
push
dec
int3
cmpl
inc
test
mov
icebp
icebp
lock
mov
mov
adc
inc
lret
mov
mov
push
inc
fxtract
mov
leave
cmc
jecxz
andl
add
pusha
xchg
pop
div
addr16
adc
lea
pop
adc
mov
mov
push
lahf
cs
inc
arpl
push
pusha
pusha
dec
and
sub
dec
inc
xor
sub
ret
adc
xchg
cmc
and
fwait
out
aad
xor
sub
mov
lock
mov
cli
or
cltd
mov
stos
loopne
push
lods
mov
lahf
xchg
imul
jnp
inc
test
outsl
xchg
pop
adc
stc
leave
lock
cli
push
imul
push
cmp
mov
cmp
cltd
add
xchg
mov
add
or
and
adc
enter
mov
xlat
lods
stos
inc
lock
out
xlat
cmp
cltd
sub
mov
outsb
in
std
xor
nop
xchg
aaa
add
push
jne
or
inc
out
mov
jnp
jae
push
into
inc
in
std
std
js
mov
pop
arpl
inc
and
aam
or
addr16
mov
lods
jp
loop
fcomp
mov
and
addr16
and
add
hlt
add
or
aad
add
imul
enter
sub
fidivrs
mov
pop
xlat
jp
cmp
aad
cmp
pop
in
das
out
jnp
jae
addr16
repz
adc
lahf
repnz
clc
mov
adc
loope
xor
add
ds
lret
inc
adc
icebp
mov
xchg
or
fidivl
mov
add
push
fdivrl
push
fsts
pop
sbb
dec
test
aas
mov
loopne
dec
adc
out
jne
paddw
sbb
repz
dec
mov
mov
sbb
stc
xor
cmp
sbb
inc
add
cltd
call
mov
xor
or
xor
add
sbb
loope
lret
jmp
movsl
cmp
pop
jmp
mov
daa
adc
xchg
add
push
sub
imul
stos
lret
ret
push
andb
dec
add
pusha
xchg
shr
jno
icebp
addr16
mov
outsb
iret
test
lds
fldpi
sbb
nop
sahf
outsl
lret
fisttps
add
std
xchg
mov
jbe
pop
cltd
cmp
test
sub
or
dec
sbb
xchg
push
mov
std
push
jne
frstor
test
pop
test
mov
mov
sbb
xchg
cmp
xor
sti
lea
mov
stc
addr16
inc
adc
add
sti
inc
pusha
dec
jnp
jne
cmc
push
mov
lods
sbb
stos
icebp
outsl
in
out
aaa
add
mov
ret
lret
loopne
movsl
out
mov
pushl
es
mov
mov
notb
hlt
mov
and
loope
adc
pusha
push
and
imul
jmp
lret
insb
repz
push
jbe
mov
add
mov
xchg
insb
xchg
and
ja
or
pop
sbb
xchg
mov
loop
xlat
adc
nop
push
into
lret
popa
popf
jl
popl
sbb
sbb
imul
daa
outsl
and
int
repz
inc
jns
in
mov
push
add
add
xchg
outsl
jo
fistpll
shl
or
xlat
mov
sub
pop
sub
std
push
push
ror
leave
data16
fildll
nop
pop
and
mov
fistpl
add
jg
or
addr16
inc
pop
ret
sbb
pop
aad
sbb
rcrb
imul
dec
pop
ret
pop
sbbl
pop
pop
insl
adc
inc
lock
outsb
or
add
jle
scas
fs
shlb
inc
xchg
insb
dec
jne
push
pop
lret
test
call
dec
int3
fisubl
add
out
mov
fsubrl
negb
scas
in
mov
pushf
ss
adc
adc
sbb
pop
and
push
leave
push
and
jns
fdivp
jae
clc
leave
mov
rclb
roll
cmp
rcll
mov
je
popl
add
cmp
pop
jmp
jns
push
imul
ja
ja
into
shlb
mov
xor
mov
clc
push
or
jmp
xor
cmp
cmp
adc
shll
jo
push
push
or
rcl
or
mov
pushf
sar
fstpt
adc
clc
sbb
pop
sbb
jb
mov
jmp
fstps
jns
sbb
arpl
js
clc
mov
dec
lret
mov
adc
pop
out
test
or
add
sahf
testl
add
push
push
push
fsubrs
sarl
pop
cltd
push
fsts
sbb
sub
sbb
xchg
inc
insl
aaa
sbb
xchg
incb
lret
push
cld
nop
xchg
das
mov
leave
mov
in
xorl
js
fs
iret
addr16
sti
out
push
jge
ss
ret
mov
leave
rclb
rcrl
fimuls
lock
popa
xchg
mov
and
add
push
mov
mov
jmp
jmp
fcom
mov
inc
orb
bound
test
popa
iret
imul
add
out
stos
lret
sub
pop
pusha
mov
jmp
jbe
sarb
lea
jno
test
icebp
mov
mov
push
shl
mov
jge
insl
jg
insl
lcall
addr16
enter
mov
ror
push
dec
test
add
xchg
jnp
lods
jb
xchg
jne
test
rclb
or
mov
mov
lcall
loope
xchg
push
jns
std
adc
imul
cmp
mov
adc
xor
in
inc
cmp
inc
test
adc
lret
lahf
mov
and
or
mov
push
adc
mov
mov
lds
inc
pop
fldt
cltd
xchg
rcr
cmpl
jmp
mov
inc
lret
jle
shlb
aaa
inc
lods
push
push
lds
mov
sub
ljmp
mov
sub
xor
iret
idivb
cmc
or
xchg
pop
ljmp
scas
and
jle
cmpl
xchg
popa
daa
lret
sbb
lea
es
dec
das
adc
dec
dec
add
cmp
add
mov
cltd
repnz
mov
dec
test
jmp
fstpt
loop
rclb
and
xchg
push
aam
xchg
add
fld1
in
mov
ss
loope
jbe
ds
push
cmc
cmp
xchg
imul
ljmp
fwait
dec
ficompl
add
xchg
cmpsl
ja
xchg
or
push
sub
cltd
sbb
lret
inc
mulb
pop
out
push
cmp
in
push
dec
leave
mov
cmp
rol
aad
jmp
adc
cld
jl
xchg
pop
inc
sbb
shll
add
or
xchg
loopne
mov
fadds
and
xchg
shlb
ljmp
or
ljmp
push
test
add
mov
sarl
inc
nop
leave
cmp
clc
bound
not
jge
pop
ret
sbb
jmp
xor
xor
dec
mov
push
or
call
loop
jp
pushf
and
mov
pop
lcall
es
inc
test
jnp
cld
outsb
push
jns
push
cmpsl
mov
rorb
sahf
mov
or
icebp
pop
inc
xchg
mov
fcmovbe
and
mov
xchg
movsl
jno
push
enter
orl
daa
push
ss
sub
xchg
fsub
add
mov
int
gs
aad
mov
jge
xor
mov
fmuls
sar
sti
sub
mov
mov
sbb
divb
adc
dec
lock
outsl
test
mov
cmp
outsb
rcrb
mov
addl
add
or
jmp
fsts
adcl
mov
add
out
clc
or
mov
sub
jmp
rcrb
sbb
out
adc
mov
popf
mov
and
mov
push
es
cmp
dec
jg
lods
rcll
insl
in
xchg
cmpsb
or
jbe
lds
fdivr
call
inc
lock
je
xchg
xchg
jno
add
xor
addr16
jno
loope
jns
cmp
iret
inc
mov
sub
repz
jbe
mov
dec
mov
cmc
ret
cmp
sbb
ss
ficompl
inc
ret
mov
xchg
clc
push
lds
sbb
stc
push
add
loope
inc
pop
data16
cmp
orb
icebp
jbe
rorb
xor
loop
pop
test
popf
clc
leave
std
andl
push
cwtl
xchg
cwtl
jmp
stc
clc
pop
out
lret
fnsave
cmp
xor
sbb
jno
xchg
in
sbb
negb
cwtl
jle
fs
dec
and
ljmp
jge
aad
mov
hlt
icebp
fidivrl
gs
xchg
rolb
call
push
xor
xchg
dec
gs
push
aam
lret
xchg
mov
inc
sbb
xchg
ja
ror
or
cwtl
mov
inc
gs
mov
inc
push
push
mov
add
lds
scas
push
or
rolb
push
mov
rorl
movsl
dec
sub
sbb
popl
jno
push
and
popf
shr
push
rcrl
pop
adc
es
mov
xchg
push
push
xchg
sbb
dec
add
sbbb
repnz
or
inc
aas
idivb
sub
and
jbe
pop
pop
or
insb
cltd
push
pop
mov
push
xchg
out
int
cmpsb
xor
test
cmpsb
in
rcll
vpandn
add
jae
ljmp
adc
jns
jp
les
adc
out
add
pop
jno
repnz
pusha
pop
ret
adc
push
outsl
test
push
inc
dec
xor
int
sub
push
in
arpl
fisttpll
sbb
mov
xchg
or
shlb
xchg
mov
fcomps
in
lock
div
jge
fld
pop
imul
push
popf
mov
and
mov
rol
push
add
sahf
mov
repnz
sarl
std
sub
imul
shlb
data16
repnz
sub
adc
lahf
leave
add
stos
push
jbe
mov
jns
hlt
xchg
cmc
out
add
xchg
mov
cs
sub
addl
push
dec
xlat
or
outsl
out
negb
jns
out
adc
xchg
aad
cmp
pushf
loop
dec
pusha
fstpt
mov
data16
mov
or
add
adc
ljmp
jns
insb
add
lahf
jl
cmpl
mov
cmp
leave
adc
cmpsb
lret
push
dec
xchg
mov
loopne
addr16
mov
sub
inc
push
jg
out
repz
aaa
stc
cmp
lods
xor
incl
adc
enter
add
adc
test
imul
mov
pop
test
pop
int
aam
sbb
sahf
xchg
stos
or
mov
xchg
dec
jae
push
shlb
fxtract
jae
pop
cmp
and
adc
or
ja
leave
fsubrs
int3
push
test
xchg
push
sbbb
mov
or
pop
test
add
insl
xor
rorb
add
sub
loopne
insb
inc
pop
lahf
fisttps
push
adc
xchg
fildl
push
adc
push
mov
loopne
sti
mov
aam
push
iret
jo
rcrl
push
mov
call
fists
cmp
jbe
fnstcw
js
mov
jg
in
mov
loopne
push
mov
out
lock
mov
add
mov
adc
push
sar
xchg
insl
inc
imul
push
pop
ret
cltd
xchg
mov
call
out
mov
or
arpl
je
or
mov
subb
test
out
add
mov
jae
mov
cld
sbb
sub
ljmp
outsl
in
or
cli
adc
cltd
aam
mov
leave
idiv
cmp
aam
adc
adc
inc
test
or
testb
scas
and
jge
mov
stc
jge
sub
and
xchg
mov
inc
leave
pop
xor
jmp
mov
jae
arpl
inc
add
mov
mov
cmpsl
pop
xchg
dec
jo
mov
mov
sarl
dec
xchg
adc
or
ret
xchg
ljmp
xchg
mov
add
cmp
call
dec
mov
mov
inc
mov
inc
jge
jl
cmp
xlat
loope
cmc
je
or
pop
leave
mov
cmpsb
repz
mov
imul
jns
cmp
sti
mov
inc
hlt
push
jmp
jnp
add
inc
push
add
cmc
dec
repnz
cltd
adc
cltd
sbb
jmp
mov
sbb
mov
das
add
fs
pop
mov
test
in
daa
stc
pop
xchg
pop
lock
fnstcw
mov
and
sbb
pop
sub
mov
push
aaa
out
popf
ljmp
loop
adcb
lret
inc
pop
xlat
stc
jno
out
enter
xchg
iret
add
push
jo
jns
stos
cltd
add
in
insb
inc
xchg
or
cmp
les
cltd
sar
sub
or
std
push
dec
dec
in
add
mov
shlb
xor
ds
xchg
and
clc
fimull
dec
stc
pop
insb
add
mov
xor
adc
rcrb
lods
call
in
xchg
or
ds
sbb
mov
mov
repz
or
push
js
sbb
fyl2xp1
cltd
insb
popa
out
fisubl
jns
push
jb
enter
mov
adc
arpl
cmpsl
rclb
mov
and
cmp
aad
fisubrl
xchg
cmp
ss
lock
mov
adc
out
add
inc
rolb
sbb
lock
stc
std
and
fildll
popa
bound
mov
lock
cltd
mov
mov
arpl
je
imul
pop
loope
stc
sub
fsts
shrb
inc
cli
and
rcll
mov
push
mov
mov
xor
dec
clc
in
cmpsl
leave
aad
mov
aad
sub
push
rcrb
cmc
push
xor
cmc
add
sub
vpsubq
mov
or
test
mov
es
add
bound
out
popf
or
jge
jle
jnp
push
mov
push
mov
pop
int
aam
push
push
xor
lds
fidivl
neg
mov
cltd
or
lods
dec
lcall
aam
clc
jns
test
inc
xchg
xchg
jle
push
mov
lods
loope
jg
enter
notb
inc
mov
and
adc
or
sub
movsb
movsl
mov
in
mov
lods
cltd
fmuls
fdivs
jge
xchg
andb
rcrb
mov
add
mov
sbb
or
fadds
jbe
jno
sahf
in
lock
or
pop
sub
pop
js
imul
ljmp
leave
adc
clc
out
push
in
mov
jns
or
push
inc
adc
mov
and
lret
rclb
dec
or
lret
jle
outsl
mov
movsb
jle
jl
sbb
shll
push
xchg
and
or
popa
rorl
adc
sub
negl
loop
push
mov
cld
and
stos
push
aad
repz
xchg
fucomi
aad
mov
mov
push
ret
repz
negb
mov
mov
or
xchg
pop
clc
je
sti
fldt
mov
in
xchg
jne
movsb
xchg
mov
and
xor
adc
inc
push
cltd
pusha
mov
js
lock
jo
lods
push
cwtl
mov
or
pop
or
adc
push
push
xchg
roll
jge
cmc
das
sbb
clc
add
xchg
rolb
cmc
cltd
cmp
fisubrl
xchg
add
push
enter
fcomp
mov
mov
test
adc
jge
add
fstpt
adc
divl
dec
movsl
inc
inc
inc
test
add
sbb
adc
clc
cltd
in
xor
mov
mov
push
cmc
sub
xchg
ja
aas
xchg
jmp
shl
mov
clc
loope
push
ror
mov
fs
decl
push
and
sbb
ret
push
cmp
icebp
pop
int3
aas
test
data16
push
lret
fcmovbe
jno
sub
sbb
shlb
scas
mov
pop
xchg
lock
pop
push
add
clc
pop
xchg
popa
insl
pop
imul
imul
repz
lds
loopne
pop
push
in
cltd
adc
loopne
mov
clc
sub
ss
cs
mov
cmp
pop
scas
or
mov
and
les
push
cwtl
and
add
sub
mov
movsb
jle
pop
rol
pop
icebp
or
loopne
pop
sub
fwait
jno
pop
xor
aad
jmp
push
out
adc
add
ficoms
outsl
add
out
imul
ficomps
fnstcw
pop
fistps
pop
and
fisubrl
jg
pushf
mov
and
or
pushf
mov
fsubrs
jae
mov
lds
mulb
test
addr16
push
repz
push
sbb
and
sub
aas
test
sbb
and
sub
and
int3
xchg
sub
adc
xchg
sub
fcoml
repz
add
xchg
mov
rcrl
pop
icebp
xchg
cmp
mov
or
pusha
pop
mov
mov
adc
add
movsl
jns
cmpl
outsl
cli
sbb
jmp
cmp
fcoms
repz
pop
fwait
hlt
pop
rcll
push
cs
daa
pop
xchg
loopne
jecxz
xlat
inc
fldcw
jno
sarl
pop
jecxz
sub
xchg
mov
xchg
clc
out
add
pop
pop
cmp
mov
fsubs
inc
outsb
imul
cwtl
test
pop
outsl
out
mov
fcmovbe
leave
adc
call
in
clc
idivl
scas
scas
sub
xor
arpl
jae
stc
and
cmc
subl
jmp
pop
adc
ror
jmp
jnp
scas
jb
aad
rcrb
jle
loopne
dec
pop
pusha
gs
push
outsb
dec
cmp
cmp
add
inc
outsb
push
jle
adc
icebp
out
shrb
sub
cmp
imul
pop
adc
xchg
mov
shl
dec
and
fiadds
mov
add
push
mov
popl
sbbb
popf
xchg
fnstsw
ret
sbb
dec
adc
inc
call
repz
lahf
rolb
mov
mov
adc
jle
push
test
sbb
add
dec
std
push
xchg
inc
sbb
rcl
movl
pusha
int
dec
push
mov
or
push
loopne
pop
xor
lock
xor
repz
pop
mov
testl
pop
cmp
sbb
sub
mov
aaa
gs
loopne
into
loop
adc
rol
scas
fdivrl
push
mov
or
mov
pop
out
rclb
push
jne
loopne
std
push
stc
outsb
call
repz
nop
je
add
das
sti
faddl
leave
ret
add
movsb
je
add
dec
ficompl
push
out
andb
xor
sbb
push
inc
fcmovnbe
cmp
fstl
testl
push
iret
shl
mov
mov
xchg
outsl
sti
mov
testl
pop
push
outsl
fstl
push
in
shrb
movsl
int
shll
mov
cmc
loop
mov
stos
repnz
outsl
jle
xchg
or
inc
stc
lcall
push
hlt
in
xor
fmuls
not
loop
jmp
or
mov
adc
in
fstl
jmp
xchg
cwtl
dec
mov
xchg
or
test
xchg
mov
xorb
dec
sti
shrl
cmpsl
ja
aam
iret
icebp
mov
inc
insl
incb
aas
jnp
jecxz
inc
jnp
das
xchg
fadd
jecxz
daa
stos
or
in
xor
call
sub
pop
cmp
nopl
xchg
mov
popf
mov
test
daa
sbb
inc
push
ds
sbb
inc
sbb
xchg
sub
cmp
testl
clc
jge
inc
test
sbb
xor
sar
dec
push
jl
testl
jns
rcl
pop
adc
aad
in
xchg
imul
mov
lds
nop
leave
xchg
mov
loope
lds
roll
jno
xor
mov
shll
movsb
cmp
test
arpl
popa
push
push
inc
xchg
scas
add
shlb
dec
cltd
cld
sti
test
sbb
adc
sbbb
xor
pop
movsb
movsl
loopne
adc
js
insl
xor
sbb
out
cltd
cmp
xor
mov
and
xor
cmc
jge
fstps
je
lahf
repz
pop
clc
mov
jno
clc
inc
pop
jp
dec
jge
dec
pop
out
sub
shlb
mov
shll
adc
and
incl
roll
rclb
mov
lret
sarb
xor
outsl
shll
mulb
xchg
mov
shlb
sbb
popf
rcrb
js
adc
sarl
xchg
rcrl
cmpsb
fsubp
inc
ret
add
push
fnstsw
movsb
adc
xchg
into
mov
xchg
mov
mov
cmp
inc
pop
xor
cwtl
xchg
mov
sub
mov
rcll
inc
aaa
cmpsl
jle
jmp
add
movsl
in
jns
stos
addl
scas
lcall
inc
loope
jl
imul
jmp
pop
and
fwait
mov
add
loope
in
xor
adc
or
xchg
loope
cmp
cmpsl
hlt
add
fsubrs
fsubs
push
cs
add
js
outsb
call
jbe
sub
div
cpuid
pop
push
add
fisttpl
in
out
ja
xchg
jecxz
std
pop
fisttpll
jp
aaa
das
data16
shlb
fs
mov
cmp
iret
xchg
insl
data16
mov
inc
add
test
sahf
fstl
hlt
add
sub
add
repz
sub
jmp
ljmp
cmc
je
fbstp
setns
enter
inc
out
leave
inc
inc
shr
xor
push
scas
aam
mov
adc
jne
and
mov
xor
xchg
ja
inc
stc
cltd
js
jns
cltd
inc
rcrl
dec
mov
imul
data16
pop
fs
jle
jb
pop
mov
subw
mov
loopne
out
aas
dec
clc
jg
scas
shlb
aaa
sbb
shl
mov
dec
stos
jae
inc
je
lock
lods
mov
fildl
dec
loopne
jecxz
inc
jg
mov
fimull
aad
out
in
jae
lcall
inc
mov
jmp
or
xchg
cs
div
xor
mov
push
lret
rol
push
jne
jae
inc
mov
lcall
mov
cmp
sub
mov
ja
mov
rcl
test
sbb
clc
adc
mov
mull
xor
xchg
add
xchg
mov
scas
lahf
in
fisubl
lock
pop
mov
xchg
lret
xchg
outsl
leave
add
cmp
mov
jbe
clc
frstor
jecxz
adc
lret
scas
sar
jns
cmp
push
fldcw
mov
fimull
test
aad
cs
xor
xchg
aad
mov
rolb
xor
rolb
or
lods
test
pop
jge
xchg
lcall
gs
daa
adc
loop
cmc
cmp
jo
iret
cltd
dec
mov
popf
loope
add
jmp
add
test
sub
sub
xchg
push
add
jp
push
lods
scas
cltd
jmp
xchg
jmp
and
cmp
arpl
jo
and
int3
enter
push
mov
jg
adc
cmp
aas
fsts
xor
icebp
dec
or
jne
test
cmp
sbbb
fmuls
arpl
dec
test
add
xchg
sub
push
mov
daa
mov
in
pop
adc
mov
inc
sbb
fcoms
xchg
scas
push
add
push
mov
adc
pusha
fxch
icebp
pop
mov
sbb
xchg
fistpll
push
fisubs
negb
xor
lret
pop
inc
sbb
or
sarb
cld
mov
fcmovu
mov
dec
mov
ljmp
sub
xor
adc
add
loop
jmp
testl
loope
repz
push
cltd
pop
adcb
cmp
stc
cmp
adc
sub
or
cli
scas
mov
fstl
mov
push
xchg
pop
xlat
scas
cmp
mov
lods
dec
decb
mov
jle
mov
repz
dec
mov
push
push
cltd
add
lock
xor
add
scas
sti
mov
ret
xor
push
out
sbb
adc
add
test
mov
and
push
push
fld
cmc
int
mov
or
mov
mov
arpl
or
cltd
leave
add
mov
and
cmp
xlat
shll
or
mov
divl
insl
mov
adcl
fnstcw
cltd
mov
negl
push
fucomi
enter
cmp
add
mov
imul
cmpb
mov
popf
cmp
inc
fimull
movsb
mov
push
mov
jmp
std
sti
dec
cmp
leave
dec
xchg
pop
rorl
and
insl
inc
mov
outsl
cltd
xor
adc
into
jp
test
es
hlt
inc
stos
push
sar
jg
lock
sub
jo
call
adc
lret
or
pop
xchg
push
sub
dec
xor
mov
aam
sarl
roll
cli
push
sti
push
test
movsb
or
addr16
sahf
stc
jns
ljmp
ja
punpckhbw
mov
fstps
mov
loope
sbb
xchg
dec
add
sar
enter
fnstenv
mov
and
loopne
arpl
or
imul
mov
push
xchg
adc
mov
enter
ja
into
mov
cwtl
lret
jb
push
fucom
fstl
xor
push
das
and
xor
push
sbb
imul
pop
xor
pop
jmp
push
js
loope
jns
lahf
test
les
adc
push
in
mov
arpl
pop
leave
fucom
fidivrl
popa
shll
pushl
aas
push
push
lahf
popa
repnz
cs
ret
notl
fiaddl
jp
or
stc
push
cmpsl
inc
daa
mov
pop
adc
mov
xchg
shrl
add
int
arpl
adc
int
or
push
xchg
xchg
test
stc
es
or
inc
outsb
or
out
out
add
shl
cwtl
mov
adc
sbb
mov
stc
nop
or
and
loop
mov
sar
nop
dec
pushf
mov
jns
leave
sub
jns
aam
pop
xchg
xor
xchg
pop
cltd
fimull
push
les
rolb
fcomps
testl
pop
in
or
mov
pop
jns
mov
aad
lret
push
jne
and
jge
aam
popa
shll
jg
stos
or
es
mov
shrb
xor
std
or
loope
and
stc
sahf
das
je
icebp
sub
ja
mov
add
push
add
xlat
jbe
add
jns
ud0
mov
and
decl
xor
inc
mov
enter
xchg
jbe
sbb
hlt
cmp
inc
xchg
imul
push
fldenv
divl
fnsave
sbb
adc
jno
inc
loop
xlat
mov
cmpsb
inc
ljmp
stc
mov
pop
pop
mov
jmp
dec
aam
cwtl
or
ret
xor
xor
sbb
xchg
daa
mov
xor
pop
in
test
jo
cmpsb
mov
mov
inc
jl
repnz
jne
xchg
pop
mov
cmp
rcr
xor
das
ficomps
rcl
test
fisubrs
sarl
fistps
sbb
cltd
jle
push
mov
pause
mov
jmp
in
sub
dec
xlat
hlt
pusha
jno
jne
add
fsts
cmp
inc
jmp
jbe
push
mov
inc
cltd
adc
sbb
rcll
xchg
test
push
out
xchg
jne
sbb
loopne
ja
addl
aaa
paddw
or
loopne
imul
mov
jmp
into
cmp
inc
cltd
push
pop
aad
repnz
push
cmpsb
pop
cmc
nopl
mov
jns
cmp
stc
jg
sbb
or
cwtl
xchg
pop
mov
imul
pop
decb
imull
jns
test
jle
mov
fnstcw
xchg
les
push
aaa
pop
clc
packuswb
aam
iret
jns
mov
data16
int
jl
cmpsb
jne
pop
pop
in
ret
clc
into
mov
aaa
sbb
xchg
cltd
mov
cltd
mov
js
cld
mov
scas
fsub
out
pop
pop
adc
mov
ss
cltd
adc
push
jecxz
test
mov
jns
or
daa
jbe
pop
lcall
imull
stc
sub
jmpw
js
adc
and
xchg
dec
fdivr
xor
push
jp
xor
push
push
or
add
mov
cmpsl
dec
inc
adc
push
mov
fmull
ss
fldcw
stc
cmp
daa
jno
cmp
sbb
jmp
and
fchs
mov
mov
cmc
jbe
insb
mov
imul
je
std
xchg
mov
and
ja
jb
adc
filds
xchg
aaa
insl
xchg
push
rcrl
cmp
outsl
cmp
mov
mov
add
mov
cwtl
pop
xorb
orb
cmp
repnz
mov
mov
or
sbb
sti
push
divl
mov
fnstcw
cmpsl
and
adc
push
mov
cmp
cmc
in
push
aad
jg
cltd
xlat
add
pop
idivl
aam
lods
pop
ja
pushw
ds
jbe
lea
inc
hlt
pop
pop
repz
adc
xlat
ret
push
dec
aam
test
or
jno
outsb
leave
sbb
sub
mov
jle
xchg
ja
inc
jle
jns
xchg
sbb
inc
bound
adc
xchg
xchg
mov
scas
nop
fnstsw
jecxz
sbbl
and
jmp
jle
push
adc
outsl
sub
loope
xchg
test
dec
lret
jmp
stc
fistl
push
mov
es
and
cwtl
aad
notl
or
mov
jno
icebp
divl
or
into
mov
sbb
xchg
or
cmc
or
add
jmp
mov
rcr
hlt
push
add
dec
loope
mov
jns
cmp
shrl
in
sub
sbb
in
subl
std
leave
iret
gs
pop
adc
or
add
adc
jmp
ror
or
add
shrl
popf
or
insb
mov
clc
mov
sbb
sbb
jge
stos
rcrb
shl
std
add
inc
cltd
test
shll
jmp
clc
loope
jno
mov
or
fmul
cmc
or
shrl
js
mov
pop
xchg
clc
outsb
ds
fsts
out
rclb
xchg
mov
rcrl
popf
dec
xlat
pusha
push
add
pop
test
mov
cmc
or
mov
cmp
sbb
testb
ja
push
aam
xchg
push
popf
ror
or
out
fldl
mov
popf
inc
addr16
sar
pop
mov
pop
xchg
pop
fldt
pop
sub
push
ret
dec
pop
lahf
sub
pop
aad
testl
call
fcom
cmc
or
sub
xchg
sbb
test
popa
or
mov
jmp
cmc
sub
pop
test
leave
push
mov
enter
add
xchg
fwait
mov
jae
jns
movsb
xchg
pop
jmp
rcrb
fdivs
ror
ja
repnz
incl
mov
jns
dec
add
jno
aad
lea
push
xchg
loop
cmc
adc
scas
cmp
mov
popf
daa
hlt
inc
iret
xchg
and
test
xchg
fisttpll
xlat
jno
imul
fisttpll
inc
clc
cmp
xor
and
adc
or
clc
lock
xchg
sbb
shll
mov
popf
or
jae
cli
aad
lahf
push
pop
mov
clc
dec
xlat
iret
popf
aaa
or
adc
xlat
mov
jmp
or
clc
inc
xlat
popf
mov
xchg
jl
mov
and
cmp
rcr
aam
mov
jge
xchg
add
dec
mov
sbb
mov
add
mov
call
push
pop
xchg
dec
and
fisubl
cmp
mov
sub
sub
xchg
fidivrl
xchg
mov
mov
xchg
test
mov
mov
repz
or
cmc
or
aad
mull
fldcw
mov
jns
cmp
sbb
xor
mov
neg
lret
popa
adc
xchg
inc
aad
divl
fsts
cmc
iret
ja
jge
cmc
add
cmp
aaa
cmp
cmc
or
aad
negl
fsubs
cmc
or
aad
testl
not
or
fadds
cmc
or
aad
imul
fdiv
cmc
pop
mov
cmp
int
outsb
ljmp
jnp
roll
xchg
test
repz
lods
clc
push
stos
fisttpl
pusha
and
pop
pushf
cmp
push
jns
mov
sub
cmp
or
call
mov
inc
mov
shrb
adc
sbb
insb
or
mov
scas
xchg
rorl
push
mov
push
mov
stc
and
sbb
pop
push
jb
mov
cmp
rorb
mov
mov
stos
xor
mov
pop
es
push
xor
inc
repnz
lods
adc
xlat
loope
xor
aam
adc
adcb
sbb
lock
mov
jl
pop
inc
jg
in
jns
sbb
repz
inc
and
xchg
xor
loop
stc
lods
arpl
dec
jmp
jne
dec
push
lods
sub
aad
dec
jmp
ja
imul
aad
sarb
sbb
push
pop
subb
mov
cltd
mov
insl
push
push
jb
adc
xchg
mov
push
and
ljmp
stos
lret
xchg
stos
pop
stc
loopne
outsl
in
adc
mov
xor
xchg
clc
mov
mov
pop
or
sarb
loope
cli
pop
int3
push
lea
push
adc
das
int
outsl
pop
inc
sub
mov
icebp
cmp
mov
andl
loopnew
cmc
cmp
xor
insb
pop
push
aaa
sub
popf
dec
scas
fs
insb
stc
data16
sbb
cmc
cmp
push
fndisi(8087
sbb
test
jl
movsb
stc
jmp
jecxz
sub
int
ss
clc
js
inc
mov
jle
pop
cmc
mov
pop
jo
mov
test
xor
mov
outsl
negl
mov
inc
cltd
or
sbb
idivl
xchg
jmp
xchg
push
shl
mov
jb
pop
rorl
imul
dec
add
or
inc
sub
adc
adc
sub
andb
cltd
je
stc
xchg
imul
aad
cmp
jno
repz
enter
mov
rolb
xor
add
pop
cmp
cli
jne
push
dec
iret
ret
adc
sub
mov
inc
test
cmp
std
das
mov
rorl
inc
insl
xor
lcall
pop
sbb
ljmp
outsb
dec
jb
cmp
in
jge
inc
mov
mov
xor
cmp
repnz
in
push
cli
add
mov
jbe
dec
incb
sub
mov
add
lock
add
call
xlat
jp
pop
mov
roll
mov
enter
pop
scas
cmpb
call
sub
loopne
mov
pop
data16
lods
insb
rcrl
push
aas
icebp
stos
cmc
mov
ret
loop,pt
cmp
fwait
out
push
cs
xstore-rng
cmpsl
xchg
cmp
jg,pn
test
cltd
sbb
mov
push
das
cltd
or
cmpsl
in
insb
add
xlat
and
xor
push
or
push
lret
shl
ret
cmp
push
add
fistpl
es
push
push
sbb
push
mov
jns
flds
xchg
xchg
dec
and
mov
dec
stc
mov
cmp
sbb
mov
xchg
jns
xchg
rcl
cmpl
fiadds
das
icebp
loope
xor
mov
sarl
mov
fcompp
mov
mov
xchg
xor
jmp
cmpsb
mov
loop
cmp
push
nop
out
mov
push
push
jns
push
mov
add
std
push
shl
std
mov
push
sub
rcll
in
out
adc
xchg
xchg
ja
or
xor
xor
cltd
lahf
negl
daa
sarl
cmc
in
cmpsb
mov
sbb
ds
inc
mov
cmp
add
lea
inc
xor
mov
push
test
cmp
loope
scas
ficomps
test
dec
mov
rcr
pop
jbe
xor
test
shll
xlat
pop
jbe
cmc
push
aad
sbb
mov
arpl
rcl
sbb
jbe
jo
push
xlat
lret
pop
jb
test
imul
shll
sbbl
adc
jbe
std
xchg
loopne
ret
fsubp
xchg
rcl
nop
push
add
push
aaa
sub
cli
dec
out
mov
daa
push
arpl
inc
jp
cmp
jp
cmpsb
lods
arpl
inc
jp
cmpsb
lods
daa
adc
mov
out
xchg
push
inc
adc
das
inc
push
leave
movsb
loopne
pop
frstor
pop
lahf
sbb
sbb
or
not
push
lcall
scas
or
clc
roll
imul
sbb
or
push
outsb
cmp
lods
xor
xchg
and
rolb
popa
iret
jg
lods
jecxz
mov
loopne
lcall
mov
sbb
pop
aad
push
add
jle
outsb
out
xchg
outsl
popa
stc
push
mov
push
ret
rol
fsubs
fnstsw
lea
mov
fcompl
jge
shl
sub
add
enter
fmuls
mov
repnz
sbb
push
shll
outsl
in
jmp
repz
cmc
aam
mov
shlb
push
add
jno
repz
out
out
arpl
inc
mov
std
fwait
xor
and
aad
outsl
cltd
adc
loopne
jno
fistps
pop
int3
jg
sub
adc
cwtl
std
pop
nop
roll
js
cmp
sbb
arpl
xor
test
sbb
out
daa
jne
pop
imul
dec
sub
jmp
std
popa
int3
fyl2xp1
dec
stos
xor
int3
pop
pop
into
das
pop
rclb
dec
mov
sub
cmp
stos
ljmp
shrl
addr16
aaa
das
sti
leave
adc
movsb
jge
jne
push
mov
pop
add
psubb
das
negl
icebp
fbstp
iret
addr16
or
int
repz
pop
in
rclb
push
fdiv
jae
adc
push
push
mov
jg
hlt
mov
push
int3
movsb
popa
movsb
js
dec
mov
mov
nop
xor
adc
or
add
inc
xchg
movsb
jnp
lods
jecxz
xor
push
inc
pop
xlat
jbe
mov
mov
adc
or
je
xor
sti
xor
jle
int3
lahf
flds
stc
aad
sub
xchg
jg
dec
fidivrl
inc
scas
ljmp
or
push
inc
imul
pop
fldcw
pop
push
popf
jo
dec
jmp
test
lea
or
rcrb
mov
je
jg
push
dec
imul
jge
cmp
xlat
sub
in
lock
mov
in
hlt
sub
rcrb
cmpl
pushl
out
jns
adc
mov
or
sbb
arpl
pop
sbb
fmull
sbb
sarl
mov
mov
sub
movl
and
test
jmp
out
sti
pop
and
scas
in
mov
dec
in
inc
cltd
clc
popf
andb
mov
jmp
add
lcall
push
loopne
aam
fldcw
inc
in
or
xor
push
in
hlt
test
add
mov
aad
push
cmc
notl
adc
lret
test
add
sbb
dec
mov
push
aad
ds
add
pop
inc
sbb
add
les
push
fiadds
popa
stos
daa
shl
fwait
xchg
jge,pt
insl
ds
out
les
imul
mov
add
lds
sbb
xchg
add
or
icebp
addr16
fistpll
or
inc
mov
jp
xchg
bound
jb
xchg
xchg
add
sarb
mov
xchg
andl
les
push
fxtract
inc
stc
adc
mov
inc
shl
lret
push
ja
rep
lret
imul
int3
push
fcoml
or
or
fdivl
lret
stos
popf
pop
clc
push
inc
cmp
add
notb
xchg
outsl
es
mov
cmpsb
ss
lret
movsb
notb
inc
add
jns
mov
and
movsl
add
push
push
iret
cmp
out
out
xchg
mov
sti
push
pushf
in
scas
mov
or
decl
lock
xchg
jecxz
add
mov
pop
push
mov
movsl
flds
ds
cmp
jne
xchg
repz
popf
daa
popf
xchg
fisttpll
jecxz
in
mov
fwait
mov
jae
lahf
sub
xchg
pop
call
insb
lods
scas
push
mov
shlb
push
dec
xchg
dec
add
adc
adc
inc
shrl
ficomps
cmp
jo
sar
scas
pushf
fiadds
mov
adc
pop
jb
cmpl
cmp
nop
iret
in
mov
xchg
pop
cmc
insl
inc
adc
jns
cmp
or
lock
loopne
mov
ret
shrb
add
push
fldcw
cmp
mov
aad
mov
test
mov
push
mov
mov
lret
loopne
outsl
subl
sbb
sbb
rcrl
pop
loopne
and
pop
or
sub
jb
inc
scas
or
inc
mov
cltd
lcall
rorl
or
fnstenv
das
scas
jbe
clc
stc
dec
ss
sahf
pop
int
push
fistpl
repz
xor
test
or
adc
mov
idiv
cmp
bound
lret
imul
lahf
push
shrb
sbbb
stc
cmpb
sub
cwtl
mov
int
shll
cmp
cmc
icebp
je
push
sub
sub
xchg
in
in
xchg
cs
mov
jmp
mov
in
popf
movsl
aad
std
or
mov
leave
sbb
orb
add
cltd
fwait
cmp
dec
mov
aad
mov
mov
sbb
aad
stc
cmpsl
clc
les
cmc
das
loope
shlb
ja
mov
lret
mov
lods
ffreep
xlat
lcall
xchg
rcll
jmp
mov
or
das
cmp
mov
sbb
dec
xchg
fisttps
mov
leave
js
int
push
bound
xchg
xchg
push
frstor
test
cltd
xor
xchg
push
repnz
outsb
aad
jg
push
popf
insb
stc
dec
push
jbe
lret
xchg
inc
add
cmp
or
ljmp
fsts
cmpsb
movsl
lcall
insl
scas
icebp
xor
xchg
flds
cmp
outsb
xor
imul
lret
xchg
fucomip
lret
test
outsl
mov
mov
adc
scas
fcmovu
xor
cmpsl
stos
ret
aaa
into
pop
xor
jno
test
leave
push
jne
xlat
inc
xchg
roll
fadds
lcall
jbe
cli
loop
lods
sbb
pop
cs
cmp
into
lcall
sbb
push
in
dec
jno
xchg
add
test
lock
pop
stos
pop
push
dec
xorb
push
sarb
out
xor
pop
test
popa
adc
enter
push
clc
add
notb
inc
lret
sbb
xor
xlat
sbb
cmp
add
mov
leave
or
mov
jg
sub
push
mov
jae
adc
jo
mov
pop
test
or
lcall
aam
and
push
cmp
lods
sti
add
loope
sbb
add
es
push
add
sbb
push
es
aad
fldcw
mov
mov
lahf
je
fsubr
xchg
push
cmc
or
out
leave
inc
mov
dec
mov
fstpl
sbb
inc
jbe
sub
xor
popf
imul
xchg
repnz
or
xchg
notl
or
inc
shrl
andb
or
outsb
arpl
outsb
cli
mov
sbb
js
icebp
ret
xchg
std
xor
shll
adc
aad
gs
xorl
sbbl
adc
push
jno
je
push
incb
push
jnp
jle
test
mov
mov
lcall
cltd
call
push
or
dec
and
aad
add
rclb
imull
xchg
in
rcrb
mov
or
addl
stc
mov
push
jle
inc
out
cltd
mov
cmc
in
add
adc
neg
xor
fsubs
das
mov
inc
ret
iret
mov
or
cltd
add
iret
fstpl
icebp
mov
add
xchg
push
aad
stos
mov
shrl
add
paddusw
je
push
testl
insb
jns
pop
out
mov
cmp
sti
ss
enter
pushl
sbb
data16
push
leave
and
sar
and
add
ds
fnstsw
mov
iret
cltd
and
dec
decl
ror
mov
or
sub
mov
cmp
in
shl
shrb
mov
mov
mov
aam
or
xor
sub
cmp
push
xor
aam
or
dec
push
add
popa
roll
dec
lcall
adc
sti
mov
fcoml
movl
aam
and
movsl
cs
xor
xor
dec
repz
pop
in
jl
sub
shlb
add
out
add
popf
xchg
aad
repnz
push
clc
fldl
mov
adc
push
fbstp
or
add
sti
ret
imul
test
ret
pusha
adc
xor
jmp
clc
gs
push
jae
xchg
int3
fisttpll
mov
push
sahf
cmp
mov
fists
mov
fdivr
add
aaa
pop
loopne
mov
jle
mov
jecxz
jns
in
mov
jne
aaa
fdivrl
and
pusha
mov
adc
mov
fnstcw
pusha
std
popa
lds
roll
or
out
insl
jp
call
and
pop
mov
cmp
adc
inc
in
test
jno
add
mov
cmp
jg
mov
adc
xchg
mov
xor
jno
mov
sti
call
push
xchg
push
in
mov
fstp
in
push
ja
lea
loop
and
or
xchg
sub
ljmp
negb
outsl
test
sti
adc
iret
repnz
xor
adc
in
dec
fldenv
jmp
loopne
mov
sub
cmp
ljmp
jp
js
sub
popa
std
dec
push
mov
movsb
cmp
fisubrl
testl
cmp
mov
push
or
imul
jne
mov
shlb
jle
les
xchg
mov
xor
xchg
int
mov
mov
lret
mov
loopne
clc
outsb
imul
jle
iret
add
mov
push
and
cmc
popf
add
test
pop
and
push
xor
cmp
popa
lret
xchg
lahf
mov
cmpl
dec
fwait
scas
xor
adc
add
jecxz
pusha
jns
rcl
out
scas
mov
sbb
scas
les
in
push
sbb
int3
cmp
in
arpl
xchg
ja
jge
ret
ja
pop
cmc
inc
xor
adc
lods
pop
gs
incl
cmp
aad
fistpl
aad
ljmp
xchg
jmp
dec
push
dec
lods
inc
xchg
pop
cltd
out
nop
clc
adc
testb
scas
cmp
pop
inc
dec
xchg
fidivrs
push
xchg
xor
fistpll
add
adc
fldcw
in
leave
loopne
outsb
mov
aad
in
mov
add
cmp
sub
push
leave
test
cmp
test
mov
xchg
push
stc
jecxz
cmc
movsb
aam
xchg
test
xor
lret
movsl
xchg
sub
mov
cmc
fisubs
push
stc
cwtl
jmp
leave
scas
stos
out
fimuls
std
sbb
stc
adc
xchg
fnstcw
mov
addr16
mov
or
loope
adc
in
test
shll
lret
xchg
jl
mov
jecxz
add
ja
dec
mov
add
lcall
in
jbe
lret
inc
mov
movsb
pop
push
rcll
or
lret
sub
js
lock
scas
js
dec
xchg
mov
pop
stc
inc
dec
sbb
icebp
pop
lret
adc
daa
mov
and
cmp
push
out
cmc
leave
jmp
std
mov
in
lock
sarl
xlat
adc
push
adc
push
pop
cmpsl
stc
mov
jne
out
rcll
adc
fdivl
imul
cmp
iret
pop
push
pop
sub
mov
test
daa
sub
gs
jb
repnz
orb
dec
stc
fstl
movhps
jg
push
shr
sti
mov
jnp
test
dec
mov
in
xchg
sarl
inc
orl
repnz
insb
mov
jmp
jbe
sbb
jb
push
shrl
sbb
dec
loop
aas
das
sti
xchg
icebp
aad
cltd
or
aam
jg
jge
push
mov
sbb
xchg
jo
xchg
cmc
shll
cld
xchg
mov
adc
and
mov
stc
std
sbb
and
add
test
scas
cmpsl
fdivs
loopne
aad
mov
sbb
dec
mov
cmc
js
stc
mov
stos
mov
cltd
inc
inc
sub
inc
sbb
sahf
add
lds
ljmp
add
js
mov
jecxz
and
jecxz
ret
fistps
xchg
inc
lds
aad
in
into
add
mov
inc
push
ja
mov
ficoms
lds
pop
popa
push
cltd
mov
cmp
aam
es
adc
rolb
aaa
mov
scas
sub
insl
addr16
mov
mov
imul
psubq
mov
jg
or
cwtl
xor
call
mov
adc
and
add
xchg
cmp
inc
cmp
iret
and
pop
cmp
inc
mov
sbb
inc
sahf
fadds
pop
jae
pop
xor
push
sbb
shl
xor
or
push
xchg
push
aaa
push
scas
pop
out
int3
mov
inc
inc
jae
in
mov
cltd
cmc
lahf
cld
addr16
mov
lods
shl
inc
sarl
sub
xor
mov
out
cmp
adc
push
push
cs
push
xor
test
mov
xlat
les
fimull
ret
cmp
mov
sub
andl
in
test
jb
jle
mov
insb
dec
jns
jmp
ret
cmpsb
shll
into
cs
fsubrs
xchg
sbb
jmp
jecxz
mov
aaa
add
fsubrs
xchg
mov
lcall
inc
add
pop
loopne
jb
cmp
xchg
mov
mov
pop
adc
adc
push
nop
ret
icebp
inc
mov
aad
mov
cli
fstps
add
test
rolb
ljmp
imul
roll
andb
cmp
xchg
rcrl
fstpl
push
out
jb
fisttps
mov
cld
movsl
sub
and
aam
addl
movsl
cmc
mov
adc
movsb
test
adc
jmp
fnstenv
push
ja
lret
cld
std
repnz
lds
ljmp
cmp
xor
mov
cmpsl
lods
in
ret
mov
pop
xor
adc
mov
jo
adc
sub
imulb
xchg
adc
xchg
test
mov
jp
lds
sbb
out
fistpll
shl
mov
aad
mov
push
jae
fincstp
mov
sbb
iret
ja
adc
loope
xchg
xchg
enter
stc
add
ret
sbb
mov
loopne
jae
fidivrs
push
xchg
fdivrs
daa
fucom
pop
mov
popa
jbe
aad
xchg
mov
dec
sub
push
xchg
fldenv
mov
dec
mov
xlat
add
and
adc
out
lcall
and
jmp
insb
add
or
push
add
jne
xchg
ret
inc
fdecstp
scas
clc
xor
pop
jns
mov
sub
and
cmp
call
sar
xlat
mov
idiv
mov
clc
cmp
or
jbe
cmp
cmp
test
pop
popf
or
sar
jge
and
cmp
sbb
xchg
xchg
jle
push
cmp
test
inc
int3
repnz
adc
test
lock
std
inc
jle
orl
pop
jno
add
jle
xchg
inc
xchg
push
rorb
inc
jle
xorl
lds
sbb
lock
cmp
jb
xor
cltd
lods
jl
jecxz
xchg
mov
xor
movsl
add
inc
xchg
push
cwtl
xchg
xor
add
mov
fs
add
call
cmp
jecxz
mov
fistpl
sarb
fwait
mov
add
cmpsl
cmp
repz
mov
mov
jecxz
test
arpl
and
mov
insl
das
inc
cmp
or
les
cltd
clc
fdiv
mov
cmc
test
mov
cmp
dec
lods
jns
xor
and
and
aaa
xchg
ja
outsl
mov
cmpsb
insb
cmp
add
outsl
aad
movsb
or
aam
dec
xchg
repnz
dec
fdivr
push
jns
mov
jl
xchg
pop
jmp
jecxz
cltd
or
mov
clc
and
lods
cmc
sarl
jbe
mov
mov
pop
xor
andb
aad
pop
xchg
in
mov
fistpll
int
outsl
inc
js
jmp
je
xor
call
pop
cmc
xchg
pop
aas
mov
mov
lods
xchg
push
xchg
fnstsw
or
sarl
xor
push
dec
xchg
sbb
daa
aas
out
push
cmp
mov
or
sub
push
mov
iret
ds
cmpsl
popa
xor
pop
popf
clc
js
lea
shll
mov
xchg
std
xchg
or
jp
cmp
dec
repz
repnz
jae
icebp
mov
adc
in
or
xor
pusha
xchg
cmp
adc
nop
mov
push
getsec
dec
cwtl
dec
and
fscale
iret
fsts
cwtl
ret
sub
jecxz
or
jecxz
cltd
add
lea
xlat
gs
mov
inc
andl
mov
adc
hlt
jecxz
fdivs
xchg
push
ficomps
pop
repnz
adc
leave
jno
adc
xor
dec
mov
cltd
imul
gs
mov
out
mov
fdivrl
lcall
and
clc
jmp
insl
std
push
push
jl
pusha
jecxz
add
push
pop
rolb
sarl
xor
jl
cmp
or
stc
mov
into
das
inc
fdivrs
xchg
pop
notl
inc
popf
orl
in
adc
lea
mov
dec
cmpsl
inc
in
cwtl
xchg
ret
or
xchg
xchg
add
or
insl
aad
shlb
mov
movsb
orl
push
sbb
hlt
cli
lea
push
jle
xchg
fcomip
xchg
jp
mov
and
stc
jg
fdivr
inc
or
sub
jnp
push
push
in
pop
xorl
lods
insl
les
in
dec
aaa
inc
push
and
inc
or
dec
popf
xor
out
cmpsl
pusha
mov
cltd
xlat
loopne
sub
xchg
mov
adc
xor
out
repz
mov
test
dec
or
xchg
xchg
movl
sbb
ljmp
shl
push
xor
fs
sbb
adc
movsl
mov
stos
sub
leave
mov
mov
push
mov
adc
or
or
jb
insb
jmp
shlb
dec
sub
shlb
out
call
xchg
add
inc
jmp
cmp
stc
mov
sbb
ret
shlb
jb
ror
xchg
xchg
or
bound
mov
stos
mov
adc
stos
adc
pop
xchg
or
das
stos
or
negb
xchg
mov
adcl
rolb
mov
rcrb
aam
fucom
stc
inc
stc
and
js
xchg
mov
adc
fbld
aaa
test
xchg
aam
add
test
push
xor
add
orb
push
mov
jnp
mov
enter
shlb
aaa
sub
sbb
or
imul
or
jecxz
decl
dec
pop
rclb
jl
outsb
dec
daa
cltd
jle
clc
test
sbb
int
jns
pusha
data16
mov
leave
inc
es
pop
mov
dec
xchg
lods
in
cmc
adc
sbb
mov
cld
jg
inc
jmp
cld
add
idivl
cmp
dec
les
rcl
movsb
jns
in
cmc
ss
xor
js
cmp
xchg
push
inc
cld
addr16
cltd
pop
frndint
adcl
or
mov
mov
cmp
iret
fidivl
test
inc
mov
jne
mov
mov
or
pushf
lret
lock
and
xor
or
xor
lock
dec
bound
aad
int3
adc
or
xor
cltd
inc
adc
push
cmc
mov
dec
push
jns
and
arpl
gs
jne
dec
add
xor
pop
push
adc
or
mov
fsubrs
add
cmp
jle
sbb
mov
leave
lahf
rcl
not
out
in
movsb
dec
cmp
dec
stos
mov
cltd
fscale
ret
cld
pop
sub
lcall
sub
push
adc
push
mov
adc
push
popf
add
mov
pop
lds
cmp
sbb
xchg
cmc
inc
and
add
and
mov
stc
imul
cmp
dec
ja
cmp
pop
push
divb
rcll
iret
bnd
rcll
jecxz
sub
arpl
cld
test
pop
jp
mov
mov
xchg
mov
pop
lcall
sarl
out
mov
push
push
and
hlt
adc
mov
pop
fnstcw
sbb
xlat
rorl
mov
jmp
push
xchg
jmp
xchg
xchg
hlt
pop
adc
rcll
fadd
ret
je
loope
xchg
xchg
push
mov
xchg
sbb
rorl
hlt
push
xchg
rcll
cmp
es
pop
xor
ret
sahf
xchg
push
rcrb
shrl
or
adc
sub
cmp
xor
mov
xchg
aad
or
ret
repz
adc
notb
or
lret
test
pop
mov
adc
adc
outsl
sub
sbb
push
clc
cmp
out
sbb
xchg
cmp
xor
mov
lret
test
fdivs
xchg
mov
shll
in
cmp
mov
loope
jno
aad
sub
shrl
aad
add
adc
mov
cltd
pop
xor
xchg
fs
divl
not
hlt
jae
aaa
clc
jb
push
and
mov
sbb
pushf
cwtl
sar
sub
cwtl
test
pop
inc
data16
xchg
or
loope
jno
aad
cltd
jnp
stc
stos
cmp
stc
or
cmp
cltd
pushf
imull
mov
sbb
xchg
push
insb
or
stos
jne
push
jns
add
xor
xchg
cwtl
enter
add
mov
daa
or
xor
jmp
imul
sahf
idiv
mov
adc
adc
shll
cmp
mov
nop
pop
jle
mov
push
scas
sub
push
push
jns
adc
mov
jbe
movsb
inc
mov
adc
add
dec
mov
leave
mov
fcomps
scas
dec
jbe
mov
and
cmc
push
loope
push
pop
push
adc
inc
xor
gs
nop
popa
leave
fnstenv
adcb
ja
aad
daa
repnz
push
or
into
testl
cli
loope
mov
mov
cld
jne
sti
mov
jmp
jp
repz
lret
inc
iret
pop
pusha
pop
icebp
iret
mov
cs
push
cld
and
shlb
aas
and
imul
sti
cmp
adc
jns,pn
mul
push
inc
cltd
mov
mov
jns
rol
shrl
mov
rcll
clc
mov
hlt
cwtd
into
mov
or
cmpsb
mov
cmp
movsl
lcall
aad
rcr
roll
mov
ja
adc
aas
ja
jne
test
fsubp
jecxz
vmovntdq
cs
test
pop
imul
dec
xchg
or
xchg
aam
sbb
xor
out
outsb
sbb
imul
hlt
xchg
mov
or
sbb
stc
or
repnz
xchg
js
adc
lahf
cltd
or
sbb
pop
xchg
fdivs
ljmp
lahf
adc
inc
and
jns
cmp
insl
inc
push
push
dec
jge
inc
stos
jp
leave
push
sub
aam
aad
inc
cs
mov
aad
or
je
dec
jae
jns
in
lock
leave
pop
or
out
test
scas
and
iret
mov
out
popa
in
xor
mov
xor
fdivr
gs
stc
lods
cmpsl
ds
incb
sbb
adc
cld
shlb
dec
xchg
pop
jno
test
xchg
xchg
les
pop
into
bound
negb
push
mov
and
rorl
in
mov
icebp
jg
aad
push
aam
insl
pop
fcoms
sub
lods
xchg
je
fcmovnu
scas
int3
ror
ja
call
es
leave
sub
pop
jle
call
icebp
ja
jmp
cmp
iret
and
mov
or
jne
dec
cmp
adc
test
pop
rcrb
fst
mov
adc
ret
cmc
push
idiv
divl
scas
scas
or
adc
push
adc
lock
push
shl
shl
pop
push
repnz
jne
das
or
mov
mov
imul
cmp
iret
aad
xlat
loopne
mov
mov
aad
cmp
xchg
jge
test
inc
arpl
mov
ja
shll
jg
test
fwait
pop
jge
cmpl
push
mov
inc
testb
divl
adc
repz
ds
aad
stc
cli
add
xor
stos
imul
fisubl
mov
push
in
ja
ret
iret
sbb
sbb
mov
xchg
jmp
test
icebp
or
mov
mov
push
out
push
rcll
fnstenv
jo
shll
add
cwtl
loopne
and
out
cmp
dec
ljmp
dec
lods
cmp
stos
lds
and
and
and
and
and
and
and
and
and
and
and
and
inc
and
push
and
arpl
pop
bound
pop
stos
pop
push
pop
mov
pop
lret
pop
ret
pop
sbbb
fistpl
push
aam
int3
loop
sar
mov
shl
xchg
ss
jae
sbb
shll
mov
mov
repnz
mov
jb
cltd
stc
clc
xchg
mov
xchg
popa
push
xlat
pop
adc
or
jmp
rcll
repz
imul
clc
xchg
inc
stc
fstl
clc
cmp
pop
jecxz
js
notb
push
jne
sbb
sbb
mov
rcrl
loope
pushf
push
loop
jae
mov
hlt
xchg
setb
rcl
push
jo
push
out
fdivs
divb
repz
pop
mov
adc
xchg
loope
mov
shl
push
shll
fdivr
sub
lods
dec
lahf
xchg
inc
stc
and
adc
lods
xor
lock
xlat
out
adc
stc
rorl
stc
sbb
icebp
adc
dec
push
lock
adc
mov
mov
cwtl
xchg
shrb
fldcw
pop
pop
or
push
shrb
sahf
inc
sub
or
inc
mov
idivb
push
mov
mov
leave
outsl
xor
xor
inc
adc
imul
mov
push
testl
push
pop
dec
push
xorb
fldt
xchg
ja
adc
push
cwtl
mov
mov
rcll
rcr
cmp
call
jbe
inc
jmp
mov
cmpb
xchg
in
pop
fldcw
adc
mov
stos
out
out
in
xchg
jbe
loope
insl
add
adc
pop
in
fmuls
mov
jle
xadd
addr16
mov
mov
icebp
leave
nop
xchg
cmpsl
pop
test
sbb
rclb
sub
fistpl
cltd
push
add
inc
in
lods
add
jmp
sub
in
test
neg
jns
xchg
stos
rorl
lds
sti
xchg
adc
xlat
leave
fstpt
push
filds
xor
repz
mov
insb
add
clc
je
xchg
idiv
mov
cltd
xor
cmp
mov
nop
pop
into
cld
fldenv
mov
leave
add
push
jne
adc
jnp
sub
adc
rcrl
cmp
push
in
add
test
pop
das
adc
cmpsl
shl
pop
jl
jae
adc
push
cltd
or
xchg
sbb
ror
mov
pop
int
sub
xchg
push
enter
hlt
fidivrl
xchg
test
lea
pop
cmp
pop
mov
mov
rcrb
adcb
lret
test
add
stc
mov
mov
push
cltd
dec
test
popf
push
clc
push
mov
add
dec
cli
testb
dec
test
dec
js
je
mov
pop
and
mov
sub
dec
lea
daa
clc
xchg
xchg
es
adc
adc
data16
push
jmp
jbe
pop
cmpsl
push
adc
pop
add
dec
mov
pop
jne
sti
sub
and
add
sbb
adc
sub
and
cmp
cmp
xor
shrl
inc
sbb
pop
pop
pop
pop
pop
and
and
and
xor
dec
sub
cmp
push
sbb
xchg
mov
pop
sbb
rcl
sbb
push
aad
or
rcl
push
lahf
rcll
mov
cmpb
rcll
aad
ficoms
xchg
xchg
mov
test
scas
push
xchg
pop
shll
fistl
sbb
or
ss
mov
popf
rcl
or
push
xchg
sbb
clc
hlt
out
xchg
xchg
push
xchg
mov
adc
js
fsubs
hlt
nop
repz
mov
shll
shll
cmp
pop
shl
call
push
xchg
inc
rcrl
mov
pop
rcl
sbb
out
mov
stc
pop
outsl
stc
push
out
mov
call
rcll
mov
or
test
rcrl
fsts
rcr
iret
pop
xchg
shll
push
cmc
push
rclb
mov
push
mov
push
aad
aam
pop
repz
jae
push
pop
loop
fst
popf
hlt
loope
xorl
jb
lods
leave
adc
inc
push
mov
add
out
xor
outsl
insb
xlat
mov
cmpsb
mull
xchg
push
scas
imull
pop
dec
xchg
fwait
pushf
ja
mov
fimuls
pop
sbb
cli
jns
sbb
xor
shl
and
shll
xor
add
pop
add
inc
mov
notb
nop
test
xchg
jae
inc
push
aad
js
add
jne
out
push
rorl
mov
lret
scas
dec
aaa
push
flds
xchg
push
push
repz
xchg
jbe
cmc
xchg
rcll
sahf
sar
imulb
jmp
mov
out
shll
dec
movsb
cld
sub
cmp
loope
jne
dec
aam
hlt
inc
push
xchg
mov
sbb
cmp
cltd
or
adc
cmc
pushf
cmp
int3
adc
scas
mov
inc
sub
mov
cmp
add
je
cwtl
push
mov
and
mov
or
push
adc
leave
ja
rorl
mov
mov
sbb
mov
cmpb
lods
jns
fcmovbe
leave
or
push
mov
jbe
cmp
cmp
sbb
or
sub
jnp
stc
rcr
sub
pop
adc
sub
test
repz
call
nop
out
lods
in
jge
cwtl
scas
je
test
and
idivb
imul
movsb
jmp
icebp
shll
jp
add
adc
imul
pop
stc
jmp
in
repnz
shl
out
imul
push
testl
push
jbe
cld
mov
clc
xchg
sarl
push
sub
xor
sbb
push
lods
mov
mulb
inc
and
cmp
int3
add
rcrl
dec
aas
mov
stc
clc
cmp
mov
js
fcom
jns
pop
dec
add
idivl
xchg
ficoml
jl
nopl
cmp
std
popf
xchg
test
adc
sbb
divl
fcoml
mov
cmp
leave
shlb
idiv
nop
mov
clc
push
ja
insl
sub
movsb
mov
push
adc
xor
xchg
adc
rcrb
cwtl
push
arpl
rcrl
xor
pop
mov
je
push
jb
push
push
test
nop
insl
fsts
xchg
lods
rclb
mov
aam
sbb
push
aam
sbb
repnz
xchg
jmp
lds
sbb
insb
add
fldcw
adc
dec
movl
adc
xchg
xor
sub
add
fcompl
sbb
jb
mov
push
push
lahf
mov
fwait
pop
out
cmpsl
adc
icebp
js
dec
xchg
mull
mov
cmp
mov
jmp
xlat
add
mov
cs
call
lahf
jge
dec
leave
sti
int3
pop
mov
hlt
mov
sbb
pop
out
loope
jge
scas
lock
mov
push
dec
jbe
outsb
lds
sbbb
scas
pop
arpl
inc
lea
jns
out
pop
sti
jle
rolb
int
lret
mov
cld
jecxz
dec
xchg
das
inc
and
mov
lahf
xchg
xchg
mov
rcr
push
xor
sub
jg
subl
lret
add
and
fcoms
cli
mov
outsb
cld
cltd
pop
add
mov
gs
stc
fisttps
pop
mov
sbb
inc
cmpsl
lcall
iret
and
pusha
jns
cmp
adc
out
outsl
idiv
enter
hlt
pop
jne
xchg
pop
push
add
adc
out
mov
xchg
jmp
mov
cmpsl
scas
inc
mov
xlat
xchg
xchg
mov
jbe
addr16
icebp
enter
aad
and
mov
pop
fidivrs
stc
imul
jae
adc
push
andl
add
sbb
push
aaa
xchg
push
adc
jns
cltd
jno
mov
lds
jb
cltd
cmc
xchg
lret
icebp
arpl
adc
cmpsl
mov
iret
rol
jne
es
push
mov
stos
push
fdivl
out
adc
fnstenv
mov
pop
mov
lret
adc
aam
push
rep
daa
adc
jecxz
xor
loope
add
jg
or
sbb
fdivl
or
inc
jns
mov
call
loopne
lcall
ret
mov
jle
jl
popf
idivb
push
push
xor
dec
dec
mov
jno
roll
cwtl
jle
icebp
sbb
adc
fmuls
mov
xor
xchg
inc
or
mov
imul
dec
gs
mov
xchg
aad
lock
push
jecxz
xor
cmpsl
sub
xor
jne
mov
push
jmp
push
testb
jbe
in
sub
push
mov
lret
sbbl
stc
xchg
push
fnsave
stc
fnstenv
push
adc
outsl
jge
jl
xor
cmp
lret
in
or
or
scas
aas
lods
movsl
cmc
scas
andb
jno
js
ret
pop
in
xor
clc
lods
pop
stos
push
decb
movsb
mov
imul
push
sub
lods
dec
fnstsw
jmp
movsb
push
testb
lret
adc
aaa
std
mov
mov
inc
int3
out
add
sbb
iret
jle
ret
shlb
iret
xor
into
mov
or
add
adc
mov
divb
pop
dec
mov
lock
shll
aaa
in
fucomi
outsb
loop
adc
pop
mov
stc
push
jns
sub
xchg
shrl
or
mov
int
es
stc
mov
pop
xchg
jmp
mov
cmp
and
cmpsb
xlat
ja
fnstcw
adc
cltd
mov
adc
stc
sbb
adc
clc
mov
adc
call
aam
lea
push
push
in
lahf
mov
sbb
repz
mov
shrb
loop
testb
inc
rcl
jb
sbb
xchg
and
mov
jg
xchg
test
out
cld
je
mov
push
add
pop
jbe
mov
andl
or
mov
xlat
sbb
scas
adc
rclb
rorl
cmpb
ss
and
mov
add
cmc
mov
mov
stc
xchg
jle
sbb
adc
shrb
loopne
mov
jbe
leave
and
int3
xor
aad
rorl
pop
rclb
cltd
cmp
sub
lret
cmp
out
pop
push
js
cmc
mul
and
outsl
lret
flds
or
mov
xor
xchg
nop
jmp
mov
mov
cmp
lahf
sub
push
mull
std
clc
ret
adc
jo
aad
push
or
cltd
fisttpll
jns
loop
lahf
test
shrb
scas
push
cltd
xchg
cmpsb
xlat
add
xor
les
or
cmp
loopne
subl
add
loope
pop
frstor
mov
cmp
dec
mov
out
cmp
jno
daa
pop
push
or
aaa
jo
push
movsb
jl
cwtl
jle
sarl
dec
inc
inc
jo
lret
clc
cmp
adc
notl
mov
flds
out
mov
mov
mov
add
mov
sub
mov
sub
xchg
mov
adc
sbb
inc
inc
lods
nop
mov
mov
fidivrs
js
pop
cwtl
dec
pop
xor
lods
xor
call
out
xchg
push
adc
pusha
or
test
es
xor
pop
repnz
mov
imul
xchg
dec
xor
aaa
ljmp
pop
xchg
push
ret
movsb
mov
pushf
repz
stc
ror
lock
insb
mov
int3
rcl
sbb
pop
addb
jg
roll
ds
je
in
clc
arpl
cmp
jl
mov
dec
ss
faddp
jmp
std
lods
test
int3
add
into
mov
add
loopne
adc
mov
or
lret
iret
adc
sar
test
and
mov
negl
adc
popa
push
ret
shlb
xchg
dec
cltd
scas
mov
mov
xchg
dec
gs
popf
jae
les
pop
cmp
addl
push
out
ficoms
pop
and
cltd
jmp
ljmp
outsb
pop
xor
pop
add
or
lret
mov
leave
push
rcll
rcr
ffree
fldcw
sub
aaa
mov
ljmp
adc
push
jmp
mov
repnz
pop
mov
cmp
xor
addb
imul
jb
fwait
enter
push
out
xchg
sub
rclb
pop
dec
mov
ds
out
loope
gs
lea
and
js
mov
int
in
lret
fsubp
call
jbe
jno
jae
lock
inc
stos
jno
outsl
lahf
hlt
jp
dec
pop
nop
dec
mov
mov
popf
iret
push
testl
ds
inc
jno
jae
dec
scas
test
rclb
lret
jno
repz
xchg
sub
push
xor
push
push
push
in
shl
jns
adc
scas
pop
mov
loop
cmc
enter
pop
inc
add
push
orb
xor
rcl
cmpsl
sub
cs
orl
aad
out
div
jo
cs
mov
leave
xchg
push
mov
sub
sbb
inc
xlat
xlat
test
xchg
push
ds
icebp
add
call
push
xor
jl
into
xor
sarb
adc
jge
popf
rclb
mov
je
cmc
sub
sbb
inc
jp,pt
pop
mov
mov
cmpsl
add
jne
or
out
cmc
outsb
jbe
cmpsb
jbe
mov
push
sub
imul
xor
shlb
pop
out
and
jg
fnstenv
dec
jle
or
add
rcrb
xlat
testl
gs
jae
pop
dec
in
sbb
stos
sbb
jle
jmp
popf
mov
mov
mov
mov
out
xor
mov
mov
push
push
jmp
cli
lds
mov
jg
imul
cmp
cmp
sbb
loopne
imul
div
xchg
or
sub
std
push
shll
or
addl
lret
rclb
inc
movsl
stc
mov
repz
push
scas
or
and
mov
push
jne
std
push
pop
stc
mov
js
xchg
mov
xor
loope
mov
and
rcrb
mov
mov
enter
fcoml
xchg
outsb
shlb
clc
test
pop
jge
push
pop
dec
sbb
fnstcw
add
clc
mov
push
pop
jp
xor
mov
lret
inc
sub
imul
mov
rcrb
inc
jbe
test
aad
push
xchg
popa
scas
int
mov
mov
cmc
fcmovne
popa
or
ja
inc
and
inc
cmc
test
repz
hlt
pop
push
jo
push
sub
or
cmp
outsl
rorl
jl
lret
stos
pop
ja
jb
inc
push
mov
xchg
aam
lock
cli
xchg
xor
jl
cmp
call
aad
cmpb
dec
or
push
and
testb
push
ja
rol
fdivrl
inc
imulb
popa
mov
xlat
jle
xchg
inc
in
sbb
sbb
stc
adc
or
xor
roll
js
or
pusha
rclb
xorl
shl
sbb
inc
mov
sub
mov
div
fists
jne
mov
ror
nop
stos
icebp
xchg
push
inc
ds
sbb
stc
gs
xor
sbb
add
cwtl
stc
or
in
xchg
adc
jbe
jp
scas
pop
fstl
or
sbb
or
dec
sbb
icebp
xor
insl
es
lret
fidivs
or
and
inc
push
gs
or
decb
mov
push
mov
jno
in
jns
test
hlt
jns
mov
and
add
clc
int3
vmwrite
shll
mov
push
or
rol
push
test
mov
fnstenv
mov
adc
xchg
xchg
or
sarb
xlat
add
or
imul
mov
int
xchg
sub
push
pop
dec
jle
sbb
xor
add
or
hlt
xchg
xchg
or
or
lods
mov
inc
push
cmp
add
cltd
jno
mov
mov
faddp
fmuls
jne
int3
or
mov
adc
pop
adc
aaa
cmp
cmpxchg
sahf
ret
dec
clc
mov
rcrl
push
sbb
push
aad
ja
lock
adcl
dec
push
loopne
js
push
xchg
push
enter
loopne
aaa
cmc
loop
pop
push
hlt
lock
repz
mov
push
ss
cmp
lock
add
js
leave
cwtl
mov
stos
cltd
push
aaa
ret
pop
xlat
xchg
stos
push
rcrl
push
fnsave
iret
cld
insl
mov
fst
xchg
xchg
rolb
rolb
cltd
loopne
jge
add
cltd
shlb
or
aam
and
sbb
inc
fdiv
lods
or
xlat
mov
adc
or
or
or
movsl
or
rcrb
es
sbb
cmp
xlat
pop
fmuls
mov
aad
and
pop
cmp
dec
lret
add
jmp
shl
std
add
mov
inc
inc
push
add
pusha
pop
fdiv
sub
xchg
sbb
adc
lret
cltd
sbb
jns
inc
shrl
movb
mov
sbb
loop
mov
out
jecxz
fisubl
aas
or
aam
xlat
push
div
jecxz
xchg
jl
jge
pop
mov
lret
inc
or
add
jne
jne
lods
adc
rcll
nop
adc
and
xor
pushf
das
pop
sarl
xchg
int
daa
shlb
loopne
jno
popf
push
fcoms
or
fcmove
inc
in
adc
arpl
popf
cmp
ss
xchg
inc
xchg
pop
es
add
daa
push
push
cmp
jecxz
add
stos
mov
ficoml
xlat
cwtl
push
mov
cwtl
aam
pop
push
mov
cmc
jbe
cltd
call
test
mov
fsubs
out
jl
cmp
pop
insb
push
imul
jle
addr16
push
jno
pop
add
mov
out
and
fidivrl
mov
mov
mov
stos
in
loope
ja
push
mov
sarb
rcl
adc
inc
pop
repz
js
scas
or
dec
aas
lahf
jmp
lock
sti
ret
out
flds
fstl
sbb
fistps
ja
jg
test
hlt
cmpsl
shl
sbb
dec
push
sbb
xchg
movsb
mov
push
xor
cmp
cmp
aad
push
imul
xchg
or
sub
sub
or
pop
jecxz
sbb
jg
aad
cmp
aad
sti
mov
xchg
incl
or
cli
aaa
pop
mov
push
fisttps
cmpsl
mov
mov
mov
dec
test
mov
sub
dec
adcl
fnstsw
sbb
xchg
adc
les
and
sbb
sarb
cmp
xor
jns
lahf
xchg
mov
sub
jle
dec
add
add
fcmovbe
aas
out
pop
imulb
or
aam
mov
stc
inc
pop
jle
xchg
icebp
test
arpl
inc
dec
xchg
loop
cmp
ror
jns
pop
mov
shlb
aaa
mov
rep
jne
and
mov
or
xchg
add
add
repz
jo
test
mov
cltd
mulb
icebp
inc
hlt
jno
sub
leave
push
add
movsl
mov
repz
roll
or
jmp
stc
leave
rorb
mov
jne
xor
fmull
fadds
jp
jno
repz
xchg
bound
addl
lret
dec
jns,pn
cmp
lahf
out
roll
insb
and
jns
hlt
xchg
adc
mov
incb
jns
leave
pusha
or
aas
cmp
pop
repnz
cmpsl
cld
dec
arpl
gs
jns
outsl
hlt
push
mov
jne
xor
gs
xchg
sbbb
or
iret
pop
add
jbe
movsb
push
jne
imul
cmp
push
sub
std
mov
rcrl
stc
cltd
sti
sarb
lret
imul
pop
stc
jecxz
inc
aas
inc
movsl
stc
imul
and
icebp
sub
fldl
int
arpl
ja
hlt
jmp
lret
jb
jle
shll
jg
xchg
je
test
inc
cmp
mov
shr
xchg
loope
stos
aad
or
cmp
push
rcrl
inc
stos
sahf
lcall
jge
push
push
mov
jb
mov
mov
into
and
push
and
sub
lret
js
fidivs
pop
lods
ror
jmp
sbb
adc
stos
cmp
cwtl
sub
sub
in
xchg
mov
jb
or
gs
ret
insb
or
pop
icebp
xor
jb
sub
sbb
in
insb
js
adc
mov
or
das
push
icebp
mov
mov
mov
aaa
call
into
pop
or
aas
jns
jne
xchg
mov
cmp
movsb
lds
and
xchg
lret
pop
std
mov
or
mov
adc
fcmovu
xlat
imull
push
xlat
mov
pop
stc
inc
mov
fmull
sub
push
dec
fyl2xp1
ss
icebp
sar
xor
mov
rcl
push
cmpb
xlat
dec
iret
aaa
jg
inc
and
xchg
sub
adc
xchg
aaa
hlt
push
sbb
xchg
dec
sub
loopne
in
xchg
rorb
push
add
xchg
fsts
mov
std
lods
andb
imul
ss
inc
fstpl
cmpsb
sbb
add
inc
xlat
shrl
dec
insl
sahf
cs
push
iret
ja
jb
stos
cwtl
inc
xchg
push
neg
repz
inc
mov
out
stc
jle
push
std
lret
push
cltd
js
add
ficomps
sbbl
push
adc
and
and
mov
std
mov
push
imul
test
push
push
test
pop
add
lret
inc
cmpsl
ftst
sahf
xor
fistpl
pop
cltd
mov
shrl
insb
pusha
es
xchg
mov
cmpsl
xchg
push
jbe
in
out
and
loope
sbb
dec
in
std
jns
pop
mov
in
push
inc
hlt
ja
add
dec
das
mov
ret
test
or
pop
fnsave
push
fildll
pop
shll
mov
add
sub
stc
and
fcompl
jg
lret
mov
dec
int3
cltd
sbb
mov
push
push
ss
bound
cmp
and
pop
loope
pop
push
cltd
rcr
or
push
cmc
test
mov
test
xchg
mov
fldenv
nop
out
xchg
pop
fdivl
hlt
repnz
aam
sub
inc
in
xchg
xchg
aam
inc
pop
sub
jmp
fldcw
dec
cld
or
fisttpll
subb
dec
push
xchg
daa
ret
xchg
pop
xchg
cmpsb
ja
sbb
notb
adc
cmp
iret
test
add
jns
imul
stos
mov
rolb
dec
xor
data16
dec
repnz
gs
adc
xor
ljmp
clc
mov
and
inc
cltd
cmp
xlat
ffree
push
lcall
outsl
sub
adc
cmp
xchg
dec
mov
mov
cltd
jns
or
aaa
cli
sub
push
rcrl
xchg
shlb
push
sub
push
rcr
lahf
pop
xchg
mov
cmp
negl
ret
ds
sti
mov
ror
js
mov
not
notl
jno
mov
pushf
neg
mov
jbe
xlat
test
fisttpll
cltd
aam
popl
cmc
mov
jbe,pt
aaa
pop
inc
nop
in
scas
jle
sub
lods
mov
ja
xor
insl
or
negl
dec
in
adc
jbe
mov
je
jae
popf
jns
sbb
add
in
sbb
shll
into
sub
pop
out
js
ja
push
cmp
cmp
add
sbb
sub
negb
jb
out
nop
daa
mov
cmp
mov
int
iret
leave
xor
sub
xchg
jbe
cmp
pop
push
push
into
mov
sbb
pop
outsl
adc
push
mov
inc
rorl
cmp
shll
mov
jb
sbb
rolb
mov
andl
shll
fcmove
lea
xchg
fldcw
push
xor
imul
in
and
adc
bound
cmp
jle
cmpsl
cmp
mov
and
cmp
jno
test
xor
aam
push
push
jns
gs
xlat
adc
lret
xchg
out
mov
rcrb
mov
and
stos
idivb
popa
mov
xlat
xchg
cs
enter
xchg
repz
lds
push
jnp
fisubl
sub
lock
aas
fnstcw
xchg
stos
loopne
std
je
repz
or
rolb
and
sbb
aas
das
das
adc
out
or
sahf
sub
and
rcr
pop
push
clc
rcrl
loope
add
mov
cmp
mov
aad
das
fidivs
fdivrl
arpl
cwtl
mov
mov
mov
xchg
lahf
push
push
push
dec
dec
cwtl
shll
xchg
aad
iret
xchg
repnz
hlt
xlat
movsl
mov
adc
jns
seta
addr16
iret
out
inc
idivb
mov
dec
scas
test
xchg
fidivrs
iret
sub
fstl
push
sbb
jb
sti
dec
ret
adc
push
adc
pop
inc
stos
mov
xchg
jne
add
add
mov
aas
fldenv
adc
je
aad
or
add
js
inc
inc
or
ror
ljmp
or
rcrl
mov
cmp
inc
es
cmpsl
movsl
out
imul
fs
orl
addr16
push
or
xchg
sub
or
punpckhbw
xor
test
inc
aad
repz
mov
dec
cmp
das
dec
cmp
inc
rclb
mov
mov
xchg
jb
inc
es
iret
shll
fstpl
cmp
cwtl
mov
inc
jno
jle
imul
imul
cmc
ja
xchg
aad
repz
test
or
xchg
push
jge
jo
movups
ss
push
imul
stos
jl
lret
mov
xlat
sub
std
add
cmp
outsb
popa
pop
dec
jo
test
add
loopne
icebp
add
and
lret
push
out
mov
xchg
popa
int3
icebp
shrl
lret
or
call
notb
cmp
push
adc
jbe
shl
scas
adc
sbb
ret
test
add
xor
ljmp
mov
fistps
test
xlat
decl
adcb
out
out
flds
std
inc
loop,pn
fisttpll
test
rcrl
stc
int3
rcl
dec
fs
rcll
es
push
pushf
sahf
adc
out
insl
jb
adc
lds
pop
adc
dec
or
cmp
sbb
fnstenv
fisubl
shll
jbe
push
adc
je
xlat
cwtl
aad
lret
imul
sub
sbb
jno
xchg
flds
mov
mull
divb
dec
daa
test
mov
mov
jl
out
aas
leave
and
or
push
jne
xchg
mov
mov
xchg
andl
mov
mov
sub
xlat
pop
sbb
pop
adc
push
into
inc
bswap
lea
ret
movsl
push
mov
dec
push
out
nop
ret
out
sbb
mov
push
push
xchg
stc
xor
add
out
sub
pop
jl
cmp
inc
push
adc
lds
push
adc
test
or
inc
fiadds
hlt
lahf
cmp
fistl
or
or
out
fstl
xlat
lahf
ja
dec
imul
add
push
aam
adc
jl
sbb
xchg
sahf
jecxz
push
cmp
rcr
xchg
mov
sub
idiv
xchg
cs
fnstsw
or
test
sub
lds
in
adc
ja
dec
or
hlt
fmuls
popa
lret
neg
pop
mov
mov
jle
sti
pusha
bound
orl
jl
bnd
pop
icebp
bound
push
sti
push
std
ja
mov
ficoms
test
jecxz
push
clc
repz
rcrb
inc
and
mov
stc
xchg
cmc
jg
je
or
leave
xlat
leave
push
push
stc
popa
add
and
mov
add
enter
data16
add
stc
lret
sti
fmuls
repz
loop
push
shr
lock
lods
push
cmp
repz
dec
fbstp
je
pop
cmp
sarb
xchg
scas
mov
notb
lahf
cmc
mov
xor
cmpsl
ljmp
lea
xchg
mov
cmp
pop
or
leave
daa
aam
cld
jp
and
cmpsb
add
mov
js
nop
insl
outsb
popf
xchg
jecxz
and
cmp
jb
hlt
and
xchg
aas
inc
xchg
pusha
arpl
or
inc
inc
je
call
mov
jmp
mov
rorl
das
testl
xor
shlb
stc
clc
fucom
cmp
out
pop
fwait
pop
sbb
add
push
call
lahf
jno
ja
push
movsb
lahf
out
pop
lret
scas
lods
stc
test
popa
andb
sub
lds
xchg
fsubrl
adc
adc
loop
adc
out
fcoms
jmp
mov
mov
mov
addr16
nop
cmp
xchg
sub
cmc
lret
inc
or
push
cmp
xchg
cmpsl
das
cmp
pop
imul
dec
and
sbb
jp
inc
cmp
mov
or
lds
jmp
loop
test
sbb
ret
and
ss
and
add
cmpsb
lock
jns
dec
idiv
hlt
add
shll
pop
lret
in
icebp
stc
mov
call
add
rcr
data16
mov
lret
test
shll
mov
loopne
mov
lea
jle
cltd
popf
add
jo
divl
ljmp
add
xor
ljmp
xor
cmc
fsubrs
jge
or
xchg
lds
int
dec
xchg
aad
out
iret
lea
pop
shl
xchg
dec
adc
cmp
es
icebp
jle
roll
loope
dec
jl
aas
shrl
nop
add
jne
adc
push
out
inc
aas
pop
xchg
mov
shl
lea
jmp
aad
cmp
addl
or
mov
mov
cmc
add
out
xchg
xorl
es
adc
adc
jle
adc
js
fiaddl
dec
xchg
sub
push
fistpl
fst
lcall
lahf
scas
xchg
cltd
lock
cmp
neg
hlt
xlat
ror
out
sbb
les
push
scas
add
sbbb
mov
cmp
iret
flds
das
push
push
cmp
xor
and
pop
mov
aam
push
cmp
fbstp
dec
test
and
xchg
js
mov
daa
xor
lret
sbb
dec
das
mov
scas
mov
aad
jb
lds
jl
jle
adc
mov
int
push
jbe
dec
inc
add
mov
mov
sbb
mov
mov
xchg
int
mov
push
std
andl
cmp
dec
sbb
aam
int
outsb
gs
pop
adc
enter
or
mov
aam
xchg
mov
daa
xchg
pop
jo
nop
fs
mov
xchg
cmpsb
out
and
sbbl
xor
inc
pop
addr16
repz
xor
lcall
mov
arpl
dec
aam
jg
frstor
pop
sti
mov
xchg
jb
pop
mov
sub
stc
das
jbe
xor
jecxz
pop
test
cmp
shr
xchg
lods
mov
nop
pop
sbb
repz
sarb
sub
mov
notb
int
cmp
cltd
popa
mull
in
mov
adcb
test
lods
push
adc
push
push
test
mov
mov
in
xlat
lds
test
movsl
js
sbb
or
push
fstps
xor
and
dec
jns
sbbl
ss
cld
dec
sbb
jb
pop
mov
mov
scas
add
xchg
sbb
xchg
fldenv
sar
pop
inc
xchg
xchg
mov
or
inc
or
lcall
mov
out
clc
push
or
adc
pop
out
push
nop
mov
dec
mov
dec
mov
sbb
stos
subl
jns
rcrl
ss
inc
scas
mov
addr16
pop
jno
adc
sbb
dec
and
dec
mov
push
push
filds
push
pop
aas
push
adc
ss
mov
jns
outsl
fprem1
inc
ds
adc
inc
arpl
add
jbe
xchg
imul
mov
js
and
outsb
pushf
fs
lcallw
xchg
rorl
cmp
into
es
fwait
or
and
sbb
jbe
loope
xchg
jnp
or
xchg
out
lds
aas
lea
shl
mov
ja
inc
xchg
mov
adc
jbe
lret
pop
div
jmp
ret
cmpsb
mov
dec
int
imul
cmpl
iret
cltd
pop
imull
mov
xor
insb
pop
aad
lea
cmp
xchg
fistpll
or
cmpsl
jecxz
popf
aam
sbb
sbb
pop
bound
xchg
data16
js
sti
cs
jp
inc
mov
mov
imul
scas
jbe
lock
inc
test
inc
xchg
cmp
mov
mov
iret
ret
rcrl
popf
push
insl
outsl
add
into
out
outsl
mov
mov
cltd
push
cmp
ds
popa
sbb
sarl
cmp
popa
daa
xchg
xlat
xchg
sbb
out
adc
or
xor
pop
daa
jmp
sar
outsb
mov
mov
cmc
sahf
mov
and
xor
hlt
and
mov
imul
stc
inc
add
add
xchg
mov
xchg
popa
daa
inc
cmp
push
xor
inc
pop
scas
jne
mov
sahf
sbb
aas
stc
jb
jecxz
inc
outsl
jbe
popa
cmc
and
dec
mov
in
mov
repz
sbb
inc
pop
loop
jo
mov
testb
stc
adc
out
testl
mov
lahf
nop
jmp
shr
mov
test
mov
push
test
iret
jge
jno
push
adc
subl
adc
mov
outsb
cmc
push
or
or
pushf
or
fcoml
cmp
push
ret
sbb
push
out
das
or
pop
or
push
repz
das
push
lock
adc
cmc
repz
lds
pop
les
int3
cmpb
jmp
dec
popa
cmp
iret
sbb
ficoms
lret
xchg
xchg
ret
cmp
adc
xchg
xor
xchg
rcl
sub
movsl
sbb
out
ja
inc
pop
jmp
insl
repnz
lock
call
loop
stc
iret
fisttpll
and
int
rolb
push
sahf
lods
rcl
fstps
in
xchg
pop
jge
push
jno
inc
rcrl
icebp
call
repz
jmp
orb
mov
mov
ret
sbbb
or
sbb
sub
jbe
mov
add
stc
adc
inc
ds
ret
mov
jns
fstps
mov
dec
std
sti
cmp
fcomps
mov
repz
lods
movl
data16
push
in
push
mov
fcmovu
mov
push
leave
adc
dec
add
xor
sbb
add
cmp
fnsave
divl
xchg
mov
mov
push
cwtl
ficoms
jmp
mov
rcrl
sub
push
cmpsb
jmp
pop
mov
cltd
or
lret
add
clc
das
or
out
pop
cmp
fdivs
mov
lds
fmul
push
xchg
mov
pop
push
inc
pop
insb
idivb
repz
jl
xor
dec
into
jge
pop
aaa
leave
or
sbb
inc
add
repz
pusha
flds
mov
shlb
iret
jp
daa
mov
jmp
jp
dec
incl
les
cmp
lds
cmp
popf
pop
pop
push
ds
jle
and
std
push
jmp
mov
cmc
pop
xchg
or
cltd
xor
xor
sbb
sbb
push
pop
aad
lret
imul
and
cwtl
daa
cmp
push
push
js,pt
sbb
movsb
mov
jb
xor
mov
xorl
mov
or
addb
jp
and
mul
negl
lds
es
mov
xor
arpl
cmpb
cli
push
inc
sbb
test
aaa
sahf
mov
mov
mov
dec
cmpsb
clc
ljmp
je
pop
push
sar
mov
sub
into
pop
shll
jb
out
into
adc
test
test
or
ds
push
add
stc
push
add
mov
mov
in
cmp
ret
test
add
shlb
addr16
and
or
outsl
popf
dec
pop
jns
cltd
or
aad
movsb
and
sbb
testl
push
scas
shlb
loope
lret
push
mov
xchg
push
fs
xchg
shrb
pusha
mov
adc
cmp
jb
outsl
inc
adc
fstps
jle
jns,pt
sbb
push
shll
lcall
sub
pop
adc
icebp
test
mov
daa
cmp
out
push
mov
aaa
mov
inc
js
sub
pop
inc
rcll
mov
pop
xor
xchg
in
repz
jl
popf
lret
daa
pop
popa
out
or
xchg
jg
lret
cld
push
push
insb
push
mov
pop
in
push
push
xchg
add
mov
pop
je
dec
xlat
pop
sbb
cmp
test
ss
xor
inc
adc
rolb
repnz
xchg
jns
or
js
test
inc
push
or
mov
addr16
fisttps
cmpsl
jmp
test
les
les
mov
mov
mov
lcall
push
mov
or
add
mov
aas
adc
cs
cmp
ficoml
test
loope
mov
jge
pop
gs
inc
aad
iret
cmpsl
jo
cmp
xor
sub
and
adc
punpcklwd
andl
imull
jle
fsubrs
dec
shl
pop
aas
sub
stos
notl
fwait
test
shlb
mov
jl
jb
push
stc
push
mov
jmp
subl
subl
cwtl
add
adc
insb
mov
cmp
jmp
pop
lea
pop
aad
or
shlb
mov
push
push
mov
cmpsl
push
rcll
cmp
jne
push
arpl
aas
or
mov
sub
xchg
jmp
adc
adc
mov
and
idivl
dec
jmp
dec
inc
jp
push
cmc
push
cmp
mov
cltd
lods
loop
sbb
inc
movsb
xchg
jmp
adc
aad
addr16
cmc
inc
xor
ds
cmc
cli
add
pusha
or
dec
stc
lret
mov
mov
movsb
lock
mov
xorl
dec
icebp
jbe
lret
jbe
roll
leave
cmpsb
mov
inc
xchg
dec
in
clc
fnstcw
push
sbb
sti
fimull
mov
jns
push
iret
loope
fstl
ret
pop
push
leave
popf
add
adc
arpl
in
mov
push
mov
insl
pop
scas
lods
pushl
ret
add
loopne
stc
cmp
adc
out
mov
lock
mov
or
les
fists
xchg
mov
pop
clc
addr16
jno
inc
sbb
mov
and
sub
xchg
cltd
icebp
aad
pop
or
mov
daa
adc
pop
xchg
call
jbe
xchg
cmp
icebp
pusha
mov
mov
loopne
inc
sub
fldcw
mov
sub
add
xchg
cltd
pop
imul
es
xor
data16
xchg
lret
push
in
mov
ds
sbb
loope
push
movb
push
lret
stc
or
add
test
jmp
popa
mov
insl
adc
ja
repz
fwait
sarl
jg
pushf
int3
pusha
loope
fld
ret
jnp
ja
jns
cmpsl
gs
mov
xlat
aam
push
movsb
rcrb
orl
popa
lds
dec
push
add
je
lret
or
jbe
mov
ja
cmpsl
xchg
in
leave
jp
sbb
test
xor
mov
rorb
jo
gs
push
push
repz
sbb
cs
loopne
xchg
fwait
in
call
xchg
or
mov
sbb
pop
sub
or
lds
xchg
hlt
sbb
std
push
pop
xor
sbb
inc
idiv
ficoml
mov
inc
xchg
leave
shr
jmp
jne
push
jle
jns
add
jbe
jge
gs
icebp
sarl
rorb
or
xor
jmp
push
repz
mov
xor
xorl
mov
xchg
mov
cwtl
shlb
es
outsb
pop
imul
push
push
sbb
add
mov
and
push
jle
mov
xchg
shlb
lcall
notb
push
push
jb
push
stc
jbe
mov
sar
adc
das
mov
int3
clc
std
jmp
or
stc
jp
fldl2e
mov
mov
inc
xor
enter
mov
icebp
jmp
lret
out
jb
dec
mov
cmp
sub
imul
rorb
fsubr
aad
jae
adc
and
sub
stc
test
in
scas
lock
hlt
repz
lock
jb
mov
rclb
mov
push
sbb
aad
daa
jo
test
fdivrl
das
jb
fisttpl
popf
arpl
fisubs
mov
aam
dec
or
and
bound
jle
jno
jmp
rcr
shll
jg
popf
jne
rclb
ja
shll
pushf
ret
mov
test
xor
test
mov
pop
or
mov
xor
sbb
inc
xor
cltd
jmp
aas
sarb
mov
lret
pop
lret
scas
test
xor
iret
or
xchg
fadds
fldcw
sub
mov
pop
sub
jae
and
sahf
ja
jns
aas
push
xchg
xchg
lahf
pop
out
push
xlat
mov
mov
mov
jg
jp
out
inc
rolb
cmp
repz
push
into
jnp
jb
sbb
mov
ret
ror
testl
rcrb
or
cmp
cld
repz
aas
jbe
mov
or
xchg
dec
mov
cmpsb
cmc
or
shr
inc
and
rclb
mov
mov
daa
insl
sti
push
add
imul
clc
leave
movl
add
adc
imul
sbb
cli
sub
lods
push
js
lods
cmp
inc
insl
loope
cmp
xchg
lcall
push
jl
cmpl
subl
insl
xchg
mov
loopne
imul
inc
addl
leave
cmpl
jo
add
test
lock
and
addr16
gs
adc
pushf
adc
and
fcoms
xchg
add
nop
sbb
rcll
or
xchg
mov
xchg
xchg
sub
testl
xchg
aaa
mov
test
stc
cmc
int3
mov
add
test
mov
dec
jns
pop
enter
loopne
push
sti
mov
das
scas
xchg
xchg
jne
cmp
out
ror
and
sbb
cmpsl
fsts
popf
lock
clc
ds
pop
add
sahf
repnz
lcall
clc
pop
imul
push
not
les
xlat
in
addb
loopne
inc
xchg
mov
lahf
jbe
stc
stc
dec
orb
pusha
imull
test
xor
mov
inc
xchg
daa
repz
int3
or
xor
sbb
jl
xlat
into
aas
out
pop
mov
mov
jle
popa
jecxz
stc
jmp
jne
ljmp
sarb
pop
cltd
push
or
push
jl
push
push
dec
mov
movsb
cmp
adc
shlb
subb
adc
inc
out
sbb
popa
movb
bound
daa
or
inc
inc
adcl
je
mov
push
cmp
test
jbe
xchg
scas
pop
mov
xlat
psubw
mov
adc
jmp
or
mov
mov
sbb
rol
nop
divb
ficomps
and
test
jle
mov
inc
pop
adc
orl
mov
jns
add
aas
bound
dec
cmp
into
or
arpl
scas
sarl
into
ror
roll
add
cmp
sub
sbb
dec
pop
inc
cmpsb
add
inc
sub
aam
mov
mov
int
xchg
xchg
and
aas
cmpsb
cmc
roll
pop
mov
jne
leave
lds
push
mov
cmp
mov
sub
cmp
jae
fwait
loope
stc
ja
or
stc
sti
testl
js
inc
push
or
jns
int
loopne
mov
arpl
or
lods
lods
jo
xchg
and
cltd
mov
inc
push
fnstsw
inc
mull
inc
in
jne
inc
loop
aad
lds
mov
shl
dec
dec
jno
fdivr
dec
pop
ss
rorl
rcl
aad
or
pop
neg
cwtl
addr16
pop
cmp
ret
xchg
cmc
pop
ljmp
lock
sub
pop
pusha
lock
movb
jb
sbb
pop
xchg
jns
inc
call
es
ja
andb
push
js
aaa
in
mov
or
dec
inc
push
jns
fs
not
inc
scas
bound
fcomps
cmp
jns
xchg
jno
push
enter
test
mov
mov
inc
mov
jmp
jo
mov
test
das
mov
push
xchg
push
push
or
inc
imul
push
mov
cld
aam
lock
aas
or
std
add
push
sub
mov
xor
push
or
outsl
ja
mov
insb
icebp
loope
mov
subl
divl
mov
push
sarl
mov
int
lret
addr16
fdiv
push
push
lds
popa
jge
stos
aam
or
jge
in
out
xchg
or
movsb
jge
negl
cs
dec
xor
jbe
pop
add
pop
fs
sub
rcll
lret
jecxz
popa
mov
jns
scas
addr16
lret
rcll
popf
outsl
not
mov
mov
pop
xchg
cmp
mov
outsl
aas
or
jge
pop
mov
test
adc
rclb
push
ds
mov
insl
in
jecxz
enter
nop
leave
out
or
rorl
outsb
in
sbb
mov
mov
shlb
cmpb
cmp
outsl
call
mov
inc
xchg
jle
mov
nop
test
ja
jl
pop
test
xor
sbb
out
sbb
fsubs
out
pop
sbbb
std
fiaddl
adc
cld
test
lcall
pushf
adc
pop
or
bnd
test
je
lret
cmp
jecxz
cmp
or
popf
mov
adc
sub
lea
in
mov
push
jmp
pushf
jno
imul
jno
in
push
sub
dec
aad
js
lret
popa
in
mov
or
jb
xor
mov
and
fmuls
push
jg
cmp
and
adc
fnstcw
or
imul
adc
out
fistpll
jge
xor
shll
push
push
xchg
cld
imul
loope,pn
add
ficomps
jge
add
pop
aaa
mov
adc
or
dec
ret
inc
mov
mov
in
and
mov
sub
cmp
ss
aas
or
bound
lods
xor
inc
jp
cmp
xlat
dec
mov
jmp
int3
mov
rcll
iret
fbstp
mov
inc
xchg
push
xchg
mov
cmpsb
push
addr16
mov
fistpl
jp
xlat
xchg
fnstenv
dec
shl
mov
sub
scas
add
js
lret
out
icebp
adc
cmp
rorl
adc
xor
dec
inc
ljmp
xchg
leave
dec
or
pop
push
loope
or
push
xor
jae
int3
int
cli
pop
hlt
mov
add
out
iret
push
pop
pushf
mov
dec
loope
fwait
mov
mov
or
ret
cmpsb
mov
iret
ja
cmc
test
iret
mov
stc
dec
sbb
sub
mull
mov
lret
ret
fs
xchg
imul
mov
cmp
jmp
dec
push
pusha
outsl
cmc
xchg
lret
jne
pop
xor
repnz
loop
mov
cmpsb
pop
cltd
pop
dec
mov
jle
cmc
inc
arpl
mov
pop
sub
cmp
xor
aam
dec
loopne
cmpsb
dec
or
mov
scas
je
int
lahf
sbb
arpl
jns
jnp
and
jmp
ljmp
icebp
scas
or
dec
cmc
inc
mov
imul
or
stc
mov
or
xchg
xchg
aad
push
iret
js
rcrl
push
stc
sbb
jmp
push
imul
lds
xchg
adc
shlb
shrb
lret
push
add
iret
and
inc
lret
cwtl
dec
jns
lods
out
sahf
and
fxch
mov
movsl
jle
call
in
xchg
rclb
inc
negl
pushf
push
fcompl
jmp
lock
mov
icebp
fistpll
pop
xchg
jle
mov
shr
adc
lret
mov
sbb
gs
in
aaa
leave
adc
inc
pop
push
or
paddd
test
mov
int
cltd
pusha
dec
push
push
rcrb
fldcw
or
pop
cmc
xchg
sub
iret
sarl
imul
jnp
jns
and
aam
sbb
hlt
push
pop
xlat
adc
jle
or
push
rcr
dec
mov
cwtl
lock
jle
scas
mov
sub
fmul
cmc
test
aad
rclb
rolb
aad
das
jecxz
lahf
movl
add
cmc
popf
imul
ret
es
ret
std
sub
xor
popa
aam
shl
xor
lds
clc
mov
sbb
xchg
lock
testl
add
fisttpll
shl
dec
xlat
sbb
cmpsl
pop
adc
cwtl
add
push
arpl
lea
pusha
xchg
iret
adc
mov
sbb
js
jecxz
cmp
pop
adc
jns
push
js
mov
in
or
fucomip
adc
push
cmp
adc
cmc
loopne
sbb
jae
sub
fnstenv
stc
xor
cmp
push
add
mov
dec
adc
cmp
xchg
lret
adc
xor
lods
imul
bound
out
lds
mov
xchg
clc
cmp
xor
out
xchg
and
negl
stos
test
roll
xor
punpcklbw
inc
mov
hlt
mov
mov
cmp
sbb
cltd
xlat
es
je
subl
mov
hlt
sarb
test
rorb
aaa
adc
popf
scas
mov
sub
xchg
scas
mov
dec
or
or
adc
adc
xchg
add
dec
push
cltd
jne
out
dec
mov
cltd
sarl
imull
add
cmp
cwtl
insl
cmc
adc
inc
mov
sub
enter
adc
lret
insl
cmp
cmp
jb
add
shlb
adc
cltd
mov
leave
pop
stc
jbe
shl
adc
popf
fisttps
enter
pop
adc
xchg
mov
lahf
cmp
jns
lret
repz
mov
shr
jbe
test
mov
ds
push
rolb
ret
into
fldcw
repz
adc
xchg
rclb
cs
or
jne
repnz
pop
mov
xchg
aad
sbb
mov
and
es
jecxz
or
xlat
add
fldenv
mov
outsb
sbb
or
das
lcall
lds
mov
rorb
cmp
mov
xrelease
ret
xchg
cwtl
aad
add
stc
jle
mov
xlat
hlt
cwtl
add
lcall
inc
xchg
pop
femms
jb
mov
adc
std
ja
cld
out
sbb
inc
xchg
not
roll
stos
jns
rcr
std
aam
xchg
icebp
adc
test
test
lods
lret
dec
mov
cltd
inc
outsl
movsb
mov
cmpsl
pop
scas
cwtl
xchg
sub
pop
mov
push
imul
and
adc
jb
ret
aad
adc
mov
or
xchg
rorl
lds
push
adc
pop
jge
jecxz
sub
imul
mov
ja
rolb
mov
rol
add
and
lock
cltd
cmp
inc
les
std
adc
xchg
sti
shrb
js
shrl
repnz
popa
push
push
xchg
jp
xor
xor
outsl
pop
pop
xor
pop
clc
mov
mov
cmpl
xchg
cmp
nop
pop
lret
mov
lret
add
mov
rcr
inc
lods
lds
cs
sub
clc
add
movsl
jns
shl
inc
xchg
jbe
test
push
xlat
inc
or
xor
adc
out
jb
xchg
fstpt
cmovl
push
xchg
arpl
xchg
std
and
scas
inc
or
push
stos
and
push
outsl
repz
mov
inc
rorb
rorb
les
jb
aas
xchg
cld
out
add
outsb
in
rorb
ja
jle
int3
ret
xchg
cmp
stc
loopne
cmp
sahf
fdivl
shrb
outsb
in
fwait
rcrb
aam
mov
mov
fsts
xchg
pop
jle
orb
mov
repz
cmp
cwtl
lea
jbe
lret
outsl
inc
or
push
test
or
shl
mov
mov
xlat
jl
iret
mov
fnsave
xchg
es
xchg
lret
divl
insl
push
jae
cmp
pop
or
mov
sub
lahf
dec
lods
icebp
fadds
push
shll
insl
subl
xor
int3
lret
mov
pop
clc
daa
and
scas
fisttpl
push
scas
mov
leave
fnstcw
sbbb
inc
pop
not
icebp
mov
ja
dec
lods
mov
insl
clc
std
loopne
jl
sub
mov
notl
pop
xchg
pop
ja
or
imul
loopne
pop
and
pop
rcrl
jle
mov
bound
icebp
sub
xor
js
outsl
repz
mov
lock
push
adcb
mov
pop
or
xchg
inc
push
or
sar
popa
cltd
sti
fstl
sub
xlat
jmp
adc
cmp
js
push
stos
mov
ss
and
shl
sbb
push
xchg
sub
xlat
repnz
pushf
adc
mov
cmc
test
clc
sub
cmp
ds
fcoms
fprem1
push
adc
jmp
push
and
cmp
jbe
jge
lods
call
xchg
push
scas
std
sub
test
push
and
aaa
adc
cli
lds
add
notb
pusha
xchg
stos
pop
jo
pop
sbb
mov
adc
cmp
mov
push
lods
sbb
add
lret
orb
or
aam
inc
ret
dec
leave
jecxz,pn
stc
and
ja
stc
bound
iret
and
cmp
push
or
xchg
cltd
jo
xlat
shlb
mov
lds
mov
mov
sbb
jne
and
add
lods
cltd
add
cmp
inc
call
lods
or
outsb
xor
xor
fcmovu
or
xor
jl
xor
xchg
or
mov
mov
push
nop
push
cltd
fisttpll
rcl
repz
mov
inc
je
popf
jg
in
xlat
mov
jl
icebp
cmp
test
mov
jmp
adc
int
inc
mov
and
enter
mov
mov
int3
cmp
jg
mov
stos
cmp
jg
cmp
adc
adc
test
testb
call
cmp
mov
andl
shrl
int3
adc
out
js
ficoms
clc
sub
test
std
jge
pop
jle
mov
jns
stos
lret
inc
or
jecxz
or
pop
out
xchg
dec
fcoms
test
stos
mov
std
lods
popf
les
test
cmp
int3
aad
std
aaa
mov
dec
xchg
mov
shll
push
jmp
fdivrl
adc
push
adc
cmp
xor
add
sub
cmpb
mov
shlb
adc
push
pop
push
jns
roll
inc
inc
cmp
mov
leave
add
cld
or
push
ss
jmp
push
cs
aad
dec
push
cmp
jp
lahf
and
sbb
mov
addr16
cmp
sarb
test
ret
or
sbb
mov
jae
test
add
lock
add
and
stos
roll
test
outsl
sub
adc
sahf
push
hlt
lret
pop
call
fcoms
cmpsl
fnstenv
ret
push
pop
mov
fistps
add
and
fimuls
test
mov
push
repz
xchg
icebp
cmp
lods
push
fdivl
inc
fists
iret
or
mov
fiaddl
out
call
mov
xchg
push
lahf
sbb
out
adc
fcomps
iret
popa
testb
fldenv
push
push
mov
mov
cmpsl
jmp
sbb
fsts
and
hlt
clc
arpl
cltd
imul
mov
sarl
jns
mov
push
es
fildll
pop
lret
pop
xchg
or
or
push
mov
pop
repnz
sbb
fcom
adc
pushf
inc
mov
cmp
cltd
iret
js
sbb
jmp
dec
clc
mov
add
mov
xor
into
imul
popa
movsl
xchg
mov
sbb
test
sub
sarb
pop
sar
int3
or
or
xchg
pop
into
mov
std
dec
mov
sbb
daa
stc
inc
ljmp
mov
fimull
xchg
lret
xchg
cmp
idivl
mov
mov
adc
push
aad
mov
mov
scas
sbb
push
jne
add
pushl
test
xlat
inc
mov
push
pop
inc
sbb
fcoms
mov
fdiv
sbb
inc
inc
jge
out
ret
xchg
fists
iret
jmp
lds
adc
xor
push
aad
popf
or
testl
jle
jb
xor
aad
push
rol
xchg
fnstcw
push
xor
scas
ljmp
fnstenv
mov
call
cmc
pop
mov
fldl
nop
lea
adc
mov
adc
roll
pop
xchg
ds
push
outsl
fstl
es
mov
lcall
mov
mov
adc
jle
aaa
jne
adc
stc
xchg
popf
fnstcw
pop
lds
xchg
pop
pop
or
es
mov
das
popf
fmul
pop
xchg
je
in
mov
repnz
xchg
inc
imul
loop
out
rolb
jne
iret
lcall
dec
jae
adc
pop
mov
jne
lea
dec
xchg
pop
test
and
push
pop
stc
xchg
xor
jl
adc
lahf
test
sbb
mov
rolb
loopne
cld
adc
pop
jp
push
push
xchg
iret
pusha
cmc
xchg
or
shll
insl
cs
leave
adc
push
out
imul
shll
fldenv
sbb
in
cmp
imul
pop
cmp
jae
mov
loopne
and
xor
fcomps
div
decb
mov
mov
and
jmp
pop
popa
shrb
sbb
lret
mov
inc
cmp
xchg
cmp
sarl
pop
ja
into
test
movsb
sub
pop
scas
repz
lret
cmpsl
sub
aad
test
mov
push
pusha
popa
mov
shrl
cltd
ljmp
stos
ret
js
movsb
ret
enter
inc
mov
pop
loopne
out
jb
in
push
sub
out
cltd
add
lret
adc
add
data16
sbb
movb
lahf
ss
push
and
push
adc
push
jns
adc
int3
fdiv
push
mov
sbb
add
shlb
and
sbb
andl
cmp
nop
cmc
insb
cmc
jae
subl
aad
push
sub
cmpsl
jle
das
jne
mov
insb
out
lcall
pop
jns
adc
push
add
push
fistl
cmp
jne
dec
lea
pop
shll
ret
fists
test
cmp
xor
pop
xor
andb
test
dec
cli
in
cmpb
shlb
inc
mov
sub
jl
push
cmp
inc
out
mov
jbe
in
inc
enter
ja
jbe
mov
cwtl
pop
inc
jle
cmp
dec
cmp
je
pushf
xchg
xchg
les
push
int3
ds
xlat
xchg
jbe
ffree
mov
mov
xchg
test
fstl
std
ror
gs
fs
sbb
xor
add
js
rclb
rorb
in
inc
frstor
arpl
mov
lret
hlt
inc
in
lret
push
lahf
xor
test
cmc
jnp
lock
add
xchg
in
ss
fldt
push
mov
rcrl
adc
jbe
lret
push
mov
inc
scas
enter
mov
pop
sbb
hlt
push
or
pop
icebp
ss
mov
add
push
push
shlb
push
xor
repz
sbb
mov
cmpsl
dec
ret
mov
fidivrl
sbb
outsl
aaa
jg
mov
stos
sub
lret
sbb
imul
xchg
and
mov
sbb
fistl
roll
fistpll
push
cs
xchg
xchg
stc
rorb
cmp
cmpl
sbb
imul
sub
movsb
lds
mull
pop
dec
lret
stos
jp
adc
stc
and
sbb
sub
jbe
push
sub
orl
cmp
leavew
xchg
jno
push
dec
xchg
sar
lods
xchg
inc
mov
cmp
mov
lock
jl
xlat
out
jbe
orl
int
jne
mov
rclb
sub
mov
mov
mov
dec
or
imul
gs
mov
jle
pusha
fwait
push
fnstenv
mov
dec
test
scas
call
fsubs
mov
mov
flds
cwtl
pop
jg
xor
test
and
imul
mov
jbe
shlb
jnp
outsl
movsl
in
jno
leave
imull
movsb
or
inc
xchg
cmpsl
mov
imul
mov
mov
mov
cltd
jne
xor
cs
sbb
loope
int
xlat
pop
pop
cltd
popa
mov
fisubl
testb
shll
fsubrl
mov
cmp
ja
std
imulb
cmpsb
bound
shlb
enter
push
push
sbb
xor
mov
jno
dec
das
pop
or
repz
lcall
repz
lea
xor
and
mov
rcr
lahf
popa
mov
ja
out
add
fdivrs
out
pop
mov
jmp
clc
lods
or
lret
and
repz
pop
inc
ret
clc
popf
cld
aad
jo
call
addl
mov
jg
xor
shl
in
sbb
sub
iret
clc
lods
test
sub
adc
je
adc
mov
jno
rclb
lahf
push
xchg
leave
cmp
icebp
pop
int
fnstcw
xlat
push
xchg
jmp
xor
mov
pop
pusha
jl
into
test
adc
pop
shlb
pushf
push
jle
cmp
dec
call
mov
lds
and
sub
mov
inc
loop
iret
aam
lock
sub
mov
sarb
andb
clc
dec
push
gs
xor
lcall
mov
sarl
mov
sbb
sub
add
push
add
lock
cmp
je
xchg
lret
movsl
aas
xor
sbb
jle
xchg
scas
xchg
jl
rol
add
lcall
or
push
mov
push
push
cmpsl
push
in
mov
mov
notl
mov
nop
cmp
or
repnz
addr16
adcl
jns
arpl
sub
inc
test
mov
js
shlb
mov
xchg
cltd
repz
mov
xchg
jle
xchg
mov
mov
jg
cwtl
xlat
cmp
lcall
push
mov
cmpsb
adc
orb
cld
adc
ljmp
push
call
or
aaa
addr16
addr16
cltd
sbbb
xor
cltd
ret
and
jmp
repnz
xor
cmp
sbb
adc
mov
adc
lahf
xchg
or
jle
in
add
jno
imul
push
movsb
cmp
sbb
add
or
add
fistpll
dec
push
pop
iret
xchg
cmpsl
loop
sub
jo
pop
stc
repz
xchg
sbb
in
mov
xchg
popa
push
inc
cmpl
iret
push
mov
add
mov
xor
stc
cltd
int
inc
mov
ret
pop
pop
popf
push
lock
adc
rclb
in
mov
mov
xchg
mov
imul
pop
int
cld
nop
and
mov
mov
mov
das
add
aad
popf
mov
sub
insl
pop
data16
negb
movl
jns
and
lds
jns
cltd
sub
divl
sbb
hlt
mov
scas
out
gs
sbb
inc
cmp
jl
jae
cs
or
jl
xchg
mov
clc
mov
or
sub
push
and
and
nop
or
jp
das
jmp
and
push
pavgb
or
mulb
or
test
addr16
sbb
add
adc
pop
test
jb
mov
dec
call
mov
mov
or
cmc
sub
out
xchg
aam
fwait
push
rcrl
inc
jns
mov
and
lds
pushl
mov
xchg
jmp
jg
mov
test
imul
xlat
sbb
test
and
sub
jae
das
mov
inc
ja
jne
std
clc
and
push
es
mov
psubusb
xchg
fst
outsb
lret
xchg
into
ja
sbb
sub
mov
cmc
adc
sub
xchg
jp
xchg
stos
hlt
jl
cmc
lret
cmp
test
enter
mov
das
pop
nop
sub
dec
ljmp
out
mov
je
fcomps
mov
mov
cmpps
shrl
outsl
aad
push
out
clc
lret
mov
adc
enter
lods
xor
mov
lcall
int3
jbe
out
fcmovnb
js
rcll
enter
out
aad
fisubl
pop
cmp
lret
mov
mov
add
pop
add
rorl
mov
lock
popl
sbb
shlb
sbb
clc
mov
push
jecxz
repnz
insl
aas
nop
xor
in
shrl
rcr
fsubr
xchg
rolb
xchg
xchg
hlt
cltd
loopne
dec
js
add
lods
sbb
ds
xchg
rolb
xchg
clc
idiv
rcl
outsl
xchg
xor
sbb
sbb
aad
loopne
sahf
cli
adcl
shrl
cmp
roll
pop
stc
mov
or
push
push
mov
movd
add
pop
mov
xchg
jge
inc
mov
mov
mov
and
lahf
xchg
in
push
sub
cld
mov
cwtd
cmpsl
mov
flds
loopne
adc
jle
pop
mov
jmp
loopne
rclb
or
add
sahf
add
es
mov
lds
and
loope
sub
jg
icebp
mov
xor
mov
mov
jle
int
outsl
adcb
and
sbb
jne
jb
cmp
out
push
jno
cmpsl
jns
addr16
mov
xchg
jo
cmpsl
test
shlb
or
leave
cmp
ret
ja
int
pop
int3
mov
insb
push
add
jp
arpl
je
test
xchg
daa
dec
sbb
and
mov
outsl
ret
adc
shlb
push
cmc
lds
cwtl
and
xor
imull
stc
mov
enter
incb
xchg
add
fdivs
out
and
cmp
call
dec
scas
ljmp
shlb
xorl
es
fdivr
in
mov
fst
jp
cli
mov
daa
pop
mov
push
inc
and
cwtl
inc
shrb
ror
enter
mov
and
mov
jns
popa
adc
or
pop
loop
sub
xor
jnp
push
sub
neg
sub
xchg
push
dec
sub
stos
xor
jg
xor
aad
aad
daa
popa
aad
jbe
pop
sub
sbb
sarb
pop
cmc
decb
testl
xor
ss
cltd
test
imul
sbb
jns
sbb
lds
divb
scas
cwtl
pop
push
and
push
push
mov
rcr
lcall
outsb
loop
cmpb
cmpl
sbb
mov
call
xchg
enter
adc
aad
incl
cmp
mov
pop
inc
mov
jg
cmc
cmp
aaa
add
repz
adc
sbb
ret
divl
ss
in
shll
xchg
mov
cmpsl
adc
and
jno
ss
fistpll
or
push
je
cmpsl
xchg
ja
int3
cmp
ljmp
cmp
fidivrs
js
push
insl
fwait
cltd
negb
add
lcall
lock
insb
push
pop
xchg
fisttps
testl
dec
and
mulb
inc
shrb
xchg
in
xor
nop
pop
subl
sub
jbe
out
jp
insb
cmp
outsl
mov
shrl
cmp
xchg
and
xchg
loope
int
xchg
jp
mov
adc
test
dec
add
jbe
mov
in
mov
arpl
lret
jle
das
ds
cld
push
push
insb
ja
xchg
mov
jno
inc
mov
stc
xchg
sar
decl
adc
push
call
jae
xchg
nopl
movsb
ret
xor
mov
jmp
or
shlb
dec
sub
lock
cmp
push
mov
cmp
cwtl
pop
test
fnstenv
loopne
in
mov
aas
idiv
iret
sbb
pop
push
fdivr
or
mov
out
jno
xor
sub
je
and
push
in
jp
test
repz
es
xchg
xlat
sbb
jbe
aad
fnstcw
jno
imulb
pushf
pushf
aad
aas
pop
sbb
push
xchg
push
fs
dec
movsb
fldpi
jns
lret
sub
xchg
aas
push
std
xor
nop
fsubl
stos
dec
pop
imul
xchg
in
lds
jns
pusha
jb
dec
insb
xor
adc
addr16
mov
sbb
jp
ret
cmp
ffree
or
int3
mov
mov
xorl
lcall
cmp
pop
cmp
das
xchg
push
aaa
mov
add
mov
push
xchg
rol
xlat
mov
mov
pop
cmp
adc
mov
or
stc
cmp
clc
rcrl
pop
leave
mov
sbb
dec
mov
divl
mov
addr16
dec
push
sbb
xchg
arpl
popf
fsubs
sahf
push
bound
push
xchg
andl
xor
movl
cmp
aad
mov
fstps
divb
iret
ret
fisubs
lock
jns
rcrl
inc
nop
imul
xchg
xor
cmc
push
mov
xorb
daa
js
pop
mov
add
daa
movsl
mov
jp
push
mov
or
subl
insl
sarb
dec
inc
adc
les
mov
imul
xor
push
jo
test
or
imul
mov
sub
jns
stc
pop
pop
or
ss
in
mov
rol
std
repz
shlb
push
dec
push
xchg
lret
jg
mov
xchg
std
sbb
mov
add
mov
repnz
adc
shl
adc
ret
enter
sub
lds
hlt
sub
inc
xchg
lds
pop
or
mov
rorb
mov
fninit
movsl
or
xor
je
xchg
pop
adc
push
xor
xchg
adcb
cwtl
loopne
insb
decb
add
pop
adc
add
xlat
sbb
inc
mov
nop
jge
push
test
add
outsl
jne
cltd
or
dec
sub
sbb
xchg
mov
icebp
inc
lods
mov
iret
dec
lods
xchg
fcomps
out
jmp
stc
lock
sub
jle
lock
sbb
leave
stos
mov
xlat
dec
stc
int
adc
push
and
dec
mov
test
and
int
lds
inc
xor
popa
xchg
insl
and
mov
mov
and
addr16
enter
ret
frstor
cwtl
add
xchg
js
jmp
nop
imull
push
enter
ja
cmp
gs
in
test
in
sbb
xchg
js
cmc
xchg
das
dec
dec
inc
in
shlb
test
sub
rcr
outsb
inc
mov
fisttps
add
les
ds
inc
xor
push
push
sbb
or
cmp
jle
pop
stos
aad
pop
js
dec
aad
cmp
jle
dec
ss
sub
pop
iret
ja
jge
rcr
mov
cs
sbb
addb
or
xor
gs
mov
jno
sbb
or
cwtl
cmp
sbb
add
out
mov
push
mov
adc
test
test
daa
call
or
adc
fcomip
cmpsb
push
pushf
mov
adc
clc
aaa
call
cs
xchg
call
sbb
ljmp
test
push
push
jb
sbb
cmp
and
xor
mov
jns
shrb
add
pop
fldcw
jl
mov
jbe
pop
mull
imul
sbb
loope
loopne
add
jecxz
fisttpl
lds
fists
inc
jns
adc
dec
loopne
push
add
ret
sbb
cmp
mov
aas
sbb
jnp
mov
lds
leave
jle
rcr
mov
cmp
push
ss
les
je
cmp
cmc
aad
jns
adc
leave
push
push
push
rcr
testl
enter
xchg
push
pop
pop
dec
mov
add
je
aad
or
imul
outsb
notl
xor
inc
lock
ja
iret
jno
int
lods
push
idivl
jle
pop
das
mov
leave
push
sarl
popf
rorl
jmp
inc
hlt
ss
pusha
xor
test
dec
jae
dec
sub
jg
sbb
push
mov
popf
loopne
or
fdivr
popa
or
pop
mov
sbb
xchg
adc
filds
mov
mov
or
lret
notl
lock
xor
rorb
fdecstp
or
cli
jb
sbb
dec
fld
add
mov
sub
xchg
lret
cs
js
popf
fstl
cmc
push
mov
ret
icebp
sbb
das
xor
lret
addr16
jle
cmp
imul
xlat
adc
add
sbb
xchg
lods
cltd
arpl
jge
inc
cmp
dec
jle
dec
sub
adc
arpl
xchg
or
repnz
or
xchg
add
imul
lea
fwait
cs
repnz
add
cmpsl
push
call
pushf
call
sbb
jg
loopne
imul
popa
push
cmp
repz
or
add
mov
mov
push
mov
cmpsl
in
or
stc
movsb
cmpsl
stc
inc
test
pop
sbb
sbb
sbb
stc
push
push
inc
cs
xchg
shlb
push
frstor
lret
adc
dec
jno
lods
jb
cltd
and
cmp
xor
insb
sahf
outsb
movsl
out
jno
add
cltd
lahf
sti
jle
aam
fucomp
pushf
and
or
xchg
dec
cmpsl
out
push
add
hlt
cmp
pop
sbb
nop
andb
mov
in
scas
jae
push
es
daa
jmp
cld
sub
or
jns
mov
or
popf
mov
int
jecxz
je
xchg
xor
xor
hlt
mov
dec
aam
push
hlt
shrl
lahf
jmp
cmpsl
shlb
out
push
orl
je
test
xor
popa
and
int
aam
add
pop
mov
dec
std
adc
rcrl
lds
mov
rcrl
sbb
scas
jb
jns
lret
mov
mov
idivb
stc
jle
jns
cmp
add
flds
cs
push
inc
jmp
jae
jge
cmp
push
mov
enter
jle
jae
sar
sahf
xchg
pushf
jl
cmp
icebp
sub
in
adc
jns
pop
push
fistpll
dec
inc
imul
jg
pop
popf
sbb
jmp
not
mov
pop
in
push
push
daa
or
mov
dec
lcall
ror
push
outsl
idivl
mov
adc
jbe
dec
mov
cmc
rcll
inc
lock
push
dec
addr16
outsb
addb
lret
cltd
lds
std
sbb
cltd
mov
pushf
sar
mov
movsl
xchg
cmp
int
xor
adc
xchg
cli
dec
into
ljmp
xchg
sub
cwtl
leave
rclb
jl
pop
dec
fsts
fstps
dec
fcoms
lret
addr16
in
cltd
frstor
sbb
or
popa
mov
mov
sbb
and
jbe
es
jle
lret
add
xor
cmpsb
test
out
enter
jge
dec
jg
push
add
icebp
xchg
xchg
sbb
mov
insl
stos
pop
xchg
sub
jg
xchg
mov
mov
adc
jle
movsb
lds
xlat
add
push
pop
and
add
xchg
push
mov
ss
outsl
out
or
jecxz
xchg
shll
daa
out
add
cld
imul
rcr
cmp
jbe
daa
jle
push
mov
fdivrs
call
rcl
inc
xchg
push
aaa
loopne
xchg
ds
mov
arpl
xchg
orb
mov
es
fsubrs
jns
cmp
jbe
cmp
add
bound
enter
cmc
cmpl
jns
pop
int3
xor
pop
add
inc
in
out
out
ret
lcall
aad
mov
aas
adc
add
ficoms
adc
jmp
jge
cmp
mov
cmpsb
rorl
xlat
push
shll
cmp
shll
inc
js
pop
enter
cmc
or
into
cltd
fwait
add
lea
ficoml
int3
mov
xor
push
test
mov
inc
popf
in
ja
dec
pop
mov
shl
lahf
aaa
movsl
inc
push
testl
dec
lahf
lret
xchg
mov
rol
mov
in
imul
aas
shll
out
in
data16
mov
jge
cmpsl
sub
pushf
mov
push
daa
add
mov
pop
inc
xor
cli
int3
lds
sbb
daa
stc
inc
or
in
loop
push
arpl
and
mov
sub
inc
xlat
pop
cwtl
mov
sbb
pop
shll
in
lock
mov
rorb
lds
inc
daa
mov
cmp
imul
mov
xchg
jns
fwait
addr16
sbbb
add
das
xchg
mov
data16
pop
clc
cmc
jle
push
test
sahf
shrb
jp
mov
fmuls
push
push
jae
fisubl
cs
icebp
popa
rcl
or
adc
or
mov
rcrw
int
aaa
shll
loopne
notl
jmp
dec
adc
rol
neg
mov
out
andl
cmc
rcll
notb
sub
and
xchg
scas
mov
adc
xchg
jno
rcrl
call
cld
or
jmp
cltd
int
daa
mov
mov
pusha
xorl
cwtl
pop
jno
jb
push
xor
adc
xchg
inc
pop
lock
adc
inc
testb
aam
int3
test
cld
push
sbb
sbb
cmp
fimuls
js
cwtl
scas
xchg
aad
cmp
cmpsb
test
xchg
xchg
js
aaa
test
rclb
cwtl
lods
js
rcr
push
and
adc
ds
mov
adc
xchg
imul
mov
jg
out
xor
js
inc
fwait
dec
fldl
ret
dec
push
pop
test
test
imul
test
mov
sbb
cltd
mov
add
mov
pop
rep
jns
sbb
ret
enter
fcoml
dec
rolb
lock
dec
cmp
mov
pop
xchg
xor
jb
mov
mov
out
adc
das
adc
in
adc
mov
lock
xchg
jbe
insl
xor
mov
push
mov
push
in
mov
add
shrl
icebp
bound
fistpll
sti
cmpsl
loopne
push
mov
xor
mov
pop
loop
lock
fsubp
xorl
test
inc
int
inc
mov
mov
push
aad
adc
xchg
cmpsb
mov
call
xchg
dec
push
mov
mov
lret
mov
jns
jae
mov
push
jns
fld
xchg
or
inc
mov
loopne
cmp
mov
sbb
std
jne
mov
adc
push
push
out
fsubrl
add
inc
fildll
jnp
or
mov
dec
push
sbb
push
outsb
xlat
divl
imul
imul
pop
insl
cs
mov
repnz
leave
jb
and
and
hlt
mov
or
pop
jns
int
ret
xchg
mov
adc
movsl
popf
hlt
aad
imul
dec
mov
or
xchg
push
ds
in
out
mov
mov
loopne
cs
aas
jg
pop
mov
pusha
inc
push
iret
fnstenv
inc
rorl
rcll
sbb
gs
pushl
mov
push
push
in
mov
ds
sub
repnz
out
cwtl
inc
int
or
push
xchg
es
lea
adc
lahf
inc
jae
call
sbb
mov
into
andl
fnstcw
jnp
xchg
and
pop
repz
in
mov
repz
fs
lock
test
std
cmp
jge
je
orb
cmp
push
icebp
shlb
stos
push
push
cs
fs
cmovo
jle
and
mov
add
dec
dec
mov
xor
push
mov
bound
in
lods
dec
jbe
push
das
jne
xor
sbb
fsubl
repz
mov
push
les
popa
lret
das
fmuls
cltd
and
sbb
repnz
rcr
sbbl
mov
dec
imulb
jo
lock
add
or
jo
out
ficomps
ja
repz
jne
dec
mov
sbb
cwtl
outsb
js
jbe
or
add
lahf
mov
inc
and
adc
leave
add
mov
lds
mov
mov
adc
jg
rolb
adc
mov
pop
fwait
enter
mov
shlb
xor
nop
push
jb
xchg
push
dec
cltd
repz
cltd
mov
or
rolb
aas
shl
in
std
clc
or
adc
icebp
xchg
divl
or
cmc
or
rep
mov
sti
cwtl
shll
mov
cmp
repnz
les
je
adc
out
jno
fidivl
cmp
push
test
cmpsb
adc
pop
and
and
mov
jbe
fsubrp
fsts
push
lret
cmp
mov
jecxz
dec
leave
pop
or
push
fdivl
jno
leave
dec
xchg
jle
and
cmpb
sbb
dec
lea
xor
inc
nop
add
enter
leave
pop
xor
mov
xlat
mov
cmp
jbe
xor
mov
out
mov
test
xchg
fistl
add
jmp
fstpl
enter
nop
add
loop
cmp
int
jmp
add
push
ret
push
jp
mov
mov
mov
aam
leave
xchg
mov
xlat
adc
push
call
push
lock
mov
jno
cmpl
jmp
mov
jmp
or
add
lahf
and
cltd
mov
push
jns
mov
sbb
pop
inc
xchg
out
lcall
enter
fwait
add
jmp
scas
adc
popf
or
adc
aaa
ja
dec
inc
or
mov
test
cmp
rcrl
test
lods
js
mov
mov
call
push
rorl
push
mov
icebp
sub
neg
stos
xchg
sbb
cmp
mov
mov
xchg
mov
notl
adc
mov
adc
in
push
fcomps
movsb
popa
and
mov
xor
add
stos
push
push
push
pushf
pop
lret
jnp
stc
popa
fstps
and
stos
dec
mull
rorl
sub
push
dec
gs
aam
or
jge
fstp
dec
xchg
pop
cli
mov
xchg
clc
lea
xlat
xor
xchg
jb
aam
push
dec
mov
dec
and
jo
sub
dec
icebp
dec
out
dec
loopne
enter
sbb
mov
mov
dec
mov
je
cmp
cmc
xor
sar
mov
imul
dec
or
sbb
add
loopne
out
inc
dec
xchg
adc
fdivl
mov
xchg
jmp
rolb
aad
pop
lods
push
loope
and
xor
mov
or
in
mov
imul
repnz
xlat
mov
lds
dec
mov
enter
divl
sarb
add
fidivrs
int
pusha
addr16
sar
push
or
es
adc
pop
mov
sbb
cltd
ja
adc
inc
mov
xchg
adc
lock
inc
enter
add
imul
fnstenv
add
aad
bnd
lds
xchg
jg
jge
inc
pop
cmpsb
adc
lret
aad
mov
cltd
mov
test
xchg
jns
aad
data16
jnp
dec
stc
push
aad
aad
inc
xor
fisttps
ret
sar
cmpsl
cmp
xchg
fadds
mov
lcall
inc
dec
mov
out
pop
jns
lods
call
push
push
rorb
outsl
rorb
cmpb
inc
incb
jbe
in
imul
push
dec
mov
idivb
int
bound
jbe
ret
jmp
add
cltd
test
cmp
mov
fdivp
jecxz
cmp
sub
stos
mov
add
or
push
sarl
lcall
dec
outsl
aad
mov
aas
jbe
pop
rolb
xor
sbb
into
or
sbb
ja
lods
push
mov
adc
shl
stc
scas
ljmp
mov
out
cmpl
ds
divl
scas
sti
cmp
cld
cmp
mov
push
xor
jno
and
cmovo
xchg
ret
cmp
cltd
bound
call
outsl
jae
adc
cltd
push
test
test
jecxz
das
sbb
lock
mov
ret
adc
cltd
adc
cltd
divl
adc
mov
jg
jno
adc
stc
jge
xor
mov
cld
mov
pop
mov
lret
xor
mov
stc
std
rorb
negb
fildl
xchg
mov
sbb
adc
sar
push
mov
dec
out
movsb
inc
mov
or
ja
xchg
int
push
in
cmp
ja
dec
iret
or
rcr
cwtl
js
push
jo
mov
out
cmp
xchg
push
sbb
cmpsl
pop
sbb
gs
mov
xchg
mov
shl
mov
pop
cli
mov
stos
push
iret
jnp
sub
das
ja
div
add
or
pop
mov
test
sub
cld
xchg
dec
aad
rcrb
inc
push
insb
add
jnp
les
lods
jb
or
mov
icebp
lahf
out
mov
xor
push
jecxz
cmp
rcll
or
push
add
and
xor
out
add
xchg
scas
in
icebp
push
inc
mov
or
mov
rcll
rcl
ret
test
cltd
push
mov
jbe
mov
inc
ret
pop
mov
icebp
mov
xchg
cmpsb
testl
stc
push
add
push
arpl
jge
cwtl
push
push
xchg
data16
shll
sbb
pop
bound
rolb
lds
aaa
aam
sarb
inc
jo
addr16
add
ror
outsl
fmuls
loopne
dec
das
pop
call
xchg
imul
fsubrs
xchg
inc
cmp
inc
cmp
cli
scas
shrb
and
and
mov
sahf
scas
cmc
in
push
jp
fcmovu
lods
mov
and
lock
flds
cmp
ret
arpl
rorl
xor
mov
xchg
lds
and
aad
in
ja
lahf
push
fxam
sub
inc
mov
roll
pop
xchg
cmc
cmp
jecxz
push
cmp
cwtl
daa
jge
sarl
sbb
push
dec
pop
iret
clc
nop
flds
sbb
shlb
push
add
shlb
loope
sbb
leave
subl
jae
mov
jns
jge
sub
lret
push
xchg
cmp
mov
leave
mov
cld
stos
in
mov
xchg
add
clc
sbb
clc
lret
ljmp
xor
sahf
pop
xchg
add
imul
mov
add
in
xchg
pop
hlt
push
inc
adc
rclb
mov
in
mov
cltd
fnstenv
shlb
pushf
mov
push
mov
fdivrs
clc
dec
inc
adc
out
mov
cmpsl
push
xchg
xchg
inc
mov
mov
shl
pop
cmpsw
cmp
mov
pop
cmc
adc
adc
inc
adc
stc
imul
adc
clc
xchg
nop
inc
data16
leave
mov
sbb
lock
mov
repz
xor
outsb
xchg
jle
adc
js
cltd
push
add
xlat
jnp
cli
xchg
cmp
jns
lahf
adc
aad
push
nop
add
jo
pop
icebp
les
ret
notl
stc
dec
adc
xchg
and
retw
frstor
lock
or
xorb
rcrb
sub
gs
mov
push
cltd
es
cmc
aas
jbe
dec
pop
enter
outsb
andl
sub
jmp
clc
pop
xchg
push
add
cltd
rol
push
sbb
fs
loopne
clc
xlat
push
mov
cmpl
psubsw
mov
leave
push
sub
imul
cmp
xchg
cltd
cmp
loope
xlat
jne
xchg
shlb
cwtl
cs
and
jb
lea
rolb
lahf
xorl
cmp
push
call
cld
or
idivb
inc
jae
pop
sub
out
sahf
das
xor
imul
pop
xchg
xchg
and
scas
cmp
adc
nop
and
nop
lds
es
lahf
iret
lea
frstor
mov
testb
jmp
fiaddl
add
adc
stc
icebp
leave
or
or
mov
inc
ret
adc
rorb
mov
in
pushf
push
xlat
loop
shl
adc
fwait
xchg
loopne
push
cmc
pop
lds
mov
mov
fxch
sub
repnz
stos
mov
daa
lds
cli
orl
add
repz
sbb
aaa
push
std
cwtl
jmp
sub
xchg
push
mov
movsb
and
pop
iret
xlat
add
hlt
fstpl
fnstcw
xchg
mov
aam
in
fneni(8087
data16
and
scas
stos
mov
ja
test
repnz
popf
popa
sbb
and
push
or
sbb
jg
movsl
inc
jecxz
push
mov
mov
xor
jle
cli
sbb
jp
cmp
cmp
cmp
rcll
push
rorb
int3
mov
cltd
mov
inc
cld
test
loop
nop
and
fsubrl
cmp
cmpsl
int3
lret
mov
hlt
movsb
dec
push
scas
or
test
mov
jp
xchg
xor
mull
mov
out
xchg
scas
mov
adc
divb
xor
dec
pop
cmpsl
and
adc
mov
and
fsubrl
dec
jns
js
rorb
js
rorb
inc
mov
cmp
dec
and
lret
fmul
mov
add
fisttpll
lods
loopne
cmp
sbb
cmpsl
shl
dec
cld
xchg
mov
sar
push
adc
inc
xchg
je
dec
fnstsw
cmc
adc
lahf
dec
adc
inc
mov
push
pop
dec
lahf
fldenv
and
mov
jb
xor
push
mov
inc
push
mov
or
lock
or
cmpsl
mov
inc
sbb
orb
loope
jl
shrb
jecxz
pushl
pop
push
dec
pop
sti
jmp
insb
iret
in
push
inc
outsb
mov
js
add
sbb
inc
testl
jl
add
out
xlat
mov
cmp
adc
dec
xchg
pop
daa
cmp
sbb
pop
xlat
jg
cmp
pop
imul
clc
out
loop
pop
inc
jo
clc
cmpsl
ja
fidivrs
cs
je
sbb
xchg
into
adc
popf
xchg
pop
inc
aas
cmp
inc
movl
or
in
mov
test
fistl
mov
add
rol
scas
xchg
out
repz
and
xor
xchg
pop
insl
xchg
aaa
cltd
fs
lcall
dec
pop
or
sub
repz
sub
mov
rep
sub
pop
aaa
imul
mov
inc
popa
and
stos
lds
lds
xchg
sub
or
aad
inc
std
hlt
sub
dec
pop
inc
or
sub
push
in
pop
or
lea
cltd
mov
mov
shr
push
sbb
jl
je
xor
iretw
rorl
jl
xchg
mov
idiv
xor
roll
cmp
push
not
cmp
bound
jp
xchg
cmc
sbb
xlat
cmp
mov
popf
jl
fcompl
cs
dec
test
jle
mov
xlat
sub
shrb
push
pop
add
cwtl
xchg
stc
jp
lds
outsl
lret
adc
or
cmp
jl
seta
bound
sub
stos
push
push
cltd
push
pop
xor
inc
clc
inc
jecxz
rcrl
sbb
jle
cmp
addl
shl
sbb
rcll
pop
push
and
add
mov
jecxz
cmp
jle
push
push
scas
pop
pop
out
mov
push
mov
add
pop
mov
xrelease
jns
mov
mov
jmp
sbb
rcll
or
mov
jge
stos
mov
push
inc
push
divb
cs
push
xchg
bound
int3
test
negb
and
mov
insb
add
pop
jnp
xor
pop
adc
adc
dec
add
jecxz
mov
cmp
out
cltd
cmc
push
mov
lret
lret
mov
xchg
xchg
stos
sbb
xor
xor
adc
add
shlb
add
cld
sub
push
cmp
sti
lods
push
jp
pop
cltd
iret
and
outsb
sbb
pop
push
pop
enter
pop
jmp
and
cltd
jae
or
mov
push
sbbl
or
add
pop
push
ds
test
insb
cmc
sti
or
scas
inc
mov
and
pushf
or
leave
leave
adc
jge
push
fisubs
imul
jnp
mov
adc
sub
iret
jp
int3
mov
xor
in
fucom
inc
pop
sub
das
aas
pop
repnz
push
push
insb
mov
je
push
out
pop
mov
lcall
add
inc
fstl
xchg
jno
es
lock
pop
inc
pop
movsl
rclb
push
lods
or
scas
iret
mov
xchg
push
pop
or
lds
jmp
mov
mov
xchg
jns
push
xlat
jnp
decb
dec
cs
sub
sbb
xlat
je
rcrb
stc
adc
jg
xchg
push
outsl
or
cmp
inc
pop
mov
std
inc
jns
mov
xchg
xor
push
clc
rclb
mov
push
jp
mov
xchg
fisubrs
ja
pop
jns
jg
aad
cmp
leave
push
mov
xchg
inc
jo
xor
mov
test
aad
xchg
out
lds
call
sbb
addl
add
in
xchg
pop
jmp
adc
ds
inc
adc
movsb
xchg
mov
insb
and
and
lret
inc
cmp
test
pop
rol
js
orl
pop
sub
push
shlb
cmpsb
xchg
cmc
iret
adc
and
adc
jbe
fnstsw
mov
loop
add
les
inc
idivb
inc
sti
arpl
lret
jle
into
inc
xchg
mov
and
inc
xor
frstor
push
test
arpl
sbb
mov
nop
xchg
xor
mov
jo
aam
leave
leave
ss
clc
jns
jo
or
popa
jo
rclb
xchg
call
xchg
lcall
mov
pop
test
inc
pop
pop
mov
push
pop
gs
inc
jmp
cltd
sbb
rcr
mov
cmp
cmp
pop
pop
sub
aad
jb
lcall
divl
jmp
and
in
cmpsl
mov
xor
nop
jns
mov
cmp
cmp
mov
mov
orl
sbb
rcr
mov
roll
loop
call
scas
cltd
ret
out
cmp
push
dec
lcall
adc
jecxz
push
std
cwtl
cmp
lods
in
jge
jmp
lcall
pushf
add
jg
sti
repnz
test
inc
sub
push
fcomi
cmp
inc
lock
les
pop
scas
repnz
pop
push
fst
cwtl
mov
xor
or
sbb
mov
les
outsl
xchg
das
mov
je
sbbl
fs
push
mov
repnz
mov
cmpsb
cmp
adc
cltd
cmp
imul
ss
fxch
fiadds
sub
adc
cmp
adc
mov
push
push
popa
cs
loopne
lcall
or
inc
add
adc
xorl
decl
mov
xchg
xor
cmpsl
shlb
mov
rcl
lods
cmc
daa
dec
xor
repnz
inc
sub
int
mov
push
ds
inc
idivl
push
mov
std
mov
mov
stc
sub
push
dec
iret
cld
rcll
jb
mov
movsl
xchg
in
cmp
push
sbb
mul
jns
rolb
sbb
inc
movsb
jo
sub
ret
or
mov
xchg
insl
out
cmp
mov
out
mov
mov
rorb
testb
inc
adc
sub
and
inc
les
inc
inc
sub
loop
xchg
ret
push
arpl
pushf
push
mov
xchg
push
push
sbb
jns
testb
xchg
std
or
add
pop
dec
push
xor
adc
jecxz
insl
xorl
xor
lahf
jle
int
ljmp
xchg
sbb
adc
into
add
xchg
xchg
jg
icebp
adc
or
addr16
sub
mulb
push
andl
push
ficomps
insl
jp
testb
ret
sub
jl
aad
lds
call
sarl
lcall
mov
lock
test
stos
cmc
fcoml
dec
ficomps
mov
ret
push
mov
pop
mov
xor
cmp
adc
aad
cltd
mov
lret
fwait
and
out
sub
jmp
push
inc
into
andl
add
lret
addr16
sahf
pop
rclb
notl
shrb
ror
pop
ret
push
je
sub
jmp
push
push
out
mov
mov
jae
adc
movl
cmp
sahf
xchg
fs
mulb
sahf
push
negb
xchg
les
xchg
scas
ljmp
mov
push
loop
adc
lods
test
mov
lock
es
xlat
sub
loopne
and
mov
push
push
repz
mov
pushf
daa
mulb
mov
addr16
add
dec
lret
js
add
mov
in
dec
push
stc
movsb
pop
out
sub
inc
std
xchg
jle
pop
aam
insb
mov
add
addr16
mov
adc
xchg
lods
shr
jnp
mov
cmpsb
pop
mov
push
lods
aad
and
mov
push
inc
inc
pusha
jle
inc
adc
out
imul
out
ret
cmp
push
leave
lret
sarb
ja
add
pop
cmp
jp
test
mov
insl
or
daa
fnstcw
movsb
lcall
xchg
test
insl
movd
and
or
and
and
adc
xor
adc
push
bound
push
or
xchg
mov
bound
and
outsb
jbe
fisubrl
sub
xor
test
ss
addr16
mov
inc
jno
inc
sti
cs
inc
mov
jmp
mov
lock
fisubl
xchg
or
inc
xchg
or
nop
add
shlb
jno
add
push
sbbb
shlb
ret
aad
jno
xor
sarb
pop
test
into
and
jmp
xchg
jecxz
or
sub
cmp
imull
mov
cld
jne
inc
sub
ret
add
ds
jne
idivl
addr16
outsl
add
add
scas
dec
xchg
inc
adc
cs
iret
mov
aad
lds
xchg
push
add
push
xor
push
testl
jns
es
mov
dec
in
cmp
lock
bound
cltd
pusha
aaa
and
lretw
lock
inc
xor
fdivr
rol
jne
sub
iret
dec
outsl
int
jle
je
aas
imul
fcomp
cmp
mov
rorl
aam
loopne
outsl
arpl
mul
stos
sti
jnp
adc
mov
push
pop
dec
sub
repnz
jno
push
mov
ret
jne
xchg
fucomp
cmp
ds
idivb
push
or
mov
out
mov
and
sbb
cltd
stos
aad
jle
sub
roll
movsl
mov
xchg
lret
push
aaa
mov
jp
xchg
imul
jns
fbstp
xor
fdivp
sub
insb
lds
mov
mov
fwait
xchg
es
addr16
inc
shl
cmp
addl
dec
xor
sbb
push
repz
push
inc
cmc
xor
adc
jne
and
dec
in
mov
pop
mov
adc
dec
sbb
adc
adc
outsb
dec
jle
mov
enter
popa
jbe
dec
jno
mov
repz
aam
cmc
icebp
int3
lock
clc
cmp
in
sbb
mov
jae
fsubl
push
cs
mov
xchg
scas
xchg
xchg
sar
bound
stc
cmp
sub
gs
mov
xor
or
inc
cwtl
push
dec
push
jmp
sbb
adc
push
and
popa
int3
xor
xchg
in
cmpsl
pop
mov
imul
sub
mov
add
xor
jle
mov
mov
out
loope
lret
or
fldcw
pop
fcomps
jecxz
and
cltd
fdivs
fimull
and
shrl
sbb
mov
add
movsb
mov
jb
or
sbb
fxch
mov
mov
fstpt
or
insl
lock
jmp
jecxz
int
lcall
lret
fidivl
insb
pushf
pop
mov
pop
pop
je
inc
iret
decl
bound
outsl
outsb
jecxz
test
mov
mov
in
pop
daa
in
insb
rolb
into
cld
mov
sbb
loop
cli
fnstenv
push
jns
filds
stos
push
push
jp
ret
cmpsl
dec
in
push
dec
cli
add
cmp
or
sbb
xor
jmp
test
inc
add
push
sbb
icebp
ds
xor
fsts
jmp
ficomps
xlat
cvtps2pi
daa
rolb
notb
mov
iretw
add
mov
inc
jb
mov
aad
addr16
adc
loopne
push
cmp
xor
pop
jl
fsubr
idivb
inc
adc
xchg
iret
push
int3
mov
pop
dec
arpl
fistl
into
scas
pop
cltd
mov
push
insb
rclb
pop
mov
dec
lret
xor
push
test
push
adc
shl
push
fcomps
or
inc
xrelease
inc
add
fidivrl
rcrb
arpl
push
add
add
test
loopne
es
xlat
test
add
ret
fsts
lahf
ret
cmp
hlt
or
pop
mov
push
imul
mov
jno
je
mov
cld
inc
cmpsb
fwait
movsl
inc
mov
mov
stc
xor
mov
and
out
ret
mov
dec
mov
dec
ljmp
test
or
dec
jbe
outsl
pop
lock
sub
or
std
rolb
movl
sahf
jnp
movsb
mov
jae
jo
les
movsl
stos
inc
popa
xor
popa
sbb
push
xor
fisubrl
sub
iret
or
xchg
adc
fcmovbe
mov
add
xchg
mov
dec
stc
sbb
lahf
push
sub
dec
xlat
ret
in
or
mov
mov
call
dec
push
lret
in
divl
xlat
loope
rcr
movsb
fyl2x
jle
adc
xor
pop
mov
sub
test
daa
or
xchg
popf
mov
push
popa
xor
jb
push
test
pop
dec
repnz
addl
add
cwtl
adc
test
jno
xrelease
jmp
xchg
inc
pop
mov
pusha
shlb
mov
ret
idivl
scas
xlat
rcll
xchg
repz
clc
inc
add
add
out
jns
loope
in
rcrl
in
fistpl
das
or
addl
or
fisubs
sbb
push
sbb
push
ljmp
adc
mov
xchg
mov
icebp
cld
jl
adc
fdivs
adc
frstor
bound
inc
pushf
xchg
jb
adc
xchg
mov
hlt
inc
loop
pushf
mov
movsl
testb
adc
daa
lods
fistpll
push
push
std
test
ja
gs
scas
dec
das
mov
popf
das
dec
inc
jl
outsb
adc
push
add
lcall
ljmp
test
imul
fiadds
mov
dec
dec
mov
stc
movsb
shrl
dec
js
xchg
mov
cld
mov
lahf
push
inc
push
rcrl
jg
xor
or
xchg
clc
ficoml
mov
aas
adc
xchg
out
fldenv
scas
dec
dec
cmp
inc
jmp
mov
mov
insl
lods
ss
mov
out
mov
mov
jp
or
xchg
stos
std
pop
shlb
icebp
call
cs
sbb
push
or
push
lea
lcall
das
xor
rcll
jbe
mov
aaa
jge
sbb
outsb
jns
push
js
and
adc
neg
shll
mov
movsl
cld
jge
push
cli
xor
cmpsl
lds
xor
cmpl
mov
fmul
rorl
xor
adc
test
cltd
and
adc
cmc
roll
cwtl
int3
mov
jno
mov
push
out
lret
cmp
dec
ret
mov
sar
xchg
arpl
shlb
xchg
fdivr
mov
shll
enter
lds
pushf
sbb
mov
arpl
icebp
dec
out
sbb
pop
fstl
sbb
gs
aaa
lods
out
mov
pop
aaa
fisubrl
rorl
jp
daa
insl
ror
xchg
adc
dec
cmc
inc
mov
pop
inc
xchg
insl
add
xor
outsl
cs
xlat
cltd
insl
pushf
dec
insl
rcr
cmc
and
cltd
test
fstl
push
mov
repz
push
push
stos
std
mov
repz
mov
call
cmp
loopne
cmc
push
add
lods
std
or
or
clc
mov
rcl
idivl
xor
in
or
push
hlt
push
lret
push
repnz
dec
cli
cwtl
aad
pop
push
mov
push
cltd
jge
xchg
xlat
push
popf
mov
push
pop
pop
lret
scas
movsb
jl
mov
jno
test
popa
sub
mov
int
andb
shll
cmp
imulb
arpl
mov
mov
jns
jb
or
daa
jg
or
jnp
pushf
xor
jo
dec
mov
cmpsl
push
adc
xchg
rcrb
xor
daa
shlb
cltd
mov
jge
mov
in
inc
aam
adc
lahf
cmp
jecxz
adc
dec
test
jge
loopne
clc
lods
sub
ljmp
sub
das
sub
push
subb
jns
jns
jle
cltd
orl
loop
lret
or
or
andl
mov
push
xchg
jnp
fstl
into
jbe
lea
popa
cmc
inc
out
rcll
call
scas
int
dec
sbb
adc
adc
add
insb
jb
add
les
jmp
xchg
adcl
mov
push
in
shrb
call
lcall
pop
out
rolb
fisttpll
int
shlb
aaa
mov
ja
shlb
dec
insl
mov
add
xchg
jecxz
jl
and
pop
stos
rclb
jae
adc
lcall
adc
das
cmc
pop
jae
lcall
push
push
inc
and
or
hlt
lret
jns
imulb
mov
lock
mov
test
lods
jne
sub
outsl
int3
nop
ret
mov
addr16
jns
cltd
cmpsb
jle
je
mov
in
insb
adc
out
cmp
xor
mov
adc
xlat
lods
xor
mov
nop
and
addr16
add
popa
sbb
or
mov
push
sub
les
cmc
test
fsin
mov
or
sbb
repz
push
sub
xor
add
rorl
dec
roll
ja
leave
mov
ds
push
cld
jle
hlt
mov
dec
scas
jmp
inc
fstpl
push
aad
inc
adc
jge
into
xchg
cmpsl
mov
mov
addr16
call
leave
xchg
lret
aam
andl
in
ja
cmpsw
int
loopne
aaa
movsl
xchg
xchg
mov
aad
add
stos
loopne
cmpsb
inc
sbb
inc
dec
nop
mov
sub
mov
cmpsb
nop
cs
inc
dec
mov
sbb
hlt
les
sbb
ss
ds
push
test
test
cs
test
cltd
mov
mov
movsb
iret
mov
adc
cmp
shl
dec
outsl
pop
xchg
pop
mov
cli
inc
xor
xor
add
fnstsw
sbb
je
add
mov
fdivrs
sbb
add
mov
adc
sub
add
paddusw
idivb
lret
pop
into
pop
or
and
or
xlat
into
sbb
add
pop
stos
push
lret
jno
sbb
sub
pushf
rol
mov
or
ja
mov
popa
test
adc
ret
dec
inc
mov
shrl
inc
stc
fwait
ds
retw
mov
xor
jno
push
and
push
mov
mov
testb
in
pop
mov
push
sub
mov
out
movsb
call
dec
testl
sar
xchg
lret
fldenv
or
outsl
rorl
pop
cmp
insl
test
push
ds
and
push
adc
sbb
mov
xor
xor
mull
imull
aas
outsb
nop
int
lret
push
push
insl
rcll
xchg
sbb
adc
arpl
repz
xchg
jp
imul
loope
pop
pop
rcll
data16
push
iret
push
push
insb
popa
inc
or
ss
jo
lods
push
cltd
clc
dec
movsl
cs
jecxz
js
cmp
sbb
mov
leave
adc
ret
ljmp
movsb
test
push
mov
lcall
fcomps
mov
rcrb
push
mov
add
jmp
pop
add
add
pop
sub
movsb
ret
std
je
cmp
sbb
pop
rcll
xlat
stc
sar
repz
popf
mov
clc
out
dec
push
push
push
pop
sahf
popa
fbstp
mov
dec
xchg
sub
cmp
xchg
repnz
jbe
in
push
jecxz
ficompl
cmp
test
mov
popa
repz
cmp
fimull
shlb
je
leave
ds
jge
les
rcrb
insl
sahf
fwait
shl
jmp
test
jb
and
sub
ljmp
jb
xchg
cs
push
outsb
outsl
xchg
mov
xchg
test
rcl
inc
insl
popf
inc
repz
jmp
lahf
cmp
jne
shl
pop
addr16
imul
outsl
cltd
mov
jno
decl
lret
adc
pushf
jle
aaa
pop
lock
adc
jne
mov
lahf
mov
push
ret
cs
jp
out
or
pop
fidivl
movsb
xchg
popf
xchg
hlt
mov
sahf
rolb
xor
mov
sub
mov
jl
sub
andb
fstps
fcomps
mov
clc
sahf
mov
push
cmp
ljmp
sahf
xor
lods
sbb
arpl
and
push
push
test
or
fisubrl
cs
cmpl
out
sub
shlb
inc
mov
insl
neg
insb
ja
mov
jle
cltd
mov
adc
cmc
sbb
or
sbb
and
jb
and
outsl
mov
pop
fidivrl
push
jg
inc
test
inc
scas
cmc
shl
aad
repnz
insb
sbb
adc
scas
mov
vandnps
xchg
inc
test
xchg
dec
fmuls
jle
cltd
pop
lret
pop
movsb
insl
mov
pusha
sbb
std
aad
hlt
fmuls
and
in
in
cs
xchg
sti
xchg
cmp
pop
test
inc
lods
aaa
mov
fyl2xp1
ds
pop
jns
pop
pop
leave
aad
je
scas
sarl
cs
mov
and
outsb
mov
cltd
adc
xchg
shlb
aam
jmp
fdivrs
dec
cmc
and
mov
pop
imul
lcall
dec
pop
cwtl
movb
mov
aad
mov
pop
xchg
iret
xor
add
daa
sbb
gs
xchg
out
int
push
xchg
in
cmp
xor
iret
jns
jp
push
jns
sarb
pop
push
dec
cli
arpl
pushf
test
inc
rclb
je
xchg
lock
and
and
inc
fcmovnb
sahf
jmp
pop
fmul
xor
push
loope
out
jbe
adc
in
cmpsl
punpcklwd
dec
mov
ds
cmp
in
dec
cmp
inc
leave
inc
shrb
add
mov
pusha
lods
jns
shrl
rcl
xchg
sti
jge
cltd
lahf
push
into
aas
cmp
sbb
into
pop
adc
add
into
sahf
sbb
push
xor
pop
adc
clc
push
push
push
aam
push
mov
inc
or
pushl
ljmp
xor
xlat
cmpsl
sbb
repz
or
incl
xchg
ds
jae
jno
movsb
adc
or
pop
notl
stc
aam
cmc
cmc
or
adc
scas
or
xchg
mov
cmc
aad
sahf
cmc
add
aad
divl
inc
adc
xchg
jne
mov
in
bound
lret
adc
aad
jge
push
mov
xchg
cmpsl
imul
test
test
cmp
stc
push
fistps
das
jbe
js
add
pop
mov
data16
mov
das
test
jo
dec
mov
jbe
sarb
imul
inc
leave
pop
mov
stos
adc
jbe
pop
mov
jns
out
adc
add
out
in
lea
push
loopne
pusha
or
addl
xchg
or
fmul
sub
scas
inc
into
out
add
test
out
fisubrl
xor
shrb
neg
shll
pop
dec
mov
stos
add
push
cmc
iret
or
pop
shll
push
int
inc
inc
adc
in
sub
push
adc
stc
out
mov
cmc
clc
stc
xchg
add
mov
subb
push
popf
jbe
lds
fstps
cs
xchg
and
out
shl
xchg
pop
loopne
or
dec
subb
out
call
sbb
xchg
mov
adc
xchg
sti
aad
imull
xchg
std
add
stos
lcall
movsb
clc
add
ret
int3
gs
add
mov
js
ss
push
adc
std
adc
jae
lret
or
mov
sbb
push
out
lds
or
jge
push
scas
mov
or
cmpsl
dec
adc
fstl
into
xor
cltd
push
ret
xchg
jmp
push
sbb
lahf
fld
xor
call
pop
cmc
repz
xor
mov
and
add
test
lcall
inc
push
jnp
sbb
in
rolb
enter
push
mov
mov
adc
pop
outsl
mov
test
sbb
test
insb
or
xor
addl
stos
pslld
rolb
dec
and
fldcw
js
into
lahf
xchg
or
and
push
pop
adc
xchg
fdivp
popa
test
push
sub
dec
or
out
pop
adc
mov
push
test
repz
movsb
xor
cs
cltd
mov
insb
pop
push
jle
push
aaa
shll
jo
cmp
imul
xlat
pop
iret
sbb
gs
js
int3
mov
in
mov
jbe
jne
xchg
add
adc
pop
push
mov
adc
and
pop
jl
push
push
stc
leave
mov
push
push
ficompl
mov
notb
sbb
xchg
cld
cltd
fnstenv
push
cltd
movsb
fstl
jns
lods
add
lods
jmp
mov
push
push
repz
mov
adc
sub
es
push
xor
sbb
call
shlb
sub
pop
test
cwtd
je
push
xchg
stc
adc
stos
enter
sbb
mov
rcrl
cltd
sub
sub
cld
lods
cmp
repz
push
or
clc
xchg
test
aad
add
push
iret
adc
mov
mov
movl
mov
aaa
xchg
call
add
gs
scas
jne
inc
sarl
hlt
clc
repz
xor
je
mov
das
imull
sbb
or
shr
mov
mov
std
mov
insb
cmp
mov
inc
pop
xchg
adc
aaa
mov
xor
pop
outsl
lods
xor
repnz
pop
xchg
mov
dec
je
push
sahf
push
cltd
xor
push
jbe
je
rcll
sbb
divl
sbb
push
lahf
fbld
nop
xchg
xor
push
sarl
ficomps
push
test
ja
negb
ss
xchg
xor
sbb
popa
mov
adc
push
mov
shll
mov
rcr
jbe
cltd
outsb
and
sbb
repnz
jno
loope
xor
lcall
mov
cltd
test
repz
push
mov
push
cmp
ficomps
push
or
sbb
push
int3
imul
fnstenv
xchg
jmp
fidivs
mov
mov
aaa
test
mov
negl
push
clc
jge
sub
cmp
pop
mov
push
imull
mov
movsb
fcoml
aam
xor
jg
pop
jmp
stos
xchg
mov
pop
sub
mov
sar
clc
fcom
mov
pop
pop
rol
ja
aaa
leave
xchg
dec
mov
aaa
inc
mov
dec
movl
mov
xchg
xor
in
add
xchg
mov
stos
std
pop
lods
adc
xchg
adc
aam
jmp
pusha
sub
and
sbb
cmc
or
lock
jo
shll
ds
jb
inc
jne
sub
pop
rolb
jp
stc
cs
and
sub
adc
popa
adc
adc
sbb
in
sub
rcrl
jecxz
push
rcrb
enter
imul
cmp
aad
mov
ja
jg
repnz
or
into
xchg
push
sub
jecxz
xchg
bound
jle
push
mov
dec
pop
xorl
xor
repz
int3
cmp
aaa
adc
mov
jno
push
xchg
push
sbb
jae
mov
cmp
std
push
repnz
stc
lods
push
enter
test
and
or
jp
mov
movsl
mov
or
fistpll
xchg
cmpl
and
sub
and
xchg
dec
sbb
cmp
and
rcll
push
push
sbb
repz
jne
pop
fstl
out
js
push
int
lods
mov
adc
push
fsts
lret
xlat
rcr
cld
push
mov
mov
push
mov
inc
mov
add
add
add
add
jp
repz
xchg
jle
or
jns
lret
scas
ret
gs
call
mov
xor
mov
dec
adc
ficompl
xchg
mov
push
adc
in
inc
xchg
call
into
pop
push
sbb
pop
enter
cs
js
dec
ret
jmp
and
in
daa
imul
popa
hlt
cltd
xor
mov
fidivrl
sbb
lcall
mov
aaa
js
or
in
sbb
imull
scas
sbb
cmp
push
fs
sub
jmp
jb
shrb
js
push
add
push
and
aaa
popf
adc
int
not
rorl
lock
cmp
add
leave
mov
xchg
jmp
mov
daa
dec
shlb
ds
xchg
inc
or
or
or
mov
xchg
loope
out
int3
push
testl
nop
push
dec
loope
jnp
jb
mov
pop
push
lret
push
mov
jb
test
ds
aaa
sbb
push
test
mov
xlat
sub
add
cltd
xchg
rolb
adc
cs
jge
repnz
cs
repnz
mov
mov
rcl
daa
adc
sbb
add
push
ss
xchg
scas
cmp
rol
add
push
std
mov
imul
pop
mov
push
mov
fs
imul
and
iret
and
popa
loope
xchg
fsin
mov
loopne
lahf
imul
cltd
imul
jne
outsb
lret
mov
idivb
mov
push
lds
jno
mov
sbb
mov
xlat
jns
adc
dec
cltd
scas
add
cmp
popf
mov
cltd
sub
imul
sub
lds
mov
loope
cltd
cmp
xor
xlat
xlat
jns
push
clc
loop
xor
repz
mull
xor
cmp
aam
aaa
ds
jecxz
fwait
sahf
call
mov
sar
xchg
rcrl
xor
mov
push
push
lock
subb
adc
inc
outsl
jmp
cmc
dec
push
fiadds
enter
pop
adcl
xchg
loop
mov
adc
fstp
push
mov
mov
out
mov
es
lods
jbe
leave
jbe
sub
shll
outsl
inc
stos
mov
lods
xchg
pop
popa
push
and
gs
mov
lock
dec
lock
sarb
mov
pop
push
cwtl
imul
push
negl
arpl
jbe
loop
cs
loopne
push
pop
xchg
shll
dec
dec
repz
add
dec
nop
lds
cmc
cmc
add
ret
and
push
shlb
pop
clc
and
xchg
arpl
adc
jne
xor
mov
pop
clc
cmc
leave
xchg
push
scas
xchg
lds
jno
jp
adc
push
testl
dec
rcl
or
or
add
and
xchg
push
sub
cltd
aaa
pop
jle
stc
test
xlat
adc
or
push
xor
inc
rcl
repz
in
out
lret
push
cltd
jbe
lods
daa
mull
push
mov
dec
mov
sub
xor
mov
mov
fcomps
out
or
in
adc
sbb
dec
cmp
lcall
arpl
add
sbb
adc
pushl
aad
add
movsl
imul
mov
jnp
sub
fstl
jle
test
inc
aad
adc
lds
and
outsb
lret
daa
xchg
jnp
pop
sahf
lock
seto
rcll
cmpsl
iret
cltd
loopne
loop
push
subl
xlat
daa
dec
aas
dec
test
and
pop
push
icebp
mov
jp
aas
repz
data16
dec
jge
mulb
sub
leave
mov
jo
mov
xchg
add
ljmp
mov
add
arpl
xchg
std
inc
xor
mov
movsb
testl
clc
enter
pop
jbe
or
lcall
mov
dec
pop
test
mov
xor
cmpsl
mov
ret
fstpl
scas
jns
mov
dec
icebp
jb
lret
pop
push
jns
sarb
fnstsw
clc
lret
add
clc
mov
rcl
fildll
fdiv
push
cmpsb
cmp
arpl
dec
das
addr16
repnz
adc
out
cmpsl
mov
adc
mov
mov
jae
outsb
fisttpll
push
inc
push
adc
nop
mov
shll
clc
fcompl
cwtl
repnz
add
push
adc
push
loope
mov
and
js
dec
jbe
fcompp
imul
ds
loope
lock
pop
repz
ja
fimull
subl
cwtl
js
loope
jbe
fsubrp
cltd
jg
and
adc
cmpsb
div
push
imul
adc
sbb
cltd
out
jns
cmp
pop
jbe
jge
insb
pop
add
add
push
fwait
push
ror
jmp
cltd
pop
mov
cmc
mov
push
push
add
scas
rclb
ror
lods
lods
icebp
ficoml
and
pop
or
iret
roll
les
flds
leave
jbe
add
or
rcll
sbb
xlat
cmc
andb
jl
mov
call
dec
and
bound
xor
lock
add
mov
fsubr
or
mov
mov
push
outsb
aam
mov
mov
outsl
rclb
or
movsb
mov
ja
imul
imul
repz
call
inc
ret
lods
xor
ja
test
mov
add
xchg
in
cld
jg
mov
pop
add
xor
shll
mov
cmp
ljmp
inc
adc
mov
cmc
mov
and
loopne
inc
aad
lock
xchg
pop
stc
outsb
jecxz
adc
pop
test
cwtl
testl
add
cmp
das
out
pop
fnsave
or
or
xor
mov
aas
cmp
pop
jl
mov
mov
aas
int
and
mov
in
fsubl
repz
outsl
push
jl
loope
js
push
or
cs
push
negl
cmp
mov
dec
addl
lret
idivl
sbb
cmc
imul
ss
movsl
dec
cltd
cmp
inc
and
lods
lea
call
mov
mov
push
sahf
shrb
imul
cmp
xor
aad
xchg
sarb
mov
cwtl
sti
lret
mov
jne
sarb
jbe
xlat
nop
and
cmp
ljmp
fdivrs
pop
test
stos
add
into
out
test
cmc
inc
adc
negl
dec
add
repz
jbe
fcoms
sbb
jp
pop
cmpsl
popa
call
ds
jns
mov
loop
cmp
fmull
fmul
jg
add
pushf
negb
add
or
jne
push
in
xor
push
data16
lret
mov
shll
and
out
loopne
out
in
and
cmp
adcl
mov
jae
stc
sub
cld
ret
leave
clc
add
daa
adc
jecxz
int
pop
or
jns
lea
or
cmp
pop
mov
sarl
add
iret
faddl
pop
mov
in
pushf
or
and
ret
frstor
and
pop
pop
mov
stc
sub
movsl
ss
cmp
das
loopne
stc
xchg
inc
pop
scas
fbstp
imul
sahf
call
fmuls
or
in
sub
aam
repz
mov
test
std
sub
cmp
cmp
sub
jle
push
call
add
adc
jl
nop
dec
xchg
pop
loope
push
xchg
subb
adc
pop
inc
shll
sub
lods
adcb
out
add
int
aaa
cmp
mov
lret
dec
sub
mov
adc
cmp
and
push
lock
pop
or
jno
rcll
and
in
testb
leave
cmp
sub
sub
lcall
lahf
mov
jp
cmp
jns
jnp
testl
jmp
add
out
in
cmpb
jno
mov
mov
in
test
pop
daa
test
pop
or
clc
das
xchg
stos
scas
jb
dec
popa
test
push
aam
xchg
fabs
cld
addr16
xorl
mov
roll
daa
xchg
scas
xchg
cmp
repz
adc
cltd
call
pop
js
lods
or
movsb
jb
mulb
cmc
adc
mov
mov
sbb
insl
sub
fldl
test
daa
into
or
mov
sti
adc
xor
iret
push
lods
out
sbb
push
pusha
mov
pusha
push
xchg
popf
inc
fstl
out
enter
in
in
popf
inc
movl
js
or
cltd
scas
aam
sbb
lret
or
stc
outsl
jne
or
ss
xchg
push
ds
lods
test
ds
call
movsl
pop
mov
inc
adc
adc
das
jge
aas
lret
adc
mov
test
jg
cltd
cmp
shlb
nop
popf
jecxz
fldenv
pushf
in
push
testl
negl
clc
and
lods
rclb
push
jo
lds
pop
mov
loop
bound
dec
pop
pop
push
dec
and
rolb
cmp
aad
cld
xchg
sbb
add
jp
ljmp
mov
ja
cltd
in
jns
imul
adc
lock
lahf
sahf
repnz
jge
dec
ja
jle
stos
fstps
ficoms
ja
aad
shrb
js
ss
sbb
push
fisttpll
add
js
andb
inc
ljmp
mov
iret
js
outsb
cltd
pop
mov
push
mov
loopne
pop
stc
mov
mov
pop
test
pop
push
imul
or
add
add
outsl
shlb
inc
test
inc
cltd
loope
mov
dec
dec
mov
shlb
out
jns
push
lods
jmp
stos
nop
popf
ret
xlat
sub
dec
cltd
and
adc
out
add
inc
loopne
jns
mov
sbb
jns
cltd
sbb
sbb
lock
sbb
xchg
mov
jle
dec
add
fstpl
mov
mov
sbb
add
mov
dec
movsl
aam
aam
sbbb
adc
pop
xchg
dec
xorl
repz
je
mov
test
movsb
cmpb
mov
shll
shlb
pop
sahf
bound
pushf
xchg
test
stos
sbb
aaa
stos
inc
cltd
jbe
and
cli
add
cmp
sbb
push
lods
sub
add
inc
sub
inc
stos
rol
or
cmp
clc
mov
pop
dec
mov
mov
mov
bound
sub
cltd
push
jne
repz
je
mov
xchg
in
xchg
repz
or
cmc
aad
mov
out
enter
into
aad
mov
jo
cmpsl
mov
mov
cli
mov
dec
adc
adc
fistpl
inc
and
sbb
shrb
add
popf
jnp
adc
sub
aad
stos
sub
mov
add
hlt
xor
push
sbb
ficoml
sti
push
mov
js
jb
out
mov
push
out
popa
call
jo
mov
and
sbb
mov
dec
loope
xor
aad
xlat
aaa
fucom
dec
or
nop
rorb
dec
outsl
je
push
test
out
or
std
int3
jmp
flds
outsl
fsubr
cmc
idiv
and
jb
jbe
mov
stos
inc
sahf
jp
adc
cmc
out
dec
mov
add
std
xchg
mov
cmp
cmp
mov
std
mov
jbe
cmc
fwait
rolb
leave
push
inc
push
ss
js
xor
shrd
mov
cmc
int
pop
mov
into
dec
repnz
sbb
jbe
into
aad
mov
mov
cmc
fisttps
pop
loop
test
sub
cmp
mov
insb
std
lahf
mov
jp
sub
mov
push
cmpsb
aaa
movsl
xchg
or
mov
pop
pop
pop
es
xor
or
aas
arpl
xchg
arpl
xchg
add
push
adc
hlt
sbbl
stos
sub
push
sbb
js
mov
fistl
stc
sbb
into
mov
sub
xchg
mov
sbb
jle
inc
ss
xor
popa
inc
cmp
push
add
sarb
cs
add
aad
xor
hlt
push
and
gs
pop
sbb
xchg
jmp
inc
jne
inc
loopne
shrl
or
shrl
in
shl
mov
and
adc
xor
aaa
push
xchg
push
mov
sub
loopne
cltd
xchg
jb
divps
jmp
loopne
jg
aad
cmp
test
mov
add
pop
cltd
neg
mov
cli
pop
cmc
xor
nop
in
gs
push
lret
push
das
sbb
pusha
inc
fdiv
mov
jns
pop
dec
mov
arpl
fldcw
jne
pop
xchg
andb
jb
and
hlt
fnstcw
loop
jge
sub
xor
jo
push
lods
or
fcmovnu
jnp
div
jmp
jbe
mov
mov
inc
icebp
rcrl
mov
int3
repnz
add
cmpsb
cmp
push
shll
inc
clc
test
repnz
xchg
rcl
add
pop
xchg
pop
xchg
xchg
or
pop
loopne
mov
inc
pop
shl
mov
mov
movsl
sub
or
iret
or
xchg
js
xchg
fstps
sti
test
icebp
mov
scas
cwtl
xor
xor
aad
add
subb
add
shrb
cmc
jecxz
enter
jns
xor
mov
or
mov
adc
add
outsl
dec
cmp
popf
adc
fisubl
mov
push
in
cmpl
or
fidivrs
xchg
push
or
pop
xchg
out
adc
mov
push
xchg
mov
cmpsl
mov
out
pop
adc
jns
jle
push
mov
or
inc
jno
test
pushf
jbe
add
xchg
jo
rclb
xchg
fs
mov
pop
scas
xchg
test
aas
xor
mov
clc
iret
mov
adc
jge
das
dec
fcmovnu
cmp
add
add
shlb
testl
out
enter
mov
lock
push
push
cmc
std
fbstp
push
xor
clc
cmc
xchg
push
shlb
or
lret
in
stos
movl
jg
and
xor
inc
bound
push
xlat
jle
push
ds
data16
xchg
iret
pop
aad
mulb
and
xchg
mov
xlat
mov
arpl
rcrb
sbb
fisubrl
dec
cltd
sub
aaa
out
inc
or
mov
fists
cmc
mov
adc
or
sub
clc
and
jbe
rorb
cmpsb
mov
dec
xor
jb
pop
xor
js
mov
cmp
xchg
bound
inc
mov
sub
sbb
lds
clc
push
or
push
test
sbb
ljmp
iret
mov
cmpsl
mov
into
xor
push
dec
fistpll
ret
sbb
adc
cmp
cmp
adcb
sub
adc
or
xor
push
or
inc
sbb
jb
or
adc
adc
inc
mov
movsl
inc
mov
mov
outsl
push
movsl
clc
hlt
jg
clc
mov
cmpsl
xchg
cmc
enter
ret
hlt
fnsave
push
adc
mov
push
sub
add
adc
lock
sbbb
adc
bound
lock
outsl
dec
sbb
jo
cld
adcl
inc
cltd
dec
dec
sub
sbb
mov
int
cltd
inc
and
xchg
das
outsl
data16
sar
push
adc
sub
aaa
or
cmp
xlat
bound
adcb
mov
ficomps
mov
aaa
mov
cmp
stc
and
push
jecxz
cltd
insl
inc
dec
sbb
xor
sbb
test
mov
lcall
das
pop
fldenv
sahf
xor
ds
adc
outsb
sub
xchg
adc
cmpsb
sbb
xchg
scas
mov
cltd
sbb
pop
into
cmp
jmp
mov
loope
cmpl
xchg
icebp
std
nop
mov
jg
sbb
fisubl
call
inc
shl
rcr
es
pop
rcr
mov
jnp
loopne
mov
notl
push
test
pushf
mov
cwtl
adc
jecxz
cld
adc
imull
cltd
icebp
adc
daa
cmp
mov
inc
test
ret
ss
dec
ja
neg
inc
cmpsb
add
mov
dec
inc
outsb
cmpsb
ror
ds
pop
xlat
pop
add
out
jb
push
jno
mov
mov
mov
insl
imul
cltd
jnp
mov
mov
fistpll
mov
xchg
push
inc
das
and
orl
or
mov
adcl
mov
in
testl
and
shrl
pop
pop
ss
cltd
xchg
idivl
sub
xchg
mov
adc
lcall
cmp
mov
adc
jb
xchg
push
xchg
popf
rcll
adc
cmpb
mov
cltd
pop
negb
popf
mov
sarl
push
lcall
aad
popf
push
lock
clc
aaa
shlb
repnz
call
cmc
xchg
push
or
xor
jg
clc
sbb
ss
cltd
xor
sbb
imul
js
dec
cwtl
or
inc
cmp
push
cmpsb
aad
push
cmpsb
dec
aaa
mov
fsts
xchg
push
push
xor
mov
out
and
mov
fistpll
push
cmp
aad
xchg
rep
mov
add
jmp
out
or
fldcw
js
fiadds
mov
push
into
mov
lock
decl
repz
xchg
ror
jns
pop
mov
or
add
xchg
lock
loope
test
insl
repz
cmp
fistps
das
insl
sbb
xor
into
xchg
push
xlat
lds
mov
inc
cld
loopne
mov
setb
repz
cld
mov
fxch
testl
pop
xchg
pop
xorl
imul
jnp
int
sbb
shll
add
mov
jle
add
int
xchg
dec
jno
jno
or
jne
pop
mov
je
stc
cmp
enter
mov
push
divb
and
pop
mov
leave
out
xchg
sbb
rorb
iret
stc
leave
idivl
mov
aad
cmp
stc
clc
jne
shlb
adc
das
xchg
rcll
jne
mulb
orl
iret
xchg
pushf
aad
lds
lods
lcall
imulb
clc
mov
sti
mov
cmc
in
movsl
xor
cmp
xchg
out
hlt
cmp
push
fiadds
pop
and
call
or
repz
scas
cmpsb
add
mov
fisubl
cmp
negl
popf
iret
push
jbe
hlt
sbb
xchg
xchg
or
cmpsb
jo
mov
pop
or
cmc
gs
mul
inc
fstl
clc
xor
mov
decl
mulb
clc
sti
jb
clc
xchg
pusha
fcomip
sahf
loope
lret
jae
lcall
sbb
rcll
xchg
rcll
push
icebp
pminub
hlt
shl
rcll
repnz
pop
enter
sub
mov
mov
test
clc
pop
out
mov
lds
pop
adc
loope
iret
inc
jecxz
fsts
push
or
adc
cmc
loope
xchg
or
rcll
test
aas
mov
js
je
pusha
pushf
int
fs
push
call
aaa
stc
push
cmp
xor
aaa
addr16
mov
pop
fsubrs
out
dec
fbstp
pop
in
repnz
std
iret
std
lcall
mov
mov
mov
rcl
pop
test
out
lahf
vmread
cmc
ficoms
mov
xor
je
stc
xchg
aas
call
lret
xchg
cwtl
hlt
cli
xlat
add
mov
inc
mov
sub
xor
xchg
cmpsl
pop
movsb
arpl
mov
cltd
add
fdiv
sbb
ja
push
nop
cmp
add
adc
pusha
mov
pop
push
cmp
insl
mov
sbb
mov
mov
or
lds
mov
push
pop
ja
mov
adc
mov
jg
xor
dec
or
jmp
out
xchg
pop
mov
jmp
adc
clc
repnz
stos
sub
out
ljmp
daa
sarb
in
xchg
hlt
inc
mov
mov
mov
xor
leave
mov
cmc
mov
xchg
mov
loope
mov
mov
out
insl
outsb
jno
cld
test
fwait
dec
xchg
lahf
stc
roll
outsb
mov
jmp
push
jne
jge
push
mov
sti
jb
pusha
aad
lahf
aad
imul
inc
push
cmp
jae
shll
fists
addr16
mov
andb
fcmovnu
push
popa
movl
pop
push
jb
jne
and
jns
aas
cwtd
outsb
mov
cmp
jbe
mov
xchg
push
ret
push
mov
fimuls
insb
mov
mov
sbb
mov
jne
and
fcomps
scas
xchg
mov
clc
popf
nop
sbb
pusha
pop
push
sbb
jmp
out
sbb
ffreep
iret
mov
cmpsl
scas
sbb
jg
outsl
jns
pop
inc
push
cmpl
rorw
andb
push
mov
xor
sub
sub
sub
cld
jecxz
divb
mov
xchg
pop
xchg
lods
shll
jle
insl
xchg
cmpl
mov
and
cmpb
stos
or
int
bound
pop
and
xor
add
sbb
or
push
add
jnp
imull
in
cmp
insb
sub
ljmp
dec
sbbl
xchg
iret
mov
xchg
inc
mov
shlb
cmpsb
cmp
pop
cmp
cmp
push
mov
aas
add
dec
loopne,pt
mov
sbb
add
jp
lods
sarl
cs
pop
push
adc
inc
or
xlat
xchg
jns
or
sbb
push
add
les
test
ds
call
xorl
jns
lret
add
adc
jno
or
adc
sbb
or
mov
fprem1
or
rcrb
xchg
mov
jae
xlat
cmpsl
sahf
pop
push
ret
add
sar
push
xchg
sarb
adc
aam
pop
or
pop
xchg
mov
call
enter
test
push
repz
sar
pop
mov
idiv
xor
bound
loop
iret
mov
mov
addr16
jnp
cmp
shl
in
mov
popf
sbb
shl
adc
push
nop
mov
mov
or
loopne
push
sahf
sbb
mov
cltd
xor
movsb
scas
mov
cmc
stos
mov
shrb
cmp
shlb
notb
ss
push
cmp
incl
xlat
insb
xchg
xchg
mov
xor
in
adc
js
loopne
ja
mov
stc
sub
testb
pop
inc
mov
into
or
and
sar
into
dec
mov
fstps
lret
addb
gs
xchg
sbb
stos
outsl
or
dec
push
repnz
push
lret
xchg
fnstcw
sub
mov
dec
insl
mov
out
mov
flds
notb
or
push
popf
xchg
xchg
les
aaa
cmpsl
mov
cmp
dec
aad
push
rorl
push
jo
into
repz
test
pushf
adc
cmpsb
pop
insb
data16
mul
push
jmp
xlat
fbld
ret
mov
jns
sbb
sbb
sub
insb
xor
mov
data16
aad
aaa
mov
rorl
mov
add
mov
shrb
das
inc
mov
icebp
mov
shlb
sub
mov
inc
jbe
test
cltd
xchg
fnstsw
ret
adc
mov
fstcw
jmp
cltd
push
lret
js
jne
xor
jle
adc
punpckhwd
mov
dec
mov
mull
xor
rorb
ret
pop
mov
sahf
jo
clc
fwait
enter
inc
add
popa
cltd
stos
clc
rorl
data16
jns
mov
xorl
sbb
add
xchg
stos
test
out
stc
mov
and
cmp
lock
aam
jno
push
or
push
daa
jge
out
jmp
orl
mov
dec
cli
cs
adc
inc
scas
test
cmp
notl
push
fdivrp
or
and
cwtl
add
adc
xchg
push
mov
std
negb
movsb
adc
lret
ss
gs
sub
shrl
test
xchg
pop
push
call
loopne
xor
in
cltd
int3
in
mov
or
add
xchg
outsl
dec
adc
out
push
push
mov
outsl
ja
sarb
dec
hlt
xor
jge
dec
dec
inc
into
ret
mov
hlt
mov
inc
sti
ljmp
sub
mov
cltd
mov
push
imul
adc
sbb
aad
push
sarb
inc
in
adc
ficompl
sbb
popf
cwtl
or
mov
xchg
ja
test
xorb
or
aad
adc
jl
rclb
sbb
negl
cmp
adc
pop
aad
cmc
in
jg
adc
xor
mov
adc
push
or
loope
fbstp
fdivr
out
mov
aaa
jg
pushf
add
mov
jg
mov
in
popa
sar
mul
push
shll
mov
int
ffreep
add
cmp
sbb
jecxz
push
push
xor
popf
pop
mov
push
es
js
mov
and
add
aam
inc
insl
outsb
out
lret
aaa
sbb
sbb
flds
lret
cmc
inc
mov
mov
or
fistpl
aad
divb
lret
pop
sbb
gs
inc
loopne
or
clc
mull
scas
cli
lahf
add
push
lret
movsb
mov
negl
dec
sub
and
adc
push
cmpsl
jae
xchg
and
mov
scas
cmc
dec
lret
fnstenv
mov
stos
outsb
jne
loopne
adc
adc
notl
xor
fnstcw
clc
movsb
push
add
and
push
mov
fdivs
ret
inc
fstps
test
xor
jmp
call
and
xor
adc
push
sbb
xchg
dec
xchg
imul
add
popf
push
cmp
xor
cld
lret
cwtl
nop
inc
mov
sarb
push
adc
int3
adc
data16
xor
je
mov
xlat
rcll
jb
push
dec
add
jo
cmpsl
adc
hlt
call
cwtl
adc
call
adc
pusha
cltd
mov
loopne
mov
imul
dec
sbb
jge
pop
pop
addr16
imul
pop
es
popa
xchg
add
jmp
sub
outsl
push
sbb
outsb
scas
or
xchg
mov
xor
adc
cli
pop
gs
hlt
lret
scas
xchg
sub
repnz
pop
xor
cmpsb
and
lcall
mov
mov
lret
or
add
xlat
push
in
jns
adc
or
pop
pop
ret
or
or
adc
sub
inc
jnp
mov
js
dec
xor
cli
js
xor
sub
cmp
bnd
hlt
scas
push
push
xchg
std
dec
cs
adc
or
xchg
jecxz
fsubs
leave
sub
cld
push
into
popa
fldcw
xchg
push
push
jnp
mov
jo
int3
lds
call
mov
mov
mov
fcmovnu
and
cmp
mov
fxch
out
sbb
mov
or
fnstcw
sbb
push
add
xlat
mov
add
mov
xor
or
pop
mov
stc
sub
imul
lods
push
jno
add
mov
imul
in
les
dec
roll
gs
jae
scas
in
jmp
loopne
jno
xchg
adc
fcmovb
and
mov
add
pop
cmc
xchg
sti
jmp
fnstcw
nop
dec
jne
mov
jne
cwtl
nop
and
testb
ja
fldenv
pop
pcmpgtd
mov
cmpsl
fst
cs
jo
fisttps
mov
subb
fnstenv
adc
popf
addb
out
fisubl
lret
std
dec
cli
movsl
rolb
aas
rorb
fistpl
divl
mov
lret
ficompl
push
mov
ds
jnp
lahf
lcall
call
or
jne
or
cwtl
mov
fisttpl
jle
gs
xlat
adc
cltd
inc
pop
mov
mov
lock
sahf
fcomps
sub
jne
leave
popf
enter
mov
xchg
into
ja
mov
cmp
add
mov
xor
icebp
jp
aaa
push
mov
xor
addl
outsl
jne
insb
push
pop
ja
mov
dec
int
aaa
adc
mov
dec
xchg
std
clc
dec
movsl
les
addl
dec
add
fs
cmp
or
add
or
cltd
jp
and
mov
jmp
das
div
lods
xlat
sbb
stc
jbe
xor
notl
jle
adc
lds
sbb
fld
inc
mov
jbe
mov
iret
add
xlat
sahf
daa
daa
sub
movsl
inc
xchg
sub
dec
out
push
fisttpl
fcmovnb
or
stc
add
das
popa
xchg
fisttps
jae
fisubrl
pop
out
les
jb
imul
mov
sub
jns
jno
test
and
inc
shrl
das
xchg
jge
jle
adc
test
add
mov
mov
stos
jge
les
mov
rcll
pop
iret
adc
movsl
inc
fisttpll
lahf
jns
jg
mov
mov
cmp
stos
push
inc
std
jle
pop
pop
lcall
call
movsl
out
fists
std
or
int
cltd
outsl
xor
sbb
outsb
sbb
push
add
jne
lahf
sbb
fsubr
fnsave
daa
xchg
movsb
pusha
jbe
fistpll
xchg
test
lahf
lds
or
fists
adc
jmp
decl
sub
pop
andl
shll
adc
mov
leave
cmp
cmp
into
and
adc
xor
cmpl
sbb
cmp
orl
mov
pop
sbb
nop
adc
xchg
mov
pop
imul
jne
notl
shl
adc
or
push
push
xchg
cwtl
jecxz
stos
repz
xor
in
xchg
jno
push
cmpsl
aad
stos
sahf
mov
sbbl
or
jb
shr
cwtl
clc
inc
xor
sbb
mov
dec
lods
inc
lret
push
inc
jmp
inc
je
or
adc
mov
sti
adc
cmp
scas
push
mov
mov
sbb
sub
hlt
sbb
or
inc
push
mov
or
scas
jecxz
les
push
or
add
add
pop
pop
dec
mov
pop
or
js
sub
fnsave
mov
jbe
mov
adc
mov
js
pop
lret
jecxz,pn
cmc
jno
cwtl
leave
xor
sub
cmpsl
call
pop
mov
adc
mov
fdivl
mov
mov
sub
jmp
ror
mov
xchg
push
push
jns
xor
dec
nop
mov
dec
leave
fwait
xchg
lock
mov
or
xchg
pop
push
pop
push
lret
adc
push
sbb
leave
xchg
push
iret
lahf
call
mov
mov
fs
cmp
fnstcw
pusha
pop
jb
dec
xor
push
leave
jg
pop
mov
sbb
pop
mov
inc
or
push
mov
and
push
out
je
jne
or
push
cmp
stc
sahf
cmpsb
dec
vmovapd
ja
cmp
scas
mov
ret
jge
push
cmp
popf
cmpsl
mov
shlb
int
inc
fldenv
rorb
xchg
idivl
xchg
add
mov
pop
shrb
mov
xor
pusha
lahf
or
jl
inc
js
sbb
mov
xchg
mov
add
addr16
push
rcrb
inc
sub
push
lea
stos
xchg
out
and
dec
sarb
sbb
xor
inc
cwtl
dec
mov
jnp
repz
inc
sbb
add
adc
xlat
push
ja
add
aas
cli
xor
pushf
insb
jb
pop
mov
mov
xchg
jb
push
push
in
or
loope
clc
sahf
popf
jle
rclb
shrl
jmp
mov
aad
mov
fidivrl
repnz
fstl
and
dec
push
ljmp
lds
add
ja
imul
push
popa
and
inc
pop
pusha
cld
or
outsb
push
and
xchg
lds
cld
push
imul
jge
call
lret
mov
stc
cmc
sub
mov
cltd
push
mov
sarb
dec
gs
rcrb
sarb
loopne
xchg
and
pop
test
xchg
push
icebp
rcll
mov
xor
sbb
lods
mov
daa
cltd
negl
xlat
xor
mov
pushf
loopne
test
sbb
int
rol
jno
fisubs
add
push
adc
insl
xor
ret
in
xlat
cwtl
and
test
xchg
rorl
xlat
mov
jp
push
ljmp
sahf
dec
mov
jns
xlat
or
add
pop
mov
js
jmp
lea
cwtl
push
pop
hlt
aam
call
mov
pop
mov
mov
push
daa
fcompl
cli
sbb
imul
or
fxch
xor
inc
pop
xchg
out
mov
add
aas
adc
mov
add
jno
gs
divb
pushf
jecxz
mov
jg
test
outsl
int
xlat
and
or
mov
js
cmpsl
addb
data16
jb
push
je
repnz
test
loop
sub
and
out
add
xchg
lods
iret
xchg
pop
cltd
call
mov
fstpl
ret
pop
ret
aas
lods
fsts
pop
mov
popa
jge
call
mov
xlat
push
xor
xor
or
repz
xchg
cmp
leave
dec
cltd
lcall
dec
push
mov
mov
cltd
out
rcrl
mov
std
or
dec
add
add
push
and
jp
cmp
lcall
cwtl
repnz
sub
into
mov
dec
cwtl
xchg
lahf
loop
clc
mov
cmc
bound
ret
stos
loopne
xor
out
cwtl
add
pop
jo
jnp
mov
mov
push
mov
scas
hlt
xor
rorl
xlat
cmc
adcb
or
cltd
push
hlt
bound
cmc
jmp
sub
adc
enter
jg
jns
cs
lock
xchg
dec
sarb
add
mov
lret
adc
jg
movb
out
xlat
fldcw
add
sbbb
repz
inc
pop
xchg
adc
mov
in
sarb
test
adc
adc
pop
mov
subl
mov
fldcw
xchg
decl
scas
fs
dec
lret
cli
mov
sub
dec
adc
std
sub
popa
inc
xlat
cwtl
sbb
imul
sub
pop
adc
popf
jl
stos
lds
jns
lds
adc
insb
js
mov
pop
mov
outsl
aas
test
pop
mov
cs
aad
or
cmpsb
jno
shrb
jp
xchg
sahf
mov
or
mov
call
push
outsl
lret
js
inc
ss
push
mov
int
jb
sarl
nop
sub
mov
push
mov
mov
mov
std
adc
inc
jge
mov
shlb
das
fisttpll
cs
jge
xchg
add
add
lock
jecxz
xchg
xchg
xor
jg
pop
adc
and
pushl
sbbl
dec
pop
dec
adc
push
rorl
mov
enter
xchg
ret
sub
out
cwtl
cwtl
inc
push
popf
rolb
adc
icebp
into
push
xlat
dec
jl
cmc
fcoms
sbb
adc
scas
int
fnstsw
lret
lods
adc
shll
xchg
dec
mov
call
jle
outsl
mov
repz
mov
pop
rorl
out
inc
arpl
out
jmp
or
fyl2xp1
add
inc
in
cltd
movsl
xor
psubw
lock
pusha
jecxz
jo
pop
clc
sbb
lds
pop
fcomip
or
lret
ss
xor
xchg
xchg
sbb
inc
mov
cwtl
xor
mov
mov
mov
repz
mov
rcll
inc
in
lret
sar
mov
aad
pop
xchg
das
inc
lock
cmp
cmp
cmp
adc
pop
sub
pop
jbe
add
sub
hlt
rol
sub
imul
xchg
sti
mov
stc
xor
inc
cwtl
xchg
cmc
push
fiadds
enter
add
jl
idivb
mov
xlat
mov
aad
xor
add
xor
mov
fisttps
sub
push
fistps
jo
fmull
mov
testl
rolb
xchg
leave
jge
mov
and
xor
fstps
push
enter
fdivl
xchg
dec
jl
push
pop
aad
leave
and
pop
adc
orl
popf
xchg
lds
out
add
cmp
loope
and
push
jbe
push
es
push
and
cwtl
ja
push
jbe
loope
jne
insl
repz
into
je
xchg
push
xchg
or
cmp
pop
dec
push
add
repz
xor
cmp
test
rcl
std
lcall
xchg
hlt
popa
mov
outsb
fsubs
jl
pop
test
insl
sub
fsts
xchg
sub
rclb
jle
icebp
jns
fxch
add
sbb
lret
stc
shlb
lods
aad
add
push
add
pop
push
push
out
xchg
pop
movsl
cmp
xchg
xchg
cltd
sub
dec
sbb
mov
push
inc
dec
fistl
fimull
arpl
add
adcl
aas
daa
aad
sub
fdivs
fstps
and
jbe
mov
jnp
sbb
or
lret
out
cmp
loop
jmp
in
dec
push
popa
loopne
xor
dec
add
sub
outsl
imul
jmp
test
or
adc
shlb
xchg
jbe
mov
jmp
or
into
pop
sti
cmp
aad
sbb
sub
lock
jns
jns
push
dec
icebp
test
jecxz
sarl
push
movsb
and
lahf
in
es
divl
fdiv
add
sahf
loopne
push
es
adc
jb
xchg
addr16
mov
adc
sbb
int
mov
test
push
inc
fnstcw
call
rclb
cmpsl
out
data16
mov
pop
lock
sub
push
mov
loope
ja
cmp
xchg
imul
frstor
sarl
ja
mov
popa
outsl
sbb
mov
xor
sbb
insl
fwait
lds
shll
sub
shrb
leave
xor
not
sub
cmp
sbb
lods
mov
daa
popf
out
rcrl
out
jbe
aad
aas
xlat
push
or
jbe
add
dec
sub
mov
and
jle
push
dec
aam
xchg
inc
lods
cmp
or
inc
inc
pop
pop
outsl
rol
push
dec
sub
lds
sti
add
xor
lods
mov
mov
popa
ret
aad
push
and
mov
out
notl
adc
or
aaa
jl
or
in
lds
rcrl
stc
into
mov
fsts
and
mov
repnz
pop
iret
xchg
les
cmpsl
xchg
fdivrs
js
test
adc
orl
pop
mov
aad
sub
xor
xor
mov
mov
popf
loope
gs
shll
xchg
loope
cs
popf
test
dec
test
sub
movsl
mov
jno
leave
mov
mov
int
inc
aas
test
pop
jns
xchg
adc
cmp
addr16
push
mov
pop
dec
insl
aad
sar
pop
imul
stos
jbe
mov
cmp
add
insl
imul
mov
cmp
idivl
dec
pop
adc
push
sub
mov
push
mov
xchg
js
add
inc
outsl
leave
outsb
mov
jge
ficoml
movsl
mov
pop
dec
divl
call
insl
pop
outsl
dec
push
inc
lret
xchg
fbstp
or
or
rcrb
cmp
pop
in
pusha
ret
movsb
mov
ljmp
and
cmp
fstpt
hlt
xor
sti
out
add
xchg
xor
mov
push
test
dec
mov
jbe
aad
nop
and
sarl
adc
out
and
mov
int3
mov
dec
inc
insb
test
and
mov
xchg
aad
inc
push
imul
ret
movl
jmp
or
or
repz
adc
xabort
push
adc
int
jp
mov
popf
cltd
push
adc
mov
sarb
xor
xlat
and
fmull
and
hlt
ss
iret
push
xor
and
popa
push
loope
cwtl
pop
cmp
shl
inc
out
sub
cltd
outsl
pop
je
mov
aad
fsincos
mov
int
iret
inc
cmp
dec
push
dec
lea
inc
jle
pop
cmpsb
hlt
xchg
scas
jge
cmp
sbb
add
pop
pop
and
cwtl
and
cmp
sbb
mov
stc
push
stc
dec
cmc
loopne
push
out
lcall
lret
ja
jns
notl
xchg
sub
out
cwtl
divl
xor
jno
adc
daa
je
int3
mov
into
add
notl
xor
jb
popf
stos
cld
push
cmpsb
sub
sub
es
test
rcll
into
sbb
sbb
add
outsb
pop
notb
cmp
xchg
mov
add
pop
lahf
decb
out
xchg
add
enter
mov
push
inc
mov
popa
rorb
inc
xchg
mov
into
xchg
jg
or
and
test
push
xchg
cmp
push
pusha
add
pushf
mov
mov
lock
push
xchg
rorb
add
arpl
inc
mov
dec
cmp
rcr
testb
push
jo
sub
sbb
mov
movsl
adc
mov
test
scas
lock
jle
leave
cmp
push
in
aaa
inc
call
xchg
inc
loope
imul
xor
repnz
sbb
jmp
adc
clc
sub
ret
int
imul
mov
bound
add
xchg
mov
adc
jns
jle
push
daa
mov
lds
inc
mov
pop
lret
ror
fsubrs
nopl
fistl
divl
sub
mov
push
fiaddl
pop
cmpsb
mov
push
push
outsl
sub
mov
xor
adc
scas
lret
push
icebp
aad
pushl
or
stos
icebp
ficoml
rcr
fsubrs
cmp
sbb
mov
fwait
sub
cmp
outsl
pop
fisubrs
test
or
fsubs
out
sarl
xor
adc
push
jae
xchg
stc
mov
xor
test
jg
and
mov
ret
loop
stc
loope
rcll
ds
dec
or
xchg
into
shll
sub
or
ja
insb
out
sub
mov
cld
outsb
cwtl
aam
jns
addr16
adc
xchg
mov
nop
push
adc
adc
mov
mov
pop
adc
adc
inc
ror
adcb
cmp
pop
adc
mov
adc
fst
arpl
jo
inc
shr
pushf
mov
xchg
mov
es
xor
decl
js
jae
push
mov
dec
icebp
inc
jle
div
cmp
mov
mov
xchg
ljmp
sbb
mov
push
jg
loopne
outsb
out
ja
pop
dec
lds
rcrl
jbe
pop
adc
out
adc
add
aaa
mov
std
out
out
mov
lock
cmc
mov
pop
fwait
jo
dec
hlt
and
out
adc
jg
notl
mov
or
adc
imull
imul
mov
out
lock
dec
dec
lods
push
fimull
call
lock
xchg
or
push
jecxz
aaa
xchg
aas
mov
rolb
xor
or
pop
leave
add
pop
aad
jbe
jp
jmp
mov
mov
sub
or
mov
push
stc
push
xchg
pushf
fsts
xlat
lret
cmpsb
fprem1
or
inc
push
mov
popa
rep
out
cmp
adc
jns
andl
jns,pn
test
xchg
js
in
ret
dec
adc
mov
shll
push
jns
push
std
fcomip
in
test
movsb
stos
add
cltd
and
lock
movsb
inc
in
push
imul
pop
pushf
movl
mov
rclb
xchg
cmpsl
stos
test
pop
popa
xor
xchg
dec
cmpsb
push
enter
sarb
xchg
out
and
pop
add
jg
push
in
and
xlat
adc
clc
cmp
jg
cmp
fbstp
adc
clc
aad
dec
shlb
stc
filds
test
mov
lods
adc
mov
sti
stos
jb
cmp
and
push
jo
mov
shl
iret
mov
jg
mov
test
leave
lds
fsts
popa
frstor
adc
stc
dec
xchg
inc
cmp
jle
mov
xchg
call
mov
addr16
repnz
and
push
inc
cld
rolb
fnstenv
adc
rclb
and
cld
xor
aaa
dec
fwait
icebp
stos
test
xor
dec
mov
stc
stos
dec
pop
leave
jbe
mov
sub
and
mov
int
sbb
or
lret
cmp
jns
lahf
repz
fdivrs
mov
mov
push
ja
test
shl
incl
or
ljmp
xchg
pop
pop
test
xchg
adc
stc
push
push
sahf
sub
popf
fbld
sub
dec
ss
fldenv
cs
scas
testl
jo
push
and
jge
mov
add
iret
out
jle
faddp
cltd
imul
or
jle
in
lds
inc
xchg
or
push
iret
dec
add
xchg
ss
jnp
into
push
or
push
jecxz
add
shl
mov
mov
pop
repz
xor
sbb
dec
das
add
xchg
aam
and
mov
data16
fistpl
adc
daa
lea
sahf
pop
mov
cwtl
push
imul
aas
ss
rclb
and
sbb
cmp
xchg
mov
xchg
lcall
xchg
dec
movsl
ss
sbb
sbb
pop
add
gs
adc
imul
andl
aas
out
sub
xlat
mov
je
addr16
push
or
mov
or
stos
jecxz
out
jns
pop
add
mov
xchg
je
fcmovb
xchg
lds
sbb
jle
mov
mov
mov
jle
icebp
mov
clc
popa
inc
sbb
jbe
fistpll
mov
rclb
repnz
xlat
pop
adc
mov
add
sbb
test
popa
jg
sub
inc
sub
cmp
cwtl
mov
and
popf
icebp
pop
test
xchg
jg
xchg
stos
inc
ret
jl
pop
jp
add
int
fidivs
rolb
insb
mov
inc
rcrb
call
pop
into
jnp
and
jp
lock
adc
jmp
imul
jmp
xchg
js
shll
add
mov
js
notl
jge
mov
jo
movsb
mov
into
addr16
pop
imul
pop
bound
mov
pop
imul
jl
aad
sti
mov
testl
dec
mov
test
cli
push
xor
mov
xchg
int
ja
mov
rcr
cmp
fnsave
aad
pop
or
sbb
ljmp
fstps
or
repnz
test
sbb
xlat
insl
imul
adc
xchg
push
std
adcl
fs
ret
imul
ret
shll
lods
loop
rcll
insl
adcl
in
jle
mov
fxch
adc
jmp
push
xor
scas
stos
test
xorb
insl
push
sub
inc
lcall
outsb
pop
pushf
or
cmp
adc
test
shrl
cltd
call
inc
fsubs
cwtl
rclb
inc
inc
roll
lds
repz
sub
shr
push
push
ret
push
mov
rcr
hlt
mov
not
or
mov
in
xor
push
push
inc
loope
popa
test
adc
cmp
adc
or
test
mov
mov
lahf
lahf
cs
mov
sub
mov
fwait
mov
out
adc
adc
test
daa
push
xchg
xchg
jle,pt
cwtl
push
ljmp
rclb
mov
sbb
rcl
jbe
popa
push
mov
scas
xor
push
xor
repnz
mov
out
xor
mov
shlb
xor
jmp
mov
repz
xchg
imul
jp
add
loopne
jns
test
js
out
or
cmc
lret
xchg
mov
jge
rcl
pop
inc
mov
jnp
les
fiaddl
lds
adc
dec
or
imul
sti
mov
gs
mov
or
mov
mov
cltd
cwtl
in
jecxz
adc
notl
sar
sbb
fimull
push
add
pop
sbb
inc
adc
or
mov
pusha
inc
rclb
mov
mov
mov
mov
xchg
pop
shrl
xchg
dec
or
pop
inc
and
xchg
xor
ja
mov
sahf
rcrl
insl
icebp
jp
mov
dec
testb
dec
rcr
std
int
inc
mov
repz
push
push
xor
int
rorl
icebp
add
int
xchg
hlt
addr16
icebp
out
jecxz
mov
cs
lret
mov
test
xchg
icebp
rolb
test
int3
jmp
push
adc
jb
push
scas
sub
mov
aad
test
jecxz
sti
js
outsl
mov
jg
mov
gs
inc
xor
cmp
mov
imul
mov
sbb
mov
inc
push
je
rclb
dec
xchg
pop
inc
sbb
in
aam
lret
dec
push
mov
rolb
jnp
xlat
or
mov
jg
xchg
mov
mov
xchg
push
and
jmp
clc
shlb
xor
incb
lods
xor
dec
sbb
mov
adc
fs
mov
repnz
and
adc
adcb
cmp
xchg
sahf
dec
sub
lods
inc
pop
dec
adc
out
fimull
dec
mov
cmp
in
dec
mov
push
das
push
les
jl
cmp
mov
clc
mov
out
sbb
mov
dec
pop
push
mov
xchg
test
mov
mov
mov
mov
fwait
xor
xlat
pop
not
int3
pop
sbb
mov
and
xchg
in
inc
pop
mov
add
pop
cmp
sbb
fistl
pop
sarl
cmp
cmp
jp
fisubl
add
xorl
xor
jg
mov
mov
jb
sbb
pop
cmp
push
or
xchg
cmp
jg
mov
addr16
mov
add
outsl
jg
ss
jle
push
jge
negl
mov
fdivrs
andb
lcall
fsts
lret
test
roll
call
ds
movsb
adc
mov
shlb
or
jb
cmc
lds
inc
inc
push
xlat
ja
cld
xchg
insl
movsl
mov
mov
int3
je
fimull
jbe
cmpsl
mov
cmp
bound
cmp
dec
dec
mov
shrl
adc
inc
mov
pop
adc
rclb
push
punpcklbw
addr16
and
cmpl
stc
mov
adc
je
negl
jmp
or
pusha
jmp
aad
test
mov
fsubrp
xchg
cmp
cmp
popf
addl
icebp
js
repz
imul
ficomps
mov
mov
pop
pop
insl
sahf
leave
repz
rolb
popf
sub
shll
popf
loop
les
mov
push
push
pop
out
lret
mov
jle
imul
jmp
loop
cmp
mov
fstpl
shll
cmpb
js
pop
sti
js
rorl
imul
xor
xorb
dec
idiv
jbe
repz
mov
inc
cmpsl
jb
push
adc
jne
or
mov
and
movsb
or
test
dec
addl
outsb
push
outsl
ret
dec
mov
leave
jecxz
sbb
push
cmp
inc
sub
hlt
daa
dec
xchg
test
jne
movsl
and
ds
mov
and
xchg
sarb
add
add
cmpsl
js
push
inc
icebp
lds
ss
add
push
add
sbb
rolb
sbb
or
aaa
xchg
push
cmp
push
cltd
mov
xchg
stc
xchg
les
and
pop
sub
inc
iret
xchg
mov
jecxz
jno
jle
mov
mov
push
fnstsw
into
jne
divl
mov
and
mov
repnz
fidivrl
push
jg
stc
adc
cmpl
and
out
xchg
push
jno
xlat
adc
inc
push
jle
hlt
inc
or
add
and
pop
int3
fisttpl
lcall
int3
loop
fnstenv
sub
outsl
mov
mov
cltd
rolb
or
dec
js
out
sbb
push
notl
les
imul
bnd
or
rol
mov
xlat
aad
sub
mov
loopne
fadds
fcmovu
xchg
pop
mov
jno
out
mov
add
repz
sbb
push
insb
test
add
sub
rolb
cmp
aam
test
movsb
or
pop
xor
iret
jle
rcr
push
fdivs
adc
pop
sbb
fisubrl
hlt
dec
bound
dec
movsb
js
adc
ss
adc
mov
insb
and
icebp
stc
jmp
mov
lret
arpl
clc
jp
cmp
adc
mov
jge
jp
les
stc
or
mov
mov
ud1
mov
add
adc
imul
push
push
add
and
cmp
jg
inc
or
adc
mov
jge
repz
or
jbe
mov
xchg
inc
jl
jle
clc
xchg
xlat
clc
js
mov
and
insl
js
lods
add
repz
jg
jge
aas
rcrl
push
mov
mov
leave
sub
pop
rcll
sar
jecxz
testl
pop
call
int
sub
out
jne
loopne
adc
add
or
inc
inc
aad
xor
jl
inc
or
pop
add
outsb
dec
enter
xor
addl
cmpsb
sbb
mov
nop
cmpl
pop
sub
xor
shlb
nop
rcl
jl
out
pop
cltd
pop
xchg
xchg
mov
outsl
mov
sub
ret
xor
cmp
fmuls
or
pop
add
lret
repz
inc
cltd
mov
or
inc
adcb
adc
push
cmp
adc
pop
fstpt
mov
adc
repnz
les
mov
js
mov
dec
or
jo
mov
repnz
jp,pn
lock
push
dec
pop
repnz
xchg
and
popf
or
or
mov
adc
adc
mov
gs
dec
adc
dec
leave
enter
or
mov
clc
sti
inc
sub
loopne
imul
fsub
push
int
or
xlat
add
inc
and
fistps
sub
mov
jae
ljmp
call
lock
mov
mov
pop
sub
lock
outsl
ljmp
icebp
fucom
mov
arpl
adc
push
adc
mov
test
rcl
push
dec
fsts
xchg
or
fldl
cltd
sahf
sbb
lret
lock
push
push
cs
loop
das
dec
mov
inc
in
mov
push
sbbl
rcll
cmp
mov
hlt
loope
pop
jecxz
pop
or
sarb
stc
lret
enter
cli
inc
mov
sub
cmc
jg
bound
in
inc
imul
flds
sub
mov
jmp
fstl
lods
repz
sbbb
nop
mov
mov
mov
test
push
lret
pop
test
mov
das
enter
mov
or
push
cmc
roll
mov
push
int
lret
std
aad
xchg
adcb
andl
xchg
daa
les
lock
mov
push
or
dec
out
mov
sub
out
insl
mov
aad
add
shl
fldcw
push
cltd
and
xchg
outsl
dec
pop
push
adc
cld
loope
mov
sbbl
nop
out
xchg
cmpsl
mov
add
xor
push
pushl
mov
insb
xchg
mov
adc
rcl
cmc
mov
imul
xor
mov
mov
mov
das
pop
inc
lock
xchg
sbb
or
test
jge
sbb
repz
or
fmul
sbb
adc
xor
add
lret
cmp
inc
in
in
add
mov
pop
and
mov
adc
add
imul
jbe
mov
jmp
cmp
cmp
fists
xchg
fisttpll
sbb
dec
or
stc
repnz
or
movsb
cmp
mov
loope
push
mov
in
lds
adc
pop
push
subl
push
cmpl
jmp
sub
in
push
xchg
mov
lds
pop
cmc
shll
mov
lret
dec
call
enter
sub
es
mov
repnz
add
shr
pop
or
test
leave
daa
dec
shrl
push
lret
jecxz
pop
fstp
and
mov
jecxz
push
imul
adc
popf
push
out
inc
push
es
lods
mov
test
mov
std
xor
mov
adc
add
mov
lds
ja
mov
out
clc
call
or
incb
shll
push
add
or
repnz
shrl
and
sub
bound
fwait
sbb
movsb
outsl
mov
sbb
lret
repnz
jge
pop
aaa
faddl
subb
mov
xchg
push
fcmovnu
repz
testb
pushl
add
out
xchg
adc
sbb
xchg
fnsave
adc
xchg
push
or
notb
nop
adc
xchg
fstl
jae
xchg
jne
hlt
xchg
fnsave
lahf
mov
aad
xlat
popf
roll
xchg
push
pop
adc
imul
mov
mov
sbb
leave
or
xchg
push
sbb
jl
jnp
sbb
aaa
out
jbe
jb
iret
adc
adc
lods
dec
mov
repnz
push
mov
add
mov
repnz
mov
inc
sub
cmp
shll
leave
cmp
das
rclb
or
dec
cmc
or
mov
adc
add
lea
nop
add
fidivl
push
xchg
add
cltd
je
fdivrs
stc
mov
aad
xchg
pop
push
adc
pop
scas
mov
mov
sub
cmpsb
lea
adc
sub
dec
fnstenv
jge
leave
xchg
cmp
rorl
jle
pop
pop
jmp
jmp
test
rol
icebp
pop
out
mov
mov
sahf
xor
not
jns
cwtl
cmp
mov
iret
inc
and
sbb
xchg
ja
arpl
and
aaa
loope
push
or
jo
sub
outsl
out
cltd
jl
out
ja
repnz
jle
andb
rcrb
orl
out
out
iret
add
pop
icebp
repz
test
or
xor
test
and
cmp
rorl
incl
popf
mov
sub
mov
sub
frstor
fs
xchg
dec
scas
shll
or
icebp
rcrl
xchg
jecxz,pn
push
add
aad
std
pop
jmp
xchg
or
and
adc
inc
cmp
inc
stc
mov
and
adc
popa
cmp
mov
leave
divl
jle
pop
fnstsw
roll
out
add
and
fmul
in
xchg
fbstp
testl
xor
jge
push
pusha
fld
outsb
sub
mov
pusha
mov
notb
mov
loope
cwtl
cmpl
out
mov
push
test
mov
je
addr16
ja
cmc
or
repz
inc
mov
sbb
repz
jb
push
inc
cltd
mov
clc
aad
pop
mov
repz
xlat
xorb
cltd
shll
adc
out
pop
xor
xorb
mov
fsts
sbb
out
pushf
push
jbe
mov
rcll
nop
adc
repz
mov
jbe
xchg
jne
fprem1
sub
nop
cmpsb
xlat
rcll
aam
mov
cltd
sbb
fnstenv
push
repnz
add
cmp
pop
adc
cmp
out
rcl
lcall
push
stc
dec
push
jns
adc
ja
xor
xchg
popf
mov
loope
cmp
pushw
ds
pushf
lods
pop
mov
or
movsl
test
cmp
testl
mov
or
xchg
pop
hlt
pop
add
fdecstp
aaa
pop
xor
adc
clc
in
fldcw
dec
leave
rcl
inc
inc
pop
dec
sbb
push
scas
out
mov
out
jns
adc
mov
idivb
cmc
lock
xchg
xlat
in
push
xchg
push
daa
sar
out
shl
shrl
pop
cwtl
push
pusha
xchg
xchg
push
lods
xchg
dec
cmc
push
push
xchg
jb
std
xor
leave
mov
cmp
ret
loope
inc
xchg
mov
out
fldt
mov
roll
sti
dec
and
mov
pop
ret
adc
jne
and
sbb
inc
lds
data16
ss
mov
push
ss
das
inc
test
shll
out
sti
cltd
xchg
or
fbstp
test
fcoms
pop
sub
push
mull
or
xchg
mov
imulb
testl
decb
jmp
xchg
rolb
pusha
pop
sub
jne
test
lock
iret
mov
ss
int
xor
fnstenv
fildll
repz
jl
jae
das
xchg
aam
xlat
jp
add
jae
mov
outsb
sbb
add
push
cmp
adc
into
repz
mov
inc
cmp
and
pop
lret
enter
shr
push
jecxz
and
imull
xor
inc
iret
push
enter
dec
insb
pop
test
jl
mov
hlt
or
dec
fidivl
xchg
lock
jae
or
scas
jl
cmp
xchg
inc
xchg
movsl
mov
rcll
inc
rolb
or
adc
pop
sub
rcll
sbb
leave
jbe
and
imul
divl
fwait
popf
push
or
fsubs
sbb
adc
rorb
movsb
sub
add
mov
sarb
jns
push
sbb
inc
mov
ja
add
call
fsubr
sahf
clc
rorl
sbb
pop
rcrl
pop
lock
or
push
lock
call
push
outsb
scas
je
sbb
push
mov
mov
push
xor
popf
jbe
cmp
push
out
xchg
test
ja
insb
fmuls
mov
stc
jl
jae
mov
hlt
test
daa
xor
xlat
enter
mov
xor
or
fwait
divl
rcrb
xchg
int3
pusha
js
fbstp
sarb
fimull
cmpsl
inc
imul
sbb
rcll
xor
or
jmp
subl
test
fdivp
gs
xchg
into
cmc
xchg
daa
mov
or
mull
sub
and
fimull
mov
xor
adc
sbb
cmpsb
xchg
add
test
leave
mov
iret
push
test
orb
adcb
pop
out
aad
xchg
in
inc
xchg
add
mov
js
sbb
notl
cmp
scas
divb
jmp
testb
subb
pop
adc
adc
out
inc
aaa
xlat
lock
ror
hlt
ss
adc
fstl
mov
test
cmpsb
xchg
inc
jge
mov
mov
out
jbe
lods
cmp
mov
push
inc
in
cmc
aaa
add
dec
fcmovnb
cwtl
sub
jl
outsb
divb
mov
inc
mov
leave
sbb
mov
popa
xlat
pop
cmp
cmp
xchg
xchg
cmpb
jbe
push
insl
xor
sub
mov
cmpl
pop
cmp
loopne
xor
xlat
pop
and
dec
call
sub
clc
or
xchg
xchg
lods
jne
shlb
lea
fstpl
call
pop
xchg
inc
out
ret
add
int
push
pop
xchg
jmp
cmp
pop
adc
xlat
scas
out
repnz
xor
adc
xor
sub
shr
mov
cmp
imul
mov
scas
pop
rcrl
jno
xchg
sbb
sbb
or
gs
xor
cmp
daa
sbb
xor
pop
add
negb
aaa
jp
push
int
mov
pop
leave
push
neg
mov
jno
rcrl
rcrl
insb
xchg
cld
and
lret
sbb
fisttps
int3
cmpsb
lahf
push
fdivs
pop
imul
mov
dec
cmp
jmp
popf
xchg
mov
jmp
mov
xchg
jne
lock
rcr
loope
xchg
adc
xchg
scas
loopne
adc
cltd
movsb
leave
xchg
fidivs
pop
xchg
xchg
in
fcom
mov
and
pop
push
jge
out
lock
fnstenv
mov
rcrl
xchg
mov
mov
insl
test
dec
daa
or
mov
mov
mov
xchg
leave
fwait
jns
mov
aam
popf
repz
push
mov
pop
daa
jne
push
jne
jmp
sbb
or
fcoml
addl
aad
out
or
mov
testb
fs
fbld
clc
out
inc
leave
test
aad
cltd
fcos
xlat
es
adc
hlt
pop
in
cmpsb
lods
es
xlat
mov
push
xchg
cltd
pop
lahf
jle
pop
sub
lock
outsb
call
xchg
fcoms
and
push
cwtl
or
out
jmp
xchg
pop
adc
xlat
sti
pop
divb
mov
clc
xor
scas
xlat
pop
test
adc
loope
scas
mov
outsl
pop
sahf
mov
mov
sti
or
sahf
mov
mov
filds
xchg
pop
das
mov
xlat
sbb
xchg
jg
pop
jns
fcomps
push
ja
xchg
je
jmp
in
lahf
sbb
xchg
in
xchg
push
mov
adcb
push
sahf
sbb
test
cltd
fmuls
aam
mov
add
dec
mov
popf
jb
nop
mov
adc
pop
mov
ftst
enter
aam
sbb
adc
pushf
repnz
aad
insb
mov
not
push
ret
leave
mov
aad
sti
mov
mov
pop
roll
movsl
enter
mov
lock
adc
push
adc
adc
sbb
sub
pop
add
or
jbe
fimuls
out
xchg
xchg
sbb
sbb
lcall
jno
push
pop
xor
pop
mov
pop
xor
lods
jp
mov
test
pushf
jmp
scas
lods
lods
movsb
stos
cmp
fwait
stos
xchg
stos
pop
stos
repnz
mov
stos
fcomi
push
test
rcrl
cltd
je
sbb
repnz
fs
nop
rcll
daa
mov
ja
stc
adc
push
pop
adc
shll
aad
inc
fprem
xor
jns
push
popf
xchg
bnd
mov
mov
adc
xchg
sbb
mov
repz
xchg
aad
add
and
push
or
push
mov
addr16
push
sub
pushf
sbb
lods
sbb
notl
jecxz
adc
rcl
sarl
nop
push
jae
push
ret
push
xchg
adc
adc
mov
mov
ffreep
das
lahf
mov
adc
xchg
loope
lods
test
xchg
push
outsl
insl
fs
rclb
cltd
divl
adc
cwtl
ja
stos
cmc
icebp
ja
mov
call
mov
cltd
fcmovnbe
daa
push
out
xorb
push
ljmp
mov
push
enter
int3
loope
cmp
iret
mov
test
ja
mov
adc
pop
cltd
mov
pop
or
fdivrs
iret
sbb
push
xor
xchg
movsl
std
lock
dec
jle
stos
or
mov
or
cmpl
lret
in
fsts
xchg
fmuls
push
cmpsl
pop
imul
call
xor
cli
cli
xchg
iret
loope
add
aas
enter
mov
insl
xchg
push
aam
sarl
fnstcw
lret
cmp
mov
repz
rorb
pop
mov
and
lock
xlat
cmp
sbb
jge
xchg
xchg
cmp
sub
sub
dec
fwait
rcrb
mov
outsl
mov
sub
leave
jne
orl
stos
lahf
mov
push
test
scas
inc
lock
jg
in
mov
into
mov
and
adc
ja
int
js
xchg
orl
sub
adc
aaa
or
addl
jb
icebp
loopne
scas
ficompl
dec
repnz
je
mov
lods
lahf
das
adc
xor
xchg
mov
mov
cmc
stos
mov
mov
sub
mov
out
out
aad
sub
cmp
add
xchg
fcomps
xcrypt-ecb
cmpsl
or
lahf
mov
xchg
jp
data16
outsb
ja
add
mov
mov
aad
js
cmp
shlb
testb
scas
mov
andb
sbb
inc
xlat
iret
std
aas
or
push
rclb
cwtl
std
idivl
fistpll
fstp
push
ror
inc
pop
stc
mov
ficoms
rorb
lods
dec
add
mov
cwtl
lahf
and
daa
or
dec
mov
out
test
adc
js
mov
cmp
inc
popf
cmp
daa
jo
stos
sbb
hlt
and
mov
push
mov
sub
add
bnd
cld
xlat
popf
leave
or
std
or
pop
xchg
sarl
popf
fnstenv
popf
incl
icebp
push
mov
hlt
mov
mov
push
icebp
loop
cmp
sbb
jnp
add
in
mov
aad
sub
or
xchg
das
cmp
lea
aad
shrl
jne
adc
adc
call
int
sbb
xchg
inc
mov
ret
and
iret
sbb
ja
call
lods
in
or
divl
adc
bound
or
es
repz
dec
daa
loopne
mov
push
mov
fldl
ror
aam
scas
pop
sbb
pop
out
mov
in
out
push
repnz
test
xlat
jae
sahf
sbb
lock
sub
xor
sahf
add
aas
add
mov
test
mov
popa
iret
and
jg
adc
push
inc
mov
test
pop
mov
adc
pop
xchg
sbb
mov
mov
or
shrb
loope
jg
sub
addl
sub
call
movsb
adc
add
outsl
in
or
test
push
push
adc
push
xchg
xor
lods
sbb
or
pop
pop
sbb
push
test
test
mov
leave
rorl
shl
inc
pop
dec
enter
outsb
stos
in
aaa
inc
ss
es
cmc
sbb
fcoml
cltd
cmpb
hlt
fcoml
push
adc
stos
lods
movsl
rcl
cmc
push
inc
cmp
xor
in
sti
sub
cmp
cmp
sbb
push
repz
notl
jne
mov
ffreep
xor
jno
cmp
ljmp
ss
push
sbb
mov
push
xchg
les
and
mov
out
or
dec
push
adc
jns
cltd
int3
ljmp
ret
mov
jae
and
ja
jl
cltd
rcl
sub
loopne
mov
aaa
aad
and
subl
fistpll
fcom
rorl
push
dec
push
hlt
outsl
push
inc
adc
jno
add
shlb
add
loop
add
subl
shlb
shll
mov
mov
add
jg
xchg
xchg
shlb
rcll
sbb
dec
int3
or
inc
ds
pop
or
mov
adc
xor
mov
shlb
and
mov
and
lock
xchg
xchg
add
adc
ror
pop
popf
clc
shlb
push
push
int
and
pushf
mov
subl
leave
loop
add
sub
adc
xor
jno
out
in
out
mov
or
scas
xacquire
hlt
fildl
or
stos
sbb
push
mov
jge
and
sbb
adcb
xorb
xchg
cmpb
and
cli
mov
jmp
test
ret
cmp
fiadds
mov
add
xor
inc
popa
test
loopne
xor
mov
mov
mov
cmpsb
enter
pop
or
jbe
lret
and
outsb
and
cmp
jp
mov
fldl
stos
push
stc
sbb
push
call
mov
xchg
cltd
cmp
popa
mov
jmp
imul
cmpsb
jle
pop
inc
test
and
xor
clc
sbb
inc
imul
push
aam
fnstcw
push
xor
xchg
popa
fnsave
adc
lret
or
jmp
divl
repnz
mov
ja
xchg
sar
mov
xchg
in
cmp
jmp
lea
push
mov
mov
cwtl
stc
enter
ret
push
add
jge
jns
aam
xchg
adc
mov
pop
push
inc
test
jecxz
stc
adc
jg
test
rcr
sub
xor
or
repz
jbe
xchg
jp
mov
nop
xorl
mov
repnz
imul
inc
cmc
rcll
add
jle
lret
loopne
fsts
add
inc
test
leave
mov
xchg
pushf
dec
add
js
je
jmp
add
aaa
xchg
push
xchg
lds
xchg
mov
das
xchg
xor
push
add
mov
adc
push
stc
popa
shl
or
cltd
aas
adc
cmc
loope
rcrb
js
or
aam
xchg
ja
mov
aaa
hlt
jns
or
adc
test
xchg
pushf
pop
mov
push
lods
testb
mov
stc
adc
cltd
cltd
stc
ret
sbb
mov
cmc
inc
mov
out
not
and
pop
aad
stc
inc
insl
mov
ja
xchg
push
mov
inc
idivl
aaa
fisttpl
aas
pop
imul
push
dec
push
cmc
jg
inc
out
stc
or
mov
mov
cmpsb
rorb
add
xor
cmc
push
jecxz
shrl
mov
add
and
push
enter
jp
mov
or
jae
int3
or
cmpsb
push
push
je
ret
and
ret
inc
test
jecxz
sub
outsb
stc
jb
sbb
out
pop
out
xchg
sbb
loope
jp
push
imull
add
out
adc
jmp
sbb
subl
fdivrs
sub
mov
cmpsl
sub
in
adc
sbb
rcrb
jno
or
nop
clc
rcll
xor
lds
outsl
sub
inc
mov
out
and
mov
push
out
aad
movsl
xor
loopne
insb
jmp
cmc
dec
mov
into
sbb
test
aam
adc
adc
add
nop
mov
jmp
sbb
arpl
push
inc
mov
fnsave
pop
loop
leave
imul
lret
test
add
mov
or
sbb
dec
xchg
jle
inc
in
loope
mov
xlat
aam
xor
mov
push
xor
stos
jbe
adc
jb
jp
shl
gs
mov
cmpsl
leave
or
negl
mov
mov
sbb
out
mov
dec
push
mov
ds
dec
in
outsb
sti
jb
push
jmp
cltd
sbb
cmc
in
jge
or
clc
scas
addb
fsubrs
pop
push
and
push
enter
outsl
shrb
and
jle
shlb
add
dec
hlt
mov
movsl
inc
sahf
scas
aam
fcomp
sbb
xchg
lcall
inc
dec
pop
xchg
adc
dec
negb
int3
ret
imull
and
pop
xchg
and
jle
shll
test
or
jns
xchg
notl
lret
pop
test
addb
xchg
push
dec
and
lds
pop
and
inc
push
rolb
int3
add
ja
cltd
dec
enter
inc
adc
sbbl
loop
xchg
push
dec
jmp
xchg
sub
dec
jb
rorb
jb
dec
lret
mov
movsl
out
cltd
jbe
mov
repnz
dec
test
cmp
adc
mov
enter
ss
lods
xor
inc
sbb
jg
lock
jno
stos
shrb
mov
negb
ss
dec
or
sbbl
pop
aad
or
dec
mov
and
lret
fidivrs
sbb
popa
cltd
mov
lds
jmp
addr16
mov
ror
imul
push
out
aas
fildll
daa
xchg
sbb
lahf
fisttpll
fidivl
push
fldt
stos
add
cmp
xlat
push
mov
adc
shll
test
lds
inc
pop
inc
fsts
jae
pop
mov
or
xchg
sbb
sub
fldcw
out
cld
lret
adc
leave
pop
js
xlat
cmp
mov
push
andb
xchg
fnstenv
sbb
icebp
adc
sarb
push
inc
xchg
sbb
test
shl
rcll
adc
aas
mov
inc
mov
and
sub
mov
icebp
inc
lret
mov
adc
sar
mov
xchg
add
xchg
clc
cmp
das
cmc
out
lret
mov
mov
stc
dec
push
arpl
pop
dec
mov
sbb
les
xchg
jbe
or
out
cmpsb
fcmovb
out
adc
pop
imul
pop
mov
enter
js
push
mov
loope
in
clc
dec
adc
int
in
in
in
testl
jle
xchg
clc
fst
jge
mov
jns
adc
dec
sbb
js
add
adc
xchg
sti
xlat
in
xor
test
aad
push
mov
inc
add
adc
xchg
daa
push
push
dec
jns
or
roll
jp
add
inc
js
test
xchg
xchg
fsts
jge
fs
sbb
movsb
fld
in
xchg
cmp
rcrb
xchg
lahf
jns
test
cmpsb
xor
je
dec
inc
clc
add
inc
cmpb
pop
dec
imul
cmp
mov
fucom
jecxz
notl
pop
adc
jmp
sahf
loopne
xor
sbb
jbe
push
leave
jecxz
mov
push
jne
repnz
dec
jmp
aad
gs
popa
leave
dec
andb
xor
push
sub
fldenv
clc
dec
iret
imul
es
adc
lret
cmpl
or
js
stc
stc
lret
and
xchg
and
adc
rolb
cmpsb
cmc
jge
mov
inc
rol
ret
xor
shlb
adc
xor
push
sbb
jns
push
jl
inc
repz
mov
add
outsl
adc
cli
xchg
xchg
sbb
mov
jae
pusha
push
in
jle
xlat
sub
adc
mov
cwtl
aam
std
negb
aad
sbb
js
mov
aaa
icebp
mov
ja
inc
cwtl
sbbb
adc
fst
cltd
push
std
fstpt
in
xor
xchg
dec
enter
push
inc
loopne
push
and
les
lds
jns
push
and
add
pop
stc
adc
push
inc
mov
jp
xchg
push
jmp
js
push
cmc
aad
pop
mov
xchg
shrl
shll
mov
push
push
clc
pop
in
sbb
dec
les
and
aad
repnz
mov
push
testb
imul
sub
cmc
shlb
fsubs
movsl
mov
adc
cmp
jb
inc
jae
add
dec
jmp
jb
cld
mov
adc
imul
xchg
push
imul
mov
std
ret
loope,pt
pop
jmp
and
lock
loop
mov
or
popf
std
cltd
std
sbb
lret
popa
lret
mov
or
sub
or
dec
rcrb
jecxz
xorl
mov
add
mov
out
jmp
hlt
xor
push
imul
adc
lock
ja
jmp
fdivl
jge
sbb
fldcw
pop
iret
cmpsb
aad
mov
aas
sub
xchg
shl
push
push
js
mov
or
dec
adc
xor
push
ffree
jb
movb
mov
aad
jg
cmp
stos
and
orl
sar
add
xor
and
adc
imul
and
add
je
mov
mov
mov
clc
xor
push
loop
jle
jge
notb
and
sub
and
inc
leave
mov
jne
cmp
sarb
pop
mov
aam
and
mov
test
cmp
mov
arpl
xor
inc
cmp
ss
out
decl
rorb
cwtl
scas
ret
push
push
mov
cmc
sub
in
inc
js
pop
sbbl
push
ds
push
and
push
mov
mov
out
push
arpl
mov
fsubs
mov
das
jecxz
scas
js
sbb
mov
push
dec
push
xchg
and
lahf
pop
aad
inc
push
loopne
mov
enter
repnz
lock
sub
xorl
fsubr
cltd
dec
adc
sub
jns
adc
imul
dec
imul
cwtl
leave
jbe
aad
hlt
lods
jge
ret
sub
clc
jnp
pop
sarl
dec
xor
inc
adc
addr16
and
mov
mov
xor
or
shl
jg
mov
xchg
hlt
in
add
add
push
pop
out
cmc
mov
sahf
iret
call
push
pushf
adc
jno
jne
clc
mov
in
insl
lock
lret
sahf
andl
cltd
das
dec
adc
mov
out
int3
cmpsl
sbb
sbb
mov
push
fwait
xchg
bound
cmp
rorl
icebp
rolb
and
aaa
sub
push
mov
mov
es
sub
roll
mov
xchg
add
pop
mov
push
andb
push
fadds
dec
lahf
sub
test
imul
mov
les
adc
pop
sub
mov
lret
pop
push
mov
xor
jge
xor
and
loope
data16
push
shlb
outsl
fnstcw
xchg
inc
and
inc
rcl
jns
in
mov
xchg
mov
rcrb
add
scas
popa
sbb
inc
sti
divb
es
mov
aad
loope
out
out
push
fsubrs
mov
addr16
outsl
jl
dec
xchg
mov
pop
outsb
stc
xlat
aaa
mov
notl
push
xlat
pop
xlat
repz
cltd
out
pop
pop
stos
bound
jp
cmp
inc
and
imul
jns
iret
inc
xor
dec
leave
dec
aad
bound
cld
inc
mov
push
jle
clc
int3
sub
sub
shrl
outsl
fldt
fnstcw
sti
mov
int3
mov
adc
add
or
mov
sub
pop
insl
jo
ret
nop
shll
clc
lret
xor
ret
data16
out
pop
sbb
sarb
stc
cmp
sahf
in
mov
mov
test
mov
test
cmp
mov
xchg
xor
push
stos
lahf
xor
stos
jmp
call
push
shrb
mov
adc
inc
lcall
sbb
fistl
int
mov
hlt
out
jno
mov
mov
adc
jl
clc
mov
in
push
cmpsl
and
hlt
add
push
fadds
xor
inc
push
xchg
pusha
mov
xchg
leave
dec
pop
add
popa
repnz
lods
inc
push
enter
rcr
and
add
jbe
cld
fildl
daa
pop
jge
inc
push
push
repz
cltd
lods
lret
cltd
cmp
mov
adc
ficoml
or
leave
jmp
jae
and
and
adc
push
sbbb
stc
mov
inc
xor
iret
and
mov
add
daa
adc
jle
push
sbb
mov
pop
outsl
out
pusha
push
fisubs
pop
test
in
mov
outsb
sarb
movsb
or
mov
fmuls
push
sub
out
sbb
push
mov
jle
lahf
scas
mov
mov
and
out
sub
or
jb
dec
xchg
cmp
rcl
rcl
pop
movsb
shl
stos
xchg
inc
test
popf
lahf
ret
cltd
xlat
jecxz
dec
xchg
in
stos
mov
push
mov
sub
jb
leave
fnstsw
xchg
jl
pop
inc
jne
pop
mov
std
rcrl
jnp
dec
stc
dec
mov
mov
lcall
jae
push
pushf
test
insb
ja
icebp
mov
jp
jb
hlt
mov
push
aad
fadd
js
cmc
arpl
sahf
jmp
sub
mov
dec
adc
in
std
negl
cmp
loope
sbb
sbb
jmp
xchg
arpl
dec
bound
mov
vmwrite
adc
orb
js
cld
enter
jae
mov
mov
xchg
dec
or
cltd
and
and
push
inc
or
mov
je
inc
lea
clc
mov
mov
shlb
sub
call
aam
test
push
or
xor
push
and
je
sub
lds
xchg
xchg
lds
push
or
testl
mov
enter
xor
movsb
imul
xchg
fisttpll
xor
sbb
mov
push
bnd
shrl
jns
lods
cltd
pop
movsl
jmp
cmpsb
or
or
inc
jno
adc
push
fcom
jecxz
shlb
mov
test
fldl
or
mov
xor
jp
lret
and
fmul
jo
jle
xchg
inc
dec
movsb
and
sbb
lcall
rol
mov
or
push
mov
cmpsl
shr
repnz
mov
adc
test
out
inc
mov
int3
insb
mov
je
call
mov
xacquire
dec
xlat
push
dec
pop
adc
push
inc
mov
mov
in
and
or
push
outsl
xchg
cwtl
push
rcl
les
jp
pop
push
mov
in
push
adc
fildl
or
fdivs
mov
nop
adc
jno
xchg
clc
mov
push
xchg
sub
mov
sbb
push
mov
icebp
mov
push
push
dec
sbb
or
mov
lock
ja
mov
call
mov
or
outsb
data16
ds
mov
jnp
test
jp
jae
inc
test
pop
lret
fisubrl
test
cmc
loopne
xor
xchg
push
sub
cmp
bound
pop
cmpsl
divb
push
and
xchg
test
mov
adc
sahf
aad
adc
popf
push
adc
pushf
cld
cmp
fstpl
std
ljmp
shl
sbb
daa
cltd
iret
jle
add
shrl
popf
arpl
sbb
pop
mov
xor
push
adcl
jb
outsb
das
fisubl
stos
xor
hlt
sbb
push
ret
xchg
sbb
cltd
xchg
jl
fidivrl
mov
cmpsb
xlat
mov
stc
dec
daa
xor
sbb
testb
lret
lods
testl
and
call
shlb
inc
insb
notl
pop
mov
push
test
ljmp
add
daa
add
sub
aad
sub
rcl
inc
mov
hlt
sbb
pop
cld
dec
sahf
push
shll
testl
push
jle
adc
inc
mov
clc
cltd
dec
push
popf
ficoms
mov
fistps
add
dec
test
cltd
jbe
dec
xor
mov
ds
mov
adc
js
adcl
mov
cmp
mov
aad
fldl
addr16
pop
jns
adc
push
inc
inc
mov
xor
faddl
scas
jb
sbbl
mov
fwait
xor
push
sub
mov
sub
or
mov
mov
enter
aad
xchg
mov
popf
std
and
leave
jl
jg
pop
add
popa
xchg
add
xlat
push
aad
hlt
in
push
gs
clc
pop
int
outsl
dec
int
push
mov
mov
insb
ret
and
sub
sbb
add
mov
enter
pop
in
notl
mov
mov
out
sbb
ja
push
out
iret
daa
push
lcall
xor
outsl
stc
cwtl
sbb
ss
in
frndint
cmp
mov
push
lock
cmp
in
sbb
aad
std
ja
push
dec
out
ffreep
imul
scas
xchg
daa
jg
andl
fisttps
addr16
adc
mov
and
cltd
push
sbb
mov
pop
cs
mov
insl
leave
lock
xchg
pop
mov
push
dec
cltd
or
sub
hlt
scas
js
dec
lods
mov
sub
out
dec
push
das
pop
les
pop
adc
cld
test
mov
fcmovnu
push
outsl
shll
hlt
cwtl
rcrl
inc
mov
sub
cmp
sub
test
ds
das
xchg
pop
jo
inc
popf
sub
dec
aas
xchg
arpl
push
sbb
repnz
xchg
sbb
and
dec
and
push
push
rol
push
out
fdivrs
inc
sbb
ds
frstor
std
ds
xchg
mov
push
push
jecxz
iret
inc
mov
push
cs
push
mov
outsl
sub
xlat
pop
mov
vpsubw
add
sahf
bound
test
push
hlt
test
jbe
ljmp
add
ss
incb
je
xchg
dec
jle
push
rcrl
sahf
mov
sar
fdivl
stos
fildll
in
je
adc
sbb
lock
adc
xchg
shll
negb
dec
sub
jne
shl
add
lods
ds
jns
jb
mov
xchg
out
fists
sar
lods
cmpsb
loop
sbb
mov
fwait
inc
and
or
mov
ss
push
data16
or
insl
jnp
nop
lcall
imul
dec
ja
mov
dec
mov
adc
mov
outsb
push
hlt
repz
inc
mov
xchg
cmp
pop
cmp
pop
loope
cltd
cs
aad
push
jge
mov
lret
or
mov
pushf
push
mov
cltd
fisttpll
sub
sti
in
shr
test
hlt
in
dec
in
outsb
loop
scas
inc
outsb
mov
sarb
dec
push
push
iret
jle
insl
push
addr16
decl
loopne
xor
jae
fidivrl
mov
insl
out
mov
add
cmpsb
mov
xlat
xchg
lret
xchg
leave
push
push
enter
ljmp
aam
cwtl
pop
mov
push
in
or
inc
aad
in
imul
push
in
lret
in
sarl
xchg
pushf
mov
cmpb
xchg
adc
pop
add
fwait
in
push
test
dec
cmc
mov
idivl
fisttpl
cmp
int
int3
xor
sbb
test
cmc
push
xchg
inc
out
movsb
mov
adcb
cwtl
clc
adc
jecxz
movsb
cmp
lock
pop
shrb
in
sub
cld
sub
fmul
mov
mov
jecxz
mov
jne
leave
ds
add
adc
add
and
daa
push
into
push
xchg
leave
or
or
iret
int
fidivl
cli
push
ret
and
jbe
ficoml
rclb
xor
cmp
jno
or
push
inc
loope
std
push
loop
ficomps
enter
out
xor
sar
std
enter
popa
xchg
xor
add
xchg
or
jno
pop
inc
scas
mov
das
mov
mov
pop
xor
fisubl
mov
cltd
cmc
div
cltd
xchg
xor
pushf
adc
add
mov
cmc
out
dec
out
in
xchg
add
xor
jno
mov
loopne
push
out
push
ficomps
popl
pusha
push
add
push
xlat
pop
adcb
jne
and
mov
rolb
rcrl
hlt
mov
cmpsl
std
pop
fs
and
or
mov
add
dec
mov
sub
imul
dec
or
das
cs
pop
lods
push
jge
fs
sub
arpl
push
leave
xor
adc
shr
fiadds
call
add
push
aad
jb
inc
sbb
fsubl
jnp
stc
mov
xchg
push
sahf
popf
cmp
in
outsl
and
aaa
mov
in
adc
mov
mov
fmull
cmpl
push
cltd
addr16
lahf
pandn
jae
jl
pop
iret
or
gs
fstp
mov
imul
cmpsb
clc
bound
pop
add
dec
iret
add
fidivs
aad
out
sarl
cmpsl
mov
push
repz
gs
clc
dec
fmulp
push
ret
fstpl
aaa
mov
adc
clc
pop
xchg
mov
adc
push
cltd
loop
enter
lock
xchg
mov
pushf
xchg
inc
lret
xchg
add
add
add
xchg
sub
add
popf
cmp
lods
inc
inc
push
cmp
inc
int
sub
xchg
push
leave
stc
std
pop
xchg
ja
ja
push
mov
rcll
mov
rcr
lock
sti
aad
clc
push
jb
fisubrl
cmpsb
inc
sub
xor
xchg
stc
cmc
insb
sbb
sub
push
pop
mov
mov
or
shlb
rorl
inc
lods
add
test
loopne
jge
sub
hlt
ds
js
jae
xor
loopne
adc
outsb
jg
das
daa
push
stos
sub
inc
mov
mov
stos
xchg
sub
add
ja
jbe
xchg
hlt
lds
js
sub
jg
or
test
faddl
insl
and
std
mov
jne
out
out
cmpsb
in
xchg
fcmove
mov
jp
sahf
leave
shrb
xchg
ret
xor
arpl
or
je
insl
or
adc
or
pushf
rcr
mov
lock
repz
push
mov
std
std
frstor
cmp
je
xchg
mov
pusha
push
push
mov
or
mull
outsb
dec
mov
sbb
mov
mov
cmc
jge
sub
pop
cmp
outsb
mov
enter
mov
cwtl
pop
out
jns
testb
lahf
mov
test
xchg
ret
xchg
outsl
pop
xchg
adc
arpl
jp
push
mov
sbb
inc
rol
push
aad
jns
mov
andl
or
dec
push
hlt
int
repz
dec
xor
cmovo
mov
stos
pop
shrl
sub
jg
into
jae
add
xchg
loopne
imul
xchg
lock
das
pop
pushl
test
aad
adcl
inc
jno
pop
or
jns
inc
movsb
lcall
inc
mov
mov
test
sbb
sti
inc
xchg
adc
push
pop
cmp
into
fwait
xchg
inc
clc
mov
repz
rorl
xchg
push
add
das
daa
in
cltd
testb
ror
jbe
imul
push
and
ret
dec
inc
shr
lock
in
scas
hlt
push
movsb
jecxz
aam
out
push
js
dec
mov
hlt
les
or
mov
sub
xchg
add
outsl
test
jmp
cmp
rcrb
jno
mov
js
es
popf
mov
clc
lock
jle
lds
shl
aad
rorb
lret
xchg
test
push
arpl
xchg
fidivl
and
xchg
add
mov
fisubl
shrb
jnp
je
test
call
andb
popa
pusha
fdivs
test
push
push
popl
mov
popf
imul
aas
out
fisubl
jb
mov
or
mov
loope
adc
aad
dec
sahf
icebp
mov
aas
push
int
jbe
pop
jns
repnz
push
lock
sarb
mov
test
xor
loope
cltd
sarl
fcoms
inc
and
jb
or
call
jle
mov
ljmp
fmuls
jns
or
stc
pop
mov
in
enter
fnsave
pop
jns
mov
je
cmc
sbb
aaa
shl
cmc
inc
les
ret
lahf
ret
shll
rorl
push
xor
ljmp
add
and
lods
xchg
mov
inc
mov
adc
sub
js
into
test
std
mov
dec
fstl
cmp
mov
outsl
out
cltd
in
jg
push
pop
mov
mov
cwtl
pushf
pop
rorl
popf
pop
pop
dec
lea
vpaddw
xor
nop
push
cld
adc
cltd
repz
fldl
cmp
push
mov
and
js
dec
jne
sub
decb
jb
adc
mov
decb
push
repz
test
std
adcl
ret
call
fmuls
adc
scas
cmp
and
pop
mov
or
outsl
addr16
and
ja
or
fwait
xchg
jge
sub
mov
inc
fstp
push
pop
xchg
testl
sbb
xchg
jns
lea
sbb
fstp
iret
std
je
add
in
mov
jg
xchg
insl
lods
mov
cmpsb
jp
add
push
shr
sbb
xchg
pop
lret
stc
mov
xor
cmp
add
cltd
jmp
push
jbe
mov
stc
push
aas
sbb
xchg
sbb
add
mov
into
div
push
mov
mov
rorb
stc
jae
shrb
fnstcw
aas
int
insl
cmp
xlat
or
cltd
fisttpll
jl
in
xor
xor
mov
out
call
mov
sub
jmp
xlat
leave
and
pop
push
mov
dec
or
and
gs
xchg
inc
mov
cmpsb
stos
mov
and
lret
mov
pop
cmp
rol
inc
outsl
hlt
jo
out
dec
and
xchg
inc
shll
test
test
xchg
cmp
sbb
and
cmp
cmp
mov
stc
inc
adc
aad
dec
insl
ljmp
inc
fnstcw
out
cs
test
nop
sub
sbb
push
and
mov
dec
roll
in
inc
pop
addr16
cwtl
fsts
cltd
shl
shlb
arpl
sti
js
shr
ds
and
add
test
push
ficoml
or
shrl
jns
xchg
shlb
movl
mov
cmp
and
sbb
xchg
jle
inc
mov
je
push
fmuls
cltd
inc
and
mov
movsl
les
xlat
call
sbb
mov
push
aad
hlt
sahf
imul
dec
fwait
lds
test
mov
or
enter
mov
cmp
fwait
popa
pop
pop
or
inc
out
cmp
repz
pop
test
ss
mov
out
push
inc
testl
cld
insl
jno
xor
div
mov
daa
lods
mov
test
add
mov
cmpsl
cmpsb
push
rcll
in
inc
dec
dec
call
pop
daa
sbb
in
or
les
xchg
or
lock
cltd
gs
dec
sbb
mov
jb
xlat
mov
cmpsb
decb
add
or
imul
ja
add
adc
enter
cwtl
scas
repz
xor
xchg
ror
mov
xchg
xchg
xchg
lahf
add
xchg
pushf
mov
flds
aad
sti
insl
jae
out
inc
daa
lds
mov
adcl
push
mov
inc
pop
aam
sub
cmc
xlat
shl
lds
jmp
mov
mov
cld
sbb
sub
adc
lcall
pop
cmc
ja
or
clc
into
sbb
jno
rolb
decl
cmp
jns
aas
lret
cmpsl
sti
inc
cli
rolb
xor
cltd
mov
nop
popf
mov
into
xlat
imul
hlt
push
mov
jmp
inc
rclb
xchg
aad
sbb
mov
sbb
enter
or
es
add
mov
daa
lds
jns
test
mov
fildll
scas
cmc
jo
adc
pop
adc
cmpl
dec
iret
orb
mov
pop
test
xchg
push
cs
sub
sahf
fisubrl
sahf
mov
test
scas
xor
sub
mov
imul
push
jbe
or
loopne
stos
fsts
dec
insl
pop
test
push
test
sub
mov
adc
push
sub
pop
mov
nop
mov
dec
lcall
mov
std
inc
insb
in
push
or
mov
in
mov
mov
jnp
xor
pop
lret
mov
ret
repz
or
fmuls
addr16
adc
lret
stc
push
mov
mov
dec
mov
fsts
lods
mov
shll
test
je
lock
dec
xchg
rcll
adc
stc
dec
push
aad
fadds
test
fbstp
call
push
std
xchg
xchg
jns
sbb
inc
out
or
icebp
icebp
bound
insl
pop
leave
push
out
enter
jge
pop
or
test
roll
rcrl
jns
ficompl
loope
addr16
pop
cmp
cmp
push
xor
push
add
cmp
xor
das
das
loop
loopne
mov
xchg
cmp
mov
add
popa
pushl
mov
js
push
pushf
mov
sbb
jmp
jg
and
pop
mov
mov
or
enter
and
cmp
mov
sarl
xor
int
scas
push
mov
jge
adc
fistpl
imul
stc
pop
mov
nop
mov
mov
inc
aaa
fdivr
pop
pop
fistl
rolb
test
insl
cwtl
shlb
das
sub
pop
loopne
icebp
sti
lock
jbe
int
xchg
stc
push
movb
js
test
xor
adc
add
scas
pop
dec
push
mov
jmp
push
repz
testl
les
jb
imul
sbb
ror
jg
jle
mov
cltd
mov
inc
fwait
push
xchg
xchg
sub
lock
mov
ja
or
adc
push
das
stos
repnz
mov
push
mov
jns
xchg
fstps
jb
stc
sbb
push
xor
fmull
fisttps
test
imul
pop
cltd
lret
sbbb
xchg
cmp
dec
mov
xchg
call
or
jge
popa
repnz
push
fisttpll
xor
mov
add
sub
pop
pop
fmulp
xchg
push
repnz
ja
jbe
lock
pushf
or
adc
mov
imul
fdivr
dec
adc
adc
mov
addr16
ljmp
cmp
pop
mov
or
jg
push
or
addb
and
push
adc
mov
hlt
arpl
xchg
int3
add
xor
jp
pop
lods
sub
incb
cmpsl
add
jge
add
mov
and
daa
sub
pop
mov
inc
mov
lahf
popf
sub
iret
cmp
shl
push
push
aas
stc
adcb
test
pushf
push
inc
nop
imul
fldcw
xchg
outsl
ret
mov
mov
clc
cmp
inc
and
sbb
cwtl
fucomp
lahf
jns
sbb
dec
je
insl
not
fs
push
fstps
stos
sub
cmp
js
cmp
mov
push
sub
outsl
jno
rcll
pop
inc
aas
cmpsl
xor
mov
fstps
mov
xchg
test
mov
nop
fcoml
aaa
fildl
mov
xchg
in
es
das
ret
popa
lds
mov
mov
rcl
insb
push
imulb
lret
subl
lret
adc
push
mov
lods
xchg
movsl
dec
pushf
in
inc
inc
aad
movsb
xchg
push
enter
std
rol
inc
out
xchg
lahf
or
inc
adc
adc
xchg
adc
and
cmpsb
ficoms
call
enter
add
fisttpll
jge
push
jmp
cmc
xchg
jns
lret
std
sarb
data16
jae
pop
shl
inc
or
jns
mov
xchg
and
cmc
rolb
mov
ret
push
es
and
add
or
or
jle
ss
cwtl
adc
lods
shl
loopne
pop
divb
and
iret
jle
ds
cli
mul
clc
lods
sar
fidivl
ss
cmpl
popa
or
imul
ljmp
inc
push
cmpl
ja
js
test
mov
fwait
test
in
fdivr
outsb
lea
lret
xor
sbb
ljmp
stc
int
inc
lret
push
add
popf
les
loopne
add
daa
dec
cld
push
xchg
rolb
in
and
xchg
cli
aad
mov
movsb
jecxz
mov
rorb
pop
jle
push
enter
sub
add
jnp
jns
jne
aaa
addl
stos
scas
push
lret
jns
add
fistpll
stc
call
jg
jl
fiadds
aad
test
adc
xlat
xchg
addr16
xchg
fsubs
mov
scas
pop
cmc
outsl
in
data16
fcomip
push
pop
xlat
aaa
fimuls
je
pop
repz
push
pop
adc
rorb
clc
xor
cmp
stos
aad
rcll
pop
xor
aad
sbb
xchg
xlat
rorb
shlb
lret
rcl
sub
pop
rclb
loopne
outsb
repz
xchg
push
sbbb
adc
dec
frstor
hlt
jg
xchg
dec
int3
or
xorl
lret
clc
shr
push
rcrl
jb
xlat
mov
repnz
mov
mov
add
push
adc
inc
divl
push
jns
mov
loopne
mov
add
iret
push
sbb
inc
fisubl
in
xlat
ja
pop
int
test
sbb
cmp
mov
mov
das
insb
iret
scas
sub
shlb
mov
mov
push
xor
pop
mov
push
jno
enter
adc
rcrl
iret
add
cmc
cmpsl
ret
jne
adc
or
hlt
mov
mov
sub
shlb
fprem
in
lds
jne
inc
mov
movsb
call
lret
lcall
cmc
aaa
test
add
cmc
jo
inc
mov
jmp
idivl
ljmp
push
sub
ret
and
or
sarl
cmp
mov
call
movsl
dec
leave
push
std
shl
sbb
std
roll
jecxz
fldenv
or
push
add
cltd
push
lret
lds
aam
flds
push
lock
adc
enter
sbb
or
in
push
pop
lret
add
mov
daa
adc
dec
or
rcr
jo
push
sub
cli
mov
cmc
and
xchg
add
shl
mov
lret
cmpsl
mov
xchg
mov
push
pop
pushf
inc
pop
cmp
mov
cwtl
push
or
loope
std
lret
pop
or
cmp
dec
fisubl
int3
ret
xchg
mov
lock
xor
sbb
fadds
fimuls
call
leave
shlb
pop
out
std
cmpsl
in
jle
xlat
mov
cwtl
lcall
cmp
jg
xchg
icebp
or
push
loopne
flds
mov
sbb
test
add
adc
cmpsl
or
lret
cmpsl
pop
jle
adc
cmp
stc
or
or
mov
fdiv
adc
dec
xchg
pop
cmp
sub
dec
cmp
imul
jnp
shrb
xor
push
es
and
sbb
sbb
mov
pop
mov
or
sbb
popf
jne
fisubrl
dec
pop
nop
mov
cmc
mov
add
dec
loopne
pop
cli
xor
mov
adcb
divb
mov
sbb
repz
rclb
add
fdivrl
jbe
fmull
cmp
inc
pop
cmpsl
pop
les
gs
cmp
sarb
addl
inc
lret
push
jno
aad
test
icebp
std
fisttpl
fwait
xchg
xchg
sbb
mov
arpl
add
push
sar
dec
pop
push
cli
je
push
mov
outsl
outsb
lahf
cmp
xchg
pushf
les
andb
push
inc
jmp
jp
cmc
iret
rol
mov
out
jmp
adc
mov
sbb
test
push
in
in
push
pop
dec
sahf
jge
inc
testb
xchg
out
shrb
test
sbb
insb
icebp
and
daa
insb
nop
mov
std
lea
call
mov
mov
jge
add
mov
imul
jmp
in
xchg
add
jbe
cs
sub
dec
add
pop
cmc
test
push
lods
inc
adc
adc
roll
xchg
or
fwait
jle
jle
jns
mov
inc
jmp
lea
lea
les
in
call
aaa
shr
sarl
cmc
push
ja
pusha
xor
popa
fwait
sub
leave
enter
loope
out
sub
stc
lock
sub
xor
in
imull
sar
arpl
lret
loopne
cltd
shlb
test
xor
cltd
rolb
xor
ret
std
jle
xlat
js
mov
popf
es
push
daa
push
add
outsb
repz
mov
jl
xor
shl
push
mov
adc
add
add
loope
rcll
mov
mov
sbb
cltd
jae
mov
mov
push
add
pushf
mov
dec
mov
xor
mov
dec
inc
add
test
sbb
rclb
adc
adcl
test
and
sub
in
call
dec
xor
jecxz
in
lret
or
pop
xchg
inc
fldt
pop
cwtl
or
xlat
in
push
and
pushf
jmp
sbb
dec
scas
rorl
test
inc
adc
pushf
adc
mov
adc
in
fildl
aas
dec
shlb
imul
dec
push
fstpl
mov
sarb
fcomps
mov
jnp
xor
lcall
jne
push
inc
sbb
xchg
dec
or
xlat
cmp
sahf
clc
repnz
fstl
jno
fildll
mov
adc
push
push
push
stc
fs
push
mov
pop
insl
cmp
pop
cwtl
sahf
imull
push
cld
sub
jp
nop
std
mov
or
lret
dec
xor
iret
ficompl
cmc
dec
sub
repnz
pushl
mov
cld
adc
iret
jecxz,pt
push
insl
aaa
in
repz
and
pop
jle
mov
out
shlb
mov
sbb
cli
add
in
mov
mov
jle
aad
mov
inc
mov
imul
sub
or
lret
iret
mov
inc
mul
add
mov
jno
test
cmp
xchg
shlb
or
cltd
test
test
mov
enter
xchg
cmp
jo
sbb
mov
adc
cli
xor
mov
push
test
mov
fstl
mov
stc
mov
or
push
or
xchg
sbb
clc
push
cmpsl
xchg
and
repnz
dec
push
pop
orb
sbb
jecxz
addb
and
lcall
stc
rcrb
popa
xor
inc
add
add
xchg
xchg
inc
iret
jmp
ret
dec
sbb
adc
sbb
fsts
cmc
and
mov
mulb
adc
adc
adc
sbb
daa
xor
add
rcrb
jo
stc
int3
or
lods
popa
push
pop
test
dec
pop
mov
sbb
fcoms
clc
negb
xchg
repnz
cmpsl
stc
push
lods
inc
add
lods
pop
add
stos
add
rorl
mov
cmpl
pop
adc
dec
mov
and
mov
cltd
mov
mov
out
lret
dec
push
cmp
loopne
xchg
jne
ss
leave
mov
scas
gs
mov
xchg
cwtl
test
adc
arpl
xlat
test
inc
aas
arpl
iret
bound
pop
ret
or
and
mov
jbe
stc
and
rcl
fbld
cmpsl
xor
xlat
imul
scas
adc
call
push
popa
repnz
or
testb
or
push
and
or
nop
adc
ret
movsb
dec
daa
push
test
in
adc
mov
xor
sbb
xor
mov
insb
cltd
sti
jle
xor
sbb
push
push
fwait
dec
xchg
jnp
sbb
cmp
cmc
idivb
or
popf
or
lret
push
mov
popf
push
adc
add
iret
xor
jbe
test
mov
das
repnz
xchg
mov
sarl
sub
sahf
cmc
mov
cmp
mov
add
xchg
lds
push
sub
and
mov
test
inc
cs
addr16
movsb
push
jmp
jo
fdivs
xlat
je
sbb
sbb
out
mov
cmp
out
cli
xchg
out
in
add
imul
sbb
cld
fldl
icebp
stc
hlt
cmp
push
pop
add
repz
fninit
rol
sub
jl
shlb
sbb
popa
xchg
add
sbb
cmc
mov
pop
movsb
sbb
lahf
sbb
insb
div
push
popa
idivb
pop
push
sbb
cltd
lock
icebp
or
arpl
ret
inc
mov
jbe
enter
cmpsl
fcmovu
sahf
add
adc
icebp
adc
xor
lods
or
push
movsb
dec
or
dec
xorl
sub
jns
cmpsb
fildl
fisubrl
lret
push
fnstenv
imul
lahf
mov
int
scas
jb
fcomip
adc
mov
adc
int3
add
ljmp
in
insl
jbe
lock
aad
mov
pop
nop
mov
cltd
hlt
pop
add
or
gs
je
jge
pop
repz
stc
dec
pop
clc
xchg
fwait
sarb
adc
cs
mov
notl
cmpsl
inc
gs
shl
iret
ret
in
inc
js
sahf
inc
pop
cmc
fimuls
test
outsl
orl
xchg
xor
aad
int3
loopne
xor
mov
pop
push
mov
pop
mov
ja
ds
lret
add
lret
jae
fwait
or
frstor
push
jg
xor
mov
daa
repz
lods
xchg
inc
aad
push
into
sahf
repz
inc
dec
int3
shll
xor
mov
insl
jle
call
lahf
dec
xchg
push
mov
or
jg
mov
mov
popf
jno
daa
fsubs
dec
adc
leave
mov
jp
mov
pop
ja
repnz
cld
sub
test
sub
mov
push
lret
push
jge
leave
push
xor
add
das
xchg
dec
xchg
xor
sub
inc
outsl
fwait
fildll
cmp
xchg
in
adc
inc
imul
clc
pop
test
sub
push
scas
push
xchg
inc
pop
cltd
int
mov
test
cmpl
xlat
ds
std
mov
push
aam
push
pop
sbb
movb
add
xor
lret
push
fnstcw
sarb
fsts
or
lods
mov
clc
inc
decb
push
and
push
pop
xlat
sar
hlt
notl
sbb
mov
rorb
imulb
jmp
iret
pop
adcl
scas
xlat
mov
sub
lret
cmp
mov
jmp
pop
f2xm1
jmp
or
mov
fdivrl
out
dec
fisubs
nop
mov
xchg
in
push
jne
scas
adc
jne
bnd
cltd
ret
jns
rclb
push
movsl
mov
lahf
rclb
std
xlat
mov
jb
push
adc
inc
mov
div
jg
shrb
xchg
mov
and
hlt
fsubl
dec
cmpsl
add
mov
mov
jnp
ja,pt
xchg
rcl
sti
inc
imul
pop
in
int
push
movsb
cmp
mov
das
sub
or
out
inc
mulb
mov
jns
test
pop
dec
pop
inc
sub
ja
sti
fwait
pop
push
shl
fsubs
sub
mov
cwtl
imul
push
add
jns
mov
mov
jae
iret
inc
fistl
pop
cmp
lret
loop
sbb
push
pop
xor
das
mov
dec
mov
sbb
ja
or
aad
in
mov
jp
pushf
xchg
dec
imul
mov
fildl
pop
cmp
or
sub
sbb
std
sub
stc
sbb
push
dec
mov
sbbl
data16
stos
adc
iret
ss
stc
lret
xchg
iret
inc
lds
push
fcomp
xchg
inc
push
xlat
arpl
adc
je
rcll
ds
mov
stc
xor
cld
or
clc
lahf
push
bound
and
mov
sbb
or
divl
cmp
adc
or
rcrb
push
cltd
insb
xchg
jl
or
lahf
xor
out
jbe
push
rclb
daa
aas
xchg
roll
mov
movsb
cmc
xor
or
int
loope
push
jg
jecxz
aad
inc
fnstsw
cmp
loopne
aas
imul
jg
mov
iret
out
scas
in
insb
scas
xchg
inc
js
rcl
fbld
push
jge
sarb
sub
int
shlb
imul
xchg
icebp
pusha
sbb
or
subl
mov
cmp
mov
jmp
and
aaa
mov
push
jbe
call
jle
pop
pop
add
inc
int3
iret
cmc
xchg
add
jl
add
cmpsb
iret
lret
xchg
test
xchg
fs
jns
rcrl
cltd
inc
enter
lods
adc
push
jns
inc
hlt
adc
subb
cmpb
ret
xchg
ss
add
addr16
popa
jo
bound
shlb
lock
mov
pushl
xor
jne
jp
sbb
xchg
add
push
aaa
std
repnz
test
jg
jp
pop
xchg
data16
lock
ficompl
push
xchg
jl
jmp
in
inc
pop
outsl
stos
jmp
sub
fistpll
xchg
push
cmp
sarb
fisubrs
js
push
sub
sbb
jno
mov
aas
inc
in
pop
fwait
xchg
adc
shll
xor
xchg
int3
in
sbb
mov
std
xlat
ficoms
out
dec
in
jbe
inc
jp
sbb
popf
push
adc
fldl2e
xor
xor
cmp
leave
or
repz
add
repnz
ljmp
cmpsl
stc
inc
add
mov
and
push
sub
mov
mov
gs
mov
mov
mov
push
xor
sub
mov
pop
mov
pop
inc
xchg
mov
or
insb
repz
mov
test
fsubrl
rcl
pop
mov
or
push
mov
mov
lcall
push
adc
addl
pop
jp
mov
sbb
iret
mov
cmp
pushl
lret
push
loop
cmp
cltd
shll
std
stc
std
ret
test
jb
pushf
mov
cmc
push
cmc
pop
jno
sbb
fcomps
and
cltd
adc
fisttpll
mov
and
jns
jns
rorl
jbe
fldenv
loope
sub
jbe
and
lcall
aam
hlt
stos
sub
dec
pop
sub
insl
adc
ret
rorb
icebp
cmp
pusha
shrl
add
push
rclb
fadd
cmp
xor
jbe
push
inc
fwait
std
nop
int
lea
mov
add
imul
inc
test
inc
xchg
push
push
jle
es
push
outsb
addb
lahf
pop
dec
jmp
rorb
ds
out
sbb
lds
sub
ret
jbe
leave
add
jecxz
mov
insl
sarb
add
and
or
cltd
xor
fcomps
or
test
outsb
adc
enter
dec
nop
bound
fnstenv
or
in
cltd
test
sbb
in
xchg
imul
repnz
push
jg
sbb
mov
mov
jnp
inc
cmc
mov
mov
lret
ljmp
stc
insb
xchg
les
int3
lret
mov
mov
mov
fadds
jle
jg
mov
hlt
in
mov
sbb
inc
mov
repz
sub
xchg
out
das
movsl
jne
ds
cltd
or
cmc
mov
cmpb
add
stos
sub
jns
popa
jno
dec
popa
ret
sub
dec
push
lea
xor
das
fmul
xor
fidivrs
jbe
repz
push
das
xchg
imul
jbe
cltd
push
pop
cwtl
mov
test
insb
adc
jge
push
outsl
icebp
inc
inc
shlb
push
cmpsl
cmp
cmp
insl
mov
popf
mov
mov
lds
lods
mov
ds
lds
and
mov
cmpsb
and
sbb
popf
xor
xchg
mov
pop
mov
fcoml
xchg
jbe
fdivl
fdivrl
sbb
xor
call
rcrl
ret
and
mov
sbb
mov
cltd
scas
in
rcr
into
cs
dec
inc
cmc
adc
repnz
dec
and
xchg
dec
adc
fnstcw
inc
loopne
xchg
pop
push
popf
call
outsl
jmp
adc
aam
test
jl
shlb
pop
mov
stc
clc
rolb
je
pop
adc
mov
in
js
lock
fld
movsb
xchg
hlt
rcrb
push
jmp
or
push
ja
sarb
jne
mov
dec
and
adc
iret
fadd
jbe
dec
cwtl
add
jnp
xor
add
adc
pop
mov
pop
jmp
mov
push
test
imul
xor
push
xchg
mov
add
sub
jp
out
mov
jp
das
adc
loop
push
jns
imul
add
cs
jne
sbb
push
mov
xchg
push
add
mov
aas
cld
dec
mov
mov
mov
aad
repnz
negb
aad
push
lods
loopne
or
ljmp
dec
iret
push
jp
cmp
out
xor
pop
dec
imul
cmc
adc
pushl
test
jmp
fcomp
sub
fldenv
push
sbb
and
imul
test
sbb
sti
hlt
add
dec
mov
mov
dec
test
ret
fstl
shlb
rcrb
mov
popa
xlat
test
pop
jae
rcl
rol
adc
jns
cmp
in
xchg
mov
scas
sub
cmpsl
insl
rclb
ss
jle
cwtl
cli
xchg
and
mov
ja
in
jg
bound
xor
cwtl
sbb
inc
mov
loop
sub
repnz
lock
cs
inc
fldl
jle
pop
jl
mov
or
dec
dec
fsubs
xor
jnp
in
bound
xor
shrl
loop
ljmp
mov
ds
int
push
shrl
sub
subl
cltd
add
sarb
daa
pop
pop
mov
aaa
cmpsl
lret
inc
fcomi
aad
xlat
ds
jb
out
icebp
cs
out
ljmp
dec
ret
and
mov
ss
leave
jb
test
push
xor
outsb
bound
popa
das
jl
pop
in
xchg
cmp
cmpsl
sub
ret
aas
cmp
push
lcall
fucomp
jp
ds
dec
cmc
roll
jb
or
rcrl
test
shll
inc
mov
mov
or
and
sbb
outsl
pop
inc
add
jmp
sahf
pop
lods
xor
inc
or
jmp
cmpl
cs
xchg
push
repz
lret
test
sub
cs
cld
ja
lahf
push
xlat
jge
or
add
xor
push
push
xchg
push
repz
mov
mov
ljmp
jnp
adc
cwtl
dec
addr16
out
or
rcll
mov
subl
lcall
xchg
popa
lds
jns
mov
lret
out
hlt
push
icebp
or
ja
fucom
mov
dec
mov
mov
pop
xchg
lds
inc
imul
sti
test
mov
lds
pop
jns
aas
outsb
notb
pop
xor
add
or
sub
rorl
in
jae
inc
das
movsb
pop
je
jg
js
or
js
add
or
or
jle
push
adc
xlat
xchg
xchg
shrb
imul
mov
push
stc
jb
xchg
sbb
into
out
test
js
xchg
jg
fdivs
outsl
js
or
and
notl
ja
imul
cmp
aad
aaa
mov
jle
int3
fildl
mov
shlb
shll
insl
xor
cmp
test
cs
jle
mov
lock
sbb
fsubrl
add
sbb
mov
jae
call
or
xchg
leave
jle
push
xor
pushf
das
aad
pop
insl
mov
rcl
popf
icebp
or
repz
ret
push
ss
lahf
sbb
mov
push
cld
scas
mov
lret
jno
xchg
push
test
lahf
ret
icebp
cmc
xlat
pop
lret
ret
mov
inc
xchg
push
mov
rcrb
cmp
inc
xchg
dec
inc
jecxz
push
xchg
mov
movsb
cltd
push
stc
cmpsl
add
movsb
test
adc
leave
adc
ds
lds
frstor
sub
sub
dec
int3
adc
loopne
cmc
fsts
aaa
sub
repnz
lea
outsl
sbb
test
ror
mov
ret
inc
repz
xlat
pop
repz
test
mov
ja
and
mov
push
cmpsl
xor
mov
cmp
lock
imul
aad
pop
add
mov
adc
mov
ja
gs
scas
jnp
mov
test
dec
sbb
mov
push
adc
aad
pop
dec
clc
clc
call
loop
ret
lcall
clc
popa
sar
dec
jmp
cmc
sbb
inc
inc
loope
cltd
insb
shrb
add
push
jns
mov
jae
clc
sbb
jge
jb
xchg
push
mov
fldl
and
xchg
aad
test
xchg
cltd
xchg
movsb
adc
cmp
ret
fcmovnb
aas
jae
lret
xchg
ss
jno
clc
sbb
lret
xchg
inc
mov
loop
sub
xor
cmp
push
inc
ret
mov
cmp
test
adc
cmp
sub
cld
ds
push
int
loope
data16
sbb
stc
cmp
cld
xlat
dec
sub
out
add
adc
ss
xlat
mov
rclb
adcl
xor
in
inc
jle
inc
push
mov
bound
popa
popl
push
push
mov
jo
jb
xor
mov
or
out
push
adc
and
xchg
stc
jge
test
pop
dec
jns
lret
in
adc
rclb
fwait
iret
rolb
cmc
mov
repnz
cmc
lds
outsb
shr
lahf
fnsave
adc
mov
sahf
xchg
xchg
sti
shll
stos
jl
cwtl
cmp
dec
outsb
mov
mov
adc
mov
push
xlat
lods
test
or
pushf
or
adc
mull
mov
inc
push
icebp
add
lods
hlt
les
inc
push
xor
push
jo
test
mov
mov
mov
pop
inc
mov
loopne
jp
push
xchg
cmpsl
mov
lds
dec
dec
jns
jle
dec
xorl
pop
in
lret
or
sahf
dec
popf
out
mov
bound
jg
xor
push
sub
repnz
sbb
add
pop
lds
aaa
test
pop
loopne
repnz
pop
imul
inc
push
jb
cmp
hlt
push
inc
adc
stos
das
arpl
adc
mov
xor
dec
rcll
lret
and
jle
in
insl
jle
insl
cmp
insl
out
jnp
push
push
mov
pusha
sub
inc
aam
sbb
push
cmpsl
jp
xor
mov
mov
jno
adc
mov
cmpb
mov
or
repz
out
out
xor
inc
xchg
jne
adc
adc
mov
mov
jne
lar
rcll
sbb
cmp
sub
push
mov
mov
pop
scas
cli
mov
movsb
pop
mov
enter
aad
xchg
cltd
lret
shlb
pop
test
cmpsl
xlat
or
into
ds
aas
scas
aam
mov
sbb
fnsave
sbb
adc
test
jb
push
adc
lds
xor
cltd
scas
adc
or
dec
aaa
push
inc
stos
icebp
lret
jmp
jne
or
push
sub
jecxz
mov
add
mov
ja
pop
in
notb
pushl
lock
push
cmc
cmp
mov
pop
mov
push
dec
fimull
addr16
cmpb
out
ret
cmp
xchg
cltd
cmp
mov
push
jecxz
or
rorb
inc
repz
inc
int
lret
mov
enter
aad
andl
dec
cmp
negb
or
push
xor
ja
inc
or
sub
jae
repz
insl
lods
mov
add
xor
xorl
ljmp
cmp
lahf
mov
or
push
jle
pop
xchg
shl
dec
shl
iret
push
xchg
sbb
bnd
icebp
mov
int
xor
mul
mov
mov
sbb
push
push
xchg
pusha
mov
jae
inc
ja
pop
inc
cmp
shlb
imul
cmpsl
cltd
hlt
sti
jbe
mov
inc
or
jbe
push
jp
push
push
int3
adc
pop
inc
xlat
pop
insl
inc
incl
sbb
sbb
sbb
mov
jne
push
stos
or
test
jl
adc
adc
shlb
lds
push
rorl
xbegin
in
xor
adc
inc
pop
xor
sbb
cld
jno
cmp
shlb
push
imul
push
iret
mov
lea
xchg
in
test
ja
xchg
sub
push
push
xor
adc
mov
das
xor
push
and
xchg
mov
out
fidivs
test
jbe
cmp
mov
dec
sub
movsl
sbb
js
xchg
out
cmpsl
lds
xor
rcl
in
das
into
xchg
iret
leave
mov
jmp
aaa
out
mov
jb
mov
ss
dec
push
pop
jbe
shr
loopne
loop
mov
cmc
jl
ret
jle
push
shlb
push
jae
xor
shll
sub
sub
lcall
imul
std
popf
icebp
jno
mov
mov
cltd
jns
loope
rcr
in
xchg
addl
sub
dec
or
fcompl
push
cmp
jne
jno
repz
mov
into
jge
mov
mov
adc
mov
push
inc
rorl
push
cmp
in
cmpsl
adc
and
movl
xchg
leave
insl
push
jae
cmp
fbld
pop
dec
bound
dec
mov
in
fstpl
fcomi
and
sbb
cmp
cmp
sbbl
pop
out
mov
lret
fisttps
iret
stos
push
push
int
hlt
sub
lret
es
in
sbb
mov
test
insb
stos
adcl
or
xchg
mov
add
jno
aad
dec
push
mov
in
jg
mov
push
jmp
and
mov
mov
stos
push
icebp
in
and
aam
mov
mov
mov
push
push
fnstcw
iret
cmp
leave
lods
xchg
aaa
neg
jae
jl
inc
aas
push
arpl
lret
jne
data16
mov
mov
ja
sbb
stos
sbb
out
mov
adc
movsl
or
mov
cmc
cmpl
and
mov
pop
arpl
rcll
xor
jbe
lods
jae
rcr
aad
outsb
scas
pushf
adc
aad
xchg
out
test
sub
adc
subl
mov
xchg
mov
adc
ret
cmc
in
imul
cwtl
dec
popf
and
push
fimull
or
mov
xor
negb
movsb
ffree
add
out
aas
sbb
push
add
faddl
or
push
lock
lret
mov
push
mov
xor
mov
cltd
in
fisubrl
mov
fmul
adc
xchg
outsl
add
cs
pop
xor
push
xchg
idivl
dec
rcll
leave
xor
push
push
pop
divb
mov
test
mov
jno
out
add
lret
int
imul
push
das
add
mov
pop
xchg
push
ljmp
out
mov
sarb
jbe
or
imul
mov
and
adc
shlb
and
cmc
repz
adc
and
lahf
pop
inc
pop
push
mov
xor
dec
jb
ds
addb
mov
xchg
xchg
push
cmp
ret
jg
fisttpll
xchg
lret
push
dec
fdivrs
scas
daa
pushf
pop
shrb
rolb
nop
xchg
sub
js
and
cmpsl
sti
je
lret
loope
loop
outsb
cwtl
ficoms
je
sbb
orl
test
jns
cltd
jae
push
shlb
dec
jbe
movsb
lds
repnz
jge
xor
and
jnp
outsb
jmp
push
jnp
dec
cmp
add
adc
mov
mov
shl
jge
xchg
lcall
fnstcw
jno
jbe
loopne
jns
lahf
jmp
sbb
jle
push
jnp
mov
pop
add
cltd
xor
movsl
push
pusha
daa
mov
pop
jae
js
mov
lods
xor
loope
or
push
dec
jle
ds
mov
sarb
lods
adc
enter
or
shrb
jns
das
jp
mov
sub
cwtl
xchg
fisubs
aaa
dec
adc
clc
jl
ljmp
add
mov
push
sbb
fidivl
aad
adc
pop
into
data16
xchg
mov
inc
call
lret
xchg
xlat
ds
adc
xor
sub
xchg
jl
xchg
sarb
shll
lock
mov
push
mov
dec
and
jge
cmp
das
jb
ja
ret
insb
jp
gs
or
aam
shll
and
mov
jns
sbb
mul
pop
xchg
popa
cmp
xchg
push
fcmovbe
jmp
fwait
mov
cwtl
out
aas
imul
mov
push
mov
icebp
mov
xchg
imul
in
rorl
stos
push
cmp
stc
lds
mov
ror
hlt
push
int
shll
test
mov
adc
adc
mov
sbb
cmp
or
mov
out
les
or
jbe
push
cwtl
adc
mul
mov
mov
loopne
dec
jecxz
ficompl
cs
xchg
cltd
mov
cli
rcl
mov
cltd
sbb
mov
icebp
push
clc
stc
fstpl
push
nop
push
out
mov
lods
push
cmp
sub
daa
add
adc
fidivl
xchg
dec
jns
cwtl
push
lds
test
xchg
lods
cmpl
rorb
mov
jge
sahf
xlat
sti
mov
int
pop
test
mov
mov
mulps
adc
sbb
jno
push
cmpsl
mov
pop
sbb
mov
inc
mov
adc
jl
lret
dec
jg
repnz
divb
movsb
andl
xor
jb
mov
std
fidivrl
lock
dec
sbb
testl
or
sub
movsb
mov
mov
sub
jnp
sbb
sub
stos
test
jle
daa
push
shlb
outsb
dec
into
fsubr
pop
mov
inc
sarb
stc
jg
fadd
mov
or
xor
popl
rolb
les
cli
push
push
inc
out
pushf
jno
scas
pushf
add
mov
ja
and
mov
loope
and
or
sbb
inc
add
test
xor
xchg
sarb
mov
push
adc
sti
inc
stc
mov
int3
pop
fcomi
dec
sbb
lock
jmp
rcrl
mov
add
imul
dec
int3
jmp
inc
shrb
jl
loopne
or
fidivl
push
or
mov
mov
out
sahf
sbb
xchg
cmp
mov
or
lcall
or
xor
jo
rolb
sbb
or
inc
jno
jnp
mov
imul
jecxz
outsl
xchg
sub
inc
xlat
pop
xchg
pop
out
mov
adc
cwtl
movsb
stc
inc
mov
or
insb
xchg
mov
adc
adc
pop
xchg
dec
mov
ja
mov
popf
add
dec
mov
mov
mov
outsl
xlat
fadds
leave
cltd
pusha
cmpb
popf
hlt
jge
je
shlb
inc
movsl
daa
push
fildl
dec
aam
push
shrb
data16
jge
adc
into
inc
jg
push
mov
xadd
mov
cmp
jle
ljmp
adc
adc
push
push
adc
pop
clc
popf
xchg
addr16
or
mov
xchg
subb
cmc
shlb
inc
cld
inc
test
or
pop
loopne
xor
ret
adcl
lahf
push
cwtl
inc
stos
arpl
ret
jne
test
lret
imul
mov
ret
and
jno
aaa
testl
dec
int
out
inc
outsl
jns
sub
push
adc
movzbl
decb
mov
xchg
fisubrs
ja
lods
cmp
test
jnp
adc
rcl
cmpsb
shl
mov
push
push
pop
stc
mov
lahf
mov
xchg
push
mov
xchg
sub
pop
popa
les
jle,pt
sub
loopne
inc
pop
cmpsl
adc
xchg
inc
jbe
push
sbb
mov
xchg
fnstenv
sbb
mov
xchg
mov
sbb
jle
lret
jmp
iret
stos
aam
cmc
dec
adc
mov
xchg
fisubrl
cmc
mov
cwtl
sti
ret
push
xchg
pop
cmp
rclb
icebp
aad
outsb
mulb
pop
sub
rcl
add
ss
out
adc
dec
sti
sub
jno
push
pop
mov
les
lds
stos
xchg
push
pop
push
jp
pop
add
mov
pop
hlt
hlt
mov
sbb
sbb
fcmovnb
push
subb
xchg
loope
and
cwtl
xchg
dec
shlb
sbb
jmp
es
push
repz
push
lock
ficomps
test
mov
inc
or
add
jae
xchg
cld
iret
divl
clc
jl
loopne
dec
push
nop
in
xchg
dec
add
clc
inc
clc
or
js
mov
push
xchg
clc
and
es
jle
sub
movsl
sbb
addr16
inc
fwait
popa
pop
add
push
outsb
cmpsl
test
loopne
push
xchg
lds
push
cld
sarb
movsl
xchg
shlb
test
movsb
cmc
std
mov
sbb
negl
scas
pop
sub
enter
push
lret
in
imul
les
out
pminub
into
or
or
sbb
loope
aaa
lea
push
mov
xor
xchg
repz
icebp
pop
icebp
jns
xor
or
shrb
test
mov
jl
call
lea
aas
add
mov
in
mov
enter
ret
cmp
enter
mov
jnp
mov
ss
lods
sbb
add
sbb
pop
inc
pop
mov
mov
mov
cmp
das
rclb
add
mov
xchg
add
jle
mov
out
or
inc
cmc
rorb
adc
xchg
xor
gs
push
mov
pop
fisttpl
mov
inc
cmp
lahf
mov
and
dec
xorb
mov
mov
adc
in
sbb
or
inc
fs
adc
xlat
aaa
out
clc
cmp
adc
ror
mov
mov
add
loop
pop
popa
in
adc
mov
cmp
adcl
repz
mov
repnz
cmp
fs
daa
cld
or
mov
leave
mov
or
in
lock
out
je
imul
fdivp
adc
scas
pop
sub
imul
cmc
xchg
fiadds
push
inc
adc
jle
sub
stos
imul
test
xchg
inc
mov
inc
xchg
fcomps
addr16
sub
xor
mov
popa
sub
mov
or
imul
mulb
rorl
shrl
decb
imul
add
jle
loopne
adc
jns
jo
dec
test
sbb
dec
pop
push
das
push
fnstsw
sti
mov
sarl
add
fcomp
int
pop
cmc
xchg
xor
enter
mov
bound
jle
xchg
int
hlt
cld
jb
into
xor
sbb
mov
leave
and
cmpsl
mov
test
jne
stos
pop
push
cmp
ljmp
pop
inc
cmp
xor
lret
and
push
sub
rcl
or
xchg
jle
shlb
cmp
leave
cmpsl
loope
jg
sahf
mov
push
mov
cs
or
cwtl
scas
mov
jno
outsb
and
push
push
and
adc
cltd
idiv
jle
test
pop
mov
pop
xor
sub
imulb
xchg
adc
lret
jmp
mov
mov
adc
inc
xchg
adc
pop
enter
mov
mov
sbb
aam
cmpsb
subl
xchg
cmp
into
add
sarl
in
jno
rcrb
mov
mov
xorb
mov
stos
mov
sub
cmp
rol
cmp
sarb
rol
pop
or
lods
test
or
call
mov
inc
pop
mov
jne
sbb
dec
jnp
and
repnz
cwtl
mov
test
cltd
lret
stc
pop
pop
sub
nop
sbb
outsl
addr16
mov
xchg
inc
and
pop
pop
cld
popf
cltd
push
add
pushl
into
imulb
jb
notb
fiadds
sbb
cmpsb
xor
sub
cmp
cld
add
leave
jae
cmp
mov
pop
imul
ds
inc
js
cli
outsl
lods
aam
filds
sub
fld
inc
js
ja
test
data16
inc
sbb
mov
cltd
sahf
stos
les
push
sbb
or
cmp
cmp
pop
hlt
and
xor
sbb
orl
fstpt
sbb
cli
fs
pop
adc
sti
inc
mov
int3
jl
fdivs
adc
repz
xchg
push
fcoms
cltd
sub
or
sub
ret
and
in
mov
dec
sub
mov
fxch
call
adc
add
gs
cmc
call
xchg
vpmaxub
aaa
xchg
push
jle
push
cs
sbb
sarl
loop
mov
mov
inc
pop
cmp
cli
mov
shlb
ret
sarb
jne
jbe
push
insb
push
js
mov
lods
add
out
inc
ja
mov
push
dec
out
xchg
xchg
pusha
mov
ja
fnstenv
sbb
pusha
pop
xor
push
cmpsl
in
xor
bound
jle
add
jmp
pop
push
lock
sbb
mov
aas
add
jecxz
jmp
xor
dec
adc
push
dec
jno
lahf
cmp
enter
gs
lret
push
push
test
lahf
xchg
popf
sar
jg
lea
cmpsl
add
mov
dec
push
je
and
rcrb
movsl
clc
mov
adc
rdmsr
pop
insl
add
leave
jle
dec
aad
icebp
notb
in
xor
and
imul
std
mov
push
aam
push
push
rclb
sbb
or
jne
mov
push
dec
add
in
iret
je
jmp
rcr
mov
add
repz
pop
imul
mov
roll
dec
and
addr16
in
jo
push
int3
out
dec
sbb
fildll
pop
xchg
fcoms
das
mov
and
jbe
xorl
xchg
cmp
or
mov
sti
in
lods
jnp
or
call
mov
or
xchg
add
roll
lret
sub
xor
rcll
insb
inc
cmp
fbld
adc
jmp
mov
mov
xchg
inc
dec
xlat
jbe
push
leave
mov
dec
push
rcl
imul
es
jns
add
ret
fst
mov
push
xchg
clc
pop
inc
dec
shlb
jb
stos
fidivl
push
xchg
icebp
out
dec
repz
mov
push
cld
xchg
sub
mov
xor
ljmp
dec
jb
data16
push
cltd
or
scas
adc
inc
xchg
dec
add
xchg
push
or
daa
je
dec
insl
pop
outsb
stc
mov
adc
ds
cs
mov
and
and
or
mov
pop
cmp
pop
mov
shlb
or
or
clc
xchg
shll
adc
xchg
into
or
je
daa
sub
out
or
inc
inc
outsl
pusha
add
std
cli
fwait
stos
loop
or
inc
xor
or
clc
imul
pop
loopne
cld
mov
repnz
hlt
xchg
mov
cwtl
xchg
xchg
xchg
lret
fsubp
inc
pop
xchg
outsb
std
pop
xchg
loopne
dec
aam
cmp
mov
mov
testb
inc
mov
xchg
out
cmp
and
into
cmp
ja
cld
cmc
js
jbe
mov
stc
xor
lods
lret
test
push
sti
mov
xchg
adc
cmp
sbb
in
cld
jmp
cmp
dec
pop
mov
and
or
push
dec
pop
xchg
add
out
addr16
dec
icebp
aad
loope
jle
std
xor
test
mov
xchg
outsl
jmp
or
jno
test
ljmp
xor
xchg
xor
xor
pusha
or
xchg
adc
push
outsl
int3
lea
xchg
int
sub
out
cmc
lock
inc
mov
jo
lret
add
das
call
lahf
sbb
jp
cmp
jg
lahf
or
mov
pop
cmp
nop
sarb
shll
repnz
jns
stos
fucomp
pextrw
mov
sub
sub
insb
ret
add
fcoml
inc
and
cltd
jns
cwtl
jnp
sub
jmp
dec
imul
adc
fcmovb
push
outsb
add
cmp
bound
cli
mov
mov
pop
sahf
adc
inc
dec
aas
mov
cmp
inc
pop
xchg
mov
dec
cs
inc
daa
jno
jle
iret
cmc
adc
mov
lds
std
stos
jns
stc
add
out
jmp
lds
stc
push
pop
xchg
cmpsl
mov
mov
pop
out
lods
xchg
add
ds
inc
adc
setb
or
pop
mov
mov
int3
icebp
jno
dec
divps
inc
pop
add
lret
orl
cs
add
inc
fsubs
xchg
inc
fisubl
dec
mov
dec
or
mov
clc
shll
xchg
inc
lret
xchg
adc
nop
loope
pop
inc
rolb
insl
nop
mov
jg
pop
iret
fsubr
adc
rol
sub
ss
mul
popa
add
clc
jmp
cld
jle
xor
push
loopne
mov
jne
xchg
or
inc
dec
fwait
jp
loopne
div
lahf
push
fstpl
push
mov
mov
pushf
test
test
pop
xor
mov
adc
cmp
out
cmpl
loope
dec
add
shll
dec
and
jg
mov
xchg
push
push
into
mov
xor
scas
xor
push
stos
test
aas
insl
jb
clc
cmp
mov
popl
lods
inc
push
jmp
push
ljmp
movsl
loope
cmp
out
enter
fwait
shl
cmp
sar
cmp
inc
popa
jle
pop
lret
sbb
add
mov
lods
push
sub
rcrl
hlt
shl
adc
outsl
jne
enter
sub
js
shrb
inc
nop
lock
add
aas
mov
xchg
mov
imul
or
fs
int3
clc
pop
and
mov
push
mov
xor
arpl
enter
jae
xchg
mov
sub
in
gs
fldl
inc
enter
fidivs
lock
cltd
out
pop
mov
fst
add
cld
mov
cs
shrl
pop
sub
mov
jb
fnstenv
sbb
int
rolb
lret
xchg
gs
add
jae
sub
in
dec
sbb
dec
in
mov
test
jb
adc
cmpsl
sub
mov
test
xchg
push
cwtl
insl
adc
les
mov
ss
push
xchg
or
sarb
jb
or
and
daa
cmpsb
imul
fsubs
in
xorb
clc
les
dec
shl
insb
daa
outsl
test
jb
xchg
or
stos
or
addl
xchg
andb
xchg
mov
mov
push
xchg
and
imul
enter
aaa
push
je
adc
les
je
jbe
jle
or
mov
inc
jae
lods
pop
and
cltd
pop
jns
int3
add
mov
push
test
xchg
and
cmp
cmc
jbe
cwtl
push
push
and
adc
cltd
mov
in
dec
pop
js
outsb
mov
dec
repnz
push
test
lcall
xchg
addr16
cltd
pop
sbb
std
push
out
mov
ss
mov
jge
xchg
or
jnp,pn
adc
in
mov
lret
adc
and
jbe
jae
mov
jno
test
ret
adc
push
shlb
decl
push
mov
mov
pushl
rcr
sbb
js
shrb
cwtl
mov
enter
sub
aad
push
clc
lret
push
lret
and
jno
lds
enter
xor
jno
mov
xchg
cmp
fildll
mov
fistpl
jle
aam
shrb
pop
sbb
fiaddl
scas
fadds
inc
in
femms
push
icebp
rcrb
jmp
push
add
adc
mov
testb
add
mov
rclb
rolb
add
pushl
cli
jnp
and
xchg
xchg
adc
shlb
fs
rcrb
mov
xchg
dec
push
loope
ret
pop
rcll
ljmp
aad
sub
sahf
pusha
mov
cmc
mov
jbe
fstpt
inc
rolb
mov
rolb
and
push
imul
bnd
rol
ret
add
push
mov
xchg
cs
cld
cs
inc
xlat
jge
add
jno
mov
rclb
xor
cmpsl
mov
adc
inc
addl
mov
loopne
cs
hlt
or
sarb
xchg
iret
notb
xor
sti
push
add
test
dec
flds
js
mov
fadd
js
mov
xlat
xchg
shlb
jmp
lods
mov
ja
xchg
out
cmp
or
xchg
les
bound
dec
scas
jecxz
sbb
and
push
xor
mov
cmpsb
push
je
aad
aas
or
mov
or
jmp
xchg
mov
inc
lds
aaa
mov
lea
in
dec
add
and
jbe
add
mov
mov
cs
cmpb
sub
cmc
push
ja
push
adc
iret
xor
mov
repz
push
mov
icebp
adc
xchg
cmp
fisubl
sbb
or
sbb
cmp
push
ja
mov
pop
rolb
not
out
mov
xor
pop
and
pop
lcall
test
jecxz
je
sub
mov
jae
jo
mov
pop
icebp
pusha
cwtl
enter
mov
fstpl
xchg
xchg
xchg
xchg
ror
xor
jb
in
cmp
sbb
mov
cld
push
outsl
jge
insl
leave
xor
push
inc
ror
jo
fsubl
out
cmp
addr16
das
xor
sti
insl
fnstcw
scas
sbb
loop
xor
jb
mov
fiadds
mov
lea
test
sbb
cltd
aas
aad
pop
out
lds
mov
ja
cwtl
daa
adc
fcomp
rcrb
add
shl
idivl
pop
adc
mov
pop
cld
inc
jp
aas
test
xchg
jmp
adc
fsubs
xor
js
mov
repnz
rclb
insl
inc
or
mov
into
add
dec
fnstsw
fwait
sub
push
jb
jmp
cltd
rcrb
jecxz
mov
jle
imul
xchg
enter
xchg
clc
test
mov
push
mov
sbb
jb
inc
mov
xchg
cld
xchg
mov
jae
mov
sub
mov
outsb
sahf
xchg
or
pop
daa
lret
add
add
clc
inc
xchg
fwait
lret
arpl
push
mov
add
push
ret
and
jge
in
inc
loope
cmp
data16
jge
in
push
flds
xor
outsl
addr16
sbb
jle
xor
xlat
or
shlb
jp
jno
or
or
push
nop
ret
adc
ds
scas
dec
add
int3
repz
dec
divb
xorl
aad
mov
add
lea
movsl
sbb
sbb
push
mov
and
add
iret
imul
out
daa
push
cld
inc
mull
loopne
int3
fcompl
push
or
loopne
jno
out
mov
adc
xlat
stc
xchg
mov
jns
cltd
inc
jp
push
xchg
dec
dec
test
pop
test
pop
mov
fnsave
stc
add
add
jle
cmp
push
stc
shll
adc
xlat
imul
mov
rcrl
or
cs
aad
pop
push
inc
mov
mov
pop
adc
inc
mov
aam
mov
sbb
mov
mov
cmp
nop
fadd
out
scas
sbb
or
f2xm1
add
mov
out
mov
pushf
fnstenv
out
ljmp
inc
jmp
sbb
mov
stc
addr16
cmp
adc
mov
or
add
ret
insl
push
ss
cld
ds
js
das
lahf
cmpsl
flds
scas
or
mov
jmp
jp
imul
add
sbb
jp
leave
vlddqu
loop
in
insb
mov
shrb
mov
add
jb
clc
fsubl
jecxz
xlat
pop
data16
stc
pop
leave
xor
fucomip
mov
pop
sbb
lds
xlat
loopne
pop
cwtl
cmc
sbb
adc
ja
cmp
stos
add
rcrl
or
popa
jecxz
xchg
cwtl
jns
cli
mov
fldenv
cli
adc
mov
mov
popa
pop
pop
fsubrs
jns
mov
lret
repnz
cmpsb
jns
cmp
mov
imul
adc
cmc
dec
mov
add
pop
out
pop
mov
stc
shll
ficoml
cmpsb
push
movl
mov
xchg
insl
cmp
xchg
cmc
leave
xor
sbb
jne
sbb
xchg
xor
jae
dec
push
subl
sub
das
adc
lcall
xchg
mov
push
jmp
mov
sahf
arpl
sbb
repnz
jle
imul
mov
shll
mov
cwtd
and
frstor
mov
xchg
sbb
loopne
mov
xor
push
and
rclb
hlt
and
xor
shrb
push
jb
push
mov
push
xor
inc
es
mov
not
xchg
rolb
rcl
xor
push
mov
fadds
xor
int
lret
pushl
icebp
push
xchg
movsb
ret
mov
xor
inc
lock
push
das
xlat
inc
adc
iret
ds
push
jl
pop
jae
loopne
cmp
pop
mov
cs
bound
into
inc
xchg
cli
xorl
repnz
xchg
cwtl
ds
jbe
lahf
rorb
ror
jmp
rolb
xchg
cli
inc
adc
lret
sbb
sub
cmpsl
add
test
je
mov
loope
outsl
dec
add
clc
adc
cmpsb
imul
push
xchg
jns
xchg
popa
ficompl
sub
xchg
jge
cmp
pop
mov
jle
or
clc
cmp
negl
xor
adc
mov
xchg
jbe
cmc
adc
es
cs
push
cmpsb
mov
and
je
mov
cmp
mov
divl
inc
scas
push
int
fisubl
mov
pop
push
mov
add
add
cs
cltd
imul
std
xlat
fwait
shlb
xor
jne
popa
add
daa
mov
add
imul
inc
mov
xor
adc
sub
xchg
notb
aam
outsl
push
je
in
int3
inc
push
xlat
insb
add
les
popf
test
push
push
lock
cmp
hlt
add
inc
mov
cmp
dec
pusha
leave
notl
not
jae
xlat
jmp
xor
aas
xor
push
ja
inc
jae
sar
mov
add
and
repnz
ds
jmp
mull
flds
hlt
nop
mov
test
shll
mov
or
xchg
jbe
mov
out
cltd
ret
jne
xor
fwait
les
xchg
pop
pop
adc
or
pop
mov
sbb
shl
mov
xor
mov
push
cmp
push
mov
jns
sbb
fdivs
inc
test
je
add
jge
aad
lahf
add
lret
xchg
mov
lahf
mov
rcrl
jae
mov
xor
lret
in
mov
sbb
jg
mov
jb
adc
lods
mov
imul
scas
cwtl
enter
xor
aas
shlb
lds
mov
call
test
sub
call
arpl
push
add
jp
mov
cltd
mov
shrb
or
jmp
or
push
adc
xchg
mov
mov
adc
out
cmp
popf
adc
adc
js
popa
add
push
and
sbb
lods
cltd
fbstp
xchg
fwait
out
lods
or
rcr
es
stos
adc
jg
push
hlt
adc
mov
mov
jg
xchg
push
cltd
je
fdivl
and
mov
cmp
iret
pop
add
roll
cwtl
jae
xorb
push
aad
out
jp
std
or
movsl
out
ds
inc
daa
and
push
aad
push
int
pop
repnz
mov
mov
inc
push
fdivr
xchg
inc
lret
cltd
inc
orl
or
mov
pop
testl
adc
repz
sub
cmp
mov
and
mov
jns
iret
mov
or
rolb
jno
pop
add
xor
add
add
and
pop
mov
xchg
rcll
imul
jno
adc
in
outsb
clc
jns
add
jbe
cmc
rcrl
in
mov
dec
add
lds
xchg
lcall
sti
push
xchg
mov
dec
or
cmp
fwait
push
mov
out
inc
imul
add
and
pop
jge
mov
fsts
add
pop
data16
xchg
out
mov
cmpl
inc
add
push
cmpsb
xor
ja
ror
mov
fnstenv
ss
xchg
test
setp
popa
rorb
cmp
sbb
mov
jg
fsub
fldenv
gs
fiadds
inc
js
leave
jns
mov
sbb
jne
pop
addl
jno
push
adc
shl
jmp
cld
mov
fldcw
pushw
cltd
or
xchg
sbb
mov
mov
xchg
not
cmpsb
cmpsb
negl
inc
cmpsl
jns
mov
mov
rorb
loope
jnp
stos
xchg
lahf
sub
mov
rorl
dec
pusha
imul
jbe
loopne
cltd
call
es
out
xchg
movsl
jg
test
mov
leave
push
mov
xchg
movsb
js
call
push
xchg
ja
inc
fs
cld
std
xchg
aaa
jmp
hlt
or
fs
add
or
cltd
mov
xchg
cmp
cmp
add
xchg
xor
out
arpl
inc
bswap
in
rorl
aam
sub
mov
movsb
mov
test
mov
ljmp
jnp
push
cltd
call
in
push
mov
not
in
xchg
and
rorl
push
push
pop
xor
je
or
stc
icebp
ja
fdivp
mov
jmp
xchg
dec
jbe
test
cmp
cltd
jp
xchg
je
mov
adc
or
imul
jl
inc
imul
jl
pop
dec
ljmp
adc
push
dec
fs
fdivs
jns
mov
jae
lret
das
lret
pop
xchg
orb
out
test
in
xchg
mov
or
in
adc
push
jle
jb
je
mov
mov
pop
int3
gs
es
notb
popf
addb
out
arpl
rcll
adc
inc
inc
sbb
aam
xchg
cmc
mov
or
shll
test
paddsw
and
pop
sarb
cmpsb
xchg
xchg
imul
jns
shr
xcrypt-ecb
cmpsl
mov
xor
shll
scas
sahf
out
mov
imull
or
fs
mov
ja
mov
mov
mov
xor
mov
loope
jns
pop
or
leave
or
or
imul
cmp
test
shrl
mov
dec
fsts
and
scas
mov
sbb
ja
cltd
fsubrl
xor
push
cmp
enter
push
inc
daa
mov
inc
mov
mov
jae
setbe
mov
sbbl
cltd
shrb
iret
jbe
imul
xchg
popa
ja
mov
jo
nop
ret
ret
mov
clc
sarb
out
ret
mov
les
add
xchg
in
in
xchg
shlb
or
test
ror
mov
mov
or
fistpll
adc
idivl
repz
nop
adc
jmp
je
fsubp
jle
adc
mov
cmp
cltd
rcll
es
unpcklps
push
cltd
cwtl
aad
repnz
mov
sbb
rcl
push
popf
aam
adc
push
xchg
aad
jne
sbb
popf
adc
jb
mov
mov
stos
lds
push
or
and
jns
xorb
in
dec
repz
bound
mov
cmp
pop
icebp
and
cmp
add
inc
mov
xlat
adc
and
adcb
stc
mov
fdivs
stc
dec
xorl
cmpsl
lods
push
adc
push
insb
out
inc
xlat
outsl
xchg
sbb
cs
jb
pop
testl
mov
bound
dec
call
leave
paddusb
mov
mov
iret
cmp
rcrl
jne
jne
neg
je
mov
mov
jae
clc
push
pop
mov
xchg
int3
pop
xchg
pop
sub
mov
test
jle
psubb
leave
roll
xchg
inc
icebp
jecxz
inc
sub
jbe
mov
xchg
stc
jge
in
jle
push
cmp
imul
mov
lock
fsubrp
fwait
cmp
fbld
mov
fst
adc
sub
xchg
jbe
enter
fwait
ror
pop
sti
sbb
jo
xor
clc
pand
into
clc
add
xlat
scas
outsl
or
fcoml
cltd
cltd
mov
scas
loope
mov
inc
roll
or
pop
int
xchg
testl
rorl
mov
mov
inc
or
rcrl
inc
cli
shlb
int3
xchg
ss
jge
out
scas
adcl
mov
shll
test
mov
mov
aaa
fldenv
leave
in
xor
mov
imul
mov
add
mov
xchg
idivb
or
fisubrs
xor
pop
pusha
mov
jns
hlt
subb
hlt
loope
out
test
cmp
out
pop
mov
sbb
xchg
out
jnp
mov
adc
decl
testb
nop
xlat
lds
sbbb
jmp
pop
add
mov
cltd
xorb
hlt
sbb
sbb
xchg
jge
das
pushl
jae
push
xchg
fldenv
pop
clc
cmp
mov
je,pt
js
mov
mov
loope
adcl
jae
fnsave
scas
enter
mov
inc
movsl
scas
in
sar
pop
popf
mov
js
icebp
test
fstl
aaa
cmp
out
enter
dec
mov
repz
push
xlat
fnstsw
scas
or
icebp
xlat
fldcw
fcomip
je
je
xor
mov
pop
xlat
adc
test
imul
fstps
or
add
jecxz
stc
adc
ret
jb
mov
sbb
inc
loopne
or
arpl
lahf
or
outsb
mov
dec
ret
dec
clc
mov
ret
xchg
push
insb
xchg
inc
in
jno
dec
int3
xor
fnstcw
stos
aaa
stc
std
decb
mov
jg
cmc
xchg
or
setns
or
std
mov
fcoms
mov
stc
push
ds
push
test
lahf
pop
icebp
mov
dec
mov
cld
mov
xchg
lock
dec
push
outsb
jns
jecxz
dec
sbb
sbb
push
lock
xchg
lods
jns
popa
xchg
cmp
aad
xor
js
cmp
sub
xchg
mov
jle
inc
repz
fadds
ljmp
dec
or
jecxz
mov
in
loope
mov
shl
pop
jne
lcall
icebp
ffree
arpl
adc
or
dec
and
lret
rcrb
leave
repz
fidivs
and
or
xchg
not
int
inc
and
pop
cmp
jmp
sbb
cmp
adc
push
jg
lcall
in
mov
xor
sub
and
loopne
mov
mov
enter
xor
and
cmp
mov
rorb
shrb
or
mov
aad
push
push
mov
insb
sbbl
ds
sbb
aad
push
js
adc
cmpsl
out
push
push
sbbl
dec
jno
in
cmp
jle
push
cwtl
push
lods
mov
andb
dec
xchg
cmp
add
icebp
mov
enter
out
repnz
call
mov
xor
test
or
jb
mov
pop
jno
aad
cltd
push
adc
cs
loope
fsts
cld
jp
call
rcll
add
push
push
sub
mov
xchg
mov
lahf
push
xchg
mov
xchg
stc
sarb
outsl
stos
cmp
clc
xchg
cli
jmp
or
div
inc
cmp
dec
insb
std
fiaddl
imul
fldenv
std
cltd
inc
pop
sub
jno
sub
pop
rcrb
xor
sbb
and
addr16
and
popf
data16
outsb
add
sub
sarl
fmul
sbb
neg
or
in
mov
in
pop
dec
inc
stos
pushl
xchg
sbb
cmp
mov
ret
push
inc
shr
xlat
jb
or
mov
push
shl
add
ret
inc
push
ja
mov
pop
cmp
xlat
push
mov
pop
sarl
ret
mov
or
stc
out
int
pop
mov
mov
clc
push
xlat
sbb
mov
lock
inc
pop
jo
negb
xchg
and
out
pop
adc
pop
push
cmp
in
fildl
pop
push
idivb
cwtl
movsl
add
jne
push
shll
repnz
xchg
xor
lret
jmp
xchg
push
cwtl
call
pop
fnstcw
lret
rcl
nop
js
jns
lods
xchg
and
sbb
fdivs
fdivrs
ss
leave
or
cli
xchg
iret
xchg
sub
sub
aam
xor
lds
enter
jo
cmpsl
mov
scas
add
jbe
mov
mov
pop
xchg
call
int
stos
int
or
ja
les
outsb
aaa
jo
rolb
inc
xchg
inc
outsl
mov
pop
xor
mov
cmp
jmp
repz
rcl
mov
hlt
push
rcrl
std
cmpl
bound
outsb
jl
or
sbb
loope
cld
test
mov
mov
repnz
mov
icebp
pop
fisttpll
mov
jecxz
mov
mov
mov
jl
mov
leave
into
idivb
cld
out
mov
xchg
sbbl
add
add
stc
adc
mov
neg
arpl
and
rcrl
clc
pop
xchg
popf
mov
pop
add
inc
mov
inc
jge
pusha
mov
mov
clc
icebp
push
aad
js
jns
in
cltd
add
das
movsl
cltd
push
push
ds
xchg
lock
loope
dec
not
dec
mov
cmp
mov
pop
mov
or
ss
lret
cmp
loop
test
dec
mov
push
lock
sub
imul
dec
xor
xor
cs
repz
xchg
inc
bound
or
aas
xlat
push
popf
mov
negl
pop
aad
jle
pop
add
stc
xor
push
mov
pop
test
icebp
pop
sarb
test
mov
sbb
fimull
sti
rorb
inc
xchg
inc
das
push
dec
sub
dec
fcom
mov
pop
scas
fabs
ljmp
loope
push
repz
jns
mov
rorl
cmp
jmp
fsts
movsb
inc
popf
add
ficoms
cltd
cmpsl
or
xchg
test
jmp
adc
imul
fidivl
adc
idiv
lods
mov
and
gs
clc
mov
jmp
pop
lea
adc
iret
out
jge
sahf
sub
sbb
aas
add
xor
sbb
popa
or
push
jno
call
clc
pop
cltd
movups
inc
clc
scas
shll
adc
pop
in
xor
inc
and
inc
cmp
lds
jle
std
pushf
adc
sbb
clc
movsb
push
mov
hlt
xlat
cmpsl
add
cld
or
clc
xor
and
lcall
xor
test
aad
push
aaa
scas
out
outsb
cmp
fimuls
insb
jecxz
xor
mov
mov
and
insl
popf
xchg
cmpsl
dec
dec
mov
mov
in
mov
xlat
scas
mov
adc
movsl
fldln2
clc
ja
mov
fbld
mov
fyl2x
xchg
shl
icebp
insl
xor
pop
adc
cmp
xor
mov
pop
lret
push
jno
sub
enter
stc
loope
jmp
lret
popf
sbb
clc
repz
notl
push
bound
jmp
mov
add
jno
push
mov
rcrb
test
fidivs
and
xor
jl
or
stc
int
sub
mov
lcall
sbb
test
xor
cmp
imul
hlt
dec
out
cmp
mov
clc
fdivs
jmp
popf
popf
test
leave
rcrb
mov
je
xchg
push
xchg
cmp
mov
xchg
mov
xchg
aam
cmpsb
jns
mov
and
ja
adcl
sbb
cs
mov
in
sub
jle
pop
das
sarb
pop
xchg
nop
lahf
test
lret
jae
sarl
fwait
jns
mov
xchg
repz
adc
lret
mulps
and
out
ljmp
cmpsb
mov
adc
xchg
mov
mov
nop
xchg
cmp
sbbb
out
cmp
push
sbb
leave
jns
movsl
adc
pushf
xchg
push
cltd
xchg
lea
iret
addr16
xor
icebp
lret
lds
pop
outsl
xchg
out
outsb
lock
sbb
cmp
popw
or
mov
mov
push
shlb
popf
or
je
mov
sbb
mov
and
xlat
cs
add
cltd
ror
int3
dec
push
bound
xchg
jl,pn
adc
jl
clc
dec
xor
cmp
lds
push
mov
adc
ds
lahf
mov
pop
cmc
push
stc
jbe
out
out
cmpsl
jmp
test
cmc
adc
pop
sub
xlat
jg
in
cmp
jmp
pcmpeqw
jl
outsb
push
ds
jb
xchg
mov
and
add
imul
jl
sub
cmp
addr16
dec
push
es
xchg
cmpsl
mov
stos
inc
pop
in
ret
sub
mov
cmp
cld
negb
xchg
adc
sbbb
jl
enter
xchg
leave
hlt
cmp
push
push
mov
or
jl
xor
jae
mov
xor
lock
icebp
jmp
sub
enter
push
push
imul
jb
pop
flds
aad
jg
aad
adc
pop
and
push
mov
std
popf
push
xor
adc
aad
testl
and
test
push
pop
inc
jbe
test
repz
mov
inc
adc
lret
mov
rcll
arpl
add
iret
jp
cmpsb
negl
das
mov
aad
sub
xchg
mov
aad
mov
hlt
aad
xlat
jle
mov
test
iret
std
sarl
xchg
sub
xor
insl
outsb
cmc
incl
jl
pop
and
jmp
mov
outsl
ljmp
repz
cltd
loop
mov
fcmovb
adc
nop
leave
jle
outsl
outsl
or
cmp
stc
dec
fcmovb
rcr
mov
add
mov
bound
mov
icebp
add
cmp
pop
xchg
pop
mov
mov
cltd
icebp
sub
add
std
sbbb
jns
cmp
jle
addr16
jnp
fstps
dec
xor
imul
mov
or
sahf
adc
cmp
mov
xor
cmp
pop
xor
push
into
push
push
in
xchg
xorl
test
mov
aas
bound
jle
adc
lcall
fmul
mov
std
jmp
stos
jns
aaa
xlat
icebp
cld
xchg
adc
clc
cmp
sub
pop
in
daa
stc
push
iret
rorb
repz
xor
xlat
push
adc
mov
xchg
mov
ret
inc
xchg
cltd
xor
ret
out
hlt
test
push
xchg
lea
push
mov
jo
fldcw
push
pop
dec
add
ret
negl
jp
xchg
mov
pop
lret
mov
mov
cmp
mov
sub
cltd
cli
repz
repnz
cmp
aas
push
sbb
movsl
ja
pusha
push
add
adc
cmp
add
aad
inc
xchg
mov
stc
stos
lock
lret
inc
inc
in
ja
mov
mov
stc
ret
fwait
cmpb
out
mov
or
xchg
xor
mov
stc
sbb
jb
jae
cmp
int
leave
loopne
mov
add
enter
and
add
inc
testb
ja
daa
pop
mov
mov
imul
pop
sbb
jae
push
mov
cmp
imul
popl
adcb
mov
jae
cmp
cmc
movsl
inc
out
or
sbb
repz
mov
cmp
sbb
sti
mov
out
pop
push
mov
lahf
mov
out
cmpsb
mov
xor
jbe
fidivl
repz
out
in
pop
jae
push
lea
xlat
outsb
rcrl
xor
adc
sbb
mov
imul
cmpsb
xchg
aad
lahf
repnz
sub
insb
dec
call
pop
icebp
add
xor
xor
int3
mov
xchg
pop
lds
inc
inc
inc
jne
xchg
pop
cmp
or
adc
fsubrl
mov
dec
pusha
xchg
rcll
add
or
fsubs
jge
mov
xchg
repz
jmp
jmp
sub
xchg
add
in
xor
xchg
mov
lods
and
sbb
cltd
jns
les
lock
imul
adc
pop
pop
ret
out
flds
in
shrb
lcall
dec
jle
or
sub
and
cltd
push
int
and
mov
mov
repnz
aas
push
shlb
push
mov
xchg
rcll
outsl
mov
xchg
inc
xor
aaa
push
aaa
and
test
repnz
jns
aaa
aaa
je
jns
aaa
ss
js
push
jmp
ror
ss
mov
hlt
adc
stos
dec
mov
rcrb
cltd
fsts
mov
ror
cmp
mov
mov
xchg
cmp
jle
sub
jbe
rcrb
fistps
loope
dec
jae
xor
daa
iret
shll
je
cltd
das
icebp
xor
shll
dec
cmc
push
aam
and
cltd
testl
scas
adc
cltd
xor
xor
add
int
sub
repz
sbb
xchg
mov
xchg
push
push
leave
sub
lahf
rcl
mov
mov
call
addr16
push
fcomip
mov
hlt
lahf
outsl
decb
or
xchg
out
scas
adc
mov
push
pop
or
int3
cmc
ret
enter
mov
rcrl
mov
push
hlt
mov
jns
jb
enter
in
adc
add
dec
jne
adc
pop
ljmp
adc
sahf
mov
add
aad
xchg
js
xor
mov
stc
push
mov
xchg
jg
aam
sbb
xchg
mov
test
push
push
mov
jae
mov
mov
shl
out
lock
mull
or
iret
ss
xchg
cltd
sbb
xchg
adc
repz
push
ds
pop
subb
out
push
jbe
or
aas
add
cltd
filds
push
lret
pop
test
shrb
sbb
mov
inc
or
push
test
out
and
mov
push
roll
or
push
rcrl
call
cwtl
sarb
mov
add
repz
xlat
pusha
pop
cmp
sub
jno
xchg
or
clc
lea
rep
or
xchg
cmp
cltd
aaa
sbb
loop
cmp
inc
inc
fnstsw
add
inc
and
push
fcoml
push
xchg
mov
inc
shrl
ffreep
hlt
test
dec
cmp
cmp
hlt
gs
xchg
popf
add
andb
xchg
repz
xor
in
mov
adc
or
cmp
movsl
out
repz
xchg
sbb
inc
push
cmc
call
mov
sbb
mov
popf
add
repz
inc
mov
sbb
or
push
pop
lret
lahf
fprem
int
sub
fdiv
pop
lret
add
cmp
mov
pop
test
not
pop
cmp
stos
xor
jle
mov
push
cmpl
jno
ds
sbb
mov
enter
inc
nop
push
xchg
mov
pop
push
cmpsb
imul
xchg
movsb
jns
mov
xor
scas
stc
sarb
test
mov
or
out
fcoml
pop
dec
ret
aad
pushf
lock
fstpt
das
dec
mov
ljmp
dec
shlb
repz
xor
cltd
stc
push
add
dec
adc
pop
ljmp
xor
pop
or
in
xchg
shl
pop
sbb
popa
push
nop
push
in
dec
repnz
jl
sbbl
push
xchg
lret
lods
sub
inc
mov
jo
shlb
imul
in
xchg
add
and
ljmp
cmc
adc
adc
addb
push
sar
jae
pop
dec
cltd
sarl
jge
rclb
push
sub
xlat
adc
or
into
or
push
jns
adc
cs
shrb
inc
in
jno
jns
mov
repnz
pop
invd
jg
add
loopne
dec
inc
jl
scas
sbb
stc
clc
xlat
popa
out
repz
jg
or
sbb
sbb
sbb
sub
xchg
enter
mov
sarb
dec
xchg
fsubp
push
jae
loopne
jae
cmp
sbb
push
insl
les
lods
dec
shl
xchg
and
jbe
and
roll
mov
in
jb
shrl
add
in
mov
fidivrl
addr16
pop
mov
add
rol
push
and
hlt
xchg
xlat
dec
out
jns
popf
mov
cltd
hlt
scas
pop
cmpsb
fsqrt
leave
inc
xchg
outsl
cld
cmp
outsl
sbb
leave
mov
je
inc
xchg
xor
xchg
lea
cltd
aad
sbb
push
aad
leave
jge
test
push
jb
mov
sub
sbb
pop
pop
jl
xchg
adc
inc
dec
idiv
cs
idivb
ret
push
insl
fnsave
repz
jb
pop
idivl
pop
repnz
rclb
arpl
mov
aas
rorb
adc
iret
push
and
cwtl
pop
imul
sub
push
shll
and
iret
repz
xchg
xchg
rorl
add
xchg
dec
push
imul
or
mov
push
xor
test
stc
ret
cmp
jno
sbb
xor
ret
stc
sarb
bound
popf
bnd
mov
pop
or
ficompl
fiadds
out
push
and
pop
jae
and
cmc
or
test
or
fdivrp
pop
inc
pop
push
mov
negb
subl
lret
add
clc
xor
xlat
loope
leave
cld
add
std
xchg
hlt
call
enter
dec
add
cmp
jns
mov
cmp
pop
aaa
mov
shrl
push
or
std
cltd
push
or
xchg
mov
cmc
not
in
icebp
mov
js
adc
xchg
aad
mov
mov
jge
or
jb
xor
inc
or
xchg
sbb
jge
enter
adc
xor
and
pushf
xorb
jbe
cmc
negl
ficoml
sbb
sub
cmp
xchg
or
mov
pushf
pop
xor
inc
mov
dec
repnz
aad
daa
jae
sbb
or
ficoml
rclb
sbb
add
push
into
and
fyl2x
das
add
arpl
mov
xchg
jns
xchg
cmc
test
mov
add
cmc
cmp
das
ror
divb
inc
js
leave
test
cltd
iret
sub
push
out
adc
dec
add
jmp
jecxz
lret
cmp
repnz
push
ss
test
repnz
enter
mov
sbb
outsl
loope
sbb
rcr
mov
push
mov
add
inc
mov
adc
mov
sbb
bnd
add
es
pop
push
and
inc
cmc
push
sub
sbb
or
jo
mov
rol
lods
and
lret
cmp
xchg
cld
mov
divb
fists
pop
int3
test
jge
sbb
jl
aad
push
aad
icebp
or
adc
mov
cmp
add
or
lods
xchg
clc
adc
fidivrl
add
cmpsl
xorl
xchg
add
add
ret
and
arpl
icebp
in
rcrl
cmp
cmp
lahf
lods
pop
mov
neg
cmp
in
jl
testl
or
mov
mov
sbb
mov
push
xor
push
xor
or
dec
int
or
jecxz
fstpl
dec
mov
les
ljmp
pop
inc
add
adc
ja
jl
clc
fs
jo
scas
shl
adc
orl
jge
inc
push
cmpsb
mov
inc
or
sub
cmc
popf
inc
cmpsl
cmp
fdivl
push
pushf
rolb
sbb
ret
pop
sub
rolb
inc
jne
dec
adc
adc
cmp
fwait
adc
aad
pop
jne
jbe
add
aad
pop
mov
loopne
imul
sbb
psubq
lret
jnp
xchg
std
dec
push
out
xchg
sub
mov
add
mov
es
xor
pop
test
or
pop
decb
shrl
or
mov
out
lcall
fisttpll
add
mov
add
xchg
sbb
pop
xor
sbb
idiv
jg
pop
push
push
pcmpgtw
rolb
cwtl
and
out
js
fildll
xchg
adc
shl
aad
imul
not
xorl
xchg
pop
add
push
jp,pt
mov
testb
mov
sbb
and
sbb
lret
jno
std
popa
mov
pop
pop
inc
or
mul
adc
clc
cmc
adcb
push
andl
xchg
sbb
stos
call
xchg
addl
pop
call
xchg
shll
or
stc
add
or
pop
xchg
loopne
sbb
test
sbb
mov
loopne
mov
rolb
jns
std
aam
inc
test
adc
cmp
xor
inc
sbb
arpl
repz
rcll
outsl
jge
jb
cli
pop
mov
leave
repnz
add
fnstcw
in
add
flds
flds
bound
xchg
adc
in
in
out
ds
adc
negl
jp
addl
xchg
jp
mov
fdivr
nop
adc
popa
imul
push
xchg
mov
pop
inc
icebp
inc
cmp
add
adc
cltd
filds
adc
xchg
adc
push
std
cltd
mov
rcll
jmp
xchg
inc
pop
lock
fwait
pop
pop
stc
xchg
loope
cwtl
mov
pop
or
pop
jns
push
test
pushf
pop
xor
add
sahf
pop
cltd
hlt
je
push
pop
adc
xchg
sar
call
pop
pop
jbe
or
adc
divl
or
gs
xchg
pop
adc
aam
pop
test
mov
sbb
jns
cwtl
xchg
fistpl
add
bnd
xchg
pop
xlat
nop
test
call
cmp
add
jns
addr16
ja
pop
adc
rep
pop
or
cltd
leave
aad
lahf
mov
mov
out
adc
enter
ficompl
mov
or
imul
cmc
and
mov
mov
aas
or
mov
in
pop
cmc
out
adc
or
add
cltd
testl
das
pop
inc
add
jns
out
mov
aas
xor
mov
dec
hlt
or
stos
pushf
pop
or
inc
cmc
or
inc
fmul
cmc
or
mov
imul
enter
popa
imul
cwtl
xchg
and
or
mov
test
aas
xchg
fnstcw
idivb
negl
vpunpckhdq
mov
jno
fsts
stc
mull
jmp
lret
repz
xchg
inc
pop
push
lret
jae
pop
loope
xlat
or
stos
pop
std
adc
jge
pop
aad
idiv
push
push
lods
mov
or
repz
fstps
jge
adc
xchg
leave
iret
lds
mov
jbe
mov
dec
jns
mov
xchg
add
ret
movsl
clc
xor
lahf
stc
flds
rcr
cmpsl
fwait
iret
mov
sbb
push
push
pop
add
add
aad
test
add
add
iret
inc
adc
jns
adc
pop
scas
pop
pop
flds
xchg
pushf
xchg
pop
rcl
pop
push
aas
inc
mov
or
adc
jno
jns
addl
fmul
jns
imul
adc
std
xchg
rcl
lahf
mov
jmp
jno
insl
xlat
push
sti
mov
pop
cs
shll
aas
js
jno
pop
fwait
aas
adc
imull
or
lds
sarb
mov
push
and
mov
mov
clc
loope
dec
div
or
jno
arpl
or
adc
idivl
xchg
test
testl
sub
jno
push
hlt
pop
sub
loope
mov
pop
shll
cmc
xchg
lahf
inc
aas
pop
arpl
add
mov
pop
adc
ret
nop
mov
in
and
add
push
aad
dec
cld
jno
pop
mov
orb
pusha
aaa
sahf
nop
xchg
pushf
gs
jo
fildl
and
mov
xchg
dec
and
add
cmc
xchg
jb
jg
dec
rcrl
cmp
adc
or
shlb
mov
repz
negl
mov
ds
pushf
std
xchg
leave
aad
sahf
or
add
or
rorb
pop
jmp
ja
add
rorl
xor
xchg
sub
daa
stos
pop
in
jae
mov
stc
pushl
fcoms
mov
ret
jge
fildl
dec
adc
jmp
add
dec
or
pop
dec
xchg
lcall
mov
jg
xchg
leave
cmc
and
mov
add
inc
jno
lahf
ret
hlt
dec
lahf
ds
jns
addl
mov
popa
mov
add
and
fwait
mov
leave
push
test
fwait
push
mov
mov
in
mov
movl
cmp
mov
ljmp
push
clc
xchg
fadd
mov
mov
fmuls
std
jno
add
lock
cmp
shrb
mov
dec
push
imul
add
push
aas
inc
add
mov
out
lret
loop
stos
in
rcl
lahf
add
adc
mov
jge
dec
adc
add
xchg
inc
enter
idivl
lods
mov
rcll
adc
cmp
jge
add
ror
mov
mov
inc
inc
add
xchg
mov
sarb
mov
repz
jecxz
mov
mov
shr
pushl
mov
imul
mov
mov
dec
shll
gs
cmc
movsb
dec
add
jge
add
rcll
cltd
sti
add
aad
mov
or
jge
pop
xchg
dec
aad
xchg
sub
dec
repz
jne
or
fwait
inc
mov
movsl
cmc
jge
xchg
cmc
xchg
sbb
into
je
sbb
ja
lahf
lds
push
dec
repnz
pop
mov
test
std
push
cmp
mov
dec
lock
dec
aad
lahf
cmp
add
xchg
in
int
shlb
push
mov
shll
or
repz
add
and
mov
test
or
mov
dec
push
iret
mov
mov
push
dec
testl
lds
and
pop
arpl
out
or
clc
sbb
dec
mov
shl
fistps
mov
dec
loop
sub
pop
add
imul
test
xor
inc
mov
pop
dec
testl
ficoml
int3
jno
scas
lock
lret
je
mov
push
lret
gs
fwait
mov
pop
push
jg
pop
aad
in
xor
xchg
test
pop
lock
pop
push
std
add
sbb
in
std
jp
mov
imul
adc
or
or
sbb
cmp
xchg
ret
js
cld
cmp
jae
cmp
push
pop
rcr
mov
pop
insb
lahf
in
cmp
or
leave
divl
div
sub
cltd
xlat
test
cltd
cmp
in
xchg
mov
in
cmp
sti
mov
fdivrl
add
in
mov
xor
aad
pop
rcr
jg
cltd
cmc
lea
push
in
cmp
add
loope
xor
adc
mov
adc
and
push
sub
js
dec
gs
inc
cmpsl
xchg
cmc
insb
es
pop
cmp
movsb
cmp
fsubs
fdivr
jmp
out
mov
fnstenv
scas
cmp
push
cwtl
jmp
push
in
push
pop
arpl
push
inc
push
aam
insl
pushf
sub
and
xor
ss
xchg
lods
fucomp
cli
sbb
fsts
jno
xlat
sarl
pop
out
pop
rol
cmp
pop
scas
imul
pusha
vorpd
mov
aaa
sbb
pop
rclb
jae
aad
cmpsl
jl
shll
stos
jmp
pop
fstpl
nop
push
and
mov
pop
sub
sbb
inc
outsb
sar
cmc
cmp
adc
shlb
cmpsb
or
and
pop
mov
dec
mov
mov
mov
sbb
dec
fwait
iret
fadds
rcll
fiadds
movsb
pop
push
or
adc
inc
fucomp
hlt
add
out
jns
fldenv
mov
aam
int3
and
cmc
cltd
xor
mov
adcl
mov
mov
add
or
and
add
or
outsl
xor
jecxz,pt
pop
rcr
push
jne
add
xchg
jge
jmp
fxch
mov
leave
stos
mov
aad
lods
xchg
push
out
fcomip
lea
cmp
in
xor
mov
jnp
xor
push
out
or
inc
into
cmpsb
aaa
rcrl
and
cmp
add
faddl
push
out
xchg
cmpl
fsts
push
sbb
xchg
rcll
mov
push
sub
lret
push
fistl
sub
pushf
xor
xlat
in
or
sub
dec
jno
lahf
movsb
rcr
add
xchg
div
lds
mov
mov
adc
shrb
arpl
inc
xchg
dec
pop
mov
push
mov
sbb
xlat
add
lods
push
fistpll
imul
es
daa
add
outsl
div
idivb
and
ret
dec
out
jg
addr16
out
aas
adc
lret
cmp
push
call
mov
push
mov
add
adc
out
xlat
mov
mov
sub
subb
stos
adc
insl
mov
xchg
nop
push
jae
push
lds
jbe
inc
xchg
cs
add
sbb
cltd
testb
lahf
mov
jle
iret
or
and
stc
repz
ja
imul
addr16
mov
adc
das
cli
pushf
push
dec
xor
cmpsl
adc
addl
test
mov
push
push
sbb
outsl
and
mov
mov
jns
leave
mov
fs
xorl
jno
adc
repnz
jle
jg
bound
cmc
les
ds
div
orb
arpl
pop
fstpt
popfw
and
add
sub
jns
sar
jecxz
dec
mov
lods
daa
inc
aas
std
jecxz
xor
adc
addr16
sub
dec
sub
add
push
dec
push
fstpl
sbb
adc
out
fiaddl
sub
popa
hlt
push
stos
jb
sti
push
je
add
das
cli
fchs
jbe
sbb
test
and
push
jg
cwtl
sub
roll
addr16
test
sbb
or
pop
test
xchg
inc
enter
enter
or
decb
leave
adc
push
mov
adc
enter
xlat
test
cmpsl
dec
insb
sub
xchg
push
sahf
mov
push
jns
xchg
pop
aaa
mov
pop
xchg
rol
cmc
pop
push
lods
dec
cmp
jge
xchg
fistpll
cli
ds
jns
shrl
xchg
pop
shrb
jecxz,pn
jge
scas
loopne
loope
aad
aad
pop
push
fld
pushf
rcrl
stc
mov
add
push
cmp
pop
mov
sub
jb
jge
mov
mov
cltd
cmp
je
daa
jnp
push
filds
mov
cs
adc
out
fisttpl
out
ficoms
leave
sbb
cmp
test
fcomps
xchg
pop
push
loopne
lea
mov
mov
outsl
pushf
jl
enter
mov
ror
outsl
xchg
js
shlb
lahf
mov
adc
lds
aad
mov
je
mull
mov
adc
xlat
pop
cmpsb
pop
mov
mov
stc
pop
pusha
cltd
adc
mov
fistpl
pop
lock
or
pop
jne
cld
add
adc
pop
inc
mov
test
les
or
stos
push
adc
jl
ret
leave
inc
lock
mov
ficomps
out
and
adc
dec
std
push
dec
cmp
mov
xchg
int3
pop
inc
add
sahf
ds
mov
lret
inc
sbb
jno,pt
fstps
sub
add
xchg
jmp
sbb
stc
and
and
xlat
fimull
mov
xchg
sub
test
mov
aad
inc
inc
ss
scas
out
mov
popf
inc
out
xor
push
nop
jns
jno
dec
out
xor
adc
stos
adc
shl
je
adc
jne
jno
or
stc
push
add
xor
fnstcw
sbb
xchg
aad
fwait
sbb
pop
not
sbb
xor
lock
push
push
xchg
mov
mov
jae
or
jle
out
aad
cmpsl
pushf
aad
arpl
dec
jecxz
repnz
loopne
repz
sbb
lret
std
test
xchg
and
jle
jns
xchg
fmul
adc
aas
int
push
pop
cmp
inc
mov
pop
add
adc
and
sub
iret
xor
aas
nop
out
sbb
mov
inc
jae
pushl
in
orl
aam
ret
pop
ljmp
push
js
or
aam
mov
mov
or
jne
enter
push
fnstenv
jo
inc
sub
mov
cmc
jmp
repnz
sbb
cmp
sti
sbb
jns
out
adc
jl
inc
lods
mov
xlat
jnp
add
mov
aas
push
ljmp
shl
sub
or
mov
idiv
imul
ljmp
icebp
pop
movsb
sbb
fildl
leave
push
ret
cmp
shlb
xchg
push
je
adc
adc
dec
ljmp
insb
lahf
mov
popf
fldenv
testl
pop
mov
clc
hlt
xlat
jecxz
rolb
sarl
scas
fisttpll
fucom
push
sbb
xlat
pop
inc
adc
push
repnz
div
pop
add
push
aas
jbe
xlat
or
xlat
js
jae
ja
mov
xorb
repnz
mov
fsts
jns
addr16
mov
test
push
adc
or
nop
sbb
pop
mov
fcmovnb
push
iret
stc
testl
pop
push
inc
mov
mov
cltd
in
xchg
aaa
inc
aad
es
stc
cwtl
iret
pop
inc
adc
fsts
pop
inc
push
repz
cltd
jbe
out
and
push
xchg
pop
cltd
sbb
rclb
lret
cli
sbb
xchg
push
in
push
push
push
or
or
xor
adc
fnstenv
sbb
fisubrl
stos
div
xchg
jae
jb
push
fidivrl
add
iret
push
fcomp
or
int3
or
or
cmc
or
pop
fprem
es
lods
fdivr
or
out
lock
aas
ljmp
dec
add
call
imul
mov
sbb
lds
or
bound
mov
pop
in
or
fldenv
jne
orb
xchg
or
cli
test
or
stc
outsb
jb
mov
lret
xchg
xchg
jle
stc
and
filds
dec
or
scas
mov
out
xlat
lds
mov
bound
push
cmc
mov
xchg
outsl
jb
mov
adc
mov
jl
add
fistpl
sbb
cmpsl
add
cmp
push
cmp
jns
dec
push
inc
pop
hlt
mov
das
js
std
pop
mov
pop
jns
gs
push
cld
outsl
xchg
dec
rcrb
fsqrt
lods
and
pop
in
dec
ja
sbb
mov
mov
cld
movsb
fcmovne
leave
pop
arpl
dec
aaa
add
cmp
arpl
leave
rorl
ds
test
jg
xchg
add
dec
je
imul
add
rcl
xchg
lods
adc
xchg
lds
pop
jg
out
andl
insl
js
test
ja
add
imul
dec
addb
daa
or
vmovsldup
mov
inc
aad
leave
test
sub
push
es
jle
mov
pushf
sbb
inc
mov
aas
push
mov
push
faddl
xlat
loopne
test
xor
or
xlat
repz
loopne
test
jno
ja
xlat
test
ja
push
jle
test
pop
repz
loopne
test
xor
sub
jbe
in
add
out
aas
fdivrs
cli
mov
adc
dec
test
jo
clc
adc
pop
pop
push
cmpsl
hlt
test
xor
xor
xchg
add
jbe
mov
xchg
pop
aad
inc
dec
lea
push
jno
mov
negb
xchg
test
test
mov
jbe
leave
pop
in
jmp
and
cmp
adc
cmp
xor
sbb
fnstsw
dec
test
push
xchg
jae
jge
xchg
push
or
or
mov
cmpsl
sbb
aas
out
cmc
shlb
sub
pop
adc
mov
aad
or
roll
push
sbb
pop
push
cli
jbe
mov
push
jecxz
mov
mov
jle
loope
leave
jecxz
sbb
js
sbb
mov
notl
dec
jb
push
insl
es
xor
inc
add
imul
pop
pop
xchg
cmp
loopne
xchg
mov
adc
ss
shll
scas
sahf
gs
jge
rcr
or
sbb
insl
testl
clc
inc
negl
push
pop
inc
cltd
cmp
add
jle
outsb
and
ss
aas
mov
movsb
enter
sbb
dec
shlb
lcall
ror
ds
jns
icebp
cmpsl
sub
jno
sbb
std
imulb
rol
xchg
ja
ds
test
ror
outsb
nop
inc
imul
out
ss
xor
rcl
jns
ss
cs
sub
adc
jae
aaa
sub
roll
xor
jae
jge
inc
jl
dec
sbb
dec
clc
push
fsts
repnz
nop
stos
mov
int3
mov
xchg
cmc
pushf
push
pop
adc
imul
loope
jns
bswap
sub
add
mov
adc
adc
leave
shll
sbb
fidivs
pop
mov
xchg
cmp
adc
orb
inc
push
stc
loope,pn
imull
sub
mov
xchg
orb
shlb
xor
jge
xor
out
cmpsb
insb
jae
in
sbb
push
shll
sub
aaa
aas
push
insb
imul
add
cwtl
add
es
fnstsw
or
push
shlb
rclb
icebp
hlt
sub
sub
mov
ss
add
mov
jmp
enter
or
or
mov
ret
sbb
sbb
js
cmp
stc
mov
lret
cli
mov
shll
cmp
fsts
xchg
mov
or
mov
cwtl
add
dec
cltd
dec
imul
fyl2x
lret
cwtl
mov
mov
push
inc
jnp
mov
enter
xor
js
sbb
inc
icebp
or
adc
adc
and
lret
sub
mov
inc
or
jns,pt
or
xlat
cmp
sbb
test
and
mov
lret
in
xor
rcr
jmp
ljmp
cmpsl
dec
add
mov
daa
add
adc
aas
in
inc
ss
inc
mov
xchg
mov
jae
into
xchg
xchg
imul
inc
clc
imul
add
xchg
pop
lock
loop
mov
aam
movsb
mov
adc
stos
bound
fcmovnb
jmp
xchg
xchg
cmp
mov
xor
arpl
jge
add
rorl
mov
add
pop
sahf
jo
repnz
mov
dec
shrb
sub
ss
iret
ss
dec
mov
rcrb
adc
out
pusha
xor
add
and
icebp
int
enter
clc
mov
cli
cs
jecxz
jno,pt
adc
jg
sarb
aam
fldl
mov
sbb
fcmovu
xlat
popf
out
sbb
cmc
test
in
popa
xlat
out
mov
pusha
jg
mov
outsb
mov
jle
mov
mov
dec
sbb
add
pop
xor
int3
adc
daa
and
adc
dec
pop
pop
or
lds
pop
dec
and
fcoms
or
xlat
ds
mov
push
xchg
rorl
mov
inc
sub
xlat
jnp
lods
lret
aad
inc
jb
pop
xchg
or
cmc
mov
lock
mov
sbb
test
imul
in
out
dec
je
cld
lahf
jne
inc
mov
cmc
sti
dec
sbb
jmp
mov
and
mov
mov
scas
aam
or
ss
ds
cmp
rolb
mov
xchg
sbb
sub
int3
add
sbb
scas
test
test
add
popf
push
popa
outsb
aaa
xchg
dec
out
popa
jg
jno
sbb
mov
jbe
add
in
xchg
add
inc
in
mov
loop
iret
or
pop
jae
xor
fisttpl
repz
aad
hlt
gs
xor
dec
clc
lods
aad
sti
and
or
xchg
icebp
daa
xchg
push
stc
and
dec
in
rorl
xchg
in
mov
xchg
stos
or
sti
mov
mov
pop
xchg
jp
rcrb
insl
mov
rcrb
ficomps
pop
fdivl
mov
pop
fcoml
lock
push
add
cwtl
orl
lret
mov
fadds
push
add
sbb
mov
fstpl
cld
cmc
cmp
fcmovnb
sbb
cli
int
inc
pop
cmc
sub
xchg
jg
mov
dec
mov
movsb
out
xlat
das
mov
divb
je
int
inc
sahf
test
adc
xor
mov
push
in
cmc
push
xlat
lea
jbe
test
sbb
popf
jl
xchg
mov
jecxz
insl
es
fnstsw
mov
stc
mov
pop
add
jnp
lahf
jns
and
repz
mov
rorl
push
pop
dec
mov
mov
clc
fcmovb
sbb
movsl
xchg
movsl
test
sub
iret
push
arpl
jg
aad
jecxz
je
dec
fstpt
add
out
adc
pop
lods
push
lret
mov
push
les
xor
push
add
xchg
xchg
push
push
fstps
stos
imul
add
adc
inc
divl
pop
bound
gs
xor
push
outsb
mov
xor
adc
pop
rclb
aad
les
add
or
call
or
clc
jmp
adc
int3
push
add
outsl
in
adc
addr16
push
into
xchg
mov
aad
jmp
ss
add
mov
jmp
orl
fnstsw
jb
test
out
mov
aas
jno
inc
jno
ds
aad
fcomip
enter
ja
push
leave
lock
xchg
int
scas
shlb
lds
stos
mull
aad
sbb
sub
add
out
mov
testb
push
or
popa
lods
in
xchg
shlb
add
mov
and
sub
clc
mov
adcl
sub
jle
aaa
jp
test
and
cmp
mov
lock
aam
fnstsw
imul
cmc
into
adc
daa
lret
or
imul
cwtl
rorb
add
repnz
mov
jge
pop
mov
pop
dec
push
xchg
sub
nop
push
hlt
pop
cltd
cld
cltd
or
loopne
daa
jnp
aad
div
add
bound
cltd
cltd
ds
push
push
pop
add
mov
or
fcos
push
inc
and
cmp
push
add
rcrl
fsts
vmovlpd
push
xchg
mov
push
sub
xor
cmp
xor
jecxz
subl
inc
adc
out
loope
add
add
inc
lea
sub
shlb
in
sbb
scas
xchg
rcl
fdivrl
push
rcll
rcll
lahf
push
ret
insl
jge
lock
enter
adc
or
mov
pop
mov
pop
and
in
add
pop
push
lds
jns
cmc
push
lea
lahf
aad
clc
ds
es
push
jle
arpl
push
hlt
mov
mov
xchg
inc
cmp
push
sub
stc
mov
mov
lock
mov
loopne
ss
imul
inc
adc
mov
pop
xchg
jmp
enter
mov
jle
hlt
xor
add
and
pop
fsubr
sbb
pop
out
test
les
cmpsl
and
shlb
push
sbb
movlps
and
mov
adc
adc
fbstp
pop
push
scas
mov
xchg
xchg
stos
add
arpl
cld
push
test
push
inc
es
lds
and
addl
call
int3
xor
hlt
cld
orps
fisttpll
js
leave
cmp
add
pop
and
in
adc
add
mov
frstor
mov
jg
fisttpl
jbe
lods
fists
add
and
daa
pusha
notl
int3
aam
pushf
jecxz
xchg
mov
or
cmp
shrb
add
arpl
aaa
or
pop
nop
push
nop
mov
jg
loope
ret
add
in
mov
icebp
or
dec
jne
popa
cld
cmp
xor
mov
cld
adc
mov
mov
push
ss
aam
cld
inc
cmc
add
loopne
jne
insl
cmp
adc
cld
test
xchg
cmp
in
sbb
xchg
div
into
iret
pop
pop
inc
jno
mov
es
push
xchg
nop
out
jo
nop
movsb
mov
cs
inc
pop
mov
push
pop
clc
jne
jne
ljmp
fisubs
xchg
gs
loop
in
aad
adc
test
cmp
out
or
scas
push
add
mov
pop
xlat
lea
inc
scas
jb
mov
pop
lret
jns
xchg
pushf
adc
mov
jp
bound
xchg
mov
loopne
lahf
dec
cltd
nop
fcmovnb
cmp
test
enter
mov
push
xor
xchg
jb
adc
sbb
inc
mov
pushl
jg
das
cmp
push
fsubrl
repz
pushf
push
mov
das
xchg
fstps
test
insl
and
andl
test
jnp
stc
out
test
inc
nop
xchg
sarl
xor
xchg
movsb
or
xor
cld
xor
or
pop
sub
mov
test
lret
and
xor
jae
lret
inc
dec
cltd
ret
popa
mov
jb
mov
push
mov
xchg
ror
xchg
xchg
mov
inc
test
pop
mov
add
xchg
xchg
fisttps
setno
ror
stos
or
popf
mov
hlt
lret
sub
cmp
jecxz
jnp
movsl
inc
sbb
pushf
in
bound
mov
push
jae
test
insl
adc
xlat
inc
syscall
and
cld
fmuls
sub
aad
idiv
xchg
or
insl
jns
adc
cli
xor
aad
insl
or
adc
jae
jecxz
lea
iret
add
testb
into
cmp
call
xchg
dec
test
int
gs
insb
vsqrtss
loop
xor
or
test
sti
leave
push
int
jno
adc
imul
fdiv
pusha
es
pop
out
enter
xchg
lods
loope
xchg
outsb
adc
jle
fists
leave
dec
pop
sub
add
and
adc
outsl
dec
jne
repz
iret
repz
lahf
movsl
out
into
movsl
sbb
call
loopne
sbb
repnz
xchg
sbb
mov
cmpsl
xchg
out
cld
clc
negl
in
loopne
ss
cmp
repz
test
hlt
jmp
jb
int
rclb
or
cwtl
push
fwait
outsb
inc
enter
mov
test
cmp
xchg
adc
mov
shll
lock
out
push
xchg
adc
test
adc
sarb
pop
in
test
jns
in
fstpl
adc
pop
out
hlt
push
shl
inc
mov
cs
pop
cmp
sub
dec
lock
movsb
in
push
cmp
inc
into
mov
pop
int3
jecxz
mov
jle
sub
fnstenv
ficomps
mov
frstor
pushf
push
mov
cltd
mov
leave
jecxz
icebp
mov
aad
sub
cmp
mov
xchg
and
incl
mov
mov
pop
xlat
mov
cltd
mov
cld
jno
adc
mov
mov
cs
mov
dec
adc
cmp
xchg
testl
shlb
test
aam
and
sarl
repnz
inc
jle
jo
pushf
enter
lcall
insb
and
adc
popa
lret
push
clc
loopne
cwtl
testb
pushf
rcrb
outsl
sbb
push
mov
in
js
ja
push
js
jbe
aad
pop
cld
jnp
sbb
and
xor
mov
arpl
fs
jo
mov
roll
xchg
jp
or
pop
pushf
imul
out
push
mov
xchg
jmp
and
jo
add
pop
lock
iret
and
mov
add
fldcw
mov
jp
nop
lds
out
or
loop
insl
adc
xchg
push
fcomps
into
add
out
outsl
test
add
inc
or
lock
cmp
sti
jae
fwait
inc
and
shll
xchg
and
shll
rcrb
loopne
mov
pop
dec
pop
enter
push
ds
cmp
movsl
xchg
lds
add
mov
cmpsl
ds
xchg
adc
xor
shlb
subb
dec
sbb
or
pop
jecxz
sbb
pop
insb
lcall
push
mov
filds
or
fldcw
xor
pop
out
mov
xchg
mov
rcr
in
popf
xchg
fbld
rcll
mov
mov
aam
loopne
xchg
or
jae
jecxz
lahf
bound
pop
stc
mov
mov
test
jl
and
jle
lret
sbb
in
arpl
push
pop
cmp
idiv
ja
mov
or
js
add
add
sbb
cmp
iret
es
jg
rcl
mov
xchg
cmp
ficoms
mov
iret
jmp
inc
add
lock
scas
jp
and
pop
scas
add
shr
ds
jle
jl
add
call
mov
xchg
pop
out
jno
jmp
imul
jno
add
outsl
add
sti
ret
stc
call
fucom
outsb
inc
push
jp
test
xchg
ds
dec
cltd
lret
outsl
adc
lcall
xchg
mov
cmp
jb
cwtl
mov
cmp
pop
call
imul
xor
test
loop
push
sub
rcrb
fnstsw
jo
mov
adc
shll
adc
xchg
aaa
xchg
and
ret
loop
jae
rcr
loopne
fldpi
clc
lahf
inc
push
dec
jno
shll
imul
mov
addr16
jp
sar
aas
and
jle
test
push
lcall
imul
clc
rcr
jle
mov
js
mov
cmp
jo
lret
scas
dec
xchg
fstps
xlat
jns
push
in
test
cwtl
mov
push
cmpsb
rcrl
mov
dec
test
adc
arpl
ds
pop
fs
or
ret
je
imul
push
fistps
push
shl
jg,pn
pop
ror
pusha
jle
inc
and
mov
mov
mov
imul
addb
xchg
cltd
pop
mov
xchg
mov
push
rcrb
or
test
lods
popf
stos
mov
addr16
repnz
gs
pop
in
jbe
xlat
adc
bound
lret
int
aam
mov
imul
inc
es
cmp
mov
pop
push
sub
shll
divl
dec
mov
imul
push
inc
fs
mov
xchg
adc
xor
shrb
out
inc
outsl
mov
lea
inc
fdivs
adc
int
mov
add
jne
cld
test
lea
insb
mov
inc
lret
xchg
enter
push
roll
mov
jae
out
cltd
jge
xchg
cwtl
cs
inc
hlt
loop
call
out
adc
aad
sti
xchg
pusha
movsl
ror
sub
jns
inc
and
xchg
loope
stc
pop
inc
jle
std
jp
popa
xor
cli
roll
mov
mov
inc
fdivr
popa
ficoms
gs
mov
xchg
dec
push
jo
inc
push
insb
mov
add
shll
stos
jl
call
es
cs
dec
int3
mov
rol
lea
rcr
out
clc
push
movsl
pop
fisubrs
cmp
out
aas
add
or
dec
mov
dec
adc
vmovmskpd
mov
pop
xchg
rcrl
mov
orl
int
jbe
push
pop
mov
jb
cmpb
das
inc
aam
jb
or
mov
iret
sbb
sbb
arpl
lds
sbb
lret
outsl
pop
sti
pop
imul
gs
jle
xchg
mov
int
lcall
xchg
cwtl
adc
daa
jecxz
shll
dec
stos
sti
mov
mov
fisubrl
pop
mov
mov
mov
push
pop
sbb
mov
ror
dec
or
push
fildll
mov
sub
jecxz
inc
xchg
out
das
mov
dec
out
jno
jle
ficoms
sub
push
dec
test
lahf
jne
mov
shll
adc
vaddsd
xor
testl
pop
xchg
jbe
adc
dec
adc
sub
negb
and
mov
filds
jmp
xlat
sar
or
inc
mov
cmp
add
arpl
push
sbb
add
mov
rolb
dec
ds
pop
fs
sbb
push
cs
loopne
inc
fsts
mov
push
mov
mov
fadd
outsl
pop
cs
mov
lods
lods
or
daa
aaa
adcl
decl
test
pop
push
cmp
clc
push
xorb
frstor
dec
pop
stc
ja
iret
sub
lret
jle
sub
jge
push
jl
jb
push
inc
stc
xchg
dec
jle
stc
das
mov
mov
ret
xlat
cs
data16
scas
fidivl
jmp
add
movsl
mov
jg
inc
or
es
jnp
pop
imul
addr16
fld
xchg
jno
pop
jl
jl
mov
jle
fcmovnbe
adc
lret
arpl
inc
aas
mov
xor
jb
adc
push
push
xor
loop
scas
movsl
lock
sub
shrl
clc
cmp
mov
cmp
mov
mov
adc
shl
xor
adc
mov
cmpsl
imul
or
fisubl
mov
sar
bound
mov
fldl
add
dec
jmp
rcr
jbe
mov
notb
leave
rcr
xor
mov
lds
outsb
jmp
xor
jno
mov
jg
cmp
cwtl
iret
push
inc
cwtl
cwtl
xchg
leave
push
mov
test
test
insl
rol
push
movsl
mov
mov
lds
add
ror
cmp
lcall
push
xchg
rcr
xchg
and
xchg
shll
push
adc
cltd
lds
icebp
fs
bound
test
mov
lahf
lret
jae
pusha
cmp
fisubs
testl
xchg
cli
int
ret
dec
insl
divl
test
mov
jno
add
leave
sub
mov
aaa
neg
js
lret
and
and
addb
adc
jle
sbb
negl
adc
lret
div
adc
jecxz
mov
cltd
adc
sub
or
pop
adc
adc
sarl
ds
imul
lret
jg
jns
sbb
cmp
jnp
xchg
fsubrp
leave
testb
in
rolb
sub
imul
xor
fstps
push
int
lret
mov
inc
xlat
sub
jo
ja
aad
dec
std
incl
xor
dec
pop
inc
add
jbe
ss
fst
adc
lret
and
test
insl
jp
js
rcrl
and
xlat
fcoml
add
iret
inc
in
jns
inc
and
lahf
jns
rclb
popf
cmp
jecxz
or
mulb
mov
repnz
iret
push
addb
fcomp
jne
push
rcl
in
fdivp
insl
fildll
ja
adc
xchg
ds
push
clc
or
lods
mov
fbld
outsl
mov
fs
cmp
adcl
cmc
ja
lods
dec
adc
lahf
ja
push
fdiv
insl
pop
lds
mov
pushf
pop
test
lahf
arpl
outsl
test
rol
mov
xchg
sub
push
mov
fsubrs
fst
fwait
aad
jle
sbb
enter
rcrl
mov
or
gs
sub
dec
bound
mov
jle
test
dec
aad
xlat
xchg
ja
lahf
add
lret
or
lret
mov
mov
lahf
test
fidivl
pusha
repnz
add
push
lods
test
inc
jae
and
scas
ret
pop
fcom
hlt
dec
iret
lahf
clc
aad
cmc
mov
mov
cs
call
or
jns
xor
push
mov
add
push
rolb
adc
sbb
mov
push
ficoms
mov
mov
je
xor
scas
jae
mov
dec
add
xlat
push
mov
and
sbb
sub
sub
fistpll
fcoms
fstpl
test
rcpps
sarb
sub
shll
push
out
dec
or
movsl
hlt
dec
stos
int
test
arpl
xchg
dec
mov
sub
jg
inc
jae
or
aas
fnstenv
mov
inc
pop
mov
mov
fldt
rcpps
mov
or
cmp
xchg
and
pop
mov
scas
out
push
jnp
je
fs
lds
dec
or
sarl
push
imul
jns
lret
repz
push
aad
ss
sti
push
repnz
inc
test
rcl
fstps
add
rcl
pop
pop
adc
cmp
mov
fdiv
or
sub
mov
push
repz
cltd
push
pushf
add
sbb
jb
stc
push
clc
jnp
fsubrs
adc
push
aaa
cltd
xchg
js
xorb
jbe
pop
sbb
in
push
insb
notl
push
fsts
cmp
xchg
adc
shll
mov
xchg
push
pop
xchg
pop
xchg
cmp
cwtl
popf
pop
repz
stc
cli
mov
roll
jns
cmc
sbb
cs
xchg
decb
mov
lock
cmp
out
outsb
pop
cmp
into
xchg
shr
clc
mov
jno
lret
rclb
rclb
xchg
stc
fiaddl
pop
repz
xchg
loopne
in
pop
shl
pushl
dec
fldl
fisttps
cwtl
mov
push
neg
add
mov
fdivrs
rcl
pop
mov
iret
out
test
cmc
add
imul
mov
mov
fldcw
jnp
push
fdivrs
out
andnps
cltd
fnstenv
fdivs
xor
aam
xchg
repz
pop
push
push
scas
repnz
mov
fnstcw
adc
cltd
xchg
add
and
adc
mov
adc
cltd
adcb
rcl
xor
jne
nop
mov
lods
cwtl
pop
push
xchg
aad
adc
adcb
adc
push
jbe
rcll
pop
mov
mov
hlt
rcll
xlat
xchg
pop
stc
frstor
fcmovnbe
test
inc
test
push
mov
mov
stos
rcrb
pop
push
pop
mov
lcall
or
push
divl
mov
push
inc
out
pop
xchg
rcrl
xor
divl
repz
xor
js
inc
sbb
out
mov
mov
hlt
jne
jns
loope
xor
sub
xor
mov
cmp
pop
testb
aas
adc
xchg
clc
shr
hlt
std
xor
fcomps
shll
ja
pop
add
push
stc
add
stos
lea
sbb
xor
ret
aad
xor
jge
stos
aaa
xchg
out
jmp
xchg
jnp
ret
sarb
dec
fisttps
shl
divl
test
jno
jp
xchg
xchg
xchg
loope
jno
jb
aam
lea
leave
mov
xor
je
out
shll
and
cmp
and
jne
sbb
push
cmp
sub
xor
sbb
in
push
das
push
add
fcoms
adc
push
shrl
add
std
negl
inc
pop
xchg
inc
mov
xchg
mov
and
adc
cld
sub
scas
js
mov
push
fisttps
mov
fsts
adc
pop
jge
cwtl
int
out
xlat
jp
cld
arpl
out
fiadds
idiv
aam
call
ja
sbb
testl
pop
xchg
hlt
inc
push
fmuls
push
repnz
stc
loope
pusha
push
cmp
shr
adc
pop
icebp
adc
mov
ret
aam
popf
jbe
push
pop
imull
push
imul
pop
pop
repz
aad
ja
rcrl
popa
push
ret
stos
call
push
scas
js
pop
add
fbld
pop
out
fcompl
jbe
mov
sbb
fs
adc
or
stc
mov
data16
pop
dec
jns
idivl
cmpsb
aaa
hlt
push
dec
popa
xlat
inc
stc
icebp
inc
cmc
mov
jmp
idivl
pop
lea
cli
cmp
add
xchg
ret
xor
scas
roll
xor
cmpsl
jmp
cmp
jl
pop
icebp
mov
pop
out
sahf
mov
addr16
xchg
fistps
xor
divb
fstpl
dec
mov
sbb
fwait
add
clc
rcrb
fdivrs
add
xchg
xchg
jae
gs
xor
dec
xchg
fldl
fnstcw
sbb
add
or
mov
idiv
addb
mov
pusha
fistpll
cltd
sbb
push
pop
icebp
push
jle
pop
or
push
sbb
mov
adc
adc
lds
mov
movl
cmp
mov
mov
xchg
stos
pop
sbb
sub
stc
pop
out
xchg
mov
inc
stc
xchg
popf
mov
add
lock
insb
cs
jns
hlt
lods
andl
call
dec
aas
clc
mov
pop
push
stc
mov
faddl
cmpsl
and
int3
popf
lahf
hlt
fnstenv
lcall
ss
fbstp
cli
rcr
ljmp
inc
popa
inc
dec
xor
enter
mov
xchg
inc
clc
shlb
sbb
or
call
fstpt
leave
mov
out
push
ret
mov
sti
popl
outsb
idiv
clc
sbb
push
pop
ss
xor
repz
push
mov
out
adc
dec
pop
popf
fnsave
xchg
ja
dec
mov
cmp
lahf
xorl
nop
cmp
clc
outsl
xor
mov
mov
das
lea
xchg
mov
ljmp
mov
in
iret
enter
js
sahf
neg
xchg
lret
dec
pop
fnsave
xlat
cmp
lea
dec
xchg
xchg
add
dec
mov
sbb
divb
aas
xchg
pushf
adc
lahf
outsb
fiadds
pusha
xchg
lock
hlt
adc
jl
inc
pop
push
movsl
sub
movsl
cmpsl
and
dec
xchg
push
cmc
mov
mov
dec
xor
dec
jmp
adc
ja
lock
fnstsw
int
jp
gs
xchg
div
push
in
push
loop
cmp
std
call
xlat
lahf
pop
xor
lahf
jg
mov
and
add
testl
cltd
add
lret
stc
adc
mov
negb
add
mov
mov
cmpsb
xchg
add
mov
fldz
outsl
cmp
movl
sbb
dec
clc
mov
sbbl
mov
xor
fnstenv
cmpsb
int
mov
imul
stos
mov
xchg
iret
or
fimull
out
leave
xchg
xchg
aam
sbb
aad
fiadds
jge
fsts
in
or
xchg
fisubl
adc
cmpsl
mov
sub
mov
sahf
push
div
scas
sbb
clc
pop
int
ss
std
js
or
popf
mov
push
loope
pop
push
or
popa
xlat
pop
fistps
xchg
push
ficomps
jbe
mov
ror
pop
sub
ret
fists
jbe
xor
movsb
test
or
fisubl
pop
mov
loope
jg
mul
pop
notl
mov
scas
leave
out
mov
or
lods
andl
out
mov
mov
popf
in
xor
call
sub
xchg
dec
leave
or
sub
and
adc
clc
fwait
sub
das
adc
xchg
push
xor
mov
xchg
lcall
call
mov
inc
adc
cmc
sti
out
adc
insl
xorb
fmuls
imul
xchg
cmp
inc
sub
jmp
pop
inc
clc
dec
xchg
jecxz
aas
call
pushf
fiadds
mov
push
inc
das
xor
sbb
jnp
leave
mov
sub
inc
mov
cmp
mov
sbb
lcall
imul
in
pop
cmp
push
xchg
rol
sbb
dec
repz
out
pop
dec
push
mov
ja
jns
mov
enter
mov
ja
add
shrl
ja
dec
daa
jns
xchg
inc
push
jbe
adc
idivl
daa
pop
xchg
aaa
sarl
bound
pushf
push
xchg
jns
or
jne
out
ja
xor
test
sarb
pop
movsb
lock
mov
rorb
jns
adc
cmc
notl
mov
pop
or
mov
pop
ror
mov
xor
adc
test
es
sti
leave
xchg
shl
int
fisttpll
je
pop
ss
insb
mov
cltd
fstps
fstps
cmp
imul
outsl
push
and
std
pop
movsb
pop
push
in
mov
shlb
into
pushf
ss
repnz
sti
scas
aas
adc
aaa
rcrl
clc
int3
push
and
sbb
push
xchg
xorb
mov
stc
push
cmpsl
and
test
sti
in
sti
inc
lods
fs
xor
stc
movsl
mov
ficompl
outsl
pop
sub
mov
push
cltd
inc
ret
call
xchg
leave
test
clc
push
xchg
mov
popf
js
cmp
cmp
pop
cmp
sub
mov
xchg
mov
ds
pop
rcrb
xor
xchg
pop
adc
repnz
cltd
movsl
inc
es
insb
ss
in
gs
cmpsl
ret
sbb
adc
hlt
mov
push
push
jae
inc
dec
mov
sbb
fmul
add
cs
mov
or
sarb
jmp
inc
or
ds
les
aam
lea
mov
inc
imul
push
shlb
lock
popa
leave
shl
clc
jns
in
or
or
xchg
stc
popf
aad
cltd
rolb
lea
movsl
aas
pop
es
ja
call
dec
mov
cmpsl
xchg
cli
cmc
scas
lock
sbb
add
jge
or
pop
cltd
int
push
xchg
shrb
stos
push
loope
add
or
push
jmp
scas
push
ljmp
stc
insb
inc
xlat
sbb
mov
sahf
sbb
out
fmul
cmp
xchg
xchg
push
adcl
faddl
push
jno
in
push
adc
inc
sub
xor
jge
gs
int
inc
lcall
cmc
push
pop
movsb
mov
add
sbb
cmp
lret
out
and
lods
jne
cltd
mov
jno
fnsave
inc
enter
cmpsb
insb
inc
shl
xchg
pop
cmp
push
inc
testb
fmull
push
xor
push
loope
mov
xchg
neg
rcrl
xorb
ja
pop
adc
repz
and
neg
pop
mov
rcll
sbb
xchg
push
ret
xchg
cmp
cmc
mov
adc
loope
shll
xchg
jbe
sarb
aaa
loopne
xor
mov
push
lret
icebp
jle
jl
push
dec
xlat
xchg
insb
add
mov
push
adc
add
sub
xchg
cld
pop
inc
inc
jmp
fimuls
jne
ret
sbb
xchg
sti
pop
mov
fsub
cmpsb
push
cmp
jns
ljmp
mov
and
int3
xlat
xchg
mov
inc
sub
mov
idivb
xor
mov
mov
lret
arpl
ja
popa
or
mov
and
pop
fcomi
inc
es
xlat
outsl
ja
scas
mov
mov
mov
xchg
fadds
int3
push
mov
in
loopne
cltd
or
gs
xchg
adc
es
push
push
insl
sub
cmc
pop
jb
fnsave
sbb
int
ret
add
inc
lahf
jb
push
scas
add
pop
in
push
jle
inc
in
enter
sub
shl
jmp
xor
fcoms
xor
imul
sub
jb
push
pop
enter
sbb
dec
sbb
jns
rcl
pop
les
jae
adc
push
es
mov
cwtl
dec
mov
ficompl
mov
rcl
adc
push
insl
cmp
lods
add
test
mov
add
cmp
test
ljmp
sbb
mov
cwtl
mov
ror
out
das
adc
lahf
mov
popf
pop
lds
sar
dec
xchg
in
sub
fadds
mov
rcrl
lds
mov
rcrb
cmp
push
xchg
jbe
adc
stc
xchg
push
outsb
adc
push
sub
mov
mov
add
out
push
dec
xor
outsb
aad
mov
in
pop
jecxz
test
and
cltd
lret
lcall
arpl
push
xlat
cmpsl
jb
dec
mov
rorb
lds
in
sub
mov
lret
adc
sub
xchg
mov
xlat
mov
push
fwait
and
push
fbld
out
mov
jle
jne
pop
add
xchg
cmp
stos
mov
and
pop
cmp
push
cwtl
xorb
xor
pop
jb
push
clc
cmpsl
sbbl
dec
push
pop
insl
out
arpl
fsubrs
mov
insb
rcrb
mov
sub
or
jmp
repz
xlat
sub
loope
cmpsl
adc
or
out
adc
jo
dec
aad
xchg
insb
repnz
jg
jno
lods
cs
ret
aas
push
sar
pop
and
xchg
mov
sub
sbb
push
in
out
sbb
out
ret
sbb
rorb
nop
popf
loopne
iret
lret
mov
aaa
loop
jns
jo
out
mov
pop
lahf
shl
lods
add
or
nop
sub
idivb
shr
xlat
mov
mov
xchg
pop
sti
jno
fwait
adc
mov
mov
in
mov
mov
mov
jns
jbe
hlt
lret
xchg
sarb
test
jg
addr16
xchg
movsb
out
sbb
out
les
or
rcll
push
in
mov
addr16
push
iret
jno
xchg
jl
pop
or
xor
movsb
xchg
jns
inc
add
or
aam
ret
sbb
pop
xchg
or
dec
push
sti
mov
and
cmp
mov
push
inc
sbb
cmp
pop
mov
jge
jne
jl
jns,pt
lods
shl
mov
jbe
insl
ror
xchg
filds
sbb
push
or
movsb
aad
xchg
test
sbb
out
mov
jne
into
sbb
sbb
xor
stos
imul
rol
repnz
mov
add
outsl
stos
rcll
xlat
mov
ja
add
xlat
xchg
sbb
popa
ficompl
adc
in
ret
push
iret
adc
and
adc
cmp
pusha
mov
ret
iret
xchg
fcomps
rorb
insl
push
mov
daa
fisubl
js
outsl
pusha
cmp
ss
adc
rcr
jb
popf
fldt
jle
loope
inc
mov
xor
push
mov
dec
pop
mov
test
xchg
adc
inc
dec
sbb
adc
stc
adc
fst
pop
pop
outsl
or
xlat
in
roll
or
mov
pop
stos
rol
pop
cmpb
fucomp
cwtl
lret
dec
jmp
pop
push
lods
iret
pop
pushf
xor
scas
movb
lret
mov
cmp
jae
insl
loop
popa
jbe
cmpsl
push
sbb
addr16
mov
rcl
divl
sbb
and
movups
push
cmp
ret
xorl
sub
jle
ficoml
xchg
fdivrp
sub
fst
mov
loopne
sub
fwait
lds
dec
pop
stos
add
inc
iret
sbb
or
inc
js
xor
pop
inc
lds
mov
aaa
je
xchg
adc
push
mov
loope
add
cmc
inc
push
push
fadds
push
inc
aad
fadds
fdivs
cmp
lcall
dec
iret
lock
fisttpl
push
scas
xchg
xchg
xlat
pop
xchg
fistpl
outsl
out
xchg
mov
mov
xchg
in
lahf
mov
andl
dec
or
outsl
xor
add
xchg
outsl
and
jg
xor
std
rol
xchg
mov
mov
dec
sbb
mov
sbb
repz
lods
cmp
mov
daa
jbe
das
push
xlat
jmp
stc
and
or
shrb
jns
lret
dec
push
adc
jbe
xchg
popa
aad
mov
ret
and
in
out
lock
and
inc
mov
cmp
fldl
test
mov
xor
dec
jge
jno
or
push
xlat
xchg
sbb
cld
fistl
ror
fistl
sub
addr16
add
xchg
xchg
int
cmp
hlt
je
fstpt
pop
je
shll
jg
push
out
jno
je
or
mov
push
jecxz
mov
pop
leave
test
or
sbb
mov
daa
push
mov
push
or
xchg
mov
jae
lahf
xchg
cmp
adc
fnstcw
call
and
and
sub
jmp
or
cmp
aas
call
lret
aas
sub
add
call
lods
insl
and
fnstcw
call
rol
or
mov
cmp
pop
mov
adc
or
jb
movl
sbb
sub
push
aad
cli
dec
call
cld
rcr
scas
jno
push
add
add
dec
push
mov
xchg
scas
push
xchg
mov
fwait
and
xchg
mov
push
popf
cli
mov
call
push
jg
cmpsb
addr16
cmp
jg
fwait
call
dec
call
inc
cmp
push
jge
call
rcll
xchg
fstps
cmp
jns
cmp
add
sub
shlb
xchg
je
or
jg
and
cmp
incb
sbb
call
lret
inc
outsl
push
xchg
fcom
mov
pop
hlt
push
xchg
adc
bound
jne
push
cwtl
dec
lret
push
add
rcll
sbb
add
fwait
push
xlat
cmp
inc
pop
mov
ret
add
xlat
push
jno
push
add
call
dec
test
lds
stc
cmp
pop
sti
jg
call
and
rorl
shrl
push
call
push
je
pop
mov
lahf
ret
mov
inc
das
sub
dec
mov
lods
push
mov
sub
or
ja
dec
pop
outsb
mov
fdiv
pop
jns
lock
imul
mov
sbb
jns
and
xor
inc
ljmp
out
out
shl
dec
xchg
cltd
xor
ljmp
fsubr
std
stc
xchg
rcrb
icebp
lock
out
js
imul
sbb
xchg
stos
loope
and
mov
xchg
leave
fisubrl
jle
popf
add
rorb
ret
mov
jmp
mov
pop
inc
inc
je
fsubrl
mov
mov
inc
jge
outsl
jae
jecxz
lcall
and
pop
or
adc
les
sub
cltd
movl
xor
pushf
and
jmp
div
movl
decl
jb
mov
mov
idiv
add
popa
jmp
push
push
sub
sbb
in
popf
shl
jle
or
cmp
or
daa
sbb
out
xchg
pop
out
cmc
das
gs
pop
or
test
les
rol
lods
test
adc
add
adc
dec
stc
test
xor
xor
push
lret
inc
inc
std
arpl
xchg
sbb
addr16
pop
push
mov
in
add
sbbl
je
mov
or
dec
inc
jl
adc
add
mov
dec
rcll
repz
push
sub
mov
lret
dec
mov
cmp
jg
cmpsl
cltd
fsubrs
mov
adc
mov
jmp
inc
mov
popf
lods
mov
add
adc
push
pop
lods
std
inc
in
adc
inc
xchg
cmp
fldl
outsl
ret
mov
push
testl
mul
pop
xor
or
pop
mov
dec
ja
xor
rol
popf
stos
nop
lds
sub
in
popf
repnz
xor
mov
notl
mov
add
or
lcall
mov
mov
or
lods
fldenv
push
popf
mov
je
insl
das
aad
pop
lahf
jg
xor
addr16
push
repnz
in
mov
test
add
and
pop
adc
clc
pop
add
mov
mov
adc
scas
jp
add
adc
inc
stc
scas
add
mov
lret
or
adc
arpl
test
movsb
mov
mov
cmpsl
fdivl
xor
out
pop
stc
in
pop
outsb
pop
mov
jle
std
cmc
pop
adc
mov
jge,pn
cmp
jmp
mov
rcll
aas
inc
cmp
pop
pop
xchg
lods
pushf
inc
dec
adc
mov
es
std
mov
sub
push
cs
fdivrs
sbb
call
je
sarb
ficompl
pop
xor
dec
enter
cmc
pop
lret
or
stc
das
mov
pop
mov
pop
jno
push
mov
std
xchg
orb
jns
sub
ficoml
mov
in
dec
mov
push
push
jl
jge
push
into
sub
adc
ja
push
inc
incl
xchg
js
std
pop
shll
mov
or
xchg
jb
mulb
fsubr
and
push
cmp
movsl
out
ret
popf
mov
mov
push
xchg
cmp
mov
sahf
shrl
push
xchg
inc
cmp
out
xor
cmp
adc
sbb
add
or
out
repz
popf
jecxz
jmp
roll
lret
movsl
out
mov
mov
repnz
xchg
out
je
jl
shrl
xchg
cmp
xor
cmp
and
sub
adc
cmp
cld
popf
in
in
repnz
fcoml
cmp
movsl
divl
leave
cmpsl
ja
mov
call
scas
fistps
clc
inc
in
xchg
push
mov
leave
push
xchg
sub
pop
out
int
shr
int
out
into
cmp
faddp
pop
or
jne
shlb
sbb
jae
outsl
jae
push
fnsave
xlat
aam
xor
adc
mov
xchg
clc
hlt
xlat
aad
xor
push
fnsave
xlat
popf
or
divl
fnsave
xlat
xlat
popf
aaa
or
divl
fnsave
xlat
fcomps
js
fnstsw
xlat
fstps
adcl
or
not
xor
adc
fnsave
push
clc
mov
xchg
popf
repnz
pushl
mov
popf
mov
xchg
div
aam
xor
adc
popf
mov
xchg
div
aad
xor
xlat
push
popf
mov
xchg
div
fnsave
mov
clc
jbe
push
popf
mov
xchg
div
xlat
fnsave
mov
clc
ja
pop
popf
mov
cwtl
div
fcomp
cmp
pop
popf
mov
cmp
popf
jns
sbb
fstl
divl
sub
adc
mov
mov
clc
xor
adc
jae
push
divl
aam
xor
adc
xchg
jae
push
stc
mov
push
cwtl
xchg
scas
rcrb
repnz
add
and
or
lahf
xchg
cli
jnp
pop
stc
xchg
mov
sbbb
in
pop
adc
add
cmc
jns
or
stc
nop
clc
nop
fnstenv
pop
test
scas
dec
repz
aas
pushl
cmp
mov
jns
out
std
aad
sub
rcl
cmp
hlt
xchg
cmp
mov
adc
inc
mov
cs
js
jbe
xchg
push
fiaddl
mov
jns
out
cwtl
arpl
mov
inc
and
adc
shl
out
jecxz
push
cltd
into
adc
es
repz
or
cmpsb
cmc
arpl
mov
jne
nop
mov
fnstenv
xchg
mov
push
repz
fld
fstps
dec
fstps
adcl
js
jbe
aad
repnz
push
mov
rcll
notl
mov
stc
jae
cmp
push
aad
lock
push
jb
adc
repz
pushf
rcrl
jbe
stc
mov
leave
xor
jne
mov
push
aad
adc
or
jb
mov
fcom
divl
sar
mov
cmp
ja
mov
cmc
clc
xor
or
ja
xor
popf
pop
or
mov
daa
fsts
pop
test
test
lock
rcll
cltd
jns
cltd
mov
cmpb
popa
mov
jae
iret
ds
push
divl
xchg
inc
repnz
adc
test
and
mov
xor
or
mov
es
jp
jnp
or
or
cltd
shll
push
dec
add
in
xlat
ss
inc
repnz
sbb
fdivs
dec
and
add
movsl
xor
hlt
mov
mov
mov
cmpsb
xchg
mov
scas
mov
mov
leave
or
data16
fwait
cmpsb
mov
test
insb
scas
insl
push
mov
or
jl
add
add
enter
push
icebp
adcl
call
fcomps
xchg
call
leave
xchg
mov
out
adc
mov
cmp
and
mov
aam
fst
sub
sbb
jb
cmc
lret
popf
aad
lret
mov
cmp
xor
out
mov
arpl
xchg
sbbb
clc
push
jle
jge
lock
push
pop
dec
push
fwait
sbb
mov
pop
inc
inc
iret
mov
cld
sub
mov
jbe
xor
testl
shll
sub
dec
pop
dec
stos
shll
aas
cltd
sbb
cmp
daa
cltd
in
loop
add
mov
push
jns
popf
sub
clc
cmpsb
add
std
adc
shl
lahf
stos
and
lock
sub
mov
jg
sub
adc
mov
push
ja
shl
xlat
sbb
in
fidivl
mov
sub
cmp
cs
add
call
fsubs
lcall
inc
cmp
adc
jae
lcall
cli
mov
sub
popa
jecxz
shrl
mov
cmp
add
push
loopne
lret
mov
mov
sbbb
pop
mov
dec
icebp
shrb
scas
aam
mov
sbb
daa
add
xlat
adc
lret
test
inc
fsubr
mov
pop
hlt
sub
mov
push
cmp
pop
adc
xchg
push
fstl
shrb
shr
xchg
and
mov
pop
ja
sbb
je
rcll
mov
lock
mov
push
repnz
fstpt
in
clc
mov
fbstp
xorb
movsl
repnz
pusha
pop
movsl
xchg
fcoml
push
ss
out
ret
pop
call
and
inc
adc
add
fnstsw
cltd
adc
jns
cmp
dec
mov
repz
add
rcrb
jg
sub
das
sub
mov
pop
and
dec
jo
push
out
xchg
sub
jo
sbb
iret
adc
inc
jo
or
testl
push
or
arpl
jb
xor
stc
es
shll
push
shll
clc
and
stc
jne
clc
rcrl
idivl
int3
adc
fnstenv
or
leave
add
push
ss
fildll
or
xchg
das
movl
iret
sub
lahf
das
mov
cmp
repnz
scas
mov
mov
cs
das
mov
andb
inc
pop
xchg
fldcw
fwait
sbb
xchg
mov
jge
mov
pop
adc
leave
rorl
pop
xchg
test
aad
aas
cltd
addr16
adc
or
pop
std
pop
inc
leave
das
or
popf
xchg
jbe
xchg
aaa
push
push
int
ss
std
lcall
sahf
aad
xlat
pop
pop
or
mov
aam
or
std
cld
mov
pop
xchg
push
arpl
mov
shll
pop
std
pop
cmovno
out
mov
adc
je
or
jmp
xchg
repz
sub
xchg
xchg
cmp
pop
je
xorl
negb
xchg
shlb
xor
fidivrl
dec
xchg
popf
push
loope
popa
xchg
lock
and
ja
add
fucomip
pop
stc
lcall
mov
dec
adc
das
sbb
aas
jmp
cmp
aaa
shlb
or
add
xchg
cmp
out
mov
and
pop
adc
int
xlat
or
in
push
inc
aam
add
call
call
push
lea
or
mov
lahf
jnp
sbb
xorb
test
push
xchg
int
jle
sub
ss
in
lahf
inc
pop
jns
mov
aad
jbe
jno
fisttpl
dec
out
xor
pop
push
fidivrl
cmpsb
pop
cld
xchg
jg
inc
fisubl
sub
sbb
or
cli
mov
int
jmp
mov
les
xchg
idivl
mov
clc
pop
in
rcrb
ret
fwait
jns
aad
pushf
sub
push
in
xor
sub
dec
cltd
mov
push
enter
or
push
inc
adc
stos
push
pop
jns
and
jno
mov
or
mov
push
pop
xchg
fldenv
push
fs
stc
cmpl
out
cwtl
sbb
or
push
inc
fstps
jle
xchg
mov
jecxz
sarl
mov
aaa
pop
lret
jnp
outsb
dec
jo
call
xor
lds
xor
cld
addr16
push
add
sbb
push
add
xchg
cmp
ljmp
jg
xor
xlat
mov
xor
xor
push
rcr
imul
in
clc
dec
jl
xchg
push
cltd
fstpt
stc
sbb
sub
dec
mov
repnz
daa
clc
push
mov
adc
and
mov
jns
popf
sbb
jecxz
or
cmp
leave
push
outsl
addb
sbb
xchg
fmul
or
fs
test
popf
mov
fwait
xlat
jno
jmp
push
cltd
jmp
mov
jns
aaa
lcall
mov
cmc
cmp
fcoms
or
adc
add
loope
mov
negl
pop
lds
mov
cwtl
fnstsw
push
fstpl
clc
lds
push
fdivs
jg
sub
fld1
xor
and
ja
scas
mov
add
test
loopne
jp
imul
push
clc
fstl
rol
mov
mov
sbb
clc
sarl
leave
mov
xchg
movsl
adc
lods
dec
mov
xor
jns
insb
pop
movl
divl
jae
lret
pushf
cli
mov
popa
out
enter
adc
xchg
mov
fnstenv
inc
sbb
lcall
mov
aaa
mov
cmp
xlat
mov
dec
push
cmc
insl
aas
lods
mov
or
sub
pop
and
and
xor
mov
fwait
pop
fwait
xchg
or
add
test
sbbb
gs
cld
int
js
fnstsw
mov
xchg
bound
test
mov
push
dec
xchg
clc
lods
icebp
int3
push
repnz
jb
nop
out
mov
xorl
inc
mov
dec
inc
sbb
inc
cmc
dec
mov
jecxz
adc
imul
mov
sub
enter
mov
sbb
mov
test
sbb
mov
adc
xchg
fldcw
ljmp
inc
sbb
adc
dec
xchg
push
outsb
fnstenv
lock
jbe
adcl
sar
dec
sub
filds
pop
and
push
xchg
and
xchg
ds
cmpsb
inc
adc
cltd
es
hlt
incl
push
fst
flds
daa
insl
outsl
inc
jne
mov
rolb
dec
add
jl
jecxz
ss
add
cltd
push
inc
dec
push
xchg
or
push
jp
mov
and
add
and
jae
popf
out
into
int
lret
nop
lret
not
lds
ja
movsl
js
dec
sbb
test
clc
xor
mov
cmp
dec
inc
adc
cmpl
add
push
cmc
mov
arpl
clc
pop
or
test
xchg
mov
mov
sub
xchg
rorb
push
dec
push
ss
movsb
testb
test
out
adc
adc
int3
fdivs
scas
repz
fsubrl
push
xchg
cmp
sbb
fnstcw
mov
stc
andl
popf
xchg
nop
sub
bound
adc
out
jmp
rolb
xchg
movsl
jg
enter
outsb
mov
xor
out
or
aad
push
sbb
jecxz
pop
loopne
pop
push
add
jb
xor
loopne
fisubrl
rolb
or
addb
add
and
nop
xchg
sub
test
imul
jae
cmp
xchg
add
mov
pop
push
jl
mov
push
pushl
xchg
insl
fcomip
mov
cltd
xchg
or
adc
scas
in
neg
rcr
call
mov
mov
sbb
pusha
cmc
mov
fidivrl
fcoml
cmp
jae
ds
push
add
sbb
mov
jns
mov
mov
ficomps
add
fdiv
xor
mov
in
jne
ret
mov
add
shrl
jmp
clc
ds
sbb
mov
cmc
es
fnsave
pop
xchg
pop
js
push
test
cltd
mov
xor
cmp
icebp
arpl
xchg
lcall
mov
push
cmc
sub
idivb
rcl
in
push
mov
xchg
jb
adc
xor
push
rorb
xchg
mov
popa
pop
jb
mov
lahf
xchg
xlat
loop
rcr
mov
sbb
ret
insl
div
xor
shl
mov
test
andb
popa
xchg
movl
nop
add
pop
sar
in
jmp
xor
pop
popa
xchg
enter
imul
or
mov
push
mov
mov
xor
imull
mov
roll
xor
xor
xchg
das
cmp
sub
pop
subl
rcrl
stc
pop
lds
xchg
mov
mov
push
std
fldcw
or
std
jge
adc
push
or
cmp
sub
enter
lret
pop
fcomps
push
js
push
cltd
sbb
inc
mov
or
mov
pop
xchg
mov
jns
or
divl
mov
jge
aad
pop
ja
push
ja
jo
lds
xor
pop
pop
int
incl
mov
imul
pop
adc
sarl
mov
push
ss
aas
and
dec
adc
out
lret
sbb
icebp
mov
xor
push
in
dec
bound
shlb
push
pop
sub
imul
mov
inc
pop
pop
mov
out
mov
test
lcall
int
outsb
shlb
xor
rorl
mov
xchg
add
addr16
adc
mov
je
add
or
pushf
out
push
rcr
push
gs
push
sbb
daa
or
ss
pop
or
lods
cmp
popa
rorl
mov
or
nop
shrl
shlb
sub
lods
mov
jne
mov
inc
imul
mov
adc
scas
xchg
hlt
xor
mov
push
insb
test
and
inc
push
int3
movsb
sbb
shrb
add
xchg
xchg
lcall
xchg
test
mov
xor
pop
test
mov
aam
jns
adc
cltd
xchg
sub
enter
sub
movsl
ja
jns
in
xor
movsb
mov
or
movl
test
adc
inc
xchg
sbb
jbe
jecxz
push
stc
xchg
adc
ja
testb
mov
and
or
sbb
fistpl
add
mov
jbe
test
mov
cwtl
aad
add
dec
pop
add
xor
xlat
shll
mov
cwtl
movsl
lcall
rcrl
jno
test
repz
movsl
lcall
pop
repz
lods
xchg
adc
inc
sbb
cltd
inc
loop
jg
mov
out
mov
push
mov
sub
adcl
push
clc
outsb
mov
cwtl
inc
aas
sbb
pop
sbb
pop
ljmp
test
xor
rolb
pop
sbb
jns
mov
xor
push
int3
cltd
aaa
repz
inc
jbe
push
std
call
cmc
clc
fcmove
cmc
pop
out
and
xchg
in
cltd
add
mov
xchg
jnp
jge
fs
call
cmp
or
cmp
out
xchg
std
cmp
mov
mov
mov
cltd
aaa
mov
inc
bnd
mov
sbb
std
inc
mov
xor
mov
enter
adc
inc
dec
cmp
js
lds
add
bound
cli
out
out
xlat
rcr
das
popf
adc
pop
cmp
rolb
or
sub
xorl
aaa
push
push
push
fsts
or
and
add
fnstenv
dec
int3
lahf
xor
mov
xor
inc
dec
shlb
lahf
xchg
dec
jbe
pop
push
add
mov
leave
push
scas
dec
push
jp
or
repz
rcrb
push
adc
out
neg
mov
fsubr
adc
jns
flds
push
mov
mov
decb
mov
jb
adc
loope
jae
ficomps
iret
pop
cli
push
iret
lret
or
mov
scas
jns
pop
out
and
or
dec
sbb
out
decb
stc
and
sbb
jle
xchg
mov
sbb
add
cmp
adc
leave
mov
fidivrs
sub
push
xor
aaa
sbb
fucom
xor
cltd
mov
pop
xchg
adc
icebp
leave
outsl
fidivs
lahf
rcll
test
test
cmp
mov
cmpsb
in
insl
arpl
cld
mov
pop
mov
filds
in
dec
or
xlat
push
inc
push
pop
pop
iret
mov
inc
lock
mov
and
mov
fcoms
mov
jno
lret
notb
sbb
movsl
cwtl
sahf
xchg
imulb
into
movsb
loopne
shrl
cltd
jge
into
pop
xor
mov
or
cmpsb
out
movsl
cmp
xlat
imul
pop
sbb
negl
rcrb
xor
into
test
add
xchg
out
xor
imul
or
xor
ja
pop
or
shlb
in
sahf
or
pop
push
into
int
push
imulb
rclb
outsb
lds
inc
fsts
in
xchg
shll
jne
push
cwtl
mov
jl
aaa
jne
mov
cltd
mov
add
mov
scas
jbe
add
aam
call
pop
sbbb
adc
push
pop
add
xor
adc
push
mov
sarl
cli
rcl
add
xchg
cwtl
pop
jge
xor
out
dec
xchg
jb
mov
adc
out
pushaw
mov
out
rcr
clc
popf
js
mov
sub
roll
mov
jmp
icebp
dec
dec
push
mov
fistps
xchg
rcl
xlat
stc
push
mov
pop
repz
xor
cmc
fstl
outsb
sub
xchg
adc
jno
sti
rcll
addr16
or
mov
xchg
adc
call
ret
jne
rcr
out
std
push
mov
jne
adc
out
std
pop
push
out
rcrl
mov
mov
int
dec
xchg
loopne
gs
mov
add
je
pop
aam
fnstenv
xlat
mov
orl
sub
sbb
pause
fcomps
shll
lret
push
cmc
pop
fstps
mov
push
ja
jecxz
mov
mov
push
data16
xor
sbb
hlt
repz
push
push
mov
mov
push
inc
push
fnstenv
out
push
hlt
jmp
pop
mov
fstps
adc
pop
mov
sbb
into
mov
lahf
push
outsl
fsts
push
sbb
push
push
aad
push
aaa
pop
adc
cwtl
mov
testl
xchg
push
pop
mov
mov
mov
xchg
scas
push
fsts
pop
shl
mov
xor
mov
cwtl
fnstsw
pop
pop
rcrl
pop
pop
ret
imul
jmp
cltd
mov
imul
fs
repnz
inc
xchg
sahf
mov
mov
push
ja
aam
pushf
jp
xor
movsl
testl
or
stos
pushl
or
push
mov
repnz
add
push
xchg
sub
imul
jg
jl
nop
cmp
or
nop
adc
xchg
ss
repnz
mov
and
fbld
pop
sub
or
and
and
cmpsb
addl
mov
adc
adc
cltd
mov
mov
sbb
or
mov
int3
add
jnp
or
xor
dec
mov
xlat
shl
mov
mov
push
rorb
xchg
push
add
mov
roll
jle
xchg
fbstp
imul
scas
xchg
bound
lcall
inc
cltd
ds
shl
cmpsb
fucom
push
pop
mov
int
push
xlat
push
pop
pop
cmpsb
add
add
clc
xor
aad
out
imul
xlat
lock
adc
ja
dec
fwait
xor
mov
fimull
shll
shrl
xchg
sub
inc
or
or
mov
mov
ds
xor
jns
xchg
lcall
mov
mov
cmp
add
pop
push
leave
or
or
out
sbb
jno
mov
inc
mov
cwtl
repnz
pop
cmp
or
and
popf
and
push
popf
dec
dec
jp
shlb
sbb
gs
outsb
and
mov
mov
cmpsl
clc
or
and
add
lock
lock
lds
mov
and
aam
movsl
insb
out
test
shlb
enter
test
cmpsb
lods
pop
lret
mov
mov
lods
and
mov
nop
roll
orb
jnp
lret
xchg
sbb
int
sarl
cltd
jo
mov
jb
subb
cmc
popf
pusha
repnz
mov
bound
dec
std
fbld
or
cmp
fwait
xor
subb
sub
mov
sbb
gs
shrb
or
popf
add
mov
cmp
dec
fdiv
icebp
cmc
sysret
lods
fdivr
adc
rorb
jmp
xchg
jo
cltd
test
pushf
ja
sub
mov
rcll
adc
sbb
mov
lcall
xorb
int
cwtl
or
or
loope
push
push
pop
xchg
xchg
pop
rcrl
push
jmp
imul
shl
mov
rcll
repnz
test
fdivr
loope
popa
jmp
jmp
shll
rcrl
push
iret
xor
imull
movsb
inc
test
xchg
dec
mov
push
arpl
cmpsl
jle
pop
mov
call
lahf
mov
shrl
xchg
pop
sbb
hlt
xor
arpl
mov
cmpsb
fiadds
loopne
mov
xchg
test
xchg
xchg
cli
pushl
popa
ss
mov
out
jbe
repz
loopne
jno
popf
aad
lods
xchg
andl
bnd
shrl
out
movsb
repnz
test
pop
outsl
cltd
push
movsb
adc
ljmp
inc
test
xor
aad
jg
and
adc
jae
adc
or
fwait
add
cmp
repnz
call
adc
out
imul
xor
or
orb
lods
fwait
bound
dec
cs
movsl
imul
cwtl
pop
shrb
xor
jb
js
cmpsl
lock
sub
int3
clc
mov
jns
xchg
cwtl
mov
jecxz
add
jmp
push
test
in
rcrl
sbb
xlat
dec
ret
mov
lcall
add
inc
loopne
pop
adc
fucom
es
cmpsl
in
adc
fistpl
lds
les
rorb
sbb
cmp
cltd
shrl
mov
or
jmp
cmp
jp
ficompl
cwtl
sbb
mov
fdivs
es
xlat
clc
dec
jns
das
pushf
push
in
out
sbb
bound
pop
cmp
fsubs
xor
ljmp
adc
inc
add
jns
pop
mov
lcall
imul
aad
add
or
stos
inc
aad
out
repz
movsl
lcall
rcrl
stos
jns
test
inc
repz
pop
inc
scas
xchg
push
shlb
aam
popa
add
fadds
cmp
sahf
scas
xchg
sbb
dec
or
adc
cmpl
sarl
jmp
cmp
adc
stos
jns
cmp
repz
jne
andl
adc
pop
in
jle
sbb
xchg
popa
lea
push
stc
les
lds
scas
movb
scas
add
outsb
mov
divl
aam
jae
dec
cmp
aas
fsubrp
std
pop
lcall
cltd
jb
hlt
insl
add
lods
xchg
lock
mov
mov
dec
jb
jmp
pusha
into
pop
jns
add
cmp
and
xchg
movsl
cmpsb
lods
adc
or
cmp
sbbb
add
cmp
jne
fwait
mov
mov
imul
test
lret
add
mov
mov
sub
mov
jp
fsts
mov
aam
push
push
adcb
loope
mov
in
mov
clc
cmp
mov
adc
add
stc
inc
mov
dec
ljmp
or
mov
mov
cltd
mov
pusha
sbb
hlt
xchg
push
xor
repz
xor
xor
or
sub
fsts
jbe
sbb
addr16
cld
inc
sub
jo
jns
mov
dec
hlt
orb
cmp
js
scas
mov
inc
pop
pushf
popa
loopne
sbb
sub
push
ror
xchg
jns
jae
repnz
pop
mov
fsincos
lahf
loopne
dec
fcoms
add
js
mov
iret
push
xchg
pop
rorb
push
test
mov
mov
xchg
and
mov
xlat
add
mov
sbb
jecxz
push
call
call
pop
dec
out
cltd
jae
icebp
loopne
push
imul
cmp
jle
mov
and
cmp
cmp
xchg
rorl
jnp
jge
push
stos
jle
sub
pop
jns
popf
dec
stos
push
pop
jecxz
neg
add
jmp
inc
aad
or
test
lods
outsb
jne
push
xchg
pop
mov
mov
sub
repnz
imul
adc
push
aad
xchg
stc
inc
xchg
ds
lret
shll
cmc
mov
xor
jbe
aad
cltd
lcall
and
aam
repnz
and
sub
out
mov
and
jbe
cwtl
push
das
test
aad
cmpsb
mov
ret
cmc
punpckhdq
sbbb
les
repz
cld
icebp
ret
js
fildll
imul
imul
insl
stos
add
mov
aas
jecxz
insb
dec
sbb
xor
js
ret
js
sub
push
aam
or
imul
jl
push
sbbl
sbbl
fst
jns
loopne
fstps
cmp
mov
or
int3
sbb
inc
and
movsb
hlt
jo
insb
iret
jb
in
test
mov
je
fistpll
js
dec
cwtl
xor
xchg
jno
xchg
and
inc
push
fadds
mov
iret
cltd
mov
lds
mov
xor
mov
notb
out
fidivrl
mov
add
lcall
cmp
mov
lds
es
sbb
jnp
stos
lods
adc
js
in
and
repz
scas
inc
push
jbe
mov
cli
dec
mov
aad
rol
ds
clc
sub
add
or
arpl
mov
ret
mov
add
jo
mov
add
or
xchg
mov
push
fnstcw
xchg
or
mov
lds
mull
pop
aad
jne
and
lods
add
jp
fsubl
pop
dec
lods
hlt
arpl
add
aam
jno
adc
dec
mov
dec
xor
ficoml
aad
fdivs
xchg
or
push
leave
xchg
test
inc
rolb
pop
jns
loope
mov
es
lahf
pop
rcrb
pop
popa
cltd
push
xor
xchg
add
push
fstps
notl
or
and
or
add
mov
loopne
rcrl
xor
daa
dec
cmp
jl
div
pop
pop
mov
imul
stc
enter
sbb
xor
sbb
aaa
divl
push
mov
mov
xor
hlt
sub
push
daa
inc
push
iret
ljmp
push
mov
xor
cmpsl
andl
mov
push
sub
mov
cmpb
and
mov
jns
push
sbb
push
iret
cmp
jle
jae
syscall
jb
mov
popa
cmpsl
push
aam
mov
std
lret
std
iret
mov
repnz
cmc
xor
and
jns
mov
repnz
ss
mov
call
aad
lahf
shll
xchg
adc
fcomip
addr16
std
leave
mov
fldcw
mov
add
movsl
mov
inc
pop
popf
cmp
push
sub
stc
sbb
leave
pusha
cmc
add
test
lret
xchg
jmp
fucom
int3
push
stc
push
jae
cli
mov
int
ret
in
scas
fs
cltd
lret
std
xchg
mov
mov
fisttpll
ljmp
inc
negl
in
mov
mov
push
test
jnp
cltd
adc
push
xor
mov
lahf
cmp
jmp
sarb
push
insb
out
push
js
sbb
pop
mov
aad
std
xchg
lret
xchg
inc
nop
ljmp
mov
cmp
aad
loope
cmp
aad
sti
loope
popa
lock
jno
subl
and
mov
mov
mov
scas
cltd
jnp
js
jo
fcoms
push
int3
fsubr
pusha
mov
jle
iret
adc
stc
jbe
lret
movsb
shrl
xchg
fcmovbe
das
add
shll
mov
adc
or
inc
jecxz
call
enter
jns
or
or
inc
add
jnp
imul
repnz
iret
sbb
xchg
add
mov
add
mov
sti
lock
push
cli
addr16
and
movsl
mov
inc
lret
mov
lahf
inc
xchg
push
sub
pop
sub
mov
loop
or
jbe
jnp
jl
ljmp
cmp
in
xor
inc
roll
push
or
or
mov
into
test
fimull
mov
ds
lret
adc
dec
decl
adc
movsl
pop
loope
shrb
pop
sbb
jbe
push
mov
jle
mov
sbb
cmpsl
ret
and
and
les
out
hlt
cltd
je
sbb
icebp
lret
sub
std
jne
xor
andl
ret
push
cmp
inc
mov
test
fsubrs
repz
add
rcrb
cmp
cmc
push
scas
stc
mov
popf
leave
shl
mov
addr16
repnz
sub
xchg
loope
adc
adc
pop
jns
xchg
ret
pop
imul
pop
pop
inc
mov
imull
sub
adc
pop
or
ret
pcmpeqd
adc
int3
and
pop
loope
mov
cmp
test
rclb
mov
inc
dec
stc
stos
adc
add
in
outsb
rolb
icebp
push
and
repz
mov
jecxz,pt
test
testl
addr16
xchg
rolb
pop
jbe
pop
jp
mov
in
dec
and
lods
pop
mov
bound
repnz
add
sub
in
enter
test
enter
add
and
jbe
gs
push
push
decl
loopne
std
cmp
jmp
mov
mov
xchg
push
pushf
movsl
adc
add
dec
divb
lock
add
aad
add
push
mov
add
pop
int
jle
xchg
imul
popf
xor
xchg
cmp
dec
fcmovne
inc
loop
das
stc
jmp
or
daa
negb
aam
jp
push
mov
stc
rcl
mov
mov
jg
repnz
cmp
sub
mov
les
inc
mov
js
test
pushf
sbb
push
outsl
insl
hlt
pop
mov
int
mov
in
pop
xchg
enter
out
and
in
or
lahf
jecxz
jo
imul
sbb
mov
jp
mov
addr16
ss
adc
loop
stc
jp
fdivl
xchg
aad
insw
and
cmpsl
pop
mov
shll
jg
sbb
xchg
mul
pop
cwtl
adc
jb
and
lea
push
and
add
jns
add
pop
xor
fiadds
dec
cs
and
or
loop
xchg
mov
pop
rolb
scas
xor
inc
imul
repz
sub
dec
lods
mov
jg
xchg
jno
lods
shll
push
int3
dec
aas
shll
lock
gs
cmpsl
pop
mov
xchg
test
dec
xchg
jmp
sub
in
outsb
scas
cmp
adc
mov
lds
out
or
add
adc
test
out
ret
icebp
rcll
or
pop
xchg
push
imul
cwtl
and
testl
popa
imull
inc
push
nop
jno
mov
sub
xor
popf
mov
mov
mov
mov
and
loope
push
fcompl
lret
mov
sbb
nop
cmp
sub
out
mov
daa
xchg
add
sub
lods
wbinvd
addl
mov
dec
mov
add
int3
cltd
decb
fsts
push
fstpl
out
imul
out
pop
or
cwtl
clc
lahf
mov
mov
lret
mov
loopne
mov
shlb
xchg
xorb
xor
ret
mov
icebp
fwait
add
nop
scas
xchg
pop
rorl
in
add
pop
inc
hlt
fldl
fucomip
lods
icebp
push
cmp
or
and
outsl
fisubl
in
push
mov
add
sub
js
ftst
ds
mov
adc
adc
stos
or
rcrl
sub
jns
insl
rcr
xchg
mov
pop
rolb
iret
int
outsl
inc
lods
mov
daa
jl
hlt
leave
fstp
mov
int3
adc
sbbl
popa
loopne
inc
jge
out
jb
xchg
daa
adc
jne
repz
sbb
cmp
icebp
adc
mov
push
dec
cltd
add
jae
push
test
cmc
sbb
popf
test
xor
sbb
out
or
lret
out
inc
push
bound
movl
jb
stc
mov
lret
sbb
loope
adc
adcl
das
cmpsl
daa
mov
idivl
cwtl
clc
stos
inc
imul
icebp
xchg
inc
aam
push
lock
push
scas
aam
xchg
mov
mov
ss
dec
dec
clc
leave
stos
repnz
in
or
mov
push
cmp
sarl
push
xchg
mov
xor
test
cmp
aad
mov
xor
adc
pop
leave
das
mov
jl
jle
push
ds
out
lods
adc
push
pushl
inc
mov
stc
mov
jns
pop
icebp
jg
notl
aam
lret
pop
inc
sahf
adc
push
movl
ja
push
call
xor
xchg
cmp
call
or
sarl
imulb
dec
std
jbe
mov
loop
lcall
sbb
in
xchg
lret
sbb
pop
lcall
dec
jns
mov
das
dec
out
repz
jle
nop
rorl
mov
xchg
mov
inc
test
adc
incl
lock
dec
sbb
adc
jmp
fimull
and
aam
daa
xchg
adc
stc
add
cmp
mov
cmp
jmp
dec
dec
mov
fucomp
aas
mov
jmp
sbb
xorl
fiaddl
das
dec
aam
loope
mov
xchg
inc
add
lock
jg
adc
inc
dec
in
mov
jmp
es
mov
jmp
outsb
mov
and
jo
push
mov
daa
inc
js
outsb
imul
mov
xor
sub
sbb
clc
adcl
jae
negb
cmp
jecxz
mov
cmpsl
dec
pop
test
int3
sbb
xchg
jae
adc
notl
push
push
dec
lods
adc
arpl
mov
ret
clc
inc
test
hlt
outsl
daa
je
cmp
rcll
andl
je
adc
enter
xchg
lock
jp
mov
lahf
and
adc
sbb
out
push
and
xor
xchg
dec
ja
insl
lds
ja
dec
sbb
adc
push
fisubrs
push
nop
mov
xchg
xor
cld
mov
pop
jge
sbb
lea
sub
lds
mov
mov
add
je
pop
or
fsubrp
push
jle
sarb
je
fsts
or
sub
and
or
lret
dec
cmp
subl
insb
xchg
sbb
cmc
je
ds
sbb
movsl
dec
pop
mov
mov
xlat
sbb
mov
sahf
xchg
sub
xchg
push
cmc
dec
push
loopne
cmp
mov
lret
push
add
push
pushl
imul
rcrb
adc
mov
in
jo
jp
mov
add
into
cmp
imul
fs
fmuls
in
in
cltd
movl
js
hlt
push
cld
addr16
jl
js
mov
cmpsl
inc
int
lock
sub
push
into
insl
inc
imul
aad
nop
jns
or
shlb
pop
lds
out
call
pop
jp
and
mov
jg
mov
push
testb
stc
cmp
push
cmp
test
sarb
xchg
lret
or
push
test
mov
movsl
push
sbb
lahf
mov
jmp
cmp
je
add
push
lret
mov
inc
or
mov
lahf
pop
fldenv
inc
jmp
mov
imul
divl
pop
xchg
loop
outsb
fisttpll
mov
imul
es
xchg
dec
sbb
jae
pop
or
fstl
push
jle
jnp
addr16
pop
stc
jne
jle
sbb
aad
jb
pusha
mov
pop
inc
add
mov
sub
xchg
xchg
je
mov
ret
add
pop
stos
test
call
mov
repz
inc
add
adc
mov
testb
pop
jge
inc
and
sbb
aas
xor
mov
mov
notl
or
sar
xchg
daa
push
add
sar
sbb
push
sbb
cmc
sub
mov
rcll
add
sbbl
mov
dec
add
inc
push
popf
pop
xlat
mov
inc
fwait
push
or
cmp
rcr
mov
mull
lea
lret
or
lea
out
popf
cmp
sub
ror
out
pop
fldcw
sbb
xchg
xchg
shlb
adc
nop
mov
jb
ror
nop
fstps
xchg
out
jno
mov
push
jns
sub
mov
popa
xchg
fiadds
aaa
mov
xchg
rolb
push
in
sbb
scas
sub
add
movsb
jne
fdivs
rcl
xchg
mov
pushf
or
jno
scas
adc
push
inc
es
cmp
or
sub
stos
and
xabort
mov
cmp
inc
aad
xchg
sbb
mov
pop
and
and
xlat
mov
xchg
test
shr
and
inc
inc
in
mov
repz
int3
lahf
mov
shrb
ja
sbbb
push
out
loope
jmp
sbb
sarb
movsb
mov
jmp
xbegin
icebp
push
pop
xchg
call
sbb
cmc
jno
rcll
rolb
bound
imull
mov
adc
leave
pushf
fcmovnbe
jo
adc
xor
iret
sbb
xchg
add
mov
jle
insl
mov
cmp
adc
outsb
jno
lret
dec
testl
cmova
jns
flds
xor
sbb
push
sbb
repz
lret
adc
nop
leave
daa
fmul
in
sbb
int
rcr
lea
xor
jne
push
ret
cmp
adcl
loope
jg
fwait
and
cld
mov
stos
bound
xchg
icebp
mov
pop
aad
enter
jae
xchg
add
fsubrs
sub
push
sbb
insl
jmp
fstps
sbb
or
inc
gs
push
cmc
inc
mov
sti
fdivl
jle
test
xchg
lret
aas
and
mov
dec
mov
cli
xchg
xchg
rcll
loope
notb
xor
popf
jne
shlb
dec
adc
mov
add
jae
scas
hlt
lods
movsl
test
dec
lods
pop
inc
fimuls
push
dec
dec
adc
push
int
andb
mov
jbe
dec
cmc
aas
arpl
adc
outsb
sbb
cmc
in
std
sbb
lock
push
daa
xchg
xchg
mull
xchg
and
loopne
aas
xchg
dec
insb
push
fimuls
divl
int
dec
add
cmpsl
jae
js
jp
test
enter
cli
jns
insl
mov
xor
lea
and
jmp
clc
pop
xchg
gs
mov
jno
dec
cmp
jnp
cmp
test
push
lods
bound
mov
cmp
jle
scas
xchg
pop
and
ljmp
leave
jno
push
sarl
fidivs
aad
aad
std
lds
shl
xchg
aad
flds
sbb
lock
sbb
in
cltd
and
ss
pop
ja
gs
cltd
inc
gs
pop
hlt
xor
popa
popf
aam
add
jbe
fimuls
arpl
or
jne
fmull
aad
mov
pop
dec
repz
js
lds
xchg
scas
imul
mov
sbb
push
cmpsl
xchg
or
test
faddl
test
or
shrb
out
push
push
cld
shl
jbe
lds
addr16
push
push
std
stos
lahf
and
repz
adc
sbb
enter
inc
je
cld
xchg
cmp
popa
leave
jbe
fstp
mov
shl
cmp
jge
adc
notb
fxch
test
xchg
shlb
sbb
lds
xlat
cs
inc
shlb
cmpsb
push
hlt
and
ror
push
inc
repnz
or
and
mov
and
jbe
cmp
cltd
rcl
mov
bound
cwtl
inc
push
cmp
jne
adc
adc
hlt
mov
push
in
ret
outsl
jns
dec
fisttpl
mov
lret
rcl
mov
dec
shll
imul
enter
inc
loopne
or
imul
ljmp
jbe
jle
lds
ss
aas
xchg
insb
icebp
add
sbb
adc
iret
xor
aam
mov
in
test
negl
cmc
adc
mov
out
sbb
fucomp
ror
mov
jns
jbe
pop
xchg
test
in
dec
lock
rcr
out
ds
push
jmp
adc
or
out
daa
adc
mov
fwait
iret
fadds
sbb
cmp
test
push
jmp
dec
push
jl
ret
jns
aad
loopne
mov
xlat
cmpl
mov
sbb
inc
pop
push
ds
addb
xlat
jae
mov
sub
adc
add
add
insb
push
test
push
and
test
xchg
add
popa
jle
jne
adc
sahf
mov
sbbb
lret
sub
sbb
mov
sbbb
loopne
push
cld
push
or
add
push
mov
std
popf
cmp
and
loop
movsb
mov
js
inc
fdivl
push
aad
out
cltd
jge
jns
flds
xchg
push
cmc
adc
xor
xchg
fildll
push
mov
data16
test
clc
aam
or
enter
mov
adc
movaps
call
ds
out
mov
test
pop
jns
ds
cmp
lea
mov
cmp
sub
cltd
orb
pusha
test
mov
dec
lock
rorl
cmpsl
sub
clc
jle
add
addr16
and
loop
sbb
sbb
xchg
cmp
xchg
xchg
push
adc
add
cmp
lea
pop
int
xchg
cmc
mov
cmp
xor
mov
in
cmc
fistl
out
lods
sub
mov
repz
enter
rep
or
push
sbb
add
rclb
jno
ds
cmp
push
imul
cmp
adc
std
mov
adc
add
sahf
push
loopne
fwait
mov
inc
lock
int3
cmp
sbb
jne
jns
jne
mov
movsb
sub
in
jp
icebp
push
pop
jb
pop
sub
or
xchg
mov
xchg
mov
hlt
in
sbb
push
mov
inc
inc
test
std
cmpl
or
es
scas
mov
mov
fdivp
mov
test
xchg
push
mulb
ss
cwtl
icebp
std
sub
mov
scas
xlat
mov
pusha
mov
scas
stc
bound
icebp
lret
jp
ret
dec
add
cmpsb
push
push
inc
jmp
ficoml
mov
stos
rol
ljmp
xchg
hlt
movsb
sarl
es
sti
in
shll
dec
adc
sahf
loope
iret
push
and
inc
ret
push
inc
addr16
adc
and
js
out
pop
iret
mov
inc
insb
jo
nop
push
ror
je
out
mov
shlb
ja
cli
jb
fnstcw
ret
jb
push
jge
push
dec
mov
daa
push
pop
vpackssdw
sub
iret
pushf
popa
lea
testb
cmc
sbb
jge
pop
repz
fldt
call
mov
rcl
outsl
dec
es
dec
hlt
es
rcll
pop
xchg
cmpsb
outsl
cmp
mov
scas
push
rorb
ds
xor
add
stos
test
out
cmpsl
insb
jns
repnz
or
ficompl
sbb
sub
es
imul
std
or
mov
mov
mov
insl
pop
pop
xor
pop
adc
pmullw
daa
repnz
or
or
jecxz
into
pop
mov
in
push
aad
out
push
fisubs
xchg
rolb
loope
mov
idivl
insl
movl
aad
mov
or
xor
lret
inc
jg
shrb
jecxz
xor
js
into
or
or
jb
test
mov
in
mov
add
jl
jno
fstl
mov
cli
loop
sub
adc
fistpl
fld
xchg
imul
pop
addr16
xchg
and
shrb
in
outsl
scas
cmc
mov
xor
andb
jno
mov
adc
jb
mov
mov
icebp
or
inc
sti
pop
test
repnz
push
mov
mov
push
and
push
fmuls
mov
js
mov
fcmovb
in
ds
xchg
jns
and
test
mov
inc
inc
idiv
add
jb
repnz
mov
addr16
int3
fsts
lret
fadds
cmpsb
out
mov
xchg
or
lods
xchg
ret
mov
jp
lods
dec
xchg
sbb
andb
loope
scas
cmp
mov
add
pop
cltd
cld
adc
mov
cld
lods
test
repz
adc
sub
xor
std
jle
mov
cmp
in
lahf
cs
fdivs
mov
xchg
loope
xor
lahf
dec
pop
cltd
and
es
ret
call
cltd
jns
adc
pop
rcrb
std
fs
popf
pop
sub
add
add
adc
adc
aaa
int
xchg
mov
rolb
or
orb
lock
insb
jle
int3
imul
dec
pop
and
shl
mulb
lock
sub
addr16
fcomp
pusha
ror
sub
js
aas
xor
jbe
xchg
cmc
dec
cld
xor
jae
cld
dec
cwtl
pop
fwait
bound
arpl
iret
add
ret
or
lock
sub
sti
dec
daa
xchg
addb
mov
jne
jbe
inc
cli
adc
jo
push
mov
fcomi
mov
jno
and
adc
rcrb
rcr
push
push
jbe
lret
popf
clc
sbbb
ret
stos
insb
mov
jno
repnz
rcl
rolb
inc
inc
inc
sub
mov
mov
add
xor
jg
xchg
int3
xor
std
adc
push
or
fisubl
dec
pop
push
xorl
push
and
push
jmp
inc
in
xchg
push
xchg
push
jb
push
fcomp
cmp
sub
cmc
out
jmp
mov
iret
cmc
out
and
pop
or
aas
pusha
adc
sbb
lds
fdivrp
sub
and
adc
or
adc
or
stc
notl
jns
adc
cmpsl
sbb
jb
mov
push
shrb
xchg
xor
scas
cmp
jb
mov
push
mov
les
xorb
out
mov
hlt
xor
xor
lret
or
call
call
lret
mov
call
in
inc
sbb
shrb
int
pop
xor
gs
aad
repz
loope
jecxz
outsb
dec
xchg
roll
mull
cli
scas
push
movb
mov
cltd
and
or
insl
cmp
insb
orl
mov
repz
xor
test
addr16
mov
xor
or
mov
push
mov
js
mov
sbb
push
ret
or
mov
pop
or
pop
pop
pushw
adc
jp
in
push
mov
rorb
aad
xchg
mov
adc
pushf
push
jno
mov
add
dec
adc
push
push
outsb
movsb
call
or
out
jmp
push
test
sub
jle
testl
mov
pop
cmpsl
test
pop
stc
push
push
leave
ds
mov
pop
addl
mov
stc
jbe
inc
loope
stc
test
xchg
jle
adc
or
cmp
rcll
pop
mov
cmp
jbe
xor
fdivrs
sbb
or
jns
adc
jo
adc
adc
cltd
xor
jge
jbe
dec
out
nop
adc
jae
rcrb
mov
pop
jb
sub
xchg
pop
out
pushf
fdivp
scas
add
cltd
mov
lret
xor
mov
push
lret
jmp
push
jg
xchg
sbb
in
imul
lret
adc
and
xor
jb
push
push
xor
pop
iret
adc
cmp
call
sub
push
xchg
call
sub
imul
int3
stos
nop
repz
outsb
adc
xchg
sbb
dec
test
cmc
push
xchg
rorb
fisubrs
notl
out
dec
iret
ljmp
inc
in
xor
in
sub
ss
mov
insl
and
jnp
inc
lahf
in
xchg
sbb
out
add
xorl
loopne
jp
icebp
lret
in
aad
pop
mov
xchg
idivl
lret
hlt
enter
clc
outsb
sub
ret
cmp
pop
cmp
pop
push
scas
aam
xchg
cmp
xchg
inc
xor
mov
mov
rcll
notb
jae
mov
dec
fimuls
notb
jb
adc
mov
xchg
and
les
insb
notl
rclb
push
jb
xor
sub
imul
adc
add
pop
jno
mov
sarb
add
lret
aad
lock
dec
rcl
imulb
sarl
ja
mov
rorb
cmp
cmp
loope
pop
arpl
movsb
fldt
cmpsl
or
cltd
shlb
aam
or
imul
jb
push
xchg
xor
rol
mov
inc
or
clc
fsubs
adc
fstl
sbb
mov
int
daa
mov
shlb
mov
sub
imul
ja
sbb
push
ss
adc
dec
mov
fdivr
popf
mov
lea
pop
fnstsw
es
rol
jg
xchg
mov
fidivrl
rcll
into
aad
inc
mov
enter
lret
enter
fnstcw
sahf
adc
movsb
and
movsl
fs
sub
lock
jo
cmp
adc
cld
cltd
cltd
jne
test
repz
dec
fs
aad
dec
xchg
mov
aam
add
cmp
jmp
cs
and
jle
jl
push
and
sbb
push
fsts
xchg
xchg
fistpl
aaa
mov
ret
fnstenv
notb
xchg
xchg
push
mov
adc
xlat
mov
xchg
popf
nop
sbb
fcmovnb
loop
cltd
icebp
mov
dec
das
add
or
jle
adc
sbb
std
adc
push
sahf
mov
add
jl
mov
inc
push
xchg
mov
js
sbb
push
push
in
rcl
add
cmc
cmpl
out
adc
jne
inc
adc
xchg
repz
test
repnz
out
xchg
pop
push
shll
push
jnp
repz
adc
aad
jb
fsts
fnstenv
insl
mov
pop
sub
xchg
or
lahf
adc
mov
cwtl
jne
icebp
idivb
jmp
test
cltd
div
mov
jge
les
sti
addr16
int
in
movsl
cwtl
jle
mov
sbb
mov
sbb
fsts
mov
inc
fcmovnbe
adc
xlat
adc
push
adc
jecxz
out
push
or
aam
and
rolb
add
fwait
xor
loope
add
adc
add
sub
rcr
lahf
xchg
repz
push
cld
rclb
xchg
aaa
imul
pandn
xchg
or
jb
sbb
sarl
push
xchg
pop
sbb
clc
inc
loopne
jae
pop
cmp
and
out
mov
mov
mov
shll
mov
js
jmp
jo
and
out
mov
fwait
push
out
divl
xchg
movsb
fcmovnbe
jae
xchg
js
repnz
cltd
hlt
push
and
test
clc
dec
into
xchg
sbb
xchg
fdivl
enter
jbe
xchg
test
mov
mov
inc
cmpsb
aas
shll
cltd
adc
push
pop
adc
ret
call
rcl
mov
cld
xchg
pop
jge
jns
popf
mov
or
lods
cs
xor
mov
push
or
and
ror
popf
xor
cmpsl
xchg
xchg
call
mov
jp
das
xorb
inc
into
adc
push
sti
cmp
rclb
and
jl
jbe
push
lods
loop
mov
sbb
insl
jbe
sbb
not
rorb
xor
jge
jns
sbb
std
fwait
and
add
jno
adc
in
pop
test
cltd
mov
rorb
insl
jbe
sub
das
out
push
repz
loopne
mov
sub
fdivs
rcl
enter
test
outsl
sub
lret
int3
add
rcrl
loopne
xor
xchg
and
push
xor
mov
fldcw
jl
repz
js
xchg
stc
loopne
xor
xlat
mov
arpl
jbe
imul
insl
addr16
or
pusha
std
cld
jnp
lahf
imul
movsb
xor
insl
andl
dec
repz
shlb
jbe
pop
mov
scas
push
xor
cmp
xor
mov
ja
push
cmp
dec
repnz
sub
fsubrl
mov
loopne
add
and
or
fwait
add
xor
pop
inc
addr16
mov
std
fyl2xp1
int3
popf
adc
mov
fdivr
jbe
pop
daa
fidivl
xlat
insl
aaa
or
fbld
ss
mov
std
pop
mov
repz
test
xchg
pop
mov
pop
xchg
jbe
jne
scas
call
adc
sub
fistpl
pop
arpl
cltd
sub
push
adc
xor
fldcw
xchg
int3
xchg
and
push
in
cmpl
or
cmp
mov
mov
jne
repz
fsts
mov
mov
rcrl
mov
cmpsl
and
jb
xor
push
push
mov
or
mov
lcall
fcos
mov
aad
inc
stc
fnstcw
xchg
cmp
sbb
insb
and
xchg
cmp
shl
inc
inc
xchg
inc
aad
rcrl
scas
jg
pop
xchg
sbbb
fs
mov
mov
sbb
pop
xor
cmpsl
aaa
icebp
xor
mov
push
mov
jmp
add
repz
pop
lahf
fsts
mov
mov
shrl
scas
cmp
call
mov
jns
pop
pop
lcall
test
lahf
shll
insl
pop
jns
mulb
xor
pop
mov
and
imul
and
clc
es
inc
out
bound
xor
mov
push
aas
pop
xlat
enter
xor
fsts
adc
mov
mov
mov
or
pop
aad
stc
add
and
imul
inc
jne
insl
sub
daa
mov
je
popf
cltd
pop
jae
mov
shrl
mov
add
add
popf
not
js
or
xlat
mov
xchg
adc
add
popa
lock
ds
dec
rcr
cld
xor
adc
in
push
push
fcmovnbe
xchg
pop
pop
aaa
cltd
mov
xlat
jmp
rcl
out
xchg
sub
cltd
loopne
xlat
scas
xchg
xchg
sbb
add
sub
mov
aad
push
rcl
xchg
push
popa
xlat
mov
mov
adc
pop
pop
pop
shlb
xchg
jns
xchg
cmp
inc
xlat
mov
xor
cmp
sbb
pop
sbb
push
xor
sbb
aad
adc
mov
mov
nop
mov
sarl
push
hlt
sbb
repz
sbb
push
aad
rcll
push
fstl
aaa
rcll
pop
ficompl
push
xchg
leave
or
xchg
popf
pop
loope
xchg
xlat
pop
scas
mov
pop
std
lea
rcr
xchg
rorb
adc
mov
lds
lea
scas
mov
test
and
test
xchg
repz
stc
hlt
das
cli
scas
fmull
test
cli
push
mov
rep
pop
and
aam
out
cltd
stc
xchg
test
xor
lds
pop
xchg
dec
ljmp
add
fcmovu
xchg
mov
fisubs
push
insb
mov
cmpl
clc
fldenv
xchg
xchg
adc
xchg
scas
xchg
fcomps
sbb
divl
popf
push
sbb
xchg
mov
inc
cmpsl
or
sbb
icebp
mov
xor
jne
js
add
loopne
add
xlat
push
pop
pop
pop
mov
mov
cmp
mov
addr16
inc
imul
fbstp
cmp
test
add
xchg
test
subl
cmp
xchg
insl
testl
mov
cmp
push
mov
mov
sub
xchg
dec
test
pop
mov
sub
bound
es
daa
and
cmpsl
pop
mov
or
rcl
aas
dec
adc
jbe
lock
inc
stc
stc
call
or
mov
cmp
data16
shrb
enter
xor
add
rcr
cmp
rorl
lea
pop
repz
out
out
mov
pop
rclb
and
jo
aad
ds
pusha
stos
adc
pop
aaa
or
or
pop
pop
push
or
mov
xor
lahf
inc
roll
sub
and
mov
icebp
sbb
push
or
sahf
add
test
jno
in
popf
adc
xchg
mov
out
mov
out
lret
out
cmp
mov
pop
mov
inc
mov
adc
andl
add
lcall
mov
cmp
rcl
in
negl
fldlg2
xchg
fistps
add
test
cmpsl
aas
cltd
scas
inc
adc
xchg
pop
jno
jg
shll
xchg
outsl
and
push
or
inc
std
pop
dec
leave
test
jno
aas
test
daa
aas
xchg
das
adc
je
sbb
jbe
jl
mov
cltd
lahf
in
inc
clc
adc
xor
mov
idivb
xlat
xor
mov
xlat
inc
fsts
and
ds
cmc
xchg
das
cmp
xlat
rcll
xlat
jo
jae
pop
xchg
jmp
mov
jle
mov
adc
xor
jb
stc
xchg
sbb
cmp
cli
xchg
mov
repnz
stos
sub
jne
xchg
add
pushf
insl
mov
cmc
or
mov
add
jecxz
xlat
imulb
enter
mov
xor
jne
arpl
nopl
dec
stos
adc
jge
les
clc
test
pop
outsb
enter
insl
popf
add
xchg
aaa
repnz
test
mov
out
lock
mov
fadd
repnz
or
ss
cltd
xchg
stc
fadds
jp
shlb
jb
jge
test
xor
fisttpll
cmp
jns
adc
or
popa
std
pop
pop
roll
sbb
inc
lods
repnz
loope
sbbl
add
idiv
cmpsb
sbb
lock
aas
cltd
call
add
xor
std
inc
sar
and
shlb
mov
xchg
test
adc
push
movsb
mov
mov
aad
inc
lcall
outsl
jge
mov
push
test
xchg
les
pusha
jae
pop
int3
rclb
inc
adc
or
xor
std
pop
sub
add
mov
or
daa
or
mov
std
sahf
out
test
jno
das
std
cltd
mov
movsb
fstps
popf
xchg
movsl
jge
in
iret
fidivl
repz
pop
imul
adc
sbb
lcall
arpl
fldl
push
jmp
inc
xchg
loopne
shrl
cmpsb
stc
or
mov
fisttpll
adc
inc
push
cwtl
jecxz
cld
mov
lahf
push
mov
stc
cmc
mov
xchg
cwtl
aad
repnz
cltd
xchg
jle
mov
inc
cmp
jg
pop
dec
int
pop
fisttpll
push
and
pop
cmp
gs
ficoms
cmpsb
imul
das
daa
das
adc
loope
mov
pop
lock
std
cltd
mov
mov
pop
jbe
mov
std
push
and
add
add
add
lea
inc
lahf
sub
sbb
push
ror
scas
jle
jbe
and
adc
aad
push
fldt
xchg
xor
xor
push
push
scas
adc
xor
test
lahf
pop
inc
cmpsl
mov
sub
mov
mov
hlt
pusha
rcrl
imull
adc
stc
sbb
xchg
stos
dec
adc
aas
int
ds
mov
enter
ljmp
xchg
movl
mov
inc
rcrl
gs
dec
popl
jb
xor
mov
jmp
add
xor
jns
inc
bound
push
sub
push
xchg
add
fwait
addr16
inc
rcll
push
clc
jl
xchg
fnstcw
fstl
sbb
lahf
pop
iret
imul
repnz
lret
jmp
test
aas
daa
cmp
mov
xor
push
push
push
fidivrs
repz
addl
mov
repz
cmp
lcall
out
cmp
lcall
jbe
repnz
into
ja
cmp
scas
or
fcompl
or
lret
or
add
repnz
xor
fiadds
dec
int3
hlt
xchg
cmp
outsl
pusha
push
xchg
ret
mov
dec
test
pop
sarb
test
mov
xor
sarl
pop
push
sbb
adc
push
push
fimull
sbb
hlt
cltd
ss
scas
shl
mov
mov
fbstp
leave
push
data16
jecxz
cmc
call
loope
std
js
ret
add
sbb
push
dec
xchg
pop
push
shrb
aad
shrb
or
push
mov
xlat
rol
test
mov
jecxz
pusha
lret
cmc
xor
out
cmpsl
cs
sub
push
notl
pop
neg
jg
push
jne
rolb
ret
movsl
rclb
mov
sbb
sub
mov
jp
push
mov
ds
inc
popa
loopne
dec
ret
sbb
dec
push
das
push
or
adc
aas
in
js
cwtl
inc
in
inc
js
push
dec
push
jmp
jns
lds
in
sbb
xlat
rcrb
test
daa
jge
ja
rcll
push
sar
inc
jne
rcll
aaa
sbb
fdecstp
in
xchg
xlat
sar
loope
out
aad
mov
movsb
push
adc
aad
mov
sarl
bnd
jecxz
xor
push
leave
fistpl
divb
stc
xchg
sbb
negl
repnz
and
jne
push
sbb
mov
or
xor
xchg
cltd
jecxz
clc
add
stos
xlat
xchg
mov
and
stc
test
ljmp
push
mov
mov
add
pop
divb
mov
add
rcrl
cmp
or
jb
jbe
xchg
pop
in
leave
cltd
inc
fcom
shlb
fidivrl
add
mov
jecxz
cmp
inc
xchg
mov
lock
xadd
data16
shl
push
dec
pop
lret
lret
stc
jle
mov
mov
mov
shrb
push
data16
dec
fnstsw
xor
repnz
movsl
cmp
mov
xchg
sub
or
scas
mov
sbb
mov
shl
mov
fstpt
loope
push
push
jg
xor
inc
loop
shl
lret
lds
mov
cmp
jns
scas
pop
cs
test
addr16
xor
add
addl
sti
xchg
mov
jmp
sbb
sahf
enter
pusha
jg
add
andb
push
daa
inc
cmp
sbb
adc
adc
pop
inc
ds
pop
sahf
jne
push
mov
sti
pop
loopne
jns
xor
scas
bound
inc
xor
or
sahf
shlb
testb
scas
sbb
hlt
rcll
lret
cmp
xchg
push
pop
mov
adc
mov
or
sbb
add
push
jbe
js
mov
xchg
mov
loop
xor
or
sub
add
cld
push
mov
xor
sub
mov
cmpsl
push
adc
icebp
fxch
test
mov
add
pop
xlat
test
mov
cmpsb
add
dec
push
pop
fisttpl
and
mov
dec
or
xchg
out
aaa
aad
in
push
push
mov
fldl2t
call
jp
stos
clc
bound
lea
cltd
imul
jle
lds
sub
sub
cmp
cltd
sbb
loope
das
ret
outsl
aad
jmp
int3
and
pop
mov
rcrb
cmp
and
loopne
push
fyl2x
mov
testb
loop
adc
or
adc
int
jno
mov
xchg
mov
lret
add
or
adc
stc
lahf
mov
jg
ljmp
mov
mov
aas
cmpsl
repnz
test
icebp
jg
add
cmpb
test
pop
sub
clc
sub
lret
dec
add
cmpl
pop
jb
in
cmp
jl
sub
daa
xchg
or
mov
and
mov
divl
jae
or
inc
push
xchg
cmp
repz
lret
or
pop
xlat
roll
sahf
insb
pop
mov
push
xchg
mov
mov
push
icebp
xor
test
rcrl
lcall
xchg
mov
mov
dec
push
cmp
aad
imul
pop
mov
add
mov
pop
pop
inc
dec
shlb
call
push
or
xchg
imul
lahf
das
sti
mov
push
mov
cmp
stos
rcr
push
mov
pusha
mov
call
lods
repnz
pop
xchg
sbb
and
imul
pop
fwait
sub
jns
add
aaa
repnz
jne
inc
cmpb
xor
ljmp
or
fistps
rclb
mov
ret
pop
aas
sbb
sub
mov
sbb
std
bound
out
dec
stos
cmp
inc
mov
adc
xlat
push
push
lret
ljmp
dec
lods
mov
push
out
jbe
rolb
push
in
add
test
add
lret
out
es
movq
test
xorb
add
xchg
sar
ljmp
pop
pop
jb,pt
into
fmuls
push
daa
pop
mov
shlb
cmp
add
cmp
lahf
ljmp
add
xchg
test
iret
stc
mov
cltd
jg
leave
jmp
mov
push
cwtl
mov
call
jae
fbstp
xchg
insb
lock
stc
inc
repnz
in
out
mov
cmp
cwtl
repz
pop
pop
idiv
or
icebp
mov
rcrl
das
clc
int3
jb
div
cmp
popf
fyl2xp1
shr
cmc
and
loopne
das
test
xchg
sti
mov
bound
popf
ja
add
sarl
mov
sbb
rorl
sbbb
jbe
mov
shll
mov
xchg
pop
or
bound
sub
xchg
jns
pop
or
fs
xor
lret
pushf
mov
sbb
jecxz
jle
lods
lret
xor
fninit
fistl
adc
pop
clc
dec
push
adc
nop
cmp
sub
in
push
pop
fmuls
rolb
int3
pushl
fsubr
jns
loop
je
mov
mov
and
lds
adc
jno
sti
cmp
xchg
shl
lret
dec
sarb
and
imul
mov
ret
ret
repz
pop
lds
mov
call
mov
pop
pop
inc
imulb
jne
shrb
and
push
dec
into
sbb
cmp
inc
lds
daa
sub
out
aad
xchg
hlt
cmpsl
sbb
ss
test
or
sbb
rol
sbb
aad
mov
mov
nop
cwtl
pop
aad
mov
hlt
pop
jmp
push
fnstsw
mov
pop
xchg
push
push
cltd
xor
cld
inc
adc
add
stc
xlat
push
sbb
cmp
xchg
negb
test
call
and
add
inc
xchg
fadds
cltd
cmpsl
dec
cmp
jnp
push
repz
sub
hlt
popa
mov
repz
or
xchg
cwtl
sbb
lcall
pop
pop
xor
imul
enter
xchg
cltd
daa
aad
xchg
mov
stos
xchg
cmc
jb
pop
popf
push
cmp
rclb
push
adc
fs
push
imul
iret
int3
test
das
sub
mov
push
out
cltd
in
jg
sub
shlb
pop
cmp
adc
or
xchg
mov
ja
or
or
pop
mov
adc
nop
aaa
jns
mov
pop
out
pop
push
cld
jns
sub
mov
inc
rep
pop
shrb
cltd
das
rcll
add
mov
lock
loop
xchg
jae
push
lahf
sbb
mov
mov
dec
push
mov
jno
call
out
cmpsl
mov
cmp
cld
imul
fcom
inc
repz
hlt
scas
mov
mov
pop
notl
cmp
stc
xchg
xchg
pop
mov
fnstsw
push
ss
fs
jge
pop
aad
arpl
std
dec
mov
push
pop
push
idivl
push
fimuls
mov
push
or
cmp
mov
addr16
mov
jge
inc
cmp
inc
xchg
push
nop
adc
sarb
cmp
mov
out
or
addl
sbb
mov
pop
xchg
mov
rclb
mov
fdivs
mov
scas
mov
rclb
or
and
test
faddp
lret
xchg
in
repnz
dec
pop
and
or
jg
fs
ffree
out
popa
fistpl
mov
nop
enter
lret
faddl
shl
loop
dec
nop
mov
adc
jle
rorb
gs
popf
jne
mov
xchg
jle
xor
lcall
xor
mov
sbb
mov
jne
iret
jge
movsb
lret
fld
sarb
add
or
aaa
add
js
mov
mov
lds
mov
xchg
xor
inc
addr16
jb
inc
fisubs
push
shl
jns
and
pusha
xchg
lds
insl
aam
in
mov
sub
inc
outsb
stc
xor
mov
xchg
mov
cltd
jae
imulb
cmp
mull
test
adc
loop
rorl
repz
sti
mov
adc
hlt
inc
xchg
xor
pop
pop
add
ficoms
xor
stc
push
dec
cmp
insl
arpl
push
repz
cltd
pop
pop
add
aaa
push
pusha
pushf
gs
jns
inc
pop
in
cmp
sbbb
pop
test
ret
lret
movsb
cltd
jmp
dec
inc
jb
push
cltd
andl
adc
iret
in
xchg
cvtpi2ps
std
cmpsb
mov
mov
pop
mov
int
sub
testl
stc
lret
lahf
dec
mov
mov
jle
imul
stos
flds
ror
mov
mov
in
test
sub
shl
add
and
rcll
xchg
into
mov
sbb
jmp
add
loop
divl
add
fdivp
add
jb
popa
insb
pop
sarl
sti
mov
shll
in
or
sbb
aam
push
jle
push
add
sbbl
pushf
inc
inc
push
xchg
mov
add
pop
xor
cmp
mov
push
xchg
and
out
xor
jle
sub
xchg
cmp
lods
inc
xlat
push
jne
imul
data16
jle
jns
jno
sub
sub
out
imul
and
imul
les
push
adc
rcl
lock
cld
iret
fdiv
daa
mov
jge
rcll
testb
mulb
shll
sbb
add
outsl
push
xchg
into
dec
test
xchg
push
sub
lahf
push
jle
mov
fdiv
cmc
adc
sbb
xchg
push
mov
jne
aam
xchg
cltd
mov
je
xchg
push
cmc
ja
rcrb
movsb
jns
lds
cltd
inc
adc
inc
mov
gs
jg
adc
push
add
jnp
fsubrl
adc
call
xchg
fnstcw
xchg
faddp
jp
sbb
adc
out
pop
jno
mov
out
mov
test
in
mov
test
xchg
xorb
or
cltd
xchg
movsb
push
sbb
pop
lea
nop
js
rcl
hlt
movsb
mov
lret
xchg
lret
dec
aam
inc
shrl
arpl
xchg
pusha
into
in
int
data16
mov
mov
aam
fdivrs
mov
imulb
mov
jge
adc
shrl
or
shrl
add
inc
cltd
jle
insl
das
xchg
int
cltd
rorb
sbb
xchg
xchg
jbe
xchg
sti
adc
or
dec
into
mov
aaa
sub
xlat
jb
cld
or
jg
int3
cmp
jmp
xchg
pop
cmc
sarb
xchg
repnz
mov
mov
dec
out
mov
mov
pushf
ret
pop
rol
cwtl
popa
mov
jae
xor
jmp
xchg
jo
lret
in
or
xor
fldt
in
or
cmp
or
xchg
mov
mov
out
jae
sub
xlat
inc
test
sarl
fimull
mov
and
aam
bound
rorl
pop
sahf
fiaddl
jl
xchg
pushf
aad
rorl
xlat
inc
lds
mov
imul
cmp
aam
jne
pop
xor
call
movb
sbb
iret
mov
cmp
lds
neg
daa
enter
xchg
repz
fimuls
test
stos
pushf
int
jns
lds
ja
or
sub
xlat
imul
mov
mov
stc
pop
imul
mov
test
xchg
adc
pop
mov
in
popf
push
sbb
mov
xor
movsl
out
out
in
push
push
sub
fucom
mov
and
or
call
mov
fcoml
aaa
jmp
sar
jg
popa
add
das
leave
jl
jbe
popf
enter
or
xor
in
nop
adc
ror
sub
nop
xchg
decl
pop
hlt
lret
daa
mov
pop
ds
pop
xchg
sbb
rcl
shr
cli
pop
jnp
jl
push
pop
or
mov
adc
dec
inc
lea
adc
xchg
mov
sbbl
pop
icebp
leave
sarl
lcall
push
sarb
test
push
jecxz
xchg
divl
loope
movb
cmp
or
jno
xchg
rcr
sbb
in
mov
jbe
nop
fnstsw
mov
sar
out
jae
mov
cmp
pop
xchg
int
xchg
fcomps
lods
mov
std
mov
add
add
dec
push
mov
pop
sbb
mov
rorb
push
or
jnp
jno
jle
xchg
pop
dec
fiaddl
dec
xchg
mov
xor
addr16
cld
inc
jp
out
push
cmp
sahf
or
fisubl
rclb
popa
std
add
imul
fsubrs
movsl
jno
and
test
inc
jno
mov
jbe
addr16
adc
enter
imul
xchg
xchg
inc
stc
or
inc
jns
iret
pop
mov
clc
inc
daa
mov
add
rcll
jo
xlat
jno
sbb
mov
push
lea
pop
jae
jno
in
cmp
cmp
mov
jno
or
shl
xlat
xchg
adc
add
push
and
push
cmp
sar
ret
xchg
lahf
into
scas
mov
cmpb
push
mov
out
push
arpl
mov
js
add
inc
call
enter
into
popf
cmp
jl
xchg
iret
fidivl
repz
test
dec
adc
adc
dec
cmpsl
shlb
and
jle
hlt
arpl
fcoms
fisubrl
xor
lods
pop
cltd
pop
or
xchg
jmp
or
stc
xchg
in
stc
jne
xchg
pop
cmc
mov
cmc
imul
pop
shll
mov
cmp
add
xorl
cwtl
pop
push
xchg
cmc
dec
jbe
mov
dec
jne
je
or
imul
cmc
and
mov
push
imul
adc
add
cmc
dec
ljmp
shl
add
fnstenv
add
cltd
aam
sahf
pop
scas
mov
xor
xor
add
call
or
mov
jg
lret
push
orl
xchg
xchg
aas
inc
pop
jp
push
mov
jp
mov
add
push
insl
lret
outsl
sahf
mov
jp
shrl
dec
mov
mov
inc
lods
mov
sti
add
xchg
jle
push
sub
and
push
into
add
jns
jno
xor
cltd
pop
test
pop
add
cld
mulb
jns
jns
insb
or
jb
mov
dec
xor
outsl
mov
xchg
into
aad
xchg
mov
or
lret
shrl
xchg
sbb
or
mov
mov
cmpb
mov
shl
mov
repz
or
jb
das
jns
cmp
notb
mov
test
mov
stc
jmp
cmpb
loopne
call
fstps
in
adc
test
mov
sub
mov
pushf
scas
imul
jns
faddl
fs
pushf
loope
add
fstpt
out
cmc
fnstcw
hlt
test
push
inc
sarb
jb
add
push
push
sub
ret
popa
fbld
test
int
jns
dec
cwtl
sti
adcb
lret
cmc
adc
dec
mov
repz
mov
repz
test
xor
mov
adc
lea
lcall
test
mov
jb
cmc
stc
mov
jmp
dec
mov
adc
hlt
mov
fnstenv
push
pop
inc
cmc
sub
mov
sub
ja
jmp
mov
aad
loopne
das
jle
mov
outsl
jmp
add
adc
add
jecxz
push
rcll
fxch
aam
test
adc
addr16
mov
gs
outsl
mov
inc
adc
push
ret
fadd
cltd
movsb
xor
test
pop
cmpsl
inc
dec
push
dec
lret
daa
xor
sub
jle
in
jne
xchg
add
sbb
add
adc
pop
inc
dec
mov
push
popf
hlt
and
std
rcrb
pop
rclb
adc
mov
andl
lods
jae
sti
jecxz
pop
adc
lods
and
mov
xchg
cmc
stos
loope
sbb
add
cltd
lds
xor
rcl
or
ds
jl
cltd
sarl
fsts
es
iret
mov
push
gs
pop
push
and
dec
add
mov
movsb
popf
xor
add
lds
movsl
lahf
push
outsb
ja
jle
xchg
push
fstps
mov
out
add
sub
xchg
xor
sarl
iret
addr16
pop
push
or
push
int
fnstcw
jno
bound
pusha
call
loop
mov
mov
negb
add
lods
fcoml
pushf
mov
movsb
add
out
in
pushf
inc
cli
faddl
cli
in
add
loop
sbb
popf
sbb
adc
cmp
xchg
outsb
mov
mov
dec
pop
mov
cltd
mov
sub
filds
pop
cmp
ss
add
pop
js,pn
scas
pop
out
ljmp
cld
iret
fincstp
push
jns
stc
lret
fs
nop
cltd
lock
mov
popa
cltd
loopne
outsb
mov
sub
stc
loop
in
sahf
faddl
pop
gs
outsb
es
fbld
icebp
rol
or
dec
das
flds
rolb
data16
push
nop
icebp
jns
iret
jle
flds
lods
test
xchg
fdivs
jg
sub
sbb
fisttps
mov
mov
sbb
fwait
aad
and
push
nop
lods
jae
dec
jnp
je
jbe
sti
lret
imul
or
cltd
jle
mov
out
jae
femms
ss
fldcw
jbe
idiv
imul
push
filds
leave
xchg
lret
fsubrs
push
inc
int
cmpsl
mov
ss
jbe
jns
mov
mov
sbb
mov
rclb
rorb
sbb
jbe
jle
jg
ljmp
sub
xchg
mov
sbb
ret
outsb
jl
jns
dec
test
mov
ret
jecxz
jle
ss
lret
sbb
xlat
shll
std
xchg
cmp
inc
stc
xor
shlb
clc
pcmpeqd
js
add
clc
mov
push
push
test
sbb
frstor
stc
mov
push
shlb
lahf
cmp
jecxz
pop
lods
cmp
adc
shl
push
pop
loopne
test
inc
cmp
mov
xor
jecxz
xor
ja
test
adc
sbbl
mov
out
and
mov
pop
leave
add
cmpsb
out
fmuls
or
iret
out
and
push
xchg
and
jns
push
scas
stos
dec
mov
sbbb
jns
adc
add
pop
pop
cmc
add
add
sub
xchg
imull
in
clc
or
adc
sub
pop
in
dec
in
fnstenv
addr16
xchg
push
loope
imul
cltd
push
mov
fcom
jo
or
scas
divl
imul
xchg
xchg
popa
mov
inc
ds
mov
mov
jns
icebp
test
scas
mov
cmp
and
in
fwait
cld
mov
fcomps
pop
pop
pop
inc
aam
mov
xchg
mov
loop
xor
leave
mov
imul
jl
lods
add
pop
lret
mov
or
stc
jns
ja
dec
fstps
xlat
aad
xchg
cmp
cmp
cwtl
sbb
clc
adcl
scas
jecxz
stc
adc
xchg
push
jb
loop
repz
pop
adc
xor
repnz
jmp
jp
xchg
out
lret
pop
mov
mov
push
mov
jne
xlat
xchg
push
vsqrtpd
adc
jl
cmp
jmp
frndint
or
push
ja
jecxz
mov
rcrl
ffree
in
push
lcall
popa
lock
flds
inc
int
sbb
lea
jb
jecxz
fisttpll
jae
lds
bnd
mov
imul
int
adc
adc
int3
mov
push
xchg
jno
sub
adc
std
lds
pop
xchg
outsl
imul
std
jne
imul
xchg
add
mulb
mov
xchg
cmp
xchg
test
sub
xchg
xchg
pop
imul
fiadds
push
repnz
rcr
iret
push
cld
stos
xchg
push
test
aas
or
xor
xlat
rolb
mov
xlat
xchg
adcb
mov
cltd
pop
push
shlb
in
jnp
inc
adc
rolb
adc
test
imul
adc
mov
hlt
into
repnz
push
sbb
and
dec
imul
mov
test
cmp
lods
test
daa
xchg
repnz
xlat
pop
sub
and
movl
cld
or
pop
ds
cmpsb
sub
shrb
lock
push
push
fstl
rorl
push
loopne
lds
cmp
frstor
xchg
or
jb
out
sub
push
mov
or
cltd
inc
push
lahf
int
stos
or
hlt
loop
adc
adc
jbe
pop
or
repz
test
or
sub
push
push
pop
es
xchg
push
sub
lock
sahf
and
daa
movsb
lock
dec
in
fldenv
ja
vmovd
popf
out
push
inc
jne
mov
xchg
flds
xchg
imul
push
das
mov
test
hlt
sbbb
dec
and
sub
cmpsl
jg
das
inc
cs
xchg
rcll
imull
and
in
aad
mov
jbe
mov
xor
nop
adcl
inc
mov
pushf
movsl
add
xchg
test
clc
inc
cmp
mov
or
lds
dec
jns
xchg
stos
leave
int
addr16
adc
fisubrl
adc
push
xchg
adc
aad
stos
enter
rcrb
xchg
push
jle
movsb
rol
fcmovu
mov
push
mov
jnp
daa
sti
call
xor
fmul
xchg
xchg
and
imul
ficoml
addr16
mov
jb
push
mov
cmp
fnsave
es
xlat
adc
or
jp
mov
enter
mov
lods
xchg
rcrl
testb
add
add
xchg
imul
jp
fcoms
clc
lods
fildll
loop
inc
cmp
outsl
or
mov
xchg
adc
leave
jns
jns
imul
push
cmp
lds
mov
rorb
jnp
fdivs
sbb
inc
adc
adc
mov
stc
fnstcw
or
pop
leave
jg
arpl
xor
insb
and
cmp
jmp
pop
pushf
cmp
cmp
and
in
pusha
xchg
cmp
and
mov
jns
pushl
adcl
jb
enter
cmp
dec
andb
dec
pop
fidivrs
mov
adc
lret
jg
popa
adc
adc
rolb
out
or
mov
cmpsl
mov
push
mov
push
jmp
or
repz
dec
add
mov
mov
loop
xchg
mov
cmc
push
dec
push
stos
ret
push
imul
mov
xor
mov
loop
mov
lea
stc
aam
jbe
pop
add
add
stos
jge
mov
xchg
xlat
mov
or
sbb
movsb
xchg
mov
je
xchg
push
push
or
pop
stc
rolb
mov
notb
adc
jne
stos
fistpl
shl
aam
sub
jmp
pop
into
sbb
mov
push
out
cwtl
gs
adc
imul
pop
dec
dec
xor
jae
jne
incl
pop
js
popf
std
or
cwtl
addr16
lock
mov
stos
in
int
decl
aad
ja
or
ja
adcb
lods
xchg
inc
xor
lods
lock
jo
cmp
cltd
sub
add
mov
loop
inc
daa
loopne
cmp
loop
jo
lock
loop
xchg
enter
push
mov
and
lods
lock
enter
add
imul
loope
mov
push
xchg
pop
pop
push
mov
insb
jnp
pushf
cli
or
js
mov
jle
shlb
test
es
cmc
xor
mov
jnp
sbb
sbb
sbb
push
xchg
pop
add
sub
pop
stc
repnz
add
rcll
xlat
jo
push
pop
sub
test
sub
sub
int
mov
and
jle
jbe
vpmaddwd
aad
mov
adc
mov
and
adc
jge
cmp
int3
mov
fucomp
in
das
push
loopne
xor
mov
cmp
jmp
add
ret
out
xor
ds
push
cli
es
sbbl
xlat
push
push
das
sbb
addr16
pop
adc
xlat
leave
dec
mov
jns
test
push
scas
xor
cmp
cmp
mov
xlat
dec
mov
pop
mov
mov
mov
push
scas
add
sub
push
into
outsl
push
movsb
lret
call
or
push
cmp
or
mov
std
hlt
out
stos
clc
jbe
aam
xrelease
stc
popf
cmp
out
adc
sbb
clc
cs
jl
dec
xchg
imul
or
aam
push
mov
aad
test
mov
imul
mov
out
shl
xchg
adc
ja
mov
mov
mov
add
aad
add
jmp
ret
push
les
push
stc
cld
jmp
pop
adc
nop
adc
push
outsl
or
outsb
int
push
sbb
dec
xlat
enter
xchg
repnz
inc
add
push
rcll
divl
loopne
sub
add
xor
out
mov
xor
pop
scas
fsubrl
pop
add
and
clc
mov
lock
dec
sbbb
or
mov
movsb
push
les
out
xchg
sbb
xchg
mov
cmp
cmc
sub
pop
xchg
enter
jg
cltd
mov
cmp
fcomp
push
xchg
hlt
cmc
mov
inc
lock
add
mov
dec
shlb
jno
cltd
std
sarl
repnz
mov
sahf
ljmp
fimuls
or
xor
and
jb
sbb
cmp
enter
push
push
inc
iret
nop
dec
pop
js
ds
sarl
xchg
int
lcall
mov
mov
inc
adc
shlb
out
mov
clc
repnz
nop
mov
fsubp
mov
notl
fstpl
in
cmp
leave
div
stc
in
shlb
mov
and
inc
lahf
xchg
mov
iret
dec
dec
adc
or
push
xchg
not
pop
hlt
adc
inc
jge
xor
ret
adc
fisubrs
mov
add
xchg
lret
hlt
aas
rorl
adc
iret
scas
push
push
in
insl
sahf
mov
dec
cwtl
cs
testb
out
or
push
pop
sarl
mov
mov
adc
xlat
lock
push
scas
rolb
je
sarb
stc
aaa
stc
rclb
hlt
or
mov
cltd
outsb
shll
pop
ror
pop
pushf
mov
andl
shlb
adc
dec
sub
shll
fidivl
push
kmovb
stc
sub
mov
or
int3
sbb
xchg
je
mov
imul
jge
testl
xlat
add
push
mov
stos
push
call
sub
xlat
sub
pop
xchg
push
mov
cmc
pop
mov
out
push
sbb
pop
fimull
rclb
jecxz
orb
in
not
sbb
das
leave
lret
mov
inc
loope
jle
lds
leave
orl
cmp
sahf
out
adc
sbb
mov
mov
out
dec
stc
fldenv
pop
and
cmp
adc
jb
pop
push
xor
cmp
mov
and
cs
sub
fwait
dec
int
loopne
clc
arpl
mov
inc
and
mov
push
mov
lds
leave
xor
out
daa
mov
push
insl
xor
inc
xchg
inc
mov
mov
pop
or
popf
mov
mov
in
fs
bound
into
mov
bound
mov
sbb
shrl
cltd
cltd
rol
lock
call
inc
inc
cwtl
insl
cmpl
sahf
inc
insl
cli
dec
fbld
insl
cmp
cmp
iret
xor
scas
test
xchg
pop
add
arpl
loop
imul
in
aam
movl
es
or
outsb
pop
dec
dec
pop
jno
add
mov
cmpsl
push
lods
insb
mov
add
push
shll
in
cs
push
mov
mov
mov
iret
xor
mov
clc
cmp
xchg
dec
flds
mov
cmp
push
xchg
push
sbb
xlat
addr16
cmp
rclb
adc
rorb
lret
add
xor
xchg
add
pop
pop
jb
je
outsl
gs
ret
sbb
fnsave
jns
xlat
jns
xor
shll
inc
imul
jne
andl
or
jnp
push
push
mov
or
xor
pop
push
rcrb
lcall
pop
das
hlt
outsb
dec
adc
mov
mulb
add
movsb
cltd
into
adc
cwtl
out
addr16
inc
test
cltd
movzwl
sub
call
pusha
lock
ja
fwait
ret
ret
sub
pop
push
pop
dec
mov
push
pop
out
jns
mov
sub
in
iret
outsb
jns
sub
xchg
stc
lret
dec
rcrb
outsl
aad
xchg
xchg
add
jbe
clc
dec
mov
mov
and
add
xor
mov
jge
mov
fmuls
cld
movsb
test
xchg
lods
jbe
ljmp
inc
push
pop
mov
out
or
dec
paddsw
ds
sub
cmpsl
push
jns
and
fdivr
sarb
test
sub
cld
hlt
inc
data16
adc
rolb
repz
mov
mov
cmp
add
adc
mov
test
aad
jns
ds
test
sub
jge
icebp
lods
jbe
or
xchg
pop
ficoms
jbe
jmp
fsubrl
jns
fimull
sub
in
mov
enter
or
push
sbbl
mov
testb
enter
xchg
adc
dec
cltd
icebp
repz
dec
fs
je
int3
fs
jmp
mov
test
test
add
pushw
mov
cmp
repz
jmp
fnstenv
xlat
xchg
xorb
or
add
sarb
ja
daa
adc
mov
xchg
call
inc
or
dec
aam
lret
repz
mov
cwtl
popa
mov
push
iret
mov
popa
add
lds
xchg
push
test
repnz
into
cmp
push
push
and
jp
test
fnsave
ja
imul
scas
or
insl
icebp
mov
dec
pop
ja
xlat
test
movsl
mov
push
aam
push
adc
mov
push
add
add
sub
pop
lret
sub
inc
cmpsl
gs
dec
cmpl
ret
imul
aad
jb
mov
shl
imul
add
aad
cmp
mov
out
jne
stos
xchg
add
pusha
sbb
or
adc
outsb
dec
push
aas
and
push
clc
addr16
cmp
jecxz
sbb
lock
fistpl
or
shlb
fstps
repz
lret
stc
pop
lret
cmp
fadd
outsb
pushfw
cwtl
fldenv
lret
imul
jns
xor
mov
imul
arpl
xor
pop
cwtl
rcrb
sbb
aad
push
imul
in
lret
pop
icebp
or
dec
fmul
mov
imul
adc
jae
adc
jbe
roll
push
cwtl
jg
ret
aad
adc
cmc
test
sub
daa
mov
rcll
pop
cmpsl
jno
mov
and
lds
sti
pop
jbe
jecxz
and
lret
sub
jae
mov
inc
pop
neg
lock
cmpsb
popa
mov
f2xm1
jae
jno
push
ja
dec
stc
clc
jbe
jge
jns
test
pop
cltd
addr16
shlb
hlt
mov
fldcw
testb
push
or
ds
rorl
xchg
xorl
jbe
hlt
pop
jno
xchg
das
ss
mov
add
arpl
sbb
jns
fcoms
repnz
cmp
aad
cs
roll
lock
addr16
clc
js
test
popa
cli
dec
mov
in
stos
popa
jge
pop
sub
inc
xchg
gs
in
lea
insl
jno
test
lea
rorb
repz
xchg
leave
ja
flds
sub
inc
push
push
int
fmull
push
popa
xchg
lock
jle
movsl
jne
bound
push
bound
mov
js
aad
pop
push
rolb
mov
lret
xchg
lock
imul
inc
subb
and
adc
inc
incb
mov
mov
cmp
or
mov
pop
fmuls
ficoml
mov
lds
add
cmpsb
adc
hlt
pop
mov
inc
xor
push
enter
repz
leave
neg
mov
or
pop
mov
cs
or
cwtl
dec
leave
iret
gs
sub
cltd
popa
aad
loop
sbb
shlb
sub
sub
mov
div
inc
adc
pop
andb
das
cmc
inc
xor
leave
loop
jne
mov
push
fidivrl
jl
push
data16
dec
xchg
jnp
inc
in
imul
imul
repz
jae
arpl
jbe
rcrb
ror
add
clc
sbb
pop
in
movsb
les
push
sub
fyl2xp1
cli
out
inc
jo
and
rcll
orl
add
leave
jmp
push
sbb
imul
jb
enter
add
sbb
mov
out
icebp
addl
push
and
sub
jmp
xchg
cltd
xchg
mov
sbb
fcoms
outsb
sub
cmc
out
repnz
outsl
or
mov
mov
out
sbb
jge
loopne
push
sti
or
xlat
xchg
inc
fwait
xor
jb
and
and
pop
ss
test
aad
push
loopne
rorl
cs
imul
into
dec
push
notb
add
shl
inc
mov
cmc
push
pop
sbb
jns
gs
testb
xor
mov
dec
inc
pop
dec
push
push
pop
sub
adc
dec
and
or
mov
mov
inc
andl
fistpll
pop
push
pop
inc
sub
loopne
jecxz
call
rolb
notb
je
mov
sbb
ret
cmp
sub
ja
scas
push
int
cltd
dec
fcompl
rclb
mov
repz
xchg
push
push
cld
movsb
decb
fisubs
lds
shl
std
or
adc
jle
aas
repz
es
mov
iret
sub
inc
or
lods
add
stc
lea
push
mov
and
incb
xchg
cmp
cmp
jp
add
dec
arpl
push
sbbl
test
cmp
iret
inc
or
mov
cld
mov
cmc
push
shlb
fmull
call
push
lds
andl
jle
fstps
shrb
pusha
test
or
popa
mov
int
pop
insl
pop
pop
cmp
lahf
jne
lret
push
loop,pn
cwtl
inc
push
adc
aas
and
cmp
cltd
dec
lahf
out
pop
cltd
cmp
lret
daa
out
xchg
cld
cwtl
ja
sbb
add
push
mov
leave
push
inc
je
into
ret
xchg
jnp
test
cld
and
sub
call
divl
xor
mov
xor
rcrb
add
sbb
pop
cmp
out
mov
mov
mov
divl
daa
and
ds
dec
inc
stc
fsubrl
push
dec
adc
sub
adc
and
push
pop
fs
icebp
aas
push
dec
lret
cmp
cmp
dec
jmp
mov
push
push
ds
aas
mov
rorl
add
outsl
popf
test
sbb
dec
inc
hlt
or
pop
xor
and
es
hlt
neg
xor
xor
dec
lds
test
and
lahf
sti
jle
jae
loopne
call
dec
mov
mov
clc
iret
fxtract
test
test
clc
jmp
lret
xor
sarb
inc
loopne
mov
mov
rcll
jno
movsb
cltd
sbb
jne
push
or
aad
cmp
dec
xchg
xchg
das
mov
lcall
mov
aam
cmc
loop
pop
aad
mov
mov
push
cmp
mov
fld
fildl
iret
lock
xor
push
xchg
shll
scas
sbb
or
lds
mov
out
mov
imul
add
stos
inc
xchg
dec
xlat
out
addr16
or
lds
adc
lods
cmc
lea
rorb
movsb
mov
in
xchg
aam
lcall
mov
inc
xchg
mov
sbb
mov
dec
js
mov
cmp
cld
sarl
mov
sub
mov
cmpsb
clc
mov
test
lret
or
leave
test
stos
ret
and
cltd
jns
pop
mov
mov
in
aaa
push
divb
repnz
test
fsubr
cltd
ds
mov
gs
pop
fsts
vmovntdq
dec
sbb
pop
mov
lret
hlt
cmpl
rol
jge
mov
xchg
pop
cltd
rcrl
push
fcoms
rcrl
mov
xchg
xchg
cmc
jns
and
pop
stc
mov
rolb
dec
std
adc
push
inc
in
stc
aad
cli
jmp
push
in
adc
or
adc
arpl
sarl
push
jnp
add
mov
frstor
or
lret
jmp
adc
jns
imul
sub
mov
add
imul
loope
xchg
sub
add
fdivrs
jp
js
imul
in
push
out
stc
adc
lahf
or
mov
add
cltd
outsb
or
shrb
sub
clc
or
mov
jbe
int3
pop
adc
data16
sar
test
cmp
add
scas
in
aad
popa
jge
mov
shll
inc
stc
adc
arpl
jnp
cmpl
aad
subl
lds
sbb
xchg
jno
hlt
jae
not
or
xchg
je
rorb
lret
jg
cmp
mov
mov
bound
fnsave
xchg
or
xor
jle
or
mov
dec
adc
lahf
fadds
push
jge
loopne
xlat
iret
mov
or
sbb
adc
or
mov
fnstcw
push
xor
jmp
insl
push
cmc
xchg
jo
jecxz
inc
or
inc
aam
adc
jbe
mov
dec
mov
jbe
mov
dec
xchg
clc
push
mov
push
jg
xchg
add
or
aaa
dec
cmp
jp
or
fidivrl
cmp
push
fisubrl
xor
jbe
lahf
arpl
orb
and
dec
rcrb
jbe
jg
bound
imul
inc
mov
jo
mov
arpl
rol
jb,pt
shr
dec
ret
xchg
cmpsl
xchg
js
lods
sarl
jae
into
sbb
sub
stc
inc
loopne
iret
adc
sbb
mul
ja
daa
imul
aam
xchg
mov
outsl
sti
mov
ror
jp
xchg
sar
shlb
jg
sahf
xchg
sbb
xor
adc
lock
sti
mov
cmp
cltd
pop
fcom
pushf
mov
mov
cmc
cmpsb
jns
mov
push
nop
pop
adc
mov
lds
stc
xchg
push
sub
xlat
mov
push
adc
fnstcw
shrl
push
movd
jbe
jbe
decb
aaa
notl
mov
stc
cmpsb
push
adc
jmp
cltd
insb
pop
dec
mov
leave
or
xchg
es
xchg
stc
mov
or
mov
rorb
xchg
cltd
mov
aad
mov
add
shl
shll
sbb
cmpsb
xchg
mov
jbe
test
add
xor
testl
xchg
xchg
pusha
sub
rcl
enter
aaa
mov
xchg
sbb
xchg
ss
and
xchg
adc
xlat
in
xchg
mov
mov
sub
hlt
mov
push
notl
mov
xor
out
xlat
sub
and
repz
idiv
shrl
adc
fnstenv
xor
sbb
aaa
aam
repnz
cmp
imul
mov
test
shll
js
mov
std
mov
rcrl
xchg
sarb
ja
mov
xlat
mov
mull
out
add
incb
je
push
rorl
shl
jp
lcall
mov
mov
push
ja
ss
fcompl
sbb
mov
mov
and
jae
fcompl
xchg
iret
iret
jnp
dec
xchg
cltd
iret
fxch
mov
test
mov
jbe
cli
dec
or
std
add
cld
push
std
and
and
xchg
sbb
jno
ss
jg
imul
repz
enter
push
insl
and
popf
dec
jl
stos
das
roll
stc
call
jl
or
xchg
dec
cmc
call
stc
enter
test
xor
in
jge
faddl
cmp
dec
lds
or
xor
xor
sbb
test
add
clc
movsb
adc
addr16
call
push
sub
add
and
xchg
enter
std
in
and
adc
lahf
das
pop
jo
test
mull
aad
aas
cltd
push
fsubl
add
sub
push
daa
sub
das
pop
cmp
test
jno
sub
jl
and
pop
sbb
adcb
testb
sub
or
sar
std
int
jo
rol
xor
cltd
fwait
aam
hlt
or
and
and
cmp
insb
xlat
or
pop
shrl
fidivrs
ljmp
aad
loope
jno
mov
pop
rcrl
cmp
sarl
int3
or
out
mov
xchg
mov
xchg
leave
or
rorl
test
xchg
xchg
pop
and
cltd
sbb
stc
jo
int
mov
or
int3
in
adc
or
test
push
test
shll
xlat
xchg
jge
cmp
bswap
movsl
xchg
mov
cmpsl
popf
add
jne
scas
mov
cmpsb
push
xor
test
shr
mov
mov
popa
test
pop
fucomi
mov
push
enter
rorl
dec
lock
imul
cltd
daa
cmp
pushl
mov
js
sub
data16
rclb
in
lahf
or
addb
and
cld
aam
repnz
in
repz
fnstsw
mov
sub
shll
fldcw
scas
fldt
shl
daa
adc
mov
xchg
sbb
xchg
or
dec
mov
jl
test
cwtl
sbb
daa
jne
xor
movsb
hlt
aad
jge
cmp
cmpsb
add
push
xor
dec
jmp
fwait
and
sarb
cmp
stos
sub
jecxz
or
daa
fisubrl
mov
lret
leave
leave
shll
fstpt
sbb
add
or
adc
call
sar
xlat
lahf
scas
fcomps
cltd
das
or
xlat
and
ror
imul
je
or
push
sbb
or
fsts
or
adc
inc
mov
xchg
sbbl
jl
scas
sub
sub
sbb
aad
bound
loopne
test
stc
es
insb
test
jb
cltd
jb
jns
sbbb
cmp
sbb
jns
push
ds
inc
push
jns
sar
mov
jae
add
push
test
inc
or
mov
mov
cld
and
sbb
dec
or
add
and
mull
push
faddl
pop
jnp
and
xchg
popa
xchg
test
dec
jb
add
dec
jb
icebp
mov
dec
jb
loope
sub
daa
adc
jae
dec
pop
int3
fdivs
inc
loope
out
cs
xchg
negb
popf
cmp
sbb
clc
fadd
jle
mov
sarl
or
cmp
push
push
sub
and
fldl
pop
scas
psrlw
mov
popf
or
mul
fnstsw
leave
fld
cmp
mov
aam
leave
jns
mov
pop
cmp
add
inc
add
sbb
clc
imul
and
fisubl
xlat
xchg
add
decl
push
icebp
sbb
xor
jecxz
xlat
loop
imul
xchg
mov
pop
fidivrs
xchg
fucom
stos
test
push
mov
sti
sub
jns
lods
pop
push
je
inc
shr
test
mov
jbe
les
xorl
lahf
into
aaa
adc
cmp
movsl
xor
popa
cld
push
jno
push
sbb
das
xchg
mov
nop
loope
test
sbb
push
push
cmp
and
push
xor
add
lods
xor
add
dec
jmp
cmpsl
loopne
xchg
bound
mov
movsb
inc
pop
hlt
in
rol
push
dec
cli
or
dec
repnz
outsl
xor
iret
xor
sub
mov
mov
outsb
lret
imul
and
imul
mov
xchg
and
sbb
sub
jmp
xchg
filds
sbb
or
ja
push
mov
sub
enter
stc
gs
sbb
or
adc
jg
push
cltd
jle
sub
repz
or
in
cmp
adc
jno
je
stos
mov
or
cli
dec
and
call
jl
scas
scas
mov
sti
or
push
xor
adc
push
insb
cmp
scas
and
jae
or
jg
and
repnz
addr16
cwtl
dec
jns
push
jbe
mov
xor
je
mov
shll
xlat
aaa
repz
or
push
sub
push
sbb
enter
aaa
ret
stos
arpl
fdivs
repz
mov
ret
mov
cmp
jb
test
cmp
stos
je
cli
icebp
mov
or
lds
fistpl
or
ror
push
dec
jb
push
inc
or
std
cwtl
sub
mov
xor
xor
cld
mov
sub
jo
push
pop
repnz
cmp
mov
add
shrl
add
xchg
mov
xchg
rclb
adc
stc
push
addl
dec
xchg
push
or
xchg
in
jecxz
push
divb
jae
mov
dec
dec
and
add
lds
jne
inc
dec
push
shll
jle
rol
fnsave
and
or
outsb
loope
std
ja
and
sub
bound
xor
mov
cmp
sarb
mov
sarl
stc
or
lahf
or
out
xchg
inc
dec
out
sbb
jb
add
cld
cmp
add
in
sbb
pop
or
mov
lret
jns
out
cmc
fisubl
bound
mov
jno
lahf
and
jns
mov
xchg
mov
cmp
and
lock
pop
loop
popa
pop
xor
fdivs
outsl
jg
fs
xchg
in
fnsave
adc
repz
sbbl
dec
xchg
testb
je
or
mov
ja
imulb
push
jecxz
cmc
clc
testl
fsubl
aam
outsl
es
xlat
push
sub
outsl
xchg
loopne
or
int3
mov
and
bound
leave
jb
mov
mov
add
rorb
outsl
hlt
in
inc
clc
sbb
xchg
adc
xlat
stos
sbb
subb
cmp
adc
dec
cmp
mov
add
nop
adc
mov
add
lret
inc
in
fldt
sbb
clc
cld
adcl
cmpl
pop
rcrb
lret
pop
fildl
call
test
mov
jecxz
pop
hlt
cwtl
cltd
shrb
pop
sbb
xor
cwtl
mov
push
inc
bound
dec
int3
push
pop
push
int
push
add
mov
sbb
or
or
insl
scas
in
lret
mov
ret
dec
mov
gs
mov
add
les
sub
loope
inc
push
iret
jecxz
adc
out
rcr
push
sub
cltd
add
mov
scas
pop
leave
mov
clc
out
popf
bound
iret
and
inc
inc
cmp
pop
sarl
test
fisubrl
jae
rclb
nop
popf
cltd
pushf
lret
sbbb
test
dec
mov
daa
ret
fnstcw
mov
push
jp
es
test
or
or
push
std
sub
xchg
jno
aam
sti
rorb
pop
inc
mov
lods
xchg
mov
clc
rcl
cltd
add
ds
out
test
push
jb
sbb
shl
cltd
jbe
dec
stos
shl
xchg
mov
mov
pop
inc
jns
lret
in
jb
xchg
sub
cmp
xchg
xchg
cmp
sarb
cmp
sbb
adc
ja
mov
fimuls
adc
sbb
fwait
jg
nop
cmp
cmpsl
mov
pop
cmp
pop
sbbb
fistpll
aad
dec
push
cltd
sbb
sbb
ss
dec
sub
stos
out
jl
jl
scas
mov
push
out
mov
push
out
add
das
jecxz
jge
sbb
sbb
pop
aad
movb
sbb
bound
xor
cmp
pusha
nop
test
aas
pop
push
inc
jne
cs
add
addr16
insb
cld
jns
fdivrp
pusha
bound
cmp
push
out
xchg
jp
adc
or
nop
fildll
and
inc
mov
pop
xlat
mov
lds
outsl
push
ror
js
hlt
xchg
jns
rolb
outsl
pop
test
or
push
push
sbb
mov
test
sti
xor
stc
push
repz
cld
dec
test
int
sub
xchg
mov
dec
dec
test
push
push
clc
push
and
loope
pushf
inc
mov
mov
and
jns
fadd
lods
lret
sti
cwtl
repz
cmc
dec
mov
mov
jp
adc
lcall
mov
xchg
std
mov
gs
leave
jle
test
or
in
ret
cmp
stos
push
rclb
dec
cltd
add
add
addr16
dec
or
and
add
lret
ja
jno
jb
xchg
sar
jl
pop
fadd
gs
xchg
stos
mov
dec
push
xchg
sub
rclb
mov
cmp
mov
and
dec
in
sub
xor
or
testb
xor
add
mov
dec
inc
aam
icebp
add
xchg
repnz
xchg
jb
inc
lret
mov
jecxz
out
push
imul
mov
sub
mov
and
into
daa
ds
dec
sub
pop
or
adc
shrl
pop
shr
sub
add
jbe
rcr
aas
push
dec
pop
lea
test
lea
add
jecxz
aam
ficompl
xchg
push
dec
fists
add
fildll
std
and
icebp
push
mov
fincstp
aam
pop
sbb
sbb
nop
fistpl
cltd
mov
leave
mov
xchg
mov
dec
fnstcw
ror
cltd
push
mov
adc
jb
mov
fcompl
xlat
sub
add
stc
ss
sub
lahf
inc
inc
jne
mov
xchg
leave
jmp
jmp
inc
mov
int3
clc
clc
push
sub
ffree
js
aam
mov
test
pop
xlat
sbb
cmp
add
dec
cmp
cmc
cmp
push
repnz
mov
cmc
xor
inc
loope
xchg
push
inc
xchg
mov
and
inc
sbb
inc
lahf
or
push
popf
or
mov
xchg
aaa
pop
cltd
dec
cmp
pop
orl
aad
sub
fldl
jp
inc
je
roll
add
faddl
pop
inc
stc
clc
and
jnp
sar
mov
rorl
xor
add
outsl
xchg
test
mov
shrb
insb
shlb
pop
insb
divl
test
push
out
add
jb
mov
call
out
fidivl
sbb
inc
mov
jo
mov
cmpb
aas
mov
jle
adc
out
scas
imul
lock
push
dec
shl
or
add
push
daa
fdivrs
leave
cmpsb
sbb
ds
push
adc
jbe
dec
mov
cltd
or
xchg
mov
fisubrl
leave
xchg
xchg
add
les
lret
and
clc
adc
mov
lock
in
negl
pop
inc
or
aad
dec
sbb
xchg
xchg
and
dec
jae
ror
xchg
jg
mov
aad
xor
mov
dec
out
dec
insl
inc
mov
xchg
in
dec
insb
sahf
push
lahf
test
loop
cmc
cmp
addl
push
int
mov
adc
repz
rol
pop
dec
xchg
shl
or
icebp
enter
cli
xlat
lret
mov
out
xor
jmp
idivb
or
cltd
or
pusha
fbld
jle
int
inc
push
int
pop
repz
mov
shr
add
aas
cmp
cli
or
add
mov
pop
jge
xchg
fbld
fistps
call
adc
in
insb
dec
lret
shrl
lcall
aad
jae
mov
mov
test
cld
adc
std
mov
sbb
or
pushf
fcompl
add
lret
and
movsb
ljmp
push
sbb
jno
dec
fldl
in
add
std
out
repz
mov
push
xchg
xchg
repz
or
jae
inc
insl
test
clc
fcomi
push
inc
pop
in
sahf
push
flds
in
out
neg
inc
lods
adcb
jmp
in
mov
xorb
cld
cmp
jmp
repnz
stc
xchg
adc
stc
hlt
test
testb
mov
nop
inc
lcall
xchg
cmp
shl
or
aad
sub
push
loop
cmp
dec
loopne
pop
mov
sub
and
frstor
cmp
mov
mov
sbb
divb
mov
aam
and
andb
out
shl
adc
add
add
push
jmp
loope
jge
rclb
orl
jbe
jp
es
mov
lcall
mov
loopne
loopne
js
call
xchg
rcrb
xor
ja
jp
xlat
subb
mov
xchg
mov
dec
out
cmp
push
mov
enter
xor
aam
shll
repz
add
in
pop
sbb
push
lods
pop
mov
mov
nop
shrl
popa
mov
adc
mov
flds
outsb
stc
push
loop
mov
mov
jo
gs
dec
xchg
and
shrb
adc
adc
rolb
inc
mov
push
mov
mov
and
insb
inc
jecxz
sub
stos
test
lds
push
adc
sub
mov
push
jo
adc
test
jge
lods
ja
jns
pop
xchg
mov
dec
arpl
jle
push
imul
lods
jp
shrb
xor
mov
enter
fstpl
cmp
cmp
mov
xor
and
jg
mov
mov
or
sbbl
outsl
and
mov
sbb
jbe
movsb
cmp
add
push
cltd
notl
je
xchg
jle
aad
outsl
sbb
pop
xlat
leave
mov
push
mov
stos
ret
adc
and
mov
jns
cmp
fstps
xor
xor
insl
js
and
fldl
out
xchg
cmp
into
lahf
inc
test
shll
cltd
not
les
push
repz
pop
int3
mov
das
shrb
jo
lods
xor
std
icebp
or
inc
ret
out
xchg
adc
pop
insb
ret
and
sub
in
fstp
push
dec
mov
loop
push
dec
lock
hlt
loope
movsb
mov
mov
lock
imul
sub
movsl
imul
push
rcrl
and
out
fmull
imul
lret
pop
mov
pusha
test
cmc
daa
and
xor
test
icebp
xchg
stc
sub
and
pop
add
sbb
rol
and
mov
das
imul
test
dec
push
fadd
inc
or
das
xchg
pop
fmuls
aad
sub
movsb
fwait
jns
push
stc
sti
cli
mov
sbbl
cmpsl
jo
repz
repnz
push
shl
xchg
rolb
popa
mov
push
sub
adc
out
hlt
add
sbb
aas
push
mov
fnstcw
add
sbb
mov
push
shll
jne
mov
adc
push
sub
xchg
xor
or
cmp
out
cwtl
xor
add
clc
inc
das
outsl
pop
and
mov
xor
and
jle
adc
sbb
add
hlt
xchg
fcoml
push
clc
and
sbb
pop
mov
and
outsl
mov
mov
imul
xor
or
push
adc
adc
mov
test
push
mov
lahf
and
push
push
aad
dec
ffree
xor
lods
mov
pop
push
adc
cltd
add
inc
xchg
sar
or
sti
test
cwtl
mov
out
jb
lahf
push
mov
imul
stos
adc
adc
push
shlb
mov
clc
rorb
aam
and
jmp
fistpll
notb
sarb
fucom
jae
rclb
mov
adc
ds
stc
mov
decl
pop
inc
mov
adc
lock
shll
inc
add
push
fwait
dec
pop
cltd
push
mov
xchg
rorl
jg
pop
fdivrs
jg
shlb
fcmovnbe
insb
std
fildll
push
imul
inc
push
cmp
popa
pcmpeqd
call
dec
adc
sbb
sbb
mov
xchg
add
jmp
cmp
jnp
inc
aas
add
jecxz
push
adc
jle
mov
in
sbb
fiaddl
leave
rol
std
aad
jno
inc
jns
cmc
mov
mov
test
adc
mov
in
jne
mov
pushl
sbb
pop
fdivs
js
xchg
fcmovnu
mov
sub
jno
inc
addr16
fs
xlat
inc
testb
mov
add
popf
dec
outsb
addr16
adc
add
xchg
js
adc
push
ja
lock
sar
cld
mov
pop
punpckhwd
popa
xor
adc
mov
mov
adc
shr
jmp
sti
movsb
add
in
stos
test
imul
jl
je
sbb
add
dec
jbe
pop
pop
sub
fisubl
in
xchg
lea
je
int
mov
loopne
leave
decb
dec
lret
jae
mov
out
shl
inc
mov
add
insl
fistl
pop
dec
jmp
add
fs
sbb
push
xchg
push
es
inc
repnz
fcoms
bound
pop
pusha
cmp
sbb
inc
subl
jae
leave
mov
jae
dec
mov
xchg
cmp
jge
jae
mov
fwait
pop
std
jne
dec
xchg
sub
pmulhw
xlat
mov
ja
test
jbe
inc
fwait
test
xchg
adc
pop
ja
gs
lret
fnstenv
fdivr
js
sub
lret
sbb
rcl
sbb
add
cwtl
into
jne
ds
jle
mov
fstl
enter
sarl
jge
lcall
sub
lret
outsl
fcomps
repz
shrb
xchg
div
jo
push
nop
repnz
cmc
xor
les
add
inc
push
test
js
xlat
jmp
xchg
fsts
repnz
jecxz
lods
jg
jge
int
dec
mov
sbb
jns
adc
inc
addl
lea
mov
lds
xchg
test
sbb
mov
push
fistpl
clc
xchg
xor
cmpsb
cli
insl
or
out
lock
ja
xchg
inc
push
sub
mov
jns
adc
xor
push
fildll
shl
jge
mov
std
inc
xor
stc
jle
push
movsb
out
sbbl
dec
push
lret
inc
imul
push
aas
ja
mov
adc
daa
out
adc
mov
jne
testl
xchg
inc
adc
add
ljmp
cltd
xchg
fldenv
ja
xor
mov
dec
xchg
cltd
mov
flds
push
adc
xchg
cmp
push
add
xchg
push
outsl
mov
cs
adc
mov
pop
xchg
adc
push
xchg
mov
push
sub
repnz
repnz
mov
fnstcw
fnstsw
sbb
jb
cmc
ficoml
sbb
sub
adc
es
aaa
xchg
mov
adc
mov
cmc
xlat
xor
push
fcomp
sbb
jne
fstps
mov
fbstp
mov
mov
stos
dec
roll
inc
mov
icebp
hlt
mov
divb
out
stc
out
sbb
inc
xor
sub
shll
cmc
jecxz
shr
sbb
add
sarl
push
xchg
fdiv
adc
push
aad
js
xchg
xchg
or
notl
mov
mov
pop
shl
gs
dec
adc
int
adc
xor
inc
mov
jmp
insb
adc
xor
mov
cltd
fwait
mov
repnz
call
loope
rol
je
jge
jne
sub
loop
push
divl
cmpsl
cltd
cmpb
hlt
xor
je
shll
push
stc
ja
push
jp
gs
test
push
into
divb
cli
xchg
sahf
cltd
inc
cmp
inc
xchg
and
pushf
movsb
add
lds
lds
mov
mov
aas
test
jno
xlat
ds
repnz
aam
dec
xchg
cmp
lock
adc
out
popa
adc
arpl
fnstsw
dec
add
xlat
imul
pop
and
xor
rcll
cltd
dec
movsb
adc
jl
xor
pop
clc
push
dec
pop
sub
mov
cmp
dec
andb
movsb
pop
negl
xchg
clc
inc
aaa
aas
add
sbb
aam
fstpl
and
adc
in
aam
ret
xchg
in
or
cs
enter
int
mov
lahf
xlat
shrb
cmp
ja
cltd
bswap
repnz
jb
or
leave
add
lret
les
or
push
xlat
imul
xchg
mov
out
cld
fldl
cs
pop
testl
loopne
ja
lock
mov
pop
xorb
test
add
shl
icebp
dec
out
inc
test
pop
int
xchg
pushl
ds
mov
rcrb
sub
cmc
jecxz
test
mov
out
imul
xor
mov
orb
rcl
mov
ds
xlat
pop
rolb
pop
fcoms
and
pop
push
mov
loopne
imul
ja
xchg
adc
dec
stc
ja
mov
or
jle
mov
or
fmuls
out
fldl
add
testb
js
iret
push
mov
adc
mov
mov
sbb
pop
mov
jae
addr16
fcomp
shl
cs
lods
ds
cmpl
fidivrl
mov
jnp
adc
fidivs
push
dec
imul
fsts
mov
add
add
inc
add
sbb
rcrb
inc
pusha
pop
in
adc
mov
or
mov
in
lahf
adc
add
and
pop
dec
and
imul
ror
or
repnz
out
insb
repnz
test
mov
lea
ret
loopne
jp
pop
dec
incl
sub
scas
test
out
or
adc
cmp
pop
ret
sar
xchg
xchg
sbb
fldl2t
fimuls
cs
pop
fidivs
mov
rcr
mov
push
pop
sub
mov
pop
rcll
filds
push
and
jnp
addr16
sub
cmpsl
xchg
jo
out
adc
jbe
cld
cltd
xchg
call
add
aad
jne
pop
jne
add
test
fdivs
sub
mov
fcmovnbe
xchg
div
rcrb
aad
sbb
or
adc
xor
lahf
xor
aaa
jbe
jb
shl
pop
mov
xchg
shl
pushf
cmp
inc
cmp
clc
and
repnz
repz
xor
cmp
mov
dec
jge
pop
jnp
jns
fimuls
ja
fnstsw
dec
popa
xlat
neg
js
ja
pop
out
call
insl
fildll
or
mov
sbb
dec
or
icebp
popa
daa
lock
fdivrp
cmpsb
pop
les
test
bound
xchg
add
outsl
mov
dec
cld
pop
jg
xchg
xor
mov
fnstcw
aam
xchg
test
fdivr
lret
pop
hlt
stos
mov
outsl
and
fcompl
dec
adcl
mov
push
push
add
pushf
xchg
adc
mov
push
mov
or
daa
add
aad
outsb
inc
add
mov
xorl
sub
loopne
aaa
cwtl
xchg
xchg
jne
addr16
icebp
push
outsl
adc
dec
hlt
and
and
enter
std
mov
or
pop
pop
das
movsl
mov
mov
and
loop
div
cmpsl
mov
push
aaa
xor
xor
cltd
push
enter
add
xorb
mov
addl
imul
sub
pop
je
fstps
stc
jmp
mull
fs
stos
jno
xlat
push
testb
icebp
inc
jge
leave
fistl
fcmovb
push
cltd
out
push
adc
xchg
aaa
imulb
ja
aad
daa
imulb
cmc
sub
aad
pop
xchg
mov
fstl
dec
loop
imulb
popf
mov
rclb
mov
xchg
rorb
loopne
adc
lds
fidivl
xchg
xchg
cmp
loopne
shlb
lret
test
bound
iret
stc
lock
in
xlat
cmpl
enter
ljmp
cmpsb
xchg
test
mov
movsl
jmp
imul
repnz
in
inc
ret
adc
je
adc
fnstenv
xor
push
ficompl
lea
xlat
inc
push
out
mov
popf
outsl
stc
aad
jns
pop
adc
pop
mov
inc
pop
mov
cmp
outsb
imul
lock
sbb
js
mov
xchg
popa
gs
notb
xchg
adc
push
aad
daa
jno
inc
shrl
fstps
rcr
test
fstpl
xchg
aad
inc
negb
stc
adc
mov
push
out
pop
sub
sti
push
data16
ss
mov
movb
add
iret
mov
scas
pop
mov
push
xchg
into
dec
mov
xchg
rorb
or
adc
lds
enter
xor
sbb
sarb
mov
jbe
pop
mov
out
dec
sub
sub
sub
mov
push
or
int
imul
jg
popf
fwait
lret
ret
aaa
dec
and
xor
sub
stos
leave
out
sub
mov
and
mov
ret
orl
mov
call
pop
pop
rcrl
xchg
jns
push
jns
inc
fnstenv
pop
mov
mov
xchg
sub
imul
lds
jge
sar
jns
mov
das
lahf
fistpll
mov
jo
out
sarb
icebp
shlb
movsl
push
sbb
fidivrl
and
push
pusha
pushl
rcl
bound
divl
stc
mov
clc
aad
outsl
xchg
cltd
lods
jle
repnz
xlat
adc
or
std
pop
fxch
sbbb
sbb
or
or
fisttpll
cli
leave
movsl
lds
xlat
cmpsl
sub
mov
fs
lock
push
roll
mov
jp
jb
iret
sbb
fisttpll
arpl
loope
fidivl
inc
xchg
ja
xchg
repz
inc
xorl
xorl
movsb
xor
mov
aam
push
rcll
push
dec
mov
lock
push
pop
das
or
hlt
dec
mov
xor
fwait
inc
test
push
pop
inc
sti
test
adc
and
shlb
ljmp
cmc
daa
jns
roll
xchg
stos
movsl
fistl
sarb
out
sti
fsubs
mov
lret
mov
outsl
push
push
in
sub
cmpsb
aad
lds
fisubrl
pop
push
or
sub
test
inc
sub
mov
cmp
pop
xlat
inc
fldt
iret
xchg
push
pop
mov
icebp
rcrb
jne
repz
or
or
repz
std
int3
dec
dec
rol
test
adcl
clc
inc
pushf
xchg
jle
jne
xchg
repnz
adc
push
fiaddl
jnp
je
or
cmc
dec
pop
test
sbb
aad
mov
lock
add
and
cltd
ljmp
xchg
leave
dec
aad
mov
sbb
in
add
push
push
or
into
push
and
outsb
jecxz
xor
sbb
imul
push
or
adc
and
sub
jno
je
leave
xchg
push
pushf
icebp
jns
and
jle
sbb
nop
xchg
sbb
xchg
mov
ja
stc
jo
lea
xor
xor
pushf
xor
xor
insb
pop
aad
loop
iret
cmp
pop
in
xchg
jg
adc
jns
sbb
sub
clc
loopne
std
lahf
ja
push
pop
arpl
mov
not
mov
cs
xlat
fdivrl
pop
lods
mov
iret
sbb
dec
call
xchg
out
loopne
push
orb
sarl
popa
push
aam
hlt
rorl
xor
or
sbb
dec
add
test
test
aad
pop
iret
in
or
mov
mov
mov
mov
cltd
jbe
int3
mov
mov
inc
add
ret
push
daa
ja
jno
pop
xchg
lahf
daa
xlat
mov
jmp
shlb
adc
dec
roll
rcrb
add
popf
mov
idivl
mov
shlb
aad
data16
mov
xor
sub
lahf
test
frstor
add
sub
or
jbe
int3
in
rcll
inc
call
scas
mov
cwtl
xchg
fsubrl
xor
arpl
out
inc
out
bound
pop
jle
xchg
or
test
mov
mov
push
xor
aas
inc
sub
roll
mov
mov
add
cltd
fistpl
daa
aam
or
jae
pop
mov
pushf
mov
adc
jbe
cmc
dec
in
mov
xor
cmp
dec
hlt
jno
mov
jnp
ja
cmc
pop
leave
aad
push
dec
inc
sbb
pop
int3
imul
dec
loop
push
adc
jecxz
add
mov
add
xorl
imul
mov
dec
lock
data16
in
ljmp
imul
ds
sar
negb
out
adc
mov
rorl
xchg
push
mov
jl
gs
test
mov
insl
pop
outsl
adc
test
aas
pop
inc
ja
sub
lret
cltd
push
js
inc
mov
fnstcw
inc
mov
cwtl
mov
mov
loope
shlb
into
jae
mov
inc
or
stos
jge
lret
out
clc
nop
mov
inc
jb
xchg
jno
ja
jno
mov
sahf
aam
sub
jns
lret
and
rolb
mov
repz
pop
mov
mov
pop
cltd
fnstenv
daa
fnstcw
mov
divl
sub
test
mov
dec
or
or
add
dec
repz
jb
add
and
popf
mov
adc
idivl
negb
adc
adc
in
out
into
jmp
loopne
mov
pop
adc
push
mov
aam
fs
loopne
xchg
inc
fisubl
sbb
icebp
loop
adc
mov
mov
aam
out
mov
add
leave
mov
jp
adc
outsb
mov
push
jns
cs
in
and
jecxz
daa
sub
xchg
cwtl
pushf
adc
int3
in
mov
inc
pop
push
fldpi
lock
lcall
incb
call
dec
pop
pop
xor
mov
nop
jle
jb
xchg
int
adc
in
leave
int3
fs
mov
and
inc
push
cmc
lock
cld
orps
fmuls
sub
nop
add
push
xlat
mov
jae
inc
lea
xchg
cmpsb
cmp
negl
adc
push
xor
pop
test
jbe
scas
sbb
and
rclb
lret
enter
push
xor
addr16
shll
addb
and
fwait
idivl
imul
cltd
arpl
jp
js
dec
lea
or
insb
or
push
cmp
pop
pushf
and
das
mov
cmc
movsb
rclb
xchg
pop
mov
jle
ror
pop
stc
add
xor
pop
jo
out
addr16
pop
push
jbe
jecxz
nop
add
cmc
dec
add
rclb
daa
sub
or
arpl
divb
mov
xlat
stc
shrl
cltd
mov
lcall
xchg
pop
adc
jg
ror
mov
xchg
inc
pop
fstpl
jno
mov
mov
in
scas
shrl
add
jg
loop
je
sbb
cmp
test
xchg
adc
into
sbb
cmp
stos
push
jg
pusha
outsl
xchg
ja
mov
aad
aas
xchg
or
add
pop
jl
push
lret
pop
mov
inc
push
ret
mov
dec
pop
and
std
jge
fldz
add
add
loope
jo
and
jb
jnp
repz
in
mov
cmp
pop
loopne
pop
sub
std
cmp
xorl
xchg
int3
fisttpll
push
sbb
push
pushf
imul
push
jbe
ficompl
lods
cmpsl
cltd
adc
push
adc
dec
or
mov
cmp
cwtl
jns
adc
cmp
shlb
pop
fisubrl
jge
ds
jecxz
pop
dec
rcl
jns
ja
sbb
jno
fxch
ror
bsr
push
roll
incl
xchg
jns
adc
lahf
gs
clc
xchg
roll
ror
shr
mov
nop
scas
mov
rorl
lock
mov
jg
lret
xchg
mov
in
sahf
cmpsb
dec
shl
pop
xchg
inc
rcrb
test
pop
cld
aad
cli
repz
xorl
mov
xlat
imul
rcr
jecxz
mov
adcl
das
jge
mov
pop
out
decb
sahf
jmp
cli
lds
push
adc
mov
pop
mov
leave
out
or
add
and
stc
cmpsb
sahf
lcall
and
popa
lea
into
push
xlat
ljmp
inc
insb
mov
cltd
bswap
cmc
stc
add
aas
mov
das
lahf
in
nop
leave
pop
and
rclb
mov
sub
imul
mov
xchg
mov
test
push
in
xor
adc
mov
and
mov
mov
mov
lods
testl
mov
sub
mov
lods
lds
fldcw
divl
mov
sbbl
negl
fldenv
aam
loop
cltd
lcall
push
sub
sbb
mov
xchg
rclb
jb
dec
hlt
xor
lds
jne
scas
mov
std
inc
lods
mov
cltd
cmp
lea
jecxz
pop
std
adc
enter
dec
dec
xchg
jns
cli
add
cltd
mov
sbb
in
aam
or
add
jns
fld
inc
in
cmp
test
add
cmpsb
sbb
push
mov
xchg
sub
cmpsb
cmpsl
pushf
aad
fldcw
inc
cmp
scas
flds
cmc
enter
adc
imul
mov
cmp
lds
imul
sub
cltd
sti
pop
shll
test
popf
dec
cmpsl
push
xchg
push
and
mov
fadds
fsubrs
mov
xlat
or
dec
sbb
push
or
ljmp
cld
mov
sbb
cmp
addr16
stos
push
imul
sahf
cld
lock
and
mulb
sub
xchg
dec
dec
or
aad
jbe
dec
cli
fisubrl
mov
sahf
clc
dec
pop
dec
int3
mov
fcomp
mov
jno
xchg
mov
hlt
enter
nop
ljmp
sbb
stos
xor
xchg
test
addr16
loop
insb
adc
jg
xchg
loopne
add
divb
cmc
sub
pusha
test
ret
scas
mov
xchg
sub
dec
sbb
repnz
push
shl
jns
mov
dec
shlb
mov
xor
and
shlb
pop
test
ficompl
push
cltd
push
fcom
es
jecxz
mov
jns
pop
rcll
push
xchg
out
lods
jmp
inc
lods
movsb
test
sarb
push
xchg
lea
je
repnz
repz
xchg
sub
repz
jmp
mov
jne
testb
mov
rcl
test
pop
lods
outsb
in
push
mov
pop
adc
cmp
aas
or
nop
and
push
cmc
sub
les
fnstenv
or
adc
repz
out
xchg
std
adc
out
push
cmc
nop
stc
or
hlt
or
or
cmp
sub
add
cmc
add
fldt
and
mov
test
test
repnz
dec
mov
shl
push
push
add
call
shrb
loopne
sub
in
mov
dec
cmp
dec
pushl
pop
roll
or
insl
push
popf
aas
mov
xor
data16
call
pop
mov
or
fistpll
mov
not
test
shl
mov
xchg
movsb
xchg
and
adc
mov
xor
xchg
pop
adc
sbb
push
cmpsb
jle
cmp
xor
int
test
imulb
inc
jo
sbb
jl
pop
sahf
shlb
add
movsb
aad
dec
xchg
add
roll
sbb
ss
rcll
jbe
shrb
dec
sub
pop
jb
ret
jns
sti
scas
pop
push
lret
out
out
adc
popf
push
cmpsl
lret
cli
js
subl
sub
test
mov
lret
lds
or
xor
cmp
mov
sbb
dec
out
rorb
js
sbb
or
pop
sbb
xchg
aad
add
fsubs
sub
mov
jns
cltd
clc
mov
pop
int3
aad
add
cltd
aam
xchg
pop
insl
cmp
je
hlt
pop
cmpsl
ficoms
mov
xor
dec
int3
cmp
shll
push
ficoms
adc
inc
imul
xchg
pop
cmp
stos
xlat
cs
fld
inc
mov
enter
jecxz
sbb
ja
movsl
insl
sarb
xchg
pop
mov
rolb
rsm
xchg
add
or
int3
pop
dec
ret
std
shll
push
arpl
dec
out
mov
xor
sbb
xor
jns
arpl
fldl
sbb
scas
rcrl
cmp
cmp
lcall
xchg
ljmp
call
loopne
mov
sbb
cmp
aam
jmp
pusha
dec
sar
out
push
dec
pop
lahf
jle
je
das
and
lods
mov
lock
cli
aaa
jge
lods
and
hlt
cltd
and
adc
fcmovnu
mov
dec
sahf
push
sub
push
adcb
adc
and
xchg
loope
jp
lods
insb
sub
shrb
fiaddl
fnstenv
cmova
jl
out
gs
pop
ljmp
rcr
jbe
xchg
jbe
mov
repz
aad
lret
leave
mov
inc
pop
ror
adc
shlb
cmp
sub
mov
fnstsw
pop
je
imul
or
sbb
popa
rolb
or
dec
add
dec
mov
popa
cmpsl
les
in
push
adc
adc
lock
pop
loopne
in
pop
jbe
mov
gs
dec
int3
xchg
or
push
in
fcoms
push
mov
in
push
fldl
jmp
adc
inc
pop
insb
dec
shl
outsb
add
outsl
lcall
inc
push
ja
pushf
subb
mov
nop
mov
mov
push
test
insl
and
icebp
or
xor
inc
inc
dec
bound
cli
jmp
cltd
pop
hlt
fs
movsl
lds
out
push
aam
ret
inc
push
mov
notl
pop
xchg
lds
imul
jle
or
jo
inc
or
jbe
nop
loop
sbb
das
sbb
cmc
test
push
cs
shlb
pop
aaa
or
pop
lret
fnstcw
or
shl
mov
jae
insl
in
rolb
shr
int
push
jbe
dec
cmp
jp
pusha
inc
fidivrl
out
xchg
testl
pop
jns
test
mov
mov
adc
jo
mov
jno
xchg
shll
add
sub
or
xor
imulb
jo
cmp
mov
cltd
pop
stos
mov
jg
fisubs
shll
mov
test
add
test
or
adc
sub
cltd
lds
push
add
aad
dec
inc
mov
mov
mov
mov
xlat
sbb
sbb
cwtl
xchg
fsubrs
sub
sar
inc
ficomps
mov
hlt
insb
and
cmp
cmc
adc
mov
mov
les
imul
and
xor
add
adc
popf
mov
pop
into
mov
xor
lcall
daa
jne
mov
in
cmc
mov
fsub
or
push
mov
fisubrl
dec
rolb
aas
es
xchg
xchg
pushf
and
mov
mov
in
imul
clc
fs
sub
push
out
std
ds
ds
mov
ret
shlb
cmp
cmp
dec
inc
sbb
jne
lahf
pop
pop
cltd
cwtl
enter
mov
xchg
stos
out
jns
test
das
push
lds
push
pop
imul
mov
inc
jecxz
push
adcl
cmp
sub
js
pushf
xor
into
outsl
test
ljmp
lcall
jg
fwait
pop
xchg
adc
mov
imul
clc
addr16
cs
and
mov
xchg
stc
add
sti
sbb
addl
mov
push
sahf
cmpl
jb
divb
cld
cmp
mov
aam
mov
xchg
push
movsl
xchg
cmc
mov
xchg
xor
cmp
xor
jg
imul
rorl
xchg
divl
push
fsubrs
xor
mov
inc
mov
xchg
add
mov
jno
fcom
adc
in
aad
xchg
fsubr
cmc
cltd
in
push
ja
push
pop
pop
mov
mov
or
test
jg
shrl
pop
movsb
insb
xor
jmp
out
jnp
fsts
scas
das
push
out
mov
daa
prefetch
cmp
std
mov
sbb
divl
jle
leave
push
je
test
xor
loop
jne
aaa
pop
sbb
jg
jbe
adc
cltd
lahf
push
cmp
xchg
cmp
repz
inc
cltd
sbb
test
adc
mov
and
das
fsubrp
out
cmc
sarl
movsl
aam
sbb
jbe
mov
mov
subb
ljmp
pop
jno
cmp
icebp
imul
push
into
mov
xor
jnp
dec
jp
stc
repnz
lret
mov
scas
sbb
outsb
sti
mov
mov
fwait
xchg
pop
cltd
roll
mov
or
subl
jns
dec
stos
daa
shll
gs
xor
cmp
rcrb
fadds
sarl
pop
divl
lcall
jle
aad
leave
js
jns
inc
rcr
cwtl
jae
roll
mov
xor
jno
mov
fiaddl
call
cmpb
sbb
test
incl
ja
push
cmp
push
jb
inc
mov
icebp
loop
adc
cmc
fistpll
out
mov
repnz
rolb
flds
aam
je
rcr
fnstcw
dec
sahf
adc
dec
mov
test
sti
test
mov
add
jnp
or
xor
xchg
jg
xchg
pop
mov
pop
and
sbbl
rol
neg
repnz
and
adc
mov
ja
pop
imul
mov
jle
enter
mov
loop
mov
pop
xchg
js
sbb
outsl
push
popf
repz
movsb
xlat
out
repnz
sbb
xchg
ja
dec
cmp
loopne
adc
adc
mov
jp
pop
loope
pop
push
loope
or
jne
adc
jne
xor
pop
dec
lock
das
jge
pop
sbb
cwtl
mov
lcall
push
adc
adc
push
mov
xchg
repz
out
stc
lods
cltd
stos
pop
sub
push
cmp
add
xchg
ja
movsb
push
fldcw
fcomps
adc
mov
xlat
jno
push
arpl
xchg
dec
aad
pop
lret
mov
xor
fptan
jp
or
or
fbstp
stc
ss
mov
lahf
aaa
rcll
adc
adc
fyl2xp1
dec
and
shll
cltd
divb
or
cmp
jb
aaa
cmp
xchg
mov
clc
push
div
mov
adc
xchg
sbb
lcall
cli
mulb
pushf
fldcw
or
adc
xchg
pop
push
mov
sar
mov
mov
testb
loop
fadds
jecxz
shr
clc
jne
cmc
jmp
push
sbbl
pop
scas
enter
jbe
xlat
sbb
xchg
fisubrl
add
add
repz
lcall
jp
add
xor
fcoml
pop
push
call
shll
mov
andl
stc
adcl
mov
loop
sarb
idiv
xor
shrl
shr
je
int3
push
push
xor
movsb
clc
jge
xchg
xchg
mov
xchg
aam
ret
push
test
enter
jne
call
xchg
scas
mov
cs
fstl
mov
and
pop
cmp
loopne
je
test
adc
in
movsl
inc
divl
lods
jne
lock
popf
iret
xchg
adcb
mov
mov
test
ss
dec
xchg
popf
jge
rorl
int3
filds
jb
xor
jne
xchg
mov
rcr
ror
mov
clc
xchg
or
xchg
xchg
cltd
mov
shlb
pop
movsb
mov
jne
dec
push
xlat
cmc
sarb
negb
aam
mov
and
enter
xor
cltd
in
jns
enter
cld
fstpl
xchg
scas
in
icebp
pop
adc
sub
into
sub
fwait
aaa
imul
nop
xor
cmpsb
hlt
mov
iret
mov
lea
loop
je
movsb
inc
popf
cli
pop
xchg
outsl
push
sbb
clc
repz
shlb
mov
jp
lock
mov
lret
scas
xor
stos
dec
lea
ds
xchg
adc
les
mov
jo
popa
xlat
lcall
outsb
in
push
and
dec
add
add
inc
fsubrp
test
gs
xchg
in
dec
test
aad
cld
mov
rclb
push
jg
jge
gs
xor
cmpsb
xchg
mov
push
mov
jecxz
scas
call
sub
mov
and
fists
loopne
test
leave
ror
dec
js
xlat
cmp
mov
call
ja
fwait
push
popa
xlat
pop
nop
loopne
cmp
rorl
mov
jg
aam
or
jo
mov
int3
ret
pop
andb
sub
test
xor
jge
jo
jg
cli
sahf
dec
sub
inc
sub
mov
mov
cs
inc
test
dec
sub
pop
ds
out
je
push
jmp
or
testl
inc
jg
jmp
rclb
out
jge
mov
cltd
xlat
lods
lock
ljmp
lock
das
stos
pop
repnz
push
mov
adc
sub
adc
scas
subl
lahf
dec
iret
xor
xor
std
pop
pop
cmp
push
ja
pop
jg
test
scas
popa
lock
cmp
outsl
pop
int
adc
js
mov
notb
add
out
rclb
mov
push
mov
movsb
xchg
outsb
pop
fnstenv
adcl
decl
dec
enter
testl
fcomps
push
sub
xor
sbb
dec
push
mov
outsl
mov
cltd
and
and
pop
pop
jp
or
je
and
and
mov
sti
push
aas
ret
out
and
add
add
or
aad
shll
fildll
fistps
xor
icebp
fs
cltd
stc
dec
out
inc
xor
clc
mov
pop
jb
xchg
int
fxch
xchg
out
shlb
mov
push
fidivrl
aas
jo
jns
stc
clc
test
sbb
push
push
or
filds
imul
push
nop
mov
lret
mov
call
push
xor
pop
rol
xchg
sub
cmpsl
jb
ror
push
ficoms
sub
jle
test
jg
jns
cmp
xchg
xchg
add
adc
xor
jb
fsubrl
or
jno
sar
shrl
std
xor
addr16
jns
lds
outsl
repnz
pop
movsb
adcb
xchg
xor
xor
jne
push
aam
mov
lea
movsl
aam
mov
repz
sbbl
lret
mov
rorl
ret
das
negl
movsl
sub
push
jg
xor
call
fprem
shlb
adc
and
shlb
jns
cld
cmc
sub
xchg
mov
jns
jo
push
jge
mov
divl
pop
popf
jns
push
adc
cmp
imull
xlat
cwtl
ficomps
mov
sub
sub
sarb
and
push
sysret
cmp
sbb
jb
sbb
je
int
inc
shll
cmpsb
lret
imul
in
sub
xchg
or
inc
jecxz
or
adc
push
inc
rcl
popf
mov
rolb
out
aaa
loop
stc
adc
lock
test
movsb
stc
mov
in
negl
xor
add
arpl
fisubrl
lcall
cmc
and
push
dec
add
mov
xchg
int3
scas
imul
hlt
mov
xchg
xchg
jno
xor
push
adc
popf
xchg
xchg
call
mov
outsb
sbb
xchg
adc
push
xchg
xor
je
lcall
xchg
xlat
cmp
out
out
adc
aam
push
xor
sar
add
test
shlb
js
cmp
and
mov
cwtl
imul
aaa
mov
test
pop
ja
xchg
push
neg
leave
pop
mov
or
xor
pop
sbb
xchg
rcrb
xchg
insl
pop
mov
imul
adc
mov
in
cltd
outsb
sarl
sub
push
xor
dec
pop
push
jmp
push
sbb
mov
jmp
aad
std
dec
icebp
roll
mov
push
das
lahf
into
push
lock
push
xchg
xchg
add
scas
jns
cltd
mov
inc
dec
fstps
addr16
jp
dec
xlat
xor
cwtl
cltd
fs
or
xchg
out
outsl
test
jbe
inc
lcall
adc
adc
xchg
mov
mov
jns
mov
call
cmc
and
sahf
pop
mov
out
push
ljmp
xchg
adc
aaa
scas
ljmp
jnp
adc
push
xor
jl
add
push
xchg
dec
daa
mov
and
in
stc
loopne
xor
jle
ja
sbb
shl
jo
sbb
movsb
xchg
aas
pop
scas
aad
fwait
sbb
jae
ret
mov
cltd
loop
xor
cmpl
push
adc
in
xlat
jns
jbe
lods
add
scas
dec
add
push
sbb
cs
aad
lret
in
imul
cli
cs
movsl
scas
sbb
jbe
dec
mov
inc
fmull
fnstsw
sbb
lcall
lret
push
jb
sub
test
stc
dec
jp
sbb
xchg
adc
aam
int
orl
jle
hlt
or
push
rcrb
ja
pmaxsw
lds
adc
in
push
or
push
outsw
call
jb
cld
pop
out
loopne
dec
and
xchg
xorb
push
lds
or
pop
ss
das
xor
jb
xor
xchg
jae
mov
inc
in
and
sysenter
icebp
cmc
in
adc
push
stos
adc
cwtl
xlat
add
je
sub
mov
loop
xchg
pop
stos
add
iret
mov
jb
pop
sub
inc
pushf
dec
ret
sbb
btr
inc
subl
push
or
push
fwait
mov
divl
jle
xor
inc
insl
dec
push
or
mov
dec
mov
pop
arpl
or
cmp
lcall
fisttpll
in
lods
jg
popf
and
inc
in
outsb
mov
sbb
push
fistl
int
sbb
lock
shll
xchg
clc
ret
sbb
repnz
adc
sub
push
dec
adc
mov
jb
add
fldt
add
cltd
sbb
icebp
pushf
adc
dec
mov
lret
cltd
fnstenv
xor
pop
xor
add
and
loope
jae
loopne
aaa
ds
aam
incl
cmp
mov
neg
decb
xchg
jle
aam
iret
push
xor
imul
xchg
xchg
xchg
testl
jns
fists
orb
push
cwtl
pop
xchg
aad
test
push
lret
lret
fdivl
out
adc
test
mov
jae
repnz
aad
fcmovb
pushf
gs
fs
negl
mov
pop
pop
in
mov
mov
push
sub
fisubl
repz
stos
pop
fld
push
sbb
test
push
fsubrp
test
xlat
mov
xchg
scas
xchg
xchg
push
notb
or
sbb
xlat
mov
push
push
push
movsl
sub
call
nop
lret
fistpll
sti
push
into
push
stos
mov
push
lret
daa
lea
sahf
mov
lea
sub
je
cmp
daa
push
mov
mov
cltd
adc
cmc
gs
dec
dec
cmc
dec
inc
cwtl
xlat
sti
sarb
int3
lods
inc
in
addl
add
aas
in
adc
bound
leave
push
lods
popa
mov
sbb
out
jle
cli
popa
movsb
ljmp
pop
cmp
mov
add
and
adc
mov
push
adc
notb
cltd
jmp
sbb
loop
gs
fwait
adc
fwait
sub
sar
mov
and
and
repz
rclb
test
or
or
lods
or
ja
ror
add
sarb
pop
dec
shll
fcmovnbe
push
lahf
pop
inc
jae
cmc
stos
leave
int
push
out
xchg
xor
sar
mov
shlb
sbb
lret
sarl
jecxz
rorb
out
dec
cmp
or
xor
jnp
iret
lods
jno
in
jb
dec
jns
xor
cmc
mov
stc
stos
pushf
cwtl
mov
stos
mov
dec
jmp
mull
cmp
loope
xchg
rcrb
jno
mov
inc
daa
mov
addr16
fists
mov
gs
inc
or
aam
in
jle
addr16
aas
test
sub
aas
sahf
push
pop
test
addr16
push
and
les
call
lret
xchg
mov
lret
jns
cmp
push
jg
lds
scas
jle
les
ret
loope
addr16
lret
fisubs
lcall
loopne
imul
dec
dec
std
add
jns
cmp
test
mov
or
clc
add
aad
cli
ret
stos
mov
push
std
shrb
lcall
add
iret
test
jp
cmpsl
fimuls
les
stos
daa
repz
stos
cmpsb
xchg
cmp
test
leave
movl
negl
pusha
mov
adc
adc
add
call
ja
pusha
cmpb
into
rep
mov
mov
scas
popf
pop
movl
imul
idivb
fwait
pop
mov
mov
std
lods
xchg
mov
push
xchg
dec
out
lret
decl
cwtl
jae
idivb
les
cmpsl
rcl
cltd
iret
mov
leave
add
fcomps
jbe
sarl
pop
cmovs
xchg
sub
mov
js
enter
xchg
lds
xchg
adc
jl
push
mov
jbe
int3
add
repz
pop
divl
idiv
or
mov
roll
xchg
aas
push
jecxz
repnz
mov
jge
loopne
dec
sbb
xchg
xlat
lret
fnstenv
cltd
cmc
mov
mov
pushl
dec
push
jae
push
jo
jbe
cmp
sub
dec
cld
das
subl
inc
adc
push
push
and
fnstsw
jo
outsb
mov
and
jns
rorl
addl
xchg
mov
aad
mov
xchg
cltd
mov
rclb
fnstenv
aad
mov
stos
rcrb
std
lret
xchg
pop
cs
mov
jne
xchg
pop
add
xor
add
jmp
es
arpl
scas
popf
mov
push
sahf
leave
xchg
adc
or
leave
es
lahf
pop
mov
hlt
fcomps
xchg
cmp
xor
inc
or
cmp
jge
xchg
clc
mov
sbb
jo
jle
movsb
push
cltd
adc
or
fstl
mov
or
aad
out
mov
sub
push
leave
cmpl
mov
int
lea
js
cmp
fstp
dec
mov
xlat
in
or
in
adc
dec
inc
lds
out
int
daa
ret
leave
mov
in
add
imul
clc
sbb
cmp
dec
stc
add
lret
fninit
or
pop
divb
rcrl
scas
rcll
daa
stc
dec
rclb
xchg
ljmp
sbb
inc
test
aaa
aas
mov
jbe
mov
das
adc
and
fisttpll
shll
data16
daa
push
ja
jae
add
mov
dec
or
dec
or
es
pop
shlb
sarl
adc
iret
aas
notl
out
push
mov
cmpsl
fisttpl
insb
lock
sbb
sbb
sub
mov
push
add
fnstcw
sahf
xchg
xchg
repz
jecxz
jo
adc
inc
mov
ja
ret
sbb
ffree
int
inc
dec
cli
push
dec
inc
or
pop
mov
mov
xlat
cmp
mul
add
js
sub
aaa
in
jmp
mov
sbb
iret
mov
int3
aad
inc
sub
es
mov
xchg
and
sar
fwait
jb
add
fstpt
push
jp
enter
add
pusha
sub
cmpsl
mov
add
push
xor
sbb
jae
inc
inc
outsl
pop
cld
shll
idivb
xchg
jnp
dec
pushf
js
fisttpll
test
repnz
xchg
into
or
aam
mov
cmpsb
xor
int
rcll
push
add
sbb
push
mov
xor
push
mov
f2xm1
and
add
xlat
sbb
inc
add
mov
stc
lret
jbe
jbe
cmc
out
mov
jbe
iret
rcrb
lock
clc
fst
cmpsb
sbb
fstpt
fnstcw
sbb
jns
jae
mov
pop
inc
add
test
sbb
mov
adc
mov
repz
ss
add
div
xchg
lds
inc
mov
mov
lock
push
mov
xchg
xchg
mov
rcll
push
mov
addr16
sti
in
leave
iret
push
loopne
test
int
jae
lds
push
cltd
bnd
adc
divl
arpl
xchg
inc
mov
fnstsw
push
mov
nop
xorl
cmc
pop
xor
addr16
mov
mov
mov
in
sub
xchg
lret
xchg
rcrb
add
mov
adc
es
jmp
xor
lret
call
inc
loop
call
aad
fnstenv
xchg
jae
jne
sahf
xchg
rorl
jmp
jae
std
adc
push
mov
add
repz
xor
js
cmpsb
incl
loop
inc
cmc
sbb
pop
push
stos
xchg
arpl
jbe
jl
icebp
leave
iret
repnz
std
pop
dec
add
mov
cld
loopne
xor
jo
dec
sub
pop
add
sarl
stos
cltd
sbbb
xchg
in
aad
roll
xor
popa
mov
fstl
aad
adc
rorb
jno
aad
lahf
mov
mov
or
jle
out
pop
mul
add
cmp
enter
cli
push
aam
xlat
xchg
pop
adcl
repz
xchg
and
xchg
loop
sub
stc
pushf
jp
mov
testl
outsb
cltd
aad
mov
add
xchg
xchg
enter
push
decl
fstpl
ror
in
jg
xchg
xchg
in
in
xor
fld1
jp
inc
cs
imulb
hlt
in
repz
mov
jecxz
mov
lds
cmp
jg
xchg
sbb
cltd
push
fnstenv
aad
loop
jge
mov
test
xchg
xchg
mov
xchg
pop
dec
out
or
mov
push
pop
stc
pop
mov
adc
testb
hlt
shlb
aam
repnz
je
xchg
aam
in
divl
push
jno
or
repz
adc
and
adc
cltd
sarl
sti
insl
ficompl
xchg
rcrb
jge
mov
sar
ds
lds
xchg
or
in
leave
sub
enter
lret
out
inc
jge
negl
mov
into
push
sbb
add
push
push
rolb
fnstcw
rorl
xchg
mov
add
fninit
push
sbb
sub
push
adc
push
adc
fisttpl
gs
xchg
arpl
adc
adc
lods
call
or
jnp
fbstp
fxch
mov
lock
pop
sbb
aam
lret
cmp
idivb
add
xchg
jp
and
sbb
mov
xlat
sub
xor
insl
loope
adc
or
pop
lcall
jp
mov
fcoms
inc
scas
and
gs
sub
pop
sbb
push
popf
push
xlat
sub
roll
imul
push
aas
daa
xor
and
stos
cltd
in
repz
int
sbb
or
call
fbld
lds
pop
daa
mov
jg
pop
jmp
or
xchg
add
adcl
ret
xchg
aad
outsb
jmp
mov
adc
dec
or
outsl
fcompl
sbb
jns
fistps
lock
and
mov
je
out
ljmp
leave
xchg
pop
push
cmp
fisubrs
adc
fs
adc
loopne
fnsave
sub
dec
data16
mov
jl
push
pop
jne
inc
push
roll
mov
adc
jns
adc
adc
cmp
add
inc
test
inc
mov
mov
push
out
mov
lds
pop
and
es
test
cmp
lahf
imul
mov
cmp
movsl
imul
shr
or
pop
xor
sbb
scas
enter
fildll
lock
mov
dec
test
add
push
and
add
mov
jo
xchg
adc
push
nop
xlat
in
inc
add
mov
clc
mov
mov
xchg
sbb
stos
call
movsl
xorl
cltd
ja
and
lods
lcall
or
or
cmp
std
popf
pop
inc
shlb
sbb
sarb
jb
out
fnstcw
cltd
mov
sbb
loopne
sbb
add
aad
fstl
sub
js
dec
divb
aad
inc
pusha
cmp
jmp
push
add
inc
aaa
mov
jg
daa
dec
addr16
cmp
xchg
clc
pop
push
xchg
mov
ja
cmp
movsb
call
mov
mov
adc
pop
scas
mov
roll
in
div
adc
cmc
inc
pop
dec
adc
mov
jo
sarb
jle
decb
fimuls
lret
outsl
cmpsl
adc
add
push
mov
loop
in
xchg
and
pushf
mov
mov
adc
in
bound
pop
popa
lea
adc
mov
in
insl
rorl
lret
outsl
jne
xlat
jg
sarl
lds
inc
mov
fisubrs
outsb
cmpsl
xchg
mov
pop
in
repz
mov
notb
push
pop
sbb
mov
shlb
movl
arpl
cwtl
inc
fiadds
xchg
es
sbbb
loopne
rclb
adc
sahf
loope
mov
popf
xor
pop
aad
fimuls
cmp
or
sub
repz
aam
add
cli
cmp
add
dec
xor
cs
lcall
lret
lret
std
mov
jle
dec
dec
xchg
jno
in
fsts
imul
adc
mov
fstl
mov
inc
in
sub
test
jecxz
sub
test
xchg
stc
aaa
pop
adc
adc
fincstp
xchg
add
xchg
mov
sti
jbe
dec
pop
jg
mov
fcom
outsb
insb
xchg
std
repnz
inc
data16
sbb
scas
xchg
add
push
sbb
outsb
jns
adc
push
ret
xchg
xchg
inc
mov
pop
xor
cs
pop
mov
ror
cmpsl
add
lret
cmp
jb
mov
jg
xor
fcomi
subb
lock
mov
mov
das
or
inc
icebp
leave
sarb
fists
sarb
cld
adc
xlat
mov
mov
cltd
in
movsb
imul
es
push
cltd
rorb
fisttps
xchg
pop
add
mov
popa
testl
out
lret
adc
addr16
or
fisttps
xlat
xchg
add
ds
xchg
mov
push
and
pushf
shll
jl
stos
xor
call
addr16
push
and
sub
addr16
mov
test
test
mov
les
pop
add
and
in
push
pop
xchg
adc
shll
aad
xchg
and
imul
jmp
sbb
daa
jo
xlat
or
addr16
inc
push
aas
mov
scas
cltd
cmp
mov
push
hlt
lahf
and
add
xchg
lcall
aad
dec
push
js
out
mov
adc
mull
push
mov
sbb
xchg
fidivrl
cmp
addl
pushf
and
fstpl
ja
sub
inc
fdiv
mov
jge
inc
stos
jns
xchg
js
jl
jne
add
pop
cmp
pop
std
push
mov
leave
sbb
ds
and
cmp
push
or
into
gs
icebp
mov
inc
stc
and
lcall
jmp
aas
cwtl
movsl
in
rcl
imul
xchg
lret
in
aad
push
mov
push
imul
sti
xlat
fldcw
cmp
rclb
aad
cmpsl
pop
lahf
mov
adc
pop
aad
push
loop
in
xchg
pop
xlat
pop
and
push
pop
xchg
and
lds
push
xchg
cmp
and
xchg
adc
fisubrl
shr
or
jmp
push
adc
jae
rcl
test
xchg
divl
cmc
add
adc
cwtl
jle
mov
jnp
fsts
lods
fdivp
or
mov
js
mov
leave
fdivp
xchg
pop
pop
cli
adc
pop
or
and
sahf
push
test
ror
mov
push
lgs
call
jns
sbb
pop
push
outsb
xlat
mov
out
andb
sub
lahf
out
xchg
mov
add
pop
repnz
sub
push
jns
shlb
or
xchg
adcl
pop
mov
pop
out
sarl
push
popa
fucomp
pop
fsts
push
rolb
xchg
mov
pop
fwait
icebp
add
add
xchg
jnp
add
dec
sub
aad
jmp
push
lock
jp
mov
jnp
pop
sahf
xlat
fs
out
aas
mov
aam
add
adc
sub
push
xchg
div
aaa
add
push
rorb
cmpsb
ja
xchg
mov
ret
movsb
call
add
inc
pop
fldl
dec
adc
pop
sti
mov
aad
jbe
imul
lcall
jbe
pusha
cltd
dec
shl
in
enter
jbe
pop
not
push
clc
rcr
idiv
add
cmpsb
jmp
lahf
testl
call
sarl
fistpl
das
sbb
push
lds
repnz
or
dec
add
in
fwait
inc
mov
dec
mov
xchg
cmpsb
push
xor
inc
cmp
stos
int
lret
mov
pop
pusha
cltd
sbbl
in
jnp
mov
mov
mov
ret
jg
scas
xor
clc
mov
jns
jbe
adc
rol
cs
pop
sbb
or
and
push
mov
add
xchg
xchg
in
aad
mov
nop
push
loopne
xchg
pushf
shll
movsl
jecxz
loope
cmp
imul
fldl
iret
nop
and
sub
lret
pushw
cmp
dec
or
jb
xchg
rcl
int
mov
js
mov
shrb
jmp
cltd
sbb
mov
in
adc
cmp
sahf
mov
in
iret
dec
pop
repz
cltd
arpl
pop
lret
jno
iret
lret
shll
out
xchg
bound
mov
push
shlb
outsl
shrb
push
orl
pop
push
es
mov
jg
pop
push
scas
in
cwtl
scas
dec
andl
or
or
or
xor
daa
into
stc
gs
jbe
xchg
jge
imul
fnstenv
xchg
mov
pushw
enter
daa
xor
fcoms
cltd
mov
add
sti
pop
xchg
stos
jp
mov
pop
icebp
mov
test
das
xor
sub
iret
mov
sbb
mov
dec
sbb
stc
cltd
stc
int
scas
cltd
push
sarl
aad
fcompl
data16
jne
jno
shll
mov
movsb
and
adc
addl
subl
or
mov
in
xchg
inc
ret
popa
daa
cmpsl
daa
mov
pop
pop
mov
test
cmp
pop
js
nop
cmpsb
adc
sbb
cmp
or
jg
adc
cmpsb
push
ljmp
mov
mov
xor
cmpsb
dec
adc
aaa
dec
idivl
mov
ffreep
aam
int3
and
push
fistpll
mov
in
xlat
outsl
out
pop
ja
mov
sbbb
fcom
pop
ror
rcll
fldl
movsl
dec
push
or
sub
add
push
dec
leave
testl
mov
repnz
push
jno
fstps
xchg
clc
mov
mov
paddd
xor
loope
xor
clc
icebp
shl
mov
fisttps
arpl
arpl
test
out
scas
mov
xchg
mov
jo
movsl
xlat
xacquire
leave
flds
popa
pop
imul
cmpl
enter
lret
shll
jp
push
jbe
add
mov
rcr
sub
jno
push
jg
fmull
mov
pop
adc
sbbb
xor
adc
loopne
in
scas
aam
add
xchg
cmp
icebp
sub
cmp
inc
xchg
ja
xchg
or
out
add
xchg
test
scas
xor
pop
jns
jno
sbb
xchg
mov
test
pushf
movsl
jne
adc
or
aam
mov
out
mov
push
stc
jg
loop
jg
pop
je
lahf
imul
add
jge
mov
stos
mov
clc
push
fsub
icebp
in
fwait
cltd
dec
mov
jmp
jae
fidivrs
add
repnz
jae
and
mov
adc
subl
cmp
add
fistpll
je
fildll
jecxz
mov
fxtract
pop
sahf
cltd
adc
mov
ja
lock
xor
rcr
adc
test
out
sub
adc
or
and
fwait
in
xor
iret
stos
mov
cmc
hlt
nop
xchg
out
push
loope
ljmp
orb
xchg
and
and
and
mov
int3
and
and
and
and
and
and
and
and
and
mov
fcmove
cmpsb
popf
fstps
cmp
xchg
sbb
mov
mov
out
push
cwtl
xchg
divb
shl
xlat
rcl
jne
xchg
adc
scas
fstpl
mov
pusha
aad
je
stc
cltd
das
stc
fsubs
jmp
adc
popf
rcr
cltd
sbb
push
xor
div
xor
rclb
shll
cwtl
call
sbb
ficoms
shll
adc
stc
aam
cltd
rcl
lea
repz
push
jmp
push
xchg
or
push
inc
add
xchg
adc
ret
xchg
lds
adc
push
call
add
testb
jg
popa
pop
hlt
shll
pop
or
aad
f2xm1
es
shlb
out
clc
push
fnstsw
push
aas
pop
scas
xchg
hlt
pop
push
push
mov
xor
in
push
push
push
in
roll
aaa
aad
mov
mov
xchg
test
lods
fistl
movsb
sbbl
clc
push
mov
aas
jb
shll
mul
clc
int
aaa
jmp
pop
popa
xlat
push
xchg
sbb
mov
clc
icebp
cltd
jns
popf
jne
mov
enter
ja
clc
push
leave
xchg
xchg
filds
mov
cmp
mov
inc
sub
adc
stc
pop
or
fistpll
xchg
test
jae
ss
cltd
mov
mov
mov
push
jmp
sub
ret
addb
xchg
add
aad
jne
pushf
adc
out
jle
mov
mov
js
mov
inc
jno
dec
enter
sti
add
cmp
imul
cld
jne
sub
and
popa
popa
negl
aad
outsl
orl
scas
sbb
mov
popf
pop
mov
push
sub
adc
mov
xchg
mov
mov
inc
out
scas
cmp
xor
mov
out
jns
je
out
sub
lahf
mov
cmpsl
add
inc
or
imul
jae
sbb
xchg
mov
lock
cmp
int
iret
std
fcomps
mov
xchg
push
mov
data16
mov
std
fwait
call
mov
das
pop
ja
rcll
in
xchg
add
repnz
add
push
pushf
iret
mov
addr16
jg
enter
fcom
rolb
jne
jne
fidivrs
fs
mov
rolb
lds
mov
pop
push
adc
scas
fimull
mov
incl
jle
mov
and
pause
test
mov
xchg
adcb
and
push
stc
js
lock
dec
lods
vpshufd
lods
adc
or
notb
xchg
push
gs
popf
mov
lahf
cmp
pop
dec
iret
fadds
cld
push
push
inc
xchg
inc
lods
adc
jbe
xor
pop
mov
test
ljmp
xlat
inc
out
mov
stos
dec
inc
mov
leave
insl
dec
xchg
xor
aam
pop
adcl
movl
cmp
clc
or
aas
fistl
addr16
xlat
xchg
jns
pop
js
add
scas
lods
fucom
test
sbb
sbb
lock
xchg
fistps
mov
lcall
jp
mov
sub
cmp
pushf
inc
cmpl
adc
popa
pop
inc
jns
add
mov
jbe
iret
ret
add
dec
sarb
and
push
repz
adc
mov
sbbb
mov
xlat
cmp
cmp
cltd
fistpll
mov
mov
jg
cmp
jns
mov
insb
cmpsl
test
adc
int
push
aaa
addr16
rorl
sbb
pop
pop
jne
clc
mov
rolb
jo
movsl
mov
rclb
dec
push
pusha
orl
add
int3
add
or
cmp
aaa
repnz
pop
jle
mov
xor
rcl
sbb
sar
mov
popf
adc
cmp
cld
movb
pop
lds
mov
mov
nop
sbb
sbb
jg
movb
dec
push
xor
and
pop
mov
clc
es
clc
adc
xor
mov
xor
or
pop
rcr
or
jmp
pop
iret
adc
cmpsl
fistps
lock
shlb
fistps
or
cltd
jne
test
adc
fnstcw
test
jb
mov
dec
push
mov
mov
stc
sbb
sbb
xchg
fstps
inc
icebp
push
mov
adc
movl
cwtl
stc
rcrl
js
shlb
je
insb
cwtl
cmpsl
lods
pop
mov
mov
rorl
push
ret
xchg
inc
inc
pop
pop
lock
sub
out
loopne
jle
mov
sbb
xchg
lds
js
xor
add
imul
dec
jb
aad
mov
adc
xor
and
pop
xchg
sbb
adc
xchg
es
sbb
jg
cli
jmp
push
mov
dec
test
push
sbb
xor
push
inc
fmuls
insb
jns
ja
je
imul
nop
bswap
nop
sbb
xor
enter
cmp
js
pop
and
cmp
mov
cltd
lock
jg
into
fs
cmp
xchg
lea
rolb
sbb
add
xchg
xchg
push
ja
xchg
xor
dec
pushf
inc
sbb
add
mov
cmpsl
mov
ret
sbb
ret
rorb
adc
pop
cmp
incb
xor
mov
cltd
xor
mov
loopne
xchg
sub
cmp
inc
sbb
jle
adc
lret
fisubs
arpl
js
cmp
shll
sbb
lock
mov
rcr
mov
dec
repz
fsubrs
out
iret
rcll
addr16
movl
pop
fcom
imul
outsb
mov
scas
clc
cmp
bound
fistpll
jge
jmp
mov
cmp
pop
rcrb
mov
xor
cmpsl
cmp
addr16
insb
sti
loopne
sbb
jecxz
and
and
aam
xchg
add
cmp
pop
rcll
ret
lds
das
jno
cmpsl
sub
aam
xlat
xchg
push
imull
mov
je
push
test
popf
rcrb
xor
inc
xorl
daa
xor
mov
adc
icebp
adc
call
insl
cmp
jns
push
jmp
sub
incl
sbb
cmp
bound
push
cltd
xor
jmp
push
mov
xchg
in
sarl
mov
push
insb
inc
stc
ret
dec
jp
aad
mov
in
pop
xchg
mov
dec
dec
dec
icebp
dec
imul
cli
or
or
vmovntpd
std
not
dec
js
fbstp
xchg
dec
xor
pop
popa
ss
jne
sarl
push
imul
test
cltd
loopne
popf
movl
ss
jne
popl
outsl
jo
adc
test
cmc
push
ds
and
loope
rcrb
lds
sti
dec
fdivp
sbb
mov
add
ss
test
fmull
jg
mov
rorl
es
cwtl
adc
cltd
or
mov
clc
push
test
sbb
mov
push
xorl
adcl
mov
or
roll
f2xm1
mov
dec
sarl
jg
xor
scas
xor
addr16
call
jle
mov
stc
pop
mov
mov
popf
pop
pop
lret
sbb
cltd
lahf
std
nop
add
xlat
jg
xlat
outsl
mov
push
mov
cwtl
jle
sti
imul
out
cld
stos
mov
mov
leave
adc
xchg
mov
inc
testb
int3
in
lods
aad
lahf
popf
mov
std
popf
mov
out
inc
je
or
imul
lret
mov
cmp
push
pop
sahf
sarb
sarb
bound
orl
in
rcrb
mov
add
and
cld
rclb
ja
push
push
jno
outsb
ja
push
fld
pop
test
ret
pop
mov
clc
push
jg
push
sarl
inc
push
lds
stc
adc
sbbl
add
movsl
add
adc
sub
imul
push
jb
pop
dec
xor
stc
leave
lret
test
add
push
pop
clc
dec
mov
or
jnp
mov
mov
imul
sbb
cmp
pop
mov
jbe
dec
inc
shll
pop
loope
dec
out
inc
sub
stc
push
inc
sub
into
add
mov
fwait
stos
rcrl
das
out
jl
jmp
lahf
dec
add
or
push
jmp
push
mov
test
add
push
ja
sub
repz
shrb
jge
aas
mov
pop
xchg
or
sarb
cmp
mov
dec
neg
jb
stos
dec
inc
or
add
cmp
imull
test
mov
fisubrl
pushf
mov
cltd
xchg
daa
sbb
add
vsqrtss
dec
idiv
xchg
xlat
add
ljmp
clc
or
out
fcom
or
adc
mov
mov
cmc
xchg
call
pop
xchg
adc
push
cmp
xchg
xchg
sbb
jno
dec
add
add
mov
outsl
or
mov
mul
sbb
dec
mov
bound
cmp
xchg
in
pop
lahf
jg
lcall
repz
aaa
mov
pop
fcmovbe
inc
or
dec
jle
jo
aam
lcall
test
xlat
out
mov
sbb
test
sti
test
sub
loope
mov
jle
hlt
xlat
pushf
jmp
mov
fadds
jo
hlt
ja
aas
xchg
jnp
insl
aam
and
fimull
inc
xor
push
icebp
popa
rclb
stos
add
repz
xchg
je
lds
popf
nop
xchg
jns
insb
imul
scas
xchg
flds
in
add
lock
push
je
or
jns
daa
outsl
lock
repnz
inc
ds
inc
sti
lods
mov
or
cmc
sti
mov
push
inc
subl
or
push
and
push
cltd
stos
mov
in
testb
nop
sbb
xchg
je
xchg
dec
cmp
insb
mov
mov
call
push
pop
inc
movsb
mov
xor
mov
pop
sbb
adc
jbe
gs
lcall
aam
adc
push
push
movsl
mov
jmp
cmp
dec
sbb
xorl
cmp
jns
pop
idivl
out
sbb
repnz
xchg
repz
jmp
fiadds
roll
add
fstpl
mov
push
lods
pop
mov
adc
jb
mov
addl
lahf
int3
mov
mov
mov
sbb
xchg
pushf
pop
clc
add
jae
xchg
testb
in
loope
mov
jb
adc
mov
stc
push
inc
and
rcll
das
push
leave
inc
dec
cmc
aad
sbb
mov
mov
shll
dec
push
addr16
mov
sbb
xchg
out
jl
jecxz
mov
and
sub
push
scas
push
mov
popf
push
aad
ss
cltd
shrl
adc
ds
and
insl
rolb
xchg
xchg
push
mov
xlat
push
add
dec
stos
push
stos
adc
or
jle
jb
ja
xor
mov
addr16
xchg
xlat
xor
icebp
mov
and
cmp
or
js
xchg
pop
or
addr16
ds
mov
sbb
add
xchg
push
outsl
and
inc
movsl
sbb
xor
xchg
mov
fstp
outsl
mov
out
filds
gs
cmpsl
mov
cli
jecxz
pop
sbb
mov
xor
push
cmp
and
js
adc
int
xor
or
cmp
repnz
jg
mov
xchg
lea
add
repnz
mov
add
jge
xchg
sub
or
adc
push
mov
dec
cmc
push
push
fcompl
mov
xor
adc
and
lcall
insl
popf
xchg
divl
sbb
add
int3
int3
xor
mov
jae
repnz
mov
leave
test
dec
jle
lock
inc
jbe
jae
stc
addr16
out
xor
je
cmc
ret
and
push
lcall
cli
mov
fnstcw
or
mov
nop
mov
clc
adc
bound
addl
sbb
xchg
ffree
aas
pop
mov
lea
xorb
outsb
adc
lds
iret
push
xor
pop
addr16
mov
roll
notb
lods
jo
jno
or
inc
xchg
jle
pop
pavgw
loopne
lock
mov
xchg
cltd
jns
mov
cs
mov
je
fists
scas
mov
xchg
push
pop
xchg
neg
sbb
mov
lret
cld
scas
iret
daa
pop
jns
and
imul
shlb
imul
and
mov
ficoms
js
mov
fldenv
jecxz
js
add
out
ret
cltd
or
rcl
out
mov
out
jl
sub
add
bound
clc
jge
jbe
xchg
push
lds
or
ljmp
jb
xchg
shl
jp
cmp
fldt
sub
or
enter
ss
xchg
sbb
xchg
cwtl
ret
outsb
std
adc
neg
mov
pop
adc
imul
rclb
pusha
dec
adc
cli
xchg
pop
adc
lods
in
adc
pop
push
mov
fdivr
in
sub
jmp
fstl
sbb
and
sub
push
lahf
movsl
mov
push
popa
js
cltd
aas
or
and
push
push
loopne
mov
rcll
mov
xchg
jge
xchg
inc
sub
rcll
lods
out
xchg
push
fndisi(8087
testl
repz
lock
fmulp
roll
popa
js
and
and
fsubrs
xchg
sub
in
jle
hlt
sub
pop
mov
or
mov
stc
iret
and
jne
jge
imul
inc
cltd
mov
sbb
cmpsb
xchg
sbb
call
call
in
insl
outsl
fnstcw
fcomp
int
fistl
test
lods
adc
imull
outsl
andl
jecxz
mov
mov
cld
dec
loope
lret
cmp
or
xor
adc
repz
fldenv
rcr
cld
xchg
dec
fidivrs
xchg
pop
iret
sub
mov
cmp
push
rclb
xchg
push
mov
mov
jns
xchg
adc
idiv
xchg
mov
fmull
add
xchg
xchg
test
xchg
sub
repz
xor
pop
mov
jle
lcall
movsl
jno
add
push
ja
test
test
adc
pop
xchg
sbb
lock
arpl
clc
pop
pop
inc
xchg
out
inc
lock
xor
enter
mov
mov
addr16
fimull
jae
xor
scas
mov
in
test
adc
push
pop
fldl
push
outsb
adc
xor
ret
xchg
movsl
leave
sbbl
mov
adc
loope
repz
stc
push
lahf
or
ss
pop
dec
push
cmp
flds
jae
aad
loopne
jnp
idivl
sbb
repz
js
fldcw
sbb
lock
xor
pop
imul
mov
pop
cmp
icebp
lret
cltd
fincstp
pop
xchg
fstps
es
fldt
nop
imul
mov
js
lahf
jmp
jmp
daa
or
mov
js
push
inc
and
pop
mov
in
mov
jns
outsl
pop
outsl
lds
fiaddl
ljmp
cmpsl
int3
aad
mov
shr
jbe
add
xor
xchg
adc
pop
mov
xchg
dec
in
adc
push
sbb
xor
mov
ja
jb
adc
sub
lret
add
mov
gs
add
jle
rcl
inc
popf
push
out
lea
int
out
push
or
out
jne
adc
std
adc
icebp
inc
icebp
dec
cltd
es
lock
adc
cs
adc
jnp
dec
adc
movsl
xchg
sbb
rorb
xchg
mov
mov
incb
push
xor
imull
cmp
jb
mov
jns
sbb
or
add
in
test
sub
mov
test
imul
shlb
or
mov
arpl
arpl
sub
jno
enter
les
dec
mov
jns
jns
xchg
or
rclb
jge
iret
push
pop
sub
sub
scas
iret
mov
rolb
push
or
and
xor
inc
mov
mov
jbe
loopne
popf
mov
pop
cs
adc
aad
mov
push
cmp
push
jb
test
lds
clc
push
mov
mov
or
mov
mov
jb
mov
mov
stc
mov
push
push
mov
and
cmp
xor
mov
push
outsb
cmc
popa
xorb
xchg
mov
and
cwtl
mov
jbe
jg
cmp
add
mov
push
out
jns
xor
pop
push
push
mov
adc
lret
push
je
mov
jo
or
dec
mov
jno
rcll
mov
push
jns
jb
inc
pop
mov
jne
sbb
mov
scas
ss
fwait
jg
roll
adc
jle
mov
or
cld
add
adc
leave
stc
jle
mov
dec
lret
lret
popa
fsts
jle
xchg
adc
stos
mov
xchg
stc
shrl
cmp
sti
mov
push
popa
xchg
pop
rcll
jo
mov
std
mov
sbb
xchg
inc
jmp
pop
xchg
xchg
cltd
jle
outsl
push
sub
push
mov
jb
orl
ror
mov
lods
xchg
fists
sahf
or
push
movsb
add
icebp
add
rorb
fnstcw
idivb
jmp
add
adc
sub
xchg
data16
cltd
ds
cmc
mov
jo
adc
rcrl
cltd
and
mov
repz
sub
insl
pop
mov
movsb
mov
fistl
xchg
cmp
jge
dec
or
repz
fwait
mov
pop
mov
push
push
and
jle,pn
loop
adc
inc
and
or
rclb
cmp
fldcw
xchg
or
out
cltd
pop
rcrb
pop
push
pop
sbb
cmp
pop
iret
sub
nop
jmp
rcl
pop
das
mov
aaa
test
push
pop
push
sbb
xor
mov
xchg
sbb
adc
adc
std
pop
sub
jns
iret
ja
adc
mov
push
js
div
mov
aam
fidivs
xlat
bound
add
mov
sbb
dec
mov
inc
add
and
sahf
fst
cltd
shrb
int3
orb
adc
int3
leave
sbb
pop
cmp
pop
in
lods
pop
popf
addr16
or
fnstenv
loop
insl
or
push
push
sahf
js
xchg
sub
js
sbb
push
mov
jno
jns
push
iret
inc
jae
outsl
inc
xchg
loop
xchg
jbe
push
push
mov
cmp
pop
in
orl
cmp
nop
fbld
pop
popf
mov
pop
and
fsubrs
push
dec
mov
sarb
jo
mov
addr16
mov
lret
jecxz
iret
test
fld
clc
lds
mov
pushf
rcrb
ret
dec
shlb
sarb
jp
sbb
loope
call
jge
dec
adc
mov
lea
add
aam
jle
lret
not
js
sbb
test
test
das
cmp
mov
popf
std
xchg
aam
xor
xlat
mov
push
popf
sbb
add
inc
loope
cmpsb
pop
mov
xchg
jg
mov
cltd
add
jno
add
test
dec
shlb
test
idivl
dec
outsl
adc
cmc
add
arpl
hlt
jne,pn
xlat
aam
cmc
mov
test
jmp
loopne
and
stc
inc
dec
data16
push
aam
stc
jge
mov
mov
xchg
stc
pop
stos
cmp
add
cmp
dec
or
lret
sbb
xchg
shlb
clc
or
xchg
add
pushf
xor
xchg
jmp
call
jb
xchg
shll
push
loopne
inc
xor
mov
cmpsl
cmpsb
mov
stc
imul
pop
xchg
push
mov
dec
sbb
shlb
cs
or
fisubrl
fwait
pop
inc
das
push
es
aas
mov
jb
stc
cmpsl
cltd
in
mov
cmp
adc
add
loope
push
mov
pop
sbb
aad
xchg
jne
xor
jne
aas
lcall
mov
xor
xchg
aad
mov
jg
mov
sbb
stc
cmp
cltd
adc
jecxz
daa
nop
aam
shlb
arpl
fadds
inc
sub
inc
sub
mov
cltd
negl
xor
jle
cmp
cmp
test
arpl
in
push
sbb
pusha
mov
push
in
out
pop
and
xchg
or
sbb
jno
sbbb
jmp
roll
div
int
sbb
adc
int
outsl
clc
jge
ret
gs
insb
lock
mov
cmp
cltd
or
fnstcw
scas
loopne
mov
lret
cmc
lahf
cmp
clc
and
fmul
cmp
push
clc
iret
lgs
aad
aas
test
rcl
nop
inc
xchg
push
rcll
idivl
jg
imulb
jno
ret
gs
inc
leave
pushf
fstps
mov
add
lds
cmp
std
mov
es
inc
add
es
dec
lock
shll
push
shlb
lods
out
shll
inc
fs
insl
lahf
aam
outsb
mov
mov
addl
loope
fidivrl
fidivs
mov
cmpsl
out
aam
or
lock
data16
popa
test
jge
add
mov
push
sti
pop
test
mov
insl
daa
rep
push
and
xchg
jmp
je
or
jge
fmul
ret
das
les
pop
fidivrl
ss
test
xchg
inc
dec
leave
adc
sbb
push
inc
das
fldcw
push
push
and
xorb
xchg
pop
outsl
fdivs
rcrl
xchg
mov
add
lret
and
hlt
and
cli
sub
andl
ret
jo,pn
mov
fsubrp
mull
mov
or
loop
cltd
sbb
mov
xchg
clc
addr16
push
rclb
jne
fimuls
inc
loopne
stc
daa
add
push
cmp
dec
adc
test
mov
cmp
repz
cmp
sub
push
cwtl
add
xor
movsl
jns
fldcw
iret
mov
movsb
ret
xchg
leave
cltd
jbe
adc
rorl
xchg
mov
push
jecxz
cmpsb
out
mov
fmuls
cmp
xchg
sti
cmpsl
xchg
fs
sub
push
lret
mov
jg
sbbl
push
es
adc
mov
sub
jle
in
rorb
push
cwtl
pushf
or
mov
xchg
jns
adc
cwtl
inc
in
push
mov
xchg
outsb
ds
pusha
roll
loope
xchg
cs
add
pop
fwait
add
and
loope
jecxz
rcl
mov
shll
cmpsb
pop
dec
lahf
xor
aas
out
js
xchg
pop
add
mov
clc
xchg
cltd
loopne
addr16
or
adc
aad
mov
sar
sub
cwtl
mov
aas
add
xchg
es
jmp
sbb
popa
mov
jl
ja
cltd
mov
aad
in
negl
insl
xor
andl
rcr
test
outsl
es
aad
add
lret
popf
xor
lea
sub
stos
mov
clc
push
mov
and
adc
cmp
cmpsb
out
and
cmp
repz
sub
cs
testb
addb
je
stos
xchg
ret
icebp
dec
jns
push
arpl
cltd
clc
ret
push
and
mov
out
in
xchg
mov
xchg
xchg
sbb
xorb
or
incl
add
xchg
fsub
cmp
test
subb
fdivs
out
sub
shll
imul
cltd
fldl
addr16
mov
mov
leave
mov
clc
inc
mov
jle
sbb
mov
je
jle
inc
or
cltd
bnd
aad
lods
loope
lret
daa
clc
aad
jo
test
xor
cli
adc
inc
push
out
fsubs
rorb
jo
mov
ljmp
mulb
sahf
adc
xlat
xchg
jmp
lods
aam
scas
add
fs
mov
lea
jb
xchg
cmpl
lods
fst
jne
xor
push
cmp
xor
push
pop
leave
ds
iret
sub
leave
inc
xchg
cmp
cmpsl
enter
testl
xor
das
cmp
js
lret
jno
and
and
jae
cmovnp
cltd
out
aaa
dec
clc
or
xchg
adc
fidivl
push
aam
std
sar
jo
push
mov
pushf
bound
jmp
cmp
cmpl
jbe
jo
push
dec
in
ds
inc
subl
sub
push
insl
imul
adc
aam
lret
pop
sbb
leave
push
neg
mov
cltd
call
jmp
fsts
xchg
jp
adc
outsl
mov
outsb
fbld
xchg
lods
pushf
cld
orb
out
pop
cld
pushf
jmp
xor
test
dec
rol
mov
push
mov
jp
rcll
sarb
adc
scas
pop
rcr
dec
movsl
pop
test
inc
mov
lods
jbe
xor
lret
in
mov
cmp
and
rcr
popa
pushf
shlb
ds
orl
mov
adc
lea
fistpl
call
enter
adc
scas
clc
loop
xor
test
mov
add
lods
push
xchg
inc
lcall
repnz
lahf
das
xchg
lods
sahf
push
and
lods
add
push
div
lock
cltd
push
pop
jp
or
sahf
add
out
hlt
call
jno
xchg
leave
das
inc
das
mov
in
cli
movsl
adc
jle
mov
aad
inc
in
lret
add
xchg
andl
and
cmp
mov
insb
dec
lods
stc
in
lods
xchg
xchg
xchg
cmp
xchg
test
repz
mov
xchg
popa
mov
cltd
in
push
bound
xchg
lret
rol
pop
mov
or
xchg
adc
cmpsl
cmc
xor
pop
jmp
out
fldl
ret
addr16
imul
jge
aad
idivl
ljmp
test
imul
and
roll
popf
test
xor
daa
ljmp
test
mov
pop
cmp
jg
hlt
mov
fnsave
loopne
inc
mov
inc
mov
stos
push
jb
add
push
add
push
sub
call
rclb
aaa
adc
fsts
lock
ds
add
imull
jno
mov
es
jb
mov
out
test
xor
mov
ja
xor
test
pop
adc
jno
repz
sbb
add
inc
aas
xor
adc
cld
cmp
ds
push
add
push
push
jb
and
jge
and
dec
jnp
in
flds
outsb
lahf
pop
not
les
xlat
cli
sbb
mov
mov
test
or
cmp
lcall
pop
inc
jecxz
mov
mov
mov
dec
push
mov
jecxz
insb
ffree
bound
mov
pop
jno
xchg
popf
adc
in
sar
lcall
jo
movsb
cmc
and
call
push
in
mov
adc
fnstenv
cs
jecxz
mov
adcl
xlat
mov
fcoms
mov
adc
ja
xchg
cltd
jbe
mov
dec
movl
mov
cld
xor
mov
jae
push
iret
test
daa
inc
xorb
lock
fsubr
hlt
hlt
cmp
xchg
call
dec
sub
out
enter
sahf
outsb
xchg
jns
cmp
push
sbbl
sub
lock
sbb
mov
popa
jle
push
jno
hlt
loop
dec
mov
add
or
cmp
jb
rorb
lock
mov
aad
rcrb
test
mov
addr16
inc
sbb
sar
lret
xchg
aaa
dec
lods
lret
ficoms
int
testl
cmp
test
ds
xor
jno
lret
aad
notb
xchg
hlt
fdivl
mov
fabs
mov
clc
std
je
xchg
push
jae
rorl
add
jp
fincstp
xchg
push
or
cmp
sub
mov
loop
xchg
sub
negb
stos
shlb
stos
xor
stc
xor
jg
and
mov
adc
push
mov
pusha
cs
out
popf
and
negb
call
mov
cltd
inc
rcrl
pusha
adc
bnd
mov
or
out
dec
enter
out
es
test
pushf
mov
shlb
repz
xor
ret
mov
or
cmpsb
sar
cmp
fdivl
or
mov
pop
and
push
and
test
jae
ljmp
inc
testl
jmp
sarl
push
aad
xchg
sbb
daa
in
or
xchg
out
lods
loope
push
and
ja
lods
in
mov
xor
push
cwtl
mov
add
dec
orb
push
or
std
fstpt
stc
dec
inc
shl
dec
jmp
push
or
imul
push
add
rcrb
xchg
rorb
bnd
nop
aad
fcmovu
xor
inc
cmpsl
outsb
mov
in
je
ret
iret
into
lahf
leave
iret
cmp
push
mov
dec
cwtl
je
ds
lds
xchg
xchg
cmc
lock
xchg
call
jmp
jge
stos
push
push
pop
push
outsl
jno
cwtl
mov
fcomps
push
and
or
push
lret
sub
jbe
mov
js
lret
add
popf
pop
adc
cwtl
pushl
and
xor
arpl
fnstenv
and
xchg
in
dec
rorb
lods
xor
dec
mov
push
mov
popa
pop
outsl
stc
pop
dec
dec
pusha
lea
lock
or
mov
adc
adc
push
sarb
xchg
dec
lahf
xchg
arpl
dec
fiadds
xchg
sub
add
jle
lret
js
stc
outsb
sub
add
fsubrs
sbb
popa
loope
ja
pop
aaa
nop
stc
jno
test
rcr
and
push
lds
push
outsl
stos
mov
lahf
cmp
jge
rorl
flds
test
aaa
push
mov
test
jl
lock
shrl
neg
ret
mov
adc
stc
xor
rsqrtps
fidivrs
aaa
add
mov
dec
ss
in
sub
mov
sarl
aad
fucomip
pop
push
repz
pushf
hlt
dec
cltd
jmp
push
bound
mov
sub
pop
shll
jmp
sub
inc
iret
push
ljmp
cmpsl
lds
sti
mov
andl
aam
jg
xchg
scas
xor
fstps
push
lea
push
add
leave
addl
xlat
ljmp
adc
shrl
lods
repz
sub
xchg
jl
fwait
push
in
aas
xlat
sti
rolb
shll
pop
dec
mov
jge
daa
rorb
test
ljmp
rolb
test
sbb
push
or
pop
rolb
aas
xchg
mov
sbb
adc
jecxz
jb
fisubrl
mov
or
ja
stos
xchg
dec
push
pushl
out
int
jns
inc
divb
push
lret
jle
sbb
jbe
jge
iret
jge
outsb
stc
clc
jge
pushw
lods
mov
rorb
inc
xor
inc
pop
xchg
sub
cmp
lea
and
std
adc
stc
mov
in
jp
stos
and
testb
pop
mov
push
pop
push
popa
sbb
mov
mov
mov
je
ret
cltd
inc
mov
mov
cmpsl
jle
fsubr
lods
stos
jae
jo
aam
dec
or
or
mov
jbe
sbb
and
addl
shlb
call
xor
and
fdivs
icebp
bound
push
push
rcrb
bound
cltd
push
xchg
mov
cwtl
outsb
mov
ret
sub
addr16
jbe
mov
push
dec
xchg
out
mov
out
and
cld
lods
add
cmp
data16
es
xor
stc
add
pop
mov
and
or
in
mov
xchg
push
pop
jecxz
push
jmp
cmpl
imul
je
clc
adc
cli
loopne
ja
mov
cmp
das
mov
cs
loopne
insb
jecxz
cmpsl
push
pop
add
ds
add
lret
dec
sub
push
fnsave
or
fld
or
add
jnp
inc
arpl
pop
jb
lret
dec
cmpsl
std
mov
xchg
push
imul
xchg
stc
rcr
add
imul
push
jge
push
popa
subl
int3
setbe
aaa
sbb
adc
call
outsl
xchg
inc
cmp
inc
cmp
push
addl
pop
loopne
test
fisubl
jbe
lret
jle
fistps
jg
jbe
std
cs
sbb
lret
pop
and
jb
shll
rcrb
mov
mov
adc
pop
jge
jno
jno
push
aad
testb
mov
mov
mov
iret
cmpsl
cltd
mov
shlb
push
adc
popf
dec
das
push
jecxz
ret
or
dec
mov
pop
jecxz
xchg
sub
pop
mov
pop
xchg
sbb
add
lds
cmpsl
mov
loopne
repnz
sbb
adc
inc
and
jb,pt
pop
imul
icebp
xlat
inc
jne
mov
neg
mov
ljmp
loope
or
inc
dec
mov
aaa
into
cs
mov
sti
dec
rolb
mov
jge
lock
mov
add
out
cltd
push
inc
das
ret
aam
out
cmc
mov
xor
jecxz
iret
adc
clc
addr16
mov
push
xchg
inc
jbe
clc
jbe
mov
push
jns
loopne
out
xlat
dec
dec
shlb
mov
jle
dec
xlat
stos
adc
fidivs
test
aad
aaa
insb
or
mov
sub
fistl
xlat
hlt
and
dec
sti
push
add
mov
mov
jne
jb
push
xchg
xchg
pop
mov
mov
jg
into
rolb
outsb
test
clc
repz
dec
pop
or
lcall
roll
sub
xlat
ja
sbb
sti
jecxz
cltd
adc
sub
cmpsb
inc
inc
xchg
test
add
es
scas
bound
in
bound
loopne
or
or
jnp
and
test
mov
xor
repnz
int3
mov
mov
popf
mov
add
and
std
mov
lods
cmp
test
lock
data16
mov
daa
adc
and
out
std
cltd
mov
jne
pushf
mov
inc
cmc
mov
shl
imul
inc
lea
add
inc
orl
imul
pop
mov
leave
movb
call
stc
js
mov
push
or
mov
xchg
fldenv
jo
mov
gs
push
add
xchg
sub
insb
imul
pop
and
pop
jp
mov
add
mov
mov
add
das
ljmp
jg
aad
adc
aas
icebp
call
pusha
dec
orb
push
test
jle
test
mov
jle
push
loopne
inc
rolb
mov
xlat
stc
dec
sub
movsb
add
xlat
push
cmpsl
inc
lahf
adc
mov
loope
sbbl
jno
adc
out
clc
fstps
aas
enter
ficoms
and
adc
xchg
cs
xchg
lret
push
std
dec
mov
idivl
shlb
xchg
bound
xor
push
sti
push
xor
movsl
push
or
ds
cltd
sub
adc
cmpsb
xchg
in
push
fbld
jle
sbb
pop
inc
sub
stc
push
pop
lret
imul
xchg
jge
jg
icebp
outsb
xchg
mov
sub
stos
dec
pop
inc
xchg
mov
push
repz
negb
aad
lea
test
mov
popa
rclb
xor
dec
std
outsb
adc
scas
add
jg
or
ds
jmp
xchg
sbb
subb
push
mov
rcll
lahf
cmc
hlt
fcomps
repz
andl
pop
xchg
lock
xor
cmc
or
cltd
shr
or
notl
shrl
xchg
cltd
sub
mov
inc
arpl
push
adc
xchg
pushf
push
push
push
push
ror
push
leave
jmp
fwait
lahf
leave
sbb
ljmp
xchg
cmc
fidivl
sbb
sbb
pop
in
stos
xor
cmc
pop
loope
sbb
aad
or
inc
adc
mov
mov
test
in
xchg
mov
pop
adc
cs
jbe
cmp
lods
js
int3
aad
xor
rcrl
mov
fcmovu
adc
push
fst
popf
test
jno
call
cmp
out
imul
incl
xchg
pop
cltd
pop
add
sarb
scas
int
cltd
push
shr
scas
fwait
or
mov
add
mov
ror
xchg
je
leave
xor
lods
cmp
push
aas
addr16
jmp
sub
rcrb
or
cmp
fidivl
jne
adc
aam
leave
push
movsb
xchg
or
inc
es
fcoms
sbb
es
push
daa
in
sub
int3
push
jo
std
cs
push
js
push
sarl
jg
rcr
roll
cmp
dec
ret
lret
adc
movsb
dec
or
mov
std
addl
inc
mov
inc
adc
shlb
xor
mov
mov
ret
fstpl
cmp
inc
rolb
mov
sbb
rcrl
push
cmp
sub
xchg
lret
mov
dec
jne
gs
ja
push
shlb
jns
mov
int
jb
test
and
in
add
test
cmp
into
xchg
dec
cli
dec
int3
push
xchg
sarb
push
cmp
rclb
mov
dec
insb
orb
sub
pop
inc
and
arpl
push
outsl
push
nop
loope
mov
mov
mov
dec
fsubrs
or
rcll
pop
or
push
scas
fucomp
sub
fstl
xchg
add
cmp
mov
idivl
dec
mov
inc
divl
xchg
cmp
das
push
mov
mov
lods
das
push
adc
icebp
movsl
dec
pop
cli
cli
pop
push
shl
std
cltd
jge
cmpsl
sub
cmpsb
int3
sbb
inc
mov
xchg
mov
out
std
add
pop
es
xor
jbe
adc
sub
push
testb
pop
in
std
fldenv
sbb
ds
imul
adc
jle
xchg
cld
adc
adc
xor
jp
xchg
cld
sub
push
bound
push
repnz
lret
lret
les
loopne
mov
mov
in
mov
add
sti
stos
cmp
shrl
push
testb
xchg
mov
push
cmpl
in
sbbl
popf
out
daa
adc
xor
mov
ds
aaa
xchg
inc
je
shrb
loop
in
inc
ret
pop
cmc
xor
mov
cmp
adcb
js
mov
add
testl
imul
pop
sub
xchg
sti
sub
ljmp
stos
shlb
repz
jb
cmp
and
shrb
ds
out
mov
shll
div
mov
adc
jp
fwait
aas
leave
mov
or
cmpsl
inc
ret
and
lret
adc
repnz
inc
int3
inc
jo
call
ss
push
push
jge
add
shll
and
add
cmp
fldl
or
dec
loopne
push
imul
mov
dec
in
jl
mov
push
or
xchg
hlt
mov
or
xchg
inc
push
stc
lret
lahf
out
mov
add
fidivl
sub
iret
xchg
jns
cmc
inc
fistpll
ret
pop
xchg
pop
fld
clc
push
aad
sub
sarb
and
lret
fcoms
adc
out
stos
push
shrl
out
fldl
sbb
ja
int
ss
add
cltd
mov
out
or
mov
jp
inc
lret
jae
out
pop
push
add
aad
cmp
in
pop
or
out
push
pop
or
xlat
loopne
mov
lods
xchg
push
mov
ljmp
fmul
fbstp
pop
fistpl
roll
adc
or
div
push
pop
lret
or
cmp
stc
push
jbe
ljmp
pop
lret
sarl
or
cmp
mov
test
daa
adc
imul
xor
push
rcll
xchg
xor
push
xor
test
cwtl
stc
shrb
adc
out
rcll
movsl
mulb
test
mov
and
jb
cmp
stos
cltd
in
cmc
pop
test
adcl
mov
andl
loop
mov
or
stc
rcll
push
sbb
sti
cmc
xor
cmc
dec
xor
push
in
mov
xchg
and
cmp
loope
lret
cmp
outsl
pop
addl
aaa
int3
inc
sbb
add
adcl
jge
and
imul
jnp
jbe
push
inc
mov
scas
mov
lods
lea
ficoml
jns
pop
mov
push
sbb
sbb
fcomps
cmc
pop
mov
inc
gs
mov
pusha
sub
ds
das
fwait
int3
mov
test
mov
aad
xchg
cmc
lret
pop
jns
notl
gs
imul
daa
mov
divl
jmp
cmp
hlt
out
arpl
pop
xchg
icebp
jle
cmp
cmp
popa
sbb
sarb
lock
stc
mov
lock
mov
mov
or
adc
ret
push
xchg
add
aad
fistl
iret
inc
add
lods
push
into
testl
mov
js
je
repz
jb
adc
dec
les
clc
adc
jle
xchg
adc
cwtl
imul
cltd
rolb
sbb
mov
add
imul
sbb
aaa
jmp
lock
and
push
push
cmc
call
or
insl
or
push
and
pop
aad
leave
sub
dec
dec
loopne
jl
pop
nop
mov
add
dec
xchg
cmpsl
lret
iret
mov
adc
ror
or
lock
popl
mov
fidivrs
cmp
adc
fadd
cltd
js
xchg
push
rcll
adc
movsl
add
loop
dec
fnsave
push
jg
inc
imul
frstor
cli
imul
jl
cltd
shlb
jbe
mov
add
movsl
fisttpll
imul
mov
aad
cmp
jns
mov
out
js
hlt
out
cltd
ret
inc
push
push
popf
fwait
xor
stc
out
push
insl
jbe
mov
popl
cmp
pop
stc
push
sbb
dec
clc
int3
push
xchg
inc
fnsave
iret
push
loop
dec
popa
test
cmc
shl
movsl
xchg
fsts
arpl
daa
cmp
lcall
dec
cwtl
xchg
in
cmc
or
out
push
repz
or
nop
cmpsl
pop
lret
stos
mov
xor
xchg
mov
and
call
or
mov
xor
xor
cltd
decb
lahf
iret
out
aas
mov
push
lds
jge
mov
rorl
push
inc
jmp
sub
xchg
dec
dec
mov
jl
adc
sbb
mov
orl
sbb
push
std
fistpl
nop
pop
addb
cmpsl
push
or
ret
inc
cwtl
nop
sarb
imul
add
cmp
xchg
mov
and
ja
mov
repz
shl
aas
cli
pusha
lock
pop
sarb
cmp
jmp
pop
and
xchg
sti
mov
xchg
sbb
adc
fldcw
sub
and
fsts
in
push
pop
jle
push
push
aas
pop
and
lods
test
fwait
sub
inc
clc
filds
xor
push
int
std
inc
xchg
dec
add
xor
shlb
or
jb
hlt
push
xchg
lret
mov
mov
jl
cwtl
in
fldl
add
push
cltd
cmc
cmp
cmc
cmp
add
sbb
cmp
sbb
rcrl
push
push
popa
or
rcrl
xchg
imul
loop
xchg
iret
lock
cli
mov
leave
jle
and
xchg
addr16
ret
push
ds
pop
mov
dec
cmpsl
add
bnd
outsl
call
ret
xor
xchg
rcl
mov
pop
rcl
popf
ficoms
jg
js
mov
jbe
mov
aad
and
sti
fs
sahf
push
jno
push
xlat
cmovns
outsb
stos
gs
adc
push
fstl
push
scas
shl
fmull
xchg
dec
rorb
pusha
adc
fs
xlat
negl
movsb
adc
cwtl
dec
push
cmc
adc
lock
dec
xor
ds
cwtl
sbb
cltd
adc
stc
fucomip
insb
mov
jae
lret
mov
mov
das
xor
lods
fcomps
xchg
pop
sub
fidivl
pusha
push
mov
xor
or
ja
ds
mov
loope
dec
and
xchg
xchg
sbb
fucomp
pop
push
shlb
dec
push
jae
lock
push
out
lds
or
insl
or
outsb
ja
push
or
out
xchg
push
xchg
sbb
add
test
adc
idivl
out
sarb
icebp
aaa
mov
mov
pop
adc
rcl
jbe
jl
scas
call
sbb
push
xchg
xchg
lock
cs
in
imul
sub
add
gs
iret
jecxz
push
and
pop
ja
jle
jno
push
lcall
cli
lret
pusha
scas
xorl
repz
add
test
jo
jnp
stc
repz
insl
xchg
push
faddl
stos
pop
push
out
clc
and
jnp
test
je
mov
mov
add
lock
xchg
or
scas
ret
push
loope
ret
xchg
xchg
mov
lahf
adc
xchg
pop
fsts
mov
mov
mov
rcrl
inc
jge
push
or
pusha
pop
roll
aad
mov
lret
push
sarl
jno
sarl
lahf
gs
mov
add
ror
sarl
stos
sub
adc
scas
cmpsl
dec
shlb
add
loope
lcall
lcall
mov
shlb
xor
or
push
stos
ret
and
push
cmp
iret
leave
sub
jo
shrl
inc
dec
mov
xchg
mov
cmpsl
adc
ficompl
lods
inc
xor
cld
repz
inc
pushf
xor
fldl
imul
negl
daa
pusha
jae
rcr
das
subb
mov
jecxz
sub
jbe
mov
sarl
hlt
ja
aaa
cmp
jns
orb
push
mov
cltd
jbe
lock
vmwrite
int
movsl
and
and
push
mov
ja
rolb
mov
cltd
pop
cs
adc
jbe
mov
xchg
cwtl
lds
call
sub
adc
testl
mov
nop
mov
push
cmc
mov
mov
and
adc
cmp
push
jle
or
push
mov
subb
add
jle
inc
cwtl
sti
jns
icebp
jmp
push
cwtl
or
sti
ficomps
mov
repnz
and
pop
pop
andb
or
loope
jnp
add
out
decl
fisubl
pop
es
fsts
cmp
data16
or
leave
out
push
dec
pop
add
divb
push
stos
inc
sub
test
sub
rcrb
or
rclb
mov
shl
stc
xchg
nop
clc
outsl
je
inc
pop
pop
in
lock
xchg
aad
lock
sbb
sbb
xor
sbb
jns
mov
push
out
push
call
hlt
sbb
ss
cld
mov
sub
test
push
ljmp
jbe
mulb
mov
adc
std
mov
pop
mov
mov
jns
cmp
sbb
cmpsl
call
rorl
pop
and
and
adc
idivb
xor
xchg
lock
adc
xchg
iret
cltd
popa
push
xchg
xchg
xchg
cmpsb
dec
les
outsb
stos
daa
mov
and
xchg
sbb
fisubrs
mov
sbb
outsl
pop
xchg
xlat
adc
xchg
mov
jge
lock
jp
cmp
repz
adc
fcmovbe
dec
lret
ret
fsubrl
fnstenv
sarb
jb
test
mov
sarb
hlt
lahf
shll
add
cmp
test
fiaddl
mov
jb
jmp
nop
cmp
cmp
xchg
rclb
int3
or
pop
out
das
lods
add
mov
int
das
mov
sub
cmpsl
daa
addl
jae
xlat
xchg
adc
hlt
inc
xor
jbe
daa
icebp
mov
jbe
ffreep
adc
testb
jle
dec
mov
ss
xchg
mov
cmp
xor
adc
or
sbb
and
cmpsl
add
test
pop
mov
iret
sbb
jne
ror
daa
sub
in
icebp
or
push
jae
imul
fcoms
pandn
mov
mov
ljmp
js
xchg
aad
ret
pushf
divb
lds
jge
cmpsl
add
jns
push
adc
and
xchg
push
jbe
fidivrl
fimull
divb
shl
pop
aam
push
mov
mov
add
cmc
jbe
sub
adc
adc
push
rcr
rolb
cmp
neg
push
push
add
shll
cmp
divb
aad
push
jp
div
filds
hlt
jmp
mov
repz
fidivrl
movsl
pop
aad
push
je
fstps
push
sar
push
xor
popf
mov
clc
pop
xchg
sbb
xchg
mov
popf
xchg
or
ss
fnsave
cmp
clc
xchg
aaa
or
ja
jge
jne
enter
mov
je
add
outsl
add
shrl
mov
jae
idiv
shl
xlat
bnd
inc
enter
xchg
sarl
cwtl
call
ret
es
pop
mov
leave
xchg
xor
xchg
push
xor
les
popa
shrb
pushf
sbb
andl
push
roll
cli
int
das
scas
mov
mov
fnstcw
stc
cmp
inc
movsb
mov
pop
fbstp
inc
int3
mov
lods
pop
jne
adc
jnp
mov
repnz
xor
pop
fwait
xor
rol
inc
fnstcw
jb
xchg
leave
or
inc
dec
add
dec
std
xlat
je
jge
in
andl
or
fxch
add
jnp
mov
ds
cmpsb
fdivl
mov
imul
and
popa
pop
pop
shll
jbe
push
jl
mov
out
imul
inc
jbe
cmp
sahf
sub
les
sahf
daa
rolb
cli
les
jns
add
imul
mov
jno
daa
int3
daa
or
rorb
in
lahf
add
push
int3
lock
das
mov
daa
out
arpl
and
jg
mov
mov
mov
loopne
aad
aas
cltd
rolb
jbe
shlb
lods
repnz
std
pop
mov
rcrl
int
aaa
das
ficompl
pushf
mulb
inc
cltd
or
jle
add
add
cmp
jno
cmovns
out
leave
or
loopne
jle
or
stos
inc
test
filds
subb
pop
sbb
pop
and
dec
out
lock
sti
pushf
sbb
push
xchg
sub
jo
jecxz
cmpsb
into
jmp
out
add
test
into
push
sbb
adcl
adc
fistps
scas
out
or
adc
repz
adc
adc
mov
pop
add
incl
pop
inc
xchg
ret
movsb
xor
pop
xchg
inc
ret
dec
pushf
arpl
test
out
lahf
add
lret
stos
mov
mov
add
adc
je
aad
jg
mov
xchg
jmp
xchg
jbe
cltd
jns
pop
mov
mov
sbb
lahf
dec
pop
push
mov
sbb
call
jne
sub
push
mov
das
hlt
sub
fwait
ds
xchg
fsub
sbb
dec
adc
add
mov
leave
or
push
and
xchg
fstpl
lock
lock
jge
leave
or
dec
jno
fs
jns
push
xchg
cltd
stc
into
pop
test
subl
aad
cmp
mov
lret
sub
inc
jns
add
stos
add
jno
popa
fisttpll
int3
sub
arpl
mov
xor
insb
bound
sahf
sbb
cmp
dec
jg
inc
xchg
pop
push
cmp
cld
xchg
inc
aas
jne
xlat
adc
inc
mov
sub
adc
lea
fmuls
in
jns
jecxz
push
push
push
add
insl
xchg
sbb
je
add
cltd
jmp
sahf
jl
outsb
jns
jge
sub
or
daa
push
or
or
clc
push
dec
cmp
pop
adc
fcoml
pop
shrb
fidivl
push
rclb
cmc
jl
dec
push
push
cmp
cld
pop
inc
mov
fiadds
bound
ret
push
xlat
sub
rcr
cmc
in
sbb
dec
push
sbb
mov
lea
jno
pop
imul
jl
and
call
jmp
cs
lea
jbe
aad
fld
lock
dec
imul
sub
aad
in
or
xchg
add
xchg
cwtl
pop
cmpsb
jle
loopne
outsl
lods
jae
push
or
inc
jecxz
jbe
iret
xchg
popf
ds
xor
ds
js
or
sbbl
pop
cmc
fisttpll
repz
aaa
xor
cmp
add
xchg
cmp
cwtl
mov
pop
add
jno
mov
lret
cmpsl
cltd
adc
adc
pop
stc
or
ss
repz
sub
pop
push
adc
cmc
xchg
cmc
fistpll
sahf
add
bound
push
cwtl
cltd
inc
and
cs
pop
mov
lock
pop
imul
jb
pop
push
and
outsl
push
cmc
jge
mov
push
inc
lea
mov
cmpsl
cltd
sub
mov
test
mov
fisubrl
xor
xchg
adc
mov
jns
aam
inc
sub
jae
jne
aad
sbb
fldcw
fcomip
jns
sbb
rcll
sbb
add
fnstenv
std
fbld
mov
aas
mov
inc
mov
mov
xchg
mov
add
cmp
call
xchg
cli
mov
mov
fisttpll
test
out
frndint
nop
push
fcmovnu
insl
std
sbb
lock
cs
test
sbb
ucomiss
or
test
popa
push
fisttpl
lahf
push
fstpl
sub
andl
or
hlt
cltd
sbb
lds
scas
out
out
and
jecxz
mov
pop
pop
clc
jle
dec
leave
int
iret
movsb
pop
insb
stc
je
mov
stc
sbbl
fucomp
arpl
loopne
mov
in
xchg
push
and
jo
mov
jecxz
sbb
mov
dec
adc
dec
js
int3
sbb
add
aad
inc
and
mov
loope
push
hlt
loopne
fdivrs
repnz
xchg
aam
lcall
mov
pop
pop
in
lods
sub
in
sarl
push
mov
out
fbld
mov
jg
and
iret
pop
sub
mov
fisubl
je
test
fcomps
pop
popa
push
decl
push
adc
xchg
pop
push
jle
andl
jp
jbe
mov
xchg
jge
push
hlt
adc
popf
xchg
enter
ret
lock
or
out
sahf
push
mov
or
push
dec
fstp
cltd
push
mov
cmp
fsts
and
mov
push
out
clc
mov
push
rolb
cmpsb
xchg
add
ret
icebp
cwtl
shrb
ljmp
xchg
lds
maskmovq
xchg
push
ret
dec
push
add
cltd
or
sbb
inc
cmp
sbb
cmpl
push
inc
xchg
addr16
cli
bound
sti
fnstcw
fidivrl
aad
cltd
mov
push
test
jge
push
push
mov
jg
dec
ficompl
jp
rcrb
adc
cmpb
enter
lds
jno
mov
ss
fsubrs
pushf
xchg
je
jmp
call
lds
sbb
sbb
stos
lret
or
rclb
clc
jns
and
dec
das
lcall
std
xchg
add
enter
push
jg
std
aas
sub
mov
shlb
in
out
les
mov
scas
pop
cmp
mov
push
imul
adc
movsb
lock
int
inc
pop
sbb
jg
jmp
mov
jge
xchg
repz
js
repz
sub
aam
xchg
jns
mov
ror
addl
pop
roll
and
jl
imul
cmp
lock
loope
lret
sub
cmpl
pop
inc
dec
adc
insl
dec
fnstcw
sbb
stc
or
jge
dec
nop
clc
shlb
jno
stc
sub
mov
sub
std
lds
shrb
dec
jns,pn
jne
xchg
cmc
xor
lahf
int
xchg
inc
les
aad
pushf
fildll
xorl
pop
lret
rclb
add
adc
outsb
pushl
testb
pusha
incb
mov
jns
cmp
js
and
xlat
push
sbb
shrl
das
imul
xchg
std
mov
push
mov
inc
pop
jbe
push
pop
mov
xchg
out
fs
popf
xchg
mov
inc
pop
repz
cmp
xchg
push
sbb
popa
xchg
dec
add
mov
decl
pop
jo
push
imul
mov
outsl
mov
xchg
mov
stc
jge
aad
xchg
fisubrl
jmp
out
and
aad
mov
sbb
addr16
sbb
notb
sbb
xchg
inc
and
shrb
xchg
in
jp
aad
cmp
and
popf
sahf
lea
rcrl
mov
fcmovu
xchg
insb
xchg
push
push
rcrb
xor
mov
add
dec
pop
pop
sub
das
adc
or
jns
fildll
ja
insb
fidivrl
push
out
mov
leave
mov
lea
cmp
xchg
clc
mulb
test
loop
dec
aad
mov
call
or
divb
jns
mov
in
in
xchg
lahf
fwait
jno
into
pop
mov
enter
lret
sbb
ret
lret
repnz
lret
clc
push
lods
mov
inc
fdivs
aam
pop
nop
adc
push
inc
cs
adc
lahf
mov
xchg
aam
sub
pop
mov
aad
notb
and
add
or
ss
arpl
push
pop
fstpt
int
fcos
lods
fistps
cltd
jle
push
daa
jae
bswap
mov
pop
inc
push
mov
push
repz
stc
aad
mov
pop
mov
int
roll
pop
xchg
notb
test
xor
data16
outsl
fnstcw
xchg
add
adc
icebp
sbb
mov
add
iret
test
add
adc
xchg
jmp
clc
out
pop
xchg
add
loope
mov
mov
dec
xchg
mov
jg
pop
cwtl
jmp
cltd
jmp
dec
in
mov
movsl
cwtl
flds
pop
adc
sbb
xor
pop
sbb
mov
or
call
xchg
outsl
rcl
fbstp
pop
pop
sarl
fisttps
filds
cmc
lahf
jg
or
mov
pop
out
aaa
xchg
xchg
jns
xlat
ja
cli
aaa
mov
xchg
cmp
jge
mov
movsb
fs
adc
popf
cmpsl
idivl
push
movsb
mov
lds
mov
push
add
xchg
sbb
shlb
mov
jle
js
rcrl
cltd
adc
aam
xchg
lret
mov
mov
and
push
pop
aad
cmc
adc
int3
test
mov
fs
outsl
bound
inc
sub
and
in
out
mov
mov
dec
and
cmp
push
int
lret
fistpll
mov
cmp
fidivrl
scas
idiv
ficomps
mov
and
inc
je
divl
push
mov
stc
xchg
aam
mov
jle
jmp
std
or
inc
or
lret
mov
adc
adc
dec
enter
out
nop
push
adc
fsubrs
or
xor
addr16
les
push
sub
in
sbb
pop
xchg
sbb
inc
pop
hlt
add
mov
sti
fwait
cwtl
sarb
adc
mov
aas
xchg
cs
pop
sub
inc
jg
std
mov
call
dec
mov
pop
jle
mov
leave
push
push
and
sbb
mov
cmc
xorl
cmc
mov
adc
test
adc
xchg
rolb
cmc
lcall
cwtl
adc
lods
aaa
add
shl
or
stos
or
dec
rcl
rcl
daa
or
add
aas
das
es
push
lret
mov
ds
cmp
xchg
shr
les
pop
lea
lods
in
jo
dec
mov
iret
sbb
mov
xchg
push
sbb
or
push
pop
inc
mov
xchg
sbb
arpl
sbb
jecxz
sbbb
ret
test
or
clc
das
pop
pushf
decl
xchg
push
sub
imul
mov
jno
mov
sbb
aas
push
pop
add
aas
fcmovb
xchg
xlat
sub
movsb
lods
xchg
pop
lahf
loope
outsl
addr16
add
cmp
jno
hlt
loopne
mov
popf
mov
xchg
movb
or
adc
xchg
adc
xor
lock
mov
cmp
aas
lahf
cli
push
xchg
sbb
fcomip
mov
push
push
repnz
lcall
jne
or
mov
outsl
cli
dec
or
mov
cmp
fnstcw
add
adc
js
daa
fiadds
mov
fadds
aad
bound
pushw
or
sbb
dec
jae
gs
fists
subb
outsl
cmp
jae
sbb
ret
adc
or
xlat
adcl
shrl
jg
imul
adc
push
das
adc
cs
testb
js
xchg
cltd
enter
cltd
and
fldl
mov
or
fs
jno
jle
xor
cltd
pop
pop
inc
nop
jl
jne
cld
xor
mov
das
adc
mulb
mov
fldcw
push
cmp
incl
adc
push
jns
xchg
hlt
das
sub
notl
rclb
adc
stc
lock
stos
push
sbb
repz
or
testb
jns
push
pop
or
addr16
mov
adc
adc
repnz
add
aad
mov
jl
cltd
hlt
xchg
fldenv
aaa
pop
mov
push
js
adc
je
pop
sarl
xchg
push
imul
push
xor
dec
jmp
xchg
push
push
push
out
pop
xor
pop
not
repz
xchg
mov
xchg
rolb
mov
xchg
stc
hlt
addl
cmc
adcl
xor
mov
sub
fnstenv
sub
adc
imul
ret
mov
dec
stc
test
xor
inc
mov
mov
rcrl
xchg
leave
sbb
out
sbb
scas
mov
mov
sub
push
mov
lds
gs
ja
or
or
push
inc
and
mov
push
dec
pop
or
or
cmpsl
mov
or
call
std
jecxz
je
xor
loopne
cltd
sahf
pop
shlb
jl
sub
jbe
jno
enter
aam
jo
mov
adc
xlat
pop
jns
add
jg
addb
dec
cmp
or
fwait
push
stc
rorl
sbb
lret
fldl
cmp
inc
jle
mov
inc
mov
ror
mov
fldenv
cmp
lds
inc
push
inc
aad
pop
fmuls
imul
pop
addl
push
clc
aad
jge
mov
shrb
adc
into
repz
pop
lea
mov
or
adc
movsl
dec
add
push
inc
idiv
js
repnz
adc
lahf
aad
out
clc
cmp
sub
or
cmc
repz
xchg
lret
jmp
pop
fyl2x
and
loope
or
pop
inc
cmp
and
lahf
sub
cmp
cli
js
pop
add
jmp
scas
lock
inc
mov
push
dec
fisttps
mov
xor
je
stos
aaa
jno
cltd
test
cmp
or
mov
divb
lcall
xchg
mov
negl
push
aas
sarl
push
jnp
ffreep
jmp
loope
xchg
movsl
std
testl
sbb
fstl
jb
mov
cmpsb
cld
out
xchg
xchg
loop
xor
mov
push
aas
xor
sbb
mov
sbb
cs
rclb
test
or
cmp
stos
adc
in
sbb
mov
adc
rcl
rcll
push
lods
lods
adc
xor
push
outsl
jg
push
jb
cmpsl
fidivrl
into
jp
or
xchg
or
pop
cmc
loope
mov
sub
xor
pop
sbb
push
mov
push
push
outsl
scas
out
jmp
cmpsl
jns
test
fmuls
and
push
inc
dec
mov
pop
jo
sbb
xor
inc
xchg
mov
imul
aad
and
add
roll
out
xlat
and
icebp
icebp
sar
sub
or
jns
pop
sub
enter
mul
dec
mov
mov
test
stc
cmpsb
mov
shrb
je
cltd
ss
xchg
in
mov
cmp
adc
pop
out
lahf
mov
xor
orl
pushl
mov
push
pop
addb
lods
clc
or
jnp
jns
inc
xchg
ds
in
fisttpll
lret
rcl
cwtl
jbe
push
gs
sbb
xchg
jecxz
divl
jns
fwait
icebp
inc
movsb
adc
dec
mov
jmp
into
adc
in
aam
adc
xchg
cmp
roll
pop
sub
ret
add
inc
daa
dec
stc
daa
xchg
add
or
adc
mov
and
pushf
fs
negl
xchg
mov
je
cmpb
fadds
lahf
pop
addr16
aas
mov
mov
mov
scas
sbb
ds
xor
push
ret
scas
fcoml
push
push
cltd
cmp
jb
test
leave
stc
insb
pop
stc
cmc
fidivrl
and
enter
fldenv
js
sub
ret
imul
mov
fsts
lods
stc
cld
mov
vmovsd
xchg
mov
adc
dec
imulb
addb
dec
leave
jle
or
pop
test
shlb
cltd
mov
mov
ss
outsb
sbb
push
add
pop
push
mov
cltd
loope
cmpl
adc
add
cltd
mull
mov
inc
adc
adc
lods
and
cmc
mov
testl
out
rcll
lahf
inc
xor
in
leave
adc
fnstsw
jae
mov
out
dec
cltd
xchg
sbb
xchg
add
sbb
enter
fdivr
stos
pop
sbb
xchg
shrl
push
daa
mov
and
cmp
push
shrb
popf
cltd
cwtl
ror
test
clc
jbe
stos
mov
faddp
jg
into
imull
jae
mov
mov
cmp
loop
push
mov
cmc
adc
popa
jmp
lcall
out
add
dec
xchg
fcmove
popa
test
adc
jmp
lods
or
jg
cltd
aad
clc
mov
or
je
or
mov
aaa
fprem1
mov
ja
jns
test
call
mov
jle
sub
cmc
decl
sub
adc
mov
jbe
jns
test
or
cltd
clc
push
cld
push
push
pop
inc
mov
test
jnp
out
mov
fnstcw
sbb
pop
test
cltd
sub
in
fcomps
or
lea
mov
dec
fnsave
aam
mov
mov
xchg
jne
mov
push
mov
mov
lock
xlat
int
jnp
mov
xchg
dec
fisttpll
jb
sarb
cmp
xor
repz
push
sbb
sub
clc
jg
xchg
pop
dec
clc
lods
xor
jle
push
jle
cmp
mov
rcll
sbb
cmp
mov
xlat
test
add
fildll
xor
xchg
and
mov
fdivr
xlat
add
push
lock
mov
add
mov
mov
dec
xor
or
adc
outsb
pop
or
and
xchg
cli
out
shlb
push
and
popf
mov
jmp
inc
sbb
xlat
sub
pop
dec
cmpl
lds
fsubs
adc
pop
cltd
push
sub
lds
icebp
out
gs
data16
out
mov
sahf
std
insl
lods
mov
sarb
push
test
cmp
ja
or
rcrb
cmp
lock
mull
std
cmpsl
mov
push
lds
cmc
fistpl
xchg
xor
jae
or
adc
inc
adc
lret
jbe
mov
nop
xchg
sub
push
sbb
lock
adc
push
jmp
fisubl
sbb
fists
fisttpll
jmp
dec
push
sub
lret
pop
add
xlat
std
adc
sahf
lret
lea
cli
xchg
aam
fdivrs
push
add
mov
lret
adc
sbbb
bound
mov
sbb
or
fmul
pop
xchg
push
mov
mov
or
dec
repnz
mov
in
sbb
push
fs
and
jns
adc
iret
adc
gs
cmpsb
add
popa
in
sbb
push
ficompl
fdivs
cmp
xchg
pop
pop
cmp
or
add
mov
fisubrl
nop
aaa
push
cmpl
stos
ficoml
push
sub
inc
sub
addr16
clc
pop
mov
lods
shll
lret
test
out
cmpsl
pop
pop
push
jecxz
push
lods
adc
sub
ja
fmuls
inc
jae
sbb
js
mov
lret
rorl
dec
leave
mov
imul
dec
sub
scas
rcrb
xchg
out
push
xchg
sub
lock
or
ret
jno
pusha
mov
fstl
insl
lret
and
out
mov
addl
cmc
dec
aad
mov
mov
sub
sub
int
push
inc
mov
xchg
jae
out
mov
push
and
not
jbe
daa
mov
jae
clc
add
sbb
jae
push
ss
jmp
popa
mov
jl
pop
ror
fldcw
push
fisubrs
xchg
push
insl
imul
aad
cltd
xchg
int
rcll
iret
std
aaa
pop
es
sbb
fwait
and
mov
cmpsl
sbb
mov
inc
pop
into
jb
push
mov
sbbl
add
push
daa
neg
addr16
jne
lret
xor
add
fnstenv
fimuls
inc
fnstsw
in
ss
movsb
stos
xchg
ret
jae
popf
and
push
daa
mov
lcall
mov
push
fsts
mov
fidivrl
pop
dec
or
mov
pop
xchg
or
push
lahf
mov
idivl
jmp
push
pushf
mov
cmp
push
lret
cs
add
pop
fdecstp
add
sahf
and
mov
call
loop
insb
jecxz
test
xor
fldenv
repnz
lret
push
pushf
xor
aad
dec
aad
test
push
add
andb
xor
adc
push
stos
sbb
xchg
cmpsb
push
cmp
jge
jmp
shr
stos
cld
ret
lods
loop
sbb
jle
mov
pop
xor
jne
icebp
adc
inc
mov
sbb
aam
pop
std
add
xor
mov
movsb
jno
fldcw
inc
loop
mov
and
andb
inc
loope
push
xchg
shlb
pop
or
lock
cmc
leave
jbe
jns
mov
cmc
cmp
ds
rcll
out
push
fdivrs
jl
add
dec
lds
out
or
sub
add
mov
or
push
popf
out
and
push
mov
pop
iret
arpl
push
daa
pop
popa
adc
iret
dec
clc
xlat
push
xor
mov
and
sub
jb
mov
test
clc
sub
mov
in
or
hlt
sti
jbe
imul
adc
lcall
pop
mov
cltd
jge
iret
inc
sbb
lret
fnstsw
js
pop
idiv
mov
orl
lock
in
js
jg
mov
adc
push
clc
aam
cli
xor
push
mov
push
icebp
rcl
xchg
jmp
aas
gs
and
inc
xchg
popa
adcl
rorb
xor
ds
sbb
mov
pusha
cld
adc
pop
repz
dec
fisubrs
inc
jns
dec
jns
mov
rclb
incl
jno
add
fldl
xchg
lock
push
leave
sub
jmp
jb
out
push
lock
jbe
dec
out
imul
in
fistps
sub
es
mov
cmc
mov
xor
clc
cmc
clc
and
fldenv
test
mov
bound
xchg
xchg
jmp
dec
mov
cs
or
out
mov
xor
xor
out
adc
fcoms
paddsw
push
cltd
jae
fistl
mov
insl
stc
xlat
push
cltd
push
jl
xchg
vcvtps2pd
popf
dec
lock
xchg
jb
sbb
rcl
mov
pop
loope
cli
jl
jns
xor
das
shrl
test
in
sbb
adc
das
xchg
mov
mov
inc
lds
fdivrp
pop
out
repz
mov
sar
ret
addr16
stc
mov
lret
mov
mov
rclb
adc
push
lret
fiaddl
popf
adc
xchg
or
pop
lret
fldenv
cwtl
test
mov
sarb
push
loope
fstpt
shrb
ja
inc
loopne
mov
iret
or
pop
mov
mov
arpl
push
xlat
rol
sahf
jae
daa
ljmp
in
or
jle
push
cmp
mov
daa
pop
and
cs
rolb
shll
xor
and
lahf
mov
or
rclb
push
or
shrl
sub
loopne
dec
jae
fidivrs
or
lret
movsl
cli
aad
xorb
mov
outsb
jns
add
mov
sub
jo
add
test
mov
cmp
or
push
dec
enter
pop
sarl
xlat
adc
fsts
nop
loope
fcoml
add
pop
xor
xor
pop
cmc
mull
notb
xchg
shlb
lret
sarb
push
sub
mov
pop
mov
xor
push
adc
icebp
push
adc
test
loopne
movb
lock
jb
cltd
dec
jl
stc
je
add
mov
push
mov
pop
fcoms
mov
mov
pop
jns
mov
es
and
jno
sub
jmp
outsl
stc
mov
or
or
cmp
sbb
pop
pop
push
pop
scas
add
test
cmp
loop
shlb
and
inc
or
lds
clc
lret
lahf
jae
rcl
push
add
repnz
cmc
fnsave
popa
inc
pusha
mov
adc
insl
repnz
push
ficompl
test
cs
push
out
sahf
adc
idivb
in
cmc
cltd
dec
lret
aad
rcll
sub
repz
aad
hlt
lret
dec
mov
xor
jb
mov
popa
fiaddl
sarl
jae
fstp
rcrl
lock
daa
int
xchg
pop
push
add
ret
jg
repz
cwtl
stc
sbb
stos
mov
mov
movb
push
clc
sahf
add
dec
icebp
xchg
ret
dec
iret
cltd
inc
nop
xchg
mov
and
rcrl
mov
pop
inc
cmc
hlt
jae
mov
fisubs
jecxz
dec
iret
rcrb
fcomp
push
js
sbb
dec
arpl
pop
push
push
mov
push
xchg
xlat
mov
mov
fists
jno
adc
adc
test
rolb
jp
inc
lret
dec
outsb
out
pop
lock
sarb
data16
add
mov
xor
xlat
imull
lock
insl
cltd
cli
jb
or
cltd
icebp
mov
or
cltd
and
add
aad
sbb
add
dec
jno
test
mov
pop
in
jns
dec
pop
jg
pop
push
jnp
add
outsl
and
push
mov
and
nop
jo
daa
inc
iret
inc
jb
mov
in
push
mov
xor
shlb
push
fnstenv
repz
sbb
sbb
adc
xorl
pop
daa
or
cmp
mov
push
cs
adc
push
cmp
inc
jp
mov
xor
out
xchg
mov
jne
push
cmp
push
fwait
push
bound
or
push
mov
lock
in
xor
add
pop
data16
xchg
pushf
rcrl
jecxz
cmp
jo
addr16
or
sub
or
je
inc
aas
jbe
out
lahf
pop
imul
cmp
in
xchg
daa
cmp
fmuls
jmp
xchg
cltd
scas
insb
hlt
push
mov
pop
scas
mov
mov
sub
std
inc
rorb
pop
imul
fnstenv
mov
or
sbb
push
mov
repnz
gs
leave
adc
data16
mov
loopne
jecxz
shl
int
push
push
jg
jecxz
cltd
xchg
cmp
xchg
ljmp
cmp
and
test
std
lcall
gs
pop
std
dec
aam
std
daa
or
aad
sbb
push
out
or
xor
cltd
notl
inc
jecxz
inc
mov
clc
cs
aad
jmp
imull
xchg
jmp
jg
jmp
int3
mov
xchg
dec
lods
rclb
xor
rorl
loope
bound
mov
lret
cmc
loop
adc
cmc
dec
xorb
or
mov
cs
cli
stc
test
clc
cmc
cmc
xchg
xlat
sub
adc
push
or
fnsave
lock
leave
rcrl
add
shll
dec
daa
jmp
mov
jae
xchg
push
rol
and
mov
inc
hlt
rcr
leave
lock
pusha
mov
inc
aaa
xchg
and
arpl
sub
idivb
cltd
pop
inc
jns
mov
imul
test
cmpsl
inc
sbb
shlb
add
iret
movsb
pop
jae
test
dec
add
jecxz
jbe
xor
cld
aad
hlt
inc
push
push
loope
push
and
fnstenv
pop
mov
adcl
out
sar
sbb
push
sub
leave
idivl
sbb
cmc
lahf
cltd
nop
iret
xlat
lahf
mov
adc
inc
mov
dec
fsubrs
push
lods
jo
negl
sub
jecxz
xchg
jnp
xchg
jno
popf
sbb
je
rolb
xchg
jno
dec
ljmp
inc
dec
fildl
push
idivl
aad
fadds
mov
pusha
leave
dec
xchg
js
push
into
js
sbb
jbe
xchg
cmc
add
adc
xchg
mov
pop
notb
push
repz
inc
lock
rcl
sarb
adc
cltd
lods
repz
sub
clc
push
xchg
test
add
rclb
mov
mov
mov
push
xchg
mov
xchg
rorl
cmpl
mov
iret
sub
inc
inc
in
lret
sub
shll
sbb
add
data16
pop
fsts
nop
xor
pushf
xchg
xchg
mov
or
out
mov
add
cwtl
call
or
jns
mov
or
out
fwait
cli
iret
repz
jno
negl
cmc
and
mov
xor
cmpb
xorl
jp
ja
popf
movl
popf
das
jg
clc
fidivrl
out
mov
mov
mov
fists
mov
mov
sbb
fld
cmp
jns
ret
pop
loope
pop
aad
or
test
push
mov
daa
pop
js
movsl
xchg
sbb
sbb
rol
enter
push
dec
sbb
inc
lock
adc
dec
xor
mov
mov
fnsave
mov
cld
stos
jg
xor
and
int
add
and
jecxz
cmc
insb
clc
jbe
std
cmp
outsb
xor
mov
enter
cmc
add
adc
mov
push
xor
sbb
mov
mov
pop
cmp
mov
adc
xor
jle
sub
popf
mov
mov
jl
outsl
fldl
xor
lret
and
mov
insb
aad
test
pop
and
adc
push
push
ljmp
ror
sbb
aad
lret
ja
fisubl
push
sbb
adc
std
notl
xlat
jae
jmp
mov
push
or
adc
icebp
imul
pop
sub
jbe
xchg
jno
arpl
mull
sbb
inc
cmc
push
or
jp
pusha
sub
addr16
clc
push
pop
iret
xchg
push
repz
mov
imul
divl
arpl
cmp
adc
cmc
xchg
popa
xchg
vphaddubw
and
lods
loope
sar
mov
test
ret
mov
adc
xchg
or
jg
xchg
mov
push
imul
xlat
and
rcrb
xlat
mov
xor
cs
jl
popl
xor
jmp
lods
mov
mov
cltd
xchg
aas
push
adc
or
lret
fmuls
lret
and
pop
jo
lret
and
jns
cmpsl
div
shrl
das
cmp
icebp
jmp
sahf
cmc
sub
pop
dec
mov
pop
push
mov
mov
addr16
dec
loop
aad
sarl
jp
cltd
cwtl
rolb
fsubs
xchg
cld
xchg
inc
jmp
out
sbb
imul
inc
cmp
mov
mov
or
test
xor
rcrl
inc
cwtl
jnp
clc
daa
or
inc
xor
pop
sti
jbe
mov
add
rclb
mov
or
jle
shl
xchg
mov
fidivrl
fisttpl
mov
ss
inc
roll
ret
sub
cs
inc
dec
mul
inc
jne
in
add
leave
push
popf
mov
lret
mov
hlt
int3
sbb
pop
out
pushf
jmp
repnz
ret
pop
jns
add
test
pop
xchg
ds
pop
cmp
push
daa
inc
mov
pop
add
push
icebp
icebp
rclb
cltd
pop
pop
lods
mov
and
mov
push
mov
fmuls
push
mov
jno,pn
leave
shll
in
and
sub
and
or
imul
mov
jmp
dec
cltd
cmp
fucomi
imul
pop
mov
xlat
mov
je
xchg
cltd
into
jo
lret
sti
es
fdiv
loope
mov
add
or
shl
dec
xchg
sub
pop
lock
mov
mov
xor
imulb
adc
clc
mov
sbb
pop
jl
adc
pop
adc
xor
sbb
cs
clc
ret
ss
leave
mov
out
fsts
loope
xchg
pop
jmp
clc
arpl
jo
jo
or
push
sbb
data16
inc
sbb
xchg
dec
rorl
or
xchg
mov
mov
neg
pop
stc
jbe
mov
insb
stos
sub
sarb
push
repz
roll
mov
sub
inc
mov
mov
es
jne
icebp
adc
pop
mov
clc
cmc
es
fdivs
repz
jbe
shlb
nop
xchg
cmc
or
or
fldcw
mov
les
lahf
inc
dec
xor
sarl
pushf
and
lcall
ds
jae
push
scas
xchg
ds
push
inc
xorb
js
lret
aad
adc
xorl
dec
add
push
int
inc
push
push
or
insl
in
outsb
add
or
or
movsl
sub
shll
in
jg
fs
add
jno
jns
rolb
mov
xchg
stc
clc
jge
xchg
dec
push
sub
jns
pop
xor
cli
mov
sarl
jns
inc
popf
adc
adc
mov
aad
sub
aam
fld1
data16
aad
mov
mov
adc
aad
jle
mov
cltd
xchg
jmp
xchg
js
pop
jmp
adcb
test
or
push
xor
xchg
inc
cltd
mov
xchg
repnz
negl
in
add
mov
imul
jno
or
jl
push
sbb
xor
push
std
mov
xchg
mov
daa
xchg
sbb
dec
mov
mov
push
cmp
mov
shll
adc
jns
jbe
add
movsl
je
cmp
aam
hlt
adcl
adc
aas
out
adc
push
nop
sub
cs
test
hlt
dec
xor
jae
daa
daa
subb
pop
xchg
pop
notl
sahf
and
scas
and
sar
or
aas
shrl
dec
lcall
stos
dec
xor
push
fldt
cld
scas
aas
mov
and
in
push
sbb
repnz
jb
fsubs
push
mov
pop
insl
ds
outsl
jno
mov
xchg
mov
adc
rcrb
fadds
add
movlps
stos
adc
in
or
adc
or
mov
mov
mov
xchg
jnp
cmpl
push
hlt
ds
push
cmc
cld
sbb
arpl
mov
hlt
idivl
stc
pushw
pop
fcomp
sti
push
mov
ret
enter
jmp
aam
cmc
cltd
jb
stc
add
xchg
push
pop
sub
or
mov
scas
ffreep
xchg
sahf
andb
cld
pop
imul
cmc
push
shlb
sti
jecxz
sub
xlat
mov
cmp
adc
jno
clc
pop
pusha
sub
push
popf
adc
testl
xchg
fildll
std
ret
call
in
push
lahf
xlat
add
lods
mov
dec
outsb
int
adc
sub
leave
pop
pop
loope
in
push
orl
or
shlb
adc
rclb
dec
sub
loop
adc
lret
ficoms
mov
icebp
push
adc
call
je
rolb
repz
mov
test
cmc
sahf
pop
push
xchg
adc
cmp
and
cltd
les
push
sahf
mov
mov
push
repz
cld
xchg
xchg
imul
or
imull
fldl
ficomps
aam
mov
push
sub
push
add
hlt
mov
or
std
sub
negb
adc
int
aam
or
push
imul
cmc
add
loope
jg
loop
mov
js
pushaw
pop
inc
inc
xlat
cmp
loop
call
not
popa
sbb
rcr
test
xor
jbe
fs
jns
mov
add
int
cmc
sbb
int3
sbb
movsb
and
rcrl
adc
or
int
mov
leave
jmp
mov
mov
add
test
in
ss
fidivl
xchg
mov
and
out
mov
ja
fimuls
xlat
repnz
sub
ljmp
sbb
lock
out
ja
mov
cmp
ss
gs
arpl
clc
je
outsl
sarl
jle
xchg
mov
nop
mov
sbb
sbbl
nop
jbe
cmp
stc
repnz
xchg
mov
adc
idiv
lahf
cwtl
xor
je
pop
push
jmp
pop
xchg
cs
je
fnop
repz
cmp
mov
push
push
mov
xchg
lcall
int
sarl
fwait
loop
fnstenv
outsb
mov
popf
mov
jns
fcmovnu
jns
movsb
cltd
jb
pop
push
add
dec
jno
mov
and
cmc
add
pop
cmp
fincstp
mov
adc
cmp
mov
negl
xchg
stos
push
xchg
fstl
leave
mov
fsts
xchg
xchg
sbb
pop
mov
pause
cmc
mov
mov
jmp
xchg
pop
sbb
sbb
sbb
sbb
lock
ja
add
or
ljmp
jns
mov
addr16
mov
mov
jecxz
push
test
mov
mov
sub
jns
jno
mov
rcrb
loop
inc
sarl
in
flds
in
dec
jne
add
nop
sbb
clc
dec
sbb
and
jbe
mov
xchg
fisttps
xor
xor
push
vpmulhrsw
sub
daa
xlat
iret
push
dec
sbb
mov
mov
lods
gs
lods
add
lods
fld
jg
cmc
hlt
dec
and
mov
adc
dec
sbb
xchg
sahf
mulb
lods
shlb
sbb
jns,pt
push
sub
loop
sub
inc
rcrb
cltd
cltd
sbb
pop
outsb
push
mov
repz
loopne
and
fistps
sahf
mov
or
stc
js
ds
jp
dec
push
sarl
and
fnstcw
lcall
cmp
outsl
divl
or
mov
or
mov
mov
cltd
mov
jns
cmp
pop
push
and
jns
das
cltd
in
int
lds
daa
cltd
xor
xchg
mov
mov
cs
push
or
das
add
xchg
imul
js
or
enter
loope
rorb
enter
sbb
mov
lret
inc
je
push
mov
mov
push
mov
inc
cltd
fucom
lret
pop
inc
push
mov
lahf
lcall
jmp
aam
mov
bound
hlt
sbb
clc
and
insw
mov
adc
jge
pop
inc
fnstsw
sbb
out
push
rcrl
adc
dec
mov
inc
xchg
add
stc
cmp
imull
icebp
enter
push
mov
imul
sbb
std
and
or
jae
add
pop
cmp
out
jno
test
call
mov
in
pop
test
lcall
adc
jmp
pop
sbb
hlt
ds
mov
sub
jecxz
jmp
push
or
lock
stos
sbb
ds
pop
mov
sub
jp
mov
adc
push
inc
aad
xor
out
sbb
ret
loop
addl
and
mov
repz
imull
lcall
xor
out
push
dec
lea
scas
popf
imul
jecxz
and
lds
jns
std
mov
inc
insl
sbb
cmp
jmp
push
xor
adc
or
inc
andb
in
sbb
push
xchg
lret
ret
pop
add
insb
mov
jmp
sbb
call
jmp
xor
fs
imulb
in
lret
mov
xchg
jno
cltd
shrl
loope
xor
les
jg
xchg
or
into
xchg
ficoms
shlb
push
cmc
pop
das
subl
push
test
cs
lds
test
add
pop
dec
fldl
out
insb
popf
adc
mov
mov
jo
adc
lods
jns
icebp
fcoms
aad
mov
incl
lods
add
daa
leave
movsl
in
adc
xchg
roll
and
sub
test
push
and
in
add
cld
nop
xchg
fnstcw
mov
pop
vfrczpd
daa
dec
rol
cmp
xor
loope
in
cmp
jno
cmc
cltd
jbe
and
lods
scas
scas
sbb
jne
negb
pusha
mov
adc
jno
cmp
jl
lds
std
divl
mov
enter
xchg
or
cmpsl
push
les
mov
sbb
cmp
push
int
fldcw
push
sbb
insb
ret
adc
ljmp
xor
mov
sbb
repnz
cmp
inc
mov
jbe
xchg
sub
pop
mov
dec
les
cltd
mov
mov
out
pop
iret
pop
mov
push
xchg
cmp
data16
ja
mov
arpl
sbb
mov
lock
fstp
inc
es
jns
dec
bnd
xor
out
add
faddl
mov
stos
mov
jmp
inc
out
in
shr
xor
sub
idivl
mov
lcall
mov
add
sub
ss
fadds
fwait
dec
js
jae
pop
in
cmpl
xchg
daa
adcl
mov
cmpl
rcll
mov
les
bound
push
icebp
mov
inc
pushf
stc
add
fdiv
roll
cmp
pop
imulb
jno
ret
lock
cmp
xor
xor
icebp
push
push
mov
or
cmp
enter
fnstsw
jle
cmp
insb
mov
xor
imul
cltd
mov
call
jnp
pop
add
cwtl
mov
pop
cwtl
insb
xchg
jl
mov
mov
mov
mov
cmp
pop
jg
and
push
inc
out
mov
dec
popl
fcomip
fcomi
adc
jle
cltd
jmp
lcall
mov
addr16
adc
pop
dec
push
pop
add
pop
lret
sub
push
add
pushf
loop
xchg
push
dec
sbb
jns
mov
push
rcr
pop
sub
loope
rcrl
mov
adc
xchg
jecxz
stos
mov
mov
xlat
je
cltd
push
scas
cltd
test
xchg
hlt
cmp
inc
jmp
add
pop
notb
cltd
loopne
cmp
or
ja
ja
lahf
push
aad
cmp
mov
xchg
jl
into
xchg
pop
push
mov
sbbb
sbb
mov
shll
stc
inc
xchg
fabs
imul
mov
mov
jmp
dec
lcall
loopne
movsb
fisubs
testl
sbb
fsts
xor
mov
xchg
pop
push
mov
pop
scas
inc
sub
xor
or
xor
cmpsl
cmp
mov
cmp
lods
shrl
sbb
xor
pop
cmp
ret
xchg
inc
stc
popf
sbb
test
inc
inc
addr16
pop
push
xchg
lret
and
sbb
sbb
arpl
icebp
repz
jnp
fcmovnbe
cmp
jmp
scas
or
enter
loop
inc
jns
inc
clc
lds
sub
out
mov
lock
and
mov
adc
mov
out
mov
ljmp
cmpb
jle
ja
dec
fistl
in
xchg
sbb
notl
mov
xor
out
adc
das
not
fsubs
aam
xor
mov
fidivrs
mov
idivl
mov
add
adc
out
pop
fstpl
jle
out
ficoms
rcrl
cld
xchg
shlb
pop
pop
mov
lret
xchg
sub
mov
sbb
test
mov
adc
popa
mov
sahf
adc
addb
mov
call
mov
andl
lds
mov
cmp
inc
aam
xor
mov
sti
test
fdiv
xchg
jecxz
dec
dec
push
enter
lock
lods
cmp
xchg
scas
pop
div
xchg
mov
mov
sbb
dec
sbb
push
cs
rolb
call
scas
xchg
fadd
push
inc
call
pop
sbb
pushf
imull
rclb
test
fwait
push
insb
mov
adc
xor
cmc
iret
or
pop
pop
jle
clc
mov
mov
movsb
push
or
cmc
adc
pushf
sub
mov
test
adc
dec
adc
push
cmp
add
clc
orl
cmc
add
stc
pop
das
jno
adc
and
inc
std
lret
insl
sti
lret
push
cmp
ss
int
mov
loope
mov
imul
pop
pop
popf
xchg
xchg
or
roll
push
lods
inc
sub
adc
push
cltd
lret
test
inc
lds
hlt
push
add
cld
sahf
cltd
ds
adc
clc
out
or
ja
lahf
mov
or
and
sub
cmp
xchg
adc
fmul
mul
outsl
js
add
cld
xorl
lock
cmp
test
es
cltd
test
mov
pop
adc
cmc
push
cmp
fistl
je
inc
lds
jne
jge
loopne
pop
mov
pop
jo
int3
jb
mov
or
xchg
inc
mov
outsl
clc
jne
adc
mov
stc
jne
add
push
loop
mov
decl
repnz
std
or
stos
rcl
push
cmp
add
sbb
jg
rcrl
dec
inc
adc
repnz
jnp
into
xchg
and
hlt
hlt
xor
sbb
rcl
sahf
mov
les
ja
loope
mov
aaa
loop
add
sti
test
lret
cmpsb
fbstp
out
shrb
rolb
sub
iret
adc
lahf
stc
dec
cld
imull
push
jns
mov
pushaw
lret
es
scas
decl
add
rcl
mov
cmp
and
arpl
addr16
pop
popf
imul
push
xor
push
xor
xor
add
xchg
push
js
jp
lock
or
and
arpl
bound
cmp
push
les
out
xchg
insl
das
imull
adc
in
outsl
fimull
pop
mov
cmp
mov
es
fisubrs
or
adc
or
std
xor
in
push
adc
push
push
dec
clc
xlat
or
js
lret
test
lret
cltd
xor
lcall
cli
mov
mov
or
jo
add
xor
or
sbb
int
mov
push
sbb
jae
push
repz
jle
inc
mov
cltd
call
adc
sbb
mov
push
xchg
cmp
fldcw
into
pushf
in
sbbl
or
pop
repz
cmp
adc
dec
rclb
inc
xchg
xorl
xchg
rcrb
test
mov
push
cltd
xor
push
repz
xor
cmp
gs
mov
xorl
mov
clc
in
inc
pop
push
lret
jle
dec
mov
jno
cmpsw
mov
or
call
and
popa
dec
jg
inc
push
add
test
jle
dec
shlb
sbb
hlt
fldenv
mov
rolb
mov
mov
hlt
out
into
loope
xchg
jle
jbe
adc
push
xor
cli
fwait
ljmp
and
cmp
les
cwtl
cli
pmuludq
aas
add
loope
adc
popf
xlat
inc
ficomps
ljmp
or
xchg
jae
cmpsb
adc
jmp
sub
int
cltd
pushl
lods
add
dec
jae
jmp
jae
notl
pop
notl
xor
scas
or
lea
test
mov
movsb
repz
mov
cmc
push
adc
pop
pop
cmp
or
add
fistps
cmc
xor
push
mov
push
daa
jo
push
add
push
fldt
mov
sbb
inc
jmp
xor
and
xchg
cmp
adc
leave
adc
sbb
xchg
mov
popf
push
mov
cmpsl
mov
movsb
rorb
or
movsl
or
sahf
add
inc
mov
rcrl
mov
xchg
clc
push
je
rcll
imul
xchg
fisttpll
mov
std
ss
in
addr16
push
lret
xchg
add
lahf
xchg
mov
adc
out
js
xor
mov
js
or
push
push
adc
xchg
push
or
push
and
cltd
adc
pop
mov
sub
sarb
cmp
pop
shrl
adc
mov
mov
fsts
lea
rorb
pushf
lahf
fimuls
mov
mov
xchg
test
sti
hlt
iret
test
into
rcrl
pop
in
add
push
orl
outsb
nop
leave
pop
lds
adc
dec
pop
xchg
hlt
mov
lods
cwtl
repz
jecxz
repz
dec
aad
push
scas
add
pop
mov
sbb
and
decb
repnz
jle
stc
pop
cmp
sub
cmp
or
stos
jae
mov
lock
gs
xchg
adc
repnz
cmp
mov
shll
mov
cld
imul
out
push
jl
xor
in
rorb
cmp
or
sub
adc
xor
mov
pop
jmp
cmpsb
dec
mov
and
push
fsts
shrl
pop
in
out
cltd
lcall
mov
adc
push
xlat
jge
xor
sub
adc
adc
push
test
adc
push
dec
pop
loope
nop
mov
out
aad
cmc
inc
jge
aas
or
xor
push
mov
push
mov
cwtl
cmpl
jnp
andl
sub
sub
push
fstpl
fisubs
xchg
xchg
sub
adc
mov
xor
mov
xor
sub
mov
lcall
xchg
icebp
into
hlt
xchg
or
iret
dec
pop
decl
mov
loope
mov
shl
test
arpl
mov
stos
sbb
ret
xchg
in
inc
xchg
mov
stos
sub
and
lods
enter
ds
or
cltd
aam
and
lds
mov
fidivs
std
bound
dec
rcrw
imull
dec
shl
pop
stos
lock
in
jns
pop
xchg
mov
push
lret
aaa
repz
lahf
jno
je
and
ffreep
adc
add
push
call
xchg
stc
jo
push
repz
add
sub
shlb
subl
pusha
std
stc
xchg
jb
fs
ljmp
jae
push
push
aam
sbb
leave
cmc
lds
pop
sbbl
jbe
inc
and
dec
nop
lods
aaa
loop
ds
cmc
or
cmp
cmpb
cltd
sub
dec
popa
pushf
js
add
repz
pop
xchg
iret
in
push
clc
and
jl
cmc
pop
sub
aaa
push
or
lods
popf
adc
jecxz
stos
mov
daa
pop
xor
fdivrp
aad
adc
stos
mov
cmc
xchg
lods
lcall
pop
mov
xor
lahf
sbb
out
pop
jae
cmc
loope
lock
inc
dec
mov
out
dec
mov
divl
rcrb
pushf
pop
testl
push
pop
and
ja
add
jb
bound
adc
jb
cmc
mov
imulb
adc
push
dec
mov
pop
inc
aam
add
int
out
nop
xchg
js
push
or
pop
xorl
dec
orl
or
xchg
mov
and
insl
sub
in
jp
mov
jne
aas
and
xor
adc
iret
mov
jb
and
adc
add
stos
cwtl
pop
adc
gs
add
fsubrs
xchg
mov
cltd
pop
cltd
cltd
shlb
ffree
pop
outsb
dec
inc
xor
ficompl
push
testb
divb
push
jne
or
add
xor
enter
rorl
das
jbe
lock
inc
xor
adc
rcll
xor
in
std
decl
ds
aam
arpl
adc
in
jo
xchg
scas
mov
or
lock
cltd
jl
inc
mov
aam
shll
push
push
test
cmc
add
iret
push
mov
repnz
ficoms
xchg
leave
cs
inc
lret
mov
addr16
or
sbb
lods
and
xchg
cltd
std
scas
lret
in
or
popf
shl
icebp
inc
xchg
add
clc
dec
dec
adc
cmc
xor
orb
cmc
adc
cmc
xlat
cmc
xchg
sbb
push
xchg
or
test
jne
fwait
or
int
sbb
cmp
mov
jbe
add
sub
aad
sub
arpl
das
and
inc
jl
cmp
inc
push
jns,pt
shl
lds
fnstsw
push
pusha
mov
mov
jno
inc
push
mov
adc
test
shr
pop
inc
mov
pop
fldl2t
mov
inc
cwtl
jae
fsts
das
into
inc
cs
sarb
cmc
cwtl
adc
mov
out
xor
xchg
iret
idivl
adc
adcl
out
clc
ds
gs
rclb
xchg
jge
cld
pop
addr16
leave
shll
addr16
push
inc
aas
insl
ja
ss
fdivp
pop
pop
pop
outsl
mov
mov
mov
lock
jbe
push
jge
add
and
je
xchg
repz
fnstcw
je
sub
inc
jne
push
inc
clc
push
mov
or
iret
jle
inc
inc
aas
fsubrl
fists
push
jmp
bound
loopne
shll
mov
gs
das
adc
cltd
pop
add
push
sbb
inc
aas
push
es
push
lret
inc
xlat
xor
orl
addr16
aas
push
es
adc
addr16
sbb
sbb
mov
xor
enter
fstps
or
add
fnsave
pop
mov
xor
scas
jne,pn
insl
in
push
clc
lret
xlat
sub
stc
psllq
int3
push
mov
push
adcl
mov
xchg
in
shr
push
pop
repz
adc
rcrb
push
pop
xchg
sub
ljmp
xor
jno
adc
jo
in
fldln2
sub
in
das
pop
out
lahf
lods
cmc
call
and
lock
in
mov
out
out
sbb
and
pop
clc
cld
mov
xchg
mov
jg
jae
mov
lock
test
lahf
mov
fnstenv
movsb
mov
mov
push
je
fstps
mov
xchg
mov
rdmsr
adc
pop
inc
cmp
cltd
movsb
push
push
pop
mov
dec
hlt
ds
jp
aad
and
loop
notl
clc
and
stc
out
pushf
xor
inc
xchg
rcrl
add
mov
in
sbbb
mov
shlb
stc
pop
push
inc
inc
aad
out
stos
jecxz
shll
add
xchg
in
fstl
and
mov
xchg
lret
mov
stc
pop
add
lret
cmc
push
push
dec
xlat
cmp
testl
cmpsl
push
xchg
inc
inc
mov
or
in
stc
lcall
xchg
mov
adc
test
xchg
add
fucom
stc
ret
push
iret
push
xchg
or
sbb
sub
std
jmp
cli
xchg
insl
out
xchg
repnz
loop
ds
dec
arpl
fwait
aam
mov
inc
xlat
pushf
jno
push
xchg
jns
jno
fdivrs
fdivr
lcall
xchg
mov
mov
push
push
adc
inc
test
inc
pop
sub
jecxz
inc
ja
mov
jle
dec
mov
js
cli
mov
fldenv
and
pop
shlb
sub
adc
push
xlat
scas
xor
sub
addr16
cltd
popf
cmp
jns
lods
mov
movb
aam
or
cwtl
xlat
mov
fisttps
xor
icebp
repnz
jecxz
cwtl
rclb
mulb
test
jbe
in
sbbl
test
cwtl
or
push
aas
hlt
push
dec
aas
mov
fimull
pop
sub
nop
dec
inc
mov
mov
mov
pop
inc
inc
fnstsw
inc
data16
jmp
leave
shrl
repnz
xlat
pusha
xchg
imul
lahf
xchg
push
push
cmp
jnp
xlat
cmp
mov
loop
mov
or
in
or
cmp
das
fcoml
lret
in
aad
insb
and
loop
pop
lods
jns
lahf
mov
leave
inc
mov
sbb
jns
inc
decl
sbb
lcall
arpl
testb
sub
mov
fbstp
cli
out
pop
push
push
mov
add
call
fiaddl
cmpsl
inc
xchg
add
inc
test
les
lods
movsb
in
push
outsb
in
fisttpll
insb
jl
and
xchg
pusha
cmp
pop
xchg
popa
inc
mov
sarl
pop
jns
mov
sbb
hlt
or
test
movsl
imull
popa
inc
xchg
ja
push
cmpb
out
enter
fidivrl
dec
enter
clc
xor
ret
js
ss
enter
jmp
fidivrs
fchs
mov
jb
sbbl
fisubrl
jp
lcall
lahf
enter
shrl
or
add
rclb
pop
nop
sbb
pop
je
or
ror
fadds
mov
cmp
stc
shrb
push
ret
inc
jns
adc
xor
call
js
out
sbb
mov
mov
jge
rcr
shrb
xchg
test
mov
sbb
ss
out
fucom
mov
sbb
mov
daa
mov
out
add
pop
sub
sub
push
mov
lahf
or
test
lret
aad
mov
add
scas
rclb
out
mov
xor
add
aam
xor
lahf
sub
dec
mov
cltd
sub
or
iret
hlt
or
cltd
lods
int
cli
leave
and
ja
push
clc
or
cwtl
xchg
into
xchg
mov
fisubs
aas
inc
lret
push
sub
or
xor
xlat
adc
ret
sub
jno
fdivs
das
sub
std
mov
int
mov
ss
scas
lea
pop
fninit
xor
sub
xor
fisttpll
leave
sbb
mov
cmpsl
lods
fistpll
xchg
insl
mov
lret
mov
pop
hlt
int
frstor
adc
cmpsb
inc
rcr
or
shlb
lds
mov
popf
dec
mov
out
cli
mov
xchg
pop
mov
stc
jecxz
mov
jl
inc
push
or
std
cld
fbld
cltd
movsl
lea
xor
cmc
mov
adc
rcrb
call
das
jbe
dec
ja
dec
lds
cmp
lods
insl
inc
shlb
push
xlat
add
sub
mov
mov
jecxz
dec
daa
xlat
xchg
adc
mov
testl
mov
rcrb
insl
push
sub
sbb
sbb
cmpsb
fcompl
mov
sub
pusha
aad
out
sub
sbb
ja
xchg
iret
cmp
sbb
cmpsl
or
ja
adc
adc
add
sarb
pop
mov
jnp
std
int
shlb
jge
mov
mov
out
test
repz
xchg
nop
stc
lret
je
or
or
fs
into
out
movsl
out
or
cmp
mov
xor
movsb
out
repnz
jl
push
jb
pop
test
add
xchg
inc
cmp
cmp
xchg
iret
arpl
push
mov
loop
mov
cli
mov
pop
fstl
insb
repnz
in
lds
mov
mov
xor
das
jge
push
js
imul
rolb
dec
gs
clc
mov
push
mov
into
call
sahf
test
and
pop
adc
add
rolb
pushl
lret
xor
jb
sub
add
shll
sbb
mov
bound
jae
lret
std
mov
js
jge
insb
pop
pop
cmp
mov
or
daa
lea
adc
addr16
ss
les
sti
pop
loope
xchg
dec
inc
rorl
es
inc
sub
dec
sub
stos
mov
jne
or
mov
fcoml
scas
lret
mov
or
std
fisubrl
ja
mov
bound
xor
dec
enter
in
pop
pop
add
sub
mov
inc
insb
out
adc
mov
mov
out
jecxz
lret
adcb
mov
sti
mov
sbb
leave
out
add
cmp
dec
mov
mov
int3
cwtl
andb
add
pop
pop
pushf
push
dec
inc
xor
mov
mov
neg
pop
rcl
inc
adc
push
stc
imul
insb
add
mov
pop
push
rclb
mov
push
mov
in
dec
mov
insb
lea
std
mov
and
lahf
push
das
js
push
cmc
iret
pop
pop
shrl
js
inc
loopne
jp
adc
push
jmp
mov
adc
out
mov
pop
mov
lret
xchg
xchg
push
inc
add
sti
cmp
lcall
aas
int3
cmp
mov
out
cmp
add
adc
cmc
or
jge
inc
xchg
dec
out
js
add
xchg
lds
call
add
js
testl
dec
cwtl
fnstcw
adc
or
adc
lret
pop
pop
test
and
divb
or
imul
mov
xchg
xorl
mov
rcrb
call
xchg
jns
mov
call
stos
test
repnz
mov
mov
or
cmpsb
mov
mov
fstp
enter
cmpl
loopne
adc
cltd
pop
pusha
call
jle
cmp
fmul
adc
rclb
xchg
inc
dec
mov
xor
repnz
xor
adc
push
cmpsb
cld
dec
cmp
dec
cli
mov
insb
cld
out
jne
pop
add
rcrb
pop
mov
js
in
cmpsl
add
mov
mov
ss
sub
dec
mov
xor
xor
mov
cmp
xlat
ficompl
pop
push
sub
fcoml
or
cs
pop
pop
sbb
xor
ss
lcall
add
ja
xor
adc
adc
das
sti
jge
and
mov
out
xor
xor
xor
fld
imul
orl
add
sbb
xchg
shlb
int
cmpsb
xor
pop
or
sub
ror
adc
cwtl
aad
inc
mov
movsb
je
les
fwait
cmpb
pushf
adc
pop
mov
jge
mov
popf
xor
je
mov
fadds
xor
dec
mov
push
ds
xchg
mov
jno
test
xchg
leave
sbb
imul
or
sbb
cltd
aam
rorl
cmpsl
lcall
adcl
insl
and
pop
jmp
shrb
daa
es
cmc
inc
fs
sbb
out
inc
mov
xor
inc
mov
xchg
test
jns
test
xchg
lock
jecxz
push
dec
insl
jno
fldcw
push
pop
jbe
adc
in
pop
outsb
xchg
rolb
inc
add
cmpb
aaa
in
jae
std
push
push
inc
push
insl
pusha
stos
cwtl
adcb
sub
js
and
dec
mov
jne
loopne
lds
test
push
ja
sub
leave
sbb
pusha
divb
aad
add
fwait
push
pop
push
sarb
test
pusha
divb
lods
push
popf
aas
mov
fcmovbe
imul
cmp
add
insb
xor
fwait
push
stos
dec
lods
pop
loop
jns
jo
into
mov
jg
push
and
or
in
and
sub
sbb
pushl
adc
jg
xlat
ret
rcrb
mov
cmp
mov
mov
stc
push
or
xor
pop
pop
std
adc
mov
jne
add
jo
jge
aad
fstps
mov
xchg
cmp
xchg
lods
add
inc
mov
and
mov
and
in
js
xchg
sub
xchg
cltd
mov
std
repz
stos
mov
sub
loopne
enter
cmpsb
add
roll
shrl
push
arpl
xchg
sbbl
jnp
push
mov
jge
cmpsb
add
pop
jno
inc
dec
int3
aaa
sbb
add
inc
inc
jle
iret
ja
jb
mov
push
cltd
xchg
outsl
cmc
push
test
outsl
notl
adc
rorl
cmc
lods
outsb
call
and
shl
mov
loope
xor
pusha
or
jnp
insl
jne
popf
nop
and
xlat
idivb
jae
popf
enter
sar
outsl
out
xchg
inc
mov
sub
mov
dec
sbb
mov
xchg
repz
arpl
adc
xor
daa
mov
xchg
pop
mov
lret
cmpsl
fsubrl
inc
pop
push
stos
fistpl
aam
xchg
bound
fisttps
inc
mov
pop
dec
in
jo
rorb
jo
enter
adc
mov
andb
out
das
adc
lock
inc
popf
sbb
int3
add
jp
pop
out
mov
ds
stos
add
andl
xchg
aam
aad
add
add
ret
shrb
adc
in
and
in
adc
loopne
xor
xor
shl
ljmp
fnstcw
xor
dec
test
jg
inc
loop
popf
sub
shrl
push
sub
lods
imul
shll
into
jne
in
mov
sbb
sti
fcom
dec
mov
cmpsb
incl
xor
mov
pop
sbb
fcompl
mov
xor
sbb
lahf
jno
and
fwait
repz
mov
mov
mov
sarb
jbe
pushf
mov
shlb
inc
les
pushl
xor
rclb
mov
add
sub
scas
enter
mov
cmc
xor
addb
and
pop
mov
cmp
loopne
popa
dec
cmp
lds
fsubrs
scas
or
pop
dec
cmc
xor
jo
mov
add
add
ficoms
mov
sub
decb
repz
mov
cmp
divl
jns
das
sub
pushf
rcll
mov
adc
add
adc
mov
repz
idivb
out
xchg
pushf
adc
xchg
add
jecxz
in
cltd
mov
inc
pop
nop
cmp
nop
fdivrs
fnstenv
adc
adcl
or
js
ds
nop
je
cltd
in
fnstenv
lods
repnz
inc
push
js
mov
pop
xchg
aad
cltd
mov
push
adc
inc
cmp
in
test
dec
repz
fldenv
outsb
pop
js
sbb
xchg
pushl
fcomps
xchg
shrb
js
cwtl
push
sub
ljmp
fsubrl
clc
aam
cmp
or
xor
jecxz
pop
repnz
fstps
jne
sbb
jg
rcrl
xor
add
jmp
push
pop
mov
jg
mov
out
xchg
push
push
nop
xor
dec
lock
jnp
jnp
sbb
aaa
mov
push
ja
mov
dec
add
data16
nop
mov
cltd
sbb
cmpsb
or
push
cmpsb
scas
iret
jns
mov
jae
push
jns
jbe
push
mov
fstpt
enter
rolb
sbb
fbld
idiv
out
icebp
stc
xchg
test
in
sbb
xlat
push
pop
sub
sbb
outsl
test
push
lcall
aad
ss
push
ret
shll
push
adc
and
dec
sub
movsb
add
leave
cmc
ret
mov
das
movsb
adc
hlt
push
in
xchg
jae
hlt
mov
adc
je
add
pusha
ja
rclb
loop
adc
push
inc
dec
jo
pop
into
and
push
pop
xorl
daa
or
imul
mov
out
xchg
and
pop
xchg
jbe
xchg
ljmp
push
adc
adc
lock
jg
xor
fdiv
mov
mov
cld
cltd
push
notb
jge
fdiv
mov
hlt
and
adc
out
mov
insl
xor
pushf
push
enter
xchg
push
lcall
fptan
sub
or
mov
xchg
lds
sbb
adc
pop
mov
ror
std
addl
xchg
aaa
mov
test
mov
push
push
test
mov
push
dec
fcoms
test
mov
pop
icebp
push
outsl
out
push
push
xor
cmp
sub
or
cs
xor
test
out
jp
out
inc
cltd
and
inc
fisubl
mov
pop
and
aad
pop
out
loopne
sbb
pop
mov
lea
fisubl
adc
sub
xchg
orb
iret
andl
jno
add
pop
and
fcoms
outsb
jno
repnz
shrb
jae
inc
xor
insl
outsb
jno
divl
pop
mov
icebp
sub
daa
out
fidivrl
out
cmpsb
repz
sbb
fwait
adc
add
dec
mov
int3
adc
addr16
lea
aas
popf
loopne
xchg
mov
xlat
jo
fsts
js
cwtl
adc
or
xchg
iret
xlat
dec
dec
js
cmpsb
testl
cmc
cltd
xchg
xlat
in
sbb
cltd
mov
mov
mov
cltd
cmp
js
push
rcrb
xlat
push
pop
cltd
cmp
fnstenv
jecxz
cmp
cltd
push
nop
xchg
mov
stc
mov
cmc
out
fsub
adc
sarl
xorl
push
mov
mov
cmc
xlat
xor
push
push
fistps
mov
mov
mov
hlt
scas
pop
pushf
pop
sbb
pop
mov
xor
ss
xor
popf
rcll
xchg
sbb
mov
clc
xor
jbe
rcll
xlat
push
push
popf
shll
or
adc
cltd
push
ja
cmc
clc
mov
ss
push
xchg
inc
iret
and
jmp
mov
subl
das
jb
and
fcomps
mov
rcrl
ret
rcr
adc
mov
ja
adc
lcall
cmp
sbb
jbe
loope
xchg
cmp
iret
xchg
adc
jo
xchg
aam
mov
mov
sub
call
iret
popf
fcmovnbe
cwtl
xchg
sbb
inc
jno
add
inc
sti
pop
les
rclb
or
lock
repnz
sbb
push
mov
sbb
fcomip
push
out
or
mov
iret
sar
pop
push
mov
mov
push
rcrl
add
sbb
cmp
mov
cmc
call
jbe
ja
lret
shr
push
and
xchg
div
aam
insl
push
stc
or
adc
mov
out
or
addr16
xchg
movsl
enter
mov
mov
inc
outsl
icebp
leave
clc
ja
sti
sub
add
xchg
push
or
mov
gs
push
stc
pop
push
iret
push
mulb
lock
xchg
inc
daa
mov
push
xor
adc
jne
leave
push
fistps
xchg
add
xchg
mov
xchg
cmpsl
rolb
mov
xchg
aas
repz
xchg
out
out
fcoms
xchg
lahf
inc
les
xchg
xchg
pop
xchg
mov
jmp
push
je
call
jns
int
cmc
das
loop
inc
mov
mov
notl
stc
andl
lods
int
mov
cwtl
ljmp
pop
loop
je
outsb
mov
fdivl
fstpt
jl
call
popa
mov
testb
js
mov
inc
mov
cmpsb
push
pop
insl
and
mov
popf
out
sbb
xchg
adc
shrb
pop
mov
jne
jg
out
cltd
mov
cmp
outsb
pop
sbb
jns
add
mov
sub
xchg
xchg
ficompl
xchg
add
or
fists
movsb
adc
js
cltd
es
adc
and
adc
inc
ds
and
les
adc
int
jb
pand
adc
xor
lds
fdivr
std
xor
jno
mulb
and
daa
out
pop
cmp
rorb
add
mov
jnp
fdivr
and
cmp
cmp
add
add
xchg
fnstsw
scas
rorl
mov
in
jmp
std
inc
popa
popf
outsl
inc
or
mov
xchg
scas
movsb
pop
lds
or
lods
sarl
pop
cmc
lret
dec
mov
pop
sub
flds
sbb
pusha
cmp
sub
mov
xchg
ja
xchg
xchg
cmc
xchg
clc
adc
jno
mov
push
jae
add
ret
adc
out
idivb
stos
in
rcll
test
add
test
xor
sub
and
pop
std
push
push
or
jp,pt
cmp
hlt
fnstcw
scas
mov
jmp
add
dec
pop
push
outsl
sbb
fcomps
mov
orps
cmp
out
in
mov
jge
push
fildll
xchg
mov
cmc
das
fcmovb
je
add
sub
movsb
pop
loop
aad
xor
sub
jns
js
jo
pop
shlb
xor
fwait
lods
repnz
add
inc
xor
cs
test
test
lock
push
rolb
fnstcw
or
pop
sub
push
sub
and
jae
cmc
inc
push
jp
jae
push
adc
sbb
sbbl
mov
pop
jbe
mov
jnp
xchg
pop
sub
xchg
ror
rcrb
lods
jle
clc
outsb
std
xchg
or
dec
hlt
pop
fisttps
xor
cld
out
jecxz
out
clc
aad
stos
push
cmpsb
adc
jp
adc
add
icebp
add
ja
sbb
push
push
es
dec
fcoml
cmp
pop
sbb
popf
adc
add
shll
xchg
cltd
mov
call
daa
and
pop
pinsrw
inc
adc
xchg
daa
mov
xchg
xchg
dec
push
and
in
mov
out
adc
aad
xchg
xchg
mov
cli
mov
idivb
dec
cwtl
and
aad
fldcw
sub
fisubrs
mov
xchg
insl
aaa
pop
jns
sub
mov
xchg
test
jp
push
add
push
and
divb
mov
dec
pop
jns
and
arpl
in
mov
pop
les
adc
cltd
mov
mov
jno
xchg
cltd
jmp
imul
pop
xchg
push
aad
sbb
sbb
sub
in
shrl
xor
mov
shrl
andl
sub
loope
mov
std
pop
push
loop
rcl
pushf
push
xchg
xchg
sub
xlat
cmp
mov
ret
test
inc
loopne
mov
xchg
mov
and
pop
mov
bound
jecxz
sbb
test
push
push
iret
stc
adc
cmpsb
ficoml
fdivs
jmp
sub
dec
mov
mov
xchg
js
xchg
xchg
lea
xchg
lds
push
and
js
mov
add
push
push
dec
mov
iret
adc
push
sub
adc
movsb
ss
ret
aas
lcall
inc
je
push
lahf
xchg
xchg
push
mov
loop
enter
jbe
rcll
jecxz
cmc
jmp
out
dec
pop
cmc
mov
xor
cld
jge
dec
xor
jno
cs
cwtl
std
cmp
xchg
jno
mov
inc
xor
jnp
cltd
aaa
imull
mov
stc
xchg
add
mov
aas
lock
jnp
xchg
and
out
fnstcw
jp
into
push
jno
xchg
push
xor
out
nop
cltd
cmp
shll
in
popa
lea
les
inc
and
ret
mov
cmp
sbb
jle
out
inc
sub
jmp
and
mov
andl
lock
mov
sbb
out
jecxz
je
popa
setno
add
and
gs
mov
mov
in
jbe
out
inc
mov
or
adc
push
repnz
jg
jne
aam
inc
inc
in
neg
xlat
mov
rcl
xchg
inc
daa
dec
mov
mov
xlat
xor
push
xchg
inc
sbb
adc
mov
ret
add
std
rclb
add
xor
inc
aas
and
pop
imul
adc
lods
stc
ret
mov
or
pusha
stc
push
push
cmp
out
cmpsb
add
minps
into
inc
mov
lea
xchg
mov
push
cmp
dec
gs
adc
aad
out
sub
notb
aad
jle
std
push
lret
loope
xor
push
and
sbb
mov
mov
into
xor
jne,pn
lods
and
leave
jo
rclb
push
jbe
in
ja
jmp
or
mov
pop
leave
dec
imul
xchg
outsl
dec
jp
jbe
xor
cmp
xlat
sub
ja
fsubs
rcrb
addb
push
fabs
lds
mov
repnz
mov
cltd
mov
data16
aad
xlat
out
negb
mov
xor
jle
rep
cld
pop
in
testl
fadds
xchg
inc
ds
jbe
aad
insb
adc
ret
imul
cmc
lock
repnz
aad
popa
lods
adc
call
xor
cmp
lahf
mov
push
stc
cmp
cmp
jle
sub
notb
jns
aad
or
jns
sbb
cmp
add
jno
fmul
test
addr16
je
cwtl
mov
mov
xlat
es
sbb
pop
lds
add
xor
xchg
lock
or
cs
jp
xlat
rcll
loope
das
xor
cmp
out
cmc
sbb
mov
mov
mov
add
ja
daa
testl
mov
sbb
and
test
and
jne
call
mov
jbe
test
push
data16
andl
scas
mov
pop
xor
mov
repnz
sti
lcall
add
dec
rorb
cltd
mov
mov
cltd
jno
lret
adc
sub
loope
sbb
add
cld
add
mov
enter
adc
mov
sbb
adcl
push
or
ror
cli
dec
ljmp
add
mov
mov
jb
mov
cld
jo
push
inc
or
xor
sub
push
test
repz
lea
insl
ss
push
cmp
fisubl
popa
push
jne
adc
inc
loopne
add
cltd
mov
mov
add
hlt
ret
jns
lods
xor
mov
lahf
ret
cmpsl
sub
push
xor
sbb
ret
sbb
fimull
leave
lret
push
pop
out
js
outsl
cmp
orb
test
sub
pop
leave
lods
sub
mov
std
cltd
ss
adc
mov
sub
aas
data16
push
adc
xchg
jbe
fwait
dec
js
jmp
popf
jp
ret
cltd
jbe
fistpl
jmp
push
lret
adc
outsl
xchg
lret
pop
gs
imul
rcrb
das
cmp
ret
into
mov
sbb
test
scas
xchg
mov
and
stos
divb
addr16
fwait
daa
or
test
jge
jmp
fcoms
ljmp
inc
rcrl
mov
mov
mov
jbe
clc
push
test
nop
xchg
or
rorl
jmp
call
and
jle
int3
or
imul
scas
jecxz
mov
adc
lea
divl
adc
xchg
push
pop
daa
shr
clc
cltd
repnz
imul
mov
jns
pop
adc
jno
xchg
pop
sbb
out
cld
add
adc
and
lods
cmp
mov
cmp
lods
repnz
push
mov
sbb
aad
xchg
mov
stos
out
clc
stos
in
addb
sbb
les
in
repnz
pop
add
int
stc
push
adc
push
pusha
jno
stc
sub
sbb
adc
xor
jl
sub
mulb
jbe
jne
stc
in
pop
mov
fcoml
jb
adc
aam
xor
ja
or
aad
inc
push
repz
xchg
mov
aaa
adcl
sbb
pop
mov
adc
add
pop
dec
jnp
lret
ret
lock
aam
xchg
jno
js
mov
sub
sarb
ret
mov
or
sarb
ret
inc
shl
shl
data16
rorl
xor
jns
or
shl
or
xor
lock
adc
les
or
jno
stos
inc
leave
aam
stos
jmp
sub
add
xor
xor
mov
cmpsl
test
xor
outsl
pop
adc
stc
mov
pop
stc
dec
adc
repnz
xchg
in
and
xchg
fstps
mov
in
adc
xchg
push
mov
pop
or
xor
push
sahf
sbb
pop
dec
fnstenv
push
jbe
je
push
popf
xor
xchg
ficomps
sbb
outsb
sbb
cltd
push
or
jmp
testb
xchg
cmp
cmp
pop
jle
test
ja
not
out
push
xchg
rcll
push
xor
sbbb
push
sbb
fcmovbe
cwtl
sbb
shll
cmpb
xor
mov
mov
bnd
jno
sbb
xor
shl
iret
push
das
jae
inc
jnp
aaa
adc
jnp
pop
rorl
js
xchg
push
andl
testb
or
adc
inc
rcrb
cmp
push
das
js
cltd
jg
jp
push
jle
stc
ret
fists
mov
ljmp
and
std
xor
push
xor
cmp
imul
or
mov
inc
jno
inc
xchg
mov
and
mov
xorb
lea
repnz
ret
cltd
pop
cmp
fprem
pop
mov
xchg
mov
xchg
pop
jno,pn
push
cltd
fldcw
lahf
shll
xor
rorl
push
xchg
add
dec
lea
xor
in
lcall
cltd
addl
icebp
jmp
inc
fdivp
les
mov
mov
sbbb
jmp
popf
fsincos
nop
fdivrs
mov
sub
mov
js
fstps
xchg
xor
add
pop
pop
lret
cmp
enter
pop
cltd
cltd
pop
cmp
test
xchg
xchg
jb
popa
divb
stos
mulb
mov
push
testb
push
in
mov
jbe
mov
add
xchg
testl
pop
jno
mov
test
lahf
jle
fwait
pop
cltd
and
cmp
mov
movsb
shrl
jo
push
loopne
out
adc
pop
cltd
pop
xchg
sbbb
loope
fcmovu
out
sbb
cltd
push
popa
and
movhps
xor
insb
or
js
lods
stc
sbbl
fimull
pop
lock
xorl
pop
fmuls
mov
cmpsl
sbb
adc
mov
cltd
js
push
rolb
out
inc
inc
aam
xor
jb
pop
fcmove
xchg
and
sarl
mov
sbb
divl
xchg
rcr
lahf
xchg
and
test
pop
cmc
inc
leave
mov
aaa
jns
cltd
pop
xlat
jae
lock
pop
sub
xchg
int3
sub
scas
pop
mov
add
aad
jg
mov
test
popf
loopne
inc
inc
dec
repz
and
gs
jnp
fsubs
ljmp
dec
pop
lds
test
repz
cmpl
xchg
enter
daa
lret
jb,pn
ja
xchg
and
aas
xor
negl
jb
movb
adcl
cmp
jns
fistpl
mov
xchg
popf
stos
iret
cmp
pop
sti
cltd
xlat
aaa
call
and
ret
push
jle
push
inc
daa
movsl
sbb
ret
xorl
jg
jle
aaa
rcr
movsl
pop
rcr
cmp
or
in
push
xchg
mov
fnstcw
mov
aam
test
orb
mov
ret
xlat
ljmp
xchg
jle
cld
and
cmp
aad
inc
in
icebp
aad
mov
jne
push
stc
jb
rcrb
add
jns
call
stc
xor
xor
aad
into
lahf
jecxz
adc
push
es
fstps
hlt
aaa
js
pop
sbb
mov
jge
adcl
popf
jns
rorb
and
inc
push
outsb
add
sti
dec
or
and
loopne
jb
data16
push
fimull
xor
adc
ljmp
inc
aaa
and
cli
mov
loop
fdiv
pop
leave
popa
inc
rcrb
mov
incb
sub
pusha
lcall
or
xchg
repnz
lcall
popa
cli
ja
add
mov
shlb
and
push
adc
cmc
shlb
lds
or
inc
xchg
es
mov
andl
je
jns
xchg
push
dec
or
cld
mov
xlat
add
xorb
sarb
pusha
xchg
push
jne
test
sbb
jns
outsb
mov
loope
rclb
shl
jmp
adc
push
xchg
pop
clc
js
pop
rcrb
pop
adc
cltd
jmp
or
lret
test
test
mov
out
adc
loopne
je
jle
cmp
hlt
jne
adc
mov
shlb
cmp
jns
cmp
div
cmp
pop
mov
scas
pop
xchg
out
jbe
jae
rcrb
hlt
idivl
pause
xlat
cmp
xor
bound
mov
sbb
pop
std
cmpl
ss
jnp
dec
mov
push
in
jmp
pop
sbb
and
or
push
xchg
jge
xor
push
call
negl
xchg
sub
cmp
pop
dec
shl
mov
adc
shl
fcmovnbe
pushf
sahf
xchg
or
sbb
scas
cwtl
addr16
push
mov
lods
pop
xchg
mov
mov
mov
ficoms
push
fcomip
out
sbb
lret
and
pop
mov
sarb
jae
xor
xor
and
add
mov
sarl
bnd
push
inc
add
sbb
into
out
js
jmp
jo
xchg
xor
mov
addl
cltd
mov
push
cs
dec
lock
int3
or
xchg
dec
scas
inc
xor
jne
adc
xor
mov
pop
xchg
aad
outsb
sbb
fnstcw
push
adc
adc
mov
inc
fdivl
shll
fs
adc
sub
je
adc
ret
and
sti
fsubrs
and
jl
ror
mov
pop
in
sbb
dec
pop
int
dec
mov
loopne
je
loopne
rclb
mov
xorl
aas
sbbb
xlat
stc
adc
mov
cmp
ja
rcl
adc
push
jae
addb
hlt
xor
popf
shrb
shll
ja
add
push
mov
in
ja
mov
jae
rclb
rclb
pushf
ret
mov
cmp
jbe
adc
das
adc
sub
xor
xor
gs
std
add
mov
push
ja
pop
pop
idivb
sbb
push
fstpl
cwtl
push
mov
shlb
insb
lahf
les
xor
orl
and
push
je
and
daa
int3
rol
insb
shrb
jb
adc
push
or
clc
cltd
pop
lods
mov
pop
js
or
xchg
aam
insl
scas
addl
xchg
push
adc
or
adc
dec
fdiv
sti
add
aad
fwait
mov
cltd
or
cltd
pop
repz
push
jns
out
pop
mul
xchg
adc
shrb
xchg
rcll
jp
inc
cmp
xchg
fistpl
xchg
xchg
push
push
sub
add
xchg
imull
dec
ljmp
loope
rolb
xor
rcl
cli
pushf
push
add
sti
fwait
dec
add
cltd
or
and
mov
int
xchg
push
adc
lods
popf
jns
xchg
fiadds
push
aaa
xchg
inc
fistl
flds
or
mov
push
inc
mov
add
pop
mov
push
push
pop
dec
sbb
inc
and
xorl
inc
inc
xchg
xor
rolb
fisttpll
push
dec
xor
in
rclb
push
lret
dec
add
shl
out
xchg
nop
shll
pop
jno
out
test
jo
stc
aad
jbe
ret
insl
outsl
add
test
lods
lock
fldcw
mov
sarb
dec
lds
aam
jbe
fcomi
mov
ficomps
ret
cltd
in
xchg
xor
sub
cwtl
iret
add
jns
pop
add
aad
xchg
adc
cmc
adc
pop
sub
into
dec
lret
out
enter
jns
sahf
leave
out
jecxz
cmpsl
jns
and
call
aaa
call
pop
fdivs
loope
fs
nop
aaa
add
jns
or
cmp
stc
cltd
xor
xorb
and
cmc
stos
xchg
add
scas
cld
stos
imul
push
push
insl
jle
stos
add
xchg
xlat
push
orl
mov
aaa
movl
sub
stc
in
in
jns
lock
arpl
fstpl
das
xor
je
jns
xor
pop
xchg
test
cmp
fisubrs
xor
sbb
adc
jge
test
add
into
jl
push
fstl
pop
xchg
rorb
adc
xchg
inc
xchg
cs
cltd
cltd
push
jp
sbb
scas
ja
psubq
adc
mov
cmp
out
std
test
pop
shlb
jnp
icebp
arpl
mov
sahf
jno
mov
loopne
mov
repnz
mov
fnstsw
jle
push
incb
iret
sub
test
mov
or
pusha
mov
jns
cmp
push
jbe
cmp
push
in
dec
das
idiv
sbb
and
xchg
mov
jnp
bound
add
jb
push
imul
das
ror
stc
imul
jb
int3
pop
push
xchg
mov
das
nop
and
inc
pop
outsl
aaa
test
mov
push
cmp
roll
aad
loopne
push
xchg
and
dec
xor
or
inc
add
mov
ja
repz
rcrb
lds
jo
xchg
xor
or
mov
jae
stos
aad
lock
div
aam
inc
xchg
mov
add
ljmp
xchg
lea
pop
and
mov
mov
add
repz
or
icebp
pusha
cmp
xor
mov
mov
cmp
ss
cmp
aaa
xchg
cltd
xchg
je
push
negb
xchg
sbb
fistl
jmp
or
inc
lahf
daa
scas
js
orb
lahf
ss
jae
push
aad
std
add
xchg
shl
push
pop
adc
ja
rolb
loope
sbbl
stc
dec
sarl
pop
aam
out
cmc
jnp
pop
js
sbb
xor
std
aad
sbb
sbb
jnp
loopne
jle
xor
aad
jle
in
cltd
pop
test
in
scas
xchg
dec
sub
call
xor
and
xchg
cmp
orl
xchg
loope
in
xlat
dec
add
leave
sub
pop
jmp
les
cmc
cmp
pop
dec
push
pop
dec
fmul
xor
cwtl
leave
dec
sub
inc
xlat
jno
mov
jno
call
lahf
imul
test
dec
xchg
inc
iret
mov
xchg
pop
nop
test
aad
mov
jns
jo
jae
mov
aas
cli
aad
inc
fnstenv
es
shrb
pushf
fdivrs
jnp
negb
ret
cmp
imul
or
jge
lds
aam
sbbl
or
int
cmp
in
test
adc
icebp
outsb
sub
std
aaa
pop
jbe
rorl
fld
test
add
inc
aam
fst
or
loopne
or
mov
adc
cld
jns
int3
xchg
into
xlat
cmp
das
xchg
popa
xor
incl
das
jns
call
push
lock
lret
push
sub
mov
or
bound
lahf
test
sarl
push
jns
mov
ss
inc
or
ficoms
dec
div
nop
mulb
xor
adc
adc
cwtl
scas
pop
pop
push
sbb
stos
fnsave
xorb
mov
jbe
dec
enter
add
inc
jns
jg
or
jae
mov
cmc
xchg
add
add
fxch
mov
mov
xchg
inc
repz
nop
loopne
sub
ret
add
xchg
sbb
sub
inc
xchg
xchg
popf
mov
adc
subl
shlb
xor
push
mov
jecxz
rorl
sub
test
scas
fsts
sbb
push
push
repnz
push
mov
aaa
add
cmp
pop
ljmp
mov
movsw
testl
cmpsl
movsb
xor
test
nop
shlb
aaa
loope
mov
mov
or
cmp
inc
mov
aaa
rcr
cmp
mov
or
add
xchg
inc
fldcw
dec
sahf
stc
mov
and
lods
fnstsw
pop
xor
ja
int
fstpt
xchg
push
mov
adc
scas
fnstcw
cmp
pop
jno
rcl
jns
cmp
xor
andl
cmp
adc
adc
insb
mov
push
push
xchg
jbe
mov
shl
adcl
loop
adc
push
adc
push
cmp
outsl
pop
aam
js
pop
imul
stc
scas
xchg
xlat
aaa
enter
aaa
xchg
sti
xchg
fwait
nop
ror
sub
aad
mov
in
pusha
add
roll
add
scas
leave
mov
adc
fsubrl
or
sub
sub
fstps
push
add
dec
in
mov
sbb
lret
outsl
inc
dec
js
push
jae
xor
push
repz
test
push
adc
pop
roll
in
inc
mov
cmp
pop
or
xlat
xchg
mov
cmpsl
sub
iret
dec
xlat
jb
and
mov
addr16
xchg
les
dec
inc
frstor
add
mov
vshufps
sub
xchg
mov
cmovae
mov
xor
fimull
jg
dec
and
sar
add
das
pop
std
xchg
stc
cmp
shr
dec
sub
xchg
daa
and
mov
dec
aam
push
stos
popl
sbbb
test
or
add
jle
push
pop
mov
pop
xchg
mov
xchg
fnstenv
mov
sbb
or
addl
sar
lret
cmpsl
std
mov
lret
icebp
loope
pop
pop
cld
movsl
sbb
cltd
fsts
mov
adc
or
fsubs
mov
push
enter
bound
xchg
call
idivl
xchg
xor
pop
imul
mov
lods
or
pop
add
popa
cltd
sbb
rcll
test
sub
jbe
sbb
sbb
lret
fptan
mov
xchg
pop
cmp
out
scas
aam
data16
mov
shlb
or
mov
or
lret
decl
jg
jp
ret
mov
fld
fisttpll
cmp
lret
imul
sbb
mov
pop
popl
and
jp
int3
adc
cld
mov
cmp
icebp
jmp
std
mov
pop
push
mov
mov
insl
stos
jmp
fisubs
leave
testl
insl
push
jb
inc
jge
out
cltd
push
sbb
rorb
xchg
push
mov
in
cmp
mov
adc
pop
aas
adc
or
pushf
jns
rcl
adc
orl
push
adc
pop
bound
pop
add
dec
jbe
dec
std
mov
pop
pop
mov
shll
pop
test
or
ficompl
lock
pop
jns
lret
aam
pop
into
cmpsl
les
inc
mov
fidivs
call
pop
mov
inc
push
mov
push
xor
das
sahf
aam
imulb
jg
push
dec
je
jp
and
push
test
and
fcomps
fprem1
leave
fisttps
xchg
jg
push
fnstsw
ss
push
xor
adc
sbb
sbb
xchg
loopne
adc
mov
adc
mov
mov
pop
sub
arpl
jns
mov
lock
push
stc
pop
shlb
ljmp
push
push
std
cmp
push
neg
mov
inc
push
testb
rcr
stc
jns
iret
add
daa
clc
repnz
push
mov
cld
mov
adc
arpl
in
inc
test
cmc
test
addl
fisubl
add
adc
or
push
push
mov
ljmp
lods
dec
stc
sbb
rep
pusha
push
pop
fwait
jg
nop
aaa
lcall
cmpsl
adc
mov
push
mov
in
test
sbb
push
cwtl
divb
sub
clc
pop
ja
insb
hlt
push
or
sbb
sub
out
jno
fsts
enter
push
jg
pop
sub
adc
rorb
mov
imul
fnstenv
jmp
xor
fldcw
sub
cltd
into
out
adc
cmc
mov
cmp
cmc
adc
push
sti
cmp
jge
pop
popf
sbb
adc
fnsave
mov
xor
loope
aad
ss
cmpsl
fld
adc
lea
pop
mov
dec
cmp
ljmp
mov
in
orb
test
jae
in
repz
fldt
fxam
sar
xor
cmp
iret
or
xchg
or
adc
adc
int3
shlb
mov
clc
sbb
xor
mov
test
mov
sub
or
shlb
add
push
mov
pop
push
push
rorb
mov
rclb
std
test
jle
inc
or
xchg
push
adc
in
xchg
xlat
sbb
add
pop
jae
cmp
idivl
sub
fldenv
cltd
mov
xor
xchg
enter
hlt
push
ss
mov
fcmovnb
pop
ss
dec
cmp
xor
mov
inc
xchg
cmc
lods
jbe
scas
xchg
adc
cwtl
in
fsubp
idivb
and
hlt
sub
push
cltd
pop
pop
mov
out
and
mov
hlt
mov
pop
loope
or
inc
ja
mov
sarl
mov
filds
jns
clc
jnp
inc
cltd
clc
shll
fcomp
jns
test
sub
pop
xchg
enter
jno
xchg
push
neg
js
mov
pop
mov
inc
leave
stos
cmp
xorb
push
sbb
roll
dec
shrb
mov
xlat
adc
xchg
add
xor
push
cmp
push
adc
xchg
lds
and
jae
stc
pop
mov
fbstp
cmpsb
add
adc
test
xchg
xchg
js
push
pop
movsl
cmc
push
push
and
push
adcl
mov
add
xchg
shrl
call
xchg
sub
popa
stos
or
addr16
and
push
mov
and
adc
xlat
xor
or
arpl
xor
cmp
cmp
sbb
or
negl
js
inc
xlat
filds
push
xchg
aam
je
dec
notl
inc
push
push
push
ja
adc
pop
insl
stos
jbe
pop
cmp
adc
adc
stc
data16
insb
adc
lds
outsl
aaa
add
flds
mov
adc
movsb
pop
xlat
roll
filds
dec
mov
sbb
cmp
sbb
cltd
repnz
fstps
loop
popa
aam
mov
jl
cwtl
aaa
out
sahf
pop
js
cltd
mov
loope
scas
jae
mov
lret
stc
mov
stc
sbb
cli
lahf
stc
mov
lock
adc
jp
ds
cmc
fstl
adcl
sbb
pop
insl
outsl
mov
cltd
pop
in
jp
jno
iret
fstl
into
xchg
daa
sbbl
rcl
in
daa
lret
outsl
out
xchg
cltd
dec
inc
jb
icebp
xchg
jbe
xchg
rcrb
dec
or
jle
nop
adc
mov
xchg
push
jl
inc
fbstp
test
test
or
adc
xor
xchg
adc
xchg
jno
lods
dec
xor
lret
fldt
mov
mov
mov
les
xchg
fistpll
adc
ja
pop
push
xchg
cmp
lea
cld
add
loope
mov
js
lods
hlt
pop
xchg
rorl
jmp
jbe,pt
jg
cs
sub
mov
add
arpl
es
add
push
addl
clc
sti
mov
push
hlt
mov
popf
in
xchg
dec
lcall
filds
jl
mov
fnstsw
jecxz
adc
bound
bound
pop
les
adc
mov
cld
pop
push
adc
jns
push
sub
inc
into
nop
fwait
pop
roll
xlat
movsl
xchg
pusha
leave
enter
jns
decl
js
fadd
popa
int
mov
sbb
shl
test
xchg
jp
adc
adc
xor
mov
fistl
fwait
inc
test
mov
gs
inc
mov
push
inc
xlat
insb
pop
dec
jno
je
mov
ja
mov
push
xorl
add
mov
hlt
mov
mov
mov
iret
test
cmp
fisubl
imul
fnstenv
int
div
jae
stos
sar
adc
aad
in
pop
add
jo
cmp
mov
xchg
adc
xor
mov
repz
jmp
push
mov
jl
test
mov
js
pop
sbb
inc
adc
ss
inc
and
add
cmp
lret
push
mov
mov
mov
push
lcall
leave
lds
dec
push
daa
movsb
adc
insl
clc
test
pushf
xchg
cmp
fimull
or
cmpsl
out
fs
sarb
arpl
loope
cmpsl
jp
sub
sbb
sbb
jg
adc
dec
adc
cwtl
in
xor
jmp
f2xm1
addb
adc
loopne
call
mov
ss
divl
insl
cli
imul
ljmp
xor
adc
cwtl
rolb
xchg
stos
cmc
mov
pop
add
addb
jp
sbb
pushf
cltd
mov
push
int3
addl
sub
xchg
mov
mov
repz
jne
test
dec
jecxz
push
xor
daa
icebp
mov
daa
lcall
or
leave
cmp
dec
std
mov
xchg
adc
pop
add
repnz
inc
fwait
inc
jb
dec
in
mov
dec
iret
add
xchg
dec
jge
jmp
rcl
stc
mov
sub
test
insl
hlt
ret
xor
shrl
roll
ror
scas
jns
inc
lahf
loopne
or
cmp
pop
cwtl
xor
dec
pushf
mov
push
in
orl
test
jmp
or
inc
cmp
das
xor
roll
or
rolb
xchg
mov
stos
lahf
xchg
mov
sbb
push
push
icebp
cmc
mov
push
pusha
cmc
or
lret
dec
xor
test
hlt
test
jae
les
or
std
push
cmpsb
shrb
and
imul
xchg
int
mov
push
sbbl
xchg
rclb
iret
xchg
xor
dec
outsb
sbbl
dec
vmovdqa
popf
and
js
ffreep
sbb
or
dec
cwtl
andb
cli
mulb
out
inc
aad
sbb
xor
jns
test
imull
scas
cmp
xchg
int3
sub
xchg
mov
mov
insb
xor
lock
jp
jns
shufps
adc
repnz
cmc
jo
pusha
push
pop
orb
sub
leave
sbb
cltd
adc
inc
scas
pushf
repnz
cwtl
push
push
pop
sub
inc
dec
gs
cltd
push
pop
mov
add
push
push
addr16
xor
test
jle
mov
mov
cwtl
jle
insb
sbb
daa
shl
xchg
xchg
daa
mov
orl
je
jb
aam
sbb
rcrb
pop
std
test
dec
inc
movsl
xchg
sbbl
pop
stc
sbb
mov
lods
rolb
jnp
rorl
repz
faddl
sbb
push
fnstsw
out
int
fsubrl
repz
pop
mov
lret
jo
push
cmpb
push
cld
icebp
fcompl
mov
es
sub
nop
add
shll
push
lock
adc
ja
lret
jmp
aad
or
clc
pushf
stos
push
iret
in
sbb
inc
jmp
sbb
sbb
dec
jg
jp
cwtl
jmp
fcmovne
leave
sbb
add
scas
mov
fistps
push
iret
imul
and
jmp
js
pop
pop
or
xor
cmp
add
or
test
cltd
fldenv
aam
pushf
sarl
add
rol
xchg
mov
mov
push
test
xchg
adc
add
jle
jge
mov
sbb
jg
roll
mov
jo
daa
adc
push
or
add
pop
push
lods
jae
push
loopne
or
push
addl
pop
mov
inc
xchg
lods
shl
addr16
enter
jle
inc
dec
jg
neg
ss
pop
sub
int3
sbb
rorl
je
sbb
mov
jb
xchg
subb
pop
pop
xchg
sbb
pop
adc
push
leave
cwtl
or
push
stc
or
push
fistps
and
sarl
fdivrs
popa
xlat
xchg
loop
les
sub
fistpll
popf
popa
xor
mov
jno
pop
fcmovbe
sub
cmp
pop
push
int
jno
test
mull
add
pop
push
cli
arpl
negb
movsb
mov
xchg
ljmp
imul
mov
testl
jbe
cmp
pop
dec
or
ljmp
pop
add
loopne
pop
imul
sbb
pop
mov
pop
sbb
and
gs
add
jo
sub
pop
rolb
ret
insl
add
insb
cmp
xchg
sbb
xchg
dec
iret
xchg
cmp
mov
push
daa
inc
ret
add
cld
jp
jl
imul
jns
push
xor
push
repnz
fbstp
ret
insb
es
test
not
push
in
mov
sbb
mov
mov
xchg
aad
xor
out
and
insl
outsl
inc
stc
cmp
adc
insl
fs
outsl
add
push
movb
sbb
mov
inc
lock
aaa
pop
add
fucomi
cli
mov
je
ljmp
add
xchg
jp
ja
add
aas
mov
sub
out
xchg
cld
push
xor
jmp
xchg
push
mov
jb
fldl
out
mov
in
aad
pop
or
mov
mov
jbe
pop
fdivr
lods
mov
mov
imul
addb
xor
xchg
jae
dec
adc
stos
lret
ficoml
pop
bound
jb
popf
je
call
xchg
xlat
xor
mov
mov
mov
in
fsts
ja
mov
mov
xchg
jbe
fisttpll
mov
mov
lea
xor
enter
pop
or
adc
shr
clc
or
int
int
inc
pop
adc
lcall
lds
push
imul
or
bound
movsl
xor
shl
pop
inc
push
mov
mov
ljmp
mov
stos
and
stos
and
adc
adc
cld
lret
sarb
jmp
lret
cmp
adc
mov
pop
negl
push
fstpl
add
repnz
push
imul
pop
into
fisttpll
loope
adcb
push
mov
jl
jbe
push
test
into
mov
sub
push
xor
xor
mov
jg
lock
mov
adc
add
or
jo
movsl
fisttpll
mov
jbe
stos
dec
xchg
mov
sbb
out
or
sub
lcall
inc
pushf
fldenv
cmp
xchg
mov
out
fisttpll
je
jecxz
loop
mov
push
pop
inc
mov
cltd
jns
pop
fidivrl
test
mov
aam
hlt
sbbl
ds
sbb
push
push
mov
ret
push
push
rcrl
add
dec
movsb
inc
sahf
sbb
adc
inc
push
pop
je
or
stc
sbb
sbb
xchg
mov
cmp
jmp
je
push
jecxz
pop
aad
fidivl
jl
mov
pop
popa
pop
xor
jecxz
mov
cld
dec
xchg
or
in
sub
clc
dec
mov
insl
jp
push
cmp
inc
xchg
and
mov
ret
xchg
addr16
clc
int
notl
test
fiaddl
arpl
inc
xchg
or
fsubp
hlt
ret
enter
pop
rcll
adcb
shlb
jl
mov
test
js
dec
xchg
imul
arpl
std
adc
stc
mul
mov
frndint
roll
clc
or
adc
mov
xchg
inc
xor
rcr
addr16
ret
pop
sub
mov
repz
mov
ud1
inc
decb
cmp
inc
pop
ds
test
or
std
mov
pop
ja
mov
comiss
adc
jmp
lea
popa
inc
or
add
xchg
xor
mov
pop
or
push
xor
in
jns
imul
adc
sbb
stos
fidivrl
jecxz
push
xlat
sub
mov
lods
lds
xchg
add
xchg
jne
sub
popf
sub
push
push
lds
divl
xchg
push
adc
imul
lret
in
insb
pop
pop
mov
cmc
adc
jge
fsts
rcr
push
and
push
xchg
f2xm1
aam
aaa
dec
cltd
mov
pop
aaa
insl
jmp
int
aam
cwtl
lahf
daa
xchg
sbb
lock
negb
je
aad
mov
xchg
push
cltd
xchg
es
mov
ja
xor
mov
mov
adc
pop
mov
shll
stc
cmp
stc
fsubs
xchg
popa
pop
pop
push
shll
push
stc
mov
cmc
pop
js
rcll
push
pop
or
or
cmp
add
push
sbb
jbe
jae
and
js
push
stc
jecxz
push
out
cwtl
repnz
fnstcw
idivl
ss
repz
fstp
mov
clc
fsts
xchg
push
or
rcrb
adc
xchg
xchg
jns
xchg
popf
sar
pop
add
sbb
fcoml
negl
out
lahf
mov
aad
mov
push
xchg
mov
mov
push
rcll
mov
cltd
fcoml
cltd
repz
rclb
fidivl
lds
mov
mov
jbe
pop
clc
shll
nop
pop
xor
mov
sub
divb
sbb
pop
sbb
aaa
mov
xor
repz
fprem
mov
cmp
shr
pop
adc
add
xchg
cltd
fnstenv
xor
divl
scas
or
enter
rcr
cmp
pop
shlb
jbe
not
adcb
fadds
inc
shll
xchg
rclb
rcl
xor
xlat
mov
shl
jecxz
rcrb
sbb
xlat
pmulhuw
xchg
fadds
mov
xchg
mov
pop
je
shl
fcom
vmread
cltd
mov
adc
imul
sbb
xchg
pop
push
lcall
push
xchg
fnsave
lods
fnstenv
fnstcw
fpatan
gs
jne
not
rcll
xchg
mov
mov
or
call
mov
repnz
push
je
cmp
push
mov
xchg
push
nop
xlat
sarl
xchg
jb
popf
push
sarl
pop
aam
fsts
sbb
xchg
ja
xor
mov
jb
repz
sarb
push
rcrl
xchg
div
adc
aad
xchg
push
cwtl
xchg
adc
cmc
stc
pop
xlat
adc
in
or
roll
pop
cltd
cmpsb
xchg
js
pop
push
in
xchg
dec
adc
xor
and
mov
pop
shlb
xorl
xchg
xchg
jbe
cmc
xchg
jg
cmp
xor
ffree
mov
mov
adc
repz
add
xchg
clc
cmc
nop
xchg
mov
cmp
mov
or
sbb
test
cmpsl
adc
sbb
pop
fcoms
lods
xor
or
pop
mov
iret
add
sbb
mov
mov
xlat
jbe
mov
mov
add
cwtl
or
sub
fldenv
movsb
or
lods
into
mov
or
add
or
je
imul
pop
lahf
cmp
cmp
ja
jae
cmpsb
popa
sub
fiadds
dec
lea
jbe
push
cmc
clc
rol
mov
shr
pusha
lea
je
pusha
jmp
cld
push
xor
mov
pop
into
scas
iret
sub
js
iret
out
lods
sahf
mov
xor
test
pop
mov
cmp
enter
mov
mov
pop
icebp
insl
push
cmp
mov
aaa
lods
inc
xchg
ss
mov
das
gs
mov
dec
push
jae
stos
loope
jno
out
push
jmp
fwait
xlat
lods
xchg
xor
lock
loop
test
dec
mov
lods
inc
pop
std
sar
in
ja
xor
jae
xchg
xchg
dec
pop
mov
fs
xor
das
sbb
hlt
mov
xchg
push
adc
xchg
pop
sbb
sbb
pop
xchg
push
adc
aaa
mov
jnp
les
add
push
mov
out
push
out
mov
imul
mov
jo
push
dec
arpl
and
inc
push
sub
imul
pop
add
test
xor
push
push
push
add
cmpsb
aam
fdivr
ds
test
jl
call
push
sbb
dec
mov
sahf
mov
cmp
or
fldcw
lret
sbb
shlb
outsb
inc
xor
pop
push
sbb
movsl
add
ds
test
mov
stc
mov
pop
pop
fwait
push
cltd
fstps
rcll
shlb
lods
pusha
neg
test
call
pushf
mov
call
jmp
lea
jae
pushf
push
movb
pushl
lea
jmp
bound
jle
push
test
pop
lods
xor
lea
cmp
test
or
sub
loop
lret
rcr
xchg
cmp
test
lods
cmp
mov
rol
cmpsl
rcll
xchg
fcoml
xchg
dec
pop
pop
iret
xor
adc
test
sbb
or
sbb
lock
cs
ljmp
ja
push
enter
push
imul
cld
push
lahf
sub
fistpl
push
adc
or
mov
lea
ja
pushf
mov
imul
mov
add
mov
lea
jmp
pop
negl
dec
xchg
adcb
sbb
and
sub
dec
lods
mov
mov
xchg
les
pop
pop
jb
mov
cltd
loop
movsl
adc
push
fs
xchg
enter
and
dec
clc
inc
repz
push
fidivl
sbb
inc
adcl
scas
mul
fidivrl
pop
cwtl
fcoms
push
adc
inc
and
cs
cmp
clc
rol
jmp
push
pushf
call
pop
and
arpl
icebp
pushf
stos
insb
popa
mov
push
cmp
push
aad
int3
stc
sbbl
lock
or
jbe
jle
xchg
icebp
xlat
dec
lahf
jecxz
negl
fdivl
jae
or
pop
fiadds
sub
aaa
int3
insb
les
pop
xchg
push
xchg
rcll
subb
or
sub
pushf
pusha
mov
pushf
lea
movl
pushf
lea
jmp
pushf
lea
pop
mov
call
jmp
lea
jne
call
test
lea
jbe
push
push
lea
je
xor
btc
add
btr
not
lea
mov
cmc
add
jmp
mov
mov
shlb
out
rorl
loop
data16
jecxz
out
std
pop
push
xor
pop
outsl
push
lahf
inc
xchg
mov
sbb
in
sbb
movsb
inc
inc
arpl
pop
mov
das
es
and
pop
cmp
dec
mov
ucomiss
or
arpl
xlat
mov
cs
jl
adc
jo
fnsave
rcr
cld
mov
sbb
popf
pop
pop
pop
xchg
aad
xchg
push
adc
shlb
cmp
cwtl
or
or
mov
popa
and
xorb
mov
sahf
out
jno
xchg
xor
adc
es
sbb
xor
in
mov
lcall
outsb
jo
jp
xchg
aad
lea
lods
cmp
iret
xchg
mov
pop
fidivl
jge
mov
cmp
inc
add
dec
add
add
fstl
addr16
jge
mov
int
jp
pop
pusha
push
adc
dec
jmp
or
cmp
sbb
and
xor
fmull
cli
iret
pusha
and
sub
pop
pop
mov
cltd
push
mov
jne
pop
out
or
ja
test
pushf
call
mov
adcl
loopne
cld
pop
or
mov
iret
test
sti
cmc
push
out
jecxz
mov
loop
jbe
lea
mov
lods
imul
aaa
sbb
inc
or
inc
or
lock
loope
andb
dec
mov
sbb
stc
and
dec
pop
gs
fisubl
push
adc
jmp
nop
xor
xchg
jns
out
movb
or
movsl
sbb
cltd
xor
pop
call
cmp
testb
pop
xchg
and
es
push
cs
in
imul
data16
lret
push
jno
xchg
insb
pop
xchg
lcall
repz
mov
pushfw
popw
not
push
jmp
xchg
insl
add
xchg
subb
push
xor
push
xor
mov
pop
ljmp
add
je
mov
cmp
dec
ss
pop
and
sub
imul
pop
lret
sbb
mov
mov
mov
sub
loope
inc
mov
fsubl
or
adc
es
nop
mov
rorl
scas
popf
cmp
int3
mov
add
inc
les
pop
les
jl
lahf
pop
in
push
adc
leave
out
scas
out
fmul
push
orb
fwait
mov
adc
xchg
push
push
adc
test
sub
push
pusha
bt
call
out
cmpsb
push
or
fbstp
add
inc
mov
int
ret
out
mov
jp
pusha
call
xor
popa
icebp
rclb
xlat
jecxz
stos
ss
xor
and
push
jmp
adc
aaa
or
push
sbb
xor
or
mov
js
sub
fstpl
cmc
fldl
push
mov
adc
jg
jns
rdtsc
cmc
les
jl
notl
mov
fs
call
pusha
jmp
push
jl
je
stc
lcall
xchg
lods
pusha
mov
scas
xchg
rcll
pop
push
es
sbbb
xchg
xlat
jns
neg
sub
outsb
xor
in
pop
out
jecxz
jecxz
arpl
and
adc
fs
push
push
rcll
mov
stc
sbb
js
xchg
xor
aad
js
lock
jns
adc
pop
mov
cmpsl
iret
mov
jnp
mov
insl
insb
rcrb
loope
data16
add
mov
ljmp
cmpsl
jge
add
dec
cmpsb
ret
push
xor
mov
xor
mov
ss
cwtl
push
adc
jne
mov
mov
icebp
push
mov
ret
test
iret
stos
pop
dec
jg
hlt
mov
in
iret
sti
enter
ljmp
std
mov
ficomps
push
pusha
mov
imul
xor
es
or
push
push
inc
cmc
shlb
hlt
lods
mov
cmpl
xor
and
pop
sbb
push
daa
icebp
mov
loope
scas
enter
cmpsl
loopne
fwait
mov
call
mov
clc
mov
insl
lds
icebp
adc
into
nop
inc
mov
sbb
iret
add
jecxz
dec
call
movsb
cmp
xchg
pushf
push
add
inc
arpl
leave
xchg
mov
jo
test
jl
loopne
and
in
loopne
xchg
fstl
mov
or
mov
xor
xchg
fs
sbb
les
arpl
sub
imul
subl
mov
jmp
je
or
mov
mov
popf
xor
cmc
cmp
divl
push
push
adc
movzwl
clc
movsbw
cmp
btr
mov
call
pusha
pusha
lea
jae
pusha
xor
pusha
lea
call
pusha
movb
lea
jae
push
xchg
push
mov
mov
jmp
pushf
mov
jmp
lea
ret
call
pushf
pusha
movb
mov
jmp
bound
or
pop
mov
mov
xor
out
mov
adcb
in
jno
mov
ret
cs
mov
mov
add
sbb
scas
test
in
jecxz
sub
dec
ljmp
out
push
mov
cli
lods
fs
add
test
inc
push
cld
add
gs
mov
add
cmp
mov
adc
sub
arpl
jbe
mov
pop
mov
sarl
xlat
jb
pop
int
mov
pushl
sbb
jge
aad
jge
adc
and
fidivrs
mov
out
imul
stos
pop
dec
sets
push
nop
movsl
adc
leave
xchg
pop
xor
fistpl
add
pop
mov
push
adc
push
xchg
aam
sub
mov
or
rol
pushf
pushf
pusha
pushl
lea
call
clc
cmp
pusha
push
call
jmp
adc
in
fistl
sarb
fdivs
shlb
pop
mov
gs
or
cld
loope
push
pop
data16
lret
notl
cmp
loope
int
mov
sbb
cli
jl
nop
ja
jp
ret
cmp
sbb
xchg
adc
mov
mov
out
gs
xor
push
mov
fidivs
mov
mov
shlb
or
sub
cmp
dec
dec
imul
dec
dec
std
ret
addl
xchg
or
enter
mov
jns
pushf
pushf
pusha
not
call
movzbw
setg
mov
pop
bswap
movzbw
push
mov
pusha
lea
mov
mov
bswap
bswap
lea
mov
push
pushl
ret
shrl
mov
pop
mov
fnstenv
aaa
shl
mov
sub
mov
cmpsl
xchg
sub
mov
andb
mov
and
mov
mov
push
dec
sbb
push
dec
int3
inc
sub
pop
hlt
lods
xorl
out
fstpl
mov
cmpsb
cmpsb
stos
and
dec
mov
cmove
add
adc
mov
jge
mov
lock
js
ret
cltd
cli
push
repz
sub
push
cmp
enter
sub
push
fs
adc
pop
outsl
fcoms
mov
jo
loope
or
mov
nop
fcmovnb
pop
scas
jle
sub
xor
rcrb
mov
je
movsb
add
idivb
orl
cmp
add
test
mov
push
adc
inc
loop
mov
int3
sub
jae
inc
xchg
inc
mov
insb
pop
jp
call
sub
jmp
xchg
push
sub
or
rcll
clc
fs
jmp
lret
enter
push
push
movsb
add
scas
mov
imul
pop
mov
sub
out
xchg
cmpsb
add
cmpsl
in
popf
jbe
sbb
jge
adc
loope
adc
sahf
pop
sbb
jge
adc
mov
and
xchg
jnp
je
repnz
jge
dec
push
dec
jl
lea
in
dec
jae
xchg
lea
mov
loope
adc
xor
pop
es
mov
add
mov
pop
or
pusha
in
mov
mov
mov
cli
stc
es
imull
pop
outsb
cmc
and
cmp
jae
pushf
cmp
loope
pushf
sub
dec
or
shlb
lea
ja
f2xm1
mov
push
int
push
in
pusha
jnp
adc
pop
inc
out
sahf
mov
mov
fwait
mov
cmpsb
xchg
adc
add
ljmp
dec
adc
sbb
dec
shrb
ds
in
js
mov
ret
xor
inc
dec
adc
mov
dec
lret
in
jmp
lock
outsb
push
sub
xchg
pop
pop
xchg
scas
or
pop
shr
pop
pop
jmp
mov
mov
mov
fisubrl
lods
leave
popf
dec
or
jnp
jp
and
fsubrs
out
or
mov
jbe
push
jb
xchg
nop
es
pushf
dec
pop
negl
jge
mov
mov
ficoml
leave
popf
inc
adc
sub
mov
xor
sub
mov
mov
std
dec
ja
add
push
jnp
adc
push
push
pop
and
xchg
pop
cmp
adc
ja
cli
dec
push
and
pop
mov
jae
stc
cwtl
xchg
lock
cmpsl
mov
leave
std
int
mov
fnstsw
mov
xchg
xchg
mov
xchg
mov
dec
mov
inc
lahf
andb
push
and
jecxz
lret
int3
orl
add
cmp
ss
dec
cmp
cld
mov
or
mov
push
adc
pusha
adc
mov
lea
call
pusha
lea
jl
pushf
lea
jb
push
push
pushf
pushl
ret
fnstsw
movsl
adc
jg
jge
jl
jns
dec
adc
mov
cmp
test
and
pusha
mov
or
cmp
imul
jbe
popa
leave
fidivrs
pop
mov
das
ds
inc
fs
int
jp
mov
mov
iret
and
sbb
or
cmp
adcl
outsl
sub
pop
pushf
test
imul
xchg
in
outsb
lret
adc
jb
lock
or
add
add
mov
and
lea
jae
xchg
setl
mov
dec
pusha
pusha
inc
inc
pushf
not
call
int3
aaa
push
sbb
add
xlat
jg
dec
scas
dec
and
lret
scas
or
xlat
loop
add
popf
mov
sbb
mov
jmp
sub
push
adc
cmpsb
mov
or
adc
adc
ljmp
pop
xchg
dec
pop
fcos
repz
mov
dec
loopne
std
fisttpl
clc
jmp
add
jg
sbbb
fistps
mov
xlat
je
xchg
cs
jae
dec
gs
push
lea
inc
inc
aaa
repnz
cmp
mov
or
iret
pop
jo
xorb
test
stc
xor
stc
neg
pushl
cmc
call
rcr
mov
je
repnz
call
mov
mov
lea
jbe
bsf
pusha
mov
btc
xadd
add
xchg
mov
shld
sar
add
test
movl
pushf
pop
push
mov
bt
pusha
cmp
push
pushl
lea
jbe
push
movsbw
sub
dec
rcr
mov
setns
bsf
bsr
cmp
mov
xor
and
movzbw
add
btc
shr
ror
mov
not
add
movsbw
pusha
jmp
jnp
out
bound
mov
call
cmp
and
iret
push
arpl
mov
mov
icebp
mov
pop
add
xchg
inc
pop
pusha
nop
and
repnz
leave
repnz
adc
iret
pop
sub
mov
jbe
jmp
aas
in
add
imul
sbb
cltd
push
sub
fstp
aas
iret
xlat
and
push
stc
loop
in
or
push
sub
fidivs
mov
dec
pop
push
xor
push
das
notl
pop
jg
jg
sti
mov
mov
mov
mov
scas
fistpl
mov
movsl
push
add
xchg
xor
cs
cwtl
dec
stos
inc
sub
iret
push
outsb
sub
dec
inc
inc
test
adc
push
xchg
rclb
push
fs
jne
cld
sbb
sub
push
iret
stc
das
mov
pop
pushf
loop
repnz
or
push
inc
jae
or
push
adc
sbb
jae
cmc
jns
and
xchg
jne
notb
je
repnz
push
xor
lds
add
orb
lds
xor
gs
out
cmp
cmpsb
int3
cmpsb
xchg
shrb
push
mov
pop
jns
dec
cmpsl
es
push
out
gs
jecxz
out
lods
jl
or
rorb
sub
jle
jg
shll
lret
dec
popf
addr16
flds
mov
xor
lock
sub
imul
mov
addr16
inc
or
gs
stos
imul
adc
mov
sbb
xor
jecxz
fs
push
mov
xor
mov
mov
sarb
in
jle
in
inc
jno
in
inc
faddp
dec
out
testl
mov
lods
lods
mov
pushf
jmp
xor
cmp
enter
mov
push
lcall
add
lea
pusha
lret
cld
loop
add
je
cli
mov
adc
add
xchg
pushf
lea
je
jmp
push
mov
pusha
pushf
pushl
mov
pushf
mov
jmp
or
mov
iret
shll
xor
pop
mov
jecxz
jl
sti
sbbb
xlat
adc
push
jae
clc
sub
lret
pop
and
loopne
mov
lods
ret
lcall
jne
mov
ljmp
mov
rcr
insb
cmp
push
divb
xlat
idivb
mov
scas
jno
cwtl
pop
sbb
adc
aam
fdivs
mov
xlat
inc
jecxz
pop
pop
stos
clc
push
mov
je
jnp
jp
cli
pop
push
adc
inc
xchg
or
bnd
adc
lock
sti
scas
lds
mov
jmp
cmp
cmp
decb
jle
call
jg
scas
sti
aaa
add
loop
and
inc
jne
iret
push
mov
cmp
xchg
sbb
jg
in
in
mov
fcmovnu
jb
loop
inc
ss
xchg
inc
jp
mov
arpl
les
cmp
jae
testb
daa
ss
ds
jp
jbe
dec
movsl
dec
ss
pop
pop
pop
lahf
pop
sbb
push
adc
ret
pusha
loopne
loope
jne
jmp
mov
mov
aas
pop
mov
gs
mov
mov
andb
clc
pop
hlt
in
fs
aas
mov
dec
xlat
in
xchg
pushf
lcall
cmpsl
lea
push
inc
xor
pop
mov
push
iret
inc
sbb
repnz
cmpsl
mov
andl
xchg
cmp
cwtl
cld
jl
jmp
mov
or
add
dec
or
or
enter
out
cld
and
inc
pushl
pushl
not
pusha
mov
jmp
pop
and
push
insb
dec
orl
call
dec
mov
pop
mov
test
adc
outsl
iret
jnp
fwait
aam
jnp
mov
and
xchg
jae
fwait
pop
dec
push
dec
push
add
jns
pop
mov
adc
cmp
sbb
xchg
xor
out
movsb
shrl
outsb
aad
sub
stos
out
data16
fldenv
or
cmp
out
das
push
sbb
stc
cmp
jg
repnz
adc
adc
cli
pushl
gs
insb
xor
cs
insb
add
jmp
mov
ss
mov
ret
and
inc
mov
hlt
bound
mov
dec
ljmp
inc
out
xlat
test
jb
lcall
leave
xchg
int
fdivs
imul
andb
test
push
lret
cmpl
mov
dec
cmp
popf
pop
pop
stc
push
adc
aas
mov
gs
popf
fimull
xor
fdivs
test
shll
pushf
sub
repnz
adc
add
mov
call
sub
push
adc
add
repz
push
sub
lods
dec
sub
into
sub
mov
fildl
and
jae
cmp
add
out
imull
test
mov
aas
jns
idivb
test
fst
pop
mov
mov
movsb
jl
adc
leave
push
ret
loopne
adc
mov
jb
cltd
insl
mov
aam
pop
xor
fdivrl
je
loopne
cmp
sbb
in
mov
xchg
adc
fidivl
jmp
sub
dec
in
xchg
in
std
xor
add
popa
test
lret
jge
mov
xchg
mov
cmp
push
and
xchg
loopne
aad
mov
xor
ret
push
hlt
test
lea
mov
iret
pop
pushf
sub
jg
out
sbb
push
push
fwait
mov
xor
mov
mov
push
adc
imul
add
and
add
lock
cwtl
jnp
icebp
rcrl
test
mov
jecxz
xchg
mov
leave
lahf
inc
pop
gs
mov
add
dec
xor
fcmovne
mov
pop
inc
ret
into
insb
repnz
lock
mov
ret
jne
xchg
lcall
cmc
mov
jge
cmp
jg
jle
jo
push
adc
fwait
jo
shl
or
add
jb
cltd
hlt
sbb
leave
push
fistps
inc
fisttpll
fstpl
pop
rorb
xchg
cltd
out
jb
cld
in
sbb
and
dec
push
mul
pop
lods
cwtl
jmp
sbb
loope
fidivs
pop
mov
cwtl
rorb
sti
pop
jns
mov
aas
add
mov
mov
inc
jmp
mov
stos
aas
and
push
sbb
fisubl
xchg
mov
inc
test
iret
incl
add
test
or
lock
inc
jecxz
jge
sub
adc
pop
jl
lock
repz
mov
fstpl
sbb
xchg
mov
cmp
xor
lahf
outsl
lea
pop
aad
jl
inc
pop
clc
inc
xor
inc
ss
sbbl
jb
or
mov
xor
xor
mov
and
repnz
jp
cld
fisubl
and
inc
out
or
insl
lods
fstpt
push
jo
push
pop
sbb
push
adc
xchg
pop
sahf
scas
cltd
pushf
push
adc
fs
jae
mov
push
xchg
jmp
stos
lret
mov
fdivrs
adc
insb
pop
jo
fcoml
or
push
push
pop
imul
ror
push
add
insb
pop
sbb
push
mov
sbb
sub
faddl
jmp
or
stos
and
cld
pop
js
sarb
jno
cmpb
mov
lock
cmpsl
fdivrs
xchg
dec
mov
loopne
xor
sti
and
sub
les
add
pop
inc
jae
scas
cmc
push
mov
push
lock
int
stc
xchg
jl
outsl
mov
xlat
shlb
call
dec
imul
mov
rcrl
fcoml
insb
mov
push
inc
jnp
jg
lret
rcr
outsl
not
fwait
push
xor
int3
test
adc
xor
xor
popf
loope
sub
cmc
mov
xlat
push
es
loope
sbb
sbb
cwtl
sbb
cmpsb
mov
movsl
stc
ljmp
and
mov
pusha
movb
push
pushl
rep
call
test
and
shrb
adc
lock
shrl
repz
out
push
inc
lods
push
das
xor
mov
scas
mov
mov
arpl
mov
inc
push
iret
xlat
push
jbe
fstps
jl
sbb
mov
sbb
and
lods
mov
popa
shl
pop
negl
cmpb
adc
lds
pusha
iret
add
push
sahf
mov
loope,pn
pop
movsl
out
out
lods
jmp
cmpsl
adc
pop
xchg
cltd
aas
mov
mov
fnstenv
push
mov
mov
mov
lock
scas
ja
adc
cs
sbbl
repnz
das
xchg
xor
fnstsw
inc
push
dec
mov
mov
jnp
dec
loope
pop
mov
xchg
cmp
jmp
js
lcall
and
pop
movsl
fwait
inc
andb
mov
movsl
shlb
xchg
test
andb
es
pop
cmpsw
sub
push
call
mov
movsl
push
scas
mov
fmull
fimuls
call
in
pop
outsl
dec
inc
stos
pop
and
rcl
push
in
xor
jno
cwtl
cmpsb
adc
jp
jo
xchg
dec
push
push
jb
adc
and
add
scas
lahf
lahf
mov
cmp
movsb
addr16
or
stos
test
leave
dec
fidivl
push
fadds
stc
out
jmp
test
mov
xchg
xchg
mov
mov
xchg
ja
fcompl
push
jno
xchg
aam
and
scas
adc
lcall
xor
movl
leave
lahf
ja
jne
jno
call
dec
cld
les
mov
loop
shll
and
mov
jmp
arpl
mov
mov
or
into
rcrl
add
jb
dec
in
xchg
mov
cmp
fcmovb
mov
aaa
xchg
cs
shll
std
test
es
jmp
dec
add
into
xchg
or
or
imul
jae
mov
and
mov
movsb
inc
pop
int
je
inc
mov
stos
sbb
shl
mov
repz
mov
mov
mov
inc
xor
mov
dec
add
clc
pop
movsl
mov
adc
icebp
aad
inc
fnstenv
aaa
adc
or
pop
xor
sub
nop
je
adc
mov
lods
shlb
cld
dec
mov
icebp
dec
ds
adc
mov
push
mov
adc
ret
daa
subb
ja
ja
inc
sbb
popf
jbe
inc
sbb
sub
in
xchg
add
or
es
jg
pop
mov
repz
in
cwtl
xchg
or
mov
in
cld
pop
clc
lcall
push
jp
jge
xchg
stos
aaa
addr16
and
mov
xchg
divb
les
push
lock
xor
add
dec
outsb
and
shrb
add
sub
sub
jmp
push
das
push
adc
push
in
dec
ljmp
dec
and
cmpsl
int3
movsl
inc
cmpsl
dec
sbb
in
lea
cmp
adc
push
scas
loopne
mov
cli
cmpsl
sbb
js
inc
cmpsb
sbb
pop
repz
bound
mov
pop
scas
mov
mov
inc
cli
ret
pop
fistpl
add
lods
jo
mov
xchg
add
ret
ds
sbb
xor
sahf
xlat
pop
ficompl
fstps
pop
cld
push
adc
fs
jne
pusha
movb
lahf
movsbw
pushf
movsbw
mov
jmp
lea
pusha
movl
movl
pushf
mov
pushf
pushl
pushl
ret
mov
lea
je
jmp
mov
out
sbb
mov
add
insl
add
scas
outsl
pop
popa
aad
lcall
fcoml
mov
or
xor
popaw
pop
ja
pop
or
push
xchg
lods
dec
pop
xor
sbb
add
shl
sub
fcompl
test
sub
mov
popl
mov
xchg
or
dec
cmovns
ret
add
push
iret
mov
push
adc
jae
jb
xor
fs
insb
add
les
shll
jo
mov
out
add
xor
je
cld
into
stos
adc
jns
xchg
fistpll
cltd
test
mov
lret
add
jmp
or
mov
rcll
sub
pop
je
jle
call
idivb
or
pop
inc
cli
add
inc
mov
stc
outsl
insb
testl
cmc
sahf
in
or
ljmp
ja
ja
add
jne
add
push
adc
pushf
pushf
lea
jne
or
call
call
mov
movsbl
shl
xchg
call
insl
adc
cmpsl
shl
jnp
cmp
mov
push
xor
xor
mov
fcoml
shl
sub
and
aam
iret
push
aaa
loop
cmp
xchg
dec
push
ja
fdivrl
push
mov
xor
mov
loope
das
jo
mov
jne
clc
es
inc
pop
mov
nop
jp
lahf
ficoml
pop
sbb
adc
stc
push
adc
adc
idiv
stc
rolb
sub
sub
cwtl
lods
xchg
jmp
out
push
pop
pop
popf
xor
sbb
fidivl
cltd
jg
pop
mov
sbb
jecxz
push
and
mov
xchg
in
adcl
pop
clc
cmp
mov
loop
push
ret
dec
or
arpl
jg
adc
dec
pop
popa
outsb
js
xor
cmp
dec
mov
out
fs
rcll
test
or
mov
add
int
push
jecxz
sbb
gs
mov
hlt
and
xlat
ficompl
jp
inc
add
adc
xor
xor
and
fs
aaa
arpl
js
xor
hlt
inc
pop
mov
fldt
aas
xchg
jmp
mov
mov
aad
jnp
adc
push
adc
xor
adc
test
outsl
adc
cmp
or
js
sbb
int
sbb
rcrb
cltd
cmpsl
jp
mov
test
fsubrs
in
xchg
cmp
sub
mov
int
adc
push
jns
stc
pop
mov
pusha
mov
cltd
cltd
or
arpl
mov
into
loopne
ret
cwtl
ret
cmp
leave
shlb
lahf
sbb
das
addr16
xor
imul
xchg
js
mov
arpl
cmpsl
sar
test
pop
jecxz
sbb
cwtl
push
jno
je
xchg
dec
shll
mov
sti
fstps
xchg
adc
xchg
notl
adc
rcrb
nop
fsts
mov
cltd
xchg
inc
cltd
add
xchg
cli
pop
sbb
adc
dec
stc
jne
ret
fsubr
pop
fsubrl
ja
aaa
leave
xchg
aaa
cltd
dec
ja
adc
push
adc
fincstp
adc
movsb
sbb
cltd
cltd
sbb
fsts
repnz
adc
test
or
fnstcw
mov
xchg
lock
cmp
idivb
clc
jns
mov
inc
fistpll
xor
cmp
test
rclb
add
loope
push
rcll
fwait
imul
push
adc
sbb
js
cltd
cltd
shll
icebp
add
xchg
xchg
or
jae
rclb
or
addr16
xchg
stc
div
mov
cmp
xchg
jns
xchg
in
jne
xchg
repnz
icebp
fnstcw
mov
lea
cmc
cmp
mov
push
push
popf
pop
cmpsb
inc
cltd
mov
ss
sar
adc
negb
out
pop
hlt
mov
js
fmuls
pop
clc
fnstenv
xlat
test
mov
mov
sti
fsts
lea
fisttpl
cmpsl
push
ficoms
xor
pop
push
ss
fistps
stc
hlt
notb
sbb
cmp
add
lock
out
push
lea
mov
push
clc
xor
clc
xchg
call
add
jae
pop
test
xchg
add
js
pop
notl
xchg
or
je
xchg
test
mov
cltd
mov
imul
sbb
sbb
adc
or
cmp
rcrb
pop
pop
dec
add
pop
xchg
mov
fsubrp
negb
in
enter
rcr
aaa
icebp
push
fisubl
andl
test
cmp
cmp
scas
adc
or
sbb
or
icebp
push
pop
adc
or
mov
dec
test
cmpsl
lahf
cmp
pop
push
leave
sbb
mov
sbb
mov
and
jmp
enter
fnstcw
daa
jmp
jg
jbe
aad
and
test
fnsave
mov
rcrb
xchg
inc
mov
fidivl
jns
jmp
test
jmp
pop
push
out
pop
pop
mov
fidivrl
mov
leave
and
int
sbb
flds
cwtl
jg
repz
ljmp
ret
aaa
mov
sti
fsts
push
mov
cltd
xor
mov
or
sbb
repz
adc
xchg
pop
mov
rcr
or
es
cltd
push
arpl
xor
pop
pop
mov
jns
bound
popf
dec
dec
mov
in
jp
js
dec
jne
outsb
jb
lods
sub
xor
add
pop
iret
in
mov
mov
and
fsubl
xor
mov
fildl
pop
sbb
and
mov
sbbl
bound
stos
mov
ss
out
mov
mov
stc
rcl
mov
aad
jbe
adc
ljmp
push
mov
push
pop
sbb
xchg
adc
xor
outsb
or
inc
js
imul
push
dec
sbb
inc
jp
int
pop
pop
cltd
arpl
sub
push
imul
cwtl
rcl
in
sbb
adc
fnstsw
mov
hlt
sub
or
mov
shrb
push
test
pop
negl
jl
in
mov
dec
sbb
sbb
mov
dec
mov
lea
mov
or
xchg
aad
pop
pushf
push
push
add
shrb
pop
and
sbb
mov
adc
mov
fwait
je
js
push
and
fiadds
out
rcl
lock
adc
pop
jo
mov
dec
fcomps
xchg
loop
or
add
bound
adc
push
add
addb
ret
lret
shlb
mov
fcoms
jp
xor
ror
cmpl
or
xor
cmpsb
push
rol
idiv
cli
jl
cs
inc
loop
pop
pop
mov
cwtl
clc
xlat
fidivl
repnz
call
add
or
bsr
and
cmp
repnz
jns
out
add
push
jecxz
sahf
push
add
adcb
xchg
adc
aad
push
les
push
shll
in
mov
dec
cmp
int
adc
and
js
add
push
push
inc
and
dec
pop
push
pop
jmp
or
adc
mov
fucomip
sbb
fcmovb
pushf
push
sbb
pop
adc
hlt
aam
rcr
rcr
call
sbb
cmp
ret
les
cmpsb
fdivs
das
iret
pop
mov
ficoms
mov
js
mov
adc
std
dec
stc
pop
cwtl
lret
cmpl
test
pop
mov
mov
popa
aas
jmp
scas
mov
jae
sbb
fdivs
in
push
push
shll
xor
add
xlat
mov
pop
mov
call
or
nop
lods
xor
and
inc
fcmovu
je
pop
ffree
xchg
dec
mov
call
test
sub
mov
xor
aad
mov
enter
lahf
aaa
aad
dec
stc
sbb
jmp
mov
ss
adc
nop
push
jl
adc
clc
mov
imul
ja
adc
hlt
or
insl
or
xchg
sbb
bound
stc
cltd
fistpl
sbb
xchg
fimull
cltd
int
lods
mull
mov
adc
cmp
and
pushf
enter
and
or
adc
sub
mov
sub
add
fld
inc
adc
cli
lods
pop
rcrb
pop
rcr
int
clc
jp
cmp
add
xchg
pop
xchg
cli
push
xor
int3
rclb
xlat
and
rcrl
andl
sub
mov
rcll
or
mov
push
mov
xor
cmp
inc
xor
adc
and
or
xchg
adc
adc
jle
daa
pop
scas
mov
test
jae
mov
jo
pushf
pop
pop
adc
xor
push
mov
jns
test
pop
cmp
pop
mov
fdivrs
negl
push
xlat
mov
push
dec
das
sbb
mov
mov
in
dec
bound
mov
xchg
jmp
sbb
mov
adc
fisttpl
xor
lahf
ud1
ds
add
std
shll
ss
inc
neg
mov
ja
and
dec
and
cli
popa
push
aad
pop
in
jmp
adc
jecxz
rclb
jmp
cmp
xchg
and
pushf
or
and
ja
add
int
and
pop
xchg
inc
or
mov
sub
pushf
fisubrl
xchg
jb
sub
inc
call
inc
mov
push
cmc
sbb
aad
rcrb
adc
mov
fsts
sbb
arpl
addb
stc
into
adc
jecxz
adc
andl
push
add
aaa
out
add
fistpl
ret
arpl
jns
mov
push
sub
andl
inc
pop
jae
es
sbb
jns
pop
fcmovnbe
push
clc
pop
mov
insl
pop
iret
cltd
out
push
stc
mov
mov
cmp
fdivs
outsl
jne
adc
nop
adc
in
call
cmp
rorl
clc
in
pop
lahf
adc
pop
xchg
adc
jo
adc
mov
outsl
pushf
je
insl
loopne
lcall
adc
xchg
jno
dec
nop
rcrl
les
pop
rorb
push
or
jg
jns
inc
xlat
inc
adc
adcl
xchg
xor
or
test
negb
cbtw
xchg
jo
jp
jmp
adc
iret
leave
and
sub
xchg
adc
adc
loope
cmpl
aad
stc
push
adc
jmp
cli
rcrb
fs
mov
xchg
lods
sbbb
mov
cld
lods
fbld
lret
add
add
push
inc
fs
fwait
sub
ds
jg
movsb
testl
js
rol
or
jmp
lret
js
cmc
enter
iret
cmp
data16
push
mov
adc
mov
mov
mov
lds
stc
pop
cld
insl
call
js
movsl
push
mov
fisubl
add
insb
adc
lods
sbb
xchg
push
pop
int
sbb
nop
mov
mov
xlat
dec
leave
je
out
sbb
mov
lods
cwtl
push
lods
mov
test
adc
inc
ficoml
hlt
and
mov
int
mov
out
lret
std
orl
mov
cmp
or
xor
fisubl
cltd
mov
lahf
or
sub
pushf
dec
loopne
mov
xlat
jg
or
popa
xor
cs
lea
lahf
pop
inc
inc
adc
shl
xchg
or
pop
cmp
enter
fmul
or
loope
shr
int3
insb
mov
mov
inc
pop
dec
nop
ficompl
mov
sub
xor
testl
pushf
stos
add
jb
xlat
push
cmpsl
icebp
rclb
in
jns
in
out
add
xchg
push
ficoml
xor
dec
sqrtps
movsl
or
mov
cmp
push
or
aaa
sub
shlb
xor
sbb
fimull
movsl
adc
and
xchg
hlt
pop
fbld
aas
lret
addl
mov
std
or
cltd
loope
js
xor
sar
xchg
fdivr
or
sub
rcll
gs
scas
repz
mov
lcall
pop
out
xchg
imul
in
and
adc
stc
iret
std
aam
repnz
bound
jae
aas
fidivs
jmp
pop
mov
iret
mov
cwtl
adc
xchg
pop
push
stc
or
js
into
aad
or
and
xor
jb
push
int
push
imul
mov
imul
pop
inc
or
shll
or
fcoms
dec
push
mov
out
dec
sahf
dec
cmp
les
xchg
data16
jne
hlt
cltd
adc
mov
inc
cmc
jae
enter
pop
lock
sbb
pop
daa
nop
mov
jp
fucomp
rorb
sbb
mov
int
sarb
dec
mov
inc
pusha
sarb
mov
repz
icebp
mov
test
enter
sbbl
test
add
push
jle
sbb
cltd
xchg
or
xor
xchg
loopne
in
incb
xor
jns
jb
rcrl
dec
mov
hlt
ret
sbb
mov
sbb
roll
int
and
stos
sbb
mov
sbb
das
hlt
and
jb
jle
adc
sub
les
add
inc
inc
fimull
mov
shrb
fstpt
fwait
mov
loop
adc
mov
adc
mov
mov
jbe
sbb
push
out
cwtl
push
and
add
push
sbb
mov
mov
cwtl
insl
out
popf
cmp
push
jae
push
xchg
jp
mov
imul
mov
imul
push
pop
cli
lods
leave
xchg
lahf
jp
rcr
mov
mov
and
sbb
movb
pop
mov
pop
dec
and
scas
pop
addr16
cmp
lret
pop
jbe
ja
test
imul
mov
je
jg
std
cwtl
repz
outsb
mov
adc
sarl
sbbl
sub
xlat
stc
rcrl
sbb
int3
xchg
or
fdivrs
mov
fdivrl
xchg
sbb
mov
xchg
pop
push
xor
adc
or
and
sbb
das
nop
xchg
add
ja
xchg
leave
push
mov
jp
xlat
inc
mov
adc
mov
push
shlb
test
js
adc
test
lcall
les
push
jbe
hlt
mov
daa
mov
push
fisubrs
inc
xor
fisubrl
ss
push
ror
jb
xor
mov
sbb
mov
add
div
xor
popf
ljmp
xchg
push
lds
xor
ja
outsb
push
xchg
test
andb
xor
cld
dec
scas
icebp
rorb
jbe
or
fisubrl
xchg
test
mov
cmpl
sti
stos
arpl
repz
adc
sbb
punpckhdq
sbb
adc
lods
mov
jno
clc
xor
repz
dec
cmpsb
mov
lret
rcr
jne
aaa
jnp
xlat
in
adc
rorl
bound
and
fyl2xp1
lds
adc
mov
rolb
mov
daa
ja
loope
mov
xchg
imul
inc
add
stos
cltd
mov
scas
or
lahf
shlb
mov
xorl
pop
stc
lcall
int
das
jg
rol
shrl
adc
mov
mov
adc
stc
inc
dec
iret
adc
pushf
push
mov
mov
jnp
ljmp
or
xchg
jge
mov
mov
pop
shr
shrb
pop
push
test
xchg
mov
adc
int
xor
add
jns
xor
pop
and
imul
lcall
aaa
dec
scas
enter
cld
shlb
xor
add
or
push
cltd
adcb
aaa
jp
aas
fnstenv
outsl
nop
ficompl
lods
pop
rcrb
sub
mov
add
shlb
push
scas
jmp
shll
push
push
mov
gs
loope
push
push
shll
je
xor
cmp
add
push
mov
xchg
inc
xlat
or
mov
in
loopne
out
loope
and
ja
popf
es
icebp
xor
lcall
stc
mov
mov
nop
push
subb
in
pop
sarb
leave
fisubs
clc
mov
cvtps2pi
adc
pop
xor
or
add
dec
pop
jle
fcmovu
push
sub
mov
cld
dec
sub
jne
and
daa
jp
jo
icebp
and
ret
xchg
lea
cwtl
xor
hlt
or
sets
call
subb
rcl
data16
pop
fidivrl
add
outsl
xchg
pop
mov
cmp
rclb
pop
mov
xor
test
popf
aaa
cwtl
mov
sahf
mov
cmp
pop
stc
test
scas
or
aas
rclb
std
shll
sub
lea
rolb
mov
rorl
fidivl
lcall
xchg
imul
fs
fldl
add
xor
mov
fstps
cmpb
jg
popa
push
add
scas
vphaddudq
add
out
cmpsl
sub
out
and
or
fnstcw
pop
and
mov
in
adc
push
shll
nop
mov
insb
stc
andl
notb
sub
in
in
sarl
and
fadd
pop
div
mov
int
std
je
jl
ja
adc
and
loop
sbb
test
out
popa
mov
jns
pop
jnp
test
cli
mov
jo
cmp
xor
mov
xchg
sbbl
pop
fiaddl
mov
mov
rolb
sahf
les
cmpb
lcall
js
movsl
mov
cli
es
add
mov
scas
or
pop
push
inc
dec
pop
scas
xlat
mov
xchg
imul
jns
xchg
sbb
in
aas
ss
aaa
stos
int
iret
data16
xchg
aad
cltd
or
inc
fwait
or
or
shlb
pop
push
cwtl
fiaddl
leave
mov
mov
jne
lock
mov
test
sbb
daa
mov
mov
int3
lds
popf
or
sub
mov
mull
ficoms
ret
das
pop
dec
mov
dec
shlb
pop
lock
bound
xchg
cld
inc
test
xor
hlt
pusha
shrb
stos
cmp
test
fwait
mov
push
cmp
imul
sub
mov
cmp
das
jbe
loopne
sbb
enter
in
or
hlt
inc
cmp
enter
repnz
cmc
xchg
sbb
pop
rolb
xor
lahf
adc
les
sti
nop
sahf
dec
pop
xchg
rolb
daa
pop
sub
push
push
sbb
lods
pop
imul
fnstsw
div
sbb
pop
enter
js
jecxz
jge
iret
inc
repnz
cmc
repnz
cmp
add
push
fistpl
mov
inc
pop
mov
and
mov
inc
ffree
lcall
or
aam
fsubr
lock
push
sbb
mov
lahf
shr
stos
mov
pop
popf
mov
stc
sub
mov
or
repnz
je
sub
test
cmp
sbb
xlat
mov
lret
jns
out
sub
adc
nop
lds
or
cld
lcall
sbb
test
or
sbb
insb
aas
jp
xchg
fnsave
lods
sbb
popf
xlat
icebp
pop
sbb
or
loop
std
int
ror
add
nop
adc
cmp
sub
jbe
dec
loopne
into
enter
mov
cmp
cmc
ret
xor
lock
int
in
lret
mov
xchg
test
xor
enter
rcrb
and
inc
mulb
xchg
xchg
and
shrb
aad
cmpsl
xchg
and
or
push
fldenv
add
ret
daa
mov
xchg
xor
jb
cmp
fs
cs
iret
sbb
jecxz
or
hlt
xchg
scas
mov
pop
sbb
ss
mov
cmpsl
add
sub
dec
les
dec
into
cld
ret
cmpsl
leave
jg
loopne
ret
jle
data16
or
push
andl
fldenv
pop
lds
cmpsl
fmulp
pop
js
mov
xchg
mov
clc
xchg
or
xchg
gs
add
and
test
shlb
mov
sahf
jns
dec
sbb
sub
adcl
cld
call
fstl
add
push
xor
js
lods
mov
jp
pop
cmp
aas
neg
ljmp
icebp
cmp
mov
addr16
adc
out
out
fsts
cmpb
icebp
adc
push
gs
cmpsl
ja
xor
or
sub
mov
sti
jmp
mov
cwtl
push
pop
ljmp
push
imul
lea
push
cld
aaa
add
dec
shrl
int3
push
mov
mov
xor
fisttps
sub
or
lock
mov
dec
idivl
jp
or
xchg
or
cmp
cmp
cmp
push
bound
test
mov
sahf
mov
fwait
negl
xchg
gs
bnd
mov
inc
pop
pop
pop
or
mov
push
lcall
xor
out
leave
mov
push
idivl
ljmp
in
pop
popa
subps
and
icebp
xchg
test
stc
mov
sarl
ficompl
mov
daa
frndint
push
xchg
push
mov
sbb
jecxz
fisttpll
adc
fisttpl
rcrb
pop
and
push
dec
mov
adc
stos
rcl
roll
lret
cwtl
pop
push
and
fwait
int
ret
mov
aaa
repnz
int
xor
js,pn
cmp
lcall
pop
imul
arpl
add
mov
push
mov
sub
sub
jns
lock
adc
sbb
loope
mov
adc
pusha
jge
cmp
mov
sub
jecxz
sbb
add
outsl
arpl
in
mov
adc
fsubrl
pop
enter
push
jle
xchg
ja
xchg
cmpsl
mov
xchg
xchg
jmp
push
out
push
add
cmc
out
sbb
loope
push
inc
push
mov
lahf
mov
cmp
cmp
inc
out
test
addr16
bound
sbb
sbb
add
push
aad
jno
rorb
lea
adcb
arpl
jb
mov
xor
and
mov
inc
insb
add
enter
clc
pop
jb
mov
lds
mov
sbbl
cmp
in
shll
pushf
movsl
rcr
adc
jmp
mov
dec
enter
repnz
add
xorb
jp
xchg
ret
add
pop
mov
daa
jmp
stc
cmp
pop
repnz
stos
pop
pop
fistpll
div
mov
cmp
cs
xor
loope
xchg
cltd
bound
sbb
fbld
sub
xlat
dec
mov
lahf
cmc
aam
imul
push
popa
and
test
bound
call
sbb
dec
jmp
int3
pop
ret
stos
sbbb
outsl
push
imul
add
mull
mov
ja
push
insb
pop
push
pop
lahf
popf
mov
mov
inc
bnd
or
push
cmp
xor
aam
enter
jne
push
lret
roll
mov
stc
add
lock
fcmove
ret
test
rcr
mov
test
enter
or
xchg
mov
cmp
cmp
xlat
popa
xchg
jbe
mov
out
sbb
popf
xor
pusha
mov
add
stc
jecxz
xorb
call
push
dec
mov
cmc
data16
add
loopne
into
pop
pop
lea
or
ss
jle,pn
jmp
hlt
fdiv
cmp
aaa
fmull
pop
jge
sbb
inc
fdivp
das
pop
add
cld
imul
pop
pushf
loop
pop
jmp
stos
sbb
out
sti
mov
lea
mov
mov
push
pop
pop
cmc
dec
cltd
fidivrl
fs
push
idivl
shrb
test
outsb
pop
or
dec
lea
lods
mov
enter
jle
sub
test
mov
das
xchg
xor
mov
test
mov
xchg
mov
cmp
sub
add
add
xorb
mov
mov
jl
sub
pop
ret
gs
fbstp
and
fcoms
and
xor
inc
and
adc
xor
mov
dec
sbb
mov
jp
ret
fmuls
inc
popa
fisubrl
lret
popa
xchg
jmp
loope
push
mov
aaa
pop
mov
pop
push
lea
xlat
xor
shr
lock
call
movsb
mov
push
jl
fdivp
cmp
jge
stc
sub
pusha
rorb
std
rcl
test
push
push
jb
sbb
subl
add
hlt
inc
xchg
cmpsb
pop
mov
pop
stc
addl
inc
pop
fdivs
in
sub
sbb
pop
loopne
addr16
adc
icebp
dec
iret
cmp
mov
cmp
lahf
lock
inc
adc
aas
lret
xor
loope
cmp
jae
sbb
out
in
adc
decb
mov
inc
jp
cmp
xlat
call
adc
jg
or
cmp
xchg
sbb
push
addr16
mov
js
in
cmp
push
push
adc
push
inc
imul
call
mov
loop
and
cmc
jge
out
shlb
fisubl
mov
pop
hlt
loopne
gs
in
mov
lock
movsl
scas
mov
jg
jge
mov
xor
adc
pop
jecxz
fcomps
test
mov
cmp
mov
dec
sahf
jmp
push
push
mov
add
cli
loope
pop
jo
int
mov
popf
popl
mov
mov
sbb
sbb
inc
int
es
fsubs
gs
fstps
xchg
sub
mov
xchg
ss
mov
push
in
sub
mov
sub
jp
out
adc
push
adc
stc
add
sbb
adcl
cmp
xlat
or
std
mov
fwait
imul
cmp
std
les
lods
cwtl
or
test
sub
add
push
jge
and
sbb
fnsave
pushf
xor
sarb
iret
test
ret
jmp
xor
lock
rcll
mov
gs
xchg
in
mov
cmp
jnp
sbb
sbb
mov
push
cmp
push
iret
pop
imul
mov
dec
push
adc
out
sbb
addr16
test
and
jl
push
push
lods
aad
fnstenv
mov
stc
dec
add
adc
cltd
inc
stc
jg
gs
movsl
xor
scas
push
xor
nop
xchg
add
mov
cltd
fwait
cli
popa
bound
mov
test
popf
push
cmp
pop
or
out
adc
jbe
or
push
test
insl
adc
out
pop
sbb
jns
push
jp
cmp
divb
mov
cmp
push
not
rorb
test
mov
fstp
fnstenv
cwtl
stos
push
push
ss
push
std
jnp
icebp
pop
push
in
jo
loopne
jno
mov
sub
add
pop
push
xchg
pop
sbb
mov
cmc
adc
push
adc
lret
popf
cmp
daa
fs
mov
xchg
stc
fisubrl
xchg
sub
out
xlat
mov
adc
mov
mov
inc
cltd
or
adc
icebp
fidivl
xor
mov
adc
mov
add
daa
xacquire
cli
xchg
push
dec
xor
daa
cmc
iret
and
lcall
rorb
fistpll
push
mov
popf
loop
leave
cmp
lds
daa
inc
push
test
xor
sti
pop
xor
call
fnsave
jne
push
insb
addr16
and
pop
not
jge
leave
sub
adc
sbb
cmpsl
aad
fsub
repnz
icebp
fstps
sbb
arpl
fucom
insb
mov
mov
lea
popf
push
fwait
loopne
jns
ficompl
mov
aas
shll
add
jns
test
daa
mov
adc
fidivrl
or
das
mov
mov
rclb
leave
int
sub
pushl
jle
out
int3
pop
xchg
insb
inc
cmp
stos
in
negb
sub
hlt
test
add
add
pop
filds
xor
ja
in
aaa
fwait
push
ret
xchg
mov
push
aad
inc
mov
xchg
jl
push
add
cmp
pop
addr16
mov
stc
clc
pop
sbb
pop
movsl
arpl
icebp
mov
lcall
daa
mov
sub
xchg
addr16
in
or
pop
pop
lods
arpl
mov
inc
adc
mov
adc
into
sbb
shrb
push
test
push
addl
jecxz
xor
es
dec
ss
sbb
and
inc
mov
js
cltd
sub
mov
xchg
dec
adc
addr16
in
jmp
ficoms
test
xchg
repz
icebp
lock
nop
int
push
or
or
test
xlat
aaa
cmp
addr16
iret
jns
lcall
testb
fnstenv
sub
shll
int
dec
arpl
mov
adc
jp
fisubl
arpl
std
inc
std
dec
mov
loop
sbb
je
aad
mov
inc
adc
dec
shll
lea
mov
mov
orl
mov
stc
sar
fwait
loope
jl
sub
sbb
push
loope
fs
xor
sbb
rcrl
pop
in
push
pop
jo
faddp
outsl
aam
cmp
and
add
jno
test
jmp
push
insl
dec
mov
mov
testl
xchg
je
rcrl
js
leave
mov
or
sbb
dec
fimull
push
cmp
xchg
and
xlat
mov
push
inc
dec
xchg
fs
push
adc
sbb
fnstenv
andl
inc
negb
test
push
call
or
scas
fnstenv
addb
push
sub
sbb
sbbb
jns
das
mov
push
test
cmpsl
mov
push
test
repz
xlat
and
or
mov
jnp
movsl
mov
filds
addr16
sbb
jb
mov
in
sbb
lea
mov
cmp
push
xchg
cmp
imul
clc
pop
jmp
sbb
xlat
xchg
lds
lahf
add
sbb
dec
push
cwtl
and
jg
push
lahf
lods
lock
shlb
test
call
jmp
sarb
out
cmp
mov
adc
xchg
pop
cmc
mov
stc
add
adc
arpl
push
mov
in
adc
push
in
jne
js
sub
lods
int
filds
xchg
pop
test
fcom
les
shl
mov
jp
add
pop
test
std
mov
shl
mov
mov
xchg
icebp
push
sbb
aam
icebp
in
cmp
mov
out
mov
sbb
fistpl
push
mov
imul
xchg
repnz
jmp
jg
xchg
add
in
aaa
fs
jbe
adc
dec
movaps
icebp
das
add
xchg
pop
addl
mov
stos
xchg
fcmovnu
fsubl
imul
fwait
negl
push
jecxz
fdivs
shll
xor
in
in
xchg
clc
repnz
insb
and
loope
lcall
adc
and
cltd
ja
nop
aaa
jmp
mov
cltd
rcrb
imul
cmp
push
sbb
jne
inc
pop
xchg
jae
jo
arpl
mov
out
inc
mov
mov
stc
shlb
adc
out
fnstenv
data16
mov
les
sti
aas
lds
incb
pop
into
sbb
mov
test
mov
pop
inc
aaa
xor
add
inc
cltd
lcall
fisubrl
sub
ret
mov
sahf
lret
and
sub
lock
sbb
fbld
std
cwtl
xchg
outsb
mov
push
js
mov
add
jge
test
jo
fidivl
sbb
xchg
dec
jle
rolb
mov
add
lahf
adc
aaa
cmp
mov
enter
std
pop
test
adc
pop
fdivs
inc
mov
loope
cltd
dec
in
sarb
negw
add
lret
rcrl
les
inc
mov
loope
pop
sub
out
scas
sti
cmp
mov
adc
dec
adc
sub
push
mov
or
out
dec
in
and
loopne
mov
cmp
out
lahf
push
push
cwtl
jo
mov
mov
pop
pop
push
and
sub
addl
jp
adcb
scas
sahf
jnp
sti
pop
or
ret
int
leave
inc
ss
xchg
ljmp
sub
pop
lea
mov
mov
lods
loopne
into
inc
fisubl
xchg
rcll
das
test
and
xchg
or
cmp
jp
xor
inc
xchg
mov
imul
push
aaa
insl
or
mov
dec
sbb
insl
movsl
dec
pop
sbb
sbb
rolb
mov
fldcw
pop
sbb
jns
or
stos
or
ja
jbe
enter
fimull
pop
add
out
dec
repz
add
pop
inc
push
jns
add
sub
stc
mov
xlat
shlb
pop
js
inc
scas
xor
ja
out
pop
sti
xchg
iret
jae
adc
xlat
dec
xchg
xchg
aaa
in
push
jg
imul
xchg
or
xor
dec
dec
xchg
roll
mov
mov
xor
and
dec
push
mov
int
xchg
or
aad
push
xchg
imul
cmp
sarb
adc
adc
xor
mov
cmpsb
mov
cmp
cmpsb
cmc
adc
sbb
sbb
add
jmp
je
mov
popa
insb
fwait
leave
jo
pop
cmp
cmp
sbb
in
jle
cli
xchg
xor
dec
inc
xor
adc
and
xor
imul
pushf
and
jg
sbb
cmpsb
and
andl
xor
jb
or
pusha
jg
test
jle
jp
fadds
adc
rclb
repnz
idiv
nop
addr16
mov
push
sbb
and
imul
fldenv
icebp
xor
stc
and
sbb
inc
fisubl
jo
cmp
cmc
xchg
ja
aad
jo
mov
mov
push
fdivrl
pop
cmc
inc
sbb
negl
push
pop
sahf
jl
adc
lea
mov
pop
call
jl
mov
lds
test
cmp
pop
int3
hlt
enter
ficoml
pusha
jae
sbb
and
push
les
xor
mov
sub
fs
push
loope
fdivs
rol
mov
ds
push
aaa
pop
mov
sbb
push
push
xchg
rcr
pop
popa
fstl
mov
or
sbb
shl
jg
aad
mov
xchg
popf
sbb
xchg
test
fnstsw
fstpl
mov
mov
mov
ficoml
xlat
icebp
and
aas
xchg
mov
aas
xchg
lock
iret
xchg
outsb
mov
mov
inc
dec
rolb
xor
jo
ja
xchg
out
jnp
adc
cmp
and
lea
or
jae
inc
call
xlat
aas
adc
inc
shrl
fidivl
mov
fdivr
and
clc
cmp
dec
xor
xchg
imul
mull
mov
cmp
push
mov
dec
jo
sub
push
push
inc
sbb
into
xchg
shll
mov
jb
add
aas
xchg
jb
jne
out
xor
push
outsb
mov
out
inc
push
mov
cs
pop
and
cmp
adc
dec
loop
dec
mov
sbb
add
cmp
push
sbb
cs
shrb
iret
or
mov
fiaddl
jae
scas
mov
jns
nop
icebp
pop
fbstp
or
loope
mov
mov
xchg
cmpsb
in
rcll
and
js
icebp
ds
cmpsl
lahf
clc
xchg
pop
inc
rolb
pushf
movsl
dec
pop
fiaddl
nop
imul
xchg
addr16
sub
ret
pusha
and
out
sbb
mov
sbb
and
leave
loope
push
sahf
push
loopne
into
xchg
leave
adc
icebp
cs
cmp
enter
pop
cltd
push
adc
push
sbb
sbb
pop
fisubl
movsl
test
jnp
inc
into
sbb
mov
pop
sub
pop
add
sub
ret
jecxz
cmpsl
mov
push
out
mov
cld
popf
sbb
xchg
pop
rcr
push
clc
sbb
pop
xor
clc
dec
daa
shll
mov
xor
sahf
adc
call
lea
adc
jae
repz
neg
cmpsb
fsubs
lret
in
je
mov
cmpsb
dec
lock
pop
aaa
repz
rorl
cmp
lret
and
pop
scas
imul
icebp
xlat
mov
aam
cmpsl
addr16
leave
aad
lods
in
adc
mov
add
pop
rcr
das
scas
or
jnp
xchg
in
icebp
mov
push
xchg
push
fldt
fcmovnu
mov
mov
mov
xchg
or
jg
mov
jecxz
dec
dec
into
xchg
cmpsl
add
ja
sahf
jmp
shlb
movsb
xchg
paddusw
mov
js
xor
pop
sub
xchg
loopne
xchg
test
or
xor
lahf
or
push
jecxz
rcll
mov
cmc
xchg
fsubrl
or
or
pop
dec
mov
pop
push
push
add
int3
xchg
push
adc
xor
stc
or
cwtl
ror
loopne
mov
fcoms
repnz
pop
xor
cmc
je
icebp
dec
adc
xchg
pop
sub
nop
dec
sbb
or
pop
outsb
xchg
xor
jbe
mov
fcmovu
iret
mov
test
je
jl
xor
negb
inc
lock
mov
adc
pushf
addl
pop
subb
cmp
pop
xchg
aas
cmp
jno
cmpsl
imul
sub
jp
push
cmp
dec
hlt
dec
pop
dec
sbb
not
movhps
int
sub
imul
lea
jae
xchg
lods
or
mov
cmp
negl
mov
adc
pop
mov
add
and
sbb
dec
fisttps
aas
push
imul
xor
adc
xchg
mov
lods
sbbl
idivl
jae
or
xchg
cmpsb
xchg
adc
sub
mov
add
jle
je
fs
sti
mov
ds
adc
push
lahf
popa
inc
testl
ja
rcll
cltd
xchg
mov
cmp
data16
add
aad
mov
push
jb
bound
popa
sti
lcall
in
daa
fnsave
pop
push
aad
xlat
cmp
mov
cmp
bound
pop
sbb
mov
pop
lcall
fnstsw
and
xor
ss
mov
dec
jns
repnz
rolb
jl
loopne
not
lret
imul
lock
shll
mov
loopne
shlb
repz
fmul
and
dec
aaa
adc
xchg
cwtl
pop
dec
pop
loop
iret
in
mov
popf
push
dec
test
out
movsb
adc
jae
test
mov
rolb
out
cwtl
push
jnp
mov
dec
shr
call
add
sub
dec
call
inc
jmp
and
test
in
rcrl
loopne
clc
dec
sbb
sub
cwtl
icebp
dec
aas
sub
mov
test
aad
mov
xor
cli
xor
xor
xchg
shrd
mov
dec
cld
sbb
push
fldl
sbb
mov
in
loope
outsb
xchg
sbb
sarl
add
cltd
sbb
xor
cltd
add
adc
scas
fwait
rcr
xchg
js
xlat
cs
lods
jg
add
or
data16
fwait
scas
daa
jb
jecxz
cmp
xchg
mov
in
cltd
leave
int
iret
test
mov
clc
inc
andb
inc
insl
pop
adc
xchg
ret
in
inc
mov
repz
mov
pop
shl
adc
adc
mov
jne
xor
js
sub
mov
sahf
xchg
adc
lret
rorl
clc
daa
aad
add
dec
icebp
cmp
xor
xor
dec
cmpsl
add
cmp
cmpsl
jo
sets
cmp
jnp
fcmovnbe
lahf
pop
int
jp
mov
insb
icebp
testl
pop
xchg
cwtl
std
add
jge
loope
sbb
repnz
rorb
jnp
repz
cli
mov
popa
shl
inc
xchg
lret
int
cwtl
subb
shlb
sbb
jns
sahf
cmp
pop
push
or
push
ja
inc
jle
rcrb
or
test
lds
stc
nop
push
mov
mov
insw
sarl
dec
leave
xchg
fwait
pop
push
push
sarb
pop
cmpb
jg
or
xchg
into
xlat
xchg
hlt
or
sahf
outsb
stos
sbb
push
mov
cmpsl
pop
or
push
xor
mov
push
pop
pop
rcrl
imul
jno
fidivrl
stc
int
repz
mov
sub
cmp
pop
aad
rcrb
clc
fs
xor
imul
mov
mov
out
xchg
adc
cmpsb
loopne
jne
lcall
mov
mov
or
imul
in
or
mov
xchg
pop
out
shll
jl
mov
sbb
repz
mov
cmp
and
cmc
cmc
sbb
xchg
jns
ficoms
jo
add
push
xchg
add
lock
fdivl
pop
test
daa
xchg
mov
adc
xor
cmp
add
and
cmp
cmp
jge
loope
pop
sbb
cmp
mov
fidivrs
inc
fwait
xchg
mov
aam
test
rcrb
add
sbb
lahf
int
pop
daa
mov
xchg
sub
pop
cmc
fists
popf
lock
cld
mov
bound
scas
cld
xchg
in
js
xchg
aas
iret
dec
xlat
aad
xor
scas
sbb
or
bound
cmp
cmp
sbb
inc
fildl
loope
daa
sub
cs
pop
sbb
add
nop
xlat
or
arpl
lahf
push
push
loope
or
shll
pop
mov
gs
xchg
push
hlt
xchg
or
cmp
leave
rol
addr16
fidivrl
inc
fldcw
enter
mov
insb
rcl
cmp
jmp
mov
adc
movsb
jnp
dec
mov
cmp
add
fisubrl
jbe
clc
xchg
popf
mov
test
pop
stc
imul
jae
cmp
add
inc
add
push
push
mov
mov
rolb
push
cmc
sarl
in
xchg
aaa
xchg
inc
jb
mov
lret
and
sbb
into
je
ljmp
call
movsl
in
pop
jno
xchg
test
pop
xchg
sti
out
mov
pop
fs
cld
pop
idiv
xchg
pop
add
cmpsl
lea
cmp
push
add
mov
xchg
or
repnz
mov
aad
sbb
in
outsl
or
sbb
cltd
outsl
ficoml
sbb
cmp
pop
popa
cli
or
das
pop
cmp
jns
push
das
jb
mov
icebp
stc
push
jns
mov
adc
sar
and
adc
div
aad
ret
inc
pop
pop
push
xchg
pop
lret
gs
shl
mov
cs
jno
icebp
stc
push
mov
incb
sub
out
lret
mov
hlt
pop
sbb
int
adc
pop
cltd
test
test
or
addb
ljmp
repnz
mov
xor
and
and
mov
sbb
ret
cltd
ror
xor
scas
mov
jmp
sub
mov
andl
mov
pop
xchg
xchg
fadds
jg
xlat
push
js
in
adc
shl
sub
scas
and
or
test
fistl
js
popa
inc
aad
mov
idiv
xchg
stos
aas
icebp
push
and
mov
lahf
jge
jno
outsl
cmp
push
mov
in
cltd
dec
dec
and
fcmovu
jo
pop
mov
notb
push
pop
sti
out
cmp
sahf
push
push
sbb
rcl
pop
mov
mov
sarl
fdivrl
std
repnz
std
or
pop
jnp
jmp
cwtl
jecxz
es
jge
repnz
movsb
fists
rcl
fiaddl
insl
shlb
les
adc
in
sub
inc
add
dec
fnstsw
adc
faddl
es
rol
loope
and
dec
lock
out
hlt
jo
push
sub
jno
test
pop
or
ror
xchg
sbb
or
jle
loope
stos
cmpsb
addl
adc
ret
inc
push
adc
dec
gs
add
mov
jge
dec
test
xchg
icebp
pushf
jbe
icebp
or
das
jae
add
adc
jg
inc
lock
popf
add
mov
dec
mov
mov
xchg
inc
pop
mov
sbb
jl
xchg
or
fstpl
cmp
das
loopne
mov
in
pop
rcrb
dec
in
mov
data16
ret
insb
rcll
sub
stos
xchg
push
lret
add
popa
fcmove
push
leave
mov
lret
out
aad
out
sub
scas
xchg
in
popa
fldcw
xor
adc
enter
xchg
out
pop
cmp
mov
adc
jns
pop
fbstp
shl
adc
lods
push
ret
jmp
dec
sar
mov
stos
imul
xchg
pop
adc
pop
aad
ljmp
push
js
pop
mov
addr16
add
cmpsb
or
lods
sbb
aas
cmp
hlt
jne
imul
jo
je
cltd
jb
out
fnstsw
push
fs
push
sbb
mov
jle
sbb
aad
roll
adc
neg
adc
aas
call
aas
push
insb
cwtl
loopne
rorl
mov
clc
insl
imul
add
fucom
imul
mov
call
shl
mov
adc
sbb
xor
data16
std
fidivl
sub
fiaddl
mov
mov
or
std
mov
ret
push
push
push
testb
div
xor
push
cltd
xor
test
add
pop
inc
push
mov
cltd
xlat
or
mov
stc
out
test
rolb
clc
pop
xorb
imul
mov
cld
jb
ljmp
ja
out
adc
sbb
or
mov
push
movsb
imul
fiaddl
test
xlat
lods
aaa
or
outsl
popf
or
push
aas
fnstenv
jb
shll
test
repz
sbb
sbb
inc
hlt
mov
loope
pop
test
stc
mov
ret
add
lods
mov
fisttpll
mov
jbe
and
out
incb
push
sarl
dec
pop
push
push
lock
push
sub
jge
bound
cmc
iret
mov
clc
test
pushl
and
mull
ja
add
test
sbb
add
fisubrl
add
popf
sub
cmp
imull
in
loope
in
pop
lret
pop
lea
jo
fwait
inc
dec
jae
adc
fcmovu
xor
inc
shrb
das
jno
pushf
pop
xor
sub
xor
call
adc
xor
inc
iret
cmp
std
lahf
jnp
or
xor
push
pop
jns
cwtl
hlt
and
stos
sub
xchg
jnp
xor
bound
mov
xchg
out
sub
sbb
hlt
pop
jns
pop
jae
and
sar
ljmp
pop
and
test
fnstenv
mov
xor
fistl
pop
and
das
inc
jl
iret
push
out
outsl
sbbb
mov
incl
leave
adc
rcr
dec
ret
mov
andb
data16
sub
mov
fisubl
jmp
das
cmpsb
jg
fmuls
out
sbb
mulb
sub
lret
ss
adc
fwait
cmpsl
rorb
jmp
add
out
xlat
jns
notl
ret
popa
pop
xor
mov
xchg
inc
mov
xchg
and
sbb
sub
add
inc
cltd
add
add
mov
cmp
mov
shrb
mov
xchg
xor
mov
mov
xchg
lods
ss
jl
sbb
and
add
shrb
add
arpl
lret
mov
aad
ljmp
rcll
jns
and
cli
push
lahf
add
xor
loopne
adc
inc
xor
ret
rorl
pop
movsb
popa
cmp
fcomp
rorl
in
sbb
mov
fiaddl
xchg
lcall
pushf
pop
repz
movaps
gs
pop
mov
fiadds
fnstcw
xchg
fdivs
stos
or
mov
fimull
mov
sub
sbb
add
cmp
sarl
out
negl
adc
pop
ds
rcll
adc
jl
lret
xlat
sbbl
push
push
in
jne
aas
and
es
xchg
icebp
adc
sti
cltd
adc
imul
add
into
push
or
push
adc
inc
imul
stos
mov
cwtl
sub
push
aam
inc
inc
div
sbb
pop
inc
inc
mov
jecxz
adc
xchg
sbb
insb
ds
mov
hlt
dec
iret
ret
out
sub
mov
cs
cmp
sahf
xor
dec
lahf
inc
rorl
icebp
pop
xor
sbb
or
sbb
inc
out
pop
rcll
divl
push
cmp
sub
enter
cmp
adc
rclb
dec
sub
jle
pop
data16
in
inc
cld
mov
fcomp
arpl
pop
scas
pop
mov
bound
mov
ljmp
push
sub
mov
or
xorb
cmp
outsb
popa
cmpsb
dec
leave
addb
pop
jae
adcl
ret
or
or
xchg
icebp
fwait
mov
icebp
push
cwtl
dec
mov
jmp
pop
or
xchg
scas
push
jecxz
jb
or
test
cmp
fsubrl
not
or
xlat
xor
mov
push
and
enter
ljmp
repnz
dec
inc
mov
ds
and
push
xor
fldz
loopne
cltd
pop
outsb
push
xchg
push
xchg
sbb
jb
addr16
das
test
dec
testl
gs
xor
lods
xor
cmp
xor
jns
fcomp
sub
fdivp
adc
test
lret
les
lcall
rcll
out
shl
xor
flds
inc
pop
and
xchg
jbe
inc
lar
xor
jecxz
push
pop
loop
or
adc
xchg
xor
stos
cwtl
push
cmpsb
add
loopne
mov
mov
dec
mov
andl
xor
xor
insb
add
push
ficompl
ror
fldenv
insl
ds
push
repz
clc
insb
rorb
in
popa
fstpt
push
xchg
jo
push
movsb
aas
mov
jo
mov
push
les
pop
push
daa
rcl
jne
mov
mov
mov
outsb
sub
test
mov
cmp
int
imul
mov
dec
out
stc
mov
fcmove
mov
sub
push
stos
clc
jg
scas
pop
push
xlat
dec
addr16
push
lock
pop
ja
lret
fldenv
sbb
outsb
mov
mov
jns
insl
test
or
fsubl
stos
mov
or
data16
movsb
jp
test
xor
loopne
repnz
sbb
xor
out
xor
dec
cld
repz
jecxz
jecxz
mov
mov
mov
sbb
add
sar
add
sbb
and
mov
lods
sbb
xchg
cwtl
movsb
jnp
pop
adcl
push
and
mov
jns
and
test
ljmp
js
mov
dec
lods
pop
inc
out
popa
mov
lahf
sbb
leave
xchg
sbb
jbe
xchg
cld
cmp
mov
push
pop
fnstsw
adc
mov
data16
push
imul
aam
xor
stos
push
ja
push
mov
sbb
decb
loop
xchg
bound
pop
pop
xor
jb
push
adc
dec
fcmovnbe
jg
loope
ss
fs
sub
push
push
inc
inc
nop
push
addb
mov
loope
jbe
dec
inc
icebp
sbb
jnp
scas
in
jns
lock
cmc
test
aad
aad
mov
cmp
aad
pop
sbb
ja
adc
add
lret
xor
sarb
test
jno
test
xchg
aas
sbbb
das
out
sbb
ret
cmp
shll
pop
mov
pop
hlt
lods
insl
sbb
icebp
movsb
jne
repnz
clc
fcomps
pop
xchg
cmp
add
cmc
or
push
dec
pop
or
cmp
loopne
cmc
nop
fstpl
mov
test
ret
icebp
iretw
mov
imul
lock
adc
test
iret
push
int
dec
subl
in
push
dec
jmp
fwait
rorl
js
sub
fcmove
arpl
cmp
out
out
ds
xchg
sbb
pusha
popa
shrb
loope
inc
clc
mov
hlt
lahf
insl
jns
sbb
mov
xchg
icebp
mov
xor
and
aas
adc
push
xchg
leave
push
fs
movb
popf
ds
dec
fidivl
insb
push
jmp
imul
sarl
gs
mov
fnsave
push
push
inc
stc
dec
inc
rclb
into
xchg
insb
cmp
imul
jge
sub
or
add
call
stc
jl
and
jo
lea
test
jns
mov
in
daa
ficoml
dec
pop
adc
push
xchg
sbb
adc
in
mov
jne
xchg
sbb
les
incb
pop
addr16
imul
lods
stc
negl
mov
loopne
scas
loop
daa
js
dec
outsb
cmp
push
xlat
mov
out
sub
push
xor
cmp
rcl
xchg
pop
sub
outsl
jg
jecxz
mov
or
pop
jae
pop
sbbl
xchg
xor
pop
neg
mov
enter
popa
in
icebp
xchg
jp
repnz
rol
out
mov
jg
ja
push
mov
dec
or
mov
sub
leave
ja
lods
cmp
push
pop
into
jp
push
push
sub
sbbl
ficompl
cmpsb
lock
int
stc
xchg
test
jle
cwtl
movups
dec
lahf
xchg
stos
test
cmpsb
daa
cmp
xor
mov
shl
mov
gs
int
push
adc
fidivrl
lret
cmp
and
sub
or
popf
mov
cmp
loopne
sqrtps
mov
mov
dec
shl
and
and
inc
sti
mov
sti
push
mov
adc
mov
je
dec
mov
hlt
mov
cld
xlat
outsl
inc
push
stc
sbb
mov
cmp
fsts
rorl
scas
nop
jbe
bound
addr16
cmp
inc
cli
mov
repz
jecxz
mov
stos
xor
push
addr16
les
pop
cmp
aaa
icebp
xchg
loopne
lahf
popl
lods
test
pushf
push
ret
popa
adc
iret
jp
ljmp
decl
mov
mov
sarb
sbb
cmp
mov
pop
das
hlt
inc
shrl
test
mov
cmpsl
mov
mov
stc
jg
mov
mov
mov
mov
push
mov
jp
mul
xchg
push
mov
and
push
nop
pushf
fnstcw
xchg
dec
mov
fdiv
das
adc
cmp
adc
and
mov
mov
js
scas
jle
jge
loopne
mov
add
dec
jb
shrl
scas
mov
lods
lea
mov
insb
enter
negl
xlat
push
shll
mov
cmpsb
mov
xchg
jge
or
xchg
mov
cltd
repz
fs
or
and
fcmovu
mov
fstpl
mov
pop
fidivrl
push
leave
jg
je
jo
icebp
sub
shll
pop
je
popa
mov
add
js
ja
jecxz
jl
mov
in
cmc
cmp
in
loope
mov
jb
mov
push
popa
mov
xchg
inc
shll
test
int
dec
mov
jo
aaa
mov
fistps
test
xchg
lcall
add
jl
jae
xor
clc
imul
pop
xor
xor
cld
ret
push
loope
xor
mov
shrl
mov
iret
cmp
mov
push
es
and
jecxz
cmp
push
adc
mov
mov
ret
jmp
daa
inc
daa
mov
sti
pop
jbe
cld
repnz
setne
fwait
mov
int3
js
hlt
pop
mov
stos
or
pop
testl
inc
pop
aaa
push
lcallw
rol
jecxz
xchg
les
cmp
pop
pusha
shrl
cs
hlt
leave
push
push
xchg
mov
das
movsl
xchg
cld
mov
loopne
jb
sbb
and
sub
ss
fisubrl
repnz
lret
sbb
sar
fs
xchg
push
aad
or
adc
or
repz
push
adc
cmp
aad
fmull
repnz
dec
jg
dec
je
push
sbb
sbb
mov
cli
stc
cwtl
fsts
jg
add
mov
ret
inc
inc
into
pop
mov
rcl
cs
mov
adc
or
push
mov
xorl
imul
xchg
pop
sahf
fstps
outsl
hlt
sub
stos
push
push
sbb
popf
mov
cwtl
lods
jno
in
add
insb
cmp
mov
repz
pop
lret
mov
stc
add
movsl
inc
xor
aad
daa
xchg
xchg
sbb
jge
push
or
adc
xchg
dec
add
icebp
xlat
push
push
push
dec
sbb
stc
dec
into
js
rclb
add
outsl
aaa
add
xchg
pop
push
test
add
push
jb
mov
mov
fists
dec
cltd
mov
imul
call
test
push
hlt
into
aad
cltd
mov
pop
jle
setle
jge
aad
sub
xchg
and
nop
pop
xor
shll
xor
adc
xor
mov
jge
add
mov
rclb
pop
or
or
pop
jo
sbb
aam
cwtl
mov
lods
dec
pop
pop
mov
mov
push
fdivrs
ror
and
jno
nop
mov
jmp
pop
mov
cmp
es
movsl
scas
sbb
call
pop
inc
inc
js
fisttpll
adc
mov
andl
popl
rcll
jle
sub
rclb
pop
and
and
ljmp
jns
sub
jmp
outsl
lret
cwtl
pop
jg
in
add
insl
mov
jge
inc
push
in
adc
rclb
enter
inc
cmp
aad
cli
fsubrs
jg
jmp
or
mov
ja
sbb
mov
and
pusha
ja
repnz
or
and
xchg
dec
cmp
bound
jno
insl
loop
cmp
into
xchg
dec
cmpsl
pop
mov
xchg
loop
shlb
adc
gs
scas
lret
jge
imul
or
pop
dec
loop
jnp
pop
fnstsw
adc
out
mov
sti
stc
adc
ficompl
fwait
std
fcom
lods
jb
adc
cld
mov
sahf
leave
mov
dec
jns
std
xchg
cmpsl
aaa
mov
push
xlat
test
and
adc
dec
insl
add
sbb
shrl
rcrl
int
enter
fdiv
clc
mov
stc
int
sub
pop
xchg
stos
jge
loope
fsts
mov
testl
leave
jb
xor
movsb
iret
jae
or
cmp
and
adc
adc
sbb
cmpsl
setbe
xchg
repz
xchg
dec
and
cmp
push
xor
fiaddl
outsb
mov
or
jp
loope
xchg
adc
repz
cwtl
xor
shrb
lds
je
xchg
test
shl
mov
ljmp
shl
sub
mov
outsb
test
cmp
mov
pop
sbb
inc
lock
xor
test
push
pop
jno
pusha
and
int
mov
aaa
addr16
lret
mov
mov
inc
xchg
aad
push
stc
adc
xlat
inc
dec
adc
pushf
pop
std
dec
cmp
cmpsb
lock
enter
dec
and
push
fimull
pusha
pop
cmpb
or
addr16
dec
popf
ljmp
cld
fucom
out
sbb
lahf
pop
mov
iret
je
icebp
lret
out
sahf
sbb
movsl
popa
mov
cli
jg
cmpsl
fcmove
or
dec
cmp
insl
loope
xlat
xor
subb
mov
cmp
xor
and
daa
jnp
aad
cmp
jns
nop
rcr
repnz
dec
fcmovbe
jno
outsl
xchg
fistpl
insb
divl
rcl
outsl
sahf
insb
repnz
es
adc
jp
hlt
xor
xchg
sarb
mov
mov
push
push
inc
fbstp
sbb
sub
mov
out
mov
lahf
lea
cwtl
jl
and
add
push
rorb
outsl
or
dec
adc
std
loope
xchg
enter
push
hlt
jae
shr
xchg
testl
sbb
mov
call
push
iret
adc
adc
jmp
add
dec
sub
loop
jl
xchg
cmp
shlb
popf
aaa
dec
and
es
xorb
insb
mov
xor
test
rclb
push
daa
in
aad
adc
inc
mov
mov
jb
or
rol
or
jmp
mov
xchg
or
loope
nop
xor
mov
lahf
dec
jmp
rorb
lods
icebp
mov
lret
xchg
mov
js
cli
jmp
sar
fcmovu
xchg
xor
lret
fiaddl
scas
xchg
insb
sbb
jnp
insb
outsb
fidivl
xchg
adc
sub
cs
fldt
push
mov
add
adc
cmpsl
and
addr16
mov
mov
test
inc
dec
sbb
xchg
fwait
mov
sbb
in
xorl
test
mov
adc
roll
cmp
stc
xor
adc
loopne
xchg
xor
push
add
lock
ja
sub
sub
imul
jo
mov
sarl
mov
imul
popf
mov
dec
and
mov
cmp
daa
lock
aas
or
dec
push
inc
inc
outsb
xchg
push
dec
pop
inc
or
mov
dec
and
mov
jmp
mov
pop
lahf
in
outsl
push
je
add
sahf
daa
ljmp
rcll
ret
icebp
pop
lods
sbb
mov
or
jae
sbb
cmp
mov
inc
jno
aad
xchg
xchg
dec
stc
xchg
int
push
flds
or
fisubl
pop
jne
add
pop
mov
cli
into
rorl
test
or
in
mov
shll
bound
fs
loop
sar
into
xor
es
pop
out
xlat
out
fucomip
sbb
inc
or
fisttpll
rcrl
bound
cltd
idiv
ret
sub
fstps
out
jmp
lds
das
test
xchg
sarl
push
rcll
insl
shll
mov
out
scas
ret
xchg
pop
adc
add
rcll
daa
cli
stc
adc
inc
adc
aad
jg
lock
mov
push
fisubrl
popa
jge
jns
push
and
push
int3
test
pop
cmp
xchg
inc
fbld
rcrb
xchg
inc
out
inc
pop
adc
int
ds
add
cmc
mov
cwtl
fcomps
jns
shr
jne
mov
jg
bound
or
outsl
adc
rclb
or
ja
adc
sbb
adc
sbb
push
icebp
fldl
pop
loope
insb
dec
lods
sarb
int
outsl
mov
test
pop
aad
mov
rcr
inc
or
mov
ror
inc
test
adc
out
in
dec
mov
jecxz
jge
mov
sub
fisubrl
add
jne,pn
sub
mov
fistpl
addr16
cmp
or
pop
push
inc
repnz
outsl
clc
cmp
pop
jge
fists
adc
aam
xor
xchg
lcall
fcom
jbe
jecxz
cmpsl
notl
mov
fimull
sbb
icebp
fstpl
mov
arpl
or
cmp
call
pop
stc
lea
int
xchg
xchg
xor
mov
and
fildl
xor
ret
into
gs
or
and
out
es
movsl
loopne
lock
sbb
xor
mull
sbb
rcrb
push
sarb
dec
xor
dec
in
dec
xor
addl
push
test
dec
dec
fidivl
sbb
add
pop
mov
pop
adc
mov
jge
shll
pusha
add
adc
movl
stos
mov
mov
jns
mov
push
mov
adc
push
xchg
pusha
cmp
jp
rcll
mov
cltd
or
inc
nop
cmpsb
je
dec
sbb
cmp
stos
lret
test
iret
inc
push
cmp
xchg
aad
dec
sarl
lcall
xchg
mov
rcll
fcoml
stos
mov
sbb
mov
xor
cmc
xchg
sub
in
divl
push
inc
jo
sbb
sub
cltd
add
aad
mov
xlat
push
mov
lret
pop
xchg
test
jns
xchg
sub
jge
mov
pop
pop
xor
xlat
jb
or
xchg
push
pop
insl
adc
mov
sbb
loopne
mov
insb
imulb
or
mov
int
movsb
sti
jle
ljmp
xor
jmp
cwtl
fisubrs
push
imul
int3
leave
sbb
pusha
cmp
lods
cltd
cmp
or
in
xchg
mov
pop
int
mov
inc
aad
aad
out
mov
ja
outsb
and
test
repnz
imul
and
ja
inc
loopne
out
fisubrl
fisubrs
imull
stc
ficoml
mov
xlat
lret
jnp
das
cmc
cmp
mov
push
enter
cmpsl
mov
sub
jo
loope
mov
in
push
inc
ds
mov
insb
and
fsts
lea
pusha
daa
dec
xchg
out
std
push
mov
incb
rcl
lret
xchg
push
insl
mov
cld
ljmp
or
enter
subl
test
inc
lret
test
test
add
xor
bound
mov
icebp
outsl
add
mov
push
pop
shlb
rcr
andl
add
mov
mov
dec
ficoml
pop
mov
cmp
xchg
imul
lods
mov
stc
not
push
sbbl
pop
ror
cltd
ficompl
dec
push
dec
cmp
jecxz
iret
test
cmpsl
mov
daa
out
test
lret
push
imul
fisubl
and
sarb
push
xchg
xchg
sti
scas
sbb
xor
out
adc
cs
adc
xchg
lea
sub
popf
pop
xor
aaa
pop
test
movl
sbbl
and
sub
cld
mov
stc
fcmovu
pop
and
lret
xchg
push
cmpsl
aaa
pop
or
push
push
test
loope
sub
outsl
out
fisubs
lock
fmuls
lock
adc
daa
orl
out
ret
aad
mov
fsub
push
push
jb
adc
lahf
sub
sub
push
mov
sbb
cwtl
xor
cli
mull
adcl
fwait
outsl
pop
mov
das
mov
push
in
iret
push
out
cld
cmp
mov
or
es
mov
scas
xor
adc
mov
adc
testb
mov
pop
adc
scas
aaa
outsl
xor
sub
fwait
sub
lahf
int
pop
cmp
sub
pop
pop
push
or
jno
in
xor
mov
js
add
lock
rcll
lock
inc
adc
push
adc
mov
xchg
shlb
push
push
inc
sti
mov
sub
mov
fisttpl
sub
push
or
lret
mov
push
dec
insb
mov
pop
mov
rorl
popf
lcall
and
inc
fistpl
test
repz
fcmovbe
scas
gs
jns
icebp
lock
inc
mov
aad
xchg
fildl
hlt
xchg
repnz
jge
insl
lock
fimuls
sbb
inc
add
pop
cmpsl
pop
jge
sbb
fisubrl
test
mov
mov
icebp
sbb
lret
fdiv
mov
hlt
jmp
shrb
add
lods
add
push
jge
andb
xchg
mov
lea
ret
xchg
mov
neg
xchg
xor
add
xor
jo
jbe
inc
pop
imul
mov
pop
clc
xor
mov
mov
or
lods
push
push
push
icebp
or
xor
sbb
xchg
add
sbb
leave
mov
mov
leave
call
push
cmpsb
fidivrl
push
push
or
sub
mov
lret
add
mov
lret
sahf
jle
adc
mov
xorb
in
push
das
sub
orl
nop
mov
xchg
or
rcll
add
outsb
aaa
test
cmpl
arpl
in
add
pop
xchg
jge
lahf
pop
and
jl
testb
xchg
sub
adc
mov
test
sub
scas
dec
outsl
shlb
push
loop
mov
fstpl
arpl
rol
adc
and
sbb
inc
sbb
into
jo
fiaddl
push
dec
jae
roll
ret
insb
aaa
in
adc
inc
popa
fimull
jo
sbb
or
rcrb
cmp
je
fdivs
or
incl
ja
dec
div
push
and
stos
stc
sub
mov
fildll
loopne
dec
sbb
pop
sub
dec
shl
or
faddl
xor
cmpsl
inc
or
push
popf
xor
adc
jno
jmp
sub
pop
xchg
inc
or
or
outsl
pop
mov
das
adc
imul
add
std
mov
adc
jnp
mov
dec
xchg
dec
cmp
jne
xor
xchg
sub
divb
and
stos
push
cmc
pop
add
dec
iret
leave
pop
xchg
adc
xchg
mov
dec
jb
add
add
repz
fwait
adc
inc
push
ret
push
xchg
pop
movsl
cmp
lock
adc
into
popa
sbb
jns
add
rorl
iret
bnd
rcll
inc
mov
repz
fwait
pop
cmp
xchg
enter
shl
iret
es
in
shrl
dec
inc
mov
sbb
hlt
pop
insb
rcll
inc
mov
sbb
stc
and
inc
mov
data16
xchg
into
lds
daa
test
call
mov
adc
out
jle
out
gs
into
push
xchg
mov
push
xlat
mov
or
mov
sub
ja
sbb
jle
stc
fsubrl
mov
shlb
or
cld
addl
cmp
test
testb
and
popl
adc
mov
add
push
cmp
aas
sahf
fcoml
cmc
addr16
sbb
sub
popa
jnp
cmp
push
cmc
mov
not
sbb
popa
shr
push
aad
mov
cmc
jle
stos
subl
dec
mov
jns
sbb
or
insl
push
pop
and
or
ss
mov
mov
xchg
fmuls
adc
or
add
lret
pushf
inc
mov
sub
or
loop
arpl
jmp
clc
xchg
shl
dec
imull
ja
pop
test
push
sbb
sbb
push
fisubl
sbb
js
sub
mov
dec
fucom
pop
movsb
pop
in
ja
leave
cs
aaa
shll
clc
jae
xchg
jp
movl
das
inc
adcl
xchg
shll
mov
mov
inc
rcll
cltd
arpl
out
aad
mov
jo
pushf
push
js
jo
lret
mov
adc
xchg
das
mov
stc
sbb
or
xor
test
stos
cmpsl
test
mov
add
enter
dec
mov
mov
add
jg
add
push
sub
ljmp
mov
mov
out
jns
push
cmp
arpl
sti
jb
xchg
adc
adc
mov
sar
and
roll
xor
imul
shlb
insb
idivb
mov
xor
xor
push
mov
jmp
dec
scas
push
pushf
xchg
ds
mov
loope
imul
stc
inc
jecxz
xor
xor
ja
fistpll
sub
mov
mov
sbb
adc
sbb
mov
adc
fiaddl
pop
rolb
mov
pop
jecxz
mov
adc
andb
dec
or
inc
clc
std
repnz
sbb
or
fisubrl
xchg
ret
or
or
jl
push
push
cld
loope
ja
adc
fldt
jbe
test
jecxz
mov
out
add
pushl
std
dec
mov
popa
sbb
mov
or
adc
es
fisubrs
cltd
jle
pushf
mov
xchg
sub
stos
ds
cmpsb
mov
fimull
sbb
fnstenv
push
arpl
jl
adc
test
mov
lds
std
shl
cmp
sbb
lds
icebp
cmp
jl
push
adc
cmpsl
outsl
popf
cmp
imul
int
cmpsl
popf
xchg
fcomp
xor
or
adc
mov
ror
fdivrl
mov
mov
dec
pop
and
stos
cwtl
mov
xchg
and
lds
bound
mov
jecxz
push
add
imul
lret
imul
clc
fcomp
inc
lretw
sub
jp
ljmp
rcl
shr
popf
and
cmp
cmp
pop
mov
lods
sahf
pop
and
cmpsl
mov
and
out
adc
aam
sbb
add
mov
rorl
clc
lods
loop
or
enter
stc
xor
test
push
cltd
push
mov
lds
pop
lcall
xchg
int3
jnp
inc
cmp
fstl
sbb
movsb
inc
es
jg
rcrl
xchg
push
dec
fisubrl
mov
adc
xor
push
cmp
xchg
xlat
es
subb
dec
mov
movsl
in
push
jb
xchg
dec
sub
inc
push
sbb
insb
sbb
pop
fiaddl
cmp
cmc
xor
lock
fwait
dec
rcll
and
cld
jle
inc
aas
test
or
movb
push
sub
adc
ficompl
je
mov
lret
jno
lods
and
pop
arpl
stc
dec
sahf
add
or
mov
push
inc
xor
mov
test
push
jg
mov
inc
fisubrs
inc
sahf
mov
orb
pop
dec
add
dec
push
jg
mov
inc
push
out
js
icebp
fsubs
sub
mov
repnz
stos
scas
xor
sub
mov
movsb
clc
dec
sub
and
loope
popa
or
pop
enter
sbb
pop
xor
push
popf
clc
xchg
cltd
push
or
in
inc
lea
aad
pop
or
or
sub
outsb
adc
adc
sarl
data16
inc
pop
rcl
sub
insl
jnp
dec
clc
push
les
adc
mov
fs
repz
scas
mov
out
dec
pop
divl
sahf
sub
mov
push
loop
ja
mov
xchg
mov
icebp
pop
cmp
nop
rolb
fisttpl
sbb
xchg
add
pop
scas
xor
cmpsl
pop
cmp
cmp
mov
jge
sub
daa
enter
call
hlt
imul
arpl
clc
mov
push
shll
pop
inc
or
xchg
fisubl
mov
rcll
sbb
jmp
jge
popf
shlb
loopne
imul
xor
idivl
jle
jecxz
mov
add
xlat
mov
mov
add
pop
rcrb
lds
jbe
jmp
aam
ficomps
xchg
mov
icebp
test
es
cmp
sub
stos
rcr
aaa
cmp
mov
pop
lret
std
mov
xor
mov
and
pushl
cmp
js
mov
fidivl
or
cmp
into
cmp
ficoml
addr16
mov
ficoms
mov
add
sbb
mov
cmpsb
adc
outsl
inc
and
push
push
dec
mov
mov
cmp
sbb
stc
std
cltd
dec
cmc
in
push
lods
mov
or
repz
cmp
adc
icebp
cmpb
mov
shll
jns
lahf
movsl
scas
loopne
adc
lods
fisubl
jae
rcll
pop
ret
jo
cmp
and
filds
stos
sbb
leave
testl
dec
jecxz
ret
jns
or
sbb
mov
cmp
push
cmp
clc
pop
and
xchg
dec
mov
push
cmp
sar
fidivl
or
pop
call
ja
xor
xchg
inc
lahf
mov
enter
imul
inc
jb
or
xchg
add
or
sahf
jnp
test
jb
mov
and
cmp
test
and
dec
and
lret
sub
dec
icebp
js
lds
jbe
jns
arpl
stos
mov
lret
mov
mov
jmp
aas
mov
cmp
or
mov
cmp
cltd
scas
xor
xchg
repnz
repnz
cmpsl
rcll
fs
ja
lods
out
sbb
pop
pop
dec
into
cmp
cmp
cltd
or
sbb
dec
sbb
adc
mov
sarl
filds
pop
cs
mov
repz
cmp
xlat
insl
push
insl
movsb
daa
daa
mov
cmpsb
jg
mov
push
mov
andl
xor
xchg
xchg
andl
jmp
xchg
mov
sbb
popa
cltd
xor
ret
lea
and
inc
xchg
or
imul
es
stos
jae
popa
cmp
xchg
sbb
div
stc
fisttpll
adc
xchg
bnd
sbb
iret
shlb
sarl
pop
push
xor
cmc
lock
mov
sbb
sbb
push
popf
mov
mov
or
add
les
pushf
es
sbb
pop
out
mov
ja
mov
push
mov
sub
or
lret
xor
or
dec
push
mov
imul
scas
mov
xlat
mov
std
mov
stc
shrl
outsl
sub
imul
int
sub
mov
xor
test
or
rcl
adc
xchg
fcomps
ss
xlat
pop
add
mov
push
fistpl
inc
movsb
mov
lea
enter
sbb
ret
push
shll
dec
out
or
jg
and
out
push
ret
imul
xor
jns
or
sahf
sub
cmp
call
cmp
dec
fcoml
jno
sbb
sbb
negb
xor
scas
mov
sbb
rorl
jo
xchg
outsb
imul
fimull
push
jmp
inc
mov
lods
cmp
cmc
cmp
xor
xchg
jbe
out
dec
and
iret
iret
and
xchg
pop
jge
aam
or
sbb
and
mov
fs
adcl
popa
xor
push
pop
jle
fldcw
out
jle
imul
sbb
pop
xchg
inc
add
cmp
ss
xlat
shl
rcll
flds
mov
mov
push
dec
push
push
outsb
repnz
ss
pop
dec
or
fstl
push
idivb
xlat
xchg
je
jmp
fstps
mov
adc
jae
sbb
aas
or
shrb
mov
aam
sbb
xchg
mov
or
fcmovnbe
xchg
fcom
sub
lcall
pop
xchg
ja
mov
popa
outsl
adc
and
cmp
bound
out
pop
mov
loop
mov
fsubr
sarl
xchg
push
mov
rorl
jle
dec
fs
in
push
mov
fcomps
mov
loop
bound
lret
aas
sarb
flds
sbb
push
adc
jle
jle
xchg
int3
js
cli
inc
rorb
push
dec
ja
push
and
or
loopne
or
add
js
int3
imul
sti
mov
mov
jp
repz
pop
add
sbbl
sti
jle
fwait
mov
std
cld
fwait
sub
fdiv
lock
dec
ret
ret
pop
das
or
dec
sbb
fisubrl
sbb
sub
pop
and
cwtl
push
push
xchg
inc
lock
loop
push
popa
xor
jle
mov
and
mov
imul
in
or
jns
add
mov
test
in
push
cmp
jle
pop
lods
in
std
ret
rcll
sub
lods
loop
out
cmc
rcl
scas
repnz
push
push
or
fwait
xchg
dec
sbb
xor
negb
std
gs
push
clc
and
scas
jne
dec
pop
mov
and
jp
rol
stos
xor
add
rcrl
fwait
or
rcl
dec
pop
sbb
xchg
xchg
xchg
fstpl
loopne
adc
ror
sub
and
mov
adc
icebp
push
hlt
xor
push
or
mov
stc
or
sub
xor
jle
popf
add
setae
mov
mov
xchg
sub
in
jno
cmp
fildll
and
push
sbb
fisubs
mov
push
mov
gs
and
fiaddl
lahf
fisubl
mov
mov
pop
inc
adc
and
push
popa
inc
pop
sbb
js
lods
rorl
xchg
push
test
aam
or
push
rcrb
ss
pop
sbb
test
push
mov
mov
jecxz
jbe
mov
sti
xor
cmc
hlt
xor
sbb
fimull
repz
lods
mov
and
mov
push
adc
or
push
dec
sbb
jecxz
iret
or
test
bound
aas
mov
fisubl
push
mov
mov
fcom
into
jns
clc
xchg
mov
or
xchg
scas
xchg
and
sbb
das
sbb
clts
imulb
out
push
cmp
sub
int3
inc
rcr
adc
cltd
pop
jno
inc
lahf
cmpsb
sbb
das
mov
cmpsb
mov
jmp
pop
pushf
cmpsb
sti
shlb
xor
push
sbb
andl
pop
cmpsl
lea
sti
test
rol
pop
cwtl
scas
xor
cltd
inc
lcall
stc
push
cmp
je
pop
mov
push
popa
sarb
sub
push
push
inc
dec
push
push
loopne
add
mov
pop
sbb
pop
pop
arpl
or
sub
sarl
lret
cmp
xlat
stos
push
xor
jns
call
pop
insl
jbe
test
jge
sub
mov
test
shll
out
xchg
mov
hlt
add
xchg
rclb
out
xchg
sbb
xchg
rorb
xor
lret
jns
or
cmp
gs
jbe
xor
stos
dec
mov
shrb
popf
cmp
popf
push
les
test
outsl
push
jnp
in
mov
fstps
sub
jae
pop
mov
dec
dec
push
push
pop
or
stos
xorb
and
repz
or
jle
js
cltd
mov
adc
repz
pop
sbb
data16
rclb
xlat
sahf
xor
jbe
pop
cmpsl
inc
mov
lods
mov
mov
rcr
xchg
fs
ja
int
pop
pop
shll
fisubl
subl
dec
jbe
pop
xor
inc
xchg
pop
scas
flds
pusha
popa
cmpl
jg
pop
mov
push
xchg
mov
adc
xchg
push
sahf
mov
aad
push
insl
adc
shlb
mov
out
sar
xchg
lock
mov
aaa
gs
xchg
aas
jns
ss
cmp
out
js
daa
test
mov
mov
pop
xor
add
gs
out
repz
xchg
xchg
push
dec
cmc
cmp
sub
jecxz
push
cwtl
subb
mov
fcmove
adc
ret
jo
inc
mov
push
jne,pn
nop
xor
mov
xchg
into
xchg
adc
test
fcoml
cmp
mov
rol
pop
jmp
mov
sbb
aaa
push
mov
outsl
mov
sbb
jecxz
xlat
pop
push
dec
add
outsl
das
push
arpl
into
out
ds
outsl
fdivl
sbb
fimuls
pop
mov
in
fcom
shll
mov
mov
imul
push
push
fcompl
arpl
dec
cmp
push
rorb
sbb
mov
pop
sahf
push
push
stos
xchg
cs
cmp
push
cwtl
rcll
stos
test
or
leave
adc
xchg
xor
cltd
shll
sbb
cmc
pop
mov
adc
sub
xlat
ds
mov
loopne
xlat
and
les
adc
push
sbb
ret
int
rorb
push
mov
pop
jo
mov
fildll
dec
xchg
xchg
call
jge
sbb
push
jge
ucomiss
adc
dec
aaa
inc
xchg
dec
pop
subl
bound
pop
inc
inc
jl
rol
sbb
mov
adc
push
repnz
cmp
dec
fwait
mov
imul
incl
inc
out
mov
call
pusha
pop
sub
std
jmp
test
mov
push
sbb
shlb
cmp
nop
jle
xchg
xor
ret
test
sub
test
mov
fdivr
sbb
shll
das
adc
ror
pop
xchg
ja
mul
push
stos
xchg
lret
jmp
or
jae
fidivl
adcb
xchg
mov
outsl
xchg
jnp
cmp
mov
xlat
cmpb
arpl
pushf
addr16
mov
sub
jno
ret
cmpsl
lret
imul
mov
add
pop
repnz
mov
hlt
mov
rcrl
pop
iret
cmp
movsb
mov
stos
lahf
sub
xorb
daa
pop
xchg
and
sbb
add
and
fdivs
jns
std
fwait
xchg
pusha
ja
xchg
xor
jns
scas
xor
pop
icebp
dec
adc
int3
mov
mov
push
mov
fucom
das
jecxz
mov
or
pop
xlat
and
pop
xchg
jns
cmp
xorb
pop
inc
popa
and
jmp
sub
and
fwait
in
pop
scas
push
lods
cwtl
call
mov
push
clc
leave
jnp
jge
dec
xlat
pusha
mov
popf
dec
xchg
into
sahf
dec
ja
stos
cmp
mov
fcoms
mov
xor
test
fildl
loop
push
or
fnstsw
rcrb
mov
mov
lock
push
cmpsb
sbb
int
sbb
and
pop
add
fstpl
mov
popa
push
and
mov
fisubrs
adc
xor
ljmp
sahf
xchg
rorl
stos
inc
das
scas
jecxz
mov
orb
jo
fldl
xchg
fbld
sbb
cld
push
popf
fcoml
insb
inc
mov
inc
inc
gs
movsb
xchg
add
cmc
xchg
stc
inc
jns
ja
movsl
out
sbb
addb
outsl
fdivrl
pop
ss
jg
nop
mov
fstpl
loope
push
inc
sbb
fs
out
add
jo
fstps
xor
xlat
lret
xchg
sbbb
cmp
push
ret
repz
xlat
xchg
ds
or
sub
mov
in
jg
mov
insl
cmp
test
sbb
int
inc
adc
outsb
lret
hlt
lods
inc
mov
add
ds
das
icebp
enter
dec
inc
fists
and
lods
ror
mov
adc
push
aad
xchg
imulb
cmp
cs
dec
xchg
xchg
cmp
and
ficompl
les
mov
mov
mov
or
mov
insb
popa
leave
rorb
or
cmpsl
jno
inc
cmp
sbb
jg
movb
rolb
push
jnp
push
clc
iret
xchg
fwait
daa
xchg
add
adc
dec
icebp
pop
xor
js
fwait
adc
ja
outsl
and
mov
sub
lret
sub
push
je
stc
pop
pop
orl
cmp
inc
icebp
push
imul
sub
fs
iret
inc
cmpb
imul
inc
lcall
inc
adc
mov
adc
mov
test
inc
ss
lahf
in
popf
xchg
sbb
sbb
lea
pop
add
in
xchg
neg
push
add
sbb
push
cmp
aam
iret
iret
pop
xor
fiaddl
scas
nop
xor
or
jg
jg
inc
aas
push
ljmpw
jb
pushf
sbb
and
and
cmp
xor
int3
or
push
xchg
or
rorb
inc
bound
adc
test
push
lds
outsl
inc
add
xor
and
xor
and
mov
pop
movsb
mov
push
jb
aaa
xor
data16
pop
xor
push
push
push
ljmp
inc
or
xchg
inc
pop
pop
xchg
dec
xor
lods
jo
cwtl
into
dec
rorb
fnstcw
cmp
in
cmp
leave
fidivrl
jg
test
inc
bound
andl
lcall
push
mov
xor
pop
inc
xor
xor
insb
iret
std
daa
adc
icebp
fcmovbe
and
test
insb
in
test
pop
scas
mov
mov
sarl
in
stc
xlat
daa
fdivs
jo
push
aaa
ret
loop
sbb
jle
lret
cli
outsl
or
ret
fldcw
stos
testb
add
iret
call
hlt
inc
fcomip
mov
mov
pop
push
shrb
pushf
fs
cli
pop
add
shlb
sbb
stc
xchg
jnp
incb
push
in
fidivrs
clc
cmpsb
test
add
inc
sar
icebp
mov
ss
ss
jle
fisttpll
sub
shrb
frstor
inc
rolb
insb
rep
push
jg
add
lods
sub
sub
in
cltd
jge
pop
fiaddl
xor
push
inc
je
cmc
sarb
aad
in
aas
pop
inc
int
add
mov
adc
in
test
sbb
mov
xor
adc
sbb
ret
inc
jae
arpl
hlt
scas
cmp
ret
mov
mov
fadds
jmp
mov
notl
loopne
call
push
mov
scas
mov
cwtl
imulb
testl
insl
sbb
sub
fisubl
repnz
dec
mov
push
nop
xor
into
sub
pop
pop
fiaddl
enter
fdivrl
mov
inc
scas
test
push
xor
pop
pop
xor
scas
jge
lods
xchg
cli
mov
andb
popa
xchg
pop
sbb
or
sti
mov
mov
mov
cmp
sbb
enter
test
mov
mov
lods
sub
fcmove
aaa
or
stos
push
fld
call
mov
mov
sbb
mov
add
push
sbb
bound
mov
cmp
push
push
cmp
stos
out
lods
sbb
jp
jle
inc
decl
sbb
pop
cmpsb
sarl
pop
mov
xchg
push
cmp
add
fcmovbe
inc
ja
nop
lret
pop
inc
rorb
dec
inc
icebp
int3
icebp
push
nop
jne
mov
sahf
mov
inc
stc
mov
cmp
jecxz
cltd
shlb
rcl
dec
shll
stc
adc
pop
fldt
inc
sti
pop
jl
push
fbld
pop
outsl
xchg
int
xchg
rol
and
or
ja
xchg
in
loope
cmp
int
and
pop
shr
lret
nop
cwtl
rcrb
jmp
jnp
cmp
mov
xchg
icebp
les
rorb
outsl
mov
sbb
out
ret
xchg
rcrl
lock
or
sarb
dec
aam
test
bound
ret
ds
lds
xor
push
jno
test
fdivrl
sbb
xchg
fdivrs
pop
sti
push
test
repz
leave
mov
mov
mov
jg
xchg
ficompl
flds
stos
adc
xchg
cwtl
sbb
xchg
daa
mov
icebp
cld
inc
ljmp
rcl
cmp
mov
cmp
scas
aas
aad
fstps
pushl
insl
inc
lahf
add
ja
push
daa
push
movsb
dec
push
or
movb
repz
add
insb
test
mov
shlb
subl
inc
sahf
scas
aam
cli
test
aad
sbb
movsb
cmp
pop
mov
or
fistl
pop
test
mov
or
aaa
repz
fiaddl
imul
call
icebp
test
and
sbb
jo
jae
jle
aad
iret
xchg
outsb
pop
adc
iret
ret
or
adcl
lock
pop
test
ja
mov
push
mov
xchg
push
xchg
cltd
or
popf
sbb
sbb
jae
push
mov
into
jg
xor
dec
scas
mov
int3
mov
out
cmp
fstpl
sbb
xor
or
mov
test
mov
fidivl
and
stos
cli
outsb
lret
cwtl
sub
add
add
fwait
cli
pop
mov
pop
out
jbe
xchg
call
popa
leave
adc
inc
jae
call
imul
rclb
cmp
sub
mov
cmp
mov
fstpt
xchg
cs
sarb
jns
movsb
inc
pop
aad
je
jmp
adc
add
je
ja
pop
pop
jae
mov
sub
ret
inc
adc
mul
lock
aad
outsl
mov
cmp
push
lds
pop
add
ds
and
in
icebp
cli
or
adc
ss
gs
pop
frstor
and
test
cmp
gs
inc
ds
pop
adc
enter
addr16
dec
popa
fcomp
mov
xchg
rcrl
iret
arpl
and
fimuls
and
sbb
ja
fucomp
mov
in
mov
sbb
xchg
fdivl
push
adc
je
mov
xchg
sub
andl
call
rcr
ss
or
repz
jge
movsb
sub
cmp
loope
jecxz
inc
xchg
mov
and
add
cli
fstl
cmp
or
iret
arpl
fiaddl
rolb
inc
pop
dec
xlat
pop
imul
cmp
xchg
xchg
push
es
sarl
and
sub
rorb
ss
imul
cmp
xchg
sub
jl
xor
push
inc
decb
pop
fcomi
mov
adc
pop
and
xchg
push
pop
cmc
ficompl
jb
pushf
ljmp
mov
imull
dec
les
and
ficompl
push
push
sarl
dec
addr16
push
dec
push
cmp
jnp
xor
les
ficoms
push
jge
mov
test
imul
repnz
dec
lea
nop
and
adc
ljmp
jmp
stos
xadd
sbb
int
push
adc
ficompl
push
inc
sbb
add
dec
addr16
lock
notb
aad
dec
lds
add
fisubl
cmp
jp
rcl
and
jns
loop
orl
inc
and
jmp
loop
pop
cld
daa
add
cmpsl
pop
push
frstor
es
cmp
xchg
sbb
rol
enter
xor
daa
inc
add
mov
mov
daa
sbbb
rclb
xor
fxch
push
insb
mov
movsl
cmp
repnz
xchg
pop
clc
icebp
fcom
pop
xor
dec
aam
sti
push
sub
inc
data16
xchg
scas
pop
push
inc
jg
negb
cli
sbb
dec
xlat
mov
in
push
jbe
mov
pop
lea
insl
fwait
mov
imul
les
fnstsw
js
fwait
xchg
das
dec
sar
pop
imul
adc
adc
pushf
js
loop
jae
pop
lret
sbb
mov
xlat
das
xor
lea
jl
dec
cld
bound
popa
sbb
or
incl
popa
filds
jle
cmp
lods
icebp
mov
js
les
mov
add
in
rorb
not
das
mov
leave
add
sbb
int
inc
inc
sbb
jecxz
js
xchg
mov
lock
stc
arpl
fstpt
inc
jp
gs
nop
xor
pop
mov
push
jae
das
stc
iret
rcrl
insb
push
ja
sub
lock
in
fcoms
stc
mov
js
lcall
cwtl
pop
xor
mov
test
fnsave
push
decb
ficompl
cmpsb
adc
rclb
in
push
jle
jnp
into
orb
mov
mov
mov
ja
movsl
jge
jno
push
cmp
push
adc
adc
sbb
push
and
in
hlt
adc
lret
add
testb
jle
jns
jle
dec
xlat
js
push
mov
icebp
jo
mov
pop
jecxz
mov
mov
sbb
loope
mov
sbb
dec
push
cmc
dec
aad
pop
mov
push
stos
iret
mov
rcl
insb
test
in
lods
sbb
mov
sarl
insb
call
aad
rorl
mov
inc
pop
bound
add
adc
pop
rcll
imul
arpl
or
aaa
and
mov
mov
mov
rclb
stos
mov
loop
adc
jne
testb
das
lock
aam
je
dec
mov
sbb
lret
sub
ret
repnz
inc
pop
rcrb
mov
aam
iret
add
cltd
cmpsl
lcall
movsl
mov
std
add
inc
popa
ja
bound
frstor
frstor
call
popf
iret
push
or
xor
lock
daa
outsl
adc
mov
lahf
fiaddl
rcl
dec
lock
push
outsb
xor
pop
sbb
xchg
out
frstor
arpl
les
movsb
jl
cmp
cwtl
dec
cwtl
sbb
dec
dec
jp
xor
push
stos
adc
ror
sub
enter
cmc
sbb
mov
aad
cwtl
xor
cmpl
aas
mov
movsb
js
jns
and
gs
cltd
sub
inc
jg
sti
adc
mov
push
push
dec
hlt
push
mov
shrb
and
push
or
xlat
orb
fisubl
imul
mov
es
mov
pop
and
lock
xchg
pushf
in
out
mov
mov
inc
push
mov
push
push
fidivrl
into
adc
test
push
pushf
push
mov
ja
lea
icebp
fidivrl
fdivrl
daa
fdivrl
dec
sub
add
adc
push
sub
lret
out
xor
pop
stos
fnsave
mov
pop
fiaddl
rclb
cs
lret
movsl
ficompl
mov
fdivr
mov
shlb
in
aam
sub
enter
loopne
or
pop
add
and
pop
pop
push
dec
pop
insl
lds
repnz
xchg
cmpsl
int3
cli
dec
int
mov
push
pop
adc
pop
and
and
jg
ret
mov
dec
push
sub
pop
lock
lds
xchg
inc
and
lcall
xor
fcomip
mov
rol
adc
icebp
xchg
inc
jae
sti
out
cmp
mov
test
add
xchg
in
mov
xchg
jne
adcb
mov
push
adc
popa
daa
mov
or
cmp
xchg
clc
sahf
shll
sti
data16
notl
testb
loope
out
nop
test
jecxz
push
or
jb
cltd
mov
pop
push
sbb
pushl
lods
and
or
insl
pop
cld
arpl
or
out
fisttps
aam
cmp
xlat
mov
lea
push
push
shl
arpl
cld
jbe
idivl
pop
xlat
hlt
movsl
rolb
jmp
inc
adc
idiv
lret
or
imul
fwait
cmp
inc
adc
sarb
mov
mov
iret
mov
in
sub
cs
xor
adc
xor
xchg
inc
std
iret
mov
mov
pop
mov
mov
inc
cld
cmpsb
xlat
sbb
inc
and
inc
jo
test
sti
inc
mov
sti
fdivrl
jbe
mov
add
pop
xchg
mov
insl
adc
pop
push
sbb
pop
mov
sarb
outsl
sbb
aaa
mov
or
push
mov
pop
in
loopne
aad
insb
jne
add
push
mov
mov
adc
pop
cmpsb
in
sub
cmp
xlat
pop
lretw
sti
adc
push
mulb
sub
rcl
cmp
mov
sbb
mov
add
notb
cli
movhps
mov
rolb
cmp
imul
jecxz
lahf
aad
xor
div
sbb
ljmp
and
sub
fs
sub
pop
hlt
xor
cmpsb
sbb
enter
jns
popa
lahf
sbb
add
fistpll
add
lahf
in
pop
adc
in
test
jns
jg
aam
rcrb
adc
cs
fisubl
sbb
inc
cmp
xchg
mov
adc
and
addl
imul
add
dec
mov
cmc
inc
cmc
bound
or
pop
fsubr
sub
addr16
int
in
icebp
mov
or
stos
imul
loope
int
adc
sub
push
fisubrl
jge
inc
dec
in
mov
adc
mov
movsb
sbb
outsl
sub
das
lods
ja
test
push
push
and
int3
lret
xchg
sub
jmp
lock
aas
dec
in
test
rorb
jnp
test
mov
ffree
adc
xor
flds
jg
icebp
mov
dec
sbb
sti
repnz
mov
adcl
movsb
lahf
cltd
cmp
mov
cld
mov
push
loope
rol
xchg
sub
vpsubw
dec
jnp
ds
jl
int
outsb
push
xchg
adc
xchg
lahf
pop
sub
sub
cmpl
icebp
popa
cmp
enter
xchg
movsl
pop
cmp
mov
sub
push
add
cmpsl
mov
xchg
aaa
sarl
pop
lock
dec
cld
leave
aad
in
sub
call
push
in
mov
pop
dec
addr16
xor
arpl
popf
sub
cmc
adc
cwtl
mov
mov
dec
popa
js
cmp
shll
mov
inc
loope
jmp
push
movb
shl
inc
rcll
xor
pop
jbe
stos
mov
inc
and
cmp
and
mov
aad
xor
fs
hlt
rcrl
aam
fs
jge
out
notl
cmp
xchg
and
jl
xchg
std
xor
mov
inc
cmpsl
lock
into
mov
leave
rcr
emms
pop
add
pop
rorb
sub
and
push
dec
outsl
inc
jge
stc
mov
pop
mov
int
aaa
out
mov
loope
aaa
cmp
shlb
sub
test
cmc
xchg
jle
jecxz
mov
leave
fnstenv
std
ficoml
jecxz
insl
lea
jle
xchg
iret
arpl
pop
ret
jb
push
sarl
adc
clc
shlb
jecxz
push
pop
loopne
mov
mov
or
xchg
mov
mov
cmp
xchg
dec
mov
push
mov
xchg
aam
call
jns
iret
and
or
leave
xchg
leave
insl
testl
or
mov
repz
cmc
fstl
lahf
aad
fcomps
icebp
push
push
or
sub
mov
test
mov
cmp
arpl
sub
shlb
cltd
shrd
push
imul
mov
shl
sbb
lahf
es
inc
rcll
or
ljmp
xchg
mov
inc
pusha
xor
lahf
repnz
cmpl
aaa
push
fsub
insl
push
cmp
mov
fists
stos
stc
or
pushf
shl
xchg
addr16
int
mov
rcrl
mov
jg
and
pop
ror
imul
rcll
xchg
out
push
sbb
imul
insl
adc
add
movsl
mov
sarl
and
stc
mov
jns
pop
scas
adc
cmp
cmp
cmp
test
enter
mov
mov
scas
cmpsb
mov
std
mov
cmpsl
test
push
pop
push
mov
je
pop
addr16
hlt
sbb
psllq
cli
aaa
rorb
add
inc
rcr
adc
inc
fisubrl
rcll
cli
cli
clc
movsb
les
fsts
push
add
dec
xor
xor
mov
lock
xor
sbb
loop
inc
rcrl
push
sahf
pop
xchg
imul
cmp
dec
mov
rclb
icebp
lds
dec
jp
cwtl
xor
hlt
test
xor
aaa
mov
sub
dec
mov
loopne
xor
sbb
push
pop
ret
into
add
cmp
sub
xor
stos
dec
subl
repnz
jmp
push
jecxz
mov
shlb
add
cltd
jge
mov
lock
fucomp
adc
pop
adc
add
push
into
mov
cli
or
gs
iret
jle
lods
fneni(8087
fnstsw
lcall
hlt
sbb
inc
into
shlb
iret
push
add
loopne
sbb
mov
pop
divb
repnz
mov
imul
sbb
loopne
adcl
fisubrl
jnp
mov
imul
pop
sbb
sbb
jne
rorl
fsubl
push
ds
dec
insb
or
cwtl
xchg
shlb
xchg
clc
stos
aad
pop
fimull
addl
add
pop
dec
lea
push
jge
mov
imul
push
mov
test
lea
cmp
mov
cmp
ljmp
repz
sub
mov
sub
mov
xchg
cld
jecxz
cmc
jno
ficompl
movl
rorl
cmp
inc
inc
sub
pop
cmp
mov
fsts
lock
or
cmpsb
ficomps
test
fldl
xchg
jo
loopne
test
sub
dec
popf
xor
sarb
push
test
aam
add
shrl
mov
int
fcomip
dec
mov
loope
or
mov
jbe
int
aas
pop
sub
push
fcmovnb
aas
xchg
adc
jb
mov
pop
xor
loopne
into
push
dec
sub
movsl
stc
movsl
int
icebp
cmc
push
in
fcomip
aad
lds
outsb
push
cs
addr16
and
inc
adc
in
or
iret
rclb
xchg
cmpsb
adc
scas
xchg
fisubl
mov
xor
pop
xchg
jae
push
fidivl
rcrl
je
push
xchg
lret
stos
fisubrl
cmp
insl
lea
lock
sbb
movsb
loope
or
inc
rcll
mov
orb
pop
jne
sbb
xchg
cmp
pop
mov
mov
call
ficoml
int
dec
mov
insb
lcall
push
or
mov
mov
adc
aad
popa
lahf
adc
mov
enter
jns
pop
cmpxchg
pop
rol
inc
mov
add
xor
add
sbb
shr
pop
xchg
test
je
jne
imul
repnz
dec
mov
or
ficomps
fstpl
xchg
xchg
or
or
pop
sbb
out
test
fisubl
cltd
adc
dec
pop
dec
dec
xchg
and
add
movsl
inc
push
lods
aam
inc
mov
mov
shl
fwait
jne
clc
sbb
dec
pop
cmc
and
fidivl
jae
mov
xor
inc
add
js
lock
xor
or
mov
test
dec
lods
rol
es
xchg
fidivrs
shlb
cmp
test
pushf
clc
rorl
repz
daa
sbb
sti
addl
stc
gs
fildll
rcr
scas
mov
repz
xchg
cld
xchg
fisubs
sub
dec
sbb
cld
lahf
mov
cmpsb
lods
leave
es
add
xor
ds
xchg
gs
shrl
test
mov
adc
or
mov
aam
popa
cli
pop
mull
popa
jbe
inc
int3
adc
into
push
dec
dec
jb
fcmovu
inc
xor
test
enter
xor
and
xchg
subb
inc
adc
fisubrl
flds
xchg
test
mov
pop
xor
and
divl
andb
lods
pushf
cwtl
jae
sbb
loope
pop
jnp
mov
mov
pop
jnp
nopl
shl
aad
rolb
dec
clc
jnp
sub
test
mull
push
mov
cmp
rdpmc
movsl
std
mov
loopne
pop
inc
xchg
mov
jecxz
mull
iret
cmp
inc
dec
cwtl
in
or
mov
add
ss
imul
cli
pop
sbb
pop
fiadds
sbb
insl
mov
ds
add
adc
imul
inc
ja
out
dec
lret
push
sbb
push
push
rolb
sbb
lock
scas
jae
fldt
cmp
and
nop
push
push
loope
jae
xchg
repz
and
pop
in
call
data16
out
add
divl
push
addr16
xor
cmc
push
std
js
mov
int3
fnstsw
lret
mov
ds
cmp
mov
xor
fstl
fcmovu
adc
stos
aam
rclb
adc
lret
out
and
xor
mov
rclb
call
add
negl
cmp
lcall
lods
js
lret
dec
push
mov
call
inc
fucomi
cmpsl
cmp
sbb
fwait
in
ss
shlb
push
popa
sbb
fmul
je
cmp
daa
xlat
jmp
mov
hlt
test
xor
xlat
adc
fs
mull
dec
lock
mov
popa
lock
std
fstps
test
mov
push
xlat
and
xor
push
jne
outsl
cmp
mov
cld
push
aad
and
push
int3
test
fwait
sarb
lea
and
lret
aas
int
ja
movsl
cmp
std
loopne
sbb
call
jbe
sbb
mov
fs
or
pop
push
hlt
mov
rorb
mov
xor
push
das
or
mov
xlat
xchg
daa
pop
scas
rcrl
bound
push
test
dec
sbb
lahf
cmp
lea
cltd
push
aas
cmp
xor
add
mov
inc
dec
pop
iret
sbb
adc
mov
mov
or
in
mov
mov
shrb
dec
dec
jae
loope
mov
mov
outsl
pop
mov
mov
inc
shll
aad
std
iret
mov
popa
xor
ljmp
shrl
and
xchg
leave
adc
push
adc
xchg
out
rolb
fimull
shll
xchg
inc
pop
stos
inc
mov
adc
data16
adc
cmp
shrb
add
daa
rcrl
mov
movsb
stos
fidivl
jne
test
lock
call
xor
aas
mov
in
test
mov
inc
dec
xchg
jmp
in
rorl
fidivl
sbb
cmpsb
loope
jmp
test
ret
sarb
push
jle
and
lahf
insl
loopne
jns
or
dec
cmpl
xchg
push
mov
arpl
or
push
pop
fistps
mov
xchg
mov
neg
sbb
sbb
or
pop
sbb
dec
hlt
inc
lahf
mov
mov
lahf
cld
dec
mov
adc
mov
mov
out
sbb
or
lret
fcmovb
and
sbb
mov
xchg
cmp
fisttpl
stc
and
int3
push
popa
mov
or
ror
mov
sbb
jmp
push
sub
shrb
cmc
xor
add
fnstsw
jne
insl
cltd
test
jg
jl
mov
mov
sub
dec
or
xchg
std
or
mov
xchg
sbb
int
sbbl
pop
and
mov
jns
out
sbb
xchg
mov
cmp
hlt
subl
ret
cmpl
xorl
add
aad
popf
pop
dec
mov
nop
sarb
push
xchg
stos
ljmp
sub
adc
movb
cmpsb
xchg
in
inc
inc
adc
fwait
push
movsb
clc
out
out
scas
mov
pop
jl
sbb
ret
jg
mov
fisubl
aam
xchg
pop
stos
adc
adc
and
jbe
and
push
into
popf
orb
fisttps
push
mov
fdiv
pop
push
adc
nop
xchg
jle
mov
xchg
mov
push
leave
repz
inc
push
fwait
subl
lret
lahf
push
ljmp
fcomi
les
pop
jns
xchg
mov
iret
inc
push
mov
fnstcw
dec
std
cmp
sub
mov
push
shll
lcall
mov
adc
icebp
repnz
aaa
sbb
mov
lahf
mov
sbb
mov
and
sar
jb
mov
jge
push
popf
aas
cmp
loope
push
inc
adc
out
and
rcr
inc
jne
imull
lahf
sub
jg
mov
es
cmp
jnp
inc
add
jecxz
mov
dec
pop
cmpl
xlat
xor
popa
push
mov
out
lahf
push
and
pop
cmpsb
inc
jo
xchg
in
xchg
xor
insl
dec
dec
roll
idivb
imul
es
hlt
lahf
ja
mov
sbb
jg
movsb
lea
addl
jg
test
pop
lods
xchg
xchg
sub
or
shl
je
mov
icebp
insl
pop
inc
cmc
push
fistl
jne
movsb
cmc
inc
int3
jle
jnp
sti
inc
inc
lock
add
cmpsw
sub
inc
and
jle
sub
sarb
add
xchg
jecxz
shrd
movsb
mov
pop
push
pop
notl
mov
enter
mov
into
stc
pusha
xor
cltd
cli
loopne
addr16
ret
fcmovu
loope,pn
jne
inc
fcmovu
lods
sub
add
sub
pop
in
add
roll
xchg
inc
xorl
mov
adc
dec
lahf
out
cmp
ret
iret
int3
or
mov
or
jecxz
sti
push
outsl
xchg
lret
cltd
lock
adc
inc
cmpsb
jae
outsb
pop
fsubrl
add
lds
daa
das
or
adc
inc
sub
popa
xchg
jb
push
scas
in
dec
dec
fldl
push
ljmp
addr16
add
and
or
loope
pop
sbb
sbb
ret
out
mov
xor
stc
xor
xchg
fcoml
sti
pushf
jp
fwait
shrb
xor
lcall
xchg
lods
repz
stos
pop
je
push
push
test
in
mov
adc
lret
jo
aad
mov
mov
dec
sbb
xor
mov
inc
imul
nop
jl
mov
cmp
and
xor
rcll
push
rcl
stos
pop
mov
pop
int
adc
push
xchg
sarl
fwait
sbb
cltd
gs
lds
mov
roll
add
jge
rep
lock
xchg
insl
cltd
add
pop
push
xchg
sahf
out
mov
punpckhwd
lods
cwtl
sbb
mov
inc
out
xlat
sbb
cmp
rorb
pop
pop
lea
jl
aad
sar
ja
inc
pop
inc
lcall
sbb
sbb
or
and
sub
hlt
adc
rcr
mov
pop
sbb
bound
lgs
mov
mov
xchg
mov
fcmovne
lret
mov
mov
orl
rcr
sub
mov
data16
inc
fdivr
in
arpl
sbb
push
xor
mov
addr16
or
xchg
in
shlb
iret
into
cwtl
cld
jae
and
popa
add
scas
mov
jno
jbe
in
add
call
jmp
push
leave
loopne
xlat
jae
neg
lret
cs
mov
int
xor
fimull
pop
outsb
inc
pop
jge
jbe
ret
adc
inc
adc
into
fnstenv
ret
adc
mov
xlat
scas
pushf
jno
in
data16
int
ja
pop
sub
shll
fld
mov
push
daa
pop
shlb
push
ficompl
jbe
in
xlat
leave
jmp
call
mov
xchg
lret
dec
testb
xchg
loopne
das
inc
daa
mov
rcl
imul
daa
adc
inc
mov
add
cmp
fs
sar
lods
dec
aaa
mov
sub
popa
int3
lahf
stc
xchg
xor
inc
arpl
mov
jmp
lret
push
dec
xor
rcll
std
in
bound
jp
xchg
push
dec
push
push
push
fwait
stc
jmp
int3
cmp
mov
nop
and
cmp
mov
icebp
enter
adc
rorl
sarb
enter
insb
out
push
xor
cmc
mov
pop
push
imul
sbb
mov
sbb
mov
push
mov
shll
pop
fs
ss
vpsubw
shrb
pop
xor
aad
sbb
mov
and
cmp
std
stc
mov
pop
cltd
pop
daa
pop
fidivl
and
pop
out
mov
mov
xchg
addb
adc
sbb
mov
cli
dec
int
mov
adc
add
add
inc
das
or
jmp
adcl
push
mov
inc
fistl
and
xor
aad
imul
mov
xor
mov
xor
push
outsl
shlb
sti
fwait
cmp
lcall
addl
mov
mov
pop
jmp
rorb
int3
das
testl
sub
into
cmp
addb
mov
mov
lahf
sbb
fstpl
pop
xor
sbb
popf
decl
push
pop
ds
stc
sub
cmpsb
push
daa
fistpl
adc
aaa
push
jne
repz
addr16
jl
add
mov
aad
xor
sbb
imul
jbe
repnz
ljmp
fsts
mov
inc
sub
cmp
adc
mov
pop
lret
sbb
popa
je
int3
rcrl
pop
jmp
cld
inc
xchg
idivl
not
sbb
mov
cmp
inc
push
sbb
movsb
pop
xor
lret
outsl
xorb
cmpsl
mov
inc
iret
xor
inc
push
test
pop
sub
cmp
lods
jne
inc
bound
jmp
in
shll
insb
sub
jne
inc
cmp
lcall
rcrl
mov
insb
sbb
inc
mov
std
es
fmuls
dec
cli
outsb
and
inc
shlb
outsl
jge
or
stos
ret
mov
adc
ficoml
enter
into
jmp
sbb
xor
dec
repz
leave
lods
dec
in
mov
arpl
xchg
sub
es
movsl
orl
or
lock
dec
and
sub
push
test
or
out
insb
imul
or
mov
enter
std
push
xchg
jge
mov
jp
push
div
fnstsw
ds
scas
sti
aad
inc
adc
xor
int
push
push
pop
shll
mov
loop
shrb
mov
mov
out
stc
lahf
push
andb
fldl
cwtl
loop
sbb
out
sub
pop
sub
add
int3
aas
loop
jl
int3
sub
imul
xchg
jno
js
cwtl
test
fldenv
mov
popa
push
in
or
shlb
loope
rcr
or
inc
stc
sahf
call
movsb
fldt
out
sbbl
sbb
das
addl
ret
xor
cmp
imul
or
xor
es
xchg
lahf
jmp
sbb
cmp
test
int
cmp
lea
jge
push
lret
mov
rcrl
xchg
rcrl
and
mov
int3
xchg
jnp
and
dec
sbb
mov
sbb
mov
push
pop
jge
cmpsb
jbe
mov
push
mov
inc
pusha
lret
outsl
fsubrl
mov
inc
test
xchg
scas
mov
xchg
sbb
xor
test
aaa
and
inc
rorl
mov
insb
xchg
mov
and
dec
rolb
pop
xchg
je
test
push
or
aaa
sbb
fcom
push
ja
push
dec
mov
sub
dec
negb
mov
cmp
test
aaa
dec
popa
aaa
test
rcll
lods
leave
sbb
mov
xchg
mov
fldenv
add
sub
or
pop
sub
mov
adc
out
nop
sub
imul
xor
shrb
shrb
out
or
adc
adc
fsubrs
sarb
pop
stos
and
xchg
fimull
inc
les
sbb
rol
shll
mov
stc
mov
jb
lock
inc
insl
pop
fucomi
rcll
pop
dec
aas
jnp
push
cmp
xor
pop
push
mov
mov
jnp
xor
mov
cmpsl
inc
int3
nop
out
mov
mov
and
lods
xchg
in
int3
int
push
rcrb
cld
adc
stc
test
mov
repz
icebp
mov
ffree
inc
add
push
rcll
inc
fcomip
lock
in
sub
dec
mov
mov
push
shll
aam
mov
sbb
sbb
stos
femms
or
test
push
push
or
or
and
push
imul
mov
mov
sub
pop
popa
dec
inc
outsl
lods
std
call
mov
mov
jnp
lret
mov
aam
aam
pop
sbb
jl
push
mov
dec
mov
adc
jne
xchg
dec
add
sub
push
gs
jp
add
lds
inc
btc
adc
mov
adc
cmpps
adc
cli
adc
xchg
jb
mov
push
mov
push
jns
call
inc
nop
mov
cli
test
jmp
lds
xchg
aad
ror
xchg
fbld
xchg
add
aas
repz
loopne
jo
push
sub
push
stos
push
push
adc
cwtl
inc
sahf
pushf
movzbw
mov
cmp
and
bt
test
add
lea
jmp
mov
movw
lea
mov
movl
jmp
dec
cmp
jb
loopne
sbb
mov
pop
in
mov
cmp
fnsave
loopne
daa
sahf
fwait
cmp
push
jb
mov
xchg
inc
lea
or
dec
pop
jl
in
sbb
imul
adc
icebp
mov
add
mov
xor
dec
leave
fs
push
lock
aas
pop
fildll
push
pop
sbb
fistpl
pop
mov
adc
es
jmp
cmc
bsr
push
mov
add
jle
pusha
test
cmp
add
call
pushf
mov
inc
pushf
pusha
adc
lea
pusha
jmp
stos
pusha
pushf
movw
lea
jmp
movsb
or
rolb
jmp
adc
cmpsl
jns
rcrl
sbb
xchg
and
sbb
sub
xor
inc
test
cmc
fisttpll
push
mov
dec
repnz
int3
cs
icebp
stos
aas
pop
inc
loop
out
or
xchg
lret
adc
cli
xchg
mov
inc
test
adc
and
and
lcall
pop
xchg
stos
iret
dec
popa
cmp
jbe
inc
les
lret
imul
mov
scas
push
adc
pandn
je
or
inc
and
pop
inc
lahf
or
jmp
adc
cs
sahf
and
jge
sahf
repz
icebp
adc
xchg
and
mov
jno
mov
mov
jbe
mov
lret
sbb
push
mov
mov
pop
or
iret
call
lock
sbb
and
push
aas
jbe
push
mov
push
leave
dec
push
push
sub
loopne
arpl
push
adc
adc
mov
cmc
shrd
add
mov
bswap
mov
jmp
popf
in
and
out
jo
mov
test
ljmp
mov
cmpl
mov
pop
lret
decb
bound
add
adc
xchg
or
push
mov
imul
leave
adc
aam
cs
pop
loopew
bound
test
aas
or
jns
or
or
adc
mov
and
jb
pushf
pushf
mov
lea
jmp
test
in
int3
cmpsl
xor
pop
ds
mov
aam
adc
insb
push
arpl
or
test
sarb
sub
ret
mov
mov
sbb
cmp
mov
jne
add
adc
pop
xor
push
dec
clc
push
or
ja
les
dec
in
dec
sub
xor
push
mov
jb
sbb
repz
add
xchg
ss
lahf
jecxz
jg
adc
aas
mov
jb
sti
cmp
fists
bswap
sbb
push
lea
jne
call
test
jp
sub
push
cmp
mov
cmp
pusha
push
call
sub
rol
mov
lea
sar
add
pusha
lea
mov
call
out
stc
aad
push
loope
sub
xor
cmp
jmp
sbb
jecxz
push
in
cwtl
cmp
fists
subl
and
mov
xor
mov
xor
adc
sbb
and
lods
lahf
inc
mov
test
push
mov
xchg
lock
xchg
pop
call
push
adc
aam
push
adc
ja
divb
enter
mov
push
mov
xor
push
mov
xor
cmp
or
xor
mov
sub
icebp
push
sub
shlb
popa
insl
cli
push
inc
gs
dec
stos
inc
insl
ror
aaa
and
or
outsl
call
cli
je
pop
xchg
adc
stos
jl
push
jo
jne
lock
xchg
xor
adc
dec
mov
cmp
adc
push
mov
push
or
call
out
sahf
shrb
lods
pushf
fs
rcll
jg
cmpsl
or
jp
outsb
out
loopne
in
ds
push
or
push
cmp
fnsave
or
dec
push
lock
xlat
insl
fcom
mov
or
aad
sbbl
lods
arpl
cltd
mov
or
fcmovu
or
rcl
testl
dec
add
les
leave
or
push
adc
movsb
inc
popa
inc
jo
cmp
scas
dec
mov
dec
lods
lea
shll
mov
sti
arpl
outsb
shll
sbb
pop
xlat
jge
std
icebp
inc
or
and
pop
dec
add
xchg
in
lahf
addl
lret
out
sbbb
adc
add
test
xchg
loope
and
int3
jmp
xor
xlat
pop
pop
in
pop
pop
test
push
cs
setl
bswap
pop
bswap
lea
pop
jmp
push
pushf
mov
push
push
lea
jmp
test
call
push
pushf
xchg
pushf
dec
test
shl
call
call
mov
pushf
lea
jmp
xchg
fimull
das
or
mov
mov
andb
mov
data16
xorl
cwtl
ds
loope
fwait
icebp
fwait
pop
jo
push
mov
scas
push
gs
cwtl
mov
inc
andl
xchg
push
pop
push
mov
dec
xchg
outsl
dec
subb
jge
and
ret
inc
cmp
cmp
inc
dec
clc
sbb
xor
mov
jnp
sti
fcoms
or
setb
les
stc
test
sub
jo
pushl
bt
cmp
jmp
or
es
icebp
pop
je
test
or
pusha
or
or
lret
mov
jno
mov
ja
pop
cmp
inc
js
sti
lea
adc
xchg
push
pusha
pop
cmp
ret
fdivrl
mov
test
jmp
aaa
and
addb
mov
mov
sbbb
push
jecxz
cwtl
xlat
add
cwtl
scas
adc
push
adc
inc
popaw
dec
arpl
xlat
loopne
gs
mov
filds
add
iret
push
outsl
push
mov
mov
lds
addr16
mov
nop
in
subl
xchg
out
cltd
repnz
ret
int
je
fstpt
or
add
stc
jg
cli
leave
jnp
stos
mov
push
cmp
dec
imul
mov
push
pop
push
adc
pusha
pop
pop
cwtl
push
adc
push
adc
test
cmpsl
cmpsl
and
fidivrs
stos
inc
and
scas
jp
ret
cmpsb
dec
sub
shlb
imul
movsb
jne
sub
sub
aad
or
sub
mov
and
dec
and
bound
repz
sbb
fnstenv
outsb
xor
in
sti
fldenv
add
xchg
mov
sbb
lds
insl
lret
cmc
lods
xchg
add
adc
dec
or
mov
and
or
stos
ljmp
push
adc
adc
shrl
jae
shufps
xor
pop
mov
stc
shlb
mov
enter
cmp
dec
jecxz
mov
out
in
and
in
xchg
cwtl
xor
pop
int
push
js
mov
push
cmp
repnz
mov
sahf
xor
popa
test
ds
or
dec
bsf
inc
pusha
push
adc
ja
loop
enter
enter
adcl
cmp
lea
jne
jns
iret
and
mov
inc
arpl
and
xor
push
xor
fxam
insb
jmp
or
out
bound
add
adc
add
adc
cli
jge
xor
cltd
sti
pop
dec
test
mov
cmpsb
shrl
mov
jb
leave
mov
call
jmp
outsb
and
mov
pop
inc
loop
jmp
das
arpl
out
popa
loop
adc
les
lret
les
push
and
pushf
clc
push
add
pusha
pushf
pushf
lea
jmp
bt
pushf
test
cmpb
pushf
jmp
mov
pop
dec
int3
push
jle
mov
subb
mov
and
lret
outsl
insl
shlb
mov
cmp
xor
mov
jne
pop
or
pop
push
mov
push
stos
xor
xchg
cmpsl
or
adc
mov
test
push
loope
lea
imul
pusha
cld
mov
push
cmp
aad
pop
sub
mov
and
add
into
or
dec
cld
ret
adc
neg
jge
shll
cmp
xchg
jo
notl
repz
jp
notb
push
or
jnp
rorl
inc
push
push
dec
mov
or
sub
sbb
adc
pop
or
stc
ret
jg
fnstenv
add
in
int3
add
mov
cmpsb
ret
out
in
cs
insb
scas
mov
adc
sbb
adc
rorl
jmp
lret
bts
mov
cmp
call
jb
outsb
vpsrad
bound
scas
jnp
jb
notb
call
mov
ret
sti
enter
mov
mov
aas
or
test
xchg
pop
cmpsb
lods
mov
xor
sbb
adc
adc
movsl
sbb
pop
sub
pushf
jno
jl
jne
cmp
push
fs
adc
dec
mov
lods
loop
cmp
jno
push
out
xor
fadds
rol
mov
cmc
popf
leave
xchg
es
jo
jb
push
into
cmpsl
sbb
pop
pusha
loope
pushf
push
sbbl
insb
add
mov
test
iret
mov
mov
shrb
or
sbb
aad
sub
cs
mov
les
adc
cli
dec
mov
cmp
int
inc
aad
mov
jp
fiadds
stc
loopne
xor
cmp
call
out
xor
add
adc
xor
dec
addr16
inc
int3
fnstsw
ret
push
dec
ljmp
std
mov
xor
repz
nop
movl
fisubrl
mov
inc
fcompl
and
adc
cmp
or
inc
jnp
int
cmp
pop
sub
fildll
jmp
ficoms
or
pusha
jmp
call
lea
je
jmp
enter
or
add
or
mov
ss
mov
cmp
mov
jl
cmp
shl
push
out
aas
dec
xchg
push
push
in
mov
imul
lds
stos
jo
adc
add
fdivr
cmp
sub
and
fadd
loope
cmc
loop
add
clc
jle
lret
sbb
gs
push
fstpt
arpl
or
push
repz
leave
pop
stc
je
cmp
je
shlb
into
data16
mov
push
mov
cmp
into
or
lds
dec
mov
and
add
mov
sbb
push
jbe
add
shlb
pop
mov
and
inc
and
mov
and
stc
sahf
and
insb
mov
and
dec
dec
sbb
je
sbb
jb
and
xor
add
add
and
les
add
and
mov
and
mov
and
cmp
and
xchg
mov
and
push
shlb
pushf
mov
and
bt
add
add
xchg
add
and
sbb
repz
arpl
cmc
mov
push
or
inc
lcall
addr16
cmpsl
pop
and
pop
pop
scas
mov
sti
dec
sub
dec
lea
nop
xchg
mov
pop
fidivs
pop
repz
sub
sbb
pop
xor
xchg
sub
sub
and
and
xchg
stos
out
scas
mov
add
movl
arpl
lcall
and
addr16
mov
ljmp
lods
shrb
mov
jg
mov
sbb
dec
loope
mov
ljmp
jg
pop
sbb
xchg
mov
add
orl
popf
xor
enter
aam
sti
fcoml
sub
xchg
cmpsl
loopne
out
loopne
sub
add
gs
movb
jmp
lea
jb
cmp
cmp
call
cltd
aas
jnp
fcmovne
hlt
jmp
mov
push
mov
addr16
and
push
mov
call
sub
iret
mov
inc
shrb
push
push
inc
out
push
leave
call
sbb
imul
and
xchg
push
lods
jb
cmc
pop
lock
xchg
push
pop
call
jmp
mov
int3
pop
aaa
xor
lret
cwtl
xchg
das
and
clc
stc
xor
jo
xchg
mov
sbb
mov
mov
jno
in
in
mov
shr
movsb
icebp
mov
add
orl
adc
mov
and
pusha
lea
jb
test
stc
test
stc
cmp
jmp
pop
and
jmp
mov
cmp
in
fmuls
jge
insb
sbb
fwait
loop
jb
jg
imull
pop
repz
int
int
cmp
cmp
gs
push
jno
adc
ror
sub
jno
mov
sarl
xor
out
and
mov
push
icebp
cltd
xchg
fdivs
rorl
scas
mov
dec
push
jb
jbe
mov
cmp
es
sbb
in
out
xchg
insb
jmp
cltd
data16
mov
add
add
add
mov
add
bt
mov
stc
cmp
test
pushf
pushl
movb
pushf
lea
je
stc
push
pushl
push
add
call
hlt
pop
cmp
cld
push
xor
xor
ljmp
lods
aas
mov
adc
lods
jmp
popf
test
repz
pop
mov
repz
out
loope
jmp
sbbb
jmp
mov
dec
mov
add
xchg
mov
repz
cwtl
inc
mov
push
jne
cmp
stc
mov
xchg
push
popa
pop
pop
rclb
sahf
lahf
push
adc
aas
scas
ja
xchg
int
cmp
inc
movsl
inc
cmpsl
inc
es
cs
sub
imul
lods
adcl
xor
inc
arpl
pop
pop
iret
dec
dec
inc
inc
addl
dec
push
movb
adc
arpl
movb
adc
pushf
push
push
pushl
ret
btc
lea
mov
test
jmp
call
cmc
notl
add
mov
popw
in
mov
out
test
mov
cmpsl
jnp
inc
adc
sahf
sti
ficomps
cld
adc
pop
inc
inc
popa
pop
push
imulb
pop
add
dec
aas
addr16
daa
cmc
sub
lcall
xor
ds
or
inc
sub
mov
ficomps
mov
cltd
cmp
add
mov
daa
or
cmp
dec
movsb
inc
cmpsl
int
jle
out
stos
jo
xchg
mov
xchg
fxsave
mov
imulb
test
inc
dec
and
mov
jno
icebp
mov
mov
add
popf
mov
rcll
cmc
pop
mov
in
scas
arpl
sbb
xor
dec
ja
lds
pop
dec
in
cmp
dec
out
xchg
mov
sbb
test
pop
addr16
fs
arpl
adc
sbb
push
mov
sbb
jecxz
adc
sbb
dec
sbb
cwtl
dec
mov
dec
jp
pusha
inc
cld
rcrb
push
xor
lds
std
icebp
xorb
sub
pop
in
in
fcmovne
dec
push
fidivs
in
hlt
xlat
sbb
dec
xchg
ficompl
aaa
fdiv
mov
inc
sbb
or
inc
aam
jne
arpl
sbb
sbb
std
jmp
mov
inc
lea
cmp
addr16
enter
cmp
ret
xchg
test
movsl
push
adc
xor
cmp
ss
dec
mov
ret
shlb
cmp
jle
mov
xlat
std
and
jno
stos
sbb
psubusw
idivl
iret
push
inc
lcall
push
push
dec
outsl
shll
frstor
push
mov
mov
fwait
je
mov
sarl
inc
lods
outsb
xorl
jb
and
loope
scas
pop
rcl
xchg
jae
mov
xchg
idivl
push
fists
xlat
sbb
lods
sub
mov
loop
out
call
js
xor
push
bound
mov
cs
jne
icebp
arpl
inc
mov
push
dec
dec
ret
lahf
push
ffree
in
icebp
push
inc
mov
mov
sbb
repnz
outsl
mov
arpl
dec
sbbl
movsl
outsb
xlat
and
sarl
mov
rolb
into
int
adc
icebp
loope
sahf
jecxz
pop
add
push
roll
fnsave
push
mov
cmp
push
jp
push
xchg
filds
dec
call
adc
or
xchg
mov
test
xlat
setne
push
mov
loopne
outsb
ja
adc
and
mov
and
testl
cmp
xor
xor
xor
mov
sbb
nop
movw
mov
call
cmp
push
lea
jae
pushf
pusha
cmp
mov
mov
lea
ja
setge
jmp
cmp
push
cmp
push
mov
mov
sarl
mov
cmp
or
adc
andb
add
sbb
mov
cwtl
arpl
fbstp
mov
pop
call
add
cmp
mov
sbbb
inc
xor
mov
test
adc
out
push
sarb
fisttpll
inc
pop
dec
mov
mov
dec
push
adc
insl
insl
cld
call
jne
imul
xchg
or
pcmpgtb
loop
sub
lock
lea
cli
fstpl
sarl
cmpsb
stos
pusha
lds
mov
arpl
int3
jnp
loopne
push
lock
outsb
stos
sbb
sbb
mov
xchg
dec
repnz
sub
iret
dec
ret
push
xor
mov
clc
mov
xchg
mov
lahf
sub
push
push
adc
mov
inc
call
mov
pushf
inc
push
rol
pusha
push
xor
push
dec
pushf
clc
call
xchg
xor
sahf
sbb
dec
test
sub
ret
cmpsl
inc
xchg
test
subb
xlat
es
scas
loop
push
mov
cmpsl
mov
xor
and
dec
outsb
add
rcrl
mov
or
xchg
and
scas
adc
cltd
repz
sub
pop
inc
push
scas
adc
scas
pusha
and
cmpsl
xchg
das
sbb
gs
dec
ss
adc
cwtl
jl
mov
xchg
pop
lahf
push
push
push
adc
js
mov
sahf
xor
clc
jae
xchg
ja
jl
into
xchg
repz
jbe
xor
inc
js
aaa
inc
jns
or
lods
add
ljmp
out
xchg
xor
mov
mov
xor
sahf
dec
cmp
movsb
push
xchg
mov
shrl
mov
add
or
cmp
out
stos
and
jle
cmpsl
stc
in
jns
xchg
insb
mov
jae
sub
mov
daa
out
ljmp
pop
repnz
mov
into
lahf
ss
in
push
sub
pusha
inc
stos
cwtl
cs
adc
je
jg
mov
imul
pop
repz
sbb
enter
mov
mov
sarl
jp
insb
push
cld
push
in
lods
subl
clc
cli
sbb
sbb
mov
cmp
popf
push
cltd
leave
xchg
or
adc
hlt
xchg
xor
push
inc
lods
cmp
inc
adc
mov
lcall
addr16
lods
fldl
or
sti
aas
fwait
mov
mov
lods
add
xchg
push
or
scas
ja
pop
xor
cld
dec
adc
js
je
cmp
fdivrs
mov
dec
sbb
fsubrs
adc
scas
pop
pop
les
xor
ja
shrb
add
pop
fistps
rcll
adc
mov
mov
cmp
lahf
ss
les
ret
mov
add
push
cmp
popa
push
jnp
repz
adcl
repnz
cmp
sahf
popl
add
or
xor
cmp
mov
mov
dec
xor
xchg
dec
daa
sbb
cltd
push
mov
addr16
jne
cmpsb
jne
dec
inc
lds
and
mov
mov
mov
dec
lret
mov
testl
sbb
fwait
pop
pushf
fists
push
adc
jecxz
sub
enter
setl
mov
pushl
jmp
notb
enter
sahf
je
sti
movsl
enter
inc
sub
insl
sbb
lods
mov
mov
outsl
lret
mov
and
push
push
mov
scas
mov
mov
mov
mov
adc
sub
nop
cmp
lods
fs
and
or
push
sub
addr16
sub
jp
cmp
ret
outsb
push
in
sub
popa
out
adc
enter
add
pop
push
stc
incl
js
dec
xchg
inc
mov
inc
sub
and
js
fs
insl
adc
nop
add
mov
inc
jmp
ds
lahf
lret
imul
mov
pop
push
push
add
movsl
loop
push
push
out
enter
push
cmp
jo
out
jb
das
and
cmp
cmp
mov
pop
cld
push
mov
data16
sub
dec
gs
xchg
lods
sub
jl
mov
inc
mov
addb
imulb
push
adc
mov
sub
xor
or
add
test
in
and
dec
jle
lea
das
test
outsb
repnz
popl
xchg
cmpl
xchg
mov
jbe
pop
nop
sub
cmp
out
mov
xchg
xlat
insl
gs
outsl
pop
js
movsl
out
mov
rclb
jmp
int
or
fisttpll
mov
in
pop
inc
and
xor
jl
out
xchg
and
pop
push
adc
push
adc
test
cmp
call
shl
lds
in
add
pop
subb
add
dec
mov
add
pushf
add
out
push
mov
push
push
bound
cmc
mov
hlt
divl
mov
std
push
mov
and
call
repnz
xchg
mov
repz
pop
mov
gs
cmp
fisubrl
mov
mov
bound
leave
mov
and
pusha
shll
popa
sub
and
push
adc
test
rol
call
jmp
lcall
sbbb
pushf
jne
js
cli
adc
cmc
rcll
and
cmp
test
mov
sbb
mov
push
cmp
mov
loopne
inc
gs
into
xor
sub
movsl
enter
shll
insl
jb
jp
or
xchg
jb
enter
xchg
insl
pmaddwd
add
adcb
jge
repnz
mov
sub
or
addr16
sub
mov
call
dec
push
adc
bound
stos
pushf
movw
pushf
lea
jmp
jmp
ret
mov
mov
mov
cmp
fdivs
inc
repnz
or
jecxz
jb
lock
andl
repnz
cmp
sbb
xchg
out
inc
stos
push
mov
je
mov
pop
mov
mov
xlat
xor
inc
stos
pushf
xchg
jp
or
xchg
push
int3
insl
jo
mov
les
push
jl
lret
and
mov
push
lock
inc
or
mov
repnz
rcll
push
sbb
pop
push
push
adc
div
cmc
adc
rcll
int
cwtl
clc
adc
xchg
jne
jge
js
shrb
sbb
cmp
or
mov
inc
cmpsb
jle
and
fs
mov
faddl
testl
mov
cmpsl
cmpl
insb
movsl
lea
repz
xchg
shl
lret
mov
inc
lods
jl
repz
sub
sub
cmp
mov
sub
xchg
enter
stos
sti
or
pop
cmp
jle
repz
xor
mov
adc
adc
dec
pop
repnz
sub
stc
scas
je
notb
std
adc
jns
xchg
lods
lods
add
sahf
inc
fidivl
arpl
mov
aam
call
sub
mov
jge
jecxz
jge
aam
je
inc
lods
leave
iret
in
leave
in
sahf
add
or
xchg
cmp
movb
addb
addr16
jmp
lods
pop
ror
push
and
sub
mov
push
mov
mov
cld
popa
and
subb
icebp
loop
pop
add
insl
dec
adcl
aad
sbb
ret
jp
sub
mov
cmp
dec
mov
in
into
sbb
mov
arpl
subl
mov
mov
push
pop
xchg
xchg
pop
dec
imul
cmp
imul
daa
nop
scas
fildl
and
faddl
movsl
out
cmpsl
pop
inc
inc
sub
inc
mov
dec
push
into
mov
scas
push
adc
ds
sub
pop
xor
loope
mov
inc
mov
dec
test
xor
sub
mov
icebp
sbb
jle
enter
ja
ja
push
fldcw
xchg
nop
and
sti
inc
into
and
inc
mov
dec
push
je
pop
dec
cs
pop
pop
clc
push
dec
dec
outsl
pusha
dec
enter
pop
mov
pop
outsb
stos
sub
jmp
cmp
jns
fistpll
ljmp
pop
xchg
fistl
in
push
adc
mov
mov
push
mov
or
mov
loopne
out
cmp
ds
push
mov
stc
adc
xchg
jbe
pop
jae
in
test
in
out
sub
mov
mov
cmp
loopne
and
enterw
mov
nop
aad
das
or
adc
cld
dec
in
and
movsb
or
mov
cmc
jecxz
sbb
fsin
jecxz
jb
mov
dec
and
gs
lcall
dec
mov
xchg
cli
mov
push
adc
hlt
mov
repz
aaa
jbe
xor
dec
popf
shl
or
xchg
or
call
stc
test
dec
dec
in
and
cli
and
dec
and
dec
jmp
cltd
mov
mov
xor
jnp
pop
stc
xor
dec
sti
inc
xchg
testb
shll
fwait
iret
testl
scas
imul
sbb
push
sub
fs
mov
fs
adc
add
push
jae
outsb
xor
cmp
push
cwtl
test
ficoml
pop
sbb
sbb
outsb
push
sahf
lcall
sub
mov
xchg
clc
pushf
jbe
icebp
adc
into
adc
lock
pop
sub
enter
inc
push
aam
ret
pop
add
pop
sbb
orb
mov
popa
fxch
pop
lahf
jno
aam
arpl
or
and
andb
mov
aas
rorb
xchg
dec
or
add
lock
jb
xchg
mov
push
adc
in
push
adc
pop
fucomi
fnstsw
adc
insb
push
arpl
arpl
xor
fs
insb
add
xchg
adc
mov
sub
and
sbb
popf
jl
jg
jbe
mov
push
pop
cs
arpl
or
jo
pop
sbb
aad
cmpsl
rcrl
pop
fmul
out
jmp
test
ljmp
jmp
jecxz
iret
lods
repz
and
push
pop
jb
in
adc
adc
push
push
pop
in
xchg
push
adc
cmp
mov
dec
sbbb
cltd
jle
ljmp
stc
push
xchg
mov
jg
ljmp
push
adc
jge
push
mov
in
jp
push
mov
repnz
ficoml
inc
in
mov
negl
test
das
sbb
icebp
push
pushf
fstpt
je
daa
xor
scas
jge
rol
inc
popa
test
mov
fstpt
outsl
pushf
xchg
in
jmp
pop
jl
jnp
and
or
jno
sti
mov
jle
cld
cmp
notl
icebp
xlat
pop
filds
jg
xor
int3
add
sahf
jge
lret
xchg
jns
lcall
sub
add
decl
js
int
sbb
adc
loopne
sbb
aas
cmp
mov
in
sbb
and
cli
inc
aaa
inc
push
into
inc
cmp
mov
cmpb
outsl
call
int
cld
adc
lcall
jae
jbe
repnz
mov
jg
push
adc
fmull
fisubs
lret
jmp
adc
inc
fidivrs
pop
mov
pop
cmp
sti
cmp
loop
data16
icebp
fistl
push
xor
das
or
rcl
lods
push
loop
sar
vmovdqu
mov
mov
add
mov
leave
gs
inc
stc
out
mov
shrb
cmp
push
cmp
xchg
outsb
dec
mov
xchg
ret
pcmpeqb
shll
mov
jp
stc
mov
aad
adc
les
into
pop
mov
push
or
enter
inc
xchg
int3
das
dec
mov
push
mov
ss
push
inc
repnz
dec
movsb
add
pop
pop
mov
dec
out
and
xor
mov
js
mov
pop
inc
out
jns,pt
lret
or
pushf
inc
add
divb
sub
das
sub
xchg
out
jge
mov
pop
cld
jle
scas
xor
das
jno
js
shll
loop
mov
add
mov
or
mov
jl
xchg
nop
xor
sbb
mov
and
shrl
sub
xchg
sbb
mov
add
adc
xchg
sbb
mov
not
and
dec
push
dec
sub
sub
or
in
test
addr16
aad
imull
subl
mov
dec
scas
jp
stos
add
pop
fwait
pmaddwd
lcall
mov
cmc
mov
fwait
out
enter
gs
js
out
mov
mov
sarl
js
inc
cmp
xor
test
fwait
movsl
in
push
mov
aam
push
mov
adc
sbb
lcall
jnp
mov
mov
mov
pop
add
jno
xchg
rcrl
dec
cmpsb
jp
sub
jl
arpl
into
or
jge
dec
pcmpeqd
xlat
jbe
cmpsl
movsl
insb
inc
dec
jns
push
sahf
inc
xor
loope
push
scas
sub
fadds
orl
lret
or
dec
leave
xchg
xor
add
out
nop
movsb
sbb
xchg
xlat
push
push
adc
jbe
icebp
xchg
ljmp
jns
xor
add
cmp
in
aad
or
pop
mov
push
test
mov
lods
mov
cmp
aas
jmp
cltd
dec
jnp
test
sbb
sub
inc
gs
dec
cmpsl
ss
cmc
sbb
pop
cli
in
stos
xchg
add
fnsave
xchg
sub
mov
jge
and
inc
mov
bswap
or
add
push
push
testb
dec
out
shll
jge
jbe
std
popf
jle
lock
sahf
sub
mov
jle
mov
and
nop
jle
xlat
ss
mov
push
mov
mov
pop
xor
fimull
cmc
loop
lcall
dec
loope
push
inc
mul
pop
scas
sub
pop
xchg
arpl
inc
jecxz
rcr
std
mov
movsl
repnz
clc
ficoms
aaa
iret
bound
and
jnp
test
adc
and
sub
loop
pusha
mov
adcl
movw
movl
call
pusha
lahf
js
cmc
repnz
pop
imulb
jno
notl
sbb
fisubrl
xchg
ds
jno,pn
xor
aas
inc
inc
fcomps
ret
push
pop
sbb
inc
loopne
in
xor
push
call
sub
mov
push
mov
ret
fdivr
inc
and
xor
jo
cmp
divl
jg
mov
nop
pop
call
and
xchg
xchg
orl
push
cmp
sarb
fnstenv
mov
enter
je
or
lock
or
xchg
aas
pusha
add
imul
xor
and
test
pop
mov
mov
xor
jmp
movsl
cwtl
inc
sqrtps
and
push
mov
or
test
enter
out
adc
mul
cmp
stc
decl
test
pushl
bt
cmp
pushf
push
lea
je
cmp
pusha
pusha
cmp
push
call
call
lods
outsb
sbb
add
add
in
and
add
add
pop
scas
sbb
add
add
adc
sbb
add
add
cld
mov
add
dec
xchg
and
add
add
jne
sbb
add
add
nop
cmc
and
add
add
stos
cmc
and
add
add
fbld
add
jg
sbb
sub
test
and
shrl
and
add
add
mov
cltd
test
sub
lret
sub
sub
es
ret
jae
lods
bswap
setae
sbb
ret
xor
lods
mov
adcb
or
ror
popa
mov
stos
cmc
aaa
fdivs
push
or
int
push
inc
add
fadd
inc
arpl
cmp
add
xchg
xchg
sub
pop
jnp
pop
aaa
inc
aas
mov
sbbl
xchg
and
pop
push
adc
mov
sti
pusha
mov
push
movw
movb
lea
jmp
daa
pop
aaa
adc
inc
sbb
aaa
fidivrl
xor
push
fistpll
jg
test
lcall
pop
addr16
lods
jno
cmp
cmp
push
sbb
ljmp
jo
shll
and
sub
fstpl
jae
push
ljmp
cmp
or
iret
or
mov
out
mov
cs
ficoml
cs
sub
mov
mov
mov
lret
push
lea
data16
gs
or
int
mov
pop
in
cmp
and
mov
subb
xchg
pop
push
sbb
push
mov
inc
iret
out
aaa
ljmp
sarb
pop
mov
dec
or
inc
daa
mov
mov
mov
xor
xlat
icebp
es
jns
scas
ja
add
idivl
dec
dec
icebp
ja
cmp
xor
mov
mov
cli
fcoms
jmp
leave
sub
incl
add
push
iret
jmp
xchg
cmp
jl
add
mov
jge
std
cltd
jle
cld
fwait
std
ficomps
sarb
mov
icebp
out
push
out
mov
rcrl
mov
and
mov
jnp
outsl
loop
cmp
je
jmp
fmuls
fwait
js
push
xor
jg
inc
ja
int3
das
sub
roll
adc
add
or
mov
or
mov
pop
sub
xor
cmp
push
sbb
add
test
push
in
lods
ljmp
addr16
adc
inc
scas
push
frstor
xor
inc
movsl
enter
inc
test
lcall
inc
mov
fs
fldt
addb
lea
push
enter
mov
sub
adc
daa
enter
xchg
jl
enter
stos
gs
mov
sub
or
imul
imul
lock
in
fwait
sbb
mov
xor
jns
sti
mov
xor
adc
add
int
insl
cmp
mov
dec
and
push
inc
and
test
lds
scas
arpl
leave
push
arpl
imul
jno
aad
jg
insl
and
jle
xchg
shrl
dec
jmp
push
iret
adc
lods
popl
imul
imul
cmp
clc
adc
lcall
dec
dec
psubsb
mov
xchg
jb
sbb
and
imul
ja
dec
add
mov
mov
pop
adc
fwait
rcrb
fstps
adc
and
push
or
movb
jmp
btr
push
mov
bt
call
push
lea
call
pusha
push
cmp
push
pushf
pushf
lea
jae
clc
cmc
jmp
pusha
test
pusha
lea
js
push
lea
je
call
scas
dec
outsl
dec
pop
mov
daa
out
mull
daa
icebp
stos
shll
cmpsl
stos
mov
push
cld
test
adc
rclb
xor
call
test
jp
test
lds
dec
dec
xor
fnstsw
adc
in
cmp
icebp
cld
iret
push
mov
iret
shlb
into
insl
scas
sub
pop
mov
sub
pusha
lret
mov
lods
sbb
xchg
mov
scas
inc
mov
add
push
hlt
fisttpll
cmpsl
popf
pop
fwait
pop
insl
xor
out
cmp
lds
cmp
jnp
das
jp
inc
mov
cld
sub
inc
insl
icebp
rolb
aaa
out
js
ja
add
jg
loopne
clc
fmull
aad
stos
dec
sbb
dec
inc
daa
mov
ja
cmpsl
sbb
push
mov
jmp
enter
sub
mov
outsb
xor
sbb
stos
sbb
out
fstps
rcrl
out
js
out
sub
jge
repz
inc
and
movsb
dec
sub
out
scas
popf
aad
ret
lods
adc
ret
adc
mov
aaa
mov
lock
dec
jmp
test
bound
repz
or
and
xlat
int3
mov
lcall
dec
iret
pushf
pop
insb
push
or
mov
mov
or
xchg
or
shll
leave
jmp
mov
scas
lret
inc
or
xlat
lcall
adc
sbb
adc
pop
push
sub
ja
mov
fcos
rcr
iret
fistpll
fnstcw
pop
cmp
add
mov
jno
lahf
add
or
push
ss
or
adc
aaa
inc
movsb
jl
sbb
cltd
aas
sub
or
shlb
add
and
jecxz
sbb
mov
out
test
push
mov
pusha
sbb
popf
inc
pop
xchg
sub
inc
add
pop
fcoms
xor
mov
adc
idivb
cmp
fldl
aas
and
lea
jne
rol
aam
sub
aad
aaa
mov
push
neg
bt
ror
add
dec
stc
pusha
mov
test
movb
test
pushf
jmp
insb
push
das
sub
jp
lds
sub
dec
cmpsl
inc
sub
dec
pusha
push
addr16
movsb
loopne
dec
lock
xchg
jno
lcall
or
cmp
fwait
js
add
mov
out
leave
add
xchg
leave
fwait
jp
jbe
pushf
fildl
sbb
es
int3
xchg
sub
inc
cmp
push
shlb
imul
push
in
lods
stos
push
adc
or
push
shlb
ret
lret
es
movsb
les
inc
mov
arpl
jae
or
fdivl
das
push
ljmp
cs
dec
inc
cltd
mov
enter
out
nop
dec
mov
push
in
pop
jns
push
flds
or
jo
cmp
xchg
clc
adc
das
jnp
cmp
or
xchg
mov
mov
filds
jb
adc
loopne
jl
push
adc
mov
ja
mov
roll
rorl
pop
add
cmc
mov
ret
repz
adc
add
mov
test
lcall
aaa
orl
insb
outsb
test
pop
loop
adc
xlat
sbb
jno
push
mov
adc
adc
pusha
test
push
adc
enter
mov
inc
popf
add
lea
test
mov
and
push
mov
dec
nop
xor
popf
lret
das
inc
and
lods
and
inc
adc
xor
and
mov
cmp
xorb
dec
aas
mov
adc
mov
jno
repz
ret
pop
fucomi
mov
jp,pn
or
dec
imul
jp
shl
add
stos
aaa
jb
xchg
jp
pushf
test
in
fdivrs
add
sub
sahf
or
in
fstpl
insb
das
push
inc
add
add
stc
shr
inc
ljmp
jnp
xchg
and
shr
or
or
push
adc
add
dec
loope
and
cvtps2pi
loop
out
xchg
and
mov
fldln2
fdivrl
add
icebp
push
cli
test
iret
xchg
outsb
ret
icebp
jo
lcall
loopne
cmpsb
jnp
out
add
xchg
sbb
mov
jl
adc
pop
hlt
out
push
sub
ljmp
in
push
movb
jge
dec
sbb
jno
jmp
dec
push
and
loop
adc
adc
iret
pop
lret
lea
jne
xor
movzbw
shl
mov
push
xor
or
sub
pusha
bswap
lea
push
push
lea
jmp
xor
test
test
repnz
jmp
jb
inc
push
xchg
dec
stos
int
lret
stos
dec
push
hlt
scas
shl
mov
pop
cmpsl
xor
mov
out
mov
repnz
pop
decl
sub
imul
movsb
mov
inc
fnstsw
rorl
push
xor
push
xor
inc
pop
pop
jmp
cmp
inc
scas
xchg
mov
lds
addl
data16
xor
mov
jne
fbld
add
mov
loopne
shl
inc
jmp
shrl
mov
shrb
mov
imul
dec
ret
int
sub
push
inc
inc
in
xchg
cld
fdiv
jp
sub
mov
adc
in
ljmp
hlt
adc
or
cltd
cwtl
xchg
jbe
inc
jo
je
adc
jge
dec
jnp
je
xchg
mov
das
cwtl
adc
or
cmpsl
xchg
push
repnz
adc
jmp
cmp
xlat
mov
mov
cmp
mov
xor
mov
cmc
xor
mov
push
out
je
dec
or
stos
dec
xchg
xor
loopne
cld
es
fwait
or
movsb
xchg
divl
test
mov
cmp
adc
fcmovne
push
or
popf
mov
xchg
shll
adc
pop
ficoms
loope
jnp
movsb
movzbw
jmp
scas
xlat
xor
mov
sbb
into
adc
xchg
mull
cmp
add
and
or
lock
popa
cld
push
or
shlb
ret
pop
test
ret
inc
arpl
sbb
cltd
out
stc
pop
jns
jmp
addr16
jns
test
scas
adc
mov
pop
add
es
popf
test
mov
xor
pop
pop
and
repz
in
mov
mov
out
mov
push
daa
out
mov
loopne
sbbb
dec
dec
sbb
or
mov
in
in
or
mov
enter
sarb
xchg
mov
hlt
sbbl
xlat
sbb
call
and
mov
dec
cmp
stos
lock
js
in
or
out
outsb
cmp
adc
int3
inc
inc
and
out
lods
sahf
fstpl
lret
push
pop
in
addr16
add
xchg
push
aaa
nop
push
sar
cmpsb
dec
xchg
xor
mov
push
push
add
test
and
xchg
popf
pop
in
push
adc
out
sbb
cwtl
aam
sbb
fidivrs
cs
add
cld
sbb
stos
dec
lods
inc
mov
in
test
jp
or
add
push
inc
cmp
xor
lock
shlb
sti
push
clc
repz
xchg
jg
icebp
pop
inc
arpl
sbb
jnp
xchg
mov
pop
xor
inc
mov
xchg
pop
mov
insl
push
enter
out
stos
lods
xor
dec
xchg
test
sub
mov
xor
inc
pop
and
cmp
mov
mov
add
pop
ret
push
into
mov
ret
je
ja
push
adc
inc
scas
jbe
mov
pushf
pushf
jmp
pusha
cmp
cmp
cmp
push
call
cltd
loopne
mov
dec
test
adc
jo
jns
lock
pop
cltd
mov
mov
ret
inc
mov
xchg
lret
notl
pop
xchg
cmp
sahf
test
jge
add
mov
addr16
inc
test
out
adc
shlb
ret
inc
mov
or
and
test
cltd
and
xchg
xor
and
es
out
imul
gs
adc
dec
cltd
dec
cmp
add
out
push
mov
push
mov
out
push
fiadds
mov
cmp
xchg
mov
fiadds
fsin
push
pop
into
clc
scas
and
repz
inc
jge
fistps
int3
in
std
cmc
out
repnz
mov
pop
cmp
xchg
dec
mov
jne
xchg
adc
xchg
jge
mov
popa
lret
push
mov
mov
cmp
lea
adc
addr16
lea
pushl
lea
jmp
clc
pushf
bt
pushl
popl
bt
cmp
push
pusha
movb
lea
ja
shl
rcr
sub
test
add
shr
call
lea
je
test
clc
stc
stc
add
push
movb
pusha
cmp
mov
push
pushf
mov
lea
jb
pusha
movb
lea
jmp
das
rolb
movsb
out
cmp
mov
shlb
cmp
push
and
das
sbb
mov
and
or
sti
pushf
sar
and
in
pop
adc
fbld
sbb
adc
popl
cld
fmull
cwtl
push
aad
outsb
sbb
cmp
jns
sahf
shl
mov
sbb
out
das
outsb
and
in
and
faddl
xor
xchg
mov
enter
subl
fs
xchg
push
dec
scas
pop
mov
push
ja
loop,pt
lahf
ja
adc
dec
xorb
test
jp
popa
inc
lods
push
rorl
scas
mov
push
sti
test
sbb
mov
cltd
lret
push
jae
mov
mov
std
aad
sbb
inc
in
insb
or
aas
dec
jg
ljmp
cmp
pop
jmp
xchg
push
nop
pop
sbb
lahf
push
pop
xchg
push
adc
xor
fs
jbe
rol
and
sub
shl
inc
or
shrd
mov
bt
adc
pushf
bswap
mov
xchg
rol
mov
shld
add
add
bts
shr
call
mov
out
out
mov
pop
add
inc
sub
sub
movsb
iret
stos
int3
mov
cld
les
sti
mov
cmpsl
push
xchg
mov
shll
jns
mov
mov
loope
cmpsb
push
adc
and
pusha
fiaddl
push
or
xor
cmc
sbb
fisttpll
push
orl
fildl
nop
into
fildll
notb
push
cmc
inc
js
sti
mov
aaa
cmc
mov
push
adc
fmull
fdivrp
add
ret
out
stos
mov
add
xor
pop
mov
mov
xor
jecxz
sbb
jmp
fnsave
nop
test
mov
fstpl
lods
sti
xchg
or
mov
lahf
mov
hlt
jne
nop
xlat
mov
adcl
mov
das
sti
mov
xchg
mov
jmp
lcall
imul
push
pop
rcrl
scas
adc
pop
outsl
push
fs
pop
imul
test
adc
or
jmp
adc
add
inc
cld
pop
push
dec
dec
stos
stos
mov
iret
and
sub
inc
and
out
xchg
xor
hlt
sub
jmp
xchg
lahf
mov
push
iret
or
jle
adc
xchg
and
push
lea
divb
movsb
jmp
gs
jmp
out
cli
mov
ss
je
or
jg
lds
xchg
lea
mov
jno
sub
fld
adc
lds
ret
dec
pop
dec
in
fsub
aad
jg
movb
sub
jne
mov
repnz
daa
int3
and
and
das
mov
push
out
pop
mov
in
xchg
sub
push
insl
cs
lods
insl
inc
add
dec
test
or
push
test
xor
dec
outsl
push
adc
aad
fisttpll
cmpsl
xchg
adc
call
or
jmp
aas
inc
add
cltd
xor
subl
test
in
cltd
inc
push
xchg
push
rol
out
fcomp
adc
insb
pop
sahf
sub
mov
cmpsb
jl
pop
in
xchg
jae
adc
xchg
adc
pop
push
adc
fdivs
mov
or
xchg
dec
xchg
hlt
adc
ja
icebp
push
jne
xor
mov
cmovp
es
xchg
mov
push
clc
call
xchg
and
andb
jle
xor
loop
test
pop
xchg
sub
lret
dec
les
jmp
xchg
mov
push
jbe
adc
nop
push
nop
push
adc
out
adc
flds
add
pushf
rclb
jne
mov
loope
fnstsw
push
xor
push
scas
fiadds
sbb
addb
xor
inc
jge
mov
ret
xchg
movsb
mov
xor
sti
cmc
adc
ljmp
movsb
and
inc
imul
arpl
adc
sahf
push
adc
divl
imul
mov
mov
push
inc
pop
jne
xchg
shlb
xchg
fcomps
popf
sbb
xlat
mov
hlt
push
push
jbe
push
and
cmp
xor
fmuls
xor
stos
add
push
mov
stc
insb
insl
ret
sbb
xchg
fldenv
and
cmpsl
shlb
add
not
sar
cltd
or
imulb
jo
and
mov
lock
outsb
int3
sub
cmp
dec
cmpl
cmp
push
adc
nop
pop
andb
push
hlt
in
dec
jb
sbbb
cmp
xlat
mov
add
adc
cmp
bound
xor
xor
pop
es
xchg
sahf
scas
cli
testb
pushf
insl
add
xchg
filds
jno
mov
xchg
stos
aad
dec
fadd
in
dec
ds
movsl
ds
in
out
cmp
sub
and
adcl
dec
or
mov
lcall
hlt
dec
jo
pop
andb
std
daa
and
in
aaa
inc
out
push
adc
xlat
mov
repz
sub
cwtl
xor
pop
push
add
pop
cwtl
int
mov
jnp
loope
ret
repnz
scas
pop
mov
hlt
pop
add
cs
or
rcrb
mov
fxch
and
ror
xchg
push
imul
dec
sbb
movl
jecxz
decl
mov
xor
faddl
cltd
loopne
fisubrs
ja
popf
dec
jl
test
mov
or
outsl
cs
daa
or
cmp
jo
testl
ret
or
push
cmpsl
push
adc
mov
xor
adc
mov
mov
cmp
jo
testl
xchg
jno
ret
sbb
sub
dec
pop
call
mov
data16
jl
mov
loop
repnz
fisubs
sti
and
jmp
dec
std
cmp
int3
out
xchg
sub
sub
testb
mov
cmp
mov
push
adc
int
lds
push
stc
cmp
xchg
mov
push
out
jecxz
or
mov
mov
fdivl
push
jo
test
loope
push
subb
cmc
inc
pop
add
pop
mov
mov
jnp
push
mov
inc
test
jmp
adc
or
sbb
lret
aam
loope
push
test
addl
das
jge
sub
stc
loop
ret
jnp
and
push
lret
push
push
fisttpll
aam
call
scas
mov
clc
addr16
cltd
mov
push
cmp
popf
mov
sub
fwait
ja
inc
inc
arpl
push
nop
rclb
fistl
push
pop
loop
pop
push
adc
jg
mov
orl
add
cmc
stc
test
sub
pushf
pusha
lea
call
call
xchg
cmp
jl
icebp
paddd
lock
jno
jo
icebp
aad
sub
mov
fistpll
and
les
dec
inc
cmpsb
jp
pop
mov
pop
into
sbb
adc
cmp
xchg
ja
rcl
or
in
into
add
mov
popa
ds
mov
sbbl
daa
orl
leave
mov
add
xchg
add
push
adc
test
inc
and
adc
or
test
sbb
and
add
test
loope
lods
and
mov
mov
mov
adc
mull
xor
es
xchg
sti
in
jge
xor
jae
shll
mov
dec
pop
mov
xchg
jg
imul
fadds
in
popf
mov
mov
push
mov
and
fstl
xchg
hlt
data16
mov
jp
out
rorl
mov
mov
ljmp
in
ss
call
pop
sbb
adc
fcomp
push
adc
add
lods
lock
mov
mov
hlt
xor
rcr
cmpsb
push
leave
insb
jmp
popf
xchg
test
dec
lock
jb
or
cmpsb
sbb
mov
subl
xor
jno
mov
stos
jle
xchg
mov
jecxz
add
cld
mov
xor
adc
sub
pusha
jge
xchg
xchg
test
rcll
mov
dec
inc
sbb
std
inc
test
cmp
ret
inc
inc
aad
dec
jne
inc
nop
ret
cs
xchg
loop
neg
test
out
aad
bound
mov
jae
pop
sub
push
out
sbbb
rcl
mov
out
pop
xor
xchg
lahf
popf
mov
repz
repz
addb
dec
sbb
cmpxchg
sbb
lret
lahf
adc
xchg
cmpsl
sub
jnp
pop
adc
imul
push
ret
ficoms
test
push
sub
jmp
loope
aam
ljmp
add
lret
test
mov
jmp
fsubl
and
xor
mov
xor
push
jno
mov
adc
xor
in
inc
pop
jg
inc
popf
and
lcall
in
mov
test
jg
ret
or
mov
inc
pusha
and
and
mov
or
stos
push
adc
inc
adcb
add
fs
imul
add
inc
arpl
add
add
xor
out
arpl
imul
aas
fiaddl
push
cmpsl
xchg
inc
xlat
clc
test
jns
daa
inc
jnp
jae
adc
stc
sbb
addr16
cmp
aaa
clc
stos
mov
gs
rol
ja
ss
push
sbb
jmp
and
mov
sub
lret
push
mov
nop
dec
test
adc
mov
aad
ret
or
hlt
ret
out
inc
or
pop
push
enter
ss
mov
jnp
fwait
push
adc
adc
pop
pushl
adc
movb
push
mov
pushl
ret
stc
shr
bt
cmp
jmp
pop
movsb
dec
insb
dec
push
pop
dec
loop
popa
stc
push
sti
xchg
ret
xchg
ret
popf
js
sbb
subl
mov
sbb
cld
push
mov
lret
add
fmuls
imul
in
cmp
testb
iret
xor
mov
jno
fsts
or
adc
jecxz
mov
pop
repz
int3
mov
adc
sbb
je
jmp
sahf
push
jle
leave
jno
les
insb
xchg
mov
jb
jl
mov
jb
mov
adc
adc
push
pushl
pusha
mov
jmp
jmp
inc
call
xchg
push
or
xchg
fimull
por
and
mov
icebp
xlat
push
in
push
ret
xor
imul
sti
adc
aaa
xchg
movsb
mov
mov
std
test
clc
repnz
mov
add
rorb
mov
fidivl
arpl
pushf
inc
dec
mov
out
imul
adc
cmpsb
add
sbb
mov
and
mov
mov
stos
test
mov
out
fcoml
sub
and
sub
into
pop
pusha
adc
movw
pushf
call
jae
jmp
in
cli
ljmp
movsl
mov
iret
push
cs
ret
mov
mov
fs
sub
sbb
xorb
test
or
sahf
or
lea
pop
jg
xchg
aaa
andl
nop
cmp
aam
mov
dec
insb
jns
sub
sub
xchg
fwait
jb
xor
jp
cld
mov
or
cs
mov
mov
aam
xchg
scas
mov
mov
adc
jle
mov
je
xor
pushl
pushf
pushf
lea
jmp
add
add
and
adc
dec
add
xchg
popa
add
arpl
mov
pop
cmpsb
pop
fimull
andl
inc
add
jl
shl
rep
or
js
and
icebp
ror
or
jnp
in
adc
mov
adc
add
mov
popf
lret
arpl
call
cs
xlat
and
xchg
pop
or
ds
adc
adc
js
push
xchg
mov
sbb
or
inc
addb
xchg
enter
into
jle
imull
fdivrs
sub
mov
cmp
shlb
mov
mov
test
sub
sbb
lahf
mov
hlt
loope
popf
sub
cmpsl
mov
stos
mov
aad
fimull
pop
setbe
bound
sub
fadds
push
loopne
mov
pop
add
push
rorl
jno
inc
lock
mov
xlat
xchg
pop
rclb
push
push
nop
and
inc
scas
jbe
add
je
imul
outsl
jb
test
push
cmp
push
or
ret
push
lds
jo
shrb
mov
lock
lret
insl
mov
sarl
mov
cli
divb
scas
test
fnstenv
gs
xchg
aam
adc
adc
sahf
cmpsb
lcall
xor
push
pop
and
and
addb
cmc
rcll
mov
leave
repz
cmc
mov
std
push
adc
loope
fs
lea
call
pushf
call
bt
pusha
test
add
pushf
pushf
dec
jmp
sub
ds
pushf
and
pushl
lock
std
xchg
repz
adc
lahf
ds
fld1
frstor
mov
fmull
sbb
aas
sbb
ja
iret
fisubrs
mov
stos
cmpsl
roll
mov
fwait
mov
sbb
cmp
push
ffreep
mov
std
fistl
mov
sub
xlat
lods
fs
je
test
call
test
inc
icebp
inc
orl
enter
adc
mov
push
xor
sub
repz
jg
cli
fsubrp
mov
jbe
lret
dec
mov
cltd
pop
mov
mov
jb
pop
lods
mov
cmpsb
jae
je
insb
movsl
xchg
aad
iret
push
insl
in
aaa
dec
imul
rorb
and
es
fwait
out
xor
jne
pop
pop
jnp
lcall
inc
or
addl
push
cmp
addl
and
pop
fs
push
ljmp
and
push
adc
xchg
inc
cltd
jmp
cmp
mov
js
nop
repz
ja
icebp
sahf
sahf
je
jo
inc
push
xchg
push
jg
fisubl
push
addr16
cmc
cs
lcall
mov
nop
inc
popa
pop
dec
loope
push
inc
cli
sbb
jecxz
pop
andl
fcoms
insl
mov
xchg
std
pop
pop
pop
lahf
ficompl
pop
adc
notb
lret
in
pop
aam
sub
movsbl
btr
inc
mov
not
add
shl
mov
stc
test
call
sub
push
push
xchg
movb
lea
shl
rol
stc
mov
bt
sbb
sbb
push
bt
or
not
xadd
push
rcl
rcl
push
clc
movsbl
sbb
shld
push
ror
mov
dec
bt
mov
push
movzbl
cmp
shr
mov
cmp
pushf
cmp
or
pushf
pushf
pushf
lea
je
stc
pusha
or
jmp
inc
cmp
call
jne
bsr
xchg
mov
sar
sub
not
movzbw
lea
call
pushf
in
das
mov
mov
xchg
mov
xchg
pop
repz
test
xor
in
pusha
sub
mov
leave
sahf
arpl
or
lock
inc
js
mov
insl
sbb
mov
imul
or
sbb
insb
icebp
int
flds
xchg
sub
andb
out
push
cmp
out
mov
loop
adc
in
pusha
and
loope
sbb
push
adc
pop
mov
pop
cli
fstps
rol
scas
push
repz
jbe
repnz
inc
cltd
xor
shl
dec
aad
inc
push
repnz
das
mov
add
js
fsubrl
loopne
jno
ret
mov
outsl
nop
andb
sbb
lds
aaa
and
out
iret
into
jne
iret
xchg
sub
dec
iret
fstps
xor
cmp
lahf
sub
pop
push
lods
sbb
pushf
sbb
adc
ret
dec
neg
cmc
mov
call
ja
loope
in
pusha
inc
js
mov
pop
cmp
shlb
xlat
jge
mov
shl
xor
das
mov
ret
inc
cmpsl
jae
push
leave
fld
aaa
xchg
lret
iret
lcall
jns
mov
jnp
lock
movsb
popf
repz
in
int
rorb
daa
jo
push
mov
dec
mov
mov
jle
es
add
push
arpl
cs
adc
nop
lretw
push
jmp
bswap
pop
pushf
pushl
pushl
ret
inc
out
or
les
pop
gs
fs
subb
jle
inc
cwtl
stos
push
xchg
dec
leave
sub
rcrb
imul
pop
push
pop
lret
xor
into
and
push
mov
sub
mov
inc
xchg
jns
sub
pusha
das
xor
mov
andb
push
and
cmp
cmpsb
lret
ret
dec
dec
ds
sub
sbb
sub
subl
xor
mov
pop
push
adc
xchg
fstpt
imul
gs
pop
mov
mov
mov
cmc
aaa
add
mov
test
add
cmp
adc
pop
movsl
cmp
test
clc
xor
xor
das
or
lods
js
jl
or
sub
add
pop
ficoms
lds
push
int
cmpsl
mov
add
insb
sub
loopne
loope
cmpsw
pusha
push
popa
sub
ljmp
loope
leave
pop
pop
jl
data16
or
fidivs
xlat
mov
mov
divl
lods
sahf
out
lock
lret
clc
push
testb
rolb
xor
pop
adc
dec
hlt
adc
popa
push
cmpsb
mov
jge
dec
push
push
jg
cmc
lret
incl
imul
loope
xchg
addb
fnstenv
dec
lea
insl
in
and
push
xor
dec
insl
das
fwait
mov
add
imul
js
sahf
cltd
mov
mov
call
xor
loop
push
int3
mov
jns
jg
arpl
mov
movsb
lea
adc
mov
jno
or
sbb
inc
and
loopne
adcb
mov
dec
jg
out
mov
mov
mov
movsb
adcb
jnp
sub
cmp
cmp
inc
test
es
or
loop
fs
test
stos
out
outsl
inc
fcomip
jg
mov
loop
nop
ss
jbe
jl
lret
pop
hlt
push
xchg
push
adc
cld
cli
sbb
clc
cmc
add
pushf
clc
pushf
pushf
mov
mov
test
push
pushl
lea
je
jmp
pusha
pop
lea
movb
movzbw
pusha
cwtl
call
add
or
mov
loopne
push
pminsw
adc
mov
or
cmp
lret
repz
sub
xchg
sahf
repnz
sub
xor
mov
into
adc
cmp
xor
sbb
mov
cmp
adc
and
add
or
and
loopne
and
sbb
jecxz
mov
in
stos
dec
pusha
and
loop
jmp
in
fucom
mov
and
lds
lret
imul
shll
jmp
data16
or
ljmp
cmp
out
or
inc
cmc
shr
mov
std
and
imul
das
mov
hlt
rcrb
loope
inc
xchg
out
jp
xchg
jge
addb
je
xchg
sub
push
lea
jb
rclb
stos
in
and
mov
lcall
sbb
xchg
push
sbb
push
push
adc
sbb
mov
pop
jg
mov
mov
pop
mov
ss
stc
mov
movsb
mov
mov
mov
push
pop
hlt
clc
xor
pusha
jge
xchg
jne
shrb
lock
data16
dec
add
iret
sbb
subl
adc
leave
mov
xor
int3
ljmp
mov
sub
mov
pop
fidivl
out
cli
fdivr
vhaddpd
ds
pop
jl
inc
mov
dec
js
lods
mov
in
loopne
mov
insl
cmpsl
bound
and
les
xlat
jbe
pop
scas
loope
je
mov
stc
and
and
daa
addb
ljmp
inc
jae
sti
fildl
sbb
lsl
shrl
movsb
imul
repz
xchg
orl
sub
adc
ds
roll
add
in
iret
call
popf
ficoml
fisubrl
push
push
push
adc
jae
out
lcall
mov
push
lret
pop
lret
lahf
sti
adc
movsb
jp
mov
xchg
int
clc
faddl
mov
fs
mov
aam
mov
lds
out
and
shlb
push
sub
add
and
xchg
xor
sbb
stos
mov
or
mov
imulb
mov
test
ret
repnz
push
push
addr16
fistps
in
lahf
xor
imul
inc
mov
ficoms
rcrl
push
push
adc
jbe
mov
ljmp
in
push
or
add
or
test
ret
xchg
mov
or
lods
dec
xchg
daa
pop
jns
pop
mov
int3
lea
in
not
cld
jmp
jmp
imul
leave
scas
scas
pop
mov
pop
test
js
cmp
jae
js
test
sbb
ret
pop
mov
es
add
outsl
insb
gs
jne
xor
cs
insb
add
xchg
rcrl
ret
lea
movsbw
lea
mov
call
lea
jb
jmp
clc
jmp
lock
dec
outsl
sbb
inc
lcall
aaa
popa
mov
push
and
push
xlat
or
test
repnz
push
cmp
jo
sbb
cmp
das
cmc
ds
sub
fwait
cmpsb
dec
mov
scas
imul
cmpsb
popa
imulb
call
inc
cmp
loop
add
add
xor
inc
or
dec
ljmp
popa
adc
pop
pop
jns
aam
shll
in
mov
pop
mov
mov
fsubrs
dec
in
dec
cmp
cmp
sub
pop
stos
mov
or
mov
jns
jecxz
xchg
cs
movsl
cmp
cmc
xorb
test
loopne
push
je
lods
fimull
lods
mov
in
cmp
loopne
int
add
ja
pusha
jne
dec
xchg
mov
pop
or
jo
nop
addr16
insb
ss
push
jno,pt
pop
and
adc
fucompp
push
xchg
push
push
xor
shrl
mov
and
repnz
push
pusha
lea
jne
movsbl
jmp
mov
test
lret
out
or
and
push
imul
lret
fimuls
cmp
add
aad
pop
and
sbb
out
out
int3
call
insb
xlat
test
test
pop
sbb
test
jecxz
sarl
xorb
cli
sbb
lea
incb
mov
lcall
movsl
test
aad
inc
add
sbb
es
dec
repnz
cld
fstps
mov
subl
adc
pop
jl
mov
repz
xor
dec
jbe
jne
lock
push
adc
adc
sbb
rorl
sub
mov
jbe
je
notl
icebp
and
loop
dec
pushf
or
xor
sbb
mov
mov
dec
scas
lds
push
cmp
xor
or
rcl
rcrb
sbb
addb
outsb
ret
repz
aad
jnp
mov
xchg
add
dec
dec
mov
stos
cmp
ja
jnp
std
mov
dec
repz
adc
push
mov
push
test
pushf
movb
lea
je
push
add
test
cmp
jmp
push
stc
sahf
int
adc
or
sub
fidivl
push
xor
xor
xchg
aam
fldl2e
sahf
or
sbb
and
sbb
imul
std
adc
jecxz
sbb
dec
xchg
mov
jno
jne
sub
adc
rclb
xchg
mov
scas
push
je
xchg
ja
call
mov
jnp
scas
insb
int3
pop
sahf
mov
push
sbb
movsb
roll
dec
mov
pop
into
push
ds
inc
push
adc
rol
call
stc
call
pushf
call
cmp
add
add
in
fidivl
push
sbb
fdivrs
push
jle
sbb
add
gs
jo
or
add
imul
les
and
xor
pop
stc
inc
cmp
add
sbb
jle
mov
push
test
mov
sbb
lcall
stos
les
add
insb
add
imul
out
bound
loopne
loope
add
mov
xor
jae
pop
cmp
les
rcll
mov
inc
lock
aas
sub
or
int
and
xchg
fucom
rcrb
pusha
dec
inc
adc
loop
sub
push
lahf
push
lock
test
jl
or
pop
add
arpl
insb
mov
mov
jge
andl
cltd
pop
and
rcrl
gs
lcall
scas
test
stos
xor
loope
test
scas
fsincos
out
jl
in
ficompl
xlat
xchg
push
xchg
pop
lcall
sub
nop
add
mov
test
jecxz
insl
or
cmp
je
mov
mov
fstl
rclb
add
daa
pop
jns
lea
xor
fisttpll
repnz
test
pop
jo
daa
pop
cmp
in
inc
imul
xchg
out
les
outsl
pop
and
fs
xchg
pop
add
out
jp
jle
jle
mov
or
inc
push
adc
mov
enter
jbe
ss
inc
jle
jbe
divl
jno
push
adc
ret
pushl
popfw
jmp
mov
call
mov
pusha
lea
jne
call
call
sub
pusha
rep
push
mov
pushf
lea
jmp
ficoms
dec
out
dec
fwait
dec
jae
jb
hlt
pushf
jl
je
repz
ja
cmc
and
mov
cmp
push
repnz
or
push
scas
xlat
mov
add
xor
xor
or
mov
sub
addr16
mov
push
adc
jmp
fnstcw
es
add
rcrb
insl
sub
xchg
insb
in
pop
mov
mov
inc
mov
fucom
add
mov
fdivs
sbb
lcall
push
notl
mov
fs
call
pusha
pushl
pusha
lea
jae
pushf
pushf
pushf
xor
call
push
leave
mov
dec
mov
hlt
sbb
fwait
jl
jle
jg
data16
mov
stos
aaa
adc
dec
test
cmpsb
addr16
fdivrs
ja
pop
dec
lret
lds
into
inc
mov
repz
inc
pusha
lret
mov
xor
dec
loop
xchg
sub
daa
add
xor
and
and
sub
sbb
adc
and
jne
jmp
mov
pop
clc
push
test
and
ljmp
cld
sbb
jo
call
insl
xchg
cmp
pop
cmpsl
ret
cmp
xor
push
adcb
xchg
dec
aas
dec
or
cmpsb
push
mov
xchg
sub
dec
insb
into
mov
lahf
sti
pop
dec
mov
cli
lret
mov
add
mov
int3
sbb
jge
setae
jae
je
jp
leave
xchg
clc
rclb
fwait
mov
inc
addl
push
xchg
iret
sbb
addr16
call
mov
into
test
pop
dec
mov
inc
jg
and
push
int3
mov
js
jmp
push
std
mov
or
repz
cmp
bnd
push
add
cmp
ja
jne
les
idivl
xchg
and
pop
lcall
cmc
jmp
stos
or
dec
leave
aad
pushf
and
movsb
ja
and
inc
out
cmpsb
xchg
mov
xor
or
xchg
daa
add
mov
in
mov
lcall
and
push
inc
stos
cwtl
fistpll
out
and
in
xchg
add
idivb
stos
mov
pop
dec
mov
lock
sbb
and
add
roll
cmp
adc
sub
loopne
scas
lea
inc
loope
es
inc
xorb
iret
test
lret
jp
mov
inc
push
adc
sub
sub
addr16
cwtl
cld
adc
xchg
lock
cmp
mov
outsb
push
mov
jno
push
cli
std
mov
cmc
xchg
movsb
xchg
pushf
cmp
enter
or
and
fwait
gs
inc
int3
sti
clc
xchg
mov
aaa
dec
imul
fistpl
loope
pop
inc
out
jmp
data16
jge
insl
xor
rorl
or
xchg
cwtl
inc
das
push
jae
sbb
push
add
arpl
sub
add
sub
ret
adc
xor
jb
jno
ja
repz
xor
faddl
shld
lea
das
push
pushf
lea
shld
inc
pop
sub
bt
cmc
shld
push
movsbl
adc
bsf
push
jmp
popf
call
je
push
sub
pusha
sub
out
addr16
add
or
mov
add
lds
sahf
aas
mov
out
lret
fildl
outsl
icebp
fptan
rolb
inc
out
divl
nop
xorl
sbb
dec
pop
jg
pop
mov
nop
cmp
movsb
mov
mov
xor
xlat
mov
addb
mov
cli
rcll
imul
out
mov
push
and
cmpsb
in
push
adc
rcrb
push
ja
inc
cmp
xchg
aas
mov
xor
aas
shlb
sbb
lock
cmpsb
pop
xor
mov
pop
and
movsb
shlb
inc
std
pcmpgtb
dec
nop
add
ljmp
sahf
xchg
sub
pop
xchg
lea
loope
jns
fdivrp
cmp
xor
dec
cmc
aas
or
mov
mov
pusha
movb
call
test
cmc
xor
clc
call
mov
lea
ja
push
movb
pushf
jmp
inc
jmp
dec
mov
scas
push
sub
jecxz
scas
jno
jle
cmc
adc
jne
pop
ds
aaa
jg
push
test
cli
addr16
add
popf
data16
out
push
xlat
cltd
repz
inc
dec
cs
mov
cli
std
imul
hlt
fnstenv
sub
pop
mov
pusha
mov
rcr
aam
test
adc
shlb
dec
into
jo
push
mov
subl
inc
pop
pop
imul
in
outsl
sub
out
lods
data16
push
adc
add
popa
insb
inc
insb
insb
outsl
arpl
or
mov
cmp
dec
adcb
jb
jno
jo
lock
jo
xchg
mov
adc
cmp
lea
stos
mov
mov
jp
mov
mov
sub
stos
fld
jecxz
out
add
push
call
jae
addr16
xchg
mov
inc
in
pop
xchg
dec
sarl
push
jo
je
jo
adc
and
aaa
add
jp
loopne
lret
loop
or
add
les
les
mov
inc
push
adc
movl
pusha
pushf
lea
jmp
movw
lea
jae
push
call
lea
jae
pusha
jmp
lea
jb
push
pushf
lea
jmp
dec
cmp
aad
mov
lds
je
inc
test
movsl
xchg
dec
mov
scas
or
out
xor
outsb
mov
push
rol
or
movsl
and
aad
xchg
stos
and
jno
ret
jmp
mov
push
or
xchg
nop
push
xor
push
inc
xchg
push
nop
pop
lock
add
mov
das
divl
sahf
cltd
jae
and
imul
pusha
pop
xchg
pop
xor
jg
xchg
mov
sti
nop
mov
xor
test
mov
mov
ja
xchg
mov
mov
xchg
lea
jbe
jmp
mov
cwtl
mov
inc
mov
inc
and
shlb
sbb
mov
add
stc
aad
push
int3
in
sbb
mov
adc
sub
xor
mov
icebp
out
jne
sarb
ret
aas
dec
xor
shll
pop
mov
jns
pop
push
mov
gs
bound
outsb
stos
imul
scas
jmp
int3
or
mov
call
lret
mov
fdivl
sub
imulb
dec
lods
iret
mov
jle
idiv
add
or
mov
movsb
fdivrl
pushf
sbb
mov
inc
mov
push
pop
jne
xor
jmp
push
lret
mov
and
andb
int3
test
and
sub
icebp
push
dec
jle
sub
adc
push
sbb
cmp
stc
mov
xor
cmp
push
adc
fs
jb
pusha
pushf
lea
jmp
cmp
lds
sbb
dec
cwtl
jno
lock
jne
mov
push
cmc
mov
jnp
shlb
fbstp
insl
mov
imul
mov
mov
mov
xchg
dec
leave
fstp
dec
insb
xchg
aas
and
adc
sub
cmpsl
mov
mov
nop
into
adc
xchg
inc
repnz
daa
add
arpl
push
sub
inc
cmp
jne
mov
lea
dec
xchg
int3
dec
push
adc
jmp
ja
icebp
cmpsb
sub
clc
adc
jae
dec
adc
adc
pop
sbb
cmp
cld
inc
sarb
cmp
pop
dec
aas
xchg
pop
cwtl
dec
mov
ljmp
bound
test
negl
inc
mov
std
dec
lods
mov
push
mov
in
add
in
sub
sub
mov
out
or
xchg
enter
rorb
push
adc
scas
sub
xchg
cs
sbb
dec
sub
stos
xorl
mov
dec
nop
movsb
addr16
xchg
pop
fstpt
jge
lods
sub
or
inc
ja
adc
push
nop
pop
fistl
rcr
mov
and
loop
test
jbe
in
cmp
out
call
fsubrp
in
and
inc
jne
sub
into
repz
test
xor
notb
dec
int3
clc
out
pusha
arpl
pusha
movsb
bound
decb
push
int3
fs
pushf
sbb
dec
lods
or
test
lret
adc
adc
push
pop
mov
mov
aad
cli
ret
adc
xchg
jae
cld
sub
cli
push
xor
inc
jle
dec
pop
jge
inc
out
outsl
pop
cltd
xchg
shll
out
ja
pop
cld
lret
jno
sub
lock
movsb
rorl
mov
fldcw
lret
lcall
out
mov
cmp
dec
add
or
pusha
xchg
sub
or
fdivp
or
jp
cmp
fs
in
ljmp
loopne
push
mov
push
arpl
and
cwtl
cli
iret
xchg
pop
imul
ljmp
aaa
add
mov
jg
jo
cwtl
int3
fsubr
inc
dec
jnp
jge
js
jae
xor
mov
jnp
push
dec
rcl
stc
pop
std
mov
adc
pop
notb
sahf
jnp
mov
pop
push
cmp
mov
ss
or
adc
rol
fistpl
lahf
cmp
inc
push
or
lock
ss
mov
add
jo
push
inc
inc
mov
adc
test
adc
mov
add
xor
mov
mov
cmp
jae
jl
repnz
xchg
jns
add
inc
gs
insb
addr16
je
insl
add
test
add
adc
xchg
adc
mov
neg
push
sub
bt
jmp
adc
pusha
lea
jmp
repnz
dec
lret
cwtl
cmp
sbb
fisttpll
test
cmpsb
fwait
mov
inc
mov
xchg
or
xor
imul
jnp
fcompp
fildll
popf
repz
xchg
stc
jge
inc
push
lock
cs
push
inc
inc
pusha
fmul
rcrb
stos
mov
sub
add
mov
leave
adc
jns
mov
xor
xor
mov
mov
mov
mov
or
idivb
sbb
mov
pop
orl
mov
sub
lds
test
mov
cmc
shr
cwtl
hlt
inc
sbbl
mov
dec
inc
add
push
fistpll
mov
loop
xchg
pop
pop
inc
jns
pop
pop
add
movsb
xor
aaa
jecxz
cmpl
add
jp
sub
or
mov
sub
inc
out
lds
data16
xor
adc
loope
or
addr16
stos
cmp
sbb
es
adc
notl
stc
shl
pop
mov
sti
cld
imul
push
mov
jne
sbb
adc
out
stos
stos
mov
outsb
xor
ja
adc
imul
jle
cmpsb
addl
dec
add
mov
mov
or
mov
cmpsb
andb
enter
mov
rolb
mov
sbb
out
mov
call
adc
aad
add
aaa
sub
out
adc
add
das
call
inc
negb
mov
xchg
sub
sbb
or
insb
inc
test
dec
test
add
dec
jg
dec
push
adc
rolb
inc
and
decl
mov
pop
push
dec
clc
mov
cmp
cmc
cmp
jmp
lea
jne
call
dec
loop
cmpsl
and
push
mov
loope
out
mov
push
lret
or
outsb
jbe
arpl
in
pmovmskb
lea
lea
mov
dec
loope
pop
inc
jns
push
scas
je
roll
push
test
and
ret
bnd
test
popa
jle
aad
clc
xchg
jp
jns
shlb
pop
mov
outsl
mov
lea
cwtl
mov
inc
cmp
ret
adc
call
mov
int3
mov
add
lea
push
push
adc
adc
pop
fiaddl
mov
mov
aaa
sarl
xlat
mov
xchg
mov
js
or
and
ret
jle
sub
xchg
outsl
ljmp
xor
cmp
imul
loop
call
add
and
mov
ds
mov
push
add
lock
loop
mov
dec
test
popa
jmp
push
add
inc
enter
iret
clc
xchg
stos
sbb
sub
call
shrl
test
in
movb
movsbw
push
jmp
andb
add
test
inc
movsb
ret
and
outsb
pop
pop
jp
or
dec
ljmp
pop
cli
add
ret
out
inc
fwait
scas
mov
xchg
test
xor
cld
dec
scas
cmp
push
mov
das
xchg
jp
ja
popa
or
push
add
decl
sahf
ss
lea
xchg
cmp
rorb
aad
cmc
xchg
adc
add
orb
or
mov
cmp
lods
lock
and
xlat
jbe
push
lods
adc
mov
fidivrl
in
mov
pop
jb
xchg
stos
lcall
lods
fwait
addr16
pop
fmuls
xchg
daa
jg
sbb
jmp
data16
fcoms
repnz
pop
push
xor
push
push
xor
dec
and
lea
push
adc
lods
adc
andb
and
cmp
pop
addr16
push
xchg
xlat
std
mov
sbb
fcomps
cltd
sub
cmp
lods
scas
cmp
push
aam
jecxz
cmp
xor
push
aaa
out
pop
mov
in
imul
shlb
mov
das
and
jae
stos
cmpsl
xchg
cmp
cmp
add
je
ret
mov
xor
cmp
cmp
push
mov
jno
fisubrl
cmc
xlat
jb
xchg
jb
les
mov
test
mov
cmp
push
call
int
add
adc
xor
insl
mov
scas
xchg
push
shrl
dec
dec
arpl
fistps
push
xchg
movsb
xchg
in
cwtl
push
rclb
lods
neg
jno
mov
call
int
lret
movsb
inc
mov
enter
lods
pop
das
mov
int3
sbb
rol
pop
lahf
inc
cmc
mov
dec
test
pop
jmp
mov
and
into
adc
and
scas
mov
jmp
inc
dec
sbb
imul
sbb
fmul
mov
jle
mov
in
inc
testb
lods
push
sub
ljmp
xchg
frstor
imul
scas
mov
mov
cwtl
adc
in
and
cmp
push
sub
fucomp
popf
icebp
fwait
nop
ret
or
sti
mov
cltd
pop
andb
xor
and
cwtl
scas
nop
jg
dec
push
lea
dec
dec
dec
jecxz
mov
dec
int3
xchg
mov
notl
notl
into
cli
mov
insb
mov
dec
popf
xchg
iret
cmpsl
jp
pop
test
dec
out
sub
push
push
and
ss
sahf
fstpl
rclb
fcompl
stos
stc
jmp
movsl
and
sarl
sub
daa
ja
dec
daa
dec
cmpsl
xchg
inc
ljmp
ljmp
int3
js
movsl
or
mov
xchg
hlt
pop
test
dec
or
mov
and
popl
out
add
stos
imul
and
xchg
fildll
imul
adc
icebp
xchg
xor
add
sub
push
lret
adc
xchg
cli
xchg
mull
jp
jbe
xor
insb
inc
lahf
jns
mov
addl
shrl
push
mov
sub
add
addr16
adc
sub
mov
xchg
pop
sub
pop
cli
jmp
negb
popa
lret
mov
dec
xor
mov
mov
inc
jecxz
jl
imul
fsubp
sub
jmp
sarl
sbb
mov
xchg
jo
pop
adc
push
xor
sbb
imul
adc
lock
jg
fbstp
rorb
fildll
das
setg
mov
inc
insb
inc
jg
mov
insb
push
jg
insb
adc
insb
mov
inc
and
fbstp
insb
mov
fildll
push
and
inc
insb
mov
push
shrb
mov
lahf
insb
fstpt
push
loop
sub
or
xchg
jbe
jle
repnz
sti
sbb
push
cwtl
xor
mov
into
push
jl
aad
add
les
iret
enter
lahf
shll
add
mov
xor
dec
nop
adc
mov
out
push
adc
push
push
leave
inc
or
mov
call
loope
fwait
mov
jne
add
fnsave
test
jne
out
push
dec
push
mov
jecxz
push
das
andb
add
pop
and
or
and
sbb
inc
add
add
push
adc
je
add
scas
push
jmp
sbb
push
sub
hlt
xor
mov
dec
mov
dec
scas
or
gs
mov
movsl
jns
inc
dec
jg
popa
enter
and
mov
into
popf
xor
cwtl
iret
imul
push
lahf
add
scas
lea
imul
and
dec
push
pop
in
lret
enter
push
pop
mov
jbe
add
clc
mov
test
xor
push
negl
mov
add
push
mov
or
mov
mov
loope
jno
scas
shrb
dec
call
xchg
insl
les
xor
movsb
mov
sahf
outsb
out
fisttpl
jp
shrl
hlt
dec
nop
test
bswap
xor
std
ljmp
mov
jnp
xchg
leave
scas
jb
xchg
cmpb
pop
jns
fdivr
cmp
xor
jl,pt
cmc
repnz
adc
je
or
inc
lcall
ljmp
push
aaa
adc
sub
test
out
in
out
mov
gs
repz
lods
clc
or
fs
ret
les
xchg
cmp
or
cmp
pop
xor
repnz
sub
xor
fisubs
inc
cwtl
lock
mov
pop
imulb
jge
pusha
out
lock
ljmp
ljmp
adc
daa
int
or
push
jg
fidivrs
pshufw
inc
add
add
add
push
adc
pushl
cmp
call
mov
cmp
cmp
lret
sbb
adc
sub
inc
outsb
push
and
loope
xor
sub
jno
ds
jle
xor
sub
pop
jle
scas
add
sbb
repz
fwait
in
div
ficoml
negl
mov
lods
cmpsl
inc
push
jge
add
and
repnz
push
mov
mov
pop
addr16
das
out
enter
es
test
jle
pop
pop
mov
ja
mov
xor
jnp
nop
push
adc
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
sahf
sub
not
movzbw
pop
push
pushl
ret
add
dec
outsl
arpl
inc
jb
add
ja
sarb
mov
andl
ljmp
rolb
mov
cld
lea
push
mov
xor
lahf
xor
jnp
imul
aas
xor
arpl
adc
movsl
mov
fmul
mov
or
fidivl
lds
adc
xor
add
stc
mov
dec
in
test
into
adc
mov
hlt
popf
cmc
sbb
js
mov
mov
pop
pusha
loop
and
scas
push
int
sub
pop
lahf
fcoml
aad
aam
mov
adc
repz
xor
mov
add
outsb
adc
outsb
lret
test
mov
cmp
mov
test
pop
scas
fistpll
ja
mov
sub
sub
outsl
sbb
lret
lds
loope
test
jp
das
adc
out
fnstsw
dec
cmp
dec
or
mov
push
shlb
xor
push
push
bound
mov
sbb
inc
aaa
sti
repnz
inc
stc
push
idivb
out
cmc
es
jnp
adc
out
iret
mov
jb
xchg
xchg
cmc
aad
jl
fdivs
mov
xchg
fdivr
repz
xorl
imul
cmpsb
lret
push
jle
and
or
sub
mov
shlb
cmp
addr16
ljmp
xchg
es
cmp
push
push
jae
aad
fwait
cmp
sub
outsl
dec
loopne
push
jle
inc
cmp
xor
lahf
test
outsl
xlat
lahf
pop
test
bound
mov
push
out
iret
repnz
mov
sub
scas
sbb
mov
add
scas
rcrl
out
test
dec
std
std
xor
dec
cmp
mov
aam
pop
jge
mov
imulb
xchg
mov
mov
aad
jo
fs
test
cmp
inc
or
push
mov
pop
xchg
stos
pop
in
fisubrl
dec
and
adc
adc
cmc
bt
rol
push
clc
clc
shr
push
jmp
ror
pushf
movb
call
push
inc
jmp
sti
mov
loopne
push
aad
push
mov
xor
pop
repz
aas
xchg
push
inc
loop
jb
outsb
sbb
inc
je
xor
mov
mov
push
in
test
dec
pop
fsts
add
xor
pop
adc
loope
dec
sbb
add
push
xorb
repz
mov
loop
inc
pushf
out
ret
mov
lods
call
mov
loope
push
adc
inc
and
mov
mov
pushf
lea
jmp
push
jmp
jmp
stc
jmp
pcmpeqd
xor
xor
mov
andb
or
bound
or
clc
dec
xor
adc
and
jg
aas
mov
test
and
test
xor
ficoml
sub
out
in
jge
sarl
push
ljmp
call
stos
scas
bound
clc
xchg
test
mov
lret
dec
jg
mov
dec
add
or
test
lea
movsb
and
push
sbb
jnp
cld
lcall
jg
mov
das
jne
cmp
pop
xchg
jns
jmp
filds
aas
jmp
dec
add
jge
pop
andl
mov
inc
test
xchg
or
xchg
lret
xchg
stos
fcoms
pop
scas
filds
sahf
ljmp
popa
inc
mov
jb
sub
in
push
fmull
lcall
push
sub
out
and
test
sub
das
in
sub
push
adc
push
test
adc
fs
rcll
aaa
xlat
cmp
shlb
sbb
dec
ret
or
nopl
push
arpl
clc
pop
lret
out
dec
inc
xor
dec
and
call
loop
sbb
cmpsl
mov
xor
shl
cmp
imul
and
scas
arpl
notl
xchg
sub
aas
loopne
push
cmpsb
loope
and
and
cmpsb
sub
ljmp
mov
push
icebp
mov
in
mov
mov
cmp
pop
mov
cwtl
pop
imul
pop
aad
es
clc
dec
lods
jle
sub
shll
adc
int
shrl
sahf
sub
sub
xor
daa
pop
psubb
and
pop
or
in
into
lahf
mov
mov
sub
cmpsl
test
add
movsb
jp
sub
adc
les
bound
add
imul
pop
adc
ja
xor
push
insl
push
fwait
das
cltd
mov
mov
mov
aam
movsl
jg
jo
jnp
sti
sbb
push
push
pushf
lods
cltd
sub
fildl
push
repnz
adc
push
mov
repnz
jns
fs
cmp
cwtl
popf
xchg
add
nop
aaa
shll
xlat
ret
arpl
and
push
mov
jbe
dec
test
int3
jl
out
push
mov
scas
or
das
aas
jp
jne
xor
mov
sti
shl
nop
adc
xor
loop
push
push
cmp
push
dec
out
popa
sub
scas
insl
mov
rclb
xlat
aas
xchg
or
mov
out
xor
les
enter
test
inc
call
inc
xchg
and
xor
in
jb
add
scas
add
cmp
push
in
sarb
sar
mov
push
inc
movsb
inc
pop
repz
lea
roll
sbb
and
in
int
sub
popa
or
mov
mov
outsb
ja
call
jno
cmovl
outsb
sub
data16
push
adc
fs
je
bt
jmp
pusha
lea
jge
lods
pushf
jmp
fwait
loop
test
or
mov
sub
into
cmpsb
or
push
data16
xchg
cmpsl
cmp
push
int3
das
sti
push
and
sub
test
mov
xchg
xchg
mov
daa
mov
lret
xor
loope
stos
mov
daa
fisttpl
insl
int3
rcrl
mov
and
inc
adc
rorl
or
imul
filds
and
jmp
in
movsb
arpl
push
adc
aam
out
test
in
call
pop
call
out
dec
lcall
aad
aam
loop
push
loope
jmp
aad
mov
mov
jp
and
pop
xchg
in
fwait
lock
xor
jae
loopne
cld
sbb
push
sub
inc
sub
or
sarb
mov
lret
pop
fcomps
andl
pop
mov
and
lahf
xchg
sub
lea
je
seto
bsf
xor
btc
sub
lahf
test
add
mov
sub
mov
shl
bts
bt
shl
shr
shr
and
not
xor
mov
call
lea
call
call
das
push
xor
mov
mov
cmp
mov
mov
mov
jl
push
ss
insl
rol
xchg
or
push
ja
mov
adc
jecxz
pop
and
pusha
mov
shrl
stos
pop
movsb
dec
pop
push
mov
or
icebp
sbb
sbb
enter
loope
xchg
sahf
mov
push
xchg
push
xor
add
or
xchg
mov
adc
sbb
adc
xchg
xor
sahf
cmpsl
aaa
out
adc
sbb
pop
mov
aam
pop
cmp
ja
push
or
shlb
cmpsb
pop
mov
adc
or
lea
scas
jo
subb
pop
push
ret
mov
jmp
add
sbb
out
ja
pop
clc
mov
popf
mov
jl
sub
xor
adcl
rclb
imul
mov
sbb
pop
sbb
jp
dec
push
loop
mov
mov
out
dec
push
adc
jno
mov
pop
cmpsl
xchg
aad
movsl
jle
lret
adc
jnp
jl
std
push
sbb
pusha
cs
leave
les
addl
and
mov
or
inc
push
inc
add
leave
orl
data16
std
xor
sbb
inc
or
xor
sbb
pop
push
adc
mov
out
loop
sub
mov
cmp
out
mov
in
xor
cld
jae
adc
jb
inc
push
jl
cwtl
mov
addr16
xor
nop
adc
int3
dec
imul
loopne
lea
push
pop
clc
xor
outsl
in
lret
aas
add
sub
sbb
cli
movsb
jae
dec
adc
sub
sbb
push
jmp
or
popl
inc
add
shll
push
adc
add
add
outsl
mov
iret
push
mov
push
xor
cmp
fidivs
out
lcall
and
aad
inc
cmpsb
jb
sbb
mov
mov
lods
cmp
adc
sti
xor
mov
scas
je
int3
enter
mov
and
aas
or
movsb
dec
sub
rcll
push
xchg
mov
adc
sub
pushf
arpl
inc
mov
das
add
out
addr16
popa
xor
pavgw
xor
xchg
je
test
sbbb
cmp
sub
hlt
xor
subb
lock
push
cmp
insb
xchg
cmpsb
int
mov
int3
jp
or
jne
xor
movsb
orb
or
jmp
or
mov
mov
cmp
inc
xor
pop
sub
sbb
outsb
stos
mov
pushf
and
pop
or
mov
mov
xchg
or
test
add
arpl
dec
pop
aaa
add
inc
sub
insl
xor
std
push
mov
popa
dec
lods
iret
mov
push
add
dec
inc
push
stos
xor
xchg
dec
pop
jl
fmul
xchg
mov
mov
add
mov
dec
inc
inc
mov
lahf
aaa
sbb
xor
in
fsts
cmp
mov
test
popf
cmpsl
in
loop
in
pusha
stos
out
sub
push
adc
mov
sbb
xchg
mov
lret
scas
dec
test
and
mov
shrl
fnstsw
stc
and
jbe
aad
dec
cmp
cmc
sub
xchg
fisubs
sti
cmp
xchg
jecxz
adc
xchg
fistps
aad
pop
push
adc
fs
jo
xor
cs
insb
add
nop
mov
pusha
pushf
pusha
lea
jmp
call
fs
add
sahf
lock
pop
pop
out
push
adcl
daa
ljmp
outsl
sarl
and
cmp
xchg
or
push
and
lea
sbb
imul
add
mov
movsb
pop
cmp
add
out
cmp
js
sbb
pushf
int
jne
sub
push
filds
mov
mov
int
cld
hlt
iret
enter
push
lods
out
fildll
xchg
insb
push
adc
add
ret
mov
xchg
aam
imul
fildl
bound
push
jns
inc
cmpsb
jb
mov
push
hlt
jecxz
cs
jno
ret
inc
test
sbb
imul
jb
nop
dec
push
push
movl
fwait
and
sub
cli
stc
xor
dec
stos
into
iret
jmp
movsl
loopne
push
lods
ljmp
fisubl
push
adc
jmp
call
pop
std
std
mov
pusha
stc
mov
ret
jnp
lcall
data16
mov
pop
loopne
xor
mov
jl
in
mov
in
and
aam
push
int
mov
clc
xchg
push
pop
test
and
mov
inc
cmpsb
into
shr
xchg
push
push
lods
and
dec
movsb
inc
jge
lret
inc
cmpsb
add
jmp
adc
dec
pusha
mov
bswap
jmp
call
xor
mov
jge
or
or
loope
jecxz
cs
outsb
pop
cs
ds
inc
aam
cmp
jmp
mov
push
cmpsb
mov
pop
or
pop
push
inc
sub
adc
sbbb
pop
mov
rcrl
mov
sub
jecxz
pop
scas
mov
add
jge
pop
sub
test
cs
and
cmpsl
out
addr16
adc
and
push
out
arpl
shll
pop
insl
push
sbbl
mov
leave
mov
fucom
mov
test
xchg
mov
cli
and
sbb
clc
xor
sub
pushf
adc
lahf
xchg
jne
push
lods
aas
sub
sbb
js
cmpsb
adc
dec
xchg
xor
cmp
dec
jmp
mov
popf
sub
cltd
push
sbb
mov
adc
inc
and
lods
rolb
loope
imul
imul
xchg
rclb
push
xor
sbb
hlt
cmpsb
sahf
icebp
das
fwait
out
push
sbb
dec
loope
out
repz
pop
push
sbb
sbb
leave
adc
ret
xchg
aas
xor
xor
roll
mov
xchg
hlt
mov
addr16
sub
loope
pop
addr16
add
pop
add
push
xor
ljmp
cmp
call
sub
out
sub
stos
push
push
adc
dec
mov
add
in
shlb
shll
fnstenv
mov
lds
into
lahf
dec
lahf
jno
stos
pop
shl
jmp
ljmp
imul
call
inc
nop
push
add
mov
or
arpl
mov
xor
jge
ret
enter
les
or
or
or
push
adc
jne
ret
cmpsl
rorl
pushf
je
ja
ja
jb
jnp
negb
or
inc
aam
es
pop
repz
loop
cmc
stc
hlt
xor
and
dec
adc
sbb
in
out
call
and
movsl
ss
gs
push
dec
dec
roll
test
sub
daa
in
stc
mov
ret
popf
xorb
negl
sub
out
mov
ja
imul
ljmp
mov
sti
mov
mov
jge
mov
enter
addb
push
inc
add
adc
mov
add
call
lea
call
push
pushl
pushl
mov
adc
jmp
dec
cmp
jnp
pop
addr16
xchg
jne
hlt
xchg
lds
adc
sahf
jge
je
adc
adc
lahf
inc
push
jge
test
add
push
into
xorl
push
sub
shlb
sbb
std
mov
adc
stos
cwtl
pop
sti
and
jge
push
fwait
xchg
xchg
pusha
lods
xchg
insl
push
jo
arpl
cmpsl
cmpsl
xchg
sbbl
movsb
pop
scas
lret
mov
das
push
push
jne
ret
insb
sbb
cli
push
jo
cltd
rclb
fcomps
push
loop
sbb
push
adc
jmp
adc
mov
jnp
cmc
and
cmp
add
pushf
lea
jmp
std
mov
lret
mov
adc
hlt
xchg
notb
fchs
inc
lahf
jb
enter
dec
pushf
mul
stc
dec
fdiv
sub
insb
pop
mov
inc
cmp
je
xor
pop
jnp
jnp
test
daa
pop
stc
mov
push
mov
mov
or
sub
out
sub
jmp
jmp
adc
stos
mov
xchg
fcmovbe
fwait
and
adc
cltd
jno
stc
cwtl
call
icebp
fcoml
ficoms
test
out
cmc
and
and
out
fildl
or
pop
fmulp
imul
stc
mov
or
jl
mov
aas
sub
mov
in
cmpsb
mov
andl
inc
and
ret
in
call
lods
in
mov
push
adc
mov
mov
loope
lcall
or
xor
lcall
imul
sbb
dec
and
and
lods
jns
test
loope
jnp
jne
es
or
popa
and
mov
mov
fwait
scas
sar
and
lods
cld
or
fbstp
push
inc
jge
loop
outsb
hlt
stos
int
out
add
lret
xor
fs
adc
mov
jae
xchg
mov
jp
sbb
sub
jae
adc
fisttpll
adc
xor
fiadds
lret
scas
inc
pop
shll
xorl
add
xchg
inc
test
mov
js
andl
cmp
loopne
mov
popa
xor
xchg
lret
xchg
push
ss
test
push
dec
sub
cmove
push
sbb
jb
repnz
je
hlt
xor
add
loope
ret
jmp
xchg
or
loopne
out
popa
add
fucomp
inc
xor
mov
or
adc
nop
sarl
xchg
xchg
cld
mov
xchg
dec
cmp
push
sbb
mov
or
push
stc
lret
cwtl
push
mov
or
mov
and
adcb
cli
adc
mov
xchg
shlb
jg
jg
hlt
xor
jb
push
adc
fwait
pop
push
pop
cmc
cmc
sub
lea
pop
pusha
setnp
mov
mov
pushl
mov
lea
call
jnp
mov
in
clc
jmp
mov
insb
mov
dec
movsl
xor
pop
jp
add
add
sub
cmp
push
fcoms
in
pop
xor
rcrb
aaa
fildll
inc
test
pop
movsl
ds
imul
mov
push
fcmovnbe
aam
into
and
scas
jb
push
dec
or
fdivrl
xlat
mov
test
out
pop
push
cmpsl
adc
in
pop
pop
call
mov
dec
insb
loope
in
sahf
mov
in
pusha
movsb
in
outsb
dec
push
adc
out
cmp
mov
sti
push
fwait
inc
cmpsl
and
ret
lods
iret
sub
inc
cmc
leave
in
pushf
dec
jns
or
dec
mov
xchg
scas
mov
push
adc
in
inc
ret
ja
adcl
cltd
pop
xor
outsl
js
ficoms
mov
or
sbb
data16
jle
jge
movsl
cmpsl
push
mov
add
xchg
movsl
cmp
dec
test
cmc
sarb
shlb
in
invd
dec
add
or
into
or
push
and
xchg
mov
push
lods
clc
stc
pushf
rol
pusha
add
push
not
push
jmp
lea
pushf
movl
call
fdivs
cmp
mulb
test
sub
dec
scas
push
enter
ret
insl
pushf
jne
bound
sbb
jecxz
add
jecxz
adc
cmp
sub
cltd
add
xchg
cmpsl
mov
sahf
mov
sub
je
outsl
sbb
fsts
pop
lods
or
insb
pop
add
imul
xlat
mov
rcrl
pop
test
add
es
push
jo
je
xchg
xchg
and
sub
testl
daa
and
lds
pop
push
pop
push
fwait
pop
sbb
outsl
push
cld
mov
outsl
inc
push
cmp
jg
mov
pop
mov
not
push
adc
add
les
jne
lea
mov
cmc
adc
sbb
push
cmp
subl
dec
inc
jl
fcoml
std
sub
lcall
dec
in
and
xor
mov
sbb
xchg
pop
mov
shll
sub
jg
push
scas
push
sub
jnp
loop
stc
fimuls
xor
jae
dec
xor
jnp
mov
int
push
or
gs
xchg
scas
call
popw
mov
psrlq
fldcw
arpl
shlb
stos
jbe
adc
push
insl
sub
inc
xchg
cmp
dec
aas
dec
mov
or
lock
dec
sbb
add
cmp
inc
cmpsw
popf
push
sbb
xchg
push
cwtl
mov
xchg
push
lcall
sbb
and
lods
lret
cmpsl
ret
mov
test
int3
loope
stc
jo
cmp
sub
ds
ss
inc
add
mov
call
pop
mov
add
mov
or
divb
mov
notl
xchg
sub
pop
fdivp
jmp
and
scas
xor
sbb
loop
adc
adc
pop
lahf
pop
jg
adc
or
push
inc
mov
imul
insl
cmp
mov
dec
cmp
push
lcall
fsubrp
aam
or
stos
lods
jb
cltd
xchg
pop
sti
push
mov
add
xchg
mov
push
ret
mov
nop
xchg
cld
loopne
dec
jno
pop
cmp
or
push
or
adc
cmc
add
jbe
nop
push
xchg
push
pop
fidivrs
sbb
or
out
shlb
xchg
add
dec
push
mov
addr16
jecxz
jmp
push
adc
bt
jmp
cmp
push
shr
mov
call
dec
test
mov
mov
mov
cmp
mov
bswap
lea
not
sets
mov
movb
jmp
stc
cmp
movb
add
movw
stc
mov
jmp
cli
out
mov
stos
and
push
mov
pop
jne
pop
cs
fisubs
ss
adc
pop
push
inc
mov
outsb
or
fadds
sti
into
push
mov
xor
sub
js
in
fcoml
or
lods
add
sbb
jns
mov
add
push
daa
push
rorl
in
mov
movsb
xor
repz
mov
pop
addr16
out
lock
jns
jne
ja
jo
jp
icebp
xor
jno
adc
push
mov
xchg
call
rclb
and
jae
pushf
jmp
clc
stc
clc
cmp
mov
mov
jmp
aas
inc
and
movsb
mov
inc
pop
mov
popa
add
mov
test
or
imul
fstl
aam
stos
nop
push
enter
insb
inc
ljmp
lods
inc
adc
loopne
sbb
or
daa
stc
inc
shrb
cmp
and
loope
sbb
sbb
mov
jg
and
imul
lea
mov
cmp
jp
or
notb
mov
push
fisubs
fnstcw
adc
inc
cli
rorl
dec
test
sub
sub
xorl
ss
sahf
inc
cltd
sub
pop
push
dec
push
pop
lret
iret
xor
xchg
jb
sub
out
adc
out
scas
sub
gs
sbb
push
dec
add
iret
mov
test
sbb
lahf
xor
mov
shl
add
xchg
or
mov
cld
arpl
fwait
add
add
adc
ljmp
fsubrl
add
add
and
ja
pushf
movb
inc
mov
mov
inc
pushl
not
xor
ror
xchg
neg
clc
add
aas
mov
sete
rcl
rcr
pusha
mov
stc
test
mov
pusha
call
lods
mov
mov
push
addr16
push
or
mov
insl
das
push
xchg
add
pop
adc
pop
fcoms
lds
and
sbbb
jo
and
push
adc
jmp
xchg
pusha
bsf
daa
mov
call
data16
test
jmp
mov
adc
insl
vandnps
rep
jmp
dec
out
pop
jp
pop
int3
fs
dec
mov
out
fadd
pusha
jge
loopne
cmp
repnz
pushf
pop
cmp
jmp
adc
sbb
mov
out
cmpsl
add
adc
dec
push
pop
popa
pop
pop
iret
sbb
gs
add
push
jne
mov
inc
push
cli
lods
into
roll
add
movl
mov
mov
lcall
or
pusha
pushf
lea
jmp
pushf
pusha
call
arpl
fs
xor
cs
insb
add
inc
and
jbe
fs
jns
pusha
dec
clc
pusha
rol
pushl
pushf
lea
call
stc
clc
cmp
push
movb
pusha
lea
jae
jmp
in
nop
std
fcomps
mov
mov
repz
lds
notb
xchg
mov
cmp
cmp
dec
js
or
add
cmp
push
dec
xlat
push
pop
movsb
js
lret
std
outsl
aad
pop
lahf
cwtl
push
adc
stos
clc
lcall
add
sub
push
xor
cmp
pop
xor
leave
loopne
pop
rcll
sbbb
out
lcall
mov
mov
mov
or
dec
dec
push
sbb
cltd
jg
fyl2xp1
call
cmp
jl
bound
and
jne
jge
inc
pop
dec
sub
fdivs
mov
pop
dec
andl
lcall
lods
push
push
lcall
mov
loop
ror
ror
rol
test
add
dec
not
mov
not
not
mov
mov
call
cld
pop
loop
loopne
push
push
cmp
pop
xor
mov
inc
or
push
ljmp
add
imul
lds
or
mov
mov
pop
sbb
xor
fcmovu
mov
cmp
add
mov
rol
xchg
pusha
aas
mov
jno
sbb
add
in
ja
jae
cli
aas
stc
dec
cld
mov
cmp
pop
push
adc
andb
mov
mov
fisttps
sarl
cmp
ss
push
out
mov
cld
out
xlat
jp
xchg
dec
out
es
icebp
iret
shlb
pop
dec
mov
loop
xchg
ss
movsb
repnz
pop
push
mov
jo
sbb
add
lret
imul
imul
fisubrl
int
adc
jmp
ss
add
mov
lds
repz
fwait
aas
mov
les
fldt
adc
add
jbe
inc
loopne
adc
jl
and
sbb
sbb
fidivrs
arpl
sbb
or
adc
fsubs
sbb
pop
ret
stos
mov
push
pop
repz
xor
ljmp
pop
testl
scas
ja
adc
mov
sub
dec
outsb
sub
push
imul
mov
mov
inc
push
lods
dec
out
lret
jge
adc
in
or
mov
out
add
or
lret
rclb
aad
inc
jmp
test
test
stos
pop
fisttpll
and
cwtl
jg
out
add
mov
xchg
mov
mov
or
lds
out
lods
outsl
test
mov
xchg
sub
fisubl
cmp
lea
lret
xchg
push
mov
rolb
sbb
adc
jmp
adc
cli
adc
icebp
xchg
jg
icebp
lcall
push
hlt
xor
jno
sahf
pop
jle
lock
adc
cmp
imul
xchg
sti
cmpl
pop
pop
jle
adc
add
mov
mov
cmp
lahf
push
lret
enter
in
pop
pop
test
jge
dec
jge
or
xchg
xchg
mov
xor
cmc
rcll
in
fnstenv
pop
push
popa
rclb
test
movsb
or
or
sbb
ss
mov
cmp
mov
mov
jae
adc
jmp
int
aad
push
push
daa
jns
clc
es
lods
stc
and
ret
mov
cli
ret
cltd
add
mov
and
stos
mov
mov
adc
popa
nop
addb
add
sbb
mov
loope
sbb
test
pop
imul
pop
add
andb
std
cltd
cltd
mov
mov
in
popa
sub
adc
mov
aam
stc
xor
clc
pushf
ror
movb
dec
push
cmp
cmp
cwtl
push
jmp
inc
out
or
push
xchg
dec
push
xor
shll
mov
pop
fs
in
rorl
mov
cmp
inc
hlt
sub
jle
jne
and
pop
adc
shrl
push
jmp
cmpsb
dec
push
aam
into
sub
loopne
popf
ret
ljmp
lea
sti
fmuls
ret
repnz
sbb
aad
mov
loop
inc
push
in
lahf
cmp
lret
cmp
dec
jns
jg
push
mov
mov
adc
rol
and
das
ficomps
sbbl
stc
incl
add
adc
decl
enter
and
pushl
cmc
rol
lea
jp
pushf
add
pusha
mov
push
pushf
not
lea
jno
push
push
dec
push
pushl
jmp
hlt
ljmp
inc
lea
fdivrl
push
mov
cmp
mov
jnp
or
out
inc
test
fsub
add
in
mov
rep
movsb
cs
adc
cmc
rol
negb
cmp
repnz
mov
adc
fnsave
pop
testl
jo
pusha
inc
stos
jo
push
test
xor
xchg
mov
push
xchg
fistps
pop
lcall
fdivr
push
adc
mov
pusha
rcr
sub
lea
push
lea
jno
xchg
xchg
lods
setle
rol
rol
test
add
inc
not
push
dec
mov
bt
rol
pushf
pushf
mov
stos
mov
mov
lea
jmp
call
test
scas
repz
shlb
push
mov
add
cmp
pushf
stos
gs
jp
iret
add
lock
mov
jg
pop
xor
jno
loopne
negb
test
inc
popa
lret
fdivs
jo
xor
jbe
repnz
xor
mov
aas
sbb
int
mov
sub
mov
sbb
push
lods
xor
sbb
insl
xchg
sahf
cmpb
and
push
mov
dec
adc
jmp
sub
in
xchg
mov
cmp
mov
xlat
adc
out
ss
adc
test
aam
mov
stos
in
rol
loopne
mov
jno
adc
mulb
cmp
jge
mov
jl
iret
sbb
pushf
mov
xor
mov
jge
addr16
cmp
div
aad
fisubs
adc
add
inc
push
je
pop
jb
out
mov
sub
xor
imul
out
jbe
lea
fisubrl
icebp
inc
lcall
nop
mov
test
imul
out
or
xor
jbe
imul
pop
adcl
or
ljmp
dec
pop
cltd
xor
pop
push
mov
inc
fldt
shl
call
jb
xchg
lea
repnz
clc
xchg
jno
adc
aas
mov
clc
addr16
sub
and
xchg
mov
inc
mov
or
int3
add
jnp
daa
push
clc
mov
jmp
cmc
xor
cmp
cmp
push
adc
sar
lea
jns
mov
lea
cmc
movsbw
rcr
mov
cmc
call
repz
in
mov
cmc
dec
test
jo
icebp
adc
mull
add
sti
cli
jae
fiadds
mov
enter
rcl
inc
inc
sbb
adc
in
mov
lods
cmp
mov
inc
xchg
mul
inc
pop
adc
data16
icebp
dec
sub
lock
cmpsb
push
push
stos
popf
bound
sbb
or
xchg
sub
sbb
andb
mov
cmp
xlat
pop
push
adc
xchg
push
xchg
pop
sbb
adc
fs
jo
ja
pusha
push
call
cmp
fbstp
hlt
pop
icebp
sbb
adc
cmpsl
int
xor
fucomp
mov
insb
push
les
xor
dec
inc
mov
sbb
inc
movsl
push
sbb
jg
jle
xchg
dec
pop
js
pop
lea
xchg
shrb
adc
pop
mov
and
xor
dec
or
mov
push
lret
lcall
sbb
fwait
xor
stc
ds
mov
xor
push
adc
push
mov
pop
push
sub
repz
sub
int
jno
lds
and
negb
inc
cmpsb
inc
pusha
stos
pop
int
and
mov
aam
add
or
pop
stos
fadd
addr16
mov
popf
xor
js
add
pusha
lret
loop
jno
push
add
or
test
mov
push
fnstsw
mov
rorl
fdivrp
pop
jnp
push
ficoml
fstps
rcll
adc
loope
add
ret
ja
idiv
inc
rcrb
jmp
in
add
call
inc
add
dec
push
cmpb
push
popa
sbb
jle
mov
or
and
pop
or
incb
out
and
ret
push
add
pop
sub
data16
jbe
nop
jbe
into
mov
xchg
ss
sbb
pop
fcoms
cmp
adc
sub
jmp
inc
mov
lea
dec
jp
inc
push
adc
push
inc
mov
sbb
and
sub
inc
xchg
test
jns
aam
ss
ss
mov
aas
jecxz
mov
div
aaa
aad
and
adc
mov
nop
inc
outsl
mov
sub
push
icebp
sub
add
xor
push
pop
jge
cmp
or
cmp
pop
icebp
jmp
cmc
aaa
shlb
mov
ds
push
mov
jp
jg
mov
or
bound
insb
lods
fwait
mov
xchg
dec
push
adc
pushl
popfw
push
movb
mov
inc
call
icebp
imul
sahf
mov
jg
negl
lcall
je
inc
js
jne
adc
add
push
xchg
xchg
nop
add
cli
dec
xor
jno
add
adc
movsl
add
xchg
xor
sbb
sbb
lcall
repz
xor
jns
adc
ja
push
push
sub
out
push
adc
add
cmpb
jmp
lea
jae
jmp
pushf
mov
movl
pushf
pushl
pusha
pushf
lea
jmp
jmp
in
and
add
adcl
sbb
sahf
ja
jbe
lcall
jno
iret
imul
mov
subl
sub
int
push
lret
rolb
xor
push
push
rcrl
cmpsl
mov
and
cmpsl
rorb
fistpl
mov
jge
and
imull
push
mov
push
imulb
fldenv
bound
stos
loopne
insl
sub
pop
pusha
add
bts
pushf
shr
bswap
mov
not
rcl
add
movzbw
movzbl
mov
movb
push
mov
push
push
lods
pushf
cmp
cmc
push
neg
bt
xor
pushf
pushf
clc
clc
rol
call
mov
lea
not
pop
pusha
pusha
pushf
pushf
pushl
ret
sbb
xor
add
xchg
bt
jmp
push
lea
jae
cmc
test
add
pushf
movl
mov
pusha
push
lea
jmp
add
inc
js
je
jb
arpl
jae
add
pusha
jmp
aas
xchg
jp
xlat
icebp
dec
cmpb
mov
mov
jge
adc
and
xchg
cli
into
pop
jbe
popf
add
sbb
mov
xlat
xchg
sbb
xor
rcr
pop
jg
outsl
movsb
pushf
sub
daa
fcmovbe
xchg
cmpsb
cwtl
out
cmp
mov
stos
test
push
push
and
sub
cmp
js
sub
scas
lea
cmp
hlt
jb
rclb
fwait
aas
and
pop
scas
aas
jmp
and
and
adc
cmp
sbb
rcl
adc
scas
xchg
xlat
xchg
pop
call
push
adc
mov
xor
dec
insl
pop
mov
inc
mov
les
sbb
add
adc
mov
cmp
push
pop
and
fs
pop
jbe
dec
out
mov
mov
in
cmpsl
pop
push
jle
repz
xchg
mov
jg
xchg
and
inc
mov
iret
dec
outsl
dec
int3
call
into
or
rolb
cmp
lods
push
adc
xchg
cmpb
mov
jmp
pusha
pusha
lea
call
stc
sub
call
mov
jmp
loope
enter
out
adc
dec
sub
scas
int
hlt
and
stos
add
sbb
fisttpl
cmpsb
inc
sub
enter
push
push
pusha
dec
inc
push
add
iret
inc
push
stc
loop
push
lea
clc
jmp
pop
inc
or
inc
xor
nop
mov
add
jecxz
mov
push
popf
mov
pop
subb
out
scas
jno
sbb
addl
fbld
sbb
shl
mov
adc
push
fistpl
pop
adc
adc
cmp
add
jmp
sahf
push
mov
mov
jg
insb
fisttps
movq
insb
fcmovnbe
dec
push
fs
jne
pushf
jmp
movzbw
mov
mov
mov
jmp
dec
pusha
jmp
aas
xchg
icebp
push
mul
sbb
push
jecxz
pop
add
pusha
add
and
sbb
fucomp
mov
imul
xchg
fldl
sbb
cmp
ror
iret
inc
int
xchg
push
fsubrs
jno
xlat
das
je
fldl
sbb
movsl
lea
repnz
jg
insb
adc
bound
cmp
jecxz
push
sbb
cli
lret
jge
jo
repnz
rcrb
shrb
pop
test
sahf
ljmp
inc
sbb
jg
lock
mov
and
mov
jecxz
mov
cmc
push
repz
lods
mov
imul
out
inc
add
push
cld
loopne
inc
std
testb
loope
xchg
mov
pop
outsl
imulb
fcomp
push
mov
mov
xchg
ret
insl
cmc
sub
inc
sti
enter
fistl
stos
out
mov
push
adc
adc
sub
test
shrd
mov
jg
cmp
pusha
lea
jno
push
lea
ja
jmp
loopne
clc
fcomp
stc
mov
lret
mov
lret
sub
sub
sub
jmp
lea
or
ja
mov
push
jnp
roll
inc
push
jne
frstor
and
pop
dec
and
test
inc
xor
in
dec
xor
mov
fsubl
daa
and
fiadds
inc
loopne
aad
imul
xchg
aam
mov
out
jecxz
mov
sbb
sub
pop
push
pop
out
adc
and
push
fwait
pop
sbb
fwait
shl
rclb
shl
push
adc
imulb
xchg
insb
mov
mov
inc
stos
inc
pop
leave
sub
lods
mov
jle
dec
jo
mov
or
or
pop
jg
insb
lods
lahf
sub
inc
es
adc
in
mov
jno
xlat
or
fiaddl
out
fs
push
mov
into
dec
jne
and
or
ficompl
pusha
mov
cli
decb
imul
dec
cs
shrl
dec
or
lods
leave
lret
add
mov
adc
push
mov
test
lods
stc
call
push
mov
lea
jge
push
pushf
lea
call
push
mov
push
lea
jmp
sahf
out
and
inc
cmpsl
jp
shrl
cmpsb
icebp
scas
pop
je
jle
int
leave
mov
push
xchg
inc
imul
ja
push
mov
pop
fnstcw
cmp
mov
push
mov
sbb
mov
pop
mov
adc
xorb
cld
inc
add
sbb
sub
aam
and
xchg
wrmsr
push
xor
mov
or
stos
jae
jg
and
jecxz
mov
xchg
dec
add
jne
jl
loopne
addr16
inc
ja
aam
out
aam
push
adc
shlb
repnz
adc
stc
sub
js
icebp
mov
xchg
hlt
adc
fwait
stc
adc
push
cli
pop
pop
sub
das
cmp
ret
inc
mov
mov
xchg
adc
xchg
imul
sbb
dec
repnz
lahf
xchg
xor
dec
or
shr
aas
adc
lea
imul
bound
dec
dec
xchg
les
or
ret
add
ja
xor
push
jno
xor
xor
mov
fstpt
pop
cld
mov
xchg
jp
mov
test
inc
jae
jo
rcrl
orb
add
negb
ljmp
rcll
and
sub
sbb
cmp
mov
movsl
int
and
jle
in
jmp
icebp
mov
adc
cmpsb
iret
fwait
lods
imul
loop
in
push
dec
lea
push
out
dec
imul
or
lods
notb
cs
sbb
dec
jne
loopne
dec
repz
or
jne
or
pop
sahf
mov
enter
stos
add
sahf
xchg
mov
lcall
fwait
lea
jmp
js
cmp
icebp
ljmp
jb
or
xchg
mov
inc
inc
sbb
mov
jecxz
pop
aad
in
scas
scas
popa
in
call
inc
sbb
jge
and
out
mov
mov
add
imul
mov
add
rorl
jl
icebp
leave
mov
divl
fldl
inc
and
cmpsl
inc
mov
add
ja
mov
imul
test
bound
cmpsl
aad
xor
fcmovnb
ret
fnsave
pop
out
test
in
jmp
or
ljmp
arpl
push
je
inc
add
inc
jnp
fdivrl
jns
icebp
inc
clc
mov
jp
push
adc
sbb
add
test
outsl
call
lea
call
push
lea
jmp
push
sbb
ret
or
push
aaa
pop
mov
cmp
xlat
jae
add
inc
mov
test
cmp
inc
pop
popa
test
dec
dec
push
add
push
xor
stc
inc
rcrb
in
xchg
sub
dec
in
fisubrs
sub
insl
xor
inc
call
mov
int3
insb
or
aad
aas
mov
fildll
lcall
cmp
dec
lret
xchg
mov
ja
sti
iret
jne
or
jg
jg
pop
push
adc
pop
ret
das
aam
adc
bound
fidivrl
shlb
cmpb
dec
mov
mov
lods
add
out
das
les
mov
cwtl
and
xchg
mov
mov
sbb
lcall
int3
cmpsb
inc
add
cmc
and
add
mov
jns
add
in
xor
sub
out
iret
mov
leave
dec
arpl
aas
pop
pop
in
push
push
xlat
xchg
pop
cwtl
test
rcrb
je
out
aaa
mov
ror
pushf
shl
shl
mov
cmc
mov
bswap
movsbw
mov
push
call
and
in
mov
push
mov
popf
jp
jo
cmc
mov
dec
out
or
ret
pop
cli
into
icebp
insb
xlat
and
das
push
lock
inc
test
and
cmp
sahf
sarl
jbe
inc
xor
test
scas
mov
lret
in
in
mov
pop
dec
push
data16
stc
push
or
movsl
or
outsl
shll
icebp
addl
xor
enter
sbb
outsb
lock
xor
pop
and
add
cld
sbb
push
adc
adc
fldl2t
rcrl
adc
adc
add
xchg
movl
and
call
stc
jmp
cs
inc
inc
push
loopne
mov
movsl
dec
sbb
and
lret
sub
pushf
inc
jecxz
pop
and
dec
jae
test
lret
xor
outsl
inc
mov
in
mov
xor
pusha
xchg
inc
xchg
jp
adc
xchg
shll
jmp
xor
repnz
pop
daa
add
iret
cmpsl
ret
in
xchg
lods
insb
daa
out
scas
out
sub
jae
dec
fcomps
mov
mov
lea
call
ret
xor
jp
mov
jg
clc
xchg
je
jle
jg
jbe
outsl
mov
ret
push
int
xchg
fnstcw
fidivrl
lcall
addr16
mov
sub
lea
inc
mov
pop
movsl
mov
push
push
push
pop
and
xchg
clc
or
loopne
popf
loop
into
fprem
inc
xor
iret
dec
xchg
jge
jecxz
add
jnp
and
xor
mov
cmp
mov
loopne
pop
add
pop
in
out
or
pop
sbb
xor
hlt
push
xchg
mov
jne
icebp
mov
xor
add
push
adc
or
cmc
jne
lea
jno
push
jmp
cmpb
call
cmp
pushf
lea
ja
jmp
bt
xor
js
call
pusha
pushl
lea
jne
jae
dec
pushf
mov
lea
jbe
inc
pusha
inc
mov
pusha
pushl
mov
lea
jmp
pushl
lea
jne
sar
sbb
mov
pusha
bt
cmp
add
cmp
bt
jmp
sti
mov
rol
mov
sub
and
nop
dec
cs
lahf
movsl
or
mov
mov
dec
fdivl
in
push
outsl
enter
cmpsl
inc
mov
sub
lret
lret
dec
cmpsl
cltd
sbb
rcl
hlt
out
dec
jb
les
inc
or
std
mov
subl
jge
xor
aad
pusha
dec
jl
push
mov
cld
andb
mov
rol
int3
mov
xorb
enter
jno
ret
bound
pop
sub
jmp
push
mov
mov
xor
dec
call
inc
sbb
rcll
sbb
xor
mov
fwait
je
jo
addr16
sbb
inc
xor
lahf
aam
insl
mov
addr16
pop
movb
push
jne
icebp
push
xor
nop
aam
push
sbb
gs
sbb
push
adc
int3
adc
scas
pusha
pushf
lea
jne
xchg
btr
mov
and
sub
movsbw
not
mov
pusha
lea
jmp
jmp
cmp
pushf
push
pusha
push
lea
ja
movsbw
mov
pop
setl
pop
jmp
lcall
jle
in
in
lahf
cld
pushf
ja
jp
leave
pop
notb
mov
sbbb
sbb
in
add
cmp
jo
fcomp
mov
gs
cltd
xor
or
shrb
xor
jecxz
push
xchg
inc
cltd
ret
mulb
add
or
std
jle
movsb
dec
ds
xchg
aam
jle
push
sbb
jp
mov
insb
sbb
jge
and
bound
jmp
sbb
fsubl
add
clc
clc
bt
test
pusha
cmp
movb
call
lea
jb
clc
stc
jmp
inc
xor
add
xchg
pop
mov
xchg
out
xlat
or
mov
push
mov
in
outsl
and
push
mov
aas
inc
ret
or
push
cmp
stos
loope
pop
test
and
pop
rorb
mov
iret
add
sbb
pusha
scas
jne
cmpsb
xor
insl
data16
add
loop
and
cmpsb
jecxz
out
sub
add
inc
fsqrt
xchg
into
in
push
xchg
adc
mov
pop
mov
xchg
xchg
fcos
daa
or
pusha
push
pop
call
jne
xor
popa
or
inc
ret
sub
dec
xchg
jnp
add
arpl
mov
mov
loopne
nop
cmp
js
mov
enter
push
ljmp
roll
pop
rolb
push
adc
xor
and
rolb
movw
movl
push
lea
jmp
imul
insb
add
add
call
pushf
pushl
lea
jno
ja
setne
inc
not
pusha
pusha
jmp
nop
mov
mov
pop
cmp
xchg
lods
jp
stc
jnp
lods
insl
outsl
mov
inc
je
or
mov
cmpsl
movsb
pop
std
cmpsl
pop
shr
rcrb
pop
cltd
pop
adc
and
into
xor
sub
cmpsl
dec
subb
aam
mov
outsb
adc
sbbl
in
pop
mov
cmp
ja
mov
push
arpl
xor
mov
push
adc
scas
add
add
shll
je,pn
es
scas
dec
mov
jns
vmovaps
hlt
push
insl
mov
mov
mov
or
mov
xchg
cmp
inc
testl
dec
ret
pop
sbb
icebp
ja
cltd
shl
sub
popa
ret
and
pop
push
mov
sbb
jmp
adc
cmc
rol
out
std
popa
les
sub
or
xlat
mov
pop
and
out
push
mov
push
and
xchg
inc
add
or
inc
push
adc
iret
bound
mov
and
jmp
jnp
pusha
dec
pusha
cmc
bt
bt
rol
cld
pushw
popfw
jmp
loop
or
cli
jmp
imul
push
push
bound
sub
js
ret
divl
insl
adc
ljmp
fwait
ret
fsubs
stos
pusha
push
or
jns
mov
stc
mov
adc
outsb
or
pop
imul
jmp
aas
dec
inc
add
cmpsl
jge
push
sub
out
cmpsl
pop
shrl
xchg
not
xchg
fsts
xlat
adc
call
insb
jmp
das
add
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
call
add
inc
gs
jo
outsb
inc
imul
add
data16
or
dec
rcrl
iret
sub
inc
sub
dec
daa
ret
and
pop
daa
in
xchg
dec
out
jp
cmp
insl
out
dec
xchg
adc
nop
aas
mov
nop
dec
aas
dec
pop
push
dec
sub
mov
pop
mov
push
and
clc
sti
dec
adc
inc
lahf
mov
repz
pop
mov
sub
lods
inc
jp
insl
movsl
add
xchg
or
jno
mov
imul
cs
mov
dec
ss
fstpl
repz
cmp
mov
mov
repnz
add
imul
ja
in
dec
cld
movb
and
imul
cmpsl
xchg
mov
clc
roll
ret
in
inc
cmp
scas
inc
arpl
test
cmp
shll
pop
clc
fwait
into
out
loop
mov
sahf
shl
sar
stc
add
loop
xor
out
stos
jne
pushf
fistps
inc
imul
imul
decb
mov
repz
push
adc
cmp
mov
push
lea
jae
push
pushf
push
lea
jmp
call
push
xor
pushf
dec
jmp
lods
add
movl
cltd
ret
test
es
int3
sub
sub
xor
lar
test
in
adc
pop
addr16
inc
cmp
lcall
subl
aad
pop
cltd
xchg
andl
inc
jnp
cmp
jge
push
in
cmp
jecxz
pop
push
clc
mov
pop
add
push
push
lret
pop
lahf
pushf
xchg
mov
daa
scas
mov
pop
out
aas
int
or
lret
xchg
add
divb
xchg
shlb
out
lret
sbb
cld
cmpsb
mov
leave
jp
jecxz
or
arpl
scas
add
mov
sahf
mov
dec
lret
mov
lret
outsl
rcr
mov
idiv
fisttpll
or
jns
and
aas
add
movsb
enter
mov
inc
jnp
fs
adc
fwait
out
xchg
mov
add
xchg
inc
sub
or
shr
psllw
enter
adc
and
cmc
pop
repz
mov
xchg
into
cli
jge
mov
loopew
cmpsl
jae
xchg
sub
sbb
xchg
insl
pop
jnp
mov
sbb
xor
lea
mov
sbb
lahf
fcmovu
mov
xor
add
cld
iret
xchg
mov
rclb
xor
jg,pn
int3
jae
or
push
ljmp
aaa
sub
adc
inc
shl
mov
fcompl
scas
sub
jle
jne
jnp
std
push
imul
mov
push
ss
mov
insl
popa
pop
stc
inc
testb
pop
and
sbb
std
lea
insl
nop
mov
ret
js
jnp
lret
lret
pop
pop
das
pusha
adc
pop
xchg
ss
je
sub
jge
stc
in
or
and
aam
push
rolb
and
test
xchg
sbb
test
inc
push
xor
xchg
push
scas
test
dec
bound
mov
test
jb
lock
roll
add
bt
test
bt
cmp
test
mov
jmp
sbb
test
nop
push
js
sub
push
mov
cmp
fdivrl
insl
push
jbe
popa
je
push
lret
rolw
pusha
xor
jbe
bound
dec
push
lods
push
stc
pop
std
push
cmc
arpl
mov
ds
cmp
ds
mov
imull
aas
inc
loopne
cmp
inc
or
int3
cli
jg
cltd
bound
cmp
xchg
mov
subb
outsl
outsb
js
int
movsl
cmpsl
nop
enter
out
into
out
call
pop
adc
shlb
pop
xchg
test
pusha
insb
adc
scas
cli
lea
jl
mov
sbb
aam
fimull
sahf
mov
ja
les
push
push
or
or
mov
mov
mov
push
sub
mov
or
xor
aad
mov
leave
mov
jno
dec
stos
jns
jns
mov
out
negb
rol
stos
inc
lods
add
aaa
leave
mov
add
jno
ss
das
push
leave
push
mov
pushf
sub
mov
test
sub
mov
jmp
mov
imul
subb
int3
in
xchg
pusha
cmp
sub
mov
jg
ja
mov
jb
mov
faddp
mov
push
or
mov
movsb
pop
dec
outsb
lret
fldl
mov
pop
inc
enter
inc
in
cmp
xchg
or
pop
mov
and
shlb
and
in
lods
stos
andl
and
std
sbb
jge
daa
push
add
mov
push
outsl
pop
xrelease
pop
and
aas
and
pop
mov
cld
pop
nop
xor
ds
xchg
or
pop
clc
fld1
jge
jmp
fdivl
hlt
jmp
pop
push
sub
xchg
addb
cmpsb
inc
popa
sub
sub
lret
imul
sub
aaa
pushf
cmp
mov
icebp
mov
jno
or
lods
mov
cmpsl
int3
mov
adc
aas
cmp
insb
adc
sbb
add
jnp
push
sbb
dec
and
mov
ljmp
push
subb
adc
dec
imul
dec
push
push
leave
bound
sti
cmp
aam
push
bts
js
test
and
xor
in
roll
push
mov
rcrl
gs
out
imul
inc
xor
leave
dec
jae
ret
jo
int3
xchg
fisubl
sbb
fprem
xor
stc
jmp
pop
nop
mov
sbb
sub
xor
stos
mov
jae
int
dec
aad
lds
inc
xchg
aaa
pop
arpl
in
mov
pop
orl
out
push
andb
jnp
jmp
shlb
jecxz
flds
add
rcl
cwtl
cltd
adc
mov
inc
ss
ret
xchg
mov
iret
xchg
or
pusha
out
pop
nop
shll
push
shl
sbbl
fstps
pusha
cld
bound
xor
add
ljmp
sub
inc
bound
pop
mov
and
lods
test
dec
and
test
insl
ljmp
lcall
jmp
xchg
sbb
rcrb
jae
jnp
ds
clc
rorb
jne
sub
lcall
dec
movsb
mov
jo
data16
fildll
xlat
or
push
jbe
lods
mov
scas
les
cmpsl
aas
fnstcw
mov
dec
sbb
or
sahf
in
mov
ja
jl
sbb
repz
xor
test
fcmovnb
jbe
loope
cmp
loop
orb
call
lds
sbb
mov
int
xchg
mov
sub
cmp
popa
xchg
fs
inc
mov
mov
xchg
mov
cmpsl
int
cmpsb
xor
adc
mov
cmp
into
sahf
cltd
sub
sbb
loop
scas
fnsave
sub
lcall
pop
xchg
pop
push
pop
gs
push
mov
es
cmp
or
push
cmc
cmp
sbb
mov
inc
xor
push
dec
dec
mov
test
jb
lret
jbe
scas
inc
aad
aad
mov
dec
imul
into
popf
add
or
push
int
je
add
iret
fcos
mov
ja
dec
pushf
in
inc
test
push
cmpsl
xor
test
in
xchg
out
dec
pop
imul
mov
add
outsl
enter
clc
mov
jmp
std
or
push
movaps
xor
popf
leave
sbb
loope
inc
rorl
stos
fnstsw
cld
andl
jns
and
ljmp
mov
add
adc
push
subb
inc
bound
pop
dec
int3
lods
mov
jmp
dec
imul
loop
push
repz
fistpl
xor
sbb
inc
adc
and
outsb
notb
ss
out
pop
mov
jne
and
mov
dec
cmp
ret
fists
sub
in
push
sub
inc
aam
gs
dec
fidivl
sub
sub
pop
fwait
ds
inc
cmpsl
add
inc
outsb
cmp
cs
mov
mov
add
mov
or
pop
in
faddp
ret
and
dec
jne
in
sti
ljmp
dec
stos
into
dec
jp
cltd
sbb
rcl
addr16
test
push
iret
mov
fldl
es
fld
push
jae
sti
in
mov
adc
sub
xchg
test
gs
sbb
adc
imul
lahf
in
sti
pop
bound
test
fidivrl
enter
jmp
jb
push
and
adc
mov
inc
stos
add
cli
std
inc
fwait
outsl
push
or
and
adc
push
cli
inc
sub
mov
ljmp
mov
in
in
mov
imul
mov
aam
mov
push
xchg
mov
lret
sub
les
test
sbb
out
cmpsb
aad
sub
pop
setae
cmpsb
stc
ret
pop
jge
das
or
jns
dec
cld
jne
add
mov
jne
mov
sub
cmc
xchg
add
adc
xchg
jno
cli
push
jge
mov
cmc
jbe
lds
ficoms
insb
rorl
cs
in
cmp
add
cmpsb
xorb
je
mov
leave
out
pushf
xchg
xor
xor
dec
or
subb
cmp
pushf
mov
clc
jl
out
jg
add
pop
stos
xchg
stos
rcrl
lock
xchg
mov
inc
repnz
cs
outsb
inc
cmp
adc
rclb
adc
gs
shl
mov
jl
xor
popa
mov
push
subl
aam
bnd
ja
and
adc
mov
jne
pop
daa
shl
jge
outsb
in
xchg
mov
mov
jmp
out
mov
mov
dec
pop
xchg
add
sahf
cmp
mov
daa
push
mov
in
jmp
sub
xchg
into
xor
push
notb
popa
jbe
imul
mov
lock
jne
jge
jnp
loop
cld
fisubl
out
popf
cmc
sub
jge
call
shlb
or
xor
xor
jmp
jecxz
and
dec
pop
cmp
adc
xchg
push
adc
daa
bound
imul
inc
add
xor
inc
out
sbb
dec
outsl
leave
push
clc
ret
xchg
dec
mov
scas
icebp
scas
loop
out
mov
ja
icebp
mov
jae
int3
dec
fimull
sbb
sbb
push
insl
dec
sti
push
je
in
sti
fcmovne
or
and
inc
fs
mov
jns
and
nop
mov
dec
das
adc
mov
mov
jbe
jae
dec
test
mov
movsb
pop
daa
ss
ss
pop
shlb
movsb
in
pop
mov
cmpsb
or
mov
movsb
orb
mov
push
push
test
push
mov
jb
jb
and
pushf
mov
mov
adc
pop
push
xchg
mov
add
jp
js
or
std
test
mov
adc
xchg
cmpsl
stc
in
pop
lret
mov
adc
cmp
push
or
push
cmp
cmp
lcall
pop
pop
mov
jne
sub
fwait
mov
sub
out
popa
icebp
imul
adc
pop
js
lock
push
inc
sub
cmpsl
cmpsl
jbe
sbb
sub
pop
cmc
mov
sub
stos
popf
es
and
es
movsb
fsqrt
and
fstl
lods
in
push
gs
or
loopne
ljmp
add
popa
test
das
pop
dec
dec
outsb
push
je
pusha
mov
hlt
aaa
adc
dec
xchg
mov
sub
sub
clc
out
les
inc
pop
or
in
adcl
shl
mov
test
pop
sarl
dec
aas
icebp
lea
cmp
lds
dec
cmp
xor
mov
adc
jnp
mov
mov
outsl
dec
xor
call
jmp
pop
pop
mov
or
ljmp
daa
inc
xor
sbb
mov
hlt
cmc
roll
pop
sbb
mov
enter
sbb
sub
idivl
push
inc
sarb
adc
addr16
sbb
gs
fdivr
mov
movsl
inc
sub
popa
movsb
daa
jne
mov
xlat
mov
mov
fdivrp
and
neg
fwait
cmp
mov
aas
outsb
xchg
inc
pop
jg
adc
push
xchg
cld
lahf
negl
cld
pop
nop
xor
mov
or
add
jno
mov
ret
mov
jne
cmp
scas
cld
icebp
or
jp
in
pop
sbb
pop
xor
stos
inc
je
xchg
push
scas
or
lds
in
adc
add
xor
outsb
js
mov
daa
mov
lcall
mov
out
mov
or
loope
jbe
addl
ja
mov
inc
test
jl
insb
cmp
cltd
mov
push
mov
aam
popa
inc
xlat
outsb
jae
mov
xchg
mov
scas
lret
cmp
lret
lret
push
mov
rcr
xchg
ds
dec
push
cmp
adcl
not
sbbb
jp
cmpsb
mov
mov
cwtl
mov
sub
add
mov
imul
or
push
xchg
xor
xchg
in
cli
gs
or
test
popa
sahf
ja
and
xchg
in
int3
in
subb
sub
int
cli
int3
fwait
add
inc
mov
pusha
mov
cli
dec
sbb
insb
adc
xchg
cmp
mov
xlat
cld
les
in
nop
aaa
push
lahf
cmp
subl
dec
push
andl
push
sub
loop,pt
je
andl
jp
ficomps
setl
aam
inc
xor
pop
mov
aas
jmp
inc
dec
sbb
lea
pop
stc
cmp
add
cmc
push
xor
dec
and
push
and
loopne
push
imul
ret
ret
insl
xor
cmpsb
jo
sub
adc
push
xor
inc
out
aaa
or
es
mov
jnp
subps
sahf
aam
mov
mov
scas
mov
sahf
in
push
add
mov
adc
in
add
xchg
push
inc
mov
or
rol
cmp
adc
mov
or
das
mov
shl
add
clc
mov
mov
insb
mov
adc
push
xlat
or
push
dec
xchg
jno
adc
out
jle
ret
mov
dec
popf
mov
cmp
pop
pop
mov
movsl
mov
pop
fimull
dec
xchg
mov
ret
aad
repz
and
popf
xor
cmc
pop
and
and
inc
popa
adc
sub
mov
jp
jo
int3
cli
fcmovb
std
add
fdivrl
and
mov
and
movsl
std
pop
jge
bound
push
ret
xor
scas
orl
xchg
xchg
mov
fstps
jae
movl
pop
mov
fstps
jb
sahf
aas
cs
lahf
imul
pusha
sub
jo
fiadds
push
lret
int
mov
xchg
or
sub
jo
shlb
fiaddl
mov
ss
scas
mov
xchg
cmp
push
out
adc
jmp
lds
mov
enter
push
mov
mov
fmull
xor
ljmp
xchg
addl
and
pusha
test
int
jl
inc
cmp
das
mov
xor
outsb
xchg
jl
add
inc
in
and
addl
ja
andb
pop
stc
loope
push
fisttps
scas
out
out
dec
in
lds
mov
inc
sbbb
inc
icebp
mov
stc
fcmovnu
shlb
sahf
jno
mov
es
ss
xor
adc
pop
in
mov
addr16
aas
pop
inc
mov
xor
filds
daa
adcb
cmc
mov
aaa
push
and
mov
sarl
fwait
lea
pop
add
addr16
and
push
adc
andl
xchg
aaa
xchg
in
je
in
sahf
je
dec
pop
push
adc
mov
jmp
push
andb
cmp
jge
dec
xchg
and
ja
cmp
das
push
jg
test
dec
ss
mov
cwtl
push
push
cmc
gs
sbb
shl
adc
out
lret
mov
dec
xchg
mov
aas
and
ss
mov
fadd
fiaddl
loop
cmp
and
or
arpl
push
shrl
pusha
scas
out
inc
mov
dec
fucom
pop
mov
cmp
clc
mov
mov
lahf
mov
iret
jmp
ja
inc
push
adc
inc
sub
out
das
into
fbstp
pop
mov
xchg
jle
cld
mov
loope
into
repz
in
aad
fists
push
aad
mov
ja
dec
shlb
mov
out
push
mov
jne
repnz
cli
pop
inc
add
pop
jbe
cmp
push
cli
push
das
lods
into
lock
mov
mov
aaa
pop
addr16
push
jl
daa
inc
mov
lods
lea
push
pop
std
push
popf
cmp
lret
in
mov
je
popf
rclb
jne
pop
gs
pop
inc
cs
xchg
cld
lret
mov
lret
cmp
cmpsb
aam
xor
mov
dec
in
lods
fs
inc
fsubrl
xchg
call
mov
mov
mov
roll
mov
dec
imul
in
and
les
push
dec
out
rorl
dec
xor
aam
int3
mov
shl
movsb
mov
cmp
sub
xor
xor
mov
movsl
push
repnz
mov
or
add
js
repz
mov
jg
sarl
mov
cmp
dec
mov
and
mov
push
rol
iret
push
jo
or
lahf
iret
push
mov
mov
in
pop
cli
push
or
insb
cmp
pusha
inc
xlat
inc
cli
mov
dec
out
sub
repnz
adc
es
test
jb
int3
cmp
push
je
push
arpl
cmp
sbb
jge
bound
pop
repnz
clc
push
cmp
push
pop
mov
outsb
inc
xor
and
iret
mov
loope
aam
sbb
fnstsw
or
decb
cmc
sbb
mov
pop
gs
or
repz
repz
imul
xchg
lea
fcmovne
xchg
jne
enter
cmp
aas
negb
sub
xlat
iret
dec
ret
pop
fcompl
xchg
adc
sub
mov
xchg
adc
imul
out
jmp
dec
pop
decb
push
mov
push
sub
shll
mov
jo
mov
aam
cmp
push
lock
test
cmp
inc
pop
jg
sbb
repnz
in
or
inc
xchg
mov
xchg
loop
adc
out
fndisi(8087
mov
push
in
mov
mov
pop
addr16
arpl
in
fwait
addl
mulb
jle
aaa
and
pop
or
cmpsb
mov
movsb
iret
mov
in
lcall
inc
push
push
ret
push
stc
dec
rcl
lds
jecxz
femms
shll
mov
ffree
cmp
arpl
decb
cmc
xchg
fmull
sbb
add
jp
mov
movsl
mov
mov
pop
shrl
push
flds
cmp
ret
fs
clc
fimull
pop
sub
jb
sub
sub
cli
out
shl
mov
sub
push
test
lcall
int3
out
pushf
jbe
pop
dec
pop
cmp
mov
int
imul
push
sub
lahf
sbb
jg
jecxz
in
mov
cmp
addr16
add
xor
dec
pusha
and
xchg
mov
xor
mov
sub
inc
fcoml
sbb
jge
jle
adc
lds
out
sub
cli
hlt
push
gs
jae
sar
insb
hlt
adc
jo
mov
data16
iret
jmp
jb
ljmp
mov
fdivrs
dec
ror
cmp
cmpsl
cmp
int
insb
sbb
inc
xchg
mov
cmp
insb
hlt
shl
andl
fiadds
jno
cmp
cmc
insb
pslld
pcmpeqb
jnp
std
out
dec
rorb
inc
sub
adc
nop
pop
mov
or
push
push
mov
das
lods
mov
call
shl
shll
mov
mov
lea
lret
push
xor
in
jl
mov
js
sub
or
ret
or
mov
pusha
inc
mov
jae,pt
or
test
mov
pop
es
push
inc
push
jg
aaa
int3
repz
mov
inc
jmp
push
sbb
pop
inc
inc
popa
jle
cwtl
jbe
and
or
movsb
xor
cmp
dec
mov
mov
dec
dec
mov
mov
jne
adc
lods
addr16
imulb
jecxz
lahf
in
add
cltd
testb
jae
mov
jbe
cmpsb
mov
jne
push
add
imul
dec
outsl
sub
sbb
adc
call
scas
sub
std
cmp
ja
aaa
jp
gs
mov
sub
flds
sarb
or
bound
cmp
lea
xor
jle
lret
mov
push
xchg
mov
fsubs
sub
add
xchg
xchg
andb
in
pop
notb
inc
fistpll
lcall
pusha
cld
fxtract
test
into
mov
imul
or
xchg
aaa
xor
nop
cmp
fwait
mov
add
packuswb
xchg
sbb
inc
js
pop
dec
into
or
sbb
imul
sub
les
cmp
testl
ss
fld
xchg
in
shll
icebp
subl
insl
cmp
jge
add
fildl
jne
sub
add
hlt
repnz
cmp
pop
mov
loope
jp
mov
fs
pop
sbb
dec
push
push
jne
fs
iret
adc
jo
fcoml
popf
xor
cmc
lahf
leave
mov
and
std
push
insl
jb
sarl
mov
xor
pop
dec
popa
inc
int3
inc
std
and
cmp
sub
out
popa
ss
sbb
aad
xchg
mov
fs
scas
push
xor
stos
fnstenv
and
adc
je
inc
in
out
and
mov
pop
aaa
dec
dec
pop
dec
stc
adc
push
inc
mov
sysenter
and
jecxz
mov
xchg
fsts
dec
cmpsb
mov
fs
in
lret
inc
sbb
out
scas
push
iret
mov
mov
loope
jmp
hlt
jmp
aad
jecxz
sbb
scas
mov
inc
adc
mov
jb
mov
rorb
imul
sbb
mov
mov
shl
push
pop
jmp
mov
imul
andl
clc
pop
or
aad
dec
or
or
pop
push
orl
add
lret
xchg
mov
jb
mul
les
shl
gs
sub
push
inc
sti
insl
in
stos
je
js
lea
cs
add
adc
aas
sbb
jae
fnstsw
ja
pop
xlat
lock
sarb
push
mov
fistpl
pusha
mov
push
adc
mov
sahf
mov
and
xorb
das
ljmp
loope
or
insb
jmp
popf
xor
inc
push
and
int
out
mov
cmp
and
stos
mov
or
or
shll
cmp
jge
jns
or
bound
and
xchg
pop
xor
adc
inc
sub
cwtl
mov
mov
add
enter
inc
cmp
outsb
ja
into
jecxz
lcall
sbb
es
sub
icebp
or
mov
call
fbstp
imul
xchg
mov
jnp
adc
jo
gs
inc
pop
mov
push
and
shl
in
add
out
scas
push
dec
sbb
or
nop
cmp
cmp
lods
into
lods
repnz
daa
mov
inc
adc
test
mov
mov
cmp
adc
xor
subl
xor
sbb
fwait
mov
mov
movsb
jmp
movsl
push
pop
test
flds
push
cmp
push
test
jae
cmp
pusha
jnp
jecxz
push
mov
roll
xchg
mov
xchg
repnz
and
call
mov
dec
shll
adc
repnz
mov
mov
jge
jns
mov
movsl
mov
loopne
push
xchg
or
pop
subl
repz
aam
loop
jecxz
mov
push
fisttps
fildl
fsub
enter
insl
int3
in
cli
push
cmp
inc
in
pop
js
xchg
aam
push
arpl
sbb
push
adc
mov
jmp
mov
dec
adc
jns
jg
jne
repz
rclb
ss
ljmp
cwtl
mov
mov
cmpsl
mov
jecxz
or
lcall
std
imul
sub
xor
ficoms
movsb
sbb
cmc
mov
aas
push
lret
lea
inc
ss
jbe
push
fwait
mov
inc
stc
rolb
xchg
repnz
cmp
ss
add
xor
xchg
into
or
inc
add
mov
dec
movsb
xor
mov
movw
mov
push
movw
pusha
pushf
lea
jmp
sti
adcb
std
and
xor
dec
stos
into
shll
imul
das
xchg
or
jo
lods
or
jo
dec
outsb
lahf
addl
push
sbb
scas
or
adc
lea
fdivl
or
shrl
xchg
xchg
xchg
ss
scas
cmc
mov
sti
jge
mov
pop
sub
fisttps
pop
int
add
or
leave
jecxz
daa
dec
xchg
mov
push
xchg
push
nop
rcrl
ficomps
sub
push
adc
addr16
cs
inc
in
das
shll
xchg
push
push
in
outsb
xchg
mov
add
gs
out
xor
push
mov
sbb
loopne
mov
repnz
jbe
xor
out
push
xchg
fiaddl
add
dec
pop
clc
ljmp
std
movl
bound
ds
mov
and
xchg
push
shl
insb
mov
xor
popf
lds
push
adc
rcrl
fsubrp
pop
jg
adc
jl
jmp
push
movzwl
add
clc
rol
mov
call
jecxz
cld
push
push
je
in
cmc
inc
sahf
ss
add
or
andb
push
sub
dec
or
icebp
je
movsb
cmp
jmp
add
loopne
push
jge
imul
out
sbbb
sbb
sbb
xchg
les
push
jae
cmc
test
test
lahf
std
mov
or
cs
jecxz
ret
in
lock
mov
push
or
xchg
stc
fcmovnb
fcos
sti
imull
rcrl
sbb
push
pop
push
xchg
adc
pop
out
mov
adc
mov
mov
scas
rcll
adc
nop
std
sub
rclb
and
aad
mov
call
call
pop
jbe
adc
mov
cs
dec
cmp
leave
popa
jbe
cltd
add
sti
push
mov
sub
mov
pop
into
and
movsb
mov
jecxz
add
add
xor
inc
mov
outsl
push
adc
testl
incl
ret
bsf
mov
rcr
shl
movsbw
neg
mov
jmp
inc
cmp
jno
fiadds
xchg
jne
repnz
stos
std
cltd
notb
mov
dec
cmp
cmp
fsubl
mov
inc
jbe
pop
imul
pop
aas
out
stc
xor
fs
add
xchg
adc
inc
push
push
jb
fnstsw
or
inc
sahf
xchg
and
or
lock
xchg
test
inc
pusha
inc
mov
mov
popa
mov
mov
ljmp
lea
xlat
push
xchg
jg
lcall
cltd
jae
cli
xchg
ret
xor
mov
es
push
dec
lret
adc
aaa
sub
mov
in
out
sbb
sub
cltd
mov
jl
jnp
fiadds
push
sbb
aaa
inc
ljmp
or
imul
out
jnp
mov
cld
aad
outsb
out
enter
dec
insb
and
push
xor
pop
lea
loopne
shl
and
jns
es
jle
push
dec
jnp
lods
fisubrs
decl
cmp
or
push
sub
lcall
jno
dec
jg
insl
in
fstpt
pop
push
out
test
adcl
adc
repnz
sbb
jb
cli
lret
jno
mov
xlat
or
jle
lea
add
insl
inc
dec
ja
je
push
adc
adc
mov
xchg
mov
sahf
cmp
scas
ljmp
cmp
lret
hlt
mov
enter
lds
add
xchg
push
pop
pusha
and
out
mov
adc
pop
test
fldl
adc
mov
dec
sbb
pop
insb
pop
push
and
inc
repz
push
and
out
out
mov
insb
sub
popf
and
cmc
out
dec
inc
inc
hlt
sub
in
mov
adc
cltd
pop
lahf
fildll
add
xor
sbb
push
mov
aam
sub
mov
roll
sbb
or
aas
mov
shll
mov
insb
sbb
movsl
xchg
inc
mov
sub
mov
adc
aam
je
add
ret
ret
push
inc
popf
leave
adc
add
xor
fisubrs
mov
jne
push
sarb
shl
dec
mov
inc
sbb
and
es
fdivr
adc
fcomp
cli
imul
dec
or
mov
inc
les
dec
ljmp
and
push
lret
cmp
movsb
dec
cltd
ret
adc
sti
ret
pusha
lcall
xchg
movsb
in
aas
movsb
aas
xchg
fucom
test
adc
inc
cltd
andb
cmpsb
cltd
xor
mov
in
sub
mov
out
pop
movsl
mov
out
dec
nop
int
sub
cmp
cmp
test
fs
and
mov
inc
add
or
and
cmpsb
or
dec
dec
addr16
dec
pop
cmp
jmp
mov
test
jecxz
jmp
cmpsb
pop
dec
cmpsl
pop
fadds
pop
sti
push
pop
jge
js
repnz
sbb
xchg
cmp
scas
push
jno
lret
xor
and
dec
push
jne
inc
scas
mov
add
sbb
ljmp
clc
jno
and
mov
xchg
dec
cmp
pop
pop
lods
stos
inc
pop
sub
shl
aaa
add
pushaw
jge
cmp
xor
mov
mov
popf
jne
fsubrl
into
sahf
rclb
or
pop
cmp
mov
aaa
aam
pop
mov
jne
push
fs
js
in
jnp
or
inc
xchg
mov
push
cmp
sub
lret
repz
loop
cld
rcrl
and
daa
mov
leave
dec
shrl
lahf
daa
jne
and
ret
jl
das
cld
pop
les
mov
xor
add
cli
cmp
push
adc
add
movzwl
push
and
mov
stc
mov
pushf
add
add
jb
mov
pusha
cmp
bt
lea
jge
test
pushf
lea
je
test
cmc
jmp
push
stc
push
xor
jmp
inc
out
movsb
movsb
mov
in
imul
cltd
jns
js
jae
push
stos
xchg
and
lock
push
enter
mov
push
mov
or
push
mov
subl
sbb
jle
into
xorb
sbb
fs
out
sub
gs
mov
imul
xchg
jbe
pop
dec
or
cmovns
inc
mov
rcll
sahf
ficompl
pop
nop
push
push
push
adc
pop
icebp
pusha
pusha
lea
jb
pushf
pushl
ret
repz
adc
shll
sarb
pop
cmp
cmp
in
pop
mov
push
jns
sbb
enter
cmp
push
cs
sarl
scas
inc
mov
rcr
mov
popf
mov
mov
cltd
out
dec
enter
add
jmp
and
pop
fldl
lds
jmp
outsl
and
ljmp
rolb
push
adc
inc
jmp
iret
mov
mov
pop
call
mov
lea
jbe
shl
shl
cmc
dec
sub
bswap
bsf
mov
shl
dec
mov
movzbw
add
adc
shr
bsr
test
ror
mov
call
imul
pushf
es
sbb
iret
scas
inc
mov
jmp
insl
test
movsl
adc
inc
mov
pusha
addr16
or
dec
cld
mov
or
popf
sbb
push
sub
into
jne
mov
rcrb
xor
cmpsb
pop
int3
and
add
movsb
jmp
sub
in
test
arpl
adcl
mov
push
mov
dec
and
mov
dec
cs
jl
je
nop
pushf
iret
cmc
popa
shll
imul
call
cmp
pand
add
fcompl
mov
icebp
jg
cltd
or
data16
js
sub
mov
rolb
inc
nop
std
push
loope
sub
jecxz
cmp
dec
adc
idivb
dec
into
pushf
movsl
rorb
in
mov
nop
fisubl
push
adc
mov
fdivl
and
daa
inc
and
xchg
into
and
and
out
lahf
cmpsl
xchg
fsubrl
fucomi
mov
imul
fmulp
pop
pusha
inc
dec
out
xorl
xor
ret
daa
add
inc
leave
pop
into
mov
into
pop
cvttps2pi
imul
xchg
push
hlt
pop
out
out
mov
sub
xor
adc
aaa
je
add
mov
inc
push
push
adc
mov
sbbl
ljmp
push
outsl
mov
push
clc
jp
jmp
insb
dec
xor
sbb
sbbl
jg
jbe
ja
cmp
inc
jne
movsb
jp
lcall
push
xor
lret
notb
fsts
aaa
int3
and
mov
mov
ja
jne
addl
cltd
sub
imul
dec
inc
shrl
lds
cld
in
sub
aam
mov
sbbb
adc
out
fwait
mov
leave
dec
xchg
xor
stos
out
stos
imul
and
inc
xchg
js
pusha
setb
inc
push
pushf
dec
pushf
inc
sub
jnp
seto
xchg
xor
mov
cmc
shr
sub
mov
bt
stc
clc
pushf
mov
shl
mov
pushf
movb
sub
call
xchg
aas
fnstenv
dec
cs
imul
arpl
or
or
jo
pop
std
int
dec
ds
push
jp
das
hlt
das
mov
adc
fstpt
pop
or
cmp
lcall
cmp
ljmp
pop
or
and
data16
cmp
jle
addr16
pop
fisttpl
xchg
or
hlt
je
shl
rorl
push
adc
cmpsb
mov
rcll
pop
xchg
shlb
popf
pop
outsl
fstps
inc
icebp
fnstenv
les
add
mov
pop
mov
ss
repnz
dec
mov
sub
mov
jnp
imul
and
add
sub
and
or
jne
or
hlt
aam
std
push
shr
mov
jg
aam
cmpsb
jle
xchg
push
les
push
inc
adc
cs
movsl
pop
push
ret
sbbb
jns
shl
xor
jb
repnz
stc
mov
adc
dec
enter
bt
mov
cmp
call
pop
loopne
push
or
jns
or
sti
sbb
clc
push
std
adc
cli
fistps
xor
inc
clc
fndisi(8087
dec
pop
rcrl
daa
imul
pop
imul
dec
jg
lock
mov
pop
mov
sub
aaa
loopne
mov
sti
cs
push
dec
mov
outsb
fcmove
pushf
fiaddl
das
addr16
pop
cmp
pop
or
pusha
pop
adc
in
jmp
mov
xlat
fcomps
push
pop
shll
pop
fcompl
inc
std
in
xor
inc
test
mov
mov
cmp
push
fidivrl
imul
jp
inc
not
mov
cld
jmp
adc
xchg
jmp
ret
mov
mov
stos
lea
dec
cmp
sbb
and
pop
adc
xchg
pop
popa
call
xor
inc
lahf
stc
lock
in
pop
cmp
inc
mov
into
mov
int
inc
jno
push
outsl
mov
lea
jae
setge
xchg
mov
cmc
cmc
mov
jmp
dec
xor
and
sub
dec
and
cmpsl
inc
daa
jno
or
gs
clc
insb
inc
jp
pusha
call
jbe
dec
adc
add
ljmp
mov
out
xchg
or
into
clc
xchg
stc
xorl
gs
ficoml
or
dec
insl
in
mov
imul
cltd
sahf
fistps
pop
adc
adc
push
adc
mov
cmc
mov
sar
ror
mov
clc
cmp
jmp
clc
cltd
mov
xchg
movsb
cmp
and
inc
cs
jb
cli
xor
out
jge
in
loope
jne
sbb
les
fucom
test
pusha
adc
jo
nop
jg
ret
sarl
push
mov
aas
and
xchg
adc
push
and
lods
pop
inc
mov
jnp
push
add
test
or
mov
and
inc
add
js
cmovg
dec
or
arpl
aas
jp
stc
movzbw
lea
bswap
mov
mov
movw
movb
lea
ja
pushf
pushf
jmp
lea
jae
xor
mov
sbb
btr
rcl
test
mov
shrd
xor
cmp
call
movzbw
mov
pushf
call
xor
mov
mov
lods
jle
std
lcall
repz
cltd
lods
in
push
lea
stc
xchg
jbe
lods
dec
lcall
aam
mov
arpl
adc
hlt
mov
mov
pop
clc
arpl
lods
popa
cmc
adc
lock
std
mov
test
and
aaa
lret
or
ret
aas
aas
mov
retw
xchg
mov
or
mulb
jl
notl
inc
sbb
push
sbb
add
repz
xor
lret
mov
add
mov
outsl
sti
mov
cmp
test
and
or
iret
int3
mov
js
shrl
and
int
fisubrl
fildl
push
lock
xchg
aaa
push
lahf
mov
enter
lahf
sub
mov
mov
call
adc
xlat
cwtl
dec
rcll
mov
xchg
mov
aaa
jb
add
icebp
xor
push
adc
push
faddl
bt
pusha
mov
cmp
call
push
and
fs
cmp
in
popa
add
insb
or
sub
insl
les
mov
std
aam
test
cmc
and
jmp
jb
cltd
jmp
popf
xchg
xor
dec
xchg
mov
mov
adc
xorl
call
xchg
and
jno
je
xchg
imull
jne
mov
int
sbb
jne
lds
cli
mov
inc
xchg
xor
repnz
jp
inc
sbb
inc
mov
sbb
jl
ja
jo
ja
ja
repnz
mov
ds
mov
push
cs
inc
cltd
or
in
imul
jg
and
jae
ret
pop
stc
fldcw
dec
inc
inc
fwait
xor
dec
mov
and
arpl
push
sarl
enter
outsl
xchg
pop
adc
pushf
enter
mov
out
jl
cs
and
repnz
sbb
mov
dec
mov
ficoms
test
js
pusha
jp
fstl
bound
dec
and
add
or
inc
add
loopne
adc
out
pusha
lea
ja
bt
seto
shl
xor
sub
pusha
dec
dec
sub
sub
add
not
bsf
shld
mov
cmp
and
jmp
ret
jp
stc
mov
add
or
or
add
push
loop
in
out
inc
xorl
ret
out
aad
mov
lret
xor
outsl
jg
mov
dec
xchg
ljmp
pop
cli
jo
mov
in
pop
adc
es
or
and
xchg
movsb
dec
leave
imul
jnp
jp
loope
shll
loopne
mov
enter
ficomps
sti
fadds
xlat
mov
fmull
pop
xor
push
adc
fcomps
sub
xlat
hlt
push
adc
lret
push
inc
and
and
sub
cmpsl
lds
inc
test
dec
in
test
sbb
push
xchg
clc
in
notl
pusha
dec
adc
pop
mov
sti
xchg
cld
and
ds
dec
jbe
inc
xor
mov
imul
dec
and
mov
jbe
icebp
neg
cmp
xor
sub
xlat
push
fstpl
adc
shrb
mov
jno
pop
jbe
fstp
int
cwtl
js
jnp
jl
jne
jne
mov
xlat
out
inc
jbe
pop
cld
rolb
sub
cmp
int3
pop
mov
mov
scas
mov
mov
xor
test
sub
rclb
daa
xchg
xchg
mov
cltd
xor
lock
xor
add
and
sbb
xchg
imul
fstpl
jne
gs
mov
fmuls
or
push
orb
push
jae
ljmp
aaa
enter
mov
idivl
clc
mov
push
adc
fmull
shl
fwait
pop
cld
loope
xchg
ss
je
cld
xchg
hlt
nop
jno
hlt
sbb
sbb
ret
pop
mov
push
decl
mov
mov
dec
fs
cmp
addl
xor
or
xchg
sbb
sbb
dec
enter
stc
stos
xchg
cmp
jnp
sub
lods
xlat
shrl
fists
dec
std
cmp
aas
jne
mov
cmc
pop
shr
mov
bt
clc
xor
stc
pusha
call
movl
mov
call
push
lea
ja
bswap
push
pop
pop
call
add
movw
rcl
bswap
cmp
mov
bts
add
bswap
neg
movl
pop
inc
rol
mov
pusha
cmp
call
hlt
pop
xor
push
sahf
dec
sbb
and
inc
scas
sti
and
inc
outsb
test
xchg
fstpl
push
cmp
xor
pop
scas
jmp
outsl
jne
and
leave
popa
jle
jnp
jno
insl
mov
shlb
call
push
mov
lea
pop
jnp
mov
pushf
enter
in
test
pop
xor
sbb
lods
les
mov
out
mov
cmp
cmp
cs
dec
imul
cli
sub
cmp
push
or
addb
add
push
adc
jns
mov
iret
out
int
and
notl
ja
les
std
adc
mov
mov
lods
xor
scas
mov
xchg
adc
ja
xchg
mov
mov
cmpsl
mov
sarl
shrb
xor
mov
sub
push
mov
and
test
push
cld
out
sbb
dec
mov
push
inc
add
push
pop
les
push
push
jne
icebp
mov
divl
lock
cmp
fsubrs
wrmsr
mov
fcmovnbe
insb
inc
jg
mov
insb
push
jg
insb
adc
insb
mov
inc
and
fbstp
insb
mov
fildll
push
and
inc
insb
mov
push
shrb
mov
lahf
insb
fstpt
push
xor
pushf
clc
rorl
dec
movsb
inc
movsl
ret
sub
lods
push
enter
mov
mov
add
mov
lea
cmp
push
sub
lods
scas
and
enter
call
push
scas
repnz
jecxz
sub
mov
testb
cli
out
mov
aaa
insb
ret
jecxz
or
js
pop
ljmp
sbb
popa
and
mov
mov
jle
hlt
mov
mov
push
adc
or
push
cmp
addb
or
jg
cmc
xchg
ja
mov
xlat
jne
ret
leave
or
rcrl
add
icebp
pop
insl
adc
aam
std
mov
mov
sahf
xchg
jl
add
pop
arpl
adc
test
into
mov
test
xor
test
imul
pop
and
dec
movsl
ja
in
arpl
mov
test
fstl
or
add
adc
push
xor
ret
ret
jmp
sbb
xchg
ficompl
ficompl
aaa
jge
mov
insb
jns
add
push
jp
cli
xchg
js
jnp
lret
xchg
shrb
andb
mov
fdivr
insl
lret
into
pop
pop
fsub
push
outsl
xchg
cld
and
sbb
rcrb
jae
subb
mov
sub
or
and
fwait
in
call
push
in
push
in
dec
imul
loopne
or
dec
insb
and
shl
xchg
rorl
adc
lods
add
and
test
ret
jmp
xlat
mov
pushf
test
add
push
movzwl
bswap
inc
mov
bt
add
pushf
test
jmp
sub
mov
and
les
dec
test
stos
lret
sbb
jg
pop
mov
or
movswl
dec
jl
arpl
sub
xchg
pop
sub
mov
out
mov
std
jmp
push
mov
dec
pop
lea
push
push
ja
add
in
data16
inc
pusha
sbb
push
std
mov
hlt
mov
mov
mov
cmc
lea
inc
push
mov
lcall
dec
pop
popa
cmpsl
pusha
sub
push
adc
push
test
mov
stc
sub
sbb
lahf
cli
cltd
cli
sbb
jno
mov
pop
ret
je
cmc
sub
shrl
sbb
adc
ret
xchg
xchg
in
mov
pop
scas
xchg
enter
out
stos
inc
adc
test
lcall
xchg
xchg
adc
jecxz
das
inc
dec
push
dec
and
cwtl
cwtl
hlt
aam
xchg
mov
adc
sub
clc
mov
inc
jge
jo
jno
jae
test
adc
pusha
mov
push
jmp
xor
bt
clc
rol
jmp
ret
jno
inc
hlt
shrl
lea
insl
xchg
mov
shl
add
cmp
sub
ss
or
cmp
xchg
push
pop
pop
ret
lret
ret
jne
loop
xchg
sahf
mov
mov
repz
ss
scas
bound
and
and
xchg
push
rorl
pusha
xor
hlt
movsl
mov
lahf
aaa
cmp
xor
mov
adc
adc
inc
jmp
imul
fistpll
test
jmp
std
pop
repnz
je
cmc
xchg
xor
push
mov
cmp
repnz
add
pop
dec
xor
jbe
push
inc
ror
aaa
das
sub
sub
loopne
adc
das
and
gs
sub
lods
je
scas
push
insl
stos
loopne
lods
xchg
bound
test
xor
push
mov
lods
fwait
nop
push
out
or
jmp
dec
mov
lret
add
mov
xor
mov
jmp
push
lea
call
jmp
repnz
call
jns
fs
scas
fimull
cmp
sub
fwait
int
int
dec
push
mov
cmpsb
neg
mov
hlt
push
cltd
lret
out
mov
movsl
mov
mov
jmp
rcrl
dec
cmp
add
inc
shll
sbb
xor
sub
cmp
push
xor
and
or
stos
push
mov
arpl
adc
xchg
add
add
into
push
jmp
mov
lea
call
pushf
pusha
jmp
into
mov
insb
jnp
jge
jns
iret
adc
notl
rcrb
inc
jne
cli
std
ret
pop
jl
jg
mov
test
sti
ljmp
sbb
and
sub
push
stc
fisttps
add
lcall
push
add
mov
jp
adc
loopne
lcall
jp
imul
int
and
mov
cmp
into
stc
andb
incb
jp
cmp
jl
cmc
inc
repz
mov
xor
sbb
inc
mov
mov
arpl
inc
mov
ret
and
sub
mov
dec
push
add
push
jne
fisubl
jne
popf
rcrl
cmp
iret
sti
enter
subb
sbb
and
in
js
lret
insb
jno
lods
jmp
inc
pop
pop
rorl
movsb
icebp
imul
dec
sub
sbb
cmp
js
rolb
jmp
sub
insb
ss
xor
repz
lret
out
out
dec
push
addb
or
or
inc
push
dec
add
push
adc
mov
add
push
and
add
outsb
or
add
subl
dec
subl
or
mov
inc
out
enter
bound
cmpsb
mov
pop
pop
test
xor
push
push
mov
movsb
mov
shlb
xor
iret
xor
xor
pop
fs
test
pop
cmp
outsb
xabort
pop
push
loope
mov
sub
pushf
cld
fld1
sub
lods
lods
rol
or
imul
mov
mov
clc
cmp
cmp
push
adc
nop
pop
mov
call
fs
mov
pusha
jns
add
mov
pop
aam
jmp
insl
shl
mov
inc
fwait
mov
pop
mov
cmp
lods
popf
sub
pusha
int
pop
xchg
adc
mov
imul
lret
cmp
ficoml
cwtl
inc
adc
aaa
movsb
in
fstl
jmp
adc
mov
mov
cmp
ja
sbb
adc
mov
pushf
sub
jnp
sub
push
rep
push
not
mov
push
mov
mov
pushf
pusha
movb
lea
jmp
dec
xor
stc
pop
adc
ret
test
dec
lods
dec
stos
or
js
jo
enter
insl
dec
insb
data16
sub
cmpsb
adc
andb
in
icebp
icebp
fistl
push
dec
hlt
out
fmuls
adc
iret
dec
lds
xchg
cmpsb
bound
loop
gs
outsl
daa
pop
jmp
adc
ds
or
mov
mov
xchg
loopne
inc
or
cmp
add
imul
add
mov
push
adc
in
std
push
mov
icebp
and
jg
cli
mov
std
cltd
lcall
ljmp
inc
lods
mov
pop
shr
cmp
jnp
mov
and
int
fsubs
and
negl
inc
popa
fdivrs
daa
mov
int
aaa
jo
xor
ja
jp
mov
cmc
mov
or
mov
and
mov
stc
mov
fwait
rclb
rcll
fcomps
adc
xor
lret
cltd
lcall
lea
cmpsb
mov
or
jecxz
popa
add
into
pop
mov
mov
out
rolb
mov
adc
mov
add
xchg
push
fucomp
lret
notl
icebp
out
pop
in
lds
jo
push
pop
or
pop
pop
nop
push
inc
inc
fs
int
ds
mov
ret
or
dec
testb
mov
ss
pop
fidivl
imul
cmpsl
lea
or
int3
mov
into
or
xor
mov
scas
cmp
loopne
pop
mov
ljmp
and
sbb
and
cmp
mov
or
loopne
aaa
sub
sub
into
fidivrl
fisubl
fstpt
xor
das
rcll
out
jne
adc
inc
jmp
in
rorb
pop
push
adc
fidivrl
sbb
jecxz
sub
and
mov
cmp
lcall
sbb
jo
shrb
lcall
xchg
pop
sahf
pop
sbb
xchg
pop
push
adc
mov
jmp
clc
popf
cmp
rorl
xchg
hlt
mov
jnp
jg
mov
in
mov
shr
xchg
std
push
out
mov
pop
out
insb
xchg
jge
cmpsb
adcb
fs
sub
pop
jb
inc
inc
sub
pop
lahf
test
pop
cli
push
sbb
call
pop
cld
push
test
xor
jns
imul
dec
ds
add
add
xchg
add
int3
mov
add
push
adc
cmpsl
aaa
jecxz
inc
xchg
mov
shll
das
jmp
into
es
movsb
jb
insl
push
std
jmp
inc
ljmp
bswap
sub
movsl
cltd
or
loope
ljmp
addr16
mov
fxch
in
stc
repnz
fimull
jecxz
aam
pop
inc
into
int
fdivrl
dec
pop
or
push
xchg
mov
jl
test
lcall
divl
sti
xchg
jbe
das
xchg
mov
outsl
sbb
jg
out
xor
popf
roll
mov
divl
divb
push
adc
call
stc
mov
lea
btr
add
call
call
mov
movzbl
not
pushf
repz
popl
movsbl
bt
push
ror
mov
ror
bswap
pushf
bts
pushl
popl
rcl
movsbw
movl
bts
bt
not
mov
call
movb
call
jmp
pusha
not
not
sar
bsf
add
rol
btr
ror
rol
shrd
add
shl
and
rcl
xor
rcr
mov
pusha
call
mov
mov
push
pusha
not
pushf
bswap
mov
pushf
repz
popl
clc
cmc
mov
btr
pushl
popl
rol
cmc
movl
bts
mov
cmc
call
pusha
jmp
dec
xor
adc
mov
inc
shl
adc
pushf
add
mov
pushf
jmp
pusha
add
jmp
mov
pusha
lea
jmp
stc
sub
pusha
pushl
mov
push
lea
jmp
mov
pushf
lea
jge
pusha
mov
pushf
popl
push
pushl
popl
pushf
lea
jmp
mov
cmc
stc
ror
pushf
pushf
movb
pushf
lea
jmp
mov
push
lea
jmp
pusha
pusha
pushf
pushl
popl
pushl
movb
push
movw
lea
jmp
repz
popl
pushf
lea
btc
clc
mov
movsbw
stc
jmp
jmp
call
cmc
xor
jmp
lea
ja
dec
bt
shl
lea
mov
add
xchg
lea
test
sub
shl
xadd
movsbw
mov
lea
rcr
and
sar
sub
push
mov
movzbw
pushf
call
shrd
mov
push
stc
call
mov
push
pusha
pushf
lea
jmp
sub
sub
js
bt
add
dec
cmp
bts
movzbl
test
call
pushf
pusha
not
cmc
clc
not
pushl
cmp
pushf
and
movb
jmp
not
cld
pop
push
push
movzbw
cld
jmp
pushf
ror
pushf
push
lea
jmp
movw
clc
add
push
mov
pusha
call
mov
movl
lea
jmp
pushf
mov
call
movb
mov
pushf
call
stc
pushf
clc
test
sub
cmp
bt
pushf
stc
cmpl
jmp
jmp
mov
movw
push
lea
jmp
not
movb
jmp
neg
dec
mov
test
call
pushl
popl
mov
mov
mov
pushf
lea
jmp
push
movb
mov
push
pushf
popl
push
pushl
popl
pushf
lea
jmp
xchg
pusha
add
clc
add
jg
cmc
clc
sub
pusha
mov
push
pusha
lea
jmp
push
rdtsc
cmc
cmc
sub
mov
mov
call
pusha
movb
lea
jne
jmp
cwtl
test
bt
call
mov
pushf
lea
jmp
movzbw
bt
mov
pusha
push
cmc
sub
cmc
pusha
jmp
mov
dec
call
mov
pushf
pushf
movb
pushf
popl
lea
jl
pusha
pushf
pushl
popl
push
push
mov
pushf
lea
jmp
push
pushf
xchg
not
mov
pop
mov
mov
mov
jmp
neg
xadd
rcr
mov
btr
shr
ror
mov
call
push
call
mov
push
movb
cmp
pushf
sub
cmp
pusha
shr
movl
movb
mov
jmp
mov
not
pushl
popl
rol
movl
bts
mov
clc
movw
ror
mov
push
movb
pushf
lea
jmp
push
clc
add
pushf
push
mov
pusha
pushf
pushl
ret
jmp
dec
stc
jmp
pushl
mov
pusha
movb
mov
mov
jmp
dec
cmc
sub
jmp
cmc
jmp
pusha
not
mov
jmp
mov
push
call
mov
mov
movl
not
mov
mov
lea
mov
jmp
das
not
mov
clc
bt
sub
call
pusha
test
add
cmc
movw
bswap
movw
cmc
clc
rol
stc
call
call
jmp
cbtw
lea
jle
pushf
pusha
pusha
cwtl
jmp
pushf
lea
js
push
pushf
push
mov
call
push
jmp
ror
pusha
pusha
mov
mov
lea
jmp
call
pushf
clc
pusha
pusha
sub
cmc
xchg
stc
mov
stc
sub
pushf
mov
mov
lea
jle
jne
stc
clc
pusha
xor
push
xchg
call
movb
shl
pushf
call
ror
pushf
lea
jmp
pushl
lea
jne
sar
setg
mov
pusha
pusha
call
add
jmp
cmp
pushl
sub
mov
pushf
add
jmp
cmc
test
sub
pushl
dec
call
mov
stc
mov
pushf
xor
pushf
xor
mov
lahf
pushl
popf
push
mov
cltd
setno
pushf
mov
pushf
mov
mov
movzbw
pushf
pushl
xchg
mov
lea
not
mov
seto
not
mov
lea
movsbw
not
pushf
mov
mov
movb
pushl
ret
jmp
pushf
jmp
ror
rol
shl
inc
bsf
sub
sbb
dec
sbb
push
lea
rol
mov
cmp
pushf
cmp
clc
add
call
xor
shr
mov
test
pushf
sub
call
push
mov
mov
movzbl
pushf
jmp
dec
clc
pusha
neg
jmp
pushl
jmp
rep
shld
xadd
test
lea
mov
btr
bsr
pop
test
mov
mov
jmp
movl
jmp
sub
pushf
mov
jmp
call
push
call
repz
popl
clc
bt
push
mov
ror
pushl
stc
mov
push
bt
lea
movsbw
bts
mov
pusha
ror
pusha
pushf
mov
pushf
lea
jmp
pusha
mov
mov
call
not
test
jmp
pushf
clc
sub
stc
lea
jmp
add
add
jmp
mov
not
pop
mov
not
pusha
lea
mov
not
mov
call
stc
and
clc
cmp
lea
jnp
pushf
push
lea
jne
or
jmp
inc
mov
and
and
bt
pushf
mov
pusha
mov
sub
pusha
cmp
pushf
shl
pushf
mov
mov
pushf
movb
pushf
popl
pushl
jmp
call
call
mov
pushl
popl
pushf
pushf
movb
mov
lea
jmp
pop
not
jmp
call
mov
jmp
test
sub
pushf
pushf
jmp
mov
pushf
lea
jmp
mov
push
mov
movw
mov
mov
pusha
push
pushf
lea
jmp
mov
movl
lea
jmp
movzbw
not
bswap
setp
mov
pushf
pusha
push
pushf
lea
mov
movb
lea
je
mov
pusha
lea
jmp
mov
call
repz
popl
pop
stc
movw
mov
btc
ror
pushl
popl
not
movl
not
bt
jmp
push
push
xchg
lea
lea
mov
lea
push
not
mov
movzbl
not
push
setg
pusha
xchg
mov
call
bt
shld
adc
cmp
mov
mov
clc
ror
mov
cmp
call
pushf
pusha
mov
pushf
call
call
not
sub
jmp
pushl
push
mov
movl
pushf
push
mov
pushl
pushf
pushl
ret
jnp
pusha
sub
mov
cmpl
jmp
push
lea
je
push
mov
jmp
lea
jne
pusha
sub
push
lea
jle
push
mov
pusha
lea
jmp
pushf
mov
push
pushf
popl
pushf
call
not
bt
pushl
ror
clc
push
not
mov
pusha
ror
pushf
movw
pushf
lea
jmp
pushf
xchg
pushf
pusha
push
movl
pushf
pushf
pushf
mov
pushf
pushf
pushl
ret
stc
cmp
mov
not
mov
adc
pushf
movb
mov
pushf
push
jmp
call
mov
pusha
jmp
call
bts
push
mov
rol
movsbl
clc
pushl
not
push
mov
ror
btr
jmp
cmc
clc
ror
pushf
movb
push
mov
lea
jmp
ror
mov
dec
inc
rol
ror
add
lea
not
push
jmp
movzbw
btc
and
shrd
mov
cmc
add
pusha
mov
push
push
mov
jmp
cmc
cmc
neg
stc
stc
jmp
jmp
bts
dec
shld
movzbl
sbb
sub
setle
movsbw
pushf
setl
dec
mov
rol
or
mov
xor
neg
adc
and
sub
add
cmc
shr
movzbw
sub
setno
jmp
cmc
pushf
push
add
lea
jl
pusha
pushf
pushf
mov
pushf
pushl
lea
jmp
bswap
mov
movsbw
not
push
mov
movsbw
call
pusha
mov
mov
pushf
pushf
call
mov
cmc
pushf
ror
pushf
lea
jmp
pushf
popl
mov
push
jmp
stc
cmc
bt
shl
cmp
pushf
shr
pushf
jmp
mov
jmp
mov
mov
movb
mov
mov
pushf
pushf
lea
jmp
jmp
mov
mov
push
pusha
push
lea
jmp
movsbw
mov
movsbw
pusha
repz
popl
call
mov
mov
push
mov
push
mov
movb
jmp
movb
jmp
clc
ror
push
lea
jmp
jmp
mov
movl
call
shrd
shrd
not
mov
rcr
test
rcr
mov
cmc
cmc
stc
sub
push
pusha
shr
call
rol
mov
test
add
neg
rcl
add
call
pusha
call
pushf
pushf
mov
lea
pushf
push
bswap
mov
not
mov
movsbw
not
pushf
mov
lea
repz
popl
ror
btr
btr
pushf
mov
btr
stc
pushl
popl
bts
movl
bts
rol
clc
call
jmp
call
call
jmp
pushf
pushl
popl
push
movw
lea
jmp
call
mov
push
mov
movzbl
push
jmp
jmp
jmp
call
pushl
popl
mov
pushl
push
mov
lea
jmp
push
pushf
mov
call
pusha
call
rcr
pushl
popl
lea
lea
movl
pushf
not
ror
jmp
pushl
popl
movw
pushf
pushf
pushf
lea
jmp
jmp
pushl
pushl
call
aas
mov
xor
sub
or
mov
bt
bt
push
test
add
pusha
movb
mov
pushf
push
lea
jmp
call
repz
popl
movzbw
movzbw
mov
jmp
movsbw
jmp
stc
neg
cmp
push
cmp
add
jmp
xchg
pushf
mov
mov
jmp
movl
jmp
divl
push
pushf
push
mov
push
mov
push
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
mov
mov
bswap
bswap
mov
movw
mov
call
test
clc
xor
pusha
xchg
jmp
mov
mov
movw
pushf
pusha
lea
jmp
pushf
push
mov
mov
pusha
push
push
mov
bswap
lea
not
pop
mov
lea
not
mov
pop
not
pusha
mov
call
pusha
mov
mov
push
mov
lea
jmp
push
mov
call
pushl
bt
sub
push
mov
cmc
cmp
mov
or
push
lea
je
ja
pushf
sub
test
pushl
jmp
not
lea
jae
repz
jmp
pushf
jmp
mov
pusha
pushl
pushf
lea
jmp
repz
popl
call
mov
pushf
pusha
pushf
popl
jmp
sub
call
pushl
popl
pushf
pushf
push
lea
jmp
call
mov
push
pushl
ret
pushl
popf
pushl
lea
jmp
pushf
mov
movb
lea
jmp
test
pushl
test
add
jmp
pushl
popl
pushf
push
lea
jmp
push
movb
lea
push
pusha
mov
pushf
mov
lea
jmp
pushl
mov
pushf
jmp
bt
ror
mov
lea
jmp
mov
movb
mov
pushl
lea
jmp
pusha
divl
call
movsbw
mov
call
cmp
clc
mov
push
cmc
pushf
or
mov
mov
lea
je
push
movl
sub
stc
movb
bt
xchg
stc
push
pushf
cmc
mov
test
pushf
sub
push
jmp
movl
call
mov
call
rol
movsbw
pushf
mov
rol
add
inc
mov
clc
cmc
sub
call
jmp
lea
not
mov
bswap
lea
push
not
mov
jmp
movsbw
movzbw
lea
mov
push
push
mov
pusha
mov
pushl
mov
lea
jmp
push
lea
jne
call
mov
clc
clc
jmp
jmp
lea
jne
bt
xor
pushf
lea
jb
xchg
pushf
movb
mov
movb
movl
pushf
mov
jmp
movw
sub
stc
pushf
clc
movb
add
movw
pushl
bt
add
clc
clc
pushl
sub
movl
mov
pushf
lea
jmp
movw
not
not
mov
lea
jno
pushf
pushl
mov
movw
pusha
mov
movzbw
pop
repz
popl
pusha
movsbl
cmc
mov
rcr
cmc
pushl
popl
bswap
not
cmc
movl
bts
mov
stc
call
pushf
movw
mov
pusha
mov
pusha
lea
jmp
clc
cmp
stc
movzbl
pushf
pushf
add
mov
call
jmp
movw
jmp
pushf
popl
push
pushf
pushl
popl
pushf
lea
jmp
push
pusha
pusha
mov
movb
movw
push
movw
lea
jmp
ror
mov
bt
sub
jbe
pushf
clc
add
call
mov
movb
jmp
mov
call
mov
pusha
mov
lea
jmp
mov
call
call
rol
stc
pushf
movw
test
xor
clc
cmc
sub
clc
cmp
bt
cmc
mov
bt
call
jmp
inc
pushl
movw
decl
jmp
mov
bswap
jmp
pushf
popl
jmp
pushl
popl
rcl
movl
stc
btc
bt
not
mov
pushl
ror
mov
pushl
lea
jmp
clc
add
pushf
mov
call
push
xorb
lea
lea
call
jmp
movw
call
mov
pushf
pushf
lea
jmp
mov
pushf
pushf
lea
jmp
add
mov
call
test
pusha
stc
cmc
mov
jmp
jmp
jmp
pusha
movzbw
pusha
mov
lea
jg
cwtl
pushf
pushl
mov
jmp
lahf
movzww
bt
xchg
test
push
call
mov
pushf
pushf
movb
pushf
lea
jmp
pushf
mov
push
call
call
jmp
mov
pushf
mov
not
mov
mov
call
movsbw
mov
pushl
not
setl
pop
mov
bswap
repz
popl
pushf
not
bswap
mov
ror
xchg
lea
lea
pushl
popl
cmc
clc
movl
pop
btc
mov
xchg
pushf
mov
lea
ror
sub
rcr
neg
or
add
ror
xchg
ror
rcr
rol
pushf
pushl
lea
bsf
add
shl
xadd
sub
call
mov
pushf
jmp
mov
call
mov
pushf
push
pushl
mov
movzbw
call
mov
movl
pushf
pusha
mov
pushf
mov
call
mov
pushf
popl
push
call
shrd
call
push
bt
sub
jmp
push
call
pushl
popl
pushl
pushf
pushl
pushl
lea
jmp
jmp
mov
pusha
mov
pushf
call
movzbl
mov
movw
pushf
lea
jmp
lea
jne
sets
btr
cmc
sbb
xorb
pusha
bswap
mov
pusha
mov
mov
pushf
lea
jmp
pusha
cmc
stc
mov
test
shld
dec
mov
bt
call
call
pusha
pushf
popl
pushl
mov
pushl
popl
pushf
movw
pushf
push
lea
jmp
mov
jmp
call
mov
call
xor
pushf
stc
pushl
cmc
ror
stc
sub
cmp
call
pushf
movb
pusha
pushf
popl
pusha
push
pushl
popl
mov
lea
jmp
mov
add
call
mov
cmc
jmp
jmp
jmp
jmp
mov
mov
mov
movb
lea
jmp
ror
movw
lea
jmp
pusha
mov
call
jmp
xchg
lea
lea
bswap
mov
movsbl
pusha
call
jmp
call
mov
push
ror
movw
push
lea
jmp
cmc
bswap
call
mov
shl
sbb
jmp
mov
sub
pushf
mov
pushf
add
movl
lea
jmp
sub
sar
push
xor
sub
not
and
ror
jmp
xchg
movsbw
mov
jmp
jmp
pushf
popl
jmp
call
bt
add
stc
pushf
stc
pusha
pushl
popf
pushl
pushf
lea
jmp
pushf
push
mov
pusha
mov
movb
lea
jmp
mov
pushf
push
pusha
mov
call
jmp
mov
push
call
pushf
mov
mov
pusha
pushl
ret
mov
push
mov
call
seta
clc
adc
lea
pushf
mov
pushf
bt
cmp
pushf
pusha
call
pushl
pusha
mov
pushf
mov
pushf
mov
movb
pushf
lea
jmp
not
pushf
jmp
add
dec
inc
not
bsr
mov
push
add
stc
pushf
not
rol
pusha
and
lea
sub
pushl
rcl
mov
jmp
call
pusha
jmp
add
lea
jns
pushf
pushf
mov
pusha
movb
push
pushf
lea
jmp
pushl
jmp
mov
call
pusha
pushf
xchg
pop
pushf
pusha
mov
push
push
movsbw
mov
not
push
movsbw
movsbw
mov
pushl
movzbl
lea
repz
popl
rol
cmc
btr
cmc
mov
movsbw
btr
not
bts
pushl
popl
rol
movl
btr
jmp
clc
call
mov
jmp
mov
xchg
jmp
pushf
pushl
pushf
call
rol
and
movzbl
inc
bts
neg
sub
shr
add
cmp
or
or
xor
not
movsbw
call
mov
not
pop
jmp
ror
movzbl
jmp
pusha
pushl
mov
pusha
call
call
mov
test
pushf
stc
sub
pushf
pushf
call
pop
mov
movw
repz
popl
rcr
mov
call
jmp
jmp
and
lock
and
push
lock
push
adc
lock
push
mov
inc
and
push
icebp
and
lock
and
push
nop
jb
push
inc
xchg
and
lock
push
push
mov
lock
push
nop
js
push
nop
jp
push
mov
inc
and
push
jo
and
push
mov
and
nop
jp
push
lock
push
nop
jb
push
loopne
and
push
push
icebp
and
rolb
push
shrb
and
push
sarb
xor
push
push
mov
push
inc
xchg
and
push
mov
stos
and
inc
xchg
and
push
push
jge
push
rcrb
push
adc
push
jo
and
rcrb
push
loopne
and
push
push
jge
push
inc
gs
pusha
xchg
and
loopne
and
push
rolb
push
inc
xchg
and
pusha
xchg
and
mov
and
push
rcrb
push
adc
and
rolb
push
mov
adc
pusha
stos
and
nop
jp
push
add
push
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
andb
rclb
push
loopne
and
push
loopne
and
push
jge
push
inc
gs
push
inc
and
push
jge
push
jo
and
push
loopne
and
push
and
push
lock
push
andb
loopne
and
lock
push
mov
shll
push
loopne
and
mov
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
and
push
and
push
loopne
and
add
push
jo
and
rolb
push
xor
push
and
push
loopne
and
push
mov
icebp
and
mov
fsubs
push
and
push
adc
push
mov
push
pusha
xchg
and
push
rcl
push
and
push
and
and
mov
pop
and
pusha
stos
and
lock
and
push
nop
js
push
and
push
nop
js
push
sarb
pusha
stos
and
push
rolb
push
loopne
and
push
loopne
and
push
loopne
and
rcrb
push
andb
push
mov
push
rcrb
push
shrb
and
push
inc
gs
jo
and
push
mov
and
push
and
and
loopne
and
push
mov
and
push
andb
shl
push
jo
and
push
rcl
push
loopne
and
xor
push
loopne
and
jo
and
adc
push
push
icebp
and
push
rclb
push
loopne
and
push
adc
push
pusha
push
push
and
push
inc
xchg
and
jo
and
push
icebp
and
push
pusha
push
push
lock
and
loopne
and
push
mov
push
mov
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
adc
and
push
andb
inc
sub
push
push
icebp
and
push
pusha
xchg
and
push
mov
and
inc
xchg
and
and
and
nop
jp
push
loopne
and
push
and
and
loopne
and
push
mov
lock
and
andb
lock
and
push
and
push
rcl
push
xor
push
mov
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
push
and
push
lock
push
nop
jp
push
loopne
and
xor
push
rclb
push
and
and
rolb
push
loopne
and
xor
push
nop
js
push
shlb
gs
add
push
nop
js
push
adc
push
loopne
and
adc
push
loopne
and
push
add
cs
call
into
mov
shl
neg
inc
bswap
mov
clc
add
pusha
push
call
jmp
movzbw
mov
test
pusha
add
jmp
shrd
add
shrd
xor
movzbl
cmp
pusha
pusha
call
pushl
popl
push
push
push
push
lea
jmp
call
push
push
movl
mov
pushf
pusha
pushf
lea
jmp
bt
sub
movb
mov
mov
movw
mov
mov
lea
jmp
jmp
mov
not
pushl
popl
movzbw
movl
bt
not
btc
mov
bt
jmp
jmp
call
movl
movb
pushf
pushf
mov
pushf
pushl
ret
pushf
xchg
jmp
shr
push
pushf
mov
jmp
lea
pushf
mov
pushf
movl
movb
lea
jmp
call
pusha
jmp
jmp
sar
shl
shl
mov
call
ror
mov
pushl
lea
jmp
xchg
pusha
pushf
call
lea
mov
jmp
pusha
pushf
mov
mov
mov
mov
jmp
pusha
movzbw
lea
lea
mov
jmp
shrd
mov
bswap
mov
bt
clc
add
pushf
pusha
call
mov
pushf
jmp
lea
cpuid
jmp
push
test
movl
pushl
popl
jmp
pushf
mov
pushl
movb
pushl
ret
xchg
test
pushf
add
call
xor
movzbw
movzbl
mov
xor
dec
mov
cmc
clc
add
pushf
jmp
bts
mov
mov
btr
xchg
push
mov
setnp
not
mov
push
cmp
bt
clc
add
movw
shld
mov
jmp
mov
rcl
shrd
pusha
mov
call
and
mov
xchg
clc
bsf
call
pushl
push
lea
jl
push
call
mov
pushf
jmp
mov
movl
pushl
pusha
lea
jmp
push
movsbw
pusha
mov
pushl
push
lea
movl
pushl
movb
mov
pushf
push
pushf
movb
lea
jmp
mov
mov
pushf
lea
jmp
cbtw
rol
shr
bsf
mov
pusha
xchg
cmp
mov
pushf
add
pusha
bt
test
stc
sub
test
stc
call
push
mov
pushf
pushf
popl
call
call
pushl
popl
mov
lea
jmp
call
pushl
jmp
call
pushl
popl
movb
mov
movw
movb
lea
jmp
repz
cmc
bswap
movzbw
not
push
jmp
jmp
pusha
call
pushf
popl
pusha
pushf
jmp
call
pushf
pushf
popl
pushf
pushl
popl
push
push
push
lea
jmp
jmp
push
pushl
popl
pushf
push
push
lea
jmp
pushf
call
mov
movsbl
mov
pushf
movb
movl
pusha
lea
jmp
pusha
call
cwtl
clc
mov
call
jns
push
movb
pushl
pushf
popl
pusha
pushf
pushl
popl
push
lea
jmp
push
mov
push
pushf
call
push
mov
movb
jmp
stc
sub
pushl
cmc
movb
add
call
add
pushf
pushf
popl
lea
jp
popl
pusha
push
lea
jmp
push
lea
jne
stc
xor
jmp
pushl
pushf
lea
jne
shl
mov
stc
and
pusha
cmc
clc
cmp
pusha
pushf
lea
jne
test
sar
xorb
lea
not
push
movsbl
mov
pushl
push
lea
jmp
pusha
mov
movw
pusha
xchg
pushf
jmp
pushf
lea
jg
mov
call
sub
pusha
call
lea
sub
neg
sub
mov
mov
rol
bswap
rcl
add
cmp
btr
shr
mov
mov
pushf
movsbw
xor
bswap
adc
or
neg
stc
lea
sub
pushf
movl
neg
bswap
sub
bt
not
bswap
shld
xor
cmc
movzbl
push
ror
rcl
stc
mov
push
ror
call
neg
bsr
dec
shld
mov
clc
add
pusha
pushf
pushl
pushf
lea
jmp
mov
lea
movsbl
bswap
mov
pusha
bswap
repz
popl
clc
lea
btr
cmc
mov
movzbl
pushl
popl
pushl
movl
movzbw
jmp
dec
cmc
stc
shl
neg
bt
mov
xor
jmp
lea
jnp
pusha
mov
call
push
or
bt
xor
call
push
call
pushf
mov
pusha
jmp
jmp
stc
add
cmc
sub
call
lea
call
mov
push
push
pushf
sub
test
push
stc
and
pusha
jmp
push
movl
call
pushf
push
pop
mov
push
call
xchg
clc
cmp
pushf
pusha
mov
movl
pushf
sub
call
mov
call
clc
pusha
add
push
dec
jmp
push
mov
push
mov
pusha
call
call
pusha
not
cmc
stc
test
sub
stc
cmp
cmc
and
mov
pushl
mov
mov
pushf
mov
movb
pushf
popl
pushf
jmp
test
shl
pusha
jmp
mov
mov
movw
push
mov
lea
jmp
not
pusha
mov
push
cmp
sub
jmp
jmp
btc
jmp
mov
mov
movw
push
push
lea
jmp
jmp
pushf
pushf
popl
call
aas
aad
movsbw
notl
jmp
lea
rol
pushl
popl
pushf
stc
rcl
movl
call
push
pushl
cld
call
pushf
mov
pushl
popl
pusha
pushl
movb
lea
jmp
call
cmc
pusha
mov
pusha
mov
jmp
movw
mov
call
add
pushl
pusha
pushf
jmp
neg
push
push
cmc
pushf
sub
cmp
test
cmc
sub
test
cmc
sub
ja
add
call
push
jmp
pushl
mov
jmp
push
mov
movb
mov
pushf
lea
jmp
pusha
pusha
pushf
mov
jmp
add
ror
call
pushf
push
mov
push
mov
jmp
lea
jge
pusha
pusha
lea
jne
jmp
mov
xchg
movzbl
pushf
mov
lea
push
movsbw
lea
movzbw
push
pushf
mov
repz
popl
bts
pushf
pushl
bswap
mov
bts
not
btr
pushl
popl
push
movl
clc
movzbw
mov
pusha
ror
pushf
movl
lea
jmp
mov
jmp
mov
push
pushf
movw
lea
jmp
jmp
sub
pushf
lea
push
jmp
push
mov
pushf
pushf
lea
jmp
mov
pushl
call
ror
jmp
or
mov
jae
cmp
mov
cmc
pushf
sub
clc
test
shl
pusha
mov
lea
jge
pushf
mov
pushf
pushf
popl
pusha
pushf
pushl
popl
pushf
push
mov
lea
jmp
pushf
pushf
popl
pushf
call
cwtl
call
