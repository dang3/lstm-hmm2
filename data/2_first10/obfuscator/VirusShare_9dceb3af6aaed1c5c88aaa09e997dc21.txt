sub
push
sti
cwtl
adc
aam
push
push
cli
xor
adc
stos
addr16
pusha
add
fdivrl
cwtl
xchg
sahf
in
outsl
adc
loope
pop
int3
js
andl
scas
sti
mov
xor
ja
mov
sub
or
mov
in
jle
cmp
mov
loope
jnp
out
cmp
or
or
jle
pop
mov
or
stos
mov
inc
or
dec
mov
sbb
sbb
testb
pushf
inc
mov
dec
xchg
xlat
push
sub
xor
out
push
cmp
and
int
mov
pop
mov
scas
mov
and
pop
lret
cli
insb
push
lret
outsl
icebp
and
dec
jnp
inc
jmp
cmp
dec
inc
sub
jnp
jae
lahf
jb
and
pop
pop
sahf
das
inc
mov
inc
cmp
sub
iret
jne
and
sub
mov
ja
rcl
popf
push
inc
hlt
cmp
aas
push
mov
int3
or
push
ja
sbb
mov
arpl
mov
xorb
adc
add
xchg
sub
mov
lcall
add
mov
daa
jmp
sbb
jae
mov
push
jl
pop
hlt
jmp
pop
sub
ljmp
inc
fdivs
ret
sbb
mov
push
pop
pop
ret
bound
sbb
mov
mov
mov
in
movsl
fwait
imulb
jg
aaa
shll
rol
dec
lret
fdivrs
lret
mov
mov
and
jnp
jg
je
cli
xchg
pop
sbb
or
sar
push
pop
xchg
shrb
cmpsl
jmp
and
dec
hlt
ficompl
enter
cmpsb
out
stc
int3
pushf
push
mov
cltd
ljmp
pop
mov
pop
into
scas
ffree
or
movsl
test
cwtl
into
gs
push
std
stos
aam
mov
jbe
mov
pop
fistl
fcoms
movsl
lds
incb
movsl
push
out
and
fimull
icebp
mov
jae
dec
xor
inc
jno
insl
dec
jge
jne
push
mov
test
lahf
pushf
in
sti
jae
push
push
pop
pop
sahf
aaa
aaa
std
pop
cmp
inc
xor
and
jle
out
je
fld
adc
jecxz
int3
mov
sbb
in
fldl
sub
dec
xor
xor
aad
xchg
cmp
mov
shl
decl
stos
mov
mov
ljmp
xchg
rclb
outsl
push
pop
jp
mov
cmp
pop
ret
ss
mov
push
out
cwtl
js
jge
das
aas
sub
dec
mov
imull
push
adc
rclb
mov
jno
movsb
push
faddp
cmp
outsl
jmp
addb
loopne
dec
mov
sbb
loopne
xor
int3
sub
or
mov
into
add
push
daa
mov
sbb
add
jne
loope
repz
lods
data16
and
cmc
and
xor
jp
mov
mov
lcall
dec
sbb
test
fcmovnb
dec
ljmp
mov
cmp
mov
gs
jp
negb
inc
add
lods
mov
sarb
cmpxchg
popf
dec
adc
pop
mov
inc
gs
fsubrp
xlat
hlt
add
fmull
scas
rclb
push
ret
out
cld
push
mov
nop
js
lods
inc
imul
cmp
jno
cmpsb
scas
cmp
cmp
daa
inc
loope
into
pop
inc
cltd
roll
mov
xchg
mov
mov
stos
je
scas
fdivrl
out
xlat
ficomps
sbb
and
insl
sbb
xor
std
ds
aad
movsl
jae
jle
xlat
ss
mov
leave
adc
flds
lret
cld
push
xor
xlat
push
iret
pop
mov
outsl
ss
adc
and
cmp
mov
or
xchg
dec
dec
imul
je
adc
or
fsubr
incl
xor
mov
mov
pop
push
push
xchg
sub
mov
out
xor
cltd
pop
jne
fstpl
inc
pop
dec
lret
inc
mov
lret
sarb
in
lahf
mov
adc
or
sbb
daa
cmpb
cmp
sti
sarl
js
mov
xor
xor
mov
mov
es
mov
popa
pop
jno
pop
cwtl
lods
sub
jne
dec
jno
sub
cmp
sahf
inc
fidivrs
cmpsb
dec
sub
loope
mov
xchg
aas
sti
mov
sub
or
push
adc
xchg
ljmp
nop
ds
int3
jne
fwait
dec
inc
jmp
lods
inc
pop
out
cmp
sbbl
adc
pop
mov
add
scas
xchg
scas
mov
mov
sbb
aam
cmp
inc
sub
mov
fstl
popa
stos
pop
xor
jge
outsb
and
add
inc
fbstp
mov
popf
and
sub
xchg
sbb
pop
jae
and
aaa
je
push
sub
loope
xchg
or
dec
pop
jo
mov
call
fdivs
mov
add
jp
lea
imul
dec
adcb
xchg
adc
mov
and
loopne
les
mov
lcall
leave
jnp
insl
rol
sub
ljmp
daa
xor
adc
fwait
push
pop
jle,pt
pop
sbb
test
mov
adc
dec
sti
addr16
xor
scas
inc
fldlg2
adcb
outsl
daa
pop
mov
sub
cmpsb
rcll
sahf
mov
dec
push
jl
cmp
jae
push
test
pop
cmc
push
jns
cmp
pop
jle
add
nop
pusha
jg
jp
cmp
dec
inc
jp
jno
js
shl
push
pop
jg
push
push
add
pop
pop
push
push
sub
pop
pop
mov
stc
cmc
push
pop
push
and
pop
push
sub
pop
and
cmp
cld
cld
push
push
push
push
pop
pop
pop
pop
jae
push
and
pop
cmc
or
jnp
sub
push
and
pop
sub
ror
jmp
jmp
call
jns
ja
push
add
jnp
jo
cmp
push
push
push
add
pop
pop
or
push
dec
pop
stc
add
mov
push
push
mov
pop
pop
push
push
mov
pop
pop
push
xor
pop
jp
or
push
jl
rol
pop
cmc
push
mov
pop
push
add
mov
pop
stc
mov
xchg
push
or
pop
jne
push
sub
pop
jmp
mov
sub
aas
or
fisubrs
cmp
aas
push
jo
mov
add
mov
pop
push
dec
pop
loop
jecxz
mov
cmp
addl
add
add
push
jno
ja
neg
neg
pop
and
cmc
jns
or
lea
mov
ror
push
mov
pop
jp
jno
jp
sar
jnp
push
sub
pop
nop
push
pop
and
cmp
jne
jmp
push
movzbl
stc
nop
push
mov
pop
push
sub
pop
jo
add
push
push
inc
pop
pop
loop
pop
push
push
jne
shl
pop
pop
xchg
addr16
addr16
cmc
push
mov
add
pop
push
movzbl
push
pop
jno
cmp
cld
jo
jno
test
push
push
push
or
pop
pop
pop
and
clc
loop
pop
loop
jecxz
imul
insb
dec
add
mov
inc
jge
push
test
pop
push
jnp
cmp
pop
test
cmc
xor
push
or
pop
add
push
call
sbb
iret
out
enter
out
xor
rorb
stos
sub
lret
rorb
sub
mov
aam
lcall
pop
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
loop
jecxz
popa
jae
mov
sbb
clc
rcrl
inc
clc
push
mov
pop
nop
rol
xor
add
and
cmp
jbe
push
push
inc
pop
pop
sub
cld
not
not
dec
jne
push
add
pop
loop
jecxz
jecxz
cltd
test
push
inc
push
cmp
mov
mov
jmp
shrb
testb
call
xor
arpl
xchg
push
inc
fucomi
cmp
popa
fisubrl
fs
cld
loopne
sbb
pop
stc
xor
je
jmp
add
or
imul
pop
in
push
jp
cmp
xchg
imul
loop
imul
push
dec
rcll
jnp
mov
jle
sub
fcomps
cld
insb
sbb
push
jns
push
out
jp
roll
mov
ja
scas
and
adc
add
ds
pop
mov
push
ss
lret
pop
xchg
arpl
sub
mov
sahf
imul
int
inc
or
mov
es
mov
xchg
sbb
inc
pop
xor
sahf
mov
enter
lock
inc
pop
dec
icebp
pop
loop
jp
mov
jae
or
out
xchg
or
push
xchg
inc
movsb
push
insl
mov
jle
jae
sub
push
into
add
sahf
push
faddl
jo
cmpsb
cmp
mov
arpl
pop
out
insl
adc
cmpsl
dec
repz
mov
or
ljmp
sub
dec
cmc
push
shlb
je
rolb
movl
cwtl
pop
sub
fwait
dec
xor
pop
inc
stc
cmp
jg
cld
int3
pop
scas
rcr
mov
notb
xchg
or
push
cmp
imul
mov
lret
adc
xlat
push
pop
push
imul
xchg
pusha
push
notb
dec
xlat
cs
iret
aas
popa
stc
xlat
enter
mov
sub
aaa
push
jns
dec
cmp
sub
pop
add
mov
lret
jne
mov
jl
lods
insb
sti
dec
push
int
pop
loop
xchg
outsl
jnp
jl
lock
movhps
pusha
pop
inc
scas
je
mov
lret
push
xor
jmp
pop
add
andb
imul
push
inc
pushf
movsb
add
push
jb
fcomps
mov
es
cltd
xchg
inc
iret
inc
call
pop
stos
addr16
cltd
inc
pop
mov
ficompl
jle
cmp
dec
push
sbb
pusha
or
push
jbe
mov
in
push
sbb
fdivrs
fldl
pop
cmpsb
push
pop
insl
aas
jg
jb
pop
hlt
jge
mov
xchg
fs
inc
dec
pop
shrl
loope
sbb
adc
jg
jb
inc
stos
ljmp
push
cmp
hlt
ljmp
xor
insb
dec
scas
jbe
pop
and
push
push
push
mov
lret
xor
inc
call
pop
gs
cs
jle
repz
addr16
outsb
in
dec
scas
jl
stos
lcall
sub
popa
xor
ja
insl
iret
inc
push
dec
mov
jns
mov
out
add
out
and
jo
add
push
dec
inc
and
mov
std
pop
and
ret
xchg
jge
and
mov
fs
je
movsl
mov
test
push
jle
cmp
arpl
call
arpl
xorb
jno
inc
pop
pop
push
int3
mov
testb
movsl
pop
fcmovnu
nop
insb
push
cmp
sbb
inc
data16
push
lcall
addr16
mov
or
decb
adc
cmp
aas
in
and
rclb
jo
pusha
aaa
push
push
mov
xchg
add
shl
repz
rcr
dec
shlb
pop
jns
jns
divb
outsl
push
adc
mov
push
popf
xchg
lods
fs
cwtl
dec
adc
pop
or
xor
pop
push
jg
ja
dec
cmpsl
dec
mov
popa
aad
push
ja
jmp
in
push
push
js
dec
xchg
stos
jb
fisttps
jae
int
inc
sub
xchg
cmp
dec
orl
outsb
xchg
add
sbb
mov
shlb
and
add
ja
out
pop
inc
aad
mov
outsl
dec
in
pop
cmp
and
mov
push
adc
jp
cmpsl
sub
xchg
mov
scas
jge
fcomps
push
adc
xor
test
pop
into
pop
mov
fwait
push
dec
lret
pop
push
cmp
arpl
sbb
mov
pop
ja
ja
and
lahf
adc
cld
pop
xchg
shrb
jb
adc
cmp
push
mov
sbb
das
mov
jne
xchg
mov
imul
cmp
dec
adc
push
icebp
jne
pusha
jle
test
mov
inc
insb
xchg
pop
push
testl
insl
cmp
cli
inc
xchg
scas
jne
imul
xchg
dec
lret
jle
ljmp
jae
dec
arpl
int
popa
inc
in
push
into
int3
int3
addr16
outsl
cmp
iret
push
inc
xor
outsl
pop
and
fstl
loope
dec
push
shl
pusha
test
inc
std
arpl
push
jp
xor
and
dec
push
gs
pop
test
dec
fwait
jle
dec
movl
xlat
nop
outsb
dec
mov
mov
rolb
adc
fildl
sti
ja
shrb
add
test
or
push
negb
inc
mov
jp
sub
mov
aam
push
jmp
push
jmp
mov
pop
jg
and
jae
jle
jg
idivb
shl
shrb
adc
add
push
ficompl
xorl
mov
and
aas
mov
adc
xor
scas
mov
aas
dec
sub
push
js
mov
pop
add
in
paddsb
jmp
push
jle
sub
loope
xchg
and
adc
dec
fwait
jmp
lods
ja
mov
pop
push
dec
lahf
dec
leave
xorb
cmp
lgs
pmulhuw
push
push
repnz
sbb
ret
mov
outsl
pusha
add
or
dec
dec
stos
dec
xchg
push
insb
into
cmpsb
xlat
loop
test
dec
dec
je
clc
xlat
sub
mov
push
sub
pop
pop
lods
and
rcrl
rcll
lods
pop
jp
jnp
rorb
jge
jmp
jmp
loop
je
cld
scas
push
mov
dec
jmp
pop
rorb
mov
and
xchg
dec
enter
xchg
sahf
pop
sarl
sbb
fsub
xchg
out
dec
cli
xor
in
or
add
out
mov
and
repz
arpl
mov
mov
imul
lock
jp
loop
sbb
cwtl
mov
dec
mov
add
daa
out
insl
pop
or
mov
xchg
fwait
icebp
inc
jp
into
in
dec
aaa
shrl
pop
push
ret
mov
push
jb
or
iret
add
push
mov
mov
add
dec
adc
pop
ja
ss
jno
insb
mov
pop
cs
sub
das
fs
lcall
stos
movsl
nop
dec
sub
mov
pop
shl
cwtl
dec
dec
and
jne
fnstcw
out
and
push
pop
cmpl
cmpsb
aam
pop
jns
dec
mov
cld
mov
push
pop
lods
mov
push
sbbl
mov
sahf
push
mov
jg
fs
inc
orb
mov
aaa
cmp
pop
xchg
sbb
pop
int
push
aas
aad
dec
mov
sub
daa
test
pop
mov
fisubs
adc
notb
ljmp
push
clc
jge
xor
fnstenv
cli
adc
adc
lea
mov
push
addr16
mov
or
jp
cmp
fists
cmp
xchg
insl
hlt
cwtl
xchg
int3
jbe
movsl
pop
dec
stos
sub
mov
in
incb
ficompl
and
adc
hlt
mov
xor
loope
daa
movsb
nop
adc
mov
pop
cmpsl
adc
push
in
jo
imul
int
or
pop
mov
out
shll
pop
push
jns
pop
mov
push
pop
sbb
sbb
add
cmc
cmp
icebp
popa
cmp
jl
lahf
test
xchg
jg
dec
jg
loope
sbb
fs
out
push
xor
mov
mov
xor
in
dec
xchg
sti
mov
mov
aad
mov
stc
pop
es
cwtl
and
or
sbb
push
xchg
fsubr
inc
add
jno
push
jecxz
cmpsb
aad
sub
sbb
insl
xor
pop
mov
out
imul
and
and
cmp
sub
lods
add
adc
pop
cs
bnd
add
jbe
add
jo
push
inc
dec
inc
sbb
je
out
sbb
xchg
jnp
adc
imul
adc
jbe,pn
pop
mov
out
push
push
test
jge
test
and
icebp
jg
sbb
push
sbb
mov
sbb
ret
push
fldcw
inc
daa
pop
dec
pop
lods
jle
insl
push
pop
jecxz
loop
into
inc
jnp
mov
push
dec
pop
push
outsl
std
aas
pusha
pop
shr
pop
aam
pop
dec
sub
mov
inc
xor
xchg
inc
add
inc
inc
mov
lods
insb
pop
fwait
jb
ss
jg
aaa
inc
jb
xchg
inc
jmp
lds
mov
fsts
push
mov
pop
iret
xchg
cmp
ljmp
cmp
jge
lret
jo
sub
push
xchg
enter
test
movsl
push
or
adc
add
fldt
adc
mov
pop
imul
pop
mov
lock
dec
lea
or
adc
das
xchg
jmp
scas
inc
cwtl
inc
add
js
es
jmp
or
xor
jg
mov
cmp
dec
add
or
cli
xor
pop
in
mov
adc
repz
cltd
or
dec
je
pop
stos
add
dec
cmc
push
xorb
fbld
xchg
fcmovbe
mov
arpl
scas
pop
add
jecxz
gs
xor
push
imul
xchg
les
xchg
aam
pushf
xchg
aad
stos
clc
outsl
sub
sti
daa
in
repnz
imul
jp
mov
mov
dec
inc
cwtd
xchg
inc
or
pop
lea
cmpsb
mov
pop
cmp
sbb
loop
push
pusha
std
jmp
push
stos
shr
sub
dec
or
jbe
int3
enter
fdivs
or
xchg
mov
pop
test
jno
mov
jns
sbb
hlt
jl
stos
pop
test
iret
ja
sub
out
mov
addr16
addr16
sbb
xor
cmpl
ljmp
jl
add
push
je,pt
lods
cmp
push
out
adc
push
xchg
cmpsb
arpl
sahf
mov
movsl
std
jmp
pop
dec
add
bound
cmp
jne
mov
inc
push
and
sub
sbb
push
or
cmova
xchg
mov
jb,pn
push
insl
leave
xor
cs
leave
lds
mov
into
lea
ljmp
addr16
gs
stos
dec
repnz
outsb
loopne
daa
jl
push
adc
mov
push
dec
xchg
lods
popa
negb
inc
mov
pop
loope
test
int3
dec
adc
sahf
mov
bound
xchg
push
jo
ljmp
add
or
pop
test
test
jl
mov
inc
xor
test
lretw
je
push
das
pop
fsubrs
imul
jns
lods
mov
ja
arpl
in
dec
arpl
and
inc
or
aam
andb
cmp
dec
mov
pop
pop
das
orb
movsb
loope
jge
shll
ret
push
jge
dec
data16
inc
pop
pop
jle
ret
test
dec
xchg
lds
mov
jnp
jbe
pop
roll
cmpb
stc
push
dec
xchg
flds
insl
ljmp
inc
clc
pop
mov
mov
sahf
nop
pop
mov
lcall
jl
sbb
dec
imul
and
pop
cltd
jae
jbe
xchg
mov
imul
js
aas
aas
dec
jp
ljmp
push
mov
outsb
pop
push
and
testb
mov
jp
ret
outsb
pop
je
inc
iret
ret
cli
scas
push
mov
shl
pop
mov
cmc
lret
push
sub
lods
int
push
jns
cmpsl
enter
pop
mov
shrl
mov
push
mov
sub
mov
xchg
and
in
jb
sbb
test
cmp
cld
test
mov
mov
jb
arpl
add
and
rclb
dec
cpuid
adcb
divl
clc
jge
mov
xchg
dec
mov
fnstsw
fadd
and
adc
aad
in
popf
inc
insl
mov
das
fisubrl
cmp
sbb
push
jecxz
insl
dec
into
js
jbe
fisubrl
inc
sarl
push
fdivrs
cs
fwait
pushf
sahf
inc
repz
dec
push
and
adc
clc
movsb
scas
rcrb
sub
and
jbe
mov
fadd
es
jno
in
push
test
leave
stos
out
ds
insl
jmp
or
test
fcomps
sub
pop
idivl
mov
mov
ljmp
or
cmp
xchg
mov
sbb
ja
in
fists
cmp
out
cmp
lock
imul
xor
add
push
sahf
sbb
sub
xor
add
and
mov
loope
dec
jo
add
cmp
xorl
add
push
push
repnz
loop
mov
neg
mov
int
cmp
fdivrl
sbb
scas
or
mov
or
out
in
insb
push
addb
setae
lock
fwait
jp
in
xchg
fstl
xchg
subb
ficompl
arpl
mov
clc
pop
rclb
cs
ljmp
das
adc
or
cmpb
pop
stos
popf
xor
leave
ds
inc
push
ret
into
out
xchg
movsl
into
or
aam
imul
stos
popf
mov
movsb
adc
cmp
das
test
in
stc
cwtl
sti
or
xchg
in
adc
cmp
push
jb
scas
in
cld
or
imul
push
addr16
and
lea
inc
add
sbb
movsl
mov
fstps
xchg
or
mov
mov
insl
int
iret
sub
mov
imul
int3
lock
jne
icebp
xchg
pop
jge
fadds
cmp
inc
sub
push
imul
test
mov
cmpsb
cli
test
push
xlat
fldl
xchg
push
das
movsl
rclb
add
jl
hlt
fwait
sub
push
aad
dec
mov
incl
repnz
dec
push
mov
ds
add
lcall
pop
lret
cmp
push
add
mov
sahf
stos
mov
imul
je
push
cs
add
push
outsb
call
mov
mov
xchg
das
shlb
inc
inc
sahf
jmp
arpl
shlb
push
dec
stos
insb
cltd
cwtl
ret
jo
sbb
lret
sbb
incb
arpl
inc
mov
jg
or
mov
int
inc
cmp
rcrl
dec
xchg
cmp
js
test
jmp
fbstp
pushf
xor
push
in
aaa
push
scas
lea
js
hlt
rclb
push
loope
ret
std
sbb
addb
dec
out
clc
stc
inc
dec
pop
cltd
es
push
jae
push
popf
jbe
ret
mov
mov
jg
das
xchg
cmp
jg
ds
pop
inc
sahf
bound
stos
adc
mov
mov
jmp
or
aam
xor
movsl
pop
dec
add
out
adc
lea
dec
push
dec
int3
push
cs
stos
inc
and
add
bound
call
sub
add
into
shrb
popa
test
mov
out
adc
pop
test
pop
jns
pop
aaa
outsb
cld
rolb
sub
pop
idivl
data16
dec
lods
rcll
cmp
adc
inc
scas
rep
sub
pop
fisubrs
in
mov
dec
dec
sbb
flds
ficoml
mov
mov
pushf
cmp
jp
push
jae
ljmp
dec
std
inc
aas
sub
jns
adc
cmpsl
xor
push
xchg
xchg
es
mov
inc
cltd
cmp
mov
jb
jg
andl
popf
dec
rcrb
test
hlt
push
sbb
movsl
scas
shll
imul
or
je
idivb
iret
insb
xor
mov
je
mov
lds
adc
mov
pop
faddl
add
stos
ljmp
mov
xor
lea
or
mov
outsb
add
nop
jae
add
cmp
in
cs
mov
lds
outsl
shll
in
pop
add
repz
mov
data16
mov
daa
jle
lods
add
add
add
mov
jns
aad
add
hlt
xchg
dec
and
ljmp
jnp
dec
pop
es
inc
rclb
test
jl
cmp
aam
or
mov
push
rorl
stc
pop
test
mov
cvtpi2ps
jo
test
adc
xor
xor
fidivs
idiv
fdivrl
and
or
jg
sub
imul
call
inc
and
pop
mov
add
ret
cmp
or
mov
test
pop
lea
rolb
pop
stc
sti
mov
mov
push
stos
dec
imul
inc
outsb
dec
push
pop
mov
loop
cmc
mov
mov
sub
xchg
in
aaa
loop
sti
push
mov
shll
imul
pop
pop
add
lods
das
idivl
push
inc
pop
je
lret
cmp
push
xchg
mov
in
jp
push
pop
mov
cmp
loopne
outsl
mov
pop
stos
push
fdivrs
dec
mov
aad
pop
je
aad
and
int
mov
xchg
pop
sbb
icebp
call
pop
addr16
das
xor
push
pop
mov
aad
mov
push
cwtl
fs
insb
das
ss
pop
notl
iret
pop
lea
dec
add
xor
dec
mov
mov
fs
jbe
in
int
sahf
mov
in
mov
popf
jg
jo
test
out
jnp
movsb
insb
test
addr16
mov
sbb
jbe
fdivrp
lods
ficoml
pop
popf
in
fucom
cld
movsl
pushf
mov
inc
dec
cltd
outsl
cmp
out
push
ljmp
xor
sbbb
inc
bound
xchg
lock
ds
cmp
mov
inc
cmpsb
mov
jl
lods
jg
push
inc
sub
fstpl
dec
jmp
xor
mov
xchg
mov
stc
pop
outsb
add
add
ds
jne
js
lds
insb
sub
mul
push
dec
popa
xchg
fwait
lcall
inc
mov
rcr
adc
or
bnd
mov
imul
or
push
lret
fldenv
or
xor
mov
pop
testl
js
jmp
xchg
dec
hlt
arpl
loop
sub
jecxz
xchg
mov
add
sub
js
imul
pusha
loope
sbb
or
fimull
movsl
jl
add
or
and
imulb
cs
mov
and
mov
test
mov
jne
out
pop
fistpl
cmp
fwait
xchg
jp
hlt
jbe
xchg
das
adc
sbb
lods
addps
xchg
sub
jno
mov
jl
arpl
leave
xor
adc
push
cld
cmp
push
pusha
and
fildll
cltd
pop
les
out
addr16
push
xchg
inc
lds
in
pop
mov
fimuls
dec
shrl
xchg
inc
push
inc
out
cwtl
mov
cmc
push
inc
shr
or
and
cwtl
adc
mov
pushf
nop
pop
lcall
scas
ss
int
push
xor
pop
inc
dec
pop
fidivs
mov
pop
dec
lahf
sti
xchg
mov
add
xor
jb
mov
sub
inc
add
cld
in
shll
loopne
pusha
lcall
adc
test
and
movsl
or
dec
mov
mov
sub
fisubs
and
inc
or
nop
insb
mov
cmpsl
mov
ljmp
insl
mov
lds
mov
mov
in
pop
pop
adcb
mov
xlat
and
pop
sbb
adc
xchg
lahf
and
lahf
jmp
inc
or
fadds
movsl
loopne
mov
cmp
xchg
adc
flds
pop
mov
iret
lods
scas
jns
enter
out
push
lods
loope
out
in
push
addr16
sub
or
xor
jl
push
cwtl
inc
cwtl
into
xchg
push
cwtl
add
add
jecxz
lock
bound
test
jp
test
enter
inc
stos
jl
in
std
cli
push
call
jbe
adc
dec
clc
push
fsubr
stos
jno
imul
shlb
test
or
test
lret
sub
xchg
cmpl
pop
sbb
pop
xchg
inc
in
and
lret
scas
ja
push
dec
pusha
mov
jge
std
fwait
cmp
cmpsb
push
jnp
arpl
fwait
push
pop
in
jg
test
sbb
cltd
inc
iret
incb
and
stc
pusha
aad
int
pop
and
pushf
imul
and
push
add
or
ja
outsb
jg
cmp
fnstcw
cwtl
xchg
mov
shl
sbb
adc
mov
into
add
mov
push
fistps
es
dec
idivl
in
pop
add
int3
mov
sbb
xchg
and
add
jle
push
cmp
mov
mov
jle
and
mov
inc
push
inc
rorb
popl
cltd
pushf
cmp
ret
xor
cwtl
lods
xchg
jp
les
and
or
mov
mov
loop
xor
xor
imul
jns
out
xchg
mov
cmpl
add
pop
outsb
cmp
fwait
imul
cmpsl
mov
mov
add
push
shll
shlb
daa
test
mov
xor
sub
ljmp
push
push
mov
cmpsb
pop
jge
lcall
jo
push
mov
addr16
push
rcll
xor
xchg
xchg
inc
aam
mov
shll
adc
movb
push
inc
inc
sub
jp
andb
and
nop
fnstenv
adc
push
cmp
push
nop
outsb
cmp
pop
cmp
cltd
addr16
xlat
adc
push
fmull
dec
les
pop
rolb
mov
insl
mov
ret
sbb
sbb
ja
test
imul
out
repnz
iret
fsin
jl
adc
jmp
or
or
push
leave
inc
mov
enterw
mov
sbb
jge
mov
pushl
cmp
jecxz
rorb
test
xor
mov
addr16
fstp
pop
sahf
add
mov
lods
jle
stc
daa
inc
les
sbb
cmp
in
inc
andl
add
mov
fldl
imull
out
rclb
out
stc
jo
in
lret
jbe
mov
push
and
pop
out
lret
xlat
dec
dec
lret
xor
jns
sbb
dec
mov
lods
lret
cs
dec
mov
dec
mov
fistps
pop
xchg
jl
xor
xchg
or
lods
jns
push
and
in
outsl
pop
imul
dec
pop
pop
cmp
push
add
out
addr16
xor
popl
fdivrl
sub
aam
dec
push
out
jge
mov
cmp
int3
arpl
pop
lods
or
test
mov
push
or
shlb
lds
xrelease
dec
cmp
and
pop
loopne
mov
dec
cmp
shl
into
lret
mov
pop
or
shr
sub
in
sbb
sbb
jl
xchg
sub
mov
xchg
cs
imul
dec
pop
test
xor
adc
mov
mov
sbb
adc
mov
movsb
adc
adc
je
fistpll
out
ficompl
inc
xchg
aad
cmpsl
shrb
iret
outsb
nop
outsl
bound
mov
pop
or
inc
aas
ljmp
jp
xchg
rorl
inc
cmp
inc
out
pop
pop
mov
jmp
pop
fnstsw
and
data16
push
mov
cmp
sbb
xchg
orb
rcl
rol
ret
mov
mov
cwtl
mov
notl
aam
lret
mov
jnp
add
add
xchg
pushf
sub
es
testb
add
sbb
jl
mov
mov
jb
inc
aam
cmp
shrl
xchg
popf
add
out
scas
sub
cmp
mov
sbb
jl
sub
sti
and
mov
out
cmp
inc
mov
push
ss
lods
aad
push
inc
insl
pop
call
insl
stos
ja
ffree
jl
rorb
cld
popf
or
dec
sbb
xor
sub
sarl
lret
add
sti
insb
cltd
dec
mov
cli
jno
xchg
sbb
enter
lods
je
dec
inc
call
push
test
mov
jbe
push
sti
in
cmpsl
xchg
inc
add
jge
mov
roll
mov
xor
fists
ss
sub
aam
jbe
mov
bndldx
mov
jl
rcrl
push
push
popf
das
xchg
push
pop
jp
jno
xor
cmp
and
in
cmp
xor
into
cmp
in
pop
mov
ja
mov
pushf
and
js
in
inc
imul
mov
ficompl
pusha
psubq
popf
pop
or
xor
xor
push
xchg
test
mov
push
push
pusha
cwtl
lea
sbb
dec
popf
or
add
in
and
add
jae
push
fxch
les
daa
and
andl
push
mov
xchg
xor
ret
fsts
cli
cmpl
push
adc
push
mov
shll
sbb
daa
out
and
xor
adc
incl
roll
rorb
call
loop
xor
sub
test
outsl
pop
notb
xchg
aaa
inc
outsb
sbb
mov
test
dec
inc
inc
aas
daa
add
xchg
inc
std
and
xchg
hlt
xchg
data16
shl
rcll
daa
outsl
mov
and
aad
or
daa
or
fcoml
jge
jl
add
xchg
jecxz
add
ret
adc
movsb
xchg
loop
sbb
add
dec
in
push
testb
dec
hlt
jnp
pop
fidivl
sbbb
jp
sub
push
lret
cmp
lods
or
lds
loope
cmp
push
ljmp
sub
insb
fstpl
xor
lcall
push
and
and
test
lods
lret
lock
push
sbb
outsb
dec
mov
icebp
inc
push
and
jmp
or
idiv
mov
test
mov
lcall
movsb
mov
imul
aam
jl
std
push
lods
jp
xchg
jmp
repnz
cmpsb
imul
xorb
cmp
mov
adc
lret
sbb
xchg
loopne
cli
pop
lods
sahf
sbb
ss
lahf
in
nop
sbb
xchg
pop
or
mov
pop
cmp
pop
mov
sahf
sub
sbb
pop
mov
xlat
insb
insl
call
leave
xor
adc
add
pop
fisubrs
dec
jno
leave
xchg
add
dec
and
cs
rcrb
dec
dec
insl
movsl
push
rclb
push
lret
add
ds
or
mov
inc
sub
nop
or
lds
push
pop
or
jle
rolb
test
outsb
popf
decl
dec
adc
sub
and
push
insb
and
dec
push
dec
xor
mov
rol
inc
or
outsb
scas
add
clc
cmp
dec
rolb
sub
lock
or
add
lds
hlt
leave
pop
jle
and
clc
xorb
std
ja
and
in
pop
inc
dec
or
xchg
sbb
jge
leave
pop
push
sub
mulb
aas
mov
lret
leave
pop
jne
push
pusha
ret
mov
add
inc
xor
nop
lock
outsl
mov
aaa
fwait
and
cmpsl
and
maxps
gs
out
fld1
cmpb
push
outsl
jecxz
xor
fstpl
out
nop
inc
sub
into
adc
scas
inc
pop
outsb
inc
loope
rcll
inc
or
xchg
mov
pusha
xor
sbb
dec
jbe
out
cmpsb
adc
mov
pushf
ret
jle
iret
out
mov
fisubs
fsubs
movups
and
js
and
aaa
imul
loop
iret
sub
adc
mov
ds
push
xchg
mov
add
mov
xchg
js
pop
mov
add
pusha
popa
leave
xor
call
insb
pop
stos
push
xchg
arpl
sub
dec
sub
jmp
cltd
sub
jle
or
mov
sbb
inc
addb
ds
les
jmp
aas
das
xchg
imul
mov
cmp
sub
fwait
psrlw
pushf
mov
cwtl
in
push
jnp
dec
into
ret
jl
iret
mov
aas
add
in
arpl
jns
jg
push
xchg
and
out
xchg
leave
xlat
push
push
push
or
rcl
mov
xchg
mov
push
fs
cmp
inc
gs
sbb
xor
jne
pop
push
shrl
sbb
add
dec
rcl
arpl
or
or
mov
jmp
mov
sub
push
xor
jae
test
jecxz
addr16
push
push
lahf
and
call
icebp
sbb
pop
jg
sbb
insl
aam
xchg
out
mov
js
into
sahf
adc
aad
in
cwtl
insl
in
xor
jl
je
test
cmc
in
push
loop
mov
popa
add
leave
xchg
push
imul
into
addr16
rcll
movsl
push
mov
push
rclb
push
cmp
jmp
cwtl
pusha
andb
fisttpll
xor
mov
cmp
pop
pop
add
gs
stos
and
dec
sbb
inc
sbb
adc
cmp
notb
jae
or
aad
out
dec
lret
dec
cli
push
push
lcall
xchg
jge
pop
inc
addr16
movsl
push
in
test
cmp
add
out
adc
jecxz
mov
mov
pxor
inc
ja
xchg
xor
xor
inc
sub
jg
xchg
mov
pop
out
pop
sbb
jnp
shl
les
idivb
mov
cli
push
fmul
stc
xor
ret
fdivrp
jae
inc
and
cs
pop
nop
add
cld
rep
sub
mov
mov
fs
icebp
jg
les
lea
jnp
xlat
bound
jb
push
cmpsb
jno
jl
and
sahf
push
xchg
outsb
sub
pop
imul
outsb
test
sub
test
dec
cmc
pop
pop
pop
test
scas
cltd
cwtl
outsl
push
mov
fcmovb
and
push
push
mov
pop
jo
call
jbe
cwtl
hlt
cwtl
jno
in
dec
push
jge
xchg
add
or
leave
ret
and
scas
scas
jmp
xor
mov
push
cmpsl
sbb
cmp
bound
and
mov
pop
imul
push
cmpb
mov
in
fnstenv
ret
xor
dec
jno
fcoml
inc
jmp
test
aad
je
and
push
mov
sbb
xor
shll
xor
inc
in
loope
addr16
dec
dec
push
push
rdpmc
adc
mov
pcmpgtb
outsb
dec
push
cmpsb
inc
aaa
je
mov
sbb
enter
nop
and
pop
push
imul
cwtl
lret
push
push
lock
out
mov
push
enter
jecxz
inc
push
pusha
cmp
pop
lret
sarb
mov
inc
pop
xchg
inc
or
cmpl
dec
cmp
sub
jecxz
sarb
outsl
pop
jno
hlt
add
stos
pop
jmp
sub
fdivl
int3
add
sub
sbb
cmpb
fimull
cld
nop
push
ret
test
push
int
ret
ljmp
cmp
rcll
push
and
sti
ss
loop
fs
pop
pop
sub
addr16
jp
inc
int
test
jl
jno
loope
stos
mov
mov
jno
dec
xchg
int3
outsb
call
xchg
stos
add
int3
jg
cli
mov
mov
cmp
mov
push
push
xchg
push
xor
jmp
and
and
mov
repnz
cmpl
cmp
mov
jns
mov
lock
push
dec
stos
or
enter
mov
adc
or
nop
pop
clc
icebp
sub
cmp
dec
bswap
jp
jbe
loop
dec
jo
xchg
shll
sbb
cmp
jnp
pop
mov
popa
adc
fwait
fs
iret
lock
out
icebp
repz
imul
xchg
cld
add
adc
es
xchg
clc
or
xor
or
cmp
outsb
or
mov
or
cmpsl
mov
insb
dec
push
cmpsb
ja
fsubr
sarb
addr16
imul
out
shlb
push
imul
je
in
mov
sub
fmul
popf
ja
push
or
je
lahf
inc
addr16
push
divb
xchg
loopne
ficoml
adc
aas
pop
dec
loope
push
sub
and
sbb
std
cmpb
jne
out
xchg
movd
pusha
mov
mov
lea
mov
fbstp
inc
sbb
jne
mov
lea
je
insb
mov
adc
in
xchg
dec
inc
pop
pusha
fmul
fdivrl
test
push
movsl
in
data16
loope
push
pop
dec
insb
setb
push
repz
ljmp
push
mov
add
jmp
mov
add
xchg
add
into
push
cmp
jae
aad
push
push
cmpsb
jne
leave
test
push
rcrl
out
push
jb
test
xlat
xor
cmp
lcall
jae
mov
push
adc
data16
lods
es
xchg
sub
jne
inc
push
push
jbe
mov
xor
shl
sub
je
scas
dec
mov
xor
cmp
or
nop
adc
cld
rorb
xor
cmp
test
adcb
inc
sbb
or
pusha
lods
or
push
jmp
pop
xor
adc
dec
pop
and
push
aaa
xchg
jnp
ljmp
lds
in
out
pusha
push
dec
popa
and
mov
sub
or
mov
test
jecxz
aas
inc
mov
cmp
jo
cmpsb
ficoms
bound
pop
mov
push
jbe
cmp
ret
jmp
outsl
mov
dec
add
cmc
mov
and
out
jmp
mov
or
rolb
sub
jl
popfw
jbe
test
lahf
lret
mov
out
sbb
cmp
xchg
xchg
lods
sub
lcall
sub
or
loop
pop
jle
daa
sarl
ss
daa
xor
or
push
jno
jb
mov
pop
jo,pn
cmp
inc
dec
into
fbld
stos
in
mov
xchg
enter
add
mov
mov
aad
sub
push
xchg
add
jl
sub
in
mov
outsl
inc
xor
or
xchg
dec
test
lds
das
pop
arpl
jb
lds
mov
idivl
cmp
test
into
fcoml
orl
or
lcall
jmp
mov
lea
dec
les
aaa
xchg
daa
mov
sbb
mov
jns
arpl
cmp
insl
add
jae
out
sbbl
mov
jns
pop
push
cmp
xchg
inc
adc
in
addb
loope
test
test
arpl
es
cli
jno
sub
and
addl
add
xchg
test
fs
insl
and
repz
pop
outsb
mov
stos
js
in
inc
test
inc
ror
ret
aas
mov
loope
dec
sbb
cmp
pop
mov
mov
cwtl
shrb
mov
add
add
inc
movsb
jae
inc
mov
sub
in
das
sbb
mov
mov
ficoms
push
jb
push
insl
push
cltd
mov
aas
xchg
xchg
fsubrp
gs
popa
push
cmpsl
outsb
daa
les
cmc
sbb
js
daa
sbb
dec
mov
push
adc
cmpsw
lods
popf
es
lret
push
jns
repnz
or
in
pop
popa
shlb
mov
inc
aam
pop
and
pushf
lods
mov
out
fmuls
repz
iret
pop
mov
enter
loopne
mov
push
incb
add
sub
cwtl
sub
jl
mov
sbb
dec
push
inc
ja
add
icebp
hlt
pop
xchg
lret
mov
stos
fiaddl
js
lock
mov
in
aam
mov
popa
shll
jle
mov
les
js
cwtl
js
pushf
ret
in
aam
add
gs
mul
in
pop
add
or
bound
push
dec
rcrl
add
test
aas
shlb
repz
mov
sub
inc
mov
imul
bound
fnstenv
adc
or
xchg
inc
mov
roll
mov
repz
imul
xchg
into
mov
test
cmpsb
xchg
movsb
inc
mov
mov
inc
mov
orb
ds
pop
add
push
inc
rolb
stos
into
icebp
sub
ds
into
loopne
push
add
inc
mov
and
nop
add
jae
push
dec
ret
loope
mov
movsl
add
repnz
jae
adc
sahf
sub
fmul
push
inc
dec
inc
decl
cmp
and
mov
shrb
jbe
stos
ret
test
in
imul
in
xor
lahf
mov
mov
xchg
mov
cmpsl
dec
data16
pop
sarb
dec
lret
or
jmp
test
fsubrs
adc
lock
xchg
mov
out
jge
pop
sbb
in
xchg
sub
pusha
daa
or
push
jmp
fistpl
sbb
outsl
or
imul
popa
or
xor
xor
jb
xor
sbb
jne
test
cmc
adc
inc
cmp
or
lret
outsl
push
pop
push
xchg
inc
pop
sbb
jmp
icebp
jle
mov
jmp
mov
jge
pop
pop
xchg
sbb
ss
pop
ljmp
iret
cmpb
stc
jne
mov
inc
add
leave
cmp
stos
in
movsl
fisubrl
pop
enter
stc
out
cmp
ret
cli
das
mov
arpl
movsb
jnp
jb
jmp
xor
es
mov
push
stos
jmp
and
into
cmpsb
jb
nop
cs
mov
jge
mov
cmp
pop
int
jnp
lods
cli
or
push
lods
xchg
mov
cld
mov
dec
xorl
fstpl
in
pushf
ss
out
sub
shlb
adcl
int
jmp
mov
xorl
fdivrs
mov
lret
and
dec
xor
hlt
fistps
adc
jmp
imul
cltd
add
push
fwait
add
mov
ret
fcoms
insb
pop
dec
mov
loope
jnp
xor
xchg
dec
fwait
and
movsb
lods
lret
jne
in
mov
sahf
cmpsb
fsubl
adcb
or
loop
sbb
jae
mov
push
and
scas
mov
mov
scas
cltd
lea
mov
in
dec
and
insb
scas
sbb
mov
inc
testl
and
mov
rolb
xor
jae
pop
pushf
fidivrl
loopne
stos
sub
jnp
cmp
inc
lcall
add
inc
fidivs
xor
inc
sbb
sub
mov
pushf
addr16
inc
or
mov
or
fmuls
xchg
inc
inc
loope
ja
rcrl
fwait
repnz
fsubr
lcall
fcom
shlb
pop
mov
orl
pop
cmp
push
shrb
loop
mov
addl
adc
rcrl
jbe
arpl
jo
pop
push
adc
iret
mov
adc
aad
mov
fs
mov
sarb
movl
lods
fnsave
dec
push
inc
nop
sub
mov
xor
mov
jl
jg
cmp
enter
dec
push
lds
and
add
mov
dec
mov
aaa
in
sbb
or
and
ret
jns
mov
imul
xor
pop
fildl
jle
je
xor
lret
jbe
jb
rol
stos
out
add
or
sbb
scas
sub
mov
mov
cmp
cmpsl
mov
push
add
pop
dec
cli
jle
xchg
fdivrs
lds
cmp
aad
xchg
push
ss
xor
rorl
ds
mov
ss
xlat
add
or
push
pop
push
xchg
add
and
and
or
stos
push
jp
dec
xor
insb
stos
mov
add
pop
dec
adc
cwtl
stos
and
xchg
xchg
mov
loope
and
rorl
js
jl
test
mov
hlt
test
ss
xchg
jp
mov
adc
pop
xlat
lea
push
mov
inc
dec
mov
movsl
xchg
shl
mov
sti
or
mov
xchg
push
ret
es
loopne
nop
ja
pop
es
test
mov
or
dec
inc
mov
mov
ret
aam
mov
repnz
aam
out
outsb
repnz
sub
pop
sbb
adc
stc
pushf
pop
dec
cmc
fmull
aaa
fisubrs
aad
pop
fcoml
or
ror
jge
out
mov
or
adc
mov
sbb
inc
enter
mov
add
and
test
adcl
mov
cmp
cltd
and
icebp
out
and
push
sub
push
lahf
xor
pop
add
aaa
inc
out
les
jb
and
mov
in
std
out
push
push
mov
and
imul
inc
pop
sub
shrl
mov
mov
insl
push
loope
push
sbb
mov
pop
xchg
mov
leave
shll
dec
inc
mov
add
mov
dec
inc
mov
jno
mov
lods
jo
scas
mov
insb
lock
xor
sbb
push
sti
push
movsl
mov
lods
insl
rorb
pop
lods
xlat
out
dec
cmp
jns
lcall
cltd
push
or
mov
hlt
dec
xchg
add
clc
add
orl
and
mov
out
out
fwait
xor
data16
sub
push
inc
jle
out
mov
xchg
fmull
ja
sbb
rcr
mov
bound
or
hlt
pop
pusha
xchg
push
ss
lds
arpl
ljmp
adc
mov
or
stos
mov
sbb
jg
push
xchg
mov
xchg
fwait
js
imul
aaa
xchg
dec
out
ret
mov
gs
repz
inc
test
dec
cmp
icebp
in
jnp
mov
mov
or
mov
rolb
rcrl
xchg
testb
pop
ds
enter
sbb
daa
scas
sbbl
sbb
out
ds
fstpl
mov
pop
inc
mov
pop
cwtl
test
lods
adc
gs
push
lds
xlat
dec
fnstenv
hlt
call
fucomp
cmp
and
pop
into
into
popa
call
mov
outsl
pop
mov
mov
adc
and
mov
int
or
pushf
inc
and
sub
sub
insb
fisubs
push
imul
std
xchg
xchg
popa
xchg
outsb
adc
mov
adc
lea
rcll
lods
pop
or
pop
int3
mov
insb
mov
loope
sti
xchg
out
and
nop
sbb
enter
roll
adc
inc
cltd
mov
mov
add
push
pusha
imul
cli
test
mov
push
aaa
mov
loopne
cmc
movsb
xchg
jecxz
dec
mov
or
into
test
jecxz
cmovnp
sub
xchg
and
jae
and
test
ja
add
imul
aaa
ror
icebp
mov
jb
push
sbb
addl
scas
loop
push
neg
into
flds
xor
pop
pop
cld
xchg
rorl
and
ret
jae
or
push
cmp
repz
fbld
mov
fstpt
push
xchg
pop
push
rcll
push
test
out
push
cli
fidivrs
cld
stc
sahf
jae
je
or
daa
mov
sub
aas
jo
sarb
jmp
push
fmull
es
xchg
jp
push
dec
das
add
sub
pop
push
hlt
lock
or
xlat
jns
icebp
adc
dec
mov
jno
inc
add
ja
mov
data16
in
pop
inc
inc
sub
adc
outsb
or
das
cli
xchg
bound
mov
mov
jmp
adc
xchg
mov
fdivp
scas
adc
push
xchg
push
ss
insl
adc
add
inc
popa
cld
inc
sbb
push
lock
cwtl
out
dec
mov
adc
cmc
ja
out
sbb
mov
mov
fucomp
dec
sub
lods
or
test
test
xchg
sub
mov
sub
ss
jns
jp
pushf
jo
push
out
push
or
inc
popf
popf
ret
ljmp
ljmp
pop
cmp
and
ret
scas
imul
hlt
sti
cmp
mov
rcrb
jns
ja
mov
clc
stc
out
cltd
lea
xchg
cli
xchg
nop
popa
sbb
inc
sbb
sub
sar
fsubs
xlat
ret
insb
js
adc
mov
negb
xor
sub
pop
pop
les
or
and
lds
mov
in
aam
mov
push
sbb
sub
xor
popf
lret
test
dec
bound
fnstsw
xor
dec
dec
mov
fwait
cmpsl
sbb
xchg
mov
daa
xor
ljmp
dec
xchg
adc
pop
xor
jo
add
cmp
mov
fiaddl
pop
insl
ds
mov
nop
and
adc
lods
pop
xchg
adc
dec
xlat
cmpb
in
or
jl
add
sbb
clc
mov
mov
cld
or
call
cmc
into
mov
mov
pushl
xchg
sub
int
loopne
mov
adc
cmp
pushf
scas
stos
sar
dec
sbb
cmp
mov
mov
lcall
loope
rolb
test
in
adc
push
fimuls
nop
cmpsl
shl
fnstenv
sbb
insl
xor
xchg
mov
and
jmp
jge
mov
jp
mov
xchg
icebp
and
mov
mov
enter
jp
sub
push
cld
imul
pop
inc
jb
push
adc
pop
daa
in
fs
in
popf
outsl
pop
je
orb
jno
adc
fdivrs
in
or
scas
outsl
cs
pop
lods
adc
inc
jp
sbb
arpl
push
inc
adc
sub
xchg
repnz
or
icebp
cmpsb
mov
mov
mov
jae
call
lods
sub
dec
push
xor
mov
inc
bound
movsl
arpl
addr16
mov
adc
dec
out
shll
sub
cs
push
into
mov
pop
add
xchg
mov
aaa
shll
rolb
mov
or
mov
xor
mov
scas
fs
test
jmp
push
push
testl
jp
in
ja
data16
xor
push
push
lods
test
sti
rolb
dec
jg
dec
popf
sub
xor
xchg
push
jle
xor
cs
inc
mov
xchg
push
int
adc
into
mull
test
mov
test
dec
ja
ret
dec
int3
jmp
or
sbb
je
scas
jle
pop
dec
mov
push
fnsave
jnp
xor
loope
xchg
ss
in
push
and
stos
ljmp
daa
push
push
int
mov
cmp
cmc
dec
repz
out
cmpsb
sbb
outsl
or
lea
cmp
jno
mov
pop
add
xor
mov
dec
jae
xchg
xor
push
push
push
sbb
pusha
adc
add
psrad
scas
xchg
scas
outsl
pop
fstps
andb
jp
dec
jge
stc
inc
bts
scas
sbb
add
test
or
clc
or
stos
subl
xor
mov
sub
jnp
pusha
xchg
and
jg
fdivr
sbb
sbb
mov
dec
pop
out
pusha
mov
sbb
cmp
bound
mov
rcrb
ret
loope
inc
jnp
mov
xor
scas
push
jno
mov
add
and
mov
fsubrs
mov
xchg
mov
fisubrl
icebp
repz
aas
clc
lret
cld
mov
xor
inc
or
mov
sbb
xor
adc
rcrb
dec
es
push
movsb
add
pop
cli
aam
out
xlat
mov
mov
notl
cs
pop
cmp
push
rcrl
outsb
cmp
psubusw
stos
push
aas
dec
jp
or
cld
add
and
sti
es
sub
sti
repz
scas
push
jp
push
scas
fnstcw
out
mov
cmp
movsl
leave
cwtl
outsl
mov
clc
mov
push
clc
mov
adc
stos
es
into
or
es
lcall
dec
popf
push
frstor
jmp
adc
in
loopne
call
mov
pop
cmpsb
lea
mov
fisttpl
cwtl
or
and
addl
xchg
hlt
sub
pop
mov
xor
or
cmp
or
ja
ret
ljmp
cmp
add
dec
popf
lret
lock
push
repnz
and
xchg
adc
cmp
loope
das
push
movsl
push
sbb
adc
push
sbbl
jg
ret
pop
cmpsl
mov
mov
push
jno
shrb
mov
repz
mov
test
scas
xchg
inc
mov
inc
or
sbb
sbb
arpl
xchg
mov
call
iret
negb
pusha
sub
dec
jne
xor
out
lret
or
int3
and
adc
popa
push
sub
es
jmp
push
enter
dec
mov
lods
dec
subl
pop
jns
pcmpgtd
ds
mov
sub
sahf
lock
mov
pushf
shrb
mov
fstpl
and
in
inc
rolb
loop
adc
out
push
into
ja
and
daa
icebp
and
popa
inc
mov
pop
cmp
in
mov
push
sbb
adc
mov
mov
bound
lret
fnstsw
push
mov
shl
mov
ds
dec
out
dec
dec
jecxz
stos
ja
or
lods
xor
dec
cmpb
in
sbb
or
jae
cmpsb
jl
sub
ja
push
movsb
sbb
aam
push
pop
xchg
daa
cmp
push
adc
and
mov
push
and
mov
fsubrp
jno
sbb
js
sub
pushf
hlt
mov
pop
outsl
addl
sbb
cmp
pop
into
stos
or
lods
out
addr16
push
rcrl
mov
dec
cmp
sti
out
dec
xchg
pusha
js
adc
xor
cs
push
adc
pushf
std
sbb
mov
cwtl
and
adc
js
mov
dec
adc
push
fnstcw
inc
or
mov
push
lds
jmp
mov
fistl
scas
sub
in
pushf
imul
fstl
jmp
xchg
sar
int3
lea
ss
lcall
pop
into
hlt
sbb
xor
cmp
jg
inc
lcall
rol
es
imul
rep
mov
je
pop
cmpb
clc
cmp
jnp
dec
out
lahf
imul
push
mov
ss
jmp
les
fsubrs
add
arpl
sti
cmp
sbb
add
mov
js
outsl
adc
stos
test
jp
or
or
adc
xchg
pop
cmp
fisubrs
out
lret
mov
cmpsl
xchg
jp
rorb
loop
jmp
jo
cld
sahf
jae
sbb
es
bswap
and
cmp
mov
or
mov
mov
ja
ficomps
push
push
in
adc
orb
movl
mov
insb
push
add
and
push
daa
loopne
es
aam
pop
mov
jge
imul
fs
cld
inc
icebp
std
imul
add
dec
gs
adc
idivl
mov
cmp
mov
adc
ss
mov
rolb
paddsw
mov
lea
sub
or
push
sbb
xchg
mov
sysenter
xchg
xchg
jg
mov
mov
pop
mov
test
dec
in
fcoml
push
and
xlat
loope
pop
dec
cltd
xchg
cltd
popf
mov
sub
into
enter
lock
aaa
cltd
adc
cmp
test
lahf
sub
cwtl
or
xchg
les
flds
jp
xor
and
jmp
mull
or
sbb
stc
or
pop
mov
push
mov
lds
in
mov
dec
xchg
jge
cmp
inc
adc
sub
fwait
sbb
cmp
shlb
sbb
dec
jb
gs
and
lock
inc
mov
xor
xor
pop
jb
or
pop
addl
call
adc
mov
jne
and
and
mov
test
cmp
mov
or
mov
out
pop
mov
testb
imul
daa
shr
mov
pop
cmp
dec
and
or
cmp
sub
add
cmp
jb
les
sbb
mov
loop
mov
imul
pop
sub
mov
mov
or
and
push
lods
ss
lds
cwtl
xchg
pop
movsb
bts
in
inc
push
pop
std
out
cmpsb
inc
test
xchg
icebp
sub
xchg
in
fidivs
test
push
shl
dec
pop
out
pop
adc
movsl
cld
popa
shlb
aam
pop
ljmp
scas
mov
shrl
sub
cmp
pop
mov
push
ds
add
rol
jmp
mov
mov
push
adc
mov
push
lahf
subl
scas
idiv
in
jge
int3
in
cwtl
jnp
jnp
mov
xchg
pop
aaa
repnz
mulb
loopne
jbe
lahf
inc
mov
ficomps
sub
inc
mov
jmp
push
fisubs
nop
stos
rol
push
mov
inc
divb
fsubp
pop
cmpsl
lds
pop
jmp
push
inc
popf
inc
sbb
insb
mov
daa
inc
xor
pop
movsl
push
aaa
repnz
xchg
aas
cmp
clc
scas
neg
mov
out
loopne
dec
add
or
add
divb
fisubrs
mov
jge
lods
outsl
adc
push
mov
int3
jg
insb
in
insb
mov
pop
jp
inc
lahf
xor
add
rcrl
rcl
xchg
jb
xchg
mov
jns
sbb
cmp
xchg
daa
dec
mov
cmc
cmc
or
das
repz
xor
adc
cmpsl
inc
inc
dec
out
repnz
sbb
xor
lods
or
or
sub
scas
aas
mov
mov
js
clc
imul
dec
ljmp
out
xor
mov
xor
inc
sub
ret
jle
pop
sti
push
push
out
pop
mov
outsl
pushf
shrl
movsl
pop
dec
push
arpl
sub
in
loope
mov
push
loop
fwait
fs
add
jb
incl
mov
icebp
xchg
inc
mov
out
push
dec
sub
fbld
int3
xchg
pop
icebp
mov
sti
dec
enter
or
shrl
cmp
mov
int
jmp
imul
and
push
cli
test
dec
sarl
scas
mov
shlb
fiaddl
stc
xchg
sub
stos
dec
push
cmp
pop
dec
or
out
mov
mov
inc
out
ret
imul
mov
sar
int
test
jo
mov
xchg
sub
push
das
lcall
sbb
push
sub
jae
lret
sti
sbb
test
lea
mov
jb
cmp
js
repz
mov
inc
and
adc
test
jne
push
jmp
cwtl
cld
jge
arpl
int
fmull
adc
sbb
and
arpl
dec
push
sub
call
fildll
movsb
call
outsb
std
jecxz
add
aad
js
ret
roll
mov
jo
mov
mov
jbe
insl
push
xlat
inc
mov
push
pop
jns
sub
aas
sbb
es
sbb
sbb
and
mov
and
dec
sub
inc
mov
or
add
je
dec
in
rcrl
sub
push
add
es
scas
xor
cwtl
repnz
sub
lock
push
outsl
xorb
sbb
dec
pop
in
mov
pop
pop
addr16
cmp
add
xor
iret
movsb
sub
mov
add
add
push
inc
fs
pop
sub
sub
add
outsb
cmp
inc
lods
in
shlb
dec
xchg
cld
push
rolb
mov
scas
lods
cwtl
push
imul
imul
jmp
jne
aas
test
dec
call
int3
mov
mull
pop
mov
arpl
aad
xor
in
cwtl
sbb
ja
pop
ret
fucom
popf
in
push
dec
rolb
fwait
xchg
and
ret
pop
fcompl
sarl
mov
mov
mov
sbb
dec
out
jmp
cmp
hlt
outsb
mov
xor
add
xor
mov
mov
das
adc
jno
dec
pop
lea
lods
insl
mov
lock
popf
lock
pop
pushf
mov
sqrtps
lds
in
jge
cli
and
mov
int3
dec
mov
dec
rcl
sbb
jge
mov
lret
lods
jns
insb
jnp
mov
pop
orb
stos
loopne,pt
cltd
adc
push
xor
push
lret
lods
mov
dec
cmp
xchg
clc
xor
scas
cmp
jl
jle
icebp
iret
ss
int
cltd
push
cld
popf
and
cmp
sahf
mov
stos
mov
sbb
add
rcr
xchg
int
leave
aam
xchg
add
arpl
arpl
addl
enter
shrb
cmp
rclb
arpl
adc
in
xchg
push
dec
rcrl
or
pop
aad
pop
inc
out
push
call
xorl
inc
xchg
xchg
repz
pop
mov
mov
ja
int
or
jns
test
push
bound
out
xor
mov
icebp
pop
stos
data16
mov
orl
push
stc
js
fmuls
popa
divb
and
push
cli
xchg
sti
sub
in
push
cmp
push
sahf
loop
and
in
xchg
insb
frstor
fwait
dec
xlat
jbe
dec
xchg
pop
adc
mov
mov
sub
sbb
inc
sbb
loop
mov
leave
push
je
outsl
out
sbb
pop
xlat
and
inc
or
jmp
ficompl
lods
out
inc
mov
repz
setnp
lcall
inc
shrl
jecxz
fwait
sub
stos
fadds
push
and
imul
mov
test
enter
pop
test
inc
cs
xchg
add
out
sbb
adc
aas
lret
int3
mov
cmp
int
push
aad
jge
mov
std
fisubs
adc
pop
int3
jno
lret
in
hlt
fbstp
mov
mov
cmp
insl
jmp
add
ja
push
mov
sahf
fidivs
cmpsl
pop
ds
mov
or
or
xchg
pop
pop
popf
mov
addr16
push
add
and
mov
shlb
fwait
pop
imull
or
push
pop
call
lret
sub
dec
insb
stc
inc
xchg
mov
jg
pop
adc
popf
cmp
loope
jl
divl
xchg
dec
mov
loop
mov
test
test
or
inc
test
std
xor
and
lcall
pop
xor
out
xchg
in
lret
cmp
inc
jb
clc
xor
xor
fsubrp
aad
out
jmp
in
push
add
dec
ret
imul
test
rorb
push
fprem1
jb
jge
daa
ja
sbb
test
mov
pop
jnp
test
mov
dec
lock
addr16
fld
std
in
ds
mov
scas
sar
fldenv
aas
fwait
dec
negb
xor
iret
lock
mov
push
xchg
subl
push
pop
subl
test
push
or
pop
pop
pop
gs
cmp
mov
testb
dec
scas
mov
xchg
sahf
mov
xchg
sti
cmpsb
imul
add
clc
pop
out
aad
ficoml
movsb
mov
add
sub
lret
std
jne
in
jb
lcall
loop
xchg
inc
repnz
or
and
sbb
int
sbb
sub
pushf
decl
nop
jecxz
push
sahf
xchg
mov
lahf
out
hlt
test
pop
repz
and
pop
or
mov
ss
or
xor
and
and
push
mov
mov
pop
in
sub
adc
sub
fadds
sub
mov
insb
add
into
xchg
add
sbb
les
jle
dec
cs
lock
push
loop
push
mov
push
fisttps
or
pop
addl
mov
sub
lcall
and
cld
add
hlt
repz
je
pop
sbb
cli
outsb
aaa
jg
leave
sbb
dec
bound
sub
je
mov
clc
iret
inc
mov
mov
mov
stc
push
sub
sbb
push
push
sbb
mov
ss
scas
xchg
dec
sub
jmp
lahf
fisubs
loopne
jge
xchg
test
or
addr16
hlt
mov
sbb
inc
inc
fs
add
mov
dec
in
or
cwtl
jl
outsl
mov
or
outsl
xchg
mov
out
cmp
inc
xchg
movsl
loopne
loop
movb
mov
cmc
pop
into
mov
add
cmp
imul
inc
xchg
loope
repnz
mov
mov
mov
lret
test
push
jne
jns
mov
movsb
jae
jmp
arpl
xchg
mov
stos
push
hlt
out
push
and
imul
mov
insl
aaa
in
inc
iret
enter
jecxz
int
jmp
xchg
pop
sub
mov
xor
aam
rcl
mov
sbbb
mov
push
popa
fiadds
sbb
inc
adc
push
divb
dec
sbb
decb
in
loop
sub
loop
push
lret
aad
sub
leave
fmuls
add
mov
rorl
pop
cmp
lahf
out
shr
jno
pop
dec
fwait
stc
loop
mov
addr16
sbb
sbb
scas
mov
ret
add
xchg
jg
mull
push
lea
pop
and
adc
test
xchg
inc
and
gs
outsb
sub
pop
arpl
xor
sub
adc
dec
orl
imul
lret
cwtl
inc
mov
mov
inc
pop
lret
push
in
lds
gs
mov
stos
push
mov
mov
es
xchg
sbb
roll
fwait
cli
idiv
adc
add
xchg
sbb
andl
mov
mov
adc
push
cwtl
fidivl
mov
cmp
repz
xor
xchg
outsb
insb
adc
push
std
insl
adc
dec
fs
pop
rolb
cmp
add
loop
and
into
pop
xchg
aas
cwtl
mov
gs
jne
std
push
inc
mov
movzwl
outsl
decl
xchg
jnp
xchg
leave
cwtl
inc
cs
mov
fmull
mov
cmp
sub
xchg
xchg
fstl
or
sbb
and
test
mov
addr16
mov
mov
cli
ret
and
jno
or
lcall
mov
loopne
popf
mov
test
jb
lods
add
out
shl
jo
sahf
dec
in
lret
dec
int
dec
mov
sbb
jg
push
mov
fst
mov
movsl
xchg
fdivrl
adc
xor
aaa
cmpsb
fistps
sub
mov
sub
outsb
lret
inc
push
mov
inc
sti
xor
imul
dec
push
sub
add
repnz
stc
call
shll
jne
out
loope
jns
cmp
mov
fs
mov
adc
lret
frstor
mov
insb
loop
nop
mov
push
pop
pop
or
jmp
ficompl
je
sbb
push
inc
scas
hlt
push
mov
sbb
jo
mov
out
fadd
mov
push
loopne
out
jge
dec
ja
jns
mov
movsl
sbb
mov
cmp
push
dec
adc
and
xorl
sbb
pop
xchg
jb
inc
repz
sbb
push
movsl
xor
mov
imul
sahf
mov
mov
sub
or
push
pop
js
inc
sbb
insb
aaa
lret
and
popa
les
or
push
hlt
out
loop
leave
nopl
fsub
daa
jns
sub
ljmp
push
in
pop
push
cmp
mov
les
jl
fldl
or
or
dec
pop
xor
insl
pop
fisttpl
cmp
stos
dec
and
mov
jnp
into
je
dec
jno
ficoms
shrl
lcall
test
and
jne
mov
xchg
jnp
push
adc
cmp
decl
scas
loopne
out
or
sti
pop
cli
xchg
cs
sbb
pop
adc
adc
push
sub
cmpsl
mov
call
pusha
shll
or
scas
shrb
das
mov
sub
fmul
cmp
adcl
pusha
ss
push
pop
inc
push
mov
sar
lds
dec
cwtl
lds
loopne
popa
xchg
stos
sub
inc
pop
jecxz
mov
shl
shll
loopne
add
lea
mov
dec
mov
push
push
ljmp
divl
push
xor
jp
fs
push
aaa
arpl
or
scas
pop
sbb
push
push
or
mov
inc
pop
test
leave
inc
mov
or
out
cmpsl
pop
xor
shll
jp
xchg
test
mov
lods
out
lret
jno
push
outsl
je
testl
cmp
and
loop
ret
call
jno
hlt
aas
sahf
dec
or
test
mov
popf
and
aaa
stos
mov
add
or
adc
jg
inc
out
loope
sbb
cmp
shll
lret
pop
ja
xchg
leave
add
dec
jno
sbb
andb
push
jecxz
dec
movsl
sbb
in
into
es
adcb
lret
xor
lock
hlt
push
xchg
cmp
icebp
jno
xor
ret
clc
hlt
aas
repz
mov
stos
rol
xor
iret
mov
sbb
lret
adc
leave
in
fsubrp
jg
cli
or
arpl
ret
pusha
cmp
cmp
xchg
scas
jae
int3
sub
jg
lods
ds
sbb
rcrb
and
sub
dec
pushf
inc
mov
mov
jbe
push
jnp
xor
and
add
pop
inc
jge
ret
push
popf
clc
outsb
add
stos
rcrl
inc
rcrb
mov
xchg
adc
sub
and
mov
sti
mov
jg
jno
cmp
sbb
popa
cld
jno
xor
dec
mov
xchg
mov
push
pushf
dec
int
stos
jmp
mov
xchg
aad
shr
movsl
popf
mov
in
inc
jg
mov
js
mov
mov
je
aad
xor
test
jg
rorb
push
repz
fcomps
fsubrs
and
les
mov
push
pop
pop
mulb
xchg
and
pop
inc
sbb
shll
test
lahf
fsubs
das
mov
sub
ss
adc
mov
sbb
pop
mov
fs
cli
ror
jl
loopne
lods
je
stc
xor
movsb
jo
mov
push
test
mov
cmp
xor
push
int3
sub
xor
pop
mov
xchg
data16
pop
xor
pushl
fwait
adc
jg
xor
jns
xchg
mov
mov
clc
xchg
add
add
std
add
ret
xor
lods
push
lds
dec
xchg
stc
sub
arpl
test
pop
into
hlt
jge
ja
int
xor
cmp
cld
mov
insl
push
shlb
and
jge
neg
dec
fsubp
inc
mov
ljmp
xor
push
std
cmc
lods
js
aaa
pusha
sti
adc
and
mov
lret
pop
fsubrs
and
dec
sub
fadds
jo
sbb
out
lcall
cmpsl
inc
or
stos
in
bound
popf
pushf
adc
cmp
mov
test
pushf
push
rcrb
adc
cmp
mov
ret
adc
fldcw
xchg
int3
xchg
adc
mov
stos
lds
nop
pop
mov
mov
mov
shr
lock
loope
xor
repnz
dec
mov
mov
dec
xor
inc
fildl
mov
inc
mov
sub
mov
inc
adc
jecxz
in
add
outsl
push
add
test
jne
mov
imul
pop
pop
iret
jl
cs
and
xchg
test
sub
jmp
or
pop
mov
pop
outsb
dec
ljmp
mov
clc
subb
push
sti
scas
aam
mov
repnz
mov
mov
cmc
js
jns
and
movsb
xchg
scas
data16
jbe
movsl
sub
sub
sbb
xchg
push
push
ljmp
rcl
clc
dec
test
icebp
or
push
addr16
cmc
cmpsl
push
mov
cmp
shlb
ljmp
faddl
mov
andl
lret
shrl
adc
sbb
and
aam
or
lcall
jb
push
shll
jp
iret
push
inc
mov
in
movsl
decl
ja
xor
mov
int
lods
pop
ret
ljmp
and
sti
mov
imul
pop
add
and
insl
jno
adc
push
mov
cmp
shr
dec
xchg
push
xchg
xor
jmp
es
fs
adc
dec
push
or
adc
inc
xchg
xchg
sub
xor
fists
in
pop
das
stc
loope
jl
cmp
mov
ja
add
popf
xchg
mov
sbb
jb
adc
nop
push
sub
mov
xchg
dec
pop
sub
dec
fnstcw
lea
stos
cmc
arpl
fnsave
inc
adc
mul
stos
mov
jp
xchg
setg
sarl
fs
arpl
sbb
cmc
pop
push
inc
and
adc
sti
xchg
popa
ss
jno
xor
int3
icebp
push
repnz
cld
hlt
test
ja
jp
jle
inc
sbb
push
mov
push
mov
add
push
data16
mov
mov
xchg
rcrl
and
jmp
push
adc
pop
xchg
call
outsb
push
sbb
ja
lods
pushf
scas
flds
dec
pop
push
jb
into
pop
outsl
rorb
fcoml
xor
mov
xchg
insb
adc
addb
and
mov
mov
divl
jno
push
push
dec
cmp
xchg
cmc
cmc
adc
sub
xorl
mov
imul
lock
xchg
pop
sub
clc
lcallw
fwait
sub
lahf
cmp
stos
call
adc
jnp
xacquire
ja
int3
cld
flds
cltd
lret
out
pop
mov
mov
add
push
bound
inc
movsb
aam
add
cmp
pop
out
adc
and
pop
cmp
adc
rcll
mov
ror
pop
mov
pop
arpl
or
ret
fcomps
mov
aam
fdivl
neg
sbb
shlb
push
xchg
mov
gs
dec
sub
cwtl
lods
push
enter
ja
addl
inc
cmp
adc
es
call
jns
out
jae
ret
in
inc
aas
imulb
mov
mov
or
sub
lret
movsl
xor
jge
cwtl
insb
sbb
inc
gs
lret
xor
cmp
cmp
jmp
add
cs
ret
sarl
inc
add
jnp
xchg
add
xchg
mov
cli
js
decl
xor
mov
fwait
mov
jb
inc
insb
cmp
into
arpl
mov
add
inc
mov
mov
mov
mull
dec
out
lods
xor
repz
pusha
dec
or
rcrb
or
js
pop
and
lret
sahf
sbb
setge
out
stos
add
insb
xchg
stos
insl
add
iret
cld
mov
dec
std
jl
adc
dec
push
mov
xchg
ficompl
mov
mov
mov
aad
xchg
mov
push
in
mov
push
or
insl
dec
loop
inc
in
fs
ja
mov
jb
aam
xor
xor
xchg
inc
or
adc
jmp
adc
fisttps
sahf
mov
pop
push
xchg
scas
dec
cmp
jle
pop
sub
dec
xlat
es
fcomps
insl
jecxz
mov
fstpl
jo
and
sbb
aas
shr
inc
lods
mov
sarl
add
jne
in
pop
stc
adc
or
cmovno
jae
xchg
jl
rorl
aam
in
jbe
nop
addr16
sbb
jge
lods
jbe
xlat
lods
addr16
int3
xchg
inc
adc
pop
rclb
fdiv
pop
js
xchg
cmp
subb
jae
push
ljmp
mov
push
scas
jecxz
sub
sub
cmp
ret
cmpsl
imul
pop
pop
in
jne
jbe
fldcw
cmp
clc
and
addr16
ret
cmpsl
cmc
fucomip
stos
xchg
in
sub
filds
and
outsl
pop
cmp
sbb
stos
or
add
xor
cmc
arpl
dec
mov
lods
rcl
pop
cmp
in
aam
nop
arpl
sahf
fbld
jbe
inc
adc
mov
mov
lret
lret
and
jbe
data16
test
ret
movsl
and
push
insb
pop
xchg
mov
mov
adc
push
xchg
mov
jns
adc
push
out
add
ljmp
or
jbe
lret
cmp
cwtl
cmpsb
cmp
sub
stc
es
scas
jle
push
lcall
lods
dec
lret
mov
inc
arpl
pushf
push
out
ljmp
add
aaa
cmp
adc
or
xor
cld
je
aad
jbe
mov
icebp
ret
dec
mov
mov
mov
ret
xor
jb
outsb
into
scas
iret
mov
sti
inc
cmpsl
mov
insb
in
xorl
insb
inc
add
and
mov
xor
cltd
dec
movsl
sub
xor
mov
dec
loop
adc
fistps
pop
adc
mov
inc
rcll
xor
mov
xor
sbb
cld
xor
fidivrs
pop
mov
cmp
shll
or
sbb
cmp
daa
aas
mov
aaa
or
mov
and
test
popa
movsb
hlt
add
and
aad
jbe
jecxz
popa
mov
inc
mov
cmp
push
test
popa
and
push
shll
fistpll
inc
rcl
daa
inc
xchg
cs
les
xchg
mov
or
popf
repnz
rcrl
ss
nop
fmull
mov
imul
adc
ss
mov
sub
sub
shll
shrl
inc
jmp
mov
out
or
roll
xor
out
ljmp
out
les
fwait
loopne
lret
jb,pt
sbb
adc
mov
enter
in
dec
push
jp
arpl
inc
xlat
cli
inc
aad
jmp
in
lahf
pop
idiv
add
mov
pop
int3
out
stos
xchg
cmp
mov
mov
or
pop
pop
push
pusha
jle
dec
jns
mov
imul
mov
fnstenv
adc
testl
push
aam
pop
xlat
mov
dec
lret
xchg
es
in
lret
aad
sti
dec
mov
mov
pop
imul
sub
leave
sbb
lea
test
cmc
xor
shlb
xchg
inc
lock
ss
push
rorb
mov
cwtl
hlt
xlat
pop
out
int3
mov
jne
cmpsl
enter
ljmp
and
stos
roll
addr16
pop
repnz
stos
in
lret
not
sbbl
sub
pop
cmc
and
js
sub
pop
pop
push
pushf
add
mov
jle
dec
clc
jae
add
repz
sub
and
xor
lcall
push
and
test
test
shrl
ret
dec
test
into
addr16
sbb
and
inc
jp
xor
jmp
inc
mov
mov
cmc
clc
push
add
mov
inc
pop
movsb
arpl
jo
mov
pop
inc
outsb
ds
icebp
cmc
stc
mov
imul
rclb
iret
mov
fdivr
fwait
cmp
push
dec
pop
jnp
cmp
test
sbb
push
cli
jl
fisttps
push
pusha
pop
jle
adc
sub
inc
test
sbb
xchg
popl
inc
sbb
rcrb
scas
jae
popf
in
cwtl
repnz
stos
mov
ds
scas
xchg
cli
icebp
notl
rolb
es
pop
faddp
cltd
rcrb
repz
insb
mov
mov
test
clc
ret
test
and
xchg
pop
mov
mov
bound
das
add
sub
xor
jle
nop
in
sub
stos
dec
arpl
mov
push
sar
ret
das
call
sub
lret
fs
xchg
mov
fdivrl
cld
test
flds
cli
dec
pop
sbbl
mov
les
repnz
xor
shlb
rdtsc
dec
js
and
imul
cmp
jge
mov
cwtl
cmpsb
push
xchg
jnp
nop
sbb
shll
loop
sbb
pop
lock
push
leave
test
scas
int3
sub
jbe
cld
dec
test
cmc
aad
fsubl
repz
lods
inc
cmpsl
iret
inc
pop
cmpsl
pop
or
and
daa
lahf
pop
rcll
shrb
xor
pushf
sti
popf
andl
mov
std
stos
jnp
add
jecxz
aas
repz
int
andl
divps
jns
imul
pop
push
sti
pop
popa
inc
pop
ljmp
sbb
or
sub
iret
add
std
cmpsl
sub
push
cli
dec
outsl
aas
cmpsb
sub
dec
cmp
xor
inc
xor
pop
push
pop
int
push
inc
adc
les
sbb
test
movl
stos
in
imul
dec
mov
adc
lret
sub
inc
insl
mov
push
xor
subl
mov
inc
mov
inc
sti
les
push
xchg
mov
loopne
inc
jno
jns
test
sub
push
aas
pop
fsubrl
dec
fsubl
xchg
adc
data16
xor
cmpsl
mov
scas
sbb
cli
data16
lods
pop
pushl
push
or
insl
sub
push
cmpsl
cld
ret
inc
xchg
add
scas
and
cmp
or
mov
sbb
sub
pop
std
mov
out
dec
jo
fbld
pushl
jne
scas
xor
add
rcrl
outsb
mov
out
and
in
int
pop
sbb
loopne
outsb
mov
cld
stos
dec
inc
push
mov
mov
add
icebp
insl
adc
es
subl
fcoml
sbb
fwait
and
or
ret
cmp
fidivrl
movsl
div
inc
cltd
mov
xchg
add
pop
inc
mov
lahf
sub
mov
in
push
inc
loop
lret
inc
cwtl
mov
testb
pop
adc
jle
mov
mov
fwait
les
ret
nop
push
shrb
pop
je
or
xlat
add
jmp
sub
xchg
test
data16
fdivs
jne
dec
js
adc
enter
cmpsl
stos
xchg
inc
jns
aam
fnstenv
int3
sub
ret
sahf
and
repnz
sbb
mov
addr16
push
mov
mov
mov
lock
or
mov
inc
xchg
imul
mov
and
jp
ja
inc
pop
stos
cli
pop
xlat
jns
stc
adc
lock
and
aad
xchg
in
lea
imul
adc
mov
sbb
cmpl
stos
or
les
sub
xor
xor
pextrw
jno
scas
repnz
insb
jo
jg
out
je
decl
movsb
js
xor
mov
cmp
movsl
pushf
into
mov
xor
fs
aad
lahf
mov
mov
ret
mov
xor
and
fsubs
jbe
ret
add
bound
mov
jecxz
jmp
loop
mov
aaa
nop
imul
lcall
pop
mov
xor
mov
mov
adc
les
ja
stos
cmp
mov
adc
dec
out
inc
xchg
test
inc
aam
sbb
sbb
jge
and
int
hlt
mov
daa
pop
dec
pop
in
std
je
xor
mov
jp
sarb
lods
scas
test
idivl
test
add
cmp
mov
ja
fidivrs
pop
mov
int
pop
mov
sbb
das
xor
mov
in
mov
imul
int3
push
idivb
pop
sahf
xorb
inc
cmp
inc
inc
push
mov
push
cmpsl
mov
movsl
mov
fcmovb
icebp
int3
cmp
scas
cmp
test
mov
test
out
jns
mov
mov
psubusw
les
dec
add
rcll
les
mov
mov
lock
aad
add
or
es
sbb
mov
ja
cwtl
mov
in
in
push
jnp
mov
push
dec
pop
fs
mov
loop
insb
xor
out
scas
pop
sub
mov
add
lcall
hlt
repz
xchg
fistps
cmp
and
pusha
jo
rorl
in
mov
in
cld
xor
mov
sub
imul
enter
ret
mov
mov
or
xchg
das
sbb
sbb
mov
mov
fwait
adc
xchg
mov
lds
std
inc
pop
cltd
dec
push
cmp
cmp
pop
xor
pop
test
sub
mov
pop
push
pop
icebp
cwtl
xor
mulb
or
das
lods
or
outsl
cld
lret
test
rcrl
sbb
add
xchg
ss
stos
std
mov
mov
jb
sbb
xlat
lahf
lock
jb
sbb
ret
sbb
mov
lods
imul
or
les
cmp
jecxz
es
inc
in
jmp
jno
xlat
sahf
repz
lcall
sub
ret
pop
dec
test
gs
ljmp
outsl
leave
jb
popa
es
shll
in
pop
ds
mov
pop
es
fstps
orl
negl
popl
je
pop
xor
mov
mov
sbb
scas
sbb
push
jle
stc
pop
jp
fdivrs
add
lods
nop
xchg
push
xchg
cli
into
out
xchg
das
sub
push
push
loope
mov
and
cmpsl
mov
add
mov
cmp
ljmp
mov
mov
mov
jbe
and
jae
outsb
mov
push
pop
add
loop
int3
cmp
lods
fxch
dec
subb
adc
cwtl
jne
and
jno
mov
fnstenv
pushf
stos
dec
and
xor
test
fwait
sbb
enter
in
in
mov
mov
ffree
push
xor
add
mov
stos
fdivs
xchg
dec
dec
movsb
cmc
adc
cld
enter
jno
jmp
ds
es
jmp
stos
mov
adc
cmp
jl
mov
mov
jae
dec
xchg
xchg
push
cs
mov
mov
dec
movsl
iret
dec
sahf
cld
std
cltd
jno
push
scas
dec
mov
pop
movsb
inc
pop
movsb
data16
push
xchg
aam
push
mov
daa
sbb
fdivrp
icebp
mov
in
movsb
out
and
or
sub
int
movsb
ljmp
sbb
or
adcl
sub
enter
mov
push
roll
and
int
negl
fdivp
jmp
jp
mov
nop
fidivl
jecxz
inc
ljmp
sbb
and
sbbb
mov
lock
ret
ret
pop
data16
pushf
xor
jbe
scas
xor
fsubrl
mov
in
xchg
pop
and
lret
pushf
jae,pt
xchg
lock
fbld
idivb
aaa
or
scas
add
insl
pushl
notl
dec
xor
push
push
push
in
jno
fstl
adc
fcmovb
sbb
jb
xchg
mov
cmc
scas
jb
jl
lcall
mov
call
out
daa
xor
adc
and
adc
adcl
stc
inc
shrb
popf
prefetcht1
and
jecxz
or
addr16
cmp
fstpl
mov
fcoms
into
lea
fs
orl
fnstsw
aaa
xor
xchg
push
loopne
mov
test
mov
xchg
cwtl
lcall
mov
mov
jae
mov
sub
ret
dec
lret
pop
mov
mov
xchg
pusha
jne
push
scas
fsub
xor
sti
sbb
push
mov
sub
adc
cmp
mov
adc
sbb
shll
xchg
and
aaa
xchg
mov
mov
push
idivl
jns
stc
push
add
xor
mov
aam
lock
sbb
xchg
mov
sbb
push
rcl
lea
pop
loop
push
in
pop
mov
cmp
and
jecxz
dec
sahf
in
imul
in
jmp
mov
jbe
pop
or
arpl
jnp
ja,pt
outsb
and
inc
fdiv
fisttps
mov
orb
imul
jecxz
mov
jecxz
pop
je
jbe
in
subl
pusha
or
sub
lcall
movsb
inc
ret
addl
or
sarl
sub
cmp
dec
jmp
movsl
ret
popl
fbld
enter
repz
and
je
jle
adc
test
pop
push
dec
push
mov
jg
scas
and
adc
arpl
cmc
mov
ret
ret
loope
dec
clc
movsl
xor
sub
aaa
mov
arpl
addr16
leave
dec
mov
cmp
mov
pop
lods
mov
and
inc
or
lock
mov
stos
sti
test
sub
aas
dec
inc
inc
imul
fimuls
int3
and
add
push
sub
popa
mov
mov
dec
rep
mov
test
push
lahf
dec
div
rcrl
fdivrs
hlt
addl
repz
push
lds
xchg
rcrl
shll
add
nop
push
pop
sbb
xor
mov
add
test
inc
cltd
fsubr
lock
rcrb
lock
pop
mov
arpl
xchg
or
nop
fdivrl
das
sbb
xor
or
or
xor
push
je
inc
into
scas
and
inc
test
popf
sbb
aas
into
aad
stos
divl
jg
mov
insl
loopne
pop
aaa
jne
cmp
stc
mov
cmp
push
addb
mov
xchg
mov
mov
or
out
aaa
adc
mov
mov
popf
dec
cmpb
jl
arpl
stos
lds
sub
jne
divb
add
dec
or
inc
stc
xor
mov
or
push
cmpsb
test
adc
ret
mov
or
dec
aam
sbb
in
push
dec
daa
or
inc
ficoms
inc
stos
sti
jno
mov
xor
stos
jo
jecxz
dec
daa
sbbb
mov
imul
adc
cmp
mov
add
jge
adc
cmp
pop
inc
clc
incl
mov
pop
int3
push
jge
fsubl
jo
sub
xchg
xchg
enter
xchg
pop
js
inc
or
add
inc
dec
mov
jbe
mov
fildll
xchg
and
rclb
lods
aad
and
loop
mov
jp
adc
popf
mov
and
jo
jmp
mov
fs
test
test
inc
inc
cmp
mov
cmp
dec
dec
inc
in
inc
ret
jle
push
aam
adc
xchg
xchg
xor
push
cmpl
sbb
jbe
pop
rorb
hlt
sub
mov
sbb
enter
stos
jno
daa
pop
mov
adc
cmp
xlat
fstpl
lods
pusha
shlb
lret
pop
ds
fistl
dec
push
stc
testl
mov
dec
and
xor
pop
add
xchg
and
jg
fwait
sub
dec
sub
inc
push
sahf
dec
lret
movsb
adc
push
fldt
mov
dec
inc
clc
js
xor
ljmp
jmp
push
std
icebp
or
xchg
mov
jp
lods
fdivr
dec
mov
pusha
ror
sub
adc
ds
iret
mov
adc
push
lea
mov
mov
lds
pop
sbb
jge
jmp
imul
das
je
push
shll
cmp
fsubrs
mov
insb
cmpsl
sbb
enter
stc
pushf
loope
jmp
cmc
ja
psubusw
or
bound
xchg
mov
adc
es
fldcw
fbstp
inc
push
push
sub
enter
jecxz
jge
jnp
mov
subb
in
mov
xchg
cmp
or
pusha
add
xchg
fyl2x
dec
mov
and
test
jg
rclb
fidivrs
aam
push
rolb
or
add
adc
mov
jns
push
flds
cmc
adc
and
test
fisubrs
movsb
or
adc
mov
adc
push
pop
int
popf
mov
movsb
mov
xlat
or
out
mov
test
mov
sarl
lcall
pop
dec
cmp
sbb
push
inc
jae
mov
idivl
or
pop
insl
and
mov
loope
jae
or
and
gs
mov
test
mov
jo
in
popa
cld
adcb
ret
fwait
push
popf
ret
mov
mov
sahf
ja
das
mov
xchg
test
cmp
sub
or
mov
inc
cld
loope
jp
jne
aas
pushf
inc
inc
push
out
movsl
mov
add
movsl
pop
add
fs
dec
jp
adc
das
int
stos
fildll
push
sub
mov
aas
jnp
cmp
fildll
stos
aas
adc
dec
jno
and
leave
xor
pop
mov
xor
lret
cmp
cli
add
ss
lods
mov
pop
loop
mov
and
or
jno
std
inc
adc
sbb
and
movsl
inc
insl
and
push
cmp
cltd
mov
pusha
mov
lods
ret
pop
mov
sti
mov
ja
shlb
leave
pop
cs
hlt
rcrb
xchg
fcmovne
cmp
cli
sub
out
mov
xchg
xor
jbe
sub
in
negb
sti
adc
mov
test
roll
sub
jg
ds
sahf
sub
dec
icebp
pop
shll
stos
shrl
sbb
jns
cld
push
addr16
mov
cli
movsl
mov
inc
jno
cmpsb
inc
xchg
cs
lock
xchg
jns
cmp
aas
xchg
movl
ljmp
shlb
pop
or
test
xor
xchg
scas
mov
jg
jae
cli
inc
dec
insl
add
xchg
mov
lds
int
inc
orl
aad
loope
xchg
pop
xlat
push
call
cmpb
rorl
mov
sub
imul
cmpsl
inc
dec
xchg
xchg
pop
stc
cmp
sub
xchg
mov
insb
imul
shl
gs
pop
jge
adc
mov
popf
pop
cmp
push
into
dec
je
jmp
dec
mov
cli
insl
push
xor
das
sub
add
lret
mov
dec
adc
ds
push
dec
mov
and
push
je
lds
test
mov
or
inc
loop
repz
fldcw
repz
pushf
fsubr
or
movsl
aaa
push
pop
inc
add
xchg
or
sbb
je
imul
les
adc
xor
adc
jmp
gs
shll
sbb
ss
inc
pop
test
dec
pusha
mov
mov
mov
sbb
inc
xor
fs
mov
add
add
push
mov
outsb
mov
mov
push
adc
stos
xor
fchs
xchg
loope
xor
loope
xor
daa
hlt
jno
ljmp
ret
out
pop
call
fstl
lret
cmp
adc
pop
lods
xor
fisubrl
sahf
pop
shr
dec
addr16
aas
jecxz
arpl
imul
ss
pushf
adcl
pop
sub
cmpsl
push
jmp
loope
movsl
mov
sbb
sbb
add
jge
call
movsl
es
scas
xchg
jl
push
and
add
into
inc
jp
imul
imul
enter
jns
adc
xchg
ja
jg
adc
cmc
mov
divb
and
ret
pop
andl
cs
dec
fdivrp
xchg
aam
push
xchg
xchg
cmp
rcr
cmp
lods
jg
jle
test
in
loope
push
and
push
xor
div
mov
sbb
add
mov
jg
mov
mov
add
push
insl
movsb
clc
pop
push
jl
adc
roll
addr16
addr16
sub
idivb
jmp
mov
or
lock
scas
repz
pop
inc
jae
inc
or
in
stos
mov
mov
lret
xchg
pop
ja
jecxz
jmp
add
dec
jnp
sbb
push
add
cli
lcall
mov
push
jmp
loopne
jl
addr16
js
int
cwtl
test
imul
and
icebp
popf
shrl
mov
iret
aas
cmp
xchg
cltd
add
add
jle
loop
jns
fs
jmp
cmp
int
jbe
mov
fsubrp
lcall
in
pop
jbe
mov
xchg
jecxz
xor
fdivl
inc
mov
adc
adc
out
pop
push
and
sub
sub
xchg
out
mov
das
rclb
push
repz
push
cltd
push
cmc
pop
faddl
out
insb
xchg
lret
test
in
mov
int3
aas
mov
sarl
mov
out
popf
lea
ret
add
out
scas
cmp
mov
add
xchg
shll
pop
cmp
mov
hlt
push
pop
sub
xchg
and
mov
xchg
jg
pop
pop
add
cli
je
out
dec
icebp
cli
push
imul
in
mov
fsubrs
popf
xor
mov
xchg
mov
es
cmpsb
fsts
and
pop
and
sub
mov
and
movsl
mov
aaa
stos
das
push
cmpsl
pop
push
inc
dec
cltd
scas
jg
imul
and
adc
jp
lods
cltd
fidivs
inc
pop
pop
inc
das
popa
pop
dec
adc
pop
or
and
mov
push
das
dec
test
test
mov
xor
or
imul
xchg
mov
pop
jg
cmpsl
mov
dec
xchg
add
cmpsl
stos
popf
adc
negl
jno
lret
lahf
dec
add
add
dec
mov
add
mov
js
orl
mov
mov
stos
pop
sub
sbb
dec
jno
shll
vhaddpd
int3
push
and
cmpsl
je
push
xor
add
popa
pop
add
push
mov
lock
jecxz
add
pop
pop
test
and
ds
addr16
dec
dec
mov
mov
mov
sub
pushf
mov
pop
push
ss
jg
pop
outsb
jmp
xor
test
xchg
mov
adc
mov
in
fwait
pop
sar
stos
mov
push
aas
loopne
cli
dec
inc
leave
inc
mov
and
mov
push
clc
mov
adc
out
add
scas
pop
cmpsl
mov
bound
fiaddl
fcoms
cmpsl
outsb
mov
int
ds
jae
mov
loop
push
ja
dec
pop
sbb
and
popa
imul
push
sub
dec
jmp
pop
push
movsb
xor
fistpl
pop
add
add
ret
rcll
test
insb
and
cmc
imul
push
dec
mov
jl
add
mov
out
ffree
into
fcomps
pop
nop
ret
mov
xchg
les
sbb
cmp
aaa
dec
xor
movsl
daa
out
and
lods
or
sbb
js
leave
rcrb
mov
jl
xorl
leave
push
xor
repz
inc
dec
ljmp
xor
and
clc
sub
jp
adc
ljmp
dec
lods
dec
add
xchg
nop
mov
enter
pop
push
test
daa
push
mov
xor
insl
out
inc
cmpsb
popa
jl
and
ljmp
dec
push
movsl
mov
popf
pop
cmp
mov
xor
out
shll
cmp
inc
fwait
cltd
shll
pop
inc
cmpsl
call
jge
xlat
cmpsb
mov
xor
xchg
imul
bound
je
shll
and
jmp
cmp
inc
mov
test
push
sub
mov
mov
in
int
stos
push
push
sahf
xchg
sub
cmp
mov
xor
jns
and
std
push
and
in
mov
push
xchg
shrl
push
xor
mov
aas
hlt
fnstcw
test
cltd
add
pop
imul
inc
inc
or
ljmp
lret
mov
test
dec
addr16
sub
jo
call
jb
dec
pop
xorl
aam
leave
or
dec
mov
and
sbb
add
mov
or
push
xchg
inc
arpl
ljmp
jno
scas
push
bound
pop
adc
inc
and
inc
fwait
mov
sbb
js
jle
adc
fistps
cmpsb
rcrb
nop
lds
mov
dec
dec
mov
cli
test
outsl
pop
xchg
repz
push
mov
nop
mov
fldcw
inc
jno
mov
insl
cld
outsb
stos
stc
sbb
lret
repz
les
shll
std
pop
lods
pop
loope
ret
jmp
lods
push
mov
inc
sti
add
mov
mov
pop
pop
push
lock
test
loope
mov
cmp
ret
out
stos
pop
jmp
out
xchg
jmp
gs
pop
insl
add
jbe
sbb
insl
mov
jo
fucomip
or
frstor
and
push
rcrl
sub
pop
jg
or
push
sbb
das
push
dec
in
pop
repnz
and
hlt
movsb
pop
mov
in
jno
push
gs
jnp
jg
jb
xchg
pushf
ret
fidivs
lcall
aaa
push
mov
inc
add
dec
jne
aam
arpl
pusha
repnz
jg
mov
push
jnp
dec
xlat
mov
addr16
in
or
pop
cmp
ret
xchg
pop
pop
divl
xor
add
pop
ret
jb
aas
push
add
jns
adc
jp
maxps
jle
imul
inc
mov
push
adc
mov
add
adc
sbb
dec
js
push
add
sbb
clc
inc
cmc
pop
fmull
sbb
lret
nop
push
or
ficoml
jge
mov
xchg
stc
out
push
std
dec
dec
adc
sub
test
pop
div
xchg
and
dec
stc
out
dec
inc
xor
shlb
and
sti
in
cs
cmp
push
mov
pop
and
inc
mov
shll
and
cmpsl
pop
add
fwait
sbb
push
jl
gs
pusha
sub
loopne
jo
sub
pop
cmc
mov
add
jns
subb
mov
push
pop
mov
xchg
jbe
xor
pop
clc
add
mov
or
sbb
mov
das
jle
fimull
dec
ja
icebp
lretw
push
adc
leave
inc
ds
sub
xor
xor
int
pop
push
dec
dec
adc
insb
and
inc
push
test
sbbl
inc
mov
inc
jge
cmp
addr16
cld
cmp
mov
lock
mov
jmp
in
das
fdivs
incb
mov
daa
mov
or
xchg
aas
xchg
cltd
pop
jb
cmpsl
mov
test
add
lret
in
in
ret
lahf
ja
pop
movsb
scas
popf
mov
lea
jbe
lret
jge
addr16
int3
xor
mov
xor
sbb
aaa
dec
pop
jae
jne
mov
add
leave
sbb
repnz
int3
mov
mov
jb
cmp
ret
fwait
and
fildl
cmp
jle
adc
push
insl
and
mov
inc
cmp
and
jns
test
aam
ljmp
mov
and
mov
fdivl
pusha
mov
dec
push
inc
add
scas
iret
mov
push
jns
jne
shl
jle
mov
fsubs
cmc
icebp
testb
and
xchg
data16
sbb
cmpsb
push
sti
push
test
fnop
xor
dec
jle
test
pop
ret
lcall
fsubs
fnstcw
jae
jbe
adc
sbb
push
ffree
stos
pop
pop
cmp
mov
mov
icebp
das
rsm
pusha
sahf
xlat
add
push
fcomi
jg
cmp
ret
jl
mov
cmp
push
out
hlt
sub
fisttpl
jns
mov
stos
dec
push
dec
or
cmp
push
and
das
pop
sbbb
inc
cmp
cld
popf
out
lret
adc
stc
les
xorl
cmpsb
dec
xor
inc
mov
in
pop
jns
jno
cmpsb
jb
stos
push
lret
sub
ret
mov
leave
xlat
sbb
push
xchg
idivl
ret
loop
enter
movsb
jp
pop
pop
add
outsb
jg
dec
int3
cltd
pop
push
push
add
js
iret
or
das
and
inc
lea
xor
pop
mov
or
popa
mov
loope
sbb
add
je
lds
xchg
jo
je
sahf
aaa
movsl
pushl
push
shlb
pop
lcall
mov
lret
rclb
cli
inc
add
mov
das
test
aam
pop
mov
inc
dec
sbb
ficoml
jg
dec
push
xchg
je
pop
jbe
mov
lods
cwtl
mov
aad
or
xor
xchg
lock
mov
push
fsubrl
pop
mov
jnp
cmp
sarb
dec
pop
hlt
scas
sbb
repnz
cmp
fdivl
xlat
dec
inc
jp
das
mov
sbb
test
jge
mov
ret
sub
pop
cmp
int
pushf
dec
pop
dec
loope
loope
cwtl
outsl
mov
jle
je
es
imul
cwtl
aas
fdivrs
sbb
mov
or
lods
cmp
sub
popa
sub
repz
outsl
pop
out
mov
imul
xchg
lcall
inc
aad
in
movsb
popa
repz
mov
xor
ret
ss
inc
into
int
faddl
sti
sub
cmp
movsb
lahf
iret
xchg
scas
test
add
jmp
push
out
inc
add
push
das
pop
xchg
lods
loop
dec
dec
dec
out
push
xchg
lret
mov
aam
out
fs
stc
dec
mov
aam
pop
aaa
lcall
dec
das
test
add
jo
pop
insl
daa
inc
pop
dec
push
dec
add
decl
fmull
leave
daa
cmpl
adc
dec
repnz
out
mov
cmp
mov
divb
sbb
sub
push
xchg
pop
fildll
jnp
add
push
ds
dec
cld
add
leave
int
sbb
xor
call
stos
or
cmp
push
cmp
imul
les
or
lock
dec
fistps
jbe
mov
jnp
divl
and
pop
popf
mov
cmp
fstpl
stos
dec
rcrl
stc
lret
xor
pop
sahf
mov
sub
xor
pop
lahf
mov
ds
and
and
imul
mov
sbb
fsubl
add
pusha
dec
filds
fcompl
sbb
mov
push
jp
pop
aas
push
shlb
lods
bound
leave
gs
add
mov
push
shlb
jb
pop
xchg
fiadds
adc
mov
mov
push
xchg
and
repz
jl
out
icebp
aam
sub
pop
pop
mov
outsb
ljmp
int3
in
jl
inc
cmpsl
push
xchg
movsb
fcom
jmp
shlb
mov
lods
popf
jle
push
xchg
fs
jecxz
push
xor
popa
stos
jae
imul
ss
xor
les
call
movsl
inc
jno
dec
add
call
rclb
push
lock
jb
adc
or
movl
and
jl
pop
sbb
push
jno
ss
inc
pop
imul
movsb
xor
jmp
out
pop
dec
pop
out
hlt
rcl
sbb
iret
xlat
shlb
push
dec
push
sbb
xor
sbb
fnstsw
adc
cmp
push
xchg
sbb
pop
iret
xor
mov
cltd
cs
lret
repz
mov
lahf
hlt
cmpsb
jle
pop
lods
or
dec
cmp
lock
bswap
leave
mov
mov
or
cmp
loopne
pop
fwait
mov
mov
lds
jne
test
dec
cli
lea
jmp
push
out
mov
jnp
mov
adc
enter
adc
jno
or
sub
mov
out
xor
pop
jne
fiaddl
fucom
jb
dec
push
and
cmp
mov
xlat
mov
loope
hlt
xchg
fs
movsl
jle
loope
lcall
pop
push
xor
mov
fcomps
adc
aam
push
jg
out
mov
xchg
jle
aas
inc
enter
inc
out
jg
mov
fimull
les
or
lock
or
xchg
xor
sub
cmp
in
arpl
xchg
cld
mov
xor
xchg
cmp
sbb
inc
mov
jp
pop
repz
ret
cmp
adc
aas
testl
addr16
dec
inc
mov
xchg
sub
fiaddl
cmp
push
je
xor
sub
cvttps2pi
xor
pushf
mov
inc
adc
sbb
outsb
xorl
in
popa
mov
push
cltd
cmc
pop
ds
mov
cwtl
ja
cmpsb
inc
mov
lret
mov
dec
mov
mov
sbb
adc
test
push
fs
add
in
mov
cwtl
in
and
mov
std
lahf
mov
lret
pop
jb
test
and
mov
int3
inc
movsl
addr16
rcll
mov
popa
lods
cld
pop
out
test
inc
sub
mov
jge
lds
pop
mov
in
outsl
outsl
mov
xorl
call
pop
mov
out
mov
mov
fisubrl
dec
nop
push
in
out
mov
lret
push
enter
gs
repz
xlat
xrelease
add
pop
xchg
cld
lea
or
out
js
xlat
test
pop
pop
stc
dec
adcb
push
add
xchg
insb
dec
mov
fistpl
mov
imul
xchg
mov
inc
and
fcom
clc
imul
lds
fidivrs
cmc
sahf
outsl
sub
sarl
sub
and
lret
and
mov
insl
dec
push
dec
xchg
xchg
xor
pusha
fucomp
dec
fldl
jg
jo
sub
cmp
add
lea
mov
cltd
inc
or
lds
movsb
test
push
sub
jae
sub
outsb
divl
mov
and
stos
pusha
test
jle
push
andl
or
ja
ret
ds
xchg
cwtl
aas
or
inc
imul
roll
rorl
sub
pop
imul
inc
xor
jp
cmp
mov
and
xchg
int3
fmull
in
inc
adc
fwait
hlt
push
xor
in
add
sbb
mov
xor
push
fsubl
cmc
call
sahf
pusha
pop
ljmp
lock
xchg
je
mov
mov
add
rcl
jae
sub
hlt
and
push
pop
jmp
pop
rol
std
sbb
je
sbb
shrl
mov
sahf
pop
movhlps
cmp
jge
mov
xcrypt-ctr
cmpsl
rclb
das
push
pushw
leave
test
mov
scas
clc
test
sbb
mov
push
mov
cmp
mov
mov
add
mov
incb
icebp
xor
dec
lret
dec
ljmp
add
inc
mov
xlat
cltd
fiaddl
mov
mov
adc
sbb
xchg
cmc
ljmp
sbb
lods
fs
ret
adc
pop
dec
xchg
shll
jl
xchg
test
imul
sub
xor
test
dec
scas
ret
mov
and
mov
test
adc
adc
jnp
sub
and
push
push
push
mov
lret
push
js
int3
jbe
adc
pop
imul
push
stos
in
lea
jge
push
sbb
mov
mov
push
lcall
add
popf
std
mov
jecxz
jo
fdivrs
jp
leave
scas
sub
call
scas
loope
filds
mov
push
lea
mov
sbb
push
pop
push
dec
cmpsb
out
fistpl
cmovl
stos
nop
inc
cwtl
movb
addb
ret
icebp
testb
add
daa
pop
xlat
xlat
jl
push
mov
fadds
mov
mov
push
test
dec
mov
dec
mov
hlt
into
loop
imul
loope
xor
mov
ss
iret
mov
sti
insl
push
and
daa
xchg
dec
testl
jbe
sti
jle
je
and
into
push
cmp
jp
dec
xor
cmp
jns
outsb
push
dec
notl
daa
das
xor
and
out
rclb
or
outsb
rclb
push
ljmp
imul
out
sub
add
mov
shrl
push
loope
lods
sub
cmp
pop
mov
cmc
faddl
xor
icebp
in
in
inc
call
daa
and
or
xor
insb
addb
inc
mov
ficompl
adc
dec
mov
rcrb
cli
pop
addr16
xchg
lcall
mov
push
pop
rolb
adc
mov
imul
adc
fdivrs
das
js
lea
loope
cwtl
add
inc
adc
ret
inc
femms
mov
nop
fldl
inc
test
out
adc
aaa
mov
ret
loope
mov
test
out
lock
aaa
and
mov
mov
push
pusha
mov
adc
rol
aad
inc
cmpsb
std
hlt
xlat
psubsw
inc
movsl
data16
add
cmp
push
xlat
adc
pop
int3
je
cwtl
mov
adc
lock
ljmp
rcl
pop
ret
jle
in
shrl
and
jb
imul
pushf
inc
sub
out
and
xor
in
dec
cmpsb
addr16
mov
cmp
inc
pop
pop
cmp
pop
inc
in
rcll
hlt
jp
ss
xchg
notb
xor
mov
cs
pop
and
xor
push
dec
js
mov
iret
xchg
bnd
in
ss
rcll
adc
jp
fcompl
fidivrl
add
mov
sub
mov
in
xchg
pop
pop
lcall
and
adc
jge
push
ja
in
jnp
pop
popa
adc
cmp
xlat
cmpsl
icebp
inc
aas
inc
inc
dec
in
sbb
pop
mov
scas
testl
dec
sbb
adc
pop
pop
push
ss
push
jne
mov
inc
mov
inc
xchg
or
adc
pop
je
insl
sbb
icebp
rcrl
mov
test
mov
add
sbb
sahf
outsb
and
lcall
xlat
aad
push
scas
or
add
gs
pop
stc
paddusb
sub
or
shlb
mov
and
xchg
mov
cmp
mull
and
nop
stos
jmp
enter
xchg
int
xor
cwtl
repz
jmp
dec
repnz
pusha
ss
fwait
repnz
rclb
decl
sub
les
mov
jo
pop
mov
aam
psubusw
xchg
mov
ss
out
jg
insb
nop
int3
adc
push
pop
pop
xchg
mov
lahf
aaa
jne
les
loopne
sub
mov
mov
rcr
mov
insb
dec
jo
hlt
mov
mov
aad
push
in
movsb
popa
notl
loopne
and
dec
rcr
push
push
out
enter
imul
sub
pushl
mov
sahf
not
ds
pop
xchg
xchg
mov
aad
scas
mov
cld
adc
jnp
loop
cs
icebp
xchg
aam
and
inc
mov
loop
js
call
sbb
mov
bound
xchg
jp
daa
push
mov
sbb
repz
xchg
mov
xchg
das
lahf
push
mov
js
xchg
arpl
pop
jle
in
stc
inc
mov
popf
jmp
cmp
les
rolb
or
push
stos
int3
dec
loope
mov
mov
add
mov
jb
arpl
jecxz
mov
mov
insl
sbb
in
jno
int3
xchg
cmp
das
leave
call
cmp
insl
and
pop
int3
rcrb
outsb
fisubrs
cmpsl
nop
imul
or
je
ljmp
test
sub
add
bound
pop
xchg
mov
sub
pop
sbbb
adc
addr16
jp
jp
and
ret
push
xor
adc
fldt
test
sbb
jo
add
jne
fnstsw
imul
aas
shlb
imull
mov
popf
add
jle
push
jg
int
lds
jae
lcall
in
sub
adc
fwait
lock
mov
lahf
movsl
loop
dec
ss
and
mov
fs
icebp
or
push
or
sahf
rorl
pop
xchg
rol
push
shrl
lret
lds
mov
and
mov
push
xchg
xchg
inc
sbb
jnp
inc
insl
sbb
imul
lock
dec
out
sbb
pop
sbb
lods
pop
shrl
xchg
mov
imul
in
and
aad
int3
xor
addr16
aad
rol
test
lret
mov
cmpl
mov
aaa
aad
sbb
add
jl,pt
jbe
jp
popa
cmc
out
mov
mov
rorb
outsb
jle
mov
pop
pop
pop
aam
cwtl
pop
pop
adc
popf
ljmp
leave
jle
mov
stc
loopne
in
popa
mov
mov
movsl
mov
repnz
mov
cs
iret
jb
push
fldenv
sub
cmp
leave
roll
iret
add
cmpsb
pop
rcrl
aad
mov
pop
inc
dec
jle
cmpsl
aam
xorl
push
pop
scas
iret
jge
mov
pop
ret
cmp
or
and
gs
jne
int
add
adc
mov
jp
into
icebp
sti
clc
pop
or
inc
mov
mov
gs
imul
push
lret
dec
sub
dec
dec
in
pop
fwait
xor
xor
dec
inc
flds
or
mov
xchg
hlt
int
add
mov
loopne
dec
sahf
push
pop
ss
inc
bound
push
fimull
cmp
cmpsl
inc
add
call
mov
mov
call
loop
mov
out
inc
fwait
arpl
xor
iret
pop
sbb
dec
insl
dec
imul
xchg
mov
and
insl
loop
lret
push
inc
dec
arpl
xor
rorl
or
je
push
outsl
out
icebp
mov
js
std
pop
hlt
cmp
cmpsl
jno
and
in
mov
popa
mov
cmp
inc
inc
jecxz
pop
adc
xor
inc
sub
push
xchg
jb
dec
cmp
movsl
xor
mov
push
mov
push
inc
pop
fsubrs
mov
jmp
or
dec
sahf
loopne
xchg
movsb
repz
cld
call
inc
mov
lods
adc
mov
cld
aad
into
add
popa
mov
jge
andl
popa
fildll
mov
xor
aas
in
rclb
loop
xor
mov
push
adc
ret
sbb
lahf
push
mov
mov
insl
xor
and
repz
sub
ret
add
mov
sbb
or
sbb
movb
outsl
fwait
lea
pushf
gs
adc
fnstcw
loopnew
push
clc
in
jbe
mov
popl
aad
fstp
lock
arpl
dec
cmpsl
pop
lods
popf
xlat
fwait
and
cwtl
dec
sub
loop
stos
jp
dec
mov
xor
xchg
in
jmp
fwait
ja
push
test
xor
mov
adc
pop
lods
stos
add
jns
push
xchg
pop
pop
iret
sbb
sub
push
xor
or
mov
or
sbb
jl
push
repnz
sub
push
sbb
lock
sub
jp
popa
sbb
sbb
out
dec
icebp
scas
or
sub
xor
dec
mov
repz
rcrl
stc
pop
fwait
sbb
jmp
mov
xchg
or
inc
add
gs
jg
outsl
insb
push
adc
lret
cmp
mov
cmc
test
push
jecxz
or
aaa
fstps
mov
mov
mov
mov
dec
sub
xchg
imul
shrb
and
sbb
ficomps
push
jo
mov
sub
sbb
jb
into
and
pop
outsl
test
jne
jge
test
mov
mov
lcall
add
push
inc
fisttpll
movsl
push
ss
testb
mov
and
or
in
push
and
sbb
icebp
shrb
stc
fnsave
mov
jge
repz
in
mov
or
nop
cmp
fdivl
xor
imul
rorb
nop
in
lods
in
adc
cmp
cltd
xchg
push
leave
iret
daa
aaa
stc
gs
movsl
and
xchg
pusha
jmp
stos
sub
sbb
imulb
pop
fcom
test
cmc
mov
neg
mov
push
cltd
shll
jnp
sbb
or
fnsave
pop
xchg
inc
adc
or
test
fildl
adc
fistpll
mov
cmpsb
jns
push
std
clc
mov
xchg
das
adc
movzbl
lcall
insb
mov
outsl
fldt
xchg
outsb
sahf
mov
cmpl
xchg
xor
mov
cs
xor
jo
jmp
int3
arpl
push
inc
scas
jne
or
cmp
push
dec
lea
sub
and
adc
js
sub
movsb
jp
les
mov
or
lea
into
lea
mov
xlat
fisubs
or
xchg
lea
sub
pop
xchg
dec
cmpsl
mov
sbb
in
pusha
cmpsb
arpl
mov
jg
cmc
xchg
in
push
in
cmpps
and
ret
divl
cmpsb
out
outsb
add
sbb
mov
int
outsb
shlb
mov
xchg
sub
push
into
sub
idiv
push
cmc
insl
mov
add
sub
pop
addr16
jo
mov
fs
jo
add
jmp
cmp
stos
sarb
rcrb
sarb
jne
add
jmp
add
outsl
push
inc
shlb
mov
in
xorl
in
fmul
rcrl
cmc
push
scas
mov
mov
stos
ja
lods
add
stos
jg
addr16
xchg
jecxz
shrl
ljmp
ljmp
mov
xchg
imulb
add
leave
and
cli
fisttpl
mov
lock
sahf
pop
jg
mov
push
inc
mov
and
rolb
pop
mov
in
mov
mov
mov
daa
call
je
aam
xchg
mov
and
cmpsb
pusha
lret
pop
nop
push
loopne
lods
popf
test
adc
xor
sub
shlb
iret
addr16
mov
adc
cli
or
adc
imul
and
push
jno
ljmp
int
jecxz
mov
into
shll
and
cmpsl
push
enter
xlat
xchg
testl
or
outsb
adc
mov
subl
rcrl
mov
dec
mov
cmp
int
test
pop
xlat
mov
leave
int3
outsb
lods
lock
and
subl
jnp
imul
lcall
jb
mov
out
das
cmp
pop
scas
out
dec
mov
shrl
mov
aam
mov
sarb
fwait
shl
pusha
bound
or
test
rcl
xor
imul
mov
int
fistps
push
inc
imul
xor
mov
cmp
xor
xorl
test
clc
insb
lds
aam
shll
lcall
xor
repz
xor
imul
dec
mov
cmc
pop
jns
adc
cmp
cmpsl
movsl
push
into
and
rcrl
cmp
jmp
xchg
pop
mov
int
mov
mov
push
jge
out
jno
out
decl
loop
daa
jo
pop
or
outsb
daa
es
xchg
and
or
rcr
call
mov
js
inc
sub
inc
test
mov
jecxz
bound
mov
adc
call
mov
fidivrs
mov
aad
add
sub
dec
push
and
out
sub
es
xorb
mov
nop
popl
dec
dec
jo
imul
sti
out
dec
mov
inc
inc
ja
movsb
in
mov
fstps
fidivl
jl
push
push
pop
push
xchg
push
in
dec
adc
mov
stc
mov
push
cmc
ds
push
or
imul
movsl
jmp
js
movsl
vrcpss
and
xor
test
mov
mov
pop
test
shl
inc
mov
mov
add
push
cmc
lock
jno
xchg
xor
das
scas
xor
aad
add
shrl
popf
jb
jno
dec
enter
mov
stc
out
int
sbb
inc
mov
push
sub
shr
out
rcrb
pop
xchg
inc
fimuls
xchg
loop
xchg
scas
lret
pop
ret
push
fistpl
fstpt
in
jg
pop
mov
xor
arpl
sti
jno
out
push
cmp
inc
lret
add
mov
in
xor
xchg
and
sub
test
int
lock
adc
insb
xchg
cltd
les
loopne
dec
test
js
or
and
mov
pop
cmp
test
add
setge
cmp
mull
add
scas
mov
subb
dec
cmp
ds
shrl
outsl
ucomiss
dec
clc
jnp
pop
dec
insl
sub
mov
fs
mov
adcl
jnp
sti
decb
jbe
cli
push
and
adc
inc
push
push
mov
andl
int3
adc
into
fs
jns
xchg
dec
stc
xor
jnp
nop
add
mulb
and
add
adc
xchg
xchg
fistpll
sbb
and
loop
or
in
nop
jecxz
jnp
add
or
and
xchg
mov
scas
inc
insb
sbb
fisubl
js
test
cmc
into
aas
or
push
clc
jno
int3
addl
xchg
xor
repnz
sub
push
es
lret
xchg
insl
pop
and
jge
and
xor
mov
lahf
mov
sub
hlt
mov
push
or
jbe
test
xchg
dec
mov
leave
jecxz
xlat
jl
mov
xor
ss
fisttps
ds
inc
xchg
mov
xor
or
mov
cmc
cltd
jbe
dec
jbe
pop
dec
ljmp
aad
aam
sub
insb
pop
test
xor
test
push
sbb
fstp
cwtl
iret
inc
std
mov
sbb
lods
push
test
mov
cmpsl
insl
cmp
gs
add
shlb
xchg
in
aaa
inc
inc
jle
push
out
int
shlb
mov
orb
jge
out
mov
or
add
ss
cmp
icebp
xchg
inc
adc
add
dec
sbb
xor
sbb
aam
jb
xchg
pop
dec
jno
cmpb
insb
add
in
push
gs
xchg
insb
ss
movsb
push
adc
cmpsb
jnp
popa
lea
jecxz
or
xor
adc
push
xor
jecxz
popa
cmp
sub
ja
out
in
pop
jl
xchg
insb
cmpb
pusha
cmp
fadds
notb
and
sbb
daa
pop
and
pushf
jecxz
mov
in
lods
aas
stc
jg
sub
sbb
xchg
popa
and
ret
lods
loope
jmp
stc
pusha
scas
call
jns
push
or
add
xchg
lret
push
cmpsb
fmuls
ret
stc
iret
loopne
xchg
into
loop
xlat
aad
sbb
test
add
daa
fwait
xor
or
and
aas
inc
mov
or
dec
rcrl
data16
jb
icebp
sarb
icebp
sbb
inc
test
je
and
pop
jmp
mov
daa
in
add
push
popf
aam
xchg
mov
push
leave
cmp
or
pusha
aad
xchg
jecxz
cmp
out
add
mull
aas
dec
int
sbbb
pop
inc
lret
movsl
lret
fildll
daa
test
adc
sbb
sub
stc
popa
ljmp
and
mov
inc
pop
jp
icebp
test
mov
push
or
imul
inc
sbb
fs
popf
jmp
mov
sub
ss
or
push
sbb
out
pushf
mov
dec
mov
and
test
popf
jnp
fldcw
jae
lahf
aad
mov
enter
popa
sub
nop
add
push
xchg
xchg
cmp
mov
gs
adc
or
xchg
cli
and
sub
int
cmp
and
jns,pt
js
out
xchg
push
idiv
jg
clc
lcall
push
out
sarl
sahf
es
fisubrs
push
in
mov
loop
push
mov
sbb
sahf
jg
adc
sub
dec
mov
xlat
rol
cmpsb
cmpsl
aaa
adc
test
adc
add
mov
test
dec
int
daa
ret
push
push
or
jmp
imul
xor
ljmp
jmp
push
pushf
xchg
or
addr16
xchg
lcall
es
clc
pushl
mov
lahf
cwtl
fdivs
stc
xor
or
dec
push
inc
int3
pop
fs
out
roll
js
lock
loope
mov
clc
cmpsl
imul
std
and
lahf
and
ret
stos
mov
xchg
stos
je
je
lods
sub
push
inc
mov
sarb
push
pop
hlt
faddl
dec
jo
push
jmp
lret
add
sbb
cmpsl
mov
loopne
loop
inc
xchg
cltd
cmp
add
jnp
sbb
stos
lock
ljmp
cwtl
add
lret
clc
mov
adc
xor
int3
pop
jne
push
into
xor
mov
movsb
jge
push
js
sbb
bound
pop
mov
sub
mov
push
adcb
repnz
test
int
adc
jl
dec
sbb
mov
pop
sahf
pop
mov
int3
cmp
arpl
std
jbe
jg
pop
sub
sti
loopne
inc
push
cmpsb
stc
and
push
mov
pop
call
fwait
pop
inc
fisubrs
jecxz
xchg
inc
shl
pop
and
xor
aaa
pop
int3
out
push
fcom
cmc
aam
out
repnz
int
mov
jle
sub
ds
icebp
pop
mov
mov
inc
mov
mov
jg
cltd
out
test
adc
jmp
aad
jno
dec
push
daa
push
ret
scas
out
mov
sahf
push
mov
fwait
mov
jo
xor
insl
mov
ret
scas
mov
mov
nop
xor
xorl
mov
in
shlb
lahf
mov
or
adc
daa
pop
cs
xchg
xor
fisttps
or
lret
inc
aad
pushf
pop
in
mov
push
scas
adc
fstp
jnp
mov
lret
out
sub
push
call
cmc
in
sbb
push
std
mov
scas
jne
dec
in
int3
inc
xchg
dec
mov
hlt
lahf
sbb
roll
xchg
and
pop
sti
dec
and
pop
cmp
repnz
pusha
jmp
dec
add
lods
leave
insb
and
aaa
mov
lods
mov
aas
adc
sub
mov
sbb
sti
popf
sbb
lcall
jge
mov
stc
jg
sbb
test
mov
pop
adc
mov
and
test
push
mov
dec
int3
mov
loopne
iret
and
insb
and
lods
scas
pusha
dec
icebp
fidivs
iret
or
xchg
xchg
or
push
not
out
sarl
jmp
push
je
cmp
and
xchg
push
cmp
push
lret
aad
inc
mov
add
movsb
push
or
jns
scas
in
xchg
mov
push
outsb
lret
pushl
rcpps
lods
daa
push
or
push
inc
add
cwtl
inc
lods
fsubrs
mov
add
sub
xchg
jecxz
das
notb
rcll
jne
push
push
into
cmp
icebp
adc
push
stc
mov
mov
inc
inc
add
adc
incb
test
mov
movsb
mov
mov
xchg
sar
dec
in
repnz
aad
adc
pop
outsb
jmp
ja
lcall
sub
and
sbb
inc
call
data16
mov
mov
inc
in
int3
mov
clc
imul
cmp
fidivs
push
outsl
ds
push
aam
sbb
sub
cmp
xor
scas
cltd
insl
lods
repz
mov
cmp
scas
and
adc
add
and
movsb
pushf
outsb
mov
xor
fadd
icebp
out
inc
adc
pop
ss
fsubrs
xchg
pop
aas
loopne
cwtl
fdivrl
pop
fstpl
cmpsb
lods
outsb
sti
es
out
mov
clc
xchg
clc
das
aad
out
xchg
popa
mov
outsl
inc
jle
aam
mov
mov
jmp
ja
insb
add
push
xor
call
inc
lret
stos
dec
mov
dec
aam
xchg
sarb
imul
dec
das
sbb
test
cltd
popf
push
sti
mov
fs
int3
mov
adc
xchg
xor
mov
sbb
out
aam
sub
or
cmp
lahf
sbb
jbe
push
sahf
mov
cmc
lahf
repz
subl
sbb
sub
gs
xchg
test
mov
sahf
out
nop
mov
aas
fmul
loopne
sub
sbb
add
into
mov
xor
loop
rorl
out
or
pop
mov
and
test
cmp
push
rorb
mov
mov
jne
jge
add
dec
push
stc
push
add
fstpt
push
pushf
sbb
rolb
push
sahf
dec
scas
jecxz
lods
mov
daa
push
lcall
repnz
lcall
add
or
jl
dec
imul
and
sbb
adc
rolb
nop
jae
imul
lods
lods
cmp
pusha
xorb
aad
fisubrl
push
ja
fdivl
loope
lret
sub
xchg
cs
call
jne
mov
into
or
jnp
div
jo
andl
imul
lahf
push
sarl
push
cwtl
movsb
lea
rcrl
les
push
hlt
adc
mov
pop
mov
sub
stos
mov
xor
shlb
mov
xor
push
das
mov
mov
jo
fidivl
pop
fadds
test
sbb
cmp
es
adc
and
cld
ficompl
dec
mov
push
and
outsl
xor
lcall
test
xchg
push
out
xor
lock
push
in
xchg
pushf
push
mov
rcll
adc
sub
mov
pop
jmp
sar
mov
and
dec
jmp
xor
or
push
stos
mov
adc
adc
roll
sar
mov
mov
mov
rolb
push
dec
jp
int3
lea
sbb
jle
xor
xor
jge
lock
cmp
inc
ljmp
inc
sbb
adc
or
test
add
cmc
add
and
sbb
push
jo
lahf
xchg
sbb
sbb
or
lea
call
add
mov
push
xor
lahf
test
mov
and
pusha
daa
or
mov
jo
or
push
scas
loop
stos
and
cmp
jbe
imul
sarb
jle
nop
bound
int
ds
lock
aam
push
mov
or
adc
leave
inc
fisubrs
mov
jmp
lahf
push
mov
aas
sbbl
fnstenv
sbb
jge
es
stc
lea
mov
shll
pushf
icebp
ja
ficoml
or
cmpsb
add
mov
adcb
dec
loope
scas
mov
mov
aaa
insl
mov
sbb
cwtl
pop
push
cwtl
data16
loopne
mov
pop
test
inc
outsl
inc
aam
or
or
jb
jnp
fwait
mov
mov
ret
mov
adc
std
push
sbb
lcall
add
sahf
xor
xor
ret
shlb
mov
pslld
jg
pop
jnp
push
ret
pop
jl
jne
or
sbb
mov
mov
ljmp
shrl
mov
inc
dec
je
push
pop
shll
ds
inc
add
sarl
cmpsb
xchg
or
lods
gs
jge
add
inc
jl
stos
cmpsb
loopne
pop
loope
in
in
stos
repz
sti
xlat
mov
xchg
roll
adc
fimull
cld
fwait
data16
test
sub
in
inc
mov
xor
inc
in
inc
andl
xor
lock
out
movsb
xor
xor
outsb
ja
in
push
or
bound
pop
mov
xchg
lock
bound
pop
and
nop
test
inc
inc
sbbb
cmc
cmp
push
xchg
ljmp
jns,pt
in
rol
or
xchg
inc
aas
mov
adc
fistl
jge
xchg
jle
sbb
cmp
push
pop
dec
add
push
sahf
xchg
and
adc
mov
roll
add
and
in
push
pop
imul
inc
int3
push
dec
mov
cltd
mov
arpl
jns
ljmp
in
ljmp
int3
cmp
sbb
xor
mov
pop
sub
jle
jmp
jns
out
mov
jns
cmpsb
pop
jbe
ficompl
daa
push
jns
cwtl
pop
sub
mov
fsubrs
sub
gs
mov
mov
sbb
xchg
lret
cmp
andb
sbb
and
aas
out
aad
lahf
shl
bound
pop
orb
scas
arpl
and
push
sbb
cwtl
outsb
popa
adc
cmpsb
push
insb
mov
test
out
call
cmp
fs
sub
adc
push
dec
dec
popa
pop
pop
sarb
add
fld
cs
adc
inc
mov
ret
popf
xchg
and
push
jle
lcall
fistps
mov
popf
int3
lahf
or
rorl
test
popf
lret
push
sbb
or
dec
cmpsb
add
cmpsb
xchg
int
lret
or
jp
mov
jae
das
ljmp
push
test
push
in
add
mov
and
adc
imul
lds
stos
stos
adc
push
adc
add
mov
cmpsb
push
jbe
sub
cmpsl
xchg
lea
or
div
fnstsw
lahf
xchg
popa
orl
loope
xchg
sbb
insl
sbb
add
jp
incb
cltd
ret
dec
cmp
jae
pop
flds
fdivl
push
dec
xchg
jne
xor
xor
push
cmpsl
fs
xchg
push
cltd
fldl
decb
mov
mov
or
mov
in
add
xchg
cmp
push
out
stc
data16
pushl
stos
mov
lcall
mov
loope
ss
es
mov
sub
dec
add
orb
test
scas
or
fsubl
cmp
les
xor
jecxz
inc
ja
outsl
cmpsb
mov
pop
add
xchg
dec
and
sbb
sub
ljmp
mov
sub
xchg
rcr
xor
inc
adc
sbb
ljmp
mov
jbe
mov
loopne
into
mov
push
rolb
xor
ret
mov
movsb
inc
push
jns
pusha
into
inc
inc
repz
negl
hlt
mov
jno
cmp
fs
das
ljmp
add
jb
test
pop
adc
mov
mov
jb
jmp
xchg
hlt
clc
repnz
push
mov
into
leave
xchg
cmp
out
add
pop
aad
icebp
stc
xchg
inc
imul
mov
gs
js
bound
fs
test
js
sub
or
push
jg
insl
mov
insb
mov
cmp
repnz
xchg
jle
sbb
lcall
ss
fcoms
lret
sub
adc
roll
jge
jnp
lcall
cli
icebp
int
bound
dec
jbe
aad
inc
ss
lcall
loope
push
das
sub
loope
pop
fidivrs
outsb
fs
inc
mov
stc
jo
dec
fisubl
inc
inc
push
in
ja
xor
jmp
push
lret
sub
loopne
dec
fcmovbe
pushf
hlt
pop
or
and
imul
xor
aaa
mov
xchg
ficompl
sbb
rorb
call
add
lds
imul
cmc
dec
mov
cmp
cli
les
jne
cltd
lcall
xchg
fsubrs
cwtl
mov
dec
sar
or
jno
add
out
push
cmc
xor
testl
or
mov
cmpsl
imul
push
inc
jle
or
mov
test
lret
fisubs
mov
adc
daa
pop
sub
mov
adc
mov
std
sub
cmp
orb
inc
scas
inc
push
sbb
sti
mov
mov
push
rcll
inc
lret
lret
je
sbb
mov
push
adc
adc
leave
lret
mov
imul
pop
cld
fcmovne
push
adc
cltd
pusha
fcoms
fists
jecxz
push
andb
mov
xor
jmp
dec
jo
inc
lcall
push
cmp
int3
sub
aas
in
jecxz
psllw
mov
push
call
mov
neg
and
stos
das
cmp
ljmp
jo
jo
les
mov
mov
jmp
jo
inc
iret
dec
mov
fs
or
rorl
lods
imul
inc
xchg
enter
cmp
jle
dec
call
pop
repz
xor
test
dec
sti
and
stc
loope
rcrl
aad
pop
adc
inc
lret
dec
pop
xor
insb
sbb
mov
or
adc
cld
xlat
adc
mov
ss
mov
mov
sbb
js
and
xor
sub
inc
mov
lds
push
xlat
adc
imul
addr16
and
lcall
add
ja
xor
mov
dec
cwtl
add
pop
adc
loopne
cmp
jne
sbb
xor
aad
inc
cmp
push
cmpsb
outsb
sub
push
test
mov
dec
pop
enter
pop
in
add
cld
jne
addr16
adc
mov
mov
dec
jle
jmp
add
lret
inc
jmp
xor
mov
mov
adc
rcl
outsb
pop
outsl
dec
and
aaa
mov
mov
rol
xchg
int
inc
call
orl
pop
addr16
mov
lods
xchg
xor
fldcw
dec
das
mov
xchg
cmc
push
xor
roll
lods
ret
pop
jbe
pop
jle
pop
sub
es
scas
mov
cltd
movsb
movsb
insb
mov
pop
mov
jl
cmpsl
jle
jae
push
add
in
mov
adc
imul
adc
mov
cltd
pop
xchg
fs
sub
repz
in
in
imul
sti
add
test
mov
scas
imul
lea
pop
push
aam
inc
xor
aaa
sbb
pop
mov
ds
shlb
xchg
add
aas
jae
sub
sbb
rol
jno
jnp
cmp
les
sbb
scas
pushf
sti
or
pop
jo
scas
push
push
lods
lcall
das
mov
mov
shlb
jecxz
jecxz
mov
negb
loopne
pop
sbb
rcrl
rcrl
xor
xchg
dec
rolb
jmp
cli
int3
fnsave
jmp
fimuls
pop
xchg
dec
xchg
add
sbb
cmpsb
dec
bound
dec
lea
or
int3
fisttpl
js
xchg
fnsave
das
push
fnstcw
outsb
add
sbb
dec
mov
imul
xor
mov
call
cmp
sar
test
inc
in
frstor
push
fs
repnz
push
or
mov
adc
sti
push
sahf
adc
push
jge
xchg
or
out
or
push
dec
sub
cmc
lret
std
mov
sub
mov
and
xchg
lret
inc
jl
jnp
lahf
xchg
push
fidivl
jecxz
pop
in
sub
sbb
sbb
imul
cmp
fildll
sub
in
imul
xor
aad
clc
add
pop
mov
iret
xor
aam
test
sub
fisttps
cs
mov
jae
pop
iret
rcrb
jae
xor
inc
movsb
cmp
mov
mov
test
pop
or
push
mov
in
cmp
xor
adc
pop
pop
fsubl
iret
inc
xor
cmp
loop
xor
jo
jle
mov
cmp
int
repnz
movsb
xor
sbb
cmpl
gs
mov
push
inc
mov
push
mov
mov
sub
aaa
ja
jns
je
inc
inc
fstps
or
sub
pop
mov
out
sub
outsl
push
imul
jne
dec
cmp
ss
and
test
and
shll
aam
in
or
shll
sti
pop
into
cmpsb
jmp
test
stos
ljmp
test
daa
adc
pop
jg
adc
inc
push
jb
in
adc
and
lea
dec
or
push
test
repz
push
movsb
aam
lea
sahf
mov
mov
pop
mov
sarb
fcomip
cmp
mov
jae
and
outsl
loop
sti
jmp
js
rolb
xchg
cld
pop
jl
std
fistpll
jbe
jl
xchg
scas
xor
xlat
std
fstp
cmp
pop
push
sbb
jne
scas
bound
push
or
xchg
sbb
mov
mov
push
inc
dec
dec
mov
std
jp
xor
pop
sub
mov
in
pushf
jl
add
cwtl
sub
sbb
xor
xchg
ret
or
xor
xchg
and
icebp
test
stc
lods
sahf
addr16
jmp
cmp
jge
lret
clc
in
adc
dec
jb
loopne
das
adc
aam
std
lret
or
cwtd
in
dec
jmp
js
add
xchg
pusha
push
pop
jb
cmpsb
mov
xor
xor
scas
push
shrb
dec
mov
stc
cmpsl
inc
inc
adc
call
mov
xchg
xchg
rcrl
add
cwtl
inc
sbb
cld
cmp
lods
sbb
icebp
es
out
mov
fsubr
mov
stos
rcrl
or
jae
repnz
cmpsb
mov
xchg
pusha
cmp
push
dec
dec
inc
je
mov
sbb
dec
bnd
out
cld
lahf
pop
testb
fmul
inc
push
sub
adc
cmp
std
ret
test
or
mov
sbb
je
cmpsl
pop
fsubrl
shll
jns
ljmp
sub
cmp
mov
dec
in
fs
stos
loop
jle
lcall
ja
fidivl
movsl
aad
mov
or
push
aam
xchg
sbb
xchg
fwait
adc
mov
mov
ljmp
xor
stc
sub
inc
jle
or
cmc
hlt
decl
scas
popa
aad
lods
sahf
xor
ds
les
sbbb
into
sub
pop
xchg
fs
jp
inc
sti
aad
mov
mov
movsb
jecxz
daa
jb
dec
add
shll
nop
adc
movsl
mov
mov
jmp
daa
mov
dec
leave
mov
in
adc
test
sbb
mov
movsl
sbb
xor
shll
fcmovne
leave
ret
mov
cli
lret
sub
popf
sbb
or
jns
jae
cmc
in
fnclex
adc
sub
jmp
mov
mov
xchg
sbb
jge
rorb
mov
sbb
lods
in
sti
or
lods
mov
rolb
repnz
std
mov
inc
mov
cld
aaa
sbb
cli
mov
sbb
orb
out
inc
push
inc
std
dec
push
stos
xchg
cmp
loop
cmp
pop
xchg
xchg
bound
ja
lret
push
adc
cmpsl
out
es
add
pop
pop
scas
movl
and
repnz
int3
out
js
fsubrl
aam
fwait
pusha
xorb
sahf
js
mov
mov
xor
dec
push
jg
adc
test
dec
adc
cmp
cmp
sarb
popf
outsb
and
fcomps
cmp
popa
out
addr16
ret
xchg
aaa
jno
in
mov
push
pushf
mov
cmpsl
mov
push
or
out
ljmp
jle
mov
lea
pop
sbb
pop
xor
push
xor
rcl
popa
das
int
mov
sub
sub
out
add
pop
pop
scas
test
or
jle
decb
jae
test
add
push
scas
test
fidivrl
ljmp
adc
push
adc
ljmp
loope
jo
xlat
or
pop
sbb
or
inc
push
fdivl
dec
push
lds
in
jnp
shl
mov
test
sbb
add
push
jbe
notb
in
lret
push
mov
pop
repnz
scas
cmp
popa
xor
loopne
jmp
fcmovu
loope
in
clc
xor
ffree
mov
push
sbb
aam
mov
les
data16
lods
mov
sub
cwtl
mul
or
pushf
and
addr16
movsb
imulb
enter
mov
and
loopne
pop
lods
stos
push
incl
inc
inc
sarb
pop
mov
mov
push
xchg
dec
outsl
aam
test
dec
hlt
sbbl
dec
mov
dec
push
pop
lds
cmpsl
iret
ror
stos
inc
fsubl
xchg
push
or
stc
push
xchg
shl
or
sub
nop
xchg
push
sbb
jno
mov
loope
aad
fs
lods
mov
fnstenv
mov
jmp
sub
mov
xchg
push
rcl
jns
add
mov
adc
pop
mov
pop
fimuls
lds
dec
or
pop
sub
cltd
into
out
mov
pop
pop
out
add
sar
lock
je
pop
add
notl
or
out
ljmp
negl
vphaddubw
pop
in
sub
cltd
inc
xor
jle
inc
pop
pop
popa
xchg
adc
leave
stc
add
mov
mov
sub
int3
int
stc
cmpsl
add
out
stos
mov
rorl
cs
movsl
stc
jge
nop
ja
xchg
mov
and
outsb
loopne
sbb
shlb
push
inc
inc
cmp
push
add
pop
jg
lock
sub
push
outsb
xchg
jbe
cwtl
mov
hlt
in
sub
pop
pop
jg
cmpb
and
sub
movsb
fsubl
cmp
mov
cmc
and
mov
es
and
call
inc
add
cld
mov
jb
stos
movsb
lret
out
mov
dec
sub
jle
mov
nop
cwtl
insl
cs
bound
jne
adc
xchg
push
ja
xor
jnp
ss
call
adc
cs
jp
xor
fs
cli
int3
in
lret
cmp
xor
dec
ljmp
shll
sbb
or
in
iret
mov
lcall
xor
fisttpl
cmc
xchg
out
icebp
pop
mov
mov
inc
cs
push
les
insb
xchg
xor
iret
cltd
sahf
jecxz
lods
divl
mov
mov
mov
dec
ret
add
xchg
fildll
xor
sub
push
add
mov
mov
inc
divb
test
ds
and
lea
dec
or
fs
push
das
xchg
cmp
aaa
das
mov
dec
and
cli
sti
push
mov
les
xchg
sub
dec
cmp
es
imul
add
aas
xor
ja
in
lods
rorb
jg
jl
popf
mov
in
sub
int3
adc
cltd
mov
into
push
mov
insl
js
sbb
mov
and
pop
negb
pop
jp
jg
push
mov
dec
cmpsb
adc
sub
and
pop
sti
mov
and
mov
mov
mov
jnp
jns
and
stos
jb
shll
loope
loop
adc
addl
pop
sub
sub
cld
dec
mov
popa
jecxz
cmpsl
movsb
sbb
sbb
leave
nop
mov
push
pop
cmp
cld
add
xor
rorl
pop
mov
sbb
or
inc
jae
repz
rolb
sub
jecxz
mov
cltd
outsl
sub
out
sbb
repz
xlat
test
dec
js
inc
cmpsb
sti
sbb
jmp
dec
mov
push
fdivrs
dec
inc
cmp
mov
sbb
jecxz
pop
mov
pop
fcoms
sahf
dec
add
xchg
xor
int3
ret
cmp
or
pop
cmpsl
pslld
or
mov
out
mov
dec
sbb
jnp
xchg
int3
insb
inc
add
xchg
xlat
jp
int3
sub
pop
cs
push
out
jecxz
jl
jmp
insb
pop
inc
xchg
inc
lods
and
pop
cmp
push
inc
test
xor
popf
jb
jo
ret
cmpsb
sbb
mov
stc
out
lahf
mov
or
push
adc
cmp
addl
ficoml
stos
jp
cwtl
mov
sub
xor
movsb
das
jle
push
int
jno
stos
adc
mov
inc
cmpsb
xchg
jb
int3
call
lcall
cli
sbb
jg
in
mov
jp
jp
adc
popf
adc
jae
shlb
fcoml
cmp
xchg
xlat
sub
movsl
push
pop
push
jl
xchg
js
mov
pushf
scas
and
movsb
xor
add
and
xor
inc
xchg
dec
mov
dec
clc
pop
xchg
pop
sbb
insb
and
popf
mov
lret
and
fldl
ret
add
sarb
push
mov
ja
jno
fwait
ret
cli
xlat
jg
out
or
mov
push
mov
cltd
inc
pop
mov
jge
jg
and
add
adc
mull
movsl
les
repnz
cld
jo
adc
cmpsl
leave
add
or
cmp
aad
loope
movsb
or
aad
push
ljmp
int3
ljmp
jle
mov
cmp
test
xchg
jp
pop
aad
cli
mov
jb
adc
xchg
rclb
and
lret
inc
add
cmpsb
loop
sbb
fsts
adc
xor
jg
js
imul
mov
xor
jecxz
mov
ret
gs
ljmp
xlat
jne
mov
pusha
adc
mov
mov
jp
movsb
outsl
lea
xchg
sahf
xchg
inc
sub
test
outsl
dec
insb
clc
mov
insl
mov
dec
push
lea
lods
iret
and
cld
or
sub
push
sbb
and
or
stos
out
ret
push
lds
push
dec
ret
or
dec
or
dec
jecxz
xchg
cwtl
std
nop
cmp
sbb
outsb
fdivs
inc
insl
jle
sbb
dec
out
mov
paddw
insb
pop
and
ljmpw
mov
pop
aam
pop
out
xor
cwtl
adc
lock
mov
dec
adc
xor
lock
adc
call
popf
adc
rcrl
add
or
shl
sarb
es
jns
das
pop
outsl
xor
imul
pusha
cmc
daa
push
push
inc
dec
lods
rcrl
loop
inc
leave
subb
dec
jp
push
loop
mov
xchg
sub
arpl
jbe
sbb
pop
xchg
hlt
cmp
int3
pop
clc
pop
sub
push
stc
inc
push
lret
jmp
inc
push
mov
push
incb
mov
push
pop
adc
sahf
pusha
scas
sbb
push
push
fwait
out
jge
loop
cmp
movsb
inc
rorb
sbb
push
dec
je
nop
bound
pop
mov
pop
xor
mov
loop
repnz
jo
push
in
stos
xchg
ljmp
xchg
add
sbb
inc
xchg
or
jns
roll
lods
pop
mov
test
in
sub
push
inc
dec
sbb
sub
push
cmp
clc
dec
sti
jno
or
test
jbe
or
jp
sub
pop
sbb
out
lods
xchg
push
jns
mov
mov
test
gs
stos
and
mov
pop
test
sub
fistps
cmp
push
movsl
daa
and
test
pop
sub
push
cmp
outsb
dec
jns
rol
xchg
lahf
aaa
pop
ret
lock
mov
push
push
ss
and
dec
dec
mov
aam
subl
movsl
xor
mov
je
pop
sub
test
dec
ja
ret
mov
ret
imul
mov
or
loopne
fwait
arpl
loopne
fnstsw
pop
std
cmp
int
xchg
imulb
xor
pop
ret
iret
xor
dec
testb
adc
sub
popa
ret
jo
mov
push
js
adc
das
pop
mov
inc
in
rep
cli
orb
sub
insl
ss
clc
scas
sahf
jl
shll
aam
jo
and
out
std
pop
hlt
xor
cmp
and
cmp
mov
je
fisubrl
pop
ljmp
subl
mov
lea
aam
pop
sbb
aad
pushf
insl
inc
movsb
shl
test
fcoms
jecxz
mov
sbb
insb
mov
mov
mov
int3
ljmp
sub
ja
clc
and
test
ja
add
std
in
popa
dec
pusha
fimull
lahf
aad
sti
jmp
sbb
mov
imul
xchg
jae
pop
scas
repnz
mov
add
in
add
ror
pop
dec
cli
shrl
cs
in
mov
stos
fbld
out
jne
pop
adc
scas
sub
cld
pushf
pop
or
mov
fisttpl
out
lret
sbb
aad
jne
or
stos
jl
mov
and
rolb
inc
xchg
inc
repnz
icebp
inc
add
mov
adc
add
lahf
mov
aad
int
and
or
dec
mov
hlt
shrb
sar
mov
lcall
push
xchg
sub
push
inc
mov
add
insl
and
sub
or
or
mov
pop
sub
lods
jecxz
cmp
loope
adc
imul
icebp
ljmp
icebp
mov
loop
sub
xchg
fs
scas
mov
stc
pop
mov
xor
sbb
xchg
popa
push
test
scas
mov
out
pop
mov
mov
fimull
sti
pop
xchg
in
push
mov
cmpsl
jae
aas
and
pusha
nop
sub
pop
test
lock
mov
add
pop
jmp
mov
xchg
push
addr16
dec
xchg
and
les
mov
stc
rclb
push
jg
push
mov
xchg
pop
add
nop
jbe
adc
es
aaa
int
pop
cwtl
fwait
or
bound
ret
mov
outsb
cmp
xor
scas
cmp
sub
mov
fmuls
sbbb
aas
adc
mov
mov
or
jb
hlt
cld
out
fs
dec
mov
es
and
sub
outsl
inc
add
jle
mov
mov
inc
lock
mov
fstl
ss
in
leave
pushf
xchg
inc
and
clc
jp
and
in
add
aaa
mov
push
mov
xchg
pop
push
ds
and
inc
addr16
sahf
out
aaa
aam
jns
leave
sbb
and
popa
push
and
and
aas
inc
int3
es
pushf
add
mov
lcall
and
add
stc
push
mov
mov
mov
push
mov
mov
mov
cmp
jge
cmp
dec
into
incb
aam
imul
or
mov
push
into
sti
repnz
lcall
cmp
xchg
adc
add
rcll
push
and
inc
scas
mov
pop
in
lahf
add
mov
ja
mov
sub
jae
jecxz
fcmovu
in
flds
mov
inc
ljmp
jno
cmp
mov
sub
int
hlt
mov
xchg
adc
jg
js
cmp
fcoms
push
out
dec
lret
dec
repnz
adc
jge
fstl
pushf
fs
test
push
scas
mov
arpl
movsb
mov
hlt
cmc
sub
aaa
dec
out
mov
sbb
es
jp
dec
dec
jle
dec
scas
test
jmp
jp
cmp
nop
or
daa
shll
mov
outsl
mov
mov
lahf
pop
mov
test
jl
sbb
ss
setp
xchg
test
jle
dec
rcl
cmpsb
fs
in
mov
imul
pusha
mov
out
jmp
lock
mov
ret
lret
mov
mov
enter
push
cmp
sub
pop
mov
dec
mov
cmp
scas
data16
dec
mov
outsb
inc
pop
adc
sub
push
push
nop
mov
lret
push
push
sarl
arpl
xor
adc
mov
push
pop
cmpl
adc
daa
in
lock
mov
shll
mov
leave
nop
xchg
sbb
push
mov
test
lret
stos
xchg
jecxz
arpl
push
mov
mov
xchg
jp
pop
and
fiadds
daa
pop
frstor
addb
mov
mov
mov
rcrb
push
andb
mov
out
or
scas
cmpl
inc
int
pop
pop
add
lea
fs
out
cwtl
icebp
fistl
cmp
push
sub
das
mov
jmp
lcall
jl
insl
lock
mov
add
sub
push
mov
mov
aas
xorb
pop
jns
dec
add
lea
loopne
je
jb
mov
scas
mov
adc
test
dec
mov
movsb
scas
push
add
jno
hlt
test
add
clc
pop
push
repnz
xor
bound
push
mov
inc
imul
lcall
and
mov
push
cmp
push
test
xsavec
cmp
fdivs
ljmp
mov
or
js
push
dec
rcrb
mov
mov
add
sub
xor
sti
gs
add
xchg
pop
sti
xor
adc
fucomip
enter
inc
nop
test
sarb
hlt
aam
inc
push
cmp
or
cmp
jg
sub
mov
sub
ret
fnstenv
clc
out
imul
arpl
movsl
jecxz
and
mov
push
js
adcb
add
or
hlt
flds
dec
xor
cmc
jo
loop
mov
test
cmpl
cmpb
jg
or
les
xchg
push
dec
adc
ds
adc
leave
jmp
or
mov
mov
mov
das
out
out
cmp
jge
cltd
jp
jl
shll
fwait
mov
xchg
adc
pop
inc
mov
gs
push
dec
inc
es
inc
stos
mov
out
adc
jecxz
mov
adc
sbb
cmp
xchg
call
cmp
mov
bound
pop
in
movb
inc
std
pop
xor
sbb
dec
jecxz
adc
or
daa
push
popf
dec
xor
lret
push
insb
add
inc
in
cmc
jmp
roll
jp
mov
inc
ret
xor
pop
aaa
adcb
mov
out
pop
pop
call
pop
inc
mov
sbb
icebp
sbb
mov
push
sahf
mov
mov
jo
jno
scas
xchg
add
std
lds
or
adc
sub
jl
icebp
pop
xor
adc
xchg
cmpsl
rolb
dec
push
pusha
jae
stos
test
cltd
mov
add
and
jae
les
jne
lret
push
lcall
hlt
inc
ret
scas
push
dec
div
push
sbb
inc
out
jecxz
jnp
push
jmp
jno
pop
push
bound
leave
mov
mov
push
mov
pop
jge
and
xor
and
cmpsl
lahf
pop
enter
mov
push
cmp
je
pop
xor
push
stc
and
enter
mov
cmp
xlat
xor
xor
ja
les
mov
gs
mov
dec
mov
add
cmp
lcall
sub
mov
gs
mov
movsb
add
jge
sub
or
xor
jl
popa
imul
icebp
sub
and
add
inc
mov
aaa
pop
fdiv
mov
or
sub
sbb
jecxz
push
leave
add
pop
mov
pushf
sbbb
xor
and
stc
add
adc
jns
out
cmpsb
mov
pmaxsw
cmpsl
or
sub
lcall
popf
push
mov
idivl
sbb
sub
pop
sbb
add
mov
mov
out
cmpsl
in
mov
or
out
dec
sub
fdivs
sub
and
pop
or
enter
leave
notrack
shll
fsubrl
aas
jnp
ljmp
mov
out
bound
jno
rcrl
lahf
std
mov
iret
xor
xchg
pop
test
loope
out
stos
xor
popf
xchg
pop
dec
xlat
daa
or
call
lods
cmp
fildll
mov
jecxz
jg
mov
js
sbb
mov
mov
cmp
and
in
loopne
nop
fsts
jp
xchg
ja
idivl
mov
jmp
shl
les
pop
xchg
mov
fldcw
mov
mov
jmp
js
std
mov
adc
ss
fidivl
addb
push
push
lock
cmp
addb
movsl
sub
je
test
cli
sti
aad
push
test
add
mov
add
divl
xor
test
shll
fbld
fiaddl
into
jp
mov
pop
mov
aam
in
xor
mov
cld
sar
sub
jb
xor
mov
xchg
nop
and
shll
test
or
jle
xchg
xchg
cmp
rcl
loopne
loopne
rolb
push
out
xchg
mov
shr
mov
sub
mov
mov
fucomp
sarl
scas
rol
mov
loope
fnstsw
mov
push
push
inc
lods
ret
push
cmp
ficomps
dec
shr
pop
je
dec
leave
cld
notl
shrb
flds
inc
mov
dec
out
data16
sub
xchg
std
cmp
cmp
aam
jle
scas
das
mov
sub
mov
pop
pop
jb
lcall
int3
push
pop
aam
cmp
add
pop
xchg
sub
dec
sbb
xor
ja
pop
andl
in
push
mov
xchg
out
jno
xchg
test
and
push
nop
adc
ljmp
mov
jbe
loope
gs
push
xchg
les
dec
data16
in
dec
pop
faddl
adc
inc
mov
mov
cmp
cmp
mov
xor
insb
push
std
inc
pop
clc
jle
lods
cmp
cltd
adc
movsb
xchg
daa
fisttpll
and
xor
pop
rcll
inc
lock
ficoml
inc
mov
je
xchg
inc
mov
test
stos
stc
popa
push
ret
scas
xorb
mov
into
scas
mov
mov
mov
out
mov
fs
dec
divb
ja
mov
dec
loopne
or
jmp
insb
xchg
int
cmp
cwtl
insb
hlt
aad
and
or
cmp
subb
mov
pop
mov
loop
testb
sbb
jb
push
mov
insl
jno
loop
push
stc
imul
pop
pop
out
cmp
mov
sbb
mov
in
shr
into
or
fwait
and
inc
push
push
adc
adc
cmpsl
mov
or
push
push
sub
repz
push
shlb
cs
mov
or
mov
sbb
stos
test
pop
jge
cld
fcomps
sahf
sar
or
inc
mov
add
xor
loop
sub
ret
ret
push
cmpb
fnstsw
mov
movsb
stos
inc
jg
popf
cmp
faddl
test
sub
xor
inc
add
and
ret
aaa
sbb
scas
jle
cmpsb
jae
dec
or
jmp
out
xchg
inc
sbb
jmp
pop
mov
shrb
hlt
fwait
adc
lods
negb
int
lods
cmp
fchs
sbb
lahf
jne
or
mov
adc
mov
mov
ror
lods
rorb
dec
addr16
xlat
fsubrl
and
popa
jl
lods
les
cmp
data16
xor
aaa
sbb
pusha
fs
push
sub
popa
fstl
inc
inc
testl
fs
dec
pop
outsb
inc
sbb
or
xchg
idiv
cli
inc
nop
xchg
mov
sub
sub
fiaddl
pushf
insb
push
add
fdivr
inc
in
outsl
mov
cli
test
mov
out
adc
lea
pushl
jne
pushf
scas
inc
pop
data16
mov
adc
orl
or
iret
push
je
jmp
icebp
inc
in
ret
push
mov
jecxz
cmp
mov
pop
outsb
setle
ljmp
movsl
mov
sub
insl
lds
fisttps
aas
cmp
mov
fnsave
sbb
xor
cwtl
leave
mov
or
sub
outsl
mov
lock
xchg
insb
adc
and
out
lods
mov
cltd
ficompl
shlb
clc
mov
std
lret
inc
inc
pop
xchg
lods
jmp
sub
mov
add
jbe
and
call
pusha
dec
adc
ljmp
pusha
icebp
lcall
fucomp
xchg
aaa
out
inc
dec
aaa
and
pop
iret
ss
cmp
sbb
push
xchg
push
push
je
aad
sbb
push
xor
subb
inc
sub
pop
sub
dec
out
sahf
mov
xchg
dec
outsb
cld
mov
cmp
pavgb
aas
mov
fcmovnbe
xchg
mov
stos
insl
inc
mov
scas
sbb
dec
push
xor
fstl
in
aad
ljmp
xchg
lahf
daa
or
lahf
mov
cltd
add
cmp
lret
das
jp
or
cmpsl
cmp
sbb
roll
jbe
dec
mov
out
mov
jecxz
sbb
pop
repnz
xor
xor
ret
aam
add
jne
sub
sti
cmp
jmp
jnp
or
popf
popf
sti
out
xchg
rcll
jnp
mov
loope
jns
sub
and
mov
repz
sub
dec
pop
inc
outsb
push
out
xchg
ret
dec
dec
xorl
push
lcall
das
fcompl
inc
sub
mov
jle
mov
shll
jo
jmp
loope
ja
add
fldt
xlat
test
jecxz
std
push
mov
add
call
inc
es
popaw
insl
not
lock
mov
xchg
dec
stos
out
sub
testl
sub
repnz
addr16
push
adc
adc
sub
xchg
fsts
loopne
cld
mov
icebp
inc
sub
mov
dec
cs
xchg
in
mov
pop
mov
insl
fxch
scas
adc
cmc
mov
push
fwait
xor
mov
dec
push
loope
adc
mov
addr16
xchg
or
in
dec
xchg
xchg
push
sti
add
mov
insb
gs
sti
lcall
inc
mov
imul
js
push
xchg
adc
add
or
sub
dec
push
mov
jae
lret
add
insl
jp
xchg
scas
stos
rorb
aam
sub
ds
push
jl
insb
fs
outsb
mov
daa
lds
inc
inc
mov
sti
jge
sub
dec
pop
dec
xchg
popa
jecxz
cmp
cmp
dec
repz
dec
sbbb
incl
sar
adc
lea
adcl
gs
jecxz
pushf
pusha
lods
mov
leave
mov
nop
inc
lods
mov
mov
jo
scas
add
std
inc
gs
mov
mov
ret
push
mov
leave
testl
push
mov
cmp
push
xchg
loope
pop
sub
jge
cmp
add
wbinvd
shll
xor
test
dec
pop
dec
xchg
xchg
int3
test
or
mov
lcall
test
jbe
add
push
dec
dec
cmp
and
hlt
lret
push
pusha
mov
xchg
stos
fnstenv
lret
fistpl
bound
jp
dec
stos
dec
or
push
inc
xchg
es
sar
adc
out
test
inc
in
lret
lea
dec
imul
xor
popf
ds
out
pop
insb
and
out
shl
je
sbb
pop
lret
arpl
lcall
jl
dec
jmp
dec
sub
mov
pop
mov
and
inc
sbb
sbb
xchg
jp
pop
jl
pop
std
cwtl
mov
jmp
sub
add
icebp
xor
xor
jp
pop
jae
mov
mov
pusha
cmp
repz
cmp
pop
mov
outsl
adc
popf
fcomip
sar
xor
and
scas
rolb
jb
cltd
arpl
push
mov
sbb
imul
ret
cmpsl
in
dec
data16
insl
das
pop
sbb
imul
jp
jb
xchg
clc
add
inc
stc
imul
sbb
int
jg
cmp
mov
das
sub
mov
int3
outsl
push
lret
and
mov
xchg
je
sbb
xchg
cmpl
iret
pop
imul
movsl
xlat
into
inc
sub
xchg
aam
mov
pop
jne
jmp
aaa
xchg
cmp
mov
or
sarl
cmp
lds
ss
xchg
push
sbb
pushf
xchg
mov
ljmp
xchg
xor
das
sbb
movswl
push
scas
or
xchg
notb
add
loopne
and
mov
sbb
es
ficoml
aam
jmp
test
fwait
jg
ffree
aam
test
incb
mov
les
sbb
icebp
orl
cmp
jae
mov
cld
and
das
in
cli
push
lock
mov
jmp
test
cmc
mov
mov
sahf
movsl
jmp
sbb
xor
shll
mov
lods
imul
testb
xlat
arpl
xchg
ret
fidivl
xchg
comiss
pop
in
sahf
clc
insb
xchg
and
jnp
pop
dec
aad
dec
mov
jecxz
pop
nop
mov
adc
pop
testb
add
lds
mov
pop
enter
repz
dec
xor
jo
push
dec
cmp
adc
add
mov
movb
fmulp
dec
add
sti
and
in
or
pop
loop
ljmp
xor
push
dec
pushf
xchg
and
pop
add
movsl
xlat
and
mov
sub
cmp
jle
popf
xchg
jg
decb
sbb
pop
cmpsb
loop
mov
jbe
push
push
push
fidivs
mov
in
cli
aad
adc
enter
mov
sbb
roll
xchg
mov
inc
pop
or
or
push
mov
jmp
int
popa
add
shl
test
dec
push
movsl
mov
fsin
dec
xchg
push
movsl
les
and
mov
sub
cld
ret
cli
sahf
jbe
mov
lret
mov
rcrb
shrl
push
push
mov
aaa
and
mov
bound
lods
mov
add
in
add
ret
or
popa
mov
adc
es
enter
out
add
mov
mov
fidivrl
iret
pop
fdivrs
scas
inc
shr
dec
inc
aas
daa
xchg
adc
addb
test
cmp
mov
lea
dec
mov
mov
add
push
or
lcall
bswap
push
jnp
or
repnz
inc
pop
aaa
push
test
subl
mov
sti
jo
ficoms
push
xor
aad
loope
sbb
stos
cld
adc
ja
pop
cmp
jmp
ss
loope
or
dec
lock
lret
iret
add
in
push
mov
cmp
ret
jge
inc
fiadds
cli
fistpl
pop
mov
enter
cld
iret
pop
aam
mov
mov
aaa
inc
lds
aas
mov
mov
inc
jnp
add
cs
and
fidivs
testl
aaa
mov
or
test
cmp
jo
loopne
adc
inc
das
jge
movsl
cwtl
iret
addl
jne
adc
adc
cwtl
out
add
stc
sub
pop
lret
mov
call
fcoms
mov
insb
add
mov
rorb
int
cmp
sub
or
ljmp
add
mov
add
repz
push
sub
dec
mov
push
cmp
mov
shr
xchg
xchg
cmovle
pop
cmp
xchg
jg
test
cmpsl
pop
shlb
out
mov
cwtl
push
sub
xor
cmp
stos
mov
cmc
outsl
jo
dec
jmp
divl
pushf
adc
pop
bnd
shlb
cmp
adc
push
dec
pop
adc
ror
sbb
clc
or
mov
push
lret
cmp
sbb
add
dec
or
sub
movsl
mulb
repz
shlb
shll
add
rcl
lahf
xchg
jno
movsb
xchg
std
mov
lds
sbb
add
les
or
fldcw
mov
mov
lahf
mov
xchg
pop
repnz
adc
inc
es
dec
addr16
xor
in
enter
jnp
fcom
xchg
insb
fdivl
mov
sahf
sub
aad
mov
cmpb
popf
enter
je
aaa
inc
sbb
pop
fwait
push
mov
pushf
sbb
mov
push
sbb
cld
test
stc
xchg
bound
imul
imul
pop
in
scas
lea
ljmp
pushf
test
mov
adc
pop
ja
lods
dec
cmp
mov
aaa
jg
daa
xchg
lods
out
inc
inc
mov
int3
dec
rcll
inc
mov
mov
sarl
sub
lods
jge
push
popf
mov
add
mov
mov
jmp
aas
sti
xchg
sbb
xchg
push
xor
inc
imul
std
xor
and
cmpsl
push
int3
inc
loop
lods
mov
lds
sbb
pop
jmp
lock
cmp
repnz
aas
push
out
icebp
xor
lret
ret
or
and
test
fstpt
adc
add
sub
xchg
pop
pop
add
out
js
and
aas
add
ss
xchg
xorl
call
xor
ds
sub
loopne
lahf
pop
or
lahf
push
test
cwtl
or
xor
inc
xor
pop
push
popf
jle
jl
pushf
in
mov
cmc
push
mov
fstl
inc
nop
les
leave
lods
adc
dec
ret
xchg
jp
pusha
sbb
insb
ret
inc
outsl
sub
aam
das
testb
ret
imul
and
icebp
lods
mov
and
mov
cmpb
out
pop
in
test
jne
sub
les
lcall
shll
cwtl
ffree
test
ljmp
fwait
mov
jne
cltd
mov
or
pop
push
nop
dec
inc
clc
dec
sbb
loope
idiv
movb
mov
sahf
mov
ret
mov
push
cmp
int
stos
adc
xchg
das
xchg
add
push
daa
mov
cld
mov
movsb
add
jmp
loop
adc
sub
or
ret
mov
fmul
sbb
xchg
cmpsb
push
out
mov
idivl
out
ja
mov
cmp
cmp
std
sub
and
scas
cltd
divl
push
cmp
das
mov
mov
sarb
iret
repz
pop
lds
xlat
stos
fwait
gs
mov
in
cwtl
pop
insb
pop
idivb
rcrl
mov
sbb
nop
cli
fbld
das
mov
stos
cmpsb
dec
fsub
sbbl
inc
jno
xchg
and
aad
jb
js
lds
adc
and
mov
jo
andb
cmp
or
mov
outsl
int3
lea
test
xor
test
sbb
inc
push
xlat
fiadds
mov
test
rclb
cmp
outsb
loop
int
insl
mov
add
arpl
dec
mov
fcomp
push
lret
mov
iret
cwtl
out
pop
loopne
jb
cli
mov
fidivl
fdivp
mov
jp
xchg
dec
jmp
dec
or
insb
dec
lret
bnd
sbb
ret
cli
cs
mov
mov
scas
jp
jb
int
push
xlat
xchg
iret
xorl
push
jbe
out
lock
repz
popf
and
mov
jg
or
sarl
cltd
inc
jo
pop
stos
rcr
lcall
lret
fnstsw
xchg
inc
clc
sub
sbb
loope
mov
jne
and
stos
movsb
imul
pusha
or
or
icebp
fmulp
loop
mov
adc
adc
es
xor
jecxz
pop
push
jns
jp
out
mov
scas
inc
ret
out
rcl
mov
pop
popf
dec
push
cmp
xor
pushf
fwait
xchg
pop
push
xor
lods
idivl
and
div
jnp
pop
jl
aad
jo
lock
rol
sbb
push
hlt
sbb
mov
inc
leave
mov
xor
dec
xor
shlb
bound
movsb
mov
jbe
mov
pop
test
push
dec
out
loop
ficomps
cmp
adcb
mov
add
inc
add
imul
ja
add
mov
ss
xchg
adc
adc
pop
or
cmp
jno
sti
jge
cmp
stos
inc
xlat
ret
les
int
cmp
cltd
cld
bound
fistps
call
loop
imul
pusha
push
aam
push
jne
into
insl
mov
or
pop
out
shl
in
sbb
cltd
xor
fcmove
or
mov
jo
mov
xor
cmp
mov
les
out
ss
xlat
xchg
xor
stc
cmp
pop
mov
pop
in
popa
xchg
add
sbb
shrl
jae
xchg
mov
fstp
jnp
or
outsl
jge
inc
xor
cmpsl
jmp
aaa
xor
adc
push
xchg
stos
cmpsb
ficoms
inc
mov
xchg
jle
lods
xchg
rclb
test
inc
cmp
xchg
shll
mov
mov
in
sub
cmp
cmp
out
pusha
pop
jae
addl
jae
pusha
xor
pop
shl
dec
scas
rcrb
sahf
lods
pusha
les
clc
ret
arpl
or
les
outsb
mov
fmuls
mov
test
xchg
jno
into
in
idiv
and
jne
das
dec
add
pop
xchg
jle
add
adc
aaa
lcall
xor
bound
cli
jmp
faddl
mov
mov
xor
push
mov
sub
test
fsubrs
add
xchg
xchg
sub
lea
push
addl
movsl
pushf
mov
icebp
int3
cwtl
clc
repz
stos
and
outsb
mov
gs
iret
xlat
test
shll
sbb
sub
mov
hlt
mov
jmp
testl
cmp
in
jnp
js
aam
and
jg
mov
and
jae
jbe
mov
or
push
cmc
popa
mov
mov
add
mov
insl
xchg
movsb
into
inc
stos
adc
cld
mov
loope
sahf
setb
inc
mov
xchg
test
pop
jmp
inc
and
lock
lea
iret
mov
xorb
sti
mov
into
clc
xchg
xorb
add
push
xchg
lds
and
in
inc
mov
xchg
icebp
cld
inc
xchg
mov
iret
jecxz
push
push
mov
sbb
fwait
inc
mov
hlt
in
pop
xor
sbb
sbb
push
iret
mov
push
mov
sub
stos
push
scas
push
cli
mov
loope
jno
mov
outsb
jno
aas
call
xchg
sbb
mov
lds
adc
mov
into
push
jg
mov
mov
ss
imul
push
sub
into
cmp
out
pop
mov
jmp
mov
cmc
outsb
iret
iret
xchg
ss
dec
cmp
ret
sub
cmpsb
xor
xchg
xchg
adc
sub
sbb
mov
xchg
mov
dec
outsb
dec
xchg
cmp
push
mov
xchg
cmp
push
and
pop
sbb
adc
loop
jle
dec
inc
xlat
aas
xchg
aam
cmp
pusha
int3
movsb
pop
dec
xor
int3
lock
lods
sbb
mov
pop
aas
adc
or
gs
xchg
mov
inc
js
jge
push
pop
cmp
imul
jae
sub
pop
cmpsl
and
in
or
and
xor
mull
xchg
testb
roll
cmc
add
pop
repz
add
stc
xchg
jo
imull
out
js
fnsave
cmc
adcb
or
xlat
jmp
fstp
sub
xchg
jne
xchg
xchg
in
jnp
shr
dec
pop
xchg
add
inc
ret
xchg
sbb
clc
sbb
ret
in
push
pusha
mov
outsb
dec
int
mov
cmc
mov
jae
cmp
mov
sti
cmp
jo
xor
sahf
iret
xchg
js
and
sbb
lods
lods
dec
inc
mov
and
pushl
stos
jb
push
popa
into
cmpl
pop
xchg
mov
je
mov
add
dec
or
sub
gs
xchg
and
mov
in
jno
aaa
aad
jbe
loop
adc
popf
pop
push
jp
fsubrs
aad
inc
inc
pop
push
shlb
out
dec
roll
push
mov
shl
outsl
mov
inc
jb
sub
lea
and
lock
xchg
adcb
je
sub
fwait
mov
pop
aam
sbbb
adc
ss
pushf
ret
cltd
pop
dec
cli
fsub
push
dec
fwait
lret
add
popf
jge
fisttpl
lret
fsubrl
push
pop
aaa
jno
in
jle
push
lret
or
inc
pop
cwtl
je
cmp
fstps
ror
adc
incl
dec
imul
xchg
in
hlt
mov
ss
dec
mov
nop
dec
insb
mov
lret
aad
sub
popa
stc
mov
mov
lods
cmp
jge
lods
dec
shlb
movsl
shll
jle
add
dec
or
outsb
mov
ds
in
call
mov
cs
jbe
cld
jb
pushf
cmp
scas
adc
xchg
jno
pop
xor
sub
or
add
sbb
sti
add
cmp
inc
and
xchg
inc
add
xchg
xor
jl
add
jmp
and
mov
jno
psubw
imul
dec
sbb
sub
jge
push
loope
adcb
js
pushf
std
lea
repz
in
popf
mov
int
dec
cmp
stos
adc
or
inc
icebp
pop
ss
stos
jno
xchg
push
or
outsl
out
enter
mov
xchg
sbb
aas
sub
pop
enter
adc
sbb
mov
jns
adc
mov
adc
insl
cs
xor
lea
xchg
rorl
movsb
jle
xchg
std
and
mov
in
iret
push
xor
pop
sub
movsb
jge
xchg
sbb
push
adc
iret
cltd
cwtl
jl
pop
sti
ret
stc
mov
dec
jnp
xor
sub
xor
cmp
inc
into
inc
and
jmp
cmp
xchg
add
ret
mov
aam
sbb
mov
ds
xor
dec
xlat
and
sub
cmp
sbb
sbbl
lods
scas
aad
sub
dec
jb
lret
icebp
jne
cmpb
data16
jge
pusha
pop
or
stc
push
mov
mov
pop
pop
les
push
jp
lret
shlb
out
ss
add
dec
arpl
rcrl
scas
mov
xor
or
nop
ret
imul
and
lods
inc
data16
jl
out
lods
test
test
aam
add
loop
xchg
adc
push
inc
stc
clc
or
push
roll
int3
xor
push
push
test
stos
push
ss
clc
out
mulb
pushf
shll
inc
push
add
inc
inc
mov
cmpsb
xchg
mov
decb
jp
cmp
arpl
mov
mov
mul
out
pusha
jo
lea
sahf
ret
mov
mov
jle
cmpsl
xchg
jle
not
jp
int3
or
pop
dec
push
add
call
shlb
fstl
fst
jne
insl
ret
dec
and
mov
jbe
cmp
pop
mov
dec
daa
dec
aas
pushf
cmpl
or
sub
sub
cmp
outsb
sahf
add
iret
pop
out
imul
ss
jg
fsts
mov
mov
std
ja
testl
aaa
push
and
roll
popa
adc
subb
das
outsl
arpl
lock
loope
xor
inc
insb
lcall
push
jle
cmpsb
mov
mov
cwtl
mov
dec
enter
cmpsb
pop
dec
fwait
lcall
loope
add
int3
jle
sub
les
sbb
add
lods
sub
pop
xor
inc
je
lret
icebp
inc
xor
in
jne
and
xor
xchg
mov
cwtl
add
test
addb
push
mov
push
cmp
and
pop
in
je
xchg
xchg
cmpsb
cmp
js
mov
add
xchg
nop
adc
flds
xchg
data16
jb
pop
and
mov
cmpsl
cmc
loope
cmpsl
jb
push
push
sti
pop
divl
ret
jp
pop
fs
xchg
push
nop
sub
fdivrs
adc
cmpsb
mov
push
outsb
fs
aad
push
jno
push
roll
add
pop
dec
push
xor
jle
js
xrelease
cmp
aad
push
cmpsb
dec
sub
je
mov
andl
mov
xchg
push
xchg
subl
mov
fnsave
dec
fstl
sub
sub
xchg
pop
xor
add
and
lock
sub
das
jl
sub
fdivl
outsb
sti
loope
jge
andb
xchg
sub
sbb
fwait
rclb
out
shll
mov
push
adc
dec
jmp
stc
xor
jnp
gs
aas
mov
cld
add
cmp
jnp
sub
adc
add
push
aam
repnz
mov
in
cmp
adc
mov
sbb
fsubs
sub
mov
imulb
xchg
pop
out
and
incb
push
cli
jl
in
jmp
lock
fs
inc
sbb
add
int
adc
add
xor
inc
push
mov
inc
or
or
out
xchg
push
cs
mov
mov
fsubrs
xor
pop
clc
sahf
lret
xor
add
sub
xor
out
inc
fildl
popf
js
mov
dec
xchg
push
divl
stos
and
lea
das
test
pop
pop
mov
imul
add
imul
dec
xchg
mov
jbe
nop
mov
stos
cmpsb
stos
popa
aas
cmp
outsl
je
stos
mov
mov
mov
imul
pop
mov
sahf
sbb
cld
xchg
scas
mov
or
mov
lret
push
fisubrl
mov
sahf
sub
pop
and
fbstp
xor
loop
inc
cwtl
out
xchg
xlat
popa
mov
mov
dec
xor
xor
push
lea
add
scas
push
mov
test
aad
out
stos
fldcw
lock
jge
xchg
mov
sbb
sbb
pop
mov
push
adc
lods
ret
pop
xchg
or
repnz
imul
gs
jmp
sbb
xor
movsl
pushf
add
fsubs
test
lret
sbb
fisubl
iret
outsb
sti
inc
or
repnz
or
pop
ret
jbe
cli
les
iret
repz
adc
bound
dec
inc
xchg
sub
push
sub
jl
mov
dec
mov
jp
pop
std
inc
sti
rorb
cmp
jg
or
sub
add
push
daa
adc
test
cmp
pusha
insl
jp
add
nop
jbe
andb
xor
dec
fsubrp
ret
mov
push
jp
idivl
lock
gs
adc
in
inc
lret
pop
mov
int
and
cmp
push
cld
add
and
pop
mov
sbb
hlt
nop
into
sarb
outsb
cli
cltd
xor
pop
ljmp
outsl
xchg
rcrl
mov
cmp
jb
cli
sub
push
jae
or
or
movsl
sahf
dec
aaa
lsl
cld
jbe
rcll
loope
jp
aam
xor
in
int3
sbb
mov
xchg
js
test
icebp
js
cmovle
push
inc
cmp
cmp
pop
mov
in
cmp
add
fistps
out
std
mov
gs
fxch
mov
ror
rcll
xor
lock
stos
ja
xchg
fs
hlt
repnz
aaa
pop
mov
lret
pop
xor
or
push
mov
adc
nop
mov
jle
inc
les
or
mov
jnp
scas
repz
lret
imul
sbb
insb
jecxz
mov
cmp
scas
pop
scas
or
dec
add
das
push
cmp
mov
dec
or
mov
xchg
jle
xor
adc
movsb
lcall
fiadds
arpl
test
or
imul
push
xor
clc
cmp
rcl
dec
out
gs
sbb
ret
lods
rcr
roll
lahf
mov
aam
jecxz
mov
jbe
push
xorb
or
into
out
inc
test
rol
or
adc
jne
stc
xchg
xchg
fcomps
pop
cwtl
sub
and
mov
push
mov
inc
mov
test
pop
add
xchg
adc
inc
movsl
add
fildll
fcoms
stos
aaa
mov
lods
dec
and
add
jno
sbbb
lock
jnp
sti
adc
hlt
mov
or
sub
out
lods
insb
test
ret
out
xor
lea
sbb
mov
fwait
test
push
push
sub
incb
mov
fwait
imul
mov
xchg
pusha
enter
mov
or
mov
scas
sbbl
cmp
sbb
jb
hlt
cmp
outsb
adc
es
cmp
aaa
testb
inc
pop
cwtl
aaa
cmpl
sbb
fs
jae
pop
sbb
negb
lods
or
jp
rorb
scas
stc
lods
add
inc
xor
mov
mov
cmpsb
int
push
pop
cmp
in
movsl
sub
mov
fwait
mov
mov
test
adc
pop
jae
push
loopne
xor
mov
sbb
sub
push
or
mov
pop
xchg
adc
adc
pop
pushf
mov
or
jb
bound
xor
sbb
inc
fs
into
mov
lcall
push
test
fildll
mov
mov
clc
shrl
cmp
movsl
mov
jle
dec
mov
popfw
test
jl
add
adc
loop
pop
das
movsb
mov
and
fwait
mov
in
xchg
movsl
testb
mov
sub
shrl
sarb
mov
fsub
jg
icebp
shr
int3
push
and
dec
test
cmpsb
outsb
push
ret
adc
mov
leave
inc
int3
ret
shl
cmpsl
pop
mov
scas
cmp
test
sub
add
popf
sub
push
pusha
pandn
sbb
sub
cltd
fstps
test
jae
mov
sbb
mov
cmp
push
fs
test
rolb
movsl
jmp
jns
lea
jno
push
cmpsl
mov
xchg
xchg
push
jnp
aam
jns
daa
jle
mov
data16
rolb
icebp
xorl
test
cld
pusha
mov
xlat
je
xchg
xchg
addl
pop
adc
js
inc
add
lods
outsb
xorl
mov
sbb
sub
in
mov
cmp
mov
dec
incb
inc
sbb
test
test
mov
push
lahf
movsb
aad
loope
push
lea
out
xchg
cli
pop
ljmp
mov
jnp
scas
daa
add
aam
dec
xchg
sbb
xor
repz
jnp
movl
push
outsb
sub
jnp
xor
fbld
mov
and
or
call
cltd
stos
test
stc
loopne
inc
mov
je
stc
xor
xor
stos
push
stc
inc
jo
add
repnz
jnp
popa
outsl
and
adc
mov
push
and
into
aaa
sbb
fs
loope
loopne
xchg
int
sti
je
add
jo
and
jge
loope
jnp
and
sti
jge
sub
cmp
es
push
inc
mov
out
ljmp
pop
mov
push
push
mov
mov
outsb
inc
insb
adc
cmpsl
jae
fsubrl
or
xchg
arpl
mov
or
pop
sub
push
repz
cmp
add
inc
movsl
ja
cld
ret
icebp
pop
pop
cmp
cmc
inc
sbb
stos
xor
rclb
fimuls
icebp
xchg
inc
mov
xor
fists
add
xor
in
repnz
and
push
jp
popa
bound
enter
xchg
leave
xchg
fs
dec
dec
lock
jne
pop
std
sub
push
mov
cld
es
jo
fld
stc
mov
das
adc
aam
pop
inc
mov
stc
stos
adc
add
iret
or
mov
mov
add
inc
jnp
dec
sbb
ret
or
mov
or
sub
cmp
bswap
add
sbb
fisttpl
adc
insb
pop
sti
in
dec
xlat
aaa
outsb
sub
xorl
sar
sub
lods
xchg
mov
push
sbb
mov
lods
in
jo
fs
out
in
pop
out
fcmovnu
pop
imul
xor
repz
add
subb
inc
das
ljmp
jge
inc
sbb
mov
inc
gs
loop
sbb
adc
xor
push
mov
lods
sbb
jo
xorb
xchg
sbb
adc
push
loop
sub
or
cmp
lahf
jae
inc
test
stos
fcoml
adc
add
rcrb
inc
in
loope
cmp
clc
jnp
outsb
lds
sahf
mov
iret
push
push
or
push
and
jp
or
test
lea
xchg
test
movsb
xchg
insb
push
ss
in
sbb
cs
pop
je
or
mov
in
inc
push
mov
sti
bound
pop
add
in
fsubp
test
pop
sub
rep
mov
lret
push
push
mov
stos
sti
or
pop
out
dec
inc
loopne
aaa
in
mov
mov
scas
sub
lods
xchg
dec
fmull
test
fnstsw
adcl
mov
test
or
sub
cmp
jg
inc
call
sbb
xor
mov
test
dec
mov
loop
cwtl
or
icebp
push
xchg
inc
fistps
push
push
sarl
scas
mov
cmp
cmp
fisubrl
enter
pop
add
scas
jl
stc
lret
scas
cmc
gs
sbb
xchg
aaa
dec
subb
cli
inc
cmpsl
sub
iret
and
adc
out
cmp
dec
or
iret
lods
cmc
ret
test
pushf
jle
pop
push
sbbl
jmp
xor
cmc
pop
mov
inc
lret
dec
lock
cmp
mov
jo
sbb
sarl
xlat
cwtl
stos
xor
rclb
inc
push
lcall
push
jle
cmpsb
push
loope
pop
jne
dec
cmpsb
sbb
movsb
and
jmp
jp
jae
pop
ja
add
adc
loopne
mov
mov
andb
mov
mov
sbb
test
mov
xchg
lahf
pop
push
in
into
jecxz
mov
adc
push
inc
mov
addb
dec
repz
mov
stos
es
adc
xlat
leave
fimull
popf
sub
fdivr
adc
loope
push
aam
ret
inc
inc
popl
lds
shlb
lea
pop
out
clc
cmp
addb
push
pop
mov
std
inc
push
iret
inc
xchg
pop
cmp
loope
pop
mov
fwait
sbbb
cmp
arpl
enter
ss
lods
js
mov
add
xchg
jbe
aaa
in
ficoml
push
jecxz
push
sbb
sbb
push
mov
pop
neg
pop
dec
icebp
lds
cli
es
sbb
cltd
jbe
aas
cmp
mov
test
fwait
sbb
cld
xor
ret
sar
jmp
frstor
add
loope
jb
imull
fnstcw
sti
jmp
mov
das
daa
mov
sti
jne
outsl
hlt
add
addr16
test
ss
fwait
hlt
add
js
repnz
addr16
push
push
xor
js
scas
push
sbbb
sbb
orl
pop
pop
nop
insl
dec
mov
incl
and
sbb
mov
hlt
or
addb
and
add
add
inc
pop
pop
and
loope
push
insb
test
cmp
in
mov
jmp
mov
or
inc
fisttpl
xor
fsubl
fsub
fldt
into
aad
mov
pop
sbb
arpl
xor
pop
or
ja
arpl
mov
mov
pop
adc
ret
jge
inc
jae
jb
aaa
or
fs
imul
mov
lods
cmp
xor
out
out
push
das
and
subl
in
dec
es
xchg
fsubl
cmpsb
xor
push
pushf
out
add
js
xchg
gs
adc
pop
inc
les
mov
lods
inc
dec
mov
es
xchg
push
fistl
adc
xchg
mov
outsl
fcoml
push
out
std
pop
sbb
cli
aam
inc
orb
pop
fmull
cmp
js
jle
imul
mov
aad
movsb
std
and
sub
mov
int3
sbb
subl
mov
cmp
mov
js
sbb
shl
jbe
xor
lcall
popf
xchg
loope
jnp
std
jns
xor
lcall
ror
out
mov
stos
out
jge
js
insb
scas
addr16
lret
pop
mov
add
pusha
cmc
xor
ret
jecxz
push
jns
shlb
stos
xor
xchg
call
loop
jno
out
jmp
test
push
mov
jge
daa
lea
sbb
out
xchg
fiadds
sbb
mov
mov
xor
cmp
in
jp
sub
mov
mov
into
push
arpl
mov
dec
jbe
dec
push
xor
and
pop
mov
xchg
or
sub
cwtl
cltd
xor
xchg
and
and
rorl
jnp
adc
mov
cmp
sbb
push
mov
pop
push
ljmp
cltd
jb
lret
rclb
cmp
pop
loope
jp
dec
mov
sbbb
leave
dec
ss
jnp
and
rcl
push
aaa
xor
add
test
dec
and
stos
in
sbb
ss
xor
jp
sub
sbb
imul
loop
clc
ds
fsubl
rcl
pop
aaa
subb
lcall
push
cmp
int3
and
adc
push
clc
pusha
ja
mov
ljmp
icebp
loop
sbb
dec
inc
push
cmp
inc
pop
popf
xchg
adc
fildll
push
insl
das
icebp
mov
add
xchg
rol
mov
insl
out
out
push
shlb
iret
ret
push
ficoml
add
adc
imul
testl
pop
rorb
push
push
dec
pop
ljmp
int
mov
mov
xor
pop
movsl
push
pop
movsl
js
rorl
push
or
and
pop
loop
faddl
cltd
dec
xchg
cld
dec
add
adc
ret
and
stos
cli
ds
fcoms
sbb
dec
adc
jge,pt
int
inc
lods
das
in
ljmp
mov
int
inc
mov
out
mov
add
push
xor
fucomip
shl
xchg
mov
push
in
aad
jns
loopne
adc
sahf
mov
push
adc
fsub
xor
mov
jae
sarb
jmp
outsl
jb
lcall
push
hlt
push
mov
adc
mov
pusha
or
stos
repnz
lock
cmp
cli
ja
or
addr16
movsb
gs
xor
and
gs
sti
adc
dec
test
mov
mov
out
and
enter
sub
idivl
or
mov
adc
xor
mov
cmp
mov
imul
lds
adc
mov
fmuls
cmp
rcrl
outsb
pop
xor
jne
mulb
arpl
andb
out
int3
dec
mov
xor
sbb
sub
lret
adc
addr16
dec
and
popa
xchg
lock
lret
in
dec
outsl
adc
stos
mov
adc
mov
movb
lods
das
inc
push
push
and
mov
add
adc
in
cmp
add
pushf
add
sbb
jns
cltd
lcall
push
dec
scas
cmp
inc
xchg
cmp
cmp
es
call
pop
jl
xlat
dec
xor
fnstsw
fisubrl
sti
cmp
fcomp
pop
dec
mov
jl
inc
dec
mov
xchg
shrl
add
xor
or
cmpsb
les
push
mov
fistps
jns
pop
sub
pop
push
jge
dec
rcrl
pop
xor
push
adc
pop
test
dec
jbe
cs
jnp
mov
hlt
aas
xchg
scas
mov
fisttpl
pop
shll
add
mov
shrb
mov
lcall
inc
aas
cmp
imul
insb
mov
ret
push
mov
int
and
pop
mov
dec
cmp
gs
push
nop
or
sub
mov
rcrb
push
jecxz
xchg
enter
cmpb
out
inc
add
dec
leave
out
push
jbe
lcall
aas
mov
and
lret
mov
adc
lcall
mov
cwtl
sahf
repnz
jecxz
fldt
rorb
test
aam
into
push
mov
mov
dec
cld
sbb
lret
dec
aaa
sbb
fnstenv
adc
pop
xchg
mov
push
imul
mov
aam
daa
insb
pop
leave
fucom
mov
ret
imul
push
test
fisttpl
xchg
add
add
clc
shll
mov
fidivrs
mulb
mov
test
dec
dec
hlt
sarb
mov
out
dec
push
cmpb
dec
repz
xor
js
popl
enter
lret
xchg
push
cltd
push
jecxz
fwait
push
mov
sbb
scas
outsb
pop
mov
push
xlat
xlat
mov
push
nop
xchg
fildl
les
fnsave
je
ljmp
inc
bound
fdivrs
fmull
push
stos
daa
push
sub
in
sbb
aad
pop
movsl
jno
rclb
enter
in
add
mov
lahf
dec
lods
in
lods
push
or
popf
sub
shrb
lcall
test
mov
fstpl
cmp
xlat
lret
and
cmc
add
jle
movsb
pop
cld
orl
cmp
mov
sub
mov
xchg
outsb
stos
cmp
shlb
cmpsb
fistps
pop
xor
ja
repnz
mov
aas
mov
enter
dec
or
sti
sub
outsl
sbb
jnp
fwait
dec
jnp
and
rcr
les
sub
mov
push
incb
mov
int
push
outsb
pop
or
in
das
push
inc
enter
jbe
lods
sub
leave
mov
xchg
adc
int
repz
ljmp
pop
stc
or
data16
adc
test
add
sbb
xlat
sbb
inc
mov
pop
lcall
ret
insl
stc
subl
imul
push
je
lds
and
out
subl
push
jb
xchg
xor
xor
int
enter
dec
dec
ret
dec
xlat
hlt
or
push
lds
mov
les
into
into
pop
pop
mov
or
sti
fld
repz
dec
clc
out
mov
lcall
jp
call
or
not
cmpsl
inc
js
lods
in
insl
lahf
xchg
pushf
jne
jae
cmp
sbb
push
add
jle
and
xor
cs
hlt
adc
or
and
dec
jp
stc
decl
mov
test
loope
pop
cltd
adc
loop
lods
push
mov
fsubs
mov
adc
imul
fnsave
mov
mov
sti
adc
aaa
arpl
int
adc
mov
insl
call
mov
pop
adc
in
imul
pusha
iret
mov
iret
add
leave
xchg
push
call
pop
pop
adc
loope
aaa
sub
xor
addb
cmp
cwtl
or
lcall
lock
xlat
xchg
lea
lret
xchg
pop
mov
imul
sbb
mulb
push
sub
xchg
xor
and
scas
push
adc
add
mov
fiaddl
leave
ret
jg
test
xor
or
push
add
jg
imul
aam
dec
xchg
jnp
out
mov
lods
ljmp
add
mov
mov
stos
nop
pop
mov
jle
je
cltd
adc
pushl
inc
les
stos
dec
fs
jae
cmp
push
ds
mov
inc
mov
popf
push
test
aaa
sbb
xchg
push
mov
outsl
fwait
test
ret
cmc
es
sbb
movsb
ljmp
push
loop
loopne
fiaddl
int3
dec
fisubrs
testb
or
shlb
test
gs
cltd
mov
imul
mov
xchg
pusha
inc
mov
pop
dec
mov
repnz
mov
in
pop
lcall
mov
or
int3
xchg
test
ficomps
push
lea
jno
sbb
and
je
out
fildll
shr
cmp
cs
shrd
xorl
mov
push
jo
negb
sub
pop
out
fisttpll
rol
jmp
jp
add
scas
cmpsl
jl
dec
popf
push
aas
push
test
or
dec
in
add
lods
pop
fwait
jbe
pop
stos
add
ljmp
aaa
sbb
lcall
lods
leave
push
pop
mov
std
repz
push
fmulp
jg
out
jno
and
xor
fists
mov
push
push
ds
xchg
out
leave
add
xchg
fsts
mov
mov
scas
cld
sbb
mov
int
insb
shl
pop
test
push
mov
out
sti
mov
sub
mov
xor
ja
aas
lcall
mov
inc
mov
pop
mov
insb
push
add
jg
dec
dec
mov
add
test
push
push
dec
cmc
insb
repz
call
xchg
cmpsl
in
and
dec
test
movsl
nop
sbb
cltd
imul
jp
xchg
sbb
sub
shlb
mov
in
dec
mov
xchg
mov
rorb
jmp
divb
pusha
inc
scas
test
enter
mov
xor
lret
cltd
mov
push
shrl
icebp
cmpsl
test
mov
pop
rorb
jl
insl
mov
adc
sub
loope
pop
cmpsb
stc
xchg
std
cli
dec
arpl
cmp
popa
and
xchg
mov
xor
sbb
arpl
cli
jb
dec
lods
push
dec
mov
ror
jmp
movsl
cmp
cmp
sub
adc
pop
jb
mov
jmp
xchg
and
sbb
mov
push
insl
pop
decb
movhps
mov
xchg
xchg
les
xchg
xor
mov
out
pusha
sub
push
shlb
jo
jns
aas
cli
pop
mov
aaa
xchg
and
lods
mov
loopne
add
mov
inc
or
cmp
xor
enter
mov
mov
out
mov
add
mov
popf
add
addl
stos
cmp
lds
cmp
sahf
repz
cmc
jle
cmpsl
adc
iret
inc
pop
jae
cli
out
in
mov
loop
or
popa
pop
and
xchg
cltd
sub
or
insl
cmp
xchg
cmp
push
insl
fisttpl
hlt
shll
loop
xor
leave
dec
dec
fiaddl
pop
sub
lcall
test
clc
rorl
test
insl
and
out
call
test
xchg
ss
adc
sar
cs
es
sub
xchg
xorb
inc
clc
mov
mov
adc
sub
dec
mov
outsl
xchg
sbb
lods
loope
sbb
mov
daa
frstor
pop
jno
insb
data16
mov
xchg
cmp
xchg
jnp
adc
jbe
xchg
sub
or
xchg
xor
or
xor
or
push
mov
jecxz
or
jo
jmp
lock
pop
sbb
push
xor
mov
mov
imul
push
jmp
push
jno
pop
xchg
inc
pop
adcb
in
mov
je
xchg
loopne
ret
lret
xchg
xchg
subl
jmp
xchg
fists
inc
lea
nop
lcall
cmpsl
test
cmp
scas
sar
mov
test
addr16
dec
inc
int
push
jnp
push
call
jno
jge
ficoml
test
outsl
enter
jmp
mov
mov
imul
add
mov
shlb
and
int
jne
xor
leave
scas
stc
or
jmp
push
js
aam
fnstcw
ljmp
pop
jmp
cmp
jnp
inc
push
inc
mov
xor
cmp
cmpsb
xor
fnsave
lods
mov
pop
icebp
sahf
outsl
xchg
and
pusha
sahf
add
xlat
filds
es
lret
adc
stc
push
outsb
dec
or
dec
sbb
push
jno
sub
xor
js
insb
and
push
addr16
or
lds
popf
lcall
adc
cld
sub
fistps
neg
imul
jns
cmp
xchg
les
jmp
repnz
sbb
push
fistpll
sbb
inc
sub
js
add
jge
mov
rorb
inc
inc
pop
and
ljmp
push
push
inc
aaa
jg
sub
and
jo
mov
das
mov
lea
jne
pop
and
or
dec
cld
xchg
sbb
jle
popa
cmp
push
or
push
xchg
push
cmpsb
ss
xor
inc
sub
xor
std
cmp
aas
cmp
shrl
inc
repnz
dec
popf
xor
cld
popf
add
sub
dec
ficoml
or
add
in
push
cmp
into
and
and
lret
inc
xorl
lods
mov
xlat
imul
adc
sub
pop
sub
fldpi
or
icebp
jmp
cmp
movsb
stos
mov
ja
scas
jge
xor
ficomps
inc
cltd
adc
sbb
addr16
cmp
sbb
rolb
in
pop
scas
pop
outsb
adc
jle
pop
cmp
dec
call
mov
push
les
mov
andl
mov
pusha
lret
popa
sub
adc
pushf
cmp
push
dec
and
jo
sub
dec
rorl
in
sahf
xor
divl
push
sbb
stos
mov
push
test
dec
xor
dec
mov
xchg
push
jb
xchg
ficomps
addr16
bound
rcl
mov
pop
mov
scas
mov
lock
sbb
sub
push
fsubrl
mov
aad
jmp
push
imul
xchg
scas
mov
nop
sub
ret
leave
aas
out
xorl
pmaxsw
xor
in
ret
clc
dec
int
xor
xchg
test
mov
aad
cld
xchg
shlb
adc
adc
aaa
adc
ror
movsl
lods
xor
idivl
push
lcall
push
mov
sti
in
pusha
mov
scas
daa
loop
test
aam
add
push
imul
ror
push
add
or
sbb
loopne
shl
push
fwait
aam
aaa
outsb
fistl
outsb
pop
sbb
test
popf
aad
fstl
xorl
xchg
push
sub
push
dec
dec
push
out
push
xchg
mov
std
cmp
mov
fs
mov
mov
lcall
cmpsb
imul
leave
mov
mov
sbb
dec
lods
push
mov
push
mov
jge
xor
adc
inc
addr16
cmp
push
jo
jecxz
popa
inc
jo
mov
push
mov
jl
jno
push
and
dec
cmp
adc
mov
or
or
adc
inc
test
aad
sbb
xor
and
repnz
and
insb
out
and
push
lcall
in
test
imul
cmp
fs
pop
mov
lds
push
insl
mov
push
jecxz
and
popf
test
inc
mov
xorb
insb
cmp
jp
dec
out
repz
cs
sbb
sub
out
mov
dec
mov
movsl
mov
aas
imul
cmc
into
rcrb
xsavec
add
addb
pop
in
jl
gs
not
mov
shlb
test
ss
mov
dec
incb
adc
rorl
xchg
roll
push
cmpsb
jno
loop
outsl
push
mov
cmp
addr16
ljmp
in
mov
mov
mov
out
sbb
arpl
rorb
shrb
and
shrl
fsub
dec
sar
jmp
pusha
adc
fwait
test
adc
xchg
sbb
xchg
inc
cmp
mov
push
inc
ret
push
jle
xchg
cld
rol
movsb
rcrl
push
cmp
mov
add
adc
in
and
xor
data16
mov
or
cmp
shll
fbstp
xchg
out
push
push
add
and
or
imull
fdivl
mov
sub
mov
or
push
test
xor
lahf
ret
mov
popf
xchg
and
pop
and
lcall
sahf
nop
inc
pop
add
orl
loop
jae
push
shll
sub
pushf
call
sub
cltd
push
mov
xor
inc
mov
and
mov
and
loope
or
add
and
add
stc
cwtl
mov
add
rcr
mov
mov
mov
xlat
loope
push
rcll
pushl
cmpsl
mov
rol
push
mov
cmp
mov
and
ss
imul
push
jbe
out
adc
lretw
mov
jmp
repz
cltd
jmp
sbb
mov
in
adc
cmp
movsl
test
pop
and
sub
add
cmpsb
mov
xor
out
cld
xchg
mov
pop
or
add
faddp
xchg
pop
push
dec
xor
cmp
dec
movsl
fsubs
mov
push
xchg
movsl
enter
and
stc
je
cld
sbb
mov
rolb
cld
int
das
pop
mov
push
inc
dec
mov
pushf
rcrb
int
cwtl
add
idivl
jns
ficoml
mov
mov
sti
cmp
push
leave
out
and
mov
push
ja,pn
xor
xchg
ja
adc
jb
push
xor
lcall
int
scas
cmpsb
std
test
mov
push
lock
and
jae
dec
xor
stos
call
xor
pop
jmp
dec
aas
notl
inc
mov
xor
pop
and
mov
mov
inc
push
fldt
inc
xor
fdiv
gs
xchg
pop
push
bound
popf
pop
xchg
adc
cld
xor
mov
je
icebp
out
and
inc
mov
mov
leave
inc
jmp
inc
sub
aaa
cs
jne
scas
pop
add
push
mov
adc
insb
in
jbe
pop
pusha
lods
jns
jg
jmp
push
push
cmp
or
movsl
mov
sub
push
push
pushf
sub
push
push
in
ss
mov
adc
sub
mov
mov
insb
cmpsl
jecxz
cmp
push
jl
popa
stos
jno
jge
dec
push
pop
xchg
aaa
je
push
sarb
xor
mov
or
adc
mov
and
fdivl
push
sbb
repz
popf
js
insl
int
sbb
jp
lret
repnz
inc
cmp
cmp
cmp
aam
pop
inc
pop
jne
pusha
lret
in
mov
out
shlb
movsb
jge
ds
cmpl
xlat
xlat
and
sbbb
add
negl
mov
popa
cmpsb
aaa
popf
cli
into
mov
push
out
fisttpll
aad
push
sbb
movsb
nop
lahf
dec
xor
jo
cmc
loopne
fimuls
pushf
into
inc
jmp
and
ja
cmc
inc
adc
ss
jne
jecxz
cmp
dec
js
sub
mov
push
push
mov
enter
jb
mov
jmp
into
repnz
cmp
jae
in
in
xor
enter
jge
mov
push
adc
das
cs
lods
xchg
stos
fists
cs
sbb
lahf
idivb
mul
scas
stos
cli
or
daa
inc
ljmp
mov
stos
out
xor
mov
xor
pop
push
daa
add
or
add
mov
ds
mov
jecxz
pop
daa
mov
ret
mov
nop
sti
idivb
push
xor
in
sbb
in
jae
lock
jge
rcll
add
xor
and
ret
or
shlb
clc
mov
jae
adc
inc
int3
in
lds
imul
in
sbb
shll
push
add
leave
repz
jg
test
shlb
and
sub
stc
test
shrl
or
fwait
xchg
and
int
and
sub
sub
xor
push
lock
or
dec
sbb
in
fs
bnd
popf
sbb
or
leave
jno
xor
addr16
sar
scas
mov
sarl
adc
mov
outsb
lock
jb
add
mov
arpl
add
and
pop
andl
xchg
pop
subb
mov
xlat
sarb
mov
jge
jp
jle
and
sub
xchg
add
xlat
mov
pop
jg
inc
popa
cs
mov
into
mov
mov
jno
lret
adc
in
enter
lret
mov
or
xchg
inc
jle
sub
jl
lret
push
sbb
aad
loopne
sbb
fnstenv
xor
data16
mov
adc
pop
cltd
push
mov
repnz
idiv
pop
stc
imul
scas
je
out
jo
shlb
outsb
add
dec
pop
out
es
jecxz
dec
mov
push
dec
push
maxps
out
stc
lds
xor
rcl
je
mov
sbb
xor
adc
dec
pop
sub
je
scas
sbbb
lcall
mov
dec
dec
leave
paddb
out
popf
xchg
das
imul
mov
inc
jo
bound
cmc
dec
icebp
stos
aam
mov
jnp
xchg
push
mov
add
repz
mov
mov
mov
int
and
loope
or
cmc
pushl
fnstenv
push
movsl
ja
or
mulb
cwtd
cmp
mov
cmp
pop
fstl
shl
mov
in
pushf
orb
pop
lret
xor
fstps
cmp
ljmp
pop
gs
jmp
inc
push
pop
rclb
lds
xchg
js
arpl
fldenv
pop
pop
jns
or
gs
in
jo
sbb
cmp
add
push
fsubr
aad
jmp
xchg
out
fstpt
mov
out
sub
fsubs
dec
push
cld
hlt
iret
dec
notl
push
mov
jmp
inc
ret
dec
sbb
push
in
xor
mov
test
and
hlt
fs
xchg
sub
dec
mov
xchg
mov
repz
xchg
loopne
lods
and
jmp
sub
pop
pushf
leave
sub
and
push
inc
push
mov
push
add
sarb
leave
aas
shlb
inc
imul
add
xchg
fnsave
mov
add
and
jbe
sub
loop
aad
adc
test
mov
cmp
sub
add
imul
ja
pop
jmp
add
cmp
ss
jae
and
fsubrl
jb
adc
add
das
hlt
sbb
mov
lret
cmpsl
xchg
add
fidivrs
pushf
clc
mov
inc
jae
fwait
xor
pop
and
mov
xchg
and
lcall
int
insl
mov
cmp
dec
in
stos
mov
scas
dec
lods
sub
xchg
popa
xchg
mov
cmpsb
mov
jbe
mov
in
into
push
lods
push
lret
jbe
dec
xor
sub
lds
mov
cmp
dec
add
icebp
imul
push
leave
jns
fwait
cs
jnp
push
add
cltd
mov
enter
or
arpl
jbe,pt
mov
jge
pop
inc
scas
mov
out
popf
mov
jecxz
inc
stos
inc
sbbl
bnd
dec
xchg
sub
test
xor
fwait
pop
xor
bound
outsb
add
fisubl
arpl
mov
inc
stos
lret
cmc
jnp
out
lcall
xchg
sub
pop
lock
push
pop
add
or
aam
ret
sub
rolb
dec
cmp
fadds
data16
les
int
adc
lods
xchg
out
insb
push
sub
sarl
jnp
pop
fisttpll
les
add
or
jl,pn
sbb
sbb
notl
inc
fs
js
dec
xchg
pop
in
rcll
mov
pushl
lahf
popf
jne
mov
stos
test
mov
pop
out
lock
iret
pop
ret
pop
jo
out
push
and
test
in
xchg
mov
mov
push
mov
cld
mov
sub
push
in
aaa
rcrb
inc
mov
out
xor
lcall
inc
xchg
xor
cltd
sub
sub
out
mov
jbe
sub
iret
mov
cmpsl
pop
in
fwait
sahf
sti
test
dec
push
xor
xor
adc
insb
incb
movsb
ds
out
test
xchg
or
test
sbb
std
mov
cld
loopne
movsb
xchg
sbb
mov
in
mov
repnz
pop
jb
dec
dec
mov
or
jle
es
xchg
push
jbe
rclb
das
repz
gs
inc
xlat
jae
push
mov
adc
insb
mov
sahf
adc
sub
sub
mov
dec
push
loopne
pushf
mov
aam
inc
les
adc
adc
sti
cmp
cld
pusha
pop
aam
daa
and
mov
adc
xchg
jns
and
xor
xchg
push
adc
shll
repz
cmp
mov
fistl
mov
mov
iret
les
add
xor
mov
pop
clc
xchg
mov
xchg
into
lock
in
push
and
mov
shll
mov
jmp
decl
inc
sbb
mov
jo
popa
out
dec
adc
ljmp
inc
adc
imul
fwait
xlat
jge
push
cmp
ljmp
xor
add
ds
sub
ret
and
int
cmpsb
jbe
cmp
cmp
jae
shr
inc
mov
inc
je
xchg
sbb
cmp
mov
shr
push
jl
or
js
mov
lds
mov
into
add
adc
pop
dec
scas
arpl
fs
xchg
jl
lret
lret
push
pop
mov
pop
inc
sub
pop
dec
lret
ja
cmp
aam
sub
inc
pop
or
addb
lods
jg
fldcw
mov
inc
cmc
mov
mov
daa
rcrl
imul
pop
cs
and
out
push
inc
xchg
pop
xchg
addr16
repz
call
mov
cmpsb
add
dec
cmp
lds
popa
mov
mov
add
jo
dec
rclb
cmpsl
enter
mov
xchg
adc
outsb
push
mov
pop
enter
cld
mov
scas
into
jp
add
and
cmc
jle
imul
orb
pop
jmp
out
push
test
popf
push
xchg
test
scas
cmpl
mov
jae
adc
jnp
ljmp
lsl
adc
xor
inc
in
jbe
js
jb
enter
inc
jmp
mov
out
lods
lret
push
mov
fwait
jae
jbe
sub
xor
or
rolb
pop
push
lock
into
pop
cmpsl
push
xchg
push
xor
rorl
icebp
or
fsubrs
pop
bound
cmp
mov
std
clc
loop
fisttpl
add
roll
loopne
insb
out
mov
push
push
mov
jo
push
cmp
sbb
pop
xchg
scas
jmp
mov
pushf
mov
imul
roll
jge
addr16
cld
adcb
mov
or
enter
dec
or
inc
ret
dec
xor
cmp
add
mov
dec
pop
mov
imul
jae
jl
je
sbb
aaa
xchg
scas
shll
mov
sbb
add
inc
and
xchg
dec
js
pop
add
mov
push
xchg
or
sti
mov
popf
inc
lcall
imul
lret
mov
cmp
mov
mov
popa
out
or
sbb
cwtl
cmc
xchg
pop
sahf
aad
in
jl
and
mov
cmp
pop
add
decb
imul
add
loop
cmp
ficompl
adcb
sbb
pop
inc
add
and
sbb
dec
and
xchg
xor
add
and
ds
aaa
outsl
fs
or
xchg
scas
stc
mov
es
shr
adc
shrl
decl
push
sub
pusha
loopne
xchg
loop
jge
push
pushf
jg
jp
xchg
adc
adc
cli
sbb
jge
in
call
cmp
repnz
and
push
dec
dec
sbb
das
lock
rolb
xchg
popa
lret
adc
ds
mov
xor
pop
sahf
push
sub
mov
iret
popa
jo
mov
push
mov
mov
adc
out
lret
cmp
ss
inc
leave
gs
add
dec
push
pusha
push
push
pop
xchg
pop
pop
loopne
push
sti
pop
sti
dec
data16
mov
pop
aaa
pop
xchg
and
mov
sbb
psrlw
push
mov
in
xchg
mov
mov
pop
pop
sub
mov
sub
adc
xchg
xchg
subb
push
fsubr
add
mov
imul
out
dec
ret
cwtl
pop
mov
adc
push
icebp
pop
lock
mov
sbb
inc
mov
dec
push
pop
test
cmp
test
add
sub
test
popf
dec
add
add
xor
popa
sahf
lret
out
pop
in
xchg
pop
mov
jmp
lret
jne
xchg
sub
ror
xchg
cmpsb
add
fcomi
std
lods
pop
pop
mov
xor
fists
stc
xor
and
and
imul
push
imul
imul
ficompl
inc
push
push
jmp
jl
sub
rorl
pushf
push
addr16
cmpsl
and
mov
addr16
xchg
push
test
and
inc
mov
dec
and
cmp
mov
imul
pop
cmpsl
ljmp
mov
xlat
enter
leave
shll
mov
xchg
int
mov
lcall
shll
pop
adc
repz
outsl
jge
push
xchg
test
mov
adc
add
xlat
mulb
and
pop
add
out
sbbl
pop
je
in
or
dec
clc
xchg
enter
adc
leave
push
nop
stos
cmc
xchg
or
shl
inc
sbb
pop
or
mov
cmc
and
arpl
out
mov
lret
dec
pop
pushf
roll
cmpsl
ja
mov
cli
push
pop
aam
js
out
mov
mov
jge
cmp
cmp
xchg
sub
push
fucomi
inc
or
jl
dec
addr16
mov
adc
xor
and
mov
loopne
fiaddl
fnstenv
sti
mov
adc
or
movsl
aaa
xchg
cmc
and
das
ja
dec
cltd
arpl
or
jmp
mov
jg
dec
mov
mov
mov
repnz
stos
dec
pop
fsubr
pop
xor
pop
mov
mov
and
cmp
cld
push
or
xchg
inc
es
sbb
ljmp
outsl
dec
loopne
ja
subl
mov
add
in
xchg
js
test
into
test
cmp
arpl
fmulp
mov
adc
lret
repnz
mov
out
sub
test
addr16
mov
fstps
movsl
push
lret
dec
jbe
scas
lret
pop
outsb
and
shll
xor
cli
into
cld
mov
and
and
dec
pushf
xor
add
lock
push
in
dec
movsb
inc
fimull
push
and
xor
pop
mov
and
sub
cltd
xor
adcb
hlt
frstor
std
dec
fsubr
xor
imul
cmp
xchg
out
adc
push
pop
mov
xchg
sar
mov
int
sub
mov
lret
or
cmp
sub
test
jns
sbbl
or
rorb
sub
arpl
mov
pop
test
add
sub
xor
fs
mov
or
into
push
push
adc
and
ficompl
shrl
subl
sbb
xchg
lret
pop
in
lods
fcomip
jle
mov
sbb
sti
add
mov
mov
xchg
push
push
stos
test
cmp
imull
aad
jp
cld
cmpsb
mov
jmp
push
notl
lds
loopne
jo
clc
aaa
or
dec
and
cmpsb
xor
repz
and
add
jl
fldl
mov
sbb
inc
inc
or
mov
test
add
push
cld
pusha
push
mov
xchg
rolb
outsl
shr
pop
lods
mov
imul
das
pop
in
ss
nop
sahf
int
xchg
movsl
pusha
xchg
movsl
adc
daa
cmp
ss
cmpsl
adc
pop
and
jle
into
mov
out
les
test
test
push
push
rcrl
movsb
push
mov
sub
ja
mov
xor
mov
inc
call
add
lcall
sub
mov
loop
sbb
push
daa
jle
lods
jp
jae
cmp
dec
push
mov
push
jns
imul
lds
dec
push
mov
or
sbb
xchg
aad
insl
test
aam
mov
fisubl
lock
lret
or
jge
popf
push
outsl
jae
xchg
hlt
popf
mov
xchg
fwait
jp
fdiv
push
icebp
cmpsb
mov
xchg
jle
je
sub
roll
hlt
jb
outsb
stos
push
dec
xchg
ljmp
jne
repz
cmp
cs
jmp
or
xchg
xor
mov
mov
add
lcall
nop
add
jl
pop
pusha
mov
aaa
add
lret
dec
add
je
fistpl
xchg
xchg
add
mov
loope
xchg
and
xchg
daa
xchg
push
data16
adc
cmp
das
xchg
ja
sbb
sub
dec
jp
ljmp
mov
jg
test
lods
xor
inc
add
lods
lods
fwait
lods
sbb
sti
shrl
iret
shlb
adc
sahf
add
inc
scas
lret
fsubrl
rcr
mov
je
inc
dec
cltd
xor
jmp
adc
sub
mov
inc
movsb
addl
inc
sub
add
mov
xchg
inc
jb
pop
ret
pop
sub
in
jb
std
xor
xchg
mov
mov
cmp
mov
in
aam
outsl
fdivrs
cmpsl
and
sbb
inc
cld
xchg
mov
jns
inc
iret
jg
ss
js
fs
fsts
or
add
les
mov
jle
stos
mov
imul
sub
int
dec
cmpps
in
jmp
and
xchg
ljmp
outsb
adc
sbb
ss
arpl
imul
leave
mov
xor
adcb
pop
dec
jno
xlat
iret
cmp
xchg
call
scas
lods
jbe
and
sbb
mov
shll
insb
xchg
addr16
push
stc
outsl
cmc
scas
cmpsb
aam
iret
das
inc
mov
out
mov
inc
jecxz
pop
mov
sarb
fmull
testl
inc
push
sahf
jmp
sub
mul
cli
das
test
inc
jne
mov
test
xor
and
daa
cmp
push
and
mov
insb
dec
imul
enter
xchg
cwtl
out
pop
jmp
jne
xorb
cmp
dec
mov
sbb
mov
mov
xorl
jae
mov
mov
push
xchg
push
xlat
pop
jp
sub
xchg
int
scas
addb
add
es
ficoml
pop
enter
adc
mov
push
fldenv
push
sbb
jmp
nop
sti
movsb
push
cmp
gs
ds
std
sub
popa
inc
mov
lock
aas
xchg
mov
ja
xchg
loop
mov
push
add
pop
sbb
adc
loope
xchg
fxch
add
or
lds
js
hlt
insb
xor
pop
sub
jmp
sbb
pop
call
fcmovbe
add
add
jnp
push
outsb
xor
outsb
insb
cmp
push
sub
mov
add
jmp
push
or
je
xchg
mov
outsb
sbb
or
sub
pusha
pusha
push
test
sub
stc
sbb
cmpsb
jbe
sbb
scas
imul
lcall
cltd
pop
cltd
jg
push
mov
mov
dec
adc
lret
dec
scas
rcrl
mov
and
jae
sub
lock
stos
cmp
lret
clc
mov
cmp
pop
xchg
dec
rcl
push
cmp
aaa
jbe
adc
or
and
cmp
in
sub
jg
mov
in
push
movl
lock
add
xor
sub
je
cmpsb
sahf
xchg
xor
nop
js
aaa
dec
mov
idivl
aad
stos
xchg
rcrl
xchg
fs
xchg
ljmp
les
jb
mov
lds
sarb
jecxz
pop
mov
inc
aas
sbbl
pop
aam
jge
pushaw
les
push
shrl
enter
inc
or
ja
dec
lret
shrb
inc
cwtl
fists
mov
and
xor
fsubl
divl
ljmp
cmpsb
shlb
jmp
mov
scas
sahf
cmpsl
addr16
ja
dec
cmpsl
add
xor
lret
jne
stc
fiaddl
cld
xlat
pop
push
xchg
xorb
inc
ret
int3
movsb
lahf
fucomip
stc
jae
dec
gs
movsb
sub
cmpsb
and
mov
mov
stos
mov
or
or
cmpsb
in
jns
push
sbb
push
adc
sahf
pop
inc
mov
add
jle
cs
stc
dec
cmp
and
adc
push
sbb
je
fstpt
scas
push
push
xlat
mov
cmpsb
cmp
adc
mov
imul
adc
movsl
sbb
fdivrl
lods
push
jb
cmp
sub
das
mov
cmpsb
add
sbb
mov
cmp
lcall
pop
adc
xorl
lea
sub
bound
mov
in
cmp
fbstp
pop
aam
shl
outsl
and
iret
das
outsb
dec
in
inc
imul
outsl
aam
ficoms
in
mov
bnd
scas
jmp
xchg
out
xchg
movsl
in
jb
mov
sub
jnp
pushf
test
lock
cmp
icebp
jne
lcall
rcll
jmp
and
xchg
jecxz
mov
add
dec
scas
pop
sahf
jns
jns
orb
mov
mov
adc
and
sti
cmp
sbb
mov
loope
lcall
fs
inc
mov
jae
lgs
mov
and
imul
mov
imul
sub
add
sub
adc
inc
push
or
fldl
xchg
lock
sub
cltd
aas
xorb
cmpsb
shll
es
xchg
loop
mov
insl
pop
movsb
loop
xchg
lret
push
cmp
insl
jnp
lret
pop
lods
mov
pop
cmp
sub
sbb
nop
add
ljmp
insl
imul
ret
add
lods
xor
inc
js
or
movsb
enter
sahf
mov
push
cmpl
daa
pop
and
adc
outsl
and
dec
adc
cmc
testl
xor
cs
xchg
sub
xor
incb
roll
inc
xor
xor
sub
sub
mov
incl
ja
xlat
mov
or
and
pop
adc
pushf
mov
movl
shl
cltd
lcall
and
imul
sbb
outsl
ror
pop
mov
stos
jmp
jne
aad
shl
inc
pop
cmp
jmp
sub
fsubrl
jno
mov
scas
nop
push
mov
ljmp
sub
insb
inc
lock
aad
mov
mov
fwait
int3
pop
ds
les
out
mov
enter
fcmovnbe
mov
and
adc
pop
jnp
int
inc
repz
daa
testl
cltd
fsubl
or
cs
popa
mov
xchg
mov
pop
pusha
insb
cmp
push
jmp
jp
mov
mov
xor
cltd
outsb
sub
dec
insb
scas
lcall
lds
cmpsb
mov
jle
xchg
daa
pusha
shlb
mov
jnp
lds
sbb
les
clc
xchg
mov
insl
cmp
mov
test
jge
cld
xor
mov
or
lahf
fnstcw
push
sub
dec
mov
sub
nop
insb
xchg
mov
pusha
loopne
shrl
test
add
jb
sbb
xchg
call
mov
push
add
insl
ds
adc
ret
mov
test
and
sbb
in
sbb
pop
inc
cmp
dec
mov
stos
repnz
das
repz
xchg
push
xor
sbb
push
out
pop
or
enter
xchg
xchg
cld
sub
pop
cmp
inc
add
sbb
push
cmp
mov
dec
scas
and
stc
outsl
jle
cld
lods
mov
adc
shrb
das
movsb
lods
push
jl
sti
lahf
push
pop
sub
out
inc
sbb
insb
sub
pop
or
mov
mov
xchg
jae
and
cld
ja
push
fstl
leave
ret
jae
pop
lcall
jl
push
addb
adc
out
sub
xchg
out
mov
cmc
fiadds
xchg
cmp
jb
dec
dec
movsl
add
inc
cmp
or
jge
pop
mov
fwait
bound
cmpsb
repnz
fisttpl
add
mov
es
push
rcl
xor
lds
jb
int
jns
pop
sbb
frstor
rol
lret
dec
fcomip
ljmp
fists
or
pop
aas
sbb
int3
sbb
cld
outsl
rcl
sbb
jge
mov
jmp
lcall
adc
jno
lret
mov
ss
clc
mov
push
xor
stos
je
dec
xchg
mov
pop
xor
ljmp
lahf
cmp
xchg
jae
or
aad
push
mov
mov
hlt
popa
cmp
xor
mov
sbb
cmp
xchg
arpl
pop
mov
xor
loop
test
fisttpll
gs
or
add
sarl
pop
in
sbb
sbb
jl
cmp
cli
inc
mov
mov
test
xor
adc
sahf
cwtl
xor
in
shll
add
ja
lods
daa
out
sub
pop
sub
xlat
inc
push
xchg
mov
shrl
arpl
adc
or
push
nop
push
jl
pop
addl
iret
xor
jbe
xchg
movsb
bound
pop
fldl
or
cli
dec
cmc
xchg
int
test
sar
ss
mov
xlat
clc
xor
mov
std
rcr
std
nop
inc
push
inc
iret
stos
stc
lret
add
ljmp
clc
xchg
or
ss
jnp
movsb
xchg
xor
fs
rcll
push
lock
stos
imul
popa
loopne
jbe
push
movsb
test
outsb
adc
mov
lret
sbb
cmp
outsl
sub
in
decl
push
rclb
loopne
inc
mov
fstpt
popf
aas
cmp
addb
sbb
mov
cmp
mov
jb
fcmovu
outsl
mov
push
mov
stos
push
mul
or
call
push
dec
push
jbe
jne
mov
stos
out
mov
push
sbb
mov
add
and
pop
cmp
cmp
into
pushf
lock
cmp
outsl
mov
xchg
sbb
xchg
pop
lret
add
sub
mov
adc
add
inc
lcall
loop
scas
cld
lea
pop
push
addr16
aaa
sub
fstps
movl
mov
in
lods
mov
ljmp
or
aas
out
sbb
cwtl
pusha
pop
int
cld
dec
into
es
ljmp
xchg
jns
push
sbb
idivb
mov
outsb
sbb
aad
sbb
xchg
shr
lahf
lcall
rolb
and
scas
cmp
push
and
push
aam
imul
xor
stos
rcrl
std
divb
ret
ret
mov
pusha
mov
call
sub
test
out
mov
xchg
jecxz
mov
push
gs
js
mov
movl
shl
fildl
xchg
and
rcrb
pusha
test
aaa
pusha
repz
add
cmp
xor
pop
xchg
pop
mov
fbstp
in
js
cmp
inc
mov
ficoml
cs
stos
push
lcall
jge
pusha
rorl
ret
pop
sbbb
jbe
mov
test
iret
jl
stc
shrl
lods
inc
push
fadds
dec
clc
push
mov
jecxz
int
add
pop
mov
jl
or
push
fdivrs
xor
xchg
or
push
fiadds
pop
cmp
scas
and
mov
testb
dec
push
push
aad
test
sti
in
daa
or
add
xchg
sub
ja
push
or
xorl
leave
xor
pop
fstpt
pop
inc
lret
push
xchg
add
inc
lea
inc
sub
push
mov
sub
mov
xor
add
loope
fs
stos
mov
mov
dec
out
stos
mov
mov
mov
dec
pop
sahf
jle
adc
xor
inc
imul
push
dec
and
rorl
dec
dec
aaa
sarl
data16
lea
cmp
mov
arpl
jb
mov
jle
outsl
stos
sub
sarl
cmpsb
xchg
mull
lahf
pop
fcomip
scas
mov
pop
xchg
mov
or
lcall
inc
adc
enter
or
shll
notl
bound
push
push
push
xchg
aas
jp
pop
xor
stos
xchg
add
test
movsl
pop
dec
cmp
int3
cmp
repnz
or
jno
lea
cmpsl
jo
pop
dec
jns
jg
sbb
cmp
xchg
leave
loope
daa
mov
jne
push
push
mov
aaa
cmpsl
or
movsb
lea
xchg
out
push
imul
je
jbe
shl
test
ret
pop
xchg
mov
pop
xlat
mov
fisubrl
jne
dec
nop
aas
xchg
outsb
sbb
rclb
enter
cmp
pop
push
aam
stos
pop
jne
jecxz
adc
xchg
adc
xchg
cmp
push
and
push
mov
xor
ds
mov
cmpsb
cmpsl
cmp
jp
jmp
fisttps
into
xorl
pop
xor
rolb
xchg
and
inc
mov
mov
lods
roll
jl
pop
cmpsb
in
mov
ljmp
cmp
into
xchg
flds
sbb
mov
pop
mov
in
dec
xor
fcmovb
add
test
imul
mov
cmc
addl
lret
imul
lods
aaa
pop
enter
fimull
inc
iret
lahf
es
cltd
inc
push
std
sub
sbb
dec
xor
push
inc
inc
aaa
pushf
iret
ja
push
jg
loop
sbb
push
dec
aad
and
xor
xor
aas
movb
aas
jo
imul
mov
in
add
movsb
jge
js
mov
pop
sub
fwait
mov
enter
and
dec
mov
loope
push
aas
into
out
movsl
insb
jae
stos
std
and
or
xchg
pop
lcall
cmpsb
sbb
mov
push
pop
stos
insb
or
repnz
push
insl
fs
inc
movsb
add
sub
or
mov
ret
xor
movb
rcr
sub
faddl
jmp
ficoms
imul
test
push
pop
aaa
iret
mov
mov
push
xor
ret
or
stos
lea
xor
ficompl
jo
xchg
pop
or
rol
inc
xorl
js
andb
xor
imul
fs
aam
push
xchg
mov
sbb
xor
push
mov
test
aas
fstpt
inc
xor
adc
int
and
lods
and
movsb
dec
push
jp
inc
sbb
scas
js
leave
mov
aas
jo
cld
shl
inc
imul
lahf
adc
leave
int3
jmp
adc
xchg
jl
into
rcrb
jp
iret
jno
cmpl
push
and
pop
int
push
pop
cmpsb
sarb
flds
push
bound
adc
jnp
jmp
sub
cmpsb
mov
xchg
addr16
shrl
push
mov
mov
scas
push
xor
lds
scas
and
mov
out
pusha
jecxz
and
inc
inc
sub
or
pop
in
and
movsb
xor
inc
loopne
adc
mov
test
cmp
stos
fiadds
call
xor
ljmp
xchg
xchg
cmp
or
insb
idivb
call
dec
jne
xchg
fwait
pop
inc
inc
fdivs
ja,pt
pop
es
mov
xor
lea
outsl
xchg
xlat
sahf
dec
mov
fcompl
jb
gs
jl
imul
leave
mov
es
sub
push
imul
cmc
cmp
cmp
in
ja
cltd
call
je
jb
ret
sub
subl
sub
imul
add
xor
inc
or
in
test
sbb
loope
rcrl
shll
cwtl
jp
dec
cmp
jae
mov
xchg
fyl2xp1
dec
sbb
dec
movsb
inc
stos
dec
xchg
add
movsb
hlt
sarl
cmp
or
aas
sti
push
in
lret
inc
gs
lahf
xchg
xor
rcl
jp
add
xor
lret
daa
and
xor
or
jnp
imul
jb
int
xchg
pop
js
test
mov
mov
xor
mov
adc
mov
mov
pop
push
fsubs
sub
cli
divl
xor
jg
cmp
mov
jno
push
or
or
add
sti
mov
push
pop
bound
das
xor
fistl
clc
or
and
push
mov
cmp
adc
add
out
sub
jnp
dec
xor
and
xchg
xlat
fs
mov
scas
repz
jg
pop
aad
lahf
inc
pop
aad
mov
stos
inc
dec
mov
jg
add
sbb
jle
filds
or
push
pushf
mov
xor
aaa
jl
cmp
adc
std
lea
movsl
les
fimuls
pop
push
sbb
mov
or
mov
cmp
mov
popf
or
xor
sti
sbb
loope
jnp
incb
dec
rcrl
sub
cmpsl
imul
pop
leave
pop
push
cmc
push
jne
iret
cmp
adc
inc
popa
push
lea
rcrl
outsl
ja
jmp
and
mov
out
out
cmpl
popa
xchg
in
pop
sub
sub
in
pop
enter
testb
cmp
outsb
cli
xor
lcall
mov
dec
xor
xchg
scas
mov
inc
loop
pop
mov
cld
pop
dec
popa
mov
call
fisubrl
nop
adc
gs
in
fucom
dec
fsubl
adc
dec
pop
rcl
arpl
test
pushf
sub
pop
out
push
and
add
add
nop
dec
sub
movsl
ror
jne
jne
dec
decb
mov
or
and
jl
stos
mov
mov
loope
aad
sbb
push
je
shl
data16
es
xchg
and
leave
cli
add
into
faddl
and
jg
in
fsts
gs
cmp
adc
dec
xchg
je
imul
imulb
or
aaa
xchg
jo
mov
ja
es
test
div
pop
jo
or
test
sbb
pop
out
fnstsw
inc
add
rolb
push
pushf
loope
push
and
repnz
push
add
sub
jle
ds
cmpl
push
shll
adc
xchg
inc
rorl
pop
out
add
push
xchg
in
sbb
popf
outsl
loope
lret
test
jb
add
fidivrl
ret
pop
cmc
mov
add
jmp
movsb
inc
movsb
fnstsw
or
sbb
xchg
add
loopne
or
jecxz
sti
jae
mov
mov
jo
je
xorb
mov
cs
push
xchg
adc
cs
push
sub
out
inc
xor
mov
push
loopne
loope
xor
inc
dec
mov
pop
xchg
sbb
test
mov
inc
xchg
xor
lock
aam
dec
dec
inc
dec
adc
push
push
test
les
in
movl
add
jo
scas
push
fistpl
and
stos
mov
ja
and
lods
xchg
or
daa
ss
lret
mov
mov
dec
les
andb
test
ljmp
icebp
mov
add
repnz
pop
mov
std
lret
clc
int
mov
scas
cltd
adc
call
xchg
hlt
pop
mov
or
inc
dec
das
adc
or
stos
pop
pop
mov
ljmp
stos
lds
push
sti
mov
fstpt
cmp
clc
and
mov
mov
xchg
daa
fcompl
lret
mov
test
add
jne
loope
xor
aaa
push
sub
out
cwtl
in
out
pop
les
inc
lret
xor
lcall
bound
loope
xchg
sbb
sbb
or
inc
ret
mov
mov
xor
dec
push
pop
pop
sub
xchg
nop
cmp
dec
fs
mov
dec
loopne
fisttpl
insb
addr16
fidivl
xchg
and
jmp
or
in
cmpsb
xchg
adc
or
push
dec
fcompl
pop
pushf
push
mov
jle
or
mov
lds
cmc
and
jge
jmp
ss
loopne
inc
jb
enter
gs
xlat
hlt
jl
or
cmp
push
rclb
sbb
sarb
pop
mov
imul
aas
aam
dec
xor
fs
push
cmc
cli
or
jp
popf
xor
or
jbe
cwtl
fstpt
iret
adc
ret
sub
and
add
mov
dec
adc
cmp
int
not
aad
cmc
cld
xor
jp
test
and
fldt
fadds
pushf
mov
hlt
lret
adc
imul
test
xchg
xchg
cmpsb
lods
aas
test
test
or
pop
fs
xchg
je
rorl
cli
or
lods
shlb
fsubr
push
xor
xchg
or
clc
scas
cli
push
fnstcw
mov
pop
mov
ret
outsl
call
ret
ljmp
scas
cltd
repz
ja
dec
push
mov
xchg
rep
fildl
mov
lret
cmpsl
daa
cmc
push
push
mov
and
fisttpll
inc
js
mov
and
arpl
aam
dec
dec
inc
in
pop
mov
lock
xchg
inc
daa
push
js
sub
sbb
aaa
call
pop
stos
xchg
xchg
insl
mov
stos
loopne
aam
mov
mov
jnp
pop
mov
std
pusha
cmp
inc
or
fsubs
dec
mov
hlt
adc
inc
adc
xchg
outsl
push
sti
aad
in
rcr
dec
pop
mov
jmp
cmpsb
xlat
cmp
adc
sbb
mov
insl
mov
mov
pop
adc
es
nop
dec
mov
imul
std
jo
loop
in
push
mov
xlat
jno
es
sub
add
test
popa
pop
jl
filds
incl
out
mov
push
ret
xchg
mov
aad
dec
movsl
jp
lret
pop
notl
lods
ljmp
sar
ss
test
xchg
pop
inc
inc
mov
popf
je
int3
push
pushf
add
add
in
into
repz
aaa
fistl
fidivrl
cmc
jecxz
pop
inc
jae
xchg
loop
pop
adc
fists
pusha
push
mov
cs
and
jns
mov
sub
lock
ljmp
xor
shl
dec
add
cltd
inc
test
jp
sbbl
mov
insl
fisubs
push
dec
data16
scas
dec
fidivs
add
popa
je
rorl
push
push
push
mov
out
lods
sbb
xor
xchg
or
loopne
das
fcomi
dec
cld
mov
bound
fs
scas
js
mov
xchg
push
jge
sub
lods
ret
js
sub
lret
das
mov
mov
adc
inc
sbb
sub
add
imul
stc
sbb
shlb
mov
jecxz
mov
ja
xor
mov
ds
jne
jo
jb
subl
dec
adc
mov
int3
pop
and
cmp
cli
add
sbb
push
fwait
movsl
cmpsb
popfw
lods
xchg
or
test
jnp
in
push
add
lea
ljmp
lds
std
lock
mov
lods
in
or
nop
sbb
scas
cmp
and
mov
arpl
sbb
stos
mov
lahf
sub
xchg
dec
bound
loope
sub
adc
sub
ljmp
jmp
call
das
js
push
cld
popf
push
scas
es
sub
leave
add
repz
mov
loopne
xchg
jmp
mov
ss
ret
iret
in
or
inc
adc
imul
sbb
mov
lcall
in
enter
push
stos
fwait
inc
sbb
and
sub
pop
div
and
sbb
js
ljmp
or
out
stos
push
dec
cmp
lds
adc
jne
imul
xchg
cmp
inc
and
sbb
sub
fsub
push
lods
mov
imul
sub
cmpb
lods
gs
in
xorb
inc
aad
xchg
fisubl
sbb
mov
sbb
push
cmp
in
jmp
push
ja
inc
add
outsl
mov
jo
cld
dec
jns
clc
lahf
sbb
inc
cmc
test
adc
mov
out
pop
faddl
pop
xchg
jp
cmc
mov
jmp
and
xchg
xor
xchg
sbb
cmp
jno
test
mov
mov
inc
fstpt
xlat
add
mov
push
icebp
insb
mov
into
jmp
fcmovnbe
shr
test
xchg
mov
fwait
out
cmp
add
aas
ja
out
loopne
fldl
arpl
outsb
inc
dec
lea
mov
mulb
sbb
call
decl
out
fcoml
negl
jle
sti
mov
or
lret
fdivs
das
and
xchg
push
ss
xchg
arpl
lods
std
int3
pop
xor
scas
pop
cwtl
je
mov
cmp
xchg
cwtl
pusha
xchg
dec
or
and
adc
push
push
idiv
and
xchg
and
or
jo
lds
in
sti
rcr
xchg
rorb
daa
das
gs
stos
mov
ds
sub
jl
dec
fsts
imul
mov
movsb
movsb
mov
sbb
sbb
add
cmp
lret
popf
mov
negb
jle
pushf
mov
mov
cmp
jnp
addl
jle
aad
fs
add
sbb
dec
outsb
sahf
out
rcll
shlb
mov
loope
dec
sbb
jnp
jg
loopne
cmpsb
call
xor
add
aas
jne
orl
gs
fs
inc
mov
cmp
mov
cmp
push
test
scas
xor
mov
or
fs
test
insb
orb
sub
xchg
in
mov
aad
outsb
and
jbe
les
ret
lahf
in
jecxz
mov
in
mov
hlt
jmp
fwait
out
push
nop
ja
in
enter
repnz
add
ds
sbb
addr16
mov
repz
sbb
leave
or
imul
aad
mov
and
pusha
out
inc
xor
insl
loopne,pn
ficomps
std
not
bound
push
jae
xor
out
movsl
shrl
mov
sub
mov
push
dec
xchg
cmp
ret
adc
lds
pop
jl
cmp
sub
mov
cmp
xor
mov
push
mov
shr
popl
std
gs
inc
sub
mov
xchg
xlat
bound
or
cli
cs
insl
xlat
and
cmc
push
add
adc
adc
push
inc
sbb
mov
imulb
sbbb
xor
lock
and
or
leave
cwtl
enter
xor
lods
fwait
jno
xchg
jl
or
push
push
mov
ds
pop
cwtl
data16
xchg
add
push
cltd
xor
fcmove
stc
sti
test
loopne
fwait
pop
call
lods
pop
sbb
faddl
cmp
repnz
cwtl
mov
push
pop
pop
mov
dec
xor
fisttpl
pop
nop
mov
sub
popa
leave
out
lcall
xchg
or
pop
test
sub
push
adc
cmp
fcos
in
daa
mov
adc
repnz
add
mov
cmp
push
fiadds
enter
or
and
into
push
pushf
mov
int
mov
dec
sbbb
push
mov
insl
sbb
subl
push
dec
sarb
xchg
in
daa
out
ret
dec
sbbb
hlt
push
cmp
fistl
add
and
in
push
push
imul
popf
scas
fimuls
ret
cwtl
and
aam
in
mov
int
jg
lret
iret
and
sub
loopne
pop
adc
imul
je
lods
inc
shlb
stc
out
adcw
mov
or
mov
xor
sahf
sti
rcr
arpl
es
lahf
imul
and
movsb
adc
shlb
cltd
sar
fldt
sbb
adc
mov
lods
aam
push
fbld
xchg
jle
xor
fwait
adc
and
add
out
push
ret
pop
xchg
das
leave
dec
imul
scas
sbb
sub
push
inc
fnsave
cld
imul
mov
incb
repnz
and
cltd
xor
add
push
push
or
xchg
andl
adc
sbb
xor
icebp
lods
mov
mov
cwtl
adc
data16
ret
test
lds
add
aad
out
add
cmp
bound
xchg
pusha
mov
addr16
xchg
jmp
cld
inc
std
paddsb
jne
cs
test
dec
inc
sub
enter
xchg
jp
popa
xchg
das
mov
pop
in
xchg
cltd
insb
out
fwait
jp
hlt
xchg
mov
xlat
out
sbb
adc
xlat
gs
mov
push
out
ljmp
shrb
and
pusha
and
xchg
hlt
sbb
or
pop
gs
lds
in
lock
sbb
pop
aad
daa
mov
popa
subl
out
mov
rcrl
push
pop
ficoml
pop
push
mov
mov
mov
and
mov
cmpsb
out
push
mov
jns
push
fs
adc
mov
out
mov
push
movsb
call
xchg
in
push
addb
dec
or
pop
arpl
push
pop
pushf
enter
xchg
in
ret
lcall
cltd
cs
cmc
scas
test
cmpsb
ret
hlt
andl
sbb
fiadds
push
imul
xor
xor
sub
in
jae
xor
dec
mov
jmp
xor
mov
imul
sahf
lds
mov
rep
adc
mov
xchg
fsubl
stos
mov
mov
shrb
cs
dec
mov
ljmp
test
icebp
mov
cmp
pop
iret
push
insl
sbb
aaa
dec
xchg
mov
sbb
in
mov
add
mov
or
mov
xor
imul
fcomi
mov
das
sahf
push
sbb
repz
xor
sub
push
cld
lods
pop
data16
xchg
subl
mov
xor
jmp
or
mov
adc
dec
sbb
xchg
popa
push
sub
lret
pop
inc
sbbb
cli
adc
pop
xchg
js
mov
mov
repnz
add
mov
jge
sub
pop
cmp
mov
jle
lcall
sbbb
clc
xchg
out
add
dec
int3
xlat
mov
lret
or
pop
add
arpl
push
iret
jae
addr16
test
gs
in
movsb
mov
push
cmp
and
push
popa
lret
filds
jo
int
pop
inc
dec
sbb
scas
push
push
cmpsl
pop
scas
js
jle
sub
ds
hlt
xchg
and
adc
fnstenv
and
push
dec
sbb
adc
push
pop
jg
sub
insl
xor
dec
mov
mov
ds
lods
decb
mov
xchg
mov
loopne
stc
jl
orb
sbb
pop
ret
std
sub
sbb
mov
das
int
bound
cmpsl
insl
in
pop
fwait
sti
mov
dec
mov
sbb
mov
out
test
pop
push
repz
adc
mov
rorb
sub
add
jb
pop
sub
daa
add
sahf
mov
jmp
lods
cltd
sub
sbb
add
sub
add
loopne
scas
movsb
jnp
dec
imul
jmp
ss
push
push
inc
pop
sbb
cmc
add
fsub
ret
inc
outsl
es
pop
push
push
out
dec
push
dec
icebp
add
cmp
xor
pop
mov
mov
dec
mov
jle
dec
in
outsl
fldt
dec
mov
and
test
or
adc
jle
push
mov
aam
pop
inc
dec
inc
int
add
loope
push
add
cmp
sahf
stc
push
and
movsb
adc
ds
scas
or
cmpsl
out
and
sub
mov
lock
pop
add
popf
mov
cmc
xor
and
fs
out
das
sbb
test
add
add
and
imul
pop
push
push
nop
add
mov
jae
or
cmp
ror
and
mov
lcall
and
jl
and
mov
sub
in
pusha
punpckhdq
mov
inc
in
or
fsubr
aaa
addr16
and
sbb
and
pop
sarl
push
jmp
roll
push
push
sbb
push
aaa
cwtl
mov
sbb
or
rol
sarl
mov
and
push
into
jo
popf
lret
out
push
push
adc
imul
int3
pop
pop
stc
mov
jmp
scas
push
les
inc
or
pop
mov
push
pop
test
and
and
sbb
stos
sub
lcall
push
pop
loope
or
repnz
cltd
sbb
out
inc
cwtl
push
and
adc
sbb
sti
jne
xor
sub
rorl
shrb
fidivrs
shlb
push
jae
mov
aad
int3
mov
aad
sub
push
adc
fwait
subb
fcom
int
adc
idivb
call
jns
or
push
sbb
stos
push
movsb
ljmp
sbb
xchg
xchg
mov
ljmp
jo
sbb
stc
sbb
out
push
dec
pop
out
dec
pop
sar
das
mov
ss
aam
push
xor
mov
aad
iret
shr
xchg
xlat
xchg
xchg
fwait
mov
scas
inc
push
and
sbb
sahf
scas
jp
std
jp
gs
adc
cwtl
xlat
mov
scas
mov
pop
inc
mov
pop
loop
or
sub
xchg
sbb
stc
dec
ret
bound
out
popa
in
stos
mov
repnz
jl
adc
mov
enter
dec
popa
std
js
mov
mov
outsb
loope
int3
jmp
jae
xchg
push
std
add
lea
push
jg
push
out
sahf
add
cli
jle
iret
sub
arpl
cmpsb
jle
add
push
repnz
jne
jcxz
outsl
mov
shll
xorl
sub
das
mov
ljmp
clc
xor
cmpl
test
adc
rorl
push
loopne
cmp
xlat
cs
repnz
bound
test
ljmp
cltd
sub
stc
sub
dec
add
xor
mov
jo
dec
mov
pushf
xor
mov
dec
lcall
push
cs
xorb
insl
mov
dec
jge
inc
sti
adc
or
push
jmp
xor
mov
in
jnp
insb
xchg
iret
js
cmp
lcall
das
stos
rcr
out
shl
cmp
push
iret
mov
aaa
loopne
pop
popf
testl
cmpsl
stc
push
std
pop
in
dec
out
cmp
jg
pop
ss
jb
mov
aaa
jnp
mov
mov
pop
push
dec
je
jmp
xchg
jl
mov
add
dec
aad
mov
into
add
lret
jecxz
jle
sti
mov
pop
inc
xchg
rcll
js
sbb
pop
sbb
xchg
pop
lea
push
xchg
icebp
adc
jno
sbb
imul
or
mov
inc
cmp
in
adc
movsb
cmpsl
out
push
mov
popa
mov
cmp
mov
push
inc
div
xor
adc
push
dec
jl
mov
sub
movsl
mov
add
std
bound
loope
push
xor
jns
inc
lcall
imul
inc
nop
jmp
imul
push
push
outsb
and
add
insb
cmp
fxch
adc
insb
cmp
adcb
pop
pop
sub
mov
stc
sub
mov
push
into
out
shlb
scas
stos
xchg
out
jp
movsl
mov
adc
sub
pop
hlt
outsb
xchg
mov
sub
mov
pop
outsb
jl
pop
fmuls
movsl
js
shrl
ja
inc
jns
int
repnz
js
repnz
call
popf
push
push
dec
fisubl
inc
mov
add
mov
sbbb
fs
adc
fcompl
sub
dec
pop
lcall
pop
add
xor
stos
mov
add
and
lret
cld
pop
fcoms
cld
ljmp
fnsave
in
into
scas
mov
popf
les
fldcw
pop
and
lock
scas
enter
ljmp
push
xchg
and
adc
jmp
mov
icebp
cmp
loope
push
pop
in
xchg
push
sub
cmpsb
popa
insb
mov
mov
pop
testl
gs
add
fs
out
cmp
or
shl
push
dec
sahf
inc
push
push
aas
mov
xchg
inc
mov
pop
or
cwtl
fidivl
pop
xchg
push
and
cmp
int3
decl
cmp
pushf
jp
add
jne
pop
jl
jge
mov
out
fwait
xchg
pop
mov
fidivl
xlat
insb
lods
clc
add
movsb
lea
mov
jg
inc
xchg
xchg
xor
xchg
push
idivl
jp
pop
das
test
test
cmp
pop
sbb
out
mov
xchg
lds
xchg
test
fcmovbe
stos
cld
icebp
test
std
push
xor
mov
inc
aaa
mov
mov
mov
inc
sub
vmread
out
mov
xchg
in
and
inc
mov
out
aad
mov
outsb
clc
xor
stos
pop
inc
lock
mov
sbb
insb
jmp
lcall
push
popa
or
or
orb
jb
and
or
mov
xor
cmp
cmpl
pop
dec
push
jbe
cmp
clc
xor
enter
stos
loope
fstp
scas
lea
iret
and
mov
mov
lods
sahf
loop
push
dec
mov
xor
pop
or
mov
sbb
nop
js
jge
mov
jnp
pop
mov
or
xchg
or
fisubrl
ss
mov
jle
loope
dec
jnp
pop
test
dec
imul
or
pop
cmp
add
xchg
iret
push
cs
hlt
push
dec
adc
mov
inc
lock
fsts
add
scas
imul
pop
add
sub
jno
pop
fldl
xchg
enter
lods
and
jb
inc
cld
mov
add
call
sbb
andl
xor
pop
xchg
dec
xor
xchg
stc
cmpb
xor
or
leave
adc
scas
jl
ss
adc
push
rol
mov
loop
inc
sti
outsl
or
cmp
es
jle
hlt
lea
lcall
mov
jge
dec
mov
jno,pt
mov
mov
sti
sub
loop
shll
or
push
aam
mov
cmp
inc
mov
repz
hlt
cld
inc
xchg
lret
mov
lea
sub
dec
or
test
xor
imul
cltd
or
xor
mov
hlt
repz
and
std
outsl
pop
hlt
jnp
sub
cmp
nop
aad
mov
loop
jge
pop
and
xchg
push
filds
les
popa
loop
sahf
pop
cli
add
pop
sbb
rcrl
popa
add
inc
in
mov
add
pushf
mov
add
sub
bound
xor
mov
scas
cld
dec
inc
jg
adc
xor
call
push
mov
or
pop
cwtl
jg
fists
sar
pop
or
adc
fmuls
xchg
es
and
popf
nop
mov
stc
fidivs
add
and
filds
push
imul
in
ljmp
add
push
hlt
shl
jns
sub
mov
inc
mov
jp
sbb
call
adc
testb
mov
lcall
in
rcrl
imul
ret
mov
ret
mov
mov
jbe
sbb
or
movsl
lahf
sbb
lods
jmp
fisubl
mov
enter
mov
inc
outsb
in
jg
or
jecxz
in
mov
negb
out
imul
loope
aad
imul
sarb
sbb
xor
cltd
lcall
out
call
pushf
or
pushf
and
jge
movsb
jp
sub
adc
lock
mov
ja
dec
xchg
dec
cmpsb
mov
out
cmpsl
das
ret
sub
push
jmp
jge
jbe
jg
and
adc
or
daa
pop
aam
jo
lahf
pop
xchg
not
das
adc
negl
in
sahf
inc
ret
pop
cltd
or
sub
in
mov
push
mov
or
push
jno
adc
stos
es
mov
out
push
push
verw
cmp
test
es
call
mov
cld
into
xchg
and
push
and
mov
xchg
stos
jo
pop
stc
subb
jnp
xor
jne
fs
dec
andb
inc
lds
inc
sbbl
lahf
pop
fcomip
mov
insb
add
adc
outsl
ret
daa
outsb
sbb
andl
xchg
iret
aaa
lea
fwait
addr16
cmp
loop
pop
lock
xlat
or
loope
enter
std
or
or
mov
cmpsl
lds
mov
shlb
imul
decl
in
aam
dec
cmpsl
add
test
mov
mov
and
fwait
out
stc
movsl
add
rolb
or
cmpsb
icebp
mov
push
lea
push
push
dec
push
adc
xorb
fldl
push
inc
popa
fwait
outsl
or
dec
xchg
xchg
mov
push
mov
andl
lock
fdivr
cmc
jle
loope
out
mov
scas
insl
int3
out
mov
fnsave
and
daa
cmp
mov
les
pop
push
cmp
sar
adc
dec
jmp
popf
sub
aad
movsb
push
mov
cli
and
jb
inc
lods
or
and
sti
mov
add
jbe
pusha
ds
mov
popf
test
mov
test
jb
mov
rcrl
aaa
test
fsubs
fistl
jbe
fcompl
jno
inc
xor
ret
pop
js
adc
stc
fmuls
mov
sbb
in
mov
dec
out
sbb
mov
call
mov
and
dec
cmp
dec
pop
push
pop
mov
mov
sub
cli
jns
mov
jno
popa
repz
xor
and
mov
cmpsb
loopne
dec
call
pop
loop
imul
inc
dec
pop
arpl
mov
sbb
out
sbb
cmp
xor
int3
xor
sbb
hlt
das
insl
sahf
adc
je
xor
icebp
or
gs
pop
push
or
pop
jle
movsl
test
adc
jmp
xchg
mov
cli
jb
popa
mov
xor
add
sbb
lret
jge
loop
lcall
sbb
test
mov
test
imul
test
cmpsb
add
gs
dec
pushf
sbb
lret
and
fnstsw
push
and
pop
cmp
pop
push
gs
cmp
adc
inc
lods
repnz
cli
push
xchg
testb
sbb
mov
and
shll
push
or
cwtl
or
mov
xchg
mov
xor
mov
mov
cmp
clc
shr
lret
mov
pop
sarl
mov
pop
cmpsl
jo
fnstsw
andl
dec
xlat
sub
push
mov
jbe
push
cs
mov
sbb
sbb
lods
jnp
push
xor
push
scas
dec
push
fimuls
push
sub
imul
je
imul
scas
dec
push
ja
daa
lret
pop
and
mov
les
pushf
shll
sub
mov
pop
mov
sub
fsubl
test
insb
scas
or
xchg
lcall
in
lds
sub
daa
pop
cmp
psubusb
outsb
incl
inc
popf
jnp
outsl
dec
push
and
mov
pop
mov
push
jmp
sbb
xchg
mov
push
push
xchg
xor
int
or
xlat
lock
int
out
mov
lcall
push
adc
and
add
in
es
sub
dec
sbb
sti
sbb
jns
int3
jns
or
dec
jecxz
scas
in
enter
fsubp
out
js
xor
cmp
inc
cmp
arpl
aam
inc
test
dec
adc
inc
mov
pop
xchg
fstps
jge
call
mov
inc
popf
insl
addr16
fsubs
pop
pop
cld
mov
sbb
idivl
push
sub
cmc
adc
lods
mov
popa
cmp
and
leave
test
std
sub
or
repz
push
sbb
mov
aam
xchg
clc
ret
pop
sbb
insl
jnp
pop
ss
adc
or
mov
aad
xchg
and
adc
pop
test
cmp
ljmp
mov
pop
out
mov
jne
out
add
std
or
inc
cmp
sub
mov
mov
pop
cld
jns
sub
pop
in
mov
lds
out
scas
xchg
adc
jg
lods
aas
or
jns
sub
rcll
cmp
pop
jl
imul
test
push
sbb
xchg
adc
clc
je
sbb
inc
pop
xchg
insl
popf
addr16
stc
lahf
xor
pushf
movsb
imul
bnd
ljmp
and
cmp
jecxz
inc
or
mov
add
push
mov
mov
stos
or
push
js
mov
mov
popl
stc
inc
out
outsb
xchg
fstpt
cmc
add
lret
enter
inc
popf
adc
adc
adc
inc
sub
fildll
sub
pop
push
xor
mov
mov
nop
push
sbb
loopne
jo
fxch
arpl
idiv
push
mov
insb
icebp
pop
and
mov
data16
outsb
dec
and
cmpsb
adc
inc
int3
add
sub
popa
scas
xchg
jb
cs
int3
dec
jae
fcoml
push
xchg
sub
jge
cmpsl
out
sub
mov
pop
scas
add
aam
imul
loope
cmpsb
lods
test
add
jno
sbb
mov
sbb
fwait
cmp
jnp
movsb
jp
push
sbb
inc
mov
jg
das
adc
stos
dec
sbb
mov
lods
and
imul
pop
lods
pop
lds
out
xchg
shlb
jb
pop
adc
jle
inc
sub
jecxz
and
pop
xchg
and
xchg
or
xchg
push
int3
mov
jg
repnz
adc
in
mov
rorl
add
test
out
add
or
sub
insb
cli
sub
jb
or
push
and
dec
pop
inc
dec
scas
rolb
xlat
ja
popa
or
mov
in
in
pop
jne
fs
jb
dec
fcmovnu
out
leave
ds
lret
dec
push
ja
fsubrl
mov
inc
mov
cltd
pop
mov
call
outsb
dec
jns
imul
xchg
sahf
aaa
loope
push
fadds
mov
xor
dec
pop
out
or
sub
das
and
xor
lret
in
push
stos
fcmovnbe
outsb
push
fnstsw
call
push
jmp
ljmp
call
add
sub
xorl
rcrl
les
xchg
xor
loopne
pop
inc
dec
mov
lods
push
test
not
lret
sub
sbb
insl
xor
outsl
int3
push
lds
cmp
or
mov
dec
push
jns
push
jp
inc
insb
add
je
mov
mov
sahf
lahf
mov
jp
or
and
lret
add
adc
lock
cmp
stos
cmp
adc
mov
stos
jno
iret
or
rcll
cmpb
div
je
int
imulb
fnstsw
push
push
pop
lret
sarl
xor
popf
add
push
popf
imul
lret
lret
test
out
push
adc
bound
imul
adc
mov
cmp
jnp
add
lea
cmpsl
and
and
sub
icebp
loopne
adc
inc
jmp
mov
sub
mov
dec
subl
jb
sub
jbe
jge
sub
mov
leave
rorl
ficoms
lods
jbe
cs
jo
fidivl
xchg
dec
cmp
pop
pop
mov
dec
dec
std
sub
test
pushf
repz
adc
aaa
push
and
les
jecxz
xchg
mov
jmp
xlat
and
jecxz
bound
aad
add
jne
ja
push
cmp
or
sbb
scas
jp
add
xchg
sbb
xor
or
add
cmp
rcrb
push
clc
jp
cld
adc
insb
jmp
adc
sub
jns
in
fneni(8087
lods
pusha
inc
icebp
xchg
js
xor
mov
pop
call
jb
test
out
add
stc
adc
inc
pop
jg
mov
dec
das
sub
jbe
mov
cmp
jp
imul
out
lret
arpl
inc
pop
pushl
mov
scas
mov
out
fsubp
mov
int3
pop
call
add
stc
in
hlt
add
add
fnstsw
pop
xor
addr16
mov
mov
out
inc
jle
and
lock
stc
mov
push
in
mov
mov
aaa
ret
loope
adc
imul
jg
mov
lret
push
pop
mov
ret
movsl
push
sahf
xor
dec
icebp
mov
add
pop
jp
bound
or
mov
dec
pop
xchg
gs
or
fldenv
mov
inc
insb
lcall
enter
js
imul
cli
xchg
push
enter
fmul
cmp
lea
jae
push
and
add
ja
sbb
int3
push
iret
stc
sti
addl
leave
imul
pop
filds
scas
cmpsb
arpl
mov
push
ljmp
add
int
aas
dec
aaa
insl
cld
mov
pop
mov
adc
cld
and
insb
out
sbbb
push
add
push
andb
add
cmpb
add
push
ja
and
shll
xchg
imul
notb
int3
js
mov
movsb
jp
mov
mov
sub
pusha
push
lods
loope
mov
shl
sbb
lds
xchg
rclb
mov
maxps
dec
fstpl
or
inc
push
mov
mov
pop
jbe
cli
test
sub
xor
call
or
pop
sbb
inc
pop
cmp
les
lret
push
cmpsb
dec
das
or
insb
sti
and
adc
xor
mov
push
mov
xor
rorl
int
xchg
sbbb
pusha
stos
rep
xor
stos
iret
sub
xor
repz
xchg
rcl
ds
shlb
mov
cs
push
xchg
mov
mov
nop
std
pop
sub
orl
adc
mov
mov
xchg
out
sarb
push
into
mov
lret
xchg
adc
add
lcall
outsl
jl
mov
outsb
cltd
inc
or
ss
outsl
jmp
push
fsts
fbld
aam
push
xor
jecxz
bound
inc
dec
push
addr16
jae
sti
movb
or
and
sarl
mov
push
push
xor
xchg
add
stc
loop
pop
mov
sub
popa
dec
loope
cli
push
loop
push
leave
mov
inc
in
in
shlb
xor
jge
mov
frstor
jl
lahf
cmp
mov
or
shr
pop
cwtl
sbb
and
cld
pop
into
push
stc
arpl
push
xchg
in
orps
in
cli
sbb
out
or
add
fnstcw
lahf
das
dec
outsl
sub
push
arpl
pop
repz
call
movsb
xchg
add
mov
jecxz
repz
sub
and
aaa
xor
jno
lea
and
xlat
popa
lret
bound
dec
jae
pop
sbb
or
xchg
mov
das
sub
popf
daa
cmp
enter
out
imul
mov
cs
mov
jns
pop
jge
mulb
mov
fcoms
xorb
adc
push
xor
dec
mov
rcrl
jp
rclb
jecxz
jp
pop
inc
outsl
jp
fucomp
insb
jmp
jge
push
stos
cld
leave
mov
fidivs
pushf
inc
lods
dec
ljmp
jne
dec
or
fdivp
xchg
xor
out
inc
icebp
jbe
cld
fsubrs
leave
adc
iret
fsubrs
ret
push
push
push
or
shl
pop
add
enter
push
scas
mov
xor
jg
sub
xor
xor
scas
cmp
sbb
dec
fsubrl
test
jnp
cmc
int3
push
mov
sti
cmp
fs
mov
sahf
jmp
or
mov
call
jmp
out
xchg
mov
adcl
jl
addr16
jmp
cmp
xor
test
fstpt
push
ficoms
push
sub
popf
ret
cmp
leave
add
mov
mov
icebp
mov
je
fsubrs
jmp
or
cli
and
adc
imul
sti
dec
cs
and
add
pushf
cld
push
inc
adc
push
popf
insl
inc
dec
push
mov
test
loope
ljmp
jo
mov
xchg
sahf
sub
test
jge
std
lahf
push
movsb
push
jbe
dec
mov
push
push
xchg
or
mov
test
aam
cld
jae
sbb
dec
jge
jp
je
hlt
mov
lcall
imul
shll
pop
insl
xchg
sub
frstor
rolb
fstps
fcoml
mov
push
xchg
sub
test
xor
out
sub
lea
sbb
add
and
cwtl
push
ljmp
cmp
mov
loop
jne
fcoms
pop
andl
stos
add
and
in
js
mov
ljmp
xor
push
xchg
inc
add
pop
and
cmpsl
sbb
or
ror
lcall
addr16
mov
adc
out
sub
arpl
mov
std
xor
lods
or
cli
ficoms
push
pop
inc
pop
mov
dec
ret
mov
data16
loope
inc
movsl
enter
lods
sahf
lds
xor
stos
pop
arpl
mov
cs
stos
test
and
xor
adc
nop
into
push
add
dec
jno
sub
rorl
mov
test
push
ljmp
fcompl
pop
sub
in
es
lock
mov
sub
hlt
push
add
mov
insb
scas
sahf
mov
aaa
leave
mov
or
cmpsl
fisttpll
movsl
and
or
iret
jns
xchg
sti
xchg
ret
mov
jae
inc
pusha
jecxz
je
testl
or
inc
sbb
push
cwtl
pop
jecxz
adc
push
pop
jb
mov
jb
push
mov
outsb
out
in
fldenv
push
push
push
push
shrl
repz
xor
xor
xor
push
add
xchg
mov
mov
sbb
scas
xchg
xlat
in
mov
lcall
mov
mov
sbb
inc
sub
mov
xchg
or
cmpl
out
mov
cs
hlt
adc
add
push
lcall
lods
push
stos
and
and
pop
push
pushf
fnstenv
mov
aas
inc
or
sahf
sti
or
and
dec
mov
dec
testl
xchg
sbbl
cltd
cld
stc
sbb
lret
adc
pop
adc
push
rcrl
adc
decl
into
cltd
jnp
push
push
test
movsl
push
dec
and
xchg
mov
shlb
out
rol
sbb
mov
lret
xchg
aad
sbb
push
jb
cmpl
pop
out
imul
aas
xor
jnp
cmp
enter
and
sub
cli
mulb
cmc
pop
test
and
lea
cmp
scas
xor
jecxz
int3
jge
push
cmp
sahf
mov
jnp
mov
into
xchg
inc
sbb
push
fbld
adc
cli
pop
push
sbb
xlat
and
pop
or
loop
jmp
lcall
inc
in
out
mov
leave
into
mov
xchg
ret
pop
shll
mov
push
inc
mov
test
movsl
std
jae
jmp
cli
mov
sub
fistps
inc
adc
dec
jb
das
xor
jmp
cltd
mov
icebp
mov
mov
mov
and
and
popf
in
out
loop
jp
mov
rorb
sti
outsl
or
cmp
mov
xchg
jnp
or
sbb
dec
xchg
out
js
dec
pop
insl
xchg
repz
shrb
mov
pop
cwtl
ljmp
addr16
rol
xorl
lahf
loopne
dec
scas
mov
dec
lea
es
test
and
mov
loope
inc
jmp
add
sbb
fwait
lret
sbb
pop
mov
scas
dec
add
aas
sbb
jb
iret
lds
cld
lds
mov
cmp
mov
aaa
sub
shlb
lcall
xor
xor
inc
ret
or
and
add
xchg
add
xor
in
fmuls
ficoml
cmp
xchg
inc
or
cmp
arpl
aas
push
mov
paddusb
aad
jl
pop
popf
sub
mov
jl
loop
cmp
out
push
enter
pushf
xchg
xchg
push
addl
clc
add
mov
adc
xchg
dec
pop
xchg
dec
sbb
adc
lret
les
aaa
add
push
lret
sbb
sahf
mov
or
cmp
hlt
mull
sbb
xchg
int
daa
jg
mov
xchg
or
ja
add
add
mov
fistl
pop
mov
cld
scas
cwtl
mov
ret
popa
adcl
mov
icebp
sbb
xchg
repz
and
or
sub
repnz
clc
nop
shll
push
jbe
and
lret
pop
imul
add
lahf
adc
push
sub
cmc
jge
test
outsb
fcmovnu
cmpsl
push
addr16
and
andb
push
cmp
sub
mov
sbb
sub
push
lds
add
pop
ret
out
pop
testl
in
ds
add
andl
lahf
test
sbb
popf
inc
iret
fsubrl
xor
pushl
xchg
and
dec
into
enter
les
adc
les
adc
test
inc
dec
fmuls
mov
icebp
leave
push
gs
ds
xor
sti
adc
sub
test
lret
mov
mov
mov
dec
cmc
out
pushf
das
add
or
cli
lds
pusha
enter
cmp
clc
inc
mov
sub
aaa
fs
dec
test
jne
sti
mov
mov
dec
inc
xchg
pusha
inc
mov
inc
cmp
std
cmpsb
or
imul
xchg
ja
filds
xchg
shll
xor
ret
es
cmpsb
sub
pop
jg
in
pop
fstpl
inc
loop
hlt
pop
sub
bound
pushf
push
fs
mov
ret
or
jle
push
push
sub
mov
loopne
pop
cmc
lcall
add
cmc
add
cltd
ss
mov
dec
cltd
fisttps
insl
mov
hlt
test
ja
mov
dec
or
cmp
sti
enter
ljmp
xor
xor
dec
idivl
incl
pop
or
pop
and
adc
imul
scas
shlb
inc
ljmp
ja
mov
push
or
lret
ljmp
xor
ljmp
jnp
dec
pop
imul
aas
int
insb
outsl
push
shlb
out
jne
outsb
stos
mov
adc
fcoml
adc
pushl
mov
daa
sbb
xrelease
sub
and
lahf
add
js
mov
dec
jl
ja
enter
cmp
lods
decb
test
mov
ja
arpl
mov
add
xor
aas
inc
fnstsw
xlat
cwtl
lret
lock
jp
push
cmpsl
aam
adc
jge
add
mov
or
dec
popf
xchg
inc
clc
xor
call
test
lods
jno
xchg
cmp
dec
stc
cmpsb
xor
mov
push
fisubrl
ss
push
mov
mov
inc
mov
jae
jae
int
xlat
ss
mov
and
call
aaa
inc
scas
sbb
fucomip
ss
add
out
xchg
xchg
xor
adc
jge
dec
popf
int
pop
mov
pop
xor
sub
sub
imul
es
mov
int3
mov
bound
xor
add
xchg
cmpb
or
push
xchg
cmp
add
mov
jmp
pop
int
push
or
jb
mov
les
cli
fistpl
dec
arpl
dec
fbld
pop
jae
xlat
pop
pop
loope
aam
xchg
mov
enter
lds
mov
lea
daa
aad
sbb
push
and
push
dec
pop
mov
jl
sarl
popf
dec
enter
or
adc
loope
inc
sbb
or
fimuls
call
imul
cltd
sbbl
imul
and
xchg
sub
insb
xchg
pop
int
push
pop
imul
jae
outsb
test
call
jnp
mov
cmpsl
or
jbe
mov
jno
loopne
push
sub
inc
iret
push
jge
cmp
lods
sub
dec
xor
add
add
jl
cmp
fsubrp
mov
in
loopne
xchg
insb
ss
jno
mov
add
repnz
addr16
insl
lcall
and
js
lods
dec
rclb
xchg
xchg
inc
jmp
int
xchg
addr16
les
scas
inc
mov
xlat
dec
cld
daa
insl
and
in
inc
out
mov
int3
adc
aad
mov
push
pop
imul
ret
push
bound
mov
stc
add
fiadds
out
cmc
jb
xchg
fsubrl
enter
mov
mov
enter
ss
hlt
stos
test
mov
clc
jge
xor
adcb
shl
and
rclb
sbb
aas
jb,pn
stos
sub
xor
popf
adc
jae
sub
pop
loope
add
icebp
and
fwait
add
fnsave
cmpsb
into
test
mov
push
clc
xchg
mov
out
and
xchg
ficoml
xchg
mov
or
and
jmp
lcall
insl
pop
adc
popf
xchg
dec
xor
ja
pop
pop
push
scas
rol
imul
pop
js
roll
aad
cmpsb
sti
push
xchg
sub
adc
sub
nop
cmp
xor
pop
mov
adc
stos
cld
icebp
xchg
add
mulb
push
mov
in
pop
or
fcmovb
mov
inc
and
pop
dec
test
push
gs
ret
mov
or
xor
cs
fistpll
pop
repz
pop
xchg
pusha
scas
test
int
mov
ret
lahf
inc
add
and
insb
xor
popa
ds
mov
mov
test
cmp
xchg
sarl
popa
push
push
adc
popa
add
mov
pop
or
adc
jge
mov
xor
in
js
leave
mov
pop
int
mov
clc
andb
fmuls
fiaddl
pushf
fisubrs
scas
out
ljmp
scas
push
add
je
cmp
maxps
lahf
lea
push
jne
inc
cs
or
sbb
mov
mov
push
adc
pop
pop
std
je
lahf
inc
jb
fsubrp
push
and
xor
inc
fs
movsl
call
and
sbb
inc
cld
jge
stc
icebp
xchg
cmpb
roll
jne
ljmp
ficompl
stc
int3
lret
or
ja
das
pop
sti
ja
nop
mov
pushf
insl
sub
daa
sbbb
inc
pop
cmp
cmp
fs
adc
jecxz
test
mov
cmpl
loopne
icebp
outsb
std
sub
ss
fs
push
movsb
divl
js
or
mov
xchg
mov
mov
and
ja
inc
xchg
add
aam
fimuls
jns
lcall
adc
les
xchg
arpl
dec
pop
dec
in
mov
cmc
xchg
pushf
jo
clc
lea
jle
adc
dec
je,pn
dec
jne
cmpsl
subl
mov
ljmp
cltd
mov
bound
cmpsb
add
jecxz
in
stc
test
je
les
mov
mov
and
xor
notb
addr16
in
inc
jno
push
inc
sub
stc
repz
mov
pop
aad
lret
push
sbb
cwtl
add
dec
pop
mov
or
cmpsb
mov
cli
stos
inc
sub
pushf
dec
popf
sub
lea
mov
xor
pop
dec
mov
incw
int3
movsl
icebp
fistl
jnp
popa
adc
shlb
or
push
hlt
xor
mov
fsubs
jle
mov
pop
ds
fimull
cmp
inc
fwait
sub
mov
mov
ds
sub
outsl
pop
int3
les
stc
inc
out
insl
mov
mov
jmp
adc
jg
add
push
mov
out
xchg
jl
push
cmp
inc
imul
xchg
jp
negl
lods
adc
addr16
fisttpl
ds
dec
pop
mov
mov
push
jbe
adc
mov
lcall
push
cs
xchg
inc
and
jo
inc
mov
dec
xor
stc
movsb
loopne
push
popf
add
jbe
inc
adc
scas
ja
loopne
mov
out
aas
hlt
iret
in
inc
or
insb
adc
push
cmp
or
fnsave
pop
int3
xchg
out
pop
movsb
mov
and
aaa
and
inc
sub
mov
mov
and
sbb
out
sub
es
in
inc
mov
stos
shl
ds
dec
in
pushf
and
cld
xchg
sbb
lea
sbb
mov
push
popa
mov
xchg
imul
cltd
mov
nop
mov
xchg
push
jl
dec
dec
mov
sub
inc
or
int3
pop
push
xor
pop
push
pop
xor
mov
sbb
or
push
call
cmpl
push
mov
jle
shlb
xchg
adc
mov
fimull
xchg
inc
jmp
pop
mov
fistpll
lods
jl
lock
mov
nop
cmp
and
and
daa
add
enter
add
cs
mov
adc
in
push
sbb
cli
outsb
outsb
je
daa
mov
add
imul
push
inc
lahf
int
jbe
mov
fimuls
dec
pop
ja
scas
mov
jge
dec
test
pop
xchg
ret
ret
pop
mov
sub
xchg
test
dec
cmpsb
push
push
push
add
push
test
out
leave
adc
nop
mov
dec
dec
push
jne
nop
loope
jae
pop
aas
ljmp
cmp
test
fwait
sub
testb
xchg
mov
and
adc
pop
addr16
xor
push
mov
repz
push
cmc
dec
xchg
adc
mov
cvtpi2ps
rorb
test
das
add
into
mov
ds
xchg
rcl
sahf
rol
jb
adcb
aaa
cmpsb
loopne
insb
in
fimuls
mov
insb
sbb
lock
movsb
stos
inc
cwtl
bound
gs
popa
popf
cmp
inc
pop
add
sub
fwait
std
fcoms
lcall
add
pop
bound
ss
icebp
cmp
fildll
cmc
fisttps
push
js
sub
jl
or
push
dec
fstps
pushf
nop
or
in
dec
lods
out
iret
dec
lods
inc
add
data16
fcoms
mov
mov
int
or
push
es
add
jge
xchg
pop
sub
les
cltd
cmp
mov
cld
xor
mov
xor
push
and
xchg
pushf
arpl
out
setb
mov
ss
insl
push
ror
push
jb
loopne
test
or
dec
outsb
in
jle
in
jne
mov
inc
xchg
mov
int
mov
fstps
xchg
subl
aaa
and
xchg
test
push
cmp
xchg
pop
and
sbb
lcall
or
cmp
mov
insl
faddl
aad
pop
sub
mov
notl
or
pop
cmp
ret
pop
mov
cmp
fistl
lret
ret
mov
mov
sbb
fabs
mov
adc
test
lea
mov
mov
push
notl
push
ds
shll
ljmp
cmp
sbb
xchg
mov
xchg
xchg
mov
mov
repz
cld
lds
and
flds
repnz
cmp
imul
popa
into
pop
sub
fistpll
out
push
ss
jecxz
pop
test
adc
cmp
aaa
iret
mov
pop
nop
lods
push
imull
push
jg
and
out
in
lret
daa
add
mov
out
dec
adc
pop
xor
jp
xor
sbb
dec
orl
jecxz
mov
fcmove
scas
xchg
insb
dec
sub
orb
ficoml
pop
jle
in
fstps
jecxz
sub
lods
rol
and
pop
sub
out
arpl
push
push
call
gs
hlt
xor
andb
pop
sahf
enter
inc
mov
in
lcall
iret
lea
popa
ljmp
jge
clc
pop
call
mov
and
popf
stc
shlb
push
pop
sahf
cwtl
fwait
cs
jl
sub
popf
sub
int
or
jg
loopne
js
f2xm1
dec
xchg
push
sti
push
pop
lcall
mov
adc
imulb
mov
jmp
es
sbb
sahf
xor
xor
out
dec
fcmovne
mov
enter
pop
es
mov
testl
dec
nop
and
mov
movsl
mov
mov
incl
insl
xchg
jo
push
into
adc
xchg
pop
test
xor
sub
dec
loopne
imul
sub
subl
mov
xchg
loope
add
cmp
loopne
mov
popf
pop
ficoml
xlat
push
inc
xchg
sbb
xchg
push
mov
mov
insb
repz
fistl
addl
xchg
lret
sbb
jecxz
leave
sbb
mov
cltd
dec
test
mov
and
xchg
aas
addr16
ja
add
inc
inc
jbe
jb
icebp
mov
push
pop
mov
rorl
stos
mov
add
sub
adc
mov
nop
fsubr
sahf
outsb
jle
scas
dec
andb
push
fprem
xchg
jne
xchg
and
dec
mov
lods
into
aam
add
xchg
inc
xor
or
mov
mov
fdivp
and
arpl
aam
jp
xor
test
mov
adc
ret
frstor
xor
dec
stos
push
pop
data16
sub
jp
and
lret
mov
xchg
cmp
int3
popl
fidivl
insl
sub
out
jnp
dec
pop
icebp
in
mov
stc
popa
fmul
mov
push
push
jns
aam
and
pop
push
decb
pop
sub
jmp
xchg
inc
mov
inc
push
mov
out
xorb
scas
mov
fsts
push
add
cmpsl
jmp
sub
push
mov
and
cmp
daa
lret
loope
into
outsb
je
stc
pop
xchg
lret
sahf
mov
aam
jge
addr16
cwtl
ja
jns
movsl
loopne
inc
inc
dec
dec
js
ret
roll
pop
in
rol
add
xor
dec
in
stos
jp
mov
adc
sub
call
inc
push
adc
dec
push
jne
arpl
and
xor
mov
xchg
jno
in
adc
sbb
add
sbb
adc
mov
subb
int
mov
pop
enter
adc
push
xlat
in
ret
xor
test
sti
lock
movsl
loopne
or
int3
inc
add
fdivl
or
das
inc
sbb
adc
sbb
add
adc
mov
push
call
idivl
leave
xor
push
mov
insb
pop
xorb
std
cltd
incl
scas
push
int
inc
pop
and
imul
add
xor
outsl
ss
je
xor
lret
aam
fildll
dec
sti
cmp
loope
mov
mov
enter
arpl
iret
xchg
inc
cmp
xchg
or
jae
lods
xchg
jmp
jno
jp
fisubrl
mov
pop
insb
jo
mov
imul
test
jp
mov
xor
xor
push
cltd
flds
or
pop
scas
repz
cltd
sub
mov
popf
push
jg
push
sbb
mov
cmpsb
mov
cmc
push
or
mov
ljmp
ja
andb
xlat
test
push
mov
sub
jb
pop
sbb
xchg
fucomi
cmpsb
imull
hlt
insb
jbe
xchg
xchg
and
shrb
lcall
mov
repz
inc
fstl
mov
push
or
scas
icebp
push
sub
and
push
push
ror
mov
dec
enter
aas
outsl
xor
push
js
inc
adc
cmp
lcall
jb
mov
popf
adc
adc
and
std
sbb
int3
cs
xchg
mov
aas
add
jle
dec
stc
mov
outsb
iret
mov
repz
mov
push
jge
mov
push
aaa
pop
addl
inc
cmp
xchg
jae
iret
leave
pavgw
dec
pop
mov
orb
imul
pushf
jbe
daa
fwait
jp
popf
or
push
dec
int3
sub
jmp
shrl
and
je
pop
push
mov
sbb
adc
mov
xchg
std
jmp
cmp
pop
push
sub
mov
dec
aaa
inc
mov
pop
sub
nop
or
mov
mov
push
pop
addr16
std
cltd
or
dec
scas
xchg
jle
sbb
mov
sub
mov
and
cmp
cmp
stc
jb
mov
push
jp
js
add
dec
cs
lock
les
stos
inc
pop
lods
in
mov
adc
out
stc
mul
into
shll
pop
pop
enter
cltd
scas
and
scas
dec
pop
rol
fstl
popl
or
pop
rep
repz
fildll
in
movsb
imul
lock
stc
jp
cli
sti
xchg
dec
hlt
mov
test
xchg
jb
jo
out
nop
lahf
xchg
add
add
fwait
push
and
mov
out
ja
mov
clc
push
pop
fadds
push
je
jp
mov
pop
outsb
cmp
mov
ret
push
xchg
sbb
imull
pushf
insl
push
subl
or
sub
and
sbb
das
jg
ret
popa
andl
pop
pop
push
pop
je
int
pushf
and
jle
gs
cmc
cli
dec
pop
inc
fcmovu
in
adc
scas
sub
xchg
jg
mov
push
iret
xchg
push
insl
mov
stc
bound
sub
cmp
mov
iret
cli
xchg
rcrw
adc
iret
ss
jno
mov
in
mov
xchg
fisubs
dec
fisubrs
inc
iret
and
xor
mov
lahf
adc
scas
xor
loope
lea
adc
xlat
test
leave
pop
outsl
lret
into
mov
std
fbld
out
cmpsl
aam
mov
lds
es
adc
pop
jge
xchg
das
push
out
sbb
cmp
adc
add
xchg
xchg
push
repz
test
jne
mov
dec
loope
xchg
sahf
repnz
dec
and
cltd
sbb
or
and
cmp
mov
and
inc
leave
adc
dec
pmulhuw
or
fwait
lods
pop
xchg
push
pop
push
out
mov
and
scas
lea
pusha
shrl
xchg
xchg
adc
addr16
inc
jecxz
repnz
cld
sub
sbb
loopne
jl
gs
ret
push
fadds
sbb
xchg
xor
insl
mov
aad
adc
dec
les
push
rcrb
in
gs
push
rorl
and
sbb
mov
push
aad
ja
jno
andl
or
dec
mov
aas
pop
loope
dec
mov
fcmovnb
aad
inc
jo
out
data16
inc
add
fistl
cmp
rcrl
subl
inc
out
jnp
fcmovnb
movsl
mov
adc
outsl
mov
lods
jg
rorb
test
mov
xchg
lds
pop
in
xlat
mov
push
jge
jecxz
mov
mov
addr16
imull
scas
repnz
popf
cmp
arpl
cltd
aas
inc
pop
stc
popa
adc
inc
lds
in
daa
fisubrs
negb
mov
les
cmp
push
stc
fsubr
xchg
test
and
rcrl
or
lds
push
add
out
inc
insl
xstore-rng
cmpsl
inc
and
rolb
frstor
xchg
test
dec
shlb
enter
aaa
addr16
repz
lcall
push
mov
mov
int
fadds
push
mov
cmp
cmp
ja
mov
dec
and
mov
test
imul
pop
jb
shl
xchg
push
roll
int3
lods
sub
or
add
js
mov
or
pop
ja
mov
xchg
mov
int3
jl
lcall
and
std
sub
gs
ja
jbe
inc
test
or
lods
jecxz
in
push
inc
mov
xchg
xchg
xchg
scas
out
sbb
loopne
test
xor
dec
and
add
inc
ret
dec
jno
mov
mov
mov
mov
sbb
push
fisubrs
cmp
jmp
fnsave
enter
icebp
xchg
mov
das
aad
jecxz
repnz
pop
shll
fs
mov
je
push
mov
sbb
mov
dec
fsubrl
mov
lahf
jp
jge
add
or
push
pop
ficoms
cmp
fs
test
sub
pop
int
and
cs
inc
mov
add
inc
pushf
in
mov
nop
dec
dec
imul
pop
push
aad
jl
mov
push
push
sbb
incb
addr16
rcrl
cmp
loope
enter
mov
inc
cmpsb
dec
jecxz
xchg
xchg
lds
pop
xchg
jbe
sbb
inc
lods
dec
in
in
in
fnsave
push
sub
pop
sbb
xchg
push
movsl
pop
not
ljmp
jecxz
jns
cmp
ret
mov
ja
mov
pop
test
testb
je
orl
pop
cmc
or
out
fdivrl
aas
in
pop
jb
inc
es
cmpsl
push
scas
mov
mov
mov
and
or
dec
mov
dec
gs
test
sbb
pop
cs
aam
rcll
out
mov
dec
mov
add
pop
or
int
outsb
pop
sbb
loopne
arpl
stos
lods
jl
out
xchg
mov
cmp
loop
es
jbe
arpl
call
stos
mov
inc
pusha
adc
sub
adc
sub
cmc
aaa
sbb
push
or
divl
fnstcw
pop
loop
dec
adc
imul
stc
mov
jge
lock
inc
pusha
adc
loopne
xchg
mul
mov
jle
in
loop
out
or
xchg
nop
out
push
in
enter
mov
popa
clc
add
adc
and
and
pop
in
jne
imul
dec
adc
std
and
push
int
push
mov
push
inc
sbb
scas
xor
jae
out
pop
in
aad
xor
add
sub
pop
push
cmpsb
cmp
inc
add
pop
rolb
add
sbb
mov
sti
cld
and
push
xor
idivl
adc
jge
mov
sub
mov
scas
jmp
cwtl
aaa
and
add
push
push
inc
or
and
sar
push
lret
mov
pop
in
stc
out
pop
fidivs
dec
inc
add
sarb
mov
push
adc
push
jmp
sub
js
cmp
mov
pop
aas
inc
sub
insl
inc
push
lock
in
jns
dec
test
movsl
mov
pop
ljmp
sub
add
jmp
dec
pop
ss
mov
jnp
jnp
jns
mov
lret
jb
scas
mov
enter
xor
inc
add
ljmp
out
sbb
sbb
addr16
loop
iret
pusha
aas
lods
and
push
jns
movsl
jecxz
sub
xchg
xrelease
enter
outsl
bound
push
testb
repnz
leave
and
iret
outsb
imul
in
push
cmp
sbb
and
aam
ja
and
loop
jl
fcmovu
adc
addr16
inc
sbb
aaa
cmpsl
hlt
jns
fcoml
pushf
xchg
dec
jns
add
cli
stos
mov
pop
xor
lock
xor
push
loope
adc
mov
fcmove
push
push
xchg
or
enter
adcl
cmpsl
orb
fidivs
dec
fst
or
xor
movsl
push
inc
mov
mov
div
mov
iret
cwtl
push
nop
and
and
xchg
adc
pop
mov
nop
adc
sbb
lods
daa
or
mov
add
mov
loope
aad
mov
fmul
hlt
sbb
fistpll
inc
cvtpi2ps
push
push
xchg
mov
or
fisubl
push
dec
bound
aaa
out
adc
imul
mov
push
popa
xchg
sarb
sub
movsb
jne
mov
loop
pop
mov
xor
add
mov
cmpsl
rcll
enter
and
out
mov
sub
pop
rorl
pop
lret
cwtl
jne
or
inc
cmp
das
in
push
aad
mov
mov
jecxz
push
ja
or
mov
bound
add
sbb
js
bound
push
push
push
lock
or
adc
mov
or
dec
and
mov
outsb
into
shrb
xor
jb
or
xchg
imul
xchg
fstps
imul
cmp
jge
pop
dec
enter
cmp
cmc
aas
xchg
aam
std
jg
pop
mov
mov
inc
sub
xchg
outsl
leave
call
dec
cmp
mov
mov
leave
jnp
outsl
xlat
cmp
lods
jg
stos
sahf
push
das
iret
testb
inc
mov
rcr
lea
mov
jne
out
mov
or
push
cmp
ret
mov
psubb
push
mov
jg
das
andb
jno
cmc
or
mov
and
pop
bound
mov
outsb
call
jp
and
aas
xchg
push
mov
repz
xchg
and
in
sahf
fs
push
sbb
sbb
inc
push
sbb
dec
lods
pushf
jmp
add
push
cs
pop
repnz
repz
jle
xchg
inc
mov
sub
mov
sub
xchg
and
lahf
insb
cmp
into
adc
push
push
adc
xchg
repz
mov
in
out
add
stc
mov
or
or
roll
and
cs
loope
jg
cwtl
frstor
push
out
jne
fdivrl
stc
dec
repnz
ss
nop
xchg
or
mov
nop
sahf
enter
cmc
add
pop
decl
push
xchg
movsb
or
mov
rclb
rcrl
ret
repnz
cmc
dec
mov
lods
stos
adc
pop
std
add
pop
ja
xor
push
xor
or
gs
mov
dec
mov
cmp
scas
adc
jne
inc
sub
cmp
imul
ljmp
xor
aas
add
pop
jg
sbb
lret
mov
cmpsb
lret
and
add
lret
fisttps
clc
mov
mov
rcll
popa
testl
lret
addr16
ds
in
inc
loopne
fsubl
aaa
popf
cmp
xor
aas
sti
adc
jle
push
inc
adc
or
pop
outsl
pop
sub
lret
hlt
cmc
inc
pop
and
mov
xchg
in
dec
clc
mov
mov
add
mov
push
cld
in
gs
push
adc
mov
lock
pop
mov
ret
xchg
faddl
cs
mov
das
std
xor
push
xchg
out
sbb
xor
fwait
cli
sbb
jl
mov
aam
sbb
xor
test
adc
mov
xor
xchg
cmp
pop
mov
xor
mov
scas
dec
mov
push
subl
inc
out
xchg
xor
cltd
push
sbb
lcall
inc
movsb
xchg
add
or
daa
lcall
cmp
sbb
pop
mov
sbb
xchg
popf
popf
mov
hlt
sti
xlat
and
ljmp
push
dec
push
shr
mov
dec
popf
pushl
pop
fs
cmc
sub
cwtl
xor
subl
jo
mov
push
inc
dec
add
fidivrl
sub
ja
adcl
or
mov
cwtl
pop
push
mov
sarl
jg
xor
inc
add
cwtl
mov
les
or
fs
fnstcw
mov
cld
dec
push
pushf
jecxz
mov
inc
xchg
jecxz
sarb
xchg
pop
adc
mov
sbb
sbb
xor
jecxz
sub
push
mov
mov
dec
cmp
lcall
adc
push
shl
mov
fimuls
push
fcompp
cmpsl
jne
jle
icebp
xor
ja
mov
lret
popf
stos
lret
mov
mov
icebp
push
push
and
stos
loop
negl
and
enter
pusha
push
in
cmp
test
ds
aas
sub
and
and
mov
cld
jnp
push
sahf
mov
les
and
in
pop
test
and
sti
daa
push
jns
xchg
mov
add
imul
sbb
push
in
icebp
lock
test
int
decl
fidivrs
push
or
insl
sub
mov
mov
movsl
adc
jg
sub
xor
cmc
nop
cmp
pop
mov
lahf
mov
or
shrl
loopne
pusha
xor
push
add
in
pop
or
mov
pop
movsb
mov
icebp
movsl
jb
inc
mov
hlt
cli
xor
daa
cli
adc
sub
adc
pop
popa
push
cmpsb
pop
cmp
outsl
xchg
repnz
arpl
add
mov
hlt
push
pop
fildl
addr16
leave
lret
icebp
xchg
jo
and
int3
cmpsl
cmp
fdivs
adc
aaa
stc
popa
mov
pop
xlat
icebp
inc
lods
aaa
loope
push
ficomps
sarl
sbb
subb
dec
mov
mov
xchg
cmp
jne
clc
inc
fimull
adc
cs
sbb
cmpsb
mov
std
adc
jl
hlt
jae
push
jno
cmp
cmp
rcrl
fcoms
xchg
xchg
insb
std
push
xchg
jbe
sbb
push
aas
mov
xor
jnp
add
aas
add
inc
cmp
ret
popa
mov
stc
stc
adc
jne
or
xor
adc
add
aas
loope
mull
in
xchg
adc
stos
mov
iret
mov
dec
mov
add
jbe
cltd
jno
lock
cmp
cmp
mov
movsb
mov
xor
int3
pop
push
movsl
xor
fsubr
jo
mov
pop
xor
cmovle
movsb
xlat
or
sub
jg
add
xchg
lock
sub
add
mov
flds
clc
pop
ss
lds
mov
sub
jno
adc
lcall
or
scas
adc
stos
and
cs
test
lret
adc
in
fcompl
arpl
std
xor
repnz
aas
arpl
cs
sbb
inc
js
pusha
push
pop
test
xchg
push
roll
call
adc
cmp
fadds
cmpsb
jl
mov
add
loop
test
adc
sbb
mov
dec
cmp
pop
pushf
in
fld
xor
cmp
outsl
dec
loopne
cmp
out
inc
sub
push
or
daa
inc
daa
lock
sbb
or
jae
popf
sub
mov
scas
gs
push
dec
mov
cmpsb
inc
stos
and
frstor
popf
mov
jns
dec
xchg
out
or
sbb
incl
mov
fiaddl
jns
lret
xchg
shrl
adcl
icebp
mov
cmp
fs
das
push
push
xchg
fs
push
sti
data16
xor
mov
adc
cs
nop
mov
addl
xchg
dec
shl
sbb
mov
test
cmp
sahf
in
je
sahf
lret
and
mov
and
mov
jmp
xor
or
cmpsl
inc
push
mov
test
pop
sbb
scas
out
int
cld
and
in
lcall
mov
inc
std
hlt
scas
int
sbb
cmp
stc
imul
iret
inc
stos
les
push
adc
add
inc
sbb
std
mov
lods
push
jae
jmp
rcll
cs
scas
bound
mov
cmpsl
mov
sbb
adc
cmpsb
aam
ret
push
rcll
stc
fmull
inc
sub
dec
or
pop
repnz
out
in
rorb
jp
les
dec
pop
sub
cmpsl
and
jle
out
test
xor
mov
int
cmpb
mov
jecxz
mov
xor
or
daa
ljmp
out
sahf
jp
sub
jae
pmovmskb
mov
inc
sub
aas
nop
add
cltd
ret
push
and
nop
add
pop
mov
iret
loope
xchg
movb
lret
daa
mov
lds
rclb
push
out
cmp
sbb
jae
aad
std
sub
pop
out
testb
push
int3
outsb
loop
stos
adc
loopne
mov
scas
xor
leave
test
lds
adc
mov
stos
in
fxch
shll
adc
add
out
js
and
cmp
nop
shl
ret
push
jbe
lods
out
xor
fimull
popf
cs
xchg
stos
out
fsubrs
inc
leave
adc
movsb
or
sub
or
push
add
cmp
add
daa
into
sub
cmpsl
dec
fwait
out
mov
dec
mov
int3
int3
js
pusha
hlt
js
loopne
dec
pop
push
aaa
xchg
inc
sub
test
xor
inc
in
inc
jbe
in
or
std
fldl
stc
lahf
fcmovnbe
clc
push
mov
fnstenv
pop
and
mov
pop
dec
mov
lock
in
test
mov
popa
xor
mov
push
repnz
js
xor
and
inc
mov
arpl
jae
pop
cmp
xor
daa
sub
cmp
xchg
jge
stc
xor
decl
fwait
imul
mov
push
add
or
outsb
push
es
xchg
push
mov
cs
and
cwtl
jg
cltd
cmovbe
leave
sahf
or
dec
pop
arpl
jbe
fidivrs
jmp
add
sti
es
jmp
jp
push
repz
fisttpll
arpl
out
pop
movsl
inc
mov
or
and
je
and
dec
cmp
add
sub
mov
push
shr
into
cld
dec
fidivrl
dec
push
mov
adc
push
sti
in
shlb
push
dec
xor
leave
movsl
push
inc
enter
sub
int
mov
inc
aad
pushl
popf
js
or
cli
jns
sti
sbb
repz
pop
or
jo
mov
dec
xchg
xchg
loope
jae
enter
cltd
mov
into
mov
lock
mov
pushf
push
xor
xor
push
mov
fdivs
shl
stos
jge
push
cmp
add
xchg
xor
mov
jecxz
ss
aas
scas
cmp
pop
mov
orb
aaa
or
es
sub
test
adc
sarl
clc
stos
dec
outsl
jns
fwait
cs
cltd
xchg
addb
ret
dec
shr
mov
lahf
sbb
jns
cs
std
inc
test
and
daa
sub
mov
aad
pop
or
cmpsb
sub
ficoml
xchg
mov
or
lahf
fnstsw
popa
inc
add
leave
repnz
fbld
sub
adc
shrl
or
and
movsl
sub
lahf
xor
cli
jle
adc
pop
mov
add
jmp
pop
sub
sbb
iret
lret
mov
pop
xchg
push
xchg
dec
cmp
aaa
mov
scas
ret
add
jns
in
sub
jmp
push
aas
in
dec
sarb
cmc
lods
sub
mov
pop
xchg
lcall
cltd
pusha
sahf
ret
mov
lcall
fcoml
fidivl
inc
fcoms
inc
pop
ss
into
scas
repz
fistpl
pop
out
cmp
mov
popa
rclb
dec
fnstenv
outsl
addr16
outsb
or
fmuls
push
mov
loop
xchg
test
xchg
pop
ljmp
fistps
xchg
in
cld
das
rcrl
clc
cwtl
jecxz
imul
arpl
xor
iret
mov
or
fs
mov
add
roll
jp
sbb
stc
xor
or
ss
es
mov
cmp
stos
outsl
repz
pop
sub
mov
sbb
push
sbb
mov
rcrb
out
fs
jbe
xchg
insb
fistps
cmp
lret
dec
push
mov
dec
push
leave
mov
sbb
pop
xor
dec
insb
mov
in
pop
push
pusha
lods
xchg
repnz
xor
cmp
cmp
lret
lea
cmp
dec
icebp
insb
cmp
sub
dec
pop
jo
jge
int3
pop
rorl
mov
sbb
setbe
inc
in
xor
sahf
cwtl
jge
pop
stos
mov
add
test
or
enter
and
pop
enter
mov
jg
mov
adcb
std
fcomps
je
cmp
rcr
xor
shlb
xor
adc
push
psrad
jnp
sub
adc
sub
xchg
leave
imul
daa
inc
fcomp
xchg
push
test
dec
jl
movb
rcrb
adc
cmp
scas
jmp
or
inc
cmc
lods
xor
dec
sar
loopne
mov
adc
pushf
jmp
jg
clc
pop
imul
adc
nopl
fsubl
rorb
insb
add
scas
fdecstp
xchg
lret
xchg
adc
mov
call
cmp
xchg
incl
icebp
xor
les
lods
test
xorb
out
xor
adc
in
mov
pop
out
mov
lcall
mov
lods
push
xchg
add
imul
push
mov
fistpl
dec
or
mov
xor
popa
dec
rorb
push
popa
shl
xor
mov
jg
or
or
and
rcr
js
into
cmp
das
mov
cs
push
xchg
push
sahf
js
mov
sub
cmc
pop
sti
pusha
fisubrl
andb
xchg
dec
cwtl
xchg
cmp
mov
push
cmp
iret
inc
ja
cmp
pop
pop
jno
and
loop
xor
jne
ljmp
xchg
add
insl
movsb
pop
xchg
sarb
cmp
sub
cmp
xlat
jmp
inc
sbb
cmpsb
in
jae
adc
xchg
imul
xor
aaa
adc
fs
scas
insb
loope
aam
push
out
loop
add
bound
jl
fs
cmp
push
stos
jne
pop
outsl
test
adc
push
lret
cmp
repz
nop
jl
movsl
mov
mov
ret
pop
cmp
add
push
push
sti
push
popf
dec
xorl
stos
sub
jp
insl
stos
mov
mov
mov
ficomps
mov
xor
xchg
push
stos
pop
mov
sarl
cmpb
dec
mov
push
or
mov
pushf
std
stos
xchg
jbe
in
jae
cmp
cmpsl
jae
int3
sar
outsl
cld
js
sub
imul
repz
add
cltd
dec
nop
loopne
xlat
rcl
lahf
pop
jns
lea
push
sbb
dec
insl
jnp
mov
addb
loop
xchg
inc
cmp
cwtl
dec
or
mov
push
push
xlat
jmp
ja
je
das
lds
sbb
xor
insl
or
or
mov
mov
add
mov
das
pop
aaa
pop
repz
and
pusha
pop
jl
pushf
or
or
jnp
xchg
mov
hlt
mov
adc
js
xchg
mov
jl
sub
iret
jle
sahf
xor
pop
push
sbb
fisubs
fbld
add
cmpsl
cmc
push
mov
dec
lret
mov
pop
or
add
push
sbb
aad
jne
out
movsb
mov
mov
decb
bound
sarb
push
test
lahf
and
das
mov
push
cmpsl
jns
cltd
loope
adc
dec
sub
dec
gs
cmp
arpl
or
cli
push
jns
cmp
loopne
add
sbb
adc
clc
sub
cmp
lahf
jle
aad
loop
out
xor
sbb
daa
cmp
fiaddl
add
push
jge
pminsw
cld
or
incb
in
xchg
cmp
mov
das
xlat
dec
dec
ret
scas
aad
pop
inc
xchg
or
neg
imul
scas
push
inc
dec
xchg
mov
inc
push
xchg
or
add
lods
orb
icebp
inc
jle
add
cmpsl
cmp
add
adcb
cld
insb
jo
ss
jmp
in
stos
or
jp
movl
cmpsl
nop
sbb
dec
out
jae
jns
fnsave
je
sub
outsb
stc
outsb
xchg
adc
fdivrs
xor
sti
xchg
jnp
pop
pusha
out
sbb
push
and
repz
or
and
ret
push
sbb
scas
in
pushf
fidivs
daa
mov
or
xor
mov
xor
sbb
loope
mov
sbb
jbe
dec
push
clc
mov
and
push
lcall
sub
stos
sbb
and
pusha
pop
aaa
test
add
lahf
inc
cmp
xchg
mov
repz
shlb
mov
xchg
or
popaw
dec
out
inc
enter
and
xchg
and
push
es
aas
xor
jnp
sarl
inc
or
loop
jmp
call
mov
test
xor
mov
cmpsl
jb
cmpsl
inc
xchg
sbb
cmp
out
in
pop
mov
and
ret
inc
test
xchg
and
aam
out
push
out
mov
cmc
mov
cld
mov
and
bnd
dec
dec
in
out
int3
xchg
cwtl
cmc
xchg
std
add
sbb
mov
test
pop
bnd
lods
arpl
lret
jno
stc
dec
pop
lret
inc
mov
cwtl
sbb
inc
dec
popf
adc
mov
inc
stc
push
push
leave
inc
adc
dec
mov
mov
jo
inc
jl
xchg
xor
mov
bound
sarl
in
ret
test
and
push
sub
stos
sub
movsb
mov
dec
fcompl
shrl
cmp
inc
mov
adcl
or
xchg
jo
shl
dec
arpl
call
and
pop
xchg
xchg
jl
add
sbb
call
and
mov
scas
insb
es
test
incl
fsubr
mov
jae
push
pop
outsb
xor
lret
ficomps
mov
dec
bound
dec
test
mov
cs
dec
shll
inc
cmpsb
add
pop
fistl
jg
push
addb
push
jno
inc
pop
ficoml
das
gs
add
test
fwait
pop
mov
or
mov
lock
dec
gs
or
leave
cmpsb
lea
jne
pushf
cltd
into
adc
daa
add
ficompl
sbb
je
lock
xor
nop
jns
scas
repnz
cmpsb
imul
adc
jecxz
pop
loopne
pop
jg
std
sub
adc
lret
pop
dec
xor
daa
shlb
pop
test
cltd
inc
push
in
int
fidivrl
into
aad
xchg
jge
icebp
xchg
out
cld
inc
loope
idivl
pop
push
cs
and
mov
popa
div
jmp
popa
cmp
mov
lret
cmpsb
pop
jmp
ljmp
push
sbb
and
mov
lock
addb
xlat
mov
lock
insl
outsl
mov
orb
punpckldq
mov
dec
ja
into
pop
repnz
mov
cmp
mov
lret
mov
wrmsr
jb
gs
pop
lock
inc
xchg
sbb
dec
dec
lods
push
int3
mov
sub
into
mov
and
movsl
sbbl
jg
loope
fnsave
xor
adc
shll
sbb
xchg
jecxz
cwtl
mov
add
addr16
test
push
adc
stos
adc
out
out
test
call
push
ret
jnp
mov
cld
repnz
jmp
and
test
xchg
in
sahf
aaa
sbb
adc
mov
lds
adc
mov
push
xchg
cmp
adc
adc
mov
faddl
test
aad
cwtl
xor
or
mov
enter
pop
xlat
aad
insb
mov
jg
jb
pop
js
add
cltd
sti
dec
rcll
lret
popa
pop
inc
mov
cmp
mov
and
sub
xchg
out
in
lea
and
hlt
inc
mov
rorb
sub
mov
test
or
pusha
das
std
cmpsb
push
sub
cmp
fdivrs
mov
ficomps
push
hlt
fnstenv
aad
xorb
cmp
jg
mov
xchg
sbb
repnz
pop
fimuls
push
mov
sub
push
inc
orb
push
pop
test
test
lods
mov
dec
shl
fs
xchg
dec
xchg
jb
or
roll
in
fisubs
xchg
aaa
xchg
pushf
mov
xor
push
in
jl
mov
cmp
call
jnp
jg
and
testl
dec
xchg
and
xor
int3
loopne
mov
jbe
shrb
inc
call
xchg
jl
lahf
inc
pop
adc
insl
aad
dec
pop
adc
outsl
lcall
sub
fistpl
je
adc
push
jb
sti
mov
and
mov
mov
xchg
scas
mov
inc
cld
test
outsl
and
mov
add
mov
inc
insb
xchg
push
in
or
cmp
inc
pop
movsb
repz
mov
push
std
jb
push
rcrl
pop
out
imul
mov
xchg
jl
push
mov
popf
iret
insl
ljmp
push
xor
xor
mov
jmp
popl
je
cmp
sti
lods
cmp
adc
mov
xchg
nop
test
into
add
cltd
mov
pop
fs
call
ret
push
dec
addr16
mov
and
hlt
xchg
lds
mov
out
jne
push
xchg
adc
mov
dec
adc
bswap
leave
cmpsb
cmp
xchg
leave
stos
les
sbb
je
fisttpl
gs
cmp
and
jecxz
xchg
xchg
imul
bound
push
dec
jne
sub
gs
sbb
mov
jecxz
incl
jnp
sar
xor
and
inc
movsb
push
lock
cmpsb
std
and
mov
arpl
call
popa
and
ret
ret
or
mov
adc
loop
mov
mov
jl
lds
lahf
iret
push
or
hlt
inc
nop
int3
aad
jg
leave
xor
test
stc
add
aas
xbegin
std
cmp
cmp
in
repnz
iret
test
scas
add
cwtl
cmp
cs
cwtl
stos
popf
insl
les
ss
and
push
test
adc
pop
push
nop
loope
das
mov
sub
repnz
fisttps
jbe
and
fnsave
stc
push
into
pop
jnp
sbb
loope
xchg
add
mov
mov
mov
xchg
aam
push
mov
fcomps
popa
add
hlt
roll
cmp
xor
lahf
jbe
mov
sub
data16
imul
sub
leave
add
std
fisubrs
sbb
test
in
pushf
leave
mov
mov
fistpll
out
ja
out
in
nop
adc
in
push
into
cmp
add
rorl
or
pop
adc
xor
or
movsb
cs
inc
pushf
test
cltd
movsb
insl
jb
leave
xor
imul
xchg
mov
in
int
ljmp
stc
dec
mov
out
sub
mov
in
jecxz
xchg
sti
ret
xchg
rcll
frstor
push
fiadds
cmp
out
push
dec
pop
outsb
add
ret
in
repz
xchg
lea
aam
pop
jp
and
pop
adc
andl
data16
inc
lret
pop
sbb
aad
outsb
xchg
mov
mull
jmp
or
fstps
hlt
mov
mov
movsl
jne
sbb
cs
outsl
and
and
or
push
ret
xlat
dec
scas
mov
mov
test
lea
adc
sub
fs
xchg
fisubrs
add
xor
pop
inc
rcll
outsb
dec
loop
cmpsb
xchg
jecxz
pop
mov
repnz
mov
push
adc
mov
xor
cmp
jmp
cmp
movsl
jbe
or
icebp
jge
adc
dec
clc
fstps
test
iret
fcmovnu
adc
mov
push
out
pop
xchg
pop
xchg
stos
sarl
jne
pop
or
mov
xor
bswap
clc
add
incl
sub
lods
pop
lcall
cmp
loopne
mov
mov
pop
xchg
outsl
push
test
push
jp
pop
in
pusha
push
inc
add
cmp
outsb
mov
clc
outsl
je
leave
mov
mov
dec
into
loop
jg
movsb
xchg
push
cltd
push
mov
ret
push
mov
adc
cwtl
inc
imul
mov
in
mov
decl
pop
inc
sahf
or
sbb
insb
shrb
push
mov
pushl
push
sbb
pop
pop
pop
dec
lahf
mov
fisubrl
mov
cmp
mov
adc
sbb
mov
cmp
xor
pushf
or
mov
bound
lods
adc
pop
js
das
icebp
mov
fdivs
jb
xor
sbb
fs
popa
das
sub
jo
jmp
xlat
ss
je
cmp
adc
mov
xlat
stc
mov
bswap
insb
mov
adc
jne
sbb
mov
xor
lock
loop
mov
loop
jle
int3
lret
fdivrl
mov
and
fsubrs
mov
adc
ss
icebp
je
dec
sub
mov
cmp
xchg
jecxz
test
fisttps
cwtl
in
cld
incl
aam
stc
pop
push
adc
scas
mov
pop
mov
mov
mov
sub
mov
hlt
xor
or
dec
int3
pop
andb
mov
leave
imul
jp
jne
enter
cmp
leave
iret
in
pop
push
ja
mov
mov
in
jnp
fsubrs
cmp
push
lahf
into
dec
mov
push
shll
cmp
pop
shll
or
xlat
jbe,pt
dec
subb
int3
repnz
dec
fisubrl
xchg
xchg
push
rorl
jmp
ja
sbb
je
call
out
dec
insb
leave
cmp
out
sub
xor
add
inc
data16
inc
sha256msg2
push
lods
les
push
fists
or
stc
fists
lock
imul
imul
or
bound
sbb
repnz
rorl
pop
xchg
das
insl
cmc
push
aaa
xchg
fsubrl
mov
insb
mov
fiadds
sbb
xor
nop
gs
inc
push
lods
pop
adc
lods
inc
mov
adc
cmpsl
fwait
add
fnstenv
je
imul
mov
dec
inc
mov
pop
loope
mov
push
sbb
sub
bound
rcrb
scas
cltd
xor
rcll
pop
or
dec
push
or
add
clc
adc
jg
jmp
pop
adc
js
faddl
push
movsl
xor
sahf
pop
add
das
sbb
stc
cmp
cmp
lcall
mov
scas
sahf
adc
sub
sub
and
sbb
repz
sbb
cwtl
jge
imull
pop
scas
jecxz
add
mov
arpl
push
jne
mov
leave
mov
and
mov
imul
cmp
sub
out
inc
sub
mov
mov
and
call
push
and
jno
sti
std
shrb
lock
icebp
sti
sarl
jp
xor
mov
jne
sbb
flds
js
lret
cmpsl
mov
adc
test
push
add
bound
add
in
scas
orl
aas
jnp
or
jns
popa
cmp
pushf
aaa
xor
push
idiv
rorb
dec
sub
ja
xor
dec
sbb
ss
xlat
sti
fmul
mov
inc
inc
ror
mov
stos
stos
push
pop
rorb
out
iret
lods
js
jb
jo
test
xchg
sahf
cld
pusha
dec
leave
ja
enter
je
mov
mov
and
inc
jle
hlt
mov
push
test
stc
jne
loope
jecxz
adc
inc
dec
lret
cmpsl
into
jnp
jmp
jae
aas
mov
insl
or
cmp
mov
push
push
imul
xor
movsl
xchg
cmc
cli
mov
push
sti
pop
dec
rclb
test
js
in
sbb
cmpsl
out
dec
call
in
dec
xor
add
mov
or
add
push
je
mov
out
imull
push
daa
push
dec
lods
jmp
adc
lods
mov
mov
mov
pop
add
loop
lea
dec
aad
out
inc
cmpsl
loopne
pop
sbb
gs
gs
inc
hlt
mov
call
test
int3
ss
jnp
push
mov
and
push
ss
arpl
sub
mov
cmp
bound
mov
mov
push
fsubrl
pop
jl
testl
sub
jo
cld
sbb
mov
push
cs
clc
xchg
mov
in
xchg
sub
insb
xchg
loop
inc
or
add
cmp
jo
leave
jp
std
mov
xchg
lds
arpl
clc
movsb
jmp
js
leave
lahf
pop
xor
xor
or
jno
aad
jp
es
dec
scas
cmpsl
pusha
lea
pop
flds
scas
sbb
in
push
cmc
adc
fcmovbe
loopne
mov
mov
outsb
push
jmp
std
loope
mov
fiaddl
mov
test
fdiv
xor
or
mov
push
add
add
xor
pop
jecxz
jns
ss
mov
xor
xor
popf
mov
fistpl
imul
lods
ljmp
jo
and
mov
xchg
mov
fwait
pop
mov
into
mov
leave
imul
xchg
mov
add
pop
leave
cli
imul
pop
dec
inc
aam
test
stos
mov
xlat
in
lret
and
push
and
xchg
test
ja
ljmp
sbb
imul
call
lods
push
insb
xor
push
dec
test
popa
pop
enter
add
sbb
sbb
adc
pop
insb
bound
jle
jg
mov
add
cmpsb
scas
sbb
in
pop
inc
inc
push
jae
sub
fstps
ret
dec
sbb
insb
jecxz
test
gs
sub
cmp
mov
mov
cmpsl
push
cltd
jg,pn
ficoml
mov
mov
xor
mov
mov
out
add
adc
movb
aad
scas
cmp
or
lret
mov
dec
dec
jne
popf
das
cwtl
shlb
and
sti
or
adc
add
xor
adc
add
pop
fisttpl
xor
push
repz
sub
in
popf
sbb
insb
jp
lcall
cmpsl
pushf
shrl
mov
push
leave
lods
mov
std
sbb
fsub
xchg
inc
sbb
fs
inc
push
sbb
sarl
mov
fndisi(8087
fnstenv
push
mov
in
xor
nop
fstl
inc
cltd
xor
pop
scas
sahf
sbb
out
imul
gs
jmp
decl
mov
test
arpl
je
sti
jb
test
jnp
mov
fdivl
xchg
mov
call
push
mov
pop
cmpsb
ds
mov
mov
or
imul
gs
repnz
push
mov
xor
dec
aad
hlt
mov
ljmp
sbb
inc
int3
ret
mov
movl
and
push
push
cld
out
nop
push
popf
test
jne
int
adc
push
jnp
fdivl
andb
push
inc
xchg
sbb
jnp
in
sbb
xor
test
and
aas
ret
stos
push
lahf
call
jns
sub
jb
jno
sub
xchg
cmp
test
cli
hlt
mov
loopne
fldenv
movl
movsl
dec
cli
push
pop
imul
stc
jg
repnz
inc
pop
or
adc
cmp
push
aad
ret
stos
mov
jo
andl
sbb
push
call
pop
mov
inc
push
inc
ret
or
data16
adc
lahf
mov
lods
pop
cmc
pop
aad
jns
out
and
jb
sahf
push
push
in
add
dec
loop
call
jl
jno
and
xchg
repz
call
fsub
test
adc
pop
ja
push
dec
mov
add
mov
sti
out
or
xchg
sub
in
push
jne
shld
mov
out
jbe
inc
stc
subl
bndstx
sti
sub
dec
pop
loop
sbb
jmp
mov
stos
mov
mov
call
xchg
sbb
lret
ret
das
xor
xor
pop
repz
sbb
mov
inc
pop
jge
inc
adc
lock
ss
add
xchg
mov
arpl
into
hlt
aas
enter
outsb
fs
xchg
pop
scas
mov
lea
push
xor
outsl
imul
pusha
push
xchg
fwait
nop
sarl
add
or
jecxz
in
ficompl
dec
pop
xchg
push
jmp
and
cmp
fbstp
lds
insb
adc
push
inc
cmp
sahf
cs
and
fstpl
sar
mov
ret
loopne
cltd
xchg
cmp
es
mov
nop
xchg
nop
xchg
int
pop
inc
mov
add
add
int
jae
lock
andb
jp
js
sbb
daa
ja
adc
outsb
sbb
test
inc
jbe
shrb
cmp
leave
fsts
push
repz
out
mov
xor
push
or
or
clc
enter
repnz
hlt
icebp
jns
lret
ljmp
jnp
aad
jnp
pop
sbb
cmpsl
lahf
stos
and
std
mov
inc
shrl
jns
mov
jb
out
jae
std
stos
push
dec
test
scas
cmp
rorl
push
jmp
xchg
insb
scas
clc
mov
lret
push
inc
ja
stos
les
and
ret
xchg
xor
sti
fxam
add
std
or
data16
aam
cmp
inc
cmp
sub
mov
pusha
mov
mov
dec
mov
push
gs
inc
mov
mov
into
inc
rol
call
xor
repz
pop
in
out
sub
jle
xor
mov
gs
nop
loop
cmp
sbb
out
adc
faddp
xor
sub
mov
mov
mov
cmc
add
jnp
out
mov
jmp
push
or
fistps
push
and
sbb
inc
sub
sbb
dec
call
push
jb
pop
stos
xor
scas
jbe
ss
pop
ret
loop
mov
jne
out
push
sub
mov
xchg
jge
mov
aaa
cmpb
scas
loope
mov
xchg
adc
push
jo
cmp
out
jmp
je
sar
mov
iret
aad
fdivr
adc
in
jge
cmc
test
dec
gs
aaa
push
scas
in
pop
in
ret
loope
test
test
pop
push
iret
inc
adc
popf
call
inc
in
jl
sbb
cmp
ret
sbb
scas
xor
and
add
cwtl
xchg
cmp
sbb
add
cmp
jmp
xchg
imul
in
inc
fldt
test
insl
xchg
cmc
sti
clc
adc
jns
imul
jge
inc
inc
sub
in
loop
xchg
ret
jmp
xor
imul
push
loop
lahf
mov
daa
mov
dec
mov
xchg
andl
call
xor
and
jp
pop
push
je
cmp
jo
mov
mov
pop
jl
aam
jl
jge
int3
adc
lock
lods
sbb
movsb
inc
jle
in
ret
push
mov
and
inc
xor
inc
sbb
dec
cmp
xlat
mov
fstpl
or
gs
xchg
mov
xchg
push
push
scas
out
mov
js
xchg
sub
les
adcl
xchg
aam
dec
lahf
pusha
aaa
notb
js
mov
mov
sub
loopne
sbb
mov
adc
fwait
rorb
icebp
sub
fmuls
sbb
push
daa
lock
inc
adc
fisubrl
xor
inc
sub
cmp
mov
dec
inc
dec
nop
cltd
sub
pop
es
sbb
adc
pusha
arpl
mov
shll
push
lock
pop
mov
pop
gs
fcmovb
add
bound
sbbb
movsb
xchg
adc
xlat
push
inc
outsl
outsb
push
inc
icebp
cltd
sbb
das
pop
cli
jb
mov
jne
pop
cli
cmp
stos
sbb
ficomps
call
xor
int
xlat
sbb
push
int
fs
and
in
fwait
mov
orw
inc
loope
and
cmp
sbb
xchg
pop
and
and
test
and
sub
js
gs
mov
xorl
push
fcoml
clc
jl
cmp
into
dec
pop
dec
mov
pop
fildll
gs
pop
push
jl
inc
icebp
out
or
or
xchg
jae
mov
pop
stos
or
dec
jmp
xchg
out
lcall
cmp
push
cs
sbb
xor
inc
adc
jns
push
inc
sbb
lods
jo
mov
call
nop
mov
jle
cmp
push
test
stos
xor
adc
lds
lret
jns
pop
push
loopne
sarl
outsb
ret
imul
hlt
sarb
sbb
push
push
sbb
jp
jmp
nop
add
jae
fcompl
dec
rcr
jo
cmp
mov
insl
ds
mov
or
inc
cmpsb
mov
mov
pop
clc
add
lret
and
push
jnp
scas
mov
arpl
les
pop
xor
pop
bound
adc
insb
pop
orb
out
push
mov
dec
mov
dec
sbb
mov
add
xchg
iret
mov
out
fwait
scas
data16
movsb
or
adc
push
cmpsb
into
xlat
jo
xchg
mov
in
popa
into
lret
pop
mov
std
push
popa
andl
pop
movsl
hlt
fsubs
sub
addl
jno
in
mov
push
pushf
mov
and
and
mov
mov
push
rclb
call
dec
push
lahf
sbb
adc
push
xchg
loop
arpl
mov
inc
dec
shlb
cmpb
add
cmpsb
dec
jmp
and
push
inc
xchg
orb
and
xchg
lcall
and
lret
push
sub
xchg
leave
scas
or
scas
lahf
stc
push
lock
or
mov
into
test
repnz
sahf
cmp
xchg
xchg
mov
jno
xchg
mov
and
aam
into
das
in
das
push
xor
add
shll
sub
fcmovnu
add
xchg
inc
pop
pop
xchg
ds
xchg
cld
rorl
inc
mov
dec
or
cmpsb
ret
dec
inc
xor
mov
ret
stc
sbb
idiv
lods
rcr
xor
jl
out
sub
sbbb
repz
cwtl
jmp
lcall
inc
arpl
stos
fisttpl
add
call
shrb
inc
add
push
mull
test
sub
pop
mov
push
insl
ljmp
rcrb
imul
jmp
push
jg
mov
fimull
cs
clc
pop
cmpsb
pop
adc
fldl2e
mov
jno
dec
jno
pop
mov
add
ret
xchg
addr16
jecxz
inc
inc
inc
push
pop
ret
out
add
pop
test
mov
add
ss
jecxz
push
je
xchg
jge
pop
jnp
inc
fldenv
cmc
scas
movsb
mov
inc
aam
in
push
clc
mov
add
ss
xchg
repz
jp
hlt
addr16
fwait
pop
stos
addl
add
mov
jp
dec
enter
pop
push
cmpsb
xchg
movsl
xlat
and
jo
pop
cmp
nop
pop
lret
mov
dec
loop
aaa
push
or
repz
pop
jmp
xchg
inc
popa
movsb
les
insb
addb
xchg
iret
dec
cmc
cmpsb
xor
lret
or
dec
inc
sub
adc
sahf
lods
push
mov
lea
lods
sbb
insl
fwait
push
iret
cmp
stos
push
xor
dec
push
and
mov
test
mov
jge
push
lock
or
cmp
xor
sub
xlat
pop
mov
sbb
ja
clc
jnp
jmp
out
jne
cld
sub
sub
inc
inc
jne
push
push
xor
ret
xchg
sub
rol
lret
or
nop
add
jge
xlat
jp
lds
shll
leave
loop
subb
jmp
pop
scas
cli
lea
loopne
sub
call
repnz
or
outsb
loope
pushf
adc
cli
dec
out
std
pop
adc
sarb
pop
pop
jmp
shlb
adc
aas
pushf
mov
and
loopne
jmp
push
xor
fsubrl
cmp
rcrl
ds
mulb
pop
je
daa
dec
push
or
aaa
push
push
outsb
adc
bound
pop
in
iret
and
lahf
mov
mov
lea
xor
rcrb
cltd
insl
or
movsb
cltd
xor
sub
fstl
xchg
int3
cmp
arpl
es
test
cld
cltd
sahf
cli
aas
cs
mov
and
pushf
xchg
cmp
jl
aaa
rcrl
sub
xor
imul
push
add
shll
lock
out
lcall
mov
fadds
jmp
mov
jne
cmp
in
test
pop
xor
pop
fs
popf
outsl
add
call
mov
cwtl
pop
js
movsb
and
imul
xchg
movsl
and
out
inc
and
mov
jle
das
outsl
xor
pop
leave
subl
cmp
pop
fldt
adc
aas
mov
test
sti
inc
jae
jbe
mov
cmp
std
cmpsb
cld
push
cmpsl
mov
and
xor
mov
add
in
push
cwtl
sbb
cmp
clc
xchg
jl
jle
pop
stos
rcr
popf
int
dec
dec
push
push
ret
lods
repz
inc
pop
cld
add
xchg
dec
inc
sub
push
test
pop
test
cmp
repnz
push
pop
lock
and
jle
jno
std
call
call
jmp
lcall
rolb
xor
addb
xchg
sbb
mov
popa
rclb
push
or
jnp
imul
sahf
pop
fisubrs
mov
pop
jno
out
fiadds
inc
mov
arpl
jmp
rcrl
imul
dec
enter
xchg
push
mov
xor
push
repz
clc
lock
rcll
jp
aad
lahf
and
mov
sbb
outsl
cmp
dec
sti
xor
mov
test
add
cmp
mov
xor
imul
das
adc
test
movsl
or
fimull
mov
outsl
cmp
pop
mov
dec
data16
sbb
add
push
stos
inc
lcall
cmp
aaa
add
rcrb
jmp
daa
lret
cs
xor
repz
or
xor
push
or
push
andl
add
call
jle
mov
shlb
pop
cmpsb
clc
test
in
mov
leave
pop
inc
cltd
mov
das
ds
jo
sub
dec
mov
cmc
ja
lods
out
ss
dec
enter
mov
lcall
sub
or
adc
scas
jns
jb
sbb
hlt
shrl
xchg
rorl
mov
pop
mov
mov
lods
and
insl
mov
scas
mov
cli
jle
mov
lret
mov
into
and
pmuludq
fwait
movsl
stos
cmp
jo
leave
mov
out
lcall
addr16
ficomps
sub
and
pop
mov
fwait
imul
sub
push
hlt
push
pusha
pusha
pop
or
sub
adc
pop
in
push
xlat
lods
test
lock
pop
leave
push
xchg
ljmp
lock
add
sbb
pushf
jmp
xchg
das
jae
inc
lahf
adc
pusha
lret
insb
rorl
out
pop
rcrb
inc
jp
add
cs
mov
pop
push
jle
sbb
mov
bound
cs
cmp
jmp
sti
leave
fldcw
es
adc
outsl
repnz
stc
sti
jno
out
adc
jge
jnp
xrelease
xchg
inc
lds
in
push
mov
mov
mov
xlat
push
cltd
and
sub
test
dec
sbb
mov
shll
or
mov
mov
popf
jle
push
cmc
mov
push
push
add
mov
xor
add
sbb
xor
jmp
mov
lods
pop
xor
frstor
cltd
fidivrl
or
push
cmp
clc
adc
aam
call
inc
movsb
inc
ret
pop
shr
js
jle
jns
cmp
je
jo
cmp
in
pop
js
out
xchg
mov
out
push
fwait
sbb
stos
stc
fisttpl
dec
aad
jmp
shl
out
sub
aaa
dec
sbb
jno
hlt
dec
imul
push
pushf
lods
or
fldcw
inc
movsb
ja
cmp
mov
fimull
or
mov
xlat
push
mov
jmp
ljmp
xchg
xor
dec
out
fs
aad
push
pop
push
scas
and
push
hlt
and
adc
push
and
pop
loopne
sbb
int
cmpsb
cli
in
pop
mov
fwait
and
pusha
cmp
sub
xchg
fistpl
cmpsl
jge
dec
lock
scas
add
or
test
loop
push
mov
jecxz
adc
push
sbb
nop
dec
data16
cmp
ds
js
pusha
fwait
or
mov
movsl
push
mov
dec
arpl
xchg
push
int
or
imul
aaa
jmp
jnp
fisttps
mov
ret
aaa
xor
insb
arpl
fnsave
jns
mov
lret
xchg
inc
lods
jge
sub
lds
push
dec
inc
cltd
jl
lret
jb
cmp
or
aaa
sub
mov
ffreep
jg
pusha
shl
adc
arpl
sbb
or
mov
cs
pop
inc
cmp
pop
inc
mov
pop
les
mov
orb
mov
ss
jl
movsb
inc
and
xor
pop
push
mov
fcmovnb
out
mov
sbb
int3
or
mov
mov
hlt
jge
jmp
into
in
test
xchg
repz
sub
scas
orl
cmp
in
jmp
je
movsl
cmp
add
mov
jbe
fdivl
ja
shr
sub
dec
and
add
clc
xchg
cmpsb
repz
mov
ljmp
push
arpl
lock
out
nop
mov
adc
push
or
dec
inc
mov
dec
jo
stos
icebp
adc
hlt
lock
adc
push
and
sbb
gs
fdiv
pop
ljmp
orl
mov
add
mov
loop
push
outsb
mov
sbb
test
mov
cltd
rclb
fimull
mov
addr16
push
push
mov
xor
adc
das
fs
and
and
sti
or
cmp
push
loope
aam
ret
push
sahf
mov
insb
xor
inc
rclb
hlt
or
sub
adc
sub
adc
dec
les
les
jo
push
fsts
jae
lods
enter
xchg
enter
jbe
cltd
ficoms
push
mov
mov
sbb
stos
dec
and
outsb
push
call
jl
repz
cli
mov
insb
fldenv
jns
dec
or
xchg
sti
out
push
rcl
mov
scas
in
ficompl
inc
std
loope
cmp
dec
mov
cmp
testl
aaa
popf
cmpsb
and
mov
insb
cmp
movsb
pop
mov
sbb
sub
jp
xchg
int
sbb
je
mov
popf
ss
test
dec
mov
das
cmpsb
adc
hlt
push
ljmp
shr
mov
bnd
lret
fimull
and
pop
enter
loopne
outsl
mov
add
push
repnz
push
cmp
stos
mov
push
mov
sbbb
push
push
dec
ret
mov
jle
fcoml
insl
scas
jecxz
fadd
pop
sbb
add
jge
xchg
int3
dec
test
das
adcb
mov
mov
xor
dec
jae
out
mov
stc
cmpsl
push
ds
into
or
leave
mov
dec
jb
push
cltd
push
test
shll
or
sbb
lret
andb
pop
mov
pushf
in
fbstp
ds
pop
dec
shr
sub
dec
ds
jmp
into
dec
insl
mov
pop
pop
test
cmp
mov
cltd
or
lods
sub
sbb
xor
fstpl
mov
mov
xchg
inc
ljmp
xchg
sub
rcrb
push
scas
jmp
mov
leave
add
mov
inc
pop
xchg
scas
aaa
sbb
and
push
mov
pop
mov
cmp
xor
jge
jb
fiadds
orl
jae
add
or
push
sahf
gs
xchg
push
arpl
iret
inc
outsl
lock
aaa
sbb
inc
or
mov
jg
jmp
dec
ja
cltd
mov
gs
mov
gs
mov
int3
push
call
imul
test
jo
imul
push
loopne
and
inc
mov
or
arpl
dec
jg
mov
pop
jnp
inc
sub
cmp
icebp
xor
pop
add
dec
inc
sarl
rcrl
out
jns
and
sub
iret
nop
mov
ret
jb
ss
addr16
inc
jg
mov
push
pusha
int3
cmp
shlb
mov
cmpsl
pop
fwait
xor
repz
in
cwtl
dec
and
pop
adc
add
mov
cmp
pop
mov
cld
pop
cvttps2pi
push
cmp
loope
inc
inc
jnp
gs
test
arpl
inc
aam
jge
cmp
movsb
js
outsl
or
inc
add
nop
cmpsl
incl
ret
sub
jno
pop
adc
and
nop
mov
push
push
inc
dec
loope
gs
test
pop
sti
push
nop
pop
mov
inc
mov
add
cmp
aam
dec
lret
loope
mov
mov
rol
add
mov
dec
loop
pop
popa
loopne
dec
fsubrs
in
movsl
xor
addr16
je
out
into
test
xchg
pop
cmpl
loope
rcrb
pop
shlb
lea
addb
cmp
jl
std
lcall
test
scas
sti
fs
cmp
fistl
xor
or
lods
mov
dec
cmpb
pop
and
pop
pop
js
or
lahf
inc
divb
shll
in
mov
fdivrl
jae
pop
in
dec
sbb
imul
fists
sbb
mov
and
es
scas
stos
lret
dec
in
mov
lods
gs
sti
sbb
and
test
shl
loopne
rcll
adcb
pop
inc
sbb
flds
dec
sub
inc
aaa
movsb
cmp
mov
test
adc
or
popa
hlt
push
cmpsl
push
cwtl
clc
sub
mov
sbb
cltd
fnsave
repz
in
mov
in
xor
jb
cmp
ljmp
enter
cmp
shrl
mov
lea
sub
mov
xor
in
lret
push
inc
dec
mov
mov
test
or
dec
xchg
imul
mov
mov
dec
push
leave
mov
or
lea
test
mov
or
and
ss
sbbl
pop
pop
sub
push
lea
je
jb
push
loope
mov
movsl
lcall
push
jbe
and
or
insl
divb
and
lahf
cwtl
call
add
mov
out
cmpsl
mov
ficoms
and
jne
xchg
dec
dec
and
outsb
aas
popf
ss
scas
mov
fistps
loopne
ret
sub
lahf
insl
xchg
cwtl
and
xadd
jns
data16
xchg
dec
cmp
sbb
push
jmp
add
ljmp
push
adc
inc
daa
inc
or
mov
das
test
loop
fwait
dec
icebp
sbb
adc
repz
test
out
andl
xchg
fdivrs
xor
ficompl
cmp
mov
mov
sbb
sbb
mov
mov
dec
js
cmp
pop
push
or
push
dec
dec
repnz
popf
dec
mov
jle
mov
cmpsb
pop
dec
sti
imul
mov
xchg
orb
push
nop
mov
push
jae
out
dec
pop
inc
loopne
or
lds
cltd
adc
inc
pop
mov
out
fpatan
arpl
scas
daa
push
cmp
sti
mov
xor
inc
sahf
pushf
mov
sahf
loope
push
lcall
cmp
or
lret
lret
push
mov
dec
call
imul
pop
inc
stos
out
xorb
dec
call
adc
testl
push
xor
movsl
dec
cmp
es
stos
pusha
int
movsl
clc
lcall
sub
insl
add
mov
or
ja
mov
pop
push
icebp
xlat
out
popa
movsb
push
int
pushl
pop
add
repz
mov
mov
orb
loope
popa
jg
xchg
or
movsb
or
out
data16
mov
jb
mov
insb
sub
dec
jne
push
sub
mov
xchg
ljmp
dec
xor
les
pop
sub
sub
jmp
aas
adc
out
pop
jns
adc
xor
mov
das
push
out
lret
cmp
clc
shll
ljmp
pusha
cld
jne,pn
ret
cmc
mov
push
pop
inc
addr16
into
cmp
fwait
lea
add
xchg
sbb
test
in
js
and
mov
xor
inc
mov
inc
cmp
or
inc
xchg
xor
push
mov
xor
inc
pop
iret
adc
cmp
mov
test
fildl
mov
sub
aas
xchg
lcall
pop
xor
xchg
ds
cwtl
loopne
rcr
xchg
pop
sbb
push
xlat
push
je
lods
mov
xchg
out
xchg
xor
enter
lock
fdivs
push
dec
fsubl
xchg
pop
mov
scas
jl
push
and
nop
push
sti
loope
xchg
push
hlt
aad
test
inc
cwtl
xor
iret
in
sub
jbe
mov
cwtl
mov
or
std
jle
in
ret
mov
shlb
scas
sbb
ficomps
mov
std
adc
imul
ljmp
cmpsb
int3
repnz
push
fidivs
mov
movsb
je
out
xor
icebp
into
sbb
xchg
stos
push
sbb
xchg
cmp
mov
pop
rcrl
stos
xchg
xor
aas
sbb
iret
jno
or
mov
cltd
sub
das
push
out
cwtl
int3
cmp
and
fnsave
jo
cmp
jnp
dec
cmp
cltd
ds
cmc
pushf
inc
xchg
in
dec
je
in
mov
mov
test
sbb
adc
jns
jp
and
add
cld
jno
adc
xor
adc
jns
xchg
mov
sbb
leave
aam
add
ljmp
aam
leave
dec
and
movsl
addr16
cs
push
in
xchg
xchg
push
fisttps
cld
mov
es
outsl
sbb
cmpsb
push
mov
push
aam
sbb
or
xor
mov
cmc
dec
inc
movsb
xchg
pusha
jp
xor
mov
push
rcl
std
out
sahf
pop
mov
insl
push
enter
stos
rol
dec
aad
imul
push
outsb
psllq
pop
fsts
daa
mov
out
or
xchg
movsb
insl
xchg
add
cmpsb
jp
lods
adc
lret
push
out
or
ret
nop
into
in
mov
loopne
imul
scas
daa
mov
orl
mov
jnp
sbb
sti
sub
loope
mov
pop
fwait
xorl
xchg
shlb
lods
sub
cmp
insb
xor
push
pop
mov
scas
scas
xchg
outsb
mov
and
push
dec
popf
jno
sub
shl
adc
out
pop
les
push
cmp
adc
fsubrs
sbb
inc
cmp
outsl
lret
cmp
inc
int3
stos
leave
fstpt
jmp
push
add
outsl
call
dec
ds
pop
pop
jmp
add
loope
mov
enter
push
mov
or
adc
sub
jb
mov
scas
daa
ja
pop
outsl
aaa
lods
jo
mov
out
mov
cmp
mov
aad
jbe
lcall
insl
cs
add
scas
or
dec
add
rclb
mov
mov
mov
mov
stos
mov
and
sub
sbb
jg
mov
mov
cmp
push
addl
xlat
sahf
clc
xor
and
dec
out
test
sub
sbb
mov
cmp
push
xchg
arpl
sarb
sbb
fsts
mov
lds
repnz
push
aaa
insl
lods
popa
pop
mov
int3
pop
das
cs
insb
sub
test
lcall
loop
cmp
xor
jmp
push
fwait
shr
jne
mov
les
repz
rorl
dec
cmpb
testl
loope
and
mov
mov
mov
xchg
add
mov
in
ljmp
in
add
pop
rolb
decl
out
jns
push
sub
sbb
dec
mov
lea
lods
mov
outsl
inc
cmc
cmp
stc
test
in
mov
clc
fucomi
movsl
add
push
pop
sub
pop
test
pop
mov
sub
pop
jmp
scas
mov
adc
pop
lock
xor
cmp
mov
imul
sub
and
inc
in
fsubl
push
mov
mov
test
push
andl
clc
out
push
cmp
mov
insb
inc
stc
sbbl
sub
in
push
lods
sub
cmp
fsubs
mov
out
addr16
add
pusha
mov
shrl
inc
stc
xor
aam
and
mov
clc
orl
andb
add
mov
rclb
jbe
mov
lods
pop
add
fistpll
iret
add
fcoml
cmp
pop
pop
mov
pop
ud1
fsts
test
jne
xchg
xlat
out
cmpsb
pop
add
cmpsl
jg
inc
mov
or
mov
cmp
sbb
pushf
jg
cmp
shlb
imul
fiaddl
cmp
mov
adc
bound
inc
sub
and
jne
push
add
cmp
notb
pushf
leave
shll
js
cltd
pop
mov
aad
jl
push
add
push
jl
and
xor
int
shll
into
aas
rcll
push
fisttps
add
ljmp
dec
push
dec
push
lock
mov
cmp
pop
out
inc
mulb
stos
cmp
and
lea
in
rcrl
cmp
jl
iret
insb
das
fcmovnbe
aam
gs
adc
jmp
rclb
clc
cmp
insl
or
gs
xor
or
jbe
xchg
into
test
jmp
and
lods
xchg
pop
jg
mov
out
rcrl
insl
int3
add
xor
lods
loop
imull
dec
and
jge
fs
sub
mov
push
imul
lahf
or
faddl
insl
addl
data16
mov
insb
repnz
xchg
ret
fwait
decl
mov
stc
mov
in
pop
jae
jg
ss
cmovne
or
sbb
jecxz
rcrb
jmp
movsl
inc
and
add
push
jmp
dec
cmc
xor
sub
jb
sbb
les
fidivrs
xor
fldcw
cmc
push
mov
push
mov
xchg
stos
xchg
push
mov
andl
rcr
jns
sbb
xor
and
mov
or
xor
pushf
jmp
sbb
fwait
pop
xchg
stos
test
xor
jbe
in
rcrb
mov
fidivs
test
je
xor
jg
xor
stos
xor
in
inc
aaa
mov
xor
fisttpl
outsl
push
jecxz
fisubs
fnstsw
xchg
out
xchg
xor
ja
orb
jg
push
test
add
push
dec
cmp
lds
and
xchg
jbe
pop
or
xor
out
cmpsl
into
in
ja
insl
cmp
lcall
or
lods
loop
test
sub
movsb
mov
mov
mov
es
xor
jge
loope
or
ss
test
imul
xchg
dec
pop
mov
or
aaa
push
cwtl
dec
or
ja
mov
jne
ficoml
sub
pop
rol
or
pop
mov
cmp
insb
mov
mov
dec
mov
dec
lock
fisubl
addr16
das
push
and
cs
cmpsb
jle
add
cs
sbb
ffreep
cli
jecxz
dec
mov
jl
lds
push
cmp
mov
and
aad
int3
pop
sub
adc
in
pop
pop
inc
cwtl
or
and
int3
pop
mov
xor
pmaxsw
in
fwait
xchg
jmp
lds
sti
sub
push
test
cmp
or
popf
stos
add
xchg
pop
shl
pop
loope
imulb
mov
inc
fists
push
and
fs
mov
push
mov
cmp
sub
mov
rolb
pop
push
mov
push
mov
sub
int
cltd
adc
imul
mov
aad
in
ja
outsb
out
mov
outsb
cmove
out
add
jp
fwait
sub
pop
ja
loope
xor
jmp
mov
punpckhdq
inc
mov
sbb
cmc
xchg
repz
push
or
adc
in
mov
mov
jmp
sahf
adc
popa
push
outsl
out
mov
mov
push
sahf
add
and
add
stos
ret
insl
test
mov
adc
xchg
add
jmp
sub
rcr
inc
mov
xor
mov
pushf
lods
aaa
movsl
jp
xor
movsb
mov
sti
rolb
jg
shl
push
cmp
mov
inc
test
es
daa
dec
mov
sbb
xchg
cmp
push
popa
cmp
xchg
jb
das
push
mov
movsb
pop
fldt
add
ds
cmp
add
lcall
ficomps
inc
loopne
and
and
jnp
mov
jl
inc
data16
std
in
dec
test
xchg
neg
or
rcrb
scas
mov
scas
in
push
sar
mov
and
and
xor
aaa
or
adc
fistpl
lret
pusha
mov
pop
outsl
std
push
mov
out
jge
fwait
lods
push
cmp
nop
jb
push
rcrb
cmpsl
in
out
inc
scas
repnz
jg
ja
add
mov
add
outsl
dec
in
vpor
inc
mov
push
ja
jge
hlt
call
and
mov
pop
sbb
jns
mov
pop
pop
aad
lcall
cs
mov
mov
cs
add
push
xchg
bt
icebp
xor
add
cmpl
aaa
out
pop
inc
mov
and
mov
adc
push
sbb
cmc
dec
xchg
mov
cmp
inc
notl
push
loopne
mov
dec
je
lods
mov
cmpsb
cmp
jno
push
lret
mov
push
iret
pop
xchg
mov
push
xchg
jb
inc
lock
gs
push
jg
jne
shrl
xchg
sbbl
sti
in
mov
rclb
sbb
fdivrs
shr
xor
scas
rcll
and
adc
loope
cltd
imul
test
mov
mov
add
stos
adc
push
ret
inc
xor
cmp
test
pop
test
stos
or
xchg
xchg
mov
push
cmc
mov
mov
das
sbb
pop
or
out
bt
in
mov
fwait
jp
andl
jg
push
and
and
pop
aam
into
ret
aas
adc
inc
jle
cmp
cmp
mov
aam
pop
push
adc
loopne
mov
add
or
cmp
imul
jmp
inc
insl
add
cld
or
sahf
sarl
mov
and
fimull
add
pop
ja
dec
push
aas
inc
jno
xor
pop
clc
test
jmp
sub
loope
push
or
outsb
sbb
mov
xor
mov
popf
adc
inc
sub
jnp
pop
lock
pop
jle
out
inc
jo
stc
push
pop
push
cmp
gs
xchg
insb
xor
xchg
pop
jbe
loop
pusha
dec
inc
xchg
mov
dec
pop
push
sbb
in
icebp
hlt
jns
es
add
push
stos
in
xor
dec
clc
cmpb
push
mov
pop
in
fisubrl
add
or
mov
dec
fildll
fsubrs
stc
push
inc
cmpl
xchg
decl
mov
xchg
test
jns
sbb
bound
jg
mov
aad
mov
jne
jb
inc
imul
lret
out
stc
aaa
mov
mov
outsl
stos
jmp
push
shl
mov
inc
mov
fwait
das
sbb
jl
sbb
or
or
and
jno
and
mov
nop
jge
test
repz
daa
lock
dec
stc
inc
cmpsl
mov
and
movsb
inc
imul
push
and
in
add
mov
xor
clc
mov
clc
test
sub
popa
fisttps
push
ret
insl
and
ror
test
dec
jmp
adcb
insl
dec
fidivrl
iret
icebp
mov
std
cmp
aad
adc
stos
fisubrs
and
push
jmp
sub
sti
lcall
test
ljmp
sbb
into
int3
mov
lods
inc
mov
push
adc
dec
dec
sahf
stos
popa
insl
push
lahf
loope
jecxz
push
push
loop
sbb
add
ret
lcall
cltd
sub
add
cltd
jp
or
daa
fsts
dec
mov
mov
arpl
out
sub
cli
cmc
lcall
mov
cmpsl
mov
fiadds
out
inc
jl
ds
xchg
fwait
int3
cmp
inc
negl
call
sahf
xor
and
addr16
les
scas
or
inc
ss
cmpsl
jecxz
addr16
pushl
mov
mov
dec
or
sbb
frstor
dec
movsb
icebp
mov
mov
enter
outsb
call
pop
pushf
fists
fstps
pop
mov
lock
xchg
pop
or
jecxz
adc
imul
inc
push
jb
jno
clc
jle
mov
cmpsb
in
aaa
mov
inc
add
jp
or
sarl
mov
dec
or
sub
fildll
mov
sbb
pushf
shll
mov
xchg
mov
mov
mov
lock
je
pushl
adc
int3
jge
in
shll
notb
cmp
adc
inc
inc
jae
test
bound
cmp
lods
pop
xor
pop
mov
cmp
lahf
adc
fiaddl
fidivrl
mov
pop
daa
adc
insl
xchg
cmp
call
sub
mov
cli
subl
sbb
xchg
and
jo
jns
pop
or
sbb
push
xchg
inc
dec
ljmp
cmp
adc
jne
mov
jno
mov
stos
dec
fmul
jge
out
std
add
mov
cmp
iret
aas
jecxz
mov
or
cli
jo
xchg
push
mov
push
ret
int
pop
out
scas
dec
sahf
or
aas
cmp
cmp
loope
imul
fwait
les
or
and
mov
int
pop
push
das
adc
inc
cltd
mov
dec
jge
xchg
add
lea
sbb
aad
inc
psubw
aad
adc
fdivrl
insl
fdivs
push
cmp
pop
fsubrs
xlat
cmp
pushf
mov
faddl
insl
pusha
imul
jg
mov
repnz
sub
pop
imul
fs
cltd
sub
je
imul
lods
dec
sbb
movsl
and
pop
ljmp
inc
push
mov
push
rorl
loope
je
loope
or
inc
aaa
xor
mov
shrb
pop
in
ficoms
jge
xchg
adc
mov
daa
dec
adc
imul
pop
mov
sbbb
add
jmp
orb
dec
mov
imul
jp
jp
adc
mov
call
imul
je
clc
clc
fwait
cmpsl
popf
sbb
cld
aam
andb
ja
cmc
fs
sbb
dec
push
adcl
jmp
fsts
xor
inc
push
outsl
test
pop
xchg
jl
mov
outsl
andl
test
std
pop
outsl
testb
pushf
in
mov
add
aam
movsb
cli
mov
jno
jg
xchg
xchg
clc
mov
mov
sbb
scas
mov
jbe
fs
cld
cmp
pop
dec
fisttpl
lock
sarl
sub
sub
adc
mov
int
mov
mov
fisubrs
xchg
add
in
rol
xor
fnstsw
pusha
ds
enter
push
mov
jmp
or
insl
loop
enter
push
and
iret
in
gs
mov
sub
stos
lcall
pop
in
mov
sub
pop
pop
dec
cmpsb
add
or
adc
jmp
mov
xchg
or
scas
dec
mov
cwtl
push
fimull
inc
push
mov
jno
xchg
xchg
push
in
jns
add
cmp
pushl
xchg
rcl
mov
lock
add
test
cmpsl
mov
xchg
je
inc
aam
pop
lock
adc
add
int3
mov
jnp
into
in
add
les
xor
lods
sbb
fs
xchg
push
jbe
insb
adc
add
push
jl
jno
lods
rcrb
xchg
notl
adcw
xor
call
sbb
cmpb
dec
loop
push
push
mov
fidivrs
mov
add
jbe
mov
lahf
xchg
lret
imul
ds
popa
or
addl
fwait
xchg
js
and
in
cmc
xor
dec
xor
cs
repnz
aaa
xchg
and
xchg
adc
and
pop
dec
inc
lcall
fbld
push
mov
outsb
sub
sbb
fwait
dec
dec
mov
sti
push
mov
cmpsl
in
and
shlb
mov
cmp
test
movsb
cmpsb
outsl
sbb
hlt
rcrl
mov
adc
dec
nop
push
and
push
loopne
pop
adc
adcb
xor
decl
popw
adc
addr16
cmp
jp
rcll
jo
jne
pop
pop
mov
mov
out
pusha
xor
xor
mov
das
jle
inc
mov
mov
and
pop
cwtl
add
push
push
sub
inc
out
push
js
test
and
push
inc
sbb
pop
ljmp
push
or
ficoms
jl
lret
aaa
leave
js
sub
dec
loop
pop
iret
sti
mov
xchg
adc
popf
clc
mov
cmp
mov
test
cmpl
mov
out
loopne
subl
stos
adcb
mov
jmp
push
xchg
xor
push
pusha
mov
in
es
aaa
popa
int3
arpl
pop
adc
sahf
jmp
aas
fs
pop
adc
jmp
inc
dec
xchg
cld
xchg
jmp
pop
clc
jbe
popf
mov
rcll
inc
jne
test
pop
mov
dec
mov
ret
xor
cmc
adc
pop
aad
cltd
inc
push
aad
pop
adc
mov
cmp
outsb
outsb
or
xchg
mov
and
sbbb
es
inc
fsubl
ljmp
shld
inc
cmp
aam
cltd
inc
pop
and
mov
jbe
and
addb
std
fcompl
rolb
mov
lret
push
das
inc
enter
and
out
jns
sbb
cmp
cmc
loop
jmp
dec
sbb
loope
xchg
into
lahf
js
cltd
sbb
sub
jmp
pop
testb
inc
sbb
ja
add
xor
movsb
bound
mov
sti
lret
sbb
mov
jp
mov
loopne
mov
mov
and
sbb
mov
adc
lahf
cli
mov
sub
xchg
int
outsl
ss
mov
cmp
gs
mov
push
adc
jnp
mov
dec
loope
test
push
mov
sbb
enter
nop
aas
mov
test
cmpl
fucom
mov
cmpl
cmp
pushf
xchg
mov
inc
cmp
repnz
inc
fsubp
sbb
bnd
sti
ret
sub
lds
mov
fs
mov
mov
mov
push
mov
dec
push
push
scas
sub
sbb
mov
sbb
mov
lcall
test
push
push
fnstsw
xchg
or
inc
jle
pop
jmp
jbe
or
divb
jae
sub
mov
insb
mov
bound
jae
imul
popf
push
xor
ja
inc
ror
fistpll
sti
les
cmp
fcoml
ret
mov
mov
fbstp
push
shlb
jg
mov
pop
gs
adc
add
les
imul
and
lret
adc
or
push
es
sbb
ficoms
or
out
mov
xchg
jmp
or
out
sbb
ret
ret
inc
cwtl
aas
es
and
inc
enter
lcall
out
mov
lea
mov
mov
cmp
sbb
inc
mov
out
arpl
pop
pop
xor
sub
aaa
push
insb
xchg
jae
jnp
movsl
pushf
test
inc
lret
dec
push
mov
lods
outsb
test
addr16
xlat
pop
push
xor
jbe
mov
shrb
jecxz
push
mov
jle
jnp
and
int3
or
lods
lds
sbb
inc
cmpsl
aas
inc
jne
call
push
movsl
arpl
mov
das
inc
xor
xchg
xchg
or
lcall
or
inc
mov
jmp
lock
popa
mov
inc
pop
in
sti
cs
repz
sub
mov
aas
stos
add
movsl
pop
and
scas
adc
subb
jle
sub
lock
popa
mov
data16
je
aas
and
cmp
adc
xor
pushf
lock
mov
xchg
mov
dec
das
inc
int3
stos
xchg
les
mov
and
or
aaa
add
mov
mov
fsts
mov
fcomi
jge
lcall
xorl
and
push
or
test
cmp
movsb
test
pop
js
xor
popa
int
loop
adc
cld
ret
mov
mov
sub
cmp
dec
jge
mov
data16
outsl
loopne
inc
cmc
js
rcl
pop
loop
jecxz
add
ja
fwait
hlt
push
mov
pop
xor
shrb
in
adc
dec
xchg
in
pop
in
jl
push
jecxz
cmc
sub
xchg
push
adc
js
jle
lcall
mov
movl
xchg
adc
push
adc
bsf
push
decb
lahf
and
lock
test
into
adc
imul
popa
mov
sub
dec
mov
stc
fwait
outsb
cmpsb
mov
push
dec
test
sbb
sbb
push
lock
mov
jnp
push
pand
push
leave
test
mov
pop
dec
aaa
inc
addr16
xchg
or
outsl
xor
add
xor
mov
jae
in
subl
xchg
jl
mov
test
jg
aad
sub
in
popf
aad
ret
std
jne
movsl
push
xchg
sbb
xlat
xchg
inc
insl
pop
insb
push
inc
mov
xchg
jecxz
jecxz
cmp
std
push
hlt
cs
loopne
jns
inc
push
out
repz
jae
sahf
adc
push
lahf
mov
in
xchg
jp
sbbl
mov
pop
stos
jp
popf
aaa
aas
dec
rolb
mov
aaa
cmp
mov
pop
out
xchg
daa
cmpsl
jne
shrl
pop
sbb
dec
mov
jg
femms
xor
aam
jmp
sahf
mov
lret
mov
enter
mov
pop
and
insb
mov
and
adc
jle
mov
mov
clc
mov
repz
imul
int
addl
push
andb
repnz
xor
fsubrs
je
pop
mov
subb
inc
cmp
stc
fadd
sub
dec
pop
cmp
cwtl
int
mov
adc
movsb
mov
push
sbb
ficomps
popa
cld
jb
pop
cmp
sbb
or
cwtl
lret
sahf
sahf
imul
lcall
rorl
sahf
or
outsb
mov
sbb
cmc
inc
lret
xchg
sub
pop
loope
pushw
jl
inc
rorb
hlt
fs
and
enter
out
inc
cli
nop
pop
inc
adc
cmp
jne
xchg
xchg
mov
popa
movsb
sahf
or
push
cmp
mov
mov
xor
push
push
inc
cld
je
movsb
ss
mov
xchg
ror
int
loop
mov
pop
out
stos
cmpsl
xor
jecxz
repz
sti
cmp
je
cmp
mov
out
adc
adc
inc
sahf
push
and
sahf
sbb
inc
dec
cmp
or
mov
jo
idivl
mov
push
sbb
xchg
xchg
mov
cmpl
mov
inc
sbb
cmpsl
lret
cmp
adc
push
cmp
out
iret
dec
xor
pusha
jne
loopne
mov
jb
in
add
negb
or
jae
loopne
push
lods
pop
lds
pop
enter
sub
jno
mov
mov
int3
inc
ja
out
rclb
and
inc
lahf
xor
add
sub
jno
pop
adc
clc
add
mov
mov
call
dec
cmpb
xor
mov
mov
jo
fcoml
push
sbb
jg
fldl
or
lods
add
jnp
jnp
xor
out
in
push
mov
or
cmp
mov
ss
xchg
pop
jo
ret
pushf
and
mov
mov
in
repz
push
jns
or
and
orb
inc
mov
stc
sub
mov
test
inc
xchg
mov
subb
push
mov
scas
jnp
lret
addl
xor
scas
xchg
xchg
imul
fcomps
leave
in
pop
shll
pop
imul
cmc
pop
jle
sub
xor
dec
jg
push
sub
leave
hlt
jno
ljmp
nop
mov
loopne
push
inc
nop
imul
sub
and
adc
xchg
xchg
inc
jae
sbb
pop
mov
or
mov
sbb
push
mov
inc
dec
xchg
insb
scas
ds
test
stos
sub
jp
dec
dec
idivb
ss
fldcw
jp
xor
xor
mov
cmpsb
xchg
xor
push
stos
mov
adc
push
lods
ds
mov
dec
test
jmp
xor
or
xor
loopne
lods
and
pushf
push
mov
in
test
push
inc
mov
dec
cmpsb
xor
and
mov
sbbb
cmp
push
xchg
xchg
out
adc
push
cwtl
call
dec
stos
and
daa
dec
shrl
lock
test
test
and
dec
divb
and
loope
xlat
imul
and
push
and
jae
pop
mov
xchg
dec
out
cld
jae
popa
rorl
mov
stc
push
lahf
pop
test
pop
std
add
loop
ret
xchg
jl
xlat
mov
inc
addr16
inc
insl
imul
addr16
mov
hlt
inc
mov
data16
inc
popf
mov
add
pusha
stos
inc
ja
negb
neg
push
jge
arpl
inc
mov
mov
sbb
lret
test
insb
pop
push
push
fildll
xor
jbe
aaa
xchg
cmpsl
add
imul
jb
mov
xor
xchg
push
and
and
push
mov
or
mov
sarb
mov
daa
cld
xchg
cmp
ret
sub
ret
insl
push
pop
dec
cmc
sbb
addl
xor
jne
mov
scas
out
jp
xchg
aas
mov
int3
sarb
jecxz
movd
hlt
or
mov
sub
call
pop
in
cmpl
cmpsl
jmp
rorb
or
mov
shlb
js
jmp
aas
shr
ret
push
jne
pop
cmp
add
loopne
fwait
push
dec
pop
push
xchg
push
and
cli
sbb
xor
inc
jnp
lods
test
xor
jae
push
fldcw
aad
pop
sub
jns
shrl
xchg
mov
inc
mov
inc
pushf
sbb
and
mov
outsl
scas
jl
fists
int
mov
out
cmp
push
xchg
sbb
xchg
lds
sub
xchg
jmp
ret
xchg
mov
jl
dec
bound
jg
fisubrs
lret
gs
pushf
cs
inc
inc
test
enter
push
imul
cmp
lock
scas
leave
add
popa
pop
lds
and
in
add
mov
sub
imul
arpl
lods
je
daa
xchg
sub
inc
inc
lods
sub
ret
enter
sarl
jle
fsubrp
pop
fdivrs
jg
inc
loope
sub
testb
jl
lock
pop
sbb
mov
and
addb
scas
pop
mov
test
sahf
pop
or
sub
test
mov
test
iret
into
and
mov
jae
out
xlat
aam
sub
stc
push
stc
xchg
and
fisttps
or
aad
enter
sub
adc
mov
add
mov
ds
insl
mov
or
test
clc
push
cmp
mov
mov
sub
fwait
clc
fwait
sbbl
mov
cmp
xchg
mov
jecxz
ss
dec
fcmovbe
xor
dec
push
mov
movsb
jns
push
into
mov
insb
inc
into
pop
stos
mov
lods
inc
mov
xchg
lret
out
mov
adc
jb
push
sbb
lock
test
cld
inc
ret
outsb
hlt
jns
popl
pusha
push
inc
xchg
out
xchg
xchg
sti
push
jo
imulb
xor
rcrb
and
jg
adc
mov
mov
and
push
test
pop
insl
test
inc
insl
out
jmp
pop
inc
movsl
mov
cmp
adc
adc
shl
sub
dec
pop
sub
xchg
js
ror
les
in
cmp
movsl
test
cld
fstpl
xchg
lock
arpl
inc
js
out
fldt
mov
dec
test
dec
sahf
pop
mov
out
decl
sti
orb
imul
adc
imul
inc
mov
jge
movsb
out
test
sbb
pop
mov
cltd
jb
scas
dec
and
vxorps
es
or
call
sti
imul
adc
ja
int
sub
test
imul
push
aaa
mov
add
repz
mov
out
mov
or
scas
sub
les
fistps
sbb
push
mov
mov
mov
pop
add
clc
flds
into
jo
aaa
pop
loop
test
ret
je
pop
and
xchg
aaa
popf
arpl
addr16
sbb
test
xchg
out
fs
xchg
xor
push
xchg
cli
pop
lret
inc
mov
lahf
loop
add
jecxz
jle
dec
and
aam
shl
lds
mov
jnp
push
sub
mov
mov
lcall
out
sarb
out
xchg
add
push
and
mov
imul
add
add
add
mov
mov
mov
gs
cmc
insb
or
in
add
ficoml
out
daa
out
sbb
push
jno
cmp
mov
xchg
fwait
pop
loope
fdivrl
jge
xlat
rcll
dec
push
int
adc
mov
adc
and
xchg
jmp
fildll
inc
jl
mov
dec
mulps
xor
ss
or
dec
mov
aad
and
sub
cwtl
mov
mov
inc
hlt
shlb
jno
aaa
cmp
addr16
outsb
xor
pop
dec
adc
mov
or
ljmp
scas
shl
jno
stc
sahf
movsl
sbb
fistpl
mov
flds
sbb
pop
cli
push
mov
xlat
cmp
mov
ds
mov
aas
or
xchg
nop
enter
xchg
adc
aam
add
pop
int3
push
cmc
call
jb
pushf
mov
push
adc
outsl
dec
insl
int3
fwait
adc
addr16
add
int3
lods
add
ret
std
leave
fcos
inc
add
jg
jne
mov
out
and
sbb
outsb
adcl
adc
inc
dec
mov
push
inc
jno
add
cli
clc
and
push
mov
mov
daa
in
sub
mov
cmp
lahf
int
add
sub
data16
lods
dec
pop
xchg
push
ds
daa
mov
dec
js
je
sub
or
les
inc
sti
mov
out
dec
pop
sarl
inc
jg
movswl
sub
cli
sbb
push
lods
or
pop
add
nop
mov
inc
lods
jl
fiadds
stc
in
cwtl
pushf
pusha
stos
push
fsub
imul
cmp
jo
jmp
jbe
adc
lods
call
mov
nop
test
fmuls
jl
adc
stos
dec
imul
repnz
leave
fdivrs
mov
test
ljmp
cwtl
sti
cmp
xor
dec
js
dec
add
outsl
mov
xchg
mov
aad
pop
and
into
addl
dec
rcrb
dec
lret
scas
mov
stos
mov
jle
out
pop
or
mov
shl
adc
sbb
sbb
outsl
test
aas
mov
pop
std
les
loopne
outsl
test
push
push
jmp
fimull
insl
jmp
sub
ja
pop
sbb
sub
cmp
loopne
jmp
fs
out
xor
xchg
cmp
inc
adc
repnz
aad
in
xchg
sbb
mov
add
xorb
cmp
andb
cld
sub
lock
pop
in
imul
aad
pop
bnd
and
sub
and
out
pop
xor
jmp
jecxz
jo
pop
notl
mov
int3
ret
scas
fidivl
divl
bound
lock
loop
add
aam
incb
imul
pop
cwtl
scas
add
push
lret
xor
shlb
dec
jecxz
mov
sbb
cmc
xchg
or
jp
inc
or
inc
leave
imul
pop
dec
ret
push
mov
repnz
or
xchg
sbb
pop
ds
inc
inc
icebp
pushf
fnstenv
xor
jb
sub
and
adc
in
pushf
push
fldcw
lds
cli
scas
and
pop
sub
jno
inc
cmp
mov
pop
and
xor
jp
fwait
xlat
fmul
in
cli
popf
xchg
in
cmp
std
push
lret
movsl
mov
loopne
data16
iret
cmp
pop
cli
mov
inc
aaa
jmp
jl
ret
test
fistps
sbb
pop
mov
pop
test
xor
and
and
push
into
add
pop
pushf
scas
ds
sti
add
xchg
mov
pop
push
loope
mov
pop
sub
pop
jl
push
mov
add
push
jecxz
fwait
push
aas
addr16
gs
inc
gs
ficomps
iret
push
jne
jmp
int3
push
and
dec
fisttps
hlt
outsl
sub
push
addr16
fstpt
icebp
rcr
out
sub
cmp
popl
xchg
jmp
sahf
sub
mov
das
fwait
mov
push
mov
fstpl
xchg
sub
call
xchg
fdivp
das
les
enter
fistl
adc
push
dec
add
not
rorb
std
lret
rolb
sahf
fstps
xchg
mov
testl
jae
mov
cmpsl
lds
psllq
xor
pop
and
add
cmpsl
or
or
mov
inc
fcom
insl
nop
lods
hlt
mov
push
pop
mov
xlat
repz
addr16
and
mov
sti
fdivrs
adc
scas
repnz
and
sarl
xor
ljmp
push
push
nop
pop
iret
or
cmc
sbb
dec
mov
in
das
ficoms
sbb
push
repz
add
and
cmc
lods
scas
cld
jmp
jne
mov
in
xchg
mov
shll
pop
mov
mov
inc
mov
jp,pt
out
jle
das
pop
rol
mov
push
pop
fists
and
call
push
scas
das
adc
push
and
outsb
es
add
repz
cmp
adc
adc
into
div
push
movzbl
cmp
inc
popa
dec
xchg
xchg
loopne
push
repnz
outsb
adc
fisubl
push
cwtl
je
dec
cmpsb
lods
pusha
outsl
or
xchg
sub
pop
pop
or
mov
stos
daa
xchg
sbb
jne
pop
dec
sbb
shll
hlt
movsl
inc
ds
mov
loope
call
or
sbb
jmp
es
mov
int
stos
sub
cmp
inc
notb
test
cmc
mov
insb
pop
pusha
inc
add
mov
repz
jle
inc
mov
jnp
dec
std
jns
push
mov
sub
jg
orb
lahf
add
loop
rcl
daa
cmpsl
push
mov
iret
stos
sbb
test
popl
add
sbb
ret
test
call
out
adc
sbb
dec
inc
cmpsb
cmp
cs
outsb
idivb
dec
mov
sbb
pop
outsl
dec
insb
decl
mulb
fistpll
punpckldq
mov
and
in
aad
daa
mov
cmp
cmp
call
imul
out
stos
insl
repz
push
or
push
xchg
jns
cmp
repz
pop
call
or
cmpsl
dec
xchg
out
adc
cltd
and
jbe
adc
adc
repz
sbb
inc
mov
js
mov
lock
fcmovne
dec
popf
push
inc
sbb
sub
or
fwait
aam
in
xchg
add
xchg
pop
int3
adc
cmp
adc
jnp
call
xor
ret
jb
popf
imul
out
inc
fimull
xor
mov
or
jle
xorl
sub
ret
movsl
int
mov
outsb
jne
inc
pop
dec
add
dec
or
out
push
or
inc
cld
addb
xor
add
push
xchg
and
and
ss
outsb
dec
jmp
sbb
js
rorl
addr16
enter
sub
jnp
bound
mov
leave
pop
mov
push
out
sahf
insl
xor
jne
lea
clc
adc
leave
inc
sahf
inc
dec
push
xor
data16
adc
mov
test
push
cmpsb
mov
sbb
jnp
cmp
sbb
in
sub
ret
inc
lock
sub
and
fidivrl
cmc
pop
sub
inc
mov
mov
outsl
fcomi
aad
sub
cli
xlat
je,pn
adc
insl
sahf
hlt
insl
push
xchg
aaa
repnz
xor
mov
dec
dec
and
out
mov
rcr
lods
sbb
mov
xchg
scas
mov
adc
jle
js
xchg
sbb
outsb
ret
pop
sub
inc
push
es
lret
test
dec
aas
jo
xchg
fiaddl
push
sbb
xor
xor
jno
popf
out
ljmp
or
dec
bound
xchg
das
push
xor
scas
repz
sahf
sahf
mov
cmp
outsb
push
insl
or
adc
rcl
dec
fists
add
fadds
addl
dec
inc
stc
sub
mov
loopne
leave
fs
mov
xchg
jmp
lcall
dec
jecxz
or
cmp
xor
iret
sarb
mov
jo
loop
pusha
in
inc
or
sub
test
popa
push
and
cmp
addb
push
jae
sub
testl
jnp
insl
sbb
les
cmpsb
adc
aad
jo
aad
sbb
hlt
loopne
mov
cmp
xor
andb
out
flds
popa
jne
imul
sub
aam
clc
cmp
test
das
cmc
sbb
adc
dec
divb
lea
jnp
stos
mov
jg
popl
mov
push
dec
movsb
out
fwait
sub
inc
mov
adc
push
lock
mov
and
inc
mov
mov
and
nop
jb
std
jmp
push
outsl
or
push
add
imul
ds
ljmp
push
lcall
xchg
or
push
lret
imul
pop
xor
cs
fistl
std
jnp
sbb
jbe
and
pop
mov
and
cmp
leave
pusha
ret
orb
data16
add
in
adc
mov
or
dec
sub
fstl
ljmp
xchg
or
das
addr16
scas
nopl
stos
push
insb
pop
jp
mov
xor
cmp
out
mov
mov
stc
cmp
mov
jmp
cmp
push
add
popf
jne
mov
add
sub
fwait
sub
push
and
outsb
adc
lods
sbb
sub
into
xchg
mov
mov
sub
dec
and
lcall
mov
lret
ror
in
mov
xchg
xor
inc
push
in
js
and
jbe
enter
inc
sub
adc
sub
lret
imul
mov
dec
cwtl
stos
rorl
xchg
pop
jge
xor
push
sub
jns
lds
jnp
loop
xor
xchg
dec
lods
mov
cmp
enter
minps
in
repz
imul
lea
cmp
ljmp
sbb
mov
sbb
adc
popf
cmp
jb
stc
clc
lret
or
lods
adc
nop
sbb
mov
enter
push
pop
mull
adc
sbb
daa
stos
adc
push
das
in
jo
pop
rcrl
std
lods
jg
mov
rcl
les
cmp
and
xor
popa
pop
sub
jmp
jns
push
pop
xchg
mov
add
inc
xchg
cwtl
shrl
loop
bound
test
flds
jmp
jl
loopne
xor
out
cmp
adc
ja
xor
cmp
mov
int3
idivb
push
add
add
cmpsb
dec
add
insl
pop
or
xor
jmp
rcll
fisubl
and
inc
daa
sbb
imul
dec
mov
paddb
mov
mov
mov
lcall
je
push
pop
rep
xchg
stc
in
out
fnstsw
clc
add
push
mov
cmc
fsubrl
insl
es
es
xor
das
in
cmpsb
jl
inc
fsubrl
push
add
dec
adcb
ret
xchg
ja
sahf
ds
mov
and
dec
cmp
data16
mov
jle
mov
adc
dec
or
xchg
pop
xchg
stos
in
xchg
aas
fldenv
adc
cwtl
push
cltd
xchg
imul
iret
call
cmc
sub
mov
cs
mov
icebp
out
push
sub
out
ss
pop
adc
xchg
mov
sbb
out
ret
in
sub
jbe
push
sub
jno
hlt
mov
xor
lods
mov
outsl
jno
out
lods
sub
jge
dec
fldt
scas
jp
jl
cmp
leave
mov
mov
scas
xor
cmp
enter
in
pushf
pop
xor
push
jecxz
cmp
int
mov
popf
stos
cmp
inc
mov
rolb
gs
insl
jne
sbb
push
jo
inc
xchg
pop
fwait
inc
insl
push
mov
out
mov
cli
pop
in
xchg
repnz
mov
test
mov
jb
cltd
add
dec
test
pop
and
sti
scas
imul
dec
std
clc
xor
xchg
jl
jmp
inc
inc
cmp
mov
xchg
cmpb
je
cli
loopne
popa
iret
out
or
push
jb
lea
push
bound
jl
sub
test
mov
mov
adc
out
addr16
adcl
imul
fsubrs
add
and
inc
shl
out
mov
dec
daa
aas
imul
pop
pop
ficoml
popa
test
xlat
adc
xchg
loopne
jmp
sbb
or
daa
sarl
ficomps
nop
outsl
dec
mov
out
addr16
imul
xchg
ret
xchg
mov
lcall
sbb
adc
pop
rdmsr
fidivl
sub
pop
jnp
aam
cmp
mov
icebp
cwtl
imul
cmp
mov
lret
rep
xchg
andl
popa
xchg
jnp
les
cmp
sub
fsubrp
mov
and
testl
ljmp
add
xor
sub
xchg
add
push
xchg
iret
imull
rclb
out
clc
data16
dec
je
adc
cmp
cltd
sbb
xor
inc
insl
lds
outsb
xor
jbe
into
adc
iret
cwtl
jg
push
sbbl
imul
fidivrl
mov
adc
sub
pop
pushf
sub
mov
dec
pop
pop
mov
mov
xchg
sbb
push
inc
xchg
mov
out
shlb
lds
mov
push
jge
je
insl
pop
sti
cs
pop
cld
lret
int
or
add
hlt
pop
aaa
add
sbb
ret
mov
out
sub
punpckhwd
add
arpl
pop
jmp
cli
mov
cs
xchg
insl
lahf
ret
or
sahf
scas
jnp
mov
fsubl
ror
clc
inc
xchg
fwait
pcmpeqd
daa
mov
inc
dec
dec
or
test
bound
dec
and
in
cld
pop
add
mov
mov
setbe
mov
stos
pop
sbb
les
imul
jg
ja
jle
inc
jmp
stos
pop
mov
ret
adc
repnz
rcl
mov
aad
xchg
pusha
xchg
enter
mov
pause
test
ds
out
pop
int
pop
sub
pop
mov
push
mov
and
inc
outsl
dec
sbb
lods
cld
pop
mov
jno
stc
xchg
in
jno
xor
arpl
cli
inc
cmp
pop
push
and
mov
ja
xchg
push
or
adc
adc
cs
xchg
pop
cmp
stc
adc
mov
aaa
pop
lock
mov
cmp
xor
add
inc
mov
or
icebp
push
sbb
mov
div
shlb
cmp
mov
add
loopne
cmc
ja
sub
mov
xchg
pop
mov
adc
xor
inc
lock
shlb
mov
mov
iret
movsb
mov
idivl
pop
dec
out
outsl
mov
pop
xchg
push
rol
scas
out
clc
push
bound
mov
fildll
xchg
testb
mov
inc
in
pushf
xchg
xor
xchg
add
mov
mov
outsb
ja
std
popa
cld
sub
inc
push
cmpsb
sub
jnp
std
loope
sbb
out
stos
pop
adc
jmp
movsl
sahf
idivb
pushf
insb
xchg
pop
nop
shl
add
mov
xchg
sarb
adc
sub
cmc
nop
mov
sub
in
in
add
pop
outsl
rcrl
test
lret
les
loop
xor
cmp
add
add
cmc
sbb
test
push
leave
add
insl
dec
aad
pop
jle
and
pop
or
dec
sub
xchg
and
in
push
hlt
mov
xor
dec
pop
in
xchg
mov
push
mov
jp
addl
push
mov
pusha
popf
cli
pop
mov
add
adc
or
imul
inc
out
das
enter
push
push
mov
inc
mov
sahf
dec
outsl
mov
push
jae
fisttps
cs
adc
pop
pop
adcl
ror
xchg
cld
int
xchg
aam
out
out
push
sub
sbb
lock
icebp
pop
mov
sub
out
test
shll
lods
aaa
testb
adcl
jbe
push
cmp
stc
insl
icebp
lock
jge
js
mov
lods
inc
loopne
out
pusha
loopne
sbb
scas
push
mov
in
js
pop
dec
sahf
lahf
add
jmp
pop
sbb
sbbb
out
push
push
adc
test
stos
jl
mov
dec
xchg
pushl
adc
xor
pusha
inc
aaa
jg
std
loopne
cwtl
imul
jns
sub
test
mov
cmc
cmc
xor
inc
push
mov
and
lock
sub
mov
ret
out
cmpsb
pop
js
push
ja
inc
jne
sbb
adc
xchg
adc
divb
inc
fcomps
negl
push
negl
sti
mov
shl
aaa
int
sub
pop
scas
mov
dec
mov
dec
xlat
pop
shrb
mov
adc
or
pop
jl
inc
js
mov
jbe
popf
fnstenv
add
and
xchg
mov
mov
pop
jge
mov
pop
outsl
out
mov
mov
das
xchg
jo
inc
fwait
jb
sbb
adc
repnz
xchg
lahf
jae
jl
movsb
aad
cmp
mov
iret
add
pop
dec
pop
popf
adc
sbb
pavgw
xchg
xchg
gs
in
inc
jmp
shrl
test
dec
addr16
sahf
cmp
daa
loopne
inc
jnp
dec
jne
cmp
add
or
mov
fldenv
cmp
test
xor
inc
jo
or
mov
and
rep
sarl
popa
or
xchg
jle
les
out
fs
icebp
aad
popa
call
pushf
cmpb
cli
pop
and
cmpsl
mov
lret
mov
fisubs
rclb
sbb
mov
jbe
push
push
daa
mov
mov
lods
subb
cmp
subl
xor
aad
cmp
dec
lret
adc
mov
xchg
imul
inc
test
cwtl
dec
mov
xor
cmpsl
enter
daa
or
dec
push
pop
add
sub
aaa
mov
ljmp
adc
ret
pusha
call
sub
iret
push
bnd
out
add
jnp
fcmovb
mov
mov
mov
jo
xchg
inc
je
pop
jle
adc
pop
andb
add
das
test
out
or
int3
xchg
mov
xor
outsb
add
add
popf
dec
push
loopne
out
push
and
add
test
push
mov
enter
xchg
push
loopne
push
pop
xchg
cmp
jae
lret
adc
pushf
xlat
sbb
sbb
daa
sahf
mov
jbe
jl
jb
cmp
push
push
sub
dec
aas
or
xor
add
xchg
jo
adcl
clc
lahf
pop
push
iret
pop
mov
xor
or
xchg
enter
adc
test
mov
jo
jae
cmpsl
mov
rol
lea
call
and
fwait
loop
push
mov
out
and
cmp
xor
movsb
int3
push
lock
mov
and
mov
sub
xlat
dec
scas
stos
xor
cld
lods
scas
sub
pop
mov
movb
adcl
divl
adc
adc
nop
ss
adc
pop
xor
inc
lahf
xor
int
xor
loopne
mov
dec
xchg
jne
enter
jbe
mov
icebp
sti
rol
and
ret
mov
jb
ror
out
lea
repnz
and
fistl
jne
sub
mov
push
mov
push
or
jle
in
xchg
or
movsb
xlat
mov
arpl
xchg
iret
in
mov
mov
or
xchg
and
push
std
xchg
sbb
mov
fisttps
xchg
jecxz
iret
cmp
je
pop
or
nop
sbb
test
stc
mov
pop
test
push
mov
mov
jae
push
std
sbb
sbb
jae
jne
fwait
in
repz
dec
insl
or
aas
mov
fldl
jmp
shl
lcall
testb
enter
pop
push
inc
push
sub
gs
lods
xchg
call
iret
enter
xlat
mov
mov
push
push
pop
add
adc
mov
mov
push
jp
leave
ja
les
cmpl
xor
shl
lret
cli
mov
jno
stc
jmp
lret
pop
dec
pop
mov
std
js
push
cltd
and
icebp
mov
mov
stos
test
cmovnp
rcll
jg
movsl
push
push
outsb
push
repnz
in
pop
or
jo
mov
mov
and
push
push
dec
ror
int3
mov
sahf
xchg
jle
adc
jnp
adc
stos
fnstsw
cltd
mov
jl
aaa
adc
mov
adc
int
add
mov
push
sub
xor
sub
icebp
jg
cli
roll
xor
sbb
lods
stos
movsl
test
fmuls
inc
je
push
cmp
mov
mov
mov
ja
lahf
ret
mov
xor
popa
daa
into
cs
dec
xchg
xchg
enter
mov
sbb
arpl
ret
mov
cmp
cmp
hlt
add
add
sub
and
fstpt
or
mov
pop
jg
pop
mov
push
push
xchg
shrl
inc
mov
sbb
dec
mov
fnstenv
pop
cmpsb
mov
xorl
insb
xor
insb
push
inc
jle
sub
and
les
inc
leave
inc
nop
add
lahf
icebp
dec
testb
dec
mov
imul
sub
xlat
aam
sbb
push
out
leave
test
popa
xchg
outsl
mov
add
adcb
scas
ret
sbb
adcl
xchg
xor
mov
shrb
xchg
inc
stos
mov
xor
icebp
xchg
inc
jmp
cmpsb
shr
xchg
sub
push
js
cmpsl
jo
adc
incl
dec
xor
jmp
adc
imull
adc
mov
sbb
rcrb
popf
arpl
int3
cmp
push
loope
clc
pusha
sub
adc
add
into
mov
push
test
imul
mov
movsl
in
sub
enter
loopne
in
in
mov
dec
adc
sub
pop
outsb
jns
jae
inc
sbb
testl
jae
add
pop
adcb
std
mov
add
pop
mov
movsl
ds
das
rcrl
lahf
lret
adc
sbb
mov
mov
or
int
pop
loopne
xor
pop
cmc
xlat
scas
in
les
aas
enter
in
test
fildll
xchg
outsb
mov
aad
and
xor
pop
dec
stos
fbld
or
push
sbb
mov
push
icebp
divb
cmpsb
mov
dec
jae
jno
hlt
out
in
lahf
mov
ljmp
mov
rcrb
add
std
divl
jo
daa
pop
shll
bound
jno
dec
or
je
push
add
mov
out
es
leave
inc
mov
ja
stos
call
std
xchg
or
and
adc
call
movsb
fiadds
lock
std
aaa
pop
sbbl
jo
jl
ljmp
mov
push
in
and
jno
mov
popa
pushf
push
mov
xor
fimuls
ds
lcall
mov
fwait
mov
sub
cmp
push
jg
loope
xchg
fucomip
add
xor
or
leave
xor
push
mov
push
mov
nop
cmp
fwait
and
ljmp
shll
or
inc
fistps
jmp
mov
jo
mov
les
jne
cld
mov
fildll
mov
out
jmp
ret
add
mov
ljmp
and
add
imul
dec
inc
inc
scas
dec
sub
fsubs
pusha
inc
movsb
lret
int3
addr16
fsubl
popf
mov
jo
xchg
arpl
shlb
sub
pop
fwait
lds
cltd
inc
andl
loope
sub
pop
out
lret
int
pop
lret
rcr
sub
mov
cmp
xchg
leave
cmp
insb
testl
cmp
inc
mov
repz
outsb
and
sbb
dec
inc
fdivs
sbb
pop
cmpsl
pop
in
test
push
aad
pop
pop
lret
into
dec
sub
lret
xor
push
cmc
lock
ds
cmp
or
rcrb
aaa
jecxz
cli
xchg
xchg
and
repz
mov
fmull
jno
or
dec
cmpsb
lcall
cmp
cwtl
push
scas
movsb
roll
mov
and
lods
adc
std
cmp
inc
xchg
sbb
inc
sbb
and
enter
scas
push
outsl
mov
subb
call
leave
ret
pop
shrl
inc
lret
fidivrs
mov
pop
pop
ljmp
mov
in
mov
fwait
sti
inc
inc
icebp
or
xor
jle
adc
or
jle
jmp
sar
push
mov
sub
mov
out
mov
sbb
cmpsb
pop
gs
ds
stos
pop
adcl
pop
loopne
fwait
and
inc
mov
aam
pop
repz
cmc
sbb
fimuls
jl
repz
sub
ljmp
jno
push
fsubrl
push
pop
dec
scas
es
mov
out
ret
subl
mov
xchg
mov
es
cmp
leave
xchg
loope
push
mov
sahf
data16
lds
sarb
cmp
hlt
dec
pop
enter
adc
inc
jb
out
out
or
subl
mov
add
stos
popf
push
shrb
ja
jb
div
add
pop
outsb
mov
popa
fnstsw
and
pop
inc
cmp
add
and
stc
jbe
ficoml
das
push
dec
ja
orb
push
popa
mov
inc
lods
jae
out
arpl
push
xchg
adc
mov
pop
std
push
sbb
mov
mov
aad
lods
dec
jnp
mov
fimuls
aam
popa
sbbb
in
icebp
test
add
pushl
jmp
shrb
or
sbb
out
pop
pop
outsl
mov
mov
mov
adc
jl
movsb
xchg
inc
test
adc
je
data16
add
in
outsl
and
fbstp
xchg
fbstp
ret
mov
xor
pushf
test
test
jmp
and
inc
push
dec
jne
and
inc
enter
xor
sub
movsb
sub
stos
clc
out
rol
jl
mov
pop
out
arpl
and
lahf
icebp
out
les
int
cvtps2pi
xor
xchg
xchg
test
rcl
cwtl
out
mov
inc
push
cltd
jb
jne
stc
adc
pop
push
outsb
cmpsb
sahf
pop
icebp
test
cmp
int3
fstpt
fldenv
roll
flds
imul
ds
arpl
outsl
inc
adc
addb
add
pop
icebp
push
mov
mov
sub
pusha
push
scas
scas
pop
pusha
mov
aam
sub
push
sub
les
xchg
push
jl
inc
cmpsl
sbb
jo
sbb
pushf
sbb
rorl
jb
cmp
cmpsb
imull
push
sbb
add
rorb
inc
sarl
xor
sub
out
inc
jb
in
mov
xor
addr16
in
adc
xor
popf
xchg
stos
adc
dec
sbb
add
sbb
lds
push
jo
mov
shlb
inc
out
cli
mov
mov
xchg
or
ljmp
in
lds
sarl
adc
add
scas
and
out
fdivl
hlt
divb
cmp
jnp
bound
inc
push
rcrb
xor
or
sahf
xchg
mov
rolb
pop
cld
push
out
jmp
lds
js
adc
cld
mov
or
into
mov
xlat
adc
mov
mov
loopne
or
or
sub
push
mov
mov
xlat
mov
imul
mov
mov
cmp
dec
enter
pop
sub
out
leave
ljmp
aaa
add
inc
cmp
dec
pop
int
inc
mov
cmp
pop
fdiv
leave
out
outsl
fisubs
xor
inc
inc
dec
xchg
sbb
out
stos
xor
lods
nop
push
push
stc
dec
out
testl
fnstcw
cmp
je
jle
ss
mov
mov
addb
ss
xor
loope
mov
sub
pop
ret
decl
jbe
jne
push
xor
and
cwtl
cld
add
mov
enter
ja
xchg
rcrl
mov
rcll
add
dec
dec
push
and
mov
dec
clc
nop
pop
jecxz
fmuls
subb
test
pop
mov
leave
sti
call
fisubrl
orb
test
push
xor
mov
inc
add
and
mov
imul
inc
lahf
into
jl
pop
je
mov
dec
lods
push
mov
adc
xchg
mov
xchg
xor
push
pop
push
pop
outsl
pop
xor
adc
cmp
mov
lods
ret
cmp
xchg
fdivrl
xor
ljmp
mov
and
popf
int
add
push
cmc
jecxz
push
clc
movsl
in
xor
mov
xor
adc
fdivrp
pop
pop
in
fistpl
xor
int
test
mov
in
inc
dec
push
or
ja
popa
loope
xlat
adc
std
mov
hlt
dec
adc
dec
iret
in
add
mov
xchg
test
pop
dec
push
push
fmul
popa
in
dec
fisubrs
les
mov
xchg
pop
or
dec
sub
sbb
daa
sti
jb
inc
pop
lods
push
add
mov
faddl
dec
gs
mov
mov
ss
mov
or
out
add
dec
inc
in
rclb
mov
loope
adcl
arpl
jbe
dec
sbb
fs
cmp
mov
sbb
xor
xchg
and
lods
iret
dec
gs
push
icebp
mov
fs
sub
push
nop
subl
mov
pop
mov
in
xlat
nop
pop
push
mov
xchg
jecxz
cmp
cmpsl
push
fucomp
arpl
pushf
mov
adc
repz
lret
dec
or
dec
movsb
xchg
xor
adc
mov
and
mov
jbe
sub
frstor
jbe
inc
mull
sub
push
orb
add
ret
cli
jg
or
pop
outsl
inc
xor
in
jg
or
or
pop
mov
xor
xorl
cmp
pop
in
cmpb
lcall
out
mov
or
hlt
ss
adc
xor
inc
cmp
sbb
stos
insb
mov
arpl
iret
mov
jae
lods
psraw
lock
mov
mov
mov
inc
out
inc
ja
insl
cwtl
pop
loopne
movsl
call
pop
lods
in
sbb
repnz
add
or
loopne
leave
movsb
sub
mov
sbb
pop
sub
mov
add
inc
sbb
test
ret
movsb
cmc
inc
xchg
test
dec
sbb
loop
jo
mov
movl
sub
shll
cwtl
jp
and
xchg
sbb
mov
jle
int
jnp
movsb
mov
mov
jmp
or
das
pop
gs
inc
fnstenv
out
or
out
xor
add
adc
add
je
jae
loopne
mov
and
adc
sbb
dec
fcmovnb
lods
hlt
cmove
insl
xchg
xor
imul
push
insl
dec
cltd
cmp
mov
push
sub
and
daa
loop
rcl
and
jecxz
rorb
cmp
mov
and
sub
push
pusha
pop
push
pop
adc
fisubs
sbb
mov
mov
adc
loope
push
enter
outsb
mov
push
sub
sub
xchg
inc
ljmp
test
lret
or
out
scas
add
out
pop
jnp
pop
xor
or
mov
jnp
xor
nop
jmp
in
popa
jecxz
dec
sub
test
mov
movsl
inc
inc
pushf
int
orl
xor
cli
orl
mov
imul
mov
sbb
bound
push
dec
cmp
shl
mov
jae
insb
decb
jge
jne
mov
push
jnp
xchg
cld
arpl
stos
insb
push
cltd
jb
or
xor
fsubrp
xchg
adc
jl
icebp
xor
xorl
iret
adc
out
sub
cmp
cmpsb
mov
mov
lock
cmp
mov
mov
cmp
sbb
lods
xchg
fisttpll
andl
sbb
jp
rol
push
pop
sub
sub
out
cmp
dec
and
in
cmp
jle
xor
xor
sub
cmpsl
push
add
pop
std
add
sbb
or
add
xor
gs
leave
test
into
in
dec
and
out
jae
mov
lret
mov
xor
mov
jmp
add
adc
es
pop
arpl
scas
rolb
xlat
jb
push
cmp
and
arpl
mov
aad
xchg
and
in
loopne
pushf
lds
mov
repnz
sbb
out
pop
xchg
shlb
mov
cld
sub
int3
gs
lods
mov
inc
push
icebp
imul
aad
dec
es
xor
imul
mov
jl
inc
pop
push
jg
sub
mov
aaa
shlb
lret
aad
arpl
loop
scas
add
mov
movsb
pop
xor
movsb
jmp
cmpsb
lretw
fimuls
mov
in
movsb
dec
xor
adc
cli
push
out
cmp
and
cltd
mov
xor
push
fldcw
jno
adc
push
jo
jbe
scas
push
cmp
lock
int
and
mov
fimuls
loope
inc
popf
jg
add
pushf
cs
es
clc
in
lock
subl
shr
outsb
pusha
push
lock
and
imul
cmp
std
sub
dec
inc
inc
and
cmp
adc
int
mov
fs
lods
dec
pop
int3
jo
addr16
mov
stc
in
mov
mov
cs
imul
jge
aam
and
add
int3
ja
lods
insl
hlt
xchg
jle
xchg
push
addb
adc
nop
orb
mov
pusha
shlb
dec
sbb
std
fstl
pop
mov
mov
add
sub
xor
and
cltd
repnz
cmpb
sarb
and
and
adc
std
and
in
pop
xlat
testb
jmp
adcl
das
pusha
popa
nop
bound
std
out
out
fucomp
movsl
mov
repz
out
enter
mov
or
not
jnp
aaa
into
pop
add
daa
rcl
rcrb
lods
sub
sub
outsb
sub
movsb
into
lret
repz
xor
cmpsb
cwtl
cmovle
mov
pop
mov
cmpsl
into
imul
dec
dec
insb
sub
inc
rcl
adc
dec
mov
int3
xchg
mov
dec
mov
cmp
lods
inc
jne
push
xchg
push
adc
mov
inc
loope
test
and
add
jl
in
in
cmc
or
inc
mov
jae
sbb
jmp
sbb
sub
enter
subb
imul
fistl
sbb
xchg
cmp
cltd
sub
ds
cmp
arpl
push
inc
sub
lcall
scas
cmc
les
das
mov
lea
mov
ret
mov
fwait
jno
mov
and
loop
inc
or
xchg
loopne
insb
push
pushfw
dec
or
add
jne
ja
xchg
cs
fisttps
not
jbe
sbb
xchg
cld
mov
fidivs
push
mov
or
out
cli
mov
fs
or
or
sub
sbb
fs
inc
xchg
std
mov
push
loop
mov
nop
div
mov
jp
jno
testb
or
mov
insl
fldcw
push
mov
das
es
xchg
gs
insb
dec
jecxz
xchg
test
scas
aas
adc
test
hlt
fwait
icebp
mov
scas
test
iret
outsl
pop
daa
out
xchg
cmpsb
je
pop
xor
std
and
dec
inc
push
pop
add
popf
push
mov
pop
test
popa
and
subb
add
adc
es
adc
mov
shrb
rcl
push
out
sbb
xchg
jns
push
inc
cmp
cwtl
push
cli
xchg
sub
dec
lods
scas
add
repz
aad
add
lahf
inc
roll
sarl
lcall
mov
or
jb
sub
in
je
sub
and
xchg
in
ret
lea
and
pop
sub
divl
sbb
xchg
add
rcr
cli
pop
jns
out
shrl
in
cld
add
jmp
aas
out
leave
sub
and
loope
adc
data16
hlt
lret
sbb
stc
push
int
les
out
int
movswl
andl
lods
mov
jne
mov
sub
ss
gs
xchg
fdivl
adc
jnp
mov
test
pop
sbb
pop
rcll
or
roll
mov
stc
in
xchg
mov
sub
jp
arpl
xor
test
inc
mov
mov
inc
jle
faddl
pop
ljmp
add
sub
mov
cmp
jnp
jp
into
pop
bound
popf
xchg
sahf
adc
jge
add
enter
shll
stc
mov
mov
cmp
das
pop
arpl
test
nop
popa
push
inc
cmp
mov
pop
or
andl
aam
mov
fidivs
cld
xchg
sub
cmp
aaa
pop
jbe
mov
push
or
cltd
or
dec
sarl
into
mov
lods
mov
mov
leave
aam
clc
insl
dec
jp
sub
mov
jne
add
mov
sub
sbb
jecxz
lret
notl
sbb
test
adc
push
or
mov
scas
dec
gs
and
xchg
frndint
pop
stos
and
popf
out
nop
out
aas
or
pop
jp
orl
fstp
jae
aas
push
test
in
lods
mov
cli
cmp
push
iret
and
xor
mov
adc
push
inc
mov
cmp
aaa
clc
mov
xchg
outsl
push
mov
push
adc
push
mov
pop
clc
lods
or
jae
je
jg
jp
outsb
fcmovbe
call
rolb
test
pop
cltd
xor
shl
test
jb
outsl
jne
and
jbe
mov
xor
mov
in
insl
hlt
xor
cld
nop
adc
ds
or
imul
push
in
inc
mov
jno
bound
lret
jb
dec
push
mov
push
not
xchg
add
cmp
xor
aam
pop
fcmovnbe
shlb
mov
mov
adc
mov
ret
dec
dec
loop
cwtl
adc
mov
test
or
dec
out
sbb
inc
in
rcrl
pop
mov
push
std
loopne
sbb
or
lahf
lea
xchg
scas
jne
lret
xchg
and
lds
mov
or
cmpl
adc
les
sbb
jmp
sub
xor
sub
fnsave
sbb
bound
mov
or
sbb
lods
sub
repz
aas
add
pop
adc
lahf
enter
sarl
xchg
fwait
cmp
out
loopne
add
cmp
sarb
lods
outsl
lret
iret
jo
cmp
std
stos
ds
push
pop
andb
mov
mov
leave
loop
ljmp
decb
sbb
movsl
fwait
push
xchg
fldt
add
xchg
mov
jg
jge
loope
ljmp
ja
adc
sbb
rcrb
inc
sbb
neg
xchg
movsb
popa
movsl
jno
mov
pop
rcl
inc
cmp
repz
xchg
inc
xchg
and
dec
add
xchg
add
fnsave
negl
repz
lret
jno
in
pushf
out
add
pop
dec
test
fs
cmpsl
fidivs
jmp
xor
into
adc
repz
xor
repz
pop
inc
xor
jo
popf
mov
pop
push
js
jg
gs
fcompl
dec
xchg
lret
cs
fiaddl
jns
lret
enter
aam
dec
jge
jge
testl
or
and
cmp
mov
lret
rcr
cmp
xor
mov
leave
jno
cld
push
mov
mov
adc
cmp
lret
fcmovb
fsubs
sahf
inc
jno
cmp
cwtl
or
mul
iret
cmp
movsb
mov
test
inc
stc
add
pop
mov
data16
insl
mov
inc
fwait
inc
cmpsb
stos
pusha
inc
sub
jne
cmpsl
mov
aad
je
push
and
jb
js
mov
fadds
lahf
xchg
insl
add
or
cwtl
leave
addr16
cs
add
xlat
cmp
outsb
gs
sub
hlt
add
cmp
sbb
xchg
xor
push
lcall
xor
in
fsubl
je
dec
mov
test
andl
mov
push
ja
in
and
mov
fmuls
repz
mov
jg
test
and
or
lret
ror
repnz
aam
leave
rclb
mov
xor
mov
popa
push
aas
cmp
test
mov
div
and
ja
cld
add
pop
fadds
xor
pop
add
jb
ljmp
and
adc
loop
sub
jno
mov
add
cmp
aaa
std
popl
in
shr
mov
sub
push
fs
xor
fisubrl
jmp
in
mov
test
dec
in
push
nop
mov
pop
jmp
vcvtpd2dqx
hlt
bound
mov
push
push
push
lahf
lahf
inc
or
mov
mov
cmp
and
ret
dec
pop
and
inc
sbb
pushf
fwait
int
outsl
insb
jo
dec
int3
mov
pushf
adc
sub
scas
lock
xor
mov
sub
xorb
fdiv
nop
test
arpl
out
mov
test
leave
ret
and
shlb
int
adc
xchg
enter
jl
mov
mov
cmp
inc
push
cmp
dec
mov
jle
mov
pop
fwait
lret
pop
jl
jae
add
repnz
cwtl
cmp
fxch
popf
cmp
js
dec
ret
loop
cs
push
push
lods
xchg
pusha
cli
cwtl
test
test
loopne
jecxz
jmp
popl
push
cltd
adc
inc
in
test
xor
in
adc
frstor
sbb
pop
mov
loop
xor
sbb
hlt
mov
mov
pop
jb
out
out
or
int
inc
ficoml
lods
push
mov
ficompl
std
faddl
loopne
movsl
push
sub
je
enter
fisttpll
sub
shlb
xorb
dec
mov
stos
ja
push
adc
push
adc
cmp
push
and
mov
scas
hlt
pop
hlt
sub
or
adc
int
jg
enter
les
jecxz
sub
pop
int3
adc
pop
fcomps
pop
cltd
lea
jp
in
pop
add
dec
pop
fxam
pop
xchg
data16
mov
dec
dec
js
cs
and
sar
ljmp
xchg
inc
sbb
repz
pop
subw
mov
add
call
add
fucom
movsl
mov
stos
int
sbb
or
sub
push
jmp
jb
into
cmpsb
sarb
and
addr16
jne
xchg
jbe
mov
mov
sbb
xchg
mov
or
sub
lods
jge
ffree
sbb
push
dec
pop
dec
in
aad
pop
pop
movsb
and
sbb
test
push
mov
dec
push
ja
mov
inc
shl
pop
xorb
leave
outsb
es
test
dec
cmc
inc
mov
sub
push
nop
xchg
movsl
aad
mov
mov
inc
adc
push
mov
adc
sub
fisubs
pop
pop
shlb
push
jne
ss
mov
add
stos
fnstsw
mov
lea
lret
jno
dec
les
psrld
mov
cmp
dec
mov
pop
jnp
mov
jns
les
dec
in
into
mov
add
popf
shrb
aad
aad
pop
xor
dec
stos
and
lods
pop
in
sbb
lret
negl
push
mov
pop
test
xor
adc
xchg
jg
xlat
dec
rorl
pop
lcall
push
shr
int3
filds
popf
jnp
dec
aaa
jp
adc
and
out
mov
test
cmovne
and
add
jmp
sahf
cmp
test
xchg
add
sahf
popf
jle
xchg
mov
fstl
mov
int3
loopne
leave
bound
xchg
add
sub
mov
xor
push
pop
inc
rcll
jecxz
int
ja
push
hlt
xchg
out
jmp
mov
repz
decl
push
sub
movsb
les
xorb
test
mov
dec
or
mov
popa
ds
repnz
shrb
xlat
cmp
inc
push
mov
inc
cmp
gs
mov
fs
dec
xchg
ret
mov
imul
enter
test
mov
mov
jb
cwtl
push
xchg
add
lret
dec
pop
ficomps
repz
dec
fbld
and
pop
or
mov
roll
jno
leave
inc
aam
cli
incl
xchg
iret
mov
jae
bound
sub
inc
mov
inc
xchg
cmp
mov
aam
fwait
jo
filds
jg
dec
scas
inc
inc
adc
and
lods
das
pop
ss
mov
xchg
jo
dec
mov
xor
lret
jge
sahf
dec
flds
int
adc
in
insb
xor
cmp
and
arpl
xor
push
aad
dec
or
mov
push
push
sbb
fsubrp
adc
stos
sbb
inc
mov
sti
imul
jl
and
mov
in
out
mov
xor
mov
mov
adc
sbb
leave
mov
or
mov
loopne
scas
mov
call
out
and
sarb
das
mov
mov
dec
jno
clc
mov
into
sbb
aaa
in
add
lea
loop
mov
and
aad
mov
jne
mov
dec
ljmp
xchg
popf
sub
and
sub
cld
lcall
xchg
cmpsb
into
jnp
test
mov
xchg
mov
jo
adc
clc
jne
aaa
xlat
out
ss
pop
pop
shr
adc
inc
ret
xor
pop
dec
cmp
sbb
sbb
push
xchg
dec
push
movsb
jle
ljmp
jne
ret
dec
dec
clc
cmp
cld
lahf
jae
jno
xor
xchg
mov
adc
add
pop
and
inc
push
popa
xchg
xor
pop
fld
add
push
cltd
xor
lock
cmpsb
lahf
or
sub
push
faddl
pop
xlat
fnstcw
sbbb
add
addl
pusha
loop
dec
popf
int3
movsl
or
mov
pop
mov
aam
mov
pop
push
movsl
movsb
xchg
loope
jnp
int3
aad
and
cmpsl
fdivrs
jo
and
das
sbb
sub
and
mov
adc
repnz
pop
adc
sbb
jbe
lock
fsubrs
mov
out
xchg
cs
ss
negb
ret
rol
push
imul
loopne
jp
rcrl
xchg
pusha
cmp
stc
add
mov
sahf
lret
push
insl
inc
mov
into
bound
out
sub
adc
es
pop
pop
or
jae
out
and
fs
int3
int
popf
sub
stc
xchg
xchg
inc
in
fsubrs
repnz
std
pop
mov
in
jmp
aam
inc
push
decl
lcall
cmpsb
pop
sbbb
inc
push
gs
mov
pushf
movsb
aas
icebp
orb
jle
xchg
lea
out
loopne
sub
adc
ds
shll
mov
lret
mov
into
sbb
cmp
sub
sbb
cmp
dec
lret
mov
loope
sbb
cmpsl
mov
cmp
dec
scas
sbb
into
dec
pop
jno
xchg
cmp
dec
xchg
mov
or
movsl
in
or
adc
mov
ret
shrb
pop
fwait
sahf
xchg
jb
lock
jp
sbb
adc
fcomi
inc
mov
mov
jo
js
pusha
daa
inc
in
daa
mov
leave
sbb
sbb
imul
bound
jecxz
push
fstpt
mov
xchg
out
xor
clc
inc
pop
jne
mov
cwtl
xchg
jmp
jnp
pop
and
stc
and
es
adc
js
addr16
mov
shl
call
jle
mov
xor
jg
clc
sub
rclb
les
incb
dec
dec
fistps
outsb
xor
das
xor
inc
inc
sbb
push
sub
push
mov
adc
out
jae
mov
nop
xchg
call
xor
mov
xor
mov
movsl
sbb
mov
sub
pop
add
push
lock
mov
push
and
iret
sbb
in
xchg
lcall
sub
int3
xchg
cmpsl
addr16
test
ror
cmp
fnstcw
adc
mov
ss
lcall
int
push
lahf
jns
sub
pusha
pop
jmp
dec
out
das
push
shr
stos
pop
cmp
neg
inc
pop
call
cmp
inc
jmp
ret
add
xorl
cld
mov
aad
sarl
cmp
sub
out
add
adc
adc
push
xchg
sbb
sbb
pushf
dec
enter
enter
shll
push
ret
ss
xor
sbb
mov
loope
mov
clc
mov
mov
addr16
ljmp
adc
xchg
lock
sar
je
xor
pop
scas
ret
inc
xor
and
rol
mov
push
sahf
in
dec
icebp
jge
lods
mov
xor
int3
dec
sbbb
movsb
xor
int3
jl
stos
cld
sub
and
mov
lods
shlb
or
cmp
dec
cmp
push
push
sub
stos
dec
les
mov
or
cli
cmp
repnz
sub
cwtl
sub
leave
push
mov
pop
mov
jnp
loopne
push
sub
outsb
push
into
sbb
dec
les
mov
pop
xchg
pop
mov
xchg
out
sub
bound
mov
outsl
int
pop
sub
xchg
lods
xchg
out
imul
sbb
stc
push
das
mov
rorl
push
jg
je
inc
mov
sub
push
mov
nop
fcoms
lcall
mov
jg
dec
stos
or
in
xchg
das
jmp
pop
mov
sbb
pop
jl
mov
xorb
shl
xchg
xchg
jge
push
mov
or
dec
stc
neg
sbb
xor
movsb
les
loop
cs
push
cmc
fnstcw
sbb
mov
divb
adc
sub
out
adc
sub
fucom
int3
lock
dec
shl
pop
jno
or
loop
dec
mov
mov
fstpt
jb
jae
xlat
mov
dec
xchg
push
insb
insb
xor
mov
jbe
mov
adc
add
push
lcall
push
movsl
inc
mov
xlat
fdivs
stos
xor
test
sbb
sub
subl
ljmp
testb
cld
adc
and
mov
inc
filds
adcb
jg
sti
out
test
call
je
hlt
mov
jg
or
pop
rclb
call
mov
xor
test
jg
cld
shll
negl
pushf
dec
lcall
xor
mov
xlat
pusha
jbe
inc
js
push
pushf
push
sub
push
and
cs
mov
adc
mov
fnsave
lcall
push
inc
icebp
stc
lea
shll
lods
adc
mov
aaa
ret
repz
adc
inc
sub
inc
and
cmp
stc
mov
jl
lea
add
int
bound
push
call
out
pushf
jne
xor
xor
push
lods
lds
dec
stc
dec
or
aam
xchg
adc
cmc
ds
lods
and
xor
fistpll
mov
pop
into
decl
fcomip
divl
sti
lds
jl
xchg
loopne
push
mov
das
js
push
xorl
je
xor
stos
mov
add
add
popa
loop
daa
arpl
shr
sbb
arpl
jnp
mov
popf
mov
mov
mov
lock
push
or
sahf
mov
jb
add
add
movl
xchg
xor
dec
shll
xchg
std
imul
out
test
add
pop
pop
jge
stc
jecxz
cmp
fsubl
jge
jae
cmpl
ret
cltd
lock
pop
sub
mov
stos
cmp
loop
jb
orb
push
add
jle
pop
mov
inc
test
rolb
pushf
shrl
aas
mov
int
mov
mov
add
enter
jb
mov
push
xchg
fisttpl
sti
mov
sub
in
sub
cmc
cs
dec
push
pop
mov
outsl
lahf
mov
cmpsb
inc
jbe
into
inc
lret
int
pop
mov
xchg
jno
inc
jle
jb
push
hlt
push
stos
jo
push
cmp
les
xchg
bound
jp
xor
test
mov
adc
xor
lahf
xchg
mov
jg
jle
cmp
xchg
push
scas
mov
pop
les
mov
sbb
dec
mov
das
rorl
or
mov
push
insb
sub
jno
pop
in
mov
dec
mov
popf
cltd
mov
testl
fs
sarl
mov
add
mov
mov
mov
xchg
test
cwtl
shrl
ret
and
jnp
daa
push
cmc
and
insb
jge
mov
out
dec
cmpsb
sub
cmp
xchg
nop
fwait
mov
adc
xchg
imul
inc
push
sbb
popa
shrb
inc
push
loop
es
mov
das
inc
pop
out
loop
jg
pop
rolb
sub
lahf
adc
repnz
sbb
in
std
es
inc
cmp
lea
dec
test
xchg
mov
lahf
inc
movsl
out
rcl
inc
cmpsb
imul
test
mov
test
push
test
push
sahf
lock
cld
insb
fs
jmp
icebp
pop
out
hlt
push
mov
sti
adc
mov
cmp
mov
cmc
adc
pop
push
lock
pushf
adc
jae
xor
test
cmp
sub
sub
mov
aas
pop
dec
xor
add
xor
adc
fmul
lock
lods
iret
dec
das
add
or
adc
fadds
stos
fucomi
lds
movsl
fidivrl
je
pop
cs
push
jge
xchg
shlb
adc
icebp
mov
sub
dec
add
fstl
mov
push
xor
and
movsb
in
sub
rorl
pop
jae
mov
dec
mulb
cltd
rcrb
decb
orb
sbb
nop
lea
mov
mov
into
or
orb
push
out
andb
int3
lods
pop
xor
repz
fsts
loopne
adc
in
sahf
cmc
push
sbb
fsubs
dec
cli
and
push
push
push
fstp
and
inc
cmp
das
jmp
xchg
mov
pop
rorb
aaa
enter
lcall
lock
mov
push
jl
sbb
and
pop
out
in
shl
mov
pop
aad
clc
cli
cmp
adc
jno
inc
dec
std
das
mov
push
or
sti
pop
jl
and
mov
pop
daa
or
scas
sarl
dec
mov
ss
xor
push
inc
fiaddl
fidivl
pop
out
cmpsb
std
icebp
inc
scas
adc
stos
daa
sbb
sub
fdivr
sbb
hlt
mov
sbbl
pusha
dec
and
loopne
pop
iret
mov
xchg
add
es
add
pop
push
cmp
lds
or
xchg
inc
lock
cs
xchg
or
sbb
inc
lods
pop
fucom
add
imul
aaa
filds
adcl
test
add
inc
push
in
ds
jnp
mov
push
outsb
jnp
mov
daa
out
scas
inc
lods
lret
movsb
subb
loopne
mov
out
mov
loopne
sti
jne
std
iret
decl
out
aad
dec
and
aaa
inc
in
mov
push
loop
into
sbb
ret
rcr
sub
loopnew
push
subb
sub
sub
xor
pop
xchg
mov
cmpsl
mov
repz
shrl
idivl
dec
xor
ret
iret
aad
ss
cmpsl
or
sbb
mov
shrb
push
or
jae
lcall
fnsave
jmp
cmp
and
xchg
sbb
push
add
xchg
mov
fs
leave
leave
daa
jb
dec
rcrb
je,pn
into
cmovl
xchg
sbb
mov
xor
ja
sub
stos
xor
arpl
jnp
movsl
ja
mov
nop
movsb
cmc
adc
mov
outsl
scas
loope
jmp
add
mov
dec
and
aaa
xchg
movsb
inc
aas
divb
imul
dec
stos
arpl
fs
fldcw
push
jmp
cmc
adc
lods
insl
in
and
xchg
enter
in
mov
mov
mov
mov
dec
call
hlt
xchg
mov
icebp
aas
cwtl
mov
xchg
insb
pop
cmpsl
lods
aas
movsl
shll
jp
cmp
and
adc
lret
xchg
sbb
cmp
gs
cld
sub
f2xm1
or
aas
ss
fnsave
repz
psubb
loopne
inc
jne
xchg
leave
es
leave
dec
mov
dec
idivb
push
cld
pop
rorb
xor
fld
mov
dec
lds
ljmp
adc
xchg
push
sub
jl
sti
dec
mov
xor
cli
mov
test
adc
jmp
jge
cmp
push
and
clc
jp
rcr
shlb
out
imul
loop
jecxz
ds
int3
in
pop
cmp
cmc
imul
in
add
fcoms
insb
rclw
pop
decb
fbstp
sarl
sbb
jge
movsb
mov
movsb
adc
aaa
push
pop
bound
jmp
divl
cmp
adc
mov
inc
sbb
mov
cmpsb
nop
inc
xor
mov
nop
pop
cmp
insb
add
mov
mov
xchg
adc
jne
test
pop
xchg
ljmp
test
xchg
adc
jae
fidivrl
test
sub
lods
push
mov
push
out
cwtl
addr16
sbb
add
lods
stos
or
stos
cld
adcl
fs
aam
dec
adc
fldt
jns
xchg
and
popf
arpl
ja
stc
addb
cmpsl
nop
lret
push
icebp
in
add
lahf
mov
scas
cli
sub
decb
outsl
out
int3
adc
cmpsl
addr16
inc
sbb
cmp
pop
pop
xor
jecxz
test
pextrw
or
add
jp
pop
push
sub
xchg
out
xchg
xchg
mov
push
push
ret
std
loopne
pop
lret
fistpl
ds
mov
mov
push
ret
xchg
enter
mov
xlat
cs
out
pop
push
jnp
pop
popf
dec
fnstsw
std
lods
scas
dec
loop
and
mov
lahf
mov
or
xor
mov
cwtl
lcall
inc
out
mov
push
xchg
mov
jno
lock
mov
sub
sub
or
and
jmp
inc
or
sbbl
lcall
mov
stos
jl
jle
mov
xchg
jo
cs
mov
cmp
sbb
dec
cwtl
or
xchg
imul
and
into
repz
push
dec
insl
jecxz
pop
and
leave
dec
xchg
pop
mov
push
xor
mov
nop
xor
sbb
mov
inc
pop
fldt
mov
inc
cmp
bound
test
mov
cmp
les
mov
jg
jge
or
insl
popa
dec
aam
adc
cwtl
test
imull
lea
dec
mov
jmp
mov
ret
push
dec
repz
cmp
xchg
push
sbb
cmpsl
sbb
daa
negb
cmc
xchg
mov
popa
mov
xchg
inc
mov
into
inc
aaa
mov
or
test
les
leave
inc
xor
or
add
jecxz
xchg
outsb
dec
repnz
push
xor
in
pop
add
or
cltd
cwtl
jg
cmp
lcall
push
int3
mov
sub
lret
jg
repz
rolb
pushf
jge
das
cmc
xor
pop
sbb
xchg
pop
mov
sbb
xchg
xchg
and
sbbb
in
xchg
cmpsb
in
clc
xchg
mov
pop
and
add
bndstx
repnz
or
mov
inc
mov
movsl
test
jns
cmpsb
xor
adc
mov
nop
stos
jmp
mov
mov
push
push
push
je
xchg
mov
nop
and
adc
test
mov
xchg
dec
push
jo
push
fidivrs
inc
mov
sbb
shl
jge
sbb
inc
jmp
mov
aaa
loopne
lret
pop
iret
and
push
outsl
fcmovnb
xor
in
leave
out
add
repz
inc
in
pop
fidivrs
mov
push
cmp
jne
pop
mov
stos
xchg
add
adc
test
push
stos
jmp
es
mov
notl
popf
cltd
xor
leave
test
bound
push
and
stc
mov
int3
test
dec
mov
or
movl
xchg
jmp
rcll
sub
lret
and
loop
lea
jb
mov
sahf
test
test
jle
in
cmc
adc
add
xor
mov
data16
insb
dec
cmp
jl
cltd
mov
popa
mov
xor
push
pop
leave
pop
call
aam
mov
cmp
pop
jns
xchg
mov
leave
pop
or
mov
adc
and
lods
push
dec
jnp
aaa
jnp
jo
sbb
fsubs
cmp
add
lock
jl
jae
mov
dec
inc
idiv
shrb
jns
or
popa
idivb
push
ljmp
mov
adc
pop
xchg
js
lret
jle
jo
add
aam
clc
add
dec
fildll
rcrl
inc
pop
mov
aam
xor
pop
movsb
add
push
sub
scas
ficomps
fnstsw
mov
testl
into
inc
aad
in
sbb
dec
pop
jmp
sub
sub
subb
jp
dec
lods
jae
add
leave
sbb
insl
sbb
xor
jl
xor
push
insl
inc
sbb
mov
sub
std
outsl
mov
mov
push
xchg
sub
cmp
xor
icebp
fisubrl
movsb
add
push
push
and
dec
dec
aam
xchg
cmp
rclb
lcall
push
mov
scas
cmp
rorb
xchg
or
out
loope
add
mov
dec
popa
fildll
ljmpw
and
and
adc
jns
outsw
sarl
dec
pop
lods
inc
sti
in
pop
jbe
jno
add
mov
mov
ljmp
mov
iret
inc
dec
mov
clc
inc
fcoms
jge
cld
push
lcall
or
pop
push
push
cmp
and
jnp
add
fsubrl
imul
dec
loop
insl
sub
nop
pushf
out
in
xorl
stos
jb
rorb
mov
stc
and
mov
lret
and
mov
fcoml
jbe
mov
dec
pop
cmp
fwait
lock
idiv
mov
jnp
loope
orb
jno
adc
cmp
faddl
test
xchg
daa
lcall
mov
sub
push
out
pop
nop
pop
pop
dec
mov
stos
pop
dec
mov
mov
jb
insl
xor
pushf
lcall
mov
scas
mov
push
popa
aam
cmp
fisttps
push
mov
ficompl
inc
shrb
mov
xlat
aaa
jge
xlat
retw
mov
cs
or
sbb
fdivrl
jge
jl
out
fstpl
arpl
gs
imul
jne
dec
test
or
aas
out
in
jno
enter
xor
mov
outsb
jbe
sahf
ss
aad
pop
js
jmp
mov
decl
push
leave
imulb
imul
shll
sbb
jg
jmp
sub
fistpll
adc
pop
add
gs
xchg
xchg
ret
xchg
xchg
sub
pop
sarb
mov
jb
cmp
sub
ljmp
enter
fiaddl
adc
dec
xor
lea
inc
pusha
outsl
rolb
mov
sbb
pop
lea
jge
adc
or
add
repnz
xor
mov
mov
dec
addl
pop
pop
xor
movsl
out
das
ret
insl
adc
sarb
dec
or
cwtl
lcall
jns
cmp
pop
es
dec
gs
test
or
lret
xchg
add
mov
ror
dec
hlt
sub
push
cmp
in
adc
dec
inc
loop
dec
and
enter
sti
sbb
mov
aam
jno
mov
insl
xlat
cltd
adc
out
stos
mov
dec
jle
dec
mov
lods
gs
xor
aas
sbb
mov
push
hlt
add
jns
adc
int3
ror
cmp
ja
pop
mov
xor
xchg
pcmpeqw
js
rcll
mov
dec
push
imul
fldenv
mov
pop
pop
imul
dec
mov
clc
jo
or
repnz
sbb
push
loop
in
adc
xchg
xor
into
lods
lock
jp
xor
inc
xor
fwait
std
sbb
xor
dec
sbb
push
sbb
lods
fcomip
mov
nop
xchg
loopne
call
dec
mov
xchg
lret
or
lea
stc
push
dec
jnp
shll
push
mov
dec
jno
outsb
xchg
imul
ficoms
lahf
out
leave
xchg
adc
xor
adc
add
idivb
fdivl
movb
sahf
sbb
aam
in
adc
jle
cld
mov
mov
pop
ss
test
xchg
rcll
mov
jl
xchg
int3
xchg
dec
cmp
jb
sub
pusha
mov
mov
pop
ja
idivl
lea
inc
icebp
push
cs
data16
mov
in
mov
out
or
sbb
notl
xchg
aaa
push
jge
lcall
mov
popa
cmpsl
sbb
sti
movsb
dec
mov
cli
xlat
lods
and
subl
push
or
pop
sbb
and
mov
fidivrs
push
dec
in
or
into
mov
les
insl
lret
leave
push
or
rol
dec
mov
cli
or
and
in
push
xchg
ljmp
aas
xor
stos
mov
loop
or
inc
mov
ret
add
add
sub
in
test
scas
outsb
mov
and
ljmp
ss
std
pop
push
inc
das
dec
sahf
lods
nop
stos
inc
sub
dec
push
stos
mov
jg
lahf
xchg
lahf
roll
aaa
icebp
ljmp
adc
stos
cmp
jnp
lds
mov
xchg
inc
gs
pop
das
pop
enter
loope
shlb
mov
pop
adc
jp
leave
pop
cmp
adc
add
jl
mov
and
jge
lret
sub
adc
fisubrs
inc
pop
jp
push
adc
dec
fwait
or
add
imul
scas
jae
adc
bound
jbe
lea
lret
mov
cmpsl
test
or
xchg
ja
jb
stc
cwtl
aad
int
cmp
inc
xchg
cmp
enter
pop
mov
cmpsb
sbb
xchg
sahf
outsb
push
cmp
pusha
je
das
mov
icebp
cmp
dec
sub
ret
xchg
xchg
add
ss
dec
mov
adc
mov
adc
cld
mov
decb
adc
xorb
and
and
sub
fisubl
jle
sbb
lret
pop
ror
fisttpl
movsb
enter
push
hlt
cwtl
outsl
cmp
mov
and
or
out
sbb
inc
stos
jle
cmp
ljmp
inc
shll
icebp
or
aam
fs
les
fwait
sbb
ret
mov
mov
pop
call
jnp
push
fildll
ss
cli
push
cmp
inc
push
mov
xchg
jmp
je
mov
push
add
and
out
test
fsqrt
sbb
mov
xchg
jbe
mov
jns
mov
push
cmp
or
xchg
xor
dec
mov
lock
in
add
pop
dec
pop
mov
ljmp
adc
test
insl
cmp
outsb
xchg
jl
mov
scas
rcrl
sub
fnstenv
int3
pop
or
jp
push
sbb
jb
jnp
mov
out
shlb
pop
jbe,pt
stos
cwtl
xchg
mov
popf
mov
xchg
xor
iret
out
pop
sbb
imul
fwait
push
mov
add
xchg
imul
push
sbb
dec
sub
mov
int
xor
sbb
push
lret
sar
mov
in
adc
or
dec
cmp
jg
inc
pop
and
push
jp
imul
push
mov
and
sar
jle
mov
add
pusha
jl
jnp
inc
cmp
inc
or
pop
pop
pop
stos
lods
bound
pop
loopne
sbb
mov
ds
or
lock
push
sub
nop
jno
dec
shlb
arpl
jmp
repz
cmp
mov
leave
inc
in
add
orl
outsl
imul
std
mov
jmp
pop
ds
imul
adc
fbld
mov
ja
xchg
lds
and
shrb
loop
scas
mov
ljmp
cmp
mov
leave
mov
std
hlt
add
inc
lret
test
out
aaa
pusha
push
mov
not
xor
test
inc
lret
popa
sbb
xchg
faddl
and
mov
push
int3
enter
xchg
clc
aad
jecxz
cli
adc
fimull
jmp
push
out
and
aaa
into
jo
jb
mov
ret
push
fisubl
sbb
aas
sarl
mov
jecxz
dec
or
in
mov
ljmp
addl
neg
adc
popa
push
mov
in
inc
pop
test
adc
mov
or
dec
sub
jmp
xchg
iret
sub
mov
js
adc
xor
leave
dec
loop
and
adc
mov
mov
out
into
ja
sbb
mov
xchg
add
add
pop
or
jmp
call
pop
pop
int
bound
mov
idiv
shlb
mov
mov
mov
dec
sub
mov
and
js
and
nop
das
out
cmp
pop
ret
jnp
lods
mov
and
cli
in
jnp
dec
and
cmp
cmp
jecxz
xchg
ja
cwtl
dec
sbb
fldl
mov
std
mov
lock
adc
jne
jecxz
and
sbb
jecxz
rol
inc
sub
push
lret
add
sarb
cmp
out
adcl
mov
mov
jbe
mov
pop
add
lock
pop
mov
imul
jp
sbb
ljmp
popf
movsl
ja
popf
or
add
lds
push
fdivrp
fdiv
dec
inc
xchg
loope
and
leave
add
jp
xor
imul
sub
pop
sbb
es
push
out
pop
inc
jb
test
jg
inc
cmp
xchg
mov
ret
mov
das
test
clc
out
clc
loop
popf
xchg
fwait
push
push
movsl
aad
jnp
movsl
xchg
or
jp
push
xlat
bound
in
inc
adcb
out
xor
test
sar
ss
jae
adc
movsb
mov
outsl
cli
or
lcall
jp
add
jl
jl
testb
mov
sbb
shlb
xchg
or
pop
enter
xor
movsb
nop
int
mov
stc
into
mov
rcl
popf
mov
inc
xlat
cmpsb
dec
les
jne
loopne
in
push
arpl
push
jmp
pop
orps
mov
clc
inc
xor
and
cmc
pusha
sub
jg
aam
push
jmp
mov
jmp
mov
stos
or
fsubs
mov
cmpsb
xor
out
jle
add
mov
jno
bound
and
addb
pop
int3
inc
loope
and
pop
imul
mov
jge
or
hlt
inc
sbb
add
xchg
data16
rcll
or
rcrl
fwait
test
jno
lret
pop
addb
aas
sbb
mov
stos
push
and
mov
cmp
xor
xchg
shrl
xlat
mov
lock
cmp
jne
aaa
push
fs
xchg
les
mov
and
mov
cmp
sbb
imul
sbb
divb
adc
add
ret
dec
and
test
into
mov
adc
add
scas
xor
add
cli
mov
scas
fsubrs
insl
insl
imull
adc
cmc
ficomps
pop
and
comiss
mov
xor
aaa
add
mov
scas
cltd
outsb
in
enter
in
push
into
mov
lret
insb
inc
movsl
stos
shll
adc
test
push
sub
jl
cmp
xor
sbb
push
andb
aad
mov
mov
mov
jbe
outsb
xchg
in
push
pushf
dec
cli
jmp
call
adc
testb
sub
stos
in
add
rclb
mov
mov
rcll
mov
cmp
in
mov
loope
loope
and
jb
sub
in
insb
inc
pop
mov
jg
enter
push
push
or
xchg
loop
aaa
mov
daa
icebp
gs
push
adc
icebp
mov
xchg
fistpl
adc
jmp
pop
std
dec
int
xor
xor
add
cwtl
push
or
cld
inc
pop
leave
and
ss
ret
ds
bound
ror
loope,pn
int
adc
xchg
or
xor
sti
enter
psubq
insl
mov
jnp
aad
xchg
cvtpi2ps
pop
mov
mov
jmp
cltd
and
push
lahf
testb
into
mov
shlb
or
pop
imul
pop
and
js
insl
insb
cmp
adc
xchg
scas
sbb
mov
sbb
stos
add
mov
movsb
cli
fwait
push
jle
repnz
ljmp
push
test
or
scas
jecxz
pop
adc
jle
dec
es
jb
mov
push
or
lret
fidivrs
inc
out
subl
daa
scas
cs
sti
sub
jb
sbb
xchg
mov
ja
es
fcmovnu
push
shlb
roll
adcl
dec
sub
dec
leave
loopne
push
rcl
lret
hlt
xlat
xor
add
scas
push
lods
mov
popa
sub
outsb
fs
nop
dec
int
mov
mov
orb
sbb
notb
cmp
pop
jns
jg
mov
popf
aam
cmp
push
loop
sbb
adc
add
icebp
aad
push
test
sbb
xlat
ds
movsb
push
xor
push
and
dec
ljmp
shlb
iret
jno
lods
sarl
fstps
sbb
clc
or
cmpsl
mov
jno
xchg
repnz
mov
xor
mov
lcall
mov
mov
inc
pop
push
ret
sbb
les
pop
cmpsl
push
inc
or
adc
push
hlt
test
xlat
shlb
adc
cs
inc
mov
mov
scas
mov
push
pop
paddsb
cmp
bound
in
insl
loope
push
lock
nop
inc
xor
xchg
mov
cmpb
push
jecxz
stos
mov
movsl
dec
and
cmpsl
jbe
sbb
xchg
mov
cli
aam
fdivrl
bound
mov
push
testb
xor
jg
sbb
inc
sbb
dec
into
lcall
sbb
in
test
out
fldcw
sub
pop
sub
jnp
lahf
iret
push
ja
iret
gs
sub
inc
and
clc
lcall
jae
out
inc
cld
sub
cmp
sbb
icebp
std
or
jo
jb
add
sub
mov
cs
push
lcall
in
in
lods
data16
daa
add
rcr
lea
repz
pop
out
xchg
mov
mov
mov
dec
adc
fisttpll
pushf
add
jno
stos
mov
clc
inc
jno
test
mov
pop
mov
jge
sbb
fadd
push
xor
cmpsl
addr16
in
leave
mov
aad
mov
dec
lds
sbb
jns
push
cmpsl
jmp
sub
mov
dec
xchg
cltd
xchg
stc
mov
push
xor
test
mov
addl
jle
leave
cs
inc
es
xchg
leave
icebp
inc
stos
fs
adc
je
push
minps
dec
shr
jns
add
jle
and
js
xchg
fcmovu
sub
bound
pop
cmpb
and
cs
bound
xchg
outsl
dec
cwtl
sub
adc
pushf
pushf
sub
cwtl
cmp
push
fdivrp
loopne
test
repnz
idiv
sub
repz
int
mov
cld
or
push
sub
das
push
push
jns
imul
cli
icebp
inc
pop
add
mov
jb
incb
leave
movl
dec
add
lods
aad
jg
testl
push
sub
lods
cli
icebp
imul
adc
nop
ss
sbb
cmp
adc
popf
jnp
add
fists
loop
leave
test
mov
xchg
pop
mov
sub
xor
xchg
aaa
lds
fmuls
repz
ja
int
hlt
xchg
sahf
xchg
xchg
mov
aad
dec
js
ret
int
repz
inc
add
push
or
sbb
inc
cmpsl
pop
fbstp
fimuls
into
push
ja
aas
icebp
popa
lret
cmpsb
dec
je
cli
mov
lods
pop
notb
nop
xchg
or
fnstenv
pushf
pop
sbb
adc
dec
inc
imul
fsubr
or
mov
test
scas
and
fcoms
out
in
inc
int
loope
cwtl
pop
fucomi
cmp
leave
push
inc
and
ja
jns
enter
add
jno
pop
cmc
inc
jge
movsl
push
scas
in
int
repnz
cwtl
inc
leave
lcall
jno
gs
nop
sahf
jmp
inc
stos
loope
mov
xor
fisubrl
shlb
pop
adc
xchg
mov
iret
outsl
hlt
sub
out
ret
inc
xor
adc
in
fidivs
jge
push
hlt
das
cmpl
in
jo
mov
fisttpl
mov
jb
data16
pop
add
dec
jmp
loope
cmp
inc
or
and
mov
out
push
push
cmp
movl
test
xlat
aas
mov
jmp
mov
dec
inc
cmp
cs
mov
popl
icebp
aas
pop
inc
push
push
sarl
push
jmp
fists
clc
jo
enter
arpl
scas
in
cmp
jns
into
fwait
lcall
push
test
sti
mov
lea
mov
or
nop
loope
outsl
mov
inc
mov
or
or
or
fildll
test
repnz
rclb
aam
pop
sub
stos
jmp
ja
mov
popa
push
in
fmuls
push
add
adc
mov
in
xor
mov
fwait
loop
xchg
pop
clc
mov
adc
insb
es
ds
xor
inc
jle
iret
dec
or
cmp
dec
adc
dec
leave
and
out
xchg
cltd
imul
or
mov
mov
pop
leave
adcl
pop
mov
dec
outsl
xor
outsb
dec
cmp
jne
fildl
insl
je
fs
add
fisubrl
xor
lret
dec
mov
pop
mov
aas
popa
movsl
in
jnp
idiv
sbb
sbb
das
imul
arpl
int3
mov
fcmovnbe
leave
adc
leave
cld
dec
adc
sbb
ss
out
movsw
decb
filds
sbb
loope
pop
mov
daa
fs
mov
stos
icebp
xor
fldenv
cltd
fwait
addb
mov
fidivs
sbb
mov
aaa
cmpl
enter
ds
andl
sub
lahf
jl
pop
ss
int3
ja
test
jnp
inc
push
mov
mov
jecxz
subl
mov
xchg
xor
adc
out
cli
push
pop
iret
ja
mov
mov
xchg
je
sbb
enter
sbbb
jb
mov
pushl
mov
push
fcomip
sbb
sub
xchg
sbb
and
call
jb
hlt
mov
mov
test
push
cmc
add
mov
arpl
or
add
xor
lea
test
fists
popf
add
loope
jne
add
popf
pop
sub
jbe
cltd
mov
pop
dec
xchg
mov
inc
and
cmp
shlb
mov
cmpsl
pop
fsubl
pushl
repz
sub
or
negl
out
add
mov
xchg
xchg
sbb
leave
adc
mov
notb
nop
dec
fcomi
stos
daa
faddl
enter
push
mov
subb
clc
fwait
mov
sarb
ljmp
mov
mov
push
xor
jp
ds
push
inc
divb
aad
xor
mov
insl
mov
rol
dec
push
push
sub
dec
into
sbb
mov
adc
mov
sti
jmp
mov
decl
and
mov
mov
pop
outsl
mov
lock
jl
fsubrl
pop
aas
xlat
mov
mov
pop
into
mov
lods
dec
inc
inc
push
push
rol
push
push
fdivp
push
pop
jmp
push
shr
mov
rcrl
mov
jmp
xlat
push
push
jo
mov
repnz
mov
fscale
out
scas
push
or
mov
loopne
in
and
pop
mov
push
faddp
add
sahf
inc
divb
jno
fidivrs
pop
fmull
leave
jle
leave
xchg
jne
mov
pushf
cmp
add
sbbl
inc
inc
pop
adc
shrl
jo
and
fidivl
inc
and
dec
hlt
dec
daa
and
or
xor
sbb
testb
insl
sbb
push
into
fwait
jge
mov
cmp
cmp
mov
sbb
and
xchg
push
pop
mov
dec
push
in
sbb
jae
add
mov
and
int3
xor
mov
mov
idivb
nop
lods
sub
enter
jge
pop
jo
lcall
xchg
dec
lcall
pop
adc
xchg
fsubp
mov
jo
jb
addb
sbb
test
insb
pop
push
push
xchg
shlb
adc
lret
xchg
mov
loop
jmp
sbb
and
cmp
fidivrs
imul
sbb
ja
lret
shll
push
rep
pusha
xchg
loope
xor
sbb
imul
aaa
mov
add
stos
or
test
aaa
jnp
mov
mov
inc
cltd
lret
insb
ljmp
lods
pop
push
or
add
adc
sbbb
test
mov
sub
jb
loopne
js
dec
ds
cmpsb
mov
bound
outsb
into
mov
mov
adc
add
dec
jg
out
addr16
cmp
mov
cltd
sub
ja
sbb
in
orb
sbb
sbb
push
push
stos
sbb
fdiv
xor
and
imul
not
aad
pop
push
jmp
scas
mov
mov
or
and
pop
xchg
jle
fldenv
inc
sbb
jge
je
mov
jp
cwtl
pop
push
mov
xor
jo
jmp
sbb
push
and
adc
xchg
lret
sub
push
call
ret
iret
cmp
adc
mov
aaa
outsl
cmp
pop
test
jl
mov
mov
sub
popa
mov
mov
mov
push
mov
outsb
push
mov
push
clc
mov
test
bound
sbb
cmp
scas
jno
divl
in
cmp
xchg
sub
xor
mov
adc
mov
movsb
adc
jge
mov
lock
xchg
mov
inc
mov
pop
and
call
xchg
andl
imul
out
jmp
fs
push
out
mov
mov
dec
jge
shlb
and
push
xor
insb
mov
add
mov
add
lock
push
jns
adc
jmp
xchg
insb
out
push
jb
popa
mov
push
and
push
mov
push
jo
cmc
fwait
cli
cmp
mov
push
sub
dec
aad
fldt
es
and
movl
lea
ss
movsb
pop
jbe
es
cld
mov
sbbl
ja
test
aaa
and
andb
or
mov
cmp
inc
sbb
xchg
loopne
adc
adc
or
mov
scas
xchg
mov
dec
sub
in
sbb
inc
cwtl
inc
mov
adc
xchg
xchg
or
pop
xor
fcoml
inc
sbb
or
stos
test
bound
in
bswap
mov
lcall
xchg
sti
scas
test
and
xor
fmuls
mov
or
mov
push
inc
shll
xchg
push
push
imul
test
movsl
xchg
stos
aas
fidivrl
sbb
leave
pusha
inc
outsl
pop
xchg
imul
scas
mov
nop
xchg
mov
int
xorb
sbb
mov
cmpsl
js
loop
or
mov
cld
js
mov
shlb
inc
and
scas
adcb
fldl
stos
push
pop
mov
das
orl
cs
repnz
pop
aas
lcall
fstp
scas
xchg
sub
inc
jmp
push
insb
sbb
xor
mov
push
aad
sbb
push
add
inc
pop
jnp
push
insb
repnz
mov
and
mov
pop
sub
pop
xchg
imul
cmp
xchg
mov
cmp
mov
dec
in
pop
and
jno,pn
adc
js
mov
push
leave
or
or
mov
add
adcl
outsb
clc
adc
xor
inc
aaa
ret
in
popf
dec
mov
sbb
xor
fdivrs
fisttpl
call
outsb
addl
cmpsb
inc
fiaddl
mov
std
out
mov
bnd
lret
sbb
into
inc
cltd
mov
mov
push
adc
movsb
mov
out
hlt
test
sub
test
inc
mov
push
fucomip
ja
imul
jecxz
sti
fmuls
and
xlat
ja
adc
cmp
enter
stos
popa
mov
movsl
fsubs
jg
sahf
add
mov
inc
test
push
pop
push
pop
shlb
loope
xor
mov
or
xor
mov
jns
mov
mov
and
inc
rolb
add
xlat
imul
jo
jge
and
xchg
dec
sub
cld
pop
icebp
loop
cs
mov
push
pop
xor
add
andb
fldl
inc
adc
jmp
les
xchg
or
push
sbbb
pop
mov
fists
mull
push
pop
inc
push
add
addr16
pop
cmp
stos
push
js
jno
cmpsl
mov
jo
xor
negb
xchg
nop
repz
jmp
jl
dec
adcl
fidivrl
inc
add
rorb
mov
leave
cmpl
std
ffreep
or
jge
into
cmp
mov
stc
mov
sub
or
jmp
fnstsw
ficoml
fnstsw
popa
int3
add
repz
adc
icebp
lret
pop
inc
bound
mov
dec
out
call
lds
jno
stos
call
push
xchg
test
adc
mov
int3
aam
sbb
fnsave
orb
cmpsl
adc
ljmp
cs
jmp
enter
sbb
cmp
mov
xchg
or
ds
mov
inc
mov
sub
insb
push
lods
popf
addr16
sarl
mov
push
jl
lds
sub
cmp
js
mov
add
lods
xor
pop
jo
es
sbb
jp
outsb
and
dec
movsb
stc
sbb
movsb
pop
push
lret
clc
inc
fwait
test
mov
or
les
popf
dec
xchg
ficoms
xchg
js
stos
cmp
std
rolb
or
lret
out
movsl
sbb
xchg
mov
dec
xchg
push
mov
dec
inc
or
cmp
icebp
sub
movsl
ret
sbb
scas
push
ficompl
mov
shlb
and
cld
dec
cs
pop
int3
test
xlat
dec
push
cwtl
test
or
and
lds
bound
or
out
clc
jmp
push
jo
mov
mov
ret
shl
test
sahf
push
push
movsl
jg
or
xchg
cmp
jl
or
aas
push
push
mov
jge
sti
adc
sbb
xchg
sbb
or
xchg
ljmp
push
incl
jecxz
ljmp
and
lret
adc
cmp
cmp
imul
bnd
and
jmp
push
mov
cmp
loopne
inc
or
jnp
pop
mov
sbb
pop
stc
pop
adc
cmp
movsb
orl
inc
nop
hlt
mov
push
pop
out
cltd
xchg
les
mov
pop
push
push
lahf
divl
loop
add
or
fs
sbb
push
movsb
js
jo
cmp
popf
mov
sub
pop
and
lea
jbe
aaa
and
int
push
mov
mov
les
jp
adc
fisubl
push
cli
out
mov
jmp
add
pop
dec
sbb
pop
enter
repnz
xchg
stc
adcb
lods
int
add
push
lds
mov
je
lods
addr16
mov
xchg
idiv
lods
stc
dec
div
mov
inc
lret
inc
xchg
sub
loop
and
aaa
jg
fildll
mov
jmp
xor
jle
nop
cmp
sahf
shrl
mov
add
xchg
popl
lds
popf
inc
or
loopne
loopne
sarl
ds
push
adcl
in
das
fidivrs
jl
jg
sti
jbe
pop
push
dec
lcall
push
pusha
mov
shr
cmp
pop
pop
cmp
adc
es
or
lock
mov
mov
clc
js
inc
fdivs
iret
add
xor
add
mov
sub
cmp
pop
xlat
mov
add
push
imul
push
mov
movsb
jecxz
sbb
lahf
pop
xor
stc
sbb
aaa
inc
cmpsb
jo
mov
cwtl
jg
and
rolb
loopne
and
repnz
cmpsb
sub
adc
jmp
adc
icebp
mov
adc
shl
jecxz
insl
sbb
dec
xor
pop
inc
adc
daa
jo
test
fstpl
sbb
sti
insb
mov
push
repnz
in
inc
ret
out
icebp
jle
jns
pop
jge
and
jne
iret
xor
mov
add
cmp
aaa
sbb
lds
add
xor
sub
lock
sub
push
mov
test
pop
ret
lods
loop
jge
push
stc
int3
push
fmul
lds
push
imul
pop
sarl
inc
xchg
mov
pop
sahf
jl
and
cmp
push
test
dec
push
push
dec
cmp
cmp
lahf
popf
pop
pusha
adc
aad
mov
dec
bound
adc
add
rcll
jno
aad
lds
add
push
sbb
out
outsl
aaa
mov
sbb
push
or
cmp
fwait
gs
push
sbb
pusha
nop
inc
ds
mov
test
cmc
push
jmp
es
fisubrs
ret
mov
jp
or
jnp
add
out
movsb
imul
in
cmpsb
addl
shlb
fiadds
aad
dec
mov
jo
xor
dec
insl
es
mov
test
pop
or
scas
arpl
sbb
ret
jae
add
jmp
xchg
push
sub
xor
orl
and
xchg
lret
das
popf
js
movsl
mull
ljmp
sbb
mov
jno
or
pop
fistl
fsubp
mov
cld
cmp
ljmp
or
pop
rcr
jle
icebp
inc
jmp
imul
xchg
push
outsb
scas
inc
pop
mov
out
insl
mov
lock
arpl
xchg
jmp
sbb
adc
inc
lcall
test
push
fldcw
andl
rol
popf
rcrl
jecxz
cmpsb
std
cmp
imul
ret
cmp
loop
mov
mov
or
shrb
pusha
jmp
cli
jne
dec
loop
inc
outsb
jo
jne
lret
ss
cmpsb
or
inc
dec
add
sahf
pop
and
sbb
push
stc
sub
ret
nop
repnz
lcall
cmp
sti
xchg
clc
outsb
mov
scas
lcall
clc
and
adc
push
xor
sbb
addr16
sbb
add
rcrl
push
repz
scas
pop
mov
adc
subb
js
fnstenv
xchg
sbb
xchg
adc
lret
sbb
pop
inc
in
sbb
int3
imull
insb
adc
push
sarb
popf
and
inc
inc
xchg
adc
xlat
add
adc
push
cmp
stos
icebp
mov
xchg
adc
imul
iret
mov
nop
cmp
dec
gs
push
xchg
repz
incb
repz
and
push
mov
ljmp
cli
xchg
inc
mov
adc
jecxz
dec
sub
enter
cmc
or
lret
call
mov
jo
mov
lods
aaa
pop
iret
adc
rol
mov
cltd
adc
pop
mov
xor
sub
fisttpl
inc
mov
roll
sub
lret
mov
mov
sahf
test
xchg
mov
clc
test
and
dec
dec
mov
movsb
frstor
xlat
sbb
push
mov
pushf
push
or
negl
dec
bound
daa
add
push
mov
xor
inc
dec
inc
cwtl
mov
inc
imul
adc
and
nop
mov
add
add
sbb
mov
sub
ss
sbb
mov
fwait
mov
lcall
fstl
inc
xchg
test
jl
jl
mov
and
xchg
push
mov
cmp
stos
and
loop
fists
xchg
push
insl
mov
or
xlat
or
popw
inc
lods
pop
inc
fldcw
add
pop
les
cwtl
sub
jbe
push
sbb
sahf
mov
js
mov
rorl
sub
int3
icebp
lahf
gs
test
jecxz
pop
sub
fucomip
ljmp
push
jp
mov
cmp
loope
fwait
adc
xor
xor
cmp
test
mov
sbb
lea
mov
fistps
jo
jmp
out
loopne
cmp
cmpl
add
sbb
out
movsl
dec
sbb
dec
icebp
scas
mov
xor
or
call
mov
adc
movsl
pop
pushf
shl
insl
add
xor
jle
push
push
mov
add
jo
outsl
jmp
aam
shlb
cmp
add
adc
inc
out
cmp
imul
pushf
jns
jecxz
mov
jbe
push
or
std
xchg
lcall
sti
test
loopne
sub
push
out
cld
inc
sub
in
enter
mov
mov
xchg
je
push
and
lods
xor
push
xchg
fiadds
lcall
mov
or
pusha
out
push
ret
mov
dec
xchg
xchg
mov
adc
pusha
cmp
lahf
pop
jb
fmul
pop
mov
cmc
xchg
nop
idiv
add
or
mov
and
mov
in
adc
adc
test
scas
xlat
popf
movsl
mov
ja
mov
push
push
inc
movsl
sub
jl
inc
pushf
std
add
and
aad
rcl
jmp
push
cmp
movl
data16
add
jno
mov
push
ret
in
jecxz
mov
shr
imul
enter
stos
divl
and
mov
ja
add
rcr
push
stos
faddl
aaa
inc
shr
leave
inc
sub
jle
mov
xchg
sahf
jg
icebp
xlat
jle
jno
dec
arpl
mov
inc
loopne
mov
push
mov
mov
insl
adc
and
jbe
add
jae
mov
popf
jno
es
cld
adc
jns
jle
dec
scas
fidivrs
xchg
and
sbb
push
mov
addr16
loope
int3
sbb
nop
xchg
mov
xchg
mov
xlat
xor
vlddqu
bound
jle
sbb
pop
add
sbb
mov
pop
add
pop
sbb
sbb
popf
in
aam
aaa
push
mov
mov
xor
push
inc
mov
adc
mov
ss
iret
mov
mov
push
inc
mov
mov
ljmp
std
and
insl
int3
jecxz
ja
jp
xor
ja
das
cs
jg
mov
pop
jp
pop
fisubrl
outsb
mov
das
mov
popf
cli
pushf
das
mov
in
daa
pop
loop
jo
inc
xor
ljmp
mov
or
inc
sbb
icebp
push
dec
inc
cmp
add
or
mov
jl
sub
add
mov
add
fmuls
add
mov
pop
iret
jge
mov
test
fs
fstps
xchg
fs
xchg
inc
pop
pop
sbb
fdivrl
loop
ja
ret
pop
popf
notl
push
gs
movq
mov
arpl
mov
xchg
popa
daa
mov
add
pusha
xchg
pop
gs
add
dec
aaa
into
fisubl
ss
and
out
stc
cld
and
std
test
mov
mov
mov
outsb
mov
loope
adc
cmp
push
clc
xchg
cmp
ret
mov
mov
or
or
cmp
and
enter
fstpt
mov
inc
sbb
dec
sub
inc
mov
inc
popa
pop
daa
lods
push
aas
jb
insb
push
sbb
in
pop
lock
fistl
mov
mov
push
inc
sub
dec
std
mull
ljmp
das
push
jp
add
xor
add
add
cwtl
xor
insl
xchg
shll
das
scas
sarl
mov
inc
mov
jp
pop
adc
movhps
mov
cmp
xchg
push
inc
iret
jne
cli
sbb
lret
sub
cmp
pop
xchg
clc
fadd
mov
jle
jg
jns
fnstcw
je
push
add
in
jp
dec
cmp
imul
es
fld
cld
mov
xor
adc
mov
mov
in
or
push
movsb
xchg
xchg
lea
cmp
out
inc
sbb
dec
push
stos
inc
scas
pusha
mov
jmp
or
out
ret
pop
inc
xor
or
xor
rcrb
xchg
ret
pop
neg
nop
loope
bound
dec
je
and
inc
or
into
push
add
inc
leave
fisubl
mov
inc
jns
mov
shlb
adc
inc
jmp
mov
mov
aaa
bound
mov
enter
pop
cmp
imul
inc
xor
dec
dec
pop
mov
xchg
xor
push
cmp
add
out
add
cmpl
pusha
jae
andb
daa
inc
test
sub
nop
push
sub
push
jg
clc
outsl
add
push
stc
xlat
cmp
sub
icebp
repnz
mov
in
pop
rcr
test
and
outsl
ja
pop
in
fildl
fstl
cltd
sbb
aaa
lcall
stc
add
inc
and
hlt
stos
in
push
outsl
sub
stc
ds
jnp
dec
data16
xchg
movsb
adc
arpl
cmpsl
pusha
negl
insl
mov
sbb
dec
mov
and
push
popl
mov
xchg
push
jb
popf
dec
xchg
leave
sbb
add
roll
or
popa
jae
pop
rorl
mov
mov
out
mov
shr
jle
fdivrl
push
cmpsb
lods
jge
insb
orl
xor
jbe
mov
test
add
cmpsl
add
xor
mov
mov
cs
mov
mov
outsl
or
inc
ffree
es
xor
adc
xor
mov
lds
xchg
fs
push
xor
shl
test
ret
sbb
lods
test
or
movsl
fimull
pop
in
or
inc
in
pop
mov
pop
loop
xlat
iret
jae
jns
popl
mov
repnz
and
scas
sub
dec
dec
jmp
popa
loope
sub
and
stc
out
outsl
push
dec
xchg
or
rolb
inc
fsubr
jp
lahf
adc
add
jge
fdivs
fidivrl
bound
in
data16
jecxz
xchg
add
mov
cmp
push
and
stos
pushf
mov
das
fs
pop
cmp
mov
xchg
xchg
sub
cmp
xchg
test
fwait
pop
and
mov
mov
or
fisttps
mov
movb
mov
jns
aam
cmp
or
mov
sahf
lds
and
inc
movsb
dec
cmp
inc
fistl
xor
cli
cmp
add
xor
repz
je
push
cmp
in
lock
imul
mov
test
imul
jb
scas
sbb
pushf
dec
out
fsubrs
divl
xchg
sti
stos
fldenv
pop
or
lea
js
jns
outsb
mov
leave
test
dec
inc
jb
pusha
sbbb
mov
imul
notl
je
jo
xor
repnz
jne
in
mov
clc
rcrb
cmp
dec
es
and
decb
fnstcw
mov
call
popa
mov
testb
dec
xlat
sub
add
inc
les
lret
xchg
push
push
jp
stos
or
xchg
mov
iret
pop
aam
ret
xchg
pushf
imul
mov
lds
orl
mov
mov
outsl
shrl
shll
loop
sbb
mov
pop
inc
add
lret
lahf
lret
inc
and
or
addb
pop
scas
lods
jb
test
fstps
ret
shll
mov
lret
jns
jae
lods
cli
xor
push
jne
mov
cmp
cmp
pop
cmpsl
popf
mov
jp
test
push
imul
inc
test
jmp
jecxz
inc
pop
scas
jmp
pop
sbb
add
pop
cmpsb
mov
mov
sub
adc
sbb
add
add
lahf
cmpsb
test
ljmp
imul
mov
mov
jge
mov
cmc
pop
xchg
adcl
pop
cli
push
aas
cmc
sub
xor
sbb
sbb
cwtl
rcrl
arpl
add
add
mov
dec
push
test
jecxz
cmp
cmp
inc
jle
in
pop
add
fbld
add
sbb
adc
inc
xchg
push
xchg
repz
sti
imul
aad
dec
pushf
jl
nop
push
jns
ljmp
mov
jg
mov
imul
in
addr16
xlat
and
dec
movhlps
push
int
loop
mov
pop
pop
fstp
push
jmp
fldenv
jne
xchg
sub
push
mov
and
jg
and
loopne
fsub
xor
imul
cmpl
cmpsl
pop
or
aad
rol
scas
outsl
cmp
inc
sub
cmpsb
ja
repz
shl
sbb
push
iret
fcomp
ljmp
sbb
movsb
and
in
add
sbb
fdivp
fisttpl
sub
aas
or
pop
jno
fadds
cmp
and
pop
imul
jecxz
jne
inc
mov
popa
jns
mov
adc
scas
aaa
cmpxchg
mov
add
adc
sahf
cmpb
mov
ljmp
aas
xchg
iret
xchg
xchg
jecxz
adc
insb
jbe
pop
xor
xor
sbb
mov
pop
xchg
leave
icebp
pop
push
mov
pop
imul
jne
cmp
and
imul
push
out
gs
xchg
mov
mov
xchg
jne
fsts
sub
in
dec
popl
pop
xchg
aaa
cmc
or
dec
xchg
outsl
std
test
ja
jp
loop
fcmovb
mov
pusha
repnz
dec
into
sub
je
out
pop
push
je
out
cmc
outsl
push
out
in
fisttpl
mov
fdivrl
aad
adc
lretw
fdivrl
jno
sub
push
xor
loopne
das
cmc
jp
rcrl
iret
cmpsb
and
ljmp
xlat
orl
fwait
cwtl
cltd
into
lds
dec
mov
dec
sbb
cmp
scas
mov
lods
scas
lods
or
dec
pop
xor
fidivl
fisubrl
or
pop
nop
fdivs
lahf
mov
mov
rclb
fwait
repnz
std
aas
and
data16
cmpsb
loop
xor
call
push
repnz
and
insb
xchg
sbb
adc
push
xcrypt-ctr
cmpsl
dec
xchg
dec
and
out
roll
mov
dec
dec
lret
dec
or
in
lea
sub
daa
out
imul
jns
mov
add
jbe
and
or
ljmp
cmpsb
cwtl
mov
std
cmp
test
cmpb
ret
xchg
cmpb
cmpsl
push
jp
inc
fistpl
vphaddubq
aad
mov
sahf
push
mov
les
fcoml
fs
jmp
jo
jno
sub
out
lds
mov
cmp
das
sbb
aas
out
lods
adc
xor
inc
ret
test
stos
xor
ret
mov
adc
jno
lcall
movsl
orb
jp
mov
ret
dec
mov
jno
lahf
insl
adc
aam
int
lods
imul
jae
sbb
insb
popf
xchg
fsubr
mov
pop
xchg
les
dec
ss
shr
in
notl
sti
xchg
add
xor
mov
mov
sbb
outsl
push
rorb
pop
jg
pop
fcmovb
cmp
sub
xor
mov
loope
stos
cmpsb
jnp
lahf
push
lahf
jae
out
test
or
outsl
add
add
mov
jae
stos
xchg
cli
in
test
inc
push
outsl
inc
bound
pop
xlat
mov
mov
push
mov
sub
jae
nop
push
jl
js
push
mov
cmp
xor
nop
popf
xorl
dec
xor
xchg
mov
test
mov
sub
mov
clc
stos
daa
mov
push
cmp
jno
out
out
cmc
dec
test
jns
inc
sbb
and
mov
mov
mov
rcl
aas
test
int3
nop
enter
jb
mov
es
jg
mov
rcl
dec
out
fmuls
loopne
in
mov
jge
add
sti
repz
call
push
scas
sti
cmp
mov
outsb
test
jl
enter
sahf
xlat
push
arpl
sbb
mov
stc
pop
mov
es
mov
inc
sub
pop
mov
rorb
insl
and
mov
push
pop
fwait
dec
cltd
sbb
sub
or
test
jmp
sti
insb
sub
pop
jbe
or
or
jmp
lea
inc
jle
xor
sbb
hlt
je
push
mov
cli
push
inc
scas
xor
lret
rclb
sbb
ret
mov
jp
adc
mov
andl
fcomps
lret
inc
mov
cmpsb
dec
lahf
xlat
leave
pop
and
jb
mov
xchg
lret
mov
xchg
adc
es
rcl
test
and
mov
mov
mov
fdivp
jg
test
mov
inc
in
gs
push
inc
and
and
into
in
rclb
hlt
in
dec
sub
mov
mov
sbb
pop
inc
daa
jbe
lock
jecxz
fbld
inc
out
adc
jmp
leave
dec
imul
jg
out
ljmp
shrl
xor
fistpl
lock
mov
mov
sti
js
addb
adc
insb
push
jle
dec
insb
xchg
xlat
cmp
xor
fstl
je
xor
icebp
test
inc
mov
add
xchg
xor
rcrl
je
cmp
fs
dec
movsb
xor
mov
pop
sbb
mov
ss
dec
jno
scas
loope
in
cmp
sbb
ss
pop
cmc
or
cltd
mov
arpl
fdivrl
sub
fwait
mov
jno,pt
popf
add
push
test
sar
out
push
or
lds
xchg
dec
jge
mov
add
dec
cmp
divl
out
and
out
mov
add
jne
mov
mov
and
faddl
mov
rcll
jno
add
dec
dec
out
icebp
ljmp
inc
xchg
jne
shll
dec
mov
dec
movsb
cmc
mov
mov
push
fsubp
movsb
or
je
data16
mov
xchg
xor
lahf
cmp
rcll
loop
xchg
out
mov
mov
lret
ss
push
mov
arpl
mov
sbb
jp
lahf
aam
mov
call
fdivr
test
dec
sbb
push
cmp
fcmovne
ss
push
rcll
sub
testl
inc
mov
int3
or
in
out
push
mov
mov
mov
mov
rcrb
popa
push
dec
je
scas
arpl
negl
or
ss
shll
lods
loop
out
rcl
mov
lahf
aas
jb
insb
cli
cmpl
lea
ds
jae
push
and
jl
push
in
xor
iret
cwtl
pop
or
into
or
cld
data16
and
jecxz
xchg
je
stos
iret
aad
divb
pop
xchg
int3
pop
repz
xchg
sub
mov
mull
dec
pop
into
pop
sbb
and
pushf
sbb
pop
repnz
adc
lods
mov
sub
xor
mov
cmp
test
icebp
fisttpl
lds
stos
inc
repnz
jns
enter
xor
push
or
dec
divl
cmp
in
fistpll
mov
in
push
ror
pop
xorb
sbb
pop
and
rcr
sbb
scas
mov
inc
and
or
fs
loopne
or
fs
movb
stos
sub
inc
out
pop
adc
stc
dec
pushf
scas
sub
out
outsl
repnz
lret
xchg
repnz
popf
push
loopne
iret
push
mov
cwtl
pop
mov
inc
insl
inc
imul
push
or
pop
mov
stos
dec
pop
xchg
xor
jbe
mov
movsb
jno
sbb
jb
pop
imul
jp
xor
dec
scas
lcall
mov
jg
push
dec
add
sti
mov
pop
mov
aaa
add
shl
out
lods
mov
iret
inc
in
jg
jb
data16
pop
das
fists
cmp
push
or
fmul
dec
cli
cld
pminsw
jbe
pop
mov
in
sub
adc
inc
pop
push
cmp
adc
xor
repnz
ss
jbe
stos
stos
jg
clc
add
dec
jmp
xchg
out
mov
and
cs
pop
add
dec
mov
push
cmpl
arpl
aam
int
cmp
or
cmp
outsl
push
adc
in
cmc
insb
cmpsl
xchg
cmp
mov
dec
aam
mov
xlat
clc
addr16
dec
cmpsl
data16
or
jl
add
enter
pop
ror
dec
mov
fdiv
lret
add
inc
push
push
xchg
or
mov
cmp
mov
sbb
pop
aam
lcall
push
movsb
pop
clc
jne
stos
xchg
loop
data16
ficompl
or
xlat
roll
mov
movsb
and
xchg
shlb
lods
test
sbb
pop
mov
sub
fcoms
jp
or
test
loope
out
push
lcall
scas
in
arpl
leave
inc
call
fiadds
negl
add
dec
mov
adc
jle
cmp
add
pop
xor
arpl
stos
sub
mov
ja
cld
ret
rorb
jnp
pop
add
xor
int
mov
cmp
sti
les
js
mov
inc
lea
pop
es
cmc
dec
pop
popa
sub
sbb
cmp
mov
roll
push
nop
sub
xchg
popf
pop
mov
xor
pop
ret
inc
pop
inc
xchg
leave
pop
cmpsb
jle
adc
push
mov
lcall
add
cmpsl
mov
jle
dec
lret
lods
std
push
fldt
loop
adc
push
fldenv
repz
xchg
fbld
dec
scas
aas
aam
push
adcb
xor
loope
fmul
push
cmpsl
int3
jp
push
push
jne
pop
sti
jb
push
out
aaa
mov
das
ss
subl
iret
sub
or
ja
jecxz
add
jns
gs
push
stos
divb
adc
in
inc
add
cmp
daa
or
adc
mov
sub
pushf
mov
sub
push
sahf
lret
push
pop
pop
rolb
mov
pop
loopne
xor
push
cmp
daa
or
cwtl
out
adc
jnp
cmp
jnp
in
inc
dec
dec
jno
in
cmc
test
jo,pn
cltd
rorb
cmp
mov
dec
and
sbb
push
sub
pusha
cmp
aam
inc
mov
aad
mov
cmpb
fistps
into
push
mov
dec
jmp
cli
jns
mov
mov
and
jecxz
cmpsl
cmp
out
lahf
jle
insb
dec
clc
mov
loop
insl
in
ljmp
movsb
int
cmpsl
xor
mov
or
pop
divb
mov
repnz
insl
push
and
add
pop
adc
jmp
imul
push
adc
ds
xor
dec
sbb
icebp
cld
and
mov
xchg
lret
popl
dec
outsl
test
movsb
jmp
xchg
xor
stos
arpl
or
shlb
out
inc
xor
scas
aad
push
movsl
aaa
cmp
mov
xchg
ss
jns
or
arpl
xor
shrb
roll
and
pop
xchg
mov
test
mov
add
scas
and
decb
fmull
pop
mov
movsl
push
out
movsb
cmp
dec
lods
jo
push
cmpsb
bound
sbb
xor
mov
adc
sbb
inc
fmull
cmpsl
repnz
sti
mov
test
and
js
push
mov
sub
loope
or
and
sbbl
sbb
jns
sbb
cmc
sbb
mov
jle
sbb
sahf
mov
push
push
popf
lahf
xor
mov
mov
fdivr
hlt
inc
pusha
dec
jl
test
sbbl
push
mov
insl
test
leave
mov
out
inc
popa
in
mov
loopne
push
inc
dec
mov
fildll
add
subb
fcomps
xlat
xor
adc
jecxz
cmc
jbe
fdivrs
fldenv
dec
ss
aaa
pop
pop
add
push
sub
adc
rclb
xchg
addr16
decl
insl
rorb
icebp
sub
ja
sbb
push
adc
cmp
cmpl
in
lock
fs
cld
test
loopne
cmp
imul
fildl
ss
gs
sbb
in
sbb
sbb
mov
fsubrs
lock
negl
aas
data16
int
jge
sub
mov
in
or
mov
outsl
jae
gs
adc
pop
xchg
mov
mov
sbb
xchg
outsb
stc
popa
mov
popa
iret
jecxz
roll
ja
icebp
pop
or
add
divl
push
adcb
dec
push
dec
movsb
jg
ds
std
stos
jae
outsb
repnz
int3
je
inc
xor
mov
std
jge,pt
arpl
pusha
ret
cmpsl
xorl
fimull
in
xchg
test
adc
xchg
lods
mov
add
ds
hlt
mov
inc
xchg
jecxz
jnp
loopne
cmp
cmp
sub
dec
dec
xor
adc
test
daa
nop
shlb
push
das
push
add
cwtl
push
push
adcl
in
mov
call
pop
jmp
andl
pop
or
sarb
lods
push
mov
jnp
cmpsl
cmpl
and
aad
clc
pop
push
inc
dec
scas
dec
pop
in
aas
mov
xor
fstpl
jecxz
adc
jg
ficomps
mov
push
jbe
icebp
pop
dec
pop
or
push
add
mov
sub
ficoms
dec
sub
jbe
adc
xchg
push
sbb
and
xor
adcb
ret
fidivl
or
mov
and
aam
mov
call
lods
pop
add
cltd
pop
xor
fdivl
popl
jl
fdivl
cmpsl
cwtl
jns
insb
jge
jmp
mov
cwtl
aas
mov
leave
into
jp
test
sahf
adc
xchg
rorb
pop
add
lods
jno
and
ret
imul
sub
loopne
addl
push
push
jecxz
inc
ret
jle
insl
loopne
jb
out
mov
jns
loopne
pushf
cltd
pop
scas
in
adc
orb
leave
mov
push
out
sbb
sub
rcll
sub
ss
add
push
mov
ss
ds
dec
adc
call
rcll
fdivrl
add
jno
xchg
mov
clc
pop
cmp
test
cs
mov
or
imul
in
jno
stc
push
xchg
adc
add
mov
mov
xchg
inc
stos
mov
pop
push
dec
jmp
call
shl
fwait
insl
push
inc
cld
dec
je
test
push
call
jle
jmp
lods
stos
add
jge
sbb
push
pushf
jle
mov
mov
inc
push
lods
jbe
inc
sbb
mov
or
xor
cmp
sub
push
adc
mov
test
fcompl
daa
fldcw
push
aas
xchg
mov
cmp
cmp
scas
jl
mov
mov
fidivrs
cwtl
mov
addr16
push
mov
sbb
sub
scas
divb
cmp
jne
sbb
sub
sub
stos
add
xchg
adc
push
cmc
mov
fs
xor
in
mov
pop
xchg
xchg
pop
cmpsb
add
jle
lock
jno
daa
aad
sahf
pop
xor
daa
outsb
pop
jp
cwtl
mov
mov
inc
mov
js
mov
xorl
adc
clc
pop
lock
in
loopne
pop
cld
je
push
push
push
cmp
lcall
xor
add
ret
lods
sub
nop
daa
ds
inc
dec
xor
gs
cmc
scas
mov
jp
add
in
adc
popa
jl
out
in
mov
leave
mov
cltd
cmp
pop
sbb
clc
andl
call
dec
mov
jl
pop
pop
dec
xchg
xor
idiv
fcomps
popa
mov
sbbb
nop
mov
filds
xor
dec
sarl
mov
cmp
inc
mov
and
or
or
sbb
out
stos
mov
mov
mov
mov
enter
inc
mov
rcrl
lcall
jbe
mov
cwtd
bound
in
jbe
mov
mov
scas
aad
clc
jle
cmpsl
outsl
mov
pop
jmp
mov
cmp
aas
pop
push
sub
mov
leave
outsw
sub
into
jle
mov
out
loopne
adc
pop
leave
pop
inc
hlt
jp
pop
add
test
mov
xor
cltd
fwait
mov
ljmp
shrb
repnz
pop
shlb
enter
test
push
xchg
mov
mov
fstps
in
hlt
cmpsl
adc
mov
adc
mov
data16
pop
inc
sub
or
inc
mov
daa
cmpsb
jp
jmp
jg
xor
cmc
in
lods
pop
push
adc
cwtl
fwait
lahf
fsubr
mov
fistpll
out
push
sbbl
add
test
or
mov
jle
aad
out
xchg
sbb
pop
bound
xor
ss
in
out
das
pop
pop
shll
pushf
or
push
sub
fisttps
mov
rorb
movsl
fcoms
pop
rcrl
push
push
cvtpi2ps
pop
xchg
pop
adc
shll
je
adc
mov
adc
test
xchg
lock
mov
jb
dec
mov
lret
fistpll
rol
test
es
push
in
xchg
xorl
mov
insb
mov
lods
insl
jp
push
mov
cltd
sub
pop
sbb
imul
ret
dec
in
bound
and
leave
sbbl
cwtl
lods
jb
ljmp
ljmp
mov
mov
push
arpl
aad
ret
sti
insb
addl
jnp
sub
leave
inc
fcoms
scas
mov
push
inc
mov
inc
icebp
or
in
sub
adc
pop
jno
jecxz
add
push
leave
pop
sbb
movsl
push
xchg
mov
jecxz
jbe
ds
cmp
cld
jmp
jns
jle
mov
fsubs
call
xchg
addl
xor
push
lcall
clc
and
out
and
ja
lods
mov
adcl
push
add
gs
cmp
inc
js
int
in
lret
and
cmp
jno
nop
mov
sbb
not
leave
lods
stos
dec
gs
jg
xor
pushf
push
or
lods
mov
push
out
add
inc
sahf
test
scas
inc
enter
mov
shll
les
adc
leave
push
mov
sbb
cmp
or
in
in
mov
mov
jne
mov
xchg
add
ret
inc
or
int
movsl
out
xchg
dec
cli
push
dec
jle
push
mov
xchg
out
mov
lea
sbb
aas
sarb
fwait
mov
pop
and
xor
ja
pop
inc
insl
call
cld
inc
sub
pop
mov
shrl
mov
fwait
jne
cmp
jmp
addr16
cld
push
and
mov
xchg
stos
fisubrs
out
popa
into
loope
mov
fcoml
jno
enter
push
mov
imul
sub
in
imul
mov
stos
in
mov
mov
sub
scas
jbe
sbb
popf
insb
stc
cli
mov
xchg
out
fistpl
adc
pop
or
lret
into
xor
negb
push
daa
push
jnp
xor
pop
inc
stc
out
fprem
sbb
in
ret
or
mov
xchg
movsl
jb
dec
out
add
sub
xchg
xchg
arpl
das
outsb
testb
lahf
xchg
sti
and
inc
pop
stos
xor
sbb
movsl
sub
inc
psadbw
out
push
mov
movsb
pop
leave
bound
dec
lds
test
xchg
dec
insl
dec
loop
and
adc
sbb
pop
or
inc
xchg
test
lret
fwait
jb
sbb
or
fdivs
stos
notb
ret
jns
shll
xchg
jle
or
shlb
in
popf
cs
xchg
lods
cmpsl
sbb
repz
into
adc
aad
lret
xchg
mov
sub
scas
push
inc
ja
add
das
fistpll
divb
xor
or
or
in
dec
repz
ja
pop
iret
adc
fs
hlt
jge
adc
das
pop
adc
lret
cmp
mov
imul
std
cld
mov
adc
rcrl
or
jno
in
psubsw
ds
push
mov
jb
js
pop
mov
loop
dec
movsl
and
xor
mov
jl
xor
pop
fldl
mov
xor
push
mov
push
inc
adc
or
lcall
in
lret
repz
adc
mov
push
pusha
mov
mov
mov
sub
sbb
jns
dec
cs
sbb
in
mov
sub
push
xor
arpl
pop
push
push
fstl
lods
push
inc
shll
xor
add
jecxz
fsts
jbe
icebp
pop
mov
ljmp
push
push
rcl
loope
xor
rol
mov
aad
testb
ss
push
jmp
into
push
push
or
adc
pop
js
pop
jmp
mov
add
push
nop
jp
or
jnp
add
mov
cld
jecxz
push
repz
mov
inc
jno
leave
aad
lret
pop
iret
out
push
cs
aam
inc
idivl
jl
bound
add
dec
xor
push
pop
jo
int3
mov
mov
push
nop
cltd
test
notb
push
fimull
das
or
call
shrb
and
xchg
js
adc
sub
sti
and
lret
mov
lcall
mov
aad
sar
mov
int
mov
rcll
sbb
mov
cmp
imul
ljmp
rcll
mov
xchg
pop
mov
xor
mov
sbb
popf
mov
movd
adc
aam
cmp
imul
sub
sbb
sbb
iret
out
divb
shl
out
loope
xchg
test
and
mov
enter
jno,pn
hlt
push
xor
adc
add
sub
mov
test
sub
in
cmp
test
push
jns
mov
cmc
fistpl
fsub
ljmp
mov
das
sarl
mov
xor
mov
out
xchg
push
mov
fldl
or
adc
lds
dec
lock
adc
call
sbb
enter
mov
sub
cmp
xor
xor
push
mov
adc
lret
mov
cs
cmp
leave
push
and
aas
push
mov
and
xor
daa
ja
add
and
loop
add
dec
cli
push
out
push
nop
push
push
cwtl
jecxz
sub
out
arpl
pop
cmp
popf
rorb
movsb
xchg
xchg
test
test
mov
fstl
daa
clc
lods
adc
lahf
xlat
mov
push
sbb
push
push
sbb
sahf
adcl
hlt
push
xchg
push
sti
mov
push
test
jmp
mov
roll
or
movsb
inc
stos
or
mov
mov
mov
dec
and
jns
les
lock
sbb
cmpsb
gs
push
sub
push
sahf
scas
repz
jle
pop
into
loop
push
mov
outsb
cmp
dec
push
jnp
or
dec
mulb
pop
cmovo
cmpl
push
sbb
out
xorb
stos
lahf
sbb
dec
jmp
mov
cmp
pop
push
pop
into
push
in
inc
sti
fstpl
out
xor
push
cmp
mov
mov
push
les
std
mov
lret
sub
jns
add
sbb
fsubl
aad
repnz
push
mov
push
aas
pop
pop
mov
fnstenv
repnz
add
jno,pt
lds
jne
jp
iret
dec
lods
pop
loop
xor
mov
and
sub
mov
mov
leave
outsb
cmp
mov
jno
movsb
bound
jecxz
mov
adc
popa
adc
in
mov
xor
call
and
jle
sbb
dec
ds
sti
mov
out
mov
push
faddl
roll
jecxz
or
out
dec
add
jmp
subl
roll
cmp
push
shll
dec
lods
lcall
leave
test
dec
xor
push
xchg
cmp
mov
sub
push
xchg
or
or
repz
clc
xchg
imul
jge
in
sub
je
xor
popf
adc
negl
mov
loop
jg
sti
imul
rcrb
jo
sub
in
push
jg
sub
scas
test
xchg
jle
sbb
loop
fs
clc
insb
sub
pop
aaa
insl
daa
mov
aam
outsl
iret
push
push
shlb
call
test
fnstenv
ljmp
popa
xor
xchg
adc
jns
push
lcall
sbb
mov
mov
push
inc
sbb
mov
or
daa
mulps
push
mov
dec
jg
add
outsl
dec
call
mov
adc
stc
sub
push
xchg
js
ljmp
sbb
cmc
stc
and
shlb
and
cmp
imulb
jl
adc
lods
imul
mov
push
fisttpll
adc
dec
push
aad
inc
mov
xchg
cmpsb
testb
cli
arpl
rcll
fstps
xor
jns
adc
dec
std
ret
lahf
or
pop
pop
push
pop
ljmp
push
push
fldl
sar
push
andl
xlat
fistpll
mov
sbb
ljmp
shlb
sub
or
inc
xor
mov
jns
loop
popl
les
cmp
mov
mov
inc
loope
imul
xlat
dec
xchg
fstps
mov
fildll
scas
scas
rorl
call
push
xchg
sub
jb
fsubs
js
jbe
fsubrl
nop
inc
mov
stc
mov
adc
xchg
lds
fs
push
cmp
push
cmp
push
lock
lcall
mov
enter
in
xlat
xor
pop
imul
scas
pop
xchg
fidivl
pusha
xlat
dec
mov
cwtl
in
lods
cmp
roll
pop
jbe
inc
mov
test
mov
enter
pop
js
dec
sub
stos
sub
mov
pop
sbb
sti
popa
sub
jle
sbb
mov
shrl
mov
mov
add
mov
cmp
inc
imul
xchg
xlat
xor
int3
ficoms
movsl
pop
je
pop
cmp
xchg
aad
push
cmp
cmp
clc
clc
cmc
notb
jp
mov
sarl
mov
or
mov
cmpsl
xchg
mov
adc
adc
jae
xchg
push
out
or
inc
cli
mov
popf
fcoms
xchg
imul
setbe
cmp
enter
cli
lcall
lea
dec
je
insl
test
adc
lock
ljmp
push
sbb
pop
jge
sub
push
push
mov
lcall
iret
mov
outsl
in
mov
sti
xor
in
leave
into
adc
clc
cmc
add
dec
pop
cmp
sbb
jl
cmp
rcrb
sbb
cmp
lret
negb
pop
push
lock
and
out
scas
jns
jns
shll
sbbb
mov
nop
xchg
test
mov
inc
xor
insb
pop
ljmp
add
lahf
stos
daa
jg
sub
lds
cmp
rcl
jecxz
iret
test
and
push
sbb
setge
insb
xchg
rcrl
xlat
dec
and
ljmp
jle
mov
jnp
mov
pop
outsb
hlt
test
add
sahf
call
in
repnz
in
pusha
cmp
cmp
sbb
pop
aam
adcb
mov
mov
loope
sar
adc
imul
inc
mov
std
cwtl
push
fisubs
mov
fmull
mov
ret
ds
inc
push
lcall
jecxz
fsubrl
sti
test
adc
iret
mov
sbb
mov
xor
xchg
sbb
mov
outsb
sub
gs
ljmp
adc
inc
push
push
loope
mov
adc
mov
popa
rol
out
dec
shl
std
ss
push
ds
mov
out
orb
aad
test
mov
dec
lds
inc
pusha
repz
popa
add
imul
popf
mov
popa
push
in
loop
inc
shl
insl
test
in
insb
dec
mov
pop
das
mov
out
inc
dec
ret
adc
popf
mov
mov
sub
outsb
pop
push
and
jnp
push
adc
dec
cmp
movsl
subl
int3
xchg
les
loop
inc
add
lods
rorb
enter
mov
xchg
int
test
or
out
loopne
pop
aad
out
inc
aaa
mov
stos
adc
in
xchg
sbb
push
js
out
in
push
sub
adc
xor
cmp
inc
cmp
pop
out
push
mov
jno
test
pop
cmp
dec
mov
addr16
in
int3
in
push
mov
cli
add
out
mov
ja
mov
arpl
je
jg
es
mov
pop
sbb
test
aaa
add
push
pop
cmpl
inc
addr16
sbb
push
fwait
xor
jb
testl
shrl
mov
fisubrl
jae
fildll
add
jns
fsubrs
mov
cmpsb
sub
inc
repnz
test
jnp
xchg
pop
inc
out
pop
push
test
jle
sbb
int3
les
and
fnsave
or
out
lahf
add
mov
inc
lods
dec
add
rep
adc
cmc
mov
cltd
repnz
lret
rcl
jp
xor
add
mov
sahf
cmp
mov
jmp
mov
mov
mov
dec
pop
rcrl
mov
cld
into
int
mov
adc
pusha
sub
sbb
mov
jge
in
add
out
inc
sub
test
jle
jo
mov
xchg
leave
movsl
es
and
sbb
daa
xor
dec
ja
add
pop
ficoms
inc
fucom
xchg
movsl
das
inc
push
int3
adc
pop
sbb
add
jge
adc
sbb
dec
jmp
int3
cmp
push
outsl
push
aaa
xor
mov
cmpsb
or
scas
mov
xorl
jbe
inc
pop
testb
adc
outsb
js
out
test
cs
in
mov
mov
add
lahf
outsb
test
rclb
xchg
popa
pop
mov
cmp
shl
cli
add
fs
sbb
dec
jb
dec
xchg
out
mov
pop
and
lods
sbb
adc
outsl
xor
je
add
jmp
mov
mov
sub
xchg
jnp
idiv
mov
aam
push
sbb
jle
out
inc
or
adc
push
mov
fisttpll
mov
bound
cld
xchg
add
push
fnsave
lret
jb
inc
and
enter
jns
sbbl
in
jmp
push
mov
cltd
push
fldenv
repnz
push
cmp
fmul
in
les
jb
cmp
pop
mov
jnp
inc
or
jle
mov
ds
xor
aas
aam
push
push
ja
testl
ficoml
xchg
les
inc
and
mov
ret
push
xor
dec
add
daa
push
cs
or
ljmp
jmp
and
add
cmpsb
push
push
mov
sub
clc
pusha
es
add
push
xchg
xor
xchg
insb
add
out
in
jp
dec
int3
adc
ret
sbb
mov
dec
cvtpi2ps
shr
in
jns,pt
sti
dec
int
rorl
push
mov
add
xor
in
lds
iret
xchg
int
jp,pt
mov
lahf
mov
enter
inc
lock
subb
push
jne
loop
pop
mov
sbb
cmp
adc
push
jge
imul
lahf
ficomps
xor
out
mov
push
dec
add
xchg
push
pop
test
pushf
lret
add
ds
in
dec
popa
int
push
idiv
ret
out
pop
into
xchg
pop
mov
and
in
stc
and
fs
test
cli
ror
push
adc
mov
or
xchg
mov
sub
imul
xchg
add
xor
jo
clc
sub
rcrl
into
push
daa
xchg
mov
push
dec
lahf
mov
data16
mov
and
dec
mov
sar
repz
xlat
test
mov
arpl
movsl
inc
or
fsubs
inc
lahf
mov
push
sub
out
mov
push
pop
das
mov
xor
cmp
cmpsl
scas
mov
mov
popa
fs
sti
mov
pop
add
inc
aam
push
ja
mov
lea
add
mov
popa
rcrb
pop
xor
xchg
xor
jo
daa
fists
test
fdivrs
mov
testb
shrb
dec
lock
out
insb
pushf
mov
dec
jb
das
je
or
lret
pusha
inc
enter
or
lahf
jge
and
cltd
sub
dec
sub
in
das
sub
jae
lods
cmc
daa
pop
pop
rcr
jne
decb
push
call
ss
or
or
in
arpl
decl
xor
jne
mov
and
dec
rol
push
cli
sbb
mov
push
adc
jno
mov
sub
pop
cmc
jae
mov
scas
imul
cli
and
lods
add
sbb
sbb
adc
lahf
aam
push
sbb
xchg
fscale
sbb
mov
idivl
add
inc
jno
test
pushf
and
push
mov
rolb
and
push
add
loope
xor
jle
arpl
stos
dec
hlt
loopne,pt
sbb
xchg
xor
enter
push
mov
mov
shrl
or
in
sub
pop
xchg
lods
cld
jge
xchg
mov
mov
jmp
add
insl
mov
sbb
pop
pop
sbb
pop
fbstp
or
in
es
jl,pn
out
jb
mov
pop
push
lock
add
leave
jno
sbb
sbb
call
rolb
popf
clc
mov
lods
int3
rorl
jp
and
xchg
push
add
mov
das
scas
cwtl
movsb
jno
jecxz
lcall
popf
lds
cmp
or
pop
fs
rcl
cmp
xor
jl
ljmp
pushf
jecxz
in
jge
xor
or
dec
aaa
sar
bound
clc
mov
test
ja
repz
mov
dec
dec
inc
fwait
xor
push
sti
ret
outsb
pop
mov
fisttps
cmpsl
pop
repz
js
pop
mov
cmp
adc
cmp
out
cmp
mov
aaa
mov
lods
inc
mov
addr16
pop
in
and
pop
pop
sub
dec
mov
inc
mov
and
sub
cmp
pop
int
ss
dec
and
sbb
andl
fnstsw
sbb
clc
mov
adc
das
scas
add
cmp
cmp
cmp
ret
sahf
movl
xlat
mov
cs
sbb
inc
insb
data16
cmp
dec
scas
mov
bound
pop
mov
orb
flds
pusha
cmp
xchg
das
pop
and
loop
jmp
notl
stos
out
aam
jg
add
clc
add
in
movsb
mov
cmp
inc
std
cmp
fwait
imul
nop
inc
neg
lcall
int
xor
int
cwtl
xlat
in
inc
ret
movsl
lds
fwait
fwait
or
pop
mov
scas
lahf
fnstenv
jg
jge
jmp
and
xchg
popl
out
or
dec
and
or
sub
das
mov
je
arpl
jle
pop
js
jl
movl
cmc
out
xchg
in
jge
pop
adc
sbb
push
add
cmp
jns
stos
ljmp
sub
aam
jnp
xchg
ljmp
push
dec
call
iret
cmpsb
fisubrs
popa
or
aam
ja
bound
sbb
inc
fisubrl
sarb
mov
xchg
divl
mov
scas
punpcklbw
sub
dec
jne
cltd
and
jmp
jle
sub
xchg
inc
in
lret
stc
dec
mov
jmp
scas
jno
cmpsb
js
cs
cmp
and
ss
ret
cmc
lahf
hlt
cmp
fwait
mov
rolb
fcom
adcb
lret
into
test
outsb
or
mov
enter
rorb
fwait
mov
and
and
or
rcll
mov
dec
lock
dec
shrb
pop
dec
sbb
inc
adc
mov
jecxz
in
pop
dec
mov
int
aas
mov
mov
and
decb
sbb
inc
fldenv
add
in
push
mov
out
test
jne
aaa
icebp
xchg
in
test
fwait
iret
mov
rcrb
negb
shr
ja
jmp
and
std
mov
fistpl
enter
scas
inc
adc
inc
sar
arpl
jno
into
dec
cmpsl
hlt
ret
inc
sti
add
addr16
adc
into
fcoml
inc
test
xor
jo
mov
aad
es
mov
mov
bound
stos
push
in
push
in
aas
cmp
pop
or
pushf
movsb
in
int3
mov
push
sbb
pop
mov
fs
dec
pop
add
loop
mov
mov
and
mov
das
test
aam
pop
imul
aas
inc
inc
cwtl
mov
push
mov
jg
xchg
ret
xchg
sbb
jns
inc
push
and
sbb
cmp
add
sbb
fsubs
popl
setbe
aad
xchg
mov
repnz
repnz
and
in
xchg
xor
imul
loop
jle
cld
lahf
ss
add
dec
imul
cli
mov
pop
lods
aam
outsl
insb
mov
sti
out
jb,pt
or
movsb
outsl
push
iret
xchg
push
xchg
movsb
and
repz
out
lcall
jnp
dec
cli
jae
ret
pop
jmp
cmpb
dec
mov
push
xchg
imul
rcll
adc
loopne
sub
and
jp
xor
dec
cli
mov
popf
fisubrl
fisttpll
mov
mov
xlat
int3
daa
jmp
sub
sbb
subb
andl
sbb
mov
pop
xchg
shl
sti
jns
pop
add
mul
mov
jmp
ds
xchg
nop
popf
bound
sahf
push
daa
push
into
xchg
and
sub
jp
shrb
mov
xlat
je
lods
pop
std
in
arpl
inc
sub
mov
or
xlat
fwait
into
int
inc
xor
cltd
cmp
pop
cltd
scas
push
sarl
sahf
incb
push
idiv
bound
mov
in
aad
xlat
ds
cld
adc
int3
jp
lods
mov
fidivrs
fucomp
inc
push
sub
es
imul
jp
test
inc
pop
mov
ja
test
jnp
mov
sbb
push
gs
dec
dec
faddl
movl
leave
hlt
pop
bndstx
roll
addb
aaa
mov
push
inc
es
cmp
lahf
clc
pop
xchg
xor
jle
jl
jo
or
cmp
out
xor
adc
xor
mov
aad
lea
push
add
fcompl
cltd
pop
icebp
es
jle
jno
sub
and
fists
arpl
out
add
sub
cmp
gs
dec
sub
ret
cld
int3
movsb
mov
cmpsb
cs
mov
fstpl
shrb
xchg
jo
scas
lock
adc
dec
icebp
mov
inc
cltd
cs
pusha
push
repz
andb
jl
roll
pop
sub
outsb
outsl
aad
xchg
xchg
jp
mov
adc
pushf
sub
xorl
aam
mov
pop
mov
sahf
push
sti
xchg
out
adc
mov
cmp
out
je
push
mov
mov
add
add
adc
nop
inc
clc
fstl
iret
sbb
clc
divl
loope
sub
pop
out
jle
mov
iret
cmp
cmpsb
call
sub
enter
scas
cwtl
push
pop
push
mov
fwait
mov
int
jge
test
lods
into
enter
mov
nop
pop
int
stos
xor
xor
std
and
xor
les
dec
add
inc
jg
add
dec
cs
sbb
movsb
and
jp
cltd
mov
adc
mov
xchg
mov
xor
dec
cwtl
call
fnstcw
mov
inc
es
aam
ret
popa
cmpsb
adc
mov
loopne
nop
inc
lahf
sbb
or
xchg
out
xchg
ret
out
mov
js
jae
sub
call
mov
in
push
push
into
mov
push
push
outsl
inc
bound
adc
mov
jno
neg
mov
and
movsl
ss
popa
add
xor
stos
jp
xor
data16
push
std
jns
into
arpl
cmc
shlb
mov
cmp
push
xor
pop
shl
jge
cmp
cld
dec
or
push
mov
adc
sbb
dec
or
ss
pop
mov
stos
mov
test
jmp
js
rcll
mov
ret
and
xor
lret
adc
stc
js
ficomps
push
std
jae
notb
jno
pop
mov
test
sbbb
das
xchg
imul
sub
mov
mov
xor
int
dec
xchg
cmp
insl
call
sub
and
xchg
pop
adc
lea
lods
sbb
mov
pushf
dec
scas
aaa
imulb
or
outsb
sbb
movsb
sbb
aaa
scas
insl
jno
int3
sub
push
stc
out
xchg
gs
ljmp
fwait
dec
stos
jge
daa
jge
inc
push
cmpsb
xchg
push
mov
mov
scas
add
or
jge
dec
fucomp
in
mov
dec
push
stos
cs
add
add
test
lahf
xchg
gs
jb
xchg
sub
out
js
xchg
xchg
push
fcompl
mov
imul
jnp
mov
mov
dec
repnz
mov
ljmp
enter
dec
loopne
xchg
inc
cmpsl
dec
cli
mov
ss
aaa
bnd
shrl
dec
push
icebp
pop
ret
xor
cmp
xor
into
mov
outsl
aam
sarb
mov
int3
repnz
mov
jnp
inc
xchg
lcall
push
dec
jl
or
outsb
pop
loopne
movsl
inc
mov
gs
rcll
pop
stos
insl
imul
popf
lock
cs
lods
push
cmpsl
dec
lret
es
sbb
inc
xor
push
daa
cmp
cmpsl
loopne
sti
lea
daa
and
mov
call
ja
or
and
icebp
mov
lock
psubw
int3
pop
and
loopne
ret
and
bound
mov
xorb
mov
hlt
sbb
ja
insb
ja
lods
jbe
fstl
call
and
mov
imul
bound
rolb
std
in
pop
jbe
jmp
jmp
imul
cli
mov
insl
adcl
in
push
mov
dec
cltd
adc
mov
jae
jne
lods
in
sbb
ret
and
pop
adc
frstors
jns
mov
fdivs
out
xor
inc
outsb
mov
push
push
inc
fcmovnu
popf
inc
fcompl
lods
fiaddl
fisttpll
mov
fsubs
mov
aas
add
ficompl
mov
xchg
movsb
sarb
int
push
jb
je
popa
aas
cwtl
testl
inc
adc
push
mov
loop
adc
inc
push
popa
xchg
je
push
add
xchg
and
movsb
and
sahf
ds
scas
or
cmp
cmpsb
mov
mov
inc
pop
adc
ret
test
in
insb
dec
in
fisttpll
loop
dec
lock
test
les
xchg
mov
push
loopne
add
ss
int
addr16
jl
inc
ljmp
xor
imul
insb
mov
clc
fisubrl
jmp
orl
out
outsl
cmp
test
sub
fistpl
jns
call
xchg
loopne
jmp
add
and
and
sti
add
and
test
dec
ljmp
mov
push
sti
lods
dec
pop
ja
mov
xor
xor
jae
sub
and
jne
push
jg
mov
ljmp
arpl
cmp
pop
inc
adc
stos
pop
jb
sbb
mov
xchg
stos
call
mov
das
clc
pop
mov
fimull
inc
adc
dec
inc
or
xchg
dec
xor
je
lods
lods
push
loop
lods
sarb
pop
ja
cmp
sub
ja
mov
mov
add
bound
mov
pop
imul
hlt
pop
mov
inc
fs
stc
mov
stos
or
sbb
insb
fsts
sub
adc
movsl
mov
sti
or
add
xchg
pop
es
loop
mov
daa
in
rcrb
mov
stc
test
pop
je
jmp
pop
js
xlat
xchg
fsincos
jnp
cmc
mov
jns
cli
jnp
icebp
push
pop
pop
mov
lds
xor
mov
data16
mov
xor
scas
xchg
cmp
fdecstp
out
dec
cmp
pop
inc
je
jmp
inc
imul
outsl
xor
enter
xor
adc
pop
fbstp
arpl
mov
or
mov
push
push
dec
movb
and
call
or
int3
pop
ljmp
add
inc
imul
push
imul
inc
aaa
insl
xchg
sub
jg
xchg
outsb
cmpsb
loope
shr
cwtl
mov
push
or
cwtl
fisubrs
inc
xlat
sub
add
arpl
pop
lea
mov
lea
pushf
test
rcll
lods
int
pop
cmpsl
call
adc
pop
mov
and
imul
stos
cmp
and
bound
or
leave
dec
or
pop
icebp
dec
leave
shrb
pop
push
xor
xchg
cmovne
xchg
scas
test
xor
or
gs
out
cwtl
bnd
or
push
pop
es
push
out
ret
mov
inc
cmpl
mov
test
cmpsb
cmp
ljmp
ret
add
fbld
dec
xchg
pop
mov
push
jno
mov
mov
add
sbb
outsl
imul
in
mov
inc
mov
inc
out
xchg
or
cmc
add
loopne
and
test
xor
mov
stos
aaa
push
inc
out
std
les
jb
lahf
xchg
nop
xchg
insl
push
inc
dec
or
mov
and
fisubl
inc
notl
cmp
jbe
jnp
mov
sahf
push
mov
sbb
inc
jecxz
jno
mov
lcall
ljmp
jno
out
in
popa
adc
mulb
lods
outsl
mov
push
mov
push
jb
fcomps
ss
jbe
loopne
jnp
icebp
mov
inc
or
pop
push
out
adc
outsl
dec
inc
lahf
lock
sbb
sarl
or
rcrl
and
aas
pop
cld
imul
mov
jne
cs
mov
loopne
bound
jge
imul
fnstsw
and
push
sub
es
loopne
mov
lret
movsb
mov
xor
jl
jge
adc
or
rorb
ljmp
push
ret
rorb
push
cli
jnp
mov
popa
mov
jmp
or
cmpsl
pop
jno
jo
std
aad
cs
jecxz
add
pop
into
lahf
push
imul
or
xchg
add
or
mov
jbe
arpl
sbb
pusha
test
bnd
or
sarb
loop
cltd
enter
xchg
das
dec
sub
scas
loopne
and
jmp
mov
repnz
jne
pop
mov
sti
rep
lea
mov
sub
aaa
sub
out
ljmp
adc
mulb
je,pn
dec
hlt
pop
adc
fdivr
pop
insl
xchg
cmp
into
pop
cs
test
xchg
popl
mov
adc
mov
mov
mov
push
adc
pop
pop
cmp
bound
movsb
sub
mov
add
or
or
in
pop
stos
cmpsb
xchg
data16
js
out
aam
in
je
js
in
sub
aad
add
loop
jae
imul
aam
jnp
adc
add
inc
or
fadds
scas
inc
iret
mov
jle
cmp
popf
pop
addl
ret
sub
icebp
ret
mov
sti
adcl
sti
mov
xchg
in
pop
lahf
in
jne
ljmp
popa
and
in
pop
push
in
cmpb
add
imul
xchg
andb
adc
add
dec
mov
repz
push
and
pop
push
jbe
aad
jns
xor
xor
js
push
out
cltd
add
movsl
lea
loope
je
scas
or
ljmp
push
js
push
outsl
mov
subb
jno
xor
push
cld
xor
push
or
and
pop
pop
sbb
pop
cmp
add
xchg
add
mov
add
push
add
clc
shll
rolb
lret
jp
push
loopne
push
xor
pop
jle
fldenv
faddp
push
push
xchg
cs
in
out
cwtl
test
mov
jl
xor
jnp
jne
mov
dec
dec
pop
sahf
and
pop
pop
dec
fs
loope
enter
sbb
push
xor
inc
je
int3
xor
dec
xor
mov
inc
data16
rolb
call
mov
mov
cmp
mov
cwtl
and
mov
es
scas
xchg
insl
mov
popf
test
xlat
push
sub
insl
fldcw
mov
cmpsl
js
cmp
inc
sbb
jae
clc
xchg
leave
xorb
mov
aaa
jp
xchg
push
das
lds
inc
lock
jmp
fcmovnu
pushl
pop
scas
and
lods
xchg
cwtl
out
jp
sbb
dec
mov
test
mov
sbb
mov
sbb
sarb
lret
sbb
push
pop
sub
jb
mov
shrb
cmc
enter
sub
sbb
aas
daa
mov
jo
jnp
cmpsl
push
stc
dec
and
pop
and
xor
in
push
arpl
mov
lcall
cltd
jno
mov
movsb
sub
out
jo
mov
pop
push
gs
mov
loop
mov
movsl
divb
rorb
inc
cmpsb
js
imul
mov
shlb
ds
aaa
xor
flds
sub
ja
jb
ss
xor
cmp
fisttps
scas
in
imul
pop
mov
outsb
mov
mov
add
fnsave
add
mov
adc
insl
inc
dec
cmc
dec
pop
and
enter
orb
je
sbb
stos
sub
inc
aad
jb
xor
sbb
pop
bsr
stos
mov
add
push
test
adc
jns
xchg
jecxz
cmp
nop
loope
pop
jl
insb
imul
mov
mov
jge
and
mov
cmp
fstpl
fsubs
or
mov
punpckhwd
imul
in
push
dec
mov
lret
cmp
mov
or
mov
mov
sahf
lods
aaa
cmp
pop
out
xchg
mov
int
and
lret
arpl
into
and
repz
sub
enter
pop
xor
xchg
call
add
pop
push
sbb
xchg
xlat
cld
ljmp
push
or
das
fnstenv
mov
add
push
xchg
push
dec
push
jg
and
movsl
jecxz
jns
push
mov
sbb
pop
inc
stos
pop
mov
jno
lcall
xor
movsb
pop
fldt
fildll
push
fstpl
dec
xchg
mov
dec
das
std
cli
mov
jb
out
cwtl
addr16
imull
loopne
fs
inc
sub
pop
test
xchg
push
or
cli
test
mov
and
sahf
mov
cld
sahf
push
cmp
outsb
jb
cmp
jo
enter
add
and
xchg
cli
mov
pop
jne
jmp
xor
and
es
mov
cmp
mov
je
pop
movsl
adc
int
sbb
sbbb
or
imul
lods
pop
mov
adc
mov
int3
jae
xchg
fidivs
jle
fdivr
andl
mov
subb
call
cld
leave
or
xor
bound
pop
push
mov
dec
adc
or
pop
inc
scas
stos
mov
mov
xlat
dec
pop
or
pop
dec
mov
aaa
les
fmull
and
adc
insl
inc
mov
cmp
jmp
push
sub
xchg
rolb
stos
les
out
pop
and
dec
cmp
cli
scas
call
jne
xchg
gs
mov
xor
jl
in
out
in
pop
inc
or
add
imull
lods
lahf
and
std
pop
vucomiss
xchg
add
sbb
xchg
xor
les
push
dec
push
loopne
pop
cmp
test
pop
ss
inc
hlt
xchg
push
rclb
addb
xlat
aaa
xchg
jo
incb
or
fs
xchg
mov
test
test
pop
leave
inc
fildll
lret
mov
mov
xchg
call
jecxz
lods
jno
pop
mov
xor
rcll
aad
clc
mov
inc
sbb
inc
test
xchg
add
inc
sub
push
jge
subw
stc
fcomi
xor
sub
cwtl
xor
aad
or
mov
xor
inc
movsl
xor
xor
daa
mov
mov
jnp
or
stos
push
add
or
add
gs
scas
jbe
adc
fucom
stos
jb
push
nop
hlt
lods
lods
jb
mov
ret
or
push
mov
xchg
push
movsl
divps
repz
nop
and
rcrl
loop
hlt
mov
push
jmp
loopne
ds
dec
xchg
push
xchg
cmp
call
sub
mul
lahf
loope
and
ss
popf
leave
daa
or
mov
dec
mov
sbb
and
cltd
mov
mov
dec
jg
incb
xchg
jns
xor
sub
sub
jno
mov
cmc
mov
test
repnz
xchg
in
ja
jae
pushf
push
inc
inc
inc
repnz
adc
movsl
and
cmp
xor
call
push
mov
mov
xor
testl
jge
adc
cld
aas
mov
or
mov
pop
push
les
adc
dec
lret
jl
hlt
repz
push
and
rolb
sub
xchg
outsl
mov
fsubrp
jmp
sarl
in
ss
in
leave
rcrl
and
cld
xchg
xchg
cmp
mov
dec
jmp
and
rorb
mov
lock
add
test
jne
lcall
pop
xchg
fwait
lock
or
xchg
jb
es
add
jmp
pop
es
xor
daa
daa
pop
and
xor
dec
adc
ljmp
push
mov
xor
inc
or
std
xchg
out
fiadds
xchg
push
scas
sub
mov
push
popf
push
fiadds
repz
fistps
jecxz
xchg
jns
sub
xlat
jne
fistps
lret
and
jp
jbe
xchg
sub
pop
js
and
test
sbb
xlat
inc
rolb
xchg
sbb
imul
xor
mov
das
push
test
xchg
xchg
loop
sub
xor
shrl
imul
sub
sub
xchg
cmp
lret
sbb
lahf
sbb
jnp
icebp
cmc
jecxz
push
sbb
loop
lahf
cmp
sub
jmp
xor
add
jmp
movsb
cmp
mov
or
in
insb
xchg
or
push
das
push
imull
or
popa
es
dec
mov
divb
or
stos
xchg
aaa
ja
loope
xor
popf
xchg
dec
inc
mov
dec
or
outsb
xchg
scas
imull
in
adc
inc
push
pop
rcll
aas
xor
cmpsl
and
rcrl
cmp
insl
jnp
es
xor
cmp
and
jnp
xchg
scas
outsl
inc
jno
sub
dec
or
xor
adc
repnz
cmp
cwtl
inc
fstps
enter
mov
dec
loopne
sub
inc
adc
push
jno
orb
adc
inc
pop
dec
or
and
iret
mulb
stos
push
mov
push
cmp
imul
in
dec
dec
sub
sub
and
shlb
repz
lods
or
ja
inc
dec
adc
sub
rcll
test
sub
ret
xchg
add
mov
in
jge
adcb
ja
lahf
into
pop
js
jae
xchg
fwait
ja
ja
mov
xchg
ret
sbb
and
push
pop
xor
adc
dec
lods
sub
test
xorb
push
popf
imul
add
mov
pop
jns
xchg
cmp
sub
cs
clc
xor
mov
pop
loopne
mov
add
repnz
mov
mov
jae
mov
outsl
inc
or
sbb
mov
out
pusha
sbb
icebp
sbb
xchg
and
movsb
jbe
xor
inc
test
mov
out
insl
outsl
lea
pushf
mov
hlt
dec
sub
das
pop
jnp
les
cmp
movsb
rcll
clc
jmp
test
lods
jb
pop
fst
lods
inc
mov
jne
sbb
xchg
xchg
or
cwtl
mov
loop
cmp
in
or
into
movsb
pop
or
adc
dec
idivl
xchg
add
xor
mov
nop
sti
jp
and
xchg
sbb
pop
cmp
jge
out
xor
int3
push
jecxz
xor
fisubrl
xchg
fnstsw
xchg
in
in
movsb
jbe
jno
test
into
inc
cld
cmp
mov
cmp
mov
cmp
mov
xchg
xlat
xor
sub
mov
insl
leave
sbb
imul
mov
push
mov
add
xor
outsl
incl
ss
addb
lahf
add
or
aas
fstpl
fsubrs
loop
lcall
daa
fidivrl
cmp
sbb
fsubs
dec
mov
imul
sbb
sub
pop
mov
sub
jb
lea
push
rcl
out
dec
arpl
test
jecxz
test
push
xchg
xlat
into
jnp
into
dec
je
sub
pop
mov
adc
lods
cmp
fs
sbb
jge
test
call
and
and
add
stc
jmp
or
sub
push
pop
repz
jp
sbb
cli
adc
pop
cmp
daa
repnz
insl
and
mov
xchg
cli
sbb
mov
mov
iret
out
jg
cmpsl
mov
mov
xchg
cmp
lock
sahf
fbstp
clc
add
mov
aas
rorb
push
and
push
movsb
cmp
imul
out
fidivl
jmp
rcrl
mov
or
addr16
sub
xorl
jno
ret
mov
test
jl
leave
and
mov
test
jb
cmp
add
push
cmp
or
push
es
fucompp
mov
mov
test
inc
sub
mov
data16
arpl
fs
add
add
push
mov
sbb
pop
mov
pop
mov
and
ret
ljmp
clc
lods
icebp
scas
imul
xchg
addr16
xchg
mov
dec
in
sub
dec
addl
xlat
outsl
das
jo
inc
stos
sarl
adc
mulb
sahf
push
iret
pop
jle
lods
call
push
adc
pop
push
push
icebp
test
outsb
jb
or
ret
insl
push
sbb
pop
xor
in
stos
sub
dec
fistpl
pusha
or
adc
pushf
or
iret
and
popa
leave
inc
jo
out
mov
xchg
pop
stos
shlb
push
cwtl
ds
jmp
fwait
xor
or
mov
out
addr16
ljmp
sbb
out
sbb
test
fninit
sub
cmp
cmp
cmpsl
jne
jne
pop
lret
aam
ja
out
stos
sbb
into
orb
mov
pop
bsf
lods
mov
or
cmpsb
lods
adc
mov
lods
test
and
mov
xchg
xchg
cltd
test
add
cmp
inc
xchg
add
scas
icebp
fstps
push
add
dec
jne
jno
mov
mov
je
lock
or
popa
adc
jp
sbbb
adc
imul
bound
and
imul
in
call
mov
cmp
xchg
repnz
inc
in
cld
mov
or
jl
mov
shr
jp
mov
dec
add
data16
daa
into
subb
lock
cmpb
mov
inc
in
lret
lea
mov
dec
jl
push
jae
jbe
lret
test
or
popa
mov
enter
xor
ljmp
adc
shl
loop
addr16
int3
inc
test
inc
not
add
or
xchg
push
mov
stc
lods
pop
push
jnp
or
cmp
xchg
push
rolb
mov
push
jecxz
in
cs
cmp
push
inc
inc
cli
cmp
in
mov
std
fyl2xp1
mov
cltd
add
inc
or
dec
inc
adc
repz
roll
push
inc
jge
sub
push
mov
arpl
test
pop
callw
push
xor
pop
jge
test
pop
int
sbb
inc
jnp
jmp
push
cmp
pop
mov
fidivrl
sub
in
mov
xorl
cwtl
inc
push
pop
jle
mov
movsl
mov
jae
int
mov
cld
jp
lcall
aad
push
mov
ja
rcll
inc
mov
cmpsl
sbb
push
mov
pop
xlat
and
sub
test
mov
add
ljmp
idiv
cmpsb
dec
outsl
cmpsb
cmp
fdivrl
call
push
inc
cmc
das
dec
or
mov
pop
mov
inc
inc
mov
jg
ss
fnsave
fisttpl
or
and
jbe
jmp
cld
dec
jo
movsl
addb
jae
cwtl
or
mov
jl
outsb
mov
mov
push
test
lds
mov
pusha
out
int
xor
stc
dec
add
add
mov
mov
xchg
lahf
pop
jnp
mov
push
mov
mov
std
dec
sbb
imul
repnz
call
das
adc
in
insb
mov
arpl
jae
xorb
xor
cli
adc
scas
out
jl
jg
mov
clc
cmp
cmc
addr16
inc
inc
mov
xchg
cwtl
dec
sbb
jge
aad
aas
jns
xlat
pop
cmpsb
jg
js
and
das
daa
jbe
testl
ficomps
repz
jns
sub
adc
test
cltd
fdivr
shl
lea
pop
cmpsl
rcl
test
adc
cmp
cmp
xchg
loop
mov
mov
mov
addr16
std
lea
pushf
xor
iret
out
inc
mov
jae
mov
js
add
jns
inc
dec
arpl
mov
es
stos
jo
stos
stos
mov
test
push
call
pop
out
xor
inc
cwtl
push
push
sbb
cmpsl
push
add
inc
repnz
push
arpl
cli
mov
pop
test
dec
sub
cld
or
stos
popf
mov
rcll
inc
push
or
in
cmc
shlb
sarb
sub
sarl
out
jle
dec
rclb
shlb
popf
sbb
xor
or
mov
iret
xchg
add
jle
xchg
dec
inc
icebp
dec
cmc
sub
out
jae
jl
jl
dec
out
push
mov
in
popa
mov
adc
push
adc
xchg
sbb
int
jge
jmp
lock
sub
mov
rolb
insl
inc
mov
xor
pop
scas
in
mov
int3
stc
cmp
pushf
dec
dec
sbb
jmp
pop
aas
cmpsl
inc
and
adc
mov
sub
inc
or
cmp
in
push
stos
stc
je
inc
push
dec
jmp
movsl
push
xor
fists
inc
push
bound
cwtl
cwtl
xor
ds
std
js
add
inc
and
add
inc
jb
inc
bound
xlat
pop
xor
push
int3
push
jae
setne
insb
or
lock
pop
enter
lods
aaa
sub
or
push
call
and
jp
and
xchg
jl
test
xor
jle
sub
mov
lret
mov
xchg
cmp
imul
test
lods
xor
cltd
sub
lods
outsb
and
jge
and
xchg
mov
sub
in
or
aad
addr16
out
inc
adcl
aas
add
inc
xor
push
scas
pop
sti
pop
lahf
jbe
fmull
mov
out
rorb
jge
push
cli
outsb
adcb
push
mov
add
jecxz
xor
iret
out
in
mov
dec
sti
movsb
cli
or
push
leave
jae
ss
sbb
enter
ret
cltd
jb
pop
arpl
jmp
std
fsubrs
cli
jnp
push
out
out
ss
nopl
mov
jnp
jne
je
test
mov
mov
test
mov
test
xchg
cmp
jg
sub
sub
add
inc
rolb
xor
add
dec
rolb
pop
rolb
add
add
dec
rolb
pop
rolb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
